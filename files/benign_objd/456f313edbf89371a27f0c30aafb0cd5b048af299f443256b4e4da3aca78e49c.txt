
456f313edbf89371a27f0c30aafb0cd5b048af299f443256b4e4da3aca78e49c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x7ac15]        # 0x47bc30
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x7ac16]        # 0x47bc40
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x7ac19]        # 0x47bc50
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x7abdc]        # 0x47bc20
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x7a96f]        # 0x47b9c0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x7abb1]        # 0x47bc10
  40105f:	mov    DWORD PTR [rip+0x82fa3],edx        # 0x484008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4389c0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x433160
  401081:	mov    rdx,QWORD PTR [rip+0x7a9d8]        # 0x47ba60
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x7a9be]        # 0x47ba50
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x7aa44]        # 0x47bae0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x7a95b]        # 0x47ba00
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x432d40
  4010af:	mov    rax,QWORD PTR [rip+0x7a89a]        # 0x47b950
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4389c0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x31f19]        # 0x433040
  401127:	call   0x433030
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x7a9b5]        # 0x47bb20
  40116b:	lea    r8,[rip+0x82ea6]        # 0x484018
  401172:	lea    rdx,[rip+0x82ea7]        # 0x484020
  401179:	lea    rcx,[rip+0x82ea8]        # 0x484028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x82e78],eax        # 0x484000
  401188:	lea    rax,[rip+0x82e71]        # 0x484000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x7a935]        # 0x47bad0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4389d8
  4011a3:	mov    DWORD PTR [rip+0x82e67],eax        # 0x484010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x7aa4a]        # 0x47bc10
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x7a83b]        # 0x47ba30
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x855f6]        # 0x4867f8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x7a817]        # 0x47ba40
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x82dba],0x1        # 0x484004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x7a73c]        # 0x47b9a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x433350
  40127d:	lea    rcx,[rip+0x3266c]        # 0x4338f0
  401284:	call   QWORD PTR [rip+0x85566]        # 0x4867f0
  40128a:	mov    rdx,QWORD PTR [rip+0x7a78f]        # 0x47ba20
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x433800
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x438a00
  4012a5:	call   0x433140
  4012aa:	mov    rax,QWORD PTR [rip+0x7a70f]        # 0x47b9c0
  4012b1:	mov    QWORD PTR [rip+0x84920],rax        # 0x485bd8
  4012b8:	mov    rax,QWORD PTR [rip+0x7a731]        # 0x47b9f0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x848b9],rax        # 0x485bd0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x38cca],eax        # 0x43a000
  401336:	mov    r12d,DWORD PTR [rip+0x82ceb]        # 0x484028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x438800
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x82cc2]        # 0x484020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x438788
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x438800
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4387f0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x82c6a],rbp        # 0x484020
  4013b6:	call   0x432d10
  4013bb:	mov    rax,QWORD PTR [rip+0x7a60e]        # 0x47b9d0
  4013c2:	mov    rdx,QWORD PTR [rip+0x82c4f]        # 0x484018
  4013c9:	mov    ecx,DWORD PTR [rip+0x82c59]        # 0x484028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x82c3c]        # 0x484018
  4013dc:	mov    rdx,QWORD PTR [rip+0x82c3d]        # 0x484020
  4013e3:	call   0x438c50
  4013e8:	mov    ecx,DWORD PTR [rip+0x82c1a]        # 0x484008
  4013ee:	mov    DWORD PTR [rip+0x82c18],eax        # 0x48400c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x82c02]        # 0x484004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4389a0
  40140b:	mov    eax,DWORD PTR [rip+0x82bfb]        # 0x48400c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x7a609]        # 0x47ba40
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4389b0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x7a63d]        # 0x47baa0
  401463:	mov    rcx,QWORD PTR [rip+0x7a626]        # 0x47ba90
  40146a:	call   0x438960
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x85287]        # 0x486720
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x7a619]        # 0x47bac0
  4014a7:	mov    rcx,QWORD PTR [rip+0x7a602]        # 0x47bab0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x438960
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4388a0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x7a735]        # 0x47bc10
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x432d50
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x7a705]        # 0x47bc10
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x432d50
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	mov    eax,DWORD PTR [rdx+0x7c]
  401533:	cmp    DWORD PTR [rcx+0x7c],eax
  401536:	mov    edx,0xffffffff
  40153b:	setg   al
  40153e:	movzx  eax,al
  401541:	cmovl  eax,edx
  401544:	ret    
  401545:	nop
  401546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401550:	push   rbx
  401551:	sub    rsp,0x20
  401555:	mov    rbx,rdx
  401558:	mov    rdx,rcx
  40155b:	lea    rcx,[rip+0x39a9e]        # 0x43b000
  401562:	call   0x405530
  401567:	test   rbx,rbx
  40156a:	je     0x40158b
  40156c:	nop    DWORD PTR [rax+0x0]
  401570:	mov    rax,QWORD PTR [rbx]
  401573:	lea    rcx,[rip+0x39a8d]        # 0x43b007
  40157a:	mov    rdx,QWORD PTR [rax]
  40157d:	call   0x405530
  401582:	mov    rbx,QWORD PTR [rbx+0x8]
  401586:	test   rbx,rbx
  401589:	jne    0x401570
  40158b:	lea    rcx,[rip+0x39a73]        # 0x43b005
  401592:	add    rsp,0x20
  401596:	pop    rbx
  401597:	jmp    0x405530
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	push   rdi
  4015a1:	push   rsi
  4015a2:	push   rbx
  4015a3:	sub    rsp,0x20
  4015a7:	xor    r8d,r8d
  4015aa:	mov    rsi,rcx
  4015ad:	mov    rcx,rdx
  4015b0:	lea    rdx,[rip+0x39a54]        # 0x43b00b
  4015b7:	call   0x419c40
  4015bc:	mov    rcx,QWORD PTR [rax]
  4015bf:	mov    rdi,rax
  4015c2:	test   rcx,rcx
  4015c5:	je     0x4015f0
  4015c7:	lea    rbx,[rax+0x8]
  4015cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015d0:	call   0x4182b0
  4015d5:	add    rbx,0x8
  4015d9:	mov    rcx,rsi
  4015dc:	mov    rdx,rax
  4015df:	call   0x409af0
  4015e4:	mov    rcx,QWORD PTR [rbx-0x8]
  4015e8:	mov    rsi,rax
  4015eb:	test   rcx,rcx
  4015ee:	jne    0x4015d0
  4015f0:	mov    rcx,rdi
  4015f3:	call   0x41a040
  4015f8:	mov    rax,rsi
  4015fb:	add    rsp,0x20
  4015ff:	pop    rbx
  401600:	pop    rsi
  401601:	pop    rdi
  401602:	ret    
  401603:	nop    DWORD PTR [rax]
  401606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401610:	push   rsi
  401611:	push   rbx
  401612:	sub    rsp,0x28
  401616:	mov    ebx,DWORD PTR [r8]
  401619:	mov    rsi,r8
  40161c:	call   0x438788
  401621:	movsxd rdx,ebx
  401624:	cmp    rdx,rax
  401627:	cmovbe ebx,eax
  40162a:	mov    DWORD PTR [rsi],ebx
  40162c:	add    rsp,0x28
  401630:	pop    rbx
  401631:	pop    rsi
  401632:	ret    
  401633:	nop    DWORD PTR [rax]
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	push   rbp
  401641:	push   rdi
  401642:	push   rsi
  401643:	push   rbx
  401644:	sub    rsp,0x28
  401648:	xor    edi,edi
  40164a:	mov    rsi,rcx
  40164d:	call   0x438788
  401652:	cmp    eax,0x3
  401655:	jle    0x401661
  401657:	movsxd rbx,eax
  40165a:	cmp    BYTE PTR [rsi+rbx*1-0x3],0x2e
  40165f:	je     0x401670
  401661:	mov    eax,edi
  401663:	add    rsp,0x28
  401667:	pop    rbx
  401668:	pop    rsi
  401669:	pop    rdi
  40166a:	pop    rbp
  40166b:	ret    
  40166c:	nop    DWORD PTR [rax+0x0]
  401670:	movsx  ecx,BYTE PTR [rsi+rbx*1-0x2]
  401675:	mov    rbp,QWORD PTR [rip+0x854ac]        # 0x486b28
  40167c:	call   rbp
  40167e:	cmp    eax,0x70
  401681:	jne    0x401661
  401683:	movsx  ecx,BYTE PTR [rsi+rbx*1-0x1]
  401688:	xor    edi,edi
  40168a:	call   rbp
  40168c:	cmp    eax,0x63
  40168f:	sete   dil
  401693:	jmp    0x401661
  401695:	nop
  401696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016a0:	push   r15
  4016a2:	push   r14
  4016a4:	push   r13
  4016a6:	push   r12
  4016a8:	push   rbp
  4016a9:	push   rdi
  4016aa:	push   rsi
  4016ab:	push   rbx
  4016ac:	sub    rsp,0x28
  4016b0:	mov    rbp,rcx
  4016b3:	call   0x438788
  4016b8:	mov    rcx,rbp
  4016bb:	mov    rbx,rax
  4016be:	mov    r12d,eax
  4016c1:	call   0x4182b0
  4016c6:	cmp    ebx,0x1
  4016c9:	mov    rsi,rax
  4016cc:	jle    0x4016dc
  4016ce:	movsxd rax,ebx
  4016d1:	cmp    BYTE PTR [rbp+rax*1-0x1],0x5c
  4016d6:	je     0x401890
  4016dc:	movzx  r10d,BYTE PTR [rbp+0x0]
  4016e1:	mov    r9,rbp
  4016e4:	test   r10b,r10b
  4016e7:	jne    0x4016fd
  4016e9:	jmp    0x401714
  4016eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	add    r9,0x1
  4016f4:	movzx  r10d,BYTE PTR [r9]
  4016f8:	test   r10b,r10b
  4016fb:	je     0x401714
  4016fd:	cmp    r10b,0x5c
  401701:	jne    0x4016f0
  401703:	mov    BYTE PTR [r9],0x2f
  401707:	add    r9,0x1
  40170b:	movzx  r10d,BYTE PTR [r9]
  40170f:	test   r10b,r10b
  401712:	jne    0x4016fd
  401714:	mov    rcx,rsi
  401717:	call   0x4341e0
  40171c:	mov    rcx,rsi
  40171f:	mov    rdi,rax
  401722:	call   0x40e6e0
  401727:	test   rdi,rdi
  40172a:	je     0x4018d9
  401730:	lea    rcx,[rip+0x39910]        # 0x43b047
  401737:	mov    rdx,rbp
  40173a:	lea    r14d,[r12+0x1]
  40173f:	movsxd r12,r12d
  401742:	call   0x405530
  401747:	add    DWORD PTR [rip+0x828ee],0x1        # 0x48403c
  40174e:	lea    r13,[r12+0x1]
  401753:	mov    rcx,rdi
  401756:	call   0x4343c0
  40175b:	test   rax,rax
  40175e:	je     0x4017fa
  401764:	lea    rbx,[rax+0x8]
  401768:	mov    rcx,rbx
  40176b:	call   0x438788
  401770:	mov    rcx,rbx
  401773:	mov    r15,rax
  401776:	call   0x401640
  40177b:	test   eax,eax
  40177d:	je     0x401812
  401783:	lea    ecx,[r15-0x2]
  401787:	movsxd rcx,ecx
  40178a:	call   0x40e5c0
  40178f:	lea    rcx,[rip+0x398ca]        # 0x43b060
  401796:	mov    rdx,rbx
  401799:	mov    rsi,rax
  40179c:	call   0x405530
  4017a1:	lea    r8d,[r15-0x3]
  4017a5:	mov    rdx,rbx
  4017a8:	mov    rcx,rsi
  4017ab:	movsxd r8,r8d
  4017ae:	call   0x438778
  4017b3:	mov    rcx,QWORD PTR [rip+0x8289e]        # 0x484058
  4017ba:	movsxd rax,r15d
  4017bd:	mov    rdx,rsi
  4017c0:	mov    BYTE PTR [rsi+rax*1-0x3],0x0
  4017c5:	call   0x408de0
  4017ca:	test   rax,rax
  4017cd:	je     0x401830
  4017cf:	lea    rcx,[rip+0x398b2]        # 0x43b088
  4017d6:	mov    r8,rsi
  4017d9:	mov    rdx,rbx
  4017dc:	call   0x405530
  4017e1:	mov    rcx,rsi
  4017e4:	call   0x40e6e0
  4017e9:	mov    rcx,rdi
  4017ec:	call   0x4343c0
  4017f1:	test   rax,rax
  4017f4:	jne    0x401764
  4017fa:	mov    rcx,rdi
  4017fd:	add    rsp,0x28
  401801:	pop    rbx
  401802:	pop    rsi
  401803:	pop    rdi
  401804:	pop    rbp
  401805:	pop    r12
  401807:	pop    r13
  401809:	pop    r14
  40180b:	pop    r15
  40180d:	jmp    0x4345e0
  401812:	lea    rcx,[rip+0x3990f]        # 0x43b128
  401819:	mov    rdx,rbx
  40181c:	call   0x405530
  401821:	jmp    0x401753
  401826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401830:	lea    ecx,[r14+r15*1+0x1]
  401835:	movsxd rcx,ecx
  401838:	call   0x40e5c0
  40183d:	mov    r8,r12
  401840:	mov    r15,rax
  401843:	mov    rdx,rbp
  401846:	mov    rcx,rax
  401849:	call   0x438778
  40184e:	lea    rcx,[r15+r13*1]
  401852:	mov    rdx,rbx
  401855:	mov    BYTE PTR [r15+r12*1],0x5c
  40185a:	call   0x438798
  40185f:	mov    edx,0x1
  401864:	mov    rcx,r15
  401867:	call   0x406db0
  40186c:	cmp    eax,0x1
  40186f:	mov    r8,r15
  401872:	mov    rdx,rsi
  401875:	je     0x4018a0
  401877:	lea    rcx,[rip+0x3986a]        # 0x43b0e8
  40187e:	call   0x405530
  401883:	jmp    0x401753
  401888:	nop    DWORD PTR [rax+rax*1+0x0]
  401890:	lea    r12d,[rbx-0x1]
  401894:	movsxd rax,r12d
  401897:	mov    BYTE PTR [rsi+rax*1],0x0
  40189b:	jmp    0x4016dc
  4018a0:	mov    rcx,QWORD PTR [rip+0x827b1]        # 0x484058
  4018a7:	call   0x409090
  4018ac:	movsxd r8,DWORD PTR [rip+0x82789]        # 0x48403c
  4018b3:	mov    rcx,QWORD PTR [rip+0x82796]        # 0x484050
  4018ba:	mov    rdx,rsi
  4018bd:	call   0x409090
  4018c2:	lea    rcx,[rip+0x397f7]        # 0x43b0c0
  4018c9:	mov    r8,r15
  4018cc:	mov    rdx,rsi
  4018cf:	call   0x405530
  4018d4:	jmp    0x401753
  4018d9:	call   QWORD PTR [rip+0x85001]        # 0x4868e0
  4018df:	mov    ecx,DWORD PTR [rax]
  4018e1:	call   0x418cf0
  4018e6:	lea    rcx,[rip+0x39723]        # 0x43b010
  4018ed:	mov    r8,rax
  4018f0:	mov    rdx,rbp
  4018f3:	add    rsp,0x28
  4018f7:	pop    rbx
  4018f8:	pop    rsi
  4018f9:	pop    rdi
  4018fa:	pop    rbp
  4018fb:	pop    r12
  4018fd:	pop    r13
  4018ff:	pop    r14
  401901:	pop    r15
  401903:	jmp    0x405530
  401908:	nop    DWORD PTR [rax+rax*1+0x0]
  401910:	push   rbp
  401911:	push   r15
  401913:	push   r14
  401915:	push   r13
  401917:	push   r12
  401919:	push   rdi
  40191a:	push   rsi
  40191b:	push   rbx
  40191c:	sub    rsp,0x48
  401920:	lea    rbp,[rsp+0x80]
  401928:	mov    r12,rcx
  40192b:	mov    rdi,rdx
  40192e:	call   0x4387a0
  401933:	test   eax,eax
  401935:	jne    0x401950
  401937:	lea    rsp,[rbp-0x38]
  40193b:	pop    rbx
  40193c:	pop    rsi
  40193d:	pop    rdi
  40193e:	pop    r12
  401940:	pop    r13
  401942:	pop    r14
  401944:	pop    r15
  401946:	pop    rbp
  401947:	ret    
  401948:	nop    DWORD PTR [rax+rax*1+0x0]
  401950:	mov    rcx,r12
  401953:	call   0x438788
  401958:	lea    r15,[rax+0x1]
  40195c:	add    rax,0x1f
  401960:	and    rax,0xfffffffffffffff0
  401964:	call   0x4340c0
  401969:	sub    rsp,rax
  40196c:	mov    rcx,rdi
  40196f:	call   0x438788
  401974:	lea    rbx,[rsp+0x20]
  401979:	lea    r14,[rax+0x1]
  40197d:	add    rax,0x1f
  401981:	and    rax,0xfffffffffffffff0
  401985:	call   0x4340c0
  40198a:	sub    rsp,rax
  40198d:	mov    r8,r15
  401990:	mov    rdx,r12
  401993:	lea    r13,[rsp+0x20]
  401998:	mov    rcx,rbx
  40199b:	call   0x4387f0
  4019a0:	mov    rdx,rdi
  4019a3:	mov    r8,r14
  4019a6:	mov    rcx,r13
  4019a9:	call   0x4387f0
  4019ae:	movzx  edi,BYTE PTR [rbx]
  4019b1:	mov    rsi,r13
  4019b4:	test   dil,dil
  4019b7:	je     0x401bc2
  4019bd:	movzx  r15d,BYTE PTR [r13+0x0]
  4019c2:	test   r15b,r15b
  4019c5:	je     0x401b25
  4019cb:	mov    rax,QWORD PTR [rip+0x85076]        # 0x486a48
  4019d2:	mov    r13,QWORD PTR [rip+0x85067]        # 0x486a40
  4019d9:	mov    QWORD PTR [rbp-0x50],rax
  4019dd:	jmp    0x4019f2
  4019df:	nop
  4019e0:	add    rbx,0x1
  4019e4:	movzx  edi,BYTE PTR [rbx]
  4019e7:	xor    r12d,r12d
  4019ea:	mov    r14,rbx
  4019ed:	test   dil,dil
  4019f0:	je     0x401a21
  4019f2:	movzx  ecx,dil
  4019f6:	call   r13
  4019f9:	test   eax,eax
  4019fb:	je     0x4019e0
  4019fd:	movzx  ecx,r15b
  401a01:	mov    r14,rbx
  401a04:	movzx  r12d,BYTE PTR [rbx]
  401a08:	call   r13
  401a0b:	test   eax,eax
  401a0d:	jne    0x401a2c
  401a0f:	nop
  401a10:	add    rsi,0x1
  401a14:	movzx  r15d,BYTE PTR [rsi]
  401a18:	test   r15b,r15b
  401a1b:	je     0x401b90
  401a21:	movzx  ecx,r15b
  401a25:	call   r13
  401a28:	test   eax,eax
  401a2a:	je     0x401a10
  401a2c:	test   dil,dil
  401a2f:	mov    QWORD PTR [rbp-0x48],rsi
  401a33:	mov    QWORD PTR [rbp-0x58],rsi
  401a37:	je     0x401b90
  401a3d:	movzx  eax,dil
  401a41:	sub    eax,0x30
  401a44:	cmp    eax,0x9
  401a47:	ja     0x401aa6
  401a49:	sub    r12d,0x30
  401a4d:	cmp    r12b,0x9
  401a51:	ja     0x401a61
  401a53:	add    rbx,0x1
  401a57:	movzx  eax,BYTE PTR [rbx]
  401a5a:	sub    eax,0x30
  401a5d:	cmp    al,0x9
  401a5f:	jbe    0x401a53
  401a61:	movzx  eax,BYTE PTR [rsi]
  401a64:	sub    eax,0x30
  401a67:	cmp    al,0x9
  401a69:	ja     0x401b76
  401a6f:	nop
  401a70:	add    rsi,0x1
  401a74:	movzx  r15d,BYTE PTR [rsi]
  401a78:	lea    eax,[r15-0x30]
  401a7c:	cmp    al,0x9
  401a7e:	jbe    0x401a70
  401a80:	mov    edx,0x1
  401a85:	jmp    0x401ae1
  401a87:	nop    WORD PTR [rax+rax*1+0x0]
  401a90:	movzx  ecx,r12b
  401a94:	call   QWORD PTR [rip+0x84fae]        # 0x486a48
  401a9a:	test   eax,eax
  401a9c:	je     0x401aab
  401a9e:	add    rbx,0x1
  401aa2:	movzx  r12d,BYTE PTR [rbx]
  401aa6:	test   r12b,r12b
  401aa9:	jne    0x401a90
  401aab:	movzx  r15d,BYTE PTR [rsi]
  401aaf:	test   r15b,r15b
  401ab2:	jne    0x401acd
  401ab4:	jmp    0x401ba8
  401ab9:	nop    DWORD PTR [rax+0x0]
  401ac0:	add    rsi,0x1
  401ac4:	movzx  r15d,BYTE PTR [rsi]
  401ac8:	test   r15b,r15b
  401acb:	je     0x401adf
  401acd:	movzx  ecx,r15b
  401ad1:	mov    rax,QWORD PTR [rbp-0x50]
  401ad5:	call   rax
  401ad7:	test   eax,eax
  401ad9:	jne    0x401ac0
  401adb:	movzx  r15d,BYTE PTR [rsi]
  401adf:	xor    edx,edx
  401ae1:	cmp    r14,rbx
  401ae4:	movzx  edi,BYTE PTR [rbx]
  401ae7:	mov    BYTE PTR [rsi],0x0
  401aea:	mov    BYTE PTR [rbx],0x0
  401aed:	je     0x401b6c
  401aef:	cmp    rsi,QWORD PTR [rbp-0x58]
  401af3:	je     0x401bb0
  401af9:	test   edx,edx
  401afb:	jne    0x401b34
  401afd:	mov    rdx,QWORD PTR [rbp-0x48]
  401b01:	mov    rcx,r14
  401b04:	call   0x4387a0
  401b09:	test   eax,eax
  401b0b:	jne    0x401937
  401b11:	test   dil,dil
  401b14:	mov    BYTE PTR [rbx],dil
  401b17:	mov    BYTE PTR [rsi],r15b
  401b1a:	je     0x401b99
  401b1c:	test   r15b,r15b
  401b1f:	jne    0x4019f2
  401b25:	mov    eax,0x1
  401b2a:	jmp    0x401937
  401b2f:	nop
  401b30:	add    r14,0x1
  401b34:	cmp    BYTE PTR [r14],0x30
  401b38:	je     0x401b30
  401b3a:	mov    rax,QWORD PTR [rbp-0x58]
  401b3e:	cmp    BYTE PTR [rax],0x30
  401b41:	jne    0x401b51
  401b43:	add    QWORD PTR [rbp-0x48],0x1
  401b48:	mov    rax,QWORD PTR [rbp-0x48]
  401b4c:	cmp    BYTE PTR [rax],0x30
  401b4f:	je     0x401b43
  401b51:	mov    rcx,r14
  401b54:	call   0x438788
  401b59:	mov    rcx,QWORD PTR [rbp-0x48]
  401b5d:	mov    r12,rax
  401b60:	call   0x438788
  401b65:	cmp    r12,rax
  401b68:	ja     0x401b25
  401b6a:	jae    0x401afd
  401b6c:	mov    eax,0xffffffff
  401b71:	jmp    0x401937
  401b76:	cmp    r14,rbx
  401b79:	mov    BYTE PTR [rbx],0x0
  401b7c:	mov    BYTE PTR [rsi],0x0
  401b7f:	je     0x401b6c
  401b81:	mov    eax,0x1
  401b86:	jmp    0x401937
  401b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	test   r12b,r12b
  401b93:	jne    0x401b25
  401b95:	movzx  r15d,BYTE PTR [rsi]
  401b99:	xor    eax,eax
  401b9b:	test   r15b,r15b
  401b9e:	setne  al
  401ba1:	neg    eax
  401ba3:	jmp    0x401937
  401ba8:	mov    BYTE PTR [rbx],0x0
  401bab:	mov    BYTE PTR [rsi],0x0
  401bae:	jmp    0x401b6c
  401bb0:	test   edx,edx
  401bb2:	mov    eax,0xffffffff
  401bb7:	je     0x401937
  401bbd:	jmp    0x401b25
  401bc2:	movzx  r15d,BYTE PTR [r13+0x0]
  401bc7:	jmp    0x401b99
  401bc9:	nop    DWORD PTR [rax+0x0]
  401bd0:	push   rbp
  401bd1:	push   rdi
  401bd2:	push   rsi
  401bd3:	push   rbx
  401bd4:	sub    rsp,0x28
  401bd8:	mov    rax,rcx
  401bdb:	mov    ecx,DWORD PTR [rcx+0x88]
  401be1:	test   ecx,ecx
  401be3:	jne    0x401c60
  401be5:	test   edx,edx
  401be7:	mov    DWORD PTR [rax+0x88],0x1
  401bf1:	jne    0x401c50
  401bf3:	mov    rcx,QWORD PTR [rax+0x38]
  401bf7:	mov    rsi,r8
  401bfa:	mov    edi,edx
  401bfc:	mov    rbp,rax
  401bff:	call   0x40a190
  401c04:	test   rax,rax
  401c07:	mov    rbx,rax
  401c0a:	je     0x401c26
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	mov    rcx,QWORD PTR [rbx]
  401c13:	mov    r8,rsi
  401c16:	mov    edx,edi
  401c18:	call   0x401bd0
  401c1d:	mov    rbx,QWORD PTR [rbx+0x10]
  401c21:	test   rbx,rbx
  401c24:	jne    0x401c10
  401c26:	mov    rcx,QWORD PTR [rsi]
  401c29:	mov    rdx,rbp
  401c2c:	call   0x409b50
  401c31:	mov    QWORD PTR [rsi],rax
  401c34:	mov    DWORD PTR [rbp+0x88],0x0
  401c3e:	add    rsp,0x28
  401c42:	pop    rbx
  401c43:	pop    rsi
  401c44:	pop    rdi
  401c45:	pop    rbp
  401c46:	ret    
  401c47:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	mov    rcx,QWORD PTR [rax+0x48]
  401c54:	jmp    0x401bf7
  401c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c60:	mov    rdx,QWORD PTR [rax]
  401c63:	lea    rcx,[rip+0x394f6]        # 0x43b160
  401c6a:	add    rsp,0x28
  401c6e:	pop    rbx
  401c6f:	pop    rsi
  401c70:	pop    rdi
  401c71:	pop    rbp
  401c72:	jmp    0x405530
  401c77:	nop    WORD PTR [rax+rax*1+0x0]
  401c80:	push   r14
  401c82:	push   r13
  401c84:	push   r12
  401c86:	push   rbp
  401c87:	push   rdi
  401c88:	push   rsi
  401c89:	push   rbx
  401c8a:	sub    rsp,0x30
  401c8e:	mov    r13d,edx
  401c91:	mov    r12d,r8d
  401c94:	mov    ebp,r9d
  401c97:	mov    edi,edx
  401c99:	mov    QWORD PTR [rsp+0x28],0x0
  401ca2:	lea    rsi,[rsp+0x28]
  401ca7:	call   0x40a190
  401cac:	test   rax,rax
  401caf:	mov    rbx,rax
  401cb2:	je     0x401cca
  401cb4:	mov    rcx,QWORD PTR [rbx]
  401cb7:	mov    r8,rsi
  401cba:	mov    edx,ebp
  401cbc:	call   0x401bd0
  401cc1:	mov    rbx,QWORD PTR [rbx+0x10]
  401cc5:	test   rbx,rbx
  401cc8:	jne    0x401cb4
  401cca:	mov    rdx,QWORD PTR [rsp+0x28]
  401ccf:	lea    rcx,[rip+0x394ba]        # 0x43b190
  401cd6:	call   0x401550
  401cdb:	mov    r14,QWORD PTR [rsp+0x28]
  401ce0:	lea    rdx,[rip+0x7a49]        # 0x409730
  401ce7:	lea    rcx,[rip+0x7a62]        # 0x409750
  401cee:	call   0x408a60
  401cf3:	mov    rcx,r14
  401cf6:	mov    rbp,rax
  401cf9:	call   0x40a190
  401cfe:	test   rax,rax
  401d01:	mov    rbx,rax
  401d04:	jne    0x401d3c
  401d06:	jmp    0x401d70
  401d08:	nop    DWORD PTR [rax+rax*1+0x0]
  401d10:	lea    rcx,[rip+0x39489]        # 0x43b1a0
  401d17:	call   0x405530
  401d1c:	mov    rsi,QWORD PTR [rbx+0x8]
  401d20:	mov    rcx,r14
  401d23:	mov    rdx,rbx
  401d26:	call   0x409ec0
  401d2b:	mov    r14,rax
  401d2e:	test   rsi,rsi
  401d31:	je     0x401d70
  401d33:	mov    rbx,QWORD PTR [rsi+0x10]
  401d37:	test   rbx,rbx
  401d3a:	je     0x401d70
  401d3c:	mov    rsi,QWORD PTR [rbx]
  401d3f:	xor    r9d,r9d
  401d42:	xor    r8d,r8d
  401d45:	mov    rcx,rbp
  401d48:	mov    rdx,QWORD PTR [rsi]
  401d4b:	call   0x408f00
  401d50:	test   eax,eax
  401d52:	mov    rdx,QWORD PTR [rsi]
  401d55:	jne    0x401d10
  401d57:	mov    r8,rdx
  401d5a:	mov    rcx,rbp
  401d5d:	mov    rsi,rbx
  401d60:	call   0x4090a0
  401d65:	jmp    0x401d33
  401d67:	nop    WORD PTR [rax+rax*1+0x0]
  401d70:	mov    rcx,rbp
  401d73:	call   0x409280
  401d78:	lea    rcx,[rip+0x39440]        # 0x43b1bf
  401d7f:	mov    rdx,r14
  401d82:	mov    QWORD PTR [rsp+0x28],r14
  401d87:	call   0x401550
  401d8c:	test   r12d,r12d
  401d8f:	je     0x401dc7
  401d91:	mov    rdx,QWORD PTR [rsp+0x28]
  401d96:	lea    rcx,[rip+0x3942e]        # 0x43b1cb
  401d9d:	call   0x401550
  401da2:	mov    rcx,QWORD PTR [rsp+0x28]
  401da7:	lea    rdx,[rip+0xfffffffffffff782]        # 0x401530
  401dae:	call   0x40a260
  401db3:	lea    rcx,[rip+0x3941a]        # 0x43b1d4
  401dba:	mov    rdx,rax
  401dbd:	mov    QWORD PTR [rsp+0x28],rax
  401dc2:	call   0x401550
  401dc7:	mov    rbp,QWORD PTR [rsp+0x28]
  401dcc:	test   rbp,rbp
  401dcf:	je     0x402031
  401dd5:	and    r13d,0x7
  401dd9:	xor    esi,esi
  401ddb:	xor    r12d,r12d
  401dde:	xchg   ax,ax
  401de0:	mov    rax,QWORD PTR [rbp+0x0]
  401de4:	test   r13b,r13b
  401de7:	mov    rbx,QWORD PTR [rax+0x58]
  401deb:	cmovne rbx,QWORD PTR [rax+0x50]
  401df0:	test   rbx,rbx
  401df3:	jne    0x401e18
  401df5:	jmp    0x401e41
  401df7:	nop    WORD PTR [rax+rax*1+0x0]
  401e00:	mov    rdx,QWORD PTR [rbx]
  401e03:	mov    rcx,rsi
  401e06:	call   0x409af0
  401e0b:	mov    rsi,QWORD PTR [rax+0x8]
  401e0f:	mov    rbx,QWORD PTR [rbx+0x8]
  401e13:	test   rbx,rbx
  401e16:	je     0x401e41
  401e18:	mov    rdx,QWORD PTR [rbx]
  401e1b:	test   BYTE PTR [rdx],dil
  401e1e:	je     0x401e0f
  401e20:	test   rsi,rsi
  401e23:	je     0x401f80
  401e29:	mov    rcx,rsi
  401e2c:	call   0x409af0
  401e31:	test   rax,rax
  401e34:	jne    0x401e00
  401e36:	mov    rbx,QWORD PTR [rbx+0x8]
  401e3a:	xor    esi,esi
  401e3c:	test   rbx,rbx
  401e3f:	jne    0x401e18
  401e41:	mov    rbp,QWORD PTR [rbp+0x8]
  401e45:	test   rbp,rbp
  401e48:	jne    0x401de0
  401e4a:	mov    rcx,QWORD PTR [rsp+0x28]
  401e4f:	call   0x409a70
  401e54:	test   r12,r12
  401e57:	je     0x402038
  401e5d:	mov    rbx,QWORD PTR [r12+0x8]
  401e62:	test   rbx,rbx
  401e65:	jne    0x401e79
  401e67:	jmp    0x402057
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	mov    rbx,QWORD PTR [rbx+0x8]
  401e74:	test   rbx,rbx
  401e77:	je     0x401ec7
  401e79:	mov    rax,QWORD PTR [rbx+0x10]
  401e7d:	mov    rsi,QWORD PTR [rbx]
  401e80:	mov    rax,QWORD PTR [rax]
  401e83:	movzx  edi,BYTE PTR [rax]
  401e86:	cmp    BYTE PTR [rsi],dil
  401e89:	jne    0x401e70
  401e8b:	mov    rdx,QWORD PTR [rax+0x8]
  401e8f:	mov    rcx,QWORD PTR [rsi+0x8]
  401e93:	call   0x41bd60
  401e98:	test   eax,eax
  401e9a:	jne    0x401e70
  401e9c:	mov    rdx,QWORD PTR [rsi+0x8]
  401ea0:	lea    rcx,[rip+0x39336]        # 0x43b1dd
  401ea7:	call   0x405530
  401eac:	mov    rsi,QWORD PTR [rbx+0x10]
  401eb0:	mov    rcx,r12
  401eb3:	mov    rdx,rbx
  401eb6:	call   0x409e70
  401ebb:	mov    r12,rax
  401ebe:	test   rsi,rsi
  401ec1:	jne    0x40204f
  401ec7:	lea    rcx,[rip+0x39329]        # 0x43b1f7
  401ece:	call   0x41ae90
  401ed3:	test   r12,r12
  401ed6:	mov    rbx,rax
  401ed9:	je     0x401f59
  401edb:	mov    rsi,r12
  401ede:	mov    rbp,QWORD PTR [rip+0x79d7b]        # 0x47bc60
  401ee5:	jmp    0x401f0f
  401ee7:	nop    WORD PTR [rax+rax*1+0x0]
  401ef0:	mov    rcx,QWORD PTR [rbx]
  401ef3:	mov    QWORD PTR [rbx+0x8],rdx
  401ef7:	mov    BYTE PTR [rcx+rax*1],0x20
  401efb:	mov    rdx,QWORD PTR [rbx]
  401efe:	mov    rax,QWORD PTR [rbx+0x8]
  401f02:	mov    BYTE PTR [rdx+rax*1],0x0
  401f06:	mov    rsi,QWORD PTR [rsi+0x8]
  401f0a:	test   rsi,rsi
  401f0d:	je     0x401f59
  401f0f:	cmp    QWORD PTR [rbp+0x0],0x0
  401f14:	mov    rax,QWORD PTR [rsi]
  401f17:	mov    rdi,QWORD PTR [rax+0x8]
  401f1b:	je     0x401f22
  401f1d:	test   BYTE PTR [rax],0xa
  401f20:	jne    0x401f92
  401f22:	mov    rdx,rdi
  401f25:	mov    rcx,rbx
  401f28:	call   0x41ace0
  401f2d:	mov    rax,QWORD PTR [rbx+0x8]
  401f31:	lea    rdx,[rax+0x1]
  401f35:	cmp    rdx,QWORD PTR [rbx+0x10]
  401f39:	jb     0x401ef0
  401f3b:	mov    r8d,0x20
  401f41:	mov    rdx,0xffffffffffffffff
  401f48:	mov    rcx,rbx
  401f4b:	call   0x41b0f0
  401f50:	mov    rsi,QWORD PTR [rsi+0x8]
  401f54:	test   rsi,rsi
  401f57:	jne    0x401f0f
  401f59:	mov    rsi,QWORD PTR [rbx]
  401f5c:	xor    edx,edx
  401f5e:	mov    rcx,rbx
  401f61:	call   0x41a8e0
  401f66:	mov    rcx,r12
  401f69:	call   0x409a70
  401f6e:	mov    rax,rsi
  401f71:	add    rsp,0x30
  401f75:	pop    rbx
  401f76:	pop    rsi
  401f77:	pop    rdi
  401f78:	pop    rbp
  401f79:	pop    r12
  401f7b:	pop    r13
  401f7d:	pop    r14
  401f7f:	ret    
  401f80:	xor    ecx,ecx
  401f82:	call   0x409b50
  401f87:	mov    rsi,rax
  401f8a:	mov    r12,rax
  401f8d:	jmp    0x401e0f
  401f92:	mov    rax,QWORD PTR [rbx+0x8]
  401f96:	lea    rdx,[rax+0x1]
  401f9a:	cmp    rdx,QWORD PTR [rbx+0x10]
  401f9e:	jae    0x402000
  401fa0:	mov    rcx,QWORD PTR [rbx]
  401fa3:	mov    QWORD PTR [rbx+0x8],rdx
  401fa7:	mov    BYTE PTR [rcx+rax*1],0x2d
  401fab:	mov    rdx,QWORD PTR [rbx]
  401fae:	mov    rax,QWORD PTR [rbx+0x8]
  401fb2:	mov    BYTE PTR [rdx+rax*1],0x0
  401fb6:	mov    rax,QWORD PTR [rbx+0x8]
  401fba:	movsx  r8d,BYTE PTR [rdi+0x1]
  401fbf:	lea    rdx,[rax+0x1]
  401fc3:	cmp    rdx,QWORD PTR [rbx+0x10]
  401fc7:	jae    0x402020
  401fc9:	mov    rcx,QWORD PTR [rbx]
  401fcc:	mov    QWORD PTR [rbx+0x8],rdx
  401fd0:	mov    BYTE PTR [rcx+rax*1],r8b
  401fd4:	mov    rdx,QWORD PTR [rbx]
  401fd7:	mov    rax,QWORD PTR [rbx+0x8]
  401fdb:	mov    BYTE PTR [rdx+rax*1],0x0
  401fdf:	mov    rdx,QWORD PTR [rbp+0x0]
  401fe3:	mov    rcx,rbx
  401fe6:	call   0x41ace0
  401feb:	lea    rdx,[rdi+0x2]
  401fef:	mov    rcx,rbx
  401ff2:	call   0x41ace0
  401ff7:	jmp    0x401f2d
  401ffc:	nop    DWORD PTR [rax+0x0]
  402000:	mov    r8d,0x2d
  402006:	mov    rdx,0xffffffffffffffff
  40200d:	mov    rcx,rbx
  402010:	call   0x41b0f0
  402015:	jmp    0x401fb6
  402017:	nop    WORD PTR [rax+rax*1+0x0]
  402020:	mov    rdx,0xffffffffffffffff
  402027:	mov    rcx,rbx
  40202a:	call   0x41b0f0
  40202f:	jmp    0x401fdf
  402031:	xor    ecx,ecx
  402033:	call   0x409a70
  402038:	lea    rcx,[rip+0x391b8]        # 0x43b1f7
  40203f:	xor    r12d,r12d
  402042:	call   0x41ae90
  402047:	mov    rbx,rax
  40204a:	jmp    0x401f59
  40204f:	mov    rbx,rsi
  402052:	jmp    0x401e70
  402057:	lea    rcx,[rip+0x39199]        # 0x43b1f7
  40205e:	call   0x41ae90
  402063:	mov    rbx,rax
  402066:	jmp    0x401edb
  40206b:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	sub    rsp,0x28
  402074:	call   0x4182b0
  402079:	mov    rcx,QWORD PTR [rip+0x81fc0]        # 0x484040
  402080:	mov    rdx,rax
  402083:	call   0x409af0
  402088:	mov    QWORD PTR [rip+0x81fb1],rax        # 0x484040
  40208f:	add    rsp,0x28
  402093:	ret    
  402094:	xchg   ax,ax
  402096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020a0:	push   rsi
  4020a1:	push   rbx
  4020a2:	sub    rsp,0x28
  4020a6:	mov    r8d,0xffffffff
  4020ac:	call   0x419c40
  4020b1:	mov    rdx,QWORD PTR [rax]
  4020b4:	mov    rsi,rax
  4020b7:	mov    rbx,rax
  4020ba:	test   rdx,rdx
  4020bd:	je     0x4020e1
  4020bf:	nop
  4020c0:	lea    rcx,[rip+0x39131]        # 0x43b1f8
  4020c7:	add    rbx,0x8
  4020cb:	call   0x405530
  4020d0:	mov    rcx,QWORD PTR [rbx-0x8]
  4020d4:	call   0x402070
  4020d9:	mov    rdx,QWORD PTR [rbx]
  4020dc:	test   rdx,rdx
  4020df:	jne    0x4020c0
  4020e1:	mov    rcx,rsi
  4020e4:	add    rsp,0x28
  4020e8:	pop    rbx
  4020e9:	pop    rsi
  4020ea:	jmp    0x41a040
  4020ef:	nop
  4020f0:	push   rbx
  4020f1:	sub    rsp,0x20
  4020f5:	mov    rbx,rcx
  4020f8:	call   0x438788
  4020fd:	mov    rdx,rax
  402100:	xor    eax,eax
  402102:	cmp    edx,0xc
  402105:	jle    0x402123
  402107:	movsxd rdx,edx
  40210a:	lea    rcx,[rbx+rdx*1-0xc]
  40210f:	lea    rdx,[rip+0x3910e]        # 0x43b224
  402116:	call   0x419340
  40211b:	test   eax,eax
  40211d:	sete   al
  402120:	movzx  eax,al
  402123:	add    rsp,0x20
  402127:	pop    rbx
  402128:	ret    
  402129:	nop    DWORD PTR [rax+0x0]
  402130:	push   rbx
  402131:	sub    rsp,0x20
  402135:	mov    eax,DWORD PTR [rip+0x81efd]        # 0x484038
  40213b:	test   eax,eax
  40213d:	je     0x402145
  40213f:	add    rsp,0x20
  402143:	pop    rbx
  402144:	ret    
  402145:	lea    rdx,[rip+0x75e4]        # 0x409730
  40214c:	lea    rcx,[rip+0x75fd]        # 0x409750
  402153:	mov    DWORD PTR [rip+0x81edb],0x1        # 0x484038
  40215d:	call   0x408a60
  402162:	lea    rdx,[rip+0x75c7]        # 0x409730
  402169:	lea    rcx,[rip+0x75e0]        # 0x409750
  402170:	mov    QWORD PTR [rip+0x81ee9],rax        # 0x484060
  402177:	call   0x408a60
  40217c:	lea    rdx,[rip+0x75ad]        # 0x409730
  402183:	lea    rcx,[rip+0x75c6]        # 0x409750
  40218a:	mov    QWORD PTR [rip+0x81ec7],rax        # 0x484058
  402191:	call   0x408a60
  402196:	mov    ecx,0x90
  40219b:	mov    QWORD PTR [rip+0x81eae],rax        # 0x484050
  4021a2:	call   0x40e610
  4021a7:	lea    rcx,[rip+0x39083]        # 0x43b231
  4021ae:	mov    rbx,rax
  4021b1:	call   0x4182b0
  4021b6:	lea    rcx,[rip+0x3907f]        # 0x43b23c
  4021bd:	mov    QWORD PTR [rbx],rax
  4021c0:	call   0x4182b0
  4021c5:	lea    rcx,[rip+0x39065]        # 0x43b231
  4021cc:	mov    QWORD PTR [rbx+0x10],rax
  4021d0:	call   0x4182b0
  4021d5:	lea    rcx,[rip+0x3906c]        # 0x43b248
  4021dc:	mov    QWORD PTR [rbx+0x8],rax
  4021e0:	call   0x4182b0
  4021e5:	lea    rcx,[rip+0x390a4]        # 0x43b290
  4021ec:	mov    QWORD PTR [rbx+0x18],rax
  4021f0:	call   0x4182b0
  4021f5:	mov    rcx,QWORD PTR [rbx+0x60]
  4021f9:	mov    QWORD PTR [rbx+0x20],rax
  4021fd:	test   rcx,rcx
  402200:	je     0x402251
  402202:	mov    rax,QWORD PTR [rip+0x79a67]        # 0x47bc70
  402209:	lea    rdx,[rip+0x390a3]        # 0x43b2b3
  402210:	mov    r8,QWORD PTR [rax]
  402213:	call   0x409090
  402218:	lea    rcx,[rip+0x390a1]        # 0x43b2c0
  40221f:	call   0x405530
  402224:	mov    rdx,QWORD PTR [rbx]
  402227:	mov    rcx,QWORD PTR [rip+0x81e32]        # 0x484060
  40222e:	mov    r8,rbx
  402231:	call   0x409090
  402236:	mov    rcx,QWORD PTR [rip+0x81e03]        # 0x484040
  40223d:	lea    rdx,[rip+0xfffffffffffff45c]        # 0x4016a0
  402244:	xor    r8d,r8d
  402247:	add    rsp,0x20
  40224b:	pop    rbx
  40224c:	jmp    0x40a210
  402251:	lea    rcx,[rip+0x74f8]        # 0x409750
  402258:	lea    rdx,[rip+0x74d1]        # 0x409730
  40225f:	call   0x408a60
  402264:	mov    rcx,rax
  402267:	mov    QWORD PTR [rbx+0x60],rax
  40226b:	jmp    0x402202
  40226d:	nop    DWORD PTR [rax]
  402270:	push   rbp
  402271:	push   rdi
  402272:	push   rsi
  402273:	push   rbx
  402274:	sub    rsp,0x28
  402278:	mov    ebx,edx
  40227a:	mov    rdi,rcx
  40227d:	xor    ecx,ecx
  40227f:	call   0x41ae90
  402284:	test   bl,0x10
  402287:	mov    rsi,rax
  40228a:	jne    0x4023a3
  402290:	test   bl,0x8
  402293:	jne    0x402360
  402299:	test   bl,0x2
  40229c:	jne    0x402310
  40229e:	and    ebx,0x5
  4022a1:	je     0x4022e6
  4022a3:	mov    eax,DWORD PTR [rip+0x37d67]        # 0x43a010
  4022a9:	movzx  edx,bl
  4022ac:	mov    rcx,rdi
  4022af:	test   eax,eax
  4022b1:	sete   r9b
  4022b5:	xor    r8d,r8d
  4022b8:	movzx  r9d,r9b
  4022bc:	call   0x401c80
  4022c1:	lea    rcx,[rip+0x39098]        # 0x43b360
  4022c8:	mov    rbx,rax
  4022cb:	mov    rdx,rax
  4022ce:	call   0x405530
  4022d3:	mov    rcx,rsi
  4022d6:	mov    rdx,rbx
  4022d9:	call   0x41ace0
  4022de:	mov    rcx,rbx
  4022e1:	call   0x40e6e0
  4022e6:	mov    rdx,QWORD PTR [rsi]
  4022e9:	lea    rcx,[rip+0x39098]        # 0x43b388
  4022f0:	call   0x405530
  4022f5:	xor    edx,edx
  4022f7:	mov    rcx,rsi
  4022fa:	add    rsp,0x28
  4022fe:	pop    rbx
  4022ff:	pop    rsi
  402300:	pop    rdi
  402301:	pop    rbp
  402302:	jmp    0x41a8e0
  402307:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	mov    edx,DWORD PTR [rip+0x37cfa]        # 0x43a010
  402316:	xor    r9d,r9d
  402319:	mov    r8d,0x1
  40231f:	mov    rcx,rdi
  402322:	test   edx,edx
  402324:	mov    edx,0x2
  402329:	sete   r9b
  40232d:	call   0x401c80
  402332:	lea    rcx,[rip+0x39005]        # 0x43b33e
  402339:	mov    rbp,rax
  40233c:	mov    rdx,rax
  40233f:	call   0x405530
  402344:	mov    rcx,rsi
  402347:	mov    rdx,rbp
  40234a:	call   0x41ace0
  40234f:	mov    rcx,rbp
  402352:	call   0x40e6e0
  402357:	jmp    0x40229e
  40235c:	nop    DWORD PTR [rax+0x0]
  402360:	mov    r9d,0x1
  402366:	mov    r8d,0x1
  40236c:	mov    rcx,rdi
  40236f:	mov    edx,0x8
  402374:	call   0x401c80
  402379:	lea    rcx,[rip+0x38fa1]        # 0x43b321
  402380:	mov    rbp,rax
  402383:	mov    rdx,rax
  402386:	call   0x405530
  40238b:	mov    rcx,rsi
  40238e:	mov    rdx,rbp
  402391:	call   0x41ace0
  402396:	mov    rcx,rbp
  402399:	call   0x40e6e0
  40239e:	jmp    0x402299
  4023a3:	mov    r9d,0x1
  4023a9:	xor    r8d,r8d
  4023ac:	mov    rcx,rdi
  4023af:	mov    edx,0x10
  4023b4:	call   0x401c80
  4023b9:	lea    rcx,[rip+0x38f40]        # 0x43b300
  4023c0:	mov    rbp,rax
  4023c3:	mov    rdx,rax
  4023c6:	call   0x405530
  4023cb:	mov    rcx,rsi
  4023ce:	mov    rdx,rbp
  4023d1:	call   0x41ace0
  4023d6:	mov    rcx,rbp
  4023d9:	call   0x40e6e0
  4023de:	jmp    0x402290
  4023e3:	nop    DWORD PTR [rax]
  4023e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023f0:	push   rdi
  4023f1:	push   rsi
  4023f2:	push   rbx
  4023f3:	sub    rsp,0x20
  4023f7:	mov    rbx,rcx
  4023fa:	mov    rcx,QWORD PTR [rip+0x81c47]        # 0x484048
  402401:	mov    rsi,rdx
  402404:	test   rcx,rcx
  402407:	je     0x402454
  402409:	mov    rdx,rbx
  40240c:	call   0x408de0
  402411:	test   rax,rax
  402414:	jne    0x402473
  402416:	mov    rcx,rsi
  402419:	call   0x4182b0
  40241e:	mov    rcx,rbx
  402421:	mov    rdi,rax
  402424:	call   0x4182b0
  402429:	mov    rcx,QWORD PTR [rip+0x81c18]        # 0x484048
  402430:	mov    rdx,rax
  402433:	mov    r8,rdi
  402436:	call   0x409090
  40243b:	lea    rcx,[rip+0x38f8e]        # 0x43b3d0
  402442:	mov    r8,rsi
  402445:	mov    rdx,rbx
  402448:	add    rsp,0x20
  40244c:	pop    rbx
  40244d:	pop    rsi
  40244e:	pop    rdi
  40244f:	jmp    0x405530
  402454:	lea    rcx,[rip+0x72f5]        # 0x409750
  40245b:	lea    rdx,[rip+0x72ce]        # 0x409730
  402462:	call   0x408a60
  402467:	mov    rcx,rax
  40246a:	mov    QWORD PTR [rip+0x81bd7],rax        # 0x484048
  402471:	jmp    0x402409
  402473:	lea    rcx,[rip+0x38f2e]        # 0x43b3a8
  40247a:	mov    rdx,rbx
  40247d:	call   0x4055e0
  402482:	mov    ecx,0x1
  402487:	call   0x4388a0
  40248c:	nop
  40248d:	nop    DWORD PTR [rax]
  402490:	push   rdi
  402491:	push   rsi
  402492:	push   rbx
  402493:	sub    rsp,0x20
  402497:	mov    rbx,rcx
  40249a:	mov    rcx,QWORD PTR [rip+0x81ba7]        # 0x484048
  4024a1:	mov    rsi,rdx
  4024a4:	test   rcx,rcx
  4024a7:	je     0x4024c3
  4024a9:	call   0x408de0
  4024ae:	mov    rcx,rax
  4024b1:	call   0x4182b0
  4024b6:	test   rax,rax
  4024b9:	je     0x4024c3
  4024bb:	add    rsp,0x20
  4024bf:	pop    rbx
  4024c0:	pop    rsi
  4024c1:	pop    rdi
  4024c2:	ret    
  4024c3:	mov    rcx,QWORD PTR [rbx+0x60]
  4024c7:	test   rcx,rcx
  4024ca:	je     0x4024e1
  4024cc:	mov    rdx,rsi
  4024cf:	call   0x408de0
  4024d4:	mov    rcx,rax
  4024d7:	call   0x4182b0
  4024dc:	test   rax,rax
  4024df:	jne    0x4024bb
  4024e1:	mov    r9,QWORD PTR [rbx+0x28]
  4024e5:	xor    eax,eax
  4024e7:	test   r9,r9
  4024ea:	je     0x4024bb
  4024ec:	lea    rdi,[rip+0x38f05]        # 0x43b3f8
  4024f3:	mov    ecx,0xa
  4024f8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4024fa:	seta   r8b
  4024fe:	setb   dl
  402501:	xor    eax,eax
  402503:	cmp    r8b,dl
  402506:	jne    0x4024bb
  402508:	mov    rcx,r9
  40250b:	add    rsp,0x20
  40250f:	pop    rbx
  402510:	pop    rsi
  402511:	pop    rdi
  402512:	jmp    0x4182b0
  402517:	nop    WORD PTR [rax+rax*1+0x0]
  402520:	push   rbp
  402521:	push   rdi
  402522:	push   rsi
  402523:	push   rbx
  402524:	sub    rsp,0x28
  402528:	mov    rsi,rcx
  40252b:	lea    rcx,[rip+0x38cc5]        # 0x43b1f7
  402532:	mov    rbp,rdx
  402535:	call   0x41ae90
  40253a:	test   rsi,rsi
  40253d:	mov    rbx,rax
  402540:	jne    0x40256b
  402542:	jmp    0x4025b0
  402544:	mov    rdx,QWORD PTR [rbx]
  402547:	mov    QWORD PTR [rbx+0x8],rcx
  40254b:	mov    BYTE PTR [rdx+rax*1],0x20
  40254f:	mov    rdx,QWORD PTR [rbx]
  402552:	mov    rax,QWORD PTR [rbx+0x8]
  402556:	mov    BYTE PTR [rdx+rax*1],0x0
  40255a:	mov    rcx,rdi
  40255d:	call   0x40e6e0
  402562:	mov    rsi,QWORD PTR [rsi+0x8]
  402566:	test   rsi,rsi
  402569:	je     0x4025b0
  40256b:	mov    rcx,QWORD PTR [rsi]
  40256e:	mov    rdx,rbp
  402571:	call   0x402490
  402576:	test   rax,rax
  402579:	mov    rdi,rax
  40257c:	je     0x402562
  40257e:	mov    rcx,rbx
  402581:	mov    rdx,rax
  402584:	call   0x41ace0
  402589:	mov    rax,QWORD PTR [rbx+0x8]
  40258d:	lea    rcx,[rax+0x1]
  402591:	cmp    rcx,QWORD PTR [rbx+0x10]
  402595:	jb     0x402544
  402597:	mov    r8d,0x20
  40259d:	mov    rdx,0xffffffffffffffff
  4025a4:	mov    rcx,rbx
  4025a7:	call   0x41b0f0
  4025ac:	jmp    0x40255a
  4025ae:	xchg   ax,ax
  4025b0:	mov    rax,QWORD PTR [rbx+0x8]
  4025b4:	test   rax,rax
  4025b7:	je     0x4025c1
  4025b9:	mov    rdx,QWORD PTR [rbx]
  4025bc:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
  4025c1:	mov    rsi,QWORD PTR [rbx]
  4025c4:	xor    edx,edx
  4025c6:	mov    rcx,rbx
  4025c9:	call   0x41a8e0
  4025ce:	mov    rax,rsi
  4025d1:	add    rsp,0x28
  4025d5:	pop    rbx
  4025d6:	pop    rsi
  4025d7:	pop    rdi
  4025d8:	pop    rbp
  4025d9:	ret    
  4025da:	nop    WORD PTR [rax+rax*1+0x0]
  4025e0:	jmp    0x401910
  4025e5:	nop
  4025e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025f0:	sub    rsp,0x38
  4025f4:	cmp    ecx,0x6
  4025f7:	mov    r10,rdx
  4025fa:	ja     0x4026c0
  402600:	lea    r9,[rip+0x38e4d]        # 0x43b454
  402607:	mov    eax,ecx
  402609:	movsxd rax,DWORD PTR [r9+rax*4]
  40260d:	add    r9,rax
  402610:	jmp    r9
  402613:	mov    eax,0x1
  402618:	add    rsp,0x38
  40261c:	ret    
  40261d:	nop    DWORD PTR [rax]
  402620:	mov    rdx,r8
  402623:	mov    rcx,r10
  402626:	call   0x401910
  40262b:	shr    eax,0x1f
  40262e:	add    rsp,0x38
  402632:	ret    
  402633:	mov    rdx,r8
  402636:	mov    rcx,r10
  402639:	call   0x401910
  40263e:	test   eax,eax
  402640:	setg   al
  402643:	movzx  eax,al
  402646:	add    rsp,0x38
  40264a:	ret    
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]
  402650:	mov    rdx,r8
  402653:	mov    rcx,r10
  402656:	call   0x401910
  40265b:	test   eax,eax
  40265d:	setle  al
  402660:	movzx  eax,al
  402663:	add    rsp,0x38
  402667:	ret    
  402668:	nop    DWORD PTR [rax+rax*1+0x0]
  402670:	mov    rdx,r8
  402673:	mov    rcx,r10
  402676:	call   0x401910
  40267b:	not    eax
  40267d:	shr    eax,0x1f
  402680:	add    rsp,0x38
  402684:	ret    
  402685:	mov    rdx,r8
  402688:	mov    rcx,r10
  40268b:	call   0x401910
  402690:	test   eax,eax
  402692:	sete   al
  402695:	movzx  eax,al
  402698:	add    rsp,0x38
  40269c:	ret    
  40269d:	nop    DWORD PTR [rax]
  4026a0:	mov    rdx,r8
  4026a3:	mov    rcx,r10
  4026a6:	call   0x401910
  4026ab:	test   eax,eax
  4026ad:	setne  al
  4026b0:	movzx  eax,al
  4026b3:	add    rsp,0x38
  4026b7:	ret    
  4026b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	lea    r9,[rip+0x3931b]        # 0x43b9e2
  4026c7:	lea    rdx,[rip+0x38d3a]        # 0x43b408
  4026ce:	mov    QWORD PTR [rsp+0x20],0x0
  4026d7:	mov    r8d,0x4bf
  4026dd:	xor    ecx,ecx
  4026df:	call   0x41e540
  4026e4:	nop
  4026e5:	nop
  4026e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026f0:	sub    rsp,0x38
  4026f4:	cmp    ecx,0x6
  4026f7:	ja     0x402780
  4026fd:	lea    rax,[rip+0x38d84]        # 0x43b488
  402704:	mov    ecx,ecx
  402706:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40270a:	add    rax,rdx
  40270d:	jmp    rax
  40270f:	nop
  402710:	lea    rax,[rip+0x38d5d]        # 0x43b474
  402717:	add    rsp,0x38
  40271b:	ret    
  40271c:	nop    DWORD PTR [rax+0x0]
  402720:	lea    rax,[rip+0x38d50]        # 0x43b477
  402727:	add    rsp,0x38
  40272b:	ret    
  40272c:	nop    DWORD PTR [rax+0x0]
  402730:	lea    rax,[rip+0x38d43]        # 0x43b47a
  402737:	add    rsp,0x38
  40273b:	ret    
  40273c:	nop    DWORD PTR [rax+0x0]
  402740:	lea    rax,[rip+0x38d35]        # 0x43b47c
  402747:	add    rsp,0x38
  40274b:	ret    
  40274c:	nop    DWORD PTR [rax+0x0]
  402750:	lea    rax,[rip+0x38d28]        # 0x43b47f
  402757:	add    rsp,0x38
  40275b:	ret    
  40275c:	nop    DWORD PTR [rax+0x0]
  402760:	lea    rax,[rip+0x38d09]        # 0x43b470
  402767:	add    rsp,0x38
  40276b:	ret    
  40276c:	nop    DWORD PTR [rax+0x0]
  402770:	lea    rax,[rip+0x38cfb]        # 0x43b472
  402777:	add    rsp,0x38
  40277b:	ret    
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	lea    r9,[rip+0x39249]        # 0x43b9d0
  402787:	lea    rdx,[rip+0x38c7a]        # 0x43b408
  40278e:	mov    QWORD PTR [rsp+0x20],0x0
  402797:	mov    r8d,0x4e8
  40279d:	xor    ecx,ecx
  40279f:	call   0x41e540
  4027a4:	nop
  4027a5:	nop
  4027a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027b0:	push   r15
  4027b2:	push   r14
  4027b4:	push   r13
  4027b6:	push   r12
  4027b8:	push   rbp
  4027b9:	push   rdi
  4027ba:	push   rsi
  4027bb:	push   rbx
  4027bc:	sub    rsp,0x68
  4027c0:	mov    rdi,rcx
  4027c3:	mov    esi,edx
  4027c5:	mov    rdx,rcx
  4027c8:	mov    rcx,QWORD PTR [rip+0x81891]        # 0x484060
  4027cf:	call   0x408de0
  4027d4:	test   rax,rax
  4027d7:	je     0x4027ea
  4027d9:	add    rsp,0x68
  4027dd:	pop    rbx
  4027de:	pop    rsi
  4027df:	pop    rdi
  4027e0:	pop    rbp
  4027e1:	pop    r12
  4027e3:	pop    r13
  4027e5:	pop    r14
  4027e7:	pop    r15
  4027e9:	ret    
  4027ea:	lea    rcx,[rip+0x38cce]        # 0x43b4bf
  4027f1:	mov    rdx,rdi
  4027f4:	call   0x405530
  4027f9:	mov    rcx,rdi
  4027fc:	call   0x401640
  402801:	test   eax,eax
  402803:	jne    0x402ec1
  402809:	mov    edx,DWORD PTR [rip+0x81825]        # 0x484034
  40280f:	test   edx,edx
  402811:	je     0x402e67
  402817:	mov    rcx,QWORD PTR [rip+0x8183a]        # 0x484058
  40281e:	mov    rdx,rdi
  402821:	call   0x408de0
  402826:	mov    rbp,rax
  402829:	test   rbp,rbp
  40282c:	je     0x402ed8
  402832:	lea    rcx,[rip+0x38db4]        # 0x43b5ed
  402839:	mov    r8,rbp
  40283c:	mov    rdx,rdi
  40283f:	call   0x405530
  402844:	mov    r9d,DWORD PTR [rip+0x377c9]        # 0x43a014
  40284b:	mov    r8d,DWORD PTR [rip+0x377be]        # 0x43a010
  402852:	mov    rcx,rbp
  402855:	mov    edx,DWORD PTR [rip+0x817d5]        # 0x484030
  40285b:	call   0x403e70
  402860:	test   rax,rax
  402863:	mov    rbx,rax
  402866:	je     0x402fff
  40286c:	lea    rdx,[rip+0x38dad]        # 0x43b620
  402873:	mov    rcx,rbp
  402876:	call   0x438760
  40287b:	test   rax,rax
  40287e:	je     0x402887
  402880:	mov    DWORD PTR [rbx+0x78],0x1
  402887:	cmp    rdi,rbp
  40288a:	mov    rcx,rdi
  40288d:	je     0x402f03
  402893:	call   0x4182b0
  402898:	mov    QWORD PTR [rbx],rax
  40289b:	mov    rcx,QWORD PTR [rip+0x817ae]        # 0x484050
  4028a2:	mov    rdx,rax
  4028a5:	call   0x408de0
  4028aa:	mov    rdx,QWORD PTR [rbx]
  4028ad:	lea    rcx,[rip+0x38d7b]        # 0x43b62f
  4028b4:	mov    r8d,eax
  4028b7:	mov    DWORD PTR [rbx+0x7c],eax
  4028ba:	call   0x405530
  4028bf:	mov    rdx,QWORD PTR [rbx]
  4028c2:	lea    rcx,[rip+0x38d87]        # 0x43b650
  4028c9:	call   0x405530
  4028ce:	mov    rdx,QWORD PTR [rbx]
  4028d1:	mov    rcx,QWORD PTR [rip+0x81788]        # 0x484060
  4028d8:	mov    r8,rbx
  4028db:	call   0x409090
  4028e0:	mov    rbp,QWORD PTR [rbx+0x30]
  4028e4:	test   rbp,rbp
  4028e7:	jne    0x402914
  4028e9:	jmp    0x402965
  4028eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	mov    rdx,QWORD PTR [rdi]
  4028f3:	mov    r8,rdi
  4028f6:	call   0x409090
  4028fb:	mov    rcx,QWORD PTR [rbx+0x38]
  4028ff:	mov    rdx,r12
  402902:	call   0x409b50
  402907:	mov    rbp,QWORD PTR [rbp+0x8]
  40290b:	mov    QWORD PTR [rbx+0x38],rax
  40290f:	test   rbp,rbp
  402912:	je     0x402965
  402914:	mov    rdi,QWORD PTR [rbp+0x0]
  402918:	mov    rdx,QWORD PTR [rbx]
  40291b:	lea    rcx,[rip+0x38d56]        # 0x43b678
  402922:	mov    r8,QWORD PTR [rdi]
  402925:	call   0x405530
  40292a:	mov    rcx,QWORD PTR [rdi]
  40292d:	mov    edx,esi
  40292f:	call   0x4027b0
  402934:	test   rax,rax
  402937:	mov    r12,rax
  40293a:	je     0x402fdc
  402940:	mov    rcx,QWORD PTR [rbx+0x68]
  402944:	test   rcx,rcx
  402947:	jne    0x4028f0
  402949:	lea    rcx,[rip+0x6e00]        # 0x409750
  402950:	lea    rdx,[rip+0x6dd9]        # 0x409730
  402957:	call   0x408a60
  40295c:	mov    rcx,rax
  40295f:	mov    QWORD PTR [rbx+0x68],rax
  402963:	jmp    0x4028f0
  402965:	mov    rbp,QWORD PTR [rbx+0x40]
  402969:	test   rbp,rbp
  40296c:	jne    0x402997
  40296e:	jmp    0x4029e8
  402970:	mov    rdx,QWORD PTR [rdi]
  402973:	mov    r8,rdi
  402976:	call   0x409090
  40297b:	mov    rcx,QWORD PTR [rbx+0x48]
  40297f:	mov    rdx,r12
  402982:	call   0x409b50
  402987:	mov    rbp,QWORD PTR [rbp+0x8]
  40298b:	mov    rdi,rax
  40298e:	mov    QWORD PTR [rbx+0x48],rax
  402992:	test   rbp,rbp
  402995:	je     0x4029ec
  402997:	mov    rdi,QWORD PTR [rbp+0x0]
  40299b:	mov    rdx,QWORD PTR [rbx]
  40299e:	lea    rcx,[rip+0x38d2b]        # 0x43b6d0
  4029a5:	mov    r8,QWORD PTR [rdi]
  4029a8:	call   0x405530
  4029ad:	mov    rcx,QWORD PTR [rdi]
  4029b0:	mov    edx,esi
  4029b2:	call   0x4027b0
  4029b7:	test   rax,rax
  4029ba:	mov    r12,rax
  4029bd:	je     0x402fdc
  4029c3:	mov    rcx,QWORD PTR [rbx+0x68]
  4029c7:	test   rcx,rcx
  4029ca:	jne    0x402970
  4029cc:	lea    rcx,[rip+0x6d7d]        # 0x409750
  4029d3:	lea    rdx,[rip+0x6d56]        # 0x409730
  4029da:	call   0x408a60
  4029df:	mov    rcx,rax
  4029e2:	mov    QWORD PTR [rbx+0x68],rax
  4029e6:	jmp    0x402970
  4029e8:	mov    rdi,QWORD PTR [rbx+0x48]
  4029ec:	mov    rcx,QWORD PTR [rbx+0x38]
  4029f0:	call   0x409f20
  4029f5:	mov    rdx,rdi
  4029f8:	mov    rcx,rax
  4029fb:	call   0x409d30
  402a00:	mov    rcx,QWORD PTR [rbx+0x38]
  402a04:	mov    QWORD PTR [rbx+0x48],rax
  402a08:	call   0x409fa0
  402a0d:	mov    rcx,QWORD PTR [rbx+0x48]
  402a11:	mov    QWORD PTR [rbx+0x38],rax
  402a15:	call   0x409fa0
  402a1a:	mov    rdx,QWORD PTR [rbx]
  402a1d:	mov    rsi,rax
  402a20:	mov    QWORD PTR [rbx+0x48],rax
  402a24:	mov    QWORD PTR [rsp+0x58],0x0
  402a2d:	test   rdx,rdx
  402a30:	je     0x403057
  402a36:	cmp    QWORD PTR [rbx+0x8],0x0
  402a3b:	je     0x403041
  402a41:	cmp    QWORD PTR [rbx+0x10],0x0
  402a46:	je     0x40302b
  402a4c:	cmp    QWORD PTR [rbx+0x18],0x0
  402a51:	jne    0x402a99
  402a53:	jmp    0x403015
  402a58:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	mov    rcx,QWORD PTR [rbx+0x68]
  402a64:	mov    rbp,QWORD PTR [rsi]
  402a67:	test   rcx,rcx
  402a6a:	je     0x402a95
  402a6c:	mov    rdx,QWORD PTR [rbp+0x0]
  402a70:	call   0x408de0
  402a75:	test   rax,rax
  402a78:	mov    rdi,rax
  402a7b:	je     0x402a95
  402a7d:	mov    rdx,QWORD PTR [rbp+0x10]
  402a81:	mov    ecx,DWORD PTR [rax+0x8]
  402a84:	mov    r8,QWORD PTR [rax+0x10]
  402a88:	call   0x4025f0
  402a8d:	test   eax,eax
  402a8f:	je     0x402f85
  402a95:	mov    rsi,QWORD PTR [rsi+0x8]
  402a99:	test   rsi,rsi
  402a9c:	jne    0x402a60
  402a9e:	lea    r8,[rsp+0x58]
  402aa3:	mov    rcx,rbx
  402aa6:	mov    edx,0x1
  402aab:	call   0x401bd0
  402ab0:	mov    rdi,QWORD PTR [rsp+0x58]
  402ab5:	xor    ecx,ecx
  402ab7:	mov    rsi,QWORD PTR [rbx+0x70]
  402abb:	test   rdi,rdi
  402abe:	je     0x402b82
  402ac4:	test   rsi,rsi
  402ac7:	mov    r13,QWORD PTR [rdi]
  402aca:	mov    rbp,rsi
  402acd:	jne    0x402ae1
  402acf:	jmp    0x402b70
  402ad4:	mov    rbp,QWORD PTR [rbp+0x8]
  402ad8:	test   rbp,rbp
  402adb:	je     0x402b70
  402ae1:	mov    r12,QWORD PTR [rbp+0x0]
  402ae5:	mov    rdx,QWORD PTR [r13+0x0]
  402ae9:	mov    rcx,QWORD PTR [r12]
  402aed:	call   0x4387a0
  402af2:	test   eax,eax
  402af4:	jne    0x402ad4
  402af6:	mov    rdx,QWORD PTR [r13+0x10]
  402afa:	mov    ecx,DWORD PTR [r12+0x8]
  402aff:	mov    r8,QWORD PTR [r12+0x10]
  402b04:	call   0x4025f0
  402b09:	test   eax,eax
  402b0b:	je     0x402ad4
  402b0d:	mov    rax,QWORD PTR [r12+0x18]
  402b12:	mov    rbx,QWORD PTR [r12+0x10]
  402b17:	mov    ecx,DWORD PTR [r12+0x8]
  402b1c:	mov    rdi,QWORD PTR [rax+0x10]
  402b20:	mov    rsi,QWORD PTR [rax]
  402b23:	lea    rax,[rip+0x38955]        # 0x43b47f
  402b2a:	test   rbx,rbx
  402b2d:	cmove  rbx,rax
  402b31:	call   0x4026f0
  402b36:	mov    rdx,QWORD PTR [r13+0x10]
  402b3a:	mov    QWORD PTR [rsp+0x38],rdi
  402b3f:	lea    rcx,[rip+0x38cea]        # 0x43b830
  402b46:	mov    QWORD PTR [rsp+0x30],rsi
  402b4b:	mov    QWORD PTR [rsp+0x28],rbx
  402b50:	mov    QWORD PTR [rsp+0x20],rax
  402b55:	mov    r9,QWORD PTR [r12]
  402b59:	mov    r8,QWORD PTR [r13+0x0]
  402b5d:	call   0x4055e0
  402b62:	mov    ecx,0x1
  402b67:	call   0x4388a0
  402b6c:	nop    DWORD PTR [rax+0x0]
  402b70:	mov    rdi,QWORD PTR [rdi+0x8]
  402b74:	test   rdi,rdi
  402b77:	jne    0x402ac4
  402b7d:	mov    rcx,QWORD PTR [rsp+0x58]
  402b82:	call   0x409a70
  402b87:	lea    rcx,[rip+0x38cea]        # 0x43b878
  402b8e:	call   0x4059c0
  402b93:	lea    rdx,[rip+0x3890a]        # 0x43b4a4
  402b9a:	test   rax,rax
  402b9d:	cmove  rax,rdx
  402ba1:	xor    ecx,ecx
  402ba3:	mov    rdx,rax
  402ba6:	call   0x4015a0
  402bab:	lea    rcx,[rip+0x38ce5]        # 0x43b897
  402bb2:	mov    r14,rax
  402bb5:	call   0x4059c0
  402bba:	test   rax,rax
  402bbd:	je     0x402bcd
  402bbf:	mov    rcx,r14
  402bc2:	mov    rdx,rax
  402bc5:	call   0x4015a0
  402bca:	mov    r14,rax
  402bcd:	lea    rcx,[rip+0x38cd2]        # 0x43b8a6
  402bd4:	call   0x4059c0
  402bd9:	test   rax,rax
  402bdc:	je     0x402bec
  402bde:	mov    rcx,r14
  402be1:	mov    rdx,rax
  402be4:	call   0x4015a0
  402be9:	mov    r14,rax
  402bec:	mov    r12,QWORD PTR [rbx+0x58]
  402bf0:	mov    DWORD PTR [rsp+0x40],0x0
  402bf8:	mov    r15d,0x2
  402bfe:	test   r12,r12
  402c01:	je     0x402cf4
  402c07:	nop    WORD PTR [rax+rax*1+0x0]
  402c10:	mov    rbp,QWORD PTR [r12]
  402c14:	test   BYTE PTR [rbp+0x0],0x8
  402c18:	je     0x402cc1
  402c1e:	mov    r13,QWORD PTR [rbp+0x8]
  402c22:	lea    rdi,[rip+0x38cb6]        # 0x43b8df
  402c29:	mov    rcx,r15
  402c2c:	mov    rsi,r13
  402c2f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402c31:	je     0x402e5d
  402c37:	lea    rdi,[rip+0x38ca4]        # 0x43b8e2
  402c3e:	mov    ecx,0x3
  402c43:	mov    rsi,r13
  402c46:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402c48:	jne    0x402cc1
  402c4a:	mov    eax,0x3
  402c4f:	test   r14,r14
  402c52:	je     0x402cc1
  402c54:	movsxd rsi,eax
  402c57:	mov    rdi,r14
  402c5a:	jmp    0x402c6d
  402c5c:	nop    DWORD PTR [rax+0x0]
  402c60:	mov    rdi,QWORD PTR [rdi+0x8]
  402c64:	test   rdi,rdi
  402c67:	je     0x402cc1
  402c69:	mov    r13,QWORD PTR [rbp+0x8]
  402c6d:	mov    rcx,QWORD PTR [rdi]
  402c70:	lea    rdx,[r13+rsi*1+0x0]
  402c75:	call   0x4387a0
  402c7a:	test   eax,eax
  402c7c:	jne    0x402c60
  402c7e:	mov    rdx,QWORD PTR [rbx]
  402c81:	lea    rcx,[rip+0x38c5e]        # 0x43b8e6
  402c88:	mov    r8,r13
  402c8b:	call   0x405530
  402c90:	lea    rcx,[rip+0x38c71]        # 0x43b908
  402c97:	call   0x4059c0
  402c9c:	test   rax,rax
  402c9f:	jne    0x402c60
  402ca1:	mov    rdx,QWORD PTR [rbp+0x8]
  402ca5:	mov    r8,QWORD PTR [rbx]
  402ca8:	lea    rcx,[rip+0x38c79]        # 0x43b928
  402caf:	call   0x405530
  402cb4:	add    DWORD PTR [rsp+0x40],0x1
  402cb9:	mov    QWORD PTR [r12],0x0
  402cc1:	mov    r12,QWORD PTR [r12+0x8]
  402cc6:	test   r12,r12
  402cc9:	jne    0x402c10
  402ccf:	mov    r13d,DWORD PTR [rsp+0x40]
  402cd4:	test   r13d,r13d
  402cd7:	je     0x402cf4
  402cd9:	mov    rax,QWORD PTR [rbx+0x58]
  402cdd:	nop    DWORD PTR [rax]
  402ce0:	xor    edx,edx
  402ce2:	mov    rcx,rax
  402ce5:	call   0x409d70
  402cea:	sub    r13d,0x1
  402cee:	mov    QWORD PTR [rbx+0x58],rax
  402cf2:	jne    0x402ce0
  402cf4:	lea    rdx,[rip+0xb9e5]        # 0x40e6e0
  402cfb:	xor    r8d,r8d
  402cfe:	mov    rcx,r14
  402d01:	call   0x40a210
  402d06:	mov    rcx,r14
  402d09:	call   0x409a70
  402d0e:	lea    rcx,[rip+0x38bab]        # 0x43b8c0
  402d15:	call   0x4059c0
  402d1a:	lea    rdx,[rip+0x38790]        # 0x43b4b1
  402d21:	test   rax,rax
  402d24:	cmove  rax,rdx
  402d28:	xor    ecx,ecx
  402d2a:	mov    rdx,rax
  402d2d:	call   0x4015a0
  402d32:	mov    r15,QWORD PTR [rbx+0x50]
  402d36:	mov    QWORD PTR [rsp+0x48],rax
  402d3b:	test   r15,r15
  402d3e:	je     0x402f76
  402d44:	mov    DWORD PTR [rsp+0x40],0x0
  402d4c:	nop    DWORD PTR [rax+0x0]
  402d50:	mov    r12,QWORD PTR [r15]
  402d53:	test   BYTE PTR [r12],0x2
  402d58:	je     0x402df0
  402d5e:	mov    r14,QWORD PTR [rsp+0x48]
  402d63:	test   r14,r14
  402d66:	jne    0x402dac
  402d68:	jmp    0x402e1e
  402d6d:	nop    DWORD PTR [rax]
  402d70:	lea    rcx,[r13+0x3]
  402d74:	mov    rdx,rbp
  402d77:	call   0x4387a0
  402d7c:	test   eax,eax
  402d7e:	jne    0x402dc7
  402d80:	mov    rdx,QWORD PTR [rbx]
  402d83:	lea    rcx,[rip+0x38bf4]        # 0x43b97e
  402d8a:	mov    r8,rbp
  402d8d:	call   0x405530
  402d92:	lea    rcx,[rip+0x38c03]        # 0x43b99c
  402d99:	call   0x4059c0
  402d9e:	test   rax,rax
  402da1:	je     0x402e00
  402da3:	mov    r14,QWORD PTR [r14+0x8]
  402da7:	test   r14,r14
  402daa:	je     0x402e1e
  402dac:	mov    r13,QWORD PTR [r12+0x8]
  402db1:	lea    rdi,[rip+0x38b90]        # 0x43b948
  402db8:	mov    ecx,0x3
  402dbd:	mov    rbp,QWORD PTR [r14]
  402dc0:	mov    rsi,r13
  402dc3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402dc5:	je     0x402d70
  402dc7:	lea    rdi,[rip+0x38b7e]        # 0x43b94c
  402dce:	mov    rsi,r13
  402dd1:	mov    ecx,0x2
  402dd6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402dd8:	jne    0x402da3
  402dda:	lea    rcx,[r13+0x2]
  402dde:	mov    rdx,rbp
  402de1:	call   0x4387a0
  402de6:	test   eax,eax
  402de8:	je     0x402d80
  402dea:	jmp    0x402da3
  402dec:	nop    DWORD PTR [rax+0x0]
  402df0:	mov    r15,QWORD PTR [r15+0x8]
  402df4:	test   r15,r15
  402df7:	jne    0x402d50
  402dfd:	jmp    0x402e27
  402dff:	nop
  402e00:	mov    r8,QWORD PTR [rbx]
  402e03:	lea    rcx,[rip+0x38b46]        # 0x43b950
  402e0a:	mov    QWORD PTR [r15],0x0
  402e11:	mov    rdx,rbp
  402e14:	add    DWORD PTR [rsp+0x40],0x1
  402e19:	call   0x405530
  402e1e:	mov    r15,QWORD PTR [r15+0x8]
  402e22:	test   r15,r15
  402e25:	jne    0x402df0
  402e27:	mov    rcx,QWORD PTR [rsp+0x48]
  402e2c:	call   0x409a70
  402e31:	mov    eax,DWORD PTR [rsp+0x40]
  402e35:	test   eax,eax
  402e37:	je     0x402e55
  402e39:	mov    rax,QWORD PTR [rbx+0x50]
  402e3d:	nop    DWORD PTR [rax]
  402e40:	xor    edx,edx
  402e42:	mov    rcx,rax
  402e45:	call   0x409d70
  402e4a:	sub    DWORD PTR [rsp+0x40],0x1
  402e4f:	mov    QWORD PTR [rbx+0x50],rax
  402e53:	jne    0x402e40
  402e55:	mov    rax,rbx
  402e58:	jmp    0x4027d9
  402e5d:	mov    eax,0x2
  402e62:	jmp    0x402c4f
  402e67:	mov    rcx,rdi
  402e6a:	call   0x4020f0
  402e6f:	test   eax,eax
  402e71:	jne    0x402817
  402e77:	lea    rdx,[rip+0x383a6]        # 0x43b224
  402e7e:	xor    r8d,r8d
  402e81:	mov    rcx,rdi
  402e84:	call   0x4184b0
  402e89:	xor    edx,edx
  402e8b:	mov    rbp,rax
  402e8e:	mov    rcx,rax
  402e91:	call   0x4027b0
  402e96:	mov    rcx,rbp
  402e99:	mov    rbx,rax
  402e9c:	call   0x40e6e0
  402ea1:	test   rbx,rbx
  402ea4:	je     0x402817
  402eaa:	lea    rcx,[rip+0x3866f]        # 0x43b520
  402eb1:	mov    rdx,rdi
  402eb4:	call   0x405530
  402eb9:	mov    rax,rbx
  402ebc:	jmp    0x4027d9
  402ec1:	lea    rcx,[rip+0x38618]        # 0x43b4e0
  402ec8:	mov    rdx,rdi
  402ecb:	mov    rbp,rdi
  402ece:	call   0x405530
  402ed3:	jmp    0x402829
  402ed8:	xor    eax,eax
  402eda:	test   esi,esi
  402edc:	je     0x4027d9
  402ee2:	lea    rcx,[rip+0x38667]        # 0x43b550
  402ee9:	mov    r8,rdi
  402eec:	mov    rdx,rdi
  402eef:	mov    QWORD PTR [rsp+0x40],rax
  402ef4:	call   0x4055e0
  402ef9:	mov    rax,QWORD PTR [rsp+0x40]
  402efe:	jmp    0x4027d9
  402f03:	call   0x438788
  402f08:	cdqe   
  402f0a:	lea    rcx,[rdi+rax*1-0x3]
  402f0f:	cmp    rdi,rcx
  402f12:	je     0x402ff8
  402f18:	cmp    BYTE PTR [rcx],0x5c
  402f1b:	je     0x402ff8
  402f21:	mov    rax,rcx
  402f24:	jmp    0x402f2b
  402f26:	cmp    BYTE PTR [rax],0x5c
  402f29:	je     0x402f34
  402f2b:	sub    rax,0x1
  402f2f:	cmp    rdi,rax
  402f32:	jne    0x402f26
  402f34:	cmp    rcx,rax
  402f37:	jb     0x402f4f
  402f39:	mov    rdx,rcx
  402f3c:	mov    rcx,rax
  402f3f:	sub    rdx,rax
  402f42:	call   0x418340
  402f47:	mov    QWORD PTR [rbx],rax
  402f4a:	jmp    0x40289b
  402f4f:	lea    rax,[rip+0x38a1b]        # 0x43b971
  402f56:	lea    r9,[rip+0x38a93]        # 0x43b9f0
  402f5d:	lea    rdx,[rip+0x384a4]        # 0x43b408
  402f64:	mov    r8d,0x156
  402f6a:	xor    ecx,ecx
  402f6c:	mov    QWORD PTR [rsp+0x20],rax
  402f71:	call   0x41e680
  402f76:	mov    rcx,QWORD PTR [rsp+0x48]
  402f7b:	call   0x409a70
  402f80:	jmp    0x402e55
  402f85:	mov    ecx,DWORD PTR [rdi+0x8]
  402f88:	call   0x4026f0
  402f8d:	mov    r8,QWORD PTR [rbp+0x0]
  402f91:	mov    r9,rax
  402f94:	mov    rax,QWORD PTR [rbp+0x10]
  402f98:	lea    rcx,[rip+0x38829]        # 0x43b7c8
  402f9f:	mov    QWORD PTR [rsp+0x28],r8
  402fa4:	mov    QWORD PTR [rsp+0x30],rax
  402fa9:	mov    rax,QWORD PTR [rdi+0x10]
  402fad:	mov    QWORD PTR [rsp+0x20],rax
  402fb2:	mov    rdx,QWORD PTR [rbx]
  402fb5:	call   0x4055e0
  402fba:	mov    r8,QWORD PTR [rbp+0x20]
  402fbe:	test   r8,r8
  402fc1:	je     0x402b62
  402fc7:	mov    rdx,QWORD PTR [rbp+0x8]
  402fcb:	lea    rcx,[rip+0x38836]        # 0x43b808
  402fd2:	call   0x4055e0
  402fd7:	jmp    0x402b62
  402fdc:	mov    r8,QWORD PTR [rbx]
  402fdf:	mov    rdx,QWORD PTR [rdi]
  402fe2:	lea    rcx,[rip+0x386b7]        # 0x43b6a0
  402fe9:	call   0x4055e0
  402fee:	mov    ecx,0x1
  402ff3:	call   0x4388a0
  402ff8:	xor    edx,edx
  402ffa:	jmp    0x402f42
  402fff:	lea    rcx,[rip+0x38604]        # 0x43b60a
  403006:	mov    rdx,rbp
  403009:	call   0x405530
  40300e:	xor    eax,eax
  403010:	jmp    0x4027d9
  403015:	lea    rcx,[rip+0x38784]        # 0x43b7a0
  40301c:	call   0x4055e0
  403021:	mov    ecx,0x1
  403026:	call   0x4388a0
  40302b:	lea    rcx,[rip+0x38746]        # 0x43b778
  403032:	call   0x4055e0
  403037:	mov    ecx,0x1
  40303c:	call   0x4388a0
  403041:	lea    rcx,[rip+0x38708]        # 0x43b750
  403048:	call   0x4055e0
  40304d:	mov    ecx,0x1
  403052:	call   0x4388a0
  403057:	call   QWORD PTR [rip+0x8382b]        # 0x486888
  40305d:	lea    rcx,[rip+0x3869c]        # 0x43b700
  403064:	lea    r9,[rax+0x60]
  403068:	mov    r8d,0x49
  40306e:	mov    edx,0x1
  403073:	call   0x438848
  403078:	mov    ecx,0x1
  40307d:	call   0x4388a0
  403082:	nop
  403083:	nop    DWORD PTR [rax]
  403086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403090:	mov    edx,0x1
  403095:	jmp    0x4027b0
  40309a:	nop    WORD PTR [rax+rax*1+0x0]
  4030a0:	push   rsi
  4030a1:	push   rbx
  4030a2:	sub    rsp,0x38
  4030a6:	mov    edx,0x1
  4030ab:	mov    rsi,r8
  4030ae:	call   0x4027b0
  4030b3:	test   rax,rax
  4030b6:	mov    rbx,rax
  4030b9:	je     0x403103
  4030bb:	mov    rcx,QWORD PTR [rax]
  4030be:	call   0x438788
  4030c3:	movsxd rcx,esi
  4030c6:	mov    edx,0x20
  4030cb:	sub    rcx,rax
  4030ce:	call   0x418390
  4030d3:	mov    rsi,rax
  4030d6:	mov    rax,QWORD PTR [rbx+0x18]
  4030da:	mov    r9,QWORD PTR [rbx+0x8]
  4030de:	lea    rcx,[rip+0x388d4]        # 0x43b9b9
  4030e5:	mov    r8,rsi
  4030e8:	mov    QWORD PTR [rsp+0x20],rax
  4030ed:	mov    rdx,QWORD PTR [rbx]
  4030f0:	call   0x4387d8
  4030f5:	mov    rcx,rsi
  4030f8:	add    rsp,0x38
  4030fc:	pop    rbx
  4030fd:	pop    rsi
  4030fe:	jmp    0x40e6e0
  403103:	add    rsp,0x38
  403107:	pop    rbx
  403108:	pop    rsi
  403109:	ret    
  40310a:	nop    WORD PTR [rax+rax*1+0x0]
  403110:	xor    edx,edx
  403112:	jmp    0x4027b0
  403117:	nop    WORD PTR [rax+rax*1+0x0]
  403120:	sub    rsp,0x38
  403124:	mov    rcx,QWORD PTR [rip+0x80f2d]        # 0x484058
  40312b:	lea    rdx,[rip+0xffffffffffffe4de]        # 0x401610
  403132:	mov    DWORD PTR [rip+0x80ef4],0x1        # 0x484030
  40313c:	lea    r8,[rsp+0x2c]
  403141:	mov    DWORD PTR [rsp+0x2c],0x0
  403149:	mov    DWORD PTR [rip+0x36ec1],0x1        # 0x43a014
  403153:	call   0x409430
  403158:	mov    eax,DWORD PTR [rsp+0x2c]
  40315c:	mov    rcx,QWORD PTR [rip+0x80ef5]        # 0x484058
  403163:	lea    rdx,[rip+0xffffffffffffff36]        # 0x4030a0
  40316a:	lea    r8d,[rax+0x1]
  40316e:	movsxd r8,r8d
  403171:	call   0x409430
  403176:	nop
  403177:	add    rsp,0x38
  40317b:	ret    
  40317c:	nop    DWORD PTR [rax+0x0]
  403180:	mov    DWORD PTR [rip+0x36e86],0x0        # 0x43a010
  40318a:	ret    
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]
  403190:	mov    DWORD PTR [rip+0x36e76],0x1        # 0x43a010
  40319a:	ret    
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	mov    DWORD PTR [rip+0x80e86],0x0        # 0x484030
  4031aa:	ret    
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b0:	mov    DWORD PTR [rip+0x80e76],0x1        # 0x484030
  4031ba:	ret    
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031c0:	mov    DWORD PTR [rip+0x36e4a],0x0        # 0x43a014
  4031ca:	ret    
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	mov    DWORD PTR [rip+0x36e3a],0x1        # 0x43a014
  4031da:	ret    
  4031db:	nop
  4031dc:	nop
  4031dd:	nop
  4031de:	nop
  4031df:	nop
  4031e0:	push   rbp
  4031e1:	push   rdi
  4031e2:	push   rsi
  4031e3:	push   rbx
  4031e4:	sub    rsp,0x28
  4031e8:	movzx  eax,BYTE PTR [rcx]
  4031eb:	mov    rsi,rcx
  4031ee:	mov    rdi,rdx
  4031f1:	test   al,al
  4031f3:	je     0x403287
  4031f9:	movzx  ebx,BYTE PTR [rdx]
  4031fc:	test   bl,bl
  4031fe:	jne    0x403238
  403200:	jmp    0x403250
  403202:	cmp    al,0x5c
  403204:	je     0x40323c
  403206:	movsx  ecx,al
  403209:	call   0x4192a0
  40320e:	movsx  ecx,bl
  403211:	movsx  ebp,al
  403214:	call   0x4192a0
  403219:	cmp    bpl,al
  40321c:	jne    0x403282
  40321e:	add    rsi,0x1
  403222:	movzx  eax,BYTE PTR [rsi]
  403225:	lea    rdx,[rdi+0x1]
  403229:	test   al,al
  40322b:	je     0x403272
  40322d:	movzx  ebx,BYTE PTR [rdi+0x1]
  403231:	test   bl,bl
  403233:	je     0x403250
  403235:	mov    rdi,rdx
  403238:	cmp    al,0x2f
  40323a:	jne    0x403202
  40323c:	cmp    bl,0x2f
  40323f:	je     0x40321e
  403241:	cmp    bl,0x5c
  403244:	jne    0x403206
  403246:	jmp    0x40321e
  403248:	nop    DWORD PTR [rax+rax*1+0x0]
  403250:	movsx  ecx,al
  403253:	call   0x4192a0
  403258:	xor    ecx,ecx
  40325a:	movsx  ebp,al
  40325d:	call   0x4192a0
  403262:	movsx  eax,al
  403265:	sub    ebp,eax
  403267:	mov    eax,ebp
  403269:	add    rsp,0x28
  40326d:	pop    rbx
  40326e:	pop    rsi
  40326f:	pop    rdi
  403270:	pop    rbp
  403271:	ret    
  403272:	xor    ecx,ecx
  403274:	call   0x4192a0
  403279:	movsx  ecx,BYTE PTR [rdi+0x1]
  40327d:	movsx  ebp,al
  403280:	jmp    0x40325d
  403282:	movsx  ecx,BYTE PTR [rdi]
  403285:	jmp    0x40325d
  403287:	xor    ecx,ecx
  403289:	call   0x4192a0
  40328e:	movsx  ecx,BYTE PTR [rdi]
  403291:	movsx  ebp,al
  403294:	jmp    0x40325d
  403296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032a0:	push   rdi
  4032a1:	push   rsi
  4032a2:	push   rbx
  4032a3:	sub    rsp,0x20
  4032a7:	xor    esi,esi
  4032a9:	mov    rbx,rcx
  4032ac:	call   0x438788
  4032b1:	lea    rdi,[rax+0xa]
  4032b5:	mov    rcx,rdi
  4032b8:	call   0x40e5c0
  4032bd:	movzx  r8d,BYTE PTR [rbx]
  4032c1:	test   r8b,r8b
  4032c4:	jne    0x4032e1
  4032c6:	jmp    0x40335f
  4032cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032d0:	add    rbx,0x1
  4032d4:	movzx  r8d,BYTE PTR [rbx]
  4032d8:	test   r8b,r8b
  4032db:	je     0x40335f
  4032e1:	lea    edx,[r8-0x25]
  4032e5:	cmp    r8b,0x23
  4032e9:	setle  cl
  4032ec:	cmp    dl,0x2
  4032ef:	setbe  dl
  4032f2:	or     cl,dl
  4032f4:	jne    0x403370
  4032f6:	cmp    r8b,0x2a
  4032fa:	je     0x403370
  4032fc:	lea    edx,[r8-0x3b]
  403300:	cmp    dl,0x1
  403303:	jbe    0x403370
  403305:	lea    edx,[r8-0x3e]
  403309:	cmp    dl,0x1
  40330c:	jbe    0x403370
  40330e:	cmp    r8b,0x60
  403312:	je     0x403370
  403314:	mov    edx,r8d
  403317:	and    edx,0xffffffdf
  40331a:	sub    edx,0x5b
  40331d:	cmp    dl,0x2
  403320:	jbe    0x403370
  403322:	cmp    r8b,0x7f
  403326:	mov    r9,rsi
  403329:	je     0x403370
  40332b:	nop    DWORD PTR [rax+rax*1+0x0]
  403330:	movzx  edx,BYTE PTR [rbx]
  403333:	lea    rsi,[r9+0x1]
  403337:	mov    BYTE PTR [rax+r9*1],dl
  40333b:	add    r9,0x3
  40333f:	cmp    r9,rdi
  403342:	jb     0x4032d0
  403344:	add    rdi,rdi
  403347:	add    rbx,0x1
  40334b:	mov    rcx,rax
  40334e:	mov    rdx,rdi
  403351:	call   0x40e670
  403356:	movzx  r8d,BYTE PTR [rbx]
  40335a:	test   r8b,r8b
  40335d:	jne    0x4032e1
  40335f:	mov    BYTE PTR [rax+rsi*1],0x0
  403363:	add    rsp,0x20
  403367:	pop    rbx
  403368:	pop    rsi
  403369:	pop    rdi
  40336a:	ret    
  40336b:	nop    DWORD PTR [rax+rax*1+0x0]
  403370:	mov    BYTE PTR [rax+rsi*1],0x5c
  403374:	lea    r9,[rsi+0x1]
  403378:	jmp    0x403330
  40337a:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	push   rbp
  403381:	push   rdi
  403382:	push   rsi
  403383:	push   rbx
  403384:	sub    rsp,0x28
  403388:	test   rcx,rcx
  40338b:	mov    rbx,rcx
  40338e:	je     0x403412
  403394:	movzx  eax,BYTE PTR [rcx]
  403397:	mov    rbp,QWORD PTR [rip+0x836ba]        # 0x486a58
  40339e:	test   al,al
  4033a0:	jne    0x4033af
  4033a2:	jmp    0x4033b8
  4033a4:	add    rbx,0x1
  4033a8:	movzx  eax,BYTE PTR [rbx]
  4033ab:	test   al,al
  4033ad:	je     0x4033b8
  4033af:	movzx  ecx,al
  4033b2:	call   rbp
  4033b4:	test   eax,eax
  4033b6:	jne    0x4033a4
  4033b8:	mov    rcx,rbx
  4033bb:	call   0x438788
  4033c0:	test   eax,eax
  4033c2:	mov    edi,eax
  4033c4:	movsxd rsi,eax
  4033c7:	mov    rbp,QWORD PTR [rip+0x8368a]        # 0x486a58
  4033ce:	jg     0x4033db
  4033d0:	jmp    0x4033e6
  4033d2:	sub    rsi,0x1
  4033d6:	sub    edi,0x1
  4033d9:	je     0x403400
  4033db:	movzx  ecx,BYTE PTR [rbx+rsi*1-0x1]
  4033e0:	call   rbp
  4033e2:	test   eax,eax
  4033e4:	jne    0x4033d2
  4033e6:	mov    rdx,rsi
  4033e9:	mov    rcx,rbx
  4033ec:	add    rsp,0x28
  4033f0:	pop    rbx
  4033f1:	pop    rsi
  4033f2:	pop    rdi
  4033f3:	pop    rbp
  4033f4:	jmp    0x418340
  4033f9:	nop    DWORD PTR [rax+0x0]
  403400:	xor    edx,edx
  403402:	mov    rcx,rbx
  403405:	add    rsp,0x28
  403409:	pop    rbx
  40340a:	pop    rsi
  40340b:	pop    rdi
  40340c:	pop    rbp
  40340d:	jmp    0x418340
  403412:	lea    r8,[rip+0x385f7]        # 0x43ba10
  403419:	lea    rdx,[rip+0x38bef]        # 0x43c00f
  403420:	xor    ecx,ecx
  403422:	call   0x40fd20
  403427:	xor    eax,eax
  403429:	add    rsp,0x28
  40342d:	pop    rbx
  40342e:	pop    rsi
  40342f:	pop    rdi
  403430:	pop    rbp
  403431:	ret    
  403432:	nop    DWORD PTR [rax+0x0]
  403436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403440:	push   r15
  403442:	push   r14
  403444:	push   r13
  403446:	push   r12
  403448:	push   rbp
  403449:	push   rdi
  40344a:	push   rsi
  40344b:	push   rbx
  40344c:	sub    rsp,0x58
  403450:	mov    eax,DWORD PTR [rip+0x80c1a]        # 0x484070
  403456:	lea    r9,[rip+0x385bf]        # 0x43ba1c
  40345d:	test   eax,eax
  40345f:	lea    rax,[rip+0x385bd]        # 0x43ba23
  403466:	cmove  rax,r9
  40346a:	lea    r9,[rip+0x385ae]        # 0x43ba1f
  403471:	mov    QWORD PTR [rsp+0x38],rax
  403476:	lea    rax,[rip+0x385a5]        # 0x43ba22
  40347d:	cmovne r9,rax
  403481:	mov    QWORD PTR [rsp+0x40],r9
  403486:	lea    r9,[rip+0x385a0]        # 0x43ba2d
  40348d:	cmove  r9,rax
  403491:	xor    ebp,ebp
  403493:	test   edx,edx
  403495:	mov    QWORD PTR [rsp+0x30],r9
  40349a:	jle    0x403581
  4034a0:	mov    rax,QWORD PTR [rip+0x835b1]        # 0x486a58
  4034a7:	mov    r14,r8
  4034aa:	mov    r15d,edx
  4034ad:	mov    r13,rcx
  4034b0:	mov    QWORD PTR [rsp+0x48],rax
  4034b5:	jmp    0x403505
  4034b7:	nop    WORD PTR [rax+rax*1+0x0]
  4034c0:	lea    esi,[rbp+0x1]
  4034c3:	cmp    esi,r15d
  4034c6:	jl     0x4035d0
  4034cc:	test   al,al
  4034ce:	je     0x40356a
  4034d4:	mov    rcx,rbx
  4034d7:	mov    BYTE PTR [r12],0x4
  4034dc:	mov    ebp,esi
  4034de:	call   0x4182b0
  4034e3:	mov    rcx,QWORD PTR [r13+0x0]
  4034e7:	mov    rdx,r12
  4034ea:	mov    QWORD PTR [r12+0x8],rax
  4034ef:	call   0x409b50
  4034f4:	mov    QWORD PTR [r13+0x0],rax
  4034f8:	mov    rcx,rbx
  4034fb:	call   0x40e6e0
  403500:	cmp    r15d,ebp
  403503:	jle    0x403581
  403505:	mov    ecx,0x10
  40350a:	call   0x40e5c0
  40350f:	mov    r12,rax
  403512:	movsxd rax,ebp
  403515:	mov    rcx,QWORD PTR [r14+rax*8]
  403519:	lea    rdi,[rax*8+0x0]
  403521:	mov    QWORD PTR [rsp+0x28],rdi
  403526:	call   0x403380
  40352b:	mov    rsi,rax
  40352e:	mov    rcx,rax
  403531:	call   0x4032a0
  403536:	mov    rcx,rsi
  403539:	mov    rbx,rax
  40353c:	call   0x40e6e0
  403541:	movzx  eax,BYTE PTR [rbx]
  403544:	cmp    al,0x2d
  403546:	je     0x403592
  403548:	lea    rsi,[rip+0x384e9]        # 0x43ba38
  40354f:	mov    rdi,rbx
  403552:	mov    ecx,0xb
  403557:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403559:	je     0x4034c0
  40355f:	test   al,al
  403561:	lea    esi,[rbp+0x1]
  403564:	jne    0x4034d4
  40356a:	mov    rcx,r12
  40356d:	mov    ebp,esi
  40356f:	call   0x40e6e0
  403574:	mov    rcx,rbx
  403577:	call   0x40e6e0
  40357c:	cmp    r15d,ebp
  40357f:	jg     0x403505
  403581:	add    rsp,0x58
  403585:	pop    rbx
  403586:	pop    rsi
  403587:	pop    rdi
  403588:	pop    rbp
  403589:	pop    r12
  40358b:	pop    r13
  40358d:	pop    r14
  40358f:	pop    r15
  403591:	ret    
  403592:	movzx  edx,BYTE PTR [rbx+0x1]
  403596:	cmp    dl,0x6c
  403599:	je     0x403634
  40359f:	cmp    dl,0x4c
  4035a2:	je     0x403690
  4035a8:	lea    rsi,[rip+0x38489]        # 0x43ba38
  4035af:	mov    rdi,rbx
  4035b2:	mov    ecx,0xb
  4035b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4035b9:	je     0x4034c0
  4035bf:	lea    esi,[rbp+0x1]
  4035c2:	jmp    0x4034d4
  4035c7:	nop    WORD PTR [rax+rax*1+0x0]
  4035d0:	mov    rax,QWORD PTR [rsp+0x28]
  4035d5:	add    ebp,0x2
  4035d8:	mov    rcx,QWORD PTR [r14+rax*1+0x8]
  4035dd:	call   0x403380
  4035e2:	mov    rcx,rax
  4035e5:	mov    rsi,rax
  4035e8:	call   0x4032a0
  4035ed:	lea    rdx,[rip+0x3844f]        # 0x43ba43
  4035f4:	xor    r9d,r9d
  4035f7:	mov    r8,rax
  4035fa:	mov    rcx,rbx
  4035fd:	mov    rdi,rax
  403600:	mov    BYTE PTR [r12],0x4
  403605:	call   0x4184b0
  40360a:	mov    rcx,QWORD PTR [r13+0x0]
  40360e:	mov    rdx,r12
  403611:	mov    QWORD PTR [r12+0x8],rax
  403616:	call   0x409b50
  40361b:	mov    rcx,rdi
  40361e:	mov    QWORD PTR [r13+0x0],rax
  403622:	call   0x40e6e0
  403627:	mov    rcx,rsi
  40362a:	call   0x40e6e0
  40362f:	jmp    0x4034f8
  403634:	lea    rdi,[rip+0x383f7]        # 0x43ba32
  40363b:	mov    ecx,0x5
  403640:	mov    rsi,rbx
  403643:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403645:	je     0x403548
  40364b:	movzx  ecx,BYTE PTR [rbx+0x2]
  40364f:	lea    rsi,[rbx+0x2]
  403653:	mov    rdi,QWORD PTR [rsp+0x48]
  403658:	test   cl,cl
  40365a:	jne    0x40366b
  40365c:	jmp    0x403671
  40365e:	xchg   ax,ax
  403660:	add    rsi,0x1
  403664:	movzx  ecx,BYTE PTR [rsi]
  403667:	test   cl,cl
  403669:	je     0x403671
  40366b:	call   rdi
  40366d:	test   eax,eax
  40366f:	jne    0x403660
  403671:	mov    BYTE PTR [r12],0x1
  403676:	xor    r9d,r9d
  403679:	mov    r8,QWORD PTR [rsp+0x30]
  40367e:	mov    rdx,rsi
  403681:	mov    rcx,QWORD PTR [rsp+0x40]
  403686:	jmp    0x4036ca
  403688:	nop    DWORD PTR [rax+rax*1+0x0]
  403690:	movzx  ecx,BYTE PTR [rbx+0x2]
  403694:	lea    rsi,[rbx+0x2]
  403698:	test   cl,cl
  40369a:	jne    0x4036ab
  40369c:	jmp    0x4036b5
  40369e:	xchg   ax,ax
  4036a0:	add    rsi,0x1
  4036a4:	movzx  ecx,BYTE PTR [rsi]
  4036a7:	test   cl,cl
  4036a9:	je     0x4036b5
  4036ab:	call   QWORD PTR [rip+0x833a7]        # 0x486a58
  4036b1:	test   eax,eax
  4036b3:	jne    0x4036a0
  4036b5:	mov    r8,QWORD PTR [rsp+0x30]
  4036ba:	mov    rcx,QWORD PTR [rsp+0x38]
  4036bf:	xor    r9d,r9d
  4036c2:	mov    BYTE PTR [r12],0x2
  4036c7:	mov    rdx,rsi
  4036ca:	call   0x4184b0
  4036cf:	mov    rcx,QWORD PTR [r13+0x0]
  4036d3:	mov    rdx,r12
  4036d6:	mov    QWORD PTR [r12+0x8],rax
  4036db:	add    ebp,0x1
  4036de:	call   0x409b50
  4036e3:	mov    QWORD PTR [r13+0x0],rax
  4036e7:	jmp    0x4034f8
  4036ec:	nop    DWORD PTR [rax+0x0]
  4036f0:	push   r14
  4036f2:	push   r13
  4036f4:	push   r12
  4036f6:	push   rbp
  4036f7:	push   rdi
  4036f8:	push   rsi
  4036f9:	push   rbx
  4036fa:	sub    rsp,0x20
  4036fe:	mov    rdi,rcx
  403701:	mov    rcx,rdx
  403704:	mov    r12,r8
  403707:	call   0x403380
  40370c:	lea    rcx,[rip+0x3830f]        # 0x43ba22
  403713:	mov    rbp,rax
  403716:	mov    rbx,rbp
  403719:	call   0x41ae90
  40371e:	mov    rsi,rax
  403721:	movsx  r8d,BYTE PTR [rbx]
  403725:	test   r8b,r8b
  403728:	je     0x403761
  40372a:	cmp    r8b,0x24
  40372e:	je     0x4037a1
  403730:	mov    rdx,QWORD PTR [rsi+0x8]
  403734:	lea    rax,[rdx+0x1]
  403738:	cmp    rax,QWORD PTR [rsi+0x10]
  40373c:	jae    0x403790
  40373e:	mov    rcx,QWORD PTR [rsi]
  403741:	mov    QWORD PTR [rsi+0x8],rax
  403745:	mov    BYTE PTR [rcx+rdx*1],r8b
  403749:	mov    rdx,QWORD PTR [rsi]
  40374c:	mov    rax,QWORD PTR [rsi+0x8]
  403750:	mov    BYTE PTR [rdx+rax*1],0x0
  403754:	add    rbx,0x1
  403758:	movsx  r8d,BYTE PTR [rbx]
  40375c:	test   r8b,r8b
  40375f:	jne    0x40372a
  403761:	mov    rcx,rbp
  403764:	call   0x40e6e0
  403769:	mov    rbx,QWORD PTR [rsi]
  40376c:	xor    edx,edx
  40376e:	mov    rcx,rsi
  403771:	call   0x41a8e0
  403776:	mov    rax,rbx
  403779:	add    rsp,0x20
  40377d:	pop    rbx
  40377e:	pop    rsi
  40377f:	pop    rdi
  403780:	pop    rbp
  403781:	pop    r12
  403783:	pop    r13
  403785:	pop    r14
  403787:	ret    
  403788:	nop    DWORD PTR [rax+rax*1+0x0]
  403790:	mov    rdx,0xffffffffffffffff
  403797:	mov    rcx,rsi
  40379a:	call   0x41b0f0
  40379f:	jmp    0x403754
  4037a1:	movzx  edx,BYTE PTR [rbx+0x1]
  4037a5:	cmp    dl,0x24
  4037a8:	je     0x403810
  4037aa:	cmp    dl,0x7b
  4037ad:	jne    0x403730
  4037af:	lea    rcx,[rbx+0x2]
  4037b3:	jmp    0x4037bd
  4037b5:	test   dl,dl
  4037b7:	je     0x4037c6
  4037b9:	movzx  edx,BYTE PTR [rbx+0x1]
  4037bd:	add    rbx,0x1
  4037c1:	cmp    dl,0x7d
  4037c4:	jne    0x4037b5
  4037c6:	mov    rdx,rbx
  4037c9:	add    rbx,0x1
  4037cd:	sub    rdx,rcx
  4037d0:	call   0x418340
  4037d5:	mov    rcx,rdi
  4037d8:	mov    rdx,rax
  4037db:	mov    r14,rax
  4037de:	call   0x402490
  4037e3:	test   rax,rax
  4037e6:	mov    r13,rax
  4037e9:	je     0x403857
  4037eb:	mov    rcx,r14
  4037ee:	call   0x40e6e0
  4037f3:	mov    rcx,rsi
  4037f6:	mov    rdx,r13
  4037f9:	call   0x41ace0
  4037fe:	mov    rcx,r13
  403801:	call   0x40e6e0
  403806:	jmp    0x403721
  40380b:	nop    DWORD PTR [rax+rax*1+0x0]
  403810:	mov    rax,QWORD PTR [rsi+0x8]
  403814:	lea    rdx,[rax+0x1]
  403818:	cmp    rdx,QWORD PTR [rsi+0x10]
  40381c:	jae    0x403840
  40381e:	mov    rcx,QWORD PTR [rsi]
  403821:	mov    QWORD PTR [rsi+0x8],rdx
  403825:	mov    BYTE PTR [rcx+rax*1],0x24
  403829:	mov    rdx,QWORD PTR [rsi]
  40382c:	mov    rax,QWORD PTR [rsi+0x8]
  403830:	mov    BYTE PTR [rdx+rax*1],0x0
  403834:	add    rbx,0x2
  403838:	jmp    0x403721
  40383d:	nop    DWORD PTR [rax]
  403840:	mov    r8d,0x24
  403846:	mov    rdx,0xffffffffffffffff
  40384d:	mov    rcx,rsi
  403850:	call   0x41b0f0
  403855:	jmp    0x403834
  403857:	lea    rcx,[rip+0x381ea]        # 0x43ba48
  40385e:	mov    r8,r12
  403861:	mov    rdx,r14
  403864:	call   0x4055e0
  403869:	mov    ecx,0x1
  40386e:	call   0x4388a0
  403873:	nop
  403874:	xchg   ax,ax
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	push   r15
  403882:	push   r14
  403884:	push   r13
  403886:	push   r12
  403888:	push   rbp
  403889:	push   rdi
  40388a:	push   rsi
  40388b:	push   rbx
  40388c:	sub    rsp,0x68
  403890:	movzx  edi,BYTE PTR [rdx]
  403893:	mov    QWORD PTR [rsp+0x30],rcx
  403898:	mov    rbx,rdx
  40389b:	mov    QWORD PTR [rsp+0x58],r8
  4038a0:	test   dil,dil
  4038a3:	je     0x403dc3
  4038a9:	mov    r13,QWORD PTR [rip+0x831a8]        # 0x486a58
  4038b0:	xor    esi,esi
  4038b2:	xor    r15d,r15d
  4038b5:	cmp    esi,0x5
  4038b8:	mov    r14,rdx
  4038bb:	lea    rbp,[rip+0x382f2]        # 0x43bbb4
  4038c2:	mov    QWORD PTR [rsp+0x38],r13
  4038c7:	mov    QWORD PTR [rsp+0x40],r13
  4038cc:	mov    r12,r13
  4038cf:	mov    QWORD PTR [rsp+0x48],r13
  4038d4:	ja     0x403a63
  4038da:	nop    WORD PTR [rax+rax*1+0x0]
  4038e0:	mov    eax,esi
  4038e2:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  4038e7:	add    rax,rbp
  4038ea:	jmp    rax
  4038ec:	nop    DWORD PTR [rax+0x0]
  4038f0:	mov    r8,rbx
  4038f3:	mov    rbx,r14
  4038f6:	cmp    dil,0x2c
  4038fa:	je     0x403b60
  403900:	mov    QWORD PTR [rsp+0x50],r8
  403905:	movzx  ecx,dil
  403909:	mov    rax,QWORD PTR [rsp+0x48]
  40390e:	call   rax
  403910:	test   eax,eax
  403912:	mov    r8,QWORD PTR [rsp+0x50]
  403917:	je     0x403b50
  40391d:	movzx  edi,BYTE PTR [r8+0x1]
  403922:	lea    rax,[r8+0x1]
  403926:	test   dil,dil
  403929:	je     0x403deb
  40392f:	mov    r8,rax
  403932:	jmp    0x4038f6
  403934:	cmp    dil,0x2c
  403938:	je     0x403949
  40393a:	movzx  ecx,dil
  40393e:	call   r13
  403941:	test   eax,eax
  403943:	je     0x403a45
  403949:	mov    rdx,rbx
  40394c:	mov    rcx,r14
  40394f:	sub    rdx,r14
  403952:	call   0x418340
  403957:	mov    rcx,r15
  40395a:	mov    rdx,rax
  40395d:	call   0x409b50
  403962:	movzx  edi,BYTE PTR [rbx+0x1]
  403966:	mov    r15,rax
  403969:	lea    r8,[rbx+0x1]
  40396d:	test   dil,dil
  403970:	jne    0x4038f6
  403972:	mov    r14,rbx
  403975:	mov    rbx,r8
  403978:	cmp    rbx,r14
  40397b:	je     0x403999
  40397d:	mov    rdx,rbx
  403980:	mov    rcx,r14
  403983:	sub    rdx,r14
  403986:	call   0x418340
  40398b:	mov    rcx,r15
  40398e:	mov    rdx,rax
  403991:	call   0x409b50
  403996:	mov    r15,rax
  403999:	mov    rcx,r15
  40399c:	xor    r15d,r15d
  40399f:	call   0x409fa0
  4039a4:	test   rax,rax
  4039a7:	mov    r14,rax
  4039aa:	mov    QWORD PTR [rsp+0x38],rax
  4039af:	je     0x403cbb
  4039b5:	mov    r12,QWORD PTR [rip+0x8309c]        # 0x486a58
  4039bc:	nop    DWORD PTR [rax+0x0]
  4039c0:	mov    ecx,0x20
  4039c5:	mov    rsi,QWORD PTR [r14]
  4039c8:	call   0x40e610
  4039cd:	mov    r13,rax
  4039d0:	mov    DWORD PTR [rax+0x8],0x6
  4039d7:	mov    rax,QWORD PTR [rsp+0x30]
  4039dc:	mov    rcx,r15
  4039df:	mov    rdx,r13
  4039e2:	mov    QWORD PTR [r13+0x18],rax
  4039e6:	call   0x409b50
  4039eb:	mov    r15,rax
  4039ee:	movzx  eax,BYTE PTR [rsi]
  4039f1:	test   al,al
  4039f3:	je     0x403a12
  4039f5:	cmp    al,0x2c
  4039f7:	je     0x403a07
  4039f9:	movzx  ecx,al
  4039fc:	call   r12
  4039ff:	test   eax,eax
  403a01:	je     0x403b70
  403a07:	add    rsi,0x1
  403a0b:	movzx  eax,BYTE PTR [rsi]
  403a0e:	test   al,al
  403a10:	jne    0x4039f5
  403a12:	mov    rdx,QWORD PTR [rsp+0x58]
  403a17:	lea    rcx,[rip+0x380a2]        # 0x43bac0
  403a1e:	call   0x4055e0
  403a23:	mov    ecx,0x1
  403a28:	call   0x4388a0
  403a2d:	nop    DWORD PTR [rax]
  403a30:	movzx  ecx,dil
  403a34:	mov    rax,QWORD PTR [rsp+0x38]
  403a39:	call   rax
  403a3b:	test   eax,eax
  403a3d:	mov    eax,0x5
  403a42:	cmove  esi,eax
  403a45:	mov    r8,rbx
  403a48:	movzx  edi,BYTE PTR [r8+0x1]
  403a4d:	lea    rbx,[r8+0x1]
  403a51:	test   dil,dil
  403a54:	je     0x403978
  403a5a:	cmp    esi,0x5
  403a5d:	jbe    0x4038e0
  403a63:	lea    r9,[rip+0x385b6]        # 0x43c020
  403a6a:	lea    rdx,[rip+0x37fff]        # 0x43ba70
  403a71:	mov    QWORD PTR [rsp+0x20],0x0
  403a7a:	mov    r8d,0x171
  403a80:	xor    ecx,ecx
  403a82:	call   0x41e540
  403a87:	nop    WORD PTR [rax+rax*1+0x0]
  403a90:	movzx  ecx,dil
  403a94:	mov    rax,QWORD PTR [rsp+0x40]
  403a99:	call   rax
  403a9b:	test   eax,eax
  403a9d:	jne    0x403a45
  403a9f:	lea    eax,[rdi-0x3c]
  403aa2:	cmp    al,0x2
  403aa4:	jbe    0x403ab0
  403aa6:	cmp    dil,0x21
  403aaa:	jne    0x403e1d
  403ab0:	mov    esi,0x3
  403ab5:	jmp    0x403a45
  403ab7:	nop    WORD PTR [rax+rax*1+0x0]
  403ac0:	movzx  ecx,dil
  403ac4:	call   r12
  403ac7:	test   eax,eax
  403ac9:	je     0x403b40
  403acb:	movzx  esi,BYTE PTR [rbx]
  403ace:	mov    rdi,rbx
  403ad1:	test   sil,sil
  403ad4:	jne    0x403af0
  403ad6:	jmp    0x403949
  403adb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ae0:	add    rdi,0x1
  403ae4:	movzx  esi,BYTE PTR [rdi]
  403ae7:	test   sil,sil
  403aea:	je     0x403949
  403af0:	movzx  ecx,sil
  403af4:	call   r12
  403af7:	test   eax,eax
  403af9:	jne    0x403ae0
  403afb:	cmp    sil,0x2c
  403aff:	je     0x403949
  403b05:	lea    eax,[rsi-0x3c]
  403b08:	cmp    al,0x2
  403b0a:	ja     0x403db4
  403b10:	mov    esi,0x2
  403b15:	jmp    0x403a45
  403b1a:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	lea    eax,[rdi-0x3c]
  403b23:	cmp    al,0x2
  403b25:	jbe    0x403a45
  403b2b:	cmp    dil,0x21
  403b2f:	mov    eax,0x4
  403b34:	cmovne esi,eax
  403b37:	jmp    0x403a45
  403b3c:	nop    DWORD PTR [rax+0x0]
  403b40:	cmp    dil,0x2c
  403b44:	jne    0x403a45
  403b4a:	jmp    0x403949
  403b4f:	nop
  403b50:	mov    r14,rbx
  403b53:	mov    esi,0x1
  403b58:	mov    rbx,r8
  403b5b:	jmp    0x403a45
  403b60:	mov    r14,rbx
  403b63:	xor    esi,esi
  403b65:	jmp    0x403a48
  403b6a:	nop    WORD PTR [rax+rax*1+0x0]
  403b70:	movzx  edi,BYTE PTR [rsi]
  403b73:	test   dil,dil
  403b76:	je     0x403df6
  403b7c:	movzx  ecx,dil
  403b80:	mov    rbx,rsi
  403b83:	jmp    0x403b90
  403b85:	add    rbx,0x1
  403b89:	movzx  ecx,BYTE PTR [rbx]
  403b8c:	test   cl,cl
  403b8e:	je     0x403bbd
  403b90:	call   r12
  403b93:	test   eax,eax
  403b95:	je     0x403b85
  403b97:	movzx  ecx,BYTE PTR [rbx]
  403b9a:	test   cl,cl
  403b9c:	je     0x403bc6
  403b9e:	xchg   ax,ax
  403ba0:	cmp    cl,0x2c
  403ba3:	je     0x403bac
  403ba5:	call   r12
  403ba8:	test   eax,eax
  403baa:	je     0x403bba
  403bac:	mov    BYTE PTR [rbx],0x0
  403baf:	add    rbx,0x1
  403bb3:	movzx  ecx,BYTE PTR [rbx]
  403bb6:	test   cl,cl
  403bb8:	jne    0x403ba0
  403bba:	movzx  edi,BYTE PTR [rsi]
  403bbd:	test   dil,dil
  403bc0:	je     0x403a12
  403bc6:	mov    rcx,rsi
  403bc9:	mov    rbp,rbx
  403bcc:	call   0x4182b0
  403bd1:	mov    QWORD PTR [r13+0x0],rax
  403bd5:	movzx  esi,BYTE PTR [rbx]
  403bd8:	test   sil,sil
  403bdb:	movzx  ecx,sil
  403bdf:	jne    0x403bef
  403be1:	jmp    0x403c42
  403be3:	add    rbp,0x1
  403be7:	movzx  ecx,BYTE PTR [rbp+0x0]
  403beb:	test   cl,cl
  403bed:	je     0x403c1e
  403bef:	call   r12
  403bf2:	test   eax,eax
  403bf4:	je     0x403be3
  403bf6:	movzx  ecx,BYTE PTR [rbp+0x0]
  403bfa:	test   cl,cl
  403bfc:	jne    0x403c14
  403bfe:	jmp    0x403c23
  403c00:	mov    BYTE PTR [rbp+0x0],0x0
  403c04:	add    rbp,0x1
  403c08:	movzx  ecx,BYTE PTR [rbp+0x0]
  403c0c:	test   cl,cl
  403c0e:	je     0x403cf2
  403c14:	call   r12
  403c17:	test   eax,eax
  403c19:	jne    0x403c00
  403c1b:	movzx  esi,BYTE PTR [rbx]
  403c1e:	test   sil,sil
  403c21:	je     0x403c42
  403c23:	lea    rdi,[rip+0x37ed0]        # 0x43bafa
  403c2a:	mov    rsi,rbx
  403c2d:	mov    ecx,0x2
  403c32:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403c34:	jne    0x403d34
  403c3a:	mov    DWORD PTR [r13+0x8],0x4
  403c42:	movzx  ecx,BYTE PTR [rbp+0x0]
  403c46:	mov    rbx,rbp
  403c49:	test   cl,cl
  403c4b:	jne    0x403c5b
  403c4d:	jmp    0x403c86
  403c4f:	nop
  403c50:	add    rbx,0x1
  403c54:	movzx  ecx,BYTE PTR [rbx]
  403c57:	test   cl,cl
  403c59:	je     0x403c86
  403c5b:	cmp    cl,0x2c
  403c5e:	je     0x403c86
  403c60:	call   r12
  403c63:	test   eax,eax
  403c65:	je     0x403c50
  403c67:	jmp    0x403c83
  403c69:	nop    DWORD PTR [rax+0x0]
  403c70:	cmp    cl,0x2c
  403c73:	je     0x403c7c
  403c75:	call   r12
  403c78:	test   eax,eax
  403c7a:	je     0x403c8a
  403c7c:	mov    BYTE PTR [rbx],0x0
  403c7f:	add    rbx,0x1
  403c83:	movzx  ecx,BYTE PTR [rbx]
  403c86:	test   cl,cl
  403c88:	jne    0x403c70
  403c8a:	cmp    DWORD PTR [r13+0x8],0x6
  403c8f:	je     0x403d00
  403c91:	cmp    BYTE PTR [rbp+0x0],0x0
  403c95:	je     0x403dfe
  403c9b:	mov    rcx,rbp
  403c9e:	call   0x4182b0
  403ca3:	cmp    QWORD PTR [r13+0x0],0x0
  403ca8:	mov    QWORD PTR [r13+0x10],rax
  403cac:	je     0x403d0d
  403cae:	mov    r14,QWORD PTR [r14+0x8]
  403cb2:	test   r14,r14
  403cb5:	jne    0x4039c0
  403cbb:	mov    rdi,QWORD PTR [rsp+0x38]
  403cc0:	lea    rdx,[rip+0xaa19]        # 0x40e6e0
  403cc7:	xor    r8d,r8d
  403cca:	mov    rcx,rdi
  403ccd:	call   0x40a210
  403cd2:	mov    rcx,rdi
  403cd5:	call   0x409a70
  403cda:	mov    rcx,r15
  403cdd:	add    rsp,0x68
  403ce1:	pop    rbx
  403ce2:	pop    rsi
  403ce3:	pop    rdi
  403ce4:	pop    rbp
  403ce5:	pop    r12
  403ce7:	pop    r13
  403ce9:	pop    r14
  403ceb:	pop    r15
  403ced:	jmp    0x409fa0
  403cf2:	cmp    BYTE PTR [rbx],0x0
  403cf5:	jne    0x403c23
  403cfb:	jmp    0x403c8a
  403cfd:	nop    DWORD PTR [rax]
  403d00:	cmp    BYTE PTR [rbp+0x0],0x0
  403d04:	jne    0x403c9b
  403d06:	cmp    QWORD PTR [r13+0x0],0x0
  403d0b:	jne    0x403cae
  403d0d:	lea    rax,[rip+0x37e95]        # 0x43bba9
  403d14:	lea    r9,[rip+0x38325]        # 0x43c040
  403d1b:	lea    rdx,[rip+0x37d4e]        # 0x43ba70
  403d22:	mov    r8d,0x1fe
  403d28:	xor    ecx,ecx
  403d2a:	mov    QWORD PTR [rsp+0x20],rax
  403d2f:	call   0x41e680
  403d34:	lea    rdi,[rip+0x37dc1]        # 0x43bafc
  403d3b:	mov    rsi,rbx
  403d3e:	mov    ecx,0x3
  403d43:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d45:	jne    0x403d54
  403d47:	mov    DWORD PTR [r13+0x8],0x3
  403d4f:	jmp    0x403c42
  403d54:	lea    rdi,[rip+0x37da4]        # 0x43baff
  403d5b:	mov    rsi,rbx
  403d5e:	mov    ecx,0x3
  403d63:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d65:	jne    0x403d74
  403d67:	mov    DWORD PTR [r13+0x8],0x2
  403d6f:	jmp    0x403c42
  403d74:	lea    rdi,[rip+0x37d87]        # 0x43bb02
  403d7b:	mov    rsi,rbx
  403d7e:	mov    ecx,0x2
  403d83:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d85:	je     0x403da7
  403d87:	lea    rdi,[rip+0x37d76]        # 0x43bb04
  403d8e:	mov    rsi,rbx
  403d91:	mov    ecx,0x2
  403d96:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d98:	jne    0x403dcb
  403d9a:	mov    DWORD PTR [r13+0x8],0x0
  403da2:	jmp    0x403c42
  403da7:	mov    DWORD PTR [r13+0x8],0x1
  403daf:	jmp    0x403c42
  403db4:	cmp    sil,0x21
  403db8:	jne    0x403949
  403dbe:	jmp    0x403b10
  403dc3:	xor    r15d,r15d
  403dc6:	jmp    0x403999
  403dcb:	lea    rdi,[rip+0x37d34]        # 0x43bb06
  403dd2:	mov    rsi,rbx
  403dd5:	mov    ecx,0x3
  403dda:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ddc:	jne    0x403e41
  403dde:	mov    DWORD PTR [r13+0x8],0x5
  403de6:	jmp    0x403c42
  403deb:	mov    r14,rbx
  403dee:	mov    rbx,rax
  403df1:	jmp    0x403978
  403df6:	mov    rbx,rsi
  403df9:	jmp    0x403bbd
  403dfe:	mov    r8,QWORD PTR [rsp+0x58]
  403e03:	mov    rdx,QWORD PTR [r13+0x0]
  403e07:	lea    rcx,[rip+0x37d52]        # 0x43bb60
  403e0e:	call   0x4055e0
  403e13:	mov    ecx,0x1
  403e18:	call   0x4388a0
  403e1d:	lea    r9,[rip+0x381fc]        # 0x43c020
  403e24:	lea    rdx,[rip+0x37c45]        # 0x43ba70
  403e2b:	mov    QWORD PTR [rsp+0x20],0x0
  403e34:	mov    r8d,0x15e
  403e3a:	xor    ecx,ecx
  403e3c:	call   0x41e540
  403e41:	mov    r9,QWORD PTR [rsp+0x58]
  403e46:	mov    r8,QWORD PTR [r13+0x0]
  403e4a:	lea    rcx,[rip+0x37cbf]        # 0x43bb10
  403e51:	mov    rdx,rbx
  403e54:	call   0x4055e0
  403e59:	mov    ecx,0x1
  403e5e:	call   0x4388a0
  403e63:	nop
  403e64:	xchg   ax,ax
  403e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e70:	push   r15
  403e72:	push   r14
  403e74:	push   r13
  403e76:	push   r12
  403e78:	push   rbp
  403e79:	push   rdi
  403e7a:	push   rsi
  403e7b:	push   rbx
  403e7c:	sub    rsp,0xa8
  403e83:	mov    DWORD PTR [rsp+0xf8],edx
  403e8a:	lea    rdx,[rip+0x37d43]        # 0x43bbd4
  403e91:	mov    QWORD PTR [rsp+0xf0],rcx
  403e99:	mov    DWORD PTR [rsp+0x100],r8d
  403ea1:	mov    DWORD PTR [rsp+0x108],r9d
  403ea9:	call   0x438878
  403eae:	test   rax,rax
  403eb1:	mov    QWORD PTR [rsp+0x30],rax
  403eb6:	je     0x404caa
  403ebc:	mov    rdx,QWORD PTR [rsp+0xf0]
  403ec4:	lea    rcx,[rip+0x37d24]        # 0x43bbef
  403ecb:	call   0x405530
  403ed0:	mov    ecx,0x90
  403ed5:	call   0x40e610
  403eda:	cmp    QWORD PTR [rsp+0xf0],0x0
  403ee3:	mov    rbx,rax
  403ee6:	mov    QWORD PTR [rsp+0x28],rax
  403eeb:	je     0x4049d3
  403ef1:	mov    rcx,QWORD PTR [rsp+0xf0]
  403ef9:	call   0x407e50
  403efe:	mov    QWORD PTR [rbx+0x28],rax
  403f02:	lea    rcx,[rip+0x37b19]        # 0x43ba22
  403f09:	xor    esi,esi
  403f0b:	call   0x41ae90
  403f10:	mov    r15,rax
  403f13:	lea    rax,[rsp+0x98]
  403f1b:	mov    r13,QWORD PTR [rip+0x82b36]        # 0x486a58
  403f22:	mov    rbx,QWORD PTR [rsp+0x30]
  403f27:	mov    QWORD PTR [rsp+0x38],rax
  403f2c:	lea    rax,[rsp+0x90]
  403f34:	mov    QWORD PTR [rsp+0x40],rax
  403f39:	lea    rax,[rsp+0x8c]
  403f41:	mov    QWORD PTR [rsp+0x48],rax
  403f46:	mov    rax,QWORD PTR [rsp+0x28]
  403f4b:	add    rax,0x50
  403f4f:	mov    QWORD PTR [rsp+0x58],rax
  403f54:	xor    edx,edx
  403f56:	mov    rcx,r15
  403f59:	xor    edi,edi
  403f5b:	xor    r12d,r12d
  403f5e:	xor    ebp,ebp
  403f60:	call   0x41a9e0
  403f65:	mov    rcx,rbx
  403f68:	call   0x438840
  403f6d:	cmp    eax,0xffffffff
  403f70:	mov    r14d,eax
  403f73:	je     0x404005
  403f79:	add    edi,0x1
  403f7c:	test   ebp,ebp
  403f7e:	je     0x404184
  403f84:	cmp    eax,0xd
  403f87:	je     0x4041e0
  403f8d:	cmp    eax,0x23
  403f90:	je     0x4041b0
  403f96:	cmp    eax,0xa
  403f99:	je     0x4041e0
  403f9f:	mov    rax,QWORD PTR [r15+0x8]
  403fa3:	lea    rdx,[rax+0x1]
  403fa7:	cmp    rdx,QWORD PTR [r15+0x10]
  403fab:	jae    0x40426d
  403fb1:	mov    rcx,QWORD PTR [r15]
  403fb4:	mov    QWORD PTR [r15+0x8],rdx
  403fb8:	mov    BYTE PTR [rcx+rax*1],0x5c
  403fbc:	mov    rdx,QWORD PTR [r15]
  403fbf:	mov    rax,QWORD PTR [r15+0x8]
  403fc3:	mov    BYTE PTR [rdx+rax*1],0x0
  403fc7:	mov    rax,QWORD PTR [r15+0x8]
  403fcb:	lea    rdx,[rax+0x1]
  403fcf:	cmp    rdx,QWORD PTR [r15+0x10]
  403fd3:	jae    0x404253
  403fd9:	mov    rcx,QWORD PTR [r15]
  403fdc:	mov    QWORD PTR [r15+0x8],rdx
  403fe0:	xor    ebp,ebp
  403fe2:	mov    BYTE PTR [rcx+rax*1],r14b
  403fe6:	mov    rdx,QWORD PTR [r15]
  403fe9:	mov    rcx,rbx
  403fec:	mov    rax,QWORD PTR [r15+0x8]
  403ff0:	mov    BYTE PTR [rdx+rax*1],0x0
  403ff4:	call   0x438840
  403ff9:	cmp    eax,0xffffffff
  403ffc:	mov    r14d,eax
  403fff:	jne    0x403f79
  404005:	test   ebp,ebp
  404007:	jne    0x40443f
  40400d:	test   edi,edi
  40400f:	je     0x4043ea
  404015:	mov    rsi,QWORD PTR [r15]
  404018:	lea    rcx,[rip+0x37c1e]        # 0x43bc3d
  40401f:	mov    rdx,rsi
  404022:	call   0x405530
  404027:	mov    rcx,rsi
  40402a:	call   0x403380
  40402f:	movzx  edx,BYTE PTR [rax]
  404032:	mov    rbp,rax
  404035:	test   dl,dl
  404037:	je     0x4042d0
  40403d:	mov    rdi,rax
  404040:	jmp    0x404049
  404042:	add    rdi,0x1
  404046:	movzx  edx,BYTE PTR [rdi]
  404049:	mov    eax,edx
  40404b:	and    eax,0xffffffdf
  40404e:	sub    eax,0x41
  404051:	cmp    al,0x19
  404053:	jbe    0x404042
  404055:	cmp    dl,0x2e
  404058:	je     0x404042
  40405a:	lea    eax,[rdx-0x30]
  40405d:	cmp    al,0x9
  40405f:	setbe  cl
  404062:	cmp    dl,0x5f
  404065:	sete   al
  404068:	or     cl,al
  40406a:	jne    0x404042
  40406c:	mov    rdx,rdi
  40406f:	mov    rcx,rbp
  404072:	sub    rdx,rbp
  404075:	call   0x418340
  40407a:	movzx  esi,BYTE PTR [rdi]
  40407d:	mov    r14,rax
  404080:	test   sil,sil
  404083:	jne    0x4040a0
  404085:	jmp    0x404160
  40408a:	nop    WORD PTR [rax+rax*1+0x0]
  404090:	add    rdi,0x1
  404094:	movzx  esi,BYTE PTR [rdi]
  404097:	test   sil,sil
  40409a:	je     0x404160
  4040a0:	movzx  ecx,sil
  4040a4:	call   r13
  4040a7:	test   eax,eax
  4040a9:	jne    0x404090
  4040ab:	cmp    sil,0x3a
  4040af:	jne    0x4042dd
  4040b5:	movzx  ecx,BYTE PTR [rdi+0x1]
  4040b9:	lea    r12,[rdi+0x1]
  4040bd:	test   cl,cl
  4040bf:	jne    0x4040d0
  4040c1:	jmp    0x4040d7
  4040c3:	add    r12,0x1
  4040c7:	movzx  ecx,BYTE PTR [r12]
  4040cc:	test   cl,cl
  4040ce:	je     0x4040d7
  4040d0:	call   r13
  4040d3:	test   eax,eax
  4040d5:	jne    0x4040c3
  4040d7:	lea    rdi,[rip+0x37b6a]        # 0x43bc48
  4040de:	mov    ecx,0x5
  4040e3:	mov    rsi,r14
  4040e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4040e8:	je     0x404484
  4040ee:	lea    rdi,[rip+0x37b7c]        # 0x43bc71
  4040f5:	mov    ecx,0xc
  4040fa:	mov    rsi,r14
  4040fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4040ff:	je     0x404628
  404105:	lea    rdi,[rip+0x37b9c]        # 0x43bca8
  40410c:	mov    ecx,0x8
  404111:	mov    rsi,r14
  404114:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404116:	je     0x404659
  40411c:	lea    rdi,[rip+0x37bb1]        # 0x43bcd4
  404123:	mov    ecx,0x11
  404128:	mov    rsi,r14
  40412b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40412d:	je     0x4045c8
  404133:	lea    rdi,[rip+0x37bdb]        # 0x43bd15
  40413a:	mov    ecx,0x9
  40413f:	mov    rsi,r14
  404142:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404144:	jne    0x4046bd
  40414a:	mov    r9d,DWORD PTR [rsp+0xf8]
  404152:	test   r9d,r9d
  404155:	je     0x404959
  40415b:	nop    DWORD PTR [rax+rax*1+0x0]
  404160:	mov    rcx,rbp
  404163:	call   0x40e6e0
  404168:	mov    rcx,r14
  40416b:	call   0x40e6e0
  404170:	xor    edx,edx
  404172:	mov    rcx,r15
  404175:	mov    esi,0x1
  40417a:	call   0x41a9e0
  40417f:	jmp    0x403f54
  404184:	cmp    eax,0x23
  404187:	je     0x4041a4
  404189:	cmp    eax,0x5c
  40418c:	je     0x404240
  404192:	cmp    eax,0xa
  404195:	je     0x404220
  40419b:	test   r12d,r12d
  40419e:	je     0x4042a3
  4041a4:	mov    r12d,0x1
  4041aa:	jmp    0x403f65
  4041af:	nop
  4041b0:	mov    rax,QWORD PTR [r15+0x8]
  4041b4:	lea    rdx,[rax+0x1]
  4041b8:	cmp    rdx,QWORD PTR [r15+0x10]
  4041bc:	jae    0x404287
  4041c2:	mov    rcx,QWORD PTR [r15]
  4041c5:	mov    QWORD PTR [r15+0x8],rdx
  4041c9:	xor    ebp,ebp
  4041cb:	mov    BYTE PTR [rcx+rax*1],0x23
  4041cf:	mov    rdx,QWORD PTR [r15]
  4041d2:	mov    rax,QWORD PTR [r15+0x8]
  4041d6:	mov    BYTE PTR [rdx+rax*1],0x0
  4041da:	jmp    0x403f65
  4041df:	nop
  4041e0:	mov    rcx,rbx
  4041e3:	call   0x438840
  4041e8:	cmp    eax,0xa
  4041eb:	jne    0x4041f9
  4041ed:	xor    ebp,ebp
  4041ef:	cmp    r14d,0xd
  4041f3:	je     0x403f65
  4041f9:	cmp    eax,0xd
  4041fc:	jne    0x40420a
  4041fe:	xor    ebp,ebp
  404200:	cmp    r14d,0xa
  404204:	je     0x403f65
  40420a:	mov    rdx,rbx
  40420d:	mov    ecx,eax
  40420f:	xor    ebp,ebp
  404211:	call   0x438738
  404216:	jmp    0x403f65
  40421b:	nop    DWORD PTR [rax+rax*1+0x0]
  404220:	mov    rcx,rbx
  404223:	call   0x438840
  404228:	cmp    eax,0xd
  40422b:	je     0x404015
  404231:	mov    rdx,rbx
  404234:	mov    ecx,eax
  404236:	call   0x438738
  40423b:	jmp    0x404015
  404240:	test   r12d,r12d
  404243:	jne    0x4041a4
  404249:	mov    ebp,0x1
  40424e:	jmp    0x403f65
  404253:	movsx  r8d,r14b
  404257:	mov    rdx,0xffffffffffffffff
  40425e:	mov    rcx,r15
  404261:	call   0x41b0f0
  404266:	xor    ebp,ebp
  404268:	jmp    0x403f65
  40426d:	mov    r8d,0x5c
  404273:	mov    rdx,0xffffffffffffffff
  40427a:	mov    rcx,r15
  40427d:	call   0x41b0f0
  404282:	jmp    0x403fc7
  404287:	mov    r8d,0x23
  40428d:	mov    rdx,0xffffffffffffffff
  404294:	mov    rcx,r15
  404297:	call   0x41b0f0
  40429c:	xor    ebp,ebp
  40429e:	jmp    0x403f65
  4042a3:	mov    rax,QWORD PTR [r15+0x8]
  4042a7:	lea    rdx,[rax+0x1]
  4042ab:	cmp    rdx,QWORD PTR [r15+0x10]
  4042af:	jae    0x40446c
  4042b5:	mov    rcx,QWORD PTR [r15]
  4042b8:	mov    QWORD PTR [r15+0x8],rdx
  4042bc:	mov    BYTE PTR [rcx+rax*1],r14b
  4042c0:	mov    rdx,QWORD PTR [r15]
  4042c3:	mov    rax,QWORD PTR [r15+0x8]
  4042c7:	mov    BYTE PTR [rdx+rax*1],0x0
  4042cb:	jmp    0x403f65
  4042d0:	mov    rcx,rax
  4042d3:	call   0x40e6e0
  4042d8:	jmp    0x404170
  4042dd:	cmp    sil,0x3d
  4042e1:	jne    0x404160
  4042e7:	movzx  ecx,BYTE PTR [rdi+0x1]
  4042eb:	lea    rsi,[rdi+0x1]
  4042ef:	test   cl,cl
  4042f1:	jne    0x404300
  4042f3:	jmp    0x404307
  4042f5:	add    rsi,0x1
  4042f9:	movzx  ecx,BYTE PTR [rsi]
  4042fc:	test   cl,cl
  4042fe:	je     0x404307
  404300:	call   r13
  404303:	test   eax,eax
  404305:	jne    0x4042f5
  404307:	mov    rax,QWORD PTR [rsp+0x28]
  40430c:	cmp    QWORD PTR [rax+0x60],0x0
  404311:	je     0x404a5e
  404317:	mov    eax,DWORD PTR [rip+0x7fd57]        # 0x484074
  40431d:	test   eax,eax
  40431f:	jne    0x404383
  404321:	mov    rdi,QWORD PTR [rip+0x35cf8]        # 0x43a020
  404328:	mov    rcx,r14
  40432b:	mov    rdx,rdi
  40432e:	call   0x4387a0
  404333:	test   eax,eax
  404335:	je     0x4044b5
  40433b:	mov    rdx,QWORD PTR [rip+0x7fd36]        # 0x484078
  404342:	test   rdx,rdx
  404345:	je     0x404383
  404347:	mov    rcx,rdx
  40434a:	mov    QWORD PTR [rsp+0x50],rdx
  40434f:	call   0x438788
  404354:	mov    rdx,QWORD PTR [rsp+0x50]
  404359:	mov    r8,rax
  40435c:	mov    rcx,rsi
  40435f:	mov    r12,rax
  404362:	call   0x438780
  404367:	test   eax,eax
  404369:	jne    0x404383
  40436b:	add    r12,rsi
  40436e:	movzx  eax,BYTE PTR [r12]
  404373:	cmp    al,0x5c
  404375:	je     0x40488a
  40437b:	cmp    al,0x2f
  40437d:	je     0x40488a
  404383:	mov    rax,QWORD PTR [rsp+0x28]
  404388:	mov    rdx,r14
  40438b:	mov    rcx,QWORD PTR [rax+0x60]
  40438f:	call   0x408de0
  404394:	test   rax,rax
  404397:	jne    0x404c89
  40439d:	mov    rcx,r14
  4043a0:	call   0x4182b0
  4043a5:	mov    r12,QWORD PTR [rsp+0x28]
  4043aa:	mov    r8,QWORD PTR [rsp+0xf0]
  4043b2:	mov    rdx,rsi
  4043b5:	mov    rdi,rax
  4043b8:	mov    rcx,r12
  4043bb:	call   0x4036f0
  4043c0:	lea    rcx,[rip+0x37bf1]        # 0x43bfb8
  4043c7:	mov    r8,rax
  4043ca:	mov    rdx,rdi
  4043cd:	mov    rsi,rax
  4043d0:	call   0x405530
  4043d5:	mov    rcx,QWORD PTR [r12+0x60]
  4043da:	mov    r8,rsi
  4043dd:	mov    rdx,rdi
  4043e0:	call   0x409090
  4043e5:	jmp    0x404160
  4043ea:	test   esi,esi
  4043ec:	je     0x4046a4
  4043f2:	mov    edx,0x1
  4043f7:	mov    rcx,r15
  4043fa:	call   0x41a8e0
  4043ff:	mov    rcx,QWORD PTR [rsp+0x30]
  404404:	call   0x438898
  404409:	mov    rbx,QWORD PTR [rsp+0x28]
  40440e:	mov    rcx,QWORD PTR [rbx+0x58]
  404412:	call   0x409fa0
  404417:	mov    rcx,QWORD PTR [rbx+0x50]
  40441b:	mov    QWORD PTR [rbx+0x58],rax
  40441f:	call   0x409fa0
  404424:	mov    QWORD PTR [rbx+0x50],rax
  404428:	mov    rax,rbx
  40442b:	add    rsp,0xa8
  404432:	pop    rbx
  404433:	pop    rsi
  404434:	pop    rdi
  404435:	pop    rbp
  404436:	pop    r12
  404438:	pop    r13
  40443a:	pop    r14
  40443c:	pop    r15
  40443e:	ret    
  40443f:	mov    rax,QWORD PTR [r15+0x8]
  404443:	lea    rdx,[rax+0x1]
  404447:	cmp    rdx,QWORD PTR [r15+0x10]
  40444b:	jae    0x40468a
  404451:	mov    rcx,QWORD PTR [r15]
  404454:	mov    QWORD PTR [r15+0x8],rdx
  404458:	mov    BYTE PTR [rcx+rax*1],0x5c
  40445c:	mov    rdx,QWORD PTR [r15]
  40445f:	mov    rax,QWORD PTR [r15+0x8]
  404463:	mov    BYTE PTR [rdx+rax*1],0x0
  404467:	jmp    0x40400d
  40446c:	movsx  r8d,r14b
  404470:	mov    rdx,0xffffffffffffffff
  404477:	mov    rcx,r15
  40447a:	call   0x41b0f0
  40447f:	jmp    0x403f65
  404484:	mov    rax,QWORD PTR [rsp+0x28]
  404489:	cmp    QWORD PTR [rax+0x8],0x0
  40448e:	jne    0x404cf1
  404494:	mov    rsi,QWORD PTR [rsp+0x28]
  404499:	mov    r8,QWORD PTR [rsp+0xf0]
  4044a1:	mov    rdx,r12
  4044a4:	mov    rcx,rsi
  4044a7:	call   0x4036f0
  4044ac:	mov    QWORD PTR [rsi+0x8],rax
  4044b0:	jmp    0x404160
  4044b5:	mov    rax,QWORD PTR [rsp+0x28]
  4044ba:	mov    r12,QWORD PTR [rax+0x28]
  4044be:	mov    rcx,r12
  4044c1:	call   0x438788
  4044c6:	cmp    rax,0xe
  4044ca:	mov    rdi,rax
  4044cd:	jbe    0x404383
  4044d3:	movsxd r8,eax
  4044d6:	lea    rdx,[rip+0x37a51]        # 0x43bf2e
  4044dd:	lea    rax,[r8-0xe]
  4044e1:	mov    QWORD PTR [rsp+0x60],r8
  4044e6:	lea    rcx,[r12+rax*1]
  4044ea:	mov    QWORD PTR [rsp+0x50],rax
  4044ef:	call   0x4031e0
  4044f4:	test   eax,eax
  4044f6:	mov    r8,QWORD PTR [rsp+0x60]
  4044fb:	je     0x404520
  4044fd:	cmp    rdi,0x10
  404501:	jbe    0x404383
  404507:	lea    rcx,[r12+r8*1-0x10]
  40450c:	lea    rdx,[rip+0x37a2a]        # 0x43bf3d
  404513:	call   0x4031e0
  404518:	test   eax,eax
  40451a:	jne    0x404383
  404520:	mov    rcx,rsi
  404523:	call   0x4182b0
  404528:	mov    rcx,r12
  40452b:	mov    QWORD PTR [rip+0x7fb46],rax        # 0x484078
  404532:	call   0x4182b0
  404537:	mov    rcx,rax
  40453a:	mov    rsi,rax
  40453d:	call   0x438788
  404542:	cmp    rax,0xe
  404546:	ja     0x404b9d
  40454c:	lea    edx,[rdi-0x10]
  40454f:	movsxd rdx,edx
  404552:	mov    BYTE PTR [rsi+rdx*1],0x0
  404556:	movzx  eax,BYTE PTR [rsi]
  404559:	mov    rdx,rsi
  40455c:	test   al,al
  40455e:	jne    0x40456d
  404560:	jmp    0x40457f
  404562:	add    rdx,0x1
  404566:	movzx  eax,BYTE PTR [rdx]
  404569:	test   al,al
  40456b:	je     0x40457f
  40456d:	cmp    al,0x5c
  40456f:	jne    0x404562
  404571:	mov    BYTE PTR [rdx],0x2f
  404574:	add    rdx,0x1
  404578:	movzx  eax,BYTE PTR [rdx]
  40457b:	test   al,al
  40457d:	jne    0x40456d
  40457f:	mov    rcx,rsi
  404582:	call   0x4032a0
  404587:	mov    rcx,rsi
  40458a:	mov    rdi,rax
  40458d:	call   0x40e6e0
  404592:	mov    rcx,r14
  404595:	call   0x4182b0
  40459a:	lea    rcx,[rip+0x379af]        # 0x43bf50
  4045a1:	mov    r8,rdi
  4045a4:	mov    rdx,r14
  4045a7:	mov    rsi,rax
  4045aa:	call   0x405530
  4045af:	mov    rax,QWORD PTR [rsp+0x28]
  4045b4:	mov    r8,rdi
  4045b7:	mov    rdx,rsi
  4045ba:	mov    rcx,QWORD PTR [rax+0x60]
  4045be:	call   0x409090
  4045c3:	jmp    0x404160
  4045c8:	mov    r10d,DWORD PTR [rsp+0x108]
  4045d0:	test   r10d,r10d
  4045d3:	jne    0x404160
  4045d9:	mov    rax,QWORD PTR [rsp+0x28]
  4045de:	cmp    QWORD PTR [rax+0x48],0x0
  4045e3:	jne    0x404e8e
  4045e9:	mov    rdi,QWORD PTR [rsp+0x28]
  4045ee:	mov    r8,QWORD PTR [rsp+0xf0]
  4045f6:	mov    rdx,r12
  4045f9:	mov    rcx,rdi
  4045fc:	call   0x4036f0
  404601:	mov    r8,QWORD PTR [rsp+0xf0]
  404609:	mov    rsi,rax
  40460c:	mov    rcx,rdi
  40460f:	mov    rdx,rax
  404612:	call   0x403880
  404617:	mov    rcx,rsi
  40461a:	mov    QWORD PTR [rdi+0x40],rax
  40461e:	call   0x40e6e0
  404623:	jmp    0x404160
  404628:	mov    rax,QWORD PTR [rsp+0x28]
  40462d:	cmp    QWORD PTR [rax+0x18],0x0
  404632:	jne    0x404c6b
  404638:	mov    rsi,QWORD PTR [rsp+0x28]
  40463d:	mov    r8,QWORD PTR [rsp+0xf0]
  404645:	mov    rdx,r12
  404648:	mov    rcx,rsi
  40464b:	call   0x4036f0
  404650:	mov    QWORD PTR [rsi+0x18],rax
  404654:	jmp    0x404160
  404659:	mov    rax,QWORD PTR [rsp+0x28]
  40465e:	cmp    QWORD PTR [rax+0x10],0x0
  404663:	jne    0x404c4d
  404669:	mov    rsi,QWORD PTR [rsp+0x28]
  40466e:	mov    r8,QWORD PTR [rsp+0xf0]
  404676:	mov    rdx,r12
  404679:	mov    rcx,rsi
  40467c:	call   0x4036f0
  404681:	mov    QWORD PTR [rsi+0x10],rax
  404685:	jmp    0x404160
  40468a:	mov    r8d,0x5c
  404690:	mov    rdx,0xffffffffffffffff
  404697:	mov    rcx,r15
  40469a:	call   0x41b0f0
  40469f:	jmp    0x40400d
  4046a4:	mov    rdx,QWORD PTR [rsp+0xf0]
  4046ac:	lea    rcx,[rip+0x37935]        # 0x43bfe8
  4046b3:	call   0x4055e0
  4046b8:	jmp    0x4043f2
  4046bd:	lea    rdi,[rip+0x37681]        # 0x43bd45
  4046c4:	mov    ecx,0xd
  4046c9:	mov    rsi,r14
  4046cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4046ce:	seta   al
  4046d1:	setb   dl
  4046d4:	sub    eax,edx
  4046d6:	movsx  eax,al
  4046d9:	or     eax,DWORD PTR [rsp+0x100]
  4046e0:	je     0x4048bc
  4046e6:	lea    rdi,[rip+0x376da]        # 0x43bdc7
  4046ed:	mov    ecx,0x5
  4046f2:	mov    rsi,r14
  4046f5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4046f7:	je     0x404ad7
  4046fd:	lea    rdi,[rip+0x3772b]        # 0x43be2f
  404704:	mov    ecx,0x7
  404709:	mov    rsi,r14
  40470c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40470e:	je     0x404727
  404710:	lea    rdi,[rip+0x3771f]        # 0x43be36
  404717:	mov    ecx,0x7
  40471c:	mov    rsi,r14
  40471f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404721:	jne    0x404bd0
  404727:	mov    rax,QWORD PTR [rsp+0x28]
  40472c:	mov    QWORD PTR [rsp+0x90],0x0
  404738:	mov    DWORD PTR [rsp+0x8c],0x0
  404743:	mov    QWORD PTR [rsp+0x98],0x0
  40474f:	cmp    QWORD PTR [rax+0x58],0x0
  404754:	jne    0x404c2f
  40475a:	mov    r8,QWORD PTR [rsp+0xf0]
  404762:	mov    rcx,QWORD PTR [rsp+0x28]
  404767:	mov    rdx,r12
  40476a:	call   0x4036f0
  40476f:	test   rax,rax
  404772:	mov    QWORD PTR [rsp+0x50],rax
  404777:	je     0x404787
  404779:	mov    rax,QWORD PTR [rsp+0x50]
  40477e:	cmp    BYTE PTR [rax],0x0
  404781:	jne    0x404eac
  404787:	mov    edx,DWORD PTR [rsp+0x8c]
  40478e:	xor    r12d,r12d
  404791:	test   edx,edx
  404793:	jle    0x404b81
  404799:	mov    QWORD PTR [rsp+0x68],r15
  40479e:	mov    QWORD PTR [rsp+0x60],rbx
  4047a3:	mov    r15,QWORD PTR [rsp+0x28]
  4047a8:	mov    QWORD PTR [rsp+0x70],rbp
  4047ad:	jmp    0x404801
  4047af:	lea    esi,[r12+0x1]
  4047b4:	cmp    esi,DWORD PTR [rsp+0x8c]
  4047bb:	jl     0x4049f9
  4047c1:	test   al,al
  4047c3:	je     0x40487a
  4047c9:	mov    rcx,rbp
  4047cc:	mov    BYTE PTR [rbx],0x10
  4047cf:	mov    r12d,esi
  4047d2:	call   0x4182b0
  4047d7:	mov    rcx,QWORD PTR [r15+0x58]
  4047db:	mov    QWORD PTR [rbx+0x8],rax
  4047df:	mov    rdx,rbx
  4047e2:	call   0x409b50
  4047e7:	mov    QWORD PTR [r15+0x58],rax
  4047eb:	mov    rcx,rbp
  4047ee:	call   0x40e6e0
  4047f3:	cmp    DWORD PTR [rsp+0x8c],r12d
  4047fb:	jle    0x404b72
  404801:	mov    ecx,0x10
  404806:	call   0x40e5c0
  40480b:	mov    rcx,QWORD PTR [rsp+0x90]
  404813:	mov    rbx,rax
  404816:	movsxd rax,r12d
  404819:	lea    rdx,[rax*8+0x0]
  404821:	mov    rcx,QWORD PTR [rcx+rax*8]
  404825:	mov    QWORD PTR [rsp+0x78],rdx
  40482a:	call   0x403380
  40482f:	mov    rsi,rax
  404832:	mov    rcx,rax
  404835:	call   0x4032a0
  40483a:	mov    rcx,rsi
  40483d:	mov    rbp,rax
  404840:	call   0x40e6e0
  404845:	movzx  eax,BYTE PTR [rbp+0x0]
  404849:	mov    rdx,QWORD PTR [rsp+0x78]
  40484e:	cmp    al,0x2d
  404850:	je     0x4049a8
  404856:	lea    rsi,[rip+0x37647]        # 0x43bea4
  40485d:	mov    rdi,rbp
  404860:	mov    ecx,0xb
  404865:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404867:	je     0x4047af
  40486d:	test   al,al
  40486f:	lea    esi,[r12+0x1]
  404874:	jne    0x4047c9
  40487a:	mov    rcx,rbx
  40487d:	mov    r12d,esi
  404880:	call   0x40e6e0
  404885:	jmp    0x4047eb
  40488a:	mov    rax,QWORD PTR [rsp+0x28]
  40488f:	mov    rdx,rdi
  404892:	mov    rcx,QWORD PTR [rax+0x60]
  404896:	call   0x408de0
  40489b:	xor    r8d,r8d
  40489e:	mov    rdx,r12
  4048a1:	mov    rcx,rax
  4048a4:	call   0x4184b0
  4048a9:	mov    rcx,rbp
  4048ac:	mov    rsi,rax
  4048af:	mov    rbp,rsi
  4048b2:	call   0x40e6e0
  4048b7:	jmp    0x404383
  4048bc:	mov    rax,QWORD PTR [rsp+0x28]
  4048c1:	mov    QWORD PTR [rsp+0x90],0x0
  4048cd:	mov    DWORD PTR [rsp+0x8c],0x0
  4048d8:	mov    QWORD PTR [rsp+0x98],0x0
  4048e4:	mov    r8d,DWORD PTR [rax+0x84]
  4048eb:	test   r8d,r8d
  4048ee:	jg     0x404e70
  4048f4:	mov    r8,QWORD PTR [rsp+0xf0]
  4048fc:	mov    rcx,QWORD PTR [rsp+0x28]
  404901:	mov    rdx,r12
  404904:	call   0x4036f0
  404909:	test   rax,rax
  40490c:	mov    rsi,rax
  40490f:	je     0x40491a
  404911:	cmp    BYTE PTR [rax],0x0
  404914:	jne    0x404e23
  40491a:	mov    r8,QWORD PTR [rsp+0x90]
  404922:	mov    edx,DWORD PTR [rsp+0x8c]
  404929:	mov    rcx,QWORD PTR [rsp+0x58]
  40492e:	call   0x403440
  404933:	mov    rcx,QWORD PTR [rsp+0x90]
  40493b:	call   0x41a040
  404940:	mov    rcx,rsi
  404943:	call   0x40e6e0
  404948:	mov    rax,QWORD PTR [rsp+0x28]
  40494d:	add    DWORD PTR [rax+0x84],0x1
  404954:	jmp    0x404160
  404959:	mov    rax,QWORD PTR [rsp+0x28]
  40495e:	cmp    QWORD PTR [rax+0x38],0x0
  404963:	jne    0x404e05
  404969:	mov    rdi,QWORD PTR [rsp+0x28]
  40496e:	mov    r8,QWORD PTR [rsp+0xf0]
  404976:	mov    rdx,r12
  404979:	mov    rcx,rdi
  40497c:	call   0x4036f0
  404981:	mov    r8,QWORD PTR [rsp+0xf0]
  404989:	mov    rsi,rax
  40498c:	mov    rcx,rdi
  40498f:	mov    rdx,rax
  404992:	call   0x403880
  404997:	mov    rcx,rsi
  40499a:	mov    QWORD PTR [rdi+0x30],rax
  40499e:	call   0x40e6e0
  4049a3:	jmp    0x404160
  4049a8:	cmp    BYTE PTR [rbp+0x1],0x49
  4049ac:	je     0x404a7f
  4049b2:	lea    rsi,[rip+0x374eb]        # 0x43bea4
  4049b9:	mov    rdi,rbp
  4049bc:	mov    ecx,0xb
  4049c1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4049c3:	je     0x4047af
  4049c9:	lea    esi,[r12+0x1]
  4049ce:	jmp    0x4047c9
  4049d3:	lea    rcx,[rip+0x37236]        # 0x43bc10
  4049da:	call   0x405530
  4049df:	lea    rcx,[rip+0x3724f]        # 0x43bc35
  4049e6:	call   0x4182b0
  4049eb:	mov    rbx,QWORD PTR [rsp+0x28]
  4049f0:	mov    QWORD PTR [rbx+0x28],rax
  4049f4:	jmp    0x403f02
  4049f9:	mov    rax,QWORD PTR [rsp+0x90]
  404a01:	add    r12d,0x2
  404a05:	mov    rcx,QWORD PTR [rax+rdx*1+0x8]
  404a0a:	call   0x403380
  404a0f:	mov    rcx,rax
  404a12:	mov    rsi,rax
  404a15:	call   0x4032a0
  404a1a:	lea    rdx,[rip+0x37022]        # 0x43ba43
  404a21:	xor    r9d,r9d
  404a24:	mov    r8,rax
  404a27:	mov    rcx,rbp
  404a2a:	mov    BYTE PTR [rbx],0x10
  404a2d:	mov    rdi,rax
  404a30:	call   0x4184b0
  404a35:	mov    rcx,QWORD PTR [r15+0x58]
  404a39:	mov    rdx,rbx
  404a3c:	mov    QWORD PTR [rbx+0x8],rax
  404a40:	call   0x409b50
  404a45:	mov    rcx,rdi
  404a48:	mov    QWORD PTR [r15+0x58],rax
  404a4c:	call   0x40e6e0
  404a51:	mov    rcx,rsi
  404a54:	call   0x40e6e0
  404a59:	jmp    0x4047eb
  404a5e:	lea    rcx,[rip+0x4ceb]        # 0x409750
  404a65:	lea    rdx,[rip+0x4cc4]        # 0x409730
  404a6c:	call   0x408a60
  404a71:	mov    rcx,QWORD PTR [rsp+0x28]
  404a76:	mov    QWORD PTR [rcx+0x60],rax
  404a7a:	jmp    0x404317
  404a7f:	movzx  eax,BYTE PTR [rbp+0x2]
  404a83:	lea    rsi,[rbp+0x2]
  404a87:	test   al,al
  404a89:	jne    0x404a9b
  404a8b:	jmp    0x404aa5
  404a8d:	nop    DWORD PTR [rax]
  404a90:	add    rsi,0x1
  404a94:	movzx  eax,BYTE PTR [rsi]
  404a97:	test   al,al
  404a99:	je     0x404aa5
  404a9b:	movzx  ecx,al
  404a9e:	call   r13
  404aa1:	test   eax,eax
  404aa3:	jne    0x404a90
  404aa5:	lea    rcx,[rip+0x373f5]        # 0x43bea1
  404aac:	xor    r8d,r8d
  404aaf:	mov    rdx,rsi
  404ab2:	mov    BYTE PTR [rbx],0x8
  404ab5:	add    r12d,0x1
  404ab9:	call   0x4184b0
  404abe:	mov    rcx,QWORD PTR [r15+0x58]
  404ac2:	mov    QWORD PTR [rbx+0x8],rax
  404ac6:	mov    rdx,rbx
  404ac9:	call   0x409b50
  404ace:	mov    QWORD PTR [r15+0x58],rax
  404ad2:	jmp    0x4047eb
  404ad7:	mov    rax,QWORD PTR [rsp+0x28]
  404adc:	mov    QWORD PTR [rsp+0x90],0x0
  404ae8:	mov    DWORD PTR [rsp+0x8c],0x0
  404af3:	mov    QWORD PTR [rsp+0x98],0x0
  404aff:	mov    ecx,DWORD PTR [rax+0x80]
  404b05:	test   ecx,ecx
  404b07:	jg     0x404de7
  404b0d:	mov    r8,QWORD PTR [rsp+0xf0]
  404b15:	mov    rcx,QWORD PTR [rsp+0x28]
  404b1a:	mov    rdx,r12
  404b1d:	call   0x4036f0
  404b22:	test   rax,rax
  404b25:	mov    rsi,rax
  404b28:	je     0x404b33
  404b2a:	cmp    BYTE PTR [rax],0x0
  404b2d:	jne    0x404d7c
  404b33:	mov    r8,QWORD PTR [rsp+0x90]
  404b3b:	mov    edx,DWORD PTR [rsp+0x8c]
  404b42:	mov    rcx,QWORD PTR [rsp+0x58]
  404b47:	call   0x403440
  404b4c:	mov    rcx,rsi
  404b4f:	call   0x40e6e0
  404b54:	mov    rcx,QWORD PTR [rsp+0x90]
  404b5c:	call   0x41a040
  404b61:	mov    rax,QWORD PTR [rsp+0x28]
  404b66:	add    DWORD PTR [rax+0x80],0x1
  404b6d:	jmp    0x404160
  404b72:	mov    rbx,QWORD PTR [rsp+0x60]
  404b77:	mov    r15,QWORD PTR [rsp+0x68]
  404b7c:	mov    rbp,QWORD PTR [rsp+0x70]
  404b81:	mov    rcx,QWORD PTR [rsp+0x90]
  404b89:	call   0x41a040
  404b8e:	mov    rcx,QWORD PTR [rsp+0x50]
  404b93:	call   0x40e6e0
  404b98:	jmp    0x404160
  404b9d:	mov    rcx,QWORD PTR [rsp+0x50]
  404ba2:	lea    rdx,[rip+0x37385]        # 0x43bf2e
  404ba9:	add    rcx,rsi
  404bac:	call   0x4031e0
  404bb1:	test   eax,eax
  404bb3:	jne    0x40454c
  404bb9:	lea    eax,[rdi-0xe]
  404bbc:	cdqe   
  404bbe:	mov    BYTE PTR [rsi+rax*1],0x0
  404bc2:	jmp    0x404556
  404bc7:	nop    WORD PTR [rax+rax*1+0x0]
  404bd0:	lea    rdi,[rip+0x372d8]        # 0x43beaf
  404bd7:	mov    ecx,0xa
  404bdc:	mov    rsi,r14
  404bdf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404be1:	je     0x404d2d
  404be7:	lea    rdi,[rip+0x372f8]        # 0x43bee6
  404bee:	mov    ecx,0x4
  404bf3:	mov    rsi,r14
  404bf6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404bf8:	jne    0x404cd5
  404bfe:	mov    rax,QWORD PTR [rsp+0x28]
  404c03:	cmp    QWORD PTR [rax+0x20],0x0
  404c08:	jne    0x404d0f
  404c0e:	mov    rsi,QWORD PTR [rsp+0x28]
  404c13:	mov    r8,QWORD PTR [rsp+0xf0]
  404c1b:	mov    rdx,r12
  404c1e:	mov    rcx,rsi
  404c21:	call   0x4036f0
  404c26:	mov    QWORD PTR [rsi+0x20],rax
  404c2a:	jmp    0x404160
  404c2f:	mov    rdx,QWORD PTR [rsp+0xf0]
  404c37:	lea    rcx,[rip+0x37202]        # 0x43be40
  404c3e:	call   0x4055e0
  404c43:	mov    ecx,0x1
  404c48:	call   0x4388a0
  404c4d:	mov    rdx,QWORD PTR [rsp+0xf0]
  404c55:	lea    rcx,[rip+0x37054]        # 0x43bcb0
  404c5c:	call   0x4055e0
  404c61:	mov    ecx,0x1
  404c66:	call   0x4388a0
  404c6b:	mov    rdx,QWORD PTR [rsp+0xf0]
  404c73:	lea    rcx,[rip+0x37006]        # 0x43bc80
  404c7a:	call   0x4055e0
  404c7f:	mov    ecx,0x1
  404c84:	call   0x4388a0
  404c89:	mov    r8,QWORD PTR [rsp+0xf0]
  404c91:	lea    rcx,[rip+0x372f0]        # 0x43bf88
  404c98:	mov    rdx,r14
  404c9b:	call   0x4055e0
  404ca0:	mov    ecx,0x1
  404ca5:	call   0x4388a0
  404caa:	call   QWORD PTR [rip+0x81c30]        # 0x4868e0
  404cb0:	mov    ecx,DWORD PTR [rax]
  404cb2:	call   0x438790
  404cb7:	mov    rdx,QWORD PTR [rsp+0xf0]
  404cbf:	lea    rcx,[rip+0x36f10]        # 0x43bbd6
  404cc6:	mov    r8,rax
  404cc9:	call   0x4055e0
  404cce:	xor    eax,eax
  404cd0:	jmp    0x40442b
  404cd5:	mov    r8,QWORD PTR [rsp+0xf0]
  404cdd:	lea    rcx,[rip+0x3722c]        # 0x43bf10
  404ce4:	mov    rdx,r14
  404ce7:	call   0x405530
  404cec:	jmp    0x404160
  404cf1:	mov    rdx,QWORD PTR [rsp+0xf0]
  404cf9:	lea    rcx,[rip+0x36f50]        # 0x43bc50
  404d00:	call   0x4055e0
  404d05:	mov    ecx,0x1
  404d0a:	call   0x4388a0
  404d0f:	mov    rdx,QWORD PTR [rsp+0xf0]
  404d17:	lea    rcx,[rip+0x371d2]        # 0x43bef0
  404d1e:	call   0x4055e0
  404d23:	mov    ecx,0x1
  404d28:	call   0x4388a0
  404d2d:	mov    rax,QWORD PTR [rsp+0x28]
  404d32:	cmp    QWORD PTR [rax+0x70],0x0
  404d37:	jne    0x404dc9
  404d3d:	mov    rdi,QWORD PTR [rsp+0x28]
  404d42:	mov    r8,QWORD PTR [rsp+0xf0]
  404d4a:	mov    rdx,r12
  404d4d:	mov    rcx,rdi
  404d50:	call   0x4036f0
  404d55:	mov    r8,QWORD PTR [rsp+0xf0]
  404d5d:	mov    rsi,rax
  404d60:	mov    rcx,rdi
  404d63:	mov    rdx,rax
  404d66:	call   0x403880
  404d6b:	mov    rcx,rsi
  404d6e:	mov    QWORD PTR [rdi+0x70],rax
  404d72:	call   0x40e6e0
  404d77:	jmp    0x404160
  404d7c:	mov    r9,QWORD PTR [rsp+0x38]
  404d81:	mov    r8,QWORD PTR [rsp+0x40]
  404d86:	mov    rcx,rax
  404d89:	mov    rdx,QWORD PTR [rsp+0x48]
  404d8e:	call   0x414ab0
  404d93:	test   eax,eax
  404d95:	jne    0x404b33
  404d9b:	mov    rax,QWORD PTR [rsp+0x98]
  404da3:	lea    rdx,[rip+0x36e22]        # 0x43bbcc
  404daa:	test   rax,rax
  404dad:	je     0x404db3
  404daf:	mov    rdx,QWORD PTR [rax+0x8]
  404db3:	lea    rcx,[rip+0x3703e]        # 0x43bdf8
  404dba:	call   0x4055e0
  404dbf:	mov    ecx,0x1
  404dc4:	call   0x4388a0
  404dc9:	mov    rdx,QWORD PTR [rsp+0xf0]
  404dd1:	lea    rcx,[rip+0x370e8]        # 0x43bec0
  404dd8:	call   0x4055e0
  404ddd:	mov    ecx,0x1
  404de2:	call   0x4388a0
  404de7:	mov    rdx,QWORD PTR [rsp+0xf0]
  404def:	lea    rcx,[rip+0x36fda]        # 0x43bdd0
  404df6:	call   0x4055e0
  404dfb:	mov    ecx,0x1
  404e00:	call   0x4388a0
  404e05:	mov    rdx,QWORD PTR [rsp+0xf0]
  404e0d:	lea    rcx,[rip+0x36f0c]        # 0x43bd20
  404e14:	call   0x4055e0
  404e19:	mov    ecx,0x1
  404e1e:	call   0x4388a0
  404e23:	mov    r9,QWORD PTR [rsp+0x38]
  404e28:	mov    r8,QWORD PTR [rsp+0x40]
  404e2d:	mov    rcx,rax
  404e30:	mov    rdx,QWORD PTR [rsp+0x48]
  404e35:	call   0x414ab0
  404e3a:	test   eax,eax
  404e3c:	jne    0x40491a
  404e42:	mov    rax,QWORD PTR [rsp+0x98]
  404e4a:	lea    rdx,[rip+0x36d7b]        # 0x43bbcc
  404e51:	test   rax,rax
  404e54:	je     0x404e5a
  404e56:	mov    rdx,QWORD PTR [rax+0x8]
  404e5a:	lea    rcx,[rip+0x36f27]        # 0x43bd88
  404e61:	call   0x4055e0
  404e66:	mov    ecx,0x1
  404e6b:	call   0x4388a0
  404e70:	mov    rdx,QWORD PTR [rsp+0xf0]
  404e78:	lea    rcx,[rip+0x36ed9]        # 0x43bd58
  404e7f:	call   0x4055e0
  404e84:	mov    ecx,0x1
  404e89:	call   0x4388a0
  404e8e:	mov    rdx,QWORD PTR [rsp+0xf0]
  404e96:	lea    rcx,[rip+0x36e4b]        # 0x43bce8
  404e9d:	call   0x4055e0
  404ea2:	mov    ecx,0x1
  404ea7:	call   0x4388a0
  404eac:	mov    r9,QWORD PTR [rsp+0x38]
  404eb1:	mov    r8,QWORD PTR [rsp+0x40]
  404eb6:	mov    rdx,QWORD PTR [rsp+0x48]
  404ebb:	mov    rcx,QWORD PTR [rsp+0x50]
  404ec0:	call   0x414ab0
  404ec5:	test   eax,eax
  404ec7:	jne    0x404787
  404ecd:	mov    rax,QWORD PTR [rsp+0x98]
  404ed5:	lea    rdx,[rip+0x36cf0]        # 0x43bbcc
  404edc:	test   rax,rax
  404edf:	je     0x404ee5
  404ee1:	mov    rdx,QWORD PTR [rax+0x8]
  404ee5:	lea    rcx,[rip+0x36f7c]        # 0x43be68
  404eec:	call   0x4055e0
  404ef1:	mov    ecx,0x1
  404ef6:	call   0x4388a0
  404efb:	nop
  404efc:	nop
  404efd:	nop
  404efe:	nop
  404eff:	nop
  404f00:	jmp    0x4387c8
  404f05:	nop
  404f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f10:	push   rdi
  404f11:	push   rsi
  404f12:	push   rbx
  404f13:	sub    rsp,0x20
  404f17:	mov    rcx,rdx
  404f1a:	call   0x4182b0
  404f1f:	movzx  edx,BYTE PTR [rax]
  404f22:	mov    rsi,rax
  404f25:	mov    rbx,rax
  404f28:	mov    rdi,QWORD PTR [rip+0x81b29]        # 0x486a58
  404f2f:	test   dl,dl
  404f31:	jne    0x404f40
  404f33:	jmp    0x404f80
  404f35:	add    rbx,0x1
  404f39:	movzx  edx,BYTE PTR [rbx]
  404f3c:	test   dl,dl
  404f3e:	je     0x404f80
  404f40:	movzx  ecx,dl
  404f43:	call   rdi
  404f45:	test   eax,eax
  404f47:	jne    0x404f35
  404f49:	movzx  r8d,BYTE PTR [rbx]
  404f4d:	mov    rdx,rbx
  404f50:	test   r8b,0xdf
  404f54:	jne    0x404f6e
  404f56:	jmp    0x404fbb
  404f58:	nop    DWORD PTR [rax+rax*1+0x0]
  404f60:	add    rdx,0x1
  404f64:	movzx  r8d,BYTE PTR [rdx]
  404f68:	test   r8b,0xdf
  404f6c:	je     0x404fbb
  404f6e:	cmp    r8b,0x3d
  404f72:	jne    0x404f60
  404f74:	test   r8b,r8b
  404f77:	jne    0x404fc0
  404f79:	nop    DWORD PTR [rax+0x0]
  404f80:	call   QWORD PTR [rip+0x81902]        # 0x486888
  404f86:	lea    rcx,[rip+0x370f3]        # 0x43c080
  404f8d:	lea    r9,[rax+0x60]
  404f91:	mov    r8d,0x42
  404f97:	mov    edx,0x1
  404f9c:	call   0x438848
  404fa1:	mov    ecx,0x1
  404fa6:	call   0x4388a0
  404fab:	nop    DWORD PTR [rax+rax*1+0x0]
  404fb0:	mov    BYTE PTR [rdx],0x0
  404fb3:	add    rdx,0x1
  404fb7:	movzx  r8d,BYTE PTR [rdx]
  404fbb:	test   r8b,r8b
  404fbe:	je     0x404f80
  404fc0:	cmp    r8b,0x20
  404fc4:	je     0x404fb0
  404fc6:	cmp    r8b,0x3d
  404fca:	je     0x404fb0
  404fcc:	mov    rcx,rbx
  404fcf:	call   0x4023f0
  404fd4:	mov    rcx,rsi
  404fd7:	call   0x40e6e0
  404fdc:	mov    eax,0x1
  404fe1:	add    rsp,0x20
  404fe5:	pop    rbx
  404fe6:	pop    rsi
  404fe7:	pop    rdi
  404fe8:	ret    
  404fe9:	nop    DWORD PTR [rax+0x0]
  404ff0:	push   rbp
  404ff1:	push   rdi
  404ff2:	push   rsi
  404ff3:	push   rbx
  404ff4:	sub    rsp,0x28
  404ff8:	mov    r11d,DWORD PTR [rip+0x7f095]        # 0x484094
  404fff:	mov    rbx,rcx
  405002:	mov    rbp,rdx
  405005:	test   r11d,r11d
  405008:	je     0x405120
  40500e:	cmp    BYTE PTR [rip+0x7f0e3],0x0        # 0x4840f8
  405015:	mov    eax,0x1
  40501a:	je     0x4050b3
  405020:	lea    rdi,[rip+0x3709c]        # 0x43c0c3
  405027:	mov    ecx,0x7
  40502c:	mov    rsi,rbx
  40502f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405031:	seta   cl
  405034:	setb   dl
  405037:	xor    al,al
  405039:	cmp    cl,dl
  40503b:	je     0x4050b3
  40503d:	lea    rdi,[rip+0x37086]        # 0x43c0ca
  405044:	mov    ecx,0xe
  405049:	mov    rsi,rbx
  40504c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40504e:	je     0x4050b3
  405050:	lea    rdi,[rip+0x37081]        # 0x43c0d8
  405057:	mov    ecx,0x12
  40505c:	mov    rsi,rbx
  40505f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405061:	je     0x4050b3
  405063:	lea    rdi,[rip+0x37080]        # 0x43c0ea
  40506a:	mov    ecx,0xe
  40506f:	mov    rsi,rbx
  405072:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405074:	je     0x4050b3
  405076:	lea    rdi,[rip+0x3707b]        # 0x43c0f8
  40507d:	mov    ecx,0x9
  405082:	mov    rsi,rbx
  405085:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405087:	je     0x4050b3
  405089:	lea    rdi,[rip+0x37071]        # 0x43c101
  405090:	mov    ecx,0x10
  405095:	mov    rsi,rbx
  405098:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40509a:	je     0x4050b3
  40509c:	lea    rdi,[rip+0x3706e]        # 0x43c111
  4050a3:	mov    ecx,0x14
  4050a8:	mov    rsi,rbx
  4050ab:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4050ad:	setne  al
  4050b0:	movzx  eax,al
  4050b3:	mov    r10d,DWORD PTR [rip+0x7f01a]        # 0x4840d4
  4050ba:	test   r10d,r10d
  4050bd:	je     0x405180
  4050c3:	lea    rdi,[rip+0x3705b]        # 0x43c125
  4050ca:	mov    ecx,0x19
  4050cf:	mov    rsi,rbx
  4050d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4050d4:	jne    0x405180
  4050da:	mov    edx,DWORD PTR [rip+0x7effc]        # 0x4840dc
  4050e0:	test   edx,edx
  4050e2:	je     0x405120
  4050e4:	mov    eax,DWORD PTR [rip+0x7efa6]        # 0x484090
  4050ea:	test   eax,eax
  4050ec:	jne    0x405120
  4050ee:	xor    eax,eax
  4050f0:	lea    rdi,[rip+0x37058]        # 0x43c14f
  4050f7:	mov    ecx,0x12
  4050fc:	mov    rsi,rbx
  4050ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405101:	je     0x405120
  405103:	lea    rdi,[rip+0x37057]        # 0x43c161
  40510a:	mov    ecx,0x10
  40510f:	mov    rsi,rbx
  405112:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405114:	jne    0x405272
  40511a:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	lea    rdi,[rip+0x37083]        # 0x43c1aa
  405127:	mov    ecx,0xa
  40512c:	mov    rsi,rbx
  40512f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405131:	je     0x405170
  405133:	lea    rdi,[rip+0x3707a]        # 0x43c1b4
  40513a:	mov    ecx,0xd
  40513f:	mov    rsi,rbx
  405142:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405144:	jne    0x4051e0
  40514a:	mov    DWORD PTR [rip+0x7efa8],0x1        # 0x4840fc
  405154:	mov    DWORD PTR [rip+0x7ef36],0x1        # 0x484094
  40515e:	mov    eax,0x1
  405163:	add    rsp,0x28
  405167:	pop    rbx
  405168:	pop    rsi
  405169:	pop    rdi
  40516a:	pop    rbp
  40516b:	ret    
  40516c:	nop    DWORD PTR [rax+0x0]
  405170:	mov    DWORD PTR [rip+0x7ef86],0x1        # 0x484100
  40517a:	jmp    0x405154
  40517c:	nop    DWORD PTR [rax+0x0]
  405180:	mov    r9d,DWORD PTR [rip+0x7ef49]        # 0x4840d0
  405187:	test   r9d,r9d
  40518a:	jne    0x405212
  405190:	mov    r8d,DWORD PTR [rip+0x7ef45]        # 0x4840dc
  405197:	test   r8d,r8d
  40519a:	je     0x4051aa
  40519c:	mov    ecx,DWORD PTR [rip+0x7eeee]        # 0x484090
  4051a2:	test   ecx,ecx
  4051a4:	je     0x4050f0
  4051aa:	test   eax,eax
  4051ac:	je     0x405120
  4051b2:	call   QWORD PTR [rip+0x816d0]        # 0x486888
  4051b8:	lea    rdx,[rip+0x36fc1]        # 0x43c180
  4051bf:	lea    rcx,[rax+0x60]
  4051c3:	mov    r8,rbx
  4051c6:	call   0x438870
  4051cb:	mov    eax,0x1
  4051d0:	add    rsp,0x28
  4051d4:	pop    rbx
  4051d5:	pop    rsi
  4051d6:	pop    rdi
  4051d7:	pop    rbp
  4051d8:	ret    
  4051d9:	nop    DWORD PTR [rax+0x0]
  4051e0:	lea    rdi,[rip+0x36edc]        # 0x43c0c3
  4051e7:	mov    ecx,0x7
  4051ec:	mov    rsi,rbx
  4051ef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4051f1:	je     0x405230
  4051f3:	lea    rdi,[rip+0x36ed0]        # 0x43c0ca
  4051fa:	mov    ecx,0xe
  4051ff:	mov    rsi,rbx
  405202:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405204:	jne    0x405240
  405206:	or     BYTE PTR [rip+0x7eeeb],0x1        # 0x4840f8
  40520d:	jmp    0x405154
  405212:	lea    rdi,[rip+0x36f25]        # 0x43c13e
  405219:	mov    ecx,0x11
  40521e:	mov    rsi,rbx
  405221:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405223:	je     0x4050da
  405229:	jmp    0x405190
  40522e:	xchg   ax,ax
  405230:	or     BYTE PTR [rip+0x7eec1],0x7        # 0x4840f8
  405237:	jmp    0x405154
  40523c:	nop    DWORD PTR [rax+0x0]
  405240:	lea    rdi,[rip+0x36e91]        # 0x43c0d8
  405247:	mov    ecx,0x12
  40524c:	mov    rsi,rbx
  40524f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405251:	je     0x405290
  405253:	lea    rdi,[rip+0x36e90]        # 0x43c0ea
  40525a:	mov    ecx,0xe
  40525f:	mov    rsi,rbx
  405262:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405264:	jne    0x4052a0
  405266:	or     BYTE PTR [rip+0x7ee8b],0x2        # 0x4840f8
  40526d:	jmp    0x405154
  405272:	lea    rdi,[rip+0x36ef8]        # 0x43c171
  405279:	mov    ecx,0xe
  40527e:	mov    rsi,rbx
  405281:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405283:	je     0x405120
  405289:	jmp    0x4051aa
  40528e:	xchg   ax,ax
  405290:	or     BYTE PTR [rip+0x7ee61],0x4        # 0x4840f8
  405297:	jmp    0x405154
  40529c:	nop    DWORD PTR [rax+0x0]
  4052a0:	lea    rdi,[rip+0x36e51]        # 0x43c0f8
  4052a7:	mov    ecx,0x9
  4052ac:	mov    rsi,rbx
  4052af:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4052b1:	jne    0x4052bf
  4052b3:	or     BYTE PTR [rip+0x7ee3e],0x18        # 0x4840f8
  4052ba:	jmp    0x405154
  4052bf:	lea    rdi,[rip+0x36e3b]        # 0x43c101
  4052c6:	mov    ecx,0x10
  4052cb:	mov    rsi,rbx
  4052ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4052d0:	jne    0x4052de
  4052d2:	or     BYTE PTR [rip+0x7ee1f],0x8        # 0x4840f8
  4052d9:	jmp    0x405154
  4052de:	lea    rdi,[rip+0x36e2c]        # 0x43c111
  4052e5:	mov    ecx,0x14
  4052ea:	mov    rsi,rbx
  4052ed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4052ef:	jne    0x4052fd
  4052f1:	or     BYTE PTR [rip+0x7ee00],0x10        # 0x4840f8
  4052f8:	jmp    0x405154
  4052fd:	lea    rdi,[rip+0x36ebd]        # 0x43c1c1
  405304:	mov    ecx,0xb
  405309:	mov    rsi,rbx
  40530c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40530e:	je     0x405354
  405310:	lea    rdi,[rip+0x36eb5]        # 0x43c1cc
  405317:	mov    ecx,0x9
  40531c:	mov    rsi,rbx
  40531f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405321:	jne    0x405332
  405323:	mov    DWORD PTR [rip+0x7edaf],0x1        # 0x4840dc
  40532d:	jmp    0x405154
  405332:	lea    rdx,[rip+0x36e9c]        # 0x43c1d5
  405339:	mov    rcx,rbx
  40533c:	call   0x4387a0
  405341:	test   eax,eax
  405343:	jne    0x405368
  405345:	mov    DWORD PTR [rip+0x7ed55],0x1        # 0x4840a4
  40534f:	jmp    0x405154
  405354:	mov    rcx,rbp
  405357:	call   0x4182b0
  40535c:	mov    QWORD PTR [rip+0x7ed7d],rax        # 0x4840e0
  405363:	jmp    0x405154
  405368:	lea    rdx,[rip+0x36e78]        # 0x43c1e7
  40536f:	mov    rcx,rbx
  405372:	call   0x4387a0
  405377:	test   eax,eax
  405379:	jne    0x40538a
  40537b:	mov    DWORD PTR [rip+0x7ed63],0x1        # 0x4840e8
  405385:	jmp    0x405154
  40538a:	lea    rdx,[rip+0x36dbe]        # 0x43c14f
  405391:	mov    rcx,rbx
  405394:	call   0x4387a0
  405399:	test   eax,eax
  40539b:	je     0x4053e9
  40539d:	lea    rdx,[rip+0x36dbd]        # 0x43c161
  4053a4:	mov    rcx,rbx
  4053a7:	call   0x4387a0
  4053ac:	test   eax,eax
  4053ae:	je     0x40545b
  4053b4:	lea    rdx,[rip+0x36db6]        # 0x43c171
  4053bb:	mov    rcx,rbx
  4053be:	call   0x4387a0
  4053c3:	test   eax,eax
  4053c5:	je     0x405433
  4053c7:	lea    rdx,[rip+0x36e27]        # 0x43c1f5
  4053ce:	mov    rcx,rbx
  4053d1:	call   0x4387a0
  4053d6:	test   eax,eax
  4053d8:	jne    0x405411
  4053da:	mov    DWORD PTR [rip+0x7ed10],0x1        # 0x4840f4
  4053e4:	jmp    0x405154
  4053e9:	mov    rcx,rbp
  4053ec:	call   0x4182b0
  4053f1:	mov    DWORD PTR [rip+0x7ece1],0x1        # 0x4840dc
  4053fb:	mov    QWORD PTR [rip+0x7ecc6],rax        # 0x4840c8
  405402:	mov    DWORD PTR [rip+0x7ec84],0x1        # 0x484090
  40540c:	jmp    0x405154
  405411:	lea    rdx,[rip+0x36de8]        # 0x43c200
  405418:	mov    rcx,rbx
  40541b:	call   0x4387a0
  405420:	test   eax,eax
  405422:	jne    0x405483
  405424:	mov    DWORD PTR [rip+0x7ecaa],0x1        # 0x4840d8
  40542e:	jmp    0x405154
  405433:	mov    rcx,rbp
  405436:	call   0x4182b0
  40543b:	mov    DWORD PTR [rip+0x7ec97],0x1        # 0x4840dc
  405445:	mov    QWORD PTR [rip+0x7ec6c],rax        # 0x4840b8
  40544c:	mov    DWORD PTR [rip+0x7ec3a],0x1        # 0x484090
  405456:	jmp    0x405154
  40545b:	mov    rcx,rbp
  40545e:	call   0x4182b0
  405463:	mov    DWORD PTR [rip+0x7ec6f],0x1        # 0x4840dc
  40546d:	mov    QWORD PTR [rip+0x7ec4c],rax        # 0x4840c0
  405474:	mov    DWORD PTR [rip+0x7ec12],0x1        # 0x484090
  40547e:	jmp    0x405154
  405483:	lea    rdx,[rip+0x36cb4]        # 0x43c13e
  40548a:	mov    rcx,rbx
  40548d:	call   0x4387a0
  405492:	test   eax,eax
  405494:	jne    0x4054a5
  405496:	mov    DWORD PTR [rip+0x7ec34],0x1        # 0x4840d4
  4054a0:	jmp    0x405154
  4054a5:	lea    rdx,[rip+0x36c79]        # 0x43c125
  4054ac:	mov    rcx,rbx
  4054af:	call   0x4387a0
  4054b4:	mov    edx,eax
  4054b6:	xor    eax,eax
  4054b8:	test   edx,edx
  4054ba:	jne    0x405163
  4054c0:	mov    DWORD PTR [rip+0x7ec06],0x1        # 0x4840d0
  4054ca:	jmp    0x405154
  4054cf:	nop
  4054d0:	push   rbx
  4054d1:	sub    rsp,0x20
  4054d5:	mov    eax,0x1
  4054da:	test   edx,edx
  4054dc:	mov    rbx,rcx
  4054df:	jne    0x40550c
  4054e1:	test   rcx,rcx
  4054e4:	je     0x40551d
  4054e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054f0:	mov    rax,QWORD PTR [rbx]
  4054f3:	mov    edx,DWORD PTR [rax+0x78]
  4054f6:	mov    rcx,QWORD PTR [rax+0x38]
  4054fa:	call   0x4054d0
  4054ff:	test   eax,eax
  405501:	jne    0x405512
  405503:	mov    rbx,QWORD PTR [rbx+0x8]
  405507:	test   rbx,rbx
  40550a:	jne    0x4054f0
  40550c:	add    rsp,0x20
  405510:	pop    rbx
  405511:	ret    
  405512:	mov    eax,0x1
  405517:	add    rsp,0x20
  40551b:	pop    rbx
  40551c:	ret    
  40551d:	xor    eax,eax
  40551f:	jmp    0x40550c
  405521:	nop    DWORD PTR [rax+rax*1+0x0]
  405526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405530:	push   rsi
  405531:	push   rbx
  405532:	sub    rsp,0x38
  405536:	test   rcx,rcx
  405539:	mov    QWORD PTR [rsp+0x58],rdx
  40553e:	mov    QWORD PTR [rsp+0x60],r8
  405543:	mov    QWORD PTR [rsp+0x68],r9
  405548:	je     0x4055c0
  40554a:	mov    eax,DWORD PTR [rip+0x7eb50]        # 0x4840a0
  405550:	test   eax,eax
  405552:	jne    0x405560
  405554:	add    rsp,0x38
  405558:	pop    rbx
  405559:	pop    rsi
  40555a:	ret    
  40555b:	nop    DWORD PTR [rax+rax*1+0x0]
  405560:	lea    rdx,[rsp+0x58]
  405565:	mov    QWORD PTR [rsp+0x28],rdx
  40556a:	call   0x418440
  40556f:	mov    edx,DWORD PTR [rip+0x7eb23]        # 0x484098
  405575:	mov    rsi,rax
  405578:	test   edx,edx
  40557a:	jne    0x4055b0
  40557c:	call   QWORD PTR [rip+0x81306]        # 0x486888
  405582:	lea    rbx,[rax+0x60]
  405586:	mov    rdx,rbx
  405589:	mov    rcx,rsi
  40558c:	call   0x438860
  405591:	mov    rcx,rbx
  405594:	call   0x438880
  405599:	mov    rcx,rsi
  40559c:	call   0x40e6e0
  4055a1:	nop
  4055a2:	add    rsp,0x38
  4055a6:	pop    rbx
  4055a7:	pop    rsi
  4055a8:	ret    
  4055a9:	nop    DWORD PTR [rax+0x0]
  4055b0:	call   QWORD PTR [rip+0x812d2]        # 0x486888
  4055b6:	lea    rbx,[rax+0x30]
  4055ba:	jmp    0x405586
  4055bc:	nop    DWORD PTR [rax+0x0]
  4055c0:	lea    r8,[rip+0x36c4a]        # 0x43c211
  4055c7:	lea    rdx,[rip+0x370b3]        # 0x43c681
  4055ce:	xor    ecx,ecx
  4055d0:	call   0x40fd20
  4055d5:	nop
  4055d6:	add    rsp,0x38
  4055da:	pop    rbx
  4055db:	pop    rsi
  4055dc:	ret    
  4055dd:	nop    DWORD PTR [rax]
  4055e0:	push   rsi
  4055e1:	push   rbx
  4055e2:	sub    rsp,0x38
  4055e6:	test   rcx,rcx
  4055e9:	mov    QWORD PTR [rsp+0x58],rdx
  4055ee:	mov    QWORD PTR [rsp+0x60],r8
  4055f3:	mov    QWORD PTR [rsp+0x68],r9
  4055f8:	je     0x405670
  4055fa:	mov    eax,DWORD PTR [rip+0x7ea9c]        # 0x48409c
  405600:	test   eax,eax
  405602:	jne    0x405610
  405604:	add    rsp,0x38
  405608:	pop    rbx
  405609:	pop    rsi
  40560a:	ret    
  40560b:	nop    DWORD PTR [rax+rax*1+0x0]
  405610:	lea    rdx,[rsp+0x58]
  405615:	mov    QWORD PTR [rsp+0x28],rdx
  40561a:	call   0x418440
  40561f:	mov    edx,DWORD PTR [rip+0x7ea73]        # 0x484098
  405625:	mov    rsi,rax
  405628:	test   edx,edx
  40562a:	jne    0x405660
  40562c:	call   QWORD PTR [rip+0x81256]        # 0x486888
  405632:	lea    rbx,[rax+0x60]
  405636:	mov    rdx,rbx
  405639:	mov    rcx,rsi
  40563c:	call   0x438860
  405641:	mov    rcx,rbx
  405644:	call   0x438880
  405649:	mov    rcx,rsi
  40564c:	call   0x40e6e0
  405651:	nop
  405652:	add    rsp,0x38
  405656:	pop    rbx
  405657:	pop    rsi
  405658:	ret    
  405659:	nop    DWORD PTR [rax+0x0]
  405660:	call   QWORD PTR [rip+0x81222]        # 0x486888
  405666:	lea    rbx,[rax+0x30]
  40566a:	jmp    0x405636
  40566c:	nop    DWORD PTR [rax+0x0]
  405670:	lea    r8,[rip+0x36b9a]        # 0x43c211
  405677:	lea    rdx,[rip+0x36ff5]        # 0x43c673
  40567e:	xor    ecx,ecx
  405680:	call   0x40fd20
  405685:	nop
  405686:	add    rsp,0x38
  40568a:	pop    rbx
  40568b:	pop    rsi
  40568c:	ret    
  40568d:	nop
  40568e:	nop
  40568f:	nop
  405690:	push   r12
  405692:	push   rbp
  405693:	push   rdi
  405694:	push   rsi
  405695:	push   rbx
  405696:	sub    rsp,0x20
  40569a:	test   rcx,rcx
  40569d:	je     0x4056e6
  40569f:	mov    rbp,rcx
  4056a2:	mov    rcx,rdx
  4056a5:	mov    r12,rdx
  4056a8:	call   0x438788
  4056ad:	mov    rbx,QWORD PTR [rbp+0x0]
  4056b1:	mov    esi,0xffffffff
  4056b6:	test   rbx,rbx
  4056b9:	je     0x4056eb
  4056bb:	movsxd rdi,eax
  4056be:	xor    esi,esi
  4056c0:	mov    r8,rdi
  4056c3:	mov    rdx,r12
  4056c6:	mov    rcx,rbx
  4056c9:	call   0x438780
  4056ce:	test   eax,eax
  4056d0:	jne    0x4056d8
  4056d2:	cmp    BYTE PTR [rbx+rdi*1],0x3d
  4056d6:	je     0x4056eb
  4056d8:	add    rsi,0x1
  4056dc:	mov    rbx,QWORD PTR [rbp+rsi*8+0x0]
  4056e1:	test   rbx,rbx
  4056e4:	jne    0x4056c0
  4056e6:	mov    esi,0xffffffff
  4056eb:	mov    eax,esi
  4056ed:	add    rsp,0x20
  4056f1:	pop    rbx
  4056f2:	pop    rsi
  4056f3:	pop    rdi
  4056f4:	pop    rbp
  4056f5:	pop    r12
  4056f7:	ret    
  4056f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405700:	push   rdi
  405701:	push   rsi
  405702:	push   rbx
  405703:	sub    rsp,0x20
  405707:	test   rdx,rdx
  40570a:	mov    rdi,rcx
  40570d:	mov    rsi,rdx
  405710:	je     0x405740
  405712:	call   0x405690
  405717:	movsxd rbx,eax
  40571a:	cmp    ebx,0xffffffff
  40571d:	je     0x405764
  40571f:	mov    rcx,rsi
  405722:	call   0x438788
  405727:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40572b:	lea    rax,[rdx+rax*1+0x1]
  405730:	add    rsp,0x20
  405734:	pop    rbx
  405735:	pop    rsi
  405736:	pop    rdi
  405737:	ret    
  405738:	nop    DWORD PTR [rax+rax*1+0x0]
  405740:	lea    r8,[rip+0x37d79]        # 0x43d4c0
  405747:	lea    rdx,[rip+0x37e72]        # 0x43d5c0
  40574e:	lea    rcx,[rip+0x37d7c]        # 0x43d4d1
  405755:	call   0x40fd20
  40575a:	xor    eax,eax
  40575c:	add    rsp,0x20
  405760:	pop    rbx
  405761:	pop    rsi
  405762:	pop    rdi
  405763:	ret    
  405764:	xor    eax,eax
  405766:	jmp    0x405730
  405768:	nop    DWORD PTR [rax+rax*1+0x0]
  405770:	push   r12
  405772:	push   rbp
  405773:	push   rdi
  405774:	push   rsi
  405775:	push   rbx
  405776:	sub    rsp,0x20
  40577a:	test   rdx,rdx
  40577d:	mov    rbx,rcx
  405780:	mov    rsi,rdx
  405783:	mov    rbp,r8
  405786:	mov    edi,r9d
  405789:	je     0x4057d0
  40578b:	mov    edx,0x3d
  405790:	mov    rcx,rsi
  405793:	call   0x4387a8
  405798:	test   rax,rax
  40579b:	je     0x405800
  40579d:	lea    r8,[rip+0x37d3c]        # 0x43d4e0
  4057a4:	lea    rdx,[rip+0x37df5]        # 0x43d5a0
  4057ab:	lea    rcx,[rip+0x37d1f]        # 0x43d4d1
  4057b2:	xor    ebx,ebx
  4057b4:	call   0x40fd20
  4057b9:	mov    rax,rbx
  4057bc:	add    rsp,0x20
  4057c0:	pop    rbx
  4057c1:	pop    rsi
  4057c2:	pop    rdi
  4057c3:	pop    rbp
  4057c4:	pop    r12
  4057c6:	ret    
  4057c7:	nop    WORD PTR [rax+rax*1+0x0]
  4057d0:	lea    r8,[rip+0x37ce9]        # 0x43d4c0
  4057d7:	lea    rdx,[rip+0x37dc2]        # 0x43d5a0
  4057de:	lea    rcx,[rip+0x37cec]        # 0x43d4d1
  4057e5:	xor    ebx,ebx
  4057e7:	call   0x40fd20
  4057ec:	mov    rax,rbx
  4057ef:	add    rsp,0x20
  4057f3:	pop    rbx
  4057f4:	pop    rsi
  4057f5:	pop    rdi
  4057f6:	pop    rbp
  4057f7:	pop    r12
  4057f9:	ret    
  4057fa:	nop    WORD PTR [rax+rax*1+0x0]
  405800:	mov    rdx,rsi
  405803:	mov    rcx,rbx
  405806:	call   0x405690
  40580b:	cmp    eax,0xffffffff
  40580e:	je     0x405845
  405810:	test   edi,edi
  405812:	je     0x4057b9
  405814:	cdqe   
  405816:	lea    rdi,[rbx+rax*8]
  40581a:	mov    rcx,QWORD PTR [rdi]
  40581d:	call   0x40e6e0
  405822:	lea    rcx,[rip+0x37cad]        # 0x43d4d6
  405829:	mov    r8,rbp
  40582c:	mov    rdx,rsi
  40582f:	call   0x418470
  405834:	mov    QWORD PTR [rdi],rax
  405837:	mov    rax,rbx
  40583a:	add    rsp,0x20
  40583e:	pop    rbx
  40583f:	pop    rsi
  405840:	pop    rdi
  405841:	pop    rbp
  405842:	pop    r12
  405844:	ret    
  405845:	test   rbx,rbx
  405848:	je     0x4058a5
  40584a:	mov    rcx,rbx
  40584d:	call   0x41a7e0
  405852:	lea    edx,[rax+0x2]
  405855:	mov    edi,eax
  405857:	mov    rcx,rbx
  40585a:	mov    r8d,0x8
  405860:	movsxd rdx,edx
  405863:	call   0x40e860
  405868:	mov    rbx,rax
  40586b:	movsxd rax,edi
  40586e:	shl    rax,0x3
  405872:	lea    r12,[rax+0x8]
  405876:	lea    rdi,[rbx+rax*1]
  40587a:	lea    rcx,[rip+0x37c55]        # 0x43d4d6
  405881:	mov    r8,rbp
  405884:	mov    rdx,rsi
  405887:	call   0x418470
  40588c:	mov    QWORD PTR [rdi],rax
  40588f:	mov    rax,rbx
  405892:	mov    QWORD PTR [rbx+r12*1],0x0
  40589a:	add    rsp,0x20
  40589e:	pop    rbx
  40589f:	pop    rsi
  4058a0:	pop    rdi
  4058a1:	pop    rbp
  4058a2:	pop    r12
  4058a4:	ret    
  4058a5:	mov    edx,0x10
  4058aa:	xor    ecx,ecx
  4058ac:	mov    r12d,0x8
  4058b2:	call   0x40e670
  4058b7:	mov    rbx,rax
  4058ba:	xor    eax,eax
  4058bc:	jmp    0x405876
  4058be:	xchg   ax,ax
  4058c0:	push   r13
  4058c2:	push   r12
  4058c4:	push   rbp
  4058c5:	push   rdi
  4058c6:	push   rsi
  4058c7:	push   rbx
  4058c8:	sub    rsp,0x28
  4058cc:	test   rdx,rdx
  4058cf:	mov    r13,rcx
  4058d2:	mov    r12,rdx
  4058d5:	je     0x405912
  4058d7:	mov    edx,0x3d
  4058dc:	mov    rcx,r12
  4058df:	call   0x4387a8
  4058e4:	test   rax,rax
  4058e7:	je     0x405940
  4058e9:	lea    r8,[rip+0x37bf0]        # 0x43d4e0
  4058f0:	lea    rdx,[rip+0x37c89]        # 0x43d580
  4058f7:	lea    rcx,[rip+0x37bd3]        # 0x43d4d1
  4058fe:	call   0x40fd20
  405903:	xor    eax,eax
  405905:	add    rsp,0x28
  405909:	pop    rbx
  40590a:	pop    rsi
  40590b:	pop    rdi
  40590c:	pop    rbp
  40590d:	pop    r12
  40590f:	pop    r13
  405911:	ret    
  405912:	lea    r8,[rip+0x37ba7]        # 0x43d4c0
  405919:	lea    rdx,[rip+0x37c60]        # 0x43d580
  405920:	lea    rcx,[rip+0x37baa]        # 0x43d4d1
  405927:	call   0x40fd20
  40592c:	xor    eax,eax
  40592e:	add    rsp,0x28
  405932:	pop    rbx
  405933:	pop    rsi
  405934:	pop    rdi
  405935:	pop    rbp
  405936:	pop    r12
  405938:	pop    r13
  40593a:	ret    
  40593b:	nop    DWORD PTR [rax+rax*1+0x0]
  405940:	test   r13,r13
  405943:	je     0x40592c
  405945:	mov    rcx,r12
  405948:	call   0x438788
  40594d:	mov    rbx,QWORD PTR [r13+0x0]
  405951:	test   rbx,rbx
  405954:	je     0x4059b7
  405956:	movsxd rbp,eax
  405959:	mov    rsi,r13
  40595c:	mov    rdi,r13
  40595f:	jmp    0x405974
  405961:	add    rsi,0x8
  405965:	mov    QWORD PTR [rdi],rbx
  405968:	add    rdi,0x8
  40596c:	mov    rbx,QWORD PTR [rsi]
  40596f:	test   rbx,rbx
  405972:	je     0x4059a0
  405974:	mov    r8,rbp
  405977:	mov    rdx,r12
  40597a:	mov    rcx,rbx
  40597d:	call   0x438780
  405982:	test   eax,eax
  405984:	jne    0x405961
  405986:	cmp    BYTE PTR [rbx+rbp*1],0x3d
  40598a:	jne    0x405961
  40598c:	mov    rcx,rbx
  40598f:	add    rsi,0x8
  405993:	call   0x40e6e0
  405998:	mov    rbx,QWORD PTR [rsi]
  40599b:	test   rbx,rbx
  40599e:	jne    0x405974
  4059a0:	mov    rax,r13
  4059a3:	mov    QWORD PTR [rdi],0x0
  4059aa:	add    rsp,0x28
  4059ae:	pop    rbx
  4059af:	pop    rsi
  4059b0:	pop    rdi
  4059b1:	pop    rbp
  4059b2:	pop    r12
  4059b4:	pop    r13
  4059b6:	ret    
  4059b7:	mov    rdi,r13
  4059ba:	jmp    0x4059a0
  4059bc:	nop    DWORD PTR [rax+0x0]
  4059c0:	push   r13
  4059c2:	push   r12
  4059c4:	push   rbp
  4059c5:	push   rdi
  4059c6:	push   rsi
  4059c7:	push   rbx
  4059c8:	sub    rsp,0x48
  4059cc:	test   rcx,rcx
  4059cf:	mov    rbx,rcx
  4059d2:	je     0x405b90
  4059d8:	xor    r8d,r8d
  4059db:	mov    rdx,0xffffffffffffffff
  4059e2:	call   0x422ee0
  4059e7:	test   eax,eax
  4059e9:	je     0x405b12
  4059ef:	lea    r13,[rsp+0x30]
  4059f4:	xor    r9d,r9d
  4059f7:	xor    r8d,r8d
  4059fa:	mov    edx,0xffffffff
  4059ff:	mov    rcx,rbx
  405a02:	mov    QWORD PTR [rsp+0x20],0x0
  405a0b:	call   0x4229b0
  405a10:	mov    r8d,0x2
  405a16:	mov    rdi,rax
  405a19:	mov    rdx,r13
  405a1c:	mov    rcx,rax
  405a1f:	mov    r12,QWORD PTR [rip+0x80ca2]        # 0x4866c8
  405a26:	call   r12
  405a29:	test   eax,eax
  405a2b:	mov    esi,eax
  405a2d:	je     0x405bd0
  405a33:	cmp    esi,0x1
  405a36:	je     0x405b40
  405a3c:	movsxd r8,esi
  405a3f:	mov    edx,0x2
  405a44:	lea    ebp,[rsi-0x1]
  405a47:	mov    rcx,r8
  405a4a:	call   0x40e7a0
  405a4f:	mov    rbx,rax
  405a52:	mov    r8d,esi
  405a55:	mov    rcx,rdi
  405a58:	mov    rdx,rbx
  405a5b:	call   r12
  405a5e:	cmp    eax,ebp
  405a60:	jne    0x405b6b
  405a66:	mov    edx,0x25
  405a6b:	mov    rcx,rbx
  405a6e:	call   0x438728
  405a73:	test   rax,rax
  405a76:	je     0x405abe
  405a78:	mov    r8d,0x2
  405a7e:	mov    rdx,r13
  405a81:	mov    rcx,rbx
  405a84:	mov    rbp,QWORD PTR [rip+0x80be5]        # 0x486670
  405a8b:	call   rbp
  405a8d:	test   eax,eax
  405a8f:	mov    esi,eax
  405a91:	jle    0x405abe
  405a93:	movsxd rcx,eax
  405a96:	mov    edx,0x2
  405a9b:	call   0x40e7a0
  405aa0:	mov    r8d,esi
  405aa3:	mov    r12,rax
  405aa6:	mov    rdx,rax
  405aa9:	mov    rcx,rbx
  405aac:	call   rbp
  405aae:	cmp    esi,eax
  405ab0:	je     0x405bc0
  405ab6:	mov    rcx,r12
  405ab9:	call   0x40e6e0
  405abe:	xor    r9d,r9d
  405ac1:	xor    r8d,r8d
  405ac4:	mov    edx,0xffffffff
  405ac9:	mov    rcx,rbx
  405acc:	mov    QWORD PTR [rsp+0x20],0x0
  405ad5:	call   0x4225c0
  405ada:	mov    rcx,rdi
  405add:	mov    rsi,rax
  405ae0:	call   0x40e6e0
  405ae5:	mov    rcx,rbx
  405ae8:	call   0x40e6e0
  405aed:	mov    rcx,rsi
  405af0:	call   0x42f9d0
  405af5:	mov    rcx,rsi
  405af8:	mov    ebx,eax
  405afa:	call   0x40e6e0
  405aff:	mov    ecx,ebx
  405b01:	add    rsp,0x48
  405b05:	pop    rbx
  405b06:	pop    rsi
  405b07:	pop    rdi
  405b08:	pop    rbp
  405b09:	pop    r12
  405b0b:	pop    r13
  405b0d:	jmp    0x42fdc0
  405b12:	lea    r8,[rip+0x379e7]        # 0x43d500
  405b19:	lea    rdx,[rip+0x37a4e]        # 0x43d56e
  405b20:	lea    rcx,[rip+0x379aa]        # 0x43d4d1
  405b27:	call   0x40fd20
  405b2c:	xor    eax,eax
  405b2e:	add    rsp,0x48
  405b32:	pop    rbx
  405b33:	pop    rsi
  405b34:	pop    rdi
  405b35:	pop    rbp
  405b36:	pop    r12
  405b38:	pop    r13
  405b3a:	ret    
  405b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b40:	mov    ecx,0x4
  405b45:	mov    ebp,0x1
  405b4a:	mov    esi,0x2
  405b4f:	call   0x40e5c0
  405b54:	mov    rbx,rax
  405b57:	mov    r8d,esi
  405b5a:	mov    rcx,rdi
  405b5d:	mov    rdx,rbx
  405b60:	call   r12
  405b63:	cmp    eax,ebp
  405b65:	je     0x405a66
  405b6b:	mov    rcx,rdi
  405b6e:	call   0x40e6e0
  405b73:	mov    rcx,rbx
  405b76:	call   0x40e6e0
  405b7b:	xor    eax,eax
  405b7d:	add    rsp,0x48
  405b81:	pop    rbx
  405b82:	pop    rsi
  405b83:	pop    rdi
  405b84:	pop    rbp
  405b85:	pop    r12
  405b87:	pop    r13
  405b89:	ret    
  405b8a:	nop    WORD PTR [rax+rax*1+0x0]
  405b90:	lea    r8,[rip+0x37929]        # 0x43d4c0
  405b97:	lea    rdx,[rip+0x379d0]        # 0x43d56e
  405b9e:	lea    rcx,[rip+0x3792c]        # 0x43d4d1
  405ba5:	call   0x40fd20
  405baa:	xor    eax,eax
  405bac:	add    rsp,0x48
  405bb0:	pop    rbx
  405bb1:	pop    rsi
  405bb2:	pop    rdi
  405bb3:	pop    rbp
  405bb4:	pop    r12
  405bb6:	pop    r13
  405bb8:	ret    
  405bb9:	nop    DWORD PTR [rax+0x0]
  405bc0:	mov    rcx,rbx
  405bc3:	mov    rbx,r12
  405bc6:	call   0x40e6e0
  405bcb:	jmp    0x405abe
  405bd0:	mov    rcx,rdi
  405bd3:	call   0x40e6e0
  405bd8:	jmp    0x405b2c
  405bdd:	nop    DWORD PTR [rax]
  405be0:	push   r12
  405be2:	push   rbp
  405be3:	push   rdi
  405be4:	push   rsi
  405be5:	push   rbx
  405be6:	sub    rsp,0x30
  405bea:	test   rcx,rcx
  405bed:	mov    rsi,rcx
  405bf0:	mov    rdi,rdx
  405bf3:	mov    ebp,r8d
  405bf6:	je     0x405c30
  405bf8:	mov    edx,0x3d
  405bfd:	call   0x4387a8
  405c02:	test   rax,rax
  405c05:	je     0x405c60
  405c07:	lea    r8,[rip+0x378d2]        # 0x43d4e0
  405c0e:	lea    rdx,[rip+0x3794b]        # 0x43d560
  405c15:	lea    rcx,[rip+0x378b5]        # 0x43d4d1
  405c1c:	xor    ebx,ebx
  405c1e:	call   0x40fd20
  405c23:	mov    eax,ebx
  405c25:	add    rsp,0x30
  405c29:	pop    rbx
  405c2a:	pop    rsi
  405c2b:	pop    rdi
  405c2c:	pop    rbp
  405c2d:	pop    r12
  405c2f:	ret    
  405c30:	lea    r8,[rip+0x37889]        # 0x43d4c0
  405c37:	lea    rdx,[rip+0x37922]        # 0x43d560
  405c3e:	lea    rcx,[rip+0x3788c]        # 0x43d4d1
  405c45:	xor    ebx,ebx
  405c47:	call   0x40fd20
  405c4c:	mov    eax,ebx
  405c4e:	add    rsp,0x30
  405c52:	pop    rbx
  405c53:	pop    rsi
  405c54:	pop    rdi
  405c55:	pop    rbp
  405c56:	pop    r12
  405c58:	ret    
  405c59:	nop    DWORD PTR [rax+0x0]
  405c60:	xor    r8d,r8d
  405c63:	mov    rdx,0xffffffffffffffff
  405c6a:	mov    rcx,rsi
  405c6d:	call   0x422ee0
  405c72:	test   eax,eax
  405c74:	mov    ebx,eax
  405c76:	je     0x405d60
  405c7c:	xor    r8d,r8d
  405c7f:	mov    rdx,0xffffffffffffffff
  405c86:	mov    rcx,rdi
  405c89:	call   0x422ee0
  405c8e:	test   eax,eax
  405c90:	mov    ebx,eax
  405c92:	je     0x405d90
  405c98:	test   ebp,ebp
  405c9a:	je     0x405dc0
  405ca0:	xor    r9d,r9d
  405ca3:	xor    r8d,r8d
  405ca6:	mov    rcx,rsi
  405ca9:	mov    QWORD PTR [rsp+0x20],0x0
  405cb2:	mov    edx,0xffffffff
  405cb7:	call   0x4229b0
  405cbc:	xor    r9d,r9d
  405cbf:	xor    r8d,r8d
  405cc2:	mov    rcx,rdi
  405cc5:	mov    QWORD PTR [rsp+0x20],0x0
  405cce:	mov    edx,0xffffffff
  405cd3:	mov    r12,rax
  405cd6:	call   0x4229b0
  405cdb:	lea    rdx,[rip+0x37843]        # 0x43d525
  405ce2:	xor    r9d,r9d
  405ce5:	mov    r8,rdi
  405ce8:	mov    rcx,rsi
  405ceb:	mov    rbp,rax
  405cee:	call   0x4184b0
  405cf3:	xor    r9d,r9d
  405cf6:	xor    r8d,r8d
  405cf9:	mov    edx,0xffffffff
  405cfe:	mov    rsi,rax
  405d01:	mov    QWORD PTR [rsp+0x20],0x0
  405d0a:	mov    rcx,rax
  405d0d:	call   0x4229b0
  405d12:	mov    rcx,rsi
  405d15:	mov    rbx,rax
  405d18:	call   0x40e6e0
  405d1d:	mov    rcx,rbx
  405d20:	call   QWORD PTR [rip+0x80c62]        # 0x486988
  405d26:	mov    rcx,rbx
  405d29:	xor    ebx,ebx
  405d2b:	call   0x40e6e0
  405d30:	mov    rdx,rbp
  405d33:	mov    rcx,r12
  405d36:	call   QWORD PTR [rip+0x80aa4]        # 0x4867e0
  405d3c:	mov    rcx,r12
  405d3f:	test   eax,eax
  405d41:	setne  bl
  405d44:	call   0x40e6e0
  405d49:	mov    rcx,rbp
  405d4c:	call   0x40e6e0
  405d51:	mov    eax,ebx
  405d53:	add    rsp,0x30
  405d57:	pop    rbx
  405d58:	pop    rsi
  405d59:	pop    rdi
  405d5a:	pop    rbp
  405d5b:	pop    r12
  405d5d:	ret    
  405d5e:	xchg   ax,ax
  405d60:	lea    r8,[rip+0x37799]        # 0x43d500
  405d67:	lea    rdx,[rip+0x377f2]        # 0x43d560
  405d6e:	lea    rcx,[rip+0x3775c]        # 0x43d4d1
  405d75:	call   0x40fd20
  405d7a:	mov    eax,ebx
  405d7c:	add    rsp,0x30
  405d80:	pop    rbx
  405d81:	pop    rsi
  405d82:	pop    rdi
  405d83:	pop    rbp
  405d84:	pop    r12
  405d86:	ret    
  405d87:	nop    WORD PTR [rax+rax*1+0x0]
  405d90:	lea    r8,[rip+0x37791]        # 0x43d528
  405d97:	lea    rdx,[rip+0x377c2]        # 0x43d560
  405d9e:	lea    rcx,[rip+0x3772c]        # 0x43d4d1
  405da5:	call   0x40fd20
  405daa:	mov    eax,ebx
  405dac:	add    rsp,0x30
  405db0:	pop    rbx
  405db1:	pop    rsi
  405db2:	pop    rdi
  405db3:	pop    rbp
  405db4:	pop    r12
  405db6:	ret    
  405db7:	nop    WORD PTR [rax+rax*1+0x0]
  405dc0:	mov    rcx,rsi
  405dc3:	mov    ebx,0x1
  405dc8:	call   0x4059c0
  405dcd:	test   rax,rax
  405dd0:	jne    0x405c23
  405dd6:	jmp    0x405ca0
  405ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  405de0:	push   rdi
  405de1:	push   rsi
  405de2:	push   rbx
  405de3:	sub    rsp,0x30
  405de7:	lea    r8,[rip+0x376d2]        # 0x43d4c0
  405dee:	test   rcx,rcx
  405df1:	je     0x405e0c
  405df3:	mov    edx,0x3d
  405df8:	mov    rbx,rcx
  405dfb:	call   0x4387a8
  405e00:	test   rax,rax
  405e03:	lea    r8,[rip+0x376d6]        # 0x43d4e0
  405e0a:	je     0x405e30
  405e0c:	lea    rdx,[rip+0x3773d]        # 0x43d550
  405e13:	lea    rcx,[rip+0x376b7]        # 0x43d4d1
  405e1a:	add    rsp,0x30
  405e1e:	pop    rbx
  405e1f:	pop    rsi
  405e20:	pop    rdi
  405e21:	jmp    0x40fd20
  405e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e30:	xor    r8d,r8d
  405e33:	mov    rdx,0xffffffffffffffff
  405e3a:	mov    rcx,rbx
  405e3d:	call   0x422ee0
  405e42:	test   eax,eax
  405e44:	je     0x405ed0
  405e4a:	xor    r9d,r9d
  405e4d:	xor    r8d,r8d
  405e50:	mov    rcx,rbx
  405e53:	mov    QWORD PTR [rsp+0x20],0x0
  405e5c:	mov    edx,0xffffffff
  405e61:	call   0x4229b0
  405e66:	lea    rdx,[rip+0x376b8]        # 0x43d525
  405e6d:	xor    r8d,r8d
  405e70:	mov    rcx,rbx
  405e73:	mov    rsi,rax
  405e76:	call   0x4184b0
  405e7b:	xor    r9d,r9d
  405e7e:	xor    r8d,r8d
  405e81:	mov    edx,0xffffffff
  405e86:	mov    rdi,rax
  405e89:	mov    QWORD PTR [rsp+0x20],0x0
  405e92:	mov    rcx,rax
  405e95:	call   0x4229b0
  405e9a:	mov    rcx,rdi
  405e9d:	mov    rbx,rax
  405ea0:	call   0x40e6e0
  405ea5:	mov    rcx,rbx
  405ea8:	call   QWORD PTR [rip+0x80ada]        # 0x486988
  405eae:	mov    rcx,rbx
  405eb1:	call   0x40e6e0
  405eb6:	mov    rcx,rsi
  405eb9:	xor    edx,edx
  405ebb:	call   QWORD PTR [rip+0x8091f]        # 0x4867e0
  405ec1:	mov    rcx,rsi
  405ec4:	add    rsp,0x30
  405ec8:	pop    rbx
  405ec9:	pop    rsi
  405eca:	pop    rdi
  405ecb:	jmp    0x40e6e0
  405ed0:	lea    r8,[rip+0x37629]        # 0x43d500
  405ed7:	jmp    0x405e0c
  405edc:	nop    DWORD PTR [rax+0x0]
  405ee0:	push   r14
  405ee2:	push   r13
  405ee4:	push   r12
  405ee6:	push   rbp
  405ee7:	push   rdi
  405ee8:	push   rsi
  405ee9:	push   rbx
  405eea:	sub    rsp,0x30
  405eee:	call   QWORD PTR [rip+0x807cc]        # 0x4866c0
  405ef4:	test   rax,rax
  405ef7:	mov    r12,rax
  405efa:	je     0x405ff0
  405f00:	cmp    WORD PTR [rax],0x0
  405f04:	je     0x406002
  405f0a:	mov    rbx,rax
  405f0d:	xor    esi,esi
  405f0f:	nop
  405f10:	mov    rcx,rbx
  405f13:	add    esi,0x1
  405f16:	call   0x438720
  405f1b:	lea    rbx,[rbx+rax*2+0x2]
  405f20:	cmp    WORD PTR [rbx],0x0
  405f24:	jne    0x405f10
  405f26:	lea    ecx,[rsi+0x1]
  405f29:	movsxd rcx,ecx
  405f2c:	mov    edx,0x8
  405f31:	call   0x40e800
  405f36:	mov    r13,rax
  405f39:	cmp    WORD PTR [r12],0x0
  405f3f:	je     0x405fc2
  405f45:	mov    rbx,r12
  405f48:	xor    ebp,ebp
  405f4a:	jmp    0x405f73
  405f4c:	nop    DWORD PTR [rax+0x0]
  405f50:	cmp    rsi,rax
  405f53:	jae    0x405fb8
  405f55:	lea    r14,[r13+rdi*1+0x8]
  405f5a:	mov    BYTE PTR [rax],0x0
  405f5d:	add    ebp,0x1
  405f60:	mov    rcx,rbx
  405f63:	call   0x438720
  405f68:	lea    rbx,[rbx+rax*2+0x2]
  405f6d:	cmp    WORD PTR [rbx],0x0
  405f71:	je     0x405fc5
  405f73:	movsxd rdi,ebp
  405f76:	xor    r9d,r9d
  405f79:	xor    r8d,r8d
  405f7c:	shl    rdi,0x3
  405f80:	mov    QWORD PTR [rsp+0x20],0x0
  405f89:	mov    edx,0xffffffff
  405f8e:	lea    r14,[r13+rdi*1+0x0]
  405f93:	mov    rcx,rbx
  405f96:	call   0x4225c0
  405f9b:	test   rax,rax
  405f9e:	mov    rsi,rax
  405fa1:	mov    QWORD PTR [r14],rax
  405fa4:	je     0x405f60
  405fa6:	mov    edx,0x3d
  405fab:	mov    rcx,rax
  405fae:	call   0x4387a8
  405fb3:	test   rax,rax
  405fb6:	jne    0x405f50
  405fb8:	mov    rcx,rsi
  405fbb:	call   0x40e6e0
  405fc0:	jmp    0x405f60
  405fc2:	mov    r14,r13
  405fc5:	mov    QWORD PTR [r14],0x0
  405fcc:	mov    rcx,r12
  405fcf:	call   QWORD PTR [rip+0x806ab]        # 0x486680
  405fd5:	mov    rax,r13
  405fd8:	add    rsp,0x30
  405fdc:	pop    rbx
  405fdd:	pop    rsi
  405fde:	pop    rdi
  405fdf:	pop    rbp
  405fe0:	pop    r12
  405fe2:	pop    r13
  405fe4:	pop    r14
  405fe6:	ret    
  405fe7:	nop    WORD PTR [rax+rax*1+0x0]
  405ff0:	mov    ecx,0x8
  405ff5:	call   0x40e610
  405ffa:	mov    r13,rax
  405ffd:	jmp    0x405f39
  406002:	mov    ecx,0x1
  406007:	jmp    0x405f2c
  40600c:	nop    DWORD PTR [rax+0x0]
  406010:	push   r12
  406012:	push   rbp
  406013:	push   rdi
  406014:	push   rsi
  406015:	push   rbx
  406016:	sub    rsp,0x30
  40601a:	call   QWORD PTR [rip+0x806a0]        # 0x4866c0
  406020:	cmp    WORD PTR [rax],0x0
  406024:	mov    rdi,rax
  406027:	je     0x4060d4
  40602d:	mov    rcx,rax
  406030:	xor    ebx,ebx
  406032:	call   0x438720
  406037:	lea    ebx,[rbx+rax*1+0x1]
  40603b:	movsxd rax,ebx
  40603e:	lea    rcx,[rdi+rax*2]
  406042:	cmp    WORD PTR [rcx],0x0
  406046:	jne    0x406032
  406048:	add    ebx,0x1
  40604b:	movsxd rcx,ebx
  40604e:	mov    edx,0x8
  406053:	call   0x40e7a0
  406058:	cmp    WORD PTR [rdi],0x0
  40605c:	mov    r12,rax
  40605f:	je     0x4060de
  406061:	mov    rbx,rdi
  406064:	xor    edx,edx
  406066:	xor    esi,esi
  406068:	nop    DWORD PTR [rax+rax*1+0x0]
  406070:	lea    rbp,[r12+rdx*8]
  406074:	xor    r9d,r9d
  406077:	xor    r8d,r8d
  40607a:	mov    edx,0xffffffff
  40607f:	mov    rcx,rbx
  406082:	mov    QWORD PTR [rsp+0x20],0x0
  40608b:	call   0x4225c0
  406090:	mov    rcx,rbx
  406093:	mov    QWORD PTR [rbp+0x0],rax
  406097:	call   0x438720
  40609c:	lea    esi,[rsi+rax*1+0x1]
  4060a0:	movsxd rdx,esi
  4060a3:	lea    rbx,[rdi+rdx*2]
  4060a7:	cmp    WORD PTR [rbx],0x0
  4060ab:	jne    0x406070
  4060ad:	lea    rbx,[rdx*8+0x0]
  4060b5:	mov    rcx,rdi
  4060b8:	call   QWORD PTR [rip+0x805c2]        # 0x486680
  4060be:	mov    rax,r12
  4060c1:	mov    QWORD PTR [r12+rbx*1],0x0
  4060c9:	add    rsp,0x30
  4060cd:	pop    rbx
  4060ce:	pop    rsi
  4060cf:	pop    rdi
  4060d0:	pop    rbp
  4060d1:	pop    r12
  4060d3:	ret    
  4060d4:	mov    ecx,0x1
  4060d9:	jmp    0x40604e
  4060de:	xor    ebx,ebx
  4060e0:	jmp    0x4060b5
  4060e2:	nop
  4060e3:	nop
  4060e4:	nop
  4060e5:	nop
  4060e6:	nop
  4060e7:	nop
  4060e8:	nop
  4060e9:	nop
  4060ea:	nop
  4060eb:	nop
  4060ec:	nop
  4060ed:	nop
  4060ee:	nop
  4060ef:	nop
  4060f0:	mov    edx,r8d
  4060f3:	jmp    0x417ac0
  4060f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406100:	push   r15
  406102:	push   r14
  406104:	mov    eax,0x1048
  406109:	push   r13
  40610b:	push   r12
  40610d:	push   rbp
  40610e:	push   rdi
  40610f:	push   rsi
  406110:	push   rbx
  406111:	call   0x4340c0
  406116:	sub    rsp,rax
  406119:	test   rdx,rdx
  40611c:	mov    QWORD PTR [rsp+0x1090],rcx
  406124:	mov    rsi,rdx
  406127:	mov    QWORD PTR [rsp+0x10a0],r8
  40612f:	mov    QWORD PTR [rsp+0x10a8],r9
  406137:	je     0x406282
  40613d:	lea    rax,[rsp+0x40]
  406142:	xor    r15d,r15d
  406145:	xor    r12d,r12d
  406148:	xor    r14d,r14d
  40614b:	mov    QWORD PTR [rsp+0x30],rax
  406150:	mov    rcx,rsi
  406153:	call   0x438890
  406158:	test   eax,eax
  40615a:	mov    DWORD PTR [rsp+0x38],eax
  40615e:	jne    0x4062ae
  406164:	mov    rcx,QWORD PTR [rsp+0x30]
  406169:	mov    r9,rsi
  40616c:	mov    r8d,0x1000
  406172:	mov    edx,0x1
  406177:	call   0x438858
  40617c:	mov    rbp,rax
  40617f:	call   QWORD PTR [rip+0x8075b]        # 0x4868e0
  406185:	mov    eax,DWORD PTR [rax]
  406187:	lea    r13,[rbp+r15*1+0x0]
  40618c:	lea    rdi,[rbp+0x1]
  406190:	lea    rbx,[r13+0x1]
  406194:	mov    DWORD PTR [rsp+0x3c],eax
  406198:	jmp    0x4061b6
  40619a:	nop    WORD PTR [rax+rax*1+0x0]
  4061a0:	add    r12,r12
  4061a3:	mov    rcx,r14
  4061a6:	mov    rdx,r12
  4061a9:	call   0x40e760
  4061ae:	test   rax,rax
  4061b1:	je     0x4061e5
  4061b3:	mov    r14,rax
  4061b6:	cmp    r12,rbx
  4061b9:	jae    0x406250
  4061bf:	test   r14,r14
  4061c2:	jne    0x4061a0
  4061c4:	cmp    rdi,0x1000
  4061cb:	mov    r12d,0x1000
  4061d1:	mov    rcx,r14
  4061d4:	cmovbe r12,rdi
  4061d8:	mov    rdx,r12
  4061db:	call   0x40e760
  4061e0:	test   rax,rax
  4061e3:	jne    0x4061b3
  4061e5:	lea    rcx,[rip+0x37414]        # 0x43d600
  4061ec:	call   0x42fc00
  4061f1:	mov    rdi,QWORD PTR [rsp+0x1090]
  4061f9:	mov    rcx,QWORD PTR [rsp+0x10b0]
  406201:	lea    r9,[rip+0x37410]        # 0x43d618
  406208:	mov    DWORD PTR [rsp+0x20],r12d
  40620d:	mov    r8d,0xd
  406213:	mov    edx,eax
  406215:	mov    QWORD PTR [rsp+0x28],rdi
  40621a:	call   0x430630
  40621f:	mov    rcx,r14
  406222:	call   0x40e6e0
  406227:	mov    rcx,rsi
  40622a:	call   0x438898
  40622f:	mov    eax,DWORD PTR [rsp+0x38]
  406233:	add    rsp,0x1048
  40623a:	pop    rbx
  40623b:	pop    rsi
  40623c:	pop    rdi
  40623d:	pop    rbp
  40623e:	pop    r12
  406240:	pop    r13
  406242:	pop    r14
  406244:	pop    r15
  406246:	ret    
  406247:	nop    WORD PTR [rax+rax*1+0x0]
  406250:	mov    rcx,rsi
  406253:	call   0x438888
  406258:	test   eax,eax
  40625a:	jne    0x406335
  406260:	mov    rdx,QWORD PTR [rsp+0x30]
  406265:	lea    rcx,[r14+r15*1]
  406269:	mov    r8,rbp
  40626c:	call   0x4387f0
  406271:	cmp    r15,r13
  406274:	ja     0x4062fb
  40627a:	mov    r15,r13
  40627d:	jmp    0x406150
  406282:	lea    rax,[rip+0x37457]        # 0x43d6e0
  406289:	lea    r9,[rip+0x378d0]        # 0x43db60
  406290:	lea    rdx,[rip+0x373e9]        # 0x43d680
  406297:	lea    rcx,[rip+0x3743d]        # 0x43d6db
  40629e:	mov    r8d,0x28c
  4062a4:	mov    QWORD PTR [rsp+0x20],rax
  4062a9:	call   0x41e680
  4062ae:	mov    rax,r12
  4062b1:	mov    rcx,rsi
  4062b4:	mov    r12,r15
  4062b7:	mov    r15,rax
  4062ba:	call   0x438898
  4062bf:	test   r15,r15
  4062c2:	je     0x406399
  4062c8:	cmp    QWORD PTR [rsp+0x10a8],0x0
  4062d1:	mov    BYTE PTR [r14+r12*1],0x0
  4062d6:	je     0x4062e3
  4062d8:	mov    rax,QWORD PTR [rsp+0x10a8]
  4062e0:	mov    QWORD PTR [rax],r12
  4062e3:	mov    rax,QWORD PTR [rsp+0x10a0]
  4062eb:	mov    DWORD PTR [rsp+0x38],0x1
  4062f3:	mov    QWORD PTR [rax],r14
  4062f6:	jmp    0x40622f
  4062fb:	lea    rcx,[rip+0x372fe]        # 0x43d600
  406302:	call   0x42fc00
  406307:	mov    rdi,QWORD PTR [rsp+0x1090]
  40630f:	mov    rcx,QWORD PTR [rsp+0x10b0]
  406317:	lea    r9,[rip+0x37345]        # 0x43d663
  40631e:	mov    r8d,0x18
  406324:	mov    edx,eax
  406326:	mov    QWORD PTR [rsp+0x20],rdi
  40632b:	call   0x430630
  406330:	jmp    0x40621f
  406335:	mov    ebx,DWORD PTR [rsp+0x3c]
  406339:	mov    ecx,ebx
  40633b:	call   0x418cf0
  406340:	mov    edx,ebx
  406342:	mov    rdi,rax
  406345:	mov    ebx,0x18
  40634a:	sub    edx,0x1
  40634d:	cmp    edx,0x71
  406350:	ja     0x40635d
  406352:	lea    rax,[rip+0x376a7]        # 0x43da00
  406359:	movzx  ebx,BYTE PTR [rax+rdx*1]
  40635d:	lea    rcx,[rip+0x3729c]        # 0x43d600
  406364:	call   0x42fc00
  406369:	mov    edx,eax
  40636b:	mov    rax,QWORD PTR [rsp+0x1090]
  406373:	mov    rcx,QWORD PTR [rsp+0x10b0]
  40637b:	lea    r9,[rip+0x372c5]        # 0x43d647
  406382:	mov    QWORD PTR [rsp+0x28],rdi
  406387:	mov    r8d,ebx
  40638a:	mov    QWORD PTR [rsp+0x20],rax
  40638f:	call   0x430630
  406394:	jmp    0x40621f
  406399:	mov    ecx,0x1
  40639e:	xor    r12d,r12d
  4063a1:	call   0x40e5c0
  4063a6:	mov    r14,rax
  4063a9:	jmp    0x4062c8
  4063ae:	xchg   ax,ax
  4063b0:	push   r15
  4063b2:	push   r14
  4063b4:	push   r13
  4063b6:	push   r12
  4063b8:	push   rbp
  4063b9:	push   rdi
  4063ba:	push   rsi
  4063bb:	push   rbx
  4063bc:	sub    rsp,0x48
  4063c0:	test   rcx,rcx
  4063c3:	mov    rbp,rcx
  4063c6:	mov    r12,rdx
  4063c9:	mov    DWORD PTR [rsp+0xa0],r8d
  4063d1:	mov    r14d,r9d
  4063d4:	je     0x406580
  4063da:	lea    rdx,[rip+0x37309]        # 0x43d6ea
  4063e1:	call   0x41a470
  4063e6:	test   rax,rax
  4063e9:	mov    rbx,rax
  4063ec:	je     0x4065b0
  4063f2:	lea    rdi,[rip+0x372f1]        # 0x43d6ea
  4063f9:	mov    ecx,0x6
  4063fe:	mov    rsi,rbx
  406401:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406403:	jne    0x4065b0
  406409:	lea    rcx,[rsp+0x30]
  40640e:	lea    r13,[rip+0x376eb]        # 0x43db00
  406415:	mov    edi,0x38e38e39
  40641a:	call   0x40bf20
  40641f:	mov    r15d,DWORD PTR [rsp+0x30]
  406424:	xor    r15d,DWORD PTR [rsp+0x34]
  406429:	mov    eax,DWORD PTR [rip+0x7dce1]        # 0x484110
  40642f:	mov    rsi,QWORD PTR [rip+0x804aa]        # 0x4868e0
  406436:	add    r15d,eax
  406439:	lea    edx,[rax+0x1]
  40643c:	lea    eax,[r15+0xbdde4]
  406443:	mov    DWORD PTR [rip+0x7dcc7],edx        # 0x484110
  406449:	mov    DWORD PTR [rsp+0x2c],eax
  40644d:	jmp    0x40646d
  40644f:	nop
  406450:	call   rsi
  406452:	cmp    DWORD PTR [rax],0x11
  406455:	jne    0x40659a
  40645b:	add    r15d,0x1e61
  406462:	cmp    r15d,DWORD PTR [rsp+0x2c]
  406467:	je     0x4065a1
  40646d:	mov    eax,r15d
  406470:	mov    ecx,r15d
  406473:	imul   edi
  406475:	mov    eax,r15d
  406478:	sar    eax,0x1f
  40647b:	sar    edx,0x3
  40647e:	sub    edx,eax
  406480:	lea    eax,[rdx+rdx*8]
  406483:	mov    r8d,edx
  406486:	shl    eax,0x2
  406489:	sub    ecx,eax
  40648b:	movsxd rax,ecx
  40648e:	movzx  eax,BYTE PTR [r13+rax*1+0x0]
  406494:	mov    BYTE PTR [rbx],al
  406496:	mov    eax,edx
  406498:	imul   edi
  40649a:	mov    eax,r8d
  40649d:	sar    eax,0x1f
  4064a0:	sar    edx,0x3
  4064a3:	mov    ecx,edx
  4064a5:	sub    ecx,eax
  4064a7:	lea    eax,[rcx+rcx*8]
  4064aa:	shl    eax,0x2
  4064ad:	sub    r8d,eax
  4064b0:	movsxd r8,r8d
  4064b3:	movzx  eax,BYTE PTR [r13+r8*1+0x0]
  4064b9:	mov    BYTE PTR [rbx+0x1],al
  4064bc:	mov    eax,ecx
  4064be:	imul   edi
  4064c0:	mov    eax,ecx
  4064c2:	sar    eax,0x1f
  4064c5:	sar    edx,0x3
  4064c8:	sub    edx,eax
  4064ca:	lea    eax,[rdx+rdx*8]
  4064cd:	mov    r8d,edx
  4064d0:	shl    eax,0x2
  4064d3:	sub    ecx,eax
  4064d5:	movsxd rcx,ecx
  4064d8:	movzx  eax,BYTE PTR [r13+rcx*1+0x0]
  4064de:	mov    BYTE PTR [rbx+0x2],al
  4064e1:	mov    eax,edx
  4064e3:	imul   edi
  4064e5:	mov    eax,r8d
  4064e8:	sar    eax,0x1f
  4064eb:	sar    edx,0x3
  4064ee:	mov    ecx,edx
  4064f0:	sub    ecx,eax
  4064f2:	lea    eax,[rcx+rcx*8]
  4064f5:	shl    eax,0x2
  4064f8:	sub    r8d,eax
  4064fb:	movsxd r8,r8d
  4064fe:	movzx  eax,BYTE PTR [r13+r8*1+0x0]
  406504:	mov    r8d,r14d
  406507:	mov    BYTE PTR [rbx+0x3],al
  40650a:	mov    eax,ecx
  40650c:	imul   edi
  40650e:	mov    eax,ecx
  406510:	sar    eax,0x1f
  406513:	sar    edx,0x3
  406516:	sub    edx,eax
  406518:	lea    eax,[rdx+rdx*8]
  40651b:	mov    r10d,edx
  40651e:	shl    eax,0x2
  406521:	sub    ecx,eax
  406523:	movsxd rcx,ecx
  406526:	movzx  eax,BYTE PTR [r13+rcx*1+0x0]
  40652c:	mov    rcx,rbp
  40652f:	mov    BYTE PTR [rbx+0x4],al
  406532:	mov    eax,edx
  406534:	imul   edi
  406536:	mov    eax,r10d
  406539:	sar    eax,0x1f
  40653c:	sar    edx,0x3
  40653f:	sub    edx,eax
  406541:	lea    eax,[rdx+rdx*8]
  406544:	mov    edx,DWORD PTR [rsp+0xa0]
  40654b:	shl    eax,0x2
  40654e:	sub    r10d,eax
  406551:	movsxd r10,r10d
  406554:	movzx  eax,BYTE PTR [r13+r10*1+0x0]
  40655a:	mov    BYTE PTR [rbx+0x5],al
  40655d:	call   r12
  406560:	test   eax,eax
  406562:	js     0x406450
  406568:	add    rsp,0x48
  40656c:	pop    rbx
  40656d:	pop    rsi
  40656e:	pop    rdi
  40656f:	pop    rbp
  406570:	pop    r12
  406572:	pop    r13
  406574:	pop    r14
  406576:	pop    r15
  406578:	ret    
  406579:	nop    DWORD PTR [rax+0x0]
  406580:	lea    r8,[rip+0x3716a]        # 0x43d6f1
  406587:	lea    rdx,[rip+0x37597]        # 0x43db25
  40658e:	lea    rcx,[rip+0x37146]        # 0x43d6db
  406595:	call   0x40fd20
  40659a:	mov    eax,0xffffffff
  40659f:	jmp    0x406568
  4065a1:	call   rsi
  4065a3:	mov    DWORD PTR [rax],0x11
  4065a9:	mov    eax,0xffffffff
  4065ae:	jmp    0x406568
  4065b0:	call   QWORD PTR [rip+0x8032a]        # 0x4868e0
  4065b6:	mov    DWORD PTR [rax],0x16
  4065bc:	mov    eax,0xffffffff
  4065c1:	jmp    0x406568
  4065c3:	nop    DWORD PTR [rax]
  4065c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065d0:	push   r12
  4065d2:	push   rbp
  4065d3:	push   rdi
  4065d4:	push   rsi
  4065d5:	push   rbx
  4065d6:	sub    rsp,0x40
  4065da:	test   rcx,rcx
  4065dd:	mov    rbx,rcx
  4065e0:	mov    rbp,rdx
  4065e3:	mov    rdi,r8
  4065e6:	mov    r12d,r9d
  4065e9:	je     0x406720
  4065ef:	mov    edx,0x5c
  4065f4:	call   0x4387a8
  4065f9:	test   rax,rax
  4065fc:	mov    rsi,rax
  4065ff:	jne    0x4066a7
  406605:	mov    edx,0x2f
  40660a:	mov    rcx,rbx
  40660d:	call   0x4387a8
  406612:	test   rax,rax
  406615:	jne    0x4066a0
  40661b:	lea    rdx,[rip+0x370c8]        # 0x43d6ea
  406622:	mov    rcx,rbx
  406625:	call   0x438760
  40662a:	test   rax,rax
  40662d:	je     0x40672c
  406633:	call   0x425200
  406638:	mov    rsi,rax
  40663b:	mov    rcx,rax
  40663e:	call   0x438788
  406643:	movzx  eax,BYTE PTR [rsi+rax*1-0x1]
  406648:	cmp    al,0x5c
  40664a:	je     0x406710
  406650:	cmp    al,0x2f
  406652:	lea    rdx,[rip+0x370b0]        # 0x43d709
  406659:	je     0x406710
  40665f:	xor    r9d,r9d
  406662:	mov    r8,rbx
  406665:	mov    rcx,rsi
  406668:	call   0x4184b0
  40666d:	mov    r9d,DWORD PTR [rsp+0x90]
  406675:	mov    r8d,r12d
  406678:	mov    rdx,rdi
  40667b:	mov    rcx,rax
  40667e:	mov    rbx,rax
  406681:	call   0x4063b0
  406686:	cmp    eax,0xffffffff
  406689:	je     0x406776
  40668f:	mov    QWORD PTR [rbp+0x0],rbx
  406693:	add    rsp,0x40
  406697:	pop    rbx
  406698:	pop    rsi
  406699:	pop    rdi
  40669a:	pop    rbp
  40669b:	pop    r12
  40669d:	ret    
  40669e:	xchg   ax,ax
  4066a0:	lea    rsi,[rip+0x37057]        # 0x43d6fe
  4066a7:	mov    rcx,rbx
  4066aa:	call   0x42e890
  4066af:	mov    rbx,rax
  4066b2:	movzx  eax,BYTE PTR [rsi]
  4066b5:	lea    rcx,[rip+0x36f44]        # 0x43d600
  4066bc:	mov    BYTE PTR [rsp+0x31],0x0
  4066c1:	mov    BYTE PTR [rsp+0x30],al
  4066c5:	call   0x42fc00
  4066ca:	lea    rdx,[rsp+0x30]
  4066cf:	mov    rcx,QWORD PTR [rsp+0x98]
  4066d7:	lea    r9,[rip+0x37032]        # 0x43d710
  4066de:	mov    r8d,0x18
  4066e4:	mov    QWORD PTR [rsp+0x20],rbx
  4066e9:	mov    QWORD PTR [rsp+0x28],rdx
  4066ee:	mov    edx,eax
  4066f0:	call   0x430630
  4066f5:	mov    rcx,rbx
  4066f8:	call   0x40e6e0
  4066fd:	mov    eax,0xffffffff
  406702:	add    rsp,0x40
  406706:	pop    rbx
  406707:	pop    rsi
  406708:	pop    rdi
  406709:	pop    rbp
  40670a:	pop    r12
  40670c:	ret    
  40670d:	nop    DWORD PTR [rax]
  406710:	lea    rdx,[rip+0x36ff1]        # 0x43d708
  406717:	jmp    0x40665f
  40671c:	nop    DWORD PTR [rax+0x0]
  406720:	lea    rbx,[rip+0x36fd9]        # 0x43d700
  406727:	jmp    0x40661b
  40672c:	mov    rcx,rbx
  40672f:	call   0x42e890
  406734:	lea    rcx,[rip+0x36ec5]        # 0x43d600
  40673b:	mov    rbx,rax
  40673e:	call   0x42fc00
  406743:	mov    rcx,QWORD PTR [rsp+0x98]
  40674b:	lea    r9,[rip+0x36ff6]        # 0x43d748
  406752:	mov    edx,eax
  406754:	mov    r8d,0x18
  40675a:	mov    QWORD PTR [rsp+0x20],rbx
  40675f:	call   0x430630
  406764:	mov    rcx,rbx
  406767:	call   0x40e6e0
  40676c:	mov    eax,0xffffffff
  406771:	jmp    0x406693
  406776:	call   QWORD PTR [rip+0x80164]        # 0x4868e0
  40677c:	mov    esi,DWORD PTR [rax]
  40677e:	mov    rcx,rbx
  406781:	mov    ebp,0x18
  406786:	call   0x42e890
  40678b:	mov    rdi,rax
  40678e:	mov    ecx,esi
  406790:	sub    esi,0x1
  406793:	call   0x418cf0
  406798:	cmp    esi,0x71
  40679b:	mov    r12,rax
  40679e:	ja     0x4067ab
  4067a0:	lea    rax,[rip+0x37259]        # 0x43da00
  4067a7:	movzx  ebp,BYTE PTR [rax+rsi*1]
  4067ab:	lea    rcx,[rip+0x36e4e]        # 0x43d600
  4067b2:	call   0x42fc00
  4067b7:	mov    rcx,QWORD PTR [rsp+0x98]
  4067bf:	lea    r9,[rip+0x36faa]        # 0x43d770
  4067c6:	mov    edx,eax
  4067c8:	mov    r8d,ebp
  4067cb:	mov    QWORD PTR [rsp+0x28],r12
  4067d0:	mov    QWORD PTR [rsp+0x20],rdi
  4067d5:	call   0x430630
  4067da:	mov    rcx,rdi
  4067dd:	call   0x40e6e0
  4067e2:	mov    rcx,rbx
  4067e5:	call   0x40e6e0
  4067ea:	mov    eax,0xffffffff
  4067ef:	jmp    0x406693
  4067f4:	xchg   ax,ax
  4067f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406800:	push   r15
  406802:	push   r14
  406804:	push   r13
  406806:	push   r12
  406808:	push   rbp
  406809:	push   rdi
  40680a:	push   rsi
  40680b:	push   rbx
  40680c:	sub    rsp,0x68
  406810:	mov    rdi,r9
  406813:	mov    rbp,rcx
  406816:	mov    r12,rdx
  406819:	mov    QWORD PTR [rsp+0x58],r8
  40681e:	mov    QWORD PTR [rsp+0x28],r9
  406823:	call   0x438788
  406828:	xor    ecx,ecx
  40682a:	mov    DWORD PTR [rsp+0x50],eax
  40682e:	call   0x41ae90
  406833:	test   rdi,rdi
  406836:	mov    QWORD PTR [rsp+0x38],rax
  40683b:	je     0x406a62
  406841:	mov    r12,QWORD PTR [rdi]
  406844:	mov    DWORD PTR [rsp+0x30],0x1
  40684c:	test   r12,r12
  40684f:	je     0x406a46
  406855:	xor    r13d,r13d
  406858:	mov    QWORD PTR [rsp+0x40],0x0
  406861:	mov    DWORD PTR [rsp+0x54],0x0
  406869:	mov    DWORD PTR [rsp+0x34],0x1
  406871:	movsxd rbx,DWORD PTR [rsp+0x50]
  406876:	jmp    0x4068c7
  406878:	nop    DWORD PTR [rax+rax*1+0x0]
  406880:	mov    rcx,r12
  406883:	mov    rdi,r12
  406886:	call   0x438788
  40688b:	lea    rsi,[r12+rax*1]
  40688f:	cmp    rsi,rdi
  406892:	je     0x4068bb
  406894:	mov    eax,DWORD PTR [rsp+0x34]
  406898:	test   eax,eax
  40689a:	je     0x4069f1
  4068a0:	mov    rcx,QWORD PTR [rsp+0x38]
  4068a5:	sub    rsi,rdi
  4068a8:	mov    rdx,rdi
  4068ab:	mov    r8,rsi
  4068ae:	call   0x41ae00
  4068b3:	mov    DWORD PTR [rsp+0x34],0x0
  4068bb:	test   r14,r14
  4068be:	je     0x406a03
  4068c4:	mov    r12,r14
  4068c7:	mov    rdx,QWORD PTR [rsp+0x28]
  4068cc:	test   rdx,rdx
  4068cf:	je     0x4069a0
  4068d5:	mov    ecx,DWORD PTR [rsp+0x30]
  4068d9:	movsxd rax,ecx
  4068dc:	mov    r14,QWORD PTR [rdx+rax*8]
  4068e0:	mov    eax,ecx
  4068e2:	add    eax,0x1
  4068e5:	mov    DWORD PTR [rsp+0x30],eax
  4068e9:	cmp    BYTE PTR [r12],0x0
  4068ee:	je     0x4068bb
  4068f0:	mov    ecx,DWORD PTR [rsp+0x50]
  4068f4:	mov    rdi,r12
  4068f7:	test   ecx,ecx
  4068f9:	jne    0x406903
  4068fb:	jmp    0x406880
  4068fd:	nop    DWORD PTR [rax]
  406900:	add    rdi,rbx
  406903:	mov    r8,rbx
  406906:	mov    rdx,rbp
  406909:	mov    rcx,rdi
  40690c:	call   0x438780
  406911:	test   eax,eax
  406913:	je     0x406900
  406915:	mov    rcx,rdi
  406918:	lea    r13,[rdi+rbx*1]
  40691c:	call   0x438788
  406921:	lea    rsi,[rdi+rax*1]
  406925:	jmp    0x40694b
  406927:	nop    WORD PTR [rax+rax*1+0x0]
  406930:	mov    r15,rsi
  406933:	mov    r8,rbx
  406936:	mov    rdx,rbp
  406939:	sub    r15,rbx
  40693c:	mov    rcx,r15
  40693f:	call   0x438780
  406944:	test   eax,eax
  406946:	jne    0x406950
  406948:	mov    rsi,r15
  40694b:	cmp    rsi,r13
  40694e:	jae    0x406930
  406950:	lea    rax,[r12+rbx*1]
  406954:	mov    r15,rsi
  406957:	mov    QWORD PTR [rsp+0x48],rsi
  40695c:	mov    r13,rax
  40695f:	jmp    0x40697c
  406961:	mov    rsi,r15
  406964:	mov    r8,rbx
  406967:	mov    rdx,rbp
  40696a:	sub    rsi,rbx
  40696d:	mov    rcx,rsi
  406970:	call   0x438780
  406975:	test   eax,eax
  406977:	jne    0x406981
  406979:	mov    r15,rsi
  40697c:	cmp    r15,r13
  40697f:	jae    0x406961
  406981:	mov    edx,DWORD PTR [rsp+0x54]
  406985:	mov    rsi,QWORD PTR [rsp+0x48]
  40698a:	mov    r13,r15
  40698d:	test   edx,edx
  40698f:	je     0x4069c0
  406991:	mov    QWORD PTR [rsp+0x40],0x0
  40699a:	jmp    0x40688f
  40699f:	nop
  4069a0:	mov    rdi,QWORD PTR [rsp+0x58]
  4069a5:	mov    rax,QWORD PTR [rdi]
  4069a8:	lea    rdx,[rax+0x8]
  4069ac:	mov    QWORD PTR [rdi],rdx
  4069af:	mov    r14,QWORD PTR [rax]
  4069b2:	jmp    0x4068e9
  4069b7:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	mov    rax,QWORD PTR [rsp+0x40]
  4069c5:	mov    rcx,QWORD PTR [rsp+0x38]
  4069ca:	cmp    r15,rdi
  4069cd:	mov    r8,rdi
  4069d0:	mov    rdx,r12
  4069d3:	cmovbe rax,r12
  4069d7:	sub    r8,r12
  4069da:	mov    QWORD PTR [rsp+0x40],rax
  4069df:	call   0x41ae00
  4069e4:	mov    DWORD PTR [rsp+0x54],0x1
  4069ec:	jmp    0x40688f
  4069f1:	mov    rcx,QWORD PTR [rsp+0x38]
  4069f6:	mov    rdx,rbp
  4069f9:	call   0x41ace0
  4069fe:	jmp    0x4068a0
  406a03:	mov    rdi,QWORD PTR [rsp+0x40]
  406a08:	test   rdi,rdi
  406a0b:	je     0x406a34
  406a0d:	mov    rcx,QWORD PTR [rsp+0x38]
  406a12:	mov    edx,0x1
  406a17:	call   0x41a8e0
  406a1c:	mov    rcx,rdi
  406a1f:	add    rsp,0x68
  406a23:	pop    rbx
  406a24:	pop    rsi
  406a25:	pop    rdi
  406a26:	pop    rbp
  406a27:	pop    r12
  406a29:	pop    r13
  406a2b:	pop    r14
  406a2d:	pop    r15
  406a2f:	jmp    0x4182b0
  406a34:	test   r13,r13
  406a37:	je     0x406a46
  406a39:	mov    rcx,QWORD PTR [rsp+0x38]
  406a3e:	mov    rdx,r13
  406a41:	call   0x41ace0
  406a46:	mov    rcx,QWORD PTR [rsp+0x38]
  406a4b:	xor    edx,edx
  406a4d:	add    rsp,0x68
  406a51:	pop    rbx
  406a52:	pop    rsi
  406a53:	pop    rdi
  406a54:	pop    rbp
  406a55:	pop    r12
  406a57:	pop    r13
  406a59:	pop    r14
  406a5b:	pop    r15
  406a5d:	jmp    0x41a8e0
  406a62:	mov    DWORD PTR [rsp+0x30],0x0
  406a6a:	jmp    0x40684c
  406a6f:	nop
  406a70:	push   r15
  406a72:	push   r14
  406a74:	push   r13
  406a76:	push   r12
  406a78:	push   rbp
  406a79:	push   rdi
  406a7a:	push   rsi
  406a7b:	push   rbx
  406a7c:	sub    rsp,0x58
  406a80:	mov    rbp,r8
  406a83:	mov    r15,rcx
  406a86:	xor    ecx,ecx
  406a88:	mov    QWORD PTR [rsp+0xa8],rdx
  406a90:	mov    BYTE PTR [rsp+0x4f],0x5c
  406a95:	call   0x41ae90
  406a9a:	test   rbp,rbp
  406a9d:	mov    QWORD PTR [rsp+0x28],rax
  406aa2:	je     0x406cbd
  406aa8:	mov    r15,QWORD PTR [rbp+0x0]
  406aac:	mov    edi,0x1
  406ab1:	test   r15,r15
  406ab4:	je     0x406caf
  406aba:	lea    rax,[rsp+0x4f]
  406abf:	xor    r12d,r12d
  406ac2:	xor    r13d,r13d
  406ac5:	test   rbp,rbp
  406ac8:	mov    DWORD PTR [rsp+0x34],0x0
  406ad0:	mov    DWORD PTR [rsp+0x30],0x1
  406ad8:	mov    QWORD PTR [rsp+0x38],rax
  406add:	je     0x406bcf
  406ae3:	movsxd rax,edi
  406ae6:	add    edi,0x1
  406ae9:	mov    r14,QWORD PTR [rbp+rax*8+0x0]
  406aee:	movzx  eax,BYTE PTR [r15]
  406af2:	test   al,al
  406af4:	je     0x406bba
  406afa:	movzx  edx,BYTE PTR [rsp+0x4f]
  406aff:	mov    rsi,r15
  406b02:	jmp    0x406b09
  406b04:	mov    edx,eax
  406b06:	movzx  eax,BYTE PTR [rsi]
  406b09:	cmp    al,0x2f
  406b0b:	je     0x406b15
  406b0d:	cmp    al,0x5c
  406b0f:	jne    0x406c40
  406b15:	add    rsi,0x1
  406b19:	jne    0x406b04
  406b1b:	mov    BYTE PTR [rsp+0x4f],al
  406b1f:	mov    r12d,0x1
  406b25:	mov    rcx,rsi
  406b28:	call   0x438788
  406b2d:	lea    rbx,[rsi+rax*1]
  406b31:	cmp    r12,rbx
  406b34:	jbe    0x406b51
  406b36:	jmp    0x406bf1
  406b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	sub    rbx,0x1
  406b44:	mov    BYTE PTR [rsp+0x4f],al
  406b48:	cmp    r12,rbx
  406b4b:	ja     0x406bf1
  406b51:	movzx  eax,BYTE PTR [rbx-0x1]
  406b55:	cmp    al,0x2f
  406b57:	je     0x406b40
  406b59:	cmp    al,0x5c
  406b5b:	je     0x406b40
  406b5d:	mov    r12,rbx
  406b60:	mov    edx,DWORD PTR [rsp+0x34]
  406b64:	test   edx,edx
  406b66:	jne    0x406c37
  406b6c:	mov    rcx,QWORD PTR [rsp+0x28]
  406b71:	cmp    r12,rsi
  406b74:	mov    r8,rsi
  406b77:	cmovbe r13,r15
  406b7b:	mov    rdx,r15
  406b7e:	sub    r8,r15
  406b81:	call   0x41ae00
  406b86:	mov    DWORD PTR [rsp+0x34],0x1
  406b8e:	cmp    rbx,rsi
  406b91:	je     0x406bba
  406b93:	mov    eax,DWORD PTR [rsp+0x30]
  406b97:	test   eax,eax
  406b99:	je     0x406c50
  406b9f:	mov    rcx,QWORD PTR [rsp+0x28]
  406ba4:	sub    rbx,rsi
  406ba7:	mov    rdx,rsi
  406baa:	mov    r8,rbx
  406bad:	call   0x41ae00
  406bb2:	mov    DWORD PTR [rsp+0x30],0x0
  406bba:	test   r14,r14
  406bbd:	je     0x406c70
  406bc3:	test   rbp,rbp
  406bc6:	mov    r15,r14
  406bc9:	jne    0x406ae3
  406bcf:	mov    rax,QWORD PTR [rsp+0xa8]
  406bd7:	mov    rcx,QWORD PTR [rsp+0xa8]
  406bdf:	mov    rax,QWORD PTR [rax]
  406be2:	lea    rdx,[rax+0x8]
  406be6:	mov    QWORD PTR [rcx],rdx
  406be9:	mov    r14,QWORD PTR [rax]
  406bec:	jmp    0x406aee
  406bf1:	lea    rax,[r15+0x1]
  406bf5:	cmp    rbx,rax
  406bf8:	jb     0x406b5d
  406bfe:	movzx  eax,BYTE PTR [rbx-0x1]
  406c02:	mov    r12,rbx
  406c05:	cmp    al,0x2f
  406c07:	jne    0x406c27
  406c09:	nop    DWORD PTR [rax+0x0]
  406c10:	sub    r12,0x1
  406c14:	cmp    r12,r15
  406c17:	je     0x406b60
  406c1d:	movzx  eax,BYTE PTR [r12-0x1]
  406c23:	cmp    al,0x2f
  406c25:	je     0x406c10
  406c27:	cmp    al,0x5c
  406c29:	je     0x406c10
  406c2b:	mov    edx,DWORD PTR [rsp+0x34]
  406c2f:	test   edx,edx
  406c31:	je     0x406b6c
  406c37:	xor    r13d,r13d
  406c3a:	jmp    0x406b8e
  406c3f:	nop
  406c40:	mov    BYTE PTR [rsp+0x4f],dl
  406c44:	lea    r12,[rsi+0x1]
  406c48:	jmp    0x406b25
  406c4d:	nop    DWORD PTR [rax]
  406c50:	mov    rdx,QWORD PTR [rsp+0x38]
  406c55:	mov    rcx,QWORD PTR [rsp+0x28]
  406c5a:	mov    r8d,0x1
  406c60:	call   0x41ae00
  406c65:	jmp    0x406b9f
  406c6a:	nop    WORD PTR [rax+rax*1+0x0]
  406c70:	test   r13,r13
  406c73:	je     0x406c9d
  406c75:	mov    rcx,QWORD PTR [rsp+0x28]
  406c7a:	mov    edx,0x1
  406c7f:	call   0x41a8e0
  406c84:	mov    rcx,r13
  406c87:	call   0x4182b0
  406c8c:	add    rsp,0x58
  406c90:	pop    rbx
  406c91:	pop    rsi
  406c92:	pop    rdi
  406c93:	pop    rbp
  406c94:	pop    r12
  406c96:	pop    r13
  406c98:	pop    r14
  406c9a:	pop    r15
  406c9c:	ret    
  406c9d:	test   r12,r12
  406ca0:	je     0x406caf
  406ca2:	mov    rcx,QWORD PTR [rsp+0x28]
  406ca7:	mov    rdx,r12
  406caa:	call   0x41ace0
  406caf:	mov    rcx,QWORD PTR [rsp+0x28]
  406cb4:	xor    edx,edx
  406cb6:	call   0x41a8e0
  406cbb:	jmp    0x406c8c
  406cbd:	xor    edi,edi
  406cbf:	jmp    0x406ab1
  406cc4:	xchg   ax,ax
  406cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cd0:	push   r13
  406cd2:	push   r12
  406cd4:	push   rbp
  406cd5:	push   rdi
  406cd6:	push   rsi
  406cd7:	push   rbx
  406cd8:	sub    rsp,0x48
  406cdc:	mov    rdi,QWORD PTR [rip+0x7fbfd]        # 0x4868e0
  406ce3:	mov    rsi,rcx
  406ce6:	mov    rbx,rdx
  406ce9:	mov    rbp,r8
  406cec:	call   rdi
  406cee:	mov    rdx,rbx
  406cf1:	mov    DWORD PTR [rax],0x0
  406cf7:	mov    rcx,rsi
  406cfa:	call   0x417980
  406cff:	cmp    eax,0xffffffff
  406d02:	mov    r9d,0x1
  406d08:	je     0x406d20
  406d0a:	mov    eax,r9d
  406d0d:	add    rsp,0x48
  406d11:	pop    rbx
  406d12:	pop    rsi
  406d13:	pop    rdi
  406d14:	pop    rbp
  406d15:	pop    r12
  406d17:	pop    r13
  406d19:	ret    
  406d1a:	nop    WORD PTR [rax+rax*1+0x0]
  406d20:	call   rdi
  406d22:	mov    edi,DWORD PTR [rax]
  406d24:	mov    rcx,rsi
  406d27:	mov    r12d,0x18
  406d2d:	call   0x42e890
  406d32:	mov    rcx,rbx
  406d35:	mov    rsi,rax
  406d38:	call   0x42e890
  406d3d:	mov    ecx,edi
  406d3f:	sub    edi,0x1
  406d42:	mov    rbx,rax
  406d45:	call   0x418cf0
  406d4a:	cmp    edi,0x71
  406d4d:	mov    r13,rax
  406d50:	ja     0x406d5e
  406d52:	lea    rax,[rip+0x36ca7]        # 0x43da00
  406d59:	movzx  r12d,BYTE PTR [rax+rdi*1]
  406d5e:	lea    rcx,[rip+0x3689b]        # 0x43d600
  406d65:	call   0x42fc00
  406d6a:	lea    r9,[rip+0x36a1f]        # 0x43d790
  406d71:	mov    edx,eax
  406d73:	mov    r8d,r12d
  406d76:	mov    rcx,rbp
  406d79:	mov    QWORD PTR [rsp+0x30],r13
  406d7e:	mov    QWORD PTR [rsp+0x28],rbx
  406d83:	mov    QWORD PTR [rsp+0x20],rsi
  406d88:	call   0x430630
  406d8d:	mov    rcx,rsi
  406d90:	call   0x40e6e0
  406d95:	mov    rcx,rbx
  406d98:	call   0x40e6e0
  406d9d:	xor    r9d,r9d
  406da0:	mov    eax,r9d
  406da3:	add    rsp,0x48
  406da7:	pop    rbx
  406da8:	pop    rsi
  406da9:	pop    rdi
  406daa:	pop    rbp
  406dab:	pop    r12
  406dad:	pop    r13
  406daf:	ret    
  406db0:	push   r13
  406db2:	push   r12
  406db4:	push   rbp
  406db5:	push   rdi
  406db6:	push   rsi
  406db7:	push   rbx
  406db8:	sub    rsp,0x38
  406dbc:	xor    r9d,r9d
  406dbf:	xor    r8d,r8d
  406dc2:	mov    esi,edx
  406dc4:	mov    QWORD PTR [rsp+0x20],0x0
  406dcd:	mov    edx,0xffffffff
  406dd2:	mov    rdi,rcx
  406dd5:	call   0x4229b0
  406dda:	test   rax,rax
  406ddd:	mov    rbx,rax
  406de0:	je     0x406e72
  406de6:	mov    rcx,rax
  406de9:	call   QWORD PTR [rip+0x7f8f1]        # 0x4866e0
  406def:	mov    rcx,rbx
  406df2:	mov    ebp,eax
  406df4:	call   0x40e6e0
  406df9:	cmp    ebp,0xffffffff
  406dfc:	je     0x406e72
  406dfe:	test   sil,0x10
  406e02:	jne    0x406e50
  406e04:	test   sil,0x1
  406e08:	je     0x406e10
  406e0a:	test   bpl,0x50
  406e0e:	je     0x406e50
  406e10:	test   sil,0x4
  406e14:	je     0x406e1b
  406e16:	and    ebp,0x10
  406e19:	jne    0x406e50
  406e1b:	and    esi,0x8
  406e1e:	je     0x406e72
  406e20:	mov    edx,0x2e
  406e25:	mov    rcx,rdi
  406e28:	call   0x438768
  406e2d:	test   rax,rax
  406e30:	mov    rbx,rax
  406e33:	je     0x406e72
  406e35:	lea    rdx,[rip+0x3698e]        # 0x43d7ca
  406e3c:	mov    rcx,rax
  406e3f:	mov    rsi,QWORD PTR [rip+0x7faea]        # 0x486930
  406e46:	call   rsi
  406e48:	test   eax,eax
  406e4a:	jne    0x406e81
  406e4c:	nop    DWORD PTR [rax+0x0]
  406e50:	mov    eax,0x1
  406e55:	add    rsp,0x38
  406e59:	pop    rbx
  406e5a:	pop    rsi
  406e5b:	pop    rdi
  406e5c:	pop    rbp
  406e5d:	pop    r12
  406e5f:	pop    r13
  406e61:	ret    
  406e62:	mov    rcx,r12
  406e65:	call   0x40e6e0
  406e6a:	mov    rcx,rbp
  406e6d:	call   0x40e6e0
  406e72:	xor    eax,eax
  406e74:	add    rsp,0x38
  406e78:	pop    rbx
  406e79:	pop    rsi
  406e7a:	pop    rdi
  406e7b:	pop    rbp
  406e7c:	pop    r12
  406e7e:	pop    r13
  406e80:	ret    
  406e81:	lea    rdx,[rip+0x36947]        # 0x43d7cf
  406e88:	mov    rcx,rbx
  406e8b:	call   rsi
  406e8d:	test   eax,eax
  406e8f:	je     0x406e50
  406e91:	lea    rdx,[rip+0x3693c]        # 0x43d7d4
  406e98:	mov    rcx,rbx
  406e9b:	call   rsi
  406e9d:	test   eax,eax
  406e9f:	je     0x406e50
  406ea1:	lea    rdx,[rip+0x36931]        # 0x43d7d9
  406ea8:	mov    rcx,rbx
  406eab:	call   rsi
  406ead:	test   eax,eax
  406eaf:	je     0x406e50
  406eb1:	lea    rcx,[rip+0x36926]        # 0x43d7de
  406eb8:	call   0x4059c0
  406ebd:	test   rax,rax
  406ec0:	je     0x406e72
  406ec2:	mov    rdx,0xffffffffffffffff
  406ec9:	mov    rcx,rax
  406ecc:	call   0x421550
  406ed1:	mov    rdx,0xffffffffffffffff
  406ed8:	mov    rcx,rbx
  406edb:	mov    r12,rax
  406ede:	call   0x421550
  406ee3:	mov    rcx,rax
  406ee6:	mov    rbp,rax
  406ee9:	mov    rsi,r12
  406eec:	call   0x438788
  406ef1:	movsxd rdi,eax
  406ef4:	mov    r13,rdi
  406ef7:	jmp    0x406f0d
  406ef9:	nop    DWORD PTR [rax+0x0]
  406f00:	cmp    BYTE PTR [rbx],0x0
  406f03:	je     0x406e62
  406f09:	lea    rsi,[rbx+0x1]
  406f0d:	mov    edx,0x3b
  406f12:	mov    rcx,rsi
  406f15:	call   0x4387a8
  406f1a:	test   rax,rax
  406f1d:	mov    rbx,rax
  406f20:	je     0x406f54
  406f22:	mov    rdx,rbx
  406f25:	sub    rdx,rsi
  406f28:	cmp    rdx,rdi
  406f2b:	jne    0x406f00
  406f2d:	mov    r8,r13
  406f30:	mov    rdx,rsi
  406f33:	mov    rcx,rbp
  406f36:	call   0x4387f8
  406f3b:	test   eax,eax
  406f3d:	jne    0x406f00
  406f3f:	mov    rcx,r12
  406f42:	call   0x40e6e0
  406f47:	mov    rcx,rbp
  406f4a:	call   0x40e6e0
  406f4f:	jmp    0x406e50
  406f54:	mov    rcx,rsi
  406f57:	call   0x438788
  406f5c:	lea    rbx,[rsi+rax*1]
  406f60:	jmp    0x406f22
  406f62:	nop    DWORD PTR [rax+0x0]
  406f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f70:	lea    rcx,[rip+0x36689]        # 0x43d600
  406f77:	jmp    0x42fc00
  406f7c:	nop    DWORD PTR [rax+0x0]
  406f80:	mov    eax,0x18
  406f85:	sub    ecx,0x1
  406f88:	cmp    ecx,0x71
  406f8b:	ja     0x406f98
  406f8d:	lea    rax,[rip+0x36a6c]        # 0x43da00
  406f94:	movzx  eax,BYTE PTR [rax+rcx*1]
  406f98:	repz ret 
  406f9a:	nop    WORD PTR [rax+rax*1+0x0]
  406fa0:	push   r13
  406fa2:	push   r12
  406fa4:	push   rbp
  406fa5:	push   rdi
  406fa6:	push   rsi
  406fa7:	push   rbx
  406fa8:	sub    rsp,0x38
  406fac:	test   rcx,rcx
  406faf:	mov    rbx,rcx
  406fb2:	mov    rsi,rdx
  406fb5:	mov    rdi,r8
  406fb8:	mov    r12,r9
  406fbb:	je     0x4070a3
  406fc1:	test   rdx,rdx
  406fc4:	je     0x4070d0
  406fca:	test   r8,r8
  406fcd:	mov    QWORD PTR [rdx],0x0
  406fd4:	je     0x406fdd
  406fd6:	mov    QWORD PTR [rdi],0x0
  406fdd:	mov    rcx,rbx
  406fe0:	call   0x42e890
  406fe5:	lea    rdx,[rip+0x367fa]        # 0x43d7e6
  406fec:	mov    rcx,rbx
  406fef:	mov    rbp,rax
  406ff2:	call   0x417e00
  406ff7:	mov    r13,rax
  406ffa:	call   QWORD PTR [rip+0x7f8e0]        # 0x4868e0
  407000:	test   r13,r13
  407003:	mov    ebx,DWORD PTR [rax]
  407005:	je     0x407040
  407007:	mov    r9,rdi
  40700a:	mov    r8,rsi
  40700d:	mov    rdx,r13
  407010:	mov    rcx,rbp
  407013:	mov    QWORD PTR [rsp+0x20],r12
  407018:	call   0x406100
  40701d:	mov    rcx,rbp
  407020:	mov    ebx,eax
  407022:	call   0x40e6e0
  407027:	mov    eax,ebx
  407029:	add    rsp,0x38
  40702d:	pop    rbx
  40702e:	pop    rsi
  40702f:	pop    rdi
  407030:	pop    rbp
  407031:	pop    r12
  407033:	pop    r13
  407035:	ret    
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	mov    ecx,ebx
  407042:	sub    ebx,0x1
  407045:	mov    esi,0x18
  40704a:	call   0x418cf0
  40704f:	cmp    ebx,0x71
  407052:	mov    rdi,rax
  407055:	ja     0x407062
  407057:	lea    rax,[rip+0x369a2]        # 0x43da00
  40705e:	movzx  esi,BYTE PTR [rax+rbx*1]
  407062:	lea    rcx,[rip+0x36597]        # 0x43d600
  407069:	call   0x42fc00
  40706e:	lea    r9,[rip+0x36774]        # 0x43d7e9
  407075:	mov    edx,eax
  407077:	mov    r8d,esi
  40707a:	mov    rcx,r12
  40707d:	mov    QWORD PTR [rsp+0x28],rdi
  407082:	mov    QWORD PTR [rsp+0x20],rbp
  407087:	call   0x430630
  40708c:	mov    rcx,rbp
  40708f:	call   0x40e6e0
  407094:	xor    eax,eax
  407096:	add    rsp,0x38
  40709a:	pop    rbx
  40709b:	pop    rsi
  40709c:	pop    rdi
  40709d:	pop    rbp
  40709e:	pop    r12
  4070a0:	pop    r13
  4070a2:	ret    
  4070a3:	lea    r8,[rip+0x3675c]        # 0x43d806
  4070aa:	lea    rdx,[rip+0x36acf]        # 0x43db80
  4070b1:	lea    rcx,[rip+0x36623]        # 0x43d6db
  4070b8:	call   0x40fd20
  4070bd:	xor    eax,eax
  4070bf:	add    rsp,0x38
  4070c3:	pop    rbx
  4070c4:	pop    rsi
  4070c5:	pop    rdi
  4070c6:	pop    rbp
  4070c7:	pop    r12
  4070c9:	pop    r13
  4070cb:	ret    
  4070cc:	nop    DWORD PTR [rax+0x0]
  4070d0:	lea    r8,[rip+0x36740]        # 0x43d817
  4070d7:	lea    rdx,[rip+0x36aa2]        # 0x43db80
  4070de:	lea    rcx,[rip+0x365f6]        # 0x43d6db
  4070e5:	call   0x40fd20
  4070ea:	xor    eax,eax
  4070ec:	add    rsp,0x38
  4070f0:	pop    rbx
  4070f1:	pop    rsi
  4070f2:	pop    rdi
  4070f3:	pop    rbp
  4070f4:	pop    r12
  4070f6:	pop    r13
  4070f8:	ret    
  4070f9:	nop    DWORD PTR [rax+0x0]
  407100:	push   r15
  407102:	push   r14
  407104:	push   r13
  407106:	push   r12
  407108:	push   rbp
  407109:	push   rdi
  40710a:	push   rsi
  40710b:	push   rbx
  40710c:	sub    rsp,0x58
  407110:	test   rcx,rcx
  407113:	mov    rsi,rcx
  407116:	mov    r15,rdx
  407119:	mov    rdi,r8
  40711c:	mov    r12,r9
  40711f:	mov    QWORD PTR [rsp+0x48],0x0
  407128:	je     0x407311
  40712e:	test   r9,r9
  407131:	je     0x407170
  407133:	cmp    QWORD PTR [r12],0x0
  407138:	je     0x407170
  40713a:	lea    r8,[rip+0x36807]        # 0x43d948
  407141:	lea    rdx,[rip+0x369f8]        # 0x43db40
  407148:	lea    rcx,[rip+0x3658c]        # 0x43d6db
  40714f:	call   0x40fd20
  407154:	xor    eax,eax
  407156:	add    rsp,0x58
  40715a:	pop    rbx
  40715b:	pop    rsi
  40715c:	pop    rdi
  40715d:	pop    rbp
  40715e:	pop    r12
  407160:	pop    r13
  407162:	pop    r14
  407164:	pop    r15
  407166:	ret    
  407167:	nop    WORD PTR [rax+rax*1+0x0]
  407170:	test   r15,r15
  407173:	jne    0x4071a0
  407175:	test   rdi,rdi
  407178:	je     0x4071a0
  40717a:	lea    r8,[rip+0x367e7]        # 0x43d968
  407181:	lea    rdx,[rip+0x369b8]        # 0x43db40
  407188:	lea    rcx,[rip+0x3654c]        # 0x43d6db
  40718f:	call   0x40fd20
  407194:	xor    eax,eax
  407196:	jmp    0x407156
  407198:	nop    DWORD PTR [rax+rax*1+0x0]
  4071a0:	cmp    rdi,0xffffffffffffffff
  4071a4:	jl     0x4072e0
  4071aa:	je     0x407301
  4071b0:	lea    rcx,[rip+0x36671]        # 0x43d828
  4071b7:	mov    rdx,rsi
  4071ba:	call   0x418470
  4071bf:	mov    rbx,QWORD PTR [rip+0x7f71a]        # 0x4868e0
  4071c6:	mov    rbp,rax
  4071c9:	call   rbx
  4071cb:	lea    rdx,[rip+0x106be]        # 0x417890
  4071d2:	mov    r9d,0x1b6
  4071d8:	mov    r8d,0x8502
  4071de:	mov    rcx,rbp
  4071e1:	mov    DWORD PTR [rax],0x0
  4071e7:	call   0x4063b0
  4071ec:	mov    r14d,eax
  4071ef:	call   rbx
  4071f1:	mov    rcx,rbp
  4071f4:	mov    r13d,DWORD PTR [rax]
  4071f7:	call   0x42e890
  4071fc:	cmp    r14d,0xffffffff
  407200:	mov    QWORD PTR [rsp+0x38],rax
  407205:	je     0x4073a0
  40720b:	call   rbx
  40720d:	lea    rdx,[rip+0x3661e]        # 0x43d832
  407214:	mov    DWORD PTR [rax],0x0
  40721a:	mov    ecx,r14d
  40721d:	call   0x4386f8
  407222:	test   rax,rax
  407225:	mov    r13,rax
  407228:	je     0x4075b1
  40722e:	test   rdi,rdi
  407231:	jle    0x407257
  407233:	call   rbx
  407235:	mov    r9,r13
  407238:	mov    DWORD PTR [rax],0x0
  40723e:	mov    r8,rdi
  407241:	mov    edx,0x1
  407246:	mov    rcx,r15
  407249:	call   0x438848
  40724e:	cmp    rdi,rax
  407251:	ja     0x407562
  407257:	call   rbx
  407259:	mov    rcx,r13
  40725c:	mov    DWORD PTR [rax],0x0
  407262:	call   0x438880
  407267:	test   eax,eax
  407269:	jne    0x407411
  40726f:	call   rbx
  407271:	mov    rcx,r13
  407274:	mov    DWORD PTR [rax],0x0
  40727a:	call   0x438898
  40727f:	cmp    eax,0xffffffff
  407282:	je     0x407500
  407288:	mov    rcx,rbp
  40728b:	call   0x4182b0
  407290:	mov    rcx,rbp
  407293:	mov    r13,rax
  407296:	call   0x40e6e0
  40729b:	mov    rcx,QWORD PTR [rsp+0x38]
  4072a0:	call   0x40e6e0
  4072a5:	test   r13,r13
  4072a8:	je     0x4074f2
  4072ae:	lea    r8,[rsp+0x48]
  4072b3:	mov    rdx,rsi
  4072b6:	mov    rcx,r13
  4072b9:	mov    edi,0x1
  4072be:	call   0x406cd0
  4072c3:	test   eax,eax
  4072c5:	je     0x407332
  4072c7:	mov    rcx,r13
  4072ca:	call   0x40e6e0
  4072cf:	mov    eax,edi
  4072d1:	jmp    0x407156
  4072d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072e0:	lea    r8,[rip+0x366a1]        # 0x43d988
  4072e7:	lea    rdx,[rip+0x36852]        # 0x43db40
  4072ee:	lea    rcx,[rip+0x363e6]        # 0x43d6db
  4072f5:	call   0x40fd20
  4072fa:	xor    eax,eax
  4072fc:	jmp    0x407156
  407301:	mov    rcx,r15
  407304:	call   0x438788
  407309:	mov    rdi,rax
  40730c:	jmp    0x4071b0
  407311:	lea    r8,[rip+0x364ee]        # 0x43d806
  407318:	lea    rdx,[rip+0x36821]        # 0x43db40
  40731f:	lea    rcx,[rip+0x363b5]        # 0x43d6db
  407326:	call   0x40fd20
  40732b:	xor    eax,eax
  40732d:	jmp    0x407156
  407332:	mov    edx,0x10
  407337:	mov    rcx,rsi
  40733a:	call   0x406db0
  40733f:	test   eax,eax
  407341:	jne    0x407360
  407343:	mov    rcx,r13
  407346:	xor    dil,dil
  407349:	call   0x417ca0
  40734e:	mov    rdx,QWORD PTR [rsp+0x48]
  407353:	mov    rcx,r12
  407356:	call   0x4306e0
  40735b:	jmp    0x4072c7
  407360:	mov    rcx,QWORD PTR [rsp+0x48]
  407365:	call   0x4304e0
  40736a:	mov    rcx,rsi
  40736d:	call   0x417ca0
  407372:	cmp    eax,0xffffffff
  407375:	je     0x407480
  40737b:	mov    r8,r12
  40737e:	mov    rdx,rsi
  407381:	mov    rcx,r13
  407384:	call   0x406cd0
  407389:	test   eax,eax
  40738b:	jne    0x4072c7
  407391:	mov    rcx,r13
  407394:	xor    edi,edi
  407396:	call   0x417ca0
  40739b:	jmp    0x4072c7
  4073a0:	mov    ecx,r13d
  4073a3:	sub    r13d,0x1
  4073a7:	mov    ebx,0x18
  4073ac:	call   0x418cf0
  4073b1:	cmp    r13d,0x71
  4073b5:	mov    rsi,rax
  4073b8:	ja     0x4073c6
  4073ba:	lea    rax,[rip+0x3663f]        # 0x43da00
  4073c1:	movzx  ebx,BYTE PTR [rax+r13*1]
  4073c6:	lea    rcx,[rip+0x36233]        # 0x43d600
  4073cd:	call   0x42fc00
  4073d2:	mov    edx,eax
  4073d4:	mov    rax,QWORD PTR [rsp+0x38]
  4073d9:	lea    r9,[rip+0x36390]        # 0x43d770
  4073e0:	mov    QWORD PTR [rsp+0x28],rsi
  4073e5:	mov    r8d,ebx
  4073e8:	mov    rcx,r12
  4073eb:	mov    QWORD PTR [rsp+0x20],rax
  4073f0:	call   0x430630
  4073f5:	mov    rcx,rbp
  4073f8:	xor    r13d,r13d
  4073fb:	xor    edi,edi
  4073fd:	call   0x40e6e0
  407402:	mov    rcx,QWORD PTR [rsp+0x38]
  407407:	call   0x40e6e0
  40740c:	jmp    0x4072c7
  407411:	call   rbx
  407413:	mov    ebx,DWORD PTR [rax]
  407415:	mov    esi,0x18
  40741a:	mov    ecx,ebx
  40741c:	sub    ebx,0x1
  40741f:	call   0x418cf0
  407424:	cmp    ebx,0x71
  407427:	mov    rdi,rax
  40742a:	ja     0x407437
  40742c:	lea    rax,[rip+0x365cd]        # 0x43da00
  407433:	movzx  esi,BYTE PTR [rax+rbx*1]
  407437:	lea    rcx,[rip+0x361c2]        # 0x43d600
  40743e:	call   0x42fc00
  407443:	mov    edx,eax
  407445:	mov    rax,QWORD PTR [rsp+0x38]
  40744a:	lea    r9,[rip+0x36457]        # 0x43d8a8
  407451:	mov    QWORD PTR [rsp+0x28],rdi
  407456:	mov    QWORD PTR [rsp+0x20],rax
  40745b:	mov    r8d,esi
  40745e:	mov    rcx,r12
  407461:	call   0x430630
  407466:	mov    rcx,r13
  407469:	call   0x438898
  40746e:	mov    rcx,rbp
  407471:	call   0x417ca0
  407476:	jmp    0x4073f5
  40747b:	nop    DWORD PTR [rax+rax*1+0x0]
  407480:	mov    rcx,rsi
  407483:	mov    edi,0x18
  407488:	call   0x42e890
  40748d:	mov    rsi,rax
  407490:	call   rbx
  407492:	mov    ebx,DWORD PTR [rax]
  407494:	mov    ecx,ebx
  407496:	sub    ebx,0x1
  407499:	call   0x418cf0
  40749e:	cmp    ebx,0x71
  4074a1:	mov    rbp,rax
  4074a4:	ja     0x4074b1
  4074a6:	lea    rax,[rip+0x36553]        # 0x43da00
  4074ad:	movzx  edi,BYTE PTR [rax+rbx*1]
  4074b1:	lea    rcx,[rip+0x36148]        # 0x43d600
  4074b8:	call   0x42fc00
  4074bd:	lea    r9,[rip+0x36444]        # 0x43d908
  4074c4:	mov    r8d,edi
  4074c7:	mov    edx,eax
  4074c9:	mov    rcx,r12
  4074cc:	mov    QWORD PTR [rsp+0x28],rbp
  4074d1:	mov    QWORD PTR [rsp+0x20],rsi
  4074d6:	call   0x430630
  4074db:	mov    rcx,rsi
  4074de:	xor    edi,edi
  4074e0:	call   0x40e6e0
  4074e5:	mov    rcx,r13
  4074e8:	call   0x417ca0
  4074ed:	jmp    0x4072c7
  4074f2:	xor    edi,edi
  4074f4:	jmp    0x4072c7
  4074f9:	nop    DWORD PTR [rax+0x0]
  407500:	call   rbx
  407502:	mov    ebx,DWORD PTR [rax]
  407504:	mov    esi,0x18
  407509:	mov    ecx,ebx
  40750b:	sub    ebx,0x1
  40750e:	call   0x418cf0
  407513:	cmp    ebx,0x71
  407516:	mov    rdi,rax
  407519:	ja     0x407526
  40751b:	lea    rax,[rip+0x364de]        # 0x43da00
  407522:	movzx  esi,BYTE PTR [rax+rbx*1]
  407526:	lea    rcx,[rip+0x360d3]        # 0x43d600
  40752d:	call   0x42fc00
  407532:	mov    edx,eax
  407534:	mov    rax,QWORD PTR [rsp+0x38]
  407539:	lea    r9,[rip+0x36398]        # 0x43d8d8
  407540:	mov    rcx,r12
  407543:	mov    QWORD PTR [rsp+0x28],rdi
  407548:	mov    r8d,esi
  40754b:	mov    QWORD PTR [rsp+0x20],rax
  407550:	call   0x430630
  407555:	mov    rcx,rbp
  407558:	call   0x417ca0
  40755d:	jmp    0x4073f5
  407562:	call   rbx
  407564:	mov    ebx,DWORD PTR [rax]
  407566:	mov    esi,0x18
  40756b:	mov    ecx,ebx
  40756d:	sub    ebx,0x1
  407570:	call   0x418cf0
  407575:	cmp    ebx,0x71
  407578:	mov    rdi,rax
  40757b:	ja     0x407588
  40757d:	lea    rax,[rip+0x3647c]        # 0x43da00
  407584:	movzx  esi,BYTE PTR [rax+rbx*1]
  407588:	lea    rcx,[rip+0x36071]        # 0x43d600
  40758f:	call   0x42fc00
  407594:	mov    edx,eax
  407596:	mov    rax,QWORD PTR [rsp+0x38]
  40759b:	mov    QWORD PTR [rsp+0x28],rdi
  4075a0:	lea    r9,[rip+0x362d1]        # 0x43d878
  4075a7:	mov    QWORD PTR [rsp+0x20],rax
  4075ac:	jmp    0x40745b
  4075b1:	call   rbx
  4075b3:	mov    ebx,DWORD PTR [rax]
  4075b5:	mov    esi,0x18
  4075ba:	mov    ecx,ebx
  4075bc:	sub    ebx,0x1
  4075bf:	call   0x418cf0
  4075c4:	cmp    ebx,0x71
  4075c7:	mov    rdi,rax
  4075ca:	ja     0x4075d7
  4075cc:	lea    rax,[rip+0x3642d]        # 0x43da00
  4075d3:	movzx  esi,BYTE PTR [rax+rbx*1]
  4075d7:	lea    rcx,[rip+0x36022]        # 0x43d600
  4075de:	call   0x42fc00
  4075e3:	mov    edx,eax
  4075e5:	mov    rax,QWORD PTR [rsp+0x38]
  4075ea:	lea    r9,[rip+0x36247]        # 0x43d838
  4075f1:	mov    r8d,esi
  4075f4:	mov    rcx,r12
  4075f7:	mov    QWORD PTR [rsp+0x28],rdi
  4075fc:	mov    QWORD PTR [rsp+0x20],rax
  407601:	call   0x430630
  407606:	mov    ecx,r14d
  407609:	call   0x4386f0
  40760e:	mov    rcx,rbp
  407611:	call   0x417ca0
  407616:	jmp    0x4073f5
  40761b:	nop    DWORD PTR [rax+rax*1+0x0]
  407620:	push   rbx
  407621:	sub    rsp,0x20
  407625:	xor    r8d,r8d
  407628:	mov    r9d,edx
  40762b:	lea    rdx,[rip+0xffffffffffffeabe]        # 0x4060f0
  407632:	mov    rbx,rcx
  407635:	call   0x4063b0
  40763a:	cmp    eax,0xffffffff
  40763d:	mov    eax,0x0
  407642:	cmovne rax,rbx
  407646:	add    rsp,0x20
  40764a:	pop    rbx
  40764b:	ret    
  40764c:	nop    DWORD PTR [rax+0x0]
  407650:	push   rbx
  407651:	sub    rsp,0x20
  407655:	lea    rdx,[rip+0xffffffffffffea94]        # 0x4060f0
  40765c:	xor    r8d,r8d
  40765f:	mov    r9d,0x1c0
  407665:	mov    rbx,rcx
  407668:	call   0x4063b0
  40766d:	cmp    eax,0xffffffff
  407670:	mov    eax,0x0
  407675:	cmovne rax,rbx
  407679:	add    rsp,0x20
  40767d:	pop    rbx
  40767e:	ret    
  40767f:	nop
  407680:	or     dh,0x5
  407683:	mov    r9d,r8d
  407686:	mov    r8d,edx
  407689:	lea    rdx,[rip+0x10200]        # 0x417890
  407690:	jmp    0x4063b0
  407695:	nop
  407696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076a0:	lea    rdx,[rip+0x101e9]        # 0x417890
  4076a7:	mov    r9d,0x180
  4076ad:	mov    r8d,0x8502
  4076b3:	jmp    0x4063b0
  4076b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076c0:	push   rbx
  4076c1:	sub    rsp,0x50
  4076c5:	mov    r9d,0x8502
  4076cb:	mov    QWORD PTR [rsp+0x28],r8
  4076d0:	mov    rbx,rdx
  4076d3:	lea    r8,[rip+0x101b6]        # 0x417890
  4076da:	lea    rdx,[rsp+0x48]
  4076df:	mov    DWORD PTR [rsp+0x20],0x180
  4076e7:	call   0x4065d0
  4076ec:	cmp    eax,0xffffffff
  4076ef:	je     0x4076fe
  4076f1:	test   rbx,rbx
  4076f4:	je     0x407704
  4076f6:	mov    rdx,QWORD PTR [rsp+0x48]
  4076fb:	mov    QWORD PTR [rbx],rdx
  4076fe:	add    rsp,0x50
  407702:	pop    rbx
  407703:	ret    
  407704:	mov    rcx,QWORD PTR [rsp+0x48]
  407709:	mov    DWORD PTR [rsp+0x3c],eax
  40770d:	call   0x40e6e0
  407712:	mov    eax,DWORD PTR [rsp+0x3c]
  407716:	jmp    0x4076fe
  407718:	nop    DWORD PTR [rax+rax*1+0x0]
  407720:	sub    rsp,0x48
  407724:	lea    r8,[rip+0xffffffffffffe9c5]        # 0x4060f0
  40772b:	xor    r9d,r9d
  40772e:	lea    rax,[rsp+0x38]
  407733:	mov    QWORD PTR [rsp+0x28],rdx
  407738:	mov    DWORD PTR [rsp+0x20],0x1c0
  407740:	mov    rdx,rax
  407743:	call   0x4065d0
  407748:	cmp    eax,0xffffffff
  40774b:	je     0x407760
  40774d:	mov    rax,QWORD PTR [rsp+0x38]
  407752:	add    rsp,0x48
  407756:	ret    
  407757:	nop    WORD PTR [rax+rax*1+0x0]
  407760:	xor    eax,eax
  407762:	jmp    0x407752
  407764:	xchg   ax,ax
  407766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407770:	test   rdx,rdx
  407773:	mov    r9,rdx
  407776:	je     0x407782
  407778:	xor    r8d,r8d
  40777b:	xor    edx,edx
  40777d:	jmp    0x406800
  407782:	xor    eax,eax
  407784:	ret    
  407785:	nop
  407786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407790:	sub    rsp,0x38
  407794:	test   rcx,rcx
  407797:	mov    QWORD PTR [rsp+0x50],r8
  40779c:	mov    QWORD PTR [rsp+0x58],r9
  4077a1:	je     0x4077c0
  4077a3:	lea    rax,[rsp+0x50]
  4077a8:	lea    r8,[rsp+0x28]
  4077ad:	xor    r9d,r9d
  4077b0:	mov    QWORD PTR [rsp+0x28],rax
  4077b5:	call   0x406800
  4077ba:	add    rsp,0x38
  4077be:	ret    
  4077bf:	nop
  4077c0:	lea    r8,[rip+0x361ce]        # 0x43d995
  4077c7:	lea    rdx,[rip+0x36325]        # 0x43daf3
  4077ce:	lea    rcx,[rip+0x35f06]        # 0x43d6db
  4077d5:	call   0x40fd20
  4077da:	xor    eax,eax
  4077dc:	add    rsp,0x38
  4077e0:	ret    
  4077e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4077e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077f0:	xor    edx,edx
  4077f2:	mov    r8,rcx
  4077f5:	xor    ecx,ecx
  4077f7:	jmp    0x406a70
  4077fc:	nop    DWORD PTR [rax+0x0]
  407800:	sub    rsp,0x38
  407804:	mov    QWORD PTR [rsp+0x48],rdx
  407809:	lea    rax,[rsp+0x48]
  40780e:	lea    rdx,[rsp+0x28]
  407813:	mov    QWORD PTR [rsp+0x50],r8
  407818:	xor    r8d,r8d
  40781b:	mov    QWORD PTR [rsp+0x58],r9
  407820:	mov    QWORD PTR [rsp+0x28],rax
  407825:	call   0x406a70
  40782a:	add    rsp,0x38
  40782e:	ret    
  40782f:	nop
  407830:	push   rbx
  407831:	sub    rsp,0x20
  407835:	lea    rcx,[rip+0x35dc4]        # 0x43d600
  40783c:	mov    rbx,rdx
  40783f:	call   0x42fc00
  407844:	lea    r9,[rip+0x3615c]        # 0x43d9a7
  40784b:	mov    edx,eax
  40784d:	mov    r8d,0x11
  407853:	mov    rcx,rbx
  407856:	call   0x430690
  40785b:	xor    eax,eax
  40785d:	add    rsp,0x20
  407861:	pop    rbx
  407862:	ret    
  407863:	nop    DWORD PTR [rax]
  407866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407870:	sub    rsp,0x28
  407874:	test   rcx,rcx
  407877:	je     0x4078d0
  407879:	movzx  eax,BYTE PTR [rcx]
  40787c:	cmp    al,0x2f
  40787e:	je     0x4078a5
  407880:	cmp    al,0x5c
  407882:	je     0x4078a5
  407884:	movzx  edx,al
  407887:	mov    rax,QWORD PTR [rip+0x742b2]        # 0x47bb40
  40788e:	mov    r8,QWORD PTR [rax]
  407891:	xor    eax,eax
  407893:	test   BYTE PTR [r8+rdx*2],0x2
  407898:	je     0x4078a0
  40789a:	cmp    BYTE PTR [rcx+0x1],0x3a
  40789e:	je     0x4078b0
  4078a0:	add    rsp,0x28
  4078a4:	ret    
  4078a5:	mov    eax,0x1
  4078aa:	add    rsp,0x28
  4078ae:	ret    
  4078af:	nop
  4078b0:	movzx  edx,BYTE PTR [rcx+0x2]
  4078b4:	cmp    dl,0x2f
  4078b7:	sete   cl
  4078ba:	cmp    dl,0x5c
  4078bd:	sete   al
  4078c0:	or     eax,ecx
  4078c2:	movzx  eax,al
  4078c5:	jmp    0x4078a0
  4078c7:	nop    WORD PTR [rax+rax*1+0x0]
  4078d0:	lea    r8,[rip+0x360ed]        # 0x43d9c4
  4078d7:	lea    rdx,[rip+0x36202]        # 0x43dae0
  4078de:	lea    rcx,[rip+0x35df6]        # 0x43d6db
  4078e5:	call   0x40fd20
  4078ea:	xor    eax,eax
  4078ec:	add    rsp,0x28
  4078f0:	ret    
  4078f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4078f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407900:	push   rbp
  407901:	push   rdi
  407902:	push   rsi
  407903:	push   rbx
  407904:	sub    rsp,0x28
  407908:	test   rcx,rcx
  40790b:	mov    rbx,rcx
  40790e:	je     0x407a30
  407914:	movzx  eax,BYTE PTR [rcx]
  407917:	cmp    al,0x2f
  407919:	je     0x407955
  40791b:	cmp    al,0x5c
  40791d:	je     0x407955
  40791f:	mov    rdx,QWORD PTR [rip+0x7421a]        # 0x47bb40
  407926:	mov    rdx,QWORD PTR [rdx]
  407929:	test   BYTE PTR [rdx+rax*2],0x2
  40792d:	mov    eax,0x0
  407932:	je     0x407983
  407934:	cmp    BYTE PTR [rbx+0x1],0x3a
  407938:	jne    0x407983
  40793a:	movzx  edx,BYTE PTR [rbx+0x2]
  40793e:	cmp    dl,0x2f
  407941:	je     0x407948
  407943:	cmp    dl,0x5c
  407946:	jne    0x407983
  407948:	lea    rax,[rbx+0x3]
  40794c:	add    rsp,0x28
  407950:	pop    rbx
  407951:	pop    rsi
  407952:	pop    rdi
  407953:	pop    rbp
  407954:	ret    
  407955:	movzx  edi,BYTE PTR [rbx+0x1]
  407959:	cmp    dil,0x2f
  40795d:	je     0x407990
  40795f:	cmp    dil,0x5c
  407963:	mov    eax,edi
  407965:	jne    0x407974
  407967:	jmp    0x407990
  407969:	nop    DWORD PTR [rax+0x0]
  407970:	movzx  eax,BYTE PTR [rbx+0x1]
  407974:	add    rbx,0x1
  407978:	cmp    al,0x2f
  40797a:	je     0x407970
  40797c:	cmp    al,0x5c
  40797e:	je     0x407970
  407980:	mov    rax,rbx
  407983:	add    rsp,0x28
  407987:	pop    rbx
  407988:	pop    rsi
  407989:	pop    rdi
  40798a:	pop    rbp
  40798b:	ret    
  40798c:	nop    DWORD PTR [rax+0x0]
  407990:	movzx  eax,BYTE PTR [rbx+0x2]
  407994:	test   al,al
  407996:	je     0x407a20
  40799c:	cmp    al,0x5c
  40799e:	je     0x407a20
  4079a4:	cmp    al,0x2f
  4079a6:	je     0x407a20
  4079a8:	lea    rbp,[rbx+0x2]
  4079ac:	mov    edx,0x5c
  4079b1:	mov    rcx,rbp
  4079b4:	call   0x4387a8
  4079b9:	mov    edx,0x2f
  4079be:	mov    rsi,rax
  4079c1:	mov    rcx,rbp
  4079c4:	call   0x4387a8
  4079c9:	test   rsi,rsi
  4079cc:	je     0x4079d8
  4079ce:	cmp    rax,rsi
  4079d1:	jae    0x4079e0
  4079d3:	test   rax,rax
  4079d6:	je     0x4079e0
  4079d8:	test   rax,rax
  4079db:	je     0x407a20
  4079dd:	mov    rsi,rax
  4079e0:	cmp    rbp,rsi
  4079e3:	jae    0x407a20
  4079e5:	movzx  edx,BYTE PTR [rsi+0x1]
  4079e9:	test   dl,dl
  4079eb:	je     0x407a20
  4079ed:	lea    rax,[rsi+0x1]
  4079f1:	jmp    0x407a03
  4079f3:	cmp    dl,0x5c
  4079f6:	je     0x407a08
  4079f8:	add    rax,0x1
  4079fc:	movzx  edx,BYTE PTR [rax]
  4079ff:	test   dl,dl
  407a01:	je     0x407983
  407a03:	cmp    dl,0x2f
  407a06:	jne    0x4079f3
  407a08:	cmp    dl,0x2f
  407a0b:	je     0x407a16
  407a0d:	cmp    dl,0x5c
  407a10:	jne    0x407983
  407a16:	add    rax,0x1
  407a1a:	jmp    0x407983
  407a1f:	nop
  407a20:	mov    eax,edi
  407a22:	jmp    0x407974
  407a27:	nop    WORD PTR [rax+rax*1+0x0]
  407a30:	lea    r8,[rip+0x35f8d]        # 0x43d9c4
  407a37:	lea    rdx,[rip+0x36082]        # 0x43dac0
  407a3e:	lea    rcx,[rip+0x35c96]        # 0x43d6db
  407a45:	call   0x40fd20
  407a4a:	xor    eax,eax
  407a4c:	add    rsp,0x28
  407a50:	pop    rbx
  407a51:	pop    rsi
  407a52:	pop    rdi
  407a53:	pop    rbp
  407a54:	ret    
  407a55:	nop
  407a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a60:	push   r12
  407a62:	push   rbp
  407a63:	push   rdi
  407a64:	push   rsi
  407a65:	push   rbx
  407a66:	sub    rsp,0x20
  407a6a:	test   rcx,rcx
  407a6d:	mov    ebp,edx
  407a6f:	je     0x407bc7
  407a75:	cmp    BYTE PTR [rcx],0x0
  407a78:	je     0x407bc7
  407a7e:	call   0x4182b0
  407a83:	mov    rcx,rax
  407a86:	mov    rsi,rax
  407a89:	call   0x407870
  407a8e:	test   eax,eax
  407a90:	mov    r9,rsi
  407a93:	jne    0x407bb7
  407a99:	movzx  r8d,BYTE PTR [r9]
  407a9d:	mov    r12,QWORD PTR [rip+0x7ee3c]        # 0x4868e0
  407aa4:	xor    ebx,ebx
  407aa6:	test   r8b,r8b
  407aa9:	je     0x407ad0
  407aab:	cmp    r8b,0x2f
  407aaf:	je     0x407b70
  407ab5:	cmp    r8b,0x5c
  407ab9:	je     0x407b70
  407abf:	movzx  r8d,BYTE PTR [r9+0x1]
  407ac4:	xor    ebx,ebx
  407ac6:	add    r9,0x1
  407aca:	test   r8b,r8b
  407acd:	jne    0x407aab
  407acf:	nop
  407ad0:	mov    edx,0x10
  407ad5:	mov    rcx,rsi
  407ad8:	call   0x406db0
  407add:	test   eax,eax
  407adf:	jne    0x407b30
  407ae1:	mov    edx,ebp
  407ae3:	mov    rcx,rsi
  407ae6:	call   0x417ac0
  407aeb:	cmp    eax,0xffffffff
  407aee:	mov    edi,eax
  407af0:	je     0x407b97
  407af6:	test   rbx,rbx
  407af9:	je     0x407b80
  407aff:	movzx  r8d,BYTE PTR [rbx+0x1]
  407b04:	lea    r9,[rbx+0x1]
  407b08:	mov    BYTE PTR [rbx],0x5c
  407b0b:	test   r8b,r8b
  407b0e:	jne    0x407b1f
  407b10:	jmp    0x407aa4
  407b12:	add    r9,0x1
  407b16:	movzx  r8d,BYTE PTR [r9]
  407b1a:	test   r8b,r8b
  407b1d:	je     0x407aa4
  407b1f:	cmp    r8b,0x2f
  407b23:	je     0x407b12
  407b25:	cmp    r8b,0x5c
  407b29:	je     0x407b12
  407b2b:	jmp    0x407aa4
  407b30:	mov    edx,0x4
  407b35:	mov    rcx,rsi
  407b38:	call   0x406db0
  407b3d:	test   eax,eax
  407b3f:	jne    0x407af6
  407b41:	mov    rcx,rsi
  407b44:	mov    edi,0xffffffff
  407b49:	call   0x40e6e0
  407b4e:	call   QWORD PTR [rip+0x7ed8c]        # 0x4868e0
  407b54:	mov    DWORD PTR [rax],0x14
  407b5a:	mov    eax,edi
  407b5c:	add    rsp,0x20
  407b60:	pop    rbx
  407b61:	pop    rsi
  407b62:	pop    rdi
  407b63:	pop    rbp
  407b64:	pop    r12
  407b66:	ret    
  407b67:	nop    WORD PTR [rax+rax*1+0x0]
  407b70:	mov    BYTE PTR [r9],0x0
  407b74:	mov    rbx,r9
  407b77:	jmp    0x407ad0
  407b7c:	nop    DWORD PTR [rax+0x0]
  407b80:	mov    rcx,rsi
  407b83:	xor    edi,edi
  407b85:	call   0x40e6e0
  407b8a:	mov    eax,edi
  407b8c:	add    rsp,0x20
  407b90:	pop    rbx
  407b91:	pop    rsi
  407b92:	pop    rdi
  407b93:	pop    rbp
  407b94:	pop    r12
  407b96:	ret    
  407b97:	call   r12
  407b9a:	cmp    DWORD PTR [rax],0x11
  407b9d:	je     0x407af6
  407ba3:	call   r12
  407ba6:	mov    ebx,DWORD PTR [rax]
  407ba8:	mov    rcx,rsi
  407bab:	call   0x40e6e0
  407bb0:	call   r12
  407bb3:	mov    DWORD PTR [rax],ebx
  407bb5:	jmp    0x407b8a
  407bb7:	mov    rcx,rsi
  407bba:	call   0x407900
  407bbf:	mov    r9,rax
  407bc2:	jmp    0x407a99
  407bc7:	mov    edi,0xffffffff
  407bcc:	call   QWORD PTR [rip+0x7ed0e]        # 0x4868e0
  407bd2:	mov    DWORD PTR [rax],0x16
  407bd8:	mov    eax,edi
  407bda:	add    rsp,0x20
  407bde:	pop    rbx
  407bdf:	pop    rsi
  407be0:	pop    rdi
  407be1:	pop    rbp
  407be2:	pop    r12
  407be4:	ret    
  407be5:	nop
  407be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bf0:	push   rsi
  407bf1:	push   rbx
  407bf2:	sub    rsp,0x28
  407bf6:	test   rcx,rcx
  407bf9:	mov    rbx,rcx
  407bfc:	je     0x407c70
  407bfe:	mov    edx,0x5c
  407c03:	call   0x438768
  407c08:	mov    edx,0x2f
  407c0d:	mov    rsi,rax
  407c10:	mov    rcx,rbx
  407c13:	call   0x438768
  407c18:	test   rsi,rsi
  407c1b:	je     0x407c27
  407c1d:	cmp    rax,rsi
  407c20:	jbe    0x407c2f
  407c22:	test   rax,rax
  407c25:	je     0x407c2f
  407c27:	test   rax,rax
  407c2a:	je     0x407c40
  407c2c:	mov    rsi,rax
  407c2f:	lea    rax,[rsi+0x1]
  407c33:	add    rsp,0x28
  407c37:	pop    rbx
  407c38:	pop    rsi
  407c39:	ret    
  407c3a:	nop    WORD PTR [rax+rax*1+0x0]
  407c40:	mov    rax,QWORD PTR [rip+0x73ef9]        # 0x47bb40
  407c47:	movzx  ecx,BYTE PTR [rbx]
  407c4a:	mov    rdx,QWORD PTR [rax]
  407c4d:	mov    rax,rbx
  407c50:	test   BYTE PTR [rdx+rcx*2],0x2
  407c54:	je     0x407c33
  407c56:	cmp    BYTE PTR [rbx+0x1],0x3a
  407c5a:	lea    rdx,[rbx+0x2]
  407c5e:	cmove  rax,rdx
  407c62:	add    rsp,0x28
  407c66:	pop    rbx
  407c67:	pop    rsi
  407c68:	ret    
  407c69:	nop    DWORD PTR [rax+0x0]
  407c70:	lea    r8,[rip+0x35d4d]        # 0x43d9c4
  407c77:	lea    rdx,[rip+0x35e36]        # 0x43dab4
  407c7e:	lea    rcx,[rip+0x35a56]        # 0x43d6db
  407c85:	call   0x40fd20
  407c8a:	xor    eax,eax
  407c8c:	add    rsp,0x28
  407c90:	pop    rbx
  407c91:	pop    rsi
  407c92:	ret    
  407c93:	nop    DWORD PTR [rax]
  407c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ca0:	push   rdi
  407ca1:	push   rsi
  407ca2:	push   rbx
  407ca3:	sub    rsp,0x20
  407ca7:	test   rcx,rcx
  407caa:	mov    rbx,rcx
  407cad:	je     0x407e00
  407cb3:	movzx  esi,BYTE PTR [rcx]
  407cb6:	test   sil,sil
  407cb9:	je     0x407da3
  407cbf:	mov    rcx,rbx
  407cc2:	call   0x438788
  407cc7:	lea    rdx,[rax-0x1]
  407ccb:	test   rdx,rdx
  407cce:	mov    r9,rdx
  407cd1:	js     0x407d81
  407cd7:	movzx  eax,BYTE PTR [rbx+rax*1-0x1]
  407cdc:	cmp    al,0x2f
  407cde:	jne    0x407cf7
  407ce0:	sub    r9,0x1
  407ce4:	cmp    r9,0xffffffffffffffff
  407ce8:	je     0x407df0
  407cee:	movzx  eax,BYTE PTR [rbx+r9*1]
  407cf3:	cmp    al,0x2f
  407cf5:	je     0x407ce0
  407cf7:	cmp    al,0x5c
  407cf9:	je     0x407ce0
  407cfb:	cmp    r9,0x1
  407cff:	mov    r10,r9
  407d02:	je     0x407dc0
  407d08:	movzx  eax,BYTE PTR [rbx+r10*1]
  407d0d:	cmp    al,0x2f
  407d0f:	je     0x407e35
  407d15:	cmp    al,0x5c
  407d17:	je     0x407e35
  407d1d:	mov    rax,r9
  407d20:	jmp    0x407d33
  407d22:	movzx  edx,BYTE PTR [rbx+rax*1]
  407d26:	mov    r10,rax
  407d29:	cmp    dl,0x2f
  407d2c:	je     0x407d93
  407d2e:	cmp    dl,0x5c
  407d31:	je     0x407d93
  407d33:	sub    rax,0x1
  407d37:	cmp    rax,0xffffffffffffffff
  407d3b:	jne    0x407d22
  407d3d:	mov    rax,QWORD PTR [rip+0x73dfc]        # 0x47bb40
  407d44:	mov    rax,QWORD PTR [rax]
  407d47:	test   BYTE PTR [rax+rsi*2],0x2
  407d4b:	je     0x407d57
  407d4d:	cmp    BYTE PTR [rbx+0x1],0x3a
  407d51:	je     0x407e24
  407d57:	lea    rdi,[r9+0x1]
  407d5b:	lea    rcx,[r9+0x2]
  407d5f:	xor    esi,esi
  407d61:	call   0x40e5c0
  407d66:	lea    rdx,[rbx+rsi*1]
  407d6a:	mov    r8,rdi
  407d6d:	mov    rcx,rax
  407d70:	call   0x4387f0
  407d75:	mov    BYTE PTR [rax+rdi*1],0x0
  407d79:	add    rsp,0x20
  407d7d:	pop    rbx
  407d7e:	pop    rsi
  407d7f:	pop    rdi
  407d80:	ret    
  407d81:	cmp    rdx,0xffffffffffffffff
  407d85:	je     0x407df0
  407d87:	mov    rsi,rax
  407d8a:	mov    ecx,0x1
  407d8f:	xor    edi,edi
  407d91:	jmp    0x407d61
  407d93:	mov    rdi,r9
  407d96:	sub    rdi,rax
  407d99:	lea    rcx,[rdi+0x1]
  407d9d:	lea    rsi,[r10+0x1]
  407da1:	jmp    0x407d61
  407da3:	lea    rcx,[rip+0x35c2c]        # 0x43d9d6
  407daa:	add    rsp,0x20
  407dae:	pop    rbx
  407daf:	pop    rsi
  407db0:	pop    rdi
  407db1:	jmp    0x4182b0
  407db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dc0:	mov    rdx,QWORD PTR [rip+0x73d79]        # 0x47bb40
  407dc7:	movzx  eax,sil
  407dcb:	mov    r10d,0x1
  407dd1:	mov    rdx,QWORD PTR [rdx]
  407dd4:	test   BYTE PTR [rdx+rax*2],0x2
  407dd8:	je     0x407d08
  407dde:	cmp    BYTE PTR [rbx+0x1],0x3a
  407de2:	jne    0x407d08
  407de8:	nop    DWORD PTR [rax+rax*1+0x0]
  407df0:	lea    rcx,[rip+0x35912]        # 0x43d709
  407df7:	jmp    0x407daa
  407df9:	nop    DWORD PTR [rax+0x0]
  407e00:	lea    r8,[rip+0x35bbd]        # 0x43d9c4
  407e07:	lea    rdx,[rip+0x35c92]        # 0x43daa0
  407e0e:	lea    rcx,[rip+0x358c6]        # 0x43d6db
  407e15:	call   0x40fd20
  407e1a:	xor    eax,eax
  407e1c:	add    rsp,0x20
  407e20:	pop    rbx
  407e21:	pop    rsi
  407e22:	pop    rdi
  407e23:	ret    
  407e24:	lea    rdi,[r9-0x1]
  407e28:	mov    rcx,r9
  407e2b:	mov    esi,0x2
  407e30:	jmp    0x407d61
  407e35:	mov    ecx,0x1
  407e3a:	xor    edi,edi
  407e3c:	jmp    0x407d9d
  407e41:	nop    DWORD PTR [rax+rax*1+0x0]
  407e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e50:	push   rsi
  407e51:	push   rbx
  407e52:	sub    rsp,0x38
  407e56:	test   rcx,rcx
  407e59:	mov    rsi,rcx
  407e5c:	je     0x407fb0
  407e62:	mov    edx,0x5c
  407e67:	call   0x438768
  407e6c:	mov    edx,0x2f
  407e71:	mov    rbx,rax
  407e74:	mov    rcx,rsi
  407e77:	call   0x438768
  407e7c:	test   rbx,rbx
  407e7f:	je     0x407e8b
  407e81:	cmp    rax,rbx
  407e84:	jbe    0x407e97
  407e86:	test   rax,rax
  407e89:	je     0x407e97
  407e8b:	test   rax,rax
  407e8e:	je     0x407f84
  407e94:	mov    rbx,rax
  407e97:	cmp    rsi,rbx
  407e9a:	jb     0x407ea9
  407e9c:	jmp    0x407eb4
  407e9e:	xchg   ax,ax
  407ea0:	sub    rbx,0x1
  407ea4:	cmp    rbx,rsi
  407ea7:	je     0x407eb4
  407ea9:	movzx  eax,BYTE PTR [rbx]
  407eac:	cmp    al,0x2f
  407eae:	je     0x407ea0
  407eb0:	cmp    al,0x5c
  407eb2:	je     0x407ea0
  407eb4:	lea    rax,[rsi+0x1]
  407eb8:	cmp    rbx,rax
  407ebb:	je     0x407fd3
  407ec1:	movzx  eax,BYTE PTR [rsi]
  407ec4:	cmp    al,0x2f
  407ec6:	je     0x407ef5
  407ec8:	cmp    al,0x5c
  407eca:	je     0x407ef5
  407ecc:	add    rbx,0x1
  407ed0:	sub    rbx,rsi
  407ed3:	lea    rcx,[rbx+0x1]
  407ed7:	call   0x40e5c0
  407edc:	mov    r8,rbx
  407edf:	mov    rdx,rsi
  407ee2:	mov    rcx,rax
  407ee5:	call   0x4387f0
  407eea:	mov    BYTE PTR [rax+rbx*1],0x0
  407eee:	add    rsp,0x38
  407ef2:	pop    rbx
  407ef3:	pop    rsi
  407ef4:	ret    
  407ef5:	movzx  eax,BYTE PTR [rsi+0x1]
  407ef9:	cmp    al,0x2f
  407efb:	je     0x407f01
  407efd:	cmp    al,0x5c
  407eff:	jne    0x407ecc
  407f01:	movzx  eax,BYTE PTR [rsi+0x2]
  407f05:	test   al,al
  407f07:	je     0x407ecc
  407f09:	cmp    al,0x2f
  407f0b:	je     0x407ecc
  407f0d:	cmp    al,0x5c
  407f0f:	je     0x407ecc
  407f11:	lea    rdx,[rsi+0x2]
  407f15:	cmp    rbx,rdx
  407f18:	jae    0x407f28
  407f1a:	jmp    0x407ecc
  407f1c:	nop    DWORD PTR [rax+0x0]
  407f20:	cmp    al,0x2f
  407f22:	je     0x407f33
  407f24:	cmp    al,0x5c
  407f26:	je     0x407f33
  407f28:	add    rdx,0x1
  407f2c:	movzx  eax,BYTE PTR [rdx]
  407f2f:	test   al,al
  407f31:	jne    0x407f20
  407f33:	lea    r8,[rbx+0x1]
  407f37:	cmp    r8,rdx
  407f3a:	je     0x408022
  407f40:	cmp    al,0x2f
  407f42:	je     0x407f4b
  407f44:	cmp    al,0x5c
  407f46:	mov    rbx,r8
  407f49:	jne    0x407ed0
  407f4b:	movzx  eax,BYTE PTR [rdx+0x1]
  407f4f:	lea    rcx,[rdx+0x1]
  407f53:	test   al,al
  407f55:	je     0x407f74
  407f57:	cmp    al,0x5c
  407f59:	je     0x407f74
  407f5b:	cmp    al,0x2f
  407f5d:	jne    0x407f69
  407f5f:	jmp    0x407f74
  407f61:	cmp    al,0x2f
  407f63:	je     0x407f74
  407f65:	cmp    al,0x5c
  407f67:	je     0x407f74
  407f69:	add    rcx,0x1
  407f6d:	movzx  eax,BYTE PTR [rcx]
  407f70:	test   al,al
  407f72:	jne    0x407f61
  407f74:	lea    rbx,[rcx+0x1]
  407f78:	cmp    rcx,r8
  407f7b:	cmovne rbx,r8
  407f7f:	jmp    0x407ed0
  407f84:	mov    rdx,QWORD PTR [rip+0x73bb5]        # 0x47bb40
  407f8b:	movzx  ecx,BYTE PTR [rsi]
  407f8e:	mov    rdx,QWORD PTR [rdx]
  407f91:	test   BYTE PTR [rdx+rcx*2],0x2
  407f95:	je     0x407f9d
  407f97:	cmp    BYTE PTR [rsi+0x1],0x3a
  407f9b:	je     0x408000
  407f9d:	lea    rcx,[rip+0x35a32]        # 0x43d9d6
  407fa4:	call   0x4182b0
  407fa9:	add    rsp,0x38
  407fad:	pop    rbx
  407fae:	pop    rsi
  407faf:	ret    
  407fb0:	lea    r8,[rip+0x35a0d]        # 0x43d9c4
  407fb7:	lea    rdx,[rip+0x35ac2]        # 0x43da80
  407fbe:	lea    rcx,[rip+0x35716]        # 0x43d6db
  407fc5:	call   0x40fd20
  407fca:	xor    eax,eax
  407fcc:	add    rsp,0x38
  407fd0:	pop    rbx
  407fd1:	pop    rsi
  407fd2:	ret    
  407fd3:	mov    rdx,QWORD PTR [rip+0x73b66]        # 0x47bb40
  407fda:	movzx  ecx,BYTE PTR [rsi]
  407fdd:	mov    rdx,QWORD PTR [rdx]
  407fe0:	mov    rax,rcx
  407fe3:	test   BYTE PTR [rdx+rcx*2],0x2
  407fe7:	je     0x407ec4
  407fed:	cmp    BYTE PTR [rsi+0x1],0x3a
  407ff1:	jne    0x407ec4
  407ff7:	lea    rbx,[rsi+0x3]
  407ffb:	jmp    0x407ed0
  408000:	mov    BYTE PTR [rsp+0x20],cl
  408004:	lea    rcx,[rsp+0x20]
  408009:	mov    BYTE PTR [rsp+0x21],0x3a
  40800e:	mov    BYTE PTR [rsp+0x22],0x2e
  408013:	mov    BYTE PTR [rsp+0x23],0x0
  408018:	call   0x4182b0
  40801d:	jmp    0x407eee
  408022:	mov    rcx,rsi
  408025:	call   0x438788
  40802a:	lea    ebx,[rax+0x1]
  40802d:	lea    rcx,[rbx+0x1]
  408031:	call   0x40e5c0
  408036:	mov    rdx,rsi
  408039:	mov    rcx,rax
  40803c:	call   0x438798
  408041:	mov    BYTE PTR [rax+rbx*1-0x1],0x5c
  408046:	mov    BYTE PTR [rax+rbx*1],0x0
  40804a:	jmp    0x407eee
  40804f:	nop
  408050:	push   rdi
  408051:	push   rsi
  408052:	push   rbx
  408053:	sub    rsp,0x50
  408057:	mov    ecx,0x2
  40805c:	mov    rdi,QWORD PTR [rip+0x7e63d]        # 0x4866a0
  408063:	lea    rdx,[rsp+0x40]
  408068:	call   rdi
  40806a:	movsxd rcx,eax
  40806d:	mov    edx,0x2
  408072:	mov    rbx,rcx
  408075:	call   0x40e7a0
  40807a:	mov    ecx,ebx
  40807c:	sub    ebx,0x1
  40807f:	mov    rsi,rax
  408082:	mov    rdx,rax
  408085:	call   rdi
  408087:	cmp    eax,ebx
  408089:	je     0x4080b0
  40808b:	mov    rcx,rsi
  40808e:	call   0x40e6e0
  408093:	lea    rcx,[rip+0x3566f]        # 0x43d709
  40809a:	call   0x4182b0
  40809f:	add    rsp,0x50
  4080a3:	pop    rbx
  4080a4:	pop    rsi
  4080a5:	pop    rdi
  4080a6:	ret    
  4080a7:	nop    WORD PTR [rax+rax*1+0x0]
  4080b0:	xor    r9d,r9d
  4080b3:	xor    r8d,r8d
  4080b6:	mov    edx,0xffffffff
  4080bb:	mov    rcx,rsi
  4080be:	mov    QWORD PTR [rsp+0x20],0x0
  4080c7:	call   0x4225c0
  4080cc:	mov    rcx,rsi
  4080cf:	mov    QWORD PTR [rsp+0x38],rax
  4080d4:	call   0x40e6e0
  4080d9:	mov    rax,QWORD PTR [rsp+0x38]
  4080de:	test   rax,rax
  4080e1:	je     0x408093
  4080e3:	add    rsp,0x50
  4080e7:	pop    rbx
  4080e8:	pop    rsi
  4080e9:	pop    rdi
  4080ea:	ret    
  4080eb:	nop
  4080ec:	nop
  4080ed:	nop
  4080ee:	nop
  4080ef:	nop
  4080f0:	push   rsi
  4080f1:	push   rbx
  4080f2:	sub    rsp,0x28
  4080f6:	mov    rax,rcx
  4080f9:	mov    rcx,QWORD PTR [rcx+0x18]
  4080fd:	movsxd rdx,edx
  408100:	mov    r10,QWORD PTR [rax+0x28]
  408104:	lea    r9,[rcx+rdx*8]
  408108:	mov    rsi,QWORD PTR [r10+rdx*8]
  40810c:	mov    r10,QWORD PTR [rax+0x20]
  408110:	mov    rcx,QWORD PTR [r9]
  408113:	mov    DWORD PTR [r10+rdx*4],0x1
  40811b:	mov    QWORD PTR [r9],0x0
  408122:	mov    r9,QWORD PTR [rax+0x28]
  408126:	mov    QWORD PTR [r9+rdx*8],0x0
  40812e:	sub    DWORD PTR [rax+0xc],0x1
  408132:	test   r8d,r8d
  408135:	je     0x408160
  408137:	mov    rbx,rax
  40813a:	mov    rax,QWORD PTR [rax+0x48]
  40813e:	test   rax,rax
  408141:	je     0x408145
  408143:	call   rax
  408145:	mov    rax,QWORD PTR [rbx+0x50]
  408149:	test   rax,rax
  40814c:	je     0x408160
  40814e:	mov    rcx,rsi
  408151:	add    rsp,0x28
  408155:	pop    rbx
  408156:	pop    rsi
  408157:	rex.W jmp rax
  40815a:	nop    WORD PTR [rax+rax*1+0x0]
  408160:	add    rsp,0x28
  408164:	pop    rbx
  408165:	pop    rsi
  408166:	ret    
  408167:	nop    WORD PTR [rax+rax*1+0x0]
  408170:	mov    eax,ecx
  408172:	ret    
  408173:	nop    DWORD PTR [rax]
  408176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408180:	push   rbx
  408181:	sub    rsp,0x20
  408185:	lea    r8,[rip+0x35a34]        # 0x43dbc0
  40818c:	test   rcx,rcx
  40818f:	je     0x4081a3
  408191:	mov    rax,QWORD PTR [rcx]
  408194:	lea    r8,[rip+0x35a35]        # 0x43dbd0
  40819b:	mov    ebx,DWORD PTR [rax+0x44]
  40819e:	cmp    DWORD PTR [rcx+0x20],ebx
  4081a1:	je     0x4081c0
  4081a3:	lea    rdx,[rip+0x35d66]        # 0x43df10
  4081aa:	lea    rcx,[rip+0x35a1a]        # 0x43dbcb
  4081b1:	add    rsp,0x20
  4081b5:	pop    rbx
  4081b6:	jmp    0x40fd20
  4081bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4081c0:	mov    r9d,DWORD PTR [rcx+0x18]
  4081c4:	test   r9d,r9d
  4081c7:	js     0x4081f0
  4081c9:	cmp    r9d,DWORD PTR [rax]
  4081cc:	jge    0x408200
  4081ce:	mov    rbx,rcx
  4081d1:	mov    r8d,edx
  4081d4:	mov    rcx,rax
  4081d7:	mov    edx,r9d
  4081da:	call   0x4080f0
  4081df:	mov    rax,QWORD PTR [rbx]
  4081e2:	add    DWORD PTR [rbx+0x20],0x1
  4081e6:	add    DWORD PTR [rax+0x44],0x1
  4081ea:	add    rsp,0x20
  4081ee:	pop    rbx
  4081ef:	ret    
  4081f0:	lea    r8,[rip+0x35a00]        # 0x43dbf7
  4081f7:	jmp    0x4081a3
  4081f9:	nop    DWORD PTR [rax+0x0]
  408200:	lea    r8,[rip+0x35a09]        # 0x43dc10
  408207:	jmp    0x4081a3
  408209:	nop    DWORD PTR [rax+0x0]
  408210:	push   r15
  408212:	push   r14
  408214:	push   r13
  408216:	push   r12
  408218:	push   rbp
  408219:	push   rdi
  40821a:	push   rsi
  40821b:	push   rbx
  40821c:	sub    rsp,0x28
  408220:	mov    edx,DWORD PTR [rcx+0xc]
  408223:	mov    edi,DWORD PTR [rcx]
  408225:	mov    rsi,rcx
  408228:	add    edx,edx
  40822a:	je     0x40837a
  408230:	xor    eax,eax
  408232:	add    eax,0x1
  408235:	sar    edx,1
  408237:	jne    0x408232
  408239:	cmp    eax,0x3
  40823c:	mov    edx,0x3
  408241:	cmovl  eax,edx
  408244:	mov    dl,0x1
  408246:	mov    ecx,eax
  408248:	shl    edx,cl
  40824a:	movsxd rcx,edx
  40824d:	mov    DWORD PTR [rsi],edx
  40824f:	lea    rdx,[rip+0x35d6a]        # 0x43dfc0
  408256:	movsxd r8,eax
  408259:	mov    edx,DWORD PTR [rdx+r8*4]
  40825d:	xor    r8d,r8d
  408260:	mov    DWORD PTR [rsi+0x4],edx
  408263:	xor    edx,edx
  408265:	add    edx,0x1
  408268:	lea    r8d,[r8+r8*1+0x1]
  40826d:	cmp    edx,eax
  40826f:	jne    0x408265
  408271:	mov    DWORD PTR [rsi+0x8],r8d
  408275:	mov    edx,0x8
  40827a:	call   0x40e800
  40827f:	mov    r12,rax
  408282:	mov    rax,QWORD PTR [rsi+0x28]
  408286:	cmp    QWORD PTR [rsi+0x18],rax
  40828a:	movsxd rcx,DWORD PTR [rsi]
  40828d:	je     0x408372
  408293:	mov    edx,0x8
  408298:	call   0x40e800
  40829d:	movsxd rcx,DWORD PTR [rsi]
  4082a0:	mov    r13,rax
  4082a3:	mov    edx,0x4
  4082a8:	call   0x40e800
  4082ad:	test   edi,edi
  4082af:	mov    rbx,rax
  4082b2:	jle    0x40838e
  4082b8:	mov    rbp,QWORD PTR [rsi+0x20]
  4082bc:	mov    r14,QWORD PTR [rsi+0x18]
  4082c0:	xor    r10d,r10d
  4082c3:	mov    rcx,QWORD PTR [rsi+0x28]
  4082c7:	nop    WORD PTR [rax+rax*1+0x0]
  4082d0:	mov    r11d,DWORD PTR [rbp+r10*4+0x0]
  4082d5:	cmp    r11d,0x1
  4082d9:	jbe    0x40832a
  4082db:	xor    edx,edx
  4082dd:	mov    eax,r11d
  4082e0:	div    DWORD PTR [rsi+0x4]
  4082e3:	mov    r9d,edx
  4082e6:	lea    rax,[rbx+r9*4]
  4082ea:	mov    r8d,DWORD PTR [rax]
  4082ed:	test   r8d,r8d
  4082f0:	je     0x408316
  4082f2:	mov    r15d,DWORD PTR [rsi+0x8]
  4082f6:	xor    r8d,r8d
  4082f9:	nop    DWORD PTR [rax+0x0]
  408300:	add    r8d,0x1
  408304:	add    edx,r8d
  408307:	and    edx,r15d
  40830a:	mov    r9d,edx
  40830d:	lea    rax,[rbx+r9*4]
  408311:	cmp    DWORD PTR [rax],0x0
  408314:	jne    0x408300
  408316:	mov    DWORD PTR [rax],r11d
  408319:	mov    rax,QWORD PTR [r14+r10*8]
  40831d:	mov    QWORD PTR [r12+r9*8],rax
  408321:	mov    rax,QWORD PTR [rcx+r10*8]
  408325:	mov    QWORD PTR [r13+r9*8+0x0],rax
  40832a:	add    r10,0x1
  40832e:	cmp    edi,r10d
  408331:	jg     0x4082d0
  408333:	cmp    r14,rcx
  408336:	je     0x408341
  408338:	call   0x40e6e0
  40833d:	mov    rcx,QWORD PTR [rsi+0x18]
  408341:	call   0x40e6e0
  408346:	mov    rcx,QWORD PTR [rsi+0x20]
  40834a:	call   0x40e6e0
  40834f:	mov    eax,DWORD PTR [rsi+0xc]
  408352:	mov    QWORD PTR [rsi+0x18],r12
  408356:	mov    QWORD PTR [rsi+0x28],r13
  40835a:	mov    QWORD PTR [rsi+0x20],rbx
  40835e:	mov    DWORD PTR [rsi+0x10],eax
  408361:	add    rsp,0x28
  408365:	pop    rbx
  408366:	pop    rsi
  408367:	pop    rdi
  408368:	pop    rbp
  408369:	pop    r12
  40836b:	pop    r13
  40836d:	pop    r14
  40836f:	pop    r15
  408371:	ret    
  408372:	mov    r13,r12
  408375:	jmp    0x4082a3
  40837a:	mov    edx,0x8
  40837f:	mov    eax,0x3
  408384:	mov    ecx,0x8
  408389:	jmp    0x40824d
  40838e:	mov    r14,QWORD PTR [rsi+0x18]
  408392:	mov    rcx,QWORD PTR [rsi+0x28]
  408396:	jmp    0x408333
  408398:	nop    DWORD PTR [rax+rax*1+0x0]
  4083a0:	push   r15
  4083a2:	push   r14
  4083a4:	push   r13
  4083a6:	push   r12
  4083a8:	push   rbp
  4083a9:	push   rdi
  4083aa:	push   rsi
  4083ab:	push   rbx
  4083ac:	sub    rsp,0x28
  4083b0:	mov    eax,DWORD PTR [rcx]
  4083b2:	mov    r12d,DWORD PTR [rcx+0x44]
  4083b6:	mov    rbx,rcx
  4083b9:	mov    r13,rdx
  4083bc:	mov    r14,r8
  4083bf:	mov    r15d,r9d
  4083c2:	test   eax,eax
  4083c4:	jle    0x408485
  4083ca:	xor    esi,esi
  4083cc:	xor    edi,edi
  4083ce:	xor    ebp,ebp
  4083d0:	mov    rax,QWORD PTR [rbx+0x18]
  4083d4:	mov    rcx,QWORD PTR [rax+rsi*2]
  4083d8:	mov    rax,QWORD PTR [rbx+0x28]
  4083dc:	mov    rdx,QWORD PTR [rax+rsi*2]
  4083e0:	mov    rax,QWORD PTR [rbx+0x20]
  4083e4:	cmp    DWORD PTR [rax+rsi*1],0x1
  4083e8:	jbe    0x4083f4
  4083ea:	mov    r8,r14
  4083ed:	call   r13
  4083f0:	test   eax,eax
  4083f2:	jne    0x408470
  4083f4:	cmp    DWORD PTR [rbx+0x44],r12d
  4083f8:	je     0x408430
  4083fa:	lea    r8,[rip+0x35837]        # 0x43dc38
  408401:	lea    rdx,[rip+0x35958]        # 0x43dd60
  408408:	lea    rcx,[rip+0x357bc]        # 0x43dbcb
  40840f:	call   0x40fd20
  408414:	xor    eax,eax
  408416:	add    rsp,0x28
  40841a:	pop    rbx
  40841b:	pop    rsi
  40841c:	pop    rdi
  40841d:	pop    rbp
  40841e:	pop    r12
  408420:	pop    r13
  408422:	pop    r14
  408424:	pop    r15
  408426:	ret    
  408427:	nop    WORD PTR [rax+rax*1+0x0]
  408430:	mov    eax,DWORD PTR [rbx]
  408432:	add    edi,0x1
  408435:	add    rsi,0x4
  408439:	cmp    eax,edi
  40843b:	jg     0x4083d0
  40843d:	mov    edi,DWORD PTR [rbx+0xc]
  408440:	mov    ecx,DWORD PTR [rbx+0x10]
  408443:	lea    edx,[rdi*4+0x0]
  40844a:	cmp    edx,eax
  40844c:	jge    0x40848a
  40844e:	cmp    eax,0x8
  408451:	jle    0x40848a
  408453:	mov    rcx,rbx
  408456:	call   0x408210
  40845b:	test   ebp,ebp
  40845d:	je     0x408463
  40845f:	add    DWORD PTR [rbx+0x44],0x1
  408463:	mov    eax,ebp
  408465:	jmp    0x408416
  408467:	nop    WORD PTR [rax+rax*1+0x0]
  408470:	mov    r8d,r15d
  408473:	mov    edx,edi
  408475:	mov    rcx,rbx
  408478:	call   0x4080f0
  40847d:	add    ebp,0x1
  408480:	jmp    0x4083f4
  408485:	mov    ecx,DWORD PTR [rcx+0x10]
  408488:	xor    ebp,ebp
  40848a:	lea    edx,[rcx+0xf]
  40848d:	test   ecx,ecx
  40848f:	cmovns edx,ecx
  408492:	sar    edx,0x4
  408495:	add    edx,ecx
  408497:	cmp    edx,eax
  408499:	jge    0x408453
  40849b:	jmp    0x40845b
  40849d:	nop    DWORD PTR [rax]
  4084a0:	push   rbp
  4084a1:	push   rdi
  4084a2:	push   rsi
  4084a3:	push   rbx
  4084a4:	sub    rsp,0x28
  4084a8:	test   edx,edx
  4084aa:	mov    rbx,rcx
  4084ad:	mov    DWORD PTR [rcx+0xc],0x0
  4084b4:	mov    DWORD PTR [rcx+0x10],0x0
  4084bb:	je     0x408570
  4084c1:	cmp    QWORD PTR [rcx+0x48],0x0
  4084c6:	je     0x408560
  4084cc:	mov    eax,DWORD PTR [rbx]
  4084ce:	xor    esi,esi
  4084d0:	xor    edi,edi
  4084d2:	test   eax,eax
  4084d4:	jg     0x408532
  4084d6:	jmp    0x408551
  4084d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084e0:	mov    rdx,QWORD PTR [rbx+0x18]
  4084e4:	mov    rcx,QWORD PTR [rdx+rsi*2]
  4084e8:	mov    rdx,QWORD PTR [rbx+0x28]
  4084ec:	mov    rbp,QWORD PTR [rdx+rsi*2]
  4084f0:	mov    DWORD PTR [rax],0x0
  4084f6:	mov    rax,QWORD PTR [rbx+0x18]
  4084fa:	mov    QWORD PTR [rax+rsi*2],0x0
  408502:	mov    rax,QWORD PTR [rbx+0x28]
  408506:	mov    QWORD PTR [rax+rsi*2],0x0
  40850e:	mov    rax,QWORD PTR [rbx+0x48]
  408512:	test   rax,rax
  408515:	je     0x408519
  408517:	call   rax
  408519:	mov    rax,QWORD PTR [rbx+0x50]
  40851d:	test   rax,rax
  408520:	je     0x408527
  408522:	mov    rcx,rbp
  408525:	call   rax
  408527:	add    edi,0x1
  40852a:	add    rsi,0x4
  40852e:	cmp    DWORD PTR [rbx],edi
  408530:	jle    0x408551
  408532:	mov    rax,rsi
  408535:	add    rax,QWORD PTR [rbx+0x20]
  408539:	cmp    DWORD PTR [rax],0x1
  40853c:	ja     0x4084e0
  40853e:	jne    0x408527
  408540:	mov    DWORD PTR [rax],0x0
  408546:	add    edi,0x1
  408549:	add    rsi,0x4
  40854d:	cmp    DWORD PTR [rbx],edi
  40854f:	jg     0x408532
  408551:	add    rsp,0x28
  408555:	pop    rbx
  408556:	pop    rsi
  408557:	pop    rdi
  408558:	pop    rbp
  408559:	ret    
  40855a:	nop    WORD PTR [rax+rax*1+0x0]
  408560:	cmp    QWORD PTR [rcx+0x50],0x0
  408565:	jne    0x4084cc
  40856b:	nop    DWORD PTR [rax+rax*1+0x0]
  408570:	movsxd r8,DWORD PTR [rbx]
  408573:	mov    rcx,QWORD PTR [rbx+0x20]
  408577:	xor    edx,edx
  408579:	shl    r8,0x2
  40857d:	call   0x4387e0
  408582:	movsxd r8,DWORD PTR [rbx]
  408585:	mov    rcx,QWORD PTR [rbx+0x18]
  408589:	xor    edx,edx
  40858b:	shl    r8,0x3
  40858f:	call   0x4387e0
  408594:	movsxd r8,DWORD PTR [rbx]
  408597:	mov    rcx,QWORD PTR [rbx+0x28]
  40859b:	xor    edx,edx
  40859d:	shl    r8,0x3
  4085a1:	add    rsp,0x28
  4085a5:	pop    rbx
  4085a6:	pop    rsi
  4085a7:	pop    rdi
  4085a8:	pop    rbp
  4085a9:	jmp    0x4387e0
  4085ae:	xchg   ax,ax
  4085b0:	push   r15
  4085b2:	push   r14
  4085b4:	push   r13
  4085b6:	push   r12
  4085b8:	push   rbp
  4085b9:	push   rdi
  4085ba:	push   rsi
  4085bb:	push   rbx
  4085bc:	sub    rsp,0x28
  4085c0:	test   rcx,rcx
  4085c3:	mov    rdi,rcx
  4085c6:	mov    QWORD PTR [rsp+0x78],rdx
  4085cb:	mov    DWORD PTR [rsp+0x80],r8d
  4085d3:	je     0x4086f7
  4085d9:	mov    rcx,QWORD PTR [rsp+0x78]
  4085de:	call   QWORD PTR [rdi+0x30]
  4085e1:	cmp    eax,0x1
  4085e4:	mov    r14d,eax
  4085e7:	mov    eax,0x2
  4085ec:	cmovbe r14d,eax
  4085f0:	xor    edx,edx
  4085f2:	mov    eax,r14d
  4085f5:	div    DWORD PTR [rdi+0x4]
  4085f8:	mov    rax,QWORD PTR [rdi+0x20]
  4085fc:	mov    edx,edx
  4085fe:	mov    r9d,DWORD PTR [rax+rdx*4]
  408602:	mov    rbx,rdx
  408605:	test   r9d,r9d
  408608:	je     0x408688
  40860a:	xor    r15d,r15d
  40860d:	xor    esi,esi
  40860f:	xor    r13d,r13d
  408612:	mov    ebp,0x1
  408617:	jmp    0x408646
  408619:	nop    DWORD PTR [rax+0x0]
  408620:	test   r13b,0x1
  408624:	jne    0x408632
  408626:	cmp    r9d,0x1
  40862a:	cmove  r15d,ebx
  40862e:	cmove  r13d,ebp
  408632:	add    esi,0x1
  408635:	add    ebx,esi
  408637:	and    ebx,DWORD PTR [rdi+0x8]
  40863a:	mov    r9d,ebx
  40863d:	mov    r9d,DWORD PTR [rax+r9*4]
  408641:	test   r9d,r9d
  408644:	je     0x408680
  408646:	cmp    r14d,r9d
  408649:	jne    0x408620
  40864b:	mov    r9,QWORD PTR [rdi+0x38]
  40864f:	mov    rdx,QWORD PTR [rdi+0x18]
  408653:	mov    r12d,ebx
  408656:	test   r9,r9
  408659:	mov    rcx,QWORD PTR [rdx+r12*8]
  40865d:	je     0x408675
  40865f:	mov    rdx,QWORD PTR [rsp+0x78]
  408664:	call   r9
  408667:	test   eax,eax
  408669:	mov    rax,QWORD PTR [rdi+0x20]
  40866d:	je     0x408632
  40866f:	mov    eax,DWORD PTR [rax+r12*4]
  408673:	jmp    0x4086a6
  408675:	cmp    QWORD PTR [rsp+0x78],rcx
  40867a:	jne    0x408632
  40867c:	jmp    0x40866f
  40867e:	xchg   ax,ax
  408680:	test   r13d,r13d
  408683:	mov    ebx,r15d
  408686:	jne    0x4086a0
  408688:	xor    eax,eax
  40868a:	add    rsp,0x28
  40868e:	pop    rbx
  40868f:	pop    rsi
  408690:	pop    rdi
  408691:	pop    rbp
  408692:	pop    r12
  408694:	pop    r13
  408696:	pop    r14
  408698:	pop    r15
  40869a:	ret    
  40869b:	nop    DWORD PTR [rax+rax*1+0x0]
  4086a0:	mov    edx,r15d
  4086a3:	mov    eax,DWORD PTR [rax+rdx*4]
  4086a6:	cmp    eax,0x1
  4086a9:	jbe    0x408688
  4086ab:	mov    r8d,DWORD PTR [rsp+0x80]
  4086b3:	mov    edx,ebx
  4086b5:	mov    rcx,rdi
  4086b8:	call   0x4080f0
  4086bd:	mov    eax,DWORD PTR [rdi+0xc]
  4086c0:	mov    ecx,DWORD PTR [rdi]
  4086c2:	mov    edx,DWORD PTR [rdi+0x10]
  4086c5:	shl    eax,0x2
  4086c8:	cmp    ecx,eax
  4086ca:	jle    0x4086e4
  4086cc:	cmp    ecx,0x8
  4086cf:	jle    0x4086e4
  4086d1:	mov    rcx,rdi
  4086d4:	call   0x408210
  4086d9:	add    DWORD PTR [rdi+0x44],0x1
  4086dd:	mov    eax,0x1
  4086e2:	jmp    0x40868a
  4086e4:	lea    eax,[rdx+0xf]
  4086e7:	test   edx,edx
  4086e9:	cmovns eax,edx
  4086ec:	sar    eax,0x4
  4086ef:	add    eax,edx
  4086f1:	cmp    ecx,eax
  4086f3:	jle    0x4086d1
  4086f5:	jmp    0x4086d9
  4086f7:	lea    r8,[rip+0x35559]        # 0x43dc57
  4086fe:	lea    rdx,[rip+0x356eb]        # 0x43ddf0
  408705:	lea    rcx,[rip+0x354bf]        # 0x43dbcb
  40870c:	call   0x40fd20
  408711:	jmp    0x408688
  408716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408720:	push   r13
  408722:	push   r12
  408724:	push   rbp
  408725:	push   rdi
  408726:	push   rsi
  408727:	push   rbx
  408728:	sub    rsp,0x38
  40872c:	mov    rsi,QWORD PTR [rsp+0x90]
  408734:	mov    ebp,DWORD PTR [rsp+0x98]
  40873b:	mov    rbx,rcx
  40873e:	mov    r12d,edx
  408741:	mov    edi,DWORD PTR [rsp+0xa0]
  408748:	mov    rcx,QWORD PTR [rcx+0x18]
  40874c:	mov    rax,QWORD PTR [rbx+0x28]
  408750:	cmp    r9,rsi
  408753:	je     0x408784
  408755:	cmp    rcx,rax
  408758:	jne    0x408784
  40875a:	mov    eax,DWORD PTR [rbx]
  40875c:	mov    QWORD PTR [rsp+0x28],r9
  408761:	mov    DWORD PTR [rsp+0x24],r8d
  408766:	lea    edx,[rax*8+0x0]
  40876d:	call   0x418300
  408772:	mov    rcx,QWORD PTR [rbx+0x18]
  408776:	mov    r8d,DWORD PTR [rsp+0x24]
  40877b:	mov    r9,QWORD PTR [rsp+0x28]
  408780:	mov    QWORD PTR [rbx+0x28],rax
  408784:	mov    r10,QWORD PTR [rbx+0x20]
  408788:	mov    edx,r12d
  40878b:	mov    r12d,DWORD PTR [r10+rdx*4]
  40878f:	lea    r10,[rdx*8+0x0]
  408797:	lea    r11,[rcx+r10*1]
  40879b:	add    r10,rax
  40879e:	cmp    r12d,0x1
  4087a2:	mov    r13,QWORD PTR [r10]
  4087a5:	mov    rcx,QWORD PTR [r11]
  4087a8:	jbe    0x4087f5
  4087aa:	test   ebp,ebp
  4087ac:	jne    0x4087e0
  4087ae:	test   edi,edi
  4087b0:	mov    QWORD PTR [r10],rsi
  4087b3:	mov    rax,QWORD PTR [rbx+0x48]
  4087b7:	jne    0x4087c3
  4087b9:	mov    rcx,r9
  4087bc:	test   rax,rax
  4087bf:	je     0x4087c3
  4087c1:	call   rax
  4087c3:	mov    rax,QWORD PTR [rbx+0x50]
  4087c7:	test   rax,rax
  4087ca:	je     0x408839
  4087cc:	mov    rcx,r13
  4087cf:	add    rsp,0x38
  4087d3:	pop    rbx
  4087d4:	pop    rsi
  4087d5:	pop    rdi
  4087d6:	pop    rbp
  4087d7:	pop    r12
  4087d9:	pop    r13
  4087db:	rex.W jmp rax
  4087de:	xchg   ax,ax
  4087e0:	mov    QWORD PTR [r11],r9
  4087e3:	mov    rax,QWORD PTR [rbx+0x28]
  4087e7:	test   edi,edi
  4087e9:	mov    QWORD PTR [rax+rdx*8],rsi
  4087ed:	mov    rax,QWORD PTR [rbx+0x48]
  4087f1:	je     0x4087bc
  4087f3:	jmp    0x4087c3
  4087f5:	mov    QWORD PTR [r11],r9
  4087f8:	mov    rax,QWORD PTR [rbx+0x28]
  4087fc:	mov    QWORD PTR [rax+rdx*8],rsi
  408800:	mov    rax,QWORD PTR [rbx+0x20]
  408804:	mov    DWORD PTR [rax+rdx*4],r8d
  408808:	mov    eax,DWORD PTR [rbx+0xc]
  40880b:	add    eax,0x1
  40880e:	test   r12d,r12d
  408811:	mov    DWORD PTR [rbx+0xc],eax
  408814:	jne    0x408835
  408816:	mov    edi,DWORD PTR [rbx+0x10]
  408819:	mov    ecx,DWORD PTR [rbx]
  40881b:	shl    eax,0x2
  40881e:	lea    edx,[rdi+0x1]
  408821:	cmp    ecx,eax
  408823:	mov    DWORD PTR [rbx+0x10],edx
  408826:	jle    0x408850
  408828:	cmp    ecx,0x8
  40882b:	jle    0x408850
  40882d:	mov    rcx,rbx
  408830:	call   0x408210
  408835:	add    DWORD PTR [rbx+0x44],0x1
  408839:	add    rsp,0x38
  40883d:	pop    rbx
  40883e:	pop    rsi
  40883f:	pop    rdi
  408840:	pop    rbp
  408841:	pop    r12
  408843:	pop    r13
  408845:	ret    
  408846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408850:	lea    eax,[rdx+0xf]
  408853:	test   edx,edx
  408855:	cmovns eax,edx
  408858:	sar    eax,0x4
  40885b:	add    edx,eax
  40885d:	cmp    ecx,edx
  40885f:	jle    0x40882d
  408861:	jmp    0x408835
  408863:	nop    DWORD PTR [rax]
  408866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408870:	push   r15
  408872:	push   r14
  408874:	push   r13
  408876:	push   r12
  408878:	push   rbp
  408879:	push   rdi
  40887a:	push   rsi
  40887b:	push   rbx
  40887c:	sub    rsp,0x58
  408880:	test   rcx,rcx
  408883:	je     0x40897c
  408889:	mov    rdi,rcx
  40888c:	mov    rbp,rdx
  40888f:	mov    rcx,rdx
  408892:	mov    DWORD PTR [rsp+0x4c],r9d
  408897:	mov    QWORD PTR [rsp+0x40],r8
  40889c:	call   QWORD PTR [rdi+0x30]
  40889f:	cmp    eax,0x1
  4088a2:	mov    r12d,eax
  4088a5:	mov    eax,0x2
  4088aa:	cmovbe r12d,eax
  4088ae:	xor    edx,edx
  4088b0:	mov    eax,r12d
  4088b3:	div    DWORD PTR [rdi+0x4]
  4088b6:	mov    rax,QWORD PTR [rdi+0x20]
  4088ba:	mov    edx,edx
  4088bc:	mov    r10d,DWORD PTR [rax+rdx*4]
  4088c0:	mov    rbx,rdx
  4088c3:	test   r10d,r10d
  4088c6:	je     0x408935
  4088c8:	xor    r15d,r15d
  4088cb:	xor    esi,esi
  4088cd:	xor    r14d,r14d
  4088d0:	mov    r13d,0x1
  4088d6:	jmp    0x408906
  4088d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088e0:	test   r14b,0x1
  4088e4:	jne    0x4088f2
  4088e6:	cmp    r10d,0x1
  4088ea:	cmove  r15d,ebx
  4088ee:	cmove  r14d,r13d
  4088f2:	add    esi,0x1
  4088f5:	add    ebx,esi
  4088f7:	and    ebx,DWORD PTR [rdi+0x8]
  4088fa:	mov    r10d,ebx
  4088fd:	mov    r10d,DWORD PTR [rax+r10*4]
  408901:	test   r10d,r10d
  408904:	je     0x408975
  408906:	cmp    r12d,r10d
  408909:	jne    0x4088e0
  40890b:	mov    r10,QWORD PTR [rdi+0x38]
  40890f:	mov    rcx,QWORD PTR [rdi+0x18]
  408913:	mov    edx,ebx
  408915:	test   r10,r10
  408918:	mov    rcx,QWORD PTR [rcx+rdx*8]
  40891c:	je     0x408930
  40891e:	mov    rdx,rbp
  408921:	call   r10
  408924:	test   eax,eax
  408926:	jne    0x408935
  408928:	mov    rax,QWORD PTR [rdi+0x20]
  40892c:	jmp    0x4088f2
  40892e:	xchg   ax,ax
  408930:	cmp    rbp,rcx
  408933:	jne    0x4088f2
  408935:	mov    r15d,ebx
  408938:	mov    eax,DWORD PTR [rsp+0x4c]
  40893c:	mov    DWORD PTR [rsp+0x30],0x0
  408944:	mov    r9,rbp
  408947:	mov    r8d,r12d
  40894a:	mov    edx,r15d
  40894d:	mov    rcx,rdi
  408950:	mov    DWORD PTR [rsp+0x28],eax
  408954:	mov    rax,QWORD PTR [rsp+0x40]
  408959:	mov    QWORD PTR [rsp+0x20],rax
  40895e:	call   0x408720
  408963:	nop
  408964:	add    rsp,0x58
  408968:	pop    rbx
  408969:	pop    rsi
  40896a:	pop    rdi
  40896b:	pop    rbp
  40896c:	pop    r12
  40896e:	pop    r13
  408970:	pop    r14
  408972:	pop    r15
  408974:	ret    
  408975:	test   r14d,r14d
  408978:	je     0x408935
  40897a:	jmp    0x408938
  40897c:	lea    r8,[rip+0x352d4]        # 0x43dc57
  408983:	lea    rdx,[rip+0x354a6]        # 0x43de30
  40898a:	lea    rcx,[rip+0x3523a]        # 0x43dbcb
  408991:	add    rsp,0x58
  408995:	pop    rbx
  408996:	pop    rsi
  408997:	pop    rdi
  408998:	pop    rbp
  408999:	pop    r12
  40899b:	pop    r13
  40899d:	pop    r14
  40899f:	pop    r15
  4089a1:	jmp    0x40fd20
  4089a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089b0:	push   r12
  4089b2:	push   rbp
  4089b3:	push   rdi
  4089b4:	push   rsi
  4089b5:	push   rbx
  4089b6:	sub    rsp,0x20
  4089ba:	mov    rsi,rcx
  4089bd:	mov    ecx,0x58
  4089c2:	mov    r12,rdx
  4089c5:	mov    rbp,r8
  4089c8:	mov    rdi,r9
  4089cb:	call   0x416130
  4089d0:	mov    rbx,rax
  4089d3:	mov    DWORD PTR [rax],0x8
  4089d9:	mov    DWORD PTR [rax+0x4],0x7
  4089e0:	mov    DWORD PTR [rax+0x8],0x7
  4089e7:	mov    DWORD PTR [rax+0xc],0x0
  4089ee:	test   rsi,rsi
  4089f1:	mov    DWORD PTR [rax+0x10],0x0
  4089f8:	lea    rax,[rip+0xfffffffffffff771]        # 0x408170
  4089ff:	mov    ecx,0x40
  408a04:	mov    QWORD PTR [rbx+0x38],r12
  408a08:	mov    DWORD PTR [rbx+0x40],0x1
  408a0f:	cmove  rsi,rax
  408a13:	mov    DWORD PTR [rbx+0x44],0x0
  408a1a:	mov    QWORD PTR [rbx+0x48],rbp
  408a1e:	mov    QWORD PTR [rbx+0x30],rsi
  408a22:	mov    QWORD PTR [rbx+0x50],rdi
  408a26:	call   0x40e610
  408a2b:	movsxd rcx,DWORD PTR [rbx]
  408a2e:	mov    edx,0x4
  408a33:	mov    QWORD PTR [rbx+0x18],rax
  408a37:	mov    QWORD PTR [rbx+0x28],rax
  408a3b:	call   0x40e800
  408a40:	mov    QWORD PTR [rbx+0x20],rax
  408a44:	mov    rax,rbx
  408a47:	add    rsp,0x20
  408a4b:	pop    rbx
  408a4c:	pop    rsi
  408a4d:	pop    rdi
  408a4e:	pop    rbp
  408a4f:	pop    r12
  408a51:	ret    
  408a52:	nop    DWORD PTR [rax+0x0]
  408a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a60:	xor    r9d,r9d
  408a63:	xor    r8d,r8d
  408a66:	jmp    0x4089b0
  408a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	test   rcx,rcx
  408a73:	je     0x408a90
  408a75:	test   rdx,rdx
  408a78:	je     0x408ab0
  408a7a:	mov    eax,DWORD PTR [rdx+0x44]
  408a7d:	mov    QWORD PTR [rcx],rdx
  408a80:	mov    DWORD PTR [rcx+0x18],0xffffffff
  408a87:	mov    DWORD PTR [rcx+0x20],eax
  408a8a:	ret    
  408a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a90:	lea    r8,[rip+0x351d3]        # 0x43dc6a
  408a97:	lea    rdx,[rip+0x354f2]        # 0x43df90
  408a9e:	lea    rcx,[rip+0x35126]        # 0x43dbcb
  408aa5:	jmp    0x40fd20
  408aaa:	nop    WORD PTR [rax+rax*1+0x0]
  408ab0:	lea    r8,[rip+0x351a0]        # 0x43dc57
  408ab7:	lea    rdx,[rip+0x354d2]        # 0x43df90
  408abe:	lea    rcx,[rip+0x35106]        # 0x43dbcb
  408ac5:	jmp    0x40fd20
  408aca:	nop    WORD PTR [rax+rax*1+0x0]
  408ad0:	push   rdi
  408ad1:	push   rsi
  408ad2:	push   rbx
  408ad3:	sub    rsp,0x20
  408ad7:	test   rcx,rcx
  408ada:	je     0x408bc0
  408ae0:	mov    rsi,QWORD PTR [rcx]
  408ae3:	mov    eax,DWORD PTR [rsi+0x44]
  408ae6:	cmp    DWORD PTR [rcx+0x20],eax
  408ae9:	je     0x408b10
  408aeb:	lea    r8,[rip+0x350de]        # 0x43dbd0
  408af2:	lea    rdx,[rip+0x35477]        # 0x43df70
  408af9:	lea    rcx,[rip+0x350cb]        # 0x43dbcb
  408b00:	call   0x40fd20
  408b05:	xor    eax,eax
  408b07:	add    rsp,0x20
  408b0b:	pop    rbx
  408b0c:	pop    rsi
  408b0d:	pop    rdi
  408b0e:	ret    
  408b0f:	nop
  408b10:	mov    eax,DWORD PTR [rcx+0x18]
  408b13:	mov    edi,DWORD PTR [rsi]
  408b15:	cmp    eax,edi
  408b17:	jge    0x408b60
  408b19:	movsxd r10,eax
  408b1c:	add    r10,0x1
  408b20:	lea    r9,[r10*4+0x0]
  408b28:	jmp    0x408b49
  408b2a:	nop    WORD PTR [rax+rax*1+0x0]
  408b30:	mov    r11,QWORD PTR [rsi+0x20]
  408b34:	lea    rbx,[r10+0x1]
  408b38:	mov    r11d,DWORD PTR [r11+r9*1]
  408b3c:	add    r9,0x4
  408b40:	cmp    r11d,0x1
  408b44:	ja     0x408b84
  408b46:	mov    r10,rbx
  408b49:	add    eax,0x1
  408b4c:	cmp    eax,edi
  408b4e:	jne    0x408b30
  408b50:	mov    DWORD PTR [rcx+0x18],eax
  408b53:	xor    eax,eax
  408b55:	add    rsp,0x20
  408b59:	pop    rbx
  408b5a:	pop    rsi
  408b5b:	pop    rdi
  408b5c:	ret    
  408b5d:	nop    DWORD PTR [rax]
  408b60:	lea    r8,[rip+0x350a9]        # 0x43dc10
  408b67:	lea    rdx,[rip+0x35402]        # 0x43df70
  408b6e:	lea    rcx,[rip+0x35056]        # 0x43dbcb
  408b75:	call   0x40fd20
  408b7a:	xor    eax,eax
  408b7c:	add    rsp,0x20
  408b80:	pop    rbx
  408b81:	pop    rsi
  408b82:	pop    rdi
  408b83:	ret    
  408b84:	test   rdx,rdx
  408b87:	je     0x408b94
  408b89:	mov    r9,QWORD PTR [rsi+0x18]
  408b8d:	mov    r9,QWORD PTR [r9+r10*8]
  408b91:	mov    QWORD PTR [rdx],r9
  408b94:	test   r8,r8
  408b97:	je     0x408ba7
  408b99:	mov    rdx,QWORD PTR [rcx]
  408b9c:	mov    rdx,QWORD PTR [rdx+0x28]
  408ba0:	mov    rdx,QWORD PTR [rdx+r10*8]
  408ba4:	mov    QWORD PTR [r8],rdx
  408ba7:	mov    DWORD PTR [rcx+0x18],eax
  408baa:	mov    eax,0x1
  408baf:	add    rsp,0x20
  408bb3:	pop    rbx
  408bb4:	pop    rsi
  408bb5:	pop    rdi
  408bb6:	ret    
  408bb7:	nop    WORD PTR [rax+rax*1+0x0]
  408bc0:	lea    r8,[rip+0x350a3]        # 0x43dc6a
  408bc7:	lea    rdx,[rip+0x353a2]        # 0x43df70
  408bce:	lea    rcx,[rip+0x34ff6]        # 0x43dbcb
  408bd5:	call   0x40fd20
  408bda:	xor    eax,eax
  408bdc:	jmp    0x408b07
  408be1:	nop    DWORD PTR [rax+rax*1+0x0]
  408be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bf0:	sub    rsp,0x28
  408bf4:	test   rcx,rcx
  408bf7:	je     0x408c01
  408bf9:	mov    rax,QWORD PTR [rcx]
  408bfc:	add    rsp,0x28
  408c00:	ret    
  408c01:	lea    r8,[rip+0x35062]        # 0x43dc6a
  408c08:	lea    rdx,[rip+0x35331]        # 0x43df40
  408c0f:	lea    rcx,[rip+0x34fb5]        # 0x43dbcb
  408c16:	call   0x40fd20
  408c1b:	xor    eax,eax
  408c1d:	add    rsp,0x28
  408c21:	ret    
  408c22:	nop    DWORD PTR [rax+0x0]
  408c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c30:	mov    edx,0x1
  408c35:	jmp    0x408180
  408c3a:	nop    WORD PTR [rax+rax*1+0x0]
  408c40:	push   rbx
  408c41:	sub    rsp,0x40
  408c45:	lea    r8,[rip+0x34f74]        # 0x43dbc0
  408c4c:	test   rcx,rcx
  408c4f:	je     0x408c63
  408c51:	mov    rax,QWORD PTR [rcx]
  408c54:	lea    r8,[rip+0x34f75]        # 0x43dbd0
  408c5b:	mov    ebx,DWORD PTR [rax+0x44]
  408c5e:	cmp    DWORD PTR [rcx+0x20],ebx
  408c61:	je     0x408c80
  408c63:	lea    rdx,[rip+0x35286]        # 0x43def0
  408c6a:	lea    rcx,[rip+0x34f5a]        # 0x43dbcb
  408c71:	add    rsp,0x40
  408c75:	pop    rbx
  408c76:	jmp    0x40fd20
  408c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c80:	mov    r11d,DWORD PTR [rcx+0x18]
  408c84:	test   r11d,r11d
  408c87:	js     0x408ce0
  408c89:	cmp    r11d,DWORD PTR [rax]
  408c8c:	jge    0x408cf0
  408c8e:	mov    rbx,rcx
  408c91:	mov    rcx,QWORD PTR [rax+0x18]
  408c95:	mov    r10,rdx
  408c98:	movsxd rdx,r11d
  408c9b:	mov    r9,QWORD PTR [rcx+rdx*8]
  408c9f:	mov    rcx,QWORD PTR [rax+0x20]
  408ca3:	mov    r8d,DWORD PTR [rcx+rdx*4]
  408ca7:	mov    rcx,rax
  408caa:	mov    DWORD PTR [rsp+0x30],0x1
  408cb2:	mov    DWORD PTR [rsp+0x28],0x1
  408cba:	mov    QWORD PTR [rsp+0x20],r10
  408cbf:	mov    edx,r11d
  408cc2:	call   0x408720
  408cc7:	mov    rax,QWORD PTR [rbx]
  408cca:	add    DWORD PTR [rbx+0x20],0x1
  408cce:	add    DWORD PTR [rax+0x44],0x1
  408cd2:	add    rsp,0x40
  408cd6:	pop    rbx
  408cd7:	ret    
  408cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ce0:	lea    r8,[rip+0x34f10]        # 0x43dbf7
  408ce7:	jmp    0x408c63
  408cec:	nop    DWORD PTR [rax+0x0]
  408cf0:	lea    r8,[rip+0x34f19]        # 0x43dc10
  408cf7:	jmp    0x408c63
  408cfc:	nop    DWORD PTR [rax+0x0]
  408d00:	xor    edx,edx
  408d02:	jmp    0x408180
  408d07:	nop    WORD PTR [rax+rax*1+0x0]
  408d10:	sub    rsp,0x28
  408d14:	test   rcx,rcx
  408d17:	je     0x408d30
  408d19:	lock add DWORD PTR [rcx+0x40],0x1
  408d1e:	mov    rax,rcx
  408d21:	add    rsp,0x28
  408d25:	ret    
  408d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d30:	lea    r8,[rip+0x34f20]        # 0x43dc57
  408d37:	lea    rdx,[rip+0x35192]        # 0x43ded0
  408d3e:	lea    rcx,[rip+0x34e86]        # 0x43dbcb
  408d45:	call   0x40fd20
  408d4a:	xor    eax,eax
  408d4c:	add    rsp,0x28
  408d50:	ret    
  408d51:	nop    DWORD PTR [rax+rax*1+0x0]
  408d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d60:	push   rbx
  408d61:	sub    rsp,0x20
  408d65:	test   rcx,rcx
  408d68:	je     0x408dc0
  408d6a:	lock sub DWORD PTR [rcx+0x40],0x1
  408d6f:	je     0x408d80
  408d71:	add    rsp,0x20
  408d75:	pop    rbx
  408d76:	ret    
  408d77:	nop    WORD PTR [rax+rax*1+0x0]
  408d80:	mov    rbx,rcx
  408d83:	mov    edx,0x1
  408d88:	call   0x4084a0
  408d8d:	mov    rcx,QWORD PTR [rbx+0x28]
  408d91:	cmp    QWORD PTR [rbx+0x18],rcx
  408d95:	je     0x408da0
  408d97:	call   0x40e6e0
  408d9c:	mov    rcx,QWORD PTR [rbx+0x18]
  408da0:	call   0x40e6e0
  408da5:	mov    rcx,QWORD PTR [rbx+0x20]
  408da9:	call   0x40e6e0
  408dae:	mov    rdx,rbx
  408db1:	mov    ecx,0x58
  408db6:	add    rsp,0x20
  408dba:	pop    rbx
  408dbb:	jmp    0x4167c0
  408dc0:	lea    r8,[rip+0x34e90]        # 0x43dc57
  408dc7:	lea    rdx,[rip+0x350e2]        # 0x43deb0
  408dce:	lea    rcx,[rip+0x34df6]        # 0x43dbcb
  408dd5:	add    rsp,0x20
  408dd9:	pop    rbx
  408dda:	jmp    0x40fd20
  408ddf:	nop
  408de0:	push   r15
  408de2:	push   r14
  408de4:	push   r13
  408de6:	push   r12
  408de8:	push   rbp
  408de9:	push   rdi
  408dea:	push   rsi
  408deb:	push   rbx
  408dec:	sub    rsp,0x28
  408df0:	test   rcx,rcx
  408df3:	mov    rdi,rcx
  408df6:	mov    QWORD PTR [rsp+0x78],rdx
  408dfb:	je     0x408ed6
  408e01:	mov    rcx,QWORD PTR [rsp+0x78]
  408e06:	call   QWORD PTR [rdi+0x30]
  408e09:	cmp    eax,0x1
  408e0c:	mov    r13d,eax
  408e0f:	mov    eax,0x2
  408e14:	cmovbe r13d,eax
  408e18:	xor    edx,edx
  408e1a:	mov    eax,r13d
  408e1d:	div    DWORD PTR [rdi+0x4]
  408e20:	mov    eax,edx
  408e22:	mov    rdx,QWORD PTR [rdi+0x20]
  408e26:	mov    rbx,rax
  408e29:	mov    r8d,DWORD PTR [rdx+rax*4]
  408e2d:	test   r8d,r8d
  408e30:	je     0x408ea5
  408e32:	xor    r14d,r14d
  408e35:	xor    esi,esi
  408e37:	xor    ebp,ebp
  408e39:	mov    r15d,0x1
  408e3f:	jmp    0x408e67
  408e41:	test   bpl,0x1
  408e45:	jne    0x408e53
  408e47:	cmp    r8d,0x1
  408e4b:	cmove  r14d,ebx
  408e4f:	cmove  ebp,r15d
  408e53:	add    esi,0x1
  408e56:	add    ebx,esi
  408e58:	and    ebx,DWORD PTR [rdi+0x8]
  408e5b:	mov    r8d,ebx
  408e5e:	mov    r8d,DWORD PTR [rdx+r8*4]
  408e62:	test   r8d,r8d
  408e65:	je     0x408ea1
  408e67:	cmp    r13d,r8d
  408e6a:	jne    0x408e41
  408e6c:	mov    rax,QWORD PTR [rdi+0x18]
  408e70:	mov    r12d,ebx
  408e73:	mov    rcx,QWORD PTR [rax+r12*8]
  408e77:	mov    rax,QWORD PTR [rdi+0x38]
  408e7b:	test   rax,rax
  408e7e:	je     0x408e91
  408e80:	mov    rdx,QWORD PTR [rsp+0x78]
  408e85:	call   rax
  408e87:	test   eax,eax
  408e89:	jne    0x408ef2
  408e8b:	mov    rdx,QWORD PTR [rdi+0x20]
  408e8f:	jmp    0x408e53
  408e91:	cmp    QWORD PTR [rsp+0x78],rcx
  408e96:	jne    0x408e53
  408e98:	mov    r8,r12
  408e9b:	mov    eax,DWORD PTR [rdx+r12*4]
  408e9f:	jmp    0x408ec7
  408ea1:	test   ebp,ebp
  408ea3:	jne    0x408ec0
  408ea5:	xor    eax,eax
  408ea7:	add    rsp,0x28
  408eab:	pop    rbx
  408eac:	pop    rsi
  408ead:	pop    rdi
  408eae:	pop    rbp
  408eaf:	pop    r12
  408eb1:	pop    r13
  408eb3:	pop    r14
  408eb5:	pop    r15
  408eb7:	ret    
  408eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ec0:	mov    r8d,r14d
  408ec3:	mov    eax,DWORD PTR [rdx+r8*4]
  408ec7:	cmp    eax,0x1
  408eca:	jbe    0x408ea5
  408ecc:	mov    rax,QWORD PTR [rdi+0x28]
  408ed0:	mov    rax,QWORD PTR [rax+r8*8]
  408ed4:	jmp    0x408ea7
  408ed6:	lea    r8,[rip+0x34d7a]        # 0x43dc57
  408edd:	lea    rdx,[rip+0x34f8c]        # 0x43de70
  408ee4:	lea    rcx,[rip+0x34ce0]        # 0x43dbcb
  408eeb:	call   0x40fd20
  408ef0:	jmp    0x408ea5
  408ef2:	mov    rax,QWORD PTR [rdi+0x20]
  408ef6:	mov    r8,r12
  408ef9:	mov    eax,DWORD PTR [rax+r12*4]
  408efd:	jmp    0x408ec7
  408eff:	nop
  408f00:	push   r15
  408f02:	push   r14
  408f04:	push   r13
  408f06:	push   r12
  408f08:	push   rbp
  408f09:	push   rdi
  408f0a:	push   rsi
  408f0b:	push   rbx
  408f0c:	sub    rsp,0x28
  408f10:	test   rcx,rcx
  408f13:	mov    rdi,rcx
  408f16:	mov    QWORD PTR [rsp+0x78],rdx
  408f1b:	mov    QWORD PTR [rsp+0x80],r8
  408f23:	mov    QWORD PTR [rsp+0x88],r9
  408f2b:	je     0x40904f
  408f31:	mov    rcx,QWORD PTR [rsp+0x78]
  408f36:	call   QWORD PTR [rdi+0x30]
  408f39:	cmp    eax,0x1
  408f3c:	mov    r15d,eax
  408f3f:	mov    eax,0x2
  408f44:	cmovbe r15d,eax
  408f48:	xor    edx,edx
  408f4a:	mov    eax,r15d
  408f4d:	div    DWORD PTR [rdi+0x4]
  408f50:	mov    rax,QWORD PTR [rdi+0x20]
  408f54:	mov    edx,edx
  408f56:	mov    r10d,DWORD PTR [rax+rdx*4]
  408f5a:	mov    rbx,rdx
  408f5d:	test   r10d,r10d
  408f60:	je     0x408fe5
  408f66:	xor    r13d,r13d
  408f69:	xor    esi,esi
  408f6b:	xor    r14d,r14d
  408f6e:	mov    ebp,0x1
  408f73:	jmp    0x408f9b
  408f75:	test   r14b,0x1
  408f79:	jne    0x408f87
  408f7b:	cmp    r10d,0x1
  408f7f:	cmove  r13d,ebx
  408f83:	cmove  r14d,ebp
  408f87:	add    esi,0x1
  408f8a:	add    ebx,esi
  408f8c:	and    ebx,DWORD PTR [rdi+0x8]
  408f8f:	mov    r10d,ebx
  408f92:	mov    r10d,DWORD PTR [rax+r10*4]
  408f96:	test   r10d,r10d
  408f99:	je     0x408fe0
  408f9b:	cmp    r15d,r10d
  408f9e:	jne    0x408f75
  408fa0:	mov    r11,QWORD PTR [rdi+0x38]
  408fa4:	mov    rdx,QWORD PTR [rdi+0x18]
  408fa8:	mov    r12d,ebx
  408fab:	test   r11,r11
  408fae:	mov    rcx,QWORD PTR [rdx+r12*8]
  408fb2:	je     0x408fd0
  408fb4:	mov    rdx,QWORD PTR [rsp+0x78]
  408fb9:	call   r11
  408fbc:	test   eax,eax
  408fbe:	jne    0x40906e
  408fc4:	mov    rax,QWORD PTR [rdi+0x20]
  408fc8:	jmp    0x408f87
  408fca:	nop    WORD PTR [rax+rax*1+0x0]
  408fd0:	cmp    QWORD PTR [rsp+0x78],rcx
  408fd5:	jne    0x408f87
  408fd7:	mov    r10,r12
  408fda:	mov    eax,DWORD PTR [rax+r12*4]
  408fde:	jmp    0x409007
  408fe0:	test   r14d,r14d
  408fe3:	jne    0x409000
  408fe5:	xor    eax,eax
  408fe7:	add    rsp,0x28
  408feb:	pop    rbx
  408fec:	pop    rsi
  408fed:	pop    rdi
  408fee:	pop    rbp
  408fef:	pop    r12
  408ff1:	pop    r13
  408ff3:	pop    r14
  408ff5:	pop    r15
  408ff7:	ret    
  408ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  409000:	mov    r10d,r13d
  409003:	mov    eax,DWORD PTR [rax+r10*4]
  409007:	cmp    eax,0x1
  40900a:	jbe    0x408fe5
  40900c:	cmp    QWORD PTR [rsp+0x80],0x0
  409015:	je     0x40902a
  409017:	mov    rax,QWORD PTR [rdi+0x18]
  40901b:	mov    rcx,QWORD PTR [rsp+0x80]
  409023:	mov    rax,QWORD PTR [rax+r10*8]
  409027:	mov    QWORD PTR [rcx],rax
  40902a:	cmp    QWORD PTR [rsp+0x88],0x0
  409033:	je     0x40907b
  409035:	mov    rax,QWORD PTR [rdi+0x28]
  409039:	mov    rcx,QWORD PTR [rsp+0x88]
  409041:	mov    rax,QWORD PTR [rax+r10*8]
  409045:	mov    QWORD PTR [rcx],rax
  409048:	mov    eax,0x1
  40904d:	jmp    0x408fe7
  40904f:	lea    r8,[rip+0x34c01]        # 0x43dc57
  409056:	lea    rdx,[rip+0x34df3]        # 0x43de50
  40905d:	lea    rcx,[rip+0x34b67]        # 0x43dbcb
  409064:	call   0x40fd20
  409069:	jmp    0x408fe5
  40906e:	mov    rax,QWORD PTR [rdi+0x20]
  409072:	mov    r10,r12
  409075:	mov    eax,DWORD PTR [rax+r12*4]
  409079:	jmp    0x409007
  40907b:	mov    eax,0x1
  409080:	jmp    0x408fe7
  409085:	nop
  409086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409090:	xor    r9d,r9d
  409093:	jmp    0x408870
  409098:	nop    DWORD PTR [rax+rax*1+0x0]
  4090a0:	mov    r9d,0x1
  4090a6:	jmp    0x408870
  4090ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4090b0:	mov    r9d,0x1
  4090b6:	mov    r8,rdx
  4090b9:	jmp    0x408870
  4090be:	xchg   ax,ax
  4090c0:	push   r15
  4090c2:	push   r14
  4090c4:	push   r13
  4090c6:	push   r12
  4090c8:	push   rbp
  4090c9:	push   rdi
  4090ca:	push   rsi
  4090cb:	push   rbx
  4090cc:	sub    rsp,0x28
  4090d0:	test   rcx,rcx
  4090d3:	mov    rdi,rcx
  4090d6:	mov    QWORD PTR [rsp+0x78],rdx
  4090db:	je     0x4091a6
  4090e1:	mov    rcx,QWORD PTR [rsp+0x78]
  4090e6:	call   QWORD PTR [rdi+0x30]
  4090e9:	cmp    eax,0x1
  4090ec:	mov    r13d,eax
  4090ef:	mov    eax,0x2
  4090f4:	cmovbe r13d,eax
  4090f8:	xor    edx,edx
  4090fa:	mov    eax,r13d
  4090fd:	div    DWORD PTR [rdi+0x4]
  409100:	mov    ebx,edx
  409102:	mov    rdx,QWORD PTR [rdi+0x20]
  409106:	mov    eax,ebx
  409108:	mov    r8d,DWORD PTR [rdx+rax*4]
  40910c:	test   r8d,r8d
  40910f:	je     0x409184
  409111:	xor    r14d,r14d
  409114:	xor    esi,esi
  409116:	xor    ebp,ebp
  409118:	mov    r15d,0x1
  40911e:	jmp    0x409146
  409120:	test   bpl,0x1
  409124:	jne    0x409132
  409126:	cmp    r8d,0x1
  40912a:	cmove  r14,rbx
  40912e:	cmove  ebp,r15d
  409132:	add    esi,0x1
  409135:	add    ebx,esi
  409137:	and    ebx,DWORD PTR [rdi+0x8]
  40913a:	mov    r8d,ebx
  40913d:	mov    r8d,DWORD PTR [rdx+r8*4]
  409141:	test   r8d,r8d
  409144:	je     0x409180
  409146:	cmp    r13d,r8d
  409149:	jne    0x409120
  40914b:	mov    rax,QWORD PTR [rdi+0x18]
  40914f:	mov    r12d,ebx
  409152:	mov    rcx,QWORD PTR [rax+r12*8]
  409156:	mov    rax,QWORD PTR [rdi+0x38]
  40915a:	test   rax,rax
  40915d:	je     0x409170
  40915f:	mov    rdx,QWORD PTR [rsp+0x78]
  409164:	call   rax
  409166:	test   eax,eax
  409168:	jne    0x4091c4
  40916a:	mov    rdx,QWORD PTR [rdi+0x20]
  40916e:	jmp    0x409132
  409170:	cmp    QWORD PTR [rsp+0x78],rcx
  409175:	jne    0x409132
  409177:	mov    eax,DWORD PTR [rdx+r12*4]
  40917b:	jmp    0x409186
  40917d:	nop    DWORD PTR [rax]
  409180:	test   ebp,ebp
  409182:	jne    0x4091a0
  409184:	xor    eax,eax
  409186:	cmp    eax,0x1
  409189:	seta   al
  40918c:	movzx  eax,al
  40918f:	add    rsp,0x28
  409193:	pop    rbx
  409194:	pop    rsi
  409195:	pop    rdi
  409196:	pop    rbp
  409197:	pop    r12
  409199:	pop    r13
  40919b:	pop    r14
  40919d:	pop    r15
  40919f:	ret    
  4091a0:	mov    eax,DWORD PTR [rdx+r14*4]
  4091a4:	jmp    0x409186
  4091a6:	lea    r8,[rip+0x34aaa]        # 0x43dc57
  4091ad:	lea    rdx,[rip+0x34c5c]        # 0x43de10
  4091b4:	lea    rcx,[rip+0x34a10]        # 0x43dbcb
  4091bb:	call   0x40fd20
  4091c0:	xor    eax,eax
  4091c2:	jmp    0x40918f
  4091c4:	mov    rax,QWORD PTR [rdi+0x20]
  4091c8:	mov    eax,DWORD PTR [rax+r12*4]
  4091cc:	jmp    0x409186
  4091ce:	xchg   ax,ax
  4091d0:	mov    r8d,0x1
  4091d6:	jmp    0x4085b0
  4091db:	nop    DWORD PTR [rax+rax*1+0x0]
  4091e0:	xor    r8d,r8d
  4091e3:	jmp    0x4085b0
  4091e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091f0:	push   rbx
  4091f1:	sub    rsp,0x20
  4091f5:	test   rcx,rcx
  4091f8:	je     0x409260
  4091fa:	mov    eax,DWORD PTR [rcx+0xc]
  4091fd:	test   eax,eax
  4091ff:	jne    0x409250
  409201:	mov    rbx,rcx
  409204:	mov    edx,0x1
  409209:	call   0x4084a0
  40920e:	mov    eax,DWORD PTR [rbx+0xc]
  409211:	mov    ecx,DWORD PTR [rbx]
  409213:	mov    edx,DWORD PTR [rbx+0x10]
  409216:	shl    eax,0x2
  409219:	cmp    ecx,eax
  40921b:	jle    0x409230
  40921d:	cmp    ecx,0x8
  409220:	jle    0x409230
  409222:	mov    rcx,rbx
  409225:	add    rsp,0x20
  409229:	pop    rbx
  40922a:	jmp    0x408210
  40922f:	nop
  409230:	lea    eax,[rdx+0xf]
  409233:	test   edx,edx
  409235:	cmovns eax,edx
  409238:	sar    eax,0x4
  40923b:	add    eax,edx
  40923d:	cmp    ecx,eax
  40923f:	jle    0x409222
  409241:	add    rsp,0x20
  409245:	pop    rbx
  409246:	ret    
  409247:	nop    WORD PTR [rax+rax*1+0x0]
  409250:	add    DWORD PTR [rcx+0x44],0x1
  409254:	jmp    0x409201
  409256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409260:	lea    r8,[rip+0x349f0]        # 0x43dc57
  409267:	lea    rdx,[rip+0x34b62]        # 0x43ddd0
  40926e:	lea    rcx,[rip+0x34956]        # 0x43dbcb
  409275:	add    rsp,0x20
  409279:	pop    rbx
  40927a:	jmp    0x40fd20
  40927f:	nop
  409280:	push   rbx
  409281:	sub    rsp,0x20
  409285:	test   rcx,rcx
  409288:	je     0x4092a0
  40928a:	mov    rbx,rcx
  40928d:	call   0x4091f0
  409292:	mov    rcx,rbx
  409295:	add    rsp,0x20
  409299:	pop    rbx
  40929a:	jmp    0x408d60
  40929f:	nop
  4092a0:	lea    r8,[rip+0x349b0]        # 0x43dc57
  4092a7:	lea    rdx,[rip+0x34be2]        # 0x43de90
  4092ae:	lea    rcx,[rip+0x34916]        # 0x43dbcb
  4092b5:	add    rsp,0x20
  4092b9:	pop    rbx
  4092ba:	jmp    0x40fd20
  4092bf:	nop
  4092c0:	push   rbx
  4092c1:	sub    rsp,0x20
  4092c5:	test   rcx,rcx
  4092c8:	je     0x409330
  4092ca:	mov    eax,DWORD PTR [rcx+0xc]
  4092cd:	test   eax,eax
  4092cf:	jne    0x409320
  4092d1:	mov    rbx,rcx
  4092d4:	xor    edx,edx
  4092d6:	call   0x4084a0
  4092db:	mov    eax,DWORD PTR [rbx+0xc]
  4092de:	mov    ecx,DWORD PTR [rbx]
  4092e0:	mov    edx,DWORD PTR [rbx+0x10]
  4092e3:	shl    eax,0x2
  4092e6:	cmp    ecx,eax
  4092e8:	jle    0x409300
  4092ea:	cmp    ecx,0x8
  4092ed:	jle    0x409300
  4092ef:	mov    rcx,rbx
  4092f2:	add    rsp,0x20
  4092f6:	pop    rbx
  4092f7:	jmp    0x408210
  4092fc:	nop    DWORD PTR [rax+0x0]
  409300:	lea    eax,[rdx+0xf]
  409303:	test   edx,edx
  409305:	cmovns eax,edx
  409308:	sar    eax,0x4
  40930b:	add    eax,edx
  40930d:	cmp    ecx,eax
  40930f:	jle    0x4092ef
  409311:	add    rsp,0x20
  409315:	pop    rbx
  409316:	ret    
  409317:	nop    WORD PTR [rax+rax*1+0x0]
  409320:	add    DWORD PTR [rcx+0x44],0x1
  409324:	jmp    0x4092d1
  409326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409330:	lea    r8,[rip+0x34920]        # 0x43dc57
  409337:	lea    rdx,[rip+0x34a72]        # 0x43ddb0
  40933e:	lea    rcx,[rip+0x34886]        # 0x43dbcb
  409345:	add    rsp,0x20
  409349:	pop    rbx
  40934a:	jmp    0x40fd20
  40934f:	nop
  409350:	sub    rsp,0x28
  409354:	test   rcx,rcx
  409357:	je     0x409370
  409359:	test   rdx,rdx
  40935c:	je     0x409391
  40935e:	mov    r9d,0x1
  409364:	add    rsp,0x28
  409368:	jmp    0x4083a0
  40936d:	nop    DWORD PTR [rax]
  409370:	lea    r8,[rip+0x348e0]        # 0x43dc57
  409377:	lea    rdx,[rip+0x34a12]        # 0x43dd90
  40937e:	lea    rcx,[rip+0x34846]        # 0x43dbcb
  409385:	call   0x40fd20
  40938a:	xor    eax,eax
  40938c:	add    rsp,0x28
  409390:	ret    
  409391:	lea    r8,[rip+0x348df]        # 0x43dc77
  409398:	lea    rdx,[rip+0x349f1]        # 0x43dd90
  40939f:	lea    rcx,[rip+0x34825]        # 0x43dbcb
  4093a6:	call   0x40fd20
  4093ab:	xor    eax,eax
  4093ad:	add    rsp,0x28
  4093b1:	ret    
  4093b2:	nop    DWORD PTR [rax+0x0]
  4093b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093c0:	sub    rsp,0x28
  4093c4:	test   rcx,rcx
  4093c7:	je     0x4093e0
  4093c9:	test   rdx,rdx
  4093cc:	je     0x409401
  4093ce:	xor    r9d,r9d
  4093d1:	add    rsp,0x28
  4093d5:	jmp    0x4083a0
  4093da:	nop    WORD PTR [rax+rax*1+0x0]
  4093e0:	lea    r8,[rip+0x34870]        # 0x43dc57
  4093e7:	lea    rdx,[rip+0x34952]        # 0x43dd40
  4093ee:	lea    rcx,[rip+0x347d6]        # 0x43dbcb
  4093f5:	call   0x40fd20
  4093fa:	xor    eax,eax
  4093fc:	add    rsp,0x28
  409400:	ret    
  409401:	lea    r8,[rip+0x3486f]        # 0x43dc77
  409408:	lea    rdx,[rip+0x34931]        # 0x43dd40
  40940f:	lea    rcx,[rip+0x347b5]        # 0x43dbcb
  409416:	call   0x40fd20
  40941b:	xor    eax,eax
  40941d:	add    rsp,0x28
  409421:	ret    
  409422:	nop    DWORD PTR [rax+0x0]
  409426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409430:	push   r12
  409432:	push   rbp
  409433:	push   rdi
  409434:	push   rsi
  409435:	push   rbx
  409436:	sub    rsp,0x20
  40943a:	test   rcx,rcx
  40943d:	je     0x4094d0
  409443:	test   rdx,rdx
  409446:	je     0x4094e0
  40944c:	mov    eax,DWORD PTR [rcx]
  40944e:	xor    ebx,ebx
  409450:	mov    rbp,r8
  409453:	mov    rdi,rdx
  409456:	mov    rsi,rcx
  409459:	mov    r12d,DWORD PTR [rcx+0x44]
  40945d:	test   eax,eax
  40945f:	jle    0x4094bb
  409461:	mov    rax,QWORD PTR [rsi+0x18]
  409465:	mov    rcx,QWORD PTR [rax+rbx*8]
  409469:	mov    rax,QWORD PTR [rsi+0x28]
  40946d:	mov    rdx,QWORD PTR [rax+rbx*8]
  409471:	mov    rax,QWORD PTR [rsi+0x20]
  409475:	cmp    DWORD PTR [rax+rbx*4],0x1
  409479:	jbe    0x409480
  40947b:	mov    r8,rbp
  40947e:	call   rdi
  409480:	cmp    DWORD PTR [rsi+0x44],r12d
  409484:	je     0x4094b0
  409486:	lea    r8,[rip+0x347ab]        # 0x43dc38
  40948d:	lea    rdx,[rip+0x3488c]        # 0x43dd20
  409494:	lea    rcx,[rip+0x34730]        # 0x43dbcb
  40949b:	add    rsp,0x20
  40949f:	pop    rbx
  4094a0:	pop    rsi
  4094a1:	pop    rdi
  4094a2:	pop    rbp
  4094a3:	pop    r12
  4094a5:	jmp    0x40fd20
  4094aa:	nop    WORD PTR [rax+rax*1+0x0]
  4094b0:	lea    eax,[rbx+0x1]
  4094b3:	add    rbx,0x1
  4094b7:	cmp    DWORD PTR [rsi],eax
  4094b9:	jg     0x409461
  4094bb:	add    rsp,0x20
  4094bf:	pop    rbx
  4094c0:	pop    rsi
  4094c1:	pop    rdi
  4094c2:	pop    rbp
  4094c3:	pop    r12
  4094c5:	ret    
  4094c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094d0:	lea    r8,[rip+0x34780]        # 0x43dc57
  4094d7:	jmp    0x40948d
  4094d9:	nop    DWORD PTR [rax+0x0]
  4094e0:	lea    r8,[rip+0x34790]        # 0x43dc77
  4094e7:	jmp    0x40948d
  4094e9:	nop    DWORD PTR [rax+0x0]
  4094f0:	push   r13
  4094f2:	push   r12
  4094f4:	push   rbp
  4094f5:	push   rdi
  4094f6:	push   rsi
  4094f7:	push   rbx
  4094f8:	sub    rsp,0x28
  4094fc:	test   rcx,rcx
  4094ff:	mov    rbx,rcx
  409502:	mov    rbp,rdx
  409505:	mov    r12,r8
  409508:	je     0x4095a0
  40950e:	test   rdx,rdx
  409511:	je     0x4095d0
  409517:	mov    eax,DWORD PTR [rcx]
  409519:	xor    esi,esi
  40951b:	mov    r13d,DWORD PTR [rcx+0x44]
  40951f:	test   eax,eax
  409521:	jle    0x409585
  409523:	mov    rax,QWORD PTR [rbx+0x18]
  409527:	mov    rcx,QWORD PTR [rax+rsi*8]
  40952b:	mov    rax,QWORD PTR [rbx+0x28]
  40952f:	mov    rdi,QWORD PTR [rax+rsi*8]
  409533:	mov    rax,QWORD PTR [rbx+0x20]
  409537:	cmp    DWORD PTR [rax+rsi*4],0x1
  40953b:	jbe    0x409574
  40953d:	mov    r8,r12
  409540:	mov    rdx,rdi
  409543:	call   rbp
  409545:	cmp    DWORD PTR [rbx+0x44],r13d
  409549:	je     0x409594
  40954b:	lea    r8,[rip+0x346e6]        # 0x43dc38
  409552:	lea    rdx,[rip+0x347a7]        # 0x43dd00
  409559:	lea    rcx,[rip+0x3466b]        # 0x43dbcb
  409560:	call   0x40fd20
  409565:	xor    eax,eax
  409567:	add    rsp,0x28
  40956b:	pop    rbx
  40956c:	pop    rsi
  40956d:	pop    rdi
  40956e:	pop    rbp
  40956f:	pop    r12
  409571:	pop    r13
  409573:	ret    
  409574:	cmp    DWORD PTR [rbx+0x44],r13d
  409578:	jne    0x40954b
  40957a:	lea    eax,[rsi+0x1]
  40957d:	add    rsi,0x1
  409581:	cmp    DWORD PTR [rbx],eax
  409583:	jg     0x409523
  409585:	xor    eax,eax
  409587:	add    rsp,0x28
  40958b:	pop    rbx
  40958c:	pop    rsi
  40958d:	pop    rdi
  40958e:	pop    rbp
  40958f:	pop    r12
  409591:	pop    r13
  409593:	ret    
  409594:	test   eax,eax
  409596:	je     0x40957a
  409598:	mov    rax,rdi
  40959b:	jmp    0x409567
  40959d:	nop    DWORD PTR [rax]
  4095a0:	lea    r8,[rip+0x346b0]        # 0x43dc57
  4095a7:	lea    rdx,[rip+0x34752]        # 0x43dd00
  4095ae:	lea    rcx,[rip+0x34616]        # 0x43dbcb
  4095b5:	call   0x40fd20
  4095ba:	xor    eax,eax
  4095bc:	add    rsp,0x28
  4095c0:	pop    rbx
  4095c1:	pop    rsi
  4095c2:	pop    rdi
  4095c3:	pop    rbp
  4095c4:	pop    r12
  4095c6:	pop    r13
  4095c8:	ret    
  4095c9:	nop    DWORD PTR [rax+0x0]
  4095d0:	lea    r8,[rip+0x346ad]        # 0x43dc84
  4095d7:	lea    rdx,[rip+0x34722]        # 0x43dd00
  4095de:	lea    rcx,[rip+0x345e6]        # 0x43dbcb
  4095e5:	call   0x40fd20
  4095ea:	xor    eax,eax
  4095ec:	jmp    0x409587
  4095ee:	xchg   ax,ax
  4095f0:	sub    rsp,0x28
  4095f4:	test   rcx,rcx
  4095f7:	je     0x409601
  4095f9:	mov    eax,DWORD PTR [rcx+0xc]
  4095fc:	add    rsp,0x28
  409600:	ret    
  409601:	lea    r8,[rip+0x3464f]        # 0x43dc57
  409608:	lea    rdx,[rip+0x346d1]        # 0x43dce0
  40960f:	lea    rcx,[rip+0x345b5]        # 0x43dbcb
  409616:	call   0x40fd20
  40961b:	xor    eax,eax
  40961d:	add    rsp,0x28
  409621:	ret    
  409622:	nop    DWORD PTR [rax+0x0]
  409626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409630:	push   rdi
  409631:	push   rsi
  409632:	push   rbx
  409633:	sub    rsp,0x20
  409637:	test   rcx,rcx
  40963a:	mov    rdi,rcx
  40963d:	je     0x409680
  40963f:	mov    eax,DWORD PTR [rcx]
  409641:	test   eax,eax
  409643:	jle    0x40969a
  409645:	xor    ebx,ebx
  409647:	xor    eax,eax
  409649:	xor    esi,esi
  40964b:	nop    DWORD PTR [rax+rax*1+0x0]
  409650:	mov    rdx,QWORD PTR [rdi+0x20]
  409654:	cmp    DWORD PTR [rdx+rbx*1],0x1
  409658:	jbe    0x40966a
  40965a:	mov    rdx,QWORD PTR [rdi+0x18]
  40965e:	mov    rcx,rax
  409661:	mov    rdx,QWORD PTR [rdx+rbx*2]
  409665:	call   0x409b50
  40966a:	add    esi,0x1
  40966d:	add    rbx,0x4
  409671:	cmp    DWORD PTR [rdi],esi
  409673:	jg     0x409650
  409675:	add    rsp,0x20
  409679:	pop    rbx
  40967a:	pop    rsi
  40967b:	pop    rdi
  40967c:	ret    
  40967d:	nop    DWORD PTR [rax]
  409680:	lea    r8,[rip+0x345d0]        # 0x43dc57
  409687:	lea    rdx,[rip+0x34632]        # 0x43dcc0
  40968e:	lea    rcx,[rip+0x34536]        # 0x43dbcb
  409695:	call   0x40fd20
  40969a:	xor    eax,eax
  40969c:	add    rsp,0x20
  4096a0:	pop    rbx
  4096a1:	pop    rsi
  4096a2:	pop    rdi
  4096a3:	ret    
  4096a4:	xchg   ax,ax
  4096a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096b0:	push   rdi
  4096b1:	push   rsi
  4096b2:	push   rbx
  4096b3:	sub    rsp,0x20
  4096b7:	test   rcx,rcx
  4096ba:	mov    rdi,rcx
  4096bd:	je     0x409700
  4096bf:	mov    eax,DWORD PTR [rcx]
  4096c1:	test   eax,eax
  4096c3:	jle    0x40971a
  4096c5:	xor    ebx,ebx
  4096c7:	xor    eax,eax
  4096c9:	xor    esi,esi
  4096cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4096d0:	mov    rdx,QWORD PTR [rdi+0x20]
  4096d4:	cmp    DWORD PTR [rdx+rbx*1],0x1
  4096d8:	jbe    0x4096ea
  4096da:	mov    rdx,QWORD PTR [rdi+0x28]
  4096de:	mov    rcx,rax
  4096e1:	mov    rdx,QWORD PTR [rdx+rbx*2]
  4096e5:	call   0x409b50
  4096ea:	add    esi,0x1
  4096ed:	add    rbx,0x4
  4096f1:	cmp    DWORD PTR [rdi],esi
  4096f3:	jg     0x4096d0
  4096f5:	add    rsp,0x20
  4096f9:	pop    rbx
  4096fa:	pop    rsi
  4096fb:	pop    rdi
  4096fc:	ret    
  4096fd:	nop    DWORD PTR [rax]
  409700:	lea    r8,[rip+0x34550]        # 0x43dc57
  409707:	lea    rdx,[rip+0x34592]        # 0x43dca0
  40970e:	lea    rcx,[rip+0x344b6]        # 0x43dbcb
  409715:	call   0x40fd20
  40971a:	xor    eax,eax
  40971c:	add    rsp,0x20
  409720:	pop    rbx
  409721:	pop    rsi
  409722:	pop    rdi
  409723:	ret    
  409724:	xchg   ax,ax
  409726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409730:	sub    rsp,0x28
  409734:	call   0x4387a0
  409739:	test   eax,eax
  40973b:	sete   al
  40973e:	movzx  eax,al
  409741:	add    rsp,0x28
  409745:	ret    
  409746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409750:	movsx  edx,BYTE PTR [rcx]
  409753:	mov    eax,0x1505
  409758:	test   dl,dl
  40975a:	je     0x409779
  40975c:	nop    DWORD PTR [rax+0x0]
  409760:	mov    r8d,eax
  409763:	add    rcx,0x1
  409767:	shl    r8d,0x5
  40976b:	add    edx,r8d
  40976e:	add    eax,edx
  409770:	movsx  edx,BYTE PTR [rcx]
  409773:	test   dl,dl
  409775:	jne    0x409760
  409777:	repz ret 
  409779:	repz ret 
  40977b:	nop    DWORD PTR [rax+rax*1+0x0]
  409780:	xor    eax,eax
  409782:	cmp    rcx,rdx
  409785:	sete   al
  409788:	ret    
  409789:	nop    DWORD PTR [rax+0x0]
  409790:	mov    eax,DWORD PTR [rdx]
  409792:	cmp    DWORD PTR [rcx],eax
  409794:	sete   al
  409797:	movzx  eax,al
  40979a:	ret    
  40979b:	nop    DWORD PTR [rax+rax*1+0x0]
  4097a0:	mov    eax,DWORD PTR [rcx]
  4097a2:	ret    
  4097a3:	nop    DWORD PTR [rax]
  4097a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097b0:	mov    rax,QWORD PTR [rdx]
  4097b3:	cmp    QWORD PTR [rcx],rax
  4097b6:	sete   al
  4097b9:	movzx  eax,al
  4097bc:	ret    
  4097bd:	nop    DWORD PTR [rax]
  4097c0:	mov    rax,QWORD PTR [rcx]
  4097c3:	ret    
  4097c4:	xchg   ax,ax
  4097c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097d0:	xor    eax,eax
  4097d2:	movsd  xmm0,QWORD PTR [rcx]
  4097d6:	ucomisd xmm0,QWORD PTR [rdx]
  4097da:	mov    edx,0x0
  4097df:	setnp  al
  4097e2:	cmovne eax,edx
  4097e5:	ret    
  4097e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097f0:	cvttsd2si rax,QWORD PTR [rcx]
  4097f5:	ret    
  4097f6:	nop
  4097f7:	nop
  4097f8:	nop
  4097f9:	nop
  4097fa:	nop
  4097fb:	nop
  4097fc:	nop
  4097fd:	nop
  4097fe:	nop
  4097ff:	nop
  409800:	push   r13
  409802:	push   r12
  409804:	push   rbp
  409805:	push   rdi
  409806:	push   rsi
  409807:	push   rbx
  409808:	sub    rsp,0x48
  40980c:	test   rcx,rcx
  40980f:	je     0x409923
  409815:	mov    r11,QWORD PTR [rcx+0x8]
  409819:	test   r11,r11
  40981c:	je     0x409901
  409822:	mov    r9,QWORD PTR [r11+0x8]
  409826:	test   r9,r9
  409829:	je     0x409918
  40982f:	mov    r10,QWORD PTR [r9+0x8]
  409833:	test   r10,r10
  409836:	jne    0x409850
  409838:	jmp    0x409918
  40983d:	nop    DWORD PTR [rax]
  409840:	mov    r10,QWORD PTR [r10+0x8]
  409844:	test   r10,r10
  409847:	je     0x409859
  409849:	mov    r11,r9
  40984c:	mov    r9,QWORD PTR [r9+0x8]
  409850:	mov    r10,QWORD PTR [r10+0x8]
  409854:	test   r10,r10
  409857:	jne    0x409840
  409859:	mov    r13,r8
  40985c:	mov    r12,rdx
  40985f:	mov    rsi,rcx
  409862:	mov    QWORD PTR [r11+0x8],0x0
  40986a:	mov    rcx,r9
  40986d:	call   0x409800
  409872:	mov    r8,r13
  409875:	mov    rbx,rax
  409878:	mov    rdx,r12
  40987b:	mov    rcx,rsi
  40987e:	call   0x409800
  409883:	test   rbx,rbx
  409886:	mov    rdi,rax
  409889:	je     0x409911
  40988f:	test   rax,rax
  409892:	je     0x409911
  409894:	xor    ebp,ebp
  409896:	lea    rsi,[rsp+0x20]
  40989b:	jmp    0x4098bc
  40989d:	nop    DWORD PTR [rax]
  4098a0:	mov    QWORD PTR [rsi+0x8],rbx
  4098a4:	mov    rsi,rbx
  4098a7:	mov    rbx,QWORD PTR [rbx+0x8]
  4098ab:	mov    QWORD PTR [rsi+0x10],rbp
  4098af:	test   rbx,rbx
  4098b2:	je     0x4098e0
  4098b4:	test   rdi,rdi
  4098b7:	je     0x4098e0
  4098b9:	mov    rbp,rsi
  4098bc:	mov    r8,r13
  4098bf:	mov    rdx,QWORD PTR [rbx]
  4098c2:	mov    rcx,QWORD PTR [rdi]
  4098c5:	call   r12
  4098c8:	test   eax,eax
  4098ca:	jg     0x4098a0
  4098cc:	mov    QWORD PTR [rsi+0x8],rdi
  4098d0:	test   rbx,rbx
  4098d3:	mov    rsi,rdi
  4098d6:	mov    rdi,QWORD PTR [rdi+0x8]
  4098da:	mov    QWORD PTR [rsi+0x10],rbp
  4098de:	jne    0x4098b4
  4098e0:	test   rdi,rdi
  4098e3:	cmovne rbx,rdi
  4098e7:	mov    QWORD PTR [rsi+0x8],rbx
  4098eb:	mov    rax,QWORD PTR [rsp+0x28]
  4098f0:	mov    QWORD PTR [rbx+0x10],rsi
  4098f4:	add    rsp,0x48
  4098f8:	pop    rbx
  4098f9:	pop    rsi
  4098fa:	pop    rdi
  4098fb:	pop    rbp
  4098fc:	pop    r12
  4098fe:	pop    r13
  409900:	ret    
  409901:	mov    rax,rcx
  409904:	add    rsp,0x48
  409908:	pop    rbx
  409909:	pop    rsi
  40990a:	pop    rdi
  40990b:	pop    rbp
  40990c:	pop    r12
  40990e:	pop    r13
  409910:	ret    
  409911:	lea    rsi,[rsp+0x20]
  409916:	jmp    0x4098e0
  409918:	mov    r9,r11
  40991b:	mov    r11,rcx
  40991e:	jmp    0x409859
  409923:	xor    eax,eax
  409925:	jmp    0x4098f4
  409927:	nop    WORD PTR [rax+rax*1+0x0]
  409930:	push   r13
  409932:	push   r12
  409934:	push   rbp
  409935:	push   rdi
  409936:	push   rsi
  409937:	push   rbx
  409938:	sub    rsp,0x28
  40993c:	test   r8,r8
  40993f:	mov    r13,rcx
  409942:	mov    rdi,rdx
  409945:	mov    rbp,r8
  409948:	mov    r12,r9
  40994b:	je     0x409a13
  409951:	test   rcx,rcx
  409954:	je     0x409a40
  40995a:	mov    r8,r12
  40995d:	mov    rdx,QWORD PTR [r13+0x0]
  409961:	mov    rcx,rdi
  409964:	call   rbp
  409966:	mov    rbx,QWORD PTR [r13+0x8]
  40996a:	mov    esi,eax
  40996c:	test   rbx,rbx
  40996f:	je     0x409a52
  409975:	test   eax,eax
  409977:	jg     0x409987
  409979:	jmp    0x4099d0
  40997b:	nop    DWORD PTR [rax+rax*1+0x0]
  409980:	test   eax,eax
  409982:	jle    0x4099d3
  409984:	mov    rbx,r10
  409987:	mov    r8,r12
  40998a:	mov    rdx,QWORD PTR [rbx]
  40998d:	mov    rcx,rdi
  409990:	call   rbp
  409992:	mov    r10,QWORD PTR [rbx+0x8]
  409996:	mov    esi,eax
  409998:	test   r10,r10
  40999b:	jne    0x409980
  40999d:	mov    ecx,0x18
  4099a2:	call   0x416750
  4099a7:	test   esi,esi
  4099a9:	mov    rdx,rax
  4099ac:	mov    QWORD PTR [rax],rdi
  4099af:	jle    0x4099e3
  4099b1:	cmp    QWORD PTR [rbx+0x8],0x0
  4099b6:	jne    0x4099e3
  4099b8:	mov    QWORD PTR [rbx+0x8],rax
  4099bc:	mov    QWORD PTR [rax+0x10],rbx
  4099c0:	mov    rax,r13
  4099c3:	add    rsp,0x28
  4099c7:	pop    rbx
  4099c8:	pop    rsi
  4099c9:	pop    rdi
  4099ca:	pop    rbp
  4099cb:	pop    r12
  4099cd:	pop    r13
  4099cf:	ret    
  4099d0:	mov    rbx,r13
  4099d3:	mov    ecx,0x18
  4099d8:	call   0x416750
  4099dd:	mov    rdx,rax
  4099e0:	mov    QWORD PTR [rax],rdi
  4099e3:	mov    rax,QWORD PTR [rbx+0x10]
  4099e7:	test   rax,rax
  4099ea:	je     0x4099f4
  4099ec:	mov    QWORD PTR [rax+0x8],rdx
  4099f0:	mov    QWORD PTR [rdx+0x10],rax
  4099f4:	cmp    rbx,r13
  4099f7:	mov    rax,r13
  4099fa:	mov    QWORD PTR [rdx+0x8],rbx
  4099fe:	cmove  rax,rdx
  409a02:	mov    QWORD PTR [rbx+0x10],rdx
  409a06:	add    rsp,0x28
  409a0a:	pop    rbx
  409a0b:	pop    rsi
  409a0c:	pop    rdi
  409a0d:	pop    rbp
  409a0e:	pop    r12
  409a10:	pop    r13
  409a12:	ret    
  409a13:	lea    r8,[rip+0x34626]        # 0x43e040
  409a1a:	lea    rdx,[rip+0x3465f]        # 0x43e080
  409a21:	lea    rcx,[rip+0x34625]        # 0x43e04d
  409a28:	call   0x40fd20
  409a2d:	mov    rax,r13
  409a30:	add    rsp,0x28
  409a34:	pop    rbx
  409a35:	pop    rsi
  409a36:	pop    rdi
  409a37:	pop    rbp
  409a38:	pop    r12
  409a3a:	pop    r13
  409a3c:	ret    
  409a3d:	nop    DWORD PTR [rax]
  409a40:	mov    ecx,0x18
  409a45:	call   0x416750
  409a4a:	mov    QWORD PTR [rax],rdi
  409a4d:	jmp    0x4099c3
  409a52:	mov    rbx,r13
  409a55:	jmp    0x40999d
  409a5a:	nop    WORD PTR [rax+rax*1+0x0]
  409a60:	mov    ecx,0x18
  409a65:	jmp    0x416750
  409a6a:	nop    WORD PTR [rax+rax*1+0x0]
  409a70:	mov    r8d,0x8
  409a76:	mov    rdx,rcx
  409a79:	mov    ecx,0x18
  409a7e:	jmp    0x416ac0
  409a83:	nop    DWORD PTR [rax]
  409a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a90:	mov    rdx,rcx
  409a93:	mov    ecx,0x18
  409a98:	jmp    0x4167c0
  409a9d:	nop    DWORD PTR [rax]
  409aa0:	push   rdi
  409aa1:	push   rsi
  409aa2:	push   rbx
  409aa3:	sub    rsp,0x20
  409aa7:	test   rcx,rcx
  409aaa:	mov    rdi,rcx
  409aad:	mov    rsi,rdx
  409ab0:	mov    rax,rcx
  409ab3:	je     0x409ac8
  409ab5:	mov    rbx,QWORD PTR [rax+0x8]
  409ab9:	xor    edx,edx
  409abb:	mov    rcx,QWORD PTR [rax]
  409abe:	call   rsi
  409ac0:	test   rbx,rbx
  409ac3:	mov    rax,rbx
  409ac6:	jne    0x409ab5
  409ac8:	mov    r8d,0x8
  409ace:	mov    rdx,rdi
  409ad1:	mov    ecx,0x18
  409ad6:	add    rsp,0x20
  409ada:	pop    rbx
  409adb:	pop    rsi
  409adc:	pop    rdi
  409add:	jmp    0x416ac0
  409ae2:	nop    DWORD PTR [rax+0x0]
  409ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409af0:	push   rsi
  409af1:	push   rbx
  409af2:	sub    rsp,0x28
  409af6:	mov    rbx,rcx
  409af9:	mov    ecx,0x18
  409afe:	mov    rsi,rdx
  409b01:	call   0x416130
  409b06:	test   rbx,rbx
  409b09:	mov    QWORD PTR [rax],rsi
  409b0c:	mov    QWORD PTR [rax+0x8],0x0
  409b14:	je     0x409b40
  409b16:	mov    r8,rbx
  409b19:	jmp    0x409b23
  409b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b20:	mov    r8,rdx
  409b23:	mov    rdx,QWORD PTR [r8+0x8]
  409b27:	test   rdx,rdx
  409b2a:	jne    0x409b20
  409b2c:	mov    QWORD PTR [r8+0x8],rax
  409b30:	mov    QWORD PTR [rax+0x10],r8
  409b34:	mov    rax,rbx
  409b37:	add    rsp,0x28
  409b3b:	pop    rbx
  409b3c:	pop    rsi
  409b3d:	ret    
  409b3e:	xchg   ax,ax
  409b40:	mov    QWORD PTR [rax+0x10],0x0
  409b48:	add    rsp,0x28
  409b4c:	pop    rbx
  409b4d:	pop    rsi
  409b4e:	ret    
  409b4f:	nop
  409b50:	push   rsi
  409b51:	push   rbx
  409b52:	sub    rsp,0x28
  409b56:	mov    rbx,rcx
  409b59:	mov    ecx,0x18
  409b5e:	mov    rsi,rdx
  409b61:	call   0x416130
  409b66:	test   rbx,rbx
  409b69:	mov    QWORD PTR [rax],rsi
  409b6c:	mov    QWORD PTR [rax+0x8],rbx
  409b70:	je     0x409b90
  409b72:	mov    rdx,QWORD PTR [rbx+0x10]
  409b76:	test   rdx,rdx
  409b79:	mov    QWORD PTR [rax+0x10],rdx
  409b7d:	je     0x409b83
  409b7f:	mov    QWORD PTR [rdx+0x8],rax
  409b83:	mov    QWORD PTR [rbx+0x10],rax
  409b87:	add    rsp,0x28
  409b8b:	pop    rbx
  409b8c:	pop    rsi
  409b8d:	ret    
  409b8e:	xchg   ax,ax
  409b90:	mov    QWORD PTR [rax+0x10],0x0
  409b98:	add    rsp,0x28
  409b9c:	pop    rbx
  409b9d:	pop    rsi
  409b9e:	ret    
  409b9f:	nop
  409ba0:	push   rdi
  409ba1:	push   rsi
  409ba2:	push   rbx
  409ba3:	sub    rsp,0x20
  409ba7:	test   r8d,r8d
  409baa:	js     0x409c20
  409bac:	je     0x409c10
  409bae:	sub    r8d,0x1
  409bb2:	test   rcx,rcx
  409bb5:	je     0x409c20
  409bb7:	mov    rbx,rcx
  409bba:	xor    r9d,r9d
  409bbd:	jmp    0x409bc9
  409bbf:	nop
  409bc0:	add    r9d,0x1
  409bc4:	test   rbx,rbx
  409bc7:	je     0x409c20
  409bc9:	cmp    r9d,r8d
  409bcc:	mov    rbx,QWORD PTR [rbx+0x8]
  409bd0:	jne    0x409bc0
  409bd2:	test   rbx,rbx
  409bd5:	je     0x409c20
  409bd7:	mov    rsi,rcx
  409bda:	mov    ecx,0x18
  409bdf:	mov    rdi,rdx
  409be2:	call   0x416130
  409be7:	mov    rdx,QWORD PTR [rbx+0x10]
  409beb:	mov    QWORD PTR [rax],rdi
  409bee:	mov    QWORD PTR [rax+0x10],rdx
  409bf2:	mov    rdx,QWORD PTR [rbx+0x10]
  409bf6:	mov    QWORD PTR [rdx+0x8],rax
  409bfa:	mov    QWORD PTR [rax+0x8],rbx
  409bfe:	mov    QWORD PTR [rbx+0x10],rax
  409c02:	mov    rax,rsi
  409c05:	add    rsp,0x20
  409c09:	pop    rbx
  409c0a:	pop    rsi
  409c0b:	pop    rdi
  409c0c:	ret    
  409c0d:	nop    DWORD PTR [rax]
  409c10:	add    rsp,0x20
  409c14:	pop    rbx
  409c15:	pop    rsi
  409c16:	pop    rdi
  409c17:	jmp    0x409b50
  409c1c:	nop    DWORD PTR [rax+0x0]
  409c20:	add    rsp,0x20
  409c24:	pop    rbx
  409c25:	pop    rsi
  409c26:	pop    rdi
  409c27:	jmp    0x409af0
  409c2c:	nop    DWORD PTR [rax+0x0]
  409c30:	push   rdi
  409c31:	push   rsi
  409c32:	push   rbx
  409c33:	sub    rsp,0x30
  409c37:	test   rcx,rcx
  409c3a:	mov    rsi,rcx
  409c3d:	mov    rbx,rdx
  409c40:	mov    rdi,r8
  409c43:	je     0x409cf1
  409c49:	test   rdx,rdx
  409c4c:	je     0x409c80
  409c4e:	mov    ecx,0x18
  409c53:	call   0x416130
  409c58:	mov    rdx,QWORD PTR [rbx+0x10]
  409c5c:	mov    QWORD PTR [rax],rdi
  409c5f:	mov    QWORD PTR [rax+0x8],rbx
  409c63:	mov    QWORD PTR [rbx+0x10],rax
  409c67:	test   rdx,rdx
  409c6a:	mov    QWORD PTR [rax+0x10],rdx
  409c6e:	je     0x409cc0
  409c70:	mov    QWORD PTR [rdx+0x8],rax
  409c74:	mov    rax,rsi
  409c77:	add    rsp,0x30
  409c7b:	pop    rbx
  409c7c:	pop    rsi
  409c7d:	pop    rdi
  409c7e:	ret    
  409c7f:	nop
  409c80:	mov    rbx,rcx
  409c83:	jmp    0x409c88
  409c85:	mov    rbx,rdx
  409c88:	mov    rdx,QWORD PTR [rbx+0x8]
  409c8c:	test   rdx,rdx
  409c8f:	jne    0x409c85
  409c91:	mov    ecx,0x18
  409c96:	call   0x416130
  409c9b:	mov    QWORD PTR [rbx+0x8],rax
  409c9f:	mov    QWORD PTR [rax],rdi
  409ca2:	mov    QWORD PTR [rax+0x10],rbx
  409ca6:	mov    QWORD PTR [rax+0x8],0x0
  409cae:	mov    rax,rsi
  409cb1:	add    rsp,0x30
  409cb5:	pop    rbx
  409cb6:	pop    rsi
  409cb7:	pop    rdi
  409cb8:	ret    
  409cb9:	nop    DWORD PTR [rax+0x0]
  409cc0:	cmp    rbx,rsi
  409cc3:	je     0x409c77
  409cc5:	lea    r8,[rip+0x34396]        # 0x43e062
  409ccc:	lea    rdx,[rip+0x343ed]        # 0x43e0c0
  409cd3:	lea    rcx,[rip+0x34373]        # 0x43e04d
  409cda:	mov    QWORD PTR [rsp+0x28],rax
  409cdf:	call   0x40fd20
  409ce4:	mov    rax,QWORD PTR [rsp+0x28]
  409ce9:	add    rsp,0x30
  409ced:	pop    rbx
  409cee:	pop    rsi
  409cef:	pop    rdi
  409cf0:	ret    
  409cf1:	mov    ecx,0x18
  409cf6:	call   0x416750
  409cfb:	test   rbx,rbx
  409cfe:	mov    QWORD PTR [rax],rdi
  409d01:	je     0x409c77
  409d07:	lea    r8,[rip+0x34344]        # 0x43e052
  409d0e:	lea    rdx,[rip+0x343ab]        # 0x43e0c0
  409d15:	lea    rcx,[rip+0x34331]        # 0x43e04d
  409d1c:	mov    QWORD PTR [rsp+0x28],rax
  409d21:	call   0x40fd20
  409d26:	mov    rax,QWORD PTR [rsp+0x28]
  409d2b:	jmp    0x409c77
  409d30:	test   rdx,rdx
  409d33:	mov    rax,rcx
  409d36:	je     0x409d56
  409d38:	test   rcx,rcx
  409d3b:	je     0x409d60
  409d3d:	mov    r9,rcx
  409d40:	jmp    0x409d45
  409d42:	mov    r9,r8
  409d45:	mov    r8,QWORD PTR [r9+0x8]
  409d49:	test   r8,r8
  409d4c:	jne    0x409d42
  409d4e:	mov    QWORD PTR [r9+0x8],rdx
  409d52:	mov    QWORD PTR [rdx+0x10],r9
  409d56:	repz ret 
  409d58:	nop    DWORD PTR [rax+rax*1+0x0]
  409d60:	xor    r9d,r9d
  409d63:	mov    rax,rdx
  409d66:	jmp    0x409d52
  409d68:	nop    DWORD PTR [rax+rax*1+0x0]
  409d70:	push   rbx
  409d71:	sub    rsp,0x20
  409d75:	test   rcx,rcx
  409d78:	mov    rbx,rcx
  409d7b:	je     0x409d9e
  409d7d:	cmp    QWORD PTR [rcx],rdx
  409d80:	mov    r8,rcx
  409d83:	jne    0x409d95
  409d85:	jmp    0x409db0
  409d87:	nop    WORD PTR [rax+rax*1+0x0]
  409d90:	cmp    QWORD PTR [r8],rdx
  409d93:	je     0x409db0
  409d95:	mov    r8,QWORD PTR [r8+0x8]
  409d99:	test   r8,r8
  409d9c:	jne    0x409d90
  409d9e:	mov    rax,rbx
  409da1:	add    rsp,0x20
  409da5:	pop    rbx
  409da6:	ret    
  409da7:	nop    WORD PTR [rax+rax*1+0x0]
  409db0:	mov    rax,QWORD PTR [r8+0x10]
  409db4:	test   rax,rax
  409db7:	je     0x409dc1
  409db9:	mov    rdx,QWORD PTR [r8+0x8]
  409dbd:	mov    QWORD PTR [rax+0x8],rdx
  409dc1:	mov    rdx,QWORD PTR [r8+0x8]
  409dc5:	test   rdx,rdx
  409dc8:	je     0x409dce
  409dca:	mov    QWORD PTR [rdx+0x10],rax
  409dce:	cmp    rbx,r8
  409dd1:	je     0x409df0
  409dd3:	mov    rdx,r8
  409dd6:	mov    ecx,0x18
  409ddb:	call   0x4167c0
  409de0:	mov    rax,rbx
  409de3:	add    rsp,0x20
  409de7:	pop    rbx
  409de8:	ret    
  409de9:	nop    DWORD PTR [rax+0x0]
  409df0:	mov    rbx,QWORD PTR [rbx+0x8]
  409df4:	jmp    0x409dd3
  409df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e00:	push   rdi
  409e01:	push   rsi
  409e02:	push   rbx
  409e03:	sub    rsp,0x20
  409e07:	test   rcx,rcx
  409e0a:	mov    rbx,rdx
  409e0d:	je     0x409e65
  409e0f:	mov    rdi,rcx
  409e12:	jmp    0x409e1d
  409e14:	mov    rcx,QWORD PTR [rcx+0x8]
  409e18:	test   rcx,rcx
  409e1b:	je     0x409e51
  409e1d:	cmp    QWORD PTR [rcx],rbx
  409e20:	jne    0x409e14
  409e22:	mov    rdx,QWORD PTR [rcx+0x10]
  409e26:	mov    rsi,QWORD PTR [rcx+0x8]
  409e2a:	test   rdx,rdx
  409e2d:	je     0x409e60
  409e2f:	mov    QWORD PTR [rdx+0x8],rsi
  409e33:	test   rsi,rsi
  409e36:	je     0x409e3c
  409e38:	mov    QWORD PTR [rsi+0x10],rdx
  409e3c:	mov    rdx,rcx
  409e3f:	mov    ecx,0x18
  409e44:	call   0x4167c0
  409e49:	mov    rcx,rsi
  409e4c:	test   rcx,rcx
  409e4f:	jne    0x409e1d
  409e51:	mov    rax,rdi
  409e54:	add    rsp,0x20
  409e58:	pop    rbx
  409e59:	pop    rsi
  409e5a:	pop    rdi
  409e5b:	ret    
  409e5c:	nop    DWORD PTR [rax+0x0]
  409e60:	mov    rdi,rsi
  409e63:	jmp    0x409e33
  409e65:	xor    edi,edi
  409e67:	jmp    0x409e51
  409e69:	nop    DWORD PTR [rax+0x0]
  409e70:	test   rdx,rdx
  409e73:	mov    rax,rcx
  409e76:	je     0x409eab
  409e78:	mov    r8,QWORD PTR [rdx+0x10]
  409e7c:	test   r8,r8
  409e7f:	je     0x409e89
  409e81:	mov    rcx,QWORD PTR [rdx+0x8]
  409e85:	mov    QWORD PTR [r8+0x8],rcx
  409e89:	mov    rcx,QWORD PTR [rdx+0x8]
  409e8d:	test   rcx,rcx
  409e90:	je     0x409e96
  409e92:	mov    QWORD PTR [rcx+0x10],r8
  409e96:	cmp    rax,rdx
  409e99:	je     0x409eb0
  409e9b:	mov    QWORD PTR [rdx+0x8],0x0
  409ea3:	mov    QWORD PTR [rdx+0x10],0x0
  409eab:	repz ret 
  409ead:	nop    DWORD PTR [rax]
  409eb0:	mov    rax,QWORD PTR [rax+0x8]
  409eb4:	jmp    0x409e9b
  409eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ec0:	push   rbx
  409ec1:	sub    rsp,0x20
  409ec5:	test   rdx,rdx
  409ec8:	mov    rbx,rcx
  409ecb:	je     0x409f00
  409ecd:	mov    r8,QWORD PTR [rdx+0x10]
  409ed1:	test   r8,r8
  409ed4:	je     0x409ede
  409ed6:	mov    rax,QWORD PTR [rdx+0x8]
  409eda:	mov    QWORD PTR [r8+0x8],rax
  409ede:	mov    rax,QWORD PTR [rdx+0x8]
  409ee2:	test   rax,rax
  409ee5:	je     0x409eeb
  409ee7:	mov    QWORD PTR [rax+0x10],r8
  409eeb:	cmp    rbx,rdx
  409eee:	je     0x409f13
  409ef0:	mov    QWORD PTR [rdx+0x8],0x0
  409ef8:	mov    QWORD PTR [rdx+0x10],0x0
  409f00:	mov    ecx,0x18
  409f05:	call   0x4167c0
  409f0a:	mov    rax,rbx
  409f0d:	add    rsp,0x20
  409f11:	pop    rbx
  409f12:	ret    
  409f13:	mov    rbx,QWORD PTR [rbx+0x8]
  409f17:	jmp    0x409ef0
  409f19:	nop    DWORD PTR [rax+0x0]
  409f20:	push   rdi
  409f21:	push   rsi
  409f22:	push   rbx
  409f23:	sub    rsp,0x20
  409f27:	test   rcx,rcx
  409f2a:	je     0x409f9c
  409f2c:	mov    rbx,rcx
  409f2f:	mov    ecx,0x18
  409f34:	call   0x416130
  409f39:	mov    rdi,rax
  409f3c:	mov    rax,QWORD PTR [rbx]
  409f3f:	mov    rbx,QWORD PTR [rbx+0x8]
  409f43:	mov    QWORD PTR [rdi+0x10],0x0
  409f4b:	test   rbx,rbx
  409f4e:	mov    QWORD PTR [rdi],rax
  409f51:	je     0x409f97
  409f53:	mov    rsi,rdi
  409f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f60:	mov    ecx,0x18
  409f65:	call   0x416130
  409f6a:	mov    rcx,QWORD PTR [rbx]
  409f6d:	mov    QWORD PTR [rsi+0x8],rax
  409f71:	mov    rbx,QWORD PTR [rbx+0x8]
  409f75:	mov    QWORD PTR [rax+0x10],rsi
  409f79:	mov    rsi,rax
  409f7c:	mov    QWORD PTR [rax],rcx
  409f7f:	test   rbx,rbx
  409f82:	jne    0x409f60
  409f84:	mov    QWORD PTR [rax+0x8],0x0
  409f8c:	mov    rax,rdi
  409f8f:	add    rsp,0x20
  409f93:	pop    rbx
  409f94:	pop    rsi
  409f95:	pop    rdi
  409f96:	ret    
  409f97:	mov    rax,rdi
  409f9a:	jmp    0x409f84
  409f9c:	xor    edi,edi
  409f9e:	jmp    0x409f8c
  409fa0:	test   rcx,rcx
  409fa3:	mov    rax,rcx
  409fa6:	jne    0x409fb3
  409fa8:	jmp    0x409fca
  409faa:	nop    WORD PTR [rax+rax*1+0x0]
  409fb0:	mov    rax,rdx
  409fb3:	mov    rdx,QWORD PTR [rax+0x8]
  409fb7:	mov    rcx,QWORD PTR [rax+0x10]
  409fbb:	test   rdx,rdx
  409fbe:	mov    QWORD PTR [rax+0x8],rcx
  409fc2:	mov    QWORD PTR [rax+0x10],rdx
  409fc6:	jne    0x409fb0
  409fc8:	repz ret 
  409fca:	repz ret 
  409fcc:	nop    DWORD PTR [rax+0x0]
  409fd0:	test   edx,edx
  409fd2:	mov    rax,rcx
  409fd5:	lea    ecx,[rdx-0x1]
  409fd8:	je     0x409ff3
  409fda:	test   rax,rax
  409fdd:	je     0x409ff3
  409fdf:	xor    edx,edx
  409fe1:	jmp    0x409feb
  409fe3:	add    edx,0x1
  409fe6:	test   rax,rax
  409fe9:	je     0x409ff3
  409feb:	cmp    edx,ecx
  409fed:	mov    rax,QWORD PTR [rax+0x8]
  409ff1:	jne    0x409fe3
  409ff3:	repz ret 
  409ff5:	nop
  409ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a000:	test   edx,edx
  40a002:	mov    rax,rcx
  40a005:	lea    ecx,[rdx-0x1]
  40a008:	je     0x40a023
  40a00a:	test   rax,rax
  40a00d:	je     0x40a023
  40a00f:	xor    edx,edx
  40a011:	jmp    0x40a01b
  40a013:	add    edx,0x1
  40a016:	test   rax,rax
  40a019:	je     0x40a023
  40a01b:	cmp    edx,ecx
  40a01d:	mov    rax,QWORD PTR [rax+0x10]
  40a021:	jne    0x40a013
  40a023:	repz ret 
  40a025:	nop
  40a026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a030:	test   edx,edx
  40a032:	lea    r8d,[rdx-0x1]
  40a036:	je     0x40a052
  40a038:	test   rcx,rcx
  40a03b:	je     0x40a060
  40a03d:	xor    eax,eax
  40a03f:	jmp    0x40a049
  40a041:	add    eax,0x1
  40a044:	test   rcx,rcx
  40a047:	je     0x40a060
  40a049:	cmp    eax,r8d
  40a04c:	mov    rcx,QWORD PTR [rcx+0x8]
  40a050:	jne    0x40a041
  40a052:	test   rcx,rcx
  40a055:	je     0x40a060
  40a057:	mov    rax,QWORD PTR [rcx]
  40a05a:	ret    
  40a05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a060:	xor    eax,eax
  40a062:	ret    
  40a063:	nop    DWORD PTR [rax]
  40a066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a070:	test   rcx,rcx
  40a073:	mov    rax,rcx
  40a076:	je     0x40a08e
  40a078:	cmp    QWORD PTR [rcx],rdx
  40a07b:	jne    0x40a085
  40a07d:	jmp    0x40a090
  40a07f:	nop
  40a080:	cmp    QWORD PTR [rax],rdx
  40a083:	je     0x40a08e
  40a085:	mov    rax,QWORD PTR [rax+0x8]
  40a089:	test   rax,rax
  40a08c:	jne    0x40a080
  40a08e:	repz ret 
  40a090:	repz ret 
  40a092:	nop    DWORD PTR [rax+0x0]
  40a096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0a0:	push   rdi
  40a0a1:	push   rsi
  40a0a2:	push   rbx
  40a0a3:	sub    rsp,0x20
  40a0a7:	test   r8,r8
  40a0aa:	mov    rbx,rcx
  40a0ad:	mov    rdi,rdx
  40a0b0:	mov    rsi,r8
  40a0b3:	jne    0x40a0d0
  40a0b5:	jmp    0x40a0e0
  40a0b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0c0:	mov    rdx,rdi
  40a0c3:	mov    rcx,QWORD PTR [rbx]
  40a0c6:	call   rsi
  40a0c8:	test   eax,eax
  40a0ca:	je     0x40a0fa
  40a0cc:	mov    rbx,QWORD PTR [rbx+0x8]
  40a0d0:	test   rbx,rbx
  40a0d3:	jne    0x40a0c0
  40a0d5:	xor    eax,eax
  40a0d7:	add    rsp,0x20
  40a0db:	pop    rbx
  40a0dc:	pop    rsi
  40a0dd:	pop    rdi
  40a0de:	ret    
  40a0df:	nop
  40a0e0:	lea    r8,[rip+0x33f59]        # 0x43e040
  40a0e7:	lea    rdx,[rip+0x33fb2]        # 0x43e0a0
  40a0ee:	lea    rcx,[rip+0x33f58]        # 0x43e04d
  40a0f5:	call   0x40fd20
  40a0fa:	mov    rax,rbx
  40a0fd:	add    rsp,0x20
  40a101:	pop    rbx
  40a102:	pop    rsi
  40a103:	pop    rdi
  40a104:	ret    
  40a105:	nop
  40a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a110:	mov    eax,0xffffffff
  40a115:	test   rcx,rcx
  40a118:	je     0x40a139
  40a11a:	xor    eax,eax
  40a11c:	cmp    rcx,rdx
  40a11f:	jne    0x40a128
  40a121:	jmp    0x40a142
  40a123:	cmp    rdx,rcx
  40a126:	je     0x40a140
  40a128:	mov    rcx,QWORD PTR [rcx+0x8]
  40a12c:	add    eax,0x1
  40a12f:	test   rcx,rcx
  40a132:	jne    0x40a123
  40a134:	mov    eax,0xffffffff
  40a139:	repz ret 
  40a13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a140:	repz ret 
  40a142:	xor    eax,eax
  40a144:	ret    
  40a145:	nop
  40a146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a150:	mov    eax,0xffffffff
  40a155:	test   rcx,rcx
  40a158:	je     0x40a179
  40a15a:	xor    eax,eax
  40a15c:	cmp    QWORD PTR [rcx],rdx
  40a15f:	jne    0x40a168
  40a161:	jmp    0x40a182
  40a163:	cmp    QWORD PTR [rcx],rdx
  40a166:	je     0x40a180
  40a168:	mov    rcx,QWORD PTR [rcx+0x8]
  40a16c:	add    eax,0x1
  40a16f:	test   rcx,rcx
  40a172:	jne    0x40a163
  40a174:	mov    eax,0xffffffff
  40a179:	repz ret 
  40a17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a180:	repz ret 
  40a182:	xor    eax,eax
  40a184:	ret    
  40a185:	nop
  40a186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a190:	test   rcx,rcx
  40a193:	mov    rax,rcx
  40a196:	jne    0x40a1a3
  40a198:	jmp    0x40a1b0
  40a19a:	nop    WORD PTR [rax+rax*1+0x0]
  40a1a0:	mov    rax,rdx
  40a1a3:	mov    rdx,QWORD PTR [rax+0x8]
  40a1a7:	test   rdx,rdx
  40a1aa:	jne    0x40a1a0
  40a1ac:	repz ret 
  40a1ae:	xchg   ax,ax
  40a1b0:	repz ret 
  40a1b2:	nop    DWORD PTR [rax+0x0]
  40a1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1c0:	test   rcx,rcx
  40a1c3:	mov    rax,rcx
  40a1c6:	jne    0x40a1d3
  40a1c8:	jmp    0x40a1e0
  40a1ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a1d0:	mov    rax,rdx
  40a1d3:	mov    rdx,QWORD PTR [rax+0x10]
  40a1d7:	test   rdx,rdx
  40a1da:	jne    0x40a1d0
  40a1dc:	repz ret 
  40a1de:	xchg   ax,ax
  40a1e0:	repz ret 
  40a1e2:	nop    DWORD PTR [rax+0x0]
  40a1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1f0:	xor    eax,eax
  40a1f2:	test   rcx,rcx
  40a1f5:	je     0x40a20e
  40a1f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a200:	mov    rcx,QWORD PTR [rcx+0x8]
  40a204:	add    eax,0x1
  40a207:	test   rcx,rcx
  40a20a:	jne    0x40a200
  40a20c:	repz ret 
  40a20e:	repz ret 
  40a210:	push   rdi
  40a211:	push   rsi
  40a212:	push   rbx
  40a213:	sub    rsp,0x20
  40a217:	test   rcx,rcx
  40a21a:	mov    rdi,rdx
  40a21d:	mov    rsi,r8
  40a220:	je     0x40a236
  40a222:	mov    rbx,QWORD PTR [rcx+0x8]
  40a226:	mov    rdx,rsi
  40a229:	mov    rcx,QWORD PTR [rcx]
  40a22c:	call   rdi
  40a22e:	test   rbx,rbx
  40a231:	mov    rcx,rbx
  40a234:	jne    0x40a222
  40a236:	add    rsp,0x20
  40a23a:	pop    rbx
  40a23b:	pop    rsi
  40a23c:	pop    rdi
  40a23d:	ret    
  40a23e:	xchg   ax,ax
  40a240:	xor    r9d,r9d
  40a243:	jmp    0x409930
  40a248:	nop    DWORD PTR [rax+rax*1+0x0]
  40a250:	jmp    0x409930
  40a255:	nop
  40a256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a260:	xor    r8d,r8d
  40a263:	jmp    0x409800
  40a268:	nop    DWORD PTR [rax+rax*1+0x0]
  40a270:	jmp    0x409800
  40a275:	nop
  40a276:	nop
  40a277:	nop
  40a278:	nop
  40a279:	nop
  40a27a:	nop
  40a27b:	nop
  40a27c:	nop
  40a27d:	nop
  40a27e:	nop
  40a27f:	nop
  40a280:	add    DWORD PTR [rcx],0x1
  40a283:	ret    
  40a284:	xchg   ax,ax
  40a286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a290:	mov    rax,QWORD PTR [rcx+0x8]
  40a294:	mov    QWORD PTR [r8],rax
  40a297:	mov    rax,QWORD PTR [rcx+0x10]
  40a29b:	mov    QWORD PTR [r9],rax
  40a29e:	ret    
  40a29f:	nop
  40a2a0:	xor    eax,eax
  40a2a2:	mov    DWORD PTR [rdx],0xffffffff
  40a2a8:	ret    
  40a2a9:	nop    DWORD PTR [rax+0x0]
  40a2b0:	ret    
  40a2b1:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2c0:	mov    eax,0x1
  40a2c5:	mov    DWORD PTR [rdx],0x0
  40a2cb:	ret    
  40a2cc:	nop    DWORD PTR [rax+0x0]
  40a2d0:	mov    eax,0x1
  40a2d5:	ret    
  40a2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2e0:	push   r13
  40a2e2:	push   r12
  40a2e4:	push   rbp
  40a2e5:	push   rdi
  40a2e6:	push   rsi
  40a2e7:	push   rbx
  40a2e8:	sub    rsp,0x28
  40a2ec:	test   rcx,rcx
  40a2ef:	je     0x40a4a0
  40a2f5:	test   rdx,rdx
  40a2f8:	mov    edi,r8d
  40a2fb:	mov    rsi,rdx
  40a2fe:	setne  r9b
  40a302:	test   r8d,r8d
  40a305:	mov    rbx,rcx
  40a308:	sete   al
  40a30b:	and    al,r9b
  40a30e:	mov    ebp,eax
  40a310:	jne    0x40a410
  40a316:	sub    DWORD PTR [rcx+0x18],0x1
  40a31a:	jne    0x40a500
  40a320:	test   r9b,r9b
  40a323:	mov    r13,QWORD PTR [rbx]
  40a326:	mov    r12,QWORD PTR [rbx+0x8]
  40a32a:	mov    QWORD PTR [rbx],0x0
  40a331:	mov    QWORD PTR [rbx+0x8],0x0
  40a339:	je     0x40a4d0
  40a33f:	test   BYTE PTR [rbx+0x2c],0x1
  40a343:	jne    0x40a43e
  40a349:	mov    rax,QWORD PTR [rbx+0x40]
  40a34d:	mov    rdx,QWORD PTR [rbx+0x48]
  40a351:	test   rax,rax
  40a354:	je     0x40a4f0
  40a35a:	mov    QWORD PTR [rax+0x48],rdx
  40a35e:	mov    rdx,QWORD PTR [rbx+0x48]
  40a362:	test   rdx,rdx
  40a365:	je     0x40a36b
  40a367:	mov    QWORD PTR [rdx+0x40],rax
  40a36b:	mov    rax,QWORD PTR [rbx+0x10]
  40a36f:	mov    QWORD PTR [rbx+0x40],0x0
  40a377:	mov    QWORD PTR [rbx+0x48],0x0
  40a37f:	cmp    QWORD PTR [rax+0x18],0x0
  40a384:	je     0x40a3a0
  40a386:	mov    rcx,rsi
  40a389:	call   0x426d70
  40a38e:	mov    rax,QWORD PTR [rbx+0x10]
  40a392:	mov    rcx,rbx
  40a395:	call   QWORD PTR [rax+0x18]
  40a398:	mov    rcx,rsi
  40a39b:	call   0x426d40
  40a3a0:	mov    rcx,QWORD PTR [rbx+0x50]
  40a3a4:	call   0x40e6e0
  40a3a9:	mov    rcx,QWORD PTR [rbx+0x38]
  40a3ad:	mov    QWORD PTR [rbx+0x50],0x0
  40a3b5:	call   0x4170b0
  40a3ba:	mov    rdx,QWORD PTR [rbx+0x58]
  40a3be:	mov    QWORD PTR [rbx+0x38],0x0
  40a3c6:	test   rdx,rdx
  40a3c9:	je     0x40a3dd
  40a3cb:	mov    ecx,0x10
  40a3d0:	call   0x4167c0
  40a3d5:	mov    QWORD PTR [rbx+0x58],0x0
  40a3dd:	mov    rcx,rbx
  40a3e0:	call   0x40e6e0
  40a3e5:	test   bpl,bpl
  40a3e8:	jne    0x40a466
  40a3ea:	test   r12,r12
  40a3ed:	je     0x40a500
  40a3f3:	test   edi,edi
  40a3f5:	jne    0x40a473
  40a3f7:	mov    rax,QWORD PTR [r12+0x8]
  40a3fc:	mov    rcx,r13
  40a3ff:	add    rsp,0x28
  40a403:	pop    rbx
  40a404:	pop    rsi
  40a405:	pop    rdi
  40a406:	pop    rbp
  40a407:	pop    r12
  40a409:	pop    r13
  40a40b:	rex.W jmp rax
  40a40e:	xchg   ax,ax
  40a410:	mov    rcx,rsi
  40a413:	call   0x426d40
  40a418:	sub    DWORD PTR [rbx+0x18],0x1
  40a41c:	jne    0x40a460
  40a41e:	test   BYTE PTR [rbx+0x2c],0x1
  40a422:	mov    r13,QWORD PTR [rbx]
  40a425:	mov    r12,QWORD PTR [rbx+0x8]
  40a429:	mov    QWORD PTR [rbx],0x0
  40a430:	mov    QWORD PTR [rbx+0x8],0x0
  40a438:	je     0x40a349
  40a43e:	lea    r8,[rip+0x33c9b]        # 0x43e0e0
  40a445:	lea    rcx,[rip+0x33d2c]        # 0x43e178
  40a44c:	mov    edx,0x10
  40a451:	call   0x40fae0
  40a456:	jmp    0x40a349
  40a45b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a460:	xor    r12d,r12d
  40a463:	xor    r13d,r13d
  40a466:	mov    rcx,rsi
  40a469:	call   0x426d70
  40a46e:	jmp    0x40a3ea
  40a473:	mov    rcx,rsi
  40a476:	call   0x426d70
  40a47b:	mov    rcx,r13
  40a47e:	call   QWORD PTR [r12+0x8]
  40a483:	mov    rcx,rsi
  40a486:	add    rsp,0x28
  40a48a:	pop    rbx
  40a48b:	pop    rsi
  40a48c:	pop    rdi
  40a48d:	pop    rbp
  40a48e:	pop    r12
  40a490:	pop    r13
  40a492:	jmp    0x426d40
  40a497:	nop    WORD PTR [rax+rax*1+0x0]
  40a4a0:	lea    r8,[rip+0x33cd6]        # 0x43e17d
  40a4a7:	lea    rdx,[rip+0x34a82]        # 0x43ef30
  40a4ae:	lea    rcx,[rip+0x33cc3]        # 0x43e178
  40a4b5:	add    rsp,0x28
  40a4b9:	pop    rbx
  40a4ba:	pop    rsi
  40a4bb:	pop    rdi
  40a4bc:	pop    rbp
  40a4bd:	pop    r12
  40a4bf:	pop    r13
  40a4c1:	jmp    0x40fd20
  40a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4d0:	mov    rax,QWORD PTR [rbx+0x10]
  40a4d4:	mov    rax,QWORD PTR [rax+0x18]
  40a4d8:	test   rax,rax
  40a4db:	je     0x40a3a0
  40a4e1:	mov    rcx,rbx
  40a4e4:	call   rax
  40a4e6:	jmp    0x40a3a0
  40a4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4f0:	mov    QWORD PTR [rsi+0x48],rdx
  40a4f4:	jmp    0x40a35e
  40a4f9:	nop    DWORD PTR [rax+0x0]
  40a500:	add    rsp,0x28
  40a504:	pop    rbx
  40a505:	pop    rsi
  40a506:	pop    rdi
  40a507:	pop    rbp
  40a508:	pop    r12
  40a50a:	pop    r13
  40a50c:	ret    
  40a50d:	nop    DWORD PTR [rax]
  40a510:	mov    rdx,rcx
  40a513:	mov    ecx,0x10
  40a518:	jmp    0x4167c0
  40a51d:	nop    DWORD PTR [rax]
  40a520:	push   rbx
  40a521:	sub    rsp,0x20
  40a525:	mov    r9,QWORD PTR [rcx+0x58]
  40a529:	mov    rbx,rcx
  40a52c:	test   r9,r9
  40a52f:	je     0x40a554
  40a531:	cmp    QWORD PTR [r9],rdx
  40a534:	mov    rax,QWORD PTR [r9+0x10]
  40a538:	jne    0x40a54f
  40a53a:	jmp    0x40a596
  40a53c:	nop    DWORD PTR [rax+0x0]
  40a540:	cmp    QWORD PTR [rax],rdx
  40a543:	mov    r8,QWORD PTR [rax+0x10]
  40a547:	je     0x40a570
  40a549:	mov    r9,rax
  40a54c:	mov    rax,r8
  40a54f:	test   rax,rax
  40a552:	jne    0x40a540
  40a554:	mov    rcx,QWORD PTR [rbx+0x80]
  40a55b:	mov    DWORD PTR [rbx+0x98],0x1
  40a565:	add    rsp,0x20
  40a569:	pop    rbx
  40a56a:	jmp    0x4261b0
  40a56f:	nop
  40a570:	mov    QWORD PTR [r9+0x10],r8
  40a574:	test   r8,r8
  40a577:	je     0x40a590
  40a579:	mov    QWORD PTR [r8+0x8],r9
  40a57d:	mov    rdx,rax
  40a580:	mov    ecx,0x20
  40a585:	call   0x4167c0
  40a58a:	sub    DWORD PTR [rbx+0x68],0x1
  40a58e:	jmp    0x40a554
  40a590:	mov    QWORD PTR [rbx+0x60],r9
  40a594:	jmp    0x40a57d
  40a596:	mov    r8,rax
  40a599:	mov    rax,r9
  40a59c:	xor    r9d,r9d
  40a59f:	mov    QWORD PTR [rcx+0x58],r8
  40a5a3:	jmp    0x40a574
  40a5a5:	nop
  40a5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5b0:	push   r12
  40a5b2:	push   rbp
  40a5b3:	push   rdi
  40a5b4:	push   rsi
  40a5b5:	push   rbx
  40a5b6:	sub    rsp,0x20
  40a5ba:	test   r8d,r8d
  40a5bd:	mov    rdi,rcx
  40a5c0:	mov    rsi,rdx
  40a5c3:	mov    ebp,r8d
  40a5c6:	je     0x40a6b0
  40a5cc:	mov    eax,DWORD PTR [rcx+0x2c]
  40a5cf:	test   al,0x1
  40a5d1:	je     0x40a69c
  40a5d7:	mov    rbx,QWORD PTR [rdi+0x8]
  40a5db:	and    eax,0xfffffffe
  40a5de:	mov    r12,QWORD PTR [rdi]
  40a5e1:	mov    DWORD PTR [rdi+0x2c],eax
  40a5e4:	mov    QWORD PTR [rdi],0x0
  40a5eb:	mov    QWORD PTR [rdi+0x8],0x0
  40a5f3:	test   rbx,rbx
  40a5f6:	je     0x40a611
  40a5f8:	mov    rcx,rsi
  40a5fb:	call   0x426d70
  40a600:	mov    rcx,r12
  40a603:	call   QWORD PTR [rbx+0x8]
  40a606:	mov    rcx,rsi
  40a609:	call   0x426d40
  40a60e:	mov    eax,DWORD PTR [rdi+0x2c]
  40a611:	test   al,0x40
  40a613:	jne    0x40a634
  40a615:	mov    rbx,QWORD PTR [rdi+0x38]
  40a619:	test   rbx,rbx
  40a61c:	je     0x40a634
  40a61e:	xchg   ax,ax
  40a620:	mov    rdx,QWORD PTR [rbx]
  40a623:	mov    rcx,rsi
  40a626:	call   0x40a520
  40a62b:	mov    rbx,QWORD PTR [rbx+0x8]
  40a62f:	test   rbx,rbx
  40a632:	jne    0x40a620
  40a634:	mov    rax,QWORD PTR [rdi+0x58]
  40a638:	test   rax,rax
  40a63b:	je     0x40a687
  40a63d:	mov    rbx,QWORD PTR [rax]
  40a640:	test   rbx,rbx
  40a643:	je     0x40a687
  40a645:	mov    rcx,QWORD PTR [rbx]
  40a648:	mov    r8d,0x1
  40a64e:	mov    rdx,rsi
  40a651:	call   0x40a5b0
  40a656:	mov    rcx,QWORD PTR [rbx]
  40a659:	mov    r8d,0x1
  40a65f:	mov    rdx,rsi
  40a662:	call   0x40a2e0
  40a667:	mov    rbx,QWORD PTR [rbx+0x8]
  40a66b:	test   rbx,rbx
  40a66e:	jne    0x40a645
  40a670:	mov    rax,QWORD PTR [rdi+0x58]
  40a674:	mov    rcx,QWORD PTR [rax]
  40a677:	call   0x4170b0
  40a67c:	mov    rax,QWORD PTR [rdi+0x58]
  40a680:	mov    QWORD PTR [rax],0x0
  40a687:	mov    r8d,0x1
  40a68d:	mov    rdx,rsi
  40a690:	mov    rcx,rdi
  40a693:	call   0x40a2e0
  40a698:	test   ebp,ebp
  40a69a:	je     0x40a6c3
  40a69c:	add    rsp,0x20
  40a6a0:	pop    rbx
  40a6a1:	pop    rsi
  40a6a2:	pop    rdi
  40a6a3:	pop    rbp
  40a6a4:	pop    r12
  40a6a6:	ret    
  40a6a7:	nop    WORD PTR [rax+rax*1+0x0]
  40a6b0:	mov    rcx,rdx
  40a6b3:	call   0x426d40
  40a6b8:	mov    eax,DWORD PTR [rdi+0x2c]
  40a6bb:	test   al,0x1
  40a6bd:	jne    0x40a5d7
  40a6c3:	mov    rcx,rsi
  40a6c6:	add    rsp,0x20
  40a6ca:	pop    rbx
  40a6cb:	pop    rsi
  40a6cc:	pop    rdi
  40a6cd:	pop    rbp
  40a6ce:	pop    r12
  40a6d0:	jmp    0x426d70
  40a6d5:	nop
  40a6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6e0:	push   rsi
  40a6e1:	push   rbx
  40a6e2:	sub    rsp,0x28
  40a6e6:	mov    eax,DWORD PTR [rcx+0x2c]
  40a6e9:	test   al,0x40
  40a6eb:	jne    0x40a750
  40a6ed:	mov    rbx,QWORD PTR [rcx+0x38]
  40a6f1:	or     eax,0x40
  40a6f4:	mov    rsi,rcx
  40a6f7:	mov    DWORD PTR [rcx+0x2c],eax
  40a6fa:	test   rbx,rbx
  40a6fd:	je     0x40a715
  40a6ff:	nop
  40a700:	mov    rdx,QWORD PTR [rbx]
  40a703:	mov    rcx,QWORD PTR [rsi+0x20]
  40a707:	call   0x40a520
  40a70c:	mov    rbx,QWORD PTR [rbx+0x8]
  40a710:	test   rbx,rbx
  40a713:	jne    0x40a700
  40a715:	mov    rax,QWORD PTR [rsi+0x58]
  40a719:	test   rax,rax
  40a71c:	je     0x40a741
  40a71e:	mov    rbx,QWORD PTR [rax]
  40a721:	test   rbx,rbx
  40a724:	je     0x40a741
  40a726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a730:	mov    rcx,QWORD PTR [rbx]
  40a733:	call   0x40a6e0
  40a738:	mov    rbx,QWORD PTR [rbx+0x8]
  40a73c:	test   rbx,rbx
  40a73f:	jne    0x40a730
  40a741:	add    rsp,0x28
  40a745:	pop    rbx
  40a746:	pop    rsi
  40a747:	ret    
  40a748:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	lea    r8,[rip+0x33a35]        # 0x43e18c
  40a757:	lea    rdx,[rip+0x343d1]        # 0x43eb2f
  40a75e:	lea    rcx,[rip+0x33a13]        # 0x43e178
  40a765:	add    rsp,0x28
  40a769:	pop    rbx
  40a76a:	pop    rsi
  40a76b:	jmp    0x40fd20
  40a770:	push   rdi
  40a771:	push   rsi
  40a772:	push   rbx
  40a773:	sub    rsp,0x20
  40a777:	mov    rsi,rcx
  40a77a:	mov    ecx,0x20
  40a77f:	mov    ebx,edx
  40a781:	mov    rdi,r8
  40a784:	call   0x416130
  40a789:	mov    r9,QWORD PTR [rsi+0x60]
  40a78d:	xor    edx,edx
  40a78f:	mov    QWORD PTR [rax],rdi
  40a792:	mov    WORD PTR [rdi+0xa],dx
  40a796:	mov    DWORD PTR [rax+0x18],ebx
  40a799:	test   r9,r9
  40a79c:	je     0x40a7c2
  40a79e:	cmp    ebx,DWORD PTR [r9+0x18]
  40a7a2:	jl     0x40a7b9
  40a7a4:	jmp    0x40a7fb
  40a7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7b0:	cmp    ebx,DWORD PTR [r8+0x18]
  40a7b4:	jge    0x40a801
  40a7b6:	mov    r9,r8
  40a7b9:	mov    r8,QWORD PTR [r9+0x8]
  40a7bd:	test   r8,r8
  40a7c0:	jne    0x40a7b0
  40a7c2:	xor    r8d,r8d
  40a7c5:	test   r9,r9
  40a7c8:	mov    QWORD PTR [rsi+0x58],rax
  40a7cc:	mov    QWORD PTR [rax+0x8],r8
  40a7d0:	mov    QWORD PTR [rax+0x10],r9
  40a7d4:	je     0x40a812
  40a7d6:	mov    QWORD PTR [r9+0x8],rax
  40a7da:	add    DWORD PTR [rsi+0x68],0x1
  40a7de:	mov    rcx,QWORD PTR [rsi+0x80]
  40a7e5:	mov    DWORD PTR [rsi+0x98],0x1
  40a7ef:	add    rsp,0x20
  40a7f3:	pop    rbx
  40a7f4:	pop    rsi
  40a7f5:	pop    rdi
  40a7f6:	jmp    0x4261b0
  40a7fb:	mov    r8,r9
  40a7fe:	xor    r9d,r9d
  40a801:	test   r9,r9
  40a804:	mov    QWORD PTR [r8+0x10],rax
  40a808:	mov    QWORD PTR [rax+0x8],r8
  40a80c:	mov    QWORD PTR [rax+0x10],r9
  40a810:	jne    0x40a7d6
  40a812:	mov    QWORD PTR [rsi+0x60],rax
  40a816:	jmp    0x40a7da
  40a818:	nop    DWORD PTR [rax+rax*1+0x0]
  40a820:	push   rsi
  40a821:	push   rbx
  40a822:	sub    rsp,0x28
  40a826:	mov    eax,DWORD PTR [rcx+0x2c]
  40a829:	test   al,0x40
  40a82b:	je     0x40a890
  40a82d:	test   al,0x1
  40a82f:	je     0x40a8b0
  40a831:	mov    rbx,QWORD PTR [rcx+0x38]
  40a835:	and    eax,0xffffffbf
  40a838:	mov    rsi,rcx
  40a83b:	mov    DWORD PTR [rcx+0x2c],eax
  40a83e:	test   rbx,rbx
  40a841:	je     0x40a85b
  40a843:	mov    r8,QWORD PTR [rbx]
  40a846:	mov    edx,DWORD PTR [rsi+0x28]
  40a849:	mov    rcx,QWORD PTR [rsi+0x20]
  40a84d:	call   0x40a770
  40a852:	mov    rbx,QWORD PTR [rbx+0x8]
  40a856:	test   rbx,rbx
  40a859:	jne    0x40a843
  40a85b:	mov    rax,QWORD PTR [rsi+0x58]
  40a85f:	test   rax,rax
  40a862:	je     0x40a881
  40a864:	mov    rbx,QWORD PTR [rax]
  40a867:	test   rbx,rbx
  40a86a:	je     0x40a881
  40a86c:	nop    DWORD PTR [rax+0x0]
  40a870:	mov    rcx,QWORD PTR [rbx]
  40a873:	call   0x40a820
  40a878:	mov    rbx,QWORD PTR [rbx+0x8]
  40a87c:	test   rbx,rbx
  40a87f:	jne    0x40a870
  40a881:	add    rsp,0x28
  40a885:	pop    rbx
  40a886:	pop    rsi
  40a887:	ret    
  40a888:	nop    DWORD PTR [rax+rax*1+0x0]
  40a890:	lea    r8,[rip+0x3390e]        # 0x43e1a5
  40a897:	lea    rdx,[rip+0x34282]        # 0x43eb20
  40a89e:	lea    rcx,[rip+0x338d3]        # 0x43e178
  40a8a5:	add    rsp,0x28
  40a8a9:	pop    rbx
  40a8aa:	pop    rsi
  40a8ab:	jmp    0x40fd20
  40a8b0:	lea    r8,[rip+0x33906]        # 0x43e1bd
  40a8b7:	jmp    0x40a897
  40a8b9:	nop    DWORD PTR [rax+0x0]
  40a8c0:	lea    rdx,[rip+0x1a39]        # 0x40c300
  40a8c7:	jmp    0x413880
  40a8cc:	nop    DWORD PTR [rax+0x0]
  40a8d0:	mov    rax,QWORD PTR [rcx+0x58]
  40a8d4:	test   rax,rax
  40a8d7:	je     0x40a900
  40a8d9:	mov    rax,QWORD PTR [rax+0x8]
  40a8dd:	test   rax,rax
  40a8e0:	je     0x40a900
  40a8e2:	mov    r8,QWORD PTR [rax+0x40]
  40a8e6:	test   r8,r8
  40a8e9:	mov    QWORD PTR [rcx+0x48],rax
  40a8ed:	mov    QWORD PTR [rax+0x40],rcx
  40a8f1:	mov    QWORD PTR [rcx+0x40],r8
  40a8f5:	je     0x40a940
  40a8f7:	mov    QWORD PTR [r8+0x48],rcx
  40a8fb:	ret    
  40a8fc:	nop    DWORD PTR [rax+0x0]
  40a900:	mov    r8,QWORD PTR [rdx]
  40a903:	test   r8,r8
  40a906:	je     0x40a926
  40a908:	mov    r9d,DWORD PTR [rcx+0x28]
  40a90c:	cmp    DWORD PTR [r8+0x28],r9d
  40a910:	jle    0x40a91d
  40a912:	jmp    0x40a944
  40a914:	cmp    DWORD PTR [rax+0x28],r9d
  40a918:	jg     0x40a8e6
  40a91a:	mov    r8,rax
  40a91d:	mov    rax,QWORD PTR [r8+0x48]
  40a921:	test   rax,rax
  40a924:	jne    0x40a914
  40a926:	test   r8,r8
  40a929:	mov    QWORD PTR [rcx+0x48],0x0
  40a931:	mov    QWORD PTR [rcx+0x40],r8
  40a935:	jne    0x40a8f7
  40a937:	nop    WORD PTR [rax+rax*1+0x0]
  40a940:	mov    QWORD PTR [rdx],rcx
  40a943:	ret    
  40a944:	mov    rax,r8
  40a947:	xor    r8d,r8d
  40a94a:	jmp    0x40a8e6
  40a94c:	nop    DWORD PTR [rax+0x0]
  40a950:	push   rbp
  40a951:	push   rdi
  40a952:	push   rsi
  40a953:	push   rbx
  40a954:	sub    rsp,0x28
  40a958:	mov    ebp,DWORD PTR [rdx+0x44]
  40a95b:	mov    rdi,rcx
  40a95e:	mov    rsi,rdx
  40a961:	mov    QWORD PTR [rdi+0x20],rdx
  40a965:	lea    rdx,[rdx+0x48]
  40a969:	lea    eax,[rbp+0x1]
  40a96c:	mov    DWORD PTR [rdx-0x4],eax
  40a96f:	add    DWORD PTR [rcx+0x18],0x1
  40a973:	mov    DWORD PTR [rcx+0x30],ebp
  40a976:	call   0x40a8d0
  40a97b:	mov    rbx,QWORD PTR [rdi+0x38]
  40a97f:	test   rbx,rbx
  40a982:	je     0x40a99b
  40a984:	mov    r8,QWORD PTR [rbx]
  40a987:	mov    edx,DWORD PTR [rdi+0x28]
  40a98a:	mov    rcx,rsi
  40a98d:	call   0x40a770
  40a992:	mov    rbx,QWORD PTR [rbx+0x8]
  40a996:	test   rbx,rbx
  40a999:	jne    0x40a984
  40a99b:	mov    rax,QWORD PTR [rdi+0x58]
  40a99f:	test   rax,rax
  40a9a2:	je     0x40a9c4
  40a9a4:	mov    rbx,QWORD PTR [rax]
  40a9a7:	test   rbx,rbx
  40a9aa:	je     0x40a9c4
  40a9ac:	nop    DWORD PTR [rax+0x0]
  40a9b0:	mov    rcx,QWORD PTR [rbx]
  40a9b3:	mov    rdx,rsi
  40a9b6:	call   0x40a950
  40a9bb:	mov    rbx,QWORD PTR [rbx+0x8]
  40a9bf:	test   rbx,rbx
  40a9c2:	jne    0x40a9b0
  40a9c4:	mov    eax,ebp
  40a9c6:	add    rsp,0x28
  40a9ca:	pop    rbx
  40a9cb:	pop    rsi
  40a9cc:	pop    rdi
  40a9cd:	pop    rbp
  40a9ce:	ret    
  40a9cf:	nop
  40a9d0:	push   rbp
  40a9d1:	push   rdi
  40a9d2:	push   rsi
  40a9d3:	push   rbx
  40a9d4:	sub    rsp,0x28
  40a9d8:	mov    rbp,rcx
  40a9db:	test   rdx,rdx
  40a9de:	mov    rsi,rdx
  40a9e1:	mov    edi,r8d
  40a9e4:	mov    DWORD PTR [rbp+0x28],r8d
  40a9e8:	je     0x40aa32
  40a9ea:	mov    rax,QWORD PTR [rcx+0x40]
  40a9ee:	mov    rdx,QWORD PTR [rcx+0x20]
  40a9f2:	mov    rcx,QWORD PTR [rcx+0x48]
  40a9f6:	test   rax,rax
  40a9f9:	je     0x40aa93
  40a9ff:	mov    QWORD PTR [rax+0x48],rcx
  40aa03:	mov    rcx,QWORD PTR [rbp+0x48]
  40aa07:	test   rcx,rcx
  40aa0a:	je     0x40aa10
  40aa0c:	mov    QWORD PTR [rcx+0x40],rax
  40aa10:	add    rdx,0x48
  40aa14:	mov    QWORD PTR [rbp+0x40],0x0
  40aa1c:	mov    QWORD PTR [rbp+0x48],0x0
  40aa24:	mov    rcx,rbp
  40aa27:	call   0x40a8d0
  40aa2c:	test   BYTE PTR [rbp+0x2c],0x40
  40aa30:	je     0x40aa63
  40aa32:	mov    rax,QWORD PTR [rbp+0x58]
  40aa36:	test   rax,rax
  40aa39:	je     0x40aa5a
  40aa3b:	mov    rbx,QWORD PTR [rax]
  40aa3e:	test   rbx,rbx
  40aa41:	je     0x40aa5a
  40aa43:	mov    rcx,QWORD PTR [rbx]
  40aa46:	mov    r8d,edi
  40aa49:	mov    rdx,rsi
  40aa4c:	call   0x40a9d0
  40aa51:	mov    rbx,QWORD PTR [rbx+0x8]
  40aa55:	test   rbx,rbx
  40aa58:	jne    0x40aa43
  40aa5a:	add    rsp,0x28
  40aa5e:	pop    rbx
  40aa5f:	pop    rsi
  40aa60:	pop    rdi
  40aa61:	pop    rbp
  40aa62:	ret    
  40aa63:	mov    rbx,QWORD PTR [rbp+0x38]
  40aa67:	test   rbx,rbx
  40aa6a:	je     0x40aa32
  40aa6c:	nop    DWORD PTR [rax+0x0]
  40aa70:	mov    rdx,QWORD PTR [rbx]
  40aa73:	mov    rcx,rsi
  40aa76:	call   0x40a520
  40aa7b:	mov    r8,QWORD PTR [rbx]
  40aa7e:	mov    edx,edi
  40aa80:	mov    rcx,rsi
  40aa83:	call   0x40a770
  40aa88:	mov    rbx,QWORD PTR [rbx+0x8]
  40aa8c:	test   rbx,rbx
  40aa8f:	jne    0x40aa70
  40aa91:	jmp    0x40aa32
  40aa93:	mov    QWORD PTR [rdx+0x48],rcx
  40aa97:	mov    rdx,QWORD PTR [rbp+0x20]
  40aa9b:	jmp    0x40aa03
  40aaa0:	sub    rsp,0x28
  40aaa4:	test   rdx,rdx
  40aaa7:	mov    rax,rdx
  40aaaa:	je     0x40aac0
  40aaac:	mov    edx,DWORD PTR [rcx+0x68]
  40aaaf:	mov    rcx,QWORD PTR [rcx+0x60]
  40aab3:	call   rax
  40aab5:	xor    eax,eax
  40aab7:	add    rsp,0x28
  40aabb:	ret    
  40aabc:	nop    DWORD PTR [rax+0x0]
  40aac0:	lea    r8,[rip+0x33711]        # 0x43e1d8
  40aac7:	lea    rcx,[rip+0x336aa]        # 0x43e178
  40aace:	mov    edx,0x10
  40aad3:	call   0x40fae0
  40aad8:	xor    eax,eax
  40aada:	add    rsp,0x28
  40aade:	ret    
  40aadf:	nop
  40aae0:	sub    rsp,0x28
  40aae4:	test   rdx,rdx
  40aae7:	je     0x40aaf3
  40aae9:	mov    rcx,r8
  40aaec:	add    rsp,0x28
  40aaf0:	rex.W jmp rdx
  40aaf3:	lea    r8,[rip+0x33736]        # 0x43e230
  40aafa:	lea    rcx,[rip+0x33677]        # 0x43e178
  40ab01:	mov    edx,0x10
  40ab06:	call   0x40fae0
  40ab0b:	xor    eax,eax
  40ab0d:	add    rsp,0x28
  40ab11:	ret    
  40ab12:	nop    DWORD PTR [rax+0x0]
  40ab16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab20:	push   rsi
  40ab21:	push   rbx
  40ab22:	sub    rsp,0x28
  40ab26:	movsxd r9,DWORD PTR [rip+0x2f533]        # 0x43a060
  40ab2d:	mov    rbx,rcx
  40ab30:	cmp    r9d,0xffffffff
  40ab34:	je     0x40ab90
  40ab36:	mov    r8,QWORD PTR [rbx]
  40ab39:	movabs rdx,0x431bde82d7b634db
  40ab43:	sub    r8,r9
  40ab46:	mov    rax,r8
  40ab49:	imul   rdx
  40ab4c:	mov    rax,r8
  40ab4f:	sar    rax,0x3f
  40ab53:	sar    rdx,0x12
  40ab57:	sub    rdx,rax
  40ab5a:	mov    rax,r8
  40ab5d:	imul   rdx,rdx,0xf4240
  40ab64:	sub    rax,rdx
  40ab67:	mov    rdx,rax
  40ab6a:	lea    rax,[r8+0xf4240]
  40ab71:	cmp    rdx,0x3d090
  40ab78:	cmovge r8,rax
  40ab7c:	sub    r8,rdx
  40ab7f:	add    r8,r9
  40ab82:	mov    QWORD PTR [rbx],r8
  40ab85:	add    rsp,0x28
  40ab89:	pop    rbx
  40ab8a:	pop    rsi
  40ab8b:	ret    
  40ab8c:	nop    DWORD PTR [rax+0x0]
  40ab90:	lea    rcx,[rip+0x336e8]        # 0x43e27f
  40ab97:	call   0x4059c0
  40ab9c:	test   rax,rax
  40ab9f:	mov    rsi,rax
  40aba2:	je     0x40abf3
  40aba4:	mov    rcx,rsi
  40aba7:	call   0x409750
  40abac:	test   eax,eax
  40abae:	mov    rcx,rsi
  40abb1:	js     0x40abe3
  40abb3:	call   0x409750
  40abb8:	mov    edx,0x431bde83
  40abbd:	mov    ecx,eax
  40abbf:	imul   edx
  40abc1:	mov    eax,ecx
  40abc3:	sar    eax,0x1f
  40abc6:	sar    edx,0x12
  40abc9:	sub    edx,eax
  40abcb:	imul   r9d,edx,0xf4240
  40abd2:	sub    ecx,r9d
  40abd5:	mov    DWORD PTR [rip+0x2f485],ecx        # 0x43a060
  40abdb:	movsxd r9,ecx
  40abde:	jmp    0x40ab36
  40abe3:	call   0x409750
  40abe8:	neg    eax
  40abea:	mov    edx,0x431bde83
  40abef:	mov    ecx,eax
  40abf1:	jmp    0x40abbf
  40abf3:	lea    rcx,[rip+0x3369e]        # 0x43e298
  40abfa:	call   0x4059c0
  40abff:	test   rax,rax
  40ac02:	mov    rsi,rax
  40ac05:	jne    0x40aba4
  40ac07:	mov    DWORD PTR [rip+0x2f44f],0x0        # 0x43a060
  40ac11:	xor    r9d,r9d
  40ac14:	jmp    0x40ab36
  40ac19:	nop    DWORD PTR [rax+0x0]
  40ac20:	push   rdi
  40ac21:	push   rsi
  40ac22:	push   rbx
  40ac23:	sub    rsp,0x30
  40ac27:	movzx  edx,WORD PTR [rcx+0x7a]
  40ac2b:	and    edx,0x1
  40ac2e:	test   dx,dx
  40ac31:	movzx  esi,dx
  40ac34:	jne    0x40ac40
  40ac36:	mov    eax,esi
  40ac38:	add    rsp,0x30
  40ac3c:	pop    rbx
  40ac3d:	pop    rsi
  40ac3e:	pop    rdi
  40ac3f:	ret    
  40ac40:	mov    rbx,rcx
  40ac43:	lea    rdx,[rsp+0x2c]
  40ac48:	mov    rcx,QWORD PTR [rcx+0x60]
  40ac4c:	call   QWORD PTR [rip+0x7ba7e]        # 0x4866d0
  40ac52:	test   eax,eax
  40ac54:	je     0x40ac70
  40ac56:	mov    eax,DWORD PTR [rsp+0x2c]
  40ac5a:	mov    DWORD PTR [rbx+0x68],eax
  40ac5d:	mov    eax,esi
  40ac5f:	add    rsp,0x30
  40ac63:	pop    rbx
  40ac64:	pop    rsi
  40ac65:	pop    rdi
  40ac66:	ret    
  40ac67:	nop    WORD PTR [rax+rax*1+0x0]
  40ac70:	call   QWORD PTR [rip+0x7ba72]        # 0x4866e8
  40ac76:	mov    ecx,eax
  40ac78:	call   0x427760
  40ac7d:	lea    r8,[rip+0x33624]        # 0x43e2a8
  40ac84:	lea    rcx,[rip+0x334ed]        # 0x43e178
  40ac8b:	mov    rdi,rax
  40ac8e:	mov    r9,rax
  40ac91:	mov    edx,0x10
  40ac96:	call   0x40fae0
  40ac9b:	mov    rcx,rdi
  40ac9e:	call   0x40e6e0
  40aca3:	mov    eax,esi
  40aca5:	mov    DWORD PTR [rbx+0x68],0xffffffff
  40acac:	add    rsp,0x30
  40acb0:	pop    rbx
  40acb1:	pop    rsi
  40acb2:	pop    rdi
  40acb3:	ret    
  40acb4:	xchg   ax,ax
  40acb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acc0:	push   rbx
  40acc1:	sub    rsp,0x20
  40acc5:	sub    DWORD PTR [rcx],0x1
  40acc8:	jne    0x40acf0
  40acca:	mov    rax,QWORD PTR [rcx+0x18]
  40acce:	mov    rbx,rcx
  40acd1:	test   rax,rax
  40acd4:	je     0x40acdc
  40acd6:	mov    rcx,QWORD PTR [rcx+0x10]
  40acda:	call   rax
  40acdc:	mov    rcx,rbx
  40acdf:	add    rsp,0x20
  40ace3:	pop    rbx
  40ace4:	jmp    0x40e6e0
  40ace9:	nop    DWORD PTR [rax+0x0]
  40acf0:	add    rsp,0x20
  40acf4:	pop    rbx
  40acf5:	ret    
  40acf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad00:	sub    rsp,0x38
  40ad04:	lea    rcx,[rip+0x2f335]        # 0x43a040
  40ad0b:	call   0x426ff0
  40ad10:	test   rax,rax
  40ad13:	je     0x40ad20
  40ad15:	add    rsp,0x38
  40ad19:	ret    
  40ad1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ad20:	mov    ecx,0x10
  40ad25:	call   0x416750
  40ad2a:	lea    rcx,[rip+0x2f30f]        # 0x43a040
  40ad31:	mov    rdx,rax
  40ad34:	mov    QWORD PTR [rsp+0x28],rax
  40ad39:	call   0x427020
  40ad3e:	mov    rax,QWORD PTR [rsp+0x28]
  40ad43:	add    rsp,0x38
  40ad47:	ret    
  40ad48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad50:	sub    rsp,0x28
  40ad54:	test   rcx,rcx
  40ad57:	je     0x40ad91
  40ad59:	mfence 
  40ad5c:	mov    eax,DWORD PTR [rcx+0x30]
  40ad5f:	test   eax,eax
  40ad61:	jle    0x40ad70
  40ad63:	lock add DWORD PTR [rcx+0x30],0x1
  40ad68:	mov    rax,rcx
  40ad6b:	add    rsp,0x28
  40ad6f:	ret    
  40ad70:	lea    r8,[rip+0x335c1]        # 0x43e338
  40ad77:	lea    rdx,[rip+0x341f2]        # 0x43ef70
  40ad7e:	lea    rcx,[rip+0x333f3]        # 0x43e178
  40ad85:	call   0x40fd20
  40ad8a:	xor    eax,eax
  40ad8c:	add    rsp,0x28
  40ad90:	ret    
  40ad91:	lea    r8,[rip+0x3358c]        # 0x43e324
  40ad98:	lea    rdx,[rip+0x341d1]        # 0x43ef70
  40ad9f:	lea    rcx,[rip+0x333d2]        # 0x43e178
  40ada6:	call   0x40fd20
  40adab:	xor    eax,eax
  40adad:	add    rsp,0x28
  40adb1:	ret    
  40adb2:	nop    DWORD PTR [rax+0x0]
  40adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adc0:	push   rsi
  40adc1:	push   rbx
  40adc2:	sub    rsp,0x28
  40adc6:	test   rcx,rcx
  40adc9:	je     0x40aec0
  40adcf:	mfence 
  40add2:	mov    eax,DWORD PTR [rcx+0x30]
  40add5:	test   eax,eax
  40add7:	jle    0x40adf0
  40add9:	lock sub DWORD PTR [rcx+0x30],0x1
  40adde:	je     0x40ae10
  40ade0:	add    rsp,0x28
  40ade4:	pop    rbx
  40ade5:	pop    rsi
  40ade6:	ret    
  40ade7:	nop    WORD PTR [rax+rax*1+0x0]
  40adf0:	lea    r8,[rip+0x33541]        # 0x43e338
  40adf7:	lea    rdx,[rip+0x34152]        # 0x43ef50
  40adfe:	lea    rcx,[rip+0x33373]        # 0x43e178
  40ae05:	add    rsp,0x28
  40ae09:	pop    rbx
  40ae0a:	pop    rsi
  40ae0b:	jmp    0x40fd20
  40ae10:	mov    rbx,rcx
  40ae13:	lea    rcx,[rip+0x79336]        # 0x484150
  40ae1a:	call   0x426d40
  40ae1f:	mov    rcx,QWORD PTR [rip+0x79322]        # 0x484148
  40ae26:	mov    rdx,rbx
  40ae29:	call   0x417330
  40ae2e:	lea    rcx,[rip+0x7931b]        # 0x484150
  40ae35:	mov    QWORD PTR [rip+0x7930c],rax        # 0x484148
  40ae3c:	call   0x426d70
  40ae41:	mov    rcx,QWORD PTR [rbx+0x48]
  40ae45:	test   rcx,rcx
  40ae48:	je     0x40ae67
  40ae4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae50:	mov    rsi,QWORD PTR [rcx+0x48]
  40ae54:	xor    r8d,r8d
  40ae57:	mov    rdx,rbx
  40ae5a:	call   0x40a5b0
  40ae5f:	test   rsi,rsi
  40ae62:	mov    rcx,rsi
  40ae65:	jne    0x40ae50
  40ae67:	mov    rcx,rbx
  40ae6a:	call   0x426d20
  40ae6f:	mov    rcx,QWORD PTR [rbx+0x38]
  40ae73:	mov    edx,0x1
  40ae78:	call   0x429ef0
  40ae7d:	mov    rcx,QWORD PTR [rbx+0x70]
  40ae81:	call   0x40e6e0
  40ae86:	mov    rdx,QWORD PTR [rbx+0x58]
  40ae8a:	mov    r8d,0x10
  40ae90:	mov    ecx,0x20
  40ae95:	call   0x416ac0
  40ae9a:	mov    rcx,QWORD PTR [rbx+0x80]
  40aea1:	call   0x4261c0
  40aea6:	lea    rcx,[rbx+0x8]
  40aeaa:	call   0x426f10
  40aeaf:	mov    rcx,rbx
  40aeb2:	add    rsp,0x28
  40aeb6:	pop    rbx
  40aeb7:	pop    rsi
  40aeb8:	jmp    0x40e6e0
  40aebd:	nop    DWORD PTR [rax]
  40aec0:	lea    r8,[rip+0x3345d]        # 0x43e324
  40aec7:	jmp    0x40adf7
  40aecc:	nop    DWORD PTR [rax+0x0]
  40aed0:	push   rsi
  40aed1:	push   rbx
  40aed2:	sub    rsp,0x28
  40aed6:	mfence 
  40aed9:	cmp    QWORD PTR [rip+0x7924f],0x0        # 0x484130
  40aee1:	je     0x40afe0
  40aee7:	mov    ecx,0xb8
  40aeec:	call   0x40e610
  40aef1:	mov    rbx,rax
  40aef4:	mov    rcx,rax
  40aef7:	call   0x426d10
  40aefc:	lea    rcx,[rbx+0x8]
  40af00:	lea    rsi,[rbx+0x88]
  40af07:	call   0x426f00
  40af0c:	mov    rax,QWORD PTR [rip+0x70cad]        # 0x47bbc0
  40af13:	mov    QWORD PTR [rbx+0x18],0x0
  40af1b:	mov    QWORD PTR [rbx+0x28],0x0
  40af23:	mov    DWORD PTR [rbx+0x30],0x1
  40af2a:	mov    DWORD PTR [rbx+0x44],0x1
  40af31:	mov    QWORD PTR [rbx+0x48],0x0
  40af39:	mov    QWORD PTR [rbx+0xa0],rax
  40af40:	mov    QWORD PTR [rbx+0x70],0x0
  40af48:	mov    DWORD PTR [rbx+0x78],0x0
  40af4f:	call   0x429750
  40af54:	mov    DWORD PTR [rbx+0xb0],0x0
  40af5e:	mov    QWORD PTR [rbx+0x38],rax
  40af62:	call   0x426140
  40af67:	mov    rdx,rsi
  40af6a:	mov    rcx,rax
  40af6d:	mov    QWORD PTR [rbx+0x80],rax
  40af74:	call   0x426190
  40af79:	xor    edx,edx
  40af7b:	mov    r8,rsi
  40af7e:	mov    rcx,rbx
  40af81:	call   0x40a770
  40af86:	lea    rcx,[rip+0x791c3]        # 0x484150
  40af8d:	call   0x426d40
  40af92:	mov    rcx,QWORD PTR [rip+0x791af]        # 0x484148
  40af99:	mov    rdx,rbx
  40af9c:	call   0x417130
  40afa1:	mov    QWORD PTR [rip+0x791a0],rax        # 0x484148
  40afa8:	mov    eax,DWORD PTR [rip+0x79172]        # 0x484120
  40afae:	test   eax,eax
  40afb0:	je     0x40afc1
  40afb2:	lea    rcx,[rip+0x333aa]        # 0x43e363
  40afb9:	mov    rdx,rbx
  40afbc:	call   0x40fef0
  40afc1:	lea    rcx,[rip+0x79188]        # 0x484150
  40afc8:	call   0x426d70
  40afcd:	mov    rax,rbx
  40afd0:	add    rsp,0x28
  40afd4:	pop    rbx
  40afd5:	pop    rsi
  40afd6:	ret    
  40afd7:	nop    WORD PTR [rax+rax*1+0x0]
  40afe0:	lea    rcx,[rip+0x79149]        # 0x484130
  40afe7:	call   0x41ebc0
  40afec:	test   eax,eax
  40afee:	je     0x40aee7
  40aff4:	lea    rcx,[rip+0x3337c]        # 0x43e377
  40affb:	call   0x438838
  40b000:	test   rax,rax
  40b003:	je     0x40b00f
  40b005:	mov    DWORD PTR [rip+0x79111],0x1        # 0x484120
  40b00f:	lea    rcx,[rip+0x7911a]        # 0x484130
  40b016:	mov    edx,0x1
  40b01b:	call   0x41ec60
  40b020:	jmp    0x40aee7
  40b025:	nop
  40b026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b030:	sub    rsp,0x28
  40b034:	lea    rcx,[rip+0x79125]        # 0x484160
  40b03b:	call   0x426d40
  40b040:	cmp    QWORD PTR [rip+0x79110],0x0        # 0x484158
  40b048:	je     0x40b062
  40b04a:	lea    rcx,[rip+0x7910f]        # 0x484160
  40b051:	call   0x426d70
  40b056:	mov    rax,QWORD PTR [rip+0x790fb]        # 0x484158
  40b05d:	add    rsp,0x28
  40b061:	ret    
  40b062:	call   0x40aed0
  40b067:	mov    edx,DWORD PTR [rip+0x790b3]        # 0x484120
  40b06d:	mov    QWORD PTR [rip+0x790e4],rax        # 0x484158
  40b074:	test   edx,edx
  40b076:	je     0x40b04a
  40b078:	lea    rcx,[rip+0x3330a]        # 0x43e389
  40b07f:	mov    rdx,rax
  40b082:	call   0x40fef0
  40b087:	jmp    0x40b04a
  40b089:	nop    DWORD PTR [rax+0x0]
  40b090:	sub    rsp,0x28
  40b094:	lea    rcx,[rip+0x2f005]        # 0x43a0a0
  40b09b:	call   0x426ff0
  40b0a0:	test   rax,rax
  40b0a3:	je     0x40b0b1
  40b0a5:	mov    rcx,rax
  40b0a8:	add    rsp,0x28
  40b0ac:	jmp    0x414230
  40b0b1:	xor    eax,eax
  40b0b3:	add    rsp,0x28
  40b0b7:	ret    
  40b0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0c0:	sub    rsp,0x28
  40b0c4:	call   0x40b090
  40b0c9:	test   rax,rax
  40b0cc:	je     0x40b0e0
  40b0ce:	mov    rcx,rax
  40b0d1:	add    rsp,0x28
  40b0d5:	jmp    0x40ad50
  40b0da:	nop    WORD PTR [rax+rax*1+0x0]
  40b0e0:	call   0x40b030
  40b0e5:	mov    rcx,rax
  40b0e8:	add    rsp,0x28
  40b0ec:	jmp    0x40ad50
  40b0f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b100:	push   rbx
  40b101:	sub    rsp,0x20
  40b105:	test   rcx,rcx
  40b108:	mov    rbx,rcx
  40b10b:	je     0x40b160
  40b10d:	cmp    edx,0x5f
  40b110:	ja     0x40b134
  40b112:	lea    r8,[rip+0x3329f]        # 0x43e3b8
  40b119:	lea    rdx,[rip+0x33d80]        # 0x43eea0
  40b120:	lea    rcx,[rip+0x33051]        # 0x43e178
  40b127:	call   0x40fd20
  40b12c:	xor    eax,eax
  40b12e:	add    rsp,0x20
  40b132:	pop    rbx
  40b133:	ret    
  40b134:	mov    ecx,edx
  40b136:	call   0x40e610
  40b13b:	mov    QWORD PTR [rax+0x10],rbx
  40b13f:	mov    DWORD PTR [rax+0x18],0x1
  40b146:	mov    DWORD PTR [rax+0x28],0x0
  40b14d:	mov    DWORD PTR [rax+0x2c],0x1
  40b154:	add    rsp,0x20
  40b158:	pop    rbx
  40b159:	ret    
  40b15a:	nop    WORD PTR [rax+rax*1+0x0]
  40b160:	lea    r8,[rip+0x33236]        # 0x43e39d
  40b167:	lea    rdx,[rip+0x33d32]        # 0x43eea0
  40b16e:	lea    rcx,[rip+0x33003]        # 0x43e178
  40b175:	call   0x40fd20
  40b17a:	xor    eax,eax
  40b17c:	add    rsp,0x20
  40b180:	pop    rbx
  40b181:	ret    
  40b182:	nop    DWORD PTR [rax+0x0]
  40b186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b190:	push   rdi
  40b191:	push   rsi
  40b192:	push   rbx
  40b193:	sub    rsp,0x20
  40b197:	cmp    QWORD PTR [rcx+0x20],0x0
  40b19c:	mov    rsi,rcx
  40b19f:	mov    rbx,rdx
  40b1a2:	je     0x40b1d0
  40b1a4:	lea    r8,[rip+0x3322d]        # 0x43e3d8
  40b1ab:	lea    rdx,[rip+0x33cde]        # 0x43ee90
  40b1b2:	lea    rcx,[rip+0x32fbf]        # 0x43e178
  40b1b9:	xor    edi,edi
  40b1bb:	call   0x40fd20
  40b1c0:	mov    eax,edi
  40b1c2:	add    rsp,0x20
  40b1c6:	pop    rbx
  40b1c7:	pop    rsi
  40b1c8:	pop    rdi
  40b1c9:	ret    
  40b1ca:	nop    WORD PTR [rax+rax*1+0x0]
  40b1d0:	mov    edi,DWORD PTR [rcx+0x2c]
  40b1d3:	and    edi,0x1
  40b1d6:	jne    0x40b200
  40b1d8:	lea    r8,[rip+0x32fde]        # 0x43e1bd
  40b1df:	lea    rdx,[rip+0x33caa]        # 0x43ee90
  40b1e6:	lea    rcx,[rip+0x32f8b]        # 0x43e178
  40b1ed:	call   0x40fd20
  40b1f2:	mov    eax,edi
  40b1f4:	add    rsp,0x20
  40b1f8:	pop    rbx
  40b1f9:	pop    rsi
  40b1fa:	pop    rdi
  40b1fb:	ret    
  40b1fc:	nop    DWORD PTR [rax+0x0]
  40b200:	test   rdx,rdx
  40b203:	je     0x40b250
  40b205:	mov    rcx,rbx
  40b208:	call   0x426d40
  40b20d:	mov    rcx,rsi
  40b210:	mov    rdx,rbx
  40b213:	call   0x40a950
  40b218:	mov    rdi,QWORD PTR [rbx+0x18]
  40b21c:	mov    esi,eax
  40b21e:	test   rdi,rdi
  40b221:	je     0x40b239
  40b223:	call   0x41ef40
  40b228:	cmp    rdi,rax
  40b22b:	je     0x40b239
  40b22d:	mov    rcx,QWORD PTR [rbx+0x80]
  40b234:	call   0x4261b0
  40b239:	mov    rcx,rbx
  40b23c:	mov    edi,esi
  40b23e:	call   0x426d70
  40b243:	mov    eax,edi
  40b245:	add    rsp,0x20
  40b249:	pop    rbx
  40b24a:	pop    rsi
  40b24b:	pop    rdi
  40b24c:	ret    
  40b24d:	nop    DWORD PTR [rax]
  40b250:	call   0x40b030
  40b255:	mov    rbx,rax
  40b258:	jmp    0x40b205
  40b25a:	nop    WORD PTR [rax+rax*1+0x0]
  40b260:	test   rcx,rcx
  40b263:	je     0x40b285
  40b265:	mov    rdx,QWORD PTR [rcx+0x20]
  40b269:	test   rdx,rdx
  40b26c:	je     0x40b280
  40b26e:	xor    r8d,r8d
  40b271:	jmp    0x40a5b0
  40b276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b280:	and    DWORD PTR [rcx+0x2c],0xfffffffe
  40b284:	ret    
  40b285:	lea    r8,[rip+0x32ef1]        # 0x43e17d
  40b28c:	lea    rdx,[rip+0x33bdd]        # 0x43ee70
  40b293:	lea    rcx,[rip+0x32ede]        # 0x43e178
  40b29a:	jmp    0x40fd20
  40b29f:	nop
  40b2a0:	push   rsi
  40b2a1:	push   rbx
  40b2a2:	sub    rsp,0x28
  40b2a6:	test   rcx,rcx
  40b2a9:	mov    rbx,rcx
  40b2ac:	je     0x40b2d1
  40b2ae:	mov    rcx,QWORD PTR [rcx+0x20]
  40b2b2:	test   rcx,rcx
  40b2b5:	je     0x40b2f4
  40b2b7:	call   0x426d40
  40b2bc:	mov    esi,DWORD PTR [rbx+0x30]
  40b2bf:	mov    rcx,QWORD PTR [rbx+0x20]
  40b2c3:	call   0x426d70
  40b2c8:	mov    eax,esi
  40b2ca:	add    rsp,0x28
  40b2ce:	pop    rbx
  40b2cf:	pop    rsi
  40b2d0:	ret    
  40b2d1:	lea    r8,[rip+0x32ea5]        # 0x43e17d
  40b2d8:	lea    rdx,[rip+0x33b81]        # 0x43ee60
  40b2df:	lea    rcx,[rip+0x32e92]        # 0x43e178
  40b2e6:	call   0x40fd20
  40b2eb:	xor    eax,eax
  40b2ed:	add    rsp,0x28
  40b2f1:	pop    rbx
  40b2f2:	pop    rsi
  40b2f3:	ret    
  40b2f4:	lea    r8,[rip+0x330f5]        # 0x43e3f0
  40b2fb:	lea    rdx,[rip+0x33b5e]        # 0x43ee60
  40b302:	lea    rcx,[rip+0x32e6f]        # 0x43e178
  40b309:	call   0x40fd20
  40b30e:	xor    eax,eax
  40b310:	add    rsp,0x28
  40b314:	pop    rbx
  40b315:	pop    rsi
  40b316:	ret    
  40b317:	nop    WORD PTR [rax+rax*1+0x0]
  40b320:	sub    rsp,0x28
  40b324:	test   BYTE PTR [rcx+0x2c],0x1
  40b328:	jne    0x40b350
  40b32a:	lea    r8,[rip+0x32e8c]        # 0x43e1bd
  40b331:	lea    rdx,[rip+0x33b08]        # 0x43ee40
  40b338:	lea    rcx,[rip+0x32e39]        # 0x43e178
  40b33f:	call   0x40fd20
  40b344:	xor    eax,eax
  40b346:	add    rsp,0x28
  40b34a:	ret    
  40b34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b350:	mov    rax,QWORD PTR [rcx+0x20]
  40b354:	add    rsp,0x28
  40b358:	ret    
  40b359:	nop    DWORD PTR [rax+0x0]
  40b360:	push   rdi
  40b361:	push   rsi
  40b362:	push   rbx
  40b363:	sub    rsp,0x20
  40b367:	test   rcx,rcx
  40b36a:	je     0x40b410
  40b370:	test   rdx,rdx
  40b373:	lea    r8,[rip+0x3308e]        # 0x43e408
  40b37a:	je     0x40b3d7
  40b37c:	test   BYTE PTR [rcx+0x2c],0x1
  40b380:	je     0x40b3d0
  40b382:	mov    rdi,QWORD PTR [rcx+0x20]
  40b386:	mov    rsi,rdx
  40b389:	mov    rbx,rcx
  40b38c:	test   rdi,rdi
  40b38f:	je     0x40b3f1
  40b391:	mov    rcx,rdi
  40b394:	call   0x426d40
  40b399:	mov    rcx,QWORD PTR [rbx+0x38]
  40b39d:	mov    rdx,rsi
  40b3a0:	call   0x417180
  40b3a5:	test   BYTE PTR [rbx+0x2c],0x40
  40b3a9:	mov    QWORD PTR [rbx+0x38],rax
  40b3ad:	jne    0x40b3bd
  40b3af:	mov    edx,DWORD PTR [rbx+0x28]
  40b3b2:	mov    r8,rsi
  40b3b5:	mov    rcx,rdi
  40b3b8:	call   0x40a770
  40b3bd:	mov    rcx,rdi
  40b3c0:	add    rsp,0x20
  40b3c4:	pop    rbx
  40b3c5:	pop    rsi
  40b3c6:	pop    rdi
  40b3c7:	jmp    0x426d70
  40b3cc:	nop    DWORD PTR [rax+0x0]
  40b3d0:	lea    r8,[rip+0x32de6]        # 0x43e1bd
  40b3d7:	lea    rdx,[rip+0x33a42]        # 0x43ee20
  40b3de:	lea    rcx,[rip+0x32d93]        # 0x43e178
  40b3e5:	add    rsp,0x20
  40b3e9:	pop    rbx
  40b3ea:	pop    rsi
  40b3eb:	pop    rdi
  40b3ec:	jmp    0x40fd20
  40b3f1:	mov    rcx,QWORD PTR [rcx+0x38]
  40b3f5:	call   0x417180
  40b3fa:	mov    QWORD PTR [rbx+0x38],rax
  40b3fe:	add    rsp,0x20
  40b402:	pop    rbx
  40b403:	pop    rsi
  40b404:	pop    rdi
  40b405:	ret    
  40b406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b410:	lea    r8,[rip+0x32d66]        # 0x43e17d
  40b417:	jmp    0x40b3d7
  40b419:	nop    DWORD PTR [rax+0x0]
  40b420:	push   rdi
  40b421:	push   rsi
  40b422:	push   rbx
  40b423:	sub    rsp,0x20
  40b427:	test   rcx,rcx
  40b42a:	je     0x40b4d0
  40b430:	test   rdx,rdx
  40b433:	lea    r8,[rip+0x32fce]        # 0x43e408
  40b43a:	je     0x40b497
  40b43c:	test   BYTE PTR [rcx+0x2c],0x1
  40b440:	je     0x40b490
  40b442:	mov    rdi,QWORD PTR [rcx+0x20]
  40b446:	mov    rsi,rdx
  40b449:	mov    rbx,rcx
  40b44c:	test   rdi,rdi
  40b44f:	je     0x40b4b1
  40b451:	mov    rcx,rdi
  40b454:	call   0x426d40
  40b459:	mov    rcx,QWORD PTR [rbx+0x38]
  40b45d:	mov    rdx,rsi
  40b460:	call   0x417330
  40b465:	test   BYTE PTR [rbx+0x2c],0x40
  40b469:	mov    QWORD PTR [rbx+0x38],rax
  40b46d:	jne    0x40b47a
  40b46f:	mov    rdx,rsi
  40b472:	mov    rcx,rdi
  40b475:	call   0x40a520
  40b47a:	mov    rcx,rdi
  40b47d:	add    rsp,0x20
  40b481:	pop    rbx
  40b482:	pop    rsi
  40b483:	pop    rdi
  40b484:	jmp    0x426d70
  40b489:	nop    DWORD PTR [rax+0x0]
  40b490:	lea    r8,[rip+0x32d26]        # 0x43e1bd
  40b497:	lea    rdx,[rip+0x33962]        # 0x43ee00
  40b49e:	lea    rcx,[rip+0x32cd3]        # 0x43e178
  40b4a5:	add    rsp,0x20
  40b4a9:	pop    rbx
  40b4aa:	pop    rsi
  40b4ab:	pop    rdi
  40b4ac:	jmp    0x40fd20
  40b4b1:	mov    rcx,QWORD PTR [rcx+0x38]
  40b4b5:	call   0x417330
  40b4ba:	mov    QWORD PTR [rbx+0x38],rax
  40b4be:	add    rsp,0x20
  40b4c2:	pop    rbx
  40b4c3:	pop    rsi
  40b4c4:	pop    rdi
  40b4c5:	ret    
  40b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4d0:	lea    r8,[rip+0x32ca6]        # 0x43e17d
  40b4d7:	jmp    0x40b497
  40b4d9:	nop    DWORD PTR [rax+0x0]
  40b4e0:	push   rdi
  40b4e1:	push   rsi
  40b4e2:	push   rbx
  40b4e3:	sub    rsp,0x20
  40b4e7:	test   rcx,rcx
  40b4ea:	je     0x40b524
  40b4ec:	test   rdx,rdx
  40b4ef:	je     0x40b530
  40b4f1:	mov    rax,QWORD PTR [rdx+0x58]
  40b4f5:	test   rax,rax
  40b4f8:	je     0x40b503
  40b4fa:	mov    rsi,QWORD PTR [rax+0x8]
  40b4fe:	cmp    rsi,rcx
  40b501:	je     0x40b540
  40b503:	lea    r8,[rip+0x32f1e]        # 0x43e428
  40b50a:	lea    rdx,[rip+0x338af]        # 0x43edc0
  40b511:	lea    rcx,[rip+0x32c60]        # 0x43e178
  40b518:	add    rsp,0x20
  40b51c:	pop    rbx
  40b51d:	pop    rsi
  40b51e:	pop    rdi
  40b51f:	jmp    0x40fd20
  40b524:	lea    r8,[rip+0x32c52]        # 0x43e17d
  40b52b:	jmp    0x40b50a
  40b52d:	nop    DWORD PTR [rax]
  40b530:	lea    r8,[rip+0x32edc]        # 0x43e413
  40b537:	jmp    0x40b50a
  40b539:	nop    DWORD PTR [rax+0x0]
  40b540:	test   BYTE PTR [rsi+0x2c],0x1
  40b544:	lea    r8,[rip+0x32c72]        # 0x43e1bd
  40b54b:	je     0x40b50a
  40b54d:	test   BYTE PTR [rdx+0x2c],0x1
  40b551:	lea    r8,[rip+0x32f20]        # 0x43e478
  40b558:	je     0x40b50a
  40b55a:	mov    rdi,QWORD PTR [rsi+0x20]
  40b55e:	mov    rbx,rdx
  40b561:	test   rdi,rdi
  40b564:	je     0x40b5b1
  40b566:	mov    rcx,rdi
  40b569:	call   0x426d40
  40b56e:	mov    rsi,QWORD PTR [rsi+0x58]
  40b572:	mov    rdx,rbx
  40b575:	mov    rcx,QWORD PTR [rsi]
  40b578:	call   0x417330
  40b57d:	mov    rdx,rdi
  40b580:	mov    QWORD PTR [rsi],rax
  40b583:	mov    rcx,rbx
  40b586:	mov    r8d,0x1
  40b58c:	call   0x40a5b0
  40b591:	mov    rcx,rbx
  40b594:	mov    r8d,0x1
  40b59a:	mov    rdx,rdi
  40b59d:	call   0x40a2e0
  40b5a2:	mov    rcx,rdi
  40b5a5:	add    rsp,0x20
  40b5a9:	pop    rbx
  40b5aa:	pop    rsi
  40b5ab:	pop    rdi
  40b5ac:	jmp    0x426d70
  40b5b1:	mov    rsi,QWORD PTR [rsi+0x58]
  40b5b5:	mov    rcx,QWORD PTR [rsi]
  40b5b8:	call   0x417330
  40b5bd:	xor    edx,edx
  40b5bf:	mov    rcx,rbx
  40b5c2:	mov    QWORD PTR [rsi],rax
  40b5c5:	mov    r8d,0x1
  40b5cb:	call   0x40a5b0
  40b5d0:	mov    r8d,0x1
  40b5d6:	xor    edx,edx
  40b5d8:	mov    rcx,rbx
  40b5db:	add    rsp,0x20
  40b5df:	pop    rbx
  40b5e0:	pop    rsi
  40b5e1:	pop    rdi
  40b5e2:	jmp    0x40a2e0
  40b5e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5f0:	push   r13
  40b5f2:	push   r12
  40b5f4:	push   rbp
  40b5f5:	push   rdi
  40b5f6:	push   rsi
  40b5f7:	push   rbx
  40b5f8:	sub    rsp,0x28
  40b5fc:	test   rcx,rcx
  40b5ff:	je     0x40b6a0
  40b605:	test   r8,r8
  40b608:	jne    0x40b635
  40b60a:	test   rdx,rdx
  40b60d:	je     0x40b635
  40b60f:	lea    r8,[rip+0x32e8a]        # 0x43e4a0
  40b616:	lea    rdx,[rip+0x33783]        # 0x43eda0
  40b61d:	lea    rcx,[rip+0x32b54]        # 0x43e178
  40b624:	add    rsp,0x28
  40b628:	pop    rbx
  40b629:	pop    rsi
  40b62a:	pop    rdi
  40b62b:	pop    rbp
  40b62c:	pop    r12
  40b62e:	pop    r13
  40b630:	jmp    0x40fd20
  40b635:	mov    r12,QWORD PTR [rcx+0x20]
  40b639:	test   r12,r12
  40b63c:	je     0x40b680
  40b63e:	mov    rbx,rcx
  40b641:	mov    rcx,r12
  40b644:	mov    rsi,r8
  40b647:	mov    rdi,rdx
  40b64a:	call   0x426d40
  40b64f:	mov    rbp,QWORD PTR [rbx+0x8]
  40b653:	mov    r13,QWORD PTR [rbx]
  40b656:	mov    rcx,r12
  40b659:	mov    QWORD PTR [rbx],rdi
  40b65c:	mov    QWORD PTR [rbx+0x8],rsi
  40b660:	call   0x426d70
  40b665:	test   rbp,rbp
  40b668:	je     0x40b693
  40b66a:	mov    rax,QWORD PTR [rbp+0x8]
  40b66e:	mov    rcx,r13
  40b671:	add    rsp,0x28
  40b675:	pop    rbx
  40b676:	pop    rsi
  40b677:	pop    rdi
  40b678:	pop    rbp
  40b679:	pop    r12
  40b67b:	pop    r13
  40b67d:	rex.W jmp rax
  40b680:	mov    rbp,QWORD PTR [rcx+0x8]
  40b684:	mov    r13,QWORD PTR [rcx]
  40b687:	mov    QWORD PTR [rcx+0x8],r8
  40b68b:	mov    QWORD PTR [rcx],rdx
  40b68e:	test   rbp,rbp
  40b691:	jne    0x40b66a
  40b693:	add    rsp,0x28
  40b697:	pop    rbx
  40b698:	pop    rsi
  40b699:	pop    rdi
  40b69a:	pop    rbp
  40b69b:	pop    r12
  40b69d:	pop    r13
  40b69f:	ret    
  40b6a0:	lea    r8,[rip+0x32ad6]        # 0x43e17d
  40b6a7:	jmp    0x40b616
  40b6ac:	nop    DWORD PTR [rax+0x0]
  40b6b0:	push   rbp
  40b6b1:	push   rdi
  40b6b2:	push   rsi
  40b6b3:	push   rbx
  40b6b4:	sub    rsp,0x28
  40b6b8:	test   rcx,rcx
  40b6bb:	je     0x40b700
  40b6bd:	mov    rbx,rcx
  40b6c0:	mov    ecx,0x20
  40b6c5:	mov    rdi,r8
  40b6c8:	mov    rbp,rdx
  40b6cb:	mov    rsi,r9
  40b6ce:	call   0x40e5c0
  40b6d3:	lea    r8,[rip+0x2e996]        # 0x43a070
  40b6da:	mov    rdx,rax
  40b6dd:	mov    rcx,rbx
  40b6e0:	mov    DWORD PTR [rax],0x1
  40b6e6:	mov    QWORD PTR [rax+0x8],rbp
  40b6ea:	mov    QWORD PTR [rax+0x10],rdi
  40b6ee:	mov    QWORD PTR [rax+0x18],rsi
  40b6f2:	add    rsp,0x28
  40b6f6:	pop    rbx
  40b6f7:	pop    rsi
  40b6f8:	pop    rdi
  40b6f9:	pop    rbp
  40b6fa:	jmp    0x40b5f0
  40b6ff:	nop
  40b700:	lea    r8,[rip+0x32a76]        # 0x43e17d
  40b707:	lea    rdx,[rip+0x33672]        # 0x43ed80
  40b70e:	lea    rcx,[rip+0x32a63]        # 0x43e178
  40b715:	add    rsp,0x28
  40b719:	pop    rbx
  40b71a:	pop    rsi
  40b71b:	pop    rdi
  40b71c:	pop    rbp
  40b71d:	jmp    0x40fd20
  40b722:	nop    DWORD PTR [rax+0x0]
  40b726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b730:	test   rcx,rcx
  40b733:	je     0x40b760
  40b735:	cmp    QWORD PTR [rcx+0x20],0x0
  40b73a:	je     0x40b780
  40b73c:	lea    r8,[rip+0x32c95]        # 0x43e3d8
  40b743:	lea    rdx,[rip+0x33616]        # 0x43ed60
  40b74a:	lea    rcx,[rip+0x32a27]        # 0x43e178
  40b751:	jmp    0x40fd20
  40b756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b760:	lea    r8,[rip+0x32a16]        # 0x43e17d
  40b767:	lea    rdx,[rip+0x335f2]        # 0x43ed60
  40b76e:	lea    rcx,[rip+0x32a03]        # 0x43e178
  40b775:	jmp    0x40fd20
  40b77a:	nop    WORD PTR [rax+rax*1+0x0]
  40b780:	mov    eax,DWORD PTR [rcx+0x18]
  40b783:	test   eax,eax
  40b785:	je     0x40b791
  40b787:	test   rdx,rdx
  40b78a:	je     0x40b7b0
  40b78c:	mov    QWORD PTR [rcx+0x10],rdx
  40b790:	ret    
  40b791:	lea    r8,[rip+0x32d38]        # 0x43e4d0
  40b798:	lea    rdx,[rip+0x335c1]        # 0x43ed60
  40b79f:	lea    rcx,[rip+0x329d2]        # 0x43e178
  40b7a6:	jmp    0x40fd20
  40b7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7b0:	lea    r8,[rip+0x32d2f]        # 0x43e4e6
  40b7b7:	lea    rdx,[rip+0x335a2]        # 0x43ed60
  40b7be:	lea    rcx,[rip+0x329b3]        # 0x43e178
  40b7c5:	jmp    0x40fd20
  40b7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40b7d0:	push   rdi
  40b7d1:	push   rsi
  40b7d2:	push   rbx
  40b7d3:	sub    rsp,0x20
  40b7d7:	test   rcx,rcx
  40b7da:	je     0x40b821
  40b7dc:	mov    rdi,QWORD PTR [rcx+0x20]
  40b7e0:	test   rdi,rdi
  40b7e3:	je     0x40b810
  40b7e5:	mov    esi,edx
  40b7e7:	mov    rbx,rcx
  40b7ea:	mov    rcx,rdi
  40b7ed:	call   0x426d40
  40b7f2:	mov    rcx,rbx
  40b7f5:	mov    r8d,esi
  40b7f8:	mov    rdx,rdi
  40b7fb:	call   0x40a9d0
  40b800:	mov    rcx,QWORD PTR [rbx+0x20]
  40b804:	add    rsp,0x20
  40b808:	pop    rbx
  40b809:	pop    rsi
  40b80a:	pop    rdi
  40b80b:	jmp    0x426d70
  40b810:	mov    r8d,edx
  40b813:	xor    edx,edx
  40b815:	add    rsp,0x20
  40b819:	pop    rbx
  40b81a:	pop    rsi
  40b81b:	pop    rdi
  40b81c:	jmp    0x40a9d0
  40b821:	lea    r8,[rip+0x32955]        # 0x43e17d
  40b828:	lea    rdx,[rip+0x33511]        # 0x43ed40
  40b82f:	lea    rcx,[rip+0x32942]        # 0x43e178
  40b836:	add    rsp,0x20
  40b83a:	pop    rbx
  40b83b:	pop    rsi
  40b83c:	pop    rdi
  40b83d:	jmp    0x40fd20
  40b842:	nop    DWORD PTR [rax+0x0]
  40b846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b850:	sub    rsp,0x28
  40b854:	test   rcx,rcx
  40b857:	je     0x40b861
  40b859:	mov    eax,DWORD PTR [rcx+0x28]
  40b85c:	add    rsp,0x28
  40b860:	ret    
  40b861:	lea    r8,[rip+0x32915]        # 0x43e17d
  40b868:	lea    rdx,[rip+0x334b1]        # 0x43ed20
  40b86f:	lea    rcx,[rip+0x32902]        # 0x43e178
  40b876:	call   0x40fd20
  40b87b:	xor    eax,eax
  40b87d:	add    rsp,0x28
  40b881:	ret    
  40b882:	nop    DWORD PTR [rax+0x0]
  40b886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b890:	push   rdi
  40b891:	push   rsi
  40b892:	push   rbx
  40b893:	sub    rsp,0x20
  40b897:	test   rcx,rcx
  40b89a:	je     0x40b8e1
  40b89c:	mov    rsi,QWORD PTR [rcx+0x20]
  40b8a0:	mov    edi,edx
  40b8a2:	mov    rbx,rcx
  40b8a5:	test   rsi,rsi
  40b8a8:	je     0x40b8b2
  40b8aa:	mov    rcx,rsi
  40b8ad:	call   0x426d40
  40b8b2:	test   edi,edi
  40b8b4:	jne    0x40b8d0
  40b8b6:	and    DWORD PTR [rbx+0x2c],0xffffffdf
  40b8ba:	test   rsi,rsi
  40b8bd:	je     0x40b8d9
  40b8bf:	mov    rcx,rsi
  40b8c2:	add    rsp,0x20
  40b8c6:	pop    rbx
  40b8c7:	pop    rsi
  40b8c8:	pop    rdi
  40b8c9:	jmp    0x426d70
  40b8ce:	xchg   ax,ax
  40b8d0:	or     DWORD PTR [rbx+0x2c],0x20
  40b8d4:	test   rsi,rsi
  40b8d7:	jne    0x40b8bf
  40b8d9:	add    rsp,0x20
  40b8dd:	pop    rbx
  40b8de:	pop    rsi
  40b8df:	pop    rdi
  40b8e0:	ret    
  40b8e1:	lea    r8,[rip+0x32895]        # 0x43e17d
  40b8e8:	lea    rdx,[rip+0x33411]        # 0x43ed00
  40b8ef:	lea    rcx,[rip+0x32882]        # 0x43e178
  40b8f6:	add    rsp,0x20
  40b8fa:	pop    rbx
  40b8fb:	pop    rsi
  40b8fc:	pop    rdi
  40b8fd:	jmp    0x40fd20
  40b902:	nop    DWORD PTR [rax+0x0]
  40b906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b910:	sub    rsp,0x28
  40b914:	test   rcx,rcx
  40b917:	je     0x40b930
  40b919:	mov    eax,DWORD PTR [rcx+0x2c]
  40b91c:	shr    eax,0x5
  40b91f:	and    eax,0x1
  40b922:	add    rsp,0x28
  40b926:	ret    
  40b927:	nop    WORD PTR [rax+rax*1+0x0]
  40b930:	lea    r8,[rip+0x32846]        # 0x43e17d
  40b937:	lea    rdx,[rip+0x333a2]        # 0x43ece0
  40b93e:	lea    rcx,[rip+0x32833]        # 0x43e178
  40b945:	call   0x40fd20
  40b94a:	xor    eax,eax
  40b94c:	add    rsp,0x28
  40b950:	ret    
  40b951:	nop    DWORD PTR [rax+rax*1+0x0]
  40b956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b960:	push   rsi
  40b961:	push   rbx
  40b962:	sub    rsp,0x28
  40b966:	test   rcx,rcx
  40b969:	je     0x40b990
  40b96b:	mov    rbx,rcx
  40b96e:	mov    rcx,QWORD PTR [rcx+0x50]
  40b972:	mov    rsi,rdx
  40b975:	call   0x40e6e0
  40b97a:	mov    rcx,rsi
  40b97d:	call   0x4182b0
  40b982:	mov    QWORD PTR [rbx+0x50],rax
  40b986:	add    rsp,0x28
  40b98a:	pop    rbx
  40b98b:	pop    rsi
  40b98c:	ret    
  40b98d:	nop    DWORD PTR [rax]
  40b990:	lea    r8,[rip+0x327e6]        # 0x43e17d
  40b997:	lea    rdx,[rip+0x33322]        # 0x43ecc0
  40b99e:	lea    rcx,[rip+0x327d3]        # 0x43e178
  40b9a5:	add    rsp,0x28
  40b9a9:	pop    rbx
  40b9aa:	pop    rsi
  40b9ab:	jmp    0x40fd20
  40b9b0:	sub    rsp,0x28
  40b9b4:	test   rcx,rcx
  40b9b7:	je     0x40b9c2
  40b9b9:	mov    rax,QWORD PTR [rcx+0x50]
  40b9bd:	add    rsp,0x28
  40b9c1:	ret    
  40b9c2:	lea    r8,[rip+0x327b4]        # 0x43e17d
  40b9c9:	lea    rdx,[rip+0x332d0]        # 0x43eca0
  40b9d0:	lea    rcx,[rip+0x327a1]        # 0x43e178
  40b9d7:	call   0x40fd20
  40b9dc:	xor    eax,eax
  40b9de:	add    rsp,0x28
  40b9e2:	ret    
  40b9e3:	nop    DWORD PTR [rax]
  40b9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9f0:	push   rsi
  40b9f1:	push   rbx
  40b9f2:	sub    rsp,0x28
  40b9f6:	test   rcx,rcx
  40b9f9:	mov    rbx,rcx
  40b9fc:	je     0x40ba33
  40b9fe:	mov    rsi,QWORD PTR [rcx+0x20]
  40ba02:	test   rsi,rsi
  40ba05:	je     0x40ba25
  40ba07:	mov    rcx,rsi
  40ba0a:	call   0x426d40
  40ba0f:	add    DWORD PTR [rbx+0x18],0x1
  40ba13:	mov    rcx,rsi
  40ba16:	call   0x426d70
  40ba1b:	mov    rax,rbx
  40ba1e:	add    rsp,0x28
  40ba22:	pop    rbx
  40ba23:	pop    rsi
  40ba24:	ret    
  40ba25:	add    DWORD PTR [rcx+0x18],0x1
  40ba29:	mov    rax,rcx
  40ba2c:	add    rsp,0x28
  40ba30:	pop    rbx
  40ba31:	pop    rsi
  40ba32:	ret    
  40ba33:	lea    r8,[rip+0x32743]        # 0x43e17d
  40ba3a:	lea    rdx,[rip+0x3322f]        # 0x43ec70
  40ba41:	lea    rcx,[rip+0x32730]        # 0x43e178
  40ba48:	call   0x40fd20
  40ba4d:	xor    eax,eax
  40ba4f:	add    rsp,0x28
  40ba53:	pop    rbx
  40ba54:	pop    rsi
  40ba55:	ret    
  40ba56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba60:	push   rbp
  40ba61:	push   rdi
  40ba62:	push   rsi
  40ba63:	push   rbx
  40ba64:	sub    rsp,0x28
  40ba68:	test   rcx,rcx
  40ba6b:	je     0x40bb70
  40ba71:	test   rdx,rdx
  40ba74:	lea    r8,[rip+0x32998]        # 0x43e413
  40ba7b:	je     0x40baa0
  40ba7d:	test   BYTE PTR [rcx+0x2c],0x1
  40ba81:	je     0x40bac0
  40ba83:	test   BYTE PTR [rdx+0x2c],0x1
  40ba87:	je     0x40bad0
  40ba89:	cmp    QWORD PTR [rdx+0x20],0x0
  40ba8e:	lea    r8,[rip+0x32a5f]        # 0x43e4f4
  40ba95:	je     0x40bae0
  40ba97:	nop    WORD PTR [rax+rax*1+0x0]
  40baa0:	lea    rdx,[rip+0x33339]        # 0x43ede0
  40baa7:	lea    rcx,[rip+0x326ca]        # 0x43e178
  40baae:	add    rsp,0x28
  40bab2:	pop    rbx
  40bab3:	pop    rsi
  40bab4:	pop    rdi
  40bab5:	pop    rbp
  40bab6:	jmp    0x40fd20
  40babb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bac0:	lea    r8,[rip+0x326f6]        # 0x43e1bd
  40bac7:	jmp    0x40baa0
  40bac9:	nop    DWORD PTR [rax+0x0]
  40bad0:	lea    r8,[rip+0x329a1]        # 0x43e478
  40bad7:	jmp    0x40baa0
  40bad9:	nop    DWORD PTR [rax+0x0]
  40bae0:	mov    rax,QWORD PTR [rdx+0x58]
  40bae4:	test   rax,rax
  40bae7:	je     0x40baf7
  40bae9:	cmp    QWORD PTR [rax+0x8],0x0
  40baee:	lea    r8,[rip+0x32a23]        # 0x43e518
  40baf5:	jne    0x40baa0
  40baf7:	mov    rdi,QWORD PTR [rcx+0x20]
  40bafb:	mov    rsi,rdx
  40bafe:	mov    rbx,rcx
  40bb01:	test   rdi,rdi
  40bb04:	je     0x40bb0e
  40bb06:	mov    rcx,rdi
  40bb09:	call   0x426d40
  40bb0e:	cmp    QWORD PTR [rbx+0x58],0x0
  40bb13:	je     0x40bb80
  40bb15:	cmp    QWORD PTR [rsi+0x58],0x0
  40bb1a:	je     0x40bb90
  40bb1c:	mov    rcx,rsi
  40bb1f:	call   0x40b9f0
  40bb24:	mov    rbp,QWORD PTR [rbx+0x58]
  40bb28:	mov    rdx,rax
  40bb2b:	mov    rcx,QWORD PTR [rbp+0x0]
  40bb2f:	call   0x417180
  40bb34:	mov    QWORD PTR [rbp+0x0],rax
  40bb38:	mov    rax,QWORD PTR [rsi+0x58]
  40bb3c:	xor    edx,edx
  40bb3e:	mov    r8d,DWORD PTR [rbx+0x28]
  40bb42:	mov    rcx,rsi
  40bb45:	mov    QWORD PTR [rax+0x8],rbx
  40bb49:	call   0x40a9d0
  40bb4e:	test   rdi,rdi
  40bb51:	je     0x40bba3
  40bb53:	mov    rcx,rdi
  40bb56:	call   0x426d70
  40bb5b:	mov    rdx,rdi
  40bb5e:	mov    rcx,rsi
  40bb61:	add    rsp,0x28
  40bb65:	pop    rbx
  40bb66:	pop    rsi
  40bb67:	pop    rdi
  40bb68:	pop    rbp
  40bb69:	jmp    0x40b190
  40bb6e:	xchg   ax,ax
  40bb70:	lea    r8,[rip+0x32606]        # 0x43e17d
  40bb77:	jmp    0x40baa0
  40bb7c:	nop    DWORD PTR [rax+0x0]
  40bb80:	mov    ecx,0x10
  40bb85:	call   0x416750
  40bb8a:	mov    QWORD PTR [rbx+0x58],rax
  40bb8e:	jmp    0x40bb15
  40bb90:	mov    ecx,0x10
  40bb95:	call   0x416750
  40bb9a:	mov    QWORD PTR [rsi+0x58],rax
  40bb9e:	jmp    0x40bb1c
  40bba3:	add    rsp,0x28
  40bba7:	pop    rbx
  40bba8:	pop    rsi
  40bba9:	pop    rdi
  40bbaa:	pop    rbp
  40bbab:	ret    
  40bbac:	nop    DWORD PTR [rax+0x0]
  40bbb0:	test   rcx,rcx
  40bbb3:	je     0x40bbc1
  40bbb5:	mov    rdx,QWORD PTR [rcx+0x20]
  40bbb9:	xor    r8d,r8d
  40bbbc:	jmp    0x40a2e0
  40bbc1:	lea    r8,[rip+0x325b5]        # 0x43e17d
  40bbc8:	lea    rdx,[rip+0x33092]        # 0x43ec61
  40bbcf:	lea    rcx,[rip+0x325a2]        # 0x43e178
  40bbd6:	jmp    0x40fd20
  40bbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbe0:	push   rdi
  40bbe1:	push   rsi
  40bbe2:	push   rbx
  40bbe3:	sub    rsp,0x20
  40bbe7:	test   edx,edx
  40bbe9:	mov    rdi,rcx
  40bbec:	mov    esi,edx
  40bbee:	je     0x40bc40
  40bbf0:	test   rcx,rcx
  40bbf3:	je     0x40bc64
  40bbf5:	mov    rcx,rdi
  40bbf8:	call   0x426d40
  40bbfd:	mov    rbx,QWORD PTR [rdi+0x48]
  40bc01:	test   rbx,rbx
  40bc04:	je     0x40bc24
  40bc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc10:	test   BYTE PTR [rbx+0x2c],0x1
  40bc14:	je     0x40bc1b
  40bc16:	cmp    DWORD PTR [rbx+0x30],esi
  40bc19:	je     0x40bc24
  40bc1b:	mov    rbx,QWORD PTR [rbx+0x48]
  40bc1f:	test   rbx,rbx
  40bc22:	jne    0x40bc10
  40bc24:	mov    rcx,rdi
  40bc27:	call   0x426d70
  40bc2c:	mov    rax,rbx
  40bc2f:	add    rsp,0x20
  40bc33:	pop    rbx
  40bc34:	pop    rsi
  40bc35:	pop    rdi
  40bc36:	ret    
  40bc37:	nop    WORD PTR [rax+rax*1+0x0]
  40bc40:	lea    r8,[rip+0x32919]        # 0x43e560
  40bc47:	lea    rdx,[rip+0x32ff2]        # 0x43ec40
  40bc4e:	lea    rcx,[rip+0x32523]        # 0x43e178
  40bc55:	call   0x40fd20
  40bc5a:	xor    eax,eax
  40bc5c:	add    rsp,0x20
  40bc60:	pop    rbx
  40bc61:	pop    rsi
  40bc62:	pop    rdi
  40bc63:	ret    
  40bc64:	call   0x40b030
  40bc69:	mov    rdi,rax
  40bc6c:	jmp    0x40bbf5
  40bc6e:	xchg   ax,ax
  40bc70:	push   rbx
  40bc71:	sub    rsp,0x20
  40bc75:	test   ecx,ecx
  40bc77:	je     0x40bca0
  40bc79:	mov    rbx,rdx
  40bc7c:	mov    edx,ecx
  40bc7e:	xor    ecx,ecx
  40bc80:	call   0x40bbe0
  40bc85:	test   rax,rax
  40bc88:	mov    rcx,rax
  40bc8b:	je     0x40bcc0
  40bc8d:	mov    rdx,rbx
  40bc90:	add    rsp,0x20
  40bc94:	pop    rbx
  40bc95:	jmp    0x40b960
  40bc9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bca0:	lea    r8,[rip+0x328c7]        # 0x43e56e
  40bca7:	lea    rdx,[rip+0x32fd2]        # 0x43ec80
  40bcae:	lea    rcx,[rip+0x324c3]        # 0x43e178
  40bcb5:	add    rsp,0x20
  40bcb9:	pop    rbx
  40bcba:	jmp    0x40fd20
  40bcbf:	nop
  40bcc0:	add    rsp,0x20
  40bcc4:	pop    rbx
  40bcc5:	ret    
  40bcc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bcd0:	push   r13
  40bcd2:	push   r12
  40bcd4:	push   rbp
  40bcd5:	push   rdi
  40bcd6:	push   rsi
  40bcd7:	push   rbx
  40bcd8:	sub    rsp,0x38
  40bcdc:	test   rdx,rdx
  40bcdf:	mov    rdi,rcx
  40bce2:	mov    rsi,rdx
  40bce5:	mov    rbp,r8
  40bce8:	je     0x40bd64
  40bcea:	test   rcx,rcx
  40bced:	je     0x40bd8d
  40bcf3:	mov    rcx,rdi
  40bcf6:	lea    r13,[rsp+0x28]
  40bcfb:	lea    r12,[rsp+0x20]
  40bd00:	call   0x426d40
  40bd05:	mov    rbx,QWORD PTR [rdi+0x48]
  40bd09:	test   rbx,rbx
  40bd0c:	jne    0x40bd19
  40bd0e:	jmp    0x40bd60
  40bd10:	mov    rbx,QWORD PTR [rbx+0x48]
  40bd14:	test   rbx,rbx
  40bd17:	je     0x40bd60
  40bd19:	test   BYTE PTR [rbx+0x2c],0x1
  40bd1d:	je     0x40bd10
  40bd1f:	cmp    QWORD PTR [rbx+0x10],rsi
  40bd23:	jne    0x40bd10
  40bd25:	mov    rax,QWORD PTR [rbx+0x8]
  40bd29:	test   rax,rax
  40bd2c:	je     0x40bd10
  40bd2e:	mov    r9,r13
  40bd31:	mov    r8,r12
  40bd34:	mov    rdx,rbx
  40bd37:	mov    rcx,QWORD PTR [rbx]
  40bd3a:	call   QWORD PTR [rax+0x10]
  40bd3d:	cmp    QWORD PTR [rsp+0x28],rbp
  40bd42:	jne    0x40bd10
  40bd44:	mov    rcx,rdi
  40bd47:	call   0x426d70
  40bd4c:	mov    rax,rbx
  40bd4f:	add    rsp,0x38
  40bd53:	pop    rbx
  40bd54:	pop    rsi
  40bd55:	pop    rdi
  40bd56:	pop    rbp
  40bd57:	pop    r12
  40bd59:	pop    r13
  40bd5b:	ret    
  40bd5c:	nop    DWORD PTR [rax+0x0]
  40bd60:	xor    ebx,ebx
  40bd62:	jmp    0x40bd44
  40bd64:	lea    r8,[rip+0x3277b]        # 0x43e4e6
  40bd6b:	lea    rdx,[rip+0x32e8e]        # 0x43ec00
  40bd72:	lea    rcx,[rip+0x323ff]        # 0x43e178
  40bd79:	call   0x40fd20
  40bd7e:	xor    eax,eax
  40bd80:	add    rsp,0x38
  40bd84:	pop    rbx
  40bd85:	pop    rsi
  40bd86:	pop    rdi
  40bd87:	pop    rbp
  40bd88:	pop    r12
  40bd8a:	pop    r13
  40bd8c:	ret    
  40bd8d:	call   0x40b030
  40bd92:	mov    rdi,rax
  40bd95:	jmp    0x40bcf3
  40bd9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bda0:	push   r12
  40bda2:	push   rbp
  40bda3:	push   rdi
  40bda4:	push   rsi
  40bda5:	push   rbx
  40bda6:	sub    rsp,0x30
  40bdaa:	test   rcx,rcx
  40bdad:	mov    r12,rcx
  40bdb0:	mov    rbp,rdx
  40bdb3:	je     0x40be21
  40bdb5:	mov    rcx,r12
  40bdb8:	lea    rdi,[rsp+0x28]
  40bdbd:	lea    rsi,[rsp+0x20]
  40bdc2:	call   0x426d40
  40bdc7:	mov    rbx,QWORD PTR [r12+0x48]
  40bdcc:	test   rbx,rbx
  40bdcf:	je     0x40be09
  40bdd1:	test   BYTE PTR [rbx+0x2c],0x1
  40bdd5:	je     0x40be00
  40bdd7:	mov    r10,QWORD PTR [rbx+0x8]
  40bddb:	test   r10,r10
  40bdde:	je     0x40be00
  40bde0:	mov    QWORD PTR [rsp+0x28],0x0
  40bde9:	mov    r9,rdi
  40bdec:	mov    r8,rsi
  40bdef:	mov    rdx,rbx
  40bdf2:	mov    rcx,QWORD PTR [rbx]
  40bdf5:	call   QWORD PTR [r10+0x10]
  40bdf9:	cmp    QWORD PTR [rsp+0x28],rbp
  40bdfe:	je     0x40be0b
  40be00:	mov    rbx,QWORD PTR [rbx+0x48]
  40be04:	test   rbx,rbx
  40be07:	jne    0x40bdd1
  40be09:	xor    ebx,ebx
  40be0b:	mov    rcx,r12
  40be0e:	call   0x426d70
  40be13:	mov    rax,rbx
  40be16:	add    rsp,0x30
  40be1a:	pop    rbx
  40be1b:	pop    rsi
  40be1c:	pop    rdi
  40be1d:	pop    rbp
  40be1e:	pop    r12
  40be20:	ret    
  40be21:	call   0x40b030
  40be26:	mov    r12,rax
  40be29:	jmp    0x40bdb5
  40be2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40be30:	push   rbx
  40be31:	sub    rsp,0x20
  40be35:	test   ecx,ecx
  40be37:	je     0x40be60
  40be39:	mov    edx,ecx
  40be3b:	xor    ecx,ecx
  40be3d:	call   0x40bbe0
  40be42:	test   rax,rax
  40be45:	mov    rbx,rax
  40be48:	je     0x40be52
  40be4a:	mov    rcx,rbx
  40be4d:	call   0x40b260
  40be52:	xor    eax,eax
  40be54:	test   rbx,rbx
  40be57:	setne  al
  40be5a:	add    rsp,0x20
  40be5e:	pop    rbx
  40be5f:	ret    
  40be60:	lea    r8,[rip+0x32707]        # 0x43e56e
  40be67:	lea    rdx,[rip+0x32d82]        # 0x43ebf0
  40be6e:	lea    rcx,[rip+0x32303]        # 0x43e178
  40be75:	call   0x40fd20
  40be7a:	xor    eax,eax
  40be7c:	add    rsp,0x20
  40be80:	pop    rbx
  40be81:	ret    
  40be82:	nop    DWORD PTR [rax+0x0]
  40be86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be90:	sub    rsp,0x28
  40be94:	mov    rdx,rcx
  40be97:	xor    ecx,ecx
  40be99:	call   0x40bda0
  40be9e:	mov    rcx,rax
  40bea1:	xor    eax,eax
  40bea3:	test   rcx,rcx
  40bea6:	je     0x40beb2
  40bea8:	call   0x40b260
  40bead:	mov    eax,0x1
  40beb2:	add    rsp,0x28
  40beb6:	ret    
  40beb7:	nop    WORD PTR [rax+rax*1+0x0]
  40bec0:	sub    rsp,0x28
  40bec4:	test   rcx,rcx
  40bec7:	mov    r8,rdx
  40beca:	je     0x40bef0
  40becc:	mov    rdx,rcx
  40becf:	xor    ecx,ecx
  40bed1:	call   0x40bcd0
  40bed6:	test   rax,rax
  40bed9:	je     0x40bee8
  40bedb:	mov    rcx,rax
  40bede:	call   0x40b260
  40bee3:	mov    eax,0x1
  40bee8:	add    rsp,0x28
  40beec:	ret    
  40beed:	nop    DWORD PTR [rax]
  40bef0:	lea    r8,[rip+0x325ef]        # 0x43e4e6
  40bef7:	lea    rdx,[rip+0x32cc2]        # 0x43ebc0
  40befe:	lea    rcx,[rip+0x32273]        # 0x43e178
  40bf05:	call   0x40fd20
  40bf0a:	xor    eax,eax
  40bf0c:	add    rsp,0x28
  40bf10:	ret    
  40bf11:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf20:	push   rbx
  40bf21:	sub    rsp,0x30
  40bf25:	test   rcx,rcx
  40bf28:	mov    rbx,rcx
  40bf2b:	je     0x40bf90
  40bf2d:	lea    rcx,[rsp+0x20]
  40bf32:	call   QWORD PTR [rip+0x7a808]        # 0x486740
  40bf38:	movabs rdx,0xfe624e212ac18000
  40bf42:	add    rdx,QWORD PTR [rsp+0x20]
  40bf47:	movabs r9,0xcccccccccccccccd
  40bf51:	mov    rax,rdx
  40bf54:	mul    r9
  40bf57:	shr    rdx,0x3
  40bf5b:	mov    r8,rdx
  40bf5e:	movabs rdx,0x431bde82d7b634db
  40bf68:	mov    rax,r8
  40bf6b:	mul    rdx
  40bf6e:	shr    rdx,0x12
  40bf72:	mov    DWORD PTR [rbx],edx
  40bf74:	imul   rdx,rdx,0xf4240
  40bf7b:	sub    r8,rdx
  40bf7e:	mov    DWORD PTR [rbx+0x4],r8d
  40bf82:	add    rsp,0x30
  40bf86:	pop    rbx
  40bf87:	ret    
  40bf88:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf90:	lea    r8,[rip+0x325df]        # 0x43e576
  40bf97:	lea    rdx,[rip+0x32bf2]        # 0x43eb90
  40bf9e:	lea    rcx,[rip+0x321d3]        # 0x43e178
  40bfa5:	call   0x40fd20
  40bfaa:	nop
  40bfab:	add    rsp,0x30
  40bfaf:	pop    rbx
  40bfb0:	ret    
  40bfb1:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfc0:	sub    rsp,0x38
  40bfc4:	lea    rcx,[rsp+0x20]
  40bfc9:	call   0x40bf20
  40bfce:	movsxd rax,DWORD PTR [rsp+0x20]
  40bfd3:	movsxd rdx,DWORD PTR [rsp+0x24]
  40bfd8:	imul   rax,rax,0xf4240
  40bfdf:	add    rax,rdx
  40bfe2:	add    rsp,0x38
  40bfe6:	ret    
  40bfe7:	nop    WORD PTR [rax+rax*1+0x0]
  40bff0:	sub    rsp,0x28
  40bff4:	mov    QWORD PTR [rip+0x78141],0x0        # 0x484140
  40bfff:	lea    rcx,[rip+0x3257f]        # 0x43e585
  40c006:	call   QWORD PTR [rip+0x7a6f4]        # 0x486700
  40c00c:	test   rax,rax
  40c00f:	je     0x40c028
  40c011:	lea    rdx,[rip+0x3257a]        # 0x43e592
  40c018:	mov    rcx,rax
  40c01b:	call   QWORD PTR [rip+0x7a6ef]        # 0x486710
  40c021:	mov    QWORD PTR [rip+0x78118],rax        # 0x484140
  40c028:	call   QWORD PTR [rip+0x7a722]        # 0x486750
  40c02e:	shr    eax,0x1f
  40c031:	mov    DWORD PTR [rip+0x78101],eax        # 0x484138
  40c037:	add    rsp,0x28
  40c03b:	ret    
  40c03c:	nop    DWORD PTR [rax+0x0]
  40c040:	push   rbx
  40c041:	sub    rsp,0x20
  40c045:	mov    rax,QWORD PTR [rip+0x780f4]        # 0x484140
  40c04c:	test   rax,rax
  40c04f:	je     0x40c090
  40c051:	call   rax
  40c053:	mov    rbx,rax
  40c056:	call   QWORD PTR [rip+0x7ab74]        # 0x486bd0
  40c05c:	mov    edx,eax
  40c05e:	sub    edx,ebx
  40c060:	js     0x40c074
  40c062:	mov    eax,edx
  40c064:	add    rbx,rax
  40c067:	imul   rax,rbx,0x3e8
  40c06e:	add    rsp,0x20
  40c072:	pop    rbx
  40c073:	ret    
  40c074:	mov    ecx,ebx
  40c076:	sub    ecx,eax
  40c078:	sub    rbx,rcx
  40c07b:	imul   rax,rbx,0x3e8
  40c082:	add    rsp,0x20
  40c086:	pop    rbx
  40c087:	ret    
  40c088:	nop    DWORD PTR [rax+rax*1+0x0]
  40c090:	mfence 
  40c093:	mov    ebx,DWORD PTR [rip+0x7809f]        # 0x484138
  40c099:	call   QWORD PTR [rip+0x7ab31]        # 0x486bd0
  40c09f:	mov    edx,eax
  40c0a1:	mov    ecx,edx
  40c0a3:	mov    eax,ebx
  40c0a5:	shr    ecx,0x1f
  40c0a8:	and    eax,0x1
  40c0ab:	cmp    ecx,eax
  40c0ad:	je     0x40c0bb
  40c0af:	add    ebx,0x1
  40c0b2:	mov    DWORD PTR [rip+0x78080],ebx        # 0x484138
  40c0b8:	mfence 
  40c0bb:	shl    rbx,0x1f
  40c0bf:	or     rbx,rdx
  40c0c2:	imul   rax,rbx,0x3e8
  40c0c9:	add    rsp,0x20
  40c0cd:	pop    rbx
  40c0ce:	ret    
  40c0cf:	nop
  40c0d0:	sub    rsp,0x28
  40c0d4:	call   0x40ad00
  40c0d9:	mov    eax,DWORD PTR [rax]
  40c0db:	add    rsp,0x28
  40c0df:	ret    
  40c0e0:	sub    rsp,0x28
  40c0e4:	call   0x40ad00
  40c0e9:	mov    rax,QWORD PTR [rax+0x8]
  40c0ed:	test   rax,rax
  40c0f0:	je     0x40c100
  40c0f2:	mov    rax,QWORD PTR [rax]
  40c0f5:	add    rsp,0x28
  40c0f9:	ret    
  40c0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c100:	xor    eax,eax
  40c102:	jmp    0x40c0f5
  40c104:	xchg   ax,ax
  40c106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c110:	mov    eax,DWORD PTR [rcx+0x2c]
  40c113:	and    eax,0x1
  40c116:	xor    eax,0x1
  40c119:	ret    
  40c11a:	nop    WORD PTR [rax+rax*1+0x0]
  40c120:	push   rdi
  40c121:	push   rsi
  40c122:	push   rbx
  40c123:	sub    rsp,0x30
  40c127:	mov    rbx,rcx
  40c12a:	call   0x41ef40
  40c12f:	test   rbx,rbx
  40c132:	mov    rdi,rax
  40c135:	je     0x40c1b0
  40c137:	mov    rcx,rbx
  40c13a:	call   0x426d40
  40c13f:	mov    rdx,QWORD PTR [rbx+0x18]
  40c143:	test   rdx,rdx
  40c146:	je     0x40c161
  40c148:	xor    esi,esi
  40c14a:	cmp    rdi,rdx
  40c14d:	je     0x40c1a0
  40c14f:	mov    rcx,rbx
  40c152:	call   0x426d70
  40c157:	mov    eax,esi
  40c159:	add    rsp,0x30
  40c15d:	pop    rbx
  40c15e:	pop    rsi
  40c15f:	pop    rdi
  40c160:	ret    
  40c161:	mov    eax,DWORD PTR [rbx+0x20]
  40c164:	mov    QWORD PTR [rbx+0x18],rdi
  40c168:	test   eax,eax
  40c16a:	je     0x40c1a3
  40c16c:	lea    rax,[rip+0x3248b]        # 0x43e5fe
  40c173:	lea    r9,[rip+0x329f6]        # 0x43eb70
  40c17a:	lea    rdx,[rip+0x32427]        # 0x43e5a8
  40c181:	lea    rcx,[rip+0x31ff0]        # 0x43e178
  40c188:	mov    r8d,0xa45
  40c18e:	mov    QWORD PTR [rsp+0x20],rax
  40c193:	call   0x41e680
  40c198:	nop    DWORD PTR [rax+rax*1+0x0]
  40c1a0:	mov    eax,DWORD PTR [rbx+0x20]
  40c1a3:	add    eax,0x1
  40c1a6:	mov    esi,0x1
  40c1ab:	mov    DWORD PTR [rbx+0x20],eax
  40c1ae:	jmp    0x40c14f
  40c1b0:	call   0x40b030
  40c1b5:	mov    rbx,rax
  40c1b8:	jmp    0x40c137
  40c1bd:	nop    DWORD PTR [rax]
  40c1c0:	push   rbx
  40c1c1:	sub    rsp,0x30
  40c1c5:	mov    rbx,rcx
  40c1c8:	call   0x40c120
  40c1cd:	test   eax,eax
  40c1cf:	je     0x40c210
  40c1d1:	call   0x40b030
  40c1d6:	cmp    rbx,rax
  40c1d9:	je     0x40c230
  40c1db:	test   rbx,rbx
  40c1de:	je     0x40c230
  40c1e0:	mov    rcx,rbx
  40c1e3:	call   0x40ad50
  40c1e8:	lea    rcx,[rip+0x2deb1]        # 0x43a0a0
  40c1ef:	call   0x426ff0
  40c1f4:	test   rax,rax
  40c1f7:	je     0x40c234
  40c1f9:	mov    rdx,rbx
  40c1fc:	mov    rcx,rax
  40c1ff:	add    rsp,0x30
  40c203:	pop    rbx
  40c204:	jmp    0x4139b0
  40c209:	nop    DWORD PTR [rax+0x0]
  40c210:	lea    r8,[rip+0x32401]        # 0x43e618
  40c217:	lea    rdx,[rip+0x32ce2]        # 0x43ef00
  40c21e:	lea    rcx,[rip+0x31f53]        # 0x43e178
  40c225:	add    rsp,0x30
  40c229:	pop    rbx
  40c22a:	jmp    0x40fd20
  40c22f:	nop
  40c230:	xor    ebx,ebx
  40c232:	jmp    0x40c1e8
  40c234:	call   0x413640
  40c239:	lea    rcx,[rip+0x2de60]        # 0x43a0a0
  40c240:	mov    rdx,rax
  40c243:	mov    QWORD PTR [rsp+0x28],rax
  40c248:	call   0x427020
  40c24d:	mov    rax,QWORD PTR [rsp+0x28]
  40c252:	jmp    0x40c1f9
  40c254:	xchg   ax,ax
  40c256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c260:	push   rdi
  40c261:	push   rsi
  40c262:	push   rbx
  40c263:	sub    rsp,0x20
  40c267:	test   rcx,rcx
  40c26a:	mov    rbx,rcx
  40c26d:	je     0x40c2f0
  40c273:	mov    rcx,rbx
  40c276:	call   0x426d40
  40c27b:	sub    DWORD PTR [rbx+0x20],0x1
  40c27f:	jne    0x40c2b2
  40c281:	mov    rcx,QWORD PTR [rbx+0x28]
  40c285:	mov    QWORD PTR [rbx+0x18],0x0
  40c28d:	test   rcx,rcx
  40c290:	je     0x40c2b2
  40c292:	mov    rsi,QWORD PTR [rcx]
  40c295:	mov    rdx,rcx
  40c298:	mov    rdi,QWORD PTR [rsi+0x8]
  40c29c:	call   0x417460
  40c2a1:	mov    QWORD PTR [rbx+0x28],rax
  40c2a5:	cmp    rbx,rdi
  40c2a8:	jne    0x40c2c1
  40c2aa:	mov    rcx,QWORD PTR [rsi]
  40c2ad:	call   0x426f30
  40c2b2:	mov    rcx,rbx
  40c2b5:	add    rsp,0x20
  40c2b9:	pop    rbx
  40c2ba:	pop    rsi
  40c2bb:	pop    rdi
  40c2bc:	jmp    0x426d70
  40c2c1:	mov    rcx,QWORD PTR [rsi+0x8]
  40c2c5:	call   0x426d40
  40c2ca:	mov    rcx,QWORD PTR [rsi]
  40c2cd:	call   0x426f30
  40c2d2:	mov    rcx,QWORD PTR [rsi+0x8]
  40c2d6:	call   0x426d70
  40c2db:	mov    rcx,rbx
  40c2de:	add    rsp,0x20
  40c2e2:	pop    rbx
  40c2e3:	pop    rsi
  40c2e4:	pop    rdi
  40c2e5:	jmp    0x426d70
  40c2ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c2f0:	call   0x40b030
  40c2f5:	mov    rbx,rax
  40c2f8:	jmp    0x40c273
  40c2fd:	nop    DWORD PTR [rax]
  40c300:	push   rbx
  40c301:	sub    rsp,0x20
  40c305:	mov    rbx,rcx
  40c308:	call   0x40c260
  40c30d:	test   rbx,rbx
  40c310:	je     0x40c320
  40c312:	mov    rcx,rbx
  40c315:	add    rsp,0x20
  40c319:	pop    rbx
  40c31a:	jmp    0x40adc0
  40c31f:	nop
  40c320:	add    rsp,0x20
  40c324:	pop    rbx
  40c325:	ret    
  40c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c330:	push   rdi
  40c331:	push   rsi
  40c332:	push   rbx
  40c333:	sub    rsp,0x20
  40c337:	mov    rbx,rcx
  40c33a:	call   0x40b030
  40c33f:	lea    rcx,[rip+0x2dd5a]        # 0x43a0a0
  40c346:	cmp    rax,rbx
  40c349:	mov    eax,0x0
  40c34e:	cmove  rbx,rax
  40c352:	call   0x426ff0
  40c357:	test   rax,rax
  40c35a:	mov    rsi,rax
  40c35d:	je     0x40c390
  40c35f:	mov    rcx,rax
  40c362:	call   0x414230
  40c367:	cmp    rax,rbx
  40c36a:	mov    rdi,rax
  40c36d:	je     0x40c3a0
  40c36f:	lea    r8,[rip+0x322c2]        # 0x43e638
  40c376:	lea    rdx,[rip+0x32b43]        # 0x43eec0
  40c37d:	lea    rcx,[rip+0x31df4]        # 0x43e178
  40c384:	add    rsp,0x20
  40c388:	pop    rbx
  40c389:	pop    rsi
  40c38a:	pop    rdi
  40c38b:	jmp    0x40fd20
  40c390:	lea    r8,[rip+0x32292]        # 0x43e629
  40c397:	jmp    0x40c376
  40c399:	nop    DWORD PTR [rax+0x0]
  40c3a0:	mov    rcx,rsi
  40c3a3:	call   0x413c60
  40c3a8:	mov    rcx,rdi
  40c3ab:	call   0x40c260
  40c3b0:	test   rdi,rdi
  40c3b3:	je     0x40c3c4
  40c3b5:	mov    rcx,rdi
  40c3b8:	add    rsp,0x20
  40c3bc:	pop    rbx
  40c3bd:	pop    rsi
  40c3be:	pop    rdi
  40c3bf:	jmp    0x40adc0
  40c3c4:	add    rsp,0x20
  40c3c8:	pop    rbx
  40c3c9:	pop    rsi
  40c3ca:	pop    rdi
  40c3cb:	ret    
  40c3cc:	nop    DWORD PTR [rax+0x0]
  40c3d0:	push   r13
  40c3d2:	push   r12
  40c3d4:	push   rbp
  40c3d5:	push   rdi
  40c3d6:	push   rsi
  40c3d7:	push   rbx
  40c3d8:	sub    rsp,0x48
  40c3dc:	mov    rbx,rcx
  40c3df:	mov    rbp,rdx
  40c3e2:	mov    rdi,r8
  40c3e5:	call   0x41ef40
  40c3ea:	test   rbx,rbx
  40c3ed:	mov    rsi,rax
  40c3f0:	je     0x40c523
  40c3f6:	cmp    rbx,rdi
  40c3f9:	sete   r12b
  40c3fd:	jne    0x40c480
  40c403:	mov    r9,QWORD PTR [rbx+0x18]
  40c407:	cmp    rsi,r9
  40c40a:	je     0x40c44f
  40c40c:	test   r9,r9
  40c40f:	je     0x40c44f
  40c411:	mov    rcx,QWORD PTR [rbx+0x28]
  40c415:	lea    r13,[rsp+0x30]
  40c41a:	mov    QWORD PTR [rsp+0x30],rbp
  40c41f:	mov    QWORD PTR [rsp+0x38],rdi
  40c424:	mov    rdx,r13
  40c427:	call   0x417130
  40c42c:	mov    rdx,rdi
  40c42f:	mov    QWORD PTR [rbx+0x28],rax
  40c433:	mov    rcx,rbp
  40c436:	call   0x426f50
  40c43b:	mov    rcx,QWORD PTR [rbx+0x28]
  40c43f:	mov    rdx,r13
  40c442:	call   0x417330
  40c447:	mov    r9,QWORD PTR [rbx+0x18]
  40c44b:	mov    QWORD PTR [rbx+0x28],rax
  40c44f:	test   r9,r9
  40c452:	je     0x40c4d5
  40c458:	xor    edi,edi
  40c45a:	cmp    r9,rsi
  40c45d:	je     0x40c510
  40c463:	test   r12b,r12b
  40c466:	jne    0x40c470
  40c468:	mov    rcx,rbx
  40c46b:	call   0x426d70
  40c470:	mov    eax,edi
  40c472:	add    rsp,0x48
  40c476:	pop    rbx
  40c477:	pop    rsi
  40c478:	pop    rdi
  40c479:	pop    rbp
  40c47a:	pop    r12
  40c47c:	pop    r13
  40c47e:	ret    
  40c47f:	nop
  40c480:	mov    rcx,rbx
  40c483:	call   0x426d40
  40c488:	mov    r9,QWORD PTR [rbx+0x18]
  40c48c:	cmp    rsi,r9
  40c48f:	je     0x40c44f
  40c491:	test   r9,r9
  40c494:	je     0x40c44f
  40c496:	mov    rcx,QWORD PTR [rbx+0x28]
  40c49a:	lea    r13,[rsp+0x30]
  40c49f:	mov    QWORD PTR [rsp+0x30],rbp
  40c4a4:	mov    QWORD PTR [rsp+0x38],rdi
  40c4a9:	mov    rdx,r13
  40c4ac:	call   0x417130
  40c4b1:	mov    rcx,rbx
  40c4b4:	mov    QWORD PTR [rbx+0x28],rax
  40c4b8:	call   0x426d70
  40c4bd:	mov    rcx,rbp
  40c4c0:	mov    rdx,rdi
  40c4c3:	call   0x426f50
  40c4c8:	mov    rcx,rbx
  40c4cb:	call   0x426d40
  40c4d0:	jmp    0x40c43b
  40c4d5:	mov    eax,DWORD PTR [rbx+0x20]
  40c4d8:	mov    QWORD PTR [rbx+0x18],rsi
  40c4dc:	test   eax,eax
  40c4de:	je     0x40c513
  40c4e0:	lea    rax,[rip+0x32117]        # 0x43e5fe
  40c4e7:	lea    r9,[rip+0x32662]        # 0x43eb50
  40c4ee:	lea    rdx,[rip+0x320b3]        # 0x43e5a8
  40c4f5:	lea    rcx,[rip+0x31c7c]        # 0x43e178
  40c4fc:	mov    r8d,0xab1
  40c502:	mov    QWORD PTR [rsp+0x20],rax
  40c507:	call   0x41e680
  40c50c:	nop    DWORD PTR [rax+0x0]
  40c510:	mov    eax,DWORD PTR [rbx+0x20]
  40c513:	add    eax,0x1
  40c516:	mov    edi,0x1
  40c51b:	mov    DWORD PTR [rbx+0x20],eax
  40c51e:	jmp    0x40c463
  40c523:	call   0x40b030
  40c528:	mov    rbx,rax
  40c52b:	jmp    0x40c3f6
  40c530:	push   r14
  40c532:	push   r13
  40c534:	push   r12
  40c536:	push   rbp
  40c537:	push   rdi
  40c538:	push   rsi
  40c539:	push   rbx
  40c53a:	sub    rsp,0x30
  40c53e:	test   rcx,rcx
  40c541:	mov    rbp,rcx
  40c544:	mov    rdi,rdx
  40c547:	je     0x40c7a9
  40c54d:	mov    rcx,rbp
  40c550:	call   0x426d40
  40c555:	mov    ebx,DWORD PTR [rbp+0x50]
  40c558:	mov    DWORD PTR [rbp+0xb0],0x0
  40c562:	test   ebx,ebx
  40c564:	jne    0x40c782
  40c56a:	mov    rcx,QWORD PTR [rbp+0x38]
  40c56e:	xor    r12d,r12d
  40c571:	xor    esi,esi
  40c573:	mov    eax,DWORD PTR [rcx+0x8]
  40c576:	test   eax,eax
  40c578:	jne    0x40c594
  40c57a:	jmp    0x40c5cb
  40c57c:	nop    DWORD PTR [rax+0x0]
  40c580:	sub    r8d,0x1
  40c584:	mov    DWORD PTR [r9+0x18],r8d
  40c588:	add    esi,0x1
  40c58b:	add    r12,0x8
  40c58f:	cmp    esi,DWORD PTR [rcx+0x8]
  40c592:	jae    0x40c5cb
  40c594:	mov    rax,QWORD PTR [rcx]
  40c597:	mov    r9,QWORD PTR [rax+r12*1]
  40c59b:	test   r9,r9
  40c59e:	je     0x40c588
  40c5a0:	mov    r8d,DWORD PTR [r9+0x18]
  40c5a4:	cmp    r8d,0x1
  40c5a8:	ja     0x40c580
  40c5aa:	mov    rcx,r9
  40c5ad:	mov    r8d,0x1
  40c5b3:	mov    rdx,rbp
  40c5b6:	call   0x40a2e0
  40c5bb:	mov    rcx,QWORD PTR [rbp+0x38]
  40c5bf:	add    esi,0x1
  40c5c2:	add    r12,0x8
  40c5c6:	cmp    esi,DWORD PTR [rcx+0x8]
  40c5c9:	jb     0x40c594
  40c5cb:	xor    edx,edx
  40c5cd:	call   0x429b20
  40c5d2:	mov    rsi,QWORD PTR [rbp+0x48]
  40c5d6:	mov    DWORD PTR [rbp+0x40],0xffffffff
  40c5dd:	test   rsi,rsi
  40c5e0:	jne    0x40c5fd
  40c5e2:	jmp    0x40c75f
  40c5e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c5f0:	mov    rsi,QWORD PTR [rsi+0x48]
  40c5f4:	test   rsi,rsi
  40c5f7:	je     0x40c75f
  40c5fd:	test   BYTE PTR [rsi+0x2c],0x1
  40c601:	je     0x40c5f0
  40c603:	add    DWORD PTR [rsi+0x18],0x1
  40c607:	lea    r12,[rsp+0x2c]
  40c60c:	mov    DWORD PTR [rsp+0x2c],0xffffffff
  40c614:	xor    r13d,r13d
  40c617:	mov    r14d,0x7fffffff
  40c61d:	nop    DWORD PTR [rax]
  40c620:	mov    eax,DWORD PTR [rsi+0x2c]
  40c623:	test   al,0x40
  40c625:	jne    0x40c650
  40c627:	test   al,0x10
  40c629:	je     0x40c6f0
  40c62f:	mov    eax,DWORD PTR [rsp+0x2c]
  40c633:	add    r13d,0x1
  40c637:	xor    edx,edx
  40c639:	mov    r14d,DWORD PTR [rsi+0x28]
  40c63d:	mov    DWORD PTR [rbp+0x40],0x0
  40c644:	test   eax,eax
  40c646:	js     0x40c650
  40c648:	cmp    eax,edx
  40c64a:	cmovg  eax,edx
  40c64d:	mov    DWORD PTR [rbp+0x40],eax
  40c650:	mov    rbx,QWORD PTR [rsi+0x48]
  40c654:	test   rbx,rbx
  40c657:	jne    0x40c669
  40c659:	jmp    0x40c673
  40c65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c660:	mov    rbx,QWORD PTR [rbx+0x48]
  40c664:	test   rbx,rbx
  40c667:	je     0x40c673
  40c669:	test   BYTE PTR [rbx+0x2c],0x1
  40c66d:	je     0x40c660
  40c66f:	add    DWORD PTR [rbx+0x18],0x1
  40c673:	mov    r8d,DWORD PTR [rsi+0x18]
  40c677:	cmp    r8d,0x1
  40c67b:	jbe    0x40c6b0
  40c67d:	sub    r8d,0x1
  40c681:	test   rbx,rbx
  40c684:	mov    DWORD PTR [rsi+0x18],r8d
  40c688:	je     0x40c6c6
  40c68a:	test   r13d,r13d
  40c68d:	mov    DWORD PTR [rsp+0x2c],0xffffffff
  40c695:	je     0x40c6a1
  40c697:	cmp    DWORD PTR [rbx+0x28],r14d
  40c69b:	jg     0x40c76a
  40c6a1:	mov    rsi,rbx
  40c6a4:	jmp    0x40c620
  40c6a9:	nop    DWORD PTR [rax+0x0]
  40c6b0:	mov    r8d,0x1
  40c6b6:	mov    rdx,rbp
  40c6b9:	mov    rcx,rsi
  40c6bc:	call   0x40a2e0
  40c6c1:	test   rbx,rbx
  40c6c4:	jne    0x40c68a
  40c6c6:	xor    ebx,ebx
  40c6c8:	test   r13d,r13d
  40c6cb:	setg   bl
  40c6ce:	mov    rcx,rbp
  40c6d1:	call   0x426d70
  40c6d6:	test   rdi,rdi
  40c6d9:	je     0x40c6de
  40c6db:	mov    DWORD PTR [rdi],r14d
  40c6de:	mov    eax,ebx
  40c6e0:	add    rsp,0x30
  40c6e4:	pop    rbx
  40c6e5:	pop    rsi
  40c6e6:	pop    rdi
  40c6e7:	pop    rbp
  40c6e8:	pop    r12
  40c6ea:	pop    r13
  40c6ec:	pop    r14
  40c6ee:	ret    
  40c6ef:	nop
  40c6f0:	mov    rax,QWORD PTR [rsi+0x10]
  40c6f4:	mov    rcx,rbp
  40c6f7:	mov    rbx,QWORD PTR [rax]
  40c6fa:	add    DWORD PTR [rbp+0x50],0x1
  40c6fe:	call   0x426d70
  40c703:	mov    rdx,r12
  40c706:	mov    rcx,rsi
  40c709:	call   rbx
  40c70b:	mov    rcx,rbp
  40c70e:	mov    ebx,eax
  40c710:	call   0x426d40
  40c715:	sub    DWORD PTR [rbp+0x50],0x1
  40c719:	test   ebx,ebx
  40c71b:	je     0x40c739
  40c71d:	mov    r8,rsi
  40c720:	jmp    0x40c72b
  40c722:	mov    r8,QWORD PTR [rax+0x8]
  40c726:	test   r8,r8
  40c729:	je     0x40c739
  40c72b:	mov    rax,QWORD PTR [r8+0x58]
  40c72f:	or     DWORD PTR [r8+0x2c],0x10
  40c734:	test   rax,rax
  40c737:	jne    0x40c722
  40c739:	test   BYTE PTR [rsi+0x2c],0x10
  40c73d:	jne    0x40c62f
  40c743:	mov    eax,DWORD PTR [rsp+0x2c]
  40c747:	test   eax,eax
  40c749:	js     0x40c650
  40c74f:	mov    edx,DWORD PTR [rbp+0x40]
  40c752:	test   edx,edx
  40c754:	jns    0x40c648
  40c75a:	jmp    0x40c64d
  40c75f:	mov    r14d,0x7fffffff
  40c765:	jmp    0x40c6ce
  40c76a:	mov    eax,DWORD PTR [rbx+0x18]
  40c76d:	cmp    eax,0x1
  40c770:	jbe    0x40c7b6
  40c772:	sub    eax,0x1
  40c775:	mov    DWORD PTR [rbx+0x18],eax
  40c778:	mov    ebx,0x1
  40c77d:	jmp    0x40c6ce
  40c782:	lea    r8,[rip+0x31ed7]        # 0x43e660
  40c789:	lea    rcx,[rip+0x319e8]        # 0x43e178
  40c790:	mov    edx,0x10
  40c795:	xor    ebx,ebx
  40c797:	call   0x40fae0
  40c79c:	mov    rcx,rbp
  40c79f:	call   0x426d70
  40c7a4:	jmp    0x40c6de
  40c7a9:	call   0x40b030
  40c7ae:	mov    rbp,rax
  40c7b1:	jmp    0x40c54d
  40c7b6:	mov    r8d,0x1
  40c7bc:	mov    rdx,rbp
  40c7bf:	mov    rcx,rbx
  40c7c2:	call   0x40a2e0
  40c7c7:	jmp    0x40c778
  40c7c9:	nop    DWORD PTR [rax+0x0]
  40c7d0:	push   r12
  40c7d2:	push   rbp
  40c7d3:	push   rdi
  40c7d4:	push   rsi
  40c7d5:	push   rbx
  40c7d6:	sub    rsp,0x20
  40c7da:	mov    edi,DWORD PTR [rsp+0x70]
  40c7de:	mov    rbp,rcx
  40c7e1:	mov    esi,edx
  40c7e3:	mov    r12,r8
  40c7e6:	mov    rbx,r9
  40c7e9:	call   0x426d40
  40c7ee:	mov    r10,QWORD PTR [rbp+0x58]
  40c7f2:	test   r10,r10
  40c7f5:	je     0x40c873
  40c7f7:	cmp    esi,DWORD PTR [r10+0x18]
  40c7fb:	jl     0x40c873
  40c7fd:	mov    r9,rbx
  40c800:	xor    ebx,ebx
  40c802:	jmp    0x40c80e
  40c804:	add    r9,0x10
  40c808:	cmp    DWORD PTR [r10+0x18],esi
  40c80c:	jg     0x40c83a
  40c80e:	cmp    edi,ebx
  40c810:	jle    0x40c82e
  40c812:	mov    rax,QWORD PTR [r10]
  40c815:	mov    rdx,QWORD PTR [rax]
  40c818:	movzx  eax,WORD PTR [rax+0x8]
  40c81c:	mov    QWORD PTR [r9],rdx
  40c81f:	and    eax,0xffffffc7
  40c822:	mov    WORD PTR [r9+0x8],ax
  40c827:	xor    eax,eax
  40c829:	mov    WORD PTR [r9+0xa],ax
  40c82e:	mov    r10,QWORD PTR [r10+0x10]
  40c832:	add    ebx,0x1
  40c835:	test   r10,r10
  40c838:	jne    0x40c804
  40c83a:	test   r12,r12
  40c83d:	mov    DWORD PTR [rbp+0x98],0x0
  40c847:	je     0x40c85e
  40c849:	mov    eax,DWORD PTR [rbp+0x40]
  40c84c:	test   eax,eax
  40c84e:	mov    DWORD PTR [r12],eax
  40c852:	je     0x40c85e
  40c854:	mov    DWORD PTR [rbp+0xb0],0x0
  40c85e:	mov    rcx,rbp
  40c861:	call   0x426d70
  40c866:	mov    eax,ebx
  40c868:	add    rsp,0x20
  40c86c:	pop    rbx
  40c86d:	pop    rsi
  40c86e:	pop    rdi
  40c86f:	pop    rbp
  40c870:	pop    r12
  40c872:	ret    
  40c873:	xor    ebx,ebx
  40c875:	jmp    0x40c83a
  40c877:	nop    WORD PTR [rax+rax*1+0x0]
  40c880:	push   r12
  40c882:	push   rbp
  40c883:	push   rdi
  40c884:	push   rsi
  40c885:	push   rbx
  40c886:	sub    rsp,0x20
  40c88a:	mov    rdi,rcx
  40c88d:	mov    ebp,edx
  40c88f:	mov    r12,r8
  40c892:	mov    esi,r9d
  40c895:	call   0x426d40
  40c89a:	mov    eax,DWORD PTR [rdi+0x50]
  40c89d:	test   eax,eax
  40c89f:	jne    0x40ca71
  40c8a5:	cmp    WORD PTR [rdi+0x92],0x0
  40c8ad:	jne    0x40ca40
  40c8b3:	mov    ebx,DWORD PTR [rdi+0x98]
  40c8b9:	test   ebx,ebx
  40c8bb:	jne    0x40ca5a
  40c8c1:	test   esi,esi
  40c8c3:	mov    r11,QWORD PTR [rdi+0x58]
  40c8c7:	jle    0x40c900
  40c8c9:	lea    eax,[rsi-0x1]
  40c8cc:	lea    r10,[r12+0xa]
  40c8d1:	shl    rax,0x4
  40c8d5:	lea    rcx,[r12+rax*1+0x1a]
  40c8da:	nop    WORD PTR [rax+rax*1+0x0]
  40c8e0:	mov    rdx,QWORD PTR [r11]
  40c8e3:	cmp    WORD PTR [rdx+0x8],0x0
  40c8e8:	je     0x40c8f3
  40c8ea:	movzx  r8d,WORD PTR [r10]
  40c8ee:	mov    WORD PTR [rdx+0xa],r8w
  40c8f3:	add    r10,0x10
  40c8f7:	mov    r11,QWORD PTR [r11+0x10]
  40c8fb:	cmp    r10,rcx
  40c8fe:	jne    0x40c8e0
  40c900:	mov    rsi,QWORD PTR [rdi+0x48]
  40c904:	test   rsi,rsi
  40c907:	jne    0x40c91d
  40c909:	jmp    0x40c9ad
  40c90e:	xchg   ax,ax
  40c910:	mov    rsi,QWORD PTR [rsi+0x48]
  40c914:	test   rsi,rsi
  40c917:	je     0x40c9ad
  40c91d:	test   BYTE PTR [rsi+0x2c],0x1
  40c921:	je     0x40c910
  40c923:	add    DWORD PTR [rsi+0x18],0x1
  40c927:	xor    r12d,r12d
  40c92a:	nop    WORD PTR [rax+rax*1+0x0]
  40c930:	mov    eax,DWORD PTR [rsi+0x2c]
  40c933:	test   al,0x40
  40c935:	jne    0x40c956
  40c937:	test   al,0x10
  40c939:	je     0x40c9e2
  40c93f:	add    DWORD PTR [rsi+0x18],0x1
  40c943:	mov    rcx,QWORD PTR [rdi+0x38]
  40c947:	mov    rdx,rsi
  40c94a:	add    r12d,0x1
  40c94e:	call   0x429cc0
  40c953:	mov    ebp,DWORD PTR [rsi+0x28]
  40c956:	mov    rbx,QWORD PTR [rsi+0x48]
  40c95a:	test   rbx,rbx
  40c95d:	jne    0x40c96a
  40c95f:	jmp    0x40c974
  40c961:	mov    rbx,QWORD PTR [rbx+0x48]
  40c965:	test   rbx,rbx
  40c968:	je     0x40c974
  40c96a:	test   BYTE PTR [rbx+0x2c],0x1
  40c96e:	je     0x40c961
  40c970:	add    DWORD PTR [rbx+0x18],0x1
  40c974:	mov    eax,DWORD PTR [rsi+0x18]
  40c977:	cmp    eax,0x1
  40c97a:	jbe    0x40c9c2
  40c97c:	sub    eax,0x1
  40c97f:	test   rbx,rbx
  40c982:	mov    DWORD PTR [rsi+0x18],eax
  40c985:	je     0x40c9d8
  40c987:	test   r12d,r12d
  40c98a:	je     0x40c991
  40c98c:	cmp    DWORD PTR [rbx+0x28],ebp
  40c98f:	jg     0x40c996
  40c991:	mov    rsi,rbx
  40c994:	jmp    0x40c930
  40c996:	mov    eax,DWORD PTR [rbx+0x18]
  40c999:	cmp    eax,0x1
  40c99c:	jbe    0x40caa0
  40c9a2:	sub    eax,0x1
  40c9a5:	mov    DWORD PTR [rbx+0x18],eax
  40c9a8:	mov    ebx,0x1
  40c9ad:	mov    rcx,rdi
  40c9b0:	call   0x426d70
  40c9b5:	mov    eax,ebx
  40c9b7:	add    rsp,0x20
  40c9bb:	pop    rbx
  40c9bc:	pop    rsi
  40c9bd:	pop    rdi
  40c9be:	pop    rbp
  40c9bf:	pop    r12
  40c9c1:	ret    
  40c9c2:	mov    r8d,0x1
  40c9c8:	mov    rdx,rdi
  40c9cb:	mov    rcx,rsi
  40c9ce:	call   0x40a2e0
  40c9d3:	test   rbx,rbx
  40c9d6:	jne    0x40c987
  40c9d8:	xor    ebx,ebx
  40c9da:	test   r12d,r12d
  40c9dd:	setg   bl
  40c9e0:	jmp    0x40c9ad
  40c9e2:	mov    rax,QWORD PTR [rsi+0x10]
  40c9e6:	mov    rcx,rdi
  40c9e9:	mov    rbx,QWORD PTR [rax+0x8]
  40c9ed:	add    DWORD PTR [rdi+0x50],0x1
  40c9f1:	call   0x426d70
  40c9f6:	mov    rcx,rsi
  40c9f9:	call   rbx
  40c9fb:	mov    rcx,rdi
  40c9fe:	mov    ebx,eax
  40ca00:	call   0x426d40
  40ca05:	sub    DWORD PTR [rdi+0x50],0x1
  40ca09:	test   ebx,ebx
  40ca0b:	je     0x40ca28
  40ca0d:	mov    rax,rsi
  40ca10:	jmp    0x40ca1b
  40ca12:	mov    rax,QWORD PTR [rax+0x8]
  40ca16:	test   rax,rax
  40ca19:	je     0x40ca28
  40ca1b:	or     DWORD PTR [rax+0x2c],0x10
  40ca1f:	mov    rax,QWORD PTR [rax+0x58]
  40ca23:	test   rax,rax
  40ca26:	jne    0x40ca12
  40ca28:	test   BYTE PTR [rsi+0x2c],0x10
  40ca2c:	je     0x40c956
  40ca32:	jmp    0x40c93f
  40ca37:	nop    WORD PTR [rax+rax*1+0x0]
  40ca40:	mov    rcx,QWORD PTR [rdi+0x80]
  40ca47:	call   0x4261a0
  40ca4c:	mov    ebx,DWORD PTR [rdi+0x98]
  40ca52:	test   ebx,ebx
  40ca54:	je     0x40c8c1
  40ca5a:	mov    rcx,rdi
  40ca5d:	xor    ebx,ebx
  40ca5f:	call   0x426d70
  40ca64:	mov    eax,ebx
  40ca66:	add    rsp,0x20
  40ca6a:	pop    rbx
  40ca6b:	pop    rsi
  40ca6c:	pop    rdi
  40ca6d:	pop    rbp
  40ca6e:	pop    r12
  40ca70:	ret    
  40ca71:	lea    r8,[rip+0x31c48]        # 0x43e6c0
  40ca78:	lea    rcx,[rip+0x316f9]        # 0x43e178
  40ca7f:	mov    edx,0x10
  40ca84:	xor    ebx,ebx
  40ca86:	call   0x40fae0
  40ca8b:	mov    rcx,rdi
  40ca8e:	call   0x426d70
  40ca93:	mov    eax,ebx
  40ca95:	add    rsp,0x20
  40ca99:	pop    rbx
  40ca9a:	pop    rsi
  40ca9b:	pop    rdi
  40ca9c:	pop    rbp
  40ca9d:	pop    r12
  40ca9f:	ret    
  40caa0:	mov    rcx,rbx
  40caa3:	mov    r8d,0x1
  40caa9:	mov    rdx,rdi
  40caac:	call   0x40a2e0
  40cab1:	mov    ebx,0x1
  40cab6:	jmp    0x40c9ad
  40cabb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cac0:	push   r15
  40cac2:	push   r14
  40cac4:	push   r13
  40cac6:	push   r12
  40cac8:	push   rbp
  40cac9:	push   rdi
  40caca:	push   rsi
  40cacb:	push   rbx
  40cacc:	sub    rsp,0x78
  40cad0:	mov    rbx,rcx
  40cad3:	call   0x426d40
  40cad8:	mov    rax,QWORD PTR [rbx+0x38]
  40cadc:	mov    edx,DWORD PTR [rax+0x8]
  40cadf:	test   edx,edx
  40cae1:	jne    0x40cb00
  40cae3:	mov    rcx,rbx
  40cae6:	call   0x426d70
  40caeb:	nop
  40caec:	add    rsp,0x78
  40caf0:	pop    rbx
  40caf1:	pop    rsi
  40caf2:	pop    rdi
  40caf3:	pop    rbp
  40caf4:	pop    r12
  40caf6:	pop    r13
  40caf8:	pop    r14
  40cafa:	pop    r15
  40cafc:	ret    
  40cafd:	nop    DWORD PTR [rax]
  40cb00:	call   0x40ad00
  40cb05:	mov    rcx,QWORD PTR [rbx+0x38]
  40cb09:	mov    rbp,rax
  40cb0c:	mov    eax,DWORD PTR [rcx+0x8]
  40cb0f:	test   eax,eax
  40cb11:	je     0x40cdb3
  40cb17:	mov    rax,QWORD PTR [rcx]
  40cb1a:	xor    esi,esi
  40cb1c:	mov    r14,QWORD PTR [rax]
  40cb1f:	mov    QWORD PTR [rax],0x0
  40cb26:	test   r14,r14
  40cb29:	je     0x40cc91
  40cb2f:	lea    rax,[rsp+0x60]
  40cb34:	mov    QWORD PTR [rsp+0x38],rax
  40cb39:	lea    rax,[rsp+0x50]
  40cb3e:	mov    QWORD PTR [rsp+0x40],rax
  40cb43:	lea    rax,[rsp+0x58]
  40cb48:	mov    QWORD PTR [rsp+0x48],rax
  40cb4d:	nop    DWORD PTR [rax]
  40cb50:	mov    edi,DWORD PTR [r14+0x2c]
  40cb54:	mov    eax,edi
  40cb56:	and    eax,0xffffffef
  40cb59:	test   dil,0x1
  40cb5d:	mov    DWORD PTR [r14+0x2c],eax
  40cb61:	je     0x40cc51
  40cb67:	mov    r12,QWORD PTR [r14+0x8]
  40cb6b:	mov    rdx,QWORD PTR [r14+0x10]
  40cb6f:	mov    QWORD PTR [rsp+0x50],0x0
  40cb78:	mov    QWORD PTR [rsp+0x58],0x0
  40cb81:	mov    r13,QWORD PTR [r14]
  40cb84:	test   r12,r12
  40cb87:	mov    r15,QWORD PTR [rdx+0x10]
  40cb8b:	je     0x40ccc0
  40cb91:	mov    rcx,r13
  40cb94:	call   QWORD PTR [r12]
  40cb98:	mov    eax,DWORD PTR [r14+0x2c]
  40cb9c:	test   al,0x20
  40cb9e:	je     0x40cd00
  40cba4:	mov    edi,eax
  40cba6:	or     eax,0x2
  40cba9:	mov    r9,QWORD PTR [rsp+0x40]
  40cbae:	and    edi,0x2
  40cbb1:	mov    DWORD PTR [r14+0x2c],eax
  40cbb5:	mov    r8,QWORD PTR [rsp+0x48]
  40cbba:	mov    rdx,r14
  40cbbd:	mov    rcx,r13
  40cbc0:	call   QWORD PTR [r12+0x10]
  40cbc5:	mov    rcx,rbx
  40cbc8:	call   0x426d70
  40cbcd:	mov    rax,QWORD PTR [rbp+0x8]
  40cbd1:	add    DWORD PTR [rbp+0x0],0x1
  40cbd5:	mov    rcx,r14
  40cbd8:	mov    QWORD PTR [rsp+0x60],r14
  40cbdd:	mov    r8,QWORD PTR [rsp+0x50]
  40cbe2:	mov    rdx,QWORD PTR [rsp+0x58]
  40cbe7:	mov    QWORD PTR [rsp+0x68],rax
  40cbec:	mov    rax,QWORD PTR [rsp+0x38]
  40cbf1:	mov    QWORD PTR [rbp+0x8],rax
  40cbf5:	call   r15
  40cbf8:	mov    r15d,eax
  40cbfb:	mov    rax,QWORD PTR [rsp+0x38]
  40cc00:	cmp    QWORD PTR [rbp+0x8],rax
  40cc04:	je     0x40cd11
  40cc0a:	lea    rax,[rip+0x31b17]        # 0x43e728
  40cc11:	lea    r9,[rip+0x31f28]        # 0x43eb40
  40cc18:	lea    rdx,[rip+0x31989]        # 0x43e5a8
  40cc1f:	lea    rcx,[rip+0x31552]        # 0x43e178
  40cc26:	mov    r8d,0x9ee
  40cc2c:	mov    QWORD PTR [rsp+0x20],rax
  40cc31:	call   0x41e680
  40cc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc40:	mov    r8d,0x1
  40cc46:	mov    rdx,rbx
  40cc49:	mov    rcx,r14
  40cc4c:	call   0x40a5b0
  40cc51:	mov    eax,DWORD PTR [r14+0x18]
  40cc55:	cmp    eax,0x1
  40cc58:	jbe    0x40cce0
  40cc5e:	sub    eax,0x1
  40cc61:	mov    DWORD PTR [r14+0x18],eax
  40cc65:	mov    rcx,QWORD PTR [rbx+0x38]
  40cc69:	add    esi,0x1
  40cc6c:	cmp    esi,DWORD PTR [rcx+0x8]
  40cc6f:	jae    0x40cdb3
  40cc75:	mov    rdx,QWORD PTR [rcx]
  40cc78:	mov    eax,esi
  40cc7a:	lea    rax,[rdx+rax*8]
  40cc7e:	mov    r14,QWORD PTR [rax]
  40cc81:	mov    QWORD PTR [rax],0x0
  40cc88:	test   r14,r14
  40cc8b:	jne    0x40cb50
  40cc91:	lea    rax,[rip+0x31a86]        # 0x43e71e
  40cc98:	lea    r9,[rip+0x31ea1]        # 0x43eb40
  40cc9f:	lea    rdx,[rip+0x31902]        # 0x43e5a8
  40cca6:	lea    rcx,[rip+0x314cb]        # 0x43e178
  40ccad:	mov    r8d,0x9ba
  40ccb3:	mov    QWORD PTR [rsp+0x20],rax
  40ccb8:	call   0x41e680
  40ccbd:	nop    DWORD PTR [rax]
  40ccc0:	test   dil,0x20
  40ccc4:	je     0x40cda0
  40ccca:	or     eax,0x2
  40cccd:	and    edi,0x2
  40ccd0:	mov    DWORD PTR [r14+0x2c],eax
  40ccd4:	jmp    0x40cbc5
  40ccd9:	nop    DWORD PTR [rax+0x0]
  40cce0:	mov    r8d,0x1
  40cce6:	mov    rdx,rbx
  40cce9:	mov    rcx,r14
  40ccec:	call   0x40a2e0
  40ccf1:	jmp    0x40cc65
  40ccf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd00:	mov    rcx,r14
  40cd03:	call   0x40a6e0
  40cd08:	mov    eax,DWORD PTR [r14+0x2c]
  40cd0c:	jmp    0x40cba4
  40cd11:	mov    rax,QWORD PTR [rsp+0x68]
  40cd16:	sub    DWORD PTR [rbp+0x0],0x1
  40cd1a:	test   r12,r12
  40cd1d:	mov    QWORD PTR [rbp+0x8],rax
  40cd21:	je     0x40cd2b
  40cd23:	mov    rcx,r13
  40cd26:	call   QWORD PTR [r12+0x8]
  40cd2b:	mov    rcx,rbx
  40cd2e:	call   0x426d40
  40cd33:	test   edi,edi
  40cd35:	jne    0x40cd3c
  40cd37:	and    DWORD PTR [r14+0x2c],0xfffffffd
  40cd3c:	mov    eax,DWORD PTR [r14+0x2c]
  40cd40:	and    eax,0x41
  40cd43:	cmp    eax,0x41
  40cd46:	je     0x40cd92
  40cd48:	test   r15d,r15d
  40cd4b:	jne    0x40cc51
  40cd51:	test   BYTE PTR [r14+0x2c],0x1
  40cd56:	je     0x40cc51
  40cd5c:	cmp    rbx,QWORD PTR [r14+0x20]
  40cd60:	je     0x40cc40
  40cd66:	lea    rax,[rip+0x319f0]        # 0x43e75d
  40cd6d:	lea    r9,[rip+0x31dcc]        # 0x43eb40
  40cd74:	lea    rdx,[rip+0x3182d]        # 0x43e5a8
  40cd7b:	lea    rcx,[rip+0x313f6]        # 0x43e178
  40cd82:	mov    r8d,0xa02
  40cd88:	mov    QWORD PTR [rsp+0x20],rax
  40cd8d:	call   0x41e680
  40cd92:	mov    rcx,r14
  40cd95:	call   0x40a820
  40cd9a:	jmp    0x40cd48
  40cd9c:	nop    DWORD PTR [rax+0x0]
  40cda0:	mov    rcx,r14
  40cda3:	call   0x40a6e0
  40cda8:	mov    eax,DWORD PTR [r14+0x2c]
  40cdac:	mov    edi,eax
  40cdae:	jmp    0x40ccca
  40cdb3:	xor    edx,edx
  40cdb5:	call   0x429b20
  40cdba:	jmp    0x40cae3
  40cdbf:	nop
  40cdc0:	push   r15
  40cdc2:	push   r14
  40cdc4:	push   r13
  40cdc6:	push   r12
  40cdc8:	push   rbp
  40cdc9:	push   rdi
  40cdca:	push   rsi
  40cdcb:	push   rbx
  40cdcc:	sub    rsp,0x48
  40cdd0:	mov    rsi,rcx
  40cdd3:	mov    r14d,edx
  40cdd6:	mov    r12d,r8d
  40cdd9:	call   0x426d70
  40cdde:	mov    rcx,rsi
  40cde1:	call   0x40c120
  40cde6:	test   eax,eax
  40cde8:	mov    ebx,eax
  40cdea:	mov    rcx,rsi
  40cded:	jne    0x40ce10
  40cdef:	call   0x426d40
  40cdf4:	test   r14d,r14d
  40cdf7:	jne    0x40cf20
  40cdfd:	mov    eax,ebx
  40cdff:	add    rsp,0x48
  40ce03:	pop    rbx
  40ce04:	pop    rsi
  40ce05:	pop    rdi
  40ce06:	pop    rbp
  40ce07:	pop    r12
  40ce09:	pop    r13
  40ce0b:	pop    r14
  40ce0d:	pop    r15
  40ce0f:	ret    
  40ce10:	call   0x426d40
  40ce15:	mov    rbp,QWORD PTR [rsi+0x70]
  40ce19:	test   rbp,rbp
  40ce1c:	je     0x40d0f6
  40ce22:	mov    rcx,rsi
  40ce25:	mov    ebx,DWORD PTR [rsi+0x78]
  40ce28:	lea    r13,[rsp+0x3c]
  40ce2d:	call   0x426d70
  40ce32:	lea    rdx,[rsp+0x38]
  40ce37:	mov    rcx,rsi
  40ce3a:	call   0x40c530
  40ce3f:	jmp    0x40ce72
  40ce41:	mov    rcx,rsi
  40ce44:	mov    ebx,edi
  40ce46:	call   0x426d40
  40ce4b:	mov    rcx,rbp
  40ce4e:	call   0x40e6e0
  40ce53:	movsxd rcx,edi
  40ce56:	mov    edx,0x10
  40ce5b:	mov    DWORD PTR [rsi+0x78],edi
  40ce5e:	call   0x40e7a0
  40ce63:	mov    rcx,rsi
  40ce66:	mov    QWORD PTR [rsi+0x70],rax
  40ce6a:	mov    rbp,rax
  40ce6d:	call   0x426d70
  40ce72:	mov    edx,DWORD PTR [rsp+0x38]
  40ce76:	mov    DWORD PTR [rsp+0x20],ebx
  40ce7a:	mov    r9,rbp
  40ce7d:	mov    r8,r13
  40ce80:	mov    rcx,rsi
  40ce83:	call   0x40c7d0
  40ce88:	cmp    eax,ebx
  40ce8a:	mov    edi,eax
  40ce8c:	jg     0x40ce41
  40ce8e:	test   r14d,r14d
  40ce91:	je     0x40cf10
  40ce93:	mov    ebx,DWORD PTR [rsp+0x3c]
  40ce97:	mov    eax,ebx
  40ce99:	or     eax,edi
  40ce9b:	je     0x40cedf
  40ce9d:	mov    edx,DWORD PTR [rip+0x7727d]        # 0x484120
  40cea3:	test   edx,edx
  40cea5:	jne    0x40d0d4
  40ceab:	mov    rcx,rsi
  40ceae:	call   0x426d40
  40ceb3:	mov    rcx,rsi
  40ceb6:	mov    r13,QWORD PTR [rsi+0xa0]
  40cebd:	call   0x426d70
  40cec2:	mov    r8d,ebx
  40cec5:	mov    edx,edi
  40cec7:	mov    rcx,rbp
  40ceca:	call   r13
  40cecd:	test   eax,eax
  40cecf:	js     0x40d112
  40ced5:	mov    eax,DWORD PTR [rip+0x77245]        # 0x484120
  40cedb:	test   eax,eax
  40cedd:	jne    0x40cf4a
  40cedf:	mov    edx,DWORD PTR [rsp+0x38]
  40cee3:	mov    r9d,edi
  40cee6:	mov    r8,rbp
  40cee9:	mov    rcx,rsi
  40ceec:	call   0x40c880
  40cef1:	test   r12d,r12d
  40cef4:	mov    ebx,eax
  40cef6:	jne    0x40cf40
  40cef8:	mov    rcx,rsi
  40cefb:	call   0x40c260
  40cf00:	mov    rcx,rsi
  40cf03:	call   0x426d40
  40cf08:	jmp    0x40cdfd
  40cf0d:	nop    DWORD PTR [rax]
  40cf10:	mov    DWORD PTR [rsp+0x3c],0x0
  40cf18:	xor    ebx,ebx
  40cf1a:	jmp    0x40ce97
  40cf1f:	nop
  40cf20:	lea    rdx,[rsi+0x8]
  40cf24:	mov    r8,rsi
  40cf27:	mov    rcx,rsi
  40cf2a:	call   0x40c3d0
  40cf2f:	test   eax,eax
  40cf31:	jne    0x40ce15
  40cf37:	jmp    0x40cdfd
  40cf3c:	nop    DWORD PTR [rax+0x0]
  40cf40:	mov    rcx,rsi
  40cf43:	call   0x40cac0
  40cf48:	jmp    0x40cef8
  40cf4a:	mov    rcx,rsi
  40cf4d:	call   0x426d40
  40cf52:	xor    edx,edx
  40cf54:	mov    rcx,r15
  40cf57:	call   0x41f200
  40cf5c:	lea    rcx,[rip+0x3183d]        # 0x43e7a0
  40cf63:	movapd xmm3,xmm0
  40cf67:	movq   r9,xmm0
  40cf6c:	mov    r8d,ebx
  40cf6f:	mov    edx,edi
  40cf71:	call   0x40fef0
  40cf76:	mov    rcx,r15
  40cf79:	call   0x41f0b0
  40cf7e:	mov    r13,QWORD PTR [rsi+0x58]
  40cf82:	test   r13,r13
  40cf85:	je     0x40d02d
  40cf8b:	lea    eax,[rdi-0x1]
  40cf8e:	shl    rax,0x4
  40cf92:	lea    r14,[rbp+rax*1+0x1a]
  40cf97:	nop    WORD PTR [rax+rax*1+0x0]
  40cfa0:	test   edi,edi
  40cfa2:	jle    0x40d020
  40cfa4:	lea    rbx,[rbp+0xa]
  40cfa8:	jmp    0x40cfb9
  40cfaa:	nop    WORD PTR [rax+rax*1+0x0]
  40cfb0:	add    rbx,0x10
  40cfb4:	cmp    rbx,r14
  40cfb7:	je     0x40d020
  40cfb9:	mov    r10,QWORD PTR [r13+0x0]
  40cfbd:	mov    rdx,QWORD PTR [rbx-0xa]
  40cfc1:	cmp    rdx,QWORD PTR [r10]
  40cfc4:	jne    0x40cfb0
  40cfc6:	cmp    WORD PTR [r10+0x8],0x0
  40cfcc:	je     0x40cfb0
  40cfce:	cmp    WORD PTR [rbx],0x0
  40cfd2:	je     0x40cfb0
  40cfd4:	lea    rcx,[rip+0x317fb]        # 0x43e7d6
  40cfdb:	call   0x40fef0
  40cfe0:	movzx  eax,WORD PTR [rbx]
  40cfe3:	test   al,0x1
  40cfe5:	jne    0x40d0c0
  40cfeb:	test   al,0x4
  40cfed:	jne    0x40d0a4
  40cff3:	test   al,0x2
  40cff5:	jne    0x40d090
  40cffb:	test   al,0x8
  40cffd:	jne    0x40d050
  40cfff:	test   al,0x10
  40d001:	jne    0x40d063
  40d003:	test   al,0x20
  40d005:	jne    0x40d076
  40d007:	lea    rcx,[rip+0x317df]        # 0x43e7ed
  40d00e:	add    rbx,0x10
  40d012:	call   0x40fef0
  40d017:	cmp    rbx,r14
  40d01a:	jne    0x40cfb9
  40d01c:	nop    DWORD PTR [rax+0x0]
  40d020:	mov    r13,QWORD PTR [r13+0x10]
  40d024:	test   r13,r13
  40d027:	jne    0x40cfa0
  40d02d:	lea    rcx,[rip+0x317bb]        # 0x43e7ef
  40d034:	call   0x40fef0
  40d039:	mov    rcx,rsi
  40d03c:	call   0x426d70
  40d041:	jmp    0x40cedf
  40d046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d050:	lea    rcx,[rip+0x31790]        # 0x43e7e7
  40d057:	call   0x40fef0
  40d05c:	movzx  eax,WORD PTR [rbx]
  40d05f:	test   al,0x10
  40d061:	je     0x40d003
  40d063:	lea    rcx,[rip+0x3177f]        # 0x43e7e9
  40d06a:	call   0x40fef0
  40d06f:	movzx  eax,WORD PTR [rbx]
  40d072:	test   al,0x20
  40d074:	je     0x40d007
  40d076:	lea    rcx,[rip+0x3176e]        # 0x43e7eb
  40d07d:	call   0x40fef0
  40d082:	jmp    0x40d007
  40d087:	nop    WORD PTR [rax+rax*1+0x0]
  40d090:	lea    rcx,[rip+0x3174e]        # 0x43e7e5
  40d097:	call   0x40fef0
  40d09c:	movzx  eax,WORD PTR [rbx]
  40d09f:	jmp    0x40cffb
  40d0a4:	lea    rcx,[rip+0x31738]        # 0x43e7e3
  40d0ab:	call   0x40fef0
  40d0b0:	movzx  eax,WORD PTR [rbx]
  40d0b3:	jmp    0x40cff3
  40d0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0c0:	lea    rcx,[rip+0x3171a]        # 0x43e7e1
  40d0c7:	call   0x40fef0
  40d0cc:	movzx  eax,WORD PTR [rbx]
  40d0cf:	jmp    0x40cfeb
  40d0d4:	lea    rcx,[rip+0x3169d]        # 0x43e778
  40d0db:	mov    r9d,ebx
  40d0de:	mov    r8d,edi
  40d0e1:	mov    rdx,rsi
  40d0e4:	call   0x40fef0
  40d0e9:	call   0x41f080
  40d0ee:	mov    r15,rax
  40d0f1:	jmp    0x40ceab
  40d0f6:	mov    ecx,DWORD PTR [rsi+0x68]
  40d0f9:	mov    edx,0x10
  40d0fe:	mov    DWORD PTR [rsi+0x78],ecx
  40d101:	call   0x40e7a0
  40d106:	mov    QWORD PTR [rsi+0x70],rax
  40d10a:	mov    rbp,rax
  40d10d:	jmp    0x40ce22
  40d112:	call   QWORD PTR [rip+0x797c8]        # 0x4868e0
  40d118:	jmp    0x40ced5
  40d11d:	nop    DWORD PTR [rax]
  40d120:	push   rsi
  40d121:	push   rbx
  40d122:	sub    rsp,0x28
  40d126:	test   rcx,rcx
  40d129:	mov    rbx,rcx
  40d12c:	je     0x40d160
  40d12e:	mov    rcx,rbx
  40d131:	call   0x426d40
  40d136:	call   0x41ef40
  40d13b:	xor    r8d,r8d
  40d13e:	xor    edx,edx
  40d140:	mov    rcx,rbx
  40d143:	call   0x40cdc0
  40d148:	mov    rcx,rbx
  40d14b:	mov    esi,eax
  40d14d:	call   0x426d70
  40d152:	mov    eax,esi
  40d154:	add    rsp,0x28
  40d158:	pop    rbx
  40d159:	pop    rsi
  40d15a:	ret    
  40d15b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d160:	call   0x40b030
  40d165:	mov    rbx,rax
  40d168:	jmp    0x40d12e
  40d16a:	nop    WORD PTR [rax+rax*1+0x0]
  40d170:	push   rsi
  40d171:	push   rbx
  40d172:	sub    rsp,0x28
  40d176:	test   rcx,rcx
  40d179:	mov    rbx,rcx
  40d17c:	mov    esi,edx
  40d17e:	je     0x40d1b0
  40d180:	mov    rcx,rbx
  40d183:	call   0x426d40
  40d188:	call   0x41ef40
  40d18d:	mov    edx,esi
  40d18f:	mov    r8d,0x1
  40d195:	mov    rcx,rbx
  40d198:	call   0x40cdc0
  40d19d:	mov    rcx,rbx
  40d1a0:	mov    esi,eax
  40d1a2:	call   0x426d70
  40d1a7:	mov    eax,esi
  40d1a9:	add    rsp,0x28
  40d1ad:	pop    rbx
  40d1ae:	pop    rsi
  40d1af:	ret    
  40d1b0:	call   0x40b030
  40d1b5:	mov    rbx,rax
  40d1b8:	jmp    0x40d180
  40d1ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d1c0:	sub    rsp,0x28
  40d1c4:	mov    rcx,QWORD PTR [rip+0x76f9d]        # 0x484168
  40d1cb:	mov    edx,0x1
  40d1d0:	call   0x40d170
  40d1d5:	jmp    0x40d1c4
  40d1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d1e0:	push   rsi
  40d1e1:	push   rbx
  40d1e2:	sub    rsp,0x28
  40d1e6:	test   rcx,rcx
  40d1e9:	mov    rbx,rcx
  40d1ec:	mov    esi,edx
  40d1ee:	je     0x40d220
  40d1f0:	mov    rcx,rbx
  40d1f3:	call   0x40ad50
  40d1f8:	mov    ecx,0x10
  40d1fd:	call   0x40e610
  40d202:	xor    edx,edx
  40d204:	test   esi,esi
  40d206:	mov    QWORD PTR [rax],rbx
  40d209:	setne  dl
  40d20c:	mov    DWORD PTR [rax+0xc],0x1
  40d213:	mov    DWORD PTR [rax+0x8],edx
  40d216:	add    rsp,0x28
  40d21a:	pop    rbx
  40d21b:	pop    rsi
  40d21c:	ret    
  40d21d:	nop    DWORD PTR [rax]
  40d220:	call   0x40b030
  40d225:	mov    rbx,rax
  40d228:	jmp    0x40d1f0
  40d22a:	nop    WORD PTR [rax+rax*1+0x0]
  40d230:	sub    rsp,0x28
  40d234:	test   rcx,rcx
  40d237:	je     0x40d271
  40d239:	mfence 
  40d23c:	mov    eax,DWORD PTR [rcx+0xc]
  40d23f:	test   eax,eax
  40d241:	jle    0x40d250
  40d243:	lock add DWORD PTR [rcx+0xc],0x1
  40d248:	mov    rax,rcx
  40d24b:	add    rsp,0x28
  40d24f:	ret    
  40d250:	lea    r8,[rip+0x315a9]        # 0x43e800
  40d257:	lea    rdx,[rip+0x318b2]        # 0x43eb10
  40d25e:	lea    rcx,[rip+0x30f13]        # 0x43e178
  40d265:	call   0x40fd20
  40d26a:	xor    eax,eax
  40d26c:	add    rsp,0x28
  40d270:	ret    
  40d271:	lea    r8,[rip+0x31579]        # 0x43e7f1
  40d278:	lea    rdx,[rip+0x31891]        # 0x43eb10
  40d27f:	lea    rcx,[rip+0x30ef2]        # 0x43e178
  40d286:	call   0x40fd20
  40d28b:	xor    eax,eax
  40d28d:	add    rsp,0x28
  40d291:	ret    
  40d292:	nop    DWORD PTR [rax+0x0]
  40d296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2a0:	push   rbx
  40d2a1:	sub    rsp,0x20
  40d2a5:	test   rcx,rcx
  40d2a8:	je     0x40d300
  40d2aa:	mfence 
  40d2ad:	mov    eax,DWORD PTR [rcx+0xc]
  40d2b0:	test   eax,eax
  40d2b2:	jle    0x40d2c1
  40d2b4:	lock sub DWORD PTR [rcx+0xc],0x1
  40d2b9:	je     0x40d2e0
  40d2bb:	add    rsp,0x20
  40d2bf:	pop    rbx
  40d2c0:	ret    
  40d2c1:	lea    r8,[rip+0x31538]        # 0x43e800
  40d2c8:	lea    rdx,[rip+0x31821]        # 0x43eaf0
  40d2cf:	lea    rcx,[rip+0x30ea2]        # 0x43e178
  40d2d6:	add    rsp,0x20
  40d2da:	pop    rbx
  40d2db:	jmp    0x40fd20
  40d2e0:	mov    rbx,rcx
  40d2e3:	mov    rcx,QWORD PTR [rcx]
  40d2e6:	call   0x40adc0
  40d2eb:	mov    rcx,rbx
  40d2ee:	add    rsp,0x20
  40d2f2:	pop    rbx
  40d2f3:	jmp    0x40e6e0
  40d2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d300:	lea    r8,[rip+0x314ea]        # 0x43e7f1
  40d307:	jmp    0x40d2c8
  40d309:	nop    DWORD PTR [rax+0x0]
  40d310:	push   rbx
  40d311:	sub    rsp,0x30
  40d315:	mov    rbx,rcx
  40d318:	call   0x41ef40
  40d31d:	test   rbx,rbx
  40d320:	je     0x40d440
  40d326:	mfence 
  40d329:	mov    eax,DWORD PTR [rbx+0xc]
  40d32c:	test   eax,eax
  40d32e:	jle    0x40d420
  40d334:	mov    rcx,QWORD PTR [rbx]
  40d337:	call   0x40c120
  40d33c:	test   eax,eax
  40d33e:	jne    0x40d3a0
  40d340:	mov    rcx,QWORD PTR [rbx]
  40d343:	call   0x426d40
  40d348:	lock add DWORD PTR [rbx+0xc],0x1
  40d34d:	mov    r9d,DWORD PTR [rbx+0x8]
  40d351:	test   r9d,r9d
  40d354:	jne    0x40d364
  40d356:	mov    DWORD PTR [rbx+0x8],0x1
  40d35d:	jmp    0x40d364
  40d35f:	nop
  40d360:	test   eax,eax
  40d362:	jne    0x40d3a8
  40d364:	mov    rcx,QWORD PTR [rbx]
  40d367:	lea    rdx,[rcx+0x8]
  40d36b:	mov    r8,rcx
  40d36e:	call   0x40c3d0
  40d373:	mov    r8d,DWORD PTR [rbx+0x8]
  40d377:	test   r8d,r8d
  40d37a:	jne    0x40d360
  40d37c:	mov    rcx,QWORD PTR [rbx]
  40d37f:	mov    DWORD PTR [rsp+0x2c],eax
  40d383:	call   0x426d70
  40d388:	mov    eax,DWORD PTR [rsp+0x2c]
  40d38c:	test   eax,eax
  40d38e:	jne    0x40d3e2
  40d390:	mov    rcx,rbx
  40d393:	add    rsp,0x30
  40d397:	pop    rbx
  40d398:	jmp    0x40d2a0
  40d39d:	nop    DWORD PTR [rax]
  40d3a0:	mov    rcx,QWORD PTR [rbx]
  40d3a3:	call   0x426d40
  40d3a8:	mov    rax,QWORD PTR [rbx]
  40d3ab:	mov    ecx,DWORD PTR [rax+0x50]
  40d3ae:	test   ecx,ecx
  40d3b0:	jne    0x40d400
  40d3b2:	lock add DWORD PTR [rbx+0xc],0x1
  40d3b7:	mov    DWORD PTR [rbx+0x8],0x1
  40d3be:	xchg   ax,ax
  40d3c0:	mov    rcx,QWORD PTR [rbx]
  40d3c3:	mov    edx,0x1
  40d3c8:	mov    r8d,0x1
  40d3ce:	call   0x40cdc0
  40d3d3:	mov    edx,DWORD PTR [rbx+0x8]
  40d3d6:	test   edx,edx
  40d3d8:	jne    0x40d3c0
  40d3da:	mov    rcx,QWORD PTR [rbx]
  40d3dd:	call   0x426d70
  40d3e2:	mov    rcx,QWORD PTR [rbx]
  40d3e5:	call   0x40c260
  40d3ea:	mov    rcx,rbx
  40d3ed:	add    rsp,0x30
  40d3f1:	pop    rbx
  40d3f2:	jmp    0x40d2a0
  40d3f7:	nop    WORD PTR [rax+rax*1+0x0]
  40d400:	lea    r8,[rip+0x31421]        # 0x43e828
  40d407:	lea    rcx,[rip+0x30d6a]        # 0x43e178
  40d40e:	mov    edx,0x10
  40d413:	add    rsp,0x30
  40d417:	pop    rbx
  40d418:	jmp    0x40fae0
  40d41d:	nop    DWORD PTR [rax]
  40d420:	lea    r8,[rip+0x313d9]        # 0x43e800
  40d427:	lea    rdx,[rip+0x316b2]        # 0x43eae0
  40d42e:	lea    rcx,[rip+0x30d43]        # 0x43e178
  40d435:	add    rsp,0x30
  40d439:	pop    rbx
  40d43a:	jmp    0x40fd20
  40d43f:	nop
  40d440:	lea    r8,[rip+0x313aa]        # 0x43e7f1
  40d447:	jmp    0x40d427
  40d449:	nop    DWORD PTR [rax+0x0]
  40d450:	push   rbx
  40d451:	sub    rsp,0x20
  40d455:	lea    r8,[rip+0x31395]        # 0x43e7f1
  40d45c:	test   rcx,rcx
  40d45f:	je     0x40d4ac
  40d461:	mfence 
  40d464:	mov    eax,DWORD PTR [rcx+0xc]
  40d467:	test   eax,eax
  40d469:	jle    0x40d4a5
  40d46b:	mov    rbx,rcx
  40d46e:	mov    rcx,QWORD PTR [rcx]
  40d471:	call   0x426d40
  40d476:	mov    rax,QWORD PTR [rbx]
  40d479:	mov    DWORD PTR [rbx+0x8],0x0
  40d480:	mov    rcx,QWORD PTR [rax+0x80]
  40d487:	call   0x4261b0
  40d48c:	mov    rax,QWORD PTR [rbx]
  40d48f:	lea    rcx,[rax+0x8]
  40d493:	call   0x426f40
  40d498:	mov    rcx,QWORD PTR [rbx]
  40d49b:	add    rsp,0x20
  40d49f:	pop    rbx
  40d4a0:	jmp    0x426d70
  40d4a5:	lea    r8,[rip+0x31354]        # 0x43e800
  40d4ac:	lea    rdx,[rip+0x3160d]        # 0x43eac0
  40d4b3:	lea    rcx,[rip+0x30cbe]        # 0x43e178
  40d4ba:	add    rsp,0x20
  40d4be:	pop    rbx
  40d4bf:	jmp    0x40fd20
  40d4c4:	xchg   ax,ax
  40d4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4d0:	sub    rsp,0x28
  40d4d4:	test   rcx,rcx
  40d4d7:	je     0x40d511
  40d4d9:	mfence 
  40d4dc:	mov    eax,DWORD PTR [rcx+0xc]
  40d4df:	test   eax,eax
  40d4e1:	jle    0x40d4f0
  40d4e3:	mov    eax,DWORD PTR [rcx+0x8]
  40d4e6:	add    rsp,0x28
  40d4ea:	ret    
  40d4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4f0:	lea    r8,[rip+0x31309]        # 0x43e800
  40d4f7:	lea    rdx,[rip+0x315a2]        # 0x43eaa0
  40d4fe:	lea    rcx,[rip+0x30c73]        # 0x43e178
  40d505:	call   0x40fd20
  40d50a:	xor    eax,eax
  40d50c:	add    rsp,0x28
  40d510:	ret    
  40d511:	lea    r8,[rip+0x312d9]        # 0x43e7f1
  40d518:	lea    rdx,[rip+0x31581]        # 0x43eaa0
  40d51f:	lea    rcx,[rip+0x30c52]        # 0x43e178
  40d526:	call   0x40fd20
  40d52b:	xor    eax,eax
  40d52d:	add    rsp,0x28
  40d531:	ret    
  40d532:	nop    DWORD PTR [rax+0x0]
  40d536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d540:	sub    rsp,0x28
  40d544:	test   rcx,rcx
  40d547:	je     0x40d581
  40d549:	mfence 
  40d54c:	mov    eax,DWORD PTR [rcx+0xc]
  40d54f:	test   eax,eax
  40d551:	jle    0x40d560
  40d553:	mov    rax,QWORD PTR [rcx]
  40d556:	add    rsp,0x28
  40d55a:	ret    
  40d55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d560:	lea    r8,[rip+0x31299]        # 0x43e800
  40d567:	lea    rdx,[rip+0x31512]        # 0x43ea80
  40d56e:	lea    rcx,[rip+0x30c03]        # 0x43e178
  40d575:	call   0x40fd20
  40d57a:	xor    eax,eax
  40d57c:	add    rsp,0x28
  40d580:	ret    
  40d581:	lea    r8,[rip+0x31269]        # 0x43e7f1
  40d588:	lea    rdx,[rip+0x314f1]        # 0x43ea80
  40d58f:	lea    rcx,[rip+0x30be2]        # 0x43e178
  40d596:	call   0x40fd20
  40d59b:	xor    eax,eax
  40d59d:	add    rsp,0x28
  40d5a1:	ret    
  40d5a2:	nop    DWORD PTR [rax+0x0]
  40d5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5b0:	push   rdi
  40d5b1:	push   rsi
  40d5b2:	push   rbx
  40d5b3:	sub    rsp,0x20
  40d5b7:	test   rcx,rcx
  40d5ba:	mov    rbx,rcx
  40d5bd:	mov    rsi,rdx
  40d5c0:	mov    edi,r8d
  40d5c3:	je     0x40d621
  40d5c5:	mfence 
  40d5c8:	mov    eax,DWORD PTR [rbx+0x30]
  40d5cb:	lea    r8,[rip+0x30d66]        # 0x43e338
  40d5d2:	test   eax,eax
  40d5d4:	jle    0x40d607
  40d5d6:	test   rsi,rsi
  40d5d9:	je     0x40d600
  40d5db:	mov    rcx,rbx
  40d5de:	call   0x426d40
  40d5e3:	mov    rcx,rbx
  40d5e6:	mov    r8,rsi
  40d5e9:	mov    edx,edi
  40d5eb:	call   0x40a770
  40d5f0:	mov    rcx,rbx
  40d5f3:	add    rsp,0x20
  40d5f7:	pop    rbx
  40d5f8:	pop    rsi
  40d5f9:	pop    rdi
  40d5fa:	jmp    0x426d70
  40d5ff:	nop
  40d600:	lea    r8,[rip+0x31293]        # 0x43e89a
  40d607:	lea    rdx,[rip+0x31452]        # 0x43ea60
  40d60e:	lea    rcx,[rip+0x30b63]        # 0x43e178
  40d615:	add    rsp,0x20
  40d619:	pop    rbx
  40d61a:	pop    rsi
  40d61b:	pop    rdi
  40d61c:	jmp    0x40fd20
  40d621:	call   0x40b030
  40d626:	mov    rbx,rax
  40d629:	jmp    0x40d5c5
  40d62b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d630:	push   rsi
  40d631:	push   rbx
  40d632:	sub    rsp,0x28
  40d636:	test   rcx,rcx
  40d639:	mov    rbx,rcx
  40d63c:	mov    rsi,rdx
  40d63f:	je     0x40d6a0
  40d641:	mfence 
  40d644:	mov    eax,DWORD PTR [rbx+0x30]
  40d647:	lea    r8,[rip+0x30cea]        # 0x43e338
  40d64e:	test   eax,eax
  40d650:	jle    0x40d687
  40d652:	test   rsi,rsi
  40d655:	je     0x40d680
  40d657:	mov    rcx,rbx
  40d65a:	call   0x426d40
  40d65f:	mov    rcx,rbx
  40d662:	mov    rdx,rsi
  40d665:	call   0x40a520
  40d66a:	mov    rcx,rbx
  40d66d:	add    rsp,0x28
  40d671:	pop    rbx
  40d672:	pop    rsi
  40d673:	jmp    0x426d70
  40d678:	nop    DWORD PTR [rax+rax*1+0x0]
  40d680:	lea    r8,[rip+0x31213]        # 0x43e89a
  40d687:	lea    rdx,[rip+0x313b2]        # 0x43ea40
  40d68e:	lea    rcx,[rip+0x30ae3]        # 0x43e178
  40d695:	add    rsp,0x28
  40d699:	pop    rbx
  40d69a:	pop    rsi
  40d69b:	jmp    0x40fd20
  40d6a0:	call   0x40b030
  40d6a5:	mov    rbx,rax
  40d6a8:	jmp    0x40d641
  40d6aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d6b0:	mov    rcx,rdx
  40d6b3:	jmp    0x40bf20
  40d6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6c0:	push   rsi
  40d6c1:	push   rbx
  40d6c2:	sub    rsp,0x28
  40d6c6:	mov    rbx,QWORD PTR [rcx+0x20]
  40d6ca:	test   rbx,rbx
  40d6cd:	je     0x40d720
  40d6cf:	mov    rcx,rbx
  40d6d2:	call   0x426d40
  40d6d7:	mov    eax,DWORD PTR [rbx+0xb0]
  40d6dd:	test   eax,eax
  40d6df:	je     0x40d700
  40d6e1:	mov    rsi,QWORD PTR [rbx+0xa8]
  40d6e8:	mov    rcx,rbx
  40d6eb:	call   0x426d70
  40d6f0:	mov    rax,rsi
  40d6f3:	add    rsp,0x28
  40d6f7:	pop    rbx
  40d6f8:	pop    rsi
  40d6f9:	ret    
  40d6fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d700:	call   0x40c040
  40d705:	mov    DWORD PTR [rbx+0xb0],0x1
  40d70f:	mov    rsi,rax
  40d712:	mov    QWORD PTR [rbx+0xa8],rax
  40d719:	jmp    0x40d6e8
  40d71b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d720:	lea    r8,[rip+0x30cc9]        # 0x43e3f0
  40d727:	lea    rdx,[rip+0x312f2]        # 0x43ea20
  40d72e:	lea    rcx,[rip+0x30a43]        # 0x43e178
  40d735:	xor    esi,esi
  40d737:	call   0x40fd20
  40d73c:	mov    rax,rsi
  40d73f:	add    rsp,0x28
  40d743:	pop    rbx
  40d744:	pop    rsi
  40d745:	ret    
  40d746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d750:	push   rdi
  40d751:	push   rbx
  40d752:	sub    rsp,0x38
  40d756:	test   rdx,rdx
  40d759:	mov    rbx,rcx
  40d75c:	je     0x40d7b0
  40d75e:	mov    rcx,r8
  40d761:	call   rdx
  40d763:	mov    edi,eax
  40d765:	xor    eax,eax
  40d767:	test   edi,edi
  40d769:	jne    0x40d772
  40d76b:	add    rsp,0x38
  40d76f:	pop    rbx
  40d770:	pop    rdi
  40d771:	ret    
  40d772:	mov    rcx,rbx
  40d775:	call   0x40d6c0
  40d77a:	mov    edx,DWORD PTR [rbx+0x68]
  40d77d:	mov    ecx,DWORD PTR [rbx+0x6c]
  40d780:	imul   rdx,rdx,0x3e8
  40d787:	add    rax,rdx
  40d78a:	test   ecx,ecx
  40d78c:	mov    QWORD PTR [rbx+0x60],rax
  40d790:	mov    eax,edi
  40d792:	je     0x40d76b
  40d794:	lea    rcx,[rbx+0x60]
  40d798:	mov    DWORD PTR [rsp+0x2c],edi
  40d79c:	call   0x40ab20
  40d7a1:	mov    eax,DWORD PTR [rsp+0x2c]
  40d7a5:	jmp    0x40d76b
  40d7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7b0:	lea    r8,[rip+0x310e9]        # 0x43e8a0
  40d7b7:	lea    rcx,[rip+0x309ba]        # 0x43e178
  40d7be:	mov    dl,0x10
  40d7c0:	call   0x40fae0
  40d7c5:	xor    eax,eax
  40d7c7:	add    rsp,0x38
  40d7cb:	pop    rbx
  40d7cc:	pop    rdi
  40d7cd:	ret    
  40d7ce:	xchg   ax,ax
  40d7d0:	push   rbx
  40d7d1:	sub    rsp,0x20
  40d7d5:	mov    rbx,rcx
  40d7d8:	call   0x40d6c0
  40d7dd:	cmp    QWORD PTR [rbx+0x60],rax
  40d7e1:	setle  al
  40d7e4:	movzx  eax,al
  40d7e7:	add    rsp,0x20
  40d7eb:	pop    rbx
  40d7ec:	ret    
  40d7ed:	nop    DWORD PTR [rax]
  40d7f0:	push   rsi
  40d7f1:	push   rbx
  40d7f2:	sub    rsp,0x28
  40d7f6:	mov    rbx,rcx
  40d7f9:	mov    rsi,rdx
  40d7fc:	call   0x40d6c0
  40d801:	mov    rcx,QWORD PTR [rbx+0x60]
  40d805:	cmp    rax,rcx
  40d808:	jl     0x40d820
  40d80a:	mov    eax,0x1
  40d80f:	mov    DWORD PTR [rsi],0x0
  40d815:	add    rsp,0x28
  40d819:	pop    rbx
  40d81a:	pop    rsi
  40d81b:	ret    
  40d81c:	nop    DWORD PTR [rax+0x0]
  40d820:	sub    rcx,rax
  40d823:	movabs r8,0x20c49ba5e353f7cf
  40d82d:	add    rcx,0x3e7
  40d834:	mov    rax,rcx
  40d837:	sar    rcx,0x3f
  40d83b:	imul   r8
  40d83e:	xor    eax,eax
  40d840:	sar    rdx,0x7
  40d844:	mov    r8,rdx
  40d847:	sub    r8,rcx
  40d84a:	mov    DWORD PTR [rsi],r8d
  40d84d:	add    rsp,0x28
  40d851:	pop    rbx
  40d852:	pop    rsi
  40d853:	ret    
  40d854:	xchg   ax,ax
  40d856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d860:	push   rsi
  40d861:	push   rbx
  40d862:	sub    rsp,0x28
  40d866:	test   rcx,rcx
  40d869:	mov    rbx,rcx
  40d86c:	mov    rsi,rdx
  40d86f:	je     0x40d8e0
  40d871:	mfence 
  40d874:	mov    eax,DWORD PTR [rbx+0x30]
  40d877:	test   eax,eax
  40d879:	jle    0x40d8a0
  40d87b:	mov    rcx,rbx
  40d87e:	call   0x426d40
  40d883:	test   rsi,rsi
  40d886:	je     0x40d8c0
  40d888:	mov    rcx,rbx
  40d88b:	mov    QWORD PTR [rbx+0xa0],rsi
  40d892:	add    rsp,0x28
  40d896:	pop    rbx
  40d897:	pop    rsi
  40d898:	jmp    0x426d70
  40d89d:	nop    DWORD PTR [rax]
  40d8a0:	lea    r8,[rip+0x30a91]        # 0x43e338
  40d8a7:	lea    rdx,[rip+0x31152]        # 0x43ea00
  40d8ae:	lea    rcx,[rip+0x308c3]        # 0x43e178
  40d8b5:	add    rsp,0x28
  40d8b9:	pop    rbx
  40d8ba:	pop    rsi
  40d8bb:	jmp    0x40fd20
  40d8c0:	mov    rax,QWORD PTR [rip+0x6e2f9]        # 0x47bbc0
  40d8c7:	mov    rcx,rbx
  40d8ca:	mov    QWORD PTR [rbx+0xa0],rax
  40d8d1:	add    rsp,0x28
  40d8d5:	pop    rbx
  40d8d6:	pop    rsi
  40d8d7:	jmp    0x426d70
  40d8dc:	nop    DWORD PTR [rax+0x0]
  40d8e0:	call   0x40b030
  40d8e5:	mov    rbx,rax
  40d8e8:	jmp    0x40d871
  40d8ea:	nop    WORD PTR [rax+rax*1+0x0]
  40d8f0:	push   rsi
  40d8f1:	push   rbx
  40d8f2:	sub    rsp,0x28
  40d8f6:	test   rcx,rcx
  40d8f9:	mov    rbx,rcx
  40d8fc:	je     0x40d953
  40d8fe:	mfence 
  40d901:	mov    eax,DWORD PTR [rbx+0x30]
  40d904:	test   eax,eax
  40d906:	jle    0x40d930
  40d908:	mov    rcx,rbx
  40d90b:	call   0x426d40
  40d910:	mov    rsi,QWORD PTR [rbx+0xa0]
  40d917:	mov    rcx,rbx
  40d91a:	call   0x426d70
  40d91f:	mov    rax,rsi
  40d922:	add    rsp,0x28
  40d926:	pop    rbx
  40d927:	pop    rsi
  40d928:	ret    
  40d929:	nop    DWORD PTR [rax+0x0]
  40d930:	lea    r8,[rip+0x30a01]        # 0x43e338
  40d937:	lea    rdx,[rip+0x310a2]        # 0x43e9e0
  40d93e:	lea    rcx,[rip+0x30833]        # 0x43e178
  40d945:	call   0x40fd20
  40d94a:	xor    eax,eax
  40d94c:	add    rsp,0x28
  40d950:	pop    rbx
  40d951:	pop    rsi
  40d952:	ret    
  40d953:	call   0x40b030
  40d958:	mov    rbx,rax
  40d95b:	jmp    0x40d8fe
  40d95d:	nop    DWORD PTR [rax]
  40d960:	sub    rsp,0x28
  40d964:	test   rcx,rcx
  40d967:	je     0x40d9a1
  40d969:	mfence 
  40d96c:	mov    eax,DWORD PTR [rcx+0x30]
  40d96f:	test   eax,eax
  40d971:	jle    0x40d983
  40d973:	mov    rcx,QWORD PTR [rcx+0x80]
  40d97a:	add    rsp,0x28
  40d97e:	jmp    0x4261b0
  40d983:	lea    r8,[rip+0x309ae]        # 0x43e338
  40d98a:	lea    rdx,[rip+0x3102f]        # 0x43e9c0
  40d991:	lea    rcx,[rip+0x307e0]        # 0x43e178
  40d998:	add    rsp,0x28
  40d99c:	jmp    0x40fd20
  40d9a1:	call   0x40b030
  40d9a6:	mov    rcx,rax
  40d9a9:	jmp    0x40d969
  40d9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9b0:	push   rdi
  40d9b1:	push   rsi
  40d9b2:	push   rbx
  40d9b3:	sub    rsp,0x20
  40d9b7:	test   rcx,rcx
  40d9ba:	mov    rbx,rcx
  40d9bd:	je     0x40d9f0
  40d9bf:	mov    rcx,rbx
  40d9c2:	call   0x426d40
  40d9c7:	mov    rdi,QWORD PTR [rbx+0x18]
  40d9cb:	call   0x41ef40
  40d9d0:	mov    rcx,rbx
  40d9d3:	mov    rsi,rax
  40d9d6:	call   0x426d70
  40d9db:	xor    eax,eax
  40d9dd:	cmp    rdi,rsi
  40d9e0:	sete   al
  40d9e3:	add    rsp,0x20
  40d9e7:	pop    rbx
  40d9e8:	pop    rsi
  40d9e9:	pop    rdi
  40d9ea:	ret    
  40d9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9f0:	call   0x40b030
  40d9f5:	mov    rbx,rax
  40d9f8:	jmp    0x40d9bf
  40d9fa:	nop    WORD PTR [rax+rax*1+0x0]
  40da00:	push   rsi
  40da01:	push   rbx
  40da02:	sub    rsp,0x28
  40da06:	mov    edx,0x70
  40da0b:	mov    esi,ecx
  40da0d:	lea    rcx,[rip+0x2c72c]        # 0x43a140
  40da14:	call   0x40b100
  40da19:	mov    rbx,rax
  40da1c:	mov    DWORD PTR [rax+0x68],esi
  40da1f:	call   0x40c040
  40da24:	mov    edx,DWORD PTR [rbx+0x68]
  40da27:	mov    ecx,DWORD PTR [rbx+0x6c]
  40da2a:	imul   rdx,rdx,0x3e8
  40da31:	add    rax,rdx
  40da34:	test   ecx,ecx
  40da36:	mov    QWORD PTR [rbx+0x60],rax
  40da3a:	je     0x40da45
  40da3c:	lea    rcx,[rbx+0x60]
  40da40:	call   0x40ab20
  40da45:	mov    rax,rbx
  40da48:	add    rsp,0x28
  40da4c:	pop    rbx
  40da4d:	pop    rsi
  40da4e:	ret    
  40da4f:	nop
  40da50:	push   rsi
  40da51:	push   rbx
  40da52:	sub    rsp,0x28
  40da56:	mov    edx,0x70
  40da5b:	mov    esi,ecx
  40da5d:	lea    rcx,[rip+0x2c6dc]        # 0x43a140
  40da64:	imul   esi,esi,0x3e8
  40da6a:	call   0x40b100
  40da6f:	mov    rbx,rax
  40da72:	mov    DWORD PTR [rax+0x6c],0x1
  40da79:	mov    DWORD PTR [rax+0x68],esi
  40da7c:	call   0x40c040
  40da81:	mov    edx,DWORD PTR [rbx+0x68]
  40da84:	mov    ecx,DWORD PTR [rbx+0x6c]
  40da87:	imul   rdx,rdx,0x3e8
  40da8e:	add    rax,rdx
  40da91:	test   ecx,ecx
  40da93:	mov    QWORD PTR [rbx+0x60],rax
  40da97:	je     0x40daa2
  40da99:	lea    rcx,[rbx+0x60]
  40da9d:	call   0x40ab20
  40daa2:	mov    rax,rbx
  40daa5:	add    rsp,0x28
  40daa9:	pop    rbx
  40daaa:	pop    rsi
  40daab:	ret    
  40daac:	nop    DWORD PTR [rax+0x0]
  40dab0:	push   rbp
  40dab1:	push   rdi
  40dab2:	push   rsi
  40dab3:	push   rbx
  40dab4:	sub    rsp,0x28
  40dab8:	test   r8,r8
  40dabb:	mov    edi,ecx
  40dabd:	mov    rbx,r8
  40dac0:	mov    rbp,r9
  40dac3:	je     0x40db11
  40dac5:	mov    ecx,edx
  40dac7:	call   0x40da00
  40dacc:	test   edi,edi
  40dace:	mov    rsi,rax
  40dad1:	jne    0x40db05
  40dad3:	mov    r9,QWORD PTR [rsp+0x70]
  40dad8:	mov    r8,rbp
  40dadb:	mov    rdx,rbx
  40dade:	mov    rcx,rsi
  40dae1:	call   0x40b6b0
  40dae6:	xor    edx,edx
  40dae8:	mov    rcx,rsi
  40daeb:	call   0x40b190
  40daf0:	mov    rcx,rsi
  40daf3:	mov    ebx,eax
  40daf5:	call   0x40bbb0
  40dafa:	mov    eax,ebx
  40dafc:	add    rsp,0x28
  40db00:	pop    rbx
  40db01:	pop    rsi
  40db02:	pop    rdi
  40db03:	pop    rbp
  40db04:	ret    
  40db05:	mov    edx,edi
  40db07:	mov    rcx,rsi
  40db0a:	call   0x40b7d0
  40db0f:	jmp    0x40dad3
  40db11:	lea    r8,[rip+0x30dda]        # 0x43e8f2
  40db18:	lea    rdx,[rip+0x30e81]        # 0x43e9a0
  40db1f:	lea    rcx,[rip+0x30652]        # 0x43e178
  40db26:	call   0x40fd20
  40db2b:	xor    eax,eax
  40db2d:	add    rsp,0x28
  40db31:	pop    rbx
  40db32:	pop    rsi
  40db33:	pop    rdi
  40db34:	pop    rbp
  40db35:	ret    
  40db36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db40:	sub    rsp,0x38
  40db44:	mov    r9,r8
  40db47:	mov    QWORD PTR [rsp+0x20],0x0
  40db50:	mov    r8,rdx
  40db53:	mov    edx,ecx
  40db55:	xor    ecx,ecx
  40db57:	call   0x40dab0
  40db5c:	add    rsp,0x38
  40db60:	ret    
  40db61:	nop    DWORD PTR [rax+rax*1+0x0]
  40db66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db70:	push   rbp
  40db71:	push   rdi
  40db72:	push   rsi
  40db73:	push   rbx
  40db74:	sub    rsp,0x28
  40db78:	test   r8,r8
  40db7b:	mov    edi,ecx
  40db7d:	mov    rbx,r8
  40db80:	mov    rbp,r9
  40db83:	je     0x40dbd1
  40db85:	mov    ecx,edx
  40db87:	call   0x40da50
  40db8c:	test   edi,edi
  40db8e:	mov    rsi,rax
  40db91:	jne    0x40dbc5
  40db93:	mov    r9,QWORD PTR [rsp+0x70]
  40db98:	mov    r8,rbp
  40db9b:	mov    rdx,rbx
  40db9e:	mov    rcx,rsi
  40dba1:	call   0x40b6b0
  40dba6:	xor    edx,edx
  40dba8:	mov    rcx,rsi
  40dbab:	call   0x40b190
  40dbb0:	mov    rcx,rsi
  40dbb3:	mov    ebx,eax
  40dbb5:	call   0x40bbb0
  40dbba:	mov    eax,ebx
  40dbbc:	add    rsp,0x28
  40dbc0:	pop    rbx
  40dbc1:	pop    rsi
  40dbc2:	pop    rdi
  40dbc3:	pop    rbp
  40dbc4:	ret    
  40dbc5:	mov    edx,edi
  40dbc7:	mov    rcx,rsi
  40dbca:	call   0x40b7d0
  40dbcf:	jmp    0x40db93
  40dbd1:	lea    r8,[rip+0x30d1a]        # 0x43e8f2
  40dbd8:	lea    rdx,[rip+0x30da1]        # 0x43e980
  40dbdf:	lea    rcx,[rip+0x30592]        # 0x43e178
  40dbe6:	call   0x40fd20
  40dbeb:	xor    eax,eax
  40dbed:	add    rsp,0x28
  40dbf1:	pop    rbx
  40dbf2:	pop    rsi
  40dbf3:	pop    rdi
  40dbf4:	pop    rbp
  40dbf5:	ret    
  40dbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc00:	sub    rsp,0x38
  40dc04:	test   rdx,rdx
  40dc07:	je     0x40dc30
  40dc09:	mov    r9,r8
  40dc0c:	mov    QWORD PTR [rsp+0x20],0x0
  40dc15:	mov    r8,rdx
  40dc18:	mov    edx,ecx
  40dc1a:	xor    ecx,ecx
  40dc1c:	call   0x40db70
  40dc21:	add    rsp,0x38
  40dc25:	ret    
  40dc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc30:	lea    r8,[rip+0x30cbb]        # 0x43e8f2
  40dc37:	lea    rdx,[rip+0x30d22]        # 0x43e960
  40dc3e:	lea    rcx,[rip+0x30533]        # 0x43e178
  40dc45:	call   0x40fd20
  40dc4a:	xor    eax,eax
  40dc4c:	add    rsp,0x38
  40dc50:	ret    
  40dc51:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc60:	push   rsi
  40dc61:	push   rbx
  40dc62:	sub    rsp,0x28
  40dc66:	mov    edx,0x80
  40dc6b:	mov    rsi,rcx
  40dc6e:	lea    rcx,[rip+0x2c48b]        # 0x43a100
  40dc75:	call   0x40b100
  40dc7a:	mov    rbx,rax
  40dc7d:	mov    QWORD PTR [rax+0x60],rsi
  40dc81:	mov    QWORD PTR [rax+0x70],rsi
  40dc85:	lea    rdx,[rbx+0x70]
  40dc89:	mov    eax,0x1
  40dc8e:	mov    rcx,rbx
  40dc91:	mov    WORD PTR [rbx+0x78],ax
  40dc95:	call   0x40b360
  40dc9a:	mov    rax,rbx
  40dc9d:	add    rsp,0x28
  40dca1:	pop    rbx
  40dca2:	pop    rsi
  40dca3:	ret    
  40dca4:	xchg   ax,ax
  40dca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dcb0:	push   rbp
  40dcb1:	push   rdi
  40dcb2:	push   rsi
  40dcb3:	push   rbx
  40dcb4:	sub    rsp,0x28
  40dcb8:	test   r8,r8
  40dcbb:	mov    edi,ecx
  40dcbd:	mov    rbx,r8
  40dcc0:	mov    rbp,r9
  40dcc3:	je     0x40dd20
  40dcc5:	mov    rcx,rdx
  40dcc8:	call   0x40dc60
  40dccd:	test   edi,edi
  40dccf:	mov    rsi,rax
  40dcd2:	jne    0x40dd10
  40dcd4:	mov    r9,QWORD PTR [rsp+0x70]
  40dcd9:	mov    r8,rbp
  40dcdc:	mov    rdx,rbx
  40dcdf:	mov    rcx,rsi
  40dce2:	call   0x40b6b0
  40dce7:	xor    edx,edx
  40dce9:	mov    rcx,rsi
  40dcec:	call   0x40b190
  40dcf1:	mov    rcx,rsi
  40dcf4:	mov    ebx,eax
  40dcf6:	call   0x40bbb0
  40dcfb:	mov    eax,ebx
  40dcfd:	add    rsp,0x28
  40dd01:	pop    rbx
  40dd02:	pop    rsi
  40dd03:	pop    rdi
  40dd04:	pop    rbp
  40dd05:	ret    
  40dd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd10:	mov    edx,edi
  40dd12:	mov    rcx,rsi
  40dd15:	call   0x40b7d0
  40dd1a:	jmp    0x40dcd4
  40dd1c:	nop    DWORD PTR [rax+0x0]
  40dd20:	lea    r8,[rip+0x30bcb]        # 0x43e8f2
  40dd27:	lea    rdx,[rip+0x30c12]        # 0x43e940
  40dd2e:	lea    rcx,[rip+0x30443]        # 0x43e178
  40dd35:	call   0x40fd20
  40dd3a:	xor    eax,eax
  40dd3c:	add    rsp,0x28
  40dd40:	pop    rbx
  40dd41:	pop    rsi
  40dd42:	pop    rdi
  40dd43:	pop    rbp
  40dd44:	ret    
  40dd45:	nop
  40dd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd50:	sub    rsp,0x38
  40dd54:	mov    r9,r8
  40dd57:	mov    QWORD PTR [rsp+0x20],0x0
  40dd60:	mov    r8,rdx
  40dd63:	mov    rdx,rcx
  40dd66:	xor    ecx,ecx
  40dd68:	call   0x40dcb0
  40dd6d:	add    rsp,0x38
  40dd71:	ret    
  40dd72:	nop    DWORD PTR [rax+0x0]
  40dd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd80:	push   rbx
  40dd81:	sub    rsp,0x20
  40dd85:	lea    rcx,[rip+0x2c334]        # 0x43a0c0
  40dd8c:	mov    edx,0x60
  40dd91:	call   0x40b100
  40dd96:	mov    edx,0xc8
  40dd9b:	mov    rbx,rax
  40dd9e:	mov    rcx,rax
  40dda1:	call   0x40b7d0
  40dda6:	mov    rax,rbx
  40dda9:	add    rsp,0x20
  40ddad:	pop    rbx
  40ddae:	ret    
  40ddaf:	nop
  40ddb0:	push   r12
  40ddb2:	push   rbp
  40ddb3:	push   rdi
  40ddb4:	push   rsi
  40ddb5:	push   rbx
  40ddb6:	sub    rsp,0x20
  40ddba:	test   rdx,rdx
  40ddbd:	mov    edi,ecx
  40ddbf:	mov    rsi,rdx
  40ddc2:	mov    rbp,r8
  40ddc5:	mov    r12,r9
  40ddc8:	je     0x40de20
  40ddca:	call   0x40dd80
  40ddcf:	cmp    edi,0xc8
  40ddd5:	mov    rbx,rax
  40ddd8:	je     0x40dde4
  40ddda:	mov    edx,edi
  40dddc:	mov    rcx,rbx
  40dddf:	call   0x40b7d0
  40dde4:	mov    r9,r12
  40dde7:	mov    r8,rbp
  40ddea:	mov    rdx,rsi
  40dded:	mov    rcx,rbx
  40ddf0:	call   0x40b6b0
  40ddf5:	xor    edx,edx
  40ddf7:	mov    rcx,rbx
  40ddfa:	call   0x40b190
  40ddff:	mov    rcx,rbx
  40de02:	mov    esi,eax
  40de04:	call   0x40bbb0
  40de09:	mov    eax,esi
  40de0b:	add    rsp,0x20
  40de0f:	pop    rbx
  40de10:	pop    rsi
  40de11:	pop    rdi
  40de12:	pop    rbp
  40de13:	pop    r12
  40de15:	ret    
  40de16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de20:	lea    r8,[rip+0x30acb]        # 0x43e8f2
  40de27:	lea    rdx,[rip+0x30b02]        # 0x43e930
  40de2e:	lea    rcx,[rip+0x30343]        # 0x43e178
  40de35:	call   0x40fd20
  40de3a:	xor    eax,eax
  40de3c:	add    rsp,0x20
  40de40:	pop    rbx
  40de41:	pop    rsi
  40de42:	pop    rdi
  40de43:	pop    rbp
  40de44:	pop    r12
  40de46:	ret    
  40de47:	nop    WORD PTR [rax+rax*1+0x0]
  40de50:	xor    r9d,r9d
  40de53:	mov    r8,rdx
  40de56:	mov    rdx,rcx
  40de59:	mov    ecx,0xc8
  40de5e:	jmp    0x40ddb0
  40de63:	nop    DWORD PTR [rax]
  40de66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de70:	mov    rdx,rcx
  40de73:	lea    rcx,[rip+0x2c246]        # 0x43a0c0
  40de7a:	jmp    0x40bec0
  40de7f:	nop
  40de80:	push   r13
  40de82:	push   r12
  40de84:	push   rbp
  40de85:	push   rdi
  40de86:	push   rsi
  40de87:	push   rbx
  40de88:	sub    rsp,0x28
  40de8c:	mov    rbp,QWORD PTR [rsp+0x80]
  40de94:	test   r8,r8
  40de97:	mov    rdi,rcx
  40de9a:	mov    r12d,edx
  40de9d:	mov    rbx,r8
  40dea0:	mov    rsi,r9
  40dea3:	je     0x40df80
  40dea9:	test   rcx,rcx
  40deac:	je     0x40dfa6
  40deb2:	mov    rcx,rdi
  40deb5:	call   0x40d9b0
  40deba:	test   eax,eax
  40debc:	je     0x40def0
  40debe:	xchg   ax,ax
  40dec0:	mov    rcx,rsi
  40dec3:	call   rbx
  40dec5:	test   eax,eax
  40dec7:	jne    0x40dec0
  40dec9:	test   rbp,rbp
  40decc:	je     0x40df70
  40ded2:	mov    rcx,rsi
  40ded5:	mov    rax,rbp
  40ded8:	add    rsp,0x28
  40dedc:	pop    rbx
  40dedd:	pop    rsi
  40dede:	pop    rdi
  40dedf:	pop    rbp
  40dee0:	pop    r12
  40dee2:	pop    r13
  40dee4:	rex.W jmp rax
  40dee7:	nop    WORD PTR [rax+rax*1+0x0]
  40def0:	call   0x40b090
  40def5:	test   rax,rax
  40def8:	mov    r13,rax
  40defb:	je     0x40dfb3
  40df01:	cmp    r13,rdi
  40df04:	je     0x40df49
  40df06:	call   0x40dd80
  40df0b:	mov    edx,r12d
  40df0e:	mov    r13,rax
  40df11:	mov    rcx,rax
  40df14:	call   0x40b7d0
  40df19:	mov    r9,rbp
  40df1c:	mov    r8,rsi
  40df1f:	mov    rdx,rbx
  40df22:	mov    rcx,r13
  40df25:	call   0x40b6b0
  40df2a:	mov    rcx,r13
  40df2d:	mov    rdx,rdi
  40df30:	call   0x40b190
  40df35:	mov    rcx,r13
  40df38:	add    rsp,0x28
  40df3c:	pop    rbx
  40df3d:	pop    rsi
  40df3e:	pop    rdi
  40df3f:	pop    rbp
  40df40:	pop    r12
  40df42:	pop    r13
  40df44:	jmp    0x40bbb0
  40df49:	mov    rcx,r13
  40df4c:	call   0x40c120
  40df51:	test   eax,eax
  40df53:	je     0x40df06
  40df55:	mov    rcx,rsi
  40df58:	call   rbx
  40df5a:	test   eax,eax
  40df5c:	jne    0x40df55
  40df5e:	mov    rcx,r13
  40df61:	call   0x40c260
  40df66:	test   rbp,rbp
  40df69:	jne    0x40ded2
  40df6f:	nop
  40df70:	add    rsp,0x28
  40df74:	pop    rbx
  40df75:	pop    rsi
  40df76:	pop    rdi
  40df77:	pop    rbp
  40df78:	pop    r12
  40df7a:	pop    r13
  40df7c:	ret    
  40df7d:	nop    DWORD PTR [rax]
  40df80:	lea    r8,[rip+0x3096b]        # 0x43e8f2
  40df87:	lea    rdx,[rip+0x30982]        # 0x43e910
  40df8e:	lea    rcx,[rip+0x301e3]        # 0x43e178
  40df95:	add    rsp,0x28
  40df99:	pop    rbx
  40df9a:	pop    rsi
  40df9b:	pop    rdi
  40df9c:	pop    rbp
  40df9d:	pop    r12
  40df9f:	pop    r13
  40dfa1:	jmp    0x40fd20
  40dfa6:	call   0x40b030
  40dfab:	mov    rdi,rax
  40dfae:	jmp    0x40deb2
  40dfb3:	call   0x40b030
  40dfb8:	mov    r13,rax
  40dfbb:	jmp    0x40df01
  40dfc0:	sub    rsp,0x38
  40dfc4:	mov    r9,r8
  40dfc7:	mov    QWORD PTR [rsp+0x20],0x0
  40dfd0:	mov    r8,rdx
  40dfd3:	xor    edx,edx
  40dfd5:	call   0x40de80
  40dfda:	nop
  40dfdb:	add    rsp,0x38
  40dfdf:	ret    
  40dfe0:	sub    rsp,0x28
  40dfe4:	mfence 
  40dfe7:	cmp    QWORD PTR [rip+0x76139],0x0        # 0x484128
  40dfef:	je     0x40e000
  40dff1:	mov    rax,QWORD PTR [rip+0x76170]        # 0x484168
  40dff8:	add    rsp,0x28
  40dffc:	ret    
  40dffd:	nop    DWORD PTR [rax]
  40e000:	lea    rcx,[rip+0x76121]        # 0x484128
  40e007:	call   0x41ebc0
  40e00c:	test   eax,eax
  40e00e:	je     0x40dff1
  40e010:	call   0x40aed0
  40e015:	lea    rdx,[rip+0xfffffffffffff1a4]        # 0x40d1c0
  40e01c:	lea    rcx,[rip+0x308e0]        # 0x43e903
  40e023:	xor    r8d,r8d
  40e026:	mov    QWORD PTR [rip+0x7613b],rax        # 0x484168
  40e02d:	call   0x41ee00
  40e032:	lea    rcx,[rip+0x760ef]        # 0x484128
  40e039:	mov    edx,0x1
  40e03e:	call   0x41ec60
  40e043:	jmp    0x40dff1
  40e045:	nop
  40e046:	nop
  40e047:	nop
  40e048:	nop
  40e049:	nop
  40e04a:	nop
  40e04b:	nop
  40e04c:	nop
  40e04d:	nop
  40e04e:	nop
  40e04f:	nop
  40e050:	jmp    0x4388a8
  40e055:	nop
  40e056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e060:	jmp    0x438850
  40e065:	nop
  40e066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e070:	jmp    0x4387c0
  40e075:	nop
  40e076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e080:	jmp    0x438800
  40e085:	nop
  40e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e090:	push   rsi
  40e091:	push   rbx
  40e092:	sub    rsp,0x28
  40e096:	mov    rbx,rcx
  40e099:	imul   rbx,rdx
  40e09d:	mov    rcx,rbx
  40e0a0:	call   QWORD PTR [rip+0x2c13a]        # 0x43a1e0
  40e0a6:	test   rax,rax
  40e0a9:	mov    rsi,rax
  40e0ac:	je     0x40e0bb
  40e0ae:	mov    r8,rbx
  40e0b1:	xor    edx,edx
  40e0b3:	mov    rcx,rax
  40e0b6:	call   0x4387e0
  40e0bb:	mov    rax,rsi
  40e0be:	add    rsp,0x28
  40e0c2:	pop    rbx
  40e0c3:	pop    rsi
  40e0c4:	ret    
  40e0c5:	nop
  40e0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0d0:	push   rdi
  40e0d1:	push   rsi
  40e0d2:	push   rbx
  40e0d3:	sub    rsp,0x20
  40e0d7:	mov    ebx,ecx
  40e0d9:	lea    rcx,[rip+0x76090]        # 0x484170
  40e0e0:	mov    rsi,rdx
  40e0e3:	mov    edi,r8d
  40e0e6:	call   0x426d40
  40e0eb:	mov    rax,QWORD PTR [rip+0x7609e]        # 0x484190
  40e0f2:	test   rax,rax
  40e0f5:	je     0x40e260
  40e0fb:	cmp    rsi,0xfff
  40e102:	jbe    0x40e193
  40e108:	test   edi,edi
  40e10a:	je     0x40e200
  40e110:	mov    edx,ebx
  40e112:	mov    r8d,ebx
  40e115:	and    edx,0x2
  40e118:	and    r8d,0x1
  40e11c:	mov    ecx,edx
  40e11e:	or     ecx,r8d
  40e121:	or     ecx,0x4
  40e124:	mov    r9d,ecx
  40e127:	shl    r9d,0xc
  40e12b:	lea    ecx,[rcx+r9*1+0x1000]
  40e133:	movsxd rcx,ecx
  40e136:	lea    r9,[rax+rcx*4]
  40e13a:	mov    ecx,0x4
  40e13f:	or     ecx,edx
  40e141:	mov    edx,ecx
  40e143:	or     edx,r8d
  40e146:	mov    ecx,edx
  40e148:	shl    ecx,0xc
  40e14b:	lea    edx,[rdx+rcx*1+0x1000]
  40e152:	movsxd rdx,edx
  40e155:	mov    eax,DWORD PTR [rax+rdx*4]
  40e158:	add    eax,0x1
  40e15b:	mov    DWORD PTR [r9],eax
  40e15e:	test   edi,edi
  40e160:	je     0x40e180
  40e162:	test   bl,0x1
  40e165:	je     0x40e1f0
  40e16b:	add    QWORD PTR [rip+0x76016],rsi        # 0x484188
  40e172:	and    ebx,0x4
  40e175:	je     0x40e180
  40e177:	add    QWORD PTR [rip+0x76002],rsi        # 0x484180
  40e17e:	xchg   ax,ax
  40e180:	lea    rcx,[rip+0x75fe9]        # 0x484170
  40e187:	add    rsp,0x20
  40e18b:	pop    rbx
  40e18c:	pop    rsi
  40e18d:	pop    rdi
  40e18e:	jmp    0x426d70
  40e193:	test   edi,edi
  40e195:	je     0x40e230
  40e19b:	mov    r9d,ebx
  40e19e:	mov    ecx,ebx
  40e1a0:	mov    r10d,0x4
  40e1a6:	and    r9d,0x2
  40e1aa:	and    ecx,0x1
  40e1ad:	mov    edx,r9d
  40e1b0:	or     edx,ecx
  40e1b2:	or     edx,0x4
  40e1b5:	mov    r8d,edx
  40e1b8:	shl    r8d,0xc
  40e1bc:	add    edx,r8d
  40e1bf:	movsxd rdx,edx
  40e1c2:	add    rdx,rsi
  40e1c5:	lea    rdx,[rax+rdx*4]
  40e1c9:	or     r10d,r9d
  40e1cc:	or     r10d,ecx
  40e1cf:	mov    ecx,r10d
  40e1d2:	mov    r9d,r10d
  40e1d5:	shl    ecx,0xc
  40e1d8:	add    r9d,ecx
  40e1db:	movsxd r9,r9d
  40e1de:	add    r9,rsi
  40e1e1:	mov    eax,DWORD PTR [rax+r9*4]
  40e1e5:	add    eax,0x1
  40e1e8:	mov    DWORD PTR [rdx],eax
  40e1ea:	jmp    0x40e15e
  40e1ef:	nop
  40e1f0:	add    QWORD PTR [rip+0x75f81],rsi        # 0x484178
  40e1f7:	jmp    0x40e180
  40e1f9:	nop    DWORD PTR [rax+0x0]
  40e200:	mov    r8d,ebx
  40e203:	mov    edx,ebx
  40e205:	and    r8d,0x1
  40e209:	and    edx,0x2
  40e20c:	mov    ecx,r8d
  40e20f:	or     ecx,edx
  40e211:	mov    r9d,ecx
  40e214:	shl    r9d,0xc
  40e218:	lea    ecx,[rcx+r9*1+0x1000]
  40e220:	movsxd rcx,ecx
  40e223:	lea    r9,[rax+rcx*4]
  40e227:	xor    ecx,ecx
  40e229:	jmp    0x40e13f
  40e22e:	xchg   ax,ax
  40e230:	mov    ecx,ebx
  40e232:	mov    r9d,ebx
  40e235:	xor    r10d,r10d
  40e238:	and    ecx,0x1
  40e23b:	and    r9d,0x2
  40e23f:	mov    edx,ecx
  40e241:	or     edx,r9d
  40e244:	mov    r8d,edx
  40e247:	shl    r8d,0xc
  40e24b:	add    edx,r8d
  40e24e:	movsxd rdx,edx
  40e251:	add    rdx,rsi
  40e254:	lea    rdx,[rax+rdx*4]
  40e258:	jmp    0x40e1c9
  40e25d:	nop    DWORD PTR [rax]
  40e260:	mov    edx,0x4
  40e265:	mov    ecx,0x8008
  40e26a:	call   0x4388a8
  40e26f:	test   rax,rax
  40e272:	mov    QWORD PTR [rip+0x75f17],rax        # 0x484190
  40e279:	jne    0x40e0fb
  40e27f:	jmp    0x40e180
  40e284:	xchg   ax,ax
  40e286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e290:	push   rsi
  40e291:	push   rbx
  40e292:	sub    rsp,0x38
  40e296:	mov    r9,rcx
  40e299:	mov    rsi,rdx
  40e29c:	lea    rcx,[rcx-0x10]
  40e2a0:	test   r9,r9
  40e2a3:	je     0x40e300
  40e2a5:	mov    rax,QWORD PTR [r9-0x10]
  40e2a9:	test   rax,rax
  40e2ac:	jne    0x40e330
  40e2b2:	lea    rdx,[rdx+0x10]
  40e2b6:	call   0x4387c0
  40e2bb:	test   rax,rax
  40e2be:	mov    rbx,rax
  40e2c1:	je     0x40e313
  40e2c3:	mov    rdx,QWORD PTR [rbx+0x8]
  40e2c7:	mov    r8d,0x1
  40e2cd:	mov    ecx,0x2
  40e2d2:	call   0x40e0d0
  40e2d7:	mov    QWORD PTR [rbx],0x0
  40e2de:	mov    QWORD PTR [rbx+0x8],rsi
  40e2e2:	mov    r8d,0x1
  40e2e8:	mov    rdx,rsi
  40e2eb:	mov    ecx,0x3
  40e2f0:	call   0x40e0d0
  40e2f5:	lea    rax,[rbx+0x10]
  40e2f9:	add    rsp,0x38
  40e2fd:	pop    rbx
  40e2fe:	pop    rsi
  40e2ff:	ret    
  40e300:	lea    rdx,[rdx+0x10]
  40e304:	xor    ecx,ecx
  40e306:	call   0x4387c0
  40e30b:	test   rax,rax
  40e30e:	mov    rbx,rax
  40e311:	jne    0x40e2d7
  40e313:	xor    r8d,r8d
  40e316:	mov    rdx,rsi
  40e319:	mov    ecx,0x3
  40e31e:	call   0x40e0d0
  40e323:	xor    eax,eax
  40e325:	add    rsp,0x38
  40e329:	pop    rbx
  40e32a:	pop    rsi
  40e32b:	ret    
  40e32c:	nop    DWORD PTR [rax+0x0]
  40e330:	lea    r8,[rip+0x30c69]        # 0x43efa0
  40e337:	lea    rcx,[rip+0x30ca0]        # 0x43efde
  40e33e:	mov    QWORD PTR [rsp+0x20],rdx
  40e343:	mov    QWORD PTR [rsp+0x28],rax
  40e348:	mov    edx,0x10
  40e34d:	call   0x40fae0
  40e352:	jmp    0x40e313
  40e354:	xchg   ax,ax
  40e356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e360:	push   rsi
  40e361:	push   rbx
  40e362:	sub    rsp,0x28
  40e366:	mov    rsi,rcx
  40e369:	lea    rcx,[rcx+0x10]
  40e36d:	call   0x438800
  40e372:	test   rax,rax
  40e375:	mov    rbx,rax
  40e378:	je     0x40e3b0
  40e37a:	mov    QWORD PTR [rax+0x8],rsi
  40e37e:	mov    QWORD PTR [rax],0x0
  40e385:	mov    r8d,0x1
  40e38b:	mov    rdx,rsi
  40e38e:	mov    ecx,0x1
  40e393:	add    rbx,0x10
  40e397:	call   0x40e0d0
  40e39c:	mov    rax,rbx
  40e39f:	add    rsp,0x28
  40e3a3:	pop    rbx
  40e3a4:	pop    rsi
  40e3a5:	ret    
  40e3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3b0:	xor    r8d,r8d
  40e3b3:	mov    rdx,rsi
  40e3b6:	mov    ecx,0x1
  40e3bb:	call   0x40e0d0
  40e3c0:	mov    rax,rbx
  40e3c3:	add    rsp,0x28
  40e3c7:	pop    rbx
  40e3c8:	pop    rsi
  40e3c9:	ret    
  40e3ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e3d0:	push   rbx
  40e3d1:	sub    rsp,0x30
  40e3d5:	mov    rax,QWORD PTR [rcx-0x10]
  40e3d9:	mov    rbx,rcx
  40e3dc:	test   rax,rax
  40e3df:	jne    0x40e410
  40e3e1:	mov    rdx,QWORD PTR [rcx-0x8]
  40e3e5:	mov    r8d,0x1
  40e3eb:	xor    ecx,ecx
  40e3ed:	call   0x40e0d0
  40e3f2:	mov    r8,QWORD PTR [rbx-0x8]
  40e3f6:	mov    edx,0xaa
  40e3fb:	mov    rcx,rbx
  40e3fe:	call   0x4387e0
  40e403:	add    QWORD PTR [rbx-0x10],0x1
  40e408:	add    rsp,0x30
  40e40c:	pop    rbx
  40e40d:	ret    
  40e40e:	xchg   ax,ax
  40e410:	mov    r9,rcx
  40e413:	lea    r8,[rip+0x30bce]        # 0x43efe8
  40e41a:	lea    rcx,[rip+0x30bbd]        # 0x43efde
  40e421:	mov    QWORD PTR [rsp+0x20],rax
  40e426:	mov    edx,0x10
  40e42b:	call   0x40fae0
  40e430:	mov    rdx,QWORD PTR [rbx-0x8]
  40e434:	xor    r8d,r8d
  40e437:	xor    ecx,ecx
  40e439:	call   0x40e0d0
  40e43e:	add    QWORD PTR [rbx-0x10],0x1
  40e443:	add    rsp,0x30
  40e447:	pop    rbx
  40e448:	ret    
  40e449:	nop    DWORD PTR [rax+0x0]
  40e450:	push   r15
  40e452:	push   r14
  40e454:	push   r13
  40e456:	push   r12
  40e458:	push   rbp
  40e459:	push   rdi
  40e45a:	push   rsi
  40e45b:	push   rbx
  40e45c:	sub    rsp,0x58
  40e460:	xor    ebx,ebx
  40e462:	lea    edi,[rdx*4+0x0]
  40e469:	shl    edx,0xe
  40e46c:	mov    rsi,rcx
  40e46f:	mov    ecx,0x1
  40e474:	mov    eax,edi
  40e476:	lea    ebp,[rdx+rdi*1]
  40e479:	or     eax,0x1
  40e47c:	mov    r13d,eax
  40e47f:	shl    r13d,0xc
  40e483:	add    r13d,eax
  40e486:	mov    eax,edi
  40e488:	or     edi,0x2
  40e48b:	or     eax,0x3
  40e48e:	mov    r12d,eax
  40e491:	shl    r12d,0xc
  40e495:	add    r12d,eax
  40e498:	mov    eax,edi
  40e49a:	shl    eax,0xc
  40e49d:	add    edi,eax
  40e49f:	jmp    0x40e4ea
  40e4a1:	cmp    rbx,0x1000
  40e4a8:	je     0x40e5a1
  40e4ae:	mov    eax,r8d
  40e4b1:	lea    rcx,[rip+0x30ca8]        # 0x43f160
  40e4b8:	mov    DWORD PTR [rsp+0x28],r15d
  40e4bd:	sub    eax,r9d
  40e4c0:	mov    DWORD PTR [rsp+0x20],r14d
  40e4c5:	add    eax,r14d
  40e4c8:	sub    eax,r15d
  40e4cb:	imul   eax,edx
  40e4ce:	mov    DWORD PTR [rsp+0x30],eax
  40e4d2:	call   0x40fef0
  40e4d7:	xor    ecx,ecx
  40e4d9:	add    rbx,0x1
  40e4dd:	cmp    rbx,0x1001
  40e4e4:	je     0x40e570
  40e4ea:	lea    eax,[r13+rbx*1+0x0]
  40e4ef:	mov    edx,ebx
  40e4f1:	mov    r8d,DWORD PTR [rsi+rax*4]
  40e4f5:	lea    eax,[r12+rbx*1]
  40e4f9:	mov    r14d,DWORD PTR [rsi+rax*4]
  40e4fd:	lea    eax,[rbp+rbx*1+0x0]
  40e501:	mov    r9d,DWORD PTR [rsi+rax*4]
  40e505:	lea    eax,[rdi+rbx*1]
  40e508:	mov    r15d,DWORD PTR [rsi+rax*4]
  40e50c:	mov    eax,r14d
  40e50f:	or     eax,r8d
  40e512:	or     eax,r9d
  40e515:	or     eax,r15d
  40e518:	je     0x40e4d9
  40e51a:	test   ecx,ecx
  40e51c:	je     0x40e4a1
  40e51e:	lea    rcx,[rip+0x30afb]        # 0x43f020
  40e525:	mov    DWORD PTR [rsp+0x48],r9d
  40e52a:	mov    DWORD PTR [rsp+0x44],r8d
  40e52f:	mov    DWORD PTR [rsp+0x4c],ebx
  40e533:	call   0x40fef0
  40e538:	lea    rcx,[rip+0x30b31]        # 0x43f070
  40e53f:	call   0x40fef0
  40e544:	lea    rcx,[rip+0x30b75]        # 0x43f0c0
  40e54b:	call   0x40fef0
  40e550:	lea    rcx,[rip+0x30bb9]        # 0x43f110
  40e557:	call   0x40fef0
  40e55c:	mov    r8d,DWORD PTR [rsp+0x44]
  40e561:	mov    r9d,DWORD PTR [rsp+0x48]
  40e566:	mov    edx,DWORD PTR [rsp+0x4c]
  40e56a:	jmp    0x40e4a1
  40e56f:	nop
  40e570:	test   ecx,ecx
  40e572:	jne    0x40e585
  40e574:	add    rsp,0x58
  40e578:	pop    rbx
  40e579:	pop    rsi
  40e57a:	pop    rdi
  40e57b:	pop    rbp
  40e57c:	pop    r12
  40e57e:	pop    r13
  40e580:	pop    r14
  40e582:	pop    r15
  40e584:	ret    
  40e585:	lea    rcx,[rip+0x30c3a]        # 0x43f1c6
  40e58c:	add    rsp,0x58
  40e590:	pop    rbx
  40e591:	pop    rsi
  40e592:	pop    rdi
  40e593:	pop    rbp
  40e594:	pop    r12
  40e596:	pop    r13
  40e598:	pop    r14
  40e59a:	pop    r15
  40e59c:	jmp    0x40fef0
  40e5a1:	lea    rcx,[rip+0x30be8]        # 0x43f190
  40e5a8:	mov    DWORD PTR [rsp+0x28],r15d
  40e5ad:	mov    DWORD PTR [rsp+0x20],r14d
  40e5b2:	mov    edx,0x1000
  40e5b7:	call   0x40fef0
  40e5bc:	jmp    0x40e574
  40e5be:	xchg   ax,ax
  40e5c0:	push   rbx
  40e5c1:	sub    rsp,0x30
  40e5c5:	xor    eax,eax
  40e5c7:	test   rcx,rcx
  40e5ca:	je     0x40e5da
  40e5cc:	mov    rbx,rcx
  40e5cf:	call   QWORD PTR [rip+0x2bc0b]        # 0x43a1e0
  40e5d5:	test   rax,rax
  40e5d8:	je     0x40e5e0
  40e5da:	add    rsp,0x30
  40e5de:	pop    rbx
  40e5df:	ret    
  40e5e0:	lea    r9,[rip+0x30bf1]        # 0x43f1d8
  40e5e7:	lea    r8,[rip+0x30c4a]        # 0x43f238
  40e5ee:	lea    rcx,[rip+0x309e9]        # 0x43efde
  40e5f5:	mov    QWORD PTR [rsp+0x20],rbx
  40e5fa:	mov    edx,0x4
  40e5ff:	call   0x40fae0
  40e604:	jmp    0x40e604
  40e606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e610:	push   rbx
  40e611:	sub    rsp,0x30
  40e615:	xor    eax,eax
  40e617:	test   rcx,rcx
  40e61a:	je     0x40e632
  40e61c:	mov    rdx,rcx
  40e61f:	mov    rbx,rcx
  40e622:	mov    ecx,0x1
  40e627:	call   QWORD PTR [rip+0x2bbcb]        # 0x43a1f8
  40e62d:	test   rax,rax
  40e630:	je     0x40e640
  40e632:	add    rsp,0x30
  40e636:	pop    rbx
  40e637:	ret    
  40e638:	nop    DWORD PTR [rax+rax*1+0x0]
  40e640:	lea    r9,[rip+0x30c19]        # 0x43f260
  40e647:	lea    r8,[rip+0x30bea]        # 0x43f238
  40e64e:	lea    rcx,[rip+0x30989]        # 0x43efde
  40e655:	mov    QWORD PTR [rsp+0x20],rbx
  40e65a:	mov    edx,0x4
  40e65f:	call   0x40fae0
  40e664:	jmp    0x40e664
  40e666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e670:	push   rbx
  40e671:	sub    rsp,0x30
  40e675:	test   rdx,rdx
  40e678:	mov    rbx,rdx
  40e67b:	jne    0x40e6a0
  40e67d:	xor    eax,eax
  40e67f:	test   rcx,rcx
  40e682:	je     0x40e690
  40e684:	call   QWORD PTR [rip+0x2bb66]        # 0x43a1f0
  40e68a:	xor    eax,eax
  40e68c:	nop    DWORD PTR [rax+0x0]
  40e690:	add    rsp,0x30
  40e694:	pop    rbx
  40e695:	ret    
  40e696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6a0:	call   QWORD PTR [rip+0x2bb42]        # 0x43a1e8
  40e6a6:	test   rax,rax
  40e6a9:	jne    0x40e690
  40e6ab:	lea    r9,[rip+0x30c0e]        # 0x43f2c0
  40e6b2:	lea    r8,[rip+0x30b7f]        # 0x43f238
  40e6b9:	lea    rcx,[rip+0x3091e]        # 0x43efde
  40e6c0:	mov    QWORD PTR [rsp+0x20],rbx
  40e6c5:	mov    edx,0x4
  40e6ca:	call   0x40fae0
  40e6cf:	jmp    0x40e6cf
  40e6d1:	nop    DWORD PTR [rax+rax*1+0x0]
  40e6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6e0:	test   rcx,rcx
  40e6e3:	je     0x40e6f0
  40e6e5:	mov    rax,QWORD PTR [rip+0x2bb04]        # 0x43a1f0
  40e6ec:	rex.W jmp rax
  40e6ef:	nop
  40e6f0:	repz ret 
  40e6f2:	nop    DWORD PTR [rax+0x0]
  40e6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e700:	test   rcx,rcx
  40e703:	je     0x40e710
  40e705:	mov    rax,QWORD PTR [rip+0x2baf4]        # 0x43a200
  40e70c:	rex.W jmp rax
  40e70f:	nop
  40e710:	xor    eax,eax
  40e712:	ret    
  40e713:	nop    DWORD PTR [rax]
  40e716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e720:	push   rsi
  40e721:	push   rbx
  40e722:	sub    rsp,0x28
  40e726:	xor    esi,esi
  40e728:	test   rcx,rcx
  40e72b:	je     0x40e74b
  40e72d:	mov    rbx,rcx
  40e730:	call   QWORD PTR [rip+0x2baca]        # 0x43a200
  40e736:	test   rax,rax
  40e739:	mov    rsi,rax
  40e73c:	je     0x40e74b
  40e73e:	mov    r8,rbx
  40e741:	xor    edx,edx
  40e743:	mov    rcx,rsi
  40e746:	call   0x4387e0
  40e74b:	mov    rax,rsi
  40e74e:	add    rsp,0x28
  40e752:	pop    rbx
  40e753:	pop    rsi
  40e754:	ret    
  40e755:	nop
  40e756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e760:	sub    rsp,0x28
  40e764:	test   rdx,rdx
  40e767:	je     0x40e780
  40e769:	mov    rax,QWORD PTR [rip+0x2ba98]        # 0x43a208
  40e770:	add    rsp,0x28
  40e774:	rex.W jmp rax
  40e777:	nop    WORD PTR [rax+rax*1+0x0]
  40e780:	test   rcx,rcx
  40e783:	je     0x40e78b
  40e785:	call   QWORD PTR [rip+0x2ba65]        # 0x43a1f0
  40e78b:	xor    eax,eax
  40e78d:	add    rsp,0x28
  40e791:	ret    
  40e792:	nop    DWORD PTR [rax+0x0]
  40e796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e7a0:	sub    rsp,0x38
  40e7a4:	test   rdx,rdx
  40e7a7:	mov    r8,rdx
  40e7aa:	je     0x40e7f0
  40e7ac:	xor    edx,edx
  40e7ae:	mov    rax,0xffffffffffffffff
  40e7b5:	div    r8
  40e7b8:	cmp    rax,rcx
  40e7bb:	jae    0x40e7f0
  40e7bd:	mov    QWORD PTR [rsp+0x28],r8
  40e7c2:	mov    QWORD PTR [rsp+0x20],rcx
  40e7c7:	lea    r9,[rip+0x30b52]        # 0x43f320
  40e7ce:	lea    r8,[rip+0x30bab]        # 0x43f380
  40e7d5:	lea    rcx,[rip+0x30802]        # 0x43efde
  40e7dc:	mov    edx,0x4
  40e7e1:	call   0x40fae0
  40e7e6:	jmp    0x40e7e6
  40e7e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7f0:	imul   rcx,r8
  40e7f4:	add    rsp,0x38
  40e7f8:	jmp    0x40e5c0
  40e7fd:	nop    DWORD PTR [rax]
  40e800:	sub    rsp,0x38
  40e804:	test   rdx,rdx
  40e807:	mov    r8,rdx
  40e80a:	je     0x40e850
  40e80c:	xor    edx,edx
  40e80e:	mov    rax,0xffffffffffffffff
  40e815:	div    r8
  40e818:	cmp    rax,rcx
  40e81b:	jae    0x40e850
  40e81d:	mov    QWORD PTR [rsp+0x28],r8
  40e822:	mov    QWORD PTR [rsp+0x20],rcx
  40e827:	lea    r9,[rip+0x30b82]        # 0x43f3b0
  40e82e:	lea    r8,[rip+0x30b4b]        # 0x43f380
  40e835:	lea    rcx,[rip+0x307a2]        # 0x43efde
  40e83c:	mov    edx,0x4
  40e841:	call   0x40fae0
  40e846:	jmp    0x40e846
  40e848:	nop    DWORD PTR [rax+rax*1+0x0]
  40e850:	imul   rcx,r8
  40e854:	add    rsp,0x38
  40e858:	jmp    0x40e610
  40e85d:	nop    DWORD PTR [rax]
  40e860:	sub    rsp,0x38
  40e864:	test   r8,r8
  40e867:	mov    r9,rdx
  40e86a:	je     0x40e8b0
  40e86c:	xor    edx,edx
  40e86e:	mov    rax,0xffffffffffffffff
  40e875:	div    r8
  40e878:	cmp    rax,r9
  40e87b:	jae    0x40e8b0
  40e87d:	mov    QWORD PTR [rsp+0x28],r8
  40e882:	mov    QWORD PTR [rsp+0x20],r9
  40e887:	lea    r8,[rip+0x30af2]        # 0x43f380
  40e88e:	lea    r9,[rip+0x30b7b]        # 0x43f410
  40e895:	lea    rcx,[rip+0x30742]        # 0x43efde
  40e89c:	mov    edx,0x4
  40e8a1:	call   0x40fae0
  40e8a6:	jmp    0x40e8a6
  40e8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8b0:	mov    rdx,r8
  40e8b3:	imul   rdx,r9
  40e8b7:	add    rsp,0x38
  40e8bb:	jmp    0x40e670
  40e8c0:	test   rdx,rdx
  40e8c3:	mov    r8,rdx
  40e8c6:	je     0x40e8f0
  40e8c8:	xor    edx,edx
  40e8ca:	mov    rax,0xffffffffffffffff
  40e8d1:	div    r8
  40e8d4:	cmp    rax,rcx
  40e8d7:	jb     0x40e8f0
  40e8d9:	imul   rcx,r8
  40e8dd:	test   rcx,rcx
  40e8e0:	je     0x40e8f0
  40e8e2:	mov    rax,QWORD PTR [rip+0x2b917]        # 0x43a200
  40e8e9:	rex.W jmp rax
  40e8ec:	nop    DWORD PTR [rax+0x0]
  40e8f0:	xor    eax,eax
  40e8f2:	ret    
  40e8f3:	nop    DWORD PTR [rax]
  40e8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e900:	test   rdx,rdx
  40e903:	mov    r8,rdx
  40e906:	je     0x40e920
  40e908:	xor    edx,edx
  40e90a:	mov    rax,0xffffffffffffffff
  40e911:	div    r8
  40e914:	cmp    rax,rcx
  40e917:	jae    0x40e920
  40e919:	xor    eax,eax
  40e91b:	ret    
  40e91c:	nop    DWORD PTR [rax+0x0]
  40e920:	imul   rcx,r8
  40e924:	jmp    0x40e720
  40e929:	nop    DWORD PTR [rax+0x0]
  40e930:	test   r8,r8
  40e933:	mov    r9,rdx
  40e936:	je     0x40e950
  40e938:	xor    edx,edx
  40e93a:	mov    rax,0xffffffffffffffff
  40e941:	div    r8
  40e944:	cmp    rax,r9
  40e947:	jae    0x40e950
  40e949:	xor    eax,eax
  40e94b:	ret    
  40e94c:	nop    DWORD PTR [rax+0x0]
  40e950:	mov    rdx,r8
  40e953:	imul   rdx,r9
  40e957:	jmp    0x40e760
  40e95c:	nop    DWORD PTR [rax+0x0]
  40e960:	mov    edx,DWORD PTR [rip+0x75832]        # 0x484198
  40e966:	xor    eax,eax
  40e968:	test   edx,edx
  40e96a:	sete   al
  40e96d:	ret    
  40e96e:	xchg   ax,ax
  40e970:	mov    eax,DWORD PTR [rip+0x75822]        # 0x484198
  40e976:	test   eax,eax
  40e978:	jne    0x40ea01
  40e97e:	mov    rdx,QWORD PTR [rcx]
  40e981:	test   rdx,rdx
  40e984:	je     0x40ea20
  40e98a:	mov    r8,QWORD PTR [rcx+0x8]
  40e98e:	test   r8,r8
  40e991:	je     0x40ea20
  40e997:	mov    rax,QWORD PTR [rcx+0x10]
  40e99b:	test   rax,rax
  40e99e:	je     0x40ea20
  40e9a4:	mov    QWORD PTR [rip+0x2b845],rax        # 0x43a1f0
  40e9ab:	mov    rax,QWORD PTR [rcx+0x18]
  40e9af:	lea    r9,[rip+0xfffffffffffff6da]        # 0x40e090
  40e9b6:	mov    QWORD PTR [rip+0x2b823],rdx        # 0x43a1e0
  40e9bd:	mov    QWORD PTR [rip+0x2b824],r8        # 0x43a1e8
  40e9c4:	mov    DWORD PTR [rip+0x757ca],0x1        # 0x484198
  40e9ce:	test   rax,rax
  40e9d1:	cmove  rax,r9
  40e9d5:	mov    QWORD PTR [rip+0x2b81c],rax        # 0x43a1f8
  40e9dc:	mov    rax,QWORD PTR [rcx+0x20]
  40e9e0:	test   rax,rax
  40e9e3:	cmove  rax,rdx
  40e9e7:	mov    QWORD PTR [rip+0x2b812],rax        # 0x43a200
  40e9ee:	mov    rax,QWORD PTR [rcx+0x28]
  40e9f2:	test   rax,rax
  40e9f5:	cmove  rax,r8
  40e9f9:	mov    QWORD PTR [rip+0x2b808],rax        # 0x43a208
  40ea00:	ret    
  40ea01:	lea    r8,[rip+0x30b08]        # 0x43f510
  40ea08:	lea    rcx,[rip+0x305cf]        # 0x43efde
  40ea0f:	mov    edx,0x10
  40ea14:	jmp    0x40fae0
  40ea19:	nop    DWORD PTR [rax+0x0]
  40ea20:	lea    r8,[rip+0x30a49]        # 0x43f470
  40ea27:	lea    rcx,[rip+0x305b0]        # 0x43efde
  40ea2e:	mov    edx,0x10
  40ea33:	jmp    0x40fae0
  40ea38:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea40:	push   rbp
  40ea41:	push   rdi
  40ea42:	mov    eax,0x800c8
  40ea47:	push   rsi
  40ea48:	push   rbx
  40ea49:	call   0x4340c0
  40ea4e:	sub    rsp,rax
  40ea51:	lea    rcx,[rip+0x75718]        # 0x484170
  40ea58:	call   0x426d40
  40ea5d:	mov    rdx,QWORD PTR [rip+0x7572c]        # 0x484190
  40ea64:	mov    rbx,QWORD PTR [rip+0x7571d]        # 0x484188
  40ea6b:	mov    rdi,QWORD PTR [rip+0x7570e]        # 0x484180
  40ea72:	mov    rsi,QWORD PTR [rip+0x756ff]        # 0x484178
  40ea79:	test   rdx,rdx
  40ea7c:	je     0x40ebd1
  40ea82:	lea    rbp,[rsp+0x40]
  40ea87:	mov    r8d,0x20020
  40ea8d:	mov    rcx,rbp
  40ea90:	call   0x4387f0
  40ea95:	lea    rcx,[rip+0x756d4]        # 0x484170
  40ea9c:	call   0x426d70
  40eaa1:	lea    rcx,[rip+0x30b00]        # 0x43f5a8
  40eaa8:	call   0x40fef0
  40eaad:	mov    edx,0x1
  40eab2:	mov    rcx,rbp
  40eab5:	call   0x40e450
  40eaba:	lea    rcx,[rip+0x30b1f]        # 0x43f5e0
  40eac1:	call   0x40fef0
  40eac6:	xor    edx,edx
  40eac8:	mov    rcx,rbp
  40eacb:	call   0x40e450
  40ead0:	test   rbx,rbx
  40ead3:	js     0x40eb60
  40ead9:	pxor   xmm3,xmm3
  40eadd:	test   rdi,rdi
  40eae0:	cvtsi2sd xmm3,rbx
  40eae5:	js     0x40eb85
  40eaeb:	pxor   xmm0,xmm0
  40eaef:	cvtsi2sd xmm0,rdi
  40eaf4:	divsd  xmm0,xmm3
  40eaf8:	mov    rax,rbx
  40eafb:	sub    rax,rsi
  40eafe:	test   rsi,rsi
  40eb01:	mov    QWORD PTR [rsp+0x30],rax
  40eb06:	movsd  xmm2,QWORD PTR [rip+0x30b6a]        # 0x43f678
  40eb0e:	mulsd  xmm0,xmm2
  40eb12:	js     0x40ebb0
  40eb18:	pxor   xmm1,xmm1
  40eb1c:	cvtsi2sd xmm1,rsi
  40eb21:	divsd  xmm1,xmm3
  40eb25:	movq   r9,xmm0
  40eb2a:	lea    rcx,[rip+0x30adf]        # 0x43f610
  40eb31:	movapd xmm3,xmm0
  40eb35:	mov    QWORD PTR [rsp+0x20],rsi
  40eb3a:	mov    r8,rdi
  40eb3d:	mov    rdx,rbx
  40eb40:	mulsd  xmm1,xmm2
  40eb44:	movsd  QWORD PTR [rsp+0x28],xmm1
  40eb4a:	call   0x40fef0
  40eb4f:	nop
  40eb50:	add    rsp,0x800c8
  40eb57:	pop    rbx
  40eb58:	pop    rsi
  40eb59:	pop    rdi
  40eb5a:	pop    rbp
  40eb5b:	ret    
  40eb5c:	nop    DWORD PTR [rax+0x0]
  40eb60:	mov    rax,rbx
  40eb63:	mov    rdx,rbx
  40eb66:	pxor   xmm3,xmm3
  40eb6a:	shr    rax,1
  40eb6d:	and    edx,0x1
  40eb70:	or     rax,rdx
  40eb73:	test   rdi,rdi
  40eb76:	cvtsi2sd xmm3,rax
  40eb7b:	addsd  xmm3,xmm3
  40eb7f:	jns    0x40eaeb
  40eb85:	mov    rax,rdi
  40eb88:	mov    rdx,rdi
  40eb8b:	pxor   xmm0,xmm0
  40eb8f:	shr    rax,1
  40eb92:	and    edx,0x1
  40eb95:	or     rax,rdx
  40eb98:	cvtsi2sd xmm0,rax
  40eb9d:	addsd  xmm0,xmm0
  40eba1:	jmp    0x40eaf4
  40eba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ebb0:	mov    rax,rsi
  40ebb3:	mov    rdx,rsi
  40ebb6:	pxor   xmm1,xmm1
  40ebba:	shr    rax,1
  40ebbd:	and    edx,0x1
  40ebc0:	or     rax,rdx
  40ebc3:	cvtsi2sd xmm1,rax
  40ebc8:	addsd  xmm1,xmm1
  40ebcc:	jmp    0x40eb21
  40ebd1:	lea    rcx,[rip+0x75598]        # 0x484170
  40ebd8:	call   0x426d70
  40ebdd:	nop
  40ebde:	add    rsp,0x800c8
  40ebe5:	pop    rbx
  40ebe6:	pop    rsi
  40ebe7:	pop    rdi
  40ebe8:	pop    rbp
  40ebe9:	ret    
  40ebea:	nop    WORD PTR [rax+rax*1+0x0]
  40ebf0:	push   rsi
  40ebf1:	push   rbx
  40ebf2:	sub    rsp,0x28
  40ebf6:	mov    rsi,rcx
  40ebf9:	mov    ecx,0x1
  40ebfe:	imul   rsi,rdx
  40ec02:	lea    rdx,[rsi+0x10]
  40ec06:	call   0x4388a8
  40ec0b:	test   rax,rax
  40ec0e:	mov    rbx,rax
  40ec11:	je     0x40ec40
  40ec13:	mov    QWORD PTR [rax+0x8],rsi
  40ec17:	mov    QWORD PTR [rax],0x0
  40ec1e:	mov    r8d,0x1
  40ec24:	mov    rdx,rsi
  40ec27:	mov    ecx,0x5
  40ec2c:	add    rbx,0x10
  40ec30:	call   0x40e0d0
  40ec35:	mov    rax,rbx
  40ec38:	add    rsp,0x28
  40ec3c:	pop    rbx
  40ec3d:	pop    rsi
  40ec3e:	ret    
  40ec3f:	nop
  40ec40:	xor    r8d,r8d
  40ec43:	mov    rdx,rsi
  40ec46:	mov    ecx,0x5
  40ec4b:	call   0x40e0d0
  40ec50:	call   0x40ea40
  40ec55:	mov    rax,rbx
  40ec58:	add    rsp,0x28
  40ec5c:	pop    rbx
  40ec5d:	pop    rsi
  40ec5e:	ret    
  40ec5f:	nop
  40ec60:	sub    rsp,0x38
  40ec64:	call   0x40e290
  40ec69:	test   rax,rax
  40ec6c:	je     0x40ec73
  40ec6e:	add    rsp,0x38
  40ec72:	ret    
  40ec73:	mov    QWORD PTR [rsp+0x28],rax
  40ec78:	call   0x40ea40
  40ec7d:	mov    rax,QWORD PTR [rsp+0x28]
  40ec82:	add    rsp,0x38
  40ec86:	ret    
  40ec87:	nop    WORD PTR [rax+rax*1+0x0]
  40ec90:	sub    rsp,0x38
  40ec94:	call   0x40e360
  40ec99:	test   rax,rax
  40ec9c:	je     0x40eca3
  40ec9e:	add    rsp,0x38
  40eca2:	ret    
  40eca3:	mov    QWORD PTR [rsp+0x28],rax
  40eca8:	call   0x40ea40
  40ecad:	mov    rax,QWORD PTR [rsp+0x28]
  40ecb2:	add    rsp,0x38
  40ecb6:	ret    
  40ecb7:	nop
  40ecb8:	nop
  40ecb9:	nop
  40ecba:	nop
  40ecbb:	nop
  40ecbc:	nop
  40ecbd:	nop
  40ecbe:	nop
  40ecbf:	nop
  40ecc0:	push   rsi
  40ecc1:	push   rbx
  40ecc2:	sub    rsp,0x28
  40ecc6:	mov    rbx,QWORD PTR [rip+0x75543]        # 0x484210
  40eccd:	mov    rsi,rcx
  40ecd0:	test   rbx,rbx
  40ecd3:	jne    0x40ece9
  40ecd5:	jmp    0x40ed02
  40ecd7:	nop    WORD PTR [rax+rax*1+0x0]
  40ece0:	mov    rbx,QWORD PTR [rbx+0x18]
  40ece4:	test   rbx,rbx
  40ece7:	je     0x40ed02
  40ece9:	mov    rcx,QWORD PTR [rbx]
  40ecec:	mov    rdx,rsi
  40ecef:	call   0x4387a0
  40ecf4:	test   eax,eax
  40ecf6:	jne    0x40ece0
  40ecf8:	mov    rax,rbx
  40ecfb:	add    rsp,0x28
  40ecff:	pop    rbx
  40ed00:	pop    rsi
  40ed01:	ret    
  40ed02:	xor    eax,eax
  40ed04:	add    rsp,0x28
  40ed08:	pop    rbx
  40ed09:	pop    rsi
  40ed0a:	ret    
  40ed0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed10:	push   rsi
  40ed11:	push   rbx
  40ed12:	sub    rsp,0x28
  40ed16:	mov    rsi,rcx
  40ed19:	mov    ecx,0x20
  40ed1e:	call   0x40e5c0
  40ed23:	mov    rcx,rsi
  40ed26:	mov    rbx,rax
  40ed29:	call   0x4182b0
  40ed2e:	mov    QWORD PTR [rbx],rax
  40ed31:	mov    rax,QWORD PTR [rip+0x754d8]        # 0x484210
  40ed38:	mov    DWORD PTR [rbx+0x8],0x5
  40ed3f:	mov    QWORD PTR [rbx+0x10],0x0
  40ed47:	mov    QWORD PTR [rip+0x754c2],rbx        # 0x484210
  40ed4e:	mov    QWORD PTR [rbx+0x18],rax
  40ed52:	mov    rax,rbx
  40ed55:	add    rsp,0x28
  40ed59:	pop    rbx
  40ed5a:	pop    rsi
  40ed5b:	ret    
  40ed5c:	nop    DWORD PTR [rax+0x0]
  40ed60:	push   rsi
  40ed61:	push   rbx
  40ed62:	sub    rsp,0x28
  40ed66:	mov    ebx,ecx
  40ed68:	mov    rcx,rdx
  40ed6b:	mov    rsi,rdx
  40ed6e:	call   0x438788
  40ed73:	mov    edx,DWORD PTR [rip+0x7542f]        # 0x4841a8
  40ed79:	test   edx,edx
  40ed7b:	jne    0x40ed90
  40ed7d:	mov    r8d,eax
  40ed80:	mov    rdx,rsi
  40ed83:	mov    ecx,ebx
  40ed85:	add    rsp,0x28
  40ed89:	pop    rbx
  40ed8a:	pop    rsi
  40ed8b:	jmp    0x438708
  40ed90:	mov    r9,QWORD PTR [rip+0x2b4a9]        # 0x43a240
  40ed97:	mov    ebx,eax
  40ed99:	mov    rdx,rsi
  40ed9c:	mov    r8,rbx
  40ed9f:	mov    rcx,r9
  40eda2:	call   0x4387f0
  40eda7:	lea    rax,[rax+rbx*1]
  40edab:	mov    QWORD PTR [rip+0x2b48e],rax        # 0x43a240
  40edb2:	mov    BYTE PTR [rax],0x0
  40edb5:	add    rsp,0x28
  40edb9:	pop    rbx
  40edba:	pop    rsi
  40edbb:	ret    
  40edbc:	nop    DWORD PTR [rax+0x0]
  40edc0:	push   rbx
  40edc1:	sub    rsp,0x20
  40edc5:	cmp    DWORD PTR [rcx+0x8],0x5
  40edc9:	je     0x40edd1
  40edcb:	add    rsp,0x20
  40edcf:	pop    rbx
  40edd0:	ret    
  40edd1:	cmp    QWORD PTR [rcx+0x10],0x0
  40edd6:	jne    0x40edcb
  40edd8:	mov    rdx,QWORD PTR [rip+0x75431]        # 0x484210
  40eddf:	test   rdx,rdx
  40ede2:	je     0x40edcb
  40ede4:	cmp    rcx,rdx
  40ede7:	jne    0x40edf3
  40ede9:	jmp    0x40ee21
  40edeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40edf0:	mov    rdx,rax
  40edf3:	mov    rax,QWORD PTR [rdx+0x18]
  40edf7:	test   rax,rax
  40edfa:	je     0x40edcb
  40edfc:	cmp    rcx,rax
  40edff:	jne    0x40edf0
  40ee01:	mov    rax,QWORD PTR [rcx+0x18]
  40ee05:	mov    QWORD PTR [rdx+0x18],rax
  40ee09:	mov    rbx,rcx
  40ee0c:	mov    rcx,QWORD PTR [rcx]
  40ee0f:	call   0x40e6e0
  40ee14:	mov    rcx,rbx
  40ee17:	add    rsp,0x20
  40ee1b:	pop    rbx
  40ee1c:	jmp    0x40e6e0
  40ee21:	mov    rax,QWORD PTR [rcx+0x18]
  40ee25:	mov    QWORD PTR [rip+0x753e4],rax        # 0x484210
  40ee2c:	jmp    0x40ee09
  40ee2e:	xchg   ax,ax
  40ee30:	push   rdi
  40ee31:	push   rsi
  40ee32:	push   rbx
  40ee33:	sub    rsp,0x20
  40ee37:	mov    eax,edx
  40ee39:	and    eax,0xfffffffc
  40ee3c:	cmp    eax,0x10
  40ee3f:	je     0x40efc0
  40ee45:	jle    0x40eee0
  40ee4b:	cmp    eax,0x40
  40ee4e:	je     0x40ef30
  40ee54:	cmp    eax,0x80
  40ee59:	je     0x40efa0
  40ee5f:	cmp    eax,0x20
  40ee62:	je     0x40ef82
  40ee68:	test   edx,edx
  40ee6a:	je     0x40eff0
  40ee70:	mov    r8d,edx
  40ee73:	mov    BYTE PTR [rcx+0x4],0x0
  40ee77:	mov    DWORD PTR [rcx],0x2d474f4c
  40ee7d:	and    r8d,0xfffffffc
  40ee81:	mov    BYTE PTR [rcx+0x4],0x30
  40ee85:	je     0x40f010
  40ee8b:	mov    BYTE PTR [rcx+0x5],0x78
  40ee8f:	mov    eax,r8d
  40ee92:	xor    r9d,r9d
  40ee95:	shr    eax,0x4
  40ee98:	add    r9d,0x1
  40ee9c:	test   eax,eax
  40ee9e:	jne    0x40ee95
  40eea0:	cmp    r9d,0xc
  40eea4:	jg     0x40f030
  40eeaa:	movsxd r9,r9d
  40eead:	lea    r10,[rcx+r9*1+0x5]
  40eeb2:	jmp    0x40eecb
  40eeb4:	add    eax,0x30
  40eeb7:	mov    BYTE PTR [r10],al
  40eeba:	shr    r8d,0x4
  40eebe:	sub    r10,0x1
  40eec2:	test   r8d,r8d
  40eec5:	je     0x40f020
  40eecb:	mov    eax,r8d
  40eece:	and    eax,0xf
  40eed1:	cmp    eax,0x9
  40eed4:	jbe    0x40eeb4
  40eed6:	add    eax,0x57
  40eed9:	mov    BYTE PTR [r10],al
  40eedc:	jmp    0x40eeba
  40eede:	xchg   ax,ax
  40eee0:	cmp    eax,0x4
  40eee3:	je     0x40efd4
  40eee9:	cmp    eax,0x8
  40eeec:	jne    0x40ee68
  40eef2:	movabs rax,0x4c41434954495243
  40eefc:	mov    BYTE PTR [rcx+0x8],0x0
  40ef00:	xor    esi,esi
  40ef02:	mov    QWORD PTR [rcx],rax
  40ef05:	test   dl,0x1
  40ef08:	mov    ebx,edx
  40ef0a:	mov    rdi,rcx
  40ef0d:	jne    0x40ef50
  40ef0f:	test   bl,0x1c
  40ef12:	jne    0x40ef71
  40ef14:	shr    ebx,1
  40ef16:	mov    eax,esi
  40ef18:	and    ebx,0x1
  40ef1b:	neg    eax
  40ef1d:	mov    DWORD PTR [rip+0x75285],ebx        # 0x4841a8
  40ef23:	add    eax,0x2
  40ef26:	add    rsp,0x20
  40ef2a:	pop    rbx
  40ef2b:	pop    rsi
  40ef2c:	pop    rdi
  40ef2d:	ret    
  40ef2e:	xchg   ax,ax
  40ef30:	test   dl,0x1
  40ef33:	mov    DWORD PTR [rcx],0x4f464e49
  40ef39:	mov    BYTE PTR [rcx+0x4],0x0
  40ef3d:	mov    esi,0x1
  40ef42:	mov    ebx,edx
  40ef44:	mov    rdi,rcx
  40ef47:	je     0x40ef0f
  40ef49:	nop    DWORD PTR [rax+0x0]
  40ef50:	call   0x438788
  40ef55:	movabs rdx,0x7372756365722820
  40ef5f:	add    rax,rdi
  40ef62:	test   bl,0x1c
  40ef65:	mov    QWORD PTR [rax],rdx
  40ef68:	mov    DWORD PTR [rax+0x8],0x296465
  40ef6f:	je     0x40ef14
  40ef71:	mov    rcx,rdi
  40ef74:	call   0x438788
  40ef79:	mov    DWORD PTR [rdi+rax*1],0x2a2a20
  40ef80:	jmp    0x40ef14
  40ef82:	movabs rax,0x6567617373654d
  40ef8c:	xor    esi,esi
  40ef8e:	mov    QWORD PTR [rcx],rax
  40ef91:	jmp    0x40ef05
  40ef96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40efa0:	mov    eax,0x47
  40efa5:	mov    DWORD PTR [rcx],0x55424544
  40efab:	mov    esi,0x1
  40efb0:	mov    WORD PTR [rcx+0x4],ax
  40efb4:	jmp    0x40ef05
  40efb9:	nop    DWORD PTR [rax+0x0]
  40efc0:	movabs rax,0x474e494e524157
  40efca:	xor    esi,esi
  40efcc:	mov    QWORD PTR [rcx],rax
  40efcf:	jmp    0x40ef05
  40efd4:	mov    r8d,0x52
  40efda:	mov    DWORD PTR [rcx],0x4f525245
  40efe0:	xor    esi,esi
  40efe2:	mov    WORD PTR [rcx+0x4],r8w
  40efe7:	jmp    0x40ef05
  40efec:	nop    DWORD PTR [rax+0x0]
  40eff0:	mov    DWORD PTR [rcx],0x474f4c
  40eff6:	mov    DWORD PTR [rip+0x751a8],0x0        # 0x4841a8
  40f000:	mov    eax,0x1
  40f005:	jmp    0x40ef26
  40f00a:	nop    WORD PTR [rax+rax*1+0x0]
  40f010:	mov    BYTE PTR [rcx+0x5],0x0
  40f014:	mov    esi,0x1
  40f019:	jmp    0x40ef05
  40f01e:	xchg   ax,ax
  40f020:	mov    BYTE PTR [rcx+r9*1+0x6],0x0
  40f026:	mov    esi,0x1
  40f02b:	jmp    0x40ef05
  40f030:	mov    BYTE PTR [rcx+0x6],0x0
  40f034:	mov    esi,0x1
  40f039:	jmp    0x40ef05
  40f03e:	xchg   ax,ax
  40f040:	push   rbp
  40f041:	push   rdi
  40f042:	push   rsi
  40f043:	push   rbx
  40f044:	sub    rsp,0x58
  40f048:	lea    rdi,[rsp+0x20]
  40f04d:	mov    rbp,rcx
  40f050:	mov    rsi,r8
  40f053:	mov    rcx,rdi
  40f056:	call   0x40ee30
  40f05b:	mov    ebx,eax
  40f05d:	lea    rax,[rip+0x3061c]        # 0x43f680
  40f064:	test   rsi,rsi
  40f067:	cmove  rsi,rax
  40f06b:	test   rbp,rbp
  40f06e:	je     0x40f0c2
  40f070:	lea    rdx,[rip+0x30618]        # 0x43f68f
  40f077:	mov    ecx,ebx
  40f079:	call   0x40ed60
  40f07e:	mov    rdx,rbp
  40f081:	mov    ecx,ebx
  40f083:	call   0x40ed60
  40f088:	lea    rdx,[rip+0x30602]        # 0x43f691
  40f08f:	mov    ecx,ebx
  40f091:	call   0x40ed60
  40f096:	mov    rdx,rdi
  40f099:	mov    ecx,ebx
  40f09b:	call   0x40ed60
  40f0a0:	lea    rdx,[rip+0x305f1]        # 0x43f698
  40f0a7:	mov    ecx,ebx
  40f0a9:	call   0x40ed60
  40f0ae:	mov    rdx,rsi
  40f0b1:	mov    ecx,ebx
  40f0b3:	call   0x40ed60
  40f0b8:	nop
  40f0b9:	add    rsp,0x58
  40f0bd:	pop    rbx
  40f0be:	pop    rsi
  40f0bf:	pop    rdi
  40f0c0:	pop    rbp
  40f0c1:	ret    
  40f0c2:	lea    rdx,[rip+0x305ca]        # 0x43f693
  40f0c9:	mov    ecx,ebx
  40f0cb:	call   0x40ed60
  40f0d0:	jmp    0x40f096
  40f0d2:	nop    DWORD PTR [rax+0x0]
  40f0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0e0:	push   rsi
  40f0e1:	push   rbx
  40f0e2:	sub    rsp,0x58
  40f0e6:	xor    r8d,r8d
  40f0e9:	mov    rsi,rdx
  40f0ec:	mov    rdx,0xffffffffffffffff
  40f0f3:	mov    rbx,rcx
  40f0f6:	call   0x422ee0
  40f0fb:	test   eax,eax
  40f0fd:	jne    0x40f1b0
  40f103:	lea    rcx,[rip+0x30591]        # 0x43f69b
  40f10a:	call   0x41ae90
  40f10f:	movzx  r8d,BYTE PTR [rbx]
  40f113:	mov    rsi,rax
  40f116:	test   r8b,r8b
  40f119:	jne    0x40f15f
  40f11b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f120:	xor    edx,edx
  40f122:	mov    rcx,rsi
  40f125:	call   0x41a8e0
  40f12a:	add    rsp,0x58
  40f12e:	pop    rbx
  40f12f:	pop    rsi
  40f130:	ret    
  40f131:	cmp    r8b,0x1f
  40f135:	ja     0x40f165
  40f137:	cmp    r8b,0xa
  40f13b:	je     0x40f16b
  40f13d:	cmp    r8b,0xd
  40f141:	je     0x40f16b
  40f143:	lea    rdx,[rip+0x30562]        # 0x43f6ac
  40f14a:	mov    rcx,rsi
  40f14d:	call   0x41bd30
  40f152:	add    rbx,0x1
  40f156:	movzx  r8d,BYTE PTR [rbx]
  40f15a:	test   r8b,r8b
  40f15d:	je     0x40f120
  40f15f:	cmp    r8b,0x9
  40f163:	jne    0x40f131
  40f165:	cmp    r8b,0x7f
  40f169:	je     0x40f143
  40f16b:	lea    eax,[r8-0x80]
  40f16f:	cmp    al,0x1f
  40f171:	jbe    0x40f143
  40f173:	cmp    r8b,0xd
  40f177:	je     0x40f240
  40f17d:	test   r8b,r8b
  40f180:	mov    eax,r8d
  40f183:	js     0x40f143
  40f185:	mov    rdx,QWORD PTR [rsi+0x8]
  40f189:	lea    rcx,[rdx+0x1]
  40f18d:	cmp    rcx,QWORD PTR [rsi+0x10]
  40f191:	jae    0x40f224
  40f197:	mov    r8,QWORD PTR [rsi]
  40f19a:	mov    QWORD PTR [rsi+0x8],rcx
  40f19e:	mov    BYTE PTR [r8+rdx*1],al
  40f1a2:	mov    rdx,QWORD PTR [rsi]
  40f1a5:	mov    rax,QWORD PTR [rsi+0x8]
  40f1a9:	mov    BYTE PTR [rdx+rax*1],0x0
  40f1ad:	jmp    0x40f152
  40f1af:	nop
  40f1b0:	lea    rax,[rsp+0x48]
  40f1b5:	lea    r9,[rip+0x304f7]        # 0x43f6b3
  40f1bc:	mov    QWORD PTR [rsp+0x30],0x0
  40f1c5:	mov    QWORD PTR [rsp+0x28],0x0
  40f1ce:	mov    r8,rsi
  40f1d1:	mov    rdx,0xffffffffffffffff
  40f1d8:	mov    QWORD PTR [rsp+0x38],rax
  40f1dd:	lea    rax,[rip+0x304d5]        # 0x43f6b9
  40f1e4:	mov    rcx,rbx
  40f1e7:	mov    QWORD PTR [rsp+0x48],0x0
  40f1f0:	mov    QWORD PTR [rsp+0x20],rax
  40f1f5:	call   0x42db10
  40f1fa:	test   rax,rax
  40f1fd:	jne    0x40f12a
  40f203:	mov    eax,DWORD PTR [rip+0x74f97]        # 0x4841a0
  40f209:	test   eax,eax
  40f20b:	je     0x40f263
  40f20d:	mov    rcx,QWORD PTR [rsp+0x48]
  40f212:	call   0x4304e0
  40f217:	mov    rcx,rbx
  40f21a:	call   0x4182b0
  40f21f:	jmp    0x40f12a
  40f224:	movsx  r8d,al
  40f228:	mov    rdx,0xffffffffffffffff
  40f22f:	mov    rcx,rsi
  40f232:	call   0x41b0f0
  40f237:	jmp    0x40f152
  40f23c:	nop    DWORD PTR [rax+0x0]
  40f240:	cmp    BYTE PTR [rbx+0x1],0xa
  40f244:	jne    0x40f143
  40f24a:	mov    rdx,QWORD PTR [rsi+0x8]
  40f24e:	mov    eax,0xd
  40f253:	lea    rcx,[rdx+0x1]
  40f257:	cmp    rcx,QWORD PTR [rsi+0x10]
  40f25b:	jb     0x40f197
  40f261:	jmp    0x40f224
  40f263:	mov    rax,QWORD PTR [rsp+0x48]
  40f268:	mov    DWORD PTR [rip+0x74f2e],0x1        # 0x4841a0
  40f272:	mov    rsi,QWORD PTR [rax+0x8]
  40f276:	call   QWORD PTR [rip+0x7760c]        # 0x486888
  40f27c:	lea    rdx,[rip+0x3043d]        # 0x43f6c0
  40f283:	lea    rcx,[rax+0x60]
  40f287:	mov    r8,rsi
  40f28a:	call   0x427c30
  40f28f:	jmp    0x40f20d
  40f294:	xchg   ax,ax
  40f296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f2a0:	push   r15
  40f2a2:	push   r14
  40f2a4:	push   r13
  40f2a6:	push   r12
  40f2a8:	push   rbp
  40f2a9:	push   rdi
  40f2aa:	push   rsi
  40f2ab:	push   rbx
  40f2ac:	sub    rsp,0x78
  40f2b0:	test   dl,0x3c
  40f2b3:	mov    r12,rcx
  40f2b6:	mov    ebx,edx
  40f2b8:	mov    r13,r8
  40f2bb:	jne    0x40f2ca
  40f2bd:	mov    eax,edx
  40f2bf:	sar    eax,0x8
  40f2c2:	test   eax,eax
  40f2c4:	je     0x40f580
  40f2ca:	test   bl,0x1
  40f2cd:	jne    0x40f4b0
  40f2d3:	lea    rsi,[rsp+0x40]
  40f2d8:	mov    edx,ebx
  40f2da:	mov    rcx,rsi
  40f2dd:	call   0x40ee30
  40f2e2:	xor    ecx,ecx
  40f2e4:	mov    DWORD PTR [rsp+0x28],eax
  40f2e8:	call   0x41ae90
  40f2ed:	test   bl,0x1c
  40f2f0:	mov    rbp,rax
  40f2f3:	jne    0x40f5f0
  40f2f9:	test   r12,r12
  40f2fc:	je     0x40f634
  40f302:	mov    rax,QWORD PTR [rip+0x6c887]        # 0x47bb90
  40f309:	and    ebx,0xfffffffc
  40f30c:	mov    edi,DWORD PTR [rax]
  40f30e:	and    edi,ebx
  40f310:	cmp    ebx,edi
  40f312:	je     0x40f660
  40f318:	mov    rdx,r12
  40f31b:	mov    rcx,rbp
  40f31e:	call   0x41ace0
  40f323:	mov    rax,QWORD PTR [rbp+0x8]
  40f327:	lea    rdx,[rax+0x1]
  40f32b:	cmp    rdx,QWORD PTR [rbp+0x10]
  40f32f:	jae    0x40f604
  40f335:	mov    rcx,QWORD PTR [rbp+0x0]
  40f339:	mov    QWORD PTR [rbp+0x8],rdx
  40f33d:	mov    BYTE PTR [rcx+rax*1],0x2d
  40f341:	mov    rdx,QWORD PTR [rbp+0x0]
  40f345:	mov    rax,QWORD PTR [rbp+0x8]
  40f349:	mov    BYTE PTR [rdx+rax*1],0x0
  40f34d:	mov    rdx,rsi
  40f350:	mov    rcx,rbp
  40f353:	call   0x41ace0
  40f358:	lea    rdx,[rip+0x30339]        # 0x43f698
  40f35f:	mov    rcx,rbp
  40f362:	call   0x41ace0
  40f367:	test   r13,r13
  40f36a:	je     0x40f620
  40f370:	mov    rcx,r13
  40f373:	call   0x41ae90
  40f378:	mov    rbx,QWORD PTR [rax]
  40f37b:	mov    r13,QWORD PTR [rip+0x6c86e]        # 0x47bbf0
  40f382:	mov    rsi,rax
  40f385:	mov    rdi,rbx
  40f388:	add    rdi,QWORD PTR [rax+0x8]
  40f38c:	mov    r12,rbx
  40f38f:	mov    r14,r13
  40f392:	cmp    rbx,rdi
  40f395:	jae    0x40f439
  40f39b:	mov    rdx,0xffffffffffffffff
  40f3a2:	mov    rcx,rbx
  40f3a5:	call   0x421e30
  40f3aa:	lea    edx,[rax+0x2]
  40f3ad:	cmp    edx,0x1
  40f3b0:	jbe    0x40f510
  40f3b6:	cmp    eax,0xd
  40f3b9:	je     0x40f4d0
  40f3bf:	cmp    eax,0x9
  40f3c2:	je     0x40f4f0
  40f3c8:	cmp    eax,0x1f
  40f3cb:	ja     0x40f4f0
  40f3d1:	cmp    eax,0xa
  40f3d4:	je     0x40f4da
  40f3da:	lea    rcx,[rip+0x30335]        # 0x43f716
  40f3e1:	mov    rdi,rbx
  40f3e4:	mov    edx,eax
  40f3e6:	sub    rdi,r12
  40f3e9:	call   0x418470
  40f3ee:	mov    r12,rax
  40f3f1:	movzx  eax,BYTE PTR [rbx]
  40f3f4:	mov    rdx,QWORD PTR [r14]
  40f3f7:	mov    r15d,edi
  40f3fa:	mov    rcx,rsi
  40f3fd:	lea    ebx,[rdi+0x6]
  40f400:	movsx  r8,BYTE PTR [rdx+rax*1]
  40f405:	mov    rdx,r15
  40f408:	call   0x41b8e0
  40f40d:	mov    r8,r12
  40f410:	mov    rdx,r15
  40f413:	mov    rcx,rsi
  40f416:	call   0x41b040
  40f41b:	mov    rcx,r12
  40f41e:	call   0x40e6e0
  40f423:	mov    r12,QWORD PTR [rsi]
  40f426:	mov    rdi,r12
  40f429:	add    rdi,QWORD PTR [rsi+0x8]
  40f42d:	add    rbx,r12
  40f430:	cmp    rbx,rdi
  40f433:	jb     0x40f39b
  40f439:	lea    rcx,[rsp+0x38]
  40f43e:	call   0x42aba0
  40f443:	test   eax,eax
  40f445:	jne    0x40f570
  40f44b:	mov    rdx,QWORD PTR [rsp+0x38]
  40f450:	mov    rcx,QWORD PTR [rsi]
  40f453:	call   0x40f0e0
  40f458:	mov    rcx,rbp
  40f45b:	mov    rbx,rax
  40f45e:	mov    rdx,rax
  40f461:	call   0x41ace0
  40f466:	mov    rcx,rbx
  40f469:	call   0x40e6e0
  40f46e:	mov    edx,0x1
  40f473:	mov    rcx,rsi
  40f476:	call   0x41a8e0
  40f47b:	lea    rdx,[rip+0x3020d]        # 0x43f68f
  40f482:	mov    rcx,rbp
  40f485:	call   0x41ace0
  40f48a:	xor    edx,edx
  40f48c:	mov    rcx,rbp
  40f48f:	call   0x41a8e0
  40f494:	mov    ecx,DWORD PTR [rsp+0x28]
  40f498:	mov    rbx,rax
  40f49b:	mov    rdx,rax
  40f49e:	call   0x40ed60
  40f4a3:	mov    rcx,rbx
  40f4a6:	call   0x40e6e0
  40f4ab:	jmp    0x40f4be
  40f4ad:	nop    DWORD PTR [rax]
  40f4b0:	mov    r8,r13
  40f4b3:	mov    edx,ebx
  40f4b5:	mov    rcx,r12
  40f4b8:	call   0x40f040
  40f4bd:	nop
  40f4be:	add    rsp,0x78
  40f4c2:	pop    rbx
  40f4c3:	pop    rsi
  40f4c4:	pop    rdi
  40f4c5:	pop    rbp
  40f4c6:	pop    r12
  40f4c8:	pop    r13
  40f4ca:	pop    r14
  40f4cc:	pop    r15
  40f4ce:	ret    
  40f4cf:	nop
  40f4d0:	cmp    BYTE PTR [rbx+0x1],0xa
  40f4d4:	jne    0x40f3da
  40f4da:	movzx  eax,BYTE PTR [rbx]
  40f4dd:	mov    rdx,QWORD PTR [r13+0x0]
  40f4e1:	movsx  rax,BYTE PTR [rdx+rax*1]
  40f4e6:	add    rbx,rax
  40f4e9:	jmp    0x40f392
  40f4ee:	xchg   ax,ax
  40f4f0:	cmp    eax,0x7f
  40f4f3:	je     0x40f3da
  40f4f9:	lea    edx,[rax-0x80]
  40f4fc:	cmp    edx,0x1f
  40f4ff:	jbe    0x40f3da
  40f505:	jmp    0x40f4da
  40f507:	nop    WORD PTR [rax+rax*1+0x0]
  40f510:	movzx  edx,BYTE PTR [rbx]
  40f513:	mov    rax,rbx
  40f516:	lea    rcx,[rip+0x3018f]        # 0x43f6ac
  40f51d:	sub    rax,r12
  40f520:	mov    r12,rax
  40f523:	mov    ebx,r12d
  40f526:	call   0x418470
  40f52b:	mov    rdx,rbx
  40f52e:	mov    rdi,rax
  40f531:	mov    r8d,0x1
  40f537:	mov    rcx,rsi
  40f53a:	call   0x41b8e0
  40f53f:	mov    r8,rdi
  40f542:	mov    rdx,rbx
  40f545:	mov    rcx,rsi
  40f548:	call   0x41b040
  40f54d:	mov    rcx,rdi
  40f550:	lea    ebx,[r12+0x4]
  40f555:	add    rbx,QWORD PTR [rsi]
  40f558:	call   0x40e6e0
  40f55d:	mov    r12,QWORD PTR [rsi]
  40f560:	mov    rdi,r12
  40f563:	add    rdi,QWORD PTR [rsi+0x8]
  40f567:	jmp    0x40f392
  40f56c:	nop    DWORD PTR [rax+0x0]
  40f570:	mov    rdx,QWORD PTR [rsi]
  40f573:	mov    rcx,rbp
  40f576:	call   0x41ace0
  40f57b:	jmp    0x40f46e
  40f580:	lea    rcx,[rip+0x3015b]        # 0x43f6e2
  40f587:	mov    QWORD PTR [rsp+0x28],r9
  40f58c:	call   0x4059c0
  40f591:	test   rax,rax
  40f594:	je     0x40f4be
  40f59a:	test   bl,0xc0
  40f59d:	je     0x40f4be
  40f5a3:	lea    rdi,[rip+0x30149]        # 0x43f6f3
  40f5aa:	mov    ecx,0x4
  40f5af:	mov    rsi,rax
  40f5b2:	mov    r9,QWORD PTR [rsp+0x28]
  40f5b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f5b9:	je     0x40f2ca
  40f5bf:	test   r12,r12
  40f5c2:	je     0x40f4be
  40f5c8:	mov    rdx,r12
  40f5cb:	mov    rcx,rax
  40f5ce:	call   0x438760
  40f5d3:	test   rax,rax
  40f5d6:	mov    r9,QWORD PTR [rsp+0x28]
  40f5db:	jne    0x40f2ca
  40f5e1:	jmp    0x40f4be
  40f5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5f0:	lea    rdx,[rip+0x30098]        # 0x43f68f
  40f5f7:	mov    rcx,rax
  40f5fa:	call   0x41ace0
  40f5ff:	jmp    0x40f2f9
  40f604:	mov    r8d,0x2d
  40f60a:	mov    rdx,0xffffffffffffffff
  40f611:	mov    rcx,rbp
  40f614:	call   0x41b0f0
  40f619:	jmp    0x40f34d
  40f61e:	xchg   ax,ax
  40f620:	lea    rdx,[rip+0x30059]        # 0x43f680
  40f627:	mov    rcx,rbp
  40f62a:	call   0x41ace0
  40f62f:	jmp    0x40f47b
  40f634:	lea    rdx,[rip+0x300bc]        # 0x43f6f7
  40f63b:	mov    rcx,rbp
  40f63e:	and    ebx,0xfffffffc
  40f641:	call   0x41ace0
  40f646:	mov    rax,QWORD PTR [rip+0x6c543]        # 0x47bb90
  40f64d:	mov    ecx,DWORD PTR [rax]
  40f64f:	and    ecx,ebx
  40f651:	cmp    ebx,ecx
  40f653:	jne    0x40f34d
  40f659:	nop    DWORD PTR [rax+0x0]
  40f660:	call   0x425280
  40f665:	test   rax,rax
  40f668:	mov    rbx,rax
  40f66b:	je     0x40f695
  40f66d:	call   0x438700
  40f672:	lea    rdx,[rip+0x30092]        # 0x43f70b
  40f679:	mov    r9d,eax
  40f67c:	mov    r8,rbx
  40f67f:	mov    rcx,rbp
  40f682:	call   0x41bd30
  40f687:	test   r12,r12
  40f68a:	jne    0x40f318
  40f690:	jmp    0x40f34d
  40f695:	call   0x438700
  40f69a:	lea    rdx,[rip+0x3005a]        # 0x43f6fb
  40f6a1:	mov    r8d,eax
  40f6a4:	mov    rcx,rbp
  40f6a7:	call   0x41bd30
  40f6ac:	jmp    0x40f687
  40f6ae:	xchg   ax,ax
  40f6b0:	push   rsi
  40f6b1:	push   rbx
  40f6b2:	sub    rsp,0x28
  40f6b6:	mov    ebx,ecx
  40f6b8:	lea    rcx,[rip+0x74b59]        # 0x484218
  40f6bf:	and    ebx,0xfd
  40f6c5:	call   0x426d40
  40f6ca:	mov    rdx,QWORD PTR [rip+0x6c4af]        # 0x47bb80
  40f6d1:	lea    rcx,[rip+0x74b40]        # 0x484218
  40f6d8:	or     ebx,0x4
  40f6db:	mov    esi,DWORD PTR [rdx]
  40f6dd:	mov    DWORD PTR [rdx],ebx
  40f6df:	call   0x426d70
  40f6e4:	mov    eax,esi
  40f6e6:	add    rsp,0x28
  40f6ea:	pop    rbx
  40f6eb:	pop    rsi
  40f6ec:	ret    
  40f6ed:	nop    DWORD PTR [rax]
  40f6f0:	push   rsi
  40f6f1:	push   rbx
  40f6f2:	sub    rsp,0x28
  40f6f6:	lea    rax,[rip+0x30020]        # 0x43f71d
  40f6fd:	test   rcx,rcx
  40f700:	mov    rsi,rcx
  40f703:	lea    rcx,[rip+0x74b0e]        # 0x484218
  40f70a:	cmove  rsi,rax
  40f70e:	and    edx,0xfffffffd
  40f711:	mov    ebx,edx
  40f713:	call   0x426d40
  40f718:	mov    rcx,rsi
  40f71b:	or     ebx,0x4
  40f71e:	call   0x40ecc0
  40f723:	test   rax,rax
  40f726:	je     0x40f750
  40f728:	mov    esi,DWORD PTR [rax+0x8]
  40f72b:	mov    rcx,rax
  40f72e:	mov    DWORD PTR [rax+0x8],ebx
  40f731:	call   0x40edc0
  40f736:	lea    rcx,[rip+0x74adb]        # 0x484218
  40f73d:	call   0x426d70
  40f742:	mov    eax,esi
  40f744:	add    rsp,0x28
  40f748:	pop    rbx
  40f749:	pop    rsi
  40f74a:	ret    
  40f74b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f750:	mov    rcx,rsi
  40f753:	call   0x40ed10
  40f758:	jmp    0x40f728
  40f75a:	nop    WORD PTR [rax+rax*1+0x0]
  40f760:	push   rdi
  40f761:	push   rsi
  40f762:	push   rbx
  40f763:	sub    rsp,0x20
  40f767:	mov    rdi,rcx
  40f76a:	lea    rcx,[rip+0x74aa7]        # 0x484218
  40f771:	mov    rsi,rdx
  40f774:	call   0x426d40
  40f779:	mov    rbx,QWORD PTR [rip+0x2aee8]        # 0x43a668
  40f780:	lea    rcx,[rip+0x74a91]        # 0x484218
  40f787:	mov    QWORD PTR [rip+0x2aeda],rdi        # 0x43a668
  40f78e:	mov    QWORD PTR [rip+0x74a2b],rsi        # 0x4841c0
  40f795:	call   0x426d70
  40f79a:	mov    rax,rbx
  40f79d:	add    rsp,0x20
  40f7a1:	pop    rbx
  40f7a2:	pop    rsi
  40f7a3:	pop    rdi
  40f7a4:	ret    
  40f7a5:	nop
  40f7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7b0:	push   rsi
  40f7b1:	push   rbx
  40f7b2:	sub    rsp,0x28
  40f7b6:	mov    rsi,rcx
  40f7b9:	lea    rcx,[rip+0x74a58]        # 0x484218
  40f7c0:	mov    rbx,rdx
  40f7c3:	call   0x426d40
  40f7c8:	lea    rcx,[rip+0x74a49]        # 0x484218
  40f7cf:	mov    QWORD PTR [rip+0x749e2],rsi        # 0x4841b8
  40f7d6:	mov    QWORD PTR [rip+0x749d3],rbx        # 0x4841b0
  40f7dd:	add    rsp,0x28
  40f7e1:	pop    rbx
  40f7e2:	pop    rsi
  40f7e3:	jmp    0x426d70
  40f7e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7f0:	push   r15
  40f7f2:	push   r14
  40f7f4:	push   r13
  40f7f6:	push   r12
  40f7f8:	push   rbp
  40f7f9:	push   rdi
  40f7fa:	push   rsi
  40f7fb:	push   rbx
  40f7fc:	sub    rsp,0x468
  40f803:	mov    ebx,0x20
  40f808:	mov    edi,edx
  40f80a:	and    edi,0xfffffffc
  40f80d:	jne    0x40f81c
  40f80f:	jmp    0x40f960
  40f814:	test   ebx,ebx
  40f816:	je     0x40f960
  40f81c:	sub    ebx,0x1
  40f81f:	bt     edi,ebx
  40f822:	jae    0x40f814
  40f824:	mov    eax,edx
  40f826:	lea    r15,[rsp+0x50]
  40f82b:	and    edx,0x1
  40f82e:	and    eax,0x2
  40f831:	mov    r14,r9
  40f834:	mov    QWORD PTR [rsp+0x38],r8
  40f839:	mov    r12,rcx
  40f83c:	mov    DWORD PTR [rsp+0x30],eax
  40f840:	mov    DWORD PTR [rsp+0x34],edx
  40f844:	mov    esi,0x1
  40f849:	mov    ecx,ebx
  40f84b:	shl    esi,cl
  40f84d:	test   esi,edi
  40f84f:	je     0x40f95c
  40f855:	lea    rcx,[rip+0x749bc]        # 0x484218
  40f85c:	or     esi,DWORD PTR [rsp+0x30]
  40f860:	or     esi,DWORD PTR [rsp+0x34]
  40f864:	call   0x426d40
  40f869:	lea    rcx,[rip+0x74970]        # 0x4841e0
  40f870:	call   0x426ff0
  40f875:	lea    rcx,[rip+0x2fea1]        # 0x43f71d
  40f87c:	test   r12,r12
  40f87f:	mov    rbp,rax
  40f882:	lea    r13d,[rbp+0x1]
  40f886:	cmovne rcx,r12
  40f88a:	call   0x40ecc0
  40f88f:	mov    edx,esi
  40f891:	or     edx,0x1
  40f894:	test   ebp,ebp
  40f896:	cmovne esi,edx
  40f899:	test   rax,rax
  40f89c:	je     0x40fa93
  40f8a2:	mov    edx,DWORD PTR [rax+0x8]
  40f8a5:	mov    rcx,QWORD PTR [rip+0x6c2d4]        # 0x47bb80
  40f8ac:	or     edx,DWORD PTR [rcx]
  40f8ae:	mov    ecx,esi
  40f8b0:	or     ecx,0x2
  40f8b3:	test   edx,esi
  40f8b5:	cmovne esi,ecx
  40f8b8:	test   sil,0x1
  40f8bc:	je     0x40f974
  40f8c2:	lea    rcx,[rip+0x7494f]        # 0x484218
  40f8c9:	call   0x426d70
  40f8ce:	lea    rcx,[rip+0x7490b]        # 0x4841e0
  40f8d5:	mov    edx,r13d
  40f8d8:	call   0x427020
  40f8dd:	mov    r8,QWORD PTR [rsp+0x38]
  40f8e2:	mov    r9,r14
  40f8e5:	mov    edx,0x400
  40f8ea:	mov    rcx,r15
  40f8ed:	call   0x427d50
  40f8f2:	xor    r9d,r9d
  40f8f5:	mov    edx,esi
  40f8f7:	mov    r8,r15
  40f8fa:	mov    rcx,r12
  40f8fd:	call   0x40f040
  40f902:	and    esi,0x2
  40f905:	je     0x40fa6d
  40f90b:	lea    rcx,[rip+0x2a96e]        # 0x43a280
  40f912:	xor    r9d,r9d
  40f915:	xor    r8d,r8d
  40f918:	mov    rdx,0xffffffffffffffff
  40f91f:	mov    QWORD PTR [rsp+0x20],0x0
  40f928:	call   0x42e110
  40f92d:	mov    r9d,0x10010
  40f933:	xor    r8d,r8d
  40f936:	mov    rdx,rax
  40f939:	xor    ecx,ecx
  40f93b:	call   QWORD PTR [rip+0x77277]        # 0x486bb8
  40f941:	call   QWORD PTR [rip+0x76e31]        # 0x486778
  40f947:	call   0x4388c0
  40f94c:	nop    DWORD PTR [rax+0x0]
  40f950:	sub    ebx,0x1
  40f953:	bt     edi,ebx
  40f956:	jb     0x40f844
  40f95c:	test   ebx,ebx
  40f95e:	jne    0x40f950
  40f960:	add    rsp,0x468
  40f967:	pop    rbx
  40f968:	pop    rsi
  40f969:	pop    rdi
  40f96a:	pop    rbp
  40f96b:	pop    r12
  40f96d:	pop    r13
  40f96f:	pop    r14
  40f971:	pop    r15
  40f973:	ret    
  40f974:	test   esi,esi
  40f976:	je     0x40fa80
  40f97c:	test   rax,rax
  40f97f:	je     0x40fa80
  40f985:	mov    rax,QWORD PTR [rax+0x10]
  40f989:	test   rax,rax
  40f98c:	jne    0x40f9a0
  40f98e:	jmp    0x40fa80
  40f993:	mov    rax,QWORD PTR [rax+0x18]
  40f997:	test   rax,rax
  40f99a:	je     0x40fa80
  40f9a0:	mov    edx,DWORD PTR [rax+0x4]
  40f9a3:	and    edx,esi
  40f9a5:	cmp    esi,edx
  40f9a7:	jne    0x40f993
  40f9a9:	mov    r9,QWORD PTR [rax+0x10]
  40f9ad:	mov    r11,QWORD PTR [rax+0x8]
  40f9b1:	lea    rcx,[rip+0x74860]        # 0x484218
  40f9b8:	mov    QWORD PTR [rsp+0x48],r11
  40f9bd:	mov    QWORD PTR [rsp+0x40],r9
  40f9c2:	call   0x426d70
  40f9c7:	lea    rcx,[rip+0x74812]        # 0x4841e0
  40f9ce:	mov    edx,r13d
  40f9d1:	mov    r13d,0x1
  40f9d7:	call   0x427020
  40f9dc:	mov    rcx,QWORD PTR [rsp+0x38]
  40f9e1:	mov    rdx,r14
  40f9e4:	call   0x418440
  40f9e9:	mov    r9,QWORD PTR [rsp+0x40]
  40f9ee:	mov    r8,rax
  40f9f1:	mov    QWORD PTR [rsp+0x40],rax
  40f9f6:	mov    edx,esi
  40f9f8:	mov    rcx,r12
  40f9fb:	mov    r11,QWORD PTR [rsp+0x48]
  40fa00:	call   r11
  40fa03:	mov    eax,esi
  40fa05:	mov    r10,QWORD PTR [rsp+0x40]
  40fa0a:	and    eax,0x6
  40fa0d:	cmp    eax,0x2
  40fa10:	je     0x40fa9d
  40fa16:	mov    rcx,r10
  40fa19:	call   0x40e6e0
  40fa1e:	test   r13b,r13b
  40fa21:	je     0x40fa6d
  40fa23:	and    esi,0x2
  40fa26:	je     0x40fa6d
  40fa28:	lea    rcx,[rip+0x2a851]        # 0x43a280
  40fa2f:	xor    r9d,r9d
  40fa32:	xor    r8d,r8d
  40fa35:	mov    rdx,0xffffffffffffffff
  40fa3c:	mov    QWORD PTR [rsp+0x20],0x0
  40fa45:	call   0x42e110
  40fa4a:	xor    r8d,r8d
  40fa4d:	xor    ecx,ecx
  40fa4f:	mov    r9d,0x10010
  40fa55:	mov    rdx,rax
  40fa58:	call   QWORD PTR [rip+0x7715a]        # 0x486bb8
  40fa5e:	call   QWORD PTR [rip+0x76d14]        # 0x486778
  40fa64:	test   eax,eax
  40fa66:	je     0x40f947
  40fa6c:	int3   
  40fa6d:	lea    rcx,[rip+0x7476c]        # 0x4841e0
  40fa74:	mov    edx,ebp
  40fa76:	call   0x427020
  40fa7b:	jmp    0x40f95c
  40fa80:	mov    r9,QWORD PTR [rip+0x74739]        # 0x4841c0
  40fa87:	mov    r11,QWORD PTR [rip+0x2abda]        # 0x43a668
  40fa8e:	jmp    0x40f9b1
  40fa93:	mov    edx,0x5
  40fa98:	jmp    0x40f8a5
  40fa9d:	mov    rax,QWORD PTR [rip+0x74714]        # 0x4841b8
  40faa4:	mov    r13d,0x1
  40faaa:	test   rax,rax
  40faad:	je     0x40fa16
  40fab3:	mov    r8,r10
  40fab6:	mov    QWORD PTR [rsp+0x40],r10
  40fabb:	mov    r9,QWORD PTR [rip+0x746ee]        # 0x4841b0
  40fac2:	mov    edx,esi
  40fac4:	mov    rcx,r12
  40fac7:	call   rax
  40fac9:	test   eax,eax
  40facb:	mov    r10,QWORD PTR [rsp+0x40]
  40fad0:	setne  r13b
  40fad4:	jmp    0x40fa16
  40fad9:	nop    DWORD PTR [rax+0x0]
  40fae0:	sub    rsp,0x38
  40fae4:	mov    QWORD PTR [rsp+0x58],r9
  40fae9:	lea    r9,[rsp+0x58]
  40faee:	mov    QWORD PTR [rsp+0x28],r9
  40faf3:	call   0x40f7f0
  40faf8:	nop
  40faf9:	add    rsp,0x38
  40fafd:	ret    
  40fafe:	xchg   ax,ax
  40fb00:	push   r12
  40fb02:	push   rbp
  40fb03:	push   rdi
  40fb04:	push   rsi
  40fb05:	push   rbx
  40fb06:	sub    rsp,0x30
  40fb0a:	test   edx,0xfffffffc
  40fb10:	mov    rsi,rcx
  40fb13:	mov    edi,edx
  40fb15:	mov    rbp,r8
  40fb18:	mov    r12,r9
  40fb1b:	je     0x40fbb0
  40fb21:	test   r8,r8
  40fb24:	je     0x40fbf0
  40fb2a:	lea    rax,[rip+0x2fbec]        # 0x43f71d
  40fb31:	test   rcx,rcx
  40fb34:	mov    ecx,0x20
  40fb39:	cmove  rsi,rax
  40fb3d:	call   0x40e5c0
  40fb42:	lea    rcx,[rip+0x746cf]        # 0x484218
  40fb49:	mov    rbx,rax
  40fb4c:	call   0x426d40
  40fb51:	mov    rcx,rsi
  40fb54:	call   0x40ecc0
  40fb59:	test   rax,rax
  40fb5c:	je     0x40fc00
  40fb62:	mov    edx,DWORD PTR [rip+0x7463c]        # 0x4841a4
  40fb68:	mov    DWORD PTR [rbx+0x4],edi
  40fb6b:	mov    QWORD PTR [rbx+0x8],rbp
  40fb6f:	mov    QWORD PTR [rbx+0x10],r12
  40fb73:	lea    ecx,[rdx+0x1]
  40fb76:	mov    rdx,QWORD PTR [rax+0x10]
  40fb7a:	mov    DWORD PTR [rbx],ecx
  40fb7c:	mov    DWORD PTR [rip+0x74622],ecx        # 0x4841a4
  40fb82:	lea    rcx,[rip+0x7468f]        # 0x484218
  40fb89:	mov    QWORD PTR [rbx+0x18],rdx
  40fb8d:	mov    QWORD PTR [rax+0x10],rbx
  40fb91:	call   0x426d70
  40fb96:	mov    eax,DWORD PTR [rip+0x74608]        # 0x4841a4
  40fb9c:	add    rsp,0x30
  40fba0:	pop    rbx
  40fba1:	pop    rsi
  40fba2:	pop    rdi
  40fba3:	pop    rbp
  40fba4:	pop    r12
  40fba6:	ret    
  40fba7:	nop    WORD PTR [rax+rax*1+0x0]
  40fbb0:	lea    rax,[rip+0x2fb89]        # 0x43f740
  40fbb7:	lea    r9,[rip+0x2fd52]        # 0x43f910
  40fbbe:	lea    r8,[rip+0x2fb59]        # 0x43f71e
  40fbc5:	lea    rcx,[rip+0x2fb6c]        # 0x43f738
  40fbcc:	mov    QWORD PTR [rsp+0x20],rax
  40fbd1:	mov    edx,0x8
  40fbd6:	call   0x40fae0
  40fbdb:	xor    eax,eax
  40fbdd:	add    rsp,0x30
  40fbe1:	pop    rbx
  40fbe2:	pop    rsi
  40fbe3:	pop    rdi
  40fbe4:	pop    rbp
  40fbe5:	pop    r12
  40fbe7:	ret    
  40fbe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbf0:	lea    rax,[rip+0x2fb6e]        # 0x43f765
  40fbf7:	jmp    0x40fbb7
  40fbf9:	nop    DWORD PTR [rax+0x0]
  40fc00:	mov    rcx,rsi
  40fc03:	call   0x40ed10
  40fc08:	jmp    0x40fb62
  40fc0d:	nop    DWORD PTR [rax]
  40fc10:	push   rsi
  40fc11:	push   rbx
  40fc12:	sub    rsp,0x38
  40fc16:	test   edx,edx
  40fc18:	mov    rsi,rcx
  40fc1b:	mov    ebx,edx
  40fc1d:	je     0x40fcb0
  40fc23:	lea    rax,[rip+0x2faf3]        # 0x43f71d
  40fc2a:	test   rcx,rcx
  40fc2d:	lea    rcx,[rip+0x745e4]        # 0x484218
  40fc34:	cmove  rsi,rax
  40fc38:	call   0x426d40
  40fc3d:	mov    rcx,rsi
  40fc40:	call   0x40ecc0
  40fc45:	test   rax,rax
  40fc48:	je     0x40fc71
  40fc4a:	mov    r9,QWORD PTR [rax+0x10]
  40fc4e:	test   r9,r9
  40fc51:	je     0x40fc71
  40fc53:	cmp    DWORD PTR [r9],ebx
  40fc56:	jne    0x40fc68
  40fc58:	jmp    0x40fd10
  40fc5d:	nop    DWORD PTR [rax]
  40fc60:	cmp    DWORD PTR [r8],ebx
  40fc63:	je     0x40fce3
  40fc65:	mov    r9,r8
  40fc68:	mov    r8,QWORD PTR [r9+0x18]
  40fc6c:	test   r8,r8
  40fc6f:	jne    0x40fc60
  40fc71:	lea    rcx,[rip+0x745a0]        # 0x484218
  40fc78:	call   0x426d70
  40fc7d:	lea    r9,[rip+0x2faf4]        # 0x43f778
  40fc84:	lea    r8,[rip+0x2fb4d]        # 0x43f7d8
  40fc8b:	lea    rcx,[rip+0x2faa6]        # 0x43f738
  40fc92:	mov    QWORD PTR [rsp+0x28],rsi
  40fc97:	mov    DWORD PTR [rsp+0x20],ebx
  40fc9b:	mov    edx,0x10
  40fca0:	call   0x40fae0
  40fca5:	nop
  40fca6:	add    rsp,0x38
  40fcaa:	pop    rbx
  40fcab:	pop    rsi
  40fcac:	ret    
  40fcad:	nop    DWORD PTR [rax]
  40fcb0:	lea    rax,[rip+0x2fb59]        # 0x43f810
  40fcb7:	lea    r9,[rip+0x2fc32]        # 0x43f8f0
  40fcbe:	lea    r8,[rip+0x2fa59]        # 0x43f71e
  40fcc5:	lea    rcx,[rip+0x2fa6c]        # 0x43f738
  40fccc:	mov    edx,0x8
  40fcd1:	mov    QWORD PTR [rsp+0x20],rax
  40fcd6:	call   0x40fae0
  40fcdb:	nop
  40fcdc:	add    rsp,0x38
  40fce0:	pop    rbx
  40fce1:	pop    rsi
  40fce2:	ret    
  40fce3:	mov    rdx,QWORD PTR [r8+0x18]
  40fce7:	mov    rbx,r8
  40fcea:	mov    QWORD PTR [r9+0x18],rdx
  40fcee:	mov    rcx,rax
  40fcf1:	call   0x40edc0
  40fcf6:	lea    rcx,[rip+0x7451b]        # 0x484218
  40fcfd:	call   0x426d70
  40fd02:	mov    rcx,rbx
  40fd05:	add    rsp,0x38
  40fd09:	pop    rbx
  40fd0a:	pop    rsi
  40fd0b:	jmp    0x40e6e0
  40fd10:	mov    rdx,QWORD PTR [r9+0x18]
  40fd14:	mov    rbx,r9
  40fd17:	mov    QWORD PTR [rax+0x10],rdx
  40fd1b:	jmp    0x40fcee
  40fd1d:	nop    DWORD PTR [rax]
  40fd20:	sub    rsp,0x38
  40fd24:	mov    QWORD PTR [rsp+0x20],r8
  40fd29:	lea    r8,[rip+0x2f9ee]        # 0x43f71e
  40fd30:	mov    r9,rdx
  40fd33:	mov    edx,0x8
  40fd38:	call   0x40fae0
  40fd3d:	nop
  40fd3e:	add    rsp,0x38
  40fd42:	ret    
  40fd43:	nop    DWORD PTR [rax]
  40fd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd50:	push   r12
  40fd52:	push   rbp
  40fd53:	push   rdi
  40fd54:	push   rsi
  40fd55:	push   rbx
  40fd56:	add    rsp,0xffffffffffffff80
  40fd5a:	mov    rdi,QWORD PTR [rsp+0xd0]
  40fd62:	lea    rbx,[rsp+0x60]
  40fd67:	mov    rsi,r9
  40fd6a:	mov    r9d,r8d
  40fd6d:	lea    r8,[rip+0x2faad]        # 0x43f821
  40fd74:	mov    rbp,rcx
  40fd77:	mov    r12,rdx
  40fd7a:	mov    rcx,rbx
  40fd7d:	mov    edx,0x20
  40fd82:	call   0x4263c0
  40fd87:	cmp    BYTE PTR [rsi],0x0
  40fd8a:	lea    r8,[rip+0x2fa8e]        # 0x43f81f
  40fd91:	lea    rax,[rip+0x2f985]        # 0x43f71d
  40fd98:	cmovne rax,r8
  40fd9c:	test   rdi,rdi
  40fd9f:	je     0x40fe20
  40fda1:	lea    rdx,[rip+0x2fa7e]        # 0x43f826
  40fda8:	mov    QWORD PTR [rsp+0x40],rdi
  40fdad:	mov    QWORD PTR [rsp+0x30],rax
  40fdb2:	lea    rdi,[rip+0x2fa6f]        # 0x43f828
  40fdb9:	lea    rax,[rip+0x2fa81]        # 0x43f841
  40fdc0:	lea    rcx,[rip+0x2fa5d]        # 0x43f824
  40fdc7:	mov    QWORD PTR [rsp+0x48],rdx
  40fdcc:	mov    r9,rbx
  40fdcf:	mov    QWORD PTR [rsp+0x50],0x0
  40fdd8:	mov    QWORD PTR [rsp+0x38],rdi
  40fddd:	mov    QWORD PTR [rsp+0x28],rsi
  40fde2:	mov    rdx,r12
  40fde5:	mov    QWORD PTR [rsp+0x20],rax
  40fdea:	call   0x4184b0
  40fdef:	mov    rbx,rax
  40fdf2:	lea    r8,[rip+0x2fa68]        # 0x43f861
  40fdf9:	mov    r9,rbx
  40fdfc:	mov    edx,0x10
  40fe01:	mov    rcx,rbp
  40fe04:	call   0x40fae0
  40fe09:	mov    rcx,rbx
  40fe0c:	call   0x40e6e0
  40fe11:	nop
  40fe12:	sub    rsp,0xffffffffffffff80
  40fe16:	pop    rbx
  40fe17:	pop    rsi
  40fe18:	pop    rdi
  40fe19:	pop    rbp
  40fe1a:	pop    r12
  40fe1c:	ret    
  40fe1d:	nop    DWORD PTR [rax]
  40fe20:	lea    rdi,[rip+0x2fa1d]        # 0x43f844
  40fe27:	mov    QWORD PTR [rsp+0x30],rax
  40fe2c:	lea    rax,[rip+0x2fa0e]        # 0x43f841
  40fe33:	lea    rcx,[rip+0x2f9ea]        # 0x43f824
  40fe3a:	mov    r9,rbx
  40fe3d:	mov    QWORD PTR [rsp+0x48],0x0
  40fe46:	mov    QWORD PTR [rsp+0x40],rdi
  40fe4b:	lea    rdi,[rip+0x2fa0d]        # 0x43f85f
  40fe52:	mov    QWORD PTR [rsp+0x28],rsi
  40fe57:	mov    QWORD PTR [rsp+0x20],rax
  40fe5c:	mov    rdx,r12
  40fe5f:	mov    QWORD PTR [rsp+0x38],rdi
  40fe64:	call   0x4184b0
  40fe69:	mov    rbx,rax
  40fe6c:	jmp    0x40fdf2
  40fe6e:	xchg   ax,ax
  40fe70:	sub    rsp,0x48
  40fe74:	mov    rax,QWORD PTR [rsp+0x70]
  40fe79:	mov    DWORD PTR [rsp+0x20],r8d
  40fe7e:	lea    r8,[rip+0x2f9e3]        # 0x43f868
  40fe85:	mov    QWORD PTR [rsp+0x28],r9
  40fe8a:	mov    r9,rdx
  40fe8d:	mov    edx,0x4
  40fe92:	test   rax,rax
  40fe95:	mov    QWORD PTR [rsp+0x30],rax
  40fe9a:	lea    rax,[rip+0x2f9f7]        # 0x43f898
  40fea1:	cmove  r8,rax
  40fea5:	call   0x40fae0
  40feaa:	call   0x4388c0
  40feaf:	nop
  40feb0:	push   rsi
  40feb1:	push   rbx
  40feb2:	sub    rsp,0x28
  40feb6:	mov    rsi,rcx
  40feb9:	lea    rcx,[rip+0x74358]        # 0x484218
  40fec0:	call   0x426d40
  40fec5:	mov    rbx,QWORD PTR [rip+0x7433c]        # 0x484208
  40fecc:	lea    rcx,[rip+0x74345]        # 0x484218
  40fed3:	mov    QWORD PTR [rip+0x7432e],rsi        # 0x484208
  40feda:	call   0x426d70
  40fedf:	mov    rax,rbx
  40fee2:	add    rsp,0x28
  40fee6:	pop    rbx
  40fee7:	pop    rsi
  40fee8:	ret    
  40fee9:	nop    DWORD PTR [rax+0x0]
  40fef0:	push   rdi
  40fef1:	push   rsi
  40fef2:	push   rbx
  40fef3:	sub    rsp,0x40
  40fef7:	test   rcx,rcx
  40fefa:	mov    QWORD PTR [rsp+0x68],rdx
  40feff:	mov    QWORD PTR [rsp+0x70],r8
  40ff04:	mov    QWORD PTR [rsp+0x78],r9
  40ff09:	je     0x40ff60
  40ff0b:	lea    rdx,[rsp+0x68]
  40ff10:	mov    QWORD PTR [rsp+0x30],rdx
  40ff15:	call   0x418440
  40ff1a:	lea    rcx,[rip+0x742f7]        # 0x484218
  40ff21:	mov    rbx,rax
  40ff24:	call   0x426d40
  40ff29:	mov    rsi,QWORD PTR [rip+0x742d8]        # 0x484208
  40ff30:	lea    rcx,[rip+0x742e1]        # 0x484218
  40ff37:	call   0x426d70
  40ff3c:	test   rsi,rsi
  40ff3f:	je     0x40ff94
  40ff41:	mov    rcx,rbx
  40ff44:	call   rsi
  40ff46:	mov    rcx,rbx
  40ff49:	call   0x40e6e0
  40ff4e:	nop
  40ff4f:	add    rsp,0x40
  40ff53:	pop    rbx
  40ff54:	pop    rsi
  40ff55:	pop    rdi
  40ff56:	ret    
  40ff57:	nop    WORD PTR [rax+rax*1+0x0]
  40ff60:	lea    rax,[rip+0x2f95e]        # 0x43f8c5
  40ff67:	lea    r9,[rip+0x2f971]        # 0x43f8df
  40ff6e:	lea    r8,[rip+0x2f7a9]        # 0x43f71e
  40ff75:	lea    rcx,[rip+0x2f7bc]        # 0x43f738
  40ff7c:	mov    edx,0x8
  40ff81:	mov    QWORD PTR [rsp+0x20],rax
  40ff86:	call   0x40fae0
  40ff8b:	nop
  40ff8c:	add    rsp,0x40
  40ff90:	pop    rbx
  40ff91:	pop    rsi
  40ff92:	pop    rdi
  40ff93:	ret    
  40ff94:	lea    rcx,[rsp+0x38]
  40ff99:	call   0x42aba0
  40ff9e:	test   eax,eax
  40ffa0:	je     0x40ffc4
  40ffa2:	mov    rsi,QWORD PTR [rip+0x768df]        # 0x486888
  40ffa9:	call   rsi
  40ffab:	lea    rdx,[rax+0x30]
  40ffaf:	mov    rcx,rbx
  40ffb2:	call   0x438860
  40ffb7:	call   rsi
  40ffb9:	lea    rcx,[rax+0x30]
  40ffbd:	call   0x438880
  40ffc2:	jmp    0x40ff46
  40ffc4:	mov    rdx,QWORD PTR [rsp+0x38]
  40ffc9:	mov    rcx,rbx
  40ffcc:	call   0x40f0e0
  40ffd1:	mov    rsi,QWORD PTR [rip+0x768b0]        # 0x486888
  40ffd8:	mov    rdi,rax
  40ffdb:	call   rsi
  40ffdd:	lea    rdx,[rax+0x30]
  40ffe1:	mov    rcx,rdi
  40ffe4:	call   0x438860
  40ffe9:	mov    rcx,rdi
  40ffec:	call   0x40e6e0
  40fff1:	jmp    0x40ffb7
  40fff3:	nop    DWORD PTR [rax]
  40fff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410000:	push   rsi
  410001:	push   rbx
  410002:	sub    rsp,0x28
  410006:	mov    rsi,rcx
  410009:	lea    rcx,[rip+0x74208]        # 0x484218
  410010:	call   0x426d40
  410015:	mov    rbx,QWORD PTR [rip+0x741e4]        # 0x484200
  41001c:	lea    rcx,[rip+0x741f5]        # 0x484218
  410023:	mov    QWORD PTR [rip+0x741d6],rsi        # 0x484200
  41002a:	call   0x426d70
  41002f:	mov    rax,rbx
  410032:	add    rsp,0x28
  410036:	pop    rbx
  410037:	pop    rsi
  410038:	ret    
  410039:	nop    DWORD PTR [rax+0x0]
  410040:	push   rdi
  410041:	push   rsi
  410042:	push   rbx
  410043:	sub    rsp,0x40
  410047:	test   rcx,rcx
  41004a:	mov    QWORD PTR [rsp+0x68],rdx
  41004f:	mov    QWORD PTR [rsp+0x70],r8
  410054:	mov    QWORD PTR [rsp+0x78],r9
  410059:	je     0x4100b0
  41005b:	lea    rdx,[rsp+0x68]
  410060:	mov    QWORD PTR [rsp+0x30],rdx
  410065:	call   0x418440
  41006a:	lea    rcx,[rip+0x741a7]        # 0x484218
  410071:	mov    rbx,rax
  410074:	call   0x426d40
  410079:	mov    rsi,QWORD PTR [rip+0x74180]        # 0x484200
  410080:	lea    rcx,[rip+0x74191]        # 0x484218
  410087:	call   0x426d70
  41008c:	test   rsi,rsi
  41008f:	je     0x4100e4
  410091:	mov    rcx,rbx
  410094:	call   rsi
  410096:	mov    rcx,rbx
  410099:	call   0x40e6e0
  41009e:	nop
  41009f:	add    rsp,0x40
  4100a3:	pop    rbx
  4100a4:	pop    rsi
  4100a5:	pop    rdi
  4100a6:	ret    
  4100a7:	nop    WORD PTR [rax+rax*1+0x0]
  4100b0:	lea    rax,[rip+0x2f80e]        # 0x43f8c5
  4100b7:	lea    r9,[rip+0x2f816]        # 0x43f8d4
  4100be:	lea    r8,[rip+0x2f659]        # 0x43f71e
  4100c5:	lea    rcx,[rip+0x2f66c]        # 0x43f738
  4100cc:	mov    edx,0x8
  4100d1:	mov    QWORD PTR [rsp+0x20],rax
  4100d6:	call   0x40fae0
  4100db:	nop
  4100dc:	add    rsp,0x40
  4100e0:	pop    rbx
  4100e1:	pop    rsi
  4100e2:	pop    rdi
  4100e3:	ret    
  4100e4:	lea    rcx,[rsp+0x38]
  4100e9:	call   0x42aba0
  4100ee:	test   eax,eax
  4100f0:	je     0x410114
  4100f2:	mov    rsi,QWORD PTR [rip+0x7678f]        # 0x486888
  4100f9:	call   rsi
  4100fb:	lea    rdx,[rax+0x60]
  4100ff:	mov    rcx,rbx
  410102:	call   0x438860
  410107:	call   rsi
  410109:	lea    rcx,[rax+0x60]
  41010d:	call   0x438880
  410112:	jmp    0x410096
  410114:	mov    rdx,QWORD PTR [rsp+0x38]
  410119:	mov    rcx,rbx
  41011c:	call   0x40f0e0
  410121:	mov    rsi,QWORD PTR [rip+0x76760]        # 0x486888
  410128:	mov    rdi,rax
  41012b:	call   rsi
  41012d:	lea    rdx,[rax+0x60]
  410131:	mov    rcx,rdi
  410134:	call   0x438860
  410139:	mov    rcx,rdi
  41013c:	call   0x40e6e0
  410141:	jmp    0x410107
  410143:	nop    DWORD PTR [rax]
  410146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410150:	sub    rsp,0x38
  410154:	mov    r8,rcx
  410157:	lea    rcx,[rsp+0x2f]
  41015c:	mov    r9,rdx
  41015f:	mov    edx,0x1
  410164:	call   0x427d50
  410169:	add    eax,0x1
  41016c:	cdqe   
  41016e:	add    rsp,0x38
  410172:	ret    
  410173:	nop
  410174:	nop
  410175:	nop
  410176:	nop
  410177:	nop
  410178:	nop
  410179:	nop
  41017a:	nop
  41017b:	nop
  41017c:	nop
  41017d:	nop
  41017e:	nop
  41017f:	nop
  410180:	mov    rax,rcx
  410183:	mov    rcx,rdx
  410186:	mov    rdx,rax
  410189:	jmp    0x430b30
  41018e:	xchg   ax,ax
  410190:	cmp    rdx,rcx
  410193:	sete   r9b
  410197:	cmp    r8d,0x1
  41019b:	sbb    ecx,ecx
  41019d:	and    ecx,0x2
  4101a0:	add    ecx,0x1
  4101a3:	test   rdx,rdx
  4101a6:	je     0x4101ea
  4101a8:	mov    r11d,DWORD PTR [rdx+0x48]
  4101ac:	test   r11d,r11d
  4101af:	jle    0x4101ea
  4101b1:	mov    r10,QWORD PTR [rdx+0x40]
  4101b5:	lea    edx,[r11-0x1]
  4101b9:	test   r8d,r8d
  4101bc:	setne  r8b
  4101c0:	lea    rdx,[rdx+rdx*2]
  4101c4:	lea    rax,[r10+0xc]
  4101c8:	shl    rdx,0x4
  4101cc:	lea    r10,[r10+rdx*1+0x3c]
  4101d1:	cmp    r9b,r8b
  4101d4:	mov    edx,DWORD PTR [rax]
  4101d6:	jae    0x4101dd
  4101d8:	test   dl,0x2
  4101db:	je     0x4101e1
  4101dd:	test   edx,ecx
  4101df:	je     0x4101f0
  4101e1:	add    rax,0x30
  4101e5:	cmp    rax,r10
  4101e8:	jne    0x4101d1
  4101ea:	xor    eax,eax
  4101ec:	ret    
  4101ed:	nop    DWORD PTR [rax]
  4101f0:	mov    eax,0x1
  4101f5:	ret    
  4101f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410200:	test   rdx,rdx
  410203:	je     0x410233
  410205:	movsxd r8,DWORD PTR [rdx+0x48]
  410209:	test   r8,r8
  41020c:	je     0x410233
  41020e:	mov    rax,QWORD PTR [rdx+0x40]
  410212:	cmp    BYTE PTR [rax+0x8],0x68
  410216:	je     0x410280
  410218:	add    rax,0x38
  41021c:	xor    edx,edx
  41021e:	jmp    0x41022a
  410220:	add    rax,0x30
  410224:	cmp    BYTE PTR [rax-0x30],0x68
  410228:	je     0x410280
  41022a:	add    rdx,0x1
  41022e:	cmp    rdx,r8
  410231:	jne    0x410220
  410233:	test   rcx,rcx
  410236:	je     0x410286
  410238:	mov    rax,QWORD PTR [rcx]
  41023b:	movsxd r8,DWORD PTR [rax+0x48]
  41023f:	test   r8,r8
  410242:	je     0x410273
  410244:	mov    rax,QWORD PTR [rax+0x40]
  410248:	cmp    BYTE PTR [rax+0x8],0x68
  41024c:	je     0x410280
  41024e:	add    rax,0x38
  410252:	xor    edx,edx
  410254:	jmp    0x41026a
  410256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410260:	add    rax,0x30
  410264:	cmp    BYTE PTR [rax-0x30],0x68
  410268:	je     0x410280
  41026a:	add    rdx,0x1
  41026e:	cmp    r8,rdx
  410271:	jne    0x410260
  410273:	mov    rcx,QWORD PTR [rcx+0x8]
  410277:	jmp    0x410233
  410279:	nop    DWORD PTR [rax+0x0]
  410280:	mov    eax,0x1
  410285:	ret    
  410286:	xor    eax,eax
  410288:	ret    
  410289:	nop    DWORD PTR [rax+0x0]
  410290:	push   rbx
  410291:	sub    rsp,0x20
  410295:	test   rcx,rcx
  410298:	je     0x4102f0
  41029a:	mov    rbx,rcx
  41029d:	mov    rcx,QWORD PTR [rcx]
  4102a0:	call   0x40e6e0
  4102a5:	mov    rcx,QWORD PTR [rbx+0x8]
  4102a9:	call   0x40e6e0
  4102ae:	mov    rcx,QWORD PTR [rbx+0x10]
  4102b2:	call   0x40e6e0
  4102b7:	mov    rcx,QWORD PTR [rbx+0x40]
  4102bb:	call   0x40e6e0
  4102c0:	mov    rax,QWORD PTR [rbx+0x18]
  4102c4:	test   rax,rax
  4102c7:	je     0x4102cf
  4102c9:	mov    rcx,QWORD PTR [rbx+0x20]
  4102cd:	call   rax
  4102cf:	mov    rax,QWORD PTR [rbx+0x30]
  4102d3:	test   rax,rax
  4102d6:	je     0x4102de
  4102d8:	mov    rcx,QWORD PTR [rbx+0x38]
  4102dc:	call   rax
  4102de:	mov    rcx,rbx
  4102e1:	add    rsp,0x20
  4102e5:	pop    rbx
  4102e6:	jmp    0x40e6e0
  4102eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4102f0:	lea    r8,[rip+0x2f649]        # 0x43f940
  4102f7:	lea    rdx,[rip+0x2fed2]        # 0x4401d0
  4102fe:	lea    rcx,[rip+0x2f649]        # 0x43f94e
  410305:	add    rsp,0x20
  410309:	pop    rbx
  41030a:	jmp    0x40fd20
  41030f:	nop
  410310:	push   rbp
  410311:	push   rdi
  410312:	push   rsi
  410313:	push   rbx
  410314:	sub    rsp,0x28
  410318:	mov    rsi,QWORD PTR [rcx]
  41031b:	mov    rbp,rcx
  41031e:	mov    edi,edx
  410320:	test   rsi,rsi
  410323:	jne    0x410363
  410325:	jmp    0x41039a
  410327:	nop    WORD PTR [rax+rax*1+0x0]
  410330:	mov    rax,QWORD PTR [rax]
  410333:	mov    BYTE PTR [rax],0x2d
  410336:	mov    rax,QWORD PTR [rbx]
  410339:	mov    rdx,QWORD PTR [rbx+0x8]
  41033d:	mov    rax,QWORD PTR [rax]
  410340:	lea    rcx,[rax+0x1]
  410344:	call   0x438798
  410349:	mov    rcx,QWORD PTR [rbx+0x8]
  41034d:	call   0x40e6e0
  410352:	mov    rcx,rbx
  410355:	call   0x40e6e0
  41035a:	mov    rsi,QWORD PTR [rsi+0x8]
  41035e:	test   rsi,rsi
  410361:	je     0x410380
  410363:	test   edi,edi
  410365:	mov    rbx,QWORD PTR [rsi]
  410368:	je     0x410349
  41036a:	cmp    QWORD PTR [rbx+0x8],0x0
  41036f:	mov    rax,QWORD PTR [rbx]
  410372:	jne    0x410330
  410374:	mov    QWORD PTR [rax],0x0
  41037b:	jmp    0x410349
  41037d:	nop    DWORD PTR [rax]
  410380:	mov    rcx,QWORD PTR [rbp+0x0]
  410384:	call   0x409a70
  410389:	mov    QWORD PTR [rbp+0x0],0x0
  410391:	add    rsp,0x28
  410395:	pop    rbx
  410396:	pop    rsi
  410397:	pop    rdi
  410398:	pop    rbp
  410399:	ret    
  41039a:	xor    ecx,ecx
  41039c:	jmp    0x410384
  41039e:	xchg   ax,ax
  4103a0:	push   rbp
  4103a1:	push   rdi
  4103a2:	push   rsi
  4103a3:	push   rbx
  4103a4:	sub    rsp,0x28
  4103a8:	test   rcx,rcx
  4103ab:	mov    rbx,rcx
  4103ae:	je     0x410410
  4103b0:	cmp    BYTE PTR [rcx],0x0
  4103b3:	je     0x4103fe
  4103b5:	mov    rax,QWORD PTR [rip+0x6b834]        # 0x47bbf0
  4103bc:	xor    edi,edi
  4103be:	mov    rbp,QWORD PTR [rax]
  4103c1:	jmp    0x4103d8
  4103c3:	xor    edx,edx
  4103c5:	movzx  eax,BYTE PTR [rbx]
  4103c8:	add    edi,edx
  4103ca:	movsx  rax,BYTE PTR [rbp+rax*1+0x0]
  4103d0:	add    rbx,rax
  4103d3:	cmp    BYTE PTR [rbx],0x0
  4103d6:	je     0x410400
  4103d8:	mov    rcx,rbx
  4103db:	call   0x4219f0
  4103e0:	mov    ecx,eax
  4103e2:	mov    esi,eax
  4103e4:	call   0x4202d0
  4103e9:	test   eax,eax
  4103eb:	jne    0x4103c3
  4103ed:	mov    ecx,esi
  4103ef:	call   0x420390
  4103f4:	cmp    eax,0x1
  4103f7:	sbb    edx,edx
  4103f9:	add    edx,0x2
  4103fc:	jmp    0x4103c5
  4103fe:	xor    edi,edi
  410400:	mov    eax,edi
  410402:	add    rsp,0x28
  410406:	pop    rbx
  410407:	pop    rsi
  410408:	pop    rdi
  410409:	pop    rbp
  41040a:	ret    
  41040b:	nop    DWORD PTR [rax+rax*1+0x0]
  410410:	lea    r8,[rip+0x2f53c]        # 0x43f953
  410417:	lea    rdx,[rip+0x2fdf2]        # 0x440210
  41041e:	lea    rcx,[rip+0x2f529]        # 0x43f94e
  410425:	call   0x40fd20
  41042a:	xor    eax,eax
  41042c:	add    rsp,0x28
  410430:	pop    rbx
  410431:	pop    rsi
  410432:	pop    rdi
  410433:	pop    rbp
  410434:	ret    
  410435:	nop
  410436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410440:	push   r13
  410442:	push   r12
  410444:	push   rbp
  410445:	push   rdi
  410446:	push   rsi
  410447:	push   rbx
  410448:	sub    rsp,0x28
  41044c:	mov    eax,DWORD PTR [rcx+0x48]
  41044f:	test   eax,eax
  410451:	jle    0x4104f8
  410457:	mov    rbp,rcx
  41045a:	xor    esi,esi
  41045c:	xor    r13d,r13d
  41045f:	xor    ebx,ebx
  410461:	jmp    0x41046f
  410463:	add    ebx,0x1
  410466:	add    rsi,0x30
  41046a:	cmp    DWORD PTR [rbp+0x48],ebx
  41046d:	jle    0x4104d6
  41046f:	mov    rdi,rsi
  410472:	add    rdi,QWORD PTR [rbp+0x40]
  410476:	test   BYTE PTR [rdi+0xc],0x1
  41047a:	jne    0x410463
  41047c:	mov    rcx,QWORD PTR [rdi]
  41047f:	call   0x4103a0
  410484:	cmp    BYTE PTR [rdi+0x8],0x0
  410488:	mov    r12d,eax
  41048b:	lea    eax,[rax+0x4]
  41048e:	cmovne r12d,eax
  410492:	mov    eax,DWORD PTR [rdi+0x10]
  410495:	test   eax,eax
  410497:	je     0x4104c3
  410499:	cmp    eax,0x3
  41049c:	je     0x4104f0
  41049e:	mov    rcx,QWORD PTR [rdi+0x28]
  4104a2:	test   rcx,rcx
  4104a5:	je     0x4104c3
  4104a7:	mov    rax,QWORD PTR [rbp+0x28]
  4104ab:	test   rax,rax
  4104ae:	je     0x4104b9
  4104b0:	mov    rdx,QWORD PTR [rbp+0x38]
  4104b4:	call   rax
  4104b6:	mov    rcx,rax
  4104b9:	call   0x4103a0
  4104be:	lea    r12d,[r12+rax*1+0x1]
  4104c3:	cmp    r13d,r12d
  4104c6:	cmovl  r13d,r12d
  4104ca:	add    ebx,0x1
  4104cd:	add    rsi,0x30
  4104d1:	cmp    DWORD PTR [rbp+0x48],ebx
  4104d4:	jg     0x41046f
  4104d6:	mov    eax,r13d
  4104d9:	add    rsp,0x28
  4104dd:	pop    rbx
  4104de:	pop    rsi
  4104df:	pop    rdi
  4104e0:	pop    rbp
  4104e1:	pop    r12
  4104e3:	pop    r13
  4104e5:	ret    
  4104e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104f0:	test   BYTE PTR [rdi+0xc],0x8
  4104f4:	jne    0x4104c3
  4104f6:	jmp    0x41049e
  4104f8:	xor    r13d,r13d
  4104fb:	jmp    0x4104d6
  4104fd:	nop    DWORD PTR [rax]
  410500:	push   r13
  410502:	push   r12
  410504:	push   rbp
  410505:	push   rdi
  410506:	push   rsi
  410507:	push   rbx
  410508:	sub    rsp,0x38
  41050c:	test   BYTE PTR [r9+0xc],0x1
  410511:	mov    rbp,QWORD PTR [rsp+0x90]
  410519:	jne    0x410523
  41051b:	mov    rax,QWORD PTR [r9]
  41051e:	cmp    BYTE PTR [rax],0x0
  410521:	jne    0x410530
  410523:	add    rsp,0x38
  410527:	pop    rbx
  410528:	pop    rsi
  410529:	pop    rdi
  41052a:	pop    rbp
  41052b:	pop    r12
  41052d:	pop    r13
  41052f:	ret    
  410530:	mov    rbx,r9
  410533:	mov    r13,rcx
  410536:	xor    ecx,ecx
  410538:	mov    esi,r8d
  41053b:	mov    r12,rdx
  41053e:	call   0x41ae90
  410543:	movsx  r8d,BYTE PTR [rbx+0x8]
  410548:	mov    rdi,rax
  41054b:	test   r8b,r8b
  41054e:	jne    0x410610
  410554:	mov    r8,QWORD PTR [rbx]
  410557:	lea    rdx,[rip+0x2f40c]        # 0x43f96a
  41055e:	mov    rcx,rax
  410561:	call   0x41bd30
  410566:	mov    r8,QWORD PTR [rbx+0x28]
  41056a:	test   r8,r8
  41056d:	je     0x410593
  41056f:	mov    rax,QWORD PTR [r13+0x0]
  410573:	test   rax,rax
  410576:	je     0x410584
  410578:	mov    rcx,r8
  41057b:	mov    rdx,QWORD PTR [r12]
  41057f:	call   rax
  410581:	mov    r8,rax
  410584:	lea    rdx,[rip+0x2f3e6]        # 0x43f971
  41058b:	mov    rcx,rdi
  41058e:	call   0x41bd30
  410593:	mov    rax,QWORD PTR [rbx+0x20]
  410597:	lea    rbx,[rip+0x2f3bf]        # 0x43f95d
  41059e:	test   rax,rax
  4105a1:	je     0x4105bc
  4105a3:	mov    r8,QWORD PTR [r13+0x0]
  4105a7:	mov    rbx,rax
  4105aa:	test   r8,r8
  4105ad:	je     0x4105bc
  4105af:	mov    rdx,QWORD PTR [r12]
  4105b3:	mov    rcx,rax
  4105b6:	call   r8
  4105b9:	mov    rbx,rax
  4105bc:	mov    rcx,QWORD PTR [rdi]
  4105bf:	call   0x4103a0
  4105c4:	lea    r9d,[rsi+0x4]
  4105c8:	lea    rsi,[rip+0x2f38e]        # 0x43f95d
  4105cf:	mov    QWORD PTR [rsp+0x28],rbx
  4105d4:	lea    rdx,[rip+0x2f39a]        # 0x43f975
  4105db:	mov    rcx,rbp
  4105de:	mov    QWORD PTR [rsp+0x20],rsi
  4105e3:	mov    r8,QWORD PTR [rdi]
  4105e6:	sub    r9d,eax
  4105e9:	call   0x41bd30
  4105ee:	mov    edx,0x1
  4105f3:	mov    rcx,rdi
  4105f6:	add    rsp,0x38
  4105fa:	pop    rbx
  4105fb:	pop    rsi
  4105fc:	pop    rdi
  4105fd:	pop    rbp
  4105fe:	pop    r12
  410600:	pop    r13
  410602:	jmp    0x41a8e0
  410607:	nop    WORD PTR [rax+rax*1+0x0]
  410610:	mov    r9,QWORD PTR [rbx]
  410613:	lea    rdx,[rip+0x2f344]        # 0x43f95e
  41061a:	mov    rcx,rax
  41061d:	call   0x41bd30
  410622:	jmp    0x410566
  410627:	nop    WORD PTR [rax+rax*1+0x0]
  410630:	push   rbp
  410631:	push   rdi
  410632:	push   rsi
  410633:	push   rbx
  410634:	sub    rsp,0x28
  410638:	mov    r9,QWORD PTR [rcx]
  41063b:	test   r9,r9
  41063e:	jne    0x41064b
  410640:	jmp    0x410660
  410642:	mov    r9,QWORD PTR [r9+0x8]
  410646:	test   r9,r9
  410649:	je     0x410660
  41064b:	mov    rbx,QWORD PTR [r9]
  41064e:	cmp    QWORD PTR [rbx+0x8],r8
  410652:	jne    0x410642
  410654:	mov    rax,rbx
  410657:	add    rsp,0x28
  41065b:	pop    rbx
  41065c:	pop    rsi
  41065d:	pop    rdi
  41065e:	pop    rbp
  41065f:	ret    
  410660:	mov    rdi,rcx
  410663:	mov    ecx,0x28
  410668:	mov    rsi,r8
  41066b:	mov    ebp,edx
  41066d:	call   0x40e610
  410672:	mov    rcx,QWORD PTR [rdi]
  410675:	mov    rbx,rax
  410678:	mov    DWORD PTR [rax],ebp
  41067a:	mov    QWORD PTR [rax+0x8],rsi
  41067e:	mov    rdx,rax
  410681:	call   0x409b50
  410686:	mov    QWORD PTR [rdi],rax
  410689:	mov    rax,rbx
  41068c:	add    rsp,0x28
  410690:	pop    rbx
  410691:	pop    rsi
  410692:	pop    rdi
  410693:	pop    rbp
  410694:	ret    
  410695:	nop
  410696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106a0:	push   rdi
  4106a1:	push   rsi
  4106a2:	push   rbx
  4106a3:	sub    rsp,0x20
  4106a7:	mov    rbx,rcx
  4106aa:	mov    ecx,0x10
  4106af:	mov    rdi,rdx
  4106b2:	mov    rsi,r8
  4106b5:	call   0x40e610
  4106ba:	mov    rcx,QWORD PTR [rbx]
  4106bd:	mov    QWORD PTR [rax],rdi
  4106c0:	mov    rdx,rax
  4106c3:	mov    QWORD PTR [rax+0x8],rsi
  4106c7:	call   0x409b50
  4106cc:	mov    QWORD PTR [rbx],rax
  4106cf:	add    rsp,0x20
  4106d3:	pop    rbx
  4106d4:	pop    rsi
  4106d5:	pop    rdi
  4106d6:	ret    
  4106d7:	nop    WORD PTR [rax+rax*1+0x0]
  4106e0:	push   r12
  4106e2:	push   rbp
  4106e3:	push   rdi
  4106e4:	push   rsi
  4106e5:	push   rbx
  4106e6:	sub    rsp,0x50
  4106ea:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4106ef:	test   r9,r9
  4106f2:	mov    rdi,rcx
  4106f5:	mov    rbp,rdx
  4106f8:	mov    rbx,r8
  4106fb:	mov    rsi,r9
  4106fe:	je     0x410a50
  410704:	cmp    DWORD PTR [r8+0x10],0x8
  410709:	ja     0x410ac0
  41070f:	mov    ecx,DWORD PTR [r8+0x10]
  410713:	lea    rax,[rip+0x2f3c6]        # 0x43fae0
  41071a:	movsxd rcx,DWORD PTR [rax+rcx*4]
  41071e:	add    rax,rcx
  410721:	jmp    rax
  410723:	mov    rax,QWORD PTR [rsp+0xa8]
  41072b:	xor    r9d,r9d
  41072e:	xor    r8d,r8d
  410731:	mov    rdx,0xffffffffffffffff
  410738:	mov    rcx,rsi
  41073b:	mov    QWORD PTR [rsp+0x20],rax
  410740:	call   0x42e090
  410745:	test   rax,rax
  410748:	mov    rbp,rax
  41074b:	je     0x41083f
  410751:	mov    r8,QWORD PTR [rbx+0x18]
  410755:	lea    rcx,[rdi+0x48]
  410759:	mov    edx,0x5
  41075e:	call   0x410630
  410763:	mov    edx,DWORD PTR [rax+0x18]
  410766:	mov    rsi,rax
  410769:	test   edx,edx
  41076b:	je     0x410bc2
  410771:	mov    rcx,QWORD PTR [rax+0x20]
  410775:	add    edx,0x2
  410778:	mov    r8d,0x8
  41077e:	movsxd rdx,edx
  410781:	call   0x40e860
  410786:	mov    QWORD PTR [rsi+0x20],rax
  41078a:	mov    rdx,rax
  41078d:	movsxd rax,DWORD PTR [rsi+0x18]
  410791:	mov    QWORD PTR [rdx+rax*8],rbp
  410795:	movsxd rdx,DWORD PTR [rsi+0x18]
  410799:	mov    rax,QWORD PTR [rsi+0x20]
  41079d:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  4107a6:	add    DWORD PTR [rsi+0x18],0x1
  4107aa:	mov    rax,QWORD PTR [rbx+0x18]
  4107ae:	mov    rdx,QWORD PTR [rsi+0x20]
  4107b2:	mov    QWORD PTR [rax],rdx
  4107b5:	mov    eax,0x1
  4107ba:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4107bf:	add    rsp,0x50
  4107c3:	pop    rbx
  4107c4:	pop    rsi
  4107c5:	pop    rdi
  4107c6:	pop    rbp
  4107c7:	pop    r12
  4107c9:	ret    
  4107ca:	nop    WORD PTR [rax+rax*1+0x0]
  4107d0:	mov    rbp,QWORD PTR [rip+0x76109]        # 0x4868e0
  4107d7:	call   rbp
  4107d9:	lea    rdx,[rsp+0x38]
  4107de:	xor    r8d,r8d
  4107e1:	mov    DWORD PTR [rax],0x0
  4107e7:	mov    rcx,rsi
  4107ea:	call   0x418c80
  4107ef:	cmp    BYTE PTR [rsi],0x0
  4107f2:	mov    r12,rax
  4107f5:	je     0x410805
  4107f7:	mov    rdx,QWORD PTR [rsp+0x38]
  4107fc:	cmp    BYTE PTR [rdx],0x0
  4107ff:	je     0x410b70
  410805:	lea    rcx,[rip+0x2f173]        # 0x43f97f
  41080c:	call   0x42fc00
  410811:	mov    rdi,QWORD PTR [rsp+0xa0]
  410819:	mov    rcx,QWORD PTR [rsp+0xa8]
  410821:	lea    r9,[rip+0x2f178]        # 0x43f9a0
  410828:	mov    QWORD PTR [rsp+0x20],rsi
  41082d:	mov    r8d,0x1
  410833:	mov    edx,eax
  410835:	mov    QWORD PTR [rsp+0x28],rdi
  41083a:	call   0x430630
  41083f:	xor    eax,eax
  410841:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  410846:	add    rsp,0x50
  41084a:	pop    rbx
  41084b:	pop    rsi
  41084c:	pop    rdi
  41084d:	pop    rbp
  41084e:	pop    r12
  410850:	ret    
  410851:	mov    rax,QWORD PTR [rsp+0xa8]
  410859:	xor    r9d,r9d
  41085c:	xor    r8d,r8d
  41085f:	mov    rcx,rsi
  410862:	mov    rdx,0xffffffffffffffff
  410869:	mov    QWORD PTR [rsp+0x20],rax
  41086e:	call   0x42e090
  410873:	test   rax,rax
  410876:	mov    rsi,rax
  410879:	je     0x41083f
  41087b:	mov    r8,QWORD PTR [rbx+0x18]
  41087f:	lea    rcx,[rdi+0x48]
  410883:	mov    edx,0x1
  410888:	call   0x410630
  41088d:	mov    rcx,QWORD PTR [rax+0x18]
  410891:	mov    rdi,rax
  410894:	call   0x40e6e0
  410899:	mov    rax,QWORD PTR [rbx+0x18]
  41089d:	mov    rax,QWORD PTR [rax]
  4108a0:	mov    QWORD PTR [rdi+0x18],rsi
  4108a4:	mov    QWORD PTR [rdi+0x10],rax
  4108a8:	mov    rax,QWORD PTR [rbx+0x18]
  4108ac:	mov    QWORD PTR [rax],rsi
  4108af:	mov    eax,0x1
  4108b4:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4108b9:	add    rsp,0x50
  4108bd:	pop    rbx
  4108be:	pop    rsi
  4108bf:	pop    rdi
  4108c0:	pop    rbp
  4108c1:	pop    r12
  4108c3:	ret    
  4108c4:	mov    rax,QWORD PTR [rsp+0xa8]
  4108cc:	xor    r9d,r9d
  4108cf:	xor    r8d,r8d
  4108d2:	mov    rcx,rsi
  4108d5:	mov    rdx,0xffffffffffffffff
  4108dc:	mov    QWORD PTR [rsp+0x20],rax
  4108e1:	call   0x42e090
  4108e6:	test   rax,rax
  4108e9:	mov    rsi,rax
  4108ec:	je     0x41083f
  4108f2:	lea    rcx,[rdi+0x48]
  4108f6:	mov    r8,QWORD PTR [rbx+0x18]
  4108fa:	mov    edx,0x4
  4108ff:	jmp    0x410888
  410901:	mov    rbp,QWORD PTR [rip+0x75fd8]        # 0x4868e0
  410908:	call   rbp
  41090a:	lea    rdx,[rsp+0x38]
  41090f:	mov    DWORD PTR [rax],0x0
  410915:	mov    rcx,rsi
  410918:	call   0x418950
  41091d:	cmp    BYTE PTR [rsi],0x0
  410920:	movapd xmm6,xmm0
  410924:	je     0x410934
  410926:	mov    rax,QWORD PTR [rsp+0x38]
  41092b:	cmp    BYTE PTR [rax],0x0
  41092e:	je     0x410b30
  410934:	lea    rcx,[rip+0x2f044]        # 0x43f97f
  41093b:	call   0x42fc00
  410940:	mov    rdi,QWORD PTR [rsp+0xa0]
  410948:	mov    rcx,QWORD PTR [rsp+0xa8]
  410950:	lea    r9,[rip+0x2f0b1]        # 0x43fa08
  410957:	mov    edx,eax
  410959:	mov    QWORD PTR [rsp+0x20],rsi
  41095e:	mov    r8d,0x1
  410964:	mov    QWORD PTR [rsp+0x28],rdi
  410969:	call   0x430630
  41096e:	xor    eax,eax
  410970:	jmp    0x410841
  410975:	mov    rbp,QWORD PTR [rip+0x75f64]        # 0x4868e0
  41097c:	call   rbp
  41097e:	lea    rdx,[rsp+0x38]
  410983:	xor    r8d,r8d
  410986:	mov    DWORD PTR [rax],0x0
  41098c:	mov    rcx,rsi
  41098f:	call   0x438758
  410994:	cmp    BYTE PTR [rsi],0x0
  410997:	mov    r12d,eax
  41099a:	je     0x410805
  4109a0:	mov    rdx,QWORD PTR [rsp+0x38]
  4109a5:	cmp    BYTE PTR [rdx],0x0
  4109a8:	jne    0x410805
  4109ae:	call   rbp
  4109b0:	cmp    DWORD PTR [rax],0x22
  4109b3:	je     0x410be3
  4109b9:	mov    r8,QWORD PTR [rbx+0x18]
  4109bd:	lea    rcx,[rdi+0x48]
  4109c1:	mov    edx,0x2
  4109c6:	call   0x410630
  4109cb:	mov    rdx,QWORD PTR [rbx+0x18]
  4109cf:	mov    edx,DWORD PTR [rdx]
  4109d1:	mov    DWORD PTR [rax+0x10],edx
  4109d4:	mov    rax,QWORD PTR [rbx+0x18]
  4109d8:	mov    DWORD PTR [rax],r12d
  4109db:	mov    eax,0x1
  4109e0:	jmp    0x4107ba
  4109e5:	mov    eax,DWORD PTR [r8+0xc]
  4109e9:	test   al,0x8
  4109eb:	je     0x410af0
  4109f1:	xor    esi,esi
  4109f3:	test   al,0x28
  4109f5:	je     0x41083f
  4109fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410a00:	mov    r9,QWORD PTR [rsp+0xa8]
  410a08:	mov    r8,QWORD PTR [rbp+0x0]
  410a0c:	mov    rdx,rsi
  410a0f:	mov    rcx,QWORD PTR [rsp+0xa0]
  410a17:	call   QWORD PTR [rbx+0x18]
  410a1a:	test   eax,eax
  410a1c:	mov    ebx,eax
  410a1e:	jne    0x410a3d
  410a20:	cmp    QWORD PTR [rsp+0xa8],0x0
  410a29:	je     0x410a3d
  410a2b:	mov    rax,QWORD PTR [rsp+0xa8]
  410a33:	cmp    QWORD PTR [rax],0x0
  410a37:	je     0x410c24
  410a3d:	mov    rcx,rsi
  410a40:	call   0x40e6e0
  410a45:	mov    eax,ebx
  410a47:	jmp    0x4107ba
  410a4c:	nop    DWORD PTR [rax+0x0]
  410a50:	mov    eax,DWORD PTR [r8+0x10]
  410a54:	cmp    eax,0x3
  410a57:	je     0x410ba5
  410a5d:	test   eax,eax
  410a5f:	jne    0x410a90
  410a61:	mov    r8,QWORD PTR [rbx+0x18]
  410a65:	lea    rcx,[rdi+0x48]
  410a69:	xor    edx,edx
  410a6b:	call   0x410630
  410a70:	xor    edx,edx
  410a72:	test   BYTE PTR [rbx+0xc],0x4
  410a76:	mov    rax,QWORD PTR [rbx+0x18]
  410a7a:	sete   dl
  410a7d:	mov    DWORD PTR [rax],edx
  410a7f:	mov    eax,0x1
  410a84:	jmp    0x4107ba
  410a89:	nop    DWORD PTR [rax+0x0]
  410a90:	lea    rax,[rip+0x2f019]        # 0x43fab0
  410a97:	lea    r9,[rip+0x2f766]        # 0x440204
  410a9e:	lea    rdx,[rip+0x2efb3]        # 0x43fa58
  410aa5:	lea    rcx,[rip+0x2eea2]        # 0x43f94e
  410aac:	mov    r8d,0x464
  410ab2:	mov    QWORD PTR [rsp+0x20],rax
  410ab7:	call   0x41e680
  410abc:	nop    DWORD PTR [rax+0x0]
  410ac0:	lea    r9,[rip+0x2f73d]        # 0x440204
  410ac7:	lea    rdx,[rip+0x2ef8a]        # 0x43fa58
  410ace:	lea    rcx,[rip+0x2ee79]        # 0x43f94e
  410ad5:	mov    QWORD PTR [rsp+0x20],0x0
  410ade:	mov    r8d,0x534
  410ae4:	call   0x41e540
  410ae9:	nop    DWORD PTR [rax+0x0]
  410af0:	mov    rax,QWORD PTR [rsp+0xa8]
  410af8:	xor    r9d,r9d
  410afb:	xor    r8d,r8d
  410afe:	mov    rcx,rsi
  410b01:	mov    rdx,0xffffffffffffffff
  410b08:	mov    QWORD PTR [rsp+0x20],rax
  410b0d:	call   0x42e090
  410b12:	test   rax,rax
  410b15:	mov    rsi,rax
  410b18:	jne    0x410a00
  410b1e:	test   BYTE PTR [rbx+0xc],0x28
  410b22:	jne    0x410a00
  410b28:	xor    eax,eax
  410b2a:	jmp    0x410841
  410b2f:	nop
  410b30:	call   rbp
  410b32:	cmp    DWORD PTR [rax],0x22
  410b35:	je     0x410c5e
  410b3b:	mov    r8,QWORD PTR [rbx+0x18]
  410b3f:	lea    rcx,[rdi+0x48]
  410b43:	mov    edx,0x7
  410b48:	call   0x410630
  410b4d:	mov    rdx,QWORD PTR [rbx+0x18]
  410b51:	movsd  xmm0,QWORD PTR [rdx]
  410b55:	movsd  QWORD PTR [rax+0x10],xmm0
  410b5a:	mov    rax,QWORD PTR [rbx+0x18]
  410b5e:	movsd  QWORD PTR [rax],xmm6
  410b62:	mov    eax,0x1
  410b67:	jmp    0x4107ba
  410b6c:	nop    DWORD PTR [rax+0x0]
  410b70:	call   rbp
  410b72:	cmp    DWORD PTR [rax],0x22
  410b75:	je     0x410be3
  410b77:	mov    r8,QWORD PTR [rbx+0x18]
  410b7b:	lea    rcx,[rdi+0x48]
  410b7f:	mov    edx,0x8
  410b84:	call   0x410630
  410b89:	mov    rdx,QWORD PTR [rbx+0x18]
  410b8d:	mov    rdx,QWORD PTR [rdx]
  410b90:	mov    QWORD PTR [rax+0x10],rdx
  410b94:	mov    rax,QWORD PTR [rbx+0x18]
  410b98:	mov    QWORD PTR [rax],r12
  410b9b:	mov    eax,0x1
  410ba0:	jmp    0x4107ba
  410ba5:	mov    eax,DWORD PTR [r8+0xc]
  410ba9:	test   al,0x20
  410bab:	jne    0x410bb5
  410bad:	test   al,0x8
  410baf:	je     0x410a90
  410bb5:	test   al,0x20
  410bb7:	jne    0x4109f1
  410bbd:	jmp    0x4109e9
  410bc2:	mov    rax,QWORD PTR [rbx+0x18]
  410bc6:	mov    ecx,0x10
  410bcb:	mov    rax,QWORD PTR [rax]
  410bce:	mov    QWORD PTR [rsi+0x10],rax
  410bd2:	call   0x40e5c0
  410bd7:	mov    QWORD PTR [rsi+0x20],rax
  410bdb:	mov    rdx,rax
  410bde:	jmp    0x41078d
  410be3:	lea    rcx,[rip+0x2ed95]        # 0x43f97f
  410bea:	call   0x42fc00
  410bef:	mov    rdi,QWORD PTR [rsp+0xa0]
  410bf7:	mov    rcx,QWORD PTR [rsp+0xa8]
  410bff:	lea    r9,[rip+0x2edc2]        # 0x43f9c8
  410c06:	mov    edx,eax
  410c08:	mov    QWORD PTR [rsp+0x20],rsi
  410c0d:	mov    r8d,0x1
  410c13:	mov    QWORD PTR [rsp+0x28],rdi
  410c18:	call   0x430630
  410c1d:	xor    eax,eax
  410c1f:	jmp    0x410841
  410c24:	lea    rcx,[rip+0x2ed54]        # 0x43f97f
  410c2b:	call   0x42fc00
  410c30:	mov    rdi,QWORD PTR [rsp+0xa0]
  410c38:	mov    rcx,QWORD PTR [rsp+0xa8]
  410c40:	lea    r9,[rip+0x2eda8]        # 0x43f9ef
  410c47:	mov    r8d,0x2
  410c4d:	mov    edx,eax
  410c4f:	mov    QWORD PTR [rsp+0x20],rdi
  410c54:	call   0x430630
  410c59:	jmp    0x410a3d
  410c5e:	lea    rcx,[rip+0x2ed1a]        # 0x43f97f
  410c65:	call   0x42fc00
  410c6a:	mov    rdi,QWORD PTR [rsp+0xa0]
  410c72:	mov    rcx,QWORD PTR [rsp+0xa8]
  410c7a:	lea    r9,[rip+0x2edaf]        # 0x43fa30
  410c81:	mov    edx,eax
  410c83:	mov    QWORD PTR [rsp+0x20],rsi
  410c88:	mov    r8d,0x1
  410c8e:	mov    QWORD PTR [rsp+0x28],rdi
  410c93:	call   0x430630
  410c98:	xor    eax,eax
  410c9a:	jmp    0x410841
  410c9f:	nop
  410ca0:	push   r15
  410ca2:	push   r14
  410ca4:	push   r13
  410ca6:	push   r12
  410ca8:	push   rbp
  410ca9:	push   rdi
  410caa:	push   rsi
  410cab:	push   rbx
  410cac:	sub    rsp,0x68
  410cb0:	mov    r10d,DWORD PTR [rdx+0x48]
  410cb4:	test   r10d,r10d
  410cb7:	jle    0x410f24
  410cbd:	mov    rax,QWORD PTR [rsp+0xd8]
  410cc5:	movsxd r12,DWORD PTR [r8]
  410cc8:	cmp    r12d,DWORD PTR [rax]
  410ccb:	jge    0x410f24
  410cd1:	mov    rax,rcx
  410cd4:	mov    r13,r9
  410cd7:	mov    r14,r8
  410cda:	add    rax,0x50
  410cde:	mov    rbp,rdx
  410ce1:	mov    QWORD PTR [rsp+0x50],rcx
  410ce6:	mov    QWORD PTR [rsp+0x38],rax
  410ceb:	lea    rax,[rdx+0x20]
  410cef:	xor    ebx,ebx
  410cf1:	xor    esi,esi
  410cf3:	mov    QWORD PTR [rsp+0x58],rax
  410cf8:	jmp    0x410d69
  410cfa:	nop    WORD PTR [rax+rax*1+0x0]
  410d00:	cmp    edx,0x3
  410d03:	je     0x410f40
  410d09:	mov    rdi,QWORD PTR [rax]
  410d0c:	mov    rcx,rdi
  410d0f:	call   0x438788
  410d14:	movsxd r15,eax
  410d17:	mov    rdx,rdi
  410d1a:	mov    rcx,r13
  410d1d:	mov    r8,r15
  410d20:	call   0x438780
  410d25:	test   eax,eax
  410d27:	mov    r10d,eax
  410d2a:	jne    0x410d45
  410d2c:	lea    r11,[r13+r15*1+0x0]
  410d31:	movzx  eax,BYTE PTR [r11]
  410d35:	test   al,al
  410d37:	je     0x410e25
  410d3d:	cmp    al,0x3d
  410d3f:	je     0x410e25
  410d45:	add    esi,0x1
  410d48:	cmp    DWORD PTR [rbp+0x48],esi
  410d4b:	jle    0x410f24
  410d51:	mov    rax,QWORD PTR [rsp+0xd8]
  410d59:	movsxd r12,DWORD PTR [r14]
  410d5c:	add    rbx,0x30
  410d60:	cmp    r12d,DWORD PTR [rax]
  410d63:	jge    0x410f24
  410d69:	mov    edx,DWORD PTR [rsp+0xd0]
  410d70:	mov    rax,rbx
  410d73:	add    rax,QWORD PTR [rbp+0x40]
  410d77:	test   edx,edx
  410d79:	je     0x410d81
  410d7b:	test   BYTE PTR [rax+0xc],0x40
  410d7f:	jne    0x410d45
  410d81:	mov    edx,DWORD PTR [rax+0x10]
  410d84:	test   edx,edx
  410d86:	jne    0x410d00
  410d8c:	mov    rdi,QWORD PTR [rax]
  410d8f:	mov    rcx,r13
  410d92:	mov    rdx,rdi
  410d95:	call   0x4387a0
  410d9a:	test   eax,eax
  410d9c:	jne    0x410d0c
  410da2:	lea    rcx,[rip+0x2ed5b]        # 0x43fb04
  410da9:	mov    rdx,rdi
  410dac:	xor    r8d,r8d
  410daf:	call   0x4184b0
  410db4:	add    rbx,QWORD PTR [rbp+0x40]
  410db8:	mov    rsi,rax
  410dbb:	mov    rdi,QWORD PTR [rsp+0x50]
  410dc0:	mov    rax,QWORD PTR [rsp+0xe8]
  410dc8:	lea    rdx,[rbp+0x20]
  410dcc:	xor    r9d,r9d
  410dcf:	mov    QWORD PTR [rsp+0x20],rsi
  410dd4:	mov    rcx,rdi
  410dd7:	mov    r8,rbx
  410dda:	mov    QWORD PTR [rsp+0x28],rax
  410ddf:	call   0x4106e0
  410de4:	mov    rcx,rsi
  410de7:	mov    ebx,eax
  410de9:	call   0x40e6e0
  410dee:	mov    rax,QWORD PTR [rsp+0xe0]
  410df6:	movsxd rdx,DWORD PTR [r14]
  410df9:	mov    rcx,rdi
  410dfc:	add    rcx,0x50
  410e00:	xor    r8d,r8d
  410e03:	mov    rax,QWORD PTR [rax]
  410e06:	lea    rdx,[rax+rdx*8]
  410e0a:	call   0x4106a0
  410e0f:	mov    rax,QWORD PTR [rsp+0xf0]
  410e17:	mov    r10d,ebx
  410e1a:	mov    DWORD PTR [rax],0x1
  410e20:	jmp    0x410f2a
  410e25:	mov    rax,QWORD PTR [rsp+0xe0]
  410e2d:	mov    rcx,QWORD PTR [rsp+0x38]
  410e32:	xor    r8d,r8d
  410e35:	mov    DWORD PTR [rsp+0x4c],r10d
  410e3a:	mov    QWORD PTR [rsp+0x40],r11
  410e3f:	mov    rax,QWORD PTR [rax]
  410e42:	lea    rdx,[rax+r12*8]
  410e46:	lea    r12,[r13+r15*1+0x1]
  410e4b:	call   0x4106a0
  410e50:	mov    rax,QWORD PTR [rbp+0x40]
  410e54:	lea    rcx,[rip+0x2eca9]        # 0x43fb04
  410e5b:	xor    r8d,r8d
  410e5e:	mov    rdx,QWORD PTR [rax+rbx*1]
  410e62:	call   0x4184b0
  410e67:	mov    r11,QWORD PTR [rsp+0x40]
  410e6c:	mov    rdi,rax
  410e6f:	mov    r10d,DWORD PTR [rsp+0x4c]
  410e74:	cmp    BYTE PTR [r11],0x3d
  410e78:	je     0x410ed3
  410e7a:	mov    rcx,QWORD PTR [rsp+0xd8]
  410e82:	movsxd rax,DWORD PTR [r14]
  410e85:	mov    ecx,DWORD PTR [rcx]
  410e87:	lea    edx,[rcx-0x1]
  410e8a:	mov    DWORD PTR [rsp+0x40],ecx
  410e8e:	cmp    eax,edx
  410e90:	jge    0x410f8f
  410e96:	mov    r8,rbx
  410e99:	add    r8,QWORD PTR [rbp+0x40]
  410e9d:	mov    rcx,QWORD PTR [rsp+0xe0]
  410ea5:	cmp    DWORD PTR [r8+0x10],0x3
  410eaa:	jne    0x410eb7
  410eac:	test   BYTE PTR [r8+0xc],0x20
  410eb1:	jne    0x410f50
  410eb7:	mov    rdx,QWORD PTR [rcx]
  410eba:	mov    rcx,QWORD PTR [rsp+0x38]
  410ebf:	xor    r8d,r8d
  410ec2:	lea    rdx,[rdx+rax*8+0x8]
  410ec7:	mov    r12,QWORD PTR [rdx]
  410eca:	call   0x4106a0
  410ecf:	add    DWORD PTR [r14],0x1
  410ed3:	mov    rax,QWORD PTR [rsp+0xe8]
  410edb:	mov    r8,rbx
  410ede:	add    r8,QWORD PTR [rbp+0x40]
  410ee2:	mov    rdx,QWORD PTR [rsp+0x58]
  410ee7:	mov    rcx,QWORD PTR [rsp+0x50]
  410eec:	mov    r9,r12
  410eef:	mov    QWORD PTR [rsp+0x20],rdi
  410ef4:	mov    QWORD PTR [rsp+0x28],rax
  410ef9:	call   0x4106e0
  410efe:	test   eax,eax
  410f00:	je     0x410f7c
  410f02:	mov    rcx,rdi
  410f05:	add    esi,0x1
  410f08:	call   0x40e6e0
  410f0d:	mov    rax,QWORD PTR [rsp+0xf0]
  410f15:	mov    DWORD PTR [rax],0x1
  410f1b:	cmp    DWORD PTR [rbp+0x48],esi
  410f1e:	jg     0x410d51
  410f24:	mov    r10d,0x1
  410f2a:	mov    eax,r10d
  410f2d:	add    rsp,0x68
  410f31:	pop    rbx
  410f32:	pop    rsi
  410f33:	pop    rdi
  410f34:	pop    rbp
  410f35:	pop    r12
  410f37:	pop    r13
  410f39:	pop    r14
  410f3b:	pop    r15
  410f3d:	ret    
  410f3e:	xchg   ax,ax
  410f40:	test   BYTE PTR [rax+0xc],0x8
  410f44:	je     0x410d09
  410f4a:	jmp    0x410d8c
  410f4f:	nop
  410f50:	mov    rdx,QWORD PTR [rcx]
  410f53:	lea    rdx,[rdx+rax*8+0x8]
  410f58:	mov    r12,QWORD PTR [rdx]
  410f5b:	cmp    BYTE PTR [r12],0x2d
  410f60:	je     0x410fe6
  410f66:	mov    rcx,QWORD PTR [rsp+0x38]
  410f6b:	xor    r8d,r8d
  410f6e:	call   0x4106a0
  410f73:	add    DWORD PTR [r14],0x1
  410f77:	jmp    0x410ed3
  410f7c:	mov    rcx,rdi
  410f7f:	mov    DWORD PTR [rsp+0x38],eax
  410f83:	call   0x40e6e0
  410f88:	mov    r10d,DWORD PTR [rsp+0x38]
  410f8d:	jmp    0x410f2a
  410f8f:	add    rbx,QWORD PTR [rbp+0x40]
  410f93:	cmp    DWORD PTR [rbx+0x10],0x3
  410f97:	mov    r8,rbx
  410f9a:	je     0x410fe0
  410f9c:	lea    rcx,[rip+0x2e9dc]        # 0x43f97f
  410fa3:	mov    DWORD PTR [rsp+0x38],r10d
  410fa8:	call   0x42fc00
  410fad:	mov    rcx,QWORD PTR [rsp+0xe8]
  410fb5:	lea    r9,[rip+0x2eb4b]        # 0x43fb07
  410fbc:	mov    r8d,0x1
  410fc2:	mov    edx,eax
  410fc4:	mov    QWORD PTR [rsp+0x20],rdi
  410fc9:	call   0x430630
  410fce:	mov    rcx,rdi
  410fd1:	call   0x40e6e0
  410fd6:	mov    r10d,DWORD PTR [rsp+0x38]
  410fdb:	jmp    0x410f2a
  410fe0:	test   BYTE PTR [rbx+0xc],0x20
  410fe4:	je     0x410f9c
  410fe6:	mov    rax,QWORD PTR [rsp+0xe8]
  410fee:	mov    rcx,QWORD PTR [rsp+0x50]
  410ff3:	lea    rdx,[rbp+0x20]
  410ff7:	xor    r9d,r9d
  410ffa:	mov    QWORD PTR [rsp+0x20],rdi
  410fff:	mov    QWORD PTR [rsp+0x28],rax
  411004:	call   0x4106e0
  411009:	mov    ebx,eax
  41100b:	mov    rax,QWORD PTR [rsp+0xf0]
  411013:	mov    rcx,rdi
  411016:	mov    DWORD PTR [rax],0x1
  41101c:	call   0x40e6e0
  411021:	mov    r10d,ebx
  411024:	jmp    0x410f2a
  411029:	nop    DWORD PTR [rax+0x0]
  411030:	push   r15
  411032:	push   r14
  411034:	push   r13
  411036:	push   r12
  411038:	push   rbp
  411039:	push   rdi
  41103a:	push   rsi
  41103b:	push   rbx
  41103c:	sub    rsp,0x68
  411040:	mov    eax,DWORD PTR [rdx+0x48]
  411043:	movzx  r15d,BYTE PTR [rsp+0xd0]
  41104c:	test   eax,eax
  41104e:	jle    0x4111a0
  411054:	movsxd rax,r8d
  411057:	mov    r14d,r15d
  41105a:	mov    r13,r9
  41105d:	mov    rbp,rax
  411060:	lea    rax,[rax*8+0x8]
  411068:	mov    rdi,rdx
  41106b:	xor    ebx,ebx
  41106d:	xor    esi,esi
  41106f:	mov    QWORD PTR [rsp+0x40],rcx
  411074:	mov    QWORD PTR [rsp+0x48],rax
  411079:	movsx  eax,r15b
  41107d:	mov    r15,QWORD PTR [rsp+0xd8]
  411085:	mov    DWORD PTR [rsp+0x34],eax
  411089:	lea    rax,[rdx+0x20]
  41108d:	mov    QWORD PTR [rsp+0x38],rax
  411092:	lea    rax,[rcx+0x50]
  411096:	mov    QWORD PTR [rsp+0x50],rax
  41109b:	jmp    0x4110b0
  41109d:	nop    DWORD PTR [rax]
  4110a0:	add    esi,0x1
  4110a3:	add    rbx,0x30
  4110a7:	cmp    DWORD PTR [rdi+0x48],esi
  4110aa:	jle    0x4111a0
  4110b0:	mov    rax,QWORD PTR [rdi+0x40]
  4110b4:	cmp    BYTE PTR [rax+rbx*1+0x8],r14b
  4110b9:	jne    0x4110a0
  4110bb:	mov    edx,DWORD PTR [rsp+0x34]
  4110bf:	lea    rcx,[rip+0x2ea59]        # 0x43fb1f
  4110c6:	call   0x418470
  4110cb:	mov    r8,rbx
  4110ce:	add    r8,QWORD PTR [rdi+0x40]
  4110d2:	mov    r12,rax
  4110d5:	mov    eax,DWORD PTR [r8+0x10]
  4110d9:	test   eax,eax
  4110db:	je     0x4111cc
  4110e1:	cmp    eax,0x3
  4110e4:	je     0x4111d4
  4110ea:	cmp    DWORD PTR [r13+0x0],ebp
  4110ee:	jg     0x411258
  4110f4:	mov    ecx,DWORD PTR [r15]
  4110f7:	lea    edx,[rcx-0x1]
  4110fa:	cmp    ebp,edx
  4110fc:	jge    0x4111c0
  411102:	cmp    eax,0x3
  411105:	mov    rdx,QWORD PTR [rsp+0x48]
  41110a:	mov    rax,QWORD PTR [rsp+0xe0]
  411112:	jne    0x41111f
  411114:	test   BYTE PTR [r8+0xc],0x20
  411119:	jne    0x4111e7
  41111f:	add    rdx,QWORD PTR [rax]
  411122:	mov    r9,QWORD PTR [rdx]
  411125:	mov    QWORD PTR [rsp+0x58],r9
  41112a:	mov    rcx,QWORD PTR [rsp+0x50]
  41112f:	xor    r8d,r8d
  411132:	call   0x4106a0
  411137:	mov    r8,rbx
  41113a:	add    r8,QWORD PTR [rdi+0x40]
  41113e:	lea    eax,[rbp+0x1]
  411141:	mov    r9,QWORD PTR [rsp+0x58]
  411146:	mov    DWORD PTR [r13+0x0],eax
  41114a:	mov    rax,QWORD PTR [rsp+0xe8]
  411152:	mov    rdx,QWORD PTR [rsp+0x38]
  411157:	mov    rcx,QWORD PTR [rsp+0x40]
  41115c:	mov    QWORD PTR [rsp+0x20],r12
  411161:	mov    QWORD PTR [rsp+0x28],rax
  411166:	call   0x4106e0
  41116b:	test   eax,eax
  41116d:	je     0x411243
  411173:	mov    rcx,r12
  411176:	add    esi,0x1
  411179:	add    rbx,0x30
  41117d:	call   0x40e6e0
  411182:	mov    rax,QWORD PTR [rsp+0xf0]
  41118a:	mov    DWORD PTR [rax],0x1
  411190:	cmp    DWORD PTR [rdi+0x48],esi
  411193:	jg     0x4110b0
  411199:	nop    DWORD PTR [rax+0x0]
  4111a0:	mov    eax,0x1
  4111a5:	add    rsp,0x68
  4111a9:	pop    rbx
  4111aa:	pop    rsi
  4111ab:	pop    rdi
  4111ac:	pop    rbp
  4111ad:	pop    r12
  4111af:	pop    r13
  4111b1:	pop    r14
  4111b3:	pop    r15
  4111b5:	ret    
  4111b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111c0:	cmp    eax,0x3
  4111c3:	jne    0x411204
  4111c5:	test   BYTE PTR [r8+0xc],0x20
  4111ca:	je     0x411204
  4111cc:	xor    r9d,r9d
  4111cf:	jmp    0x41114a
  4111d4:	test   BYTE PTR [r8+0xc],0x8
  4111d9:	je     0x4110ea
  4111df:	xor    r9d,r9d
  4111e2:	jmp    0x41114a
  4111e7:	add    rdx,QWORD PTR [rax]
  4111ea:	mov    r9,QWORD PTR [rdx]
  4111ed:	cmp    BYTE PTR [r9],0x2d
  4111f1:	mov    QWORD PTR [rsp+0x58],r9
  4111f6:	jne    0x41112a
  4111fc:	xor    r9d,r9d
  4111ff:	jmp    0x41114a
  411204:	lea    rcx,[rip+0x2e774]        # 0x43f97f
  41120b:	mov    r14,r12
  41120e:	call   0x42fc00
  411213:	lea    r9,[rip+0x2e8ed]        # 0x43fb07
  41121a:	mov    QWORD PTR [rsp+0x20],r12
  41121f:	mov    r8d,0x1
  411225:	mov    rcx,QWORD PTR [rsp+0xe8]
  41122d:	mov    edx,eax
  41122f:	call   0x430630
  411234:	mov    rcx,r14
  411237:	call   0x40e6e0
  41123c:	xor    eax,eax
  41123e:	jmp    0x4111a5
  411243:	mov    rcx,r12
  411246:	mov    DWORD PTR [rsp+0x34],eax
  41124a:	call   0x40e6e0
  41124f:	mov    eax,DWORD PTR [rsp+0x34]
  411253:	jmp    0x4111a5
  411258:	lea    rcx,[rip+0x2e720]        # 0x43f97f
  41125f:	mov    r14,r12
  411262:	call   0x42fc00
  411267:	mov    QWORD PTR [rsp+0x20],r12
  41126c:	lea    r9,[rip+0x2e77c]        # 0x43f9ef
  411273:	mov    r8d,0x2
  411279:	jmp    0x411225
  41127b:	nop    DWORD PTR [rax+rax*1+0x0]
  411280:	lea    rcx,[rip+0x2e6f8]        # 0x43f97f
  411287:	jmp    0x42fc00
  41128c:	nop    DWORD PTR [rax+0x0]
  411290:	push   rsi
  411291:	push   rbx
  411292:	sub    rsp,0x28
  411296:	mov    rsi,rcx
  411299:	mov    ecx,0x58
  41129e:	call   0x40e610
  4112a3:	mov    rcx,rsi
  4112a6:	mov    rbx,rax
  4112a9:	call   0x4182b0
  4112ae:	movzx  edx,BYTE PTR [rbx+0x38]
  4112b2:	mov    QWORD PTR [rbx+0x8],rax
  4112b6:	mov    rax,rbx
  4112b9:	or     edx,0x1
  4112bc:	and    edx,0xfffffffd
  4112bf:	mov    BYTE PTR [rbx+0x38],dl
  4112c2:	add    rsp,0x28
  4112c6:	pop    rbx
  4112c7:	pop    rsi
  4112c8:	ret    
  4112c9:	nop    DWORD PTR [rax+0x0]
  4112d0:	push   rsi
  4112d1:	push   rbx
  4112d2:	sub    rsp,0x28
  4112d6:	test   rcx,rcx
  4112d9:	je     0x411375
  4112df:	mov    rsi,rcx
  4112e2:	mov    rcx,QWORD PTR [rcx]
  4112e5:	lea    rdx,[rip+0xffffffffffffefa4]        # 0x410290
  4112ec:	call   0x409aa0
  4112f1:	mov    rcx,QWORD PTR [rsi+0x40]
  4112f5:	test   rcx,rcx
  4112f8:	je     0x4112ff
  4112fa:	call   0x410290
  4112ff:	mov    rbx,QWORD PTR [rsi+0x48]
  411303:	test   rbx,rbx
  411306:	je     0x411395
  41130c:	nop    DWORD PTR [rax+0x0]
  411310:	mov    rcx,QWORD PTR [rbx]
  411313:	call   0x40e6e0
  411318:	mov    rbx,QWORD PTR [rbx+0x8]
  41131c:	test   rbx,rbx
  41131f:	jne    0x411310
  411321:	mov    rcx,QWORD PTR [rsi+0x48]
  411325:	call   0x409a70
  41132a:	lea    rcx,[rsi+0x50]
  41132e:	xor    edx,edx
  411330:	mov    QWORD PTR [rsi+0x48],0x0
  411338:	call   0x410310
  41133d:	mov    rcx,QWORD PTR [rsi+0x8]
  411341:	call   0x40e6e0
  411346:	mov    rcx,QWORD PTR [rsi+0x10]
  41134a:	call   0x40e6e0
  41134f:	mov    rcx,QWORD PTR [rsi+0x18]
  411353:	call   0x40e6e0
  411358:	mov    rax,QWORD PTR [rsi+0x28]
  41135c:	test   rax,rax
  41135f:	je     0x411367
  411361:	mov    rcx,QWORD PTR [rsi+0x30]
  411365:	call   rax
  411367:	mov    rcx,rsi
  41136a:	add    rsp,0x28
  41136e:	pop    rbx
  41136f:	pop    rsi
  411370:	jmp    0x40e6e0
  411375:	lea    r8,[rip+0x2e7a7]        # 0x43fb23
  41137c:	lea    rdx,[rip+0x2f06d]        # 0x4403f0
  411383:	lea    rcx,[rip+0x2e5c4]        # 0x43f94e
  41138a:	add    rsp,0x28
  41138e:	pop    rbx
  41138f:	pop    rsi
  411390:	jmp    0x40fd20
  411395:	xor    ecx,ecx
  411397:	jmp    0x411325
  411399:	nop    DWORD PTR [rax+0x0]
  4113a0:	test   rcx,rcx
  4113a3:	je     0x4113b5
  4113a5:	movzx  eax,BYTE PTR [rcx+0x38]
  4113a9:	and    edx,0x1
  4113ac:	and    eax,0xfffffffe
  4113af:	or     edx,eax
  4113b1:	mov    BYTE PTR [rcx+0x38],dl
  4113b4:	ret    
  4113b5:	lea    r8,[rip+0x2e767]        # 0x43fb23
  4113bc:	lea    rdx,[rip+0x2efdd]        # 0x4403a0
  4113c3:	lea    rcx,[rip+0x2e584]        # 0x43f94e
  4113ca:	jmp    0x40fd20
  4113cf:	nop
  4113d0:	sub    rsp,0x28
  4113d4:	test   rcx,rcx
  4113d7:	je     0x4113e5
  4113d9:	movzx  eax,BYTE PTR [rcx+0x38]
  4113dd:	and    eax,0x1
  4113e0:	add    rsp,0x28
  4113e4:	ret    
  4113e5:	lea    r8,[rip+0x2e737]        # 0x43fb23
  4113ec:	lea    rdx,[rip+0x2ef6d]        # 0x440360
  4113f3:	lea    rcx,[rip+0x2e554]        # 0x43f94e
  4113fa:	call   0x40fd20
  4113ff:	xor    eax,eax
  411401:	add    rsp,0x28
  411405:	ret    
  411406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411410:	test   rcx,rcx
  411413:	je     0x411430
  411415:	movzx  eax,BYTE PTR [rcx+0x38]
  411419:	and    edx,0x1
  41141c:	add    edx,edx
  41141e:	and    eax,0xfffffffd
  411421:	or     edx,eax
  411423:	mov    BYTE PTR [rcx+0x38],dl
  411426:	ret    
  411427:	nop    WORD PTR [rax+rax*1+0x0]
  411430:	lea    r8,[rip+0x2e6ec]        # 0x43fb23
  411437:	lea    rdx,[rip+0x2eee2]        # 0x440320
  41143e:	lea    rcx,[rip+0x2e509]        # 0x43f94e
  411445:	jmp    0x40fd20
  41144a:	nop    WORD PTR [rax+rax*1+0x0]
  411450:	sub    rsp,0x28
  411454:	test   rcx,rcx
  411457:	je     0x411470
  411459:	movzx  eax,BYTE PTR [rcx+0x38]
  41145d:	shr    al,1
  41145f:	and    eax,0x1
  411462:	add    rsp,0x28
  411466:	ret    
  411467:	nop    WORD PTR [rax+rax*1+0x0]
  411470:	lea    r8,[rip+0x2e6ac]        # 0x43fb23
  411477:	lea    rdx,[rip+0x2ee62]        # 0x4402e0
  41147e:	lea    rcx,[rip+0x2e4c9]        # 0x43f94e
  411485:	call   0x40fd20
  41148a:	xor    eax,eax
  41148c:	add    rsp,0x28
  411490:	ret    
  411491:	nop    DWORD PTR [rax+rax*1+0x0]
  411496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4114a0:	push   rbp
  4114a1:	push   rdi
  4114a2:	push   rsi
  4114a3:	push   rbx
  4114a4:	sub    rsp,0x28
  4114a8:	test   rcx,rcx
  4114ab:	je     0x4115a0
  4114b1:	test   rdx,rdx
  4114b4:	lea    r8,[rip+0x2e485]        # 0x43f940
  4114bb:	je     0x411580
  4114c1:	mov    rsi,QWORD PTR [rdx]
  4114c4:	test   rsi,rsi
  4114c7:	je     0x4115b0
  4114cd:	cmp    QWORD PTR [rdx+0x8],0x0
  4114d2:	je     0x4115c0
  4114d8:	cmp    QWORD PTR [rdx+0x10],0x0
  4114dd:	je     0x411570
  4114e3:	mov    rbx,QWORD PTR [rcx]
  4114e6:	mov    rdi,rdx
  4114e9:	mov    rbp,rcx
  4114ec:	test   rbx,rbx
  4114ef:	jne    0x41153b
  4114f1:	jmp    0x4115c9
  4114f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411500:	mov    rdx,QWORD PTR [rax]
  411503:	test   rdx,rdx
  411506:	je     0x41152f
  411508:	mov    rcx,rsi
  41150b:	call   0x4387a0
  411510:	test   eax,eax
  411512:	jne    0x41152f
  411514:	lea    r8,[rip+0x2e61d]        # 0x43fb38
  41151b:	lea    rcx,[rip+0x2e42c]        # 0x43f94e
  411522:	mov    r9,rsi
  411525:	mov    edx,0x10
  41152a:	call   0x40fae0
  41152f:	mov    rbx,QWORD PTR [rbx+0x8]
  411533:	test   rbx,rbx
  411536:	je     0x411552
  411538:	mov    rsi,QWORD PTR [rdi]
  41153b:	test   rsi,rsi
  41153e:	mov    rax,QWORD PTR [rbx]
  411541:	jne    0x411500
  411543:	cmp    QWORD PTR [rax],0x0
  411547:	je     0x411514
  411549:	mov    rbx,QWORD PTR [rbx+0x8]
  41154d:	test   rbx,rbx
  411550:	jne    0x411538
  411552:	mov    rcx,QWORD PTR [rbp+0x0]
  411556:	mov    rdx,rdi
  411559:	call   0x409af0
  41155e:	mov    QWORD PTR [rbp+0x0],rax
  411562:	add    rsp,0x28
  411566:	pop    rbx
  411567:	pop    rsi
  411568:	pop    rdi
  411569:	pop    rbp
  41156a:	ret    
  41156b:	nop    DWORD PTR [rax+rax*1+0x0]
  411570:	lea    r8,[rip+0x2e631]        # 0x43fba8
  411577:	nop    WORD PTR [rax+rax*1+0x0]
  411580:	lea    rdx,[rip+0x2ed39]        # 0x4402c0
  411587:	lea    rcx,[rip+0x2e3c0]        # 0x43f94e
  41158e:	add    rsp,0x28
  411592:	pop    rbx
  411593:	pop    rsi
  411594:	pop    rdi
  411595:	pop    rbp
  411596:	jmp    0x40fd20
  41159b:	nop    DWORD PTR [rax+rax*1+0x0]
  4115a0:	lea    r8,[rip+0x2e57c]        # 0x43fb23
  4115a7:	jmp    0x411580
  4115a9:	nop    DWORD PTR [rax+0x0]
  4115b0:	lea    r8,[rip+0x2e5bb]        # 0x43fb72
  4115b7:	jmp    0x411580
  4115b9:	nop    DWORD PTR [rax+0x0]
  4115c0:	lea    r8,[rip+0x2e5bf]        # 0x43fb86
  4115c7:	jmp    0x411580
  4115c9:	xor    ecx,ecx
  4115cb:	jmp    0x411556
  4115cd:	nop    DWORD PTR [rax]
  4115d0:	test   rcx,rcx
  4115d3:	je     0x411605
  4115d5:	test   rdx,rdx
  4115d8:	je     0x411620
  4115da:	cmp    QWORD PTR [rcx+0x40],0x0
  4115df:	je     0x411600
  4115e1:	lea    r8,[rip+0x2e5e0]        # 0x43fbc8
  4115e8:	lea    rcx,[rip+0x2e35f]        # 0x43f94e
  4115ef:	mov    edx,0x10
  4115f4:	jmp    0x40fae0
  4115f9:	nop    DWORD PTR [rax+0x0]
  411600:	mov    QWORD PTR [rcx+0x40],rdx
  411604:	ret    
  411605:	lea    r8,[rip+0x2e517]        # 0x43fb23
  41160c:	lea    rdx,[rip+0x2ec8d]        # 0x4402a0
  411613:	lea    rcx,[rip+0x2e334]        # 0x43f94e
  41161a:	jmp    0x40fd20
  41161f:	nop
  411620:	lea    r8,[rip+0x2e319]        # 0x43f940
  411627:	lea    rdx,[rip+0x2ec72]        # 0x4402a0
  41162e:	lea    rcx,[rip+0x2e319]        # 0x43f94e
  411635:	jmp    0x40fd20
  41163a:	nop    WORD PTR [rax+rax*1+0x0]
  411640:	sub    rsp,0x28
  411644:	test   rcx,rcx
  411647:	je     0x411652
  411649:	mov    rax,QWORD PTR [rcx+0x40]
  41164d:	add    rsp,0x28
  411651:	ret    
  411652:	lea    r8,[rip+0x2e4ca]        # 0x43fb23
  411659:	lea    rdx,[rip+0x2ec20]        # 0x440280
  411660:	lea    rcx,[rip+0x2e2e7]        # 0x43f94e
  411667:	call   0x40fd20
  41166c:	xor    eax,eax
  41166e:	add    rsp,0x28
  411672:	ret    
  411673:	nop    DWORD PTR [rax]
  411676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411680:	push   r15
  411682:	push   r14
  411684:	push   r13
  411686:	push   r12
  411688:	push   rbp
  411689:	push   rdi
  41168a:	push   rsi
  41168b:	push   rbx
  41168c:	sub    rsp,0x458
  411693:	mov    r13,rcx
  411696:	mov    ecx,0x400
  41169b:	mov    DWORD PTR [rsp+0x4c],edx
  41169f:	mov    QWORD PTR [rsp+0x40],r8
  4116a4:	call   0x41a880
  4116a9:	mov    r9,QWORD PTR [r13+0x40]
  4116ad:	mov    r12,rax
  4116b0:	test   r9,r9
  4116b3:	je     0x4116fa
  4116b5:	mov    edx,DWORD PTR [r9+0x48]
  4116b9:	test   edx,edx
  4116bb:	jle    0x4116fa
  4116bd:	mov    rcx,QWORD PTR [r9+0x40]
  4116c1:	mov    rax,QWORD PTR [rcx]
  4116c4:	cmp    BYTE PTR [rax],0x0
  4116c7:	je     0x411b29
  4116cd:	sub    edx,0x1
  4116d0:	lea    rax,[rcx+0x30]
  4116d4:	lea    r8,[rdx+rdx*2+0x3]
  4116d9:	shl    r8,0x4
  4116dd:	add    r8,rcx
  4116e0:	jmp    0x4116f5
  4116e2:	mov    rcx,rax
  4116e5:	add    rax,0x30
  4116e9:	mov    rdx,QWORD PTR [rcx]
  4116ec:	cmp    BYTE PTR [rdx],0x0
  4116ef:	je     0x411b29
  4116f5:	cmp    rax,r8
  4116f8:	jne    0x4116e2
  4116fa:	call   0x425280
  4116ff:	mov    r9,rax
  411702:	lea    rax,[rip+0x2e4fe]        # 0x43fc07
  411709:	lea    r8,[rip+0x2e4e5]        # 0x43fbf5
  411710:	lea    rdx,[rip+0x2e4e5]        # 0x43fbfc
  411717:	mov    rcx,r12
  41171a:	mov    QWORD PTR [rsp+0x20],rax
  41171f:	call   0x41bd30
  411724:	cmp    QWORD PTR [r13+0x8],0x0
  411729:	je     0x41175c
  41172b:	lea    rdx,[rip+0x2e4e1]        # 0x43fc13
  411732:	mov    rcx,r12
  411735:	call   0x41ace0
  41173a:	mov    rax,QWORD PTR [r13+0x20]
  41173e:	test   rax,rax
  411741:	je     0x411b20
  411747:	mov    rdx,QWORD PTR [r13+0x30]
  41174b:	mov    rcx,QWORD PTR [r13+0x8]
  41174f:	call   rax
  411751:	mov    rdx,rax
  411754:	mov    rcx,r12
  411757:	call   0x41ace0
  41175c:	lea    rdx,[rip+0x2e4b2]        # 0x43fc15
  411763:	mov    rcx,r12
  411766:	call   0x41ace0
  41176b:	mov    rax,QWORD PTR [r13+0x10]
  41176f:	test   rax,rax
  411772:	je     0x4117a1
  411774:	mov    r8,QWORD PTR [r13+0x20]
  411778:	test   r8,r8
  41177b:	je     0x411787
  41177d:	mov    rdx,QWORD PTR [r13+0x30]
  411781:	mov    rcx,rax
  411784:	call   r8
  411787:	mov    rdx,rax
  41178a:	mov    rcx,r12
  41178d:	call   0x41ace0
  411792:	lea    rdx,[rip+0x2e47c]        # 0x43fc15
  411799:	mov    rcx,r12
  41179c:	call   0x41ace0
  4117a1:	lea    rdx,[rsp+0x50]
  4117a6:	xor    eax,eax
  4117a8:	mov    ecx,0x80
  4117ad:	mov    rdi,rdx
  4117b0:	lea    rdx,[rip+0xffffffffffff7f79]        # 0x409730
  4117b7:	rep stos QWORD PTR es:[rdi],rax
  4117ba:	lea    rcx,[rip+0xffffffffffff7f8f]        # 0x409750
  4117c1:	call   0x408a60
  4117c6:	mov    rbp,rax
  4117c9:	mov    rax,QWORD PTR [r13+0x40]
  4117cd:	test   rax,rax
  4117d0:	je     0x411830
  4117d2:	mov    r9d,DWORD PTR [rax+0x48]
  4117d6:	test   r9d,r9d
  4117d9:	jle    0x411830
  4117db:	xor    edi,edi
  4117dd:	xor    esi,esi
  4117df:	jmp    0x4117f5
  4117e1:	mov    BYTE PTR [rbx+0x8],0x0
  4117e5:	mov    rax,QWORD PTR [r13+0x40]
  4117e9:	add    esi,0x1
  4117ec:	add    rdi,0x30
  4117f0:	cmp    DWORD PTR [rax+0x48],esi
  4117f3:	jle    0x411830
  4117f5:	mov    rbx,rdi
  4117f8:	add    rbx,QWORD PTR [rax+0x40]
  4117fc:	mov    rcx,rbp
  4117ff:	mov    rdx,QWORD PTR [rbx]
  411802:	mov    r8,rbx
  411805:	call   0x409090
  41180a:	movzx  eax,BYTE PTR [rbx+0x8]
  41180e:	mov    r8d,DWORD PTR [rsp+rax*4+0x50]
  411813:	test   r8d,r8d
  411816:	jne    0x4117e1
  411818:	mov    DWORD PTR [rsp+rax*4+0x50],0x1
  411820:	mov    rax,QWORD PTR [r13+0x40]
  411824:	add    esi,0x1
  411827:	add    rdi,0x30
  41182b:	cmp    DWORD PTR [rax+0x48],esi
  41182e:	jg     0x4117f5
  411830:	mov    r15,QWORD PTR [r13+0x0]
  411834:	test   r15,r15
  411837:	je     0x4118c6
  41183d:	nop    DWORD PTR [rax]
  411840:	mov    rdi,QWORD PTR [r15]
  411843:	xor    esi,esi
  411845:	xor    ebx,ebx
  411847:	mov    ecx,DWORD PTR [rdi+0x48]
  41184a:	test   ecx,ecx
  41184c:	jg     0x411868
  41184e:	jmp    0x4118b9
  411850:	test   BYTE PTR [r14+0xc],0x40
  411855:	jne    0x4118a5
  411857:	mov    BYTE PTR [r14+0x8],0x0
  41185c:	add    ebx,0x1
  41185f:	add    rsi,0x30
  411863:	cmp    DWORD PTR [rdi+0x48],ebx
  411866:	jle    0x4118b9
  411868:	mov    r14,rsi
  41186b:	add    r14,QWORD PTR [rdi+0x40]
  41186f:	mov    rcx,rbp
  411872:	mov    rdx,QWORD PTR [r14]
  411875:	call   0x408de0
  41187a:	test   rax,rax
  41187d:	je     0x41188a
  41187f:	test   BYTE PTR [r14+0xc],0x40
  411884:	je     0x4119d0
  41188a:	mov    rdx,QWORD PTR [r14]
  41188d:	mov    r8,r14
  411890:	mov    rcx,rbp
  411893:	call   0x409090
  411898:	movzx  eax,BYTE PTR [r14+0x8]
  41189d:	mov    edx,DWORD PTR [rsp+rax*4+0x50]
  4118a1:	test   edx,edx
  4118a3:	jne    0x411850
  4118a5:	add    ebx,0x1
  4118a8:	add    rsi,0x30
  4118ac:	cmp    DWORD PTR [rdi+0x48],ebx
  4118af:	mov    DWORD PTR [rsp+rax*4+0x50],0x1
  4118b7:	jg     0x411868
  4118b9:	mov    r15,QWORD PTR [r15+0x8]
  4118bd:	test   r15,r15
  4118c0:	jne    0x411840
  4118c6:	mov    rcx,rbp
  4118c9:	call   0x409280
  4118ce:	mov    rbp,QWORD PTR [r13+0x0]
  4118d2:	lea    rcx,[rip+0x2e33f]        # 0x43fc18
  4118d9:	call   0x4103a0
  4118de:	test   rbp,rbp
  4118e1:	mov    esi,eax
  4118e3:	je     0x411c7a
  4118e9:	lea    rcx,[rip+0x2e339]        # 0x43fc29
  4118f0:	call   0x4103a0
  4118f5:	mov    rcx,QWORD PTR [r13+0x40]
  4118f9:	cmp    esi,eax
  4118fb:	cmovl  esi,eax
  4118fe:	test   rcx,rcx
  411901:	je     0x411910
  411903:	call   0x410440
  411908:	cmp    esi,eax
  41190a:	cmovl  esi,eax
  41190d:	nop    DWORD PTR [rax]
  411910:	mov    rdi,QWORD PTR [rbp+0x0]
  411914:	lea    rcx,[rip+0x2e319]        # 0x43fc34
  41191b:	call   0x4103a0
  411920:	mov    rcx,QWORD PTR [rdi]
  411923:	mov    ebx,eax
  411925:	call   0x4103a0
  41192a:	mov    rcx,rdi
  41192d:	add    ebx,eax
  41192f:	call   0x410440
  411934:	mov    rbp,QWORD PTR [rbp+0x8]
  411938:	cmp    ebx,eax
  41193a:	cmovl  ebx,eax
  41193d:	cmp    esi,ebx
  41193f:	cmovl  esi,ebx
  411942:	test   rbp,rbp
  411945:	jne    0x411910
  411947:	mov    rcx,QWORD PTR [r13+0x40]
  41194b:	cmp    QWORD PTR [rsp+0x40],0x0
  411951:	lea    edi,[rsi+0x4]
  411954:	je     0x411cb1
  41195a:	mov    rdx,QWORD PTR [rsp+0x40]
  41195f:	xor    r8d,r8d
  411962:	call   0x410190
  411967:	test   eax,eax
  411969:	jne    0x4119ea
  41196b:	mov    r9d,DWORD PTR [rsp+0x4c]
  411970:	test   r9d,r9d
  411973:	jne    0x411a89
  411979:	mov    rax,QWORD PTR [r13+0x18]
  41197d:	test   rax,rax
  411980:	je     0x4119af
  411982:	mov    r8,QWORD PTR [r13+0x20]
  411986:	test   r8,r8
  411989:	je     0x411995
  41198b:	mov    rdx,QWORD PTR [r13+0x30]
  41198f:	mov    rcx,rax
  411992:	call   r8
  411995:	mov    rdx,rax
  411998:	mov    rcx,r12
  41199b:	call   0x41ace0
  4119a0:	lea    rdx,[rip+0x2e2cf]        # 0x43fc76
  4119a7:	mov    rcx,r12
  4119aa:	call   0x41ace0
  4119af:	xor    edx,edx
  4119b1:	mov    rcx,r12
  4119b4:	add    rsp,0x458
  4119bb:	pop    rbx
  4119bc:	pop    rsi
  4119bd:	pop    rdi
  4119be:	pop    rbp
  4119bf:	pop    r12
  4119c1:	pop    r13
  4119c3:	pop    r14
  4119c5:	pop    r15
  4119c7:	jmp    0x41a8e0
  4119cc:	nop    DWORD PTR [rax+0x0]
  4119d0:	mov    r8,QWORD PTR [r14]
  4119d3:	mov    rdx,QWORD PTR [rdi]
  4119d6:	lea    rcx,[rip+0x2e246]        # 0x43fc23
  4119dd:	call   0x418470
  4119e2:	mov    QWORD PTR [r14],rax
  4119e5:	jmp    0x411898
  4119ea:	mov    rcx,QWORD PTR [rsp+0x40]
  4119ef:	mov    rax,QWORD PTR [rcx+0x28]
  4119f3:	test   rax,rax
  4119f6:	je     0x411ca3
  4119fc:	mov    rdx,QWORD PTR [rcx+0x38]
  411a00:	mov    rcx,QWORD PTR [rcx+0x8]
  411a04:	call   rax
  411a06:	mov    rdx,rax
  411a09:	mov    rcx,r12
  411a0c:	call   0x41ace0
  411a11:	lea    rdx,[rip+0x2e25e]        # 0x43fc76
  411a18:	mov    rcx,r12
  411a1b:	call   0x41ace0
  411a20:	mov    rax,QWORD PTR [rsp+0x40]
  411a25:	mov    r11d,DWORD PTR [rax+0x48]
  411a29:	test   r11d,r11d
  411a2c:	jle    0x411a6c
  411a2e:	mov    rax,QWORD PTR [rsp+0x40]
  411a33:	xor    r15d,r15d
  411a36:	xor    ebx,ebx
  411a38:	lea    rbp,[rax+0x28]
  411a3c:	lea    rsi,[rax+0x38]
  411a40:	mov    r14,QWORD PTR [rsp+0x40]
  411a45:	mov    r9,r15
  411a48:	mov    r8d,edi
  411a4b:	mov    rdx,rsi
  411a4e:	mov    rcx,rbp
  411a51:	add    ebx,0x1
  411a54:	add    r15,0x30
  411a58:	add    r9,QWORD PTR [r14+0x40]
  411a5c:	mov    QWORD PTR [rsp+0x20],r12
  411a61:	call   0x410500
  411a66:	cmp    DWORD PTR [r14+0x48],ebx
  411a6a:	jg     0x411a40
  411a6c:	lea    rdx,[rip+0x2e203]        # 0x43fc76
  411a73:	mov    rcx,r12
  411a76:	call   0x41ace0
  411a7b:	mov    r9d,DWORD PTR [rsp+0x4c]
  411a80:	test   r9d,r9d
  411a83:	je     0x411979
  411a89:	mov    rsi,QWORD PTR [r13+0x40]
  411a8d:	mov    rbp,QWORD PTR [r13+0x0]
  411a91:	mov    r8d,0x1
  411a97:	mov    rdx,rsi
  411a9a:	mov    rcx,rsi
  411a9d:	call   0x410190
  411aa2:	test   eax,eax
  411aa4:	jne    0x411b95
  411aaa:	test   rbp,rbp
  411aad:	je     0x411979
  411ab3:	mov    rbx,rbp
  411ab6:	jmp    0x411acd
  411ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ac0:	mov    rbx,QWORD PTR [rbx+0x8]
  411ac4:	test   rbx,rbx
  411ac7:	je     0x411979
  411acd:	mov    rdx,QWORD PTR [rbx]
  411ad0:	mov    r8d,0x1
  411ad6:	mov    rcx,rsi
  411ad9:	call   0x410190
  411ade:	test   eax,eax
  411ae0:	je     0x411ac0
  411ae2:	lea    rdx,[rip+0x2e1cd]        # 0x43fcb6
  411ae9:	mov    rcx,r12
  411aec:	call   0x41ace0
  411af1:	lea    rdx,[rip+0x2e17e]        # 0x43fc76
  411af8:	mov    rcx,r12
  411afb:	call   0x41ace0
  411b00:	mov    rcx,QWORD PTR [r13+0x40]
  411b04:	test   rcx,rcx
  411b07:	je     0x411c01
  411b0d:	mov    eax,DWORD PTR [rcx+0x48]
  411b10:	test   eax,eax
  411b12:	jg     0x411bc5
  411b18:	jmp    0x411c01
  411b1d:	nop    DWORD PTR [rax]
  411b20:	mov    rdx,QWORD PTR [r13+0x8]
  411b24:	jmp    0x411754
  411b29:	mov    rax,QWORD PTR [r9+0x28]
  411b2d:	test   rax,rax
  411b30:	je     0x411c9a
  411b36:	mov    rdx,QWORD PTR [r9+0x38]
  411b3a:	mov    rcx,QWORD PTR [rcx+0x28]
  411b3e:	call   rax
  411b40:	mov    rbx,rax
  411b43:	call   0x425280
  411b48:	mov    r9,rax
  411b4b:	lea    rax,[rip+0x2e0b5]        # 0x43fc07
  411b52:	lea    r8,[rip+0x2e09c]        # 0x43fbf5
  411b59:	lea    rdx,[rip+0x2e09c]        # 0x43fbfc
  411b60:	mov    rcx,r12
  411b63:	mov    QWORD PTR [rsp+0x20],rax
  411b68:	call   0x41bd30
  411b6d:	test   rbx,rbx
  411b70:	je     0x411724
  411b76:	lea    rdx,[rip+0x2e096]        # 0x43fc13
  411b7d:	mov    rcx,r12
  411b80:	call   0x41ace0
  411b85:	mov    rdx,rbx
  411b88:	mov    rcx,r12
  411b8b:	call   0x41ace0
  411b90:	jmp    0x411724
  411b95:	lea    rdx,[rip+0x2e11a]        # 0x43fcb6
  411b9c:	mov    rcx,r12
  411b9f:	call   0x41ace0
  411ba4:	lea    rdx,[rip+0x2e0cb]        # 0x43fc76
  411bab:	mov    rcx,r12
  411bae:	call   0x41ace0
  411bb3:	mov    rcx,QWORD PTR [r13+0x40]
  411bb7:	test   rcx,rcx
  411bba:	je     0x411bfc
  411bbc:	mov    r8d,DWORD PTR [rcx+0x48]
  411bc0:	test   r8d,r8d
  411bc3:	jle    0x411bfc
  411bc5:	xor    esi,esi
  411bc7:	xor    ebx,ebx
  411bc9:	nop    DWORD PTR [rax+0x0]
  411bd0:	mov    r9,rsi
  411bd3:	add    r9,QWORD PTR [rcx+0x40]
  411bd7:	lea    rdx,[rcx+0x38]
  411bdb:	mov    QWORD PTR [rsp+0x20],r12
  411be0:	add    rcx,0x28
  411be4:	mov    r8d,edi
  411be7:	add    ebx,0x1
  411bea:	add    rsi,0x30
  411bee:	call   0x410500
  411bf3:	mov    rcx,QWORD PTR [r13+0x40]
  411bf7:	cmp    DWORD PTR [rcx+0x48],ebx
  411bfa:	jg     0x411bd0
  411bfc:	test   rbp,rbp
  411bff:	je     0x411c66
  411c01:	mov    r14,QWORD PTR [rbp+0x0]
  411c05:	xor    esi,esi
  411c07:	xor    ebx,ebx
  411c09:	mov    edx,DWORD PTR [r14+0x48]
  411c0d:	lea    rax,[r14+0x28]
  411c11:	lea    r15,[r14+0x38]
  411c15:	mov    QWORD PTR [rsp+0x40],rax
  411c1a:	test   edx,edx
  411c1c:	jg     0x411c2d
  411c1e:	jmp    0x411c5d
  411c20:	add    ebx,0x1
  411c23:	add    rsi,0x30
  411c27:	cmp    DWORD PTR [r14+0x48],ebx
  411c2b:	jle    0x411c5d
  411c2d:	mov    r9,rsi
  411c30:	add    r9,QWORD PTR [r14+0x40]
  411c34:	test   BYTE PTR [r9+0xc],0x2
  411c39:	je     0x411c20
  411c3b:	mov    rcx,QWORD PTR [rsp+0x40]
  411c40:	mov    QWORD PTR [rsp+0x20],r12
  411c45:	mov    r8d,edi
  411c48:	mov    rdx,r15
  411c4b:	add    ebx,0x1
  411c4e:	add    rsi,0x30
  411c52:	call   0x410500
  411c57:	cmp    DWORD PTR [r14+0x48],ebx
  411c5b:	jg     0x411c2d
  411c5d:	mov    rbp,QWORD PTR [rbp+0x8]
  411c61:	test   rbp,rbp
  411c64:	jne    0x411c01
  411c66:	lea    rdx,[rip+0x2e009]        # 0x43fc76
  411c6d:	mov    rcx,r12
  411c70:	call   0x41ace0
  411c75:	jmp    0x411979
  411c7a:	mov    rcx,QWORD PTR [r13+0x40]
  411c7e:	test   rcx,rcx
  411c81:	je     0x41194b
  411c87:	call   0x410440
  411c8c:	cmp    esi,eax
  411c8e:	mov    rcx,QWORD PTR [r13+0x40]
  411c92:	cmovl  esi,eax
  411c95:	jmp    0x41194b
  411c9a:	mov    rbx,QWORD PTR [rcx+0x28]
  411c9e:	jmp    0x411b43
  411ca3:	mov    rax,QWORD PTR [rsp+0x40]
  411ca8:	mov    rdx,QWORD PTR [rax+0x8]
  411cac:	jmp    0x411a09
  411cb1:	mov    rbx,QWORD PTR [r13+0x0]
  411cb5:	mov    rdx,rcx
  411cb8:	mov    rcx,rbx
  411cbb:	call   0x410200
  411cc0:	lea    rdx,[rip+0x2df98]        # 0x43fc5f
  411cc7:	cmp    eax,0x1
  411cca:	lea    r8,[rip+0x2df6b]        # 0x43fc3c
  411cd1:	sbb    eax,eax
  411cd3:	mov    DWORD PTR [rsp+0x20],esi
  411cd7:	mov    rcx,r12
  411cda:	mov    QWORD PTR [rsp+0x30],rdx
  411cdf:	lea    rdx,[rip+0x2df8b]        # 0x43fc71
  411ce6:	and    eax,0x29
  411ce9:	lea    r9d,[rax+0x3f]
  411ced:	mov    QWORD PTR [rsp+0x28],rdx
  411cf2:	lea    rdx,[rip+0x2df51]        # 0x43fc4a
  411cf9:	call   0x41bd30
  411cfe:	test   rbx,rbx
  411d01:	je     0x411d80
  411d03:	lea    rax,[rip+0x2df84]        # 0x43fc8e
  411d0a:	lea    r9,[rip+0x2df67]        # 0x43fc78
  411d11:	lea    rdx,[rip+0x2df69]        # 0x43fc81
  411d18:	mov    r8d,edi
  411d1b:	mov    rcx,r12
  411d1e:	sub    esi,0x1
  411d21:	mov    QWORD PTR [rsp+0x20],rax
  411d26:	call   0x41bd30
  411d2b:	jmp    0x411d5b
  411d2d:	mov    rdx,QWORD PTR [rbp+0x38]
  411d31:	mov    rcx,QWORD PTR [rbp+0x10]
  411d35:	call   rax
  411d37:	mov    QWORD PTR [rsp+0x20],rax
  411d3c:	mov    r9,QWORD PTR [rbp+0x0]
  411d40:	lea    rdx,[rip+0x2df5d]        # 0x43fca4
  411d47:	mov    r8d,esi
  411d4a:	mov    rcx,r12
  411d4d:	call   0x41bd30
  411d52:	mov    rbx,QWORD PTR [rbx+0x8]
  411d56:	test   rbx,rbx
  411d59:	je     0x411d80
  411d5b:	mov    rbp,QWORD PTR [rbx]
  411d5e:	mov    rcx,QWORD PTR [r13+0x40]
  411d62:	xor    r8d,r8d
  411d65:	mov    rdx,rbp
  411d68:	call   0x410190
  411d6d:	test   eax,eax
  411d6f:	je     0x411d52
  411d71:	mov    rax,QWORD PTR [rbp+0x28]
  411d75:	test   rax,rax
  411d78:	jne    0x411d2d
  411d7a:	mov    rax,QWORD PTR [rbp+0x10]
  411d7e:	jmp    0x411d37
  411d80:	lea    rdx,[rip+0x2deef]        # 0x43fc76
  411d87:	mov    rcx,r12
  411d8a:	call   0x41ace0
  411d8f:	mov    ebx,DWORD PTR [rsp+0x4c]
  411d93:	test   ebx,ebx
  411d95:	je     0x411da4
  411d97:	mov    rbp,QWORD PTR [r13+0x0]
  411d9b:	mov    rsi,QWORD PTR [r13+0x40]
  411d9f:	jmp    0x411a91
  411da4:	mov    rbp,QWORD PTR [r13+0x0]
  411da8:	mov    rsi,QWORD PTR [r13+0x40]
  411dac:	test   rbp,rbp
  411daf:	jne    0x411dcd
  411db1:	jmp    0x411a91
  411db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dc0:	mov    rbp,QWORD PTR [rbp+0x8]
  411dc4:	test   rbp,rbp
  411dc7:	je     0x411a8d
  411dcd:	mov    r14,QWORD PTR [rbp+0x0]
  411dd1:	xor    r8d,r8d
  411dd4:	mov    rcx,rsi
  411dd7:	mov    rdx,r14
  411dda:	call   0x410190
  411ddf:	test   eax,eax
  411de1:	je     0x411dc0
  411de3:	mov    rdx,QWORD PTR [r14+0x8]
  411de7:	mov    rcx,r12
  411dea:	xor    esi,esi
  411dec:	xor    ebx,ebx
  411dee:	lea    r15,[r14+0x38]
  411df2:	call   0x41ace0
  411df7:	lea    rdx,[rip+0x2de78]        # 0x43fc76
  411dfe:	mov    rcx,r12
  411e01:	call   0x41ace0
  411e06:	mov    r10d,DWORD PTR [r14+0x48]
  411e0a:	lea    rax,[r14+0x28]
  411e0e:	mov    QWORD PTR [rsp+0x40],rax
  411e13:	test   r10d,r10d
  411e16:	jg     0x411e2d
  411e18:	jmp    0x411e5d
  411e1a:	nop    WORD PTR [rax+rax*1+0x0]
  411e20:	add    ebx,0x1
  411e23:	add    rsi,0x30
  411e27:	cmp    DWORD PTR [r14+0x48],ebx
  411e2b:	jle    0x411e5d
  411e2d:	mov    r9,rsi
  411e30:	add    r9,QWORD PTR [r14+0x40]
  411e34:	test   BYTE PTR [r9+0xc],0x2
  411e39:	jne    0x411e20
  411e3b:	mov    rcx,QWORD PTR [rsp+0x40]
  411e40:	mov    QWORD PTR [rsp+0x20],r12
  411e45:	mov    r8d,edi
  411e48:	mov    rdx,r15
  411e4b:	add    ebx,0x1
  411e4e:	add    rsi,0x30
  411e52:	call   0x410500
  411e57:	cmp    DWORD PTR [r14+0x48],ebx
  411e5b:	jg     0x411e2d
  411e5d:	lea    rdx,[rip+0x2de12]        # 0x43fc76
  411e64:	mov    rcx,r12
  411e67:	call   0x41ace0
  411e6c:	mov    rsi,QWORD PTR [r13+0x40]
  411e70:	jmp    0x411dc0
  411e75:	nop
  411e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e80:	push   rbp
  411e81:	push   r15
  411e83:	push   r14
  411e85:	push   r13
  411e87:	push   r12
  411e89:	push   rdi
  411e8a:	push   rsi
  411e8b:	push   rbx
  411e8c:	sub    rsp,0xb8
  411e93:	lea    rbp,[rsp+0x80]
  411e9b:	mov    rbx,rcx
  411e9e:	mov    r14,rdx
  411ea1:	mov    r13,r8
  411ea4:	mov    r12,r9
  411ea7:	call   0x425280
  411eac:	test   rax,rax
  411eaf:	je     0x412643
  411eb5:	mov    rsi,QWORD PTR [rbx]
  411eb8:	test   rsi,rsi
  411ebb:	je     0x411ee9
  411ebd:	nop    DWORD PTR [rax]
  411ec0:	mov    rdx,QWORD PTR [rsi]
  411ec3:	mov    rax,QWORD PTR [rdx+0x50]
  411ec7:	test   rax,rax
  411eca:	je     0x411ee0
  411ecc:	mov    r9,r12
  411ecf:	mov    r8,QWORD PTR [rdx+0x20]
  411ed3:	mov    rcx,rbx
  411ed6:	call   rax
  411ed8:	test   eax,eax
  411eda:	je     0x412024
  411ee0:	mov    rsi,QWORD PTR [rsi+0x8]
  411ee4:	test   rsi,rsi
  411ee7:	jne    0x411ec0
  411ee9:	mov    rdx,QWORD PTR [rbx+0x40]
  411eed:	test   rdx,rdx
  411ef0:	je     0x411f0f
  411ef2:	mov    rax,QWORD PTR [rdx+0x50]
  411ef6:	test   rax,rax
  411ef9:	je     0x411f0f
  411efb:	mov    r9,r12
  411efe:	mov    r8,QWORD PTR [rdx+0x20]
  411f02:	mov    rcx,rbx
  411f05:	call   rax
  411f07:	test   eax,eax
  411f09:	je     0x412024
  411f0f:	test   r14,r14
  411f12:	setne  dl
  411f15:	test   r13,r13
  411f18:	setne  al
  411f1b:	and    dl,al
  411f1d:	mov    BYTE PTR [rbp+0x3],dl
  411f20:	je     0x4121c0
  411f26:	cmp    DWORD PTR [r14],0x1
  411f2a:	mov    DWORD PTR [rbp+0x24],0x1
  411f31:	jle    0x4121c0
  411f37:	lea    rdi,[rbp+0x2c]
  411f3b:	mov    eax,0x1
  411f40:	mov    DWORD PTR [rbp+0x8],0x0
  411f47:	mov    DWORD PTR [rbp+0xc],0x0
  411f4e:	mov    DWORD PTR [rbp+0x4],0x0
  411f55:	mov    QWORD PTR [rbp+0x10],rdi
  411f59:	lea    rdi,[rbp+0x28]
  411f5d:	mov    QWORD PTR [rbp+0x18],rdi
  411f61:	lea    rdi,[rbp+0x24]
  411f65:	mov    QWORD PTR [rbp-0x10],rdi
  411f69:	nop    DWORD PTR [rax+0x0]
  411f70:	mov    rsi,QWORD PTR [r13+0x0]
  411f74:	movsxd rdx,eax
  411f77:	mov    DWORD PTR [rbp+0x28],0x0
  411f7e:	lea    rdx,[rsi+rdx*8]
  411f82:	mov    r8,rsi
  411f85:	mov    r15,QWORD PTR [rdx]
  411f88:	cmp    BYTE PTR [r15],0x2d
  411f8c:	je     0x412290
  411f92:	mov    rsi,QWORD PTR [rbx+0x40]
  411f96:	test   rsi,rsi
  411f99:	je     0x412180
  411f9f:	mov    r9d,DWORD PTR [rsi+0x48]
  411fa3:	test   r9d,r9d
  411fa6:	jle    0x412180
  411fac:	mov    rax,QWORD PTR [rsi+0x40]
  411fb0:	mov    rcx,QWORD PTR [rax]
  411fb3:	cmp    BYTE PTR [rcx],0x0
  411fb6:	je     0x412280
  411fbc:	sub    r9d,0x1
  411fc0:	lea    rcx,[rax+0x30]
  411fc4:	lea    r9,[r9+r9*2+0x3]
  411fc9:	shl    r9,0x4
  411fcd:	add    r9,rax
  411fd0:	cmp    rcx,r9
  411fd3:	je     0x412180
  411fd9:	mov    r10,rcx
  411fdc:	mov    rdi,rcx
  411fdf:	add    rcx,0x30
  411fe3:	mov    r11,QWORD PTR [r10]
  411fe6:	sub    rdi,rax
  411fe9:	cmp    BYTE PTR [r11],0x0
  411fed:	jne    0x411fd0
  411fef:	mov    rax,r10
  411ff2:	mov    eax,DWORD PTR [rax+0x10]
  411ff5:	lea    ecx,[rax-0x5]
  411ff8:	cmp    ecx,0x1
  411ffb:	jbe    0x412233
  412001:	cmp    eax,0x3
  412004:	je     0x412233
  41200a:	lea    r8,[rip+0x2dcdf]        # 0x43fcf0
  412011:	lea    rdx,[rip+0x2e1d8]        # 0x4401f0
  412018:	lea    rcx,[rip+0x2d92f]        # 0x43f94e
  41201f:	call   0x40fd20
  412024:	mov    rsi,QWORD PTR [rbx]
  412027:	test   rsi,rsi
  41202a:	je     0x412051
  41202c:	nop    DWORD PTR [rax+0x0]
  412030:	mov    rdx,QWORD PTR [rsi]
  412033:	mov    rax,QWORD PTR [rdx+0x60]
  412037:	test   rax,rax
  41203a:	je     0x412048
  41203c:	mov    r9,r12
  41203f:	mov    r8,QWORD PTR [rdx+0x20]
  412043:	mov    rcx,rbx
  412046:	call   rax
  412048:	mov    rsi,QWORD PTR [rsi+0x8]
  41204c:	test   rsi,rsi
  41204f:	jne    0x412030
  412051:	mov    rdx,QWORD PTR [rbx+0x40]
  412055:	test   rdx,rdx
  412058:	je     0x41206f
  41205a:	mov    rax,QWORD PTR [rdx+0x60]
  41205e:	test   rax,rax
  412061:	je     0x41206f
  412063:	mov    r9,r12
  412066:	mov    r8,QWORD PTR [rdx+0x20]
  41206a:	mov    rcx,rbx
  41206d:	call   rax
  41206f:	mov    rdi,QWORD PTR [rbx+0x48]
  412073:	test   rdi,rdi
  412076:	je     0x41278f
  41207c:	lea    r12,[rip+0x2dd0d]        # 0x43fd90
  412083:	mov    rsi,QWORD PTR [rdi]
  412086:	cmp    DWORD PTR [rsi],0x8
  412089:	ja     0x412150
  41208f:	mov    eax,DWORD PTR [rsi]
  412091:	movsxd rax,DWORD PTR [r12+rax*4]
  412095:	add    rax,r12
  412098:	jmp    rax
  41209a:	nop    WORD PTR [rax+rax*1+0x0]
  4120a0:	mov    edx,DWORD PTR [rsi+0x10]
  4120a3:	mov    rax,QWORD PTR [rsi+0x8]
  4120a7:	mov    DWORD PTR [rax],edx
  4120a9:	mov    rcx,rsi
  4120ac:	call   0x40e6e0
  4120b1:	mov    rdi,QWORD PTR [rdi+0x8]
  4120b5:	test   rdi,rdi
  4120b8:	jne    0x412083
  4120ba:	mov    rcx,QWORD PTR [rbx+0x48]
  4120be:	call   0x409a70
  4120c3:	lea    rcx,[rbx+0x50]
  4120c7:	mov    QWORD PTR [rbx+0x48],0x0
  4120cf:	xor    edx,edx
  4120d1:	call   0x410310
  4120d6:	xor    eax,eax
  4120d8:	lea    rsp,[rbp+0x38]
  4120dc:	pop    rbx
  4120dd:	pop    rsi
  4120de:	pop    rdi
  4120df:	pop    r12
  4120e1:	pop    r13
  4120e3:	pop    r14
  4120e5:	pop    r15
  4120e7:	pop    rbp
  4120e8:	ret    
  4120e9:	nop    DWORD PTR [rax+0x0]
  4120f0:	mov    rcx,QWORD PTR [rsi+0x18]
  4120f4:	call   0x40e6e0
  4120f9:	mov    rax,QWORD PTR [rsi+0x8]
  4120fd:	mov    rdx,QWORD PTR [rsi+0x10]
  412101:	mov    QWORD PTR [rax],rdx
  412104:	jmp    0x4120a9
  412106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412110:	mov    rdx,QWORD PTR [rsi+0x10]
  412114:	mov    rax,QWORD PTR [rsi+0x8]
  412118:	mov    QWORD PTR [rax],rdx
  41211b:	jmp    0x4120a9
  41211d:	nop    DWORD PTR [rax]
  412120:	mov    rax,QWORD PTR [rsi+0x8]
  412124:	movsd  xmm0,QWORD PTR [rsi+0x10]
  412129:	movsd  QWORD PTR [rax],xmm0
  41212d:	jmp    0x4120a9
  412132:	mov    rcx,QWORD PTR [rsi+0x20]
  412136:	call   0x41a040
  41213b:	mov    rax,QWORD PTR [rsi+0x8]
  41213f:	mov    rdx,QWORD PTR [rsi+0x10]
  412143:	mov    QWORD PTR [rax],rdx
  412146:	jmp    0x4120a9
  41214b:	nop    DWORD PTR [rax+rax*1+0x0]
  412150:	lea    r9,[rip+0x2e279]        # 0x4403d0
  412157:	lea    rdx,[rip+0x2d8fa]        # 0x43fa58
  41215e:	lea    rcx,[rip+0x2d7e9]        # 0x43f94e
  412165:	mov    QWORD PTR [rsp+0x20],0x0
  41216e:	mov    r8d,0x645
  412174:	call   0x41e540
  412179:	nop    DWORD PTR [rax+0x0]
  412180:	mov    ecx,DWORD PTR [rbp+0xc]
  412183:	test   ecx,ecx
  412185:	je     0x412350
  41218b:	mov    edx,DWORD PTR [rbp+0x24]
  41218e:	mov    DWORD PTR [rbp+0x8],0x0
  412195:	lea    eax,[rdx+0x1]
  412198:	cmp    DWORD PTR [r14],eax
  41219b:	mov    DWORD PTR [rbp+0x24],eax
  41219e:	jg     0x411f70
  4121a4:	movsxd rax,DWORD PTR [rbp+0x8]
  4121a8:	test   eax,eax
  4121aa:	jle    0x4121c0
  4121ac:	mov    rdx,QWORD PTR [r13+0x0]
  4121b0:	lea    rcx,[rbx+0x50]
  4121b4:	xor    r8d,r8d
  4121b7:	lea    rdx,[rdx+rax*8]
  4121bb:	call   0x4106a0
  4121c0:	mov    rsi,QWORD PTR [rbx]
  4121c3:	test   rsi,rsi
  4121c6:	je     0x4121f9
  4121c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4121d0:	mov    rdx,QWORD PTR [rsi]
  4121d3:	mov    rax,QWORD PTR [rdx+0x58]
  4121d7:	test   rax,rax
  4121da:	je     0x4121f0
  4121dc:	mov    r9,r12
  4121df:	mov    r8,QWORD PTR [rdx+0x20]
  4121e3:	mov    rcx,rbx
  4121e6:	call   rax
  4121e8:	test   eax,eax
  4121ea:	je     0x412024
  4121f0:	mov    rsi,QWORD PTR [rsi+0x8]
  4121f4:	test   rsi,rsi
  4121f7:	jne    0x4121d0
  4121f9:	mov    rdx,QWORD PTR [rbx+0x40]
  4121fd:	test   rdx,rdx
  412200:	je     0x41221f
  412202:	mov    rax,QWORD PTR [rdx+0x58]
  412206:	test   rax,rax
  412209:	je     0x41221f
  41220b:	mov    r9,r12
  41220e:	mov    r8,QWORD PTR [rdx+0x20]
  412212:	mov    rcx,rbx
  412215:	call   rax
  412217:	test   eax,eax
  412219:	je     0x412024
  41221f:	cmp    BYTE PTR [rbp+0x3],0x0
  412223:	jne    0x412711
  412229:	mov    eax,0x1
  41222e:	jmp    0x4120d8
  412233:	lea    rcx,[rbx+0x50]
  412237:	xor    r8d,r8d
  41223a:	call   0x4106a0
  41223f:	movsxd rdx,DWORD PTR [rbp+0x24]
  412243:	mov    rax,QWORD PTR [r13+0x0]
  412247:	mov    rcx,rbx
  41224a:	add    rdi,QWORD PTR [rsi+0x40]
  41224e:	mov    r9,QWORD PTR [rax+rdx*8]
  412252:	lea    rax,[rip+0x2d704]        # 0x43f95d
  412259:	lea    rdx,[rsi+0x20]
  41225d:	mov    r8,rdi
  412260:	mov    QWORD PTR [rsp+0x28],r12
  412265:	mov    QWORD PTR [rsp+0x20],rax
  41226a:	call   0x4106e0
  41226f:	test   eax,eax
  412271:	je     0x412024
  412277:	mov    edx,DWORD PTR [rbp+0x24]
  41227a:	jmp    0x412195
  41227f:	nop
  412280:	xor    edi,edi
  412282:	jmp    0x411ff2
  412287:	nop    WORD PTR [rax+rax*1+0x0]
  412290:	movzx  ecx,BYTE PTR [r15+0x1]
  412295:	test   cl,cl
  412297:	je     0x411f92
  41229d:	mov    r9d,DWORD PTR [rbp+0x4]
  4122a1:	test   r9d,r9d
  4122a4:	jne    0x411f92
  4122aa:	cmp    cl,0x2d
  4122ad:	je     0x412369
  4122b3:	mov    rdx,QWORD PTR [rbx+0x40]
  4122b7:	mov    rcx,QWORD PTR [rbx]
  4122ba:	mov    DWORD PTR [rbp+0x2c],eax
  4122bd:	call   0x410200
  4122c2:	lea    rcx,[r15+0x1]
  4122c6:	mov    DWORD PTR [rbp-0x1c],eax
  4122c9:	call   0x438788
  4122ce:	movsxd r8,eax
  4122d1:	mov    DWORD PTR [rbp-0x8],eax
  4122d4:	mov    QWORD PTR [rbp-0x18],rax
  4122d8:	shl    r8,0x2
  4122dc:	lea    rax,[r8+0x1e]
  4122e0:	and    rax,0xfffffffffffffff0
  4122e4:	call   0x4340c0
  4122e9:	xor    edx,edx
  4122eb:	sub    rsp,rax
  4122ee:	lea    rax,[rsp+0x50]
  4122f3:	mov    rcx,rax
  4122f6:	mov    QWORD PTR [rbp-0x28],rax
  4122fa:	call   0x4387e0
  4122ff:	mov    r9,QWORD PTR [rbp-0x18]
  412303:	test   r9d,r9d
  412306:	jle    0x4127bb
  41230c:	movzx  edx,BYTE PTR [rbx+0x38]
  412310:	xor    esi,esi
  412312:	and    edx,0x1
  412315:	je     0x412420
  41231b:	movzx  eax,BYTE PTR [r15+rsi*1+0x1]
  412321:	cmp    al,0x3f
  412323:	je     0x412338
  412325:	cmp    al,0x68
  412327:	jne    0x412420
  41232d:	mov    edi,DWORD PTR [rbp-0x1c]
  412330:	test   edi,edi
  412332:	jne    0x412420
  412338:	xor    r8d,r8d
  41233b:	mov    edx,0x1
  412340:	mov    rcx,rbx
  412343:	call   0x439680
  412348:	nop    DWORD PTR [rax+rax*1+0x0]
  412350:	movsxd rax,DWORD PTR [rbp+0x24]
  412354:	mov    rdx,rax
  412357:	mov    rax,QWORD PTR [r8+rax*8]
  41235b:	cmp    BYTE PTR [rax],0x2d
  41235e:	jne    0x412195
  412364:	jmp    0x41218e
  412369:	cmp    BYTE PTR [r15+0x2],0x0
  41236e:	je     0x41269a
  412374:	test   BYTE PTR [rbx+0x38],0x1
  412378:	lea    rax,[r15+0x2]
  41237c:	mov    QWORD PTR [rbp-0x8],rax
  412380:	je     0x412550
  412386:	lea    rdi,[rip+0x2d8e4]        # 0x43fc71
  41238d:	mov    ecx,0x5
  412392:	mov    rsi,rax
  412395:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412397:	je     0x412338
  412399:	mov    rsi,QWORD PTR [rbp-0x8]
  41239d:	lea    rdi,[rip+0x2d8d4]        # 0x43fc78
  4123a4:	mov    ecx,0x9
  4123a9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4123ab:	je     0x4129d6
  4123b1:	mov    rsi,QWORD PTR [rbp-0x8]
  4123b5:	lea    rdi,[rip+0x2d91c]        # 0x43fcd8
  4123bc:	mov    ecx,0x5
  4123c1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4123c3:	jne    0x412550
  4123c9:	mov    rax,QWORD PTR [rbx]
  4123cc:	test   rax,rax
  4123cf:	mov    QWORD PTR [rbp-0x18],rax
  4123d3:	mov    rsi,rax
  4123d6:	je     0x4127cf
  4123dc:	add    r15,0x7
  4123e0:	mov    rdi,QWORD PTR [rsi]
  4123e3:	mov    rcx,r15
  4123e6:	mov    rdx,QWORD PTR [rdi]
  4123e9:	call   0x4387a0
  4123ee:	test   eax,eax
  4123f0:	je     0x4129c9
  4123f6:	mov    rsi,QWORD PTR [rsi+0x8]
  4123fa:	test   rsi,rsi
  4123fd:	jne    0x4123e0
  4123ff:	mov    rdx,QWORD PTR [rbx+0x40]
  412403:	test   rdx,rdx
  412406:	jne    0x41255d
  41240c:	mov    rsi,QWORD PTR [rbp-0x18]
  412410:	mov    rdi,QWORD PTR [rbp-0x8]
  412414:	mov    r15,QWORD PTR [rbp+0x18]
  412418:	jmp    0x4126da
  41241d:	nop    DWORD PTR [rax]
  412420:	mov    rdx,QWORD PTR [rbx+0x40]
  412424:	mov    DWORD PTR [rbp+0x28],0x0
  41242b:	test   rdx,rdx
  41242e:	je     0x4125b0
  412434:	mov    rax,QWORD PTR [rbp+0x18]
  412438:	mov    QWORD PTR [rsp+0x38],r12
  41243d:	mov    rcx,rbx
  412440:	mov    QWORD PTR [rsp+0x30],r13
  412445:	mov    QWORD PTR [rsp+0x28],r14
  41244a:	mov    r9,QWORD PTR [rbp+0x10]
  41244e:	mov    r8d,DWORD PTR [rbp+0x24]
  412452:	mov    QWORD PTR [rsp+0x40],rax
  412457:	movsx  eax,BYTE PTR [r15+rsi*1+0x1]
  41245d:	mov    DWORD PTR [rsp+0x20],eax
  412461:	call   0x411030
  412466:	test   eax,eax
  412468:	je     0x412024
  41246e:	mov    r11d,DWORD PTR [rbp+0x28]
  412472:	test   r11d,r11d
  412475:	je     0x4125b0
  41247b:	movzx  eax,BYTE PTR [rbx+0x38]
  41247f:	test   al,0x2
  412481:	mov    edx,eax
  412483:	je     0x41262f
  412489:	mov    rdi,QWORD PTR [rbp-0x28]
  41248d:	mov    DWORD PTR [rdi+rsi*4],0x1
  412494:	add    rsi,0x1
  412498:	cmp    DWORD PTR [rbp-0x8],esi
  41249b:	jg     0x412312
  4124a1:	test   al,0x2
  4124a3:	je     0x4128f0
  4124a9:	mov    edi,DWORD PTR [rbp-0x8]
  4124ac:	mov    QWORD PTR [rbp+0x98],r12
  4124b3:	xor    edx,edx
  4124b5:	xor    r9d,r9d
  4124b8:	mov    QWORD PTR [rbp+0x90],r13
  4124bf:	xor    eax,eax
  4124c1:	mov    r13,rbx
  4124c4:	mov    ebx,r9d
  4124c7:	lea    esi,[rdi+0x1]
  4124ca:	mov    rdi,rdx
  4124cd:	movsxd rsi,esi
  4124d0:	mov    r12,rsi
  4124d3:	mov    rsi,QWORD PTR [rbp-0x28]
  4124d7:	mov    r8d,DWORD PTR [rsi+rdi*4]
  4124db:	test   r8d,r8d
  4124de:	jne    0x4124f8
  4124e0:	test   rax,rax
  4124e3:	je     0x412922
  4124e9:	movzx  ecx,BYTE PTR [r15+rdi*1+0x1]
  4124ef:	movsxd rdx,ebx
  4124f2:	add    ebx,0x1
  4124f5:	mov    BYTE PTR [rax+rdx*1],cl
  4124f8:	add    rdi,0x1
  4124fc:	cmp    DWORD PTR [rbp-0x8],edi
  4124ff:	jg     0x4124d7
  412501:	test   rax,rax
  412504:	movsxd r9,ebx
  412507:	mov    r12,QWORD PTR [rbp+0x98]
  41250e:	mov    rbx,r13
  412511:	mov    r8,rax
  412514:	mov    r13,QWORD PTR [rbp+0x90]
  41251b:	je     0x412522
  41251d:	mov    BYTE PTR [rax+r9*1],0x0
  412522:	mov    rsi,QWORD PTR [r13+0x0]
  412526:	movsxd rax,DWORD PTR [rbp+0x24]
  41252a:	lea    rcx,[rbx+0x50]
  41252e:	lea    rdx,[rsi+rax*8]
  412532:	call   0x4106a0
  412537:	movsxd rdx,DWORD PTR [rbp+0x24]
  41253b:	mov    eax,DWORD PTR [rbp+0x28]
  41253e:	test   eax,eax
  412540:	jne    0x412195
  412546:	movzx  eax,BYTE PTR [rbx+0x38]
  41254a:	jmp    0x412686
  41254f:	nop
  412550:	mov    rdx,QWORD PTR [rbx+0x40]
  412554:	test   rdx,rdx
  412557:	je     0x4126ac
  41255d:	mov    rax,QWORD PTR [rbp+0x18]
  412561:	mov    r9,QWORD PTR [rbp-0x8]
  412565:	mov    rcx,rbx
  412568:	mov    r8,QWORD PTR [rbp-0x10]
  41256c:	mov    QWORD PTR [rsp+0x38],r12
  412571:	mov    QWORD PTR [rsp+0x30],r13
  412576:	mov    QWORD PTR [rsp+0x28],r14
  41257b:	mov    QWORD PTR [rsp+0x40],rax
  412580:	mov    DWORD PTR [rsp+0x20],0x0
  412588:	call   0x410ca0
  41258d:	test   eax,eax
  41258f:	je     0x412024
  412595:	mov    eax,DWORD PTR [rbp+0x28]
  412598:	test   eax,eax
  41259a:	je     0x4126ac
  4125a0:	mov    eax,DWORD PTR [rbp+0x8]
  4125a3:	mov    DWORD PTR [rbp+0x4],0x0
  4125aa:	jmp    0x4126a1
  4125af:	nop
  4125b0:	mov    rdi,QWORD PTR [rbx]
  4125b3:	test   rdi,rdi
  4125b6:	jne    0x4125da
  4125b8:	jmp    0x412618
  4125ba:	nop    WORD PTR [rax+rax*1+0x0]
  4125c0:	mov    r10d,DWORD PTR [rbp+0x28]
  4125c4:	test   r10d,r10d
  4125c7:	jne    0x41247b
  4125cd:	mov    rdi,QWORD PTR [rdi+0x8]
  4125d1:	test   rdi,rdi
  4125d4:	je     0x412674
  4125da:	mov    rax,QWORD PTR [rbp+0x18]
  4125de:	mov    QWORD PTR [rsp+0x38],r12
  4125e3:	mov    rcx,rbx
  4125e6:	mov    QWORD PTR [rsp+0x30],r13
  4125eb:	mov    QWORD PTR [rsp+0x28],r14
  4125f0:	mov    r9,QWORD PTR [rbp+0x10]
  4125f4:	mov    r8d,DWORD PTR [rbp+0x24]
  4125f8:	mov    QWORD PTR [rsp+0x40],rax
  4125fd:	movsx  eax,BYTE PTR [r15+rsi*1+0x1]
  412603:	mov    DWORD PTR [rsp+0x20],eax
  412607:	mov    rdx,QWORD PTR [rdi]
  41260a:	call   0x411030
  41260f:	test   eax,eax
  412611:	jne    0x4125c0
  412613:	jmp    0x412024
  412618:	movzx  eax,BYTE PTR [rbx+0x38]
  41261c:	test   al,0x2
  41261e:	mov    edx,eax
  412620:	jne    0x412494
  412626:	mov    r9d,DWORD PTR [rbp+0x28]
  41262a:	test   r9d,r9d
  41262d:	je     0x412682
  41262f:	add    rsi,0x1
  412633:	cmp    DWORD PTR [rbp-0x8],esi
  412636:	mov    edx,eax
  412638:	jg     0x412312
  41263e:	jmp    0x4124a1
  412643:	test   r14,r14
  412646:	je     0x412659
  412648:	test   r13,r13
  41264b:	je     0x412659
  41264d:	mov    r10d,DWORD PTR [r14]
  412650:	test   r10d,r10d
  412653:	jne    0x412796
  412659:	lea    rcx,[rip+0x2d66e]        # 0x43fcce
  412660:	xor    esi,esi
  412662:	call   0x425340
  412667:	mov    rcx,rsi
  41266a:	call   0x40e6e0
  41266f:	jmp    0x411eb5
  412674:	movzx  eax,BYTE PTR [rbx+0x38]
  412678:	test   al,0x2
  41267a:	mov    edx,eax
  41267c:	jne    0x412494
  412682:	movsxd rdx,DWORD PTR [rbp+0x24]
  412686:	test   al,0x2
  412688:	je     0x4128ba
  41268e:	mov    DWORD PTR [rbp+0xc],0x1
  412695:	jmp    0x412195
  41269a:	mov    DWORD PTR [rbp+0x4],0x1
  4126a1:	mov    edx,DWORD PTR [rbp+0x24]
  4126a4:	mov    DWORD PTR [rbp+0x8],eax
  4126a7:	jmp    0x412195
  4126ac:	mov    rsi,QWORD PTR [rbx]
  4126af:	test   rsi,rsi
  4126b2:	je     0x41293b
  4126b8:	mov    rdi,QWORD PTR [rbp-0x8]
  4126bc:	mov    r15,QWORD PTR [rbp+0x18]
  4126c0:	jmp    0x4126da
  4126c2:	mov    eax,DWORD PTR [rbp+0x28]
  4126c5:	test   eax,eax
  4126c7:	jne    0x4125a0
  4126cd:	mov    rsi,QWORD PTR [rsi+0x8]
  4126d1:	test   rsi,rsi
  4126d4:	je     0x4127dc
  4126da:	mov    QWORD PTR [rsp+0x40],r15
  4126df:	mov    QWORD PTR [rsp+0x38],r12
  4126e4:	mov    r9,rdi
  4126e7:	mov    QWORD PTR [rsp+0x30],r13
  4126ec:	mov    QWORD PTR [rsp+0x28],r14
  4126f1:	mov    rcx,rbx
  4126f4:	mov    DWORD PTR [rsp+0x20],0x0
  4126fc:	mov    r8,QWORD PTR [rbp-0x10]
  412700:	mov    rdx,QWORD PTR [rsi]
  412703:	call   0x410ca0
  412708:	test   eax,eax
  41270a:	jne    0x4126c2
  41270c:	jmp    0x412024
  412711:	lea    rcx,[rbx+0x50]
  412715:	mov    edx,0x1
  41271a:	mov    ebx,0x8
  41271f:	call   0x410310
  412724:	mov    r9d,DWORD PTR [r14]
  412727:	mov    DWORD PTR [rbp+0x24],0x1
  41272e:	mov    r11d,0x1
  412734:	cmp    r9d,0x1
  412738:	jle    0x412229
  41273e:	xchg   ax,ax
  412740:	mov    r8,QWORD PTR [r13+0x0]
  412744:	mov    eax,r11d
  412747:	lea    rdx,[r8+rbx*1]
  41274b:	nop    DWORD PTR [rax+rax*1+0x0]
  412750:	mov    rcx,QWORD PTR [rdx]
  412753:	test   rcx,rcx
  412756:	jne    0x412781
  412758:	add    eax,0x1
  41275b:	add    rdx,0x8
  41275f:	cmp    eax,r9d
  412762:	jl     0x412750
  412764:	sub    eax,r11d
  412767:	mov    esi,eax
  412769:	sub    r9d,esi
  41276c:	mov    DWORD PTR [r14],r9d
  41276f:	add    r11d,0x1
  412773:	add    rbx,0x8
  412777:	cmp    r11d,r9d
  41277a:	jl     0x412740
  41277c:	jmp    0x412229
  412781:	cmp    r11d,eax
  412784:	jl     0x412961
  41278a:	mov    r9d,DWORD PTR [r14]
  41278d:	jmp    0x41276f
  41278f:	xor    ecx,ecx
  412791:	jmp    0x4120be
  412796:	mov    rax,QWORD PTR [r13+0x0]
  41279a:	mov    rcx,QWORD PTR [rax]
  41279d:	call   0x407ca0
  4127a2:	test   rax,rax
  4127a5:	mov    rsi,rax
  4127a8:	je     0x412659
  4127ae:	mov    rcx,rax
  4127b1:	call   0x425340
  4127b6:	jmp    0x412667
  4127bb:	movzx  eax,BYTE PTR [rbx+0x38]
  4127bf:	xor    r8d,r8d
  4127c2:	test   al,0x2
  4127c4:	jne    0x412526
  4127ca:	jmp    0x412682
  4127cf:	mov    rdx,QWORD PTR [rbx+0x40]
  4127d3:	test   rdx,rdx
  4127d6:	jne    0x41255d
  4127dc:	mov    rcx,QWORD PTR [rbp-0x8]
  4127e0:	mov    edx,0x2d
  4127e5:	call   0x4387a8
  4127ea:	test   rax,rax
  4127ed:	je     0x4128a1
  4127f3:	mov    r15,QWORD PTR [rbx]
  4127f6:	test   r15,r15
  4127f9:	je     0x412952
  4127ff:	mov    rdi,QWORD PTR [rbp-0x8]
  412803:	mov    rsi,rax
  412806:	add    rax,0x1
  41280a:	mov    QWORD PTR [rbp-0x8],rax
  41280e:	mov    QWORD PTR [rbp+0x80],rbx
  412815:	sub    rsi,rdi
  412818:	jmp    0x412829
  41281a:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	mov    r15,QWORD PTR [r15+0x8]
  412824:	test   r15,r15
  412827:	je     0x41289a
  412829:	mov    rbx,QWORD PTR [r15]
  41282c:	mov    r8,rsi
  41282f:	mov    rdx,rdi
  412832:	mov    rcx,QWORD PTR [rbx]
  412835:	call   0x438780
  41283a:	test   eax,eax
  41283c:	jne    0x412820
  41283e:	mov    rax,QWORD PTR [rbp+0x18]
  412842:	mov    r9,QWORD PTR [rbp-0x8]
  412846:	mov    rdx,rbx
  412849:	mov    r8,QWORD PTR [rbp-0x10]
  41284d:	mov    rcx,QWORD PTR [rbp+0x80]
  412854:	mov    QWORD PTR [rsp+0x38],r12
  412859:	mov    QWORD PTR [rsp+0x30],r13
  41285e:	mov    QWORD PTR [rsp+0x40],rax
  412863:	mov    QWORD PTR [rsp+0x28],r14
  412868:	mov    DWORD PTR [rsp+0x20],0x1
  412870:	call   0x410ca0
  412875:	test   eax,eax
  412877:	je     0x41292f
  41287d:	mov    eax,DWORD PTR [rbp+0x28]
  412880:	test   eax,eax
  412882:	je     0x412820
  412884:	mov    rbx,QWORD PTR [rbp+0x80]
  41288b:	test   BYTE PTR [rbx+0x38],0x2
  41288f:	jne    0x4125a0
  412895:	jmp    0x412277
  41289a:	mov    rbx,QWORD PTR [rbp+0x80]
  4128a1:	test   BYTE PTR [rbx+0x38],0x2
  4128a5:	jne    0x4125a0
  4128ab:	mov    eax,DWORD PTR [rbp+0x28]
  4128ae:	test   eax,eax
  4128b0:	jne    0x412277
  4128b6:	movsxd rdx,DWORD PTR [rbp+0x24]
  4128ba:	mov    rax,QWORD PTR [r13+0x0]
  4128be:	lea    rcx,[rip+0x2d0ba]        # 0x43f97f
  4128c5:	mov    rsi,QWORD PTR [rax+rdx*8]
  4128c9:	call   0x42fc00
  4128ce:	lea    r9,[rip+0x2d409]        # 0x43fcde
  4128d5:	xor    r8d,r8d
  4128d8:	mov    edx,eax
  4128da:	mov    QWORD PTR [rsp+0x20],rsi
  4128df:	mov    rcx,r12
  4128e2:	call   0x430630
  4128e7:	jmp    0x412024
  4128ec:	nop    DWORD PTR [rax+0x0]
  4128f0:	mov    edx,DWORD PTR [rbp+0x28]
  4128f3:	test   edx,edx
  4128f5:	je     0x412682
  4128fb:	movsxd rdx,DWORD PTR [rbp+0x24]
  4128ff:	mov    rax,QWORD PTR [r13+0x0]
  412903:	lea    rcx,[rbx+0x50]
  412907:	xor    r8d,r8d
  41290a:	lea    rdx,[rax+rdx*8]
  41290e:	call   0x4106a0
  412913:	movsxd rdx,DWORD PTR [rbp+0x2c]
  412917:	mov    eax,DWORD PTR [rbp+0x28]
  41291a:	mov    DWORD PTR [rbp+0x24],edx
  41291d:	jmp    0x41253e
  412922:	mov    rcx,r12
  412925:	call   0x40e5c0
  41292a:	jmp    0x4124e9
  41292f:	mov    rbx,QWORD PTR [rbp+0x80]
  412936:	jmp    0x412024
  41293b:	mov    rcx,QWORD PTR [rbp-0x8]
  41293f:	mov    edx,0x2d
  412944:	call   0x4387a8
  412949:	test   rax,rax
  41294c:	je     0x4128a1
  412952:	test   BYTE PTR [rbx+0x38],0x2
  412956:	jne    0x4125a0
  41295c:	jmp    0x4128b6
  412961:	mov    esi,eax
  412963:	sub    esi,r11d
  412966:	cmp    eax,r9d
  412969:	jge    0x412769
  41296f:	lea    r10d,[r9-0x1]
  412973:	movsxd rdi,eax
  412976:	lea    rdx,[rdi*8+0x0]
  41297e:	mov    r15d,r10d
  412981:	movsxd r10,esi
  412984:	sub    r15d,eax
  412987:	neg    r10
  41298a:	lea    rdi,[rdi+r15*1+0x1]
  41298f:	shl    r10,0x3
  412993:	shl    rdi,0x3
  412997:	jmp    0x4129a8
  412999:	nop    DWORD PTR [rax+0x0]
  4129a0:	mov    r8,QWORD PTR [r13+0x0]
  4129a4:	mov    rcx,QWORD PTR [r8+rdx*1]
  4129a8:	add    r8,r10
  4129ab:	mov    QWORD PTR [r8+rdx*1],rcx
  4129af:	mov    rax,QWORD PTR [r13+0x0]
  4129b3:	mov    QWORD PTR [rax+rdx*1],0x0
  4129bb:	add    rdx,0x8
  4129bf:	cmp    rdx,rdi
  4129c2:	jne    0x4129a0
  4129c4:	jmp    0x412769
  4129c9:	mov    r8,rdi
  4129cc:	xor    edx,edx
  4129ce:	mov    rcx,rbx
  4129d1:	call   0x439680
  4129d6:	xor    r8d,r8d
  4129d9:	xor    edx,edx
  4129db:	mov    rcx,rbx
  4129de:	call   0x439680
  4129e3:	nop
  4129e4:	xchg   ax,ax
  4129e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129f0:	push   r12
  4129f2:	push   rbp
  4129f3:	push   rdi
  4129f4:	push   rsi
  4129f5:	push   rbx
  4129f6:	sub    rsp,0x20
  4129fa:	mov    r12,rcx
  4129fd:	mov    ecx,0x68
  412a02:	mov    rbp,rdx
  412a05:	mov    rdi,r8
  412a08:	mov    rsi,r9
  412a0b:	call   0x40e610
  412a10:	mov    rcx,r12
  412a13:	mov    rbx,rax
  412a16:	call   0x4182b0
  412a1b:	mov    rcx,rbp
  412a1e:	mov    QWORD PTR [rbx],rax
  412a21:	call   0x4182b0
  412a26:	mov    rcx,rdi
  412a29:	mov    QWORD PTR [rbx+0x8],rax
  412a2d:	call   0x4182b0
  412a32:	mov    QWORD PTR [rbx+0x10],rax
  412a36:	mov    rax,QWORD PTR [rsp+0x70]
  412a3b:	mov    QWORD PTR [rbx+0x20],rsi
  412a3f:	mov    QWORD PTR [rbx+0x18],rax
  412a43:	mov    rax,rbx
  412a46:	add    rsp,0x20
  412a4a:	pop    rbx
  412a4b:	pop    rsi
  412a4c:	pop    rdi
  412a4d:	pop    rbp
  412a4e:	pop    r12
  412a50:	ret    
  412a51:	nop    DWORD PTR [rax+rax*1+0x0]
  412a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a60:	push   r12
  412a62:	push   rbp
  412a63:	push   rdi
  412a64:	push   rsi
  412a65:	push   rbx
  412a66:	sub    rsp,0x40
  412a6a:	test   rdx,rdx
  412a6d:	mov    rsi,rcx
  412a70:	je     0x412c40
  412a76:	cmp    QWORD PTR [rdx],0x0
  412a7a:	je     0x412c64
  412a80:	mov    ebx,0x30
  412a85:	xor    ebp,ebp
  412a87:	jmp    0x412a93
  412a89:	nop    DWORD PTR [rax+0x0]
  412a90:	mov    rbx,rax
  412a93:	lea    rax,[rbx+0x30]
  412a97:	add    ebp,0x1
  412a9a:	cmp    QWORD PTR [rdx+rax*1-0x30],0x0
  412aa0:	jne    0x412a90
  412aa2:	mov    eax,DWORD PTR [rsi+0x48]
  412aa5:	mov    rcx,QWORD PTR [rsi+0x40]
  412aa9:	add    eax,ebp
  412aab:	cdqe   
  412aad:	mov    rdi,rdx
  412ab0:	mov    r8d,0x30
  412ab6:	mov    rdx,rax
  412ab9:	call   0x40e860
  412abe:	movsxd rdx,DWORD PTR [rsi+0x48]
  412ac2:	mov    QWORD PTR [rsi+0x40],rax
  412ac6:	mov    r8,rbx
  412ac9:	lea    rcx,[rdx+rdx*2]
  412acd:	mov    rdx,rdi
  412ad0:	shl    rcx,0x4
  412ad4:	add    rcx,rax
  412ad7:	call   0x4387f0
  412adc:	mov    edi,DWORD PTR [rsi+0x48]
  412adf:	lea    eax,[rbp+rdi*1+0x0]
  412ae3:	cmp    edi,eax
  412ae5:	jge    0x412bf1
  412aeb:	movsxd rax,edi
  412aee:	mov    rcx,QWORD PTR [rsi+0x40]
  412af2:	mov    r12,QWORD PTR [rip+0x69047]        # 0x47bb40
  412af9:	lea    rbx,[rax+rax*2]
  412afd:	shl    rbx,0x4
  412b01:	jmp    0x412b2a
  412b03:	test   BYTE PTR [rax+0xc],0x4
  412b07:	jne    0x412c00
  412b0d:	cmp    edx,0x3
  412b10:	jne    0x412b9a
  412b16:	mov    eax,DWORD PTR [rsi+0x48]
  412b19:	add    edi,0x1
  412b1c:	add    rbx,0x30
  412b20:	add    eax,ebp
  412b22:	cmp    eax,edi
  412b24:	jle    0x412bf1
  412b2a:	lea    rax,[rcx+rbx*1]
  412b2e:	movzx  r9d,BYTE PTR [rax+0x8]
  412b33:	cmp    r9b,0x2d
  412b37:	je     0x412b4d
  412b39:	test   r9b,r9b
  412b3c:	je     0x412b8f
  412b3e:	mov    r8,QWORD PTR [r12]
  412b42:	movzx  edx,r9b
  412b46:	test   BYTE PTR [r8+rdx*2],0x40
  412b4b:	jne    0x412b8f
  412b4d:	mov    rax,QWORD PTR [rax]
  412b50:	movsx  r9d,r9b
  412b54:	lea    rcx,[rip+0x2cdf3]        # 0x43f94e
  412b5b:	lea    r8,[rip+0x2d256]        # 0x43fdb8
  412b62:	mov    DWORD PTR [rsp+0x20],r9d
  412b67:	mov    edx,0x10
  412b6c:	mov    QWORD PTR [rsp+0x30],rax
  412b71:	mov    rax,QWORD PTR [rsi]
  412b74:	mov    QWORD PTR [rsp+0x28],rax
  412b79:	call   0x40fae0
  412b7e:	mov    rax,QWORD PTR [rsi+0x40]
  412b82:	mov    BYTE PTR [rax+rbx*1+0x8],0x0
  412b87:	mov    rcx,QWORD PTR [rsi+0x40]
  412b8b:	lea    rax,[rcx+rbx*1]
  412b8f:	mov    edx,DWORD PTR [rax+0x10]
  412b92:	test   edx,edx
  412b94:	jne    0x412b03
  412b9a:	mov    r9d,DWORD PTR [rax+0xc]
  412b9e:	test   r9b,0x38
  412ba2:	je     0x412b16
  412ba8:	mov    rax,QWORD PTR [rax]
  412bab:	lea    rcx,[rip+0x2cd9c]        # 0x43f94e
  412bb2:	lea    r8,[rip+0x2d337]        # 0x43fef0
  412bb9:	mov    DWORD PTR [rsp+0x20],edx
  412bbd:	mov    edx,0x10
  412bc2:	add    edi,0x1
  412bc5:	mov    QWORD PTR [rsp+0x30],rax
  412bca:	mov    rax,QWORD PTR [rsi]
  412bcd:	mov    QWORD PTR [rsp+0x28],rax
  412bd2:	call   0x40fae0
  412bd7:	mov    eax,DWORD PTR [rsi+0x48]
  412bda:	mov    rcx,QWORD PTR [rsi+0x40]
  412bde:	add    eax,ebp
  412be0:	and    DWORD PTR [rcx+rbx*1+0xc],0xffffffc7
  412be5:	add    rbx,0x30
  412be9:	cmp    eax,edi
  412beb:	jg     0x412b2a
  412bf1:	mov    DWORD PTR [rsi+0x48],eax
  412bf4:	add    rsp,0x40
  412bf8:	pop    rbx
  412bf9:	pop    rsi
  412bfa:	pop    rdi
  412bfb:	pop    rbp
  412bfc:	pop    r12
  412bfe:	ret    
  412bff:	nop
  412c00:	mov    rax,QWORD PTR [rax]
  412c03:	lea    rcx,[rip+0x2cd44]        # 0x43f94e
  412c0a:	lea    r8,[rip+0x2d23f]        # 0x43fe50
  412c11:	mov    r9d,edx
  412c14:	mov    edx,0x10
  412c19:	mov    QWORD PTR [rsp+0x28],rax
  412c1e:	mov    rax,QWORD PTR [rsi]
  412c21:	mov    QWORD PTR [rsp+0x20],rax
  412c26:	call   0x40fae0
  412c2b:	mov    rcx,QWORD PTR [rsi+0x40]
  412c2f:	lea    rax,[rcx+rbx*1]
  412c33:	and    DWORD PTR [rax+0xc],0xfffffffb
  412c37:	mov    edx,DWORD PTR [rax+0x10]
  412c3a:	jmp    0x412b0d
  412c3f:	nop
  412c40:	lea    r8,[rip+0x2d364]        # 0x43ffab
  412c47:	lea    rdx,[rip+0x2d562]        # 0x4401b0
  412c4e:	lea    rcx,[rip+0x2ccf9]        # 0x43f94e
  412c55:	add    rsp,0x40
  412c59:	pop    rbx
  412c5a:	pop    rsi
  412c5b:	pop    rdi
  412c5c:	pop    rbp
  412c5d:	pop    r12
  412c5f:	jmp    0x40fd20
  412c64:	movsxd rax,DWORD PTR [rcx+0x48]
  412c68:	xor    ebx,ebx
  412c6a:	mov    rcx,QWORD PTR [rcx+0x40]
  412c6e:	xor    ebp,ebp
  412c70:	jmp    0x412aad
  412c75:	nop
  412c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412c80:	test   rcx,rcx
  412c83:	je     0x412c90
  412c85:	mov    QWORD PTR [rcx+0x50],rdx
  412c89:	mov    QWORD PTR [rcx+0x58],r8
  412c8d:	ret    
  412c8e:	xchg   ax,ax
  412c90:	lea    r8,[rip+0x2cca9]        # 0x43f940
  412c97:	lea    rdx,[rip+0x2d4f2]        # 0x440190
  412c9e:	lea    rcx,[rip+0x2cca9]        # 0x43f94e
  412ca5:	jmp    0x40fd20
  412caa:	nop    WORD PTR [rax+rax*1+0x0]
  412cb0:	test   rcx,rcx
  412cb3:	je     0x412cc0
  412cb5:	mov    QWORD PTR [rcx+0x60],rdx
  412cb9:	ret    
  412cba:	nop    WORD PTR [rax+rax*1+0x0]
  412cc0:	lea    r8,[rip+0x2cc79]        # 0x43f940
  412cc7:	lea    rdx,[rip+0x2d4a2]        # 0x440170
  412cce:	lea    rcx,[rip+0x2cc79]        # 0x43f94e
  412cd5:	jmp    0x40fd20
  412cda:	nop    WORD PTR [rax+rax*1+0x0]
  412ce0:	push   rbp
  412ce1:	push   rdi
  412ce2:	push   rsi
  412ce3:	push   rbx
  412ce4:	sub    rsp,0x28
  412ce8:	test   rcx,rcx
  412ceb:	je     0x412d20
  412ced:	mov    rax,QWORD PTR [rcx+0x30]
  412cf1:	mov    rbp,r9
  412cf4:	mov    rdi,r8
  412cf7:	mov    rsi,rdx
  412cfa:	mov    rbx,rcx
  412cfd:	test   rax,rax
  412d00:	je     0x412d08
  412d02:	mov    rcx,QWORD PTR [rbx+0x38]
  412d06:	call   rax
  412d08:	mov    QWORD PTR [rbx+0x28],rsi
  412d0c:	mov    QWORD PTR [rbx+0x38],rdi
  412d10:	mov    QWORD PTR [rbx+0x30],rbp
  412d14:	add    rsp,0x28
  412d18:	pop    rbx
  412d19:	pop    rsi
  412d1a:	pop    rdi
  412d1b:	pop    rbp
  412d1c:	ret    
  412d1d:	nop    DWORD PTR [rax]
  412d20:	lea    r8,[rip+0x2cc19]        # 0x43f940
  412d27:	lea    rdx,[rip+0x2d412]        # 0x440140
  412d2e:	lea    rcx,[rip+0x2cc19]        # 0x43f94e
  412d35:	add    rsp,0x28
  412d39:	pop    rbx
  412d3a:	pop    rsi
  412d3b:	pop    rdi
  412d3c:	pop    rbp
  412d3d:	jmp    0x40fd20
  412d42:	nop    DWORD PTR [rax+0x0]
  412d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d50:	push   rbx
  412d51:	sub    rsp,0x20
  412d55:	test   rcx,rcx
  412d58:	mov    rax,rcx
  412d5b:	je     0x412d90
  412d5d:	mov    rcx,rdx
  412d60:	mov    rbx,rax
  412d63:	call   0x4182b0
  412d68:	lea    r9,[rip+0xffffffffffffb971]        # 0x40e6e0
  412d6f:	lea    rdx,[rip+0xffffffffffffd40a]        # 0x410180
  412d76:	mov    r8,rax
  412d79:	mov    rcx,rbx
  412d7c:	add    rsp,0x20
  412d80:	pop    rbx
  412d81:	jmp    0x412ce0
  412d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d90:	lea    r8,[rip+0x2cba9]        # 0x43f940
  412d97:	lea    rdx,[rip+0x2d362]        # 0x440100
  412d9e:	lea    rcx,[rip+0x2cba9]        # 0x43f94e
  412da5:	add    rsp,0x20
  412da9:	pop    rbx
  412daa:	jmp    0x40fd20
  412daf:	nop
  412db0:	push   rdi
  412db1:	push   rsi
  412db2:	push   rbx
  412db3:	sub    rsp,0x30
  412db7:	test   rdx,rdx
  412dba:	je     0x412df0
  412dbc:	mov    rsi,rcx
  412dbf:	mov    rcx,QWORD PTR [rcx+0x40]
  412dc3:	mov    rdi,r8
  412dc6:	mov    rbx,rdx
  412dc9:	test   rcx,rcx
  412dcc:	je     0x412e11
  412dce:	mov    rdx,rbx
  412dd1:	call   0x412a60
  412dd6:	mov    rcx,QWORD PTR [rsi+0x40]
  412dda:	mov    rdx,rdi
  412ddd:	add    rsp,0x30
  412de1:	pop    rbx
  412de2:	pop    rsi
  412de3:	pop    rdi
  412de4:	jmp    0x412d50
  412de9:	nop    DWORD PTR [rax+0x0]
  412df0:	lea    r8,[rip+0x2d1b4]        # 0x43ffab
  412df7:	lea    rdx,[rip+0x2d442]        # 0x440240
  412dfe:	lea    rcx,[rip+0x2cb49]        # 0x43f94e
  412e05:	add    rsp,0x30
  412e09:	pop    rbx
  412e0a:	pop    rsi
  412e0b:	pop    rdi
  412e0c:	jmp    0x40fd20
  412e11:	xor    ecx,ecx
  412e13:	mov    QWORD PTR [rsp+0x20],0x0
  412e1c:	xor    r9d,r9d
  412e1f:	xor    r8d,r8d
  412e22:	xor    edx,edx
  412e24:	call   0x4129f0
  412e29:	mov    rcx,rax
  412e2c:	mov    QWORD PTR [rsi+0x40],rax
  412e30:	jmp    0x412dce
  412e32:	nop    DWORD PTR [rax+0x0]
  412e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e40:	push   rbp
  412e41:	push   rdi
  412e42:	push   rsi
  412e43:	push   rbx
  412e44:	sub    rsp,0x28
  412e48:	test   rcx,rcx
  412e4b:	je     0x412e80
  412e4d:	mov    rax,QWORD PTR [rcx+0x28]
  412e51:	mov    rbp,r9
  412e54:	mov    rdi,r8
  412e57:	mov    rsi,rdx
  412e5a:	mov    rbx,rcx
  412e5d:	test   rax,rax
  412e60:	je     0x412e68
  412e62:	mov    rcx,QWORD PTR [rbx+0x30]
  412e66:	call   rax
  412e68:	mov    QWORD PTR [rbx+0x20],rsi
  412e6c:	mov    QWORD PTR [rbx+0x30],rdi
  412e70:	mov    QWORD PTR [rbx+0x28],rbp
  412e74:	add    rsp,0x28
  412e78:	pop    rbx
  412e79:	pop    rsi
  412e7a:	pop    rdi
  412e7b:	pop    rbp
  412e7c:	ret    
  412e7d:	nop    DWORD PTR [rax]
  412e80:	lea    r8,[rip+0x2cc9c]        # 0x43fb23
  412e87:	lea    rdx,[rip+0x2d232]        # 0x4400c0
  412e8e:	lea    rcx,[rip+0x2cab9]        # 0x43f94e
  412e95:	add    rsp,0x28
  412e99:	pop    rbx
  412e9a:	pop    rsi
  412e9b:	pop    rdi
  412e9c:	pop    rbp
  412e9d:	jmp    0x40fd20
  412ea2:	nop    DWORD PTR [rax+0x0]
  412ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412eb0:	push   rbx
  412eb1:	sub    rsp,0x20
  412eb5:	test   rcx,rcx
  412eb8:	mov    rax,rcx
  412ebb:	je     0x412ef0
  412ebd:	mov    rcx,rdx
  412ec0:	mov    rbx,rax
  412ec3:	call   0x4182b0
  412ec8:	lea    r9,[rip+0xffffffffffffb811]        # 0x40e6e0
  412ecf:	lea    rdx,[rip+0xffffffffffffd2aa]        # 0x410180
  412ed6:	mov    r8,rax
  412ed9:	mov    rcx,rbx
  412edc:	add    rsp,0x20
  412ee0:	pop    rbx
  412ee1:	jmp    0x412e40
  412ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ef0:	lea    r8,[rip+0x2cc2c]        # 0x43fb23
  412ef7:	lea    rdx,[rip+0x2d182]        # 0x440080
  412efe:	lea    rcx,[rip+0x2ca49]        # 0x43f94e
  412f05:	add    rsp,0x20
  412f09:	pop    rbx
  412f0a:	jmp    0x40fd20
  412f0f:	nop
  412f10:	push   rsi
  412f11:	push   rbx
  412f12:	sub    rsp,0x28
  412f16:	test   rcx,rcx
  412f19:	je     0x412f40
  412f1b:	mov    rbx,rcx
  412f1e:	mov    rcx,QWORD PTR [rcx+0x10]
  412f22:	mov    rsi,rdx
  412f25:	call   0x40e6e0
  412f2a:	mov    rcx,rsi
  412f2d:	call   0x4182b0
  412f32:	mov    QWORD PTR [rbx+0x10],rax
  412f36:	add    rsp,0x28
  412f3a:	pop    rbx
  412f3b:	pop    rsi
  412f3c:	ret    
  412f3d:	nop    DWORD PTR [rax]
  412f40:	lea    r8,[rip+0x2cbdc]        # 0x43fb23
  412f47:	lea    rdx,[rip+0x2d102]        # 0x440050
  412f4e:	lea    rcx,[rip+0x2c9f9]        # 0x43f94e
  412f55:	add    rsp,0x28
  412f59:	pop    rbx
  412f5a:	pop    rsi
  412f5b:	jmp    0x40fd20
  412f60:	sub    rsp,0x28
  412f64:	test   rcx,rcx
  412f67:	je     0x412f72
  412f69:	mov    rax,QWORD PTR [rcx+0x10]
  412f6d:	add    rsp,0x28
  412f71:	ret    
  412f72:	lea    r8,[rip+0x2cbaa]        # 0x43fb23
  412f79:	lea    rdx,[rip+0x2d0b0]        # 0x440030
  412f80:	lea    rcx,[rip+0x2c9c7]        # 0x43f94e
  412f87:	call   0x40fd20
  412f8c:	xor    eax,eax
  412f8e:	add    rsp,0x28
  412f92:	ret    
  412f93:	nop    DWORD PTR [rax]
  412f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fa0:	push   rsi
  412fa1:	push   rbx
  412fa2:	sub    rsp,0x28
  412fa6:	test   rcx,rcx
  412fa9:	je     0x412fd0
  412fab:	mov    rbx,rcx
  412fae:	mov    rcx,QWORD PTR [rcx+0x18]
  412fb2:	mov    rsi,rdx
  412fb5:	call   0x40e6e0
  412fba:	mov    rcx,rsi
  412fbd:	call   0x4182b0
  412fc2:	mov    QWORD PTR [rbx+0x18],rax
  412fc6:	add    rsp,0x28
  412fca:	pop    rbx
  412fcb:	pop    rsi
  412fcc:	ret    
  412fcd:	nop    DWORD PTR [rax]
  412fd0:	lea    r8,[rip+0x2cb4c]        # 0x43fb23
  412fd7:	lea    rdx,[rip+0x2d022]        # 0x440000
  412fde:	lea    rcx,[rip+0x2c969]        # 0x43f94e
  412fe5:	add    rsp,0x28
  412fe9:	pop    rbx
  412fea:	pop    rsi
  412feb:	jmp    0x40fd20
  412ff0:	sub    rsp,0x28
  412ff4:	test   rcx,rcx
  412ff7:	je     0x413002
  412ff9:	mov    rax,QWORD PTR [rcx+0x18]
  412ffd:	add    rsp,0x28
  413001:	ret    
  413002:	lea    r8,[rip+0x2cb1a]        # 0x43fb23
  413009:	lea    rdx,[rip+0x2cfb0]        # 0x43ffc0
  413010:	lea    rcx,[rip+0x2c937]        # 0x43f94e
  413017:	call   0x40fd20
  41301c:	xor    eax,eax
  41301e:	add    rsp,0x28
  413022:	ret    
  413023:	nop
  413024:	nop
  413025:	nop
  413026:	nop
  413027:	nop
  413028:	nop
  413029:	nop
  41302a:	nop
  41302b:	nop
  41302c:	nop
  41302d:	nop
  41302e:	nop
  41302f:	nop
  413030:	push   r15
  413032:	push   r14
  413034:	push   r13
  413036:	push   r12
  413038:	push   rbp
  413039:	push   rdi
  41303a:	push   rsi
  41303b:	push   rbx
  41303c:	sub    rsp,0x48
  413040:	mov    ebp,DWORD PTR [rsp+0xb8]
  413047:	test   ecx,ecx
  413049:	mov    ebx,ecx
  41304b:	mov    r13,rdx
  41304e:	mov    edi,r8d
  413051:	mov    r12,r9
  413054:	je     0x413161
  41305a:	mov    r14,QWORD PTR [rip+0x68a8f]        # 0x47baf0
  413061:	mov    r9d,DWORD PTR [r14]
  413064:	test   r9d,r9d
  413067:	jne    0x413320
  41306d:	mov    DWORD PTR [rsp+0x20],0x2
  413075:	mov    r9d,0x4ff
  41307b:	mov    r8d,ebp
  41307e:	mov    rdx,r13
  413081:	mov    ecx,edi
  413083:	call   QWORD PTR [rip+0x73b37]        # 0x486bc0
  413089:	cmp    eax,0xffffffff
  41308c:	mov    esi,eax
  41308e:	je     0x4132b0
  413094:	mov    eax,DWORD PTR [r14]
  413097:	test   eax,eax
  413099:	jne    0x4131a0
  41309f:	cmp    esi,0xc0
  4130a5:	je     0x4131d9
  4130ab:	cmp    esi,0x102
  4130b1:	je     0x4131d9
  4130b7:	cmp    edi,esi
  4130b9:	jne    0x413240
  4130bf:	test   ebx,ebx
  4130c1:	je     0x413240
  4130c7:	mov    r10d,DWORD PTR [rsp+0xb0]
  4130cf:	mov    rax,r12
  4130d2:	shl    r10,0x4
  4130d6:	add    r10,r12
  4130d9:	cmp    r10,r12
  4130dc:	ja     0x4130e9
  4130de:	jmp    0x413110
  4130e0:	add    rax,0x10
  4130e4:	cmp    r10,rax
  4130e7:	jbe    0x413110
  4130e9:	cmp    QWORD PTR [rax],0x130e396
  4130f0:	jne    0x4130e0
  4130f2:	test   BYTE PTR [rax+0x8],0x1
  4130f6:	je     0x4130e0
  4130f8:	or     WORD PTR [rax+0xa],0x1
  4130fd:	add    rax,0x10
  413101:	cmp    r10,rax
  413104:	ja     0x4130e9
  413106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413110:	test   edi,edi
  413112:	je     0x413310
  413118:	test   ebp,ebp
  41311a:	jne    0x413310
  413120:	mov    eax,DWORD PTR [rsp+0xb0]
  413127:	xor    ecx,ecx
  413129:	mov    DWORD PTR [rsp+0x28],0x0
  413131:	mov    r9,r12
  413134:	mov    r8d,edi
  413137:	mov    rdx,r13
  41313a:	mov    DWORD PTR [rsp+0x20],eax
  41313e:	call   0x413030
  413143:	cmp    eax,0xffffffff
  413146:	je     0x413302
  41314c:	add    eax,0x1
  41314f:	nop
  413150:	add    rsp,0x48
  413154:	pop    rbx
  413155:	pop    rsi
  413156:	pop    rdi
  413157:	pop    rbp
  413158:	pop    r12
  41315a:	pop    r13
  41315c:	pop    r14
  41315e:	pop    r15
  413160:	ret    
  413161:	test   r8d,r8d
  413164:	jne    0x4131e0
  413166:	cmp    ebp,0xffffffff
  413169:	mov    r14,QWORD PTR [rip+0x68980]        # 0x47baf0
  413170:	je     0x4132e3
  413176:	mov    edx,0x1
  41317b:	mov    ecx,ebp
  41317d:	call   QWORD PTR [rip+0x7367d]        # 0x486800
  413183:	mov    r14,QWORD PTR [rip+0x68966]        # 0x47baf0
  41318a:	mov    eax,DWORD PTR [r14]
  41318d:	test   eax,eax
  41318f:	je     0x413150
  413191:	mov    esi,0x102
  413196:	lea    r8,[rip+0x2d28b]        # 0x440428
  41319d:	jmp    0x4131bf
  41319f:	nop
  4131a0:	cmp    esi,0x102
  4131a6:	je     0x413191
  4131a8:	cmp    edi,esi
  4131aa:	jne    0x413360
  4131b0:	test   ebx,ebx
  4131b2:	lea    r8,[rip+0x2d267]        # 0x440420
  4131b9:	je     0x413360
  4131bf:	lea    rcx,[rip+0x2d336]        # 0x4404fc
  4131c6:	mov    edx,esi
  4131c8:	call   0x40fef0
  4131cd:	cmp    esi,0xc0
  4131d3:	jne    0x4130ab
  4131d9:	xor    eax,eax
  4131db:	jmp    0x413150
  4131e0:	mov    r14,QWORD PTR [rip+0x68909]        # 0x47baf0
  4131e7:	mov    r8d,DWORD PTR [r14]
  4131ea:	test   r8d,r8d
  4131ed:	jne    0x413340
  4131f3:	xor    r8d,r8d
  4131f6:	mov    DWORD PTR [rsp+0x20],0x1
  4131fe:	mov    r9d,ebp
  413201:	mov    rdx,r13
  413204:	mov    ecx,edi
  413206:	call   QWORD PTR [rip+0x7363c]        # 0x486848
  41320c:	cmp    eax,0xffffffff
  41320f:	mov    esi,eax
  413211:	jne    0x413094
  413217:	call   QWORD PTR [rip+0x734cb]        # 0x4866e8
  41321d:	mov    ecx,eax
  41321f:	call   0x427760
  413224:	lea    r8,[rip+0x2d29d]        # 0x4404c8
  41322b:	mov    rbx,rax
  41322e:	mov    r9,rax
  413231:	jmp    0x4132ca
  413236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413240:	xor    eax,eax
  413242:	cmp    edi,esi
  413244:	jbe    0x413150
  41324a:	mov    r15d,DWORD PTR [rsp+0xb0]
  413252:	mov    eax,esi
  413254:	mov    rbx,r12
  413257:	lea    rax,[r13+rax*8+0x0]
  41325c:	shl    r15,0x4
  413260:	add    r15,r12
  413263:	cmp    r12,r15
  413266:	jb     0x41327d
  413268:	jmp    0x413370
  41326d:	nop    DWORD PTR [rax]
  413270:	add    rbx,0x10
  413274:	cmp    rbx,r15
  413277:	jae    0x413370
  41327d:	mov    rdx,QWORD PTR [rbx]
  413280:	cmp    rdx,QWORD PTR [rax]
  413283:	jne    0x413270
  413285:	movzx  ecx,WORD PTR [rbx+0x8]
  413289:	mov    WORD PTR [rbx+0xa],cx
  41328d:	mov    ecx,DWORD PTR [r14]
  413290:	test   ecx,ecx
  413292:	je     0x413270
  413294:	lea    rcx,[rip+0x2d251]        # 0x4404ec
  41329b:	mov    QWORD PTR [rsp+0x38],rax
  4132a0:	call   0x40fef0
  4132a5:	mov    rax,QWORD PTR [rsp+0x38]
  4132aa:	jmp    0x413270
  4132ac:	nop    DWORD PTR [rax+0x0]
  4132b0:	call   QWORD PTR [rip+0x73432]        # 0x4866e8
  4132b6:	mov    ecx,eax
  4132b8:	call   0x427760
  4132bd:	lea    r8,[rip+0x2d1ac]        # 0x440470
  4132c4:	mov    rbx,rax
  4132c7:	mov    r9,rax
  4132ca:	lea    rcx,[rip+0x2d1c6]        # 0x440497
  4132d1:	mov    edx,0x10
  4132d6:	call   0x40fae0
  4132db:	mov    rcx,rbx
  4132de:	call   0x40e6e0
  4132e3:	mov    edx,DWORD PTR [r14]
  4132e6:	test   edx,edx
  4132e8:	je     0x413302
  4132ea:	lea    r8,[rip+0x2d147]        # 0x440438
  4132f1:	lea    rcx,[rip+0x2d204]        # 0x4404fc
  4132f8:	mov    edx,0xffffffff
  4132fd:	call   0x40fef0
  413302:	mov    eax,0xffffffff
  413307:	jmp    0x413150
  41330c:	nop    DWORD PTR [rax+0x0]
  413310:	mov    eax,0x1
  413315:	jmp    0x413150
  41331a:	nop    WORD PTR [rax+rax*1+0x0]
  413320:	lea    rcx,[rip+0x2d121]        # 0x440448
  413327:	mov    r8d,ebp
  41332a:	mov    edx,edi
  41332c:	call   0x40fef0
  413331:	jmp    0x41306d
  413336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413340:	lea    rcx,[rip+0x2d159]        # 0x4404a0
  413347:	mov    r8d,ebp
  41334a:	mov    edx,edi
  41334c:	call   0x40fef0
  413351:	jmp    0x4131f3
  413356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413360:	lea    r8,[rip+0x2d0c0]        # 0x440427
  413367:	jmp    0x4131bf
  41336c:	nop    DWORD PTR [rax+0x0]
  413370:	cmp    edi,0x1
  413373:	jle    0x413310
  413375:	test   ebp,ebp
  413377:	jne    0x413310
  413379:	lea    r8d,[rdi-0x1]
  41337d:	cmp    r8d,esi
  413380:	jbe    0x4133a3
  413382:	add    esi,0x1
  413385:	cmp    edi,esi
  413387:	jle    0x4133a3
  413389:	movsxd rax,esi
  41338c:	lea    rdx,[r13+rax*8+0x0]
  413391:	mov    rax,QWORD PTR [rdx]
  413394:	add    esi,0x1
  413397:	add    rdx,0x8
  41339b:	mov    QWORD PTR [rdx-0x10],rax
  41339f:	cmp    edi,esi
  4133a1:	jg     0x413391
  4133a3:	mov    eax,DWORD PTR [rsp+0xb0]
  4133aa:	mov    rdx,r13
  4133ad:	xor    ecx,ecx
  4133af:	mov    DWORD PTR [rsp+0x28],0x0
  4133b7:	mov    r9,r12
  4133ba:	mov    DWORD PTR [rsp+0x20],eax
  4133be:	call   0x413030
  4133c3:	mov    edx,eax
  4133c5:	lea    eax,[rax+0x1]
  4133c8:	cmp    edx,0xffffffff
  4133cb:	jne    0x413150
  4133d1:	jmp    0x413302
  4133d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133e0:	push   r15
  4133e2:	push   r14
  4133e4:	push   r13
  4133e6:	push   r12
  4133e8:	push   rbp
  4133e9:	push   rdi
  4133ea:	push   rsi
  4133eb:	push   rbx
  4133ec:	sub    rsp,0x238
  4133f3:	mov    r12,QWORD PTR [rip+0x686f6]        # 0x47baf0
  4133fa:	mov    rdi,rcx
  4133fd:	mov    ebp,edx
  4133ff:	mov    DWORD PTR [rsp+0x290],r8d
  413407:	mov    ebx,DWORD PTR [r12]
  41340b:	test   ebx,ebx
  41340d:	jne    0x413620
  413413:	mov    esi,ebp
  413415:	shl    rsi,0x4
  413419:	add    rsi,rdi
  41341c:	cmp    rdi,rsi
  41341f:	jae    0x413513
  413425:	lea    r13,[rsp+0x30]
  41342a:	mov    r15,rdi
  41342d:	xor    ebx,ebx
  41342f:	xor    r14d,r14d
  413432:	mov    rdx,QWORD PTR [r15]
  413435:	cmp    rdx,0x130e396
  41343c:	je     0x413564
  413442:	test   rdx,rdx
  413445:	jle    0x413492
  413447:	cmp    ebx,0x0
  41344a:	jle    0x41359c
  413450:	cmp    QWORD PTR [rsp+0x30],rdx
  413455:	je     0x413492
  413457:	lea    r10,[r13+0x8]
  41345b:	xor    eax,eax
  41345d:	jmp    0x41346a
  41345f:	nop
  413460:	add    r10,0x8
  413464:	cmp    QWORD PTR [r10-0x8],rdx
  413468:	je     0x413492
  41346a:	add    eax,0x1
  41346d:	cmp    eax,ebx
  41346f:	jne    0x413460
  413471:	cmp    ebx,0x40
  413474:	je     0x4135da
  41347a:	mov    r9d,DWORD PTR [r12]
  41347e:	test   r9d,r9d
  413481:	jne    0x413588
  413487:	movsxd rax,ebx
  41348a:	add    ebx,0x1
  41348d:	mov    QWORD PTR [rsp+rax*8+0x30],rdx
  413492:	add    r15,0x10
  413496:	cmp    r15,rsi
  413499:	jb     0x413432
  41349b:	mov    edx,DWORD PTR [r12]
  41349f:	test   edx,edx
  4134a1:	jne    0x4135ff
  4134a7:	mov    rax,rdi
  4134aa:	nop    WORD PTR [rax+rax*1+0x0]
  4134b0:	xor    r8d,r8d
  4134b3:	add    rax,0x10
  4134b7:	mov    WORD PTR [rax-0x6],r8w
  4134bc:	cmp    rax,rsi
  4134bf:	jb     0x4134b0
  4134c1:	cmp    ebx,0x1
  4134c4:	jle    0x4135b0
  4134ca:	mov    DWORD PTR [rsp+0x28],0x0
  4134d2:	mov    DWORD PTR [rsp+0x20],ebp
  4134d6:	mov    r9,rdi
  4134d9:	mov    r8d,ebx
  4134dc:	mov    rdx,r13
  4134df:	mov    ecx,r14d
  4134e2:	call   0x413030
  4134e7:	test   eax,eax
  4134e9:	jne    0x413549
  4134eb:	cmp    DWORD PTR [rsp+0x290],0x9
  4134f3:	jg     0x413529
  4134f5:	cmp    DWORD PTR [rsp+0x290],0xffffffff
  4134fd:	je     0x413529
  4134ff:	add    rsp,0x238
  413506:	pop    rbx
  413507:	pop    rsi
  413508:	pop    rdi
  413509:	pop    rbp
  41350a:	pop    r12
  41350c:	pop    r13
  41350e:	pop    r14
  413510:	pop    r15
  413512:	ret    
  413513:	mov    eax,DWORD PTR [r12]
  413517:	xor    ebx,ebx
  413519:	xor    r14d,r14d
  41351c:	lea    r13,[rsp+0x30]
  413521:	test   eax,eax
  413523:	jne    0x4135ff
  413529:	mov    eax,DWORD PTR [rsp+0x290]
  413530:	mov    DWORD PTR [rsp+0x20],ebp
  413534:	mov    r9,rdi
  413537:	mov    r8d,ebx
  41353a:	mov    rdx,r13
  41353d:	mov    ecx,r14d
  413540:	mov    DWORD PTR [rsp+0x28],eax
  413544:	call   0x413030
  413549:	cmp    eax,0xffffffff
  41354c:	jne    0x4134ff
  41354e:	cmp    rdi,rsi
  413551:	jae    0x4134ff
  413553:	xor    ecx,ecx
  413555:	add    rdi,0x10
  413559:	mov    WORD PTR [rdi-0x6],cx
  41355d:	cmp    rdi,rsi
  413560:	jb     0x413553
  413562:	jmp    0x4134ff
  413564:	test   BYTE PTR [r15+0x8],0x1
  413569:	je     0x413447
  41356f:	test   r14d,r14d
  413572:	jne    0x41357d
  413574:	mov    r11d,DWORD PTR [r12]
  413578:	test   r11d,r11d
  41357b:	jne    0x4135c6
  41357d:	mov    r14d,0x1
  413583:	jmp    0x413492
  413588:	lea    rcx,[rip+0x2cfc0]        # 0x44054f
  41358f:	call   0x40fef0
  413594:	mov    rdx,QWORD PTR [r15]
  413597:	jmp    0x413487
  41359c:	jne    0x413492
  4135a2:	jmp    0x41347a
  4135a7:	nop    WORD PTR [rax+rax*1+0x0]
  4135b0:	test   r14d,r14d
  4135b3:	je     0x413529
  4135b9:	test   ebx,ebx
  4135bb:	jg     0x4134ca
  4135c1:	jmp    0x413529
  4135c6:	lea    rcx,[rip+0x2cf59]        # 0x440526
  4135cd:	mov    r14b,0x1
  4135d0:	call   0x40fef0
  4135d5:	jmp    0x413492
  4135da:	lea    r8,[rip+0x2cf4f]        # 0x440530
  4135e1:	lea    rcx,[rip+0x2ceaf]        # 0x440497
  4135e8:	mov    edx,0x10
  4135ed:	call   0x40fae0
  4135f2:	mov    r10d,DWORD PTR [r12]
  4135f6:	test   r10d,r10d
  4135f9:	je     0x4134a7
  4135ff:	lea    rcx,[rip+0x2cf4d]        # 0x440553
  413606:	call   0x40fef0
  41360b:	cmp    rdi,rsi
  41360e:	jb     0x4134a7
  413614:	jmp    0x4134c1
  413619:	nop    DWORD PTR [rax+0x0]
  413620:	lea    rcx,[rip+0x2ceeb]        # 0x440512
  413627:	call   0x40fef0
  41362c:	jmp    0x413413
  413631:	nop
  413632:	nop
  413633:	nop
  413634:	nop
  413635:	nop
  413636:	nop
  413637:	nop
  413638:	nop
  413639:	nop
  41363a:	nop
  41363b:	nop
  41363c:	nop
  41363d:	nop
  41363e:	nop
  41363f:	nop
  413640:	mov    ecx,0x18
  413645:	jmp    0x416750
  41364a:	nop    WORD PTR [rax+rax*1+0x0]
  413650:	push   rbx
  413651:	sub    rsp,0x20
  413655:	test   rcx,rcx
  413658:	je     0x413680
  41365a:	mov    rbx,rcx
  41365d:	mov    rcx,QWORD PTR [rcx]
  413660:	call   0x409a70
  413665:	mov    rdx,rbx
  413668:	mov    ecx,0x18
  41366d:	add    rsp,0x20
  413671:	pop    rbx
  413672:	jmp    0x4167c0
  413677:	nop    WORD PTR [rax+rax*1+0x0]
  413680:	lea    r8,[rip+0x2ced9]        # 0x440560
  413687:	lea    rdx,[rip+0x2d38e]        # 0x440a1c
  41368e:	lea    rcx,[rip+0x2ced9]        # 0x44056e
  413695:	add    rsp,0x20
  413699:	pop    rbx
  41369a:	jmp    0x40fd20
  41369f:	nop
  4136a0:	test   rcx,rcx
  4136a3:	je     0x4136c0
  4136a5:	mov    QWORD PTR [rcx+0x8],0x0
  4136ad:	mov    QWORD PTR [rcx],0x0
  4136b4:	mov    DWORD PTR [rcx+0x10],0x0
  4136bb:	ret    
  4136bc:	nop    DWORD PTR [rax+0x0]
  4136c0:	lea    r8,[rip+0x2ce99]        # 0x440560
  4136c7:	lea    rdx,[rip+0x2d341]        # 0x440a0f
  4136ce:	lea    rcx,[rip+0x2ce99]        # 0x44056e
  4136d5:	jmp    0x40fd20
  4136da:	nop    WORD PTR [rax+rax*1+0x0]
  4136e0:	push   rbx
  4136e1:	sub    rsp,0x20
  4136e5:	test   rcx,rcx
  4136e8:	je     0x413711
  4136ea:	mov    rbx,rcx
  4136ed:	mov    rcx,QWORD PTR [rcx]
  4136f0:	call   0x409a70
  4136f5:	mov    QWORD PTR [rbx+0x8],0x0
  4136fd:	mov    QWORD PTR [rbx],0x0
  413704:	mov    DWORD PTR [rbx+0x10],0x0
  41370b:	add    rsp,0x20
  41370f:	pop    rbx
  413710:	ret    
  413711:	lea    r8,[rip+0x2ce48]        # 0x440560
  413718:	lea    rdx,[rip+0x2d2e2]        # 0x440a01
  41371f:	lea    rcx,[rip+0x2ce48]        # 0x44056e
  413726:	add    rsp,0x20
  41372a:	pop    rbx
  41372b:	jmp    0x40fd20
  413730:	sub    rsp,0x28
  413734:	test   rcx,rcx
  413737:	je     0x413750
  413739:	xor    eax,eax
  41373b:	cmp    QWORD PTR [rcx],0x0
  41373f:	sete   al
  413742:	add    rsp,0x28
  413746:	ret    
  413747:	nop    WORD PTR [rax+rax*1+0x0]
  413750:	lea    r8,[rip+0x2ce09]        # 0x440560
  413757:	lea    rdx,[rip+0x2d292]        # 0x4409f0
  41375e:	lea    rcx,[rip+0x2ce09]        # 0x44056e
  413765:	call   0x40fd20
  41376a:	mov    eax,0x1
  41376f:	add    rsp,0x28
  413773:	ret    
  413774:	xchg   ax,ax
  413776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413780:	sub    rsp,0x28
  413784:	test   rcx,rcx
  413787:	je     0x413791
  413789:	mov    eax,DWORD PTR [rcx+0x10]
  41378c:	add    rsp,0x28
  413790:	ret    
  413791:	lea    r8,[rip+0x2cdc8]        # 0x440560
  413798:	lea    rdx,[rip+0x2d231]        # 0x4409d0
  41379f:	lea    rcx,[rip+0x2cdc8]        # 0x44056e
  4137a6:	call   0x40fd20
  4137ab:	xor    eax,eax
  4137ad:	add    rsp,0x28
  4137b1:	ret    
  4137b2:	nop    DWORD PTR [rax+0x0]
  4137b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137c0:	push   rbx
  4137c1:	sub    rsp,0x20
  4137c5:	test   rcx,rcx
  4137c8:	je     0x4137e2
  4137ca:	mov    rbx,rcx
  4137cd:	mov    rcx,QWORD PTR [rcx]
  4137d0:	mov    QWORD PTR [rbx+0x8],rcx
  4137d4:	call   0x409fa0
  4137d9:	mov    QWORD PTR [rbx],rax
  4137dc:	add    rsp,0x20
  4137e0:	pop    rbx
  4137e1:	ret    
  4137e2:	lea    r8,[rip+0x2cd77]        # 0x440560
  4137e9:	lea    rdx,[rip+0x2d1d0]        # 0x4409c0
  4137f0:	lea    rcx,[rip+0x2cd77]        # 0x44056e
  4137f7:	add    rsp,0x20
  4137fb:	pop    rbx
  4137fc:	jmp    0x40fd20
  413801:	nop    DWORD PTR [rax+rax*1+0x0]
  413806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413810:	push   rdi
  413811:	push   rsi
  413812:	push   rbx
  413813:	sub    rsp,0x20
  413817:	test   rcx,rcx
  41381a:	je     0x413850
  41381c:	test   rdx,rdx
  41381f:	je     0x413871
  413821:	mov    rax,QWORD PTR [rcx]
  413824:	mov    rdi,r8
  413827:	mov    rsi,rdx
  41382a:	test   rax,rax
  41382d:	je     0x413844
  41382f:	nop
  413830:	mov    rbx,QWORD PTR [rax+0x8]
  413834:	mov    rcx,QWORD PTR [rax]
  413837:	mov    rdx,rdi
  41383a:	call   rsi
  41383c:	test   rbx,rbx
  41383f:	mov    rax,rbx
  413842:	jne    0x413830
  413844:	add    rsp,0x20
  413848:	pop    rbx
  413849:	pop    rsi
  41384a:	pop    rdi
  41384b:	ret    
  41384c:	nop    DWORD PTR [rax+0x0]
  413850:	lea    r8,[rip+0x2cd09]        # 0x440560
  413857:	lea    rdx,[rip+0x2d142]        # 0x4409a0
  41385e:	lea    rcx,[rip+0x2cd09]        # 0x44056e
  413865:	add    rsp,0x20
  413869:	pop    rbx
  41386a:	pop    rsi
  41386b:	pop    rdi
  41386c:	jmp    0x40fd20
  413871:	lea    r8,[rip+0x2ccfb]        # 0x440573
  413878:	jmp    0x413857
  41387a:	nop    WORD PTR [rax+rax*1+0x0]
  413880:	push   rbx
  413881:	sub    rsp,0x20
  413885:	xor    r8d,r8d
  413888:	mov    rbx,rcx
  41388b:	call   0x413810
  413890:	mov    rcx,rbx
  413893:	add    rsp,0x20
  413897:	pop    rbx
  413898:	jmp    0x413650
  41389d:	nop    DWORD PTR [rax]
  4138a0:	sub    rsp,0x28
  4138a4:	test   rcx,rcx
  4138a7:	je     0x4138b5
  4138a9:	mov    rcx,QWORD PTR [rcx]
  4138ac:	add    rsp,0x28
  4138b0:	jmp    0x40a070
  4138b5:	lea    r8,[rip+0x2cca4]        # 0x440560
  4138bc:	lea    rdx,[rip+0x2d0c1]        # 0x440984
  4138c3:	lea    rcx,[rip+0x2cca4]        # 0x44056e
  4138ca:	call   0x40fd20
  4138cf:	xor    eax,eax
  4138d1:	add    rsp,0x28
  4138d5:	ret    
  4138d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4138e0:	sub    rsp,0x28
  4138e4:	test   rcx,rcx
  4138e7:	je     0x413900
  4138e9:	test   r8,r8
  4138ec:	je     0x413921
  4138ee:	mov    rcx,QWORD PTR [rcx]
  4138f1:	add    rsp,0x28
  4138f5:	jmp    0x40a0a0
  4138fa:	nop    WORD PTR [rax+rax*1+0x0]
  413900:	lea    r8,[rip+0x2cc59]        # 0x440560
  413907:	lea    rdx,[rip+0x2d062]        # 0x440970
  41390e:	lea    rcx,[rip+0x2cc59]        # 0x44056e
  413915:	call   0x40fd20
  41391a:	xor    eax,eax
  41391c:	add    rsp,0x28
  413920:	ret    
  413921:	lea    r8,[rip+0x2cc4b]        # 0x440573
  413928:	lea    rdx,[rip+0x2d041]        # 0x440970
  41392f:	lea    rcx,[rip+0x2cc38]        # 0x44056e
  413936:	call   0x40fd20
  41393b:	xor    eax,eax
  41393d:	add    rsp,0x28
  413941:	ret    
  413942:	nop    DWORD PTR [rax+0x0]
  413946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413950:	push   rbx
  413951:	sub    rsp,0x20
  413955:	test   rcx,rcx
  413958:	je     0x413980
  41395a:	test   rdx,rdx
  41395d:	je     0x4139a0
  41395f:	mov    rbx,rcx
  413962:	mov    rcx,QWORD PTR [rcx]
  413965:	call   0x40a270
  41396a:	mov    QWORD PTR [rbx],rax
  41396d:	mov    rcx,rax
  413970:	call   0x40a190
  413975:	mov    QWORD PTR [rbx+0x8],rax
  413979:	add    rsp,0x20
  41397d:	pop    rbx
  41397e:	ret    
  41397f:	nop
  413980:	lea    r8,[rip+0x2cbd9]        # 0x440560
  413987:	lea    rdx,[rip+0x2cfd4]        # 0x440962
  41398e:	lea    rcx,[rip+0x2cbd9]        # 0x44056e
  413995:	add    rsp,0x20
  413999:	pop    rbx
  41399a:	jmp    0x40fd20
  41399f:	nop
  4139a0:	lea    r8,[rip+0x2cbd9]        # 0x440580
  4139a7:	jmp    0x413987
  4139a9:	nop    DWORD PTR [rax+0x0]
  4139b0:	push   rbx
  4139b1:	sub    rsp,0x20
  4139b5:	test   rcx,rcx
  4139b8:	je     0x4139e0
  4139ba:	mov    rbx,rcx
  4139bd:	mov    rcx,QWORD PTR [rcx]
  4139c0:	call   0x409b50
  4139c5:	cmp    QWORD PTR [rbx+0x8],0x0
  4139ca:	mov    QWORD PTR [rbx],rax
  4139cd:	je     0x413a00
  4139cf:	add    DWORD PTR [rbx+0x10],0x1
  4139d3:	add    rsp,0x20
  4139d7:	pop    rbx
  4139d8:	ret    
  4139d9:	nop    DWORD PTR [rax+0x0]
  4139e0:	lea    r8,[rip+0x2cb79]        # 0x440560
  4139e7:	lea    rdx,[rip+0x2cf62]        # 0x440950
  4139ee:	lea    rcx,[rip+0x2cb79]        # 0x44056e
  4139f5:	add    rsp,0x20
  4139f9:	pop    rbx
  4139fa:	jmp    0x40fd20
  4139ff:	nop
  413a00:	add    DWORD PTR [rbx+0x10],0x1
  413a04:	mov    QWORD PTR [rbx+0x8],rax
  413a08:	add    rsp,0x20
  413a0c:	pop    rbx
  413a0d:	ret    
  413a0e:	xchg   ax,ax
  413a10:	test   rcx,rcx
  413a13:	je     0x413a40
  413a15:	test   rdx,rdx
  413a18:	je     0x413a60
  413a1a:	cmp    QWORD PTR [rdx+0x10],0x0
  413a1f:	je     0x413a80
  413a21:	lea    r8,[rip+0x2cb7a]        # 0x4405a2
  413a28:	lea    rdx,[rip+0x2cee1]        # 0x440910
  413a2f:	lea    rcx,[rip+0x2cb38]        # 0x44056e
  413a36:	jmp    0x40fd20
  413a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  413a40:	lea    r8,[rip+0x2cb19]        # 0x440560
  413a47:	lea    rdx,[rip+0x2cec2]        # 0x440910
  413a4e:	lea    rcx,[rip+0x2cb19]        # 0x44056e
  413a55:	jmp    0x40fd20
  413a5a:	nop    WORD PTR [rax+rax*1+0x0]
  413a60:	lea    r8,[rip+0x2cb2e]        # 0x440595
  413a67:	lea    rdx,[rip+0x2cea2]        # 0x440910
  413a6e:	lea    rcx,[rip+0x2caf9]        # 0x44056e
  413a75:	jmp    0x40fd20
  413a7a:	nop    WORD PTR [rax+rax*1+0x0]
  413a80:	cmp    QWORD PTR [rdx+0x8],0x0
  413a85:	je     0x413aa1
  413a87:	lea    r8,[rip+0x2cb27]        # 0x4405b5
  413a8e:	lea    rdx,[rip+0x2ce7b]        # 0x440910
  413a95:	lea    rcx,[rip+0x2cad2]        # 0x44056e
  413a9c:	jmp    0x40fd20
  413aa1:	mov    rax,QWORD PTR [rcx]
  413aa4:	test   rax,rax
  413aa7:	mov    QWORD PTR [rdx+0x8],rax
  413aab:	je     0x413ac0
  413aad:	mov    QWORD PTR [rax+0x10],rdx
  413ab1:	mov    QWORD PTR [rcx],rdx
  413ab4:	add    DWORD PTR [rcx+0x10],0x1
  413ab8:	ret    
  413ab9:	nop    DWORD PTR [rax+0x0]
  413ac0:	mov    QWORD PTR [rcx+0x8],rdx
  413ac4:	jmp    0x413ab1
  413ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ad0:	push   rbx
  413ad1:	sub    rsp,0x20
  413ad5:	test   rcx,rcx
  413ad8:	je     0x413b01
  413ada:	mov    rbx,rcx
  413add:	mov    rcx,QWORD PTR [rcx+0x8]
  413ae1:	call   0x409af0
  413ae6:	mov    rdx,QWORD PTR [rax+0x8]
  413aea:	mov    QWORD PTR [rbx+0x8],rax
  413aee:	test   rdx,rdx
  413af1:	je     0x413b20
  413af3:	add    DWORD PTR [rbx+0x10],0x1
  413af7:	mov    QWORD PTR [rbx+0x8],rdx
  413afb:	add    rsp,0x20
  413aff:	pop    rbx
  413b00:	ret    
  413b01:	lea    r8,[rip+0x2ca58]        # 0x440560
  413b08:	lea    rdx,[rip+0x2cde1]        # 0x4408f0
  413b0f:	lea    rcx,[rip+0x2ca58]        # 0x44056e
  413b16:	add    rsp,0x20
  413b1a:	pop    rbx
  413b1b:	jmp    0x40fd20
  413b20:	add    DWORD PTR [rbx+0x10],0x1
  413b24:	mov    QWORD PTR [rbx],rax
  413b27:	add    rsp,0x20
  413b2b:	pop    rbx
  413b2c:	ret    
  413b2d:	nop    DWORD PTR [rax]
  413b30:	push   rsi
  413b31:	push   rbx
  413b32:	sub    rsp,0x28
  413b36:	test   rcx,rcx
  413b39:	mov    rbx,rcx
  413b3c:	je     0x413b71
  413b3e:	mov    ecx,0x18
  413b43:	call   0x416750
  413b48:	mov    rbx,QWORD PTR [rbx]
  413b4b:	mov    rsi,rax
  413b4e:	test   rbx,rbx
  413b51:	je     0x413b67
  413b53:	mov    rdx,QWORD PTR [rbx]
  413b56:	mov    rcx,rsi
  413b59:	call   0x413ad0
  413b5e:	mov    rbx,QWORD PTR [rbx+0x8]
  413b62:	test   rbx,rbx
  413b65:	jne    0x413b53
  413b67:	mov    rax,rsi
  413b6a:	add    rsp,0x28
  413b6e:	pop    rbx
  413b6f:	pop    rsi
  413b70:	ret    
  413b71:	lea    r8,[rip+0x2c9e8]        # 0x440560
  413b78:	lea    rdx,[rip+0x2ce31]        # 0x4409b0
  413b7f:	lea    rcx,[rip+0x2c9e8]        # 0x44056e
  413b86:	xor    esi,esi
  413b88:	call   0x40fd20
  413b8d:	mov    rax,rsi
  413b90:	add    rsp,0x28
  413b94:	pop    rbx
  413b95:	pop    rsi
  413b96:	ret    
  413b97:	nop    WORD PTR [rax+rax*1+0x0]
  413ba0:	test   rcx,rcx
  413ba3:	je     0x413bd0
  413ba5:	test   rdx,rdx
  413ba8:	je     0x413bf0
  413baa:	cmp    QWORD PTR [rdx+0x10],0x0
  413baf:	je     0x413c10
  413bb1:	lea    r8,[rip+0x2c9ea]        # 0x4405a2
  413bb8:	lea    rdx,[rip+0x2cd11]        # 0x4408d0
  413bbf:	lea    rcx,[rip+0x2c9a8]        # 0x44056e
  413bc6:	jmp    0x40fd20
  413bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  413bd0:	lea    r8,[rip+0x2c989]        # 0x440560
  413bd7:	lea    rdx,[rip+0x2ccf2]        # 0x4408d0
  413bde:	lea    rcx,[rip+0x2c989]        # 0x44056e
  413be5:	jmp    0x40fd20
  413bea:	nop    WORD PTR [rax+rax*1+0x0]
  413bf0:	lea    r8,[rip+0x2c99e]        # 0x440595
  413bf7:	lea    rdx,[rip+0x2ccd2]        # 0x4408d0
  413bfe:	lea    rcx,[rip+0x2c969]        # 0x44056e
  413c05:	jmp    0x40fd20
  413c0a:	nop    WORD PTR [rax+rax*1+0x0]
  413c10:	cmp    QWORD PTR [rdx+0x8],0x0
  413c15:	je     0x413c31
  413c17:	lea    r8,[rip+0x2c997]        # 0x4405b5
  413c1e:	lea    rdx,[rip+0x2ccab]        # 0x4408d0
  413c25:	lea    rcx,[rip+0x2c942]        # 0x44056e
  413c2c:	jmp    0x40fd20
  413c31:	mov    rax,QWORD PTR [rcx+0x8]
  413c35:	test   rax,rax
  413c38:	mov    QWORD PTR [rdx+0x10],rax
  413c3c:	je     0x413c50
  413c3e:	mov    QWORD PTR [rax+0x8],rdx
  413c42:	mov    QWORD PTR [rcx+0x8],rdx
  413c46:	add    DWORD PTR [rcx+0x10],0x1
  413c4a:	ret    
  413c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413c50:	mov    QWORD PTR [rcx],rdx
  413c53:	jmp    0x413c42
  413c55:	nop
  413c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c60:	push   rsi
  413c61:	push   rbx
  413c62:	sub    rsp,0x28
  413c66:	test   rcx,rcx
  413c69:	mov    rbx,rcx
  413c6c:	je     0x413ca0
  413c6e:	mov    rcx,QWORD PTR [rcx]
  413c71:	test   rcx,rcx
  413c74:	je     0x413cd0
  413c76:	mov    rax,QWORD PTR [rcx+0x8]
  413c7a:	mov    rsi,QWORD PTR [rcx]
  413c7d:	test   rax,rax
  413c80:	mov    QWORD PTR [rbx],rax
  413c83:	je     0x413cc3
  413c85:	mov    QWORD PTR [rax+0x10],0x0
  413c8d:	call   0x409a90
  413c92:	sub    DWORD PTR [rbx+0x10],0x1
  413c96:	mov    rax,rsi
  413c99:	add    rsp,0x28
  413c9d:	pop    rbx
  413c9e:	pop    rsi
  413c9f:	ret    
  413ca0:	lea    r8,[rip+0x2c8b9]        # 0x440560
  413ca7:	lea    rdx,[rip+0x2cbe2]        # 0x440890
  413cae:	lea    rcx,[rip+0x2c8b9]        # 0x44056e
  413cb5:	call   0x40fd20
  413cba:	xor    eax,eax
  413cbc:	add    rsp,0x28
  413cc0:	pop    rbx
  413cc1:	pop    rsi
  413cc2:	ret    
  413cc3:	mov    QWORD PTR [rbx+0x8],0x0
  413ccb:	jmp    0x413c8d
  413ccd:	nop    DWORD PTR [rax]
  413cd0:	xor    eax,eax
  413cd2:	jmp    0x413c99
  413cd4:	xchg   ax,ax
  413cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ce0:	sub    rsp,0x28
  413ce4:	test   rcx,rcx
  413ce7:	je     0x413d20
  413ce9:	mov    rax,QWORD PTR [rcx]
  413cec:	test   rax,rax
  413cef:	je     0x413d11
  413cf1:	mov    rdx,QWORD PTR [rax+0x8]
  413cf5:	test   rdx,rdx
  413cf8:	mov    QWORD PTR [rcx],rdx
  413cfb:	je     0x413d41
  413cfd:	mov    QWORD PTR [rdx+0x10],0x0
  413d05:	mov    QWORD PTR [rax+0x8],0x0
  413d0d:	sub    DWORD PTR [rcx+0x10],0x1
  413d11:	add    rsp,0x28
  413d15:	ret    
  413d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d20:	lea    r8,[rip+0x2c839]        # 0x440560
  413d27:	lea    rdx,[rip+0x2cb42]        # 0x440870
  413d2e:	lea    rcx,[rip+0x2c839]        # 0x44056e
  413d35:	call   0x40fd20
  413d3a:	xor    eax,eax
  413d3c:	add    rsp,0x28
  413d40:	ret    
  413d41:	mov    QWORD PTR [rcx+0x8],0x0
  413d49:	jmp    0x413d0d
  413d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413d50:	sub    rsp,0x28
  413d54:	test   rcx,rcx
  413d57:	je     0x413d61
  413d59:	mov    rax,QWORD PTR [rcx]
  413d5c:	add    rsp,0x28
  413d60:	ret    
  413d61:	lea    r8,[rip+0x2c7f8]        # 0x440560
  413d68:	lea    rdx,[rip+0x2cae1]        # 0x440850
  413d6f:	lea    rcx,[rip+0x2c7f8]        # 0x44056e
  413d76:	call   0x40fd20
  413d7b:	xor    eax,eax
  413d7d:	add    rsp,0x28
  413d81:	ret    
  413d82:	nop    DWORD PTR [rax+0x0]
  413d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d90:	sub    rsp,0x28
  413d94:	test   rcx,rcx
  413d97:	je     0x413da2
  413d99:	mov    rax,QWORD PTR [rcx+0x8]
  413d9d:	add    rsp,0x28
  413da1:	ret    
  413da2:	lea    r8,[rip+0x2c7b7]        # 0x440560
  413da9:	lea    rdx,[rip+0x2ca80]        # 0x440830
  413db0:	lea    rcx,[rip+0x2c7b7]        # 0x44056e
  413db7:	call   0x40fd20
  413dbc:	xor    eax,eax
  413dbe:	add    rsp,0x28
  413dc2:	ret    
  413dc3:	nop    DWORD PTR [rax]
  413dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413dd0:	push   rbx
  413dd1:	sub    rsp,0x20
  413dd5:	test   rcx,rcx
  413dd8:	mov    rdx,rcx
  413ddb:	je     0x413e10
  413ddd:	mov    rcx,QWORD PTR [rcx+0x8]
  413de1:	test   rcx,rcx
  413de4:	je     0x413e40
  413de6:	mov    rax,QWORD PTR [rcx+0x10]
  413dea:	mov    rbx,QWORD PTR [rcx]
  413ded:	test   rax,rax
  413df0:	mov    QWORD PTR [rdx+0x8],rax
  413df4:	je     0x413e32
  413df6:	mov    QWORD PTR [rax+0x8],0x0
  413dfe:	sub    DWORD PTR [rdx+0x10],0x1
  413e02:	call   0x409a90
  413e07:	mov    rax,rbx
  413e0a:	add    rsp,0x20
  413e0e:	pop    rbx
  413e0f:	ret    
  413e10:	lea    r8,[rip+0x2c749]        # 0x440560
  413e17:	lea    rdx,[rip+0x2c9f2]        # 0x440810
  413e1e:	lea    rcx,[rip+0x2c749]        # 0x44056e
  413e25:	call   0x40fd20
  413e2a:	xor    eax,eax
  413e2c:	add    rsp,0x20
  413e30:	pop    rbx
  413e31:	ret    
  413e32:	mov    QWORD PTR [rdx],0x0
  413e39:	jmp    0x413dfe
  413e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  413e40:	xor    eax,eax
  413e42:	jmp    0x413e0a
  413e44:	xchg   ax,ax
  413e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e50:	sub    rsp,0x28
  413e54:	test   rcx,rcx
  413e57:	je     0x413e90
  413e59:	mov    rax,QWORD PTR [rcx+0x8]
  413e5d:	test   rax,rax
  413e60:	je     0x413e83
  413e62:	mov    rdx,QWORD PTR [rax+0x10]
  413e66:	test   rdx,rdx
  413e69:	mov    QWORD PTR [rcx+0x8],rdx
  413e6d:	je     0x413eb1
  413e6f:	mov    QWORD PTR [rdx+0x8],0x0
  413e77:	mov    QWORD PTR [rax+0x10],0x0
  413e7f:	sub    DWORD PTR [rcx+0x10],0x1
  413e83:	add    rsp,0x28
  413e87:	ret    
  413e88:	nop    DWORD PTR [rax+rax*1+0x0]
  413e90:	lea    r8,[rip+0x2c6c9]        # 0x440560
  413e97:	lea    rdx,[rip+0x2c942]        # 0x4407e0
  413e9e:	lea    rcx,[rip+0x2c6c9]        # 0x44056e
  413ea5:	call   0x40fd20
  413eaa:	xor    eax,eax
  413eac:	add    rsp,0x28
  413eb0:	ret    
  413eb1:	mov    QWORD PTR [rcx],0x0
  413eb8:	jmp    0x413e7f
  413eba:	nop    WORD PTR [rax+rax*1+0x0]
  413ec0:	sub    rsp,0x28
  413ec4:	test   rcx,rcx
  413ec7:	je     0x413f20
  413ec9:	mov    eax,DWORD PTR [rcx+0x10]
  413ecc:	cmp    eax,edx
  413ece:	jbe    0x413f3a
  413ed0:	mov    r8d,eax
  413ed3:	shr    r8d,1
  413ed6:	cmp    edx,r8d
  413ed9:	jbe    0x413f00
  413edb:	lea    r8d,[rax-0x1]
  413edf:	mov    rax,QWORD PTR [rcx+0x8]
  413ee3:	mov    ecx,r8d
  413ee6:	sub    ecx,edx
  413ee8:	je     0x413efb
  413eea:	xor    edx,edx
  413eec:	nop    DWORD PTR [rax+0x0]
  413ef0:	add    edx,0x1
  413ef3:	mov    rax,QWORD PTR [rax+0x10]
  413ef7:	cmp    edx,ecx
  413ef9:	jne    0x413ef0
  413efb:	add    rsp,0x28
  413eff:	ret    
  413f00:	test   edx,edx
  413f02:	mov    rax,QWORD PTR [rcx]
  413f05:	je     0x413efb
  413f07:	xor    ecx,ecx
  413f09:	nop    DWORD PTR [rax+0x0]
  413f10:	add    ecx,0x1
  413f13:	mov    rax,QWORD PTR [rax+0x8]
  413f17:	cmp    ecx,edx
  413f19:	jne    0x413f10
  413f1b:	add    rsp,0x28
  413f1f:	ret    
  413f20:	lea    r8,[rip+0x2c639]        # 0x440560
  413f27:	lea    rdx,[rip+0x2c872]        # 0x4407a0
  413f2e:	lea    rcx,[rip+0x2c639]        # 0x44056e
  413f35:	call   0x40fd20
  413f3a:	xor    eax,eax
  413f3c:	add    rsp,0x28
  413f40:	ret    
  413f41:	nop    DWORD PTR [rax+rax*1+0x0]
  413f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f50:	push   rsi
  413f51:	push   rbx
  413f52:	sub    rsp,0x38
  413f56:	test   rcx,rcx
  413f59:	je     0x413fe3
  413f5f:	test   r8,r8
  413f62:	je     0x414003
  413f68:	test   edx,edx
  413f6a:	js     0x413fd5
  413f6c:	cmp    edx,DWORD PTR [rcx+0x10]
  413f6f:	jae    0x413fd5
  413f71:	cmp    QWORD PTR [rcx],0x0
  413f75:	mov    rsi,r8
  413f78:	mov    rbx,rcx
  413f7b:	je     0x414010
  413f81:	cmp    QWORD PTR [rcx+0x8],0x0
  413f86:	je     0x414040
  413f8c:	call   0x413ec0
  413f91:	mov    rdx,QWORD PTR [rax+0x10]
  413f95:	test   rdx,rdx
  413f98:	je     0x413f9e
  413f9a:	mov    QWORD PTR [rdx+0x8],rsi
  413f9e:	mov    QWORD PTR [rax+0x10],rsi
  413fa2:	mov    QWORD PTR [rsi+0x8],rax
  413fa6:	mov    rax,QWORD PTR [rbx]
  413fa9:	mov    QWORD PTR [rsi+0x10],rdx
  413fad:	mov    rax,QWORD PTR [rax+0x10]
  413fb1:	test   rax,rax
  413fb4:	je     0x413fb9
  413fb6:	mov    QWORD PTR [rbx],rax
  413fb9:	mov    rax,QWORD PTR [rbx+0x8]
  413fbd:	mov    rax,QWORD PTR [rax+0x8]
  413fc1:	test   rax,rax
  413fc4:	je     0x413fca
  413fc6:	mov    QWORD PTR [rbx+0x8],rax
  413fca:	add    DWORD PTR [rbx+0x10],0x1
  413fce:	add    rsp,0x38
  413fd2:	pop    rbx
  413fd3:	pop    rsi
  413fd4:	ret    
  413fd5:	mov    rdx,r8
  413fd8:	add    rsp,0x38
  413fdc:	pop    rbx
  413fdd:	pop    rsi
  413fde:	jmp    0x413ba0
  413fe3:	lea    r8,[rip+0x2c576]        # 0x440560
  413fea:	lea    rdx,[rip+0x2c8bf]        # 0x4408b0
  413ff1:	lea    rcx,[rip+0x2c576]        # 0x44056e
  413ff8:	add    rsp,0x38
  413ffc:	pop    rbx
  413ffd:	pop    rsi
  413ffe:	jmp    0x40fd20
  414003:	lea    r8,[rip+0x2c5be]        # 0x4405c8
  41400a:	jmp    0x413fea
  41400c:	nop    DWORD PTR [rax+0x0]
  414010:	lea    rax,[rip+0x2c618]        # 0x44062f
  414017:	lea    r9,[rip+0x2c892]        # 0x4408b0
  41401e:	lea    rdx,[rip+0x2c5b3]        # 0x4405d8
  414025:	lea    rcx,[rip+0x2c542]        # 0x44056e
  41402c:	mov    r8d,0x1e2
  414032:	mov    QWORD PTR [rsp+0x20],rax
  414037:	call   0x41e680
  41403c:	nop    DWORD PTR [rax+0x0]
  414040:	lea    rax,[rip+0x2c5f4]        # 0x44063b
  414047:	lea    r9,[rip+0x2c862]        # 0x4408b0
  41404e:	lea    rdx,[rip+0x2c583]        # 0x4405d8
  414055:	lea    rcx,[rip+0x2c512]        # 0x44056e
  41405c:	mov    r8d,0x1e3
  414062:	mov    QWORD PTR [rsp+0x20],rax
  414067:	call   0x41e680
  41406c:	nop
  41406d:	nop    DWORD PTR [rax]
  414070:	sub    rsp,0x28
  414074:	test   rcx,rcx
  414077:	je     0x414085
  414079:	mov    rcx,QWORD PTR [rcx]
  41407c:	add    rsp,0x28
  414080:	jmp    0x40a110
  414085:	lea    r8,[rip+0x2c4d4]        # 0x440560
  41408c:	lea    rdx,[rip+0x2c6ed]        # 0x440780
  414093:	lea    rcx,[rip+0x2c4d4]        # 0x44056e
  41409a:	call   0x40fd20
  41409f:	mov    eax,0xffffffff
  4140a4:	add    rsp,0x28
  4140a8:	ret    
  4140a9:	nop    DWORD PTR [rax+0x0]
  4140b0:	push   rbx
  4140b1:	sub    rsp,0x20
  4140b5:	test   rcx,rcx
  4140b8:	je     0x4140e0
  4140ba:	test   rdx,rdx
  4140bd:	je     0x414100
  4140bf:	cmp    QWORD PTR [rcx+0x8],rdx
  4140c3:	je     0x414110
  4140c5:	mov    rbx,rcx
  4140c8:	mov    rcx,QWORD PTR [rcx]
  4140cb:	call   0x409e70
  4140d0:	sub    DWORD PTR [rbx+0x10],0x1
  4140d4:	mov    QWORD PTR [rbx],rax
  4140d7:	add    rsp,0x20
  4140db:	pop    rbx
  4140dc:	ret    
  4140dd:	nop    DWORD PTR [rax]
  4140e0:	lea    r8,[rip+0x2c479]        # 0x440560
  4140e7:	lea    rdx,[rip+0x2c676]        # 0x440764
  4140ee:	lea    rcx,[rip+0x2c479]        # 0x44056e
  4140f5:	add    rsp,0x20
  4140f9:	pop    rbx
  4140fa:	jmp    0x40fd20
  4140ff:	nop
  414100:	lea    r8,[rip+0x2c4c1]        # 0x4405c8
  414107:	jmp    0x4140e7
  414109:	nop    DWORD PTR [rax+0x0]
  414110:	mov    rax,QWORD PTR [rdx+0x10]
  414114:	mov    QWORD PTR [rcx+0x8],rax
  414118:	jmp    0x4140c5
  41411a:	nop    WORD PTR [rax+rax*1+0x0]
  414120:	push   rsi
  414121:	push   rbx
  414122:	sub    rsp,0x28
  414126:	test   rcx,rcx
  414129:	mov    rsi,rcx
  41412c:	je     0x414155
  41412e:	xor    eax,eax
  414130:	cmp    DWORD PTR [rcx+0x10],edx
  414133:	jbe    0x41414e
  414135:	mov    rcx,rsi
  414138:	call   0x413ec0
  41413d:	mov    rcx,rsi
  414140:	mov    rbx,rax
  414143:	mov    rdx,rax
  414146:	call   0x4140b0
  41414b:	mov    rax,rbx
  41414e:	add    rsp,0x28
  414152:	pop    rbx
  414153:	pop    rsi
  414154:	ret    
  414155:	lea    r8,[rip+0x2c404]        # 0x440560
  41415c:	lea    rdx,[rip+0x2c65d]        # 0x4407c0
  414163:	lea    rcx,[rip+0x2c404]        # 0x44056e
  41416a:	call   0x40fd20
  41416f:	xor    eax,eax
  414171:	add    rsp,0x28
  414175:	pop    rbx
  414176:	pop    rsi
  414177:	ret    
  414178:	nop    DWORD PTR [rax+rax*1+0x0]
  414180:	push   rbx
  414181:	sub    rsp,0x20
  414185:	lea    r8,[rip+0x2c3d4]        # 0x440560
  41418c:	test   rcx,rcx
  41418f:	je     0x4141b7
  414191:	test   rdx,rdx
  414194:	je     0x4141b0
  414196:	mov    rbx,rdx
  414199:	call   0x4140b0
  41419e:	mov    rcx,rbx
  4141a1:	add    rsp,0x20
  4141a5:	pop    rbx
  4141a6:	jmp    0x409a70
  4141ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4141b0:	lea    r8,[rip+0x2c411]        # 0x4405c8
  4141b7:	lea    rdx,[rip+0x2c592]        # 0x440750
  4141be:	lea    rcx,[rip+0x2c3a9]        # 0x44056e
  4141c5:	add    rsp,0x20
  4141c9:	pop    rbx
  4141ca:	jmp    0x40fd20
  4141cf:	nop
  4141d0:	push   rsi
  4141d1:	push   rbx
  4141d2:	sub    rsp,0x28
  4141d6:	test   rcx,rcx
  4141d9:	mov    rbx,rcx
  4141dc:	je     0x414205
  4141de:	xor    eax,eax
  4141e0:	cmp    DWORD PTR [rcx+0x10],edx
  4141e3:	jbe    0x4141fe
  4141e5:	mov    rcx,rbx
  4141e8:	call   0x413ec0
  4141ed:	mov    rsi,QWORD PTR [rax]
  4141f0:	mov    rdx,rax
  4141f3:	mov    rcx,rbx
  4141f6:	call   0x414180
  4141fb:	mov    rax,rsi
  4141fe:	add    rsp,0x28
  414202:	pop    rbx
  414203:	pop    rsi
  414204:	ret    
  414205:	lea    r8,[rip+0x2c354]        # 0x440560
  41420c:	lea    rdx,[rip+0x2c5ed]        # 0x440800
  414213:	lea    rcx,[rip+0x2c354]        # 0x44056e
  41421a:	call   0x40fd20
  41421f:	xor    eax,eax
  414221:	add    rsp,0x28
  414225:	pop    rbx
  414226:	pop    rsi
  414227:	ret    
  414228:	nop    DWORD PTR [rax+rax*1+0x0]
  414230:	sub    rsp,0x28
  414234:	test   rcx,rcx
  414237:	je     0x414250
  414239:	mov    rax,QWORD PTR [rcx]
  41423c:	test   rax,rax
  41423f:	je     0x414244
  414241:	mov    rax,QWORD PTR [rax]
  414244:	add    rsp,0x28
  414248:	ret    
  414249:	nop    DWORD PTR [rax+0x0]
  414250:	lea    r8,[rip+0x2c309]        # 0x440560
  414257:	lea    rdx,[rip+0x2c4d2]        # 0x440730
  41425e:	lea    rcx,[rip+0x2c309]        # 0x44056e
  414265:	call   0x40fd20
  41426a:	xor    eax,eax
  41426c:	add    rsp,0x28
  414270:	ret    
  414271:	nop    DWORD PTR [rax+rax*1+0x0]
  414276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414280:	sub    rsp,0x28
  414284:	test   rcx,rcx
  414287:	je     0x4142a0
  414289:	mov    rax,QWORD PTR [rcx+0x8]
  41428d:	test   rax,rax
  414290:	je     0x414295
  414292:	mov    rax,QWORD PTR [rax]
  414295:	add    rsp,0x28
  414299:	ret    
  41429a:	nop    WORD PTR [rax+rax*1+0x0]
  4142a0:	lea    r8,[rip+0x2c2b9]        # 0x440560
  4142a7:	lea    rdx,[rip+0x2c462]        # 0x440710
  4142ae:	lea    rcx,[rip+0x2c2b9]        # 0x44056e
  4142b5:	call   0x40fd20
  4142ba:	xor    eax,eax
  4142bc:	add    rsp,0x28
  4142c0:	ret    
  4142c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4142c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142d0:	sub    rsp,0x28
  4142d4:	test   rcx,rcx
  4142d7:	je     0x4142f0
  4142d9:	call   0x413ec0
  4142de:	test   rax,rax
  4142e1:	je     0x4142e6
  4142e3:	mov    rax,QWORD PTR [rax]
  4142e6:	add    rsp,0x28
  4142ea:	ret    
  4142eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4142f0:	lea    r8,[rip+0x2c269]        # 0x440560
  4142f7:	lea    rdx,[rip+0x2c3f2]        # 0x4406f0
  4142fe:	lea    rcx,[rip+0x2c269]        # 0x44056e
  414305:	call   0x40fd20
  41430a:	xor    eax,eax
  41430c:	add    rsp,0x28
  414310:	ret    
  414311:	nop    DWORD PTR [rax+rax*1+0x0]
  414316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414320:	sub    rsp,0x28
  414324:	test   rcx,rcx
  414327:	je     0x414335
  414329:	mov    rcx,QWORD PTR [rcx]
  41432c:	add    rsp,0x28
  414330:	jmp    0x40a150
  414335:	lea    r8,[rip+0x2c224]        # 0x440560
  41433c:	lea    rdx,[rip+0x2c39f]        # 0x4406e2
  414343:	lea    rcx,[rip+0x2c224]        # 0x44056e
  41434a:	call   0x40fd20
  41434f:	mov    eax,0xffffffff
  414354:	add    rsp,0x28
  414358:	ret    
  414359:	nop    DWORD PTR [rax+0x0]
  414360:	push   rsi
  414361:	push   rbx
  414362:	sub    rsp,0x28
  414366:	test   rcx,rcx
  414369:	mov    rbx,rcx
  41436c:	je     0x4143a0
  41436e:	mov    rcx,QWORD PTR [rcx]
  414371:	call   0x40a070
  414376:	test   rax,rax
  414379:	mov    rsi,rax
  41437c:	je     0x414389
  41437e:	mov    rdx,rsi
  414381:	mov    rcx,rbx
  414384:	call   0x414180
  414389:	xor    eax,eax
  41438b:	test   rsi,rsi
  41438e:	setne  al
  414391:	add    rsp,0x28
  414395:	pop    rbx
  414396:	pop    rsi
  414397:	ret    
  414398:	nop    DWORD PTR [rax+rax*1+0x0]
  4143a0:	lea    r8,[rip+0x2c1b9]        # 0x440560
  4143a7:	lea    rdx,[rip+0x2c325]        # 0x4406d3
  4143ae:	lea    rcx,[rip+0x2c1b9]        # 0x44056e
  4143b5:	call   0x40fd20
  4143ba:	xor    eax,eax
  4143bc:	add    rsp,0x28
  4143c0:	pop    rbx
  4143c1:	pop    rsi
  4143c2:	ret    
  4143c3:	nop    DWORD PTR [rax]
  4143c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4143d0:	push   rbp
  4143d1:	push   rdi
  4143d2:	push   rsi
  4143d3:	push   rbx
  4143d4:	sub    rsp,0x28
  4143d8:	test   rcx,rcx
  4143db:	mov    rdi,rcx
  4143de:	mov    rsi,rdx
  4143e1:	je     0x414420
  4143e3:	mov    rdx,QWORD PTR [rcx]
  4143e6:	mov    ebp,DWORD PTR [rcx+0x10]
  4143e9:	test   rdx,rdx
  4143ec:	je     0x414445
  4143ee:	xchg   ax,ax
  4143f0:	cmp    QWORD PTR [rdx],rsi
  4143f3:	mov    rbx,QWORD PTR [rdx+0x8]
  4143f7:	je     0x414410
  4143f9:	test   rbx,rbx
  4143fc:	mov    rdx,rbx
  4143ff:	jne    0x4143f0
  414401:	mov    eax,ebp
  414403:	sub    eax,DWORD PTR [rdi+0x10]
  414406:	add    rsp,0x28
  41440a:	pop    rbx
  41440b:	pop    rsi
  41440c:	pop    rdi
  41440d:	pop    rbp
  41440e:	ret    
  41440f:	nop
  414410:	mov    rcx,rdi
  414413:	call   0x414180
  414418:	jmp    0x4143f9
  41441a:	nop    WORD PTR [rax+rax*1+0x0]
  414420:	lea    r8,[rip+0x2c139]        # 0x440560
  414427:	lea    rdx,[rip+0x2c292]        # 0x4406c0
  41442e:	lea    rcx,[rip+0x2c139]        # 0x44056e
  414435:	call   0x40fd20
  41443a:	xor    eax,eax
  41443c:	add    rsp,0x28
  414440:	pop    rbx
  414441:	pop    rsi
  414442:	pop    rdi
  414443:	pop    rbp
  414444:	ret    
  414445:	xor    eax,eax
  414447:	jmp    0x414406
  414449:	nop    DWORD PTR [rax+0x0]
  414450:	push   rbx
  414451:	sub    rsp,0x20
  414455:	test   rcx,rcx
  414458:	je     0x414480
  41445a:	test   rdx,rdx
  41445d:	je     0x4144a0
  41445f:	mov    rbx,rcx
  414462:	mov    rcx,QWORD PTR [rcx]
  414465:	call   0x409c30
  41446a:	add    DWORD PTR [rbx+0x10],0x1
  41446e:	mov    QWORD PTR [rbx],rax
  414471:	add    rsp,0x20
  414475:	pop    rbx
  414476:	ret    
  414477:	nop    WORD PTR [rax+rax*1+0x0]
  414480:	lea    r8,[rip+0x2c0d9]        # 0x440560
  414487:	lea    rdx,[rip+0x2c212]        # 0x4406a0
  41448e:	lea    rcx,[rip+0x2c0d9]        # 0x44056e
  414495:	add    rsp,0x20
  414499:	pop    rbx
  41449a:	jmp    0x40fd20
  41449f:	nop
  4144a0:	lea    r8,[rip+0x2c1a0]        # 0x440647
  4144a7:	jmp    0x414487
  4144a9:	nop    DWORD PTR [rax+0x0]
  4144b0:	push   rsi
  4144b1:	push   rbx
  4144b2:	sub    rsp,0x28
  4144b6:	test   rcx,rcx
  4144b9:	je     0x4144f3
  4144bb:	test   r8d,r8d
  4144be:	js     0x4144c6
  4144c0:	cmp    r8d,DWORD PTR [rcx+0x10]
  4144c4:	jb     0x4144d1
  4144c6:	add    rsp,0x28
  4144ca:	pop    rbx
  4144cb:	pop    rsi
  4144cc:	jmp    0x413ad0
  4144d1:	mov    rsi,rdx
  4144d4:	mov    rbx,rcx
  4144d7:	mov    edx,r8d
  4144da:	call   0x413ec0
  4144df:	mov    r8,rsi
  4144e2:	mov    rdx,rax
  4144e5:	mov    rcx,rbx
  4144e8:	add    rsp,0x28
  4144ec:	pop    rbx
  4144ed:	pop    rsi
  4144ee:	jmp    0x414450
  4144f3:	lea    r8,[rip+0x2c066]        # 0x440560
  4144fa:	lea    rdx,[rip+0x2c42f]        # 0x440930
  414501:	lea    rcx,[rip+0x2c066]        # 0x44056e
  414508:	add    rsp,0x28
  41450c:	pop    rbx
  41450d:	pop    rsi
  41450e:	jmp    0x40fd20
  414513:	nop    DWORD PTR [rax]
  414516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414520:	test   rcx,rcx
  414523:	je     0x414540
  414525:	test   rdx,rdx
  414528:	je     0x414560
  41452a:	cmp    QWORD PTR [rcx+0x8],rdx
  41452e:	je     0x414580
  414530:	mov    rdx,QWORD PTR [rdx+0x8]
  414534:	jmp    0x414450
  414539:	nop    DWORD PTR [rax+0x0]
  414540:	lea    r8,[rip+0x2c019]        # 0x440560
  414547:	lea    rdx,[rip+0x2c132]        # 0x440680
  41454e:	lea    rcx,[rip+0x2c019]        # 0x44056e
  414555:	jmp    0x40fd20
  41455a:	nop    WORD PTR [rax+rax*1+0x0]
  414560:	lea    r8,[rip+0x2c0e0]        # 0x440647
  414567:	lea    rdx,[rip+0x2c112]        # 0x440680
  41456e:	lea    rcx,[rip+0x2bff9]        # 0x44056e
  414575:	jmp    0x40fd20
  41457a:	nop    WORD PTR [rax+rax*1+0x0]
  414580:	mov    rdx,r8
  414583:	jmp    0x413ad0
  414588:	nop    DWORD PTR [rax+rax*1+0x0]
  414590:	push   r12
  414592:	push   rbp
  414593:	push   rdi
  414594:	push   rsi
  414595:	push   rbx
  414596:	sub    rsp,0x20
  41459a:	test   rcx,rcx
  41459d:	je     0x414600
  41459f:	mov    rbx,QWORD PTR [rcx]
  4145a2:	mov    rbp,r9
  4145a5:	mov    rdi,r8
  4145a8:	mov    rsi,rdx
  4145ab:	mov    r12,rcx
  4145ae:	test   rbx,rbx
  4145b1:	jne    0x4145be
  4145b3:	jmp    0x4145e5
  4145b5:	mov    rbx,QWORD PTR [rbx+0x8]
  4145b9:	test   rbx,rbx
  4145bc:	je     0x4145e5
  4145be:	mov    r8,rbp
  4145c1:	mov    rdx,rsi
  4145c4:	mov    rcx,QWORD PTR [rbx]
  4145c7:	call   rdi
  4145c9:	test   eax,eax
  4145cb:	js     0x4145b5
  4145cd:	mov    r8,rsi
  4145d0:	mov    rdx,rbx
  4145d3:	mov    rcx,r12
  4145d6:	add    rsp,0x20
  4145da:	pop    rbx
  4145db:	pop    rsi
  4145dc:	pop    rdi
  4145dd:	pop    rbp
  4145de:	pop    r12
  4145e0:	jmp    0x414450
  4145e5:	mov    rdx,rsi
  4145e8:	mov    rcx,r12
  4145eb:	add    rsp,0x20
  4145ef:	pop    rbx
  4145f0:	pop    rsi
  4145f1:	pop    rdi
  4145f2:	pop    rbp
  4145f3:	pop    r12
  4145f5:	jmp    0x413ad0
  4145fa:	nop    WORD PTR [rax+rax*1+0x0]
  414600:	lea    r8,[rip+0x2bf59]        # 0x440560
  414607:	lea    rdx,[rip+0x2c052]        # 0x440660
  41460e:	lea    rcx,[rip+0x2bf59]        # 0x44056e
  414615:	add    rsp,0x20
  414619:	pop    rbx
  41461a:	pop    rsi
  41461b:	pop    rdi
  41461c:	pop    rbp
  41461d:	pop    r12
  41461f:	jmp    0x40fd20
  414624:	nop
  414625:	nop
  414626:	nop
  414627:	nop
  414628:	nop
  414629:	nop
  41462a:	nop
  41462b:	nop
  41462c:	nop
  41462d:	nop
  41462e:	nop
  41462f:	nop
  414630:	push   rsi
  414631:	push   rbx
  414632:	sub    rsp,0x28
  414636:	mov    rax,rcx
  414639:	mov    rcx,QWORD PTR [rcx]
  41463c:	test   rcx,rcx
  41463f:	je     0x414663
  414641:	mov    rsi,rdx
  414644:	xor    edx,edx
  414646:	mov    rbx,rax
  414649:	call   0x41a8e0
  41464e:	mov    rcx,QWORD PTR [rsi]
  414651:	mov    rdx,rax
  414654:	call   0x417180
  414659:	mov    QWORD PTR [rsi],rax
  41465c:	mov    QWORD PTR [rbx],0x0
  414663:	add    rsp,0x28
  414667:	pop    rbx
  414668:	pop    rsi
  414669:	ret    
  41466a:	nop    WORD PTR [rax+rax*1+0x0]
  414670:	lea    rcx,[rip+0x2c3b9]        # 0x440a30
  414677:	jmp    0x42fc00
  41467c:	nop    DWORD PTR [rax+0x0]
  414680:	push   rsi
  414681:	push   rbx
  414682:	sub    rsp,0x28
  414686:	test   rcx,rcx
  414689:	mov    rsi,rcx
  41468c:	je     0x414780
  414692:	lea    rcx,[rip+0x2c3cd]        # 0x440a66
  414699:	call   0x41ae90
  41469e:	movsx  r8d,BYTE PTR [rsi]
  4146a2:	mov    rbx,rax
  4146a5:	test   r8b,r8b
  4146a8:	jne    0x4146d3
  4146aa:	jmp    0x414703
  4146ac:	nop    DWORD PTR [rax+0x0]
  4146b0:	mov    rcx,QWORD PTR [rbx]
  4146b3:	mov    QWORD PTR [rbx+0x8],rdx
  4146b7:	mov    BYTE PTR [rcx+rax*1],r8b
  4146bb:	mov    rdx,QWORD PTR [rbx]
  4146be:	mov    rax,QWORD PTR [rbx+0x8]
  4146c2:	mov    BYTE PTR [rdx+rax*1],0x0
  4146c6:	add    rsi,0x1
  4146ca:	movsx  r8d,BYTE PTR [rsi]
  4146ce:	test   r8b,r8b
  4146d1:	je     0x414703
  4146d3:	cmp    r8b,0x27
  4146d7:	je     0x414740
  4146d9:	mov    rax,QWORD PTR [rbx+0x8]
  4146dd:	lea    rdx,[rax+0x1]
  4146e1:	cmp    rdx,QWORD PTR [rbx+0x10]
  4146e5:	jb     0x4146b0
  4146e7:	add    rsi,0x1
  4146eb:	mov    rdx,0xffffffffffffffff
  4146f2:	mov    rcx,rbx
  4146f5:	call   0x41b0f0
  4146fa:	movsx  r8d,BYTE PTR [rsi]
  4146fe:	test   r8b,r8b
  414701:	jne    0x4146d3
  414703:	mov    rax,QWORD PTR [rbx+0x8]
  414707:	lea    rdx,[rax+0x1]
  41470b:	cmp    rdx,QWORD PTR [rbx+0x10]
  41470f:	jae    0x414754
  414711:	mov    rcx,QWORD PTR [rbx]
  414714:	mov    QWORD PTR [rbx+0x8],rdx
  414718:	mov    BYTE PTR [rcx+rax*1],0x27
  41471c:	mov    rdx,QWORD PTR [rbx]
  41471f:	mov    rcx,rbx
  414722:	mov    rax,QWORD PTR [rbx+0x8]
  414726:	mov    BYTE PTR [rdx+rax*1],0x0
  41472a:	xor    edx,edx
  41472c:	add    rsp,0x28
  414730:	pop    rbx
  414731:	pop    rsi
  414732:	jmp    0x41a8e0
  414737:	nop    WORD PTR [rax+rax*1+0x0]
  414740:	lea    rdx,[rip+0x2c2fd]        # 0x440a44
  414747:	mov    rcx,rbx
  41474a:	call   0x41ace0
  41474f:	jmp    0x4146c6
  414754:	mov    rcx,rbx
  414757:	mov    r8d,0x27
  41475d:	mov    rdx,0xffffffffffffffff
  414764:	call   0x41b0f0
  414769:	xor    edx,edx
  41476b:	mov    rcx,rbx
  41476e:	add    rsp,0x28
  414772:	pop    rbx
  414773:	pop    rsi
  414774:	jmp    0x41a8e0
  414779:	nop    DWORD PTR [rax+0x0]
  414780:	lea    r8,[rip+0x2c2c2]        # 0x440a49
  414787:	lea    rdx,[rip+0x2c512]        # 0x440ca0
  41478e:	lea    rcx,[rip+0x2c2cc]        # 0x440a61
  414795:	call   0x40fd20
  41479a:	xor    eax,eax
  41479c:	add    rsp,0x28
  4147a0:	pop    rbx
  4147a1:	pop    rsi
  4147a2:	ret    
  4147a3:	nop    DWORD PTR [rax]
  4147a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147b0:	push   r12
  4147b2:	push   rbp
  4147b3:	push   rdi
  4147b4:	push   rsi
  4147b5:	push   rbx
  4147b6:	sub    rsp,0x30
  4147ba:	test   rcx,rcx
  4147bd:	mov    rdi,rdx
  4147c0:	je     0x4149d7
  4147c6:	call   0x4182b0
  4147cb:	xor    ecx,ecx
  4147cd:	mov    rbp,rax
  4147d0:	mov    rsi,rbp
  4147d3:	call   0x41ae90
  4147d8:	mov    rbx,rax
  4147db:	movsx  r8d,BYTE PTR [rsi]
  4147df:	nop
  4147e0:	test   r8b,r8b
  4147e3:	je     0x414809
  4147e5:	cmp    r8b,0x27
  4147e9:	je     0x4148b2
  4147ef:	cmp    r8b,0x22
  4147f3:	je     0x4148b2
  4147f9:	cmp    r8b,0x5c
  4147fd:	jne    0x414825
  4147ff:	movsx  r8d,BYTE PTR [rsi+0x1]
  414804:	test   r8b,r8b
  414807:	jne    0x414854
  414809:	mov    rcx,rbp
  41480c:	call   0x40e6e0
  414811:	xor    edx,edx
  414813:	mov    rcx,rbx
  414816:	add    rsp,0x30
  41481a:	pop    rbx
  41481b:	pop    rsi
  41481c:	pop    rdi
  41481d:	pop    rbp
  41481e:	pop    r12
  414820:	jmp    0x41a8e0
  414825:	mov    r9,QWORD PTR [rbx+0x8]
  414829:	lea    r10,[r9+0x1]
  41482d:	cmp    r10,QWORD PTR [rbx+0x10]
  414831:	jae    0x414890
  414833:	mov    rax,QWORD PTR [rbx]
  414836:	mov    QWORD PTR [rbx+0x8],r10
  41483a:	mov    BYTE PTR [rax+r9*1],r8b
  41483e:	mov    rdx,QWORD PTR [rbx]
  414841:	mov    rax,QWORD PTR [rbx+0x8]
  414845:	mov    BYTE PTR [rdx+rax*1],0x0
  414849:	movsx  r8d,BYTE PTR [rsi+0x1]
  41484e:	add    rsi,0x1
  414852:	jmp    0x4147e0
  414854:	cmp    r8b,0xa
  414858:	je     0x41487e
  41485a:	mov    rax,QWORD PTR [rbx+0x8]
  41485e:	lea    rdx,[rax+0x1]
  414862:	cmp    rdx,QWORD PTR [rbx+0x10]
  414866:	jae    0x4148a1
  414868:	mov    rcx,QWORD PTR [rbx]
  41486b:	mov    QWORD PTR [rbx+0x8],rdx
  41486f:	mov    BYTE PTR [rcx+rax*1],r8b
  414873:	mov    rdx,QWORD PTR [rbx]
  414876:	mov    rax,QWORD PTR [rbx+0x8]
  41487a:	mov    BYTE PTR [rdx+rax*1],0x0
  41487e:	movsx  r8d,BYTE PTR [rsi+0x2]
  414883:	add    rsi,0x2
  414887:	jmp    0x4147e0
  41488c:	nop    DWORD PTR [rax+0x0]
  414890:	mov    rdx,0xffffffffffffffff
  414897:	mov    rcx,rbx
  41489a:	call   0x41b0f0
  41489f:	jmp    0x414849
  4148a1:	mov    rdx,0xffffffffffffffff
  4148a8:	mov    rcx,rbx
  4148ab:	call   0x41b0f0
  4148b0:	jmp    0x41487e
  4148b2:	test   rdi,rdi
  4148b5:	je     0x414903
  4148b7:	cmp    QWORD PTR [rdi],0x0
  4148bb:	je     0x414903
  4148bd:	lea    r8,[rip+0x2c1fe]        # 0x440ac2
  4148c4:	lea    rdx,[rip+0x2c3a5]        # 0x440c70
  4148cb:	lea    rcx,[rip+0x2c18f]        # 0x440a61
  4148d2:	call   0x40fd20
  4148d7:	cmp    QWORD PTR [rdi],0x0
  4148db:	je     0x414a7b
  4148e1:	mov    rcx,rbp
  4148e4:	call   0x40e6e0
  4148e9:	mov    edx,0x1
  4148ee:	mov    rcx,rbx
  4148f1:	call   0x41a8e0
  4148f6:	xor    eax,eax
  4148f8:	add    rsp,0x30
  4148fc:	pop    rbx
  4148fd:	pop    rsi
  4148fe:	pop    rdi
  4148ff:	pop    rbp
  414900:	pop    r12
  414902:	ret    
  414903:	lea    rax,[rsi+0x1]
  414907:	cmp    r8b,0x22
  41490b:	mov    rdx,rax
  41490e:	jne    0x414922
  414910:	jmp    0x414960
  414912:	cmp    dl,0x27
  414915:	je     0x414a42
  41491b:	mov    BYTE PTR [rax-0x1],dl
  41491e:	add    rax,0x1
  414922:	movzx  edx,BYTE PTR [rax]
  414925:	lea    rcx,[rax-0x1]
  414929:	test   dl,dl
  41492b:	jne    0x414912
  41492d:	mov    BYTE PTR [rcx],0x0
  414930:	lea    rcx,[rip+0x2c0f9]        # 0x440a30
  414937:	call   0x42fc00
  41493c:	lea    r9,[rip+0x2c125]        # 0x440a68
  414943:	xor    r8d,r8d
  414946:	mov    edx,eax
  414948:	mov    rcx,rdi
  41494b:	call   0x430690
  414950:	test   rdi,rdi
  414953:	je     0x4148e1
  414955:	jmp    0x4148d7
  414957:	nop    WORD PTR [rax+rax*1+0x0]
  414960:	movzx  r8d,BYTE PTR [rax]
  414964:	lea    rcx,[rdx-0x1]
  414968:	test   r8b,r8b
  41496b:	je     0x41492d
  41496d:	cmp    rax,rcx
  414970:	jbe    0x4149ab
  414972:	cmp    r8b,0x22
  414976:	je     0x414a42
  41497c:	cmp    r8b,0x5c
  414980:	jne    0x4149fe
  414982:	movzx  ecx,BYTE PTR [rax+0x1]
  414986:	cmp    cl,0x24
  414989:	je     0x41499f
  41498b:	jle    0x414a5c
  414991:	cmp    cl,0x5c
  414994:	je     0x41499f
  414996:	cmp    cl,0x60
  414999:	jne    0x414a6e
  41499f:	mov    r9,rdx
  4149a2:	mov    BYTE PTR [rdx-0x1],cl
  4149a5:	add    rax,0x2
  4149a9:	jmp    0x414a09
  4149ab:	lea    rax,[rip+0x2c185]        # 0x440b37
  4149b2:	lea    r9,[rip+0x2c2b7]        # 0x440c70
  4149b9:	lea    rdx,[rip+0x2c120]        # 0x440ae0
  4149c0:	lea    rcx,[rip+0x2c09a]        # 0x440a61
  4149c7:	mov    r8d,0x67
  4149cd:	mov    QWORD PTR [rsp+0x20],rax
  4149d2:	call   0x41e680
  4149d7:	lea    r8,[rip+0x2c0ce]        # 0x440aac
  4149de:	lea    rdx,[rip+0x2c2ab]        # 0x440c90
  4149e5:	lea    rcx,[rip+0x2c075]        # 0x440a61
  4149ec:	call   0x40fd20
  4149f1:	xor    eax,eax
  4149f3:	add    rsp,0x30
  4149f7:	pop    rbx
  4149f8:	pop    rsi
  4149f9:	pop    rdi
  4149fa:	pop    rbp
  4149fb:	pop    r12
  4149fd:	ret    
  4149fe:	mov    r9,rdx
  414a01:	mov    BYTE PTR [rdx-0x1],r8b
  414a05:	add    rax,0x1
  414a09:	add    rdx,0x1
  414a0d:	cmp    rax,r9
  414a10:	ja     0x414960
  414a16:	lea    rax,[rip+0x2c11a]        # 0x440b37
  414a1d:	lea    r9,[rip+0x2c24c]        # 0x440c70
  414a24:	lea    rdx,[rip+0x2c0b5]        # 0x440ae0
  414a2b:	lea    rcx,[rip+0x2c02f]        # 0x440a61
  414a32:	mov    r8d,0x92
  414a38:	mov    QWORD PTR [rsp+0x20],rax
  414a3d:	call   0x41e680
  414a42:	lea    r12,[rax+0x1]
  414a46:	mov    BYTE PTR [rcx],0x0
  414a49:	mov    rdx,rsi
  414a4c:	mov    rcx,rbx
  414a4f:	call   0x41ace0
  414a54:	mov    rsi,r12
  414a57:	jmp    0x4147db
  414a5c:	cmp    cl,0xa
  414a5f:	je     0x41499f
  414a65:	cmp    cl,0x22
  414a68:	je     0x41499f
  414a6e:	add    rax,0x1
  414a72:	mov    r9,rdx
  414a75:	mov    BYTE PTR [rdx-0x1],0x5c
  414a79:	jmp    0x414a09
  414a7b:	lea    rax,[rip+0x2c0be]        # 0x440b40
  414a82:	lea    r9,[rip+0x2c207]        # 0x440c90
  414a89:	lea    rdx,[rip+0x2c050]        # 0x440ae0
  414a90:	lea    rcx,[rip+0x2bfca]        # 0x440a61
  414a97:	mov    r8d,0x14c
  414a9d:	mov    QWORD PTR [rsp+0x20],rax
  414aa2:	call   0x41e680
  414aa7:	nop
  414aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  414ab0:	push   r15
  414ab2:	push   r14
  414ab4:	push   r13
  414ab6:	push   r12
  414ab8:	push   rbp
  414ab9:	push   rdi
  414aba:	push   rsi
  414abb:	push   rbx
  414abc:	sub    rsp,0x48
  414ac0:	test   rcx,rcx
  414ac3:	mov    rsi,rcx
  414ac6:	mov    QWORD PTR [rsp+0x98],rdx
  414ace:	mov    QWORD PTR [rsp+0xa0],r8
  414ad6:	mov    rbx,r9
  414ad9:	je     0x414f63
  414adf:	movzx  eax,BYTE PTR [rcx]
  414ae2:	mov    QWORD PTR [rsp+0x30],0x0
  414aeb:	mov    QWORD PTR [rsp+0x38],0x0
  414af4:	test   al,al
  414af6:	je     0x414e3f
  414afc:	mov    r15,rsi
  414aff:	xor    r14d,r14d
  414b02:	xor    r12d,r12d
  414b05:	lea    rbp,[rsp+0x38]
  414b0a:	lea    rdi,[rsp+0x30]
  414b0f:	xor    r13d,r13d
  414b12:	jmp    0x414b8c
  414b14:	cmp    r12b,0x23
  414b18:	je     0x414c60
  414b1e:	test   r12b,r12b
  414b21:	je     0x414c10
  414b27:	cmp    r12b,al
  414b2a:	je     0x414d10
  414b30:	mov    rcx,QWORD PTR [rsp+0x30]
  414b35:	test   rcx,rcx
  414b38:	je     0x414d37
  414b3e:	mov    rax,QWORD PTR [rcx+0x8]
  414b42:	movsx  r8d,BYTE PTR [r15]
  414b46:	lea    rdx,[rax+0x1]
  414b4a:	cmp    rdx,QWORD PTR [rcx+0x10]
  414b4e:	jae    0x414ca0
  414b54:	mov    r11,QWORD PTR [rcx]
  414b57:	mov    QWORD PTR [rcx+0x8],rdx
  414b5b:	mov    BYTE PTR [r11+rax*1],r8b
  414b5f:	mov    rdx,QWORD PTR [rcx]
  414b62:	mov    rax,QWORD PTR [rcx+0x8]
  414b66:	mov    BYTE PTR [rdx+rax*1],0x0
  414b6a:	movzx  edx,BYTE PTR [r15]
  414b6e:	mov    rax,r15
  414b71:	lea    r15,[rax+0x1]
  414b75:	movzx  eax,BYTE PTR [rax+0x1]
  414b79:	xor    r14d,0x1
  414b7d:	cmp    dl,0x5c
  414b80:	cmovne r14d,r13d
  414b84:	test   al,al
  414b86:	je     0x414dc0
  414b8c:	cmp    r12b,0x5c
  414b90:	jne    0x414b14
  414b92:	cmp    al,0xa
  414b94:	je     0x414bfe
  414b96:	mov    rcx,QWORD PTR [rsp+0x30]
  414b9b:	test   rcx,rcx
  414b9e:	je     0x414f51
  414ba4:	mov    rax,QWORD PTR [rcx+0x8]
  414ba8:	lea    rdx,[rax+0x1]
  414bac:	cmp    rdx,QWORD PTR [rcx+0x10]
  414bb0:	jae    0x414cf0
  414bb6:	mov    r8,QWORD PTR [rcx]
  414bb9:	mov    QWORD PTR [rcx+0x8],rdx
  414bbd:	mov    BYTE PTR [r8+rax*1],0x5c
  414bc2:	mov    rdx,QWORD PTR [rcx]
  414bc5:	mov    rax,QWORD PTR [rcx+0x8]
  414bc9:	mov    BYTE PTR [rdx+rax*1],0x0
  414bcd:	mov    rcx,QWORD PTR [rsp+0x30]
  414bd2:	movsx  r8d,BYTE PTR [r15]
  414bd6:	mov    rax,QWORD PTR [rcx+0x8]
  414bda:	lea    rdx,[rax+0x1]
  414bde:	cmp    rdx,QWORD PTR [rcx+0x10]
  414be2:	jae    0x414cd3
  414be8:	mov    r10,QWORD PTR [rcx]
  414beb:	mov    QWORD PTR [rcx+0x8],rdx
  414bef:	mov    BYTE PTR [r10+rax*1],r8b
  414bf3:	mov    rdx,QWORD PTR [rcx]
  414bf6:	mov    rax,QWORD PTR [rcx+0x8]
  414bfa:	mov    BYTE PTR [rdx+rax*1],0x0
  414bfe:	movzx  edx,BYTE PTR [r15]
  414c02:	mov    rax,r15
  414c05:	xor    r12d,r12d
  414c08:	jmp    0x414b71
  414c0d:	nop    DWORD PTR [rax]
  414c10:	cmp    al,0x22
  414c12:	je     0x414d70
  414c18:	jg     0x414cb0
  414c1e:	cmp    al,0xa
  414c20:	je     0x414d50
  414c26:	cmp    al,0x20
  414c28:	je     0x414c32
  414c2a:	cmp    al,0x9
  414c2c:	jne    0x414b30
  414c32:	mov    rax,QWORD PTR [rsp+0x30]
  414c37:	test   rax,rax
  414c3a:	je     0x414c50
  414c3c:	cmp    QWORD PTR [rax+0x8],0x0
  414c41:	jne    0x414d50
  414c47:	nop    WORD PTR [rax+rax*1+0x0]
  414c50:	movzx  edx,BYTE PTR [r15]
  414c54:	mov    rax,r15
  414c57:	jmp    0x414b71
  414c5c:	nop    DWORD PTR [rax+0x0]
  414c60:	movzx  r10d,BYTE PTR [r15]
  414c64:	mov    rax,r15
  414c67:	cmp    r10b,0xa
  414c6b:	jne    0x414c7e
  414c6d:	jmp    0x414c83
  414c6f:	nop
  414c70:	add    rax,0x1
  414c74:	movzx  r10d,BYTE PTR [rax]
  414c78:	cmp    r10b,0xa
  414c7c:	je     0x414c83
  414c7e:	test   r10b,r10b
  414c81:	jne    0x414c70
  414c83:	test   r10b,r10b
  414c86:	je     0x414e49
  414c8c:	movzx  edx,BYTE PTR [rax]
  414c8f:	xor    r12d,r12d
  414c92:	jmp    0x414b71
  414c97:	nop    WORD PTR [rax+rax*1+0x0]
  414ca0:	mov    rdx,0xffffffffffffffff
  414ca7:	call   0x41b0f0
  414cac:	jmp    0x414c50
  414cae:	xchg   ax,ax
  414cb0:	cmp    al,0x27
  414cb2:	je     0x414d70
  414cb8:	cmp    al,0x5c
  414cba:	je     0x414cc4
  414cbc:	cmp    al,0x23
  414cbe:	jne    0x414b30
  414cc4:	movzx  r12d,BYTE PTR [r15]
  414cc8:	mov    rax,r15
  414ccb:	mov    edx,r12d
  414cce:	jmp    0x414b71
  414cd3:	mov    rdx,0xffffffffffffffff
  414cda:	xor    r12d,r12d
  414cdd:	call   0x41b0f0
  414ce2:	movzx  edx,BYTE PTR [r15]
  414ce6:	mov    rax,r15
  414ce9:	jmp    0x414b71
  414cee:	xchg   ax,ax
  414cf0:	mov    r8d,0x5c
  414cf6:	mov    rdx,0xffffffffffffffff
  414cfd:	call   0x41b0f0
  414d02:	jmp    0x414bcd
  414d07:	nop    WORD PTR [rax+rax*1+0x0]
  414d10:	test   r14b,0x1
  414d14:	je     0x414d26
  414d16:	cmp    r12b,0x22
  414d1a:	mov    r12d,0x22
  414d20:	je     0x414b30
  414d26:	mov    rcx,QWORD PTR [rsp+0x30]
  414d2b:	xor    r12d,r12d
  414d2e:	test   rcx,rcx
  414d31:	jne    0x414b3e
  414d37:	call   0x41ae90
  414d3c:	mov    rcx,rax
  414d3f:	mov    QWORD PTR [rsp+0x30],rax
  414d44:	jmp    0x414b3e
  414d49:	nop    DWORD PTR [rax+0x0]
  414d50:	mov    rdx,rbp
  414d53:	mov    rcx,rdi
  414d56:	call   0x414630
  414d5b:	movzx  edx,BYTE PTR [r15]
  414d5f:	mov    rax,r15
  414d62:	jmp    0x414b71
  414d67:	nop    WORD PTR [rax+rax*1+0x0]
  414d70:	mov    rcx,QWORD PTR [rsp+0x30]
  414d75:	test   rcx,rcx
  414d78:	je     0x414ffb
  414d7e:	mov    rax,QWORD PTR [rcx+0x8]
  414d82:	movsx  r8d,BYTE PTR [r15]
  414d86:	lea    rdx,[rax+0x1]
  414d8a:	cmp    rdx,QWORD PTR [rcx+0x10]
  414d8e:	jae    0x414f36
  414d94:	mov    r10,QWORD PTR [rcx]
  414d97:	mov    QWORD PTR [rcx+0x8],rdx
  414d9b:	mov    BYTE PTR [r10+rax*1],r8b
  414d9f:	mov    rdx,QWORD PTR [rcx]
  414da2:	mov    rax,QWORD PTR [rcx+0x8]
  414da6:	mov    BYTE PTR [rdx+rax*1],0x0
  414daa:	movzx  r12d,BYTE PTR [r15]
  414dae:	mov    rax,r15
  414db1:	mov    edx,r12d
  414db4:	jmp    0x414b71
  414db9:	nop    DWORD PTR [rax+0x0]
  414dc0:	mov    rdx,rbp
  414dc3:	mov    rcx,rdi
  414dc6:	call   0x414630
  414dcb:	test   r12b,r12b
  414dce:	je     0x414e54
  414dd4:	cmp    r12b,0x5c
  414dd8:	lea    rcx,[rip+0x2bc51]        # 0x440a30
  414ddf:	je     0x414f84
  414de5:	call   0x42fc00
  414dea:	movsx  r10d,r12b
  414dee:	lea    r9,[rip+0x2bdab]        # 0x440ba0
  414df5:	mov    QWORD PTR [rsp+0x28],rsi
  414dfa:	mov    DWORD PTR [rsp+0x20],r10d
  414dff:	xor    r8d,r8d
  414e02:	mov    edx,eax
  414e04:	mov    rcx,rbx
  414e07:	call   0x430630
  414e0c:	test   rbx,rbx
  414e0f:	je     0x414e1b
  414e11:	cmp    QWORD PTR [rbx],0x0
  414e15:	je     0x414fcf
  414e1b:	mov    rcx,QWORD PTR [rsp+0x38]
  414e20:	lea    rdx,[rip+0xffffffffffff98b9]        # 0x40e6e0
  414e27:	call   0x4170e0
  414e2c:	xor    eax,eax
  414e2e:	add    rsp,0x48
  414e32:	pop    rbx
  414e33:	pop    rsi
  414e34:	pop    rdi
  414e35:	pop    rbp
  414e36:	pop    r12
  414e38:	pop    r13
  414e3a:	pop    r14
  414e3c:	pop    r15
  414e3e:	ret    
  414e3f:	lea    rbp,[rsp+0x38]
  414e44:	lea    rdi,[rsp+0x30]
  414e49:	mov    rdx,rbp
  414e4c:	mov    rcx,rdi
  414e4f:	call   0x414630
  414e54:	mov    rcx,QWORD PTR [rsp+0x38]
  414e59:	test   rcx,rcx
  414e5c:	je     0x414fa7
  414e62:	call   0x417530
  414e67:	test   rax,rax
  414e6a:	mov    rdi,rax
  414e6d:	je     0x414f2f
  414e73:	mov    rcx,rax
  414e76:	mov    rsi,rdi
  414e79:	call   0x417720
  414e7e:	lea    ecx,[rax+0x1]
  414e81:	mov    edx,0x8
  414e86:	mov    r14d,eax
  414e89:	movsxd rcx,ecx
  414e8c:	call   0x40e800
  414e91:	mov    rbp,rax
  414e94:	mov    r15,rax
  414e97:	nop    WORD PTR [rax+rax*1+0x0]
  414ea0:	mov    rcx,QWORD PTR [rsi]
  414ea3:	mov    rdx,rbx
  414ea6:	call   0x4147b0
  414eab:	test   rax,rax
  414eae:	mov    QWORD PTR [r15],rax
  414eb1:	je     0x414f09
  414eb3:	mov    rsi,QWORD PTR [rsi+0x8]
  414eb7:	add    r15,0x8
  414ebb:	test   rsi,rsi
  414ebe:	jne    0x414ea0
  414ec0:	lea    rdx,[rip+0xffffffffffff9819]        # 0x40e6e0
  414ec7:	mov    rcx,rdi
  414eca:	call   0x4170e0
  414ecf:	cmp    QWORD PTR [rsp+0x98],0x0
  414ed8:	je     0x414ee5
  414eda:	mov    rax,QWORD PTR [rsp+0x98]
  414ee2:	mov    DWORD PTR [rax],r14d
  414ee5:	cmp    QWORD PTR [rsp+0xa0],0x0
  414eee:	je     0x415039
  414ef4:	mov    rax,QWORD PTR [rsp+0xa0]
  414efc:	mov    QWORD PTR [rax],rbp
  414eff:	mov    eax,0x1
  414f04:	jmp    0x414e2e
  414f09:	test   rbx,rbx
  414f0c:	je     0x414f18
  414f0e:	cmp    QWORD PTR [rbx],0x0
  414f12:	je     0x41500d
  414f18:	mov    rcx,rbp
  414f1b:	call   0x41a040
  414f20:	lea    rdx,[rip+0xffffffffffff97b9]        # 0x40e6e0
  414f27:	mov    rcx,rdi
  414f2a:	call   0x4170e0
  414f2f:	xor    eax,eax
  414f31:	jmp    0x414e2e
  414f36:	mov    rdx,0xffffffffffffffff
  414f3d:	call   0x41b0f0
  414f42:	movzx  r12d,BYTE PTR [r15]
  414f46:	mov    rax,r15
  414f49:	mov    edx,r12d
  414f4c:	jmp    0x414b71
  414f51:	call   0x41ae90
  414f56:	mov    rcx,rax
  414f59:	mov    QWORD PTR [rsp+0x30],rax
  414f5e:	jmp    0x414ba4
  414f63:	lea    r8,[rip+0x2bcac]        # 0x440c16
  414f6a:	lea    rdx,[rip+0x2bcdf]        # 0x440c50
  414f71:	lea    rcx,[rip+0x2bae9]        # 0x440a61
  414f78:	call   0x40fd20
  414f7d:	xor    eax,eax
  414f7f:	jmp    0x414e2e
  414f84:	call   0x42fc00
  414f89:	lea    r9,[rip+0x2bbd0]        # 0x440b60
  414f90:	mov    QWORD PTR [rsp+0x20],rsi
  414f95:	xor    r8d,r8d
  414f98:	mov    edx,eax
  414f9a:	mov    rcx,rbx
  414f9d:	call   0x430630
  414fa2:	jmp    0x414e0c
  414fa7:	lea    rcx,[rip+0x2ba82]        # 0x440a30
  414fae:	call   0x42fc00
  414fb3:	lea    r9,[rip+0x2bc2e]        # 0x440be8
  414fba:	mov    r8d,0x1
  414fc0:	mov    edx,eax
  414fc2:	mov    rcx,rbx
  414fc5:	call   0x430690
  414fca:	jmp    0x414e0c
  414fcf:	lea    rax,[rip+0x2bb6a]        # 0x440b40
  414fd6:	lea    r9,[rip+0x2bc53]        # 0x440c30
  414fdd:	lea    rdx,[rip+0x2bafc]        # 0x440ae0
  414fe4:	lea    rcx,[rip+0x2ba76]        # 0x440a61
  414feb:	mov    r8d,0x24d
  414ff1:	mov    QWORD PTR [rsp+0x20],rax
  414ff6:	call   0x41e680
  414ffb:	call   0x41ae90
  415000:	mov    rcx,rax
  415003:	mov    QWORD PTR [rsp+0x30],rax
  415008:	jmp    0x414d7e
  41500d:	lea    rax,[rip+0x2bb2c]        # 0x440b40
  415014:	lea    r9,[rip+0x2bc35]        # 0x440c50
  41501b:	lea    rdx,[rip+0x2babe]        # 0x440ae0
  415022:	lea    rcx,[rip+0x2ba38]        # 0x440a61
  415029:	mov    r8d,0x2a8
  41502f:	mov    QWORD PTR [rsp+0x20],rax
  415034:	call   0x41e680
  415039:	mov    rcx,rbp
  41503c:	call   0x41a040
  415041:	mov    eax,0x1
  415046:	jmp    0x414e2e
  41504b:	nop
  41504c:	nop
  41504d:	nop
  41504e:	nop
  41504f:	nop
  415050:	push   rbp
  415051:	push   rdi
  415052:	push   rsi
  415053:	push   rbx
  415054:	sub    rsp,0x38
  415058:	mov    rbx,QWORD PTR [rip+0x71829]        # 0x486888
  41505f:	mov    rdi,rcx
  415062:	mov    QWORD PTR [rsp+0x68],rdx
  415067:	mov    QWORD PTR [rsp+0x70],r8
  41506c:	mov    QWORD PTR [rsp+0x78],r9
  415071:	call   rbx
  415073:	lea    rcx,[rip+0x2bc37]        # 0x440cb1
  41507a:	lea    r9,[rax+0x60]
  41507e:	mov    edx,0x1
  415083:	mov    r8d,0x15
  415089:	call   0x438848
  41508e:	call   0x425280
  415093:	mov    rsi,rax
  415096:	call   0x438700
  41509b:	lea    r8,[rip+0x2bc0e]        # 0x440cb0
  4150a2:	test   rsi,rsi
  4150a5:	mov    ebp,eax
  4150a7:	cmove  rsi,r8
  4150ab:	call   rbx
  4150ad:	mov    r8,rsi
  4150b0:	lea    rcx,[rax+0x60]
  4150b4:	lea    rdx,[rip+0x2bc0c]        # 0x440cc7
  4150bb:	lea    rsi,[rsp+0x68]
  4150c0:	mov    r9d,ebp
  4150c3:	call   0x438870
  4150c8:	mov    QWORD PTR [rsp+0x28],rsi
  4150cd:	call   rbx
  4150cf:	lea    rcx,[rax+0x60]
  4150d3:	mov    r8,rsi
  4150d6:	mov    rdx,rdi
  4150d9:	call   0x438730
  4150de:	call   rbx
  4150e0:	lea    rdx,[rax+0x60]
  4150e4:	mov    ecx,0xa
  4150e9:	call   0x438868
  4150ee:	call   0x4388c0
  4150f3:	nop
  4150f4:	xchg   ax,ax
  4150f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415100:	push   rsi
  415101:	push   rbx
  415102:	sub    rsp,0x28
  415106:	mov    rax,QWORD PTR [rip+0x6f173]        # 0x484280
  41510d:	mov    r8d,0x1
  415113:	lea    r9d,[rcx*8+0x2f]
  41511b:	mov    r10,rcx
  41511e:	mov    r11,rdx
  415121:	bsr    r9d,r9d
  415125:	lea    ecx,[r9+0x1]
  415129:	shl    r8d,cl
  41512c:	movsxd r8,r8d
  41512f:	cmp    r8,rax
  415132:	cmovb  r8,rax
  415136:	mov    rax,rdx
  415139:	xor    edx,edx
  41513b:	div    r8
  41513e:	imul   rax,r8
  415142:	lea    r9,[rax+r8*1-0x30]
  415147:	mov    ecx,DWORD PTR [r9+0x8]
  41514b:	test   ecx,ecx
  41514d:	je     0x4151b5
  41514f:	mov    rdx,QWORD PTR [r9]
  415152:	shr    r10,0x4
  415156:	sub    ecx,0x1
  415159:	sub    r10d,0x1
  41515d:	test   rdx,rdx
  415160:	mov    QWORD PTR [r11],rdx
  415163:	mov    QWORD PTR [r9],r11
  415166:	mov    DWORD PTR [r9+0x8],ecx
  41516a:	je     0x4151f5
  415170:	test   ecx,ecx
  415172:	jne    0x4151ae
  415174:	mov    rcx,QWORD PTR [r9+0x18]
  415178:	mov    rdx,QWORD PTR [r9+0x10]
  41517c:	mov    QWORD PTR [rdx+0x18],rcx
  415180:	mov    QWORD PTR [rcx+0x10],rdx
  415184:	mov    rcx,QWORD PTR [rip+0x6f15d]        # 0x4842e8
  41518b:	lea    rcx,[rcx+r10*8]
  41518f:	cmp    QWORD PTR [rcx],r9
  415192:	je     0x4151e3
  415194:	cmp    r8,QWORD PTR [rip+0x6f15d]        # 0x4842f8
  41519b:	ja     0x4151d0
  41519d:	mov    rdx,QWORD PTR [rip+0x6f0ac]        # 0x484250
  4151a4:	mov    QWORD PTR [rip+0x6f0a5],rax        # 0x484250
  4151ab:	mov    QWORD PTR [rax],rdx
  4151ae:	add    rsp,0x28
  4151b2:	pop    rbx
  4151b3:	pop    rsi
  4151b4:	ret    
  4151b5:	lea    rdx,[rip+0x2bb1d]        # 0x440cd9
  4151bc:	lea    rcx,[rip+0x2bb2d]        # 0x440cf0
  4151c3:	call   0x415050
  4151c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4151d0:	lea    rdx,[rip+0x2bb2e]        # 0x440d05
  4151d7:	lea    rcx,[rip+0x2bb12]        # 0x440cf0
  4151de:	call   0x415050
  4151e3:	cmp    rdx,r9
  4151e6:	mov    r9d,0x0
  4151ec:	cmove  rdx,r9
  4151f0:	mov    QWORD PTR [rcx],rdx
  4151f3:	jmp    0x415194
  4151f5:	mov    r11,QWORD PTR [r9+0x18]
  4151f9:	mov    rbx,QWORD PTR [r9+0x10]
  4151fd:	mov    QWORD PTR [rbx+0x18],r11
  415201:	mov    QWORD PTR [r11+0x10],rbx
  415205:	mov    r11d,r10d
  415208:	shl    r11,0x3
  41520c:	mov    rsi,r11
  41520f:	add    rsi,QWORD PTR [rip+0x6f0d2]        # 0x4842e8
  415216:	cmp    QWORD PTR [rsi],r9
  415219:	je     0x415250
  41521b:	mov    rdx,r11
  41521e:	add    rdx,QWORD PTR [rip+0x6f0c3]        # 0x4842e8
  415225:	mov    r11,QWORD PTR [rdx]
  415228:	test   r11,r11
  41522b:	je     0x415260
  41522d:	mov    rbx,QWORD PTR [r11+0x18]
  415231:	mov    QWORD PTR [r11+0x18],r9
  415235:	mov    QWORD PTR [rbx+0x10],r9
  415239:	mov    QWORD PTR [r9+0x10],r11
  41523d:	mov    QWORD PTR [r9+0x18],rbx
  415241:	mov    QWORD PTR [rdx],r9
  415244:	jmp    0x415170
  415249:	nop    DWORD PTR [rax+0x0]
  415250:	cmp    rbx,r9
  415253:	cmovne rdx,rbx
  415257:	mov    QWORD PTR [rsi],rdx
  41525a:	jmp    0x41521b
  41525c:	nop    DWORD PTR [rax+0x0]
  415260:	mov    QWORD PTR [r9+0x10],r9
  415264:	mov    QWORD PTR [r9+0x18],r9
  415268:	jmp    0x415241
  41526a:	nop    WORD PTR [rax+rax*1+0x0]
  415270:	push   rbx
  415271:	sub    rsp,0x50
  415275:	cmp    QWORD PTR [rip+0x6f07b],0x0        # 0x4842f8
  41527d:	jne    0x415420
  415283:	lea    rbx,[rsp+0x20]
  415288:	mov    rcx,rbx
  41528b:	call   QWORD PTR [rip+0x714a7]        # 0x486738
  415291:	mov    eax,DWORD PTR [rsp+0x24]
  415295:	cmp    rax,0x1ff
  41529b:	mov    QWORD PTR [rip+0x6f056],rax        # 0x4842f8
  4152a2:	jbe    0x415433
  4152a8:	lea    rdx,[rax-0x1]
  4152ac:	test   rdx,rax
  4152af:	jne    0x415480
  4152b5:	mov    rax,QWORD PTR [rip+0x253c4]        # 0x43a680
  4152bc:	lea    rcx,[rip+0x2bad9]        # 0x440d9c
  4152c3:	mov    QWORD PTR [rip+0x6efc6],rax        # 0x484290
  4152ca:	mov    rax,QWORD PTR [rip+0x253b7]        # 0x43a688
  4152d1:	mov    QWORD PTR [rip+0x6efc0],rax        # 0x484298
  4152d8:	mov    rax,QWORD PTR [rip+0x253b1]        # 0x43a690
  4152df:	mov    QWORD PTR [rip+0x6efba],rax        # 0x4842a0
  4152e6:	mov    rax,QWORD PTR [rip+0x253ab]        # 0x43a698
  4152ed:	mov    QWORD PTR [rip+0x6efb4],rax        # 0x4842a8
  4152f4:	call   0x438838
  4152f9:	test   rax,rax
  4152fc:	mov    rcx,rax
  4152ff:	je     0x415493
  415305:	lea    rax,[rip+0x2ba3e]        # 0x440d4a
  41530c:	mov    r8d,0x2
  415312:	mov    rdx,rbx
  415315:	mov    DWORD PTR [rsp+0x28],0x1
  41531d:	mov    DWORD PTR [rsp+0x38],0x2
  415325:	mov    QWORD PTR [rsp+0x20],rax
  41532a:	lea    rax,[rip+0x2ba27]        # 0x440d58
  415331:	mov    QWORD PTR [rsp+0x30],rax
  415336:	call   0x430c70
  41533b:	test   al,0x1
  41533d:	jne    0x415450
  415343:	test   al,0x2
  415345:	mov    edx,DWORD PTR [rip+0x6ef45]        # 0x484290
  41534b:	jne    0x415467
  415351:	mov    rax,QWORD PTR [rip+0x6efa0]        # 0x4842f8
  415358:	test   edx,edx
  41535a:	mov    QWORD PTR [rip+0x6ef1f],rax        # 0x484280
  415361:	mov    QWORD PTR [rip+0x6ef20],rax        # 0x484288
  415368:	je     0x4154c0
  41536e:	mov    QWORD PTR [rip+0x6ef4f],0x0        # 0x4842c8
  415379:	mov    QWORD PTR [rip+0x6ef3c],0x0        # 0x4842c0
  415384:	mov    QWORD PTR [rip+0x6ef59],0x0        # 0x4842e8
  41538f:	lea    rcx,[rip+0x6ef22]        # 0x4842b8
  415396:	call   0x426d10
  41539b:	lea    rcx,[rip+0x6ef3e]        # 0x4842e0
  4153a2:	mov    DWORD PTR [rip+0x6ef24],0x0        # 0x4842d0
  4153ac:	mov    DWORD PTR [rip+0x6ef1e],0x7        # 0x4842d4
  4153b6:	mov    DWORD PTR [rip+0x6ef18],0x0        # 0x4842d8
  4153c0:	call   0x426d10
  4153c5:	mov    eax,DWORD PTR [rip+0x6ef09]        # 0x4842d4
  4153cb:	mov    DWORD PTR [rip+0x6ef1b],0x0        # 0x4842f0
  4153d5:	cmp    eax,0x6
  4153d8:	ja     0x415521
  4153de:	add    eax,0x1
  4153e1:	mov    DWORD PTR [rip+0x6eeed],eax        # 0x4842d4
  4153e7:	mov    rax,QWORD PTR [rip+0x6ee9a]        # 0x484288
  4153ee:	sub    rax,0x30
  4153f2:	shr    rax,0x3
  4153f6:	cmp    QWORD PTR [rip+0x6ee92],0x0        # 0x484290
  4153fe:	mov    QWORD PTR [rip+0x6eeab],rax        # 0x4842b0
  415405:	je     0x415412
  415407:	mov    QWORD PTR [rip+0x6ee9e],0x0        # 0x4842b0
  415412:	add    rsp,0x50
  415416:	pop    rbx
  415417:	ret    
  415418:	nop    DWORD PTR [rax+rax*1+0x0]
  415420:	lea    rdx,[rip+0x2b93e]        # 0x440d65
  415427:	lea    rcx,[rip+0x2b8c2]        # 0x440cf0
  41542e:	call   0x415050
  415433:	lea    rdx,[rip+0x2b93e]        # 0x440d78
  41543a:	lea    rcx,[rip+0x2b8af]        # 0x440cf0
  415441:	call   0x415050
  415446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415450:	test   al,0x2
  415452:	mov    DWORD PTR [rip+0x6ee34],0x1        # 0x484290
  41545c:	je     0x41555f
  415462:	mov    edx,0x1
  415467:	mov    DWORD PTR [rip+0x6ee27],0x1        # 0x484298
  415471:	jmp    0x415351
  415476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415480:	lea    rdx,[rip+0x2b921]        # 0x440da8
  415487:	lea    rcx,[rip+0x2b862]        # 0x440cf0
  41548e:	call   0x415050
  415493:	mov    edx,DWORD PTR [rip+0x6edf7]        # 0x484290
  415499:	mov    rax,QWORD PTR [rip+0x6ee58]        # 0x4842f8
  4154a0:	test   edx,edx
  4154a2:	mov    QWORD PTR [rip+0x6edd7],rax        # 0x484280
  4154a9:	mov    QWORD PTR [rip+0x6edd8],rax        # 0x484288
  4154b0:	jne    0x41536e
  4154b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4154c0:	sub    rax,0x30
  4154c4:	mov    edx,0x4
  4154c9:	shr    rax,0x7
  4154cd:	mov    rcx,rax
  4154d0:	call   0x40e800
  4154d5:	mov    QWORD PTR [rip+0x6edec],rax        # 0x4842c8
  4154dc:	mov    rax,QWORD PTR [rip+0x6eda5]        # 0x484288
  4154e3:	mov    edx,0x8
  4154e8:	lea    rcx,[rax-0x30]
  4154ec:	shr    rcx,0x7
  4154f0:	call   0x40e800
  4154f5:	mov    QWORD PTR [rip+0x6edc4],rax        # 0x4842c0
  4154fc:	mov    rax,QWORD PTR [rip+0x6ed85]        # 0x484288
  415503:	mov    edx,0x8
  415508:	lea    rcx,[rax-0x30]
  41550c:	shr    rcx,0x7
  415510:	call   0x40e800
  415515:	mov    QWORD PTR [rip+0x6edcc],rax        # 0x4842e8
  41551c:	jmp    0x41538f
  415521:	mov    rcx,rbx
  415524:	call   0x40bf20
  415529:	mov    ecx,DWORD PTR [rsp+0x24]
  41552d:	mov    edx,0x10624dd3
  415532:	mov    DWORD PTR [rip+0x6ed98],0x0        # 0x4842d4
  41553c:	imul   r8d,DWORD PTR [rsp+0x20],0x3e8
  415545:	mov    eax,ecx
  415547:	sar    ecx,0x1f
  41554a:	imul   edx
  41554c:	sar    edx,0x6
  41554f:	sub    edx,ecx
  415551:	add    edx,r8d
  415554:	mov    DWORD PTR [rip+0x6ed7e],edx        # 0x4842d8
  41555a:	jmp    0x4153e7
  41555f:	mov    rax,QWORD PTR [rip+0x6ed92]        # 0x4842f8
  415566:	mov    QWORD PTR [rip+0x6ed13],rax        # 0x484280
  41556d:	mov    QWORD PTR [rip+0x6ed14],rax        # 0x484288
  415574:	jmp    0x41536e
  415579:	nop    DWORD PTR [rax+0x0]
  415580:	push   r14
  415582:	push   r13
  415584:	push   r12
  415586:	push   rbp
  415587:	push   rdi
  415588:	push   rsi
  415589:	push   rbx
  41558a:	sub    rsp,0x20
  41558e:	mov    rax,rcx
  415591:	mov    rsi,rcx
  415594:	shr    rax,0x4
  415598:	lea    ebx,[rax-0x1]
  41559b:	shl    rbx,0x3
  41559f:	mov    r8,rbx
  4155a2:	add    r8,QWORD PTR [rip+0x6ed3f]        # 0x4842e8
  4155a9:	mov    rdx,QWORD PTR [r8]
  4155ac:	test   rdx,rdx
  4155af:	je     0x4155e0
  4155b1:	mov    rax,QWORD PTR [rdx]
  4155b4:	test   rax,rax
  4155b7:	je     0x4155e0
  4155b9:	mov    rcx,QWORD PTR [rax]
  4155bc:	mov    QWORD PTR [rdx],rcx
  4155bf:	mov    rdx,QWORD PTR [r8]
  4155c2:	add    DWORD PTR [rdx+0x8],0x1
  4155c6:	cmp    QWORD PTR [rdx],0x0
  4155ca:	je     0x415623
  4155cc:	add    rsp,0x20
  4155d0:	pop    rbx
  4155d1:	pop    rsi
  4155d2:	pop    rdi
  4155d3:	pop    rbp
  4155d4:	pop    r12
  4155d6:	pop    r13
  4155d8:	pop    r14
  4155da:	ret    
  4155db:	nop    DWORD PTR [rax+rax*1+0x0]
  4155e0:	lea    ecx,[rsi*8+0x2f]
  4155e7:	mov    rdx,QWORD PTR [rip+0x6ec92]        # 0x484280
  4155ee:	mov    eax,0x1
  4155f3:	mov    rdi,QWORD PTR [rip+0x6ecfe]        # 0x4842f8
  4155fa:	bsr    ecx,ecx
  4155fd:	add    ecx,0x1
  415600:	shl    eax,cl
  415602:	cdqe   
  415604:	cmp    rax,rdx
  415607:	cmovb  rax,rdx
  41560b:	cmp    rdi,rax
  41560e:	je     0x415640
  415610:	lea    rdx,[rip+0x2b7bc]        # 0x440dd3
  415617:	lea    rcx,[rip+0x2b6d2]        # 0x440cf0
  41561e:	call   0x415050
  415623:	mov    rdx,QWORD PTR [rdx+0x10]
  415627:	mov    QWORD PTR [r8],rdx
  41562a:	add    rsp,0x20
  41562e:	pop    rbx
  41562f:	pop    rsi
  415630:	pop    rdi
  415631:	pop    rbp
  415632:	pop    r12
  415634:	pop    r13
  415636:	pop    r14
  415638:	ret    
  415639:	nop    DWORD PTR [rax+0x0]
  415640:	lea    rax,[rdi-0x10]
  415644:	cmp    rdi,rax
  415647:	jb     0x415691
  415649:	mov    rcx,QWORD PTR [rip+0x6ec00]        # 0x484250
  415650:	test   rcx,rcx
  415653:	je     0x41576f
  415659:	mov    rax,QWORD PTR [rcx]
  41565c:	xor    edx,edx
  41565e:	mov    QWORD PTR [rcx],0x0
  415665:	mov    QWORD PTR [rip+0x6ebe4],rax        # 0x484250
  41566c:	mov    rax,rcx
  41566f:	div    rdi
  415672:	imul   rax,rdi
  415676:	cmp    rax,rcx
  415679:	mov    r9,rax
  41567c:	je     0x4156a4
  41567e:	lea    rdx,[rip+0x2b7a3]        # 0x440e28
  415685:	lea    rcx,[rip+0x2b664]        # 0x440cf0
  41568c:	call   0x415050
  415691:	lea    rdx,[rip+0x2b66d]        # 0x440d05
  415698:	lea    rcx,[rip+0x2b651]        # 0x440cf0
  41569f:	call   0x415050
  4156a4:	lea    r8,[rdi-0x30]
  4156a8:	xor    edx,edx
  4156aa:	mov    rax,r8
  4156ad:	lea    r10,[rcx+r8*1]
  4156b1:	div    rsi
  4156b4:	mov    DWORD PTR [r10+0x8],0x0
  4156bc:	mov    QWORD PTR [r10],0x0
  4156c3:	mov    rcx,rax
  4156c6:	imul   rax,rsi
  4156ca:	sub    r8,rax
  4156cd:	jne    0x41573d
  4156cf:	xor    edx,edx
  4156d1:	add    rdx,r9
  4156d4:	sub    rcx,0x1
  4156d8:	mov    QWORD PTR [r10],rdx
  4156db:	je     0x4156f8
  4156dd:	mov    r9,rsi
  4156e0:	xor    eax,eax
  4156e2:	neg    r9
  4156e5:	lea    r8d,[rax+0x1]
  4156e9:	add    rdx,rsi
  4156ec:	mov    QWORD PTR [rdx+r9*1],rdx
  4156f0:	cmp    r8,rcx
  4156f3:	mov    rax,r8
  4156f6:	jb     0x4156e5
  4156f8:	mov    QWORD PTR [rdx],0x0
  4156ff:	mov    rdx,rbx
  415702:	add    rdx,QWORD PTR [rip+0x6ebdf]        # 0x4842e8
  415709:	mov    rax,QWORD PTR [rdx]
  41570c:	test   rax,rax
  41570f:	je     0x415765
  415711:	mov    rcx,QWORD PTR [rax+0x18]
  415715:	mov    QWORD PTR [rax+0x18],r10
  415719:	mov    QWORD PTR [rcx+0x10],r10
  41571d:	mov    QWORD PTR [r10+0x10],rax
  415721:	mov    QWORD PTR [r10+0x18],rcx
  415725:	mov    QWORD PTR [rdx],r10
  415728:	add    rbx,QWORD PTR [rip+0x6ebb9]        # 0x4842e8
  41572f:	mov    rdx,QWORD PTR [rbx]
  415732:	mov    r8,rbx
  415735:	mov    rax,QWORD PTR [rdx]
  415738:	jmp    0x4155b9
  41573d:	mov    edx,DWORD PTR [rip+0x6ebad]        # 0x4842f0
  415743:	mov    r11,rdx
  415746:	add    r11d,DWORD PTR [rip+0x6eb5b]        # 0x4842a8
  41574d:	mov    rax,rdx
  415750:	shl    rax,0x4
  415754:	xor    edx,edx
  415756:	div    r8
  415759:	mov    DWORD PTR [rip+0x6eb90],r11d        # 0x4842f0
  415760:	jmp    0x4156d1
  415765:	mov    QWORD PTR [r10+0x10],r10
  415769:	mov    QWORD PTR [r10+0x18],r10
  41576d:	jmp    0x415725
  41576f:	mov    rcx,rdi
  415772:	shl    rcx,0x4
  415776:	call   0x438800
  41577b:	mov    r14,rax
  41577e:	mov    r12,QWORD PTR [rip+0x7115b]        # 0x4868e0
  415785:	call   r12
  415788:	test   r14,r14
  41578b:	mov    ebp,DWORD PTR [rax]
  41578d:	mov    rcx,QWORD PTR [rip+0x6eabc]        # 0x484250
  415794:	je     0x4157fc
  415796:	mov    rcx,QWORD PTR [rip+0x6eb5b]        # 0x4842f8
  41579d:	xor    edx,edx
  41579f:	mov    r10,QWORD PTR [rip+0x6eaaa]        # 0x484250
  4157a6:	lea    rax,[r14+rcx*1-0x1]
  4157ab:	div    rcx
  4157ae:	mov    rdx,rcx
  4157b1:	imul   rax,rcx
  4157b5:	mov    r13,rax
  4157b8:	xor    eax,eax
  4157ba:	cmp    r14,r13
  4157bd:	sete   al
  4157c0:	neg    rdx
  4157c3:	add    eax,0xe
  4157c6:	movsxd r14,eax
  4157c9:	mov    r9d,eax
  4157cc:	imul   r14,rcx
  4157d0:	lea    r8,[r14+r13*1]
  4157d4:	mov    r11,r8
  4157d7:	mov    QWORD PTR [r8],r10
  4157da:	sub    r8,rcx
  4157dd:	sub    r9d,0x1
  4157e1:	mov    r10,r11
  4157e4:	jns    0x4157d4
  4157e6:	and    eax,0x1f
  4157e9:	imul   rax,rdx
  4157ed:	add    rax,r14
  4157f0:	lea    rcx,[r13+rax*1+0x0]
  4157f5:	mov    QWORD PTR [rip+0x6ea54],rcx        # 0x484250
  4157fc:	test   rcx,rcx
  4157ff:	jne    0x415659
  415805:	call   r12
  415808:	mov    DWORD PTR [rax],ebp
  41580a:	call   r12
  41580d:	mov    ecx,DWORD PTR [rax]
  41580f:	call   0x438790
  415814:	lea    edx,[rdi-0x10]
  415817:	lea    rcx,[rip+0x2b5d2]        # 0x440df0
  41581e:	mov    r9,rax
  415821:	mov    r8d,edi
  415824:	call   0x415050
  415829:	nop
  41582a:	nop    WORD PTR [rax+rax*1+0x0]
  415830:	push   r12
  415832:	push   rbp
  415833:	push   rdi
  415834:	push   rsi
  415835:	push   rbx
  415836:	sub    rsp,0x30
  41583a:	mov    rbx,QWORD PTR [rdx+0x8]
  41583e:	mov    esi,ecx
  415840:	mov    rbp,r8
  415843:	test   rbx,rbx
  415846:	je     0x415a73
  41584c:	mov    r9,QWORD PTR [rbx]
  41584f:	test   r9,r9
  415852:	mov    QWORD PTR [rdx+0x8],r9
  415856:	je     0x415a89
  41585c:	mov    rcx,QWORD PTR [r9]
  41585f:	test   rcx,rcx
  415862:	mov    QWORD PTR [rdx+0x8],rcx
  415866:	je     0x415a9f
  41586c:	mov    rax,QWORD PTR [rcx]
  41586f:	test   rax,rax
  415872:	mov    QWORD PTR [rdx+0x8],rax
  415876:	je     0x415ab5
  41587c:	mov    r8,QWORD PTR [rax]
  41587f:	mov    QWORD PTR [rdx+0x8],r8
  415883:	mov    QWORD PTR [rax],rdx
  415886:	mov    edi,esi
  415888:	mov    QWORD PTR [rcx],rax
  41588b:	mov    QWORD PTR [r9],rcx
  41588e:	lea    rcx,[rip+0x6ea23]        # 0x4842b8
  415895:	shl    rdi,0x3
  415899:	mov    QWORD PTR [rbx],r9
  41589c:	call   0x426d40
  4158a1:	mov    rdx,rdi
  4158a4:	add    rdx,QWORD PTR [rip+0x6ea15]        # 0x4842c0
  4158ab:	mov    rax,QWORD PTR [rdx]
  4158ae:	test   rax,rax
  4158b1:	je     0x415a68
  4158b7:	mov    rcx,QWORD PTR [rax+0x8]
  4158bb:	mov    r8,QWORD PTR [rcx]
  4158be:	mov    r8,QWORD PTR [r8]
  4158c1:	mov    QWORD PTR [r8+0x8],rbx
  4158c5:	mov    QWORD PTR [rax+0x8],rbx
  4158c9:	mov    QWORD PTR [rbx+0x8],rcx
  4158cd:	mov    rcx,QWORD PTR [rbx]
  4158d0:	mov    r8,QWORD PTR [rcx]
  4158d3:	mov    QWORD PTR [r8+0x8],rax
  4158d7:	mov    rax,QWORD PTR [r8]
  4158da:	mov    QWORD PTR [rax+0x8],rbp
  4158de:	mov    eax,DWORD PTR [rip+0x6e9f0]        # 0x4842d4
  4158e4:	cmp    eax,0x6
  4158e7:	ja     0x415a1d
  4158ed:	mov    ebp,DWORD PTR [rip+0x6e9e5]        # 0x4842d8
  4158f3:	add    eax,0x1
  4158f6:	mov    DWORD PTR [rip+0x6e9d8],eax        # 0x4842d4
  4158fc:	mov    eax,ebp
  4158fe:	mov    r12,QWORD PTR [rip+0x6e99b]        # 0x4842a0
  415905:	mov    QWORD PTR [rcx+0x8],rax
  415909:	mov    QWORD PTR [rdx],rbx
  41590c:	xor    ebx,ebx
  41590e:	add    rdi,QWORD PTR [rip+0x6e9ab]        # 0x4842c0
  415915:	mov    rax,QWORD PTR [rdi]
  415918:	mov    rax,QWORD PTR [rax+0x8]
  41591c:	mov    rdx,QWORD PTR [rax]
  41591f:	jmp    0x41596b
  415921:	mov    r9,QWORD PTR [rax+0x8]
  415925:	mov    r8,QWORD PTR [rdx]
  415928:	mov    r11,QWORD PTR [r9]
  41592b:	mov    r10,QWORD PTR [r8+0x8]
  41592f:	mov    rcx,QWORD PTR [r11]
  415932:	mov    QWORD PTR [rcx+0x8],r10
  415936:	mov    rcx,QWORD PTR [r8]
  415939:	mov    QWORD PTR [r10+0x8],r9
  41593d:	mov    QWORD PTR [r8+0x8],0x0
  415945:	mov    QWORD PTR [rcx+0x8],0x0
  41594d:	mov    QWORD PTR [rdx+0x8],0x0
  415955:	mov    QWORD PTR [rax+0x8],rbx
  415959:	cmp    rax,QWORD PTR [rdi]
  41595c:	mov    rbx,rax
  41595f:	je     0x415a05
  415965:	mov    rdx,r11
  415968:	mov    rax,r9
  41596b:	mov    ecx,ebp
  41596d:	sub    ecx,DWORD PTR [rdx+0x8]
  415970:	cmp    rcx,r12
  415973:	jae    0x415921
  415975:	lea    rcx,[rip+0x6e93c]        # 0x4842b8
  41597c:	call   0x426d70
  415981:	test   rbx,rbx
  415984:	je     0x4159f0
  415986:	lea    rcx,[rip+0x6e953]        # 0x4842e0
  41598d:	add    esi,0x1
  415990:	shl    rsi,0x4
  415994:	call   0x426d40
  415999:	nop    DWORD PTR [rax+0x0]
  4159a0:	mov    rbp,QWORD PTR [rbx+0x8]
  4159a4:	xor    edx,edx
  4159a6:	mov    QWORD PTR [rbx+0x8],0x0
  4159ae:	jmp    0x4159c3
  4159b0:	mov    rax,QWORD PTR [rdx]
  4159b3:	mov    rcx,rsi
  4159b6:	mov    QWORD PTR [rbx+0x8],rax
  4159ba:	call   0x415100
  4159bf:	mov    rdx,QWORD PTR [rbx+0x8]
  4159c3:	test   rdx,rdx
  4159c6:	jne    0x4159b0
  4159c8:	mov    rdi,QWORD PTR [rbx]
  4159cb:	mov    rdx,rbx
  4159ce:	mov    rcx,rsi
  4159d1:	call   0x415100
  4159d6:	test   rdi,rdi
  4159d9:	jne    0x415a00
  4159db:	test   rbp,rbp
  4159de:	mov    rbx,rbp
  4159e1:	jne    0x4159a0
  4159e3:	lea    rcx,[rip+0x6e8f6]        # 0x4842e0
  4159ea:	call   0x426d70
  4159ef:	nop
  4159f0:	add    rsp,0x30
  4159f4:	pop    rbx
  4159f5:	pop    rsi
  4159f6:	pop    rdi
  4159f7:	pop    rbp
  4159f8:	pop    r12
  4159fa:	ret    
  4159fb:	nop    DWORD PTR [rax+rax*1+0x0]
  415a00:	mov    rbx,rdi
  415a03:	jmp    0x4159bf
  415a05:	lea    rcx,[rip+0x6e8ac]        # 0x4842b8
  415a0c:	mov    QWORD PTR [rdi],0x0
  415a13:	call   0x426d70
  415a18:	jmp    0x415986
  415a1d:	lea    rcx,[rsp+0x20]
  415a22:	call   0x40bf20
  415a27:	mov    ecx,DWORD PTR [rsp+0x24]
  415a2b:	mov    edx,0x10624dd3
  415a30:	mov    DWORD PTR [rip+0x6e89a],0x0        # 0x4842d4
  415a3a:	imul   ebp,DWORD PTR [rsp+0x20],0x3e8
  415a42:	mov    eax,ecx
  415a44:	sar    ecx,0x1f
  415a47:	imul   edx
  415a49:	sar    edx,0x6
  415a4c:	sub    edx,ecx
  415a4e:	mov    rcx,QWORD PTR [rbx]
  415a51:	add    ebp,edx
  415a53:	mov    rdx,rdi
  415a56:	add    rdx,QWORD PTR [rip+0x6e863]        # 0x4842c0
  415a5d:	mov    DWORD PTR [rip+0x6e875],ebp        # 0x4842d8
  415a63:	jmp    0x4158fc
  415a68:	mov    rcx,rbx
  415a6b:	mov    rax,rbx
  415a6e:	jmp    0x4158bb
  415a73:	mov    rax,QWORD PTR [rdx]
  415a76:	mov    rbx,rdx
  415a79:	mov    r9,QWORD PTR [rax+0x8]
  415a7d:	mov    rdx,rax
  415a80:	test   r9,r9
  415a83:	jne    0x41585c
  415a89:	mov    rax,QWORD PTR [rdx]
  415a8c:	mov    r9,rdx
  415a8f:	mov    rcx,QWORD PTR [rax+0x8]
  415a93:	mov    rdx,rax
  415a96:	test   rcx,rcx
  415a99:	jne    0x41586c
  415a9f:	mov    r8,QWORD PTR [rdx]
  415aa2:	mov    rcx,rdx
  415aa5:	mov    rax,QWORD PTR [r8+0x8]
  415aa9:	mov    rdx,r8
  415aac:	test   rax,rax
  415aaf:	jne    0x41587c
  415ab5:	mov    rax,rdx
  415ab8:	mov    rdx,QWORD PTR [rdx]
  415abb:	jmp    0x415883
  415ac0:	push   r15
  415ac2:	push   r14
  415ac4:	push   r13
  415ac6:	push   r12
  415ac8:	push   rbp
  415ac9:	push   rdi
  415aca:	push   rsi
  415acb:	push   rbx
  415acc:	sub    rsp,0x48
  415ad0:	mov    rax,QWORD PTR [rip+0x6e7b1]        # 0x484288
  415ad7:	mov    r14,rcx
  415ada:	sub    rax,0x30
  415ade:	shr    rax,0x7
  415ae2:	test   eax,eax
  415ae4:	je     0x415bdb
  415aea:	mov    DWORD PTR [rsp+0x24],eax
  415aee:	lea    rax,[rsp+0x30]
  415af3:	lea    r15,[rsp+0x40]
  415af8:	xor    r12d,r12d
  415afb:	xor    ebp,ebp
  415afd:	mov    QWORD PTR [rsp+0x28],rax
  415b02:	mov    rbx,r12
  415b05:	add    rbx,QWORD PTR [r14]
  415b08:	mov    rax,r12
  415b0b:	add    rax,QWORD PTR [r14+0x8]
  415b0f:	lea    esi,[rbp+0x1]
  415b12:	mov    rdi,QWORD PTR [rsp+0x28]
  415b17:	mov    r13,rsi
  415b1a:	shl    rsi,0x4
  415b1e:	mov    r8,QWORD PTR [rbx+0x8]
  415b22:	mov    QWORD PTR [rsp+0x30],rbx
  415b27:	mov    QWORD PTR [rsp+0x38],rax
  415b2c:	cmp    r8,0x3
  415b30:	jbe    0x415b56
  415b32:	mov    rdx,QWORD PTR [rbx]
  415b35:	mov    ecx,ebp
  415b37:	add    rdi,0x8
  415b3b:	call   0x415830
  415b40:	cmp    rdi,r15
  415b43:	je     0x415bc9
  415b49:	mov    rbx,QWORD PTR [rdi]
  415b4c:	mov    r8,QWORD PTR [rbx+0x8]
  415b50:	cmp    r8,0x3
  415b54:	ja     0x415b32
  415b56:	lea    rcx,[rip+0x6e783]        # 0x4842e0
  415b5d:	call   0x426d40
  415b62:	mov    rax,QWORD PTR [rbx]
  415b65:	test   rax,rax
  415b68:	jne    0x415b87
  415b6a:	jmp    0x415bb0
  415b6c:	nop    DWORD PTR [rax+0x0]
  415b70:	mov    rcx,QWORD PTR [rdx]
  415b73:	mov    QWORD PTR [rax+0x8],rcx
  415b77:	mov    rcx,rsi
  415b7a:	call   0x415100
  415b7f:	mov    rax,QWORD PTR [rbx]
  415b82:	test   rax,rax
  415b85:	je     0x415bb0
  415b87:	mov    rdx,QWORD PTR [rax+0x8]
  415b8b:	test   rdx,rdx
  415b8e:	jne    0x415b70
  415b90:	mov    rdx,QWORD PTR [rax]
  415b93:	mov    rcx,rsi
  415b96:	mov    QWORD PTR [rbx],rdx
  415b99:	mov    rdx,rax
  415b9c:	call   0x415100
  415ba1:	mov    rax,QWORD PTR [rbx]
  415ba4:	test   rax,rax
  415ba7:	jne    0x415b87
  415ba9:	nop    DWORD PTR [rax+0x0]
  415bb0:	lea    rcx,[rip+0x6e729]        # 0x4842e0
  415bb7:	add    rdi,0x8
  415bbb:	call   0x426d70
  415bc0:	cmp    rdi,r15
  415bc3:	jne    0x415b49
  415bc9:	add    r12,0x10
  415bcd:	cmp    r13d,DWORD PTR [rsp+0x24]
  415bd2:	mov    ebp,r13d
  415bd5:	jne    0x415b02
  415bdb:	mov    rcx,r14
  415bde:	add    rsp,0x48
  415be2:	pop    rbx
  415be3:	pop    rsi
  415be4:	pop    rdi
  415be5:	pop    rbp
  415be6:	pop    r12
  415be8:	pop    r13
  415bea:	pop    r14
  415bec:	pop    r15
  415bee:	jmp    0x40e6e0
  415bf3:	nop    DWORD PTR [rax]
  415bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c00:	push   rbx
  415c01:	sub    rsp,0x20
  415c05:	mov    ebx,edx
  415c07:	mov    rax,rbx
  415c0a:	shl    rbx,0x4
  415c0e:	add    rbx,rcx
  415c11:	mov    ecx,eax
  415c13:	mov    r8,QWORD PTR [rbx+0x8]
  415c17:	mov    rdx,QWORD PTR [rbx]
  415c1a:	call   0x415830
  415c1f:	mov    QWORD PTR [rbx],0x0
  415c26:	mov    QWORD PTR [rbx+0x8],0x0
  415c2e:	add    rsp,0x20
  415c32:	pop    rbx
  415c33:	ret    
  415c34:	xchg   ax,ax
  415c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c40:	push   r12
  415c42:	push   rbp
  415c43:	push   rdi
  415c44:	push   rsi
  415c45:	push   rbx
  415c46:	sub    rsp,0x30
  415c4a:	mov    eax,0x1
  415c4f:	test   rcx,rcx
  415c52:	je     0x415daa
  415c58:	mov    rax,rcx
  415c5b:	mov    rsi,rdx
  415c5e:	movabs rdx,0x203442cf2b117423
  415c68:	mul    rdx
  415c6b:	mov    rdi,rcx
  415c6e:	movabs rbx,0x300901b0510f33
  415c78:	mov    rcx,rdx
  415c7b:	shr    rcx,0x11
  415c7f:	mov    rax,rcx
  415c82:	mul    rbx
  415c85:	mov    rbx,rcx
  415c88:	sub    rbx,rdx
  415c8b:	shr    rbx,1
  415c8e:	add    rbx,rdx
  415c91:	shr    rbx,0xb
  415c95:	mov    rax,rbx
  415c98:	shl    rax,0xa
  415c9c:	sub    rax,rbx
  415c9f:	lea    rax,[rbx+rax*4]
  415ca3:	mov    rbx,rcx
  415ca6:	lea    rcx,[rip+0x6e5ab]        # 0x484258
  415cad:	sub    rbx,rax
  415cb0:	call   0x426d40
  415cb5:	mov    rax,QWORD PTR [rip+0x6e58c]        # 0x484248
  415cbc:	test   rax,rax
  415cbf:	je     0x415d80
  415cc5:	mov    rcx,QWORD PTR [rax+rbx*8]
  415cc9:	lea    r12,[rbx*8+0x0]
  415cd1:	test   rcx,rcx
  415cd4:	je     0x415d80
  415cda:	mov    rax,rdi
  415cdd:	movabs rdx,0x80402010080403
  415ce7:	mov    rbp,rdi
  415cea:	mul    rdx
  415ced:	mov    rax,rdi
  415cf0:	sub    rax,rdx
  415cf3:	shr    rax,1
  415cf6:	add    rdx,rax
  415cf9:	shr    rdx,0x8
  415cfd:	mov    rax,rdx
  415d00:	shl    rax,0x9
  415d04:	sub    rax,rdx
  415d07:	sub    rbp,rax
  415d0a:	shl    rbp,0x4
  415d0e:	lea    rax,[rcx+rbp*1]
  415d12:	mov    r8d,DWORD PTR [rax+0x8]
  415d16:	mov    rcx,QWORD PTR [rax]
  415d19:	test   r8d,r8d
  415d1c:	je     0x415f24
  415d22:	mov    eax,r8d
  415d25:	xor    ebx,ebx
  415d27:	jmp    0x415d3f
  415d29:	nop    DWORD PTR [rax+0x0]
  415d30:	je     0x415d6f
  415d32:	lea    ebx,[r11+0x1]
  415d36:	mov    edx,0x1
  415d3b:	cmp    eax,ebx
  415d3d:	jbe    0x415d61
  415d3f:	lea    r11d,[rax+rbx*1]
  415d43:	shr    r11d,1
  415d46:	mov    r10d,r11d
  415d49:	shl    r10,0x4
  415d4d:	add    r10,rcx
  415d50:	cmp    rdi,QWORD PTR [r10]
  415d53:	jae    0x415d30
  415d55:	mov    eax,r11d
  415d58:	mov    edx,0xffffffff
  415d5d:	cmp    eax,ebx
  415d5f:	ja     0x415d3f
  415d61:	cmp    edx,0x1
  415d64:	jne    0x415d6a
  415d66:	add    r10,0x10
  415d6a:	test   r10,r10
  415d6d:	je     0x415d80
  415d6f:	shl    r8,0x4
  415d73:	add    rcx,r8
  415d76:	cmp    r10,rcx
  415d79:	jae    0x415d80
  415d7b:	cmp    rdi,QWORD PTR [r10]
  415d7e:	je     0x415db5
  415d80:	lea    rcx,[rip+0x6e4d1]        # 0x484258
  415d87:	call   0x426d70
  415d8c:	call   QWORD PTR [rip+0x70af6]        # 0x486888
  415d92:	lea    rdx,[rip+0x2b11f]        # 0x440eb8
  415d99:	lea    rcx,[rax+0x60]
  415d9d:	mov    r9,rsi
  415da0:	mov    r8,rdi
  415da3:	call   0x438870
  415da8:	xor    eax,eax
  415daa:	add    rsp,0x30
  415dae:	pop    rbx
  415daf:	pop    rsi
  415db0:	pop    rdi
  415db1:	pop    rbp
  415db2:	pop    r12
  415db4:	ret    
  415db5:	mov    rbx,QWORD PTR [r10+0x8]
  415db9:	lea    rcx,[rip+0x6e498]        # 0x484258
  415dc0:	call   0x426d70
  415dc5:	cmp    rsi,rbx
  415dc8:	je     0x415ddc
  415dca:	test   rsi,rsi
  415dcd:	jne    0x415e70
  415dd3:	test   rbx,rbx
  415dd6:	jne    0x415e70
  415ddc:	lea    rcx,[rip+0x6e475]        # 0x484258
  415de3:	call   0x426d40
  415de8:	mov    rax,QWORD PTR [rip+0x6e459]        # 0x484248
  415def:	test   rax,rax
  415df2:	je     0x415d80
  415df4:	add    r12,rax
  415df7:	mov    r10,QWORD PTR [r12]
  415dfb:	test   r10,r10
  415dfe:	je     0x415d80
  415e04:	add    r10,rbp
  415e07:	mov    r11d,DWORD PTR [r10+0x8]
  415e0b:	mov    r9,QWORD PTR [r10]
  415e0e:	test   r11d,r11d
  415e11:	je     0x415f19
  415e17:	mov    r8d,r11d
  415e1a:	xor    ecx,ecx
  415e1c:	jmp    0x415e2f
  415e1e:	xchg   ax,ax
  415e20:	je     0x415ea0
  415e22:	lea    ecx,[rax+0x1]
  415e25:	mov    eax,0x1
  415e2a:	cmp    ecx,r8d
  415e2d:	jae    0x415e50
  415e2f:	lea    eax,[r8+rcx*1]
  415e33:	shr    eax,1
  415e35:	mov    edx,eax
  415e37:	shl    rdx,0x4
  415e3b:	add    rdx,r9
  415e3e:	cmp    rdi,QWORD PTR [rdx]
  415e41:	jae    0x415e20
  415e43:	mov    r8d,eax
  415e46:	mov    eax,0xffffffff
  415e4b:	cmp    ecx,r8d
  415e4e:	jb     0x415e2f
  415e50:	cmp    eax,0x1
  415e53:	jne    0x415f1c
  415e59:	lea    rcx,[rdx+0x10]
  415e5d:	test   rcx,rcx
  415e60:	jne    0x415ea3
  415e62:	jmp    0x415d80
  415e67:	nop    WORD PTR [rax+rax*1+0x0]
  415e70:	call   QWORD PTR [rip+0x70a12]        # 0x486888
  415e76:	lea    rdx,[rip+0x2afd3]        # 0x440e50
  415e7d:	lea    rcx,[rax+0x60]
  415e81:	mov    QWORD PTR [rsp+0x20],rsi
  415e86:	mov    r9,rbx
  415e89:	mov    r8,rdi
  415e8c:	call   0x438870
  415e91:	xor    eax,eax
  415e93:	add    rsp,0x30
  415e97:	pop    rbx
  415e98:	pop    rsi
  415e99:	pop    rdi
  415e9a:	pop    rbp
  415e9b:	pop    r12
  415e9d:	ret    
  415e9e:	xchg   ax,ax
  415ea0:	mov    rcx,rdx
  415ea3:	mov    eax,r11d
  415ea6:	shl    rax,0x4
  415eaa:	add    rax,r9
  415ead:	cmp    rcx,rax
  415eb0:	jae    0x415d80
  415eb6:	cmp    rdi,QWORD PTR [rcx]
  415eb9:	jne    0x415d80
  415ebf:	mov    rax,rcx
  415ec2:	lea    r8d,[r11-0x1]
  415ec6:	lea    rdx,[rcx+0x10]
  415eca:	sub    rax,r9
  415ecd:	sar    rax,0x4
  415ed1:	mov    DWORD PTR [r10+0x8],r8d
  415ed5:	sub    r8d,eax
  415ed8:	shl    r8,0x4
  415edc:	call   0x4387e8
  415ee1:	mov    rax,rbp
  415ee4:	add    rax,QWORD PTR [r12]
  415ee8:	mov    edx,DWORD PTR [rax+0x8]
  415eeb:	test   edx,edx
  415eed:	jne    0x415f03
  415eef:	mov    rcx,QWORD PTR [rax]
  415ef2:	call   0x438850
  415ef7:	mov    rax,QWORD PTR [r12]
  415efb:	mov    QWORD PTR [rax+rbp*1],0x0
  415f03:	lea    rcx,[rip+0x6e34e]        # 0x484258
  415f0a:	call   0x426d70
  415f0f:	mov    eax,0x1
  415f14:	jmp    0x415daa
  415f19:	mov    rdx,r9
  415f1c:	mov    rcx,rdx
  415f1f:	jmp    0x415e5d
  415f24:	mov    r10,rcx
  415f27:	jmp    0x415d6a
  415f2c:	nop    DWORD PTR [rax+0x0]
  415f30:	cmp    QWORD PTR [rip+0x6e3c0],0x0        # 0x4842f8
  415f38:	jne    0x415f52
  415f3a:	cmp    ecx,0x2
  415f3d:	je     0x415f80
  415f3f:	jbe    0x415f92
  415f41:	cmp    ecx,0x3
  415f44:	je     0x415f70
  415f46:	cmp    ecx,0x4
  415f49:	jne    0x415f90
  415f4b:	mov    DWORD PTR [rip+0x24747],edx        # 0x43a698
  415f51:	ret    
  415f52:	lea    r8,[rip+0x2ae0c]        # 0x440d65
  415f59:	lea    rdx,[rip+0x2b010]        # 0x440f70
  415f60:	lea    rcx,[rip+0x2af9c]        # 0x440f03
  415f67:	jmp    0x40fd20
  415f6c:	nop    DWORD PTR [rax+0x0]
  415f70:	mov    QWORD PTR [rip+0x24719],rdx        # 0x43a690
  415f77:	ret    
  415f78:	nop    DWORD PTR [rax+rax*1+0x0]
  415f80:	xor    eax,eax
  415f82:	test   rdx,rdx
  415f85:	setne  al
  415f88:	mov    DWORD PTR [rip+0x246f6],eax        # 0x43a684
  415f8e:	ret    
  415f8f:	nop
  415f90:	repz ret 
  415f92:	cmp    ecx,0x1
  415f95:	jne    0x415fb0
  415f97:	xor    eax,eax
  415f99:	test   rdx,rdx
  415f9c:	setne  al
  415f9f:	mov    DWORD PTR [rip+0x246db],eax        # 0x43a680
  415fa5:	ret    
  415fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415fb0:	repz ret 
  415fb2:	nop    DWORD PTR [rax+0x0]
  415fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415fc0:	cmp    ecx,0x5
  415fc3:	ja     0x416030
  415fc5:	lea    rax,[rip+0x2af3c]        # 0x440f08
  415fcc:	mov    ecx,ecx
  415fce:	movsxd rdx,DWORD PTR [rax+rcx*4]
  415fd2:	add    rax,rdx
  415fd5:	jmp    rax
  415fd7:	nop    WORD PTR [rax+rax*1+0x0]
  415fe0:	mov    rax,QWORD PTR [rip+0x6e2a1]        # 0x484288
  415fe7:	sub    rax,0x30
  415feb:	shr    rax,0x7
  415fef:	ret    
  415ff0:	movsxd rax,DWORD PTR [rip+0x24689]        # 0x43a680
  415ff7:	ret    
  415ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  416000:	movsxd rax,DWORD PTR [rip+0x2467d]        # 0x43a684
  416007:	ret    
  416008:	nop    DWORD PTR [rax+rax*1+0x0]
  416010:	mov    rax,QWORD PTR [rip+0x24679]        # 0x43a690
  416017:	ret    
  416018:	nop    DWORD PTR [rax+rax*1+0x0]
  416020:	mov    eax,DWORD PTR [rip+0x24672]        # 0x43a698
  416026:	ret    
  416027:	nop    WORD PTR [rax+rax*1+0x0]
  416030:	xor    eax,eax
  416032:	ret    
  416033:	nop    DWORD PTR [rax]
  416036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416040:	sub    rsp,0x228
  416047:	test   r8,r8
  41604a:	mov    r9,rdx
  41604d:	je     0x416100
  416053:	cmp    ecx,0x6
  416056:	mov    DWORD PTR [r8],0x0
  41605d:	jne    0x41611a
  416063:	lea    rax,[r9+0x1]
  416067:	mov    r11,QWORD PTR [rip+0x6e25a]        # 0x4842c8
  41606e:	lea    ecx,[r9+0x1]
  416072:	shl    rax,0x4
  416076:	mov    r10,rcx
  416079:	shl    rcx,0x6
  41607d:	mov    QWORD PTR [rsp+0x20],rax
  416082:	mov    eax,DWORD PTR [r11+r9*4]
  416086:	shl    r10,0x4
  41608a:	mov    r9d,r9d
  41608d:	mov    QWORD PTR [rsp+0x28],rax
  416092:	lea    rax,[rcx+r10*1]
  416096:	mov    ecx,0xa0
  41609b:	cmp    rax,0xa0
  4160a1:	cmovae rcx,rax
  4160a5:	mov    rax,QWORD PTR [rip+0x6e1dc]        # 0x484288
  4160ac:	xor    edx,edx
  4160ae:	div    rcx
  4160b1:	mov    edx,DWORD PTR [r11+r9*4]
  4160b5:	mov    ecx,0x4
  4160ba:	cmp    rax,0x4
  4160be:	cmovae rcx,rax
  4160c2:	test   edx,edx
  4160c4:	mov    eax,ecx
  4160c6:	je     0x4160d7
  4160c8:	shl    edx,0x6
  4160cb:	mov    eax,edx
  4160cd:	xor    edx,edx
  4160cf:	div    r10
  4160d2:	cmp    ecx,eax
  4160d4:	cmovae eax,ecx
  4160d7:	lea    rcx,[rsp+0x20]
  4160dc:	mov    eax,eax
  4160de:	mov    DWORD PTR [r8],0x3
  4160e5:	mov    edx,0x18
  4160ea:	mov    QWORD PTR [rsp+0x30],rax
  4160ef:	call   0x418300
  4160f4:	add    rsp,0x228
  4160fb:	ret    
  4160fc:	nop    DWORD PTR [rax+0x0]
  416100:	lea    r8,[rip+0x2ae19]        # 0x440f20
  416107:	lea    rdx,[rip+0x2ae42]        # 0x440f50
  41610e:	lea    rcx,[rip+0x2adee]        # 0x440f03
  416115:	call   0x40fd20
  41611a:	xor    eax,eax
  41611c:	add    rsp,0x228
  416123:	ret    
  416124:	xchg   ax,ax
  416126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416130:	push   r15
  416132:	push   r14
  416134:	push   r13
  416136:	push   r12
  416138:	push   rbp
  416139:	push   rdi
  41613a:	push   rsi
  41613b:	push   rbx
  41613c:	sub    rsp,0x38
  416140:	mov    rsi,rcx
  416143:	lea    rcx,[rip+0x24556]        # 0x43a6a0
  41614a:	call   0x426ff0
  41614f:	test   rax,rax
  416152:	mov    rbx,rax
  416155:	je     0x416320
  41615b:	lea    r8,[rsi+0xf]
  41615f:	mov    rdi,r8
  416162:	and    rdi,0xfffffffffffffff0
  416166:	je     0x416202
  41616c:	cmp    rdi,QWORD PTR [rip+0x6e13d]        # 0x4842b0
  416173:	ja     0x4161e0
  416175:	shr    rdi,0x4
  416179:	lea    r12d,[rdi-0x1]
  41617d:	mov    r15,rdi
  416180:	mov    rdi,r12
  416183:	shl    rdi,0x4
  416187:	mov    rbp,rdi
  41618a:	add    rbp,QWORD PTR [rbx]
  41618d:	mov    rcx,QWORD PTR [rbp+0x0]
  416191:	test   rcx,rcx
  416194:	je     0x416391
  41619a:	mov    rdi,QWORD PTR [rcx+0x8]
  41619e:	test   rdi,rdi
  4161a1:	je     0x4164b0
  4161a7:	mov    rax,QWORD PTR [rdi]
  4161aa:	mov    QWORD PTR [rcx+0x8],rax
  4161ae:	mov    rax,QWORD PTR [rbp+0x8]
  4161b2:	test   rax,rax
  4161b5:	je     0x4161bf
  4161b7:	sub    rax,0x1
  4161bb:	mov    QWORD PTR [rbp+0x8],rax
  4161bf:	mov    eax,DWORD PTR [rip+0x6e0d3]        # 0x484298
  4161c5:	test   eax,eax
  4161c7:	jne    0x41621c
  4161c9:	mov    rax,rdi
  4161cc:	add    rsp,0x38
  4161d0:	pop    rbx
  4161d1:	pop    rsi
  4161d2:	pop    rdi
  4161d3:	pop    rbp
  4161d4:	pop    r12
  4161d6:	pop    r13
  4161d8:	pop    r14
  4161da:	pop    r15
  4161dc:	ret    
  4161dd:	nop    DWORD PTR [rax]
  4161e0:	mov    edx,DWORD PTR [rip+0x6e0aa]        # 0x484290
  4161e6:	test   edx,edx
  4161e8:	jne    0x416202
  4161ea:	mov    rax,QWORD PTR [rip+0x6e097]        # 0x484288
  4161f1:	sub    rax,0x30
  4161f5:	shr    rax,0x3
  4161f9:	cmp    rdi,rax
  4161fc:	jbe    0x4164c0
  416202:	mov    rcx,rsi
  416205:	call   0x40e5c0
  41620a:	mov    rdi,rax
  41620d:	mov    ecx,DWORD PTR [rip+0x6e085]        # 0x484298
  416213:	test   ecx,ecx
  416215:	je     0x4161c9
  416217:	test   rdi,rdi
  41621a:	je     0x4161c9
  41621c:	lea    rcx,[rip+0x6e035]        # 0x484258
  416223:	movabs rbx,0x300901b0510f33
  41622d:	movabs rbp,0x80402010080403
  416237:	call   0x426d40
  41623c:	mov    rax,rdi
  41623f:	movabs rdx,0x203442cf2b117423
  416249:	mul    rdx
  41624c:	shr    rdx,0x11
  416250:	mov    rax,rdx
  416253:	mov    rcx,rdx
  416256:	mul    rbx
  416259:	mov    rbx,rcx
  41625c:	sub    rbx,rdx
  41625f:	shr    rbx,1
  416262:	add    rbx,rdx
  416265:	shr    rbx,0xb
  416269:	mov    rax,rbx
  41626c:	shl    rax,0xa
  416270:	sub    rax,rbx
  416273:	lea    rax,[rbx+rax*4]
  416277:	sub    rcx,rax
  41627a:	mov    rax,rdi
  41627d:	mul    rbp
  416280:	mov    rbp,rdi
  416283:	mov    rbx,rcx
  416286:	sub    rbp,rdx
  416289:	shr    rbp,1
  41628c:	add    rbp,rdx
  41628f:	shr    rbp,0x8
  416293:	mov    rax,rbp
  416296:	shl    rax,0x9
  41629a:	sub    rax,rbp
  41629d:	mov    rbp,rdi
  4162a0:	sub    rbp,rax
  4162a3:	mov    rax,QWORD PTR [rip+0x6df9e]        # 0x484248
  4162aa:	test   rax,rax
  4162ad:	je     0x4164f8
  4162b3:	lea    rbx,[rax+rbx*8]
  4162b7:	mov    rax,QWORD PTR [rbx]
  4162ba:	test   rax,rax
  4162bd:	je     0x4165e3
  4162c3:	shl    rbp,0x4
  4162c7:	add    rbp,rax
  4162ca:	mov    r10d,DWORD PTR [rbp+0x8]
  4162ce:	mov    rcx,QWORD PTR [rbp+0x0]
  4162d2:	test   r10d,r10d
  4162d5:	je     0x41660b
  4162db:	mov    r9d,r10d
  4162de:	xor    r8d,r8d
  4162e1:	jmp    0x4162fb
  4162e3:	je     0x416524
  4162e9:	lea    r8d,[rdx+0x1]
  4162ed:	mov    eax,0x1
  4162f2:	cmp    r9d,r8d
  4162f5:	jbe    0x4165a0
  4162fb:	lea    edx,[r9+r8*1]
  4162ff:	shr    edx,1
  416301:	mov    ebx,edx
  416303:	shl    rbx,0x4
  416307:	add    rbx,rcx
  41630a:	cmp    rdi,QWORD PTR [rbx]
  41630d:	jae    0x4162e3
  41630f:	mov    r9d,edx
  416312:	mov    eax,0xffffffff
  416317:	jmp    0x4162f2
  416319:	nop    DWORD PTR [rax+0x0]
  416320:	lea    rcx,[rip+0x6df19]        # 0x484240
  416327:	call   0x426d40
  41632c:	cmp    QWORD PTR [rip+0x6dfc4],0x0        # 0x4842f8
  416334:	jne    0x41633b
  416336:	call   0x415270
  41633b:	lea    rcx,[rip+0x6defe]        # 0x484240
  416342:	call   0x426d70
  416347:	mov    rax,QWORD PTR [rip+0x6df3a]        # 0x484288
  41634e:	lea    rdi,[rax-0x30]
  416352:	shr    rdi,0x7
  416356:	mov    edi,edi
  416358:	mov    rcx,rdi
  41635b:	shl    rdi,0x4
  41635f:	shl    rcx,0x5
  416363:	add    rcx,0x10
  416367:	call   0x40e610
  41636c:	mov    rbx,rax
  41636f:	lea    rax,[rax+0x10]
  416373:	lea    rcx,[rip+0x24326]        # 0x43a6a0
  41637a:	mov    rdx,rbx
  41637d:	add    rdi,rax
  416380:	mov    QWORD PTR [rbx],rax
  416383:	mov    QWORD PTR [rbx+0x8],rdi
  416387:	call   0x427020
  41638c:	jmp    0x41615b
  416391:	mov    rax,rdi
  416394:	add    rax,QWORD PTR [rbx+0x8]
  416398:	mov    rdx,QWORD PTR [rbp+0x8]
  41639c:	mov    r9,QWORD PTR [rax]
  41639f:	mov    r10,QWORD PTR [rax+0x8]
  4163a3:	mov    QWORD PTR [rbp+0x0],r9
  4163a7:	mov    QWORD PTR [rbp+0x8],r10
  4163ab:	mov    rbp,rdi
  4163ae:	mov    QWORD PTR [rax],0x0
  4163b5:	mov    QWORD PTR [rax+0x8],rdx
  4163b9:	add    rbp,QWORD PTR [rbx]
  4163bc:	mov    r13,QWORD PTR [rbp+0x0]
  4163c0:	test   r13,r13
  4163c3:	mov    rcx,r13
  4163c6:	jne    0x41619a
  4163cc:	mov    rax,QWORD PTR [rip+0x6def5]        # 0x4842c8
  4163d3:	lea    rcx,[rip+0x6dede]        # 0x4842b8
  4163da:	mov    QWORD PTR [rbp+0x8],0x0
  4163e2:	lea    r14,[rax+r12*4]
  4163e6:	call   0x426d50
  4163eb:	test   eax,eax
  4163ed:	je     0x41661b
  4163f3:	mov    eax,DWORD PTR [rip+0x6ded7]        # 0x4842d0
  4163f9:	sub    eax,0x1
  4163fc:	cmp    eax,0xfffffff5
  4163ff:	jge    0x416610
  416405:	mov    DWORD PTR [rip+0x6dec1],0x0        # 0x4842d0
  41640f:	mov    r8d,DWORD PTR [r14]
  416412:	mov    eax,0x1
  416417:	test   r8d,r8d
  41641a:	cmovne eax,DWORD PTR [r14]
  41641e:	sub    eax,0x1
  416421:	mov    DWORD PTR [r14],eax
  416424:	mov    rax,QWORD PTR [rip+0x6de95]        # 0x4842c0
  41642b:	lea    rdx,[rax+r12*8]
  41642f:	mov    r14,QWORD PTR [rdx]
  416432:	test   r14,r14
  416435:	je     0x41665a
  41643b:	mov    rax,QWORD PTR [r14]
  41643e:	mov    rcx,QWORD PTR [r14+0x8]
  416442:	mov    rax,QWORD PTR [rax]
  416445:	mov    r8,QWORD PTR [rcx]
  416448:	mov    rax,QWORD PTR [rax+0x8]
  41644c:	mov    r8,QWORD PTR [r8]
  41644f:	cmp    r14,rax
  416452:	mov    QWORD PTR [r8+0x8],rax
  416456:	mov    QWORD PTR [rax+0x8],rcx
  41645a:	cmovne r13,rax
  41645e:	lea    rcx,[rip+0x6de53]        # 0x4842b8
  416465:	mov    QWORD PTR [rdx],r13
  416468:	call   0x426d70
  41646d:	mov    rax,QWORD PTR [r14]
  416470:	mov    rcx,QWORD PTR [rax]
  416473:	mov    rdx,QWORD PTR [rcx]
  416476:	mov    r8,QWORD PTR [rdx+0x8]
  41647a:	mov    QWORD PTR [rbp+0x8],r8
  41647e:	mov    QWORD PTR [r14+0x8],0x0
  416486:	mov    QWORD PTR [rcx+0x8],0x0
  41648e:	mov    QWORD PTR [rdx+0x8],0x0
  416496:	mov    QWORD PTR [rax+0x8],0x0
  41649e:	mov    QWORD PTR [rbp+0x0],r14
  4164a2:	add    rdi,QWORD PTR [rbx]
  4164a5:	mov    rbp,rdi
  4164a8:	mov    rcx,QWORD PTR [rdi]
  4164ab:	jmp    0x41619a
  4164b0:	mov    rax,QWORD PTR [rcx]
  4164b3:	mov    rdi,rcx
  4164b6:	mov    QWORD PTR [rbp+0x0],rax
  4164ba:	jmp    0x4161ae
  4164bf:	nop
  4164c0:	mov    r9d,DWORD PTR [rip+0x6ddcd]        # 0x484294
  4164c7:	test   r9d,r9d
  4164ca:	je     0x416175
  4164d0:	lea    rcx,[rip+0x6de09]        # 0x4842e0
  4164d7:	call   0x426d40
  4164dc:	mov    rcx,rdi
  4164df:	call   0x415580
  4164e4:	lea    rcx,[rip+0x6ddf5]        # 0x4842e0
  4164eb:	mov    rdi,rax
  4164ee:	call   0x426d70
  4164f3:	jmp    0x41620d
  4164f8:	mov    edx,0x8
  4164fd:	mov    ecx,0xffd
  416502:	call   0x4388a8
  416507:	test   rax,rax
  41650a:	mov    QWORD PTR [rip+0x6dd37],rax        # 0x484248
  416511:	jne    0x4162b3
  416517:	call   QWORD PTR [rip+0x703c3]        # 0x4868e0
  41651d:	mov    ecx,DWORD PTR [rax]
  41651f:	call   0x4396b0
  416524:	mov    eax,r10d
  416527:	shl    rax,0x4
  41652b:	add    rax,rcx
  41652e:	cmp    rbx,rax
  416531:	jb     0x416581
  416533:	mov    r12,rbx
  416536:	sub    r12,rcx
  416539:	sar    r12,0x4
  41653d:	cmp    r10d,r12d
  416540:	jb     0x4165d0
  416546:	shl    r10d,0x4
  41654a:	lea    edx,[r10+0x10]
  41654e:	call   0x4387c0
  416553:	test   rax,rax
  416556:	mov    QWORD PTR [rbp+0x0],rax
  41655a:	je     0x416517
  41655c:	mov    r8d,DWORD PTR [rbp+0x8]
  416560:	mov    ebx,r12d
  416563:	shl    rbx,0x4
  416567:	add    rbx,rax
  41656a:	sub    r8d,r12d
  41656d:	lea    rcx,[rbx+0x10]
  416571:	mov    rdx,rbx
  416574:	shl    r8,0x4
  416578:	call   0x4387e8
  41657d:	add    DWORD PTR [rbp+0x8],0x1
  416581:	lea    rcx,[rip+0x6dcd0]        # 0x484258
  416588:	mov    QWORD PTR [rbx],rdi
  41658b:	mov    QWORD PTR [rbx+0x8],rsi
  41658f:	call   0x426d70
  416594:	jmp    0x4161c9
  416599:	nop    DWORD PTR [rax+0x0]
  4165a0:	lea    rdx,[rbx+0x10]
  4165a4:	cmp    eax,0x1
  4165a7:	cmove  rbx,rdx
  4165ab:	test   rbx,rbx
  4165ae:	je     0x416603
  4165b0:	mov    eax,r10d
  4165b3:	shl    rax,0x4
  4165b7:	add    rax,rcx
  4165ba:	cmp    rbx,rax
  4165bd:	jae    0x416533
  4165c3:	cmp    rdi,QWORD PTR [rbx]
  4165c6:	jne    0x416533
  4165cc:	jmp    0x416581
  4165ce:	xchg   ax,ax
  4165d0:	lea    rdx,[rip+0x2a95a]        # 0x440f31
  4165d7:	lea    rcx,[rip+0x2a712]        # 0x440cf0
  4165de:	call   0x415050
  4165e3:	mov    edx,0x10
  4165e8:	mov    ecx,0x1ff
  4165ed:	call   0x4388a8
  4165f2:	test   rax,rax
  4165f5:	mov    QWORD PTR [rbx],rax
  4165f8:	jne    0x4162c3
  4165fe:	jmp    0x416517
  416603:	xor    r12d,r12d
  416606:	jmp    0x416536
  41660b:	mov    rbx,rcx
  41660e:	jmp    0x4165ab
  416610:	mov    DWORD PTR [rip+0x6dcba],eax        # 0x4842d0
  416616:	jmp    0x416424
  41661b:	lea    rcx,[rip+0x6dc96]        # 0x4842b8
  416622:	call   0x426d40
  416627:	mov    eax,DWORD PTR [rip+0x6dca3]        # 0x4842d0
  41662d:	add    eax,0x1
  416630:	test   eax,eax
  416632:	jle    0x416610
  416634:	mov    DWORD PTR [rip+0x6dc92],0x0        # 0x4842d0
  41663e:	add    DWORD PTR [r14],0x1
  416642:	mov    eax,0x100
  416647:	cmp    DWORD PTR [r14],0x100
  41664e:	cmovbe eax,DWORD PTR [r14]
  416652:	mov    DWORD PTR [r14],eax
  416655:	jmp    0x416424
  41665a:	mov    r8d,r15d
  41665d:	mov    ecx,0xa0
  416662:	mov    r13,r8
  416665:	shl    r8,0x6
  416669:	shl    r13,0x4
  41666d:	lea    rax,[r8+r13*1]
  416671:	cmp    rax,0xa0
  416677:	cmovae rcx,rax
  41667b:	mov    rax,QWORD PTR [rip+0x6dc06]        # 0x484288
  416682:	xor    edx,edx
  416684:	div    rcx
  416687:	mov    ecx,0x4
  41668c:	cmp    rax,0x4
  416690:	cmovae rcx,rax
  416694:	mov    rax,QWORD PTR [rip+0x6dc2d]        # 0x4842c8
  41669b:	mov    r15d,ecx
  41669e:	mov    eax,DWORD PTR [rax+r12*4]
  4166a2:	test   eax,eax
  4166a4:	je     0x4166b7
  4166a6:	shl    eax,0x6
  4166a9:	xor    edx,edx
  4166ab:	div    r13
  4166ae:	cmp    ecx,eax
  4166b0:	mov    r15d,eax
  4166b3:	cmovae r15d,ecx
  4166b7:	lea    rcx,[rip+0x6dbfa]        # 0x4842b8
  4166be:	mov    r12d,r15d
  4166c1:	call   0x426d70
  4166c6:	lea    rcx,[rip+0x6dc13]        # 0x4842e0
  4166cd:	call   0x426d40
  4166d2:	mov    rcx,r13
  4166d5:	call   0x415580
  4166da:	cmp    r12,0x1
  4166de:	mov    QWORD PTR [rsp+0x28],rax
  4166e3:	mov    QWORD PTR [rax+0x8],0x0
  4166eb:	jbe    0x416740
  4166ed:	mov    r14,rax
  4166f0:	mov    r15d,0x1
  4166f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416700:	mov    rcx,r13
  416703:	add    r15,0x1
  416707:	call   0x415580
  41670c:	cmp    r15,r12
  41670f:	mov    QWORD PTR [r14],rax
  416712:	mov    QWORD PTR [rax+0x8],0x0
  41671a:	mov    r14,rax
  41671d:	jne    0x416700
  41671f:	lea    rcx,[rip+0x6dbba]        # 0x4842e0
  416726:	mov    QWORD PTR [rax],0x0
  41672d:	call   0x426d70
  416732:	mov    QWORD PTR [rbp+0x8],r12
  416736:	mov    r14,QWORD PTR [rsp+0x28]
  41673b:	jmp    0x41649e
  416740:	mov    rax,QWORD PTR [rsp+0x28]
  416745:	mov    r12d,0x1
  41674b:	jmp    0x41671f
  41674d:	nop    DWORD PTR [rax]
  416750:	push   rsi
  416751:	push   rbx
  416752:	sub    rsp,0x28
  416756:	mov    rsi,rcx
  416759:	call   0x416130
  41675e:	test   rax,rax
  416761:	mov    rbx,rax
  416764:	je     0x416773
  416766:	mov    r8,rsi
  416769:	xor    edx,edx
  41676b:	mov    rcx,rax
  41676e:	call   0x4387e0
  416773:	mov    rax,rbx
  416776:	add    rsp,0x28
  41677a:	pop    rbx
  41677b:	pop    rsi
  41677c:	ret    
  41677d:	nop    DWORD PTR [rax]
  416780:	push   rsi
  416781:	push   rbx
  416782:	sub    rsp,0x28
  416786:	mov    rbx,rcx
  416789:	mov    rsi,rdx
  41678c:	call   0x416130
  416791:	test   rax,rax
  416794:	mov    r9,rax
  416797:	je     0x4167aa
  416799:	mov    r8,rbx
  41679c:	mov    rdx,rsi
  41679f:	mov    rcx,rax
  4167a2:	call   0x4387f0
  4167a7:	mov    r9,rax
  4167aa:	mov    rax,r9
  4167ad:	add    rsp,0x28
  4167b1:	pop    rbx
  4167b2:	pop    rsi
  4167b3:	ret    
  4167b4:	xchg   ax,ax
  4167b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167c0:	push   r13
  4167c2:	push   r12
  4167c4:	push   rbp
  4167c5:	push   rdi
  4167c6:	push   rsi
  4167c7:	push   rbx
  4167c8:	sub    rsp,0x28
  4167cc:	xor    ebp,ebp
  4167ce:	lea    rdi,[rcx+0xf]
  4167d2:	and    rdi,0xfffffffffffffff0
  4167d6:	je     0x4167e8
  4167d8:	cmp    rdi,QWORD PTR [rip+0x6dad1]        # 0x4842b0
  4167df:	mov    bpl,0x1
  4167e2:	ja     0x4169b0
  4167e8:	test   rdx,rdx
  4167eb:	je     0x416987
  4167f1:	mov    eax,DWORD PTR [rip+0x6daa1]        # 0x484298
  4167f7:	mov    rsi,rdx
  4167fa:	mov    rbx,rcx
  4167fd:	test   eax,eax
  4167ff:	jne    0x416994
  416805:	cmp    ebp,0x1
  416808:	je     0x416843
  41680a:	cmp    ebp,0x2
  41680d:	je     0x416a62
  416813:	mov    rax,QWORD PTR [rip+0x65386]        # 0x47bba0
  41681a:	mov    r9d,DWORD PTR [rax]
  41681d:	test   r9d,r9d
  416820:	je     0x41682f
  416822:	mov    r8,rbx
  416825:	xor    edx,edx
  416827:	mov    rcx,rsi
  41682a:	call   0x4387e0
  41682f:	mov    rcx,rsi
  416832:	add    rsp,0x28
  416836:	pop    rbx
  416837:	pop    rsi
  416838:	pop    rdi
  416839:	pop    rbp
  41683a:	pop    r12
  41683c:	pop    r13
  41683e:	jmp    0x40e6e0
  416843:	lea    rcx,[rip+0x23e56]        # 0x43a6a0
  41684a:	call   0x426ff0
  41684f:	test   rax,rax
  416852:	mov    rbp,rax
  416855:	je     0x4169f0
  41685b:	mov    r9,rdi
  41685e:	mov    eax,0xa0
  416863:	mov    r13d,0x4
  416869:	shr    r9,0x4
  41686d:	lea    r8d,[r9-0x1]
  416871:	mov    r9d,r9d
  416874:	mov    r12,r9
  416877:	shl    r9,0x6
  41687b:	shl    r12,0x4
  41687f:	mov    rbx,r8
  416882:	mov    r10,r8
  416885:	shl    rbx,0x4
  416889:	add    r9,r12
  41688c:	mov    rcx,rbx
  41688f:	add    rcx,QWORD PTR [rbp+0x8]
  416893:	cmp    r9,0xa0
  41689a:	cmovb  r9,rax
  41689e:	mov    rax,QWORD PTR [rip+0x6d9e3]        # 0x484288
  4168a5:	xor    edx,edx
  4168a7:	div    r9
  4168aa:	mov    rdx,QWORD PTR [rip+0x6da17]        # 0x4842c8
  4168b1:	mov    r11,QWORD PTR [rcx+0x8]
  4168b5:	mov    edx,DWORD PTR [rdx+r8*4]
  4168b9:	cmp    rax,0x4
  4168bd:	cmovae r13,rax
  4168c1:	test   edx,edx
  4168c3:	mov    eax,r13d
  4168c6:	je     0x4168d9
  4168c8:	shl    edx,0x6
  4168cb:	mov    eax,edx
  4168cd:	xor    edx,edx
  4168cf:	div    r12
  4168d2:	cmp    r13d,eax
  4168d5:	cmovae eax,r13d
  4168d9:	mov    eax,eax
  4168db:	cmp    r11,rax
  4168de:	jb     0x416951
  4168e0:	mov    rax,rbx
  4168e3:	add    rax,QWORD PTR [rbp+0x0]
  4168e7:	movdqu xmm1,XMMWORD PTR [rcx]
  4168eb:	mov    r11,QWORD PTR [rax]
  4168ee:	mov    rdx,QWORD PTR [rax+0x8]
  4168f2:	movups XMMWORD PTR [rax],xmm1
  4168f5:	mov    QWORD PTR [rcx+0x8],rdx
  4168f9:	mov    QWORD PTR [rcx],r11
  4168fc:	xor    edx,edx
  4168fe:	mov    rax,QWORD PTR [rip+0x6d983]        # 0x484288
  416905:	mov    rcx,QWORD PTR [rbp+0x8]
  416909:	div    r9
  41690c:	mov    rdx,QWORD PTR [rip+0x6d9b5]        # 0x4842c8
  416913:	mov    r9d,0x4
  416919:	mov    r11,QWORD PTR [rcx+rbx*1+0x8]
  41691e:	mov    edx,DWORD PTR [rdx+r8*4]
  416922:	cmp    rax,0x4
  416926:	cmovae r9,rax
  41692a:	test   edx,edx
  41692c:	mov    eax,r9d
  41692f:	je     0x416942
  416931:	shl    edx,0x6
  416934:	mov    eax,edx
  416936:	xor    edx,edx
  416938:	div    r12
  41693b:	cmp    r9d,eax
  41693e:	cmovae eax,r9d
  416942:	mov    eax,eax
  416944:	cmp    r11,rax
  416947:	jb     0x416951
  416949:	mov    edx,r10d
  41694c:	call   0x415c00
  416951:	mov    rax,QWORD PTR [rip+0x65248]        # 0x47bba0
  416958:	mov    r11d,DWORD PTR [rax]
  41695b:	test   r11d,r11d
  41695e:	je     0x41696d
  416960:	mov    r8,rdi
  416963:	xor    edx,edx
  416965:	mov    rcx,rsi
  416968:	call   0x4387e0
  41696d:	add    rbx,QWORD PTR [rbp+0x8]
  416971:	mov    QWORD PTR [rsi+0x8],0x0
  416979:	mov    rax,QWORD PTR [rbx]
  41697c:	mov    QWORD PTR [rsi],rax
  41697f:	add    QWORD PTR [rbx+0x8],0x1
  416984:	mov    QWORD PTR [rbx],rsi
  416987:	add    rsp,0x28
  41698b:	pop    rbx
  41698c:	pop    rsi
  41698d:	pop    rdi
  41698e:	pop    rbp
  41698f:	pop    r12
  416991:	pop    r13
  416993:	ret    
  416994:	mov    rdx,rcx
  416997:	mov    rcx,rsi
  41699a:	call   0x415c40
  41699f:	test   eax,eax
  4169a1:	jne    0x416805
  4169a7:	call   0x4388c0
  4169ac:	nop    DWORD PTR [rax+0x0]
  4169b0:	mov    r8d,DWORD PTR [rip+0x6d8d9]        # 0x484290
  4169b7:	test   r8d,r8d
  4169ba:	jne    0x416aad
  4169c0:	mov    rax,QWORD PTR [rip+0x6d8c1]        # 0x484288
  4169c7:	xor    ebp,ebp
  4169c9:	sub    rax,0x30
  4169cd:	shr    rax,0x3
  4169d1:	cmp    rdi,rax
  4169d4:	ja     0x4167e8
  4169da:	cmp    DWORD PTR [rip+0x6d8b3],0x1        # 0x484294
  4169e1:	sbb    ebp,ebp
  4169e3:	add    ebp,0x2
  4169e6:	jmp    0x4167e8
  4169eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4169f0:	lea    rcx,[rip+0x6d849]        # 0x484240
  4169f7:	call   0x426d40
  4169fc:	cmp    QWORD PTR [rip+0x6d8f4],0x0        # 0x4842f8
  416a04:	jne    0x416a0b
  416a06:	call   0x415270
  416a0b:	lea    rcx,[rip+0x6d82e]        # 0x484240
  416a12:	call   0x426d70
  416a17:	mov    rax,QWORD PTR [rip+0x6d86a]        # 0x484288
  416a1e:	lea    rbx,[rax-0x30]
  416a22:	shr    rbx,0x7
  416a26:	mov    ebx,ebx
  416a28:	mov    rcx,rbx
  416a2b:	shl    rbx,0x4
  416a2f:	shl    rcx,0x5
  416a33:	add    rcx,0x10
  416a37:	call   0x40e610
  416a3c:	mov    rbp,rax
  416a3f:	lea    rax,[rax+0x10]
  416a43:	lea    rcx,[rip+0x23c56]        # 0x43a6a0
  416a4a:	mov    rdx,rbp
  416a4d:	add    rbx,rax
  416a50:	mov    QWORD PTR [rbp+0x0],rax
  416a54:	mov    QWORD PTR [rbp+0x8],rbx
  416a58:	call   0x427020
  416a5d:	jmp    0x41685b
  416a62:	mov    rax,QWORD PTR [rip+0x65137]        # 0x47bba0
  416a69:	mov    r10d,DWORD PTR [rax]
  416a6c:	test   r10d,r10d
  416a6f:	je     0x416a7e
  416a71:	mov    r8,rdi
  416a74:	xor    edx,edx
  416a76:	mov    rcx,rsi
  416a79:	call   0x4387e0
  416a7e:	lea    rcx,[rip+0x6d85b]        # 0x4842e0
  416a85:	call   0x426d40
  416a8a:	mov    rcx,rdi
  416a8d:	mov    rdx,rsi
  416a90:	call   0x415100
  416a95:	lea    rcx,[rip+0x6d844]        # 0x4842e0
  416a9c:	add    rsp,0x28
  416aa0:	pop    rbx
  416aa1:	pop    rsi
  416aa2:	pop    rdi
  416aa3:	pop    rbp
  416aa4:	pop    r12
  416aa6:	pop    r13
  416aa8:	jmp    0x426d70
  416aad:	xor    ebp,ebp
  416aaf:	jmp    0x4167e8
  416ab4:	xchg   ax,ax
  416ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ac0:	push   r15
  416ac2:	push   r14
  416ac4:	push   r13
  416ac6:	push   r12
  416ac8:	push   rbp
  416ac9:	push   rdi
  416aca:	push   rsi
  416acb:	push   rbx
  416acc:	sub    rsp,0x48
  416ad0:	mov    rax,rcx
  416ad3:	mov    QWORD PTR [rsp+0x30],rcx
  416ad8:	mov    r15,rdx
  416adb:	add    rax,0xf
  416adf:	mov    r12,r8
  416ae2:	and    rax,0xfffffffffffffff0
  416ae6:	mov    QWORD PTR [rsp+0x20],rax
  416aeb:	je     0x416cd4
  416af1:	cmp    rax,QWORD PTR [rip+0x6d7b8]        # 0x4842b0
  416af8:	ja     0x416cb0
  416afe:	lea    rcx,[rip+0x23b9b]        # 0x43a6a0
  416b05:	call   0x426ff0
  416b0a:	test   rax,rax
  416b0d:	mov    r14,rax
  416b10:	je     0x416d2e
  416b16:	mov    rax,QWORD PTR [rsp+0x20]
  416b1b:	shr    rax,0x4
  416b1f:	test   r15,r15
  416b22:	lea    edi,[rax-0x1]
  416b25:	mov    DWORD PTR [rsp+0x3c],edi
  416b29:	je     0x416c97
  416b2f:	mov    eax,eax
  416b31:	mov    r13,rdi
  416b34:	mov    ebp,0x4
  416b39:	mov    rbx,rax
  416b3c:	shl    rax,0x6
  416b40:	shl    r13,0x4
  416b44:	shl    rbx,0x4
  416b48:	add    rax,rbx
  416b4b:	mov    QWORD PTR [rsp+0x28],rbx
  416b50:	mov    ebx,0xa0
  416b55:	cmp    rax,0xa0
  416b5b:	cmovae rbx,rax
  416b5f:	mov    rax,r12
  416b62:	shl    rdi,0x2
  416b66:	mov    r12,r13
  416b69:	mov    r13,rax
  416b6c:	nop    DWORD PTR [rax+0x0]
  416b70:	mov    r11d,DWORD PTR [rip+0x6d721]        # 0x484298
  416b77:	mov    rsi,QWORD PTR [r15+r13*1]
  416b7b:	test   r11d,r11d
  416b7e:	je     0x416b95
  416b80:	mov    rdx,QWORD PTR [rsp+0x30]
  416b85:	mov    rcx,r15
  416b88:	call   0x415c40
  416b8d:	test   eax,eax
  416b8f:	je     0x416e33
  416b95:	mov    rax,QWORD PTR [rip+0x6d6ec]        # 0x484288
  416b9c:	xor    edx,edx
  416b9e:	mov    r8,r12
  416ba1:	add    r8,QWORD PTR [r14+0x8]
  416ba5:	div    rbx
  416ba8:	mov    rdx,QWORD PTR [rip+0x6d719]        # 0x4842c8
  416baf:	mov    r11,QWORD PTR [r8+0x8]
  416bb3:	mov    edx,DWORD PTR [rdx+rdi*1]
  416bb6:	cmp    rax,0x4
  416bba:	cmovb  rax,rbp
  416bbe:	test   edx,edx
  416bc0:	mov    rcx,rax
  416bc3:	je     0x416bd6
  416bc5:	shl    edx,0x6
  416bc8:	mov    eax,edx
  416bca:	xor    edx,edx
  416bcc:	div    QWORD PTR [rsp+0x28]
  416bd1:	cmp    ecx,eax
  416bd3:	cmovae eax,ecx
  416bd6:	mov    eax,eax
  416bd8:	cmp    r11,rax
  416bdb:	jb     0x416c50
  416bdd:	mov    rax,r12
  416be0:	add    rax,QWORD PTR [r14]
  416be3:	movdqu xmm1,XMMWORD PTR [r8]
  416be8:	mov    rcx,QWORD PTR [rax]
  416beb:	mov    rdx,QWORD PTR [rax+0x8]
  416bef:	movups XMMWORD PTR [rax],xmm1
  416bf2:	mov    QWORD PTR [r8+0x8],rdx
  416bf6:	mov    QWORD PTR [r8],rcx
  416bf9:	xor    edx,edx
  416bfb:	mov    rax,QWORD PTR [rip+0x6d686]        # 0x484288
  416c02:	mov    rcx,QWORD PTR [r14+0x8]
  416c06:	div    rbx
  416c09:	mov    rdx,QWORD PTR [rip+0x6d6b8]        # 0x4842c8
  416c10:	mov    r11,QWORD PTR [rcx+r12*1+0x8]
  416c15:	mov    edx,DWORD PTR [rdx+rdi*1]
  416c18:	cmp    rax,0x4
  416c1c:	cmovb  rax,rbp
  416c20:	test   edx,edx
  416c22:	mov    r8,rax
  416c25:	je     0x416c40
  416c27:	shl    edx,0x6
  416c2a:	mov    eax,edx
  416c2c:	xor    edx,edx
  416c2e:	div    QWORD PTR [rsp+0x28]
  416c33:	cmp    r8d,eax
  416c36:	cmovae eax,r8d
  416c3a:	nop    WORD PTR [rax+rax*1+0x0]
  416c40:	mov    eax,eax
  416c42:	cmp    r11,rax
  416c45:	jb     0x416c50
  416c47:	mov    edx,DWORD PTR [rsp+0x3c]
  416c4b:	call   0x415c00
  416c50:	mov    rax,QWORD PTR [rip+0x64f49]        # 0x47bba0
  416c57:	mov    r10d,DWORD PTR [rax]
  416c5a:	test   r10d,r10d
  416c5d:	je     0x416c6e
  416c5f:	mov    r8,QWORD PTR [rsp+0x20]
  416c64:	xor    edx,edx
  416c66:	mov    rcx,r15
  416c69:	call   0x4387e0
  416c6e:	mov    rax,r12
  416c71:	add    rax,QWORD PTR [r14+0x8]
  416c75:	mov    QWORD PTR [r15+0x8],0x0
  416c7d:	mov    rdx,QWORD PTR [rax]
  416c80:	mov    QWORD PTR [r15],rdx
  416c83:	add    QWORD PTR [rax+0x8],0x1
  416c88:	test   rsi,rsi
  416c8b:	mov    QWORD PTR [rax],r15
  416c8e:	mov    r15,rsi
  416c91:	jne    0x416b70
  416c97:	add    rsp,0x48
  416c9b:	pop    rbx
  416c9c:	pop    rsi
  416c9d:	pop    rdi
  416c9e:	pop    rbp
  416c9f:	pop    r12
  416ca1:	pop    r13
  416ca3:	pop    r14
  416ca5:	pop    r15
  416ca7:	ret    
  416ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  416cb0:	mov    eax,DWORD PTR [rip+0x6d5da]        # 0x484290
  416cb6:	test   eax,eax
  416cb8:	jne    0x416cd4
  416cba:	mov    rax,QWORD PTR [rip+0x6d5c7]        # 0x484288
  416cc1:	sub    rax,0x30
  416cc5:	shr    rax,0x3
  416cc9:	cmp    QWORD PTR [rsp+0x20],rax
  416cce:	jbe    0x416d9f
  416cd4:	test   r15,r15
  416cd7:	mov    rsi,QWORD PTR [rip+0x64ec2]        # 0x47bba0
  416cde:	mov    rdi,QWORD PTR [rsp+0x30]
  416ce3:	je     0x416c97
  416ce5:	mov    ecx,DWORD PTR [rip+0x6d5ad]        # 0x484298
  416ceb:	mov    rbx,QWORD PTR [r15+r12*1]
  416cef:	test   ecx,ecx
  416cf1:	je     0x416d06
  416cf3:	mov    rdx,rdi
  416cf6:	mov    rcx,r15
  416cf9:	call   0x415c40
  416cfe:	test   eax,eax
  416d00:	je     0x416e33
  416d06:	mov    edx,DWORD PTR [rsi]
  416d08:	test   edx,edx
  416d0a:	je     0x416d19
  416d0c:	mov    r8,rdi
  416d0f:	xor    edx,edx
  416d11:	mov    rcx,r15
  416d14:	call   0x4387e0
  416d19:	mov    rcx,r15
  416d1c:	mov    r15,rbx
  416d1f:	call   0x40e6e0
  416d24:	test   rbx,rbx
  416d27:	jne    0x416ce5
  416d29:	jmp    0x416c97
  416d2e:	lea    rcx,[rip+0x6d50b]        # 0x484240
  416d35:	call   0x426d40
  416d3a:	cmp    QWORD PTR [rip+0x6d5b6],0x0        # 0x4842f8
  416d42:	jne    0x416d49
  416d44:	call   0x415270
  416d49:	lea    rcx,[rip+0x6d4f0]        # 0x484240
  416d50:	call   0x426d70
  416d55:	mov    rax,QWORD PTR [rip+0x6d52c]        # 0x484288
  416d5c:	lea    rbx,[rax-0x30]
  416d60:	shr    rbx,0x7
  416d64:	mov    ebx,ebx
  416d66:	mov    rcx,rbx
  416d69:	shl    rbx,0x4
  416d6d:	shl    rcx,0x5
  416d71:	add    rcx,0x10
  416d75:	call   0x40e610
  416d7a:	mov    r14,rax
  416d7d:	lea    rax,[rax+0x10]
  416d81:	lea    rcx,[rip+0x23918]        # 0x43a6a0
  416d88:	mov    rdx,r14
  416d8b:	mov    QWORD PTR [r14],rax
  416d8e:	add    rax,rbx
  416d91:	mov    QWORD PTR [r14+0x8],rax
  416d95:	call   0x427020
  416d9a:	jmp    0x416b16
  416d9f:	mov    ebx,DWORD PTR [rip+0x6d4ef]        # 0x484294
  416da5:	test   ebx,ebx
  416da7:	je     0x416afe
  416dad:	lea    rcx,[rip+0x6d52c]        # 0x4842e0
  416db4:	call   0x426d40
  416db9:	test   r15,r15
  416dbc:	mov    rsi,QWORD PTR [rip+0x64ddd]        # 0x47bba0
  416dc3:	je     0x416e17
  416dc5:	mov    rdi,QWORD PTR [rsp+0x20]
  416dca:	mov    rbp,QWORD PTR [rsp+0x30]
  416dcf:	nop
  416dd0:	mov    r9d,DWORD PTR [rip+0x6d4c1]        # 0x484298
  416dd7:	mov    rbx,QWORD PTR [r15+r12*1]
  416ddb:	test   r9d,r9d
  416dde:	je     0x416def
  416de0:	mov    rdx,rbp
  416de3:	mov    rcx,r15
  416de6:	call   0x415c40
  416deb:	test   eax,eax
  416ded:	je     0x416e33
  416def:	mov    r8d,DWORD PTR [rsi]
  416df2:	test   r8d,r8d
  416df5:	je     0x416e04
  416df7:	mov    r8,rdi
  416dfa:	xor    edx,edx
  416dfc:	mov    rcx,r15
  416dff:	call   0x4387e0
  416e04:	mov    rdx,r15
  416e07:	mov    rcx,rdi
  416e0a:	mov    r15,rbx
  416e0d:	call   0x415100
  416e12:	test   rbx,rbx
  416e15:	jne    0x416dd0
  416e17:	lea    rcx,[rip+0x6d4c2]        # 0x4842e0
  416e1e:	add    rsp,0x48
  416e22:	pop    rbx
  416e23:	pop    rsi
  416e24:	pop    rdi
  416e25:	pop    rbp
  416e26:	pop    r12
  416e28:	pop    r13
  416e2a:	pop    r14
  416e2c:	pop    r15
  416e2e:	jmp    0x426d70
  416e33:	call   0x4388c0
  416e38:	nop
  416e39:	nop
  416e3a:	nop
  416e3b:	nop
  416e3c:	nop
  416e3d:	nop
  416e3e:	nop
  416e3f:	nop
  416e40:	push   r12
  416e42:	push   rbp
  416e43:	push   rdi
  416e44:	push   rsi
  416e45:	push   rbx
  416e46:	sub    rsp,0x30
  416e4a:	test   rcx,rcx
  416e4d:	je     0x416f39
  416e53:	mov    r11,QWORD PTR [rcx+0x8]
  416e57:	test   r11,r11
  416e5a:	je     0x416f20
  416e60:	mov    r9,QWORD PTR [r11+0x8]
  416e64:	test   r9,r9
  416e67:	je     0x416f2e
  416e6d:	mov    r10,QWORD PTR [r9+0x8]
  416e71:	test   r10,r10
  416e74:	jne    0x416e90
  416e76:	jmp    0x416f2e
  416e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e80:	mov    r10,QWORD PTR [r10+0x8]
  416e84:	test   r10,r10
  416e87:	je     0x416e99
  416e89:	mov    r11,r9
  416e8c:	mov    r9,QWORD PTR [r9+0x8]
  416e90:	mov    r10,QWORD PTR [r10+0x8]
  416e94:	test   r10,r10
  416e97:	jne    0x416e80
  416e99:	mov    rsi,rcx
  416e9c:	mov    r12,r8
  416e9f:	mov    rcx,r9
  416ea2:	mov    rbp,rdx
  416ea5:	mov    QWORD PTR [r11+0x8],0x0
  416ead:	lea    rdi,[rsp+0x20]
  416eb2:	call   0x416e40
  416eb7:	mov    rcx,rsi
  416eba:	mov    r8,r12
  416ebd:	mov    rdx,rbp
  416ec0:	mov    rbx,rax
  416ec3:	call   0x416e40
  416ec8:	mov    rsi,rax
  416ecb:	test   rbx,rbx
  416ece:	je     0x416ef4
  416ed0:	test   rsi,rsi
  416ed3:	je     0x416ef4
  416ed5:	mov    r8,r12
  416ed8:	mov    rdx,QWORD PTR [rbx]
  416edb:	mov    rcx,QWORD PTR [rsi]
  416ede:	call   rbp
  416ee0:	test   eax,eax
  416ee2:	jle    0x416f10
  416ee4:	mov    QWORD PTR [rdi+0x8],rbx
  416ee8:	mov    rdi,rbx
  416eeb:	mov    rbx,QWORD PTR [rbx+0x8]
  416eef:	test   rbx,rbx
  416ef2:	jne    0x416ed0
  416ef4:	test   rsi,rsi
  416ef7:	cmovne rbx,rsi
  416efb:	mov    QWORD PTR [rdi+0x8],rbx
  416eff:	mov    rax,QWORD PTR [rsp+0x28]
  416f04:	add    rsp,0x30
  416f08:	pop    rbx
  416f09:	pop    rsi
  416f0a:	pop    rdi
  416f0b:	pop    rbp
  416f0c:	pop    r12
  416f0e:	ret    
  416f0f:	nop
  416f10:	mov    QWORD PTR [rdi+0x8],rsi
  416f14:	mov    rdi,rsi
  416f17:	mov    rsi,QWORD PTR [rsi+0x8]
  416f1b:	jmp    0x416ecb
  416f1d:	nop    DWORD PTR [rax]
  416f20:	mov    rax,rcx
  416f23:	add    rsp,0x30
  416f27:	pop    rbx
  416f28:	pop    rsi
  416f29:	pop    rdi
  416f2a:	pop    rbp
  416f2b:	pop    r12
  416f2d:	ret    
  416f2e:	mov    r9,r11
  416f31:	mov    r11,rcx
  416f34:	jmp    0x416e99
  416f39:	xor    eax,eax
  416f3b:	jmp    0x416f04
  416f3d:	nop    DWORD PTR [rax]
  416f40:	push   r14
  416f42:	push   r13
  416f44:	push   r12
  416f46:	push   rbp
  416f47:	push   rdi
  416f48:	push   rsi
  416f49:	push   rbx
  416f4a:	sub    rsp,0x20
  416f4e:	test   r8,r8
  416f51:	mov    r14,rcx
  416f54:	mov    rdi,rdx
  416f57:	mov    rbp,r8
  416f5a:	mov    r12,r9
  416f5d:	je     0x417040
  416f63:	test   rcx,rcx
  416f66:	je     0x417070
  416f6c:	mov    r8,r12
  416f6f:	mov    rdx,QWORD PTR [r14]
  416f72:	mov    rcx,rdi
  416f75:	call   rbp
  416f77:	mov    rbx,QWORD PTR [r14+0x8]
  416f7b:	mov    esi,eax
  416f7d:	test   rbx,rbx
  416f80:	je     0x41708a
  416f86:	test   eax,eax
  416f88:	jle    0x416fe9
  416f8a:	mov    r13,r14
  416f8d:	jmp    0x416f9a
  416f8f:	nop
  416f90:	test   eax,eax
  416f92:	jle    0x416ff0
  416f94:	mov    r13,rbx
  416f97:	mov    rbx,r10
  416f9a:	mov    r8,r12
  416f9d:	mov    rdx,QWORD PTR [rbx]
  416fa0:	mov    rcx,rdi
  416fa3:	call   rbp
  416fa5:	mov    r10,QWORD PTR [rbx+0x8]
  416fa9:	mov    esi,eax
  416fab:	test   r10,r10
  416fae:	jne    0x416f90
  416fb0:	mov    ecx,0x10
  416fb5:	call   0x416130
  416fba:	test   esi,esi
  416fbc:	mov    rdx,rax
  416fbf:	mov    QWORD PTR [rax],rdi
  416fc2:	jle    0x417000
  416fc4:	cmp    QWORD PTR [rbx+0x8],0x0
  416fc9:	jne    0x417000
  416fcb:	mov    QWORD PTR [rbx+0x8],rax
  416fcf:	mov    QWORD PTR [rax+0x8],0x0
  416fd7:	mov    rax,r14
  416fda:	add    rsp,0x20
  416fde:	pop    rbx
  416fdf:	pop    rsi
  416fe0:	pop    rdi
  416fe1:	pop    rbp
  416fe2:	pop    r12
  416fe4:	pop    r13
  416fe6:	pop    r14
  416fe8:	ret    
  416fe9:	mov    rbx,r14
  416fec:	xor    r13d,r13d
  416fef:	nop
  416ff0:	mov    ecx,0x10
  416ff5:	call   0x416130
  416ffa:	mov    rdx,rax
  416ffd:	mov    QWORD PTR [rax],rdi
  417000:	test   r13,r13
  417003:	je     0x417020
  417005:	mov    rax,r14
  417008:	mov    QWORD PTR [r13+0x8],rdx
  41700c:	mov    QWORD PTR [rdx+0x8],rbx
  417010:	add    rsp,0x20
  417014:	pop    rbx
  417015:	pop    rsi
  417016:	pop    rdi
  417017:	pop    rbp
  417018:	pop    r12
  41701a:	pop    r13
  41701c:	pop    r14
  41701e:	ret    
  41701f:	nop
  417020:	mov    rax,rdx
  417023:	mov    QWORD PTR [rdx+0x8],r14
  417027:	add    rsp,0x20
  41702b:	pop    rbx
  41702c:	pop    rsi
  41702d:	pop    rdi
  41702e:	pop    rbp
  41702f:	pop    r12
  417031:	pop    r13
  417033:	pop    r14
  417035:	ret    
  417036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417040:	lea    r8,[rip+0x29f49]        # 0x440f90
  417047:	lea    rdx,[rip+0x29f72]        # 0x440fc0
  41704e:	lea    rcx,[rip+0x29f48]        # 0x440f9d
  417055:	call   0x40fd20
  41705a:	mov    rax,r14
  41705d:	add    rsp,0x20
  417061:	pop    rbx
  417062:	pop    rsi
  417063:	pop    rdi
  417064:	pop    rbp
  417065:	pop    r12
  417067:	pop    r13
  417069:	pop    r14
  41706b:	ret    
  41706c:	nop    DWORD PTR [rax+0x0]
  417070:	mov    ecx,0x10
  417075:	call   0x416130
  41707a:	mov    QWORD PTR [rax],rdi
  41707d:	mov    QWORD PTR [rax+0x8],0x0
  417085:	jmp    0x416fda
  41708a:	xor    r13d,r13d
  41708d:	mov    rbx,r14
  417090:	jmp    0x416fb0
  417095:	nop
  417096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170a0:	mov    ecx,0x10
  4170a5:	jmp    0x416750
  4170aa:	nop    WORD PTR [rax+rax*1+0x0]
  4170b0:	mov    r8d,0x8
  4170b6:	mov    rdx,rcx
  4170b9:	mov    ecx,0x10
  4170be:	jmp    0x416ac0
  4170c3:	nop    DWORD PTR [rax]
  4170c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170d0:	mov    rdx,rcx
  4170d3:	mov    ecx,0x10
  4170d8:	jmp    0x4167c0
  4170dd:	nop    DWORD PTR [rax]
  4170e0:	push   rdi
  4170e1:	push   rsi
  4170e2:	push   rbx
  4170e3:	sub    rsp,0x20
  4170e7:	test   rcx,rcx
  4170ea:	mov    rdi,rcx
  4170ed:	mov    rsi,rdx
  4170f0:	mov    rax,rcx
  4170f3:	je     0x417108
  4170f5:	mov    rbx,QWORD PTR [rax+0x8]
  4170f9:	xor    edx,edx
  4170fb:	mov    rcx,QWORD PTR [rax]
  4170fe:	call   rsi
  417100:	test   rbx,rbx
  417103:	mov    rax,rbx
  417106:	jne    0x4170f5
  417108:	mov    r8d,0x8
  41710e:	mov    rdx,rdi
  417111:	mov    ecx,0x10
  417116:	add    rsp,0x20
  41711a:	pop    rbx
  41711b:	pop    rsi
  41711c:	pop    rdi
  41711d:	jmp    0x416ac0
  417122:	nop    DWORD PTR [rax+0x0]
  417126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417130:	push   rsi
  417131:	push   rbx
  417132:	sub    rsp,0x28
  417136:	mov    rbx,rcx
  417139:	mov    ecx,0x10
  41713e:	mov    rsi,rdx
  417141:	call   0x416130
  417146:	test   rbx,rbx
  417149:	mov    QWORD PTR [rax],rsi
  41714c:	mov    QWORD PTR [rax+0x8],0x0
  417154:	je     0x417173
  417156:	mov    r8,rbx
  417159:	jmp    0x417163
  41715b:	nop    DWORD PTR [rax+rax*1+0x0]
  417160:	mov    r8,rdx
  417163:	mov    rdx,QWORD PTR [r8+0x8]
  417167:	test   rdx,rdx
  41716a:	jne    0x417160
  41716c:	mov    QWORD PTR [r8+0x8],rax
  417170:	mov    rax,rbx
  417173:	add    rsp,0x28
  417177:	pop    rbx
  417178:	pop    rsi
  417179:	ret    
  41717a:	nop    WORD PTR [rax+rax*1+0x0]
  417180:	push   rsi
  417181:	push   rbx
  417182:	sub    rsp,0x28
  417186:	mov    rbx,rcx
  417189:	mov    rsi,rdx
  41718c:	mov    ecx,0x10
  417191:	call   0x416130
  417196:	mov    QWORD PTR [rax],rsi
  417199:	mov    QWORD PTR [rax+0x8],rbx
  41719d:	add    rsp,0x28
  4171a1:	pop    rbx
  4171a2:	pop    rsi
  4171a3:	ret    
  4171a4:	xchg   ax,ax
  4171a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171b0:	push   rdi
  4171b1:	push   rsi
  4171b2:	push   rbx
  4171b3:	sub    rsp,0x20
  4171b7:	test   r8d,r8d
  4171ba:	js     0x417230
  4171bc:	mov    rsi,rcx
  4171bf:	mov    ebx,r8d
  4171c2:	mov    rdi,rdx
  4171c5:	mov    ecx,0x10
  4171ca:	je     0x417213
  4171cc:	call   0x416130
  4171d1:	test   rsi,rsi
  4171d4:	mov    QWORD PTR [rax],rdi
  4171d7:	je     0x417240
  4171d9:	lea    r8d,[rbx-0x1]
  4171dd:	mov    r9,rsi
  4171e0:	jmp    0x4171e5
  4171e2:	mov    r9,rdx
  4171e5:	mov    rdx,QWORD PTR [r9+0x8]
  4171e9:	test   r8d,r8d
  4171ec:	setg   r11b
  4171f0:	test   rdx,rdx
  4171f3:	setne  r10b
  4171f7:	sub    r8d,0x1
  4171fb:	test   r11b,r10b
  4171fe:	jne    0x4171e2
  417200:	mov    QWORD PTR [rax+0x8],rdx
  417204:	mov    QWORD PTR [r9+0x8],rax
  417208:	mov    rax,rsi
  41720b:	add    rsp,0x20
  41720f:	pop    rbx
  417210:	pop    rsi
  417211:	pop    rdi
  417212:	ret    
  417213:	call   0x416130
  417218:	mov    QWORD PTR [rax],rdi
  41721b:	mov    QWORD PTR [rax+0x8],rsi
  41721f:	add    rsp,0x20
  417223:	pop    rbx
  417224:	pop    rsi
  417225:	pop    rdi
  417226:	ret    
  417227:	nop    WORD PTR [rax+rax*1+0x0]
  417230:	add    rsp,0x20
  417234:	pop    rbx
  417235:	pop    rsi
  417236:	pop    rdi
  417237:	jmp    0x417130
  41723c:	nop    DWORD PTR [rax+0x0]
  417240:	mov    QWORD PTR [rax+0x8],0x0
  417248:	jmp    0x41720b
  41724a:	nop    WORD PTR [rax+rax*1+0x0]
  417250:	push   rdi
  417251:	push   rsi
  417252:	push   rbx
  417253:	sub    rsp,0x30
  417257:	test   rcx,rcx
  41725a:	mov    rsi,rcx
  41725d:	mov    rdi,r8
  417260:	je     0x4172b8
  417262:	cmp    rcx,rdx
  417265:	je     0x4172a5
  417267:	mov    rbx,rcx
  41726a:	jmp    0x417278
  41726c:	nop    DWORD PTR [rax+0x0]
  417270:	cmp    rdx,r9
  417273:	je     0x417281
  417275:	mov    rbx,r9
  417278:	mov    r9,QWORD PTR [rbx+0x8]
  41727c:	test   r9,r9
  41727f:	jne    0x417270
  417281:	mov    ecx,0x10
  417286:	call   0x416130
  41728b:	mov    rdx,QWORD PTR [rbx+0x8]
  41728f:	mov    QWORD PTR [rax],rdi
  417292:	mov    QWORD PTR [rax+0x8],rdx
  417296:	mov    QWORD PTR [rbx+0x8],rax
  41729a:	mov    rax,rsi
  41729d:	add    rsp,0x30
  4172a1:	pop    rbx
  4172a2:	pop    rsi
  4172a3:	pop    rdi
  4172a4:	ret    
  4172a5:	mov    ecx,0x10
  4172aa:	call   0x416130
  4172af:	mov    QWORD PTR [rax],rdi
  4172b2:	mov    QWORD PTR [rax+0x8],rsi
  4172b6:	jmp    0x41729d
  4172b8:	mov    ecx,0x10
  4172bd:	mov    QWORD PTR [rsp+0x28],rdx
  4172c2:	call   0x416130
  4172c7:	mov    rdx,QWORD PTR [rsp+0x28]
  4172cc:	mov    rsi,rax
  4172cf:	mov    QWORD PTR [rax],rdi
  4172d2:	mov    QWORD PTR [rax+0x8],0x0
  4172da:	test   rdx,rdx
  4172dd:	je     0x4172f9
  4172df:	lea    r8,[rip+0x29cbc]        # 0x440fa2
  4172e6:	lea    rdx,[rip+0x29d13]        # 0x441000
  4172ed:	lea    rcx,[rip+0x29ca9]        # 0x440f9d
  4172f4:	call   0x40fd20
  4172f9:	mov    rax,rsi
  4172fc:	jmp    0x41729d
  4172fe:	xchg   ax,ax
  417300:	test   rdx,rdx
  417303:	mov    rax,rcx
  417306:	je     0x417326
  417308:	test   rcx,rcx
  41730b:	je     0x417323
  41730d:	mov    r9,rcx
  417310:	jmp    0x417315
  417312:	mov    r9,r8
  417315:	mov    r8,QWORD PTR [r9+0x8]
  417319:	test   r8,r8
  41731c:	jne    0x417312
  41731e:	mov    QWORD PTR [r9+0x8],rdx
  417322:	ret    
  417323:	mov    rax,rdx
  417326:	repz ret 
  417328:	nop    DWORD PTR [rax+rax*1+0x0]
  417330:	push   rbx
  417331:	sub    rsp,0x20
  417335:	test   rcx,rcx
  417338:	mov    rbx,rcx
  41733b:	je     0x417361
  41733d:	cmp    QWORD PTR [rcx],rdx
  417340:	je     0x41738e
  417342:	mov    r9,rcx
  417345:	jmp    0x417358
  417347:	nop    WORD PTR [rax+rax*1+0x0]
  417350:	cmp    QWORD PTR [r8],rdx
  417353:	je     0x417370
  417355:	mov    r9,r8
  417358:	mov    r8,QWORD PTR [r9+0x8]
  41735c:	test   r8,r8
  41735f:	jne    0x417350
  417361:	mov    rax,rbx
  417364:	add    rsp,0x20
  417368:	pop    rbx
  417369:	ret    
  41736a:	nop    WORD PTR [rax+rax*1+0x0]
  417370:	mov    rax,QWORD PTR [r8+0x8]
  417374:	mov    rdx,r8
  417377:	mov    QWORD PTR [r9+0x8],rax
  41737b:	mov    ecx,0x10
  417380:	call   0x4167c0
  417385:	mov    rax,rbx
  417388:	add    rsp,0x20
  41738c:	pop    rbx
  41738d:	ret    
  41738e:	mov    rdx,rcx
  417391:	mov    rbx,QWORD PTR [rcx+0x8]
  417395:	jmp    0x41737b
  417397:	nop    WORD PTR [rax+rax*1+0x0]
  4173a0:	push   rbp
  4173a1:	push   rdi
  4173a2:	push   rsi
  4173a3:	push   rbx
  4173a4:	sub    rsp,0x28
  4173a8:	test   rcx,rcx
  4173ab:	mov    rsi,rdx
  4173ae:	je     0x417405
  4173b0:	mov    rbp,rcx
  4173b3:	xor    ebx,ebx
  4173b5:	jmp    0x4173cc
  4173b7:	nop    WORD PTR [rax+rax*1+0x0]
  4173c0:	mov    rbx,rcx
  4173c3:	mov    rcx,QWORD PTR [rcx+0x8]
  4173c7:	test   rcx,rcx
  4173ca:	je     0x4173f3
  4173cc:	cmp    QWORD PTR [rcx],rsi
  4173cf:	jne    0x4173c0
  4173d1:	test   rbx,rbx
  4173d4:	mov    rdi,QWORD PTR [rcx+0x8]
  4173d8:	je     0x417400
  4173da:	mov    QWORD PTR [rbx+0x8],rdi
  4173de:	mov    rdx,rcx
  4173e1:	mov    ecx,0x10
  4173e6:	call   0x4167c0
  4173eb:	mov    rcx,rdi
  4173ee:	test   rcx,rcx
  4173f1:	jne    0x4173cc
  4173f3:	mov    rax,rbp
  4173f6:	add    rsp,0x28
  4173fa:	pop    rbx
  4173fb:	pop    rsi
  4173fc:	pop    rdi
  4173fd:	pop    rbp
  4173fe:	ret    
  4173ff:	nop
  417400:	mov    rbp,rdi
  417403:	jmp    0x4173de
  417405:	xor    ebp,ebp
  417407:	jmp    0x4173f3
  417409:	nop    DWORD PTR [rax+0x0]
  417410:	test   rcx,rcx
  417413:	mov    rax,rcx
  417416:	je     0x417435
  417418:	cmp    rcx,rdx
  41741b:	je     0x417451
  41741d:	mov    r9,rcx
  417420:	jmp    0x41742a
  417422:	cmp    rdx,r8
  417425:	je     0x417440
  417427:	mov    r9,r8
  41742a:	mov    r8,QWORD PTR [r9+0x8]
  41742e:	test   r8,r8
  417431:	jne    0x417422
  417433:	repz ret 
  417435:	repz ret 
  417437:	nop    WORD PTR [rax+rax*1+0x0]
  417440:	mov    rdx,QWORD PTR [r8+0x8]
  417444:	mov    QWORD PTR [r9+0x8],rdx
  417448:	mov    QWORD PTR [r8+0x8],0x0
  417450:	ret    
  417451:	mov    r8,rcx
  417454:	mov    rax,QWORD PTR [rcx+0x8]
  417458:	jmp    0x417448
  41745a:	nop    WORD PTR [rax+rax*1+0x0]
  417460:	push   rbx
  417461:	sub    rsp,0x20
  417465:	test   rcx,rcx
  417468:	mov    rbx,rcx
  41746b:	je     0x417491
  41746d:	cmp    rcx,rdx
  417470:	je     0x4174b6
  417472:	mov    r9,rcx
  417475:	jmp    0x417488
  417477:	nop    WORD PTR [rax+rax*1+0x0]
  417480:	cmp    rdx,r8
  417483:	je     0x4174a4
  417485:	mov    r9,r8
  417488:	mov    r8,QWORD PTR [r9+0x8]
  41748c:	test   r8,r8
  41748f:	jne    0x417480
  417491:	mov    ecx,0x10
  417496:	call   0x4167c0
  41749b:	mov    rax,rbx
  41749e:	add    rsp,0x20
  4174a2:	pop    rbx
  4174a3:	ret    
  4174a4:	mov    rax,QWORD PTR [rdx+0x8]
  4174a8:	mov    QWORD PTR [r9+0x8],rax
  4174ac:	mov    QWORD PTR [r8+0x8],0x0
  4174b4:	jmp    0x417491
  4174b6:	mov    r8,rcx
  4174b9:	mov    rbx,QWORD PTR [rcx+0x8]
  4174bd:	jmp    0x4174ac
  4174bf:	nop
  4174c0:	push   rdi
  4174c1:	push   rsi
  4174c2:	push   rbx
  4174c3:	sub    rsp,0x20
  4174c7:	test   rcx,rcx
  4174ca:	je     0x417528
  4174cc:	mov    rbx,rcx
  4174cf:	mov    ecx,0x10
  4174d4:	call   0x416130
  4174d9:	mov    rdi,rax
  4174dc:	mov    rax,QWORD PTR [rbx]
  4174df:	mov    rbx,QWORD PTR [rbx+0x8]
  4174e3:	test   rbx,rbx
  4174e6:	mov    QWORD PTR [rdi],rax
  4174e9:	je     0x417523
  4174eb:	mov    rsi,rdi
  4174ee:	xchg   ax,ax
  4174f0:	mov    ecx,0x10
  4174f5:	call   0x416130
  4174fa:	mov    rcx,QWORD PTR [rbx]
  4174fd:	mov    QWORD PTR [rsi+0x8],rax
  417501:	mov    rsi,rax
  417504:	mov    rbx,QWORD PTR [rbx+0x8]
  417508:	mov    QWORD PTR [rax],rcx
  41750b:	test   rbx,rbx
  41750e:	jne    0x4174f0
  417510:	mov    QWORD PTR [rax+0x8],0x0
  417518:	mov    rax,rdi
  41751b:	add    rsp,0x20
  41751f:	pop    rbx
  417520:	pop    rsi
  417521:	pop    rdi
  417522:	ret    
  417523:	mov    rax,rdi
  417526:	jmp    0x417510
  417528:	xor    edi,edi
  41752a:	jmp    0x417518
  41752c:	nop    DWORD PTR [rax+0x0]
  417530:	test   rcx,rcx
  417533:	mov    rax,rcx
  417536:	je     0x417553
  417538:	xor    ecx,ecx
  41753a:	jmp    0x417543
  41753c:	nop    DWORD PTR [rax+0x0]
  417540:	mov    rax,rdx
  417543:	mov    rdx,QWORD PTR [rax+0x8]
  417547:	mov    QWORD PTR [rax+0x8],rcx
  41754b:	mov    rcx,rax
  41754e:	test   rdx,rdx
  417551:	jne    0x417540
  417553:	repz ret 
  417555:	nop
  417556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417560:	test   edx,edx
  417562:	mov    rax,rcx
  417565:	lea    ecx,[rdx-0x1]
  417568:	je     0x417583
  41756a:	test   rax,rax
  41756d:	je     0x417583
  41756f:	xor    edx,edx
  417571:	jmp    0x41757b
  417573:	add    edx,0x1
  417576:	test   rax,rax
  417579:	je     0x417583
  41757b:	cmp    edx,ecx
  41757d:	mov    rax,QWORD PTR [rax+0x8]
  417581:	jne    0x417573
  417583:	repz ret 
  417585:	nop
  417586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417590:	test   edx,edx
  417592:	lea    r8d,[rdx-0x1]
  417596:	je     0x4175b2
  417598:	test   rcx,rcx
  41759b:	je     0x4175c0
  41759d:	xor    eax,eax
  41759f:	jmp    0x4175a9
  4175a1:	add    eax,0x1
  4175a4:	test   rcx,rcx
  4175a7:	je     0x4175c0
  4175a9:	cmp    eax,r8d
  4175ac:	mov    rcx,QWORD PTR [rcx+0x8]
  4175b0:	jne    0x4175a1
  4175b2:	test   rcx,rcx
  4175b5:	je     0x4175c0
  4175b7:	mov    rax,QWORD PTR [rcx]
  4175ba:	ret    
  4175bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4175c0:	xor    eax,eax
  4175c2:	ret    
  4175c3:	nop    DWORD PTR [rax]
  4175c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4175d0:	test   rcx,rcx
  4175d3:	mov    rax,rcx
  4175d6:	je     0x4175ee
  4175d8:	cmp    QWORD PTR [rcx],rdx
  4175db:	jne    0x4175e5
  4175dd:	jmp    0x4175f0
  4175df:	nop
  4175e0:	cmp    QWORD PTR [rax],rdx
  4175e3:	je     0x4175ee
  4175e5:	mov    rax,QWORD PTR [rax+0x8]
  4175e9:	test   rax,rax
  4175ec:	jne    0x4175e0
  4175ee:	repz ret 
  4175f0:	repz ret 
  4175f2:	nop    DWORD PTR [rax+0x0]
  4175f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417600:	push   rdi
  417601:	push   rsi
  417602:	push   rbx
  417603:	sub    rsp,0x20
  417607:	test   r8,r8
  41760a:	mov    rbx,rcx
  41760d:	mov    rdi,rdx
  417610:	mov    rsi,r8
  417613:	jne    0x417630
  417615:	jmp    0x417640
  417617:	nop    WORD PTR [rax+rax*1+0x0]
  417620:	mov    rdx,rdi
  417623:	mov    rcx,QWORD PTR [rbx]
  417626:	call   rsi
  417628:	test   eax,eax
  41762a:	je     0x41765a
  41762c:	mov    rbx,QWORD PTR [rbx+0x8]
  417630:	test   rbx,rbx
  417633:	jne    0x417620
  417635:	xor    eax,eax
  417637:	add    rsp,0x20
  41763b:	pop    rbx
  41763c:	pop    rsi
  41763d:	pop    rdi
  41763e:	ret    
  41763f:	nop
  417640:	lea    r8,[rip+0x29949]        # 0x440f90
  417647:	lea    rdx,[rip+0x29992]        # 0x440fe0
  41764e:	lea    rcx,[rip+0x29948]        # 0x440f9d
  417655:	call   0x40fd20
  41765a:	mov    rax,rbx
  41765d:	add    rsp,0x20
  417661:	pop    rbx
  417662:	pop    rsi
  417663:	pop    rdi
  417664:	ret    
  417665:	nop
  417666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417670:	mov    eax,0xffffffff
  417675:	test   rcx,rcx
  417678:	je     0x417699
  41767a:	xor    eax,eax
  41767c:	cmp    rcx,rdx
  41767f:	jne    0x417688
  417681:	jmp    0x4176a2
  417683:	cmp    rdx,rcx
  417686:	je     0x4176a0
  417688:	mov    rcx,QWORD PTR [rcx+0x8]
  41768c:	add    eax,0x1
  41768f:	test   rcx,rcx
  417692:	jne    0x417683
  417694:	mov    eax,0xffffffff
  417699:	repz ret 
  41769b:	nop    DWORD PTR [rax+rax*1+0x0]
  4176a0:	repz ret 
  4176a2:	xor    eax,eax
  4176a4:	ret    
  4176a5:	nop
  4176a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176b0:	mov    eax,0xffffffff
  4176b5:	test   rcx,rcx
  4176b8:	je     0x4176d9
  4176ba:	xor    eax,eax
  4176bc:	cmp    QWORD PTR [rcx],rdx
  4176bf:	jne    0x4176c8
  4176c1:	jmp    0x4176e2
  4176c3:	cmp    QWORD PTR [rcx],rdx
  4176c6:	je     0x4176e0
  4176c8:	mov    rcx,QWORD PTR [rcx+0x8]
  4176cc:	add    eax,0x1
  4176cf:	test   rcx,rcx
  4176d2:	jne    0x4176c3
  4176d4:	mov    eax,0xffffffff
  4176d9:	repz ret 
  4176db:	nop    DWORD PTR [rax+rax*1+0x0]
  4176e0:	repz ret 
  4176e2:	xor    eax,eax
  4176e4:	ret    
  4176e5:	nop
  4176e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176f0:	test   rcx,rcx
  4176f3:	mov    rax,rcx
  4176f6:	jne    0x417703
  4176f8:	jmp    0x417710
  4176fa:	nop    WORD PTR [rax+rax*1+0x0]
  417700:	mov    rax,rdx
  417703:	mov    rdx,QWORD PTR [rax+0x8]
  417707:	test   rdx,rdx
  41770a:	jne    0x417700
  41770c:	repz ret 
  41770e:	xchg   ax,ax
  417710:	repz ret 
  417712:	nop    DWORD PTR [rax+0x0]
  417716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417720:	xor    eax,eax
  417722:	test   rcx,rcx
  417725:	je     0x41773e
  417727:	nop    WORD PTR [rax+rax*1+0x0]
  417730:	mov    rcx,QWORD PTR [rcx+0x8]
  417734:	add    eax,0x1
  417737:	test   rcx,rcx
  41773a:	jne    0x417730
  41773c:	repz ret 
  41773e:	repz ret 
  417740:	push   rdi
  417741:	push   rsi
  417742:	push   rbx
  417743:	sub    rsp,0x20
  417747:	test   rcx,rcx
  41774a:	mov    rdi,rdx
  41774d:	mov    rsi,r8
  417750:	je     0x417766
  417752:	mov    rbx,QWORD PTR [rcx+0x8]
  417756:	mov    rdx,rsi
  417759:	mov    rcx,QWORD PTR [rcx]
  41775c:	call   rdi
  41775e:	test   rbx,rbx
  417761:	mov    rcx,rbx
  417764:	jne    0x417752
  417766:	add    rsp,0x20
  41776a:	pop    rbx
  41776b:	pop    rsi
  41776c:	pop    rdi
  41776d:	ret    
  41776e:	xchg   ax,ax
  417770:	xor    r9d,r9d
  417773:	jmp    0x416f40
  417778:	nop    DWORD PTR [rax+rax*1+0x0]
  417780:	jmp    0x416f40
  417785:	nop
  417786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417790:	xor    r8d,r8d
  417793:	jmp    0x416e40
  417798:	nop    DWORD PTR [rax+rax*1+0x0]
  4177a0:	jmp    0x416e40
  4177a5:	nop
  4177a6:	nop
  4177a7:	nop
  4177a8:	nop
  4177a9:	nop
  4177aa:	nop
  4177ab:	nop
  4177ac:	nop
  4177ad:	nop
  4177ae:	nop
  4177af:	nop
  4177b0:	push   rbp
  4177b1:	push   rdi
  4177b2:	push   rsi
  4177b3:	push   rbx
  4177b4:	sub    rsp,0x38
  4177b8:	xor    r9d,r9d
  4177bb:	xor    r8d,r8d
  4177be:	mov    esi,edx
  4177c0:	mov    QWORD PTR [rsp+0x20],0x0
  4177c9:	mov    edx,0xffffffff
  4177ce:	call   0x4229b0
  4177d3:	test   rax,rax
  4177d6:	mov    rbx,rax
  4177d9:	je     0x41780d
  4177db:	and    esi,0xfffffffe
  4177de:	mov    rcx,rax
  4177e1:	mov    edx,esi
  4177e3:	call   QWORD PTR [rip+0x6f15f]        # 0x486948
  4177e9:	mov    rdi,QWORD PTR [rip+0x6f0f0]        # 0x4868e0
  4177f0:	mov    esi,eax
  4177f2:	call   rdi
  4177f4:	mov    ebp,DWORD PTR [rax]
  4177f6:	mov    rcx,rbx
  4177f9:	call   0x40e6e0
  4177fe:	call   rdi
  417800:	mov    DWORD PTR [rax],ebp
  417802:	mov    eax,esi
  417804:	add    rsp,0x38
  417808:	pop    rbx
  417809:	pop    rsi
  41780a:	pop    rdi
  41780b:	pop    rbp
  41780c:	ret    
  41780d:	call   QWORD PTR [rip+0x6f0cd]        # 0x4868e0
  417813:	mov    DWORD PTR [rax],0x16
  417819:	mov    eax,0xffffffff
  41781e:	jmp    0x417804
  417820:	push   rbp
  417821:	push   rdi
  417822:	push   rsi
  417823:	push   rbx
  417824:	sub    rsp,0x38
  417828:	xor    r9d,r9d
  41782b:	xor    r8d,r8d
  41782e:	mov    esi,edx
  417830:	mov    QWORD PTR [rsp+0x20],0x0
  417839:	mov    edx,0xffffffff
  41783e:	call   0x4229b0
  417843:	test   rax,rax
  417846:	mov    rbx,rax
  417849:	je     0x41787a
  41784b:	mov    edx,esi
  41784d:	mov    rcx,rax
  417850:	call   QWORD PTR [rip+0x6f102]        # 0x486958
  417856:	mov    rdi,QWORD PTR [rip+0x6f083]        # 0x4868e0
  41785d:	mov    esi,eax
  41785f:	call   rdi
  417861:	mov    ebp,DWORD PTR [rax]
  417863:	mov    rcx,rbx
  417866:	call   0x40e6e0
  41786b:	call   rdi
  41786d:	mov    DWORD PTR [rax],ebp
  41786f:	mov    eax,esi
  417871:	add    rsp,0x38
  417875:	pop    rbx
  417876:	pop    rsi
  417877:	pop    rdi
  417878:	pop    rbp
  417879:	ret    
  41787a:	call   QWORD PTR [rip+0x6f060]        # 0x4868e0
  417880:	mov    DWORD PTR [rax],0x16
  417886:	mov    eax,0xffffffff
  41788b:	jmp    0x417871
  41788d:	nop    DWORD PTR [rax]
  417890:	push   rbp
  417891:	push   rdi
  417892:	push   rsi
  417893:	push   rbx
  417894:	sub    rsp,0x38
  417898:	xor    r9d,r9d
  41789b:	mov    esi,edx
  41789d:	mov    edi,r8d
  4178a0:	mov    QWORD PTR [rsp+0x20],0x0
  4178a9:	xor    r8d,r8d
  4178ac:	mov    edx,0xffffffff
  4178b1:	call   0x4229b0
  4178b6:	test   rax,rax
  4178b9:	mov    rbx,rax
  4178bc:	je     0x4178f0
  4178be:	mov    r8d,edi
  4178c1:	mov    edx,esi
  4178c3:	mov    rcx,rax
  4178c6:	call   QWORD PTR [rip+0x6f0b4]        # 0x486980
  4178cc:	mov    rdi,QWORD PTR [rip+0x6f00d]        # 0x4868e0
  4178d3:	mov    esi,eax
  4178d5:	call   rdi
  4178d7:	mov    ebp,DWORD PTR [rax]
  4178d9:	mov    rcx,rbx
  4178dc:	call   0x40e6e0
  4178e1:	call   rdi
  4178e3:	mov    DWORD PTR [rax],ebp
  4178e5:	mov    eax,esi
  4178e7:	add    rsp,0x38
  4178eb:	pop    rbx
  4178ec:	pop    rsi
  4178ed:	pop    rdi
  4178ee:	pop    rbp
  4178ef:	ret    
  4178f0:	call   QWORD PTR [rip+0x6efea]        # 0x4868e0
  4178f6:	mov    DWORD PTR [rax],0x16
  4178fc:	mov    eax,0xffffffff
  417901:	jmp    0x4178e7
  417903:	nop    DWORD PTR [rax]
  417906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417910:	push   rbp
  417911:	push   rdi
  417912:	push   rsi
  417913:	push   rbx
  417914:	sub    rsp,0x38
  417918:	xor    r9d,r9d
  41791b:	xor    r8d,r8d
  41791e:	mov    esi,edx
  417920:	mov    QWORD PTR [rsp+0x20],0x0
  417929:	mov    edx,0xffffffff
  41792e:	call   0x4229b0
  417933:	test   rax,rax
  417936:	mov    rbx,rax
  417939:	je     0x41796a
  41793b:	mov    edx,esi
  41793d:	mov    rcx,rax
  417940:	call   QWORD PTR [rip+0x6f01a]        # 0x486960
  417946:	mov    rdi,QWORD PTR [rip+0x6ef93]        # 0x4868e0
  41794d:	mov    esi,eax
  41794f:	call   rdi
  417951:	mov    ebp,DWORD PTR [rax]
  417953:	mov    rcx,rbx
  417956:	call   0x40e6e0
  41795b:	call   rdi
  41795d:	mov    DWORD PTR [rax],ebp
  41795f:	mov    eax,esi
  417961:	add    rsp,0x38
  417965:	pop    rbx
  417966:	pop    rsi
  417967:	pop    rdi
  417968:	pop    rbp
  417969:	ret    
  41796a:	call   QWORD PTR [rip+0x6ef70]        # 0x4868e0
  417970:	mov    DWORD PTR [rax],0x16
  417976:	mov    eax,0xffffffff
  41797b:	jmp    0x417961
  41797d:	nop    DWORD PTR [rax]
  417980:	push   rbp
  417981:	push   rdi
  417982:	push   rsi
  417983:	push   rbx
  417984:	sub    rsp,0x38
  417988:	xor    r9d,r9d
  41798b:	xor    r8d,r8d
  41798e:	mov    rbx,rdx
  417991:	mov    QWORD PTR [rsp+0x20],0x0
  41799a:	mov    edx,0xffffffff
  41799f:	call   0x4229b0
  4179a4:	test   rax,rax
  4179a7:	mov    rsi,rax
  4179aa:	je     0x417aa8
  4179b0:	xor    r9d,r9d
  4179b3:	xor    r8d,r8d
  4179b6:	mov    QWORD PTR [rsp+0x20],0x0
  4179bf:	mov    edx,0xffffffff
  4179c4:	mov    rcx,rbx
  4179c7:	call   0x4229b0
  4179cc:	test   rax,rax
  4179cf:	mov    rdi,rax
  4179d2:	je     0x417aa0
  4179d8:	mov    r8d,0x1
  4179de:	mov    rdx,rax
  4179e1:	mov    rcx,rsi
  4179e4:	xor    ebp,ebp
  4179e6:	xor    ebx,ebx
  4179e8:	call   QWORD PTR [rip+0x6edb2]        # 0x4867a0
  4179ee:	test   eax,eax
  4179f0:	je     0x417a15
  4179f2:	mov    rcx,rsi
  4179f5:	call   0x40e6e0
  4179fa:	mov    rcx,rdi
  4179fd:	call   0x40e6e0
  417a02:	call   QWORD PTR [rip+0x6eed8]        # 0x4868e0
  417a08:	mov    DWORD PTR [rax],ebp
  417a0a:	mov    eax,ebx
  417a0c:	add    rsp,0x38
  417a10:	pop    rbx
  417a11:	pop    rsi
  417a12:	pop    rdi
  417a13:	pop    rbp
  417a14:	ret    
  417a15:	call   QWORD PTR [rip+0x6eccd]        # 0x4866e8
  417a1b:	cmp    eax,0x11
  417a1e:	je     0x417a82
  417a20:	jbe    0x417a40
  417a22:	cmp    eax,0x50
  417a25:	je     0x417a73
  417a27:	ja     0x417a60
  417a29:	sub    eax,0x20
  417a2c:	cmp    eax,0x1
  417a2f:	ja     0x417a4f
  417a31:	mov    ebp,0xd
  417a36:	mov    ebx,0xffffffff
  417a3b:	jmp    0x4179f2
  417a3d:	nop    DWORD PTR [rax]
  417a40:	cmp    eax,0x2
  417a43:	jb     0x417a4f
  417a45:	cmp    eax,0x3
  417a48:	jbe    0x417a91
  417a4a:	cmp    eax,0x5
  417a4d:	je     0x417a31
  417a4f:	mov    ebp,0x5
  417a54:	mov    ebx,0xffffffff
  417a59:	jmp    0x4179f2
  417a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  417a60:	cmp    eax,0xb7
  417a65:	mov    ebp,0x11
  417a6a:	mov    ebx,0xffffffff
  417a6f:	je     0x4179f2
  417a71:	jmp    0x417a4f
  417a73:	mov    ebp,0x11
  417a78:	mov    ebx,0xffffffff
  417a7d:	jmp    0x4179f2
  417a82:	mov    ebp,0x12
  417a87:	mov    ebx,0xffffffff
  417a8c:	jmp    0x4179f2
  417a91:	mov    ebp,0x2
  417a96:	mov    ebx,0xffffffff
  417a9b:	jmp    0x4179f2
  417aa0:	mov    rcx,rsi
  417aa3:	call   0x40e6e0
  417aa8:	call   QWORD PTR [rip+0x6ee32]        # 0x4868e0
  417aae:	mov    DWORD PTR [rax],0x16
  417ab4:	mov    eax,0xffffffff
  417ab9:	jmp    0x417a0c
  417abe:	xchg   ax,ax
  417ac0:	push   rbp
  417ac1:	push   rdi
  417ac2:	push   rsi
  417ac3:	push   rbx
  417ac4:	sub    rsp,0x38
  417ac8:	xor    r9d,r9d
  417acb:	xor    r8d,r8d
  417ace:	mov    edx,0xffffffff
  417ad3:	mov    QWORD PTR [rsp+0x20],0x0
  417adc:	call   0x4229b0
  417ae1:	test   rax,rax
  417ae4:	mov    rbx,rax
  417ae7:	je     0x417b16
  417ae9:	mov    rcx,rax
  417aec:	call   QWORD PTR [rip+0x6ee86]        # 0x486978
  417af2:	mov    rdi,QWORD PTR [rip+0x6ede7]        # 0x4868e0
  417af9:	mov    esi,eax
  417afb:	call   rdi
  417afd:	mov    ebp,DWORD PTR [rax]
  417aff:	mov    rcx,rbx
  417b02:	call   0x40e6e0
  417b07:	call   rdi
  417b09:	mov    DWORD PTR [rax],ebp
  417b0b:	mov    eax,esi
  417b0d:	add    rsp,0x38
  417b11:	pop    rbx
  417b12:	pop    rsi
  417b13:	pop    rdi
  417b14:	pop    rbp
  417b15:	ret    
  417b16:	call   QWORD PTR [rip+0x6edc4]        # 0x4868e0
  417b1c:	mov    DWORD PTR [rax],0x16
  417b22:	mov    eax,0xffffffff
  417b27:	jmp    0x417b0d
  417b29:	nop    DWORD PTR [rax+0x0]
  417b30:	push   rbp
  417b31:	push   rdi
  417b32:	push   rsi
  417b33:	push   rbx
  417b34:	sub    rsp,0x38
  417b38:	xor    r9d,r9d
  417b3b:	xor    r8d,r8d
  417b3e:	mov    edx,0xffffffff
  417b43:	mov    QWORD PTR [rsp+0x20],0x0
  417b4c:	call   0x4229b0
  417b51:	test   rax,rax
  417b54:	mov    rbx,rax
  417b57:	je     0x417b86
  417b59:	mov    rcx,rax
  417b5c:	call   QWORD PTR [rip+0x6edee]        # 0x486950
  417b62:	mov    rdi,QWORD PTR [rip+0x6ed77]        # 0x4868e0
  417b69:	mov    esi,eax
  417b6b:	call   rdi
  417b6d:	mov    ebp,DWORD PTR [rax]
  417b6f:	mov    rcx,rbx
  417b72:	call   0x40e6e0
  417b77:	call   rdi
  417b79:	mov    DWORD PTR [rax],ebp
  417b7b:	mov    eax,esi
  417b7d:	add    rsp,0x38
  417b81:	pop    rbx
  417b82:	pop    rsi
  417b83:	pop    rdi
  417b84:	pop    rbp
  417b85:	ret    
  417b86:	call   QWORD PTR [rip+0x6ed54]        # 0x4868e0
  417b8c:	mov    DWORD PTR [rax],0x16
  417b92:	mov    eax,0xffffffff
  417b97:	jmp    0x417b7d
  417b99:	nop    DWORD PTR [rax+0x0]
  417ba0:	push   rbp
  417ba1:	push   rdi
  417ba2:	push   rsi
  417ba3:	push   rbx
  417ba4:	sub    rsp,0x38
  417ba8:	xor    r9d,r9d
  417bab:	xor    r8d,r8d
  417bae:	mov    rdi,rdx
  417bb1:	mov    QWORD PTR [rsp+0x20],0x0
  417bba:	mov    edx,0xffffffff
  417bbf:	mov    rsi,rcx
  417bc2:	call   0x4229b0
  417bc7:	test   rax,rax
  417bca:	mov    rbp,rax
  417bcd:	je     0x417c72
  417bd3:	mov    rcx,rax
  417bd6:	call   0x438720
  417bdb:	test   eax,eax
  417bdd:	mov    ebx,eax
  417bdf:	jle    0x417c31
  417be1:	movsxd r8,eax
  417be4:	add    r8,r8
  417be7:	movzx  eax,WORD PTR [rbp+r8*1-0x2]
  417bed:	cmp    ax,0x2f
  417bf1:	je     0x417bf9
  417bf3:	cmp    ax,0x5c
  417bf7:	jne    0x417c1b
  417bf9:	lea    r8,[rbp+r8*1-0x4]
  417bfe:	xchg   ax,ax
  417c00:	sub    ebx,0x1
  417c03:	je     0x417c31
  417c05:	movzx  r9d,WORD PTR [r8]
  417c09:	sub    r8,0x2
  417c0d:	cmp    r9w,0x2f
  417c12:	je     0x417c00
  417c14:	cmp    r9w,0x5c
  417c19:	je     0x417c00
  417c1b:	mov    rcx,rsi
  417c1e:	movsxd rbx,ebx
  417c21:	call   0x407870
  417c26:	test   eax,eax
  417c28:	jne    0x417c60
  417c2a:	xor    eax,eax
  417c2c:	mov    WORD PTR [rbp+rbx*2+0x0],ax
  417c31:	mov    rdx,rdi
  417c34:	mov    rcx,rbp
  417c37:	call   0x434780
  417c3c:	mov    rsi,QWORD PTR [rip+0x6ec9d]        # 0x4868e0
  417c43:	mov    ebx,eax
  417c45:	call   rsi
  417c47:	mov    edi,DWORD PTR [rax]
  417c49:	mov    rcx,rbp
  417c4c:	call   0x40e6e0
  417c51:	call   rsi
  417c53:	mov    DWORD PTR [rax],edi
  417c55:	mov    eax,ebx
  417c57:	add    rsp,0x38
  417c5b:	pop    rbx
  417c5c:	pop    rsi
  417c5d:	pop    rdi
  417c5e:	pop    rbp
  417c5f:	ret    
  417c60:	mov    rcx,rsi
  417c63:	call   0x407900
  417c68:	sub    rax,rsi
  417c6b:	cmp    rbx,rax
  417c6e:	jle    0x417c31
  417c70:	jmp    0x417c2a
  417c72:	call   QWORD PTR [rip+0x6ec68]        # 0x4868e0
  417c78:	mov    DWORD PTR [rax],0x16
  417c7e:	mov    eax,0xffffffff
  417c83:	jmp    0x417c57
  417c85:	nop
  417c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c90:	jmp    0x417ba0
  417c95:	nop
  417c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ca0:	push   rbp
  417ca1:	push   rdi
  417ca2:	push   rsi
  417ca3:	push   rbx
  417ca4:	sub    rsp,0x38
  417ca8:	xor    r9d,r9d
  417cab:	xor    r8d,r8d
  417cae:	mov    edx,0xffffffff
  417cb3:	mov    QWORD PTR [rsp+0x20],0x0
  417cbc:	call   0x4229b0
  417cc1:	test   rax,rax
  417cc4:	mov    rbx,rax
  417cc7:	je     0x417cf6
  417cc9:	mov    rcx,rax
  417ccc:	call   QWORD PTR [rip+0x6ecce]        # 0x4869a0
  417cd2:	mov    rdi,QWORD PTR [rip+0x6ec07]        # 0x4868e0
  417cd9:	mov    esi,eax
  417cdb:	call   rdi
  417cdd:	mov    ebp,DWORD PTR [rax]
  417cdf:	mov    rcx,rbx
  417ce2:	call   0x40e6e0
  417ce7:	call   rdi
  417ce9:	mov    DWORD PTR [rax],ebp
  417ceb:	mov    eax,esi
  417ced:	add    rsp,0x38
  417cf1:	pop    rbx
  417cf2:	pop    rsi
  417cf3:	pop    rdi
  417cf4:	pop    rbp
  417cf5:	ret    
  417cf6:	call   QWORD PTR [rip+0x6ebe4]        # 0x4868e0
  417cfc:	mov    DWORD PTR [rax],0x16
  417d02:	mov    eax,0xffffffff
  417d07:	jmp    0x417ced
  417d09:	nop    DWORD PTR [rax+0x0]
  417d10:	push   rbp
  417d11:	push   rdi
  417d12:	push   rsi
  417d13:	push   rbx
  417d14:	sub    rsp,0x38
  417d18:	xor    r9d,r9d
  417d1b:	xor    r8d,r8d
  417d1e:	mov    edx,0xffffffff
  417d23:	mov    QWORD PTR [rsp+0x20],0x0
  417d2c:	call   0x4229b0
  417d31:	test   rax,rax
  417d34:	mov    rsi,rax
  417d37:	je     0x417d7d
  417d39:	mov    rcx,rax
  417d3c:	call   QWORD PTR [rip+0x6ec4e]        # 0x486990
  417d42:	cmp    eax,0xffffffff
  417d45:	mov    ebx,eax
  417d47:	je     0x417d70
  417d49:	mov    rdi,QWORD PTR [rip+0x6eb90]        # 0x4868e0
  417d50:	call   rdi
  417d52:	mov    ebp,DWORD PTR [rax]
  417d54:	mov    rcx,rsi
  417d57:	call   0x40e6e0
  417d5c:	call   rdi
  417d5e:	mov    DWORD PTR [rax],ebp
  417d60:	mov    eax,ebx
  417d62:	add    rsp,0x38
  417d66:	pop    rbx
  417d67:	pop    rsi
  417d68:	pop    rdi
  417d69:	pop    rbp
  417d6a:	ret    
  417d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  417d70:	mov    rcx,rsi
  417d73:	call   QWORD PTR [rip+0x6ec1f]        # 0x486998
  417d79:	mov    ebx,eax
  417d7b:	jmp    0x417d49
  417d7d:	call   QWORD PTR [rip+0x6eb5d]        # 0x4868e0
  417d83:	mov    DWORD PTR [rax],0x16
  417d89:	mov    eax,0xffffffff
  417d8e:	jmp    0x417d62
  417d90:	push   rbp
  417d91:	push   rdi
  417d92:	push   rsi
  417d93:	push   rbx
  417d94:	sub    rsp,0x38
  417d98:	xor    r9d,r9d
  417d9b:	xor    r8d,r8d
  417d9e:	mov    edx,0xffffffff
  417da3:	mov    QWORD PTR [rsp+0x20],0x0
  417dac:	call   0x4229b0
  417db1:	test   rax,rax
  417db4:	mov    rbx,rax
  417db7:	je     0x417de6
  417db9:	mov    rcx,rax
  417dbc:	call   QWORD PTR [rip+0x6ebd6]        # 0x486998
  417dc2:	mov    rdi,QWORD PTR [rip+0x6eb17]        # 0x4868e0
  417dc9:	mov    esi,eax
  417dcb:	call   rdi
  417dcd:	mov    ebp,DWORD PTR [rax]
  417dcf:	mov    rcx,rbx
  417dd2:	call   0x40e6e0
  417dd7:	call   rdi
  417dd9:	mov    DWORD PTR [rax],ebp
  417ddb:	mov    eax,esi
  417ddd:	add    rsp,0x38
  417de1:	pop    rbx
  417de2:	pop    rsi
  417de3:	pop    rdi
  417de4:	pop    rbp
  417de5:	ret    
  417de6:	call   QWORD PTR [rip+0x6eaf4]        # 0x4868e0
  417dec:	mov    DWORD PTR [rax],0x16
  417df2:	mov    eax,0xffffffff
  417df7:	jmp    0x417ddd
  417df9:	nop    DWORD PTR [rax+0x0]
  417e00:	push   r12
  417e02:	push   rbp
  417e03:	push   rdi
  417e04:	push   rsi
  417e05:	push   rbx
  417e06:	sub    rsp,0x30
  417e0a:	xor    r9d,r9d
  417e0d:	xor    r8d,r8d
  417e10:	mov    rsi,rdx
  417e13:	mov    QWORD PTR [rsp+0x20],0x0
  417e1c:	mov    edx,0xffffffff
  417e21:	call   0x4229b0
  417e26:	test   rax,rax
  417e29:	mov    rbx,rax
  417e2c:	je     0x417e98
  417e2e:	xor    r9d,r9d
  417e31:	xor    r8d,r8d
  417e34:	mov    QWORD PTR [rsp+0x20],0x0
  417e3d:	mov    edx,0xffffffff
  417e42:	mov    rcx,rsi
  417e45:	call   0x4229b0
  417e4a:	test   rax,rax
  417e4d:	mov    rdi,rax
  417e50:	je     0x417e90
  417e52:	mov    rdx,rax
  417e55:	mov    rcx,rbx
  417e58:	call   QWORD PTR [rip+0x6eb0a]        # 0x486968
  417e5e:	mov    rbp,QWORD PTR [rip+0x6ea7b]        # 0x4868e0
  417e65:	mov    rsi,rax
  417e68:	call   rbp
  417e6a:	mov    r12d,DWORD PTR [rax]
  417e6d:	mov    rcx,rbx
  417e70:	call   0x40e6e0
  417e75:	mov    rcx,rdi
  417e78:	call   0x40e6e0
  417e7d:	call   rbp
  417e7f:	mov    DWORD PTR [rax],r12d
  417e82:	mov    rax,rsi
  417e85:	add    rsp,0x30
  417e89:	pop    rbx
  417e8a:	pop    rsi
  417e8b:	pop    rdi
  417e8c:	pop    rbp
  417e8d:	pop    r12
  417e8f:	ret    
  417e90:	mov    rcx,rbx
  417e93:	call   0x40e6e0
  417e98:	call   QWORD PTR [rip+0x6ea42]        # 0x4868e0
  417e9e:	mov    DWORD PTR [rax],0x16
  417ea4:	xor    eax,eax
  417ea6:	jmp    0x417e85
  417ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb0:	push   r12
  417eb2:	push   rbp
  417eb3:	push   rdi
  417eb4:	push   rsi
  417eb5:	push   rbx
  417eb6:	sub    rsp,0x30
  417eba:	xor    r9d,r9d
  417ebd:	mov    rsi,rdx
  417ec0:	mov    rbp,r8
  417ec3:	mov    QWORD PTR [rsp+0x20],0x0
  417ecc:	xor    r8d,r8d
  417ecf:	mov    edx,0xffffffff
  417ed4:	call   0x4229b0
  417ed9:	test   rax,rax
  417edc:	mov    rbx,rax
  417edf:	je     0x417f58
  417ee1:	xor    r9d,r9d
  417ee4:	xor    r8d,r8d
  417ee7:	mov    QWORD PTR [rsp+0x20],0x0
  417ef0:	mov    edx,0xffffffff
  417ef5:	mov    rcx,rsi
  417ef8:	call   0x4229b0
  417efd:	test   rax,rax
  417f00:	mov    rdi,rax
  417f03:	je     0x417f50
  417f05:	mov    r8,rbp
  417f08:	mov    rdx,rax
  417f0b:	mov    rcx,rbx
  417f0e:	call   QWORD PTR [rip+0x6ea5c]        # 0x486970
  417f14:	mov    rbp,QWORD PTR [rip+0x6e9c5]        # 0x4868e0
  417f1b:	mov    rsi,rax
  417f1e:	call   rbp
  417f20:	mov    r12d,DWORD PTR [rax]
  417f23:	mov    rcx,rbx
  417f26:	call   0x40e6e0
  417f2b:	mov    rcx,rdi
  417f2e:	call   0x40e6e0
  417f33:	call   rbp
  417f35:	mov    DWORD PTR [rax],r12d
  417f38:	mov    rax,rsi
  417f3b:	add    rsp,0x30
  417f3f:	pop    rbx
  417f40:	pop    rsi
  417f41:	pop    rdi
  417f42:	pop    rbp
  417f43:	pop    r12
  417f45:	ret    
  417f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f50:	mov    rcx,rbx
  417f53:	call   0x40e6e0
  417f58:	call   QWORD PTR [rip+0x6e982]        # 0x4868e0
  417f5e:	mov    DWORD PTR [rax],0x16
  417f64:	xor    eax,eax
  417f66:	jmp    0x417f3b
  417f68:	nop    DWORD PTR [rax+rax*1+0x0]
  417f70:	push   rbp
  417f71:	push   rdi
  417f72:	push   rsi
  417f73:	push   rbx
  417f74:	sub    rsp,0x38
  417f78:	xor    r9d,r9d
  417f7b:	xor    r8d,r8d
  417f7e:	mov    rsi,rdx
  417f81:	mov    QWORD PTR [rsp+0x20],0x0
  417f8a:	mov    edx,0xffffffff
  417f8f:	call   0x4229b0
  417f94:	test   rax,rax
  417f97:	mov    rbx,rax
  417f9a:	je     0x417fcc
  417f9c:	mov    rdx,rsi
  417f9f:	mov    rcx,rax
  417fa2:	call   QWORD PTR [rip+0x6ea00]        # 0x4869a8
  417fa8:	mov    rsi,QWORD PTR [rip+0x6e931]        # 0x4868e0
  417faf:	mov    edi,eax
  417fb1:	call   rsi
  417fb3:	mov    ebp,DWORD PTR [rax]
  417fb5:	mov    rcx,rbx
  417fb8:	call   0x40e6e0
  417fbd:	call   rsi
  417fbf:	mov    DWORD PTR [rax],ebp
  417fc1:	mov    eax,edi
  417fc3:	add    rsp,0x38
  417fc7:	pop    rbx
  417fc8:	pop    rsi
  417fc9:	pop    rdi
  417fca:	pop    rbp
  417fcb:	ret    
  417fcc:	call   QWORD PTR [rip+0x6e90e]        # 0x4868e0
  417fd2:	mov    edi,0xffffffff
  417fd7:	mov    DWORD PTR [rax],0x16
  417fdd:	jmp    0x417fc1
  417fdf:	nop
  417fe0:	push   r14
  417fe2:	push   r13
  417fe4:	push   r12
  417fe6:	push   rbp
  417fe7:	push   rdi
  417fe8:	push   rsi
  417fe9:	push   rbx
  417fea:	sub    rsp,0x30
  417fee:	test   rcx,rcx
  417ff1:	mov    rsi,rdx
  417ff4:	je     0x418175
  417ffa:	cmp    r8d,0x24
  417ffe:	mov    DWORD PTR [r9],0x0
  418005:	ja     0x4181b7
  41800b:	cmp    r8d,0x1
  41800f:	je     0x4181b7
  418015:	movzx  eax,BYTE PTR [rcx]
  418018:	mov    r10,rcx
  41801b:	lea    edx,[rax-0x9]
  41801e:	cmp    dl,0x4
  418021:	ja     0x418035
  418023:	add    r10,0x1
  418027:	movzx  eax,BYTE PTR [r10]
  41802b:	lea    r11d,[rax-0x9]
  41802f:	cmp    r11b,0x4
  418033:	jbe    0x418023
  418035:	cmp    al,0x20
  418037:	je     0x418023
  418039:	test   al,al
  41803b:	je     0x418138
  418041:	cmp    al,0x2d
  418043:	je     0x41822b
  418049:	cmp    al,0x2b
  41804b:	sete   al
  41804e:	movzx  eax,al
  418051:	add    r10,rax
  418054:	movzx  r9d,BYTE PTR [r10]
  418058:	cmp    r9b,0x30
  41805c:	je     0x418205
  418062:	test   r8d,r8d
  418065:	je     0x4181e6
  41806b:	mov    ebp,r8d
  41806e:	mov    rax,0xffffffffffffffff
  418075:	xor    edx,edx
  418077:	div    rbp
  41807a:	mov    rdi,rax
  41807d:	test   r9b,r9b
  418080:	mov    r11d,r9d
  418083:	je     0x4182a6
  418089:	mov    rbx,r10
  41808c:	xor    r12d,r12d
  41808f:	xor    eax,eax
  418091:	jmp    0x4180b4
  418093:	cmp    rdi,rax
  418096:	movzx  r9d,r9b
  41809a:	je     0x4181a0
  4180a0:	add    rbx,0x1
  4180a4:	movzx  r11d,BYTE PTR [rbx]
  4180a8:	imul   rax,rbp
  4180ac:	add    rax,r9
  4180af:	test   r11b,r11b
  4180b2:	je     0x418104
  4180b4:	lea    r9d,[r11-0x30]
  4180b8:	cmp    r9b,0x9
  4180bc:	jbe    0x4180e3
  4180be:	mov    r9d,r11d
  4180c1:	lea    r13d,[r11-0x61]
  4180c5:	and    r9d,0xffffffdf
  4180c9:	sub    r9d,0x41
  4180cd:	cmp    r9b,0x19
  4180d1:	ja     0x418104
  4180d3:	lea    r14d,[r11-0x57]
  4180d7:	lea    r9d,[r11-0x37]
  4180db:	cmp    r13b,0x19
  4180df:	cmovbe r9d,r14d
  4180e3:	movzx  r11d,r9b
  4180e7:	cmp    r11d,r8d
  4180ea:	jae    0x418104
  4180ec:	cmp    rax,rdi
  4180ef:	jbe    0x418093
  4180f1:	mov    r12d,0x1
  4180f7:	add    rbx,0x1
  4180fb:	movzx  r11d,BYTE PTR [rbx]
  4180ff:	test   r11b,r11b
  418102:	jne    0x4180b4
  418104:	cmp    r10,rbx
  418107:	je     0x41813b
  418109:	test   rsi,rsi
  41810c:	je     0x418111
  41810e:	mov    QWORD PTR [rsi],rbx
  418111:	test   r12d,r12d
  418114:	je     0x418191
  418116:	call   QWORD PTR [rip+0x6e7c4]        # 0x4868e0
  41811c:	mov    DWORD PTR [rax],0x22
  418122:	mov    rax,0xffffffffffffffff
  418129:	add    rsp,0x30
  41812d:	pop    rbx
  41812e:	pop    rsi
  41812f:	pop    rdi
  418130:	pop    rbp
  418131:	pop    r12
  418133:	pop    r13
  418135:	pop    r14
  418137:	ret    
  418138:	mov    rbx,rcx
  41813b:	test   rsi,rsi
  41813e:	je     0x41818f
  418140:	mov    rax,rbx
  418143:	sub    rax,rcx
  418146:	cmp    rax,0x1
  41814a:	jle    0x4181d2
  418150:	movzx  eax,BYTE PTR [rbx-0x1]
  418154:	lea    edx,[rax-0x61]
  418157:	cmp    dl,0x19
  41815a:	ja     0x41826d
  418160:	cmp    al,0x78
  418162:	jne    0x4181d2
  418164:	cmp    BYTE PTR [rbx-0x2],0x30
  418168:	jne    0x4181d2
  41816a:	sub    rbx,0x1
  41816e:	xor    eax,eax
  418170:	mov    QWORD PTR [rsi],rbx
  418173:	jmp    0x418191
  418175:	lea    r8,[rip+0x28ec4]        # 0x441040
  41817c:	lea    rdx,[rip+0x292cd]        # 0x441450
  418183:	lea    rcx,[rip+0x28ec3]        # 0x44104d
  41818a:	call   0x40fd20
  41818f:	xor    eax,eax
  418191:	add    rsp,0x30
  418195:	pop    rbx
  418196:	pop    rsi
  418197:	pop    rdi
  418198:	pop    rbp
  418199:	pop    r12
  41819b:	pop    r13
  41819d:	pop    r14
  41819f:	ret    
  4181a0:	cmp    r9,rdx
  4181a3:	jbe    0x4180a0
  4181a9:	mov    rax,rdi
  4181ac:	mov    r12d,0x1
  4181b2:	jmp    0x4180f7
  4181b7:	mov    QWORD PTR [rsp+0x28],rcx
  4181bc:	call   QWORD PTR [rip+0x6e71e]        # 0x4868e0
  4181c2:	test   rsi,rsi
  4181c5:	mov    DWORD PTR [rax],0x16
  4181cb:	mov    rcx,QWORD PTR [rsp+0x28]
  4181d0:	je     0x41818f
  4181d2:	xor    eax,eax
  4181d4:	mov    QWORD PTR [rsi],rcx
  4181d7:	add    rsp,0x30
  4181db:	pop    rbx
  4181dc:	pop    rsi
  4181dd:	pop    rdi
  4181de:	pop    rbp
  4181df:	pop    r12
  4181e1:	pop    r13
  4181e3:	pop    r14
  4181e5:	ret    
  4181e6:	mov    edx,0x5
  4181eb:	movabs rdi,0x1999999999999999
  4181f5:	mov    ebp,0xa
  4181fa:	mov    r8d,0xa
  418200:	jmp    0x41807d
  418205:	test   r8d,0xffffffef
  41820c:	je     0x41823b
  41820e:	mov    ebp,r8d
  418211:	mov    rax,0xffffffffffffffff
  418218:	xor    edx,edx
  41821a:	div    rbp
  41821d:	mov    rdi,rax
  418220:	mov    r11d,0x30
  418226:	jmp    0x418089
  41822b:	mov    DWORD PTR [r9],0x1
  418232:	add    r10,0x1
  418236:	jmp    0x418054
  41823b:	movzx  eax,BYTE PTR [r10+0x1]
  418240:	lea    edx,[rax-0x61]
  418243:	cmp    dl,0x19
  418246:	jbe    0x41827a
  418248:	cmp    al,0x58
  41824a:	je     0x41827e
  41824c:	test   r8d,r8d
  41824f:	jne    0x41820e
  418251:	mov    ebp,0x8
  418256:	mov    edx,0x7
  41825b:	movabs rdi,0x1fffffffffffffff
  418265:	mov    r8d,0x8
  41826b:	jmp    0x418220
  41826d:	cmp    al,0x58
  41826f:	jne    0x4181d2
  418275:	jmp    0x418164
  41827a:	cmp    al,0x78
  41827c:	jne    0x41824c
  41827e:	movzx  r9d,BYTE PTR [r10+0x2]
  418283:	mov    edx,0xf
  418288:	add    r10,0x2
  41828c:	movabs rdi,0xfffffffffffffff
  418296:	mov    ebp,0x10
  41829b:	mov    r8d,0x10
  4182a1:	jmp    0x41807d
  4182a6:	mov    rbx,r10
  4182a9:	jmp    0x41813b
  4182ae:	xchg   ax,ax
  4182b0:	push   rsi
  4182b1:	push   rbx
  4182b2:	sub    rsp,0x28
  4182b6:	test   rcx,rcx
  4182b9:	je     0x4182f0
  4182bb:	mov    rbx,rcx
  4182be:	call   0x438788
  4182c3:	lea    rsi,[rax+0x1]
  4182c7:	mov    rcx,rsi
  4182ca:	call   0x40e5c0
  4182cf:	mov    r8,rsi
  4182d2:	mov    rdx,rbx
  4182d5:	mov    rcx,rax
  4182d8:	call   0x4387f0
  4182dd:	mov    r9,rax
  4182e0:	mov    rax,r9
  4182e3:	add    rsp,0x28
  4182e7:	pop    rbx
  4182e8:	pop    rsi
  4182e9:	ret    
  4182ea:	nop    WORD PTR [rax+rax*1+0x0]
  4182f0:	xor    r9d,r9d
  4182f3:	jmp    0x4182e0
  4182f5:	nop
  4182f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418300:	push   rsi
  418301:	push   rbx
  418302:	sub    rsp,0x28
  418306:	test   rcx,rcx
  418309:	je     0x418333
  41830b:	mov    ebx,edx
  41830d:	mov    rsi,rcx
  418310:	mov    rcx,rbx
  418313:	call   0x40e5c0
  418318:	mov    r8,rbx
  41831b:	mov    rdx,rsi
  41831e:	mov    rcx,rax
  418321:	call   0x4387f0
  418326:	mov    r9,rax
  418329:	mov    rax,r9
  41832c:	add    rsp,0x28
  418330:	pop    rbx
  418331:	pop    rsi
  418332:	ret    
  418333:	xor    r9d,r9d
  418336:	jmp    0x418329
  418338:	nop    DWORD PTR [rax+rax*1+0x0]
  418340:	push   rdi
  418341:	push   rsi
  418342:	push   rbx
  418343:	sub    rsp,0x20
  418347:	test   rcx,rcx
  41834a:	je     0x418380
  41834c:	mov    rsi,rcx
  41834f:	lea    rcx,[rdx+0x1]
  418353:	mov    rbx,rdx
  418356:	call   0x40e5c0
  41835b:	mov    r8,rbx
  41835e:	mov    rdi,rax
  418361:	mov    rdx,rsi
  418364:	mov    rcx,rax
  418367:	call   0x438778
  41836c:	mov    BYTE PTR [rdi+rbx*1],0x0
  418370:	mov    rax,rdi
  418373:	add    rsp,0x20
  418377:	pop    rbx
  418378:	pop    rsi
  418379:	pop    rdi
  41837a:	ret    
  41837b:	nop    DWORD PTR [rax+rax*1+0x0]
  418380:	xor    edi,edi
  418382:	jmp    0x418370
  418384:	xchg   ax,ax
  418386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418390:	push   rsi
  418391:	push   rbx
  418392:	sub    rsp,0x28
  418396:	mov    rbx,rcx
  418399:	lea    rcx,[rcx+0x1]
  41839d:	mov    esi,edx
  41839f:	call   0x40e5c0
  4183a4:	movzx  edx,sil
  4183a8:	mov    r8,rbx
  4183ab:	mov    rcx,rax
  4183ae:	call   0x4387e0
  4183b3:	mov    BYTE PTR [rax+rbx*1],0x0
  4183b7:	add    rsp,0x28
  4183bb:	pop    rbx
  4183bc:	pop    rsi
  4183bd:	ret    
  4183be:	xchg   ax,ax
  4183c0:	sub    rsp,0x28
  4183c4:	test   rcx,rcx
  4183c7:	je     0x4183f0
  4183c9:	test   rdx,rdx
  4183cc:	jne    0x4183d3
  4183ce:	jmp    0x418411
  4183d0:	mov    rcx,r8
  4183d3:	movzx  eax,BYTE PTR [rdx]
  4183d6:	lea    r8,[rcx+0x1]
  4183da:	add    rdx,0x1
  4183de:	mov    BYTE PTR [r8-0x1],al
  4183e2:	cmp    BYTE PTR [rdx-0x1],0x0
  4183e6:	jne    0x4183d0
  4183e8:	mov    rax,rcx
  4183eb:	add    rsp,0x28
  4183ef:	ret    
  4183f0:	lea    r8,[rip+0x28c5b]        # 0x441052
  4183f7:	lea    rdx,[rip+0x2909a]        # 0x441498
  4183fe:	lea    rcx,[rip+0x28c48]        # 0x44104d
  418405:	call   0x40fd20
  41840a:	xor    eax,eax
  41840c:	add    rsp,0x28
  418410:	ret    
  418411:	lea    r8,[rip+0x28c47]        # 0x44105f
  418418:	lea    rdx,[rip+0x29079]        # 0x441498
  41841f:	lea    rcx,[rip+0x28c27]        # 0x44104d
  418426:	call   0x40fd20
  41842b:	xor    eax,eax
  41842d:	add    rsp,0x28
  418431:	ret    
  418432:	nop    DWORD PTR [rax+0x0]
  418436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418440:	sub    rsp,0x38
  418444:	mov    rax,rcx
  418447:	lea    rcx,[rsp+0x28]
  41844c:	mov    r8,rdx
  41844f:	mov    rdx,rax
  418452:	mov    QWORD PTR [rsp+0x28],0x0
  41845b:	call   0x4263e0
  418460:	mov    rax,QWORD PTR [rsp+0x28]
  418465:	add    rsp,0x38
  418469:	ret    
  41846a:	nop    WORD PTR [rax+rax*1+0x0]
  418470:	sub    rsp,0x38
  418474:	mov    QWORD PTR [rsp+0x48],rdx
  418479:	mov    QWORD PTR [rsp+0x50],r8
  41847e:	mov    rdx,rcx
  418481:	lea    r8,[rsp+0x48]
  418486:	lea    rcx,[rsp+0x28]
  41848b:	mov    QWORD PTR [rsp+0x58],r9
  418490:	mov    QWORD PTR [rsp+0x28],0x0
  418499:	mov    QWORD PTR [rsp+0x20],r8
  41849e:	call   0x4263e0
  4184a3:	mov    rax,QWORD PTR [rsp+0x28]
  4184a8:	add    rsp,0x38
  4184ac:	ret    
  4184ad:	nop    DWORD PTR [rax]
  4184b0:	push   rbp
  4184b1:	push   rdi
  4184b2:	push   rsi
  4184b3:	push   rbx
  4184b4:	sub    rsp,0x38
  4184b8:	test   rcx,rcx
  4184bb:	mov    QWORD PTR [rsp+0x68],rdx
  4184c0:	mov    QWORD PTR [rsp+0x70],r8
  4184c5:	mov    QWORD PTR [rsp+0x78],r9
  4184ca:	je     0x418558
  4184d0:	mov    rbp,rcx
  4184d3:	lea    rbx,[rsp+0x70]
  4184d8:	call   0x438788
  4184dd:	mov    rcx,QWORD PTR [rsp+0x68]
  4184e2:	lea    rdi,[rax+0x1]
  4184e6:	mov    rsi,rbx
  4184e9:	mov    QWORD PTR [rsp+0x28],rbx
  4184ee:	test   rcx,rcx
  4184f1:	je     0x41850d
  4184f3:	add    rsi,0x8
  4184f7:	call   0x438788
  4184fc:	mov    rcx,QWORD PTR [rsi-0x8]
  418500:	add    rdi,rax
  418503:	mov    QWORD PTR [rsp+0x28],rsi
  418508:	test   rcx,rcx
  41850b:	jne    0x4184f3
  41850d:	mov    rcx,rdi
  418510:	call   0x40e5c0
  418515:	mov    rdx,rbp
  418518:	mov    rcx,rax
  41851b:	mov    rsi,rax
  41851e:	call   0x4183c0
  418523:	mov    rdx,QWORD PTR [rsp+0x68]
  418528:	mov    QWORD PTR [rsp+0x28],rbx
  41852d:	test   rdx,rdx
  418530:	je     0x41854c
  418532:	add    rbx,0x8
  418536:	mov    rcx,rax
  418539:	call   0x4183c0
  41853e:	mov    rdx,QWORD PTR [rbx-0x8]
  418542:	mov    QWORD PTR [rsp+0x28],rbx
  418547:	test   rdx,rdx
  41854a:	jne    0x418532
  41854c:	mov    rax,rsi
  41854f:	add    rsp,0x38
  418553:	pop    rbx
  418554:	pop    rsi
  418555:	pop    rdi
  418556:	pop    rbp
  418557:	ret    
  418558:	xor    eax,eax
  41855a:	jmp    0x41854f
  41855c:	nop    DWORD PTR [rax+0x0]
  418560:	push   r15
  418562:	push   r14
  418564:	push   r13
  418566:	push   r12
  418568:	push   rbp
  418569:	push   rdi
  41856a:	push   rsi
  41856b:	push   rbx
  41856c:	sub    rsp,0x58
  418570:	movaps XMMWORD PTR [rsp+0x40],xmm6
  418575:	test   rcx,rcx
  418578:	mov    rbp,rcx
  41857b:	mov    rdi,rdx
  41857e:	je     0x418900
  418584:	mov    QWORD PTR [rsp+0x38],0x0
  41858d:	call   QWORD PTR [rip+0x6e4d5]        # 0x486a68
  418593:	mov    rsi,QWORD PTR [rax]
  418596:	mov    rcx,rsi
  418599:	call   0x438788
  41859e:	test   eax,eax
  4185a0:	je     0x418781
  4185a6:	cmp    BYTE PTR [rsi],0x2e
  4185a9:	je     0x4187d0
  4185af:	movzx  edx,BYTE PTR [rbp+0x0]
  4185b3:	lea    r9,[rip+0x28f06]        # 0x4414c0
  4185ba:	mov    rbx,rbp
  4185bd:	test   BYTE PTR [r9+rdx*2+0x1],0x1
  4185c3:	mov    r10,rdx
  4185c6:	je     0x4185e3
  4185c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4185d0:	add    rbx,0x1
  4185d4:	movzx  r11d,BYTE PTR [rbx]
  4185d8:	test   BYTE PTR [r9+r11*2+0x1],0x1
  4185de:	mov    r10,r11
  4185e1:	jne    0x4185d0
  4185e3:	sub    r10d,0x2b
  4185e7:	and    r10d,0xfffffffd
  4185eb:	cmp    r10b,0x1
  4185ef:	adc    rbx,0x0
  4185f3:	movzx  r10d,BYTE PTR [rbx]
  4185f7:	cmp    r10b,0x30
  4185fb:	je     0x418860
  418601:	movzx  edx,r10b
  418605:	test   BYTE PTR [r9+rdx*2],0x8
  41860a:	jne    0x418665
  41860c:	cmp    r10b,0x2e
  418610:	je     0x4187b0
  418616:	mov    rbx,QWORD PTR [rip+0x6e2c3]        # 0x4868e0
  41861d:	call   rbx
  41861f:	lea    rdx,[rsp+0x38]
  418624:	mov    DWORD PTR [rax],0x0
  41862a:	mov    rcx,rbp
  41862d:	call   0x434100
  418632:	movapd xmm6,xmm0
  418636:	call   rbx
  418638:	mov    esi,DWORD PTR [rax]
  41863a:	test   rdi,rdi
  41863d:	je     0x418647
  41863f:	mov    rax,QWORD PTR [rsp+0x38]
  418644:	mov    QWORD PTR [rdi],rax
  418647:	call   rbx
  418649:	movapd xmm0,xmm6
  41864d:	mov    DWORD PTR [rax],esi
  41864f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  418654:	add    rsp,0x58
  418658:	pop    rbx
  418659:	pop    rsi
  41865a:	pop    rdi
  41865b:	pop    rbp
  41865c:	pop    r12
  41865e:	pop    r13
  418660:	pop    r14
  418662:	pop    r15
  418664:	ret    
  418665:	add    rbx,0x1
  418669:	movzx  ecx,BYTE PTR [rbx]
  41866c:	test   BYTE PTR [r9+rcx*2],0x8
  418671:	jne    0x418665
  418673:	xor    r12d,r12d
  418676:	cmp    cl,0x2e
  418679:	jne    0x418684
  41867b:	jmp    0x418923
  418680:	add    rbx,0x1
  418684:	movzx  edx,BYTE PTR [rbx]
  418687:	test   BYTE PTR [r9+rdx*2],0x8
  41868c:	mov    r10,rdx
  41868f:	jne    0x418680
  418691:	and    r10d,0xffffffdf
  418695:	xor    edx,edx
  418697:	cmp    r10b,0x45
  41869b:	sete   dl
  41869e:	add    rbx,rdx
  4186a1:	movzx  edx,BYTE PTR [rbx]
  4186a4:	lea    ecx,[rdx-0x2b]
  4186a7:	and    ecx,0xfd
  4186ad:	je     0x418850
  4186b3:	test   BYTE PTR [r9+rdx*2],0x8
  4186b8:	je     0x4186ce
  4186ba:	nop    WORD PTR [rax+rax*1+0x0]
  4186c0:	add    rbx,0x1
  4186c4:	movzx  edx,BYTE PTR [rbx]
  4186c7:	test   BYTE PTR [r9+rdx*2],0x8
  4186cc:	jne    0x4186c0
  4186ce:	test   r12,r12
  4186d1:	je     0x4187e0
  4186d7:	mov    rdx,rbx
  4186da:	movsxd r14,eax
  4186dd:	mov    r15,r12
  4186e0:	sub    rdx,rbp
  4186e3:	sub    r15,rbp
  4186e6:	lea    rcx,[rdx+r14*1+0x1]
  4186eb:	call   0x40e5c0
  4186f0:	mov    r8,r15
  4186f3:	mov    r13,rax
  4186f6:	mov    rdx,rbp
  4186f9:	mov    rcx,rax
  4186fc:	call   0x4387f0
  418701:	lea    r9,[r13+r15*1+0x0]
  418706:	mov    rdx,rsi
  418709:	mov    r8,r14
  41870c:	mov    rcx,r9
  41870f:	call   0x4387f0
  418714:	lea    rdx,[r12+0x1]
  418719:	mov    r9,rax
  41871c:	add    r9,r14
  41871f:	sub    rbx,rdx
  418722:	mov    rcx,r9
  418725:	mov    r8,rbx
  418728:	call   0x4387f0
  41872d:	mov    BYTE PTR [rax+rbx*1],0x0
  418731:	mov    rbx,QWORD PTR [rip+0x6e1a8]        # 0x4868e0
  418738:	call   rbx
  41873a:	lea    rdx,[rsp+0x38]
  41873f:	mov    DWORD PTR [rax],0x0
  418745:	mov    rcx,r13
  418748:	call   0x434100
  41874d:	movapd xmm6,xmm0
  418751:	call   rbx
  418753:	mov    esi,DWORD PTR [rax]
  418755:	mov    rax,QWORD PTR [rsp+0x38]
  41875a:	test   rax,rax
  41875d:	je     0x418774
  41875f:	sub    rax,r13
  418762:	cmp    r15,rax
  418765:	jge    0x4187c0
  418767:	sub    rax,r14
  41876a:	lea    rax,[rbp+rax*1+0x1]
  41876f:	mov    QWORD PTR [rsp+0x38],rax
  418774:	mov    rcx,r13
  418777:	call   0x40e6e0
  41877c:	jmp    0x41863a
  418781:	lea    rax,[rip+0x28942]        # 0x4410ca
  418788:	lea    r9,[rip+0x28cf1]        # 0x441480
  41878f:	lea    rdx,[rip+0x288da]        # 0x441070
  418796:	lea    rcx,[rip+0x288b0]        # 0x44104d
  41879d:	mov    r8d,0x2c9
  4187a3:	mov    QWORD PTR [rsp+0x20],rax
  4187a8:	call   0x41e680
  4187ad:	nop    DWORD PTR [rax]
  4187b0:	je     0x418923
  4187b6:	xor    r12d,r12d
  4187b9:	jmp    0x418691
  4187be:	xchg   ax,ax
  4187c0:	add    rax,rbp
  4187c3:	mov    QWORD PTR [rsp+0x38],rax
  4187c8:	jmp    0x418774
  4187ca:	nop    WORD PTR [rax+rax*1+0x0]
  4187d0:	cmp    BYTE PTR [rsi+0x1],0x0
  4187d4:	jne    0x4185af
  4187da:	jmp    0x418616
  4187df:	nop
  4187e0:	sub    rbx,rbp
  4187e3:	lea    rcx,[rbx+0x1]
  4187e7:	call   0x40e5c0
  4187ec:	mov    r8,rbx
  4187ef:	mov    r12,rax
  4187f2:	mov    rdx,rbp
  4187f5:	mov    rcx,rax
  4187f8:	call   0x4387f0
  4187fd:	mov    BYTE PTR [r12+rbx*1],0x0
  418802:	mov    rbx,QWORD PTR [rip+0x6e0d7]        # 0x4868e0
  418809:	call   rbx
  41880b:	lea    rdx,[rsp+0x38]
  418810:	mov    DWORD PTR [rax],0x0
  418816:	mov    rcx,r12
  418819:	call   0x434100
  41881e:	movapd xmm6,xmm0
  418822:	call   rbx
  418824:	mov    rdx,QWORD PTR [rsp+0x38]
  418829:	mov    esi,DWORD PTR [rax]
  41882b:	test   rdx,rdx
  41882e:	je     0x41883b
  418830:	sub    rdx,r12
  418833:	add    rbp,rdx
  418836:	mov    QWORD PTR [rsp+0x38],rbp
  41883b:	mov    rcx,r12
  41883e:	call   0x40e6e0
  418843:	jmp    0x41863a
  418848:	nop    DWORD PTR [rax+rax*1+0x0]
  418850:	movzx  edx,BYTE PTR [rbx+0x1]
  418854:	add    rbx,0x1
  418858:	jmp    0x4186b3
  41885d:	nop    DWORD PTR [rax]
  418860:	movzx  edx,BYTE PTR [rbx+0x1]
  418864:	and    edx,0xffffffdf
  418867:	cmp    dl,0x58
  41886a:	jne    0x418601
  418870:	movzx  r8d,BYTE PTR [rbx+0x2]
  418875:	lea    rdx,[rbx+0x2]
  418879:	test   BYTE PTR [r9+r8*2+0x1],0x4
  41887f:	mov    rcx,r8
  418882:	je     0x418897
  418884:	add    rdx,0x1
  418888:	movzx  r8d,BYTE PTR [rdx]
  41888c:	test   BYTE PTR [r9+r8*2+0x1],0x4
  418892:	mov    rcx,r8
  418895:	jne    0x418884
  418897:	xor    r12d,r12d
  41889a:	cmp    cl,0x2e
  41889d:	jne    0x4188a8
  41889f:	jmp    0x418939
  4188a4:	add    rdx,0x1
  4188a8:	movzx  r8d,BYTE PTR [rdx]
  4188ac:	test   BYTE PTR [r9+r8*2+0x1],0x4
  4188b2:	mov    rcx,r8
  4188b5:	jne    0x4188a4
  4188b7:	and    ecx,0xffffffdf
  4188ba:	cmp    cl,0x50
  4188bd:	sete   cl
  4188c0:	movzx  ecx,cl
  4188c3:	add    rdx,rcx
  4188c6:	movzx  ecx,BYTE PTR [rdx]
  4188c9:	lea    r8d,[rcx-0x2b]
  4188cd:	and    r8d,0xfd
  4188d4:	je     0x41892f
  4188d6:	test   BYTE PTR [r9+rcx*2],0x8
  4188db:	mov    rbx,rdx
  4188de:	je     0x4186ce
  4188e4:	add    rbx,0x1
  4188e8:	movzx  edx,BYTE PTR [rbx]
  4188eb:	test   BYTE PTR [r9+rdx*2],0x8
  4188f0:	jne    0x4188e4
  4188f2:	jmp    0x4186ce
  4188f7:	nop    WORD PTR [rax+rax*1+0x0]
  418900:	lea    r8,[rip+0x28739]        # 0x441040
  418907:	lea    rdx,[rip+0x28b72]        # 0x441480
  41890e:	lea    rcx,[rip+0x28738]        # 0x44104d
  418915:	call   0x40fd20
  41891a:	pxor   xmm0,xmm0
  41891e:	jmp    0x41864f
  418923:	mov    r12,rbx
  418926:	add    rbx,0x1
  41892a:	jmp    0x418684
  41892f:	movzx  ecx,BYTE PTR [rdx+0x1]
  418933:	add    rdx,0x1
  418937:	jmp    0x4188d6
  418939:	mov    r12,rdx
  41893c:	add    rdx,0x1
  418940:	jmp    0x4188a8
  418945:	nop
  418946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418950:	push   rsi
  418951:	push   rbx
  418952:	sub    rsp,0x48
  418956:	movaps XMMWORD PTR [rsp+0x30],xmm6
  41895b:	test   rcx,rcx
  41895e:	mov    rbx,rcx
  418961:	mov    rsi,rdx
  418964:	je     0x4189f0
  41896a:	lea    rdx,[rsp+0x20]
  41896f:	mov    QWORD PTR [rsp+0x20],0x0
  418978:	mov    QWORD PTR [rsp+0x28],0x0
  418981:	call   0x434100
  418986:	mov    rax,QWORD PTR [rsp+0x20]
  41898b:	movapd xmm6,xmm0
  41898f:	test   rax,rax
  418992:	je     0x418999
  418994:	cmp    BYTE PTR [rax],0x0
  418997:	jne    0x4189b5
  418999:	test   rsi,rsi
  41899c:	je     0x418a20
  4189a2:	movapd xmm0,xmm6
  4189a6:	mov    QWORD PTR [rsi],rax
  4189a9:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  4189ae:	add    rsp,0x48
  4189b2:	pop    rbx
  4189b3:	pop    rsi
  4189b4:	ret    
  4189b5:	lea    rdx,[rsp+0x28]
  4189ba:	mov    rcx,rbx
  4189bd:	call   0x418560
  4189c2:	mov    rax,QWORD PTR [rsp+0x20]
  4189c7:	test   rax,rax
  4189ca:	je     0x418999
  4189cc:	cmp    BYTE PTR [rax],0x0
  4189cf:	je     0x418999
  4189d1:	mov    rdx,QWORD PTR [rsp+0x28]
  4189d6:	cmp    rax,rdx
  4189d9:	jae    0x418999
  4189db:	test   rsi,rsi
  4189de:	je     0x4189a9
  4189e0:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  4189e5:	mov    QWORD PTR [rsi],rdx
  4189e8:	add    rsp,0x48
  4189ec:	pop    rbx
  4189ed:	pop    rsi
  4189ee:	ret    
  4189ef:	nop
  4189f0:	lea    r8,[rip+0x28649]        # 0x441040
  4189f7:	lea    rdx,[rip+0x28a91]        # 0x44148f
  4189fe:	lea    rcx,[rip+0x28648]        # 0x44104d
  418a05:	call   0x40fd20
  418a0a:	pxor   xmm0,xmm0
  418a0e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  418a13:	add    rsp,0x48
  418a17:	pop    rbx
  418a18:	pop    rsi
  418a19:	ret    
  418a1a:	nop    WORD PTR [rax+rax*1+0x0]
  418a20:	movapd xmm0,xmm6
  418a24:	jmp    0x4189a9
  418a29:	nop    DWORD PTR [rax+0x0]
  418a30:	push   r12
  418a32:	push   rbp
  418a33:	push   rdi
  418a34:	push   rsi
  418a35:	push   rbx
  418a36:	sub    rsp,0x50
  418a3a:	movaps XMMWORD PTR [rsp+0x40],xmm6
  418a3f:	test   rcx,rcx
  418a42:	mov    rsi,rcx
  418a45:	mov    edi,edx
  418a47:	movapd xmm6,xmm3
  418a4b:	je     0x418ac3
  418a4d:	cmp    BYTE PTR [r8],0x25
  418a51:	je     0x418a83
  418a53:	lea    r8,[rip+0x28696]        # 0x4410f0
  418a5a:	lea    rdx,[rip+0x28a0f]        # 0x441470
  418a61:	lea    rcx,[rip+0x285e5]        # 0x44104d
  418a68:	xor    ebx,ebx
  418a6a:	call   0x40fd20
  418a6f:	nop
  418a70:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  418a75:	mov    rax,rbx
  418a78:	add    rsp,0x50
  418a7c:	pop    rbx
  418a7d:	pop    rsi
  418a7e:	pop    rdi
  418a7f:	pop    rbp
  418a80:	pop    r12
  418a82:	ret    
  418a83:	lea    rcx,[r8+0x1]
  418a87:	lea    rdx,[rip+0x28673]        # 0x441101
  418a8e:	mov    QWORD PTR [rsp+0x38],r8
  418a93:	call   0x438770
  418a98:	test   rax,rax
  418a9b:	mov    rbx,rax
  418a9e:	mov    r8,QWORD PTR [rsp+0x38]
  418aa3:	je     0x418ae1
  418aa5:	lea    r8,[rip+0x2865c]        # 0x441108
  418aac:	lea    rdx,[rip+0x289bd]        # 0x441470
  418ab3:	lea    rcx,[rip+0x28593]        # 0x44104d
  418aba:	xor    ebx,ebx
  418abc:	call   0x40fd20
  418ac1:	jmp    0x418a70
  418ac3:	lea    r8,[rip+0x28617]        # 0x4410e1
  418aca:	lea    rdx,[rip+0x2899f]        # 0x441470
  418ad1:	lea    rcx,[rip+0x28575]        # 0x44104d
  418ad8:	xor    ebx,ebx
  418ada:	call   0x40fd20
  418adf:	jmp    0x418a70
  418ae1:	mov    rcx,r8
  418ae4:	call   0x438788
  418ae9:	mov    r8,QWORD PTR [rsp+0x38]
  418aee:	movzx  eax,BYTE PTR [r8+rax*1-0x1]
  418af4:	and    eax,0xffffffdf
  418af7:	sub    eax,0x45
  418afa:	cmp    al,0x2
  418afc:	jbe    0x418b20
  418afe:	lea    r8,[rip+0x2862b]        # 0x441130
  418b05:	lea    rdx,[rip+0x28964]        # 0x441470
  418b0c:	lea    rcx,[rip+0x2853a]        # 0x44104d
  418b13:	call   0x40fd20
  418b18:	jmp    0x418a70
  418b1d:	nop    DWORD PTR [rax]
  418b20:	movapd xmm3,xmm6
  418b24:	movq   r9,xmm6
  418b29:	movsxd rdx,edi
  418b2c:	mov    rcx,rsi
  418b2f:	call   0x427dc0
  418b34:	call   QWORD PTR [rip+0x6df2e]        # 0x486a68
  418b3a:	mov    rdi,QWORD PTR [rax]
  418b3d:	mov    rcx,rdi
  418b40:	call   0x438788
  418b45:	test   eax,eax
  418b47:	mov    rbp,rax
  418b4a:	je     0x418c00
  418b50:	cmp    BYTE PTR [rdi],0x2e
  418b53:	je     0x418c30
  418b59:	movzx  eax,BYTE PTR [rsi]
  418b5c:	lea    r10,[rip+0x2895d]        # 0x4414c0
  418b63:	mov    rbx,rsi
  418b66:	test   BYTE PTR [r10+rax*2+0x1],0x1
  418b6c:	mov    r8,rax
  418b6f:	je     0x418b84
  418b71:	add    rbx,0x1
  418b75:	movzx  r9d,BYTE PTR [rbx]
  418b79:	test   BYTE PTR [r10+r9*2+0x1],0x1
  418b7f:	mov    r8,r9
  418b82:	jne    0x418b71
  418b84:	sub    r8d,0x2b
  418b88:	and    r8d,0xfffffffd
  418b8c:	cmp    r8b,0x1
  418b90:	adc    rbx,0x0
  418b94:	movzx  eax,BYTE PTR [rbx]
  418b97:	sub    eax,0x30
  418b9a:	cmp    eax,0x9
  418b9d:	ja     0x418bb2
  418b9f:	nop
  418ba0:	add    rbx,0x1
  418ba4:	movzx  r8d,BYTE PTR [rbx]
  418ba8:	sub    r8d,0x30
  418bac:	cmp    r8d,0x9
  418bb0:	jbe    0x418ba0
  418bb2:	movsxd r12,ebp
  418bb5:	mov    rdx,rdi
  418bb8:	mov    rcx,rbx
  418bbb:	mov    r8,r12
  418bbe:	call   0x438780
  418bc3:	test   eax,eax
  418bc5:	jne    0x418bf6
  418bc7:	cmp    ebp,0x1
  418bca:	mov    BYTE PTR [rbx],0x2e
  418bcd:	jle    0x418bf6
  418bcf:	lea    rbp,[rbx+0x1]
  418bd3:	lea    r12,[rbp+r12*1-0x1]
  418bd8:	mov    rcx,r12
  418bdb:	call   0x438788
  418be0:	movsxd rdi,eax
  418be3:	mov    rdx,r12
  418be6:	mov    rcx,rbp
  418be9:	mov    r8,rdi
  418bec:	call   0x4387e8
  418bf1:	mov    BYTE PTR [rbx+rdi*1+0x1],0x0
  418bf6:	mov    rbx,rsi
  418bf9:	jmp    0x418a70
  418bfe:	xchg   ax,ax
  418c00:	lea    rax,[rip+0x284c3]        # 0x4410ca
  418c07:	lea    r9,[rip+0x28862]        # 0x441470
  418c0e:	lea    rdx,[rip+0x2845b]        # 0x441070
  418c15:	lea    rcx,[rip+0x28431]        # 0x44104d
  418c1c:	mov    r8d,0x3a9
  418c22:	mov    QWORD PTR [rsp+0x20],rax
  418c27:	call   0x41e680
  418c2c:	nop    DWORD PTR [rax+0x0]
  418c30:	cmp    BYTE PTR [rdi+0x1],0x0
  418c34:	jne    0x418b59
  418c3a:	jmp    0x418bf6
  418c3c:	nop    DWORD PTR [rax+0x0]
  418c40:	lea    r8,[rip+0x2856a]        # 0x4411b1
  418c47:	movapd xmm3,xmm2
  418c4b:	jmp    0x418a30
  418c50:	sub    rsp,0x38
  418c54:	lea    r9,[rsp+0x2c]
  418c59:	call   0x417fe0
  418c5e:	mov    ecx,DWORD PTR [rsp+0x2c]
  418c62:	xor    edx,edx
  418c64:	test   ecx,ecx
  418c66:	setne  dl
  418c69:	mov    rcx,rdx
  418c6c:	neg    rcx
  418c6f:	xor    rax,rcx
  418c72:	add    rax,rdx
  418c75:	add    rsp,0x38
  418c79:	ret    
  418c7a:	nop    WORD PTR [rax+rax*1+0x0]
  418c80:	push   rbx
  418c81:	sub    rsp,0x30
  418c85:	lea    r9,[rsp+0x2c]
  418c8a:	call   0x417fe0
  418c8f:	mov    edx,DWORD PTR [rsp+0x2c]
  418c93:	test   edx,edx
  418c95:	je     0x418cb0
  418c97:	movabs rbx,0x8000000000000000
  418ca1:	cmp    rax,rbx
  418ca4:	ja     0x418cd1
  418ca6:	neg    rax
  418ca9:	add    rsp,0x30
  418cad:	pop    rbx
  418cae:	ret    
  418caf:	nop
  418cb0:	test   rax,rax
  418cb3:	jns    0x418ca9
  418cb5:	call   QWORD PTR [rip+0x6dc25]        # 0x4868e0
  418cbb:	mov    DWORD PTR [rax],0x22
  418cc1:	movabs rax,0x7fffffffffffffff
  418ccb:	add    rsp,0x30
  418ccf:	pop    rbx
  418cd0:	ret    
  418cd1:	call   QWORD PTR [rip+0x6dc09]        # 0x4868e0
  418cd7:	mov    DWORD PTR [rax],0x22
  418cdd:	mov    rax,rbx
  418ce0:	jmp    0x418ca9
  418ce2:	nop    DWORD PTR [rax+0x0]
  418ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418cf0:	push   r12
  418cf2:	push   rbp
  418cf3:	push   rdi
  418cf4:	push   rsi
  418cf5:	push   rbx
  418cf6:	sub    rsp,0x70
  418cfa:	mov    rsi,QWORD PTR [rip+0x6dbdf]        # 0x4868e0
  418d01:	xor    edi,edi
  418d03:	mov    ebp,ecx
  418d05:	call   rsi
  418d07:	mov    ecx,ebp
  418d09:	mov    r12d,DWORD PTR [rax]
  418d0c:	call   0x438790
  418d11:	xor    ecx,ecx
  418d13:	mov    rbx,rax
  418d16:	call   0x42aba0
  418d1b:	test   eax,eax
  418d1d:	je     0x418d50
  418d1f:	test   rbx,rbx
  418d22:	je     0x418d79
  418d24:	mov    rcx,rbx
  418d27:	call   0x42fea0
  418d2c:	mov    rcx,rdi
  418d2f:	mov    rbx,rax
  418d32:	call   0x40e6e0
  418d37:	call   rsi
  418d39:	mov    DWORD PTR [rax],r12d
  418d3c:	mov    rax,rbx
  418d3f:	add    rsp,0x70
  418d43:	pop    rbx
  418d44:	pop    rsi
  418d45:	pop    rdi
  418d46:	pop    rbp
  418d47:	pop    r12
  418d49:	ret    
  418d4a:	nop    WORD PTR [rax+rax*1+0x0]
  418d50:	xor    r9d,r9d
  418d53:	xor    r8d,r8d
  418d56:	mov    rcx,rbx
  418d59:	mov    QWORD PTR [rsp+0x20],0x0
  418d62:	mov    rdx,0xffffffffffffffff
  418d69:	call   0x42e090
  418d6e:	mov    rbx,rax
  418d71:	mov    rdi,rax
  418d74:	test   rbx,rbx
  418d77:	jne    0x418d24
  418d79:	lea    rbx,[rsp+0x30]
  418d7e:	lea    rdx,[rip+0x28432]        # 0x4411b7
  418d85:	mov    r8d,ebp
  418d88:	mov    rcx,rbx
  418d8b:	call   0x427d20
  418d90:	jmp    0x418d24
  418d92:	nop    DWORD PTR [rax+0x0]
  418d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418da0:	push   rsi
  418da1:	push   rbx
  418da2:	sub    rsp,0x28
  418da6:	mov    edx,ecx
  418da8:	lea    rcx,[rip+0x2841b]        # 0x4411ca
  418daf:	call   0x418470
  418db4:	mov    rbx,rax
  418db7:	mov    rcx,rax
  418dba:	call   0x42fea0
  418dbf:	mov    rcx,rbx
  418dc2:	mov    rsi,rax
  418dc5:	call   0x40e6e0
  418dca:	mov    rax,rsi
  418dcd:	add    rsp,0x28
  418dd1:	pop    rbx
  418dd2:	pop    rsi
  418dd3:	ret    
  418dd4:	xchg   ax,ax
  418dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418de0:	sub    rsp,0x28
  418de4:	test   rcx,rcx
  418de7:	je     0x418e50
  418de9:	test   rdx,rdx
  418dec:	je     0x418e71
  418df2:	test   r8,r8
  418df5:	mov    rax,rdx
  418df8:	jne    0x418e36
  418dfa:	nop    WORD PTR [rax+rax*1+0x0]
  418e00:	add    rax,0x1
  418e04:	cmp    BYTE PTR [rax-0x1],0x0
  418e08:	jne    0x418e00
  418e0a:	sub    rax,rdx
  418e0d:	sub    rax,0x1
  418e11:	add    rsp,0x28
  418e15:	ret    
  418e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e20:	add    rax,0x1
  418e24:	movzx  r9d,BYTE PTR [rax-0x1]
  418e29:	add    rcx,0x1
  418e2d:	test   r9b,r9b
  418e30:	mov    BYTE PTR [rcx-0x1],r9b
  418e34:	je     0x418e0a
  418e36:	sub    r8,0x1
  418e3a:	jne    0x418e20
  418e3c:	add    rax,0x1
  418e40:	mov    BYTE PTR [rcx],0x0
  418e43:	cmp    BYTE PTR [rax-0x1],0x0
  418e47:	jne    0x418e00
  418e49:	jmp    0x418e0a
  418e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  418e50:	lea    r8,[rip+0x281fb]        # 0x441052
  418e57:	lea    rdx,[rip+0x285dc]        # 0x44143a
  418e5e:	lea    rcx,[rip+0x281e8]        # 0x44104d
  418e65:	call   0x40fd20
  418e6a:	xor    eax,eax
  418e6c:	add    rsp,0x28
  418e70:	ret    
  418e71:	lea    r8,[rip+0x281e7]        # 0x44105f
  418e78:	lea    rdx,[rip+0x285bb]        # 0x44143a
  418e7f:	lea    rcx,[rip+0x281c7]        # 0x44104d
  418e86:	call   0x40fd20
  418e8b:	xor    eax,eax
  418e8d:	add    rsp,0x28
  418e91:	ret    
  418e92:	nop    DWORD PTR [rax+0x0]
  418e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ea0:	push   rbx
  418ea1:	sub    rsp,0x20
  418ea5:	test   rcx,rcx
  418ea8:	je     0x418f41
  418eae:	test   rdx,rdx
  418eb1:	je     0x418f63
  418eb7:	cmp    BYTE PTR [rcx],0x0
  418eba:	mov    rax,rcx
  418ebd:	je     0x418f8a
  418ec3:	xor    ebx,ebx
  418ec5:	test   r8,r8
  418ec8:	mov    r9,r8
  418ecb:	jne    0x418ed6
  418ecd:	jmp    0x418f30
  418ecf:	nop
  418ed0:	sub    r9,0x1
  418ed4:	je     0x418edf
  418ed6:	add    rax,0x1
  418eda:	cmp    BYTE PTR [rax],0x0
  418edd:	jne    0x418ed0
  418edf:	mov    rbx,rax
  418ee2:	sub    rbx,rcx
  418ee5:	sub    r8,rbx
  418ee8:	je     0x418f30
  418eea:	movzx  r10d,BYTE PTR [rdx]
  418eee:	mov    r9,rdx
  418ef1:	test   r10b,r10b
  418ef4:	je     0x418f85
  418efa:	nop    WORD PTR [rax+rax*1+0x0]
  418f00:	cmp    r8,0x1
  418f04:	je     0x418f11
  418f06:	mov    BYTE PTR [rax],r10b
  418f09:	sub    r8,0x1
  418f0d:	add    rax,0x1
  418f11:	add    r9,0x1
  418f15:	movzx  r10d,BYTE PTR [r9]
  418f19:	test   r10b,r10b
  418f1c:	jne    0x418f00
  418f1e:	sub    r9,rdx
  418f21:	mov    BYTE PTR [rax],0x0
  418f24:	lea    rax,[r9+rbx*1]
  418f28:	add    rsp,0x20
  418f2c:	pop    rbx
  418f2d:	ret    
  418f2e:	xchg   ax,ax
  418f30:	mov    rcx,rdx
  418f33:	call   0x438788
  418f38:	add    rax,rbx
  418f3b:	add    rsp,0x20
  418f3f:	pop    rbx
  418f40:	ret    
  418f41:	lea    r8,[rip+0x2810a]        # 0x441052
  418f48:	lea    rdx,[rip+0x284e1]        # 0x441430
  418f4f:	lea    rcx,[rip+0x280f7]        # 0x44104d
  418f56:	call   0x40fd20
  418f5b:	xor    eax,eax
  418f5d:	add    rsp,0x20
  418f61:	pop    rbx
  418f62:	ret    
  418f63:	lea    r8,[rip+0x280f5]        # 0x44105f
  418f6a:	lea    rdx,[rip+0x284bf]        # 0x441430
  418f71:	lea    rcx,[rip+0x280d5]        # 0x44104d
  418f78:	call   0x40fd20
  418f7d:	xor    eax,eax
  418f7f:	add    rsp,0x20
  418f83:	pop    rbx
  418f84:	ret    
  418f85:	xor    r9d,r9d
  418f88:	jmp    0x418f21
  418f8a:	xor    ebx,ebx
  418f8c:	jmp    0x418ee5
  418f91:	nop    DWORD PTR [rax+rax*1+0x0]
  418f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418fa0:	push   rbx
  418fa1:	sub    rsp,0x20
  418fa5:	test   rcx,rcx
  418fa8:	mov    rbx,rcx
  418fab:	je     0x419010
  418fad:	test   rdx,rdx
  418fb0:	js     0x419000
  418fb2:	mov    rcx,rbx
  418fb5:	call   0x418340
  418fba:	movzx  edx,BYTE PTR [rax]
  418fbd:	test   dl,dl
  418fbf:	je     0x418ff0
  418fc1:	lea    r10,[rip+0x284f8]        # 0x4414c0
  418fc8:	mov    rcx,rax
  418fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  418fd0:	movzx  r9d,dl
  418fd4:	lea    r8d,[rdx+0x20]
  418fd8:	test   BYTE PTR [r10+r9*2+0x1],0x2
  418fde:	cmovne edx,r8d
  418fe2:	add    rcx,0x1
  418fe6:	mov    BYTE PTR [rcx-0x1],dl
  418fe9:	movzx  edx,BYTE PTR [rcx]
  418fec:	test   dl,dl
  418fee:	jne    0x418fd0
  418ff0:	add    rsp,0x20
  418ff4:	pop    rbx
  418ff5:	ret    
  418ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419000:	mov    rcx,rbx
  419003:	call   0x438788
  419008:	mov    rdx,rax
  41900b:	jmp    0x418fb2
  41900d:	nop    DWORD PTR [rax]
  419010:	lea    r8,[rip+0x281c7]        # 0x4411de
  419017:	lea    rdx,[rip+0x28402]        # 0x441420
  41901e:	lea    rcx,[rip+0x28028]        # 0x44104d
  419025:	call   0x40fd20
  41902a:	xor    eax,eax
  41902c:	add    rsp,0x20
  419030:	pop    rbx
  419031:	ret    
  419032:	nop    DWORD PTR [rax+0x0]
  419036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419040:	push   rbx
  419041:	sub    rsp,0x20
  419045:	test   rcx,rcx
  419048:	mov    rbx,rcx
  41904b:	je     0x4190a2
  41904d:	test   rdx,rdx
  419050:	js     0x419095
  419052:	mov    rcx,rbx
  419055:	call   0x418340
  41905a:	movzx  edx,BYTE PTR [rax]
  41905d:	test   dl,dl
  41905f:	je     0x41908f
  419061:	lea    r10,[rip+0x28458]        # 0x4414c0
  419068:	mov    rcx,rax
  41906b:	nop    DWORD PTR [rax+rax*1+0x0]
  419070:	movzx  r9d,dl
  419074:	lea    r8d,[rdx-0x20]
  419078:	test   BYTE PTR [r10+r9*2],0x20
  41907d:	cmovne edx,r8d
  419081:	add    rcx,0x1
  419085:	mov    BYTE PTR [rcx-0x1],dl
  419088:	movzx  edx,BYTE PTR [rcx]
  41908b:	test   dl,dl
  41908d:	jne    0x419070
  41908f:	add    rsp,0x20
  419093:	pop    rbx
  419094:	ret    
  419095:	mov    rcx,rbx
  419098:	call   0x438788
  41909d:	mov    rdx,rax
  4190a0:	jmp    0x419052
  4190a2:	lea    r8,[rip+0x28135]        # 0x4411de
  4190a9:	lea    rdx,[rip+0x28362]        # 0x441412
  4190b0:	lea    rcx,[rip+0x27f96]        # 0x44104d
  4190b7:	call   0x40fd20
  4190bc:	xor    eax,eax
  4190be:	add    rsp,0x20
  4190c2:	pop    rbx
  4190c3:	ret    
  4190c4:	xchg   ax,ax
  4190c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190d0:	push   r12
  4190d2:	push   rbp
  4190d3:	push   rdi
  4190d4:	push   rsi
  4190d5:	push   rbx
  4190d6:	sub    rsp,0x20
  4190da:	test   rcx,rcx
  4190dd:	mov    rbp,rcx
  4190e0:	je     0x419130
  4190e2:	movzx  edx,BYTE PTR [rcx]
  4190e5:	mov    rsi,rcx
  4190e8:	mov    rdi,QWORD PTR [rip+0x6d971]        # 0x486a60
  4190ef:	mov    r12,QWORD PTR [rip+0x6da32]        # 0x486b28
  4190f6:	test   dl,dl
  4190f8:	je     0x41911d
  4190fa:	nop    WORD PTR [rax+rax*1+0x0]
  419100:	movzx  ebx,dl
  419103:	mov    ecx,ebx
  419105:	call   rdi
  419107:	test   eax,eax
  419109:	je     0x419112
  41910b:	mov    ecx,ebx
  41910d:	call   r12
  419110:	mov    BYTE PTR [rsi],al
  419112:	add    rsi,0x1
  419116:	movzx  edx,BYTE PTR [rsi]
  419119:	test   dl,dl
  41911b:	jne    0x419100
  41911d:	mov    rax,rbp
  419120:	add    rsp,0x20
  419124:	pop    rbx
  419125:	pop    rsi
  419126:	pop    rdi
  419127:	pop    rbp
  419128:	pop    r12
  41912a:	ret    
  41912b:	nop    DWORD PTR [rax+rax*1+0x0]
  419130:	lea    r8,[rip+0x280b3]        # 0x4411ea
  419137:	lea    rdx,[rip+0x282ca]        # 0x441408
  41913e:	lea    rcx,[rip+0x27f08]        # 0x44104d
  419145:	call   0x40fd20
  41914a:	xor    eax,eax
  41914c:	add    rsp,0x20
  419150:	pop    rbx
  419151:	pop    rsi
  419152:	pop    rdi
  419153:	pop    rbp
  419154:	pop    r12
  419156:	ret    
  419157:	nop    WORD PTR [rax+rax*1+0x0]
  419160:	push   r12
  419162:	push   rbp
  419163:	push   rdi
  419164:	push   rsi
  419165:	push   rbx
  419166:	sub    rsp,0x20
  41916a:	test   rcx,rcx
  41916d:	mov    rbp,rcx
  419170:	je     0x4191c0
  419172:	movzx  edx,BYTE PTR [rcx]
  419175:	mov    rsi,rcx
  419178:	mov    rdi,QWORD PTR [rip+0x6d8d1]        # 0x486a50
  41917f:	mov    r12,QWORD PTR [rip+0x6d9aa]        # 0x486b30
  419186:	test   dl,dl
  419188:	je     0x4191ad
  41918a:	nop    WORD PTR [rax+rax*1+0x0]
  419190:	movzx  ebx,dl
  419193:	mov    ecx,ebx
  419195:	call   rdi
  419197:	test   eax,eax
  419199:	je     0x4191a2
  41919b:	mov    ecx,ebx
  41919d:	call   r12
  4191a0:	mov    BYTE PTR [rsi],al
  4191a2:	add    rsi,0x1
  4191a6:	movzx  edx,BYTE PTR [rsi]
  4191a9:	test   dl,dl
  4191ab:	jne    0x419190
  4191ad:	mov    rax,rbp
  4191b0:	add    rsp,0x20
  4191b4:	pop    rbx
  4191b5:	pop    rsi
  4191b6:	pop    rdi
  4191b7:	pop    rbp
  4191b8:	pop    r12
  4191ba:	ret    
  4191bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4191c0:	lea    r8,[rip+0x28023]        # 0x4411ea
  4191c7:	lea    rdx,[rip+0x28232]        # 0x441400
  4191ce:	lea    rcx,[rip+0x27e78]        # 0x44104d
  4191d5:	call   0x40fd20
  4191da:	xor    eax,eax
  4191dc:	add    rsp,0x20
  4191e0:	pop    rbx
  4191e1:	pop    rsi
  4191e2:	pop    rdi
  4191e3:	pop    rbp
  4191e4:	pop    r12
  4191e6:	ret    
  4191e7:	nop    WORD PTR [rax+rax*1+0x0]
  4191f0:	push   rsi
  4191f1:	push   rbx
  4191f2:	sub    rsp,0x28
  4191f6:	test   rcx,rcx
  4191f9:	mov    rsi,rcx
  4191fc:	je     0x419250
  4191fe:	movzx  ebx,BYTE PTR [rcx]
  419201:	test   bl,bl
  419203:	je     0x41923c
  419205:	mov    rcx,rsi
  419208:	call   0x438788
  41920d:	lea    rdx,[rsi+rax*1-0x1]
  419212:	cmp    rsi,rdx
  419215:	jae    0x41923c
  419217:	mov    r8,rsi
  41921a:	jmp    0x419224
  41921c:	nop    DWORD PTR [rax+0x0]
  419220:	movzx  ebx,BYTE PTR [r8]
  419224:	movzx  r9d,BYTE PTR [rdx]
  419228:	add    r8,0x1
  41922c:	sub    rdx,0x1
  419230:	mov    BYTE PTR [r8-0x1],r9b
  419234:	mov    BYTE PTR [rdx+0x1],bl
  419237:	cmp    r8,rdx
  41923a:	jb     0x419220
  41923c:	mov    rax,rsi
  41923f:	add    rsp,0x28
  419243:	pop    rbx
  419244:	pop    rsi
  419245:	ret    
  419246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419250:	lea    r8,[rip+0x27f93]        # 0x4411ea
  419257:	lea    rdx,[rip+0x28195]        # 0x4413f3
  41925e:	lea    rcx,[rip+0x27de8]        # 0x44104d
  419265:	call   0x40fd20
  41926a:	xor    eax,eax
  41926c:	add    rsp,0x28
  419270:	pop    rbx
  419271:	pop    rsi
  419272:	ret    
  419273:	nop    DWORD PTR [rax]
  419276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419280:	lea    rdx,[rip+0x28239]        # 0x4414c0
  419287:	movzx  r8d,cl
  41928b:	lea    eax,[rcx+0x20]
  41928e:	test   BYTE PTR [rdx+r8*2+0x1],0x2
  419294:	cmove  eax,ecx
  419297:	ret    
  419298:	nop    DWORD PTR [rax+rax*1+0x0]
  4192a0:	lea    rdx,[rip+0x28219]        # 0x4414c0
  4192a7:	movzx  r8d,cl
  4192ab:	lea    eax,[rcx-0x20]
  4192ae:	test   BYTE PTR [rdx+r8*2],0x20
  4192b3:	cmove  eax,ecx
  4192b6:	ret    
  4192b7:	nop    WORD PTR [rax+rax*1+0x0]
  4192c0:	lea    rax,[rip+0x281f9]        # 0x4414c0
  4192c7:	movzx  edx,cl
  4192ca:	test   BYTE PTR [rax+rdx*2],0x8
  4192ce:	je     0x4192e0
  4192d0:	movsx  ecx,cl
  4192d3:	lea    eax,[rcx-0x30]
  4192d6:	ret    
  4192d7:	nop    WORD PTR [rax+rax*1+0x0]
  4192e0:	mov    eax,0xffffffff
  4192e5:	ret    
  4192e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4192f0:	lea    edx,[rcx-0x41]
  4192f3:	cmp    dl,0x5
  4192f6:	jbe    0x419330
  4192f8:	lea    edx,[rcx-0x61]
  4192fb:	cmp    dl,0x5
  4192fe:	jbe    0x419320
  419300:	lea    r8,[rip+0x281b9]        # 0x4414c0
  419307:	movzx  edx,cl
  41930a:	mov    eax,0xffffffff
  41930f:	test   BYTE PTR [r8+rdx*2],0x8
  419314:	je     0x41931c
  419316:	movsx  ecx,cl
  419319:	lea    eax,[rcx-0x30]
  41931c:	repz ret 
  41931e:	xchg   ax,ax
  419320:	movsx  ecx,cl
  419323:	lea    eax,[rcx-0x57]
  419326:	ret    
  419327:	nop    WORD PTR [rax+rax*1+0x0]
  419330:	movsx  ecx,cl
  419333:	lea    eax,[rcx-0x37]
  419336:	ret    
  419337:	nop    WORD PTR [rax+rax*1+0x0]
  419340:	sub    rsp,0x28
  419344:	test   rcx,rcx
  419347:	je     0x4193f0
  41934d:	test   rdx,rdx
  419350:	je     0x419411
  419356:	movzx  r8d,BYTE PTR [rcx]
  41935a:	test   r8b,r8b
  41935d:	je     0x419432
  419363:	movzx  r9d,BYTE PTR [rdx]
  419367:	test   r9b,r9b
  41936a:	jne    0x41938e
  41936c:	jmp    0x4193d0
  41936e:	xchg   ax,ax
  419370:	add    rcx,0x1
  419374:	movzx  r8d,BYTE PTR [rcx]
  419378:	lea    rax,[rdx+0x1]
  41937c:	test   r8b,r8b
  41937f:	je     0x4193e0
  419381:	movzx  r9d,BYTE PTR [rdx+0x1]
  419386:	test   r9b,r9b
  419389:	je     0x4193d0
  41938b:	mov    rdx,rax
  41938e:	lea    r10d,[r8-0x41]
  419392:	movzx  eax,r8b
  419396:	cmp    r10b,0x19
  41939a:	ja     0x4193a4
  41939c:	add    r8d,0x20
  4193a0:	movzx  eax,r8b
  4193a4:	lea    r10d,[r9-0x41]
  4193a8:	movzx  r8d,r9b
  4193ac:	cmp    r10b,0x19
  4193b0:	ja     0x4193ba
  4193b2:	add    r9d,0x20
  4193b6:	movzx  r8d,r9b
  4193ba:	cmp    eax,r8d
  4193bd:	je     0x419370
  4193bf:	sub    eax,r8d
  4193c2:	add    rsp,0x28
  4193c6:	ret    
  4193c7:	nop    WORD PTR [rax+rax*1+0x0]
  4193d0:	movzx  eax,r8b
  4193d4:	xor    edx,edx
  4193d6:	sub    eax,edx
  4193d8:	add    rsp,0x28
  4193dc:	ret    
  4193dd:	nop    DWORD PTR [rax]
  4193e0:	movzx  edx,BYTE PTR [rdx+0x1]
  4193e4:	xor    eax,eax
  4193e6:	sub    eax,edx
  4193e8:	jmp    0x4193d8
  4193ea:	nop    WORD PTR [rax+rax*1+0x0]
  4193f0:	lea    r8,[rip+0x27e02]        # 0x4411f9
  4193f7:	lea    rdx,[rip+0x27fe2]        # 0x4413e0
  4193fe:	lea    rcx,[rip+0x27c48]        # 0x44104d
  419405:	call   0x40fd20
  41940a:	xor    eax,eax
  41940c:	add    rsp,0x28
  419410:	ret    
  419411:	lea    r8,[rip+0x27dec]        # 0x441204
  419418:	lea    rdx,[rip+0x27fc1]        # 0x4413e0
  41941f:	lea    rcx,[rip+0x27c27]        # 0x44104d
  419426:	call   0x40fd20
  41942b:	xor    eax,eax
  41942d:	add    rsp,0x28
  419431:	ret    
  419432:	movzx  edx,BYTE PTR [rdx]
  419435:	xor    eax,eax
  419437:	sub    eax,edx
  419439:	jmp    0x4193d8
  41943b:	nop    DWORD PTR [rax+rax*1+0x0]
  419440:	sub    rsp,0x28
  419444:	test   rcx,rcx
  419447:	je     0x4194e0
  41944d:	test   rdx,rdx
  419450:	je     0x419520
  419456:	test   r8,r8
  419459:	je     0x4194fa
  41945f:	movzx  r9d,BYTE PTR [rcx]
  419463:	test   r9b,r9b
  419466:	je     0x419541
  41946c:	movzx  r10d,BYTE PTR [rdx]
  419470:	test   r10b,r10b
  419473:	je     0x419501
  419479:	lea    r11,[rcx+0x1]
  41947d:	add    r8,rcx
  419480:	jmp    0x4194a4
  419482:	cmp    r11,r8
  419485:	lea    rax,[rdx+0x1]
  419489:	je     0x4194fa
  41948b:	movzx  r9d,BYTE PTR [r11]
  41948f:	test   r9b,r9b
  419492:	je     0x419510
  419494:	movzx  r10d,BYTE PTR [rax]
  419498:	add    r11,0x1
  41949c:	test   r10b,r10b
  41949f:	je     0x419501
  4194a1:	mov    rdx,rax
  4194a4:	lea    ecx,[r9-0x41]
  4194a8:	movzx  eax,r9b
  4194ac:	cmp    cl,0x19
  4194af:	ja     0x4194b9
  4194b1:	add    r9d,0x20
  4194b5:	movzx  eax,r9b
  4194b9:	lea    ecx,[r10-0x41]
  4194bd:	movzx  r9d,r10b
  4194c1:	cmp    cl,0x19
  4194c4:	ja     0x4194ce
  4194c6:	add    r10d,0x20
  4194ca:	movzx  r9d,r10b
  4194ce:	cmp    eax,r9d
  4194d1:	je     0x419482
  4194d3:	sub    eax,r9d
  4194d6:	add    rsp,0x28
  4194da:	ret    
  4194db:	nop    DWORD PTR [rax+rax*1+0x0]
  4194e0:	lea    r8,[rip+0x27d12]        # 0x4411f9
  4194e7:	lea    rdx,[rip+0x27ed2]        # 0x4413c0
  4194ee:	lea    rcx,[rip+0x27b58]        # 0x44104d
  4194f5:	call   0x40fd20
  4194fa:	xor    eax,eax
  4194fc:	add    rsp,0x28
  419500:	ret    
  419501:	xor    edx,edx
  419503:	movzx  eax,r9b
  419507:	sub    eax,edx
  419509:	add    rsp,0x28
  41950d:	ret    
  41950e:	xchg   ax,ax
  419510:	movzx  edx,BYTE PTR [rdx+0x1]
  419514:	xor    r9d,r9d
  419517:	jmp    0x419503
  419519:	nop    DWORD PTR [rax+0x0]
  419520:	lea    r8,[rip+0x27cdd]        # 0x441204
  419527:	lea    rdx,[rip+0x27e92]        # 0x4413c0
  41952e:	lea    rcx,[rip+0x27b18]        # 0x44104d
  419535:	call   0x40fd20
  41953a:	xor    eax,eax
  41953c:	add    rsp,0x28
  419540:	ret    
  419541:	movzx  edx,BYTE PTR [rdx]
  419544:	jmp    0x419503
  419546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419550:	sub    rsp,0x28
  419554:	test   rcx,rcx
  419557:	je     0x419570
  419559:	test   rdx,rdx
  41955c:	je     0x419591
  41955e:	mov    rax,QWORD PTR [rip+0x6d3cb]        # 0x486930
  419565:	add    rsp,0x28
  419569:	rex.W jmp rax
  41956c:	nop    DWORD PTR [rax+0x0]
  419570:	lea    r8,[rip+0x27c82]        # 0x4411f9
  419577:	lea    rdx,[rip+0x27e34]        # 0x4413b2
  41957e:	lea    rcx,[rip+0x27ac8]        # 0x44104d
  419585:	call   0x40fd20
  41958a:	xor    eax,eax
  41958c:	add    rsp,0x28
  419590:	ret    
  419591:	lea    r8,[rip+0x27c6c]        # 0x441204
  419598:	lea    rdx,[rip+0x27e13]        # 0x4413b2
  41959f:	lea    rcx,[rip+0x27aa7]        # 0x44104d
  4195a6:	call   0x40fd20
  4195ab:	xor    eax,eax
  4195ad:	add    rsp,0x28
  4195b1:	ret    
  4195b2:	nop    DWORD PTR [rax+0x0]
  4195b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195c0:	mov    rax,QWORD PTR [rip+0x6d371]        # 0x486938
  4195c7:	mov    r8d,r8d
  4195ca:	rex.W jmp rax
  4195cd:	nop    DWORD PTR [rax]
  4195d0:	push   rbp
  4195d1:	push   rdi
  4195d2:	push   rsi
  4195d3:	push   rbx
  4195d4:	sub    rsp,0x28
  4195d8:	test   rcx,rcx
  4195db:	mov    rbp,rcx
  4195de:	mov    rsi,rdx
  4195e1:	mov    edi,r8d
  4195e4:	je     0x419630
  4195e6:	movzx  r9d,BYTE PTR [rcx]
  4195ea:	lea    rax,[rip+0x27c1e]        # 0x44120f
  4195f1:	test   rdx,rdx
  4195f4:	mov    rbx,rcx
  4195f7:	cmove  rsi,rax
  4195fb:	test   r9b,r9b
  4195fe:	je     0x419621
  419600:	movsx  edx,r9b
  419604:	mov    rcx,rsi
  419607:	call   0x4387a8
  41960c:	test   rax,rax
  41960f:	je     0x419614
  419611:	mov    BYTE PTR [rbx],dil
  419614:	add    rbx,0x1
  419618:	movzx  r9d,BYTE PTR [rbx]
  41961c:	test   r9b,r9b
  41961f:	jne    0x419600
  419621:	mov    rax,rbp
  419624:	add    rsp,0x28
  419628:	pop    rbx
  419629:	pop    rsi
  41962a:	pop    rdi
  41962b:	pop    rbp
  41962c:	ret    
  41962d:	nop    DWORD PTR [rax]
  419630:	lea    r8,[rip+0x27bb3]        # 0x4411ea
  419637:	lea    rdx,[rip+0x27d67]        # 0x4413a5
  41963e:	lea    rcx,[rip+0x27a08]        # 0x44104d
  419645:	call   0x40fd20
  41964a:	xor    eax,eax
  41964c:	add    rsp,0x28
  419650:	pop    rbx
  419651:	pop    rsi
  419652:	pop    rdi
  419653:	pop    rbp
  419654:	ret    
  419655:	nop
  419656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419660:	push   rbp
  419661:	push   rdi
  419662:	push   rsi
  419663:	push   rbx
  419664:	sub    rsp,0x28
  419668:	test   rcx,rcx
  41966b:	mov    rdi,rcx
  41966e:	mov    rsi,rdx
  419671:	mov    ebp,r8d
  419674:	je     0x4196d0
  419676:	test   rdx,rdx
  419679:	je     0x4196f5
  41967b:	movzx  r9d,BYTE PTR [rcx]
  41967f:	mov    rbx,rcx
  419682:	test   r9b,r9b
  419685:	jne    0x41969d
  419687:	jmp    0x4196c0
  419689:	nop    DWORD PTR [rax+0x0]
  419690:	add    rbx,0x1
  419694:	movzx  r9d,BYTE PTR [rbx]
  419698:	test   r9b,r9b
  41969b:	je     0x4196c0
  41969d:	movsx  edx,r9b
  4196a1:	mov    rcx,rsi
  4196a4:	call   0x4387a8
  4196a9:	test   rax,rax
  4196ac:	jne    0x419690
  4196ae:	mov    BYTE PTR [rbx],bpl
  4196b1:	add    rbx,0x1
  4196b5:	movzx  r9d,BYTE PTR [rbx]
  4196b9:	test   r9b,r9b
  4196bc:	jne    0x41969d
  4196be:	xchg   ax,ax
  4196c0:	mov    rax,rdi
  4196c3:	add    rsp,0x28
  4196c7:	pop    rbx
  4196c8:	pop    rsi
  4196c9:	pop    rdi
  4196ca:	pop    rbp
  4196cb:	ret    
  4196cc:	nop    DWORD PTR [rax+0x0]
  4196d0:	lea    r8,[rip+0x27b13]        # 0x4411ea
  4196d7:	lea    rdx,[rip+0x27cbc]        # 0x44139a
  4196de:	lea    rcx,[rip+0x27968]        # 0x44104d
  4196e5:	call   0x40fd20
  4196ea:	xor    eax,eax
  4196ec:	add    rsp,0x28
  4196f0:	pop    rbx
  4196f1:	pop    rsi
  4196f2:	pop    rdi
  4196f3:	pop    rbp
  4196f4:	ret    
  4196f5:	lea    r8,[rip+0x27b1b]        # 0x441217
  4196fc:	lea    rdx,[rip+0x27c97]        # 0x44139a
  419703:	lea    rcx,[rip+0x27943]        # 0x44104d
  41970a:	call   0x40fd20
  41970f:	xor    eax,eax
  419711:	add    rsp,0x28
  419715:	pop    rbx
  419716:	pop    rsi
  419717:	pop    rdi
  419718:	pop    rbp
  419719:	ret    
  41971a:	nop    WORD PTR [rax+rax*1+0x0]
  419720:	push   rdi
  419721:	push   rsi
  419722:	push   rbx
  419723:	sub    rsp,0x20
  419727:	test   rcx,rcx
  41972a:	mov    rbx,rcx
  41972d:	je     0x4198f0
  419733:	call   0x438788
  419738:	lea    rcx,[rax+0x1]
  41973c:	call   0x40e5c0
  419741:	movzx  edx,BYTE PTR [rbx]
  419744:	mov    rdi,rax
  419747:	test   dl,dl
  419749:	je     0x419914
  41974f:	lea    r8,[rax+0x1]
  419753:	jmp    0x41976c
  419755:	mov    BYTE PTR [r8-0x1],dl
  419759:	movzx  edx,BYTE PTR [rbx+0x1]
  41975d:	mov    rsi,r8
  419760:	add    rbx,0x1
  419764:	add    r8,0x1
  419768:	test   dl,dl
  41976a:	je     0x4197c0
  41976c:	cmp    dl,0x5c
  41976f:	lea    rsi,[r8-0x1]
  419773:	jne    0x419755
  419775:	movzx  edx,BYTE PTR [rbx+0x1]
  419779:	lea    rcx,[rbx+0x1]
  41977d:	cmp    dl,0x66
  419780:	je     0x4198d5
  419786:	jle    0x4197d0
  419788:	cmp    dl,0x72
  41978b:	je     0x4198c1
  419791:	jle    0x419830
  419797:	cmp    dl,0x74
  41979a:	je     0x419800
  41979c:	cmp    dl,0x76
  41979f:	jne    0x419814
  4197a1:	mov    BYTE PTR [r8-0x1],0xb
  4197a6:	movzx  edx,BYTE PTR [rbx+0x2]
  4197aa:	mov    rbx,rcx
  4197ad:	mov    rsi,r8
  4197b0:	add    rbx,0x1
  4197b4:	add    r8,0x1
  4197b8:	test   dl,dl
  4197ba:	jne    0x41976c
  4197bc:	nop    DWORD PTR [rax+0x0]
  4197c0:	mov    rax,rdi
  4197c3:	mov    BYTE PTR [rsi],0x0
  4197c6:	add    rsp,0x20
  4197ca:	pop    rbx
  4197cb:	pop    rsi
  4197cc:	pop    rdi
  4197cd:	ret    
  4197ce:	xchg   ax,ax
  4197d0:	cmp    dl,0x37
  4197d3:	jg     0x419850
  4197d5:	cmp    dl,0x30
  4197d8:	jge    0x419870
  4197de:	test   dl,dl
  4197e0:	jne    0x419814
  4197e2:	lea    r8,[rip+0x27a42]        # 0x44122b
  4197e9:	lea    rcx,[rip+0x2785d]        # 0x44104d
  4197f0:	mov    edx,0x10
  4197f5:	call   0x40fae0
  4197fa:	jmp    0x4197c0
  4197fc:	nop    DWORD PTR [rax+0x0]
  419800:	mov    BYTE PTR [r8-0x1],0x9
  419805:	mov    rsi,r8
  419808:	movzx  edx,BYTE PTR [rbx+0x2]
  41980c:	mov    rbx,rcx
  41980f:	jmp    0x419760
  419814:	mov    BYTE PTR [r8-0x1],dl
  419818:	mov    rsi,r8
  41981b:	movzx  edx,BYTE PTR [rbx+0x2]
  41981f:	mov    rbx,rcx
  419822:	jmp    0x419760
  419827:	nop    WORD PTR [rax+rax*1+0x0]
  419830:	cmp    dl,0x6e
  419833:	jne    0x419814
  419835:	mov    BYTE PTR [r8-0x1],0xa
  41983a:	mov    rsi,r8
  41983d:	movzx  edx,BYTE PTR [rbx+0x2]
  419841:	mov    rbx,rcx
  419844:	jmp    0x419760
  419849:	nop    DWORD PTR [rax+0x0]
  419850:	cmp    dl,0x62
  419853:	jne    0x419814
  419855:	mov    BYTE PTR [r8-0x1],0x8
  41985a:	mov    rsi,r8
  41985d:	movzx  edx,BYTE PTR [rbx+0x2]
  419861:	mov    rbx,rcx
  419864:	jmp    0x419760
  419869:	nop    DWORD PTR [rax+0x0]
  419870:	lea    r11,[rbx+0x4]
  419874:	mov    BYTE PTR [r8-0x1],0x0
  419879:	mov    rsi,r8
  41987c:	movzx  edx,BYTE PTR [rbx+0x1]
  419880:	cmp    rcx,r11
  419883:	jae    0x4198b5
  419885:	lea    r9d,[rdx-0x30]
  419889:	cmp    r9b,0x7
  41988d:	ja     0x4198b5
  41988f:	xor    r9d,r9d
  419892:	lea    r10,[rcx+0x1]
  419896:	lea    r9d,[rdx+r9*8-0x30]
  41989b:	cmp    r10,r11
  41989e:	mov    BYTE PTR [r8-0x1],r9b
  4198a2:	movzx  edx,BYTE PTR [rcx+0x1]
  4198a6:	je     0x4198b8
  4198a8:	mov    rcx,r10
  4198ab:	lea    r10d,[rdx-0x30]
  4198af:	cmp    r10b,0x7
  4198b3:	jbe    0x419892
  4198b5:	mov    r11,rcx
  4198b8:	lea    rbx,[r11-0x1]
  4198bc:	jmp    0x419760
  4198c1:	mov    BYTE PTR [r8-0x1],0xd
  4198c6:	mov    rsi,r8
  4198c9:	movzx  edx,BYTE PTR [rbx+0x2]
  4198cd:	mov    rbx,rcx
  4198d0:	jmp    0x419760
  4198d5:	mov    BYTE PTR [r8-0x1],0xc
  4198da:	mov    rsi,r8
  4198dd:	movzx  edx,BYTE PTR [rbx+0x2]
  4198e1:	mov    rbx,rcx
  4198e4:	jmp    0x419760
  4198e9:	nop    DWORD PTR [rax+0x0]
  4198f0:	lea    r8,[rip+0x2794e]        # 0x441245
  4198f7:	lea    rdx,[rip+0x27a8e]        # 0x44138c
  4198fe:	lea    rcx,[rip+0x27748]        # 0x44104d
  419905:	call   0x40fd20
  41990a:	xor    eax,eax
  41990c:	add    rsp,0x20
  419910:	pop    rbx
  419911:	pop    rsi
  419912:	pop    rdi
  419913:	ret    
  419914:	mov    rsi,rdi
  419917:	jmp    0x4197c0
  41991c:	nop    DWORD PTR [rax+0x0]
  419920:	push   rdi
  419921:	push   rsi
  419922:	push   rbx
  419923:	sub    rsp,0x120
  41992a:	test   rcx,rcx
  41992d:	mov    rbx,rcx
  419930:	mov    rsi,rdx
  419933:	je     0x419ad4
  419939:	call   0x438788
  41993e:	lea    rcx,[rax*4+0x1]
  419946:	call   0x40e5c0
  41994b:	lea    rdx,[rsp+0x20]
  419950:	mov    r9,rax
  419953:	mov    ecx,0x20
  419958:	xor    eax,eax
  41995a:	test   rsi,rsi
  41995d:	mov    rdi,rdx
  419960:	rep stos QWORD PTR es:[rdi],rax
  419963:	jne    0x41997a
  419965:	jmp    0x419983
  419967:	nop    WORD PTR [rax+rax*1+0x0]
  419970:	mov    BYTE PTR [rsp+r8*1+0x20],0x1
  419976:	add    rsi,0x1
  41997a:	movzx  r8d,BYTE PTR [rsi]
  41997e:	test   r8b,r8b
  419981:	jne    0x419970
  419983:	movzx  edx,BYTE PTR [rbx]
  419986:	mov    r8,r9
  419989:	test   dl,dl
  41998b:	jne    0x4199d0
  41998d:	jmp    0x4199ec
  41998f:	nop
  419990:	cmp    dl,0xb
  419993:	je     0x419a23
  419999:	jbe    0x419a00
  41999b:	cmp    dl,0xd
  41999e:	je     0x419a94
  4199a4:	jb     0x419a82
  4199aa:	cmp    dl,0x22
  4199ad:	je     0x419a70
  4199b3:	cmp    dl,0x5c
  4199b6:	jne    0x419a32
  4199b8:	mov    BYTE PTR [r8],0x5c
  4199bc:	mov    BYTE PTR [r8+0x1],0x5c
  4199c1:	add    r8,0x2
  4199c5:	add    rbx,0x1
  4199c9:	movzx  edx,BYTE PTR [rbx]
  4199cc:	test   dl,dl
  4199ce:	je     0x4199ec
  4199d0:	movzx  ecx,dl
  4199d3:	cmp    BYTE PTR [rsp+rcx*1+0x20],0x0
  4199d8:	je     0x419990
  4199da:	add    rbx,0x1
  4199de:	mov    BYTE PTR [r8],dl
  4199e1:	add    r8,0x1
  4199e5:	movzx  edx,BYTE PTR [rbx]
  4199e8:	test   dl,dl
  4199ea:	jne    0x4199d0
  4199ec:	mov    rax,r9
  4199ef:	mov    BYTE PTR [r8],0x0
  4199f3:	add    rsp,0x120
  4199fa:	pop    rbx
  4199fb:	pop    rsi
  4199fc:	pop    rdi
  4199fd:	ret    
  4199fe:	xchg   ax,ax
  419a00:	cmp    dl,0x9
  419a03:	je     0x419ac2
  419a09:	ja     0x419ab0
  419a0f:	cmp    dl,0x8
  419a12:	jne    0x419a32
  419a14:	mov    BYTE PTR [r8],0x5c
  419a18:	mov    BYTE PTR [r8+0x1],0x62
  419a1d:	add    r8,0x2
  419a21:	jmp    0x4199c5
  419a23:	mov    BYTE PTR [r8],0x5c
  419a27:	mov    BYTE PTR [r8+0x1],0x76
  419a2c:	add    r8,0x2
  419a30:	jmp    0x4199c5
  419a32:	lea    eax,[rdx-0x20]
  419a35:	cmp    al,0x5e
  419a37:	jbe    0x4199da
  419a39:	mov    eax,edx
  419a3b:	mov    BYTE PTR [r8],0x5c
  419a3f:	add    r8,0x4
  419a43:	shr    al,0x6
  419a46:	add    eax,0x30
  419a49:	mov    BYTE PTR [r8-0x3],al
  419a4d:	mov    eax,edx
  419a4f:	and    edx,0x7
  419a52:	shr    al,0x3
  419a55:	add    edx,0x30
  419a58:	and    eax,0x7
  419a5b:	mov    BYTE PTR [r8-0x1],dl
  419a5f:	add    eax,0x30
  419a62:	mov    BYTE PTR [r8-0x2],al
  419a66:	jmp    0x4199c5
  419a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  419a70:	mov    BYTE PTR [r8],0x5c
  419a74:	mov    BYTE PTR [r8+0x1],0x22
  419a79:	add    r8,0x2
  419a7d:	jmp    0x4199c5
  419a82:	mov    BYTE PTR [r8],0x5c
  419a86:	mov    BYTE PTR [r8+0x1],0x66
  419a8b:	add    r8,0x2
  419a8f:	jmp    0x4199c5
  419a94:	mov    BYTE PTR [r8],0x5c
  419a98:	mov    BYTE PTR [r8+0x1],0x72
  419a9d:	add    r8,0x2
  419aa1:	jmp    0x4199c5
  419aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ab0:	mov    BYTE PTR [r8],0x5c
  419ab4:	mov    BYTE PTR [r8+0x1],0x6e
  419ab9:	add    r8,0x2
  419abd:	jmp    0x4199c5
  419ac2:	mov    BYTE PTR [r8],0x5c
  419ac6:	mov    BYTE PTR [r8+0x1],0x74
  419acb:	add    r8,0x2
  419acf:	jmp    0x4199c5
  419ad4:	lea    r8,[rip+0x2776a]        # 0x441245
  419adb:	lea    rdx,[rip+0x2789e]        # 0x441380
  419ae2:	lea    rcx,[rip+0x27564]        # 0x44104d
  419ae9:	call   0x40fd20
  419aee:	xor    eax,eax
  419af0:	add    rsp,0x120
  419af7:	pop    rbx
  419af8:	pop    rsi
  419af9:	pop    rdi
  419afa:	ret    
  419afb:	nop    DWORD PTR [rax+rax*1+0x0]
  419b00:	push   rsi
  419b01:	push   rbx
  419b02:	sub    rsp,0x28
  419b06:	test   rcx,rcx
  419b09:	mov    rsi,rcx
  419b0c:	je     0x419b70
  419b0e:	movzx  eax,BYTE PTR [rcx]
  419b11:	test   al,al
  419b13:	je     0x419b93
  419b15:	lea    rdx,[rip+0x279a4]        # 0x4414c0
  419b1c:	mov    rbx,rcx
  419b1f:	test   BYTE PTR [rdx+rax*2+0x1],0x1
  419b24:	jne    0x419b38
  419b26:	jmp    0x419b45
  419b28:	nop    DWORD PTR [rax+rax*1+0x0]
  419b30:	test   BYTE PTR [rdx+r8*2+0x1],0x1
  419b36:	je     0x419b45
  419b38:	add    rbx,0x1
  419b3c:	movzx  r8d,BYTE PTR [rbx]
  419b40:	test   r8b,r8b
  419b43:	jne    0x419b30
  419b45:	mov    rcx,rbx
  419b48:	call   0x438788
  419b4d:	lea    r8,[rax+0x1]
  419b51:	mov    rdx,rbx
  419b54:	mov    rcx,rsi
  419b57:	call   0x4387e8
  419b5c:	mov    rax,rsi
  419b5f:	add    rsp,0x28
  419b63:	pop    rbx
  419b64:	pop    rsi
  419b65:	ret    
  419b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b70:	lea    r8,[rip+0x27673]        # 0x4411ea
  419b77:	lea    rdx,[rip+0x277f8]        # 0x441376
  419b7e:	lea    rcx,[rip+0x274c8]        # 0x44104d
  419b85:	call   0x40fd20
  419b8a:	xor    eax,eax
  419b8c:	add    rsp,0x28
  419b90:	pop    rbx
  419b91:	pop    rsi
  419b92:	ret    
  419b93:	mov    rbx,rcx
  419b96:	jmp    0x419b45
  419b98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ba0:	push   rsi
  419ba1:	push   rbx
  419ba2:	sub    rsp,0x28
  419ba6:	test   rcx,rcx
  419ba9:	mov    rsi,rcx
  419bac:	je     0x419c10
  419bae:	call   0x438788
  419bb3:	test   rax,rax
  419bb6:	lea    r10,[rax-0x1]
  419bba:	je     0x419bfe
  419bbc:	add    r10,rsi
  419bbf:	lea    rbx,[rip+0x278fa]        # 0x4414c0
  419bc6:	movzx  edx,BYTE PTR [r10]
  419bca:	test   BYTE PTR [rbx+rdx*2+0x1],0x1
  419bcf:	je     0x419bfe
  419bd1:	mov    r11d,0x1
  419bd7:	xor    edx,edx
  419bd9:	lea    r9,[rsi+rax*1]
  419bdd:	sub    r11,rax
  419be0:	jmp    0x419bf4
  419be2:	movzx  r8d,BYTE PTR [r9+rdx*1-0x2]
  419be8:	sub    rdx,0x1
  419bec:	test   BYTE PTR [rbx+r8*2+0x1],0x1
  419bf2:	je     0x419bfe
  419bf4:	cmp    rdx,r11
  419bf7:	mov    BYTE PTR [r10+rdx*1],0x0
  419bfc:	jne    0x419be2
  419bfe:	mov    rax,rsi
  419c01:	add    rsp,0x28
  419c05:	pop    rbx
  419c06:	pop    rsi
  419c07:	ret    
  419c08:	nop    DWORD PTR [rax+rax*1+0x0]
  419c10:	lea    r8,[rip+0x275d3]        # 0x4411ea
  419c17:	lea    rdx,[rip+0x2774d]        # 0x44136b
  419c1e:	lea    rcx,[rip+0x27428]        # 0x44104d
  419c25:	call   0x40fd20
  419c2a:	xor    eax,eax
  419c2c:	add    rsp,0x28
  419c30:	pop    rbx
  419c31:	pop    rsi
  419c32:	ret    
  419c33:	nop    DWORD PTR [rax]
  419c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c40:	push   r15
  419c42:	push   r14
  419c44:	push   r13
  419c46:	push   r12
  419c48:	push   rbp
  419c49:	push   rdi
  419c4a:	push   rsi
  419c4b:	push   rbx
  419c4c:	sub    rsp,0x38
  419c50:	test   rcx,rcx
  419c53:	mov    QWORD PTR [rsp+0x80],rcx
  419c5b:	mov    r13,rdx
  419c5e:	mov    ebx,r8d
  419c61:	je     0x419de0
  419c67:	test   rdx,rdx
  419c6a:	je     0x419e00
  419c70:	cmp    BYTE PTR [rdx],0x0
  419c73:	je     0x419d72
  419c79:	test   r8d,r8d
  419c7c:	jle    0x419e21
  419c82:	mov    rcx,QWORD PTR [rsp+0x80]
  419c8a:	mov    rdx,r13
  419c8d:	call   0x438760
  419c92:	test   rax,rax
  419c95:	mov    r15,rax
  419c98:	je     0x419dc4
  419c9e:	mov    rcx,r13
  419ca1:	call   0x438788
  419ca6:	sub    ebx,0x1
  419ca9:	mov    rdi,rax
  419cac:	je     0x419dc4
  419cb2:	lea    eax,[rbx-0x1]
  419cb5:	mov    r14,QWORD PTR [rsp+0x80]
  419cbd:	xor    esi,esi
  419cbf:	xor    ebp,ebp
  419cc1:	mov    DWORD PTR [rsp+0x2c],eax
  419cc5:	jmp    0x419cd5
  419cc7:	nop    WORD PTR [rax+rax*1+0x0]
  419cd0:	test   rax,rax
  419cd3:	je     0x419d14
  419cd5:	mov    rdx,r15
  419cd8:	mov    rcx,r14
  419cdb:	mov    r12d,esi
  419cde:	sub    rdx,r14
  419ce1:	lea    r14,[r15+rdi*1]
  419ce5:	lea    ebx,[rsi+0x1]
  419ce8:	call   0x418340
  419ced:	mov    rcx,rbp
  419cf0:	mov    rdx,rax
  419cf3:	add    rsi,0x1
  419cf7:	call   0x417180
  419cfc:	mov    rdx,r13
  419cff:	mov    rcx,r14
  419d02:	mov    rbp,rax
  419d05:	call   0x438760
  419d0a:	cmp    r12d,DWORD PTR [rsp+0x2c]
  419d0f:	mov    r15,rax
  419d12:	jne    0x419cd0
  419d14:	lea    r12d,[rbx+0x1]
  419d18:	mov    esi,r12d
  419d1b:	mov    rax,QWORD PTR [rsp+0x80]
  419d23:	mov    edi,ebx
  419d25:	cmp    BYTE PTR [rax],0x0
  419d28:	jne    0x419da0
  419d2a:	mov    edx,0x8
  419d2f:	mov    rcx,r12
  419d32:	sub    ebx,0x1
  419d35:	call   0x40e7a0
  419d3a:	test   rbp,rbp
  419d3d:	mov    rsi,rax
  419d40:	mov    QWORD PTR [rax+rdi*8],0x0
  419d48:	mov    rdx,rbp
  419d4b:	je     0x419d65
  419d4d:	nop    DWORD PTR [rax]
  419d50:	mov    r8,QWORD PTR [rdx]
  419d53:	mov    ecx,ebx
  419d55:	sub    ebx,0x1
  419d58:	mov    QWORD PTR [rsi+rcx*8],r8
  419d5c:	mov    rdx,QWORD PTR [rdx+0x8]
  419d60:	test   rdx,rdx
  419d63:	jne    0x419d50
  419d65:	mov    rcx,rbp
  419d68:	call   0x4170b0
  419d6d:	mov    rax,rsi
  419d70:	jmp    0x419d8e
  419d72:	lea    r8,[rip+0x274ed]        # 0x441266
  419d79:	lea    rdx,[rip+0x275e0]        # 0x441360
  419d80:	lea    rcx,[rip+0x272c6]        # 0x44104d
  419d87:	call   0x40fd20
  419d8c:	xor    eax,eax
  419d8e:	add    rsp,0x38
  419d92:	pop    rbx
  419d93:	pop    rsi
  419d94:	pop    rdi
  419d95:	pop    rbp
  419d96:	pop    r12
  419d98:	pop    r13
  419d9a:	pop    r14
  419d9c:	pop    r15
  419d9e:	ret    
  419d9f:	nop
  419da0:	mov    rcx,r14
  419da3:	mov    rdi,r12
  419da6:	lea    r12d,[rbx+0x2]
  419daa:	call   0x4182b0
  419daf:	mov    rcx,rbp
  419db2:	mov    rdx,rax
  419db5:	mov    ebx,esi
  419db7:	call   0x417180
  419dbc:	mov    rbp,rax
  419dbf:	jmp    0x419d2a
  419dc4:	mov    r14,QWORD PTR [rsp+0x80]
  419dcc:	mov    r12d,0x1
  419dd2:	mov    esi,0x1
  419dd7:	xor    ebx,ebx
  419dd9:	xor    ebp,ebp
  419ddb:	jmp    0x419d1b
  419de0:	lea    r8,[rip+0x27403]        # 0x4411ea
  419de7:	lea    rdx,[rip+0x27572]        # 0x441360
  419dee:	lea    rcx,[rip+0x27258]        # 0x44104d
  419df5:	call   0x40fd20
  419dfa:	xor    eax,eax
  419dfc:	jmp    0x419d8e
  419dfe:	xchg   ax,ax
  419e00:	lea    r8,[rip+0x2744d]        # 0x441254
  419e07:	lea    rdx,[rip+0x27552]        # 0x441360
  419e0e:	lea    rcx,[rip+0x27238]        # 0x44104d
  419e15:	call   0x40fd20
  419e1a:	xor    eax,eax
  419e1c:	jmp    0x419d8e
  419e21:	mov    rcx,QWORD PTR [rsp+0x80]
  419e29:	call   0x438760
  419e2e:	test   rax,rax
  419e31:	mov    r15,rax
  419e34:	je     0x419dc4
  419e36:	xor    eax,eax
  419e38:	mov    rdi,r13
  419e3b:	or     rcx,0xffffffffffffffff
  419e3f:	repnz scas al,BYTE PTR es:[rdi]
  419e41:	mov    ebx,0x7ffffffe
  419e46:	mov    rax,rcx
  419e49:	not    rax
  419e4c:	lea    rdi,[rax-0x1]
  419e50:	jmp    0x419cb2
  419e55:	nop
  419e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e60:	push   r13
  419e62:	push   r12
  419e64:	push   rbp
  419e65:	push   rdi
  419e66:	push   rsi
  419e67:	push   rbx
  419e68:	sub    rsp,0x428
  419e6f:	test   rcx,rcx
  419e72:	mov    r10,rcx
  419e75:	mov    r13d,r8d
  419e78:	je     0x419fe0
  419e7e:	test   rdx,rdx
  419e81:	je     0x41a010
  419e87:	movzx  r9d,BYTE PTR [rcx]
  419e8b:	test   r8d,r8d
  419e8e:	mov    eax,0x7fffffff
  419e93:	cmovle r13d,eax
  419e97:	test   r9b,r9b
  419e9a:	je     0x419f90
  419ea0:	lea    r8,[rsp+0x20]
  419ea5:	xor    eax,eax
  419ea7:	mov    ecx,0x80
  419eac:	mov    rdi,r8
  419eaf:	rep stos QWORD PTR es:[rdi],rax
  419eb2:	cmp    BYTE PTR [rdx],0x0
  419eb5:	je     0x419ed4
  419eb7:	nop    WORD PTR [rax+rax*1+0x0]
  419ec0:	movzx  eax,BYTE PTR [rdx]
  419ec3:	add    rdx,0x1
  419ec7:	mov    DWORD PTR [rsp+rax*4+0x20],0x1
  419ecf:	cmp    BYTE PTR [rdx],0x0
  419ed2:	jne    0x419ec0
  419ed4:	lea    rbx,[r10+0x1]
  419ed8:	xor    esi,esi
  419eda:	xor    r12d,r12d
  419edd:	jmp    0x419ef3
  419edf:	nop
  419ee0:	lea    ebp,[rsi+0x1]
  419ee3:	mov    rdx,rbx
  419ee6:	movzx  r9d,BYTE PTR [rbx]
  419eea:	add    rbx,0x1
  419eee:	test   r9b,r9b
  419ef1:	je     0x419f1a
  419ef3:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
  419ef8:	test   eax,eax
  419efa:	je     0x419ee0
  419efc:	lea    edi,[rsi+0x1]
  419eff:	cmp    r13d,edi
  419f02:	jg     0x419fb1
  419f08:	movzx  r9d,BYTE PTR [rbx]
  419f0c:	mov    rdx,rbx
  419f0f:	add    rbx,0x1
  419f13:	mov    ebp,edi
  419f15:	test   r9b,r9b
  419f18:	jne    0x419ef3
  419f1a:	sub    rdx,r10
  419f1d:	mov    rcx,r10
  419f20:	movsxd rbp,ebp
  419f23:	call   0x418340
  419f28:	mov    rcx,r12
  419f2b:	mov    rdx,rax
  419f2e:	call   0x417180
  419f33:	lea    ecx,[rsi+0x2]
  419f36:	mov    rdi,rax
  419f39:	mov    edx,0x8
  419f3e:	movsxd rcx,ecx
  419f41:	call   0x40e7a0
  419f46:	test   rdi,rdi
  419f49:	mov    rbx,rax
  419f4c:	mov    QWORD PTR [rax+rbp*8],0x0
  419f54:	lea    r8,[rax+rbp*8]
  419f58:	mov    rdx,rdi
  419f5b:	je     0x419f73
  419f5d:	nop    DWORD PTR [rax]
  419f60:	mov    r9,QWORD PTR [rdx]
  419f63:	sub    r8,0x8
  419f67:	mov    QWORD PTR [r8],r9
  419f6a:	mov    rdx,QWORD PTR [rdx+0x8]
  419f6e:	test   rdx,rdx
  419f71:	jne    0x419f60
  419f73:	mov    rcx,rdi
  419f76:	call   0x4170b0
  419f7b:	mov    rax,rbx
  419f7e:	add    rsp,0x428
  419f85:	pop    rbx
  419f86:	pop    rsi
  419f87:	pop    rdi
  419f88:	pop    rbp
  419f89:	pop    r12
  419f8b:	pop    r13
  419f8d:	ret    
  419f8e:	xchg   ax,ax
  419f90:	mov    ecx,0x8
  419f95:	call   0x40e5c0
  419f9a:	mov    QWORD PTR [rax],0x0
  419fa1:	add    rsp,0x428
  419fa8:	pop    rbx
  419fa9:	pop    rsi
  419faa:	pop    rdi
  419fab:	pop    rbp
  419fac:	pop    r12
  419fae:	pop    r13
  419fb0:	ret    
  419fb1:	lea    rdx,[rbx-0x1]
  419fb5:	mov    rcx,r10
  419fb8:	lea    ebp,[rsi+0x2]
  419fbb:	mov    esi,edi
  419fbd:	sub    rdx,r10
  419fc0:	call   0x418340
  419fc5:	mov    rcx,r12
  419fc8:	mov    rdx,rax
  419fcb:	call   0x417180
  419fd0:	mov    r10,rbx
  419fd3:	mov    r12,rax
  419fd6:	mov    rdx,rbx
  419fd9:	jmp    0x419ee6
  419fde:	xchg   ax,ax
  419fe0:	lea    r8,[rip+0x27203]        # 0x4411ea
  419fe7:	lea    rdx,[rip+0x27363]        # 0x441351
  419fee:	lea    rcx,[rip+0x27058]        # 0x44104d
  419ff5:	call   0x40fd20
  419ffa:	xor    eax,eax
  419ffc:	add    rsp,0x428
  41a003:	pop    rbx
  41a004:	pop    rsi
  41a005:	pop    rdi
  41a006:	pop    rbp
  41a007:	pop    r12
  41a009:	pop    r13
  41a00b:	ret    
  41a00c:	nop    DWORD PTR [rax+0x0]
  41a010:	lea    r8,[rip+0x27264]        # 0x44127b
  41a017:	lea    rdx,[rip+0x27333]        # 0x441351
  41a01e:	lea    rcx,[rip+0x27028]        # 0x44104d
  41a025:	call   0x40fd20
  41a02a:	xor    eax,eax
  41a02c:	add    rsp,0x428
  41a033:	pop    rbx
  41a034:	pop    rsi
  41a035:	pop    rdi
  41a036:	pop    rbp
  41a037:	pop    r12
  41a039:	pop    r13
  41a03b:	ret    
  41a03c:	nop    DWORD PTR [rax+0x0]
  41a040:	push   rsi
  41a041:	push   rbx
  41a042:	sub    rsp,0x28
  41a046:	test   rcx,rcx
  41a049:	je     0x41a080
  41a04b:	mov    rsi,rcx
  41a04e:	mov    rcx,QWORD PTR [rcx]
  41a051:	lea    rbx,[rsi+0x8]
  41a055:	test   rcx,rcx
  41a058:	je     0x41a072
  41a05a:	nop    WORD PTR [rax+rax*1+0x0]
  41a060:	add    rbx,0x8
  41a064:	call   0x40e6e0
  41a069:	mov    rcx,QWORD PTR [rbx-0x8]
  41a06d:	test   rcx,rcx
  41a070:	jne    0x41a060
  41a072:	mov    rcx,rsi
  41a075:	add    rsp,0x28
  41a079:	pop    rbx
  41a07a:	pop    rsi
  41a07b:	jmp    0x40e6e0
  41a080:	add    rsp,0x28
  41a084:	pop    rbx
  41a085:	pop    rsi
  41a086:	ret    
  41a087:	nop    WORD PTR [rax+rax*1+0x0]
  41a090:	push   rdi
  41a091:	push   rsi
  41a092:	push   rbx
  41a093:	sub    rsp,0x20
  41a097:	test   rcx,rcx
  41a09a:	je     0x41a111
  41a09c:	cmp    QWORD PTR [rcx],0x0
  41a0a0:	je     0x41a10a
  41a0a2:	lea    rax,[rcx+0x8]
  41a0a6:	xor    edx,edx
  41a0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0b0:	add    rax,0x8
  41a0b4:	add    edx,0x1
  41a0b7:	cmp    QWORD PTR [rax-0x8],0x0
  41a0bc:	jne    0x41a0b0
  41a0be:	add    edx,0x1
  41a0c1:	movsxd rax,edx
  41a0c4:	mov    rsi,rcx
  41a0c7:	mov    edx,0x8
  41a0cc:	mov    rcx,rax
  41a0cf:	call   0x40e7a0
  41a0d4:	mov    rcx,QWORD PTR [rsi]
  41a0d7:	xor    ebx,ebx
  41a0d9:	mov    rdi,rax
  41a0dc:	test   rcx,rcx
  41a0df:	je     0x41a0f7
  41a0e1:	call   0x4182b0
  41a0e6:	mov    QWORD PTR [rdi+rbx*1],rax
  41a0ea:	add    rbx,0x8
  41a0ee:	mov    rcx,QWORD PTR [rsi+rbx*1]
  41a0f2:	test   rcx,rcx
  41a0f5:	jne    0x41a0e1
  41a0f7:	mov    QWORD PTR [rdi+rbx*1],0x0
  41a0ff:	mov    rax,rdi
  41a102:	add    rsp,0x20
  41a106:	pop    rbx
  41a107:	pop    rsi
  41a108:	pop    rdi
  41a109:	ret    
  41a10a:	mov    eax,0x1
  41a10f:	jmp    0x41a0c4
  41a111:	xor    eax,eax
  41a113:	jmp    0x41a102
  41a115:	nop
  41a116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a120:	push   r14
  41a122:	push   r13
  41a124:	push   r12
  41a126:	push   rbp
  41a127:	push   rdi
  41a128:	push   rsi
  41a129:	push   rbx
  41a12a:	sub    rsp,0x20
  41a12e:	test   rdx,rdx
  41a131:	mov    r12,rcx
  41a134:	mov    r13,rdx
  41a137:	je     0x41a205
  41a13d:	mov    rbx,QWORD PTR [rdx]
  41a140:	lea    rcx,[rip+0x27147]        # 0x44128e
  41a147:	test   r12,r12
  41a14a:	cmove  r12,rcx
  41a14e:	test   rbx,rbx
  41a151:	je     0x41a237
  41a157:	mov    rcx,r12
  41a15a:	call   0x438788
  41a15f:	mov    rcx,rbx
  41a162:	mov    r14,rax
  41a165:	lea    rbx,[r13+0x8]
  41a169:	call   0x438788
  41a16e:	mov    rcx,QWORD PTR [r13+0x8]
  41a172:	lea    rdi,[rax+0x1]
  41a176:	test   rcx,rcx
  41a179:	je     0x41a230
  41a17f:	lea    rsi,[r13+0x10]
  41a183:	mov    ebp,0x1
  41a188:	nop    DWORD PTR [rax+rax*1+0x0]
  41a190:	add    rsi,0x8
  41a194:	add    ebp,0x1
  41a197:	call   0x438788
  41a19c:	mov    rcx,QWORD PTR [rsi-0x8]
  41a1a0:	add    rdi,rax
  41a1a3:	test   rcx,rcx
  41a1a6:	jne    0x41a190
  41a1a8:	sub    ebp,0x1
  41a1ab:	movsxd rbp,ebp
  41a1ae:	imul   rbp,r14
  41a1b2:	lea    rcx,[rbp+rdi*1+0x0]
  41a1b7:	call   0x40e5c0
  41a1bc:	mov    rdx,QWORD PTR [r13+0x0]
  41a1c0:	mov    rcx,rax
  41a1c3:	mov    rsi,rax
  41a1c6:	call   0x4183c0
  41a1cb:	cmp    QWORD PTR [r13+0x8],0x0
  41a1d0:	je     0x41a1f3
  41a1d2:	mov    rdx,r12
  41a1d5:	mov    rcx,rax
  41a1d8:	add    rbx,0x8
  41a1dc:	call   0x4183c0
  41a1e1:	mov    rdx,QWORD PTR [rbx-0x8]
  41a1e5:	mov    rcx,rax
  41a1e8:	call   0x4183c0
  41a1ed:	cmp    QWORD PTR [rbx],0x0
  41a1f1:	jne    0x41a1d2
  41a1f3:	mov    rax,rsi
  41a1f6:	add    rsp,0x20
  41a1fa:	pop    rbx
  41a1fb:	pop    rsi
  41a1fc:	pop    rdi
  41a1fd:	pop    rbp
  41a1fe:	pop    r12
  41a200:	pop    r13
  41a202:	pop    r14
  41a204:	ret    
  41a205:	lea    r8,[rip+0x27083]        # 0x44128f
  41a20c:	lea    rdx,[rip+0x27133]        # 0x441346
  41a213:	lea    rcx,[rip+0x26e33]        # 0x44104d
  41a21a:	call   0x40fd20
  41a21f:	xor    eax,eax
  41a221:	add    rsp,0x20
  41a225:	pop    rbx
  41a226:	pop    rsi
  41a227:	pop    rdi
  41a228:	pop    rbp
  41a229:	pop    r12
  41a22b:	pop    r13
  41a22d:	pop    r14
  41a22f:	ret    
  41a230:	xor    ebp,ebp
  41a232:	jmp    0x41a1b2
  41a237:	add    rsp,0x20
  41a23b:	pop    rbx
  41a23c:	pop    rsi
  41a23d:	pop    rdi
  41a23e:	pop    rbp
  41a23f:	pop    r12
  41a241:	pop    r13
  41a243:	pop    r14
  41a245:	jmp    0x4182b0
  41a24a:	nop    WORD PTR [rax+rax*1+0x0]
  41a250:	push   r13
  41a252:	push   r12
  41a254:	push   rbp
  41a255:	push   rdi
  41a256:	push   rsi
  41a257:	push   rbx
  41a258:	sub    rsp,0x38
  41a25c:	test   rcx,rcx
  41a25f:	mov    QWORD PTR [rsp+0x78],rdx
  41a264:	mov    QWORD PTR [rsp+0x80],r8
  41a26c:	mov    QWORD PTR [rsp+0x88],r9
  41a274:	mov    rdi,rcx
  41a277:	je     0x41a360
  41a27d:	call   0x438788
  41a282:	mov    rbp,rax
  41a285:	mov    rcx,QWORD PTR [rsp+0x78]
  41a28a:	lea    rax,[rsp+0x80]
  41a292:	lea    r13,[rsp+0x78]
  41a297:	mov    QWORD PTR [rsp+0x28],rax
  41a29c:	test   rcx,rcx
  41a29f:	je     0x41a36e
  41a2a5:	call   0x438788
  41a2aa:	mov    rcx,QWORD PTR [rsp+0x80]
  41a2b2:	lea    r12,[rsp+0x88]
  41a2ba:	lea    rsi,[rax+0x1]
  41a2be:	mov    QWORD PTR [rsp+0x28],r12
  41a2c3:	test   rcx,rcx
  41a2c6:	je     0x41a2ee
  41a2c8:	lea    rbx,[rsp+0x90]
  41a2d0:	call   0x438788
  41a2d5:	mov    QWORD PTR [rsp+0x28],rbx
  41a2da:	add    rbx,0x8
  41a2de:	mov    rcx,QWORD PTR [rbx-0x10]
  41a2e2:	lea    r8,[rax+rbp*1]
  41a2e6:	add    rsi,r8
  41a2e9:	test   rcx,rcx
  41a2ec:	jne    0x41a2d0
  41a2ee:	mov    rcx,rsi
  41a2f1:	call   0x40e5c0
  41a2f6:	mov    rdx,QWORD PTR [rsp+0x78]
  41a2fb:	mov    rcx,rax
  41a2fe:	mov    rbp,rax
  41a301:	mov    QWORD PTR [rsp+0x28],r13
  41a306:	call   0x4183c0
  41a30b:	mov    rsi,QWORD PTR [rsp+0x80]
  41a313:	mov    QWORD PTR [rsp+0x28],r12
  41a318:	test   rsi,rsi
  41a31b:	je     0x41a34d
  41a31d:	lea    rbx,[rsp+0x90]
  41a325:	mov    rdx,rdi
  41a328:	mov    rcx,rax
  41a32b:	call   0x4183c0
  41a330:	mov    rdx,rsi
  41a333:	mov    rcx,rax
  41a336:	call   0x4183c0
  41a33b:	mov    QWORD PTR [rsp+0x28],rbx
  41a340:	add    rbx,0x8
  41a344:	mov    rsi,QWORD PTR [rbx-0x10]
  41a348:	test   rsi,rsi
  41a34b:	jne    0x41a325
  41a34d:	mov    rax,rbp
  41a350:	add    rsp,0x38
  41a354:	pop    rbx
  41a355:	pop    rsi
  41a356:	pop    rdi
  41a357:	pop    rbp
  41a358:	pop    r12
  41a35a:	pop    r13
  41a35c:	ret    
  41a35d:	nop    DWORD PTR [rax]
  41a360:	xor    ebp,ebp
  41a362:	lea    rdi,[rip+0x26f25]        # 0x44128e
  41a369:	jmp    0x41a285
  41a36e:	lea    rcx,[rip+0x26f19]        # 0x44128e
  41a375:	call   0x4182b0
  41a37a:	mov    rbp,rax
  41a37d:	jmp    0x41a34d
  41a37f:	nop
  41a380:	push   rdi
  41a381:	push   rsi
  41a382:	push   rbx
  41a383:	sub    rsp,0x20
  41a387:	test   rcx,rcx
  41a38a:	mov    rbx,rcx
  41a38d:	mov    rdi,rdx
  41a390:	mov    rsi,r8
  41a393:	je     0x41a422
  41a399:	test   r8,r8
  41a39c:	je     0x41a440
  41a3a2:	test   rdx,rdx
  41a3a5:	js     0x41a410
  41a3a7:	mov    rcx,rsi
  41a3aa:	call   0x438788
  41a3af:	mov    rcx,rax
  41a3b2:	mov    rax,rbx
  41a3b5:	test   rcx,rcx
  41a3b8:	je     0x41a3e7
  41a3ba:	cmp    rcx,rdi
  41a3bd:	ja     0x41a400
  41a3bf:	sub    rdi,rcx
  41a3c2:	add    rdi,rbx
  41a3c5:	jb     0x41a400
  41a3c7:	cmp    BYTE PTR [rbx],0x0
  41a3ca:	je     0x41a400
  41a3cc:	xor    r9d,r9d
  41a3cf:	nop
  41a3d0:	movzx  eax,BYTE PTR [rsi+r9*1]
  41a3d5:	cmp    BYTE PTR [rbx+r9*1],al
  41a3d9:	jne    0x41a3f0
  41a3db:	add    r9,0x1
  41a3df:	cmp    r9,rcx
  41a3e2:	jne    0x41a3d0
  41a3e4:	mov    rax,rbx
  41a3e7:	add    rsp,0x20
  41a3eb:	pop    rbx
  41a3ec:	pop    rsi
  41a3ed:	pop    rdi
  41a3ee:	ret    
  41a3ef:	nop
  41a3f0:	add    rbx,0x1
  41a3f4:	cmp    rdi,rbx
  41a3f7:	jb     0x41a400
  41a3f9:	cmp    BYTE PTR [rbx],0x0
  41a3fc:	jne    0x41a3cc
  41a3fe:	xchg   ax,ax
  41a400:	xor    eax,eax
  41a402:	add    rsp,0x20
  41a406:	pop    rbx
  41a407:	pop    rsi
  41a408:	pop    rdi
  41a409:	ret    
  41a40a:	nop    WORD PTR [rax+rax*1+0x0]
  41a410:	mov    rdx,rsi
  41a413:	mov    rcx,rbx
  41a416:	add    rsp,0x20
  41a41a:	pop    rbx
  41a41b:	pop    rsi
  41a41c:	pop    rdi
  41a41d:	jmp    0x438760
  41a422:	lea    r8,[rip+0x26e78]        # 0x4412a1
  41a429:	lea    rdx,[rip+0x26f09]        # 0x441339
  41a430:	lea    rcx,[rip+0x26c16]        # 0x44104d
  41a437:	call   0x40fd20
  41a43c:	xor    eax,eax
  41a43e:	jmp    0x41a402
  41a440:	lea    r8,[rip+0x26e6b]        # 0x4412b2
  41a447:	lea    rdx,[rip+0x26eeb]        # 0x441339
  41a44e:	lea    rcx,[rip+0x26bf8]        # 0x44104d
  41a455:	call   0x40fd20
  41a45a:	xor    eax,eax
  41a45c:	add    rsp,0x20
  41a460:	pop    rbx
  41a461:	pop    rsi
  41a462:	pop    rdi
  41a463:	ret    
  41a464:	xchg   ax,ax
  41a466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a470:	push   rdi
  41a471:	push   rsi
  41a472:	push   rbx
  41a473:	sub    rsp,0x20
  41a477:	test   rcx,rcx
  41a47a:	mov    rdi,rcx
  41a47d:	mov    rbx,rdx
  41a480:	je     0x41a510
  41a486:	test   rdx,rdx
  41a489:	je     0x41a530
  41a48f:	mov    rcx,rdx
  41a492:	call   0x438788
  41a497:	mov    rcx,rdi
  41a49a:	mov    rsi,rax
  41a49d:	call   0x438788
  41a4a2:	test   rsi,rsi
  41a4a5:	mov    r8,rax
  41a4a8:	mov    rax,rdi
  41a4ab:	je     0x41a4e7
  41a4ad:	cmp    rsi,r8
  41a4b0:	ja     0x41a500
  41a4b2:	mov    r9,r8
  41a4b5:	sub    r9,rsi
  41a4b8:	add    r9,rdi
  41a4bb:	jb     0x41a500
  41a4bd:	movzx  eax,BYTE PTR [rbx]
  41a4c0:	cmp    BYTE PTR [r9],al
  41a4c3:	jne    0x41a4f0
  41a4c5:	xor    r8d,r8d
  41a4c8:	jmp    0x41a4db
  41a4ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a4d0:	movzx  edx,BYTE PTR [rbx+r8*1]
  41a4d5:	cmp    BYTE PTR [r9+r8*1],dl
  41a4d9:	jne    0x41a4f0
  41a4db:	add    r8,0x1
  41a4df:	cmp    r8,rsi
  41a4e2:	jne    0x41a4d0
  41a4e4:	mov    rax,r9
  41a4e7:	add    rsp,0x20
  41a4eb:	pop    rbx
  41a4ec:	pop    rsi
  41a4ed:	pop    rdi
  41a4ee:	ret    
  41a4ef:	nop
  41a4f0:	sub    r9,0x1
  41a4f4:	cmp    rdi,r9
  41a4f7:	jbe    0x41a4c0
  41a4f9:	nop    DWORD PTR [rax+0x0]
  41a500:	xor    eax,eax
  41a502:	add    rsp,0x20
  41a506:	pop    rbx
  41a507:	pop    rsi
  41a508:	pop    rdi
  41a509:	ret    
  41a50a:	nop    WORD PTR [rax+rax*1+0x0]
  41a510:	lea    r8,[rip+0x26d8a]        # 0x4412a1
  41a517:	lea    rdx,[rip+0x26e11]        # 0x44132f
  41a51e:	lea    rcx,[rip+0x26b28]        # 0x44104d
  41a525:	call   0x40fd20
  41a52a:	xor    eax,eax
  41a52c:	jmp    0x41a502
  41a52e:	xchg   ax,ax
  41a530:	lea    r8,[rip+0x26d7b]        # 0x4412b2
  41a537:	lea    rdx,[rip+0x26df1]        # 0x44132f
  41a53e:	lea    rcx,[rip+0x26b08]        # 0x44104d
  41a545:	call   0x40fd20
  41a54a:	xor    eax,eax
  41a54c:	add    rsp,0x20
  41a550:	pop    rbx
  41a551:	pop    rsi
  41a552:	pop    rdi
  41a553:	ret    
  41a554:	xchg   ax,ax
  41a556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a560:	push   rdi
  41a561:	push   rsi
  41a562:	push   rbx
  41a563:	sub    rsp,0x20
  41a567:	test   rcx,rcx
  41a56a:	mov    rdi,rcx
  41a56d:	mov    rbx,rdx
  41a570:	mov    rsi,r8
  41a573:	je     0x41a625
  41a579:	test   r8,r8
  41a57c:	je     0x41a643
  41a582:	test   rdx,rdx
  41a585:	js     0x41a667
  41a58b:	mov    rcx,rsi
  41a58e:	call   0x438788
  41a593:	lea    r10,[rdi+rbx*1]
  41a597:	cmp    rdi,r10
  41a59a:	jae    0x41a679
  41a5a0:	cmp    BYTE PTR [rdi],0x0
  41a5a3:	je     0x41a679
  41a5a9:	mov    r9,rdi
  41a5ac:	jmp    0x41a5b6
  41a5ae:	xchg   ax,ax
  41a5b0:	cmp    BYTE PTR [r9],0x0
  41a5b4:	je     0x41a620
  41a5b6:	add    r9,0x1
  41a5ba:	cmp    r9,r10
  41a5bd:	jne    0x41a5b0
  41a5bf:	lea    rdx,[rdi+rax*1]
  41a5c3:	cmp    r10,rdx
  41a5c6:	jb     0x41a610
  41a5c8:	sub    r10,rax
  41a5cb:	cmp    rdi,r10
  41a5ce:	ja     0x41a610
  41a5d0:	test   rax,rax
  41a5d3:	je     0x41a5f6
  41a5d5:	movzx  ebx,BYTE PTR [rsi]
  41a5d8:	cmp    BYTE PTR [r10],bl
  41a5db:	jne    0x41a601
  41a5dd:	xor    r9d,r9d
  41a5e0:	jmp    0x41a5ed
  41a5e2:	movzx  ecx,BYTE PTR [rsi+r9*1]
  41a5e7:	cmp    BYTE PTR [r10+r9*1],cl
  41a5eb:	jne    0x41a601
  41a5ed:	add    r9,0x1
  41a5f1:	cmp    r9,rax
  41a5f4:	jne    0x41a5e2
  41a5f6:	mov    rax,r10
  41a5f9:	add    rsp,0x20
  41a5fd:	pop    rbx
  41a5fe:	pop    rsi
  41a5ff:	pop    rdi
  41a600:	ret    
  41a601:	sub    r10,0x1
  41a605:	cmp    rdi,r10
  41a608:	jbe    0x41a5d0
  41a60a:	nop    WORD PTR [rax+rax*1+0x0]
  41a610:	xor    eax,eax
  41a612:	add    rsp,0x20
  41a616:	pop    rbx
  41a617:	pop    rsi
  41a618:	pop    rdi
  41a619:	ret    
  41a61a:	nop    WORD PTR [rax+rax*1+0x0]
  41a620:	mov    r10,r9
  41a623:	jmp    0x41a5bf
  41a625:	lea    r8,[rip+0x26c75]        # 0x4412a1
  41a62c:	lea    rdx,[rip+0x26cee]        # 0x441321
  41a633:	lea    rcx,[rip+0x26a13]        # 0x44104d
  41a63a:	call   0x40fd20
  41a63f:	xor    eax,eax
  41a641:	jmp    0x41a612
  41a643:	lea    r8,[rip+0x26c68]        # 0x4412b2
  41a64a:	lea    rdx,[rip+0x26cd0]        # 0x441321
  41a651:	lea    rcx,[rip+0x269f5]        # 0x44104d
  41a658:	call   0x40fd20
  41a65d:	xor    eax,eax
  41a65f:	add    rsp,0x20
  41a663:	pop    rbx
  41a664:	pop    rsi
  41a665:	pop    rdi
  41a666:	ret    
  41a667:	mov    rdx,rsi
  41a66a:	mov    rcx,rdi
  41a66d:	add    rsp,0x20
  41a671:	pop    rbx
  41a672:	pop    rsi
  41a673:	pop    rdi
  41a674:	jmp    0x41a470
  41a679:	mov    r10,rdi
  41a67c:	jmp    0x41a5bf
  41a681:	nop    DWORD PTR [rax+rax*1+0x0]
  41a686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a690:	push   rdi
  41a691:	push   rsi
  41a692:	push   rbx
  41a693:	sub    rsp,0x20
  41a697:	test   rcx,rcx
  41a69a:	mov    rsi,rcx
  41a69d:	mov    rdi,rdx
  41a6a0:	je     0x41a6e5
  41a6a2:	test   rdx,rdx
  41a6a5:	je     0x41a710
  41a6a7:	call   0x438788
  41a6ac:	mov    rcx,rdi
  41a6af:	mov    rbx,rax
  41a6b2:	call   0x438788
  41a6b7:	mov    rdx,rax
  41a6ba:	xor    eax,eax
  41a6bc:	cmp    ebx,edx
  41a6be:	jl     0x41a6dd
  41a6c0:	movsxd rdx,edx
  41a6c3:	movsxd rbx,ebx
  41a6c6:	sub    rbx,rdx
  41a6c9:	mov    rdx,rdi
  41a6cc:	lea    rcx,[rsi+rbx*1]
  41a6d0:	call   0x4387a0
  41a6d5:	test   eax,eax
  41a6d7:	sete   al
  41a6da:	movzx  eax,al
  41a6dd:	add    rsp,0x20
  41a6e1:	pop    rbx
  41a6e2:	pop    rsi
  41a6e3:	pop    rdi
  41a6e4:	ret    
  41a6e5:	lea    r8,[rip+0x26af2]        # 0x4411de
  41a6ec:	lea    rdx,[rip+0x26c1d]        # 0x441310
  41a6f3:	lea    rcx,[rip+0x26953]        # 0x44104d
  41a6fa:	call   0x40fd20
  41a6ff:	xor    eax,eax
  41a701:	add    rsp,0x20
  41a705:	pop    rbx
  41a706:	pop    rsi
  41a707:	pop    rdi
  41a708:	ret    
  41a709:	nop    DWORD PTR [rax+0x0]
  41a710:	lea    r8,[rip+0x26baa]        # 0x4412c1
  41a717:	lea    rdx,[rip+0x26bf2]        # 0x441310
  41a71e:	lea    rcx,[rip+0x26928]        # 0x44104d
  41a725:	call   0x40fd20
  41a72a:	xor    eax,eax
  41a72c:	add    rsp,0x20
  41a730:	pop    rbx
  41a731:	pop    rsi
  41a732:	pop    rdi
  41a733:	ret    
  41a734:	xchg   ax,ax
  41a736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a740:	push   rdi
  41a741:	push   rsi
  41a742:	push   rbx
  41a743:	sub    rsp,0x20
  41a747:	test   rcx,rcx
  41a74a:	mov    rbx,rcx
  41a74d:	mov    rsi,rdx
  41a750:	je     0x41a790
  41a752:	test   rdx,rdx
  41a755:	je     0x41a7b4
  41a757:	call   0x438788
  41a75c:	mov    rcx,rsi
  41a75f:	mov    rdi,rax
  41a762:	call   0x438788
  41a767:	mov    r8,rax
  41a76a:	xor    eax,eax
  41a76c:	cmp    r8d,edi
  41a76f:	jg     0x41a787
  41a771:	movsxd r8,r8d
  41a774:	mov    rdx,rsi
  41a777:	mov    rcx,rbx
  41a77a:	call   0x438780
  41a77f:	test   eax,eax
  41a781:	sete   al
  41a784:	movzx  eax,al
  41a787:	add    rsp,0x20
  41a78b:	pop    rbx
  41a78c:	pop    rsi
  41a78d:	pop    rdi
  41a78e:	ret    
  41a78f:	nop
  41a790:	lea    r8,[rip+0x26a47]        # 0x4411de
  41a797:	lea    rdx,[rip+0x26b52]        # 0x4412f0
  41a79e:	lea    rcx,[rip+0x268a8]        # 0x44104d
  41a7a5:	call   0x40fd20
  41a7aa:	xor    eax,eax
  41a7ac:	add    rsp,0x20
  41a7b0:	pop    rbx
  41a7b1:	pop    rsi
  41a7b2:	pop    rdi
  41a7b3:	ret    
  41a7b4:	lea    r8,[rip+0x26b15]        # 0x4412d0
  41a7bb:	lea    rdx,[rip+0x26b2e]        # 0x4412f0
  41a7c2:	lea    rcx,[rip+0x26884]        # 0x44104d
  41a7c9:	call   0x40fd20
  41a7ce:	xor    eax,eax
  41a7d0:	add    rsp,0x20
  41a7d4:	pop    rbx
  41a7d5:	pop    rsi
  41a7d6:	pop    rdi
  41a7d7:	ret    
  41a7d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a7e0:	sub    rsp,0x28
  41a7e4:	test   rcx,rcx
  41a7e7:	je     0x41a803
  41a7e9:	xor    eax,eax
  41a7eb:	cmp    QWORD PTR [rcx],0x0
  41a7ef:	je     0x41a7fe
  41a7f1:	lea    edx,[rax+0x1]
  41a7f4:	cmp    QWORD PTR [rcx+rdx*8],0x0
  41a7f9:	mov    rax,rdx
  41a7fc:	jne    0x41a7f1
  41a7fe:	add    rsp,0x28
  41a802:	ret    
  41a803:	lea    r8,[rip+0x26a85]        # 0x44128f
  41a80a:	lea    rdx,[rip+0x26ace]        # 0x4412df
  41a811:	lea    rcx,[rip+0x26835]        # 0x44104d
  41a818:	call   0x40fd20
  41a81d:	xor    eax,eax
  41a81f:	add    rsp,0x28
  41a823:	ret    
  41a824:	nop
  41a825:	nop
  41a826:	nop
  41a827:	nop
  41a828:	nop
  41a829:	nop
  41a82a:	nop
  41a82b:	nop
  41a82c:	nop
  41a82d:	nop
  41a82e:	nop
  41a82f:	nop
  41a830:	push   rbx
  41a831:	sub    rsp,0x20
  41a835:	mov    rax,rdx
  41a838:	add    rax,QWORD PTR [rcx+0x8]
  41a83c:	cmp    rax,QWORD PTR [rcx+0x10]
  41a840:	jb     0x41a87a
  41a842:	add    rax,0x1
  41a846:	mov    rdx,0xffffffffffffffff
  41a84d:	js     0x41a868
  41a84f:	cmp    rax,0x1
  41a853:	mov    edx,0x1
  41a858:	jbe    0x41a868
  41a85a:	nop    WORD PTR [rax+rax*1+0x0]
  41a860:	add    rdx,rdx
  41a863:	cmp    rax,rdx
  41a866:	ja     0x41a860
  41a868:	mov    rbx,rcx
  41a86b:	mov    QWORD PTR [rcx+0x10],rdx
  41a86f:	mov    rcx,QWORD PTR [rcx]
  41a872:	call   0x40e670
  41a877:	mov    QWORD PTR [rbx],rax
  41a87a:	add    rsp,0x20
  41a87e:	pop    rbx
  41a87f:	ret    
  41a880:	push   rsi
  41a881:	push   rbx
  41a882:	sub    rsp,0x28
  41a886:	mov    rsi,rcx
  41a889:	mov    ecx,0x18
  41a88e:	call   0x416130
  41a893:	cmp    rsi,0x2
  41a897:	mov    edx,0x2
  41a89c:	mov    rbx,rax
  41a89f:	mov    rcx,rax
  41a8a2:	mov    QWORD PTR [rax+0x10],0x0
  41a8aa:	mov    QWORD PTR [rax+0x8],0x0
  41a8b2:	mov    QWORD PTR [rax],0x0
  41a8b9:	cmovae rdx,rsi
  41a8bd:	call   0x41a830
  41a8c2:	mov    rax,QWORD PTR [rbx]
  41a8c5:	mov    BYTE PTR [rax],0x0
  41a8c8:	mov    rax,rbx
  41a8cb:	add    rsp,0x28
  41a8cf:	pop    rbx
  41a8d0:	pop    rsi
  41a8d1:	ret    
  41a8d2:	nop    DWORD PTR [rax+0x0]
  41a8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8e0:	push   rsi
  41a8e1:	push   rbx
  41a8e2:	sub    rsp,0x28
  41a8e6:	test   rcx,rcx
  41a8e9:	mov    rsi,rcx
  41a8ec:	je     0x41a920
  41a8ee:	test   edx,edx
  41a8f0:	jne    0x41a910
  41a8f2:	mov    rbx,QWORD PTR [rsi]
  41a8f5:	mov    rdx,rsi
  41a8f8:	mov    ecx,0x18
  41a8fd:	call   0x4167c0
  41a902:	mov    rax,rbx
  41a905:	add    rsp,0x28
  41a909:	pop    rbx
  41a90a:	pop    rsi
  41a90b:	ret    
  41a90c:	nop    DWORD PTR [rax+0x0]
  41a910:	mov    rcx,QWORD PTR [rsi]
  41a913:	xor    ebx,ebx
  41a915:	call   0x40e6e0
  41a91a:	jmp    0x41a8f5
  41a91c:	nop    DWORD PTR [rax+0x0]
  41a920:	lea    r8,[rip+0x26d99]        # 0x4416c0
  41a927:	lea    rdx,[rip+0x270e2]        # 0x441a10
  41a92e:	lea    rcx,[rip+0x26d9a]        # 0x4416cf
  41a935:	call   0x40fd20
  41a93a:	xor    eax,eax
  41a93c:	add    rsp,0x28
  41a940:	pop    rbx
  41a941:	pop    rsi
  41a942:	ret    
  41a943:	nop    DWORD PTR [rax]
  41a946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a950:	xor    eax,eax
  41a952:	mov    r8,QWORD PTR [rdx+0x8]
  41a956:	cmp    r8,QWORD PTR [rcx+0x8]
  41a95a:	je     0x41a960
  41a95c:	repz ret 
  41a95e:	xchg   ax,ax
  41a960:	test   r8,r8
  41a963:	mov    r9,QWORD PTR [rcx]
  41a966:	mov    r10,QWORD PTR [rdx]
  41a969:	je     0x41a995
  41a96b:	movzx  ecx,BYTE PTR [r10]
  41a96f:	cmp    BYTE PTR [r9],cl
  41a972:	jne    0x41a95c
  41a974:	lea    rcx,[r8-0x1]
  41a978:	xor    eax,eax
  41a97a:	jmp    0x41a990
  41a97c:	nop    DWORD PTR [rax+0x0]
  41a980:	movzx  edx,BYTE PTR [r9+rax*1+0x1]
  41a986:	add    rax,0x1
  41a98a:	cmp    dl,BYTE PTR [r10+rax*1]
  41a98e:	jne    0x41a9a0
  41a990:	cmp    rax,rcx
  41a993:	jne    0x41a980
  41a995:	mov    eax,0x1
  41a99a:	ret    
  41a99b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a9a0:	xor    eax,eax
  41a9a2:	ret    
  41a9a3:	nop    DWORD PTR [rax]
  41a9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9b0:	mov    r8,QWORD PTR [rcx]
  41a9b3:	mov    rcx,QWORD PTR [rcx+0x8]
  41a9b7:	test   rcx,rcx
  41a9ba:	je     0x41a9dc
  41a9bc:	add    rcx,r8
  41a9bf:	xor    eax,eax
  41a9c1:	mov    edx,eax
  41a9c3:	add    r8,0x1
  41a9c7:	shl    edx,0x5
  41a9ca:	sub    edx,eax
  41a9cc:	mov    eax,edx
  41a9ce:	movsx  edx,BYTE PTR [r8-0x1]
  41a9d3:	add    eax,edx
  41a9d5:	cmp    r8,rcx
  41a9d8:	jne    0x41a9c1
  41a9da:	repz ret 
  41a9dc:	xor    eax,eax
  41a9de:	ret    
  41a9df:	nop
  41a9e0:	sub    rsp,0x28
  41a9e4:	test   rcx,rcx
  41a9e7:	je     0x41aa10
  41a9e9:	mov    rax,QWORD PTR [rcx+0x8]
  41a9ed:	cmp    rdx,rax
  41a9f0:	cmova  rdx,rax
  41a9f4:	mov    rax,QWORD PTR [rcx]
  41a9f7:	mov    QWORD PTR [rcx+0x8],rdx
  41a9fb:	mov    BYTE PTR [rax+rdx*1],0x0
  41a9ff:	mov    rax,rcx
  41aa02:	add    rsp,0x28
  41aa06:	ret    
  41aa07:	nop    WORD PTR [rax+rax*1+0x0]
  41aa10:	lea    r8,[rip+0x26ca9]        # 0x4416c0
  41aa17:	lea    rdx,[rip+0x26fc2]        # 0x4419e0
  41aa1e:	lea    rcx,[rip+0x26caa]        # 0x4416cf
  41aa25:	call   0x40fd20
  41aa2a:	xor    eax,eax
  41aa2c:	add    rsp,0x28
  41aa30:	ret    
  41aa31:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa40:	push   rsi
  41aa41:	push   rbx
  41aa42:	sub    rsp,0x28
  41aa46:	test   rcx,rcx
  41aa49:	mov    rbx,rcx
  41aa4c:	mov    rsi,rdx
  41aa4f:	je     0x41aa81
  41aa51:	cmp    QWORD PTR [rcx+0x10],rdx
  41aa55:	jbe    0x41aa70
  41aa57:	mov    rax,QWORD PTR [rbx]
  41aa5a:	mov    QWORD PTR [rbx+0x8],rsi
  41aa5e:	mov    BYTE PTR [rax+rsi*1],0x0
  41aa62:	mov    rax,rbx
  41aa65:	add    rsp,0x28
  41aa69:	pop    rbx
  41aa6a:	pop    rsi
  41aa6b:	ret    
  41aa6c:	nop    DWORD PTR [rax+0x0]
  41aa70:	mov    rdx,rsi
  41aa73:	sub    rdx,QWORD PTR [rbx+0x8]
  41aa77:	mov    rcx,rbx
  41aa7a:	call   0x41a830
  41aa7f:	jmp    0x41aa57
  41aa81:	lea    r8,[rip+0x26c38]        # 0x4416c0
  41aa88:	lea    rdx,[rip+0x26f31]        # 0x4419c0
  41aa8f:	lea    rcx,[rip+0x26c39]        # 0x4416cf
  41aa96:	call   0x40fd20
  41aa9b:	xor    eax,eax
  41aa9d:	add    rsp,0x28
  41aaa1:	pop    rbx
  41aaa2:	pop    rsi
  41aaa3:	ret    
  41aaa4:	xchg   ax,ax
  41aaa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aab0:	push   r13
  41aab2:	push   r12
  41aab4:	push   rbp
  41aab5:	push   rdi
  41aab6:	push   rsi
  41aab7:	push   rbx
  41aab8:	sub    rsp,0x38
  41aabc:	test   rcx,rcx
  41aabf:	mov    rbx,rcx
  41aac2:	mov    rbp,r8
  41aac5:	mov    rsi,r9
  41aac8:	je     0x41ac00
  41aace:	test   r9,r9
  41aad1:	mov    r12,rcx
  41aad4:	je     0x41aaf5
  41aad6:	test   r8,r8
  41aad9:	jne    0x41ab05
  41aadb:	lea    r8,[rip+0x26bf2]        # 0x4416d4
  41aae2:	lea    rdx,[rip+0x26eb7]        # 0x4419a0
  41aae9:	lea    rcx,[rip+0x26bdf]        # 0x4416cf
  41aaf0:	call   0x40fd20
  41aaf5:	mov    rax,r12
  41aaf8:	add    rsp,0x38
  41aafc:	pop    rbx
  41aafd:	pop    rsi
  41aafe:	pop    rdi
  41aaff:	pop    rbp
  41ab00:	pop    r12
  41ab02:	pop    r13
  41ab04:	ret    
  41ab05:	test   r9,r9
  41ab08:	js     0x41abd0
  41ab0e:	test   rdx,rdx
  41ab11:	js     0x41abee
  41ab17:	cmp    rdx,QWORD PTR [rbx+0x8]
  41ab1b:	mov    rdi,rdx
  41ab1e:	ja     0x41ab90
  41ab20:	mov    rax,QWORD PTR [rbx]
  41ab23:	cmp    rbp,rax
  41ab26:	jb     0x41ab38
  41ab28:	mov    rdx,rax
  41ab2b:	add    rdx,QWORD PTR [rbx+0x8]
  41ab2f:	cmp    rbp,rdx
  41ab32:	jbe    0x41ac50
  41ab38:	mov    rdx,rsi
  41ab3b:	mov    rcx,rbx
  41ab3e:	call   0x41a830
  41ab43:	mov    r8,QWORD PTR [rbx+0x8]
  41ab47:	cmp    r8,rdi
  41ab4a:	ja     0x41ac30
  41ab50:	cmp    rsi,0x1
  41ab54:	je     0x41abc0
  41ab56:	add    rdi,QWORD PTR [rbx]
  41ab59:	mov    r8,rsi
  41ab5c:	mov    rdx,rbp
  41ab5f:	mov    rcx,rdi
  41ab62:	call   0x4387f0
  41ab67:	mov    rcx,QWORD PTR [rbx]
  41ab6a:	add    rsi,QWORD PTR [rbx+0x8]
  41ab6e:	mov    r12,rbx
  41ab71:	mov    rax,r12
  41ab74:	mov    QWORD PTR [rbx+0x8],rsi
  41ab78:	mov    BYTE PTR [rcx+rsi*1],0x0
  41ab7c:	add    rsp,0x38
  41ab80:	pop    rbx
  41ab81:	pop    rsi
  41ab82:	pop    rdi
  41ab83:	pop    rbp
  41ab84:	pop    r12
  41ab86:	pop    r13
  41ab88:	ret    
  41ab89:	nop    DWORD PTR [rax+0x0]
  41ab90:	lea    r8,[rip+0x26b55]        # 0x4416ec
  41ab97:	lea    rdx,[rip+0x26e02]        # 0x4419a0
  41ab9e:	lea    rcx,[rip+0x26b2a]        # 0x4416cf
  41aba5:	mov    r12,rbx
  41aba8:	call   0x40fd20
  41abad:	mov    rax,r12
  41abb0:	add    rsp,0x38
  41abb4:	pop    rbx
  41abb5:	pop    rsi
  41abb6:	pop    rdi
  41abb7:	pop    rbp
  41abb8:	pop    r12
  41abba:	pop    r13
  41abbc:	ret    
  41abbd:	nop    DWORD PTR [rax]
  41abc0:	movzx  edx,BYTE PTR [rbp+0x0]
  41abc4:	mov    rax,QWORD PTR [rbx]
  41abc7:	mov    BYTE PTR [rax+rdi*1],dl
  41abca:	mov    rcx,QWORD PTR [rbx]
  41abcd:	jmp    0x41ab6a
  41abcf:	nop
  41abd0:	mov    rcx,rbp
  41abd3:	mov    QWORD PTR [rsp+0x28],rdx
  41abd8:	call   0x438788
  41abdd:	mov    rdx,QWORD PTR [rsp+0x28]
  41abe2:	mov    rsi,rax
  41abe5:	test   rdx,rdx
  41abe8:	jns    0x41ab17
  41abee:	mov    rdi,QWORD PTR [rbx+0x8]
  41abf2:	jmp    0x41ab20
  41abf7:	nop    WORD PTR [rax+rax*1+0x0]
  41ac00:	lea    r8,[rip+0x26ab9]        # 0x4416c0
  41ac07:	lea    rdx,[rip+0x26d92]        # 0x4419a0
  41ac0e:	lea    rcx,[rip+0x26aba]        # 0x4416cf
  41ac15:	xor    r12d,r12d
  41ac18:	call   0x40fd20
  41ac1d:	mov    rax,r12
  41ac20:	add    rsp,0x38
  41ac24:	pop    rbx
  41ac25:	pop    rsi
  41ac26:	pop    rdi
  41ac27:	pop    rbp
  41ac28:	pop    r12
  41ac2a:	pop    r13
  41ac2c:	ret    
  41ac2d:	nop    DWORD PTR [rax]
  41ac30:	mov    rcx,QWORD PTR [rbx]
  41ac33:	lea    rax,[rdi+rsi*1]
  41ac37:	sub    r8,rdi
  41ac3a:	lea    rdx,[rcx+rdi*1]
  41ac3e:	add    rcx,rax
  41ac41:	call   0x4387e8
  41ac46:	jmp    0x41ab50
  41ac4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac50:	mov    rcx,rbx
  41ac53:	mov    rdx,rsi
  41ac56:	sub    rbp,rax
  41ac59:	call   0x41a830
  41ac5e:	mov    r8,QWORD PTR [rbx+0x8]
  41ac62:	mov    rcx,QWORD PTR [rbx]
  41ac65:	cmp    r8,rdi
  41ac68:	lea    r13,[rcx+rbp*1]
  41ac6c:	ja     0x41acc0
  41ac6e:	xor    r12d,r12d
  41ac71:	cmp    rbp,rdi
  41ac74:	jb     0x41aca0
  41ac76:	cmp    rsi,r12
  41ac79:	jbe    0x41ab6a
  41ac7f:	lea    rdx,[r12+rsi*1]
  41ac83:	add    rdi,r12
  41ac86:	mov    r8,rsi
  41ac89:	add    rcx,rdi
  41ac8c:	sub    r8,r12
  41ac8f:	add    rdx,r13
  41ac92:	call   0x4387f0
  41ac97:	mov    rcx,QWORD PTR [rbx]
  41ac9a:	jmp    0x41ab6a
  41ac9f:	nop
  41aca0:	mov    r12,rdi
  41aca3:	mov    rdx,r13
  41aca6:	sub    r12,rbp
  41aca9:	cmp    r12,rsi
  41acac:	cmova  r12,rsi
  41acb0:	add    rcx,rdi
  41acb3:	mov    r8,r12
  41acb6:	call   0x4387f0
  41acbb:	mov    rcx,QWORD PTR [rbx]
  41acbe:	jmp    0x41ac76
  41acc0:	lea    rax,[rdi+rsi*1]
  41acc4:	lea    rdx,[rcx+rdi*1]
  41acc8:	sub    r8,rdi
  41accb:	add    rcx,rax
  41acce:	call   0x4387e8
  41acd3:	mov    rcx,QWORD PTR [rbx]
  41acd6:	jmp    0x41ac6e
  41acd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ace0:	push   rbx
  41ace1:	sub    rsp,0x20
  41ace5:	test   rcx,rcx
  41ace8:	mov    rbx,rcx
  41aceb:	mov    r8,rdx
  41acee:	je     0x41ad10
  41acf0:	test   rdx,rdx
  41acf3:	je     0x41ad32
  41acf5:	mov    r9,0xffffffffffffffff
  41acfc:	mov    rdx,r9
  41acff:	add    rsp,0x20
  41ad03:	pop    rbx
  41ad04:	jmp    0x41aab0
  41ad09:	nop    DWORD PTR [rax+0x0]
  41ad10:	lea    r8,[rip+0x269a9]        # 0x4416c0
  41ad17:	lea    rdx,[rip+0x26c42]        # 0x441960
  41ad1e:	lea    rcx,[rip+0x269aa]        # 0x4416cf
  41ad25:	call   0x40fd20
  41ad2a:	xor    eax,eax
  41ad2c:	add    rsp,0x20
  41ad30:	pop    rbx
  41ad31:	ret    
  41ad32:	lea    r8,[rip+0x269c6]        # 0x4416ff
  41ad39:	lea    rdx,[rip+0x26c20]        # 0x441960
  41ad40:	lea    rcx,[rip+0x26988]        # 0x4416cf
  41ad47:	call   0x40fd20
  41ad4c:	mov    rax,rbx
  41ad4f:	add    rsp,0x20
  41ad53:	pop    rbx
  41ad54:	ret    
  41ad55:	nop
  41ad56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad60:	push   rsi
  41ad61:	push   rbx
  41ad62:	sub    rsp,0x28
  41ad66:	test   rcx,rcx
  41ad69:	mov    rbx,rcx
  41ad6c:	mov    rsi,rdx
  41ad6f:	je     0x41adb0
  41ad71:	test   rdx,rdx
  41ad74:	je     0x41add3
  41ad76:	cmp    QWORD PTR [rcx],rdx
  41ad79:	je     0x41ada0
  41ad7b:	xor    edx,edx
  41ad7d:	mov    rcx,rbx
  41ad80:	call   0x41a9e0
  41ad85:	mov    rdx,rsi
  41ad88:	mov    rcx,rbx
  41ad8b:	call   0x41ace0
  41ad90:	mov    rax,rbx
  41ad93:	add    rsp,0x28
  41ad97:	pop    rbx
  41ad98:	pop    rsi
  41ad99:	ret    
  41ad9a:	nop    WORD PTR [rax+rax*1+0x0]
  41ada0:	mov    rax,rcx
  41ada3:	add    rsp,0x28
  41ada7:	pop    rbx
  41ada8:	pop    rsi
  41ada9:	ret    
  41adaa:	nop    WORD PTR [rax+rax*1+0x0]
  41adb0:	lea    r8,[rip+0x26909]        # 0x4416c0
  41adb7:	lea    rdx,[rip+0x26c42]        # 0x441a00
  41adbe:	lea    rcx,[rip+0x2690a]        # 0x4416cf
  41adc5:	call   0x40fd20
  41adca:	xor    eax,eax
  41adcc:	add    rsp,0x28
  41add0:	pop    rbx
  41add1:	pop    rsi
  41add2:	ret    
  41add3:	lea    r8,[rip+0x26931]        # 0x44170b
  41adda:	lea    rdx,[rip+0x26c1f]        # 0x441a00
  41ade1:	lea    rcx,[rip+0x268e7]        # 0x4416cf
  41ade8:	call   0x40fd20
  41aded:	mov    rax,rbx
  41adf0:	add    rsp,0x28
  41adf4:	pop    rbx
  41adf5:	pop    rsi
  41adf6:	ret    
  41adf7:	nop    WORD PTR [rax+rax*1+0x0]
  41ae00:	push   rbx
  41ae01:	sub    rsp,0x20
  41ae05:	test   rcx,rcx
  41ae08:	mov    rbx,rcx
  41ae0b:	je     0x41ae60
  41ae0d:	test   r8,r8
  41ae10:	je     0x41ae40
  41ae12:	test   rdx,rdx
  41ae15:	jne    0x41ae40
  41ae17:	lea    r8,[rip+0x268b6]        # 0x4416d4
  41ae1e:	lea    rdx,[rip+0x26b1b]        # 0x441940
  41ae25:	lea    rcx,[rip+0x268a3]        # 0x4416cf
  41ae2c:	call   0x40fd20
  41ae31:	mov    rax,rbx
  41ae34:	add    rsp,0x20
  41ae38:	pop    rbx
  41ae39:	ret    
  41ae3a:	nop    WORD PTR [rax+rax*1+0x0]
  41ae40:	mov    r9,r8
  41ae43:	mov    rcx,rbx
  41ae46:	mov    r8,rdx
  41ae49:	mov    rdx,0xffffffffffffffff
  41ae50:	add    rsp,0x20
  41ae54:	pop    rbx
  41ae55:	jmp    0x41aab0
  41ae5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ae60:	lea    r8,[rip+0x26859]        # 0x4416c0
  41ae67:	lea    rdx,[rip+0x26ad2]        # 0x441940
  41ae6e:	lea    rcx,[rip+0x2685a]        # 0x4416cf
  41ae75:	call   0x40fd20
  41ae7a:	xor    eax,eax
  41ae7c:	add    rsp,0x20
  41ae80:	pop    rbx
  41ae81:	ret    
  41ae82:	nop    DWORD PTR [rax+0x0]
  41ae86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae90:	push   rdi
  41ae91:	push   rsi
  41ae92:	push   rbx
  41ae93:	sub    rsp,0x20
  41ae97:	test   rcx,rcx
  41ae9a:	je     0x41aea1
  41ae9c:	cmp    BYTE PTR [rcx],0x0
  41ae9f:	jne    0x41aeb2
  41aea1:	mov    ecx,0x2
  41aea6:	add    rsp,0x20
  41aeaa:	pop    rbx
  41aeab:	pop    rsi
  41aeac:	pop    rdi
  41aead:	jmp    0x41a880
  41aeb2:	mov    rbx,rcx
  41aeb5:	call   0x438788
  41aeba:	lea    ecx,[rax+0x2]
  41aebd:	mov    rdi,rax
  41aec0:	movsxd rcx,ecx
  41aec3:	call   0x41a880
  41aec8:	movsxd r8,edi
  41aecb:	mov    rsi,rax
  41aece:	mov    rdx,rbx
  41aed1:	mov    rcx,rax
  41aed4:	call   0x41ae00
  41aed9:	mov    rax,rsi
  41aedc:	add    rsp,0x20
  41aee0:	pop    rbx
  41aee1:	pop    rsi
  41aee2:	pop    rdi
  41aee3:	ret    
  41aee4:	xchg   ax,ax
  41aee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aef0:	push   rdi
  41aef1:	push   rsi
  41aef2:	push   rbx
  41aef3:	sub    rsp,0x20
  41aef7:	test   rdx,rdx
  41aefa:	js     0x41af30
  41aefc:	mov    rsi,rcx
  41aeff:	mov    rcx,rdx
  41af02:	mov    rbx,rdx
  41af05:	call   0x41a880
  41af0a:	test   rsi,rsi
  41af0d:	mov    rdi,rax
  41af10:	je     0x41af20
  41af12:	mov    r8,rbx
  41af15:	mov    rdx,rsi
  41af18:	mov    rcx,rax
  41af1b:	call   0x41ae00
  41af20:	mov    rax,rdi
  41af23:	add    rsp,0x20
  41af27:	pop    rbx
  41af28:	pop    rsi
  41af29:	pop    rdi
  41af2a:	ret    
  41af2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41af30:	add    rsp,0x20
  41af34:	pop    rbx
  41af35:	pop    rsi
  41af36:	pop    rdi
  41af37:	jmp    0x41ae90
  41af3c:	nop    DWORD PTR [rax+0x0]
  41af40:	push   rbx
  41af41:	sub    rsp,0x20
  41af45:	test   rcx,rcx
  41af48:	mov    rbx,rcx
  41af4b:	mov    r8,rdx
  41af4e:	je     0x41af70
  41af50:	test   rdx,rdx
  41af53:	je     0x41af92
  41af55:	mov    r9,0xffffffffffffffff
  41af5c:	xor    edx,edx
  41af5e:	add    rsp,0x20
  41af62:	pop    rbx
  41af63:	jmp    0x41aab0
  41af68:	nop    DWORD PTR [rax+rax*1+0x0]
  41af70:	lea    r8,[rip+0x26749]        # 0x4416c0
  41af77:	lea    rdx,[rip+0x26962]        # 0x4418e0
  41af7e:	lea    rcx,[rip+0x2674a]        # 0x4416cf
  41af85:	call   0x40fd20
  41af8a:	xor    eax,eax
  41af8c:	add    rsp,0x20
  41af90:	pop    rbx
  41af91:	ret    
  41af92:	lea    r8,[rip+0x26766]        # 0x4416ff
  41af99:	lea    rdx,[rip+0x26940]        # 0x4418e0
  41afa0:	lea    rcx,[rip+0x26728]        # 0x4416cf
  41afa7:	call   0x40fd20
  41afac:	mov    rax,rbx
  41afaf:	add    rsp,0x20
  41afb3:	pop    rbx
  41afb4:	ret    
  41afb5:	nop
  41afb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afc0:	push   rbx
  41afc1:	sub    rsp,0x20
  41afc5:	test   rcx,rcx
  41afc8:	mov    rbx,rcx
  41afcb:	je     0x41afe4
  41afcd:	test   rdx,rdx
  41afd0:	je     0x41b010
  41afd2:	mov    r9,r8
  41afd5:	mov    r8,rdx
  41afd8:	xor    edx,edx
  41afda:	add    rsp,0x20
  41afde:	pop    rbx
  41afdf:	jmp    0x41aab0
  41afe4:	lea    r8,[rip+0x266d5]        # 0x4416c0
  41afeb:	lea    rdx,[rip+0x268ce]        # 0x4418c0
  41aff2:	lea    rcx,[rip+0x266d6]        # 0x4416cf
  41aff9:	call   0x40fd20
  41affe:	xor    eax,eax
  41b000:	add    rsp,0x20
  41b004:	pop    rbx
  41b005:	ret    
  41b006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b010:	lea    r8,[rip+0x266e8]        # 0x4416ff
  41b017:	lea    rdx,[rip+0x268a2]        # 0x4418c0
  41b01e:	lea    rcx,[rip+0x266aa]        # 0x4416cf
  41b025:	call   0x40fd20
  41b02a:	mov    rax,rbx
  41b02d:	add    rsp,0x20
  41b031:	pop    rbx
  41b032:	ret    
  41b033:	nop    DWORD PTR [rax]
  41b036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b040:	push   rbx
  41b041:	sub    rsp,0x20
  41b045:	test   rcx,rcx
  41b048:	mov    rbx,rcx
  41b04b:	je     0x41b094
  41b04d:	test   r8,r8
  41b050:	je     0x41b0c0
  41b052:	test   rdx,rdx
  41b055:	js     0x41b080
  41b057:	cmp    rdx,QWORD PTR [rbx+0x8]
  41b05b:	jbe    0x41b080
  41b05d:	lea    r8,[rip+0x26688]        # 0x4416ec
  41b064:	lea    rdx,[rip+0x26805]        # 0x441870
  41b06b:	lea    rcx,[rip+0x2665d]        # 0x4416cf
  41b072:	call   0x40fd20
  41b077:	mov    rax,rbx
  41b07a:	add    rsp,0x20
  41b07e:	pop    rbx
  41b07f:	ret    
  41b080:	mov    r9,0xffffffffffffffff
  41b087:	mov    rcx,rbx
  41b08a:	add    rsp,0x20
  41b08e:	pop    rbx
  41b08f:	jmp    0x41aab0
  41b094:	lea    r8,[rip+0x26625]        # 0x4416c0
  41b09b:	lea    rdx,[rip+0x267ce]        # 0x441870
  41b0a2:	lea    rcx,[rip+0x26626]        # 0x4416cf
  41b0a9:	call   0x40fd20
  41b0ae:	xor    eax,eax
  41b0b0:	add    rsp,0x20
  41b0b4:	pop    rbx
  41b0b5:	ret    
  41b0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0c0:	lea    r8,[rip+0x26638]        # 0x4416ff
  41b0c7:	lea    rdx,[rip+0x267a2]        # 0x441870
  41b0ce:	lea    rcx,[rip+0x265fa]        # 0x4416cf
  41b0d5:	call   0x40fd20
  41b0da:	mov    rax,rbx
  41b0dd:	add    rsp,0x20
  41b0e1:	pop    rbx
  41b0e2:	ret    
  41b0e3:	nop    DWORD PTR [rax]
  41b0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0f0:	push   rdi
  41b0f1:	push   rsi
  41b0f2:	push   rbx
  41b0f3:	sub    rsp,0x20
  41b0f7:	test   rcx,rcx
  41b0fa:	mov    rbx,rcx
  41b0fd:	mov    rsi,rdx
  41b100:	mov    edi,r8d
  41b103:	je     0x41b1a0
  41b109:	mov    edx,0x1
  41b10e:	call   0x41a830
  41b113:	test   rsi,rsi
  41b116:	js     0x41b175
  41b118:	mov    r8,QWORD PTR [rbx+0x8]
  41b11c:	cmp    rsi,r8
  41b11f:	ja     0x41b150
  41b121:	cmp    rsi,r8
  41b124:	jb     0x41b181
  41b126:	mov    rax,QWORD PTR [rbx]
  41b129:	mov    BYTE PTR [rax+rsi*1],dil
  41b12d:	mov    rax,QWORD PTR [rbx+0x8]
  41b131:	lea    rdx,[rax+0x1]
  41b135:	mov    QWORD PTR [rbx+0x8],rdx
  41b139:	mov    rdx,QWORD PTR [rbx]
  41b13c:	mov    BYTE PTR [rdx+rax*1+0x1],0x0
  41b141:	mov    rax,rbx
  41b144:	add    rsp,0x20
  41b148:	pop    rbx
  41b149:	pop    rsi
  41b14a:	pop    rdi
  41b14b:	ret    
  41b14c:	nop    DWORD PTR [rax+0x0]
  41b150:	lea    r8,[rip+0x26595]        # 0x4416ec
  41b157:	lea    rdx,[rip+0x266f2]        # 0x441850
  41b15e:	lea    rcx,[rip+0x2656a]        # 0x4416cf
  41b165:	call   0x40fd20
  41b16a:	mov    rax,rbx
  41b16d:	add    rsp,0x20
  41b171:	pop    rbx
  41b172:	pop    rsi
  41b173:	pop    rdi
  41b174:	ret    
  41b175:	mov    rsi,QWORD PTR [rbx+0x8]
  41b179:	mov    r8,rsi
  41b17c:	cmp    rsi,r8
  41b17f:	jae    0x41b126
  41b181:	mov    rcx,QWORD PTR [rbx]
  41b184:	sub    r8,rsi
  41b187:	lea    rdx,[rcx+rsi*1]
  41b18b:	lea    rcx,[rcx+rsi*1+0x1]
  41b190:	call   0x4387e8
  41b195:	jmp    0x41b126
  41b197:	nop    WORD PTR [rax+rax*1+0x0]
  41b1a0:	lea    r8,[rip+0x26519]        # 0x4416c0
  41b1a7:	lea    rdx,[rip+0x266a2]        # 0x441850
  41b1ae:	lea    rcx,[rip+0x2651a]        # 0x4416cf
  41b1b5:	call   0x40fd20
  41b1ba:	xor    eax,eax
  41b1bc:	add    rsp,0x20
  41b1c0:	pop    rbx
  41b1c1:	pop    rsi
  41b1c2:	pop    rdi
  41b1c3:	ret    
  41b1c4:	xchg   ax,ax
  41b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1d0:	sub    rsp,0x28
  41b1d4:	test   rcx,rcx
  41b1d7:	je     0x41b1f0
  41b1d9:	movsx  r8d,dl
  41b1dd:	mov    rdx,0xffffffffffffffff
  41b1e4:	add    rsp,0x28
  41b1e8:	jmp    0x41b0f0
  41b1ed:	nop    DWORD PTR [rax]
  41b1f0:	lea    r8,[rip+0x264c9]        # 0x4416c0
  41b1f7:	lea    rdx,[rip+0x26722]        # 0x441920
  41b1fe:	lea    rcx,[rip+0x264ca]        # 0x4416cf
  41b205:	call   0x40fd20
  41b20a:	xor    eax,eax
  41b20c:	add    rsp,0x28
  41b210:	ret    
  41b211:	nop    DWORD PTR [rax+rax*1+0x0]
  41b216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b220:	sub    rsp,0x28
  41b224:	test   rcx,rcx
  41b227:	je     0x41b240
  41b229:	movsx  r8d,dl
  41b22d:	xor    edx,edx
  41b22f:	add    rsp,0x28
  41b233:	jmp    0x41b0f0
  41b238:	nop    DWORD PTR [rax+rax*1+0x0]
  41b240:	lea    r8,[rip+0x26479]        # 0x4416c0
  41b247:	lea    rdx,[rip+0x26652]        # 0x4418a0
  41b24e:	lea    rcx,[rip+0x2647a]        # 0x4416cf
  41b255:	call   0x40fd20
  41b25a:	xor    eax,eax
  41b25c:	add    rsp,0x28
  41b260:	ret    
  41b261:	nop    DWORD PTR [rax+rax*1+0x0]
  41b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b270:	push   r15
  41b272:	push   r14
  41b274:	push   r13
  41b276:	push   r12
  41b278:	push   rbp
  41b279:	push   rdi
  41b27a:	push   rsi
  41b27b:	push   rbx
  41b27c:	sub    rsp,0x38
  41b280:	test   rcx,rcx
  41b283:	mov    rbx,rcx
  41b286:	mov    rdi,rdx
  41b289:	mov    r14,r8
  41b28c:	mov    ebp,r9d
  41b28f:	je     0x41b482
  41b295:	test   rdx,rdx
  41b298:	je     0x41b4a3
  41b29e:	mov    rcx,rdx
  41b2a1:	call   0x438788
  41b2a6:	mov    r12,QWORD PTR [rip+0x60893]        # 0x47bb40
  41b2ad:	mov    r15,QWORD PTR [rip+0x6093c]        # 0x47bbf0
  41b2b4:	lea    r13,[rdi+rax*1]
  41b2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2c0:	movzx  esi,BYTE PTR [rdi]
  41b2c3:	test   sil,sil
  41b2c6:	je     0x41b308
  41b2c8:	test   sil,sil
  41b2cb:	jns    0x41b320
  41b2cd:	test   ebp,ebp
  41b2cf:	je     0x41b320
  41b2d1:	mov    rdx,r13
  41b2d4:	mov    rcx,rdi
  41b2d7:	sub    rdx,rdi
  41b2da:	call   0x421e30
  41b2df:	add    eax,0x2
  41b2e2:	cmp    eax,0x1
  41b2e5:	jbe    0x41b320
  41b2e7:	mov    rax,QWORD PTR [r15]
  41b2ea:	mov    rdx,rdi
  41b2ed:	mov    rcx,rbx
  41b2f0:	movsx  rsi,BYTE PTR [rax+rsi*1]
  41b2f5:	mov    r8,rsi
  41b2f8:	add    rdi,rsi
  41b2fb:	call   0x41ae00
  41b300:	movzx  esi,BYTE PTR [rdi]
  41b303:	test   sil,sil
  41b306:	jne    0x41b2c8
  41b308:	mov    rax,rbx
  41b30b:	add    rsp,0x38
  41b30f:	pop    rbx
  41b310:	pop    rsi
  41b311:	pop    rdi
  41b312:	pop    rbp
  41b313:	pop    r12
  41b315:	pop    r13
  41b317:	pop    r14
  41b319:	pop    r15
  41b31b:	ret    
  41b31c:	nop    DWORD PTR [rax+0x0]
  41b320:	mov    rdx,QWORD PTR [r12]
  41b324:	movzx  eax,sil
  41b328:	test   BYTE PTR [rdx+rax*2],0x1
  41b32c:	jne    0x41b357
  41b32e:	lea    eax,[rsi-0x2d]
  41b331:	cmp    al,0x1
  41b333:	jbe    0x41b357
  41b335:	cmp    sil,0x5f
  41b339:	je     0x41b357
  41b33b:	cmp    sil,0x7e
  41b33f:	je     0x41b357
  41b341:	test   r14,r14
  41b344:	je     0x41b3a0
  41b346:	movsx  edx,sil
  41b34a:	mov    rcx,r14
  41b34d:	call   0x4387a8
  41b352:	test   rax,rax
  41b355:	je     0x41b3a0
  41b357:	mov    rdx,QWORD PTR [rbx+0x8]
  41b35b:	lea    rax,[rdx+0x1]
  41b35f:	cmp    rax,QWORD PTR [rbx+0x10]
  41b363:	jae    0x41b384
  41b365:	mov    rcx,QWORD PTR [rbx]
  41b368:	mov    QWORD PTR [rbx+0x8],rax
  41b36c:	mov    BYTE PTR [rcx+rdx*1],sil
  41b370:	mov    rdx,QWORD PTR [rbx]
  41b373:	mov    rax,QWORD PTR [rbx+0x8]
  41b377:	mov    BYTE PTR [rdx+rax*1],0x0
  41b37b:	add    rdi,0x1
  41b37f:	jmp    0x41b2c0
  41b384:	movsx  r8d,sil
  41b388:	mov    rdx,0xffffffffffffffff
  41b38f:	mov    rcx,rbx
  41b392:	call   0x41b0f0
  41b397:	jmp    0x41b37b
  41b399:	nop    DWORD PTR [rax+0x0]
  41b3a0:	mov    rcx,QWORD PTR [rbx+0x8]
  41b3a4:	lea    rdx,[rcx+0x1]
  41b3a8:	cmp    rdx,QWORD PTR [rbx+0x10]
  41b3ac:	jae    0x41b431
  41b3b2:	mov    rax,QWORD PTR [rbx]
  41b3b5:	mov    QWORD PTR [rbx+0x8],rdx
  41b3b9:	mov    BYTE PTR [rax+rcx*1],0x25
  41b3bd:	mov    rdx,QWORD PTR [rbx]
  41b3c0:	mov    rax,QWORD PTR [rbx+0x8]
  41b3c4:	mov    BYTE PTR [rdx+rax*1],0x0
  41b3c8:	mov    eax,esi
  41b3ca:	lea    r9,[rip+0x2659f]        # 0x441970
  41b3d1:	shr    al,0x4
  41b3d4:	and    eax,0xf
  41b3d7:	movsx  r8d,BYTE PTR [r9+rax*1]
  41b3dc:	mov    rax,QWORD PTR [rbx+0x8]
  41b3e0:	lea    rdx,[rax+0x1]
  41b3e4:	cmp    rdx,QWORD PTR [rbx+0x10]
  41b3e8:	jae    0x41b464
  41b3ea:	mov    rcx,QWORD PTR [rbx]
  41b3ed:	mov    QWORD PTR [rbx+0x8],rdx
  41b3f1:	mov    BYTE PTR [rcx+rax*1],r8b
  41b3f5:	mov    rdx,QWORD PTR [rbx]
  41b3f8:	mov    rax,QWORD PTR [rbx+0x8]
  41b3fc:	mov    BYTE PTR [rdx+rax*1],0x0
  41b400:	mov    rax,QWORD PTR [rbx+0x8]
  41b404:	and    esi,0xf
  41b407:	movsx  r8d,BYTE PTR [r9+rsi*1]
  41b40c:	lea    rdx,[rax+0x1]
  41b410:	cmp    rdx,QWORD PTR [rbx+0x10]
  41b414:	jae    0x41b450
  41b416:	mov    rcx,QWORD PTR [rbx]
  41b419:	mov    QWORD PTR [rbx+0x8],rdx
  41b41d:	mov    BYTE PTR [rcx+rax*1],r8b
  41b421:	mov    rdx,QWORD PTR [rbx]
  41b424:	mov    rax,QWORD PTR [rbx+0x8]
  41b428:	mov    BYTE PTR [rdx+rax*1],0x0
  41b42c:	jmp    0x41b37b
  41b431:	mov    r8d,0x25
  41b437:	mov    rdx,0xffffffffffffffff
  41b43e:	mov    rcx,rbx
  41b441:	call   0x41b0f0
  41b446:	jmp    0x41b3c8
  41b44b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b450:	mov    rdx,0xffffffffffffffff
  41b457:	mov    rcx,rbx
  41b45a:	call   0x41b0f0
  41b45f:	jmp    0x41b37b
  41b464:	mov    rdx,0xffffffffffffffff
  41b46b:	mov    rcx,rbx
  41b46e:	mov    QWORD PTR [rsp+0x28],r9
  41b473:	call   0x41b0f0
  41b478:	mov    r9,QWORD PTR [rsp+0x28]
  41b47d:	jmp    0x41b400
  41b482:	lea    r8,[rip+0x26237]        # 0x4416c0
  41b489:	lea    rdx,[rip+0x264f0]        # 0x441980
  41b490:	lea    rcx,[rip+0x26238]        # 0x4416cf
  41b497:	call   0x40fd20
  41b49c:	xor    eax,eax
  41b49e:	jmp    0x41b30b
  41b4a3:	lea    r8,[rip+0x2626e]        # 0x441718
  41b4aa:	lea    rdx,[rip+0x264cf]        # 0x441980
  41b4b1:	lea    rcx,[rip+0x26217]        # 0x4416cf
  41b4b8:	call   0x40fd20
  41b4bd:	xor    eax,eax
  41b4bf:	jmp    0x41b30b
  41b4c4:	xchg   ax,ax
  41b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4d0:	push   r13
  41b4d2:	push   r12
  41b4d4:	push   rbp
  41b4d5:	push   rdi
  41b4d6:	push   rsi
  41b4d7:	push   rbx
  41b4d8:	sub    rsp,0x28
  41b4dc:	test   rcx,rcx
  41b4df:	mov    rdi,rcx
  41b4e2:	mov    r12,rdx
  41b4e5:	mov    ebx,r8d
  41b4e8:	je     0x41b660
  41b4ee:	cmp    r8d,0x7f
  41b4f2:	ja     0x41b550
  41b4f4:	mov    ebp,0x1
  41b4f9:	xor    esi,esi
  41b4fb:	mov    r13d,0x1
  41b501:	mov    rdx,rbp
  41b504:	mov    rcx,rdi
  41b507:	call   0x41a830
  41b50c:	test   r12,r12
  41b50f:	mov    r8,QWORD PTR [rdi+0x8]
  41b513:	js     0x41b5a4
  41b519:	cmp    r12,r8
  41b51c:	jbe    0x41b5a7
  41b522:	lea    r8,[rip+0x261c3]        # 0x4416ec
  41b529:	lea    rdx,[rip+0x26300]        # 0x441830
  41b530:	lea    rcx,[rip+0x26198]        # 0x4416cf
  41b537:	call   0x40fd20
  41b53c:	mov    rax,rdi
  41b53f:	add    rsp,0x28
  41b543:	pop    rbx
  41b544:	pop    rsi
  41b545:	pop    rdi
  41b546:	pop    rbp
  41b547:	pop    r12
  41b549:	pop    r13
  41b54b:	ret    
  41b54c:	nop    DWORD PTR [rax+0x0]
  41b550:	cmp    ebx,0x7ff
  41b556:	jbe    0x41b630
  41b55c:	cmp    ebx,0xffff
  41b562:	jbe    0x41b645
  41b568:	cmp    ebx,0x1fffff
  41b56e:	jbe    0x41b689
  41b574:	cmp    ebx,0x4000000
  41b57a:	sbb    rbp,rbp
  41b57d:	add    rbp,0x6
  41b581:	cmp    ebx,0x4000000
  41b587:	sbb    esi,esi
  41b589:	and    esi,0xfffffffc
  41b58c:	add    esi,0xfc
  41b592:	cmp    ebx,0x4000000
  41b598:	sbb    r13d,r13d
  41b59b:	add    r13d,0x6
  41b59f:	jmp    0x41b501
  41b5a4:	mov    r12,r8
  41b5a7:	cmp    r12,r8
  41b5aa:	jb     0x41b610
  41b5ac:	mov    r8d,r13d
  41b5af:	add    r12,QWORD PTR [rdi]
  41b5b2:	sub    r8d,0x1
  41b5b6:	je     0x41b5eb
  41b5b8:	movsxd r8,r8d
  41b5bb:	lea    eax,[r13-0x2]
  41b5bf:	lea    r9,[r12+r8*1]
  41b5c3:	sub    r8,0x1
  41b5c7:	sub    r8,rax
  41b5ca:	add    r8,r12
  41b5cd:	nop    DWORD PTR [rax]
  41b5d0:	mov    r10d,ebx
  41b5d3:	sub    r9,0x1
  41b5d7:	shr    ebx,0x6
  41b5da:	and    r10d,0x3f
  41b5de:	or     r10d,0xffffff80
  41b5e2:	mov    BYTE PTR [r9+0x1],r10b
  41b5e6:	cmp    r9,r8
  41b5e9:	jne    0x41b5d0
  41b5eb:	or     ebx,esi
  41b5ed:	mov    BYTE PTR [r12],bl
  41b5f1:	add    rbp,QWORD PTR [rdi+0x8]
  41b5f5:	mov    rax,QWORD PTR [rdi]
  41b5f8:	mov    QWORD PTR [rdi+0x8],rbp
  41b5fc:	mov    BYTE PTR [rax+rbp*1],0x0
  41b600:	mov    rax,rdi
  41b603:	add    rsp,0x28
  41b607:	pop    rbx
  41b608:	pop    rsi
  41b609:	pop    rdi
  41b60a:	pop    rbp
  41b60b:	pop    r12
  41b60d:	pop    r13
  41b60f:	ret    
  41b610:	mov    rcx,QWORD PTR [rdi]
  41b613:	lea    rax,[r12+rbp*1]
  41b617:	sub    r8,r12
  41b61a:	lea    rdx,[rcx+r12*1]
  41b61e:	add    rcx,rax
  41b621:	call   0x4387e8
  41b626:	jmp    0x41b5ac
  41b628:	nop    DWORD PTR [rax+rax*1+0x0]
  41b630:	mov    ebp,0x2
  41b635:	mov    esi,0xc0
  41b63a:	mov    r13d,0x2
  41b640:	jmp    0x41b501
  41b645:	mov    ebp,0x3
  41b64a:	mov    esi,0xe0
  41b64f:	mov    r13d,0x3
  41b655:	jmp    0x41b501
  41b65a:	nop    WORD PTR [rax+rax*1+0x0]
  41b660:	lea    r8,[rip+0x26059]        # 0x4416c0
  41b667:	lea    rdx,[rip+0x261c2]        # 0x441830
  41b66e:	lea    rcx,[rip+0x2605a]        # 0x4416cf
  41b675:	call   0x40fd20
  41b67a:	xor    eax,eax
  41b67c:	add    rsp,0x28
  41b680:	pop    rbx
  41b681:	pop    rsi
  41b682:	pop    rdi
  41b683:	pop    rbp
  41b684:	pop    r12
  41b686:	pop    r13
  41b688:	ret    
  41b689:	mov    ebp,0x4
  41b68e:	mov    esi,0xf0
  41b693:	mov    r13d,0x4
  41b699:	jmp    0x41b501
  41b69e:	xchg   ax,ax
  41b6a0:	sub    rsp,0x28
  41b6a4:	test   rcx,rcx
  41b6a7:	mov    r8d,edx
  41b6aa:	je     0x41b6c0
  41b6ac:	mov    rdx,0xffffffffffffffff
  41b6b3:	add    rsp,0x28
  41b6b7:	jmp    0x41b4d0
  41b6bc:	nop    DWORD PTR [rax+0x0]
  41b6c0:	lea    r8,[rip+0x25ff9]        # 0x4416c0
  41b6c7:	lea    rdx,[rip+0x26232]        # 0x441900
  41b6ce:	lea    rcx,[rip+0x25ffa]        # 0x4416cf
  41b6d5:	call   0x40fd20
  41b6da:	xor    eax,eax
  41b6dc:	add    rsp,0x28
  41b6e0:	ret    
  41b6e1:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6f0:	sub    rsp,0x28
  41b6f4:	test   rcx,rcx
  41b6f7:	mov    r8d,edx
  41b6fa:	je     0x41b710
  41b6fc:	xor    edx,edx
  41b6fe:	add    rsp,0x28
  41b702:	jmp    0x41b4d0
  41b707:	nop    WORD PTR [rax+rax*1+0x0]
  41b710:	lea    r8,[rip+0x25fa9]        # 0x4416c0
  41b717:	lea    rdx,[rip+0x26162]        # 0x441880
  41b71e:	lea    rcx,[rip+0x25faa]        # 0x4416cf
  41b725:	call   0x40fd20
  41b72a:	xor    eax,eax
  41b72c:	add    rsp,0x28
  41b730:	ret    
  41b731:	nop    DWORD PTR [rax+rax*1+0x0]
  41b736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b740:	push   r12
  41b742:	push   rbp
  41b743:	push   rdi
  41b744:	push   rsi
  41b745:	push   rbx
  41b746:	sub    rsp,0x30
  41b74a:	test   rcx,rcx
  41b74d:	mov    rbx,rcx
  41b750:	mov    rsi,rdx
  41b753:	mov    rdi,r8
  41b756:	je     0x41b840
  41b75c:	test   r9,r9
  41b75f:	je     0x41b7c0
  41b761:	test   rdi,rdi
  41b764:	je     0x41b7a0
  41b766:	mov    r12,QWORD PTR [rbx+0x8]
  41b76a:	cmp    rsi,r12
  41b76d:	jbe    0x41b7d0
  41b76f:	lea    r8,[rip+0x25f76]        # 0x4416ec
  41b776:	lea    rdx,[rip+0x26073]        # 0x4417f0
  41b77d:	lea    rcx,[rip+0x25f4b]        # 0x4416cf
  41b784:	call   0x40fd20
  41b789:	mov    rax,rbx
  41b78c:	add    rsp,0x30
  41b790:	pop    rbx
  41b791:	pop    rsi
  41b792:	pop    rdi
  41b793:	pop    rbp
  41b794:	pop    r12
  41b796:	ret    
  41b797:	nop    WORD PTR [rax+rax*1+0x0]
  41b7a0:	lea    r8,[rip+0x25f58]        # 0x4416ff
  41b7a7:	lea    rdx,[rip+0x26042]        # 0x4417f0
  41b7ae:	lea    rcx,[rip+0x25f1a]        # 0x4416cf
  41b7b5:	call   0x40fd20
  41b7ba:	nop    WORD PTR [rax+rax*1+0x0]
  41b7c0:	mov    rax,rbx
  41b7c3:	add    rsp,0x30
  41b7c7:	pop    rbx
  41b7c8:	pop    rsi
  41b7c9:	pop    rdi
  41b7ca:	pop    rbp
  41b7cb:	pop    r12
  41b7cd:	ret    
  41b7ce:	xchg   ax,ax
  41b7d0:	test   r9,r9
  41b7d3:	js     0x41b810
  41b7d5:	lea    rbp,[r9+rsi*1]
  41b7d9:	cmp    r12,rbp
  41b7dc:	jb     0x41b824
  41b7de:	add    rsi,QWORD PTR [rbx]
  41b7e1:	mov    r8,r9
  41b7e4:	mov    rdx,rdi
  41b7e7:	mov    rcx,rsi
  41b7ea:	call   0x4387f0
  41b7ef:	cmp    rbp,QWORD PTR [rbx+0x8]
  41b7f3:	jbe    0x41b7c0
  41b7f5:	mov    rax,QWORD PTR [rbx]
  41b7f8:	mov    BYTE PTR [rax+rbp*1],0x0
  41b7fc:	mov    rax,rbx
  41b7ff:	mov    QWORD PTR [rbx+0x8],rbp
  41b803:	add    rsp,0x30
  41b807:	pop    rbx
  41b808:	pop    rsi
  41b809:	pop    rdi
  41b80a:	pop    rbp
  41b80b:	pop    r12
  41b80d:	ret    
  41b80e:	xchg   ax,ax
  41b810:	mov    rcx,rdi
  41b813:	call   0x438788
  41b818:	mov    r9,rax
  41b81b:	lea    rbp,[r9+rsi*1]
  41b81f:	cmp    r12,rbp
  41b822:	jae    0x41b7de
  41b824:	mov    rdx,rbp
  41b827:	mov    rcx,rbx
  41b82a:	mov    QWORD PTR [rsp+0x28],r9
  41b82f:	sub    rdx,r12
  41b832:	call   0x41a830
  41b837:	mov    r9,QWORD PTR [rsp+0x28]
  41b83c:	jmp    0x41b7de
  41b83e:	xchg   ax,ax
  41b840:	lea    r8,[rip+0x25e79]        # 0x4416c0
  41b847:	lea    rdx,[rip+0x25fa2]        # 0x4417f0
  41b84e:	lea    rcx,[rip+0x25e7a]        # 0x4416cf
  41b855:	call   0x40fd20
  41b85a:	xor    eax,eax
  41b85c:	add    rsp,0x30
  41b860:	pop    rbx
  41b861:	pop    rsi
  41b862:	pop    rdi
  41b863:	pop    rbp
  41b864:	pop    r12
  41b866:	ret    
  41b867:	nop    WORD PTR [rax+rax*1+0x0]
  41b870:	push   rsi
  41b871:	push   rbx
  41b872:	sub    rsp,0x38
  41b876:	test   r8,r8
  41b879:	mov    rbx,rcx
  41b87c:	mov    rsi,rdx
  41b87f:	je     0x41b8b0
  41b881:	mov    rcx,r8
  41b884:	mov    QWORD PTR [rsp+0x28],r8
  41b889:	call   0x438788
  41b88e:	mov    r8,QWORD PTR [rsp+0x28]
  41b893:	mov    r9,rax
  41b896:	mov    rdx,rsi
  41b899:	mov    rcx,rbx
  41b89c:	add    rsp,0x38
  41b8a0:	pop    rbx
  41b8a1:	pop    rsi
  41b8a2:	jmp    0x41b740
  41b8a7:	nop    WORD PTR [rax+rax*1+0x0]
  41b8b0:	lea    r8,[rip+0x25e48]        # 0x4416ff
  41b8b7:	lea    rdx,[rip+0x25f52]        # 0x441810
  41b8be:	lea    rcx,[rip+0x25e0a]        # 0x4416cf
  41b8c5:	call   0x40fd20
  41b8ca:	mov    rax,rbx
  41b8cd:	add    rsp,0x38
  41b8d1:	pop    rbx
  41b8d2:	pop    rsi
  41b8d3:	ret    
  41b8d4:	xchg   ax,ax
  41b8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8e0:	push   rsi
  41b8e1:	push   rbx
  41b8e2:	sub    rsp,0x28
  41b8e6:	test   rcx,rcx
  41b8e9:	mov    rbx,rcx
  41b8ec:	mov    rsi,r8
  41b8ef:	je     0x41b9e0
  41b8f5:	test   rdx,rdx
  41b8f8:	js     0x41b990
  41b8fe:	mov    rax,QWORD PTR [rcx+0x8]
  41b902:	cmp    rdx,rax
  41b905:	ja     0x41b940
  41b907:	test   r8,r8
  41b90a:	js     0x41b9d5
  41b910:	lea    r8,[rdx+rsi*1]
  41b914:	cmp    rax,r8
  41b917:	jb     0x41b964
  41b919:	ja     0x41b9b4
  41b91f:	mov    rdx,QWORD PTR [rbx]
  41b922:	sub    rax,rsi
  41b925:	mov    QWORD PTR [rbx+0x8],rax
  41b929:	mov    BYTE PTR [rdx+rax*1],0x0
  41b92d:	mov    rax,rbx
  41b930:	add    rsp,0x28
  41b934:	pop    rbx
  41b935:	pop    rsi
  41b936:	ret    
  41b937:	nop    WORD PTR [rax+rax*1+0x0]
  41b940:	lea    r8,[rip+0x25da5]        # 0x4416ec
  41b947:	lea    rdx,[rip+0x25e86]        # 0x4417d4
  41b94e:	lea    rcx,[rip+0x25d7a]        # 0x4416cf
  41b955:	call   0x40fd20
  41b95a:	mov    rax,rbx
  41b95d:	add    rsp,0x28
  41b961:	pop    rbx
  41b962:	pop    rsi
  41b963:	ret    
  41b964:	lea    r8,[rip+0x25dc8]        # 0x441733
  41b96b:	lea    rdx,[rip+0x25e62]        # 0x4417d4
  41b972:	lea    rcx,[rip+0x25d56]        # 0x4416cf
  41b979:	call   0x40fd20
  41b97e:	mov    rax,rbx
  41b981:	add    rsp,0x28
  41b985:	pop    rbx
  41b986:	pop    rsi
  41b987:	ret    
  41b988:	nop    DWORD PTR [rax+rax*1+0x0]
  41b990:	lea    r8,[rip+0x25d93]        # 0x44172a
  41b997:	lea    rdx,[rip+0x25e36]        # 0x4417d4
  41b99e:	lea    rcx,[rip+0x25d2a]        # 0x4416cf
  41b9a5:	call   0x40fd20
  41b9aa:	mov    rax,rbx
  41b9ad:	add    rsp,0x28
  41b9b1:	pop    rbx
  41b9b2:	pop    rsi
  41b9b3:	ret    
  41b9b4:	mov    rcx,QWORD PTR [rbx]
  41b9b7:	sub    rax,r8
  41b9ba:	lea    r9,[rcx+r8*1]
  41b9be:	add    rcx,rdx
  41b9c1:	mov    r8,rax
  41b9c4:	mov    rdx,r9
  41b9c7:	call   0x4387e8
  41b9cc:	mov    rax,QWORD PTR [rbx+0x8]
  41b9d0:	jmp    0x41b91f
  41b9d5:	mov    rsi,rax
  41b9d8:	sub    rsi,rdx
  41b9db:	jmp    0x41b91f
  41b9e0:	lea    r8,[rip+0x25cd9]        # 0x4416c0
  41b9e7:	lea    rdx,[rip+0x25de6]        # 0x4417d4
  41b9ee:	lea    rcx,[rip+0x25cda]        # 0x4416cf
  41b9f5:	call   0x40fd20
  41b9fa:	xor    eax,eax
  41b9fc:	jmp    0x41b95d
  41ba01:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba10:	push   rdi
  41ba11:	push   rsi
  41ba12:	push   rbx
  41ba13:	sub    rsp,0x20
  41ba17:	test   rcx,rcx
  41ba1a:	mov    rdi,rcx
  41ba1d:	je     0x41ba51
  41ba1f:	mov    rax,QWORD PTR [rcx+0x8]
  41ba23:	mov    rbx,QWORD PTR [rcx]
  41ba26:	test   eax,eax
  41ba28:	je     0x41ba46
  41ba2a:	sub    eax,0x1
  41ba2d:	lea    rsi,[rbx+rax*1+0x1]
  41ba32:	movsx  ecx,BYTE PTR [rbx]
  41ba35:	add    rbx,0x1
  41ba39:	call   0x419280
  41ba3e:	mov    BYTE PTR [rbx-0x1],al
  41ba41:	cmp    rbx,rsi
  41ba44:	jne    0x41ba32
  41ba46:	mov    rax,rdi
  41ba49:	add    rsp,0x20
  41ba4d:	pop    rbx
  41ba4e:	pop    rsi
  41ba4f:	pop    rdi
  41ba50:	ret    
  41ba51:	lea    r8,[rip+0x25c68]        # 0x4416c0
  41ba58:	lea    rdx,[rip+0x25d61]        # 0x4417c0
  41ba5f:	lea    rcx,[rip+0x25c69]        # 0x4416cf
  41ba66:	call   0x40fd20
  41ba6b:	xor    eax,eax
  41ba6d:	add    rsp,0x20
  41ba71:	pop    rbx
  41ba72:	pop    rsi
  41ba73:	pop    rdi
  41ba74:	ret    
  41ba75:	nop
  41ba76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba80:	push   rdi
  41ba81:	push   rsi
  41ba82:	push   rbx
  41ba83:	sub    rsp,0x20
  41ba87:	test   rcx,rcx
  41ba8a:	mov    rdi,rcx
  41ba8d:	je     0x41bac1
  41ba8f:	mov    rax,QWORD PTR [rcx+0x8]
  41ba93:	mov    rbx,QWORD PTR [rcx]
  41ba96:	test   eax,eax
  41ba98:	je     0x41bab6
  41ba9a:	sub    eax,0x1
  41ba9d:	lea    rsi,[rbx+rax*1+0x1]
  41baa2:	movsx  ecx,BYTE PTR [rbx]
  41baa5:	add    rbx,0x1
  41baa9:	call   0x4192a0
  41baae:	mov    BYTE PTR [rbx-0x1],al
  41bab1:	cmp    rbx,rsi
  41bab4:	jne    0x41baa2
  41bab6:	mov    rax,rdi
  41bab9:	add    rsp,0x20
  41babd:	pop    rbx
  41babe:	pop    rsi
  41babf:	pop    rdi
  41bac0:	ret    
  41bac1:	lea    r8,[rip+0x25bf8]        # 0x4416c0
  41bac8:	lea    rdx,[rip+0x25cd1]        # 0x4417a0
  41bacf:	lea    rcx,[rip+0x25bf9]        # 0x4416cf
  41bad6:	call   0x40fd20
  41badb:	xor    eax,eax
  41badd:	add    rsp,0x20
  41bae1:	pop    rbx
  41bae2:	pop    rsi
  41bae3:	pop    rdi
  41bae4:	ret    
  41bae5:	nop
  41bae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41baf0:	push   r13
  41baf2:	push   r12
  41baf4:	push   rbp
  41baf5:	push   rdi
  41baf6:	push   rsi
  41baf7:	push   rbx
  41baf8:	sub    rsp,0x28
  41bafc:	test   rcx,rcx
  41baff:	mov    r12,rcx
  41bb02:	je     0x41bb50
  41bb04:	mov    rax,QWORD PTR [rcx+0x8]
  41bb08:	mov    rbx,QWORD PTR [rcx]
  41bb0b:	test   eax,eax
  41bb0d:	je     0x41bb40
  41bb0f:	sub    eax,0x1
  41bb12:	mov    rdi,QWORD PTR [rip+0x6af47]        # 0x486a60
  41bb19:	mov    r13,QWORD PTR [rip+0x6b008]        # 0x486b28
  41bb20:	lea    rbp,[rbx+rax*1+0x1]
  41bb25:	movzx  esi,BYTE PTR [rbx]
  41bb28:	mov    ecx,esi
  41bb2a:	call   rdi
  41bb2c:	test   eax,eax
  41bb2e:	je     0x41bb37
  41bb30:	mov    ecx,esi
  41bb32:	call   r13
  41bb35:	mov    BYTE PTR [rbx],al
  41bb37:	add    rbx,0x1
  41bb3b:	cmp    rbx,rbp
  41bb3e:	jne    0x41bb25
  41bb40:	mov    rax,r12
  41bb43:	add    rsp,0x28
  41bb47:	pop    rbx
  41bb48:	pop    rsi
  41bb49:	pop    rdi
  41bb4a:	pop    rbp
  41bb4b:	pop    r12
  41bb4d:	pop    r13
  41bb4f:	ret    
  41bb50:	lea    r8,[rip+0x25b69]        # 0x4416c0
  41bb57:	lea    rdx,[rip+0x25c26]        # 0x441784
  41bb5e:	lea    rcx,[rip+0x25b6a]        # 0x4416cf
  41bb65:	call   0x40fd20
  41bb6a:	xor    eax,eax
  41bb6c:	add    rsp,0x28
  41bb70:	pop    rbx
  41bb71:	pop    rsi
  41bb72:	pop    rdi
  41bb73:	pop    rbp
  41bb74:	pop    r12
  41bb76:	pop    r13
  41bb78:	ret    
  41bb79:	nop    DWORD PTR [rax+0x0]
  41bb80:	push   r13
  41bb82:	push   r12
  41bb84:	push   rbp
  41bb85:	push   rdi
  41bb86:	push   rsi
  41bb87:	push   rbx
  41bb88:	sub    rsp,0x28
  41bb8c:	test   rcx,rcx
  41bb8f:	mov    r12,rcx
  41bb92:	je     0x41bbe0
  41bb94:	mov    rax,QWORD PTR [rcx+0x8]
  41bb98:	mov    rbx,QWORD PTR [rcx]
  41bb9b:	test   eax,eax
  41bb9d:	je     0x41bbd0
  41bb9f:	sub    eax,0x1
  41bba2:	mov    rdi,QWORD PTR [rip+0x6aea7]        # 0x486a50
  41bba9:	mov    r13,QWORD PTR [rip+0x6af80]        # 0x486b30
  41bbb0:	lea    rbp,[rbx+rax*1+0x1]
  41bbb5:	movzx  esi,BYTE PTR [rbx]
  41bbb8:	mov    ecx,esi
  41bbba:	call   rdi
  41bbbc:	test   eax,eax
  41bbbe:	je     0x41bbc7
  41bbc0:	mov    ecx,esi
  41bbc2:	call   r13
  41bbc5:	mov    BYTE PTR [rbx],al
  41bbc7:	add    rbx,0x1
  41bbcb:	cmp    rbx,rbp
  41bbce:	jne    0x41bbb5
  41bbd0:	mov    rax,r12
  41bbd3:	add    rsp,0x28
  41bbd7:	pop    rbx
  41bbd8:	pop    rsi
  41bbd9:	pop    rdi
  41bbda:	pop    rbp
  41bbdb:	pop    r12
  41bbdd:	pop    r13
  41bbdf:	ret    
  41bbe0:	lea    r8,[rip+0x25ad9]        # 0x4416c0
  41bbe7:	lea    rdx,[rip+0x25b8a]        # 0x441778
  41bbee:	lea    rcx,[rip+0x25ada]        # 0x4416cf
  41bbf5:	call   0x40fd20
  41bbfa:	xor    eax,eax
  41bbfc:	add    rsp,0x28
  41bc00:	pop    rbx
  41bc01:	pop    rsi
  41bc02:	pop    rdi
  41bc03:	pop    rbp
  41bc04:	pop    r12
  41bc06:	pop    r13
  41bc08:	ret    
  41bc09:	nop    DWORD PTR [rax+0x0]
  41bc10:	push   rdi
  41bc11:	push   rsi
  41bc12:	push   rbx
  41bc13:	sub    rsp,0x30
  41bc17:	test   rcx,rcx
  41bc1a:	mov    rbx,rcx
  41bc1d:	je     0x41bc71
  41bc1f:	test   rdx,rdx
  41bc22:	je     0x41bc94
  41bc24:	lea    rcx,[rsp+0x28]
  41bc29:	call   0x4263e0
  41bc2e:	test   eax,eax
  41bc30:	mov    esi,eax
  41bc32:	js     0x41bc69
  41bc34:	movsxd rdi,esi
  41bc37:	mov    rcx,rbx
  41bc3a:	mov    rdx,rdi
  41bc3d:	call   0x41a830
  41bc42:	mov    rcx,QWORD PTR [rbx+0x8]
  41bc46:	add    rcx,QWORD PTR [rbx]
  41bc49:	lea    r8d,[rsi+0x1]
  41bc4d:	mov    rdx,QWORD PTR [rsp+0x28]
  41bc52:	movsxd r8,r8d
  41bc55:	call   0x4387f0
  41bc5a:	add    QWORD PTR [rbx+0x8],rdi
  41bc5e:	mov    rcx,QWORD PTR [rsp+0x28]
  41bc63:	call   0x40e6e0
  41bc68:	nop
  41bc69:	add    rsp,0x30
  41bc6d:	pop    rbx
  41bc6e:	pop    rsi
  41bc6f:	pop    rdi
  41bc70:	ret    
  41bc71:	lea    r8,[rip+0x25a48]        # 0x4416c0
  41bc78:	lea    rdx,[rip+0x25ae1]        # 0x441760
  41bc7f:	lea    rcx,[rip+0x25a49]        # 0x4416cf
  41bc86:	call   0x40fd20
  41bc8b:	nop
  41bc8c:	add    rsp,0x30
  41bc90:	pop    rbx
  41bc91:	pop    rsi
  41bc92:	pop    rdi
  41bc93:	ret    
  41bc94:	lea    r8,[rip+0x25ab1]        # 0x44174c
  41bc9b:	lea    rdx,[rip+0x25abe]        # 0x441760
  41bca2:	lea    rcx,[rip+0x25a26]        # 0x4416cf
  41bca9:	call   0x40fd20
  41bcae:	nop
  41bcaf:	add    rsp,0x30
  41bcb3:	pop    rbx
  41bcb4:	pop    rsi
  41bcb5:	pop    rdi
  41bcb6:	ret    
  41bcb7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcc0:	push   rsi
  41bcc1:	push   rbx
  41bcc2:	sub    rsp,0x38
  41bcc6:	mov    rsi,rdx
  41bcc9:	xor    edx,edx
  41bccb:	mov    rbx,rcx
  41bcce:	mov    QWORD PTR [rsp+0x28],r8
  41bcd3:	call   0x41a9e0
  41bcd8:	mov    r8,QWORD PTR [rsp+0x28]
  41bcdd:	mov    rdx,rsi
  41bce0:	mov    rcx,rbx
  41bce3:	add    rsp,0x38
  41bce7:	pop    rbx
  41bce8:	pop    rsi
  41bce9:	jmp    0x41bc10
  41bcee:	xchg   ax,ax
  41bcf0:	push   rsi
  41bcf1:	push   rbx
  41bcf2:	sub    rsp,0x38
  41bcf6:	mov    rsi,rdx
  41bcf9:	xor    edx,edx
  41bcfb:	mov    rbx,rcx
  41bcfe:	mov    QWORD PTR [rsp+0x60],r8
  41bd03:	mov    QWORD PTR [rsp+0x68],r9
  41bd08:	call   0x41a9e0
  41bd0d:	lea    r8,[rsp+0x60]
  41bd12:	mov    rdx,rsi
  41bd15:	mov    rcx,rbx
  41bd18:	mov    QWORD PTR [rsp+0x28],r8
  41bd1d:	call   0x41bc10
  41bd22:	nop
  41bd23:	add    rsp,0x38
  41bd27:	pop    rbx
  41bd28:	pop    rsi
  41bd29:	ret    
  41bd2a:	nop    WORD PTR [rax+rax*1+0x0]
  41bd30:	sub    rsp,0x38
  41bd34:	mov    QWORD PTR [rsp+0x50],r8
  41bd39:	lea    r8,[rsp+0x50]
  41bd3e:	mov    QWORD PTR [rsp+0x58],r9
  41bd43:	mov    QWORD PTR [rsp+0x28],r8
  41bd48:	call   0x41bc10
  41bd4d:	nop
  41bd4e:	add    rsp,0x38
  41bd52:	ret    
  41bd53:	nop
  41bd54:	nop
  41bd55:	nop
  41bd56:	nop
  41bd57:	nop
  41bd58:	nop
  41bd59:	nop
  41bd5a:	nop
  41bd5b:	nop
  41bd5c:	nop
  41bd5d:	nop
  41bd5e:	nop
  41bd5f:	nop
  41bd60:	test   rcx,rcx
  41bd63:	je     0x41bd70
  41bd65:	test   rdx,rdx
  41bd68:	je     0x41bd80
  41bd6a:	jmp    0x4387a0
  41bd6f:	nop
  41bd70:	xor    eax,eax
  41bd72:	test   rdx,rdx
  41bd75:	setne  al
  41bd78:	neg    eax
  41bd7a:	ret    
  41bd7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd80:	mov    eax,0x1
  41bd85:	ret    
  41bd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd90:	push   rbp
  41bd91:	push   rdi
  41bd92:	push   rsi
  41bd93:	push   rbx
  41bd94:	sub    rsp,0x58
  41bd98:	mov    rbx,rcx
  41bd9b:	mov    rcx,QWORD PTR [rip+0x6860e]        # 0x4843b0
  41bda2:	test   rcx,rcx
  41bda5:	je     0x41bdac
  41bda7:	call   0x4313e0
  41bdac:	mov    QWORD PTR [rip+0x685f9],0x0        # 0x4843b0
  41bdb7:	jmp    0x41bdc4
  41bdb9:	nop    DWORD PTR [rax+0x0]
  41bdc0:	add    rbx,0x1
  41bdc4:	movsx  edx,BYTE PTR [rbx]
  41bdc7:	lea    rcx,[rip+0x25c52]        # 0x441a20
  41bdce:	call   0x4387a8
  41bdd3:	test   rax,rax
  41bdd6:	jne    0x41bdc0
  41bdd8:	lea    rdi,[rip+0x25c48]        # 0x441a27
  41bddf:	mov    ecx,0x4
  41bde4:	mov    rsi,rbx
  41bde7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41bde9:	jne    0x41bdfa
  41bdeb:	lea    rcx,[rbx+0x4]
  41bdef:	call   0x438788
  41bdf4:	cmp    rax,0x1f
  41bdf8:	ja     0x41be17
  41bdfa:	lea    r8,[rip+0x25c2f]        # 0x441a30
  41be01:	lea    rcx,[rip+0x25c4b]        # 0x441a53
  41be08:	mov    r9,rbx
  41be0b:	mov    edx,0x4
  41be10:	call   0x40fae0
  41be15:	jmp    0x41be15
  41be17:	mov    rax,QWORD PTR [rbx+0x4]
  41be1b:	lea    rsi,[rsp+0x30]
  41be20:	lea    rdi,[rsp+0x28]
  41be25:	mov    r8d,0x10
  41be2b:	mov    BYTE PTR [rsp+0x38],0x0
  41be30:	mov    rdx,rdi
  41be33:	mov    rcx,rsi
  41be36:	mov    QWORD PTR [rsp+0x30],rax
  41be3b:	call   0x418c50
  41be40:	mov    DWORD PTR [rsp+0x40],eax
  41be44:	mov    rax,QWORD PTR [rsp+0x28]
  41be49:	test   rax,rax
  41be4c:	je     0x41bf1d
  41be52:	xor    ebp,ebp
  41be54:	cmp    BYTE PTR [rax],0x0
  41be57:	setne  bpl
  41be5b:	mov    rax,QWORD PTR [rbx+0xc]
  41be5f:	mov    r8d,0x10
  41be65:	mov    rdx,rdi
  41be68:	mov    rcx,rsi
  41be6b:	mov    QWORD PTR [rsp+0x30],rax
  41be70:	call   0x418c50
  41be75:	mov    DWORD PTR [rsp+0x44],eax
  41be79:	mov    rax,QWORD PTR [rsp+0x28]
  41be7e:	test   rax,rax
  41be81:	je     0x41bf2c
  41be87:	cmp    BYTE PTR [rax],0x0
  41be8a:	setne  al
  41be8d:	movzx  eax,al
  41be90:	add    ebp,eax
  41be92:	mov    rax,QWORD PTR [rbx+0x14]
  41be96:	mov    r8d,0x10
  41be9c:	mov    rdx,rdi
  41be9f:	mov    rcx,rsi
  41bea2:	mov    QWORD PTR [rsp+0x30],rax
  41bea7:	call   0x418c50
  41beac:	mov    DWORD PTR [rsp+0x48],eax
  41beb0:	mov    rax,QWORD PTR [rsp+0x28]
  41beb5:	test   rax,rax
  41beb8:	je     0x41bf28
  41beba:	cmp    BYTE PTR [rax],0x0
  41bebd:	setne  al
  41bec0:	movzx  eax,al
  41bec3:	add    ebp,eax
  41bec5:	mov    rax,QWORD PTR [rbx+0x1c]
  41bec9:	mov    r8d,0x10
  41becf:	mov    rdx,rdi
  41bed2:	mov    rcx,rsi
  41bed5:	mov    QWORD PTR [rsp+0x30],rax
  41beda:	call   0x418c50
  41bedf:	mov    DWORD PTR [rsp+0x4c],eax
  41bee3:	mov    rax,QWORD PTR [rsp+0x28]
  41bee8:	test   rax,rax
  41beeb:	je     0x41bf24
  41beed:	cmp    BYTE PTR [rax],0x0
  41bef0:	setne  al
  41bef3:	movzx  eax,al
  41bef6:	add    ebp,eax
  41bef8:	jne    0x41bdfa
  41befe:	lea    rcx,[rsp+0x40]
  41bf03:	mov    edx,0x4
  41bf08:	call   0x4316f0
  41bf0d:	mov    QWORD PTR [rip+0x6849c],rax        # 0x4843b0
  41bf14:	add    rsp,0x58
  41bf18:	pop    rbx
  41bf19:	pop    rsi
  41bf1a:	pop    rdi
  41bf1b:	pop    rbp
  41bf1c:	ret    
  41bf1d:	xor    ebp,ebp
  41bf1f:	jmp    0x41be5b
  41bf24:	xor    eax,eax
  41bf26:	jmp    0x41bef6
  41bf28:	xor    eax,eax
  41bf2a:	jmp    0x41bec3
  41bf2c:	xor    eax,eax
  41bf2e:	jmp    0x41be90
  41bf33:	nop    DWORD PTR [rax]
  41bf36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf40:	cmp    ecx,0x9
  41bf43:	ja     0x41c000
  41bf49:	lea    rax,[rip+0x25b4c]        # 0x441a9c
  41bf50:	mov    ecx,ecx
  41bf52:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41bf56:	add    rax,rdx
  41bf59:	jmp    rax
  41bf5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf60:	lea    rax,[rip+0x25af1]        # 0x441a58
  41bf67:	ret    
  41bf68:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf70:	lea    rax,[rip+0x25ae6]        # 0x441a5d
  41bf77:	ret    
  41bf78:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf80:	lea    rax,[rip+0x25adc]        # 0x441a63
  41bf87:	ret    
  41bf88:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf90:	lea    rax,[rip+0x25ad3]        # 0x441a6a
  41bf97:	ret    
  41bf98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfa0:	lea    rax,[rip+0x25ac8]        # 0x441a6f
  41bfa7:	ret    
  41bfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfb0:	lea    rax,[rip+0x25abd]        # 0x441a74
  41bfb7:	ret    
  41bfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfc0:	lea    rax,[rip+0x25ab3]        # 0x441a7a
  41bfc7:	ret    
  41bfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfd0:	lea    rax,[rip+0x25aa8]        # 0x441a7f
  41bfd7:	ret    
  41bfd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfe0:	lea    rax,[rip+0x25aa0]        # 0x441a87
  41bfe7:	ret    
  41bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bff0:	lea    rax,[rip+0x25a98]        # 0x441a8f
  41bff7:	ret    
  41bff8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c000:	lea    rax,[rip+0x25a90]        # 0x441a97
  41c007:	ret    
  41c008:	nop    DWORD PTR [rax+rax*1+0x0]
  41c010:	mov    rcx,QWORD PTR [rip+0x68399]        # 0x4843b0
  41c017:	jmp    0x431790
  41c01c:	nop    DWORD PTR [rax+0x0]
  41c020:	mov    r8d,edx
  41c023:	mov    edx,ecx
  41c025:	mov    rcx,QWORD PTR [rip+0x68384]        # 0x4843b0
  41c02c:	jmp    0x431940
  41c031:	nop    DWORD PTR [rax+rax*1+0x0]
  41c036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c040:	mov    rcx,QWORD PTR [rip+0x68369]        # 0x4843b0
  41c047:	jmp    0x4318d0
  41c04c:	nop    DWORD PTR [rax+0x0]
  41c050:	mov    rcx,QWORD PTR [rip+0x68359]        # 0x4843b0
  41c057:	movapd xmm2,xmm1
  41c05b:	movapd xmm1,xmm0
  41c05f:	jmp    0x431ab0
  41c064:	xchg   ax,ax
  41c066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c070:	sub    rsp,0x28
  41c074:	mov    rcx,QWORD PTR [rip+0x6831d]        # 0x484398
  41c07b:	test   rcx,rcx
  41c07e:	je     0x41c094
  41c080:	mov    QWORD PTR [rip+0x68305],0x0        # 0x484390
  41c08b:	add    rsp,0x28
  41c08f:	jmp    0x41f0e0
  41c094:	call   0x41f080
  41c099:	mov    rcx,rax
  41c09c:	mov    QWORD PTR [rip+0x682f5],rax        # 0x484398
  41c0a3:	jmp    0x41c080
  41c0a5:	nop
  41c0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0b0:	sub    rsp,0x28
  41c0b4:	mov    rcx,QWORD PTR [rip+0x682dd]        # 0x484398
  41c0bb:	pxor   xmm0,xmm0
  41c0bf:	test   rcx,rcx
  41c0c2:	je     0x41c0cb
  41c0c4:	xor    edx,edx
  41c0c6:	call   0x41f200
  41c0cb:	movsd  QWORD PTR [rip+0x682bd],xmm0        # 0x484390
  41c0d3:	add    rsp,0x28
  41c0d7:	ret    
  41c0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0e0:	movsd  xmm0,QWORD PTR [rip+0x682a8]        # 0x484390
  41c0e8:	ret    
  41c0e9:	nop    DWORD PTR [rax+0x0]
  41c0f0:	push   rbx
  41c0f1:	sub    rsp,0x20
  41c0f5:	mov    rbx,rcx
  41c0f8:	mov    rcx,QWORD PTR [rip+0x68259]        # 0x484358
  41c0ff:	call   0x40e6e0
  41c104:	mov    rcx,rbx
  41c107:	call   0x4182b0
  41c10c:	mov    QWORD PTR [rip+0x68245],rax        # 0x484358
  41c113:	add    rsp,0x20
  41c117:	pop    rbx
  41c118:	ret    
  41c119:	nop    DWORD PTR [rax+0x0]
  41c120:	push   r13
  41c122:	push   r12
  41c124:	push   rbp
  41c125:	push   rdi
  41c126:	push   rsi
  41c127:	push   rbx
  41c128:	sub    rsp,0x28
  41c12c:	mov    rdi,QWORD PTR [rsp+0x80]
  41c134:	test   rcx,rcx
  41c137:	mov    rsi,rcx
  41c13a:	mov    r12,rdx
  41c13d:	mov    r13,r8
  41c140:	mov    rbp,r9
  41c143:	je     0x41c180
  41c145:	mov    edx,0x2f
  41c14a:	call   0x4387a8
  41c14f:	test   rax,rax
  41c152:	je     0x41c1b0
  41c154:	lea    r8,[rip+0x2597d]        # 0x441ad8
  41c15b:	lea    rdx,[rip+0x2658e]        # 0x4426f0
  41c162:	lea    rcx,[rip+0x258ea]        # 0x441a53
  41c169:	call   0x40fd20
  41c16e:	xor    eax,eax
  41c170:	add    rsp,0x28
  41c174:	pop    rbx
  41c175:	pop    rsi
  41c176:	pop    rdi
  41c177:	pop    rbp
  41c178:	pop    r12
  41c17a:	pop    r13
  41c17c:	ret    
  41c17d:	nop    DWORD PTR [rax]
  41c180:	lea    r8,[rip+0x2593d]        # 0x441ac4
  41c187:	lea    rdx,[rip+0x26562]        # 0x4426f0
  41c18e:	lea    rcx,[rip+0x258be]        # 0x441a53
  41c195:	call   0x40fd20
  41c19a:	xor    eax,eax
  41c19c:	add    rsp,0x28
  41c1a0:	pop    rbx
  41c1a1:	pop    rsi
  41c1a2:	pop    rdi
  41c1a3:	pop    rbp
  41c1a4:	pop    r12
  41c1a6:	pop    r13
  41c1a8:	ret    
  41c1a9:	nop    DWORD PTR [rax+0x0]
  41c1b0:	cmp    BYTE PTR [rsi],0x0
  41c1b3:	je     0x41c200
  41c1b5:	test   rdi,rdi
  41c1b8:	je     0x41c230
  41c1ba:	mov    ecx,0x30
  41c1bf:	call   0x416750
  41c1c4:	mov    rcx,rsi
  41c1c7:	mov    rbx,rax
  41c1ca:	call   0x4182b0
  41c1cf:	mov    QWORD PTR [rbx],rax
  41c1d2:	mov    rax,QWORD PTR [rsp+0x88]
  41c1da:	mov    QWORD PTR [rbx+0x28],r13
  41c1de:	mov    DWORD PTR [rbx+0x8],r12d
  41c1e2:	mov    QWORD PTR [rbx+0x10],rbp
  41c1e6:	mov    QWORD PTR [rbx+0x18],rdi
  41c1ea:	mov    QWORD PTR [rbx+0x20],rax
  41c1ee:	mov    rax,rbx
  41c1f1:	add    rsp,0x28
  41c1f5:	pop    rbx
  41c1f6:	pop    rsi
  41c1f7:	pop    rdi
  41c1f8:	pop    rbp
  41c1f9:	pop    r12
  41c1fb:	pop    r13
  41c1fd:	ret    
  41c1fe:	xchg   ax,ax
  41c200:	lea    r8,[rip+0x258f1]        # 0x441af8
  41c207:	lea    rdx,[rip+0x264e2]        # 0x4426f0
  41c20e:	lea    rcx,[rip+0x2583e]        # 0x441a53
  41c215:	call   0x40fd20
  41c21a:	xor    eax,eax
  41c21c:	add    rsp,0x28
  41c220:	pop    rbx
  41c221:	pop    rsi
  41c222:	pop    rdi
  41c223:	pop    rbp
  41c224:	pop    r12
  41c226:	pop    r13
  41c228:	ret    
  41c229:	nop    DWORD PTR [rax+0x0]
  41c230:	lea    r8,[rip+0x258d3]        # 0x441b0a
  41c237:	lea    rdx,[rip+0x264b2]        # 0x4426f0
  41c23e:	lea    rcx,[rip+0x2580e]        # 0x441a53
  41c245:	call   0x40fd20
  41c24a:	xor    eax,eax
  41c24c:	jmp    0x41c170
  41c251:	nop    DWORD PTR [rax+rax*1+0x0]
  41c256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c260:	mov    DWORD PTR [rip+0x6813a],0x0        # 0x4843a4
  41c26a:	ret    
  41c26b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c270:	push   rsi
  41c271:	push   rbx
  41c272:	sub    rsp,0x28
  41c276:	test   rcx,rcx
  41c279:	mov    rsi,rcx
  41c27c:	je     0x41c2b0
  41c27e:	mov    edx,0x2f
  41c283:	call   0x4387a8
  41c288:	test   rax,rax
  41c28b:	je     0x41c2d3
  41c28d:	lea    r8,[rip+0x2589c]        # 0x441b30
  41c294:	lea    rdx,[rip+0x263e5]        # 0x442680
  41c29b:	lea    rcx,[rip+0x257b1]        # 0x441a53
  41c2a2:	call   0x40fd20
  41c2a7:	xor    eax,eax
  41c2a9:	add    rsp,0x28
  41c2ad:	pop    rbx
  41c2ae:	pop    rsi
  41c2af:	ret    
  41c2b0:	lea    r8,[rip+0x25865]        # 0x441b1c
  41c2b7:	lea    rdx,[rip+0x263c2]        # 0x442680
  41c2be:	lea    rcx,[rip+0x2578e]        # 0x441a53
  41c2c5:	call   0x40fd20
  41c2ca:	xor    eax,eax
  41c2cc:	add    rsp,0x28
  41c2d0:	pop    rbx
  41c2d1:	pop    rsi
  41c2d2:	ret    
  41c2d3:	cmp    BYTE PTR [rsi],0x0
  41c2d6:	je     0x41c300
  41c2d8:	mov    ecx,0x18
  41c2dd:	call   0x416750
  41c2e2:	mov    rcx,rsi
  41c2e5:	mov    rbx,rax
  41c2e8:	call   0x4182b0
  41c2ed:	mov    QWORD PTR [rbx],rax
  41c2f0:	mov    rax,rbx
  41c2f3:	add    rsp,0x28
  41c2f7:	pop    rbx
  41c2f8:	pop    rsi
  41c2f9:	ret    
  41c2fa:	nop    WORD PTR [rax+rax*1+0x0]
  41c300:	lea    r8,[rip+0x2584a]        # 0x441b51
  41c307:	lea    rdx,[rip+0x26372]        # 0x442680
  41c30e:	lea    rcx,[rip+0x2573e]        # 0x441a53
  41c315:	call   0x40fd20
  41c31a:	xor    eax,eax
  41c31c:	add    rsp,0x28
  41c320:	pop    rbx
  41c321:	pop    rsi
  41c322:	ret    
  41c323:	nop    DWORD PTR [rax]
  41c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c330:	push   rbx
  41c331:	sub    rsp,0x20
  41c335:	mov    rax,QWORD PTR [rip+0x6803c]        # 0x484378
  41c33c:	test   rax,rax
  41c33f:	je     0x41c350
  41c341:	add    rsp,0x20
  41c345:	pop    rbx
  41c346:	ret    
  41c347:	nop    WORD PTR [rax+rax*1+0x0]
  41c350:	lea    rcx,[rip+0x2580d]        # 0x441b64
  41c357:	call   0x41c270
  41c35c:	mov    rcx,QWORD PTR [rax]
  41c35f:	mov    QWORD PTR [rip+0x68012],rax        # 0x484378
  41c366:	call   0x40e6e0
  41c36b:	mov    rbx,QWORD PTR [rip+0x68006]        # 0x484378
  41c372:	lea    rcx,[rip+0x257f0]        # 0x441b69
  41c379:	call   0x4182b0
  41c37e:	mov    QWORD PTR [rbx],rax
  41c381:	mov    rax,QWORD PTR [rip+0x67ff0]        # 0x484378
  41c388:	add    rsp,0x20
  41c38c:	pop    rbx
  41c38d:	ret    
  41c38e:	xchg   ax,ax
  41c390:	push   rbx
  41c391:	sub    rsp,0x20
  41c395:	lea    r8,[rip+0x257ce]        # 0x441b6a
  41c39c:	test   rcx,rcx
  41c39f:	je     0x41c3c7
  41c3a1:	test   rdx,rdx
  41c3a4:	je     0x41c3c0
  41c3a6:	mov    rbx,rcx
  41c3a9:	mov    rcx,QWORD PTR [rcx+0x10]
  41c3ad:	call   0x417180
  41c3b2:	mov    QWORD PTR [rbx+0x10],rax
  41c3b6:	add    rsp,0x20
  41c3ba:	pop    rbx
  41c3bb:	ret    
  41c3bc:	nop    DWORD PTR [rax+0x0]
  41c3c0:	lea    r8,[rip+0x257b1]        # 0x441b78
  41c3c7:	lea    rdx,[rip+0x26292]        # 0x442660
  41c3ce:	lea    rcx,[rip+0x2567e]        # 0x441a53
  41c3d5:	add    rsp,0x20
  41c3d9:	pop    rbx
  41c3da:	jmp    0x40fd20
  41c3df:	nop
  41c3e0:	push   rbx
  41c3e1:	sub    rsp,0x20
  41c3e5:	lea    r8,[rip+0x2577e]        # 0x441b6a
  41c3ec:	test   rcx,rcx
  41c3ef:	je     0x41c417
  41c3f1:	test   rdx,rdx
  41c3f4:	je     0x41c410
  41c3f6:	mov    rbx,rcx
  41c3f9:	mov    rcx,QWORD PTR [rcx+0x8]
  41c3fd:	call   0x417180
  41c402:	mov    QWORD PTR [rbx+0x8],rax
  41c406:	add    rsp,0x20
  41c40a:	pop    rbx
  41c40b:	ret    
  41c40c:	nop    DWORD PTR [rax+0x0]
  41c410:	lea    r8,[rip+0x25773]        # 0x441b8a
  41c417:	lea    rdx,[rip+0x26222]        # 0x442640
  41c41e:	lea    rcx,[rip+0x2562e]        # 0x441a53
  41c425:	add    rsp,0x20
  41c429:	pop    rbx
  41c42a:	jmp    0x40fd20
  41c42f:	nop
  41c430:	push   r15
  41c432:	push   r14
  41c434:	push   r13
  41c436:	push   r12
  41c438:	push   rbp
  41c439:	push   rdi
  41c43a:	push   rsi
  41c43b:	push   rbx
  41c43c:	sub    rsp,0x58
  41c440:	mov    r13,QWORD PTR [rsp+0xc0]
  41c448:	mov    r14,QWORD PTR [rsp+0xc8]
  41c450:	test   rcx,rcx
  41c453:	je     0x41c4d3
  41c455:	mov    rbp,r8
  41c458:	mov    r12,r9
  41c45b:	mov    QWORD PTR [rsp+0x40],rdx
  41c460:	mov    rbx,rcx
  41c463:	call   0x407870
  41c468:	test   eax,eax
  41c46a:	lea    r8,[rip+0x2575b]        # 0x441bcc
  41c471:	je     0x41c4b0
  41c473:	test   r13,r13
  41c476:	je     0x41c4a4
  41c478:	mov    rcx,QWORD PTR [rip+0x67f01]        # 0x484380
  41c47f:	lea    r8,[rip+0xfffffffffffff8da]        # 0x41bd60
  41c486:	mov    rdx,rbx
  41c489:	call   0x417600
  41c48e:	test   rax,rax
  41c491:	je     0x41c4e0
  41c493:	add    rsp,0x58
  41c497:	pop    rbx
  41c498:	pop    rsi
  41c499:	pop    rdi
  41c49a:	pop    rbp
  41c49b:	pop    r12
  41c49d:	pop    r13
  41c49f:	pop    r14
  41c4a1:	pop    r15
  41c4a3:	ret    
  41c4a4:	lea    r8,[rip+0x2573f]        # 0x441bea
  41c4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4b0:	lea    rdx,[rip+0x26219]        # 0x4426d0
  41c4b7:	lea    rcx,[rip+0x25595]        # 0x441a53
  41c4be:	add    rsp,0x58
  41c4c2:	pop    rbx
  41c4c3:	pop    rsi
  41c4c4:	pop    rdi
  41c4c5:	pop    rbp
  41c4c6:	pop    r12
  41c4c8:	pop    r13
  41c4ca:	pop    r14
  41c4cc:	pop    r15
  41c4ce:	jmp    0x40fd20
  41c4d3:	lea    r8,[rip+0x256e1]        # 0x441bbb
  41c4da:	jmp    0x41c4b0
  41c4dc:	nop    DWORD PTR [rax+0x0]
  41c4e0:	call   0x41c330
  41c4e5:	lea    rdx,[rip+0x256b2]        # 0x441b9e
  41c4ec:	mov    rcx,rbx
  41c4ef:	mov    r8d,0xffffffff
  41c4f5:	mov    QWORD PTR [rsp+0x38],rax
  41c4fa:	xor    esi,esi
  41c4fc:	call   0x419c40
  41c501:	mov    rcx,QWORD PTR [rax]
  41c504:	mov    r15,rax
  41c507:	nop    WORD PTR [rax+rax*1+0x0]
  41c510:	test   rcx,rcx
  41c513:	je     0x41c55f
  41c515:	lea    eax,[rsi+0x1]
  41c518:	lea    rdi,[r15+rax*8]
  41c51c:	mov    rsi,rax
  41c51f:	mov    rax,QWORD PTR [rdi]
  41c522:	test   rax,rax
  41c525:	jne    0x41c580
  41c527:	cmp    BYTE PTR [rcx],0x0
  41c52a:	je     0x41c5c0
  41c530:	mov    rdx,QWORD PTR [rsp+0x40]
  41c535:	mov    r9,r12
  41c538:	mov    r8,rbp
  41c53b:	mov    QWORD PTR [rsp+0x28],r14
  41c540:	mov    QWORD PTR [rsp+0x20],r13
  41c545:	call   0x41c120
  41c54a:	mov    rcx,QWORD PTR [rsp+0x38]
  41c54f:	mov    rdx,rax
  41c552:	call   0x41c390
  41c557:	mov    rcx,QWORD PTR [rdi]
  41c55a:	test   rcx,rcx
  41c55d:	jne    0x41c515
  41c55f:	mov    rcx,r15
  41c562:	add    rsp,0x58
  41c566:	pop    rbx
  41c567:	pop    rsi
  41c568:	pop    rdi
  41c569:	pop    rbp
  41c56a:	pop    r12
  41c56c:	pop    r13
  41c56e:	pop    r14
  41c570:	pop    r15
  41c572:	jmp    0x41a040
  41c577:	nop    WORD PTR [rax+rax*1+0x0]
  41c580:	cmp    BYTE PTR [rcx],0x0
  41c583:	jne    0x41c590
  41c585:	mov    rcx,rax
  41c588:	jmp    0x41c510
  41c58a:	nop    WORD PTR [rax+rax*1+0x0]
  41c590:	call   0x41c270
  41c595:	mov    rcx,QWORD PTR [rsp+0x38]
  41c59a:	mov    rdx,rax
  41c59d:	mov    QWORD PTR [rsp+0x48],rax
  41c5a2:	call   0x41c3e0
  41c5a7:	mov    rax,QWORD PTR [rsp+0x48]
  41c5ac:	mov    rcx,QWORD PTR [rdi]
  41c5af:	mov    QWORD PTR [rsp+0x38],rax
  41c5b4:	jmp    0x41c510
  41c5b9:	nop    DWORD PTR [rax+0x0]
  41c5c0:	lea    r8,[rip+0x255d9]        # 0x441ba0
  41c5c7:	lea    rcx,[rip+0x25485]        # 0x441a53
  41c5ce:	mov    r9,rbx
  41c5d1:	mov    edx,0x4
  41c5d6:	call   0x40fae0
  41c5db:	jmp    0x41c5db
  41c5dd:	nop    DWORD PTR [rax]
  41c5e0:	sub    rsp,0x38
  41c5e4:	lea    r8,[rip+0x255d0]        # 0x441bbb
  41c5eb:	test   rcx,rcx
  41c5ee:	je     0x41c5fc
  41c5f0:	cmp    BYTE PTR [rcx],0x2f
  41c5f3:	lea    r8,[rip+0x2560a]        # 0x441c04
  41c5fa:	je     0x41c613
  41c5fc:	lea    rdx,[rip+0x260bd]        # 0x4426c0
  41c603:	lea    rcx,[rip+0x25449]        # 0x441a53
  41c60a:	add    rsp,0x38
  41c60e:	jmp    0x40fd20
  41c613:	test   rdx,rdx
  41c616:	je     0x41c640
  41c618:	mov    QWORD PTR [rsp+0x20],rdx
  41c61d:	mov    QWORD PTR [rsp+0x28],0x0
  41c626:	xor    r9d,r9d
  41c629:	xor    r8d,r8d
  41c62c:	xor    edx,edx
  41c62e:	call   0x41c430
  41c633:	nop
  41c634:	add    rsp,0x38
  41c638:	ret    
  41c639:	nop    DWORD PTR [rax+0x0]
  41c640:	lea    r8,[rip+0x255d0]        # 0x441c17
  41c647:	jmp    0x41c5fc
  41c649:	nop    DWORD PTR [rax+0x0]
  41c650:	sub    rsp,0x38
  41c654:	test   rcx,rcx
  41c657:	je     0x41c6b0
  41c659:	cmp    BYTE PTR [rcx],0x2f
  41c65c:	je     0x41c680
  41c65e:	lea    r8,[rip+0x2559f]        # 0x441c04
  41c665:	lea    rdx,[rip+0x26034]        # 0x4426a0
  41c66c:	lea    rcx,[rip+0x253e0]        # 0x441a53
  41c673:	add    rsp,0x38
  41c677:	jmp    0x40fd20
  41c67c:	nop    DWORD PTR [rax+0x0]
  41c680:	test   r8,r8
  41c683:	je     0x41c6c0
  41c685:	mov    rax,r8
  41c688:	mov    QWORD PTR [rsp+0x28],0x0
  41c691:	mov    r8,rdx
  41c694:	mov    QWORD PTR [rsp+0x20],rax
  41c699:	xor    r9d,r9d
  41c69c:	xor    edx,edx
  41c69e:	call   0x41c430
  41c6a3:	nop
  41c6a4:	add    rsp,0x38
  41c6a8:	ret    
  41c6a9:	nop    DWORD PTR [rax+0x0]
  41c6b0:	lea    r8,[rip+0x25504]        # 0x441bbb
  41c6b7:	jmp    0x41c665
  41c6b9:	nop    DWORD PTR [rax+0x0]
  41c6c0:	lea    r8,[rip+0x25550]        # 0x441c17
  41c6c7:	jmp    0x41c665
  41c6c9:	nop    DWORD PTR [rax+0x0]
  41c6d0:	push   rsi
  41c6d1:	push   rbx
  41c6d2:	sub    rsp,0x28
  41c6d6:	test   rcx,rcx
  41c6d9:	je     0x41c710
  41c6db:	mov    rbx,rcx
  41c6de:	mov    ecx,0x18
  41c6e3:	mov    rsi,rdx
  41c6e6:	call   0x416750
  41c6eb:	mov    rdx,QWORD PTR [rip+0x67c56]        # 0x484348
  41c6f2:	mov    QWORD PTR [rax+0x8],rbx
  41c6f6:	mov    QWORD PTR [rax+0x10],rsi
  41c6fa:	mov    QWORD PTR [rip+0x67c47],rax        # 0x484348
  41c701:	mov    QWORD PTR [rax],rdx
  41c704:	add    rsp,0x28
  41c708:	pop    rbx
  41c709:	pop    rsi
  41c70a:	ret    
  41c70b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c710:	lea    r8,[rip+0x25512]        # 0x441c29
  41c717:	lea    rdx,[rip+0x25f02]        # 0x442620
  41c71e:	lea    rcx,[rip+0x2532e]        # 0x441a53
  41c725:	add    rsp,0x28
  41c729:	pop    rbx
  41c72a:	pop    rsi
  41c72b:	jmp    0x40fd20
  41c730:	test   rcx,rcx
  41c733:	je     0x41c741
  41c735:	mov    rdx,rcx
  41c738:	lea    rcx,[rip+0xffffffffffff1fa1]        # 0x40e6e0
  41c73f:	jmp    0x41c6d0
  41c741:	repz ret 
  41c743:	nop    DWORD PTR [rax]
  41c746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c750:	sub    rsp,0x28
  41c754:	lea    r8,[rip+0x254e5]        # 0x441c40
  41c75b:	lea    rcx,[rip+0x252f1]        # 0x441a53
  41c762:	mov    edx,0x20
  41c767:	call   0x40fae0
  41c76c:	xor    eax,eax
  41c76e:	add    rsp,0x28
  41c772:	ret    
  41c773:	nop    DWORD PTR [rax]
  41c776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c780:	mov    edx,DWORD PTR [rip+0x67bee]        # 0x484374
  41c786:	xor    eax,eax
  41c788:	test   edx,edx
  41c78a:	sete   al
  41c78d:	ret    
  41c78e:	xchg   ax,ax
  41c790:	mov    eax,DWORD PTR [rip+0x67bde]        # 0x484374
  41c796:	shr    eax,0xa
  41c799:	and    eax,0x1
  41c79c:	ret    
  41c79d:	nop    DWORD PTR [rax]
  41c7a0:	ret    
  41c7a1:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7b0:	push   rbx
  41c7b1:	sub    rsp,0x20
  41c7b5:	mov    ecx,0x10
  41c7ba:	call   0x40e610
  41c7bf:	mov    ecx,0x400
  41c7c4:	mov    rbx,rax
  41c7c7:	call   0x41a880
  41c7cc:	mov    QWORD PTR [rbx],rax
  41c7cf:	mov    rax,rbx
  41c7d2:	add    rsp,0x20
  41c7d6:	pop    rbx
  41c7d7:	ret    
  41c7d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7e0:	push   r14
  41c7e2:	push   r13
  41c7e4:	push   r12
  41c7e6:	push   rbp
  41c7e7:	push   rdi
  41c7e8:	push   rsi
  41c7e9:	push   rbx
  41c7ea:	sub    rsp,0x50
  41c7ee:	test   rcx,rcx
  41c7f1:	mov    rsi,rcx
  41c7f4:	mov    rax,r8
  41c7f7:	je     0x41c94b
  41c7fd:	test   edx,edx
  41c7ff:	je     0x41c970
  41c805:	test   rax,rax
  41c808:	je     0x41c9c9
  41c80e:	mov    rcx,QWORD PTR [rsi]
  41c811:	mov    r8d,edx
  41c814:	mov    rdx,rax
  41c817:	lea    rdi,[rsp+0x30]
  41c81c:	call   0x41ae00
  41c821:	mov    rdx,QWORD PTR [rsi]
  41c824:	mov    rax,QWORD PTR [rdx]
  41c827:	mov    rdx,QWORD PTR [rdx+0x8]
  41c82b:	cmp    rdx,0x13
  41c82f:	jbe    0x41c970
  41c835:	mov    ebp,DWORD PTR [rax]
  41c837:	bswap  ebp
  41c839:	mov    ebp,ebp
  41c83b:	cmp    rbp,rdx
  41c83e:	ja     0x41c970
  41c844:	mov    edx,DWORD PTR [rax+0x4]
  41c847:	mov    ecx,DWORD PTR [rax+0xc]
  41c84a:	lea    rbx,[rax+0x14]
  41c84e:	bswap  edx
  41c850:	bswap  ecx
  41c852:	mov    DWORD PTR [rsp+0x30],edx
  41c856:	mov    edx,DWORD PTR [rax+0x8]
  41c859:	mov    DWORD PTR [rsp+0x40],ecx
  41c85d:	mov    ecx,DWORD PTR [rax+0x10]
  41c860:	bswap  edx
  41c862:	test   ecx,ecx
  41c864:	mov    DWORD PTR [rsp+0x34],edx
  41c868:	jne    0x41c91d
  41c86e:	lea    ecx,[rdx+0x1]
  41c871:	mov    edx,0x8
  41c876:	call   0x40e800
  41c87b:	mov    ecx,DWORD PTR [rsp+0x40]
  41c87f:	mov    edx,0x10
  41c884:	mov    QWORD PTR [rsp+0x38],rax
  41c889:	call   0x40e800
  41c88e:	mov    QWORD PTR [rsp+0x48],rax
  41c893:	mov    eax,DWORD PTR [rsp+0x34]
  41c897:	test   eax,eax
  41c899:	je     0x41c8d2
  41c89b:	xor    r12d,r12d
  41c89e:	xchg   ax,ax
  41c8a0:	lea    r13,[rbx+0x4]
  41c8a4:	mov    ebx,DWORD PTR [rbx]
  41c8a6:	mov    rax,QWORD PTR [rsp+0x38]
  41c8ab:	mov    edx,r12d
  41c8ae:	add    r12d,0x1
  41c8b2:	mov    rcx,r13
  41c8b5:	bswap  ebx
  41c8b7:	lea    r14,[rax+rdx*8]
  41c8bb:	mov    ebx,ebx
  41c8bd:	mov    rdx,rbx
  41c8c0:	add    rbx,r13
  41c8c3:	call   0x418340
  41c8c8:	cmp    r12d,DWORD PTR [rsp+0x34]
  41c8cd:	mov    QWORD PTR [r14],rax
  41c8d0:	jb     0x41c8a0
  41c8d2:	mov    eax,DWORD PTR [rsp+0x40]
  41c8d6:	test   eax,eax
  41c8d8:	je     0x41c90f
  41c8da:	mov    rcx,QWORD PTR [rsp+0x48]
  41c8df:	sub    eax,0x1
  41c8e2:	lea    rdx,[rax*8+0x8]
  41c8ea:	xor    eax,eax
  41c8ec:	nop    DWORD PTR [rax+0x0]
  41c8f0:	mov    r8,QWORD PTR [rbx+rax*1]
  41c8f4:	bswap  r8
  41c8f7:	mov    QWORD PTR [rsp+0x28],r8
  41c8fc:	fld    QWORD PTR [rsp+0x28]
  41c900:	fstp   TBYTE PTR [rcx+rax*2]
  41c903:	add    rax,0x8
  41c907:	cmp    rax,rdx
  41c90a:	jne    0x41c8f0
  41c90c:	add    rbx,rax
  41c90f:	mov    rcx,QWORD PTR [rsi]
  41c912:	mov    rax,rbp
  41c915:	add    rax,QWORD PTR [rcx]
  41c918:	cmp    rbx,rax
  41c91b:	jbe    0x41c97f
  41c91d:	mov    rcx,QWORD PTR [rsp+0x48]
  41c922:	call   0x40e6e0
  41c927:	mov    rcx,QWORD PTR [rsp+0x38]
  41c92c:	call   0x41a040
  41c931:	lea    r8,[rip+0x25330]        # 0x441c68
  41c938:	lea    rcx,[rip+0x25114]        # 0x441a53
  41c93f:	mov    edx,0x4
  41c944:	call   0x40fae0
  41c949:	jmp    0x41c949
  41c94b:	lea    r8,[rip+0x2533b]        # 0x441c8d
  41c952:	lea    rdx,[rip+0x25c47]        # 0x4425a0
  41c959:	lea    rcx,[rip+0x250f3]        # 0x441a53
  41c960:	call   0x40fd20
  41c965:	nop
  41c966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c970:	add    rsp,0x50
  41c974:	pop    rbx
  41c975:	pop    rsi
  41c976:	pop    rdi
  41c977:	pop    rbp
  41c978:	pop    r12
  41c97a:	pop    r13
  41c97c:	pop    r14
  41c97e:	ret    
  41c97f:	mov    r8,rbp
  41c982:	xor    edx,edx
  41c984:	call   0x41b8e0
  41c989:	mov    edx,0x20
  41c98e:	mov    rcx,rdi
  41c991:	call   0x418300
  41c996:	mov    rcx,QWORD PTR [rsi+0x8]
  41c99a:	mov    rdx,rax
  41c99d:	call   0x417180
  41c9a2:	mov    rdx,QWORD PTR [rsi]
  41c9a5:	mov    QWORD PTR [rsi+0x8],rax
  41c9a9:	mov    rax,QWORD PTR [rdx]
  41c9ac:	mov    rdx,QWORD PTR [rdx+0x8]
  41c9b0:	cmp    rdx,0x13
  41c9b4:	ja     0x41c835
  41c9ba:	add    rsp,0x50
  41c9be:	pop    rbx
  41c9bf:	pop    rsi
  41c9c0:	pop    rdi
  41c9c1:	pop    rbp
  41c9c2:	pop    r12
  41c9c4:	pop    r13
  41c9c6:	pop    r14
  41c9c8:	ret    
  41c9c9:	lea    r8,[rip+0x252cd]        # 0x441c9d
  41c9d0:	lea    rdx,[rip+0x25bc9]        # 0x4425a0
  41c9d7:	lea    rcx,[rip+0x25075]        # 0x441a53
  41c9de:	call   0x40fd20
  41c9e3:	nop
  41c9e4:	add    rsp,0x50
  41c9e8:	pop    rbx
  41c9e9:	pop    rsi
  41c9ea:	pop    rdi
  41c9eb:	pop    rbp
  41c9ec:	pop    r12
  41c9ee:	pop    r13
  41c9f0:	pop    r14
  41c9f2:	ret    
  41c9f3:	nop    DWORD PTR [rax]
  41c9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca00:	push   rsi
  41ca01:	push   rbx
  41ca02:	sub    rsp,0x28
  41ca06:	test   rcx,rcx
  41ca09:	mov    rbx,rcx
  41ca0c:	je     0x41ca50
  41ca0e:	mov    rcx,QWORD PTR [rcx+0x8]
  41ca12:	test   rcx,rcx
  41ca15:	je     0x41ca40
  41ca17:	call   0x4176f0
  41ca1c:	mov    rcx,QWORD PTR [rbx+0x8]
  41ca20:	mov    rsi,QWORD PTR [rax]
  41ca23:	mov    rdx,rax
  41ca26:	call   0x417460
  41ca2b:	mov    QWORD PTR [rbx+0x8],rax
  41ca2f:	mov    rax,rsi
  41ca32:	add    rsp,0x28
  41ca36:	pop    rbx
  41ca37:	pop    rsi
  41ca38:	ret    
  41ca39:	nop    DWORD PTR [rax+0x0]
  41ca40:	xor    eax,eax
  41ca42:	add    rsp,0x28
  41ca46:	pop    rbx
  41ca47:	pop    rsi
  41ca48:	ret    
  41ca49:	nop    DWORD PTR [rax+0x0]
  41ca50:	lea    r8,[rip+0x25236]        # 0x441c8d
  41ca57:	lea    rdx,[rip+0x25b22]        # 0x442580
  41ca5e:	lea    rcx,[rip+0x24fee]        # 0x441a53
  41ca65:	call   0x40fd20
  41ca6a:	xor    eax,eax
  41ca6c:	add    rsp,0x28
  41ca70:	pop    rbx
  41ca71:	pop    rsi
  41ca72:	ret    
  41ca73:	nop    DWORD PTR [rax]
  41ca76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca80:	push   rbx
  41ca81:	sub    rsp,0x20
  41ca85:	test   rcx,rcx
  41ca88:	je     0x41cab0
  41ca8a:	mov    rbx,rcx
  41ca8d:	mov    rcx,QWORD PTR [rcx+0x8]
  41ca91:	call   0x41a040
  41ca96:	mov    rcx,QWORD PTR [rbx+0x18]
  41ca9a:	call   0x40e6e0
  41ca9f:	mov    rcx,rbx
  41caa2:	add    rsp,0x20
  41caa6:	pop    rbx
  41caa7:	jmp    0x40e6e0
  41caac:	nop    DWORD PTR [rax+0x0]
  41cab0:	lea    r8,[rip+0x251f4]        # 0x441cab
  41cab7:	lea    rdx,[rip+0x25aa2]        # 0x442560
  41cabe:	lea    rcx,[rip+0x24f8e]        # 0x441a53
  41cac5:	add    rsp,0x20
  41cac9:	pop    rbx
  41caca:	jmp    0x40fd20
  41cacf:	nop
  41cad0:	push   rbx
  41cad1:	sub    rsp,0x20
  41cad5:	test   rcx,rcx
  41cad8:	je     0x41cb15
  41cada:	cmp    QWORD PTR [rcx+0x8],0x0
  41cadf:	mov    rbx,rcx
  41cae2:	je     0x41cafb
  41cae4:	mov    rcx,rbx
  41cae7:	call   0x41ca00
  41caec:	mov    rcx,rax
  41caef:	call   0x41ca80
  41caf4:	cmp    QWORD PTR [rbx+0x8],0x0
  41caf9:	jne    0x41cae4
  41cafb:	mov    rcx,QWORD PTR [rbx]
  41cafe:	mov    edx,0x1
  41cb03:	call   0x41a8e0
  41cb08:	mov    rcx,rbx
  41cb0b:	add    rsp,0x20
  41cb0f:	pop    rbx
  41cb10:	jmp    0x40e6e0
  41cb15:	lea    r8,[rip+0x25171]        # 0x441c8d
  41cb1c:	lea    rdx,[rip+0x25a9d]        # 0x4425c0
  41cb23:	lea    rcx,[rip+0x24f29]        # 0x441a53
  41cb2a:	add    rsp,0x20
  41cb2e:	pop    rbx
  41cb2f:	jmp    0x40fd20
  41cb34:	xchg   ax,ax
  41cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb40:	push   r15
  41cb42:	push   r14
  41cb44:	push   r13
  41cb46:	push   r12
  41cb48:	push   rbp
  41cb49:	push   rdi
  41cb4a:	push   rsi
  41cb4b:	push   rbx
  41cb4c:	sub    rsp,0xb8
  41cb53:	mov    rbp,QWORD PTR [rsp+0x120]
  41cb5b:	cmp    ecx,0x6
  41cb5e:	mov    r12d,ecx
  41cb61:	mov    QWORD PTR [rsp+0x108],rdx
  41cb69:	mov    DWORD PTR [rsp+0x118],r9d
  41cb71:	je     0x41cf22
  41cb77:	cmp    ecx,0x7
  41cb7a:	mov    QWORD PTR [rsp+0x90],0x0
  41cb86:	mov    QWORD PTR [rsp+0x98],0x0
  41cb92:	mov    QWORD PTR [rsp+0xa0],0x0
  41cb9e:	je     0x41d091
  41cba4:	jbe    0x41ce44
  41cbaa:	cmp    ecx,0x8
  41cbad:	je     0x41d060
  41cbb3:	cmp    ecx,0x9
  41cbb6:	jne    0x41cbd0
  41cbb8:	mov    eax,DWORD PTR [rip+0x1db0e]        # 0x43a6cc
  41cbbe:	test   eax,eax
  41cbc0:	jne    0x41d196
  41cbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cbd0:	cmp    QWORD PTR [rsp+0x108],0x0
  41cbd9:	mov    rbx,QWORD PTR [rsp+0x108]
  41cbe1:	mov    ecx,0x400
  41cbe6:	mov    QWORD PTR [rsp+0x90],rbx
  41cbee:	setne  al
  41cbf1:	xor    edi,edi
  41cbf3:	test   r8,r8
  41cbf6:	setne  dil
  41cbfa:	movzx  edx,al
  41cbfd:	and    edi,eax
  41cbff:	add    edi,edx
  41cc01:	test   al,al
  41cc03:	mov    eax,0x0
  41cc08:	cmove  r8,rax
  41cc0c:	mov    QWORD PTR [rsp+0x98],r8
  41cc14:	call   0x41a880
  41cc19:	lea    rdx,[rsp+0x78]
  41cc1e:	mov    r8d,0x4
  41cc24:	mov    rcx,rax
  41cc27:	mov    rbx,rax
  41cc2a:	mov    DWORD PTR [rsp+0x78],0x0
  41cc32:	call   0x41ae00
  41cc37:	lea    rdx,[rsp+0x74]
  41cc3c:	mov    eax,r12d
  41cc3f:	mov    r8d,0x4
  41cc45:	bswap  eax
  41cc47:	mov    rcx,rbx
  41cc4a:	mov    DWORD PTR [rsp+0x74],eax
  41cc4e:	call   0x41ae00
  41cc53:	lea    rdx,[rsp+0x70]
  41cc58:	mov    eax,edi
  41cc5a:	mov    r8d,0x4
  41cc60:	bswap  eax
  41cc62:	mov    rcx,rbx
  41cc65:	mov    DWORD PTR [rsp+0x70],eax
  41cc69:	call   0x41ae00
  41cc6e:	mov    eax,DWORD PTR [rsp+0x118]
  41cc75:	lea    rdx,[rsp+0x6c]
  41cc7a:	mov    r8d,0x4
  41cc80:	mov    rcx,rbx
  41cc83:	bswap  eax
  41cc85:	mov    DWORD PTR [rsp+0x6c],eax
  41cc89:	call   0x41ae00
  41cc8e:	lea    rdx,[rsp+0x68]
  41cc93:	mov    r8d,0x4
  41cc99:	mov    rcx,rbx
  41cc9c:	mov    DWORD PTR [rsp+0x68],0x0
  41cca4:	call   0x41ae00
  41cca9:	test   edi,edi
  41ccab:	je     0x41cd0d
  41ccad:	lea    eax,[rdi-0x1]
  41ccb0:	lea    rsi,[rsp+0x90]
  41ccb8:	mov    r15,QWORD PTR [rsp+0x108]
  41ccc0:	lea    rdi,[rsp+0x7c]
  41ccc5:	lea    r14,[rsi+rax*8]
  41ccc9:	jmp    0x41ccd8
  41cccb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccd0:	mov    r15,QWORD PTR [rsi+0x8]
  41ccd4:	add    rsi,0x8
  41ccd8:	mov    rcx,r15
  41ccdb:	call   0x438788
  41cce0:	mov    r8d,0x4
  41cce6:	mov    r13,rax
  41cce9:	mov    rdx,rdi
  41ccec:	bswap  eax
  41ccee:	mov    rcx,rbx
  41ccf1:	mov    DWORD PTR [rsp+0x7c],eax
  41ccf5:	call   0x41ae00
  41ccfa:	mov    r8d,r13d
  41ccfd:	mov    rdx,r15
  41cd00:	mov    rcx,rbx
  41cd03:	call   0x41ae00
  41cd08:	cmp    rsi,r14
  41cd0b:	jne    0x41ccd0
  41cd0d:	mov    r15d,DWORD PTR [rsp+0x118]
  41cd15:	lea    rdi,[rsp+0x80]
  41cd1d:	test   r15d,r15d
  41cd20:	je     0x41cd73
  41cd22:	mov    eax,DWORD PTR [rsp+0x118]
  41cd29:	lea    rdi,[rsp+0x80]
  41cd31:	xor    r14d,r14d
  41cd34:	lea    esi,[rax-0x1]
  41cd37:	add    rsi,0x1
  41cd3b:	shl    rsi,0x4
  41cd3f:	nop
  41cd40:	fld    TBYTE PTR [rbp+r14*1+0x0]
  41cd45:	mov    r8d,0x8
  41cd4b:	mov    rdx,rdi
  41cd4e:	mov    rcx,rbx
  41cd51:	add    r14,0x10
  41cd55:	fstp   QWORD PTR [rsp+0x58]
  41cd59:	mov    r9,QWORD PTR [rsp+0x58]
  41cd5e:	bswap  r9
  41cd61:	mov    QWORD PTR [rsp+0x80],r9
  41cd69:	call   0x41ae00
  41cd6e:	cmp    r14,rsi
  41cd71:	jne    0x41cd40
  41cd73:	mov    rbp,QWORD PTR [rbx+0x8]
  41cd77:	mov    r8,rdi
  41cd7a:	xor    edx,edx
  41cd7c:	mov    r9d,0x4
  41cd82:	mov    rcx,rbx
  41cd85:	mov    eax,ebp
  41cd87:	mov    esi,ebp
  41cd89:	bswap  eax
  41cd8b:	mov    DWORD PTR [rsp+0x80],eax
  41cd92:	call   0x41b740
  41cd97:	xor    edx,edx
  41cd99:	mov    rcx,rbx
  41cd9c:	call   0x41a8e0
  41cda1:	mov    ecx,DWORD PTR [rip+0x1d941]        # 0x43a6e8
  41cda7:	mov    rdi,rax
  41cdaa:	test   ecx,ecx
  41cdac:	js     0x41cddc
  41cdae:	mov    rbx,QWORD PTR [rip+0x69b2b]        # 0x4868e0
  41cdb5:	jmp    0x41cdcd
  41cdb7:	nop    WORD PTR [rax+rax*1+0x0]
  41cdc0:	call   rbx
  41cdc2:	cmp    DWORD PTR [rax],0x4
  41cdc5:	jne    0x41cddc
  41cdc7:	mov    ecx,DWORD PTR [rip+0x1d91b]        # 0x43a6e8
  41cdcd:	mov    r8d,esi
  41cdd0:	mov    rdx,rdi
  41cdd3:	call   0x438708
  41cdd8:	test   eax,eax
  41cdda:	js     0x41cdc0
  41cddc:	mov    r14d,DWORD PTR [rip+0x6756d]        # 0x484350
  41cde3:	test   r14d,r14d
  41cde6:	jne    0x41ce80
  41cdec:	mov    rcx,rdi
  41cdef:	call   0x40e6e0
  41cdf4:	cmp    r12d,0x5
  41cdf8:	jne    0x41ce30
  41cdfa:	mov    r11d,DWORD PTR [rip+0x1d8cb]        # 0x43a6cc
  41ce01:	test   r11d,r11d
  41ce04:	jne    0x41d0c2
  41ce0a:	mov    r10d,DWORD PTR [rip+0x1d8bf]        # 0x43a6d0
  41ce11:	test   r10d,r10d
  41ce14:	jne    0x41ce30
  41ce16:	mov    rdx,QWORD PTR [rsp+0x108]
  41ce1e:	lea    rcx,[rip+0x24f29]        # 0x441d4e
  41ce25:	call   0x40fef0
  41ce2a:	nop
  41ce2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce30:	add    rsp,0xb8
  41ce37:	pop    rbx
  41ce38:	pop    rsi
  41ce39:	pop    rdi
  41ce3a:	pop    rbp
  41ce3b:	pop    r12
  41ce3d:	pop    r13
  41ce3f:	pop    r14
  41ce41:	pop    r15
  41ce43:	ret    
  41ce44:	cmp    ecx,0x2
  41ce47:	jne    0x41cbd0
  41ce4d:	mov    eax,DWORD PTR [rip+0x1d879]        # 0x43a6cc
  41ce53:	test   eax,eax
  41ce55:	je     0x41cbd0
  41ce5b:	lea    rcx,[rip+0x24e60]        # 0x441cc2
  41ce62:	mov    rdx,r8
  41ce65:	mov    QWORD PTR [rsp+0x38],r8
  41ce6a:	call   0x40fef0
  41ce6f:	mov    r8,QWORD PTR [rsp+0x38]
  41ce74:	jmp    0x41cbd0
  41ce79:	nop    DWORD PTR [rax+0x0]
  41ce80:	call   0x41c7b0
  41ce85:	mov    r8,rdi
  41ce88:	mov    rbx,rax
  41ce8b:	mov    rcx,rax
  41ce8e:	mov    edx,ebp
  41ce90:	call   0x41c7e0
  41ce95:	mov    rcx,rbx
  41ce98:	call   0x41ca00
  41ce9d:	test   rax,rax
  41cea0:	mov    rsi,rax
  41cea3:	je     0x41d165
  41cea9:	mov    rax,QWORD PTR [rbx]
  41ceac:	cmp    QWORD PTR [rax+0x8],0x0
  41ceb1:	jne    0x41cf90
  41ceb7:	mov    rcx,rbx
  41ceba:	xor    ebx,ebx
  41cebc:	call   0x41cad0
  41cec1:	mov    ecx,DWORD PTR [rsi]
  41cec3:	call   0x41bf40
  41cec8:	lea    rcx,[rip+0x24e49]        # 0x441d18
  41cecf:	mov    rdx,rax
  41ced2:	call   0x410040
  41ced7:	mov    r13d,DWORD PTR [rsi+0x4]
  41cedb:	test   r13d,r13d
  41cede:	je     0x41cefe
  41cee0:	mov    rax,QWORD PTR [rsi+0x8]
  41cee4:	mov    edx,ebx
  41cee6:	lea    rcx,[rip+0x24e35]        # 0x441d22
  41ceed:	add    ebx,0x1
  41cef0:	mov    rdx,QWORD PTR [rax+rdx*8]
  41cef4:	call   0x410040
  41cef9:	cmp    ebx,DWORD PTR [rsi+0x4]
  41cefc:	jb     0x41cee0
  41cefe:	mov    ebp,DWORD PTR [rsi+0x10]
  41cf01:	test   ebp,ebp
  41cf03:	jne    0x41d0e0
  41cf09:	lea    rcx,[rip+0x24e26]        # 0x441d36
  41cf10:	call   0x410040
  41cf15:	mov    rcx,rsi
  41cf18:	call   0x41ca80
  41cf1d:	jmp    0x41cdec
  41cf22:	fld    TBYTE PTR [rbp+0x0]
  41cf25:	fldz   
  41cf27:	fxch   st(1)
  41cf29:	fucomip st,st(1)
  41cf2b:	fstp   st(0)
  41cf2d:	jp     0x41cf35
  41cf2f:	je     0x41cfc1
  41cf35:	mov    r9d,DWORD PTR [rip+0x1d790]        # 0x43a6cc
  41cf3c:	mov    QWORD PTR [rsp+0x90],0x0
  41cf48:	mov    ebx,0x1
  41cf4d:	mov    QWORD PTR [rsp+0x98],0x0
  41cf59:	mov    QWORD PTR [rsp+0xa0],0x0
  41cf65:	test   r9d,r9d
  41cf68:	jne    0x41d159
  41cf6e:	mov    ecx,DWORD PTR [rip+0x1d75c]        # 0x43a6d0
  41cf74:	test   ecx,ecx
  41cf76:	jne    0x41d043
  41cf7c:	lea    rdx,[rip+0x24d35]        # 0x441cb8
  41cf83:	jmp    0x41d006
  41cf88:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf90:	lea    rax,[rip+0x24e28]        # 0x441dbf
  41cf97:	lea    r9,[rip+0x25772]        # 0x442710
  41cf9e:	lea    rdx,[rip+0x24db3]        # 0x441d58
  41cfa5:	lea    rcx,[rip+0x24aa7]        # 0x441a53
  41cfac:	mov    r8d,0x236
  41cfb2:	mov    QWORD PTR [rsp+0x20],rax
  41cfb7:	call   0x40fd50
  41cfbc:	jmp    0x41ceb7
  41cfc1:	mov    edx,DWORD PTR [rip+0x1d705]        # 0x43a6cc
  41cfc7:	xor    ebx,ebx
  41cfc9:	mov    QWORD PTR [rsp+0x90],0x0
  41cfd5:	mov    QWORD PTR [rsp+0x98],0x0
  41cfe1:	mov    QWORD PTR [rsp+0xa0],0x0
  41cfed:	test   edx,edx
  41cfef:	jne    0x41d01e
  41cff1:	mov    eax,DWORD PTR [rip+0x1d6d9]        # 0x43a6d0
  41cff7:	test   eax,eax
  41cff9:	jne    0x41cbd0
  41cfff:	lea    rdx,[rip+0x24cb7]        # 0x441cbd
  41d006:	lea    rcx,[rip+0x24ce0]        # 0x441ced
  41d00d:	mov    QWORD PTR [rsp+0x38],r8
  41d012:	call   0x40fef0
  41d017:	mov    r8,QWORD PTR [rsp+0x38]
  41d01c:	jmp    0x41d03b
  41d01e:	lea    rdx,[rip+0x24c98]        # 0x441cbd
  41d025:	lea    rcx,[rip+0x24cae]        # 0x441cda
  41d02c:	mov    QWORD PTR [rsp+0x38],r8
  41d031:	call   0x40fef0
  41d036:	mov    r8,QWORD PTR [rsp+0x38]
  41d03b:	test   ebx,ebx
  41d03d:	je     0x41cbd0
  41d043:	mov    eax,DWORD PTR [rip+0x1d69b]        # 0x43a6e4
  41d049:	test   eax,eax
  41d04b:	je     0x41cbd0
  41d051:	call   0x4388c0
  41d056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d060:	mov    eax,DWORD PTR [rip+0x1d666]        # 0x43a6cc
  41d066:	test   eax,eax
  41d068:	je     0x41cbd0
  41d06e:	mov    rdx,QWORD PTR [rsp+0x108]
  41d076:	lea    rcx,[rip+0x24c82]        # 0x441cff
  41d07d:	mov    QWORD PTR [rsp+0x38],r8
  41d082:	call   0x40fef0
  41d087:	mov    r8,QWORD PTR [rsp+0x38]
  41d08c:	jmp    0x41cbd0
  41d091:	mov    eax,DWORD PTR [rip+0x1d635]        # 0x43a6cc
  41d097:	test   eax,eax
  41d099:	je     0x41cbd0
  41d09f:	mov    rdx,QWORD PTR [rsp+0x108]
  41d0a7:	lea    rcx,[rip+0x24c43]        # 0x441cf1
  41d0ae:	mov    QWORD PTR [rsp+0x38],r8
  41d0b3:	call   0x40fef0
  41d0b8:	mov    r8,QWORD PTR [rsp+0x38]
  41d0bd:	jmp    0x41cbd0
  41d0c2:	mov    rdx,QWORD PTR [rsp+0x108]
  41d0ca:	lea    rcx,[rip+0x24c6d]        # 0x441d3e
  41d0d1:	call   0x40fef0
  41d0d6:	jmp    0x41ce30
  41d0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0e0:	lea    rcx,[rip+0x24c41]        # 0x441d28
  41d0e7:	call   0x410040
  41d0ec:	mov    ebx,DWORD PTR [rsi+0x10]
  41d0ef:	test   ebx,ebx
  41d0f1:	je     0x41d148
  41d0f3:	mov    rax,QWORD PTR [rsi+0x18]
  41d0f7:	lea    rdx,[rip+0x24a6b]        # 0x441b69
  41d0fe:	xor    r15d,r15d
  41d101:	lea    rbx,[rsp+0x40]
  41d106:	lea    r14,[rip+0x24bb3]        # 0x441cc0
  41d10d:	mov    rbp,rdx
  41d110:	fld    TBYTE PTR [rax]
  41d112:	jmp    0x41d12b
  41d114:	mov    eax,r15d
  41d117:	mov    rdx,rbp
  41d11a:	shl    rax,0x4
  41d11e:	add    rax,QWORD PTR [rsi+0x18]
  41d122:	test   r15d,r15d
  41d125:	cmovne rdx,r14
  41d129:	fld    TBYTE PTR [rax]
  41d12b:	lea    rcx,[rip+0x24bfb]        # 0x441d2d
  41d132:	mov    r8,rbx
  41d135:	add    r15d,0x1
  41d139:	fstp   TBYTE PTR [rsp+0x40]
  41d13d:	call   0x410040
  41d142:	cmp    r15d,DWORD PTR [rsi+0x10]
  41d146:	jb     0x41d114
  41d148:	lea    rcx,[rip+0x24bdc]        # 0x441d2b
  41d14f:	call   0x410040
  41d154:	jmp    0x41cf09
  41d159:	lea    rdx,[rip+0x24b58]        # 0x441cb8
  41d160:	jmp    0x41d025
  41d165:	lea    rax,[rip+0x24c47]        # 0x441db3
  41d16c:	lea    r9,[rip+0x2559d]        # 0x442710
  41d173:	lea    rdx,[rip+0x24bde]        # 0x441d58
  41d17a:	lea    rcx,[rip+0x248d2]        # 0x441a53
  41d181:	mov    r8d,0x235
  41d187:	mov    QWORD PTR [rsp+0x20],rax
  41d18c:	call   0x40fd50
  41d191:	jmp    0x41cea9
  41d196:	mov    rdx,QWORD PTR [rsp+0x108]
  41d19e:	lea    rcx,[rip+0x24b68]        # 0x441d0d
  41d1a5:	mov    QWORD PTR [rsp+0x38],r8
  41d1aa:	call   0x40fef0
  41d1af:	mov    r8,QWORD PTR [rsp+0x38]
  41d1b4:	jmp    0x41cbd0
  41d1b9:	nop    DWORD PTR [rax+0x0]
  41d1c0:	push   r15
  41d1c2:	push   r14
  41d1c4:	push   r13
  41d1c6:	push   r12
  41d1c8:	push   rbp
  41d1c9:	push   rdi
  41d1ca:	push   rsi
  41d1cb:	push   rbx
  41d1cc:	sub    rsp,0x58
  41d1d0:	mov    QWORD PTR [rsp+0xa0],rcx
  41d1d8:	mov    ecx,0x5
  41d1dd:	mov    QWORD PTR [rsp+0xb0],r8
  41d1e5:	mov    QWORD PTR [rsp+0xb8],r9
  41d1ed:	mov    QWORD PTR [rsp+0xa8],rdx
  41d1f5:	call   0x40f6b0
  41d1fa:	or     eax,0x18
  41d1fd:	mov    ecx,eax
  41d1ff:	call   0x40f6b0
  41d204:	cmp    QWORD PTR [rsp+0xa0],0x0
  41d20d:	je     0x41d29c
  41d213:	cmp    QWORD PTR [rsp+0xa8],0x0
  41d21c:	je     0x41d2b8
  41d222:	mov    eax,DWORD PTR [rip+0x1d498]        # 0x43a6c0
  41d228:	test   eax,eax
  41d22a:	jne    0x41d270
  41d22c:	cmp    QWORD PTR [rsp+0xb0],0x0
  41d235:	lea    rax,[rsp+0xb0]
  41d23d:	mov    DWORD PTR [rip+0x1d479],0x1        # 0x43a6c0
  41d247:	mov    QWORD PTR [rsp+0x48],rax
  41d24c:	je     0x41d2d4
  41d252:	lea    r8,[rip+0x250bd]        # 0x442316
  41d259:	lea    rdx,[rip+0x254c0]        # 0x442720
  41d260:	lea    rcx,[rip+0x247ec]        # 0x441a53
  41d267:	call   0x40fd20
  41d26c:	jmp    0x41d28b
  41d26e:	xchg   ax,ax
  41d270:	lea    r8,[rip+0x25071]        # 0x4422e8
  41d277:	lea    rdx,[rip+0x254a2]        # 0x442720
  41d27e:	lea    rcx,[rip+0x247ce]        # 0x441a53
  41d285:	call   0x40fd20
  41d28a:	nop
  41d28b:	add    rsp,0x58
  41d28f:	pop    rbx
  41d290:	pop    rsi
  41d291:	pop    rdi
  41d292:	pop    rbp
  41d293:	pop    r12
  41d295:	pop    r13
  41d297:	pop    r14
  41d299:	pop    r15
  41d29b:	ret    
  41d29c:	lea    r8,[rip+0x25028]        # 0x4422cb
  41d2a3:	lea    rdx,[rip+0x25476]        # 0x442720
  41d2aa:	lea    rcx,[rip+0x247a2]        # 0x441a53
  41d2b1:	call   0x40fd20
  41d2b6:	jmp    0x41d28b
  41d2b8:	lea    r8,[rip+0x25019]        # 0x4422d8
  41d2bf:	lea    rdx,[rip+0x2545a]        # 0x442720
  41d2c6:	lea    rcx,[rip+0x24786]        # 0x441a53
  41d2cd:	call   0x40fd20
  41d2d2:	jmp    0x41d28b
  41d2d4:	call   0x431b00
  41d2d9:	mov    edi,eax
  41d2db:	lea    r12,[rip+0x24af5]        # 0x441dd7
  41d2e2:	mov    ebp,0x13
  41d2e7:	call   0x431b00
  41d2ec:	mov    esi,eax
  41d2ee:	call   0x431b00
  41d2f3:	mov    ebx,eax
  41d2f5:	call   0x431b00
  41d2fa:	lea    r8,[rip+0x25025]        # 0x442326
  41d301:	lea    rcx,[rip+0x67018]        # 0x484320
  41d308:	mov    DWORD PTR [rsp+0x20],ebx
  41d30c:	mov    edx,0x25
  41d311:	mov    r9d,eax
  41d314:	mov    DWORD PTR [rsp+0x30],edi
  41d318:	mov    DWORD PTR [rsp+0x28],esi
  41d31c:	mov    ebx,0x1
  41d321:	call   0x4263c0
  41d326:	lea    rax,[rip+0x66ff3]        # 0x484320
  41d32d:	mov    edx,0x1
  41d332:	mov    QWORD PTR [rip+0x6707f],rax        # 0x4843b8
  41d339:	mov    rax,QWORD PTR [rsp+0xa8]
  41d341:	mov    r14,QWORD PTR [rax]
  41d344:	mov    rax,QWORD PTR [rsp+0xa0]
  41d34c:	mov    r15d,DWORD PTR [rax]
  41d34f:	cmp    r15d,0x1
  41d353:	ja     0x41d3a5
  41d355:	jmp    0x41d429
  41d35a:	nop    WORD PTR [rax+rax*1+0x0]
  41d360:	lea    rdi,[rip+0x24a90]        # 0x441df7
  41d367:	mov    rsi,rax
  41d36a:	mov    ecx,0x3
  41d36f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d371:	je     0x41d3d3
  41d373:	lea    rdi,[rip+0x24a80]        # 0x441dfa
  41d37a:	mov    ecx,0xc
  41d37f:	mov    rsi,rax
  41d382:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d384:	jne    0x41d520
  41d38a:	mov    DWORD PTR [rip+0x66fbc],0x1        # 0x484350
  41d394:	mov    QWORD PTR [r13+0x0],0x0
  41d39c:	add    ebx,0x1
  41d39f:	nop
  41d3a0:	cmp    r15d,ebx
  41d3a3:	jbe    0x41d3ed
  41d3a5:	mov    eax,ebx
  41d3a7:	mov    rdi,r12
  41d3aa:	mov    rcx,rbp
  41d3ad:	lea    r13,[r14+rax*8]
  41d3b1:	mov    rax,QWORD PTR [r13+0x0]
  41d3b5:	mov    rsi,rax
  41d3b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d3ba:	je     0x41d4f2
  41d3c0:	lea    rdi,[rip+0x24a23]        # 0x441dea
  41d3c7:	mov    rsi,rax
  41d3ca:	mov    ecx,0xd
  41d3cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d3d1:	jne    0x41d360
  41d3d3:	add    ebx,0x1
  41d3d6:	mov    DWORD PTR [rip+0x1d304],0x0        # 0x43a6e4
  41d3e0:	mov    QWORD PTR [r13+0x0],0x0
  41d3e8:	cmp    r15d,ebx
  41d3eb:	ja     0x41d3a5
  41d3ed:	lea    rcx,[r14+0x8]
  41d3f1:	mov    edx,0x1
  41d3f6:	mov    eax,0x1
  41d3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d400:	mov    r8,QWORD PTR [rcx]
  41d403:	test   r8,r8
  41d406:	je     0x41d41d
  41d408:	mov    r9d,edx
  41d40b:	add    edx,0x1
  41d40e:	cmp    eax,edx
  41d410:	mov    QWORD PTR [r14+r9*8],r8
  41d414:	jb     0x41d41d
  41d416:	mov    QWORD PTR [rcx],0x0
  41d41d:	add    eax,0x1
  41d420:	add    rcx,0x8
  41d424:	cmp    r15d,eax
  41d427:	jne    0x41d400
  41d429:	mov    rax,QWORD PTR [rsp+0xa0]
  41d431:	mov    DWORD PTR [rax],edx
  41d433:	call   0x425280
  41d438:	test   rax,rax
  41d43b:	je     0x41d775
  41d441:	mov    ecx,0xc8c49fb6
  41d446:	call   0x431590
  41d44b:	mov    rbx,rax
  41d44e:	mov    rcx,rax
  41d451:	call   0x431790
  41d456:	mov    rcx,rbx
  41d459:	mov    esi,eax
  41d45b:	call   0x431790
  41d460:	mov    rcx,rbx
  41d463:	mov    edi,eax
  41d465:	call   0x431790
  41d46a:	mov    rcx,rbx
  41d46d:	mov    ebp,eax
  41d46f:	call   0x431790
  41d474:	cmp    esi,0xfab39f9b
  41d47a:	jne    0x41d720
  41d480:	cmp    edi,0xb948fb0e
  41d486:	jne    0x41d720
  41d48c:	cmp    ebp,0x3d31be26
  41d492:	jne    0x41d720
  41d498:	cmp    eax,0x43a19d66
  41d49d:	jne    0x41d720
  41d4a3:	mov    rcx,rbx
  41d4a6:	call   0x4313e0
  41d4ab:	mov    rcx,QWORD PTR [rip+0x66f06]        # 0x4843b8
  41d4b2:	call   0x41bd90
  41d4b7:	lea    rcx,[rip+0x5c2]        # 0x41da80
  41d4be:	xor    edx,edx
  41d4c0:	call   0x40f760
  41d4c5:	mov    rbx,QWORD PTR [rip+0x66eec]        # 0x4843b8
  41d4cc:	call   0x425280
  41d4d1:	mov    QWORD PTR [rsp+0x20],0x0
  41d4da:	xor    r9d,r9d
  41d4dd:	mov    rdx,rax
  41d4e0:	mov    r8,rbx
  41d4e3:	mov    ecx,0x2
  41d4e8:	call   0x41cb40
  41d4ed:	jmp    0x41d28b
  41d4f2:	mov    ecx,0x5
  41d4f7:	add    ebx,0x1
  41d4fa:	call   0x40f6b0
  41d4ff:	or     eax,0x18
  41d502:	mov    ecx,eax
  41d504:	call   0x40f6b0
  41d509:	mov    QWORD PTR [r13+0x0],0x0
  41d511:	jmp    0x41d3a0
  41d516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d520:	lea    rsi,[rip+0x248df]        # 0x441e06
  41d527:	mov    rdi,rax
  41d52a:	mov    ecx,0xd
  41d52f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d531:	je     0x41d6a0
  41d537:	lea    rsi,[rip+0x248d5]        # 0x441e13
  41d53e:	mov    rdi,rax
  41d541:	mov    ecx,0xd
  41d546:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d548:	je     0x41d6a0
  41d54e:	lea    rsi,[rip+0x248cc]        # 0x441e21
  41d555:	mov    ecx,0x11
  41d55a:	mov    rdi,rax
  41d55d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d55f:	je     0x41d6e0
  41d565:	lea    rsi,[rip+0x248c6]        # 0x441e32
  41d56c:	mov    ecx,0x11
  41d571:	mov    rdi,rax
  41d574:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d576:	je     0x41d6e0
  41d57c:	lea    rsi,[rip+0x248c1]        # 0x441e44
  41d583:	mov    rdi,rax
  41d586:	mov    ecx,0x3
  41d58b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d58d:	je     0x41d670
  41d593:	lea    rsi,[rip+0x248ad]        # 0x441e47
  41d59a:	mov    rdi,rax
  41d59d:	mov    ecx,0x3
  41d5a2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d5a4:	je     0x41d670
  41d5aa:	lea    rsi,[rip+0x2489a]        # 0x441e4b
  41d5b1:	mov    rdi,rax
  41d5b4:	mov    ecx,0x3
  41d5b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d5bb:	je     0x41d78d
  41d5c1:	lea    rsi,[rip+0x24886]        # 0x441e4e
  41d5c8:	mov    rdi,rax
  41d5cb:	mov    ecx,0x3
  41d5d0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d5d2:	je     0x41d78d
  41d5d8:	lea    rsi,[rip+0x24873]        # 0x441e52
  41d5df:	mov    rdi,rax
  41d5e2:	mov    ecx,0x3
  41d5e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d5e9:	je     0x41d818
  41d5ef:	lea    rsi,[rip+0x2485f]        # 0x441e55
  41d5f6:	mov    rdi,rax
  41d5f9:	mov    ecx,0x3
  41d5fe:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d600:	je     0x41d818
  41d606:	lea    rsi,[rip+0x24895]        # 0x441ea2
  41d60d:	mov    rdi,rax
  41d610:	mov    ecx,0x3
  41d615:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d617:	je     0x41d8ce
  41d61d:	lea    rsi,[rip+0x24881]        # 0x441ea5
  41d624:	mov    ecx,0x8
  41d629:	mov    rdi,rax
  41d62c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d62e:	je     0x41d8ce
  41d634:	lea    rsi,[rip+0x24872]        # 0x441ead
  41d63b:	mov    ecx,0xa
  41d640:	mov    rdi,rax
  41d643:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d645:	jne    0x41d8f2
  41d64b:	mov    DWORD PTR [rip+0x1d07b],0x0        # 0x43a6d0
  41d655:	mov    DWORD PTR [rip+0x1d06d],0x1        # 0x43a6cc
  41d65f:	add    ebx,0x1
  41d662:	mov    QWORD PTR [r13+0x0],0x0
  41d66a:	jmp    0x41d3a0
  41d66f:	nop
  41d670:	cmp    BYTE PTR [rax+0x2],0x3d
  41d674:	je     0x41d7f9
  41d67a:	lea    eax,[rbx+0x1]
  41d67d:	cmp    r15d,eax
  41d680:	ja     0x41d7ce
  41d686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d690:	mov    QWORD PTR [r13+0x0],0x0
  41d698:	mov    ebx,eax
  41d69a:	jmp    0x41d3a0
  41d69f:	nop
  41d6a0:	cmp    BYTE PTR [rax+0xc],0x3d
  41d6a4:	je     0x41d73d
  41d6aa:	lea    eax,[rbx+0x1]
  41d6ad:	cmp    r15d,eax
  41d6b0:	jbe    0x41d690
  41d6b2:	mov    QWORD PTR [r13+0x0],0x0
  41d6ba:	lea    r13,[r14+rax*8]
  41d6be:	xor    r8d,r8d
  41d6c1:	xor    edx,edx
  41d6c3:	mov    rcx,QWORD PTR [r13+0x0]
  41d6c7:	call   0x418c50
  41d6cc:	mov    DWORD PTR [rip+0x1d016],eax        # 0x43a6e8
  41d6d2:	lea    eax,[rbx+0x2]
  41d6d5:	jmp    0x41d690
  41d6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d6e0:	cmp    BYTE PTR [rax+0x10],0x3d
  41d6e4:	je     0x41d759
  41d6e6:	lea    eax,[rbx+0x1]
  41d6e9:	cmp    r15d,eax
  41d6ec:	jbe    0x41d690
  41d6ee:	mov    QWORD PTR [r13+0x0],0x0
  41d6f6:	lea    r13,[r14+rax*8]
  41d6fa:	xor    r8d,r8d
  41d6fd:	xor    edx,edx
  41d6ff:	mov    rcx,QWORD PTR [r13+0x0]
  41d703:	call   0x418c50
  41d708:	mov    DWORD PTR [rip+0x66c92],eax        # 0x4843a0
  41d70e:	lea    eax,[rbx+0x2]
  41d711:	jmp    0x41d690
  41d716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d720:	lea    r8,[rip+0x24b49]        # 0x442270
  41d727:	lea    rcx,[rip+0x24325]        # 0x441a53
  41d72e:	mov    edx,0x10
  41d733:	call   0x40fae0
  41d738:	jmp    0x41d4a3
  41d73d:	lea    rcx,[rax+0xd]
  41d741:	xor    r8d,r8d
  41d744:	xor    edx,edx
  41d746:	call   0x418c50
  41d74b:	mov    DWORD PTR [rip+0x1cf97],eax        # 0x43a6e8
  41d751:	lea    eax,[rbx+0x1]
  41d754:	jmp    0x41d690
  41d759:	lea    rcx,[rax+0x11]
  41d75d:	xor    r8d,r8d
  41d760:	xor    edx,edx
  41d762:	call   0x418c50
  41d767:	mov    DWORD PTR [rip+0x66c33],eax        # 0x4843a0
  41d76d:	lea    eax,[rbx+0x1]
  41d770:	jmp    0x41d690
  41d775:	mov    rax,QWORD PTR [rsp+0xa8]
  41d77d:	mov    rax,QWORD PTR [rax]
  41d780:	mov    rcx,QWORD PTR [rax]
  41d783:	call   0x425340
  41d788:	jmp    0x41d441
  41d78d:	cmp    BYTE PTR [rax+0x2],0x3d
  41d791:	je     0x41d869
  41d797:	lea    eax,[rbx+0x1]
  41d79a:	cmp    r15d,eax
  41d79d:	jbe    0x41d690
  41d7a3:	mov    QWORD PTR [r13+0x0],0x0
  41d7ab:	lea    r13,[r14+rax*8]
  41d7af:	mov    rcx,QWORD PTR [rip+0x66bca]        # 0x484380
  41d7b6:	mov    rdx,QWORD PTR [r13+0x0]
  41d7ba:	call   0x417180
  41d7bf:	mov    QWORD PTR [rip+0x66bba],rax        # 0x484380
  41d7c6:	lea    eax,[rbx+0x2]
  41d7c9:	jmp    0x41d690
  41d7ce:	mov    QWORD PTR [r13+0x0],0x0
  41d7d6:	lea    r13,[r14+rax*8]
  41d7da:	mov    rcx,QWORD PTR [rip+0x66ba7]        # 0x484388
  41d7e1:	mov    rdx,QWORD PTR [r13+0x0]
  41d7e5:	call   0x417180
  41d7ea:	mov    QWORD PTR [rip+0x66b97],rax        # 0x484388
  41d7f1:	lea    eax,[rbx+0x2]
  41d7f4:	jmp    0x41d690
  41d7f9:	mov    rcx,QWORD PTR [rip+0x66b88]        # 0x484388
  41d800:	lea    rdx,[rax+0x3]
  41d804:	call   0x417180
  41d809:	mov    QWORD PTR [rip+0x66b78],rax        # 0x484388
  41d810:	lea    eax,[rbx+0x1]
  41d813:	jmp    0x41d690
  41d818:	cmp    BYTE PTR [rax+0x2],0x3d
  41d81c:	je     0x41d8c0
  41d822:	lea    eax,[rbx+0x1]
  41d825:	cmp    r15d,eax
  41d828:	jbe    0x41d888
  41d82a:	mov    ebx,eax
  41d82c:	mov    QWORD PTR [r13+0x0],0x0
  41d834:	mov    r9,QWORD PTR [r14+rbx*8]
  41d838:	lea    rdi,[rip+0x2461a]        # 0x441e59
  41d83f:	mov    ecx,0x5
  41d844:	mov    rsi,r9
  41d847:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d849:	jne    0x41d91f
  41d84f:	mov    DWORD PTR [rip+0x1ce6f],0x1        # 0x43a6c8
  41d859:	mov    QWORD PTR [r14+rbx*8],0x0
  41d861:	lea    ebx,[rax+0x1]
  41d864:	jmp    0x41d3a0
  41d869:	mov    rcx,QWORD PTR [rip+0x66b10]        # 0x484380
  41d870:	lea    rdx,[rax+0x3]
  41d874:	call   0x417180
  41d879:	mov    QWORD PTR [rip+0x66b00],rax        # 0x484380
  41d880:	lea    eax,[rbx+0x1]
  41d883:	jmp    0x41d690
  41d888:	mov    ebx,ebx
  41d88a:	lea    r9,[rip+0x242d8]        # 0x441b69
  41d891:	mov    rax,rbx
  41d894:	lea    rdi,[rip+0x245d7]        # 0x441e72
  41d89b:	mov    ecx,0xa
  41d8a0:	mov    rsi,r9
  41d8a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8a5:	jne    0x41d945
  41d8ab:	mov    DWORD PTR [rip+0x1ce1f],0x1        # 0x43a6d4
  41d8b5:	jmp    0x41d859
  41d8b7:	nop    WORD PTR [rax+rax*1+0x0]
  41d8c0:	mov    ebx,ebx
  41d8c2:	lea    r9,[rax+0x3]
  41d8c6:	mov    rax,rbx
  41d8c9:	jmp    0x41d838
  41d8ce:	mov    DWORD PTR [rip+0x1cdf8],0x1        # 0x43a6d0
  41d8d8:	mov    DWORD PTR [rip+0x1cdea],0x0        # 0x43a6cc
  41d8e2:	add    ebx,0x1
  41d8e5:	mov    QWORD PTR [r13+0x0],0x0
  41d8ed:	jmp    0x41d3a0
  41d8f2:	lea    rsi,[rip+0x245be]        # 0x441eb7
  41d8f9:	mov    rdi,rax
  41d8fc:	mov    ecx,0x3
  41d901:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d903:	jne    0x41d96b
  41d905:	mov    DWORD PTR [rip+0x66ab1],0x1        # 0x4843c0
  41d90f:	mov    QWORD PTR [r13+0x0],0x0
  41d917:	add    ebx,0x1
  41d91a:	jmp    0x41d3a0
  41d91f:	lea    rdi,[rip+0x24538]        # 0x441e5e
  41d926:	mov    ecx,0x5
  41d92b:	mov    rsi,r9
  41d92e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d930:	jne    0x41da19
  41d936:	mov    DWORD PTR [rip+0x1cd84],0x0        # 0x43a6c4
  41d940:	jmp    0x41d859
  41d945:	lea    rdi,[rip+0x24530]        # 0x441e7c
  41d94c:	mov    rsi,r9
  41d94f:	mov    ecx,0xd
  41d954:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d956:	jne    0x41da60
  41d95c:	mov    DWORD PTR [rip+0x1cd6e],0x0        # 0x43a6d4
  41d966:	jmp    0x41d859
  41d96b:	lea    rsi,[rip+0x24548]        # 0x441eba
  41d972:	mov    ecx,0x7
  41d977:	mov    rdi,rax
  41d97a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d97c:	je     0x41d991
  41d97e:	lea    rsi,[rip+0x2453c]        # 0x441ec1
  41d985:	mov    ecx,0x7
  41d98a:	mov    rdi,rax
  41d98d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d98f:	jne    0x41d9c2
  41d991:	cmp    BYTE PTR [rax+0x6],0x3d
  41d995:	je     0x41d9f0
  41d997:	lea    eax,[rbx+0x1]
  41d99a:	cmp    r15d,eax
  41d99d:	jbe    0x41d690
  41d9a3:	mov    QWORD PTR [r13+0x0],0x0
  41d9ab:	lea    r13,[r14+rax*8]
  41d9af:	mov    rax,QWORD PTR [r13+0x0]
  41d9b3:	mov    QWORD PTR [rip+0x669fe],rax        # 0x4843b8
  41d9ba:	lea    eax,[rbx+0x2]
  41d9bd:	jmp    0x41d690
  41d9c2:	lea    rsi,[rip+0x24500]        # 0x441ec9
  41d9c9:	mov    rdi,rax
  41d9cc:	mov    ecx,0x3
  41d9d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9d3:	je     0x41da03
  41d9d5:	lea    rsi,[rip+0x244f0]        # 0x441ecc
  41d9dc:	mov    ecx,0x7
  41d9e1:	mov    rdi,rax
  41d9e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9e6:	je     0x41da03
  41d9e8:	add    ebx,0x1
  41d9eb:	jmp    0x41d3a0
  41d9f0:	add    rax,0x7
  41d9f4:	mov    QWORD PTR [rip+0x669bd],rax        # 0x4843b8
  41d9fb:	lea    eax,[rbx+0x1]
  41d9fe:	jmp    0x41d690
  41da03:	mov    rdx,QWORD PTR [r14]
  41da06:	lea    rcx,[rip+0x244cb]        # 0x441ed8
  41da0d:	call   0x4387d8
  41da12:	xor    ecx,ecx
  41da14:	call   0x4388a0
  41da19:	lea    rdi,[rip+0x24443]        # 0x441e63
  41da20:	mov    ecx,0x9
  41da25:	mov    rsi,r9
  41da28:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41da2a:	je     0x41d936
  41da30:	lea    rdi,[rip+0x24435]        # 0x441e6c
  41da37:	mov    ecx,0x6
  41da3c:	mov    rsi,r9
  41da3f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41da41:	jne    0x41d894
  41da47:	mov    DWORD PTR [rip+0x1cc73],0x1        # 0x43a6c4
  41da51:	mov    DWORD PTR [rip+0x1cc6d],0x0        # 0x43a6c8
  41da5b:	jmp    0x41d859
  41da60:	lea    r8,[rip+0x24422]        # 0x441e89
  41da67:	lea    rcx,[rip+0x23fe5]        # 0x441a53
  41da6e:	mov    edx,0x4
  41da73:	call   0x40fae0
  41da78:	jmp    0x41da78
  41da7a:	nop    WORD PTR [rax+rax*1+0x0]
  41da80:	push   r13
  41da82:	push   r12
  41da84:	push   rbp
  41da85:	push   rdi
  41da86:	push   rsi
  41da87:	push   rbx
  41da88:	sub    rsp,0xb8
  41da8f:	test   rcx,rcx
  41da92:	mov    rdi,rcx
  41da95:	mov    ebx,edx
  41da97:	mov    rbp,r8
  41da9a:	mov    rsi,r9
  41da9d:	je     0x41dbf5
  41daa3:	lea    rax,[rip+0x24891]        # 0x44233b
  41daaa:	mov    QWORD PTR [rsp+0x30],rcx
  41daaf:	mov    edx,0x3
  41dab4:	mov    QWORD PTR [rsp+0x38],rax
  41dab9:	mov    eax,0x2
  41dabe:	xor    r12d,r12d
  41dac1:	test   bl,0x2
  41dac4:	je     0x41dada
  41dac6:	lea    rcx,[rip+0x24870]        # 0x44233d
  41dacd:	mov    r12b,0x1
  41dad0:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41dad5:	mov    eax,edx
  41dad7:	add    edx,0x1
  41dada:	test   bl,0x1
  41dadd:	je     0x41daf0
  41dadf:	lea    rcx,[rip+0x2485e]        # 0x442344
  41dae6:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41daeb:	mov    eax,edx
  41daed:	add    edx,0x1
  41daf0:	test   bl,0x4
  41daf3:	je     0x41db06
  41daf5:	lea    rcx,[rip+0x24853]        # 0x44234f
  41dafc:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41db01:	mov    eax,edx
  41db03:	add    edx,0x1
  41db06:	test   bl,0x8
  41db09:	je     0x41db1c
  41db0b:	lea    rcx,[rip+0x24843]        # 0x442355
  41db12:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41db17:	mov    eax,edx
  41db19:	add    edx,0x1
  41db1c:	test   bl,0x10
  41db1f:	je     0x41db32
  41db21:	lea    rcx,[rip+0x24836]        # 0x44235e
  41db28:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41db2d:	mov    eax,edx
  41db2f:	add    edx,0x1
  41db32:	test   bl,0x20
  41db35:	je     0x41db48
  41db37:	lea    rcx,[rip+0x24828]        # 0x442366
  41db3e:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41db43:	mov    eax,edx
  41db45:	add    edx,0x1
  41db48:	test   bl,0x40
  41db4b:	je     0x41db5e
  41db4d:	lea    rcx,[rip+0x2481a]        # 0x44236e
  41db54:	mov    QWORD PTR [rsp+rax*8+0x30],rcx
  41db59:	mov    eax,edx
  41db5b:	add    edx,0x1
  41db5e:	test   bl,0x80
  41db61:	mov    ecx,edx
  41db63:	je     0x41db76
  41db65:	lea    r11,[rip+0x24807]        # 0x442373
  41db6c:	add    ecx,0x1
  41db6f:	mov    QWORD PTR [rsp+rax*8+0x30],r11
  41db74:	mov    eax,edx
  41db76:	lea    r10,[rip+0x247fc]        # 0x442379
  41db7d:	mov    edx,eax
  41db7f:	add    eax,0x2
  41db82:	mov    QWORD PTR [rsp+rdx*8+0x30],r10
  41db87:	mov    QWORD PTR [rsp+rcx*8+0x30],rbp
  41db8c:	lea    rdx,[rsp+0x30]
  41db91:	lea    rcx,[rip+0x23fd1]        # 0x441b69
  41db98:	mov    QWORD PTR [rsp+rax*8+0x30],0x0
  41dba1:	call   0x41a120
  41dba6:	cmp    r12d,0x1
  41dbaa:	mov    rdx,rax
  41dbad:	mov    QWORD PTR [rsp+0x20],0x0
  41dbb6:	sbb    ecx,ecx
  41dbb8:	xor    r9d,r9d
  41dbbb:	xor    r8d,r8d
  41dbbe:	and    ecx,0x8
  41dbc1:	mov    r13,rax
  41dbc4:	add    ecx,0x1
  41dbc7:	call   0x41cb40
  41dbcc:	mov    r9,rsi
  41dbcf:	mov    r8,rbp
  41dbd2:	mov    edx,ebx
  41dbd4:	mov    rcx,rdi
  41dbd7:	call   0x40f2a0
  41dbdc:	mov    rcx,r13
  41dbdf:	call   0x40e6e0
  41dbe4:	nop
  41dbe5:	add    rsp,0xb8
  41dbec:	pop    rbx
  41dbed:	pop    rsi
  41dbee:	pop    rdi
  41dbef:	pop    rbp
  41dbf0:	pop    r12
  41dbf2:	pop    r13
  41dbf4:	ret    
  41dbf5:	mov    edx,0x1
  41dbfa:	xor    eax,eax
  41dbfc:	jmp    0x41dabe
  41dc01:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc10:	push   rbx
  41dc11:	sub    rsp,0x60
  41dc15:	movsd  QWORD PTR [rsp+0x38],xmm0
  41dc1b:	mov    rcx,rdx
  41dc1e:	lea    rdx,[rsp+0x80]
  41dc26:	mov    QWORD PTR [rsp+0x80],r8
  41dc2e:	mov    QWORD PTR [rsp+0x88],r9
  41dc36:	fld    QWORD PTR [rsp+0x38]
  41dc3a:	mov    QWORD PTR [rsp+0x48],rdx
  41dc3f:	fstp   TBYTE PTR [rsp+0x50]
  41dc43:	call   0x418440
  41dc48:	mov    rbx,rax
  41dc4b:	lea    rax,[rsp+0x50]
  41dc50:	mov    r9d,0x1
  41dc56:	xor    r8d,r8d
  41dc59:	mov    rdx,rbx
  41dc5c:	mov    ecx,0x7
  41dc61:	mov    QWORD PTR [rsp+0x20],rax
  41dc66:	call   0x41cb40
  41dc6b:	mov    rcx,rbx
  41dc6e:	call   0x40e6e0
  41dc73:	nop
  41dc74:	add    rsp,0x60
  41dc78:	pop    rbx
  41dc79:	ret    
  41dc7a:	nop    WORD PTR [rax+rax*1+0x0]
  41dc80:	push   rbx
  41dc81:	sub    rsp,0x60
  41dc85:	movsd  QWORD PTR [rsp+0x38],xmm0
  41dc8b:	mov    rcx,rdx
  41dc8e:	lea    rdx,[rsp+0x80]
  41dc96:	mov    QWORD PTR [rsp+0x80],r8
  41dc9e:	mov    QWORD PTR [rsp+0x88],r9
  41dca6:	fld    QWORD PTR [rsp+0x38]
  41dcaa:	mov    QWORD PTR [rsp+0x48],rdx
  41dcaf:	fstp   TBYTE PTR [rsp+0x50]
  41dcb3:	call   0x418440
  41dcb8:	mov    rbx,rax
  41dcbb:	lea    rax,[rsp+0x50]
  41dcc0:	mov    r9d,0x1
  41dcc6:	xor    r8d,r8d
  41dcc9:	mov    rdx,rbx
  41dccc:	mov    ecx,0x8
  41dcd1:	mov    QWORD PTR [rsp+0x20],rax
  41dcd6:	call   0x41cb40
  41dcdb:	mov    rcx,rbx
  41dcde:	call   0x40e6e0
  41dce3:	nop
  41dce4:	add    rsp,0x60
  41dce8:	pop    rbx
  41dce9:	ret    
  41dcea:	nop    WORD PTR [rax+rax*1+0x0]
  41dcf0:	push   rbx
  41dcf1:	sub    rsp,0x40
  41dcf5:	mov    QWORD PTR [rsp+0x58],rdx
  41dcfa:	lea    rdx,[rsp+0x58]
  41dcff:	mov    QWORD PTR [rsp+0x60],r8
  41dd04:	mov    QWORD PTR [rsp+0x68],r9
  41dd09:	mov    QWORD PTR [rsp+0x38],rdx
  41dd0e:	call   0x418440
  41dd13:	xor    r9d,r9d
  41dd16:	mov    rbx,rax
  41dd19:	xor    r8d,r8d
  41dd1c:	mov    rdx,rax
  41dd1f:	mov    QWORD PTR [rsp+0x20],0x0
  41dd28:	mov    ecx,0x9
  41dd2d:	call   0x41cb40
  41dd32:	mov    rcx,rbx
  41dd35:	call   0x40e6e0
  41dd3a:	nop
  41dd3b:	add    rsp,0x40
  41dd3f:	pop    rbx
  41dd40:	ret    
  41dd41:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd50:	push   rbp
  41dd51:	push   rdi
  41dd52:	push   rsi
  41dd53:	push   rbx
  41dd54:	sub    rsp,0x28
  41dd58:	mov    rbx,QWORD PTR [rip+0x665f9]        # 0x484358
  41dd5f:	test   rbx,rbx
  41dd62:	je     0x41de00
  41dd68:	test   rcx,rcx
  41dd6b:	je     0x41de22
  41dd71:	lea    rdx,[rip+0x24658]        # 0x4423d0
  41dd78:	mov    rsi,rcx
  41dd7b:	mov    rcx,rbx
  41dd7e:	call   0x438760
  41dd83:	test   rax,rax
  41dd86:	mov    rdi,rax
  41dd89:	je     0x41dde0
  41dd8b:	mov    rdx,rdi
  41dd8e:	mov    rcx,rbx
  41dd91:	sub    rdx,rbx
  41dd94:	call   0x418340
  41dd99:	lea    r8,[rdi+0x2]
  41dd9d:	xor    r9d,r9d
  41dda0:	mov    rdx,rsi
  41dda3:	mov    rbp,rax
  41dda6:	mov    rcx,rax
  41dda9:	call   0x4184b0
  41ddae:	mov    rcx,rbp
  41ddb1:	mov    rbx,rax
  41ddb4:	call   0x40e6e0
  41ddb9:	lea    rcx,[rip+0x245bc]        # 0x44237c
  41ddc0:	mov    rdx,rbx
  41ddc3:	call   0x41dcf0
  41ddc8:	mov    rcx,rbx
  41ddcb:	add    rsp,0x28
  41ddcf:	pop    rbx
  41ddd0:	pop    rsi
  41ddd1:	pop    rdi
  41ddd2:	pop    rbp
  41ddd3:	jmp    0x40e6e0
  41ddd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dde0:	lea    rcx,[rip+0x245a7]        # 0x44238e
  41dde7:	mov    r8,rsi
  41ddea:	mov    rdx,rbx
  41dded:	add    rsp,0x28
  41ddf1:	pop    rbx
  41ddf2:	pop    rsi
  41ddf3:	pop    rdi
  41ddf4:	pop    rbp
  41ddf5:	jmp    0x41dcf0
  41ddfa:	nop    WORD PTR [rax+rax*1+0x0]
  41de00:	lea    r8,[rip+0x2459b]        # 0x4423a2
  41de07:	lea    rdx,[rip+0x248f5]        # 0x442703
  41de0e:	lea    rcx,[rip+0x23c3e]        # 0x441a53
  41de15:	add    rsp,0x28
  41de19:	pop    rbx
  41de1a:	pop    rsi
  41de1b:	pop    rdi
  41de1c:	pop    rbp
  41de1d:	jmp    0x40fd20
  41de22:	lea    r8,[rip+0x2458f]        # 0x4423b8
  41de29:	jmp    0x41de07
  41de2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41de30:	push   r15
  41de32:	push   r14
  41de34:	push   r13
  41de36:	push   r12
  41de38:	push   rbp
  41de39:	push   rdi
  41de3a:	push   rsi
  41de3b:	push   rbx
  41de3c:	sub    rsp,0x98
  41de43:	mov    rax,QWORD PTR [rip+0x1c88e]        # 0x43a6d8
  41de4a:	test   rcx,rcx
  41de4d:	mov    rbp,rcx
  41de50:	mov    rsi,rdx
  41de53:	mov    QWORD PTR [rsp+0x38],rax
  41de58:	jne    0x41de64
  41de5a:	jmp    0x41e2f0
  41de5f:	nop
  41de60:	add    rsi,0x1
  41de64:	cmp    BYTE PTR [rsi],0x2f
  41de67:	je     0x41de60
  41de69:	mov    rcx,rsi
  41de6c:	call   0x438788
  41de71:	mov    edx,0x2f
  41de76:	mov    rcx,rsi
  41de79:	mov    rbx,rax
  41de7c:	call   0x4387a8
  41de81:	test   rax,rax
  41de84:	mov    r15,rax
  41de87:	je     0x41de98
  41de89:	mov    eax,ebx
  41de8b:	mov    rbx,r15
  41de8e:	sub    rbx,rsi
  41de91:	cmp    rax,rbx
  41de94:	cmovle rbx,rax
  41de98:	mov    r8,QWORD PTR [rbp+0x0]
  41de9c:	cmp    BYTE PTR [r8],0x0
  41dea0:	je     0x41e1f0
  41dea6:	mov    rcx,QWORD PTR [rsp+0x38]
  41deab:	lea    rdx,[rip+0x23cec]        # 0x441b9e
  41deb2:	xor    r9d,r9d
  41deb5:	call   0x4184b0
  41deba:	mov    rcx,QWORD PTR [rbp+0x10]
  41debe:	mov    QWORD PTR [rip+0x1c813],rax        # 0x43a6d8
  41dec5:	call   0x4174c0
  41deca:	mov    rcx,rax
  41decd:	call   0x417530
  41ded2:	test   rax,rax
  41ded5:	mov    r13,rax
  41ded8:	je     0x41e334
  41dede:	mov    r14,rax
  41dee1:	lea    rax,[rsp+0x60]
  41dee6:	mov    DWORD PTR [rsp+0x34],0x0
  41deee:	mov    QWORD PTR [rsp+0xe0],rbp
  41def6:	mov    QWORD PTR [rsp+0x50],rax
  41defb:	nop    DWORD PTR [rax+rax*1+0x0]
  41df00:	test   ebx,ebx
  41df02:	mov    rdi,QWORD PTR [r14]
  41df05:	jne    0x41e200
  41df0b:	mov    rcx,QWORD PTR [rip+0x66446]        # 0x484358
  41df12:	mov    r12,QWORD PTR [rip+0x1c7bf]        # 0x43a6d8
  41df19:	call   0x4182b0
  41df1e:	mov    r8,QWORD PTR [rdi]
  41df21:	lea    rdx,[rip+0x23c76]        # 0x441b9e
  41df28:	xor    r9d,r9d
  41df2b:	mov    rcx,r12
  41df2e:	mov    QWORD PTR [rsp+0x40],rax
  41df33:	call   0x4184b0
  41df38:	mov    edx,DWORD PTR [rip+0x6646a]        # 0x4843a8
  41df3e:	mov    QWORD PTR [rip+0x1c793],rax        # 0x43a6d8
  41df45:	lea    ecx,[rdx+0x1]
  41df48:	cmp    ecx,DWORD PTR [rip+0x66452]        # 0x4843a0
  41df4e:	mov    DWORD PTR [rip+0x66454],ecx        # 0x4843a8
  41df54:	jbe    0x41e2d0
  41df5a:	mov    edx,DWORD PTR [rip+0x66460]        # 0x4843c0
  41df60:	test   edx,edx
  41df62:	jne    0x41e260
  41df68:	call   0x41f080
  41df6d:	mov    rdx,QWORD PTR [rip+0x1c764]        # 0x43a6d8
  41df74:	xor    r9d,r9d
  41df77:	xor    r8d,r8d
  41df7a:	mov    ecx,0x5
  41df7f:	mov    QWORD PTR [rsp+0x20],0x0
  41df88:	mov    rbp,rax
  41df8b:	mov    QWORD PTR [rsp+0x58],rax
  41df90:	call   0x41cb40
  41df95:	xor    edx,edx
  41df97:	xor    ecx,ecx
  41df99:	mov    DWORD PTR [rip+0x66409],0x0        # 0x4843ac
  41dfa3:	mov    DWORD PTR [rip+0x663f7],0x1        # 0x4843a4
  41dfad:	call   0x40f7b0
  41dfb2:	mov    rcx,rbp
  41dfb5:	call   0x41f0e0
  41dfba:	mov    eax,DWORD PTR [rdi+0x8]
  41dfbd:	test   eax,eax
  41dfbf:	jne    0x41e323
  41dfc5:	mov    rax,QWORD PTR [rdi+0x28]
  41dfc9:	mov    QWORD PTR [rsp+0x48],rax
  41dfce:	mov    rcx,QWORD PTR [rip+0x663e3]        # 0x4843b8
  41dfd5:	call   0x41bd90
  41dfda:	mov    rax,QWORD PTR [rdi+0x10]
  41dfde:	test   rax,rax
  41dfe1:	je     0x41dfee
  41dfe3:	mov    rdx,QWORD PTR [rdi+0x28]
  41dfe7:	mov    rcx,QWORD PTR [rsp+0x48]
  41dfec:	call   rax
  41dfee:	mov    rdx,QWORD PTR [rdi+0x28]
  41dff2:	mov    rcx,QWORD PTR [rsp+0x48]
  41dff7:	call   QWORD PTR [rdi+0x18]
  41dffa:	mov    rcx,QWORD PTR [rip+0x66367]        # 0x484368
  41e001:	mov    DWORD PTR [rip+0x66369],0x0        # 0x484374
  41e00b:	mov    DWORD PTR [rip+0x6635b],0x0        # 0x484370
  41e015:	call   0x40e6e0
  41e01a:	mov    rcx,QWORD PTR [rip+0x6633f]        # 0x484360
  41e021:	mov    QWORD PTR [rip+0x6633c],0x0        # 0x484368
  41e02c:	call   0x40e6e0
  41e031:	mov    rbp,QWORD PTR [rip+0x66310]        # 0x484348
  41e038:	mov    QWORD PTR [rip+0x6631d],0x0        # 0x484360
  41e043:	test   rbp,rbp
  41e046:	je     0x41e07b
  41e048:	nop    DWORD PTR [rax+rax*1+0x0]
  41e050:	mov    rax,QWORD PTR [rbp+0x0]
  41e054:	mov    rcx,QWORD PTR [rbp+0x10]
  41e058:	mov    QWORD PTR [rip+0x662e9],rax        # 0x484348
  41e05f:	call   QWORD PTR [rbp+0x8]
  41e062:	mov    rdx,rbp
  41e065:	mov    ecx,0x18
  41e06a:	call   0x4167c0
  41e06f:	mov    rbp,QWORD PTR [rip+0x662d2]        # 0x484348
  41e076:	test   rbp,rbp
  41e079:	jne    0x41e050
  41e07b:	mov    rax,QWORD PTR [rdi+0x20]
  41e07f:	test   rax,rax
  41e082:	je     0x41e08f
  41e084:	mov    rdx,QWORD PTR [rdi+0x28]
  41e088:	mov    rcx,QWORD PTR [rsp+0x48]
  41e08d:	call   rax
  41e08f:	mov    eax,DWORD PTR [rdi+0x8]
  41e092:	test   eax,eax
  41e094:	jne    0x41e314
  41e09a:	mov    rcx,QWORD PTR [rsp+0x58]
  41e09f:	call   0x41f120
  41e0a4:	mov    edi,DWORD PTR [rip+0x662fa]        # 0x4843a4
  41e0aa:	mov    DWORD PTR [rip+0x662f0],0x0        # 0x4843a4
  41e0b4:	test   edi,edi
  41e0b6:	je     0x41e2c0
  41e0bc:	fldz   
  41e0be:	fstp   TBYTE PTR [rsp+0x60]
  41e0c2:	mov    eax,DWORD PTR [rip+0x662e4]        # 0x4843ac
  41e0c8:	mov    rbp,QWORD PTR [rsp+0x58]
  41e0cd:	xor    edx,edx
  41e0cf:	mov    rcx,rbp
  41e0d2:	mov    QWORD PTR [rsp+0x48],rax
  41e0d7:	fild   QWORD PTR [rsp+0x48]
  41e0db:	fstp   TBYTE PTR [rsp+0x70]
  41e0df:	call   0x41f200
  41e0e4:	xor    r8d,r8d
  41e0e7:	xor    edx,edx
  41e0e9:	mov    r9d,0x3
  41e0ef:	mov    rax,QWORD PTR [rsp+0x50]
  41e0f4:	mov    ecx,0x6
  41e0f9:	movsd  QWORD PTR [rsp+0x48],xmm0
  41e0ff:	mov    QWORD PTR [rsp+0x20],rax
  41e104:	fld    QWORD PTR [rsp+0x48]
  41e108:	fstp   TBYTE PTR [rsp+0x80]
  41e10f:	call   0x41cb40
  41e114:	mov    rcx,rbp
  41e117:	call   0x41f0b0
  41e11c:	mov    rcx,QWORD PTR [rip+0x1c5b5]        # 0x43a6d8
  41e123:	call   0x40e6e0
  41e128:	mov    rcx,QWORD PTR [rip+0x66229]        # 0x484358
  41e12f:	mov    QWORD PTR [rip+0x1c5a2],r12        # 0x43a6d8
  41e136:	call   0x40e6e0
  41e13b:	mov    r14,QWORD PTR [r14+0x8]
  41e13f:	mov    rax,QWORD PTR [rsp+0x40]
  41e144:	cmp    edi,0x1
  41e147:	adc    DWORD PTR [rsp+0x34],0x0
  41e14c:	test   r14,r14
  41e14f:	mov    QWORD PTR [rip+0x66202],rax        # 0x484358
  41e156:	jne    0x41df00
  41e15c:	nop    DWORD PTR [rax+0x0]
  41e160:	mov    rbp,QWORD PTR [rsp+0xe0]
  41e168:	mov    rcx,r13
  41e16b:	call   0x4170b0
  41e170:	mov    rcx,QWORD PTR [rbp+0x8]
  41e174:	call   0x4174c0
  41e179:	mov    rcx,rax
  41e17c:	call   0x417530
  41e181:	test   rax,rax
  41e184:	mov    rbp,rax
  41e187:	je     0x41e225
  41e18d:	mov    r13,rax
  41e190:	lea    r12,[rip+0x239d2]        # 0x441b69
  41e197:	jmp    0x41e1bf
  41e199:	nop    DWORD PTR [rax+0x0]
  41e1a0:	test   r15,r15
  41e1a3:	mov    rdx,r12
  41e1a6:	mov    rcx,rdi
  41e1a9:	cmovne rdx,r15
  41e1ad:	call   0x41de30
  41e1b2:	add    DWORD PTR [rsp+0x34],eax
  41e1b6:	mov    r13,QWORD PTR [r13+0x8]
  41e1ba:	test   r13,r13
  41e1bd:	je     0x41e225
  41e1bf:	test   ebx,ebx
  41e1c1:	mov    rdi,QWORD PTR [r13+0x0]
  41e1c5:	je     0x41e1a0
  41e1c7:	mov    r14,QWORD PTR [rdi]
  41e1ca:	mov    rcx,r14
  41e1cd:	call   0x438788
  41e1d2:	cmp    ebx,eax
  41e1d4:	jne    0x41e1b6
  41e1d6:	mov    r8d,eax
  41e1d9:	mov    rdx,r14
  41e1dc:	mov    rcx,rsi
  41e1df:	call   0x438780
  41e1e4:	test   eax,eax
  41e1e6:	jne    0x41e1b6
  41e1e8:	jmp    0x41e1a0
  41e1ea:	nop    WORD PTR [rax+rax*1+0x0]
  41e1f0:	mov    rcx,QWORD PTR [rsp+0x38]
  41e1f5:	call   0x4182b0
  41e1fa:	jmp    0x41deba
  41e1ff:	nop
  41e200:	mov    r12,QWORD PTR [rdi]
  41e203:	mov    rcx,r12
  41e206:	call   0x438788
  41e20b:	cmp    ebx,eax
  41e20d:	je     0x41e341
  41e213:	mov    r14,QWORD PTR [r14+0x8]
  41e217:	test   r14,r14
  41e21a:	jne    0x41df00
  41e220:	jmp    0x41e160
  41e225:	mov    rcx,rbp
  41e228:	call   0x4170b0
  41e22d:	mov    rcx,QWORD PTR [rip+0x1c4a4]        # 0x43a6d8
  41e234:	call   0x40e6e0
  41e239:	mov    rax,QWORD PTR [rsp+0x38]
  41e23e:	mov    QWORD PTR [rip+0x1c493],rax        # 0x43a6d8
  41e245:	mov    eax,DWORD PTR [rsp+0x34]
  41e249:	add    rsp,0x98
  41e250:	pop    rbx
  41e251:	pop    rsi
  41e252:	pop    rdi
  41e253:	pop    rbp
  41e254:	pop    r12
  41e256:	pop    r13
  41e258:	pop    r14
  41e25a:	pop    r15
  41e25c:	ret    
  41e25d:	nop    DWORD PTR [rax]
  41e260:	lea    rcx,[rip+0x23a86]        # 0x441ced
  41e267:	mov    rdx,rax
  41e26a:	call   0x40fef0
  41e26f:	mov    rdx,QWORD PTR [rip+0x1c462]        # 0x43a6d8
  41e276:	mov    QWORD PTR [rsp+0x20],0x0
  41e27f:	xor    r9d,r9d
  41e282:	xor    r8d,r8d
  41e285:	mov    ecx,0x3
  41e28a:	call   0x41cb40
  41e28f:	mov    rcx,QWORD PTR [rip+0x1c442]        # 0x43a6d8
  41e296:	call   0x40e6e0
  41e29b:	mov    rcx,QWORD PTR [rip+0x660b6]        # 0x484358
  41e2a2:	mov    QWORD PTR [rip+0x1c42f],r12        # 0x43a6d8
  41e2a9:	call   0x40e6e0
  41e2ae:	mov    rax,QWORD PTR [rsp+0x40]
  41e2b3:	mov    QWORD PTR [rip+0x6609e],rax        # 0x484358
  41e2ba:	jmp    0x41e213
  41e2bf:	nop
  41e2c0:	fld1   
  41e2c2:	jmp    0x41e0be
  41e2c7:	nop    WORD PTR [rax+rax*1+0x0]
  41e2d0:	mov    QWORD PTR [rsp+0x20],0x0
  41e2d9:	xor    r9d,r9d
  41e2dc:	xor    r8d,r8d
  41e2df:	mov    rdx,rax
  41e2e2:	mov    ecx,0x4
  41e2e7:	call   0x41cb40
  41e2ec:	jmp    0x41e28f
  41e2ee:	xchg   ax,ax
  41e2f0:	lea    r8,[rip+0x23873]        # 0x441b6a
  41e2f7:	lea    rdx,[rip+0x242e2]        # 0x4425e0
  41e2fe:	lea    rcx,[rip+0x2374e]        # 0x441a53
  41e305:	call   0x40fd20
  41e30a:	mov    eax,0xffffffff
  41e30f:	jmp    0x41e249
  41e314:	mov    rcx,QWORD PTR [rsp+0x48]
  41e319:	call   0x40e6e0
  41e31e:	jmp    0x41e09a
  41e323:	mov    ecx,eax
  41e325:	call   0x40e610
  41e32a:	mov    QWORD PTR [rsp+0x48],rax
  41e32f:	jmp    0x41dfce
  41e334:	mov    DWORD PTR [rsp+0x34],0x0
  41e33c:	jmp    0x41e168
  41e341:	mov    r8d,eax
  41e344:	mov    rdx,r12
  41e347:	mov    rcx,rsi
  41e34a:	call   0x438780
  41e34f:	test   eax,eax
  41e351:	jne    0x41e213
  41e357:	jmp    0x41df0b
  41e35c:	nop    DWORD PTR [rax+0x0]
  41e360:	push   r14
  41e362:	push   r13
  41e364:	push   r12
  41e366:	push   rbp
  41e367:	push   rdi
  41e368:	push   rsi
  41e369:	push   rbx
  41e36a:	sub    rsp,0x20
  41e36e:	mov    eax,DWORD PTR [rip+0x1c34c]        # 0x43a6c0
  41e374:	mov    rbp,rcx
  41e377:	test   eax,eax
  41e379:	je     0x41e3b2
  41e37b:	cmp    DWORD PTR [rip+0x1c35e],0x1        # 0x43a6e0
  41e382:	je     0x41e3e0
  41e384:	lea    r8,[rip+0x24072]        # 0x4423fd
  41e38b:	lea    rdx,[rip+0x2426e]        # 0x442600
  41e392:	lea    rcx,[rip+0x236ba]        # 0x441a53
  41e399:	call   0x40fd20
  41e39e:	mov    eax,0xffffffff
  41e3a3:	add    rsp,0x20
  41e3a7:	pop    rbx
  41e3a8:	pop    rsi
  41e3a9:	pop    rdi
  41e3aa:	pop    rbp
  41e3ab:	pop    r12
  41e3ad:	pop    r13
  41e3af:	pop    r14
  41e3b1:	ret    
  41e3b2:	lea    r8,[rip+0x2401f]        # 0x4423d8
  41e3b9:	lea    rdx,[rip+0x24240]        # 0x442600
  41e3c0:	lea    rcx,[rip+0x2368c]        # 0x441a53
  41e3c7:	call   0x40fd20
  41e3cc:	mov    eax,0xffffffff
  41e3d1:	add    rsp,0x20
  41e3d5:	pop    rbx
  41e3d6:	pop    rsi
  41e3d7:	pop    rdi
  41e3d8:	pop    rbp
  41e3d9:	pop    r12
  41e3db:	pop    r13
  41e3dd:	pop    r14
  41e3df:	ret    
  41e3e0:	mov    rsi,QWORD PTR [rip+0x65fa1]        # 0x484388
  41e3e7:	mov    DWORD PTR [rip+0x1c2ef],0x0        # 0x43a6e0
  41e3f1:	test   rsi,rsi
  41e3f4:	je     0x41e4fa
  41e3fa:	lea    r13,[rip+0x23768]        # 0x441b69
  41e401:	xor    r12d,r12d
  41e404:	test   rsi,rsi
  41e407:	je     0x41e4cb
  41e40d:	mov    rcx,QWORD PTR [rbp+0x0]
  41e411:	mov    rbx,QWORD PTR [rsi]
  41e414:	call   0x438788
  41e419:	mov    rdx,rsi
  41e41c:	mov    rcx,rsi
  41e41f:	mov    rdi,rax
  41e422:	call   0x417460
  41e427:	mov    QWORD PTR [rip+0x65f5a],rax        # 0x484388
  41e42e:	cmp    BYTE PTR [rbx],0x2f
  41e431:	mov    rsi,rax
  41e434:	jne    0x41e449
  41e436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e440:	add    rbx,0x1
  41e444:	cmp    BYTE PTR [rbx],0x2f
  41e447:	je     0x41e440
  41e449:	test   edi,edi
  41e44b:	je     0x41e4e0
  41e451:	mov    edx,0x2f
  41e456:	mov    rcx,rbx
  41e459:	call   0x4387a8
  41e45e:	mov    rcx,rbx
  41e461:	mov    r14,rax
  41e464:	call   0x438788
  41e469:	test   r14,r14
  41e46c:	mov    r9d,eax
  41e46f:	je     0x41e481
  41e471:	mov    r9d,eax
  41e474:	mov    rax,r14
  41e477:	sub    rax,rbx
  41e47a:	cmp    r9,rax
  41e47d:	cmovg  r9,rax
  41e481:	cmp    r9d,edi
  41e484:	je     0x41e48f
  41e486:	test   r9d,r9d
  41e489:	jne    0x41e404
  41e48f:	mov    rdx,QWORD PTR [rbp+0x0]
  41e493:	mov    r8d,edi
  41e496:	mov    rcx,rbx
  41e499:	call   0x438780
  41e49e:	test   eax,eax
  41e4a0:	jne    0x41e404
  41e4a6:	test   r14,r14
  41e4a9:	mov    rdx,r14
  41e4ac:	mov    rcx,rbp
  41e4af:	cmove  rdx,r13
  41e4b3:	call   0x41de30
  41e4b8:	mov    rsi,QWORD PTR [rip+0x65ec9]        # 0x484388
  41e4bf:	add    r12d,eax
  41e4c2:	test   rsi,rsi
  41e4c5:	jne    0x41e40d
  41e4cb:	mov    eax,r12d
  41e4ce:	add    rsp,0x20
  41e4d2:	pop    rbx
  41e4d3:	pop    rsi
  41e4d4:	pop    rdi
  41e4d5:	pop    rbp
  41e4d6:	pop    r12
  41e4d8:	pop    r13
  41e4da:	pop    r14
  41e4dc:	ret    
  41e4dd:	nop    DWORD PTR [rax]
  41e4e0:	mov    rdx,rbx
  41e4e3:	mov    rcx,rbp
  41e4e6:	call   0x41de30
  41e4eb:	mov    rsi,QWORD PTR [rip+0x65e96]        # 0x484388
  41e4f2:	add    r12d,eax
  41e4f5:	jmp    0x41e404
  41e4fa:	lea    rdx,[rip+0x23668]        # 0x441b69
  41e501:	xor    ecx,ecx
  41e503:	call   0x417180
  41e508:	mov    rsi,rax
  41e50b:	mov    QWORD PTR [rip+0x65e76],rax        # 0x484388
  41e512:	jmp    0x41e3fa
  41e517:	nop    WORD PTR [rax+rax*1+0x0]
  41e520:	sub    rsp,0x28
  41e524:	call   0x41c330
  41e529:	mov    rcx,rax
  41e52c:	add    rsp,0x28
  41e530:	jmp    0x41e360
  41e535:	nop
  41e536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e540:	push   r12
  41e542:	push   rbp
  41e543:	push   rdi
  41e544:	push   rsi
  41e545:	push   rbx
  41e546:	add    rsp,0xffffffffffffff80
  41e54a:	mov    rsi,QWORD PTR [rsp+0xd0]
  41e552:	lea    rax,[rip+0x23ebc]        # 0x442415
  41e559:	lea    rdi,[rsp+0x60]
  41e55e:	mov    rbp,r9
  41e561:	mov    r9d,r8d
  41e564:	lea    r8,[rip+0x23ec7]        # 0x442432
  41e56b:	mov    rbx,rcx
  41e56e:	mov    r12,rdx
  41e571:	test   rsi,rsi
  41e574:	mov    edx,0x20
  41e579:	mov    rcx,rdi
  41e57c:	cmove  rsi,rax
  41e580:	call   0x4263c0
  41e585:	cmp    BYTE PTR [rbp+0x0],0x0
  41e589:	lea    rax,[rip+0x235d9]        # 0x441b69
  41e590:	lea    rdx,[rip+0x23e99]        # 0x442430
  41e597:	mov    rcx,rax
  41e59a:	cmovne rcx,rdx
  41e59e:	test   rbx,rbx
  41e5a1:	je     0x41e66f
  41e5a7:	cmp    BYTE PTR [rbx],0x0
  41e5aa:	cmove  rdx,rax
  41e5ae:	lea    rax,[rip+0x23e87]        # 0x44243c
  41e5b5:	lea    r8,[rip+0x23e79]        # 0x442435
  41e5bc:	mov    QWORD PTR [rsp+0x40],rcx
  41e5c1:	mov    r9,r12
  41e5c4:	mov    rcx,rbx
  41e5c7:	mov    QWORD PTR [rsp+0x58],0x0
  41e5d0:	mov    QWORD PTR [rsp+0x48],rax
  41e5d5:	lea    rax,[rip+0x23e54]        # 0x442430
  41e5dc:	mov    QWORD PTR [rsp+0x50],rsi
  41e5e1:	mov    QWORD PTR [rsp+0x38],rbp
  41e5e6:	mov    QWORD PTR [rsp+0x28],rdi
  41e5eb:	mov    QWORD PTR [rsp+0x30],rax
  41e5f0:	mov    QWORD PTR [rsp+0x20],rax
  41e5f5:	call   0x4184b0
  41e5fa:	lea    rcx,[rip+0x23e3d]        # 0x44243e
  41e601:	mov    rdx,rax
  41e604:	mov    rbx,rax
  41e607:	call   0x410040
  41e60c:	mov    rcx,QWORD PTR [rip+0x65ced]        # 0x484300
  41e613:	test   rcx,rcx
  41e616:	je     0x41e61d
  41e618:	call   0x438850
  41e61d:	mov    rcx,rbx
  41e620:	call   0x438788
  41e625:	lea    rsi,[rax+0x1]
  41e629:	mov    rcx,rsi
  41e62c:	call   0x438800
  41e631:	mov    r8,rsi
  41e634:	mov    rdx,rbx
  41e637:	mov    rcx,rax
  41e63a:	mov    QWORD PTR [rip+0x65cbf],rax        # 0x484300
  41e641:	call   0x4387f0
  41e646:	xor    r9d,r9d
  41e649:	xor    r8d,r8d
  41e64c:	mov    rdx,rbx
  41e64f:	mov    ecx,0x1
  41e654:	mov    QWORD PTR [rsp+0x20],0x0
  41e65d:	call   0x41cb40
  41e662:	mov    rcx,rbx
  41e665:	call   0x40e6e0
  41e66a:	call   0x4388c0
  41e66f:	mov    rdx,rax
  41e672:	mov    rbx,rax
  41e675:	jmp    0x41e5ae
  41e67a:	nop    WORD PTR [rax+rax*1+0x0]
  41e680:	push   rbp
  41e681:	push   rdi
  41e682:	push   rsi
  41e683:	push   rbx
  41e684:	sub    rsp,0x38
  41e688:	mov    rsi,rdx
  41e68b:	mov    rdx,QWORD PTR [rsp+0x80]
  41e693:	mov    rbx,rcx
  41e696:	mov    edi,r8d
  41e699:	lea    rcx,[rip+0x23da5]        # 0x442445
  41e6a0:	lea    r8,[rip+0x23684]        # 0x441d2b
  41e6a7:	mov    rbp,r9
  41e6aa:	xor    r9d,r9d
  41e6ad:	call   0x4184b0
  41e6b2:	mov    r9,rbp
  41e6b5:	mov    QWORD PTR [rsp+0x20],rax
  41e6ba:	mov    r8d,edi
  41e6bd:	mov    rdx,rsi
  41e6c0:	mov    rcx,rbx
  41e6c3:	call   0x41e540
  41e6c8:	nop
  41e6c9:	nop    DWORD PTR [rax+0x0]
  41e6d0:	push   rbp
  41e6d1:	push   rdi
  41e6d2:	push   rsi
  41e6d3:	push   rbx
  41e6d4:	sub    rsp,0x68
  41e6d8:	mov    rax,QWORD PTR [rsp+0xb8]
  41e6e0:	mov    rbx,rcx
  41e6e3:	mov    rsi,rdx
  41e6e6:	mov    edi,r8d
  41e6e9:	mov    rbp,r9
  41e6ec:	fld    TBYTE PTR [rax]
  41e6ee:	mov    rax,QWORD PTR [rsp+0xc8]
  41e6f6:	fld    TBYTE PTR [rax]
  41e6f8:	mov    eax,DWORD PTR [rsp+0xd0]
  41e6ff:	cmp    al,0x69
  41e701:	je     0x41e7e1
  41e707:	cmp    al,0x78
  41e709:	je     0x41e762
  41e70b:	cmp    al,0x66
  41e70d:	je     0x41e72b
  41e70f:	fstp   st(0)
  41e711:	fstp   st(0)
  41e713:	xor    eax,eax
  41e715:	mov    QWORD PTR [rsp+0x20],rax
  41e71a:	mov    r9,rbp
  41e71d:	mov    r8d,edi
  41e720:	mov    rdx,rsi
  41e723:	mov    rcx,rbx
  41e726:	call   0x41e540
  41e72b:	fxch   st(1)
  41e72d:	fstp   TBYTE PTR [rsp+0x50]
  41e731:	lea    rax,[rsp+0x40]
  41e736:	mov    r9,QWORD PTR [rsp+0xc0]
  41e73e:	mov    rdx,QWORD PTR [rsp+0xb0]
  41e746:	lea    r8,[rsp+0x50]
  41e74b:	lea    rcx,[rip+0x23d66]        # 0x4424b8
  41e752:	mov    QWORD PTR [rsp+0x20],rax
  41e757:	fstp   TBYTE PTR [rsp+0x40]
  41e75b:	call   0x418470
  41e760:	jmp    0x41e715
  41e762:	fld    DWORD PTR [rip+0x23fd0]        # 0x442738
  41e768:	fxch   st(2)
  41e76a:	fucomi st,st(2)
  41e76c:	jae    0x41e81b
  41e772:	fstp   st(2)
  41e774:	fxch   st(1)
  41e776:	fnstcw WORD PTR [rsp+0x3e]
  41e77a:	movzx  eax,WORD PTR [rsp+0x3e]
  41e77f:	or     ah,0xc
  41e782:	mov    WORD PTR [rsp+0x3c],ax
  41e787:	fldcw  WORD PTR [rsp+0x3c]
  41e78b:	fistp  QWORD PTR [rsp+0x30]
  41e78f:	fldcw  WORD PTR [rsp+0x3e]
  41e793:	mov    r8,QWORD PTR [rsp+0x30]
  41e798:	fld    DWORD PTR [rip+0x23f9a]        # 0x442738
  41e79e:	fxch   st(1)
  41e7a0:	fucomi st,st(1)
  41e7a2:	jae    0x41e853
  41e7a8:	fstp   st(1)
  41e7aa:	fldcw  WORD PTR [rsp+0x3c]
  41e7ae:	fistp  QWORD PTR [rsp+0x30]
  41e7b2:	fldcw  WORD PTR [rsp+0x3e]
  41e7b6:	mov    r10,QWORD PTR [rsp+0x30]
  41e7bb:	mov    r9,QWORD PTR [rsp+0xc0]
  41e7c3:	lea    rcx,[rip+0x23cbe]        # 0x442488
  41e7ca:	mov    rdx,QWORD PTR [rsp+0xb0]
  41e7d2:	mov    QWORD PTR [rsp+0x20],r10
  41e7d7:	call   0x418470
  41e7dc:	jmp    0x41e715
  41e7e1:	fxch   st(1)
  41e7e3:	fstp   TBYTE PTR [rsp+0x50]
  41e7e7:	lea    rax,[rsp+0x40]
  41e7ec:	mov    r9,QWORD PTR [rsp+0xc0]
  41e7f4:	mov    rdx,QWORD PTR [rsp+0xb0]
  41e7fc:	lea    r8,[rsp+0x50]
  41e801:	lea    rcx,[rip+0x23c58]        # 0x442460
  41e808:	mov    QWORD PTR [rsp+0x20],rax
  41e80d:	fstp   TBYTE PTR [rsp+0x40]
  41e811:	call   0x418470
  41e816:	jmp    0x41e715
  41e81b:	fnstcw WORD PTR [rsp+0x3e]
  41e81f:	movzx  eax,WORD PTR [rsp+0x3e]
  41e824:	fsubrp st(2),st
  41e826:	fxch   st(1)
  41e828:	movabs rdx,0x8000000000000000
  41e832:	or     ah,0xc
  41e835:	mov    WORD PTR [rsp+0x3c],ax
  41e83a:	fldcw  WORD PTR [rsp+0x3c]
  41e83e:	fistp  QWORD PTR [rsp+0x30]
  41e842:	fldcw  WORD PTR [rsp+0x3e]
  41e846:	mov    r8,QWORD PTR [rsp+0x30]
  41e84b:	xor    r8,rdx
  41e84e:	jmp    0x41e798
  41e853:	fsubrp st(1),st
  41e855:	movabs rdx,0x8000000000000000
  41e85f:	fldcw  WORD PTR [rsp+0x3c]
  41e863:	fistp  QWORD PTR [rsp+0x30]
  41e867:	fldcw  WORD PTR [rsp+0x3e]
  41e86b:	mov    r10,QWORD PTR [rsp+0x30]
  41e870:	xor    r10,rdx
  41e873:	jmp    0x41e7bb
  41e878:	nop    DWORD PTR [rax+rax*1+0x0]
  41e880:	push   r15
  41e882:	push   r14
  41e884:	push   r13
  41e886:	push   r12
  41e888:	push   rbp
  41e889:	push   rdi
  41e88a:	push   rsi
  41e88b:	push   rbx
  41e88c:	sub    rsp,0x38
  41e890:	mov    rbx,QWORD PTR [rsp+0xb8]
  41e898:	mov    rdi,rcx
  41e89b:	mov    rcx,QWORD PTR [rsp+0xa8]
  41e8a3:	mov    rbp,rdx
  41e8a6:	mov    r12d,r8d
  41e8a9:	mov    r13,r9
  41e8ac:	test   rcx,rcx
  41e8af:	je     0x41e962
  41e8b5:	xor    edx,edx
  41e8b7:	call   0x419920
  41e8bc:	lea    r8,[rip+0x23c1d]        # 0x4424e0
  41e8c3:	xor    r9d,r9d
  41e8c6:	mov    rdx,rax
  41e8c9:	mov    r14,rax
  41e8cc:	mov    rcx,r8
  41e8cf:	call   0x4184b0
  41e8d4:	mov    rsi,rax
  41e8d7:	test   rbx,rbx
  41e8da:	je     0x41e979
  41e8e0:	mov    rcx,rbx
  41e8e3:	xor    edx,edx
  41e8e5:	call   0x419920
  41e8ea:	lea    r8,[rip+0x23bef]        # 0x4424e0
  41e8f1:	xor    r9d,r9d
  41e8f4:	mov    rdx,rax
  41e8f7:	mov    r15,rax
  41e8fa:	mov    rcx,r8
  41e8fd:	call   0x4184b0
  41e902:	mov    rbx,rax
  41e905:	mov    rcx,r14
  41e908:	call   0x40e6e0
  41e90d:	mov    rcx,r15
  41e910:	call   0x40e6e0
  41e915:	mov    r9,QWORD PTR [rsp+0xb0]
  41e91d:	mov    rdx,QWORD PTR [rsp+0xa0]
  41e925:	lea    rcx,[rip+0x23bbc]        # 0x4424e8
  41e92c:	mov    r8,rsi
  41e92f:	mov    QWORD PTR [rsp+0x20],rbx
  41e934:	call   0x418470
  41e939:	mov    rcx,rsi
  41e93c:	mov    r14,rax
  41e93f:	call   0x40e6e0
  41e944:	mov    rcx,rbx
  41e947:	call   0x40e6e0
  41e94c:	mov    QWORD PTR [rsp+0x20],r14
  41e951:	mov    r9,r13
  41e954:	mov    r8d,r12d
  41e957:	mov    rdx,rbp
  41e95a:	mov    rcx,rdi
  41e95d:	call   0x41e540
  41e962:	lea    rcx,[rip+0x23b79]        # 0x4424e2
  41e969:	xor    r14d,r14d
  41e96c:	call   0x4182b0
  41e971:	mov    rsi,rax
  41e974:	jmp    0x41e8d7
  41e979:	lea    rcx,[rip+0x23b62]        # 0x4424e2
  41e980:	xor    r15d,r15d
  41e983:	call   0x4182b0
  41e988:	mov    rbx,rax
  41e98b:	jmp    0x41e905
  41e990:	push   r14
  41e992:	push   r13
  41e994:	push   r12
  41e996:	push   rbp
  41e997:	push   rdi
  41e998:	push   rsi
  41e999:	push   rbx
  41e99a:	sub    rsp,0x30
  41e99e:	mov    edi,DWORD PTR [rsp+0xa0]
  41e9a5:	mov    rbx,QWORD PTR [rsp+0x98]
  41e9ad:	mov    rbp,rcx
  41e9b0:	lea    rcx,[rip+0x23b53]        # 0x44250a
  41e9b7:	mov    r12,rdx
  41e9ba:	mov    r13d,r8d
  41e9bd:	mov    r14,r9
  41e9c0:	call   0x41ae90
  41e9c5:	test   edi,edi
  41e9c7:	mov    rsi,rax
  41e9ca:	je     0x41ea3a
  41e9cc:	mov    ecx,edi
  41e9ce:	call   0x42fdc0
  41e9d3:	mov    r9,rax
  41e9d6:	mov    eax,DWORD PTR [rsp+0xa8]
  41e9dd:	mov    r8,QWORD PTR [rsp+0x90]
  41e9e5:	lea    rdx,[rip+0x23b30]        # 0x44251c
  41e9ec:	mov    rcx,rsi
  41e9ef:	mov    DWORD PTR [rsp+0x20],eax
  41e9f3:	call   0x41bd30
  41e9f8:	test   rbx,rbx
  41e9fb:	je     0x41ea53
  41e9fd:	mov    ecx,DWORD PTR [rbx]
  41e9ff:	call   0x42fdc0
  41ea04:	mov    r9,rax
  41ea07:	mov    eax,DWORD PTR [rbx+0x4]
  41ea0a:	mov    r8,QWORD PTR [rbx+0x8]
  41ea0e:	lea    rdx,[rip+0x23b29]        # 0x44253e
  41ea15:	mov    rcx,rsi
  41ea18:	mov    DWORD PTR [rsp+0x20],eax
  41ea1c:	call   0x41bd30
  41ea21:	mov    rax,QWORD PTR [rsi]
  41ea24:	mov    r9,r14
  41ea27:	mov    r8d,r13d
  41ea2a:	mov    rdx,r12
  41ea2d:	mov    rcx,rbp
  41ea30:	mov    QWORD PTR [rsp+0x20],rax
  41ea35:	call   0x41e540
  41ea3a:	mov    r8,QWORD PTR [rsp+0x90]
  41ea42:	lea    rdx,[rip+0x23ae6]        # 0x44252f
  41ea49:	mov    rcx,rax
  41ea4c:	call   0x41bd30
  41ea51:	jmp    0x41e9f8
  41ea53:	mov    r8,QWORD PTR [rsp+0x90]
  41ea5b:	lea    rdx,[rip+0x23ae8]        # 0x44254a
  41ea62:	mov    rcx,rsi
  41ea65:	call   0x41bd30
  41ea6a:	jmp    0x41ea21
  41ea6c:	nop
  41ea6d:	nop
  41ea6e:	nop
  41ea6f:	nop
  41ea70:	push   rbx
  41ea71:	sub    rsp,0x30
  41ea75:	test   rcx,rcx
  41ea78:	mov    rbx,rcx
  41ea7b:	je     0x41ead5
  41ea7d:	mov    rdx,rcx
  41ea80:	lea    rcx,[rip+0x1bc79]        # 0x43a700
  41ea87:	call   0x427020
  41ea8c:	lea    rcx,[rip+0x6594d]        # 0x4843e0
  41ea93:	call   0x426d40
  41ea98:	lea    rcx,[rip+0x65941]        # 0x4843e0
  41ea9f:	call   0x426d70
  41eaa4:	mov    rcx,QWORD PTR [rbx+0x20]
  41eaa8:	test   rcx,rcx
  41eaab:	je     0x41eac3
  41eaad:	call   0x427290
  41eab2:	mov    rcx,QWORD PTR [rbx+0x20]
  41eab6:	call   0x40e6e0
  41eabb:	mov    QWORD PTR [rbx+0x20],0x0
  41eac3:	mov    rcx,QWORD PTR [rbx+0x8]
  41eac7:	call   QWORD PTR [rbx]
  41eac9:	mov    QWORD PTR [rbx+0x28],rax
  41eacd:	xor    eax,eax
  41eacf:	add    rsp,0x30
  41ead3:	pop    rbx
  41ead4:	ret    
  41ead5:	lea    rax,[rip+0x23cc1]        # 0x44279d
  41eadc:	lea    r9,[rip+0x23dc3]        # 0x4428a6
  41eae3:	lea    rdx,[rip+0x23c56]        # 0x442740
  41eaea:	lea    rcx,[rip+0x23ca7]        # 0x442798
  41eaf1:	mov    r8d,0x30f
  41eaf7:	mov    QWORD PTR [rsp+0x20],rax
  41eafc:	call   0x41e680
  41eb01:	nop
  41eb02:	nop    DWORD PTR [rax+0x0]
  41eb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb10:	lea    rcx,[rip+0x23c8b]        # 0x4427a2
  41eb17:	jmp    0x42fc00
  41eb1c:	nop    DWORD PTR [rax+0x0]
  41eb20:	push   rdi
  41eb21:	push   rsi
  41eb22:	push   rbx
  41eb23:	sub    rsp,0x20
  41eb27:	mov    rbx,rcx
  41eb2a:	lea    rcx,[rip+0x658cf]        # 0x484400
  41eb31:	mov    rsi,rdx
  41eb34:	mov    rdi,r8
  41eb37:	call   0x426d40
  41eb3c:	mov    eax,DWORD PTR [rbx]
  41eb3e:	cmp    eax,0x1
  41eb41:	jne    0x41eb5d
  41eb43:	lea    rdx,[rip+0x658b6]        # 0x484400
  41eb4a:	lea    rcx,[rip+0x6589f]        # 0x4843f0
  41eb51:	call   0x426f50
  41eb56:	mov    eax,DWORD PTR [rbx]
  41eb58:	cmp    eax,0x1
  41eb5b:	je     0x41eb43
  41eb5d:	mov    eax,DWORD PTR [rbx]
  41eb5f:	cmp    eax,0x2
  41eb62:	je     0x41eb9d
  41eb64:	lea    rcx,[rip+0x65895]        # 0x484400
  41eb6b:	mov    DWORD PTR [rbx],0x1
  41eb71:	call   0x426d70
  41eb76:	mov    rcx,rdi
  41eb79:	call   rsi
  41eb7b:	lea    rcx,[rip+0x6587e]        # 0x484400
  41eb82:	mov    QWORD PTR [rbx+0x8],rax
  41eb86:	call   0x426d40
  41eb8b:	lea    rcx,[rip+0x6585e]        # 0x4843f0
  41eb92:	mov    DWORD PTR [rbx],0x2
  41eb98:	call   0x426f40
  41eb9d:	lea    rcx,[rip+0x6585c]        # 0x484400
  41eba4:	call   0x426d70
  41eba9:	mov    rax,QWORD PTR [rbx+0x8]
  41ebad:	add    rsp,0x20
  41ebb1:	pop    rbx
  41ebb2:	pop    rsi
  41ebb3:	pop    rdi
  41ebb4:	ret    
  41ebb5:	nop
  41ebb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ebc0:	push   rbx
  41ebc1:	sub    rsp,0x20
  41ebc5:	mov    rbx,rcx
  41ebc8:	lea    rcx,[rip+0x65831]        # 0x484400
  41ebcf:	call   0x426d40
  41ebd4:	mfence 
  41ebd7:	mov    rax,QWORD PTR [rbx]
  41ebda:	test   rax,rax
  41ebdd:	je     0x41ebf5
  41ebdf:	xor    ebx,ebx
  41ebe1:	lea    rcx,[rip+0x65818]        # 0x484400
  41ebe8:	call   0x426d70
  41ebed:	mov    eax,ebx
  41ebef:	add    rsp,0x20
  41ebf3:	pop    rbx
  41ebf4:	ret    
  41ebf5:	mov    rcx,QWORD PTR [rip+0x657ec]        # 0x4843e8
  41ebfc:	mov    rdx,rbx
  41ebff:	call   0x4175d0
  41ec04:	test   rax,rax
  41ec07:	je     0x41ec39
  41ec09:	nop    DWORD PTR [rax+0x0]
  41ec10:	lea    rdx,[rip+0x657e9]        # 0x484400
  41ec17:	lea    rcx,[rip+0x657d2]        # 0x4843f0
  41ec1e:	call   0x426f50
  41ec23:	mov    rcx,QWORD PTR [rip+0x657be]        # 0x4843e8
  41ec2a:	mov    rdx,rbx
  41ec2d:	call   0x4175d0
  41ec32:	test   rax,rax
  41ec35:	jne    0x41ec10
  41ec37:	jmp    0x41ebdf
  41ec39:	mov    rcx,QWORD PTR [rip+0x657a8]        # 0x4843e8
  41ec40:	mov    rdx,rbx
  41ec43:	mov    ebx,0x1
  41ec48:	call   0x417180
  41ec4d:	mov    QWORD PTR [rip+0x65794],rax        # 0x4843e8
  41ec54:	jmp    0x41ebe1
  41ec56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec60:	push   rbx
  41ec61:	sub    rsp,0x20
  41ec65:	mfence 
  41ec68:	mov    rax,QWORD PTR [rcx]
  41ec6b:	lea    r8,[rip+0x23b46]        # 0x4427b8
  41ec72:	test   rax,rax
  41ec75:	je     0x41ec90
  41ec77:	lea    rdx,[rip+0x23c42]        # 0x4428c0
  41ec7e:	lea    rcx,[rip+0x23b13]        # 0x442798
  41ec85:	add    rsp,0x20
  41ec89:	pop    rbx
  41ec8a:	jmp    0x40fd20
  41ec8f:	nop
  41ec90:	test   rdx,rdx
  41ec93:	lea    r8,[rip+0x23b4c]        # 0x4427e6
  41ec9a:	je     0x41ec77
  41ec9c:	cmp    QWORD PTR [rip+0x65744],0x0        # 0x4843e8
  41eca4:	je     0x41ecf0
  41eca6:	mov    QWORD PTR [rcx],rdx
  41eca9:	mov    rbx,rcx
  41ecac:	lea    rcx,[rip+0x6574d]        # 0x484400
  41ecb3:	mfence 
  41ecb6:	call   0x426d40
  41ecbb:	mov    rcx,QWORD PTR [rip+0x65726]        # 0x4843e8
  41ecc2:	mov    rdx,rbx
  41ecc5:	call   0x417330
  41ecca:	lea    rcx,[rip+0x6571f]        # 0x4843f0
  41ecd1:	mov    QWORD PTR [rip+0x65710],rax        # 0x4843e8
  41ecd8:	call   0x426f40
  41ecdd:	lea    rcx,[rip+0x6571c]        # 0x484400
  41ece4:	add    rsp,0x20
  41ece8:	pop    rbx
  41ece9:	jmp    0x426d70
  41ecee:	xchg   ax,ax
  41ecf0:	lea    r8,[rip+0x23afb]        # 0x4427f2
  41ecf7:	jmp    0x41ec77
  41ecfc:	nop    DWORD PTR [rax+0x0]
  41ed00:	mov    rax,rcx
  41ed03:	lock add DWORD PTR [rcx+0x18],0x1
  41ed08:	ret    
  41ed09:	nop    DWORD PTR [rax+0x0]
  41ed10:	lock sub DWORD PTR [rcx+0x18],0x1
  41ed15:	je     0x41ed20
  41ed17:	repz ret 
  41ed19:	nop    DWORD PTR [rax+0x0]
  41ed20:	mov    eax,DWORD PTR [rcx+0x1c]
  41ed23:	test   eax,eax
  41ed25:	jne    0x41ed34
  41ed27:	mov    rdx,rcx
  41ed2a:	mov    ecx,0x30
  41ed2f:	jmp    0x4167c0
  41ed34:	jmp    0x4270a0
  41ed39:	nop    DWORD PTR [rax+0x0]
  41ed40:	jmp    0x41ed10
  41ed42:	nop    DWORD PTR [rax+0x0]
  41ed46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed50:	push   rbp
  41ed51:	push   rdi
  41ed52:	push   rsi
  41ed53:	push   rbx
  41ed54:	sub    rsp,0x28
  41ed58:	test   r8,r8
  41ed5b:	mov    rdi,rcx
  41ed5e:	mov    rbx,rdx
  41ed61:	mov    rsi,r8
  41ed64:	mov    rbp,r9
  41ed67:	je     0x41edd0
  41ed69:	lea    rcx,[rip+0x65670]        # 0x4843e0
  41ed70:	call   0x426d40
  41ed75:	mov    r8,QWORD PTR [rsp+0x78]
  41ed7a:	mov    edx,DWORD PTR [rsp+0x70]
  41ed7e:	mov    rcx,rbx
  41ed81:	call   0x427150
  41ed86:	test   rax,rax
  41ed89:	mov    rbx,rax
  41ed8c:	je     0x41edb6
  41ed8e:	mov    DWORD PTR [rbx+0x18],0x2
  41ed95:	mov    DWORD PTR [rbx+0x1c],0x1
  41ed9c:	mov    rcx,rdi
  41ed9f:	mov    DWORD PTR [rbx+0x10],0x1
  41eda6:	mov    QWORD PTR [rbx],rsi
  41eda9:	mov    QWORD PTR [rbx+0x8],rbp
  41edad:	call   0x4182b0
  41edb2:	mov    QWORD PTR [rbx+0x20],rax
  41edb6:	lea    rcx,[rip+0x65623]        # 0x4843e0
  41edbd:	call   0x426d70
  41edc2:	mov    rax,rbx
  41edc5:	add    rsp,0x28
  41edc9:	pop    rbx
  41edca:	pop    rsi
  41edcb:	pop    rdi
  41edcc:	pop    rbp
  41edcd:	ret    
  41edce:	xchg   ax,ax
  41edd0:	lea    r8,[rip+0x23a34]        # 0x44280b
  41edd7:	lea    rdx,[rip+0x23ab2]        # 0x442890
  41edde:	lea    rcx,[rip+0x239b3]        # 0x442798
  41ede5:	call   0x40fd20
  41edea:	xor    eax,eax
  41edec:	add    rsp,0x28
  41edf0:	pop    rbx
  41edf1:	pop    rsi
  41edf2:	pop    rdi
  41edf3:	pop    rbp
  41edf4:	ret    
  41edf5:	nop
  41edf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee00:	push   rbx
  41ee01:	sub    rsp,0x40
  41ee05:	lea    rax,[rsp+0x38]
  41ee0a:	mov    r9,r8
  41ee0d:	mov    r8,rdx
  41ee10:	lea    rdx,[rip+0xfffffffffffffc59]        # 0x41ea70
  41ee17:	mov    QWORD PTR [rsp+0x20],0x0
  41ee20:	mov    rbx,rcx
  41ee23:	mov    QWORD PTR [rsp+0x28],rax
  41ee28:	mov    QWORD PTR [rsp+0x38],0x0
  41ee31:	call   0x41ed50
  41ee36:	test   rax,rax
  41ee39:	je     0x41ee41
  41ee3b:	add    rsp,0x40
  41ee3f:	pop    rbx
  41ee40:	ret    
  41ee41:	mov    rax,QWORD PTR [rsp+0x38]
  41ee46:	lea    r9,[rip+0x239cb]        # 0x442818
  41ee4d:	test   rbx,rbx
  41ee50:	lea    r8,[rip+0x239c2]        # 0x442819
  41ee57:	lea    rcx,[rip+0x2393a]        # 0x442798
  41ee5e:	mov    edx,0x4
  41ee63:	cmovne r9,rbx
  41ee67:	mov    rax,QWORD PTR [rax+0x8]
  41ee6b:	mov    QWORD PTR [rsp+0x20],rax
  41ee70:	call   0x40fae0
  41ee75:	jmp    0x41ee75
  41ee77:	nop    WORD PTR [rax+rax*1+0x0]
  41ee80:	sub    rsp,0x38
  41ee84:	mov    QWORD PTR [rsp+0x28],r9
  41ee89:	mov    r9,r8
  41ee8c:	mov    r8,rdx
  41ee8f:	lea    rdx,[rip+0xfffffffffffffbda]        # 0x41ea70
  41ee96:	mov    QWORD PTR [rsp+0x20],0x0
  41ee9f:	call   0x41ed50
  41eea4:	add    rsp,0x38
  41eea8:	ret    
  41eea9:	nop    DWORD PTR [rax+0x0]
  41eeb0:	push   rsi
  41eeb1:	push   rbx
  41eeb2:	sub    rsp,0x28
  41eeb6:	test   rcx,rcx
  41eeb9:	mov    rbx,rcx
  41eebc:	je     0x41ef12
  41eebe:	mov    eax,DWORD PTR [rcx+0x1c]
  41eec1:	test   eax,eax
  41eec3:	jne    0x41eef0
  41eec5:	lea    r8,[rip+0x2396d]        # 0x442839
  41eecc:	lea    rdx,[rip+0x239ad]        # 0x442880
  41eed3:	lea    rcx,[rip+0x238be]        # 0x442798
  41eeda:	call   0x40fd20
  41eedf:	xor    eax,eax
  41eee1:	add    rsp,0x28
  41eee5:	pop    rbx
  41eee6:	pop    rsi
  41eee7:	ret    
  41eee8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eef0:	call   0x427210
  41eef5:	mov    rsi,QWORD PTR [rbx+0x28]
  41eef9:	mov    DWORD PTR [rbx+0x10],0x0
  41ef00:	mov    rcx,rbx
  41ef03:	call   0x41ed10
  41ef08:	mov    rax,rsi
  41ef0b:	add    rsp,0x28
  41ef0f:	pop    rbx
  41ef10:	pop    rsi
  41ef11:	ret    
  41ef12:	lea    r8,[rip+0x23919]        # 0x442832
  41ef19:	lea    rdx,[rip+0x23960]        # 0x442880
  41ef20:	lea    rcx,[rip+0x23871]        # 0x442798
  41ef27:	call   0x40fd20
  41ef2c:	xor    eax,eax
  41ef2e:	add    rsp,0x28
  41ef32:	pop    rbx
  41ef33:	pop    rsi
  41ef34:	ret    
  41ef35:	nop
  41ef36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef40:	sub    rsp,0x38
  41ef44:	lea    rcx,[rip+0x1b7b5]        # 0x43a700
  41ef4b:	call   0x426ff0
  41ef50:	test   rax,rax
  41ef53:	je     0x41ef60
  41ef55:	add    rsp,0x38
  41ef59:	ret    
  41ef5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef60:	mov    ecx,0x30
  41ef65:	call   0x416750
  41ef6a:	lea    rcx,[rip+0x1b78f]        # 0x43a700
  41ef71:	mov    rdx,rax
  41ef74:	mov    DWORD PTR [rax+0x18],0x1
  41ef7b:	mov    QWORD PTR [rsp+0x28],rax
  41ef80:	call   0x427020
  41ef85:	mov    rax,QWORD PTR [rsp+0x28]
  41ef8a:	add    rsp,0x38
  41ef8e:	ret    
  41ef8f:	nop
  41ef90:	push   rbx
  41ef91:	sub    rsp,0x20
  41ef95:	mov    rbx,rcx
  41ef98:	call   0x41ef40
  41ef9d:	mov    edx,DWORD PTR [rax+0x1c]
  41efa0:	test   edx,edx
  41efa2:	jne    0x41efc0
  41efa4:	lea    r8,[rip+0x2389d]        # 0x442848
  41efab:	lea    rcx,[rip+0x237e6]        # 0x442798
  41efb2:	mov    edx,0x4
  41efb7:	call   0x40fae0
  41efbc:	jmp    0x41efbc
  41efbe:	xchg   ax,ax
  41efc0:	mov    QWORD PTR [rax+0x28],rbx
  41efc4:	add    rsp,0x20
  41efc8:	pop    rbx
  41efc9:	jmp    0x427130
  41efce:	nop
  41efcf:	nop
  41efd0:	mov    r10d,DWORD PTR [rcx+0x10]
  41efd4:	cmp    r10d,0xb
  41efd8:	ja     0x41f070
  41efde:	mov    r9d,DWORD PTR [rcx+0x14]
  41efe2:	lea    r11,[rip+0x239f7]        # 0x4429e0
  41efe9:	lea    edx,[r9-0x46]
  41efed:	imul   edx,edx,0x16d
  41eff3:	movsxd r8,edx
  41eff6:	lea    edx,[r9-0x44]
  41effa:	lea    eax,[rdx+0x3]
  41effd:	test   edx,edx
  41efff:	cmovns eax,edx
  41f002:	sar    eax,0x2
  41f005:	cdqe   
  41f007:	lea    rdx,[rax+r8*1]
  41f00b:	movsxd r8,r10d
  41f00e:	mov    eax,DWORD PTR [rcx+0xc]
  41f011:	add    eax,DWORD PTR [r11+r8*4]
  41f015:	sub    eax,0x1
  41f018:	cdqe   
  41f01a:	add    rax,rdx
  41f01d:	and    r9d,0x3
  41f021:	jne    0x41f031
  41f023:	cmp    r10d,0x1
  41f027:	setle  dl
  41f02a:	cmp    dl,0x1
  41f02d:	adc    rax,0xffffffffffffffff
  41f031:	lea    rdx,[rax+rax*2]
  41f035:	movsxd rax,DWORD PTR [rcx+0x8]
  41f039:	lea    rax,[rax+rdx*8]
  41f03d:	lea    rdx,[rax*4+0x0]
  41f045:	shl    rax,0x6
  41f049:	sub    rax,rdx
  41f04c:	movsxd rdx,DWORD PTR [rcx+0x4]
  41f050:	add    rax,rdx
  41f053:	lea    rdx,[rax*4+0x0]
  41f05b:	shl    rax,0x6
  41f05f:	sub    rax,rdx
  41f062:	movsxd rdx,DWORD PTR [rcx]
  41f065:	add    rax,rdx
  41f068:	ret    
  41f069:	nop    DWORD PTR [rax+0x0]
  41f070:	mov    rax,0xffffffffffffffff
  41f077:	ret    
  41f078:	nop    DWORD PTR [rax+rax*1+0x0]
  41f080:	push   rbx
  41f081:	sub    rsp,0x20
  41f085:	mov    ecx,0x18
  41f08a:	call   0x40e5c0
  41f08f:	or     BYTE PTR [rax+0x10],0x1
  41f093:	mov    rbx,rax
  41f096:	call   0x40c040
  41f09b:	mov    QWORD PTR [rbx],rax
  41f09e:	mov    rax,rbx
  41f0a1:	add    rsp,0x20
  41f0a5:	pop    rbx
  41f0a6:	ret    
  41f0a7:	nop    WORD PTR [rax+rax*1+0x0]
  41f0b0:	test   rcx,rcx
  41f0b3:	je     0x41f0c0
  41f0b5:	jmp    0x40e6e0
  41f0ba:	nop    WORD PTR [rax+rax*1+0x0]
  41f0c0:	lea    r8,[rip+0x23819]        # 0x4428e0
  41f0c7:	lea    rdx,[rip+0x239c2]        # 0x442a90
  41f0ce:	lea    rcx,[rip+0x23819]        # 0x4428ee
  41f0d5:	jmp    0x40fd20
  41f0da:	nop    WORD PTR [rax+rax*1+0x0]
  41f0e0:	push   rbx
  41f0e1:	sub    rsp,0x20
  41f0e5:	test   rcx,rcx
  41f0e8:	je     0x41f100
  41f0ea:	or     BYTE PTR [rcx+0x10],0x1
  41f0ee:	mov    rbx,rcx
  41f0f1:	call   0x40c040
  41f0f6:	mov    QWORD PTR [rbx],rax
  41f0f9:	add    rsp,0x20
  41f0fd:	pop    rbx
  41f0fe:	ret    
  41f0ff:	nop
  41f100:	lea    r8,[rip+0x237d9]        # 0x4428e0
  41f107:	lea    rdx,[rip+0x2396e]        # 0x442a7c
  41f10e:	lea    rcx,[rip+0x237d9]        # 0x4428ee
  41f115:	add    rsp,0x20
  41f119:	pop    rbx
  41f11a:	jmp    0x40fd20
  41f11f:	nop
  41f120:	push   rbx
  41f121:	sub    rsp,0x20
  41f125:	test   rcx,rcx
  41f128:	je     0x41f140
  41f12a:	and    BYTE PTR [rcx+0x10],0xfe
  41f12e:	mov    rbx,rcx
  41f131:	call   0x40c040
  41f136:	mov    QWORD PTR [rbx+0x8],rax
  41f13a:	add    rsp,0x20
  41f13e:	pop    rbx
  41f13f:	ret    
  41f140:	lea    r8,[rip+0x23799]        # 0x4428e0
  41f147:	lea    rdx,[rip+0x23921]        # 0x442a6f
  41f14e:	lea    rcx,[rip+0x23799]        # 0x4428ee
  41f155:	add    rsp,0x20
  41f159:	pop    rbx
  41f15a:	jmp    0x40fd20
  41f15f:	nop
  41f160:	push   rbx
  41f161:	sub    rsp,0x20
  41f165:	test   rcx,rcx
  41f168:	je     0x41f180
  41f16a:	mov    rbx,rcx
  41f16d:	call   0x40c040
  41f172:	mov    QWORD PTR [rbx],rax
  41f175:	add    rsp,0x20
  41f179:	pop    rbx
  41f17a:	ret    
  41f17b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f180:	lea    r8,[rip+0x23759]        # 0x4428e0
  41f187:	lea    rdx,[rip+0x238d3]        # 0x442a61
  41f18e:	lea    rcx,[rip+0x23759]        # 0x4428ee
  41f195:	add    rsp,0x20
  41f199:	pop    rbx
  41f19a:	jmp    0x40fd20
  41f19f:	nop
  41f1a0:	push   rsi
  41f1a1:	push   rbx
  41f1a2:	sub    rsp,0x28
  41f1a6:	lea    r8,[rip+0x23733]        # 0x4428e0
  41f1ad:	test   rcx,rcx
  41f1b0:	je     0x41f1e7
  41f1b2:	test   BYTE PTR [rcx+0x10],0x1
  41f1b6:	jne    0x41f1e0
  41f1b8:	mov    rbx,rcx
  41f1bb:	mov    rsi,QWORD PTR [rcx+0x8]
  41f1bf:	sub    rsi,QWORD PTR [rcx]
  41f1c2:	call   0x40c040
  41f1c7:	or     BYTE PTR [rbx+0x10],0x1
  41f1cb:	sub    rax,rsi
  41f1ce:	mov    QWORD PTR [rbx],rax
  41f1d1:	add    rsp,0x28
  41f1d5:	pop    rbx
  41f1d6:	pop    rsi
  41f1d7:	ret    
  41f1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f1e0:	lea    r8,[rip+0x2370c]        # 0x4428f3
  41f1e7:	lea    rdx,[rip+0x23862]        # 0x442a50
  41f1ee:	lea    rcx,[rip+0x236f9]        # 0x4428ee
  41f1f5:	add    rsp,0x28
  41f1f9:	pop    rbx
  41f1fa:	pop    rsi
  41f1fb:	jmp    0x40fd20
  41f200:	push   rbx
  41f201:	sub    rsp,0x30
  41f205:	test   rcx,rcx
  41f208:	mov    rbx,rdx
  41f20b:	je     0x41f280
  41f20d:	test   BYTE PTR [rcx+0x10],0x1
  41f211:	jne    0x41f263
  41f213:	mov    rax,QWORD PTR [rcx+0x8]
  41f217:	sub    rax,QWORD PTR [rcx]
  41f21a:	pxor   xmm0,xmm0
  41f21e:	test   rbx,rbx
  41f221:	cvtsi2sd xmm0,rax
  41f226:	mov    rcx,rax
  41f229:	divsd  xmm0,QWORD PTR [rip+0x2386f]        # 0x442aa0
  41f231:	je     0x41f25d
  41f233:	movabs r8,0x431bde82d7b634db
  41f23d:	imul   r8
  41f240:	mov    rax,rcx
  41f243:	sar    rax,0x3f
  41f247:	sar    rdx,0x12
  41f24b:	mov    r8,rdx
  41f24e:	sub    r8,rax
  41f251:	imul   r8,r8,0xf4240
  41f258:	sub    rcx,r8
  41f25b:	mov    DWORD PTR [rbx],ecx
  41f25d:	add    rsp,0x30
  41f261:	pop    rbx
  41f262:	ret    
  41f263:	mov    QWORD PTR [rsp+0x28],rcx
  41f268:	call   0x40c040
  41f26d:	mov    rcx,QWORD PTR [rsp+0x28]
  41f272:	mov    QWORD PTR [rcx+0x8],rax
  41f276:	jmp    0x41f217
  41f278:	nop    DWORD PTR [rax+rax*1+0x0]
  41f280:	lea    r8,[rip+0x23659]        # 0x4428e0
  41f287:	lea    rdx,[rip+0x237b2]        # 0x442a40
  41f28e:	lea    rcx,[rip+0x23659]        # 0x4428ee
  41f295:	call   0x40fd20
  41f29a:	pxor   xmm0,xmm0
  41f29e:	add    rsp,0x30
  41f2a2:	pop    rbx
  41f2a3:	ret    
  41f2a4:	xchg   ax,ax
  41f2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2b0:	mov    edx,0x10624dd3
  41f2b5:	mov    eax,ecx
  41f2b7:	mul    edx
  41f2b9:	mov    rax,QWORD PTR [rip+0x67538]        # 0x4867f8
  41f2c0:	shr    edx,0x6
  41f2c3:	mov    ecx,edx
  41f2c5:	rex.W jmp rax
  41f2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	mov    r9d,DWORD PTR [rcx+0x4]
  41f2d4:	mov    r8d,edx
  41f2d7:	cmp    r9d,0xf423f
  41f2de:	ja     0x41f370
  41f2e4:	test   edx,edx
  41f2e6:	js     0x41f330
  41f2e8:	mov    eax,r8d
  41f2eb:	mov    edx,0x431bde83
  41f2f0:	imul   edx
  41f2f2:	mov    eax,r8d
  41f2f5:	sar    eax,0x1f
  41f2f8:	sar    edx,0x12
  41f2fb:	sub    edx,eax
  41f2fd:	imul   eax,edx,0xf4240
  41f303:	add    edx,DWORD PTR [rcx]
  41f305:	sub    r8d,eax
  41f308:	add    r8d,r9d
  41f30b:	mov    DWORD PTR [rcx],edx
  41f30d:	cmp    r8d,0xf423f
  41f314:	mov    DWORD PTR [rcx+0x4],r8d
  41f318:	jle    0x41f36b
  41f31a:	sub    r8d,0xf4240
  41f321:	add    edx,0x1
  41f324:	mov    DWORD PTR [rcx+0x4],r8d
  41f328:	mov    DWORD PTR [rcx],edx
  41f32a:	ret    
  41f32b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f330:	neg    r8d
  41f333:	mov    edx,0x431bde83
  41f338:	mov    eax,r8d
  41f33b:	imul   edx
  41f33d:	mov    eax,r8d
  41f340:	sar    eax,0x1f
  41f343:	sar    edx,0x12
  41f346:	mov    r10d,edx
  41f349:	sub    r10d,eax
  41f34c:	sub    eax,edx
  41f34e:	add    eax,DWORD PTR [rcx]
  41f350:	imul   r10d,r10d,0xf4240
  41f357:	sub    r8d,r10d
  41f35a:	mov    DWORD PTR [rcx],eax
  41f35c:	sub    r9d,r8d
  41f35f:	test   r9d,r9d
  41f362:	mov    r8d,r9d
  41f365:	mov    DWORD PTR [rcx+0x4],r9d
  41f369:	js     0x41f390
  41f36b:	repz ret 
  41f36d:	nop    DWORD PTR [rax]
  41f370:	lea    r8,[rip+0x23599]        # 0x442910
  41f377:	lea    rdx,[rip+0x236aa]        # 0x442a28
  41f37e:	lea    rcx,[rip+0x23569]        # 0x4428ee
  41f385:	jmp    0x40fd20
  41f38a:	nop    WORD PTR [rax+rax*1+0x0]
  41f390:	add    r8d,0xf4240
  41f397:	sub    eax,0x1
  41f39a:	mov    DWORD PTR [rcx+0x4],r8d
  41f39e:	mov    DWORD PTR [rcx],eax
  41f3a0:	ret    
  41f3a1:	nop    DWORD PTR [rax+rax*1+0x0]
  41f3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3b0:	push   r12
  41f3b2:	push   rbp
  41f3b3:	push   rdi
  41f3b4:	push   rsi
  41f3b5:	push   rbx
  41f3b6:	sub    rsp,0x50
  41f3ba:	test   rcx,rcx
  41f3bd:	mov    QWORD PTR [rsp+0x80],rcx
  41f3c5:	mov    rsi,rdx
  41f3c8:	mov    QWORD PTR [rsp+0x20],0x0
  41f3d1:	mov    QWORD PTR [rsp+0x28],0x0
  41f3da:	mov    QWORD PTR [rsp+0x30],0x0
  41f3e3:	mov    QWORD PTR [rsp+0x38],0x0
  41f3ec:	mov    DWORD PTR [rsp+0x40],0x0
  41f3f4:	je     0x41f510
  41f3fa:	test   rdx,rdx
  41f3fd:	je     0x41f540
  41f403:	mov    rbx,QWORD PTR [rip+0x5c736]        # 0x47bb40
  41f40a:	movzx  eax,BYTE PTR [rcx]
  41f40d:	mov    r10,QWORD PTR [rbx]
  41f410:	mov    r8,rax
  41f413:	movzx  r9d,WORD PTR [r10+rax*2]
  41f418:	test   r9w,0x100
  41f41e:	je     0x41f447
  41f420:	lea    rax,[rcx+0x1]
  41f424:	mov    QWORD PTR [rsp+0x80],rax
  41f42c:	movzx  r9d,BYTE PTR [rax]
  41f430:	mov    rcx,rax
  41f433:	add    rax,0x1
  41f437:	mov    r8,r9
  41f43a:	movzx  r9d,WORD PTR [r10+r9*2]
  41f43f:	test   r9w,0x100
  41f445:	jne    0x41f424
  41f447:	test   r8b,r8b
  41f44a:	je     0x41f45f
  41f44c:	and    r9d,0x8
  41f450:	jne    0x41f470
  41f452:	sub    r8d,0x2b
  41f456:	and    r8d,0xfd
  41f45d:	je     0x41f470
  41f45f:	xor    eax,eax
  41f461:	add    rsp,0x50
  41f465:	pop    rbx
  41f466:	pop    rsi
  41f467:	pop    rdi
  41f468:	pop    rbp
  41f469:	pop    r12
  41f46b:	ret    
  41f46c:	nop    DWORD PTR [rax+0x0]
  41f470:	lea    rdx,[rsp+0x80]
  41f478:	mov    r8d,0xa
  41f47e:	call   0x438750
  41f483:	mov    r10,QWORD PTR [rsp+0x80]
  41f48b:	mov    ecx,eax
  41f48d:	cmp    BYTE PTR [r10],0x2d
  41f491:	je     0x41f736
  41f497:	mov    r9d,0x51eb851f
  41f49d:	mov    r8d,ecx
  41f4a0:	mov    edi,ecx
  41f4a2:	imul   r9d
  41f4a5:	sar    r8d,0x1f
  41f4a9:	sar    edx,0x5
  41f4ac:	sub    edx,r8d
  41f4af:	imul   eax,edx,0x64
  41f4b2:	mov    edx,0x68db8bad
  41f4b7:	sub    edi,eax
  41f4b9:	mov    eax,ecx
  41f4bb:	imul   edx
  41f4bd:	mov    DWORD PTR [rsp+0x2c],edi
  41f4c1:	sar    edx,0xc
  41f4c4:	sub    edx,r8d
  41f4c7:	imul   eax,edx,0x2710
  41f4cd:	mov    r8d,edx
  41f4d0:	sub    r8d,0x76c
  41f4d7:	mov    DWORD PTR [rsp+0x34],r8d
  41f4dc:	sub    ecx,eax
  41f4de:	mov    eax,ecx
  41f4e0:	sar    ecx,0x1f
  41f4e3:	imul   r9d
  41f4e6:	sar    edx,0x5
  41f4e9:	sub    edx,ecx
  41f4eb:	lea    eax,[rdx-0x1]
  41f4ee:	mov    DWORD PTR [rsp+0x30],eax
  41f4f2:	movzx  eax,BYTE PTR [r10]
  41f4f6:	cmp    al,0x54
  41f4f8:	je     0x41f560
  41f4fa:	test   al,al
  41f4fc:	sete   al
  41f4ff:	movzx  eax,al
  41f502:	add    rsp,0x50
  41f506:	pop    rbx
  41f507:	pop    rsi
  41f508:	pop    rdi
  41f509:	pop    rbp
  41f50a:	pop    r12
  41f50c:	ret    
  41f50d:	nop    DWORD PTR [rax]
  41f510:	lea    r8,[rip+0x23430]        # 0x442947
  41f517:	lea    rdx,[rip+0x234f2]        # 0x442a10
  41f51e:	lea    rcx,[rip+0x233c9]        # 0x4428ee
  41f525:	call   0x40fd20
  41f52a:	xor    eax,eax
  41f52c:	add    rsp,0x50
  41f530:	pop    rbx
  41f531:	pop    rsi
  41f532:	pop    rdi
  41f533:	pop    rbp
  41f534:	pop    r12
  41f536:	ret    
  41f537:	nop    WORD PTR [rax+rax*1+0x0]
  41f540:	lea    r8,[rip+0x23411]        # 0x442958
  41f547:	lea    rdx,[rip+0x234c2]        # 0x442a10
  41f54e:	lea    rcx,[rip+0x23399]        # 0x4428ee
  41f555:	call   0x40fd20
  41f55a:	jmp    0x41f45f
  41f55f:	nop
  41f560:	lea    rcx,[r10+0x1]
  41f564:	mov    rbx,QWORD PTR [rbx]
  41f567:	mov    QWORD PTR [rsp+0x80],rcx
  41f56f:	movzx  eax,BYTE PTR [r10+0x1]
  41f574:	test   BYTE PTR [rbx+rax*2],0x8
  41f578:	je     0x41f45f
  41f57e:	lea    rdx,[rsp+0x80]
  41f586:	mov    r8d,0xa
  41f58c:	call   0x438750
  41f591:	mov    rcx,QWORD PTR [rsp+0x80]
  41f599:	mov    r8d,eax
  41f59c:	cmp    BYTE PTR [rcx],0x3a
  41f59f:	je     0x41f7e6
  41f5a5:	mov    r10d,0x51eb851f
  41f5ab:	mov    r9d,r8d
  41f5ae:	mov    edi,r8d
  41f5b1:	imul   r10d
  41f5b4:	sar    r9d,0x1f
  41f5b8:	mov    eax,edx
  41f5ba:	mov    edx,0x68db8bad
  41f5bf:	sar    eax,0x5
  41f5c2:	sub    eax,r9d
  41f5c5:	imul   eax,eax,0x64
  41f5c8:	sub    edi,eax
  41f5ca:	mov    eax,r8d
  41f5cd:	imul   edx
  41f5cf:	mov    DWORD PTR [rsp+0x20],edi
  41f5d3:	sar    edx,0xc
  41f5d6:	sub    edx,r9d
  41f5d9:	imul   eax,edx,0x2710
  41f5df:	mov    r9d,edx
  41f5e2:	mov    DWORD PTR [rsp+0x28],r9d
  41f5e7:	sub    r8d,eax
  41f5ea:	mov    eax,r8d
  41f5ed:	sar    r8d,0x1f
  41f5f1:	imul   r10d
  41f5f4:	sar    edx,0x5
  41f5f7:	sub    edx,r8d
  41f5fa:	mov    DWORD PTR [rsp+0x24],edx
  41f5fe:	mov    DWORD PTR [rsi+0x4],0x0
  41f605:	movzx  edx,BYTE PTR [rcx]
  41f608:	mov    eax,edx
  41f60a:	and    eax,0xfffffffd
  41f60d:	cmp    al,0x2c
  41f60f:	jne    0x41f684
  41f611:	lea    rax,[rcx+0x1]
  41f615:	mov    QWORD PTR [rsp+0x80],rax
  41f61d:	movzx  r8d,BYTE PTR [rcx+0x1]
  41f622:	test   BYTE PTR [rbx+r8*2],0x8
  41f627:	mov    rdx,r8
  41f62a:	je     0x41f877
  41f630:	lea    r10,[rcx+0x2]
  41f634:	xor    r9d,r9d
  41f637:	mov    r8d,0x186a0
  41f63d:	mov    r11d,0x66666667
  41f643:	movsx  edx,dl
  41f646:	mov    eax,r8d
  41f649:	mov    QWORD PTR [rsp+0x80],r10
  41f651:	sub    edx,0x30
  41f654:	mov    rcx,r10
  41f657:	lea    r10,[r10+0x1]
  41f65b:	imul   edx,r8d
  41f65f:	sar    r8d,0x1f
  41f663:	add    r9d,edx
  41f666:	mov    DWORD PTR [rsi+0x4],r9d
  41f66a:	imul   r11d
  41f66d:	movzx  eax,BYTE PTR [r10-0x1]
  41f672:	sar    edx,0x2
  41f675:	sub    edx,r8d
  41f678:	test   BYTE PTR [rbx+rax*2],0x8
  41f67c:	mov    r8d,edx
  41f67f:	mov    rdx,rax
  41f682:	jne    0x41f643
  41f684:	cmp    dl,0x5a
  41f687:	je     0x41f7a7
  41f68d:	lea    eax,[rdx-0x2b]
  41f690:	test   al,0xfd
  41f692:	jne    0x41f7c4
  41f698:	xor    r12d,r12d
  41f69b:	cmp    dl,0x2b
  41f69e:	lea    rdx,[rsp+0x80]
  41f6a6:	setne  r12b
  41f6aa:	mov    r8d,0xa
  41f6b0:	add    rcx,0x1
  41f6b4:	call   0x438750
  41f6b9:	mov    rdi,QWORD PTR [rsp+0x80]
  41f6c1:	lea    r12d,[r12+r12*1-0x1]
  41f6c6:	mov    ebp,eax
  41f6c8:	cmp    BYTE PTR [rdi],0x3a
  41f6cb:	je     0x41f84e
  41f6d1:	mov    edx,0x51eb851f
  41f6d6:	imul   edx
  41f6d8:	mov    eax,edx
  41f6da:	mov    edx,ebp
  41f6dc:	sar    eax,0x5
  41f6df:	sar    edx,0x1f
  41f6e2:	sub    eax,edx
  41f6e4:	imul   eax,eax,0xffffffd8
  41f6e7:	add    ebp,eax
  41f6e9:	imul   ebp,ebp,0x3c
  41f6ec:	lea    rcx,[rsp+0x20]
  41f6f1:	call   0x41efd0
  41f6f6:	imul   r12d,ebp
  41f6fa:	add    r12d,eax
  41f6fd:	mov    DWORD PTR [rsi],r12d
  41f700:	movzx  ecx,BYTE PTR [rdi]
  41f703:	lea    rax,[rdi+0x1]
  41f707:	test   BYTE PTR [rbx+rcx*2+0x1],0x1
  41f70c:	mov    rdx,rcx
  41f70f:	je     0x41f72a
  41f711:	mov    QWORD PTR [rsp+0x80],rax
  41f719:	movzx  ecx,BYTE PTR [rax]
  41f71c:	add    rax,0x1
  41f720:	test   BYTE PTR [rbx+rcx*2+0x1],0x1
  41f725:	mov    rdx,rcx
  41f728:	jne    0x41f711
  41f72a:	xor    eax,eax
  41f72c:	test   dl,dl
  41f72e:	sete   al
  41f731:	jmp    0x41f461
  41f736:	sub    ecx,0x76c
  41f73c:	lea    rdx,[rsp+0x80]
  41f744:	mov    r8d,0xa
  41f74a:	mov    DWORD PTR [rsp+0x34],ecx
  41f74e:	lea    rcx,[r10+0x1]
  41f752:	mov    QWORD PTR [rsp+0x80],rcx
  41f75a:	call   0x438750
  41f75f:	sub    eax,0x1
  41f762:	mov    DWORD PTR [rsp+0x30],eax
  41f766:	mov    rax,QWORD PTR [rsp+0x80]
  41f76e:	lea    rcx,[rax+0x1]
  41f772:	mov    QWORD PTR [rsp+0x80],rcx
  41f77a:	cmp    BYTE PTR [rax],0x2d
  41f77d:	jne    0x41f45f
  41f783:	lea    rdx,[rsp+0x80]
  41f78b:	mov    r8d,0xa
  41f791:	call   0x438750
  41f796:	mov    r10,QWORD PTR [rsp+0x80]
  41f79e:	mov    DWORD PTR [rsp+0x2c],eax
  41f7a2:	jmp    0x41f4f2
  41f7a7:	lea    rdi,[rcx+0x1]
  41f7ab:	lea    rcx,[rsp+0x20]
  41f7b0:	mov    QWORD PTR [rsp+0x80],rdi
  41f7b8:	call   0x41efd0
  41f7bd:	mov    DWORD PTR [rsi],eax
  41f7bf:	jmp    0x41f700
  41f7c4:	mov    DWORD PTR [rsp+0x40],0xffffffff
  41f7cc:	lea    rcx,[rsp+0x20]
  41f7d1:	call   QWORD PTR [rip+0x67149]        # 0x486920
  41f7d7:	mov    rdi,QWORD PTR [rsp+0x80]
  41f7df:	mov    DWORD PTR [rsi],eax
  41f7e1:	jmp    0x41f700
  41f7e6:	lea    rdx,[rsp+0x80]
  41f7ee:	add    rcx,0x1
  41f7f2:	mov    r8d,0xa
  41f7f8:	mov    QWORD PTR [rsp+0x80],rcx
  41f800:	mov    DWORD PTR [rsp+0x28],eax
  41f804:	call   0x438750
  41f809:	mov    DWORD PTR [rsp+0x24],eax
  41f80d:	mov    rax,QWORD PTR [rsp+0x80]
  41f815:	lea    rcx,[rax+0x1]
  41f819:	mov    QWORD PTR [rsp+0x80],rcx
  41f821:	cmp    BYTE PTR [rax],0x3a
  41f824:	jne    0x41f45f
  41f82a:	lea    rdx,[rsp+0x80]
  41f832:	mov    r8d,0xa
  41f838:	call   0x438750
  41f83d:	mov    rcx,QWORD PTR [rsp+0x80]
  41f845:	mov    DWORD PTR [rsp+0x20],eax
  41f849:	jmp    0x41f5fe
  41f84e:	imul   ebp,ebp,0x3c
  41f851:	lea    rcx,[rdi+0x1]
  41f855:	lea    rdx,[rsp+0x80]
  41f85d:	mov    r8d,0xa
  41f863:	call   0x438750
  41f868:	mov    rdi,QWORD PTR [rsp+0x80]
  41f870:	add    ebp,eax
  41f872:	jmp    0x41f6e9
  41f877:	mov    rcx,rax
  41f87a:	jmp    0x41f684
  41f87f:	nop
  41f880:	push   rbx
  41f881:	sub    rsp,0x50
  41f885:	cmp    DWORD PTR [rcx+0x4],0xf423f
  41f88c:	mov    rbx,rcx
  41f88f:	ja     0x41f8f0
  41f891:	movsxd rax,DWORD PTR [rcx]
  41f894:	lea    rcx,[rsp+0x48]
  41f899:	mov    QWORD PTR [rsp+0x48],rax
  41f89e:	call   QWORD PTR [rip+0x67064]        # 0x486908
  41f8a4:	mov    ecx,DWORD PTR [rbx+0x4]
  41f8a7:	test   ecx,ecx
  41f8a9:	je     0x41f912
  41f8ab:	mov    ebx,DWORD PTR [rax+0x14]
  41f8ae:	mov    r9d,DWORD PTR [rax+0xc]
  41f8b2:	mov    r8d,DWORD PTR [rax+0x10]
  41f8b6:	mov    DWORD PTR [rsp+0x38],ecx
  41f8ba:	mov    ecx,DWORD PTR [rax]
  41f8bc:	lea    edx,[rbx+0x76c]
  41f8c2:	add    r8d,0x1
  41f8c6:	mov    DWORD PTR [rsp+0x30],ecx
  41f8ca:	mov    ecx,DWORD PTR [rax+0x4]
  41f8cd:	mov    DWORD PTR [rsp+0x28],ecx
  41f8d1:	mov    eax,DWORD PTR [rax+0x8]
  41f8d4:	lea    rcx,[rip+0x2308d]        # 0x442968
  41f8db:	mov    DWORD PTR [rsp+0x20],eax
  41f8df:	call   0x418470
  41f8e4:	add    rsp,0x50
  41f8e8:	pop    rbx
  41f8e9:	ret    
  41f8ea:	nop    WORD PTR [rax+rax*1+0x0]
  41f8f0:	lea    r8,[rip+0x23019]        # 0x442910
  41f8f7:	lea    rdx,[rip+0x230b2]        # 0x4429b0
  41f8fe:	lea    rcx,[rip+0x22fe9]        # 0x4428ee
  41f905:	call   0x40fd20
  41f90a:	xor    eax,eax
  41f90c:	add    rsp,0x50
  41f910:	pop    rbx
  41f911:	ret    
  41f912:	mov    r8d,DWORD PTR [rax]
  41f915:	mov    ecx,DWORD PTR [rax+0x10]
  41f918:	mov    r9d,DWORD PTR [rax+0xc]
  41f91c:	mov    edx,DWORD PTR [rax+0x14]
  41f91f:	mov    DWORD PTR [rsp+0x30],r8d
  41f924:	mov    r8d,DWORD PTR [rax+0x4]
  41f928:	add    edx,0x76c
  41f92e:	mov    DWORD PTR [rsp+0x28],r8d
  41f933:	mov    eax,DWORD PTR [rax+0x8]
  41f936:	lea    r8d,[rcx+0x1]
  41f93a:	lea    rcx,[rip+0x2304b]        # 0x44298c
  41f941:	mov    DWORD PTR [rsp+0x20],eax
  41f945:	call   0x418470
  41f94a:	add    rsp,0x50
  41f94e:	pop    rbx
  41f94f:	ret    
  41f950:	cmp    ecx,DWORD PTR [rdx]
  41f952:	jb     0x41f960
  41f954:	xor    eax,eax
  41f956:	cmp    ecx,DWORD PTR [rdx+0x4]
  41f959:	seta   al
  41f95c:	ret    
  41f95d:	nop    DWORD PTR [rax]
  41f960:	mov    eax,0xffffffff
  41f965:	ret    
  41f966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f970:	push   rsi
  41f971:	push   rbx
  41f972:	sub    rsp,0x28
  41f976:	call   0x427610
  41f97b:	movzx  ebx,BYTE PTR [rax]
  41f97e:	mov    rcx,rax
  41f981:	movzx  esi,BYTE PTR [rax+0x1]
  41f985:	call   0x40e6e0
  41f98a:	cmp    bl,0x6c
  41f98d:	je     0x41f9c2
  41f98f:	cmp    bl,0x74
  41f992:	je     0x41f9b2
  41f994:	xor    eax,eax
  41f996:	cmp    bl,0x61
  41f999:	je     0x41f9a2
  41f99b:	add    rsp,0x28
  41f99f:	pop    rbx
  41f9a0:	pop    rsi
  41f9a1:	ret    
  41f9a2:	xor    eax,eax
  41f9a4:	cmp    sil,0x7a
  41f9a8:	sete   al
  41f9ab:	add    rsp,0x28
  41f9af:	pop    rbx
  41f9b0:	pop    rsi
  41f9b1:	ret    
  41f9b2:	xor    eax,eax
  41f9b4:	cmp    sil,0x72
  41f9b8:	sete   al
  41f9bb:	add    rsp,0x28
  41f9bf:	pop    rbx
  41f9c0:	pop    rsi
  41f9c1:	ret    
  41f9c2:	xor    eax,eax
  41f9c4:	cmp    sil,0x74
  41f9c8:	sete   al
  41f9cb:	add    eax,eax
  41f9cd:	add    rsp,0x28
  41f9d1:	pop    rbx
  41f9d2:	pop    rsi
  41f9d3:	ret    
  41f9d4:	xchg   ax,ax
  41f9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9e0:	push   r15
  41f9e2:	push   r14
  41f9e4:	push   r13
  41f9e6:	push   r12
  41f9e8:	push   rbp
  41f9e9:	push   rdi
  41f9ea:	push   rsi
  41f9eb:	push   rbx
  41f9ec:	sub    rsp,0x28
  41f9f0:	mov    rbx,QWORD PTR [rcx]
  41f9f3:	xor    esi,esi
  41f9f5:	mov    r15,rcx
  41f9f8:	mov    rbp,rdx
  41f9fb:	mov    r13d,r8d
  41f9fe:	cmp    BYTE PTR [rbx],0x0
  41fa01:	je     0x41fa87
  41fa07:	lea    r14,[rip+0x33232]        # 0x452c40
  41fa0e:	mov    r12d,0x1c00
  41fa14:	mov    rdi,QWORD PTR [rip+0x5c1d5]        # 0x47bbf0
  41fa1b:	jmp    0x41fa6a
  41fa1d:	nop    DWORD PTR [rax]
  41fa20:	mov    edx,eax
  41fa22:	lea    rcx,[rip+0x32c17]        # 0x452640
  41fa29:	shr    edx,0x8
  41fa2c:	movsx  rcx,WORD PTR [rcx+rdx*2]
  41fa31:	cmp    cx,0x270f
  41fa36:	jle    0x41fada
  41fa3c:	sub    ecx,0x10
  41fa3f:	mov    edx,r12d
  41fa42:	shr    edx,cl
  41fa44:	and    edx,0x1
  41fa47:	test   dl,dl
  41fa49:	je     0x41fa87
  41fa4b:	cmp    eax,0x307
  41fa50:	jne    0x41faa0
  41fa52:	test   r13d,r13d
  41fa55:	je     0x41faa0
  41fa57:	movzx  eax,BYTE PTR [rbx]
  41fa5a:	mov    rdx,QWORD PTR [rdi]
  41fa5d:	movsx  rax,BYTE PTR [rdx+rax*1]
  41fa62:	add    rbx,rax
  41fa65:	cmp    BYTE PTR [rbx],0x0
  41fa68:	je     0x41fa87
  41fa6a:	mov    rcx,rbx
  41fa6d:	call   0x4219f0
  41fa72:	cmp    eax,0x2faff
  41fa77:	jbe    0x41fa20
  41fa79:	lea    edx,[rax-0xe0000]
  41fa7f:	cmp    edx,0x2ffff
  41fa85:	jbe    0x41fac0
  41fa87:	mov    eax,esi
  41fa89:	mov    QWORD PTR [r15],rbx
  41fa8c:	add    rsp,0x28
  41fa90:	pop    rbx
  41fa91:	pop    rsi
  41fa92:	pop    rdi
  41fa93:	pop    rbp
  41fa94:	pop    r12
  41fa96:	pop    r13
  41fa98:	pop    r14
  41fa9a:	pop    r15
  41fa9c:	ret    
  41fa9d:	nop    DWORD PTR [rax]
  41faa0:	test   rbp,rbp
  41faa3:	je     0x41fb00
  41faa5:	movsxd rdx,esi
  41faa8:	add    rdx,rbp
  41faab:	mov    ecx,eax
  41faad:	call   0x421cd0
  41fab2:	add    esi,eax
  41fab4:	jmp    0x41fa57
  41fab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fac0:	lea    rcx,[rip+0x32579]        # 0x452040
  41fac7:	shr    edx,0x8
  41faca:	movsx  rcx,WORD PTR [rcx+rdx*2]
  41facf:	cmp    cx,0x270f
  41fad4:	jg     0x41fa3c
  41fada:	movzx  edx,al
  41fadd:	shl    rcx,0x8
  41fae1:	add    rcx,rdx
  41fae4:	mov    edx,r12d
  41fae7:	movsx  ecx,BYTE PTR [r14+rcx*1]
  41faec:	shr    edx,cl
  41faee:	and    edx,0x1
  41faf1:	jmp    0x41fa47
  41faf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb00:	xor    edx,edx
  41fb02:	jmp    0x41faab
  41fb04:	xchg   ax,ax
  41fb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb10:	push   rdi
  41fb11:	push   rsi
  41fb12:	push   rbx
  41fb13:	sub    rsp,0x20
  41fb17:	lea    rax,[rip+0x26ee2]        # 0x446a00
  41fb1e:	movsxd rdx,edx
  41fb21:	cmp    r8d,0x8
  41fb25:	mov    rdi,rcx
  41fb28:	lea    rbx,[rdx+rax*1]
  41fb2c:	je     0x41fb43
  41fb2e:	mov    rdx,QWORD PTR [rip+0x5c0bb]        # 0x47bbf0
  41fb35:	movzx  eax,BYTE PTR [rbx]
  41fb38:	mov    rdx,QWORD PTR [rdx]
  41fb3b:	movsx  rax,BYTE PTR [rdx+rax*1]
  41fb40:	add    rbx,rax
  41fb43:	cmp    r9d,0x1
  41fb47:	je     0x41fb71
  41fb49:	mov    rcx,rbx
  41fb4c:	call   0x438788
  41fb51:	test   rdi,rdi
  41fb54:	mov    rsi,rax
  41fb57:	je     0x41fb67
  41fb59:	movsxd r8,eax
  41fb5c:	mov    rdx,rbx
  41fb5f:	mov    rcx,rdi
  41fb62:	call   0x4387f0
  41fb67:	mov    eax,esi
  41fb69:	add    rsp,0x20
  41fb6d:	pop    rbx
  41fb6e:	pop    rsi
  41fb6f:	pop    rdi
  41fb70:	ret    
  41fb71:	mov    rcx,rbx
  41fb74:	call   0x438788
  41fb79:	lea    rbx,[rbx+rax*1+0x1]
  41fb7e:	jmp    0x41fb49
  41fb80:	cmp    ecx,0x2faff
  41fb86:	ja     0x41fbb0
  41fb88:	mov    eax,ecx
  41fb8a:	lea    rdx,[rip+0x32aaf]        # 0x452640
  41fb91:	shr    eax,0x8
  41fb94:	movzx  edx,WORD PTR [rdx+rax*2]
  41fb98:	cmp    dx,0x270f
  41fb9d:	jle    0x41fbd5
  41fb9f:	lea    ecx,[rdx-0x10]
  41fba2:	mov    eax,0xe3e0
  41fba7:	shr    eax,cl
  41fba9:	and    eax,0x1
  41fbac:	ret    
  41fbad:	nop    DWORD PTR [rax]
  41fbb0:	lea    edx,[rcx-0xe0000]
  41fbb6:	xor    eax,eax
  41fbb8:	cmp    edx,0x2ffff
  41fbbe:	ja     0x41fbfc
  41fbc0:	lea    rax,[rip+0x32479]        # 0x452040
  41fbc7:	shr    edx,0x8
  41fbca:	movzx  edx,WORD PTR [rax+rdx*2]
  41fbce:	cmp    dx,0x270f
  41fbd3:	jg     0x41fb9f
  41fbd5:	movzx  eax,cl
  41fbd8:	movsx  rcx,dx
  41fbdc:	mov    rdx,rcx
  41fbdf:	shl    rdx,0x8
  41fbe3:	lea    rcx,[rdx+rax*1]
  41fbe7:	lea    rax,[rip+0x33052]        # 0x452c40
  41fbee:	movsx  ecx,BYTE PTR [rax+rcx*1]
  41fbf2:	mov    eax,0xe3e0
  41fbf7:	shr    eax,cl
  41fbf9:	and    eax,0x1
  41fbfc:	repz ret 
  41fbfe:	xchg   ax,ax
  41fc00:	cmp    ecx,0x2faff
  41fc06:	ja     0x41fc30
  41fc08:	mov    eax,ecx
  41fc0a:	lea    rdx,[rip+0x32a2f]        # 0x452640
  41fc11:	shr    eax,0x8
  41fc14:	movzx  edx,WORD PTR [rdx+rax*2]
  41fc18:	cmp    dx,0x270f
  41fc1d:	jle    0x41fc55
  41fc1f:	lea    ecx,[rdx-0x10]
  41fc22:	mov    eax,0x3e0
  41fc27:	shr    eax,cl
  41fc29:	and    eax,0x1
  41fc2c:	ret    
  41fc2d:	nop    DWORD PTR [rax]
  41fc30:	lea    edx,[rcx-0xe0000]
  41fc36:	xor    eax,eax
  41fc38:	cmp    edx,0x2ffff
  41fc3e:	ja     0x41fc7c
  41fc40:	lea    rax,[rip+0x323f9]        # 0x452040
  41fc47:	shr    edx,0x8
  41fc4a:	movzx  edx,WORD PTR [rax+rdx*2]
  41fc4e:	cmp    dx,0x270f
  41fc53:	jg     0x41fc1f
  41fc55:	movzx  eax,cl
  41fc58:	movsx  rcx,dx
  41fc5c:	mov    rdx,rcx
  41fc5f:	shl    rdx,0x8
  41fc63:	lea    rcx,[rdx+rax*1]
  41fc67:	lea    rax,[rip+0x32fd2]        # 0x452c40
  41fc6e:	movsx  ecx,BYTE PTR [rax+rcx*1]
  41fc72:	mov    eax,0x3e0
  41fc77:	shr    eax,cl
  41fc79:	and    eax,0x1
  41fc7c:	repz ret 
  41fc7e:	xchg   ax,ax
  41fc80:	cmp    ecx,0x2faff
  41fc86:	ja     0x41fcc4
  41fc88:	mov    eax,ecx
  41fc8a:	lea    rdx,[rip+0x329af]        # 0x452640
  41fc91:	shr    eax,0x8
  41fc94:	movzx  edx,WORD PTR [rdx+rax*2]
  41fc98:	cmp    dx,0x270f
  41fc9d:	jg     0x41fce9
  41fc9f:	movzx  eax,cl
  41fca2:	movsx  rcx,dx
  41fca6:	shl    rcx,0x8
  41fcaa:	mov    rdx,rcx
  41fcad:	lea    rcx,[rdx+rax*1]
  41fcb1:	lea    rax,[rip+0x32f88]        # 0x452c40
  41fcb8:	cmp    BYTE PTR [rax+rcx*1],0x0
  41fcbc:	sete   al
  41fcbf:	movzx  eax,al
  41fcc2:	repz ret 
  41fcc4:	lea    edx,[rcx-0xe0000]
  41fcca:	xor    eax,eax
  41fccc:	cmp    edx,0x2ffff
  41fcd2:	ja     0x41fcc2
  41fcd4:	lea    rax,[rip+0x32365]        # 0x452040
  41fcdb:	shr    edx,0x8
  41fcde:	movzx  edx,WORD PTR [rax+rdx*2]
  41fce2:	cmp    dx,0x270f
  41fce7:	jle    0x41fcf4
  41fce9:	xor    eax,eax
  41fceb:	cmp    dx,0x2710
  41fcf0:	sete   al
  41fcf3:	ret    
  41fcf4:	movzx  eax,cl
  41fcf7:	movsx  rcx,dx
  41fcfb:	mov    rdx,rcx
  41fcfe:	shl    rdx,0x8
  41fd02:	jmp    0x41fcad
  41fd04:	xchg   ax,ax
  41fd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd10:	cmp    ecx,0x2faff
  41fd16:	ja     0x41fd54
  41fd18:	mov    eax,ecx
  41fd1a:	lea    rdx,[rip+0x3291f]        # 0x452640
  41fd21:	shr    eax,0x8
  41fd24:	movzx  edx,WORD PTR [rdx+rax*2]
  41fd28:	cmp    dx,0x270f
  41fd2d:	jg     0x41fd79
  41fd2f:	movzx  eax,cl
  41fd32:	movsx  rcx,dx
  41fd36:	shl    rcx,0x8
  41fd3a:	mov    rdx,rcx
  41fd3d:	lea    rcx,[rdx+rax*1]
  41fd41:	lea    rax,[rip+0x32ef8]        # 0x452c40
  41fd48:	cmp    BYTE PTR [rax+rcx*1],0xd
  41fd4c:	sete   al
  41fd4f:	movzx  eax,al
  41fd52:	repz ret 
  41fd54:	lea    edx,[rcx-0xe0000]
  41fd5a:	xor    eax,eax
  41fd5c:	cmp    edx,0x2ffff
  41fd62:	ja     0x41fd52
  41fd64:	lea    rax,[rip+0x322d5]        # 0x452040
  41fd6b:	shr    edx,0x8
  41fd6e:	movzx  edx,WORD PTR [rax+rdx*2]
  41fd72:	cmp    dx,0x270f
  41fd77:	jle    0x41fd84
  41fd79:	xor    eax,eax
  41fd7b:	cmp    dx,0x271d
  41fd80:	sete   al
  41fd83:	ret    
  41fd84:	movzx  eax,cl
  41fd87:	movsx  rcx,dx
  41fd8b:	mov    rdx,rcx
  41fd8e:	shl    rdx,0x8
  41fd92:	jmp    0x41fd3d
  41fd94:	xchg   ax,ax
  41fd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fda0:	cmp    ecx,0x2faff
  41fda6:	ja     0x41fdd0
  41fda8:	mov    eax,ecx
  41fdaa:	lea    rdx,[rip+0x3288f]        # 0x452640
  41fdb1:	shr    eax,0x8
  41fdb4:	movzx  edx,WORD PTR [rdx+rax*2]
  41fdb8:	cmp    dx,0x270f
  41fdbd:	jle    0x41fdf5
  41fdbf:	lea    ecx,[rdx-0x10]
  41fdc2:	mov    eax,0x20000017
  41fdc7:	shr    eax,cl
  41fdc9:	and    eax,0x1
  41fdcc:	xor    eax,0x1
  41fdcf:	ret    
  41fdd0:	lea    edx,[rcx-0xe0000]
  41fdd6:	xor    eax,eax
  41fdd8:	cmp    edx,0x2ffff
  41fdde:	ja     0x41fe1f
  41fde0:	lea    rax,[rip+0x32259]        # 0x452040
  41fde7:	shr    edx,0x8
  41fdea:	movzx  edx,WORD PTR [rax+rdx*2]
  41fdee:	cmp    dx,0x270f
  41fdf3:	jg     0x41fdbf
  41fdf5:	movzx  eax,cl
  41fdf8:	movsx  rcx,dx
  41fdfc:	mov    rdx,rcx
  41fdff:	shl    rdx,0x8
  41fe03:	lea    rcx,[rdx+rax*1]
  41fe07:	lea    rax,[rip+0x32e32]        # 0x452c40
  41fe0e:	movsx  ecx,BYTE PTR [rax+rcx*1]
  41fe12:	mov    eax,0x20000017
  41fe17:	shr    eax,cl
  41fe19:	and    eax,0x1
  41fe1c:	xor    eax,0x1
  41fe1f:	repz ret 
  41fe21:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe30:	cmp    ecx,0x2faff
  41fe36:	ja     0x41fe74
  41fe38:	mov    eax,ecx
  41fe3a:	lea    rdx,[rip+0x327ff]        # 0x452640
  41fe41:	shr    eax,0x8
  41fe44:	movzx  edx,WORD PTR [rdx+rax*2]
  41fe48:	cmp    dx,0x270f
  41fe4d:	jg     0x41fe99
  41fe4f:	movzx  eax,cl
  41fe52:	movsx  rcx,dx
  41fe56:	shl    rcx,0x8
  41fe5a:	mov    rdx,rcx
  41fe5d:	lea    rcx,[rdx+rax*1]
  41fe61:	lea    rax,[rip+0x32dd8]        # 0x452c40
  41fe68:	cmp    BYTE PTR [rax+rcx*1],0x5
  41fe6c:	sete   al
  41fe6f:	movzx  eax,al
  41fe72:	repz ret 
  41fe74:	lea    edx,[rcx-0xe0000]
  41fe7a:	xor    eax,eax
  41fe7c:	cmp    edx,0x2ffff
  41fe82:	ja     0x41fe72
  41fe84:	lea    rax,[rip+0x321b5]        # 0x452040
  41fe8b:	shr    edx,0x8
  41fe8e:	movzx  edx,WORD PTR [rax+rdx*2]
  41fe92:	cmp    dx,0x270f
  41fe97:	jle    0x41fea4
  41fe99:	xor    eax,eax
  41fe9b:	cmp    dx,0x2715
  41fea0:	sete   al
  41fea3:	ret    
  41fea4:	movzx  eax,cl
  41fea7:	movsx  rcx,dx
  41feab:	mov    rdx,rcx
  41feae:	shl    rdx,0x8
  41feb2:	jmp    0x41fe5d
  41feb4:	xchg   ax,ax
  41feb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fec0:	cmp    ecx,0x2faff
  41fec6:	ja     0x41fef0
  41fec8:	mov    eax,ecx
  41feca:	lea    rdx,[rip+0x3276f]        # 0x452640
  41fed1:	shr    eax,0x8
  41fed4:	movzx  edx,WORD PTR [rdx+rax*2]
  41fed8:	cmp    dx,0x270f
  41fedd:	jle    0x41ff15
  41fedf:	lea    ecx,[rdx-0x10]
  41fee2:	mov    eax,0x17
  41fee7:	shr    eax,cl
  41fee9:	and    eax,0x1
  41feec:	xor    eax,0x1
  41feef:	ret    
  41fef0:	lea    edx,[rcx-0xe0000]
  41fef6:	xor    eax,eax
  41fef8:	cmp    edx,0x2ffff
  41fefe:	ja     0x41ff3f
  41ff00:	lea    rax,[rip+0x32139]        # 0x452040
  41ff07:	shr    edx,0x8
  41ff0a:	movzx  edx,WORD PTR [rax+rdx*2]
  41ff0e:	cmp    dx,0x270f
  41ff13:	jg     0x41fedf
  41ff15:	movzx  eax,cl
  41ff18:	movsx  rcx,dx
  41ff1c:	mov    rdx,rcx
  41ff1f:	shl    rdx,0x8
  41ff23:	lea    rcx,[rdx+rax*1]
  41ff27:	lea    rax,[rip+0x32d12]        # 0x452c40
  41ff2e:	movsx  ecx,BYTE PTR [rax+rcx*1]
  41ff32:	mov    eax,0x17
  41ff37:	shr    eax,cl
  41ff39:	and    eax,0x1
  41ff3c:	xor    eax,0x1
  41ff3f:	repz ret 
  41ff41:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff50:	cmp    ecx,0x2faff
  41ff56:	ja     0x41ff80
  41ff58:	mov    eax,ecx
  41ff5a:	lea    rdx,[rip+0x326df]        # 0x452640
  41ff61:	shr    eax,0x8
  41ff64:	movzx  edx,WORD PTR [rdx+rax*2]
  41ff68:	cmp    dx,0x270f
  41ff6d:	jle    0x41ffa5
  41ff6f:	lea    ecx,[rdx-0x10]
  41ff72:	mov    eax,0x7ff0000
  41ff77:	shr    eax,cl
  41ff79:	and    eax,0x1
  41ff7c:	ret    
  41ff7d:	nop    DWORD PTR [rax]
  41ff80:	lea    edx,[rcx-0xe0000]
  41ff86:	xor    eax,eax
  41ff88:	cmp    edx,0x2ffff
  41ff8e:	ja     0x41ffcc
  41ff90:	lea    rax,[rip+0x320a9]        # 0x452040
  41ff97:	shr    edx,0x8
  41ff9a:	movzx  edx,WORD PTR [rax+rdx*2]
  41ff9e:	cmp    dx,0x270f
  41ffa3:	jg     0x41ff6f
  41ffa5:	movzx  eax,cl
  41ffa8:	movsx  rcx,dx
  41ffac:	mov    rdx,rcx
  41ffaf:	shl    rdx,0x8
  41ffb3:	lea    rcx,[rdx+rax*1]
  41ffb7:	lea    rax,[rip+0x32c82]        # 0x452c40
  41ffbe:	movsx  ecx,BYTE PTR [rax+rcx*1]
  41ffc2:	mov    eax,0x7ff0000
  41ffc7:	shr    eax,cl
  41ffc9:	and    eax,0x1
  41ffcc:	repz ret 
  41ffce:	xchg   ax,ax
  41ffd0:	mov    edx,ecx
  41ffd2:	lea    ecx,[rcx-0x9]
  41ffd5:	cmp    ecx,0x4
  41ffd8:	ja     0x420015
  41ffda:	mov    eax,0x1
  41ffdf:	shl    rax,cl
  41ffe2:	mov    rcx,rax
  41ffe5:	mov    eax,0x1
  41ffea:	and    ecx,0x1b
  41ffed:	jne    0x420065
  41ffef:	mov    eax,edx
  41fff1:	lea    rcx,[rip+0x32648]        # 0x452640
  41fff8:	shr    eax,0x8
  41fffb:	movsx  rcx,WORD PTR [rcx+rax*2]
  420000:	cmp    cx,0x270f
  420005:	jle    0x420043
  420007:	sub    ecx,0x10
  42000a:	mov    eax,0x38000000
  42000f:	shr    eax,cl
  420011:	and    eax,0x1
  420014:	ret    
  420015:	cmp    edx,0x2faff
  42001b:	jbe    0x41ffef
  42001d:	lea    ecx,[rdx-0xe0000]
  420023:	xor    eax,eax
  420025:	cmp    ecx,0x2ffff
  42002b:	ja     0x420063
  42002d:	lea    rax,[rip+0x3200c]        # 0x452040
  420034:	shr    ecx,0x8
  420037:	movsx  rcx,WORD PTR [rax+rcx*2]
  42003c:	cmp    cx,0x270f
  420041:	jg     0x420007
  420043:	movzx  eax,dl
  420046:	shl    rcx,0x8
  42004a:	lea    rdx,[rcx+rax*1]
  42004e:	lea    rax,[rip+0x32beb]        # 0x452c40
  420055:	movsx  ecx,BYTE PTR [rax+rdx*1]
  420059:	mov    eax,0x38000000
  42005e:	shr    eax,cl
  420060:	and    eax,0x1
  420063:	repz ret 
  420065:	repz ret 
  420067:	nop    WORD PTR [rax+rax*1+0x0]
  420070:	cmp    ecx,0x2faff
  420076:	ja     0x4200a0
  420078:	mov    eax,ecx
  42007a:	lea    rdx,[rip+0x325bf]        # 0x452640
  420081:	shr    eax,0x8
  420084:	movzx  edx,WORD PTR [rdx+rax*2]
  420088:	cmp    dx,0x270f
  42008d:	jle    0x4200c5
  42008f:	lea    ecx,[rdx-0x10]
  420092:	mov    eax,0x1
  420097:	shl    eax,cl
  420099:	and    eax,0x1c00
  42009e:	ret    
  42009f:	nop
  4200a0:	lea    edx,[rcx-0xe0000]
  4200a6:	xor    eax,eax
  4200a8:	cmp    edx,0x2ffff
  4200ae:	ja     0x4200ee
  4200b0:	lea    rax,[rip+0x31f89]        # 0x452040
  4200b7:	shr    edx,0x8
  4200ba:	movzx  edx,WORD PTR [rax+rdx*2]
  4200be:	cmp    dx,0x270f
  4200c3:	jg     0x42008f
  4200c5:	movzx  eax,cl
  4200c8:	movsx  rcx,dx
  4200cc:	mov    rdx,rcx
  4200cf:	shl    rdx,0x8
  4200d3:	lea    rcx,[rdx+rax*1]
  4200d7:	lea    rax,[rip+0x32b62]        # 0x452c40
  4200de:	movsx  ecx,BYTE PTR [rax+rcx*1]
  4200e2:	mov    eax,0x1
  4200e7:	shl    eax,cl
  4200e9:	and    eax,0x1c00
  4200ee:	repz ret 
  4200f0:	cmp    ecx,0x2faff
  4200f6:	ja     0x420134
  4200f8:	mov    eax,ecx
  4200fa:	lea    rdx,[rip+0x3253f]        # 0x452640
  420101:	shr    eax,0x8
  420104:	movzx  edx,WORD PTR [rdx+rax*2]
  420108:	cmp    dx,0x270f
  42010d:	jg     0x420159
  42010f:	movzx  eax,cl
  420112:	movsx  rcx,dx
  420116:	shl    rcx,0x8
  42011a:	mov    rdx,rcx
  42011d:	lea    rcx,[rdx+rax*1]
  420121:	lea    rax,[rip+0x32b18]        # 0x452c40
  420128:	cmp    BYTE PTR [rax+rcx*1],0x9
  42012c:	sete   al
  42012f:	movzx  eax,al
  420132:	repz ret 
  420134:	lea    edx,[rcx-0xe0000]
  42013a:	xor    eax,eax
  42013c:	cmp    edx,0x2ffff
  420142:	ja     0x420132
  420144:	lea    rax,[rip+0x31ef5]        # 0x452040
  42014b:	shr    edx,0x8
  42014e:	movzx  edx,WORD PTR [rax+rdx*2]
  420152:	cmp    dx,0x270f
  420157:	jle    0x420164
  420159:	xor    eax,eax
  42015b:	cmp    dx,0x2719
  420160:	sete   al
  420163:	ret    
  420164:	movzx  eax,cl
  420167:	movsx  rcx,dx
  42016b:	mov    rdx,rcx
  42016e:	shl    rdx,0x8
  420172:	jmp    0x42011d
  420174:	xchg   ax,ax
  420176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420180:	lea    rax,[rip+0x26d39]        # 0x446ec0
  420187:	lea    rdx,[rip+0x26ea6]        # 0x447034
  42018e:	jmp    0x420199
  420190:	add    rax,0xc
  420194:	cmp    rax,rdx
  420197:	je     0x4201a3
  420199:	cmp    DWORD PTR [rax],ecx
  42019b:	jne    0x420190
  42019d:	mov    eax,0x1
  4201a2:	ret    
  4201a3:	xor    eax,eax
  4201a5:	ret    
  4201a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201b0:	mov    eax,0x1
  4201b5:	mov    edx,ecx
  4201b7:	and    edx,0xffffffdf
  4201ba:	sub    edx,0x41
  4201bd:	cmp    edx,0x5
  4201c0:	jbe    0x420235
  4201c2:	cmp    ecx,0x2faff
  4201c8:	ja     0x4201f0
  4201ca:	mov    eax,ecx
  4201cc:	lea    rdx,[rip+0x3246d]        # 0x452640
  4201d3:	shr    eax,0x8
  4201d6:	movzx  edx,WORD PTR [rdx+rax*2]
  4201da:	cmp    dx,0x270f
  4201df:	jle    0x420215
  4201e1:	xor    eax,eax
  4201e3:	cmp    dx,0x271d
  4201e8:	sete   al
  4201eb:	ret    
  4201ec:	nop    DWORD PTR [rax+0x0]
  4201f0:	lea    edx,[rcx-0xe0000]
  4201f6:	xor    eax,eax
  4201f8:	cmp    edx,0x2ffff
  4201fe:	ja     0x420235
  420200:	lea    rax,[rip+0x31e39]        # 0x452040
  420207:	shr    edx,0x8
  42020a:	movzx  edx,WORD PTR [rax+rdx*2]
  42020e:	cmp    dx,0x270f
  420213:	jg     0x4201e1
  420215:	movzx  eax,cl
  420218:	movsx  rcx,dx
  42021c:	shl    rcx,0x8
  420220:	lea    rcx,[rcx+rax*1]
  420224:	lea    rax,[rip+0x32a15]        # 0x452c40
  42022b:	cmp    BYTE PTR [rax+rcx*1],0xd
  42022f:	sete   al
  420232:	movzx  eax,al
  420235:	repz ret 
  420237:	nop    WORD PTR [rax+rax*1+0x0]
  420240:	cmp    ecx,0x2faff
  420246:	ja     0x420270
  420248:	mov    eax,ecx
  42024a:	lea    rdx,[rip+0x323ef]        # 0x452640
  420251:	shr    eax,0x8
  420254:	movzx  edx,WORD PTR [rdx+rax*2]
  420258:	cmp    dx,0x270f
  42025d:	jle    0x420295
  42025f:	lea    ecx,[rdx-0x10]
  420262:	mov    eax,0x14
  420267:	shr    eax,cl
  420269:	and    eax,0x1
  42026c:	xor    eax,0x1
  42026f:	ret    
  420270:	lea    edx,[rcx-0xe0000]
  420276:	xor    eax,eax
  420278:	cmp    edx,0x2ffff
  42027e:	ja     0x4202bf
  420280:	lea    rax,[rip+0x31db9]        # 0x452040
  420287:	shr    edx,0x8
  42028a:	movzx  edx,WORD PTR [rax+rdx*2]
  42028e:	cmp    dx,0x270f
  420293:	jg     0x42025f
  420295:	movzx  eax,cl
  420298:	movsx  rcx,dx
  42029c:	mov    rdx,rcx
  42029f:	shl    rdx,0x8
  4202a3:	lea    rcx,[rdx+rax*1]
  4202a7:	lea    rax,[rip+0x32992]        # 0x452c40
  4202ae:	movsx  ecx,BYTE PTR [rax+rcx*1]
  4202b2:	mov    eax,0x14
  4202b7:	shr    eax,cl
  4202b9:	and    eax,0x1
  4202bc:	xor    eax,0x1
  4202bf:	repz ret 
  4202c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4202c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202d0:	xor    eax,eax
  4202d2:	cmp    ecx,0xad
  4202d8:	mov    edx,ecx
  4202da:	je     0x420384
  4202e0:	cmp    ecx,0x2faff
  4202e6:	ja     0x420335
  4202e8:	mov    eax,edx
  4202ea:	lea    rcx,[rip+0x3234f]        # 0x452640
  4202f1:	shr    eax,0x8
  4202f4:	movsx  rcx,WORD PTR [rcx+rax*2]
  4202f9:	cmp    cx,0x270f
  4202fe:	jle    0x420358
  420300:	sub    ecx,0x10
  420303:	mov    eax,0x1802
  420308:	shr    eax,cl
  42030a:	mov    ecx,eax
  42030c:	mov    eax,0x1
  420311:	and    ecx,0x1
  420314:	test   cl,cl
  420316:	jne    0x420382
  420318:	lea    eax,[rdx-0x1160]
  42031e:	cmp    eax,0x9f
  420323:	setbe  cl
  420326:	cmp    edx,0x200b
  42032c:	sete   al
  42032f:	or     eax,ecx
  420331:	movzx  eax,al
  420334:	ret    
  420335:	lea    eax,[rdx-0xe0000]
  42033b:	cmp    eax,0x2ffff
  420340:	ja     0x420318
  420342:	lea    rcx,[rip+0x31cf7]        # 0x452040
  420349:	shr    eax,0x8
  42034c:	movsx  rcx,WORD PTR [rcx+rax*2]
  420351:	cmp    cx,0x270f
  420356:	jg     0x420300
  420358:	movzx  eax,dl
  42035b:	shl    rcx,0x8
  42035f:	add    rcx,rax
  420362:	lea    rax,[rip+0x328d7]        # 0x452c40
  420369:	movsx  ecx,BYTE PTR [rax+rcx*1]
  42036d:	mov    eax,0x1802
  420372:	shr    eax,cl
  420374:	mov    ecx,eax
  420376:	mov    eax,0x1
  42037b:	and    ecx,0x1
  42037e:	test   cl,cl
  420380:	je     0x420318
  420382:	repz ret 
  420384:	repz ret 
  420386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420390:	sub    rsp,0x38
  420394:	lea    rax,[rip+0xfffffffffffff5b5]        # 0x41f950
  42039b:	lea    rdx,[rip+0x22d1e]        # 0x4430c0
  4203a2:	mov    r9d,0x8
  4203a8:	mov    ecx,ecx
  4203aa:	mov    r8d,0x27
  4203b0:	mov    QWORD PTR [rsp+0x20],rax
  4203b5:	call   0x4388b0
  4203ba:	test   rax,rax
  4203bd:	setne  al
  4203c0:	movzx  eax,al
  4203c3:	add    rsp,0x38
  4203c7:	ret    
  4203c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4203d0:	push   rbx
  4203d1:	sub    rsp,0x30
  4203d5:	mov    ebx,ecx
  4203d7:	call   0x420390
  4203dc:	test   eax,eax
  4203de:	mov    edx,0x1
  4203e3:	jne    0x420413
  4203e5:	lea    rax,[rip+0xfffffffffffff564]        # 0x41f950
  4203ec:	lea    rdx,[rip+0x2274d]        # 0x442b40
  4203f3:	mov    ecx,ebx
  4203f5:	mov    r9d,0x8
  4203fb:	mov    r8d,0xad
  420401:	mov    QWORD PTR [rsp+0x20],rax
  420406:	call   0x4388b0
  42040b:	xor    edx,edx
  42040d:	test   rax,rax
  420410:	setne  dl
  420413:	mov    eax,edx
  420415:	add    rsp,0x30
  420419:	pop    rbx
  42041a:	ret    
  42041b:	nop    DWORD PTR [rax+rax*1+0x0]
  420420:	push   rbx
  420421:	sub    rsp,0x20
  420425:	cmp    ecx,0x2faff
  42042b:	mov    ebx,ecx
  42042d:	ja     0x4204b0
  420433:	mov    eax,ecx
  420435:	lea    rdx,[rip+0x32204]        # 0x452640
  42043c:	shr    eax,0x8
  42043f:	movsx  rdx,WORD PTR [rdx+rax*2]
  420444:	cmp    dx,0x270f
  420449:	jg     0x4204da
  42044f:	movzx  eax,bl
  420452:	shl    rdx,0x8
  420456:	add    rdx,rax
  420459:	lea    rax,[rip+0x327e0]        # 0x452c40
  420460:	movsx  edx,BYTE PTR [rax+rdx*1]
  420464:	mov    eax,ebx
  420466:	cmp    edx,0x5
  420469:	je     0x4204eb
  42046f:	cmp    edx,0x8
  420472:	jne    0x4204a3
  420474:	lea    rcx,[rip+0x26a45]        # 0x446ec0
  42047b:	xor    eax,eax
  42047d:	mov    rdx,rcx
  420480:	jmp    0x420492
  420482:	add    eax,0x1
  420485:	add    rdx,0xc
  420489:	cmp    eax,0x1f
  42048c:	je     0x420570
  420492:	cmp    DWORD PTR [rdx],ebx
  420494:	jne    0x420482
  420496:	lea    rax,[rax+rax*2]
  42049a:	mov    eax,DWORD PTR [rcx+rax*4+0x4]
  42049e:	test   eax,eax
  4204a0:	cmove  eax,ebx
  4204a3:	add    rsp,0x20
  4204a7:	pop    rbx
  4204a8:	ret    
  4204a9:	nop    DWORD PTR [rax+0x0]
  4204b0:	lea    edx,[rcx-0xe0000]
  4204b6:	mov    eax,ecx
  4204b8:	cmp    edx,0x2ffff
  4204be:	ja     0x4204a3
  4204c0:	lea    rax,[rip+0x31b79]        # 0x452040
  4204c7:	shr    edx,0x8
  4204ca:	movsx  rdx,WORD PTR [rax+rdx*2]
  4204cf:	cmp    dx,0x270f
  4204d4:	jle    0x42044f
  4204da:	sub    edx,0x2710
  4204e0:	mov    eax,ebx
  4204e2:	cmp    edx,0x5
  4204e5:	jne    0x42046f
  4204eb:	shr    eax,0x8
  4204ee:	cmp    eax,0x2fa
  4204f3:	jbe    0x420550
  4204f5:	lea    edx,[rax-0xe00]
  4204fb:	lea    rax,[rip+0x26b3e]        # 0x447040
  420502:	movsx  edx,WORD PTR [rax+rdx*2]
  420506:	mov    eax,ebx
  420508:	cmp    dx,0x2710
  42050d:	je     0x4204a3
  42050f:	movsxd rdx,edx
  420512:	movzx  eax,bl
  420515:	shl    rdx,0x8
  420519:	add    rdx,rax
  42051c:	lea    rax,[rip+0x2771d]        # 0x447c40
  420523:	mov    eax,DWORD PTR [rax+rdx*4]
  420526:	cmp    eax,0xffffff
  42052b:	jbe    0x42049e
  420531:	lea    rdx,[rip+0x264c8]        # 0x446a00
  420538:	lea    rcx,[rdx+rax*1-0x1000000]
  420540:	call   0x4219f0
  420545:	jmp    0x42049e
  42054a:	nop    WORD PTR [rax+rax*1+0x0]
  420550:	lea    rdx,[rip+0x270e9]        # 0x447640
  420557:	movsx  edx,WORD PTR [rdx+rax*2]
  42055b:	mov    eax,ebx
  42055d:	cmp    dx,0x2710
  420562:	je     0x4204a3
  420568:	jmp    0x42050f
  42056a:	nop    WORD PTR [rax+rax*1+0x0]
  420570:	mov    eax,ebx
  420572:	add    rsp,0x20
  420576:	pop    rbx
  420577:	ret    
  420578:	nop    DWORD PTR [rax+rax*1+0x0]
  420580:	push   r15
  420582:	push   r14
  420584:	push   r13
  420586:	push   r12
  420588:	push   rbp
  420589:	push   rdi
  42058a:	push   rsi
  42058b:	push   rbx
  42058c:	sub    rsp,0x98
  420593:	xor    ebx,ebx
  420595:	lea    rax,[rsp+0x38]
  42059a:	lea    r14,[rsp+0x40]
  42059f:	mov    r15,rcx
  4205a2:	mov    r12,rdx
  4205a5:	mov    rbp,r8
  4205a8:	mov    r13d,r9d
  4205ab:	mov    QWORD PTR [rsp+0x38],rcx
  4205b0:	mov    rsi,rcx
  4205b3:	mov    DWORD PTR [rsp+0x20],0x0
  4205bb:	mov    QWORD PTR [rsp+0x28],rax
  4205c0:	test   r12,r12
  4205c3:	js     0x4205d2
  4205c5:	lea    rax,[r15+r12*1]
  4205c9:	cmp    rsi,rax
  4205cc:	jae    0x420685
  4205d2:	cmp    BYTE PTR [rsi],0x0
  4205d5:	je     0x420685
  4205db:	mov    rcx,rsi
  4205de:	call   0x4219f0
  4205e3:	cmp    eax,0x2faff
  4205e8:	ja     0x4206a0
  4205ee:	mov    edx,eax
  4205f0:	lea    rcx,[rip+0x32049]        # 0x452640
  4205f7:	shr    edx,0x8
  4205fa:	movsx  r8,WORD PTR [rcx+rdx*2]
  4205ff:	cmp    r8w,0x270f
  420605:	jle    0x4206d3
  42060b:	sub    r8d,0x2710
  420612:	mov    rdi,QWORD PTR [rip+0x5b5d7]        # 0x47bbf0
  420619:	movzx  ecx,BYTE PTR [rsi]
  42061c:	cmp    r13d,0x2
  420620:	mov    rdx,QWORD PTR [rdi]
  420623:	movsx  rcx,BYTE PTR [rdx+rcx*1]
  420628:	lea    r9,[rsi+rcx*1]
  42062c:	mov    QWORD PTR [rsp+0x38],r9
  420631:	je     0x4206f0
  420637:	cmp    eax,0x69
  42063a:	jne    0x420705
  420640:	cmp    r13d,0x1
  420644:	jne    0x420705
  42064a:	lea    rax,[rbp+rbx*1+0x0]
  42064f:	test   rbp,rbp
  420652:	mov    edx,0x0
  420657:	mov    ecx,0x130
  42065c:	cmovne rdx,rax
  420660:	call   0x421cd0
  420665:	cdqe   
  420667:	mov    rsi,QWORD PTR [rsp+0x38]
  42066c:	add    rbx,rax
  42066f:	test   r12,r12
  420672:	js     0x4205d2
  420678:	lea    rax,[r15+r12*1]
  42067c:	cmp    rsi,rax
  42067f:	jb     0x4205d2
  420685:	mov    rax,rbx
  420688:	add    rsp,0x98
  42068f:	pop    rbx
  420690:	pop    rsi
  420691:	pop    rdi
  420692:	pop    rbp
  420693:	pop    r12
  420695:	pop    r13
  420697:	pop    r14
  420699:	pop    r15
  42069b:	ret    
  42069c:	nop    DWORD PTR [rax+0x0]
  4206a0:	lea    edx,[rax-0xe0000]
  4206a6:	mov    r8d,0x2
  4206ac:	cmp    edx,0x2ffff
  4206b2:	ja     0x420612
  4206b8:	lea    rcx,[rip+0x31981]        # 0x452040
  4206bf:	shr    edx,0x8
  4206c2:	movsx  r8,WORD PTR [rcx+rdx*2]
  4206c7:	cmp    r8w,0x270f
  4206cd:	jg     0x42060b
  4206d3:	movzx  edx,al
  4206d6:	shl    r8,0x8
  4206da:	add    r8,rdx
  4206dd:	lea    rdx,[rip+0x3255c]        # 0x452c40
  4206e4:	movsx  r8d,BYTE PTR [rdx+r8*1]
  4206e9:	jmp    0x420612
  4206ee:	xchg   ax,ax
  4206f0:	cmp    eax,0x69
  4206f3:	je     0x420874
  4206f9:	mov    ecx,DWORD PTR [rsp+0x20]
  4206fd:	test   ecx,ecx
  4206ff:	jne    0x4207e2
  420705:	cmp    eax,0x345
  42070a:	je     0x4208c5
  420710:	mov    ecx,0x120
  420715:	bt     ecx,r8d
  420719:	jae    0x420890
  42071f:	mov    edx,eax
  420721:	shr    edx,0x8
  420724:	cmp    edx,0x2fa
  42072a:	ja     0x420775
  42072c:	lea    rcx,[rip+0x26f0d]        # 0x447640
  420733:	movsx  edx,WORD PTR [rcx+rdx*2]
  420737:	cmp    dx,0x2710
  42073c:	jne    0x42078d
  42073e:	xor    ecx,ecx
  420740:	cmp    r8d,0x8
  420744:	je     0x420970
  42074a:	lea    rdx,[rbp+rbx*1+0x0]
  42074f:	test   rbp,rbp
  420752:	mov    r8d,0x0
  420758:	cmove  rdx,r8
  42075c:	test   ecx,ecx
  42075e:	cmove  ecx,eax
  420761:	call   0x421cd0
  420766:	cdqe   
  420768:	mov    rsi,QWORD PTR [rsp+0x38]
  42076d:	add    rbx,rax
  420770:	jmp    0x4205c0
  420775:	lea    ecx,[rdx-0xe00]
  42077b:	lea    rdx,[rip+0x268be]        # 0x447040
  420782:	movsx  edx,WORD PTR [rdx+rcx*2]
  420786:	cmp    dx,0x2710
  42078b:	je     0x42073e
  42078d:	movsxd rdx,edx
  420790:	movzx  ecx,al
  420793:	shl    rdx,0x8
  420797:	add    rdx,rcx
  42079a:	lea    rcx,[rip+0x2749f]        # 0x447c40
  4207a1:	mov    ecx,DWORD PTR [rcx+rdx*4]
  4207a4:	cmp    ecx,0xffffff
  4207aa:	jbe    0x420740
  4207ac:	lea    r10,[rbp+rbx*1+0x0]
  4207b1:	xor    r9d,r9d
  4207b4:	cmp    r8d,0x5
  4207b8:	setne  r9b
  4207bc:	lea    edx,[rcx-0x1000000]
  4207c2:	test   rbp,rbp
  4207c5:	mov    ecx,0x0
  4207ca:	cmovne rcx,r10
  4207ce:	call   0x41fb10
  4207d3:	cdqe   
  4207d5:	mov    rsi,QWORD PTR [rsp+0x38]
  4207da:	add    rbx,rax
  4207dd:	jmp    0x4205c0
  4207e2:	xor    edx,edx
  4207e4:	mov    r9d,0x12
  4207ea:	mov    r8,r14
  4207ed:	mov    ecx,eax
  4207ef:	call   0x424140
  4207f4:	test   rax,rax
  4207f7:	mov    QWORD PTR [rsp+0x20],rax
  4207fc:	je     0x42083c
  4207fe:	xor    edi,edi
  420800:	mov    ecx,DWORD PTR [r14+rdi*4]
  420804:	cmp    ecx,0x307
  42080a:	je     0x420831
  42080c:	lea    rdx,[rbp+rbx*1+0x0]
  420811:	test   rbp,rbp
  420814:	mov    esi,0x0
  420819:	cmovne rsi,rdx
  42081d:	call   0x420420
  420822:	mov    rdx,rsi
  420825:	mov    ecx,eax
  420827:	call   0x421cd0
  42082c:	cdqe   
  42082e:	add    rbx,rax
  420831:	add    rdi,0x1
  420835:	cmp    rdi,QWORD PTR [rsp+0x20]
  42083a:	jne    0x420800
  42083c:	lea    rax,[rbp+rbx*1+0x0]
  420841:	mov    rcx,QWORD PTR [rsp+0x28]
  420846:	test   rbp,rbp
  420849:	mov    edx,0x0
  42084e:	mov    r8d,0x1
  420854:	cmovne rdx,rax
  420858:	call   0x41f9e0
  42085d:	cdqe   
  42085f:	mov    rsi,QWORD PTR [rsp+0x38]
  420864:	mov    DWORD PTR [rsp+0x20],0x1
  42086c:	add    rbx,rax
  42086f:	jmp    0x4205c0
  420874:	mov    ecx,0x120
  420879:	mov    DWORD PTR [rsp+0x20],0x1
  420881:	bt     ecx,r8d
  420885:	jb     0x420940
  42088b:	nop    DWORD PTR [rax+rax*1+0x0]
  420890:	movzx  eax,BYTE PTR [rsi]
  420893:	test   rbp,rbp
  420896:	movsx  rdx,BYTE PTR [rdx+rax*1]
  42089b:	je     0x4208ba
  42089d:	cmp    rdx,0x8
  4208a1:	lea    rax,[rbp+rbx*1+0x0]
  4208a6:	jae    0x420903
  4208a8:	test   dl,0x4
  4208ab:	jne    0x4209cb
  4208b1:	test   rdx,rdx
  4208b4:	jne    0x420950
  4208ba:	add    rbx,rdx
  4208bd:	mov    rsi,r9
  4208c0:	jmp    0x4205c0
  4208c5:	test   rbp,rbp
  4208c8:	je     0x4209b0
  4208ce:	mov    rcx,QWORD PTR [rsp+0x28]
  4208d3:	lea    rdx,[rbp+rbx*1+0x0]
  4208d8:	xor    r8d,r8d
  4208db:	call   0x41f9e0
  4208e0:	cdqe   
  4208e2:	add    rbx,rax
  4208e5:	lea    rdx,[rbp+rbx*1+0x0]
  4208ea:	mov    ecx,0x399
  4208ef:	call   0x421cd0
  4208f4:	cdqe   
  4208f6:	mov    rsi,QWORD PTR [rsp+0x38]
  4208fb:	add    rbx,rax
  4208fe:	jmp    0x4205c0
  420903:	mov    rcx,QWORD PTR [rsi]
  420906:	lea    rdi,[rax+0x8]
  42090a:	add    rbx,rdx
  42090d:	and    rdi,0xfffffffffffffff8
  420911:	mov    QWORD PTR [rax],rcx
  420914:	mov    rcx,QWORD PTR [rsi+rdx*1-0x8]
  420919:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
  42091e:	sub    rax,rdi
  420921:	lea    rcx,[rdx+rax*1]
  420925:	sub    rsi,rax
  420928:	shr    rcx,0x3
  42092c:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  42092f:	mov    rsi,r9
  420932:	jmp    0x4205c0
  420937:	nop    WORD PTR [rax+rax*1+0x0]
  420940:	xor    edx,edx
  420942:	jmp    0x42072c
  420947:	nop    WORD PTR [rax+rax*1+0x0]
  420950:	movzx  ecx,BYTE PTR [rsi]
  420953:	test   dl,0x2
  420956:	mov    BYTE PTR [rax],cl
  420958:	je     0x4208ba
  42095e:	movzx  ecx,WORD PTR [rsi+rdx*1-0x2]
  420963:	mov    WORD PTR [rax+rdx*1-0x2],cx
  420968:	jmp    0x4208ba
  42096d:	nop    DWORD PTR [rax]
  420970:	lea    rdx,[rip+0x26549]        # 0x446ec0
  420977:	xor    r8b,r8b
  42097a:	mov    r9,rdx
  42097d:	jmp    0x420992
  42097f:	nop
  420980:	add    r8d,0x1
  420984:	add    r9,0xc
  420988:	cmp    r8d,0x1f
  42098c:	je     0x42074a
  420992:	cmp    DWORD PTR [r9],eax
  420995:	jne    0x420980
  420997:	mov    r8d,r8d
  42099a:	lea    rcx,[r8+r8*2]
  42099e:	mov    ecx,DWORD PTR [rdx+rcx*4+0x4]
  4209a2:	jmp    0x42074a
  4209a7:	nop    WORD PTR [rax+rax*1+0x0]
  4209b0:	mov    rcx,QWORD PTR [rsp+0x28]
  4209b5:	xor    edx,edx
  4209b7:	xor    r8d,r8d
  4209ba:	call   0x41f9e0
  4209bf:	cdqe   
  4209c1:	xor    edx,edx
  4209c3:	add    rbx,rax
  4209c6:	jmp    0x4208ea
  4209cb:	mov    ecx,DWORD PTR [rsi]
  4209cd:	mov    DWORD PTR [rax],ecx
  4209cf:	mov    ecx,DWORD PTR [rsi+rdx*1-0x4]
  4209d3:	mov    DWORD PTR [rax+rdx*1-0x4],ecx
  4209d7:	jmp    0x4208ba
  4209dc:	nop    DWORD PTR [rax+0x0]
  4209e0:	cmp    ecx,0x2faff
  4209e6:	ja     0x420a51
  4209e8:	mov    eax,ecx
  4209ea:	lea    rdx,[rip+0x31c4f]        # 0x452640
  4209f1:	shr    eax,0x8
  4209f4:	movsx  rdx,WORD PTR [rdx+rax*2]
  4209f9:	cmp    dx,0x270f
  4209fe:	jg     0x420a78
  420a00:	movzx  eax,cl
  420a03:	shl    rdx,0x8
  420a07:	add    rdx,rax
  420a0a:	lea    rax,[rip+0x3222f]        # 0x452c40
  420a11:	movsx  edx,BYTE PTR [rax+rdx*1]
  420a15:	mov    eax,ecx
  420a17:	cmp    edx,0x9
  420a1a:	je     0x420a85
  420a1c:	cmp    edx,0x8
  420a1f:	jne    0x420af3
  420a25:	lea    r8,[rip+0x26494]        # 0x446ec0
  420a2c:	xor    eax,eax
  420a2e:	mov    rdx,r8
  420a31:	jmp    0x420a43
  420a33:	add    eax,0x1
  420a36:	add    rdx,0xc
  420a3a:	cmp    eax,0x1f
  420a3d:	je     0x420af1
  420a43:	cmp    DWORD PTR [rdx],ecx
  420a45:	jne    0x420a33
  420a47:	lea    rax,[rax+rax*2]
  420a4b:	mov    eax,DWORD PTR [r8+rax*4+0x8]
  420a50:	ret    
  420a51:	lea    eax,[rcx-0xe0000]
  420a57:	cmp    eax,0x2ffff
  420a5c:	ja     0x420af1
  420a62:	lea    rdx,[rip+0x315d7]        # 0x452040
  420a69:	shr    eax,0x8
  420a6c:	movsx  rdx,WORD PTR [rdx+rax*2]
  420a71:	cmp    dx,0x270f
  420a76:	jle    0x420a00
  420a78:	sub    edx,0x2710
  420a7e:	mov    eax,ecx
  420a80:	cmp    edx,0x9
  420a83:	jne    0x420a1c
  420a85:	shr    eax,0x8
  420a88:	cmp    eax,0x2fa
  420a8d:	jbe    0x420ae0
  420a8f:	lea    edx,[rax-0xe00]
  420a95:	lea    rax,[rip+0x265a4]        # 0x447040
  420a9c:	movsx  eax,WORD PTR [rax+rdx*2]
  420aa0:	cmp    ax,0x2710
  420aa4:	je     0x420af1
  420aa6:	cdqe   
  420aa8:	movzx  edx,cl
  420aab:	shl    rax,0x8
  420aaf:	add    rax,rdx
  420ab2:	lea    rdx,[rip+0x27187]        # 0x447c40
  420ab9:	mov    eax,DWORD PTR [rdx+rax*4]
  420abc:	cmp    eax,0xffffff
  420ac1:	jbe    0x420af5
  420ac3:	lea    rdx,[rip+0x25f36]        # 0x446a00
  420aca:	lea    rcx,[rdx+rax*1-0x1000000]
  420ad2:	jmp    0x4219f0
  420ad7:	nop    WORD PTR [rax+rax*1+0x0]
  420ae0:	lea    rdx,[rip+0x26b59]        # 0x447640
  420ae7:	movsx  eax,WORD PTR [rdx+rax*2]
  420aeb:	cmp    ax,0x2710
  420aef:	jne    0x420aa6
  420af1:	mov    eax,ecx
  420af3:	repz ret 
  420af5:	test   eax,eax
  420af7:	cmove  eax,ecx
  420afa:	ret    
  420afb:	nop    DWORD PTR [rax+rax*1+0x0]
  420b00:	push   r15
  420b02:	push   r14
  420b04:	push   r13
  420b06:	push   r12
  420b08:	push   rbp
  420b09:	push   rdi
  420b0a:	push   rsi
  420b0b:	push   rbx
  420b0c:	sub    rsp,0x48
  420b10:	xor    ebx,ebx
  420b12:	lea    rax,[rcx+rdx*1]
  420b16:	mov    r13,rdx
  420b19:	mov    r12,r8
  420b1c:	mov    r14d,r9d
  420b1f:	mov    rsi,rcx
  420b22:	mov    QWORD PTR [rsp+0x20],rax
  420b27:	nop    WORD PTR [rax+rax*1+0x0]
  420b30:	test   r13,r13
  420b33:	js     0x420b40
  420b35:	cmp    rsi,QWORD PTR [rsp+0x20]
  420b3a:	jae    0x420bf2
  420b40:	cmp    BYTE PTR [rsi],0x0
  420b43:	je     0x420bf2
  420b49:	mov    rcx,rsi
  420b4c:	call   0x4219f0
  420b51:	cmp    eax,0x2faff
  420b56:	mov    r9d,eax
  420b59:	ja     0x420c10
  420b5f:	lea    rdx,[rip+0x31ada]        # 0x452640
  420b66:	shr    eax,0x8
  420b69:	movsx  rdi,WORD PTR [rdx+rax*2]
  420b6e:	cmp    di,0x270f
  420b73:	jle    0x420c40
  420b79:	sub    edi,0x2710
  420b7f:	mov    rax,QWORD PTR [rip+0x5b06a]        # 0x47bbf0
  420b86:	cmp    r9d,0x49
  420b8a:	mov    r15,QWORD PTR [rax]
  420b8d:	movzx  eax,BYTE PTR [rsi]
  420b90:	movsx  rdx,BYTE PTR [r15+rax*1]
  420b95:	lea    rbp,[rsi+rdx*1]
  420b99:	jne    0x420c60
  420b9f:	cmp    r14d,0x1
  420ba3:	jne    0x420c60
  420ba9:	mov    rcx,rbp
  420bac:	call   0x4219f0
  420bb1:	cmp    eax,0x307
  420bb6:	lea    rax,[r12+rbx*1]
  420bba:	je     0x420e51
  420bc0:	test   r12,r12
  420bc3:	mov    edx,0x0
  420bc8:	mov    ecx,0x131
  420bcd:	cmovne rdx,rax
  420bd1:	mov    rsi,rbp
  420bd4:	call   0x421cd0
  420bd9:	cdqe   
  420bdb:	add    rbx,rax
  420bde:	test   r13,r13
  420be1:	js     0x420b40
  420be7:	cmp    rsi,QWORD PTR [rsp+0x20]
  420bec:	jb     0x420b40
  420bf2:	mov    rax,rbx
  420bf5:	add    rsp,0x48
  420bf9:	pop    rbx
  420bfa:	pop    rsi
  420bfb:	pop    rdi
  420bfc:	pop    rbp
  420bfd:	pop    r12
  420bff:	pop    r13
  420c01:	pop    r14
  420c03:	pop    r15
  420c05:	ret    
  420c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c10:	lea    eax,[rax-0xe0000]
  420c16:	mov    edi,0x2
  420c1b:	cmp    eax,0x2ffff
  420c20:	ja     0x420b7f
  420c26:	lea    rdx,[rip+0x31413]        # 0x452040
  420c2d:	shr    eax,0x8
  420c30:	movsx  rdi,WORD PTR [rdx+rax*2]
  420c35:	cmp    di,0x270f
  420c3a:	jg     0x420b79
  420c40:	movzx  eax,r9b
  420c44:	shl    rdi,0x8
  420c48:	add    rdi,rax
  420c4b:	lea    rax,[rip+0x31fee]        # 0x452c40
  420c52:	movsx  edi,BYTE PTR [rax+rdi*1]
  420c56:	jmp    0x420b7f
  420c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420c60:	cmp    r14d,0x2
  420c64:	je     0x420d74
  420c6a:	cmp    r9d,0x3a3
  420c71:	je     0x420e80
  420c77:	mov    eax,0x300
  420c7c:	bt     eax,edi
  420c7f:	jae    0x420d44
  420c85:	mov    eax,r9d
  420c88:	shr    eax,0x8
  420c8b:	cmp    eax,0x2fa
  420c90:	ja     0x420ce0
  420c92:	lea    rdx,[rip+0x269a7]        # 0x447640
  420c99:	movsx  eax,WORD PTR [rdx+rax*2]
  420c9d:	cmp    ax,0x2710
  420ca1:	jne    0x420cf7
  420ca3:	xor    ecx,ecx
  420ca5:	cmp    edi,0x8
  420ca8:	je     0x420fe1
  420cae:	lea    rax,[r12+rbx*1]
  420cb2:	test   r12,r12
  420cb5:	mov    edx,0x0
  420cba:	mov    rsi,rbp
  420cbd:	cmovne rdx,rax
  420cc1:	test   ecx,ecx
  420cc3:	cmove  ecx,r9d
  420cc7:	call   0x421cd0
  420ccc:	cdqe   
  420cce:	add    rbx,rax
  420cd1:	jmp    0x420b30
  420cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ce0:	lea    edx,[rax-0xe00]
  420ce6:	lea    rax,[rip+0x26353]        # 0x447040
  420ced:	movsx  eax,WORD PTR [rax+rdx*2]
  420cf1:	cmp    ax,0x2710
  420cf5:	je     0x420ca3
  420cf7:	cdqe   
  420cf9:	movzx  edx,r9b
  420cfd:	shl    rax,0x8
  420d01:	add    rax,rdx
  420d04:	lea    rdx,[rip+0x26f35]        # 0x447c40
  420d0b:	mov    ecx,DWORD PTR [rdx+rax*4]
  420d0e:	cmp    ecx,0xffffff
  420d14:	jbe    0x420ca5
  420d16:	lea    rax,[r12+rbx*1]
  420d1a:	test   r12,r12
  420d1d:	lea    edx,[rcx-0x1000000]
  420d23:	mov    ecx,0x0
  420d28:	mov    r8d,edi
  420d2b:	mov    rsi,rbp
  420d2e:	cmovne rcx,rax
  420d32:	xor    r9d,r9d
  420d35:	call   0x41fb10
  420d3a:	cdqe   
  420d3c:	add    rbx,rax
  420d3f:	jmp    0x420b30
  420d44:	test   r12,r12
  420d47:	je     0x420d69
  420d49:	cmp    rdx,0x8
  420d4d:	lea    rax,[r12+rbx*1]
  420d51:	jae    0x420f90
  420d57:	test   dl,0x4
  420d5a:	jne    0x4210fb
  420d60:	test   rdx,rdx
  420d63:	jne    0x420fc4
  420d69:	add    rbx,rdx
  420d6c:	mov    rsi,rbp
  420d6f:	jmp    0x420b30
  420d74:	lea    eax,[r9-0xcc]
  420d7b:	cmp    eax,0x1
  420d7e:	jbe    0x420f20
  420d84:	cmp    r9d,0x128
  420d8b:	je     0x420f20
  420d91:	lea    eax,[r9-0x49]
  420d95:	cmp    eax,0x1
  420d98:	jbe    0x420da7
  420d9a:	cmp    r9d,0x12e
  420da1:	jne    0x420c6a
  420da7:	cmp    BYTE PTR [rbp+0x0],0x0
  420dab:	je     0x420c6a
  420db1:	mov    r10,rbp
  420db4:	jmp    0x420de8
  420db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420dc0:	test   eax,eax
  420dc2:	mov    rdx,QWORD PTR [rsp+0x30]
  420dc7:	je     0x420c6a
  420dcd:	mov    r10,QWORD PTR [rsp+0x38]
  420dd2:	movzx  eax,BYTE PTR [r10]
  420dd6:	movsx  rax,BYTE PTR [r15+rax*1]
  420ddb:	add    r10,rax
  420dde:	cmp    BYTE PTR [r10],0x0
  420de2:	je     0x420c6a
  420de8:	mov    rcx,r10
  420deb:	mov    DWORD PTR [rsp+0x2c],r9d
  420df0:	mov    QWORD PTR [rsp+0x30],rdx
  420df5:	mov    QWORD PTR [rsp+0x38],r10
  420dfa:	call   0x4219f0
  420dff:	mov    ecx,eax
  420e01:	call   0x423760
  420e06:	cmp    eax,0xe6
  420e0b:	mov    r9d,DWORD PTR [rsp+0x2c]
  420e10:	jne    0x420dc0
  420e12:	test   r12,r12
  420e15:	je     0x42110c
  420e1b:	lea    rsi,[r12+rbx*1]
  420e1f:	mov    ecx,r9d
  420e22:	call   0x4209e0
  420e27:	mov    rdx,rsi
  420e2a:	mov    ecx,eax
  420e2c:	call   0x421cd0
  420e31:	cdqe   
  420e33:	add    rbx,rax
  420e36:	lea    rdx,[r12+rbx*1]
  420e3a:	mov    ecx,0x307
  420e3f:	mov    rsi,rbp
  420e42:	call   0x421cd0
  420e47:	cdqe   
  420e49:	add    rbx,rax
  420e4c:	jmp    0x420b30
  420e51:	test   r12,r12
  420e54:	mov    edx,0x0
  420e59:	mov    ecx,0x69
  420e5e:	cmovne rdx,rax
  420e62:	call   0x421cd0
  420e67:	cdqe   
  420e69:	add    rbx,rax
  420e6c:	movzx  eax,BYTE PTR [rbp+0x0]
  420e70:	movsx  rsi,BYTE PTR [r15+rax*1]
  420e75:	add    rsi,rbp
  420e78:	jmp    0x420b30
  420e7d:	nop    DWORD PTR [rax]
  420e80:	test   r13,r13
  420e83:	js     0x420e91
  420e85:	cmp    rbp,QWORD PTR [rsp+0x20]
  420e8a:	mov    esi,0x3c2
  420e8f:	jae    0x420ef5
  420e91:	cmp    BYTE PTR [rbp+0x0],0x0
  420e95:	mov    esi,0x3c2
  420e9a:	je     0x420ef5
  420e9c:	mov    rcx,rbp
  420e9f:	call   0x4219f0
  420ea4:	cmp    eax,0x2faff
  420ea9:	ja     0x421012
  420eaf:	mov    edx,eax
  420eb1:	lea    rcx,[rip+0x31788]        # 0x452640
  420eb8:	shr    edx,0x8
  420ebb:	movsx  rdx,WORD PTR [rcx+rdx*2]
  420ec0:	cmp    dx,0x270f
  420ec5:	jg     0x42103e
  420ecb:	movzx  eax,al
  420ece:	shl    rdx,0x8
  420ed2:	add    rdx,rax
  420ed5:	lea    rax,[rip+0x31d64]        # 0x452c40
  420edc:	movsx  ecx,BYTE PTR [rax+rdx*1]
  420ee0:	mov    eax,0x3e0
  420ee5:	shr    eax,cl
  420ee7:	and    eax,0x1
  420eea:	cmp    eax,0x1
  420eed:	sbb    esi,esi
  420eef:	add    esi,0x3c3
  420ef5:	lea    rax,[r12+rbx*1]
  420ef9:	test   r12,r12
  420efc:	mov    edx,0x0
  420f01:	mov    ecx,esi
  420f03:	mov    rsi,rbp
  420f06:	cmovne rdx,rax
  420f0a:	call   0x421cd0
  420f0f:	cdqe   
  420f11:	add    rbx,rax
  420f14:	jmp    0x420b30
  420f19:	nop    DWORD PTR [rax+0x0]
  420f20:	test   r12,r12
  420f23:	mov    DWORD PTR [rsp+0x2c],r9d
  420f28:	je     0x421050
  420f2e:	lea    rdx,[r12+rbx*1]
  420f32:	mov    ecx,0x69
  420f37:	call   0x421cd0
  420f3c:	cdqe   
  420f3e:	mov    ecx,0x307
  420f43:	add    rbx,rax
  420f46:	lea    rdx,[r12+rbx*1]
  420f4a:	call   0x421cd0
  420f4f:	mov    r9d,DWORD PTR [rsp+0x2c]
  420f54:	cdqe   
  420f56:	add    rbx,rax
  420f59:	cmp    r9d,0xcd
  420f60:	je     0x4210e0
  420f66:	cmp    r9d,0x128
  420f6d:	je     0x4210c0
  420f73:	cmp    r9d,0xcc
  420f7a:	lea    rdx,[r12+rbx*1]
  420f7e:	je     0x4210a3
  420f84:	mov    rsi,rbp
  420f87:	jmp    0x420b30
  420f8c:	nop    DWORD PTR [rax+0x0]
  420f90:	mov    rcx,QWORD PTR [rsi]
  420f93:	lea    rdi,[rax+0x8]
  420f97:	add    rbx,rdx
  420f9a:	and    rdi,0xfffffffffffffff8
  420f9e:	mov    QWORD PTR [rax],rcx
  420fa1:	mov    rcx,QWORD PTR [rsi+rdx*1-0x8]
  420fa6:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
  420fab:	sub    rax,rdi
  420fae:	lea    rcx,[rdx+rax*1]
  420fb2:	sub    rsi,rax
  420fb5:	shr    rcx,0x3
  420fb9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  420fbc:	mov    rsi,rbp
  420fbf:	jmp    0x420b30
  420fc4:	movzx  ecx,BYTE PTR [rsi]
  420fc7:	test   dl,0x2
  420fca:	mov    BYTE PTR [rax],cl
  420fcc:	je     0x420d69
  420fd2:	movzx  ecx,WORD PTR [rsi+rdx*1-0x2]
  420fd7:	mov    WORD PTR [rax+rdx*1-0x2],cx
  420fdc:	jmp    0x420d69
  420fe1:	lea    rdx,[rip+0x25ed8]        # 0x446ec0
  420fe8:	xor    eax,eax
  420fea:	mov    r8,rdx
  420fed:	jmp    0x421000
  420fef:	nop
  420ff0:	add    eax,0x1
  420ff3:	add    r8,0xc
  420ff7:	cmp    eax,0x1f
  420ffa:	je     0x420cae
  421000:	cmp    DWORD PTR [r8],r9d
  421003:	jne    0x420ff0
  421005:	lea    rax,[rax+rax*2]
  421009:	mov    ecx,DWORD PTR [rdx+rax*4+0x8]
  42100d:	jmp    0x420cae
  421012:	lea    edx,[rax-0xe0000]
  421018:	cmp    edx,0x2ffff
  42101e:	ja     0x420ef5
  421024:	lea    rcx,[rip+0x31015]        # 0x452040
  42102b:	shr    edx,0x8
  42102e:	movsx  rdx,WORD PTR [rcx+rdx*2]
  421033:	cmp    dx,0x270f
  421038:	jle    0x420ecb
  42103e:	lea    ecx,[rdx-0x2710]
  421044:	jmp    0x420ee0
  421049:	nop    DWORD PTR [rax+0x0]
  421050:	xor    edx,edx
  421052:	mov    ecx,0x69
  421057:	call   0x421cd0
  42105c:	xor    edx,edx
  42105e:	mov    ecx,0x307
  421063:	movsxd rsi,eax
  421066:	call   0x421cd0
  42106b:	mov    r9d,DWORD PTR [rsp+0x2c]
  421070:	movsxd rdx,eax
  421073:	lea    rax,[rsi+rdx*1]
  421077:	add    rbx,rax
  42107a:	cmp    r9d,0xcd
  421081:	je     0x42112d
  421087:	cmp    r9d,0x128
  42108e:	je     0x421129
  421094:	cmp    r9d,0xcc
  42109b:	jne    0x420f84
  4210a1:	xor    edx,edx
  4210a3:	mov    ecx,0x300
  4210a8:	mov    rsi,rbp
  4210ab:	call   0x421cd0
  4210b0:	cdqe   
  4210b2:	add    rbx,rax
  4210b5:	jmp    0x420b30
  4210ba:	nop    WORD PTR [rax+rax*1+0x0]
  4210c0:	lea    rdx,[r12+rbx*1]
  4210c4:	mov    ecx,0x303
  4210c9:	mov    rsi,rbp
  4210cc:	call   0x421cd0
  4210d1:	cdqe   
  4210d3:	add    rbx,rax
  4210d6:	jmp    0x420b30
  4210db:	nop    DWORD PTR [rax+rax*1+0x0]
  4210e0:	lea    rdx,[r12+rbx*1]
  4210e4:	mov    ecx,0x301
  4210e9:	mov    rsi,rbp
  4210ec:	call   0x421cd0
  4210f1:	cdqe   
  4210f3:	add    rbx,rax
  4210f6:	jmp    0x420b30
  4210fb:	mov    ecx,DWORD PTR [rsi]
  4210fd:	mov    DWORD PTR [rax],ecx
  4210ff:	mov    ecx,DWORD PTR [rsi+rdx*1-0x4]
  421103:	mov    DWORD PTR [rax+rdx*1-0x4],ecx
  421107:	jmp    0x420d69
  42110c:	mov    ecx,r9d
  42110f:	call   0x4209e0
  421114:	xor    edx,edx
  421116:	mov    ecx,eax
  421118:	call   0x421cd0
  42111d:	cdqe   
  42111f:	xor    edx,edx
  421121:	add    rbx,rax
  421124:	jmp    0x420e3a
  421129:	xor    edx,edx
  42112b:	jmp    0x4210c4
  42112d:	xor    edx,edx
  42112f:	jmp    0x4210e4
  421131:	nop    DWORD PTR [rax+rax*1+0x0]
  421136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421140:	lea    rdx,[rip+0x25d79]        # 0x446ec0
  421147:	lea    r8,[rip+0x25ee6]        # 0x447034
  42114e:	xchg   ax,ax
  421150:	mov    eax,DWORD PTR [rdx]
  421152:	cmp    eax,ecx
  421154:	je     0x4211a2
  421156:	cmp    DWORD PTR [rdx+0x4],ecx
  421159:	je     0x4211a2
  42115b:	cmp    DWORD PTR [rdx+0x8],ecx
  42115e:	je     0x4211a2
  421160:	add    rdx,0xc
  421164:	cmp    rdx,r8
  421167:	jne    0x421150
  421169:	cmp    ecx,0x2faff
  42116f:	ja     0x4211a4
  421171:	mov    eax,ecx
  421173:	lea    rdx,[rip+0x314c6]        # 0x452640
  42117a:	shr    eax,0x8
  42117d:	movsx  rax,WORD PTR [rdx+rax*2]
  421182:	cmp    ax,0x270f
  421186:	jle    0x4211c6
  421188:	cmp    ax,0x2715
  42118c:	sete   al
  42118f:	test   al,al
  421191:	je     0x4211a0
  421193:	jmp    0x420420
  421198:	nop    DWORD PTR [rax+rax*1+0x0]
  4211a0:	mov    eax,ecx
  4211a2:	repz ret 
  4211a4:	lea    eax,[rcx-0xe0000]
  4211aa:	cmp    eax,0x2ffff
  4211af:	ja     0x4211a0
  4211b1:	lea    rdx,[rip+0x30e88]        # 0x452040
  4211b8:	shr    eax,0x8
  4211bb:	movsx  rax,WORD PTR [rdx+rax*2]
  4211c0:	cmp    ax,0x270f
  4211c4:	jg     0x421188
  4211c6:	movzx  edx,cl
  4211c9:	shl    rax,0x8
  4211cd:	add    rax,rdx
  4211d0:	lea    rdx,[rip+0x31a69]        # 0x452c40
  4211d7:	cmp    BYTE PTR [rdx+rax*1],0x5
  4211db:	sete   al
  4211de:	jmp    0x42118f
  4211e0:	cmp    ecx,0x2faff
  4211e6:	ja     0x421253
  4211e8:	mov    eax,ecx
  4211ea:	lea    rdx,[rip+0x3144f]        # 0x452640
  4211f1:	shr    eax,0x8
  4211f4:	movsx  rax,WORD PTR [rdx+rax*2]
  4211f9:	cmp    ax,0x270f
  4211fd:	jg     0x42127b
  4211ff:	movzx  edx,cl
  421202:	shl    rax,0x8
  421206:	add    rax,rdx
  421209:	lea    rdx,[rip+0x31a30]        # 0x452c40
  421210:	cmp    BYTE PTR [rdx+rax*1],0xd
  421214:	sete   al
  421217:	test   al,al
  421219:	je     0x421284
  42121b:	mov    eax,ecx
  42121d:	shr    eax,0x8
  421220:	cmp    eax,0x2fa
  421225:	ja     0x421292
  421227:	lea    rdx,[rip+0x26412]        # 0x447640
  42122e:	movsx  edx,WORD PTR [rdx+rax*2]
  421232:	xor    eax,eax
  421234:	cmp    dx,0x2710
  421239:	je     0x421290
  42123b:	movzx  eax,cl
  42123e:	movsxd rcx,edx
  421241:	shl    rcx,0x8
  421245:	add    rcx,rax
  421248:	lea    rax,[rip+0x269f1]        # 0x447c40
  42124f:	mov    eax,DWORD PTR [rax+rcx*4]
  421252:	ret    
  421253:	lea    edx,[rcx-0xe0000]
  421259:	mov    eax,0xffffffff
  42125e:	cmp    edx,0x2ffff
  421264:	ja     0x421290
  421266:	lea    rax,[rip+0x30dd3]        # 0x452040
  42126d:	shr    edx,0x8
  421270:	movsx  rax,WORD PTR [rax+rdx*2]
  421275:	cmp    ax,0x270f
  421279:	jle    0x4211ff
  42127b:	cmp    ax,0x271d
  42127f:	sete   al
  421282:	jmp    0x421217
  421284:	or     eax,0xffffffff
  421287:	nop    WORD PTR [rax+rax*1+0x0]
  421290:	repz ret 
  421292:	lea    edx,[rax-0xe00]
  421298:	lea    rax,[rip+0x25da1]        # 0x447040
  42129f:	movsx  edx,WORD PTR [rax+rdx*2]
  4212a3:	xor    eax,eax
  4212a5:	cmp    dx,0x2710
  4212aa:	jne    0x42123b
  4212ac:	repz ret 
  4212ae:	xchg   ax,ax
  4212b0:	lea    eax,[rcx-0x41]
  4212b3:	cmp    eax,0x5
  4212b6:	jbe    0x421334
  4212b8:	lea    eax,[rcx-0x61]
  4212bb:	cmp    eax,0x5
  4212be:	jbe    0x421330
  4212c0:	cmp    ecx,0x2faff
  4212c6:	ja     0x421340
  4212c8:	mov    eax,ecx
  4212ca:	lea    rdx,[rip+0x3136f]        # 0x452640
  4212d1:	shr    eax,0x8
  4212d4:	movsx  rax,WORD PTR [rdx+rax*2]
  4212d9:	cmp    ax,0x270f
  4212dd:	jle    0x42136c
  4212e3:	cmp    ax,0x271d
  4212e7:	sete   al
  4212ea:	test   al,al
  4212ec:	je     0x421389
  4212f2:	mov    eax,ecx
  4212f4:	shr    eax,0x8
  4212f7:	cmp    eax,0x2fa
  4212fc:	ja     0x421392
  421302:	lea    rdx,[rip+0x26337]        # 0x447640
  421309:	movsx  edx,WORD PTR [rdx+rax*2]
  42130d:	xor    eax,eax
  42130f:	cmp    dx,0x2710
  421314:	je     0x421390
  421316:	movzx  eax,cl
  421319:	movsxd rcx,edx
  42131c:	shl    rcx,0x8
  421320:	add    rcx,rax
  421323:	lea    rax,[rip+0x26916]        # 0x447c40
  42132a:	mov    eax,DWORD PTR [rax+rcx*4]
  42132d:	ret    
  42132e:	xchg   ax,ax
  421330:	lea    eax,[rcx-0x57]
  421333:	ret    
  421334:	lea    eax,[rcx-0x37]
  421337:	ret    
  421338:	nop    DWORD PTR [rax+rax*1+0x0]
  421340:	lea    edx,[rcx-0xe0000]
  421346:	mov    eax,0xffffffff
  42134b:	cmp    edx,0x2ffff
  421351:	ja     0x421390
  421353:	lea    rax,[rip+0x30ce6]        # 0x452040
  42135a:	shr    edx,0x8
  42135d:	movsx  rax,WORD PTR [rax+rdx*2]
  421362:	cmp    ax,0x270f
  421366:	jg     0x4212e3
  42136c:	movzx  edx,cl
  42136f:	shl    rax,0x8
  421373:	add    rax,rdx
  421376:	lea    rdx,[rip+0x318c3]        # 0x452c40
  42137d:	cmp    BYTE PTR [rdx+rax*1],0xd
  421381:	sete   al
  421384:	jmp    0x4212ea
  421389:	or     eax,0xffffffff
  42138c:	nop    DWORD PTR [rax+0x0]
  421390:	repz ret 
  421392:	lea    edx,[rax-0xe00]
  421398:	lea    rax,[rip+0x25ca1]        # 0x447040
  42139f:	movsx  edx,WORD PTR [rax+rdx*2]
  4213a3:	xor    eax,eax
  4213a5:	cmp    dx,0x2710
  4213aa:	jne    0x421316
  4213b0:	repz ret 
  4213b2:	nop    DWORD PTR [rax+0x0]
  4213b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4213c0:	cmp    ecx,0x2faff
  4213c6:	ja     0x4213e5
  4213c8:	mov    eax,ecx
  4213ca:	lea    rdx,[rip+0x3126f]        # 0x452640
  4213d1:	shr    eax,0x8
  4213d4:	movsx  rax,WORD PTR [rdx+rax*2]
  4213d9:	cmp    ax,0x270f
  4213dd:	jle    0x42140d
  4213df:	sub    eax,0x2710
  4213e4:	ret    
  4213e5:	lea    edx,[rcx-0xe0000]
  4213eb:	mov    eax,0x2
  4213f0:	cmp    edx,0x2ffff
  4213f6:	ja     0x421422
  4213f8:	lea    rax,[rip+0x30c41]        # 0x452040
  4213ff:	shr    edx,0x8
  421402:	movsx  rax,WORD PTR [rax+rdx*2]
  421407:	cmp    ax,0x270f
  42140b:	jg     0x4213df
  42140d:	movzx  ecx,cl
  421410:	shl    rax,0x8
  421414:	lea    rdx,[rip+0x31825]        # 0x452c40
  42141b:	add    rax,rcx
  42141e:	movsx  eax,BYTE PTR [rdx+rax*1]
  421422:	repz ret 
  421424:	xchg   ax,ax
  421426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421430:	push   r12
  421432:	push   rbp
  421433:	push   rdi
  421434:	push   rsi
  421435:	push   rbx
  421436:	sub    rsp,0x20
  42143a:	test   rcx,rcx
  42143d:	mov    rsi,rcx
  421440:	mov    rdi,rdx
  421443:	je     0x421490
  421445:	call   0x41f970
  42144a:	xor    r8d,r8d
  42144d:	mov    rdx,rdi
  421450:	mov    r9d,eax
  421453:	mov    rcx,rsi
  421456:	mov    r12d,eax
  421459:	call   0x420580
  42145e:	lea    rcx,[rax+0x1]
  421462:	mov    rbp,rax
  421465:	call   0x40e5c0
  42146a:	mov    r9d,r12d
  42146d:	mov    rbx,rax
  421470:	mov    r8,rax
  421473:	mov    rdx,rdi
  421476:	mov    rcx,rsi
  421479:	call   0x420580
  42147e:	mov    rax,rbx
  421481:	mov    BYTE PTR [rbx+rbp*1],0x0
  421485:	add    rsp,0x20
  421489:	pop    rbx
  42148a:	pop    rsi
  42148b:	pop    rdi
  42148c:	pop    rbp
  42148d:	pop    r12
  42148f:	ret    
  421490:	lea    r8,[rip+0x21629]        # 0x442ac0
  421497:	lea    rdx,[rip+0x21661]        # 0x442aff
  42149e:	lea    rcx,[rip+0x21627]        # 0x442acc
  4214a5:	call   0x40fd20
  4214aa:	xor    eax,eax
  4214ac:	add    rsp,0x20
  4214b0:	pop    rbx
  4214b1:	pop    rsi
  4214b2:	pop    rdi
  4214b3:	pop    rbp
  4214b4:	pop    r12
  4214b6:	ret    
  4214b7:	nop    WORD PTR [rax+rax*1+0x0]
  4214c0:	push   r12
  4214c2:	push   rbp
  4214c3:	push   rdi
  4214c4:	push   rsi
  4214c5:	push   rbx
  4214c6:	sub    rsp,0x20
  4214ca:	test   rcx,rcx
  4214cd:	mov    rsi,rcx
  4214d0:	mov    rdi,rdx
  4214d3:	je     0x421520
  4214d5:	call   0x41f970
  4214da:	xor    r8d,r8d
  4214dd:	mov    rdx,rdi
  4214e0:	mov    r9d,eax
  4214e3:	mov    rcx,rsi
  4214e6:	mov    r12d,eax
  4214e9:	call   0x420b00
  4214ee:	lea    rcx,[rax+0x1]
  4214f2:	mov    rbp,rax
  4214f5:	call   0x40e5c0
  4214fa:	mov    r9d,r12d
  4214fd:	mov    rbx,rax
  421500:	mov    r8,rax
  421503:	mov    rdx,rdi
  421506:	mov    rcx,rsi
  421509:	call   0x420b00
  42150e:	mov    rax,rbx
  421511:	mov    BYTE PTR [rbx+rbp*1],0x0
  421515:	add    rsp,0x20
  421519:	pop    rbx
  42151a:	pop    rsi
  42151b:	pop    rdi
  42151c:	pop    rbp
  42151d:	pop    r12
  42151f:	ret    
  421520:	lea    r8,[rip+0x21599]        # 0x442ac0
  421527:	lea    rdx,[rip+0x215c2]        # 0x442af0
  42152e:	lea    rcx,[rip+0x21597]        # 0x442acc
  421535:	call   0x40fd20
  42153a:	xor    eax,eax
  42153c:	add    rsp,0x20
  421540:	pop    rbx
  421541:	pop    rsi
  421542:	pop    rdi
  421543:	pop    rbp
  421544:	pop    r12
  421546:	ret    
  421547:	nop    WORD PTR [rax+rax*1+0x0]
  421550:	push   r13
  421552:	push   r12
  421554:	push   rbp
  421555:	push   rdi
  421556:	push   rsi
  421557:	push   rbx
  421558:	sub    rsp,0x28
  42155c:	test   rcx,rcx
  42155f:	mov    r12,rcx
  421562:	mov    rbx,rdx
  421565:	je     0x421659
  42156b:	xor    ecx,ecx
  42156d:	lea    rbp,[r12+rbx*1]
  421571:	lea    r13,[rip+0x24e48]        # 0x4463c0
  421578:	call   0x41ae90
  42157d:	mov    rdi,QWORD PTR [rip+0x5a66c]        # 0x47bbf0
  421584:	mov    rsi,rax
  421587:	nop    WORD PTR [rax+rax*1+0x0]
  421590:	test   rbx,rbx
  421593:	js     0x42159e
  421595:	cmp    r12,rbp
  421598:	jae    0x421643
  42159e:	cmp    BYTE PTR [r12],0x0
  4215a3:	je     0x421643
  4215a9:	mov    rcx,r12
  4215ac:	call   0x4219f0
  4215b1:	lea    edx,[rax-0xb5]
  4215b7:	cmp    edx,0xfa62
  4215bd:	ja     0x421630
  4215bf:	mov    ecx,0x9f
  4215c4:	xor    r10d,r10d
  4215c7:	jmp    0x4215e0
  4215c9:	nop    DWORD PTR [rax+0x0]
  4215d0:	cmp    r8d,r10d
  4215d3:	je     0x421630
  4215d5:	cmp    eax,r9d
  4215d8:	cmovbe ecx,r8d
  4215dc:	cmova  r10d,r8d
  4215e0:	lea    r8d,[r10+rcx*1]
  4215e4:	mov    edx,r8d
  4215e7:	shr    edx,0x1f
  4215ea:	add    r8d,edx
  4215ed:	sar    r8d,1
  4215f0:	movsxd rdx,r8d
  4215f3:	lea    rdx,[rdx+rdx*4]
  4215f7:	lea    rdx,[r13+rdx*2+0x0]
  4215fc:	movzx  r9d,WORD PTR [rdx]
  421600:	cmp    r9d,eax
  421603:	jne    0x4215d0
  421605:	add    rdx,0x2
  421609:	mov    rcx,rsi
  42160c:	call   0x41ace0
  421611:	movzx  eax,BYTE PTR [r12]
  421616:	mov    rdx,QWORD PTR [rdi]
  421619:	movsx  rax,BYTE PTR [rdx+rax*1]
  42161e:	add    r12,rax
  421621:	jmp    0x421590
  421626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421630:	mov    ecx,eax
  421632:	call   0x4209e0
  421637:	mov    rcx,rsi
  42163a:	mov    edx,eax
  42163c:	call   0x41b6a0
  421641:	jmp    0x421611
  421643:	xor    edx,edx
  421645:	mov    rcx,rsi
  421648:	add    rsp,0x28
  42164c:	pop    rbx
  42164d:	pop    rsi
  42164e:	pop    rdi
  42164f:	pop    rbp
  421650:	pop    r12
  421652:	pop    r13
  421654:	jmp    0x41a8e0
  421659:	lea    r8,[rip+0x21460]        # 0x442ac0
  421660:	lea    rdx,[rip+0x21479]        # 0x442ae0
  421667:	lea    rcx,[rip+0x2145e]        # 0x442acc
  42166e:	call   0x40fd20
  421673:	xor    eax,eax
  421675:	add    rsp,0x28
  421679:	pop    rbx
  42167a:	pop    rsi
  42167b:	pop    rdi
  42167c:	pop    rbp
  42167d:	pop    r12
  42167f:	pop    r13
  421681:	ret    
  421682:	nop    DWORD PTR [rax+0x0]
  421686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421690:	xor    r8d,r8d
  421693:	cmp    ecx,0xffff
  421699:	ja     0x4216ee
  42169b:	mov    eax,ecx
  42169d:	lea    r8,[rip+0x248dc]        # 0x445f80
  4216a4:	shr    eax,0x8
  4216a7:	movzx  r8d,BYTE PTR [r8+rax*1]
  4216ac:	mov    eax,ecx
  4216ae:	shr    eax,0x4
  4216b1:	and    eax,0xf
  4216b4:	add    eax,r8d
  4216b7:	lea    r8,[rip+0x249c2]        # 0x446080
  4216be:	movzx  r8d,BYTE PTR [r8+rax*1]
  4216c3:	mov    eax,ecx
  4216c5:	shr    eax,0x2
  4216c8:	and    eax,0x3
  4216cb:	add    eax,r8d
  4216ce:	lea    r8,[rip+0x24aab]        # 0x446180
  4216d5:	movzx  r8d,BYTE PTR [r8+rax*1]
  4216da:	mov    eax,ecx
  4216dc:	and    eax,0x3
  4216df:	add    eax,r8d
  4216e2:	lea    r8,[rip+0x24b97]        # 0x446280
  4216e9:	movsx  r8d,WORD PTR [r8+rax*2]
  4216ee:	add    r8d,ecx
  4216f1:	xor    eax,eax
  4216f3:	cmp    ecx,r8d
  4216f6:	setne  al
  4216f9:	test   rdx,rdx
  4216fc:	je     0x421701
  4216fe:	mov    DWORD PTR [rdx],r8d
  421701:	repz ret 
  421703:	nop    DWORD PTR [rax]
  421706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421710:	push   rbx
  421711:	cmp    ecx,0x1fff
  421717:	ja     0x421730
  421719:	lea    rax,[rip+0x22860]        # 0x443f80
  421720:	mov    ecx,ecx
  421722:	movzx  eax,BYTE PTR [rax+rcx*1]
  421726:	pop    rbx
  421727:	ret    
  421728:	nop    DWORD PTR [rax+rax*1+0x0]
  421730:	mov    eax,DWORD PTR [rip+0x18fea]        # 0x43a720
  421736:	mov    r9d,0x170
  42173c:	xor    r10d,r10d
  42173f:	lea    rbx,[rip+0x21c7a]        # 0x4433c0
  421746:	jmp    0x421766
  421748:	nop    DWORD PTR [rax+rax*1+0x0]
  421750:	lea    r9d,[rax-0x1]
  421754:	lea    eax,[r10+r9*1]
  421758:	mov    edx,eax
  42175a:	shr    edx,0x1f
  42175d:	add    eax,edx
  42175f:	sar    eax,1
  421761:	cmp    r10d,r9d
  421764:	jg     0x421790
  421766:	movsxd r8,eax
  421769:	lea    r11,[rip+0x21c50]        # 0x4433c0
  421770:	mov    edx,DWORD PTR [rbx+r8*8]
  421774:	cmp    ecx,edx
  421776:	jb     0x421750
  421778:	movzx  r10d,WORD PTR [r11+r8*8+0x4]
  42177e:	add    edx,r10d
  421781:	cmp    ecx,edx
  421783:	jb     0x4217a0
  421785:	lea    r10d,[rax+0x1]
  421789:	jmp    0x421754
  42178b:	nop    DWORD PTR [rax+rax*1+0x0]
  421790:	mov    eax,0x3d
  421795:	pop    rbx
  421796:	ret    
  421797:	nop    WORD PTR [rax+rax*1+0x0]
  4217a0:	mov    DWORD PTR [rip+0x18f7a],eax        # 0x43a720
  4217a6:	movzx  eax,WORD PTR [r11+r8*8+0x6]
  4217ac:	pop    rbx
  4217ad:	ret    
  4217ae:	xchg   ax,ax
  4217b0:	cmp    ecx,0xffffffff
  4217b3:	je     0x4217d0
  4217b5:	cmp    ecx,0x66
  4217b8:	mov    eax,0x5a7a7a7a
  4217bd:	jbe    0x4217c1
  4217bf:	repz ret 
  4217c1:	lea    rax,[rip+0x21a38]        # 0x443200
  4217c8:	movsxd rcx,ecx
  4217cb:	mov    eax,DWORD PTR [rax+rcx*4]
  4217ce:	ret    
  4217cf:	nop
  4217d0:	xor    eax,eax
  4217d2:	ret    
  4217d3:	nop    DWORD PTR [rax]
  4217d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4217e0:	test   ecx,ecx
  4217e2:	je     0x421804
  4217e4:	xor    eax,eax
  4217e6:	lea    rdx,[rip+0x21a13]        # 0x443200
  4217ed:	jmp    0x4217fa
  4217ef:	nop
  4217f0:	add    rax,0x1
  4217f4:	cmp    rax,0x67
  4217f8:	je     0x421801
  4217fa:	cmp    DWORD PTR [rdx+rax*4],ecx
  4217fd:	jne    0x4217f0
  4217ff:	repz ret 
  421801:	mov    al,0x3d
  421803:	ret    
  421804:	mov    eax,0xffffffff
  421809:	ret    
  42180a:	nop
  42180b:	nop
  42180c:	nop
  42180d:	nop
  42180e:	nop
  42180f:	nop
  421810:	lea    rax,[rdx-0x1]
  421814:	cmp    rax,rcx
  421817:	jb     0x421847
  421819:	movsx  edx,BYTE PTR [rdx-0x1]
  42181d:	and    edx,0xc0
  421823:	add    edx,0xffffff80
  421826:	jne    0x421852
  421828:	sub    rcx,0x1
  42182c:	jmp    0x42183e
  42182e:	xchg   ax,ax
  421830:	movsx  edx,BYTE PTR [rax]
  421833:	and    edx,0xc0
  421839:	add    edx,0xffffff80
  42183c:	jne    0x421850
  42183e:	sub    rax,0x1
  421842:	cmp    rax,rcx
  421845:	jne    0x421830
  421847:	xor    eax,eax
  421849:	ret    
  42184a:	nop    WORD PTR [rax+rax*1+0x0]
  421850:	repz ret 
  421852:	repz ret 
  421854:	xchg   ax,ax
  421856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421860:	cmp    BYTE PTR [rcx],0x0
  421863:	je     0x4218a2
  421865:	test   rdx,rdx
  421868:	lea    rax,[rcx+0x1]
  42186c:	je     0x4218b0
  42186e:	cmp    rdx,rax
  421871:	jbe    0x42189f
  421873:	movsx  ecx,BYTE PTR [rcx+0x1]
  421877:	and    ecx,0xc0
  42187d:	add    ecx,0xffffff80
  421880:	je     0x421892
  421882:	jmp    0x42189d
  421884:	movsx  ecx,BYTE PTR [rax]
  421887:	and    ecx,0xc0
  42188d:	add    ecx,0xffffff80
  421890:	jne    0x4218d4
  421892:	add    rax,0x1
  421896:	cmp    rax,rdx
  421899:	jne    0x421884
  42189b:	xor    eax,eax
  42189d:	repz ret 
  42189f:	mov    rcx,rax
  4218a2:	cmp    rcx,rdx
  4218a5:	mov    eax,0x0
  4218aa:	cmovne rax,rcx
  4218ae:	ret    
  4218af:	nop
  4218b0:	movsx  edx,BYTE PTR [rcx+0x1]
  4218b4:	and    edx,0xc0
  4218ba:	add    edx,0xffffff80
  4218bd:	jne    0x42189d
  4218bf:	nop
  4218c0:	add    rax,0x1
  4218c4:	movsx  edx,BYTE PTR [rax]
  4218c7:	and    edx,0xc0
  4218cd:	add    edx,0xffffff80
  4218d0:	je     0x4218c0
  4218d2:	repz ret 
  4218d4:	repz ret 
  4218d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4218e0:	mov    rax,rcx
  4218e3:	sub    rax,0x1
  4218e7:	movsx  edx,BYTE PTR [rax]
  4218ea:	and    edx,0xc0
  4218f0:	add    edx,0xffffff80
  4218f3:	je     0x4218e3
  4218f5:	ret    
  4218f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421900:	sub    rsp,0x28
  421904:	test   rdx,rdx
  421907:	sete   r8b
  42190b:	test   rcx,rcx
  42190e:	jne    0x421940
  421910:	test   r8b,r8b
  421913:	jne    0x421940
  421915:	lea    r8,[rip+0x37e24]        # 0x459740
  42191c:	lea    rdx,[rip+0x38011]        # 0x459934
  421923:	lea    rcx,[rip+0x37e2c]        # 0x459756
  42192a:	call   0x40fd20
  42192f:	xor    eax,eax
  421931:	add    rsp,0x28
  421935:	ret    
  421936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421940:	test   rdx,rdx
  421943:	js     0x4219a3
  421945:	xor    eax,eax
  421947:	test   r8b,r8b
  42194a:	jne    0x421931
  42194c:	cmp    BYTE PTR [rcx],0x0
  42194f:	je     0x421931
  421951:	movzx  eax,BYTE PTR [rcx]
  421954:	lea    r10,[rip+0x38025]        # 0x459980
  42195b:	movsx  r9,BYTE PTR [r10+rax*1]
  421960:	cmp    rdx,r9
  421963:	lea    r8,[rcx+r9*1]
  421967:	jle    0x4219d8
  421969:	cmp    BYTE PTR [r8],0x0
  42196d:	je     0x4219dc
  42196f:	xor    eax,eax
  421971:	jmp    0x421979
  421973:	cmp    BYTE PTR [r8],0x0
  421977:	je     0x4219d0
  421979:	movzx  r9d,BYTE PTR [r8]
  42197d:	add    eax,0x1
  421980:	movsx  r9,BYTE PTR [r10+r9*1]
  421985:	add    r8,r9
  421988:	mov    r9,r8
  42198b:	sub    r9,rcx
  42198e:	cmp    rdx,r9
  421991:	jg     0x421973
  421993:	cmp    rdx,r9
  421996:	setge  dl
  421999:	movzx  edx,dl
  42199c:	add    eax,edx
  42199e:	add    rsp,0x28
  4219a2:	ret    
  4219a3:	xor    eax,eax
  4219a5:	cmp    BYTE PTR [rcx],0x0
  4219a8:	je     0x421931
  4219aa:	lea    r10,[rip+0x37fcf]        # 0x459980
  4219b1:	movzx  edx,BYTE PTR [rcx]
  4219b4:	add    eax,0x1
  4219b7:	movsx  rdx,BYTE PTR [r10+rdx*1]
  4219bc:	add    rcx,rdx
  4219bf:	cmp    BYTE PTR [rcx],0x0
  4219c2:	jne    0x4219b1
  4219c4:	add    rsp,0x28
  4219c8:	ret    
  4219c9:	nop    DWORD PTR [rax+0x0]
  4219d0:	add    eax,0x1
  4219d3:	add    rsp,0x28
  4219d7:	ret    
  4219d8:	xor    eax,eax
  4219da:	jmp    0x421993
  4219dc:	mov    eax,0x1
  4219e1:	jmp    0x421931
  4219e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219f0:	movsx  eax,BYTE PTR [rcx]
  4219f3:	test   al,al
  4219f5:	mov    r9d,eax
  4219f8:	js     0x421a00
  4219fa:	repz ret 
  4219fc:	nop    DWORD PTR [rax+0x0]
  421a00:	and    eax,0xffffffe0
  421a03:	cmp    al,0xc0
  421a05:	je     0x421a50
  421a07:	mov    eax,r9d
  421a0a:	and    eax,0xfffffff0
  421a0d:	cmp    al,0xe0
  421a0f:	je     0x421ab2
  421a15:	mov    eax,r9d
  421a18:	and    eax,0xfffffff8
  421a1b:	cmp    al,0xf0
  421a1d:	je     0x421abf
  421a23:	mov    eax,r9d
  421a26:	and    eax,0xfffffffc
  421a29:	cmp    al,0xf8
  421a2b:	je     0x421acc
  421a31:	mov    eax,r9d
  421a34:	and    eax,0xfffffffe
  421a37:	cmp    al,0xfc
  421a39:	je     0x421ad9
  421a3f:	nop
  421a40:	mov    eax,0xffffffff
  421a45:	ret    
  421a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a50:	mov    r10d,0x2
  421a56:	mov    edx,0x1f
  421a5b:	and    edx,r9d
  421a5e:	mov    eax,0xffffffff
  421a63:	mov    r8d,edx
  421a66:	movzx  edx,BYTE PTR [rcx+0x1]
  421a6a:	mov    r9d,edx
  421a6d:	and    r9d,0xc0
  421a74:	add    r9d,0xffffff80
  421a78:	jne    0x4219fa
  421a7a:	add    rcx,0x2
  421a7e:	mov    eax,0x1
  421a83:	jmp    0x421a9c
  421a85:	movzx  edx,BYTE PTR [rcx]
  421a88:	add    rcx,0x1
  421a8c:	mov    r9d,edx
  421a8f:	and    r9d,0xc0
  421a96:	add    r9d,0xffffff80
  421a9a:	jne    0x421a40
  421a9c:	shl    r8d,0x6
  421aa0:	and    edx,0x3f
  421aa3:	add    eax,0x1
  421aa6:	or     r8d,edx
  421aa9:	cmp    eax,r10d
  421aac:	jl     0x421a85
  421aae:	mov    eax,r8d
  421ab1:	ret    
  421ab2:	mov    r10d,0x3
  421ab8:	mov    edx,0xf
  421abd:	jmp    0x421a5b
  421abf:	mov    r10d,0x4
  421ac5:	mov    edx,0x7
  421aca:	jmp    0x421a5b
  421acc:	mov    r10d,0x5
  421ad2:	mov    edx,0x3
  421ad7:	jmp    0x421a5b
  421ad9:	mov    r10d,0x6
  421adf:	mov    edx,0x1
  421ae4:	jmp    0x421a5b
  421ae9:	nop    DWORD PTR [rax+0x0]
  421af0:	push   rbx
  421af1:	lea    rbx,[rip+0x37e88]        # 0x459980
  421af8:	cmp    edx,0x0
  421afb:	mov    rax,rcx
  421afe:	lea    ecx,[rdx-0x1]
  421b01:	jle    0x421b18
  421b03:	movzx  edx,BYTE PTR [rax]
  421b06:	sub    ecx,0x1
  421b09:	movsx  rdx,BYTE PTR [rbx+rdx*1]
  421b0e:	add    rax,rdx
  421b11:	cmp    ecx,0xffffffff
  421b14:	jne    0x421b03
  421b16:	pop    rbx
  421b17:	ret    
  421b18:	mov    r8,rax
  421b1b:	je     0x421b16
  421b1d:	nop    DWORD PTR [rax]
  421b20:	movsxd rcx,edx
  421b23:	add    rax,rcx
  421b26:	movsx  ecx,BYTE PTR [rax]
  421b29:	and    ecx,0xc0
  421b2f:	add    ecx,0xffffff80
  421b32:	jne    0x421b46
  421b34:	sub    rax,0x1
  421b38:	movsx  ecx,BYTE PTR [rax]
  421b3b:	and    ecx,0xc0
  421b41:	add    ecx,0xffffff80
  421b44:	je     0x421b34
  421b46:	cmp    rax,r8
  421b49:	mov    rcx,rax
  421b4c:	mov    r9d,0x1
  421b52:	ja     0x421b69
  421b54:	jmp    0x421baf
  421b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b60:	mov    r10,r8
  421b63:	mov    r8,rcx
  421b66:	mov    rcx,r10
  421b69:	neg    r9d
  421b6c:	cmp    r8,rcx
  421b6f:	ja     0x421b60
  421b71:	xor    r10d,r10d
  421b74:	cmp    r8,rcx
  421b77:	lea    rbx,[rip+0x37e02]        # 0x459980
  421b7e:	jae    0x421baa
  421b80:	movzx  r11d,BYTE PTR [r8]
  421b84:	add    r10d,0x1
  421b88:	movsx  r11,BYTE PTR [rbx+r11*1]
  421b8d:	add    r8,r11
  421b90:	cmp    r8,rcx
  421b93:	jb     0x421b80
  421b95:	imul   r9d,r10d
  421b99:	add    edx,r9d
  421b9c:	je     0x421b16
  421ba2:	mov    r8,rax
  421ba5:	jmp    0x421b20
  421baa:	xor    r9d,r9d
  421bad:	jmp    0x421b99
  421baf:	mov    rcx,r8
  421bb2:	mov    r8,rax
  421bb5:	jmp    0x421b71
  421bb7:	nop    WORD PTR [rax+rax*1+0x0]
  421bc0:	push   rdi
  421bc1:	push   rsi
  421bc2:	push   rbx
  421bc3:	sub    rsp,0x20
  421bc7:	mov    ebx,r8d
  421bca:	mov    edi,edx
  421bcc:	call   0x421af0
  421bd1:	mov    edx,ebx
  421bd3:	mov    rsi,rax
  421bd6:	mov    rcx,rax
  421bd9:	sub    edx,edi
  421bdb:	call   0x421af0
  421be0:	sub    rax,rsi
  421be3:	lea    rcx,[rax+0x1]
  421be7:	mov    rbx,rax
  421bea:	call   0x40e5c0
  421bef:	mov    r8,rbx
  421bf2:	mov    rdx,rsi
  421bf5:	mov    rcx,rax
  421bf8:	call   0x4387f0
  421bfd:	mov    BYTE PTR [rax+rbx*1],0x0
  421c01:	add    rsp,0x20
  421c05:	pop    rbx
  421c06:	pop    rsi
  421c07:	pop    rdi
  421c08:	ret    
  421c09:	nop    DWORD PTR [rax+0x0]
  421c10:	mov    r8d,0x1
  421c16:	cmp    rcx,rdx
  421c19:	ja     0x421c26
  421c1b:	jmp    0x421c3a
  421c1d:	nop    DWORD PTR [rax]
  421c20:	mov    rdx,rcx
  421c23:	mov    rcx,rax
  421c26:	neg    r8d
  421c29:	cmp    rcx,rdx
  421c2c:	mov    rax,rdx
  421c2f:	mov    r9,rcx
  421c32:	jb     0x421c20
  421c34:	mov    rcx,rdx
  421c37:	mov    rdx,r9
  421c3a:	xor    eax,eax
  421c3c:	cmp    rcx,rdx
  421c3f:	lea    r10,[rip+0x37d3a]        # 0x459980
  421c46:	jae    0x421c69
  421c48:	nop    DWORD PTR [rax+rax*1+0x0]
  421c50:	movzx  r9d,BYTE PTR [rcx]
  421c54:	add    eax,0x1
  421c57:	movsx  r9,BYTE PTR [r10+r9*1]
  421c5c:	add    rcx,r9
  421c5f:	cmp    rcx,rdx
  421c62:	jb     0x421c50
  421c64:	imul   eax,r8d
  421c68:	ret    
  421c69:	repz ret 
  421c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  421c70:	push   rsi
  421c71:	push   rbx
  421c72:	sub    rsp,0x28
  421c76:	test   r8,r8
  421c79:	mov    rsi,rcx
  421c7c:	je     0x421cc7
  421c7e:	cmp    BYTE PTR [rdx],0x0
  421c81:	je     0x421cc7
  421c83:	mov    r9,rdx
  421c86:	lea    r11,[rip+0x37cf3]        # 0x459980
  421c8d:	jmp    0x421c96
  421c8f:	nop
  421c90:	cmp    BYTE PTR [r9],0x0
  421c94:	je     0x421ca8
  421c96:	movzx  r10d,BYTE PTR [r9]
  421c9a:	movsx  r10,BYTE PTR [r11+r10*1]
  421c9f:	add    r9,r10
  421ca2:	sub    r8,0x1
  421ca6:	jne    0x421c90
  421ca8:	mov    rbx,r9
  421cab:	sub    rbx,rdx
  421cae:	mov    r8,rbx
  421cb1:	mov    rcx,rsi
  421cb4:	call   0x438778
  421cb9:	mov    rax,rsi
  421cbc:	mov    BYTE PTR [rsi+rbx*1],0x0
  421cc0:	add    rsp,0x28
  421cc4:	pop    rbx
  421cc5:	pop    rsi
  421cc6:	ret    
  421cc7:	xor    ebx,ebx
  421cc9:	jmp    0x421cae
  421ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  421cd0:	cmp    ecx,0x7f
  421cd3:	jbe    0x421d34
  421cd5:	cmp    ecx,0x7ff
  421cdb:	ja     0x421d43
  421cdd:	mov    eax,0x2
  421ce2:	mov    r11d,0xc0
  421ce8:	mov    r9d,0x2
  421cee:	test   rdx,rdx
  421cf1:	je     0x421dac
  421cf7:	lea    r10d,[r9-0x1]
  421cfb:	sub    r9d,0x2
  421cff:	lea    r8,[rdx+r10*1]
  421d03:	sub    r10,r9
  421d06:	lea    r10,[rdx+r10*1-0x1]
  421d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  421d10:	mov    r9d,ecx
  421d13:	sub    r8,0x1
  421d17:	shr    ecx,0x6
  421d1a:	and    r9d,0x3f
  421d1e:	or     r9d,0xffffff80
  421d22:	mov    BYTE PTR [r8+0x1],r9b
  421d26:	cmp    r8,r10
  421d29:	jne    0x421d10
  421d2b:	mov    r8d,r11d
  421d2e:	or     ecx,r8d
  421d31:	mov    BYTE PTR [rdx],cl
  421d33:	ret    
  421d34:	xor    r8d,r8d
  421d37:	test   rdx,rdx
  421d3a:	mov    eax,0x1
  421d3f:	jne    0x421d2e
  421d41:	repz ret 
  421d43:	cmp    ecx,0xffff
  421d49:	jbe    0x421d80
  421d4b:	cmp    ecx,0x1fffff
  421d51:	jbe    0x421d96
  421d53:	cmp    ecx,0x4000000
  421d59:	sbb    eax,eax
  421d5b:	add    eax,0x6
  421d5e:	cmp    ecx,0x4000000
  421d64:	sbb    r11d,r11d
  421d67:	mov    r9d,eax
  421d6a:	and    r11d,0xfffffffc
  421d6e:	add    r11d,0xfc
  421d75:	jmp    0x421cee
  421d7a:	nop    WORD PTR [rax+rax*1+0x0]
  421d80:	mov    eax,0x3
  421d85:	mov    r11d,0xe0
  421d8b:	mov    r9d,0x3
  421d91:	jmp    0x421cee
  421d96:	mov    eax,0x4
  421d9b:	mov    r11d,0xf0
  421da1:	mov    r9d,0x4
  421da7:	jmp    0x421cee
  421dac:	repz ret 
  421dae:	xchg   ax,ax
  421db0:	push   rdi
  421db1:	push   rsi
  421db2:	push   rbx
  421db3:	sub    rsp,0x30
  421db7:	lea    rbx,[rsp+0x20]
  421dbc:	mov    rsi,rcx
  421dbf:	mov    rdi,rdx
  421dc2:	mov    ecx,r8d
  421dc5:	mov    rdx,rbx
  421dc8:	call   0x421cd0
  421dcd:	mov    r8,rbx
  421dd0:	cdqe   
  421dd2:	mov    rdx,rdi
  421dd5:	mov    rcx,rsi
  421dd8:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  421ddd:	call   0x41a380
  421de2:	add    rsp,0x30
  421de6:	pop    rbx
  421de7:	pop    rsi
  421de8:	pop    rdi
  421de9:	ret    
  421dea:	nop    WORD PTR [rax+rax*1+0x0]
  421df0:	push   rdi
  421df1:	push   rsi
  421df2:	push   rbx
  421df3:	sub    rsp,0x30
  421df7:	lea    rbx,[rsp+0x20]
  421dfc:	mov    rsi,rcx
  421dff:	mov    rdi,rdx
  421e02:	mov    ecx,r8d
  421e05:	mov    rdx,rbx
  421e08:	call   0x421cd0
  421e0d:	mov    r8,rbx
  421e10:	cdqe   
  421e12:	mov    rdx,rdi
  421e15:	mov    rcx,rsi
  421e18:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  421e1d:	call   0x41a560
  421e22:	add    rsp,0x30
  421e26:	pop    rbx
  421e27:	pop    rsi
  421e28:	pop    rdi
  421e29:	ret    
  421e2a:	nop    WORD PTR [rax+rax*1+0x0]
  421e30:	mov    eax,0xfffffffe
  421e35:	test   rdx,rdx
  421e38:	jne    0x421e40
  421e3a:	repz ret 
  421e3c:	nop    DWORD PTR [rax+0x0]
  421e40:	movzx  r9d,BYTE PTR [rcx]
  421e44:	cmp    r9b,0x7f
  421e48:	mov    r8d,r9d
  421e4b:	jbe    0x421ee0
  421e51:	cmp    r9b,0xbf
  421e55:	mov    al,0xff
  421e57:	jbe    0x421e3a
  421e59:	cmp    r9d,0xdf
  421e60:	jbe    0x421ef4
  421e66:	cmp    r9d,0xef
  421e6d:	ja     0x421f95
  421e73:	and    r8d,0xf
  421e77:	mov    r10d,0x800
  421e7d:	mov    eax,0x3
  421e82:	test   rdx,rdx
  421e85:	js     0x421f20
  421e8b:	mov    r9d,eax
  421e8e:	cmp    rdx,r9
  421e91:	jge    0x421f20
  421e97:	cmp    rdx,0x1
  421e9b:	mov    eax,0xfffffffe
  421ea0:	je     0x421e3a
  421ea2:	movzx  r8d,BYTE PTR [rcx+0x1]
  421ea7:	mov    al,0xff
  421ea9:	and    r8d,0xffffffc0
  421ead:	cmp    r8b,0x80
  421eb1:	jne    0x421e3a
  421eb3:	mov    r8d,0x1
  421eb9:	jmp    0x421ecb
  421ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  421ec0:	movzx  eax,BYTE PTR [rcx+rax*1]
  421ec4:	and    eax,0xffffffc0
  421ec7:	cmp    al,0x80
  421ec9:	jne    0x421eee
  421ecb:	lea    eax,[r8+0x1]
  421ecf:	cmp    rdx,rax
  421ed2:	mov    r8,rax
  421ed5:	jg     0x421ec0
  421ed7:	mov    eax,0xfffffffe
  421edc:	ret    
  421edd:	nop    DWORD PTR [rax]
  421ee0:	mov    eax,r9d
  421ee3:	lea    edx,[rax-0xfdd0]
  421ee9:	cmp    edx,0x1f
  421eec:	ja     0x421f08
  421eee:	mov    eax,0xffffffff
  421ef3:	ret    
  421ef4:	and    r8d,0x1f
  421ef8:	mov    r10d,0x80
  421efe:	mov    eax,0x2
  421f03:	jmp    0x421e82
  421f08:	mov    edx,eax
  421f0a:	and    edx,0xfffe
  421f10:	cmp    edx,0xfffe
  421f16:	mov    edx,0xffffffff
  421f1b:	cmove  eax,edx
  421f1e:	ret    
  421f1f:	nop
  421f20:	sub    eax,0x2
  421f23:	lea    rdx,[rcx+0x1]
  421f27:	lea    r9,[rcx+rax*1+0x2]
  421f2c:	movzx  eax,BYTE PTR [rdx]
  421f2f:	mov    ecx,eax
  421f31:	and    ecx,0xffffffc0
  421f34:	cmp    cl,0x80
  421f37:	je     0x421f41
  421f39:	cmp    al,0x1
  421f3b:	sbb    eax,eax
  421f3d:	sub    eax,0x1
  421f40:	ret    
  421f41:	shl    r8d,0x6
  421f45:	and    eax,0x3f
  421f48:	add    rdx,0x1
  421f4c:	or     r8d,eax
  421f4f:	cmp    rdx,r9
  421f52:	jne    0x421f2c
  421f54:	cmp    r10d,r8d
  421f57:	mov    eax,0xffffffff
  421f5c:	ja     0x421e3a
  421f62:	test   r8d,r8d
  421f65:	js     0x421ff0
  421f6b:	cmp    r8d,0x10ffff
  421f72:	ja     0x421e3a
  421f78:	mov    edx,r8d
  421f7b:	and    edx,0xfffff800
  421f81:	cmp    edx,0xd800
  421f87:	je     0x421e3a
  421f8d:	mov    eax,r8d
  421f90:	jmp    0x421ee3
  421f95:	cmp    r9d,0xf7
  421f9c:	ja     0x421fb2
  421f9e:	and    r8d,0x7
  421fa2:	mov    r10d,0x10000
  421fa8:	mov    eax,0x4
  421fad:	jmp    0x421e82
  421fb2:	cmp    r9d,0xfb
  421fb9:	ja     0x421fcf
  421fbb:	and    r8d,0x3
  421fbf:	mov    r10d,0x200000
  421fc5:	mov    eax,0x5
  421fca:	jmp    0x421e82
  421fcf:	cmp    r9d,0xfd
  421fd6:	ja     0x421e3a
  421fdc:	and    r8d,0x1
  421fe0:	mov    r10d,0x4000000
  421fe6:	mov    eax,0x6
  421feb:	jmp    0x421e82
  421ff0:	mov    eax,r8d
  421ff3:	ret    
  421ff4:	xchg   ax,ax
  421ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422000:	push   rdi
  422001:	push   rsi
  422002:	push   rbx
  422003:	sub    rsp,0x20
  422007:	test   rcx,rcx
  42200a:	mov    rbx,rcx
  42200d:	mov    rdi,r8
  422010:	je     0x42212d
  422016:	test   edx,edx
  422018:	js     0x422104
  42201e:	movsxd rdx,edx
  422021:	lea    rcx,[rbx+rdx*1]
  422025:	cmp    rbx,rcx
  422028:	jae    0x422151
  42202e:	xor    esi,esi
  422030:	cmp    BYTE PTR [rbx],0x0
  422033:	mov    rax,rbx
  422036:	lea    r8,[rip+0x37943]        # 0x459980
  42203d:	jne    0x422049
  42203f:	jmp    0x422151
  422044:	cmp    BYTE PTR [rax],0x0
  422047:	je     0x42205c
  422049:	movzx  edx,BYTE PTR [rax]
  42204c:	add    esi,0x1
  42204f:	movsx  rdx,BYTE PTR [r8+rdx*1]
  422054:	add    rax,rdx
  422057:	cmp    rax,rcx
  42205a:	jb     0x422044
  42205c:	lea    ecx,[rsi+0x1]
  42205f:	mov    edx,0x4
  422064:	movsxd rcx,ecx
  422067:	call   0x40e7a0
  42206c:	lea    edx,[rsi-0x1]
  42206f:	mov    r10,rax
  422072:	lea    r11,[rax+rdx*4+0x4]
  422077:	jmp    0x42208f
  422079:	nop    DWORD PTR [rax+0x0]
  422080:	mov    DWORD PTR [r10],edx
  422083:	mov    rbx,r8
  422086:	add    r10,0x4
  42208a:	cmp    r10,r11
  42208d:	je     0x4220b5
  42208f:	movzx  edx,BYTE PTR [rbx]
  422092:	lea    r8,[rbx+0x1]
  422096:	cmp    dl,0x7f
  422099:	mov    ecx,edx
  42209b:	jbe    0x422080
  42209d:	and    ecx,0x40
  4220a0:	jne    0x4220d2
  4220a2:	mov    DWORD PTR [r10],0xfffd
  4220a9:	add    r10,0x4
  4220ad:	mov    rbx,r8
  4220b0:	cmp    r10,r11
  4220b3:	jne    0x42208f
  4220b5:	movsxd rdx,esi
  4220b8:	shl    rdx,0x2
  4220bc:	test   rdi,rdi
  4220bf:	mov    DWORD PTR [rax+rdx*1],0x0
  4220c6:	je     0x4220ca
  4220c8:	mov    DWORD PTR [rdi],esi
  4220ca:	add    rsp,0x20
  4220ce:	pop    rbx
  4220cf:	pop    rsi
  4220d0:	pop    rdi
  4220d1:	ret    
  4220d2:	mov    rbx,r8
  4220d5:	mov    ecx,0x40
  4220da:	nop    WORD PTR [rax+rax*1+0x0]
  4220e0:	add    rbx,0x1
  4220e4:	movzx  r9d,BYTE PTR [rbx-0x1]
  4220e9:	shl    edx,0x6
  4220ec:	shl    ecx,0x5
  4220ef:	and    r9d,0x3f
  4220f3:	or     edx,r9d
  4220f6:	test   edx,ecx
  4220f8:	jne    0x4220e0
  4220fa:	sub    ecx,0x1
  4220fd:	and    edx,ecx
  4220ff:	mov    DWORD PTR [r10],edx
  422102:	jmp    0x422086
  422104:	cmp    BYTE PTR [rbx],0x0
  422107:	je     0x422151
  422109:	lea    r8,[rip+0x37870]        # 0x459980
  422110:	mov    rax,rbx
  422113:	xor    esi,esi
  422115:	movzx  edx,BYTE PTR [rax]
  422118:	add    esi,0x1
  42211b:	movsx  rdx,BYTE PTR [r8+rdx*1]
  422120:	add    rax,rdx
  422123:	cmp    BYTE PTR [rax],0x0
  422126:	jne    0x422115
  422128:	jmp    0x42205c
  42212d:	lea    r8,[rip+0x37627]        # 0x45975b
  422134:	lea    rdx,[rip+0x377e5]        # 0x459920
  42213b:	lea    rcx,[rip+0x37614]        # 0x459756
  422142:	call   0x40fd20
  422147:	xor    eax,eax
  422149:	add    rsp,0x20
  42214d:	pop    rbx
  42214e:	pop    rsi
  42214f:	pop    rdi
  422150:	ret    
  422151:	mov    edx,0x4
  422156:	mov    ecx,0x1
  42215b:	xor    esi,esi
  42215d:	call   0x40e7a0
  422162:	xor    edx,edx
  422164:	jmp    0x4220bc
  422169:	nop    DWORD PTR [rax+0x0]
  422170:	push   r15
  422172:	push   r14
  422174:	push   r13
  422176:	push   r12
  422178:	push   rbp
  422179:	push   rdi
  42217a:	push   rsi
  42217b:	push   rbx
  42217c:	sub    rsp,0x28
  422180:	xor    r12d,r12d
  422183:	mov    QWORD PTR [rsp+0x88],r9
  42218b:	movsxd r9,edx
  42218e:	mov    rsi,rcx
  422191:	add    r9,rcx
  422194:	test   edx,edx
  422196:	mov    rdi,r8
  422199:	mov    rbx,rcx
  42219c:	js     0x4223c4
  4221a2:	mov    r8,r9
  4221a5:	sub    r8,rbx
  4221a8:	test   r8,r8
  4221ab:	jle    0x422293
  4221b1:	movzx  r11d,BYTE PTR [rbx]
  4221b5:	test   r11b,r11b
  4221b8:	je     0x422293
  4221be:	cmp    r11b,0x7f
  4221c2:	movzx  eax,r11b
  4221c6:	jbe    0x4223a0
  4221cc:	cmp    r11b,0xbf
  4221d0:	ja     0x422220
  4221d2:	call   0x42d2a0
  4221d7:	mov    rcx,QWORD PTR [rsp+0x90]
  4221df:	lea    r9,[rip+0x375b2]        # 0x459798
  4221e6:	mov    r8d,0x1
  4221ec:	mov    edx,eax
  4221ee:	xor    r15d,r15d
  4221f1:	call   0x430690
  4221f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422200:	test   rdi,rdi
  422203:	je     0x42220a
  422205:	sub    rbx,rsi
  422208:	mov    DWORD PTR [rdi],ebx
  42220a:	mov    rax,r15
  42220d:	add    rsp,0x28
  422211:	pop    rbx
  422212:	pop    rsi
  422213:	pop    rdi
  422214:	pop    rbp
  422215:	pop    r12
  422217:	pop    r13
  422219:	pop    r14
  42221b:	pop    r15
  42221d:	ret    
  42221e:	xchg   ax,ax
  422220:	cmp    eax,0xdf
  422225:	ja     0x4223e0
  42222b:	mov    ecx,r11d
  42222e:	mov    r13d,0x80
  422234:	mov    eax,0x2
  422239:	and    ecx,0x1f
  42223c:	mov    r10d,eax
  42223f:	cmp    r8,r10
  422242:	jge    0x422320
  422248:	cmp    r8,0x1
  42224c:	je     0x422345
  422252:	movzx  eax,BYTE PTR [rbx+0x1]
  422256:	and    eax,0xffffffc0
  422259:	cmp    al,0x80
  42225b:	jne    0x4221d2
  422261:	mov    edx,0x1
  422266:	jmp    0x42227f
  422268:	nop    DWORD PTR [rax+rax*1+0x0]
  422270:	movzx  eax,BYTE PTR [rbx+rax*1]
  422274:	and    eax,0xffffffc0
  422277:	cmp    al,0x80
  422279:	jne    0x4221d2
  42227f:	lea    eax,[rdx+0x1]
  422282:	cmp    r8,rax
  422285:	mov    rdx,rax
  422288:	jg     0x422270
  42228a:	test   rdi,rdi
  42228d:	je     0x42234e
  422293:	lea    ecx,[r12+0x1]
  422298:	mov    edx,0x4
  42229d:	mov    rbx,rsi
  4222a0:	movsxd rcx,ecx
  4222a3:	call   0x40e7a0
  4222a8:	mov    r15,rax
  4222ab:	xor    eax,eax
  4222ad:	test   r12d,r12d
  4222b0:	je     0x4222f8
  4222b2:	lea    eax,[r12-0x1]
  4222b7:	lea    rbp,[rip+0x376c2]        # 0x459980
  4222be:	mov    r13,r15
  4222c1:	mov    rbx,rsi
  4222c4:	lea    r14,[r15+rax*4+0x4]
  4222c9:	nop    DWORD PTR [rax+0x0]
  4222d0:	mov    rcx,rbx
  4222d3:	add    r13,0x4
  4222d7:	call   0x4219f0
  4222dc:	mov    DWORD PTR [r13-0x4],eax
  4222e0:	movzx  eax,BYTE PTR [rbx]
  4222e3:	movsx  rax,BYTE PTR [rbp+rax*1+0x0]
  4222e9:	add    rbx,rax
  4222ec:	cmp    r13,r14
  4222ef:	jne    0x4222d0
  4222f1:	movsxd rax,r12d
  4222f4:	shl    rax,0x2
  4222f8:	cmp    QWORD PTR [rsp+0x88],0x0
  422301:	mov    DWORD PTR [r15+rax*1],0x0
  422309:	je     0x422200
  42230f:	mov    rax,QWORD PTR [rsp+0x88]
  422317:	mov    DWORD PTR [rax],r12d
  42231a:	jmp    0x422200
  42231f:	nop
  422320:	sub    eax,0x2
  422323:	lea    r10,[rbx+0x1]
  422327:	lea    r14,[rbx+rax*1+0x2]
  42232c:	movzx  eax,BYTE PTR [r10]
  422330:	mov    r8d,eax
  422333:	and    r8d,0xffffffc0
  422337:	cmp    r8b,0x80
  42233b:	je     0x422380
  42233d:	test   al,al
  42233f:	jne    0x4221d2
  422345:	test   rdi,rdi
  422348:	jne    0x422293
  42234e:	call   0x42d2a0
  422353:	mov    rcx,QWORD PTR [rsp+0x90]
  42235b:	lea    r9,[rip+0x37406]        # 0x459768
  422362:	mov    r8d,0x3
  422368:	mov    edx,eax
  42236a:	xor    r15d,r15d
  42236d:	call   0x430690
  422372:	jmp    0x42220a
  422377:	nop    WORD PTR [rax+rax*1+0x0]
  422380:	shl    ecx,0x6
  422383:	and    eax,0x3f
  422386:	add    r10,0x1
  42238a:	or     ecx,eax
  42238c:	cmp    r10,r14
  42238f:	jne    0x42232c
  422391:	cmp    ecx,r13d
  422394:	jb     0x4221d2
  42239a:	mov    eax,ecx
  42239c:	nop    DWORD PTR [rax+0x0]
  4223a0:	test   eax,eax
  4223a2:	js     0x422461
  4223a8:	lea    rbp,[rip+0x375d1]        # 0x459980
  4223af:	add    r12d,0x1
  4223b3:	movsx  rax,BYTE PTR [rbp+r11*1+0x0]
  4223b9:	add    rbx,rax
  4223bc:	test   edx,edx
  4223be:	jns    0x4221a2
  4223c4:	movzx  r11d,BYTE PTR [rbx]
  4223c8:	test   r11b,r11b
  4223cb:	je     0x422293
  4223d1:	mov    r8d,0x6
  4223d7:	jmp    0x4221be
  4223dc:	nop    DWORD PTR [rax+0x0]
  4223e0:	cmp    eax,0xef
  4223e5:	ja     0x422400
  4223e7:	mov    ecx,r11d
  4223ea:	mov    r13d,0x800
  4223f0:	mov    eax,0x3
  4223f5:	and    ecx,0xf
  4223f8:	jmp    0x42223c
  4223fd:	nop    DWORD PTR [rax]
  422400:	cmp    eax,0xf7
  422405:	ja     0x422420
  422407:	mov    ecx,r11d
  42240a:	mov    r13d,0x10000
  422410:	mov    eax,0x4
  422415:	and    ecx,0x7
  422418:	jmp    0x42223c
  42241d:	nop    DWORD PTR [rax]
  422420:	cmp    eax,0xfb
  422425:	ja     0x422440
  422427:	mov    ecx,r11d
  42242a:	mov    r13d,0x200000
  422430:	mov    eax,0x5
  422435:	and    ecx,0x3
  422438:	jmp    0x42223c
  42243d:	nop    DWORD PTR [rax]
  422440:	cmp    eax,0xfd
  422445:	ja     0x4221d2
  42244b:	mov    ecx,r11d
  42244e:	mov    r13d,0x4000000
  422454:	mov    eax,0x6
  422459:	and    ecx,0x1
  42245c:	jmp    0x42223c
  422461:	cmp    eax,0xfffffffe
  422464:	je     0x422345
  42246a:	jmp    0x4221d2
  42246f:	nop
  422470:	push   r14
  422472:	push   r13
  422474:	push   r12
  422476:	push   rbp
  422477:	push   rdi
  422478:	push   rsi
  422479:	push   rbx
  42247a:	sub    rsp,0x20
  42247e:	mov    eax,edx
  422480:	mov    r14,rcx
  422483:	mov    rbp,r8
  422486:	shr    eax,0x1f
  422489:	test   edx,edx
  42248b:	mov    r12,r9
  42248e:	mov    ecx,eax
  422490:	je     0x4225a6
  422496:	mov    eax,DWORD PTR [r14]
  422499:	test   eax,eax
  42249b:	je     0x4225a6
  4224a1:	js     0x422576
  4224a7:	lea    r11,[r14+0x4]
  4224ab:	xor    ebx,ebx
  4224ad:	xor    esi,esi
  4224af:	jmp    0x4224c4
  4224b1:	mov    eax,DWORD PTR [r11]
  4224b4:	test   eax,eax
  4224b6:	je     0x42250e
  4224b8:	add    r11,0x4
  4224bc:	test   eax,eax
  4224be:	js     0x422580
  4224c4:	cmp    eax,0x7f
  4224c7:	mov    r10d,0x1
  4224cd:	jbe    0x422500
  4224cf:	cmp    eax,0x7ff
  4224d4:	mov    r10b,0x2
  4224d7:	jbe    0x422500
  4224d9:	cmp    eax,0xffff
  4224de:	mov    r10b,0x3
  4224e1:	jbe    0x422500
  4224e3:	cmp    eax,0x1fffff
  4224e8:	mov    r10b,0x4
  4224eb:	jbe    0x422500
  4224ed:	cmp    eax,0x4000000
  4224f2:	sbb    r10d,r10d
  4224f5:	add    r10d,0x6
  4224f9:	nop    DWORD PTR [rax+0x0]
  422500:	add    ebx,0x1
  422503:	add    esi,r10d
  422506:	cmp    edx,ebx
  422508:	jg     0x4224b1
  42250a:	test   cl,cl
  42250c:	jne    0x4224b1
  42250e:	lea    ecx,[rsi+0x1]
  422511:	movsxd rsi,esi
  422514:	xor    ebx,ebx
  422516:	movsxd rcx,ecx
  422519:	call   0x40e5c0
  42251e:	add    rsi,rax
  422521:	mov    r13,rax
  422524:	mov    rdi,rax
  422527:	cmp    rax,rsi
  42252a:	jae    0x42254d
  42252c:	nop    DWORD PTR [rax+0x0]
  422530:	mov    ecx,DWORD PTR [r14]
  422533:	mov    rdx,rdi
  422536:	add    ebx,0x1
  422539:	add    r14,0x4
  42253d:	call   0x421cd0
  422542:	movsxd rdx,eax
  422545:	add    rdi,rdx
  422548:	cmp    rdi,rsi
  42254b:	jb     0x422530
  42254d:	test   r12,r12
  422550:	mov    BYTE PTR [rdi],0x0
  422553:	je     0x42255c
  422555:	sub    rdi,r13
  422558:	mov    DWORD PTR [r12],edi
  42255c:	test   rbp,rbp
  42255f:	je     0x422564
  422561:	mov    DWORD PTR [rbp+0x0],ebx
  422564:	mov    rax,r13
  422567:	add    rsp,0x20
  42256b:	pop    rbx
  42256c:	pop    rsi
  42256d:	pop    rdi
  42256e:	pop    rbp
  42256f:	pop    r12
  422571:	pop    r13
  422573:	pop    r14
  422575:	ret    
  422576:	xor    ebx,ebx
  422578:	nop    DWORD PTR [rax+rax*1+0x0]
  422580:	call   0x42d2a0
  422585:	mov    rcx,QWORD PTR [rsp+0x80]
  42258d:	lea    r9,[rip+0x37234]        # 0x4597c8
  422594:	mov    r8d,0x1
  42259a:	mov    edx,eax
  42259c:	xor    r13d,r13d
  42259f:	call   0x430690
  4225a4:	jmp    0x42255c
  4225a6:	mov    ecx,0x1
  4225ab:	xor    ebx,ebx
  4225ad:	call   0x40e5c0
  4225b2:	mov    rdi,rax
  4225b5:	mov    r13,rax
  4225b8:	jmp    0x42254d
  4225ba:	nop    WORD PTR [rax+rax*1+0x0]
  4225c0:	push   r15
  4225c2:	push   r14
  4225c4:	push   r13
  4225c6:	push   r12
  4225c8:	push   rbp
  4225c9:	push   rdi
  4225ca:	push   rsi
  4225cb:	push   rbx
  4225cc:	sub    rsp,0x28
  4225d0:	test   rcx,rcx
  4225d3:	mov    rbp,rcx
  4225d6:	mov    rsi,r8
  4225d9:	mov    rdi,r9
  4225dc:	je     0x4227ae
  4225e2:	mov    rbx,rcx
  4225e5:	xor    r10d,r10d
  4225e8:	xor    r12d,r12d
  4225eb:	movsxd rcx,edx
  4225ee:	jmp    0x42264b
  4225f0:	test   r10d,r10d
  4225f3:	je     0x422775
  4225f9:	add    r10d,0x3f2800
  422600:	shl    r10d,0xa
  422604:	lea    eax,[r10+rax*1+0x2400]
  42260c:	cmp    eax,0x7f
  42260f:	mov    r8d,0x1
  422615:	jbe    0x422641
  422617:	cmp    eax,0x7ff
  42261c:	mov    r8b,0x2
  42261f:	jbe    0x422641
  422621:	cmp    eax,0xffff
  422626:	mov    r8b,0x3
  422629:	jbe    0x422641
  42262b:	cmp    eax,0x1fffff
  422630:	mov    r8b,0x4
  422633:	jbe    0x422641
  422635:	cmp    eax,0x4000000
  42263a:	sbb    r8d,r8d
  42263d:	add    r8d,0x6
  422641:	add    r12d,r8d
  422644:	xor    r10d,r10d
  422647:	add    rbx,0x2
  42264b:	test   edx,edx
  42264d:	js     0x42265d
  42264f:	mov    rax,rbx
  422652:	sub    rax,rbp
  422655:	sar    rax,1
  422658:	cmp    rax,rcx
  42265b:	jge    0x4226a0
  42265d:	movzx  eax,WORD PTR [rbx]
  422660:	test   ax,ax
  422663:	je     0x4226a0
  422665:	lea    r8d,[rax+0x2400]
  42266c:	cmp    r8w,0x3ff
  422672:	jbe    0x4225f0
  422678:	test   r10d,r10d
  42267b:	jne    0x422775
  422681:	lea    r8d,[rax+0x2800]
  422688:	movzx  r10d,ax
  42268c:	cmp    r8w,0x3ff
  422692:	jbe    0x422647
  422694:	jmp    0x42260c
  422699:	nop    DWORD PTR [rax+0x0]
  4226a0:	test   r10d,r10d
  4226a3:	je     0x4226e0
  4226a5:	test   rsi,rsi
  4226a8:	jne    0x4226e0
  4226aa:	call   0x42d2a0
  4226af:	mov    rcx,QWORD PTR [rsp+0x90]
  4226b7:	lea    r9,[rip+0x370aa]        # 0x459768
  4226be:	mov    edx,eax
  4226c0:	mov    r8d,0x3
  4226c6:	call   0x430690
  4226cb:	xor    eax,eax
  4226cd:	add    rsp,0x28
  4226d1:	pop    rbx
  4226d2:	pop    rsi
  4226d3:	pop    rdi
  4226d4:	pop    rbp
  4226d5:	pop    r12
  4226d7:	pop    r13
  4226d9:	pop    r14
  4226db:	pop    r15
  4226dd:	ret    
  4226de:	xchg   ax,ax
  4226e0:	lea    ecx,[r12+0x1]
  4226e5:	movsxd r12,r12d
  4226e8:	mov    rbx,rbp
  4226eb:	movsxd rcx,ecx
  4226ee:	call   0x40e5c0
  4226f3:	add    r12,rax
  4226f6:	mov    r13,rax
  4226f9:	mov    r15,rax
  4226fc:	cmp    r12,rax
  4226ff:	jbe    0x422764
  422701:	xor    r14d,r14d
  422704:	jmp    0x42273c
  422706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422710:	add    r14d,0x3f2800
  422717:	shl    r14d,0xa
  42271b:	lea    ecx,[r14+rcx*1+0x2400]
  422723:	xor    r14d,r14d
  422726:	mov    rdx,r15
  422729:	add    rbx,0x2
  42272d:	call   0x421cd0
  422732:	cdqe   
  422734:	add    r15,rax
  422737:	cmp    r15,r12
  42273a:	jae    0x422764
  42273c:	movzx  ecx,WORD PTR [rbx]
  42273f:	lea    eax,[rcx+0x2400]
  422745:	cmp    ax,0x3ff
  422749:	jbe    0x422710
  42274b:	lea    eax,[rcx+0x2800]
  422751:	cmp    ax,0x3ff
  422755:	ja     0x422726
  422757:	add    rbx,0x2
  42275b:	cmp    r15,r12
  42275e:	movzx  r14d,cx
  422762:	jb     0x42273c
  422764:	test   rdi,rdi
  422767:	mov    BYTE PTR [r15],0x0
  42276b:	je     0x422799
  42276d:	sub    r15,r13
  422770:	mov    DWORD PTR [rdi],r15d
  422773:	jmp    0x422799
  422775:	call   0x42d2a0
  42277a:	mov    rcx,QWORD PTR [rsp+0x90]
  422782:	lea    r9,[rip+0x37067]        # 0x4597f0
  422789:	mov    r8d,0x1
  42278f:	mov    edx,eax
  422791:	xor    r13d,r13d
  422794:	call   0x430690
  422799:	test   rsi,rsi
  42279c:	je     0x4227cf
  42279e:	sub    rbx,rbp
  4227a1:	mov    rax,r13
  4227a4:	sar    rbx,1
  4227a7:	mov    DWORD PTR [rsi],ebx
  4227a9:	jmp    0x4226cd
  4227ae:	lea    r8,[rip+0x36fa6]        # 0x45975b
  4227b5:	lea    rdx,[rip+0x37154]        # 0x459910
  4227bc:	lea    rcx,[rip+0x36f93]        # 0x459756
  4227c3:	call   0x40fd20
  4227c8:	xor    eax,eax
  4227ca:	jmp    0x4226cd
  4227cf:	mov    rax,r13
  4227d2:	jmp    0x4226cd
  4227d7:	nop    WORD PTR [rax+rax*1+0x0]
  4227e0:	push   rbp
  4227e1:	push   rdi
  4227e2:	push   rsi
  4227e3:	push   rbx
  4227e4:	sub    rsp,0x38
  4227e8:	test   rcx,rcx
  4227eb:	mov    rbp,rcx
  4227ee:	mov    rdi,r8
  4227f1:	je     0x42297d
  4227f7:	mov    rbx,rcx
  4227fa:	xor    r10d,r10d
  4227fd:	xor    esi,esi
  4227ff:	movsxd r8,edx
  422802:	jmp    0x422817
  422804:	test   r10d,r10d
  422807:	je     0x422940
  42280d:	add    esi,0x4
  422810:	xor    r10d,r10d
  422813:	add    rbx,0x2
  422817:	test   edx,edx
  422819:	js     0x422829
  42281b:	mov    rax,rbx
  42281e:	sub    rax,rbp
  422821:	sar    rax,1
  422824:	cmp    rax,r8
  422827:	jge    0x422860
  422829:	movzx  eax,WORD PTR [rbx]
  42282c:	test   ax,ax
  42282f:	je     0x422860
  422831:	lea    r11d,[rax+0x2400]
  422838:	cmp    r11w,0x3ff
  42283e:	jbe    0x422804
  422840:	test   r10d,r10d
  422843:	jne    0x422940
  422849:	lea    ecx,[rax+0x2800]
  42284f:	movzx  r10d,ax
  422853:	cmp    cx,0x3ff
  422858:	jbe    0x422813
  42285a:	jmp    0x42280d
  42285c:	nop    DWORD PTR [rax+0x0]
  422860:	test   r10d,r10d
  422863:	je     0x4228a0
  422865:	test   rdi,rdi
  422868:	jne    0x4228a0
  42286a:	call   0x42d2a0
  42286f:	mov    rcx,QWORD PTR [rsp+0x80]
  422877:	lea    r9,[rip+0x36eea]        # 0x459768
  42287e:	mov    edx,eax
  422880:	mov    r8d,0x3
  422886:	call   0x430690
  42288b:	xor    eax,eax
  42288d:	add    rsp,0x38
  422891:	pop    rbx
  422892:	pop    rsi
  422893:	pop    rdi
  422894:	pop    rbp
  422895:	ret    
  422896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228a0:	lea    ecx,[rsi+0x4]
  4228a3:	movsxd rsi,esi
  4228a6:	mov    QWORD PTR [rsp+0x28],r9
  4228ab:	mov    rbx,rbp
  4228ae:	movsxd rcx,ecx
  4228b1:	call   0x40e5c0
  4228b6:	add    rsi,rax
  4228b9:	mov    rcx,rax
  4228bc:	mov    r9,QWORD PTR [rsp+0x28]
  4228c1:	cmp    rsi,rax
  4228c4:	jbe    0x422923
  4228c6:	xor    r8d,r8d
  4228c9:	jmp    0x4228f5
  4228cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4228d0:	add    r8d,0x3f2800
  4228d7:	shl    r8d,0xa
  4228db:	lea    edx,[r8+rdx*1+0x2400]
  4228e3:	xor    r8d,r8d
  4228e6:	mov    DWORD PTR [rcx],edx
  4228e8:	add    rcx,0x4
  4228ec:	add    rbx,0x2
  4228f0:	cmp    rcx,rsi
  4228f3:	jae    0x422923
  4228f5:	movzx  edx,WORD PTR [rbx]
  4228f8:	lea    r10d,[rdx+0x2400]
  4228ff:	cmp    r10w,0x3ff
  422905:	jbe    0x4228d0
  422907:	lea    r10d,[rdx+0x2800]
  42290e:	cmp    r10w,0x3ff
  422914:	ja     0x4228e6
  422916:	add    rbx,0x2
  42291a:	cmp    rcx,rsi
  42291d:	movzx  r8d,dx
  422921:	jb     0x4228f5
  422923:	test   r9,r9
  422926:	mov    DWORD PTR [rcx],0x0
  42292c:	je     0x422963
  42292e:	sub    rcx,rax
  422931:	shr    rcx,0x2
  422935:	mov    DWORD PTR [r9],ecx
  422938:	jmp    0x422963
  42293a:	nop    WORD PTR [rax+rax*1+0x0]
  422940:	call   0x42d2a0
  422945:	mov    rcx,QWORD PTR [rsp+0x80]
  42294d:	lea    r9,[rip+0x36e9c]        # 0x4597f0
  422954:	mov    edx,eax
  422956:	mov    r8d,0x1
  42295c:	call   0x430690
  422961:	xor    eax,eax
  422963:	test   rdi,rdi
  422966:	je     0x42288d
  42296c:	sub    rbx,rbp
  42296f:	sar    rbx,1
  422972:	mov    DWORD PTR [rdi],ebx
  422974:	add    rsp,0x38
  422978:	pop    rbx
  422979:	pop    rsi
  42297a:	pop    rdi
  42297b:	pop    rbp
  42297c:	ret    
  42297d:	lea    r8,[rip+0x36dd7]        # 0x45975b
  422984:	lea    rdx,[rip+0x36f75]        # 0x459900
  42298b:	lea    rcx,[rip+0x36dc4]        # 0x459756
  422992:	call   0x40fd20
  422997:	xor    eax,eax
  422999:	add    rsp,0x38
  42299d:	pop    rbx
  42299e:	pop    rsi
  42299f:	pop    rdi
  4229a0:	pop    rbp
  4229a1:	ret    
  4229a2:	nop    DWORD PTR [rax+0x0]
  4229a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229b0:	push   r15
  4229b2:	push   r14
  4229b4:	push   r13
  4229b6:	push   r12
  4229b8:	push   rbp
  4229b9:	push   rdi
  4229ba:	push   rsi
  4229bb:	push   rbx
  4229bc:	sub    rsp,0x28
  4229c0:	test   rcx,rcx
  4229c3:	mov    rsi,rcx
  4229c6:	mov    rdi,r8
  4229c9:	mov    rbp,r9
  4229cc:	je     0x422d12
  4229d2:	movsxd r9,edx
  4229d5:	xor    r12d,r12d
  4229d8:	mov    rbx,rcx
  4229db:	add    r9,rcx
  4229de:	test   edx,edx
  4229e0:	js     0x422a8b
  4229e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229f0:	mov    rcx,r9
  4229f3:	sub    rcx,rbx
  4229f6:	test   rcx,rcx
  4229f9:	jle    0x422b13
  4229ff:	movzx  r11d,BYTE PTR [rbx]
  422a03:	test   r11b,r11b
  422a06:	je     0x422b13
  422a0c:	cmp    r11b,0x7f
  422a10:	jbe    0x422a70
  422a12:	cmp    r11b,0xbf
  422a16:	movzx  eax,r11b
  422a1a:	ja     0x422aa0
  422a20:	call   0x42d2a0
  422a25:	lea    r9,[rip+0x36d6c]        # 0x459798
  422a2c:	mov    rcx,QWORD PTR [rsp+0x90]
  422a34:	mov    r8d,0x1
  422a3a:	mov    edx,eax
  422a3c:	xor    r13d,r13d
  422a3f:	call   0x430690
  422a44:	test   rdi,rdi
  422a47:	je     0x422bcc
  422a4d:	sub    rbx,rsi
  422a50:	mov    rax,r13
  422a53:	mov    DWORD PTR [rdi],ebx
  422a55:	add    rsp,0x28
  422a59:	pop    rbx
  422a5a:	pop    rsi
  422a5b:	pop    rdi
  422a5c:	pop    rbp
  422a5d:	pop    r12
  422a5f:	pop    r13
  422a61:	pop    r14
  422a63:	pop    r15
  422a65:	ret    
  422a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a70:	add    r12d,0x1
  422a74:	lea    r14,[rip+0x36f05]        # 0x459980
  422a7b:	movsx  rax,BYTE PTR [r14+r11*1]
  422a80:	add    rbx,rax
  422a83:	test   edx,edx
  422a85:	jns    0x4229f0
  422a8b:	movzx  r11d,BYTE PTR [rbx]
  422a8f:	test   r11b,r11b
  422a92:	je     0x422b13
  422a94:	mov    ecx,0x6
  422a99:	jmp    0x422a0c
  422a9e:	xchg   ax,ax
  422aa0:	cmp    eax,0xdf
  422aa5:	ja     0x422c92
  422aab:	mov    r8d,r11d
  422aae:	mov    r13d,0x80
  422ab4:	mov    eax,0x2
  422ab9:	and    r8d,0x1f
  422abd:	mov    r10d,eax
  422ac0:	cmp    rcx,r10
  422ac3:	jge    0x422bd4
  422ac9:	cmp    rcx,0x1
  422acd:	je     0x422bf6
  422ad3:	movzx  eax,BYTE PTR [rbx+0x1]
  422ad7:	and    eax,0xffffffc0
  422ada:	cmp    al,0x80
  422adc:	jne    0x422a20
  422ae2:	mov    edx,0x1
  422ae7:	jmp    0x422aff
  422ae9:	nop    DWORD PTR [rax+0x0]
  422af0:	movzx  eax,BYTE PTR [rbx+rax*1]
  422af4:	and    eax,0xffffffc0
  422af7:	cmp    al,0x80
  422af9:	jne    0x422a20
  422aff:	lea    eax,[rdx+0x1]
  422b02:	cmp    rcx,rax
  422b05:	mov    rdx,rax
  422b08:	jg     0x422af0
  422b0a:	test   rdi,rdi
  422b0d:	je     0x422bff
  422b13:	lea    ecx,[r12+0x1]
  422b18:	mov    edx,0x2
  422b1d:	xor    r15d,r15d
  422b20:	mov    rbx,rsi
  422b23:	lea    r14,[rip+0x36e56]        # 0x459980
  422b2a:	movsxd rcx,ecx
  422b2d:	call   0x40e7a0
  422b32:	mov    r13,rax
  422b35:	xor    eax,eax
  422b37:	test   r12d,r12d
  422b3a:	jne    0x422b5d
  422b3c:	jmp    0x422bae
  422b3e:	xchg   ax,ax
  422b40:	movsxd rax,r15d
  422b43:	add    r15d,0x1
  422b47:	mov    WORD PTR [r13+rax*2+0x0],dx
  422b4d:	movzx  eax,BYTE PTR [rbx]
  422b50:	movsx  rax,BYTE PTR [r14+rax*1]
  422b55:	add    rbx,rax
  422b58:	cmp    r15d,r12d
  422b5b:	jge    0x422ba8
  422b5d:	mov    rcx,rbx
  422b60:	call   0x4219f0
  422b65:	cmp    eax,0xffff
  422b6a:	mov    edx,eax
  422b6c:	jbe    0x422b40
  422b6e:	lea    eax,[rax-0x10000]
  422b74:	movsxd rcx,r15d
  422b77:	and    dx,0x3ff
  422b7c:	add    r15d,0x2
  422b80:	sub    dx,0x2400
  422b85:	shr    eax,0xa
  422b88:	mov    WORD PTR [r13+rcx*2+0x2],dx
  422b8e:	sub    ax,0x2800
  422b92:	mov    WORD PTR [r13+rcx*2+0x0],ax
  422b98:	movzx  eax,BYTE PTR [rbx]
  422b9b:	movsx  rax,BYTE PTR [r14+rax*1]
  422ba0:	add    rbx,rax
  422ba3:	cmp    r15d,r12d
  422ba6:	jl     0x422b5d
  422ba8:	movsxd rax,r15d
  422bab:	add    rax,rax
  422bae:	xor    edx,edx
  422bb0:	test   rbp,rbp
  422bb3:	mov    WORD PTR [r13+rax*1+0x0],dx
  422bb9:	je     0x422a44
  422bbf:	test   rdi,rdi
  422bc2:	mov    DWORD PTR [rbp+0x0],r12d
  422bc6:	jne    0x422a4d
  422bcc:	mov    rax,r13
  422bcf:	jmp    0x422a55
  422bd4:	sub    eax,0x2
  422bd7:	lea    r10,[rbx+0x1]
  422bdb:	lea    r14,[rbx+rax*1+0x2]
  422be0:	movzx  eax,BYTE PTR [r10]
  422be4:	mov    ecx,eax
  422be6:	and    ecx,0xffffffc0
  422be9:	cmp    cl,0x80
  422bec:	je     0x422c30
  422bee:	test   al,al
  422bf0:	jne    0x422a20
  422bf6:	test   rdi,rdi
  422bf9:	jne    0x422b13
  422bff:	call   0x42d2a0
  422c04:	mov    rcx,QWORD PTR [rsp+0x90]
  422c0c:	lea    r9,[rip+0x36b55]        # 0x459768
  422c13:	mov    edx,eax
  422c15:	mov    r8d,0x3
  422c1b:	call   0x430690
  422c20:	xor    eax,eax
  422c22:	jmp    0x422a55
  422c27:	nop    WORD PTR [rax+rax*1+0x0]
  422c30:	shl    r8d,0x6
  422c34:	and    eax,0x3f
  422c37:	add    r10,0x1
  422c3b:	or     r8d,eax
  422c3e:	cmp    r10,r14
  422c41:	jne    0x422be0
  422c43:	cmp    r8d,r13d
  422c46:	jb     0x422a20
  422c4c:	test   r8d,r8d
  422c4f:	js     0x422d55
  422c55:	cmp    r8d,0xd7ff
  422c5c:	jbe    0x422a70
  422c62:	cmp    r8d,0xdfff
  422c69:	jbe    0x422d33
  422c6f:	cmp    r8d,0xffff
  422c76:	jbe    0x422a70
  422c7c:	cmp    r8d,0x10ffff
  422c83:	ja     0x422d44
  422c89:	add    r12d,0x2
  422c8d:	jmp    0x422a74
  422c92:	cmp    eax,0xef
  422c97:	ja     0x422cb0
  422c99:	mov    r8d,r11d
  422c9c:	mov    r13d,0x800
  422ca2:	mov    eax,0x3
  422ca7:	and    r8d,0xf
  422cab:	jmp    0x422abd
  422cb0:	cmp    eax,0xf7
  422cb5:	ja     0x422cd0
  422cb7:	mov    r8d,r11d
  422cba:	mov    r13d,0x10000
  422cc0:	mov    eax,0x4
  422cc5:	and    r8d,0x7
  422cc9:	jmp    0x422abd
  422cce:	xchg   ax,ax
  422cd0:	cmp    eax,0xfb
  422cd5:	ja     0x422cf0
  422cd7:	mov    r8d,r11d
  422cda:	mov    r13d,0x200000
  422ce0:	mov    eax,0x5
  422ce5:	and    r8d,0x3
  422ce9:	jmp    0x422abd
  422cee:	xchg   ax,ax
  422cf0:	cmp    eax,0xfd
  422cf5:	ja     0x422a20
  422cfb:	mov    r8d,r11d
  422cfe:	mov    r13d,0x4000000
  422d04:	mov    eax,0x6
  422d09:	and    r8d,0x1
  422d0d:	jmp    0x422abd
  422d12:	lea    r8,[rip+0x36a42]        # 0x45975b
  422d19:	lea    rdx,[rip+0x36bd0]        # 0x4598f0
  422d20:	lea    rcx,[rip+0x36a2f]        # 0x459756
  422d27:	call   0x40fd20
  422d2c:	xor    eax,eax
  422d2e:	jmp    0x422a55
  422d33:	call   0x42d2a0
  422d38:	lea    r9,[rip+0x36ab1]        # 0x4597f0
  422d3f:	jmp    0x422a2c
  422d44:	call   0x42d2a0
  422d49:	lea    r9,[rip+0x36ac8]        # 0x459818
  422d50:	jmp    0x422a2c
  422d55:	cmp    r8d,0xfffffffe
  422d59:	je     0x422bf6
  422d5f:	jmp    0x422a20
  422d64:	xchg   ax,ax
  422d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d70:	push   r12
  422d72:	push   rbp
  422d73:	push   rdi
  422d74:	push   rsi
  422d75:	push   rbx
  422d76:	sub    rsp,0x20
  422d7a:	mov    eax,edx
  422d7c:	mov    r12,rcx
  422d7f:	mov    rdi,r8
  422d82:	shr    eax,0x1f
  422d85:	test   edx,edx
  422d87:	mov    rbp,r9
  422d8a:	mov    ecx,eax
  422d8c:	je     0x422ec2
  422d92:	mov    eax,DWORD PTR [r12]
  422d96:	test   eax,eax
  422d98:	je     0x422ec2
  422d9e:	lea    r10,[r12+0x4]
  422da3:	xor    ebx,ebx
  422da5:	xor    esi,esi
  422da7:	jmp    0x422de7
  422da9:	nop    DWORD PTR [rax+0x0]
  422db0:	cmp    eax,0xdfff
  422db5:	jbe    0x422e92
  422dbb:	cmp    eax,0xffff
  422dc0:	jbe    0x422dee
  422dc2:	cmp    eax,0x10ffff
  422dc7:	ja     0x422eb4
  422dcd:	add    esi,0x2
  422dd0:	add    ebx,0x1
  422dd3:	cmp    edx,ebx
  422dd5:	jg     0x422ddb
  422dd7:	test   cl,cl
  422dd9:	je     0x422df3
  422ddb:	add    r10,0x4
  422ddf:	mov    eax,DWORD PTR [r10-0x4]
  422de3:	test   eax,eax
  422de5:	je     0x422df3
  422de7:	cmp    eax,0xd7ff
  422dec:	ja     0x422db0
  422dee:	add    esi,0x1
  422df1:	jmp    0x422dd0
  422df3:	lea    ecx,[rsi+0x1]
  422df6:	mov    edx,0x2
  422dfb:	xor    ebx,ebx
  422dfd:	movsxd rcx,ecx
  422e00:	call   0x40e7a0
  422e05:	mov    rcx,r12
  422e08:	xor    r10d,r10d
  422e0b:	jmp    0x422e28
  422e0d:	nop    DWORD PTR [rax]
  422e10:	movsxd r8,r10d
  422e13:	add    r10d,0x1
  422e17:	add    ebx,0x1
  422e1a:	add    rcx,0x4
  422e1e:	cmp    r10d,esi
  422e21:	mov    WORD PTR [rax+r8*2],dx
  422e26:	jge    0x422e6b
  422e28:	mov    edx,DWORD PTR [rcx]
  422e2a:	cmp    edx,0xffff
  422e30:	jbe    0x422e10
  422e32:	lea    r8d,[rdx-0x10000]
  422e39:	movsxd r9,r10d
  422e3c:	and    dx,0x3ff
  422e41:	add    r10d,0x2
  422e45:	sub    dx,0x2400
  422e4a:	add    ebx,0x1
  422e4d:	shr    r8d,0xa
  422e51:	add    rcx,0x4
  422e55:	mov    WORD PTR [rax+r9*2+0x2],dx
  422e5b:	sub    r8w,0x2800
  422e61:	cmp    r10d,esi
  422e64:	mov    WORD PTR [rax+r9*2],r8w
  422e69:	jl     0x422e28
  422e6b:	movsxd r10,r10d
  422e6e:	add    r10,r10
  422e71:	xor    edx,edx
  422e73:	test   rbp,rbp
  422e76:	mov    WORD PTR [rax+r10*1],dx
  422e7b:	je     0x422e80
  422e7d:	mov    DWORD PTR [rbp+0x0],esi
  422e80:	test   rdi,rdi
  422e83:	je     0x422e87
  422e85:	mov    DWORD PTR [rdi],ebx
  422e87:	add    rsp,0x20
  422e8b:	pop    rbx
  422e8c:	pop    rsi
  422e8d:	pop    rdi
  422e8e:	pop    rbp
  422e8f:	pop    r12
  422e91:	ret    
  422e92:	call   0x42d2a0
  422e97:	lea    r9,[rip+0x36952]        # 0x4597f0
  422e9e:	mov    rcx,QWORD PTR [rsp+0x70]
  422ea3:	mov    edx,eax
  422ea5:	mov    r8d,0x1
  422eab:	call   0x430690
  422eb0:	xor    eax,eax
  422eb2:	jmp    0x422e80
  422eb4:	call   0x42d2a0
  422eb9:	lea    r9,[rip+0x36958]        # 0x459818
  422ec0:	jmp    0x422e9e
  422ec2:	mov    edx,0x2
  422ec7:	mov    ecx,0x1
  422ecc:	xor    esi,esi
  422ece:	call   0x40e7a0
  422ed3:	xor    ebx,ebx
  422ed5:	xor    r10d,r10d
  422ed8:	jmp    0x422e71
  422eda:	nop    WORD PTR [rax+rax*1+0x0]
  422ee0:	push   rsi
  422ee1:	push   rbx
  422ee2:	test   rdx,rdx
  422ee5:	js     0x423090
  422eeb:	je     0x4231ed
  422ef1:	movzx  r9d,BYTE PTR [rcx]
  422ef5:	test   r9b,r9b
  422ef8:	je     0x4231ed
  422efe:	mov    rbx,rcx
  422f01:	mov    rax,rcx
  422f04:	jmp    0x422f34
  422f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f10:	lea    rax,[r10+0x1]
  422f14:	mov    r9,rax
  422f17:	mov    rbx,rax
  422f1a:	sub    r9,rcx
  422f1d:	cmp    rdx,r9
  422f20:	jle    0x423020
  422f26:	movzx  r9d,BYTE PTR [r10+0x1]
  422f2b:	test   r9b,r9b
  422f2e:	je     0x423020
  422f34:	test   r9b,r9b
  422f37:	movzx  r11d,BYTE PTR [rax]
  422f3b:	mov    r10,rax
  422f3e:	jns    0x422f10
  422f40:	mov    r9d,r11d
  422f43:	and    r9d,0xffffffe0
  422f47:	cmp    r9b,0xc0
  422f4b:	je     0x423040
  422f51:	mov    r9d,r11d
  422f54:	and    r9d,0xfffffff0
  422f58:	cmp    r9b,0xe0
  422f5c:	je     0x423070
  422f62:	mov    r9d,r11d
  422f65:	and    r9d,0xfffffff8
  422f69:	cmp    r9b,0xf0
  422f6d:	jne    0x423020
  422f73:	mov    r9,rcx
  422f76:	sub    r9,rbx
  422f79:	add    r9,rdx
  422f7c:	cmp    r9,0x3
  422f80:	jle    0x423020
  422f86:	movzx  r9d,BYTE PTR [rax+0x1]
  422f8b:	and    r11d,0x7
  422f8f:	lea    r10,[rax+0x1]
  422f93:	mov    ebx,r9d
  422f96:	and    ebx,0xffffffc0
  422f99:	cmp    bl,0x80
  422f9c:	jne    0x423020
  422fa2:	shl    r11d,0x6
  422fa6:	and    r9d,0x3f
  422faa:	mov    ebx,0x10000
  422faf:	or     r11d,r9d
  422fb2:	movzx  r9d,BYTE PTR [r10+0x1]
  422fb7:	mov    esi,r9d
  422fba:	and    esi,0xffffffc0
  422fbd:	cmp    sil,0x80
  422fc1:	jne    0x423020
  422fc3:	and    r9d,0x3f
  422fc7:	shl    r11d,0x6
  422fcb:	or     r11d,r9d
  422fce:	movzx  r9d,BYTE PTR [r10+0x2]
  422fd3:	mov    esi,r9d
  422fd6:	and    esi,0xffffffc0
  422fd9:	cmp    sil,0x80
  422fdd:	jne    0x423020
  422fdf:	shl    r11d,0x6
  422fe3:	and    r9d,0x3f
  422fe7:	or     r11d,r9d
  422fea:	cmp    r11d,ebx
  422fed:	jb     0x423020
  422fef:	cmp    r11d,0x10ffff
  422ff6:	ja     0x423020
  422ff8:	mov    r9d,r11d
  422ffb:	and    r9d,0xfffff800
  423002:	cmp    r9d,0xd800
  423009:	je     0x423020
  42300b:	lea    r9d,[r11-0xfdd0]
  423012:	cmp    r9d,0x1f
  423016:	ja     0x4231b5
  42301c:	nop    DWORD PTR [rax+0x0]
  423020:	test   r8,r8
  423023:	je     0x423028
  423025:	mov    QWORD PTR [r8],rax
  423028:	add    rcx,rdx
  42302b:	cmp    rax,rcx
  42302e:	sete   al
  423031:	movzx  eax,al
  423034:	pop    rbx
  423035:	pop    rsi
  423036:	ret    
  423037:	nop    WORD PTR [rax+rax*1+0x0]
  423040:	mov    r9,rcx
  423043:	sub    r9,rbx
  423046:	add    r9,rdx
  423049:	cmp    r9,0x1
  42304d:	jle    0x423020
  42304f:	and    r11d,0x1e
  423053:	je     0x423020
  423055:	movzx  r9d,BYTE PTR [rax+0x1]
  42305a:	and    r9d,0xffffffc0
  42305e:	cmp    r9b,0x80
  423062:	jne    0x423020
  423064:	add    r10,0x1
  423068:	jmp    0x422f10
  42306d:	nop    DWORD PTR [rax]
  423070:	mov    r9,rcx
  423073:	sub    r9,rbx
  423076:	add    r9,rdx
  423079:	cmp    r9,0x2
  42307d:	jle    0x423020
  42307f:	and    r11d,0xf
  423083:	mov    r10,rax
  423086:	mov    ebx,0x800
  42308b:	jmp    0x422fb2
  423090:	movzx  edx,BYTE PTR [rcx]
  423093:	test   dl,dl
  423095:	jne    0x4230b0
  423097:	jmp    0x4231a2
  42309c:	nop    DWORD PTR [rax+0x0]
  4230a0:	movzx  edx,BYTE PTR [rax+0x1]
  4230a4:	lea    rcx,[rax+0x1]
  4230a8:	test   dl,dl
  4230aa:	je     0x4231a2
  4230b0:	test   dl,dl
  4230b2:	movzx  r9d,BYTE PTR [rcx]
  4230b6:	mov    rax,rcx
  4230b9:	jns    0x4230a0
  4230bb:	mov    edx,r9d
  4230be:	and    edx,0xffffffe0
  4230c1:	cmp    dl,0xc0
  4230c4:	je     0x423190
  4230ca:	mov    eax,r9d
  4230cd:	and    eax,0xfffffff0
  4230d0:	cmp    al,0xe0
  4230d2:	je     0x4231d2
  4230d8:	mov    eax,r9d
  4230db:	and    eax,0xfffffff8
  4230de:	cmp    al,0xf0
  4230e0:	jne    0x4231a2
  4230e6:	movzx  edx,BYTE PTR [rcx+0x1]
  4230ea:	and    r9d,0x7
  4230ee:	lea    rax,[rcx+0x1]
  4230f2:	mov    r10d,edx
  4230f5:	and    r10d,0xffffffc0
  4230f9:	cmp    r10b,0x80
  4230fd:	jne    0x4231a2
  423103:	shl    r9d,0x6
  423107:	and    edx,0x3f
  42310a:	mov    r11d,0x10000
  423110:	or     r9d,edx
  423113:	movzx  edx,BYTE PTR [rax+0x1]
  423117:	mov    r10d,edx
  42311a:	and    r10d,0xffffffc0
  42311e:	cmp    r10b,0x80
  423122:	jne    0x4231a2
  423124:	and    edx,0x3f
  423127:	shl    r9d,0x6
  42312b:	or     r9d,edx
  42312e:	movzx  edx,BYTE PTR [rax+0x2]
  423132:	mov    r10d,edx
  423135:	and    r10d,0xffffffc0
  423139:	cmp    r10b,0x80
  42313d:	jne    0x4231a2
  42313f:	shl    r9d,0x6
  423143:	and    edx,0x3f
  423146:	or     r9d,edx
  423149:	cmp    r9d,r11d
  42314c:	jb     0x4231a2
  42314e:	cmp    r9d,0x10ffff
  423155:	ja     0x4231a2
  423157:	mov    edx,r9d
  42315a:	and    edx,0xfffff800
  423160:	cmp    edx,0xd800
  423166:	je     0x4231a2
  423168:	lea    edx,[r9-0xfdd0]
  42316f:	cmp    edx,0x1f
  423172:	jbe    0x4231a2
  423174:	and    r9d,0xfffe
  42317b:	cmp    r9d,0xfffe
  423182:	je     0x4231a2
  423184:	add    rax,0x2
  423188:	jmp    0x4230a0
  42318d:	nop    DWORD PTR [rax]
  423190:	and    r9d,0x1e
  423194:	je     0x4231a2
  423196:	movzx  edx,BYTE PTR [rcx+0x1]
  42319a:	and    edx,0xffffffc0
  42319d:	cmp    dl,0x80
  4231a0:	je     0x4231e4
  4231a2:	test   r8,r8
  4231a5:	je     0x4231aa
  4231a7:	mov    QWORD PTR [r8],rcx
  4231aa:	xor    eax,eax
  4231ac:	cmp    BYTE PTR [rcx],0x0
  4231af:	sete   al
  4231b2:	pop    rbx
  4231b3:	pop    rsi
  4231b4:	ret    
  4231b5:	and    r11d,0xfffe
  4231bc:	cmp    r11d,0xfffe
  4231c3:	je     0x423020
  4231c9:	add    r10,0x2
  4231cd:	jmp    0x422f10
  4231d2:	and    r9d,0xf
  4231d6:	mov    rax,rcx
  4231d9:	mov    r11d,0x800
  4231df:	jmp    0x423113
  4231e4:	add    rax,0x1
  4231e8:	jmp    0x4230a0
  4231ed:	mov    rax,rcx
  4231f0:	jmp    0x423020
  4231f5:	nop
  4231f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423200:	xor    eax,eax
  423202:	cmp    ecx,0x10ffff
  423208:	ja     0x423240
  42320a:	mov    edx,ecx
  42320c:	and    edx,0xfffff800
  423212:	cmp    edx,0xd800
  423218:	je     0x423240
  42321a:	lea    edx,[rcx-0xfdd0]
  423220:	cmp    edx,0x1f
  423223:	jbe    0x423240
  423225:	and    ecx,0xfffe
  42322b:	xor    eax,eax
  42322d:	cmp    ecx,0xfffe
  423233:	setne  al
  423236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423240:	repz ret 
  423242:	nop    DWORD PTR [rax+0x0]
  423246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423250:	push   rsi
  423251:	push   rbx
  423252:	sub    rsp,0x28
  423256:	test   rdx,rdx
  423259:	mov    rbx,rcx
  42325c:	mov    rsi,rdx
  42325f:	js     0x4232c4
  423261:	lea    rcx,[rsi+0x1]
  423265:	call   0x40e5c0
  42326a:	add    rsi,rax
  42326d:	lea    rcx,[rip+0x3670c]        # 0x459980
  423274:	cmp    rax,rsi
  423277:	mov    r10,rsi
  42327a:	jae    0x4232ba
  42327c:	nop    DWORD PTR [rax+0x0]
  423280:	movzx  edx,BYTE PTR [rbx]
  423283:	movsx  rdx,BYTE PTR [rcx+rdx*1]
  423288:	sub    r10,rdx
  42328b:	test   dl,dl
  42328d:	mov    r9,rdx
  423290:	je     0x4232b5
  423292:	sub    r9d,0x1
  423296:	xor    edx,edx
  423298:	movzx  r9d,r9b
  42329c:	add    r9,0x1
  4232a0:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  4232a5:	mov    BYTE PTR [r10+rdx*1],r8b
  4232a9:	add    rdx,0x1
  4232ad:	cmp    rdx,r9
  4232b0:	jne    0x4232a0
  4232b2:	add    rbx,rdx
  4232b5:	cmp    rax,r10
  4232b8:	jb     0x423280
  4232ba:	mov    BYTE PTR [rsi],0x0
  4232bd:	add    rsp,0x28
  4232c1:	pop    rbx
  4232c2:	pop    rsi
  4232c3:	ret    
  4232c4:	call   0x438788
  4232c9:	mov    rsi,rax
  4232cc:	jmp    0x423261
  4232ce:	xchg   ax,ax
  4232d0:	push   r14
  4232d2:	push   r13
  4232d4:	push   r12
  4232d6:	push   rbp
  4232d7:	push   rdi
  4232d8:	push   rsi
  4232d9:	push   rbx
  4232da:	sub    rsp,0x40
  4232de:	test   rcx,rcx
  4232e1:	mov    r14,rcx
  4232e4:	je     0x4233d0
  4232ea:	call   0x438788
  4232ef:	xor    ebp,ebp
  4232f1:	test   eax,eax
  4232f3:	mov    edi,eax
  4232f5:	mov    rsi,r14
  4232f8:	lea    r13,[rsp+0x38]
  4232fd:	jne    0x423330
  4232ff:	jmp    0x4233fb
  423304:	movsxd r8,ebx
  423307:	mov    rdx,rsi
  42330a:	mov    rcx,rbp
  42330d:	call   0x41ae00
  423312:	lea    rdx,[rip+0x36521]        # 0x45983a
  423319:	mov    rcx,rbp
  42331c:	not    ebx
  42331e:	call   0x41ace0
  423323:	mov    rax,QWORD PTR [rsp+0x38]
  423328:	add    edi,ebx
  42332a:	lea    rsi,[rax+0x1]
  42332e:	je     0x423360
  423330:	movsxd r12,edi
  423333:	mov    r8,r13
  423336:	mov    rcx,rsi
  423339:	mov    rdx,r12
  42333c:	call   0x422ee0
  423341:	test   eax,eax
  423343:	jne    0x423360
  423345:	mov    rbx,QWORD PTR [rsp+0x38]
  42334a:	sub    rbx,rsi
  42334d:	test   rbp,rbp
  423350:	jne    0x423304
  423352:	mov    rcx,r12
  423355:	call   0x41a880
  42335a:	mov    rbp,rax
  42335d:	jmp    0x423304
  42335f:	nop
  423360:	test   rbp,rbp
  423363:	je     0x4233fb
  423369:	mov    rdx,rsi
  42336c:	mov    rcx,rbp
  42336f:	call   0x41ace0
  423374:	mov    rcx,QWORD PTR [rbp+0x0]
  423378:	xor    r8d,r8d
  42337b:	mov    rdx,0xffffffffffffffff
  423382:	call   0x422ee0
  423387:	test   eax,eax
  423389:	je     0x4233a4
  42338b:	xor    edx,edx
  42338d:	mov    rcx,rbp
  423390:	call   0x41a8e0
  423395:	add    rsp,0x40
  423399:	pop    rbx
  42339a:	pop    rsi
  42339b:	pop    rdi
  42339c:	pop    rbp
  42339d:	pop    r12
  42339f:	pop    r13
  4233a1:	pop    r14
  4233a3:	ret    
  4233a4:	lea    rax,[rip+0x364fd]        # 0x4598a8
  4233ab:	lea    r9,[rip+0x3651e]        # 0x4598d0
  4233b2:	lea    rdx,[rip+0x36497]        # 0x459850
  4233b9:	lea    rcx,[rip+0x36396]        # 0x459756
  4233c0:	mov    r8d,0x6d0
  4233c6:	mov    QWORD PTR [rsp+0x20],rax
  4233cb:	call   0x41e680
  4233d0:	lea    r8,[rip+0x36467]        # 0x45983e
  4233d7:	lea    rdx,[rip+0x364f2]        # 0x4598d0
  4233de:	lea    rcx,[rip+0x36371]        # 0x459756
  4233e5:	call   0x40fd20
  4233ea:	xor    eax,eax
  4233ec:	add    rsp,0x40
  4233f0:	pop    rbx
  4233f1:	pop    rsi
  4233f2:	pop    rdi
  4233f3:	pop    rbp
  4233f4:	pop    r12
  4233f6:	pop    r13
  4233f8:	pop    r14
  4233fa:	ret    
  4233fb:	mov    rcx,r14
  4233fe:	call   0x4182b0
  423403:	jmp    0x423395
  423405:	nop
  423406:	nop
  423407:	nop
  423408:	nop
  423409:	nop
  42340a:	nop
  42340b:	nop
  42340c:	nop
  42340d:	nop
  42340e:	nop
  42340f:	nop
  423410:	push   rbx
  423411:	mov    r10d,0x92492493
  423417:	sub    ecx,0xac00
  42341d:	mov    r11,rdx
  423420:	mov    eax,ecx
  423422:	mov    ebx,ecx
  423424:	imul   r10d
  423427:	sar    ebx,0x1f
  42342a:	mov    eax,ecx
  42342c:	lea    r9d,[rdx+rcx*1]
  423430:	sar    r9d,0x4
  423434:	sub    r9d,ebx
  423437:	imul   r9d,r9d,0x1c
  42343b:	sub    eax,r9d
  42343e:	test   r11,r11
  423441:	mov    r9d,eax
  423444:	je     0x4234a0
  423446:	mov    eax,ecx
  423448:	mov    edx,0x6f74ae27
  42344d:	imul   edx
  42344f:	sar    edx,0x8
  423452:	mov    eax,edx
  423454:	sub    eax,ebx
  423456:	lea    edx,[rax+0x1100]
  42345c:	imul   eax,eax,0x24c
  423462:	mov    DWORD PTR [r11],edx
  423465:	sub    ecx,eax
  423467:	mov    eax,ecx
  423469:	imul   r10d
  42346c:	lea    r10d,[rdx+rcx*1]
  423470:	sar    ecx,0x1f
  423473:	sar    r10d,0x4
  423477:	sub    r10d,ecx
  42347a:	add    r10d,0x1161
  423481:	test   r9d,r9d
  423484:	mov    DWORD PTR [r11+0x4],r10d
  423488:	je     0x4234a4
  42348a:	add    r9d,0x11a7
  423491:	mov    DWORD PTR [r11+0x8],r9d
  423495:	mov    QWORD PTR [r8],0x3
  42349c:	pop    rbx
  42349d:	ret    
  42349e:	xchg   ax,ax
  4234a0:	test   eax,eax
  4234a2:	jne    0x423495
  4234a4:	mov    QWORD PTR [r8],0x2
  4234ab:	pop    rbx
  4234ac:	ret    
  4234ad:	nop    DWORD PTR [rax]
  4234b0:	push   rsi
  4234b1:	push   rbx
  4234b2:	lea    eax,[rcx-0xa0]
  4234b8:	cmp    eax,0x2f97d
  4234bd:	ja     0x423532
  4234bf:	mov    r10d,0x15b7
  4234c5:	xor    r9d,r9d
  4234c8:	lea    rbx,[rip+0x45c31]        # 0x469100
  4234cf:	jmp    0x4234e1
  4234d1:	cmp    eax,r9d
  4234d4:	je     0x423532
  4234d6:	cmp    ecx,r8d
  4234d9:	cmovbe r10d,eax
  4234dd:	cmova  r9d,eax
  4234e1:	lea    eax,[r9+r10*1]
  4234e5:	lea    rsi,[rip+0x45c14]        # 0x469100
  4234ec:	mov    r8d,eax
  4234ef:	shr    r8d,0x1f
  4234f3:	add    eax,r8d
  4234f6:	sar    eax,1
  4234f8:	movsxd r11,eax
  4234fb:	mov    r8d,DWORD PTR [rbx+r11*8]
  4234ff:	cmp    r8d,ecx
  423502:	jne    0x4234d1
  423504:	test   edx,edx
  423506:	je     0x423525
  423508:	movzx  eax,WORD PTR [rsi+r11*8+0x6]
  42350e:	cmp    eax,0xffff
  423513:	je     0x423537
  423515:	movsxd rdx,eax
  423518:	lea    rax,[rip+0x416e1]        # 0x464c00
  42351f:	add    rax,rdx
  423522:	pop    rbx
  423523:	pop    rsi
  423524:	ret    
  423525:	movzx  eax,WORD PTR [rsi+r11*8+0x4]
  42352b:	cmp    eax,0xffff
  423530:	jne    0x423515
  423532:	xor    eax,eax
  423534:	pop    rbx
  423535:	pop    rsi
  423536:	ret    
  423537:	movzx  eax,WORD PTR [rsi+r11*8+0x4]
  42353d:	jmp    0x423515
  42353f:	nop
  423540:	lea    r9d,[rcx-0x1100]
  423547:	mov    r11d,edx
  42354a:	lea    r10d,[rcx-0xac00]
  423551:	lea    eax,[rdx-0x1161]
  423557:	cmp    r9d,0x12
  42355b:	ja     0x423580
  42355d:	cmp    eax,0x14
  423560:	ja     0x423580
  423562:	lea    edx,[r9+r9*4]
  423566:	lea    edx,[r9+rdx*4]
  42356a:	add    eax,edx
  42356c:	imul   eax,eax,0x1c
  42356f:	add    eax,0xac00
  423574:	mov    DWORD PTR [r8],eax
  423577:	mov    eax,0x1
  42357c:	ret    
  42357d:	nop    DWORD PTR [rax]
  423580:	xor    eax,eax
  423582:	cmp    r10d,0x2ba3
  423589:	ja     0x4235d2
  42358b:	mov    r9d,0x92492493
  423591:	mov    eax,r10d
  423594:	imul   r9d
  423597:	lea    eax,[rdx+r10*1]
  42359b:	mov    edx,r10d
  42359e:	sar    edx,0x1f
  4235a1:	sar    eax,0x4
  4235a4:	sub    eax,edx
  4235a6:	imul   r9d,eax,0x1c
  4235aa:	mov    eax,r10d
  4235ad:	sub    eax,r9d
  4235b0:	jne    0x4235d0
  4235b2:	lea    edx,[r11-0x11a8]
  4235b9:	cmp    edx,0x1a
  4235bc:	ja     0x4235d2
  4235be:	lea    eax,[rcx+r11*1-0x11a7]
  4235c6:	mov    DWORD PTR [r8],eax
  4235c9:	mov    eax,0x1
  4235ce:	ret    
  4235cf:	nop
  4235d0:	xor    eax,eax
  4235d2:	repz ret 
  4235d4:	xchg   ax,ax
  4235d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235e0:	mov    eax,ecx
  4235e2:	shr    eax,0x8
  4235e5:	cmp    eax,0x110
  4235ea:	ja     0x423650
  4235ec:	lea    r9,[rip+0x38f8d]        # 0x45c580
  4235f3:	movsx  r9,WORD PTR [r9+rax*2]
  4235f8:	cmp    r9w,0x10ff
  4235fe:	jg     0x4236d0
  423604:	movzx  eax,cl
  423607:	shl    r9,0x8
  42360b:	add    r9,rax
  42360e:	lea    rax,[rip+0x391ab]        # 0x45c7c0
  423615:	movzx  r9d,WORD PTR [rax+r9*2]
  42361a:	lea    eax,[r9-0x93]
  423621:	cmp    ax,0xdf
  423625:	ja     0x423653
  423627:	movzx  r9d,r9w
  42362b:	lea    rcx,[rip+0x3884e]        # 0x45be80
  423632:	xor    eax,eax
  423634:	sub    r9d,0x93
  42363b:	movsxd r9,r9d
  42363e:	cmp    DWORD PTR [rcx+r9*8],edx
  423642:	je     0x4236e0
  423648:	repz ret 
  42364a:	nop    WORD PTR [rax+rax*1+0x0]
  423650:	xor    r9d,r9d
  423653:	mov    r10d,edx
  423656:	xor    eax,eax
  423658:	shr    r10d,0x8
  42365c:	cmp    r10d,0x110
  423663:	ja     0x423648
  423665:	lea    rax,[rip+0x38f14]        # 0x45c580
  42366c:	movzx  eax,WORD PTR [rax+r10*2]
  423671:	cmp    ax,0x10ff
  423675:	jg     0x4236f0
  423677:	movzx  r10d,dl
  42367b:	movsx  rdx,ax
  42367f:	lea    rax,[rip+0x3913a]        # 0x45c7c0
  423686:	shl    rdx,0x8
  42368a:	add    rdx,r10
  42368d:	movzx  edx,WORD PTR [rax+rdx*2]
  423691:	cmp    dx,0x191
  423696:	jbe    0x4236f8
  423698:	movzx  edx,dx
  42369b:	lea    r9,[rip+0x3875e]        # 0x45be00
  4236a2:	xor    eax,eax
  4236a4:	sub    edx,0x192
  4236aa:	movsxd rdx,edx
  4236ad:	movzx  r10d,WORD PTR [r9+rdx*4]
  4236b2:	cmp    ecx,r10d
  4236b5:	jne    0x423648
  4236b7:	movzx  eax,WORD PTR [r9+rdx*4+0x2]
  4236bd:	mov    DWORD PTR [r8],eax
  4236c0:	mov    eax,0x1
  4236c5:	ret    
  4236c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4236d0:	sub    r9w,0x1100
  4236d6:	jmp    0x42361a
  4236db:	nop    DWORD PTR [rax+rax*1+0x0]
  4236e0:	mov    eax,DWORD PTR [rcx+r9*8+0x4]
  4236e5:	mov    DWORD PTR [r8],eax
  4236e8:	mov    eax,0x1
  4236ed:	ret    
  4236ee:	xchg   ax,ax
  4236f0:	lea    edx,[rax-0x1100]
  4236f6:	jmp    0x423691
  4236f8:	lea    ecx,[r9-0x1]
  4236fc:	xor    eax,eax
  4236fe:	cmp    cx,0x91
  423703:	ja     0x423648
  423709:	lea    ecx,[rdx-0x173]
  42370f:	cmp    cx,0x1e
  423713:	ja     0x423648
  423719:	movzx  r9d,r9w
  42371d:	movzx  edx,dx
  423720:	sub    r9d,0x1
  423724:	sub    edx,0x173
  42372a:	movsxd r9,r9d
  42372d:	movsxd rcx,edx
  423730:	mov    rdx,r9
  423733:	shl    rdx,0x5
  423737:	sub    rdx,r9
  42373a:	add    rdx,rcx
  42373d:	lea    rcx,[rip+0x3633c]        # 0x459a80
  423744:	movzx  edx,WORD PTR [rcx+rdx*2]
  423748:	test   edx,edx
  42374a:	je     0x423648
  423750:	mov    DWORD PTR [r8],edx
  423753:	mov    al,0x1
  423755:	ret    
  423756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423760:	cmp    ecx,0x2faff
  423766:	ja     0x423785
  423768:	mov    eax,ecx
  42376a:	lea    rdx,[rip+0x50d4f]        # 0x4744c0
  423771:	shr    eax,0x8
  423774:	movsx  rax,WORD PTR [rdx+rax*2]
  423779:	cmp    ax,0x10ff
  42377d:	jle    0x4237aa
  42377f:	sub    eax,0x1100
  423784:	ret    
  423785:	lea    edx,[rcx-0xe0000]
  42378b:	xor    eax,eax
  42378d:	cmp    edx,0x2ffff
  423793:	ja     0x4237bf
  423795:	lea    rax,[rip+0x50724]        # 0x473ec0
  42379c:	shr    edx,0x8
  42379f:	movsx  rax,WORD PTR [rax+rdx*2]
  4237a4:	cmp    ax,0x10ff
  4237a8:	jg     0x42377f
  4237aa:	movzx  ecx,cl
  4237ad:	shl    rax,0x8
  4237b1:	lea    rdx,[rip+0x51308]        # 0x474ac0
  4237b8:	add    rax,rcx
  4237bb:	movzx  eax,BYTE PTR [rdx+rax*1]
  4237bf:	repz ret 
  4237c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4237c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4237d0:	push   rbp
  4237d1:	push   rdi
  4237d2:	push   rsi
  4237d3:	push   rbx
  4237d4:	lea    rbx,[rip+0x512e5]        # 0x474ac0
  4237db:	lea    rdi,[rdx-0x1]
  4237df:	nop
  4237e0:	mov    eax,DWORD PTR [rcx]
  4237e2:	cmp    eax,0x2faff
  4237e7:	ja     0x423987
  4237ed:	mov    edx,eax
  4237ef:	lea    r8,[rip+0x50cca]        # 0x4744c0
  4237f6:	shr    edx,0x8
  4237f9:	movsx  rdx,WORD PTR [r8+rdx*2]
  4237fe:	cmp    dx,0x10ff
  423803:	jg     0x4239b5
  423809:	movzx  eax,al
  42380c:	shl    rdx,0x8
  423810:	add    rax,rdx
  423813:	movzx  esi,BYTE PTR [rbx+rax*1]
  423817:	xor    r10d,r10d
  42381a:	xor    r11d,r11d
  42381d:	nop    DWORD PTR [rax]
  423820:	cmp    r11,rdi
  423823:	je     0x42395c
  423829:	add    r11,0x1
  42382d:	mov    eax,DWORD PTR [rcx+r11*4]
  423831:	cmp    eax,0x2faff
  423836:	ja     0x423910
  42383c:	mov    edx,eax
  42383e:	lea    r8,[rip+0x50c7b]        # 0x4744c0
  423845:	shr    edx,0x8
  423848:	movsx  r9,WORD PTR [r8+rdx*2]
  42384d:	cmp    r9w,0x10ff
  423853:	jg     0x423970
  423859:	movzx  eax,al
  42385c:	shl    r9,0x8
  423860:	add    r9,rax
  423863:	movzx  r9d,BYTE PTR [rbx+r9*1]
  423868:	cmp    esi,r9d
  42386b:	jle    0x423950
  423871:	test   r9d,r9d
  423874:	je     0x423950
  42387a:	mov    rax,r11
  42387d:	jmp    0x4238c4
  42387f:	nop
  423880:	mov    edx,r8d
  423883:	lea    rbp,[rip+0x50c36]        # 0x4744c0
  42388a:	shr    edx,0x8
  42388d:	movsx  rdx,WORD PTR [rbp+rdx*2+0x0]
  423893:	cmp    dx,0x10ff
  423898:	jle    0x4238fc
  42389a:	sub    edx,0x1100
  4238a0:	cmp    r9d,edx
  4238a3:	jge    0x423820
  4238a9:	mov    edx,DWORD PTR [rcx+rax*4]
  4238ac:	mov    DWORD PTR [rcx+rax*4],r8d
  4238b0:	mov    r10d,0x1
  4238b6:	mov    DWORD PTR [rcx+rax*4-0x4],edx
  4238ba:	sub    rax,0x1
  4238be:	je     0x423820
  4238c4:	mov    r8d,DWORD PTR [rcx+rax*4-0x4]
  4238c9:	cmp    r8d,0x2faff
  4238d0:	jbe    0x423880
  4238d2:	lea    edx,[r8-0xe0000]
  4238d9:	cmp    edx,0x2ffff
  4238df:	ja     0x423820
  4238e5:	lea    rbp,[rip+0x505d4]        # 0x473ec0
  4238ec:	shr    edx,0x8
  4238ef:	movsx  rdx,WORD PTR [rbp+rdx*2+0x0]
  4238f5:	cmp    dx,0x10ff
  4238fa:	jg     0x42389a
  4238fc:	movzx  ebp,r8b
  423900:	shl    rdx,0x8
  423904:	add    rdx,rbp
  423907:	movzx  edx,BYTE PTR [rbx+rdx*1]
  42390b:	jmp    0x4238a0
  42390d:	nop    DWORD PTR [rax]
  423910:	lea    edx,[rax-0xe0000]
  423916:	cmp    edx,0x2ffff
  42391c:	ja     0x423980
  42391e:	lea    r8,[rip+0x5059b]        # 0x473ec0
  423925:	shr    edx,0x8
  423928:	movsx  r9,WORD PTR [r8+rdx*2]
  42392d:	cmp    r9w,0x10ff
  423933:	jg     0x423970
  423935:	shl    r9,0x8
  423939:	movzx  edx,al
  42393c:	lea    rax,[r9+rdx*1]
  423940:	movzx  r9d,BYTE PTR [rbx+rax*1]
  423945:	cmp    esi,r9d
  423948:	jg     0x423871
  42394e:	xchg   ax,ax
  423950:	cmp    r11,rdi
  423953:	mov    esi,r9d
  423956:	jne    0x423829
  42395c:	test   r10d,r10d
  42395f:	jne    0x4237e0
  423965:	pop    rbx
  423966:	pop    rsi
  423967:	pop    rdi
  423968:	pop    rbp
  423969:	ret    
  42396a:	nop    WORD PTR [rax+rax*1+0x0]
  423970:	sub    r9d,0x1100
  423977:	jmp    0x423868
  42397c:	nop    DWORD PTR [rax+0x0]
  423980:	xor    esi,esi
  423982:	jmp    0x423820
  423987:	lea    edx,[rax-0xe0000]
  42398d:	xor    esi,esi
  42398f:	cmp    edx,0x2ffff
  423995:	ja     0x423817
  42399b:	lea    r8,[rip+0x5051e]        # 0x473ec0
  4239a2:	shr    edx,0x8
  4239a5:	movsx  rdx,WORD PTR [r8+rdx*2]
  4239aa:	cmp    dx,0x10ff
  4239af:	jle    0x423809
  4239b5:	lea    esi,[rdx-0x1100]
  4239bb:	jmp    0x423817
  4239c0:	push   rbp
  4239c1:	push   rdi
  4239c2:	push   rsi
  4239c3:	push   rbx
  4239c4:	sub    rsp,0x28
  4239c8:	lea    eax,[rcx-0xac00]
  4239ce:	mov    esi,ecx
  4239d0:	mov    rdi,rdx
  4239d3:	cmp    eax,0x2ba3
  4239d8:	jbe    0x423a50
  4239da:	xor    edx,edx
  4239dc:	call   0x4234b0
  4239e1:	test   rax,rax
  4239e4:	mov    rbx,rax
  4239e7:	je     0x423a90
  4239ed:	mov    rdx,0xffffffffffffffff
  4239f4:	mov    rcx,rax
  4239f7:	call   0x421900
  4239fc:	cdqe   
  4239fe:	lea    rcx,[rax*4+0x0]
  423a06:	mov    QWORD PTR [rdi],rax
  423a09:	call   0x40e5c0
  423a0e:	cmp    BYTE PTR [rbx],0x0
  423a11:	mov    rbp,rax
  423a14:	je     0x423a42
  423a16:	mov    rax,QWORD PTR [rip+0x581d3]        # 0x47bbf0
  423a1d:	mov    rsi,rbp
  423a20:	mov    rdi,QWORD PTR [rax]
  423a23:	mov    rcx,rbx
  423a26:	add    rsi,0x4
  423a2a:	call   0x4219f0
  423a2f:	movzx  ecx,BYTE PTR [rbx]
  423a32:	mov    DWORD PTR [rsi-0x4],eax
  423a35:	movsx  rcx,BYTE PTR [rdi+rcx*1]
  423a3a:	add    rbx,rcx
  423a3d:	cmp    BYTE PTR [rbx],0x0
  423a40:	jne    0x423a23
  423a42:	mov    rax,rbp
  423a45:	add    rsp,0x28
  423a49:	pop    rbx
  423a4a:	pop    rsi
  423a4b:	pop    rdi
  423a4c:	pop    rbp
  423a4d:	ret    
  423a4e:	xchg   ax,ax
  423a50:	mov    r8,rdx
  423a53:	xor    edx,edx
  423a55:	call   0x423410
  423a5a:	mov    rax,QWORD PTR [rdi]
  423a5d:	lea    rcx,[rax*4+0x0]
  423a65:	call   0x40e5c0
  423a6a:	mov    r8,rdi
  423a6d:	mov    rbp,rax
  423a70:	mov    rdx,rax
  423a73:	mov    ecx,esi
  423a75:	call   0x423410
  423a7a:	mov    rax,rbp
  423a7d:	add    rsp,0x28
  423a81:	pop    rbx
  423a82:	pop    rsi
  423a83:	pop    rdi
  423a84:	pop    rbp
  423a85:	ret    
  423a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a90:	mov    ecx,0x4
  423a95:	call   0x40e5c0
  423a9a:	mov    QWORD PTR [rdi],0x1
  423aa1:	mov    rbp,rax
  423aa4:	mov    DWORD PTR [rax],esi
  423aa6:	jmp    0x423a42
  423aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  423ab0:	push   r15
  423ab2:	push   r14
  423ab4:	push   r13
  423ab6:	push   r12
  423ab8:	push   rbp
  423ab9:	push   rdi
  423aba:	push   rsi
  423abb:	push   rbx
  423abc:	sub    rsp,0x68
  423ac0:	xor    r13d,r13d
  423ac3:	mov    rdi,QWORD PTR [rip+0x58126]        # 0x47bbf0
  423aca:	lea    eax,[r8-0x2]
  423ace:	mov    rsi,rcx
  423ad1:	mov    r12,rdx
  423ad4:	mov    r15,rcx
  423ad7:	lea    rbp,[rcx+rdx*1]
  423adb:	lea    r14,[rsp+0x58]
  423ae0:	cmp    eax,0x1
  423ae3:	setbe  r13b
  423ae7:	and    r8d,0xfffffffd
  423aeb:	xor    ebx,ebx
  423aed:	mov    DWORD PTR [rsp+0x4c],r8d
  423af2:	jmp    0x423b14
  423af4:	mov    r8,r14
  423af7:	xor    edx,edx
  423af9:	mov    ecx,eax
  423afb:	call   0x423410
  423b00:	add    rbx,QWORD PTR [rsp+0x58]
  423b05:	movzx  eax,BYTE PTR [r15]
  423b09:	mov    rdx,QWORD PTR [rdi]
  423b0c:	movsx  rax,BYTE PTR [rdx+rax*1]
  423b11:	add    r15,rax
  423b14:	test   r12,r12
  423b17:	js     0x423b1e
  423b19:	cmp    r15,rbp
  423b1c:	jae    0x423b63
  423b1e:	cmp    BYTE PTR [r15],0x0
  423b22:	je     0x423b63
  423b24:	mov    rcx,r15
  423b27:	call   0x4219f0
  423b2c:	lea    edx,[rax-0xac00]
  423b32:	cmp    edx,0x2ba3
  423b38:	jbe    0x423af4
  423b3a:	mov    edx,r13d
  423b3d:	mov    ecx,eax
  423b3f:	call   0x4234b0
  423b44:	test   rax,rax
  423b47:	je     0x423d60
  423b4d:	mov    rdx,0xffffffffffffffff
  423b54:	mov    rcx,rax
  423b57:	call   0x421900
  423b5c:	cdqe   
  423b5e:	add    rbx,rax
  423b61:	jmp    0x423b05
  423b63:	lea    rcx,[rbx+0x1]
  423b67:	mov    edx,0x4
  423b6c:	xor    ebp,ebp
  423b6e:	call   0x40e7a0
  423b73:	mov    rcx,QWORD PTR [rip+0x58076]        # 0x47bbf0
  423b7a:	mov    rbx,rax
  423b7d:	lea    rax,[rsi+r12*1]
  423b81:	mov    QWORD PTR [rsp+0x38],0x0
  423b8a:	mov    DWORD PTR [rsp+0x48],r13d
  423b8f:	mov    r14,rax
  423b92:	mov    QWORD PTR [rsp+0x30],rcx
  423b97:	mov    QWORD PTR [rsp+0x40],rcx
  423b9c:	lea    rcx,[rsp+0x58]
  423ba1:	mov    QWORD PTR [rsp+0x20],rcx
  423ba6:	mov    rcx,QWORD PTR [rip+0x58043]        # 0x47bbf0
  423bad:	mov    QWORD PTR [rsp+0x28],rcx
  423bb2:	jmp    0x423c1e
  423bb4:	mov    r8,QWORD PTR [rsp+0x20]
  423bb9:	lea    rdx,[rbx+rbp*4]
  423bbd:	mov    ecx,edi
  423bbf:	mov    r15,rbp
  423bc2:	call   0x423410
  423bc7:	mov    rax,QWORD PTR [rsp+0x28]
  423bcc:	add    r15,QWORD PTR [rsp+0x58]
  423bd1:	mov    rdi,QWORD PTR [rax]
  423bd4:	test   r15,r15
  423bd7:	je     0x423c10
  423bd9:	mov    edx,DWORD PTR [rbx+rbp*4]
  423bdc:	cmp    edx,0x2faff
  423be2:	ja     0x423cb0
  423be8:	mov    eax,edx
  423bea:	lea    rcx,[rip+0x508cf]        # 0x4744c0
  423bf1:	shr    eax,0x8
  423bf4:	movsx  rax,WORD PTR [rcx+rax*2]
  423bf9:	cmp    ax,0x10ff
  423bfd:	jle    0x423cd6
  423c03:	sub    eax,0x1100
  423c08:	test   eax,eax
  423c0a:	je     0x423cf3
  423c10:	movzx  eax,BYTE PTR [rsi]
  423c13:	mov    rbp,r15
  423c16:	movsx  rax,BYTE PTR [rdi+rax*1]
  423c1b:	add    rsi,rax
  423c1e:	test   r12,r12
  423c21:	js     0x423c2c
  423c23:	cmp    rsi,r14
  423c26:	jae    0x423d11
  423c2c:	cmp    BYTE PTR [rsi],0x0
  423c2f:	je     0x423d11
  423c35:	mov    rcx,rsi
  423c38:	call   0x4219f0
  423c3d:	mov    edi,eax
  423c3f:	lea    eax,[rax-0xac00]
  423c45:	cmp    eax,0x2ba3
  423c4a:	jbe    0x423bb4
  423c50:	mov    edx,DWORD PTR [rsp+0x48]
  423c54:	mov    ecx,edi
  423c56:	call   0x4234b0
  423c5b:	test   rax,rax
  423c5e:	mov    r13,rax
  423c61:	je     0x423d40
  423c67:	cmp    BYTE PTR [rax],0x0
  423c6a:	je     0x423d69
  423c70:	mov    rax,QWORD PTR [rsp+0x30]
  423c75:	mov    r15,rbp
  423c78:	mov    rdi,QWORD PTR [rax]
  423c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c80:	add    r15,0x1
  423c84:	mov    rcx,r13
  423c87:	call   0x4219f0
  423c8c:	mov    DWORD PTR [rbx+r15*4-0x4],eax
  423c91:	movzx  eax,BYTE PTR [r13+0x0]
  423c96:	movsx  rax,BYTE PTR [rdi+rax*1]
  423c9b:	add    r13,rax
  423c9e:	cmp    BYTE PTR [r13+0x0],0x0
  423ca3:	jne    0x423c80
  423ca5:	jmp    0x423bd4
  423caa:	nop    WORD PTR [rax+rax*1+0x0]
  423cb0:	lea    eax,[rdx-0xe0000]
  423cb6:	cmp    eax,0x2ffff
  423cbb:	ja     0x423cf3
  423cbd:	lea    rcx,[rip+0x501fc]        # 0x473ec0
  423cc4:	shr    eax,0x8
  423cc7:	movsx  rax,WORD PTR [rcx+rax*2]
  423ccc:	cmp    ax,0x10ff
  423cd0:	jg     0x423c03
  423cd6:	movzx  edx,dl
  423cd9:	shl    rax,0x8
  423cdd:	add    rax,rdx
  423ce0:	lea    rdx,[rip+0x50dd9]        # 0x474ac0
  423ce7:	movzx  eax,BYTE PTR [rdx+rax*1]
  423ceb:	test   eax,eax
  423ced:	jne    0x423c10
  423cf3:	mov    rax,QWORD PTR [rsp+0x38]
  423cf8:	mov    rdx,r15
  423cfb:	lea    rcx,[rbx+rax*4]
  423cff:	sub    rdx,rax
  423d02:	call   0x4237d0
  423d07:	mov    QWORD PTR [rsp+0x38],rbp
  423d0c:	jmp    0x423c10
  423d11:	test   rbp,rbp
  423d14:	jne    0x423d79
  423d16:	mov    DWORD PTR [rbx],0x0
  423d1c:	mov    rax,rbx
  423d1f:	mov    DWORD PTR [rax],0x0
  423d25:	mov    rax,rbx
  423d28:	add    rsp,0x68
  423d2c:	pop    rbx
  423d2d:	pop    rsi
  423d2e:	pop    rdi
  423d2f:	pop    rbp
  423d30:	pop    r12
  423d32:	pop    r13
  423d34:	pop    r14
  423d36:	pop    r15
  423d38:	ret    
  423d39:	nop    DWORD PTR [rax+0x0]
  423d40:	mov    rax,QWORD PTR [rip+0x57ea9]        # 0x47bbf0
  423d47:	mov    DWORD PTR [rbx+rbp*4],edi
  423d4a:	lea    r15,[rbp+0x1]
  423d4e:	mov    rdi,QWORD PTR [rax]
  423d51:	jmp    0x423bd4
  423d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d60:	add    rbx,0x1
  423d64:	jmp    0x423b05
  423d69:	mov    rax,QWORD PTR [rsp+0x40]
  423d6e:	mov    r15,rbp
  423d71:	mov    rdi,QWORD PTR [rax]
  423d74:	jmp    0x423bd4
  423d79:	mov    rax,QWORD PTR [rsp+0x38]
  423d7e:	mov    rdx,rbp
  423d81:	lea    rcx,[rbx+rax*4]
  423d85:	sub    rdx,rax
  423d88:	call   0x4237d0
  423d8d:	cmp    DWORD PTR [rsp+0x4c],0x1
  423d92:	lea    rax,[rbx+rbp*4]
  423d96:	mov    DWORD PTR [rax],0x0
  423d9c:	jne    0x423d1f
  423d9e:	xor    edx,edx
  423da0:	xor    edi,edi
  423da2:	xor    r13d,r13d
  423da5:	lea    r15,[rip+0x50d14]        # 0x474ac0
  423dac:	jmp    0x423dfd
  423dae:	xchg   ax,ax
  423db0:	mov    eax,r12d
  423db3:	lea    rcx,[rip+0x50706]        # 0x4744c0
  423dba:	shr    eax,0x8
  423dbd:	movsx  rsi,WORD PTR [rcx+rax*2]
  423dc2:	cmp    si,0x10ff
  423dc7:	jle    0x423e50
  423dcd:	sub    esi,0x1100
  423dd3:	test   rdi,rdi
  423dd6:	je     0x423de8
  423dd8:	cmp    esi,edx
  423dda:	jg     0x423e8f
  423de0:	test   edx,edx
  423de2:	je     0x423e8f
  423de8:	test   esi,esi
  423dea:	mov    edx,esi
  423dec:	cmove  r13,rdi
  423df0:	add    rdi,0x1
  423df4:	cmp    rbp,rdi
  423df7:	jbe    0x423e84
  423dfd:	mov    r12d,DWORD PTR [rbx+rdi*4]
  423e01:	lea    r14,[rdi*4+0x0]
  423e09:	cmp    r12d,0x2faff
  423e10:	jbe    0x423db0
  423e12:	lea    eax,[r12-0xe0000]
  423e1a:	cmp    eax,0x2ffff
  423e1f:	ja     0x423e65
  423e21:	lea    rcx,[rip+0x50098]        # 0x473ec0
  423e28:	shr    eax,0x8
  423e2b:	movsx  rax,WORD PTR [rcx+rax*2]
  423e30:	cmp    ax,0x10ff
  423e34:	lea    esi,[rax-0x1100]
  423e3a:	jg     0x423dd3
  423e3c:	movzx  ecx,r12b
  423e40:	shl    rax,0x8
  423e44:	add    rax,rcx
  423e47:	movzx  esi,BYTE PTR [r15+rax*1]
  423e4c:	jmp    0x423dd3
  423e4e:	xchg   ax,ax
  423e50:	movzx  eax,r12b
  423e54:	shl    rsi,0x8
  423e58:	add    rsi,rax
  423e5b:	movzx  esi,BYTE PTR [r15+rsi*1]
  423e60:	jmp    0x423dd3
  423e65:	test   rdi,rdi
  423e68:	je     0x423f40
  423e6e:	test   edx,edx
  423e70:	je     0x423e8d
  423e72:	mov    r13,rdi
  423e75:	add    rdi,0x1
  423e79:	xor    edx,edx
  423e7b:	cmp    rbp,rdi
  423e7e:	ja     0x423dfd
  423e84:	lea    rax,[rbx+rbp*4]
  423e88:	jmp    0x423d1f
  423e8d:	xor    esi,esi
  423e8f:	lea    r9,[rbx+r13*4]
  423e93:	mov    edx,r12d
  423e96:	mov    r10d,DWORD PTR [r9]
  423e99:	mov    r8,r9
  423e9c:	mov    QWORD PTR [rsp+0x28],r9
  423ea1:	mov    ecx,r10d
  423ea4:	mov    DWORD PTR [rsp+0x20],r10d
  423ea9:	call   0x423540
  423eae:	test   eax,eax
  423eb0:	mov    r10d,DWORD PTR [rsp+0x20]
  423eb5:	mov    r9,QWORD PTR [rsp+0x28]
  423eba:	jne    0x423ed2
  423ebc:	mov    r8,r9
  423ebf:	mov    edx,r12d
  423ec2:	mov    ecx,r10d
  423ec5:	call   0x4235e0
  423eca:	test   eax,eax
  423ecc:	je     0x423de8
  423ed2:	lea    rdx,[rdi+0x1]
  423ed6:	lea    rax,[rbx+r14*1+0x4]
  423edb:	lea    rcx,[rbx+rbp*4]
  423edf:	cmp    rdx,rbp
  423ee2:	jae    0x423ef2
  423ee4:	mov    edx,DWORD PTR [rax]
  423ee6:	add    rax,0x4
  423eea:	mov    DWORD PTR [rax-0x8],edx
  423eed:	cmp    rax,rcx
  423ef0:	jne    0x423ee4
  423ef2:	sub    rdi,0x1
  423ef6:	sub    rbp,0x1
  423efa:	xor    edx,edx
  423efc:	cmp    rdi,r13
  423eff:	je     0x423df0
  423f05:	mov    eax,DWORD PTR [rbx+rdi*4-0x4]
  423f09:	cmp    eax,0x2faff
  423f0e:	ja     0x423f4a
  423f10:	mov    edx,eax
  423f12:	lea    rcx,[rip+0x505a7]        # 0x4744c0
  423f19:	shr    edx,0x8
  423f1c:	movsx  rdx,WORD PTR [rcx+rdx*2]
  423f21:	cmp    dx,0x10ff
  423f26:	jg     0x423f74
  423f28:	movzx  eax,al
  423f2b:	shl    rdx,0x8
  423f2f:	add    rdx,rax
  423f32:	movzx  edx,BYTE PTR [r15+rdx*1]
  423f37:	jmp    0x423df0
  423f3c:	nop    DWORD PTR [rax+0x0]
  423f40:	xor    r13d,r13d
  423f43:	xor    edx,edx
  423f45:	jmp    0x423df0
  423f4a:	lea    ecx,[rax-0xe0000]
  423f50:	cmp    ecx,0x2ffff
  423f56:	ja     0x423df0
  423f5c:	shr    ecx,0x8
  423f5f:	mov    edx,ecx
  423f61:	lea    rcx,[rip+0x4ff58]        # 0x473ec0
  423f68:	movsx  rdx,WORD PTR [rcx+rdx*2]
  423f6d:	cmp    dx,0x10ff
  423f72:	jle    0x423f7f
  423f74:	sub    edx,0x1100
  423f7a:	jmp    0x423df0
  423f7f:	shl    rdx,0x8
  423f83:	movzx  eax,al
  423f86:	add    rax,rdx
  423f89:	movzx  edx,BYTE PTR [r15+rax*1]
  423f8e:	jmp    0x423df0
  423f93:	nop    DWORD PTR [rax]
  423f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fa0:	push   rsi
  423fa1:	push   rbx
  423fa2:	sub    rsp,0x38
  423fa6:	call   0x423ab0
  423fab:	xor    r9d,r9d
  423fae:	mov    rbx,rax
  423fb1:	xor    r8d,r8d
  423fb4:	mov    edx,0xffffffff
  423fb9:	mov    QWORD PTR [rsp+0x20],0x0
  423fc2:	mov    rcx,rax
  423fc5:	call   0x422470
  423fca:	mov    rcx,rbx
  423fcd:	mov    rsi,rax
  423fd0:	call   0x40e6e0
  423fd5:	mov    rax,rsi
  423fd8:	add    rsp,0x38
  423fdc:	pop    rbx
  423fdd:	pop    rsi
  423fde:	ret    
  423fdf:	nop
  423fe0:	push   rsi
  423fe1:	push   rbx
  423fe2:	lea    r10d,[rcx-0xac00]
  423fe9:	mov    rbx,rdx
  423fec:	cmp    r10d,0x2ba3
  423ff3:	jbe    0x424070
  423ff5:	lea    eax,[rcx-0xc0]
  423ffb:	cmp    eax,0x2f95d
  424000:	ja     0x424060
  424002:	mov    r11d,0x801
  424008:	xor    r10d,r10d
  42400b:	lea    rsi,[rip+0x3abae]        # 0x45ebc0
  424012:	jmp    0x424024
  424014:	cmp    eax,r10d
  424017:	je     0x424060
  424019:	cmp    ecx,r9d
  42401c:	cmovbe r11d,eax
  424020:	cmova  r10d,eax
  424024:	lea    eax,[r10+r11*1]
  424028:	mov    edx,eax
  42402a:	shr    edx,0x1f
  42402d:	add    eax,edx
  42402f:	sar    eax,1
  424031:	movsxd r9,eax
  424034:	lea    rdx,[r9+r9*2]
  424038:	lea    rdx,[rsi+rdx*4]
  42403c:	mov    r9d,DWORD PTR [rdx]
  42403f:	cmp    r9d,ecx
  424042:	jne    0x424014
  424044:	mov    eax,DWORD PTR [rdx+0x4]
  424047:	mov    DWORD PTR [rbx],eax
  424049:	mov    eax,DWORD PTR [rdx+0x8]
  42404c:	mov    DWORD PTR [r8],eax
  42404f:	mov    eax,0x1
  424054:	jmp    0x42406b
  424056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424060:	mov    DWORD PTR [rbx],ecx
  424062:	xor    eax,eax
  424064:	mov    DWORD PTR [r8],0x0
  42406b:	pop    rbx
  42406c:	pop    rsi
  42406d:	ret    
  42406e:	xchg   ax,ax
  424070:	mov    eax,r10d
  424073:	mov    r11d,0x92492493
  424079:	mov    esi,r10d
  42407c:	imul   r11d
  42407f:	sar    esi,0x1f
  424082:	mov    eax,r10d
  424085:	lea    r9d,[rdx+r10*1]
  424089:	sar    r9d,0x4
  42408d:	sub    r9d,esi
  424090:	imul   r9d,r9d,0x1c
  424094:	sub    eax,r9d
  424097:	mov    r9d,eax
  42409a:	jne    0x4240e0
  42409c:	mov    eax,r10d
  42409f:	mov    edx,0x6f74ae27
  4240a4:	imul   edx
  4240a6:	sar    edx,0x8
  4240a9:	sub    edx,esi
  4240ab:	lea    eax,[rdx+0x1100]
  4240b1:	imul   edx,edx,0x24c
  4240b7:	mov    DWORD PTR [rbx],eax
  4240b9:	sub    r10d,edx
  4240bc:	mov    eax,r10d
  4240bf:	imul   r11d
  4240c2:	lea    eax,[rdx+r10*1]
  4240c6:	sar    r10d,0x1f
  4240ca:	sar    eax,0x4
  4240cd:	sub    eax,r10d
  4240d0:	add    eax,0x1161
  4240d5:	mov    DWORD PTR [r8],eax
  4240d8:	mov    eax,0x1
  4240dd:	pop    rbx
  4240de:	pop    rsi
  4240df:	ret    
  4240e0:	sub    ecx,eax
  4240e2:	add    r9d,0x11a7
  4240e9:	mov    DWORD PTR [rbx],ecx
  4240eb:	mov    DWORD PTR [r8],r9d
  4240ee:	jmp    0x4240d8
  4240f0:	push   rdi
  4240f1:	push   rsi
  4240f2:	push   rbx
  4240f3:	sub    rsp,0x20
  4240f7:	mov    esi,ecx
  4240f9:	mov    edi,edx
  4240fb:	mov    rbx,r8
  4240fe:	call   0x423540
  424103:	test   eax,eax
  424105:	jne    0x424125
  424107:	mov    r8,rbx
  42410a:	mov    edx,edi
  42410c:	mov    ecx,esi
  42410e:	call   0x4235e0
  424113:	test   eax,eax
  424115:	jne    0x424125
  424117:	mov    DWORD PTR [rbx],0x0
  42411d:	add    rsp,0x20
  424121:	pop    rbx
  424122:	pop    rsi
  424123:	pop    rdi
  424124:	ret    
  424125:	mov    eax,0x1
  42412a:	add    rsp,0x20
  42412e:	pop    rbx
  42412f:	pop    rsi
  424130:	pop    rdi
  424131:	ret    
  424132:	nop    DWORD PTR [rax+0x0]
  424136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424140:	push   r13
  424142:	push   r12
  424144:	push   rbp
  424145:	push   rdi
  424146:	push   rsi
  424147:	push   rbx
  424148:	sub    rsp,0x48
  42414c:	lea    eax,[rcx-0xac00]
  424152:	mov    esi,ecx
  424154:	mov    rdi,r8
  424157:	mov    rbp,r9
  42415a:	cmp    eax,0x2ba3
  42415f:	ja     0x4241b3
  424161:	test   r8,r8
  424164:	je     0x424230
  42416a:	lea    rbx,[rsp+0x30]
  42416f:	lea    r8,[rsp+0x28]
  424174:	mov    rdx,rbx
  424177:	call   0x423410
  42417c:	test   rbp,rbp
  42417f:	mov    rax,QWORD PTR [rsp+0x28]
  424184:	je     0x4241a6
  424186:	xor    ecx,ecx
  424188:	test   rax,rax
  42418b:	jne    0x424195
  42418d:	jmp    0x4241a6
  42418f:	nop
  424190:	cmp    rbp,rcx
  424193:	jbe    0x4241a6
  424195:	mov    r10d,DWORD PTR [rbx+rcx*4]
  424199:	mov    DWORD PTR [rdi+rcx*4],r10d
  42419d:	add    rcx,0x1
  4241a1:	cmp    rcx,rax
  4241a4:	jb     0x424190
  4241a6:	add    rsp,0x48
  4241aa:	pop    rbx
  4241ab:	pop    rsi
  4241ac:	pop    rdi
  4241ad:	pop    rbp
  4241ae:	pop    r12
  4241b0:	pop    r13
  4241b2:	ret    
  4241b3:	call   0x4234b0
  4241b8:	test   rax,rax
  4241bb:	mov    r12,rax
  4241be:	je     0x42424e
  4241c4:	mov    rdx,0xffffffffffffffff
  4241cb:	mov    rcx,rax
  4241ce:	call   0x421900
  4241d3:	movsxd rsi,eax
  4241d6:	test   rsi,rsi
  4241d9:	je     0x424217
  4241db:	test   rbp,rbp
  4241de:	je     0x424217
  4241e0:	mov    rax,QWORD PTR [rip+0x57a09]        # 0x47bbf0
  4241e7:	xor    ebx,ebx
  4241e9:	mov    r13,QWORD PTR [rax]
  4241ec:	jmp    0x4241f5
  4241ee:	xchg   ax,ax
  4241f0:	cmp    rsi,rbx
  4241f3:	jbe    0x424217
  4241f5:	mov    rcx,r12
  4241f8:	call   0x4219f0
  4241fd:	mov    DWORD PTR [rdi+rbx*4],eax
  424200:	movzx  eax,BYTE PTR [r12]
  424205:	add    rbx,0x1
  424209:	movsx  rax,BYTE PTR [r13+rax*1+0x0]
  42420f:	add    r12,rax
  424212:	cmp    rbp,rbx
  424215:	ja     0x4241f0
  424217:	mov    rax,rsi
  42421a:	add    rsp,0x48
  42421e:	pop    rbx
  42421f:	pop    rsi
  424220:	pop    rdi
  424221:	pop    rbp
  424222:	pop    r12
  424224:	pop    r13
  424226:	ret    
  424227:	nop    WORD PTR [rax+rax*1+0x0]
  424230:	lea    r8,[rsp+0x28]
  424235:	xor    edx,edx
  424237:	call   0x423410
  42423c:	mov    rax,QWORD PTR [rsp+0x28]
  424241:	add    rsp,0x48
  424245:	pop    rbx
  424246:	pop    rsi
  424247:	pop    rdi
  424248:	pop    rbp
  424249:	pop    r12
  42424b:	pop    r13
  42424d:	ret    
  42424e:	test   rdi,rdi
  424251:	je     0x424264
  424253:	test   rbp,rbp
  424256:	je     0x424264
  424258:	mov    DWORD PTR [rdi],esi
  42425a:	mov    eax,0x1
  42425f:	jmp    0x4241a6
  424264:	mov    eax,0x1
  424269:	jmp    0x4241a6
  42426e:	nop
  42426f:	nop
  424270:	push   r14
  424272:	push   r13
  424274:	push   r12
  424276:	push   rbp
  424277:	push   rdi
  424278:	push   rsi
  424279:	push   rbx
  42427a:	sub    rsp,0x660
  424281:	test   rcx,rcx
  424284:	mov    rbx,rcx
  424287:	je     0x4242f0
  424289:	call   0x407870
  42428e:	test   eax,eax
  424290:	jne    0x4242a4
  424292:	mov    edx,0x5c
  424297:	mov    rcx,rbx
  42429a:	call   0x4387a8
  42429f:	test   rax,rax
  4242a2:	je     0x424310
  4242a4:	mov    edx,0x8
  4242a9:	mov    rcx,rbx
  4242ac:	call   0x406db0
  4242b1:	test   eax,eax
  4242b3:	je     0x42430a
  4242b5:	mov    edx,0x4
  4242ba:	mov    rcx,rbx
  4242bd:	call   0x406db0
  4242c2:	test   eax,eax
  4242c4:	jne    0x42430a
  4242c6:	mov    rcx,rbx
  4242c9:	call   0x4182b0
  4242ce:	mov    rsi,rax
  4242d1:	mov    rax,rsi
  4242d4:	add    rsp,0x660
  4242db:	pop    rbx
  4242dc:	pop    rsi
  4242dd:	pop    rdi
  4242de:	pop    rbp
  4242df:	pop    r12
  4242e1:	pop    r13
  4242e3:	pop    r14
  4242e5:	ret    
  4242e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242f0:	lea    r8,[rip+0x52dd3]        # 0x4770ca
  4242f7:	lea    rdx,[rip+0x53072]        # 0x477370
  4242fe:	lea    rcx,[rip+0x52dd5]        # 0x4770da
  424305:	call   0x40fd20
  42430a:	xor    esi,esi
  42430c:	jmp    0x4242d1
  42430e:	xchg   ax,ax
  424310:	mov    edx,0x2f
  424315:	mov    rcx,rbx
  424318:	call   0x4387a8
  42431d:	test   rax,rax
  424320:	mov    rsi,rax
  424323:	jne    0x4242a4
  424329:	lea    rcx,[rip+0x52d90]        # 0x4770c0
  424330:	lea    rdi,[rsp+0x30]
  424335:	xor    ebp,ebp
  424337:	call   0x4059c0
  42433c:	xor    ecx,ecx
  42433e:	mov    r12,rax
  424341:	mov    r8d,0x104
  424347:	mov    rdx,rdi
  42434a:	call   QWORD PTR [rip+0x623a8]        # 0x4866f8
  424350:	sub    eax,0x1
  424353:	cmp    eax,0x102
  424358:	jbe    0x4245d5
  42435e:	lea    r13,[rsp+0x240]
  424366:	mov    edx,0x104
  42436b:	xor    edi,edi
  42436d:	mov    rcx,r13
  424370:	call   QWORD PTR [rip+0x623ba]        # 0x486730
  424376:	lea    edx,[rax-0x1]
  424379:	cmp    edx,0x102
  42437f:	jbe    0x4245b1
  424385:	lea    r13,[rsp+0x450]
  42438d:	mov    edx,0x104
  424392:	mov    rcx,r13
  424395:	call   QWORD PTR [rip+0x623c5]        # 0x486760
  42439b:	lea    edx,[rax-0x1]
  42439e:	cmp    edx,0x102
  4243a4:	jbe    0x424581
  4243aa:	xor    r14d,r14d
  4243ad:	test   rbp,rbp
  4243b0:	je     0x4245f9
  4243b6:	mov    rcx,rbp
  4243b9:	call   0x407e50
  4243be:	mov    rcx,rbp
  4243c1:	mov    r13,rax
  4243c4:	call   0x40e6e0
  4243c9:	mov    rcx,r12
  4243cc:	call   0x4182b0
  4243d1:	test   r14,r14
  4243d4:	mov    rbp,rax
  4243d7:	mov    r12,rax
  4243da:	je     0x424404
  4243dc:	lea    rdx,[rip+0x52ce2]        # 0x4770c5
  4243e3:	xor    r9d,r9d
  4243e6:	mov    r8,rax
  4243e9:	mov    rcx,r14
  4243ec:	call   0x4184b0
  4243f1:	mov    rcx,r12
  4243f4:	mov    rbp,rax
  4243f7:	call   0x40e6e0
  4243fc:	mov    rcx,r14
  4243ff:	call   0x40e6e0
  424404:	test   rdi,rdi
  424407:	mov    r12,rbp
  42440a:	je     0x424434
  42440c:	lea    rdx,[rip+0x52cb2]        # 0x4770c5
  424413:	xor    r9d,r9d
  424416:	mov    r8,rbp
  424419:	mov    rcx,rdi
  42441c:	call   0x4184b0
  424421:	mov    rcx,rbp
  424424:	mov    r12,rax
  424427:	call   0x40e6e0
  42442c:	mov    rcx,rdi
  42442f:	call   0x40e6e0
  424434:	lea    rcx,[rip+0x52c8c]        # 0x4770c7
  42443b:	xor    r8d,r8d
  42443e:	mov    rdx,r12
  424441:	call   0x4184b0
  424446:	mov    rcx,r12
  424449:	mov    rbp,rax
  42444c:	call   0x40e6e0
  424451:	test   r13,r13
  424454:	mov    rdi,rbp
  424457:	je     0x424481
  424459:	lea    rdx,[rip+0x52c65]        # 0x4770c5
  424460:	xor    r9d,r9d
  424463:	mov    r8,rbp
  424466:	mov    rcx,r13
  424469:	call   0x4184b0
  42446e:	mov    rcx,rbp
  424471:	mov    rdi,rax
  424474:	call   0x40e6e0
  424479:	mov    rcx,r13
  42447c:	call   0x40e6e0
  424481:	mov    rcx,rbx
  424484:	call   0x438788
  424489:	mov    rcx,rdi
  42448c:	lea    r12,[rax+0x1]
  424490:	call   0x438788
  424495:	lea    r13,[rax+0x1]
  424499:	mov    r14,rax
  42449c:	lea    rcx,[r13+r12*1+0x0]
  4244a1:	call   0x40e5c0
  4244a6:	mov    rbp,rax
  4244a9:	mov    r8,r12
  4244ac:	lea    rcx,[rax+r13*1]
  4244b0:	lea    r12,[rbp+r14*1+0x0]
  4244b5:	mov    rdx,rbx
  4244b8:	call   0x4387f0
  4244bd:	mov    BYTE PTR [r12],0x5c
  4244c2:	mov    rdx,rdi
  4244c5:	movzx  r9d,BYTE PTR [rdx]
  4244c9:	mov    rbx,rdx
  4244cc:	test   r9b,r9b
  4244cf:	je     0x424540
  4244d1:	cmp    r9b,0x3b
  4244d5:	jne    0x4244e6
  4244d7:	jmp    0x424540
  4244d9:	nop    DWORD PTR [rax+0x0]
  4244e0:	cmp    r9b,0x3b
  4244e4:	je     0x4244f3
  4244e6:	add    rbx,0x1
  4244ea:	movzx  r9d,BYTE PTR [rbx]
  4244ee:	test   r9b,r9b
  4244f1:	jne    0x4244e0
  4244f3:	cmp    rdx,rbx
  4244f6:	je     0x424540
  4244f8:	mov    r8,rbx
  4244fb:	mov    rcx,r12
  4244fe:	sub    r8,rdx
  424501:	sub    rcx,r8
  424504:	call   0x4387f0
  424509:	mov    r13,rax
  42450c:	mov    edx,0x8
  424511:	mov    rcx,r13
  424514:	call   0x406db0
  424519:	test   eax,eax
  42451b:	jne    0x424550
  42451d:	cmp    BYTE PTR [rbx],0x0
  424520:	lea    rdx,[rbx+0x1]
  424524:	jne    0x4244c5
  424526:	mov    rcx,rbp
  424529:	call   0x40e6e0
  42452e:	mov    rcx,rdi
  424531:	call   0x40e6e0
  424536:	jmp    0x4242d1
  42453b:	nop    DWORD PTR [rax+rax*1+0x0]
  424540:	lea    r13,[r12+0x1]
  424545:	jmp    0x42450c
  424547:	nop    WORD PTR [rax+rax*1+0x0]
  424550:	mov    edx,0x4
  424555:	mov    rcx,r13
  424558:	call   0x406db0
  42455d:	test   eax,eax
  42455f:	jne    0x42451d
  424561:	mov    rcx,r13
  424564:	call   0x4182b0
  424569:	mov    rcx,rbp
  42456c:	mov    rsi,rax
  42456f:	call   0x40e6e0
  424574:	mov    rcx,rdi
  424577:	call   0x40e6e0
  42457c:	jmp    0x4242d1
  424581:	xor    r9d,r9d
  424584:	xor    r8d,r8d
  424587:	mov    rcx,r13
  42458a:	mov    QWORD PTR [rsp+0x20],0x0
  424593:	mov    edx,0xffffffff
  424598:	xor    r13d,r13d
  42459b:	call   0x4225c0
  4245a0:	test   rbp,rbp
  4245a3:	mov    r14,rax
  4245a6:	jne    0x4243b6
  4245ac:	jmp    0x4243c9
  4245b1:	mov    QWORD PTR [rsp+0x20],0x0
  4245ba:	xor    r9d,r9d
  4245bd:	xor    r8d,r8d
  4245c0:	mov    edx,0xffffffff
  4245c5:	mov    rcx,r13
  4245c8:	call   0x4225c0
  4245cd:	mov    rdi,rax
  4245d0:	jmp    0x424385
  4245d5:	mov    QWORD PTR [rsp+0x20],0x0
  4245de:	xor    r9d,r9d
  4245e1:	xor    r8d,r8d
  4245e4:	mov    edx,0xffffffff
  4245e9:	mov    rcx,rdi
  4245ec:	call   0x4225c0
  4245f1:	mov    rbp,rax
  4245f4:	jmp    0x42435e
  4245f9:	mov    rcx,r12
  4245fc:	xor    r13d,r13d
  4245ff:	call   0x4182b0
  424604:	test   rdi,rdi
  424607:	mov    rbp,rax
  42460a:	jne    0x42440c
  424610:	lea    rcx,[rip+0x52ab0]        # 0x4770c7
  424617:	xor    r8d,r8d
  42461a:	mov    rdx,rax
  42461d:	call   0x4184b0
  424622:	mov    rcx,rbp
  424625:	mov    rdi,rax
  424628:	call   0x40e6e0
  42462d:	jmp    0x424481
  424632:	nop    DWORD PTR [rax+0x0]
  424636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424640:	push   rsi
  424641:	push   rbx
  424642:	sub    rsp,0x258
  424649:	xor    ebx,ebx
  42464b:	mov    edx,ecx
  42464d:	mov    QWORD PTR [rsp+0x38],0x0
  424656:	xor    ecx,ecx
  424658:	lea    r8,[rsp+0x38]
  42465d:	call   QWORD PTR [rip+0x62545]        # 0x486ba8
  424663:	test   eax,eax
  424665:	jne    0x424689
  424667:	lea    rsi,[rsp+0x40]
  42466c:	mov    rcx,QWORD PTR [rsp+0x38]
  424671:	mov    rdx,rsi
  424674:	call   QWORD PTR [rip+0x62526]        # 0x486ba0
  42467a:	test   eax,eax
  42467c:	jne    0x4246a0
  42467e:	mov    rcx,QWORD PTR [rsp+0x38]
  424683:	call   QWORD PTR [rip+0x62507]        # 0x486b90
  424689:	mov    rax,rbx
  42468c:	add    rsp,0x258
  424693:	pop    rbx
  424694:	pop    rsi
  424695:	ret    
  424696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4246a0:	mov    QWORD PTR [rsp+0x20],0x0
  4246a9:	xor    r9d,r9d
  4246ac:	xor    r8d,r8d
  4246af:	mov    edx,0xffffffff
  4246b4:	mov    rcx,rsi
  4246b7:	call   0x4225c0
  4246bc:	mov    rbx,rax
  4246bf:	jmp    0x42467e
  4246c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4246c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4246d0:	push   rdi
  4246d1:	push   rsi
  4246d2:	push   rbx
  4246d3:	sub    rsp,0x40
  4246d7:	lea    rcx,[rip+0x52a01]        # 0x4770df
  4246de:	call   QWORD PTR [rip+0x6201c]        # 0x486700
  4246e4:	lea    rdx,[rip+0x52a00]        # 0x4770eb
  4246eb:	mov    rcx,rax
  4246ee:	call   QWORD PTR [rip+0x6201c]        # 0x486710
  4246f4:	mov    rsi,QWORD PTR [rip+0x5fd55]        # 0x484450
  4246fb:	mov    ecx,0x10
  424700:	mov    rbx,rax
  424703:	call   0x424640
  424708:	mov    ecx,0x5
  42470d:	mov    QWORD PTR [rsi],rax
  424710:	mov    rsi,QWORD PTR [rip+0x5fd39]        # 0x484450
  424717:	call   0x424640
  42471c:	test   rbx,rbx
  42471f:	mov    QWORD PTR [rsi+0x8],rax
  424723:	je     0x424860
  424729:	lea    rsi,[rsp+0x38]
  42472e:	xor    r8d,r8d
  424731:	xor    edx,edx
  424733:	lea    rcx,[rip+0x52c26]        # 0x477360
  42473a:	mov    QWORD PTR [rsp+0x38],0x0
  424743:	mov    r9,rsi
  424746:	call   rbx
  424748:	mov    rcx,QWORD PTR [rsp+0x38]
  42474d:	mov    rdi,QWORD PTR [rip+0x5fcfc]        # 0x484450
  424754:	test   rcx,rcx
  424757:	je     0x4248e0
  42475d:	xor    r9d,r9d
  424760:	xor    r8d,r8d
  424763:	mov    QWORD PTR [rsp+0x20],0x0
  42476c:	mov    edx,0xffffffff
  424771:	call   0x4225c0
  424776:	mov    QWORD PTR [rdi+0x10],rax
  42477a:	mov    rdi,QWORD PTR [rip+0x5fccf]        # 0x484450
  424781:	cmp    QWORD PTR [rdi+0x10],0x0
  424786:	je     0x424910
  42478c:	mov    rcx,QWORD PTR [rsp+0x38]
  424791:	call   QWORD PTR [rip+0x623f9]        # 0x486b90
  424797:	mov    rdi,QWORD PTR [rip+0x5fcb2]        # 0x484450
  42479e:	mov    ecx,0xd
  4247a3:	call   0x424640
  4247a8:	mov    ecx,0x27
  4247ad:	mov    QWORD PTR [rdi+0x18],rax
  4247b1:	mov    rdi,QWORD PTR [rip+0x5fc98]        # 0x484450
  4247b8:	call   0x424640
  4247bd:	xor    r8d,r8d
  4247c0:	xor    edx,edx
  4247c2:	lea    rcx,[rip+0x52b87]        # 0x477350
  4247c9:	mov    QWORD PTR [rdi+0x20],rax
  4247cd:	mov    QWORD PTR [rsp+0x38],0x0
  4247d6:	mov    r9,rsi
  4247d9:	call   rbx
  4247db:	mov    rcx,QWORD PTR [rsp+0x38]
  4247e0:	test   rcx,rcx
  4247e3:	je     0x4248c0
  4247e9:	mov    rbx,QWORD PTR [rip+0x5fc60]        # 0x484450
  4247f0:	xor    r9d,r9d
  4247f3:	xor    r8d,r8d
  4247f6:	mov    QWORD PTR [rsp+0x20],0x0
  4247ff:	mov    edx,0xffffffff
  424804:	call   0x4225c0
  424809:	mov    QWORD PTR [rbx+0x28],rax
  42480d:	mov    rbx,QWORD PTR [rip+0x5fc3c]        # 0x484450
  424814:	cmp    QWORD PTR [rbx+0x28],0x0
  424819:	je     0x4248f3
  42481f:	mov    rcx,QWORD PTR [rsp+0x38]
  424824:	call   QWORD PTR [rip+0x62366]        # 0x486b90
  42482a:	mov    rbx,QWORD PTR [rip+0x5fc1f]        # 0x484450
  424831:	mov    ecx,0x15
  424836:	call   0x424640
  42483b:	mov    ecx,0xe
  424840:	mov    QWORD PTR [rbx+0x30],rax
  424844:	mov    rbx,QWORD PTR [rip+0x5fc05]        # 0x484450
  42484b:	call   0x424640
  424850:	mov    QWORD PTR [rbx+0x38],rax
  424854:	add    rsp,0x40
  424858:	pop    rbx
  424859:	pop    rsi
  42485a:	pop    rdi
  42485b:	ret    
  42485c:	nop    DWORD PTR [rax+0x0]
  424860:	mov    rbx,QWORD PTR [rip+0x5fbe9]        # 0x484450
  424867:	mov    ecx,0x10
  42486c:	call   0x424640
  424871:	mov    ecx,0xd
  424876:	mov    QWORD PTR [rbx+0x10],rax
  42487a:	mov    rbx,QWORD PTR [rip+0x5fbcf]        # 0x484450
  424881:	call   0x424640
  424886:	mov    ecx,0x27
  42488b:	mov    QWORD PTR [rbx+0x18],rax
  42488f:	mov    rbx,QWORD PTR [rip+0x5fbba]        # 0x484450
  424896:	call   0x424640
  42489b:	mov    ecx,0x2e
  4248a0:	mov    QWORD PTR [rbx+0x20],rax
  4248a4:	mov    rbx,QWORD PTR [rip+0x5fba5]        # 0x484450
  4248ab:	call   0x424640
  4248b0:	mov    QWORD PTR [rbx+0x28],rax
  4248b4:	jmp    0x42482a
  4248b9:	nop    DWORD PTR [rax+0x0]
  4248c0:	mov    rbx,QWORD PTR [rip+0x5fb89]        # 0x484450
  4248c7:	mov    ecx,0x2e
  4248cc:	call   0x424640
  4248d1:	mov    QWORD PTR [rbx+0x28],rax
  4248d5:	jmp    0x42482a
  4248da:	nop    WORD PTR [rax+rax*1+0x0]
  4248e0:	mov    ecx,0x10
  4248e5:	call   0x424640
  4248ea:	mov    QWORD PTR [rdi+0x10],rax
  4248ee:	jmp    0x424797
  4248f3:	mov    ecx,0x2e
  4248f8:	call   0x424640
  4248fd:	mov    QWORD PTR [rbx+0x28],rax
  424901:	jmp    0x42481f
  424906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424910:	mov    ecx,0x10
  424915:	call   0x424640
  42491a:	mov    QWORD PTR [rdi+0x10],rax
  42491e:	jmp    0x42478c
  424923:	nop    DWORD PTR [rax]
  424926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424930:	push   rbx
  424931:	sub    rsp,0x60
  424935:	test   rcx,rcx
  424938:	mov    QWORD PTR [rsp+0x28],0x0
  424941:	je     0x4249d0
  424947:	mov    eax,DWORD PTR [rip+0x5facb]        # 0x484418
  42494d:	mov    rbx,rcx
  424950:	test   eax,eax
  424952:	je     0x4249a0
  424954:	mov    rax,QWORD PTR [rip+0x5fab5]        # 0x484410
  42495b:	test   rax,rax
  42495e:	je     0x424973
  424960:	lea    r8,[rsp+0x28]
  424965:	mov    rdx,rbx
  424968:	mov    ecx,0x6
  42496d:	call   rax
  42496f:	test   eax,eax
  424971:	jne    0x424992
  424973:	lea    rdx,[rsp+0x30]
  424978:	mov    r8d,0x30
  42497e:	mov    rcx,rbx
  424981:	call   QWORD PTR [rip+0x61eb9]        # 0x486840
  424987:	mov    rax,QWORD PTR [rsp+0x38]
  42498c:	add    rsp,0x60
  424990:	pop    rbx
  424991:	ret    
  424992:	mov    rax,QWORD PTR [rsp+0x28]
  424997:	add    rsp,0x60
  42499b:	pop    rbx
  42499c:	ret    
  42499d:	nop    DWORD PTR [rax]
  4249a0:	lea    rcx,[rip+0x52759]        # 0x477100
  4249a7:	call   QWORD PTR [rip+0x61d53]        # 0x486700
  4249ad:	lea    rdx,[rip+0x52759]        # 0x47710d
  4249b4:	mov    rcx,rax
  4249b7:	call   QWORD PTR [rip+0x61d53]        # 0x486710
  4249bd:	mov    DWORD PTR [rip+0x5fa51],0x1        # 0x484418
  4249c7:	mov    QWORD PTR [rip+0x5fa42],rax        # 0x484410
  4249ce:	jmp    0x42495b
  4249d0:	xor    eax,eax
  4249d2:	jmp    0x42498c
  4249d4:	xchg   ax,ax
  4249d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249e0:	push   rbx
  4249e1:	sub    rsp,0x240
  4249e8:	mov    edx,0x104
  4249ed:	lea    rbx,[rsp+0x30]
  4249f2:	mov    rcx,rbx
  4249f5:	call   QWORD PTR [rip+0x61d65]        # 0x486760
  4249fb:	test   eax,eax
  4249fd:	je     0x424a50
  4249ff:	xor    r9d,r9d
  424a02:	xor    r8d,r8d
  424a05:	mov    rcx,rbx
  424a08:	mov    QWORD PTR [rsp+0x20],0x0
  424a11:	mov    edx,0xffffffff
  424a16:	call   0x4225c0
  424a1b:	test   rax,rax
  424a1e:	mov    rbx,rax
  424a21:	je     0x424a50
  424a23:	mov    rcx,rax
  424a26:	call   0x407900
  424a2b:	movzx  edx,BYTE PTR [rax-0x1]
  424a2f:	cmp    dl,0x2f
  424a32:	je     0x424a65
  424a34:	cmp    dl,0x5c
  424a37:	je     0x424a65
  424a39:	mov    BYTE PTR [rax],0x0
  424a3c:	mov    rax,rbx
  424a3f:	add    rsp,0x240
  424a46:	pop    rbx
  424a47:	ret    
  424a48:	nop    DWORD PTR [rax+rax*1+0x0]
  424a50:	lea    rcx,[rip+0x526c9]        # 0x477120
  424a57:	call   0x4182b0
  424a5c:	add    rsp,0x240
  424a63:	pop    rbx
  424a64:	ret    
  424a65:	xor    edx,edx
  424a67:	cmp    BYTE PTR [rax-0x2],0x3a
  424a6b:	setne  dl
  424a6e:	sub    rax,rdx
  424a71:	mov    BYTE PTR [rax],0x0
  424a74:	mov    rax,rbx
  424a77:	jmp    0x424a3f
  424a79:	nop    DWORD PTR [rax+0x0]
  424a80:	push   rsi
  424a81:	push   rbx
  424a82:	sub    rsp,0x258
  424a89:	lea    rcx,[rip+0x5269e]        # 0x47712e
  424a90:	call   0x4059c0
  424a95:	mov    rcx,rax
  424a98:	call   0x4182b0
  424a9d:	test   rax,rax
  424aa0:	mov    QWORD PTR [rip+0x5fa19],rax        # 0x4844c0
  424aa7:	je     0x424ab2
  424aa9:	cmp    BYTE PTR [rax],0x0
  424aac:	jne    0x424d30
  424ab2:	mov    rcx,rax
  424ab5:	call   0x40e6e0
  424aba:	lea    rcx,[rip+0x52674]        # 0x477135
  424ac1:	call   0x4059c0
  424ac6:	mov    rcx,rax
  424ac9:	call   0x4182b0
  424ace:	test   rax,rax
  424ad1:	mov    QWORD PTR [rip+0x5f9e8],rax        # 0x4844c0
  424ad8:	je     0x424ae3
  424ada:	cmp    BYTE PTR [rax],0x0
  424add:	jne    0x424d30
  424ae3:	mov    rcx,rax
  424ae6:	call   0x40e6e0
  424aeb:	lea    rcx,[rip+0x52647]        # 0x477139
  424af2:	call   0x4059c0
  424af7:	mov    rcx,rax
  424afa:	call   0x4182b0
  424aff:	test   rax,rax
  424b02:	mov    QWORD PTR [rip+0x5f9b7],rax        # 0x4844c0
  424b09:	je     0x424d10
  424b0f:	cmp    BYTE PTR [rax],0x0
  424b12:	je     0x424d10
  424b18:	lea    rcx,[rip+0x5261f]        # 0x47713e
  424b1f:	call   0x4059c0
  424b24:	mov    rcx,rax
  424b27:	call   0x4182b0
  424b2c:	test   rax,rax
  424b2f:	mov    QWORD PTR [rip+0x5f972],rax        # 0x4844a8
  424b36:	je     0x424b5f
  424b38:	mov    rcx,rax
  424b3b:	call   0x407870
  424b40:	test   eax,eax
  424b42:	jne    0x424d42
  424b48:	mov    rcx,QWORD PTR [rip+0x5f959]        # 0x4844a8
  424b4f:	call   0x40e6e0
  424b54:	mov    QWORD PTR [rip+0x5f949],0x0        # 0x4844a8
  424b5f:	lea    rcx,[rip+0x525dd]        # 0x477143
  424b66:	call   0x4059c0
  424b6b:	test   rax,rax
  424b6e:	je     0x424e54
  424b74:	lea    rcx,[rip+0x525c8]        # 0x477143
  424b7b:	call   0x4059c0
  424b80:	mov    rcx,rax
  424b83:	call   0x4182b0
  424b88:	mov    QWORD PTR [rip+0x5f919],rax        # 0x4844a8
  424b8f:	test   rax,rax
  424b92:	jne    0x424bc0
  424b94:	mov    ecx,0x28
  424b99:	call   0x424640
  424b9e:	test   rax,rax
  424ba1:	mov    QWORD PTR [rip+0x5f900],rax        # 0x4844a8
  424ba8:	jne    0x424bc0
  424baa:	call   0x4249e0
  424baf:	mov    QWORD PTR [rip+0x5f8f2],rax        # 0x4844a8
  424bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bc0:	lea    rsi,[rsp+0x3c]
  424bc5:	lea    rbx,[rsp+0x40]
  424bca:	mov    DWORD PTR [rsp+0x3c],0x101
  424bd2:	mov    rdx,rsi
  424bd5:	mov    rcx,rbx
  424bd8:	call   QWORD PTR [rip+0x61a62]        # 0x486640
  424bde:	test   eax,eax
  424be0:	jne    0x424da5
  424be6:	cmp    QWORD PTR [rip+0x5f8ca],0x0        # 0x4844b8
  424bee:	je     0x424ddc
  424bf4:	cmp    QWORD PTR [rip+0x5f8b4],0x0        # 0x4844b0
  424bfc:	je     0x424e3c
  424c02:	mov    rdx,rsi
  424c05:	mov    rcx,rbx
  424c08:	mov    DWORD PTR [rsp+0x3c],0x64
  424c10:	call   QWORD PTR [rip+0x61a82]        # 0x486698
  424c16:	lea    rcx,[rip+0x52507]        # 0x477124
  424c1d:	test   eax,eax
  424c1f:	cmovne rcx,rbx
  424c23:	call   0x4182b0
  424c28:	mov    rcx,QWORD PTR [rip+0x5f891]        # 0x4844c0
  424c2f:	xor    r9d,r9d
  424c32:	xor    r8d,r8d
  424c35:	mov    rdx,0xffffffffffffffff
  424c3c:	mov    QWORD PTR [rsp+0x20],0x0
  424c45:	mov    QWORD PTR [rip+0x5f854],rax        # 0x4844a0
  424c4c:	call   0x42e110
  424c51:	mov    rcx,QWORD PTR [rip+0x5f860]        # 0x4844b8
  424c58:	xor    r9d,r9d
  424c5b:	xor    r8d,r8d
  424c5e:	mov    rdx,0xffffffffffffffff
  424c65:	mov    QWORD PTR [rsp+0x20],0x0
  424c6e:	mov    QWORD PTR [rip+0x5f823],rax        # 0x484498
  424c75:	call   0x42e110
  424c7a:	mov    rcx,QWORD PTR [rip+0x5f82f]        # 0x4844b0
  424c81:	xor    r9d,r9d
  424c84:	xor    r8d,r8d
  424c87:	mov    QWORD PTR [rsp+0x20],0x0
  424c90:	mov    rdx,0xffffffffffffffff
  424c97:	mov    QWORD PTR [rip+0x5f7f2],rax        # 0x484490
  424c9e:	call   0x42e110
  424ca3:	cmp    QWORD PTR [rip+0x5f7ed],0x0        # 0x484498
  424cab:	mov    QWORD PTR [rip+0x5f7d6],rax        # 0x484488
  424cb2:	je     0x424e24
  424cb8:	cmp    QWORD PTR [rip+0x5f7d0],0x0        # 0x484490
  424cc0:	je     0x424e0c
  424cc6:	cmp    QWORD PTR [rip+0x5f7ba],0x0        # 0x484488
  424cce:	je     0x424df4
  424cd4:	mov    rcx,QWORD PTR [rip+0x5f7cd]        # 0x4844a8
  424cdb:	test   rcx,rcx
  424cde:	je     0x424d90
  424ce4:	mov    QWORD PTR [rsp+0x20],0x0
  424ced:	xor    r9d,r9d
  424cf0:	xor    r8d,r8d
  424cf3:	mov    rdx,0xffffffffffffffff
  424cfa:	call   0x42e110
  424cff:	mov    QWORD PTR [rip+0x5f77a],rax        # 0x484480
  424d06:	add    rsp,0x258
  424d0d:	pop    rbx
  424d0e:	pop    rsi
  424d0f:	ret    
  424d10:	mov    rcx,rax
  424d13:	call   0x40e6e0
  424d18:	call   0x4249e0
  424d1d:	mov    QWORD PTR [rip+0x5f79c],rax        # 0x4844c0
  424d24:	jmp    0x424b18
  424d29:	nop    DWORD PTR [rax+0x0]
  424d30:	mov    rax,QWORD PTR [rip+0x5f789]        # 0x4844c0
  424d37:	cmp    BYTE PTR [rax],0x0
  424d3a:	jne    0x424b18
  424d40:	jmp    0x424d10
  424d42:	mov    rcx,QWORD PTR [rip+0x5f75f]        # 0x4844a8
  424d49:	mov    edx,0x4
  424d4e:	call   0x406db0
  424d53:	test   eax,eax
  424d55:	je     0x424b48
  424d5b:	mov    rbx,QWORD PTR [rip+0x5f746]        # 0x4844a8
  424d62:	test   rbx,rbx
  424d65:	jne    0x424d73
  424d67:	jmp    0x424b5f
  424d6c:	nop    DWORD PTR [rax+0x0]
  424d70:	mov    BYTE PTR [rax],0x5c
  424d73:	mov    edx,0x2f
  424d78:	mov    rcx,rbx
  424d7b:	call   0x4387a8
  424d80:	test   rax,rax
  424d83:	jne    0x424d70
  424d85:	jmp    0x424bc0
  424d8a:	nop    WORD PTR [rax+rax*1+0x0]
  424d90:	mov    QWORD PTR [rip+0x5f6e5],0x0        # 0x484480
  424d9b:	add    rsp,0x258
  424da2:	pop    rbx
  424da3:	pop    rsi
  424da4:	ret    
  424da5:	xor    r9d,r9d
  424da8:	xor    r8d,r8d
  424dab:	mov    edx,0xffffffff
  424db0:	mov    rcx,rbx
  424db3:	mov    QWORD PTR [rsp+0x20],0x0
  424dbc:	call   0x4225c0
  424dc1:	mov    rcx,rax
  424dc4:	mov    QWORD PTR [rip+0x5f6ed],rax        # 0x4844b8
  424dcb:	call   0x4182b0
  424dd0:	mov    QWORD PTR [rip+0x5f6d9],rax        # 0x4844b0
  424dd7:	jmp    0x424be6
  424ddc:	lea    rcx,[rip+0x5236c]        # 0x47714f
  424de3:	call   0x4182b0
  424de8:	mov    QWORD PTR [rip+0x5f6c9],rax        # 0x4844b8
  424def:	jmp    0x424bf4
  424df4:	lea    rcx,[rip+0x5235d]        # 0x477158
  424dfb:	call   0x4182b0
  424e00:	mov    QWORD PTR [rip+0x5f681],rax        # 0x484488
  424e07:	jmp    0x424cd4
  424e0c:	lea    rcx,[rip+0x5233c]        # 0x47714f
  424e13:	call   0x4182b0
  424e18:	mov    QWORD PTR [rip+0x5f671],rax        # 0x484490
  424e1f:	jmp    0x424cc6
  424e24:	lea    rcx,[rip+0x52335]        # 0x477160
  424e2b:	call   0x4182b0
  424e30:	mov    QWORD PTR [rip+0x5f661],rax        # 0x484498
  424e37:	jmp    0x424cb8
  424e3c:	lea    rcx,[rip+0x52315]        # 0x477158
  424e43:	call   0x4182b0
  424e48:	mov    QWORD PTR [rip+0x5f661],rax        # 0x4844b0
  424e4f:	jmp    0x424c02
  424e54:	mov    rax,QWORD PTR [rip+0x5f64d]        # 0x4844a8
  424e5b:	jmp    0x424b8f
  424e60:	mov    eax,0xffffffff
  424e65:	test   edx,edx
  424e67:	cmovs  edx,eax
  424e6a:	cmp    edx,0x1e
  424e6d:	jg     0x424e92
  424e6f:	lea    eax,[rdx+0x1]
  424e72:	bt     ecx,eax
  424e75:	jae    0x424e88
  424e77:	jmp    0x424e94
  424e79:	nop    DWORD PTR [rax+0x0]
  424e80:	add    eax,0x1
  424e83:	bt     ecx,eax
  424e86:	jb     0x424e92
  424e88:	cmp    eax,0x1f
  424e8b:	jne    0x424e80
  424e8d:	mov    eax,0xffffffff
  424e92:	repz ret 
  424e94:	repz ret 
  424e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ea0:	cmp    edx,0x20
  424ea3:	jbe    0x424ec0
  424ea5:	mov    eax,0x1f
  424eaa:	jmp    0x424eb7
  424eac:	nop    DWORD PTR [rax+0x0]
  424eb0:	test   eax,eax
  424eb2:	je     0x424ed0
  424eb4:	sub    eax,0x1
  424eb7:	bt     ecx,eax
  424eba:	jae    0x424eb0
  424ebc:	repz ret 
  424ebe:	xchg   ax,ax
  424ec0:	test   edx,edx
  424ec2:	mov    eax,0xffffffff
  424ec7:	je     0x424ebc
  424ec9:	add    eax,edx
  424ecb:	jmp    0x424eb7
  424ecd:	nop    DWORD PTR [rax]
  424ed0:	mov    eax,0xffffffff
  424ed5:	ret    
  424ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ee0:	test   ecx,ecx
  424ee2:	jne    0x424ef0
  424ee4:	mov    eax,0x1
  424ee9:	ret    
  424eea:	nop    WORD PTR [rax+rax*1+0x0]
  424ef0:	bsr    ecx,ecx
  424ef3:	lea    eax,[rcx+0x1]
  424ef6:	ret    
  424ef7:	nop    WORD PTR [rax+rax*1+0x0]
  424f00:	push   rbx
  424f01:	sub    rsp,0x240
  424f08:	mov    rax,QWORD PTR [rip+0x56cf1]        # 0x47bc00
  424f0f:	mov    r8d,0x104
  424f15:	lea    rbx,[rsp+0x30]
  424f1a:	mov    rcx,QWORD PTR [rax]
  424f1d:	mov    rdx,rbx
  424f20:	call   QWORD PTR [rip+0x617d2]        # 0x4866f8
  424f26:	test   eax,eax
  424f28:	je     0x424f70
  424f2a:	xor    r9d,r9d
  424f2d:	xor    r8d,r8d
  424f30:	mov    rcx,rbx
  424f33:	mov    edx,0xffffffff
  424f38:	mov    QWORD PTR [rsp+0x20],0x0
  424f41:	call   0x4225c0
  424f46:	mov    edx,0x5c
  424f4b:	mov    rcx,rax
  424f4e:	mov    rbx,rax
  424f51:	call   0x438768
  424f56:	test   rax,rax
  424f59:	je     0x424f70
  424f5b:	mov    BYTE PTR [rax],0x0
  424f5e:	mov    rax,rbx
  424f61:	add    rsp,0x240
  424f68:	pop    rbx
  424f69:	ret    
  424f6a:	nop    WORD PTR [rax+rax*1+0x0]
  424f70:	xor    eax,eax
  424f72:	add    rsp,0x240
  424f79:	pop    rbx
  424f7a:	ret    
  424f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  424f80:	sub    rsp,0x28
  424f84:	call   0x432c50
  424f89:	test   eax,eax
  424f8b:	jne    0x424f92
  424f8d:	add    rsp,0x28
  424f91:	ret    
  424f92:	call   QWORD PTR [rip+0x61948]        # 0x4868e0
  424f98:	mov    ecx,DWORD PTR [rax]
  424f9a:	call   0x418cf0
  424f9f:	test   rax,rax
  424fa2:	mov    r9,rax
  424fa5:	je     0x424f8d
  424fa7:	lea    r8,[rip+0x521ba]        # 0x477168
  424fae:	lea    rcx,[rip+0x52125]        # 0x4770da
  424fb5:	mov    edx,0x4
  424fba:	call   0x40fae0
  424fbf:	jmp    0x424fbf
  424fc1:	nop    DWORD PTR [rax+rax*1+0x0]
  424fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424fd0:	push   r15
  424fd2:	push   r14
  424fd4:	push   r13
  424fd6:	push   r12
  424fd8:	push   rbp
  424fd9:	push   rdi
  424fda:	push   rsi
  424fdb:	push   rbx
  424fdc:	sub    rsp,0x28
  424fe0:	mov    edx,0x2e
  424fe5:	mov    r12,rcx
  424fe8:	call   0x438768
  424fed:	test   rax,rax
  424ff0:	mov    rbx,rax
  424ff3:	je     0x42500b
  424ff5:	mov    edx,0x5c
  424ffa:	mov    rcx,rax
  424ffd:	call   0x4387a8
  425002:	test   rax,rax
  425005:	je     0x425106
  42500b:	mov    rcx,r12
  42500e:	call   0x438788
  425013:	lea    rcx,[rip+0x52177]        # 0x477191
  42501a:	mov    rbp,rax
  42501d:	movsxd rbp,ebp
  425020:	call   0x4059c0
  425025:	lea    rdx,[rip+0x5216d]        # 0x477199
  42502c:	lea    rcx,[rip+0x52092]        # 0x4770c5
  425033:	mov    r8,rax
  425036:	xor    r9d,r9d
  425039:	call   0x407790
  42503e:	mov    r13,rax
  425041:	mov    r15,rax
  425044:	movzx  eax,BYTE PTR [r15]
  425048:	test   al,al
  42504a:	je     0x4250e0
  425050:	cmp    al,0x3b
  425052:	je     0x4250e0
  425058:	mov    r9,r15
  42505b:	jmp    0x425066
  42505d:	nop    DWORD PTR [rax]
  425060:	cmp    r10b,0x3b
  425064:	je     0x425073
  425066:	add    r9,0x1
  42506a:	movzx  r10d,BYTE PTR [r9]
  42506e:	test   r10b,r10b
  425071:	jne    0x425060
  425073:	mov    rdi,r9
  425076:	mov    rbx,r9
  425079:	sub    rdi,r15
  42507c:	mov    r14,rdi
  42507f:	add    rdi,rbp
  425082:	lea    rcx,[rdi+0x1]
  425086:	call   0x40e5c0
  42508b:	mov    r8,rbp
  42508e:	mov    rsi,rax
  425091:	mov    rdx,r12
  425094:	mov    rcx,rax
  425097:	call   0x4387f0
  42509c:	lea    rcx,[rsi+rbp*1]
  4250a0:	mov    r8,r14
  4250a3:	mov    rdx,r15
  4250a6:	call   0x4387f0
  4250ab:	mov    rcx,rsi
  4250ae:	mov    BYTE PTR [rsi+rdi*1],0x0
  4250b2:	call   0x424270
  4250b7:	mov    rcx,rsi
  4250ba:	mov    rdi,rax
  4250bd:	call   0x40e6e0
  4250c2:	test   rdi,rdi
  4250c5:	jne    0x4250ea
  4250c7:	cmp    BYTE PTR [rbx],0x0
  4250ca:	lea    r15,[rbx+0x1]
  4250ce:	jne    0x425044
  4250d4:	mov    rcx,r13
  4250d7:	call   0x40e6e0
  4250dc:	xor    eax,eax
  4250de:	jmp    0x4250f5
  4250e0:	mov    rbx,r15
  4250e3:	xor    r14d,r14d
  4250e6:	xor    edi,edi
  4250e8:	jmp    0x42507f
  4250ea:	mov    rcx,r13
  4250ed:	call   0x40e6e0
  4250f2:	mov    rax,rdi
  4250f5:	add    rsp,0x28
  4250f9:	pop    rbx
  4250fa:	pop    rsi
  4250fb:	pop    rdi
  4250fc:	pop    rbp
  4250fd:	pop    r12
  4250ff:	pop    r13
  425101:	pop    r14
  425103:	pop    r15
  425105:	ret    
  425106:	mov    edx,0x2f
  42510b:	mov    rcx,rbx
  42510e:	call   0x4387a8
  425113:	test   rax,rax
  425116:	jne    0x42500b
  42511c:	mov    rcx,r12
  42511f:	add    rsp,0x28
  425123:	pop    rbx
  425124:	pop    rsi
  425125:	pop    rdi
  425126:	pop    rbp
  425127:	pop    r12
  425129:	pop    r13
  42512b:	pop    r14
  42512d:	pop    r15
  42512f:	jmp    0x424270
  425134:	xchg   ax,ax
  425136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425140:	sub    rsp,0x28
  425144:	lea    rcx,[rip+0x5f37d]        # 0x4844c8
  42514b:	call   0x426d40
  425150:	cmp    QWORD PTR [rip+0x5f368],0x0        # 0x4844c0
  425158:	je     0x425172
  42515a:	lea    rcx,[rip+0x5f367]        # 0x4844c8
  425161:	call   0x426d70
  425166:	mov    rax,QWORD PTR [rip+0x5f34b]        # 0x4844b8
  42516d:	add    rsp,0x28
  425171:	ret    
  425172:	call   0x424a80
  425177:	jmp    0x42515a
  425179:	nop    DWORD PTR [rax+0x0]
  425180:	sub    rsp,0x28
  425184:	lea    rcx,[rip+0x5f33d]        # 0x4844c8
  42518b:	call   0x426d40
  425190:	cmp    QWORD PTR [rip+0x5f328],0x0        # 0x4844c0
  425198:	je     0x4251b2
  42519a:	lea    rcx,[rip+0x5f327]        # 0x4844c8
  4251a1:	call   0x426d70
  4251a6:	mov    rax,QWORD PTR [rip+0x5f303]        # 0x4844b0
  4251ad:	add    rsp,0x28
  4251b1:	ret    
  4251b2:	call   0x424a80
  4251b7:	jmp    0x42519a
  4251b9:	nop    DWORD PTR [rax+0x0]
  4251c0:	sub    rsp,0x28
  4251c4:	lea    rcx,[rip+0x5f2fd]        # 0x4844c8
  4251cb:	call   0x426d40
  4251d0:	cmp    QWORD PTR [rip+0x5f2e8],0x0        # 0x4844c0
  4251d8:	je     0x4251f2
  4251da:	lea    rcx,[rip+0x5f2e7]        # 0x4844c8
  4251e1:	call   0x426d70
  4251e6:	mov    rax,QWORD PTR [rip+0x5f2bb]        # 0x4844a8
  4251ed:	add    rsp,0x28
  4251f1:	ret    
  4251f2:	call   0x424a80
  4251f7:	jmp    0x4251da
  4251f9:	nop    DWORD PTR [rax+0x0]
  425200:	sub    rsp,0x28
  425204:	lea    rcx,[rip+0x5f2bd]        # 0x4844c8
  42520b:	call   0x426d40
  425210:	cmp    QWORD PTR [rip+0x5f2a8],0x0        # 0x4844c0
  425218:	je     0x425232
  42521a:	lea    rcx,[rip+0x5f2a7]        # 0x4844c8
  425221:	call   0x426d70
  425226:	mov    rax,QWORD PTR [rip+0x5f293]        # 0x4844c0
  42522d:	add    rsp,0x28
  425231:	ret    
  425232:	call   0x424a80
  425237:	jmp    0x42521a
  425239:	nop    DWORD PTR [rax+0x0]
  425240:	sub    rsp,0x28
  425244:	lea    rcx,[rip+0x5f27d]        # 0x4844c8
  42524b:	call   0x426d40
  425250:	cmp    QWORD PTR [rip+0x5f268],0x0        # 0x4844c0
  425258:	je     0x425272
  42525a:	lea    rcx,[rip+0x5f267]        # 0x4844c8
  425261:	call   0x426d70
  425266:	mov    rax,QWORD PTR [rip+0x5f233]        # 0x4844a0
  42526d:	add    rsp,0x28
  425271:	ret    
  425272:	call   0x424a80
  425277:	jmp    0x42525a
  425279:	nop    DWORD PTR [rax+0x0]
  425280:	push   rbx
  425281:	sub    rsp,0x240
  425288:	lea    rcx,[rip+0x5f1b9]        # 0x484448
  42528f:	call   0x426d40
  425294:	mov    rbx,QWORD PTR [rip+0x5f1a5]        # 0x484440
  42529b:	test   rbx,rbx
  42529e:	je     0x4252c0
  4252a0:	lea    rcx,[rip+0x5f1a1]        # 0x484448
  4252a7:	call   0x426d70
  4252ac:	mov    rax,rbx
  4252af:	add    rsp,0x240
  4252b6:	pop    rbx
  4252b7:	ret    
  4252b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4252c0:	mov    eax,DWORD PTR [rip+0x5f162]        # 0x484428
  4252c6:	test   eax,eax
  4252c8:	jne    0x4252a0
  4252ca:	lea    rbx,[rsp+0x30]
  4252cf:	xor    ecx,ecx
  4252d1:	mov    DWORD PTR [rip+0x5f14d],0x1        # 0x484428
  4252db:	call   QWORD PTR [rip+0x6141f]        # 0x486700
  4252e1:	mov    r8d,0x105
  4252e7:	mov    rdx,rbx
  4252ea:	mov    rcx,rax
  4252ed:	call   QWORD PTR [rip+0x61405]        # 0x4866f8
  4252f3:	test   eax,eax
  4252f5:	jne    0x425300
  4252f7:	mov    rbx,QWORD PTR [rip+0x5f142]        # 0x484440
  4252fe:	jmp    0x4252a0
  425300:	xor    r9d,r9d
  425303:	xor    r8d,r8d
  425306:	mov    rcx,rbx
  425309:	mov    QWORD PTR [rsp+0x20],0x0
  425312:	mov    edx,0xffffffff
  425317:	call   0x4225c0
  42531c:	test   rax,rax
  42531f:	mov    rbx,rax
  425322:	je     0x4252f7
  425324:	mov    rcx,rax
  425327:	call   0x407ca0
  42532c:	mov    rcx,rbx
  42532f:	mov    QWORD PTR [rip+0x5f10a],rax        # 0x484440
  425336:	call   0x40e6e0
  42533b:	jmp    0x4252f7
  42533d:	nop    DWORD PTR [rax]
  425340:	push   rbx
  425341:	sub    rsp,0x20
  425345:	mov    rbx,rcx
  425348:	lea    rcx,[rip+0x5f0f9]        # 0x484448
  42534f:	call   0x426d40
  425354:	mov    rcx,QWORD PTR [rip+0x5f0e5]        # 0x484440
  42535b:	call   0x40e6e0
  425360:	mov    rcx,rbx
  425363:	call   0x4182b0
  425368:	lea    rcx,[rip+0x5f0d9]        # 0x484448
  42536f:	mov    QWORD PTR [rip+0x5f0ca],rax        # 0x484440
  425376:	add    rsp,0x20
  42537a:	pop    rbx
  42537b:	jmp    0x426d70
  425380:	push   rbx
  425381:	sub    rsp,0x20
  425385:	lea    rcx,[rip+0x5f0ac]        # 0x484438
  42538c:	call   0x426d40
  425391:	mov    rbx,QWORD PTR [rip+0x5f098]        # 0x484430
  425398:	lea    rcx,[rip+0x5f099]        # 0x484438
  42539f:	call   0x426d70
  4253a4:	test   rbx,rbx
  4253a7:	je     0x4253b2
  4253a9:	mov    rax,rbx
  4253ac:	add    rsp,0x20
  4253b0:	pop    rbx
  4253b1:	ret    
  4253b2:	add    rsp,0x20
  4253b6:	pop    rbx
  4253b7:	jmp    0x425280
  4253bc:	nop    DWORD PTR [rax+0x0]
  4253c0:	push   rbx
  4253c1:	sub    rsp,0x20
  4253c5:	mov    rbx,rcx
  4253c8:	lea    rcx,[rip+0x5f069]        # 0x484438
  4253cf:	call   0x426d40
  4253d4:	cmp    QWORD PTR [rip+0x5f054],0x0        # 0x484430
  4253dc:	je     0x425410
  4253de:	lea    rcx,[rip+0x5f053]        # 0x484438
  4253e5:	call   0x426d70
  4253ea:	lea    r8,[rip+0x51dbf]        # 0x4771b0
  4253f1:	lea    rcx,[rip+0x51ce2]        # 0x4770da
  4253f8:	mov    edx,0x10
  4253fd:	add    rsp,0x20
  425401:	pop    rbx
  425402:	jmp    0x40fae0
  425407:	nop    WORD PTR [rax+rax*1+0x0]
  425410:	mov    rcx,rbx
  425413:	call   0x4182b0
  425418:	lea    rcx,[rip+0x5f019]        # 0x484438
  42541f:	mov    QWORD PTR [rip+0x5f00a],rax        # 0x484430
  425426:	add    rsp,0x20
  42542a:	pop    rbx
  42542b:	jmp    0x426d70
  425430:	push   rbx
  425431:	sub    rsp,0x30
  425435:	lea    rcx,[rip+0x5f08c]        # 0x4844c8
  42543c:	call   0x426d40
  425441:	mov    rbx,QWORD PTR [rip+0x5f030]        # 0x484478
  425448:	test   rbx,rbx
  42544b:	je     0x425462
  42544d:	lea    rcx,[rip+0x5f074]        # 0x4844c8
  425454:	call   0x426d70
  425459:	mov    rax,rbx
  42545c:	add    rsp,0x30
  425460:	pop    rbx
  425461:	ret    
  425462:	mov    ecx,0x1c
  425467:	call   0x424640
  42546c:	test   rax,rax
  42546f:	mov    rbx,rax
  425472:	je     0x425479
  425474:	cmp    BYTE PTR [rax],0x0
  425477:	jne    0x4254a8
  425479:	cmp    QWORD PTR [rip+0x5f03f],0x0        # 0x4844c0
  425481:	je     0x4254e0
  425483:	mov    rcx,QWORD PTR [rip+0x5f01e]        # 0x4844a8
  42548a:	test   rcx,rcx
  42548d:	je     0x4254b1
  42548f:	lea    r8,[rip+0x51d49]        # 0x4771df
  425496:	lea    rdx,[rip+0x51d48]        # 0x4771e5
  42549d:	xor    r9d,r9d
  4254a0:	call   0x407800
  4254a5:	mov    rbx,rax
  4254a8:	mov    QWORD PTR [rip+0x5efc9],rbx        # 0x484478
  4254af:	jmp    0x42544d
  4254b1:	mov    rdx,QWORD PTR [rip+0x5f000]        # 0x4844b8
  4254b8:	mov    rcx,QWORD PTR [rip+0x5f001]        # 0x4844c0
  4254bf:	lea    r9,[rip+0x51d19]        # 0x4771df
  4254c6:	lea    r8,[rip+0x51d18]        # 0x4771e5
  4254cd:	mov    QWORD PTR [rsp+0x20],0x0
  4254d6:	call   0x407800
  4254db:	mov    rbx,rax
  4254de:	jmp    0x4254a8
  4254e0:	call   0x424a80
  4254e5:	jmp    0x425483
  4254e7:	nop    WORD PTR [rax+rax*1+0x0]
  4254f0:	sub    rsp,0x28
  4254f4:	lea    rcx,[rip+0x5efcd]        # 0x4844c8
  4254fb:	call   0x426d40
  425500:	cmp    QWORD PTR [rip+0x5ef58],0x0        # 0x484460
  425508:	je     0x425522
  42550a:	lea    rcx,[rip+0x5efb7]        # 0x4844c8
  425511:	call   0x426d70
  425516:	mov    rax,QWORD PTR [rip+0x5ef43]        # 0x484460
  42551d:	add    rsp,0x28
  425521:	ret    
  425522:	mov    ecx,0x1c
  425527:	call   0x424640
  42552c:	test   rax,rax
  42552f:	je     0x425536
  425531:	cmp    BYTE PTR [rax],0x0
  425534:	jne    0x42555b
  425536:	cmp    QWORD PTR [rip+0x5ef82],0x0        # 0x4844c0
  42553e:	je     0x425583
  425540:	mov    rcx,QWORD PTR [rip+0x5ef61]        # 0x4844a8
  425547:	test   rcx,rcx
  42554a:	je     0x425564
  42554c:	lea    rdx,[rip+0x51c99]        # 0x4771ec
  425553:	xor    r8d,r8d
  425556:	call   0x407800
  42555b:	mov    QWORD PTR [rip+0x5eefe],rax        # 0x484460
  425562:	jmp    0x42550a
  425564:	mov    rdx,QWORD PTR [rip+0x5ef4d]        # 0x4844b8
  42556b:	mov    rcx,QWORD PTR [rip+0x5ef4e]        # 0x4844c0
  425572:	lea    r8,[rip+0x51c73]        # 0x4771ec
  425579:	xor    r9d,r9d
  42557c:	call   0x407800
  425581:	jmp    0x42555b
  425583:	call   0x424a80
  425588:	jmp    0x425540
  42558a:	nop    WORD PTR [rax+rax*1+0x0]
  425590:	push   rbx
  425591:	sub    rsp,0x20
  425595:	lea    rcx,[rip+0x5ef2c]        # 0x4844c8
  42559c:	call   0x426d40
  4255a1:	mov    rbx,QWORD PTR [rip+0x5eec0]        # 0x484468
  4255a8:	test   rbx,rbx
  4255ab:	je     0x4255c2
  4255ad:	lea    rcx,[rip+0x5ef14]        # 0x4844c8
  4255b4:	call   0x426d70
  4255b9:	mov    rax,rbx
  4255bc:	add    rsp,0x20
  4255c0:	pop    rbx
  4255c1:	ret    
  4255c2:	mov    ecx,0x20
  4255c7:	call   0x424640
  4255cc:	test   rax,rax
  4255cf:	mov    rbx,rax
  4255d2:	je     0x4255d9
  4255d4:	cmp    BYTE PTR [rax],0x0
  4255d7:	jne    0x425601
  4255d9:	cmp    QWORD PTR [rip+0x5eedf],0x0        # 0x4844c0
  4255e1:	je     0x42562c
  4255e3:	mov    rcx,QWORD PTR [rip+0x5eebe]        # 0x4844a8
  4255ea:	test   rcx,rcx
  4255ed:	je     0x42560a
  4255ef:	lea    rdx,[rip+0x51bfe]        # 0x4771f4
  4255f6:	xor    r8d,r8d
  4255f9:	call   0x407800
  4255fe:	mov    rbx,rax
  425601:	mov    QWORD PTR [rip+0x5ee60],rbx        # 0x484468
  425608:	jmp    0x4255ad
  42560a:	mov    rdx,QWORD PTR [rip+0x5eea7]        # 0x4844b8
  425611:	mov    rcx,QWORD PTR [rip+0x5eea8]        # 0x4844c0
  425618:	lea    r8,[rip+0x51bd5]        # 0x4771f4
  42561f:	xor    r9d,r9d
  425622:	call   0x407800
  425627:	mov    rbx,rax
  42562a:	jmp    0x425601
  42562c:	call   0x424a80
  425631:	jmp    0x4255e3
  425633:	nop    DWORD PTR [rax]
  425636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425640:	jmp    0x425590
  425645:	nop
  425646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425650:	push   rdi
  425651:	push   rsi
  425652:	push   rbx
  425653:	sub    rsp,0x20
  425657:	lea    rcx,[rip+0x5ee6a]        # 0x4844c8
  42565e:	call   0x426d40
  425663:	mov    rdi,QWORD PTR [rip+0x5ede6]        # 0x484450
  42566a:	test   rdi,rdi
  42566d:	je     0x4256f1
  425673:	mov    ecx,0x40
  425678:	xor    ebx,ebx
  42567a:	call   0x40e610
  42567f:	mov    QWORD PTR [rip+0x5edca],rax        # 0x484450
  425686:	call   0x4246d0
  42568b:	jmp    0x4256b5
  42568d:	nop    DWORD PTR [rax]
  425690:	mov    rax,QWORD PTR [rip+0x5edb9]        # 0x484450
  425697:	mov    rcx,QWORD PTR [rax+rbx*1]
  42569b:	call   0x40e6e0
  4256a0:	mov    rax,QWORD PTR [rip+0x5eda9]        # 0x484450
  4256a7:	mov    QWORD PTR [rax+rbx*1],rsi
  4256ab:	add    rbx,0x8
  4256af:	cmp    rbx,0x40
  4256b3:	je     0x4256e9
  4256b5:	mov    rax,rbx
  4256b8:	add    rax,QWORD PTR [rip+0x5ed91]        # 0x484450
  4256bf:	mov    rsi,QWORD PTR [rdi+rbx*1]
  4256c3:	mov    rdx,QWORD PTR [rax]
  4256c6:	test   rdx,rdx
  4256c9:	je     0x425704
  4256cb:	mov    rcx,rsi
  4256ce:	call   0x41bd60
  4256d3:	test   eax,eax
  4256d5:	je     0x425690
  4256d7:	mov    rcx,rsi
  4256da:	add    rbx,0x8
  4256de:	call   0x40e6e0
  4256e3:	cmp    rbx,0x40
  4256e7:	jne    0x4256b5
  4256e9:	mov    rcx,rdi
  4256ec:	call   0x40e6e0
  4256f1:	lea    rcx,[rip+0x5edd0]        # 0x4844c8
  4256f8:	add    rsp,0x20
  4256fc:	pop    rbx
  4256fd:	pop    rsi
  4256fe:	pop    rdi
  4256ff:	jmp    0x426d70
  425704:	mov    QWORD PTR [rax],rsi
  425707:	jmp    0x4256ab
  425709:	nop    DWORD PTR [rax+0x0]
  425710:	push   rsi
  425711:	push   rbx
  425712:	sub    rsp,0x28
  425716:	mov    ebx,ecx
  425718:	cmp    ebx,0x7
  42571b:	ja     0x425751
  42571d:	lea    rcx,[rip+0x5eda4]        # 0x4844c8
  425724:	call   0x426d40
  425729:	cmp    QWORD PTR [rip+0x5ed1f],0x0        # 0x484450
  425731:	je     0x425774
  425733:	lea    rcx,[rip+0x5ed8e]        # 0x4844c8
  42573a:	call   0x426d70
  42573f:	mov    rax,QWORD PTR [rip+0x5ed0a]        # 0x484450
  425746:	mov    rax,QWORD PTR [rax+rbx*8]
  42574a:	add    rsp,0x28
  42574e:	pop    rbx
  42574f:	pop    rsi
  425750:	ret    
  425751:	lea    r8,[rip+0x51ab0]        # 0x477208
  425758:	lea    rdx,[rip+0x51bd1]        # 0x477330
  42575f:	lea    rcx,[rip+0x51974]        # 0x4770da
  425766:	call   0x40fd20
  42576b:	xor    eax,eax
  42576d:	add    rsp,0x28
  425771:	pop    rbx
  425772:	pop    rsi
  425773:	ret    
  425774:	mov    ecx,0x40
  425779:	call   0x40e610
  42577e:	mov    QWORD PTR [rip+0x5eccb],rax        # 0x484450
  425785:	call   0x4246d0
  42578a:	mov    rsi,QWORD PTR [rip+0x5ecbf]        # 0x484450
  425791:	cmp    QWORD PTR [rsi],0x0
  425795:	jne    0x425733
  425797:	cmp    QWORD PTR [rip+0x5ed21],0x0        # 0x4844c0
  42579f:	je     0x4257bf
  4257a1:	mov    rcx,QWORD PTR [rip+0x5ed00]        # 0x4844a8
  4257a8:	lea    rdx,[rip+0x51a4c]        # 0x4771fb
  4257af:	xor    r8d,r8d
  4257b2:	call   0x407800
  4257b7:	mov    QWORD PTR [rsi],rax
  4257ba:	jmp    0x425733
  4257bf:	call   0x424a80
  4257c4:	mov    rsi,QWORD PTR [rip+0x5ec85]        # 0x484450
  4257cb:	jmp    0x4257a1
  4257cd:	nop    DWORD PTR [rax]
  4257d0:	push   r12
  4257d2:	push   rbp
  4257d3:	push   rdi
  4257d4:	push   rsi
  4257d5:	push   rbx
  4257d6:	sub    rsp,0x30
  4257da:	test   rcx,rcx
  4257dd:	mov    rsi,rcx
  4257e0:	je     0x425842
  4257e2:	lea    rcx,[rip+0x5ecdf]        # 0x4844c8
  4257e9:	call   0x426d40
  4257ee:	mov    rcx,rsi
  4257f1:	call   0x424930
  4257f6:	test   rax,rax
  4257f9:	mov    rdi,rax
  4257fc:	je     0x425842
  4257fe:	mov    rcx,QWORD PTR [rip+0x5ec1b]        # 0x484420
  425805:	test   rcx,rcx
  425808:	je     0x425834
  42580a:	mov    rdx,rax
  42580d:	call   0x408de0
  425812:	test   rax,rax
  425815:	mov    rbx,rax
  425818:	je     0x425842
  42581a:	lea    rcx,[rip+0x5eca7]        # 0x4844c8
  425821:	call   0x426d70
  425826:	mov    rax,rbx
  425829:	add    rsp,0x30
  42582d:	pop    rbx
  42582e:	pop    rsi
  42582f:	pop    rdi
  425830:	pop    rbp
  425831:	pop    r12
  425833:	ret    
  425834:	xor    edx,edx
  425836:	call   0x408a60
  42583b:	mov    QWORD PTR [rip+0x5ebde],rax        # 0x484420
  425842:	mov    r8d,0x8
  425848:	mov    edx,0x1
  42584d:	mov    ecx,0x1
  425852:	call   0x428e40
  425857:	mov    ecx,0x23
  42585c:	mov    rbx,rax
  42585f:	call   0x424640
  425864:	test   rax,rax
  425867:	mov    QWORD PTR [rsp+0x28],rax
  42586c:	je     0x425881
  42586e:	lea    rdx,[rsp+0x28]
  425873:	mov    r8d,0x1
  425879:	mov    rcx,rbx
  42587c:	call   0x428fe0
  425881:	mov    ecx,0x2e
  425886:	call   0x424640
  42588b:	test   rax,rax
  42588e:	mov    QWORD PTR [rsp+0x28],rax
  425893:	je     0x4258a8
  425895:	lea    rdx,[rsp+0x28]
  42589a:	mov    r8d,0x1
  4258a0:	mov    rcx,rbx
  4258a3:	call   0x428fe0
  4258a8:	mov    rcx,rsi
  4258ab:	call   0x424930
  4258b0:	test   rax,rax
  4258b3:	je     0x4259c3
  4258b9:	mov    rcx,rax
  4258bc:	call   0x427820
  4258c1:	lea    rdx,[rip+0x51917]        # 0x4771df
  4258c8:	xor    r8d,r8d
  4258cb:	mov    r12,rax
  4258ce:	mov    rcx,rax
  4258d1:	call   0x407800
  4258d6:	mov    rcx,r12
  4258d9:	mov    rbp,rax
  4258dc:	call   0x40e6e0
  4258e1:	test   rbp,rbp
  4258e4:	mov    QWORD PTR [rsp+0x28],rbp
  4258e9:	je     0x4258fe
  4258eb:	lea    rdx,[rsp+0x28]
  4258f0:	mov    r8d,0x1
  4258f6:	mov    rcx,rbx
  4258f9:	call   0x428fe0
  4258fe:	mov    rax,QWORD PTR [rip+0x562fb]        # 0x47bc00
  425905:	mov    rcx,QWORD PTR [rax]
  425908:	test   rcx,rcx
  42590b:	je     0x42594c
  42590d:	call   0x427820
  425912:	lea    rdx,[rip+0x518c6]        # 0x4771df
  425919:	xor    r8d,r8d
  42591c:	mov    rcx,rax
  42591f:	mov    rbp,rax
  425922:	call   0x407800
  425927:	test   rax,rax
  42592a:	mov    QWORD PTR [rsp+0x28],rax
  42592f:	je     0x425944
  425931:	lea    rdx,[rsp+0x28]
  425936:	mov    r8d,0x1
  42593c:	mov    rcx,rbx
  42593f:	call   0x428fe0
  425944:	mov    rcx,rbp
  425947:	call   0x40e6e0
  42594c:	xor    ecx,ecx
  42594e:	call   0x427820
  425953:	lea    rdx,[rip+0x51885]        # 0x4771df
  42595a:	xor    r8d,r8d
  42595d:	mov    rcx,rax
  425960:	mov    rbp,rax
  425963:	call   0x407800
  425968:	test   rax,rax
  42596b:	mov    QWORD PTR [rsp+0x28],rax
  425970:	je     0x425985
  425972:	lea    rdx,[rsp+0x28]
  425977:	mov    r8d,0x1
  42597d:	mov    rcx,rbx
  425980:	call   0x428fe0
  425985:	mov    rcx,rbp
  425988:	call   0x40e6e0
  42598d:	xor    edx,edx
  42598f:	mov    rcx,rbx
  425992:	call   0x428f80
  425997:	test   rsi,rsi
  42599a:	mov    rbx,rax
  42599d:	je     0x425829
  4259a3:	test   rdi,rdi
  4259a6:	je     0x42581a
  4259ac:	mov    rcx,QWORD PTR [rip+0x5ea6d]        # 0x484420
  4259b3:	mov    r8,rax
  4259b6:	mov    rdx,rdi
  4259b9:	call   0x409090
  4259be:	jmp    0x42581a
  4259c3:	mov    QWORD PTR [rsp+0x28],0x0
  4259cc:	jmp    0x4258fe
  4259d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4259d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4259e0:	push   rbx
  4259e1:	sub    rsp,0x20
  4259e5:	lea    rcx,[rip+0x5eadc]        # 0x4844c8
  4259ec:	call   0x426d40
  4259f1:	mov    rbx,QWORD PTR [rip+0x5ea78]        # 0x484470
  4259f8:	test   rbx,rbx
  4259fb:	je     0x425a12
  4259fd:	lea    rcx,[rip+0x5eac4]        # 0x4844c8
  425a04:	call   0x426d70
  425a09:	mov    rax,rbx
  425a0c:	add    rsp,0x20
  425a10:	pop    rbx
  425a11:	ret    
  425a12:	xor    ecx,ecx
  425a14:	call   0x4257d0
  425a19:	mov    rbx,rax
  425a1c:	mov    QWORD PTR [rip+0x5ea4d],rax        # 0x484470
  425a23:	jmp    0x4259fd
  425a25:	nop
  425a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a30:	push   rsi
  425a31:	push   rbx
  425a32:	sub    rsp,0x28
  425a36:	lea    rcx,[rip+0x5ea8b]        # 0x4844c8
  425a3d:	call   0x426d40
  425a42:	mov    rbx,QWORD PTR [rip+0x5ea0f]        # 0x484458
  425a49:	test   rbx,rbx
  425a4c:	je     0x425a64
  425a4e:	lea    rcx,[rip+0x5ea73]        # 0x4844c8
  425a55:	call   0x426d70
  425a5a:	mov    rax,rbx
  425a5d:	add    rsp,0x28
  425a61:	pop    rbx
  425a62:	pop    rsi
  425a63:	ret    
  425a64:	mov    ecx,0x23
  425a69:	call   0x424640
  425a6e:	xor    r8d,r8d
  425a71:	test   rax,rax
  425a74:	mov    rsi,rax
  425a77:	lea    rdx,[rip+0x51647]        # 0x4770c5
  425a7e:	je     0x425aa0
  425a80:	mov    rcx,rax
  425a83:	call   0x419c40
  425a88:	mov    rcx,rsi
  425a8b:	mov    rbx,rax
  425a8e:	call   0x40e6e0
  425a93:	mov    QWORD PTR [rip+0x5e9be],rbx        # 0x484458
  425a9a:	jmp    0x425a4e
  425a9c:	nop    DWORD PTR [rax+0x0]
  425aa0:	lea    rcx,[rip+0x517ab]        # 0x477252
  425aa7:	call   0x419c40
  425aac:	mov    rbx,rax
  425aaf:	jmp    0x425a93
  425ab1:	nop    DWORD PTR [rax+rax*1+0x0]
  425ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ac0:	test   rcx,rcx
  425ac3:	je     0x425ad0
  425ac5:	mov    QWORD PTR [rcx],0x0
  425acc:	ret    
  425acd:	nop    DWORD PTR [rax]
  425ad0:	lea    r8,[rip+0x5177c]        # 0x477253
  425ad7:	lea    rdx,[rip+0x51832]        # 0x477310
  425ade:	lea    rcx,[rip+0x515f5]        # 0x4770da
  425ae5:	jmp    0x40fd20
  425aea:	nop    WORD PTR [rax+rax*1+0x0]
  425af0:	push   rdi
  425af1:	push   rsi
  425af2:	push   rbx
  425af3:	sub    rsp,0x20
  425af7:	mov    edi,edx
  425af9:	mov    rbx,rcx
  425afc:	xor    ecx,ecx
  425afe:	call   0x41ae90
  425b03:	test   dil,0x2
  425b07:	mov    rsi,rax
  425b0a:	je     0x425bb0
  425b10:	cmp    rbx,0x3ff
  425b17:	jbe    0x425c50
  425b1d:	cmp    rbx,0xfffff
  425b24:	jbe    0x425e00
  425b2a:	cmp    rbx,0x3fffffff
  425b31:	jbe    0x425d60
  425b37:	movabs rax,0xffffffffff
  425b41:	cmp    rbx,rax
  425b44:	jbe    0x425e60
  425b4a:	movabs rax,0x3ffffffffffff
  425b54:	cmp    rbx,rax
  425b57:	jbe    0x425f20
  425b5d:	movabs rax,0xfffffffffffffff
  425b67:	cmp    rbx,rax
  425b6a:	jbe    0x425ec0
  425b70:	test   rbx,rbx
  425b73:	js     0x425f6f
  425b79:	pxor   xmm0,xmm0
  425b7d:	cvtsi2sd xmm0,rbx
  425b82:	mulsd  xmm0,QWORD PTR [rip+0x5182e]        # 0x4773b8
  425b8a:	lea    rdx,[rip+0x51720]        # 0x4772b1
  425b91:	mov    rcx,rsi
  425b94:	movapd xmm2,xmm0
  425b98:	movq   r8,xmm0
  425b9d:	call   0x41bcf0
  425ba2:	jmp    0x425c7e
  425ba7:	nop    WORD PTR [rax+rax*1+0x0]
  425bb0:	cmp    rbx,0x3e7
  425bb7:	jbe    0x425d33
  425bbd:	cmp    rbx,0xf423f
  425bc4:	jbe    0x425dd0
  425bca:	cmp    rbx,0x3b9ac9ff
  425bd1:	jbe    0x425d90
  425bd7:	movabs rax,0xe8d4a50fff
  425be1:	cmp    rbx,rax
  425be4:	jbe    0x425e30
  425bea:	movabs rax,0x38d7ea4c67fff
  425bf4:	cmp    rbx,rax
  425bf7:	jbe    0x425ef0
  425bfd:	movabs rax,0xde0b6b3a763ffff
  425c07:	cmp    rbx,rax
  425c0a:	jbe    0x425e90
  425c10:	test   rbx,rbx
  425c13:	js     0x425f4e
  425c19:	pxor   xmm0,xmm0
  425c1d:	cvtsi2sd xmm0,rbx
  425c22:	divsd  xmm0,QWORD PTR [rip+0x517be]        # 0x4773e8
  425c2a:	lea    rdx,[rip+0x516b1]        # 0x4772e2
  425c31:	mov    rcx,rsi
  425c34:	movapd xmm2,xmm0
  425c38:	movq   r8,xmm0
  425c3d:	call   0x41bcf0
  425c42:	jmp    0x425db9
  425c47:	nop    WORD PTR [rax+rax*1+0x0]
  425c50:	lea    r8,[rip+0x51615]        # 0x47726c
  425c57:	lea    rdx,[rip+0x51617]        # 0x477275
  425c5e:	lea    rcx,[rip+0x51618]        # 0x47727d
  425c65:	mov    r9d,ebx
  425c68:	and    edi,0xfffffffe
  425c6b:	call   0x430b70
  425c70:	mov    r8d,ebx
  425c73:	mov    rdx,rax
  425c76:	mov    rcx,rsi
  425c79:	call   0x41bcf0
  425c7e:	and    edi,0x1
  425c81:	je     0x425d22
  425c87:	cmp    rbx,0x3e7
  425c8e:	mov    r9d,ebx
  425c91:	jbe    0x425cbf
  425c93:	mov    rax,rbx
  425c96:	movabs rdx,0x20c49ba5e353f7cf
  425ca0:	mov    r9,rbx
  425ca3:	shr    rax,0x3
  425ca7:	mul    rdx
  425caa:	shr    rdx,0x4
  425cae:	imul   rdx,rdx,0x3e8
  425cb5:	sub    r9,rdx
  425cb8:	add    r9d,0x3e8
  425cbf:	lea    r8,[rip+0x51624]        # 0x4772ea
  425cc6:	lea    rdx,[rip+0x51626]        # 0x4772f3
  425ccd:	lea    rcx,[rip+0x515a9]        # 0x47727d
  425cd4:	call   0x430b70
  425cd9:	lea    rcx,[rip+0x5161b]        # 0x4772fb
  425ce0:	mov    rdx,rbx
  425ce3:	mov    rdi,rax
  425ce6:	call   0x418470
  425ceb:	lea    rdx,[rip+0x5160f]        # 0x477301
  425cf2:	mov    rbx,rax
  425cf5:	mov    rcx,rsi
  425cf8:	call   0x41ace0
  425cfd:	mov    rdx,rdi
  425d00:	mov    r8,rbx
  425d03:	mov    rcx,rsi
  425d06:	call   0x41bd30
  425d0b:	mov    rcx,rbx
  425d0e:	call   0x40e6e0
  425d13:	lea    rdx,[rip+0x515ea]        # 0x477304
  425d1a:	mov    rcx,rsi
  425d1d:	call   0x41ace0
  425d22:	xor    edx,edx
  425d24:	mov    rcx,rsi
  425d27:	add    rsp,0x20
  425d2b:	pop    rbx
  425d2c:	pop    rsi
  425d2d:	pop    rdi
  425d2e:	jmp    0x41a8e0
  425d33:	lea    r8,[rip+0x51532]        # 0x47726c
  425d3a:	lea    rdx,[rip+0x51534]        # 0x477275
  425d41:	lea    rcx,[rip+0x51535]        # 0x47727d
  425d48:	mov    r9d,ebx
  425d4b:	call   0x430b70
  425d50:	mov    r8d,ebx
  425d53:	mov    rdx,rax
  425d56:	mov    rcx,rsi
  425d59:	call   0x41bcf0
  425d5e:	jmp    0x425d22
  425d60:	pxor   xmm0,xmm0
  425d64:	lea    rdx,[rip+0x51522]        # 0x47728d
  425d6b:	mov    rcx,rax
  425d6e:	cvtsi2sd xmm0,rbx
  425d73:	mulsd  xmm0,QWORD PTR [rip+0x5161d]        # 0x477398
  425d7b:	movapd xmm2,xmm0
  425d7f:	movq   r8,xmm0
  425d84:	call   0x41bcf0
  425d89:	jmp    0x425c7e
  425d8e:	xchg   ax,ax
  425d90:	pxor   xmm0,xmm0
  425d94:	lea    rdx,[rip+0x51527]        # 0x4772c2
  425d9b:	mov    rcx,rax
  425d9e:	cvtsi2sd xmm0,rbx
  425da3:	divsd  xmm0,QWORD PTR [rip+0x5161d]        # 0x4773c8
  425dab:	movapd xmm2,xmm0
  425daf:	movq   r8,xmm0
  425db4:	call   0x41bcf0
  425db9:	and    edi,0x1
  425dbc:	jne    0x425c93
  425dc2:	jmp    0x425d22
  425dc7:	nop    WORD PTR [rax+rax*1+0x0]
  425dd0:	pxor   xmm0,xmm0
  425dd4:	lea    rdx,[rip+0x514df]        # 0x4772ba
  425ddb:	mov    rcx,rax
  425dde:	cvtsi2sd xmm0,rbx
  425de3:	divsd  xmm0,QWORD PTR [rip+0x515d5]        # 0x4773c0
  425deb:	movapd xmm2,xmm0
  425def:	movq   r8,xmm0
  425df4:	call   0x41bcf0
  425df9:	jmp    0x425db9
  425dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  425e00:	pxor   xmm0,xmm0
  425e04:	lea    rdx,[rip+0x51479]        # 0x477284
  425e0b:	mov    rcx,rax
  425e0e:	cvtsi2sd xmm0,rbx
  425e13:	mulsd  xmm0,QWORD PTR [rip+0x51575]        # 0x477390
  425e1b:	movapd xmm2,xmm0
  425e1f:	movq   r8,xmm0
  425e24:	call   0x41bcf0
  425e29:	jmp    0x425c7e
  425e2e:	xchg   ax,ax
  425e30:	pxor   xmm0,xmm0
  425e34:	lea    rdx,[rip+0x5148f]        # 0x4772ca
  425e3b:	mov    rcx,rsi
  425e3e:	cvtsi2sd xmm0,rbx
  425e43:	divsd  xmm0,QWORD PTR [rip+0x51585]        # 0x4773d0
  425e4b:	movapd xmm2,xmm0
  425e4f:	movq   r8,xmm0
  425e54:	call   0x41bcf0
  425e59:	jmp    0x425db9
  425e5e:	xchg   ax,ax
  425e60:	pxor   xmm0,xmm0
  425e64:	lea    rdx,[rip+0x5142b]        # 0x477296
  425e6b:	mov    rcx,rsi
  425e6e:	cvtsi2sd xmm0,rbx
  425e73:	mulsd  xmm0,QWORD PTR [rip+0x51525]        # 0x4773a0
  425e7b:	movapd xmm2,xmm0
  425e7f:	movq   r8,xmm0
  425e84:	call   0x41bcf0
  425e89:	jmp    0x425c7e
  425e8e:	xchg   ax,ax
  425e90:	pxor   xmm0,xmm0
  425e94:	lea    rdx,[rip+0x5143f]        # 0x4772da
  425e9b:	mov    rcx,rsi
  425e9e:	cvtsi2sd xmm0,rbx
  425ea3:	divsd  xmm0,QWORD PTR [rip+0x51535]        # 0x4773e0
  425eab:	movapd xmm2,xmm0
  425eaf:	movq   r8,xmm0
  425eb4:	call   0x41bcf0
  425eb9:	jmp    0x425db9
  425ebe:	xchg   ax,ax
  425ec0:	pxor   xmm0,xmm0
  425ec4:	lea    rdx,[rip+0x513dd]        # 0x4772a8
  425ecb:	mov    rcx,rsi
  425ece:	cvtsi2sd xmm0,rbx
  425ed3:	mulsd  xmm0,QWORD PTR [rip+0x514d5]        # 0x4773b0
  425edb:	movapd xmm2,xmm0
  425edf:	movq   r8,xmm0
  425ee4:	call   0x41bcf0
  425ee9:	jmp    0x425c7e
  425eee:	xchg   ax,ax
  425ef0:	pxor   xmm0,xmm0
  425ef4:	lea    rdx,[rip+0x513d7]        # 0x4772d2
  425efb:	mov    rcx,rsi
  425efe:	cvtsi2sd xmm0,rbx
  425f03:	divsd  xmm0,QWORD PTR [rip+0x514cd]        # 0x4773d8
  425f0b:	movapd xmm2,xmm0
  425f0f:	movq   r8,xmm0
  425f14:	call   0x41bcf0
  425f19:	jmp    0x425db9
  425f1e:	xchg   ax,ax
  425f20:	pxor   xmm0,xmm0
  425f24:	lea    rdx,[rip+0x51374]        # 0x47729f
  425f2b:	mov    rcx,rsi
  425f2e:	cvtsi2sd xmm0,rbx
  425f33:	mulsd  xmm0,QWORD PTR [rip+0x5146d]        # 0x4773a8
  425f3b:	movapd xmm2,xmm0
  425f3f:	movq   r8,xmm0
  425f44:	call   0x41bcf0
  425f49:	jmp    0x425c7e
  425f4e:	mov    rax,rbx
  425f51:	mov    rdx,rbx
  425f54:	pxor   xmm0,xmm0
  425f58:	shr    rax,1
  425f5b:	and    edx,0x1
  425f5e:	or     rax,rdx
  425f61:	cvtsi2sd xmm0,rax
  425f66:	addsd  xmm0,xmm0
  425f6a:	jmp    0x425c22
  425f6f:	mov    rax,rbx
  425f72:	mov    rdx,rbx
  425f75:	pxor   xmm0,xmm0
  425f79:	shr    rax,1
  425f7c:	and    edx,0x1
  425f7f:	or     rax,rdx
  425f82:	cvtsi2sd xmm0,rax
  425f87:	addsd  xmm0,xmm0
  425f8b:	jmp    0x425b82
  425f90:	xor    edx,edx
  425f92:	jmp    0x425af0
  425f97:	nop    WORD PTR [rax+rax*1+0x0]
  425fa0:	push   rbx
  425fa1:	sub    rsp,0x20
  425fa5:	cmp    rcx,0x3ff
  425fac:	mov    rbx,rcx
  425faf:	jle    0x426030
  425fb1:	cmp    rcx,0xfffff
  425fb8:	jle    0x4260b2
  425fbe:	cmp    rcx,0x3fffffff
  425fc5:	jle    0x426060
  425fcb:	movabs rax,0xffffffffff
  425fd5:	cmp    rcx,rax
  425fd8:	jle    0x4260e0
  425fde:	movabs rax,0x3ffffffffffff
  425fe8:	cmp    rcx,rax
  425feb:	jle    0x426110
  425ff1:	pxor   xmm0,xmm0
  425ff5:	movabs rax,0xfffffffffffffff
  425fff:	cmp    rcx,rax
  426002:	cvtsi2sd xmm0,rcx
  426007:	jle    0x426090
  42600d:	mulsd  xmm0,QWORD PTR [rip+0x513a3]        # 0x4773b8
  426015:	lea    rcx,[rip+0x512c6]        # 0x4772e2
  42601c:	movapd xmm1,xmm0
  426020:	movq   rdx,xmm0
  426025:	add    rsp,0x20
  426029:	pop    rbx
  42602a:	jmp    0x418470
  42602f:	nop
  426030:	mov    r9d,ecx
  426033:	lea    r8,[rip+0x51232]        # 0x47726c
  42603a:	lea    rdx,[rip+0x51234]        # 0x477275
  426041:	lea    rcx,[rip+0x51235]        # 0x47727d
  426048:	call   0x430b70
  42604d:	mov    edx,ebx
  42604f:	mov    rcx,rax
  426052:	add    rsp,0x20
  426056:	pop    rbx
  426057:	jmp    0x418470
  42605c:	nop    DWORD PTR [rax+0x0]
  426060:	pxor   xmm0,xmm0
  426064:	cvtsi2sd xmm0,rcx
  426069:	lea    rcx,[rip+0x51252]        # 0x4772c2
  426070:	mulsd  xmm0,QWORD PTR [rip+0x51320]        # 0x477398
  426078:	movapd xmm1,xmm0
  42607c:	movq   rdx,xmm0
  426081:	add    rsp,0x20
  426085:	pop    rbx
  426086:	jmp    0x418470
  42608b:	nop    DWORD PTR [rax+rax*1+0x0]
  426090:	mulsd  xmm0,QWORD PTR [rip+0x51318]        # 0x4773b0
  426098:	lea    rcx,[rip+0x5123b]        # 0x4772da
  42609f:	movapd xmm1,xmm0
  4260a3:	movq   rdx,xmm0
  4260a8:	add    rsp,0x20
  4260ac:	pop    rbx
  4260ad:	jmp    0x418470
  4260b2:	pxor   xmm0,xmm0
  4260b6:	cvtsi2sd xmm0,rcx
  4260bb:	lea    rcx,[rip+0x51244]        # 0x477306
  4260c2:	mulsd  xmm0,QWORD PTR [rip+0x512c6]        # 0x477390
  4260ca:	movapd xmm1,xmm0
  4260ce:	movq   rdx,xmm0
  4260d3:	add    rsp,0x20
  4260d7:	pop    rbx
  4260d8:	jmp    0x418470
  4260dd:	nop    DWORD PTR [rax]
  4260e0:	pxor   xmm0,xmm0
  4260e4:	cvtsi2sd xmm0,rcx
  4260e9:	lea    rcx,[rip+0x511da]        # 0x4772ca
  4260f0:	mulsd  xmm0,QWORD PTR [rip+0x512a8]        # 0x4773a0
  4260f8:	movapd xmm1,xmm0
  4260fc:	movq   rdx,xmm0
  426101:	add    rsp,0x20
  426105:	pop    rbx
  426106:	jmp    0x418470
  42610b:	nop    DWORD PTR [rax+rax*1+0x0]
  426110:	pxor   xmm0,xmm0
  426114:	cvtsi2sd xmm0,rcx
  426119:	lea    rcx,[rip+0x511b2]        # 0x4772d2
  426120:	mulsd  xmm0,QWORD PTR [rip+0x51280]        # 0x4773a8
  426128:	movapd xmm1,xmm0
  42612c:	movq   rdx,xmm0
  426131:	add    rsp,0x20
  426135:	pop    rbx
  426136:	jmp    0x418470
  42613b:	nop
  42613c:	nop
  42613d:	nop
  42613e:	nop
  42613f:	nop
  426140:	sub    rsp,0x28
  426144:	xor    r9d,r9d
  426147:	xor    r8d,r8d
  42614a:	xor    ecx,ecx
  42614c:	mov    edx,0x1
  426151:	call   QWORD PTR [rip+0x60501]        # 0x486658
  426157:	test   rax,rax
  42615a:	je     0x426161
  42615c:	add    rsp,0x28
  426160:	ret    
  426161:	call   QWORD PTR [rip+0x60581]        # 0x4866e8
  426167:	mov    ecx,eax
  426169:	call   0x427760
  42616e:	lea    r8,[rip+0x5127b]        # 0x4773f0
  426175:	lea    rcx,[rip+0x51298]        # 0x477414
  42617c:	mov    r9,rax
  42617f:	mov    edx,0x4
  426184:	call   0x40fae0
  426189:	jmp    0x426189
  42618b:	nop    DWORD PTR [rax+rax*1+0x0]
  426190:	mov    eax,0x1
  426195:	mov    QWORD PTR [rdx],rcx
  426198:	mov    WORD PTR [rdx+0x8],ax
  42619c:	ret    
  42619d:	nop    DWORD PTR [rax]
  4261a0:	mov    rax,QWORD PTR [rip+0x60611]        # 0x4867b8
  4261a7:	rex.W jmp rax
  4261aa:	nop    WORD PTR [rax+rax*1+0x0]
  4261b0:	mov    rax,QWORD PTR [rip+0x60631]        # 0x4867e8
  4261b7:	rex.W jmp rax
  4261ba:	nop    WORD PTR [rax+rax*1+0x0]
  4261c0:	mov    rax,QWORD PTR [rip+0x60489]        # 0x486650
  4261c7:	rex.W jmp rax
  4261ca:	nop
  4261cb:	nop
  4261cc:	nop
  4261cd:	nop
  4261ce:	nop
  4261cf:	nop
  4261d0:	sub    rsp,0x28
  4261d4:	test   rcx,rcx
  4261d7:	je     0x4261e2
  4261d9:	add    rsp,0x28
  4261dd:	jmp    0x427c60
  4261e2:	lea    r8,[rip+0x51237]        # 0x477420
  4261e9:	lea    rdx,[rip+0x5129a]        # 0x47748a
  4261f0:	lea    rcx,[rip+0x51238]        # 0x47742f
  4261f7:	call   0x40fd20
  4261fc:	mov    eax,0xffffffff
  426201:	add    rsp,0x28
  426205:	ret    
  426206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426210:	sub    rsp,0x38
  426214:	mov    QWORD PTR [rsp+0x48],rdx
  426219:	lea    rdx,[rsp+0x48]
  42621e:	mov    QWORD PTR [rsp+0x50],r8
  426223:	mov    QWORD PTR [rsp+0x58],r9
  426228:	mov    QWORD PTR [rsp+0x28],rdx
  42622d:	call   0x4261d0
  426232:	add    rsp,0x38
  426236:	ret    
  426237:	nop    WORD PTR [rax+rax*1+0x0]
  426240:	sub    rsp,0x28
  426244:	test   rdx,rdx
  426247:	je     0x426252
  426249:	add    rsp,0x28
  42624d:	jmp    0x427bd0
  426252:	lea    r8,[rip+0x511c7]        # 0x477420
  426259:	lea    rdx,[rip+0x5121f]        # 0x47747f
  426260:	lea    rcx,[rip+0x511c8]        # 0x47742f
  426267:	call   0x40fd20
  42626c:	mov    eax,0xffffffff
  426271:	add    rsp,0x28
  426275:	ret    
  426276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426280:	sub    rsp,0x38
  426284:	mov    QWORD PTR [rsp+0x50],r8
  426289:	lea    r8,[rsp+0x50]
  42628e:	mov    QWORD PTR [rsp+0x58],r9
  426293:	mov    QWORD PTR [rsp+0x28],r8
  426298:	call   0x426240
  42629d:	add    rsp,0x38
  4262a1:	ret    
  4262a2:	nop    DWORD PTR [rax+0x0]
  4262a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262b0:	sub    rsp,0x28
  4262b4:	test   rcx,rcx
  4262b7:	je     0x4262d0
  4262b9:	test   rdx,rdx
  4262bc:	je     0x4262f4
  4262be:	add    rsp,0x28
  4262c2:	jmp    0x427cc0
  4262c7:	nop    WORD PTR [rax+rax*1+0x0]
  4262d0:	lea    r8,[rip+0x5115d]        # 0x477434
  4262d7:	lea    rdx,[rip+0x51196]        # 0x477474
  4262de:	lea    rcx,[rip+0x5114a]        # 0x47742f
  4262e5:	call   0x40fd20
  4262ea:	mov    eax,0xffffffff
  4262ef:	add    rsp,0x28
  4262f3:	ret    
  4262f4:	lea    r8,[rip+0x51125]        # 0x477420
  4262fb:	lea    rdx,[rip+0x51172]        # 0x477474
  426302:	lea    rcx,[rip+0x51126]        # 0x47742f
  426309:	call   0x40fd20
  42630e:	mov    eax,0xffffffff
  426313:	add    rsp,0x28
  426317:	ret    
  426318:	nop    DWORD PTR [rax+rax*1+0x0]
  426320:	sub    rsp,0x38
  426324:	mov    QWORD PTR [rsp+0x50],r8
  426329:	lea    r8,[rsp+0x50]
  42632e:	mov    QWORD PTR [rsp+0x58],r9
  426333:	mov    QWORD PTR [rsp+0x28],r8
  426338:	call   0x4262b0
  42633d:	add    rsp,0x38
  426341:	ret    
  426342:	nop    DWORD PTR [rax+0x0]
  426346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426350:	sub    rsp,0x28
  426354:	test   edx,edx
  426356:	je     0x426381
  426358:	test   rcx,rcx
  42635b:	jne    0x426381
  42635d:	lea    r8,[rip+0x510df]        # 0x477443
  426364:	lea    rdx,[rip+0x510fd]        # 0x477468
  42636b:	lea    rcx,[rip+0x510bd]        # 0x47742f
  426372:	call   0x40fd20
  426377:	mov    eax,0xffffffff
  42637c:	add    rsp,0x28
  426380:	ret    
  426381:	test   r8,r8
  426384:	je     0x426391
  426386:	mov    edx,edx
  426388:	add    rsp,0x28
  42638c:	jmp    0x427d50
  426391:	lea    r8,[rip+0x51088]        # 0x477420
  426398:	lea    rdx,[rip+0x510c9]        # 0x477468
  42639f:	lea    rcx,[rip+0x51089]        # 0x47742f
  4263a6:	call   0x40fd20
  4263ab:	mov    eax,0xffffffff
  4263b0:	add    rsp,0x28
  4263b4:	ret    
  4263b5:	nop
  4263b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263c0:	sub    rsp,0x38
  4263c4:	mov    QWORD PTR [rsp+0x58],r9
  4263c9:	lea    r9,[rsp+0x58]
  4263ce:	mov    QWORD PTR [rsp+0x28],r9
  4263d3:	call   0x426350
  4263d8:	add    rsp,0x38
  4263dc:	ret    
  4263dd:	nop    DWORD PTR [rax]
  4263e0:	push   rbx
  4263e1:	sub    rsp,0x20
  4263e5:	test   rcx,rcx
  4263e8:	mov    rbx,rcx
  4263eb:	je     0x426410
  4263ed:	call   0x427de0
  4263f2:	test   eax,eax
  4263f4:	js     0x426400
  4263f6:	add    rsp,0x20
  4263fa:	pop    rbx
  4263fb:	ret    
  4263fc:	nop    DWORD PTR [rax+0x0]
  426400:	mov    QWORD PTR [rbx],0x0
  426407:	add    rsp,0x20
  42640b:	pop    rbx
  42640c:	ret    
  42640d:	nop    DWORD PTR [rax]
  426410:	lea    r8,[rip+0x5101d]        # 0x477434
  426417:	lea    rdx,[rip+0x5103e]        # 0x47745c
  42641e:	lea    rcx,[rip+0x5100a]        # 0x47742f
  426425:	call   0x40fd20
  42642a:	mov    eax,0xffffffff
  42642f:	add    rsp,0x20
  426433:	pop    rbx
  426434:	ret    
  426435:	nop
  426436:	nop
  426437:	nop
  426438:	nop
  426439:	nop
  42643a:	nop
  42643b:	nop
  42643c:	nop
  42643d:	nop
  42643e:	nop
  42643f:	nop
  426440:	mov    QWORD PTR [rcx],0x0
  426447:	ret    
  426448:	nop    DWORD PTR [rax+rax*1+0x0]
  426450:	mov    QWORD PTR [rcx],0x0
  426457:	ret    
  426458:	nop    DWORD PTR [rax+rax*1+0x0]
  426460:	push   rsi
  426461:	push   rbx
  426462:	sub    rsp,0x28
  426466:	mov    eax,DWORD PTR [rcx+0x28]
  426469:	mov    rbx,rcx
  42646c:	lea    rsi,[rcx+0x30]
  426470:	test   eax,eax
  426472:	jne    0x426493
  426474:	mov    rcx,rsi
  426477:	call   QWORD PTR [rip+0x602eb]        # 0x486768
  42647d:	mov    QWORD PTR [rbx+0x58],0x0
  426485:	mov    DWORD PTR [rbx+0x60],0x0
  42648c:	mov    DWORD PTR [rbx+0x28],0x1
  426493:	mov    rcx,rsi
  426496:	call   QWORD PTR [rip+0x601cc]        # 0x486668
  42649c:	add    DWORD PTR [rbx+0x60],0x1
  4264a0:	mov    rax,QWORD PTR [rip+0x602e1]        # 0x486788
  4264a7:	mov    rcx,rsi
  4264aa:	add    rsp,0x28
  4264ae:	pop    rbx
  4264af:	pop    rsi
  4264b0:	rex.W jmp rax
  4264b3:	nop    DWORD PTR [rax]
  4264b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4264c0:	mov    rax,QWORD PTR [rip+0x602c1]        # 0x486788
  4264c7:	mov    rcx,QWORD PTR [rcx]
  4264ca:	mov    DWORD PTR [rcx+0x2c],0x0
  4264d1:	rex.W jmp rax
  4264d4:	xchg   ax,ax
  4264d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4264e0:	push   rsi
  4264e1:	push   rbx
  4264e2:	sub    rsp,0x28
  4264e6:	mov    rsi,rdx
  4264e9:	call   0x438790
  4264ee:	mov    rbx,rax
  4264f1:	call   QWORD PTR [rip+0x60391]        # 0x486888
  4264f7:	lea    rdx,[rip+0x50fa2]        # 0x4774a0
  4264fe:	lea    rcx,[rax+0x60]
  426502:	mov    r9,rsi
  426505:	mov    r8,rbx
  426508:	call   0x438870
  42650d:	call   0x4388c0
  426512:	nop
  426513:	nop    DWORD PTR [rax]
  426516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426520:	mov    rcx,QWORD PTR [rcx]
  426523:	test   rcx,rcx
  426526:	je     0x426530
  426528:	jmp    0x438850
  42652d:	nop    DWORD PTR [rax]
  426530:	repz ret 
  426532:	nop    DWORD PTR [rax+0x0]
  426536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426540:	push   rsi
  426541:	push   rbx
  426542:	sub    rsp,0x28
  426546:	mov    rbx,QWORD PTR [rcx]
  426549:	test   rbx,rbx
  42654c:	je     0x426580
  42654e:	mov    eax,DWORD PTR [rbx+0x28]
  426551:	mov    rsi,QWORD PTR [rip+0x60108]        # 0x486660
  426558:	test   eax,eax
  42655a:	jne    0x426570
  42655c:	mov    rcx,rbx
  42655f:	call   rsi
  426561:	mov    rcx,rbx
  426564:	add    rsp,0x28
  426568:	pop    rbx
  426569:	pop    rsi
  42656a:	jmp    0x438850
  42656f:	nop
  426570:	lea    rcx,[rbx+0x30]
  426574:	call   rsi
  426576:	jmp    0x42655c
  426578:	nop    DWORD PTR [rax+rax*1+0x0]
  426580:	add    rsp,0x28
  426584:	pop    rbx
  426585:	pop    rsi
  426586:	ret    
  426587:	nop    WORD PTR [rax+rax*1+0x0]
  426590:	push   rbx
  426591:	sub    rsp,0x20
  426595:	mov    ecx,DWORD PTR [rip+0x5df65]        # 0x484500
  42659b:	call   QWORD PTR [rip+0x60277]        # 0x486818
  4265a1:	test   rax,rax
  4265a4:	mov    rbx,rax
  4265a7:	je     0x4265d0
  4265a9:	xor    edx,edx
  4265ab:	mov    ecx,DWORD PTR [rip+0x5df4f]        # 0x484500
  4265b1:	call   QWORD PTR [rip+0x60269]        # 0x486820
  4265b7:	mov    rcx,QWORD PTR [rbx]
  4265ba:	call   QWORD PTR [rip+0x60090]        # 0x486650
  4265c0:	mov    rcx,rbx
  4265c3:	add    rsp,0x20
  4265c7:	pop    rbx
  4265c8:	jmp    0x438850
  4265cd:	nop    DWORD PTR [rax]
  4265d0:	add    rsp,0x20
  4265d4:	pop    rbx
  4265d5:	ret    
  4265d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4265e0:	push   rsi
  4265e1:	push   rbx
  4265e2:	sub    rsp,0x28
  4265e6:	mov    rsi,rcx
  4265e9:	mov    ecx,0x28
  4265ee:	call   0x416130
  4265f3:	mov    rbx,rax
  4265f6:	mov    rcx,rax
  4265f9:	call   QWORD PTR [rip+0x60169]        # 0x486768
  4265ff:	xor    eax,eax
  426601:	lock cmpxchg QWORD PTR [rsi],rbx
  426606:	test   rax,rax
  426609:	je     0x426621
  42660b:	mov    rcx,rbx
  42660e:	call   QWORD PTR [rip+0x6004c]        # 0x486660
  426614:	mov    rdx,rbx
  426617:	mov    ecx,0x28
  42661c:	call   0x4167c0
  426621:	mov    rax,QWORD PTR [rsi]
  426624:	add    rsp,0x28
  426628:	pop    rbx
  426629:	pop    rsi
  42662a:	ret    
  42662b:	nop    DWORD PTR [rax+rax*1+0x0]
  426630:	push   rdi
  426631:	push   rsi
  426632:	push   rbx
  426633:	sub    rsp,0x20
  426637:	mov    rsi,rcx
  42663a:	lea    rcx,[rip+0x5df1f]        # 0x484560
  426641:	call   QWORD PTR [rip+0x60021]        # 0x486668
  426647:	mov    rax,QWORD PTR [rsi]
  42664a:	test   eax,eax
  42664c:	mov    ebx,eax
  42664e:	jne    0x4266aa
  426650:	call   QWORD PTR [rip+0x601ba]        # 0x486810
  426656:	cmp    eax,0xffffffff
  426659:	mov    ebx,eax
  42665b:	je     0x4266e3
  426661:	mov    rdi,QWORD PTR [rsi+0x8]
  426665:	test   rdi,rdi
  426668:	je     0x42669c
  42666a:	mov    ecx,0x18
  42666f:	call   0x438800
  426674:	test   rax,rax
  426677:	mov    rdx,rax
  42667a:	je     0x4266c1
  42667c:	mov    DWORD PTR [rax],ebx
  42667e:	mov    QWORD PTR [rax+0x8],rdi
  426682:	mov    rax,QWORD PTR [rip+0x5deff]        # 0x484588
  426689:	mov    QWORD PTR [rdx+0x10],rax
  42668d:	lock cmpxchg QWORD PTR [rip+0x5def2],rdx        # 0x484588
  426696:	cmp    QWORD PTR [rdx+0x10],rax
  42669a:	jne    0x4266f1
  42669c:	mov    edx,ebx
  42669e:	xor    eax,eax
  4266a0:	lock cmpxchg QWORD PTR [rsi],rdx
  4266a5:	test   rax,rax
  4266a8:	jne    0x4266d5
  4266aa:	lea    rcx,[rip+0x5deaf]        # 0x484560
  4266b1:	call   QWORD PTR [rip+0x600d1]        # 0x486788
  4266b7:	mov    eax,ebx
  4266b9:	add    rsp,0x20
  4266bd:	pop    rbx
  4266be:	pop    rsi
  4266bf:	pop    rdi
  4266c0:	ret    
  4266c1:	call   QWORD PTR [rip+0x60219]        # 0x4868e0
  4266c7:	mov    ecx,DWORD PTR [rax]
  4266c9:	lea    rdx,[rip+0x50e5a]        # 0x47752a
  4266d0:	call   0x4264e0
  4266d5:	lea    rdx,[rip+0x50e38]        # 0x477514
  4266dc:	xor    ecx,ecx
  4266de:	call   0x4264e0
  4266e3:	lea    rdx,[rip+0x50e0b]        # 0x4774f5
  4266ea:	xor    ecx,ecx
  4266ec:	call   0x4264e0
  4266f1:	lea    rdx,[rip+0x50e06]        # 0x4774fe
  4266f8:	xor    ecx,ecx
  4266fa:	call   0x4264e0
  4266ff:	nop
  426700:	push   rbx
  426701:	sub    rsp,0x30
  426705:	mov    rax,QWORD PTR [rcx]
  426708:	test   rax,rax
  42670b:	je     0x426713
  42670d:	add    rsp,0x30
  426711:	pop    rbx
  426712:	ret    
  426713:	mov    rbx,rcx
  426716:	lea    rcx,[rip+0x5de03]        # 0x484520
  42671d:	call   QWORD PTR [rip+0x5ff45]        # 0x486668
  426723:	mov    rax,QWORD PTR [rbx]
  426726:	test   rax,rax
  426729:	je     0x426750
  42672b:	mov    QWORD PTR [rsp+0x28],rax
  426730:	lea    rcx,[rip+0x5dde9]        # 0x484520
  426737:	call   QWORD PTR [rip+0x6004b]        # 0x486788
  42673d:	mov    rax,QWORD PTR [rsp+0x28]
  426742:	add    rsp,0x30
  426746:	pop    rbx
  426747:	ret    
  426748:	nop    DWORD PTR [rax+rax*1+0x0]
  426750:	mov    ecx,0x68
  426755:	call   0x438800
  42675a:	test   rax,rax
  42675d:	je     0x426785
  42675f:	mov    rcx,rax
  426762:	mov    QWORD PTR [rsp+0x28],rax
  426767:	call   QWORD PTR [rip+0x5fffb]        # 0x486768
  42676d:	mov    rax,QWORD PTR [rsp+0x28]
  426772:	mov    DWORD PTR [rax+0x2c],0x0
  426779:	mov    DWORD PTR [rax+0x28],0x0
  426780:	mov    QWORD PTR [rbx],rax
  426783:	jmp    0x42672b
  426785:	call   QWORD PTR [rip+0x60155]        # 0x4868e0
  42678b:	mov    ecx,DWORD PTR [rax]
  42678d:	lea    rdx,[rip+0x50d96]        # 0x47752a
  426794:	call   0x4264e0
  426799:	nop
  42679a:	nop    WORD PTR [rax+rax*1+0x0]
  4267a0:	push   rsi
  4267a1:	push   rbx
  4267a2:	sub    rsp,0x28
  4267a6:	xor    esi,esi
  4267a8:	call   0x426700
  4267ad:	mov    rbx,rax
  4267b0:	mov    rcx,rax
  4267b3:	call   QWORD PTR [rip+0x6006f]        # 0x486828
  4267b9:	test   eax,eax
  4267bb:	je     0x4267cd
  4267bd:	mov    eax,DWORD PTR [rbx+0x2c]
  4267c0:	mov    rcx,rbx
  4267c3:	test   eax,eax
  4267c5:	je     0x4267e0
  4267c7:	call   QWORD PTR [rip+0x5ffbb]        # 0x486788
  4267cd:	mov    eax,esi
  4267cf:	add    rsp,0x28
  4267d3:	pop    rbx
  4267d4:	pop    rsi
  4267d5:	ret    
  4267d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4267e0:	mov    esi,0x1
  4267e5:	call   0x426460
  4267ea:	mov    rcx,rbx
  4267ed:	call   QWORD PTR [rip+0x5ff95]        # 0x486788
  4267f3:	mov    eax,esi
  4267f5:	add    rsp,0x28
  4267f9:	pop    rbx
  4267fa:	pop    rsi
  4267fb:	ret    
  4267fc:	nop    DWORD PTR [rax+0x0]
  426800:	push   rbp
  426801:	push   rdi
  426802:	push   rsi
  426803:	push   rbx
  426804:	sub    rsp,0x28
  426808:	xor    esi,esi
  42680a:	call   0x426700
  42680f:	mov    rbx,rax
  426812:	mov    rcx,rax
  426815:	call   QWORD PTR [rip+0x6000d]        # 0x486828
  42681b:	test   eax,eax
  42681d:	je     0x42682f
  42681f:	mov    edx,DWORD PTR [rbx+0x2c]
  426822:	test   edx,edx
  426824:	je     0x426840
  426826:	mov    rcx,rbx
  426829:	call   QWORD PTR [rip+0x5ff59]        # 0x486788
  42682f:	mov    eax,esi
  426831:	add    rsp,0x28
  426835:	pop    rbx
  426836:	pop    rsi
  426837:	pop    rdi
  426838:	pop    rbp
  426839:	ret    
  42683a:	nop    WORD PTR [rax+rax*1+0x0]
  426840:	mov    eax,DWORD PTR [rbx+0x28]
  426843:	mov    DWORD PTR [rbx+0x2c],0x1
  42684a:	test   eax,eax
  42684c:	jne    0x426860
  42684e:	mov    esi,0x1
  426853:	mov    eax,esi
  426855:	add    rsp,0x28
  426859:	pop    rbx
  42685a:	pop    rsi
  42685b:	pop    rdi
  42685c:	pop    rbp
  42685d:	ret    
  42685e:	xchg   ax,ax
  426860:	lea    rdi,[rbx+0x30]
  426864:	mov    rcx,rdi
  426867:	call   QWORD PTR [rip+0x5fdfb]        # 0x486668
  42686d:	mov    ebp,DWORD PTR [rbx+0x60]
  426870:	mov    rcx,rdi
  426873:	mov    rdi,QWORD PTR [rip+0x5ff0e]        # 0x486788
  42687a:	call   rdi
  42687c:	test   ebp,ebp
  42687e:	je     0x42684e
  426880:	mov    rcx,rbx
  426883:	call   rdi
  426885:	jmp    0x42682f
  426887:	nop    WORD PTR [rax+rax*1+0x0]
  426890:	push   rsi
  426891:	push   rbx
  426892:	sub    rsp,0x28
  426896:	call   0x426700
  42689b:	lea    rsi,[rax+0x30]
  42689f:	mov    rbx,rax
  4268a2:	mov    rcx,rsi
  4268a5:	call   QWORD PTR [rip+0x5fdbd]        # 0x486668
  4268ab:	mov    eax,DWORD PTR [rbx+0x60]
  4268ae:	lea    edx,[rax-0x1]
  4268b1:	test   edx,edx
  4268b3:	mov    DWORD PTR [rbx+0x60],edx
  4268b6:	jne    0x4268ca
  4268b8:	mov    rax,QWORD PTR [rbx+0x58]
  4268bc:	test   rax,rax
  4268bf:	je     0x4268ca
  4268c1:	mov    rcx,QWORD PTR [rax]
  4268c4:	call   QWORD PTR [rip+0x5ff1e]        # 0x4867e8
  4268ca:	mov    rax,QWORD PTR [rip+0x5feb7]        # 0x486788
  4268d1:	mov    rcx,rsi
  4268d4:	add    rsp,0x28
  4268d8:	pop    rbx
  4268d9:	pop    rsi
  4268da:	rex.W jmp rax
  4268dd:	nop    DWORD PTR [rax]
  4268e0:	push   rbx
  4268e1:	sub    rsp,0x20
  4268e5:	mov    rdx,QWORD PTR [rcx]
  4268e8:	test   rdx,rdx
  4268eb:	je     0x426900
  4268ed:	mov    rax,rdx
  4268f0:	add    rsp,0x20
  4268f4:	pop    rbx
  4268f5:	ret    
  4268f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426900:	mov    rbx,rcx
  426903:	mov    ecx,0x10
  426908:	call   0x438800
  42690d:	test   rax,rax
  426910:	mov    rdx,rax
  426913:	je     0x426939
  426915:	xor    eax,eax
  426917:	mov    QWORD PTR [rdx],0x0
  42691e:	mov    QWORD PTR [rdx+0x8],rdx
  426922:	lock cmpxchg QWORD PTR [rbx],rdx
  426927:	test   rax,rax
  42692a:	je     0x4268ed
  42692c:	mov    rcx,rdx
  42692f:	call   0x438850
  426934:	mov    rdx,QWORD PTR [rbx]
  426937:	jmp    0x4268ed
  426939:	call   QWORD PTR [rip+0x5ffa1]        # 0x4868e0
  42693f:	mov    ecx,DWORD PTR [rax]
  426941:	lea    rdx,[rip+0x50be2]        # 0x47752a
  426948:	call   0x4264e0
  42694d:	nop
  42694e:	xchg   ax,ax
  426950:	push   rbx
  426951:	sub    rsp,0x20
  426955:	call   0x4268e0
  42695a:	mov    rbx,rax
  42695d:	lea    rcx,[rip+0x5dbbc]        # 0x484520
  426964:	call   QWORD PTR [rip+0x5fcfe]        # 0x486668
  42696a:	mov    rdx,QWORD PTR [rbx]
  42696d:	test   rdx,rdx
  426970:	je     0x426993
  426972:	mov    QWORD PTR [rdx+0x10],0x0
  42697a:	mov    rax,QWORD PTR [rdx+0x8]
  42697e:	test   rax,rax
  426981:	mov    QWORD PTR [rbx],rax
  426984:	je     0x4269b0
  426986:	mov    QWORD PTR [rax+0x10],rbx
  42698a:	mov    rcx,QWORD PTR [rdx]
  42698d:	call   QWORD PTR [rip+0x5fe55]        # 0x4867e8
  426993:	mov    rax,QWORD PTR [rip+0x5fdee]        # 0x486788
  42699a:	lea    rcx,[rip+0x5db7f]        # 0x484520
  4269a1:	add    rsp,0x20
  4269a5:	pop    rbx
  4269a6:	rex.W jmp rax
  4269a9:	nop    DWORD PTR [rax+0x0]
  4269b0:	mov    QWORD PTR [rbx+0x8],rbx
  4269b4:	jmp    0x42698a
  4269b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269c0:	push   rdi
  4269c1:	push   rsi
  4269c2:	push   rbx
  4269c3:	sub    rsp,0x20
  4269c7:	call   0x4268e0
  4269cc:	mov    rsi,rax
  4269cf:	lea    rcx,[rip+0x5db4a]        # 0x484520
  4269d6:	call   QWORD PTR [rip+0x5fc8c]        # 0x486668
  4269dc:	mov    rbx,QWORD PTR [rsi]
  4269df:	mov    QWORD PTR [rsi+0x8],rsi
  4269e3:	mov    QWORD PTR [rsi],0x0
  4269ea:	mov    rdi,QWORD PTR [rip+0x5fdf7]        # 0x4867e8
  4269f1:	test   rbx,rbx
  4269f4:	je     0x426a19
  4269f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a00:	mov    rsi,QWORD PTR [rbx+0x8]
  426a04:	mov    rcx,QWORD PTR [rbx]
  426a07:	call   rdi
  426a09:	mov    QWORD PTR [rbx+0x10],0x0
  426a11:	test   rsi,rsi
  426a14:	mov    rbx,rsi
  426a17:	jne    0x426a00
  426a19:	mov    rax,QWORD PTR [rip+0x5fd68]        # 0x486788
  426a20:	lea    rcx,[rip+0x5daf9]        # 0x484520
  426a27:	add    rsp,0x20
  426a2b:	pop    rbx
  426a2c:	pop    rsi
  426a2d:	pop    rdi
  426a2e:	rex.W jmp rax
  426a31:	nop    DWORD PTR [rax+rax*1+0x0]
  426a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a40:	push   rbx
  426a41:	sub    rsp,0x20
  426a45:	mov    ecx,DWORD PTR [rip+0x5dab5]        # 0x484500
  426a4b:	call   QWORD PTR [rip+0x5fdc7]        # 0x486818
  426a51:	test   rax,rax
  426a54:	mov    rbx,rax
  426a57:	je     0x426a62
  426a59:	mov    rax,rbx
  426a5c:	add    rsp,0x20
  426a60:	pop    rbx
  426a61:	ret    
  426a62:	mov    ecx,0x18
  426a67:	call   0x438800
  426a6c:	test   rax,rax
  426a6f:	mov    rbx,rax
  426a72:	je     0x426aa5
  426a74:	xor    r9d,r9d
  426a77:	xor    r8d,r8d
  426a7a:	xor    edx,edx
  426a7c:	xor    ecx,ecx
  426a7e:	call   QWORD PTR [rip+0x5fbd4]        # 0x486658
  426a84:	test   rax,rax
  426a87:	mov    QWORD PTR [rbx],rax
  426a8a:	je     0x426ab9
  426a8c:	mov    QWORD PTR [rbx+0x10],0x0
  426a94:	mov    rdx,rbx
  426a97:	mov    ecx,DWORD PTR [rip+0x5da63]        # 0x484500
  426a9d:	call   QWORD PTR [rip+0x5fd7d]        # 0x486820
  426aa3:	jmp    0x426a59
  426aa5:	call   QWORD PTR [rip+0x5fc3d]        # 0x4866e8
  426aab:	lea    rdx,[rip+0x50a78]        # 0x47752a
  426ab2:	mov    ecx,eax
  426ab4:	call   0x4264e0
  426ab9:	call   QWORD PTR [rip+0x5fc29]        # 0x4866e8
  426abf:	lea    rdx,[rip+0x50a6b]        # 0x477531
  426ac6:	mov    ecx,eax
  426ac8:	call   0x4264e0
  426acd:	nop
  426ace:	xchg   ax,ax
  426ad0:	push   r13
  426ad2:	push   r12
  426ad4:	push   rbp
  426ad5:	push   rdi
  426ad6:	push   rsi
  426ad7:	push   rbx
  426ad8:	sub    rsp,0x28
  426adc:	mov    esi,r8d
  426adf:	mov    rbp,rdx
  426ae2:	call   0x4268e0
  426ae7:	mov    rdi,rax
  426aea:	call   0x426a40
  426aef:	lea    rcx,[rip+0x5da2a]        # 0x484520
  426af6:	mov    rbx,rax
  426af9:	mov    QWORD PTR [rax+0x8],0x0
  426b01:	mov    r13,QWORD PTR [rip+0x5fb60]        # 0x486668
  426b08:	call   r13
  426b0b:	mov    rax,QWORD PTR [rdi+0x8]
  426b0f:	lea    rcx,[rip+0x5da0a]        # 0x484520
  426b16:	mov    r12,QWORD PTR [rip+0x5fc6b]        # 0x486788
  426b1d:	mov    QWORD PTR [rbx+0x10],rax
  426b21:	mov    QWORD PTR [rax],rbx
  426b24:	lea    rax,[rbx+0x8]
  426b28:	mov    QWORD PTR [rdi+0x8],rax
  426b2c:	call   r12
  426b2f:	mov    rcx,rbp
  426b32:	call   QWORD PTR [rip+0x5dab0]        # 0x4845e8
  426b38:	mov    edx,esi
  426b3a:	mov    rcx,QWORD PTR [rbx]
  426b3d:	call   QWORD PTR [rip+0x5fd0d]        # 0x486850
  426b43:	test   eax,eax
  426b45:	mov    esi,eax
  426b47:	je     0x426b50
  426b49:	cmp    eax,0x102
  426b4e:	jne    0x426bb0
  426b50:	mov    rcx,rbp
  426b53:	call   QWORD PTR [rip+0x5da7f]        # 0x4845d8
  426b59:	cmp    esi,0x102
  426b5f:	je     0x426b75
  426b61:	xor    eax,eax
  426b63:	test   esi,esi
  426b65:	sete   al
  426b68:	add    rsp,0x28
  426b6c:	pop    rbx
  426b6d:	pop    rsi
  426b6e:	pop    rdi
  426b6f:	pop    rbp
  426b70:	pop    r12
  426b72:	pop    r13
  426b74:	ret    
  426b75:	lea    rcx,[rip+0x5d9a4]        # 0x484520
  426b7c:	call   r13
  426b7f:	mov    rax,QWORD PTR [rbx+0x10]
  426b83:	test   rax,rax
  426b86:	je     0x426ba4
  426b88:	mov    rdx,QWORD PTR [rbx+0x8]
  426b8c:	test   rdx,rdx
  426b8f:	je     0x426bc4
  426b91:	mov    QWORD PTR [rdx+0x10],rax
  426b95:	mov    rax,QWORD PTR [rbx+0x10]
  426b99:	mov    QWORD PTR [rax],rdx
  426b9c:	mov    QWORD PTR [rbx+0x10],0x0
  426ba4:	lea    rcx,[rip+0x5d975]        # 0x484520
  426bab:	call   r12
  426bae:	jmp    0x426b61
  426bb0:	call   QWORD PTR [rip+0x5fb32]        # 0x4866e8
  426bb6:	lea    rdx,[rip+0x50980]        # 0x47753d
  426bbd:	mov    ecx,eax
  426bbf:	call   0x4264e0
  426bc4:	mov    QWORD PTR [rdi+0x8],rax
  426bc8:	jmp    0x426b99
  426bca:	nop    WORD PTR [rax+rax*1+0x0]
  426bd0:	push   rbx
  426bd1:	sub    rsp,0x30
  426bd5:	call   0x426700
  426bda:	mov    rbx,rax
  426bdd:	mov    rcx,rax
  426be0:	call   QWORD PTR [rip+0x5fa82]        # 0x486668
  426be6:	mov    eax,DWORD PTR [rbx+0x2c]
  426be9:	test   eax,eax
  426beb:	je     0x426c20
  426bed:	lea    rax,[rip+0x509c7]        # 0x4775bb
  426bf4:	lea    r9,[rip+0x50bc5]        # 0x4777c0
  426bfb:	lea    rdx,[rip+0x50956]        # 0x477558
  426c02:	lea    rcx,[rip+0x509ad]        # 0x4775b6
  426c09:	mov    r8d,0x2de
  426c0f:	mov    QWORD PTR [rsp+0x20],rax
  426c14:	call   0x41e680
  426c19:	nop    DWORD PTR [rax+0x0]
  426c20:	mov    rcx,rbx
  426c23:	call   0x426460
  426c28:	mov    rax,QWORD PTR [rip+0x5fb59]        # 0x486788
  426c2f:	mov    rcx,rbx
  426c32:	add    rsp,0x30
  426c36:	pop    rbx
  426c37:	rex.W jmp rax
  426c3a:	nop    WORD PTR [rax+rax*1+0x0]
  426c40:	push   rdi
  426c41:	push   rsi
  426c42:	push   rbx
  426c43:	sub    rsp,0x30
  426c47:	call   0x426700
  426c4c:	mov    rbx,rax
  426c4f:	mov    rcx,rax
  426c52:	mov    rsi,QWORD PTR [rip+0x5fa0f]        # 0x486668
  426c59:	call   rsi
  426c5b:	mov    ecx,DWORD PTR [rbx+0x2c]
  426c5e:	test   ecx,ecx
  426c60:	jne    0x426c80
  426c62:	mov    eax,DWORD PTR [rbx+0x28]
  426c65:	mov    DWORD PTR [rbx+0x2c],0x1
  426c6c:	test   eax,eax
  426c6e:	jne    0x426cb0
  426c70:	add    rsp,0x30
  426c74:	pop    rbx
  426c75:	pop    rsi
  426c76:	pop    rdi
  426c77:	ret    
  426c78:	nop    DWORD PTR [rax+rax*1+0x0]
  426c80:	lea    rax,[rip+0x50934]        # 0x4775bb
  426c87:	lea    r9,[rip+0x50af2]        # 0x477780
  426c8e:	lea    rdx,[rip+0x508c3]        # 0x477558
  426c95:	lea    rcx,[rip+0x5091a]        # 0x4775b6
  426c9c:	mov    r8d,0x27f
  426ca2:	mov    QWORD PTR [rsp+0x20],rax
  426ca7:	call   0x41e680
  426cac:	nop    DWORD PTR [rax+0x0]
  426cb0:	lea    rdi,[rbx+0x30]
  426cb4:	mov    rcx,rdi
  426cb7:	call   rsi
  426cb9:	mov    edx,DWORD PTR [rbx+0x60]
  426cbc:	test   edx,edx
  426cbe:	jle    0x426d00
  426cc0:	call   0x426a40
  426cc5:	mov    rsi,rax
  426cc8:	mov    QWORD PTR [rbx+0x58],rax
  426ccc:	mov    rcx,rdi
  426ccf:	call   QWORD PTR [rip+0x5fab3]        # 0x486788
  426cd5:	test   rsi,rsi
  426cd8:	je     0x426ce8
  426cda:	mov    edx,0xffffffff
  426cdf:	mov    rcx,QWORD PTR [rsi]
  426ce2:	call   QWORD PTR [rip+0x5fb68]        # 0x486850
  426ce8:	mov    QWORD PTR [rbx+0x58],0x0
  426cf0:	add    rsp,0x30
  426cf4:	pop    rbx
  426cf5:	pop    rsi
  426cf6:	pop    rdi
  426cf7:	ret    
  426cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  426d00:	mov    rcx,rdi
  426d03:	call   QWORD PTR [rip+0x5fa7f]        # 0x486788
  426d09:	jmp    0x426ce8
  426d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  426d10:	mov    rax,QWORD PTR [rip+0x5d8b1]        # 0x4845c8
  426d17:	rex.W jmp rax
  426d1a:	nop    WORD PTR [rax+rax*1+0x0]
  426d20:	mov    rax,QWORD PTR [rip+0x5d8a9]        # 0x4845d0
  426d27:	test   rax,rax
  426d2a:	je     0x426d30
  426d2c:	rex.W jmp rax
  426d2f:	nop
  426d30:	repz ret 
  426d32:	nop    DWORD PTR [rax+0x0]
  426d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d40:	mov    rax,QWORD PTR [rip+0x5d891]        # 0x4845d8
  426d47:	rex.W jmp rax
  426d4a:	nop    WORD PTR [rax+rax*1+0x0]
  426d50:	sub    rsp,0x28
  426d54:	call   QWORD PTR [rip+0x5d886]        # 0x4845e0
  426d5a:	movzx  eax,al
  426d5d:	add    rsp,0x28
  426d61:	ret    
  426d62:	nop    DWORD PTR [rax+0x0]
  426d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d70:	mov    rax,QWORD PTR [rip+0x5d871]        # 0x4845e8
  426d77:	rex.W jmp rax
  426d7a:	nop    WORD PTR [rax+rax*1+0x0]
  426d80:	push   rsi
  426d81:	push   rbx
  426d82:	sub    rsp,0x28
  426d86:	mov    rsi,rcx
  426d89:	mov    ecx,0x28
  426d8e:	call   0x416130
  426d93:	mov    rbx,rax
  426d96:	mov    rcx,rax
  426d99:	call   QWORD PTR [rip+0x5f9c9]        # 0x486768
  426d9f:	mov    QWORD PTR [rsi],rbx
  426da2:	add    rsp,0x28
  426da6:	pop    rbx
  426da7:	pop    rsi
  426da8:	ret    
  426da9:	nop    DWORD PTR [rax+0x0]
  426db0:	push   rbx
  426db1:	sub    rsp,0x20
  426db5:	mov    rbx,QWORD PTR [rcx]
  426db8:	mov    rcx,rbx
  426dbb:	call   QWORD PTR [rip+0x5f89f]        # 0x486660
  426dc1:	mov    rdx,rbx
  426dc4:	mov    ecx,0x28
  426dc9:	add    rsp,0x20
  426dcd:	pop    rbx
  426dce:	jmp    0x4167c0
  426dd3:	nop    DWORD PTR [rax]
  426dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426de0:	sub    rsp,0x28
  426de4:	mov    rax,QWORD PTR [rcx]
  426de7:	test   rax,rax
  426dea:	je     0x426e00
  426dec:	mov    rcx,rax
  426def:	mov    rax,QWORD PTR [rip+0x5f872]        # 0x486668
  426df6:	add    rsp,0x28
  426dfa:	rex.W jmp rax
  426dfd:	nop    DWORD PTR [rax]
  426e00:	call   0x4265e0
  426e05:	jmp    0x426dec
  426e07:	nop    WORD PTR [rax+rax*1+0x0]
  426e10:	mov    rax,QWORD PTR [rip+0x5f971]        # 0x486788
  426e17:	mov    rcx,QWORD PTR [rcx]
  426e1a:	rex.W jmp rax
  426e1d:	nop    DWORD PTR [rax]
  426e20:	sub    rsp,0x28
  426e24:	mov    rax,QWORD PTR [rcx]
  426e27:	test   rax,rax
  426e2a:	je     0x426e40
  426e2c:	mov    rcx,rax
  426e2f:	mov    rax,QWORD PTR [rip+0x5f9f2]        # 0x486828
  426e36:	add    rsp,0x28
  426e3a:	rex.W jmp rax
  426e3d:	nop    DWORD PTR [rax]
  426e40:	call   0x4265e0
  426e45:	jmp    0x426e2c
  426e47:	nop    WORD PTR [rax+rax*1+0x0]
  426e50:	mov    rax,QWORD PTR [rip+0x5d771]        # 0x4845c8
  426e57:	rex.W jmp rax
  426e5a:	nop    WORD PTR [rax+rax*1+0x0]
  426e60:	mov    rax,QWORD PTR [rip+0x5d769]        # 0x4845d0
  426e67:	test   rax,rax
  426e6a:	je     0x426e70
  426e6c:	rex.W jmp rax
  426e6f:	nop
  426e70:	repz ret 
  426e72:	nop    DWORD PTR [rax+0x0]
  426e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e80:	mov    rax,QWORD PTR [rip+0x5d751]        # 0x4845d8
  426e87:	rex.W jmp rax
  426e8a:	nop    WORD PTR [rax+rax*1+0x0]
  426e90:	sub    rsp,0x28
  426e94:	call   QWORD PTR [rip+0x5d746]        # 0x4845e0
  426e9a:	movzx  eax,al
  426e9d:	add    rsp,0x28
  426ea1:	ret    
  426ea2:	nop    DWORD PTR [rax+0x0]
  426ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426eb0:	mov    rax,QWORD PTR [rip+0x5d731]        # 0x4845e8
  426eb7:	rex.W jmp rax
  426eba:	nop    WORD PTR [rax+rax*1+0x0]
  426ec0:	mov    rax,QWORD PTR [rip+0x5d729]        # 0x4845f0
  426ec7:	rex.W jmp rax
  426eca:	nop    WORD PTR [rax+rax*1+0x0]
  426ed0:	sub    rsp,0x28
  426ed4:	call   QWORD PTR [rip+0x5d71e]        # 0x4845f8
  426eda:	movzx  eax,al
  426edd:	add    rsp,0x28
  426ee1:	ret    
  426ee2:	nop    DWORD PTR [rax+0x0]
  426ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ef0:	mov    rax,QWORD PTR [rip+0x5d709]        # 0x484600
  426ef7:	rex.W jmp rax
  426efa:	nop    WORD PTR [rax+rax*1+0x0]
  426f00:	mov    rax,QWORD PTR [rip+0x5d701]        # 0x484608
  426f07:	rex.W jmp rax
  426f0a:	nop    WORD PTR [rax+rax*1+0x0]
  426f10:	mov    rax,QWORD PTR [rip+0x5d6f9]        # 0x484610
  426f17:	test   rax,rax
  426f1a:	je     0x426f20
  426f1c:	rex.W jmp rax
  426f1f:	nop
  426f20:	repz ret 
  426f22:	nop    DWORD PTR [rax+0x0]
  426f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f30:	mov    rax,QWORD PTR [rip+0x5d6f1]        # 0x484628
  426f37:	rex.W jmp rax
  426f3a:	nop    WORD PTR [rax+rax*1+0x0]
  426f40:	mov    rax,QWORD PTR [rip+0x5d6d9]        # 0x484620
  426f47:	rex.W jmp rax
  426f4a:	nop    WORD PTR [rax+rax*1+0x0]
  426f50:	mov    rax,QWORD PTR [rip+0x5d6c1]        # 0x484618
  426f57:	xor    r9d,r9d
  426f5a:	mov    r8d,0xffffffff
  426f60:	rex.W jmp rax
  426f63:	nop    DWORD PTR [rax]
  426f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f70:	push   rdi
  426f71:	push   rsi
  426f72:	push   rbx
  426f73:	sub    rsp,0x20
  426f77:	mov    rbx,r8
  426f7a:	mov    rdi,rcx
  426f7d:	mov    rsi,rdx
  426f80:	call   0x40c040
  426f85:	mov    r8d,0x0
  426f8b:	sub    rbx,rax
  426f8e:	movabs rax,0x1f3fffffc18
  426f98:	cmovs  rbx,r8
  426f9c:	cmp    rbx,rax
  426f9f:	jle    0x426fc1
  426fa1:	mov    r8d,0x418937
  426fa7:	mov    rax,QWORD PTR [rip+0x5d66a]        # 0x484618
  426fae:	xor    r9d,r9d
  426fb1:	mov    rdx,rsi
  426fb4:	mov    rcx,rdi
  426fb7:	add    rsp,0x20
  426fbb:	pop    rbx
  426fbc:	pop    rsi
  426fbd:	pop    rdi
  426fbe:	rex.W jmp rax
  426fc1:	movabs r8,0x20c49ba5e353f7cf
  426fcb:	mov    rax,rbx
  426fce:	sar    rbx,0x3f
  426fd2:	imul   r8
  426fd5:	sar    rdx,0x7
  426fd9:	mov    r8,rdx
  426fdc:	sub    r8d,ebx
  426fdf:	jmp    0x426fa7
  426fe1:	nop    DWORD PTR [rax+rax*1+0x0]
  426fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ff0:	sub    rsp,0x28
  426ff4:	mov    rdx,QWORD PTR [rcx]
  426ff7:	test   edx,edx
  426ff9:	mov    eax,edx
  426ffb:	jne    0x427002
  426ffd:	call   0x426630
  427002:	mov    ecx,eax
  427004:	mov    rax,QWORD PTR [rip+0x5f80d]        # 0x486818
  42700b:	add    rsp,0x28
  42700f:	rex.W jmp rax
  427012:	nop    DWORD PTR [rax+0x0]
  427016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427020:	sub    rsp,0x38
  427024:	mov    r8,QWORD PTR [rcx]
  427027:	test   r8d,r8d
  42702a:	mov    eax,r8d
  42702d:	jne    0x42703e
  42702f:	mov    QWORD PTR [rsp+0x28],rdx
  427034:	call   0x426630
  427039:	mov    rdx,QWORD PTR [rsp+0x28]
  42703e:	mov    ecx,eax
  427040:	mov    rax,QWORD PTR [rip+0x5f7d9]        # 0x486820
  427047:	add    rsp,0x38
  42704b:	rex.W jmp rax
  42704e:	xchg   ax,ax
  427050:	push   rdi
  427051:	push   rsi
  427052:	push   rbx
  427053:	sub    rsp,0x20
  427057:	mov    rax,QWORD PTR [rcx]
  42705a:	mov    rsi,rcx
  42705d:	mov    rdi,rdx
  427060:	test   eax,eax
  427062:	mov    ebx,eax
  427064:	jne    0x42706d
  427066:	call   0x426630
  42706b:	mov    ebx,eax
  42706d:	mov    ecx,ebx
  42706f:	call   QWORD PTR [rip+0x5f7a3]        # 0x486818
  427075:	test   rax,rax
  427078:	je     0x427089
  42707a:	mov    r8,QWORD PTR [rsi+0x8]
  42707e:	test   r8,r8
  427081:	je     0x427089
  427083:	mov    rcx,rax
  427086:	call   r8
  427089:	mov    rax,QWORD PTR [rip+0x5f790]        # 0x486820
  427090:	mov    rdx,rdi
  427093:	mov    ecx,ebx
  427095:	add    rsp,0x20
  427099:	pop    rbx
  42709a:	pop    rsi
  42709b:	pop    rdi
  42709c:	rex.W jmp rax
  42709f:	nop
  4270a0:	push   rbx
  4270a1:	sub    rsp,0x40
  4270a5:	mov    rbx,rcx
  4270a8:	mov    rcx,QWORD PTR [rcx+0x38]
  4270ac:	call   QWORD PTR [rip+0x5f59e]        # 0x486650
  4270b2:	test   eax,eax
  4270b4:	jne    0x427110
  4270b6:	call   QWORD PTR [rip+0x5f62c]        # 0x4866e8
  4270bc:	mov    ecx,eax
  4270be:	call   0x427760
  4270c3:	lea    rdx,[rip+0x50530]        # 0x4775fa
  4270ca:	mov    QWORD PTR [rsp+0x30],rax
  4270cf:	lea    rax,[rip+0x5073a]        # 0x477810
  4270d6:	lea    r9,[rip+0x5047b]        # 0x477558
  4270dd:	lea    r8,[rip+0x504ec]        # 0x4775d0
  4270e4:	lea    rcx,[rip+0x504cb]        # 0x4775b6
  4270eb:	mov    QWORD PTR [rsp+0x38],rdx
  4270f0:	mov    QWORD PTR [rsp+0x28],rax
  4270f5:	mov    edx,0x4
  4270fa:	mov    DWORD PTR [rsp+0x20],0x1b4
  427102:	call   0x40fae0
  427107:	jmp    0x427107
  427109:	nop    DWORD PTR [rax+0x0]
  427110:	mov    rdx,rbx
  427113:	mov    ecx,0x40
  427118:	add    rsp,0x40
  42711c:	pop    rbx
  42711d:	jmp    0x4167c0
  427122:	nop    DWORD PTR [rax+0x0]
  427126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427130:	sub    rsp,0x28
  427134:	xor    ecx,ecx
  427136:	call   QWORD PTR [rip+0x5f79c]        # 0x4868d8
  42713c:	nop
  42713d:	nop    DWORD PTR [rax]
  427140:	sub    rsp,0x28
  427144:	mov    rax,rcx
  427147:	call   QWORD PTR [rax+0x30]
  42714a:	call   0x427130
  42714f:	nop
  427150:	push   rbp
  427151:	push   rdi
  427152:	push   rsi
  427153:	push   rbx
  427154:	sub    rsp,0x48
  427158:	mov    rdi,rcx
  42715b:	mov    ecx,0x40
  427160:	mov    esi,edx
  427162:	mov    rbp,r8
  427165:	call   0x416750
  42716a:	mov    QWORD PTR [rax+0x30],rdi
  42716e:	mov    rbx,rax
  427171:	lea    rax,[rsp+0x3c]
  427176:	xor    ecx,ecx
  427178:	mov    DWORD PTR [rsp+0x20],0x0
  427180:	mov    r9,rbx
  427183:	mov    QWORD PTR [rsp+0x28],rax
  427188:	lea    r8,[rip+0xffffffffffffffb1]        # 0x427140
  42718f:	mov    edx,esi
  427191:	call   QWORD PTR [rip+0x5f729]        # 0x4868c0
  427197:	test   rax,rax
  42719a:	mov    QWORD PTR [rbx+0x38],rax
  42719e:	je     0x4271ac
  4271a0:	mov    rax,rbx
  4271a3:	add    rsp,0x48
  4271a7:	pop    rbx
  4271a8:	pop    rsi
  4271a9:	pop    rdi
  4271aa:	pop    rbp
  4271ab:	ret    
  4271ac:	call   QWORD PTR [rip+0x5f536]        # 0x4866e8
  4271b2:	mov    ecx,eax
  4271b4:	call   0x427760
  4271b9:	mov    rsi,rax
  4271bc:	call   0x41eb10
  4271c1:	lea    r9,[rip+0x5044b]        # 0x477613
  4271c8:	mov    edx,eax
  4271ca:	xor    r8d,r8d
  4271cd:	mov    rcx,rbp
  4271d0:	mov    QWORD PTR [rsp+0x20],rsi
  4271d5:	call   0x430630
  4271da:	mov    rcx,rsi
  4271dd:	call   0x40e6e0
  4271e2:	mov    rdx,rbx
  4271e5:	mov    ecx,0x40
  4271ea:	call   0x4167c0
  4271ef:	xor    eax,eax
  4271f1:	jmp    0x4271a3
  4271f3:	nop    DWORD PTR [rax]
  4271f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427200:	mov    rax,QWORD PTR [rip+0x5f5f1]        # 0x4867f8
  427207:	xor    ecx,ecx
  427209:	rex.W jmp rax
  42720c:	nop    DWORD PTR [rax+0x0]
  427210:	sub    rsp,0x48
  427214:	mov    edx,0xffffffff
  427219:	mov    rcx,QWORD PTR [rcx+0x38]
  42721d:	call   QWORD PTR [rip+0x5f62d]        # 0x486850
  427223:	cmp    eax,0xffffffff
  427226:	je     0x427230
  427228:	add    rsp,0x48
  42722c:	ret    
  42722d:	nop    DWORD PTR [rax]
  427230:	call   QWORD PTR [rip+0x5f4b2]        # 0x4866e8
  427236:	mov    ecx,eax
  427238:	call   0x427760
  42723d:	lea    rdx,[rip+0x503ec]        # 0x477630
  427244:	mov    QWORD PTR [rsp+0x30],rax
  427249:	lea    rax,[rip+0x505a0]        # 0x4777f0
  427250:	lea    r9,[rip+0x50301]        # 0x477558
  427257:	lea    r8,[rip+0x50372]        # 0x4775d0
  42725e:	lea    rcx,[rip+0x50351]        # 0x4775b6
  427265:	mov    QWORD PTR [rsp+0x38],rdx
  42726a:	mov    QWORD PTR [rsp+0x28],rax
  42726f:	mov    edx,0x4
  427274:	mov    DWORD PTR [rsp+0x20],0x1f1
  42727c:	call   0x40fae0
  427281:	jmp    0x427281
  427283:	nop    DWORD PTR [rax]
  427286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427290:	ret    
  427291:	nop    DWORD PTR [rax+rax*1+0x0]
  427296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272a0:	push   r15
  4272a2:	push   r14
  4272a4:	push   r13
  4272a6:	push   r12
  4272a8:	push   rbp
  4272a9:	push   rdi
  4272aa:	push   rsi
  4272ab:	push   rbx
  4272ac:	sub    rsp,0x48
  4272b0:	lea    rcx,[rip+0x503b3]        # 0x47766a
  4272b7:	call   QWORD PTR [rip+0x5f443]        # 0x486700
  4272bd:	test   rax,rax
  4272c0:	mov    rbx,rax
  4272c3:	je     0x427470
  4272c9:	lea    rdx,[rip+0x503a7]        # 0x477677
  4272d0:	mov    rcx,rax
  4272d3:	mov    rsi,QWORD PTR [rip+0x5f436]        # 0x486710
  4272da:	call   rsi
  4272dc:	test   rax,rax
  4272df:	mov    rdi,rax
  4272e2:	je     0x427470
  4272e8:	lea    rdx,[rip+0x5039a]        # 0x477689
  4272ef:	mov    rcx,rbx
  4272f2:	call   rsi
  4272f4:	test   rax,rax
  4272f7:	mov    rbp,rax
  4272fa:	je     0x427470
  427300:	lea    rdx,[rip+0x5039a]        # 0x4776a1
  427307:	mov    rcx,rbx
  42730a:	call   rsi
  42730c:	test   rax,rax
  42730f:	mov    r12,rax
  427312:	je     0x427470
  427318:	lea    rdx,[rip+0x5039d]        # 0x4776bc
  42731f:	mov    rcx,rbx
  427322:	call   rsi
  427324:	test   rax,rax
  427327:	mov    r13,rax
  42732a:	je     0x427470
  427330:	lea    rdx,[rip+0x5039d]        # 0x4776d4
  427337:	mov    rcx,rbx
  42733a:	call   rsi
  42733c:	test   rax,rax
  42733f:	mov    r14,rax
  427342:	je     0x427470
  427348:	lea    rdx,[rip+0x5039a]        # 0x4776e9
  42734f:	mov    rcx,rbx
  427352:	call   rsi
  427354:	test   rax,rax
  427357:	mov    r15,rax
  42735a:	je     0x427470
  427360:	lea    rdx,[rip+0x5039a]        # 0x477701
  427367:	mov    rcx,rbx
  42736a:	call   rsi
  42736c:	test   rax,rax
  42736f:	mov    QWORD PTR [rsp+0x20],rax
  427374:	je     0x427470
  42737a:	lea    rdx,[rip+0x50395]        # 0x477716
  427381:	mov    rcx,rbx
  427384:	call   rsi
  427386:	test   rax,rax
  427389:	mov    QWORD PTR [rsp+0x28],rax
  42738e:	je     0x427470
  427394:	lea    rdx,[rip+0x50397]        # 0x477732
  42739b:	mov    rcx,rbx
  42739e:	call   rsi
  4273a0:	test   rax,rax
  4273a3:	mov    QWORD PTR [rsp+0x30],rax
  4273a8:	je     0x427470
  4273ae:	lea    rdx,[rip+0x50397]        # 0x47774c
  4273b5:	mov    rcx,rbx
  4273b8:	call   rsi
  4273ba:	test   rax,rax
  4273bd:	mov    QWORD PTR [rsp+0x38],rax
  4273c2:	je     0x427470
  4273c8:	lea    rdx,[rip+0x50396]        # 0x477765
  4273cf:	mov    rcx,rbx
  4273d2:	call   rsi
  4273d4:	test   rax,rax
  4273d7:	je     0x427470
  4273dd:	mov    QWORD PTR [rip+0x5d1e4],rdi        # 0x4845c8
  4273e4:	mov    rdx,QWORD PTR [rsp+0x28]
  4273e9:	mov    rdi,QWORD PTR [rsp+0x20]
  4273ee:	mov    rcx,QWORD PTR [rsp+0x30]
  4273f3:	mov    r8,QWORD PTR [rsp+0x38]
  4273f8:	mov    QWORD PTR [rip+0x5d1bd],0x0        # 0x4845c0
  427403:	mov    QWORD PTR [rip+0x5d1c2],0x0        # 0x4845d0
  42740e:	mov    QWORD PTR [rip+0x5d1c3],rbp        # 0x4845d8
  427415:	mov    QWORD PTR [rip+0x5d1c4],r12        # 0x4845e0
  42741c:	mov    QWORD PTR [rip+0x5d1c5],r13        # 0x4845e8
  427423:	mov    QWORD PTR [rip+0x5d1c6],r14        # 0x4845f0
  42742a:	mov    QWORD PTR [rip+0x5d1c7],r15        # 0x4845f8
  427431:	mov    QWORD PTR [rip+0x5d1c8],rdi        # 0x484600
  427438:	mov    QWORD PTR [rip+0x5d1c9],rdx        # 0x484608
  42743f:	mov    QWORD PTR [rip+0x5d1c6],0x0        # 0x484610
  42744a:	mov    QWORD PTR [rip+0x5d1c7],rcx        # 0x484618
  427451:	mov    QWORD PTR [rip+0x5d1c8],r8        # 0x484620
  427458:	mov    QWORD PTR [rip+0x5d1c9],rax        # 0x484628
  42745f:	mov    rbx,QWORD PTR [rip+0x5f302]        # 0x486768
  427466:	jmp    0x427550
  42746b:	nop    DWORD PTR [rax+rax*1+0x0]
  427470:	lea    rcx,[rip+0x5d0a9]        # 0x484520
  427477:	mov    rbx,QWORD PTR [rip+0x5f2ea]        # 0x486768
  42747e:	call   rbx
  427480:	call   QWORD PTR [rip+0x5f38a]        # 0x486810
  427486:	mov    DWORD PTR [rip+0x5d074],eax        # 0x484500
  42748c:	lea    rax,[rip+0xfffffffffffff0fd]        # 0x426590
  427493:	mov    QWORD PTR [rip+0x5d126],rax        # 0x4845c0
  42749a:	lea    rax,[rip+0xffffffffffffef9f]        # 0x426440
  4274a1:	mov    QWORD PTR [rip+0x5d120],rax        # 0x4845c8
  4274a8:	lea    rax,[rip+0xfffffffffffff091]        # 0x426540
  4274af:	mov    QWORD PTR [rip+0x5d11a],rax        # 0x4845d0
  4274b6:	lea    rax,[rip+0xfffffffffffff783]        # 0x426c40
  4274bd:	mov    QWORD PTR [rip+0x5d114],rax        # 0x4845d8
  4274c4:	lea    rax,[rip+0xfffffffffffff335]        # 0x426800
  4274cb:	mov    QWORD PTR [rip+0x5d10e],rax        # 0x4845e0
  4274d2:	lea    rax,[rip+0xffffffffffffefe7]        # 0x4264c0
  4274d9:	mov    QWORD PTR [rip+0x5d108],rax        # 0x4845e8
  4274e0:	lea    rax,[rip+0xfffffffffffff6e9]        # 0x426bd0
  4274e7:	mov    QWORD PTR [rip+0x5d102],rax        # 0x4845f0
  4274ee:	lea    rax,[rip+0xfffffffffffff2ab]        # 0x4267a0
  4274f5:	mov    QWORD PTR [rip+0x5d0fc],rax        # 0x4845f8
  4274fc:	lea    rax,[rip+0xfffffffffffff38d]        # 0x426890
  427503:	mov    QWORD PTR [rip+0x5d0f6],rax        # 0x484600
  42750a:	lea    rax,[rip+0xffffffffffffef3f]        # 0x426450
  427511:	mov    QWORD PTR [rip+0x5d0f0],rax        # 0x484608
  427518:	lea    rax,[rip+0xfffffffffffff001]        # 0x426520
  42751f:	mov    QWORD PTR [rip+0x5d0ea],rax        # 0x484610
  427526:	lea    rax,[rip+0xfffffffffffff5a3]        # 0x426ad0
  42752d:	mov    QWORD PTR [rip+0x5d0e4],rax        # 0x484618
  427534:	lea    rax,[rip+0xfffffffffffff485]        # 0x4269c0
  42753b:	mov    QWORD PTR [rip+0x5d0de],rax        # 0x484620
  427542:	lea    rax,[rip+0xfffffffffffff407]        # 0x426950
  427549:	mov    QWORD PTR [rip+0x5d0d8],rax        # 0x484628
  427550:	lea    rcx,[rip+0x5d009]        # 0x484560
  427557:	mov    rax,rbx
  42755a:	add    rsp,0x48
  42755e:	pop    rbx
  42755f:	pop    rsi
  427560:	pop    rdi
  427561:	pop    rbp
  427562:	pop    r12
  427564:	pop    r13
  427566:	pop    r14
  427568:	pop    r15
  42756a:	rex.W jmp rax
  42756d:	nop    DWORD PTR [rax]
  427570:	push   r12
  427572:	push   rbp
  427573:	push   rdi
  427574:	push   rsi
  427575:	push   rbx
  427576:	sub    rsp,0x20
  42757a:	mov    rdi,QWORD PTR [rip+0x5f297]        # 0x486818
  427581:	mov    r12,QWORD PTR [rip+0x5f298]        # 0x486820
  427588:	mov    rbx,QWORD PTR [rip+0x5cff9]        # 0x484588
  42758f:	test   rbx,rbx
  427592:	je     0x4275d2
  427594:	xor    ebp,ebp
  427596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275a0:	mov    ecx,DWORD PTR [rbx]
  4275a2:	call   rdi
  4275a4:	test   rax,rax
  4275a7:	mov    rsi,rax
  4275aa:	je     0x4275c5
  4275ac:	cmp    QWORD PTR [rbx+0x8],0x0
  4275b1:	je     0x4275c5
  4275b3:	mov    ebp,0x1
  4275b8:	xor    edx,edx
  4275ba:	mov    ecx,DWORD PTR [rbx]
  4275bc:	call   r12
  4275bf:	mov    rcx,rsi
  4275c2:	call   QWORD PTR [rbx+0x8]
  4275c5:	mov    rbx,QWORD PTR [rbx+0x10]
  4275c9:	test   rbx,rbx
  4275cc:	jne    0x4275a0
  4275ce:	test   ebp,ebp
  4275d0:	jne    0x427588
  4275d2:	mov    rax,QWORD PTR [rip+0x5cfe7]        # 0x4845c0
  4275d9:	test   rax,rax
  4275dc:	je     0x4275f0
  4275de:	add    rsp,0x20
  4275e2:	pop    rbx
  4275e3:	pop    rsi
  4275e4:	pop    rdi
  4275e5:	pop    rbp
  4275e6:	pop    r12
  4275e8:	rex.W jmp rax
  4275eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4275f0:	add    rsp,0x20
  4275f4:	pop    rbx
  4275f5:	pop    rsi
  4275f6:	pop    rdi
  4275f7:	pop    rbp
  4275f8:	pop    r12
  4275fa:	ret    
  4275fb:	nop
  4275fc:	nop
  4275fd:	nop
  4275fe:	nop
  4275ff:	nop
  427600:	mov    rax,QWORD PTR [rip+0x5f2c9]        # 0x4868d0
  427607:	rex.W jmp rax
  42760a:	nop    WORD PTR [rax+rax*1+0x0]
  427610:	push   rbp
  427611:	push   rdi
  427612:	push   rsi
  427613:	push   rbx
  427614:	sub    rsp,0x58
  427618:	lea    rcx,[rip+0x5022d]        # 0x47784c
  42761f:	call   0x438838
  427624:	test   rax,rax
  427627:	je     0x427632
  427629:	cmp    BYTE PTR [rax],0x0
  42762c:	jne    0x4276f0
  427632:	lea    rcx,[rip+0x5021a]        # 0x477853
  427639:	call   0x438838
  42763e:	test   rax,rax
  427641:	je     0x42764c
  427643:	cmp    BYTE PTR [rax],0x0
  427646:	jne    0x4276f0
  42764c:	lea    rcx,[rip+0x5020c]        # 0x47785f
  427653:	call   0x438838
  427658:	test   rax,rax
  42765b:	je     0x427666
  42765d:	cmp    BYTE PTR [rax],0x0
  427660:	jne    0x4276f0
  427666:	lea    rdi,[rsp+0x30]
  42766b:	call   QWORD PTR [rip+0x5f0d7]        # 0x486748
  427671:	mov    r9d,0xa
  427677:	mov    ebx,eax
  427679:	mov    r8,rdi
  42767c:	mov    edx,0x59
  427681:	mov    ecx,eax
  427683:	mov    rsi,QWORD PTR [rip+0x5f066]        # 0x4866f0
  42768a:	call   rsi
  42768c:	test   eax,eax
  42768e:	je     0x427701
  427690:	lea    rbp,[rsp+0x40]
  427695:	mov    r9d,0xa
  42769b:	mov    edx,0x5a
  4276a0:	mov    ecx,ebx
  4276a2:	mov    r8,rbp
  4276a5:	call   rsi
  4276a7:	test   eax,eax
  4276a9:	je     0x427701
  4276ab:	mov    eax,ebx
  4276ad:	and    ebx,0x3ff
  4276b3:	shr    ax,0xa
  4276b7:	cmp    ebx,0x2c
  4276ba:	je     0x427720
  4276bc:	cmp    ebx,0x43
  4276bf:	je     0x427720
  4276c1:	cmp    ebx,0x1a
  4276c4:	je     0x427744
  4276c6:	xor    r9d,r9d
  4276c9:	lea    rdx,[rip+0x50196]        # 0x477866
  4276d0:	mov    QWORD PTR [rsp+0x20],0x0
  4276d9:	mov    r8,rbp
  4276dc:	mov    rcx,rdi
  4276df:	call   0x4184b0
  4276e4:	jmp    0x4276f8
  4276e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276f0:	mov    rcx,rax
  4276f3:	call   0x4182b0
  4276f8:	add    rsp,0x58
  4276fc:	pop    rbx
  4276fd:	pop    rsi
  4276fe:	pop    rdi
  4276ff:	pop    rbp
  427700:	ret    
  427701:	lea    rcx,[rip+0x5015c]        # 0x477864
  427708:	call   0x4182b0
  42770d:	add    rsp,0x58
  427711:	pop    rbx
  427712:	pop    rsi
  427713:	pop    rdi
  427714:	pop    rbp
  427715:	ret    
  427716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427720:	cmp    ax,0x1
  427724:	lea    r9,[rip+0x50115]        # 0x477840
  42772b:	je     0x4276c9
  42772d:	cmp    ax,0x2
  427731:	lea    rax,[rip+0x5010e]        # 0x477846
  427738:	mov    r9d,0x0
  42773e:	cmove  r9,rax
  427742:	jmp    0x4276c9
  427744:	cmp    ax,0x2
  427748:	je     0x427754
  42774a:	cmp    ax,0x6
  42774e:	jne    0x4276c6
  427754:	lea    r9,[rip+0x500e5]        # 0x477840
  42775b:	jmp    0x4276c9
  427760:	push   rbx
  427761:	sub    rsp,0x50
  427765:	xor    r9d,r9d
  427768:	xor    edx,edx
  42776a:	lea    rax,[rsp+0x48]
  42776f:	mov    r8d,ecx
  427772:	mov    QWORD PTR [rsp+0x48],0x0
  42777b:	mov    ecx,0x1300
  427780:	mov    QWORD PTR [rsp+0x30],0x0
  427789:	mov    DWORD PTR [rsp+0x28],0x0
  427791:	mov    QWORD PTR [rsp+0x20],rax
  427796:	call   QWORD PTR [rip+0x5eedc]        # 0x486678
  42779c:	mov    rcx,QWORD PTR [rsp+0x48]
  4277a1:	test   rcx,rcx
  4277a4:	je     0x427804
  4277a6:	call   0x438720
  4277ab:	cmp    eax,0x2
  4277ae:	mov    rcx,QWORD PTR [rsp+0x48]
  4277b3:	jle    0x4277c2
  4277b5:	cdqe   
  4277b7:	add    rax,rax
  4277ba:	cmp    WORD PTR [rcx+rax*1-0x2],0xa
  4277c0:	je     0x4277f2
  4277c2:	xor    r9d,r9d
  4277c5:	xor    r8d,r8d
  4277c8:	mov    edx,0xffffffff
  4277cd:	mov    QWORD PTR [rsp+0x20],0x0
  4277d6:	call   0x4225c0
  4277db:	mov    rcx,QWORD PTR [rsp+0x48]
  4277e0:	mov    rbx,rax
  4277e3:	call   QWORD PTR [rip+0x5efaf]        # 0x486798
  4277e9:	mov    rax,rbx
  4277ec:	add    rsp,0x50
  4277f0:	pop    rbx
  4277f1:	ret    
  4277f2:	lea    rax,[rcx+rax*1-0x4]
  4277f7:	cmp    WORD PTR [rax],0xd
  4277fb:	jne    0x4277c2
  4277fd:	xor    edx,edx
  4277ff:	mov    WORD PTR [rax],dx
  427802:	jmp    0x4277c2
  427804:	lea    rcx,[rip+0x5005d]        # 0x477868
  42780b:	call   0x4182b0
  427810:	mov    rbx,rax
  427813:	mov    rax,rbx
  427816:	add    rsp,0x50
  42781a:	pop    rbx
  42781b:	ret    
  42781c:	nop    DWORD PTR [rax+0x0]
  427820:	push   rdi
  427821:	push   rsi
  427822:	push   rbx
  427823:	sub    rsp,0x240
  42782a:	mov    r8d,0x104
  427830:	xor    ebx,ebx
  427832:	lea    rsi,[rsp+0x30]
  427837:	mov    rdx,rsi
  42783a:	call   QWORD PTR [rip+0x5eeb8]        # 0x4866f8
  427840:	test   eax,eax
  427842:	je     0x4278a7
  427844:	xor    r9d,r9d
  427847:	xor    r8d,r8d
  42784a:	mov    edx,0xffffffff
  42784f:	mov    rcx,rsi
  427852:	mov    QWORD PTR [rsp+0x20],0x0
  42785b:	call   0x4225c0
  427860:	mov    edx,0x5c
  427865:	mov    rcx,rax
  427868:	mov    rbx,rax
  42786b:	call   0x438768
  427870:	test   rax,rax
  427873:	je     0x4278a7
  427875:	mov    BYTE PTR [rax],0x0
  427878:	mov    edx,0x5c
  42787d:	mov    rcx,rbx
  427880:	call   0x438768
  427885:	test   rax,rax
  427888:	mov    rsi,rax
  42788b:	je     0x4278a7
  42788d:	lea    rdi,[rax+0x1]
  427891:	lea    rdx,[rip+0x4ffd1]        # 0x477869
  427898:	mov    rcx,rdi
  42789b:	call   0x419340
  4278a0:	test   eax,eax
  4278a2:	jne    0x4278b5
  4278a4:	mov    BYTE PTR [rsi],0x0
  4278a7:	mov    rax,rbx
  4278aa:	add    rsp,0x240
  4278b1:	pop    rbx
  4278b2:	pop    rsi
  4278b3:	pop    rdi
  4278b4:	ret    
  4278b5:	lea    rdx,[rip+0x4ffb1]        # 0x47786d
  4278bc:	mov    rcx,rdi
  4278bf:	call   0x419340
  4278c4:	test   eax,eax
  4278c6:	je     0x4278a4
  4278c8:	jmp    0x4278a7
  4278ca:	nop    WORD PTR [rax+rax*1+0x0]
  4278d0:	push   rdi
  4278d1:	push   rsi
  4278d2:	push   rbx
  4278d3:	sub    rsp,0x30
  4278d7:	mov    rbx,rcx
  4278da:	lea    rcx,[rip+0x5cd6f]        # 0x484650
  4278e1:	call   0x426d40
  4278e6:	mov    rcx,QWORD PTR [rip+0x5cd5b]        # 0x484648
  4278ed:	test   rcx,rcx
  4278f0:	je     0x4279d0
  4278f6:	test   rbx,rbx
  4278f9:	je     0x4279a0
  4278ff:	mov    rdx,rbx
  427902:	call   0x408de0
  427907:	test   rax,rax
  42790a:	mov    rsi,rax
  42790d:	je     0x427930
  42790f:	lea    rcx,[rip+0x5cd3a]        # 0x484650
  427916:	call   0x426d70
  42791b:	mov    rcx,rsi
  42791e:	add    rsp,0x30
  427922:	pop    rbx
  427923:	pop    rsi
  427924:	pop    rdi
  427925:	jmp    0x4182b0
  42792a:	nop    WORD PTR [rax+rax*1+0x0]
  427930:	xor    r9d,r9d
  427933:	xor    r8d,r8d
  427936:	mov    edx,0xffffffff
  42793b:	mov    rcx,rbx
  42793e:	mov    QWORD PTR [rsp+0x20],0x0
  427947:	call   0x4229b0
  42794c:	mov    rsi,rax
  42794f:	mov    rcx,rax
  427952:	call   QWORD PTR [rip+0x5edb0]        # 0x486708
  427958:	mov    rcx,rsi
  42795b:	mov    rdi,rax
  42795e:	call   0x40e6e0
  427963:	test   rdi,rdi
  427966:	je     0x4279f2
  42796c:	mov    rcx,rdi
  42796f:	call   0x427820
  427974:	test   rax,rax
  427977:	mov    rsi,rax
  42797a:	je     0x4279f2
  42797c:	mov    rcx,rbx
  42797f:	call   0x4182b0
  427984:	mov    rdx,rax
  427987:	mov    rcx,QWORD PTR [rip+0x5ccba]        # 0x484648
  42798e:	mov    r8,rsi
  427991:	call   0x409090
  427996:	jmp    0x42790f
  42799b:	nop    DWORD PTR [rax+rax*1+0x0]
  4279a0:	lea    rdx,[rip+0x4fec1]        # 0x477868
  4279a7:	call   0x408de0
  4279ac:	test   rax,rax
  4279af:	mov    rsi,rax
  4279b2:	jne    0x42790f
  4279b8:	xor    ecx,ecx
  4279ba:	call   0x427820
  4279bf:	test   rax,rax
  4279c2:	mov    rsi,rax
  4279c5:	je     0x4279f2
  4279c7:	lea    rdx,[rip+0x4fe9a]        # 0x477868
  4279ce:	jmp    0x427987
  4279d0:	lea    rcx,[rip+0xfffffffffffe1d79]        # 0x409750
  4279d7:	lea    rdx,[rip+0xfffffffffffe1d52]        # 0x409730
  4279de:	call   0x408a60
  4279e3:	mov    rcx,rax
  4279e6:	mov    QWORD PTR [rip+0x5cc5b],rax        # 0x484648
  4279ed:	jmp    0x4278f6
  4279f2:	lea    rcx,[rip+0x5cc57]        # 0x484650
  4279f9:	call   0x426d70
  4279fe:	xor    eax,eax
  427a00:	add    rsp,0x30
  427a04:	pop    rbx
  427a05:	pop    rsi
  427a06:	pop    rdi
  427a07:	ret    
  427a08:	nop    DWORD PTR [rax+rax*1+0x0]
  427a10:	push   rbx
  427a11:	sub    rsp,0x20
  427a15:	test   rcx,rcx
  427a18:	mov    rbx,rdx
  427a1b:	je     0x427a35
  427a1d:	lea    r8,[rip+0x4fe54]        # 0x477878
  427a24:	lea    rcx,[rip+0x4feb9]        # 0x4778e4
  427a2b:	mov    edx,0x10
  427a30:	call   0x40fae0
  427a35:	test   rbx,rbx
  427a38:	je     0x427a50
  427a3a:	mov    rcx,rbx
  427a3d:	call   0x4278d0
  427a42:	test   rax,rax
  427a45:	je     0x427a50
  427a47:	add    rsp,0x20
  427a4b:	pop    rbx
  427a4c:	ret    
  427a4d:	nop    DWORD PTR [rax]
  427a50:	xor    ecx,ecx
  427a52:	add    rsp,0x20
  427a56:	pop    rbx
  427a57:	jmp    0x4278d0
  427a5c:	nop    DWORD PTR [rax+0x0]
  427a60:	push   rsi
  427a61:	push   rbx
  427a62:	sub    rsp,0x28
  427a66:	mov    rsi,r8
  427a69:	call   0x427a10
  427a6e:	mov    rdx,rsi
  427a71:	mov    rbx,rax
  427a74:	xor    r8d,r8d
  427a77:	mov    rcx,rax
  427a7a:	call   0x407800
  427a7f:	mov    rcx,rbx
  427a82:	mov    rsi,rax
  427a85:	call   0x40e6e0
  427a8a:	mov    rax,rsi
  427a8d:	add    rsp,0x28
  427a91:	pop    rbx
  427a92:	pop    rsi
  427a93:	ret    
  427a94:	xchg   ax,ax
  427a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427aa0:	sub    rsp,0x28
  427aa4:	mfence 
  427aa7:	mov    rax,QWORD PTR [rip+0x5cb92]        # 0x484640
  427aae:	test   rax,rax
  427ab1:	je     0x427ac0
  427ab3:	add    rsp,0x28
  427ab7:	ret    
  427ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  427ac0:	lea    rcx,[rip+0x5cb79]        # 0x484640
  427ac7:	call   0x41ebc0
  427acc:	test   eax,eax
  427ace:	je     0x427ae4
  427ad0:	call   QWORD PTR [rip+0x5ec82]        # 0x486758
  427ad6:	lea    rcx,[rip+0x5cb63]        # 0x484640
  427add:	mov    edx,eax
  427adf:	call   0x41ec60
  427ae4:	mov    rax,QWORD PTR [rip+0x5cb55]        # 0x484640
  427aeb:	jmp    0x427ab3
  427aed:	nop    DWORD PTR [rax]
  427af0:	push   rdi
  427af1:	push   rsi
  427af2:	push   rbx
  427af3:	sub    rsp,0x240
  427afa:	xor    r9d,r9d
  427afd:	xor    r8d,r8d
  427b00:	mov    rdx,0xffffffffffffffff
  427b07:	mov    QWORD PTR [rsp+0x20],0x0
  427b10:	mov    rsi,rcx
  427b13:	call   0x42e110
  427b18:	test   rax,rax
  427b1b:	mov    rbx,rax
  427b1e:	je     0x427b30
  427b20:	mov    rax,rbx
  427b23:	add    rsp,0x240
  427b2a:	pop    rbx
  427b2b:	pop    rsi
  427b2c:	pop    rdi
  427b2d:	ret    
  427b2e:	xchg   ax,ax
  427b30:	xor    r9d,r9d
  427b33:	xor    r8d,r8d
  427b36:	mov    rcx,rsi
  427b39:	mov    QWORD PTR [rsp+0x20],0x0
  427b42:	mov    edx,0xffffffff
  427b47:	call   0x4229b0
  427b4c:	test   rax,rax
  427b4f:	mov    rsi,rax
  427b52:	je     0x427b20
  427b54:	lea    rdi,[rsp+0x30]
  427b59:	mov    r8d,0x105
  427b5f:	mov    rcx,rax
  427b62:	mov    rdx,rdi
  427b65:	call   QWORD PTR [rip+0x5ebad]        # 0x486718
  427b6b:	test   eax,eax
  427b6d:	jne    0x427b80
  427b6f:	mov    rcx,rsi
  427b72:	call   0x40e6e0
  427b77:	jmp    0x427b20
  427b79:	nop    DWORD PTR [rax+0x0]
  427b80:	xor    r9d,r9d
  427b83:	xor    r8d,r8d
  427b86:	mov    rcx,rdi
  427b89:	mov    QWORD PTR [rsp+0x20],0x0
  427b92:	mov    edx,0xffffffff
  427b97:	call   0x4225c0
  427b9c:	mov    QWORD PTR [rsp+0x20],0x0
  427ba5:	mov    rdi,rax
  427ba8:	xor    r9d,r9d
  427bab:	xor    r8d,r8d
  427bae:	mov    rdx,0xffffffffffffffff
  427bb5:	mov    rcx,rax
  427bb8:	call   0x42e110
  427bbd:	mov    rcx,rdi
  427bc0:	mov    rbx,rax
  427bc3:	call   0x40e6e0
  427bc8:	jmp    0x427b6f
  427bca:	nop
  427bcb:	nop
  427bcc:	nop
  427bcd:	nop
  427bce:	nop
  427bcf:	nop
  427bd0:	push   rsi
  427bd1:	push   rbx
  427bd2:	sub    rsp,0x38
  427bd6:	lea    rax,[rsp+0x28]
  427bdb:	mov    r9,r8
  427bde:	mov    rsi,rcx
  427be1:	mov    r8,rdx
  427be4:	xor    ecx,ecx
  427be6:	mov    rdx,rax
  427be9:	call   0x427e20
  427bee:	test   rax,rax
  427bf1:	mov    rbx,rax
  427bf4:	je     0x427c20
  427bf6:	mov    r8,QWORD PTR [rsp+0x28]
  427bfb:	mov    r9,rsi
  427bfe:	mov    edx,0x1
  427c03:	mov    rcx,rax
  427c06:	call   0x438848
  427c0b:	mov    rcx,rbx
  427c0e:	call   0x40e6e0
  427c13:	mov    eax,DWORD PTR [rsp+0x28]
  427c17:	add    rsp,0x38
  427c1b:	pop    rbx
  427c1c:	pop    rsi
  427c1d:	ret    
  427c1e:	xchg   ax,ax
  427c20:	mov    eax,0xffffffff
  427c25:	jmp    0x427c17
  427c27:	nop    WORD PTR [rax+rax*1+0x0]
  427c30:	sub    rsp,0x38
  427c34:	mov    QWORD PTR [rsp+0x50],r8
  427c39:	lea    r8,[rsp+0x50]
  427c3e:	mov    QWORD PTR [rsp+0x58],r9
  427c43:	mov    QWORD PTR [rsp+0x28],r8
  427c48:	call   0x427bd0
  427c4d:	add    rsp,0x38
  427c51:	ret    
  427c52:	nop    DWORD PTR [rax+0x0]
  427c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c60:	push   rsi
  427c61:	push   rbx
  427c62:	sub    rsp,0x28
  427c66:	mov    rbx,rcx
  427c69:	mov    rsi,rdx
  427c6c:	call   QWORD PTR [rip+0x5ec16]        # 0x486888
  427c72:	lea    rcx,[rax+0x30]
  427c76:	mov    r8,rsi
  427c79:	mov    rdx,rbx
  427c7c:	add    rsp,0x28
  427c80:	pop    rbx
  427c81:	pop    rsi
  427c82:	jmp    0x427bd0
  427c87:	nop    WORD PTR [rax+rax*1+0x0]
  427c90:	sub    rsp,0x38
  427c94:	mov    QWORD PTR [rsp+0x48],rdx
  427c99:	lea    rdx,[rsp+0x48]
  427c9e:	mov    QWORD PTR [rsp+0x50],r8
  427ca3:	mov    QWORD PTR [rsp+0x58],r9
  427ca8:	mov    QWORD PTR [rsp+0x28],rdx
  427cad:	call   0x427c60
  427cb2:	add    rsp,0x38
  427cb6:	ret    
  427cb7:	nop    WORD PTR [rax+rax*1+0x0]
  427cc0:	push   rsi
  427cc1:	push   rbx
  427cc2:	sub    rsp,0x38
  427cc6:	lea    rax,[rsp+0x28]
  427ccb:	mov    r9,r8
  427cce:	mov    rsi,rcx
  427cd1:	mov    r8,rdx
  427cd4:	xor    ecx,ecx
  427cd6:	mov    rdx,rax
  427cd9:	call   0x427e20
  427cde:	test   rax,rax
  427ce1:	mov    rbx,rax
  427ce4:	je     0x427d10
  427ce6:	mov    r8,QWORD PTR [rsp+0x28]
  427ceb:	mov    rdx,rax
  427cee:	mov    rcx,rsi
  427cf1:	add    r8,0x1
  427cf5:	call   0x4387f0
  427cfa:	mov    rcx,rbx
  427cfd:	call   0x40e6e0
  427d02:	mov    eax,DWORD PTR [rsp+0x28]
  427d06:	add    rsp,0x38
  427d0a:	pop    rbx
  427d0b:	pop    rsi
  427d0c:	ret    
  427d0d:	nop    DWORD PTR [rax]
  427d10:	mov    eax,0xffffffff
  427d15:	jmp    0x427d06
  427d17:	nop    WORD PTR [rax+rax*1+0x0]
  427d20:	sub    rsp,0x38
  427d24:	mov    QWORD PTR [rsp+0x50],r8
  427d29:	lea    r8,[rsp+0x50]
  427d2e:	mov    QWORD PTR [rsp+0x58],r9
  427d33:	mov    QWORD PTR [rsp+0x28],r8
  427d38:	call   0x427cc0
  427d3d:	add    rsp,0x38
  427d41:	ret    
  427d42:	nop    DWORD PTR [rax+0x0]
  427d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d50:	push   rdi
  427d51:	push   rsi
  427d52:	push   rbx
  427d53:	sub    rsp,0x30
  427d57:	mov    rsi,rdx
  427d5a:	lea    rdx,[rsp+0x28]
  427d5f:	mov    rdi,rcx
  427d62:	xor    ecx,ecx
  427d64:	call   0x427e20
  427d69:	test   rax,rax
  427d6c:	mov    rbx,rax
  427d6f:	je     0x427db2
  427d71:	test   rsi,rsi
  427d74:	jne    0x427d90
  427d76:	mov    rcx,rbx
  427d79:	call   0x40e6e0
  427d7e:	mov    eax,DWORD PTR [rsp+0x28]
  427d82:	add    rsp,0x30
  427d86:	pop    rbx
  427d87:	pop    rsi
  427d88:	pop    rdi
  427d89:	ret    
  427d8a:	nop    WORD PTR [rax+rax*1+0x0]
  427d90:	mov    rax,QWORD PTR [rsp+0x28]
  427d95:	mov    rdx,rbx
  427d98:	mov    rcx,rdi
  427d9b:	lea    r8,[rax+0x1]
  427d9f:	cmp    rsi,r8
  427da2:	cmovbe r8,rsi
  427da6:	call   0x4387f0
  427dab:	mov    BYTE PTR [rdi+rsi*1-0x1],0x0
  427db0:	jmp    0x427d76
  427db2:	mov    eax,0xffffffff
  427db7:	jmp    0x427d82
  427db9:	nop    DWORD PTR [rax+0x0]
  427dc0:	sub    rsp,0x38
  427dc4:	mov    QWORD PTR [rsp+0x58],r9
  427dc9:	lea    r9,[rsp+0x58]
  427dce:	mov    QWORD PTR [rsp+0x28],r9
  427dd3:	call   0x427d50
  427dd8:	add    rsp,0x38
  427ddc:	ret    
  427ddd:	nop    DWORD PTR [rax]
  427de0:	push   rbx
  427de1:	sub    rsp,0x30
  427de5:	lea    rax,[rsp+0x28]
  427dea:	mov    rbx,rcx
  427ded:	mov    r9,r8
  427df0:	xor    ecx,ecx
  427df2:	mov    r8,rdx
  427df5:	mov    rdx,rax
  427df8:	call   0x427e20
  427dfd:	test   rax,rax
  427e00:	mov    QWORD PTR [rbx],rax
  427e03:	je     0x427e0f
  427e05:	mov    eax,DWORD PTR [rsp+0x28]
  427e09:	add    rsp,0x30
  427e0d:	pop    rbx
  427e0e:	ret    
  427e0f:	mov    eax,0xffffffff
  427e14:	jmp    0x427e09
  427e16:	nop
  427e17:	nop
  427e18:	nop
  427e19:	nop
  427e1a:	nop
  427e1b:	nop
  427e1c:	nop
  427e1d:	nop
  427e1e:	nop
  427e1f:	nop
  427e20:	push   rbp
  427e21:	push   r15
  427e23:	push   r14
  427e25:	push   r13
  427e27:	push   r12
  427e29:	push   rdi
  427e2a:	push   rsi
  427e2b:	push   rbx
  427e2c:	sub    rsp,0x378
  427e33:	lea    rbp,[rsp+0x80]
  427e3b:	mov    QWORD PTR [rbp+0x348],rdx
  427e42:	mov    r14,r8
  427e45:	lea    rdx,[rbp+0x10]
  427e49:	mov    QWORD PTR [rbp+0x340],rcx
  427e50:	mov    r8,rbp
  427e53:	mov    rcx,r14
  427e56:	mov    rsi,r9
  427e59:	call   0x431ec0
  427e5e:	test   eax,eax
  427e60:	js     0x428915
  427e66:	mov    rdx,rbp
  427e69:	mov    rcx,rsi
  427e6c:	call   0x431e10
  427e71:	test   eax,eax
  427e73:	js     0x4288fe
  427e79:	mov    eax,DWORD PTR [rbp+0x24]
  427e7c:	add    eax,DWORD PTR [rbp+0x20]
  427e7f:	add    eax,0xd
  427e82:	add    rax,0x1e
  427e86:	shr    rax,0x4
  427e8a:	shl    rax,0x4
  427e8e:	call   0x4340c0
  427e93:	sub    rsp,rax
  427e96:	cmp    QWORD PTR [rbp+0x340],0x0
  427e9e:	lea    rax,[rsp+0x30]
  427ea3:	mov    QWORD PTR [rbp-0x28],rax
  427ea7:	je     0x4288d0
  427ead:	mov    rax,QWORD PTR [rbp+0x348]
  427eb4:	mov    rdi,QWORD PTR [rax]
  427eb7:	mov    rsi,QWORD PTR [rbp+0x18]
  427ebb:	lea    rax,[rbp-0x20]
  427ebf:	mov    r10,r14
  427ec2:	xor    ebx,ebx
  427ec4:	xor    r15d,r15d
  427ec7:	mov    r9,QWORD PTR [rbp+0x340]
  427ece:	mov    QWORD PTR [rbp-0x48],rax
  427ed2:	mov    rax,QWORD PTR [rip+0x53b07]        # 0x47b9e0
  427ed9:	mov    r14,QWORD PTR [rsi]
  427edc:	mov    QWORD PTR [rbp-0x50],rax
  427ee0:	cmp    r14,r10
  427ee3:	je     0x428124
  427ee9:	sub    r14,r10
  427eec:	lea    r12,[r14+rbx*1]
  427ef0:	cmp    rdi,r12
  427ef3:	jae    0x428130
  427ef9:	lea    rax,[rdi+rdi*1]
  427efd:	test   rdi,rdi
  427f00:	mov    edi,0xc
  427f05:	mov    QWORD PTR [rbp-0x40],r10
  427f09:	cmovne rdi,rax
  427f0d:	cmp    rdi,r12
  427f10:	cmovb  rdi,r12
  427f14:	cmp    r9,QWORD PTR [rbp+0x340]
  427f1b:	sete   r8b
  427f1f:	test   r9,r9
  427f22:	je     0x428064
  427f28:	test   r8b,r8b
  427f2b:	jne    0x428064
  427f31:	mov    rcx,r9
  427f34:	mov    rdx,rdi
  427f37:	mov    BYTE PTR [rbp-0x38],r8b
  427f3b:	mov    QWORD PTR [rbp-0x30],r9
  427f3f:	call   0x40e670
  427f44:	movzx  r8d,BYTE PTR [rbp-0x38]
  427f49:	mov    r10,QWORD PTR [rbp-0x40]
  427f4d:	mov    r13,rax
  427f50:	mov    r9,QWORD PTR [rbp-0x30]
  427f54:	test   r13,r13
  427f57:	je     0x428a58
  427f5d:	test   rbx,rbx
  427f60:	je     0x427f7d
  427f62:	test   r8b,r8b
  427f65:	je     0x427f7d
  427f67:	mov    r8,rbx
  427f6a:	mov    rdx,r9
  427f6d:	mov    rcx,r13
  427f70:	mov    QWORD PTR [rbp-0x30],r10
  427f74:	call   0x4387f0
  427f79:	mov    r10,QWORD PTR [rbp-0x30]
  427f7d:	lea    rcx,[r13+rbx*1+0x0]
  427f82:	mov    r8,r14
  427f85:	mov    rdx,r10
  427f88:	call   0x4387f0
  427f8d:	cmp    DWORD PTR [rbp+0x10],r15d
  427f91:	je     0x428940
  427f97:	movzx  eax,BYTE PTR [rsi+0x44]
  427f9b:	cmp    al,0x25
  427f9d:	je     0x428090
  427fa3:	movsxd rdx,DWORD PTR [rsi+0x48]
  427fa7:	test   edx,edx
  427fa9:	js     0x428480
  427faf:	cmp    al,0x6e
  427fb1:	je     0x428140
  427fb7:	mov    r9,QWORD PTR [rbp+0x8]
  427fbb:	mov    rcx,QWORD PTR [rsi+0x18]
  427fbf:	shl    rdx,0x5
  427fc3:	mov    r11,QWORD PTR [rsi+0x20]
  427fc7:	add    rdx,r9
  427fca:	cmp    rcx,r11
  427fcd:	mov    r10d,DWORD PTR [rdx]
  427fd0:	je     0x428590
  427fd6:	movsxd r8,DWORD PTR [rsi+0x28]
  427fda:	test   r8d,r8d
  427fdd:	js     0x428550
  427fe3:	shl    r8,0x5
  427fe7:	lea    rcx,[r9+r8*1]
  427feb:	cmp    DWORD PTR [rcx],0x5
  427fee:	jne    0x428480
  427ff4:	mov    r8d,DWORD PTR [rcx+0x10]
  427ff8:	mov    r14d,DWORD PTR [rcx+0x10]
  427ffc:	sar    r8d,0x1f
  428000:	xor    r14d,r8d
  428003:	sub    r14d,r8d
  428006:	mov    rcx,QWORD PTR [rsi+0x30]
  42800a:	mov    r8,QWORD PTR [rsi+0x38]
  42800e:	cmp    rcx,r8
  428011:	je     0x42857b
  428017:	movsxd r11,DWORD PTR [rsi+0x40]
  42801b:	test   r11d,r11d
  42801e:	js     0x428520
  428024:	shl    r11,0x5
  428028:	add    r11,r9
  42802b:	cmp    DWORD PTR [r11],0x5
  42802f:	jne    0x428480
  428035:	mov    ecx,DWORD PTR [r11+0x10]
  428039:	mov    r9d,0x0
  42803f:	test   ecx,ecx
  428041:	cmovns r9d,DWORD PTR [r11+0x10]
  428046:	sub    eax,0x41
  428049:	cmp    al,0x37
  42804b:	ja     0x428480
  428051:	lea    rcx,[rip+0x4f8b0]        # 0x477908
  428058:	movzx  eax,al
  42805b:	movsxd rax,DWORD PTR [rcx+rax*4]
  42805f:	add    rcx,rax
  428062:	jmp    rcx
  428064:	mov    rcx,rdi
  428067:	mov    QWORD PTR [rbp-0x38],r9
  42806b:	mov    BYTE PTR [rbp-0x30],r8b
  42806f:	call   0x40e5c0
  428074:	movzx  r8d,BYTE PTR [rbp-0x30]
  428079:	mov    r13,rax
  42807c:	mov    r9,QWORD PTR [rbp-0x38]
  428080:	mov    r10,QWORD PTR [rbp-0x40]
  428084:	jmp    0x427f54
  428089:	nop    DWORD PTR [rax+0x0]
  428090:	mov    r8d,DWORD PTR [rsi+0x48]
  428094:	test   r8d,r8d
  428097:	jns    0x428480
  42809d:	lea    rbx,[r12+0x1]
  4280a2:	cmp    rdi,rbx
  4280a5:	jae    0x428103
  4280a7:	lea    rax,[rdi+rdi*1]
  4280ab:	test   rdi,rdi
  4280ae:	mov    edi,0xc
  4280b3:	cmovne rdi,rax
  4280b7:	cmp    rdi,rbx
  4280ba:	cmovb  rdi,rbx
  4280be:	cmp    r13,QWORD PTR [rbp+0x340]
  4280c5:	sete   r14b
  4280c9:	test   r13,r13
  4280cc:	je     0x4285b1
  4280d2:	test   r14b,r14b
  4280d5:	jne    0x4285b1
  4280db:	mov    rdx,rdi
  4280de:	mov    rcx,r13
  4280e1:	call   0x40e670
  4280e6:	mov    r9,rax
  4280e9:	test   r9,r9
  4280ec:	je     0x4284bb
  4280f2:	test   r12,r12
  4280f5:	je     0x428100
  4280f7:	test   r14b,r14b
  4280fa:	jne    0x428691
  428100:	mov    r13,r9
  428103:	mov    BYTE PTR [r13+r12*1+0x0],0x25
  428109:	mov    r9,r13
  42810c:	mov    r10,QWORD PTR [rsi+0x8]
  428110:	add    rsi,0x50
  428114:	mov    r14,QWORD PTR [rsi]
  428117:	add    r15d,0x1
  42811b:	cmp    r14,r10
  42811e:	jne    0x427ee9
  428124:	mov    r12,rbx
  428127:	mov    r13,r9
  42812a:	jmp    0x427f8d
  42812f:	nop
  428130:	mov    r13,r9
  428133:	jmp    0x427f7d
  428138:	nop    DWORD PTR [rax+rax*1+0x0]
  428140:	shl    rdx,0x5
  428144:	add    rdx,QWORD PTR [rbp+0x8]
  428148:	mov    eax,DWORD PTR [rdx]
  42814a:	sub    eax,0x14
  42814d:	cmp    eax,0x4
  428150:	ja     0x428480
  428156:	lea    rcx,[rip+0x4f88b]        # 0x4779e8
  42815d:	movsxd rax,DWORD PTR [rcx+rax*4]
  428161:	add    rcx,rax
  428164:	mov    rax,QWORD PTR [rdx+0x10]
  428168:	jmp    rcx
  42816a:	nop    WORD PTR [rax+rax*1+0x0]
  428170:	mov    DWORD PTR [rax],r12d
  428173:	mov    rbx,r12
  428176:	mov    r9,r13
  428179:	jmp    0x42810c
  42817b:	nop    DWORD PTR [rax+rax*1+0x0]
  428180:	mov    eax,0x13
  428185:	cmp    eax,r14d
  428188:	cmovae r14d,eax
  42818c:	lea    ebx,[r14+0x1]
  428190:	lea    r14,[rbp+0x30]
  428194:	cmp    ebx,0x2bc
  42819a:	ja     0x4284a0
  4281a0:	mov    rax,QWORD PTR [rbp-0x28]
  4281a4:	mov    BYTE PTR [rax],0x25
  4281a7:	mov    eax,DWORD PTR [rsi+0x10]
  4281aa:	test   al,0x1
  4281ac:	jne    0x428485
  4281b2:	mov    rdx,QWORD PTR [rbp-0x28]
  4281b6:	lea    r9,[rdx+0x1]
  4281ba:	test   al,0x2
  4281bc:	je     0x4281c9
  4281be:	mov    BYTE PTR [r9],0x2d
  4281c2:	mov    eax,DWORD PTR [rsi+0x10]
  4281c5:	add    r9,0x1
  4281c9:	test   al,0x4
  4281cb:	je     0x4281d8
  4281cd:	mov    BYTE PTR [r9],0x2b
  4281d1:	mov    eax,DWORD PTR [rsi+0x10]
  4281d4:	add    r9,0x1
  4281d8:	test   al,0x8
  4281da:	je     0x4281e7
  4281dc:	mov    BYTE PTR [r9],0x20
  4281e0:	mov    eax,DWORD PTR [rsi+0x10]
  4281e3:	add    r9,0x1
  4281e7:	test   al,0x10
  4281e9:	je     0x4281f6
  4281eb:	mov    BYTE PTR [r9],0x23
  4281ef:	mov    eax,DWORD PTR [rsi+0x10]
  4281f2:	add    r9,0x1
  4281f6:	test   al,0x20
  4281f8:	je     0x428202
  4281fa:	mov    BYTE PTR [r9],0x30
  4281fe:	add    r9,0x1
  428202:	mov    rdx,QWORD PTR [rsi+0x18]
  428206:	mov    r11,QWORD PTR [rsi+0x20]
  42820a:	cmp    rdx,r11
  42820d:	je     0x428233
  42820f:	sub    r11,rdx
  428212:	mov    rcx,r9
  428215:	mov    DWORD PTR [rbp-0x38],r10d
  428219:	mov    r8,r11
  42821c:	mov    QWORD PTR [rbp-0x30],r11
  428220:	call   0x4387f0
  428225:	mov    r11,QWORD PTR [rbp-0x30]
  428229:	mov    r10d,DWORD PTR [rbp-0x38]
  42822d:	mov    r9,rax
  428230:	add    r9,r11
  428233:	mov    rdx,QWORD PTR [rsi+0x30]
  428237:	mov    r11,QWORD PTR [rsi+0x38]
  42823b:	cmp    rdx,r11
  42823e:	je     0x428264
  428240:	sub    r11,rdx
  428243:	mov    rcx,r9
  428246:	mov    DWORD PTR [rbp-0x38],r10d
  42824a:	mov    r8,r11
  42824d:	mov    QWORD PTR [rbp-0x30],r11
  428251:	call   0x4387f0
  428256:	mov    r11,QWORD PTR [rbp-0x30]
  42825a:	mov    r10d,DWORD PTR [rbp-0x38]
  42825e:	mov    r9,rax
  428261:	add    r9,r11
  428264:	lea    eax,[r10-0x7]
  428268:	cmp    eax,0xb
  42826b:	ja     0x428292
  42826d:	lea    rdx,[rip+0x4f788]        # 0x4779fc
  428274:	movsxd rax,DWORD PTR [rdx+rax*4]
  428278:	add    rdx,rax
  42827b:	jmp    rdx
  42827d:	nop    DWORD PTR [rax]
  428280:	mov    BYTE PTR [r9],0x49
  428284:	mov    BYTE PTR [r9+0x1],0x36
  428289:	add    r9,0x3
  42828d:	mov    BYTE PTR [r9-0x1],0x34
  428292:	movzx  eax,BYTE PTR [rsi+0x44]
  428296:	mov    BYTE PTR [r9+0x1],0x0
  42829b:	mov    BYTE PTR [r9],al
  42829e:	movsxd rax,DWORD PTR [rsi+0x28]
  4282a2:	test   eax,eax
  4282a4:	js     0x428510
  4282aa:	shl    rax,0x5
  4282ae:	add    rax,QWORD PTR [rbp+0x8]
  4282b2:	cmp    DWORD PTR [rax],0x5
  4282b5:	jne    0x428480
  4282bb:	mov    eax,DWORD PTR [rax+0x10]
  4282be:	mov    edx,0x1
  4282c3:	mov    DWORD PTR [rbp-0x10],eax
  4282c6:	movsxd rax,DWORD PTR [rsi+0x40]
  4282ca:	test   eax,eax
  4282cc:	js     0x428500
  4282d2:	shl    rax,0x5
  4282d6:	add    rax,QWORD PTR [rbp+0x8]
  4282da:	cmp    DWORD PTR [rax],0x5
  4282dd:	jne    0x428480
  4282e3:	mov    eax,DWORD PTR [rax+0x10]
  4282e6:	lea    ecx,[rdx+0x1]
  4282e9:	mov    DWORD PTR [rbp+rdx*4-0x10],eax
  4282ed:	cmp    r10d,0x13
  4282f1:	ja     0x428480
  4282f7:	lea    rax,[rip+0x4f72e]        # 0x477a2c
  4282fe:	movsxd rdx,DWORD PTR [rax+r10*4]
  428302:	add    rax,rdx
  428305:	jmp    rax
  428307:	nop    WORD PTR [rax+rax*1+0x0]
  428310:	movsxd rax,DWORD PTR [rsi+0x48]
  428314:	shl    rax,0x5
  428318:	add    rax,QWORD PTR [rbp+0x8]
  42831c:	cmp    ecx,0x1
  42831f:	mov    r8,QWORD PTR [rax+0x10]
  428323:	je     0x428730
  428329:	cmp    ecx,0x2
  42832c:	jne    0x428680
  428332:	mov    QWORD PTR [rsp+0x20],r8
  428337:	mov    r9d,DWORD PTR [rbp-0xc]
  42833b:	mov    r8d,DWORD PTR [rbp-0x10]
  42833f:	mov    rcx,r14
  428342:	mov    rdx,QWORD PTR [rbp-0x28]
  428346:	call   0x4387b0
  42834b:	jmp    0x428390
  42834d:	nop    DWORD PTR [rax]
  428350:	movsxd rax,DWORD PTR [rsi+0x48]
  428354:	shl    rax,0x5
  428358:	add    rax,QWORD PTR [rbp+0x8]
  42835c:	cmp    ecx,0x1
  42835f:	mov    r8d,DWORD PTR [rax+0x10]
  428363:	je     0x428850
  428369:	cmp    ecx,0x2
  42836c:	jne    0x4285a0
  428372:	mov    DWORD PTR [rsp+0x20],r8d
  428377:	mov    r9d,DWORD PTR [rbp-0xc]
  42837b:	mov    rcx,r14
  42837e:	mov    r8d,DWORD PTR [rbp-0x10]
  428382:	mov    rdx,QWORD PTR [rbp-0x28]
  428386:	call   0x4387b0
  42838b:	nop    DWORD PTR [rax+rax*1+0x0]
  428390:	test   eax,eax
  428392:	js     0x428a7b
  428398:	cmp    ebx,eax
  42839a:	jbe    0x428480
  4283a0:	movsxd r9,eax
  4283a3:	mov    rax,rdi
  4283a6:	sub    rax,r12
  4283a9:	lea    rbx,[r9+r12*1]
  4283ad:	cmp    rax,r9
  4283b0:	ja     0x428431
  4283b2:	lea    rax,[rdi+rdi*1]
  4283b6:	cmp    rbx,rax
  4283b9:	mov    rdx,rax
  4283bc:	cmovae rdx,rbx
  4283c0:	cmp    rdi,rdx
  4283c3:	jae    0x428431
  4283c5:	test   rdi,rdi
  4283c8:	mov    ecx,0xc
  4283cd:	mov    rdi,rdx
  4283d0:	cmove  rax,rcx
  4283d4:	mov    QWORD PTR [rbp-0x30],r9
  4283d8:	cmp    rax,rdx
  4283db:	cmovae rdi,rax
  4283df:	cmp    r13,QWORD PTR [rbp+0x340]
  4283e6:	sete   r8b
  4283ea:	test   r13,r13
  4283ed:	mov    BYTE PTR [rbp-0x38],r8b
  4283f1:	je     0x4286e0
  4283f7:	test   r8b,r8b
  4283fa:	jne    0x4286e0
  428400:	mov    rdx,rdi
  428403:	mov    rcx,r13
  428406:	call   0x40e670
  42840b:	movzx  r8d,BYTE PTR [rbp-0x38]
  428410:	mov    r9,QWORD PTR [rbp-0x30]
  428414:	mov    r10,rax
  428417:	test   r10,r10
  42841a:	je     0x4284bb
  428420:	test   r12,r12
  428423:	je     0x42842e
  428425:	test   r8b,r8b
  428428:	jne    0x4288e0
  42842e:	mov    r13,r10
  428431:	lea    rcx,[r13+r12*1+0x0]
  428436:	mov    r8,r9
  428439:	mov    rdx,r14
  42843c:	call   0x4387f0
  428441:	lea    rax,[rbp+0x30]
  428445:	cmp    r14,rax
  428448:	je     0x428452
  42844a:	mov    rcx,r14
  42844d:	call   0x40e6e0
  428452:	mov    r9,r13
  428455:	jmp    0x42810c
  42845a:	nop    WORD PTR [rax+rax*1+0x0]
  428460:	mov    BYTE PTR [r9],0x4c
  428464:	add    r9,0x1
  428468:	jmp    0x428292
  42846d:	nop    DWORD PTR [rax]
  428470:	mov    BYTE PTR [r9],0x6c
  428474:	add    r9,0x1
  428478:	jmp    0x428292
  42847d:	nop    DWORD PTR [rax]
  428480:	call   0x4388c0
  428485:	mov    rax,QWORD PTR [rbp-0x28]
  428489:	lea    r9,[rax+0x2]
  42848d:	mov    BYTE PTR [rax+0x1],0x27
  428491:	mov    eax,DWORD PTR [rsi+0x10]
  428494:	jmp    0x4281ba
  428499:	nop    DWORD PTR [rax+0x0]
  4284a0:	mov    ecx,ebx
  4284a2:	mov    DWORD PTR [rbp-0x30],r10d
  4284a6:	call   0x40e5c0
  4284ab:	test   rax,rax
  4284ae:	mov    r14,rax
  4284b1:	mov    r10d,DWORD PTR [rbp-0x30]
  4284b5:	jne    0x4281a0
  4284bb:	test   r13,r13
  4284be:	je     0x4284d1
  4284c0:	cmp    QWORD PTR [rbp+0x340],r13
  4284c7:	je     0x4284d1
  4284c9:	mov    rcx,r13
  4284cc:	call   0x40e6e0
  4284d1:	mov    rcx,QWORD PTR [rbp+0x18]
  4284d5:	call   0x40e6e0
  4284da:	mov    rcx,QWORD PTR [rbp+0x8]
  4284de:	test   rcx,rcx
  4284e1:	je     0x4284e8
  4284e3:	call   0x40e6e0
  4284e8:	call   QWORD PTR [rip+0x5e3f2]        # 0x4868e0
  4284ee:	mov    DWORD PTR [rax],0xc
  4284f4:	xor    eax,eax
  4284f6:	jmp    0x428923
  4284fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428500:	mov    ecx,edx
  428502:	jmp    0x4282ed
  428507:	nop    WORD PTR [rax+rax*1+0x0]
  428510:	xor    edx,edx
  428512:	jmp    0x4282c6
  428517:	nop    WORD PTR [rax+rax*1+0x0]
  428520:	add    rcx,0x1
  428524:	xor    r9d,r9d
  428527:	cmp    r8,rcx
  42852a:	je     0x428046
  428530:	add    rcx,0x1
  428534:	lea    r11d,[r9+r9*4]
  428538:	movsx  r9d,BYTE PTR [rcx-0x1]
  42853d:	cmp    rcx,r8
  428540:	lea    r9d,[r9+r11*2-0x30]
  428545:	jne    0x428530
  428547:	jmp    0x428046
  42854c:	nop    DWORD PTR [rax+0x0]
  428550:	xor    r14d,r14d
  428553:	add    rcx,0x1
  428557:	movsx  r8d,BYTE PTR [rcx-0x1]
  42855c:	lea    ebx,[r14+r14*4]
  428560:	cmp    rcx,r11
  428563:	lea    r14d,[r8+rbx*2-0x30]
  428568:	jne    0x428553
  42856a:	mov    rcx,QWORD PTR [rsi+0x30]
  42856e:	mov    r8,QWORD PTR [rsi+0x38]
  428572:	cmp    rcx,r8
  428575:	jne    0x428017
  42857b:	mov    r9d,0x6
  428581:	jmp    0x428046
  428586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428590:	xor    r14d,r14d
  428593:	jmp    0x428006
  428598:	nop    DWORD PTR [rax+rax*1+0x0]
  4285a0:	mov    rdx,QWORD PTR [rbp-0x28]
  4285a4:	mov    rcx,r14
  4285a7:	call   0x4387b0
  4285ac:	jmp    0x428390
  4285b1:	mov    rcx,rdi
  4285b4:	call   0x40e5c0
  4285b9:	mov    r9,rax
  4285bc:	jmp    0x4280e9
  4285c1:	cmp    r10d,0x12
  4285c5:	mov    rcx,QWORD PTR [rdx+0x10]
  4285c9:	je     0x428a00
  4285cf:	test   rcx,rcx
  4285d2:	je     0x428abb
  4285d8:	mov    DWORD PTR [rbp-0x30],r10d
  4285dc:	call   0x438788
  4285e1:	mov    r10d,DWORD PTR [rbp-0x30]
  4285e5:	jmp    0x428185
  4285ea:	nop    WORD PTR [rax+rax*1+0x0]
  4285f0:	lea    eax,[r9+0xc]
  4285f4:	jmp    0x428185
  4285f9:	nop    DWORD PTR [rax+0x0]
  428600:	lea    eax,[r10-0x9]
  428604:	cmp    eax,0x4
  428607:	sbb    eax,eax
  428609:	and    eax,0x8
  42860c:	add    eax,0xb
  42860f:	jmp    0x428185
  428614:	cmp    r10d,0x10
  428618:	mov    eax,0x1
  42861d:	jne    0x428185
  428623:	mov    rax,QWORD PTR [rbp-0x50]
  428627:	mov    rax,QWORD PTR [rax]
  42862a:	mov    eax,DWORD PTR [rax]
  42862c:	jmp    0x428185
  428631:	lea    eax,[r10-0x9]
  428635:	cmp    eax,0x2
  428638:	sbb    eax,eax
  42863a:	and    eax,0x13
  42863d:	add    eax,0x15
  428640:	jmp    0x428185
  428645:	lea    eax,[r10-0x9]
  428649:	cmp    eax,0x2
  42864c:	sbb    eax,eax
  42864e:	and    eax,0xb
  428651:	add    eax,0xc
  428654:	jmp    0x428185
  428659:	nop    DWORD PTR [rax+0x0]
  428660:	lea    eax,[r9+0x2693]
  428667:	add    r9d,0x273
  42866e:	cmp    r10d,0xe
  428672:	cmovne eax,r9d
  428676:	jmp    0x428185
  42867b:	nop    DWORD PTR [rax+rax*1+0x0]
  428680:	mov    rdx,QWORD PTR [rbp-0x28]
  428684:	mov    rcx,r14
  428687:	call   0x4387b0
  42868c:	jmp    0x428390
  428691:	mov    rdx,r13
  428694:	mov    r8,r12
  428697:	mov    rcx,r9
  42869a:	call   0x4387f0
  42869f:	mov    r13,rax
  4286a2:	jmp    0x428103
  4286a7:	nop    WORD PTR [rax+rax*1+0x0]
  4286b0:	mov    QWORD PTR [rax],r12
  4286b3:	mov    rbx,r12
  4286b6:	mov    r9,r13
  4286b9:	jmp    0x42810c
  4286be:	xchg   ax,ax
  4286c0:	mov    BYTE PTR [rax],r12b
  4286c3:	mov    rbx,r12
  4286c6:	mov    r9,r13
  4286c9:	jmp    0x42810c
  4286ce:	xchg   ax,ax
  4286d0:	mov    WORD PTR [rax],r12w
  4286d4:	mov    rbx,r12
  4286d7:	mov    r9,r13
  4286da:	jmp    0x42810c
  4286df:	nop
  4286e0:	mov    rcx,rdi
  4286e3:	call   0x40e5c0
  4286e8:	mov    r9,QWORD PTR [rbp-0x30]
  4286ec:	mov    r10,rax
  4286ef:	movzx  r8d,BYTE PTR [rbp-0x38]
  4286f4:	jmp    0x428417
  4286f9:	nop    DWORD PTR [rax+0x0]
  428700:	movsxd rax,DWORD PTR [rsi+0x48]
  428704:	shl    rax,0x5
  428708:	add    rax,QWORD PTR [rbp+0x8]
  42870c:	mov    r8,QWORD PTR [rax+0x10]
  428710:	lea    rax,[rip+0x4f1d9]        # 0x4778f0
  428717:	test   r8,r8
  42871a:	cmove  r8,rax
  42871e:	cmp    ecx,0x1
  428721:	jne    0x428329
  428727:	nop    WORD PTR [rax+rax*1+0x0]
  428730:	mov    r9,r8
  428733:	mov    rdx,QWORD PTR [rbp-0x28]
  428737:	mov    r8d,DWORD PTR [rbp-0x10]
  42873b:	mov    rcx,r14
  42873e:	call   0x4387b0
  428743:	jmp    0x428390
  428748:	nop    DWORD PTR [rax+rax*1+0x0]
  428750:	movsxd rax,DWORD PTR [rsi+0x48]
  428754:	shl    rax,0x5
  428758:	add    rax,QWORD PTR [rbp+0x8]
  42875c:	mov    r8,QWORD PTR [rax+0x10]
  428760:	lea    rax,[rip+0x4f191]        # 0x4778f8
  428767:	test   r8,r8
  42876a:	cmove  r8,rax
  42876e:	cmp    ecx,0x1
  428771:	jne    0x428329
  428777:	jmp    0x428730
  428779:	nop    DWORD PTR [rax+0x0]
  428780:	movsxd rax,DWORD PTR [rsi+0x48]
  428784:	shl    rax,0x5
  428788:	add    rax,QWORD PTR [rbp+0x8]
  42878c:	cmp    ecx,0x1
  42878f:	movzx  r8d,WORD PTR [rax+0x10]
  428794:	jne    0x428369
  42879a:	movzx  r9d,r8w
  42879e:	mov    rdx,QWORD PTR [rbp-0x28]
  4287a2:	mov    r8d,DWORD PTR [rbp-0x10]
  4287a6:	mov    rcx,r14
  4287a9:	call   0x4387b0
  4287ae:	jmp    0x428390
  4287b3:	movsxd rax,DWORD PTR [rsi+0x48]
  4287b7:	shl    rax,0x5
  4287bb:	add    rax,QWORD PTR [rbp+0x8]
  4287bf:	cmp    ecx,0x1
  4287c2:	movsd  xmm0,QWORD PTR [rax+0x10]
  4287c7:	je     0x428ade
  4287cd:	cmp    ecx,0x2
  4287d0:	jne    0x428a3e
  4287d6:	mov    r9d,DWORD PTR [rbp-0xc]
  4287da:	mov    r8d,DWORD PTR [rbp-0x10]
  4287de:	movsd  QWORD PTR [rsp+0x20],xmm0
  4287e4:	mov    rdx,QWORD PTR [rbp-0x28]
  4287e8:	mov    rcx,r14
  4287eb:	call   0x4387b0
  4287f0:	jmp    0x428390
  4287f5:	movsxd rax,DWORD PTR [rsi+0x48]
  4287f9:	shl    rax,0x5
  4287fd:	add    rax,QWORD PTR [rbp+0x8]
  428801:	cmp    ecx,0x1
  428804:	fld    TBYTE PTR [rax+0x10]
  428807:	fstp   TBYTE PTR [rbp-0x20]
  42880a:	je     0x428ac5
  428810:	cmp    ecx,0x2
  428813:	jne    0x428a29
  428819:	mov    rax,QWORD PTR [rbp-0x48]
  42881d:	mov    QWORD PTR [rsp+0x20],rax
  428822:	jmp    0x428337
  428827:	nop    WORD PTR [rax+rax*1+0x0]
  428830:	movsxd rax,DWORD PTR [rsi+0x48]
  428834:	shl    rax,0x5
  428838:	add    rax,QWORD PTR [rbp+0x8]
  42883c:	cmp    ecx,0x1
  42883f:	movzx  r8d,WORD PTR [rax+0x10]
  428844:	jne    0x428369
  42884a:	nop    WORD PTR [rax+rax*1+0x0]
  428850:	mov    r9d,r8d
  428853:	mov    rdx,QWORD PTR [rbp-0x28]
  428857:	mov    r8d,DWORD PTR [rbp-0x10]
  42885b:	mov    rcx,r14
  42885e:	call   0x4387b0
  428863:	jmp    0x428390
  428868:	nop    DWORD PTR [rax+rax*1+0x0]
  428870:	movsxd rax,DWORD PTR [rsi+0x48]
  428874:	shl    rax,0x5
  428878:	add    rax,QWORD PTR [rbp+0x8]
  42887c:	cmp    ecx,0x1
  42887f:	movsx  r8d,WORD PTR [rax+0x10]
  428884:	jne    0x428369
  42888a:	jmp    0x428850
  42888c:	nop    DWORD PTR [rax+0x0]
  428890:	movsxd rax,DWORD PTR [rsi+0x48]
  428894:	shl    rax,0x5
  428898:	add    rax,QWORD PTR [rbp+0x8]
  42889c:	cmp    ecx,0x1
  42889f:	movzx  r8d,BYTE PTR [rax+0x10]
  4288a4:	jne    0x428369
  4288aa:	jmp    0x428850
  4288ac:	nop    DWORD PTR [rax+0x0]
  4288b0:	movsxd rax,DWORD PTR [rsi+0x48]
  4288b4:	shl    rax,0x5
  4288b8:	add    rax,QWORD PTR [rbp+0x8]
  4288bc:	cmp    ecx,0x1
  4288bf:	movsx  r8d,BYTE PTR [rax+0x10]
  4288c4:	jne    0x428369
  4288ca:	jmp    0x428850
  4288cc:	nop    DWORD PTR [rax+0x0]
  4288d0:	xor    edi,edi
  4288d2:	jmp    0x427eb7
  4288d7:	nop    WORD PTR [rax+rax*1+0x0]
  4288e0:	mov    rdx,r13
  4288e3:	mov    r8,r12
  4288e6:	mov    rcx,r10
  4288e9:	mov    QWORD PTR [rbp-0x30],r9
  4288ed:	call   0x4387f0
  4288f2:	mov    r9,QWORD PTR [rbp-0x30]
  4288f6:	mov    r13,rax
  4288f9:	jmp    0x428431
  4288fe:	mov    rcx,QWORD PTR [rbp+0x18]
  428902:	call   0x40e6e0
  428907:	mov    rcx,QWORD PTR [rbp+0x8]
  42890b:	test   rcx,rcx
  42890e:	je     0x428915
  428910:	call   0x40e6e0
  428915:	call   QWORD PTR [rip+0x5dfc5]        # 0x4868e0
  42891b:	mov    DWORD PTR [rax],0x16
  428921:	xor    eax,eax
  428923:	lea    rsp,[rbp+0x2f8]
  42892a:	pop    rbx
  42892b:	pop    rsi
  42892c:	pop    rdi
  42892d:	pop    r12
  42892f:	pop    r13
  428931:	pop    r14
  428933:	pop    r15
  428935:	pop    rbp
  428936:	ret    
  428937:	nop    WORD PTR [rax+rax*1+0x0]
  428940:	lea    rbx,[r12+0x1]
  428945:	mov    rsi,r13
  428948:	cmp    rbx,rdi
  42894b:	jbe    0x4289b0
  42894d:	lea    rax,[rdi+rdi*1]
  428951:	test   rdi,rdi
  428954:	mov    edi,0xc
  428959:	cmovne rdi,rax
  42895d:	cmp    rdi,rbx
  428960:	cmovb  rdi,rbx
  428964:	cmp    QWORD PTR [rbp+0x340],r13
  42896b:	sete   r14b
  42896f:	test   r13,r13
  428972:	je     0x428afc
  428978:	test   r14b,r14b
  42897b:	jne    0x428afc
  428981:	mov    rcx,r13
  428984:	mov    rdx,rdi
  428987:	call   0x40e670
  42898c:	mov    r13,rax
  42898f:	test   r13,r13
  428992:	je     0x428b0c
  428998:	test   r12,r12
  42899b:	je     0x4289b0
  42899d:	test   r14b,r14b
  4289a0:	je     0x4289b0
  4289a2:	mov    r8,r12
  4289a5:	mov    rdx,rsi
  4289a8:	mov    rcx,r13
  4289ab:	call   0x4387f0
  4289b0:	cmp    r13,QWORD PTR [rbp+0x340]
  4289b7:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  4289bd:	je     0x4289d6
  4289bf:	cmp    rdi,rbx
  4289c2:	jbe    0x4289d6
  4289c4:	mov    rcx,r13
  4289c7:	mov    rdx,rbx
  4289ca:	call   0x40e670
  4289cf:	test   rax,rax
  4289d2:	cmovne r13,rax
  4289d6:	mov    rcx,QWORD PTR [rbp+0x18]
  4289da:	call   0x40e6e0
  4289df:	mov    rcx,QWORD PTR [rbp+0x8]
  4289e3:	test   rcx,rcx
  4289e6:	je     0x4289ed
  4289e8:	call   0x40e6e0
  4289ed:	mov    rax,QWORD PTR [rbp+0x348]
  4289f4:	mov    QWORD PTR [rax],r12
  4289f7:	mov    rax,r13
  4289fa:	jmp    0x428923
  4289ff:	nop
  428a00:	test   rcx,rcx
  428a03:	mov    eax,0x6
  428a08:	je     0x428a17
  428a0a:	mov    DWORD PTR [rbp-0x30],r10d
  428a0e:	call   0x438720
  428a13:	mov    r10d,DWORD PTR [rbp-0x30]
  428a17:	mov    rbx,QWORD PTR [rip+0x52fc2]        # 0x47b9e0
  428a1e:	mov    rdx,QWORD PTR [rbx]
  428a21:	imul   eax,DWORD PTR [rdx]
  428a24:	jmp    0x428185
  428a29:	mov    r8,QWORD PTR [rbp-0x48]
  428a2d:	mov    rdx,QWORD PTR [rbp-0x28]
  428a31:	mov    rcx,r14
  428a34:	call   0x4387b0
  428a39:	jmp    0x428390
  428a3e:	mov    rdx,QWORD PTR [rbp-0x28]
  428a42:	movapd xmm2,xmm0
  428a46:	movq   r8,xmm0
  428a4b:	mov    rcx,r14
  428a4e:	call   0x4387b0
  428a53:	jmp    0x428390
  428a58:	test   r9,r9
  428a5b:	je     0x4284d1
  428a61:	cmp    QWORD PTR [rbp+0x340],r9
  428a68:	je     0x4284d1
  428a6e:	mov    rcx,r9
  428a71:	call   0x40e6e0
  428a76:	jmp    0x4284d1
  428a7b:	test   r13,r13
  428a7e:	je     0x428a91
  428a80:	cmp    QWORD PTR [rbp+0x340],r13
  428a87:	je     0x428a91
  428a89:	mov    rcx,r13
  428a8c:	call   0x40e6e0
  428a91:	mov    rcx,QWORD PTR [rbp+0x18]
  428a95:	call   0x40e6e0
  428a9a:	mov    rcx,QWORD PTR [rbp+0x8]
  428a9e:	test   rcx,rcx
  428aa1:	je     0x428aa8
  428aa3:	call   0x40e6e0
  428aa8:	call   QWORD PTR [rip+0x5de32]        # 0x4868e0
  428aae:	mov    DWORD PTR [rax],0x16
  428ab4:	xor    eax,eax
  428ab6:	jmp    0x428923
  428abb:	mov    eax,0x6
  428ac0:	jmp    0x428185
  428ac5:	mov    r9,QWORD PTR [rbp-0x48]
  428ac9:	mov    r8d,DWORD PTR [rbp-0x10]
  428acd:	mov    rcx,r14
  428ad0:	mov    rdx,QWORD PTR [rbp-0x28]
  428ad4:	call   0x4387b0
  428ad9:	jmp    0x428390
  428ade:	mov    r8d,DWORD PTR [rbp-0x10]
  428ae2:	mov    rdx,QWORD PTR [rbp-0x28]
  428ae6:	movq   r9,xmm0
  428aeb:	movapd xmm3,xmm0
  428aef:	mov    rcx,r14
  428af2:	call   0x4387b0
  428af7:	jmp    0x428390
  428afc:	mov    rcx,rdi
  428aff:	call   0x40e5c0
  428b04:	mov    r13,rax
  428b07:	jmp    0x42898f
  428b0c:	test   rsi,rsi
  428b0f:	je     0x4284d1
  428b15:	cmp    QWORD PTR [rbp+0x340],rsi
  428b1c:	je     0x4284d1
  428b22:	mov    rcx,rsi
  428b25:	call   0x40e6e0
  428b2a:	jmp    0x4284d1
  428b2f:	nop
  428b30:	push   rsi
  428b31:	push   rbx
  428b32:	sub    rsp,0x28
  428b36:	movzx  eax,BYTE PTR [rcx+0x14]
  428b3a:	and    eax,0x1
  428b3d:	add    eax,DWORD PTR [rcx+0x8]
  428b40:	add    edx,eax
  428b42:	imul   edx,DWORD PTR [rcx+0x10]
  428b46:	cmp    edx,DWORD PTR [rcx+0xc]
  428b49:	jbe    0x428baf
  428b4b:	cmp    edx,0x1
  428b4e:	jbe    0x428bd1
  428b54:	mov    eax,0x1
  428b59:	jmp    0x428b64
  428b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  428b60:	test   eax,eax
  428b62:	je     0x428b6a
  428b64:	add    eax,eax
  428b66:	cmp    edx,eax
  428b68:	ja     0x428b60
  428b6a:	test   eax,eax
  428b6c:	jne    0x428bc0
  428b6e:	cmp    edx,0x10
  428b71:	mov    al,0x10
  428b73:	cmovae eax,edx
  428b76:	mov    edx,eax
  428b78:	mov    rbx,rdx
  428b7b:	mov    rsi,rcx
  428b7e:	mov    rcx,QWORD PTR [rcx]
  428b81:	call   0x40e670
  428b86:	mov    rdx,QWORD PTR [rip+0x53013]        # 0x47bba0
  428b8d:	mov    QWORD PTR [rsi],rax
  428b90:	mov    edx,DWORD PTR [rdx]
  428b92:	test   edx,edx
  428b94:	je     0x428bac
  428b96:	mov    ecx,DWORD PTR [rsi+0xc]
  428b99:	mov    r8d,ebx
  428b9c:	mov    rdx,rcx
  428b9f:	add    rcx,rax
  428ba2:	sub    r8d,edx
  428ba5:	xor    edx,edx
  428ba7:	call   0x4387e0
  428bac:	mov    DWORD PTR [rsi+0xc],ebx
  428baf:	add    rsp,0x28
  428bb3:	pop    rbx
  428bb4:	pop    rsi
  428bb5:	ret    
  428bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bc0:	mov    edx,0x10
  428bc5:	cmp    eax,0x10
  428bc8:	mov    ebx,edx
  428bca:	cmovae ebx,eax
  428bcd:	mov    edx,ebx
  428bcf:	jmp    0x428b7b
  428bd1:	mov    edx,0x10
  428bd6:	mov    ebx,0x10
  428bdb:	jmp    0x428b7b
  428bdd:	nop    DWORD PTR [rax]
  428be0:	push   rsi
  428be1:	push   rbx
  428be2:	sub    rsp,0x28
  428be6:	add    edx,DWORD PTR [rcx+0x8]
  428be9:	mov    esi,DWORD PTR [rcx+0xc]
  428bec:	cmp    edx,esi
  428bee:	jbe    0x428c41
  428bf0:	cmp    edx,0x1
  428bf3:	jbe    0x428c83
  428bf9:	mov    eax,0x1
  428bfe:	jmp    0x428c04
  428c00:	test   eax,eax
  428c02:	je     0x428c0a
  428c04:	add    eax,eax
  428c06:	cmp    edx,eax
  428c08:	ja     0x428c00
  428c0a:	test   eax,eax
  428c0c:	jne    0x428c70
  428c0e:	cmp    edx,0x10
  428c11:	mov    al,0x10
  428c13:	cmovae eax,edx
  428c16:	mov    edx,eax
  428c18:	shl    rdx,0x3
  428c1c:	mov    rbx,rcx
  428c1f:	mov    DWORD PTR [rcx+0xc],eax
  428c22:	mov    rcx,QWORD PTR [rcx]
  428c25:	call   0x40e670
  428c2a:	mov    rdx,QWORD PTR [rip+0x52f6f]        # 0x47bba0
  428c31:	mov    QWORD PTR [rbx],rax
  428c34:	mov    edx,DWORD PTR [rdx]
  428c36:	test   edx,edx
  428c38:	je     0x428c41
  428c3a:	mov    ecx,DWORD PTR [rbx+0xc]
  428c3d:	cmp    esi,ecx
  428c3f:	jb     0x428c53
  428c41:	add    rsp,0x28
  428c45:	pop    rbx
  428c46:	pop    rsi
  428c47:	ret    
  428c48:	nop    DWORD PTR [rax+rax*1+0x0]
  428c50:	mov    rax,QWORD PTR [rbx]
  428c53:	mov    edx,esi
  428c55:	add    esi,0x1
  428c58:	cmp    esi,ecx
  428c5a:	mov    QWORD PTR [rax+rdx*8],0x0
  428c62:	jne    0x428c50
  428c64:	jmp    0x428c41
  428c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428c70:	cmp    eax,0x10
  428c73:	mov    edx,0x10
  428c78:	cmovb  eax,edx
  428c7b:	mov    edx,eax
  428c7d:	shl    rdx,0x3
  428c81:	jmp    0x428c1c
  428c83:	mov    edx,0x80
  428c88:	mov    eax,0x10
  428c8d:	jmp    0x428c1c
  428c8f:	nop
  428c90:	push   rdi
  428c91:	push   rsi
  428c92:	push   rbx
  428c93:	sub    rsp,0x20
  428c97:	test   dl,0x1
  428c9a:	mov    rbx,rcx
  428c9d:	mov    edi,edx
  428c9f:	jne    0x428cf0
  428ca1:	mov    rsi,QWORD PTR [rcx]
  428ca4:	and    edi,0x2
  428ca7:	je     0x428cd0
  428ca9:	mov    rax,rsi
  428cac:	mov    QWORD PTR [rbx],0x0
  428cb3:	mov    DWORD PTR [rbx+0x8],0x0
  428cba:	mov    DWORD PTR [rbx+0xc],0x0
  428cc1:	add    rsp,0x20
  428cc5:	pop    rbx
  428cc6:	pop    rsi
  428cc7:	pop    rdi
  428cc8:	ret    
  428cc9:	nop    DWORD PTR [rax+0x0]
  428cd0:	mov    rdx,rbx
  428cd3:	mov    ecx,0x28
  428cd8:	call   0x4167c0
  428cdd:	mov    rax,rsi
  428ce0:	add    rsp,0x20
  428ce4:	pop    rbx
  428ce5:	pop    rsi
  428ce6:	pop    rdi
  428ce7:	ret    
  428ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cf0:	mov    rax,QWORD PTR [rcx+0x20]
  428cf4:	test   rax,rax
  428cf7:	je     0x428d1b
  428cf9:	mov    edx,DWORD PTR [rcx+0x8]
  428cfc:	test   edx,edx
  428cfe:	je     0x428d1b
  428d00:	xor    esi,esi
  428d02:	jmp    0x428d08
  428d04:	mov    rax,QWORD PTR [rbx+0x20]
  428d08:	mov    ecx,esi
  428d0a:	add    esi,0x1
  428d0d:	imul   ecx,DWORD PTR [rbx+0x10]
  428d11:	add    rcx,QWORD PTR [rbx]
  428d14:	call   rax
  428d16:	cmp    DWORD PTR [rbx+0x8],esi
  428d19:	ja     0x428d04
  428d1b:	mov    rcx,QWORD PTR [rbx]
  428d1e:	xor    esi,esi
  428d20:	call   0x40e6e0
  428d25:	jmp    0x428ca4
  428d2a:	nop    WORD PTR [rax+rax*1+0x0]
  428d30:	lea    r8,[rip+0x4ed49]        # 0x477a80
  428d37:	lea    rdx,[rip+0x4f002]        # 0x477d40
  428d3e:	lea    rcx,[rip+0x4ed41]        # 0x477a86
  428d45:	jmp    0x40fd20
  428d4a:	nop    WORD PTR [rax+rax*1+0x0]
  428d50:	push   rdi
  428d51:	push   rsi
  428d52:	push   rbx
  428d53:	sub    rsp,0x30
  428d57:	test   r8d,r8d
  428d5a:	mov    edi,ecx
  428d5c:	mov    esi,edx
  428d5e:	je     0x428e15
  428d64:	mov    ecx,0x28
  428d69:	mov    DWORD PTR [rsp+0x2c],r9d
  428d6e:	mov    DWORD PTR [rsp+0x28],r8d
  428d73:	call   0x416130
  428d78:	mov    rbx,rax
  428d7b:	test   edi,edi
  428d7d:	mov    QWORD PTR [rax],0x0
  428d84:	movzx  r10d,BYTE PTR [rbx+0x14]
  428d89:	mov    DWORD PTR [rax+0x8],0x0
  428d90:	mov    DWORD PTR [rax+0xc],0x0
  428d97:	mov    r9d,DWORD PTR [rsp+0x2c]
  428d9c:	setne  al
  428d9f:	mov    r8d,DWORD PTR [rsp+0x28]
  428da4:	mov    DWORD PTR [rbx+0x18],0x1
  428dab:	mov    QWORD PTR [rbx+0x20],0x0
  428db3:	and    r10d,0xfffffffc
  428db7:	test   esi,esi
  428db9:	setne  cl
  428dbc:	or     eax,r10d
  428dbf:	mov    DWORD PTR [rbx+0x10],r8d
  428dc3:	add    ecx,ecx
  428dc5:	or     eax,ecx
  428dc7:	test   r9d,r9d
  428dca:	mov    BYTE PTR [rbx+0x14],al
  428dcd:	jne    0x428de1
  428dcf:	test   al,0x1
  428dd1:	jne    0x428de1
  428dd3:	mov    rsi,rbx
  428dd6:	mov    rax,rsi
  428dd9:	add    rsp,0x30
  428ddd:	pop    rbx
  428dde:	pop    rsi
  428ddf:	pop    rdi
  428de0:	ret    
  428de1:	mov    edx,r9d
  428de4:	mov    rcx,rbx
  428de7:	mov    rsi,rbx
  428dea:	call   0x428b30
  428def:	test   BYTE PTR [rbx+0x14],0x1
  428df3:	je     0x428dd6
  428df5:	mov    r8d,DWORD PTR [rbx+0x10]
  428df9:	xor    edx,edx
  428dfb:	mov    ecx,r8d
  428dfe:	imul   ecx,DWORD PTR [rbx+0x8]
  428e02:	add    rcx,QWORD PTR [rbx]
  428e05:	call   0x4387e0
  428e0a:	mov    rax,rsi
  428e0d:	add    rsp,0x30
  428e11:	pop    rbx
  428e12:	pop    rsi
  428e13:	pop    rdi
  428e14:	ret    
  428e15:	lea    r8,[rip+0x4ec6f]        # 0x477a8b
  428e1c:	lea    rdx,[rip+0x4f0bd]        # 0x477ee0
  428e23:	lea    rcx,[rip+0x4ec5c]        # 0x477a86
  428e2a:	xor    esi,esi
  428e2c:	call   0x40fd20
  428e31:	mov    rax,rsi
  428e34:	add    rsp,0x30
  428e38:	pop    rbx
  428e39:	pop    rsi
  428e3a:	pop    rdi
  428e3b:	ret    
  428e3c:	nop    DWORD PTR [rax+0x0]
  428e40:	sub    rsp,0x28
  428e44:	test   r8d,r8d
  428e47:	je     0x428e55
  428e49:	xor    r9d,r9d
  428e4c:	add    rsp,0x28
  428e50:	jmp    0x428d50
  428e55:	lea    r8,[rip+0x4ec2f]        # 0x477a8b
  428e5c:	lea    rdx,[rip+0x4f08f]        # 0x477ef2
  428e63:	lea    rcx,[rip+0x4ec1c]        # 0x477a86
  428e6a:	call   0x40fd20
  428e6f:	xor    eax,eax
  428e71:	add    rsp,0x28
  428e75:	ret    
  428e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e80:	test   rcx,rcx
  428e83:	je     0x428e90
  428e85:	mov    QWORD PTR [rcx+0x20],rdx
  428e89:	ret    
  428e8a:	nop    WORD PTR [rax+rax*1+0x0]
  428e90:	lea    r8,[rip+0x4ec01]        # 0x477a98
  428e97:	lea    rdx,[rip+0x4f022]        # 0x477ec0
  428e9e:	lea    rcx,[rip+0x4ebe1]        # 0x477a86
  428ea5:	jmp    0x40fd20
  428eaa:	nop    WORD PTR [rax+rax*1+0x0]
  428eb0:	sub    rsp,0x28
  428eb4:	test   rcx,rcx
  428eb7:	je     0x428ed0
  428eb9:	lock add DWORD PTR [rcx+0x18],0x1
  428ebe:	mov    rax,rcx
  428ec1:	add    rsp,0x28
  428ec5:	ret    
  428ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428ed0:	lea    r8,[rip+0x4eba9]        # 0x477a80
  428ed7:	lea    rdx,[rip+0x4efc9]        # 0x477ea7
  428ede:	lea    rcx,[rip+0x4eba1]        # 0x477a86
  428ee5:	call   0x40fd20
  428eea:	xor    eax,eax
  428eec:	add    rsp,0x28
  428ef0:	ret    
  428ef1:	nop    DWORD PTR [rax+rax*1+0x0]
  428ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f00:	test   rcx,rcx
  428f03:	je     0x428f20
  428f05:	lock sub DWORD PTR [rcx+0x18],0x1
  428f0a:	je     0x428f10
  428f0c:	ret    
  428f0d:	nop    DWORD PTR [rax]
  428f10:	mov    edx,0x1
  428f15:	jmp    0x428c90
  428f1a:	nop    WORD PTR [rax+rax*1+0x0]
  428f20:	lea    r8,[rip+0x4eb59]        # 0x477a80
  428f27:	lea    rdx,[rip+0x4ef6b]        # 0x477e99
  428f2e:	lea    rcx,[rip+0x4eb51]        # 0x477a86
  428f35:	jmp    0x40fd20
  428f3a:	nop    WORD PTR [rax+rax*1+0x0]
  428f40:	sub    rsp,0x28
  428f44:	test   rcx,rcx
  428f47:	je     0x428f51
  428f49:	mov    eax,DWORD PTR [rcx+0x10]
  428f4c:	add    rsp,0x28
  428f50:	ret    
  428f51:	lea    r8,[rip+0x4eb28]        # 0x477a80
  428f58:	lea    rdx,[rip+0x4ef21]        # 0x477e80
  428f5f:	lea    rcx,[rip+0x4eb20]        # 0x477a86
  428f66:	call   0x40fd20
  428f6b:	xor    eax,eax
  428f6d:	add    rsp,0x28
  428f71:	ret    
  428f72:	nop    DWORD PTR [rax+0x0]
  428f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f80:	sub    rsp,0x28
  428f84:	test   rcx,rcx
  428f87:	je     0x428fb2
  428f89:	test   edx,edx
  428f8b:	mov    r8d,0xffffffff
  428f91:	setne  dl
  428f94:	movzx  edx,dl
  428f97:	lock xadd DWORD PTR [rcx+0x18],r8d
  428f9d:	mov    eax,edx
  428f9f:	or     eax,0x2
  428fa2:	cmp    r8d,0x1
  428fa6:	cmovne edx,eax
  428fa9:	add    rsp,0x28
  428fad:	jmp    0x428c90
  428fb2:	lea    r8,[rip+0x4eac7]        # 0x477a80
  428fb9:	lea    rdx,[rip+0x4eea4]        # 0x477e64
  428fc0:	lea    rcx,[rip+0x4eabf]        # 0x477a86
  428fc7:	call   0x40fd20
  428fcc:	xor    eax,eax
  428fce:	add    rsp,0x28
  428fd2:	ret    
  428fd3:	nop    DWORD PTR [rax]
  428fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fe0:	push   rdi
  428fe1:	push   rsi
  428fe2:	push   rbx
  428fe3:	sub    rsp,0x20
  428fe7:	test   rcx,rcx
  428fea:	mov    rbx,rcx
  428fed:	mov    rdi,rdx
  428ff0:	mov    esi,r8d
  428ff3:	je     0x429050
  428ff5:	mov    edx,r8d
  428ff8:	call   0x428b30
  428ffd:	mov    r8d,DWORD PTR [rbx+0x10]
  429001:	mov    rdx,rdi
  429004:	mov    ecx,r8d
  429007:	imul   ecx,DWORD PTR [rbx+0x8]
  42900b:	imul   r8d,esi
  42900f:	add    rcx,QWORD PTR [rbx]
  429012:	call   0x4387f0
  429017:	add    esi,DWORD PTR [rbx+0x8]
  42901a:	test   BYTE PTR [rbx+0x14],0x1
  42901e:	mov    DWORD PTR [rbx+0x8],esi
  429021:	jne    0x429030
  429023:	mov    rax,rbx
  429026:	add    rsp,0x20
  42902a:	pop    rbx
  42902b:	pop    rsi
  42902c:	pop    rdi
  42902d:	ret    
  42902e:	xchg   ax,ax
  429030:	mov    r8d,DWORD PTR [rbx+0x10]
  429034:	xor    edx,edx
  429036:	imul   esi,r8d
  42903a:	add    rsi,QWORD PTR [rbx]
  42903d:	mov    rcx,rsi
  429040:	call   0x4387e0
  429045:	mov    rax,rbx
  429048:	add    rsp,0x20
  42904c:	pop    rbx
  42904d:	pop    rsi
  42904e:	pop    rdi
  42904f:	ret    
  429050:	lea    r8,[rip+0x4ea29]        # 0x477a80
  429057:	lea    rdx,[rip+0x4edf2]        # 0x477e50
  42905e:	lea    rcx,[rip+0x4ea21]        # 0x477a86
  429065:	call   0x40fd20
  42906a:	xor    eax,eax
  42906c:	add    rsp,0x20
  429070:	pop    rbx
  429071:	pop    rsi
  429072:	pop    rdi
  429073:	ret    
  429074:	xchg   ax,ax
  429076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429080:	push   rdi
  429081:	push   rsi
  429082:	push   rbx
  429083:	sub    rsp,0x20
  429087:	test   rcx,rcx
  42908a:	mov    rbx,rcx
  42908d:	mov    rdi,rdx
  429090:	mov    esi,r8d
  429093:	je     0x429101
  429095:	mov    edx,r8d
  429098:	call   0x428b30
  42909d:	mov    r8d,DWORD PTR [rbx+0x10]
  4290a1:	mov    ecx,esi
  4290a3:	mov    rdx,QWORD PTR [rbx]
  4290a6:	imul   ecx,r8d
  4290aa:	imul   r8d,DWORD PTR [rbx+0x8]
  4290af:	add    rcx,rdx
  4290b2:	call   0x4387e8
  4290b7:	mov    r8d,esi
  4290ba:	mov    rcx,QWORD PTR [rbx]
  4290bd:	mov    rdx,rdi
  4290c0:	imul   r8d,DWORD PTR [rbx+0x10]
  4290c5:	call   0x4387f0
  4290ca:	add    esi,DWORD PTR [rbx+0x8]
  4290cd:	test   BYTE PTR [rbx+0x14],0x1
  4290d1:	mov    DWORD PTR [rbx+0x8],esi
  4290d4:	jne    0x4290e1
  4290d6:	mov    rax,rbx
  4290d9:	add    rsp,0x20
  4290dd:	pop    rbx
  4290de:	pop    rsi
  4290df:	pop    rdi
  4290e0:	ret    
  4290e1:	mov    r8d,DWORD PTR [rbx+0x10]
  4290e5:	xor    edx,edx
  4290e7:	imul   esi,r8d
  4290eb:	add    rsi,QWORD PTR [rbx]
  4290ee:	mov    rcx,rsi
  4290f1:	call   0x4387e0
  4290f6:	mov    rax,rbx
  4290f9:	add    rsp,0x20
  4290fd:	pop    rbx
  4290fe:	pop    rsi
  4290ff:	pop    rdi
  429100:	ret    
  429101:	lea    r8,[rip+0x4e978]        # 0x477a80
  429108:	lea    rdx,[rip+0x4ed21]        # 0x477e30
  42910f:	lea    rcx,[rip+0x4e970]        # 0x477a86
  429116:	call   0x40fd20
  42911b:	xor    eax,eax
  42911d:	add    rsp,0x20
  429121:	pop    rbx
  429122:	pop    rsi
  429123:	pop    rdi
  429124:	ret    
  429125:	nop
  429126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429130:	push   rbp
  429131:	push   rdi
  429132:	push   rsi
  429133:	push   rbx
  429134:	sub    rsp,0x28
  429138:	test   rcx,rcx
  42913b:	mov    rbx,rcx
  42913e:	mov    esi,edx
  429140:	mov    rbp,r8
  429143:	mov    edi,r9d
  429146:	je     0x4291d1
  42914c:	mov    edx,r9d
  42914f:	call   0x428b30
  429154:	mov    eax,DWORD PTR [rbx+0x10]
  429157:	mov    r8d,DWORD PTR [rbx+0x8]
  42915b:	lea    ecx,[rdi+rsi*1]
  42915e:	mov    edx,esi
  429160:	mov    r9,QWORD PTR [rbx]
  429163:	imul   edx,eax
  429166:	sub    r8d,esi
  429169:	imul   ecx,eax
  42916c:	add    rdx,r9
  42916f:	imul   r8d,eax
  429173:	add    rcx,r9
  429176:	call   0x4387e8
  42917b:	mov    r8d,DWORD PTR [rbx+0x10]
  42917f:	mov    ecx,esi
  429181:	mov    rdx,rbp
  429184:	imul   ecx,r8d
  429188:	add    rcx,QWORD PTR [rbx]
  42918b:	imul   r8d,edi
  42918f:	call   0x4387f0
  429194:	add    edi,DWORD PTR [rbx+0x8]
  429197:	test   BYTE PTR [rbx+0x14],0x1
  42919b:	mov    DWORD PTR [rbx+0x8],edi
  42919e:	jne    0x4291b0
  4291a0:	mov    rax,rbx
  4291a3:	add    rsp,0x28
  4291a7:	pop    rbx
  4291a8:	pop    rsi
  4291a9:	pop    rdi
  4291aa:	pop    rbp
  4291ab:	ret    
  4291ac:	nop    DWORD PTR [rax+0x0]
  4291b0:	mov    r8d,DWORD PTR [rbx+0x10]
  4291b4:	xor    edx,edx
  4291b6:	imul   edi,r8d
  4291ba:	add    rdi,QWORD PTR [rbx]
  4291bd:	mov    rcx,rdi
  4291c0:	call   0x4387e0
  4291c5:	mov    rax,rbx
  4291c8:	add    rsp,0x28
  4291cc:	pop    rbx
  4291cd:	pop    rsi
  4291ce:	pop    rdi
  4291cf:	pop    rbp
  4291d0:	ret    
  4291d1:	lea    r8,[rip+0x4e8a8]        # 0x477a80
  4291d8:	lea    rdx,[rip+0x4ec31]        # 0x477e10
  4291df:	lea    rcx,[rip+0x4e8a0]        # 0x477a86
  4291e6:	call   0x40fd20
  4291eb:	xor    eax,eax
  4291ed:	add    rsp,0x28
  4291f1:	pop    rbx
  4291f2:	pop    rsi
  4291f3:	pop    rdi
  4291f4:	pop    rbp
  4291f5:	ret    
  4291f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429200:	push   rsi
  429201:	push   rbx
  429202:	sub    rsp,0x28
  429206:	test   rcx,rcx
  429209:	mov    rbx,rcx
  42920c:	mov    esi,edx
  42920e:	je     0x4292d1
  429214:	mov    eax,DWORD PTR [rcx+0x8]
  429217:	cmp    eax,edx
  429219:	jbe    0x429290
  42921b:	mov    rdx,QWORD PTR [rcx+0x20]
  42921f:	test   rdx,rdx
  429222:	je     0x429232
  429224:	mov    ecx,esi
  429226:	imul   ecx,DWORD PTR [rbx+0x10]
  42922a:	add    rcx,QWORD PTR [rbx]
  42922d:	call   rdx
  42922f:	mov    eax,DWORD PTR [rbx+0x8]
  429232:	sub    eax,0x1
  429235:	cmp    eax,esi
  429237:	je     0x429266
  429239:	mov    r8d,DWORD PTR [rbx+0x10]
  42923d:	lea    edx,[rsi+0x1]
  429240:	mov    r9,QWORD PTR [rbx]
  429243:	sub    eax,esi
  429245:	imul   edx,r8d
  429249:	mov    edx,edx
  42924b:	mov    rcx,rdx
  42924e:	add    rdx,r9
  429251:	sub    ecx,r8d
  429254:	imul   r8d,eax
  429258:	add    rcx,r9
  42925b:	call   0x4387e8
  429260:	mov    eax,DWORD PTR [rbx+0x8]
  429263:	sub    eax,0x1
  429266:	mov    rdx,QWORD PTR [rip+0x52933]        # 0x47bba0
  42926d:	mov    DWORD PTR [rbx+0x8],eax
  429270:	mov    edx,DWORD PTR [rdx]
  429272:	test   edx,edx
  429274:	jne    0x4292b3
  429276:	test   BYTE PTR [rbx+0x14],0x1
  42927a:	jne    0x4292b3
  42927c:	mov    rax,rbx
  42927f:	add    rsp,0x28
  429283:	pop    rbx
  429284:	pop    rsi
  429285:	ret    
  429286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429290:	lea    r8,[rip+0x4e80f]        # 0x477aa6
  429297:	lea    rdx,[rip+0x4eb32]        # 0x477dd0
  42929e:	lea    rcx,[rip+0x4e7e1]        # 0x477a86
  4292a5:	call   0x40fd20
  4292aa:	xor    eax,eax
  4292ac:	add    rsp,0x28
  4292b0:	pop    rbx
  4292b1:	pop    rsi
  4292b2:	ret    
  4292b3:	mov    r8d,DWORD PTR [rbx+0x10]
  4292b7:	mov    ecx,eax
  4292b9:	xor    edx,edx
  4292bb:	imul   ecx,r8d
  4292bf:	add    rcx,QWORD PTR [rbx]
  4292c2:	call   0x4387e0
  4292c7:	mov    rax,rbx
  4292ca:	add    rsp,0x28
  4292ce:	pop    rbx
  4292cf:	pop    rsi
  4292d0:	ret    
  4292d1:	lea    r8,[rip+0x4e7a8]        # 0x477a80
  4292d8:	lea    rdx,[rip+0x4eaf1]        # 0x477dd0
  4292df:	lea    rcx,[rip+0x4e7a0]        # 0x477a86
  4292e6:	call   0x40fd20
  4292eb:	xor    eax,eax
  4292ed:	add    rsp,0x28
  4292f1:	pop    rbx
  4292f2:	pop    rsi
  4292f3:	ret    
  4292f4:	xchg   ax,ax
  4292f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429300:	push   rsi
  429301:	push   rbx
  429302:	sub    rsp,0x28
  429306:	test   rcx,rcx
  429309:	mov    rbx,rcx
  42930c:	mov    esi,edx
  42930e:	je     0x4293c1
  429314:	mov    eax,DWORD PTR [rcx+0x8]
  429317:	cmp    eax,edx
  429319:	jbe    0x429380
  42931b:	mov    rdx,QWORD PTR [rcx+0x20]
  42931f:	test   rdx,rdx
  429322:	je     0x429332
  429324:	mov    ecx,esi
  429326:	imul   ecx,DWORD PTR [rbx+0x10]
  42932a:	add    rcx,QWORD PTR [rbx]
  42932d:	call   rdx
  42932f:	mov    eax,DWORD PTR [rbx+0x8]
  429332:	sub    eax,0x1
  429335:	cmp    eax,esi
  429337:	je     0x42935b
  429339:	mov    r8d,DWORD PTR [rbx+0x10]
  42933d:	mov    ecx,esi
  42933f:	mov    rdx,QWORD PTR [rbx]
  429342:	imul   ecx,r8d
  429346:	imul   eax,r8d
  42934a:	add    rcx,rdx
  42934d:	add    rdx,rax
  429350:	call   0x4387f0
  429355:	mov    eax,DWORD PTR [rbx+0x8]
  429358:	sub    eax,0x1
  42935b:	mov    rdx,QWORD PTR [rip+0x5283e]        # 0x47bba0
  429362:	mov    DWORD PTR [rbx+0x8],eax
  429365:	mov    edx,DWORD PTR [rdx]
  429367:	test   edx,edx
  429369:	jne    0x4293a3
  42936b:	test   BYTE PTR [rbx+0x14],0x1
  42936f:	jne    0x4293a3
  429371:	mov    rax,rbx
  429374:	add    rsp,0x28
  429378:	pop    rbx
  429379:	pop    rsi
  42937a:	ret    
  42937b:	nop    DWORD PTR [rax+rax*1+0x0]
  429380:	lea    r8,[rip+0x4e71f]        # 0x477aa6
  429387:	lea    rdx,[rip+0x4ea22]        # 0x477db0
  42938e:	lea    rcx,[rip+0x4e6f1]        # 0x477a86
  429395:	call   0x40fd20
  42939a:	xor    eax,eax
  42939c:	add    rsp,0x28
  4293a0:	pop    rbx
  4293a1:	pop    rsi
  4293a2:	ret    
  4293a3:	mov    r8d,DWORD PTR [rbx+0x10]
  4293a7:	mov    ecx,eax
  4293a9:	xor    edx,edx
  4293ab:	imul   ecx,r8d
  4293af:	add    rcx,QWORD PTR [rbx]
  4293b2:	call   0x4387e0
  4293b7:	mov    rax,rbx
  4293ba:	add    rsp,0x28
  4293be:	pop    rbx
  4293bf:	pop    rsi
  4293c0:	ret    
  4293c1:	lea    r8,[rip+0x4e6b8]        # 0x477a80
  4293c8:	lea    rdx,[rip+0x4e9e1]        # 0x477db0
  4293cf:	lea    rcx,[rip+0x4e6b0]        # 0x477a86
  4293d6:	call   0x40fd20
  4293db:	xor    eax,eax
  4293dd:	add    rsp,0x28
  4293e1:	pop    rbx
  4293e2:	pop    rsi
  4293e3:	ret    
  4293e4:	xchg   ax,ax
  4293e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293f0:	push   r12
  4293f2:	push   rbp
  4293f3:	push   rdi
  4293f4:	push   rsi
  4293f5:	push   rbx
  4293f6:	sub    rsp,0x20
  4293fa:	test   rcx,rcx
  4293fd:	mov    rbx,rcx
  429400:	mov    ebp,edx
  429402:	mov    r12d,r8d
  429405:	je     0x429550
  42940b:	mov    r8d,DWORD PTR [rcx+0x8]
  42940f:	cmp    r8d,edx
  429412:	jbe    0x4294c4
  429418:	lea    edi,[rdx+r12*1]
  42941c:	cmp    r8d,edi
  42941f:	jb     0x4294f0
  429425:	mov    rax,QWORD PTR [rcx+0x20]
  429429:	test   rax,rax
  42942c:	je     0x42945a
  42942e:	test   r12d,r12d
  429431:	mov    esi,edx
  429433:	jne    0x429444
  429435:	jmp    0x42945a
  429437:	nop    WORD PTR [rax+rax*1+0x0]
  429440:	mov    rax,QWORD PTR [rbx+0x20]
  429444:	mov    ecx,esi
  429446:	add    esi,0x1
  429449:	imul   ecx,DWORD PTR [rbx+0x10]
  42944d:	add    rcx,QWORD PTR [rbx]
  429450:	call   rax
  429452:	cmp    edi,esi
  429454:	jne    0x429440
  429456:	mov    r8d,DWORD PTR [rbx+0x8]
  42945a:	cmp    edi,r8d
  42945d:	je     0x429483
  42945f:	mov    eax,DWORD PTR [rbx+0x10]
  429462:	mov    edx,edi
  429464:	mov    rcx,QWORD PTR [rbx]
  429467:	sub    r8d,edi
  42946a:	imul   edx,eax
  42946d:	imul   ebp,eax
  429470:	add    rdx,rcx
  429473:	imul   r8d,eax
  429477:	add    rcx,rbp
  42947a:	call   0x4387e8
  42947f:	mov    r8d,DWORD PTR [rbx+0x8]
  429483:	mov    rax,QWORD PTR [rip+0x52716]        # 0x47bba0
  42948a:	sub    r8d,r12d
  42948d:	mov    DWORD PTR [rbx+0x8],r8d
  429491:	mov    eax,DWORD PTR [rax]
  429493:	test   eax,eax
  429495:	je     0x429520
  42949b:	mov    eax,DWORD PTR [rbx+0x10]
  42949e:	xor    edx,edx
  4294a0:	imul   r8d,eax
  4294a4:	mov    rcx,r8
  4294a7:	mov    r8d,r12d
  4294aa:	add    rcx,QWORD PTR [rbx]
  4294ad:	imul   r8d,eax
  4294b1:	call   0x4387e0
  4294b6:	mov    rax,rbx
  4294b9:	add    rsp,0x20
  4294bd:	pop    rbx
  4294be:	pop    rsi
  4294bf:	pop    rdi
  4294c0:	pop    rbp
  4294c1:	pop    r12
  4294c3:	ret    
  4294c4:	lea    r8,[rip+0x4e5db]        # 0x477aa6
  4294cb:	lea    rdx,[rip+0x4e8be]        # 0x477d90
  4294d2:	lea    rcx,[rip+0x4e5ad]        # 0x477a86
  4294d9:	call   0x40fd20
  4294de:	xor    eax,eax
  4294e0:	add    rsp,0x20
  4294e4:	pop    rbx
  4294e5:	pop    rsi
  4294e6:	pop    rdi
  4294e7:	pop    rbp
  4294e8:	pop    r12
  4294ea:	ret    
  4294eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4294f0:	lea    r8,[rip+0x4e5c3]        # 0x477aba
  4294f7:	lea    rdx,[rip+0x4e892]        # 0x477d90
  4294fe:	lea    rcx,[rip+0x4e581]        # 0x477a86
  429505:	call   0x40fd20
  42950a:	xor    eax,eax
  42950c:	add    rsp,0x20
  429510:	pop    rbx
  429511:	pop    rsi
  429512:	pop    rdi
  429513:	pop    rbp
  429514:	pop    r12
  429516:	ret    
  429517:	nop    WORD PTR [rax+rax*1+0x0]
  429520:	test   BYTE PTR [rbx+0x14],0x1
  429524:	jne    0x429534
  429526:	mov    rax,rbx
  429529:	add    rsp,0x20
  42952d:	pop    rbx
  42952e:	pop    rsi
  42952f:	pop    rdi
  429530:	pop    rbp
  429531:	pop    r12
  429533:	ret    
  429534:	mov    eax,DWORD PTR [rbx+0x10]
  429537:	xor    edx,edx
  429539:	imul   r8d,eax
  42953d:	mov    rcx,r8
  429540:	add    rcx,QWORD PTR [rbx]
  429543:	mov    r8d,eax
  429546:	call   0x4387e0
  42954b:	mov    rax,rbx
  42954e:	jmp    0x4294e0
  429550:	lea    r8,[rip+0x4e529]        # 0x477a80
  429557:	lea    rdx,[rip+0x4e832]        # 0x477d90
  42955e:	lea    rcx,[rip+0x4e521]        # 0x477a86
  429565:	call   0x40fd20
  42956a:	xor    eax,eax
  42956c:	jmp    0x4294e0
  429571:	nop    DWORD PTR [rax+rax*1+0x0]
  429576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429580:	push   rsi
  429581:	push   rbx
  429582:	sub    rsp,0x28
  429586:	test   rcx,rcx
  429589:	mov    rbx,rcx
  42958c:	mov    esi,edx
  42958e:	je     0x429622
  429594:	mov    r8d,DWORD PTR [rcx+0x8]
  429598:	cmp    r8d,edx
  42959b:	jb     0x4295b4
  42959d:	ja     0x429610
  42959f:	movzx  eax,BYTE PTR [rbx+0x14]
  4295a3:	test   al,0x1
  4295a5:	mov    DWORD PTR [rbx+0x8],esi
  4295a8:	jne    0x4295f0
  4295aa:	mov    rax,rbx
  4295ad:	add    rsp,0x28
  4295b1:	pop    rbx
  4295b2:	pop    rsi
  4295b3:	ret    
  4295b4:	mov    edx,esi
  4295b6:	mov    rcx,rbx
  4295b9:	sub    edx,r8d
  4295bc:	call   0x428b30
  4295c1:	movzx  eax,BYTE PTR [rbx+0x14]
  4295c5:	test   al,0x2
  4295c7:	je     0x4295a3
  4295c9:	mov    eax,DWORD PTR [rbx+0x10]
  4295cc:	mov    ecx,DWORD PTR [rbx+0x8]
  4295cf:	mov    r8d,esi
  4295d2:	xor    edx,edx
  4295d4:	sub    r8d,ecx
  4295d7:	imul   ecx,eax
  4295da:	add    rcx,QWORD PTR [rbx]
  4295dd:	imul   r8d,eax
  4295e1:	call   0x4387e0
  4295e6:	movzx  eax,BYTE PTR [rbx+0x14]
  4295ea:	jmp    0x4295a3
  4295ec:	nop    DWORD PTR [rax+0x0]
  4295f0:	mov    r8d,DWORD PTR [rbx+0x10]
  4295f4:	mov    ecx,esi
  4295f6:	xor    edx,edx
  4295f8:	imul   ecx,r8d
  4295fc:	add    rcx,QWORD PTR [rbx]
  4295ff:	call   0x4387e0
  429604:	mov    rax,rbx
  429607:	add    rsp,0x28
  42960b:	pop    rbx
  42960c:	pop    rsi
  42960d:	ret    
  42960e:	xchg   ax,ax
  429610:	sub    r8d,esi
  429613:	mov    edx,esi
  429615:	mov    rcx,rbx
  429618:	call   0x4293f0
  42961d:	jmp    0x42959f
  429622:	lea    r8,[rip+0x4e457]        # 0x477a80
  429629:	lea    rdx,[rip+0x4e7c0]        # 0x477df0
  429630:	lea    rcx,[rip+0x4e44f]        # 0x477a86
  429637:	xor    ebx,ebx
  429639:	call   0x40fd20
  42963e:	mov    rax,rbx
  429641:	add    rsp,0x28
  429645:	pop    rbx
  429646:	pop    rsi
  429647:	ret    
  429648:	nop    DWORD PTR [rax+rax*1+0x0]
  429650:	sub    rsp,0x38
  429654:	test   rcx,rcx
  429657:	je     0x429680
  429659:	mov    r8d,DWORD PTR [rcx+0x10]
  42965d:	mov    r9,rdx
  429660:	mov    edx,DWORD PTR [rcx+0x8]
  429663:	mov    QWORD PTR [rsp+0x20],0x0
  42966c:	mov    rcx,QWORD PTR [rcx]
  42966f:	call   0x431300
  429674:	nop
  429675:	add    rsp,0x38
  429679:	ret    
  42967a:	nop    WORD PTR [rax+rax*1+0x0]
  429680:	lea    r8,[rip+0x4e411]        # 0x477a98
  429687:	lea    rdx,[rip+0x4e6e9]        # 0x477d77
  42968e:	lea    rcx,[rip+0x4e3f1]        # 0x477a86
  429695:	add    rsp,0x38
  429699:	jmp    0x40fd20
  42969e:	xchg   ax,ax
  4296a0:	sub    rsp,0x38
  4296a4:	test   rcx,rcx
  4296a7:	je     0x4296d0
  4296a9:	mov    rax,r8
  4296ac:	mov    r8d,DWORD PTR [rcx+0x10]
  4296b0:	mov    r9,rdx
  4296b3:	mov    edx,DWORD PTR [rcx+0x8]
  4296b6:	mov    QWORD PTR [rsp+0x20],rax
  4296bb:	mov    rcx,QWORD PTR [rcx]
  4296be:	call   0x431300
  4296c3:	nop
  4296c4:	add    rsp,0x38
  4296c8:	ret    
  4296c9:	nop    DWORD PTR [rax+0x0]
  4296d0:	lea    r8,[rip+0x4e3c1]        # 0x477a98
  4296d7:	lea    rdx,[rip+0x4e682]        # 0x477d60
  4296de:	lea    rcx,[rip+0x4e3a1]        # 0x477a86
  4296e5:	add    rsp,0x38
  4296e9:	jmp    0x40fd20
  4296ee:	xchg   ax,ax
  4296f0:	push   rbx
  4296f1:	sub    rsp,0x30
  4296f5:	mov    ebx,ecx
  4296f7:	mov    ecx,0x20
  4296fc:	call   0x416130
  429701:	test   ebx,ebx
  429703:	mov    QWORD PTR [rax],0x0
  42970a:	mov    DWORD PTR [rax+0x8],0x0
  429711:	mov    DWORD PTR [rax+0xc],0x0
  429718:	mov    DWORD PTR [rax+0x10],0x1
  42971f:	mov    QWORD PTR [rax+0x18],0x0
  429727:	je     0x42973d
  429729:	mov    rcx,rax
  42972c:	mov    edx,ebx
  42972e:	mov    QWORD PTR [rsp+0x28],rax
  429733:	call   0x428be0
  429738:	mov    rax,QWORD PTR [rsp+0x28]
  42973d:	add    rsp,0x30
  429741:	pop    rbx
  429742:	ret    
  429743:	nop    DWORD PTR [rax]
  429746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429750:	xor    ecx,ecx
  429752:	jmp    0x4296f0
  429754:	xchg   ax,ax
  429756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429760:	push   rbx
  429761:	sub    rsp,0x30
  429765:	mov    rbx,rcx
  429768:	xor    ecx,ecx
  42976a:	call   0x4296f0
  42976f:	test   rax,rax
  429772:	je     0x429780
  429774:	mov    QWORD PTR [rax+0x18],rbx
  429778:	add    rsp,0x30
  42977c:	pop    rbx
  42977d:	ret    
  42977e:	xchg   ax,ax
  429780:	mov    QWORD PTR [rsp+0x28],rax
  429785:	call   0x428d30
  42978a:	mov    rax,QWORD PTR [rsp+0x28]
  42978f:	add    rsp,0x30
  429793:	pop    rbx
  429794:	ret    
  429795:	nop
  429796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4297a0:	push   rbx
  4297a1:	sub    rsp,0x30
  4297a5:	mov    rbx,rdx
  4297a8:	call   0x4296f0
  4297ad:	test   rax,rax
  4297b0:	je     0x4297c0
  4297b2:	mov    QWORD PTR [rax+0x18],rbx
  4297b6:	add    rsp,0x30
  4297ba:	pop    rbx
  4297bb:	ret    
  4297bc:	nop    DWORD PTR [rax+0x0]
  4297c0:	mov    QWORD PTR [rsp+0x28],rax
  4297c5:	call   0x428d30
  4297ca:	mov    rax,QWORD PTR [rsp+0x28]
  4297cf:	add    rsp,0x30
  4297d3:	pop    rbx
  4297d4:	ret    
  4297d5:	nop
  4297d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4297e0:	test   rcx,rcx
  4297e3:	je     0x4297f0
  4297e5:	mov    QWORD PTR [rcx+0x18],rdx
  4297e9:	ret    
  4297ea:	nop    WORD PTR [rax+rax*1+0x0]
  4297f0:	jmp    0x428d30
  4297f5:	nop
  4297f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429800:	sub    rsp,0x28
  429804:	test   rcx,rcx
  429807:	je     0x429820
  429809:	lock add DWORD PTR [rcx+0x10],0x1
  42980e:	mov    rax,rcx
  429811:	add    rsp,0x28
  429815:	ret    
  429816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429820:	lea    r8,[rip+0x4e259]        # 0x477a80
  429827:	lea    rdx,[rip+0x4e502]        # 0x477d30
  42982e:	lea    rcx,[rip+0x4e251]        # 0x477a86
  429835:	call   0x40fd20
  42983a:	xor    eax,eax
  42983c:	add    rsp,0x28
  429840:	ret    
  429841:	nop    DWORD PTR [rax+rax*1+0x0]
  429846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429850:	push   rbp
  429851:	push   rdi
  429852:	push   rsi
  429853:	push   rbx
  429854:	sub    rsp,0x28
  429858:	test   rcx,rcx
  42985b:	mov    rbx,rcx
  42985e:	mov    edi,edx
  429860:	je     0x429910
  429866:	mov    r8d,DWORD PTR [rcx+0x8]
  42986a:	cmp    r8d,edx
  42986d:	jbe    0x4298e1
  42986f:	mov    eax,edx
  429871:	mov    rdx,QWORD PTR [rcx]
  429874:	lea    rbp,[rax*8+0x0]
  42987c:	mov    rsi,QWORD PTR [rdx+rax*8]
  429880:	mov    rax,QWORD PTR [rcx+0x18]
  429884:	test   rax,rax
  429887:	je     0x429892
  429889:	mov    rcx,rsi
  42988c:	call   rax
  42988e:	mov    r8d,DWORD PTR [rbx+0x8]
  429892:	sub    r8d,0x1
  429896:	cmp    r8d,edi
  429899:	je     0x4298b9
  42989b:	mov    rcx,QWORD PTR [rbx]
  42989e:	sub    r8d,edi
  4298a1:	shl    r8,0x3
  4298a5:	lea    rdx,[rcx+rbp*1+0x8]
  4298aa:	add    rcx,rbp
  4298ad:	call   0x4387e8
  4298b2:	mov    eax,DWORD PTR [rbx+0x8]
  4298b5:	lea    r8d,[rax-0x1]
  4298b9:	mov    rax,QWORD PTR [rip+0x522e0]        # 0x47bba0
  4298c0:	mov    DWORD PTR [rbx+0x8],r8d
  4298c4:	mov    eax,DWORD PTR [rax]
  4298c6:	test   eax,eax
  4298c8:	je     0x4298d5
  4298ca:	mov    rax,QWORD PTR [rbx]
  4298cd:	mov    QWORD PTR [rax+r8*8],0x0
  4298d5:	mov    rax,rsi
  4298d8:	add    rsp,0x28
  4298dc:	pop    rbx
  4298dd:	pop    rsi
  4298de:	pop    rdi
  4298df:	pop    rbp
  4298e0:	ret    
  4298e1:	lea    r8,[rip+0x4e1be]        # 0x477aa6
  4298e8:	lea    rdx,[rip+0x4e3c1]        # 0x477cb0
  4298ef:	lea    rcx,[rip+0x4e190]        # 0x477a86
  4298f6:	call   0x40fd20
  4298fb:	xor    eax,eax
  4298fd:	add    rsp,0x28
  429901:	pop    rbx
  429902:	pop    rsi
  429903:	pop    rdi
  429904:	pop    rbp
  429905:	ret    
  429906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429910:	lea    r8,[rip+0x4e169]        # 0x477a80
  429917:	lea    rdx,[rip+0x4e392]        # 0x477cb0
  42991e:	lea    rcx,[rip+0x4e161]        # 0x477a86
  429925:	call   0x40fd20
  42992a:	xor    eax,eax
  42992c:	add    rsp,0x28
  429930:	pop    rbx
  429931:	pop    rsi
  429932:	pop    rdi
  429933:	pop    rbp
  429934:	ret    
  429935:	nop
  429936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429940:	push   rbp
  429941:	push   rdi
  429942:	push   rsi
  429943:	push   rbx
  429944:	sub    rsp,0x28
  429948:	test   rcx,rcx
  42994b:	mov    rbx,rcx
  42994e:	mov    edi,edx
  429950:	je     0x4299e5
  429956:	mov    r8d,DWORD PTR [rcx+0x8]
  42995a:	cmp    r8d,edx
  42995d:	jbe    0x4299c0
  42995f:	mov    rax,QWORD PTR [rcx]
  429962:	mov    ebp,edx
  429964:	mov    rsi,QWORD PTR [rax+rbp*8]
  429968:	mov    rax,QWORD PTR [rcx+0x18]
  42996c:	test   rax,rax
  42996f:	je     0x42997a
  429971:	mov    rcx,rsi
  429974:	call   rax
  429976:	mov    r8d,DWORD PTR [rbx+0x8]
  42997a:	sub    r8d,0x1
  42997e:	cmp    r8d,edi
  429981:	je     0x429991
  429983:	mov    rax,QWORD PTR [rbx]
  429986:	mov    edx,r8d
  429989:	mov    rdx,QWORD PTR [rax+rdx*8]
  42998d:	mov    QWORD PTR [rax+rbp*8],rdx
  429991:	mov    rax,QWORD PTR [rip+0x52208]        # 0x47bba0
  429998:	mov    DWORD PTR [rbx+0x8],r8d
  42999c:	mov    eax,DWORD PTR [rax]
  42999e:	test   eax,eax
  4299a0:	je     0x4299ad
  4299a2:	mov    rax,QWORD PTR [rbx]
  4299a5:	mov    QWORD PTR [rax+r8*8],0x0
  4299ad:	mov    rax,rsi
  4299b0:	add    rsp,0x28
  4299b4:	pop    rbx
  4299b5:	pop    rsi
  4299b6:	pop    rdi
  4299b7:	pop    rbp
  4299b8:	ret    
  4299b9:	nop    DWORD PTR [rax+0x0]
  4299c0:	lea    r8,[rip+0x4e0df]        # 0x477aa6
  4299c7:	lea    rdx,[rip+0x4e2c2]        # 0x477c90
  4299ce:	lea    rcx,[rip+0x4e0b1]        # 0x477a86
  4299d5:	call   0x40fd20
  4299da:	xor    eax,eax
  4299dc:	add    rsp,0x28
  4299e0:	pop    rbx
  4299e1:	pop    rsi
  4299e2:	pop    rdi
  4299e3:	pop    rbp
  4299e4:	ret    
  4299e5:	lea    r8,[rip+0x4e094]        # 0x477a80
  4299ec:	lea    rdx,[rip+0x4e29d]        # 0x477c90
  4299f3:	lea    rcx,[rip+0x4e08c]        # 0x477a86
  4299fa:	call   0x40fd20
  4299ff:	xor    eax,eax
  429a01:	add    rsp,0x28
  429a05:	pop    rbx
  429a06:	pop    rsi
  429a07:	pop    rdi
  429a08:	pop    rbp
  429a09:	ret    
  429a0a:	nop    WORD PTR [rax+rax*1+0x0]
  429a10:	push   r12
  429a12:	push   rbp
  429a13:	push   rdi
  429a14:	push   rsi
  429a15:	push   rbx
  429a16:	sub    rsp,0x20
  429a1a:	test   rcx,rcx
  429a1d:	je     0x429af0
  429a23:	mov    r9d,DWORD PTR [rcx+0x8]
  429a27:	cmp    r9d,edx
  429a2a:	jbe    0x429ac0
  429a30:	lea    edi,[rdx+r8*1]
  429a34:	cmp    r9d,edi
  429a37:	jb     0x429ae4
  429a3d:	mov    rax,QWORD PTR [rcx+0x18]
  429a41:	mov    r12d,r8d
  429a44:	mov    ebp,edx
  429a46:	mov    rsi,rcx
  429a49:	test   rax,rax
  429a4c:	je     0x429a7a
  429a4e:	cmp    ebp,edi
  429a50:	jae    0x429a7a
  429a52:	mov    ebx,ebp
  429a54:	jmp    0x429a64
  429a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429a60:	mov    rax,QWORD PTR [rsi+0x18]
  429a64:	mov    rcx,QWORD PTR [rsi]
  429a67:	mov    edx,ebx
  429a69:	add    ebx,0x1
  429a6c:	mov    rcx,QWORD PTR [rcx+rdx*8]
  429a70:	call   rax
  429a72:	cmp    edi,ebx
  429a74:	ja     0x429a60
  429a76:	mov    r9d,DWORD PTR [rsi+0x8]
  429a7a:	cmp    edi,r9d
  429a7d:	je     0x429a9d
  429a7f:	mov    rax,QWORD PTR [rsi]
  429a82:	mov    r8d,r9d
  429a85:	sub    r8d,edi
  429a88:	shl    r8,0x3
  429a8c:	lea    rdx,[rax+rdi*8]
  429a90:	lea    rcx,[rax+rbp*8]
  429a94:	call   0x4387e8
  429a99:	mov    r9d,DWORD PTR [rsi+0x8]
  429a9d:	mov    rdx,QWORD PTR [rip+0x520fc]        # 0x47bba0
  429aa4:	mov    eax,r9d
  429aa7:	sub    eax,r12d
  429aaa:	mov    DWORD PTR [rsi+0x8],eax
  429aad:	mov    edx,DWORD PTR [rdx]
  429aaf:	test   edx,edx
  429ab1:	jne    0x429b00
  429ab3:	add    rsp,0x20
  429ab7:	pop    rbx
  429ab8:	pop    rsi
  429ab9:	pop    rdi
  429aba:	pop    rbp
  429abb:	pop    r12
  429abd:	ret    
  429abe:	xchg   ax,ax
  429ac0:	lea    r8,[rip+0x4dfdf]        # 0x477aa6
  429ac7:	lea    rdx,[rip+0x4e1a2]        # 0x477c70
  429ace:	lea    rcx,[rip+0x4dfb1]        # 0x477a86
  429ad5:	add    rsp,0x20
  429ad9:	pop    rbx
  429ada:	pop    rsi
  429adb:	pop    rdi
  429adc:	pop    rbp
  429add:	pop    r12
  429adf:	jmp    0x40fd20
  429ae4:	lea    r8,[rip+0x4dfcf]        # 0x477aba
  429aeb:	jmp    0x429ac7
  429aed:	nop    DWORD PTR [rax]
  429af0:	lea    r8,[rip+0x4df89]        # 0x477a80
  429af7:	jmp    0x429ac7
  429af9:	nop    DWORD PTR [rax+0x0]
  429b00:	test   r12d,r12d
  429b03:	je     0x429ab3
  429b05:	mov    rdx,QWORD PTR [rsi]
  429b08:	mov    ecx,eax
  429b0a:	add    eax,0x1
  429b0d:	cmp    eax,r9d
  429b10:	mov    QWORD PTR [rdx+rcx*8],0x0
  429b18:	jne    0x429b05
  429b1a:	jmp    0x429ab3
  429b1c:	nop    DWORD PTR [rax+0x0]
  429b20:	push   rsi
  429b21:	push   rbx
  429b22:	sub    rsp,0x28
  429b26:	test   rcx,rcx
  429b29:	je     0x429bc0
  429b2f:	mov    r8d,DWORD PTR [rcx+0x8]
  429b33:	mov    esi,edx
  429b35:	mov    rbx,rcx
  429b38:	cmp    edx,r8d
  429b3b:	ja     0x429b50
  429b3d:	jb     0x429ba0
  429b3f:	mov    DWORD PTR [rbx+0x8],esi
  429b42:	add    rsp,0x28
  429b46:	pop    rbx
  429b47:	pop    rsi
  429b48:	ret    
  429b49:	nop    DWORD PTR [rax+0x0]
  429b50:	mov    edx,esi
  429b52:	mov    rcx,rbx
  429b55:	sub    edx,r8d
  429b58:	call   0x428be0
  429b5d:	mov    edx,DWORD PTR [rbx+0x8]
  429b60:	cmp    esi,edx
  429b62:	jle    0x429b3f
  429b64:	movsxd rcx,edx
  429b67:	not    edx
  429b69:	add    edx,esi
  429b6b:	lea    rax,[rcx*8+0x0]
  429b73:	lea    rcx,[rcx+rdx*1+0x1]
  429b78:	shl    rcx,0x3
  429b7c:	nop    DWORD PTR [rax+0x0]
  429b80:	mov    rdx,QWORD PTR [rbx]
  429b83:	mov    QWORD PTR [rdx+rax*1],0x0
  429b8b:	add    rax,0x8
  429b8f:	cmp    rax,rcx
  429b92:	jne    0x429b80
  429b94:	mov    DWORD PTR [rbx+0x8],esi
  429b97:	add    rsp,0x28
  429b9b:	pop    rbx
  429b9c:	pop    rsi
  429b9d:	ret    
  429b9e:	xchg   ax,ax
  429ba0:	sub    r8d,esi
  429ba3:	mov    edx,esi
  429ba5:	mov    rcx,rbx
  429ba8:	call   0x429a10
  429bad:	mov    DWORD PTR [rbx+0x8],esi
  429bb0:	add    rsp,0x28
  429bb4:	pop    rbx
  429bb5:	pop    rsi
  429bb6:	ret    
  429bb7:	nop    WORD PTR [rax+rax*1+0x0]
  429bc0:	lea    r8,[rip+0x4deb9]        # 0x477a80
  429bc7:	lea    rdx,[rip+0x4e102]        # 0x477cd0
  429bce:	lea    rcx,[rip+0x4deb1]        # 0x477a86
  429bd5:	add    rsp,0x28
  429bd9:	pop    rbx
  429bda:	pop    rsi
  429bdb:	jmp    0x40fd20
  429be0:	sub    rsp,0x28
  429be4:	test   rcx,rcx
  429be7:	je     0x429c32
  429be9:	mov    r9d,DWORD PTR [rcx+0x8]
  429bed:	test   r9d,r9d
  429bf0:	je     0x429c16
  429bf2:	mov    rax,QWORD PTR [rcx]
  429bf5:	cmp    QWORD PTR [rax],rdx
  429bf8:	je     0x429c1d
  429bfa:	add    rax,0x8
  429bfe:	xor    r8d,r8d
  429c01:	jmp    0x429c0d
  429c03:	add    rax,0x8
  429c07:	cmp    QWORD PTR [rax-0x8],rdx
  429c0b:	je     0x429c20
  429c0d:	add    r8d,0x1
  429c11:	cmp    r8d,r9d
  429c14:	jne    0x429c03
  429c16:	xor    eax,eax
  429c18:	add    rsp,0x28
  429c1c:	ret    
  429c1d:	xor    r8d,r8d
  429c20:	mov    edx,r8d
  429c23:	call   0x429850
  429c28:	mov    eax,0x1
  429c2d:	add    rsp,0x28
  429c31:	ret    
  429c32:	lea    r8,[rip+0x4de47]        # 0x477a80
  429c39:	lea    rdx,[rip+0x4e010]        # 0x477c50
  429c40:	lea    rcx,[rip+0x4de3f]        # 0x477a86
  429c47:	call   0x40fd20
  429c4c:	jmp    0x429c16
  429c4e:	xchg   ax,ax
  429c50:	sub    rsp,0x28
  429c54:	test   rcx,rcx
  429c57:	je     0x429ca2
  429c59:	mov    r9d,DWORD PTR [rcx+0x8]
  429c5d:	test   r9d,r9d
  429c60:	je     0x429c86
  429c62:	mov    rax,QWORD PTR [rcx]
  429c65:	cmp    QWORD PTR [rax],rdx
  429c68:	je     0x429c8d
  429c6a:	add    rax,0x8
  429c6e:	xor    r8d,r8d
  429c71:	jmp    0x429c7d
  429c73:	add    rax,0x8
  429c77:	cmp    QWORD PTR [rax-0x8],rdx
  429c7b:	je     0x429c90
  429c7d:	add    r8d,0x1
  429c81:	cmp    r8d,r9d
  429c84:	jne    0x429c73
  429c86:	xor    eax,eax
  429c88:	add    rsp,0x28
  429c8c:	ret    
  429c8d:	xor    r8d,r8d
  429c90:	mov    edx,r8d
  429c93:	call   0x429940
  429c98:	mov    eax,0x1
  429c9d:	add    rsp,0x28
  429ca1:	ret    
  429ca2:	lea    r8,[rip+0x4ddd7]        # 0x477a80
  429ca9:	lea    rdx,[rip+0x4df80]        # 0x477c30
  429cb0:	lea    rcx,[rip+0x4ddcf]        # 0x477a86
  429cb7:	call   0x40fd20
  429cbc:	jmp    0x429c86
  429cbe:	xchg   ax,ax
  429cc0:	push   rsi
  429cc1:	push   rbx
  429cc2:	sub    rsp,0x28
  429cc6:	test   rcx,rcx
  429cc9:	je     0x429cf2
  429ccb:	mov    rbx,rcx
  429cce:	mov    rsi,rdx
  429cd1:	mov    edx,0x1
  429cd6:	call   0x428be0
  429cdb:	mov    eax,DWORD PTR [rbx+0x8]
  429cde:	mov    rdx,QWORD PTR [rbx]
  429ce1:	lea    ecx,[rax+0x1]
  429ce4:	mov    DWORD PTR [rbx+0x8],ecx
  429ce7:	mov    QWORD PTR [rdx+rax*8],rsi
  429ceb:	add    rsp,0x28
  429cef:	pop    rbx
  429cf0:	pop    rsi
  429cf1:	ret    
  429cf2:	lea    r8,[rip+0x4dd87]        # 0x477a80
  429cf9:	lea    rdx,[rip+0x4df20]        # 0x477c20
  429d00:	lea    rcx,[rip+0x4dd7f]        # 0x477a86
  429d07:	add    rsp,0x28
  429d0b:	pop    rbx
  429d0c:	pop    rsi
  429d0d:	jmp    0x40fd20
  429d12:	nop    DWORD PTR [rax+0x0]
  429d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d20:	sub    rsp,0x38
  429d24:	test   rcx,rcx
  429d27:	je     0x429d50
  429d29:	mov    r9,rdx
  429d2c:	mov    edx,DWORD PTR [rcx+0x8]
  429d2f:	mov    QWORD PTR [rsp+0x20],0x0
  429d38:	mov    rcx,QWORD PTR [rcx]
  429d3b:	mov    r8d,0x8
  429d41:	call   0x431300
  429d46:	nop
  429d47:	add    rsp,0x38
  429d4b:	ret    
  429d4c:	nop    DWORD PTR [rax+0x0]
  429d50:	lea    r8,[rip+0x4dd41]        # 0x477a98
  429d57:	lea    rdx,[rip+0x4dea2]        # 0x477c00
  429d5e:	lea    rcx,[rip+0x4dd21]        # 0x477a86
  429d65:	add    rsp,0x38
  429d69:	jmp    0x40fd20
  429d6e:	xchg   ax,ax
  429d70:	sub    rsp,0x38
  429d74:	test   rcx,rcx
  429d77:	je     0x429da0
  429d79:	mov    r9,rdx
  429d7c:	mov    edx,DWORD PTR [rcx+0x8]
  429d7f:	mov    QWORD PTR [rsp+0x20],r8
  429d84:	mov    rcx,QWORD PTR [rcx]
  429d87:	mov    r8d,0x8
  429d8d:	call   0x431300
  429d92:	nop
  429d93:	add    rsp,0x38
  429d97:	ret    
  429d98:	nop    DWORD PTR [rax+rax*1+0x0]
  429da0:	lea    r8,[rip+0x4dcf1]        # 0x477a98
  429da7:	lea    rdx,[rip+0x4de32]        # 0x477be0
  429dae:	lea    rcx,[rip+0x4dcd1]        # 0x477a86
  429db5:	add    rsp,0x38
  429db9:	jmp    0x40fd20
  429dbe:	xchg   ax,ax
  429dc0:	push   rbp
  429dc1:	push   rdi
  429dc2:	push   rsi
  429dc3:	push   rbx
  429dc4:	sub    rsp,0x28
  429dc8:	test   rcx,rcx
  429dcb:	je     0x429e00
  429dcd:	mov    eax,DWORD PTR [rcx+0x8]
  429dd0:	xor    ebx,ebx
  429dd2:	mov    rbp,r8
  429dd5:	mov    rdi,rdx
  429dd8:	mov    rsi,rcx
  429ddb:	test   eax,eax
  429ddd:	je     0x429df6
  429ddf:	nop
  429de0:	mov    rax,QWORD PTR [rsi]
  429de3:	mov    ecx,ebx
  429de5:	mov    rdx,rbp
  429de8:	add    ebx,0x1
  429deb:	mov    rcx,QWORD PTR [rax+rcx*8]
  429def:	call   rdi
  429df1:	cmp    DWORD PTR [rsi+0x8],ebx
  429df4:	ja     0x429de0
  429df6:	add    rsp,0x28
  429dfa:	pop    rbx
  429dfb:	pop    rsi
  429dfc:	pop    rdi
  429dfd:	pop    rbp
  429dfe:	ret    
  429dff:	nop
  429e00:	lea    r8,[rip+0x4dc79]        # 0x477a80
  429e07:	lea    rdx,[rip+0x4ddb2]        # 0x477bc0
  429e0e:	lea    rcx,[rip+0x4dc71]        # 0x477a86
  429e15:	add    rsp,0x28
  429e19:	pop    rbx
  429e1a:	pop    rsi
  429e1b:	pop    rdi
  429e1c:	pop    rbp
  429e1d:	jmp    0x40fd20
  429e22:	nop    DWORD PTR [rax+0x0]
  429e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429e30:	push   rdi
  429e31:	push   rsi
  429e32:	push   rbx
  429e33:	sub    rsp,0x20
  429e37:	test   dl,0x1
  429e3a:	mov    rbx,rcx
  429e3d:	mov    esi,edx
  429e3f:	jne    0x429e90
  429e41:	mov    rdi,QWORD PTR [rcx]
  429e44:	and    esi,0x2
  429e47:	je     0x429e70
  429e49:	mov    rax,rdi
  429e4c:	mov    QWORD PTR [rbx],0x0
  429e53:	mov    DWORD PTR [rbx+0x8],0x0
  429e5a:	mov    DWORD PTR [rbx+0xc],0x0
  429e61:	add    rsp,0x20
  429e65:	pop    rbx
  429e66:	pop    rsi
  429e67:	pop    rdi
  429e68:	ret    
  429e69:	nop    DWORD PTR [rax+0x0]
  429e70:	mov    rdx,rbx
  429e73:	mov    ecx,0x20
  429e78:	call   0x4167c0
  429e7d:	mov    rax,rdi
  429e80:	add    rsp,0x20
  429e84:	pop    rbx
  429e85:	pop    rsi
  429e86:	pop    rdi
  429e87:	ret    
  429e88:	nop    DWORD PTR [rax+rax*1+0x0]
  429e90:	mov    rdx,QWORD PTR [rcx+0x18]
  429e94:	test   rdx,rdx
  429e97:	je     0x429ea1
  429e99:	xor    r8d,r8d
  429e9c:	call   0x429dc0
  429ea1:	mov    rcx,QWORD PTR [rbx]
  429ea4:	xor    edi,edi
  429ea6:	call   0x40e6e0
  429eab:	jmp    0x429e44
  429ead:	nop    DWORD PTR [rax]
  429eb0:	test   rcx,rcx
  429eb3:	je     0x429ed0
  429eb5:	lock sub DWORD PTR [rcx+0x10],0x1
  429eba:	je     0x429ec0
  429ebc:	ret    
  429ebd:	nop    DWORD PTR [rax]
  429ec0:	mov    edx,0x1
  429ec5:	jmp    0x429e30
  429eca:	nop    WORD PTR [rax+rax*1+0x0]
  429ed0:	lea    r8,[rip+0x4dba9]        # 0x477a80
  429ed7:	lea    rdx,[rip+0x4de32]        # 0x477d10
  429ede:	lea    rcx,[rip+0x4dba1]        # 0x477a86
  429ee5:	jmp    0x40fd20
  429eea:	nop    WORD PTR [rax+rax*1+0x0]
  429ef0:	sub    rsp,0x28
  429ef4:	test   rcx,rcx
  429ef7:	je     0x429f22
  429ef9:	test   edx,edx
  429efb:	mov    r8d,0xffffffff
  429f01:	setne  dl
  429f04:	movzx  edx,dl
  429f07:	lock xadd DWORD PTR [rcx+0x10],r8d
  429f0d:	mov    eax,edx
  429f0f:	or     eax,0x2
  429f12:	cmp    r8d,0x1
  429f16:	cmovne edx,eax
  429f19:	add    rsp,0x28
  429f1d:	jmp    0x429e30
  429f22:	lea    r8,[rip+0x4db57]        # 0x477a80
  429f29:	lea    rdx,[rip+0x4ddc0]        # 0x477cf0
  429f30:	lea    rcx,[rip+0x4db4f]        # 0x477a86
  429f37:	call   0x40fd20
  429f3c:	xor    eax,eax
  429f3e:	add    rsp,0x28
  429f42:	ret    
  429f43:	nop    DWORD PTR [rax]
  429f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f50:	xor    r9d,r9d
  429f53:	mov    r8d,0x1
  429f59:	xor    edx,edx
  429f5b:	xor    ecx,ecx
  429f5d:	jmp    0x428d50
  429f62:	nop    DWORD PTR [rax+0x0]
  429f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f70:	push   rsi
  429f71:	push   rbx
  429f72:	sub    rsp,0x38
  429f76:	xor    r9d,r9d
  429f79:	mov    r8d,0x1
  429f7f:	mov    rsi,rcx
  429f82:	mov    rbx,rdx
  429f85:	xor    ecx,ecx
  429f87:	xor    edx,edx
  429f89:	call   0x428d50
  429f8e:	cmp    QWORD PTR [rax],0x0
  429f92:	je     0x429fc0
  429f94:	lea    rax,[rip+0x4db94]        # 0x477b2f
  429f9b:	lea    r9,[rip+0x4dbfe]        # 0x477ba0
  429fa2:	lea    rdx,[rip+0x4db2f]        # 0x477ad8
  429fa9:	lea    rcx,[rip+0x4dad6]        # 0x477a86
  429fb0:	mov    r8d,0x5f0
  429fb6:	mov    QWORD PTR [rsp+0x20],rax
  429fbb:	call   0x41e680
  429fc0:	mov    edx,DWORD PTR [rax+0x8]
  429fc3:	test   edx,edx
  429fc5:	je     0x429ff3
  429fc7:	lea    rax,[rip+0x4db74]        # 0x477b42
  429fce:	lea    r9,[rip+0x4dbcb]        # 0x477ba0
  429fd5:	lea    rdx,[rip+0x4dafc]        # 0x477ad8
  429fdc:	lea    rcx,[rip+0x4daa3]        # 0x477a86
  429fe3:	mov    r8d,0x5f1
  429fe9:	mov    QWORD PTR [rsp+0x20],rax
  429fee:	call   0x41e680
  429ff3:	mov    QWORD PTR [rax],rsi
  429ff6:	mov    DWORD PTR [rax+0x8],ebx
  429ff9:	add    rsp,0x38
  429ffd:	pop    rbx
  429ffe:	pop    rsi
  429fff:	ret    
  42a000:	mov    r8d,0x1
  42a006:	xor    edx,edx
  42a008:	mov    r9d,ecx
  42a00b:	xor    ecx,ecx
  42a00d:	jmp    0x428d50
  42a012:	nop    DWORD PTR [rax+0x0]
  42a016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a020:	jmp    0x428f80
  42a025:	nop
  42a026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a030:	push   rbx
  42a031:	sub    rsp,0x20
  42a035:	test   rcx,rcx
  42a038:	je     0x42a054
  42a03a:	mov    ebx,DWORD PTR [rcx+0x8]
  42a03d:	xor    edx,edx
  42a03f:	call   0x428f80
  42a044:	mov    rcx,rax
  42a047:	mov    rdx,rbx
  42a04a:	add    rsp,0x20
  42a04e:	pop    rbx
  42a04f:	jmp    0x42a280
  42a054:	lea    r8,[rip+0x4da3d]        # 0x477a98
  42a05b:	lea    rdx,[rip+0x4db1e]        # 0x477b80
  42a062:	lea    rcx,[rip+0x4da1d]        # 0x477a86
  42a069:	call   0x40fd20
  42a06e:	xor    eax,eax
  42a070:	add    rsp,0x20
  42a074:	pop    rbx
  42a075:	ret    
  42a076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a080:	jmp    0x428eb0
  42a085:	nop
  42a086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a090:	jmp    0x428f00
  42a095:	nop
  42a096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0a0:	push   rbx
  42a0a1:	sub    rsp,0x20
  42a0a5:	mov    rbx,rcx
  42a0a8:	call   0x428fe0
  42a0ad:	mov    rax,rbx
  42a0b0:	add    rsp,0x20
  42a0b4:	pop    rbx
  42a0b5:	ret    
  42a0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0c0:	push   rbx
  42a0c1:	sub    rsp,0x20
  42a0c5:	mov    rbx,rcx
  42a0c8:	call   0x429080
  42a0cd:	mov    rax,rbx
  42a0d0:	add    rsp,0x20
  42a0d4:	pop    rbx
  42a0d5:	ret    
  42a0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0e0:	push   rbx
  42a0e1:	sub    rsp,0x20
  42a0e5:	mov    rbx,rcx
  42a0e8:	call   0x429580
  42a0ed:	mov    rax,rbx
  42a0f0:	add    rsp,0x20
  42a0f4:	pop    rbx
  42a0f5:	ret    
  42a0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a100:	push   rbx
  42a101:	sub    rsp,0x20
  42a105:	mov    rbx,rcx
  42a108:	call   0x429200
  42a10d:	mov    rax,rbx
  42a110:	add    rsp,0x20
  42a114:	pop    rbx
  42a115:	ret    
  42a116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a120:	push   rbx
  42a121:	sub    rsp,0x20
  42a125:	mov    rbx,rcx
  42a128:	call   0x429300
  42a12d:	mov    rax,rbx
  42a130:	add    rsp,0x20
  42a134:	pop    rbx
  42a135:	ret    
  42a136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a140:	sub    rsp,0x28
  42a144:	test   rcx,rcx
  42a147:	je     0x42a1a4
  42a149:	mov    eax,DWORD PTR [rcx+0x8]
  42a14c:	cmp    eax,edx
  42a14e:	jbe    0x42a162
  42a150:	lea    r9d,[rdx+r8*1]
  42a154:	cmp    eax,r9d
  42a157:	jb     0x42a183
  42a159:	add    rsp,0x28
  42a15d:	jmp    0x4293f0
  42a162:	lea    r8,[rip+0x4d93d]        # 0x477aa6
  42a169:	lea    rdx,[rip+0x4d9f0]        # 0x477b60
  42a170:	lea    rcx,[rip+0x4d90f]        # 0x477a86
  42a177:	call   0x40fd20
  42a17c:	xor    eax,eax
  42a17e:	add    rsp,0x28
  42a182:	ret    
  42a183:	lea    r8,[rip+0x4d930]        # 0x477aba
  42a18a:	lea    rdx,[rip+0x4d9cf]        # 0x477b60
  42a191:	lea    rcx,[rip+0x4d8ee]        # 0x477a86
  42a198:	call   0x40fd20
  42a19d:	xor    eax,eax
  42a19f:	add    rsp,0x28
  42a1a3:	ret    
  42a1a4:	lea    r8,[rip+0x4d8d5]        # 0x477a80
  42a1ab:	lea    rdx,[rip+0x4d9ae]        # 0x477b60
  42a1b2:	lea    rcx,[rip+0x4d8cd]        # 0x477a86
  42a1b9:	call   0x40fd20
  42a1be:	xor    eax,eax
  42a1c0:	add    rsp,0x28
  42a1c4:	ret    
  42a1c5:	nop
  42a1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a1d0:	jmp    0x429650
  42a1d5:	nop
  42a1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a1e0:	jmp    0x4296a0
  42a1e5:	nop
  42a1e6:	nop
  42a1e7:	nop
  42a1e8:	nop
  42a1e9:	nop
  42a1ea:	nop
  42a1eb:	nop
  42a1ec:	nop
  42a1ed:	nop
  42a1ee:	nop
  42a1ef:	nop
  42a1f0:	push   rbx
  42a1f1:	sub    rsp,0x20
  42a1f5:	test   rcx,rcx
  42a1f8:	je     0x42a201
  42a1fa:	lock sub DWORD PTR [rcx+0x10],0x1
  42a1ff:	je     0x42a210
  42a201:	add    rsp,0x20
  42a205:	pop    rbx
  42a206:	ret    
  42a207:	nop    WORD PTR [rax+rax*1+0x0]
  42a210:	mov    rax,QWORD PTR [rcx+0x18]
  42a214:	mov    rbx,rcx
  42a217:	test   rax,rax
  42a21a:	je     0x42a222
  42a21c:	mov    rcx,QWORD PTR [rcx+0x20]
  42a220:	call   rax
  42a222:	mov    rdx,rbx
  42a225:	mov    ecx,0x28
  42a22a:	add    rsp,0x20
  42a22e:	pop    rbx
  42a22f:	jmp    0x4167c0
  42a234:	xchg   ax,ax
  42a236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a240:	push   rsi
  42a241:	push   rbx
  42a242:	sub    rsp,0x28
  42a246:	mov    rsi,rdx
  42a249:	call   0x418300
  42a24e:	mov    ecx,0x28
  42a253:	mov    rbx,rax
  42a256:	call   0x416130
  42a25b:	mov    rdx,QWORD PTR [rip+0x5190e]        # 0x47bb70
  42a262:	mov    QWORD PTR [rax],rbx
  42a265:	mov    QWORD PTR [rax+0x8],rsi
  42a269:	mov    QWORD PTR [rax+0x20],rbx
  42a26d:	mov    DWORD PTR [rax+0x10],0x1
  42a274:	mov    QWORD PTR [rax+0x18],rdx
  42a278:	add    rsp,0x28
  42a27c:	pop    rbx
  42a27d:	pop    rsi
  42a27e:	ret    
  42a27f:	nop
  42a280:	push   rsi
  42a281:	push   rbx
  42a282:	sub    rsp,0x28
  42a286:	mov    rbx,rcx
  42a289:	mov    ecx,0x28
  42a28e:	mov    rsi,rdx
  42a291:	call   0x416130
  42a296:	mov    rdx,QWORD PTR [rip+0x518d3]        # 0x47bb70
  42a29d:	mov    QWORD PTR [rax],rbx
  42a2a0:	mov    QWORD PTR [rax+0x8],rsi
  42a2a4:	mov    QWORD PTR [rax+0x20],rbx
  42a2a8:	mov    DWORD PTR [rax+0x10],0x1
  42a2af:	mov    QWORD PTR [rax+0x18],rdx
  42a2b3:	add    rsp,0x28
  42a2b7:	pop    rbx
  42a2b8:	pop    rsi
  42a2b9:	ret    
  42a2ba:	nop    WORD PTR [rax+rax*1+0x0]
  42a2c0:	push   rsi
  42a2c1:	push   rbx
  42a2c2:	sub    rsp,0x28
  42a2c6:	mov    rsi,rcx
  42a2c9:	mov    rbx,rdx
  42a2cc:	mov    ecx,0x28
  42a2d1:	call   0x416130
  42a2d6:	mov    QWORD PTR [rax],rsi
  42a2d9:	mov    QWORD PTR [rax+0x8],rbx
  42a2dd:	mov    QWORD PTR [rax+0x18],0x0
  42a2e5:	mov    QWORD PTR [rax+0x20],0x0
  42a2ed:	mov    DWORD PTR [rax+0x10],0x1
  42a2f4:	add    rsp,0x28
  42a2f8:	pop    rbx
  42a2f9:	pop    rsi
  42a2fa:	ret    
  42a2fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a300:	push   rbp
  42a301:	push   rdi
  42a302:	push   rsi
  42a303:	push   rbx
  42a304:	sub    rsp,0x28
  42a308:	mov    rbp,rcx
  42a30b:	mov    rdi,rdx
  42a30e:	mov    rsi,r8
  42a311:	mov    rbx,r9
  42a314:	mov    ecx,0x28
  42a319:	call   0x416130
  42a31e:	mov    QWORD PTR [rax],rbp
  42a321:	mov    QWORD PTR [rax+0x8],rdi
  42a325:	mov    QWORD PTR [rax+0x18],rsi
  42a329:	mov    QWORD PTR [rax+0x20],rbx
  42a32d:	mov    DWORD PTR [rax+0x10],0x1
  42a334:	add    rsp,0x28
  42a338:	pop    rbx
  42a339:	pop    rsi
  42a33a:	pop    rdi
  42a33b:	pop    rbp
  42a33c:	ret    
  42a33d:	nop    DWORD PTR [rax]
  42a340:	sub    rsp,0x28
  42a344:	test   rcx,rcx
  42a347:	je     0x42a360
  42a349:	test   rdx,rdx
  42a34c:	je     0x42a355
  42a34e:	mov    rax,QWORD PTR [rcx+0x8]
  42a352:	mov    QWORD PTR [rdx],rax
  42a355:	mov    rax,QWORD PTR [rcx]
  42a358:	add    rsp,0x28
  42a35c:	ret    
  42a35d:	nop    DWORD PTR [rax]
  42a360:	lea    r8,[rip+0x4db99]        # 0x477f00
  42a367:	lea    rdx,[rip+0x4dcb2]        # 0x478020
  42a36e:	lea    rcx,[rip+0x4db99]        # 0x477f0e
  42a375:	call   0x40fd20
  42a37a:	xor    eax,eax
  42a37c:	add    rsp,0x28
  42a380:	ret    
  42a381:	nop    DWORD PTR [rax+rax*1+0x0]
  42a386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a390:	sub    rsp,0x28
  42a394:	test   rcx,rcx
  42a397:	je     0x42a3a2
  42a399:	mov    rax,QWORD PTR [rcx+0x8]
  42a39d:	add    rsp,0x28
  42a3a1:	ret    
  42a3a2:	lea    r8,[rip+0x4db57]        # 0x477f00
  42a3a9:	lea    rdx,[rip+0x4dc50]        # 0x478000
  42a3b0:	lea    rcx,[rip+0x4db57]        # 0x477f0e
  42a3b7:	call   0x40fd20
  42a3bc:	xor    eax,eax
  42a3be:	add    rsp,0x28
  42a3c2:	ret    
  42a3c3:	nop    DWORD PTR [rax]
  42a3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3d0:	sub    rsp,0x28
  42a3d4:	test   rcx,rcx
  42a3d7:	je     0x42a3f0
  42a3d9:	lock add DWORD PTR [rcx+0x10],0x1
  42a3de:	mov    rax,rcx
  42a3e1:	add    rsp,0x28
  42a3e5:	ret    
  42a3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3f0:	lea    r8,[rip+0x4db09]        # 0x477f00
  42a3f7:	lea    rdx,[rip+0x4dbed]        # 0x477feb
  42a3fe:	lea    rcx,[rip+0x4db09]        # 0x477f0e
  42a405:	call   0x40fd20
  42a40a:	xor    eax,eax
  42a40c:	add    rsp,0x28
  42a410:	ret    
  42a411:	nop    DWORD PTR [rax+rax*1+0x0]
  42a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a420:	push   rdi
  42a421:	push   rsi
  42a422:	push   rbx
  42a423:	sub    rsp,0x30
  42a427:	test   rcx,rcx
  42a42a:	mov    rbx,rcx
  42a42d:	mov    rsi,rdx
  42a430:	je     0x42a4e0
  42a436:	mov    rax,QWORD PTR [rcx+0x8]
  42a43a:	cmp    rax,rdx
  42a43d:	jb     0x42a490
  42a43f:	lea    rdx,[rdx+r8*1]
  42a443:	cmp    rax,rdx
  42a446:	jb     0x42a4b4
  42a448:	mov    QWORD PTR [rsp+0x28],r8
  42a44d:	call   0x42a3d0
  42a452:	add    rsi,QWORD PTR [rbx]
  42a455:	mov    ecx,0x28
  42a45a:	mov    rdi,rax
  42a45d:	call   0x416130
  42a462:	mov    r8,QWORD PTR [rsp+0x28]
  42a467:	lea    rcx,[rip+0xfffffffffffffd82]        # 0x42a1f0
  42a46e:	mov    QWORD PTR [rax+0x20],rdi
  42a472:	mov    DWORD PTR [rax+0x10],0x1
  42a479:	mov    QWORD PTR [rax],rsi
  42a47c:	mov    QWORD PTR [rax+0x18],rcx
  42a480:	mov    QWORD PTR [rax+0x8],r8
  42a484:	add    rsp,0x30
  42a488:	pop    rbx
  42a489:	pop    rsi
  42a48a:	pop    rdi
  42a48b:	ret    
  42a48c:	nop    DWORD PTR [rax+0x0]
  42a490:	lea    r8,[rip+0x4da7c]        # 0x477f13
  42a497:	lea    rdx,[rip+0x4dba2]        # 0x478040
  42a49e:	lea    rcx,[rip+0x4da69]        # 0x477f0e
  42a4a5:	call   0x40fd20
  42a4aa:	xor    eax,eax
  42a4ac:	add    rsp,0x30
  42a4b0:	pop    rbx
  42a4b1:	pop    rsi
  42a4b2:	pop    rdi
  42a4b3:	ret    
  42a4b4:	lea    r8,[rip+0x4da75]        # 0x477f30
  42a4bb:	lea    rdx,[rip+0x4db7e]        # 0x478040
  42a4c2:	lea    rcx,[rip+0x4da45]        # 0x477f0e
  42a4c9:	call   0x40fd20
  42a4ce:	xor    eax,eax
  42a4d0:	add    rsp,0x30
  42a4d4:	pop    rbx
  42a4d5:	pop    rsi
  42a4d6:	pop    rdi
  42a4d7:	ret    
  42a4d8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a4e0:	lea    r8,[rip+0x4da19]        # 0x477f00
  42a4e7:	lea    rdx,[rip+0x4db52]        # 0x478040
  42a4ee:	lea    rcx,[rip+0x4da19]        # 0x477f0e
  42a4f5:	call   0x40fd20
  42a4fa:	xor    eax,eax
  42a4fc:	add    rsp,0x30
  42a500:	pop    rbx
  42a501:	pop    rsi
  42a502:	pop    rdi
  42a503:	ret    
  42a504:	xchg   ax,ax
  42a506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a510:	sub    rsp,0x28
  42a514:	test   rcx,rcx
  42a517:	je     0x42a550
  42a519:	test   rdx,rdx
  42a51c:	je     0x42a571
  42a51e:	mov    r8,QWORD PTR [rcx+0x8]
  42a522:	cmp    r8,QWORD PTR [rdx+0x8]
  42a526:	je     0x42a530
  42a528:	xor    eax,eax
  42a52a:	add    rsp,0x28
  42a52e:	ret    
  42a52f:	nop
  42a530:	mov    rdx,QWORD PTR [rdx]
  42a533:	mov    rcx,QWORD PTR [rcx]
  42a536:	call   0x4387f8
  42a53b:	test   eax,eax
  42a53d:	sete   al
  42a540:	movzx  eax,al
  42a543:	add    rsp,0x28
  42a547:	ret    
  42a548:	nop    DWORD PTR [rax+rax*1+0x0]
  42a550:	lea    r8,[rip+0x4d9f8]        # 0x477f4f
  42a557:	lea    rdx,[rip+0x4da7f]        # 0x477fdd
  42a55e:	lea    rcx,[rip+0x4d9a9]        # 0x477f0e
  42a565:	call   0x40fd20
  42a56a:	xor    eax,eax
  42a56c:	add    rsp,0x28
  42a570:	ret    
  42a571:	lea    r8,[rip+0x4d9e6]        # 0x477f5e
  42a578:	lea    rdx,[rip+0x4da5e]        # 0x477fdd
  42a57f:	lea    rcx,[rip+0x4d988]        # 0x477f0e
  42a586:	call   0x40fd20
  42a58b:	xor    eax,eax
  42a58d:	add    rsp,0x28
  42a591:	ret    
  42a592:	nop    DWORD PTR [rax+0x0]
  42a596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a5a0:	sub    rsp,0x28
  42a5a4:	test   rcx,rcx
  42a5a7:	je     0x42a5e0
  42a5a9:	mov    rdx,QWORD PTR [rcx]
  42a5ac:	mov    eax,0x1505
  42a5b1:	mov    r9,rdx
  42a5b4:	add    r9,QWORD PTR [rcx+0x8]
  42a5b8:	cmp    rdx,r9
  42a5bb:	je     0x42a5d8
  42a5bd:	nop    DWORD PTR [rax]
  42a5c0:	movsx  ecx,BYTE PTR [rdx]
  42a5c3:	mov    r8d,eax
  42a5c6:	add    rdx,0x1
  42a5ca:	shl    r8d,0x5
  42a5ce:	add    ecx,r8d
  42a5d1:	add    eax,ecx
  42a5d3:	cmp    rdx,r9
  42a5d6:	jne    0x42a5c0
  42a5d8:	add    rsp,0x28
  42a5dc:	ret    
  42a5dd:	nop    DWORD PTR [rax]
  42a5e0:	lea    r8,[rip+0x4d919]        # 0x477f00
  42a5e7:	lea    rdx,[rip+0x4d9e2]        # 0x477fd0
  42a5ee:	lea    rcx,[rip+0x4d919]        # 0x477f0e
  42a5f5:	call   0x40fd20
  42a5fa:	xor    eax,eax
  42a5fc:	add    rsp,0x28
  42a600:	ret    
  42a601:	nop    DWORD PTR [rax+rax*1+0x0]
  42a606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a610:	push   rsi
  42a611:	push   rbx
  42a612:	sub    rsp,0x28
  42a616:	test   rcx,rcx
  42a619:	je     0x42a660
  42a61b:	test   rdx,rdx
  42a61e:	je     0x42a683
  42a620:	mov    rbx,QWORD PTR [rdx+0x8]
  42a624:	mov    rsi,QWORD PTR [rcx+0x8]
  42a628:	mov    rdx,QWORD PTR [rdx]
  42a62b:	mov    rcx,QWORD PTR [rcx]
  42a62e:	cmp    rsi,rbx
  42a631:	mov    r8,rbx
  42a634:	cmovbe r8,rsi
  42a638:	call   0x4387f8
  42a63d:	test   eax,eax
  42a63f:	jne    0x42a650
  42a641:	xor    eax,eax
  42a643:	cmp    rbx,rsi
  42a646:	je     0x42a650
  42a648:	cmp    rsi,rbx
  42a64b:	sbb    eax,eax
  42a64d:	or     eax,0x1
  42a650:	add    rsp,0x28
  42a654:	pop    rbx
  42a655:	pop    rsi
  42a656:	ret    
  42a657:	nop    WORD PTR [rax+rax*1+0x0]
  42a660:	lea    r8,[rip+0x4d8e8]        # 0x477f4f
  42a667:	lea    rdx,[rip+0x4d952]        # 0x477fc0
  42a66e:	lea    rcx,[rip+0x4d899]        # 0x477f0e
  42a675:	call   0x40fd20
  42a67a:	xor    eax,eax
  42a67c:	add    rsp,0x28
  42a680:	pop    rbx
  42a681:	pop    rsi
  42a682:	ret    
  42a683:	lea    r8,[rip+0x4d8d4]        # 0x477f5e
  42a68a:	lea    rdx,[rip+0x4d92f]        # 0x477fc0
  42a691:	lea    rcx,[rip+0x4d876]        # 0x477f0e
  42a698:	call   0x40fd20
  42a69d:	xor    eax,eax
  42a69f:	add    rsp,0x28
  42a6a3:	pop    rbx
  42a6a4:	pop    rsi
  42a6a5:	ret    
  42a6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a6b0:	push   rdi
  42a6b1:	push   rsi
  42a6b2:	push   rbx
  42a6b3:	sub    rsp,0x20
  42a6b7:	test   rcx,rcx
  42a6ba:	mov    rbx,rcx
  42a6bd:	mov    rdi,rdx
  42a6c0:	je     0x42a730
  42a6c2:	test   rdx,rdx
  42a6c5:	je     0x42a754
  42a6cb:	lea    rax,[rip+0xfffffffffffe400e]        # 0x40e6e0
  42a6d2:	cmp    QWORD PTR [rcx+0x18],rax
  42a6d6:	je     0x42a700
  42a6d8:	mov    edx,DWORD PTR [rbx+0x8]
  42a6db:	mov    rcx,QWORD PTR [rbx]
  42a6de:	call   0x418300
  42a6e3:	mov    rsi,rax
  42a6e6:	mov    rax,QWORD PTR [rbx+0x8]
  42a6ea:	mov    rcx,rbx
  42a6ed:	mov    QWORD PTR [rdi],rax
  42a6f0:	call   0x42a1f0
  42a6f5:	mov    rax,rsi
  42a6f8:	add    rsp,0x20
  42a6fc:	pop    rbx
  42a6fd:	pop    rsi
  42a6fe:	pop    rdi
  42a6ff:	ret    
  42a700:	mfence 
  42a703:	cmp    DWORD PTR [rbx+0x10],0x1
  42a707:	jne    0x42a6d8
  42a709:	mov    rax,QWORD PTR [rbx+0x8]
  42a70d:	mov    rsi,QWORD PTR [rbx]
  42a710:	mov    rdx,rbx
  42a713:	mov    ecx,0x28
  42a718:	mov    QWORD PTR [rdi],rax
  42a71b:	call   0x4167c0
  42a720:	test   rsi,rsi
  42a723:	je     0x42a6d8
  42a725:	mov    rax,rsi
  42a728:	add    rsp,0x20
  42a72c:	pop    rbx
  42a72d:	pop    rsi
  42a72e:	pop    rdi
  42a72f:	ret    
  42a730:	lea    r8,[rip+0x4d7c9]        # 0x477f00
  42a737:	lea    rdx,[rip+0x4d862]        # 0x477fa0
  42a73e:	lea    rcx,[rip+0x4d7c9]        # 0x477f0e
  42a745:	call   0x40fd20
  42a74a:	xor    eax,eax
  42a74c:	add    rsp,0x20
  42a750:	pop    rbx
  42a751:	pop    rsi
  42a752:	pop    rdi
  42a753:	ret    
  42a754:	lea    r8,[rip+0x4d812]        # 0x477f6d
  42a75b:	lea    rdx,[rip+0x4d83e]        # 0x477fa0
  42a762:	lea    rcx,[rip+0x4d7a5]        # 0x477f0e
  42a769:	call   0x40fd20
  42a76e:	xor    eax,eax
  42a770:	add    rsp,0x20
  42a774:	pop    rbx
  42a775:	pop    rsi
  42a776:	pop    rdi
  42a777:	ret    
  42a778:	nop    DWORD PTR [rax+rax*1+0x0]
  42a780:	sub    rsp,0x38
  42a784:	test   rcx,rcx
  42a787:	je     0x42a7a5
  42a789:	lea    rdx,[rsp+0x28]
  42a78e:	call   0x42a6b0
  42a793:	mov    rdx,QWORD PTR [rsp+0x28]
  42a798:	mov    rcx,rax
  42a79b:	call   0x429f70
  42a7a0:	add    rsp,0x38
  42a7a4:	ret    
  42a7a5:	lea    r8,[rip+0x4d754]        # 0x477f00
  42a7ac:	lea    rdx,[rip+0x4d7cd]        # 0x477f80
  42a7b3:	lea    rcx,[rip+0x4d754]        # 0x477f0e
  42a7ba:	call   0x40fd20
  42a7bf:	xor    eax,eax
  42a7c1:	add    rsp,0x38
  42a7c5:	ret    
  42a7c6:	nop
  42a7c7:	nop
  42a7c8:	nop
  42a7c9:	nop
  42a7ca:	nop
  42a7cb:	nop
  42a7cc:	nop
  42a7cd:	nop
  42a7ce:	nop
  42a7cf:	nop
  42a7d0:	push   rbx
  42a7d1:	sub    rsp,0x20
  42a7d5:	mov    rbx,rcx
  42a7d8:	mov    rcx,QWORD PTR [rcx+0x8]
  42a7dc:	call   0x40e6e0
  42a7e1:	mov    rcx,QWORD PTR [rbx+0x10]
  42a7e5:	call   0x40e6e0
  42a7ea:	mov    rcx,rbx
  42a7ed:	add    rsp,0x20
  42a7f1:	pop    rbx
  42a7f2:	jmp    0x40e6e0
  42a7f7:	nop    WORD PTR [rax+rax*1+0x0]
  42a800:	push   r15
  42a802:	push   r14
  42a804:	push   r13
  42a806:	push   r12
  42a808:	push   rbp
  42a809:	push   rdi
  42a80a:	push   rsi
  42a80b:	push   rbx
  42a80c:	sub    rsp,0x48
  42a810:	test   rdx,rdx
  42a813:	je     0x42a9e0
  42a819:	mov    rbp,rdx
  42a81c:	mov    QWORD PTR [rsp+0x38],rcx
  42a821:	mov    edx,0x5f
  42a826:	mov    rcx,rbp
  42a829:	call   0x4387a8
  42a82e:	mov    rcx,rbp
  42a831:	test   rax,rax
  42a834:	mov    edx,0x2e
  42a839:	cmovne rcx,rax
  42a83d:	mov    rbx,rax
  42a840:	call   0x4387a8
  42a845:	test   rax,rax
  42a848:	mov    rsi,rax
  42a84b:	mov    rcx,rax
  42a84e:	je     0x42aa10
  42a854:	mov    edx,0x40
  42a859:	call   0x4387a8
  42a85e:	test   rax,rax
  42a861:	mov    r13,rax
  42a864:	je     0x42a960
  42a86a:	mov    rcx,rax
  42a86d:	mov    r15d,0x4
  42a873:	call   0x4182b0
  42a878:	test   rsi,rsi
  42a87b:	mov    r12,rax
  42a87e:	je     0x42a97c
  42a884:	mov    rdx,r13
  42a887:	mov    rcx,rsi
  42a88a:	or     r15d,0x1
  42a88e:	sub    rdx,rsi
  42a891:	call   0x418340
  42a896:	test   rbx,rbx
  42a899:	mov    r14,rax
  42a89c:	je     0x42a98b
  42a8a2:	sub    rsi,rbx
  42a8a5:	mov    rcx,rbx
  42a8a8:	or     r15d,0x2
  42a8ac:	mov    rdx,rsi
  42a8af:	call   0x418340
  42a8b4:	mov    r13,rax
  42a8b7:	sub    rbx,rbp
  42a8ba:	mov    rcx,rbp
  42a8bd:	mov    esi,r15d
  42a8c0:	mov    rdx,rbx
  42a8c3:	lea    rdi,[rip+0x4d796]        # 0x478060
  42a8ca:	not    esi
  42a8cc:	call   0x418340
  42a8d1:	xor    ebx,ebx
  42a8d3:	mov    rbp,rax
  42a8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a8e0:	mov    edx,r15d
  42a8e3:	sub    edx,ebx
  42a8e5:	test   esi,edx
  42a8e7:	jne    0x42a925
  42a8e9:	test   dl,0x4
  42a8ec:	mov    r9,rdi
  42a8ef:	mov    r8,rdi
  42a8f2:	cmovne r9,r12
  42a8f6:	test   dl,0x1
  42a8f9:	mov    rcx,rbp
  42a8fc:	cmovne r8,r14
  42a900:	and    edx,0x2
  42a903:	mov    rdx,rdi
  42a906:	cmovne rdx,r13
  42a90a:	mov    QWORD PTR [rsp+0x20],0x0
  42a913:	call   0x4184b0
  42a918:	mov    rcx,QWORD PTR [rsp+0x38]
  42a91d:	mov    rdx,rax
  42a920:	call   0x429cc0
  42a925:	add    rbx,0x1
  42a929:	cmp    r15d,ebx
  42a92c:	jae    0x42a8e0
  42a92e:	mov    rcx,rbp
  42a931:	call   0x40e6e0
  42a936:	test   r15b,0x1
  42a93a:	jne    0x42a9d0
  42a940:	test   r15b,0x2
  42a944:	jne    0x42a9c0
  42a946:	and    r15d,0x4
  42a94a:	jne    0x42a9a0
  42a94c:	add    rsp,0x48
  42a950:	pop    rbx
  42a951:	pop    rsi
  42a952:	pop    rdi
  42a953:	pop    rbp
  42a954:	pop    r12
  42a956:	pop    r13
  42a958:	pop    r14
  42a95a:	pop    r15
  42a95c:	ret    
  42a95d:	nop    DWORD PTR [rax]
  42a960:	mov    rcx,rbp
  42a963:	xor    r12d,r12d
  42a966:	xor    r15d,r15d
  42a969:	call   0x438788
  42a96e:	test   rsi,rsi
  42a971:	lea    r13,[rbp+rax*1+0x0]
  42a976:	jne    0x42a884
  42a97c:	xor    r14d,r14d
  42a97f:	test   rbx,rbx
  42a982:	mov    rsi,r13
  42a985:	jne    0x42a8a2
  42a98b:	mov    rbx,rsi
  42a98e:	xor    r13d,r13d
  42a991:	jmp    0x42a8b7
  42a996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9a0:	mov    rcx,r12
  42a9a3:	add    rsp,0x48
  42a9a7:	pop    rbx
  42a9a8:	pop    rsi
  42a9a9:	pop    rdi
  42a9aa:	pop    rbp
  42a9ab:	pop    r12
  42a9ad:	pop    r13
  42a9af:	pop    r14
  42a9b1:	pop    r15
  42a9b3:	jmp    0x40e6e0
  42a9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a9c0:	mov    rcx,r13
  42a9c3:	call   0x40e6e0
  42a9c8:	jmp    0x42a946
  42a9cd:	nop    DWORD PTR [rax]
  42a9d0:	mov    rcx,r14
  42a9d3:	call   0x40e6e0
  42a9d8:	jmp    0x42a940
  42a9dd:	nop    DWORD PTR [rax]
  42a9e0:	lea    r8,[rip+0x4d67a]        # 0x478061
  42a9e7:	lea    rdx,[rip+0x4d6d2]        # 0x4780c0
  42a9ee:	lea    rcx,[rip+0x4d67b]        # 0x478070
  42a9f5:	add    rsp,0x48
  42a9f9:	pop    rbx
  42a9fa:	pop    rsi
  42a9fb:	pop    rdi
  42a9fc:	pop    rbp
  42a9fd:	pop    r12
  42a9ff:	pop    r13
  42aa01:	pop    r14
  42aa03:	pop    r15
  42aa05:	jmp    0x40fd20
  42aa0a:	nop    WORD PTR [rax+rax*1+0x0]
  42aa10:	test   rbx,rbx
  42aa13:	mov    rcx,rbp
  42aa16:	cmovne rcx,rbx
  42aa1a:	jmp    0x42a854
  42aa1f:	nop
  42aa20:	push   rbx
  42aa21:	sub    rsp,0x20
  42aa25:	mov    rbx,rcx
  42aa28:	mov    rcx,QWORD PTR [rcx]
  42aa2b:	call   0x40e6e0
  42aa30:	mov    rcx,QWORD PTR [rbx+0x8]
  42aa34:	call   0x41a040
  42aa39:	mov    rcx,rbx
  42aa3c:	add    rsp,0x20
  42aa40:	pop    rbx
  42aa41:	jmp    0x40e6e0
  42aa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa50:	push   r13
  42aa52:	push   r12
  42aa54:	push   rbp
  42aa55:	push   rdi
  42aa56:	push   rsi
  42aa57:	push   rbx
  42aa58:	sub    rsp,0x28
  42aa5c:	mov    r12,rcx
  42aa5f:	lea    rcx,[rip+0x59c02]        # 0x484668
  42aa66:	call   0x426d40
  42aa6b:	cmp    QWORD PTR [rip+0x59bed],0x0        # 0x484660
  42aa73:	je     0x42aaa0
  42aa75:	lea    rcx,[rip+0x59bec]        # 0x484668
  42aa7c:	call   0x426d70
  42aa81:	mov    rcx,QWORD PTR [rip+0x59bd8]        # 0x484660
  42aa88:	mov    rdx,r12
  42aa8b:	add    rsp,0x28
  42aa8f:	pop    rbx
  42aa90:	pop    rsi
  42aa91:	pop    rdi
  42aa92:	pop    rbp
  42aa93:	pop    r12
  42aa95:	pop    r13
  42aa97:	jmp    0x408de0
  42aa9c:	nop    DWORD PTR [rax+0x0]
  42aaa0:	lea    rdx,[rip+0xfffffffffffdec89]        # 0x409730
  42aaa7:	lea    rcx,[rip+0xfffffffffffdeca2]        # 0x409750
  42aaae:	call   0x408a60
  42aab3:	mov    QWORD PTR [rip+0x59ba6],rax        # 0x484660
  42aaba:	call   0x431d10
  42aabf:	cmp    BYTE PTR [rax],0x0
  42aac2:	mov    rsi,rax
  42aac5:	je     0x42aa75
  42aac7:	nop    WORD PTR [rax+rax*1+0x0]
  42aad0:	mov    rcx,rsi
  42aad3:	call   0x438788
  42aad8:	lea    rdi,[rsi+rax*1+0x1]
  42aadd:	mov    rcx,rdi
  42aae0:	call   0x438788
  42aae5:	mov    rcx,QWORD PTR [rip+0x59b74]        # 0x484660
  42aaec:	mov    rdx,rdi
  42aaef:	lea    rbp,[rdi+rax*1+0x1]
  42aaf4:	call   0x408de0
  42aaf9:	test   rax,rax
  42aafc:	je     0x42ab74
  42aafe:	cmp    QWORD PTR [rax],0x0
  42ab02:	je     0x42ab8d
  42ab08:	mov    r8d,0x1
  42ab0e:	xchg   ax,ax
  42ab10:	mov    r9d,r8d
  42ab13:	lea    r13,[r8*8+0x0]
  42ab1b:	add    r8,0x1
  42ab1f:	cmp    QWORD PTR [rax+r8*8-0x8],0x0
  42ab25:	jne    0x42ab10
  42ab27:	lea    edx,[r9+0x2]
  42ab2b:	lea    rbx,[r8*8+0x0]
  42ab33:	movsxd rdx,edx
  42ab36:	mov    r8d,0x8
  42ab3c:	mov    rcx,rax
  42ab3f:	call   0x40e860
  42ab44:	mov    r8,rax
  42ab47:	mov    rcx,QWORD PTR [rip+0x59b12]        # 0x484660
  42ab4e:	mov    QWORD PTR [r8+r13*1],rsi
  42ab52:	mov    rdx,rdi
  42ab55:	mov    QWORD PTR [r8+rbx*1],0x0
  42ab5d:	mov    rsi,rbp
  42ab60:	call   0x409090
  42ab65:	cmp    BYTE PTR [rbp+0x0],0x0
  42ab69:	jne    0x42aad0
  42ab6f:	jmp    0x42aa75
  42ab74:	mov    edx,0x10
  42ab79:	xor    ecx,ecx
  42ab7b:	mov    ebx,0x8
  42ab80:	call   0x40e670
  42ab85:	xor    r13d,r13d
  42ab88:	mov    r8,rax
  42ab8b:	jmp    0x42ab47
  42ab8d:	mov    ebx,0x8
  42ab92:	xor    r13d,r13d
  42ab95:	mov    edx,0x2
  42ab9a:	jmp    0x42ab36
  42ab9c:	nop    DWORD PTR [rax+0x0]
  42aba0:	push   rbp
  42aba1:	push   rdi
  42aba2:	push   rsi
  42aba3:	push   rbx
  42aba4:	sub    rsp,0x28
  42aba8:	mov    rdi,rcx
  42abab:	lea    rcx,[rip+0xfbae]        # 0x43a760
  42abb2:	call   0x426ff0
  42abb7:	test   rax,rax
  42abba:	mov    rbx,rax
  42abbd:	je     0x42acb0
  42abc3:	lea    rcx,[rip+0x59a9e]        # 0x484668
  42abca:	call   0x426d40
  42abcf:	call   0x431d30
  42abd4:	lea    rcx,[rip+0x59a8d]        # 0x484668
  42abdb:	mov    rbp,rax
  42abde:	call   0x426d70
  42abe3:	mov    rsi,QWORD PTR [rbx+0x8]
  42abe7:	test   rsi,rsi
  42abea:	je     0x42ac12
  42abec:	mov    rdx,rbp
  42abef:	mov    rcx,rsi
  42abf2:	call   0x4387a0
  42abf7:	test   eax,eax
  42abf9:	jne    0x42ac12
  42abfb:	test   rdi,rdi
  42abfe:	je     0x42ac07
  42ac00:	mov    rax,QWORD PTR [rbx+0x10]
  42ac04:	mov    QWORD PTR [rdi],rax
  42ac07:	mov    eax,DWORD PTR [rbx]
  42ac09:	add    rsp,0x28
  42ac0d:	pop    rbx
  42ac0e:	pop    rsi
  42ac0f:	pop    rdi
  42ac10:	pop    rbp
  42ac11:	ret    
  42ac12:	mov    rcx,rsi
  42ac15:	call   0x40e6e0
  42ac1a:	mov    rcx,QWORD PTR [rbx+0x10]
  42ac1e:	call   0x40e6e0
  42ac23:	mov    rcx,rbp
  42ac26:	call   0x4182b0
  42ac2b:	lea    rcx,[rip+0x4d44c]        # 0x47807e
  42ac32:	mov    QWORD PTR [rbx+0x8],rax
  42ac36:	call   0x4059c0
  42ac3b:	test   rax,rax
  42ac3e:	mov    rsi,rax
  42ac41:	je     0x42ac48
  42ac43:	cmp    BYTE PTR [rax],0x0
  42ac46:	jne    0x42ac75
  42ac48:	lea    rcx,[rip+0x59a19]        # 0x484668
  42ac4f:	call   0x426d40
  42ac54:	mov    rcx,rbp
  42ac57:	call   0x431d60
  42ac5c:	lea    rcx,[rip+0x59a05]        # 0x484668
  42ac63:	mov    rsi,rax
  42ac66:	call   0x426d70
  42ac6b:	test   rsi,rsi
  42ac6e:	je     0x42aca0
  42ac70:	cmp    BYTE PTR [rsi],0x0
  42ac73:	je     0x42aca0
  42ac75:	lea    rdx,[rip+0x4d40a]        # 0x478086
  42ac7c:	mov    rcx,rsi
  42ac7f:	call   0x438760
  42ac84:	test   rax,rax
  42ac87:	setne  al
  42ac8a:	movzx  eax,al
  42ac8d:	mov    DWORD PTR [rbx],eax
  42ac8f:	mov    rcx,rsi
  42ac92:	call   0x4182b0
  42ac97:	mov    QWORD PTR [rbx+0x10],rax
  42ac9b:	jmp    0x42abfb
  42aca0:	lea    rsi,[rip+0x4d3ce]        # 0x478075
  42aca7:	xor    eax,eax
  42aca9:	jmp    0x42ac8d
  42acab:	nop    DWORD PTR [rax+rax*1+0x0]
  42acb0:	mov    ecx,0x18
  42acb5:	call   0x40e610
  42acba:	lea    rcx,[rip+0xfa9f]        # 0x43a760
  42acc1:	mov    rdx,rax
  42acc4:	mov    rbx,rax
  42acc7:	call   0x427020
  42accc:	jmp    0x42abc3
  42acd1:	nop    DWORD PTR [rax+rax*1+0x0]
  42acd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ace0:	sub    rsp,0x38
  42ace4:	lea    rcx,[rsp+0x28]
  42ace9:	call   0x42aba0
  42acee:	mov    rcx,QWORD PTR [rsp+0x28]
  42acf3:	call   0x4182b0
  42acf8:	add    rsp,0x38
  42acfc:	ret    
  42acfd:	nop    DWORD PTR [rax]
  42ad00:	push   rsi
  42ad01:	push   rbx
  42ad02:	sub    rsp,0x28
  42ad06:	test   rcx,rcx
  42ad09:	mov    rsi,rcx
  42ad0c:	je     0x42ad40
  42ad0e:	mov    ecx,0x8
  42ad13:	call   0x4296f0
  42ad18:	mov    rdx,rsi
  42ad1b:	mov    rbx,rax
  42ad1e:	mov    rcx,rax
  42ad21:	call   0x42a800
  42ad26:	xor    edx,edx
  42ad28:	mov    rcx,rbx
  42ad2b:	call   0x429cc0
  42ad30:	xor    edx,edx
  42ad32:	mov    rcx,rbx
  42ad35:	add    rsp,0x28
  42ad39:	pop    rbx
  42ad3a:	pop    rsi
  42ad3b:	jmp    0x429ef0
  42ad40:	lea    r8,[rip+0x4d31a]        # 0x478061
  42ad47:	lea    rdx,[rip+0x4d392]        # 0x4780e0
  42ad4e:	lea    rcx,[rip+0x4d31b]        # 0x478070
  42ad55:	call   0x40fd20
  42ad5a:	xor    eax,eax
  42ad5c:	add    rsp,0x28
  42ad60:	pop    rbx
  42ad61:	pop    rsi
  42ad62:	ret    
  42ad63:	nop    DWORD PTR [rax]
  42ad66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad70:	push   rbp
  42ad71:	push   rdi
  42ad72:	push   rsi
  42ad73:	push   rbx
  42ad74:	sub    rsp,0x28
  42ad78:	lea    rcx,[rip+0xf9c1]        # 0x43a740
  42ad7f:	call   0x426ff0
  42ad84:	test   rax,rax
  42ad87:	mov    rsi,rax
  42ad8a:	je     0x42aef0
  42ad90:	lea    rcx,[rip+0x4d2f7]        # 0x47808e
  42ad97:	call   0x4059c0
  42ad9c:	test   rax,rax
  42ad9f:	je     0x42ada9
  42ada1:	cmp    BYTE PTR [rax],0x0
  42ada4:	mov    rbx,rax
  42ada7:	jne    0x42ae20
  42ada9:	lea    rcx,[rip+0x4d2e7]        # 0x478097
  42adb0:	call   0x4059c0
  42adb5:	test   rax,rax
  42adb8:	je     0x42adc2
  42adba:	cmp    BYTE PTR [rax],0x0
  42adbd:	mov    rbx,rax
  42adc0:	jne    0x42ae20
  42adc2:	lea    rcx,[rip+0x4d2d5]        # 0x47809e
  42adc9:	call   0x4059c0
  42adce:	test   rax,rax
  42add1:	je     0x42addb
  42add3:	cmp    BYTE PTR [rax],0x0
  42add6:	mov    rbx,rax
  42add9:	jne    0x42ae20
  42addb:	lea    rcx,[rip+0x4d2c8]        # 0x4780aa
  42ade2:	call   0x4059c0
  42ade7:	test   rax,rax
  42adea:	je     0x42adf4
  42adec:	cmp    BYTE PTR [rax],0x0
  42adef:	mov    rbx,rax
  42adf2:	jne    0x42ae20
  42adf4:	call   0x427610
  42adf9:	mov    rdi,rax
  42adfc:	mov    rcx,rax
  42adff:	call   0x42fea0
  42ae04:	mov    rcx,rdi
  42ae07:	mov    rbx,rax
  42ae0a:	call   0x40e6e0
  42ae0f:	lea    rax,[rip+0x4d276]        # 0x47808c
  42ae16:	test   rbx,rbx
  42ae19:	cmove  rbx,rax
  42ae1d:	nop    DWORD PTR [rax]
  42ae20:	mov    rdi,QWORD PTR [rsi]
  42ae23:	test   rdi,rdi
  42ae26:	je     0x42ae3b
  42ae28:	mov    rdx,rbx
  42ae2b:	mov    rcx,rdi
  42ae2e:	call   0x4387a0
  42ae33:	test   eax,eax
  42ae35:	je     0x42aee0
  42ae3b:	mov    rcx,rdi
  42ae3e:	call   0x40e6e0
  42ae43:	mov    rcx,QWORD PTR [rsi+0x8]
  42ae47:	call   0x41a040
  42ae4c:	mov    rcx,rbx
  42ae4f:	call   0x4182b0
  42ae54:	mov    ecx,0x8
  42ae59:	mov    QWORD PTR [rsi],rax
  42ae5c:	call   0x4296f0
  42ae61:	lea    rdx,[rip+0x4d247]        # 0x4780af
  42ae68:	xor    r8d,r8d
  42ae6b:	mov    rcx,rbx
  42ae6e:	mov    rdi,rax
  42ae71:	call   0x419c40
  42ae76:	mov    rdx,QWORD PTR [rax]
  42ae79:	mov    rbp,rax
  42ae7c:	mov    rbx,rax
  42ae7f:	test   rdx,rdx
  42ae82:	je     0x42ae98
  42ae84:	add    rbx,0x8
  42ae88:	mov    rcx,rdi
  42ae8b:	call   0x42a800
  42ae90:	mov    rdx,QWORD PTR [rbx]
  42ae93:	test   rdx,rdx
  42ae96:	jne    0x42ae84
  42ae98:	mov    rcx,rbp
  42ae9b:	call   0x41a040
  42aea0:	lea    rcx,[rip+0x4d1e5]        # 0x47808c
  42aea7:	call   0x4182b0
  42aeac:	mov    rcx,rdi
  42aeaf:	mov    rdx,rax
  42aeb2:	call   0x429cc0
  42aeb7:	xor    edx,edx
  42aeb9:	mov    rcx,rdi
  42aebc:	call   0x429cc0
  42aec1:	xor    edx,edx
  42aec3:	mov    rcx,rdi
  42aec6:	call   0x429ef0
  42aecb:	mov    QWORD PTR [rsi+0x8],rax
  42aecf:	add    rsp,0x28
  42aed3:	pop    rbx
  42aed4:	pop    rsi
  42aed5:	pop    rdi
  42aed6:	pop    rbp
  42aed7:	ret    
  42aed8:	nop    DWORD PTR [rax+rax*1+0x0]
  42aee0:	mov    rax,QWORD PTR [rsi+0x8]
  42aee4:	add    rsp,0x28
  42aee8:	pop    rbx
  42aee9:	pop    rsi
  42aeea:	pop    rdi
  42aeeb:	pop    rbp
  42aeec:	ret    
  42aeed:	nop    DWORD PTR [rax]
  42aef0:	mov    ecx,0x10
  42aef5:	call   0x40e610
  42aefa:	lea    rcx,[rip+0xf83f]        # 0x43a740
  42af01:	mov    rdx,rax
  42af04:	mov    rsi,rax
  42af07:	call   0x427020
  42af0c:	jmp    0x42ad90
  42af11:	nop
  42af12:	nop
  42af13:	nop
  42af14:	nop
  42af15:	nop
  42af16:	nop
  42af17:	nop
  42af18:	nop
  42af19:	nop
  42af1a:	nop
  42af1b:	nop
  42af1c:	nop
  42af1d:	nop
  42af1e:	nop
  42af1f:	nop
  42af20:	xor    eax,eax
  42af22:	ret    
  42af23:	nop    DWORD PTR [rax]
  42af26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af30:	mov    eax,0x1
  42af35:	ret    
  42af36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af40:	sub    rsp,0x28
  42af44:	cmp    r8d,0x1
  42af48:	jle    0x42b090
  42af4e:	mov    ecx,DWORD PTR [rcx]
  42af50:	cmp    ecx,0x4b0
  42af56:	je     0x42aff0
  42af5c:	cmp    ecx,0x4b1
  42af62:	je     0x42b010
  42af68:	movzx  eax,WORD PTR [r9]
  42af6c:	lea    r10d,[rax+0x2400]
  42af73:	cmp    r10w,0x3ff
  42af79:	jbe    0x42b070
  42af7f:	add    ax,0x2800
  42af83:	cmp    ax,0x3ff
  42af87:	jbe    0x42afa0
  42af89:	mov    rax,QWORD PTR [rsp+0x50]
  42af8e:	mov    DWORD PTR [rax],0x1
  42af94:	mov    eax,0x2
  42af99:	add    rsp,0x28
  42af9d:	ret    
  42af9e:	xchg   ax,ax
  42afa0:	cmp    r8d,0x3
  42afa4:	jle    0x42b090
  42afaa:	cmp    ecx,0x4b0
  42afb0:	je     0x42b050
  42afb6:	cmp    ecx,0x4b1
  42afbc:	je     0x42b030
  42afbe:	movzx  eax,WORD PTR [r9+0x2]
  42afc3:	add    ax,0x2400
  42afc7:	cmp    ax,0x3ff
  42afcb:	ja     0x42b070
  42afd1:	mov    rax,QWORD PTR [rsp+0x50]
  42afd6:	mov    DWORD PTR [rax],0x2
  42afdc:	mov    eax,0x4
  42afe1:	add    rsp,0x28
  42afe5:	ret    
  42afe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aff0:	movzx  eax,BYTE PTR [rdx+0x1]
  42aff4:	movzx  r10d,BYTE PTR [rdx]
  42aff8:	shl    eax,0x8
  42affb:	or     eax,r10d
  42affe:	mov    WORD PTR [r9],ax
  42b002:	jmp    0x42af6c
  42b007:	nop    WORD PTR [rax+rax*1+0x0]
  42b010:	movzx  eax,BYTE PTR [rdx]
  42b013:	movzx  r10d,BYTE PTR [rdx+0x1]
  42b018:	shl    eax,0x8
  42b01b:	or     eax,r10d
  42b01e:	mov    WORD PTR [r9],ax
  42b022:	jmp    0x42af6c
  42b027:	nop    WORD PTR [rax+rax*1+0x0]
  42b030:	movzx  eax,BYTE PTR [rdx+0x2]
  42b034:	movzx  edx,BYTE PTR [rdx+0x3]
  42b038:	shl    eax,0x8
  42b03b:	or     eax,edx
  42b03d:	mov    WORD PTR [r9+0x2],ax
  42b042:	jmp    0x42afc3
  42b047:	nop    WORD PTR [rax+rax*1+0x0]
  42b050:	movzx  eax,BYTE PTR [rdx+0x3]
  42b054:	movzx  edx,BYTE PTR [rdx+0x2]
  42b058:	shl    eax,0x8
  42b05b:	or     eax,edx
  42b05d:	mov    WORD PTR [r9+0x2],ax
  42b062:	jmp    0x42afc3
  42b067:	nop    WORD PTR [rax+rax*1+0x0]
  42b070:	call   QWORD PTR [rip+0x5b86a]        # 0x4868e0
  42b076:	mov    DWORD PTR [rax],0x2a
  42b07c:	mov    eax,0xffffffff
  42b081:	jmp    0x42af99
  42b086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b090:	call   QWORD PTR [rip+0x5b84a]        # 0x4868e0
  42b096:	mov    DWORD PTR [rax],0x16
  42b09c:	mov    eax,0xffffffff
  42b0a1:	jmp    0x42af99
  42b0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b0b0:	push   rbp
  42b0b1:	push   rdi
  42b0b2:	push   rsi
  42b0b3:	push   rbx
  42b0b4:	sub    rsp,0x58
  42b0b8:	lea    rax,[rcx+0x28]
  42b0bc:	mov    rbx,rcx
  42b0bf:	lea    rsi,[rsp+0x40]
  42b0c4:	lea    rcx,[rsp+0x3c]
  42b0c9:	mov    DWORD PTR [rsp+0x90],r8d
  42b0d1:	mov    rdi,r9
  42b0d4:	mov    QWORD PTR [rsp+0x20],rsi
  42b0d9:	mov    DWORD PTR [rsp+0x3c],0x10
  42b0e1:	mov    ebp,r8d
  42b0e4:	mov    QWORD PTR [rsp+0x28],rcx
  42b0e9:	mov    r8,rdx
  42b0ec:	lea    r9,[rsp+0x90]
  42b0f4:	mov    edx,DWORD PTR [rbx]
  42b0f6:	mov    rcx,rax
  42b0f9:	call   QWORD PTR [rip+0x595b9]        # 0x4846b8
  42b0ff:	test   eax,eax
  42b101:	jne    0x42b145
  42b103:	cmp    ebp,DWORD PTR [rsp+0x90]
  42b10a:	jne    0x42b145
  42b10c:	mov    r8d,DWORD PTR [rsp+0x3c]
  42b111:	cmp    r8d,DWORD PTR [rsp+0xa0]
  42b119:	jg     0x42b161
  42b11b:	mov    rcx,rbx
  42b11e:	mov    rdx,rsi
  42b121:	call   QWORD PTR [rbx+0x18]
  42b124:	cmp    eax,DWORD PTR [rsp+0x3c]
  42b128:	mov    ebx,eax
  42b12a:	jne    0x42b145
  42b12c:	movsxd r8,eax
  42b12f:	mov    rdx,rsi
  42b132:	mov    rcx,rdi
  42b135:	call   0x4387f0
  42b13a:	mov    eax,ebx
  42b13c:	add    rsp,0x58
  42b140:	pop    rbx
  42b141:	pop    rsi
  42b142:	pop    rdi
  42b143:	pop    rbp
  42b144:	ret    
  42b145:	mov    ebx,0xffffffff
  42b14a:	call   QWORD PTR [rip+0x5b790]        # 0x4868e0
  42b150:	mov    DWORD PTR [rax],0x2a
  42b156:	mov    eax,ebx
  42b158:	add    rsp,0x58
  42b15c:	pop    rbx
  42b15d:	pop    rsi
  42b15e:	pop    rdi
  42b15f:	pop    rbp
  42b160:	ret    
  42b161:	call   QWORD PTR [rip+0x5b779]        # 0x4868e0
  42b167:	mov    ebx,0xffffffff
  42b16c:	mov    DWORD PTR [rax],0x7
  42b172:	jmp    0x42b13a
  42b174:	xchg   ax,ax
  42b176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b180:	push   r15
  42b182:	push   r14
  42b184:	push   r13
  42b186:	push   r12
  42b188:	push   rbp
  42b189:	push   rdi
  42b18a:	push   rsi
  42b18b:	push   rbx
  42b18c:	sub    rsp,0x78
  42b190:	movzx  eax,BYTE PTR [rdx]
  42b193:	mov    rdi,rcx
  42b196:	mov    rsi,rdx
  42b199:	mov    r13d,r8d
  42b19c:	mov    r15,r9
  42b19f:	mov    DWORD PTR [rsp+0x5c],0x0
  42b1a7:	cmp    al,0x1b
  42b1a9:	je     0x42b2f0
  42b1af:	cmp    al,0xe
  42b1b1:	je     0x42b410
  42b1b7:	cmp    al,0xf
  42b1b9:	je     0x42b375
  42b1bf:	cmp    al,0x1f
  42b1c1:	mov    edx,DWORD PTR [rcx+0x28]
  42b1c4:	jbe    0x42b364
  42b1ca:	movzx  ebp,dh
  42b1cd:	movzx  r12d,dl
  42b1d1:	movsxd rdx,ebp
  42b1d4:	lea    rcx,[rdx+rdx*2]
  42b1d8:	lea    rdx,[rip+0xf5e1]        # 0x43a7c0
  42b1df:	lea    r9,[rdx+rcx*8]
  42b1e3:	mov    ebx,DWORD PTR [r9+0xc]
  42b1e7:	cmp    r13d,ebx
  42b1ea:	jl     0x42b440
  42b1f0:	test   ebx,ebx
  42b1f2:	jle    0x42b226
  42b1f4:	test   al,al
  42b1f6:	js     0x42b2c4
  42b1fc:	lea    edx,[rbx-0x1]
  42b1ff:	mov    r8,rsi
  42b202:	add    rdx,rsi
  42b205:	jmp    0x42b221
  42b207:	nop    WORD PTR [rax+rax*1+0x0]
  42b210:	movzx  eax,BYTE PTR [r8+0x1]
  42b215:	add    r8,0x1
  42b219:	test   al,al
  42b21b:	js     0x42b2c4
  42b221:	cmp    r8,rdx
  42b224:	jne    0x42b210
  42b226:	movsxd r10,DWORD PTR [r9+0x8]
  42b22a:	lea    r14,[rsp+0x60]
  42b22f:	mov    rdx,QWORD PTR [r9]
  42b232:	mov    rcx,r14
  42b235:	mov    r8,r10
  42b238:	mov    r13,r10
  42b23b:	mov    QWORD PTR [rsp+0x38],r10
  42b240:	call   0x4387f0
  42b245:	cmp    r12d,0x1
  42b249:	mov    r10,QWORD PTR [rsp+0x38]
  42b24e:	je     0x42b394
  42b254:	lea    rcx,[r14+r10*1]
  42b258:	movsxd r8,ebx
  42b25b:	mov    rdx,rsi
  42b25e:	call   0x4387f0
  42b263:	mov    r11d,DWORD PTR [rdi]
  42b266:	mov    rax,QWORD PTR [rsp+0xe0]
  42b26e:	add    r13d,ebx
  42b271:	lea    rcx,[rsp+0x5c]
  42b276:	mov    DWORD PTR [rsp+0x58],r13d
  42b27b:	mov    QWORD PTR [rsp+0x20],r15
  42b280:	lea    r9,[rsp+0x58]
  42b285:	mov    r8,r14
  42b288:	mov    edx,r11d
  42b28b:	mov    QWORD PTR [rsp+0x28],rax
  42b290:	call   QWORD PTR [rip+0x5942a]        # 0x4846c0
  42b296:	test   eax,eax
  42b298:	jne    0x42b2c4
  42b29a:	cmp    r13d,DWORD PTR [rsp+0x58]
  42b29f:	jne    0x42b2c4
  42b2a1:	movzx  eax,BYTE PTR [rsi]
  42b2a4:	mov    edx,DWORD PTR [rdi+0x28]
  42b2a7:	cmp    WORD PTR [r15],ax
  42b2ab:	je     0x42b2c0
  42b2ad:	shl    ebp,0x8
  42b2b0:	mov    eax,ebx
  42b2b2:	or     r12d,ebp
  42b2b5:	cmp    r12d,edx
  42b2b8:	je     0x42b2d5
  42b2ba:	mov    DWORD PTR [rdi+0x28],r12d
  42b2be:	jmp    0x42b2d5
  42b2c0:	test   edx,edx
  42b2c2:	je     0x42b2ad
  42b2c4:	call   QWORD PTR [rip+0x5b616]        # 0x4868e0
  42b2ca:	mov    DWORD PTR [rax],0x2a
  42b2d0:	mov    eax,0xffffffff
  42b2d5:	add    rsp,0x78
  42b2d9:	pop    rbx
  42b2da:	pop    rsi
  42b2db:	pop    rdi
  42b2dc:	pop    rbp
  42b2dd:	pop    r12
  42b2df:	pop    r13
  42b2e1:	pop    r14
  42b2e3:	pop    r15
  42b2e5:	ret    
  42b2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b2f0:	mov    rdx,QWORD PTR [rip+0xf4c9]        # 0x43a7c0
  42b2f7:	test   rdx,rdx
  42b2fa:	je     0x42b2c4
  42b2fc:	lea    rbx,[rip+0xf4bd]        # 0x43a7c0
  42b303:	movsxd r12,r8d
  42b306:	jmp    0x42b32f
  42b308:	nop    DWORD PTR [rax+rax*1+0x0]
  42b310:	mov    r8,r12
  42b313:	mov    rcx,rsi
  42b316:	call   0x438780
  42b31b:	test   eax,eax
  42b31d:	je     0x42b440
  42b323:	add    rbx,0x18
  42b327:	mov    rdx,QWORD PTR [rbx]
  42b32a:	test   rdx,rdx
  42b32d:	je     0x42b2c4
  42b32f:	mov    ebp,DWORD PTR [rbx+0x8]
  42b332:	cmp    ebp,r13d
  42b335:	jg     0x42b310
  42b337:	movsxd r8,ebp
  42b33a:	mov    rcx,rsi
  42b33d:	call   0x438780
  42b342:	test   eax,eax
  42b344:	jne    0x42b323
  42b346:	mov    eax,DWORD PTR [rbx+0x10]
  42b349:	shl    eax,0x8
  42b34c:	mov    DWORD PTR [rdi+0x28],eax
  42b34f:	mov    rax,QWORD PTR [rsp+0xe0]
  42b357:	mov    DWORD PTR [rax],0x0
  42b35d:	mov    eax,ebp
  42b35f:	jmp    0x42b2d5
  42b364:	lea    r9,[rip+0xf455]        # 0x43a7c0
  42b36b:	xor    r12d,r12d
  42b36e:	xor    ebp,ebp
  42b370:	jmp    0x42b1e3
  42b375:	mov    rax,QWORD PTR [rsp+0xe0]
  42b37d:	and    DWORD PTR [rcx+0x28],0xff00
  42b384:	mov    DWORD PTR [rax],0x0
  42b38a:	mov    eax,0x1
  42b38f:	jmp    0x42b2d5
  42b394:	add    r13d,0x1
  42b398:	movsxd rax,ebx
  42b39b:	mov    rdx,rsi
  42b39e:	movsxd rcx,r13d
  42b3a1:	mov    r8,rax
  42b3a4:	mov    BYTE PTR [rsp+r10*1+0x60],0xe
  42b3aa:	add    rcx,r14
  42b3ad:	mov    QWORD PTR [rsp+0x38],rax
  42b3b2:	call   0x4387f0
  42b3b7:	mov    r11d,DWORD PTR [rdi]
  42b3ba:	lea    eax,[r11-0xc42c]
  42b3c1:	cmp    eax,0x2
  42b3c4:	ja     0x42b266
  42b3ca:	movsxd r9,DWORD PTR [rip+0xf427]        # 0x43a7f8
  42b3d1:	mov    rdx,QWORD PTR [rip+0xf418]        # 0x43a7f0
  42b3d8:	mov    rcx,r14
  42b3db:	mov    DWORD PTR [rsp+0x4c],r11d
  42b3e0:	mov    r8,r9
  42b3e3:	mov    r13,r9
  42b3e6:	mov    QWORD PTR [rsp+0x40],r9
  42b3eb:	call   0x4387f0
  42b3f0:	mov    r9,QWORD PTR [rsp+0x40]
  42b3f5:	mov    r8,QWORD PTR [rsp+0x38]
  42b3fa:	mov    rdx,rsi
  42b3fd:	lea    rcx,[r14+r9*1]
  42b401:	call   0x4387f0
  42b406:	mov    r11d,DWORD PTR [rsp+0x4c]
  42b40b:	jmp    0x42b266
  42b410:	mov    eax,DWORD PTR [rcx+0x28]
  42b413:	and    eax,0xff00
  42b418:	or     eax,0x1
  42b41b:	mov    DWORD PTR [rcx+0x28],eax
  42b41e:	mov    rax,QWORD PTR [rsp+0xe0]
  42b426:	mov    DWORD PTR [rax],0x0
  42b42c:	mov    eax,0x1
  42b431:	jmp    0x42b2d5
  42b436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b440:	call   QWORD PTR [rip+0x5b49a]        # 0x4868e0
  42b446:	mov    DWORD PTR [rax],0x16
  42b44c:	mov    eax,0xffffffff
  42b451:	jmp    0x42b2d5
  42b456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b460:	push   r15
  42b462:	push   r14
  42b464:	push   r13
  42b466:	push   r12
  42b468:	push   rbp
  42b469:	push   rdi
  42b46a:	push   rsi
  42b46b:	push   rbx
  42b46c:	sub    rsp,0x58
  42b470:	lea    rax,[rsp+0x38]
  42b475:	lea    rdi,[rsp+0x40]
  42b47a:	mov    rbp,rcx
  42b47d:	mov    DWORD PTR [rsp+0xb0],r8d
  42b485:	mov    r14,rdx
  42b488:	mov    r15,r9
  42b48b:	mov    QWORD PTR [rsp+0x28],rax
  42b490:	mov    QWORD PTR [rsp+0x20],rdi
  42b495:	mov    ebx,r8d
  42b498:	mov    DWORD PTR [rsp+0x38],0x10
  42b4a0:	mov    r8,rdx
  42b4a3:	mov    DWORD PTR [rsp+0x3c],0x0
  42b4ab:	lea    rcx,[rsp+0x3c]
  42b4b0:	lea    r9,[rsp+0xb0]
  42b4b8:	mov    edx,DWORD PTR [rbp+0x0]
  42b4bb:	call   QWORD PTR [rip+0x591f7]        # 0x4846b8
  42b4c1:	test   eax,eax
  42b4c3:	jne    0x42b5c0
  42b4c9:	cmp    ebx,DWORD PTR [rsp+0xb0]
  42b4d0:	jne    0x42b5c0
  42b4d6:	mov    r12d,DWORD PTR [rsp+0x38]
  42b4db:	cmp    r12d,DWORD PTR [rsp+0xc0]
  42b4e3:	jg     0x42b600
  42b4e9:	cmp    r12d,0x1
  42b4ed:	je     0x42b5d3
  42b4f3:	mov    rdx,QWORD PTR [rip+0xf2de]        # 0x43a7d8
  42b4fa:	test   rdx,rdx
  42b4fd:	je     0x42b5c0
  42b503:	lea    r13,[rip+0xf2ce]        # 0x43a7d8
  42b50a:	jmp    0x42b521
  42b50c:	nop    DWORD PTR [rax+0x0]
  42b510:	add    r13,0x18
  42b514:	mov    rdx,QWORD PTR [r13+0x0]
  42b518:	test   rdx,rdx
  42b51b:	je     0x42b5c0
  42b521:	movsxd rsi,DWORD PTR [r13+0x8]
  42b525:	mov    rcx,rdi
  42b528:	mov    r8,rsi
  42b52b:	mov    rbx,rsi
  42b52e:	call   0x438780
  42b533:	test   eax,eax
  42b535:	jne    0x42b510
  42b537:	mov    eax,DWORD PTR [r13+0x10]
  42b53b:	movsxd rdx,eax
  42b53e:	lea    rcx,[rdx+rdx*2]
  42b542:	lea    rdx,[rip+0xf277]        # 0x43a7c0
  42b549:	lea    rdx,[rdx+rcx*8]
  42b54d:	xor    ecx,ecx
  42b54f:	cmp    BYTE PTR [rsp+rsi*1+0x40],0xe
  42b554:	je     0x42b6b0
  42b55a:	test   eax,eax
  42b55c:	mov    r13d,DWORD PTR [rdx+0xc]
  42b560:	jne    0x42b56b
  42b562:	cmp    WORD PTR [r14],0x7f
  42b567:	ja     0x42b5c0
  42b569:	xor    eax,eax
  42b56b:	lea    esi,[rbx+r13*1]
  42b56f:	cmp    r12d,esi
  42b572:	jl     0x42b5c0
  42b574:	mov    r14d,DWORD PTR [rbp+0x28]
  42b578:	mov    edx,eax
  42b57a:	shl    edx,0x8
  42b57d:	or     edx,ecx
  42b57f:	cmp    r14d,edx
  42b582:	mov    r12d,edx
  42b585:	je     0x42b5f0
  42b587:	test   eax,eax
  42b589:	je     0x42b650
  42b58f:	cmp    r14b,0x1
  42b593:	je     0x42b689
  42b599:	movsxd r8,esi
  42b59c:	mov    rdx,rdi
  42b59f:	mov    rcx,r15
  42b5a2:	call   0x4387f0
  42b5a7:	mov    DWORD PTR [rbp+0x28],r12d
  42b5ab:	mov    eax,esi
  42b5ad:	add    rsp,0x58
  42b5b1:	pop    rbx
  42b5b2:	pop    rsi
  42b5b3:	pop    rdi
  42b5b4:	pop    rbp
  42b5b5:	pop    r12
  42b5b7:	pop    r13
  42b5b9:	pop    r14
  42b5bb:	pop    r15
  42b5bd:	ret    
  42b5be:	xchg   ax,ax
  42b5c0:	call   QWORD PTR [rip+0x5b31a]        # 0x4868e0
  42b5c6:	mov    esi,0xffffffff
  42b5cb:	mov    DWORD PTR [rax],0x2a
  42b5d1:	jmp    0x42b5ab
  42b5d3:	cmp    BYTE PTR [rsp+0x40],0xe
  42b5d8:	je     0x42b630
  42b5da:	mov    r13d,DWORD PTR [rip+0xf1eb]        # 0x43a7cc
  42b5e1:	xor    ecx,ecx
  42b5e3:	xor    ebx,ebx
  42b5e5:	jmp    0x42b562
  42b5ea:	nop    WORD PTR [rax+rax*1+0x0]
  42b5f0:	test   ebx,ebx
  42b5f2:	mov    esi,r13d
  42b5f5:	jne    0x42b613
  42b5f7:	cmp    esi,DWORD PTR [rsp+0xc0]
  42b5fe:	jle    0x42b599
  42b600:	call   QWORD PTR [rip+0x5b2da]        # 0x4868e0
  42b606:	mov    esi,0xffffffff
  42b60b:	mov    DWORD PTR [rax],0x7
  42b611:	jmp    0x42b5ab
  42b613:	movsxd rdx,ebx
  42b616:	movsxd r8,r13d
  42b619:	mov    rcx,rdi
  42b61c:	add    rdx,rdi
  42b61f:	call   0x4387e8
  42b624:	jmp    0x42b5f7
  42b626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b630:	lea    rdx,[rip+0xf189]        # 0x43a7c0
  42b637:	mov    ebx,0x1
  42b63c:	xor    eax,eax
  42b63e:	mov    ecx,0x1
  42b643:	jmp    0x42b55a
  42b648:	nop    DWORD PTR [rax+rax*1+0x0]
  42b650:	movsxd rsi,DWORD PTR [rip+0xf171]        # 0x43a7c8
  42b657:	movsxd r8,r13d
  42b65a:	mov    rdx,rdi
  42b65d:	lea    rcx,[rdi+rsi*1]
  42b661:	mov    rbx,rsi
  42b664:	call   0x4387e8
  42b669:	mov    rdx,QWORD PTR [rip+0xf150]        # 0x43a7c0
  42b670:	mov    r8,rsi
  42b673:	mov    rcx,rdi
  42b676:	lea    esi,[rsi+r13*1]
  42b67a:	call   0x4387f0
  42b67f:	cmp    r14b,0x1
  42b683:	jne    0x42b5f7
  42b689:	lea    rcx,[rdi+0x1]
  42b68d:	movsxd r8,esi
  42b690:	mov    rdx,rdi
  42b693:	lea    esi,[rbx+r13*1+0x1]
  42b698:	call   0x4387e8
  42b69d:	mov    BYTE PTR [rsp+0x40],0xf
  42b6a2:	jmp    0x42b5f7
  42b6a7:	nop    WORD PTR [rax+rax*1+0x0]
  42b6b0:	add    ebx,0x1
  42b6b3:	jmp    0x42b63e
  42b6b5:	nop
  42b6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6c0:	push   rdi
  42b6c1:	push   rsi
  42b6c2:	push   rbx
  42b6c3:	sub    rsp,0x50
  42b6c7:	mov    rbx,rcx
  42b6ca:	mov    ecx,DWORD PTR [rsp+0x90]
  42b6d1:	mov    r10,rdx
  42b6d4:	mov    rdi,r9
  42b6d7:	mov    DWORD PTR [rsp+0x4c],0x0
  42b6df:	test   ecx,ecx
  42b6e1:	je     0x42b7c4
  42b6e7:	mov    eax,DWORD PTR [rbx]
  42b6e9:	lea    edx,[rax-0xfde8]
  42b6ef:	cmp    edx,0x1
  42b6f2:	jbe    0x42b750
  42b6f4:	lea    edx,[rax-0xc42c]
  42b6fa:	cmp    edx,0x2
  42b6fd:	jbe    0x42b750
  42b6ff:	mov    edx,eax
  42b701:	and    edx,0xfffffffd
  42b704:	cmp    edx,0xc431
  42b70a:	je     0x42b750
  42b70c:	cmp    eax,0xc435
  42b711:	sete   r9b
  42b715:	cmp    eax,0xcec8
  42b71a:	sete   dl
  42b71d:	or     r9b,dl
  42b720:	jne    0x42b750
  42b722:	cmp    eax,0xd698
  42b727:	je     0x42b750
  42b729:	cmp    eax,0x2a
  42b72c:	je     0x42b750
  42b72e:	lea    edx,[rax-0xdeaa]
  42b734:	cmp    edx,0x9
  42b737:	jbe    0x42b750
  42b739:	test   BYTE PTR [rbx+0x4],0x2
  42b73d:	jne    0x42b7e0
  42b743:	mov    edx,0x400
  42b748:	lea    r9,[rsp+0x4c]
  42b74d:	jmp    0x42b755
  42b74f:	nop
  42b750:	xor    edx,edx
  42b752:	xor    r9d,r9d
  42b755:	mov    QWORD PTR [rsp+0x38],r9
  42b75a:	mov    DWORD PTR [rsp+0x28],ecx
  42b75e:	mov    r9d,r8d
  42b761:	mov    QWORD PTR [rsp+0x30],0x0
  42b76a:	mov    QWORD PTR [rsp+0x20],rdi
  42b76f:	mov    r8,r10
  42b772:	mov    ecx,eax
  42b774:	call   QWORD PTR [rip+0x5b0de]        # 0x486858
  42b77a:	test   eax,eax
  42b77c:	mov    esi,eax
  42b77e:	je     0x42b7a0
  42b780:	mov    eax,DWORD PTR [rsp+0x4c]
  42b784:	test   eax,eax
  42b786:	jne    0x42b7ab
  42b788:	mov    r8d,esi
  42b78b:	mov    rdx,rdi
  42b78e:	mov    rcx,rbx
  42b791:	call   QWORD PTR [rbx+0x18]
  42b794:	cmp    eax,esi
  42b796:	jne    0x42b7ab
  42b798:	add    rsp,0x50
  42b79c:	pop    rbx
  42b79d:	pop    rsi
  42b79e:	pop    rdi
  42b79f:	ret    
  42b7a0:	call   QWORD PTR [rip+0x5af42]        # 0x4866e8
  42b7a6:	cmp    eax,0x7a
  42b7a9:	je     0x42b7c4
  42b7ab:	call   QWORD PTR [rip+0x5b12f]        # 0x4868e0
  42b7b1:	mov    DWORD PTR [rax],0x2a
  42b7b7:	mov    eax,0xffffffff
  42b7bc:	add    rsp,0x50
  42b7c0:	pop    rbx
  42b7c1:	pop    rsi
  42b7c2:	pop    rdi
  42b7c3:	ret    
  42b7c4:	call   QWORD PTR [rip+0x5b116]        # 0x4868e0
  42b7ca:	mov    DWORD PTR [rax],0x7
  42b7d0:	mov    eax,0xffffffff
  42b7d5:	jmp    0x42b798
  42b7d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b7e0:	xor    edx,edx
  42b7e2:	lea    r9,[rsp+0x4c]
  42b7e7:	jmp    0x42b755
  42b7ec:	nop    DWORD PTR [rax+0x0]
  42b7f0:	push   rsi
  42b7f1:	push   rbx
  42b7f2:	sub    rsp,0x28
  42b7f6:	lea    eax,[rdx-0x1]
  42b7f9:	mov    rbx,rcx
  42b7fc:	mov    esi,edx
  42b7fe:	cmp    eax,0x1
  42b801:	jbe    0x42b814
  42b803:	lea    eax,[rdx-0x8]
  42b806:	and    eax,0xfffffff7
  42b809:	je     0x42b814
  42b80b:	cmp    edx,0x20
  42b80e:	jne    0x42b8f0
  42b814:	movzx  eax,BYTE PTR [rbx]
  42b817:	test   al,al
  42b819:	je     0x42b913
  42b81f:	mov    rdx,rbx
  42b822:	xor    ecx,ecx
  42b824:	sub    eax,0x20
  42b827:	cmp    eax,0x5f
  42b82a:	ja     0x42b83e
  42b82c:	lea    r8,[rip+0x4cf4d]        # 0x478780
  42b833:	cdqe   
  42b835:	movzx  eax,BYTE PTR [r8+rax*1]
  42b83a:	test   eax,esi
  42b83c:	jne    0x42b841
  42b83e:	add    ecx,0x1
  42b841:	add    rdx,0x1
  42b845:	movzx  eax,BYTE PTR [rdx]
  42b848:	test   al,al
  42b84a:	jne    0x42b824
  42b84c:	add    ecx,ecx
  42b84e:	sub    rdx,rbx
  42b851:	movsxd rcx,ecx
  42b854:	lea    rcx,[rdx+rcx*1+0x1]
  42b859:	call   0x40e5c0
  42b85e:	movzx  r9d,BYTE PTR [rbx]
  42b862:	mov    r10,rax
  42b865:	test   r9b,r9b
  42b868:	jne    0x42b897
  42b86a:	jmp    0x42b8de
  42b86c:	nop    DWORD PTR [rax+0x0]
  42b870:	lea    rdx,[rip+0x4cf09]        # 0x478780
  42b877:	movsxd r11,r11d
  42b87a:	movzx  edx,BYTE PTR [rdx+r11*1]
  42b87f:	test   edx,esi
  42b881:	je     0x42b8a5
  42b883:	add    rbx,0x1
  42b887:	mov    BYTE PTR [r10],r9b
  42b88a:	add    r10,0x1
  42b88e:	movzx  r9d,BYTE PTR [rbx]
  42b892:	test   r9b,r9b
  42b895:	je     0x42b8de
  42b897:	movzx  r8d,r9b
  42b89b:	lea    r11d,[r8-0x20]
  42b89f:	cmp    r11d,0x5f
  42b8a3:	jbe    0x42b870
  42b8a5:	lea    rdx,[rip+0x4ce94]        # 0x478740
  42b8ac:	sar    r8d,0x4
  42b8b0:	and    r9d,0xf
  42b8b4:	add    rbx,0x1
  42b8b8:	movsxd r8,r8d
  42b8bb:	mov    BYTE PTR [r10],0x25
  42b8bf:	movzx  ecx,BYTE PTR [rdx+r8*1]
  42b8c4:	movzx  edx,BYTE PTR [rdx+r9*1]
  42b8c9:	add    r10,0x3
  42b8cd:	movzx  r9d,BYTE PTR [rbx]
  42b8d1:	mov    BYTE PTR [r10-0x2],cl
  42b8d5:	mov    BYTE PTR [r10-0x1],dl
  42b8d9:	test   r9b,r9b
  42b8dc:	jne    0x42b897
  42b8de:	mov    BYTE PTR [r10],0x0
  42b8e2:	add    rsp,0x28
  42b8e6:	pop    rbx
  42b8e7:	pop    rsi
  42b8e8:	ret    
  42b8e9:	nop    DWORD PTR [rax+0x0]
  42b8f0:	lea    r8,[rip+0x4c809]        # 0x478100
  42b8f7:	lea    rdx,[rip+0x4cd42]        # 0x478640
  42b8fe:	lea    rcx,[rip+0x4c873]        # 0x478178
  42b905:	call   0x40fd20
  42b90a:	xor    eax,eax
  42b90c:	add    rsp,0x28
  42b910:	pop    rbx
  42b911:	pop    rsi
  42b912:	ret    
  42b913:	mov    ecx,0x1
  42b918:	jmp    0x42b859
  42b91d:	nop    DWORD PTR [rax]
  42b920:	push   rbp
  42b921:	push   rdi
  42b922:	push   rsi
  42b923:	push   rbx
  42b924:	sub    rsp,0x28
  42b928:	movzx  eax,BYTE PTR [rdx]
  42b92b:	mov    rdi,rcx
  42b92e:	mov    rsi,rdx
  42b931:	test   al,al
  42b933:	jne    0x42b966
  42b935:	jmp    0x42b980
  42b937:	nop    WORD PTR [rax+rax*1+0x0]
  42b940:	movsx  ecx,al
  42b943:	call   0x419280
  42b948:	movsx  ecx,bl
  42b94b:	mov    ebp,eax
  42b94d:	call   0x419280
  42b952:	cmp    bpl,al
  42b955:	jne    0x42b96d
  42b957:	add    rsi,0x1
  42b95b:	movzx  eax,BYTE PTR [rsi]
  42b95e:	add    rdi,0x1
  42b962:	test   al,al
  42b964:	je     0x42b980
  42b966:	movzx  ebx,BYTE PTR [rdi]
  42b969:	test   bl,bl
  42b96b:	jne    0x42b940
  42b96d:	xor    eax,eax
  42b96f:	add    rsp,0x28
  42b973:	pop    rbx
  42b974:	pop    rsi
  42b975:	pop    rdi
  42b976:	pop    rbp
  42b977:	ret    
  42b978:	nop    DWORD PTR [rax+rax*1+0x0]
  42b980:	mov    eax,0x1
  42b985:	add    rsp,0x28
  42b989:	pop    rbx
  42b98a:	pop    rsi
  42b98b:	pop    rdi
  42b98c:	pop    rbp
  42b98d:	ret    
  42b98e:	xchg   ax,ax
  42b990:	push   r15
  42b992:	push   r14
  42b994:	push   r13
  42b996:	push   r12
  42b998:	push   rbp
  42b999:	push   rdi
  42b99a:	push   rsi
  42b99b:	push   rbx
  42b99c:	sub    rsp,0x48
  42b9a0:	test   rcx,rcx
  42b9a3:	mov    rbx,rcx
  42b9a6:	mov    r12d,edx
  42b9a9:	mov    r13,r8
  42b9ac:	mov    r15d,r9d
  42b9af:	je     0x42baee
  42b9b5:	test   edx,edx
  42b9b7:	js     0x42bac0
  42b9bd:	lea    ecx,[r12+0x1]
  42b9c2:	movsxd rcx,ecx
  42b9c5:	call   0x40e5c0
  42b9ca:	mov    r14,rax
  42b9cd:	movsxd rax,r12d
  42b9d0:	lea    rbp,[rbx+rax*1]
  42b9d4:	mov    QWORD PTR [rsp+0x38],rax
  42b9d9:	cmp    rbx,rbp
  42b9dc:	jae    0x42bae4
  42b9e2:	mov    r12,r14
  42b9e5:	jmp    0x42ba02
  42b9e7:	nop    WORD PTR [rax+rax*1+0x0]
  42b9f0:	add    rbx,0x1
  42b9f4:	add    r12,0x1
  42b9f8:	mov    BYTE PTR [r12-0x1],sil
  42b9fd:	cmp    rbp,rbx
  42ba00:	jbe    0x42ba60
  42ba02:	movsx  esi,BYTE PTR [rbx]
  42ba05:	cmp    esi,0x25
  42ba08:	jne    0x42b9f0
  42ba0a:	lea    rax,[rbx+0x3]
  42ba0e:	cmp    rbp,rax
  42ba11:	jb     0x42ba60
  42ba13:	movsx  ecx,BYTE PTR [rbx+0x1]
  42ba17:	call   0x4192f0
  42ba1c:	test   eax,eax
  42ba1e:	mov    edi,eax
  42ba20:	js     0x42ba60
  42ba22:	movsx  ecx,BYTE PTR [rbx+0x2]
  42ba26:	call   0x4192f0
  42ba2b:	test   eax,eax
  42ba2d:	js     0x42ba60
  42ba2f:	shl    edi,0x4
  42ba32:	or     eax,edi
  42ba34:	mov    esi,eax
  42ba36:	jle    0x42ba60
  42ba38:	cmp    eax,0x7f
  42ba3b:	jg     0x42ba46
  42ba3d:	test   r15d,r15d
  42ba40:	jne    0x42bad9
  42ba46:	mov    edx,esi
  42ba48:	mov    rcx,r13
  42ba4b:	call   0x4387a8
  42ba50:	test   rax,rax
  42ba53:	jne    0x42ba60
  42ba55:	add    rbx,0x2
  42ba59:	jmp    0x42b9f0
  42ba5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ba60:	mov    rax,r12
  42ba63:	mov    r8,r12
  42ba66:	sub    rax,r14
  42ba69:	cmp    QWORD PTR [rsp+0x38],rax
  42ba6e:	jl     0x42ba90
  42ba70:	cmp    rbx,rbp
  42ba73:	mov    BYTE PTR [r8],0x0
  42ba77:	jne    0x42bacd
  42ba79:	mov    rax,r14
  42ba7c:	add    rsp,0x48
  42ba80:	pop    rbx
  42ba81:	pop    rsi
  42ba82:	pop    rdi
  42ba83:	pop    rbp
  42ba84:	pop    r12
  42ba86:	pop    r13
  42ba88:	pop    r14
  42ba8a:	pop    r15
  42ba8c:	ret    
  42ba8d:	nop    DWORD PTR [rax]
  42ba90:	lea    rax,[rip+0x4c742]        # 0x4781d9
  42ba97:	lea    r9,[rip+0x4cbe2]        # 0x478680
  42ba9e:	lea    rdx,[rip+0x4c6db]        # 0x478180
  42baa5:	lea    rcx,[rip+0x4c6cc]        # 0x478178
  42baac:	mov    r8d,0x6f2
  42bab2:	mov    QWORD PTR [rsp+0x20],rax
  42bab7:	call   0x41e680
  42babc:	nop    DWORD PTR [rax+0x0]
  42bac0:	call   0x438788
  42bac5:	mov    r12d,eax
  42bac8:	jmp    0x42b9bd
  42bacd:	mov    rcx,r14
  42bad0:	call   0x40e6e0
  42bad5:	xor    eax,eax
  42bad7:	jmp    0x42ba7c
  42bad9:	mov    rax,r12
  42badc:	mov    r8,r12
  42badf:	sub    rax,r14
  42bae2:	jmp    0x42ba69
  42bae4:	mov    r8,r14
  42bae7:	xor    eax,eax
  42bae9:	jmp    0x42ba69
  42baee:	xor    eax,eax
  42baf0:	jmp    0x42ba7c
  42baf2:	nop    DWORD PTR [rax+0x0]
  42baf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb00:	lea    eax,[rcx-0x4b0]
  42bb06:	cmp    eax,0x1
  42bb09:	jbe    0x42bb25
  42bb0b:	lea    eax,[rcx-0x2ee0]
  42bb11:	cmp    eax,0x1
  42bb14:	jbe    0x42bb25
  42bb16:	sub    ecx,0xfde8
  42bb1c:	xor    eax,eax
  42bb1e:	cmp    ecx,0x1
  42bb21:	setbe  al
  42bb24:	ret    
  42bb25:	mov    eax,0x1
  42bb2a:	ret    
  42bb2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb30:	sub    rsp,0x28
  42bb34:	cmp    DWORD PTR [rcx],0xd698
  42bb3a:	jne    0x42bb85
  42bb3c:	movzx  ecx,BYTE PTR [rdx]
  42bb3f:	mov    eax,0x1
  42bb44:	test   cl,cl
  42bb46:	js     0x42bb50
  42bb48:	add    rsp,0x28
  42bb4c:	ret    
  42bb4d:	nop    DWORD PTR [rax]
  42bb50:	add    ecx,0x7f
  42bb53:	cmp    cl,0x7d
  42bb56:	ja     0x42bb85
  42bb58:	cmp    r8d,0x1
  42bb5c:	jle    0x42bb85
  42bb5e:	movzx  eax,BYTE PTR [rdx+0x1]
  42bb62:	lea    edx,[rax-0x80]
  42bb65:	cmp    dl,0x7e
  42bb68:	jbe    0x42bba0
  42bb6a:	lea    edx,[rax-0x40]
  42bb6d:	cmp    dl,0x3e
  42bb70:	jbe    0x42bba0
  42bb72:	cmp    r8d,0x3
  42bb76:	jle    0x42bb85
  42bb78:	lea    edx,[rax-0x30]
  42bb7b:	mov    eax,0x4
  42bb80:	cmp    dl,0x9
  42bb83:	jbe    0x42bb48
  42bb85:	call   QWORD PTR [rip+0x5ad55]        # 0x4868e0
  42bb8b:	mov    DWORD PTR [rax],0x16
  42bb91:	mov    eax,0xffffffff
  42bb96:	jmp    0x42bb48
  42bb98:	nop    DWORD PTR [rax+rax*1+0x0]
  42bba0:	mov    eax,0x2
  42bba5:	jmp    0x42bb48
  42bba7:	nop    WORD PTR [rax+rax*1+0x0]
  42bbb0:	sub    rsp,0x28
  42bbb4:	movzx  ecx,BYTE PTR [rdx]
  42bbb7:	mov    eax,0x1
  42bbbc:	test   cl,cl
  42bbbe:	js     0x42bbc5
  42bbc0:	add    rsp,0x28
  42bbc4:	ret    
  42bbc5:	cmp    cl,0x8e
  42bbc8:	je     0x42bc25
  42bbca:	cmp    cl,0x8f
  42bbcd:	je     0x42bc01
  42bbcf:	cmp    r8d,0x1
  42bbd3:	jle    0x42bc40
  42bbd5:	add    ecx,0x5f
  42bbd8:	cmp    cl,0x5d
  42bbdb:	ja     0x42bbee
  42bbdd:	movzx  edx,BYTE PTR [rdx+0x1]
  42bbe1:	mov    eax,0x2
  42bbe6:	add    edx,0x5f
  42bbe9:	cmp    dl,0x5d
  42bbec:	jbe    0x42bbc0
  42bbee:	call   QWORD PTR [rip+0x5acec]        # 0x4868e0
  42bbf4:	mov    DWORD PTR [rax],0x2a
  42bbfa:	mov    eax,0xffffffff
  42bbff:	jmp    0x42bbc0
  42bc01:	cmp    r8d,0x2
  42bc05:	jle    0x42bc40
  42bc07:	movzx  eax,BYTE PTR [rdx+0x1]
  42bc0b:	add    eax,0x5f
  42bc0e:	cmp    al,0x5d
  42bc10:	ja     0x42bbee
  42bc12:	movzx  edx,BYTE PTR [rdx+0x2]
  42bc16:	mov    eax,0x3
  42bc1b:	add    edx,0x5f
  42bc1e:	cmp    dl,0x5d
  42bc21:	jbe    0x42bbc0
  42bc23:	jmp    0x42bbee
  42bc25:	cmp    r8d,0x1
  42bc29:	jle    0x42bc40
  42bc2b:	movzx  eax,BYTE PTR [rdx+0x1]
  42bc2f:	add    eax,0x5f
  42bc32:	cmp    al,0x3e
  42bc34:	ja     0x42bbee
  42bc36:	mov    eax,0x2
  42bc3b:	add    rsp,0x28
  42bc3f:	ret    
  42bc40:	call   QWORD PTR [rip+0x5ac9a]        # 0x4868e0
  42bc46:	mov    DWORD PTR [rax],0x16
  42bc4c:	mov    eax,0xffffffff
  42bc51:	jmp    0x42bbc0
  42bc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc60:	push   rbp
  42bc61:	push   rdi
  42bc62:	push   rsi
  42bc63:	push   rbx
  42bc64:	sub    rsp,0x48
  42bc68:	mov    rbx,rcx
  42bc6b:	mov    rdi,rdx
  42bc6e:	mov    rbp,r9
  42bc71:	call   QWORD PTR [rbx+0x18]
  42bc74:	cmp    eax,0xffffffff
  42bc77:	mov    esi,eax
  42bc79:	je     0x42bce0
  42bc7b:	mov    DWORD PTR [rsp+0x3c],eax
  42bc7f:	mov    rax,QWORD PTR [rsp+0x90]
  42bc87:	lea    rcx,[rbx+0x28]
  42bc8b:	mov    QWORD PTR [rsp+0x20],rbp
  42bc90:	lea    r9,[rsp+0x3c]
  42bc95:	mov    r8,rdi
  42bc98:	mov    edx,DWORD PTR [rbx]
  42bc9a:	mov    QWORD PTR [rsp+0x28],rax
  42bc9f:	call   QWORD PTR [rip+0x58a1b]        # 0x4846c0
  42bca5:	test   eax,eax
  42bca7:	jne    0x42bcc0
  42bca9:	mov    eax,DWORD PTR [rsp+0x3c]
  42bcad:	cmp    eax,esi
  42bcaf:	jne    0x42bcc0
  42bcb1:	add    rsp,0x48
  42bcb5:	pop    rbx
  42bcb6:	pop    rsi
  42bcb7:	pop    rdi
  42bcb8:	pop    rbp
  42bcb9:	ret    
  42bcba:	nop    WORD PTR [rax+rax*1+0x0]
  42bcc0:	call   QWORD PTR [rip+0x5ac1a]        # 0x4868e0
  42bcc6:	mov    DWORD PTR [rax],0x2a
  42bccc:	mov    eax,0xffffffff
  42bcd1:	add    rsp,0x48
  42bcd5:	pop    rbx
  42bcd6:	pop    rsi
  42bcd7:	pop    rdi
  42bcd8:	pop    rbp
  42bcd9:	ret    
  42bcda:	nop    WORD PTR [rax+rax*1+0x0]
  42bce0:	jmp    0x42bcb1
  42bce2:	nop    DWORD PTR [rax+0x0]
  42bce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcf0:	sub    rsp,0x28
  42bcf4:	movzx  edx,BYTE PTR [rdx]
  42bcf7:	mov    eax,0x1
  42bcfc:	test   dl,dl
  42bcfe:	js     0x42bd10
  42bd00:	cmp    r8d,eax
  42bd03:	jl     0x42bda0
  42bd09:	add    rsp,0x28
  42bd0d:	ret    
  42bd0e:	xchg   ax,ax
  42bd10:	mov    eax,edx
  42bd12:	and    eax,0xffffffe0
  42bd15:	cmp    al,0xc0
  42bd17:	je     0x42bd50
  42bd19:	mov    eax,edx
  42bd1b:	and    eax,0xfffffff0
  42bd1e:	cmp    al,0xe0
  42bd20:	je     0x42bd60
  42bd22:	mov    eax,edx
  42bd24:	and    eax,0xfffffff8
  42bd27:	cmp    al,0xf0
  42bd29:	je     0x42bd70
  42bd2b:	mov    eax,edx
  42bd2d:	and    eax,0xfffffffc
  42bd30:	cmp    al,0xf8
  42bd32:	je     0x42bd80
  42bd34:	and    edx,0xfffffffe
  42bd37:	cmp    dl,0xfc
  42bd3a:	je     0x42bd90
  42bd3c:	call   QWORD PTR [rip+0x5ab9e]        # 0x4868e0
  42bd42:	mov    DWORD PTR [rax],0x2a
  42bd48:	mov    eax,0xffffffff
  42bd4d:	jmp    0x42bd09
  42bd4f:	nop
  42bd50:	mov    eax,0x2
  42bd55:	jmp    0x42bd00
  42bd57:	nop    WORD PTR [rax+rax*1+0x0]
  42bd60:	mov    eax,0x3
  42bd65:	jmp    0x42bd00
  42bd67:	nop    WORD PTR [rax+rax*1+0x0]
  42bd70:	mov    eax,0x4
  42bd75:	jmp    0x42bd00
  42bd77:	nop    WORD PTR [rax+rax*1+0x0]
  42bd80:	mov    eax,0x5
  42bd85:	jmp    0x42bd00
  42bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  42bd90:	mov    eax,0x6
  42bd95:	jmp    0x42bd00
  42bd9a:	nop    WORD PTR [rax+rax*1+0x0]
  42bda0:	call   QWORD PTR [rip+0x5ab3a]        # 0x4868e0
  42bda6:	mov    DWORD PTR [rax],0x16
  42bdac:	mov    eax,0xffffffff
  42bdb1:	jmp    0x42bd09
  42bdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bdc0:	sub    rsp,0x28
  42bdc4:	cmp    DWORD PTR [rsp+0x50],0x3
  42bdc9:	jle    0x42be62
  42bdcf:	movzx  eax,WORD PTR [rdx]
  42bdd2:	lea    r8d,[rax+0x2800]
  42bdd9:	cmp    r8w,0x3ff
  42bddf:	jbe    0x42be00
  42bde1:	mov    ecx,DWORD PTR [rcx]
  42bde3:	movzx  edx,ax
  42bde6:	cmp    ecx,0x2ee0
  42bdec:	je     0x42be23
  42bdee:	cmp    ecx,0x2ee1
  42bdf4:	mov    eax,0x4
  42bdf9:	je     0x42be45
  42bdfb:	add    rsp,0x28
  42bdff:	ret    
  42be00:	movzx  edx,WORD PTR [rdx+0x2]
  42be04:	mov    ecx,DWORD PTR [rcx]
  42be06:	and    eax,0x3ff
  42be0b:	shl    eax,0xa
  42be0e:	and    edx,0x3ff
  42be14:	cmp    ecx,0x2ee0
  42be1a:	lea    edx,[rax+rdx*1+0x10000]
  42be21:	jne    0x42bdee
  42be23:	movzx  eax,dh
  42be26:	mov    BYTE PTR [r9],dl
  42be29:	mov    BYTE PTR [r9+0x3],0x0
  42be2e:	mov    BYTE PTR [r9+0x1],al
  42be32:	mov    eax,edx
  42be34:	shr    eax,0x10
  42be37:	mov    BYTE PTR [r9+0x2],al
  42be3b:	mov    eax,0x4
  42be40:	add    rsp,0x28
  42be44:	ret    
  42be45:	mov    ecx,edx
  42be47:	mov    BYTE PTR [r9],0x0
  42be4b:	mov    BYTE PTR [r9+0x3],dl
  42be4f:	shr    ecx,0x10
  42be52:	mov    BYTE PTR [r9+0x1],cl
  42be56:	movzx  ecx,dh
  42be59:	mov    BYTE PTR [r9+0x2],cl
  42be5d:	add    rsp,0x28
  42be61:	ret    
  42be62:	call   QWORD PTR [rip+0x5aa78]        # 0x4868e0
  42be68:	mov    DWORD PTR [rax],0x7
  42be6e:	mov    eax,0xffffffff
  42be73:	jmp    0x42bdfb
  42be75:	nop
  42be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be80:	sub    rsp,0x28
  42be84:	cmp    DWORD PTR [rsp+0x50],0x1
  42be89:	jle    0x42bf40
  42be8f:	mov    eax,DWORD PTR [rcx]
  42be91:	cmp    eax,0x4b0
  42be96:	je     0x42bef0
  42be98:	cmp    eax,0x4b1
  42be9d:	je     0x42bf03
  42be9f:	movzx  eax,WORD PTR [rdx]
  42bea2:	lea    r8d,[rax+0x2800]
  42bea9:	mov    eax,0x2
  42beae:	cmp    r8w,0x3ff
  42beb4:	jbe    0x42bec0
  42beb6:	add    rsp,0x28
  42beba:	ret    
  42bebb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bec0:	cmp    DWORD PTR [rsp+0x50],0x3
  42bec5:	jle    0x42bf40
  42bec7:	mov    ecx,DWORD PTR [rcx]
  42bec9:	cmp    ecx,0x4b0
  42becf:	je     0x42bf20
  42bed1:	cmp    ecx,0x4b1
  42bed7:	mov    eax,0x4
  42bedc:	jne    0x42beb6
  42bede:	movzx  ecx,BYTE PTR [rdx+0x3]
  42bee2:	mov    BYTE PTR [r9+0x2],cl
  42bee6:	movzx  edx,WORD PTR [rdx+0x2]
  42beea:	mov    BYTE PTR [r9+0x3],dl
  42beee:	jmp    0x42beb6
  42bef0:	movzx  eax,WORD PTR [rdx]
  42bef3:	mov    BYTE PTR [r9],al
  42bef6:	movzx  eax,WORD PTR [rdx]
  42bef9:	shr    ax,0x8
  42befd:	mov    BYTE PTR [r9+0x1],al
  42bf01:	jmp    0x42be9f
  42bf03:	movzx  eax,WORD PTR [rdx]
  42bf06:	shr    ax,0x8
  42bf0a:	mov    BYTE PTR [r9],al
  42bf0d:	movzx  eax,WORD PTR [rdx]
  42bf10:	mov    BYTE PTR [r9+0x1],al
  42bf14:	jmp    0x42be9f
  42bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf20:	movzx  eax,WORD PTR [rdx+0x2]
  42bf24:	mov    BYTE PTR [r9+0x2],al
  42bf28:	movzx  eax,BYTE PTR [rdx+0x3]
  42bf2c:	mov    BYTE PTR [r9+0x3],al
  42bf30:	mov    eax,0x4
  42bf35:	add    rsp,0x28
  42bf39:	ret    
  42bf3a:	nop    WORD PTR [rax+rax*1+0x0]
  42bf40:	call   QWORD PTR [rip+0x5a99a]        # 0x4868e0
  42bf46:	mov    DWORD PTR [rax],0x7
  42bf4c:	mov    eax,0xffffffff
  42bf51:	jmp    0x42beb6
  42bf56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf60:	push   rbx
  42bf61:	sub    rsp,0x20
  42bf65:	movzx  edx,BYTE PTR [rdx]
  42bf68:	mov    ecx,DWORD PTR [rcx]
  42bf6a:	mov    ebx,r8d
  42bf6d:	call   QWORD PTR [rip+0x5a7fd]        # 0x486770
  42bf73:	cmp    eax,0x1
  42bf76:	sbb    eax,eax
  42bf78:	add    eax,0x2
  42bf7b:	cmp    eax,ebx
  42bf7d:	jg     0x42bf85
  42bf7f:	add    rsp,0x20
  42bf83:	pop    rbx
  42bf84:	ret    
  42bf85:	call   QWORD PTR [rip+0x5a955]        # 0x4868e0
  42bf8b:	mov    DWORD PTR [rax],0x16
  42bf91:	mov    eax,0xffffffff
  42bf96:	jmp    0x42bf7f
  42bf98:	nop    DWORD PTR [rax+rax*1+0x0]
  42bfa0:	push   rsi
  42bfa1:	push   rbx
  42bfa2:	sub    rsp,0x28
  42bfa6:	mov    ebx,DWORD PTR [rcx+0x28]
  42bfa9:	xor    esi,esi
  42bfab:	test   ebx,ebx
  42bfad:	je     0x42bfe6
  42bfaf:	test   bl,bl
  42bfb1:	mov    r10d,DWORD PTR [rip+0xe810]        # 0x43a7c8
  42bfb8:	movzx  ebx,bh
  42bfbb:	setne  r9b
  42bfbf:	movzx  eax,r9b
  42bfc3:	add    r10d,eax
  42bfc6:	test   ebx,ebx
  42bfc8:	cmovne eax,r10d
  42bfcc:	cmp    eax,r8d
  42bfcf:	jg     0x42c020
  42bfd1:	xor    esi,esi
  42bfd3:	test   r9b,r9b
  42bfd6:	je     0x42bfe2
  42bfd8:	mov    BYTE PTR [rdx],0xf
  42bfdb:	movzx  ebx,BYTE PTR [rcx+0x29]
  42bfdf:	mov    sil,0x1
  42bfe2:	test   ebx,ebx
  42bfe4:	jne    0x42bff0
  42bfe6:	mov    eax,esi
  42bfe8:	add    rsp,0x28
  42bfec:	pop    rbx
  42bfed:	pop    rsi
  42bfee:	ret    
  42bfef:	nop
  42bff0:	movsxd rcx,esi
  42bff3:	movsxd r8,DWORD PTR [rip+0xe7ce]        # 0x43a7c8
  42bffa:	add    rcx,rdx
  42bffd:	mov    rdx,QWORD PTR [rip+0xe7bc]        # 0x43a7c0
  42c004:	call   0x4387f0
  42c009:	add    esi,DWORD PTR [rip+0xe7b9]        # 0x43a7c8
  42c00f:	mov    eax,esi
  42c011:	add    rsp,0x28
  42c015:	pop    rbx
  42c016:	pop    rsi
  42c017:	ret    
  42c018:	nop    DWORD PTR [rax+rax*1+0x0]
  42c020:	call   QWORD PTR [rip+0x5a8ba]        # 0x4868e0
  42c026:	mov    esi,0xffffffff
  42c02b:	mov    DWORD PTR [rax],0x7
  42c031:	jmp    0x42bfe6
  42c033:	nop    DWORD PTR [rax]
  42c036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c040:	push   r12
  42c042:	push   rbp
  42c043:	push   rdi
  42c044:	push   rsi
  42c045:	push   rbx
  42c046:	sub    rsp,0x30
  42c04a:	mov    rbp,QWORD PTR [rsp+0x80]
  42c052:	mov    rsi,rcx
  42c055:	mov    rdi,rdx
  42c058:	mov    r12,r9
  42c05b:	call   QWORD PTR [rsi+0x18]
  42c05e:	cmp    eax,0xffffffff
  42c061:	mov    ebx,eax
  42c063:	je     0x42c0a5
  42c065:	mov    eax,DWORD PTR [rsi]
  42c067:	cmp    eax,0x4e9f
  42c06c:	je     0x42c0b2
  42c06e:	lea    edx,[rax-0xc42c]
  42c074:	mov    r8d,DWORD PTR [rbp+0x0]
  42c078:	mov    ecx,eax
  42c07a:	cmp    edx,0x2
  42c07d:	jbe    0x42c086
  42c07f:	cmp    eax,0xc431
  42c084:	jne    0x42c0f0
  42c086:	xor    edx,edx
  42c088:	mov    DWORD PTR [rsp+0x28],r8d
  42c08d:	mov    QWORD PTR [rsp+0x20],r12
  42c092:	mov    r9d,ebx
  42c095:	mov    r8,rdi
  42c098:	call   QWORD PTR [rip+0x5a70a]        # 0x4867a8
  42c09e:	test   eax,eax
  42c0a0:	mov    DWORD PTR [rbp+0x0],eax
  42c0a3:	je     0x42c100
  42c0a5:	mov    eax,ebx
  42c0a7:	add    rsp,0x30
  42c0ab:	pop    rbx
  42c0ac:	pop    rsi
  42c0ad:	pop    rdi
  42c0ae:	pop    rbp
  42c0af:	pop    r12
  42c0b1:	ret    
  42c0b2:	cmp    BYTE PTR [rdi],0x0
  42c0b5:	js     0x42c100
  42c0b7:	mov    r8d,DWORD PTR [rbp+0x0]
  42c0bb:	mov    ecx,0x4e9f
  42c0c0:	cmp    eax,0xcec8
  42c0c5:	je     0x42c086
  42c0c7:	cmp    eax,0xd698
  42c0cc:	je     0x42c086
  42c0ce:	lea    r9d,[rcx-0xdeaa]
  42c0d5:	xor    edx,edx
  42c0d7:	cmp    r9d,0x9
  42c0db:	jbe    0x42c088
  42c0dd:	cmp    eax,0x2a
  42c0e0:	je     0x42c086
  42c0e2:	cmp    eax,0xfde8
  42c0e7:	je     0x42c086
  42c0e9:	mov    dl,0x8
  42c0eb:	jmp    0x42c088
  42c0ed:	nop    DWORD PTR [rax]
  42c0f0:	lea    edx,[rax-0xc433]
  42c0f6:	and    edx,0xfffffffd
  42c0f9:	je     0x42c086
  42c0fb:	jmp    0x42c0c0
  42c0fd:	nop    DWORD PTR [rax]
  42c100:	call   QWORD PTR [rip+0x5a7da]        # 0x4868e0
  42c106:	mov    DWORD PTR [rax],0x2a
  42c10c:	mov    eax,0xffffffff
  42c111:	jmp    0x42c0a7
  42c113:	nop    DWORD PTR [rax]
  42c116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c120:	push   rsi
  42c121:	push   rbx
  42c122:	sub    rsp,0x198
  42c129:	mov    edx,0x104
  42c12e:	lea    rbx,[rsp+0x20]
  42c133:	mov    rcx,rbx
  42c136:	call   QWORD PTR [rip+0x5a5ec]        # 0x486728
  42c13c:	sub    eax,0x1
  42c13f:	cmp    eax,0x102
  42c144:	jbe    0x42c152
  42c146:	xor    eax,eax
  42c148:	add    rsp,0x198
  42c14f:	pop    rbx
  42c150:	pop    rsi
  42c151:	ret    
  42c152:	cdqe   
  42c154:	movzx  eax,BYTE PTR [rsp+rax*1+0x20]
  42c159:	cmp    al,0x2f
  42c15b:	je     0x42c165
  42c15d:	cmp    al,0x5c
  42c15f:	jne    0x42c250
  42c165:	mov    rdx,rbx
  42c168:	mov    ecx,DWORD PTR [rdx]
  42c16a:	add    rdx,0x4
  42c16e:	lea    eax,[rcx-0x1010101]
  42c174:	not    ecx
  42c176:	and    eax,ecx
  42c178:	and    eax,0x80808080
  42c17d:	je     0x42c168
  42c17f:	mov    ecx,eax
  42c181:	shr    ecx,0x10
  42c184:	test   eax,0x8080
  42c189:	cmove  eax,ecx
  42c18c:	lea    rcx,[rdx+0x2]
  42c190:	cmove  rdx,rcx
  42c194:	add    al,al
  42c196:	movabs rax,0x6c642e676e616c6d
  42c1a0:	sbb    rdx,0x3
  42c1a4:	mov    rcx,rbx
  42c1a7:	mov    QWORD PTR [rdx],rax
  42c1aa:	mov    eax,0x6c
  42c1af:	mov    WORD PTR [rdx+0x8],ax
  42c1b3:	call   QWORD PTR [rip+0x5a5d7]        # 0x486790
  42c1b9:	test   rax,rax
  42c1bc:	mov    rsi,rax
  42c1bf:	je     0x42c146
  42c1c1:	mov    rbx,QWORD PTR [rip+0x5a548]        # 0x486710
  42c1c8:	lea    rdx,[rip+0x4c01e]        # 0x4781ed
  42c1cf:	mov    rcx,rax
  42c1d2:	call   rbx
  42c1d4:	mov    rcx,rsi
  42c1d7:	lea    rdx,[rip+0x4c021]        # 0x4781ff
  42c1de:	mov    QWORD PTR [rip+0x584e3],rax        # 0x4846c8
  42c1e5:	call   rbx
  42c1e7:	mov    rcx,rsi
  42c1ea:	lea    rdx,[rip+0x4c02c]        # 0x47821d
  42c1f1:	mov    QWORD PTR [rip+0x584c8],rax        # 0x4846c0
  42c1f8:	call   rbx
  42c1fa:	mov    rcx,rsi
  42c1fd:	lea    rdx,[rip+0x4c037]        # 0x47823b
  42c204:	mov    QWORD PTR [rip+0x584ad],rax        # 0x4846b8
  42c20b:	call   rbx
  42c20d:	mov    rcx,rsi
  42c210:	lea    rdx,[rip+0x4c041]        # 0x478258
  42c217:	mov    QWORD PTR [rip+0x58492],rax        # 0x4846b0
  42c21e:	call   rbx
  42c220:	lea    rdx,[rip+0x4c040]        # 0x478267
  42c227:	mov    rcx,rsi
  42c22a:	mov    QWORD PTR [rip+0x58477],rax        # 0x4846a8
  42c231:	call   rbx
  42c233:	mov    QWORD PTR [rip+0x58466],rax        # 0x4846a0
  42c23a:	mov    eax,0x1
  42c23f:	add    rsp,0x198
  42c246:	pop    rbx
  42c247:	pop    rsi
  42c248:	ret    
  42c249:	nop    DWORD PTR [rax+0x0]
  42c250:	mov    rdx,rbx
  42c253:	mov    ecx,DWORD PTR [rdx]
  42c255:	add    rdx,0x4
  42c259:	lea    eax,[rcx-0x1010101]
  42c25f:	not    ecx
  42c261:	and    eax,ecx
  42c263:	and    eax,0x80808080
  42c268:	je     0x42c253
  42c26a:	mov    ecx,eax
  42c26c:	shr    ecx,0x10
  42c26f:	test   eax,0x8080
  42c274:	cmove  eax,ecx
  42c277:	lea    rcx,[rdx+0x2]
  42c27b:	cmove  rdx,rcx
  42c27f:	add    al,al
  42c281:	mov    ecx,0x5c
  42c286:	sbb    rdx,0x3
  42c28a:	mov    WORD PTR [rdx],cx
  42c28d:	jmp    0x42c165
  42c292:	nop    DWORD PTR [rax+0x0]
  42c296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2a0:	push   r12
  42c2a2:	push   rbp
  42c2a3:	push   rdi
  42c2a4:	push   rsi
  42c2a5:	push   rbx
  42c2a6:	sub    rsp,0x20
  42c2aa:	mov    rax,QWORD PTR [rip+0x4f93f]        # 0x47bbf0
  42c2b1:	mov    rbx,rcx
  42c2b4:	mov    rdi,QWORD PTR [rax]
  42c2b7:	mov    rax,QWORD PTR [rip+0x4f882]        # 0x47bb40
  42c2be:	mov    rbp,QWORD PTR [rax]
  42c2c1:	mov    rcx,rbx
  42c2c4:	call   0x4219f0
  42c2c9:	mov    esi,eax
  42c2cb:	movzx  eax,BYTE PTR [rbx]
  42c2ce:	cmp    esi,0x7f
  42c2d1:	movsx  rax,BYTE PTR [rdi+rax*1]
  42c2d6:	ja     0x42c318
  42c2d8:	mov    edx,esi
  42c2da:	movzx  r12d,WORD PTR [rbp+rdx*2+0x0]
  42c2e0:	test   r12b,0x1
  42c2e4:	je     0x42c318
  42c2e6:	add    rbx,rax
  42c2e9:	nop    DWORD PTR [rax+0x0]
  42c2f0:	mov    rcx,rbx
  42c2f3:	call   0x4219f0
  42c2f8:	movzx  ecx,BYTE PTR [rbx]
  42c2fb:	mov    edx,eax
  42c2fd:	movsx  rcx,BYTE PTR [rdi+rcx*1]
  42c302:	add    rbx,rcx
  42c305:	cmp    eax,0x7f
  42c308:	jbe    0x42c340
  42c30a:	cmp    esi,0x2d
  42c30d:	je     0x42c318
  42c30f:	test   edx,edx
  42c311:	je     0x42c32a
  42c313:	cmp    edx,0x2e
  42c316:	je     0x42c325
  42c318:	xor    eax,eax
  42c31a:	add    rsp,0x20
  42c31e:	pop    rbx
  42c31f:	pop    rsi
  42c320:	pop    rdi
  42c321:	pop    rbp
  42c322:	pop    r12
  42c324:	ret    
  42c325:	cmp    BYTE PTR [rbx],0x0
  42c328:	jne    0x42c2c1
  42c32a:	mov    eax,r12d
  42c32d:	shr    ax,1
  42c330:	and    eax,0x1
  42c333:	add    rsp,0x20
  42c337:	pop    rbx
  42c338:	pop    rsi
  42c339:	pop    rdi
  42c33a:	pop    rbp
  42c33b:	pop    r12
  42c33d:	ret    
  42c33e:	xchg   ax,ax
  42c340:	mov    eax,eax
  42c342:	test   BYTE PTR [rbp+rax*2+0x0],0x1
  42c347:	jne    0x42c34e
  42c349:	cmp    edx,0x2d
  42c34c:	jne    0x42c30a
  42c34e:	mov    esi,edx
  42c350:	jmp    0x42c2f0
  42c352:	nop    DWORD PTR [rax+0x0]
  42c356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c360:	push   r12
  42c362:	push   rbp
  42c363:	push   rdi
  42c364:	push   rsi
  42c365:	push   rbx
  42c366:	sub    rsp,0x20
  42c36a:	mov    r12,QWORD PTR [rsp+0x70]
  42c36f:	mov    rdi,r8
  42c372:	xor    r8d,r8d
  42c375:	mov    rsi,rcx
  42c378:	mov    rbx,rdx
  42c37b:	mov    rbp,r9
  42c37e:	call   0x422ee0
  42c383:	test   eax,eax
  42c385:	je     0x42c3f0
  42c387:	test   rbx,rbx
  42c38a:	js     0x42c3e0
  42c38c:	test   rbx,rbx
  42c38f:	mov    rdx,rbx
  42c392:	je     0x42c3b1
  42c394:	xor    r10d,r10d
  42c397:	cmp    BYTE PTR [rsi],0x0
  42c39a:	jne    0x42c3a8
  42c39c:	jmp    0x42c439
  42c3a1:	cmp    BYTE PTR [rsi+r10*1],0x0
  42c3a6:	je     0x42c3d4
  42c3a8:	add    r10,0x1
  42c3ac:	cmp    r10,rbx
  42c3af:	jne    0x42c3a1
  42c3b1:	test   rbp,rbp
  42c3b4:	je     0x42c3ba
  42c3b6:	mov    QWORD PTR [rbp+0x0],rdx
  42c3ba:	test   rdi,rdi
  42c3bd:	je     0x42c3c2
  42c3bf:	mov    QWORD PTR [rdi],rdx
  42c3c2:	mov    rcx,rsi
  42c3c5:	add    rsp,0x20
  42c3c9:	pop    rbx
  42c3ca:	pop    rsi
  42c3cb:	pop    rdi
  42c3cc:	pop    rbp
  42c3cd:	pop    r12
  42c3cf:	jmp    0x418340
  42c3d4:	mov    rdx,r10
  42c3d7:	jmp    0x42c3b1
  42c3d9:	nop    DWORD PTR [rax+0x0]
  42c3e0:	mov    rcx,rsi
  42c3e3:	call   0x438788
  42c3e8:	mov    rdx,rax
  42c3eb:	jmp    0x42c3b1
  42c3ed:	nop    DWORD PTR [rax]
  42c3f0:	test   rbp,rbp
  42c3f3:	je     0x42c3fd
  42c3f5:	mov    QWORD PTR [rbp+0x0],0x0
  42c3fd:	test   rdi,rdi
  42c400:	je     0x42c409
  42c402:	mov    QWORD PTR [rdi],0x0
  42c409:	lea    rcx,[rip+0x4be66]        # 0x478276
  42c410:	call   0x42fc00
  42c415:	lea    r9,[rip+0x4be6c]        # 0x478288
  42c41c:	mov    edx,eax
  42c41e:	mov    r8d,0x1
  42c424:	mov    rcx,r12
  42c427:	call   0x430690
  42c42c:	xor    eax,eax
  42c42e:	add    rsp,0x20
  42c432:	pop    rbx
  42c433:	pop    rsi
  42c434:	pop    rdi
  42c435:	pop    rbp
  42c436:	pop    r12
  42c438:	ret    
  42c439:	xor    edx,edx
  42c43b:	jmp    0x42c3b1
  42c440:	push   r15
  42c442:	push   r14
  42c444:	push   r13
  42c446:	push   r12
  42c448:	push   rbp
  42c449:	push   rdi
  42c44a:	push   rsi
  42c44b:	push   rbx
  42c44c:	sub    rsp,0x1d8
  42c453:	mov    r8d,0x80
  42c459:	xor    r13d,r13d
  42c45c:	mov    r15d,0x2
  42c462:	lea    rbp,[rsp+0x30]
  42c467:	mov    r12,rcx
  42c46a:	mov    rcx,rbp
  42c46d:	call   0x438778
  42c472:	mov    r14,QWORD PTR [rip+0x5a4b7]        # 0x486930
  42c479:	mov    BYTE PTR [rsp+0xaf],0x0
  42c481:	mov    DWORD PTR [rsp+0x2c],0x1
  42c489:	nop    DWORD PTR [rax+0x0]
  42c490:	mov    rbx,rbp
  42c493:	mov    edx,DWORD PTR [rbx]
  42c495:	add    rbx,0x4
  42c499:	lea    eax,[rdx-0x1010101]
  42c49f:	not    edx
  42c4a1:	and    eax,edx
  42c4a3:	and    eax,0x80808080
  42c4a8:	je     0x42c493
  42c4aa:	mov    edx,eax
  42c4ac:	shr    edx,0x10
  42c4af:	test   eax,0x8080
  42c4b4:	cmove  eax,edx
  42c4b7:	lea    rdx,[rbx+0x2]
  42c4bb:	cmove  rbx,rdx
  42c4bf:	add    al,al
  42c4c1:	sbb    rbx,0x3
  42c4c5:	sub    rbx,0x1
  42c4c9:	cmp    rbx,rbp
  42c4cc:	jb     0x42c510
  42c4ce:	cmp    BYTE PTR [rbx],0x2f
  42c4d1:	jne    0x42c4c5
  42c4d3:	lea    rdi,[rip+0x4bdf0]        # 0x4782ca
  42c4da:	mov    rsi,rbx
  42c4dd:	mov    rcx,r15
  42c4e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c4e2:	jne    0x42c4c5
  42c4e4:	lea    rsi,[rbx+0x2]
  42c4e8:	lea    rdx,[rip+0x4bdde]        # 0x4782cd
  42c4ef:	mov    rcx,rsi
  42c4f2:	call   r14
  42c4f5:	test   eax,eax
  42c4f7:	jne    0x42c5da
  42c4fd:	mov    DWORD PTR [rsp+0x2c],0x0
  42c505:	mov    BYTE PTR [rbx],0x0
  42c508:	jmp    0x42c490
  42c50a:	nop    WORD PTR [rax+rax*1+0x0]
  42c510:	cmp    BYTE PTR [rsp+0x30],0x0
  42c515:	je     0x42c612
  42c51b:	lea    rdi,[rip+0x4bdb4]        # 0x4782d6
  42c522:	mov    ecx,0x5
  42c527:	mov    rsi,rbp
  42c52a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c52c:	je     0x42c612
  42c532:	lea    rdi,[rip+0x4bda2]        # 0x4782db
  42c539:	mov    ecx,0x8
  42c53e:	mov    rsi,rbp
  42c541:	mov    ebx,0x4b0
  42c546:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c548:	seta   dl
  42c54b:	setb   al
  42c54e:	cmp    dl,al
  42c550:	jne    0x42c757
  42c556:	lea    rdx,[rip+0x4bd8c]        # 0x4782e9
  42c55d:	mov    rcx,rbp
  42c560:	mov    rsi,QWORD PTR [rip+0x5a3c9]        # 0x486930
  42c567:	call   rsi
  42c569:	test   eax,eax
  42c56b:	jne    0x42c885
  42c571:	mov    r10d,DWORD PTR [rsp+0x2c]
  42c576:	or     r13d,0x1
  42c57a:	xor    edx,edx
  42c57c:	xor    eax,eax
  42c57e:	xor    r9d,r9d
  42c581:	lea    rcx,[rip+0xfffffffffffff8f8]        # 0x42be80
  42c588:	lea    r8,[rip+0xffffffffffffe9b1]        # 0x42af40
  42c58f:	test   r10d,r10d
  42c592:	jne    0x42c687
  42c598:	mov    QWORD PTR [r12+0x18],rax
  42c59d:	mov    rax,r12
  42c5a0:	mov    DWORD PTR [r12],ebx
  42c5a4:	mov    DWORD PTR [r12+0x4],r13d
  42c5a9:	mov    QWORD PTR [r12+0x8],r8
  42c5ae:	mov    QWORD PTR [r12+0x10],rcx
  42c5b3:	mov    QWORD PTR [r12+0x20],rdx
  42c5b8:	mov    DWORD PTR [r12+0x28],0x0
  42c5c1:	mov    QWORD PTR [r12+0x30],r9
  42c5c6:	add    rsp,0x1d8
  42c5cd:	pop    rbx
  42c5ce:	pop    rsi
  42c5cf:	pop    rdi
  42c5d0:	pop    rbp
  42c5d1:	pop    r12
  42c5d3:	pop    r13
  42c5d5:	pop    r14
  42c5d7:	pop    r15
  42c5d9:	ret    
  42c5da:	lea    rdx,[rip+0x4bcd9]        # 0x4782ba
  42c5e1:	mov    rcx,rsi
  42c5e4:	call   r14
  42c5e7:	test   eax,eax
  42c5e9:	jne    0x42c5f4
  42c5eb:	or     r13d,0x2
  42c5ef:	jmp    0x42c505
  42c5f4:	lea    rdx,[rip+0x4bcc8]        # 0x4782c3
  42c5fb:	mov    rcx,rsi
  42c5fe:	call   r14
  42c601:	mov    edx,r13d
  42c604:	or     edx,0x4
  42c607:	test   eax,eax
  42c609:	cmove  r13d,edx
  42c60d:	jmp    0x42c505
  42c612:	call   QWORD PTR [rip+0x5a070]        # 0x486688
  42c618:	mov    ebx,eax
  42c61a:	lea    eax,[rbx-0x4b0]
  42c620:	mov    esi,ebx
  42c622:	cmp    eax,0x1
  42c625:	jbe    0x42c556
  42c62b:	lea    eax,[rbx-0x2ee0]
  42c631:	cmp    eax,0x1
  42c634:	jbe    0x42c853
  42c63a:	cmp    ebx,0xfde9
  42c640:	je     0x42c74e
  42c646:	lea    eax,[rbx-0xc42c]
  42c64c:	cmp    eax,0x2
  42c64f:	ja     0x42c6be
  42c651:	cmp    QWORD PTR [rip+0x5806f],0x0        # 0x4846c8
  42c659:	je     0x42c712
  42c65f:	lea    rdx,[rip+0xfffffffffffff93a]        # 0x42bfa0
  42c666:	lea    rcx,[rip+0xffffffffffffedf3]        # 0x42b460
  42c66d:	lea    r8,[rip+0xffffffffffffeb0c]        # 0x42b180
  42c674:	xor    eax,eax
  42c676:	mov    r10d,DWORD PTR [rsp+0x2c]
  42c67b:	xor    r9d,r9d
  42c67e:	test   r10d,r10d
  42c681:	je     0x42c598
  42c687:	cmp    ebx,0xc42e
  42c68d:	jg     0x42c842
  42c693:	cmp    ebx,0xc42c
  42c699:	jge    0x42c706
  42c69b:	cmp    ebx,0x3a4
  42c6a1:	je     0x42c706
  42c6a3:	cmp    ebx,0x51c4
  42c6a9:	lea    r9,[rip+0xe1d0]        # 0x43a880
  42c6b0:	je     0x42c598
  42c6b6:	xor    r9d,r9d
  42c6b9:	jmp    0x42c598
  42c6be:	cmp    ebx,0xcadc
  42c6c4:	jne    0x42c71f
  42c6c6:	cmp    QWORD PTR [rip+0x57ffa],0x0        # 0x4846c8
  42c6ce:	je     0x42c933
  42c6d4:	mov    r9d,DWORD PTR [rsp+0x2c]
  42c6d9:	xor    edx,edx
  42c6db:	lea    r8,[rip+0xfffffffffffff57e]        # 0x42bc60
  42c6e2:	lea    rcx,[rip+0xffffffffffffe9c7]        # 0x42b0b0
  42c6e9:	lea    rax,[rip+0xfffffffffffff4c0]        # 0x42bbb0
  42c6f0:	test   r9d,r9d
  42c6f3:	je     0x42c6b6
  42c6f5:	mov    ebx,0xcadc
  42c6fa:	lea    r9,[rip+0xe1ff]        # 0x43a900
  42c701:	jmp    0x42c598
  42c706:	lea    r9,[rip+0xe1f3]        # 0x43a900
  42c70d:	jmp    0x42c598
  42c712:	call   0x42c120
  42c717:	test   eax,eax
  42c719:	jne    0x42c65f
  42c71f:	mov    ecx,esi
  42c721:	call   QWORD PTR [rip+0x5a059]        # 0x486780
  42c727:	test   eax,eax
  42c729:	jne    0x42c7ee
  42c72f:	xor    eax,eax
  42c731:	mov    ebx,0xffffffff
  42c736:	lea    r8,[rip+0xfffffffffffff903]        # 0x42c040
  42c73d:	lea    rcx,[rip+0xffffffffffffef7c]        # 0x42b6c0
  42c744:	xor    edx,edx
  42c746:	xor    r9d,r9d
  42c749:	jmp    0x42c598
  42c74e:	lea    rax,[rip+0xfffffffffffff59b]        # 0x42bcf0
  42c755:	jmp    0x42c736
  42c757:	mov    r8d,0x2
  42c75d:	lea    rdx,[rip+0x4bb7f]        # 0x4782e3
  42c764:	mov    rcx,rbp
  42c767:	mov    rbx,QWORD PTR [rip+0x5a1ca]        # 0x486938
  42c76e:	call   rbx
  42c770:	test   eax,eax
  42c772:	je     0x42c97a
  42c778:	movzx  eax,BYTE PTR [rsp+0x30]
  42c77d:	sub    eax,0x30
  42c780:	cmp    al,0x9
  42c782:	jbe    0x42c96b
  42c788:	mov    r8d,0x2
  42c78e:	lea    rdx,[rip+0x4bb51]        # 0x4782e6
  42c795:	mov    rcx,rbp
  42c798:	call   rbx
  42c79a:	test   eax,eax
  42c79c:	je     0x42c97a
  42c7a2:	lea    rsi,[rip+0x4cbaf]        # 0x479358
  42c7a9:	xor    ebx,ebx
  42c7ab:	lea    rdx,[rip+0x4bb00]        # 0x4782b2
  42c7b2:	mov    rdi,QWORD PTR [rip+0x5a177]        # 0x486930
  42c7b9:	jmp    0x42c7cf
  42c7bb:	add    rsi,0x10
  42c7bf:	mov    rdx,QWORD PTR [rsi-0x10]
  42c7c3:	add    ebx,0x1
  42c7c6:	test   rdx,rdx
  42c7c9:	je     0x42c95f
  42c7cf:	mov    rcx,rbp
  42c7d2:	call   rdi
  42c7d4:	test   eax,eax
  42c7d6:	jne    0x42c7bb
  42c7d8:	movsxd rax,ebx
  42c7db:	lea    rdx,[rip+0x4cb5e]        # 0x479340
  42c7e2:	shl    rax,0x4
  42c7e6:	mov    ebx,DWORD PTR [rdx+rax*1]
  42c7e9:	jmp    0x42c61a
  42c7ee:	xor    edx,edx
  42c7f0:	lea    r8,[rsp+0xb0]
  42c7f8:	mov    ecx,esi
  42c7fa:	call   QWORD PTR [rip+0x59e90]        # 0x486690
  42c800:	test   eax,eax
  42c802:	je     0x42c72f
  42c808:	mov    eax,DWORD PTR [rsp+0xb0]
  42c80f:	xor    edx,edx
  42c811:	cmp    eax,0x1
  42c814:	je     0x42c945
  42c81a:	cmp    eax,0x2
  42c81d:	lea    rcx,[rip+0xfffffffffffff30c]        # 0x42bb30
  42c824:	lea    rax,[rip+0xfffffffffffff735]        # 0x42bf60
  42c82b:	lea    r8,[rip+0xfffffffffffff80e]        # 0x42c040
  42c832:	cmovne rax,rcx
  42c836:	lea    rcx,[rip+0xffffffffffffee83]        # 0x42b6c0
  42c83d:	jmp    0x42c676
  42c842:	cmp    ebx,0xcadc
  42c848:	je     0x42c6f5
  42c84e:	jmp    0x42c6b6
  42c853:	lea    rdx,[rip+0x4baa7]        # 0x478301
  42c85a:	mov    rcx,rbp
  42c85d:	mov    rsi,QWORD PTR [rip+0x5a0cc]        # 0x486930
  42c864:	call   rsi
  42c866:	test   eax,eax
  42c868:	jne    0x42c8e0
  42c86a:	or     r13d,0x1
  42c86e:	xor    edx,edx
  42c870:	xor    eax,eax
  42c872:	lea    rcx,[rip+0xfffffffffffff547]        # 0x42bdc0
  42c879:	lea    r8,[rip+0x110]        # 0x42c990
  42c880:	jmp    0x42c676
  42c885:	lea    rdx,[rip+0x4ba64]        # 0x4782f0
  42c88c:	mov    rcx,rbp
  42c88f:	call   rsi
  42c891:	test   eax,eax
  42c893:	je     0x42c571
  42c899:	lea    rdx,[rip+0x4ba56]        # 0x4782f6
  42c8a0:	mov    rcx,rbp
  42c8a3:	call   rsi
  42c8a5:	test   eax,eax
  42c8a7:	je     0x42c571
  42c8ad:	lea    rdx,[rip+0x4ba48]        # 0x4782fc
  42c8b4:	mov    rcx,rbp
  42c8b7:	call   rsi
  42c8b9:	test   eax,eax
  42c8bb:	je     0x42c571
  42c8c1:	xor    edx,edx
  42c8c3:	xor    eax,eax
  42c8c5:	lea    rcx,[rip+0xfffffffffffff5b4]        # 0x42be80
  42c8cc:	lea    r8,[rip+0xffffffffffffe66d]        # 0x42af40
  42c8d3:	jmp    0x42c676
  42c8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c8e0:	lea    rdx,[rip+0x4ba21]        # 0x478308
  42c8e7:	mov    rcx,rbp
  42c8ea:	call   rsi
  42c8ec:	test   eax,eax
  42c8ee:	je     0x42c86a
  42c8f4:	lea    rdx,[rip+0x4ba13]        # 0x47830e
  42c8fb:	mov    rcx,rbp
  42c8fe:	call   rsi
  42c900:	test   eax,eax
  42c902:	je     0x42c86a
  42c908:	lea    rdx,[rip+0x4ba05]        # 0x478314
  42c90f:	mov    rcx,rbp
  42c912:	call   rsi
  42c914:	test   eax,eax
  42c916:	je     0x42c86a
  42c91c:	xor    edx,edx
  42c91e:	xor    eax,eax
  42c920:	lea    rcx,[rip+0xfffffffffffff499]        # 0x42bdc0
  42c927:	lea    r8,[rip+0x62]        # 0x42c990
  42c92e:	jmp    0x42c676
  42c933:	call   0x42c120
  42c938:	test   eax,eax
  42c93a:	je     0x42c71f
  42c940:	jmp    0x42c6d4
  42c945:	lea    rax,[rip+0xffffffffffffe5e4]        # 0x42af30
  42c94c:	lea    rcx,[rip+0xffffffffffffed6d]        # 0x42b6c0
  42c953:	lea    r8,[rip+0xfffffffffffff6e6]        # 0x42c040
  42c95a:	jmp    0x42c676
  42c95f:	mov    ebx,0xffffffff
  42c964:	mov    esi,ebx
  42c966:	jmp    0x42c71f
  42c96b:	mov    rcx,rbp
  42c96e:	call   0x4388b8
  42c973:	mov    ebx,eax
  42c975:	jmp    0x42c61a
  42c97a:	lea    rcx,[rbp+0x2]
  42c97e:	call   0x4388b8
  42c983:	mov    ebx,eax
  42c985:	jmp    0x42c61a
  42c98a:	nop    WORD PTR [rax+rax*1+0x0]
  42c990:	sub    rsp,0x28
  42c994:	cmp    r8d,0x3
  42c998:	jle    0x42ca80
  42c99e:	mov    ecx,DWORD PTR [rcx]
  42c9a0:	cmp    ecx,0x2ee0
  42c9a6:	je     0x42ca30
  42c9ac:	cmp    ecx,0x2ee1
  42c9b2:	je     0x42ca55
  42c9b8:	lea    edx,[rax-0xd800]
  42c9be:	cmp    edx,0x7ff
  42c9c4:	jbe    0x42caa0
  42c9ca:	cmp    eax,0x10ffff
  42c9cf:	ja     0x42caa0
  42c9d5:	cmp    eax,0xffff
  42c9da:	ja     0x42c9f5
  42c9dc:	mov    WORD PTR [r9],ax
  42c9e0:	mov    rax,QWORD PTR [rsp+0x50]
  42c9e5:	mov    DWORD PTR [rax],0x1
  42c9eb:	mov    eax,0x4
  42c9f0:	add    rsp,0x28
  42c9f4:	ret    
  42c9f5:	sub    eax,0x10000
  42c9fa:	mov    edx,eax
  42c9fc:	and    ax,0x3ff
  42ca00:	or     ax,0xdc00
  42ca04:	shr    edx,0xa
  42ca07:	mov    WORD PTR [r9+0x2],ax
  42ca0c:	mov    rax,QWORD PTR [rsp+0x50]
  42ca11:	or     dx,0xd800
  42ca16:	mov    WORD PTR [r9],dx
  42ca1a:	mov    DWORD PTR [rax],0x2
  42ca20:	mov    eax,0x4
  42ca25:	add    rsp,0x28
  42ca29:	ret    
  42ca2a:	nop    WORD PTR [rax+rax*1+0x0]
  42ca30:	movzx  eax,BYTE PTR [rdx+0x3]
  42ca34:	shl    eax,0x18
  42ca37:	mov    ecx,eax
  42ca39:	movzx  eax,BYTE PTR [rdx+0x2]
  42ca3d:	shl    eax,0x10
  42ca40:	or     eax,ecx
  42ca42:	movzx  ecx,BYTE PTR [rdx]
  42ca45:	movzx  edx,BYTE PTR [rdx+0x1]
  42ca49:	or     eax,ecx
  42ca4b:	shl    edx,0x8
  42ca4e:	or     eax,edx
  42ca50:	jmp    0x42c9b8
  42ca55:	movzx  eax,BYTE PTR [rdx]
  42ca58:	shl    eax,0x18
  42ca5b:	mov    ecx,eax
  42ca5d:	movzx  eax,BYTE PTR [rdx+0x1]
  42ca61:	shl    eax,0x10
  42ca64:	or     eax,ecx
  42ca66:	movzx  ecx,BYTE PTR [rdx+0x3]
  42ca6a:	movzx  edx,BYTE PTR [rdx+0x2]
  42ca6e:	or     eax,ecx
  42ca70:	shl    edx,0x8
  42ca73:	or     eax,edx
  42ca75:	jmp    0x42c9b8
  42ca7a:	nop    WORD PTR [rax+rax*1+0x0]
  42ca80:	call   QWORD PTR [rip+0x59e5a]        # 0x4868e0
  42ca86:	mov    DWORD PTR [rax],0x16
  42ca8c:	mov    eax,0xffffffff
  42ca91:	jmp    0x42c9f0
  42ca96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42caa0:	call   QWORD PTR [rip+0x59e3a]        # 0x4868e0
  42caa6:	mov    DWORD PTR [rax],0x2a
  42caac:	mov    eax,0xffffffff
  42cab1:	jmp    0x42c9f0
  42cab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cac0:	push   r15
  42cac2:	push   r14
  42cac4:	push   r13
  42cac6:	push   r12
  42cac8:	push   rbp
  42cac9:	push   rdi
  42caca:	push   rsi
  42cacb:	push   rbx
  42cacc:	sub    rsp,0x88
  42cad3:	mov    r14,QWORD PTR [rsp+0xf0]
  42cadb:	test   rdx,rdx
  42cade:	mov    r15,rcx
  42cae1:	mov    rsi,rdx
  42cae4:	mov    rdi,r8
  42cae7:	mov    r12,r9
  42caea:	je     0x42cde6
  42caf0:	cmp    QWORD PTR [rdx],0x0
  42caf4:	je     0x42cde6
  42cafa:	lea    rax,[rcx+0x20]
  42cafe:	mov    r8,QWORD PTR [r8]
  42cb01:	lea    r13,[rsp+0x60]
  42cb06:	mov    QWORD PTR [rsp+0x38],rax
  42cb0b:	lea    rax,[rsp+0x5c]
  42cb10:	mov    QWORD PTR [rsp+0x40],rax
  42cb15:	test   r8,r8
  42cb18:	je     0x42cb84
  42cb1a:	mov    eax,DWORD PTR [r15+0x48]
  42cb1e:	mov    DWORD PTR [rsp+0x5c],0x10
  42cb26:	mov    r9,r13
  42cb29:	mov    rdx,QWORD PTR [rsi]
  42cb2c:	mov    rcx,QWORD PTR [rsp+0x38]
  42cb31:	mov    DWORD PTR [rsp+0x48],eax
  42cb35:	mov    rax,QWORD PTR [rsp+0x40]
  42cb3a:	mov    QWORD PTR [rsp+0x20],rax
  42cb3f:	call   QWORD PTR [r15+0x28]
  42cb43:	movsxd rbx,eax
  42cb46:	cmp    ebx,0xffffffff
  42cb49:	je     0x42cd6d
  42cb4f:	mov    ebp,DWORD PTR [r15+0x20]
  42cb53:	mov    ecx,ebp
  42cb55:	call   0x42bb00
  42cb5a:	test   eax,eax
  42cb5c:	je     0x42cb6b
  42cb5e:	mov    edx,DWORD PTR [r15+0x48]
  42cb62:	test   dl,0x1
  42cb65:	je     0x42cce0
  42cb6b:	mov    eax,DWORD PTR [rsp+0x5c]
  42cb6f:	test   eax,eax
  42cb71:	jne    0x42cba0
  42cb73:	mov    r8,QWORD PTR [rdi]
  42cb76:	add    QWORD PTR [rsi],rbx
  42cb79:	sub    r8,rbx
  42cb7c:	test   r8,r8
  42cb7f:	mov    QWORD PTR [rdi],r8
  42cb82:	jne    0x42cb1a
  42cb84:	mov    rax,r8
  42cb87:	add    rsp,0x88
  42cb8e:	pop    rbx
  42cb8f:	pop    rsi
  42cb90:	pop    rdi
  42cb91:	pop    rbp
  42cb92:	pop    r12
  42cb94:	pop    r13
  42cb96:	pop    r14
  42cb98:	pop    r15
  42cb9a:	ret    
  42cb9b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cba0:	mov    rax,QWORD PTR [r15+0x50]
  42cba4:	test   rax,rax
  42cba7:	je     0x42cbfa
  42cba9:	movzx  ecx,WORD PTR [rsp+0x60]
  42cbae:	lea    edx,[rcx+0x2800]
  42cbb4:	cmp    dx,0x3ff
  42cbb9:	ja     0x42cbd6
  42cbbb:	movzx  edx,WORD PTR [rsp+0x62]
  42cbc0:	and    ecx,0x3ff
  42cbc6:	shl    ecx,0xa
  42cbc9:	and    edx,0x3ff
  42cbcf:	lea    ecx,[rcx+rdx*1+0x10000]
  42cbd6:	mov    edx,DWORD PTR [rax]
  42cbd8:	test   edx,edx
  42cbda:	je     0x42cbfa
  42cbdc:	add    rax,0xc
  42cbe0:	test   BYTE PTR [rax-0x4],0x1
  42cbe4:	je     0x42cbef
  42cbe6:	cmp    DWORD PTR [rax-0x8],ecx
  42cbe9:	je     0x42cd01
  42cbef:	add    rax,0xc
  42cbf3:	mov    edx,DWORD PTR [rax-0xc]
  42cbf6:	test   edx,edx
  42cbf8:	jne    0x42cbe0
  42cbfa:	mov    rcx,QWORD PTR [r15+0x88]
  42cc01:	test   rcx,rcx
  42cc04:	je     0x42ccd0
  42cc0a:	movzx  r8d,WORD PTR [rsp+0x60]
  42cc10:	lea    eax,[r8+0x2800]
  42cc17:	cmp    ax,0x3ff
  42cc1b:	ja     0x42cc3a
  42cc1d:	movzx  eax,WORD PTR [rsp+0x62]
  42cc22:	and    r8d,0x3ff
  42cc29:	shl    r8d,0xa
  42cc2d:	and    eax,0x3ff
  42cc32:	lea    r8d,[r8+rax*1+0x10000]
  42cc3a:	mov    eax,DWORD PTR [rcx]
  42cc3c:	test   eax,eax
  42cc3e:	je     0x42ccd0
  42cc44:	cmp    eax,r8d
  42cc47:	jne    0x42cc4f
  42cc49:	test   BYTE PTR [rcx+0x8],0x2
  42cc4d:	jne    0x42cc6b
  42cc4f:	lea    rax,[rcx+0xc]
  42cc53:	mov    edx,DWORD PTR [rax]
  42cc55:	mov    rcx,rax
  42cc58:	test   edx,edx
  42cc5a:	je     0x42ccd0
  42cc5c:	add    rax,0xc
  42cc60:	test   BYTE PTR [rcx+0x8],0x2
  42cc64:	je     0x42cc53
  42cc66:	cmp    edx,r8d
  42cc69:	jne    0x42cc53
  42cc6b:	mov    eax,DWORD PTR [rcx+0x4]
  42cc6e:	cmp    eax,0xffff
  42cc73:	ja     0x42cdad
  42cc79:	mov    WORD PTR [rsp+0x60],ax
  42cc7e:	mov    DWORD PTR [rsp+0x5c],0x1
  42cc86:	mov    r8d,0x1
  42cc8c:	nop    DWORD PTR [rax+0x0]
  42cc90:	mov    rax,QWORD PTR [r14]
  42cc93:	lea    rcx,[r15+0x58]
  42cc97:	mov    r9,QWORD PTR [r12]
  42cc9b:	mov    rdx,r13
  42cc9e:	mov    DWORD PTR [rsp+0x20],eax
  42cca2:	call   QWORD PTR [r15+0x68]
  42cca6:	cmp    eax,0xffffffff
  42cca9:	je     0x42cd65
  42ccaf:	add    QWORD PTR [rsi],rbx
  42ccb2:	cdqe   
  42ccb4:	add    QWORD PTR [r12],rax
  42ccb8:	sub    QWORD PTR [rdi],rbx
  42ccbb:	sub    QWORD PTR [r14],rax
  42ccbe:	mov    r8,QWORD PTR [rdi]
  42ccc1:	jmp    0x42cb15
  42ccc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ccd0:	mov    r8d,DWORD PTR [rsp+0x5c]
  42ccd5:	jmp    0x42cc90
  42ccd7:	nop    WORD PTR [rax+rax*1+0x0]
  42cce0:	movzx  eax,WORD PTR [rsp+0x60]
  42cce5:	cmp    ax,0xfffe
  42cce9:	je     0x42cd1b
  42cceb:	cmp    ax,0xfeff
  42ccef:	je     0x42cd3a
  42ccf1:	mov    eax,DWORD PTR [rsp+0x5c]
  42ccf5:	or     edx,0x1
  42ccf8:	mov    DWORD PTR [r15+0x48],edx
  42ccfc:	jmp    0x42cb6f
  42cd01:	cmp    edx,0xffff
  42cd07:	ja     0x42cd79
  42cd09:	mov    WORD PTR [rsp+0x60],dx
  42cd0e:	mov    DWORD PTR [rsp+0x5c],0x1
  42cd16:	jmp    0x42cbfa
  42cd1b:	test   BYTE PTR [r15+0x24],0x1
  42cd20:	je     0x42ccf1
  42cd22:	xor    ebp,0x1
  42cd25:	or     edx,0x2
  42cd28:	mov    eax,0xfffffeff
  42cd2d:	mov    DWORD PTR [r15+0x20],ebp
  42cd31:	mov    DWORD PTR [r15+0x48],edx
  42cd35:	mov    WORD PTR [rsp+0x60],ax
  42cd3a:	mov    ebp,DWORD PTR [r15+0x58]
  42cd3e:	mov    DWORD PTR [rsp+0x4c],edx
  42cd42:	mov    ecx,ebp
  42cd44:	call   0x42bb00
  42cd49:	test   eax,eax
  42cd4b:	mov    edx,DWORD PTR [rsp+0x4c]
  42cd4f:	je     0x42cd59
  42cd51:	cmp    ebp,0xfde9
  42cd57:	jne    0x42ccf1
  42cd59:	mov    DWORD PTR [rsp+0x5c],0x0
  42cd61:	xor    eax,eax
  42cd63:	jmp    0x42ccf5
  42cd65:	mov    eax,DWORD PTR [rsp+0x48]
  42cd69:	mov    DWORD PTR [r15+0x48],eax
  42cd6d:	mov    r8,0xffffffffffffffff
  42cd74:	jmp    0x42cb84
  42cd79:	sub    edx,0x10000
  42cd7f:	mov    DWORD PTR [rsp+0x5c],0x2
  42cd87:	mov    eax,edx
  42cd89:	and    dx,0x3ff
  42cd8e:	shr    eax,0xa
  42cd91:	or     dx,0xdc00
  42cd96:	and    ax,0x3ff
  42cd9a:	mov    WORD PTR [rsp+0x62],dx
  42cd9f:	or     ax,0xd800
  42cda3:	mov    WORD PTR [rsp+0x60],ax
  42cda8:	jmp    0x42cbfa
  42cdad:	sub    eax,0x10000
  42cdb2:	mov    DWORD PTR [rsp+0x5c],0x2
  42cdba:	mov    r8d,0x2
  42cdc0:	mov    edx,eax
  42cdc2:	and    ax,0x3ff
  42cdc6:	shr    edx,0xa
  42cdc9:	or     ax,0xdc00
  42cdcd:	and    dx,0x3ff
  42cdd2:	mov    WORD PTR [rsp+0x62],ax
  42cdd7:	or     dx,0xd800
  42cddc:	mov    WORD PTR [rsp+0x60],dx
  42cde1:	jmp    0x42cc90
  42cde6:	test   r12,r12
  42cde9:	je     0x42ce18
  42cdeb:	mov    rdx,QWORD PTR [r12]
  42cdef:	test   rdx,rdx
  42cdf2:	je     0x42ce18
  42cdf4:	mov    rax,QWORD PTR [r15+0x78]
  42cdf8:	test   rax,rax
  42cdfb:	je     0x42ce18
  42cdfd:	lea    rcx,[r15+0x58]
  42ce01:	mov    r8d,DWORD PTR [r14]
  42ce04:	call   rax
  42ce06:	cmp    eax,0xffffffff
  42ce09:	je     0x42cd6d
  42ce0f:	cdqe   
  42ce11:	add    QWORD PTR [r12],rax
  42ce15:	sub    QWORD PTR [r14],rax
  42ce18:	mov    ebx,DWORD PTR [r15+0x20]
  42ce1c:	mov    ecx,ebx
  42ce1e:	call   0x42bb00
  42ce23:	test   eax,eax
  42ce25:	je     0x42ce35
  42ce27:	test   BYTE PTR [r15+0x48],0x2
  42ce2c:	je     0x42ce35
  42ce2e:	xor    ebx,0x1
  42ce31:	mov    DWORD PTR [r15+0x20],ebx
  42ce35:	mov    DWORD PTR [r15+0x48],0x0
  42ce3d:	mov    DWORD PTR [r15+0x80],0x0
  42ce48:	xor    r8d,r8d
  42ce4b:	jmp    0x42cb84
  42ce50:	push   rbp
  42ce51:	push   rdi
  42ce52:	push   rsi
  42ce53:	push   rbx
  42ce54:	sub    rsp,0x68
  42ce58:	mov    rdi,rcx
  42ce5b:	mov    rbp,rdx
  42ce5e:	mov    ecx,0x1
  42ce63:	mov    edx,0x90
  42ce68:	call   0x4388a8
  42ce6d:	test   rax,rax
  42ce70:	mov    rbx,rax
  42ce73:	je     0x42cf80
  42ce79:	lea    rsi,[rsp+0x20]
  42ce7e:	mov    rdx,rbp
  42ce81:	mov    rcx,rsi
  42ce84:	call   0x42c440
  42ce89:	mov    rax,QWORD PTR [rsp+0x20]
  42ce8e:	mov    rdx,rdi
  42ce91:	mov    rcx,rsi
  42ce94:	mov    QWORD PTR [rbx+0x20],rax
  42ce98:	mov    rax,QWORD PTR [rsp+0x28]
  42ce9d:	mov    QWORD PTR [rbx+0x28],rax
  42cea1:	mov    rax,QWORD PTR [rsp+0x30]
  42cea6:	mov    QWORD PTR [rbx+0x30],rax
  42ceaa:	mov    rax,QWORD PTR [rsp+0x38]
  42ceaf:	mov    QWORD PTR [rbx+0x38],rax
  42ceb3:	mov    rax,QWORD PTR [rsp+0x40]
  42ceb8:	mov    QWORD PTR [rbx+0x40],rax
  42cebc:	mov    rax,QWORD PTR [rsp+0x48]
  42cec1:	mov    QWORD PTR [rbx+0x48],rax
  42cec5:	mov    rax,QWORD PTR [rsp+0x50]
  42ceca:	mov    QWORD PTR [rbx+0x50],rax
  42cece:	call   0x42c440
  42ced3:	mov    rax,QWORD PTR [rsp+0x20]
  42ced8:	cmp    DWORD PTR [rbx+0x20],0xffffffff
  42cedc:	mov    QWORD PTR [rbx+0x58],rax
  42cee0:	mov    rax,QWORD PTR [rsp+0x28]
  42cee5:	mov    QWORD PTR [rbx+0x60],rax
  42cee9:	mov    rax,QWORD PTR [rsp+0x30]
  42ceee:	mov    QWORD PTR [rbx+0x68],rax
  42cef2:	mov    rax,QWORD PTR [rsp+0x38]
  42cef7:	mov    QWORD PTR [rbx+0x70],rax
  42cefb:	mov    rax,QWORD PTR [rsp+0x40]
  42cf00:	mov    QWORD PTR [rbx+0x78],rax
  42cf04:	mov    rax,QWORD PTR [rsp+0x48]
  42cf09:	mov    QWORD PTR [rbx+0x80],rax
  42cf10:	mov    rax,QWORD PTR [rsp+0x50]
  42cf15:	mov    QWORD PTR [rbx+0x88],rax
  42cf1c:	je     0x42cf54
  42cf1e:	cmp    DWORD PTR [rbx+0x58],0xffffffff
  42cf22:	je     0x42cf54
  42cf24:	lea    rax,[rip+0xffffffffffffdff5]        # 0x42af20
  42cf2b:	mov    QWORD PTR [rbx],rbx
  42cf2e:	mov    QWORD PTR [rbx+0x8],rax
  42cf32:	lea    rax,[rip+0xfffffffffffffb87]        # 0x42cac0
  42cf39:	mov    QWORD PTR [rbx+0x10],rax
  42cf3d:	mov    rax,QWORD PTR [rip+0x5999c]        # 0x4868e0
  42cf44:	mov    QWORD PTR [rbx+0x18],rax
  42cf48:	mov    rax,rbx
  42cf4b:	add    rsp,0x68
  42cf4f:	pop    rbx
  42cf50:	pop    rsi
  42cf51:	pop    rdi
  42cf52:	pop    rbp
  42cf53:	ret    
  42cf54:	mov    rcx,rbx
  42cf57:	call   0x438850
  42cf5c:	call   QWORD PTR [rip+0x5997e]        # 0x4868e0
  42cf62:	mov    DWORD PTR [rax],0x16
  42cf68:	mov    rax,0xffffffffffffffff
  42cf6f:	add    rsp,0x68
  42cf73:	pop    rbx
  42cf74:	pop    rsi
  42cf75:	pop    rdi
  42cf76:	pop    rbp
  42cf77:	ret    
  42cf78:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf80:	call   QWORD PTR [rip+0x5995a]        # 0x4868e0
  42cf86:	mov    DWORD PTR [rax],0xc
  42cf8c:	mov    rax,0xffffffffffffffff
  42cf93:	add    rsp,0x68
  42cf97:	pop    rbx
  42cf98:	pop    rsi
  42cf99:	pop    rdi
  42cf9a:	pop    rbp
  42cf9b:	ret    
  42cf9c:	nop    DWORD PTR [rax+0x0]
  42cfa0:	push   rbp
  42cfa1:	push   rdi
  42cfa2:	push   rsi
  42cfa3:	push   rbx
  42cfa4:	sub    rsp,0x28
  42cfa8:	test   rcx,rcx
  42cfab:	mov    rbx,rcx
  42cfae:	mov    rsi,rdx
  42cfb1:	mov    rdi,r8
  42cfb4:	je     0x42cff7
  42cfb6:	mov    rcx,QWORD PTR [rcx]
  42cfb9:	test   rcx,rcx
  42cfbc:	je     0x42cff7
  42cfbe:	mov    rbp,QWORD PTR [rip+0x5991b]        # 0x4868e0
  42cfc5:	mov    rdx,rsi
  42cfc8:	call   0x42ce50
  42cfcd:	cmp    rax,0xffffffffffffffff
  42cfd1:	mov    QWORD PTR [rdi],rax
  42cfd4:	je     0x42cfe4
  42cfd6:	mov    eax,0x1
  42cfdb:	add    rsp,0x28
  42cfdf:	pop    rbx
  42cfe0:	pop    rsi
  42cfe1:	pop    rdi
  42cfe2:	pop    rbp
  42cfe3:	ret    
  42cfe4:	call   rbp
  42cfe6:	cmp    DWORD PTR [rax],0x16
  42cfe9:	jne    0x42cfd6
  42cfeb:	add    rbx,0x8
  42cfef:	mov    rcx,QWORD PTR [rbx]
  42cff2:	test   rcx,rcx
  42cff5:	jne    0x42cfc5
  42cff7:	xor    eax,eax
  42cff9:	add    rsp,0x28
  42cffd:	pop    rbx
  42cffe:	pop    rsi
  42cfff:	pop    rdi
  42d000:	pop    rbp
  42d001:	ret    
  42d002:	nop    DWORD PTR [rax+0x0]
  42d006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d010:	push   rdi
  42d011:	push   rsi
  42d012:	push   rbx
  42d013:	sub    rsp,0x20
  42d017:	mov    rbx,rcx
  42d01a:	mov    rcx,QWORD PTR [rcx]
  42d01d:	call   QWORD PTR [rbx+0x8]
  42d020:	mov    esi,eax
  42d022:	call   QWORD PTR [rbx+0x18]
  42d025:	mov    edi,DWORD PTR [rax]
  42d027:	mov    rcx,rbx
  42d02a:	call   0x438850
  42d02f:	call   QWORD PTR [rip+0x598ab]        # 0x4868e0
  42d035:	mov    DWORD PTR [rax],edi
  42d037:	mov    eax,esi
  42d039:	add    rsp,0x20
  42d03d:	pop    rbx
  42d03e:	pop    rsi
  42d03f:	pop    rdi
  42d040:	ret    
  42d041:	nop    DWORD PTR [rax+rax*1+0x0]
  42d046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d050:	push   rsi
  42d051:	push   rbx
  42d052:	sub    rsp,0x38
  42d056:	mov    rbx,rcx
  42d059:	mov    rsi,rdx
  42d05c:	mov    rcx,QWORD PTR [rip+0x5762d]        # 0x484690
  42d063:	mov    rdx,QWORD PTR [rdx]
  42d066:	call   0x4091d0
  42d06b:	test   rbx,rbx
  42d06e:	je     0x42d0e0
  42d070:	mov    rax,QWORD PTR [rbx+0x10]
  42d074:	test   rax,rax
  42d077:	je     0x42d0c0
  42d079:	mov    rdx,QWORD PTR [rbx+0x8]
  42d07d:	mov    QWORD PTR [rax+0x8],rdx
  42d081:	mov    rdx,QWORD PTR [rbx+0x8]
  42d085:	test   rdx,rdx
  42d088:	je     0x42d08e
  42d08a:	mov    QWORD PTR [rdx+0x10],rax
  42d08e:	mov    rcx,rbx
  42d091:	call   0x409a90
  42d096:	mov    rcx,QWORD PTR [rsi]
  42d099:	call   0x40e6e0
  42d09e:	mov    rcx,QWORD PTR [rsi+0x10]
  42d0a2:	call   0x42d010
  42d0a7:	mov    rcx,rsi
  42d0aa:	call   0x40e6e0
  42d0af:	sub    DWORD PTR [rip+0x575ca],0x1        # 0x484680
  42d0b6:	add    rsp,0x38
  42d0ba:	pop    rbx
  42d0bb:	pop    rsi
  42d0bc:	ret    
  42d0bd:	nop    DWORD PTR [rax]
  42d0c0:	mov    rax,QWORD PTR [rbx+0x8]
  42d0c4:	test   rax,rax
  42d0c7:	mov    QWORD PTR [rip+0x575ca],rax        # 0x484698
  42d0ce:	je     0x42d08e
  42d0d0:	mov    QWORD PTR [rax+0x10],0x0
  42d0d8:	jmp    0x42d08e
  42d0da:	nop    WORD PTR [rax+rax*1+0x0]
  42d0e0:	mov    rcx,QWORD PTR [rip+0x575b1]        # 0x484698
  42d0e7:	mov    rdx,rsi
  42d0ea:	call   0x40a070
  42d0ef:	test   rax,rax
  42d0f2:	mov    rbx,rax
  42d0f5:	jne    0x42d070
  42d0fb:	lea    rax,[rip+0x4b217]        # 0x478319
  42d102:	lea    r9,[rip+0x4b5e7]        # 0x4786f0
  42d109:	lea    rdx,[rip+0x4b070]        # 0x478180
  42d110:	lea    rcx,[rip+0x4b061]        # 0x478178
  42d117:	mov    r8d,0x1ae
  42d11d:	mov    QWORD PTR [rsp+0x20],rax
  42d122:	call   0x41e680
  42d127:	nop
  42d128:	nop    DWORD PTR [rax+rax*1+0x0]
  42d130:	push   rsi
  42d131:	push   rbx
  42d132:	sub    rsp,0x38
  42d136:	cmp    rcx,0xffffffffffffffff
  42d13a:	je     0x42d1c3
  42d140:	mov    rbx,rcx
  42d143:	lea    rcx,[rip+0x5752e]        # 0x484678
  42d14a:	call   0x426d40
  42d14f:	mov    rcx,QWORD PTR [rip+0x57532]        # 0x484688
  42d156:	mov    rdx,rbx
  42d159:	call   0x408de0
  42d15e:	test   rax,rax
  42d161:	mov    rsi,rax
  42d164:	je     0x42d220
  42d16a:	mov    rcx,QWORD PTR [rip+0x57517]        # 0x484688
  42d171:	mov    rdx,rbx
  42d174:	call   0x4091d0
  42d179:	mov    rcx,QWORD PTR [rip+0x57510]        # 0x484690
  42d180:	mov    rdx,rsi
  42d183:	call   0x408de0
  42d188:	test   rax,rax
  42d18b:	mov    rsi,rax
  42d18e:	je     0x42d1e0
  42d190:	mov    eax,DWORD PTR [rax+0x8]
  42d193:	sub    eax,0x1
  42d196:	cmp    rbx,QWORD PTR [rsi+0x10]
  42d19a:	mov    DWORD PTR [rsi+0x8],eax
  42d19d:	je     0x42d1d0
  42d19f:	mov    rcx,rbx
  42d1a2:	call   0x42d010
  42d1a7:	mov    eax,DWORD PTR [rsi+0x8]
  42d1aa:	test   eax,eax
  42d1ac:	jne    0x42d1b7
  42d1ae:	cmp    DWORD PTR [rip+0x574cb],0x10        # 0x484680
  42d1b5:	ja     0x42d210
  42d1b7:	lea    rcx,[rip+0x574ba]        # 0x484678
  42d1be:	call   0x426d70
  42d1c3:	xor    eax,eax
  42d1c5:	add    rsp,0x38
  42d1c9:	pop    rbx
  42d1ca:	pop    rsi
  42d1cb:	ret    
  42d1cc:	nop    DWORD PTR [rax+0x0]
  42d1d0:	mov    DWORD PTR [rsi+0xc],0x0
  42d1d7:	jmp    0x42d1aa
  42d1d9:	nop    DWORD PTR [rax+0x0]
  42d1e0:	lea    rax,[rip+0x4b177]        # 0x47835e
  42d1e7:	lea    r9,[rip+0x4b4f2]        # 0x4786e0
  42d1ee:	lea    rdx,[rip+0x4af8b]        # 0x478180
  42d1f5:	lea    rcx,[rip+0x4af7c]        # 0x478178
  42d1fc:	mov    r8d,0x257
  42d202:	mov    QWORD PTR [rsp+0x20],rax
  42d207:	call   0x41e680
  42d20c:	nop    DWORD PTR [rax+0x0]
  42d210:	mov    rdx,rsi
  42d213:	xor    ecx,ecx
  42d215:	call   0x42d050
  42d21a:	jmp    0x42d1b7
  42d21c:	nop    DWORD PTR [rax+0x0]
  42d220:	lea    rcx,[rip+0x57451]        # 0x484678
  42d227:	call   0x426d70
  42d22c:	lea    r8,[rip+0x4b0f5]        # 0x478328
  42d233:	lea    rcx,[rip+0x4af3e]        # 0x478178
  42d23a:	mov    edx,0x10
  42d23f:	call   0x40fae0
  42d244:	mov    rcx,rbx
  42d247:	add    rsp,0x38
  42d24b:	pop    rbx
  42d24c:	pop    rsi
  42d24d:	jmp    0x42d010
  42d252:	nop    DWORD PTR [rax+0x0]
  42d256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d260:	push   rdi
  42d261:	push   rsi
  42d262:	push   rbx
  42d263:	sub    rsp,0x30
  42d267:	mov    rax,QWORD PTR [rsp+0x70]
  42d26c:	mov    rbx,rcx
  42d26f:	mov    QWORD PTR [rsp+0x20],rax
  42d274:	mov    rcx,QWORD PTR [rcx]
  42d277:	call   QWORD PTR [rbx+0x10]
  42d27a:	mov    rsi,rax
  42d27d:	call   QWORD PTR [rip+0x5965d]        # 0x4868e0
  42d283:	mov    rdi,rax
  42d286:	call   QWORD PTR [rbx+0x18]
  42d289:	mov    eax,DWORD PTR [rax]
  42d28b:	mov    DWORD PTR [rdi],eax
  42d28d:	mov    rax,rsi
  42d290:	add    rsp,0x30
  42d294:	pop    rbx
  42d295:	pop    rsi
  42d296:	pop    rdi
  42d297:	ret    
  42d298:	nop    DWORD PTR [rax+rax*1+0x0]
  42d2a0:	lea    rcx,[rip+0x4afcf]        # 0x478276
  42d2a7:	jmp    0x42fc00
  42d2ac:	nop    DWORD PTR [rax+0x0]
  42d2b0:	push   r14
  42d2b2:	push   r13
  42d2b4:	push   r12
  42d2b6:	push   rbp
  42d2b7:	push   rdi
  42d2b8:	push   rsi
  42d2b9:	push   rbx
  42d2ba:	sub    rsp,0x30
  42d2be:	mov    rsi,rcx
  42d2c1:	mov    rdi,rdx
  42d2c4:	call   0x42ce50
  42d2c9:	cmp    rax,0xffffffffffffffff
  42d2cd:	mov    QWORD PTR [rsp+0x28],rax
  42d2d2:	je     0x42d2e3
  42d2d4:	add    rsp,0x30
  42d2d8:	pop    rbx
  42d2d9:	pop    rsi
  42d2da:	pop    rdi
  42d2db:	pop    rbp
  42d2dc:	pop    r12
  42d2de:	pop    r13
  42d2e0:	pop    r14
  42d2e2:	ret    
  42d2e3:	mov    rbp,QWORD PTR [rip+0x595f6]        # 0x4868e0
  42d2ea:	call   rbp
  42d2ec:	cmp    DWORD PTR [rax],0x16
  42d2ef:	je     0x42d305
  42d2f1:	mov    rax,QWORD PTR [rsp+0x28]
  42d2f6:	add    rsp,0x30
  42d2fa:	pop    rbx
  42d2fb:	pop    rsi
  42d2fc:	pop    rdi
  42d2fd:	pop    rbp
  42d2fe:	pop    r12
  42d300:	pop    r13
  42d302:	pop    r14
  42d304:	ret    
  42d305:	mov    rcx,rsi
  42d308:	lea    r14,[rsp+0x28]
  42d30d:	call   0x42aa50
  42d312:	mov    rcx,rdi
  42d315:	mov    r13,rax
  42d318:	call   0x42aa50
  42d31d:	test   rax,rax
  42d320:	mov    rbx,rax
  42d323:	je     0x42d36d
  42d325:	mov    rdx,QWORD PTR [rbx]
  42d328:	lea    r12,[rsp+0x28]
  42d32d:	test   rdx,rdx
  42d330:	je     0x42d38f
  42d332:	mov    rcx,rsi
  42d335:	call   0x42ce50
  42d33a:	cmp    rax,0xffffffffffffffff
  42d33e:	mov    QWORD PTR [rsp+0x28],rax
  42d343:	jne    0x42d2d4
  42d345:	call   rbp
  42d347:	cmp    DWORD PTR [rax],0x16
  42d34a:	jne    0x42d2f1
  42d34c:	mov    rdx,QWORD PTR [rbx]
  42d34f:	mov    r8,r12
  42d352:	mov    rcx,r13
  42d355:	mov    r14,r12
  42d358:	call   0x42cfa0
  42d35d:	test   eax,eax
  42d35f:	jne    0x42d2f1
  42d361:	add    rbx,0x8
  42d365:	mov    rdx,QWORD PTR [rbx]
  42d368:	test   rdx,rdx
  42d36b:	jne    0x42d332
  42d36d:	mov    r8,r14
  42d370:	mov    rdx,rdi
  42d373:	mov    rcx,r13
  42d376:	call   0x42cfa0
  42d37b:	mov    rax,QWORD PTR [rsp+0x28]
  42d380:	add    rsp,0x30
  42d384:	pop    rbx
  42d385:	pop    rsi
  42d386:	pop    rdi
  42d387:	pop    rbp
  42d388:	pop    r12
  42d38a:	pop    r13
  42d38c:	pop    r14
  42d38e:	ret    
  42d38f:	mov    r14,r12
  42d392:	jmp    0x42d36d
  42d394:	xchg   ax,ax
  42d396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d3a0:	push   r14
  42d3a2:	push   r13
  42d3a4:	push   r12
  42d3a6:	push   rbp
  42d3a7:	push   rdi
  42d3a8:	push   rsi
  42d3a9:	push   rbx
  42d3aa:	sub    rsp,0xa0
  42d3b1:	xor    r12d,r12d
  42d3b4:	mov    r13,rcx
  42d3b7:	mov    rcx,rdx
  42d3ba:	mov    rbp,rdx
  42d3bd:	mov    r14,r8
  42d3c0:	lea    rsi,[rsp+0x50]
  42d3c5:	call   0x438788
  42d3ca:	mov    rcx,r13
  42d3cd:	mov    rbx,rax
  42d3d0:	call   0x438788
  42d3d5:	lea    rcx,[rbx+rax*1+0x2]
  42d3da:	cmp    rcx,0x4f
  42d3de:	ja     0x42d580
  42d3e4:	mov    r8,rbx
  42d3e7:	mov    rdx,rbp
  42d3ea:	mov    rcx,rsi
  42d3ed:	call   0x4387f0
  42d3f2:	lea    rcx,[rsi+rbx*1+0x1]
  42d3f7:	mov    rdx,r13
  42d3fa:	mov    BYTE PTR [rsi+rbx*1],0x3a
  42d3fe:	call   0x438798
  42d403:	lea    rcx,[rip+0x5726e]        # 0x484678
  42d40a:	call   0x426d40
  42d40f:	mov    ecx,DWORD PTR [rip+0x5725b]        # 0x484670
  42d415:	test   ecx,ecx
  42d417:	jne    0x42d462
  42d419:	lea    rdx,[rip+0xfffffffffffdc310]        # 0x409730
  42d420:	lea    rcx,[rip+0xfffffffffffdc329]        # 0x409750
  42d427:	mov    QWORD PTR [rip+0x57266],0x0        # 0x484698
  42d432:	call   0x408a60
  42d437:	lea    rdx,[rip+0xfffffffffffdc342]        # 0x409780
  42d43e:	lea    rcx,[rip+0xfffffffffffdad2b]        # 0x408170
  42d445:	mov    QWORD PTR [rip+0x57244],rax        # 0x484690
  42d44c:	call   0x408a60
  42d451:	mov    DWORD PTR [rip+0x57215],0x1        # 0x484670
  42d45b:	mov    QWORD PTR [rip+0x57226],rax        # 0x484688
  42d462:	mov    rcx,QWORD PTR [rip+0x57227]        # 0x484690
  42d469:	mov    rdx,rsi
  42d46c:	call   0x408de0
  42d471:	test   rax,rax
  42d474:	mov    rbx,rax
  42d477:	je     0x42d590
  42d47d:	mov    rcx,r12
  42d480:	call   0x40e6e0
  42d485:	mov    edx,DWORD PTR [rbx+0xc]
  42d488:	test   edx,edx
  42d48a:	jne    0x42d510
  42d490:	mov    rdi,QWORD PTR [rbx+0x10]
  42d494:	lea    rax,[rsp+0x48]
  42d499:	lea    r9,[rsp+0x40]
  42d49e:	lea    r8,[rsp+0x38]
  42d4a3:	mov    DWORD PTR [rbx+0xc],0x1
  42d4aa:	xor    edx,edx
  42d4ac:	mov    QWORD PTR [rsp+0x20],rax
  42d4b1:	mov    QWORD PTR [rsp+0x38],0x0
  42d4ba:	mov    rcx,rdi
  42d4bd:	mov    QWORD PTR [rsp+0x40],0x0
  42d4c6:	mov    QWORD PTR [rsp+0x48],0x0
  42d4cf:	call   0x42d260
  42d4d4:	add    DWORD PTR [rbx+0x8],0x1
  42d4d8:	mov    rcx,QWORD PTR [rip+0x571a9]        # 0x484688
  42d4df:	mov    r8,QWORD PTR [rbx]
  42d4e2:	mov    rdx,rdi
  42d4e5:	call   0x409090
  42d4ea:	lea    rcx,[rip+0x57187]        # 0x484678
  42d4f1:	call   0x426d70
  42d4f6:	mov    rax,rdi
  42d4f9:	add    rsp,0xa0
  42d500:	pop    rbx
  42d501:	pop    rsi
  42d502:	pop    rdi
  42d503:	pop    rbp
  42d504:	pop    r12
  42d506:	pop    r13
  42d508:	pop    r14
  42d50a:	ret    
  42d50b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d510:	mov    rdx,rbp
  42d513:	mov    rcx,r13
  42d516:	call   0x42d2b0
  42d51b:	cmp    rax,0xffffffffffffffff
  42d51f:	mov    rdi,rax
  42d522:	jne    0x42d4d4
  42d524:	lea    rcx,[rip+0x5714d]        # 0x484678
  42d52b:	mov    rdi,0xffffffffffffffff
  42d532:	call   0x426d70
  42d537:	test   r14,r14
  42d53a:	je     0x42d4f6
  42d53c:	call   QWORD PTR [rip+0x5939e]        # 0x4868e0
  42d542:	cmp    DWORD PTR [rax],0x16
  42d545:	lea    rcx,[rip+0x4ad2a]        # 0x478276
  42d54c:	je     0x42d650
  42d552:	call   0x42fc00
  42d557:	lea    r9,[rip+0x4ae4a]        # 0x4783a8
  42d55e:	mov    QWORD PTR [rsp+0x28],r13
  42d563:	mov    QWORD PTR [rsp+0x20],rbp
  42d568:	mov    r8d,0x2
  42d56e:	mov    edx,eax
  42d570:	mov    rcx,r14
  42d573:	call   0x430630
  42d578:	jmp    0x42d4f6
  42d57d:	nop    DWORD PTR [rax]
  42d580:	call   0x40e5c0
  42d585:	mov    rsi,rax
  42d588:	mov    r12,rax
  42d58b:	jmp    0x42d3e4
  42d590:	mov    rdx,rbp
  42d593:	mov    rcx,r13
  42d596:	call   0x42d2b0
  42d59b:	cmp    rax,0xffffffffffffffff
  42d59f:	mov    rdi,rax
  42d5a2:	je     0x42d680
  42d5a8:	mov    rcx,QWORD PTR [rip+0x570e9]        # 0x484698
  42d5af:	test   rcx,rcx
  42d5b2:	je     0x42d5f0
  42d5b4:	cmp    DWORD PTR [rip+0x570c5],0xf        # 0x484680
  42d5bb:	ja     0x42d5d1
  42d5bd:	jmp    0x42d5f0
  42d5bf:	nop
  42d5c0:	test   rbx,rbx
  42d5c3:	je     0x42d5f0
  42d5c5:	cmp    DWORD PTR [rip+0x570b4],0xf        # 0x484680
  42d5cc:	mov    rcx,rbx
  42d5cf:	jbe    0x42d5f0
  42d5d1:	mov    rdx,QWORD PTR [rcx]
  42d5d4:	mov    rbx,QWORD PTR [rcx+0x8]
  42d5d8:	mov    eax,DWORD PTR [rdx+0x8]
  42d5db:	test   eax,eax
  42d5dd:	jne    0x42d5c0
  42d5df:	call   0x42d050
  42d5e4:	jmp    0x42d5c0
  42d5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d5f0:	test   r12,r12
  42d5f3:	je     0x42d68d
  42d5f9:	mov    ecx,0x18
  42d5fe:	call   0x40e5c0
  42d603:	mov    rcx,QWORD PTR [rip+0x57086]        # 0x484690
  42d60a:	mov    QWORD PTR [rax],r12
  42d60d:	mov    r8,rax
  42d610:	mov    DWORD PTR [rax+0x8],0x1
  42d617:	mov    DWORD PTR [rax+0xc],0x1
  42d61e:	mov    rdx,r12
  42d621:	mov    QWORD PTR [rax+0x10],rdi
  42d625:	mov    rbx,rax
  42d628:	call   0x409090
  42d62d:	mov    rcx,QWORD PTR [rip+0x57064]        # 0x484698
  42d634:	mov    rdx,rbx
  42d637:	call   0x409b50
  42d63c:	add    DWORD PTR [rip+0x5703d],0x1        # 0x484680
  42d643:	mov    QWORD PTR [rip+0x5704e],rax        # 0x484698
  42d64a:	jmp    0x42d4d8
  42d64f:	nop
  42d650:	call   0x42fc00
  42d655:	lea    r9,[rip+0x4ad0c]        # 0x478368
  42d65c:	mov    QWORD PTR [rsp+0x28],r13
  42d661:	mov    QWORD PTR [rsp+0x20],rbp
  42d666:	xor    r8d,r8d
  42d669:	mov    edx,eax
  42d66b:	mov    rcx,r14
  42d66e:	call   0x430630
  42d673:	jmp    0x42d4f6
  42d678:	nop    DWORD PTR [rax+rax*1+0x0]
  42d680:	mov    rcx,r12
  42d683:	call   0x40e6e0
  42d688:	jmp    0x42d524
  42d68d:	mov    rcx,rsi
  42d690:	call   0x4182b0
  42d695:	mov    r12,rax
  42d698:	jmp    0x42d5f9
  42d69d:	nop    DWORD PTR [rax]
  42d6a0:	jmp    0x42d260
  42d6a5:	nop
  42d6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d6b0:	jmp    0x42d010
  42d6b5:	nop
  42d6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d6c0:	push   r15
  42d6c2:	push   r14
  42d6c4:	push   r13
  42d6c6:	push   r12
  42d6c8:	push   rbp
  42d6c9:	push   rdi
  42d6ca:	push   rsi
  42d6cb:	push   rbx
  42d6cc:	sub    rsp,0x68
  42d6d0:	cmp    r8,0xffffffffffffffff
  42d6d4:	mov    QWORD PTR [rsp+0xb0],rcx
  42d6dc:	mov    r13,rdx
  42d6df:	mov    rbx,r8
  42d6e2:	mov    QWORD PTR [rsp+0xc8],r9
  42d6ea:	je     0x42d925
  42d6f0:	test   rdx,rdx
  42d6f3:	js     0x42d910
  42d6f9:	mov    rax,QWORD PTR [rsp+0xb0]
  42d701:	lea    rbp,[rsp+0x40]
  42d706:	lea    rdi,[rsp+0x50]
  42d70b:	lea    rsi,[rsp+0x58]
  42d710:	lea    r12,[rsp+0x48]
  42d715:	mov    QWORD PTR [rsp+0x50],r13
  42d71a:	mov    QWORD PTR [rsp+0x58],r13
  42d71f:	mov    QWORD PTR [rsp+0x48],rax
  42d724:	lea    rax,[r13+0x4]
  42d728:	mov    rcx,rax
  42d72b:	mov    QWORD PTR [rsp+0x30],rax
  42d730:	call   0x40e5c0
  42d735:	mov    r15,rax
  42d738:	mov    QWORD PTR [rsp+0x40],rax
  42d73d:	mov    QWORD PTR [rsp+0x20],rsi
  42d742:	mov    r9,rbp
  42d745:	mov    r8,rdi
  42d748:	mov    rdx,r12
  42d74b:	mov    rcx,rbx
  42d74e:	call   0x42d260
  42d753:	cmp    rax,0xffffffffffffffff
  42d757:	je     0x42d800
  42d75d:	mov    QWORD PTR [rsp+0x50],0x0
  42d766:	mov    r14d,0x1
  42d76c:	xor    edx,edx
  42d76e:	mov    QWORD PTR [rsp+0x20],rsi
  42d773:	mov    r9,rbp
  42d776:	mov    r8,rdi
  42d779:	mov    rcx,rbx
  42d77c:	call   0x42d260
  42d781:	cmp    rax,0xffffffffffffffff
  42d785:	je     0x42d803
  42d787:	xor    edx,edx
  42d789:	xor    eax,eax
  42d78b:	cmp    QWORD PTR [rsp+0xc8],0x0
  42d794:	mov    rcx,QWORD PTR [rsp+0x40]
  42d799:	mov    DWORD PTR [rcx],0x0
  42d79f:	je     0x42d950
  42d7a5:	mov    rax,QWORD PTR [rsp+0x48]
  42d7aa:	sub    rax,QWORD PTR [rsp+0xb0]
  42d7b2:	mov    rsi,QWORD PTR [rsp+0xc8]
  42d7ba:	mov    QWORD PTR [rsi],rax
  42d7bd:	cmp    QWORD PTR [rsp+0xd0],0x0
  42d7c6:	je     0x42d7db
  42d7c8:	mov    rax,QWORD PTR [rsp+0x40]
  42d7cd:	mov    rdi,QWORD PTR [rsp+0xd0]
  42d7d5:	sub    rax,r15
  42d7d8:	mov    QWORD PTR [rdi],rax
  42d7db:	test   edx,edx
  42d7dd:	mov    rax,r15
  42d7e0:	jne    0x42d97e
  42d7e6:	add    rsp,0x68
  42d7ea:	pop    rbx
  42d7eb:	pop    rsi
  42d7ec:	pop    rdi
  42d7ed:	pop    rbp
  42d7ee:	pop    r12
  42d7f0:	pop    r13
  42d7f2:	pop    r14
  42d7f4:	pop    r15
  42d7f6:	ret    
  42d7f7:	nop    WORD PTR [rax+rax*1+0x0]
  42d800:	xor    r14d,r14d
  42d803:	call   QWORD PTR [rip+0x590d7]        # 0x4868e0
  42d809:	mov    eax,DWORD PTR [rax]
  42d80b:	cmp    eax,0x16
  42d80e:	je     0x42d900
  42d814:	cmp    eax,0x2a
  42d817:	je     0x42d8c2
  42d81d:	cmp    eax,0x7
  42d820:	je     0x42d870
  42d822:	call   QWORD PTR [rip+0x590b8]        # 0x4868e0
  42d828:	mov    ecx,DWORD PTR [rax]
  42d82a:	call   0x418cf0
  42d82f:	lea    rcx,[rip+0x4aa40]        # 0x478276
  42d836:	mov    rbx,rax
  42d839:	call   0x42fc00
  42d83e:	mov    rcx,QWORD PTR [rsp+0xd8]
  42d846:	lea    r9,[rip+0x4ab86]        # 0x4783d3
  42d84d:	mov    edx,eax
  42d84f:	mov    QWORD PTR [rsp+0x20],rbx
  42d854:	mov    r8d,0x2
  42d85a:	call   0x430630
  42d85f:	mov    eax,0x1
  42d864:	mov    edx,eax
  42d866:	jmp    0x42d78b
  42d86b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d870:	shl    QWORD PTR [rsp+0x30],1
  42d875:	mov    r8,QWORD PTR [rsp+0x40]
  42d87a:	mov    rcx,r15
  42d87d:	mov    rax,QWORD PTR [rsp+0x30]
  42d882:	sub    r8,r15
  42d885:	mov    rdx,rax
  42d888:	mov    QWORD PTR [rsp+0x38],r8
  42d88d:	call   0x40e670
  42d892:	mov    r8,QWORD PTR [rsp+0x38]
  42d897:	mov    r15,rax
  42d89a:	lea    rax,[rax+r8*1]
  42d89e:	mov    QWORD PTR [rsp+0x40],rax
  42d8a3:	mov    rax,QWORD PTR [rsp+0x30]
  42d8a8:	sub    rax,0x4
  42d8ac:	sub    rax,r8
  42d8af:	test   r14d,r14d
  42d8b2:	mov    QWORD PTR [rsp+0x58],rax
  42d8b7:	jne    0x42d76c
  42d8bd:	jmp    0x42d73d
  42d8c2:	lea    rcx,[rip+0x4a9ad]        # 0x478276
  42d8c9:	call   0x42fc00
  42d8ce:	mov    rcx,QWORD PTR [rsp+0xd8]
  42d8d6:	lea    r9,[rip+0x4a9ab]        # 0x478288
  42d8dd:	mov    edx,eax
  42d8df:	mov    r8d,0x1
  42d8e5:	call   0x430690
  42d8ea:	mov    eax,0x1
  42d8ef:	mov    edx,eax
  42d8f1:	jmp    0x42d78b
  42d8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d900:	xor    eax,eax
  42d902:	mov    edx,eax
  42d904:	jmp    0x42d78b
  42d909:	nop    DWORD PTR [rax+0x0]
  42d910:	mov    rcx,QWORD PTR [rsp+0xb0]
  42d918:	call   0x438788
  42d91d:	mov    r13,rax
  42d920:	jmp    0x42d6f9
  42d925:	lea    r8,[rip+0x4aaef]        # 0x47841b
  42d92c:	lea    rdx,[rip+0x4aded]        # 0x478720
  42d933:	lea    rcx,[rip+0x4a83e]        # 0x478178
  42d93a:	call   0x40fd20
  42d93f:	xor    eax,eax
  42d941:	jmp    0x42d7e6
  42d946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d950:	mov    rcx,QWORD PTR [rsp+0x48]
  42d955:	sub    rcx,QWORD PTR [rsp+0xb0]
  42d95d:	cmp    rcx,r13
  42d960:	je     0x42d7bd
  42d966:	test   eax,eax
  42d968:	je     0x42d98d
  42d96a:	cmp    QWORD PTR [rsp+0xd0],0x0
  42d973:	mov    edx,0x1
  42d978:	jne    0x42d7c8
  42d97e:	mov    rcx,r15
  42d981:	call   0x40e6e0
  42d986:	xor    eax,eax
  42d988:	jmp    0x42d7e6
  42d98d:	lea    rcx,[rip+0x4a8e2]        # 0x478276
  42d994:	call   0x42fc00
  42d999:	mov    rcx,QWORD PTR [rsp+0xd8]
  42d9a1:	lea    r9,[rip+0x4aa48]        # 0x4783f0
  42d9a8:	mov    r8d,0x3
  42d9ae:	mov    edx,eax
  42d9b0:	call   0x430690
  42d9b5:	jmp    0x42d96a
  42d9b7:	nop    WORD PTR [rax+rax*1+0x0]
  42d9c0:	push   rbp
  42d9c1:	push   rdi
  42d9c2:	push   rsi
  42d9c3:	push   rbx
  42d9c4:	sub    rsp,0x38
  42d9c8:	mov    rdi,QWORD PTR [rsp+0x90]
  42d9d0:	mov    rbx,rcx
  42d9d3:	mov    rbp,rdx
  42d9d6:	mov    rcx,r8
  42d9d9:	test   rbx,rbx
  42d9dc:	je     0x42dab5
  42d9e2:	test   r8,r8
  42d9e5:	je     0x42dae0
  42d9eb:	test   r9,r9
  42d9ee:	je     0x42da90
  42d9f4:	mov    r8,rdi
  42d9f7:	mov    rdx,r9
  42d9fa:	call   0x42d3a0
  42d9ff:	cmp    rax,0xffffffffffffffff
  42da03:	mov    rsi,rax
  42da06:	je     0x42da50
  42da08:	mov    rax,QWORD PTR [rsp+0x88]
  42da10:	mov    r9,QWORD PTR [rsp+0x80]
  42da18:	mov    r8,rsi
  42da1b:	mov    rdx,rbp
  42da1e:	mov    rcx,rbx
  42da21:	mov    QWORD PTR [rsp+0x28],rdi
  42da26:	mov    QWORD PTR [rsp+0x20],rax
  42da2b:	call   0x42d6c0
  42da30:	mov    rcx,rsi
  42da33:	mov    rbx,rax
  42da36:	call   0x42d130
  42da3b:	mov    rax,rbx
  42da3e:	add    rsp,0x38
  42da42:	pop    rbx
  42da43:	pop    rsi
  42da44:	pop    rdi
  42da45:	pop    rbp
  42da46:	ret    
  42da47:	nop    WORD PTR [rax+rax*1+0x0]
  42da50:	cmp    QWORD PTR [rsp+0x80],0x0
  42da59:	je     0x42da6a
  42da5b:	mov    rax,QWORD PTR [rsp+0x80]
  42da63:	mov    QWORD PTR [rax],0x0
  42da6a:	cmp    QWORD PTR [rsp+0x88],0x0
  42da73:	je     0x42daaa
  42da75:	mov    rax,QWORD PTR [rsp+0x88]
  42da7d:	mov    QWORD PTR [rax],0x0
  42da84:	xor    eax,eax
  42da86:	add    rsp,0x38
  42da8a:	pop    rbx
  42da8b:	pop    rsi
  42da8c:	pop    rdi
  42da8d:	pop    rbp
  42da8e:	ret    
  42da8f:	nop
  42da90:	lea    r8,[rip+0x4a9bc]        # 0x478453
  42da97:	lea    rdx,[rip+0x4ac6c]        # 0x47870a
  42da9e:	lea    rcx,[rip+0x4a6d3]        # 0x478178
  42daa5:	call   0x40fd20
  42daaa:	xor    eax,eax
  42daac:	add    rsp,0x38
  42dab0:	pop    rbx
  42dab1:	pop    rsi
  42dab2:	pop    rdi
  42dab3:	pop    rbp
  42dab4:	ret    
  42dab5:	lea    r8,[rip+0x4a978]        # 0x478434
  42dabc:	lea    rdx,[rip+0x4ac47]        # 0x47870a
  42dac3:	lea    rcx,[rip+0x4a6ae]        # 0x478178
  42daca:	call   0x40fd20
  42dacf:	xor    eax,eax
  42dad1:	add    rsp,0x38
  42dad5:	pop    rbx
  42dad6:	pop    rsi
  42dad7:	pop    rdi
  42dad8:	pop    rbp
  42dad9:	ret    
  42dada:	nop    WORD PTR [rax+rax*1+0x0]
  42dae0:	lea    r8,[rip+0x4a959]        # 0x478440
  42dae7:	lea    rdx,[rip+0x4ac1c]        # 0x47870a
  42daee:	lea    rcx,[rip+0x4a683]        # 0x478178
  42daf5:	call   0x40fd20
  42dafa:	xor    eax,eax
  42dafc:	add    rsp,0x38
  42db00:	pop    rbx
  42db01:	pop    rsi
  42db02:	pop    rdi
  42db03:	pop    rbp
  42db04:	ret    
  42db05:	nop
  42db06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db10:	push   r15
  42db12:	push   r14
  42db14:	push   r13
  42db16:	push   r12
  42db18:	push   rbp
  42db19:	push   rdi
  42db1a:	push   rsi
  42db1b:	push   rbx
  42db1c:	sub    rsp,0xa8
  42db23:	mov    r12,QWORD PTR [rsp+0x118]
  42db2b:	test   rcx,rcx
  42db2e:	mov    rsi,rcx
  42db31:	mov    rbx,rdx
  42db34:	mov    r15,r8
  42db37:	mov    rbp,r9
  42db3a:	mov    QWORD PTR [rsp+0x90],0x0
  42db46:	je     0x42def1
  42db4c:	test   r8,r8
  42db4f:	je     0x42ded0
  42db55:	test   r9,r9
  42db58:	je     0x42df90
  42db5e:	test   rdx,rdx
  42db61:	js     0x42deb0
  42db67:	lea    rax,[rsp+0x90]
  42db6f:	mov    QWORD PTR [rsp+0x20],r12
  42db74:	mov    r9,rbp
  42db77:	mov    r8,r15
  42db7a:	mov    rdx,rbx
  42db7d:	mov    rcx,rsi
  42db80:	mov    QWORD PTR [rsp+0x30],rax
  42db85:	mov    rax,QWORD PTR [rsp+0x120]
  42db8d:	mov    QWORD PTR [rsp+0x28],rax
  42db92:	call   0x42d9c0
  42db97:	cmp    QWORD PTR [rsp+0x90],0x0
  42dba0:	je     0x42dde1
  42dba6:	lea    rcx,[rip+0x4a6c9]        # 0x478276
  42dbad:	call   0x42fc00
  42dbb2:	mov    rcx,QWORD PTR [rsp+0x90]
  42dbba:	mov    r8d,0x1
  42dbc0:	mov    edx,eax
  42dbc2:	call   0x430610
  42dbc7:	test   eax,eax
  42dbc9:	je     0x42dfc0
  42dbcf:	mov    rcx,QWORD PTR [rsp+0x90]
  42dbd7:	call   0x4304e0
  42dbdc:	mov    r8,QWORD PTR [rsp+0x128]
  42dbe4:	lea    rdx,[rip+0x4a88b]        # 0x478476
  42dbeb:	mov    rcx,r15
  42dbee:	mov    QWORD PTR [rsp+0x90],0x0
  42dbfa:	call   0x42d3a0
  42dbff:	cmp    rax,0xffffffffffffffff
  42dc03:	mov    rdi,rax
  42dc06:	je     0x42de20
  42dc0c:	mov    rax,QWORD PTR [rsp+0x128]
  42dc14:	lea    r8,[rip+0x4a85b]        # 0x478476
  42dc1b:	mov    QWORD PTR [rsp+0x20],r12
  42dc20:	mov    r9,rbp
  42dc23:	mov    rdx,rbx
  42dc26:	mov    rcx,rsi
  42dc29:	mov    QWORD PTR [rsp+0x30],rax
  42dc2e:	lea    rax,[rsp+0x80]
  42dc36:	mov    QWORD PTR [rsp+0x28],rax
  42dc3b:	call   0x42d9c0
  42dc40:	test   rax,rax
  42dc43:	mov    QWORD PTR [rsp+0x50],rax
  42dc48:	je     0x42dfe0
  42dc4e:	mov    rax,QWORD PTR [rsp+0x50]
  42dc53:	mov    QWORD PTR [rsp+0x88],rbx
  42dc5b:	lea    r14,[rsp+0x70]
  42dc60:	lea    r13,[rsp+0x98]
  42dc68:	lea    r12,[rsp+0x78]
  42dc6d:	lea    rbp,[rsp+0x88]
  42dc75:	xor    esi,esi
  42dc77:	mov    QWORD PTR [rsp+0x78],rax
  42dc7c:	lea    rax,[rbx+0x4]
  42dc80:	xor    ebx,ebx
  42dc82:	mov    rcx,rax
  42dc85:	mov    QWORD PTR [rsp+0x58],rax
  42dc8a:	call   0x40e5c0
  42dc8f:	mov    QWORD PTR [rsp+0x48],rax
  42dc94:	mov    QWORD PTR [rsp+0x70],rax
  42dc99:	mov    rax,QWORD PTR [rsp+0x80]
  42dca1:	mov    QWORD PTR [rsp+0x60],0x0
  42dcaa:	nop    WORD PTR [rax+rax*1+0x0]
  42dcb0:	mov    rdx,r12
  42dcb3:	mov    QWORD PTR [rsp+0x20],rbp
  42dcb8:	mov    r9,r14
  42dcbb:	mov    r8,r13
  42dcbe:	mov    rcx,rdi
  42dcc1:	mov    QWORD PTR [rsp+0x98],rax
  42dcc9:	call   0x42d260
  42dcce:	mov    rdx,QWORD PTR [rsp+0x98]
  42dcd6:	cmp    rax,0xffffffffffffffff
  42dcda:	mov    QWORD PTR [rsp+0x80],rdx
  42dce2:	je     0x42dd10
  42dce4:	test   rbx,rbx
  42dce7:	je     0x42ddf5
  42dced:	cmp    QWORD PTR [rsp+0x110],0x0
  42dcf6:	je     0x42dec0
  42dcfc:	mov    QWORD PTR [rsp+0x78],rbx
  42dd01:	mov    QWORD PTR [rsp+0x80],rsi
  42dd09:	mov    rax,rsi
  42dd0c:	xor    ebx,ebx
  42dd0e:	jmp    0x42dcb0
  42dd10:	call   QWORD PTR [rip+0x58bca]        # 0x4868e0
  42dd16:	mov    eax,DWORD PTR [rax]
  42dd18:	cmp    eax,0x16
  42dd1b:	je     0x42df12
  42dd21:	cmp    eax,0x2a
  42dd24:	je     0x42df40
  42dd2a:	cmp    eax,0x7
  42dd2d:	je     0x42de50
  42dd33:	call   QWORD PTR [rip+0x58ba7]        # 0x4868e0
  42dd39:	mov    ecx,DWORD PTR [rax]
  42dd3b:	call   0x418cf0
  42dd40:	lea    rcx,[rip+0x4a52f]        # 0x478276
  42dd47:	mov    rsi,rax
  42dd4a:	call   0x42fc00
  42dd4f:	mov    rcx,QWORD PTR [rsp+0x128]
  42dd57:	lea    r9,[rip+0x4a675]        # 0x4783d3
  42dd5e:	mov    QWORD PTR [rsp+0x20],rsi
  42dd63:	mov    edx,eax
  42dd65:	mov    r8d,0x2
  42dd6b:	mov    esi,0x1
  42dd70:	call   0x430630
  42dd75:	mov    rax,QWORD PTR [rsp+0x70]
  42dd7a:	mov    rcx,rdi
  42dd7d:	mov    DWORD PTR [rax],0x0
  42dd83:	call   0x42d130
  42dd88:	cmp    QWORD PTR [rsp+0x120],0x0
  42dd91:	je     0x42dda8
  42dd93:	mov    rax,QWORD PTR [rsp+0x70]
  42dd98:	sub    rax,QWORD PTR [rsp+0x48]
  42dd9d:	mov    rdi,QWORD PTR [rsp+0x120]
  42dda5:	mov    QWORD PTR [rdi],rax
  42dda8:	mov    rcx,QWORD PTR [rsp+0x50]
  42ddad:	call   0x40e6e0
  42ddb2:	test   esi,esi
  42ddb4:	mov    rax,QWORD PTR [rsp+0x48]
  42ddb9:	je     0x42dde1
  42ddbb:	test   rbx,rbx
  42ddbe:	je     0x42ddd5
  42ddc0:	cmp    QWORD PTR [rsp+0x110],0x0
  42ddc9:	jne    0x42ddd5
  42ddcb:	mov    rcx,QWORD PTR [rsp+0x60]
  42ddd0:	call   0x40e6e0
  42ddd5:	mov    rcx,QWORD PTR [rsp+0x48]
  42ddda:	call   0x40e6e0
  42dddf:	xor    eax,eax
  42dde1:	add    rsp,0xa8
  42dde8:	pop    rbx
  42dde9:	pop    rsi
  42ddea:	pop    rdi
  42ddeb:	pop    rbp
  42ddec:	pop    r12
  42ddee:	pop    r13
  42ddf0:	pop    r14
  42ddf2:	pop    r15
  42ddf4:	ret    
  42ddf5:	cmp    QWORD PTR [rsp+0x78],0x0
  42ddfb:	je     0x42dfb1
  42de01:	mov    QWORD PTR [rsp+0x78],0x0
  42de0a:	mov    QWORD PTR [rsp+0x80],0x0
  42de16:	xor    eax,eax
  42de18:	jmp    0x42dcb0
  42de1d:	nop    DWORD PTR [rax]
  42de20:	test   r12,r12
  42de23:	je     0x42de2d
  42de25:	mov    QWORD PTR [r12],0x0
  42de2d:	cmp    QWORD PTR [rsp+0x120],0x0
  42de36:	je     0x42deea
  42de3c:	mov    rax,QWORD PTR [rsp+0x120]
  42de44:	mov    QWORD PTR [rax],0x0
  42de4b:	xor    eax,eax
  42de4d:	jmp    0x42dde1
  42de4f:	nop
  42de50:	shl    QWORD PTR [rsp+0x58],1
  42de55:	mov    r8,QWORD PTR [rsp+0x70]
  42de5a:	mov    rcx,QWORD PTR [rsp+0x48]
  42de5f:	mov    rax,QWORD PTR [rsp+0x58]
  42de64:	sub    r8,rcx
  42de67:	mov    rdx,rax
  42de6a:	mov    QWORD PTR [rsp+0x68],r8
  42de6f:	call   0x40e670
  42de74:	mov    r8,QWORD PTR [rsp+0x68]
  42de79:	mov    QWORD PTR [rsp+0x48],rax
  42de7e:	lea    rax,[rax+r8*1]
  42de82:	mov    QWORD PTR [rsp+0x70],rax
  42de87:	mov    rax,QWORD PTR [rsp+0x58]
  42de8c:	sub    rax,0x4
  42de90:	sub    rax,r8
  42de93:	mov    QWORD PTR [rsp+0x88],rax
  42de9b:	mov    rax,QWORD PTR [rsp+0x80]
  42dea3:	jmp    0x42dcb0
  42dea8:	nop    DWORD PTR [rax+rax*1+0x0]
  42deb0:	mov    rcx,rsi
  42deb3:	call   0x438788
  42deb8:	mov    rbx,rax
  42debb:	jmp    0x42db67
  42dec0:	mov    rcx,QWORD PTR [rsp+0x60]
  42dec5:	call   0x40e6e0
  42deca:	jmp    0x42dcfc
  42decf:	nop
  42ded0:	lea    r8,[rip+0x4a569]        # 0x478440
  42ded7:	lea    rdx,[rip+0x4a7e2]        # 0x4786c0
  42dede:	lea    rcx,[rip+0x4a293]        # 0x478178
  42dee5:	call   0x40fd20
  42deea:	xor    eax,eax
  42deec:	jmp    0x42dde1
  42def1:	lea    r8,[rip+0x4a53c]        # 0x478434
  42def8:	lea    rdx,[rip+0x4a7c1]        # 0x4786c0
  42deff:	lea    rcx,[rip+0x4a272]        # 0x478178
  42df06:	call   0x40fd20
  42df0b:	xor    eax,eax
  42df0d:	jmp    0x42dde1
  42df12:	lea    r9,[rip+0x4a7a7]        # 0x4786c0
  42df19:	lea    rdx,[rip+0x4a260]        # 0x478180
  42df20:	lea    rcx,[rip+0x4a251]        # 0x478178
  42df27:	mov    QWORD PTR [rsp+0x20],0x0
  42df30:	mov    r8d,0x40d
  42df36:	call   0x41e540
  42df3b:	nop    DWORD PTR [rax+rax*1+0x0]
  42df40:	test   rbx,rbx
  42df43:	je     0x42dff0
  42df49:	lea    rcx,[rip+0x4a326]        # 0x478276
  42df50:	call   0x42fc00
  42df55:	mov    rsi,QWORD PTR [rsp+0x60]
  42df5a:	mov    rcx,QWORD PTR [rsp+0x128]
  42df62:	lea    r9,[rip+0x4a517]        # 0x478480
  42df69:	mov    QWORD PTR [rsp+0x28],r15
  42df6e:	mov    r8d,0x1
  42df74:	mov    edx,eax
  42df76:	mov    QWORD PTR [rsp+0x20],rsi
  42df7b:	mov    esi,0x1
  42df80:	call   0x430630
  42df85:	jmp    0x42dd75
  42df8a:	nop    WORD PTR [rax+rax*1+0x0]
  42df90:	lea    r8,[rip+0x4a4bc]        # 0x478453
  42df97:	lea    rdx,[rip+0x4a722]        # 0x4786c0
  42df9e:	lea    rcx,[rip+0x4a1d3]        # 0x478178
  42dfa5:	call   0x40fd20
  42dfaa:	xor    eax,eax
  42dfac:	jmp    0x42dde1
  42dfb1:	xor    esi,esi
  42dfb3:	jmp    0x42dd75
  42dfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42dfc0:	mov    rdx,QWORD PTR [rsp+0x90]
  42dfc8:	mov    rcx,QWORD PTR [rsp+0x128]
  42dfd0:	call   0x4306e0
  42dfd5:	xor    eax,eax
  42dfd7:	jmp    0x42dde1
  42dfdc:	nop    DWORD PTR [rax+0x0]
  42dfe0:	mov    rcx,rdi
  42dfe3:	call   0x42d130
  42dfe8:	jmp    0x42de2d
  42dfed:	nop    DWORD PTR [rax]
  42dff0:	mov    rcx,QWORD PTR [rsp+0x78]
  42dff5:	test   rcx,rcx
  42dff8:	je     0x42dd33
  42dffe:	mov    rax,QWORD PTR [rsp+0x110]
  42e006:	test   rax,rax
  42e009:	mov    QWORD PTR [rsp+0x60],rax
  42e00e:	je     0x42e052
  42e010:	mov    rsi,QWORD PTR [rip+0x4dbd9]        # 0x47bbf0
  42e017:	movzx  eax,BYTE PTR [rcx]
  42e01a:	mov    rdx,QWORD PTR [rsi]
  42e01d:	mov    rsi,rcx
  42e020:	movsx  rbx,BYTE PTR [rdx+rax*1]
  42e025:	mov    rax,QWORD PTR [rsp+0x60]
  42e02a:	mov    QWORD PTR [rsp+0x78],rax
  42e02f:	add    rbx,rcx
  42e032:	mov    rcx,rax
  42e035:	sub    rsi,rbx
  42e038:	add    rsi,QWORD PTR [rsp+0x80]
  42e040:	call   0x438788
  42e045:	mov    QWORD PTR [rsp+0x80],rax
  42e04d:	jmp    0x42dcb0
  42e052:	call   0x4219f0
  42e057:	lea    rsi,[rip+0x4a40a]        # 0x478468
  42e05e:	lea    rcx,[rip+0x4a40a]        # 0x47846f
  42e065:	cmp    eax,0x10000
  42e06a:	mov    edx,eax
  42e06c:	cmovb  rcx,rsi
  42e070:	call   0x418470
  42e075:	mov    rcx,QWORD PTR [rsp+0x78]
  42e07a:	mov    QWORD PTR [rsp+0x60],rax
  42e07f:	jmp    0x42e010
  42e081:	nop    DWORD PTR [rax+rax*1+0x0]
  42e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e090:	push   rbp
  42e091:	push   rdi
  42e092:	push   rsi
  42e093:	push   rbx
  42e094:	sub    rsp,0x58
  42e098:	mov    rbx,rcx
  42e09b:	lea    rcx,[rsp+0x48]
  42e0a0:	mov    rsi,rdx
  42e0a3:	mov    rdi,r8
  42e0a6:	mov    rbp,r9
  42e0a9:	call   0x42aba0
  42e0ae:	test   eax,eax
  42e0b0:	mov    rax,QWORD PTR [rsp+0xa0]
  42e0b8:	jne    0x42e0f0
  42e0ba:	mov    r9,QWORD PTR [rsp+0x48]
  42e0bf:	lea    r8,[rip+0x4a3b0]        # 0x478476
  42e0c6:	mov    QWORD PTR [rsp+0x30],rax
  42e0cb:	mov    QWORD PTR [rsp+0x28],rbp
  42e0d0:	mov    QWORD PTR [rsp+0x20],rdi
  42e0d5:	mov    rdx,rsi
  42e0d8:	mov    rcx,rbx
  42e0db:	call   0x42d9c0
  42e0e0:	add    rsp,0x58
  42e0e4:	pop    rbx
  42e0e5:	pop    rsi
  42e0e6:	pop    rdi
  42e0e7:	pop    rbp
  42e0e8:	ret    
  42e0e9:	nop    DWORD PTR [rax+0x0]
  42e0f0:	mov    QWORD PTR [rsp+0x20],rax
  42e0f5:	mov    r9,rbp
  42e0f8:	mov    r8,rdi
  42e0fb:	mov    rdx,rsi
  42e0fe:	mov    rcx,rbx
  42e101:	call   0x42c360
  42e106:	add    rsp,0x58
  42e10a:	pop    rbx
  42e10b:	pop    rsi
  42e10c:	pop    rdi
  42e10d:	pop    rbp
  42e10e:	ret    
  42e10f:	nop
  42e110:	push   rbp
  42e111:	push   rdi
  42e112:	push   rsi
  42e113:	push   rbx
  42e114:	sub    rsp,0x58
  42e118:	mov    rbx,rcx
  42e11b:	lea    rcx,[rsp+0x48]
  42e120:	mov    rsi,rdx
  42e123:	mov    rdi,r8
  42e126:	mov    rbp,r9
  42e129:	call   0x42aba0
  42e12e:	test   eax,eax
  42e130:	mov    rax,QWORD PTR [rsp+0xa0]
  42e138:	jne    0x42e170
  42e13a:	mov    r8,QWORD PTR [rsp+0x48]
  42e13f:	lea    r9,[rip+0x4a330]        # 0x478476
  42e146:	mov    QWORD PTR [rsp+0x30],rax
  42e14b:	mov    QWORD PTR [rsp+0x28],rbp
  42e150:	mov    QWORD PTR [rsp+0x20],rdi
  42e155:	mov    rdx,rsi
  42e158:	mov    rcx,rbx
  42e15b:	call   0x42d9c0
  42e160:	add    rsp,0x58
  42e164:	pop    rbx
  42e165:	pop    rsi
  42e166:	pop    rdi
  42e167:	pop    rbp
  42e168:	ret    
  42e169:	nop    DWORD PTR [rax+0x0]
  42e170:	mov    QWORD PTR [rsp+0x20],rax
  42e175:	mov    r9,rbp
  42e178:	mov    r8,rdi
  42e17b:	mov    rdx,rsi
  42e17e:	mov    rcx,rbx
  42e181:	call   0x42c360
  42e186:	add    rsp,0x58
  42e18a:	pop    rbx
  42e18b:	pop    rsi
  42e18c:	pop    rdi
  42e18d:	pop    rbp
  42e18e:	ret    
  42e18f:	nop
  42e190:	test   rcx,rcx
  42e193:	je     0x42e19f
  42e195:	lea    rax,[rip+0xc5e4]        # 0x43a780
  42e19c:	mov    QWORD PTR [rcx],rax
  42e19f:	mov    eax,0x1
  42e1a4:	ret    
  42e1a5:	nop
  42e1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e1b0:	sub    rsp,0x28
  42e1b4:	test   rcx,rcx
  42e1b7:	je     0x42e1c2
  42e1b9:	add    rsp,0x28
  42e1bd:	jmp    0x42c360
  42e1c2:	lea    r8,[rip+0x4a2e4]        # 0x4784ad
  42e1c9:	lea    rdx,[rip+0x4a4d0]        # 0x4786a0
  42e1d0:	lea    rcx,[rip+0x49fa1]        # 0x478178
  42e1d7:	call   0x40fd20
  42e1dc:	xor    eax,eax
  42e1de:	add    rsp,0x28
  42e1e2:	ret    
  42e1e3:	nop    DWORD PTR [rax]
  42e1e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e1f0:	jmp    0x42c360
  42e1f5:	nop
  42e1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e200:	push   r13
  42e202:	push   r12
  42e204:	push   rbp
  42e205:	push   rdi
  42e206:	push   rsi
  42e207:	push   rbx
  42e208:	sub    rsp,0x38
  42e20c:	test   rdx,rdx
  42e20f:	mov    rbp,rcx
  42e212:	mov    rdi,rdx
  42e215:	mov    r12,r8
  42e218:	je     0x42e221
  42e21a:	mov    QWORD PTR [rdx],0x0
  42e221:	lea    rdx,[rip+0x4a299]        # 0x4784c1
  42e228:	mov    rcx,rbp
  42e22b:	call   0x42b920
  42e230:	test   eax,eax
  42e232:	je     0x42e444
  42e238:	lea    rsi,[rbp+0x5]
  42e23c:	mov    edx,0x23
  42e241:	mov    rcx,rsi
  42e244:	call   0x4387a8
  42e249:	test   rax,rax
  42e24c:	mov    rbx,rax
  42e24f:	jne    0x42e324
  42e255:	lea    rdx,[rip+0x4a2da]        # 0x478536
  42e25c:	mov    rcx,rsi
  42e25f:	call   0x42b920
  42e264:	test   eax,eax
  42e266:	je     0x42e360
  42e26c:	lea    rsi,[rbp+0x7]
  42e270:	lea    r8,[rip+0x4a309]        # 0x478580
  42e277:	xor    r9d,r9d
  42e27a:	mov    rcx,rsi
  42e27d:	mov    edx,0xffffffff
  42e282:	call   0x42b990
  42e287:	test   rax,rax
  42e28a:	mov    rsi,rax
  42e28d:	je     0x42e3f3
  42e293:	test   rdi,rdi
  42e296:	je     0x42e2b4
  42e298:	mov    rcx,QWORD PTR [rdi]
  42e29b:	test   rcx,rcx
  42e29e:	je     0x42e2b4
  42e2a0:	lea    rdx,[rip+0x4a314]        # 0x4785bb
  42e2a7:	call   0x419340
  42e2ac:	test   eax,eax
  42e2ae:	je     0x42e430
  42e2b4:	mov    rcx,rsi
  42e2b7:	jmp    0x42e2c7
  42e2b9:	nop    DWORD PTR [rax+0x0]
  42e2c0:	lea    rcx,[rax+0x1]
  42e2c4:	mov    BYTE PTR [rax],0x5c
  42e2c7:	mov    edx,0x2f
  42e2cc:	call   0x4387a8
  42e2d1:	test   rax,rax
  42e2d4:	jne    0x42e2c0
  42e2d6:	mov    rax,QWORD PTR [rip+0x4d863]        # 0x47bb40
  42e2dd:	movzx  ecx,BYTE PTR [rsi+0x1]
  42e2e1:	xor    edx,edx
  42e2e3:	mov    rax,QWORD PTR [rax]
  42e2e6:	test   BYTE PTR [rax+rcx*2],0x2
  42e2ea:	je     0x42e300
  42e2ec:	movzx  eax,BYTE PTR [rsi+0x2]
  42e2f0:	mov    dl,0x1
  42e2f2:	cmp    al,0x3a
  42e2f4:	je     0x42e300
  42e2f6:	xor    dl,dl
  42e2f8:	cmp    al,0x7c
  42e2fa:	je     0x42e420
  42e300:	lea    rcx,[rsi+rdx*1]
  42e304:	call   0x4182b0
  42e309:	mov    rcx,rsi
  42e30c:	mov    rbx,rax
  42e30f:	call   0x40e6e0
  42e314:	mov    rax,rbx
  42e317:	add    rsp,0x38
  42e31b:	pop    rbx
  42e31c:	pop    rsi
  42e31d:	pop    rdi
  42e31e:	pop    rbp
  42e31f:	pop    r12
  42e321:	pop    r13
  42e323:	ret    
  42e324:	lea    rcx,[rip+0x49f4b]        # 0x478276
  42e32b:	call   0x42fc00
  42e330:	lea    r9,[rip+0x4a1d1]        # 0x478508
  42e337:	mov    QWORD PTR [rsp+0x20],rbp
  42e33c:	mov    edx,eax
  42e33e:	mov    r8d,0x4
  42e344:	mov    rcx,r12
  42e347:	xor    ebx,ebx
  42e349:	call   0x430630
  42e34e:	mov    rax,rbx
  42e351:	add    rsp,0x38
  42e355:	pop    rbx
  42e356:	pop    rsi
  42e357:	pop    rdi
  42e358:	pop    rbp
  42e359:	pop    r12
  42e35b:	pop    r13
  42e35d:	ret    
  42e35e:	xchg   ax,ax
  42e360:	lea    rdx,[rip+0x49f63]        # 0x4782ca
  42e367:	mov    rcx,rsi
  42e36a:	call   0x42b920
  42e36f:	test   eax,eax
  42e371:	je     0x42e270
  42e377:	lea    rsi,[rbp+0x7]
  42e37b:	mov    edx,0x2f
  42e380:	mov    rcx,rsi
  42e383:	call   0x4387a8
  42e388:	test   rax,rax
  42e38b:	mov    r13,rax
  42e38e:	je     0x42e4e0
  42e394:	mov    rdx,rax
  42e397:	lea    r8,[rip+0x4a1b4]        # 0x478552
  42e39e:	mov    rcx,rsi
  42e3a1:	sub    rdx,rsi
  42e3a4:	mov    r9d,0x1
  42e3aa:	call   0x42b990
  42e3af:	test   rax,rax
  42e3b2:	mov    rsi,rax
  42e3b5:	je     0x42e471
  42e3bb:	cmp    BYTE PTR [rax],0x0
  42e3be:	jne    0x42e461
  42e3c4:	test   rdi,rdi
  42e3c7:	je     0x42e4a6
  42e3cd:	lea    r8,[rip+0x4a1ac]        # 0x478580
  42e3d4:	mov    QWORD PTR [rdi],rsi
  42e3d7:	xor    r9d,r9d
  42e3da:	mov    edx,0xffffffff
  42e3df:	mov    rcx,r13
  42e3e2:	call   0x42b990
  42e3e7:	test   rax,rax
  42e3ea:	mov    rsi,rax
  42e3ed:	jne    0x42e298
  42e3f3:	lea    rcx,[rip+0x49e7c]        # 0x478276
  42e3fa:	call   0x42fc00
  42e3ff:	lea    r9,[rip+0x4a182]        # 0x478588
  42e406:	mov    QWORD PTR [rsp+0x20],rbp
  42e40b:	mov    r8d,0x4
  42e411:	mov    edx,eax
  42e413:	mov    rcx,r12
  42e416:	call   0x430630
  42e41b:	jmp    0x42e314
  42e420:	mov    BYTE PTR [rsi+0x2],0x3a
  42e424:	mov    dl,0x1
  42e426:	jmp    0x42e300
  42e42b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e430:	mov    rcx,QWORD PTR [rdi]
  42e433:	call   0x40e6e0
  42e438:	mov    QWORD PTR [rdi],0x0
  42e43f:	jmp    0x42e2b4
  42e444:	lea    rcx,[rip+0x49e2b]        # 0x478276
  42e44b:	call   0x42fc00
  42e450:	mov    QWORD PTR [rsp+0x20],rbp
  42e455:	lea    r9,[rip+0x4a06c]        # 0x4784c8
  42e45c:	jmp    0x42e33c
  42e461:	mov    rcx,rax
  42e464:	call   0x42c2a0
  42e469:	test   eax,eax
  42e46b:	jne    0x42e3c4
  42e471:	mov    rcx,rsi
  42e474:	call   0x40e6e0
  42e479:	lea    rcx,[rip+0x49df6]        # 0x478276
  42e480:	call   0x42fc00
  42e485:	lea    r9,[rip+0x4a0cc]        # 0x478558
  42e48c:	mov    QWORD PTR [rsp+0x20],rbp
  42e491:	mov    r8d,0x4
  42e497:	mov    edx,eax
  42e499:	mov    rcx,r12
  42e49c:	call   0x430630
  42e4a1:	jmp    0x42e314
  42e4a6:	mov    rcx,rsi
  42e4a9:	call   0x40e6e0
  42e4ae:	lea    r8,[rip+0x4a0cb]        # 0x478580
  42e4b5:	xor    r9d,r9d
  42e4b8:	mov    edx,0xffffffff
  42e4bd:	mov    rcx,r13
  42e4c0:	call   0x42b990
  42e4c5:	test   rax,rax
  42e4c8:	mov    rsi,rax
  42e4cb:	jne    0x42e2b4
  42e4d1:	jmp    0x42e3f3
  42e4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e4e0:	lea    rcx,[rip+0x49d8f]        # 0x478276
  42e4e7:	call   0x42fc00
  42e4ec:	lea    r9,[rip+0x4a047]        # 0x47853a
  42e4f3:	mov    QWORD PTR [rsp+0x20],rbp
  42e4f8:	mov    r8d,0x4
  42e4fe:	mov    edx,eax
  42e500:	mov    rcx,r12
  42e503:	call   0x430630
  42e508:	jmp    0x42e314
  42e50d:	nop    DWORD PTR [rax]
  42e510:	push   rbp
  42e511:	push   rdi
  42e512:	push   rsi
  42e513:	push   rbx
  42e514:	sub    rsp,0x38
  42e518:	test   rcx,rcx
  42e51b:	mov    rsi,rcx
  42e51e:	mov    rbx,rdx
  42e521:	mov    rdi,r8
  42e524:	je     0x42e6a0
  42e52a:	call   0x407870
  42e52f:	test   eax,eax
  42e531:	je     0x42e6c5
  42e537:	test   rbx,rbx
  42e53a:	je     0x42e579
  42e53c:	xor    r8d,r8d
  42e53f:	mov    rdx,0xffffffffffffffff
  42e546:	mov    rcx,rbx
  42e549:	call   0x422ee0
  42e54e:	test   eax,eax
  42e550:	je     0x42e670
  42e556:	cmp    BYTE PTR [rbx],0x0
  42e559:	jne    0x42e660
  42e55f:	lea    rdx,[rip+0x4a055]        # 0x4785bb
  42e566:	mov    rcx,rbx
  42e569:	call   0x419340
  42e56e:	test   eax,eax
  42e570:	mov    eax,0x0
  42e575:	cmove  rbx,rax
  42e579:	mov    rcx,rsi
  42e57c:	call   0x4182b0
  42e581:	mov    rsi,rax
  42e584:	mov    rcx,rax
  42e587:	jmp    0x42e597
  42e589:	nop    DWORD PTR [rax+0x0]
  42e590:	lea    rcx,[rax+0x1]
  42e594:	mov    BYTE PTR [rax],0x2f
  42e597:	mov    edx,0x5c
  42e59c:	call   0x4387a8
  42e5a1:	test   rax,rax
  42e5a4:	jne    0x42e590
  42e5a6:	test   rbx,rbx
  42e5a9:	je     0x42e5b0
  42e5ab:	cmp    BYTE PTR [rbx],0x0
  42e5ae:	jne    0x42e5e0
  42e5b0:	mov    edx,0x8
  42e5b5:	mov    rcx,rsi
  42e5b8:	xor    ebp,ebp
  42e5ba:	call   0x42b7f0
  42e5bf:	cmp    BYTE PTR [rax],0x2f
  42e5c2:	mov    rdi,rax
  42e5c5:	lea    r8,[rip+0x49fb4]        # 0x478580
  42e5cc:	je     0x42e60c
  42e5ce:	xor    ebp,ebp
  42e5d0:	lea    rdx,[rip+0x49f7b]        # 0x478552
  42e5d7:	jmp    0x42e61b
  42e5d9:	nop    DWORD PTR [rax+0x0]
  42e5e0:	mov    edx,0x10
  42e5e5:	mov    rcx,rbx
  42e5e8:	call   0x42b7f0
  42e5ed:	mov    edx,0x8
  42e5f2:	mov    rcx,rsi
  42e5f5:	mov    rbp,rax
  42e5f8:	call   0x42b7f0
  42e5fd:	cmp    BYTE PTR [rax],0x2f
  42e600:	mov    rdi,rax
  42e603:	lea    r8,[rip+0x49f76]        # 0x478580
  42e60a:	jne    0x42e613
  42e60c:	lea    r8,[rip+0x49f3f]        # 0x478552
  42e613:	test   rbp,rbp
  42e616:	mov    rdx,rbp
  42e619:	je     0x42e5ce
  42e61b:	lea    rcx,[rip+0x49fe1]        # 0x478603
  42e622:	mov    r9,rdi
  42e625:	mov    QWORD PTR [rsp+0x20],0x0
  42e62e:	call   0x4184b0
  42e633:	mov    rcx,rsi
  42e636:	mov    rbx,rax
  42e639:	call   0x40e6e0
  42e63e:	mov    rcx,rbp
  42e641:	call   0x40e6e0
  42e646:	mov    rcx,rdi
  42e649:	call   0x40e6e0
  42e64e:	mov    rax,rbx
  42e651:	add    rsp,0x38
  42e655:	pop    rbx
  42e656:	pop    rsi
  42e657:	pop    rdi
  42e658:	pop    rbp
  42e659:	ret    
  42e65a:	nop    WORD PTR [rax+rax*1+0x0]
  42e660:	mov    rcx,rbx
  42e663:	call   0x42c2a0
  42e668:	test   eax,eax
  42e66a:	jne    0x42e55f
  42e670:	lea    rcx,[rip+0x49bff]        # 0x478276
  42e677:	call   0x42fc00
  42e67c:	lea    r9,[rip+0x49f6f]        # 0x4785f2
  42e683:	mov    edx,eax
  42e685:	mov    r8d,0x1
  42e68b:	mov    rcx,rdi
  42e68e:	call   0x430690
  42e693:	xor    eax,eax
  42e695:	jmp    0x42e651
  42e697:	nop    WORD PTR [rax+rax*1+0x0]
  42e6a0:	lea    r8,[rip+0x49f64]        # 0x47860b
  42e6a7:	lea    rdx,[rip+0x49fb2]        # 0x478660
  42e6ae:	lea    rcx,[rip+0x49ac3]        # 0x478178
  42e6b5:	call   0x40fd20
  42e6ba:	xor    eax,eax
  42e6bc:	add    rsp,0x38
  42e6c0:	pop    rbx
  42e6c1:	pop    rsi
  42e6c2:	pop    rdi
  42e6c3:	pop    rbp
  42e6c4:	ret    
  42e6c5:	lea    rcx,[rip+0x49baa]        # 0x478276
  42e6cc:	call   0x42fc00
  42e6d1:	lea    r9,[rip+0x49ef0]        # 0x4785c8
  42e6d8:	mov    edx,eax
  42e6da:	mov    QWORD PTR [rsp+0x20],rsi
  42e6df:	mov    r8d,0x5
  42e6e5:	mov    rcx,rdi
  42e6e8:	call   0x430630
  42e6ed:	xor    eax,eax
  42e6ef:	jmp    0x42e651
  42e6f4:	xchg   ax,ax
  42e6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e700:	push   rbp
  42e701:	push   rdi
  42e702:	push   rsi
  42e703:	push   rbx
  42e704:	sub    rsp,0x38
  42e708:	test   rcx,rcx
  42e70b:	mov    rbx,rcx
  42e70e:	je     0x42e875
  42e714:	mov    rdi,QWORD PTR [rip+0x4d425]        # 0x47bb40
  42e71b:	xor    esi,esi
  42e71d:	xor    ebp,ebp
  42e71f:	nop
  42e720:	movzx  eax,BYTE PTR [rbx]
  42e723:	cmp    al,0x23
  42e725:	je     0x42e7c8
  42e72b:	mov    r10,QWORD PTR [rdi]
  42e72e:	movzx  edx,al
  42e731:	test   BYTE PTR [r10+rdx*2+0x1],0x1
  42e737:	je     0x42e752
  42e739:	nop    DWORD PTR [rax+0x0]
  42e740:	add    rbx,0x1
  42e744:	movzx  edx,BYTE PTR [rbx]
  42e747:	test   BYTE PTR [r10+rdx*2+0x1],0x1
  42e74d:	mov    rax,rdx
  42e750:	jne    0x42e740
  42e752:	cmp    al,0xa
  42e754:	setne  cl
  42e757:	test   al,al
  42e759:	setne  dl
  42e75c:	test   cl,dl
  42e75e:	je     0x42e7c8
  42e760:	cmp    al,0xd
  42e762:	je     0x42e7c8
  42e764:	mov    rdx,rbx
  42e767:	jmp    0x42e777
  42e769:	nop    DWORD PTR [rax+0x0]
  42e770:	cmp    al,0xd
  42e772:	je     0x42e790
  42e774:	mov    rdx,rcx
  42e777:	movzx  eax,BYTE PTR [rdx+0x1]
  42e77b:	lea    rcx,[rdx+0x1]
  42e77f:	cmp    al,0xa
  42e781:	setne  r9b
  42e785:	test   al,al
  42e787:	setne  r8b
  42e78b:	test   r9b,r8b
  42e78e:	jne    0x42e770
  42e790:	cmp    rbx,rcx
  42e793:	jae    0x42e7c8
  42e795:	cmp    rbx,rdx
  42e798:	jae    0x42e7c8
  42e79a:	movzx  eax,BYTE PTR [rcx-0x1]
  42e79e:	test   BYTE PTR [r10+rax*2+0x1],0x1
  42e7a4:	jne    0x42e7bf
  42e7a6:	jmp    0x42e850
  42e7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42e7b0:	movzx  eax,BYTE PTR [rdx]
  42e7b3:	test   BYTE PTR [r10+rax*2+0x1],0x1
  42e7b9:	je     0x42e850
  42e7bf:	sub    rdx,0x1
  42e7c3:	cmp    rdx,rbx
  42e7c6:	jne    0x42e7b0
  42e7c8:	mov    edx,0xa
  42e7cd:	mov    rcx,rbx
  42e7d0:	call   0x4387a8
  42e7d5:	test   rax,rax
  42e7d8:	je     0x42e7f0
  42e7da:	add    rax,0x1
  42e7de:	mov    rbx,rax
  42e7e1:	jne    0x42e720
  42e7e7:	nop    WORD PTR [rax+rax*1+0x0]
  42e7f0:	lea    ecx,[rsi+0x1]
  42e7f3:	mov    edx,0x8
  42e7f8:	lea    ebx,[rsi-0x1]
  42e7fb:	movsxd rsi,esi
  42e7fe:	movsxd rcx,ecx
  42e801:	call   0x40e7a0
  42e806:	test   rbp,rbp
  42e809:	mov    QWORD PTR [rax+rsi*8],0x0
  42e811:	je     0x42e834
  42e813:	movsxd rbx,ebx
  42e816:	mov    rdx,rbp
  42e819:	lea    rcx,[rax+rbx*8]
  42e81d:	nop    DWORD PTR [rax]
  42e820:	mov    r8,QWORD PTR [rdx]
  42e823:	sub    rcx,0x8
  42e827:	mov    QWORD PTR [rcx+0x8],r8
  42e82b:	mov    rdx,QWORD PTR [rdx+0x8]
  42e82f:	test   rdx,rdx
  42e832:	jne    0x42e820
  42e834:	mov    rcx,rbp
  42e837:	mov    QWORD PTR [rsp+0x28],rax
  42e83c:	call   0x4170b0
  42e841:	mov    rax,QWORD PTR [rsp+0x28]
  42e846:	add    rsp,0x38
  42e84a:	pop    rbx
  42e84b:	pop    rsi
  42e84c:	pop    rdi
  42e84d:	pop    rbp
  42e84e:	ret    
  42e84f:	nop
  42e850:	sub    rdx,rbx
  42e853:	mov    rcx,rbx
  42e856:	add    esi,0x1
  42e859:	add    rdx,0x1
  42e85d:	call   0x418340
  42e862:	mov    rcx,rbp
  42e865:	mov    rdx,rax
  42e868:	call   0x417180
  42e86d:	mov    rbp,rax
  42e870:	jmp    0x42e7c8
  42e875:	mov    edx,0x8
  42e87a:	mov    ecx,0x1
  42e87f:	xor    ebp,ebp
  42e881:	call   0x40e7a0
  42e886:	mov    QWORD PTR [rax],0x0
  42e88d:	jmp    0x42e834
  42e88f:	nop
  42e890:	push   rsi
  42e891:	push   rbx
  42e892:	sub    rsp,0x48
  42e896:	xor    r8d,r8d
  42e899:	mov    rdx,0xffffffffffffffff
  42e8a0:	mov    rsi,rcx
  42e8a3:	call   0x422ee0
  42e8a8:	test   eax,eax
  42e8aa:	jne    0x42e910
  42e8ac:	mov    r9,QWORD PTR [rip+0xbed5]        # 0x43a788
  42e8b3:	lea    rbx,[rip+0xbec6]        # 0x43a780
  42e8ba:	test   r9,r9
  42e8bd:	jne    0x42e8ce
  42e8bf:	jmp    0x42e924
  42e8c1:	add    rbx,0x8
  42e8c5:	mov    r9,QWORD PTR [rbx+0x8]
  42e8c9:	test   r9,r9
  42e8cc:	je     0x42e924
  42e8ce:	lea    r8,[rip+0x49ba1]        # 0x478476
  42e8d5:	mov    QWORD PTR [rsp+0x30],0x0
  42e8de:	mov    QWORD PTR [rsp+0x28],0x0
  42e8e7:	mov    QWORD PTR [rsp+0x20],0x0
  42e8f0:	mov    rdx,0xffffffffffffffff
  42e8f7:	mov    rcx,rsi
  42e8fa:	call   0x42d9c0
  42e8ff:	test   rax,rax
  42e902:	je     0x42e8c1
  42e904:	add    rsp,0x48
  42e908:	pop    rbx
  42e909:	pop    rsi
  42e90a:	ret    
  42e90b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e910:	mov    rcx,rsi
  42e913:	call   0x4182b0
  42e918:	test   rax,rax
  42e91b:	je     0x42e8ac
  42e91d:	add    rsp,0x48
  42e921:	pop    rbx
  42e922:	pop    rsi
  42e923:	ret    
  42e924:	mov    rcx,rsi
  42e927:	add    rsp,0x48
  42e92b:	pop    rbx
  42e92c:	pop    rsi
  42e92d:	jmp    0x4232d0
  42e932:	nop    DWORD PTR [rax+0x0]
  42e936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e940:	push   rsi
  42e941:	push   rbx
  42e942:	sub    rsp,0x28
  42e946:	test   rcx,rcx
  42e949:	je     0x42e970
  42e94b:	call   0x407ca0
  42e950:	mov    rsi,rax
  42e953:	mov    rcx,rax
  42e956:	call   0x42e890
  42e95b:	mov    rcx,rsi
  42e95e:	mov    rbx,rax
  42e961:	call   0x40e6e0
  42e966:	mov    rax,rbx
  42e969:	add    rsp,0x28
  42e96d:	pop    rbx
  42e96e:	pop    rsi
  42e96f:	ret    
  42e970:	lea    r8,[rip+0x49c94]        # 0x47860b
  42e977:	lea    rdx,[rip+0x49ca2]        # 0x478620
  42e97e:	lea    rcx,[rip+0x497f3]        # 0x478178
  42e985:	call   0x40fd20
  42e98a:	xor    eax,eax
  42e98c:	add    rsp,0x28
  42e990:	pop    rbx
  42e991:	pop    rsi
  42e992:	ret    
  42e993:	nop
  42e994:	nop
  42e995:	nop
  42e996:	nop
  42e997:	nop
  42e998:	nop
  42e999:	nop
  42e99a:	nop
  42e99b:	nop
  42e99c:	nop
  42e99d:	nop
  42e99e:	nop
  42e99f:	nop
  42e9a0:	push   rdi
  42e9a1:	push   rsi
  42e9a2:	push   rbx
  42e9a3:	sub    rsp,0x20
  42e9a7:	mov    rdi,QWORD PTR [rcx]
  42e9aa:	mov    rbx,rcx
  42e9ad:	mfence 
  42e9b0:	test   QWORD PTR [rbx+0x8],0xfffffffffffffff8
  42e9b8:	je     0x42ea7c
  42e9be:	mfence 
  42e9c1:	mov    rsi,QWORD PTR [rbx+0x8]
  42e9c5:	lea    r8,[rbx+0x8]
  42e9c9:	and    rsi,0xfffffffffffffff8
  42e9cd:	nop    DWORD PTR [rax]
  42e9d0:	mfence 
  42e9d3:	mov    rax,QWORD PTR [rbx+0x8]
  42e9d7:	mov    r9,rax
  42e9da:	and    r9d,0x7
  42e9de:	lock cmpxchg QWORD PTR [r8],r9
  42e9e3:	jne    0x42e9d0
  42e9e5:	test   rsi,rsi
  42e9e8:	je     0x42ea38
  42e9ea:	lea    rcx,[rip+0x55d1f]        # 0x484710
  42e9f1:	xor    ebx,ebx
  42e9f3:	call   0x426d70
  42e9f8:	mov    eax,DWORD PTR [rsi]
  42e9fa:	test   eax,eax
  42e9fc:	je     0x42ea24
  42e9fe:	movsxd rax,ebx
  42ea01:	lea    rax,[rax+rax*2]
  42ea05:	lea    rax,[rsi+rax*8]
  42ea09:	mov    rcx,QWORD PTR [rax+0x10]
  42ea0d:	test   rcx,rcx
  42ea10:	je     0x42ea1d
  42ea12:	mov    rax,QWORD PTR [rax+0x18]
  42ea16:	test   rax,rax
  42ea19:	je     0x42ea1d
  42ea1b:	call   rax
  42ea1d:	add    ebx,0x1
  42ea20:	cmp    ebx,DWORD PTR [rsi]
  42ea22:	jb     0x42e9fe
  42ea24:	lea    rcx,[rip+0x55ce5]        # 0x484710
  42ea2b:	call   0x426d40
  42ea30:	mov    rcx,rsi
  42ea33:	call   0x40e6e0
  42ea38:	mov    rbx,QWORD PTR [rip+0x55cc1]        # 0x484700
  42ea3f:	test   rbx,rbx
  42ea42:	je     0x42ea4d
  42ea44:	cmp    rdi,QWORD PTR [rbx]
  42ea47:	je     0x42e9ad
  42ea4d:	mov    rcx,QWORD PTR [rip+0x55cb4]        # 0x484708
  42ea54:	mov    rdx,rdi
  42ea57:	call   0x408de0
  42ea5c:	test   rax,rax
  42ea5f:	mov    rbx,rax
  42ea62:	je     0x42eab3
  42ea64:	mov    QWORD PTR [rip+0x55c95],rax        # 0x484700
  42ea6b:	mfence 
  42ea6e:	test   QWORD PTR [rbx+0x8],0xfffffffffffffff8
  42ea76:	jne    0x42e9be
  42ea7c:	cmp    QWORD PTR [rip+0x55c7d],rbx        # 0x484700
  42ea83:	jne    0x42ea90
  42ea85:	mov    QWORD PTR [rip+0x55c70],0x0        # 0x484700
  42ea90:	mov    rcx,QWORD PTR [rip+0x55c71]        # 0x484708
  42ea97:	mov    rdx,rdi
  42ea9a:	call   0x4091d0
  42ea9f:	mov    rdx,rbx
  42eaa2:	mov    ecx,0x10
  42eaa7:	add    rsp,0x20
  42eaab:	pop    rbx
  42eaac:	pop    rsi
  42eaad:	pop    rdi
  42eaae:	jmp    0x4167c0
  42eab3:	add    rsp,0x20
  42eab7:	pop    rbx
  42eab8:	pop    rsi
  42eab9:	pop    rdi
  42eaba:	ret    
  42eabb:	nop    DWORD PTR [rax+rax*1+0x0]
  42eac0:	push   rsi
  42eac1:	push   rbx
  42eac2:	sub    rsp,0x28
  42eac6:	test   rcx,rcx
  42eac9:	je     0x42eb4a
  42eacb:	mov    rbx,rcx
  42eace:	mov    edx,0x2
  42ead3:	call   0x432a10
  42ead8:	mfence 
  42eadb:	mov    rsi,QWORD PTR [rbx]
  42eade:	and    rsi,0xfffffffffffffff8
  42eae2:	mfence 
  42eae5:	mov    rax,QWORD PTR [rbx]
  42eae8:	mov    rdx,rax
  42eaeb:	and    edx,0x7
  42eaee:	lock cmpxchg QWORD PTR [rbx],rdx
  42eaf3:	jne    0x42eae2
  42eaf5:	mov    edx,0x2
  42eafa:	mov    rcx,rbx
  42eafd:	call   0x432b10
  42eb02:	test   rsi,rsi
  42eb05:	je     0x42eb43
  42eb07:	mov    eax,DWORD PTR [rsi]
  42eb09:	xor    ebx,ebx
  42eb0b:	test   eax,eax
  42eb0d:	je     0x42eb35
  42eb0f:	movsxd rax,ebx
  42eb12:	lea    rax,[rax+rax*2]
  42eb16:	lea    rax,[rsi+rax*8]
  42eb1a:	mov    rcx,QWORD PTR [rax+0x10]
  42eb1e:	test   rcx,rcx
  42eb21:	je     0x42eb2e
  42eb23:	mov    rax,QWORD PTR [rax+0x18]
  42eb27:	test   rax,rax
  42eb2a:	je     0x42eb2e
  42eb2c:	call   rax
  42eb2e:	add    ebx,0x1
  42eb31:	cmp    ebx,DWORD PTR [rsi]
  42eb33:	jb     0x42eb0f
  42eb35:	mov    rcx,rsi
  42eb38:	add    rsp,0x28
  42eb3c:	pop    rbx
  42eb3d:	pop    rsi
  42eb3e:	jmp    0x40e6e0
  42eb43:	add    rsp,0x28
  42eb47:	pop    rbx
  42eb48:	pop    rsi
  42eb49:	ret    
  42eb4a:	lea    r8,[rip+0x4bcaf]        # 0x47a800
  42eb51:	lea    rdx,[rip+0x4bf68]        # 0x47aac0
  42eb58:	lea    rcx,[rip+0x4bcb2]        # 0x47a811
  42eb5f:	add    rsp,0x28
  42eb63:	pop    rbx
  42eb64:	pop    rsi
  42eb65:	jmp    0x40fd20
  42eb6a:	nop    WORD PTR [rax+rax*1+0x0]
  42eb70:	push   rbx
  42eb71:	sub    rsp,0x20
  42eb75:	test   rcx,rcx
  42eb78:	je     0x42ebd3
  42eb7a:	mov    rbx,rcx
  42eb7d:	lea    rcx,[rip+0x55b8c]        # 0x484710
  42eb84:	call   0x426d40
  42eb89:	mov    rcx,QWORD PTR [rip+0x55b78]        # 0x484708
  42eb90:	test   rcx,rcx
  42eb93:	je     0x42ebc2
  42eb95:	mov    rax,QWORD PTR [rip+0x55b64]        # 0x484700
  42eb9c:	test   rax,rax
  42eb9f:	je     0x42eba6
  42eba1:	cmp    rbx,QWORD PTR [rax]
  42eba4:	je     0x42ebba
  42eba6:	mov    rdx,rbx
  42eba9:	call   0x408de0
  42ebae:	test   rax,rax
  42ebb1:	je     0x42ebc2
  42ebb3:	mov    QWORD PTR [rip+0x55b46],rax        # 0x484700
  42ebba:	mov    rcx,rax
  42ebbd:	call   0x42e9a0
  42ebc2:	lea    rcx,[rip+0x55b47]        # 0x484710
  42ebc9:	add    rsp,0x20
  42ebcd:	pop    rbx
  42ebce:	jmp    0x426d70
  42ebd3:	lea    r8,[rip+0x4bc3c]        # 0x47a816
  42ebda:	lea    rdx,[rip+0x4bebf]        # 0x47aaa0
  42ebe1:	lea    rcx,[rip+0x4bc29]        # 0x47a811
  42ebe8:	add    rsp,0x20
  42ebec:	pop    rbx
  42ebed:	jmp    0x40fd20
  42ebf2:	nop    DWORD PTR [rax+0x0]
  42ebf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec00:	push   r14
  42ec02:	push   r13
  42ec04:	push   r12
  42ec06:	push   rbp
  42ec07:	push   rdi
  42ec08:	push   rsi
  42ec09:	push   rbx
  42ec0a:	sub    rsp,0x20
  42ec0e:	test   rcx,rcx
  42ec11:	je     0x42ec64
  42ec13:	test   r9,r9
  42ec16:	sete   r12b
  42ec1a:	test   r8,r8
  42ec1d:	setne  al
  42ec20:	jne    0x42ec30
  42ec22:	test   r12b,r12b
  42ec25:	jne    0x42ec30
  42ec27:	lea    r8,[rip+0x4bc0c]        # 0x47a83a
  42ec2e:	jmp    0x42ec43
  42ec30:	test   edx,edx
  42ec32:	jne    0x42ec6d
  42ec34:	test   al,al
  42ec36:	je     0x42ee70
  42ec3c:	lea    r8,[rip+0x4bbec]        # 0x47a82f
  42ec43:	lea    rdx,[rip+0x4be16]        # 0x47aa60
  42ec4a:	lea    rcx,[rip+0x4bbc0]        # 0x47a811
  42ec51:	add    rsp,0x20
  42ec55:	pop    rbx
  42ec56:	pop    rsi
  42ec57:	pop    rdi
  42ec58:	pop    rbp
  42ec59:	pop    r12
  42ec5b:	pop    r13
  42ec5d:	pop    r14
  42ec5f:	jmp    0x40fd20
  42ec64:	lea    r8,[rip+0x4bb95]        # 0x47a800
  42ec6b:	jmp    0x42ec43
  42ec6d:	mov    rbx,rcx
  42ec70:	mov    r13d,edx
  42ec73:	mov    edx,0x2
  42ec78:	mov    rsi,r8
  42ec7b:	mov    rdi,r9
  42ec7e:	call   0x432a10
  42ec83:	mfence 
  42ec86:	mov    rbp,QWORD PTR [rbx]
  42ec89:	and    rbp,0xfffffffffffffff8
  42ec8d:	test   rsi,rsi
  42ec90:	mov    r14,rbp
  42ec93:	je     0x42edbb
  42ec99:	test   rbp,rbp
  42ec9c:	je     0x42ed9f
  42eca2:	mov    ecx,DWORD PTR [rbp+0x0]
  42eca5:	lea    rax,[rbp+0x8]
  42eca9:	lea    r8,[rcx+rcx*2]
  42ecad:	mov    rdx,rcx
  42ecb0:	lea    r8,[rax+r8*8]
  42ecb4:	cmp    rax,r8
  42ecb7:	jae    0x42eccf
  42ecb9:	cmp    r13d,DWORD PTR [rbp+0x8]
  42ecbd:	jne    0x42ecc6
  42ecbf:	jmp    0x42ed09
  42ecc1:	cmp    r13d,DWORD PTR [rax]
  42ecc4:	je     0x42ed09
  42ecc6:	add    rax,0x18
  42ecca:	cmp    r8,rax
  42eccd:	ja     0x42ecc1
  42eccf:	cmp    edx,DWORD PTR [rbp+0x4]
  42ecd2:	je     0x42ed4c
  42ecd4:	lea    rax,[rcx+rcx*2]
  42ecd8:	add    edx,0x1
  42ecdb:	lea    rax,[r14+rax*8]
  42ecdf:	mov    DWORD PTR [rax+0x8],r13d
  42ece3:	mov    QWORD PTR [rax+0x10],rsi
  42ece7:	mov    QWORD PTR [rax+0x18],rdi
  42eceb:	mov    DWORD PTR [r14],edx
  42ecee:	mov    edx,0x2
  42ecf3:	mov    rcx,rbx
  42ecf6:	add    rsp,0x20
  42ecfa:	pop    rbx
  42ecfb:	pop    rsi
  42ecfc:	pop    rdi
  42ecfd:	pop    rbp
  42ecfe:	pop    r12
  42ed00:	pop    r13
  42ed02:	pop    r14
  42ed04:	jmp    0x432b10
  42ed09:	mov    rbp,QWORD PTR [rax+0x10]
  42ed0d:	test   rbp,rbp
  42ed10:	je     0x42ed42
  42ed12:	mov    r12,QWORD PTR [rax+0x8]
  42ed16:	mov    QWORD PTR [rax+0x10],rdi
  42ed1a:	mov    rcx,rbx
  42ed1d:	mov    QWORD PTR [rax+0x8],rsi
  42ed21:	mov    edx,0x2
  42ed26:	call   0x432b10
  42ed2b:	mov    rcx,r12
  42ed2e:	mov    rax,rbp
  42ed31:	add    rsp,0x20
  42ed35:	pop    rbx
  42ed36:	pop    rsi
  42ed37:	pop    rdi
  42ed38:	pop    rbp
  42ed39:	pop    r12
  42ed3b:	pop    r13
  42ed3d:	pop    r14
  42ed3f:	rex.W jmp rax
  42ed42:	mov    QWORD PTR [rax+0x8],rsi
  42ed46:	mov    QWORD PTR [rax+0x10],rdi
  42ed4a:	jmp    0x42ecee
  42ed4c:	add    edx,edx
  42ed4e:	mov    rcx,rbp
  42ed51:	lea    eax,[rdx-0x1]
  42ed54:	mov    DWORD PTR [rbp+0x4],edx
  42ed57:	lea    rax,[rax+rax*2]
  42ed5b:	lea    rdx,[rax*8+0x20]
  42ed63:	call   0x40e670
  42ed68:	cmp    rbp,rax
  42ed6b:	mov    r8,rax
  42ed6e:	je     0x42ed94
  42ed70:	mfence 
  42ed73:	mov    rax,QWORD PTR [rbx]
  42ed76:	mov    rdx,rax
  42ed79:	and    edx,0x7
  42ed7c:	or     rdx,r8
  42ed7f:	lock cmpxchg QWORD PTR [rbx],rdx
  42ed84:	jne    0x42ed70
  42ed86:	mov    ecx,DWORD PTR [r8]
  42ed89:	mov    r14,r8
  42ed8c:	mov    rdx,rcx
  42ed8f:	jmp    0x42ecd4
  42ed94:	mov    ecx,DWORD PTR [rbp+0x0]
  42ed97:	mov    rdx,rcx
  42ed9a:	jmp    0x42ecd4
  42ed9f:	mov    ecx,0x20
  42eda4:	call   0x40e5c0
  42eda9:	mov    r8,rax
  42edac:	mov    DWORD PTR [rax],0x0
  42edb2:	mov    DWORD PTR [rax+0x4],0x1
  42edb9:	jmp    0x42ed70
  42edbb:	test   rbp,rbp
  42edbe:	je     0x42ecee
  42edc4:	mov    edx,DWORD PTR [rbp+0x0]
  42edc7:	lea    rax,[rbp+0x8]
  42edcb:	mov    rcx,rdx
  42edce:	lea    rdx,[rdx+rdx*2]
  42edd2:	lea    rdx,[rax+rdx*8-0x18]
  42edd7:	cmp    rax,rdx
  42edda:	ja     0x42ecee
  42ede0:	cmp    r13d,DWORD PTR [rbp+0x8]
  42ede4:	je     0x42edf8
  42ede6:	add    rax,0x18
  42edea:	cmp    rdx,rax
  42eded:	jb     0x42ecee
  42edf3:	cmp    r13d,DWORD PTR [rax]
  42edf6:	jne    0x42ede6
  42edf8:	cmp    rdx,rax
  42edfb:	mov    rdi,QWORD PTR [rax+0x8]
  42edff:	mov    rsi,QWORD PTR [rax+0x10]
  42ee03:	je     0x42ee1b
  42ee05:	mov    r8,QWORD PTR [rdx]
  42ee08:	mov    QWORD PTR [rax],r8
  42ee0b:	mov    r8,QWORD PTR [rdx+0x8]
  42ee0f:	mov    QWORD PTR [rax+0x8],r8
  42ee13:	mov    rdx,QWORD PTR [rdx+0x10]
  42ee17:	mov    QWORD PTR [rax+0x10],rdx
  42ee1b:	lea    eax,[rcx-0x1]
  42ee1e:	test   eax,eax
  42ee20:	mov    DWORD PTR [rbp+0x0],eax
  42ee23:	jne    0x42ee4f
  42ee25:	mfence 
  42ee28:	mov    rax,QWORD PTR [rbx]
  42ee2b:	mov    rdx,rax
  42ee2e:	and    edx,0x7
  42ee31:	lock cmpxchg QWORD PTR [rbx],rdx
  42ee36:	jne    0x42ee25
  42ee38:	mov    rcx,rbp
  42ee3b:	call   0x40e6e0
  42ee40:	mov    edx,0x2
  42ee45:	mov    rcx,rbx
  42ee48:	call   0x432b10
  42ee4d:	jmp    0x42ee5c
  42ee4f:	mov    edx,0x2
  42ee54:	mov    rcx,rbx
  42ee57:	call   0x432b10
  42ee5c:	test   rsi,rsi
  42ee5f:	je     0x42ee70
  42ee61:	test   r12b,r12b
  42ee64:	mov    rcx,rdi
  42ee67:	mov    rax,rsi
  42ee6a:	jne    0x42ed31
  42ee70:	add    rsp,0x20
  42ee74:	pop    rbx
  42ee75:	pop    rsi
  42ee76:	pop    rdi
  42ee77:	pop    rbp
  42ee78:	pop    r12
  42ee7a:	pop    r13
  42ee7c:	pop    r14
  42ee7e:	ret    
  42ee7f:	nop
  42ee80:	push   rdi
  42ee81:	push   rsi
  42ee82:	push   rbx
  42ee83:	sub    rsp,0x20
  42ee87:	test   rcx,rcx
  42ee8a:	mov    rbx,rcx
  42ee8d:	mov    edi,edx
  42ee8f:	je     0x42ef53
  42ee95:	lea    rcx,[rip+0x55874]        # 0x484710
  42ee9c:	call   0x426d40
  42eea1:	test   edi,edi
  42eea3:	je     0x42ef3a
  42eea9:	mov    rcx,QWORD PTR [rip+0x55858]        # 0x484708
  42eeb0:	test   rcx,rcx
  42eeb3:	je     0x42ef3a
  42eeb9:	mov    rsi,QWORD PTR [rip+0x55840]        # 0x484700
  42eec0:	test   rsi,rsi
  42eec3:	je     0x42eeca
  42eec5:	cmp    rbx,QWORD PTR [rsi]
  42eec8:	je     0x42eee1
  42eeca:	mov    rdx,rbx
  42eecd:	call   0x408de0
  42eed2:	test   rax,rax
  42eed5:	je     0x42ef3a
  42eed7:	mov    QWORD PTR [rip+0x55822],rax        # 0x484700
  42eede:	mov    rsi,rax
  42eee1:	lea    rbx,[rsi+0x8]
  42eee5:	mov    edx,0x2
  42eeea:	mov    rcx,rbx
  42eeed:	call   0x432a10
  42eef2:	mfence 
  42eef5:	mov    rcx,QWORD PTR [rsi+0x8]
  42eef9:	and    rcx,0xfffffffffffffff8
  42eefd:	je     0x42ef2d
  42eeff:	mov    edx,DWORD PTR [rcx]
  42ef01:	lea    rax,[rcx+0x8]
  42ef05:	mov    r9,rdx
  42ef08:	lea    rdx,[rdx+rdx*2]
  42ef0c:	lea    r8,[rax+rdx*8-0x18]
  42ef11:	cmp    rax,r8
  42ef14:	ja     0x42ef2d
  42ef16:	cmp    edi,DWORD PTR [rcx+0x8]
  42ef19:	jne    0x42ef24
  42ef1b:	jmp    0x42ef77
  42ef1d:	nop    DWORD PTR [rax]
  42ef20:	cmp    edi,DWORD PTR [rax]
  42ef22:	je     0x42ef77
  42ef24:	add    rax,0x18
  42ef28:	cmp    r8,rax
  42ef2b:	jae    0x42ef20
  42ef2d:	mov    edx,0x2
  42ef32:	mov    rcx,rbx
  42ef35:	call   0x432b10
  42ef3a:	xor    edi,edi
  42ef3c:	lea    rcx,[rip+0x557cd]        # 0x484710
  42ef43:	call   0x426d70
  42ef48:	mov    rax,rdi
  42ef4b:	add    rsp,0x20
  42ef4f:	pop    rbx
  42ef50:	pop    rsi
  42ef51:	pop    rdi
  42ef52:	ret    
  42ef53:	lea    r8,[rip+0x4b8bc]        # 0x47a816
  42ef5a:	lea    rdx,[rip+0x4badf]        # 0x47aa40
  42ef61:	lea    rcx,[rip+0x4b8a9]        # 0x47a811
  42ef68:	call   0x40fd20
  42ef6d:	xor    eax,eax
  42ef6f:	add    rsp,0x20
  42ef73:	pop    rbx
  42ef74:	pop    rsi
  42ef75:	pop    rdi
  42ef76:	ret    
  42ef77:	cmp    r8,rax
  42ef7a:	mov    rdi,QWORD PTR [rax+0x8]
  42ef7e:	je     0x42ef96
  42ef80:	mov    rdx,QWORD PTR [r8]
  42ef83:	mov    QWORD PTR [rax],rdx
  42ef86:	mov    rdx,QWORD PTR [r8+0x8]
  42ef8a:	mov    QWORD PTR [rax+0x8],rdx
  42ef8e:	mov    rdx,QWORD PTR [r8+0x10]
  42ef92:	mov    QWORD PTR [rax+0x10],rdx
  42ef96:	lea    eax,[r9-0x1]
  42ef9a:	test   eax,eax
  42ef9c:	mov    DWORD PTR [rcx],eax
  42ef9e:	jne    0x42efd3
  42efa0:	mfence 
  42efa3:	mov    rax,QWORD PTR [rsi+0x8]
  42efa7:	mov    rdx,rax
  42efaa:	and    edx,0x7
  42efad:	lock cmpxchg QWORD PTR [rbx],rdx
  42efb2:	jne    0x42efa0
  42efb4:	call   0x40e6e0
  42efb9:	mov    rcx,rbx
  42efbc:	mov    edx,0x2
  42efc1:	call   0x432b10
  42efc6:	mov    rcx,rsi
  42efc9:	call   0x42e9a0
  42efce:	jmp    0x42ef3c
  42efd3:	mov    edx,0x2
  42efd8:	mov    rcx,rbx
  42efdb:	call   0x432b10
  42efe0:	jmp    0x42ef3c
  42efe5:	nop
  42efe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eff0:	push   rsi
  42eff1:	push   rbx
  42eff2:	sub    rsp,0x28
  42eff6:	test   rcx,rcx
  42eff9:	mov    rbx,rcx
  42effc:	mov    esi,edx
  42effe:	je     0x42f067
  42f000:	test   edx,edx
  42f002:	jne    0x42f00d
  42f004:	xor    eax,eax
  42f006:	add    rsp,0x28
  42f00a:	pop    rbx
  42f00b:	pop    rsi
  42f00c:	ret    
  42f00d:	mov    rcx,rbx
  42f010:	mov    edx,0x2
  42f015:	call   0x432a10
  42f01a:	mfence 
  42f01d:	mov    rcx,QWORD PTR [rbx]
  42f020:	and    rcx,0xfffffffffffffff8
  42f024:	je     0x42f051
  42f026:	mov    edx,DWORD PTR [rcx]
  42f028:	lea    rax,[rcx+0x8]
  42f02c:	mov    r9,rdx
  42f02f:	lea    rdx,[rdx+rdx*2]
  42f033:	lea    r8,[rax+rdx*8-0x18]
  42f038:	cmp    rax,r8
  42f03b:	ja     0x42f051
  42f03d:	cmp    esi,DWORD PTR [rcx+0x8]
  42f040:	jne    0x42f048
  42f042:	jmp    0x42f08a
  42f044:	cmp    esi,DWORD PTR [rax]
  42f046:	je     0x42f08a
  42f048:	add    rax,0x18
  42f04c:	cmp    r8,rax
  42f04f:	jae    0x42f044
  42f051:	mov    edx,0x2
  42f056:	mov    rcx,rbx
  42f059:	call   0x432b10
  42f05e:	xor    eax,eax
  42f060:	add    rsp,0x28
  42f064:	pop    rbx
  42f065:	pop    rsi
  42f066:	ret    
  42f067:	lea    r8,[rip+0x4b792]        # 0x47a800
  42f06e:	lea    rdx,[rip+0x4b9ab]        # 0x47aa20
  42f075:	lea    rcx,[rip+0x4b795]        # 0x47a811
  42f07c:	call   0x40fd20
  42f081:	xor    eax,eax
  42f083:	add    rsp,0x28
  42f087:	pop    rbx
  42f088:	pop    rsi
  42f089:	ret    
  42f08a:	cmp    r8,rax
  42f08d:	mov    rsi,QWORD PTR [rax+0x8]
  42f091:	je     0x42f0a9
  42f093:	mov    rdx,QWORD PTR [r8]
  42f096:	mov    QWORD PTR [rax],rdx
  42f099:	mov    rdx,QWORD PTR [r8+0x8]
  42f09d:	mov    QWORD PTR [rax+0x8],rdx
  42f0a1:	mov    rdx,QWORD PTR [r8+0x10]
  42f0a5:	mov    QWORD PTR [rax+0x10],rdx
  42f0a9:	lea    eax,[r9-0x1]
  42f0ad:	test   eax,eax
  42f0af:	mov    DWORD PTR [rcx],eax
  42f0b1:	jne    0x42f0e2
  42f0b3:	mfence 
  42f0b6:	mov    rax,QWORD PTR [rbx]
  42f0b9:	mov    rdx,rax
  42f0bc:	and    edx,0x7
  42f0bf:	lock cmpxchg QWORD PTR [rbx],rdx
  42f0c4:	jne    0x42f0b3
  42f0c6:	call   0x40e6e0
  42f0cb:	mov    edx,0x2
  42f0d0:	mov    rcx,rbx
  42f0d3:	call   0x432b10
  42f0d8:	mov    rax,rsi
  42f0db:	add    rsp,0x28
  42f0df:	pop    rbx
  42f0e0:	pop    rsi
  42f0e1:	ret    
  42f0e2:	mov    edx,0x2
  42f0e7:	mov    rcx,rbx
  42f0ea:	call   0x432b10
  42f0ef:	mov    rax,rsi
  42f0f2:	jmp    0x42f006
  42f0f7:	nop    WORD PTR [rax+rax*1+0x0]
  42f100:	push   rsi
  42f101:	push   rbx
  42f102:	sub    rsp,0x28
  42f106:	test   rcx,rcx
  42f109:	mov    rsi,rcx
  42f10c:	mov    ebx,edx
  42f10e:	je     0x42f180
  42f110:	test   edx,edx
  42f112:	jne    0x42f120
  42f114:	xor    eax,eax
  42f116:	add    rsp,0x28
  42f11a:	pop    rbx
  42f11b:	pop    rsi
  42f11c:	ret    
  42f11d:	nop    DWORD PTR [rax]
  42f120:	mov    rcx,rsi
  42f123:	mov    edx,0x2
  42f128:	call   0x432a10
  42f12d:	mfence 
  42f130:	mov    rcx,QWORD PTR [rsi]
  42f133:	and    rcx,0xfffffffffffffff8
  42f137:	je     0x42f160
  42f139:	mov    edx,DWORD PTR [rcx]
  42f13b:	lea    rax,[rcx+0x8]
  42f13f:	lea    rdx,[rdx+rdx*2]
  42f143:	lea    rdx,[rax+rdx*8]
  42f147:	cmp    rax,rdx
  42f14a:	jae    0x42f160
  42f14c:	cmp    DWORD PTR [rcx+0x8],ebx
  42f14f:	jne    0x42f157
  42f151:	jmp    0x42f1a3
  42f153:	cmp    DWORD PTR [rax],ebx
  42f155:	je     0x42f1a3
  42f157:	add    rax,0x18
  42f15b:	cmp    rdx,rax
  42f15e:	ja     0x42f153
  42f160:	xor    ebx,ebx
  42f162:	mov    edx,0x2
  42f167:	mov    rcx,rsi
  42f16a:	call   0x432b10
  42f16f:	mov    rax,rbx
  42f172:	add    rsp,0x28
  42f176:	pop    rbx
  42f177:	pop    rsi
  42f178:	ret    
  42f179:	nop    DWORD PTR [rax+0x0]
  42f180:	lea    r8,[rip+0x4b679]        # 0x47a800
  42f187:	lea    rdx,[rip+0x4b852]        # 0x47a9e0
  42f18e:	lea    rcx,[rip+0x4b67c]        # 0x47a811
  42f195:	call   0x40fd20
  42f19a:	xor    eax,eax
  42f19c:	add    rsp,0x28
  42f1a0:	pop    rbx
  42f1a1:	pop    rsi
  42f1a2:	ret    
  42f1a3:	mov    rbx,QWORD PTR [rax+0x8]
  42f1a7:	jmp    0x42f162
  42f1a9:	nop    DWORD PTR [rax+0x0]
  42f1b0:	push   rsi
  42f1b1:	push   rbx
  42f1b2:	sub    rsp,0x28
  42f1b6:	test   rcx,rcx
  42f1b9:	mov    rbx,rcx
  42f1bc:	mov    esi,edx
  42f1be:	je     0x42f230
  42f1c0:	lea    rcx,[rip+0x55549]        # 0x484710
  42f1c7:	call   0x426d40
  42f1cc:	test   esi,esi
  42f1ce:	je     0x42f211
  42f1d0:	mov    rcx,QWORD PTR [rip+0x55531]        # 0x484708
  42f1d7:	test   rcx,rcx
  42f1da:	je     0x42f211
  42f1dc:	mov    rax,QWORD PTR [rip+0x5551d]        # 0x484700
  42f1e3:	test   rax,rax
  42f1e6:	je     0x42f1ed
  42f1e8:	cmp    rbx,QWORD PTR [rax]
  42f1eb:	je     0x42f201
  42f1ed:	mov    rdx,rbx
  42f1f0:	call   0x408de0
  42f1f5:	test   rax,rax
  42f1f8:	je     0x42f211
  42f1fa:	mov    QWORD PTR [rip+0x554ff],rax        # 0x484700
  42f201:	lea    rcx,[rax+0x8]
  42f205:	mov    edx,esi
  42f207:	call   0x42f100
  42f20c:	mov    rbx,rax
  42f20f:	jmp    0x42f213
  42f211:	xor    ebx,ebx
  42f213:	lea    rcx,[rip+0x554f6]        # 0x484710
  42f21a:	call   0x426d70
  42f21f:	mov    rax,rbx
  42f222:	add    rsp,0x28
  42f226:	pop    rbx
  42f227:	pop    rsi
  42f228:	ret    
  42f229:	nop    DWORD PTR [rax+0x0]
  42f230:	lea    r8,[rip+0x4b5df]        # 0x47a816
  42f237:	lea    rdx,[rip+0x4b7c2]        # 0x47aa00
  42f23e:	lea    rcx,[rip+0x4b5cc]        # 0x47a811
  42f245:	call   0x40fd20
  42f24a:	xor    eax,eax
  42f24c:	add    rsp,0x28
  42f250:	pop    rbx
  42f251:	pop    rsi
  42f252:	ret    
  42f253:	nop    DWORD PTR [rax]
  42f256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f260:	push   r14
  42f262:	push   r13
  42f264:	push   r12
  42f266:	push   rbp
  42f267:	push   rdi
  42f268:	push   rsi
  42f269:	push   rbx
  42f26a:	sub    rsp,0x20
  42f26e:	test   rcx,rcx
  42f271:	je     0x42f37a
  42f277:	test   rdx,rdx
  42f27a:	je     0x42f3a2
  42f280:	mfence 
  42f283:	mov    r12,QWORD PTR [rcx]
  42f286:	and    r12,0xfffffffffffffff8
  42f28a:	je     0x42f3ab
  42f290:	mov    r13,rcx
  42f293:	movsxd rcx,DWORD PTR [r12]
  42f297:	mov    rsi,rdx
  42f29a:	mov    edx,0x4
  42f29f:	mov    rdi,r8
  42f2a2:	mov    rbx,rcx
  42f2a5:	call   0x40e7a0
  42f2aa:	test   ebx,ebx
  42f2ac:	mov    rbp,rax
  42f2af:	jle    0x42f334
  42f2b5:	lea    edx,[rbx-0x1]
  42f2b8:	lea    rax,[r12+0x8]
  42f2bd:	mov    r14,rbp
  42f2c0:	lea    rdx,[rdx+rdx*2]
  42f2c4:	lea    r8,[r12+rdx*8+0x20]
  42f2c9:	mov    rdx,rbp
  42f2cc:	nop    DWORD PTR [rax+0x0]
  42f2d0:	mov    ecx,DWORD PTR [rax]
  42f2d2:	add    rax,0x18
  42f2d6:	add    rdx,0x4
  42f2da:	mov    DWORD PTR [rdx-0x4],ecx
  42f2dd:	cmp    rax,r8
  42f2e0:	jne    0x42f2d0
  42f2e2:	xor    r12d,r12d
  42f2e5:	mfence 
  42f2e8:	mov    r11,QWORD PTR [r13+0x0]
  42f2ec:	and    r11,0xfffffffffffffff8
  42f2f0:	je     0x42f334
  42f2f2:	mov    eax,DWORD PTR [r11]
  42f2f5:	test   eax,eax
  42f2f7:	je     0x42f327
  42f2f9:	mov    edx,DWORD PTR [r14]
  42f2fc:	xor    r9d,r9d
  42f2ff:	cmp    DWORD PTR [r11+0x8],edx
  42f303:	jne    0x42f31e
  42f305:	jmp    0x42f350
  42f307:	nop    WORD PTR [rax+rax*1+0x0]
  42f310:	movsxd r10,r9d
  42f313:	lea    r10,[r10+r10*2]
  42f317:	cmp    DWORD PTR [r11+r10*8+0x8],edx
  42f31c:	je     0x42f350
  42f31e:	add    r9d,0x1
  42f322:	cmp    r9d,eax
  42f325:	jne    0x42f310
  42f327:	add    r12d,0x1
  42f32b:	add    r14,0x4
  42f32f:	cmp    ebx,r12d
  42f332:	jne    0x42f2e5
  42f334:	mov    rcx,rbp
  42f337:	add    rsp,0x20
  42f33b:	pop    rbx
  42f33c:	pop    rsi
  42f33d:	pop    rdi
  42f33e:	pop    rbp
  42f33f:	pop    r12
  42f341:	pop    r13
  42f343:	pop    r14
  42f345:	jmp    0x40e6e0
  42f34a:	nop    WORD PTR [rax+rax*1+0x0]
  42f350:	movsxd rax,r12d
  42f353:	add    r12d,0x1
  42f357:	mov    r8,rdi
  42f35a:	lea    rax,[rax+rax*2]
  42f35e:	add    r14,0x4
  42f362:	lea    rax,[r11+rax*8]
  42f366:	mov    rdx,QWORD PTR [rax+0x10]
  42f36a:	mov    ecx,DWORD PTR [rax+0x8]
  42f36d:	call   rsi
  42f36f:	cmp    ebx,r12d
  42f372:	jne    0x42f2e5
  42f378:	jmp    0x42f334
  42f37a:	lea    r8,[rip+0x4b47f]        # 0x47a800
  42f381:	lea    rdx,[rip+0x4b5f8]        # 0x47a980
  42f388:	lea    rcx,[rip+0x4b482]        # 0x47a811
  42f38f:	add    rsp,0x20
  42f393:	pop    rbx
  42f394:	pop    rsi
  42f395:	pop    rdi
  42f396:	pop    rbp
  42f397:	pop    r12
  42f399:	pop    r13
  42f39b:	pop    r14
  42f39d:	jmp    0x40fd20
  42f3a2:	lea    r8,[rip+0x4b4a6]        # 0x47a84f
  42f3a9:	jmp    0x42f381
  42f3ab:	add    rsp,0x20
  42f3af:	pop    rbx
  42f3b0:	pop    rsi
  42f3b1:	pop    rdi
  42f3b2:	pop    rbp
  42f3b3:	pop    r12
  42f3b5:	pop    r13
  42f3b7:	pop    r14
  42f3b9:	ret    
  42f3ba:	nop    WORD PTR [rax+rax*1+0x0]
  42f3c0:	push   rbp
  42f3c1:	push   rdi
  42f3c2:	push   rsi
  42f3c3:	push   rbx
  42f3c4:	sub    rsp,0x28
  42f3c8:	test   rcx,rcx
  42f3cb:	je     0x42f464
  42f3d1:	test   rdx,rdx
  42f3d4:	je     0x42f490
  42f3da:	mov    rsi,rcx
  42f3dd:	lea    rcx,[rip+0x5532c]        # 0x484710
  42f3e4:	mov    rbp,r8
  42f3e7:	mov    rdi,rdx
  42f3ea:	call   0x426d40
  42f3ef:	mov    rcx,QWORD PTR [rip+0x55312]        # 0x484708
  42f3f6:	test   rcx,rcx
  42f3f9:	je     0x42f450
  42f3fb:	mov    rbx,QWORD PTR [rip+0x552fe]        # 0x484700
  42f402:	test   rbx,rbx
  42f405:	je     0x42f40c
  42f407:	cmp    rsi,QWORD PTR [rbx]
  42f40a:	je     0x42f423
  42f40c:	mov    rdx,rsi
  42f40f:	call   0x408de0
  42f414:	test   rax,rax
  42f417:	je     0x42f450
  42f419:	mov    QWORD PTR [rip+0x552e0],rax        # 0x484700
  42f420:	mov    rbx,rax
  42f423:	lea    rcx,[rip+0x552e6]        # 0x484710
  42f42a:	call   0x426d70
  42f42f:	lea    rcx,[rbx+0x8]
  42f433:	mov    r8,rbp
  42f436:	mov    rdx,rdi
  42f439:	add    rsp,0x28
  42f43d:	pop    rbx
  42f43e:	pop    rsi
  42f43f:	pop    rdi
  42f440:	pop    rbp
  42f441:	jmp    0x42f260
  42f446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f450:	lea    rcx,[rip+0x552b9]        # 0x484710
  42f457:	add    rsp,0x28
  42f45b:	pop    rbx
  42f45c:	pop    rsi
  42f45d:	pop    rdi
  42f45e:	pop    rbp
  42f45f:	jmp    0x426d70
  42f464:	lea    r8,[rip+0x4b3ab]        # 0x47a816
  42f46b:	lea    rdx,[rip+0x4b52e]        # 0x47a9a0
  42f472:	lea    rcx,[rip+0x4b398]        # 0x47a811
  42f479:	add    rsp,0x28
  42f47d:	pop    rbx
  42f47e:	pop    rsi
  42f47f:	pop    rdi
  42f480:	pop    rbp
  42f481:	jmp    0x40fd20
  42f486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f490:	lea    r8,[rip+0x4b3b8]        # 0x47a84f
  42f497:	jmp    0x42f46b
  42f499:	nop    DWORD PTR [rax+0x0]
  42f4a0:	test   rcx,rcx
  42f4a3:	je     0x42f4b0
  42f4a5:	mov    QWORD PTR [rcx],0x0
  42f4ac:	mfence 
  42f4af:	ret    
  42f4b0:	lea    r8,[rip+0x4b349]        # 0x47a800
  42f4b7:	lea    rdx,[rip+0x4b4b2]        # 0x47a970
  42f4be:	lea    rcx,[rip+0x4b34c]        # 0x47a811
  42f4c5:	jmp    0x40fd20
  42f4ca:	nop    WORD PTR [rax+rax*1+0x0]
  42f4d0:	push   r15
  42f4d2:	push   r14
  42f4d4:	push   r13
  42f4d6:	push   r12
  42f4d8:	push   rbp
  42f4d9:	push   rdi
  42f4da:	push   rsi
  42f4db:	push   rbx
  42f4dc:	sub    rsp,0x28
  42f4e0:	test   rcx,rcx
  42f4e3:	je     0x42f649
  42f4e9:	test   r9,r9
  42f4ec:	sete   r13b
  42f4f0:	test   r8,r8
  42f4f3:	setne  al
  42f4f6:	jne    0x42f510
  42f4f8:	test   r13b,r13b
  42f4fb:	jne    0x42f510
  42f4fd:	lea    r8,[rip+0x4b336]        # 0x47a83a
  42f504:	jmp    0x42f523
  42f506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f510:	test   edx,edx
  42f512:	jne    0x42f546
  42f514:	test   al,al
  42f516:	je     0x42f84f
  42f51c:	lea    r8,[rip+0x4b30c]        # 0x47a82f
  42f523:	lea    rdx,[rip+0x4b556]        # 0x47aa80
  42f52a:	lea    rcx,[rip+0x4b2e0]        # 0x47a811
  42f531:	add    rsp,0x28
  42f535:	pop    rbx
  42f536:	pop    rsi
  42f537:	pop    rdi
  42f538:	pop    rbp
  42f539:	pop    r12
  42f53b:	pop    r13
  42f53d:	pop    r14
  42f53f:	pop    r15
  42f541:	jmp    0x40fd20
  42f546:	mov    rbx,rcx
  42f549:	lea    rcx,[rip+0x551c0]        # 0x484710
  42f550:	mov    rbp,r9
  42f553:	mov    rdi,r8
  42f556:	mov    esi,edx
  42f558:	call   0x426d40
  42f55d:	mov    rax,QWORD PTR [rip+0x551a4]        # 0x484708
  42f564:	test   rax,rax
  42f567:	je     0x42f82a
  42f56d:	mov    r12,QWORD PTR [rip+0x5518c]        # 0x484700
  42f574:	test   r12,r12
  42f577:	je     0x42f57f
  42f579:	cmp    rbx,QWORD PTR [r12]
  42f57d:	je     0x42f59d
  42f57f:	mov    rdx,rbx
  42f582:	mov    rcx,rax
  42f585:	call   0x408de0
  42f58a:	test   rax,rax
  42f58d:	mov    r12,rax
  42f590:	je     0x42f7f6
  42f596:	mov    QWORD PTR [rip+0x55163],rax        # 0x484700
  42f59d:	lea    rbx,[r12+0x8]
  42f5a2:	mov    edx,0x2
  42f5a7:	mov    rcx,rbx
  42f5aa:	call   0x432a10
  42f5af:	mfence 
  42f5b2:	mov    r14,QWORD PTR [r12+0x8]
  42f5b7:	and    r14,0xfffffffffffffff8
  42f5bb:	test   rdi,rdi
  42f5be:	mov    r15,r14
  42f5c1:	je     0x42f71f
  42f5c7:	test   r14,r14
  42f5ca:	je     0x42f703
  42f5d0:	mov    ecx,DWORD PTR [r14]
  42f5d3:	lea    rax,[r14+0x8]
  42f5d7:	lea    r8,[rcx+rcx*2]
  42f5db:	mov    rdx,rcx
  42f5de:	lea    r8,[rax+r8*8]
  42f5e2:	cmp    rax,r8
  42f5e5:	jae    0x42f5fd
  42f5e7:	cmp    esi,DWORD PTR [r14+0x8]
  42f5eb:	jne    0x42f5f4
  42f5ed:	jmp    0x42f655
  42f5ef:	nop
  42f5f0:	cmp    esi,DWORD PTR [rax]
  42f5f2:	je     0x42f655
  42f5f4:	add    rax,0x18
  42f5f8:	cmp    r8,rax
  42f5fb:	ja     0x42f5f0
  42f5fd:	cmp    edx,DWORD PTR [r14+0x4]
  42f601:	je     0x42f6ad
  42f607:	lea    rax,[rcx+rcx*2]
  42f60b:	add    edx,0x1
  42f60e:	lea    rax,[r15+rax*8]
  42f612:	mov    DWORD PTR [rax+0x8],esi
  42f615:	mov    QWORD PTR [rax+0x10],rdi
  42f619:	mov    QWORD PTR [rax+0x18],rbp
  42f61d:	mov    DWORD PTR [r15],edx
  42f620:	mov    edx,0x2
  42f625:	mov    rcx,rbx
  42f628:	call   0x432b10
  42f62d:	lea    rcx,[rip+0x550dc]        # 0x484710
  42f634:	add    rsp,0x28
  42f638:	pop    rbx
  42f639:	pop    rsi
  42f63a:	pop    rdi
  42f63b:	pop    rbp
  42f63c:	pop    r12
  42f63e:	pop    r13
  42f640:	pop    r14
  42f642:	pop    r15
  42f644:	jmp    0x426d70
  42f649:	lea    r8,[rip+0x4b1c6]        # 0x47a816
  42f650:	jmp    0x42f523
  42f655:	mov    rsi,QWORD PTR [rax+0x10]
  42f659:	test   rsi,rsi
  42f65c:	je     0x42f696
  42f65e:	mov    r12,QWORD PTR [rax+0x8]
  42f662:	mov    QWORD PTR [rax+0x10],rbp
  42f666:	mov    edx,0x2
  42f66b:	mov    QWORD PTR [rax+0x8],rdi
  42f66f:	mov    rcx,rbx
  42f672:	call   0x432b10
  42f677:	lea    rcx,[rip+0x55092]        # 0x484710
  42f67e:	call   0x426d70
  42f683:	mov    rcx,r12
  42f686:	call   rsi
  42f688:	lea    rcx,[rip+0x55081]        # 0x484710
  42f68f:	call   0x426d40
  42f694:	jmp    0x42f62d
  42f696:	mov    QWORD PTR [rax+0x8],rdi
  42f69a:	mov    QWORD PTR [rax+0x10],rbp
  42f69e:	mov    edx,0x2
  42f6a3:	mov    rcx,rbx
  42f6a6:	call   0x432b10
  42f6ab:	jmp    0x42f62d
  42f6ad:	add    edx,edx
  42f6af:	mov    rcx,r14
  42f6b2:	lea    eax,[rdx-0x1]
  42f6b5:	mov    DWORD PTR [r14+0x4],edx
  42f6b9:	lea    rax,[rax+rax*2]
  42f6bd:	lea    rdx,[rax*8+0x20]
  42f6c5:	call   0x40e670
  42f6ca:	cmp    r14,rax
  42f6cd:	mov    r8,rax
  42f6d0:	je     0x42f6f8
  42f6d2:	mfence 
  42f6d5:	mov    rax,QWORD PTR [r12+0x8]
  42f6da:	mov    rdx,rax
  42f6dd:	and    edx,0x7
  42f6e0:	or     rdx,r8
  42f6e3:	lock cmpxchg QWORD PTR [rbx],rdx
  42f6e8:	jne    0x42f6d2
  42f6ea:	mov    ecx,DWORD PTR [r8]
  42f6ed:	mov    r15,r8
  42f6f0:	mov    rdx,rcx
  42f6f3:	jmp    0x42f607
  42f6f8:	mov    ecx,DWORD PTR [r14]
  42f6fb:	mov    rdx,rcx
  42f6fe:	jmp    0x42f607
  42f703:	mov    ecx,0x20
  42f708:	call   0x40e5c0
  42f70d:	mov    r8,rax
  42f710:	mov    DWORD PTR [rax],0x0
  42f716:	mov    DWORD PTR [rax+0x4],0x1
  42f71d:	jmp    0x42f6d2
  42f71f:	test   r14,r14
  42f722:	je     0x42f620
  42f728:	mov    edx,DWORD PTR [r14]
  42f72b:	lea    rax,[r14+0x8]
  42f72f:	mov    rcx,rdx
  42f732:	lea    rdx,[rdx+rdx*2]
  42f736:	lea    rdx,[rax+rdx*8-0x18]
  42f73b:	cmp    rax,rdx
  42f73e:	ja     0x42f620
  42f744:	cmp    esi,DWORD PTR [r14+0x8]
  42f748:	je     0x42f75b
  42f74a:	add    rax,0x18
  42f74e:	cmp    rdx,rax
  42f751:	jb     0x42f620
  42f757:	cmp    esi,DWORD PTR [rax]
  42f759:	jne    0x42f74a
  42f75b:	cmp    rdx,rax
  42f75e:	mov    rdi,QWORD PTR [rax+0x8]
  42f762:	mov    rsi,QWORD PTR [rax+0x10]
  42f766:	je     0x42f77e
  42f768:	mov    r8,QWORD PTR [rdx]
  42f76b:	mov    QWORD PTR [rax],r8
  42f76e:	mov    r8,QWORD PTR [rdx+0x8]
  42f772:	mov    QWORD PTR [rax+0x8],r8
  42f776:	mov    rdx,QWORD PTR [rdx+0x10]
  42f77a:	mov    QWORD PTR [rax+0x10],rdx
  42f77e:	lea    eax,[rcx-0x1]
  42f781:	test   eax,eax
  42f783:	mov    DWORD PTR [r14],eax
  42f786:	jne    0x42f860
  42f78c:	nop    DWORD PTR [rax+0x0]
  42f790:	mfence 
  42f793:	mov    rax,QWORD PTR [r12+0x8]
  42f798:	mov    rdx,rax
  42f79b:	and    edx,0x7
  42f79e:	lock cmpxchg QWORD PTR [rbx],rdx
  42f7a3:	jne    0x42f790
  42f7a5:	mov    rcx,r14
  42f7a8:	call   0x40e6e0
  42f7ad:	mov    rcx,rbx
  42f7b0:	mov    edx,0x2
  42f7b5:	call   0x432b10
  42f7ba:	mov    rcx,r12
  42f7bd:	call   0x42e9a0
  42f7c2:	test   rsi,rsi
  42f7c5:	je     0x42f62d
  42f7cb:	test   r13b,r13b
  42f7ce:	je     0x42f62d
  42f7d4:	lea    rcx,[rip+0x54f35]        # 0x484710
  42f7db:	call   0x426d70
  42f7e0:	mov    rcx,rdi
  42f7e3:	call   rsi
  42f7e5:	lea    rcx,[rip+0x54f24]        # 0x484710
  42f7ec:	call   0x426d40
  42f7f1:	jmp    0x42f62d
  42f7f6:	mov    ecx,0x10
  42f7fb:	call   0x416130
  42f800:	mov    QWORD PTR [rax],rbx
  42f803:	lea    rbx,[rax+0x8]
  42f807:	mov    r12,rax
  42f80a:	mov    rcx,rbx
  42f80d:	call   0x42f4a0
  42f812:	mov    rdx,QWORD PTR [r12]
  42f816:	mov    rcx,QWORD PTR [rip+0x54eeb]        # 0x484708
  42f81d:	mov    r8,r12
  42f820:	call   0x409090
  42f825:	jmp    0x42f5a2
  42f82a:	lea    rcx,[rip+0xfffffffffffd893f]        # 0x408170
  42f831:	xor    edx,edx
  42f833:	call   0x408a60
  42f838:	mov    QWORD PTR [rip+0x54ebd],0x0        # 0x484700
  42f843:	mov    QWORD PTR [rip+0x54ebe],rax        # 0x484708
  42f84a:	jmp    0x42f57f
  42f84f:	add    rsp,0x28
  42f853:	pop    rbx
  42f854:	pop    rsi
  42f855:	pop    rdi
  42f856:	pop    rbp
  42f857:	pop    r12
  42f859:	pop    r13
  42f85b:	pop    r14
  42f85d:	pop    r15
  42f85f:	ret    
  42f860:	mov    edx,0x2
  42f865:	mov    rcx,rbx
  42f868:	call   0x432b10
  42f86d:	jmp    0x42f7c2
  42f872:	nop    DWORD PTR [rax+0x0]
  42f876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f880:	test   rcx,rcx
  42f883:	je     0x42f8b0
  42f885:	test   edx,0xfffffffc
  42f88b:	jne    0x42f894
  42f88d:	mov    edx,edx
  42f88f:	lock or QWORD PTR [rcx],rdx
  42f893:	ret    
  42f894:	lea    r8,[rip+0x4afc5]        # 0x47a860
  42f89b:	lea    rdx,[rip+0x4b0ae]        # 0x47a950
  42f8a2:	lea    rcx,[rip+0x4af68]        # 0x47a811
  42f8a9:	jmp    0x40fd20
  42f8ae:	xchg   ax,ax
  42f8b0:	lea    r8,[rip+0x4af49]        # 0x47a800
  42f8b7:	lea    rdx,[rip+0x4b092]        # 0x47a950
  42f8be:	lea    rcx,[rip+0x4af4c]        # 0x47a811
  42f8c5:	jmp    0x40fd20
  42f8ca:	nop    WORD PTR [rax+rax*1+0x0]
  42f8d0:	test   rcx,rcx
  42f8d3:	je     0x42f910
  42f8d5:	test   edx,0xfffffffc
  42f8db:	jne    0x42f8f0
  42f8dd:	mov    edx,edx
  42f8df:	not    rdx
  42f8e2:	lock and QWORD PTR [rcx],rdx
  42f8e6:	ret    
  42f8e7:	nop    WORD PTR [rax+rax*1+0x0]
  42f8f0:	lea    r8,[rip+0x4af69]        # 0x47a860
  42f8f7:	lea    rdx,[rip+0x4b032]        # 0x47a930
  42f8fe:	lea    rcx,[rip+0x4af0c]        # 0x47a811
  42f905:	jmp    0x40fd20
  42f90a:	nop    WORD PTR [rax+rax*1+0x0]
  42f910:	lea    r8,[rip+0x4aee9]        # 0x47a800
  42f917:	lea    rdx,[rip+0x4b012]        # 0x47a930
  42f91e:	lea    rcx,[rip+0x4aeec]        # 0x47a811
  42f925:	jmp    0x40fd20
  42f92a:	nop    WORD PTR [rax+rax*1+0x0]
  42f930:	sub    rsp,0x28
  42f934:	test   rcx,rcx
  42f937:	je     0x42f950
  42f939:	mfence 
  42f93c:	mov    rax,QWORD PTR [rcx]
  42f93f:	and    eax,0x3
  42f942:	add    rsp,0x28
  42f946:	ret    
  42f947:	nop    WORD PTR [rax+rax*1+0x0]
  42f950:	lea    r8,[rip+0x4aea9]        # 0x47a800
  42f957:	lea    rdx,[rip+0x4afb2]        # 0x47a910
  42f95e:	lea    rcx,[rip+0x4aeac]        # 0x47a811
  42f965:	call   0x40fd20
  42f96a:	xor    eax,eax
  42f96c:	add    rsp,0x28
  42f970:	ret    
  42f971:	nop    DWORD PTR [rax+rax*1+0x0]
  42f976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f980:	push   rsi
  42f981:	push   rbx
  42f982:	sub    rsp,0x28
  42f986:	xor    eax,eax
  42f988:	test   rcx,rcx
  42f98b:	je     0x42f9c2
  42f98d:	mov    rsi,rcx
  42f990:	lea    rcx,[rip+0x54d61]        # 0x4846f8
  42f997:	xor    ebx,ebx
  42f999:	call   0x426d40
  42f99e:	mov    rcx,QWORD PTR [rip+0x54d4b]        # 0x4846f0
  42f9a5:	test   rcx,rcx
  42f9a8:	je     0x42f9b4
  42f9aa:	mov    rdx,rsi
  42f9ad:	call   0x408de0
  42f9b2:	mov    ebx,eax
  42f9b4:	lea    rcx,[rip+0x54d3d]        # 0x4846f8
  42f9bb:	call   0x426d70
  42f9c0:	mov    eax,ebx
  42f9c2:	add    rsp,0x28
  42f9c6:	pop    rbx
  42f9c7:	pop    rsi
  42f9c8:	ret    
  42f9c9:	nop    DWORD PTR [rax+0x0]
  42f9d0:	push   rbp
  42f9d1:	push   rdi
  42f9d2:	push   rsi
  42f9d3:	push   rbx
  42f9d4:	sub    rsp,0x38
  42f9d8:	test   rcx,rcx
  42f9db:	je     0x42fb70
  42f9e1:	mov    rdi,rcx
  42f9e4:	lea    rcx,[rip+0x54d0d]        # 0x4846f8
  42f9eb:	call   0x426d40
  42f9f0:	mov    rcx,QWORD PTR [rip+0x54cf9]        # 0x4846f0
  42f9f7:	test   rcx,rcx
  42f9fa:	je     0x42fa21
  42f9fc:	mov    rdx,rdi
  42f9ff:	call   0x408de0
  42fa04:	test   eax,eax
  42fa06:	mov    ebx,eax
  42fa08:	je     0x42fa21
  42fa0a:	lea    rcx,[rip+0x54ce7]        # 0x4846f8
  42fa11:	call   0x426d70
  42fa16:	mov    eax,ebx
  42fa18:	add    rsp,0x38
  42fa1c:	pop    rbx
  42fa1d:	pop    rsi
  42fa1e:	pop    rdi
  42fa1f:	pop    rbp
  42fa20:	ret    
  42fa21:	mov    rcx,rdi
  42fa24:	call   0x438788
  42fa29:	lea    rbx,[rax+0x1]
  42fa2d:	cmp    rbx,0x7fc
  42fa34:	ja     0x42fbf0
  42fa3a:	mov    rsi,QWORD PTR [rip+0x54c97]        # 0x4846d8
  42fa41:	test   rsi,rsi
  42fa44:	je     0x42fb12
  42fa4a:	movsxd rdx,DWORD PTR [rip+0x54c7f]        # 0x4846d0
  42fa51:	mov    ecx,0xff8
  42fa56:	sub    rcx,rdx
  42fa59:	mov    ebp,edx
  42fa5b:	cmp    rbx,rcx
  42fa5e:	ja     0x42fb12
  42fa64:	add    rsi,rdx
  42fa67:	mov    r8,rbx
  42fa6a:	mov    rdx,rdi
  42fa6d:	mov    rcx,rsi
  42fa70:	add    ebx,ebp
  42fa72:	call   0x4387f0
  42fa77:	mov    DWORD PTR [rip+0x54c53],ebx        # 0x4846d0
  42fa7d:	mov    ebx,DWORD PTR [rip+0x54c5d]        # 0x4846e0
  42fa83:	test   ebx,0x7ff
  42fa89:	jne    0x42fb30
  42fa8f:	add    ebx,0x800
  42fa95:	mov    edx,0x8
  42fa9a:	movsxd rcx,ebx
  42fa9d:	xor    ebx,ebx
  42fa9f:	call   0x40e7a0
  42faa4:	movsxd rcx,DWORD PTR [rip+0x54c35]        # 0x4846e0
  42faab:	mov    rdi,rax
  42faae:	test   ecx,ecx
  42fab0:	jne    0x42fbd0
  42fab6:	lea    rcx,[rdi+rbx*1]
  42faba:	xor    edx,edx
  42fabc:	mov    r8d,0x4000
  42fac2:	call   0x4387e0
  42fac7:	mov    QWORD PTR [rip+0x54c1a],rdi        # 0x4846e8
  42face:	mfence 
  42fad1:	cmp    QWORD PTR [rip+0x54c17],0x0        # 0x4846f0
  42fad9:	mov    ebx,DWORD PTR [rip+0x54c01]        # 0x4846e0
  42fadf:	je     0x42fb80
  42fae5:	mov    rax,QWORD PTR [rip+0x54bfc]        # 0x4846e8
  42faec:	mov    r8d,ebx
  42faef:	mov    rdx,rsi
  42faf2:	mov    QWORD PTR [rax+r8*8],rsi
  42faf6:	mfence 
  42faf9:	mov    rcx,QWORD PTR [rip+0x54bf0]        # 0x4846f0
  42fb00:	call   0x409090
  42fb05:	lock add DWORD PTR [rip+0x54bd3],0x1        # 0x4846e0
  42fb0d:	jmp    0x42fa0a
  42fb12:	mov    ecx,0xff8
  42fb17:	xor    ebp,ebp
  42fb19:	call   0x40e5c0
  42fb1e:	xor    edx,edx
  42fb20:	mov    QWORD PTR [rip+0x54bb1],rax        # 0x4846d8
  42fb27:	mov    rsi,rax
  42fb2a:	jmp    0x42fa64
  42fb2f:	nop
  42fb30:	cmp    QWORD PTR [rip+0x54bb8],0x0        # 0x4846f0
  42fb38:	jne    0x42fae5
  42fb3a:	lea    rax,[rip+0x4ada0]        # 0x47a8e1
  42fb41:	lea    r9,[rip+0x4adad]        # 0x47a8f5
  42fb48:	lea    rdx,[rip+0x4ad39]        # 0x47a888
  42fb4f:	lea    rcx,[rip+0x4acbb]        # 0x47a811
  42fb56:	mov    r8d,0x50c
  42fb5c:	mov    QWORD PTR [rsp+0x20],rax
  42fb61:	call   0x41e680
  42fb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fb70:	xor    eax,eax
  42fb72:	add    rsp,0x38
  42fb76:	pop    rbx
  42fb77:	pop    rsi
  42fb78:	pop    rdi
  42fb79:	pop    rbp
  42fb7a:	ret    
  42fb7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fb80:	test   ebx,ebx
  42fb82:	jne    0x42fb3a
  42fb84:	lea    rdx,[rip+0xfffffffffffd9ba5]        # 0x409730
  42fb8b:	lea    rcx,[rip+0xfffffffffffd9bbe]        # 0x409750
  42fb92:	call   0x408a60
  42fb97:	movsxd rdx,DWORD PTR [rip+0x54b42]        # 0x4846e0
  42fb9e:	mov    QWORD PTR [rip+0x54b4b],rax        # 0x4846f0
  42fba5:	mov    rax,QWORD PTR [rip+0x54b3c]        # 0x4846e8
  42fbac:	mov    QWORD PTR [rax+rdx*8],0x0
  42fbb4:	lock add DWORD PTR [rip+0x54b24],0x1        # 0x4846e0
  42fbbc:	mov    ebx,DWORD PTR [rip+0x54b1e]        # 0x4846e0
  42fbc2:	jmp    0x42fae5
  42fbc7:	nop    WORD PTR [rax+rax*1+0x0]
  42fbd0:	lea    rbx,[rcx*8+0x0]
  42fbd8:	mov    rdx,QWORD PTR [rip+0x54b09]        # 0x4846e8
  42fbdf:	mov    rcx,rax
  42fbe2:	mov    r8,rbx
  42fbe5:	call   0x4387f0
  42fbea:	jmp    0x42fab6
  42fbef:	nop
  42fbf0:	mov    rcx,rdi
  42fbf3:	call   0x4182b0
  42fbf8:	mov    rsi,rax
  42fbfb:	jmp    0x42fa7d
  42fc00:	push   rdi
  42fc01:	push   rsi
  42fc02:	push   rbx
  42fc03:	sub    rsp,0x30
  42fc07:	test   rcx,rcx
  42fc0a:	je     0x42fd60
  42fc10:	mov    rsi,rcx
  42fc13:	lea    rcx,[rip+0x54ade]        # 0x4846f8
  42fc1a:	call   0x426d40
  42fc1f:	mov    rcx,QWORD PTR [rip+0x54aca]        # 0x4846f0
  42fc26:	test   rcx,rcx
  42fc29:	je     0x42fd40
  42fc2f:	mov    rdx,rsi
  42fc32:	call   0x408de0
  42fc37:	test   eax,eax
  42fc39:	mov    ebx,eax
  42fc3b:	je     0x42fc53
  42fc3d:	lea    rcx,[rip+0x54ab4]        # 0x4846f8
  42fc44:	call   0x426d70
  42fc49:	mov    eax,ebx
  42fc4b:	add    rsp,0x30
  42fc4f:	pop    rbx
  42fc50:	pop    rsi
  42fc51:	pop    rdi
  42fc52:	ret    
  42fc53:	mov    ebx,DWORD PTR [rip+0x54a87]        # 0x4846e0
  42fc59:	test   ebx,0x7ff
  42fc5f:	je     0x42fca0
  42fc61:	cmp    QWORD PTR [rip+0x54a87],0x0        # 0x4846f0
  42fc69:	je     0x42fd70
  42fc6f:	mov    rax,QWORD PTR [rip+0x54a72]        # 0x4846e8
  42fc76:	mov    r8d,ebx
  42fc79:	mov    rdx,rsi
  42fc7c:	mov    QWORD PTR [rax+r8*8],rsi
  42fc80:	mfence 
  42fc83:	mov    rcx,QWORD PTR [rip+0x54a66]        # 0x4846f0
  42fc8a:	call   0x409090
  42fc8f:	lock add DWORD PTR [rip+0x54a49],0x1        # 0x4846e0
  42fc97:	jmp    0x42fc3d
  42fc99:	nop    DWORD PTR [rax+0x0]
  42fca0:	add    ebx,0x800
  42fca6:	movsxd rcx,ebx
  42fca9:	mov    edx,0x8
  42fcae:	xor    ebx,ebx
  42fcb0:	call   0x40e7a0
  42fcb5:	movsxd rcx,DWORD PTR [rip+0x54a24]        # 0x4846e0
  42fcbc:	mov    rdi,rax
  42fcbf:	test   ecx,ecx
  42fcc1:	jne    0x42fda0
  42fcc7:	lea    rcx,[rdi+rbx*1]
  42fccb:	xor    edx,edx
  42fccd:	mov    r8d,0x4000
  42fcd3:	call   0x4387e0
  42fcd8:	mov    QWORD PTR [rip+0x54a09],rdi        # 0x4846e8
  42fcdf:	mfence 
  42fce2:	cmp    QWORD PTR [rip+0x54a06],0x0        # 0x4846f0
  42fcea:	mov    ebx,DWORD PTR [rip+0x549f0]        # 0x4846e0
  42fcf0:	jne    0x42fc6f
  42fcf6:	test   ebx,ebx
  42fcf8:	jne    0x42fd70
  42fcfa:	lea    rdx,[rip+0xfffffffffffd9a2f]        # 0x409730
  42fd01:	lea    rcx,[rip+0xfffffffffffd9a48]        # 0x409750
  42fd08:	call   0x408a60
  42fd0d:	movsxd rdx,DWORD PTR [rip+0x549cc]        # 0x4846e0
  42fd14:	mov    QWORD PTR [rip+0x549d5],rax        # 0x4846f0
  42fd1b:	mov    rax,QWORD PTR [rip+0x549c6]        # 0x4846e8
  42fd22:	mov    QWORD PTR [rax+rdx*8],0x0
  42fd2a:	lock add DWORD PTR [rip+0x549ae],0x1        # 0x4846e0
  42fd32:	mov    ebx,DWORD PTR [rip+0x549a8]        # 0x4846e0
  42fd38:	jmp    0x42fc6f
  42fd3d:	nop    DWORD PTR [rax]
  42fd40:	mov    eax,DWORD PTR [rip+0x5499a]        # 0x4846e0
  42fd46:	test   eax,0x7ff
  42fd4b:	jne    0x42fd70
  42fd4d:	lea    ebx,[rax+0x800]
  42fd53:	movsxd rcx,ebx
  42fd56:	jmp    0x42fca9
  42fd5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fd60:	xor    eax,eax
  42fd62:	add    rsp,0x30
  42fd66:	pop    rbx
  42fd67:	pop    rsi
  42fd68:	pop    rdi
  42fd69:	ret    
  42fd6a:	nop    WORD PTR [rax+rax*1+0x0]
  42fd70:	lea    rax,[rip+0x4ab6a]        # 0x47a8e1
  42fd77:	lea    r9,[rip+0x4ab77]        # 0x47a8f5
  42fd7e:	lea    rdx,[rip+0x4ab03]        # 0x47a888
  42fd85:	lea    rcx,[rip+0x4aa85]        # 0x47a811
  42fd8c:	mov    r8d,0x50c
  42fd92:	mov    QWORD PTR [rsp+0x20],rax
  42fd97:	call   0x41e680
  42fd9c:	nop    DWORD PTR [rax+0x0]
  42fda0:	lea    rbx,[rcx*8+0x0]
  42fda8:	mov    rdx,QWORD PTR [rip+0x54939]        # 0x4846e8
  42fdaf:	mov    rcx,rax
  42fdb2:	mov    r8,rbx
  42fdb5:	call   0x4387f0
  42fdba:	jmp    0x42fcc7
  42fdbf:	nop
  42fdc0:	mfence 
  42fdc3:	mov    eax,DWORD PTR [rip+0x54917]        # 0x4846e0
  42fdc9:	mfence 
  42fdcc:	mov    rdx,QWORD PTR [rip+0x54915]        # 0x4846e8
  42fdd3:	cmp    eax,ecx
  42fdd5:	jbe    0x42fde0
  42fdd7:	mov    ecx,ecx
  42fdd9:	mov    rax,QWORD PTR [rdx+rcx*8]
  42fddd:	ret    
  42fdde:	xchg   ax,ax
  42fde0:	xor    eax,eax
  42fde2:	ret    
  42fde3:	nop    DWORD PTR [rax]
  42fde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fdf0:	push   rbp
  42fdf1:	push   rdi
  42fdf2:	push   rsi
  42fdf3:	push   rbx
  42fdf4:	sub    rsp,0x28
  42fdf8:	test   rcx,rcx
  42fdfb:	mov    rbp,rcx
  42fdfe:	mov    rdi,rdx
  42fe01:	je     0x42fe70
  42fe03:	mov    edx,0x2
  42fe08:	call   0x432a10
  42fe0d:	mfence 
  42fe10:	mov    rax,QWORD PTR [rbp+0x0]
  42fe14:	and    rax,0xfffffffffffffff8
  42fe18:	je     0x42fe55
  42fe1a:	lea    rbx,[rax+0x8]
  42fe1e:	mov    eax,DWORD PTR [rax]
  42fe20:	lea    rax,[rax+rax*2]
  42fe24:	lea    rsi,[rbx+rax*8]
  42fe28:	cmp    rbx,rsi
  42fe2b:	jb     0x42fe39
  42fe2d:	jmp    0x42fe55
  42fe2f:	nop
  42fe30:	add    rbx,0x18
  42fe34:	cmp    rsi,rbx
  42fe37:	jbe    0x42fe55
  42fe39:	mov    ecx,DWORD PTR [rbx]
  42fe3b:	call   0x42fdc0
  42fe40:	mov    rdx,rdi
  42fe43:	mov    rcx,rax
  42fe46:	call   0x4387a0
  42fe4b:	test   eax,eax
  42fe4d:	jne    0x42fe30
  42fe4f:	mov    rbx,QWORD PTR [rbx+0x8]
  42fe53:	jmp    0x42fe57
  42fe55:	xor    ebx,ebx
  42fe57:	mov    edx,0x2
  42fe5c:	mov    rcx,rbp
  42fe5f:	call   0x432b10
  42fe64:	mov    rax,rbx
  42fe67:	add    rsp,0x28
  42fe6b:	pop    rbx
  42fe6c:	pop    rsi
  42fe6d:	pop    rdi
  42fe6e:	pop    rbp
  42fe6f:	ret    
  42fe70:	lea    r8,[rip+0x4a989]        # 0x47a800
  42fe77:	lea    rdx,[rip+0x4ab42]        # 0x47a9c0
  42fe7e:	lea    rcx,[rip+0x4a98c]        # 0x47a811
  42fe85:	call   0x40fd20
  42fe8a:	xor    eax,eax
  42fe8c:	add    rsp,0x28
  42fe90:	pop    rbx
  42fe91:	pop    rsi
  42fe92:	pop    rdi
  42fe93:	pop    rbp
  42fe94:	ret    
  42fe95:	nop
  42fe96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fea0:	push   rbp
  42fea1:	push   rdi
  42fea2:	push   rsi
  42fea3:	push   rbx
  42fea4:	sub    rsp,0x38
  42fea8:	test   rcx,rcx
  42feab:	je     0x4300d0
  42feb1:	mov    rdi,rcx
  42feb4:	lea    rcx,[rip+0x5483d]        # 0x4846f8
  42febb:	call   0x426d40
  42fec0:	mov    rcx,QWORD PTR [rip+0x54829]        # 0x4846f0
  42fec7:	test   rcx,rcx
  42feca:	je     0x42ff05
  42fecc:	mov    rdx,rdi
  42fecf:	call   0x408de0
  42fed4:	test   eax,eax
  42fed6:	je     0x42ff05
  42fed8:	mov    eax,eax
  42feda:	lea    rsi,[rax*8+0x0]
  42fee2:	mov    rax,QWORD PTR [rip+0x547ff]        # 0x4846e8
  42fee9:	lea    rcx,[rip+0x54808]        # 0x4846f8
  42fef0:	mov    rbx,QWORD PTR [rax+rsi*1]
  42fef4:	call   0x426d70
  42fef9:	mov    rax,rbx
  42fefc:	add    rsp,0x38
  42ff00:	pop    rbx
  42ff01:	pop    rsi
  42ff02:	pop    rdi
  42ff03:	pop    rbp
  42ff04:	ret    
  42ff05:	mov    rcx,rdi
  42ff08:	call   0x438788
  42ff0d:	lea    rsi,[rax+0x1]
  42ff11:	cmp    rsi,0x7fc
  42ff18:	ja     0x4300a0
  42ff1e:	mov    rbx,QWORD PTR [rip+0x547b3]        # 0x4846d8
  42ff25:	test   rbx,rbx
  42ff28:	je     0x42ff41
  42ff2a:	movsxd r8,DWORD PTR [rip+0x5479f]        # 0x4846d0
  42ff31:	mov    edx,0xff8
  42ff36:	sub    rdx,r8
  42ff39:	mov    ebp,r8d
  42ff3c:	cmp    rsi,rdx
  42ff3f:	jbe    0x42ff5a
  42ff41:	mov    ecx,0xff8
  42ff46:	xor    ebp,ebp
  42ff48:	call   0x40e5c0
  42ff4d:	xor    r8d,r8d
  42ff50:	mov    QWORD PTR [rip+0x54781],rax        # 0x4846d8
  42ff57:	mov    rbx,rax
  42ff5a:	add    rbx,r8
  42ff5d:	mov    rdx,rdi
  42ff60:	mov    r8,rsi
  42ff63:	mov    rcx,rbx
  42ff66:	add    esi,ebp
  42ff68:	call   0x4387f0
  42ff6d:	mov    DWORD PTR [rip+0x5475d],esi        # 0x4846d0
  42ff73:	mov    r8d,DWORD PTR [rip+0x54766]        # 0x4846e0
  42ff7a:	test   r8d,0x7ff
  42ff81:	jne    0x430060
  42ff87:	add    r8d,0x800
  42ff8e:	mov    edx,0x8
  42ff93:	xor    esi,esi
  42ff95:	movsxd rcx,r8d
  42ff98:	call   0x40e7a0
  42ff9d:	movsxd rcx,DWORD PTR [rip+0x5473c]        # 0x4846e0
  42ffa4:	mov    rdi,rax
  42ffa7:	test   ecx,ecx
  42ffa9:	jne    0x4300b0
  42ffaf:	lea    rcx,[rdi+rsi*1]
  42ffb3:	mov    r8d,0x4000
  42ffb9:	xor    edx,edx
  42ffbb:	call   0x4387e0
  42ffc0:	mov    QWORD PTR [rip+0x54721],rdi        # 0x4846e8
  42ffc7:	mfence 
  42ffca:	cmp    QWORD PTR [rip+0x5471e],0x0        # 0x4846f0
  42ffd2:	mov    r8d,DWORD PTR [rip+0x54707]        # 0x4846e0
  42ffd9:	je     0x430010
  42ffdb:	mov    rax,QWORD PTR [rip+0x54706]        # 0x4846e8
  42ffe2:	lea    rsi,[r8*8+0x0]
  42ffea:	mov    rdx,rbx
  42ffed:	mov    QWORD PTR [rax+r8*8],rbx
  42fff1:	mfence 
  42fff4:	mov    rcx,QWORD PTR [rip+0x546f5]        # 0x4846f0
  42fffb:	call   0x409090
  430000:	lock add DWORD PTR [rip+0x546d8],0x1        # 0x4846e0
  430008:	jmp    0x42fee2
  43000d:	nop    DWORD PTR [rax]
  430010:	test   r8d,r8d
  430013:	jne    0x43006e
  430015:	lea    rdx,[rip+0xfffffffffffd9714]        # 0x409730
  43001c:	lea    rcx,[rip+0xfffffffffffd972d]        # 0x409750
  430023:	call   0x408a60
  430028:	movsxd rdx,DWORD PTR [rip+0x546b1]        # 0x4846e0
  43002f:	mov    QWORD PTR [rip+0x546ba],rax        # 0x4846f0
  430036:	mov    rax,QWORD PTR [rip+0x546ab]        # 0x4846e8
  43003d:	mov    QWORD PTR [rax+rdx*8],0x0
  430045:	lock add DWORD PTR [rip+0x54693],0x1        # 0x4846e0
  43004d:	mov    r8d,DWORD PTR [rip+0x5468c]        # 0x4846e0
  430054:	jmp    0x42ffdb
  430056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430060:	cmp    QWORD PTR [rip+0x54688],0x0        # 0x4846f0
  430068:	jne    0x42ffdb
  43006e:	lea    rax,[rip+0x4a86c]        # 0x47a8e1
  430075:	lea    r9,[rip+0x4a879]        # 0x47a8f5
  43007c:	lea    rdx,[rip+0x4a805]        # 0x47a888
  430083:	lea    rcx,[rip+0x4a787]        # 0x47a811
  43008a:	mov    r8d,0x50c
  430090:	mov    QWORD PTR [rsp+0x20],rax
  430095:	call   0x41e680
  43009a:	nop    WORD PTR [rax+rax*1+0x0]
  4300a0:	mov    rcx,rdi
  4300a3:	call   0x4182b0
  4300a8:	mov    rbx,rax
  4300ab:	jmp    0x42ff73
  4300b0:	lea    rsi,[rcx*8+0x0]
  4300b8:	mov    rdx,QWORD PTR [rip+0x54629]        # 0x4846e8
  4300bf:	mov    rcx,rax
  4300c2:	mov    r8,rsi
  4300c5:	call   0x4387f0
  4300ca:	jmp    0x42ffaf
  4300cf:	nop
  4300d0:	xor    eax,eax
  4300d2:	jmp    0x42fefc
  4300d7:	nop    WORD PTR [rax+rax*1+0x0]
  4300e0:	push   rdi
  4300e1:	push   rsi
  4300e2:	push   rbx
  4300e3:	sub    rsp,0x30
  4300e7:	test   rcx,rcx
  4300ea:	je     0x4302b0
  4300f0:	mov    rbx,rcx
  4300f3:	lea    rcx,[rip+0x545fe]        # 0x4846f8
  4300fa:	call   0x426d40
  4300ff:	mov    rcx,QWORD PTR [rip+0x545ea]        # 0x4846f0
  430106:	test   rcx,rcx
  430109:	je     0x430240
  43010f:	mov    rdx,rbx
  430112:	call   0x408de0
  430117:	test   eax,eax
  430119:	je     0x430150
  43011b:	mov    eax,eax
  43011d:	lea    rsi,[rax*8+0x0]
  430125:	mov    rax,QWORD PTR [rip+0x545bc]        # 0x4846e8
  43012c:	lea    rcx,[rip+0x545c5]        # 0x4846f8
  430133:	mov    rbx,QWORD PTR [rax+rsi*1]
  430137:	call   0x426d70
  43013c:	mov    rax,rbx
  43013f:	add    rsp,0x30
  430143:	pop    rbx
  430144:	pop    rsi
  430145:	pop    rdi
  430146:	ret    
  430147:	nop    WORD PTR [rax+rax*1+0x0]
  430150:	mov    r8d,DWORD PTR [rip+0x54589]        # 0x4846e0
  430157:	test   r8d,0x7ff
  43015e:	jne    0x430202
  430164:	add    r8d,0x800
  43016b:	movsxd rcx,r8d
  43016e:	mov    edx,0x8
  430173:	xor    esi,esi
  430175:	call   0x40e7a0
  43017a:	movsxd rcx,DWORD PTR [rip+0x5455f]        # 0x4846e0
  430181:	mov    rdi,rax
  430184:	test   ecx,ecx
  430186:	jne    0x430290
  43018c:	lea    rcx,[rdi+rsi*1]
  430190:	mov    r8d,0x4000
  430196:	xor    edx,edx
  430198:	call   0x4387e0
  43019d:	mov    QWORD PTR [rip+0x54544],rdi        # 0x4846e8
  4301a4:	mfence 
  4301a7:	cmp    QWORD PTR [rip+0x54541],0x0        # 0x4846f0
  4301af:	mov    r8d,DWORD PTR [rip+0x5452a]        # 0x4846e0
  4301b6:	jne    0x43020c
  4301b8:	test   r8d,r8d
  4301bb:	jne    0x430260
  4301c1:	lea    rdx,[rip+0xfffffffffffd9568]        # 0x409730
  4301c8:	lea    rcx,[rip+0xfffffffffffd9581]        # 0x409750
  4301cf:	call   0x408a60
  4301d4:	movsxd rdx,DWORD PTR [rip+0x54505]        # 0x4846e0
  4301db:	mov    QWORD PTR [rip+0x5450e],rax        # 0x4846f0
  4301e2:	mov    rax,QWORD PTR [rip+0x544ff]        # 0x4846e8
  4301e9:	mov    QWORD PTR [rax+rdx*8],0x0
  4301f1:	lock add DWORD PTR [rip+0x544e7],0x1        # 0x4846e0
  4301f9:	mov    r8d,DWORD PTR [rip+0x544e0]        # 0x4846e0
  430200:	jmp    0x43020c
  430202:	cmp    QWORD PTR [rip+0x544e6],0x0        # 0x4846f0
  43020a:	je     0x430260
  43020c:	mov    rax,QWORD PTR [rip+0x544d5]        # 0x4846e8
  430213:	lea    rsi,[r8*8+0x0]
  43021b:	mov    rdx,rbx
  43021e:	mov    QWORD PTR [rax+r8*8],rbx
  430222:	mfence 
  430225:	mov    rcx,QWORD PTR [rip+0x544c4]        # 0x4846f0
  43022c:	call   0x409090
  430231:	lock add DWORD PTR [rip+0x544a7],0x1        # 0x4846e0
  430239:	jmp    0x430125
  43023e:	xchg   ax,ax
  430240:	mov    eax,DWORD PTR [rip+0x5449a]        # 0x4846e0
  430246:	test   eax,0x7ff
  43024b:	jne    0x430260
  43024d:	lea    r8d,[rax+0x800]
  430254:	movsxd rcx,r8d
  430257:	jmp    0x43016e
  43025c:	nop    DWORD PTR [rax+0x0]
  430260:	lea    rax,[rip+0x4a67a]        # 0x47a8e1
  430267:	lea    r9,[rip+0x4a687]        # 0x47a8f5
  43026e:	lea    rdx,[rip+0x4a613]        # 0x47a888
  430275:	lea    rcx,[rip+0x4a595]        # 0x47a811
  43027c:	mov    r8d,0x50c
  430282:	mov    QWORD PTR [rsp+0x20],rax
  430287:	call   0x41e680
  43028c:	nop    DWORD PTR [rax+0x0]
  430290:	lea    rsi,[rcx*8+0x0]
  430298:	mov    rdx,QWORD PTR [rip+0x54449]        # 0x4846e8
  43029f:	mov    rcx,rax
  4302a2:	mov    r8,rsi
  4302a5:	call   0x4387f0
  4302aa:	jmp    0x43018c
  4302af:	nop
  4302b0:	xor    eax,eax
  4302b2:	jmp    0x43013f
  4302b7:	nop
  4302b8:	nop
  4302b9:	nop
  4302ba:	nop
  4302bb:	nop
  4302bc:	nop
  4302bd:	nop
  4302be:	nop
  4302bf:	nop
  4302c0:	push   rdi
  4302c1:	push   rsi
  4302c2:	push   rbx
  4302c3:	sub    rsp,0x20
  4302c7:	mov    rdi,rcx
  4302ca:	mov    rcx,rdx
  4302cd:	mov    rdx,r8
  4302d0:	call   0x418440
  4302d5:	mov    rsi,QWORD PTR [rdi]
  4302d8:	xor    r8d,r8d
  4302db:	mov    rcx,rax
  4302de:	mov    rbx,rax
  4302e1:	mov    rdx,rsi
  4302e4:	call   0x4184b0
  4302e9:	mov    rcx,rsi
  4302ec:	mov    QWORD PTR [rdi],rax
  4302ef:	call   0x40e6e0
  4302f4:	mov    rcx,rbx
  4302f7:	add    rsp,0x20
  4302fb:	pop    rbx
  4302fc:	pop    rsi
  4302fd:	pop    rdi
  4302fe:	jmp    0x40e6e0
  430303:	nop    DWORD PTR [rax]
  430306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430310:	push   r12
  430312:	push   rbp
  430313:	push   rdi
  430314:	push   rsi
  430315:	push   rbx
  430316:	sub    rsp,0x30
  43031a:	test   ecx,ecx
  43031c:	mov    esi,ecx
  43031e:	mov    ebp,edx
  430320:	mov    rdi,r8
  430323:	mov    r12,r9
  430326:	jne    0x430354
  430328:	lea    rax,[rip+0x4a80d]        # 0x47ab3c
  43032f:	lea    r9,[rip+0x4a99a]        # 0x47acd0
  430336:	lea    rdx,[rip+0x4a7a3]        # 0x47aae0
  43033d:	lea    rcx,[rip+0x4a7f3]        # 0x47ab37
  430344:	mov    r8d,0x186
  43034a:	mov    QWORD PTR [rsp+0x20],rax
  43034f:	call   0x40fd50
  430354:	test   rdi,rdi
  430357:	je     0x430390
  430359:	mov    ecx,0x10
  43035e:	call   0x416130
  430363:	mov    rdx,r12
  430366:	mov    rbx,rax
  430369:	mov    DWORD PTR [rax],esi
  43036b:	mov    DWORD PTR [rax+0x4],ebp
  43036e:	mov    rcx,rdi
  430371:	call   0x418440
  430376:	mov    QWORD PTR [rbx+0x8],rax
  43037a:	mov    rax,rbx
  43037d:	add    rsp,0x30
  430381:	pop    rbx
  430382:	pop    rsi
  430383:	pop    rdi
  430384:	pop    rbp
  430385:	pop    r12
  430387:	ret    
  430388:	nop    DWORD PTR [rax+rax*1+0x0]
  430390:	lea    rax,[rip+0x4a7b1]        # 0x47ab48
  430397:	lea    r9,[rip+0x4a932]        # 0x47acd0
  43039e:	lea    rdx,[rip+0x4a73b]        # 0x47aae0
  4303a5:	lea    rcx,[rip+0x4a78b]        # 0x47ab37
  4303ac:	mov    r8d,0x187
  4303b2:	mov    QWORD PTR [rsp+0x20],rax
  4303b7:	call   0x40fd50
  4303bc:	jmp    0x430359
  4303be:	xchg   ax,ax
  4303c0:	sub    rsp,0x38
  4303c4:	test   r8,r8
  4303c7:	mov    QWORD PTR [rsp+0x58],r9
  4303cc:	je     0x430410
  4303ce:	test   ecx,ecx
  4303d0:	jne    0x4303f3
  4303d2:	lea    r8,[rip+0x4a763]        # 0x47ab3c
  4303d9:	lea    rdx,[rip+0x4a8e4]        # 0x47acc4
  4303e0:	lea    rcx,[rip+0x4a750]        # 0x47ab37
  4303e7:	call   0x40fd20
  4303ec:	xor    eax,eax
  4303ee:	add    rsp,0x38
  4303f2:	ret    
  4303f3:	lea    r9,[rsp+0x58]
  4303f8:	mov    QWORD PTR [rsp+0x28],r9
  4303fd:	call   0x430310
  430402:	add    rsp,0x38
  430406:	ret    
  430407:	nop    WORD PTR [rax+rax*1+0x0]
  430410:	lea    r8,[rip+0x4a731]        # 0x47ab48
  430417:	lea    rdx,[rip+0x4a8a6]        # 0x47acc4
  43041e:	lea    rcx,[rip+0x4a712]        # 0x47ab37
  430425:	call   0x40fd20
  43042a:	xor    eax,eax
  43042c:	add    rsp,0x38
  430430:	ret    
  430431:	nop    DWORD PTR [rax+rax*1+0x0]
  430436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430440:	push   rdi
  430441:	push   rsi
  430442:	push   rbx
  430443:	sub    rsp,0x30
  430447:	test   r8,r8
  43044a:	mov    esi,ecx
  43044c:	mov    edi,edx
  43044e:	je     0x4304b3
  430450:	test   ecx,ecx
  430452:	jne    0x430480
  430454:	lea    r8,[rip+0x4a6e1]        # 0x47ab3c
  43045b:	lea    rdx,[rip+0x4a84e]        # 0x47acb0
  430462:	lea    rcx,[rip+0x4a6ce]        # 0x47ab37
  430469:	call   0x40fd20
  43046e:	xor    eax,eax
  430470:	add    rsp,0x30
  430474:	pop    rbx
  430475:	pop    rsi
  430476:	pop    rdi
  430477:	ret    
  430478:	nop    DWORD PTR [rax+rax*1+0x0]
  430480:	mov    ecx,0x10
  430485:	mov    QWORD PTR [rsp+0x28],r8
  43048a:	call   0x416130
  43048f:	mov    r8,QWORD PTR [rsp+0x28]
  430494:	mov    rbx,rax
  430497:	mov    DWORD PTR [rax],esi
  430499:	mov    DWORD PTR [rax+0x4],edi
  43049c:	mov    rcx,r8
  43049f:	call   0x4182b0
  4304a4:	mov    QWORD PTR [rbx+0x8],rax
  4304a8:	mov    rax,rbx
  4304ab:	add    rsp,0x30
  4304af:	pop    rbx
  4304b0:	pop    rsi
  4304b1:	pop    rdi
  4304b2:	ret    
  4304b3:	lea    r8,[rip+0x4a69d]        # 0x47ab57
  4304ba:	lea    rdx,[rip+0x4a7ef]        # 0x47acb0
  4304c1:	lea    rcx,[rip+0x4a66f]        # 0x47ab37
  4304c8:	call   0x40fd20
  4304cd:	xor    eax,eax
  4304cf:	add    rsp,0x30
  4304d3:	pop    rbx
  4304d4:	pop    rsi
  4304d5:	pop    rdi
  4304d6:	ret    
  4304d7:	nop    WORD PTR [rax+rax*1+0x0]
  4304e0:	push   rbx
  4304e1:	sub    rsp,0x20
  4304e5:	test   rcx,rcx
  4304e8:	je     0x430510
  4304ea:	mov    rbx,rcx
  4304ed:	mov    rcx,QWORD PTR [rcx+0x8]
  4304f1:	call   0x40e6e0
  4304f6:	mov    rdx,rbx
  4304f9:	mov    ecx,0x10
  4304fe:	add    rsp,0x20
  430502:	pop    rbx
  430503:	jmp    0x4167c0
  430508:	nop    DWORD PTR [rax+rax*1+0x0]
  430510:	lea    r8,[rip+0x4a650]        # 0x47ab67
  430517:	lea    rdx,[rip+0x4a781]        # 0x47ac9f
  43051e:	lea    rcx,[rip+0x4a612]        # 0x47ab37
  430525:	add    rsp,0x20
  430529:	pop    rbx
  43052a:	jmp    0x40fd20
  43052f:	nop
  430530:	push   rsi
  430531:	push   rbx
  430532:	sub    rsp,0x38
  430536:	test   rcx,rcx
  430539:	mov    rsi,rcx
  43053c:	je     0x4305e5
  430542:	mov    eax,DWORD PTR [rcx]
  430544:	test   eax,eax
  430546:	je     0x430581
  430548:	cmp    QWORD PTR [rsi+0x8],0x0
  43054d:	je     0x4305b4
  43054f:	mov    ecx,0x10
  430554:	call   0x416130
  430559:	mov    rdx,QWORD PTR [rsi+0x8]
  43055d:	mov    rbx,rax
  430560:	mov    rcx,QWORD PTR [rsi+0x8]
  430564:	mov    rax,QWORD PTR [rsi]
  430567:	mov    QWORD PTR [rbx+0x8],rdx
  43056b:	mov    QWORD PTR [rbx],rax
  43056e:	call   0x4182b0
  430573:	mov    QWORD PTR [rbx+0x8],rax
  430577:	mov    rax,rbx
  43057a:	add    rsp,0x38
  43057e:	pop    rbx
  43057f:	pop    rsi
  430580:	ret    
  430581:	lea    rax,[rip+0x4a5ed]        # 0x47ab75
  430588:	lea    r9,[rip+0x4a703]        # 0x47ac92
  43058f:	lea    rdx,[rip+0x4a54a]        # 0x47aae0
  430596:	lea    rcx,[rip+0x4a59a]        # 0x47ab37
  43059d:	mov    r8d,0x1f0
  4305a3:	mov    QWORD PTR [rsp+0x20],rax
  4305a8:	call   0x40fd50
  4305ad:	cmp    QWORD PTR [rsi+0x8],0x0
  4305b2:	jne    0x43054f
  4305b4:	lea    rax,[rip+0x4a5cd]        # 0x47ab88
  4305bb:	lea    r9,[rip+0x4a6d0]        # 0x47ac92
  4305c2:	lea    rdx,[rip+0x4a517]        # 0x47aae0
  4305c9:	lea    rcx,[rip+0x4a567]        # 0x47ab37
  4305d0:	mov    r8d,0x1f1
  4305d6:	mov    QWORD PTR [rsp+0x20],rax
  4305db:	call   0x40fd50
  4305e0:	jmp    0x43054f
  4305e5:	lea    r8,[rip+0x4a57b]        # 0x47ab67
  4305ec:	lea    rdx,[rip+0x4a69f]        # 0x47ac92
  4305f3:	lea    rcx,[rip+0x4a53d]        # 0x47ab37
  4305fa:	call   0x40fd20
  4305ff:	xor    eax,eax
  430601:	add    rsp,0x38
  430605:	pop    rbx
  430606:	pop    rsi
  430607:	ret    
  430608:	nop    DWORD PTR [rax+rax*1+0x0]
  430610:	xor    eax,eax
  430612:	test   rcx,rcx
  430615:	je     0x43061b
  430617:	cmp    DWORD PTR [rcx],edx
  430619:	je     0x430620
  43061b:	repz ret 
  43061d:	nop    DWORD PTR [rax]
  430620:	xor    eax,eax
  430622:	cmp    DWORD PTR [rcx+0x4],r8d
  430626:	sete   al
  430629:	ret    
  43062a:	nop    WORD PTR [rax+rax*1+0x0]
  430630:	push   rbx
  430631:	sub    rsp,0x30
  430635:	mov    rax,rcx
  430638:	mov    ecx,edx
  43063a:	mov    edx,r8d
  43063d:	test   rax,rax
  430640:	je     0x43067a
  430642:	mov    r8,r9
  430645:	lea    r9,[rsp+0x60]
  43064a:	mov    rbx,rax
  43064d:	mov    QWORD PTR [rsp+0x28],r9
  430652:	call   0x430310
  430657:	cmp    QWORD PTR [rbx],0x0
  43065b:	je     0x430680
  43065d:	mov    r9,QWORD PTR [rax+0x8]
  430661:	lea    r8,[rip+0x4a538]        # 0x47aba0
  430668:	lea    rcx,[rip+0x4a4c8]        # 0x47ab37
  43066f:	mov    edx,0x10
  430674:	call   0x40fae0
  430679:	nop
  43067a:	add    rsp,0x30
  43067e:	pop    rbx
  43067f:	ret    
  430680:	mov    QWORD PTR [rbx],rax
  430683:	add    rsp,0x30
  430687:	pop    rbx
  430688:	ret    
  430689:	nop    DWORD PTR [rax+0x0]
  430690:	push   rbx
  430691:	sub    rsp,0x20
  430695:	mov    rax,rcx
  430698:	mov    ecx,edx
  43069a:	mov    edx,r8d
  43069d:	test   rax,rax
  4306a0:	je     0x4306d7
  4306a2:	mov    rbx,rax
  4306a5:	mov    r8,r9
  4306a8:	call   0x430440
  4306ad:	cmp    QWORD PTR [rbx],0x0
  4306b1:	je     0x4306d4
  4306b3:	mov    r9,QWORD PTR [rax+0x8]
  4306b7:	lea    r8,[rip+0x4a4e2]        # 0x47aba0
  4306be:	lea    rcx,[rip+0x4a472]        # 0x47ab37
  4306c5:	mov    edx,0x10
  4306ca:	add    rsp,0x20
  4306ce:	pop    rbx
  4306cf:	jmp    0x40fae0
  4306d4:	mov    QWORD PTR [rbx],rax
  4306d7:	add    rsp,0x20
  4306db:	pop    rbx
  4306dc:	ret    
  4306dd:	nop    DWORD PTR [rax]
  4306e0:	test   rdx,rdx
  4306e3:	je     0x430714
  4306e5:	test   rcx,rcx
  4306e8:	je     0x430730
  4306ea:	cmp    QWORD PTR [rcx],0x0
  4306ee:	je     0x430710
  4306f0:	mov    r9,QWORD PTR [rdx+0x8]
  4306f4:	lea    r8,[rip+0x4a4a5]        # 0x47aba0
  4306fb:	lea    rcx,[rip+0x4a435]        # 0x47ab37
  430702:	mov    edx,0x10
  430707:	jmp    0x40fae0
  43070c:	nop    DWORD PTR [rax+0x0]
  430710:	mov    QWORD PTR [rcx],rdx
  430713:	ret    
  430714:	lea    r8,[rip+0x4a54b]        # 0x47ac66
  43071b:	lea    rdx,[rip+0x4a55e]        # 0x47ac80
  430722:	lea    rcx,[rip+0x4a40e]        # 0x47ab37
  430729:	jmp    0x40fd20
  43072e:	xchg   ax,ax
  430730:	mov    rcx,rdx
  430733:	jmp    0x4304e0
  430738:	nop    DWORD PTR [rax+rax*1+0x0]
  430740:	push   rbx
  430741:	sub    rsp,0x20
  430745:	test   rcx,rcx
  430748:	mov    rax,rcx
  43074b:	je     0x430764
  43074d:	mov    rcx,QWORD PTR [rcx]
  430750:	test   rcx,rcx
  430753:	je     0x430764
  430755:	mov    rbx,rax
  430758:	call   0x4304e0
  43075d:	mov    QWORD PTR [rbx],0x0
  430764:	add    rsp,0x20
  430768:	pop    rbx
  430769:	ret    
  43076a:	nop    WORD PTR [rax+rax*1+0x0]
  430770:	sub    rsp,0x38
  430774:	test   rcx,rcx
  430777:	mov    QWORD PTR [rsp+0x50],r8
  43077c:	mov    QWORD PTR [rsp+0x58],r9
  430781:	je     0x4307a0
  430783:	cmp    QWORD PTR [rcx],0x0
  430787:	je     0x4307a0
  430789:	mov    rcx,QWORD PTR [rcx]
  43078c:	lea    r8,[rsp+0x50]
  430791:	mov    QWORD PTR [rsp+0x28],r8
  430796:	add    rcx,0x8
  43079a:	call   0x4302c0
  43079f:	nop
  4307a0:	add    rsp,0x38
  4307a4:	ret    
  4307a5:	nop
  4307a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307b0:	push   rsi
  4307b1:	push   rbx
  4307b2:	sub    rsp,0x38
  4307b6:	mov    rbx,rcx
  4307b9:	mov    QWORD PTR [rsp+0x68],r9
  4307be:	mov    rsi,r8
  4307c1:	call   0x4306e0
  4307c6:	test   rbx,rbx
  4307c9:	je     0x4307eb
  4307cb:	cmp    QWORD PTR [rbx],0x0
  4307cf:	je     0x4307eb
  4307d1:	mov    rcx,QWORD PTR [rbx]
  4307d4:	lea    r8,[rsp+0x68]
  4307d9:	mov    rdx,rsi
  4307dc:	mov    QWORD PTR [rsp+0x28],r8
  4307e1:	add    rcx,0x8
  4307e5:	call   0x4302c0
  4307ea:	nop
  4307eb:	add    rsp,0x38
  4307ef:	pop    rbx
  4307f0:	pop    rsi
  4307f1:	ret    
  4307f2:	nop
  4307f3:	nop
  4307f4:	nop
  4307f5:	nop
  4307f6:	nop
  4307f7:	nop
  4307f8:	nop
  4307f9:	nop
  4307fa:	nop
  4307fb:	nop
  4307fc:	nop
  4307fd:	nop
  4307fe:	nop
  4307ff:	nop
  430800:	sub    rsp,0x28
  430804:	mfence 
  430807:	mov    rax,QWORD PTR [rip+0x53f12]        # 0x484720
  43080e:	test   rax,rax
  430811:	je     0x430822
  430813:	cmp    rax,0x1
  430817:	sete   al
  43081a:	movzx  eax,al
  43081d:	add    rsp,0x28
  430821:	ret    
  430822:	lea    rcx,[rip+0x53ef7]        # 0x484720
  430829:	call   0x41ebc0
  43082e:	test   eax,eax
  430830:	je     0x430848
  430832:	call   0x427610
  430837:	lea    rcx,[rip+0x53ee2]        # 0x484720
  43083e:	mov    edx,0x1
  430843:	call   0x41ec60
  430848:	mov    rax,QWORD PTR [rip+0x53ed1]        # 0x484720
  43084f:	jmp    0x430813
  430851:	nop    DWORD PTR [rax+rax*1+0x0]
  430856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430860:	push   rdi
  430861:	push   rsi
  430862:	push   rbx
  430863:	sub    rsp,0x20
  430867:	mov    rax,QWORD PTR [rip+0x4b392]        # 0x47bc00
  43086e:	mov    rcx,QWORD PTR [rax]
  430871:	test   rcx,rcx
  430874:	je     0x4308e2
  430876:	call   0x427820
  43087b:	test   rax,rax
  43087e:	mov    rbx,rax
  430881:	je     0x4308e2
  430883:	lea    rdx,[rip+0x4a466]        # 0x47acf0
  43088a:	nop    WORD PTR [rax+rax*1+0x0]
  430890:	sub    rdx,0x1
  430894:	cmp    BYTE PTR [rdx],0x2f
  430897:	jne    0x430890
  430899:	nop    DWORD PTR [rax+0x0]
  4308a0:	sub    rdx,0x1
  4308a4:	cmp    BYTE PTR [rdx],0x2f
  4308a7:	jne    0x4308a0
  4308a9:	xor    r8d,r8d
  4308ac:	mov    rcx,rbx
  4308af:	call   0x407800
  4308b4:	mov    rcx,rax
  4308b7:	mov    rsi,rax
  4308ba:	call   0x427af0
  4308bf:	mov    rcx,rbx
  4308c2:	mov    rdi,rax
  4308c5:	call   0x40e6e0
  4308ca:	mov    rcx,rsi
  4308cd:	call   0x40e6e0
  4308d2:	test   rdi,rdi
  4308d5:	je     0x4308e2
  4308d7:	mov    rax,rdi
  4308da:	add    rsp,0x20
  4308de:	pop    rbx
  4308df:	pop    rsi
  4308e0:	pop    rdi
  4308e1:	ret    
  4308e2:	lea    rcx,[rip+0x4a407]        # 0x47acf0
  4308e9:	add    rsp,0x20
  4308ed:	pop    rbx
  4308ee:	pop    rsi
  4308ef:	pop    rdi
  4308f0:	jmp    0x4182b0
  4308f5:	nop
  4308f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430900:	sub    rsp,0x28
  430904:	mfence 
  430907:	cmp    QWORD PTR [rip+0x53e19],0x0        # 0x484728
  43090f:	je     0x430920
  430911:	add    rsp,0x28
  430915:	ret    
  430916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430920:	lea    rcx,[rip+0x53e01]        # 0x484728
  430927:	call   0x41ebc0
  43092c:	test   eax,eax
  43092e:	je     0x430911
  430930:	call   0x430860
  430935:	mov    rcx,rax
  430938:	call   0x40e6e0
  43093d:	lea    rcx,[rip+0x53de4]        # 0x484728
  430944:	mov    edx,0x1
  430949:	add    rsp,0x28
  43094d:	jmp    0x41ec60
  430952:	nop    DWORD PTR [rax+0x0]
  430956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430960:	push   rbx
  430961:	sub    rsp,0x20
  430965:	mov    rbx,rcx
  430968:	call   0x430900
  43096d:	call   0x430800
  430972:	mov    rax,rbx
  430975:	add    rsp,0x20
  430979:	pop    rbx
  43097a:	ret    
  43097b:	nop    DWORD PTR [rax+rax*1+0x0]
  430980:	push   rbx
  430981:	sub    rsp,0x20
  430985:	cmp    rdx,rcx
  430988:	mov    rbx,rdx
  43098b:	je     0x4309a0
  43098d:	mov    rax,rbx
  430990:	add    rsp,0x20
  430994:	pop    rbx
  430995:	ret    
  430996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4309a0:	mov    rcx,rbx
  4309a3:	mov    edx,0x7c
  4309a8:	call   0x4387a8
  4309ad:	lea    rdx,[rax+0x1]
  4309b1:	test   rax,rax
  4309b4:	cmovne rbx,rdx
  4309b8:	mov    rax,rbx
  4309bb:	add    rsp,0x20
  4309bf:	pop    rbx
  4309c0:	ret    
  4309c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4309c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4309d0:	push   rbp
  4309d1:	push   rdi
  4309d2:	push   rsi
  4309d3:	push   rbx
  4309d4:	sub    rsp,0x28
  4309d8:	lea    rbp,[rsp+0x80]
  4309e0:	test   rcx,rcx
  4309e3:	mov    rdi,rcx
  4309e6:	mov    rsi,rdx
  4309e9:	mov    rbx,r8
  4309ec:	je     0x4309f3
  4309ee:	call   0x430800
  4309f3:	test   rbx,rbx
  4309f6:	lea    rax,[rsi+rbx*1]
  4309fa:	jne    0x430a5f
  4309fc:	mov    edx,0x7c
  430a01:	mov    rcx,rsi
  430a04:	call   0x4387a8
  430a09:	mov    rbx,rax
  430a0c:	mov    rax,rsi
  430a0f:	test   rbx,rbx
  430a12:	je     0x430a5f
  430a14:	mov    rcx,rsi
  430a17:	call   0x438788
  430a1c:	lea    r9,[rax+0x1f]
  430a20:	lea    r8,[rax+0x1]
  430a24:	mov    rax,r9
  430a27:	and    rax,0xfffffffffffffff0
  430a2b:	call   0x4340c0
  430a30:	sub    rsp,rax
  430a33:	mov    rdx,rsi
  430a36:	lea    r9,[rsp+0x20]
  430a3b:	mov    rcx,r9
  430a3e:	call   0x4387f0
  430a43:	mov    r9,rax
  430a46:	mov    rax,rbx
  430a49:	sub    rax,rsi
  430a4c:	test   rdi,rdi
  430a4f:	mov    BYTE PTR [r9+rax*1],0x4
  430a54:	je     0x430a5b
  430a56:	call   0x430800
  430a5b:	lea    rax,[rbx+0x1]
  430a5f:	lea    rsp,[rbp-0x58]
  430a63:	pop    rbx
  430a64:	pop    rsi
  430a65:	pop    rdi
  430a66:	pop    rbp
  430a67:	ret    
  430a68:	nop    DWORD PTR [rax+rax*1+0x0]
  430a70:	push   rsi
  430a71:	push   rbx
  430a72:	sub    rsp,0x28
  430a76:	mov    rbx,rcx
  430a79:	mov    rsi,rdx
  430a7c:	call   0x430900
  430a81:	lea    rcx,[rip+0x4a269]        # 0x47acf1
  430a88:	mov    r8,rsi
  430a8b:	mov    rdx,rbx
  430a8e:	add    rsp,0x28
  430a92:	pop    rbx
  430a93:	pop    rsi
  430a94:	jmp    0x4309d0
  430a99:	nop    DWORD PTR [rax+0x0]
  430aa0:	push   rbp
  430aa1:	push   r14
  430aa3:	push   r13
  430aa5:	push   r12
  430aa7:	push   rdi
  430aa8:	push   rsi
  430aa9:	push   rbx
  430aaa:	mov    rbp,rsp
  430aad:	sub    rsp,0x20
  430ab1:	mov    rdi,r8
  430ab4:	mov    r13,rcx
  430ab7:	mov    rcx,rdx
  430aba:	mov    r14,rdx
  430abd:	call   0x438788
  430ac2:	mov    rcx,rdi
  430ac5:	lea    rbx,[rax+0x1]
  430ac9:	mov    r12,rax
  430acc:	call   0x438788
  430ad1:	lea    rsi,[rax+0x1]
  430ad5:	lea    r9,[rbx+rsi*1+0x1e]
  430ada:	mov    rax,r9
  430add:	and    rax,0xfffffffffffffff0
  430ae1:	call   0x4340c0
  430ae6:	sub    rsp,rax
  430ae9:	mov    r8,r12
  430aec:	mov    rdx,r14
  430aef:	lea    r9,[rsp+0x20]
  430af4:	mov    rcx,r9
  430af7:	call   0x4387f0
  430afc:	lea    rcx,[rax+rbx*1]
  430b00:	mov    BYTE PTR [rax+r12*1],0x4
  430b05:	mov    r8,rsi
  430b08:	mov    rdx,rdi
  430b0b:	call   0x4387f0
  430b10:	test   r13,r13
  430b13:	je     0x430b1f
  430b15:	call   0x430800
  430b1a:	call   0x430800
  430b1f:	mov    rax,rdi
  430b22:	mov    rsp,rbp
  430b25:	pop    rbx
  430b26:	pop    rsi
  430b27:	pop    rdi
  430b28:	pop    r12
  430b2a:	pop    r13
  430b2c:	pop    r14
  430b2e:	pop    rbp
  430b2f:	ret    
  430b30:	push   rbx
  430b31:	sub    rsp,0x20
  430b35:	test   rcx,rcx
  430b38:	mov    rbx,rdx
  430b3b:	je     0x430b42
  430b3d:	call   0x430800
  430b42:	mov    rax,rbx
  430b45:	add    rsp,0x20
  430b49:	pop    rbx
  430b4a:	ret    
  430b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  430b50:	push   rbx
  430b51:	sub    rsp,0x20
  430b55:	test   rcx,rcx
  430b58:	mov    rbx,rdx
  430b5b:	je     0x430b62
  430b5d:	call   0x430800
  430b62:	mov    rax,rbx
  430b65:	add    rsp,0x20
  430b69:	pop    rbx
  430b6a:	ret    
  430b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  430b70:	push   rdi
  430b71:	push   rsi
  430b72:	push   rbx
  430b73:	sub    rsp,0x20
  430b77:	test   rcx,rcx
  430b7a:	mov    rbx,rdx
  430b7d:	mov    rsi,r8
  430b80:	mov    edi,r9d
  430b83:	je     0x430b8a
  430b85:	call   0x430800
  430b8a:	cmp    edi,0x1
  430b8d:	mov    rax,rsi
  430b90:	cmove  rax,rbx
  430b94:	add    rsp,0x20
  430b98:	pop    rbx
  430b99:	pop    rsi
  430b9a:	pop    rdi
  430b9b:	ret    
  430b9c:	nop
  430b9d:	nop
  430b9e:	nop
  430b9f:	nop
  430ba0:	push   r14
  430ba2:	push   r13
  430ba4:	push   r12
  430ba6:	push   rbp
  430ba7:	push   rdi
  430ba8:	push   rsi
  430ba9:	push   rbx
  430baa:	sub    rsp,0x20
  430bae:	test   r8d,r8d
  430bb1:	mov    r12,rcx
  430bb4:	mov    rbx,rdx
  430bb7:	je     0x430c61
  430bbd:	mov    rbp,QWORD PTR [rip+0x55f64]        # 0x486b28
  430bc4:	lea    eax,[r8-0x1]
  430bc8:	lea    rdi,[rcx+rax*1+0x1]
  430bcd:	mov    rsi,rbp
  430bd0:	jmp    0x430c05
  430bd2:	movsx  ecx,al
  430bd5:	mov    r14,rsi
  430bd8:	call   rsi
  430bda:	movzx  r8d,BYTE PTR [rbx]
  430bde:	mov    r13d,eax
  430be1:	mov    eax,0x2d
  430be6:	cmp    r8b,0x5f
  430bea:	je     0x430bf3
  430bec:	movsx  ecx,r8b
  430bf0:	call   r14
  430bf3:	cmp    r13b,al
  430bf6:	jne    0x430c50
  430bf8:	add    r12,0x1
  430bfc:	add    rbx,0x1
  430c00:	cmp    r12,rdi
  430c03:	je     0x430c30
  430c05:	movzx  eax,BYTE PTR [r12]
  430c0a:	cmp    al,0x5f
  430c0c:	jne    0x430bd2
  430c0e:	movzx  r8d,BYTE PTR [rbx]
  430c12:	mov    r13d,0x2d
  430c18:	mov    r14,rbp
  430c1b:	cmp    r8b,0x5f
  430c1f:	jne    0x430bec
  430c21:	add    r12,0x1
  430c25:	add    rbx,0x1
  430c29:	cmp    r12,rdi
  430c2c:	jne    0x430c05
  430c2e:	xchg   ax,ax
  430c30:	xor    eax,eax
  430c32:	cmp    BYTE PTR [rdi],0x0
  430c35:	sete   al
  430c38:	add    rsp,0x20
  430c3c:	pop    rbx
  430c3d:	pop    rsi
  430c3e:	pop    rdi
  430c3f:	pop    rbp
  430c40:	pop    r12
  430c42:	pop    r13
  430c44:	pop    r14
  430c46:	ret    
  430c47:	nop    WORD PTR [rax+rax*1+0x0]
  430c50:	xor    eax,eax
  430c52:	add    rsp,0x20
  430c56:	pop    rbx
  430c57:	pop    rsi
  430c58:	pop    rdi
  430c59:	pop    rbp
  430c5a:	pop    r12
  430c5c:	pop    r13
  430c5e:	pop    r14
  430c60:	ret    
  430c61:	mov    rdi,rcx
  430c64:	jmp    0x430c30
  430c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c70:	push   r15
  430c72:	push   r14
  430c74:	push   r13
  430c76:	push   r12
  430c78:	push   rbp
  430c79:	push   rdi
  430c7a:	push   rsi
  430c7b:	push   rbx
  430c7c:	sub    rsp,0x38
  430c80:	xor    eax,eax
  430c82:	test   rcx,rcx
  430c85:	mov    rbx,rcx
  430c88:	mov    r13,rdx
  430c8b:	mov    r14d,r8d
  430c8e:	je     0x430d63
  430c94:	lea    rdx,[rip+0x4a065]        # 0x47ad00
  430c9b:	call   QWORD PTR [rip+0x55c8f]        # 0x486930
  430ca1:	test   eax,eax
  430ca3:	je     0x430da1
  430ca9:	lea    edx,[r14-0x1]
  430cad:	movzx  eax,BYTE PTR [rbx]
  430cb0:	mov    DWORD PTR [rsp+0x2c],0x0
  430cb8:	xor    r12d,r12d
  430cbb:	shl    rdx,0x4
  430cbf:	lea    rdi,[r13+rdx*1+0x18]
  430cc4:	test   al,al
  430cc6:	je     0x430d35
  430cc8:	lea    rdx,[rip+0x4a05d]        # 0x47ad2c
  430ccf:	mov    rcx,rbx
  430cd2:	call   0x438770
  430cd7:	test   rax,rax
  430cda:	mov    rbp,rax
  430cdd:	je     0x430d90
  430ce3:	mov    r8,rbp
  430ce6:	lea    rcx,[rip+0x4a045]        # 0x47ad32
  430ced:	mov    rdx,rbx
  430cf0:	sub    r8,rbx
  430cf3:	mov    esi,r8d
  430cf6:	call   0x430ba0
  430cfb:	test   eax,eax
  430cfd:	jne    0x430d81
  430d03:	test   r14d,r14d
  430d06:	je     0x430d2f
  430d08:	lea    r15,[r13+0x8]
  430d0c:	nop    DWORD PTR [rax+0x0]
  430d10:	mov    rcx,QWORD PTR [r15-0x8]
  430d14:	mov    r8d,esi
  430d17:	mov    rdx,rbx
  430d1a:	call   0x430ba0
  430d1f:	test   eax,eax
  430d21:	je     0x430d26
  430d23:	or     r12d,DWORD PTR [r15]
  430d26:	add    r15,0x10
  430d2a:	cmp    r15,rdi
  430d2d:	jne    0x430d10
  430d2f:	cmp    BYTE PTR [rbp+0x0],0x0
  430d33:	jne    0x430d74
  430d35:	mov    edx,DWORD PTR [rsp+0x2c]
  430d39:	mov    eax,r12d
  430d3c:	test   edx,edx
  430d3e:	je     0x430d63
  430d40:	test   r14d,r14d
  430d43:	je     0x430e27
  430d49:	add    r13,0x8
  430d4d:	xor    eax,eax
  430d4f:	nop
  430d50:	or     eax,DWORD PTR [r13+0x0]
  430d54:	add    r13,0x10
  430d58:	cmp    r13,rdi
  430d5b:	jne    0x430d50
  430d5d:	not    r12d
  430d60:	and    eax,r12d
  430d63:	add    rsp,0x38
  430d67:	pop    rbx
  430d68:	pop    rsi
  430d69:	pop    rdi
  430d6a:	pop    rbp
  430d6b:	pop    r12
  430d6d:	pop    r13
  430d6f:	pop    r14
  430d71:	pop    r15
  430d73:	ret    
  430d74:	lea    rbx,[rbp+0x1]
  430d78:	movzx  eax,BYTE PTR [rbp+0x1]
  430d7c:	jmp    0x430cc4
  430d81:	mov    DWORD PTR [rsp+0x2c],0x1
  430d89:	jmp    0x430d2f
  430d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  430d90:	mov    rcx,rbx
  430d93:	call   0x438788
  430d98:	lea    rbp,[rbx+rax*1]
  430d9c:	jmp    0x430ce3
  430da1:	mov    rbp,QWORD PTR [rip+0x55ae0]        # 0x486888
  430da8:	call   rbp
  430daa:	lea    rcx,[rip+0x49f54]        # 0x47ad05
  430db1:	lea    r9,[rax+0x60]
  430db5:	mov    r8d,0x17
  430dbb:	mov    edx,0x1
  430dc0:	call   0x438848
  430dc5:	test   r14d,r14d
  430dc8:	je     0x430e03
  430dca:	lea    edi,[r14-0x1]
  430dce:	xor    ebx,ebx
  430dd0:	add    rdi,0x1
  430dd4:	shl    rdi,0x4
  430dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  430de0:	mov    rsi,QWORD PTR [r13+rbx*1+0x0]
  430de5:	add    rbx,0x10
  430de9:	call   rbp
  430deb:	lea    rdx,[rip+0x49f36]        # 0x47ad28
  430df2:	lea    rcx,[rax+0x60]
  430df6:	mov    r8,rsi
  430df9:	call   0x438870
  430dfe:	cmp    rbx,rdi
  430e01:	jne    0x430de0
  430e03:	call   rbp
  430e05:	lea    rcx,[rip+0x49f11]        # 0x47ad1d
  430e0c:	lea    r9,[rax+0x60]
  430e10:	mov    r8d,0xa
  430e16:	mov    edx,0x1
  430e1b:	call   0x438848
  430e20:	xor    eax,eax
  430e22:	jmp    0x430d63
  430e27:	xor    eax,eax
  430e29:	jmp    0x430d63
  430e2e:	nop
  430e2f:	nop
  430e30:	push   r15
  430e32:	push   r14
  430e34:	push   r13
  430e36:	push   r12
  430e38:	push   rbp
  430e39:	push   rdi
  430e3a:	push   rsi
  430e3b:	push   rbx
  430e3c:	sub    rsp,0x48
  430e40:	mov    r15,QWORD PTR [rcx+0x20]
  430e44:	mov    rbp,QWORD PTR [rcx]
  430e47:	cmp    r8,0x1
  430e4b:	mov    r13,QWORD PTR [rcx+0x10]
  430e4f:	mov    r14,QWORD PTR [rcx+0x18]
  430e53:	jbe    0x430f40
  430e59:	mov    rsi,r8
  430e5c:	mov    rbx,r8
  430e5f:	mov    rdi,rcx
  430e62:	shr    rsi,1
  430e65:	mov    QWORD PTR [rsp+0x38],r8
  430e6a:	mov    QWORD PTR [rsp+0x28],rdx
  430e6f:	mov    r10,rsi
  430e72:	sub    rbx,rsi
  430e75:	mov    r8,rsi
  430e78:	imul   r10,rbp
  430e7c:	mov    QWORD PTR [rsp+0x30],rcx
  430e81:	lea    r12,[rdx+r10*1]
  430e85:	call   0x430e30
  430e8a:	mov    r8,rbx
  430e8d:	mov    rdx,r12
  430e90:	mov    rcx,rdi
  430e93:	call   0x430e30
  430e98:	mov    rax,QWORD PTR [rdi+0x8]
  430e9c:	cmp    rax,0x1
  430ea0:	je     0x431027
  430ea6:	jb     0x430f9e
  430eac:	cmp    rax,0x2
  430eb0:	je     0x431078
  430eb6:	cmp    rax,0x3
  430eba:	je     0x430f51
  430ec0:	mov    rdi,QWORD PTR [rsp+0x28]
  430ec5:	test   rbx,rbx
  430ec8:	je     0x430f00
  430eca:	test   rsi,rsi
  430ecd:	je     0x430f00
  430ecf:	mov    r8,r14
  430ed2:	mov    rdx,r12
  430ed5:	mov    rcx,rdi
  430ed8:	call   r13
  430edb:	test   eax,eax
  430edd:	mov    r8,rbp
  430ee0:	jle    0x430ff4
  430ee6:	mov    rdx,r12
  430ee9:	mov    rcx,r15
  430eec:	sub    rbx,0x1
  430ef0:	call   0x4387f0
  430ef5:	add    r15,rbp
  430ef8:	add    r12,rbp
  430efb:	test   rbx,rbx
  430efe:	jne    0x430eca
  430f00:	test   rsi,rsi
  430f03:	jne    0x431010
  430f09:	mov    r8,QWORD PTR [rsp+0x38]
  430f0e:	mov    rax,QWORD PTR [rsp+0x30]
  430f13:	mov    rcx,QWORD PTR [rsp+0x28]
  430f18:	sub    r8,rbx
  430f1b:	mov    rdx,QWORD PTR [rax+0x20]
  430f1f:	imul   r8,rbp
  430f23:	add    rsp,0x48
  430f27:	pop    rbx
  430f28:	pop    rsi
  430f29:	pop    rdi
  430f2a:	pop    rbp
  430f2b:	pop    r12
  430f2d:	pop    r13
  430f2f:	pop    r14
  430f31:	pop    r15
  430f33:	jmp    0x4387f0
  430f38:	nop    DWORD PTR [rax+rax*1+0x0]
  430f40:	add    rsp,0x48
  430f44:	pop    rbx
  430f45:	pop    rsi
  430f46:	pop    rdi
  430f47:	pop    rbp
  430f48:	pop    r12
  430f4a:	pop    r13
  430f4c:	pop    r14
  430f4e:	pop    r15
  430f50:	ret    
  430f51:	test   rbx,rbx
  430f54:	mov    rdi,QWORD PTR [rsp+0x28]
  430f59:	jne    0x430f7d
  430f5b:	jmp    0x431010
  430f60:	mov    rax,QWORD PTR [r12]
  430f64:	sub    rbx,0x1
  430f68:	add    r12,0x8
  430f6c:	mov    QWORD PTR [r15],rax
  430f6f:	add    r15,0x8
  430f73:	test   rbx,rbx
  430f76:	je     0x430f00
  430f78:	test   rsi,rsi
  430f7b:	je     0x430f00
  430f7d:	mov    r8,r14
  430f80:	mov    rdx,QWORD PTR [r12]
  430f84:	mov    rcx,QWORD PTR [rdi]
  430f87:	call   r13
  430f8a:	test   eax,eax
  430f8c:	jg     0x430f60
  430f8e:	mov    rax,QWORD PTR [rdi]
  430f91:	sub    rsi,0x1
  430f95:	add    rdi,0x8
  430f99:	mov    QWORD PTR [r15],rax
  430f9c:	jmp    0x430f6f
  430f9e:	test   rbx,rbx
  430fa1:	mov    rdi,QWORD PTR [rsp+0x28]
  430fa6:	jne    0x430fd5
  430fa8:	jmp    0x431010
  430faa:	nop    WORD PTR [rax+rax*1+0x0]
  430fb0:	mov    eax,DWORD PTR [r12]
  430fb4:	sub    rbx,0x1
  430fb8:	add    r12,0x4
  430fbc:	mov    DWORD PTR [r15],eax
  430fbf:	add    r15,0x4
  430fc3:	test   rbx,rbx
  430fc6:	je     0x430f00
  430fcc:	test   rsi,rsi
  430fcf:	je     0x430f00
  430fd5:	mov    r8,r14
  430fd8:	mov    rdx,r12
  430fdb:	mov    rcx,rdi
  430fde:	call   r13
  430fe1:	test   eax,eax
  430fe3:	jg     0x430fb0
  430fe5:	mov    eax,DWORD PTR [rdi]
  430fe7:	sub    rsi,0x1
  430feb:	add    rdi,0x4
  430fef:	mov    DWORD PTR [r15],eax
  430ff2:	jmp    0x430fbf
  430ff4:	mov    rdx,rdi
  430ff7:	mov    rcx,r15
  430ffa:	add    rdi,rbp
  430ffd:	call   0x4387f0
  431002:	add    r15,rbp
  431005:	sub    rsi,0x1
  431009:	jmp    0x430ec5
  43100e:	xchg   ax,ax
  431010:	imul   rsi,rbp
  431014:	mov    rdx,rdi
  431017:	mov    rcx,r15
  43101a:	mov    r8,rsi
  43101d:	call   0x4387f0
  431022:	jmp    0x430f09
  431027:	test   rbx,rbx
  43102a:	mov    rdi,QWORD PTR [rsp+0x28]
  43102f:	jne    0x431058
  431031:	jmp    0x431010
  431033:	mov    rax,QWORD PTR [r12]
  431037:	sub    rbx,0x1
  43103b:	add    r12,0x8
  43103f:	mov    QWORD PTR [r15],rax
  431042:	add    r15,0x8
  431046:	test   rbx,rbx
  431049:	je     0x430f00
  43104f:	test   rsi,rsi
  431052:	je     0x430f00
  431058:	mov    r8,r14
  43105b:	mov    rdx,r12
  43105e:	mov    rcx,rdi
  431061:	call   r13
  431064:	test   eax,eax
  431066:	jg     0x431033
  431068:	mov    rax,QWORD PTR [rdi]
  43106b:	sub    rsi,0x1
  43106f:	add    rdi,0x8
  431073:	mov    QWORD PTR [r15],rax
  431076:	jmp    0x431042
  431078:	mov    rdi,QWORD PTR [rsp+0x28]
  43107d:	nop    DWORD PTR [rax]
  431080:	test   rbx,rbx
  431083:	je     0x430f00
  431089:	test   rsi,rsi
  43108c:	je     0x430f00
  431092:	lea    r11,[r15+rbp*1]
  431096:	mov    r8,r14
  431099:	mov    rdx,r12
  43109c:	mov    rcx,rdi
  43109f:	mov    QWORD PTR [rsp+0x20],r11
  4310a4:	call   r13
  4310a7:	test   eax,eax
  4310a9:	mov    r11,QWORD PTR [rsp+0x20]
  4310ae:	jle    0x4310e0
  4310b0:	mov    rax,r12
  4310b3:	sub    rbx,0x1
  4310b7:	add    r12,rbp
  4310ba:	cmp    r15,r11
  4310bd:	jae    0x4310d4
  4310bf:	nop
  4310c0:	add    rax,0x4
  4310c4:	mov    edx,DWORD PTR [rax-0x4]
  4310c7:	add    r15,0x4
  4310cb:	cmp    r11,r15
  4310ce:	mov    DWORD PTR [r15-0x4],edx
  4310d2:	ja     0x4310c0
  4310d4:	mov    r15,r11
  4310d7:	jmp    0x431080
  4310d9:	nop    DWORD PTR [rax+0x0]
  4310e0:	mov    rax,rdi
  4310e3:	sub    rsi,0x1
  4310e7:	add    rdi,rbp
  4310ea:	jmp    0x4310ba
  4310ec:	nop    DWORD PTR [rax+0x0]
  4310f0:	push   rbp
  4310f1:	push   r15
  4310f3:	push   r14
  4310f5:	push   r13
  4310f7:	push   r12
  4310f9:	push   rdi
  4310fa:	push   rsi
  4310fb:	push   rbx
  4310fc:	sub    rsp,0x68
  431100:	lea    rbp,[rsp+0x80]
  431108:	cmp    r8,0x20
  43110c:	mov    r12,rcx
  43110f:	mov    QWORD PTR [rbp+0x38],rdx
  431113:	mov    rbx,r8
  431116:	ja     0x431260
  43111c:	mov    rcx,r8
  43111f:	imul   rcx,rdx
  431123:	cmp    rcx,0x3ff
  43112a:	ja     0x431278
  431130:	lea    rax,[rcx+0x1e]
  431134:	and    rax,0xfffffffffffffff0
  431138:	call   0x4340c0
  43113d:	sub    rsp,rax
  431140:	mov    QWORD PTR [rbp-0x60],0x0
  431148:	lea    rax,[rsp+0x20]
  43114d:	mov    QWORD PTR [rbp-0x30],rax
  431151:	mov    rax,QWORD PTR [rbp+0x50]
  431155:	cmp    rbx,0x20
  431159:	mov    QWORD PTR [rbp-0x50],rbx
  43115d:	mov    QWORD PTR [rbp-0x48],0x4
  431165:	mov    QWORD PTR [rbp-0x40],r9
  431169:	mov    QWORD PTR [rbp-0x38],rax
  43116d:	jbe    0x431292
  431173:	mov    rax,QWORD PTR [rbp+0x38]
  431177:	lea    rcx,[rax*8+0x0]
  43117f:	mov    rsi,rcx
  431182:	add    rsi,QWORD PTR [rbp-0x30]
  431186:	lea    rax,[rsi+rcx*1]
  43118a:	cmp    rsi,rax
  43118d:	mov    QWORD PTR [rbp-0x58],rax
  431191:	jae    0x4312de
  431197:	mov    rax,rsi
  43119a:	mov    rdx,r12
  43119d:	nop    DWORD PTR [rax]
  4311a0:	add    rax,0x8
  4311a4:	mov    QWORD PTR [rax-0x8],rdx
  4311a8:	add    rdx,rbx
  4311ab:	cmp    QWORD PTR [rbp-0x58],rax
  4311af:	ja     0x4311a0
  4311b1:	mov    rdx,rcx
  4311b4:	add    rdx,QWORD PTR [rbp-0x30]
  4311b8:	mov    r8,QWORD PTR [rbp+0x38]
  4311bc:	lea    rcx,[rbp-0x50]
  4311c0:	mov    QWORD PTR [rbp-0x50],0x8
  4311c8:	mov    QWORD PTR [rbp-0x48],0x3
  4311d0:	xor    r13d,r13d
  4311d3:	mov    rdi,r12
  4311d6:	call   0x430e30
  4311db:	cmp    QWORD PTR [rbp+0x38],0x0
  4311e0:	je     0x4312a7
  4311e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4311f0:	mov    r15,QWORD PTR [rsi+r13*8]
  4311f4:	cmp    r15,rdi
  4311f7:	je     0x431251
  4311f9:	mov    rcx,QWORD PTR [rbp-0x58]
  4311fd:	mov    r8,rbx
  431200:	mov    rdx,rdi
  431203:	call   0x4387f0
  431208:	mov    rcx,rdi
  43120b:	mov    r8,r13
  43120e:	jmp    0x431213
  431210:	mov    r15,rax
  431213:	mov    rax,r15
  431216:	xor    edx,edx
  431218:	mov    QWORD PTR [rsi+r8*8],rcx
  43121c:	sub    rax,r12
  43121f:	mov    r8,rbx
  431222:	div    rbx
  431225:	mov    rdx,r15
  431228:	mov    r14,rax
  43122b:	call   0x4387f0
  431230:	lea    rdx,[rsi+r14*8]
  431234:	mov    r8,r14
  431237:	mov    rcx,r15
  43123a:	mov    rax,QWORD PTR [rdx]
  43123d:	cmp    rax,rdi
  431240:	jne    0x431210
  431242:	mov    QWORD PTR [rdx],r15
  431245:	mov    rdx,QWORD PTR [rbp-0x58]
  431249:	mov    r8,rbx
  43124c:	call   0x4387f0
  431251:	add    r13,0x1
  431255:	add    rdi,rbx
  431258:	cmp    r13,QWORD PTR [rbp+0x38]
  43125c:	jne    0x4311f0
  43125e:	jmp    0x4312a7
  431260:	mov    rcx,QWORD PTR [rbp+0x38]
  431264:	shl    rcx,0x4
  431268:	add    rcx,r8
  43126b:	cmp    rcx,0x3ff
  431272:	jbe    0x431130
  431278:	mov    QWORD PTR [rbp-0x58],r9
  43127c:	call   0x40e5c0
  431281:	mov    r9,QWORD PTR [rbp-0x58]
  431285:	mov    QWORD PTR [rbp-0x60],rax
  431289:	mov    QWORD PTR [rbp-0x30],rax
  43128d:	jmp    0x431151
  431292:	test   bl,0x3
  431295:	je     0x4312c2
  431297:	mov    r8,QWORD PTR [rbp+0x38]
  43129b:	lea    rcx,[rbp-0x50]
  43129f:	mov    rdx,r12
  4312a2:	call   0x430e30
  4312a7:	mov    rcx,QWORD PTR [rbp-0x60]
  4312ab:	call   0x40e6e0
  4312b0:	nop
  4312b1:	lea    rsp,[rbp-0x18]
  4312b5:	pop    rbx
  4312b6:	pop    rsi
  4312b7:	pop    rdi
  4312b8:	pop    r12
  4312ba:	pop    r13
  4312bc:	pop    r14
  4312be:	pop    r15
  4312c0:	pop    rbp
  4312c1:	ret    
  4312c2:	test   r12b,0x3
  4312c6:	jne    0x431297
  4312c8:	cmp    rbx,0x4
  4312cc:	je     0x4312e6
  4312ce:	cmp    rbx,0x8
  4312d2:	je     0x4312f0
  4312d4:	mov    QWORD PTR [rbp-0x48],0x2
  4312dc:	jmp    0x431297
  4312de:	mov    rdx,rsi
  4312e1:	jmp    0x4311b8
  4312e6:	mov    QWORD PTR [rbp-0x48],0x0
  4312ee:	jmp    0x431297
  4312f0:	test   r12b,0x7
  4312f4:	jne    0x4312d4
  4312f6:	mov    QWORD PTR [rbp-0x48],0x1
  4312fe:	jmp    0x431297
  431300:	movsxd rdx,edx
  431303:	jmp    0x4310f0
  431308:	nop
  431309:	nop
  43130a:	nop
  43130b:	nop
  43130c:	nop
  43130d:	nop
  43130e:	nop
  43130f:	nop
  431310:	push   rdi
  431311:	push   rsi
  431312:	sub    rsp,0x28
  431316:	mfence 
  431319:	cmp    QWORD PTR [rip+0x53427],0x0        # 0x484748
  431321:	je     0x431330
  431323:	mov    eax,DWORD PTR [rip+0x53417]        # 0x484740
  431329:	add    rsp,0x28
  43132d:	pop    rsi
  43132e:	pop    rdi
  43132f:	ret    
  431330:	lea    rcx,[rip+0x53411]        # 0x484748
  431337:	call   0x41ebc0
  43133c:	test   eax,eax
  43133e:	je     0x431323
  431340:	lea    rcx,[rip+0x49aa8]        # 0x47adef
  431347:	call   0x4059c0
  43134c:	test   rax,rax
  43134f:	je     0x4313d0
  431351:	cmp    BYTE PTR [rax],0x0
  431354:	je     0x4313d0
  431356:	lea    rdi,[rip+0x49a53]        # 0x47adb0
  43135d:	mov    ecx,0x4
  431362:	mov    rsi,rax
  431365:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  431367:	je     0x4313d0
  431369:	lea    rdi,[rip+0x49a44]        # 0x47adb4
  431370:	mov    ecx,0x4
  431375:	mov    rsi,rax
  431378:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43137a:	jne    0x4313b0
  43137c:	mov    DWORD PTR [rip+0x533ba],0x14        # 0x484740
  431386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431390:	lea    rcx,[rip+0x533b1]        # 0x484748
  431397:	mov    edx,0x1
  43139c:	call   0x41ec60
  4313a1:	mov    eax,DWORD PTR [rip+0x53399]        # 0x484740
  4313a7:	add    rsp,0x28
  4313ab:	pop    rsi
  4313ac:	pop    rdi
  4313ad:	ret    
  4313ae:	xchg   ax,ax
  4313b0:	lea    r8,[rip+0x49a01]        # 0x47adb8
  4313b7:	lea    rcx,[rip+0x49a2c]        # 0x47adea
  4313be:	mov    r9,rax
  4313c1:	mov    edx,0x10
  4313c6:	call   0x40fae0
  4313cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4313d0:	mov    DWORD PTR [rip+0x53366],0x16        # 0x484740
  4313da:	jmp    0x431390
  4313dc:	nop    DWORD PTR [rax+0x0]
  4313e0:	test   rcx,rcx
  4313e3:	je     0x4313f0
  4313e5:	jmp    0x40e6e0
  4313ea:	nop    WORD PTR [rax+rax*1+0x0]
  4313f0:	lea    r8,[rip+0x49a09]        # 0x47ae00
  4313f7:	lea    rdx,[rip+0x49afe]        # 0x47aefc
  4313fe:	lea    rcx,[rip+0x499e5]        # 0x47adea
  431405:	jmp    0x40fd20
  43140a:	nop    WORD PTR [rax+rax*1+0x0]
  431410:	push   rdi
  431411:	push   rsi
  431412:	sub    rsp,0x28
  431416:	test   rcx,rcx
  431419:	mov    rsi,rcx
  43141c:	je     0x431462
  43141e:	mov    ecx,0x9c4
  431423:	call   0x40e610
  431428:	mov    rdx,QWORD PTR [rsi]
  43142b:	lea    rdi,[rax+0x8]
  43142f:	and    rdi,0xfffffffffffffff8
  431433:	mov    QWORD PTR [rax],rdx
  431436:	mov    rdx,QWORD PTR [rsi+0x9bc]
  43143d:	mov    QWORD PTR [rax+0x9bc],rdx
  431444:	mov    rdx,rax
  431447:	sub    rdx,rdi
  43144a:	sub    rsi,rdx
  43144d:	add    edx,0x9c4
  431453:	shr    edx,0x3
  431456:	mov    ecx,edx
  431458:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  43145b:	add    rsp,0x28
  43145f:	pop    rsi
  431460:	pop    rdi
  431461:	ret    
  431462:	lea    r8,[rip+0x49997]        # 0x47ae00
  431469:	lea    rdx,[rip+0x49a80]        # 0x47aef0
  431470:	lea    rcx,[rip+0x49973]        # 0x47adea
  431477:	call   0x40fd20
  43147c:	xor    eax,eax
  43147e:	add    rsp,0x28
  431482:	pop    rsi
  431483:	pop    rdi
  431484:	ret    
  431485:	nop
  431486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431490:	push   rsi
  431491:	push   rbx
  431492:	sub    rsp,0x38
  431496:	test   rcx,rcx
  431499:	je     0x431570
  43149f:	mov    ebx,edx
  4314a1:	mov    rsi,rcx
  4314a4:	call   0x431310
  4314a9:	cmp    eax,0x14
  4314ac:	je     0x431530
  4314b2:	cmp    eax,0x16
  4314b5:	jne    0x431504
  4314b7:	mov    DWORD PTR [rsi],ebx
  4314b9:	lea    r8,[rsi+0x4]
  4314bd:	mov    edx,ebx
  4314bf:	mov    eax,0x1
  4314c4:	jmp    0x4314d4
  4314c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4314d0:	add    r8,0x4
  4314d4:	mov    r9d,edx
  4314d7:	shr    r9d,0x1e
  4314db:	xor    edx,r9d
  4314de:	imul   edx,edx,0x6c078965
  4314e4:	add    edx,eax
  4314e6:	add    eax,0x1
  4314e9:	cmp    eax,0x270
  4314ee:	mov    DWORD PTR [r8],edx
  4314f1:	jne    0x4314d0
  4314f3:	mov    DWORD PTR [rsi+0x9c0],0x270
  4314fd:	add    rsp,0x38
  431501:	pop    rbx
  431502:	pop    rsi
  431503:	ret    
  431504:	lea    r9,[rip+0x499d5]        # 0x47aee0
  43150b:	lea    rdx,[rip+0x498fe]        # 0x47ae10
  431512:	lea    rcx,[rip+0x498d1]        # 0x47adea
  431519:	mov    QWORD PTR [rsp+0x20],0x0
  431522:	mov    r8d,0x156
  431528:	call   0x41e540
  43152d:	nop    DWORD PTR [rax]
  431530:	test   ebx,ebx
  431532:	je     0x431560
  431534:	mov    DWORD PTR [rsi],ebx
  431536:	mov    edx,ebx
  431538:	lea    rax,[rsi+0x4]
  43153c:	lea    rcx,[rsi+0x9bc]
  431543:	jmp    0x431549
  431545:	add    rax,0x4
  431549:	imul   edx,edx,0x10dcd
  43154f:	cmp    rax,rcx
  431552:	mov    DWORD PTR [rax],edx
  431554:	jne    0x431545
  431556:	jmp    0x4314f3
  431558:	nop    DWORD PTR [rax+rax*1+0x0]
  431560:	mov    DWORD PTR [rsi],0x6b842128
  431566:	mov    edx,0x6b842128
  43156b:	jmp    0x431538
  43156d:	nop    DWORD PTR [rax]
  431570:	lea    r8,[rip+0x49889]        # 0x47ae00
  431577:	lea    rdx,[rip+0x49962]        # 0x47aee0
  43157e:	lea    rcx,[rip+0x49865]        # 0x47adea
  431585:	add    rsp,0x38
  431589:	pop    rbx
  43158a:	pop    rsi
  43158b:	jmp    0x40fd20
  431590:	push   rsi
  431591:	push   rbx
  431592:	sub    rsp,0x28
  431596:	mov    esi,ecx
  431598:	mov    ecx,0x9c4
  43159d:	call   0x40e610
  4315a2:	mov    edx,esi
  4315a4:	mov    rbx,rax
  4315a7:	mov    rcx,rax
  4315aa:	call   0x431490
  4315af:	mov    rax,rbx
  4315b2:	add    rsp,0x28
  4315b6:	pop    rbx
  4315b7:	pop    rsi
  4315b8:	ret    
  4315b9:	nop    DWORD PTR [rax+0x0]
  4315c0:	push   rdi
  4315c1:	push   rsi
  4315c2:	push   rbx
  4315c3:	sub    rsp,0x20
  4315c7:	test   rcx,rcx
  4315ca:	je     0x4316d9
  4315d0:	test   r8d,r8d
  4315d3:	je     0x4316b8
  4315d9:	mov    rbx,rcx
  4315dc:	mov    rdi,rdx
  4315df:	mov    edx,0x12bd6aa
  4315e4:	mov    esi,r8d
  4315e7:	call   0x431490
  4315ec:	mov    eax,DWORD PTR [rbx]
  4315ee:	cmp    esi,0x270
  4315f4:	mov    r10d,0x270
  4315fa:	cmovae r10d,esi
  4315fe:	mov    r9d,0x1
  431604:	xor    ecx,ecx
  431606:	xor    r8d,r8d
  431609:	nop    DWORD PTR [rax+0x0]
  431610:	movsxd rdx,r9d
  431613:	add    r9d,0x1
  431617:	lea    r11,[rbx+rdx*4]
  43161b:	mov    edx,eax
  43161d:	shr    edx,0x1e
  431620:	xor    eax,edx
  431622:	movsxd rdx,ecx
  431625:	imul   eax,eax,0x19660d
  43162b:	xor    eax,DWORD PTR [r11]
  43162e:	add    eax,DWORD PTR [rdi+rdx*4]
  431631:	add    eax,ecx
  431633:	add    ecx,0x1
  431636:	cmp    r9d,0x26f
  43163d:	mov    DWORD PTR [r11],eax
  431640:	jle    0x431650
  431642:	mov    eax,DWORD PTR [rbx+0x9bc]
  431648:	mov    r9d,0x1
  43164e:	mov    DWORD PTR [rbx],eax
  431650:	cmp    esi,ecx
  431652:	cmovbe ecx,r8d
  431656:	sub    r10d,0x1
  43165a:	jne    0x431610
  43165c:	mov    edx,0x26f
  431661:	jmp    0x43166c
  431663:	lea    eax,[r9-0x1]
  431667:	cdqe   
  431669:	mov    eax,DWORD PTR [rbx+rax*4]
  43166c:	movsxd rcx,r9d
  43166f:	mov    r8d,eax
  431672:	lea    rcx,[rbx+rcx*4]
  431676:	shr    r8d,0x1e
  43167a:	xor    eax,r8d
  43167d:	imul   eax,eax,0x5d588b65
  431683:	xor    eax,DWORD PTR [rcx]
  431685:	sub    eax,r9d
  431688:	add    r9d,0x1
  43168c:	cmp    r9d,0x26f
  431693:	mov    DWORD PTR [rcx],eax
  431695:	jle    0x4316a5
  431697:	mov    eax,DWORD PTR [rbx+0x9bc]
  43169d:	mov    r9d,0x1
  4316a3:	mov    DWORD PTR [rbx],eax
  4316a5:	sub    edx,0x1
  4316a8:	jne    0x431663
  4316aa:	mov    DWORD PTR [rbx],0x80000000
  4316b0:	add    rsp,0x20
  4316b4:	pop    rbx
  4316b5:	pop    rsi
  4316b6:	pop    rdi
  4316b7:	ret    
  4316b8:	lea    r8,[rip+0x497a7]        # 0x47ae66
  4316bf:	lea    rdx,[rip+0x497fa]        # 0x47aec0
  4316c6:	lea    rcx,[rip+0x4971d]        # 0x47adea
  4316cd:	add    rsp,0x20
  4316d1:	pop    rbx
  4316d2:	pop    rsi
  4316d3:	pop    rdi
  4316d4:	jmp    0x40fd20
  4316d9:	lea    r8,[rip+0x49720]        # 0x47ae00
  4316e0:	jmp    0x4316bf
  4316e2:	nop    DWORD PTR [rax+0x0]
  4316e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4316f0:	push   rdi
  4316f1:	push   rsi
  4316f2:	push   rbx
  4316f3:	sub    rsp,0x20
  4316f7:	mov    edi,edx
  4316f9:	mov    rsi,rcx
  4316fc:	mov    ecx,0x9c4
  431701:	call   0x40e610
  431706:	mov    r8d,edi
  431709:	mov    rbx,rax
  43170c:	mov    rcx,rax
  43170f:	mov    rdx,rsi
  431712:	call   0x4315c0
  431717:	mov    rax,rbx
  43171a:	add    rsp,0x20
  43171e:	pop    rbx
  43171f:	pop    rsi
  431720:	pop    rdi
  431721:	ret    
  431722:	nop    DWORD PTR [rax+0x0]
  431726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431730:	push   rbx
  431731:	sub    rsp,0x40
  431735:	lea    rcx,[rsp+0x20]
  43173a:	call   0x40bf20
  43173f:	mov    eax,DWORD PTR [rsp+0x20]
  431743:	mov    DWORD PTR [rsp+0x30],eax
  431747:	mov    eax,DWORD PTR [rsp+0x24]
  43174b:	mov    DWORD PTR [rsp+0x34],eax
  43174f:	call   0x438700
  431754:	mov    ecx,0x9c4
  431759:	mov    DWORD PTR [rsp+0x38],eax
  43175d:	mov    DWORD PTR [rsp+0x3c],0x0
  431765:	call   0x40e610
  43176a:	lea    rdx,[rsp+0x30]
  43176f:	mov    rbx,rax
  431772:	mov    rcx,rax
  431775:	mov    r8d,0x4
  43177b:	call   0x4315c0
  431780:	mov    rax,rbx
  431783:	add    rsp,0x40
  431787:	pop    rbx
  431788:	ret    
  431789:	nop    DWORD PTR [rax+0x0]
  431790:	sub    rsp,0x28
  431794:	test   rcx,rcx
  431797:	je     0x4318ae
  43179d:	mov    eax,DWORD PTR [rcx+0x9c0]
  4317a3:	cmp    eax,0x26f
  4317a8:	ja     0x4317e2
  4317aa:	lea    edx,[rax+0x1]
  4317ad:	mov    eax,DWORD PTR [rcx+rax*4]
  4317b0:	mov    DWORD PTR [rcx+0x9c0],edx
  4317b6:	mov    edx,eax
  4317b8:	shr    edx,0xb
  4317bb:	xor    eax,edx
  4317bd:	mov    edx,eax
  4317bf:	shl    edx,0x7
  4317c2:	and    edx,0x9d2c5680
  4317c8:	xor    edx,eax
  4317ca:	mov    eax,edx
  4317cc:	shl    eax,0xf
  4317cf:	and    eax,0xefc60000
  4317d4:	xor    eax,edx
  4317d6:	mov    edx,eax
  4317d8:	shr    edx,0x12
  4317db:	xor    eax,edx
  4317dd:	add    rsp,0x28
  4317e1:	ret    
  4317e2:	lea    rdx,[rcx+0x38c]
  4317e9:	lea    r10,[rip+0x496b4]        # 0x47aea4
  4317f0:	mov    r8,rcx
  4317f3:	mov    eax,DWORD PTR [r8]
  4317f6:	mov    r9d,DWORD PTR [r8+0x4]
  4317fa:	add    r8,0x4
  4317fe:	and    r9d,0x7fffffff
  431805:	and    eax,0x80000000
  43180a:	or     eax,r9d
  43180d:	mov    r9d,eax
  431810:	and    eax,0x1
  431813:	shr    r9d,1
  431816:	xor    r9d,DWORD PTR [r8+0x630]
  43181d:	xor    r9d,DWORD PTR [r10+rax*4]
  431821:	mov    DWORD PTR [r8-0x4],r9d
  431825:	cmp    r8,rdx
  431828:	jne    0x4317f3
  43182a:	lea    r9,[rcx+0x9bc]
  431831:	mov    eax,DWORD PTR [rdx]
  431833:	mov    r8d,DWORD PTR [rdx+0x4]
  431837:	add    rdx,0x4
  43183b:	and    r8d,0x7fffffff
  431842:	and    eax,0x80000000
  431847:	or     eax,r8d
  43184a:	mov    r8d,eax
  43184d:	and    eax,0x1
  431850:	shr    r8d,1
  431853:	xor    r8d,DWORD PTR [rdx-0x390]
  43185a:	xor    r8d,DWORD PTR [r10+rax*4]
  43185e:	mov    DWORD PTR [rdx-0x4],r8d
  431862:	cmp    rdx,r9
  431865:	jne    0x431831
  431867:	mov    eax,DWORD PTR [rcx]
  431869:	mov    edx,DWORD PTR [rcx+0x9bc]
  43186f:	lea    r9,[rip+0x4962e]        # 0x47aea4
  431876:	mov    r8d,eax
  431879:	and    edx,0x80000000
  43187f:	and    r8d,0x7fffffff
  431886:	or     edx,r8d
  431889:	mov    r8d,edx
  43188c:	and    edx,0x1
  43188f:	shr    r8d,1
  431892:	xor    r8d,DWORD PTR [rcx+0x630]
  431899:	xor    r8d,DWORD PTR [r9+rdx*4]
  43189d:	mov    edx,0x1
  4318a2:	mov    DWORD PTR [rcx+0x9bc],r8d
  4318a9:	jmp    0x4317b0
  4318ae:	lea    r8,[rip+0x4954b]        # 0x47ae00
  4318b5:	lea    rdx,[rip+0x495f0]        # 0x47aeac
  4318bc:	lea    rcx,[rip+0x49527]        # 0x47adea
  4318c3:	call   0x40fd20
  4318c8:	xor    eax,eax
  4318ca:	add    rsp,0x28
  4318ce:	ret    
  4318cf:	nop
  4318d0:	push   rsi
  4318d1:	push   rbx
  4318d2:	sub    rsp,0x48
  4318d6:	movaps XMMWORD PTR [rsp+0x20],xmm6
  4318db:	movaps XMMWORD PTR [rsp+0x30],xmm7
  4318e0:	mov    rsi,rcx
  4318e3:	movsd  xmm6,QWORD PTR [rip+0x4961d]        # 0x47af08
  4318eb:	movsd  xmm7,QWORD PTR [rip+0x4961d]        # 0x47af10
  4318f3:	mov    rcx,rsi
  4318f6:	call   0x431790
  4318fb:	mov    rcx,rsi
  4318fe:	mov    ebx,eax
  431900:	call   0x431790
  431905:	pxor   xmm0,xmm0
  431909:	mov    eax,eax
  43190b:	pxor   xmm1,xmm1
  43190f:	cvtsi2sd xmm0,rbx
  431914:	cvtsi2sd xmm1,rax
  431919:	mulsd  xmm0,xmm6
  43191d:	addsd  xmm0,xmm1
  431921:	mulsd  xmm0,xmm6
  431925:	ucomisd xmm0,xmm7
  431929:	jae    0x4318f3
  43192b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  431930:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  431935:	add    rsp,0x48
  431939:	pop    rbx
  43193a:	pop    rsi
  43193b:	ret    
  43193c:	nop    DWORD PTR [rax+0x0]
  431940:	push   rbp
  431941:	push   rdi
  431942:	push   rsi
  431943:	push   rbx
  431944:	sub    rsp,0x38
  431948:	test   rcx,rcx
  43194b:	mov    rdi,rcx
  43194e:	mov    ebx,edx
  431950:	je     0x431a85
  431956:	cmp    r8d,edx
  431959:	jle    0x4319c0
  43195b:	mov    esi,r8d
  43195e:	sub    esi,edx
  431960:	call   0x431310
  431965:	cmp    eax,0x14
  431968:	je     0x431a10
  43196e:	cmp    eax,0x16
  431971:	jne    0x4319e5
  431973:	xor    edx,edx
  431975:	test   esi,esi
  431977:	je     0x4319b0
  431979:	cmp    esi,0x80000000
  43197f:	lea    ebp,[rsi-0x1]
  431982:	ja     0x4319a0
  431984:	xor    edx,edx
  431986:	mov    eax,0x80000000
  43198b:	div    esi
  43198d:	lea    ebp,[rdx+rdx*1]
  431990:	mov    eax,ebp
  431992:	sub    eax,esi
  431994:	cmp    esi,ebp
  431996:	cmovbe ebp,eax
  431999:	not    ebp
  43199b:	nop    DWORD PTR [rax+rax*1+0x0]
  4319a0:	mov    rcx,rdi
  4319a3:	call   0x431790
  4319a8:	cmp    eax,ebp
  4319aa:	ja     0x4319a0
  4319ac:	xor    edx,edx
  4319ae:	div    esi
  4319b0:	lea    eax,[rdx+rbx*1]
  4319b3:	add    rsp,0x38
  4319b7:	pop    rbx
  4319b8:	pop    rsi
  4319b9:	pop    rdi
  4319ba:	pop    rbp
  4319bb:	ret    
  4319bc:	nop    DWORD PTR [rax+0x0]
  4319c0:	lea    r8,[rip+0x494b0]        # 0x47ae77
  4319c7:	lea    rdx,[rip+0x494c2]        # 0x47ae90
  4319ce:	lea    rcx,[rip+0x49415]        # 0x47adea
  4319d5:	call   0x40fd20
  4319da:	mov    eax,ebx
  4319dc:	add    rsp,0x38
  4319e0:	pop    rbx
  4319e1:	pop    rsi
  4319e2:	pop    rdi
  4319e3:	pop    rbp
  4319e4:	ret    
  4319e5:	lea    r9,[rip+0x494a4]        # 0x47ae90
  4319ec:	lea    rdx,[rip+0x4941d]        # 0x47ae10
  4319f3:	lea    rcx,[rip+0x493f0]        # 0x47adea
  4319fa:	mov    QWORD PTR [rsp+0x20],0x0
  431a03:	mov    r8d,0x216
  431a09:	call   0x41e540
  431a0e:	xchg   ax,ax
  431a10:	cmp    esi,0x10000
  431a16:	mov    rcx,rdi
  431a19:	ja     0x431a50
  431a1b:	call   0x431790
  431a20:	pxor   xmm0,xmm0
  431a24:	mov    eax,eax
  431a26:	pxor   xmm1,xmm1
  431a2a:	cvtsi2sd xmm0,rax
  431a2f:	cvtsi2sd xmm1,esi
  431a33:	mulsd  xmm0,QWORD PTR [rip+0x494dd]        # 0x47af18
  431a3b:	mulsd  xmm0,xmm1
  431a3f:	cvttsd2si edx,xmm0
  431a43:	lea    eax,[rdx+rbx*1]
  431a46:	jmp    0x4319b3
  431a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  431a50:	call   0x4318d0
  431a55:	pxor   xmm1,xmm1
  431a59:	mov    r8d,esi
  431a5c:	cvtsi2sd xmm1,r8
  431a61:	mulsd  xmm1,xmm0
  431a65:	subsd  xmm0,QWORD PTR [rip+0x494a3]        # 0x47af10
  431a6d:	mulsd  xmm0,QWORD PTR [rip+0x494ab]        # 0x47af20
  431a75:	subsd  xmm1,xmm0
  431a79:	cvttsd2si edx,xmm1
  431a7d:	lea    eax,[rdx+rbx*1]
  431a80:	jmp    0x4319b3
  431a85:	lea    r8,[rip+0x49374]        # 0x47ae00
  431a8c:	lea    rdx,[rip+0x493fd]        # 0x47ae90
  431a93:	lea    rcx,[rip+0x49350]        # 0x47adea
  431a9a:	call   0x40fd20
  431a9f:	mov    eax,ebx
  431aa1:	add    rsp,0x38
  431aa5:	pop    rbx
  431aa6:	pop    rsi
  431aa7:	pop    rdi
  431aa8:	pop    rbp
  431aa9:	ret    
  431aaa:	nop    WORD PTR [rax+rax*1+0x0]
  431ab0:	sub    rsp,0x48
  431ab4:	movaps XMMWORD PTR [rsp+0x20],xmm6
  431ab9:	movaps XMMWORD PTR [rsp+0x30],xmm7
  431abe:	movapd xmm6,xmm2
  431ac2:	movapd xmm7,xmm1
  431ac6:	call   0x4318d0
  431acb:	mulsd  xmm6,xmm0
  431acf:	subsd  xmm0,QWORD PTR [rip+0x49439]        # 0x47af10
  431ad7:	mulsd  xmm0,xmm7
  431adb:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  431ae0:	subsd  xmm6,xmm0
  431ae4:	movapd xmm0,xmm6
  431ae8:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  431aed:	add    rsp,0x48
  431af1:	ret    
  431af2:	nop    DWORD PTR [rax+0x0]
  431af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431b00:	push   rbx
  431b01:	sub    rsp,0x20
  431b05:	lea    rcx,[rip+0x52c4c]        # 0x484758
  431b0c:	call   0x426d40
  431b11:	mov    rcx,QWORD PTR [rip+0x52c38]        # 0x484750
  431b18:	test   rcx,rcx
  431b1b:	je     0x431b40
  431b1d:	call   0x431790
  431b22:	lea    rcx,[rip+0x52c2f]        # 0x484758
  431b29:	mov    ebx,eax
  431b2b:	call   0x426d70
  431b30:	mov    eax,ebx
  431b32:	add    rsp,0x20
  431b36:	pop    rbx
  431b37:	ret    
  431b38:	nop    DWORD PTR [rax+rax*1+0x0]
  431b40:	call   0x431730
  431b45:	mov    rcx,rax
  431b48:	mov    QWORD PTR [rip+0x52c01],rax        # 0x484750
  431b4f:	jmp    0x431b1d
  431b51:	nop    DWORD PTR [rax+rax*1+0x0]
  431b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431b60:	push   rsi
  431b61:	push   rbx
  431b62:	sub    rsp,0x28
  431b66:	mov    ebx,ecx
  431b68:	lea    rcx,[rip+0x52be9]        # 0x484758
  431b6f:	mov    esi,edx
  431b71:	call   0x426d40
  431b76:	mov    rcx,QWORD PTR [rip+0x52bd3]        # 0x484750
  431b7d:	test   rcx,rcx
  431b80:	je     0x431ba3
  431b82:	mov    edx,ebx
  431b84:	mov    r8d,esi
  431b87:	call   0x431940
  431b8c:	lea    rcx,[rip+0x52bc5]        # 0x484758
  431b93:	mov    ebx,eax
  431b95:	call   0x426d70
  431b9a:	mov    eax,ebx
  431b9c:	add    rsp,0x28
  431ba0:	pop    rbx
  431ba1:	pop    rsi
  431ba2:	ret    
  431ba3:	call   0x431730
  431ba8:	mov    rcx,rax
  431bab:	mov    QWORD PTR [rip+0x52b9e],rax        # 0x484750
  431bb2:	jmp    0x431b82
  431bb4:	xchg   ax,ax
  431bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431bc0:	sub    rsp,0x38
  431bc4:	movaps XMMWORD PTR [rsp+0x20],xmm6
  431bc9:	lea    rcx,[rip+0x52b88]        # 0x484758
  431bd0:	call   0x426d40
  431bd5:	mov    rcx,QWORD PTR [rip+0x52b74]        # 0x484750
  431bdc:	test   rcx,rcx
  431bdf:	je     0x431c04
  431be1:	call   0x4318d0
  431be6:	lea    rcx,[rip+0x52b6b]        # 0x484758
  431bed:	movapd xmm6,xmm0
  431bf1:	call   0x426d70
  431bf6:	movapd xmm0,xmm6
  431bfa:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  431bff:	add    rsp,0x38
  431c03:	ret    
  431c04:	call   0x431730
  431c09:	mov    rcx,rax
  431c0c:	mov    QWORD PTR [rip+0x52b3d],rax        # 0x484750
  431c13:	jmp    0x431be1
  431c15:	nop
  431c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c20:	sub    rsp,0x48
  431c24:	movaps XMMWORD PTR [rsp+0x20],xmm6
  431c29:	movaps XMMWORD PTR [rsp+0x30],xmm7
  431c2e:	lea    rcx,[rip+0x52b23]        # 0x484758
  431c35:	movapd xmm7,xmm0
  431c39:	movapd xmm6,xmm1
  431c3d:	call   0x426d40
  431c42:	mov    rcx,QWORD PTR [rip+0x52b07]        # 0x484750
  431c49:	test   rcx,rcx
  431c4c:	je     0x431c90
  431c4e:	call   0x4318d0
  431c53:	movapd xmm2,xmm0
  431c57:	mulsd  xmm6,xmm0
  431c5b:	lea    rcx,[rip+0x52af6]        # 0x484758
  431c62:	subsd  xmm2,QWORD PTR [rip+0x492a6]        # 0x47af10
  431c6a:	mulsd  xmm7,xmm2
  431c6e:	call   0x426d70
  431c73:	subsd  xmm6,xmm7
  431c77:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  431c7c:	movapd xmm0,xmm6
  431c80:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  431c85:	add    rsp,0x48
  431c89:	ret    
  431c8a:	nop    WORD PTR [rax+rax*1+0x0]
  431c90:	call   0x431730
  431c95:	mov    rcx,rax
  431c98:	mov    QWORD PTR [rip+0x52ab1],rax        # 0x484750
  431c9f:	jmp    0x431c4e
  431ca1:	nop    DWORD PTR [rax+rax*1+0x0]
  431ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431cb0:	push   rsi
  431cb1:	push   rbx
  431cb2:	sub    rsp,0x28
  431cb6:	mov    ebx,ecx
  431cb8:	lea    rcx,[rip+0x52a99]        # 0x484758
  431cbf:	call   0x426d40
  431cc4:	mov    rcx,QWORD PTR [rip+0x52a85]        # 0x484750
  431ccb:	test   rcx,rcx
  431cce:	je     0x431cf0
  431cd0:	mov    edx,ebx
  431cd2:	call   0x431490
  431cd7:	lea    rcx,[rip+0x52a7a]        # 0x484758
  431cde:	add    rsp,0x28
  431ce2:	pop    rbx
  431ce3:	pop    rsi
  431ce4:	jmp    0x426d70
  431ce9:	nop    DWORD PTR [rax+0x0]
  431cf0:	mov    cx,0x9c4
  431cf4:	call   0x40e610
  431cf9:	mov    edx,ebx
  431cfb:	mov    rsi,rax
  431cfe:	mov    rcx,rax
  431d01:	call   0x431490
  431d06:	mov    QWORD PTR [rip+0x52a43],rsi        # 0x484750
  431d0d:	jmp    0x431cd7
  431d0f:	nop
  431d10:	mov    rax,QWORD PTR [rip+0x52a59]        # 0x484770
  431d17:	test   rax,rax
  431d1a:	je     0x431d20
  431d1c:	repz ret 
  431d1e:	xchg   ax,ax
  431d20:	lea    rax,[rip+0x49209]        # 0x47af30
  431d27:	mov    QWORD PTR [rip+0x52a42],rax        # 0x484770
  431d2e:	ret    
  431d2f:	nop
  431d30:	sub    rsp,0x28
  431d34:	call   QWORD PTR [rip+0x5494e]        # 0x486688
  431d3a:	lea    rdx,[rip+0x4936f]        # 0x47b0b0
  431d41:	lea    rcx,[rip+0x52a18]        # 0x484760
  431d48:	mov    r8d,eax
  431d4b:	call   0x4387b0
  431d50:	lea    rax,[rip+0x52a09]        # 0x484760
  431d57:	add    rsp,0x28
  431d5b:	ret    
  431d5c:	nop    DWORD PTR [rax+0x0]
  431d60:	push   rdi
  431d61:	push   rsi
  431d62:	push   rbx
  431d63:	sub    rsp,0x20
  431d67:	mov    rbx,QWORD PTR [rip+0x52a02]        # 0x484770
  431d6e:	lea    rax,[rip+0x49340]        # 0x47b0b5
  431d75:	test   rcx,rcx
  431d78:	mov    rdi,rcx
  431d7b:	cmove  rdi,rax
  431d7f:	test   rbx,rbx
  431d82:	jne    0x431daa
  431d84:	jmp    0x431df3
  431d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431d90:	mov    rcx,rbx
  431d93:	call   0x438788
  431d98:	lea    rbx,[rbx+rax*1+0x1]
  431d9d:	mov    rcx,rbx
  431da0:	call   0x438788
  431da5:	lea    rbx,[rbx+rax*1+0x1]
  431daa:	movzx  esi,BYTE PTR [rbx]
  431dad:	test   sil,sil
  431db0:	je     0x431dda
  431db2:	mov    rdx,rbx
  431db5:	mov    rcx,rdi
  431db8:	call   0x4387a0
  431dbd:	test   eax,eax
  431dbf:	je     0x431dcd
  431dc1:	cmp    sil,0x2a
  431dc5:	jne    0x431d90
  431dc7:	cmp    BYTE PTR [rbx+0x1],0x0
  431dcb:	jne    0x431d90
  431dcd:	mov    rcx,rbx
  431dd0:	call   0x438788
  431dd5:	lea    rdi,[rbx+rax*1+0x1]
  431dda:	cmp    BYTE PTR [rdi],0x0
  431ddd:	lea    rax,[rip+0x492d2]        # 0x47b0b6
  431de4:	cmove  rdi,rax
  431de8:	mov    rax,rdi
  431deb:	add    rsp,0x20
  431def:	pop    rbx
  431df0:	pop    rsi
  431df1:	pop    rdi
  431df2:	ret    
  431df3:	lea    rax,[rip+0x49136]        # 0x47af30
  431dfa:	mov    QWORD PTR [rip+0x5296f],rax        # 0x484770
  431e01:	mov    rbx,rax
  431e04:	jmp    0x431daa
  431e06:	nop
  431e07:	nop
  431e08:	nop
  431e09:	nop
  431e0a:	nop
  431e0b:	nop
  431e0c:	nop
  431e0d:	nop
  431e0e:	nop
  431e0f:	nop
  431e10:	mov    r8d,DWORD PTR [rdx]
  431e13:	xor    r9d,r9d
  431e16:	mov    rax,QWORD PTR [rdx+0x8]
  431e1a:	lea    r10,[rip+0x4929f]        # 0x47b0c0
  431e21:	test   r8d,r8d
  431e24:	je     0x431e5a
  431e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431e30:	cmp    DWORD PTR [rax],0x18
  431e33:	ja     0x431eb0
  431e35:	mov    r8d,DWORD PTR [rax]
  431e38:	movsxd r8,DWORD PTR [r10+r8*4]
  431e3c:	add    r8,r10
  431e3f:	jmp    r8
  431e42:	mov    r8,QWORD PTR [rcx]
  431e45:	add    rcx,0x8
  431e49:	mov    QWORD PTR [rax+0x10],r8
  431e4d:	add    r9d,0x1
  431e51:	add    rax,0x20
  431e55:	cmp    DWORD PTR [rdx],r9d
  431e58:	ja     0x431e30
  431e5a:	xor    eax,eax
  431e5c:	ret    
  431e5d:	nop    DWORD PTR [rax]
  431e60:	mov    r8d,DWORD PTR [rcx]
  431e63:	add    rcx,0x8
  431e67:	mov    DWORD PTR [rax+0x10],r8d
  431e6b:	jmp    0x431e4d
  431e6d:	nop    DWORD PTR [rax]
  431e70:	mov    r8d,DWORD PTR [rcx]
  431e73:	add    rcx,0x8
  431e77:	mov    WORD PTR [rax+0x10],r8w
  431e7c:	jmp    0x431e4d
  431e7e:	xchg   ax,ax
  431e80:	mov    r8d,DWORD PTR [rcx]
  431e83:	add    rcx,0x8
  431e87:	mov    BYTE PTR [rax+0x10],r8b
  431e8b:	jmp    0x431e4d
  431e8d:	nop    DWORD PTR [rax]
  431e90:	movsd  xmm0,QWORD PTR [rcx]
  431e94:	add    rcx,0x8
  431e98:	movsd  QWORD PTR [rax+0x10],xmm0
  431e9d:	jmp    0x431e4d
  431e9f:	nop
  431ea0:	mov    r8,QWORD PTR [rcx]
  431ea3:	add    rcx,0x8
  431ea7:	fld    TBYTE PTR [r8]
  431eaa:	fstp   TBYTE PTR [rax+0x10]
  431ead:	jmp    0x431e4d
  431eaf:	nop
  431eb0:	mov    eax,0xffffffff
  431eb5:	ret    
  431eb6:	nop
  431eb7:	nop
  431eb8:	nop
  431eb9:	nop
  431eba:	nop
  431ebb:	nop
  431ebc:	nop
  431ebd:	nop
  431ebe:	nop
  431ebf:	nop
  431ec0:	push   r15
  431ec2:	push   r14
  431ec4:	push   r13
  431ec6:	push   r12
  431ec8:	push   rbp
  431ec9:	push   rdi
  431eca:	push   rsi
  431ecb:	push   rbx
  431ecc:	sub    rsp,0x48
  431ed0:	mov    rsi,rcx
  431ed3:	mov    DWORD PTR [rdx],0x0
  431ed9:	mov    ecx,0x50
  431ede:	mov    r13,rdx
  431ee1:	mov    r14,r8
  431ee4:	call   0x40e5c0
  431ee9:	test   rax,rax
  431eec:	mov    QWORD PTR [r13+0x8],rax
  431ef0:	je     0x432102
  431ef6:	mov    DWORD PTR [r14],0x0
  431efd:	mov    QWORD PTR [r14+0x8],0x0
  431f05:	xor    r10d,r10d
  431f08:	mov    ebx,DWORD PTR [r13+0x0]
  431f0c:	xor    r8d,r8d
  431f0f:	xor    r15d,r15d
  431f12:	mov    r11d,0x1
  431f18:	mov    DWORD PTR [rsp+0x24],0x0
  431f20:	lea    r9,[rip+0x49209]        # 0x47b130
  431f27:	jmp    0x431f3c
  431f29:	nop    DWORD PTR [rax+0x0]
  431f30:	cmp    dl,0x25
  431f33:	lea    rcx,[rsi+0x1]
  431f37:	je     0x431f70
  431f39:	mov    rsi,rcx
  431f3c:	movzx  edx,BYTE PTR [rsi]
  431f3f:	test   dl,dl
  431f41:	jne    0x431f30
  431f43:	lea    rdx,[rbx+rbx*4]
  431f47:	shl    rdx,0x4
  431f4b:	mov    QWORD PTR [rax+rdx*1],rsi
  431f4f:	mov    DWORD PTR [r13+0x10],r8d
  431f53:	xor    eax,eax
  431f55:	mov    DWORD PTR [r13+0x14],r10d
  431f59:	add    rsp,0x48
  431f5d:	pop    rbx
  431f5e:	pop    rsi
  431f5f:	pop    rdi
  431f60:	pop    rbp
  431f61:	pop    r12
  431f63:	pop    r13
  431f65:	pop    r14
  431f67:	pop    r15
  431f69:	ret    
  431f6a:	nop    WORD PTR [rax+rax*1+0x0]
  431f70:	lea    rdi,[rbx+rbx*4]
  431f74:	shl    rdi,0x4
  431f78:	add    rdi,rax
  431f7b:	mov    QWORD PTR [rdi],rsi
  431f7e:	mov    DWORD PTR [rdi+0x10],0x0
  431f85:	mov    QWORD PTR [rdi+0x18],0x0
  431f8d:	mov    QWORD PTR [rdi+0x20],0x0
  431f95:	mov    DWORD PTR [rdi+0x28],0xffffffff
  431f9c:	mov    QWORD PTR [rdi+0x30],0x0
  431fa4:	mov    QWORD PTR [rdi+0x38],0x0
  431fac:	mov    DWORD PTR [rdi+0x40],0xffffffff
  431fb3:	mov    DWORD PTR [rdi+0x48],0xffffffff
  431fba:	movsx  edx,BYTE PTR [rsi+0x1]
  431fbe:	lea    eax,[rdx-0x30]
  431fc1:	cmp    al,0x9
  431fc3:	jbe    0x4321b3
  431fc9:	mov    ebp,0xffffffff
  431fce:	lea    rax,[rcx+0x1]
  431fd2:	jmp    0x431ff8
  431fd4:	cmp    dl,0x2d
  431fd7:	je     0x432010
  431fd9:	cmp    dl,0x2b
  431fdc:	je     0x432020
  431fde:	cmp    dl,0x20
  431fe1:	je     0x432030
  431fe3:	cmp    dl,0x23
  431fe6:	je     0x432040
  431fe8:	cmp    dl,0x30
  431feb:	jne    0x432050
  431fed:	or     DWORD PTR [rdi+0x10],0x20
  431ff1:	movzx  edx,BYTE PTR [rax]
  431ff4:	add    rax,0x1
  431ff8:	cmp    dl,0x27
  431ffb:	lea    rsi,[rax-0x1]
  431fff:	jne    0x431fd4
  432001:	or     DWORD PTR [rdi+0x10],0x1
  432005:	jmp    0x431ff1
  432007:	nop    WORD PTR [rax+rax*1+0x0]
  432010:	or     DWORD PTR [rdi+0x10],0x2
  432014:	jmp    0x431ff1
  432016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432020:	or     DWORD PTR [rdi+0x10],0x4
  432024:	jmp    0x431ff1
  432026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432030:	or     DWORD PTR [rdi+0x10],0x8
  432034:	jmp    0x431ff1
  432036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432040:	or     DWORD PTR [rdi+0x10],0x10
  432044:	jmp    0x431ff1
  432046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432050:	cmp    dl,0x2a
  432053:	mov    rcx,rsi
  432056:	je     0x4322aa
  43205c:	lea    eax,[rdx-0x30]
  43205f:	cmp    al,0x9
  432061:	jbe    0x432217
  432067:	cmp    dl,0x2e
  43206a:	je     0x432259
  432070:	xor    eax,eax
  432072:	mov    ebx,0x1
  432077:	jmp    0x4320ad
  432079:	nop    DWORD PTR [rax+0x0]
  432080:	cmp    dl,0x4c
  432083:	je     0x4320c3
  432085:	cmp    dl,0x6c
  432088:	je     0x4320d0
  43208a:	cmp    dl,0x49
  43208d:	je     0x4320e0
  43208f:	cmp    dl,0x6a
  432092:	je     0x4320a3
  432094:	mov    ecx,edx
  432096:	and    ecx,0xffffffdf
  432099:	cmp    cl,0x5a
  43209c:	je     0x4320a3
  43209e:	cmp    dl,0x74
  4320a1:	jne    0x432121
  4320a3:	add    eax,0x10
  4320a6:	add    rsi,0x1
  4320aa:	movzx  edx,BYTE PTR [rsi]
  4320ad:	cmp    dl,0x68
  4320b0:	jne    0x432080
  4320b2:	mov    ecx,eax
  4320b4:	mov    edx,ebx
  4320b6:	add    rsi,0x1
  4320ba:	and    ecx,0x1
  4320bd:	shl    edx,cl
  4320bf:	or     eax,edx
  4320c1:	jmp    0x4320aa
  4320c3:	or     eax,0x4
  4320c6:	add    rsi,0x1
  4320ca:	jmp    0x4320aa
  4320cc:	nop    DWORD PTR [rax+0x0]
  4320d0:	add    eax,0x8
  4320d3:	add    rsi,0x1
  4320d7:	jmp    0x4320aa
  4320d9:	nop    DWORD PTR [rax+0x0]
  4320e0:	cmp    BYTE PTR [rsi+0x1],0x36
  4320e4:	je     0x432110
  4320e6:	mov    rcx,QWORD PTR [r14+0x8]
  4320ea:	test   rcx,rcx
  4320ed:	je     0x4320f4
  4320ef:	call   0x40e6e0
  4320f4:	mov    rcx,QWORD PTR [r13+0x8]
  4320f8:	test   rcx,rcx
  4320fb:	je     0x432102
  4320fd:	call   0x40e6e0
  432102:	mov    eax,0xffffffff
  432107:	jmp    0x431f59
  43210c:	nop    DWORD PTR [rax+0x0]
  432110:	cmp    BYTE PTR [rsi+0x2],0x34
  432114:	jne    0x4320e6
  432116:	add    rsi,0x3
  43211a:	mov    eax,0x40
  43211f:	jmp    0x4320aa
  432121:	mov    ebx,edx
  432123:	add    rsi,0x1
  432127:	lea    edx,[rbx-0x25]
  43212a:	cmp    dl,0x53
  43212d:	ja     0x4320e6
  43212f:	movzx  edx,dl
  432132:	movsxd rdx,DWORD PTR [r9+rdx*4]
  432136:	add    rdx,r9
  432139:	jmp    rdx
  43213b:	mov    r12d,0x13
  432141:	test   ebp,ebp
  432143:	js     0x4326c0
  432149:	mov    DWORD PTR [rdi+0x48],ebp
  43214c:	cmp    r15d,ebp
  43214f:	jbe    0x4325d4
  432155:	mov    rcx,QWORD PTR [r14+0x8]
  432159:	mov    edx,DWORD PTR [r14]
  43215c:	cmp    edx,ebp
  43215e:	ja     0x432177
  432160:	mov    eax,edx
  432162:	add    edx,0x1
  432165:	shl    rax,0x5
  432169:	cmp    ebp,edx
  43216b:	mov    DWORD PTR [rcx+rax*1],0x0
  432172:	jae    0x432160
  432174:	mov    DWORD PTR [r14],edx
  432177:	movsxd rbp,ebp
  43217a:	shl    rbp,0x5
  43217e:	lea    rax,[rcx+rbp*1]
  432182:	mov    edx,DWORD PTR [rax]
  432184:	test   edx,edx
  432186:	jne    0x432637
  43218c:	mov    DWORD PTR [rax],r12d
  43218f:	mov    BYTE PTR [rdi+0x44],bl
  432192:	mov    eax,DWORD PTR [r13+0x0]
  432196:	mov    QWORD PTR [rdi+0x8],rsi
  43219a:	lea    ebx,[rax+0x1]
  43219d:	cmp    ebx,r11d
  4321a0:	mov    DWORD PTR [r13+0x0],ebx
  4321a4:	jae    0x432339
  4321aa:	mov    rax,QWORD PTR [r13+0x8]
  4321ae:	jmp    0x431f3c
  4321b3:	mov    rax,rcx
  4321b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4321c0:	add    rax,0x1
  4321c4:	movzx  ebx,BYTE PTR [rax]
  4321c7:	lea    esi,[rbx-0x30]
  4321ca:	cmp    sil,0x9
  4321ce:	jbe    0x4321c0
  4321d0:	cmp    bl,0x24
  4321d3:	jne    0x431fc9
  4321d9:	xor    eax,eax
  4321db:	jmp    0x4321e3
  4321dd:	nop    DWORD PTR [rax]
  4321e0:	mov    rcx,rsi
  4321e3:	lea    eax,[rax+rax*4]
  4321e6:	lea    rsi,[rcx+0x1]
  4321ea:	lea    ebp,[rdx+rax*2]
  4321ed:	movsx  edx,BYTE PTR [rcx+0x1]
  4321f1:	lea    eax,[rbp-0x30]
  4321f4:	lea    ebx,[rdx-0x30]
  4321f7:	cmp    bl,0x9
  4321fa:	jbe    0x4321e0
  4321fc:	test   eax,eax
  4321fe:	mov    rdx,rcx
  432201:	je     0x4320e6
  432207:	sub    ebp,0x31
  43220a:	add    rcx,0x2
  43220e:	movzx  edx,BYTE PTR [rdx+0x2]
  432212:	jmp    0x431fce
  432217:	mov    QWORD PTR [rdi+0x18],rsi
  43221b:	movzx  eax,BYTE PTR [rsi]
  43221e:	sub    eax,0x30
  432221:	cmp    al,0x9
  432223:	ja     0x432782
  432229:	nop    DWORD PTR [rax+0x0]
  432230:	add    rsi,0x1
  432234:	movzx  eax,BYTE PTR [rsi]
  432237:	sub    eax,0x30
  43223a:	cmp    al,0x9
  43223c:	jbe    0x432230
  43223e:	mov    eax,esi
  432240:	sub    eax,ecx
  432242:	cmp    r8d,eax
  432245:	mov    QWORD PTR [rdi+0x20],rsi
  432249:	cmovb  r8d,eax
  43224d:	movzx  edx,BYTE PTR [rsi]
  432250:	cmp    dl,0x2e
  432253:	jne    0x432070
  432259:	cmp    BYTE PTR [rsi+0x1],0x2a
  43225d:	je     0x432535
  432263:	mov    QWORD PTR [rdi+0x30],rsi
  432267:	movzx  eax,BYTE PTR [rsi+0x1]
  43226b:	lea    rcx,[rsi+0x1]
  43226f:	sub    eax,0x30
  432272:	cmp    al,0x9
  432274:	ja     0x43228e
  432276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432280:	add    rcx,0x1
  432284:	movzx  eax,BYTE PTR [rcx]
  432287:	sub    eax,0x30
  43228a:	cmp    al,0x9
  43228c:	jbe    0x432280
  43228e:	mov    rax,rcx
  432291:	mov    QWORD PTR [rdi+0x38],rcx
  432295:	movzx  edx,BYTE PTR [rcx]
  432298:	sub    rax,rsi
  43229b:	mov    rsi,rcx
  43229e:	cmp    r10d,eax
  4322a1:	cmovb  r10d,eax
  4322a5:	jmp    0x432070
  4322aa:	mov    QWORD PTR [rdi+0x18],rsi
  4322ae:	mov    QWORD PTR [rdi+0x20],rax
  4322b2:	test   r8d,r8d
  4322b5:	movsx  r12d,BYTE PTR [rcx+0x1]
  4322ba:	mov    rsi,rax
  4322bd:	lea    edx,[r12-0x30]
  4322c2:	jne    0x4323e5
  4322c8:	cmp    dl,0x9
  4322cb:	jbe    0x43238b
  4322d1:	mov    r8d,0x1
  4322d7:	mov    eax,DWORD PTR [rsp+0x24]
  4322db:	mov    DWORD PTR [rdi+0x28],eax
  4322de:	mov    ebx,eax
  4322e0:	add    eax,0x1
  4322e3:	mov    DWORD PTR [rsp+0x24],eax
  4322e7:	cmp    ebx,r15d
  4322ea:	jae    0x432645
  4322f0:	mov    rcx,QWORD PTR [r14+0x8]
  4322f4:	mov    eax,DWORD PTR [r14]
  4322f7:	cmp    ebx,eax
  4322f9:	jb     0x432317
  4322fb:	nop    DWORD PTR [rax+rax*1+0x0]
  432300:	mov    edx,eax
  432302:	add    eax,0x1
  432305:	shl    rdx,0x5
  432309:	cmp    ebx,eax
  43230b:	mov    DWORD PTR [rcx+rdx*1],0x0
  432312:	jae    0x432300
  432314:	mov    DWORD PTR [r14],eax
  432317:	movsxd rax,ebx
  43231a:	shl    rax,0x5
  43231e:	add    rax,rcx
  432321:	mov    edx,DWORD PTR [rax]
  432323:	test   edx,edx
  432325:	jne    0x4326a8
  43232b:	mov    DWORD PTR [rax],0x5
  432331:	movzx  edx,BYTE PTR [rsi]
  432334:	jmp    0x432067
  432339:	lea    eax,[r11+r11*1]
  43233d:	mov    rcx,QWORD PTR [r13+0x8]
  432341:	mov    DWORD PTR [rsp+0x3c],r10d
  432346:	mov    DWORD PTR [rsp+0x38],r8d
  43234b:	mov    QWORD PTR [rsp+0x30],r9
  432350:	lea    rdx,[rax+rax*4]
  432354:	mov    DWORD PTR [rsp+0x28],eax
  432358:	shl    rdx,0x4
  43235c:	call   0x40e670
  432361:	test   rax,rax
  432364:	mov    r11d,DWORD PTR [rsp+0x28]
  432369:	mov    r9,QWORD PTR [rsp+0x30]
  43236e:	mov    r8d,DWORD PTR [rsp+0x38]
  432373:	mov    r10d,DWORD PTR [rsp+0x3c]
  432378:	je     0x4320e6
  43237e:	mov    QWORD PTR [r13+0x8],rax
  432382:	mov    ebx,DWORD PTR [r13+0x0]
  432386:	jmp    0x431f3c
  43238b:	mov    r8b,0x1
  43238e:	xchg   ax,ax
  432390:	add    rax,0x1
  432394:	movzx  edx,BYTE PTR [rax]
  432397:	lea    ecx,[rdx-0x30]
  43239a:	cmp    cl,0x9
  43239d:	jbe    0x432390
  43239f:	cmp    dl,0x24
  4323a2:	jne    0x4322d7
  4323a8:	xor    eax,eax
  4323aa:	lea    eax,[rax+rax*4]
  4323ad:	add    rsi,0x1
  4323b1:	lea    ebx,[r12+rax*2]
  4323b5:	movsx  r12d,BYTE PTR [rsi]
  4323b9:	lea    eax,[rbx-0x30]
  4323bc:	lea    edx,[r12-0x30]
  4323c1:	cmp    dl,0x9
  4323c4:	jbe    0x4323aa
  4323c6:	test   eax,eax
  4323c8:	je     0x4320e6
  4323ce:	sub    ebx,0x31
  4323d1:	add    rsi,0x1
  4323d5:	test   ebx,ebx
  4323d7:	mov    DWORD PTR [rdi+0x28],ebx
  4323da:	jns    0x4322e7
  4323e0:	jmp    0x4322d7
  4323e5:	cmp    dl,0x9
  4323e8:	jbe    0x432390
  4323ea:	jmp    0x4322d7
  4323ef:	mov    r12d,0x10
  4323f5:	mov    ebx,0x63
  4323fa:	jmp    0x432141
  4323ff:	xor    r12d,r12d
  432402:	cmp    eax,0x7
  432405:	setg   r12b
  432409:	add    r12d,0x11
  43240d:	jmp    0x432141
  432412:	xor    r12d,r12d
  432415:	cmp    eax,0x7
  432418:	setg   r12b
  43241c:	add    r12d,0xf
  432420:	jmp    0x432141
  432425:	cmp    eax,0x40
  432428:	mov    r12d,0xb
  43242e:	je     0x432141
  432434:	cmp    eax,0xf
  432437:	mov    r12b,0x9
  43243a:	jg     0x432141
  432440:	test   al,0x4
  432442:	jne    0x432141
  432448:	cmp    eax,0x7
  43244b:	mov    r12b,0x7
  43244e:	jg     0x432141
  432454:	test   al,0x2
  432456:	mov    r12b,0x1
  432459:	jne    0x432141
  43245f:	and    eax,0x1
  432462:	cmp    eax,0x1
  432465:	sbb    r12d,r12d
  432468:	and    r12d,0x2
  43246c:	add    r12d,0x3
  432470:	jmp    0x432141
  432475:	cmp    eax,0xf
  432478:	mov    r12d,0x18
  43247e:	jg     0x432141
  432484:	test   al,0x4
  432486:	jne    0x432141
  43248c:	cmp    eax,0x7
  43248f:	mov    r12b,0x17
  432492:	jg     0x432141
  432498:	test   al,0x2
  43249a:	mov    r12b,0x14
  43249d:	jne    0x432141
  4324a3:	and    eax,0x1
  4324a6:	neg    eax
  4324a8:	mov    r12d,eax
  4324ab:	add    r12d,0x16
  4324af:	jmp    0x432141
  4324b4:	mov    r12d,0x12
  4324ba:	mov    ebx,0x73
  4324bf:	jmp    0x432141
  4324c4:	cmp    eax,0x40
  4324c7:	mov    r12d,0xc
  4324cd:	je     0x432141
  4324d3:	cmp    eax,0xf
  4324d6:	mov    r12b,0xa
  4324d9:	jg     0x432141
  4324df:	test   al,0x4
  4324e1:	jne    0x432141
  4324e7:	cmp    eax,0x7
  4324ea:	mov    r12b,0x8
  4324ed:	jg     0x432141
  4324f3:	test   al,0x2
  4324f5:	mov    r12b,0x2
  4324f8:	jne    0x432141
  4324fe:	and    eax,0x1
  432501:	cmp    eax,0x1
  432504:	sbb    r12d,r12d
  432507:	and    r12d,0x2
  43250b:	add    r12d,0x4
  43250f:	jmp    0x432141
  432514:	cmp    eax,0xf
  432517:	mov    r12d,0xe
  43251d:	jg     0x432141
  432523:	and    eax,0x4
  432526:	cmp    eax,0x1
  432529:	sbb    r12d,r12d
  43252c:	add    r12d,0xe
  432530:	jmp    0x432141
  432535:	lea    rdx,[rsi+0x2]
  432539:	mov    QWORD PTR [rdi+0x30],rsi
  43253d:	cmp    r10d,0x1
  432541:	mov    QWORD PTR [rdi+0x38],rdx
  432545:	movsx  ecx,BYTE PTR [rsi+0x2]
  432549:	lea    eax,[rcx-0x30]
  43254c:	jbe    0x4326d5
  432552:	cmp    al,0x9
  432554:	jbe    0x4326e3
  43255a:	mov    ebx,DWORD PTR [rdi+0x40]
  43255d:	mov    rsi,rdx
  432560:	test   ebx,ebx
  432562:	js     0x4327ae
  432568:	cmp    r15d,ebx
  43256b:	ja     0x432731
  432571:	mov    rcx,QWORD PTR [r14+0x8]
  432575:	add    r15d,r15d
  432578:	lea    eax,[rbx+0x1]
  43257b:	cmp    ebx,r15d
  43257e:	mov    DWORD PTR [rsp+0x3c],r11d
  432583:	mov    DWORD PTR [rsp+0x38],r10d
  432588:	cmovae r15d,eax
  43258c:	mov    DWORD PTR [rsp+0x30],r8d
  432591:	mov    QWORD PTR [rsp+0x28],r9
  432596:	test   rcx,rcx
  432599:	je     0x4327e8
  43259f:	mov    edx,r15d
  4325a2:	shl    rdx,0x5
  4325a6:	call   0x40e670
  4325ab:	mov    r9,QWORD PTR [rsp+0x28]
  4325b0:	mov    r8d,DWORD PTR [rsp+0x30]
  4325b5:	mov    r10d,DWORD PTR [rsp+0x38]
  4325ba:	mov    r11d,DWORD PTR [rsp+0x3c]
  4325bf:	test   rax,rax
  4325c2:	je     0x4320e6
  4325c8:	mov    QWORD PTR [r14+0x8],rax
  4325cc:	mov    rcx,rax
  4325cf:	jmp    0x432735
  4325d4:	mov    rcx,QWORD PTR [r14+0x8]
  4325d8:	add    r15d,r15d
  4325db:	lea    eax,[rbp+0x1]
  4325de:	cmp    ebp,r15d
  4325e1:	mov    DWORD PTR [rsp+0x3c],r11d
  4325e6:	mov    DWORD PTR [rsp+0x38],r10d
  4325eb:	cmovae r15d,eax
  4325ef:	mov    DWORD PTR [rsp+0x30],r8d
  4325f4:	mov    QWORD PTR [rsp+0x28],r9
  4325f9:	test   rcx,rcx
  4325fc:	je     0x432789
  432602:	mov    edx,r15d
  432605:	shl    rdx,0x5
  432609:	call   0x40e670
  43260e:	mov    r9,QWORD PTR [rsp+0x28]
  432613:	mov    r8d,DWORD PTR [rsp+0x30]
  432618:	mov    r10d,DWORD PTR [rsp+0x38]
  43261d:	mov    r11d,DWORD PTR [rsp+0x3c]
  432622:	test   rax,rax
  432625:	je     0x4320e6
  43262b:	mov    QWORD PTR [r14+0x8],rax
  43262f:	mov    rcx,rax
  432632:	jmp    0x432159
  432637:	cmp    r12d,edx
  43263a:	je     0x43218f
  432640:	jmp    0x4320ea
  432645:	mov    rcx,QWORD PTR [r14+0x8]
  432649:	add    r15d,r15d
  43264c:	lea    eax,[rbx+0x1]
  43264f:	cmp    ebx,r15d
  432652:	mov    DWORD PTR [rsp+0x3c],r11d
  432657:	mov    DWORD PTR [rsp+0x38],r10d
  43265c:	cmovae r15d,eax
  432660:	mov    DWORD PTR [rsp+0x30],r8d
  432665:	mov    QWORD PTR [rsp+0x28],r9
  43266a:	test   rcx,rcx
  43266d:	je     0x4327c3
  432673:	mov    edx,r15d
  432676:	shl    rdx,0x5
  43267a:	call   0x40e670
  43267f:	mov    r9,QWORD PTR [rsp+0x28]
  432684:	mov    r8d,DWORD PTR [rsp+0x30]
  432689:	mov    r10d,DWORD PTR [rsp+0x38]
  43268e:	mov    r11d,DWORD PTR [rsp+0x3c]
  432693:	test   rax,rax
  432696:	je     0x4320e6
  43269c:	mov    QWORD PTR [r14+0x8],rax
  4326a0:	mov    rcx,rax
  4326a3:	jmp    0x4322f4
  4326a8:	cmp    edx,0x5
  4326ab:	je     0x43224d
  4326b1:	jmp    0x4320ea
  4326b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4326c0:	mov    eax,DWORD PTR [rsp+0x24]
  4326c4:	mov    DWORD PTR [rdi+0x48],eax
  4326c7:	mov    ebp,eax
  4326c9:	add    eax,0x1
  4326cc:	mov    DWORD PTR [rsp+0x24],eax
  4326d0:	jmp    0x43214c
  4326d5:	cmp    al,0x9
  4326d7:	mov    r10d,0x2
  4326dd:	ja     0x43255a
  4326e3:	mov    rax,rdx
  4326e6:	add    rax,0x1
  4326ea:	movzx  ebx,BYTE PTR [rax]
  4326ed:	lea    esi,[rbx-0x30]
  4326f0:	cmp    sil,0x9
  4326f4:	jbe    0x4326e6
  4326f6:	cmp    bl,0x24
  4326f9:	jne    0x43255a
  4326ff:	xor    eax,eax
  432701:	lea    eax,[rax+rax*4]
  432704:	add    rdx,0x1
  432708:	lea    ebx,[rcx+rax*2]
  43270b:	movsx  ecx,BYTE PTR [rdx]
  43270e:	lea    eax,[rbx-0x30]
  432711:	lea    esi,[rcx-0x30]
  432714:	cmp    sil,0x9
  432718:	jbe    0x432701
  43271a:	test   eax,eax
  43271c:	je     0x4320e6
  432722:	sub    ebx,0x31
  432725:	lea    rsi,[rdx+0x1]
  432729:	mov    DWORD PTR [rdi+0x40],ebx
  43272c:	jmp    0x432560
  432731:	mov    rcx,QWORD PTR [r14+0x8]
  432735:	mov    eax,DWORD PTR [r14]
  432738:	cmp    eax,ebx
  43273a:	ja     0x432753
  43273c:	mov    edx,eax
  43273e:	add    eax,0x1
  432741:	shl    rdx,0x5
  432745:	cmp    ebx,eax
  432747:	mov    DWORD PTR [rcx+rdx*1],0x0
  43274e:	jae    0x43273c
  432750:	mov    DWORD PTR [r14],eax
  432753:	movsxd rax,ebx
  432756:	shl    rax,0x5
  43275a:	add    rax,rcx
  43275d:	mov    edx,DWORD PTR [rax]
  43275f:	test   edx,edx
  432761:	jne    0x432771
  432763:	mov    DWORD PTR [rax],0x5
  432769:	movzx  edx,BYTE PTR [rsi]
  43276c:	jmp    0x432070
  432771:	cmp    edx,0x5
  432774:	jne    0x4320ea
  43277a:	movzx  edx,BYTE PTR [rsi]
  43277d:	jmp    0x432070
  432782:	xor    eax,eax
  432784:	jmp    0x432242
  432789:	mov    ecx,r15d
  43278c:	shl    rcx,0x5
  432790:	call   0x40e5c0
  432795:	mov    r11d,DWORD PTR [rsp+0x3c]
  43279a:	mov    r10d,DWORD PTR [rsp+0x38]
  43279f:	mov    r8d,DWORD PTR [rsp+0x30]
  4327a4:	mov    r9,QWORD PTR [rsp+0x28]
  4327a9:	jmp    0x432622
  4327ae:	mov    eax,DWORD PTR [rsp+0x24]
  4327b2:	mov    DWORD PTR [rdi+0x40],eax
  4327b5:	mov    ebx,eax
  4327b7:	add    eax,0x1
  4327ba:	mov    DWORD PTR [rsp+0x24],eax
  4327be:	jmp    0x432568
  4327c3:	mov    ecx,r15d
  4327c6:	shl    rcx,0x5
  4327ca:	call   0x40e5c0
  4327cf:	mov    r11d,DWORD PTR [rsp+0x3c]
  4327d4:	mov    r10d,DWORD PTR [rsp+0x38]
  4327d9:	mov    r8d,DWORD PTR [rsp+0x30]
  4327de:	mov    r9,QWORD PTR [rsp+0x28]
  4327e3:	jmp    0x432693
  4327e8:	mov    ecx,r15d
  4327eb:	shl    rcx,0x5
  4327ef:	call   0x40e5c0
  4327f4:	mov    r11d,DWORD PTR [rsp+0x3c]
  4327f9:	mov    r10d,DWORD PTR [rsp+0x38]
  4327fe:	mov    r8d,DWORD PTR [rsp+0x30]
  432803:	mov    r9,QWORD PTR [rsp+0x28]
  432808:	jmp    0x4325bf
  43280d:	nop
  43280e:	nop
  43280f:	nop
  432810:	push   rsi
  432811:	push   rbx
  432812:	sub    rsp,0x28
  432816:	mov    rsi,rcx
  432819:	lea    rcx,[rip+0x51f98]        # 0x4847b8
  432820:	mov    ebx,edx
  432822:	call   0x426d40
  432827:	mfence 
  43282a:	mov    eax,DWORD PTR [rsi]
  43282c:	cmp    eax,ebx
  43282e:	je     0x432842
  432830:	lea    rcx,[rip+0x51f81]        # 0x4847b8
  432837:	add    rsp,0x28
  43283b:	pop    rbx
  43283c:	pop    rsi
  43283d:	jmp    0x426d70
  432842:	mov    r8,QWORD PTR [rip+0x51f67]        # 0x4847b0
  432849:	test   r8,r8
  43284c:	jne    0x432859
  43284e:	jmp    0x4328b0
  432850:	mov    r8,QWORD PTR [r8+0x8]
  432854:	test   r8,r8
  432857:	je     0x4328b0
  432859:	mov    rbx,QWORD PTR [r8]
  43285c:	cmp    rsi,QWORD PTR [rbx]
  43285f:	jne    0x432850
  432861:	lea    rsi,[rbx+0x10]
  432865:	add    DWORD PTR [rbx+0x8],0x1
  432869:	lea    rdx,[rip+0x51f48]        # 0x4847b8
  432870:	mov    rcx,rsi
  432873:	call   0x426f50
  432878:	sub    DWORD PTR [rbx+0x8],0x1
  43287c:	jne    0x432830
  43287e:	mov    rcx,QWORD PTR [rip+0x51f2b]        # 0x4847b0
  432885:	mov    rdx,rbx
  432888:	call   0x417330
  43288d:	mov    rcx,rsi
  432890:	mov    QWORD PTR [rip+0x51f19],rax        # 0x4847b0
  432897:	call   0x426f10
  43289c:	mov    rdx,rbx
  43289f:	mov    ecx,0x20
  4328a4:	call   0x4167c0
  4328a9:	jmp    0x432830
  4328ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4328b0:	mov    ecx,0x20
  4328b5:	call   0x416130
  4328ba:	mov    QWORD PTR [rax],rsi
  4328bd:	lea    rsi,[rax+0x10]
  4328c1:	mov    rbx,rax
  4328c4:	mov    rcx,rsi
  4328c7:	call   0x426f00
  4328cc:	mov    rcx,QWORD PTR [rip+0x51edd]        # 0x4847b0
  4328d3:	mov    DWORD PTR [rbx+0x8],0x0
  4328da:	mov    rdx,rbx
  4328dd:	call   0x417180
  4328e2:	mov    QWORD PTR [rip+0x51ec7],rax        # 0x4847b0
  4328e9:	jmp    0x432865
  4328ee:	xchg   ax,ax
  4328f0:	push   rbx
  4328f1:	sub    rsp,0x20
  4328f5:	mov    rbx,rcx
  4328f8:	lea    rcx,[rip+0x51eb9]        # 0x4847b8
  4328ff:	call   0x426d40
  432904:	mov    rax,QWORD PTR [rip+0x51ea5]        # 0x4847b0
  43290b:	test   rax,rax
  43290e:	jne    0x43291b
  432910:	jmp    0x43292c
  432912:	mov    rax,QWORD PTR [rax+0x8]
  432916:	test   rax,rax
  432919:	je     0x43292c
  43291b:	mov    rdx,QWORD PTR [rax]
  43291e:	cmp    rbx,QWORD PTR [rdx]
  432921:	jne    0x432912
  432923:	lea    rcx,[rdx+0x10]
  432927:	call   0x426f30
  43292c:	lea    rcx,[rip+0x51e85]        # 0x4847b8
  432933:	add    rsp,0x20
  432937:	pop    rbx
  432938:	jmp    0x426d70
  43293d:	nop    DWORD PTR [rax]
  432940:	push   rbp
  432941:	push   rdi
  432942:	push   rsi
  432943:	push   rbx
  432944:	sub    rsp,0x28
  432948:	mov    esi,0x1
  43294d:	mov    rbx,rcx
  432950:	mov    edi,edx
  432952:	mov    ecx,edx
  432954:	mov    rax,rbx
  432957:	movabs rdx,0x2e8ba2e8ba2e8ba3
  432961:	shl    esi,cl
  432963:	mul    rdx
  432966:	shr    rdx,1
  432969:	lea    rax,[rdx+rdx*4]
  43296d:	lea    rax,[rdx+rax*2]
  432971:	mov    edx,ebx
  432973:	sub    edx,eax
  432975:	lea    rax,[rip+0x51e04]        # 0x484780
  43297c:	lea    rbp,[rax+rdx*4]
  432980:	lock bts DWORD PTR [rbx],edi
  432984:	jb     0x432990
  432986:	add    rsp,0x28
  43298a:	pop    rbx
  43298b:	pop    rsi
  43298c:	pop    rdi
  43298d:	pop    rbp
  43298e:	ret    
  43298f:	nop
  432990:	mfence 
  432993:	mov    edx,DWORD PTR [rbx]
  432995:	test   edx,esi
  432997:	je     0x432980
  432999:	lock add DWORD PTR [rbp+0x0],0x1
  43299e:	mov    rcx,rbx
  4329a1:	call   0x432810
  4329a6:	lock sub DWORD PTR [rbp+0x0],0x1
  4329ab:	jmp    0x432980
  4329ad:	nop    DWORD PTR [rax]
  4329b0:	lock bts DWORD PTR [rcx],edx
  4329b4:	setae  al
  4329b7:	movzx  eax,al
  4329ba:	ret    
  4329bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4329c0:	lock btr DWORD PTR [rcx],edx
  4329c4:	movabs rdx,0x2e8ba2e8ba2e8ba3
  4329ce:	mov    rax,rcx
  4329d1:	mfence 
  4329d4:	mul    rdx
  4329d7:	shr    rdx,1
  4329da:	lea    rax,[rdx+rdx*4]
  4329de:	lea    rax,[rdx+rax*2]
  4329e2:	mov    edx,ecx
  4329e4:	sub    edx,eax
  4329e6:	lea    rax,[rip+0x51d93]        # 0x484780
  4329ed:	mov    eax,DWORD PTR [rax+rdx*4]
  4329f0:	test   eax,eax
  4329f2:	jne    0x432a00
  4329f4:	repz ret 
  4329f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a00:	jmp    0x4328f0
  432a05:	nop
  432a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a10:	push   rbp
  432a11:	push   rdi
  432a12:	push   rsi
  432a13:	push   rbx
  432a14:	sub    rsp,0x28
  432a18:	cmp    edx,0x1f
  432a1b:	mov    rbx,rcx
  432a1e:	jg     0x432a90
  432a20:	mov    ecx,edx
  432a22:	mov    rax,rbx
  432a25:	movsxd rdi,edx
  432a28:	movabs rdx,0x2e8ba2e8ba2e8ba3
  432a32:	mov    esi,0x1
  432a37:	mul    rdx
  432a3a:	shl    esi,cl
  432a3c:	shr    rdx,1
  432a3f:	lea    rax,[rdx+rdx*4]
  432a43:	lea    rax,[rdx+rax*2]
  432a47:	mov    edx,ebx
  432a49:	sub    edx,eax
  432a4b:	lea    rax,[rip+0x51d2e]        # 0x484780
  432a52:	lea    rbp,[rax+rdx*4]
  432a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a60:	lock bts QWORD PTR [rbx],rdi
  432a65:	jb     0x432a70
  432a67:	add    rsp,0x28
  432a6b:	pop    rbx
  432a6c:	pop    rsi
  432a6d:	pop    rdi
  432a6e:	pop    rbp
  432a6f:	ret    
  432a70:	mfence 
  432a73:	mov    rdx,QWORD PTR [rbx]
  432a76:	test   rsi,rdx
  432a79:	je     0x432a60
  432a7b:	lock add DWORD PTR [rbp+0x0],0x1
  432a80:	mov    rcx,rbx
  432a83:	call   0x432810
  432a88:	lock sub DWORD PTR [rbp+0x0],0x1
  432a8d:	jmp    0x432a60
  432a8f:	nop
  432a90:	lea    r8,[rip+0x487e9]        # 0x47b280
  432a97:	lea    rdx,[rip+0x48842]        # 0x47b2e0
  432a9e:	lea    rcx,[rip+0x487e9]        # 0x47b28e
  432aa5:	add    rsp,0x28
  432aa9:	pop    rbx
  432aaa:	pop    rsi
  432aab:	pop    rdi
  432aac:	pop    rbp
  432aad:	jmp    0x40fd20
  432ab2:	nop    DWORD PTR [rax+0x0]
  432ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432ac0:	sub    rsp,0x28
  432ac4:	cmp    edx,0x1f
  432ac7:	jle    0x432af0
  432ac9:	lea    r8,[rip+0x487b0]        # 0x47b280
  432ad0:	lea    rdx,[rip+0x487e9]        # 0x47b2c0
  432ad7:	lea    rcx,[rip+0x487b0]        # 0x47b28e
  432ade:	call   0x40fd20
  432ae3:	xor    eax,eax
  432ae5:	add    rsp,0x28
  432ae9:	ret    
  432aea:	nop    WORD PTR [rax+rax*1+0x0]
  432af0:	movsxd rax,edx
  432af3:	lock bts QWORD PTR [rcx],rax
  432af8:	setae  al
  432afb:	movzx  eax,al
  432afe:	add    rsp,0x28
  432b02:	ret    
  432b03:	nop    DWORD PTR [rax]
  432b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432b10:	cmp    edx,0x1f
  432b13:	jg     0x432b50
  432b15:	movsxd rdx,edx
  432b18:	lock btr QWORD PTR [rcx],rdx
  432b1d:	movabs rdx,0x2e8ba2e8ba2e8ba3
  432b27:	mov    rax,rcx
  432b2a:	mfence 
  432b2d:	mul    rdx
  432b30:	shr    rdx,1
  432b33:	lea    rax,[rdx+rdx*4]
  432b37:	lea    rax,[rdx+rax*2]
  432b3b:	mov    edx,ecx
  432b3d:	sub    edx,eax
  432b3f:	lea    rax,[rip+0x51c3a]        # 0x484780
  432b46:	mov    eax,DWORD PTR [rax+rdx*4]
  432b49:	test   eax,eax
  432b4b:	jne    0x432b70
  432b4d:	ret    
  432b4e:	xchg   ax,ax
  432b50:	lea    r8,[rip+0x48729]        # 0x47b280
  432b57:	lea    rdx,[rip+0x48742]        # 0x47b2a0
  432b5e:	lea    rcx,[rip+0x48729]        # 0x47b28e
  432b65:	jmp    0x40fd20
  432b6a:	nop    WORD PTR [rax+rax*1+0x0]
  432b70:	jmp    0x4328f0
  432b75:	nop
  432b76:	nop
  432b77:	nop
  432b78:	nop
  432b79:	nop
  432b7a:	nop
  432b7b:	nop
  432b7c:	nop
  432b7d:	nop
  432b7e:	nop
  432b7f:	nop
  432b80:	jmp    QWORD PTR [rip+0x5400a]        # 0x486b90
  432b86:	nop
  432b87:	nop
  432b88:	nop    DWORD PTR [rax+rax*1+0x0]
  432b90:	jmp    QWORD PTR [rip+0x5403a]        # 0x486bd0
  432b96:	nop
  432b97:	nop
  432b98:	nop    DWORD PTR [rax+rax*1+0x0]
  432ba0:	push   rbx
  432ba1:	sub    rsp,0x30
  432ba5:	mov    rbx,rcx
  432ba8:	mov    rcx,QWORD PTR [rip+0x53039]        # 0x485be8
  432baf:	call   0x433150
  432bb4:	cmp    rax,0xffffffffffffffff
  432bb8:	mov    QWORD PTR [rsp+0x20],rax
  432bbd:	je     0x432c35
  432bbf:	mov    ecx,0x8
  432bc4:	call   0x438958
  432bc9:	mov    rcx,QWORD PTR [rip+0x53018]        # 0x485be8
  432bd0:	call   0x433150
  432bd5:	mov    rcx,QWORD PTR [rip+0x53014]        # 0x485bf0
  432bdc:	mov    QWORD PTR [rsp+0x20],rax
  432be1:	call   0x433150
  432be6:	lea    rdx,[rsp+0x20]
  432beb:	lea    r8,[rsp+0x28]
  432bf0:	mov    rcx,rbx
  432bf3:	mov    QWORD PTR [rsp+0x28],rax
  432bf8:	call   0x4389e0
  432bfd:	mov    rcx,QWORD PTR [rsp+0x20]
  432c02:	mov    rbx,rax
  432c05:	call   0x433160
  432c0a:	mov    rcx,QWORD PTR [rsp+0x28]
  432c0f:	mov    QWORD PTR [rip+0x52fd2],rax        # 0x485be8
  432c16:	call   0x433160
  432c1b:	mov    ecx,0x8
  432c20:	mov    QWORD PTR [rip+0x52fc9],rax        # 0x485bf0
  432c27:	call   0x438930
  432c2c:	mov    rax,rbx
  432c2f:	add    rsp,0x30
  432c33:	pop    rbx
  432c34:	ret    
  432c35:	mov    rax,QWORD PTR [rip+0x48dd4]        # 0x47ba10
  432c3c:	mov    rcx,rbx
  432c3f:	call   QWORD PTR [rax]
  432c41:	add    rsp,0x30
  432c45:	pop    rbx
  432c46:	ret    
  432c47:	nop    WORD PTR [rax+rax*1+0x0]
  432c50:	sub    rsp,0x28
  432c54:	call   0x432ba0
  432c59:	test   rax,rax
  432c5c:	sete   al
  432c5f:	movzx  eax,al
  432c62:	neg    eax
  432c64:	add    rsp,0x28
  432c68:	ret    
  432c69:	nop
  432c6a:	nop
  432c6b:	nop
  432c6c:	nop
  432c6d:	nop
  432c6e:	nop
  432c6f:	nop
  432c70:	sub    rsp,0x28
  432c74:	mov    rax,QWORD PTR [rip+0x7d15]        # 0x43a990
  432c7b:	mov    rax,QWORD PTR [rax]
  432c7e:	test   rax,rax
  432c81:	je     0x432ca0
  432c83:	call   rax
  432c85:	mov    rax,QWORD PTR [rip+0x7d04]        # 0x43a990
  432c8c:	lea    rdx,[rax+0x8]
  432c90:	mov    rax,QWORD PTR [rax+0x8]
  432c94:	mov    QWORD PTR [rip+0x7cf5],rdx        # 0x43a990
  432c9b:	test   rax,rax
  432c9e:	jne    0x432c83
  432ca0:	add    rsp,0x28
  432ca4:	ret    
  432ca5:	nop
  432ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432cb0:	push   rsi
  432cb1:	push   rbx
  432cb2:	sub    rsp,0x28
  432cb6:	mov    rsi,QWORD PTR [rip+0x48ca3]        # 0x47b960
  432cbd:	mov    rax,QWORD PTR [rsi]
  432cc0:	cmp    eax,0xffffffff
  432cc3:	mov    ebx,eax
  432cc5:	je     0x432cf0
  432cc7:	test   ebx,ebx
  432cc9:	je     0x432cda
  432ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  432cd0:	mov    eax,ebx
  432cd2:	call   QWORD PTR [rsi+rax*8]
  432cd5:	sub    ebx,0x1
  432cd8:	jne    0x432cd0
  432cda:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x432c70
  432ce1:	add    rsp,0x28
  432ce5:	pop    rbx
  432ce6:	pop    rsi
  432ce7:	jmp    0x432c50
  432cec:	nop    DWORD PTR [rax+0x0]
  432cf0:	xor    ebx,ebx
  432cf2:	jmp    0x432cf6
  432cf4:	mov    ebx,eax
  432cf6:	lea    edx,[rbx+0x1]
  432cf9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  432cfe:	mov    rax,rdx
  432d01:	jne    0x432cf4
  432d03:	jmp    0x432cc7
  432d05:	nop
  432d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432d10:	mov    eax,DWORD PTR [rip+0x51aaa]        # 0x4847c0
  432d16:	test   eax,eax
  432d18:	je     0x432d20
  432d1a:	repz ret 
  432d1c:	nop    DWORD PTR [rax+0x0]
  432d20:	mov    DWORD PTR [rip+0x51a96],0x1        # 0x4847c0
  432d2a:	jmp    0x432cb0
  432d2c:	nop
  432d2d:	nop
  432d2e:	nop
  432d2f:	nop
  432d30:	mov    rax,QWORD PTR [rip+0x53b59]        # 0x486890
  432d37:	rex.W jmp rax
  432d3a:	nop
  432d3b:	nop
  432d3c:	nop
  432d3d:	nop
  432d3e:	nop
  432d3f:	nop
  432d40:	xor    eax,eax
  432d42:	ret    
  432d43:	nop
  432d44:	nop
  432d45:	nop
  432d46:	nop
  432d47:	nop
  432d48:	nop
  432d49:	nop
  432d4a:	nop
  432d4b:	nop
  432d4c:	nop
  432d4d:	nop
  432d4e:	nop
  432d4f:	nop
  432d50:	push   r12
  432d52:	push   rbp
  432d53:	push   rdi
  432d54:	push   rsi
  432d55:	push   rbx
  432d56:	sub    rsp,0x40
  432d5a:	mov    rbx,QWORD PTR [rip+0x7cbf]        # 0x43aa20
  432d61:	movabs rax,0x2b992ddfa232
  432d6b:	mov    QWORD PTR [rsp+0x20],0x0
  432d74:	cmp    rbx,rax
  432d77:	je     0x432d90
  432d79:	not    rbx
  432d7c:	mov    QWORD PTR [rip+0x7cad],rbx        # 0x43aa30
  432d83:	add    rsp,0x40
  432d87:	pop    rbx
  432d88:	pop    rsi
  432d89:	pop    rdi
  432d8a:	pop    rbp
  432d8b:	pop    r12
  432d8d:	ret    
  432d8e:	xchg   ax,ax
  432d90:	lea    rcx,[rsp+0x20]
  432d95:	call   QWORD PTR [rip+0x539a5]        # 0x486740
  432d9b:	mov    r12,QWORD PTR [rsp+0x20]
  432da0:	call   QWORD PTR [rip+0x5390a]        # 0x4866b0
  432da6:	mov    ebp,eax
  432da8:	call   QWORD PTR [rip+0x5390a]        # 0x4866b8
  432dae:	mov    edi,eax
  432db0:	call   QWORD PTR [rip+0x5399a]        # 0x486750
  432db6:	lea    rcx,[rsp+0x30]
  432dbb:	mov    esi,eax
  432dbd:	call   QWORD PTR [rip+0x539ed]        # 0x4867b0
  432dc3:	xor    r12,QWORD PTR [rsp+0x30]
  432dc8:	mov    edx,edi
  432dca:	movabs rax,0xffffffffffff
  432dd4:	xor    rbp,r12
  432dd7:	mov    rdi,rbp
  432dda:	xor    rdi,rdx
  432ddd:	mov    edx,esi
  432ddf:	xor    rdi,rdx
  432de2:	mov    rsi,rdi
  432de5:	and    rsi,rax
  432de8:	cmp    rsi,rbx
  432deb:	je     0x432e10
  432ded:	mov    rax,rsi
  432df0:	not    rax
  432df3:	mov    QWORD PTR [rip+0x7c26],rsi        # 0x43aa20
  432dfa:	mov    QWORD PTR [rip+0x7c2f],rax        # 0x43aa30
  432e01:	add    rsp,0x40
  432e05:	pop    rbx
  432e06:	pop    rsi
  432e07:	pop    rdi
  432e08:	pop    rbp
  432e09:	pop    r12
  432e0b:	ret    
  432e0c:	nop    DWORD PTR [rax+0x0]
  432e10:	movabs rax,0xffffd466d2205dcc
  432e1a:	movabs rsi,0x2b992ddfa233
  432e24:	jmp    0x432df3
  432e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432e30:	push   rbp
  432e31:	push   rsi
  432e32:	push   rbx
  432e33:	mov    rbp,rsp
  432e36:	sub    rsp,0x70
  432e3a:	mov    rsi,rcx
  432e3d:	lea    rcx,[rip+0x519bc]        # 0x484800
  432e44:	call   QWORD PTR [rip+0x5397e]        # 0x4867c8
  432e4a:	mov    rbx,QWORD PTR [rip+0x51aa7]        # 0x4848f8
  432e51:	xor    r8d,r8d
  432e54:	lea    rdx,[rbp-0x28]
  432e58:	mov    rcx,rbx
  432e5b:	call   QWORD PTR [rip+0x5396f]        # 0x4867d0
  432e61:	test   rax,rax
  432e64:	mov    r9,rax
  432e67:	je     0x432f10
  432e6d:	lea    rax,[rbp-0x20]
  432e71:	mov    QWORD PTR [rsp+0x38],0x0
  432e7a:	mov    r8,rbx
  432e7d:	mov    rdx,QWORD PTR [rbp-0x28]
  432e81:	xor    ecx,ecx
  432e83:	mov    QWORD PTR [rsp+0x30],rax
  432e88:	lea    rax,[rbp-0x18]
  432e8c:	mov    QWORD PTR [rsp+0x28],rax
  432e91:	lea    rax,[rip+0x51968]        # 0x484800
  432e98:	mov    QWORD PTR [rsp+0x20],rax
  432e9d:	call   QWORD PTR [rip+0x53935]        # 0x4867d8
  432ea3:	mov    rax,QWORD PTR [rip+0x51a4e]        # 0x4848f8
  432eaa:	xor    ecx,ecx
  432eac:	mov    QWORD PTR [rip+0x519cd],rsi        # 0x484880
  432eb3:	mov    DWORD PTR [rip+0x51e43],0xc0000409        # 0x484d00
  432ebd:	mov    DWORD PTR [rip+0x51e3d],0x1        # 0x484d04
  432ec7:	mov    QWORD PTR [rip+0x51e42],rax        # 0x484d10
  432ece:	mov    rax,QWORD PTR [rip+0x7b4b]        # 0x43aa20
  432ed5:	mov    QWORD PTR [rbp-0x10],rax
  432ed9:	mov    rax,QWORD PTR [rip+0x7b50]        # 0x43aa30
  432ee0:	mov    QWORD PTR [rbp-0x8],rax
  432ee4:	call   QWORD PTR [rip+0x53906]        # 0x4867f0
  432eea:	lea    rcx,[rip+0x4840f]        # 0x47b300
  432ef1:	call   QWORD PTR [rip+0x53939]        # 0x486830
  432ef7:	call   QWORD PTR [rip+0x537ab]        # 0x4866a8
  432efd:	mov    edx,0xc0000409
  432f02:	mov    rcx,rax
  432f05:	call   QWORD PTR [rip+0x538fd]        # 0x486808
  432f0b:	call   0x4388c0
  432f10:	mov    rax,QWORD PTR [rbp+0x18]
  432f14:	mov    QWORD PTR [rip+0x519dd],rax        # 0x4848f8
  432f1b:	lea    rax,[rbp+0x8]
  432f1f:	mov    QWORD PTR [rip+0x51972],rax        # 0x484898
  432f26:	jmp    0x432ea3
  432f2b:	nop
  432f2c:	nop
  432f2d:	nop
  432f2e:	nop
  432f2f:	nop
  432f30:	sub    rsp,0x28
  432f34:	test   edx,edx
  432f36:	je     0x432f50
  432f38:	cmp    edx,0x3
  432f3b:	je     0x432f50
  432f3d:	mov    eax,0x1
  432f42:	add    rsp,0x28
  432f46:	ret    
  432f47:	nop    WORD PTR [rax+rax*1+0x0]
  432f50:	call   0x433c40
  432f55:	mov    eax,0x1
  432f5a:	add    rsp,0x28
  432f5e:	ret    
  432f5f:	nop
  432f60:	push   rsi
  432f61:	push   rbx
  432f62:	sub    rsp,0x28
  432f66:	mov    rax,QWORD PTR [rip+0x489d3]        # 0x47b940
  432f6d:	cmp    DWORD PTR [rax],0x2
  432f70:	je     0x432f78
  432f72:	mov    DWORD PTR [rax],0x2
  432f78:	cmp    edx,0x2
  432f7b:	je     0x432f90
  432f7d:	cmp    edx,0x1
  432f80:	je     0x432fc2
  432f82:	mov    eax,0x1
  432f87:	add    rsp,0x28
  432f8b:	pop    rbx
  432f8c:	pop    rsi
  432f8d:	ret    
  432f8e:	xchg   ax,ax
  432f90:	lea    rbx,[rip+0x550c9]        # 0x488060
  432f97:	lea    rsi,[rip+0x550c2]        # 0x488060
  432f9e:	cmp    rbx,rsi
  432fa1:	je     0x432f82
  432fa3:	mov    rax,QWORD PTR [rbx]
  432fa6:	test   rax,rax
  432fa9:	je     0x432fad
  432fab:	call   rax
  432fad:	add    rbx,0x8
  432fb1:	cmp    rbx,rsi
  432fb4:	jne    0x432fa3
  432fb6:	mov    eax,0x1
  432fbb:	add    rsp,0x28
  432fbf:	pop    rbx
  432fc0:	pop    rsi
  432fc1:	ret    
  432fc2:	call   0x433c40
  432fc7:	jmp    0x432f82
  432fc9:	nop    DWORD PTR [rax+0x0]
  432fd0:	xor    eax,eax
  432fd2:	ret    
  432fd3:	nop
  432fd4:	nop
  432fd5:	nop
  432fd6:	nop
  432fd7:	nop
  432fd8:	nop
  432fd9:	nop
  432fda:	nop
  432fdb:	nop
  432fdc:	nop
  432fdd:	nop
  432fde:	nop
  432fdf:	nop
  432fe0:	sub    rsp,0x58
  432fe4:	mov    rax,QWORD PTR [rip+0x51df5]        # 0x484de0
  432feb:	test   rax,rax
  432fee:	je     0x43301c
  432ff0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  432ff9:	mov    DWORD PTR [rsp+0x20],ecx
  432ffd:	lea    rcx,[rsp+0x20]
  433002:	mov    QWORD PTR [rsp+0x28],rdx
  433007:	movsd  QWORD PTR [rsp+0x30],xmm2
  43300d:	movsd  QWORD PTR [rsp+0x38],xmm3
  433013:	movsd  QWORD PTR [rsp+0x40],xmm0
  433019:	call   rax
  43301b:	nop
  43301c:	add    rsp,0x58
  433020:	ret    
  433021:	nop    DWORD PTR [rax+rax*1+0x0]
  433026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433030:	mov    QWORD PTR [rip+0x51da9],rcx        # 0x484de0
  433037:	jmp    0x4389b8
  43303c:	nop    DWORD PTR [rax+0x0]
  433040:	push   rsi
  433041:	push   rbx
  433042:	sub    rsp,0x78
  433046:	movaps XMMWORD PTR [rsp+0x40],xmm6
  43304b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  433050:	movaps XMMWORD PTR [rsp+0x60],xmm8
  433056:	cmp    DWORD PTR [rcx],0x6
  433059:	ja     0x433130
  43305f:	mov    edx,DWORD PTR [rcx]
  433061:	lea    rax,[rip+0x483dc]        # 0x47b444
  433068:	movsxd rdx,DWORD PTR [rax+rdx*4]
  43306c:	add    rax,rdx
  43306f:	jmp    rax
  433071:	lea    rbx,[rip+0x482a8]        # 0x47b320
  433078:	nop    DWORD PTR [rax+rax*1+0x0]
  433080:	movsd  xmm8,QWORD PTR [rcx+0x20]
  433086:	mov    rsi,QWORD PTR [rcx+0x8]
  43308a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  43308f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  433094:	call   0x4389d0
  433099:	movsd  QWORD PTR [rsp+0x30],xmm8
  4330a0:	lea    rcx,[rax+0x60]
  4330a4:	lea    rdx,[rip+0x4836d]        # 0x47b418
  4330ab:	movsd  QWORD PTR [rsp+0x28],xmm7
  4330b1:	mov    r9,rsi
  4330b4:	mov    r8,rbx
  4330b7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4330bd:	call   0x438870
  4330c2:	nop
  4330c3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4330c8:	xor    eax,eax
  4330ca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4330cf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4330d5:	add    rsp,0x78
  4330d9:	pop    rbx
  4330da:	pop    rsi
  4330db:	ret    
  4330dc:	nop    DWORD PTR [rax+0x0]
  4330e0:	lea    rbx,[rip+0x48258]        # 0x47b33f
  4330e7:	jmp    0x433080
  4330e9:	nop    DWORD PTR [rax+0x0]
  4330f0:	lea    rbx,[rip+0x48269]        # 0x47b360
  4330f7:	jmp    0x433080
  4330f9:	nop    DWORD PTR [rax+0x0]
  433100:	lea    rbx,[rip+0x482c9]        # 0x47b3d0
  433107:	jmp    0x433080
  43310c:	nop    DWORD PTR [rax+0x0]
  433110:	lea    rbx,[rip+0x48291]        # 0x47b3a8
  433117:	jmp    0x433080
  43311c:	nop    DWORD PTR [rax+0x0]
  433120:	lea    rbx,[rip+0x48259]        # 0x47b380
  433127:	jmp    0x433080
  43312c:	nop    DWORD PTR [rax+0x0]
  433130:	lea    rbx,[rip+0x482cf]        # 0x47b406
  433137:	jmp    0x433080
  43313c:	nop
  43313d:	nop
  43313e:	nop
  43313f:	nop
  433140:	fninit 
  433142:	ret    
  433143:	nop
  433144:	nop
  433145:	nop
  433146:	nop
  433147:	nop
  433148:	nop
  433149:	nop
  43314a:	nop
  43314b:	nop
  43314c:	nop
  43314d:	nop
  43314e:	nop
  43314f:	nop
  433150:	mov    rax,rcx
  433153:	ret    
  433154:	xchg   ax,ax
  433156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433160:	mov    rax,rcx
  433163:	ret    
  433164:	nop
  433165:	nop
  433166:	nop
  433167:	nop
  433168:	nop
  433169:	nop
  43316a:	nop
  43316b:	nop
  43316c:	nop
  43316d:	nop
  43316e:	nop
  43316f:	nop
  433170:	push   rsi
  433171:	push   rbx
  433172:	sub    rsp,0x38
  433176:	lea    rax,[rsp+0x58]
  43317b:	mov    rbx,rcx
  43317e:	mov    QWORD PTR [rsp+0x58],rdx
  433183:	mov    QWORD PTR [rsp+0x60],r8
  433188:	mov    QWORD PTR [rsp+0x68],r9
  43318d:	mov    QWORD PTR [rsp+0x28],rax
  433192:	call   0x4389d0
  433197:	lea    rcx,[rip+0x482c2]        # 0x47b460
  43319e:	lea    r9,[rax+0x60]
  4331a2:	mov    r8d,0x1b
  4331a8:	mov    edx,0x1
  4331ad:	call   0x438848
  4331b2:	mov    rsi,QWORD PTR [rsp+0x28]
  4331b7:	call   0x4389d0
  4331bc:	lea    rcx,[rax+0x60]
  4331c0:	mov    rdx,rbx
  4331c3:	mov    r8,rsi
  4331c6:	call   0x438730
  4331cb:	call   0x4388c0
  4331d0:	nop
  4331d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4331d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4331e0:	push   r13
  4331e2:	push   r12
  4331e4:	push   rbp
  4331e5:	push   rdi
  4331e6:	push   rsi
  4331e7:	push   rbx
  4331e8:	sub    rsp,0x58
  4331ec:	movsxd rbp,DWORD PTR [rip+0x51c11]        # 0x484e04
  4331f3:	mov    rbx,rcx
  4331f6:	mov    rsi,rdx
  4331f9:	mov    rdi,r8
  4331fc:	test   ebp,ebp
  4331fe:	jle    0x4332fa
  433204:	mov    rax,QWORD PTR [rip+0x51bfd]        # 0x484e08
  43320b:	xor    r9d,r9d
  43320e:	add    rax,0x8
  433212:	mov    r10,QWORD PTR [rax]
  433215:	cmp    rbx,r10
  433218:	jb     0x43322e
  43321a:	mov    rdx,QWORD PTR [rax+0x8]
  43321e:	mov    r11d,DWORD PTR [rdx+0x8]
  433222:	add    r10,r11
  433225:	cmp    rbx,r10
  433228:	jb     0x4332e0
  43322e:	add    r9d,0x1
  433232:	add    rax,0x18
  433236:	cmp    r9d,ebp
  433239:	jne    0x433212
  43323b:	mov    rcx,rbx
  43323e:	call   0x433e50
  433243:	test   rax,rax
  433246:	mov    r12,rax
  433249:	je     0x433332
  43324f:	lea    rbp,[rbp+rbp*2+0x0]
  433254:	shl    rbp,0x3
  433258:	mov    r13,rbp
  43325b:	add    r13,QWORD PTR [rip+0x51ba6]        # 0x484e08
  433262:	mov    QWORD PTR [r13+0x10],rax
  433266:	mov    DWORD PTR [r13+0x0],0x0
  43326e:	call   0x433f70
  433273:	mov    edx,DWORD PTR [r12+0xc]
  433278:	mov    r8d,0x30
  43327e:	add    rax,rdx
  433281:	lea    rdx,[rsp+0x20]
  433286:	mov    QWORD PTR [r13+0x8],rax
  43328a:	mov    rax,QWORD PTR [rip+0x51b77]        # 0x484e08
  433291:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  433296:	call   QWORD PTR [rip+0x535a4]        # 0x486840
  43329c:	test   rax,rax
  43329f:	je     0x433315
  4332a1:	mov    eax,DWORD PTR [rsp+0x44]
  4332a5:	lea    edx,[rax-0x4]
  4332a8:	and    edx,0xfffffffb
  4332ab:	je     0x4332d9
  4332ad:	sub    eax,0x40
  4332b0:	and    eax,0xffffffbf
  4332b3:	je     0x4332d9
  4332b5:	mov    r9,rbp
  4332b8:	add    r9,QWORD PTR [rip+0x51b49]        # 0x484e08
  4332bf:	mov    r8d,0x40
  4332c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4332ca:	mov    rcx,QWORD PTR [rsp+0x20]
  4332cf:	call   QWORD PTR [rip+0x53563]        # 0x486838
  4332d5:	test   eax,eax
  4332d7:	je     0x433301
  4332d9:	add    DWORD PTR [rip+0x51b24],0x1        # 0x484e04
  4332e0:	mov    r8,rdi
  4332e3:	mov    rdx,rsi
  4332e6:	mov    rcx,rbx
  4332e9:	add    rsp,0x58
  4332ed:	pop    rbx
  4332ee:	pop    rsi
  4332ef:	pop    rdi
  4332f0:	pop    rbp
  4332f1:	pop    r12
  4332f3:	pop    r13
  4332f5:	jmp    0x4387f0
  4332fa:	xor    ebp,ebp
  4332fc:	jmp    0x43323b
  433301:	call   QWORD PTR [rip+0x533e1]        # 0x4866e8
  433307:	lea    rcx,[rip+0x481ca]        # 0x47b4d8
  43330e:	mov    edx,eax
  433310:	call   0x433170
  433315:	mov    rax,QWORD PTR [rip+0x51aec]        # 0x484e08
  43331c:	mov    edx,DWORD PTR [r12+0x8]
  433321:	lea    rcx,[rip+0x48178]        # 0x47b4a0
  433328:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  43332d:	call   0x433170
  433332:	lea    rcx,[rip+0x48147]        # 0x47b480
  433339:	mov    rdx,rbx
  43333c:	call   0x433170
  433341:	nop
  433342:	nop    DWORD PTR [rax+0x0]
  433346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433350:	push   rbp
  433351:	push   r14
  433353:	push   r13
  433355:	push   r12
  433357:	push   rdi
  433358:	push   rsi
  433359:	push   rbx
  43335a:	mov    rbp,rsp
  43335d:	sub    rsp,0x60
  433361:	mov    ebx,DWORD PTR [rip+0x51a99]        # 0x484e00
  433367:	test   ebx,ebx
  433369:	je     0x433380
  43336b:	mov    rsp,rbp
  43336e:	pop    rbx
  43336f:	pop    rsi
  433370:	pop    rdi
  433371:	pop    r12
  433373:	pop    r13
  433375:	pop    r14
  433377:	pop    rbp
  433378:	ret    
  433379:	nop    DWORD PTR [rax+0x0]
  433380:	mov    DWORD PTR [rip+0x51a76],0x1        # 0x484e00
  43338a:	call   0x433ea0
  43338f:	cdqe   
  433391:	lea    rax,[rax+rax*2]
  433395:	lea    rax,[rax*8+0x1e]
  43339d:	and    rax,0xfffffffffffffff0
  4333a1:	call   0x4340c0
  4333a6:	mov    rsi,QWORD PTR [rip+0x485c3]        # 0x47b970
  4333ad:	mov    rbx,QWORD PTR [rip+0x485cc]        # 0x47b980
  4333b4:	sub    rsp,rax
  4333b7:	mov    DWORD PTR [rip+0x51a43],0x0        # 0x484e04
  4333c1:	lea    rax,[rsp+0x20]
  4333c6:	mov    QWORD PTR [rip+0x51a3b],rax        # 0x484e08
  4333cd:	mov    rax,rsi
  4333d0:	sub    rax,rbx
  4333d3:	cmp    rax,0x7
  4333d7:	jle    0x43336b
  4333d9:	cmp    rax,0xb
  4333dd:	jle    0x433405
  4333df:	mov    r11d,DWORD PTR [rbx]
  4333e2:	test   r11d,r11d
  4333e5:	jne    0x433530
  4333eb:	mov    r10d,DWORD PTR [rbx+0x4]
  4333ef:	test   r10d,r10d
  4333f2:	jne    0x433530
  4333f8:	mov    r9d,DWORD PTR [rbx+0x8]
  4333fc:	test   r9d,r9d
  4333ff:	jne    0x43341c
  433401:	add    rbx,0xc
  433405:	mov    r8d,DWORD PTR [rbx]
  433408:	test   r8d,r8d
  43340b:	jne    0x433530
  433411:	mov    ecx,DWORD PTR [rbx+0x4]
  433414:	test   ecx,ecx
  433416:	jne    0x433530
  43341c:	mov    edx,DWORD PTR [rbx+0x8]
  43341f:	cmp    edx,0x1
  433422:	jne    0x43363c
  433428:	add    rbx,0xc
  43342c:	cmp    rbx,rsi
  43342f:	jae    0x43336b
  433435:	mov    r12,QWORD PTR [rip+0x48584]        # 0x47b9c0
  43343c:	lea    r13,[rbp-0x30]
  433440:	movabs r14,0xffffffff00000000
  43344a:	mov    ecx,DWORD PTR [rbx+0x4]
  43344d:	mov    eax,DWORD PTR [rbx]
  43344f:	movzx  edx,BYTE PTR [rbx+0x8]
  433453:	add    rax,r12
  433456:	add    rcx,r12
  433459:	cmp    edx,0x10
  43345c:	mov    r8,QWORD PTR [rax]
  43345f:	je     0x4335a6
  433465:	jbe    0x43356d
  43346b:	cmp    edx,0x20
  43346e:	je     0x4335ef
  433474:	cmp    edx,0x40
  433477:	jne    0x4335db
  43347d:	sub    r8,rax
  433480:	mov    rdx,r13
  433483:	mov    rdi,r13
  433486:	mov    rax,r8
  433489:	add    rax,QWORD PTR [rcx]
  43348c:	mov    r8d,0x8
  433492:	mov    QWORD PTR [rbp-0x30],rax
  433496:	call   0x4331e0
  43349b:	add    rbx,0xc
  43349f:	cmp    rbx,rsi
  4334a2:	jb     0x43344a
  4334a4:	mov    eax,DWORD PTR [rip+0x5195a]        # 0x484e04
  4334aa:	xor    ebx,ebx
  4334ac:	xor    esi,esi
  4334ae:	test   eax,eax
  4334b0:	jle    0x43336b
  4334b6:	mov    r14,QWORD PTR [rip+0x53383]        # 0x486840
  4334bd:	lea    r13,[rbp-0x34]
  4334c1:	mov    r12,QWORD PTR [rip+0x53370]        # 0x486838
  4334c8:	jmp    0x4334e3
  4334ca:	nop    WORD PTR [rax+rax*1+0x0]
  4334d0:	add    esi,0x1
  4334d3:	add    rbx,0x18
  4334d7:	cmp    esi,DWORD PTR [rip+0x51927]        # 0x484e04
  4334dd:	jge    0x43336b
  4334e3:	mov    rax,rbx
  4334e6:	add    rax,QWORD PTR [rip+0x5191b]        # 0x484e08
  4334ed:	mov    edx,DWORD PTR [rax]
  4334ef:	test   edx,edx
  4334f1:	je     0x4334d0
  4334f3:	mov    rcx,QWORD PTR [rax+0x8]
  4334f7:	mov    r8d,0x30
  4334fd:	mov    rdx,rdi
  433500:	call   r14
  433503:	test   rax,rax
  433506:	je     0x43361e
  43350c:	mov    rax,QWORD PTR [rip+0x518f5]        # 0x484e08
  433513:	mov    r9,r13
  433516:	mov    rdx,QWORD PTR [rbp-0x18]
  43351a:	mov    rcx,QWORD PTR [rbp-0x30]
  43351e:	mov    r8d,DWORD PTR [rax+rbx*1]
  433522:	call   r12
  433525:	jmp    0x4334d0
  433527:	nop    WORD PTR [rax+rax*1+0x0]
  433530:	cmp    rbx,rsi
  433533:	jae    0x43336b
  433539:	mov    r12,QWORD PTR [rip+0x48480]        # 0x47b9c0
  433540:	lea    rdi,[rbp-0x30]
  433544:	mov    ecx,DWORD PTR [rbx+0x4]
  433547:	mov    eax,DWORD PTR [rbx]
  433549:	mov    r8d,0x4
  43354f:	mov    rdx,rdi
  433552:	add    rbx,0x8
  433556:	add    rcx,r12
  433559:	add    eax,DWORD PTR [rcx]
  43355b:	mov    DWORD PTR [rbp-0x30],eax
  43355e:	call   0x4331e0
  433563:	cmp    rbx,rsi
  433566:	jb     0x433544
  433568:	jmp    0x4334a4
  43356d:	cmp    edx,0x8
  433570:	jne    0x4335db
  433572:	movzx  edx,BYTE PTR [rcx]
  433575:	mov    rdi,r13
  433578:	mov    r10,rdx
  43357b:	or     r10,0xffffffffffffff00
  433582:	test   dl,dl
  433584:	cmovs  rdx,r10
  433588:	sub    rdx,rax
  43358b:	lea    rax,[r8+rdx*1]
  43358f:	mov    r8d,0x1
  433595:	mov    rdx,r13
  433598:	mov    QWORD PTR [rbp-0x30],rax
  43359c:	call   0x4331e0
  4335a1:	jmp    0x43349b
  4335a6:	movzx  edx,WORD PTR [rcx]
  4335a9:	mov    rdi,r13
  4335ac:	mov    r10,rdx
  4335af:	or     r10,0xffffffffffff0000
  4335b6:	test   dx,dx
  4335b9:	cmovs  rdx,r10
  4335bd:	sub    rdx,rax
  4335c0:	lea    rax,[r8+rdx*1]
  4335c4:	mov    r8d,0x2
  4335ca:	mov    rdx,r13
  4335cd:	mov    QWORD PTR [rbp-0x30],rax
  4335d1:	call   0x4331e0
  4335d6:	jmp    0x43349b
  4335db:	lea    rcx,[rip+0x47f56]        # 0x47b538
  4335e2:	mov    QWORD PTR [rbp-0x30],0x0
  4335ea:	call   0x433170
  4335ef:	mov    edx,DWORD PTR [rcx]
  4335f1:	mov    rdi,r13
  4335f4:	mov    r10,rdx
  4335f7:	or     r10,r14
  4335fa:	test   edx,edx
  4335fc:	cmovs  rdx,r10
  433600:	sub    rdx,rax
  433603:	lea    rax,[r8+rdx*1]
  433607:	mov    r8d,0x4
  43360d:	mov    rdx,r13
  433610:	mov    QWORD PTR [rbp-0x30],rax
  433614:	call   0x4331e0
  433619:	jmp    0x43349b
  43361e:	add    rbx,QWORD PTR [rip+0x517e3]        # 0x484e08
  433625:	lea    rcx,[rip+0x47e74]        # 0x47b4a0
  43362c:	mov    rax,QWORD PTR [rbx+0x10]
  433630:	mov    r8,QWORD PTR [rbx+0x8]
  433634:	mov    edx,DWORD PTR [rax+0x8]
  433637:	call   0x433170
  43363c:	lea    rcx,[rip+0x47ebd]        # 0x47b500
  433643:	call   0x433170
  433648:	nop
  433649:	nop
  43364a:	nop
  43364b:	nop
  43364c:	nop
  43364d:	nop
  43364e:	nop
  43364f:	nop
  433650:	sub    rsp,0x28
  433654:	mov    eax,DWORD PTR [rcx]
  433656:	cmp    eax,0xc0000091
  43365b:	ja     0x4336c0
  43365d:	cmp    eax,0xc000008d
  433662:	jae    0x4336df
  433664:	cmp    eax,0xc0000008
  433669:	je     0x433780
  43366f:	ja     0x433750
  433675:	cmp    eax,0x80000002
  43367a:	je     0x433780
  433680:	cmp    eax,0xc0000005
  433685:	jne    0x43375e
  43368b:	xor    edx,edx
  43368d:	mov    ecx,0xb
  433692:	call   0x4387b8
  433697:	cmp    rax,0x1
  43369b:	je     0x4337e0
  4336a1:	test   rax,rax
  4336a4:	je     0x4337c0
  4336aa:	mov    ecx,0xb
  4336af:	call   rax
  4336b1:	xor    eax,eax
  4336b3:	add    rsp,0x28
  4336b7:	ret    
  4336b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4336c0:	cmp    eax,0xc0000094
  4336c5:	je     0x433790
  4336cb:	ja     0x433710
  4336cd:	cmp    eax,0xc0000092
  4336d2:	je     0x433780
  4336d8:	cmp    eax,0xc0000093
  4336dd:	jne    0x43375e
  4336df:	xor    edx,edx
  4336e1:	mov    ecx,0x8
  4336e6:	call   0x4387b8
  4336eb:	cmp    rax,0x1
  4336ef:	mov    rdx,rax
  4336f2:	je     0x433768
  4336f4:	test   rdx,rdx
  4336f7:	mov    eax,0x1
  4336fc:	je     0x4336b3
  4336fe:	mov    ecx,0x8
  433703:	call   rdx
  433705:	xor    eax,eax
  433707:	add    rsp,0x28
  43370b:	ret    
  43370c:	nop    DWORD PTR [rax+0x0]
  433710:	cmp    eax,0xc0000095
  433715:	je     0x433780
  433717:	cmp    eax,0xc0000096
  43371c:	jne    0x43375e
  43371e:	xor    edx,edx
  433720:	mov    ecx,0x4
  433725:	call   0x4387b8
  43372a:	cmp    rax,0x1
  43372e:	je     0x4337ca
  433734:	test   rax,rax
  433737:	je     0x4337c0
  43373d:	mov    ecx,0x4
  433742:	call   rax
  433744:	xor    eax,eax
  433746:	jmp    0x4336b3
  43374b:	nop    DWORD PTR [rax+rax*1+0x0]
  433750:	cmp    eax,0xc000001d
  433755:	je     0x43371e
  433757:	cmp    eax,0xc000008c
  43375c:	je     0x433780
  43375e:	mov    eax,0x1
  433763:	add    rsp,0x28
  433767:	ret    
  433768:	mov    edx,0x1
  43376d:	mov    ecx,0x8
  433772:	call   0x4387b8
  433777:	call   0x433140
  43377c:	nop    DWORD PTR [rax+0x0]
  433780:	xor    eax,eax
  433782:	add    rsp,0x28
  433786:	ret    
  433787:	nop    WORD PTR [rax+rax*1+0x0]
  433790:	xor    edx,edx
  433792:	mov    ecx,0x8
  433797:	call   0x4387b8
  43379c:	cmp    rax,0x1
  4337a0:	mov    rdx,rax
  4337a3:	jne    0x4336f4
  4337a9:	mov    edx,0x1
  4337ae:	mov    ecx,0x8
  4337b3:	call   0x4387b8
  4337b8:	xor    eax,eax
  4337ba:	jmp    0x4336b3
  4337bf:	nop
  4337c0:	mov    eax,0x4
  4337c5:	add    rsp,0x28
  4337c9:	ret    
  4337ca:	mov    edx,0x1
  4337cf:	mov    ecx,0x4
  4337d4:	call   0x4387b8
  4337d9:	xor    eax,eax
  4337db:	jmp    0x4336b3
  4337e0:	mov    edx,0x1
  4337e5:	mov    ecx,0xb
  4337ea:	call   0x4387b8
  4337ef:	xor    eax,eax
  4337f1:	jmp    0x4336b3
  4337f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433800:	push   r12
  433802:	push   rbp
  433803:	push   rdi
  433804:	push   rsi
  433805:	push   rbx
  433806:	sub    rsp,0x20
  43380a:	call   0x433f70
  43380f:	mov    rbp,rax
  433812:	mov    eax,DWORD PTR [rip+0x51630]        # 0x484e48
  433818:	test   eax,eax
  43381a:	jne    0x433841
  43381c:	test   rbp,rbp
  43381f:	je     0x433841
  433821:	lea    rcx,[rip+0x47d48]        # 0x47b570
  433828:	mov    DWORD PTR [rip+0x51616],0x1        # 0x484e48
  433832:	call   0x433db0
  433837:	test   rax,rax
  43383a:	je     0x433850
  43383c:	mov    eax,0x1
  433841:	add    rsp,0x20
  433845:	pop    rbx
  433846:	pop    rsi
  433847:	pop    rdi
  433848:	pop    rbp
  433849:	pop    r12
  43384b:	ret    
  43384c:	nop    DWORD PTR [rax+0x0]
  433850:	lea    rbx,[rip+0x51729]        # 0x484f80
  433857:	mov    ecx,0x30
  43385c:	lea    rdx,[rip+0x5161d]        # 0x484e80
  433863:	lea    r12,[rip+0xfffffffffffffde6]        # 0x433650
  43386a:	xor    esi,esi
  43386c:	mov    rdi,rbx
  43386f:	rep stos QWORD PTR es:[rdi],rax
  433872:	mov    rdi,rdx
  433875:	sub    r12,rbp
  433878:	mov    cl,0x20
  43387a:	rep stos QWORD PTR es:[rdi],rax
  43387d:	mov    rdi,rdx
  433880:	jmp    0x4338b0
  433882:	mov    BYTE PTR [rdi],0x9
  433885:	mov    DWORD PTR [rdi+0x4],r12d
  433889:	add    rsi,0x1
  43388d:	mov    edx,DWORD PTR [rax+0xc]
  433890:	add    rbx,0xc
  433894:	mov    DWORD PTR [rbx-0xc],edx
  433897:	add    edx,DWORD PTR [rax+0x8]
  43389a:	mov    rax,rdi
  43389d:	sub    rax,rbp
  4338a0:	add    rdi,0x8
  4338a4:	mov    DWORD PTR [rbx-0x4],eax
  4338a7:	mov    DWORD PTR [rbx-0x8],edx
  4338aa:	cmp    rsi,0x20
  4338ae:	je     0x4338e5
  4338b0:	mov    rcx,rsi
  4338b3:	call   0x433ee0
  4338b8:	test   rax,rax
  4338bb:	jne    0x433882
  4338bd:	test   rsi,rsi
  4338c0:	je     0x43383c
  4338c6:	mov    edx,esi
  4338c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4338d0:	mov    r8,rbp
  4338d3:	lea    rcx,[rip+0x516a6]        # 0x484f80
  4338da:	call   QWORD PTR [rip+0x52ee0]        # 0x4867c0
  4338e0:	jmp    0x43383c
  4338e5:	mov    edx,0x20
  4338ea:	jmp    0x4338d0
  4338ec:	nop    DWORD PTR [rax+0x0]
  4338f0:	push   rbx
  4338f1:	sub    rsp,0x20
  4338f5:	mov    rdx,QWORD PTR [rcx]
  4338f8:	mov    eax,DWORD PTR [rdx]
  4338fa:	mov    r8d,eax
  4338fd:	and    r8d,0x20ffffff
  433904:	cmp    r8d,0x20474343
  43390b:	je     0x433a10
  433911:	cmp    eax,0xc0000091
  433916:	mov    rbx,rcx
  433919:	ja     0x4339a0
  43391f:	cmp    eax,0xc000008d
  433924:	jae    0x4339b7
  43392a:	cmp    eax,0xc0000008
  43392f:	je     0x433963
  433931:	ja     0x433970
  433933:	cmp    eax,0x80000002
  433938:	je     0x433963
  43393a:	cmp    eax,0xc0000005
  43393f:	jne    0x433982
  433941:	xor    edx,edx
  433943:	mov    ecx,0xb
  433948:	call   0x4387b8
  43394d:	cmp    rax,0x1
  433951:	je     0x433a80
  433957:	test   rax,rax
  43395a:	je     0x433982
  43395c:	mov    ecx,0xb
  433961:	call   rax
  433963:	mov    eax,0xffffffff
  433968:	add    rsp,0x20
  43396c:	pop    rbx
  43396d:	ret    
  43396e:	xchg   ax,ax
  433970:	cmp    eax,0xc000001d
  433975:	je     0x433a36
  43397b:	cmp    eax,0xc000008c
  433980:	je     0x433963
  433982:	mov    rax,QWORD PTR [rip+0x514b7]        # 0x484e40
  433989:	test   rax,rax
  43398c:	je     0x433968
  43398e:	mov    rcx,rbx
  433991:	add    rsp,0x20
  433995:	pop    rbx
  433996:	rex.W jmp rax
  433999:	nop    DWORD PTR [rax+0x0]
  4339a0:	cmp    eax,0xc0000094
  4339a5:	je     0x4339e2
  4339a7:	ja     0x433a20
  4339a9:	cmp    eax,0xc0000092
  4339ae:	je     0x433963
  4339b0:	cmp    eax,0xc0000093
  4339b5:	jne    0x433982
  4339b7:	xor    edx,edx
  4339b9:	mov    ecx,0x8
  4339be:	call   0x4387b8
  4339c3:	cmp    rax,0x1
  4339c7:	jne    0x4339f4
  4339c9:	mov    edx,0x1
  4339ce:	mov    ecx,0x8
  4339d3:	call   0x4387b8
  4339d8:	call   0x433140
  4339dd:	jmp    0x433963
  4339e2:	xor    edx,edx
  4339e4:	mov    ecx,0x8
  4339e9:	call   0x4387b8
  4339ee:	cmp    rax,0x1
  4339f2:	je     0x433a62
  4339f4:	test   rax,rax
  4339f7:	je     0x433982
  4339f9:	mov    ecx,0x8
  4339fe:	call   rax
  433a00:	mov    eax,0xffffffff
  433a05:	jmp    0x433968
  433a0a:	nop    WORD PTR [rax+rax*1+0x0]
  433a10:	test   BYTE PTR [rdx+0x4],0x1
  433a14:	jne    0x433911
  433a1a:	jmp    0x433963
  433a1f:	nop
  433a20:	cmp    eax,0xc0000095
  433a25:	je     0x433963
  433a2b:	cmp    eax,0xc0000096
  433a30:	jne    0x433982
  433a36:	xor    edx,edx
  433a38:	mov    ecx,0x4
  433a3d:	call   0x4387b8
  433a42:	cmp    rax,0x1
  433a46:	je     0x433a94
  433a48:	test   rax,rax
  433a4b:	je     0x433982
  433a51:	mov    ecx,0x4
  433a56:	call   rax
  433a58:	mov    eax,0xffffffff
  433a5d:	jmp    0x433968
  433a62:	mov    edx,0x1
  433a67:	mov    ecx,0x8
  433a6c:	call   0x4387b8
  433a71:	jmp    0x433963
  433a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433a80:	mov    edx,0x1
  433a85:	mov    ecx,0xb
  433a8a:	call   0x4387b8
  433a8f:	jmp    0x433963
  433a94:	mov    edx,0x1
  433a99:	mov    ecx,0x4
  433a9e:	call   0x4387b8
  433aa3:	jmp    0x433963
  433aa8:	nop
  433aa9:	nop
  433aaa:	nop
  433aab:	nop
  433aac:	nop
  433aad:	nop
  433aae:	nop
  433aaf:	nop
  433ab0:	push   rbp
  433ab1:	push   rdi
  433ab2:	push   rsi
  433ab3:	push   rbx
  433ab4:	sub    rsp,0x28
  433ab8:	lea    rcx,[rip+0x51661]        # 0x485120
  433abf:	call   QWORD PTR [rip+0x52ba3]        # 0x486668
  433ac5:	mov    rbx,QWORD PTR [rip+0x51634]        # 0x485100
  433acc:	test   rbx,rbx
  433acf:	je     0x433b04
  433ad1:	mov    rbp,QWORD PTR [rip+0x52d40]        # 0x486818
  433ad8:	mov    rdi,QWORD PTR [rip+0x52c09]        # 0x4866e8
  433adf:	nop
  433ae0:	mov    ecx,DWORD PTR [rbx]
  433ae2:	call   rbp
  433ae4:	mov    rsi,rax
  433ae7:	call   rdi
  433ae9:	test   eax,eax
  433aeb:	jne    0x433afb
  433aed:	test   rsi,rsi
  433af0:	je     0x433afb
  433af2:	mov    rax,QWORD PTR [rbx+0x8]
  433af6:	mov    rcx,rsi
  433af9:	call   rax
  433afb:	mov    rbx,QWORD PTR [rbx+0x10]
  433aff:	test   rbx,rbx
  433b02:	jne    0x433ae0
  433b04:	mov    rax,QWORD PTR [rip+0x52c7d]        # 0x486788
  433b0b:	lea    rcx,[rip+0x5160e]        # 0x485120
  433b12:	add    rsp,0x28
  433b16:	pop    rbx
  433b17:	pop    rsi
  433b18:	pop    rdi
  433b19:	pop    rbp
  433b1a:	rex.W jmp rax
  433b1d:	nop    DWORD PTR [rax]
  433b20:	push   rdi
  433b21:	push   rsi
  433b22:	push   rbx
  433b23:	sub    rsp,0x20
  433b27:	mov    eax,DWORD PTR [rip+0x515db]        # 0x485108
  433b2d:	test   eax,eax
  433b2f:	jne    0x433b40
  433b31:	add    rsp,0x20
  433b35:	pop    rbx
  433b36:	pop    rsi
  433b37:	pop    rdi
  433b38:	ret    
  433b39:	nop    DWORD PTR [rax+0x0]
  433b40:	mov    rsi,rdx
  433b43:	mov    edi,ecx
  433b45:	mov    edx,0x18
  433b4a:	mov    ecx,0x1
  433b4f:	call   0x4388a8
  433b54:	test   rax,rax
  433b57:	mov    rbx,rax
  433b5a:	je     0x433b98
  433b5c:	mov    DWORD PTR [rax],edi
  433b5e:	mov    QWORD PTR [rax+0x8],rsi
  433b62:	lea    rcx,[rip+0x515b7]        # 0x485120
  433b69:	call   QWORD PTR [rip+0x52af9]        # 0x486668
  433b6f:	mov    rax,QWORD PTR [rip+0x5158a]        # 0x485100
  433b76:	lea    rcx,[rip+0x515a3]        # 0x485120
  433b7d:	mov    QWORD PTR [rip+0x5157c],rbx        # 0x485100
  433b84:	mov    QWORD PTR [rbx+0x10],rax
  433b88:	call   QWORD PTR [rip+0x52bfa]        # 0x486788
  433b8e:	xor    eax,eax
  433b90:	add    rsp,0x20
  433b94:	pop    rbx
  433b95:	pop    rsi
  433b96:	pop    rdi
  433b97:	ret    
  433b98:	mov    eax,0xffffffff
  433b9d:	jmp    0x433b31
  433b9f:	nop
  433ba0:	push   rbx
  433ba1:	sub    rsp,0x20
  433ba5:	mov    eax,DWORD PTR [rip+0x5155d]        # 0x485108
  433bab:	test   eax,eax
  433bad:	jne    0x433bc0
  433baf:	xor    eax,eax
  433bb1:	add    rsp,0x20
  433bb5:	pop    rbx
  433bb6:	ret    
  433bb7:	nop    WORD PTR [rax+rax*1+0x0]
  433bc0:	mov    ebx,ecx
  433bc2:	lea    rcx,[rip+0x51557]        # 0x485120
  433bc9:	call   QWORD PTR [rip+0x52a99]        # 0x486668
  433bcf:	mov    rdx,QWORD PTR [rip+0x5152a]        # 0x485100
  433bd6:	test   rdx,rdx
  433bd9:	je     0x433bf7
  433bdb:	mov    eax,DWORD PTR [rdx]
  433bdd:	cmp    eax,ebx
  433bdf:	jne    0x433bee
  433be1:	jmp    0x433c2f
  433be3:	mov    r8d,DWORD PTR [rax]
  433be6:	cmp    r8d,ebx
  433be9:	je     0x433c10
  433beb:	mov    rdx,rax
  433bee:	mov    rax,QWORD PTR [rdx+0x10]
  433bf2:	test   rax,rax
  433bf5:	jne    0x433be3
  433bf7:	lea    rcx,[rip+0x51522]        # 0x485120
  433bfe:	call   QWORD PTR [rip+0x52b84]        # 0x486788
  433c04:	xor    eax,eax
  433c06:	add    rsp,0x20
  433c0a:	pop    rbx
  433c0b:	ret    
  433c0c:	nop    DWORD PTR [rax+0x0]
  433c10:	mov    rcx,rax
  433c13:	mov    rax,QWORD PTR [rax+0x10]
  433c17:	mov    QWORD PTR [rdx+0x10],rax
  433c1b:	call   0x438850
  433c20:	lea    rcx,[rip+0x514f9]        # 0x485120
  433c27:	call   QWORD PTR [rip+0x52b5b]        # 0x486788
  433c2d:	jmp    0x433c04
  433c2f:	mov    rax,QWORD PTR [rdx+0x10]
  433c33:	mov    rcx,rdx
  433c36:	mov    QWORD PTR [rip+0x514c3],rax        # 0x485100
  433c3d:	jmp    0x433c1b
  433c3f:	nop
  433c40:	push   rbx
  433c41:	sub    rsp,0x20
  433c45:	cmp    edx,0x1
  433c48:	je     0x433ce0
  433c4e:	jb     0x433c80
  433c50:	cmp    edx,0x2
  433c53:	je     0x433c70
  433c55:	cmp    edx,0x3
  433c58:	jne    0x433c75
  433c5a:	mov    eax,DWORD PTR [rip+0x514a8]        # 0x485108
  433c60:	test   eax,eax
  433c62:	je     0x433c75
  433c64:	call   0x433ab0
  433c69:	jmp    0x433c75
  433c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  433c70:	call   0x433140
  433c75:	mov    eax,0x1
  433c7a:	add    rsp,0x20
  433c7e:	pop    rbx
  433c7f:	ret    
  433c80:	mov    eax,DWORD PTR [rip+0x51482]        # 0x485108
  433c86:	test   eax,eax
  433c88:	jne    0x433d10
  433c8e:	mov    eax,DWORD PTR [rip+0x51474]        # 0x485108
  433c94:	cmp    eax,0x1
  433c97:	jne    0x433c75
  433c99:	mov    rcx,QWORD PTR [rip+0x51460]        # 0x485100
  433ca0:	test   rcx,rcx
  433ca3:	je     0x433cb6
  433ca5:	mov    rbx,QWORD PTR [rcx+0x10]
  433ca9:	call   0x438850
  433cae:	test   rbx,rbx
  433cb1:	mov    rcx,rbx
  433cb4:	jne    0x433ca5
  433cb6:	lea    rcx,[rip+0x51463]        # 0x485120
  433cbd:	mov    QWORD PTR [rip+0x51438],0x0        # 0x485100
  433cc8:	mov    DWORD PTR [rip+0x51436],0x0        # 0x485108
  433cd2:	call   QWORD PTR [rip+0x52988]        # 0x486660
  433cd8:	jmp    0x433c75
  433cda:	nop    WORD PTR [rax+rax*1+0x0]
  433ce0:	mov    eax,DWORD PTR [rip+0x51422]        # 0x485108
  433ce6:	test   eax,eax
  433ce8:	je     0x433d00
  433cea:	mov    eax,0x1
  433cef:	mov    DWORD PTR [rip+0x5140f],0x1        # 0x485108
  433cf9:	add    rsp,0x20
  433cfd:	pop    rbx
  433cfe:	ret    
  433cff:	nop
  433d00:	lea    rcx,[rip+0x51419]        # 0x485120
  433d07:	call   QWORD PTR [rip+0x52a5b]        # 0x486768
  433d0d:	jmp    0x433cea
  433d0f:	nop
  433d10:	call   0x433ab0
  433d15:	jmp    0x433c8e
  433d1a:	nop
  433d1b:	nop
  433d1c:	nop
  433d1d:	nop
  433d1e:	nop
  433d1f:	nop
  433d20:	movsxd rax,DWORD PTR [rcx+0x3c]
  433d24:	add    rcx,rax
  433d27:	xor    eax,eax
  433d29:	cmp    DWORD PTR [rcx],0x4550
  433d2f:	je     0x433d33
  433d31:	repz ret 
  433d33:	xor    eax,eax
  433d35:	cmp    WORD PTR [rcx+0x18],0x20b
  433d3b:	sete   al
  433d3e:	ret    
  433d3f:	nop
  433d40:	cmp    WORD PTR [rcx],0x5a4d
  433d45:	je     0x433d50
  433d47:	xor    eax,eax
  433d49:	ret    
  433d4a:	nop    WORD PTR [rax+rax*1+0x0]
  433d50:	jmp    0x433d20
  433d52:	nop    DWORD PTR [rax+0x0]
  433d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433d60:	movsxd rax,DWORD PTR [rcx+0x3c]
  433d64:	add    rcx,rax
  433d67:	movzx  eax,WORD PTR [rcx+0x14]
  433d6b:	lea    rax,[rcx+rax*1+0x18]
  433d70:	movzx  ecx,WORD PTR [rcx+0x6]
  433d74:	test   ecx,ecx
  433d76:	je     0x433da1
  433d78:	sub    ecx,0x1
  433d7b:	lea    rcx,[rcx+rcx*4]
  433d7f:	lea    r9,[rax+rcx*8+0x28]
  433d84:	mov    r8d,DWORD PTR [rax+0xc]
  433d88:	cmp    r8,rdx
  433d8b:	mov    rcx,r8
  433d8e:	ja     0x433d98
  433d90:	add    ecx,DWORD PTR [rax+0x8]
  433d93:	cmp    rdx,rcx
  433d96:	jb     0x433da3
  433d98:	add    rax,0x28
  433d9c:	cmp    rax,r9
  433d9f:	jne    0x433d84
  433da1:	xor    eax,eax
  433da3:	repz ret 
  433da5:	nop
  433da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433db0:	push   rdi
  433db1:	push   rsi
  433db2:	push   rbx
  433db3:	sub    rsp,0x20
  433db7:	mov    rsi,rcx
  433dba:	call   0x438788
  433dbf:	cmp    rax,0x8
  433dc3:	ja     0x433de0
  433dc5:	mov    rbx,QWORD PTR [rip+0x47bf4]        # 0x47b9c0
  433dcc:	xor    edi,edi
  433dce:	cmp    WORD PTR [rbx],0x5a4d
  433dd3:	je     0x433df0
  433dd5:	mov    rax,rdi
  433dd8:	add    rsp,0x20
  433ddc:	pop    rbx
  433ddd:	pop    rsi
  433dde:	pop    rdi
  433ddf:	ret    
  433de0:	xor    edi,edi
  433de2:	mov    rax,rdi
  433de5:	add    rsp,0x20
  433de9:	pop    rbx
  433dea:	pop    rsi
  433deb:	pop    rdi
  433dec:	ret    
  433ded:	nop    DWORD PTR [rax]
  433df0:	mov    rcx,rbx
  433df3:	call   0x433d20
  433df8:	test   eax,eax
  433dfa:	je     0x433dd5
  433dfc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  433e00:	add    rdx,rbx
  433e03:	movzx  eax,WORD PTR [rdx+0x14]
  433e07:	lea    rbx,[rdx+rax*1+0x18]
  433e0c:	movzx  eax,WORD PTR [rdx+0x6]
  433e10:	test   eax,eax
  433e12:	je     0x433dd5
  433e14:	sub    eax,0x1
  433e17:	lea    rax,[rax+rax*4]
  433e1b:	lea    rdi,[rbx+rax*8+0x28]
  433e20:	jmp    0x433e2b
  433e22:	add    rbx,0x28
  433e26:	cmp    rbx,rdi
  433e29:	je     0x433de0
  433e2b:	mov    r8d,0x8
  433e31:	mov    rdx,rsi
  433e34:	mov    rcx,rbx
  433e37:	call   0x438780
  433e3c:	test   eax,eax
  433e3e:	jne    0x433e22
  433e40:	mov    rdi,rbx
  433e43:	mov    rax,rdi
  433e46:	add    rsp,0x20
  433e4a:	pop    rbx
  433e4b:	pop    rsi
  433e4c:	pop    rdi
  433e4d:	ret    
  433e4e:	xchg   ax,ax
  433e50:	push   rsi
  433e51:	push   rbx
  433e52:	sub    rsp,0x28
  433e56:	mov    rbx,QWORD PTR [rip+0x47b63]        # 0x47b9c0
  433e5d:	cmp    WORD PTR [rbx],0x5a4d
  433e62:	je     0x433e70
  433e64:	xor    eax,eax
  433e66:	add    rsp,0x28
  433e6a:	pop    rbx
  433e6b:	pop    rsi
  433e6c:	ret    
  433e6d:	nop    DWORD PTR [rax]
  433e70:	mov    rsi,rcx
  433e73:	mov    rcx,rbx
  433e76:	call   0x433d20
  433e7b:	test   eax,eax
  433e7d:	je     0x433e64
  433e7f:	sub    rsi,rbx
  433e82:	mov    rcx,rbx
  433e85:	mov    rdx,rsi
  433e88:	add    rsp,0x28
  433e8c:	pop    rbx
  433e8d:	pop    rsi
  433e8e:	jmp    0x433d60
  433e93:	nop    DWORD PTR [rax]
  433e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433ea0:	push   rbx
  433ea1:	sub    rsp,0x20
  433ea5:	mov    rbx,QWORD PTR [rip+0x47b14]        # 0x47b9c0
  433eac:	xor    eax,eax
  433eae:	cmp    WORD PTR [rbx],0x5a4d
  433eb3:	je     0x433ec0
  433eb5:	add    rsp,0x20
  433eb9:	pop    rbx
  433eba:	ret    
  433ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  433ec0:	mov    rcx,rbx
  433ec3:	call   0x433d20
  433ec8:	test   eax,eax
  433eca:	je     0x433eb5
  433ecc:	movsxd rax,DWORD PTR [rbx+0x3c]
  433ed0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  433ed5:	add    rsp,0x20
  433ed9:	pop    rbx
  433eda:	ret    
  433edb:	nop    DWORD PTR [rax+rax*1+0x0]
  433ee0:	push   rdi
  433ee1:	push   rsi
  433ee2:	push   rbx
  433ee3:	sub    rsp,0x20
  433ee7:	mov    rsi,QWORD PTR [rip+0x47ad2]        # 0x47b9c0
  433eee:	xor    edi,edi
  433ef0:	mov    rbx,rcx
  433ef3:	cmp    WORD PTR [rsi],0x5a4d
  433ef8:	je     0x433f05
  433efa:	mov    rax,rdi
  433efd:	add    rsp,0x20
  433f01:	pop    rbx
  433f02:	pop    rsi
  433f03:	pop    rdi
  433f04:	ret    
  433f05:	mov    rcx,rsi
  433f08:	call   0x433d20
  433f0d:	test   eax,eax
  433f0f:	je     0x433efa
  433f11:	movsxd rax,DWORD PTR [rsi+0x3c]
  433f15:	add    rsi,rax
  433f18:	movzx  eax,WORD PTR [rsi+0x14]
  433f1c:	lea    rdx,[rsi+rax*1+0x18]
  433f21:	movzx  eax,WORD PTR [rsi+0x6]
  433f25:	test   eax,eax
  433f27:	je     0x433efa
  433f29:	sub    eax,0x1
  433f2c:	lea    rax,[rax+rax*4]
  433f30:	lea    rax,[rdx+rax*8+0x28]
  433f35:	test   BYTE PTR [rdx+0x27],0x20
  433f39:	je     0x433f44
  433f3b:	test   rbx,rbx
  433f3e:	je     0x433f60
  433f40:	sub    rbx,0x1
  433f44:	add    rdx,0x28
  433f48:	cmp    rdx,rax
  433f4b:	jne    0x433f35
  433f4d:	xor    edi,edi
  433f4f:	mov    rax,rdi
  433f52:	add    rsp,0x20
  433f56:	pop    rbx
  433f57:	pop    rsi
  433f58:	pop    rdi
  433f59:	ret    
  433f5a:	nop    WORD PTR [rax+rax*1+0x0]
  433f60:	mov    rdi,rdx
  433f63:	mov    rax,rdi
  433f66:	add    rsp,0x20
  433f6a:	pop    rbx
  433f6b:	pop    rsi
  433f6c:	pop    rdi
  433f6d:	ret    
  433f6e:	xchg   ax,ax
  433f70:	push   rsi
  433f71:	push   rbx
  433f72:	sub    rsp,0x28
  433f76:	mov    rsi,QWORD PTR [rip+0x47a43]        # 0x47b9c0
  433f7d:	xor    ebx,ebx
  433f7f:	cmp    WORD PTR [rsi],0x5a4d
  433f84:	je     0x433f90
  433f86:	mov    rax,rbx
  433f89:	add    rsp,0x28
  433f8d:	pop    rbx
  433f8e:	pop    rsi
  433f8f:	ret    
  433f90:	mov    rcx,rsi
  433f93:	call   0x433d20
  433f98:	test   eax,eax
  433f9a:	cmovne rbx,rsi
  433f9e:	mov    rax,rbx
  433fa1:	add    rsp,0x28
  433fa5:	pop    rbx
  433fa6:	pop    rsi
  433fa7:	ret    
  433fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  433fb0:	push   rsi
  433fb1:	push   rbx
  433fb2:	sub    rsp,0x28
  433fb6:	mov    rbx,QWORD PTR [rip+0x47a03]        # 0x47b9c0
  433fbd:	xor    eax,eax
  433fbf:	cmp    WORD PTR [rbx],0x5a4d
  433fc4:	je     0x433fd0
  433fc6:	add    rsp,0x28
  433fca:	pop    rbx
  433fcb:	pop    rsi
  433fcc:	ret    
  433fcd:	nop    DWORD PTR [rax]
  433fd0:	mov    rsi,rcx
  433fd3:	mov    rcx,rbx
  433fd6:	call   0x433d20
  433fdb:	test   eax,eax
  433fdd:	je     0x433fc6
  433fdf:	sub    rsi,rbx
  433fe2:	mov    rcx,rbx
  433fe5:	mov    rdx,rsi
  433fe8:	call   0x433d60
  433fed:	test   rax,rax
  433ff0:	je     0x434001
  433ff2:	mov    eax,DWORD PTR [rax+0x24]
  433ff5:	not    eax
  433ff7:	shr    eax,0x1f
  433ffa:	add    rsp,0x28
  433ffe:	pop    rbx
  433fff:	pop    rsi
  434000:	ret    
  434001:	xor    eax,eax
  434003:	jmp    0x433fc6
  434005:	nop
  434006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434010:	push   rbp
  434011:	push   rdi
  434012:	push   rsi
  434013:	push   rbx
  434014:	sub    rsp,0x28
  434018:	mov    rdi,QWORD PTR [rip+0x479a1]        # 0x47b9c0
  43401f:	xor    ebp,ebp
  434021:	mov    esi,ecx
  434023:	cmp    WORD PTR [rdi],0x5a4d
  434028:	je     0x434040
  43402a:	mov    rax,rbp
  43402d:	add    rsp,0x28
  434031:	pop    rbx
  434032:	pop    rsi
  434033:	pop    rdi
  434034:	pop    rbp
  434035:	ret    
  434036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434040:	mov    rcx,rdi
  434043:	call   0x433d20
  434048:	test   eax,eax
  43404a:	je     0x43402a
  43404c:	movsxd rax,DWORD PTR [rdi+0x3c]
  434050:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  434057:	test   edx,edx
  434059:	je     0x43402a
  43405b:	mov    ebx,edx
  43405d:	mov    rcx,rdi
  434060:	mov    rdx,rbx
  434063:	call   0x433d60
  434068:	test   rax,rax
  43406b:	je     0x43402a
  43406d:	add    rbx,rdi
  434070:	mov    rdx,rbx
  434073:	jne    0x434087
  434075:	jmp    0x43402a
  434077:	nop    WORD PTR [rax+rax*1+0x0]
  434080:	sub    esi,0x1
  434083:	add    rdx,0x14
  434087:	mov    ecx,DWORD PTR [rdx+0x4]
  43408a:	test   ecx,ecx
  43408c:	jne    0x434095
  43408e:	mov    eax,DWORD PTR [rdx+0xc]
  434091:	test   eax,eax
  434093:	je     0x4340b0
  434095:	test   esi,esi
  434097:	jg     0x434080
  434099:	mov    ebp,DWORD PTR [rdx+0xc]
  43409c:	add    rbp,rdi
  43409f:	mov    rax,rbp
  4340a2:	add    rsp,0x28
  4340a6:	pop    rbx
  4340a7:	pop    rsi
  4340a8:	pop    rdi
  4340a9:	pop    rbp
  4340aa:	ret    
  4340ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4340b0:	xor    ebp,ebp
  4340b2:	mov    rax,rbp
  4340b5:	add    rsp,0x28
  4340b9:	pop    rbx
  4340ba:	pop    rsi
  4340bb:	pop    rdi
  4340bc:	pop    rbp
  4340bd:	ret    
  4340be:	nop
  4340bf:	nop
  4340c0:	push   rcx
  4340c1:	push   rax
  4340c2:	cmp    rax,0x1000
  4340c8:	lea    rcx,[rsp+0x18]
  4340cd:	jb     0x4340e8
  4340cf:	sub    rcx,0x1000
  4340d6:	or     QWORD PTR [rcx],0x0
  4340da:	sub    rax,0x1000
  4340e0:	cmp    rax,0x1000
  4340e6:	ja     0x4340cf
  4340e8:	sub    rcx,rax
  4340eb:	or     QWORD PTR [rcx],0x0
  4340ef:	pop    rax
  4340f0:	pop    rcx
  4340f1:	ret    
  4340f2:	nop
  4340f3:	nop
  4340f4:	nop
  4340f5:	nop
  4340f6:	nop
  4340f7:	nop
  4340f8:	nop
  4340f9:	nop
  4340fa:	nop
  4340fb:	nop
  4340fc:	nop
  4340fd:	nop
  4340fe:	nop
  4340ff:	nop
  434100:	push   rbx
  434101:	sub    rsp,0x60
  434105:	lea    r8,[rip+0x68c4]        # 0x43a9d0
  43410c:	lea    rax,[rsp+0x50]
  434111:	lea    r9,[rsp+0x4c]
  434116:	mov    QWORD PTR [rsp+0x20],rax
  43411b:	call   0x434d90
  434120:	mov    edx,eax
  434122:	and    edx,0x7
  434125:	cmp    edx,0x6
  434128:	ja     0x434155
  43412a:	lea    rcx,[rip+0x4744f]        # 0x47b580
  434131:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  434135:	add    rcx,rdx
  434138:	jmp    rcx
  43413a:	nop    WORD PTR [rax+rax*1+0x0]
  434140:	mov    ebx,DWORD PTR [rsp+0x54]
  434144:	mov    edx,DWORD PTR [rsp+0x50]
  434148:	or     ebx,0x7ff00000
  43414e:	shl    rbx,0x20
  434152:	or     rbx,rdx
  434155:	test   al,0x8
  434157:	je     0x43416e
  434159:	mov    rax,rbx
  43415c:	mov    ebx,ebx
  43415e:	shr    rax,0x20
  434162:	or     eax,0x80000000
  434167:	shl    rax,0x20
  43416b:	or     rbx,rax
  43416e:	mov    QWORD PTR [rsp+0x38],rbx
  434173:	movsd  xmm0,QWORD PTR [rsp+0x38]
  434179:	add    rsp,0x60
  43417d:	pop    rbx
  43417e:	ret    
  43417f:	nop
  434180:	movabs rbx,0x7ff8000000000000
  43418a:	jmp    0x434155
  43418c:	nop    DWORD PTR [rax+0x0]
  434190:	xor    ebx,ebx
  434192:	jmp    0x434155
  434194:	mov    ebx,DWORD PTR [rsp+0x4c]
  434198:	mov    edx,DWORD PTR [rsp+0x54]
  43419c:	add    ebx,0x433
  4341a2:	and    edx,0xffefffff
  4341a8:	shl    ebx,0x14
  4341ab:	or     ebx,edx
  4341ad:	mov    edx,DWORD PTR [rsp+0x50]
  4341b1:	shl    rbx,0x20
  4341b5:	or     rbx,rdx
  4341b8:	jmp    0x434155
  4341ba:	nop    WORD PTR [rax+rax*1+0x0]
  4341c0:	mov    ebx,DWORD PTR [rsp+0x54]
  4341c4:	mov    edx,DWORD PTR [rsp+0x50]
  4341c8:	shl    rbx,0x20
  4341cc:	or     rbx,rdx
  4341cf:	jmp    0x434155
  4341d1:	movabs rbx,0x7ff0000000000000
  4341db:	jmp    0x434155
  4341e0:	push   rdi
  4341e1:	push   rsi
  4341e2:	push   rbx
  4341e3:	sub    rsp,0x130
  4341ea:	mov    rbx,rcx
  4341ed:	call   0x438988
  4341f2:	test   rbx,rbx
  4341f5:	mov    DWORD PTR [rax],0x0
  4341fb:	je     0x4343ae
  434201:	cmp    BYTE PTR [rbx],0x0
  434204:	je     0x434370
  43420a:	mov    rcx,rbx
  43420d:	call   QWORD PTR [rip+0x524c5]        # 0x4866d8
  434213:	cmp    eax,0xffffffff
  434216:	je     0x434390
  43421c:	test   al,0x10
  43421e:	je     0x434370
  434224:	lea    rdi,[rsp+0x20]
  434229:	mov    rdx,rbx
  43422c:	mov    r8d,0x104
  434232:	mov    rcx,rdi
  434235:	mov    rbx,rdi
  434238:	call   0x438970
  43423d:	mov    r8d,DWORD PTR [rbx]
  434240:	add    rbx,0x4
  434244:	lea    eax,[r8-0x1010101]
  43424b:	not    r8d
  43424e:	and    eax,r8d
  434251:	and    eax,0x80808080
  434256:	je     0x43423d
  434258:	mov    edx,eax
  43425a:	shr    edx,0x10
  43425d:	test   eax,0x8080
  434262:	cmove  eax,edx
  434265:	lea    rdx,[rbx+0x2]
  434269:	cmove  rbx,rdx
  43426d:	add    al,al
  43426f:	sbb    rbx,0x3
  434273:	sub    rbx,rdi
  434276:	lea    rcx,[rbx+0x24b]
  43427d:	call   0x438800
  434282:	test   rax,rax
  434285:	mov    rsi,rax
  434288:	je     0x43439f
  43428e:	lea    r9,[rax+0x244]
  434295:	lea    r8,[rbx+0x1]
  434299:	mov    rdx,rdi
  43429c:	mov    rcx,r9
  43429f:	call   0x4387f0
  4342a4:	cmp    BYTE PTR [rsi+0x244],0x0
  4342ab:	mov    r9,rax
  4342ae:	je     0x4342d0
  4342b0:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  4342b8:	cmp    al,0x2f
  4342ba:	je     0x4342d0
  4342bc:	cmp    al,0x5c
  4342be:	je     0x4342d0
  4342c0:	mov    r8d,0x5c
  4342c6:	mov    WORD PTR [r9+rbx*1],r8w
  4342cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4342d0:	mov    rcx,r9
  4342d3:	mov    eax,DWORD PTR [rcx]
  4342d5:	add    rcx,0x4
  4342d9:	lea    edx,[rax-0x1010101]
  4342df:	not    eax
  4342e1:	and    edx,eax
  4342e3:	and    edx,0x80808080
  4342e9:	je     0x4342d3
  4342eb:	mov    eax,edx
  4342ed:	shr    eax,0x10
  4342f0:	test   edx,0x8080
  4342f6:	cmove  edx,eax
  4342f9:	lea    rax,[rcx+0x2]
  4342fd:	cmove  rcx,rax
  434301:	add    dl,dl
  434303:	mov    eax,0x2a
  434308:	sbb    rcx,0x3
  43430c:	xor    edx,edx
  43430e:	mov    WORD PTR [rcx],ax
  434311:	mov    WORD PTR [rsi+0x12c],dx
  434318:	lea    rdx,[rsi+0x130]
  43431f:	xor    ecx,ecx
  434321:	xor    eax,eax
  434323:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  43432e:	mov    WORD PTR [rsi+0x12e],cx
  434335:	mov    rdi,rdx
  434338:	mov    ecx,0x20
  43433d:	mov    DWORD PTR [rsi+0x240],0x0
  434347:	mov    DWORD PTR [rsi+0x128],0x0
  434351:	rep stos QWORD PTR es:[rdi],rax
  434354:	mov    rax,rsi
  434357:	mov    DWORD PTR [rdi],0x0
  43435d:	add    rsp,0x130
  434364:	pop    rbx
  434365:	pop    rsi
  434366:	pop    rdi
  434367:	ret    
  434368:	nop    DWORD PTR [rax+rax*1+0x0]
  434370:	call   0x438988
  434375:	mov    DWORD PTR [rax],0x14
  43437b:	xor    eax,eax
  43437d:	add    rsp,0x130
  434384:	pop    rbx
  434385:	pop    rsi
  434386:	pop    rdi
  434387:	ret    
  434388:	nop    DWORD PTR [rax+rax*1+0x0]
  434390:	call   0x438988
  434395:	mov    DWORD PTR [rax],0x2
  43439b:	xor    eax,eax
  43439d:	jmp    0x43435d
  43439f:	call   0x438988
  4343a4:	mov    DWORD PTR [rax],0xc
  4343aa:	xor    eax,eax
  4343ac:	jmp    0x43435d
  4343ae:	call   0x438988
  4343b3:	mov    DWORD PTR [rax],0xe
  4343b9:	xor    eax,eax
  4343bb:	jmp    0x43435d
  4343bd:	nop    DWORD PTR [rax]
  4343c0:	push   rbp
  4343c1:	push   rdi
  4343c2:	push   rsi
  4343c3:	push   rbx
  4343c4:	sub    rsp,0x158
  4343cb:	mov    rbx,rcx
  4343ce:	call   0x438988
  4343d3:	test   rbx,rbx
  4343d6:	mov    DWORD PTR [rax],0x0
  4343dc:	je     0x4345cd
  4343e2:	mov    eax,DWORD PTR [rbx+0x240]
  4343e8:	test   eax,eax
  4343ea:	js     0x43456f
  4343f0:	lea    rdi,[rsp+0x20]
  4343f5:	je     0x4344a4
  4343fb:	mov    rcx,QWORD PTR [rbx+0x238]
  434402:	mov    rdx,rdi
  434405:	call   0x438710
  43440a:	cmp    eax,0xffffffff
  43440d:	mov    ebp,eax
  43440f:	je     0x434515
  434415:	mov    eax,DWORD PTR [rsp+0x20]
  434419:	lea    rsi,[rbx+0x24]
  43441d:	lea    rdx,[rdi+0x28]
  434421:	mov    r8d,0x104
  434427:	mov    rcx,rsi
  43442a:	mov    DWORD PTR [rbx],eax
  43442c:	mov    rax,QWORD PTR [rsp+0x28]
  434431:	mov    QWORD PTR [rbx+0x8],rax
  434435:	mov    rax,QWORD PTR [rsp+0x30]
  43443a:	mov    QWORD PTR [rbx+0x10],rax
  43443e:	mov    rax,QWORD PTR [rsp+0x38]
  434443:	mov    QWORD PTR [rbx+0x18],rax
  434447:	mov    rax,QWORD PTR [rsp+0x40]
  43444c:	mov    DWORD PTR [rbx+0x20],eax
  43444f:	call   0x438778
  434454:	test   ebp,ebp
  434456:	jne    0x434543
  43445c:	mov    eax,DWORD PTR [rbx+0x240]
  434462:	add    eax,0x1
  434465:	test   eax,eax
  434467:	mov    DWORD PTR [rbx+0x240],eax
  43446d:	jle    0x43456f
  434473:	mov    rcx,rsi
  434476:	call   0x438788
  43447b:	lea    rcx,[rbx+0x130]
  434482:	mov    WORD PTR [rbx+0x12e],ax
  434489:	mov    rdx,rsi
  43448c:	call   0x438798
  434491:	lea    rax,[rbx+0x128]
  434498:	add    rsp,0x158
  43449f:	pop    rbx
  4344a0:	pop    rsi
  4344a1:	pop    rdi
  4344a2:	pop    rbp
  4344a3:	ret    
  4344a4:	lea    rcx,[rbx+0x244]
  4344ab:	mov    rdx,rdi
  4344ae:	call   0x438978
  4344b3:	cmp    rax,0xffffffffffffffff
  4344b7:	mov    rbp,rax
  4344ba:	je     0x434580
  4344c0:	mov    eax,DWORD PTR [rsp+0x20]
  4344c4:	lea    rsi,[rbx+0x24]
  4344c8:	lea    rdx,[rdi+0x28]
  4344cc:	mov    r8d,0x104
  4344d2:	mov    rcx,rsi
  4344d5:	mov    DWORD PTR [rbx],eax
  4344d7:	mov    rax,QWORD PTR [rsp+0x28]
  4344dc:	mov    QWORD PTR [rbx+0x8],rax
  4344e0:	mov    rax,QWORD PTR [rsp+0x30]
  4344e5:	mov    QWORD PTR [rbx+0x10],rax
  4344e9:	mov    rax,QWORD PTR [rsp+0x38]
  4344ee:	mov    QWORD PTR [rbx+0x18],rax
  4344f2:	mov    rax,QWORD PTR [rsp+0x40]
  4344f7:	mov    DWORD PTR [rbx+0x20],eax
  4344fa:	call   0x438778
  4344ff:	mov    QWORD PTR [rbx+0x238],rbp
  434506:	mov    DWORD PTR [rbx+0x240],0x1
  434510:	jmp    0x434473
  434515:	lea    rdi,[rbx+0x8]
  434519:	mov    rcx,rbx
  43451c:	xor    eax,eax
  43451e:	mov    QWORD PTR [rbx],0x0
  434525:	mov    QWORD PTR [rbx+0x120],0x0
  434530:	and    rdi,0xfffffffffffffff8
  434534:	sub    rcx,rdi
  434537:	add    ecx,0x128
  43453d:	shr    ecx,0x3
  434540:	rep stos QWORD PTR es:[rdi],rax
  434543:	call   QWORD PTR [rip+0x5219f]        # 0x4866e8
  434549:	cmp    eax,0x12
  43454c:	je     0x4345c0
  43454e:	mov    rcx,QWORD PTR [rbx+0x238]
  434555:	call   0x438980
  43455a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  434565:	mov    DWORD PTR [rbx+0x240],0xffffffff
  43456f:	xor    eax,eax
  434571:	add    rsp,0x158
  434578:	pop    rbx
  434579:	pop    rsi
  43457a:	pop    rdi
  43457b:	pop    rbp
  43457c:	ret    
  43457d:	nop    DWORD PTR [rax]
  434580:	lea    rdi,[rbx+0x8]
  434584:	mov    rcx,rbx
  434587:	xor    eax,eax
  434589:	mov    QWORD PTR [rbx],0x0
  434590:	mov    QWORD PTR [rbx+0x120],0x0
  43459b:	and    rdi,0xfffffffffffffff8
  43459f:	sub    rcx,rdi
  4345a2:	add    ecx,0x128
  4345a8:	shr    ecx,0x3
  4345ab:	rep stos QWORD PTR es:[rdi],rax
  4345ae:	mov    QWORD PTR [rbx+0x238],rbp
  4345b5:	mov    DWORD PTR [rbx+0x240],ebp
  4345bb:	xor    eax,eax
  4345bd:	jmp    0x434571
  4345bf:	nop
  4345c0:	call   0x438988
  4345c5:	mov    DWORD PTR [rax],0x0
  4345cb:	jmp    0x43454e
  4345cd:	call   0x438988
  4345d2:	mov    DWORD PTR [rax],0xe
  4345d8:	xor    eax,eax
  4345da:	jmp    0x434498
  4345df:	nop
  4345e0:	push   rsi
  4345e1:	push   rbx
  4345e2:	sub    rsp,0x28
  4345e6:	mov    rsi,rcx
  4345e9:	call   0x438988
  4345ee:	test   rsi,rsi
  4345f1:	mov    DWORD PTR [rax],0x0
  4345f7:	je     0x434620
  4345f9:	mov    rcx,QWORD PTR [rsi+0x238]
  434600:	xor    ebx,ebx
  434602:	cmp    rcx,0xffffffffffffffff
  434606:	je     0x43460f
  434608:	call   0x438980
  43460d:	mov    ebx,eax
  43460f:	mov    rcx,rsi
  434612:	call   0x438850
  434617:	mov    eax,ebx
  434619:	add    rsp,0x28
  43461d:	pop    rbx
  43461e:	pop    rsi
  43461f:	ret    
  434620:	call   0x438988
  434625:	mov    DWORD PTR [rax],0xe
  43462b:	mov    eax,0xffffffff
  434630:	jmp    0x434619
  434632:	nop    DWORD PTR [rax+0x0]
  434636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434640:	push   rbx
  434641:	sub    rsp,0x20
  434645:	mov    rbx,rcx
  434648:	call   0x438988
  43464d:	test   rbx,rbx
  434650:	mov    DWORD PTR [rax],0x0
  434656:	je     0x434685
  434658:	mov    rcx,QWORD PTR [rbx+0x238]
  43465f:	cmp    rcx,0xffffffffffffffff
  434663:	je     0x43466a
  434665:	call   0x438980
  43466a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  434675:	mov    DWORD PTR [rbx+0x240],0x0
  43467f:	add    rsp,0x20
  434683:	pop    rbx
  434684:	ret    
  434685:	call   0x438988
  43468a:	mov    DWORD PTR [rax],0xe
  434690:	jmp    0x43467f
  434692:	nop    DWORD PTR [rax+0x0]
  434696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4346a0:	push   rbx
  4346a1:	sub    rsp,0x20
  4346a5:	mov    rbx,rcx
  4346a8:	call   0x438988
  4346ad:	test   rbx,rbx
  4346b0:	mov    DWORD PTR [rax],0x0
  4346b6:	je     0x4346c4
  4346b8:	mov    eax,DWORD PTR [rbx+0x240]
  4346be:	add    rsp,0x20
  4346c2:	pop    rbx
  4346c3:	ret    
  4346c4:	call   0x438988
  4346c9:	mov    DWORD PTR [rax],0xe
  4346cf:	mov    eax,0xffffffff
  4346d4:	jmp    0x4346be
  4346d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4346e0:	push   rsi
  4346e1:	push   rbx
  4346e2:	sub    rsp,0x28
  4346e6:	mov    rbx,rcx
  4346e9:	mov    esi,edx
  4346eb:	call   0x438988
  4346f0:	test   rbx,rbx
  4346f3:	mov    DWORD PTR [rax],0x0
  4346f9:	je     0x43476d
  4346fb:	cmp    esi,0xffffffff
  4346fe:	jl     0x434760
  434700:	je     0x434730
  434702:	mov    rcx,rbx
  434705:	call   0x434640
  43470a:	jmp    0x43471d
  43470c:	nop    DWORD PTR [rax+0x0]
  434710:	mov    rcx,rbx
  434713:	call   0x4343c0
  434718:	test   rax,rax
  43471b:	je     0x434757
  43471d:	cmp    esi,DWORD PTR [rbx+0x240]
  434723:	jg     0x434710
  434725:	add    rsp,0x28
  434729:	pop    rbx
  43472a:	pop    rsi
  43472b:	ret    
  43472c:	nop    DWORD PTR [rax+0x0]
  434730:	mov    rcx,QWORD PTR [rbx+0x238]
  434737:	cmp    rcx,0xffffffffffffffff
  43473b:	je     0x434742
  43473d:	call   0x438980
  434742:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43474d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  434757:	add    rsp,0x28
  43475b:	pop    rbx
  43475c:	pop    rsi
  43475d:	ret    
  43475e:	xchg   ax,ax
  434760:	call   0x438988
  434765:	mov    DWORD PTR [rax],0x16
  43476b:	jmp    0x434757
  43476d:	call   0x438988
  434772:	mov    DWORD PTR [rax],0xe
  434778:	jmp    0x434757
  43477a:	nop
  43477b:	nop
  43477c:	nop
  43477d:	nop
  43477e:	nop
  43477f:	nop
  434780:	push   rdi
  434781:	push   rbx
  434782:	sub    rsp,0x68
  434786:	mov    rbx,rdx
  434789:	lea    rdx,[rsp+0x20]
  43478e:	call   0x438718
  434793:	cmp    eax,0xffffffff
  434796:	mov    edx,eax
  434798:	je     0x434800
  43479a:	mov    eax,DWORD PTR [rsp+0x20]
  43479e:	mov    DWORD PTR [rbx],eax
  4347a0:	movzx  eax,WORD PTR [rsp+0x24]
  4347a5:	mov    WORD PTR [rbx+0x4],ax
  4347a9:	movzx  eax,WORD PTR [rsp+0x26]
  4347ae:	mov    WORD PTR [rbx+0x6],ax
  4347b2:	movzx  eax,WORD PTR [rsp+0x28]
  4347b7:	mov    WORD PTR [rbx+0x8],ax
  4347bb:	movzx  eax,WORD PTR [rsp+0x2a]
  4347c0:	mov    WORD PTR [rbx+0xa],ax
  4347c4:	movzx  eax,WORD PTR [rsp+0x2c]
  4347c9:	mov    WORD PTR [rbx+0xc],ax
  4347cd:	mov    eax,DWORD PTR [rsp+0x30]
  4347d1:	mov    DWORD PTR [rbx+0x10],eax
  4347d4:	mov    rax,QWORD PTR [rsp+0x38]
  4347d9:	mov    DWORD PTR [rbx+0x14],eax
  4347dc:	mov    rax,QWORD PTR [rsp+0x40]
  4347e1:	mov    QWORD PTR [rbx+0x18],rax
  4347e5:	mov    rax,QWORD PTR [rsp+0x48]
  4347ea:	mov    QWORD PTR [rbx+0x20],rax
  4347ee:	mov    rax,QWORD PTR [rsp+0x50]
  4347f3:	mov    QWORD PTR [rbx+0x28],rax
  4347f7:	mov    eax,edx
  4347f9:	add    rsp,0x68
  4347fd:	pop    rbx
  4347fe:	pop    rdi
  4347ff:	ret    
  434800:	lea    rdi,[rbx+0x8]
  434804:	mov    QWORD PTR [rbx],0x0
  43480b:	mov    QWORD PTR [rbx+0x28],0x0
  434813:	xor    eax,eax
  434815:	and    rdi,0xfffffffffffffff8
  434819:	sub    rbx,rdi
  43481c:	lea    ecx,[rbx+0x30]
  43481f:	shr    ecx,0x3
  434822:	rep stos QWORD PTR es:[rdi],rax
  434825:	jmp    0x4347f7
  434827:	nop
  434828:	nop
  434829:	nop
  43482a:	nop
  43482b:	nop
  43482c:	nop
  43482d:	nop
  43482e:	nop
  43482f:	nop
  434830:	push   rsi
  434831:	push   rbx
  434832:	sub    rsp,0x28
  434836:	movsxd rax,DWORD PTR [rcx+0x14]
  43483a:	lea    rdx,[rcx+0x18]
  43483e:	mov    rbx,rcx
  434841:	lea    r9,[rdx+rax*4]
  434845:	mov    rcx,rax
  434848:	jmp    0x434860
  43484a:	nop    WORD PTR [rax+rax*1+0x0]
  434850:	add    rdx,0x4
  434854:	mov    DWORD PTR [rdx-0x4],0x0
  43485b:	cmp    r9,rdx
  43485e:	jbe    0x434880
  434860:	mov    r8d,DWORD PTR [rdx]
  434863:	cmp    r8d,0xffffffff
  434867:	je     0x434850
  434869:	add    r8d,0x1
  43486d:	mov    rax,rbx
  434870:	mov    DWORD PTR [rdx],r8d
  434873:	add    rsp,0x28
  434877:	pop    rbx
  434878:	pop    rsi
  434879:	ret    
  43487a:	nop    WORD PTR [rax+rax*1+0x0]
  434880:	cmp    ecx,DWORD PTR [rbx+0xc]
  434883:	jge    0x4348a0
  434885:	add    ecx,0x1
  434888:	mov    DWORD PTR [rbx+0x14],ecx
  43488b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  434893:	mov    rax,rbx
  434896:	add    rsp,0x28
  43489a:	pop    rbx
  43489b:	pop    rsi
  43489c:	ret    
  43489d:	nop    DWORD PTR [rax]
  4348a0:	mov    eax,DWORD PTR [rbx+0x8]
  4348a3:	lea    ecx,[rax+0x1]
  4348a6:	call   0x4379c0
  4348ab:	mov    rsi,rax
  4348ae:	lea    rcx,[rax+0x10]
  4348b2:	movsxd rax,DWORD PTR [rbx+0x14]
  4348b6:	lea    rdx,[rbx+0x10]
  4348ba:	lea    r8,[rax*4+0x8]
  4348c2:	call   0x4387f0
  4348c7:	mov    rcx,rbx
  4348ca:	mov    rbx,rsi
  4348cd:	call   0x437ad0
  4348d2:	movsxd rax,DWORD PTR [rsi+0x14]
  4348d6:	mov    rcx,rax
  4348d9:	jmp    0x434885
  4348db:	nop    DWORD PTR [rax+rax*1+0x0]
  4348e0:	push   r15
  4348e2:	push   r14
  4348e4:	push   r13
  4348e6:	push   r12
  4348e8:	push   rbp
  4348e9:	push   rdi
  4348ea:	push   rsi
  4348eb:	push   rbx
  4348ec:	sub    rsp,0x48
  4348f0:	mov    rdi,rdx
  4348f3:	mov    r12,r8
  4348f6:	lea    rdx,[rsp+0x3c]
  4348fb:	lea    r8,[rsp+0x38]
  434900:	movsd  xmm0,QWORD PTR [rcx]
  434904:	mov    r13,r9
  434907:	call   0x4382a0
  43490c:	mov    r10d,DWORD PTR [rsp+0x38]
  434911:	mov    esi,DWORD PTR [rdi]
  434913:	mov    rbx,rax
  434916:	mov    edx,DWORD PTR [rsp+0x3c]
  43491a:	sub    r10d,esi
  43491d:	add    edx,r10d
  434920:	test   r10d,r10d
  434923:	mov    DWORD PTR [rsp+0x38],r10d
  434928:	mov    DWORD PTR [rsp+0x3c],edx
  43492c:	jle    0x434af0
  434932:	cmp    esi,0x35
  434935:	je     0x434b20
  43493b:	cmp    DWORD PTR [rsp+0xb8],0x1
  434943:	je     0x4349f4
  434949:	cmp    DWORD PTR [rsp+0xb8],0x2
  434951:	je     0x434980
  434953:	mov    eax,r10d
  434956:	sub    eax,0x1
  434959:	jne    0x434bf0
  43495f:	mov    ecx,DWORD PTR [rsp+0xb0]
  434966:	xor    r15d,r15d
  434969:	test   ecx,ecx
  43496b:	je     0x434a77
  434971:	test   BYTE PTR [rbx+0x18],0x2
  434975:	je     0x434b3e
  43497b:	nop    DWORD PTR [rax+rax*1+0x0]
  434980:	mov    edx,r10d
  434983:	mov    rcx,rbx
  434986:	call   0x438660
  43498b:	mov    edx,DWORD PTR [rsp+0x38]
  43498f:	mov    rcx,rbx
  434992:	mov    r14d,eax
  434995:	call   0x437310
  43499a:	mov    rcx,rbx
  43499d:	call   0x434830
  4349a2:	mov    edx,esi
  4349a4:	mov    rbx,rax
  4349a7:	and    edx,0x1f
  4349aa:	jne    0x434be0
  4349b0:	mov    eax,DWORD PTR [rbx+0x14]
  4349b3:	sub    eax,0x1
  4349b6:	cdqe   
  4349b8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  4349bd:	xor    eax,0x1f
  4349c0:	cmp    edx,eax
  4349c2:	je     0x434c70
  4349c8:	test   r14d,r14d
  4349cb:	jne    0x4349d5
  4349cd:	mov    r14d,DWORD PTR [rbx+0x18]
  4349d1:	and    r14d,0x1
  4349d5:	mov    edx,0x1
  4349da:	mov    rcx,rbx
  4349dd:	mov    ebp,0x20
  4349e2:	call   0x437310
  4349e7:	mov    eax,DWORD PTR [rsp+0x3c]
  4349eb:	lea    edx,[rax+0x1]
  4349ee:	mov    DWORD PTR [rsp+0x3c],edx
  4349f2:	jmp    0x434a1f
  4349f4:	mov    edx,r10d
  4349f7:	mov    rcx,rax
  4349fa:	call   0x438660
  4349ff:	test   eax,eax
  434a01:	mov    r14d,eax
  434a04:	jne    0x434a93
  434a0a:	mov    edx,DWORD PTR [rsp+0x38]
  434a0e:	mov    rcx,rbx
  434a11:	xor    r14d,r14d
  434a14:	xor    ebp,ebp
  434a16:	call   0x437310
  434a1b:	mov    edx,DWORD PTR [rsp+0x3c]
  434a1f:	mov    eax,DWORD PTR [rdi+0x4]
  434a22:	cmp    eax,edx
  434a24:	jle    0x434ab0
  434a2a:	mov    r8d,eax
  434a2d:	mov    DWORD PTR [rsp+0x3c],eax
  434a31:	sub    r8d,edx
  434a34:	cmp    esi,r8d
  434a37:	jge    0x434b70
  434a3d:	mov    rdi,QWORD PTR [rsp+0xc0]
  434a45:	mov    DWORD PTR [rbx+0x14],0x0
  434a4c:	mov    edx,eax
  434a4e:	xor    ebp,ebp
  434a50:	mov    DWORD PTR [rdi],0x50
  434a56:	mov    DWORD PTR [r12],edx
  434a5a:	mov    r8,rbx
  434a5d:	mov    edx,esi
  434a5f:	mov    rcx,r13
  434a62:	mov    r15d,0x1
  434a68:	call   0x4385f0
  434a6d:	mov    rax,QWORD PTR [rsp+0xc0]
  434a75:	or     DWORD PTR [rax],ebp
  434a77:	mov    rcx,rbx
  434a7a:	call   0x437ad0
  434a7f:	mov    eax,r15d
  434a82:	add    rsp,0x48
  434a86:	pop    rbx
  434a87:	pop    rsi
  434a88:	pop    rdi
  434a89:	pop    rbp
  434a8a:	pop    r12
  434a8c:	pop    r13
  434a8e:	pop    r14
  434a90:	pop    r15
  434a92:	ret    
  434a93:	mov    edx,DWORD PTR [rsp+0x38]
  434a97:	mov    rcx,rbx
  434a9a:	mov    ebp,0x10
  434a9f:	call   0x437310
  434aa4:	jmp    0x434a1b
  434aa9:	nop    DWORD PTR [rax+0x0]
  434ab0:	mov    eax,DWORD PTR [rdi+0x8]
  434ab3:	cmp    eax,edx
  434ab5:	jge    0x434a56
  434ab7:	add    eax,0x1
  434aba:	xor    ebp,ebp
  434abc:	mov    DWORD PTR [rsp+0x3c],eax
  434ac0:	mov    rax,QWORD PTR [rsp+0xc0]
  434ac8:	mov    DWORD PTR [rax],0xa3
  434ace:	call   0x438988
  434ad3:	mov    DWORD PTR [rax],0x22
  434ad9:	mov    DWORD PTR [rbx+0x14],0x0
  434ae0:	mov    edx,DWORD PTR [rsp+0x3c]
  434ae4:	jmp    0x434a56
  434ae9:	nop    DWORD PTR [rax+0x0]
  434af0:	mov    r9d,DWORD PTR [rsp+0xb0]
  434af8:	xor    r15d,r15d
  434afb:	test   r9d,r9d
  434afe:	je     0x434a77
  434b04:	test   r10d,r10d
  434b07:	jne    0x434c50
  434b0d:	xor    r14d,r14d
  434b10:	xor    ebp,ebp
  434b12:	jmp    0x434a1f
  434b17:	nop    WORD PTR [rax+rax*1+0x0]
  434b20:	mov    r8d,DWORD PTR [rsp+0xb0]
  434b28:	xor    r15d,r15d
  434b2b:	test   r8d,r8d
  434b2e:	je     0x434a77
  434b34:	cmp    DWORD PTR [rdi+0xc],0x1
  434b38:	jne    0x434a77
  434b3e:	mov    edx,r10d
  434b41:	mov    rcx,rbx
  434b44:	call   0x438660
  434b49:	test   eax,eax
  434b4b:	mov    r14d,eax
  434b4e:	je     0x434a0a
  434b54:	mov    edx,DWORD PTR [rsp+0x38]
  434b58:	mov    rcx,rbx
  434b5b:	mov    ebp,0x10
  434b60:	call   0x437310
  434b65:	mov    edx,DWORD PTR [rsp+0x3c]
  434b69:	jmp    0x434a1f
  434b6e:	xchg   ax,ax
  434b70:	mov    edx,DWORD PTR [rdi+0x10]
  434b73:	test   edx,edx
  434b75:	jne    0x434a3d
  434b7b:	lea    edi,[r8-0x1]
  434b7f:	test   r14d,r14d
  434b82:	sete   al
  434b85:	test   edi,edi
  434b87:	jle    0x434c2c
  434b8d:	test   al,al
  434b8f:	jne    0x434c10
  434b91:	mov    ecx,edi
  434b93:	sar    edi,0x5
  434b96:	mov    eax,0x1
  434b9b:	movsxd rdi,edi
  434b9e:	shl    eax,cl
  434ba0:	mov    edx,r8d
  434ba3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  434ba7:	mov    rcx,rbx
  434baa:	mov    edi,eax
  434bac:	call   0x437310
  434bb1:	mov    rax,QWORD PTR [rsp+0xc0]
  434bb9:	test   edi,edi
  434bbb:	mov    DWORD PTR [rax],0x2
  434bc1:	jne    0x434c80
  434bc7:	test   r14d,r14d
  434bca:	mov    edx,DWORD PTR [rsp+0x3c]
  434bce:	je     0x434a56
  434bd4:	mov    ebp,0x50
  434bd9:	jmp    0x434a56
  434bde:	xchg   ax,ax
  434be0:	mov    eax,0x20
  434be5:	sub    eax,edx
  434be7:	mov    edx,eax
  434be9:	jmp    0x4349b0
  434bee:	xchg   ax,ax
  434bf0:	mov    edx,eax
  434bf2:	sar    edx,0x5
  434bf5:	movsxd rdx,edx
  434bf8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  434bfc:	bt     edx,eax
  434bff:	jb     0x434980
  434c05:	jmp    0x434b3e
  434c0a:	nop    WORD PTR [rax+rax*1+0x0]
  434c10:	mov    edx,edi
  434c12:	mov    rcx,rbx
  434c15:	mov    DWORD PTR [rsp+0x2c],r8d
  434c1a:	call   0x438660
  434c1f:	mov    r8d,DWORD PTR [rsp+0x2c]
  434c24:	test   eax,eax
  434c26:	mov    r14d,eax
  434c29:	sete   al
  434c2c:	test   al,al
  434c2e:	je     0x434b91
  434c34:	mov    eax,DWORD PTR [rsp+0xb0]
  434c3b:	xor    r15d,r15d
  434c3e:	test   eax,eax
  434c40:	je     0x434a77
  434c46:	jmp    0x434b91
  434c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  434c50:	mov    edx,r10d
  434c53:	mov    rcx,rbx
  434c56:	neg    edx
  434c58:	call   0x437ed0
  434c5d:	mov    edx,DWORD PTR [rsp+0x3c]
  434c61:	mov    rbx,rax
  434c64:	jmp    0x434b0d
  434c69:	nop    DWORD PTR [rax+0x0]
  434c70:	mov    edx,DWORD PTR [rsp+0x3c]
  434c74:	mov    ebp,0x20
  434c79:	jmp    0x434a1f
  434c7e:	xchg   ax,ax
  434c80:	mov    rcx,rbx
  434c83:	mov    ebp,0x60
  434c88:	call   0x434830
  434c8d:	mov    edx,DWORD PTR [rsp+0x3c]
  434c91:	mov    rbx,rax
  434c94:	jmp    0x434a56
  434c99:	nop    DWORD PTR [rax+0x0]
  434ca0:	movsxd rdx,DWORD PTR [rcx+0x14]
  434ca4:	lea    rax,[rcx+0x18]
  434ca8:	lea    rcx,[rax+rdx*4]
  434cac:	jmp    0x434cc0
  434cae:	xchg   ax,ax
  434cb0:	add    rax,0x4
  434cb4:	mov    DWORD PTR [rax-0x4],0xffffffff
  434cbb:	cmp    rcx,rax
  434cbe:	jbe    0x434cd0
  434cc0:	mov    edx,DWORD PTR [rax]
  434cc2:	test   edx,edx
  434cc4:	je     0x434cb0
  434cc6:	sub    edx,0x1
  434cc9:	mov    DWORD PTR [rax],edx
  434ccb:	ret    
  434ccc:	nop    DWORD PTR [rax+0x0]
  434cd0:	repz ret 
  434cd2:	nop    DWORD PTR [rax+0x0]
  434cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434ce0:	push   rbx
  434ce1:	sub    rsp,0x30
  434ce5:	lea    ebx,[rdx+0x1f]
  434ce8:	mov    rax,rcx
  434ceb:	sar    ebx,0x5
  434cee:	cmp    ebx,DWORD PTR [rcx+0x8]
  434cf1:	jg     0x434d70
  434cf3:	mov    r9d,edx
  434cf6:	sar    r9d,0x5
  434cfa:	and    edx,0x1f
  434cfd:	je     0x434d50
  434cff:	add    r9d,0x1
  434d03:	lea    r8,[rax+0x18]
  434d07:	mov    DWORD PTR [rax+0x14],r9d
  434d0b:	movsxd r9,r9d
  434d0e:	lea    r9,[r8+r9*4]
  434d12:	cmp    r8,r9
  434d15:	jae    0x434d35
  434d17:	nop    WORD PTR [rax+rax*1+0x0]
  434d20:	add    r8,0x4
  434d24:	mov    DWORD PTR [r8-0x4],0xffffffff
  434d2c:	cmp    r8,r9
  434d2f:	jb     0x434d20
  434d31:	test   edx,edx
  434d33:	je     0x434d40
  434d35:	mov    ecx,0x20
  434d3a:	sub    ecx,edx
  434d3c:	shr    DWORD PTR [r8-0x4],cl
  434d40:	add    rsp,0x30
  434d44:	pop    rbx
  434d45:	ret    
  434d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434d50:	lea    r8,[rax+0x18]
  434d54:	mov    DWORD PTR [rax+0x14],r9d
  434d58:	movsxd r9,r9d
  434d5b:	lea    r9,[r8+r9*4]
  434d5f:	cmp    r8,r9
  434d62:	jb     0x434d20
  434d64:	jmp    0x434d40
  434d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434d70:	mov    DWORD PTR [rsp+0x2c],edx
  434d74:	call   0x437ad0
  434d79:	mov    ecx,ebx
  434d7b:	call   0x4379c0
  434d80:	mov    edx,DWORD PTR [rsp+0x2c]
  434d84:	jmp    0x434cf3
  434d89:	nop    DWORD PTR [rax+0x0]
  434d90:	push   r15
  434d92:	push   r14
  434d94:	push   r13
  434d96:	push   r12
  434d98:	push   rbp
  434d99:	push   rdi
  434d9a:	push   rsi
  434d9b:	push   rbx
  434d9c:	sub    rsp,0x138
  434da3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  434dab:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  434db3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  434dbc:	movaps XMMWORD PTR [rsp+0x100],xmm9
  434dc5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  434dce:	movaps XMMWORD PTR [rsp+0x120],xmm11
  434dd7:	mov    rdi,rcx
  434dda:	mov    QWORD PTR [rsp+0x190],r8
  434de2:	mov    QWORD PTR [rsp+0x188],rdx
  434dea:	mov    QWORD PTR [rsp+0x198],r9
  434df2:	call   0x438808
  434df7:	mov    rbp,QWORD PTR [rax]
  434dfa:	mov    rcx,rbp
  434dfd:	call   0x438788
  434e02:	mov    r14,rax
  434e05:	mov    rax,QWORD PTR [rsp+0x190]
  434e0d:	mov    DWORD PTR [rsp+0xa4],0x0
  434e18:	mov    QWORD PTR [rsp+0xb0],0x0
  434e24:	mov    QWORD PTR [rsp+0xc8],0x0
  434e30:	lea    rcx,[rip+0x46795]        # 0x47b5cc
  434e37:	mov    QWORD PTR [rsp+0xc0],rdi
  434e3f:	mov    eax,DWORD PTR [rax]
  434e41:	mov    DWORD PTR [rsp+0x40],eax
  434e45:	mov    rax,rdi
  434e48:	movzx  r8d,BYTE PTR [rax]
  434e4c:	cmp    r8b,0x2d
  434e50:	ja     0x435000
  434e56:	movzx  edx,r8b
  434e5a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  434e5e:	add    rdx,rcx
  434e61:	jmp    rdx
  434e63:	mov    DWORD PTR [rsp+0xa4],0x6
  434e6e:	mov    QWORD PTR [rsp+0xc0],rdi
  434e76:	xor    r8d,r8d
  434e79:	mov    DWORD PTR [rsp+0x58],0x0
  434e81:	cmp    QWORD PTR [rsp+0x188],0x0
  434e8a:	je     0x434e9f
  434e8c:	mov    rax,QWORD PTR [rsp+0xc0]
  434e94:	mov    rsi,QWORD PTR [rsp+0x188]
  434e9c:	mov    QWORD PTR [rsi],rax
  434e9f:	mov    eax,DWORD PTR [rsp+0x58]
  434ea3:	test   eax,eax
  434ea5:	jne    0x434f20
  434ea7:	test   r8,r8
  434eaa:	je     0x434eca
  434eac:	mov    rcx,QWORD PTR [rsp+0x1a0]
  434eb4:	mov    edx,DWORD PTR [rsp+0x40]
  434eb8:	call   0x4385f0
  434ebd:	mov    rcx,QWORD PTR [rsp+0xc8]
  434ec5:	call   0x437ad0
  434eca:	mov    eax,DWORD PTR [rsp+0xa4]
  434ed1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  434ed9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  434ee1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  434eea:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  434ef3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  434efc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  434f05:	add    rsp,0x138
  434f0c:	pop    rbx
  434f0d:	pop    rsi
  434f0e:	pop    rdi
  434f0f:	pop    rbp
  434f10:	pop    r12
  434f12:	pop    r13
  434f14:	pop    r14
  434f16:	pop    r15
  434f18:	ret    
  434f19:	nop    DWORD PTR [rax+0x0]
  434f20:	or     DWORD PTR [rsp+0xa4],0x8
  434f28:	jmp    0x434ea7
  434f2d:	nop    DWORD PTR [rax]
  434f30:	mov    rdx,rax
  434f33:	mov    DWORD PTR [rsp+0x58],0x0
  434f3b:	add    rax,0x1
  434f3f:	mov    QWORD PTR [rsp+0xc0],rax
  434f47:	movzx  r8d,BYTE PTR [rdx+0x1]
  434f4c:	test   r8b,r8b
  434f4f:	je     0x434e63
  434f55:	xor    r12d,r12d
  434f58:	cmp    r8b,0x30
  434f5c:	mov    r15,rax
  434f5f:	je     0x435018
  434f65:	mov    rax,QWORD PTR [rsp+0x190]
  434f6d:	mov    eax,DWORD PTR [rax+0x10]
  434f70:	mov    DWORD PTR [rsp+0x84],eax
  434f77:	movsx  eax,r8b
  434f7b:	lea    edx,[rax-0x30]
  434f7e:	cmp    edx,0x9
  434f81:	ja     0x435073
  434f87:	lea    rcx,[r15+0x1]
  434f8b:	xor    edx,edx
  434f8d:	xor    esi,esi
  434f8f:	xor    ebx,ebx
  434f91:	jmp    0x434fc5
  434f93:	lea    eax,[rsi+rsi*4]
  434f96:	movsx  r8d,r8b
  434f9a:	lea    esi,[r8+rax*2-0x30]
  434f9f:	mov    QWORD PTR [rsp+0xc0],rcx
  434fa7:	movsx  eax,BYTE PTR [rcx]
  434faa:	add    ebx,0x1
  434fad:	mov    r9,rcx
  434fb0:	lea    rcx,[rcx+0x1]
  434fb4:	lea    r10d,[rax-0x30]
  434fb8:	mov    r8d,eax
  434fbb:	cmp    r10d,0x9
  434fbf:	ja     0x435080
  434fc5:	cmp    ebx,0x8
  434fc8:	jle    0x434f93
  434fca:	cmp    ebx,0xf
  434fcd:	jg     0x434f9f
  434fcf:	lea    eax,[rdx+rdx*4]
  434fd2:	movsx  r8d,r8b
  434fd6:	lea    edx,[r8+rax*2-0x30]
  434fdb:	jmp    0x434f9f
  434fdd:	nop    DWORD PTR [rax]
  434fe0:	add    rax,0x1
  434fe4:	mov    QWORD PTR [rsp+0xc0],rax
  434fec:	movzx  r8d,BYTE PTR [rax]
  434ff0:	cmp    r8b,0x2d
  434ff4:	jbe    0x434e56
  434ffa:	nop    WORD PTR [rax+rax*1+0x0]
  435000:	xor    r12d,r12d
  435003:	cmp    r8b,0x30
  435007:	mov    DWORD PTR [rsp+0x58],0x0
  43500f:	mov    r15,rax
  435012:	jne    0x434f65
  435018:	movzx  edx,BYTE PTR [rax+0x1]
  43501c:	cmp    dl,0x58
  43501f:	je     0x4361df
  435025:	add    rax,0x1
  435029:	cmp    dl,0x78
  43502c:	je     0x4361df
  435032:	mov    r15,rax
  435035:	mov    QWORD PTR [rsp+0xc0],rax
  43503d:	add    rax,0x1
  435041:	movzx  edx,BYTE PTR [rax-0x1]
  435045:	cmp    dl,0x30
  435048:	je     0x435032
  43504a:	xor    r8d,r8d
  43504d:	test   dl,dl
  43504f:	je     0x434e81
  435055:	mov    r8d,edx
  435058:	mov    r12d,0x1
  43505e:	jmp    0x434f65
  435063:	mov    rdx,rax
  435066:	mov    DWORD PTR [rsp+0x58],0x1
  43506e:	jmp    0x434f3b
  435073:	mov    r9,r15
  435076:	xor    edx,edx
  435078:	xor    esi,esi
  43507a:	xor    ebx,ebx
  43507c:	nop    DWORD PTR [rax+0x0]
  435080:	movsx  ecx,BYTE PTR [rbp+0x0]
  435084:	cmp    ecx,eax
  435086:	je     0x435484
  43508c:	mov    ebp,ebx
  43508e:	xor    ecx,ecx
  435090:	xor    r13d,r13d
  435093:	xor    r11d,r11d
  435096:	mov    r8d,eax
  435099:	and    r8d,0xffffffdf
  43509d:	cmp    r8d,0x45
  4350a1:	je     0x4351a0
  4350a7:	xor    r8d,r8d
  4350aa:	test   ebp,ebp
  4350ac:	jne    0x435315
  4350b2:	or     ecx,r12d
  4350b5:	jne    0x435308
  4350bb:	test   r11d,r11d
  4350be:	jne    0x4352d3
  4350c4:	cmp    eax,0x4e
  4350c7:	je     0x4350e1
  4350c9:	jle    0x4352ca
  4350cf:	cmp    eax,0x69
  4350d2:	je     0x43646a
  4350d8:	cmp    eax,0x6e
  4350db:	jne    0x4352d3
  4350e1:	lea    rbx,[rsp+0xc0]
  4350e9:	lea    rdx,[rip+0x464d9]        # 0x47b5c9
  4350f0:	mov    rcx,rbx
  4350f3:	call   0x4385a0
  4350f8:	test   eax,eax
  4350fa:	je     0x4352d3
  435100:	mov    rax,QWORD PTR [rsp+0x190]
  435108:	mov    rsi,QWORD PTR [rsp+0x198]
  435110:	xor    ebp,ebp
  435112:	mov    rdx,QWORD PTR [rsp+0xc0]
  43511a:	mov    DWORD PTR [rsp+0xa4],0x4
  435125:	mov    eax,DWORD PTR [rax+0x8]
  435128:	mov    DWORD PTR [rsp+0x44],eax
  43512c:	add    eax,0x1
  43512f:	mov    DWORD PTR [rsi],eax
  435131:	cmp    BYTE PTR [rdx],0x28
  435134:	je     0x436846
  43513a:	nop    WORD PTR [rax+rax*1+0x0]
  435140:	mov    rsi,QWORD PTR [rsp+0x198]
  435148:	mov    DWORD PTR [rsi],eax
  43514a:	mov    r8,QWORD PTR [rsp+0xc8]
  435152:	test   ebp,ebp
  435154:	je     0x434e81
  43515a:	mov    r9d,DWORD PTR [rsp+0x84]
  435162:	test   r9d,r9d
  435165:	jne    0x435894
  43516b:	mov    eax,DWORD PTR [rsp+0xa4]
  435172:	mov    ecx,DWORD PTR [r8+0x14]
  435176:	xor    edx,edx
  435178:	and    eax,0xfffffff8
  43517b:	test   ecx,ecx
  43517d:	setg   dl
  435180:	add    edx,edx
  435182:	or     eax,edx
  435184:	test   al,0x30
  435186:	jne    0x4352f3
  43518c:	mov    DWORD PTR [rsp+0xa4],eax
  435193:	jmp    0x434e81
  435198:	nop    DWORD PTR [rax+rax*1+0x0]
  4351a0:	mov    eax,ebp
  4351a2:	or     eax,ecx
  4351a4:	or     eax,r12d
  4351a7:	je     0x4352d3
  4351ad:	mov    rdi,QWORD PTR [rsp+0xc0]
  4351b5:	lea    rax,[rdi+0x1]
  4351b9:	mov    QWORD PTR [rsp+0xc0],rax
  4351c1:	movsx  eax,BYTE PTR [rdi+0x1]
  4351c5:	cmp    al,0x2b
  4351c7:	je     0x436388
  4351cd:	cmp    al,0x2d
  4351cf:	je     0x435791
  4351d5:	mov    DWORD PTR [rsp+0x44],0x0
  4351dd:	lea    r8d,[rax-0x30]
  4351e1:	cmp    r8d,0x9
  4351e5:	ja     0x4358c0
  4351eb:	cmp    eax,0x30
  4351ee:	jne    0x435215
  4351f0:	mov    rax,QWORD PTR [rsp+0xc0]
  4351f8:	lea    r8,[rax+0x1]
  4351fc:	nop    DWORD PTR [rax+0x0]
  435200:	mov    QWORD PTR [rsp+0xc0],r8
  435208:	movsx  eax,BYTE PTR [r8]
  43520c:	add    r8,0x1
  435210:	cmp    eax,0x30
  435213:	je     0x435200
  435215:	lea    r9d,[rax-0x31]
  435219:	xor    r8d,r8d
  43521c:	cmp    r9d,0x8
  435220:	ja     0x4350aa
  435226:	lea    r9d,[rax-0x30]
  43522a:	mov    rax,QWORD PTR [rsp+0xc0]
  435232:	lea    r10,[rax+0x1]
  435236:	mov    QWORD PTR [rsp+0x50],rax
  43523b:	mov    QWORD PTR [rsp+0xc0],r10
  435243:	mov    QWORD PTR [rsp+0x48],r10
  435248:	mov    r10,rax
  43524b:	movsx  eax,BYTE PTR [rax+0x1]
  43524f:	lea    r8d,[rax-0x30]
  435253:	cmp    r8d,0x9
  435257:	ja     0x435293
  435259:	lea    r8,[r10+0x2]
  43525d:	mov    DWORD PTR [rsp+0x5c],r11d
  435262:	lea    r9d,[r9+r9*4]
  435266:	mov    QWORD PTR [rsp+0xc0],r8
  43526e:	mov    r11,r8
  435271:	add    r8,0x1
  435275:	lea    r9d,[rax+r9*2-0x30]
  43527a:	movsx  eax,BYTE PTR [r8-0x1]
  43527f:	lea    r10d,[rax-0x30]
  435283:	cmp    r10d,0x9
  435287:	jbe    0x435262
  435289:	mov    QWORD PTR [rsp+0x48],r11
  43528e:	mov    r11d,DWORD PTR [rsp+0x5c]
  435293:	mov    r8,QWORD PTR [rsp+0x48]
  435298:	sub    r8,QWORD PTR [rsp+0x50]
  43529d:	cmp    r8,0x8
  4352a1:	jg     0x43645f
  4352a7:	cmp    r9d,0x4e1f
  4352ae:	jg     0x43645f
  4352b4:	mov    r10d,DWORD PTR [rsp+0x44]
  4352b9:	mov    r8d,r10d
  4352bc:	neg    r8d
  4352bf:	xor    r8d,r9d
  4352c2:	add    r8d,r10d
  4352c5:	jmp    0x4350aa
  4352ca:	cmp    eax,0x49
  4352cd:	je     0x43646a
  4352d3:	mov    DWORD PTR [rsp+0xa4],0x6
  4352de:	mov    QWORD PTR [rsp+0xc0],rdi
  4352e6:	mov    r8,QWORD PTR [rsp+0xc8]
  4352ee:	jmp    0x434e81
  4352f3:	or     eax,0x40
  4352f6:	mov    DWORD PTR [rsp+0xa4],eax
  4352fd:	call   0x438988
  435302:	mov    DWORD PTR [rax],0x22
  435308:	mov    r8,QWORD PTR [rsp+0xc8]
  435310:	jmp    0x434e81
  435315:	mov    rax,QWORD PTR [rsp+0x190]
  43531d:	mov    ecx,DWORD PTR [rsp+0x58]
  435321:	sub    r8d,r13d
  435324:	mov    DWORD PTR [rsp+0xa4],0x1
  43532f:	mov    DWORD PTR [rsp+0x68],r8d
  435334:	mov    eax,DWORD PTR [rax+0xc]
  435337:	mov    DWORD PTR [rsp+0x44],eax
  43533b:	and    eax,0x3
  43533e:	mov    edi,eax
  435340:	sub    edi,ecx
  435342:	cmp    eax,0x2
  435345:	mov    DWORD PTR [rsp+0x6c],edi
  435349:	je     0x435363
  43534b:	lea    edi,[rcx+0x1]
  43534e:	cmp    eax,0x3
  435351:	mov    DWORD PTR [rsp+0x6c],edi
  435355:	je     0x435363
  435357:	test   eax,eax
  435359:	sete   al
  43535c:	movzx  eax,al
  43535f:	mov    DWORD PTR [rsp+0x6c],eax
  435363:	pxor   xmm0,xmm0
  435367:	mov    eax,esi
  435369:	test   ebx,ebx
  43536b:	cmove  ebx,ebp
  43536e:	mov    edi,0x10
  435373:	cmp    ebp,0x10
  435376:	cmovle edi,ebp
  435379:	cvtsi2sd xmm0,rax
  43537e:	cmp    edi,0x9
  435381:	movsd  QWORD PTR [rsp+0xb0],xmm0
  43538a:	jle    0x4353b3
  43538c:	pxor   xmm1,xmm1
  435390:	lea    eax,[rdi-0x9]
  435393:	mov    rcx,QWORD PTR [rip+0x466d6]        # 0x47ba70
  43539a:	cdqe   
  43539c:	cvtsi2sd xmm1,rdx
  4353a1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4353a6:	addsd  xmm0,xmm1
  4353aa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4353b3:	cmp    ebp,0xf
  4353b6:	jg     0x435525
  4353bc:	cmp    DWORD PTR [rsp+0x40],0x35
  4353c1:	jg     0x435525
  4353c7:	cmp    DWORD PTR [rsp+0x68],0x0
  4353cc:	je     0x4363b0
  4353d2:	jle    0x435839
  4353d8:	cmp    DWORD PTR [rsp+0x68],0x16
  4353dd:	jg     0x4363da
  4353e3:	movsxd rcx,DWORD PTR [rsp+0x68]
  4353e8:	mov    edx,DWORD PTR [rsp+0xb0]
  4353ef:	lea    rax,[rip+0x462ca]        # 0x47b6c0
  4353f6:	test   edx,edx
  4353f8:	mov    r8d,DWORD PTR [rax+rcx*4]
  4353fc:	je     0x4364ce
  435402:	tzcnt  edx,edx
  435406:	mov    eax,0x35
  43540b:	sub    eax,edx
  43540d:	mov    rdx,QWORD PTR [rip+0x4665c]        # 0x47ba70
  435414:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  43541d:	add    eax,r8d
  435420:	cmp    eax,0x35
  435423:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  435428:	lea    rdx,[rsp+0xa4]
  435430:	setle  al
  435433:	movzx  eax,al
  435436:	lea    rcx,[rsp+0xb0]
  43543e:	mov    QWORD PTR [rsp+0x30],rdx
  435443:	mov    edx,DWORD PTR [rsp+0x6c]
  435447:	mov    DWORD PTR [rsp+0x20],eax
  43544b:	mov    DWORD PTR [rsp+0x28],edx
  43544f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  435458:	mov    r9,QWORD PTR [rsp+0x1a0]
  435460:	mov    r8,QWORD PTR [rsp+0x198]
  435468:	mov    rdx,QWORD PTR [rsp+0x190]
  435470:	call   0x4348e0
  435475:	test   eax,eax
  435477:	jne    0x435308
  43547d:	xor    eax,eax
  43547f:	jmp    0x435529
  435484:	movzx  r8d,BYTE PTR [rbp+0x1]
  435489:	test   r8b,r8b
  43548c:	je     0x43670d
  435492:	cmp    r8b,BYTE PTR [r9+0x1]
  435496:	jne    0x43508c
  43549c:	mov    eax,0x2
  4354a1:	jmp    0x4354b2
  4354a3:	add    rax,0x1
  4354a7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  4354ac:	jne    0x4356b0
  4354b2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  4354b8:	test   r8b,r8b
  4354bb:	jne    0x4354a3
  4354bd:	lea    r8,[r9+rax*1]
  4354c1:	test   ebx,ebx
  4354c3:	mov    QWORD PTR [rsp+0xc0],r8
  4354cb:	movsx  eax,BYTE PTR [r8]
  4354cf:	je     0x4357ae
  4354d5:	lea    r8d,[rax-0x30]
  4354d9:	xor    ecx,ecx
  4354db:	xor    r13d,r13d
  4354de:	mov    ebp,ebx
  4354e0:	cmp    r8d,0x9
  4354e4:	ja     0x43551a
  4354e6:	test   r8d,r8d
  4354e9:	lea    eax,[rcx+0x1]
  4354ec:	mov    r9d,r8d
  4354ef:	jne    0x43668d
  4354f5:	mov    r8,QWORD PTR [rsp+0xc0]
  4354fd:	mov    ecx,eax
  4354ff:	lea    rax,[r8+0x1]
  435503:	mov    QWORD PTR [rsp+0xc0],rax
  43550b:	movsx  eax,BYTE PTR [r8+0x1]
  435510:	lea    r8d,[rax-0x30]
  435514:	cmp    r8d,0x9
  435518:	jbe    0x4354e6
  43551a:	mov    r11d,0x1
  435520:	jmp    0x435096
  435525:	mov    eax,DWORD PTR [rsp+0x68]
  435529:	mov    edx,ebp
  43552b:	sub    edx,edi
  43552d:	add    edx,eax
  43552f:	cmp    edx,0x0
  435532:	jle    0x43626a
  435538:	mov    eax,edx
  43553a:	and    eax,0xf
  43553d:	je     0x43555f
  43553f:	mov    rcx,QWORD PTR [rip+0x4652a]        # 0x47ba70
  435546:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  43554f:	cdqe   
  435551:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  435556:	movsd  QWORD PTR [rsp+0xb0],xmm0
  43555f:	and    edx,0xfffffff0
  435562:	jne    0x4356c1
  435568:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  435571:	xor    edi,edi
  435573:	lea    rdx,[rsp+0xac]
  43557b:	lea    r8,[rsp+0xa8]
  435583:	call   0x4382a0
  435588:	mov    edx,DWORD PTR [rsp+0xa8]
  43558f:	mov    r13d,DWORD PTR [rsp+0x40]
  435594:	add    edi,DWORD PTR [rsp+0xac]
  43559b:	mov    QWORD PTR [rsp+0xc8],rax
  4355a3:	mov    r12d,edx
  4355a6:	sub    r12d,r13d
  4355a9:	test   r12d,r12d
  4355ac:	mov    DWORD PTR [rsp+0xac],edi
  4355b3:	jle    0x4355dc
  4355b5:	mov    edx,r12d
  4355b8:	mov    rcx,rax
  4355bb:	call   0x437310
  4355c0:	mov    edi,DWORD PTR [rsp+0xac]
  4355c7:	mov    DWORD PTR [rsp+0xa8],r13d
  4355cf:	mov    edx,r13d
  4355d2:	add    edi,r12d
  4355d5:	mov    DWORD PTR [rsp+0xac],edi
  4355dc:	lea    eax,[rdi+rdx*1]
  4355df:	sub    eax,DWORD PTR [rsp+0x40]
  4355e3:	mov    ecx,eax
  4355e5:	mov    DWORD PTR [rsp+0x8c],eax
  4355ec:	mov    rax,QWORD PTR [rsp+0x190]
  4355f4:	mov    eax,DWORD PTR [rax+0x8]
  4355f7:	mov    DWORD PTR [rsp+0x44],eax
  4355fb:	add    eax,0x1
  4355fe:	cmp    ecx,eax
  435600:	jg     0x4361a5
  435606:	mov    rax,QWORD PTR [rsp+0x190]
  43560e:	mov    eax,DWORD PTR [rax+0x4]
  435611:	cmp    ecx,eax
  435613:	mov    DWORD PTR [rsp+0x50],eax
  435617:	jge    0x4363a3
  43561d:	sub    edi,eax
  43561f:	cmp    edi,0x0
  435622:	jle    0x43580c
  435628:	mov    rcx,QWORD PTR [rsp+0xc8]
  435630:	mov    edx,edi
  435632:	call   0x437ed0
  435637:	add    DWORD PTR [rsp+0xa8],edi
  43563e:	mov    QWORD PTR [rsp+0xc8],rax
  435646:	mov    eax,DWORD PTR [rsp+0x50]
  43564a:	mov    DWORD PTR [rsp+0xac],eax
  435651:	mov    eax,DWORD PTR [rsp+0x84]
  435658:	test   eax,eax
  43565a:	je     0x4358d0
  435660:	mov    eax,DWORD PTR [rsp+0x8c]
  435667:	add    eax,0x1
  43566a:	cmp    DWORD PTR [rsp+0x50],eax
  43566e:	jle    0x4358d0
  435674:	mov    r8,QWORD PTR [rsp+0xc8]
  43567c:	mov    rax,QWORD PTR [rsp+0x198]
  435684:	mov    esi,DWORD PTR [rsp+0x50]
  435688:	mov    DWORD PTR [rsp+0xa4],0x50
  435693:	mov    DWORD PTR [r8+0x14],0x0
  43569b:	mov    DWORD PTR [r8+0x18],0x0
  4356a3:	mov    DWORD PTR [rax],esi
  4356a5:	jmp    0x43515a
  4356aa:	nop    WORD PTR [rax+rax*1+0x0]
  4356b0:	mov    eax,ecx
  4356b2:	mov    ebp,ebx
  4356b4:	xor    ecx,ecx
  4356b6:	xor    r13d,r13d
  4356b9:	xor    r11d,r11d
  4356bc:	jmp    0x435096
  4356c1:	sar    edx,0x4
  4356c4:	cmp    edx,0xf
  4356c7:	jle    0x436793
  4356cd:	mov    rax,QWORD PTR [rip+0x462bc]        # 0x47b990
  4356d4:	mov    ecx,edx
  4356d6:	xor    r8d,r8d
  4356d9:	movsd  xmm1,QWORD PTR [rax+0x20]
  4356de:	xchg   ax,ax
  4356e0:	mov    eax,DWORD PTR [rsp+0xb4]
  4356e7:	sub    ecx,0x10
  4356ea:	mov    r9d,eax
  4356ed:	and    eax,0x800fffff
  4356f2:	or     eax,0x3ff00000
  4356f7:	and    r9d,0x7ff00000
  4356fe:	mov    DWORD PTR [rsp+0xb4],eax
  435705:	shr    r9d,0x14
  435709:	cmp    ecx,0xf
  43570c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  435715:	lea    r8d,[r8+r9*1-0x3ff]
  43571d:	mulsd  xmm0,xmm1
  435721:	movsd  QWORD PTR [rsp+0xb0],xmm0
  43572a:	jg     0x4356e0
  43572c:	and    edx,0xf
  43572f:	mov    eax,DWORD PTR [rsp+0xb4]
  435736:	mov    ecx,eax
  435738:	and    eax,0x800fffff
  43573d:	or     eax,0x3ff00000
  435742:	and    ecx,0x7ff00000
  435748:	shr    ecx,0x14
  43574b:	mov    DWORD PTR [rsp+0xb4],eax
  435752:	test   edx,edx
  435754:	lea    edi,[r8+rcx*1-0x3ff]
  43575c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  435765:	mov    rax,QWORD PTR [rip+0x46224]        # 0x47b990
  43576c:	je     0x435573
  435772:	test   dl,0x1
  435775:	je     0x43577b
  435777:	mulsd  xmm0,QWORD PTR [rax]
  43577b:	add    rax,0x8
  43577f:	sar    edx,1
  435781:	jne    0x435772
  435783:	movsd  QWORD PTR [rsp+0xb0],xmm0
  43578c:	jmp    0x435573
  435791:	mov    DWORD PTR [rsp+0x44],0x1
  435799:	lea    rax,[rdi+0x2]
  43579d:	mov    QWORD PTR [rsp+0xc0],rax
  4357a5:	movsx  eax,BYTE PTR [rdi+0x2]
  4357a9:	jmp    0x4351dd
  4357ae:	cmp    eax,0x30
  4357b1:	jne    0x4367f5
  4357b7:	add    r8,0x1
  4357bb:	xor    ecx,ecx
  4357bd:	nop    DWORD PTR [rax]
  4357c0:	mov    QWORD PTR [rsp+0xc0],r8
  4357c8:	movsx  eax,BYTE PTR [r8]
  4357cc:	add    ecx,0x1
  4357cf:	add    r8,0x1
  4357d3:	cmp    eax,0x30
  4357d6:	je     0x4357c0
  4357d8:	lea    r8d,[rax-0x31]
  4357dc:	cmp    r8d,0x8
  4357e0:	ja     0x436455
  4357e6:	mov    r15,QWORD PTR [rsp+0xc0]
  4357ee:	lea    r9d,[rax-0x30]
  4357f2:	lea    r13d,[rcx+0x1]
  4357f6:	mov    ebp,0x1
  4357fb:	mov    r8,r15
  4357fe:	lea    eax,[rsi+rsi*4]
  435801:	xor    ecx,ecx
  435803:	lea    esi,[r9+rax*2]
  435807:	jmp    0x4354ff
  43580c:	je     0x435646
  435812:	add    edx,edi
  435814:	test   edx,edx
  435816:	mov    DWORD PTR [rsp+0xa8],edx
  43581d:	jle    0x4367b6
  435823:	mov    rcx,QWORD PTR [rsp+0xc8]
  43582b:	neg    edi
  43582d:	mov    edx,edi
  43582f:	call   0x437310
  435834:	jmp    0x435646
  435839:	mov    edx,DWORD PTR [rsp+0x68]
  43583d:	cmp    edx,0xffffffea
  435840:	mov    eax,edx
  435842:	jl     0x435529
  435848:	mov    rdx,QWORD PTR [rip+0x46221]        # 0x47ba70
  43584f:	neg    eax
  435851:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  43585a:	cdqe   
  43585c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  435861:	lea    rax,[rsp+0xa4]
  435869:	movsd  QWORD PTR [rsp+0xb0],xmm0
  435872:	lea    rcx,[rsp+0xb0]
  43587a:	mov    DWORD PTR [rsp+0x20],0x0
  435882:	mov    QWORD PTR [rsp+0x30],rax
  435887:	mov    eax,DWORD PTR [rsp+0x6c]
  43588b:	mov    DWORD PTR [rsp+0x28],eax
  43588f:	jmp    0x435458
  435894:	mov    DWORD PTR [r8+0x14],0x0
  43589c:	mov    DWORD PTR [rsp+0xa4],0x50
  4358a7:	call   0x438988
  4358ac:	mov    r8,QWORD PTR [rsp+0xc8]
  4358b4:	mov    DWORD PTR [rax],0x22
  4358ba:	jmp    0x434e81
  4358bf:	nop
  4358c0:	mov    QWORD PTR [rsp+0xc0],rdi
  4358c8:	xor    r8d,r8d
  4358cb:	jmp    0x4350aa
  4358d0:	mov    eax,DWORD PTR [rsp+0x50]
  4358d4:	mov    DWORD PTR [rsp+0x44],0x1
  4358dc:	mov    DWORD PTR [rsp+0x8c],eax
  4358e3:	mov    r8d,ebp
  4358e6:	mov    edx,ebx
  4358e8:	mov    DWORD PTR [rsp+0x20],r14d
  4358ed:	mov    r9d,esi
  4358f0:	mov    rcx,r15
  4358f3:	call   0x4383e0
  4358f8:	mov    QWORD PTR [rsp+0x70],rax
  4358fd:	add    rax,0x10
  435901:	mov    QWORD PTR [rsp+0x78],rax
  435906:	mov    eax,DWORD PTR [rsp+0x40]
  43590a:	movsd  xmm8,QWORD PTR [rip+0x45e0d]        # 0x47b720
  435913:	movsd  xmm9,QWORD PTR [rip+0x45e14]        # 0x47b730
  43591c:	add    eax,0x1
  43591f:	movapd xmm11,xmm8
  435924:	mov    DWORD PTR [rsp+0x80],eax
  43592b:	mov    eax,DWORD PTR [rsp+0x68]
  43592f:	movsd  xmm10,QWORD PTR [rip+0x45e18]        # 0x47b750
  435938:	mov    edx,eax
  43593a:	neg    edx
  43593c:	test   eax,eax
  43593e:	mov    eax,0x0
  435943:	cmovs  eax,edx
  435946:	xor    ebp,ebp
  435948:	mov    DWORD PTR [rsp+0x5c],eax
  43594c:	jmp    0x435b90
  435951:	mov    rcx,rsi
  435954:	call   0x437ed0
  435959:	mov    rsi,rax
  43595c:	test   r15d,r15d
  43595f:	je     0x43596f
  435961:	mov    rcx,rdi
  435964:	mov    edx,r15d
  435967:	call   0x437d60
  43596c:	mov    rdi,rax
  43596f:	test   r12d,r12d
  435972:	jle    0x435982
  435974:	mov    rcx,rdi
  435977:	mov    edx,r12d
  43597a:	call   0x437ed0
  43597f:	mov    rdi,rax
  435982:	test   r14d,r14d
  435985:	jle    0x435995
  435987:	mov    rcx,r13
  43598a:	mov    edx,r14d
  43598d:	call   0x437ed0
  435992:	mov    r13,rax
  435995:	mov    rdx,rdi
  435998:	mov    rcx,rsi
  43599b:	call   0x438040
  4359a0:	cmp    DWORD PTR [rax+0x14],0x1
  4359a4:	mov    rbx,rax
  4359a7:	jle    0x435d40
  4359ad:	mov    ebp,DWORD PTR [rbx+0x10]
  4359b0:	mov    rdx,r13
  4359b3:	mov    DWORD PTR [rbx+0x10],0x0
  4359ba:	mov    rcx,rbx
  4359bd:	call   0x437ff0
  4359c2:	test   eax,eax
  4359c4:	jg     0x435cd0
  4359ca:	mov    ecx,DWORD PTR [rsp+0x6c]
  4359ce:	test   ecx,ecx
  4359d0:	je     0x435cd0
  4359d6:	mov    eax,ecx
  4359d8:	and    eax,0x1
  4359db:	xor    eax,ebp
  4359dd:	mov    DWORD PTR [rsp+0x60],eax
  4359e1:	je     0x4364eb
  4359e7:	test   ebp,ebp
  4359e9:	je     0x435f41
  4359ef:	movsd  xmm6,QWORD PTR [rip+0x45d29]        # 0x47b720
  4359f7:	mov    DWORD PTR [rsp+0xa4],0x21
  435a02:	xor    r12d,r12d
  435a05:	mov    DWORD PTR [rsp+0x88],0x20
  435a10:	xor    r14d,r14d
  435a13:	movapd xmm7,xmm6
  435a17:	mov    eax,DWORD PTR [rsp+0xa8]
  435a1e:	mov    edx,DWORD PTR [rsp+0xac]
  435a25:	mov    r8d,DWORD PTR [rsp+0x44]
  435a2a:	add    edx,eax
  435a2c:	test   r8d,r8d
  435a2f:	mov    DWORD PTR [rsp+0x48],edx
  435a33:	jne    0x435a3f
  435a35:	cmp    DWORD PTR [rsp+0x40],eax
  435a39:	jg     0x4360f5
  435a3f:	lea    rdx,[rsp+0x9c]
  435a47:	lea    r8,[rsp+0xa0]
  435a4f:	movapd xmm0,xmm6
  435a53:	call   0x4382a0
  435a58:	mov    edx,DWORD PTR [rsp+0x9c]
  435a5f:	mov    r15,rax
  435a62:	test   edx,edx
  435a64:	js     0x436130
  435a6a:	je     0x435a77
  435a6c:	mov    rcx,rax
  435a6f:	call   0x437ed0
  435a74:	mov    r15,rax
  435a77:	mov    rbp,QWORD PTR [rsp+0xc8]
  435a7f:	test   r14d,r14d
  435a82:	mov    rdx,r15
  435a85:	mov    rcx,rbp
  435a88:	je     0x435e70
  435a8e:	call   0x438040
  435a93:	mov    ecx,DWORD PTR [rsp+0x44]
  435a97:	mov    QWORD PTR [rsp+0xc8],rax
  435a9f:	mov    edx,DWORD PTR [rbp+0x14]
  435aa2:	test   ecx,ecx
  435aa4:	jne    0x436010
  435aaa:	sub    edx,0x1
  435aad:	cmp    edx,DWORD PTR [rax+0x14]
  435ab0:	jge    0x435acd
  435ab2:	movsxd rdx,edx
  435ab5:	add    rdx,0x4
  435ab9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  435abe:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  435ac3:	xor    ecx,0x1f
  435ac6:	xor    edx,0x1f
  435ac9:	cmp    ecx,edx
  435acb:	jle    0x435af0
  435acd:	mov    ecx,DWORD PTR [rsp+0x50]
  435ad1:	cmp    DWORD PTR [rsp+0x8c],ecx
  435ad8:	jne    0x435ef0
  435ade:	sub    DWORD PTR [rsp+0xa8],0x1
  435ae6:	mov    DWORD PTR [rsp+0x44],0x1
  435aee:	xchg   ax,ax
  435af0:	mov    rcx,r15
  435af3:	call   0x437ad0
  435af8:	mov    rcx,rbp
  435afb:	call   0x437ad0
  435b00:	mov    r14d,DWORD PTR [rsp+0x60]
  435b05:	test   r14d,r14d
  435b08:	jne    0x435d50
  435b0e:	test   r12d,r12d
  435b11:	je     0x435b58
  435b13:	mov    eax,DWORD PTR [rsp+0xa8]
  435b1a:	add    eax,DWORD PTR [rsp+0xac]
  435b21:	cmp    DWORD PTR [rsp+0x48],eax
  435b25:	jne    0x435b58
  435b27:	mulsd  xmm6,QWORD PTR [rip+0x45c19]        # 0x47b748
  435b2f:	movapd xmm0,xmm7
  435b33:	subsd  xmm0,QWORD PTR [rip+0x45bfd]        # 0x47b738
  435b3b:	movapd xmm1,xmm6
  435b3f:	xorpd  xmm1,xmm10
  435b44:	ucomisd xmm1,xmm0
  435b48:	jbe    0x4360c2
  435b4e:	ucomisd xmm7,xmm6
  435b52:	ja     0x4360e2
  435b58:	mov    r12d,DWORD PTR [rsp+0x44]
  435b5d:	test   r12d,r12d
  435b60:	je     0x435f25
  435b66:	mov    DWORD PTR [rsp+0x44],0x1
  435b6e:	xor    ebp,ebp
  435b70:	mov    rcx,rsi
  435b73:	call   0x437ad0
  435b78:	mov    rcx,rdi
  435b7b:	call   0x437ad0
  435b80:	mov    rcx,r13
  435b83:	call   0x437ad0
  435b88:	mov    rcx,rbx
  435b8b:	call   0x437ad0
  435b90:	mov    rsi,QWORD PTR [rsp+0x70]
  435b95:	mov    r15d,0x0
  435b9b:	mov    ecx,DWORD PTR [rsi+0x8]
  435b9e:	call   0x4379c0
  435ba3:	lea    rcx,[rax+0x10]
  435ba7:	mov    rdi,rax
  435baa:	movsxd rax,DWORD PTR [rsi+0x14]
  435bae:	mov    rdx,QWORD PTR [rsp+0x78]
  435bb3:	lea    r8,[rax*4+0x8]
  435bbb:	call   0x4387f0
  435bc0:	mov    rax,QWORD PTR [rsp+0xc8]
  435bc8:	mov    ecx,DWORD PTR [rax+0x8]
  435bcb:	call   0x4379c0
  435bd0:	mov    rdx,QWORD PTR [rsp+0xc8]
  435bd8:	lea    rcx,[rax+0x10]
  435bdc:	mov    rsi,rax
  435bdf:	movsxd rax,DWORD PTR [rdx+0x14]
  435be3:	add    rdx,0x10
  435be7:	lea    r8,[rax*4+0x8]
  435bef:	call   0x4387f0
  435bf4:	mov    eax,DWORD PTR [rsp+0xa8]
  435bfb:	mov    ecx,0x1
  435c00:	mov    ebx,DWORD PTR [rsp+0xac]
  435c07:	sub    eax,ebp
  435c09:	add    ebx,ebp
  435c0b:	mov    DWORD PTR [rsp+0x48],eax
  435c0f:	call   0x437c00
  435c14:	mov    r13,rax
  435c17:	mov    eax,DWORD PTR [rsp+0x68]
  435c1b:	test   eax,eax
  435c1d:	cmovg  r15d,eax
  435c21:	test   ebx,ebx
  435c23:	js     0x435ee0
  435c29:	mov    eax,DWORD PTR [rsp+0x5c]
  435c2d:	mov    edx,r15d
  435c30:	lea    r14d,[rax+rbx*1]
  435c34:	mov    ecx,DWORD PTR [rsp+0x48]
  435c38:	mov    eax,DWORD PTR [rsp+0x80]
  435c3f:	add    ebx,ecx
  435c41:	sub    ebx,DWORD PTR [rsp+0x40]
  435c45:	sub    eax,ecx
  435c47:	cmp    DWORD PTR [rsp+0x50],ebx
  435c4b:	jle    0x435c53
  435c4d:	sub    ebx,DWORD PTR [rsp+0x50]
  435c51:	add    eax,ebx
  435c53:	lea    ebx,[r14+rax*1]
  435c57:	lea    r12d,[rdx+rax*1]
  435c5b:	cmp    ebx,r12d
  435c5e:	mov    eax,r12d
  435c61:	cmovle eax,ebx
  435c64:	cmp    eax,r14d
  435c67:	cmovg  eax,r14d
  435c6b:	test   eax,eax
  435c6d:	jle    0x435c77
  435c6f:	sub    ebx,eax
  435c71:	sub    r12d,eax
  435c74:	sub    r14d,eax
  435c77:	mov    eax,DWORD PTR [rsp+0x5c]
  435c7b:	test   eax,eax
  435c7d:	je     0x435cac
  435c7f:	mov    rcx,r13
  435c82:	mov    edx,eax
  435c84:	call   0x437d60
  435c89:	mov    rdx,rsi
  435c8c:	mov    rcx,rax
  435c8f:	mov    r13,rax
  435c92:	call   0x437c30
  435c97:	mov    rcx,rsi
  435c9a:	mov    QWORD PTR [rsp+0x60],rax
  435c9f:	call   0x437ad0
  435ca4:	mov    rax,QWORD PTR [rsp+0x60]
  435ca9:	mov    rsi,rax
  435cac:	sub    ebx,ebp
  435cae:	cmp    ebx,0x0
  435cb1:	mov    edx,ebx
  435cb3:	jg     0x435951
  435cb9:	je     0x43595c
  435cbf:	neg    edx
  435cc1:	mov    rcx,rsi
  435cc4:	call   0x437310
  435cc9:	jmp    0x43595c
  435cce:	xchg   ax,ax
  435cd0:	test   eax,eax
  435cd2:	js     0x436502
  435cd8:	je     0x4365ce
  435cde:	mov    rdx,r13
  435ce1:	mov    rcx,rbx
  435ce4:	call   0x4384e0
  435ce9:	ucomisd xmm9,xmm0
  435cee:	jb     0x436020
  435cf4:	test   ebp,ebp
  435cf6:	jne    0x436150
  435cfc:	mov    DWORD PTR [rsp+0x60],0x0
  435d04:	cmp    DWORD PTR [rsp+0x48],0x1
  435d09:	jg     0x435d19
  435d0b:	mov    r9d,DWORD PTR [rsp+0x44]
  435d10:	test   r9d,r9d
  435d13:	jne    0x4366da
  435d19:	movapd xmm6,xmm8
  435d1e:	xor    r12d,r12d
  435d21:	mov    DWORD PTR [rsp+0x88],0x10
  435d2c:	movapd xmm7,xmm8
  435d31:	mov    r14d,0x1
  435d37:	jmp    0x435a17
  435d3c:	nop    DWORD PTR [rax+0x0]
  435d40:	mov    r15d,DWORD PTR [rax+0x18]
  435d44:	test   r15d,r15d
  435d47:	jne    0x4359ad
  435d4d:	nop    DWORD PTR [rax]
  435d50:	mov    ebp,DWORD PTR [rsp+0x44]
  435d54:	test   ebp,ebp
  435d56:	je     0x436248
  435d5c:	mov    eax,DWORD PTR [rsp+0xac]
  435d63:	mov    ebp,0x1
  435d68:	mov    rdx,QWORD PTR [rsp+0x198]
  435d70:	mov    rcx,rsi
  435d73:	mov    DWORD PTR [rdx],eax
  435d75:	call   0x437ad0
  435d7a:	mov    rcx,rdi
  435d7d:	call   0x437ad0
  435d82:	mov    rcx,r13
  435d85:	call   0x437ad0
  435d8a:	mov    rcx,QWORD PTR [rsp+0x70]
  435d8f:	call   0x437ad0
  435d94:	mov    rcx,rbx
  435d97:	call   0x437ad0
  435d9c:	mov    rax,QWORD PTR [rsp+0x190]
  435da4:	mov    esi,DWORD PTR [rsp+0xac]
  435dab:	cmp    DWORD PTR [rax+0x8],esi
  435dae:	jge    0x43514a
  435db4:	mov    rax,QWORD PTR [rsp+0x190]
  435dbc:	mov    eax,DWORD PTR [rax+0xc]
  435dbf:	mov    DWORD PTR [rsp+0x44],eax
  435dc3:	and    eax,0x3
  435dc6:	cmp    eax,0x2
  435dc9:	je     0x4365bb
  435dcf:	cmp    eax,0x3
  435dd2:	je     0x4365a8
  435dd8:	cmp    eax,0x1
  435ddb:	je     0x4361a7
  435de1:	mov    rcx,QWORD PTR [rsp+0xc8]
  435de9:	call   0x437ad0
  435dee:	mov    rax,QWORD PTR [rsp+0x190]
  435df6:	mov    rsi,QWORD PTR [rsp+0x198]
  435dfe:	mov    QWORD PTR [rsp+0xc8],0x0
  435e0a:	mov    DWORD PTR [rsp+0xa4],0x11
  435e15:	mov    eax,DWORD PTR [rax+0x8]
  435e18:	mov    DWORD PTR [rsi],eax
  435e1a:	mov    rax,QWORD PTR [rsp+0x190]
  435e22:	mov    rsi,QWORD PTR [rsp+0x1a0]
  435e2a:	mov    ecx,DWORD PTR [rax]
  435e2c:	lea    eax,[rcx+0x1f]
  435e2f:	sar    eax,0x5
  435e32:	cdqe   
  435e34:	lea    rdx,[rsi+rax*4]
  435e38:	mov    rax,rsi
  435e3b:	cmp    rsi,rdx
  435e3e:	jae    0x435e50
  435e40:	add    rax,0x4
  435e44:	mov    DWORD PTR [rax-0x4],0xffffffff
  435e4b:	cmp    rdx,rax
  435e4e:	ja     0x435e40
  435e50:	and    ecx,0x1f
  435e53:	je     0x435e61
  435e55:	mov    eax,0x20
  435e5a:	sub    eax,ecx
  435e5c:	mov    ecx,eax
  435e5e:	shr    DWORD PTR [rdx-0x4],cl
  435e61:	xor    r8d,r8d
  435e64:	jmp    0x435152
  435e69:	nop    DWORD PTR [rax+0x0]
  435e70:	call   0x4368e0
  435e75:	mov    edx,DWORD PTR [rax+0x14]
  435e78:	mov    QWORD PTR [rsp+0xc8],rax
  435e80:	sub    edx,0x1
  435e83:	cmp    edx,DWORD PTR [rbp+0x14]
  435e86:	jge    0x435ea7
  435e88:	movsxd rdx,edx
  435e8b:	add    rdx,0x4
  435e8f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  435e94:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  435e99:	xor    ecx,0x1f
  435e9c:	xor    edx,0x1f
  435e9f:	cmp    ecx,edx
  435ea1:	jge    0x435af0
  435ea7:	mov    edx,DWORD PTR [rsp+0x44]
  435eab:	test   edx,edx
  435ead:	je     0x436180
  435eb3:	mov    eax,DWORD PTR [rsp+0xa8]
  435eba:	add    eax,0x1
  435ebd:	cmp    DWORD PTR [rsp+0x40],eax
  435ec1:	mov    DWORD PTR [rsp+0xa8],eax
  435ec8:	setne  al
  435ecb:	movzx  eax,al
  435ece:	mov    DWORD PTR [rsp+0x44],eax
  435ed2:	jmp    0x435af0
  435ed7:	nop    WORD PTR [rax+rax*1+0x0]
  435ee0:	mov    edx,r15d
  435ee3:	mov    r14d,DWORD PTR [rsp+0x5c]
  435ee8:	sub    edx,ebx
  435eea:	jmp    0x435c34
  435eef:	nop
  435ef0:	mov    edx,0x1
  435ef5:	mov    rcx,rax
  435ef8:	call   0x437ed0
  435efd:	mov    rcx,r15
  435f00:	mov    QWORD PTR [rsp+0xc8],rax
  435f08:	sub    DWORD PTR [rsp+0xac],0x1
  435f10:	sub    DWORD PTR [rsp+0x8c],0x1
  435f18:	call   0x437ad0
  435f1d:	mov    rcx,rbp
  435f20:	call   0x437ad0
  435f25:	mov    rcx,QWORD PTR [rsp+0xc8]
  435f2d:	call   0x437410
  435f32:	mov    DWORD PTR [rsp+0x44],0x0
  435f3a:	mov    ebp,eax
  435f3c:	jmp    0x435b70
  435f41:	mov    edx,DWORD PTR [rsp+0x50]
  435f45:	cmp    DWORD PTR [rsp+0x8c],edx
  435f4c:	mov    DWORD PTR [rsp+0xa4],0x11
  435f57:	je     0x435d04
  435f5d:	xor    ecx,ecx
  435f5f:	cmp    DWORD PTR [rsp+0x40],0x1f
  435f64:	mov    r9,QWORD PTR [rsp+0xc8]
  435f6c:	mov    eax,DWORD PTR [rsp+0x40]
  435f70:	jle    0x435fac
  435f72:	mov    r14d,DWORD PTR [r9+0x18]
  435f76:	test   r14d,r14d
  435f79:	jne    0x435d04
  435f7f:	lea    rdx,[r9+0x1c]
  435f83:	mov    eax,DWORD PTR [rsp+0x40]
  435f87:	xor    ecx,ecx
  435f89:	jmp    0x435fa1
  435f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  435f90:	add    rdx,0x4
  435f94:	mov    r12d,DWORD PTR [rdx-0x4]
  435f98:	test   r12d,r12d
  435f9b:	jne    0x435d04
  435fa1:	sub    eax,0x20
  435fa4:	add    ecx,0x1
  435fa7:	cmp    eax,0x1f
  435faa:	jg     0x435f90
  435fac:	cmp    eax,0x1
  435faf:	jle    0x435fd3
  435fb1:	movsxd rcx,ecx
  435fb4:	sub    eax,0x1
  435fb7:	lea    r8,[r9+rcx*4]
  435fbb:	xor    ecx,ecx
  435fbd:	mov    edx,DWORD PTR [r8+0x18]
  435fc1:	tzcnt  ecx,edx
  435fc5:	shr    edx,cl
  435fc7:	cmp    eax,ecx
  435fc9:	mov    DWORD PTR [r8+0x18],edx
  435fcd:	jg     0x435d04
  435fd3:	mov    eax,DWORD PTR [rsp+0x8c]
  435fda:	mov    rcx,r9
  435fdd:	sub    eax,0x1
  435fe0:	mov    DWORD PTR [rsp+0xac],eax
  435fe7:	mov    eax,DWORD PTR [rsp+0x40]
  435feb:	mov    edx,eax
  435fed:	mov    DWORD PTR [rsp+0xa8],eax
  435ff4:	call   0x434ce0
  435ff9:	mov    QWORD PTR [rsp+0xc8],rax
  436001:	jmp    0x435d50
  436006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436010:	mov    DWORD PTR [rsp+0x44],0x1
  436018:	jmp    0x435af0
  43601d:	nop    DWORD PTR [rax]
  436020:	movapd xmm7,xmm0
  436024:	cmp    ebp,0x1
  436027:	movsd  xmm1,QWORD PTR [rip+0x45709]        # 0x47b738
  43602f:	sbb    eax,eax
  436031:	and    eax,0x10
  436034:	movsd  xmm0,QWORD PTR [rip+0x45704]        # 0x47b740
  43603c:	mulsd  xmm7,xmm1
  436040:	add    eax,0x10
  436043:	xor    r14d,r14d
  436046:	cmp    ebp,0x1
  436049:	mov    DWORD PTR [rsp+0x88],eax
  436050:	setb   r14b
  436054:	ucomisd xmm0,xmm7
  436058:	jbe    0x436140
  43605e:	cvttsd2si r12d,xmm7
  436063:	pxor   xmm6,xmm6
  436067:	mov    eax,DWORD PTR [rsp+0x6c]
  43606b:	cmp    eax,0x1
  43606e:	cvtsi2sd xmm6,r12d
  436073:	subsd  xmm7,xmm6
  436077:	je     0x436395
  43607d:	cmp    eax,0x2
  436080:	jne    0x436239
  436086:	test   r14d,r14d
  436089:	jne    0x4360b5
  43608b:	ucomisd xmm7,QWORD PTR [rip+0x45695]        # 0x47b728
  436093:	jbe    0x4360b5
  436095:	pxor   xmm6,xmm6
  436099:	add    r12d,0x1
  43609d:	mov    eax,0x30
  4360a2:	sub    eax,DWORD PTR [rsp+0x88]
  4360a9:	cvtsi2sd xmm6,r12d
  4360ae:	mov    DWORD PTR [rsp+0x88],eax
  4360b5:	mov    DWORD PTR [rsp+0x60],0x0
  4360bd:	jmp    0x435a17
  4360c2:	ucomisd xmm0,xmm6
  4360c6:	jbe    0x435b58
  4360cc:	movsd  xmm0,QWORD PTR [rip+0x4564c]        # 0x47b720
  4360d4:	subsd  xmm0,xmm6
  4360d8:	ucomisd xmm0,xmm7
  4360dc:	jbe    0x435b58
  4360e2:	mov    eax,DWORD PTR [rsp+0x88]
  4360e9:	or     DWORD PTR [rsp+0xa4],eax
  4360f0:	jmp    0x435d50
  4360f5:	mov    r15d,DWORD PTR [rsp+0x40]
  4360fa:	mov    rcx,QWORD PTR [rsp+0xc8]
  436102:	mov    ebp,r15d
  436105:	sub    ebp,eax
  436107:	mov    edx,ebp
  436109:	call   0x437ed0
  43610e:	sub    DWORD PTR [rsp+0xac],ebp
  436115:	mov    QWORD PTR [rsp+0xc8],rax
  43611d:	mov    DWORD PTR [rsp+0xa8],r15d
  436125:	jmp    0x435a3f
  43612a:	nop    WORD PTR [rax+rax*1+0x0]
  436130:	neg    edx
  436132:	mov    rcx,rax
  436135:	call   0x437310
  43613a:	jmp    0x435a77
  43613f:	nop
  436140:	movapd xmm6,xmm7
  436144:	xor    r12d,r12d
  436147:	jmp    0x4360b5
  43614c:	nop    DWORD PTR [rax+0x0]
  436150:	movapd xmm6,xmm11
  436155:	xor    r12d,r12d
  436158:	movapd xmm7,xmm11
  43615d:	mov    DWORD PTR [rsp+0x88],0x20
  436168:	mov    DWORD PTR [rsp+0x60],0x0
  436170:	xor    r14d,r14d
  436173:	jmp    0x435a17
  436178:	nop    DWORD PTR [rax+rax*1+0x0]
  436180:	mov    edx,0x1
  436185:	mov    rcx,rax
  436188:	xor    r12d,r12d
  43618b:	call   0x437310
  436190:	add    DWORD PTR [rsp+0xac],0x1
  436198:	add    DWORD PTR [rsp+0x8c],0x1
  4361a0:	jmp    0x435af0
  4361a5:	xor    ebp,ebp
  4361a7:	mov    rax,QWORD PTR [rsp+0xc8]
  4361af:	mov    DWORD PTR [rsp+0xa4],0xa3
  4361ba:	mov    DWORD PTR [rax+0x14],0x0
  4361c1:	call   0x438988
  4361c6:	mov    DWORD PTR [rax],0x22
  4361cc:	mov    rax,QWORD PTR [rsp+0x190]
  4361d4:	mov    eax,DWORD PTR [rax+0x8]
  4361d7:	add    eax,0x1
  4361da:	jmp    0x435140
  4361df:	mov    eax,DWORD PTR [rsp+0x58]
  4361e3:	mov    r8,QWORD PTR [rsp+0x198]
  4361eb:	lea    rcx,[rsp+0xc0]
  4361f3:	mov    rdx,QWORD PTR [rsp+0x190]
  4361fb:	lea    r9,[rsp+0xc8]
  436203:	mov    DWORD PTR [rsp+0x20],eax
  436207:	call   0x436a40
  43620c:	cmp    eax,0x6
  43620f:	mov    DWORD PTR [rsp+0xa4],eax
  436216:	mov    r8,QWORD PTR [rsp+0xc8]
  43621e:	jne    0x434e81
  436224:	mov    QWORD PTR [rsp+0xc0],rdi
  43622c:	mov    DWORD PTR [rsp+0x58],0x0
  436234:	jmp    0x434e81
  436239:	ucomisd xmm7,xmm1
  43623d:	jae    0x436095
  436243:	jmp    0x4360b5
  436248:	mov    eax,DWORD PTR [rsp+0xa8]
  43624f:	mov    ebp,DWORD PTR [rsp+0x40]
  436253:	sub    ebp,eax
  436255:	cmp    ebp,0x0
  436258:	jne    0x436421
  43625e:	mov    eax,DWORD PTR [rsp+0xac]
  436265:	jmp    0x435d68
  43626a:	je     0x435568
  436270:	neg    edx
  436272:	mov    eax,edx
  436274:	and    eax,0xf
  436277:	je     0x436299
  436279:	mov    rcx,QWORD PTR [rip+0x457f0]        # 0x47ba70
  436280:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  436289:	cdqe   
  43628b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  436290:	movsd  QWORD PTR [rsp+0xb0],xmm0
  436299:	and    edx,0xfffffff0
  43629c:	je     0x435568
  4362a2:	mov    eax,edx
  4362a4:	sar    eax,0x4
  4362a7:	cmp    eax,0xf
  4362aa:	jle    0x436878
  4362b0:	mov    rdx,QWORD PTR [rip+0x457c9]        # 0x47ba80
  4362b7:	mov    ecx,eax
  4362b9:	xor    r8d,r8d
  4362bc:	movsd  xmm1,QWORD PTR [rdx+0x20]
  4362c1:	mov    edx,DWORD PTR [rsp+0xb4]
  4362c8:	sub    ecx,0x10
  4362cb:	mov    r9d,edx
  4362ce:	and    edx,0x800fffff
  4362d4:	or     edx,0x3ff00000
  4362da:	and    r9d,0x7ff00000
  4362e1:	mov    DWORD PTR [rsp+0xb4],edx
  4362e8:	shr    r9d,0x14
  4362ec:	cmp    ecx,0xf
  4362ef:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4362f8:	lea    r8d,[r8+r9*1-0x3ff]
  436300:	mulsd  xmm0,xmm1
  436304:	movsd  QWORD PTR [rsp+0xb0],xmm0
  43630d:	jg     0x4362c1
  43630f:	and    eax,0xf
  436312:	mov    edx,DWORD PTR [rsp+0xb4]
  436319:	mov    ecx,edx
  43631b:	and    edx,0x800fffff
  436321:	and    ecx,0x7ff00000
  436327:	or     edx,0x3ff00000
  43632d:	shr    ecx,0x14
  436330:	mov    DWORD PTR [rsp+0xb4],edx
  436337:	test   eax,eax
  436339:	lea    edi,[r8+rcx*1-0x3ff]
  436341:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  43634a:	jle    0x435573
  436350:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  436359:	mov    rdx,QWORD PTR [rip+0x45720]        # 0x47ba80
  436360:	movapd xmm0,xmm1
  436364:	test   al,0x1
  436366:	je     0x436370
  436368:	mulsd  xmm1,QWORD PTR [rdx]
  43636c:	movapd xmm0,xmm1
  436370:	sar    eax,1
  436372:	add    rdx,0x8
  436376:	test   eax,eax
  436378:	jg     0x436364
  43637a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  436383:	jmp    0x435573
  436388:	mov    DWORD PTR [rsp+0x44],0x0
  436390:	jmp    0x435799
  436395:	test   r14d,r14d
  436398:	je     0x4360b5
  43639e:	jmp    0x43608b
  4363a3:	mov    DWORD PTR [rsp+0x44],0x0
  4363ab:	jmp    0x4358e3
  4363b0:	lea    rax,[rsp+0xa4]
  4363b8:	lea    rcx,[rsp+0xb0]
  4363c0:	mov    DWORD PTR [rsp+0x20],0x1
  4363c8:	mov    QWORD PTR [rsp+0x30],rax
  4363cd:	mov    eax,DWORD PTR [rsp+0x6c]
  4363d1:	mov    DWORD PTR [rsp+0x28],eax
  4363d5:	jmp    0x435458
  4363da:	mov    ecx,DWORD PTR [rsp+0x68]
  4363de:	mov    edx,0x25
  4363e3:	sub    edx,ebp
  4363e5:	cmp    ecx,edx
  4363e7:	mov    eax,ecx
  4363e9:	jg     0x435529
  4363ef:	mov    rdx,QWORD PTR [rip+0x4567a]        # 0x47ba70
  4363f6:	mov    eax,0xf
  4363fb:	sub    eax,ebp
  4363fd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  436406:	movsxd rcx,eax
  436409:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  43640e:	mov    ecx,DWORD PTR [rsp+0x68]
  436412:	sub    ecx,eax
  436414:	movsxd rax,ecx
  436417:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  43641c:	jmp    0x435861
  436421:	mov    edx,ebp
  436423:	jle    0x43677f
  436429:	mov    rcx,QWORD PTR [rsp+0xc8]
  436431:	call   0x437ed0
  436436:	mov    QWORD PTR [rsp+0xc8],rax
  43643e:	mov    eax,DWORD PTR [rsp+0xac]
  436445:	sub    eax,ebp
  436447:	xor    ebp,ebp
  436449:	mov    DWORD PTR [rsp+0xac],eax
  436450:	jmp    0x435d68
  436455:	xor    ebp,ebp
  436457:	xor    r13d,r13d
  43645a:	jmp    0x43551a
  43645f:	mov    r9d,0x4e1f
  436465:	jmp    0x4352b4
  43646a:	lea    rbx,[rsp+0xc0]
  436472:	lea    rdx,[rip+0x45147]        # 0x47b5c0
  436479:	mov    rcx,rbx
  43647c:	call   0x4385a0
  436481:	test   eax,eax
  436483:	je     0x4352d3
  436489:	lea    rdx,[rip+0x45133]        # 0x47b5c3
  436490:	mov    rcx,rbx
  436493:	sub    QWORD PTR [rsp+0xc0],0x1
  43649c:	call   0x4385a0
  4364a1:	test   eax,eax
  4364a3:	jne    0x4364ae
  4364a5:	add    QWORD PTR [rsp+0xc0],0x1
  4364ae:	mov    rax,QWORD PTR [rsp+0x190]
  4364b6:	mov    DWORD PTR [rsp+0xa4],0x3
  4364c1:	xor    ebp,ebp
  4364c3:	mov    eax,DWORD PTR [rax+0x8]
  4364c6:	add    eax,0x1
  4364c9:	jmp    0x435140
  4364ce:	mov    edx,DWORD PTR [rsp+0xb4]
  4364d5:	mov    eax,0x15
  4364da:	or     edx,0x100000
  4364e0:	tzcnt  edx,edx
  4364e4:	sub    eax,edx
  4364e6:	jmp    0x43540d
  4364eb:	cmp    ebp,0x1
  4364ee:	sbb    eax,eax
  4364f0:	and    eax,0x10
  4364f3:	add    eax,0x11
  4364f6:	mov    DWORD PTR [rsp+0xa4],eax
  4364fd:	jmp    0x435d50
  436502:	cmp    ebp,0x1
  436505:	sbb    eax,eax
  436507:	and    eax,0x10
  43650a:	add    eax,0x11
  43650d:	test   ebp,ebp
  43650f:	mov    DWORD PTR [rsp+0xa4],eax
  436516:	jne    0x435d50
  43651c:	cmp    DWORD PTR [rsp+0x48],0x1
  436521:	jg     0x435d50
  436527:	mov    ebp,DWORD PTR [rsp+0x44]
  43652b:	test   ebp,ebp
  43652d:	jne    0x435d50
  436533:	mov    edx,DWORD PTR [rsp+0x8c]
  43653a:	cmp    DWORD PTR [rsp+0x50],edx
  43653e:	je     0x435d50
  436544:	mov    rcx,rbx
  436547:	mov    edx,0x1
  43654c:	call   0x437ed0
  436551:	mov    rdx,r13
  436554:	mov    rcx,rax
  436557:	mov    rbx,rax
  43655a:	call   0x437ff0
  43655f:	test   eax,eax
  436561:	jle    0x436248
  436567:	mov    DWORD PTR [rsp+0xa4],0x11
  436572:	mov    DWORD PTR [rsp+0x44],0x0
  43657a:	mov    eax,DWORD PTR [rsp+0x40]
  43657e:	mov    rcx,QWORD PTR [rsp+0xc8]
  436586:	sub    DWORD PTR [rsp+0xac],eax
  43658d:	mov    edx,eax
  43658f:	mov    DWORD PTR [rsp+0xa8],eax
  436596:	call   0x434ce0
  43659b:	mov    QWORD PTR [rsp+0xc8],rax
  4365a3:	jmp    0x435d50
  4365a8:	mov    r10d,DWORD PTR [rsp+0x58]
  4365ad:	test   r10d,r10d
  4365b0:	jne    0x4361a7
  4365b6:	jmp    0x435de1
  4365bb:	mov    r11d,DWORD PTR [rsp+0x58]
  4365c0:	test   r11d,r11d
  4365c3:	je     0x4361a7
  4365c9:	jmp    0x435de1
  4365ce:	test   ebp,ebp
  4365d0:	je     0x436717
  4365d6:	mov    r11d,DWORD PTR [rsp+0x44]
  4365db:	test   r11d,r11d
  4365de:	je     0x4367e5
  4365e4:	mov    ecx,DWORD PTR [rsp+0xa8]
  4365eb:	mov    r8,QWORD PTR [rsp+0xc8]
  4365f3:	mov    edx,ecx
  4365f5:	lea    rax,[r8+0x18]
  4365f9:	sar    edx,0x5
  4365fc:	movsxd rdx,edx
  4365ff:	lea    rdx,[rax+rdx*4]
  436603:	cmp    rax,rdx
  436606:	jae    0x436633
  436608:	cmp    DWORD PTR [r8+0x18],0xffffffff
  43660d:	lea    rax,[r8+0x1c]
  436611:	je     0x43662e
  436613:	jmp    0x4367e5
  436618:	nop    DWORD PTR [rax+rax*1+0x0]
  436620:	add    rax,0x4
  436624:	cmp    DWORD PTR [rax-0x4],0xffffffff
  436628:	jne    0x4367e5
  43662e:	cmp    rdx,rax
  436631:	ja     0x436620
  436633:	and    ecx,0x1f
  436636:	je     0x43664a
  436638:	or     edx,0xffffffff
  43663b:	shl    edx,cl
  43663d:	or     edx,DWORD PTR [rax]
  43663f:	mov    eax,edx
  436641:	add    eax,0x1
  436644:	jne    0x4367e5
  43664a:	mov    eax,DWORD PTR [rsp+0x40]
  43664e:	mov    edx,DWORD PTR [rsp+0x50]
  436652:	mov    DWORD PTR [r8+0x14],0x1
  43665a:	mov    DWORD PTR [r8+0x18],0x1
  436662:	mov    DWORD PTR [rsp+0xa8],0x1
  43666d:	mov    DWORD PTR [rsp+0xa4],0x21
  436678:	lea    eax,[rax+rdx*1-0x1]
  43667c:	mov    DWORD PTR [rsp+0xac],eax
  436683:	mov    eax,0x1
  436688:	jmp    0x43624f
  43668d:	add    r13d,eax
  436690:	cmp    eax,0x1
  436693:	je     0x4366bc
  436695:	add    ecx,ebp
  436697:	mov    r10d,ecx
  43669a:	jmp    0x4366a5
  43669c:	lea    esi,[rsi+rsi*4]
  43669f:	add    esi,esi
  4366a1:	cmp    ebp,ecx
  4366a3:	je     0x4366bf
  4366a5:	add    ebp,0x1
  4366a8:	lea    eax,[rbp-0x1]
  4366ab:	cmp    eax,0x8
  4366ae:	jle    0x43669c
  4366b0:	cmp    ebp,0x10
  4366b3:	jg     0x4366a1
  4366b5:	lea    edx,[rdx+rdx*4]
  4366b8:	add    edx,edx
  4366ba:	jmp    0x4366a1
  4366bc:	mov    r10d,ebp
  4366bf:	cmp    r10d,0x8
  4366c3:	lea    ebp,[r10+0x1]
  4366c7:	jg     0x43679b
  4366cd:	mov    r8,QWORD PTR [rsp+0xc0]
  4366d5:	jmp    0x4357fe
  4366da:	mov    r9,QWORD PTR [rsp+0xc8]
  4366e2:	mov    DWORD PTR [rsp+0x44],0x1
  4366ea:	mov    eax,DWORD PTR [rsp+0x50]
  4366ee:	mov    DWORD PTR [r9+0x14],0x0
  4366f6:	mov    DWORD PTR [rsp+0xa4],0x50
  436701:	mov    DWORD PTR [rsp+0xac],eax
  436708:	jmp    0x435d50
  43670d:	mov    eax,0x1
  436712:	jmp    0x4354bd
  436717:	cmp    DWORD PTR [rsp+0x48],0x1
  43671c:	je     0x4367fc
  436722:	mov    DWORD PTR [rsp+0xa4],0x21
  43672d:	mov    r10d,DWORD PTR [rsp+0x44]
  436732:	test   r10d,r10d
  436735:	jne    0x436745
  436737:	mov    edx,DWORD PTR [rsp+0x40]
  43673b:	cmp    DWORD PTR [rsp+0x48],edx
  43673f:	jl     0x436248
  436745:	mov    r9,QWORD PTR [rsp+0xc8]
  43674d:	mov    eax,DWORD PTR [r9+0x18]
  436751:	test   al,0x1
  436753:	je     0x435d50
  436759:	test   ebp,ebp
  43675b:	jne    0x436880
  436761:	cmp    DWORD PTR [rsp+0x48],0x1
  436766:	je     0x4366ea
  436768:	sub    eax,0x1
  43676b:	mov    DWORD PTR [rsp+0xa4],0x11
  436776:	mov    DWORD PTR [r9+0x18],eax
  43677a:	jmp    0x435d50
  43677f:	mov    rcx,QWORD PTR [rsp+0xc8]
  436787:	neg    edx
  436789:	call   0x437310
  43678e:	jmp    0x43643e
  436793:	xor    r8d,r8d
  436796:	jmp    0x43572f
  43679b:	cmp    ebp,0x10
  43679e:	jg     0x4367a7
  4367a0:	lea    eax,[rdx+rdx*4]
  4367a3:	lea    edx,[r8+rax*2]
  4367a7:	mov    r8,QWORD PTR [rsp+0xc0]
  4367af:	xor    ecx,ecx
  4367b1:	jmp    0x4354ff
  4367b6:	cmp    edx,0xffffffff
  4367b9:	jl     0x435674
  4367bf:	mov    rax,QWORD PTR [rsp+0xc8]
  4367c7:	mov    DWORD PTR [rsp+0xa8],0x1
  4367d2:	mov    DWORD PTR [rax+0x14],0x1
  4367d9:	mov    DWORD PTR [rax+0x18],0x1
  4367e0:	jmp    0x435646
  4367e5:	mov    DWORD PTR [rsp+0xa4],0x11
  4367f0:	jmp    0x43672d
  4367f5:	xor    ecx,ecx
  4367f7:	jmp    0x4357d8
  4367fc:	mov    edx,DWORD PTR [rsp+0x8c]
  436803:	cmp    DWORD PTR [rsp+0x50],edx
  436807:	jne    0x4368cd
  43680d:	mov    rax,QWORD PTR [rsp+0xc8]
  436815:	mov    DWORD PTR [rsp+0xa4],0x21
  436820:	cmp    DWORD PTR [rax+0x14],0x1
  436824:	jne    0x435d50
  43682a:	cmp    DWORD PTR [rax+0x18],0x1
  43682e:	mov    eax,DWORD PTR [rsp+0x48]
  436832:	cmovne eax,DWORD PTR [rsp+0x84]
  43683a:	mov    DWORD PTR [rsp+0x84],eax
  436841:	jmp    0x435d50
  436846:	mov    r8,QWORD PTR [rsp+0x1a0]
  43684e:	mov    rdx,QWORD PTR [rsp+0x190]
  436856:	mov    rcx,rbx
  436859:	call   0x4374e0
  43685e:	mov    DWORD PTR [rsp+0xa4],eax
  436865:	mov    rax,QWORD PTR [rsp+0x190]
  43686d:	mov    eax,DWORD PTR [rax+0x8]
  436870:	add    eax,0x1
  436873:	jmp    0x435140
  436878:	xor    r8d,r8d
  43687b:	jmp    0x436312
  436880:	mov    rcx,r9
  436883:	call   0x434830
  436888:	mov    edx,DWORD PTR [rax+0x14]
  43688b:	mov    ecx,DWORD PTR [rsp+0xa8]
  436892:	mov    QWORD PTR [rsp+0xc8],rax
  43689a:	sub    edx,0x1
  43689d:	movsxd rdx,edx
  4368a0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  4368a5:	mov    eax,ecx
  4368a7:	neg    eax
  4368a9:	and    eax,0x1f
  4368ac:	xor    edx,0x1f
  4368af:	cmp    edx,eax
  4368b1:	je     0x4368bd
  4368b3:	add    ecx,0x1
  4368b6:	mov    DWORD PTR [rsp+0xa8],ecx
  4368bd:	mov    DWORD PTR [rsp+0xa4],0x21
  4368c8:	jmp    0x435d50
  4368cd:	mov    DWORD PTR [rsp+0xa4],0x1
  4368d8:	jmp    0x43657a
  4368dd:	nop
  4368de:	nop
  4368df:	nop
  4368e0:	push   r13
  4368e2:	push   r12
  4368e4:	push   rbp
  4368e5:	push   rdi
  4368e6:	push   rsi
  4368e7:	push   rbx
  4368e8:	sub    rsp,0x28
  4368ec:	mov    eax,DWORD PTR [rdx+0x14]
  4368ef:	cmp    DWORD PTR [rcx+0x14],eax
  4368f2:	mov    rsi,rcx
  4368f5:	mov    rdi,rdx
  4368f8:	jge    0x436900
  4368fa:	mov    rsi,rdx
  4368fd:	mov    rdi,rcx
  436900:	mov    ecx,DWORD PTR [rsi+0x8]
  436903:	xor    r12d,r12d
  436906:	call   0x4379c0
  43690b:	movsxd rcx,DWORD PTR [rsi+0x14]
  43690f:	mov    rbx,rax
  436912:	lea    r11,[rdi+0x18]
  436916:	lea    r8,[rbx+0x18]
  43691a:	mov    DWORD PTR [rax+0x14],ecx
  43691d:	movsxd rdx,DWORD PTR [rdi+0x14]
  436921:	lea    rax,[rsi+0x18]
  436925:	lea    rdi,[r8+rdx*4]
  436929:	mov    rbp,rdx
  43692c:	nop    DWORD PTR [rax+0x0]
  436930:	mov    r10d,DWORD PTR [rax]
  436933:	mov    r9d,DWORD PTR [r11]
  436936:	add    r8,0x4
  43693a:	add    rax,0x4
  43693e:	add    r11,0x4
  436942:	movzx  r13d,r9w
  436946:	movzx  edx,r10w
  43694a:	shr    r9d,0x10
  43694e:	add    edx,r13d
  436951:	shr    r10d,0x10
  436955:	add    edx,r12d
  436958:	add    r10d,r9d
  43695b:	mov    r9d,edx
  43695e:	mov    WORD PTR [r8-0x4],dx
  436963:	and    r9d,0x10000
  43696a:	shr    r9d,0x10
  43696e:	add    r9d,r10d
  436971:	mov    r12d,r9d
  436974:	mov    WORD PTR [r8-0x2],r9w
  436979:	and    r12d,0x10000
  436980:	shr    r12d,0x10
  436984:	cmp    rdi,r8
  436987:	ja     0x436930
  436989:	mov    edx,DWORD PTR [rsi+0x14]
  43698c:	sub    edx,ebp
  43698e:	movsxd rdx,edx
  436991:	lea    r11,[rdi+rdx*4]
  436995:	cmp    r11,r8
  436998:	jbe    0x4369db
  43699a:	nop    WORD PTR [rax+rax*1+0x0]
  4369a0:	mov    r9d,DWORD PTR [rax]
  4369a3:	add    r8,0x4
  4369a7:	add    rax,0x4
  4369ab:	movzx  r10d,r9w
  4369af:	shr    r9d,0x10
  4369b3:	add    r10d,r12d
  4369b6:	mov    edx,r10d
  4369b9:	mov    WORD PTR [r8-0x4],r10w
  4369be:	and    edx,0x10000
  4369c4:	shr    edx,0x10
  4369c7:	add    edx,r9d
  4369ca:	mov    WORD PTR [r8-0x2],dx
  4369cf:	mov    r12d,edx
  4369d2:	shr    r12d,0x10
  4369d6:	cmp    r11,r8
  4369d9:	ja     0x4369a0
  4369db:	test   r12d,r12d
  4369de:	je     0x4369f3
  4369e0:	cmp    ecx,DWORD PTR [rbx+0xc]
  4369e3:	je     0x436a03
  4369e5:	lea    eax,[rcx+0x1]
  4369e8:	mov    DWORD PTR [rbx+0x14],eax
  4369eb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  4369f3:	mov    rax,rbx
  4369f6:	add    rsp,0x28
  4369fa:	pop    rbx
  4369fb:	pop    rsi
  4369fc:	pop    rdi
  4369fd:	pop    rbp
  4369fe:	pop    r12
  436a00:	pop    r13
  436a02:	ret    
  436a03:	mov    eax,DWORD PTR [rbx+0x8]
  436a06:	lea    ecx,[rax+0x1]
  436a09:	call   0x4379c0
  436a0e:	mov    rsi,rax
  436a11:	lea    rcx,[rax+0x10]
  436a15:	movsxd rax,DWORD PTR [rbx+0x14]
  436a19:	lea    rdx,[rbx+0x10]
  436a1d:	lea    r8,[rax*4+0x8]
  436a25:	call   0x4387f0
  436a2a:	mov    rcx,rbx
  436a2d:	mov    rbx,rsi
  436a30:	call   0x437ad0
  436a35:	movsxd rcx,DWORD PTR [rsi+0x14]
  436a39:	jmp    0x4369e5
  436a3b:	nop
  436a3c:	nop
  436a3d:	nop
  436a3e:	nop
  436a3f:	nop
  436a40:	push   r15
  436a42:	push   r14
  436a44:	push   r13
  436a46:	push   r12
  436a48:	push   rbp
  436a49:	push   rdi
  436a4a:	push   rsi
  436a4b:	push   rbx
  436a4c:	sub    rsp,0x28
  436a50:	mov    r14,rcx
  436a53:	mov    r13,rdx
  436a56:	mov    QWORD PTR [rsp+0x80],r8
  436a5e:	mov    QWORD PTR [rsp+0x88],r9
  436a66:	call   0x438808
  436a6b:	mov    rdi,QWORD PTR [rip+0x44f3e]        # 0x47b9b0
  436a72:	mov    rsi,QWORD PTR [rax]
  436a75:	cmp    BYTE PTR [rdi+0x30],0x0
  436a79:	je     0x436ea0
  436a7f:	mov    rax,QWORD PTR [rsp+0x88]
  436a87:	xor    r8d,r8d
  436a8a:	mov    QWORD PTR [rax],0x0
  436a91:	mov    rbx,QWORD PTR [r14]
  436a94:	movzx  edx,BYTE PTR [rbx+0x2]
  436a98:	lea    rax,[rbx+0x3]
  436a9c:	add    rbx,0x2
  436aa0:	cmp    dl,0x30
  436aa3:	jne    0x436ab9
  436aa5:	mov    rbx,rax
  436aa8:	add    rax,0x1
  436aac:	movzx  edx,BYTE PTR [rax-0x1]
  436ab0:	add    r8d,0x1
  436ab4:	cmp    dl,0x30
  436ab7:	je     0x436aa5
  436ab9:	cmp    BYTE PTR [rdi+rdx*1],0x0
  436abd:	jne    0x436c10
  436ac3:	movzx  r9d,BYTE PTR [rsi]
  436ac7:	test   r9b,r9b
  436aca:	je     0x43710a
  436ad0:	movzx  edx,BYTE PTR [rbx]
  436ad3:	cmp    r9b,dl
  436ad6:	jne    0x436eb3
  436adc:	mov    eax,0x1
  436ae1:	jmp    0x436af1
  436ae3:	add    rax,0x1
  436ae7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  436aeb:	jne    0x436eb0
  436af1:	movzx  edx,BYTE PTR [rsi+rax*1]
  436af5:	test   dl,dl
  436af7:	jne    0x436ae3
  436af9:	add    rax,rbx
  436afc:	movzx  ecx,BYTE PTR [rax]
  436aff:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  436b04:	mov    rdx,rcx
  436b07:	test   r10b,r10b
  436b0a:	jne    0x436f90
  436b10:	cmp    dl,0x50
  436b13:	je     0x436dc0
  436b19:	cmp    dl,0x70
  436b1c:	je     0x436dc0
  436b22:	mov    rbp,rax
  436b25:	mov    r11d,0x1
  436b2b:	xor    r12d,r12d
  436b2e:	xor    r15d,r15d
  436b31:	xor    r10d,r10d
  436b34:	test   r8d,r8d
  436b37:	jne    0x436b3d
  436b39:	lea    rax,[rbx-0x1]
  436b3d:	test   r11d,r11d
  436b40:	mov    QWORD PTR [r14],rax
  436b43:	jne    0x436e70
  436b49:	test   r10d,r10d
  436b4c:	je     0x436c80
  436b52:	test   r15d,r15d
  436b55:	mov    eax,DWORD PTR [r13+0xc]
  436b59:	jne    0x436f00
  436b5f:	cmp    eax,0x2
  436b62:	je     0x4371a8
  436b68:	cmp    eax,0x3
  436b6b:	je     0x437192
  436b71:	cmp    eax,0x1
  436b74:	je     0x436f78
  436b7a:	mov    esi,DWORD PTR [r13+0x0]
  436b7e:	mov    ebx,esi
  436b80:	and    esi,0x1f
  436b83:	sar    ebx,0x5
  436b86:	cmp    esi,0x1
  436b89:	mov    edi,ebx
  436b8b:	sbb    edi,0xffffffff
  436b8e:	xor    ecx,ecx
  436b90:	mov    eax,edi
  436b92:	sar    eax,1
  436b94:	je     0x436ba7
  436b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436ba0:	add    ecx,0x1
  436ba3:	sar    eax,1
  436ba5:	jne    0x436ba0
  436ba7:	call   0x4379c0
  436bac:	mov    rcx,QWORD PTR [rsp+0x88]
  436bb4:	test   ebx,ebx
  436bb6:	mov    QWORD PTR [rcx],rax
  436bb9:	mov    DWORD PTR [rax+0x14],edi
  436bbc:	jle    0x4372c8
  436bc2:	lea    ecx,[rbx-0x1]
  436bc5:	lea    rdx,[rax+0x18]
  436bc9:	lea    rcx,[rax+rcx*4+0x1c]
  436bce:	xchg   ax,ax
  436bd0:	mov    DWORD PTR [rdx],0xffffffff
  436bd6:	add    rdx,0x4
  436bda:	cmp    rdx,rcx
  436bdd:	jne    0x436bd0
  436bdf:	mov    edx,ebx
  436be1:	cmp    edi,ebx
  436be3:	jle    0x436bf8
  436be5:	movsxd r8,edx
  436be8:	mov    edx,0x20
  436bed:	mov    ecx,edx
  436bef:	sub    ecx,esi
  436bf1:	sar    edx,cl
  436bf3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  436bf8:	mov    eax,DWORD PTR [r13+0x4]
  436bfc:	mov    rdi,QWORD PTR [rsp+0x80]
  436c04:	mov    DWORD PTR [rdi],eax
  436c06:	mov    eax,0x11
  436c0b:	jmp    0x436e72
  436c10:	movzx  eax,BYTE PTR [rbx]
  436c13:	movzx  r9d,BYTE PTR [rsi]
  436c17:	add    r8d,0x1
  436c1b:	xor    r11d,r11d
  436c1e:	xor    r12d,r12d
  436c21:	movzx  r10d,BYTE PTR [rdi+rax*1]
  436c26:	mov    rdx,rax
  436c29:	test   r10b,r10b
  436c2c:	mov    rax,rbx
  436c2f:	je     0x436c41
  436c31:	add    rax,0x1
  436c35:	movzx  ecx,BYTE PTR [rax]
  436c38:	cmp    BYTE PTR [rdi+rcx*1],0x0
  436c3c:	mov    rdx,rcx
  436c3f:	jne    0x436c31
  436c41:	cmp    dl,r9b
  436c44:	je     0x436ec0
  436c4a:	test   r12,r12
  436c4d:	movzx  edx,BYTE PTR [rax]
  436c50:	je     0x436c59
  436c52:	sub    r12d,eax
  436c55:	shl    r12d,0x2
  436c59:	cmp    dl,0x50
  436c5c:	je     0x436dc9
  436c62:	cmp    dl,0x70
  436c65:	je     0x436dc9
  436c6b:	test   r11d,r11d
  436c6e:	mov    QWORD PTR [r14],rax
  436c71:	mov    rbp,rax
  436c74:	jne    0x436e70
  436c7a:	nop    WORD PTR [rax+rax*1+0x0]
  436c80:	mov    rax,rbp
  436c83:	xor    ecx,ecx
  436c85:	sub    rax,rbx
  436c88:	sub    eax,0x1
  436c8b:	cmp    eax,0x7
  436c8e:	jle    0x436c9a
  436c90:	sar    eax,1
  436c92:	add    ecx,0x1
  436c95:	cmp    eax,0x7
  436c98:	jg     0x436c90
  436c9a:	call   0x4379c0
  436c9f:	cmp    BYTE PTR [rsi+0x1],0x0
  436ca3:	mov    r14,rax
  436ca6:	lea    r15,[rax+0x18]
  436caa:	je     0x4371be
  436cb0:	mov    edx,0x1
  436cb5:	jmp    0x436cc3
  436cb7:	nop    WORD PTR [rax+rax*1+0x0]
  436cc0:	mov    rdx,rax
  436cc3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  436cc8:	lea    rax,[rdx+0x1]
  436ccc:	jne    0x436cc0
  436cce:	cmp    rbx,rbp
  436cd1:	jae    0x4371c5
  436cd7:	add    rsi,rdx
  436cda:	mov    rax,r15
  436cdd:	xor    r9d,r9d
  436ce0:	xor    r8d,r8d
  436ce3:	jmp    0x436d11
  436ce5:	cmp    r8d,0x20
  436ce9:	je     0x436e83
  436cef:	movzx  r10d,cl
  436cf3:	mov    ecx,r8d
  436cf6:	add    r8d,0x4
  436cfa:	movzx  r10d,BYTE PTR [rdi+r10*1]
  436cff:	mov    rbp,r11
  436d02:	and    r10d,0xf
  436d06:	shl    r10d,cl
  436d09:	or     r9d,r10d
  436d0c:	cmp    rbx,rbp
  436d0f:	jae    0x436d28
  436d11:	movzx  ecx,BYTE PTR [rbp-0x1]
  436d15:	lea    r11,[rbp-0x1]
  436d19:	cmp    cl,BYTE PTR [rsi]
  436d1b:	jne    0x436ce5
  436d1d:	sub    r11,rdx
  436d20:	mov    rbp,r11
  436d23:	cmp    rbx,rbp
  436d26:	jb     0x436d11
  436d28:	bsr    edx,r9d
  436d2c:	xor    edx,0x1f
  436d2f:	mov    DWORD PTR [rax],r9d
  436d32:	add    rax,0x4
  436d36:	mov    esi,DWORD PTR [r13+0x0]
  436d3a:	sub    rax,r15
  436d3d:	sar    rax,0x2
  436d41:	mov    DWORD PTR [r14+0x14],eax
  436d45:	shl    eax,0x5
  436d48:	sub    eax,edx
  436d4a:	cmp    eax,esi
  436d4c:	jg     0x436ff8
  436d52:	mov    edi,0x0
  436d57:	jl     0x436fce
  436d5d:	cmp    r12d,DWORD PTR [r13+0x8]
  436d61:	jg     0x436f70
  436d67:	mov    eax,DWORD PTR [r13+0x4]
  436d6b:	cmp    r12d,eax
  436d6e:	jge    0x437059
  436d74:	mov    ebx,eax
  436d76:	sub    ebx,r12d
  436d79:	cmp    esi,ebx
  436d7b:	jg     0x4370b7
  436d81:	mov    edx,DWORD PTR [r13+0xc]
  436d85:	cmp    edx,0x2
  436d88:	je     0x437292
  436d8e:	cmp    edx,0x3
  436d91:	je     0x43726f
  436d97:	cmp    edx,0x1
  436d9a:	je     0x4372a2
  436da0:	mov    rcx,r14
  436da3:	call   0x437ad0
  436da8:	call   0x438988
  436dad:	mov    DWORD PTR [rax],0x22
  436db3:	mov    eax,0x50
  436db8:	jmp    0x436e72
  436dbd:	nop    DWORD PTR [rax]
  436dc0:	xor    r12d,r12d
  436dc3:	mov    r11d,0x1
  436dc9:	movzx  edx,BYTE PTR [rax+0x1]
  436dcd:	cmp    dl,0x2b
  436dd0:	je     0x436ff0
  436dd6:	cmp    dl,0x2d
  436dd9:	je     0x436ed1
  436ddf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  436de3:	xor    r15d,r15d
  436de6:	lea    r9,[rax+0x1]
  436dea:	lea    ecx,[rdx-0x1]
  436ded:	cmp    cl,0x18
  436df0:	ja     0x436eef
  436df6:	lea    rcx,[r9+0x1]
  436dfa:	movzx  r9d,BYTE PTR [r9+0x1]
  436dff:	sub    edx,0x10
  436e02:	xor    r10d,r10d
  436e05:	movzx  ebp,BYTE PTR [rdi+r9*1]
  436e0a:	mov    r9d,ebp
  436e0d:	sub    r9d,0x1
  436e11:	cmp    r9b,0x18
  436e15:	ja     0x436e51
  436e17:	nop    WORD PTR [rax+rax*1+0x0]
  436e20:	test   edx,0xf8000000
  436e26:	mov    r9d,0x1
  436e2c:	lea    edx,[rdx+rdx*4]
  436e2f:	cmovne r10d,r9d
  436e33:	add    rcx,0x1
  436e37:	movzx  r9d,BYTE PTR [rcx]
  436e3b:	lea    edx,[rbp+rdx*2-0x10]
  436e3f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  436e44:	mov    r9d,ebp
  436e47:	sub    r9d,0x1
  436e4b:	cmp    r9b,0x18
  436e4f:	jbe    0x436e20
  436e51:	mov    r9d,r15d
  436e54:	mov    rbp,rax
  436e57:	mov    rax,rcx
  436e5a:	neg    r9d
  436e5d:	xor    edx,r9d
  436e60:	add    edx,r15d
  436e63:	add    r12d,edx
  436e66:	jmp    0x436b34
  436e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  436e70:	xor    eax,eax
  436e72:	add    rsp,0x28
  436e76:	pop    rbx
  436e77:	pop    rsi
  436e78:	pop    rdi
  436e79:	pop    rbp
  436e7a:	pop    r12
  436e7c:	pop    r13
  436e7e:	pop    r14
  436e80:	pop    r15
  436e82:	ret    
  436e83:	mov    DWORD PTR [rax],r9d
  436e86:	mov    r8d,0x4
  436e8c:	movzx  r10d,BYTE PTR [rbp-0x1]
  436e91:	add    rax,0x4
  436e95:	xor    r9d,r9d
  436e98:	xor    ecx,ecx
  436e9a:	jmp    0x436cfa
  436e9f:	nop
  436ea0:	call   0x437450
  436ea5:	jmp    0x436a7f
  436eaa:	nop    WORD PTR [rax+rax*1+0x0]
  436eb0:	mov    edx,r9d
  436eb3:	mov    rax,rbx
  436eb6:	jmp    0x436b10
  436ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  436ec0:	test   r12,r12
  436ec3:	je     0x4371d5
  436ec9:	movzx  edx,BYTE PTR [rax]
  436ecc:	jmp    0x436c52
  436ed1:	mov    r15d,0x1
  436ed7:	movzx  edx,BYTE PTR [rax+0x2]
  436edb:	lea    r9,[rax+0x2]
  436edf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  436ee3:	lea    ecx,[rdx-0x1]
  436ee6:	cmp    cl,0x18
  436ee9:	jbe    0x436df6
  436eef:	mov    rbp,rax
  436ef2:	xor    r10d,r10d
  436ef5:	jmp    0x436b34
  436efa:	nop    WORD PTR [rax+rax*1+0x0]
  436f00:	cmp    eax,0x2
  436f03:	je     0x4370a1
  436f09:	cmp    eax,0x3
  436f0c:	jne    0x436da8
  436f12:	mov    r10d,DWORD PTR [rsp+0x90]
  436f1a:	test   r10d,r10d
  436f1d:	je     0x436da8
  436f23:	xor    ecx,ecx
  436f25:	call   0x4379c0
  436f2a:	mov    r14,rax
  436f2d:	mov    DWORD PTR [rax+0x14],0x1
  436f34:	mov    DWORD PTR [rax+0x18],0x1
  436f3b:	mov    eax,DWORD PTR [r13+0x4]
  436f3f:	mov    rdi,QWORD PTR [rsp+0x88]
  436f47:	mov    QWORD PTR [rdi],r14
  436f4a:	mov    rdi,QWORD PTR [rsp+0x80]
  436f52:	mov    DWORD PTR [rdi],eax
  436f54:	call   0x438988
  436f59:	mov    DWORD PTR [rax],0x22
  436f5f:	mov    eax,0x62
  436f64:	jmp    0x436e72
  436f69:	nop    DWORD PTR [rax+0x0]
  436f70:	mov    rcx,r14
  436f73:	call   0x437ad0
  436f78:	call   0x438988
  436f7d:	mov    DWORD PTR [rax],0x22
  436f83:	mov    eax,0xa3
  436f88:	jmp    0x436e72
  436f8d:	nop    DWORD PTR [rax]
  436f90:	cmp    cl,0x30
  436f93:	mov    rbx,rax
  436f96:	jne    0x436fb6
  436f98:	nop    DWORD PTR [rax+rax*1+0x0]
  436fa0:	add    rbx,0x1
  436fa4:	movzx  ecx,BYTE PTR [rbx]
  436fa7:	cmp    cl,0x30
  436faa:	je     0x436fa0
  436fac:	movzx  edx,cl
  436faf:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  436fb4:	mov    edx,ecx
  436fb6:	xor    r11d,r11d
  436fb9:	test   r10b,r10b
  436fbc:	mov    r12,rax
  436fbf:	sete   r11b
  436fc3:	mov    r8d,0x1
  436fc9:	jmp    0x436c29
  436fce:	mov    ebx,esi
  436fd0:	mov    rcx,r14
  436fd3:	sub    ebx,eax
  436fd5:	mov    edx,ebx
  436fd7:	sub    r12d,ebx
  436fda:	call   0x437ed0
  436fdf:	mov    r14,rax
  436fe2:	lea    r15,[rax+0x18]
  436fe6:	jmp    0x436d5d
  436feb:	nop    DWORD PTR [rax+rax*1+0x0]
  436ff0:	xor    r15d,r15d
  436ff3:	jmp    0x436ed7
  436ff8:	mov    ebx,eax
  436ffa:	mov    rcx,r14
  436ffd:	xor    edi,edi
  436fff:	sub    ebx,esi
  437001:	mov    edx,ebx
  437003:	call   0x438660
  437008:	test   eax,eax
  43700a:	je     0x437047
  43700c:	lea    ecx,[rbx-0x1]
  43700f:	mov    r8d,0x1
  437015:	mov    dil,0x1
  437018:	mov    eax,ecx
  43701a:	shl    r8d,cl
  43701d:	sar    eax,0x5
  437020:	cdqe   
  437022:	test   DWORD PTR [r15+rax*4],r8d
  437026:	je     0x437047
  437028:	test   ecx,ecx
  43702a:	jle    0x43723f
  437030:	mov    edx,ecx
  437032:	mov    rcx,r14
  437035:	call   0x438660
  43703a:	test   eax,eax
  43703c:	je     0x43723f
  437042:	mov    edi,0x3
  437047:	mov    edx,ebx
  437049:	mov    rcx,r14
  43704c:	add    r12d,ebx
  43704f:	call   0x437310
  437054:	jmp    0x436d5d
  437059:	mov    ebx,0x1
  43705e:	test   edi,edi
  437060:	je     0x437084
  437062:	mov    eax,DWORD PTR [r13+0xc]
  437066:	cmp    eax,0x2
  437069:	je     0x437111
  43706f:	cmp    eax,0x3
  437072:	je     0x437124
  437078:	cmp    eax,0x1
  43707b:	je     0x437249
  437081:	or     ebx,0x10
  437084:	mov    rax,QWORD PTR [rsp+0x88]
  43708c:	mov    QWORD PTR [rax],r14
  43708f:	mov    rax,QWORD PTR [rsp+0x80]
  437097:	mov    DWORD PTR [rax],r12d
  43709a:	mov    eax,ebx
  43709c:	jmp    0x436e72
  4370a1:	mov    r11d,DWORD PTR [rsp+0x90]
  4370a9:	test   r11d,r11d
  4370ac:	jne    0x436da8
  4370b2:	jmp    0x436f23
  4370b7:	test   edi,edi
  4370b9:	lea    ebp,[rbx-0x1]
  4370bc:	jne    0x437235
  4370c2:	test   ebp,ebp
  4370c4:	jle    0x4370d2
  4370c6:	mov    edx,ebp
  4370c8:	mov    rcx,r14
  4370cb:	call   0x438660
  4370d0:	mov    edi,eax
  4370d2:	mov    eax,ebp
  4370d4:	mov    ecx,ebp
  4370d6:	mov    edx,edi
  4370d8:	sar    eax,0x5
  4370db:	mov    r8d,0x1
  4370e1:	or     edx,0x2
  4370e4:	cdqe   
  4370e6:	shl    r8d,cl
  4370e9:	mov    rcx,r14
  4370ec:	test   DWORD PTR [r15+rax*4],r8d
  4370f0:	cmovne edi,edx
  4370f3:	mov    edx,ebx
  4370f5:	sub    esi,ebx
  4370f7:	call   0x437310
  4370fc:	mov    ebx,0x2
  437101:	mov    r12d,DWORD PTR [r13+0x4]
  437105:	jmp    0x43705e
  43710a:	xor    eax,eax
  43710c:	jmp    0x436af9
  437111:	mov    eax,0x1
  437116:	sub    eax,DWORD PTR [rsp+0x90]
  43711d:	mov    DWORD PTR [rsp+0x90],eax
  437124:	mov    eax,DWORD PTR [rsp+0x90]
  43712b:	test   eax,eax
  43712d:	je     0x437081
  437133:	mov    rcx,r14
  437136:	movsxd rdi,DWORD PTR [r14+0x14]
  43713a:	call   0x434830
  43713f:	cmp    ebx,0x2
  437142:	mov    r14,rax
  437145:	lea    r8,[rax+0x18]
  437149:	je     0x4372cf
  43714f:	cmp    edi,DWORD PTR [rax+0x14]
  437152:	jl     0x43716d
  437154:	and    esi,0x1f
  437157:	je     0x437188
  437159:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  43715f:	mov    edx,0x20
  437164:	sub    edx,esi
  437166:	xor    eax,0x1f
  437169:	cmp    edx,eax
  43716b:	jle    0x437188
  43716d:	mov    edx,0x1
  437172:	mov    rcx,r14
  437175:	add    r12d,0x1
  437179:	call   0x437310
  43717e:	cmp    r12d,DWORD PTR [r13+0x8]
  437182:	jg     0x436f70
  437188:	mov    ebx,0x21
  43718d:	jmp    0x437084
  437192:	mov    r8d,DWORD PTR [rsp+0x90]
  43719a:	test   r8d,r8d
  43719d:	jne    0x436f78
  4371a3:	jmp    0x436b7a
  4371a8:	mov    r9d,DWORD PTR [rsp+0x90]
  4371b0:	test   r9d,r9d
  4371b3:	je     0x436f78
  4371b9:	jmp    0x436b7a
  4371be:	xor    edx,edx
  4371c0:	jmp    0x436cce
  4371c5:	mov    rax,r15
  4371c8:	mov    edx,0x20
  4371cd:	xor    r9d,r9d
  4371d0:	jmp    0x436d2f
  4371d5:	movzx  edx,BYTE PTR [rsi+0x1]
  4371d9:	test   dl,dl
  4371db:	je     0x437304
  4371e1:	cmp    dl,BYTE PTR [rax+0x1]
  4371e4:	jne    0x437264
  4371e6:	mov    r12d,0x2
  4371ec:	jmp    0x4371fb
  4371ee:	xchg   ax,ax
  4371f0:	add    r12,0x1
  4371f4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  4371f9:	jne    0x437264
  4371fb:	movzx  edx,BYTE PTR [rsi+r12*1]
  437200:	test   dl,dl
  437202:	jne    0x4371f0
  437204:	add    r12,rax
  437207:	movzx  eax,BYTE PTR [r12]
  43720c:	cmp    BYTE PTR [rdi+rax*1],0x0
  437210:	mov    rdx,rax
  437213:	mov    rax,r12
  437216:	je     0x436c52
  43721c:	nop    DWORD PTR [rax+0x0]
  437220:	add    rax,0x1
  437224:	movzx  ecx,BYTE PTR [rax]
  437227:	cmp    BYTE PTR [rdi+rcx*1],0x0
  43722b:	mov    rdx,rcx
  43722e:	jne    0x437220
  437230:	jmp    0x436c52
  437235:	mov    edi,0x1
  43723a:	jmp    0x4370d2
  43723f:	mov    edi,0x2
  437244:	jmp    0x437047
  437249:	test   dil,0x2
  43724d:	je     0x437081
  437253:	or     edi,DWORD PTR [r15]
  437256:	and    edi,0x1
  437259:	jne    0x437133
  43725f:	jmp    0x437081
  437264:	movzx  edx,BYTE PTR [rax]
  437267:	xor    r12d,r12d
  43726a:	jmp    0x436c59
  43726f:	mov    edx,DWORD PTR [rsp+0x90]
  437276:	test   edx,edx
  437278:	je     0x436da0
  43727e:	mov    DWORD PTR [r14+0x14],0x1
  437286:	mov    DWORD PTR [r15],0x1
  43728d:	jmp    0x436f3f
  437292:	mov    ecx,DWORD PTR [rsp+0x90]
  437299:	test   ecx,ecx
  43729b:	je     0x43727e
  43729d:	jmp    0x436da0
  4372a2:	cmp    ebx,esi
  4372a4:	jne    0x436da0
  4372aa:	cmp    esi,0x1
  4372ad:	jle    0x43727e
  4372af:	lea    edx,[rsi-0x1]
  4372b2:	mov    rcx,r14
  4372b5:	call   0x438660
  4372ba:	test   eax,eax
  4372bc:	je     0x436da0
  4372c2:	mov    eax,DWORD PTR [r13+0x4]
  4372c6:	jmp    0x43727e
  4372c8:	xor    edx,edx
  4372ca:	jmp    0x436be1
  4372cf:	mov    eax,DWORD PTR [r13+0x0]
  4372d3:	mov    bl,0x22
  4372d5:	sub    eax,0x1
  4372d8:	cmp    eax,esi
  4372da:	jne    0x437084
  4372e0:	mov    edx,esi
  4372e2:	mov    eax,0x1
  4372e7:	mov    ecx,esi
  4372e9:	sar    edx,0x5
  4372ec:	shl    eax,cl
  4372ee:	movsxd rdx,edx
  4372f1:	and    eax,DWORD PTR [r8+rdx*4]
  4372f5:	cmp    eax,0x1
  4372f8:	sbb    ebx,ebx
  4372fa:	not    ebx
  4372fc:	add    ebx,0x22
  4372ff:	jmp    0x437084
  437304:	mov    r12d,0x1
  43730a:	jmp    0x437204
  43730f:	nop
  437310:	push   rbp
  437311:	push   rdi
  437312:	push   rsi
  437313:	push   rbx
  437314:	mov    rsi,rcx
  437317:	lea    r10,[rcx+0x18]
  43731b:	movsxd rcx,DWORD PTR [rcx+0x14]
  43731f:	mov    eax,edx
  437321:	sar    eax,0x5
  437324:	cmp    eax,ecx
  437326:	jge    0x4373b0
  43732c:	cdqe   
  43732e:	and    edx,0x1f
  437331:	lea    rbx,[r10+rcx*4]
  437335:	lea    rdi,[r10+rax*4]
  437339:	je     0x4373c3
  43733f:	mov    r9d,DWORD PTR [rdi]
  437342:	lea    r8,[rdi+0x4]
  437346:	mov    ebp,0x20
  43734b:	mov    ecx,edx
  43734d:	sub    ebp,edx
  43734f:	shr    r9d,cl
  437352:	cmp    rbx,r8
  437355:	jbe    0x437408
  43735b:	mov    r11,r10
  43735e:	xchg   ax,ax
  437360:	mov    eax,DWORD PTR [r8]
  437363:	mov    ecx,ebp
  437365:	add    r11,0x4
  437369:	add    r8,0x4
  43736d:	shl    eax,cl
  43736f:	mov    ecx,edx
  437371:	or     eax,r9d
  437374:	mov    DWORD PTR [r11-0x4],eax
  437378:	mov    r9d,DWORD PTR [r8-0x4]
  43737c:	shr    r9d,cl
  43737f:	cmp    rbx,r8
  437382:	ja     0x437360
  437384:	sub    rbx,rdi
  437387:	lea    rax,[rbx-0x5]
  43738b:	shr    rax,0x2
  43738f:	lea    rax,[r10+rax*4+0x4]
  437394:	test   r9d,r9d
  437397:	mov    DWORD PTR [rax],r9d
  43739a:	je     0x4373a0
  43739c:	add    rax,0x4
  4373a0:	sub    rax,r10
  4373a3:	shr    rax,0x2
  4373a7:	jmp    0x4373fc
  4373a9:	nop    DWORD PTR [rax+0x0]
  4373b0:	mov    DWORD PTR [rsi+0x14],0x0
  4373b7:	mov    DWORD PTR [rsi+0x18],0x0
  4373be:	pop    rbx
  4373bf:	pop    rsi
  4373c0:	pop    rdi
  4373c1:	pop    rbp
  4373c2:	ret    
  4373c3:	cmp    rbx,rdi
  4373c6:	mov    rdx,r10
  4373c9:	mov    rax,rdi
  4373cc:	jbe    0x4373b0
  4373ce:	xchg   ax,ax
  4373d0:	add    rax,0x4
  4373d4:	mov    r8d,DWORD PTR [rax-0x4]
  4373d8:	add    rdx,0x4
  4373dc:	cmp    rbx,rax
  4373df:	mov    DWORD PTR [rdx-0x4],r8d
  4373e3:	ja     0x4373d0
  4373e5:	not    rdi
  4373e8:	lea    rax,[rdi+rbx*1]
  4373ec:	shr    rax,0x2
  4373f0:	lea    rax,[rax*4+0x4]
  4373f8:	shr    rax,0x2
  4373fc:	test   eax,eax
  4373fe:	mov    DWORD PTR [rsi+0x14],eax
  437401:	je     0x4373b7
  437403:	pop    rbx
  437404:	pop    rsi
  437405:	pop    rdi
  437406:	pop    rbp
  437407:	ret    
  437408:	mov    rax,r10
  43740b:	jmp    0x437394
  43740d:	nop    DWORD PTR [rax]
  437410:	movsxd rax,DWORD PTR [rcx+0x14]
  437414:	lea    rdx,[rcx+0x18]
  437418:	lea    r8,[rdx+rax*4]
  43741c:	cmp    rdx,r8
  43741f:	jae    0x43744b
  437421:	mov    ecx,DWORD PTR [rcx+0x18]
  437424:	xor    eax,eax
  437426:	test   ecx,ecx
  437428:	je     0x437436
  43742a:	jmp    0x437444
  43742c:	nop    DWORD PTR [rax+0x0]
  437430:	mov    ecx,DWORD PTR [rdx]
  437432:	test   ecx,ecx
  437434:	jne    0x437444
  437436:	add    rdx,0x4
  43743a:	add    eax,0x20
  43743d:	cmp    r8,rdx
  437440:	ja     0x437430
  437442:	repz ret 
  437444:	tzcnt  ecx,ecx
  437448:	add    eax,ecx
  43744a:	ret    
  43744b:	xor    eax,eax
  43744d:	ret    
  43744e:	nop
  43744f:	nop
  437450:	lea    r8,[rip+0x44337]        # 0x47b78e
  437457:	lea    rdx,[rip+0x4e7e2]        # 0x485c40
  43745e:	mov    ecx,0x10
  437463:	mov    eax,0x30
  437468:	nop    DWORD PTR [rax+rax*1+0x0]
  437470:	mov    BYTE PTR [rdx+rax*1],cl
  437473:	movzx  eax,BYTE PTR [r8+0x1]
  437478:	add    ecx,0x1
  43747b:	add    r8,0x1
  43747f:	test   al,al
  437481:	jne    0x437470
  437483:	lea    r8,[rip+0x442fd]        # 0x47b787
  43748a:	mov    ecx,0x1a
  43748f:	mov    eax,0x61
  437494:	mov    BYTE PTR [rdx+rax*1],cl
  437497:	movzx  eax,BYTE PTR [r8+0x1]
  43749c:	add    ecx,0x1
  43749f:	add    r8,0x1
  4374a3:	test   al,al
  4374a5:	jne    0x437494
  4374a7:	lea    r8,[rip+0x442d2]        # 0x47b780
  4374ae:	mov    ecx,0x1a
  4374b3:	mov    eax,0x41
  4374b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4374c0:	mov    BYTE PTR [rdx+rax*1],cl
  4374c3:	movzx  eax,BYTE PTR [r8+0x1]
  4374c8:	add    ecx,0x1
  4374cb:	add    r8,0x1
  4374cf:	test   al,al
  4374d1:	jne    0x4374c0
  4374d3:	ret    
  4374d4:	nop
  4374d5:	nop
  4374d6:	nop
  4374d7:	nop
  4374d8:	nop
  4374d9:	nop
  4374da:	nop
  4374db:	nop
  4374dc:	nop
  4374dd:	nop
  4374de:	nop
  4374df:	nop
  4374e0:	push   r15
  4374e2:	push   r14
  4374e4:	push   r13
  4374e6:	push   r12
  4374e8:	push   rbp
  4374e9:	push   rdi
  4374ea:	push   rsi
  4374eb:	push   rbx
  4374ec:	sub    rsp,0x48
  4374f0:	mov    r14,QWORD PTR [rip+0x444b9]        # 0x47b9b0
  4374f7:	mov    QWORD PTR [rsp+0x90],rcx
  4374ff:	cmp    BYTE PTR [r14+0x30],0x0
  437504:	je     0x4377d6
  43750a:	mov    eax,DWORD PTR [rdx]
  43750c:	mov    edx,eax
  43750e:	sar    edx,0x5
  437511:	and    eax,0x1f
  437514:	movsxd rdx,edx
  437517:	mov    DWORD PTR [rsp+0x3c],eax
  43751b:	mov    rax,QWORD PTR [rsp+0x90]
  437523:	lea    rdi,[r8+rdx*4]
  437527:	lea    rdx,[rdi+0x4]
  43752b:	mov    rax,QWORD PTR [rax]
  43752e:	cmove  rdx,rdi
  437532:	mov    QWORD PTR [rsp+0x30],rdx
  437537:	lea    rsi,[rdx-0x4]
  43753b:	mov    DWORD PTR [rdx-0x4],0x0
  437542:	jmp    0x437548
  437544:	add    rax,0x1
  437548:	movzx  edx,BYTE PTR [rax+0x1]
  43754c:	mov    ecx,edx
  43754e:	sub    edx,0x1
  437551:	cmp    edx,0x1f
  437554:	jbe    0x437544
  437556:	cmp    cl,0x30
  437559:	je     0x4377f4
  43755f:	movzx  edx,BYTE PTR [rax+0x1]
  437563:	xor    r9d,r9d
  437566:	xor    r15d,r15d
  437569:	xor    r12d,r12d
  43756c:	test   edx,edx
  43756e:	mov    rbp,rsi
  437571:	mov    r11,rsi
  437574:	lea    rbx,[rax+0x1]
  437578:	je     0x437620
  43757e:	xchg   ax,ax
  437580:	mov    ecx,edx
  437582:	movzx  ecx,BYTE PTR [r14+rcx*1]
  437587:	test   cl,cl
  437589:	jne    0x4376f4
  43758f:	cmp    edx,0x20
  437592:	ja     0x4377a5
  437598:	cmp    r12d,r15d
  43759b:	jle    0x437735
  4375a1:	cmp    r9d,0x7
  4375a5:	jg     0x4375fa
  4375a7:	cmp    r11,rbp
  4375aa:	jae    0x4375fa
  4375ac:	mov    edi,0x8
  4375b1:	mov    edx,DWORD PTR [r11]
  4375b4:	mov    r13d,0x20
  4375ba:	sub    edi,r9d
  4375bd:	mov    QWORD PTR [rsp+0x28],rax
  4375c2:	mov    r9,r11
  4375c5:	shl    edi,0x2
  4375c8:	sub    r13d,edi
  4375cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4375d0:	mov    r10d,DWORD PTR [r9+0x4]
  4375d4:	mov    ecx,r13d
  4375d7:	add    r9,0x4
  4375db:	mov    eax,r10d
  4375de:	shl    eax,cl
  4375e0:	mov    ecx,edi
  4375e2:	or     edx,eax
  4375e4:	mov    DWORD PTR [r9-0x4],edx
  4375e8:	mov    edx,r10d
  4375eb:	shr    edx,cl
  4375ed:	mov    DWORD PTR [r9],edx
  4375f0:	cmp    rbp,r9
  4375f3:	ja     0x4375d0
  4375f5:	mov    rax,QWORD PTR [rsp+0x28]
  4375fa:	cmp    r11,r8
  4375fd:	ja     0x437720
  437603:	mov    rax,rbx
  437606:	mov    r9d,0x8
  43760c:	nop    DWORD PTR [rax+0x0]
  437610:	movzx  edx,BYTE PTR [rax+0x1]
  437614:	lea    rbx,[rax+0x1]
  437618:	test   edx,edx
  43761a:	jne    0x437580
  437620:	test   r12d,r12d
  437623:	mov    eax,0x4
  437628:	je     0x4376e3
  43762e:	mov    r10,r11
  437631:	cmp    r9d,0x7
  437635:	jg     0x437683
  437637:	cmp    rbp,r11
  43763a:	jbe    0x437683
  43763c:	mov    edi,0x8
  437641:	mov    eax,DWORD PTR [r11]
  437644:	mov    r12d,0x20
  43764a:	sub    edi,r9d
  43764d:	mov    r9,r11
  437650:	shl    edi,0x2
  437653:	sub    r12d,edi
  437656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437660:	mov    ebx,DWORD PTR [r9+0x4]
  437664:	mov    ecx,r12d
  437667:	add    r9,0x4
  43766b:	mov    edx,ebx
  43766d:	shl    edx,cl
  43766f:	mov    ecx,edi
  437671:	or     eax,edx
  437673:	mov    DWORD PTR [r9-0x4],eax
  437677:	mov    eax,ebx
  437679:	shr    eax,cl
  43767b:	mov    DWORD PTR [r9],eax
  43767e:	cmp    rbp,r9
  437681:	ja     0x437660
  437683:	cmp    r8,r11
  437686:	jae    0x437824
  43768c:	mov    rax,r8
  43768f:	nop
  437690:	add    r10,0x4
  437694:	mov    edx,DWORD PTR [r10-0x4]
  437698:	add    rax,0x4
  43769c:	cmp    rsi,r10
  43769f:	mov    DWORD PTR [rax-0x4],edx
  4376a2:	jae    0x437690
  4376a4:	add    rax,0x4
  4376a8:	mov    DWORD PTR [rax-0x4],0x0
  4376af:	cmp    rsi,rax
  4376b2:	jae    0x4376a4
  4376b4:	mov    rax,QWORD PTR [rsp+0x30]
  4376b9:	mov    eax,DWORD PTR [rax-0x4]
  4376bc:	test   eax,eax
  4376be:	je     0x4376d3
  4376c0:	jmp    0x43781a
  4376c5:	sub    rsi,0x4
  4376c9:	mov    eax,DWORD PTR [rsi]
  4376cb:	test   eax,eax
  4376cd:	jne    0x43781a
  4376d3:	cmp    r8,rsi
  4376d6:	jne    0x4376c5
  4376d8:	mov    DWORD PTR [rsi],0x1
  4376de:	mov    eax,0x5
  4376e3:	add    rsp,0x48
  4376e7:	pop    rbx
  4376e8:	pop    rsi
  4376e9:	pop    rdi
  4376ea:	pop    rbp
  4376eb:	pop    r12
  4376ed:	pop    r13
  4376ef:	pop    r14
  4376f1:	pop    r15
  4376f3:	ret    
  4376f4:	add    r9d,0x1
  4376f8:	add    r12d,0x1
  4376fc:	cmp    r9d,0x8
  437700:	jg     0x437780
  437702:	mov    eax,DWORD PTR [r11]
  437705:	shl    eax,0x4
  437708:	and    ecx,0xf
  43770b:	or     ecx,eax
  43770d:	mov    rax,rbx
  437710:	mov    DWORD PTR [r11],ecx
  437713:	jmp    0x437610
  437718:	nop    DWORD PTR [rax+rax*1+0x0]
  437720:	lea    rbp,[r11-0x4]
  437724:	mov    DWORD PTR [r11-0x4],0x0
  43772c:	mov    r15d,r12d
  43772f:	xor    r9d,r9d
  437732:	mov    r11,rbp
  437735:	movzx  edx,BYTE PTR [rax+0x2]
  437739:	mov    rax,rbx
  43773c:	cmp    dl,0x20
  43773f:	ja     0x43774e
  437741:	add    rax,0x1
  437745:	movzx  edx,BYTE PTR [rax+0x1]
  437749:	cmp    dl,0x20
  43774c:	jbe    0x437741
  43774e:	cmp    dl,0x30
  437751:	jne    0x437610
  437757:	movzx  edx,BYTE PTR [rax+0x2]
  43775b:	and    edx,0xffffffdf
  43775e:	cmp    dl,0x58
  437761:	jne    0x437610
  437767:	cmp    BYTE PTR [rax+0x3],0x21
  43776b:	lea    rdx,[rax+0x2]
  43776f:	cmovae rax,rdx
  437773:	jmp    0x437610
  437778:	nop    DWORD PTR [rax+rax*1+0x0]
  437780:	cmp    r11,r8
  437783:	mov    rax,rbx
  437786:	jbe    0x437610
  43778c:	mov    DWORD PTR [r11-0x4],0x0
  437794:	xor    eax,eax
  437796:	sub    r11,0x4
  43779a:	mov    r9d,0x1
  4377a0:	jmp    0x437708
  4377a5:	cmp    edx,0x29
  4377a8:	mov    rcx,rbx
  4377ab:	sete   dl
  4377ae:	test   r12d,r12d
  4377b1:	je     0x437850
  4377b7:	test   dl,dl
  4377b9:	je     0x437854
  4377bf:	mov    rbx,QWORD PTR [rsp+0x90]
  4377c7:	add    rax,0x2
  4377cb:	mov    r10,r11
  4377ce:	mov    QWORD PTR [rbx],rax
  4377d1:	jmp    0x437631
  4377d6:	mov    QWORD PTR [rsp+0x30],r8
  4377db:	mov    QWORD PTR [rsp+0x28],rdx
  4377e0:	call   0x437450
  4377e5:	mov    r8,QWORD PTR [rsp+0x30]
  4377ea:	mov    rdx,QWORD PTR [rsp+0x28]
  4377ef:	jmp    0x43750a
  4377f4:	movzx  edx,BYTE PTR [rax+0x2]
  4377f8:	and    edx,0xffffffdf
  4377fb:	cmp    dl,0x58
  4377fe:	jne    0x43755f
  437804:	movzx  edx,BYTE PTR [rax+0x3]
  437808:	cmp    dl,0x20
  43780b:	jbe    0x43755f
  437811:	add    rax,0x2
  437815:	jmp    0x437563
  43781a:	mov    eax,0x5
  43781f:	jmp    0x4376e3
  437824:	mov    edx,DWORD PTR [rsp+0x3c]
  437828:	test   edx,edx
  43782a:	je     0x4376b4
  437830:	mov    ecx,0x20
  437835:	sub    ecx,DWORD PTR [rsp+0x3c]
  437839:	mov    rbx,QWORD PTR [rsp+0x30]
  43783e:	mov    eax,0xffffffff
  437843:	shr    eax,cl
  437845:	and    eax,DWORD PTR [rbx-0x4]
  437848:	mov    DWORD PTR [rbx-0x4],eax
  43784b:	jmp    0x4376bc
  437850:	test   dl,dl
  437852:	jne    0x437872
  437854:	movsx  eax,BYTE PTR [rbx+0x1]
  437858:	lea    rcx,[rbx+0x1]
  43785c:	test   eax,eax
  43785e:	jne    0x43786d
  437860:	jmp    0x43788b
  437862:	add    rcx,0x1
  437866:	movsx  eax,BYTE PTR [rcx]
  437869:	test   eax,eax
  43786b:	je     0x43788b
  43786d:	cmp    eax,0x29
  437870:	jne    0x437862
  437872:	mov    rax,QWORD PTR [rsp+0x90]
  43787a:	add    rcx,0x1
  43787e:	mov    QWORD PTR [rax],rcx
  437881:	mov    eax,0x4
  437886:	jmp    0x4376e3
  43788b:	mov    al,0x4
  43788d:	jmp    0x4376e3
  437892:	nop
  437893:	nop
  437894:	nop
  437895:	nop
  437896:	nop
  437897:	nop
  437898:	nop
  437899:	nop
  43789a:	nop
  43789b:	nop
  43789c:	nop
  43789d:	nop
  43789e:	nop
  43789f:	nop
  4378a0:	push   rsi
  4378a1:	push   rbx
  4378a2:	sub    rsp,0x28
  4378a6:	mov    eax,DWORD PTR [rip+0x4e264]        # 0x485b10
  4378ac:	movsxd rsi,ecx
  4378af:	cmp    eax,0x2
  4378b2:	je     0x43791d
  4378b4:	test   eax,eax
  4378b6:	je     0x4378e2
  4378b8:	cmp    eax,0x1
  4378bb:	jne    0x4378db
  4378bd:	mov    rbx,QWORD PTR [rip+0x4ef34]        # 0x4867f8
  4378c4:	mov    ecx,0x1
  4378c9:	call   rbx
  4378cb:	mov    eax,DWORD PTR [rip+0x4e23f]        # 0x485b10
  4378d1:	cmp    eax,0x1
  4378d4:	je     0x4378c4
  4378d6:	cmp    eax,0x2
  4378d9:	je     0x43791d
  4378db:	add    rsp,0x28
  4378df:	pop    rbx
  4378e0:	pop    rsi
  4378e1:	ret    
  4378e2:	mov    al,0x1
  4378e4:	xchg   DWORD PTR [rip+0x4e226],eax        # 0x485b10
  4378ea:	test   eax,eax
  4378ec:	jne    0x437940
  4378ee:	lea    rcx,[rip+0x4e24b]        # 0x485b40
  4378f5:	mov    rbx,QWORD PTR [rip+0x4ee6c]        # 0x486768
  4378fc:	call   rbx
  4378fe:	lea    rcx,[rip+0x4e263]        # 0x485b68
  437905:	call   rbx
  437907:	lea    rcx,[rip+0x62]        # 0x437970
  43790e:	call   0x432c50
  437913:	mov    DWORD PTR [rip+0x4e1f3],0x2        # 0x485b10
  43791d:	lea    rdx,[rsi+rsi*4]
  437921:	lea    rax,[rip+0x4e218]        # 0x485b40
  437928:	lea    rcx,[rax+rdx*8]
  43792c:	mov    rax,QWORD PTR [rip+0x4ed35]        # 0x486668
  437933:	add    rsp,0x28
  437937:	pop    rbx
  437938:	pop    rsi
  437939:	rex.W jmp rax
  43793c:	nop    DWORD PTR [rax+0x0]
  437940:	cmp    eax,0x2
  437943:	je     0x437960
  437945:	mov    eax,DWORD PTR [rip+0x4e1c5]        # 0x485b10
  43794b:	cmp    eax,0x1
  43794e:	je     0x4378bd
  437954:	jmp    0x4378d6
  437956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437960:	mov    DWORD PTR [rip+0x4e1a6],0x2        # 0x485b10
  43796a:	jmp    0x43791d
  43796c:	nop    DWORD PTR [rax+0x0]
  437970:	push   rbx
  437971:	sub    rsp,0x20
  437975:	mov    eax,0x3
  43797a:	xchg   DWORD PTR [rip+0x4e190],eax        # 0x485b10
  437980:	cmp    eax,0x2
  437983:	je     0x437990
  437985:	add    rsp,0x20
  437989:	pop    rbx
  43798a:	ret    
  43798b:	nop    DWORD PTR [rax+rax*1+0x0]
  437990:	mov    rbx,QWORD PTR [rip+0x4ecc9]        # 0x486660
  437997:	lea    rcx,[rip+0x4e1a2]        # 0x485b40
  43799e:	call   rbx
  4379a0:	lea    rcx,[rip+0x4e1c1]        # 0x485b68
  4379a7:	mov    rax,rbx
  4379aa:	add    rsp,0x20
  4379ae:	pop    rbx
  4379af:	rex.W jmp rax
  4379b2:	nop    DWORD PTR [rax+0x0]
  4379b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4379c0:	push   rdi
  4379c1:	push   rsi
  4379c2:	push   rbx
  4379c3:	sub    rsp,0x20
  4379c7:	mov    ebx,ecx
  4379c9:	xor    ecx,ecx
  4379cb:	call   0x4378a0
  4379d0:	cmp    ebx,0x9
  4379d3:	jg     0x437a10
  4379d5:	lea    rdx,[rip+0x4e0e4]        # 0x485ac0
  4379dc:	movsxd rcx,ebx
  4379df:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4379e3:	test   rdi,rdi
  4379e6:	je     0x437a70
  4379ec:	cmp    DWORD PTR [rip+0x4e11d],0x2        # 0x485b10
  4379f3:	mov    r8,QWORD PTR [rdi]
  4379f6:	mov    QWORD PTR [rdx+rcx*8],r8
  4379fa:	jne    0x437a56
  4379fc:	lea    rcx,[rip+0x4e13d]        # 0x485b40
  437a03:	call   QWORD PTR [rip+0x4ed7f]        # 0x486788
  437a09:	jmp    0x437a56
  437a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a10:	mov    eax,0x1
  437a15:	mov    ecx,ebx
  437a17:	shl    eax,cl
  437a19:	mov    esi,eax
  437a1b:	lea    eax,[rax-0x1]
  437a1e:	cdqe   
  437a20:	lea    rdx,[rax*4+0x27]
  437a28:	shr    rdx,0x3
  437a2c:	mov    edx,edx
  437a2e:	lea    rcx,[rdx*8+0x0]
  437a36:	call   0x438800
  437a3b:	test   rax,rax
  437a3e:	mov    rdi,rax
  437a41:	je     0x437aca
  437a47:	cmp    DWORD PTR [rip+0x4e0c2],0x2        # 0x485b10
  437a4e:	mov    DWORD PTR [rdi+0x8],ebx
  437a51:	mov    DWORD PTR [rdi+0xc],esi
  437a54:	je     0x4379fc
  437a56:	mov    DWORD PTR [rdi+0x14],0x0
  437a5d:	mov    DWORD PTR [rdi+0x10],0x0
  437a64:	mov    rax,rdi
  437a67:	add    rsp,0x20
  437a6b:	pop    rbx
  437a6c:	pop    rsi
  437a6d:	pop    rdi
  437a6e:	ret    
  437a6f:	nop
  437a70:	mov    ecx,ebx
  437a72:	mov    eax,0x1
  437a77:	mov    rdi,QWORD PTR [rip+0x2f82]        # 0x43aa00
  437a7e:	shl    eax,cl
  437a80:	lea    rcx,[rip+0x4d739]        # 0x4851c0
  437a87:	lea    edx,[rax-0x1]
  437a8a:	mov    esi,eax
  437a8c:	mov    rax,rdi
  437a8f:	movsxd rdx,edx
  437a92:	sub    rax,rcx
  437a95:	lea    rdx,[rdx*4+0x27]
  437a9d:	mov    rcx,rax
  437aa0:	sar    rcx,0x3
  437aa4:	shr    rdx,0x3
  437aa8:	mov    edx,edx
  437aaa:	add    rcx,rdx
  437aad:	cmp    rcx,0x120
  437ab4:	ja     0x437a2e
  437aba:	lea    rdx,[rdi+rdx*8]
  437abe:	mov    QWORD PTR [rip+0x2f3b],rdx        # 0x43aa00
  437ac5:	jmp    0x437a47
  437aca:	xor    eax,eax
  437acc:	jmp    0x437a67
  437ace:	xchg   ax,ax
  437ad0:	push   rbx
  437ad1:	sub    rsp,0x20
  437ad5:	test   rcx,rcx
  437ad8:	je     0x437b09
  437ada:	cmp    DWORD PTR [rcx+0x8],0x9
  437ade:	jg     0x437b10
  437ae0:	mov    rbx,rcx
  437ae3:	xor    ecx,ecx
  437ae5:	call   0x4378a0
  437aea:	movsxd rdx,DWORD PTR [rbx+0x8]
  437aee:	lea    rax,[rip+0x4dfcb]        # 0x485ac0
  437af5:	cmp    DWORD PTR [rip+0x4e014],0x2        # 0x485b10
  437afc:	mov    rcx,QWORD PTR [rax+rdx*8]
  437b00:	mov    QWORD PTR [rax+rdx*8],rbx
  437b04:	mov    QWORD PTR [rbx],rcx
  437b07:	je     0x437b20
  437b09:	add    rsp,0x20
  437b0d:	pop    rbx
  437b0e:	ret    
  437b0f:	nop
  437b10:	add    rsp,0x20
  437b14:	pop    rbx
  437b15:	jmp    0x438850
  437b1a:	nop    WORD PTR [rax+rax*1+0x0]
  437b20:	mov    rax,QWORD PTR [rip+0x4ec61]        # 0x486788
  437b27:	lea    rcx,[rip+0x4e012]        # 0x485b40
  437b2e:	add    rsp,0x20
  437b32:	pop    rbx
  437b33:	rex.W jmp rax
  437b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b40:	push   rbp
  437b41:	push   rdi
  437b42:	push   rsi
  437b43:	push   rbx
  437b44:	sub    rsp,0x28
  437b48:	mov    esi,DWORD PTR [rcx+0x14]
  437b4b:	xor    r9d,r9d
  437b4e:	lea    r10,[rcx+0x18]
  437b52:	mov    rdi,rcx
  437b55:	movsxd rbx,r8d
  437b58:	movsxd rdx,edx
  437b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  437b60:	mov    eax,DWORD PTR [r10+r9*4]
  437b64:	imul   rax,rdx
  437b68:	add    rax,rbx
  437b6b:	mov    rbx,rax
  437b6e:	mov    DWORD PTR [r10+r9*4],eax
  437b72:	add    r9,0x1
  437b76:	shr    rbx,0x20
  437b7a:	cmp    esi,r9d
  437b7d:	jg     0x437b60
  437b7f:	test   rbx,rbx
  437b82:	mov    rax,rdi
  437b85:	je     0x437b9c
  437b87:	cmp    esi,DWORD PTR [rdi+0xc]
  437b8a:	jge    0x437ba5
  437b8c:	movsxd rax,esi
  437b8f:	add    esi,0x1
  437b92:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  437b96:	mov    DWORD PTR [rdi+0x14],esi
  437b99:	mov    rax,rdi
  437b9c:	add    rsp,0x28
  437ba0:	pop    rbx
  437ba1:	pop    rsi
  437ba2:	pop    rdi
  437ba3:	pop    rbp
  437ba4:	ret    
  437ba5:	mov    eax,DWORD PTR [rdi+0x8]
  437ba8:	lea    ecx,[rax+0x1]
  437bab:	call   0x4379c0
  437bb0:	test   rax,rax
  437bb3:	mov    rbp,rax
  437bb6:	je     0x437bee
  437bb8:	lea    rcx,[rax+0x10]
  437bbc:	movsxd rax,DWORD PTR [rdi+0x14]
  437bc0:	lea    rdx,[rdi+0x10]
  437bc4:	lea    r8,[rax*4+0x8]
  437bcc:	call   0x4387f0
  437bd1:	mov    rcx,rdi
  437bd4:	mov    rdi,rbp
  437bd7:	call   0x437ad0
  437bdc:	movsxd rax,esi
  437bdf:	add    esi,0x1
  437be2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  437be6:	mov    DWORD PTR [rdi+0x14],esi
  437be9:	mov    rax,rdi
  437bec:	jmp    0x437b9c
  437bee:	xor    eax,eax
  437bf0:	jmp    0x437b9c
  437bf2:	nop    DWORD PTR [rax+0x0]
  437bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c00:	push   rbx
  437c01:	sub    rsp,0x20
  437c05:	mov    ebx,ecx
  437c07:	mov    ecx,0x1
  437c0c:	call   0x4379c0
  437c11:	test   rax,rax
  437c14:	je     0x437c20
  437c16:	mov    DWORD PTR [rax+0x18],ebx
  437c19:	mov    DWORD PTR [rax+0x14],0x1
  437c20:	add    rsp,0x20
  437c24:	pop    rbx
  437c25:	ret    
  437c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c30:	push   r14
  437c32:	push   r13
  437c34:	push   r12
  437c36:	push   rbp
  437c37:	push   rdi
  437c38:	push   rsi
  437c39:	push   rbx
  437c3a:	sub    rsp,0x20
  437c3e:	movsxd r13,DWORD PTR [rcx+0x14]
  437c42:	movsxd rbx,DWORD PTR [rdx+0x14]
  437c46:	mov    r12,rcx
  437c49:	mov    r14,rdx
  437c4c:	cmp    r13d,ebx
  437c4f:	jl     0x437d51
  437c55:	mov    eax,ebx
  437c57:	movsxd rbx,r13d
  437c5a:	movsxd r13,eax
  437c5d:	xor    eax,eax
  437c5f:	lea    esi,[rbx+r13*1]
  437c63:	cmp    esi,DWORD PTR [r12+0xc]
  437c68:	setg   al
  437c6b:	add    eax,DWORD PTR [r12+0x8]
  437c70:	mov    ecx,eax
  437c72:	call   0x4379c0
  437c77:	test   rax,rax
  437c7a:	je     0x437d5c
  437c80:	lea    rdi,[rax+0x18]
  437c84:	movsxd rdx,esi
  437c87:	lea    rbp,[rdi+rdx*4]
  437c8b:	mov    r8,rdi
  437c8e:	cmp    rdi,rbp
  437c91:	jae    0x437ca3
  437c93:	mov    DWORD PTR [r8],0x0
  437c9a:	add    r8,0x4
  437c9e:	cmp    rbp,r8
  437ca1:	ja     0x437c93
  437ca3:	lea    rdx,[r14+0x18]
  437ca7:	add    r12,0x18
  437cab:	lea    rbx,[r12+rbx*4]
  437caf:	lea    r13,[rdx+r13*4]
  437cb3:	cmp    rdx,r13
  437cb6:	jae    0x437d19
  437cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  437cc0:	add    rdx,0x4
  437cc4:	mov    r11d,DWORD PTR [rdx-0x4]
  437cc8:	test   r11d,r11d
  437ccb:	je     0x437d10
  437ccd:	mov    r9,rdi
  437cd0:	mov    r8,r12
  437cd3:	xor    r10d,r10d
  437cd6:	jmp    0x437ce3
  437cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  437ce0:	mov    r9,r14
  437ce3:	add    r8,0x4
  437ce7:	mov    ecx,DWORD PTR [r8-0x4]
  437ceb:	mov    r14d,DWORD PTR [r9]
  437cee:	imul   rcx,r11
  437cf2:	add    rcx,r14
  437cf5:	lea    r14,[r9+0x4]
  437cf9:	add    rcx,r10
  437cfc:	mov    r10,rcx
  437cff:	mov    DWORD PTR [r14-0x4],ecx
  437d03:	shr    r10,0x20
  437d07:	cmp    rbx,r8
  437d0a:	ja     0x437ce0
  437d0c:	mov    DWORD PTR [r9+0x4],r10d
  437d10:	add    rdi,0x4
  437d14:	cmp    r13,rdx
  437d17:	ja     0x437cc0
  437d19:	test   esi,esi
  437d1b:	jle    0x437d3f
  437d1d:	mov    r8d,DWORD PTR [rbp-0x4]
  437d21:	lea    rdx,[rbp-0x4]
  437d25:	test   r8d,r8d
  437d28:	je     0x437d3a
  437d2a:	jmp    0x437d3f
  437d2c:	nop    DWORD PTR [rax+0x0]
  437d30:	sub    rdx,0x4
  437d34:	mov    ecx,DWORD PTR [rdx]
  437d36:	test   ecx,ecx
  437d38:	jne    0x437d3f
  437d3a:	sub    esi,0x1
  437d3d:	jne    0x437d30
  437d3f:	mov    DWORD PTR [rax+0x14],esi
  437d42:	add    rsp,0x20
  437d46:	pop    rbx
  437d47:	pop    rsi
  437d48:	pop    rdi
  437d49:	pop    rbp
  437d4a:	pop    r12
  437d4c:	pop    r13
  437d4e:	pop    r14
  437d50:	ret    
  437d51:	mov    r12,rdx
  437d54:	mov    r14,rcx
  437d57:	jmp    0x437c5d
  437d5c:	xor    eax,eax
  437d5e:	jmp    0x437d42
  437d60:	push   rbp
  437d61:	push   rdi
  437d62:	push   rsi
  437d63:	push   rbx
  437d64:	sub    rsp,0x28
  437d68:	mov    eax,edx
  437d6a:	mov    rbp,rcx
  437d6d:	mov    ebx,edx
  437d6f:	and    eax,0x3
  437d72:	jne    0x437e00
  437d78:	sar    ebx,0x2
  437d7b:	mov    rax,rbp
  437d7e:	test   ebx,ebx
  437d80:	je     0x437dcc
  437d82:	mov    rdi,QWORD PTR [rip+0x4d3f7]        # 0x485180
  437d89:	test   rdi,rdi
  437d8c:	jne    0x437da2
  437d8e:	jmp    0x437e4d
  437d93:	sar    ebx,1
  437d95:	je     0x437dc9
  437d97:	mov    rsi,QWORD PTR [rdi]
  437d9a:	test   rsi,rsi
  437d9d:	je     0x437dd5
  437d9f:	mov    rdi,rsi
  437da2:	test   bl,0x1
  437da5:	je     0x437d93
  437da7:	mov    rdx,rdi
  437daa:	mov    rcx,rbp
  437dad:	call   0x437c30
  437db2:	test   rax,rax
  437db5:	mov    rsi,rax
  437db8:	je     0x437e23
  437dba:	mov    rcx,rbp
  437dbd:	mov    rbp,rsi
  437dc0:	call   0x437ad0
  437dc5:	sar    ebx,1
  437dc7:	jne    0x437d97
  437dc9:	mov    rax,rbp
  437dcc:	add    rsp,0x28
  437dd0:	pop    rbx
  437dd1:	pop    rsi
  437dd2:	pop    rdi
  437dd3:	pop    rbp
  437dd4:	ret    
  437dd5:	mov    ecx,0x1
  437dda:	call   0x4378a0
  437ddf:	mov    rsi,QWORD PTR [rdi]
  437de2:	test   rsi,rsi
  437de5:	je     0x437e2e
  437de7:	cmp    DWORD PTR [rip+0x4dd22],0x2        # 0x485b10
  437dee:	jne    0x437d9f
  437df0:	lea    rcx,[rip+0x4dd71]        # 0x485b68
  437df7:	call   QWORD PTR [rip+0x4e98b]        # 0x486788
  437dfd:	jmp    0x437d9f
  437dff:	nop
  437e00:	sub    eax,0x1
  437e03:	lea    rdx,[rip+0x439b6]        # 0x47b7c0
  437e0a:	xor    r8d,r8d
  437e0d:	cdqe   
  437e0f:	mov    edx,DWORD PTR [rdx+rax*4]
  437e12:	call   0x437b40
  437e17:	test   rax,rax
  437e1a:	mov    rbp,rax
  437e1d:	jne    0x437d78
  437e23:	xor    eax,eax
  437e25:	add    rsp,0x28
  437e29:	pop    rbx
  437e2a:	pop    rsi
  437e2b:	pop    rdi
  437e2c:	pop    rbp
  437e2d:	ret    
  437e2e:	mov    rdx,rdi
  437e31:	mov    rcx,rdi
  437e34:	call   0x437c30
  437e39:	test   rax,rax
  437e3c:	mov    rsi,rax
  437e3f:	mov    QWORD PTR [rdi],rax
  437e42:	je     0x437e23
  437e44:	mov    QWORD PTR [rax],0x0
  437e4b:	jmp    0x437de7
  437e4d:	mov    ecx,0x1
  437e52:	call   0x4378a0
  437e57:	mov    rdi,QWORD PTR [rip+0x4d322]        # 0x485180
  437e5e:	test   rdi,rdi
  437e61:	je     0x437e82
  437e63:	cmp    DWORD PTR [rip+0x4dca6],0x2        # 0x485b10
  437e6a:	jne    0x437da2
  437e70:	lea    rcx,[rip+0x4dcf1]        # 0x485b68
  437e77:	call   QWORD PTR [rip+0x4e90b]        # 0x486788
  437e7d:	jmp    0x437da2
  437e82:	mov    ecx,0x1
  437e87:	call   0x4379c0
  437e8c:	test   rax,rax
  437e8f:	mov    rdi,rax
  437e92:	je     0x437eb2
  437e94:	mov    DWORD PTR [rax+0x18],0x271
  437e9b:	mov    DWORD PTR [rax+0x14],0x1
  437ea2:	mov    QWORD PTR [rip+0x4d2d7],rax        # 0x485180
  437ea9:	mov    QWORD PTR [rax],0x0
  437eb0:	jmp    0x437e63
  437eb2:	mov    QWORD PTR [rip+0x4d2c3],0x0        # 0x485180
  437ebd:	xor    eax,eax
  437ebf:	jmp    0x437e25
  437ec4:	xchg   ax,ax
  437ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437ed0:	push   r13
  437ed2:	push   r12
  437ed4:	push   rbp
  437ed5:	push   rdi
  437ed6:	push   rsi
  437ed7:	push   rbx
  437ed8:	sub    rsp,0x28
  437edc:	mov    rdi,rcx
  437edf:	mov    ebp,edx
  437ee1:	mov    esi,edx
  437ee3:	mov    r12d,DWORD PTR [rdi+0x14]
  437ee7:	sar    ebp,0x5
  437eea:	mov    eax,DWORD PTR [rdi+0xc]
  437eed:	mov    ecx,DWORD PTR [rcx+0x8]
  437ef0:	add    r12d,ebp
  437ef3:	lea    ebx,[r12+0x1]
  437ef8:	cmp    ebx,eax
  437efa:	jle    0x437f09
  437efc:	nop    DWORD PTR [rax+0x0]
  437f00:	add    eax,eax
  437f02:	add    ecx,0x1
  437f05:	cmp    ebx,eax
  437f07:	jg     0x437f00
  437f09:	call   0x4379c0
  437f0e:	test   rax,rax
  437f11:	mov    r13,rax
  437f14:	je     0x437fdf
  437f1a:	test   ebp,ebp
  437f1c:	lea    r8,[rax+0x18]
  437f20:	jle    0x437fd7
  437f26:	lea    eax,[rbp-0x1]
  437f29:	lea    r9,[r8+rax*4+0x4]
  437f2e:	xchg   ax,ax
  437f30:	add    r8,0x4
  437f34:	mov    DWORD PTR [r8-0x4],0x0
  437f3c:	cmp    r8,r9
  437f3f:	jne    0x437f30
  437f41:	movsxd rax,DWORD PTR [rdi+0x14]
  437f45:	lea    r8,[rdi+0x18]
  437f49:	mov    edx,esi
  437f4b:	and    edx,0x1f
  437f4e:	lea    rbp,[r8+rax*4]
  437f52:	je     0x437fc0
  437f54:	mov    eax,0x20
  437f59:	xor    r11d,r11d
  437f5c:	sub    eax,edx
  437f5e:	jmp    0x437f63
  437f60:	mov    r9,rsi
  437f63:	mov    r10d,DWORD PTR [r8]
  437f66:	mov    ecx,edx
  437f68:	lea    rsi,[r9+0x4]
  437f6c:	add    r8,0x4
  437f70:	shl    r10d,cl
  437f73:	mov    ecx,eax
  437f75:	or     r10d,r11d
  437f78:	mov    DWORD PTR [rsi-0x4],r10d
  437f7c:	mov    r11d,DWORD PTR [r8-0x4]
  437f80:	shr    r11d,cl
  437f83:	cmp    rbp,r8
  437f86:	ja     0x437f60
  437f88:	add    r12d,0x2
  437f8c:	test   r11d,r11d
  437f8f:	mov    DWORD PTR [r9+0x4],r11d
  437f93:	cmovne ebx,r12d
  437f97:	sub    ebx,0x1
  437f9a:	mov    rcx,rdi
  437f9d:	mov    DWORD PTR [r13+0x14],ebx
  437fa1:	call   0x437ad0
  437fa6:	mov    rax,r13
  437fa9:	add    rsp,0x28
  437fad:	pop    rbx
  437fae:	pop    rsi
  437faf:	pop    rdi
  437fb0:	pop    rbp
  437fb1:	pop    r12
  437fb3:	pop    r13
  437fb5:	ret    
  437fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437fc0:	add    r8,0x4
  437fc4:	mov    edx,DWORD PTR [r8-0x4]
  437fc8:	add    r9,0x4
  437fcc:	cmp    rbp,r8
  437fcf:	mov    DWORD PTR [r9-0x4],edx
  437fd3:	ja     0x437fc0
  437fd5:	jmp    0x437f97
  437fd7:	mov    r9,r8
  437fda:	jmp    0x437f41
  437fdf:	xor    eax,eax
  437fe1:	jmp    0x437fa9
  437fe3:	nop    DWORD PTR [rax]
  437fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437ff0:	movsxd r8,DWORD PTR [rdx+0x14]
  437ff4:	mov    eax,DWORD PTR [rcx+0x14]
  437ff7:	sub    eax,r8d
  437ffa:	test   eax,eax
  437ffc:	jne    0x438032
  437ffe:	shl    r8,0x2
  438002:	add    rcx,0x18
  438006:	lea    rax,[rcx+r8*1]
  43800a:	lea    rdx,[rdx+r8*1+0x18]
  43800f:	jmp    0x438016
  438011:	cmp    rcx,rax
  438014:	jae    0x438030
  438016:	sub    rdx,0x4
  43801a:	sub    rax,0x4
  43801e:	mov    r9d,DWORD PTR [rdx]
  438021:	cmp    DWORD PTR [rax],r9d
  438024:	je     0x438011
  438026:	sbb    eax,eax
  438028:	or     eax,0x1
  43802b:	ret    
  43802c:	nop    DWORD PTR [rax+0x0]
  438030:	xor    eax,eax
  438032:	repz ret 
  438034:	xchg   ax,ax
  438036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438040:	push   rdi
  438041:	push   rsi
  438042:	push   rbx
  438043:	sub    rsp,0x20
  438047:	mov    rsi,rcx
  43804a:	mov    rdi,rdx
  43804d:	call   0x437ff0
  438052:	test   eax,eax
  438054:	je     0x438140
  43805a:	mov    ebx,0x0
  43805f:	js     0x438162
  438065:	mov    ecx,DWORD PTR [rsi+0x8]
  438068:	call   0x4379c0
  43806d:	test   rax,rax
  438070:	je     0x438172
  438076:	movsxd rdx,DWORD PTR [rsi+0x14]
  43807a:	lea    rcx,[rsi+0x18]
  43807e:	mov    DWORD PTR [rax+0x10],ebx
  438081:	lea    r10,[rdi+0x18]
  438085:	xor    r9d,r9d
  438088:	mov    rbx,rdx
  43808b:	lea    rsi,[rcx+rdx*4]
  43808f:	movsxd rdx,DWORD PTR [rdi+0x14]
  438093:	lea    rdi,[r10+rdx*4]
  438097:	lea    rdx,[rax+0x18]
  43809b:	nop    DWORD PTR [rax+rax*1+0x0]
  4380a0:	add    rcx,0x4
  4380a4:	add    r10,0x4
  4380a8:	mov    r11d,DWORD PTR [r10-0x4]
  4380ac:	mov    r8d,DWORD PTR [rcx-0x4]
  4380b0:	add    rdx,0x4
  4380b4:	sub    r8,r11
  4380b7:	sub    r8,r9
  4380ba:	mov    r9,r8
  4380bd:	mov    r11d,r8d
  4380c0:	mov    DWORD PTR [rdx-0x4],r8d
  4380c4:	shr    r9,0x20
  4380c8:	and    r9d,0x1
  4380cc:	cmp    rdi,r10
  4380cf:	ja     0x4380a0
  4380d1:	cmp    rsi,rcx
  4380d4:	mov    rdi,rdx
  4380d7:	mov    r10,rcx
  4380da:	jbe    0x438116
  4380dc:	nop    DWORD PTR [rax+0x0]
  4380e0:	add    rcx,0x4
  4380e4:	mov    r8d,DWORD PTR [rcx-0x4]
  4380e8:	add    rdx,0x4
  4380ec:	sub    r8,r9
  4380ef:	mov    r9,r8
  4380f2:	mov    r11d,r8d
  4380f5:	mov    DWORD PTR [rdx-0x4],r8d
  4380f9:	shr    r9,0x20
  4380fd:	and    r9d,0x1
  438101:	cmp    rsi,rcx
  438104:	ja     0x4380e0
  438106:	not    r10
  438109:	lea    rdx,[r10+rsi*1]
  43810d:	shr    rdx,0x2
  438111:	lea    rdx,[rdi+rdx*4+0x4]
  438116:	sub    rdx,0x4
  43811a:	test   r11d,r11d
  43811d:	jne    0x43812d
  43811f:	nop
  438120:	sub    rdx,0x4
  438124:	mov    ecx,DWORD PTR [rdx]
  438126:	sub    ebx,0x1
  438129:	test   ecx,ecx
  43812b:	je     0x438120
  43812d:	mov    DWORD PTR [rax+0x14],ebx
  438130:	add    rsp,0x20
  438134:	pop    rbx
  438135:	pop    rsi
  438136:	pop    rdi
  438137:	ret    
  438138:	nop    DWORD PTR [rax+rax*1+0x0]
  438140:	xor    ecx,ecx
  438142:	call   0x4379c0
  438147:	test   rax,rax
  43814a:	je     0x438172
  43814c:	mov    DWORD PTR [rax+0x14],0x1
  438153:	mov    DWORD PTR [rax+0x18],0x0
  43815a:	add    rsp,0x20
  43815e:	pop    rbx
  43815f:	pop    rsi
  438160:	pop    rdi
  438161:	ret    
  438162:	mov    rax,rsi
  438165:	mov    bl,0x1
  438167:	mov    rsi,rdi
  43816a:	mov    rdi,rax
  43816d:	jmp    0x438065
  438172:	xor    eax,eax
  438174:	jmp    0x438130
  438176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438180:	push   rsi
  438181:	push   rbx
  438182:	sub    rsp,0x18
  438186:	movsxd rax,DWORD PTR [rcx+0x14]
  43818a:	lea    r10,[rcx+0x18]
  43818e:	mov    ecx,0x20
  438193:	lea    r9,[r10+rax*4]
  438197:	mov    eax,DWORD PTR [r9-0x4]
  43819b:	lea    rbx,[r9-0x4]
  43819f:	bsr    r8d,eax
  4381a3:	xor    r8d,0x1f
  4381a7:	sub    ecx,r8d
  4381aa:	cmp    r8d,0xa
  4381ae:	mov    DWORD PTR [rdx],ecx
  4381b0:	jg     0x438200
  4381b2:	mov    ecx,0xb
  4381b7:	mov    r11d,eax
  4381ba:	xor    esi,esi
  4381bc:	sub    ecx,r8d
  4381bf:	shr    r11d,cl
  4381c2:	or     r11d,0x3ff00000
  4381c9:	shl    r11,0x20
  4381cd:	cmp    r10,rbx
  4381d0:	jae    0x4381d8
  4381d2:	mov    esi,DWORD PTR [r9-0x8]
  4381d6:	shr    esi,cl
  4381d8:	lea    ecx,[r8+0x15]
  4381dc:	shl    eax,cl
  4381de:	mov    edx,eax
  4381e0:	mov    eax,esi
  4381e2:	or     eax,edx
  4381e4:	or     rax,r11
  4381e7:	mov    QWORD PTR [rsp+0x8],rax
  4381ec:	movsd  xmm0,QWORD PTR [rsp+0x8]
  4381f2:	add    rsp,0x18
  4381f6:	pop    rbx
  4381f7:	pop    rsi
  4381f8:	ret    
  4381f9:	nop    DWORD PTR [rax+0x0]
  438200:	cmp    r10,rbx
  438203:	jae    0x438260
  438205:	mov    r11d,r8d
  438208:	lea    rsi,[r9-0x8]
  43820c:	mov    edx,DWORD PTR [r9-0x8]
  438210:	sub    r11d,0xb
  438214:	je     0x438282
  438216:	mov    ebx,0x2b
  43821b:	mov    ecx,r11d
  43821e:	sub    ebx,r8d
  438221:	shl    eax,cl
  438223:	mov    r8d,edx
  438226:	mov    ecx,ebx
  438228:	shr    r8d,cl
  43822b:	or     eax,r8d
  43822e:	xor    r8d,r8d
  438231:	or     eax,0x3ff00000
  438236:	shl    rax,0x20
  43823a:	cmp    r10,rsi
  43823d:	jae    0x438246
  43823f:	mov    r8d,DWORD PTR [r9-0xc]
  438243:	shr    r8d,cl
  438246:	mov    ecx,r11d
  438249:	shl    edx,cl
  43824b:	or     r8d,edx
  43824e:	movabs rdx,0xffffffff00000000
  438258:	and    rax,rdx
  43825b:	or     rax,r8
  43825e:	jmp    0x4381e7
  438260:	mov    r11d,r8d
  438263:	sub    r11d,0xb
  438267:	je     0x438280
  438269:	mov    ecx,r11d
  43826c:	xor    r8d,r8d
  43826f:	xor    edx,edx
  438271:	shl    eax,cl
  438273:	or     eax,0x3ff00000
  438278:	shl    rax,0x20
  43827c:	jmp    0x438246
  43827e:	xchg   ax,ax
  438280:	xor    edx,edx
  438282:	or     eax,0x3ff00000
  438287:	shl    rax,0x20
  43828b:	or     rax,rdx
  43828e:	jmp    0x4381e7
  438293:	nop    DWORD PTR [rax]
  438296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4382a0:	push   rdi
  4382a1:	push   rsi
  4382a2:	push   rbx
  4382a3:	sub    rsp,0x20
  4382a7:	mov    ecx,0x1
  4382ac:	movq   rbx,xmm0
  4382b1:	mov    rdi,rdx
  4382b4:	mov    rsi,r8
  4382b7:	call   0x4379c0
  4382bc:	test   rax,rax
  4382bf:	je     0x4383a5
  4382c5:	mov    r9,rbx
  4382c8:	shr    r9,0x20
  4382cc:	mov    r10d,r9d
  4382cf:	and    r9d,0x7fffffff
  4382d6:	and    r10d,0xfffff
  4382dd:	shr    r9d,0x14
  4382e1:	mov    edx,r10d
  4382e4:	or     edx,0x100000
  4382ea:	test   r9d,r9d
  4382ed:	cmovne r10d,edx
  4382f1:	test   ebx,ebx
  4382f3:	jne    0x438334
  4382f5:	xor    ecx,ecx
  4382f7:	mov    DWORD PTR [rax+0x14],0x1
  4382fe:	mov    edx,0x1
  438303:	tzcnt  ecx,r10d
  438308:	shr    r10d,cl
  43830b:	test   r9d,r9d
  43830e:	lea    r11d,[rcx+0x20]
  438312:	mov    DWORD PTR [rax+0x18],r10d
  438316:	je     0x438373
  438318:	lea    edx,[r11+r9*1-0x433]
  438320:	mov    DWORD PTR [rdi],edx
  438322:	mov    edx,0x35
  438327:	sub    edx,r11d
  43832a:	mov    DWORD PTR [rsi],edx
  43832c:	add    rsp,0x20
  438330:	pop    rbx
  438331:	pop    rsi
  438332:	pop    rdi
  438333:	ret    
  438334:	xor    r11d,r11d
  438337:	tzcnt  r11d,ebx
  43833c:	mov    ecx,r11d
  43833f:	shr    ebx,cl
  438341:	test   r11d,r11d
  438344:	je     0x4383a0
  438346:	mov    ecx,0x20
  43834b:	mov    edx,r10d
  43834e:	sub    ecx,r11d
  438351:	shl    edx,cl
  438353:	mov    ecx,r11d
  438356:	or     ebx,edx
  438358:	shr    r10d,cl
  43835b:	mov    DWORD PTR [rax+0x18],ebx
  43835e:	cmp    r10d,0x1
  438362:	mov    DWORD PTR [rax+0x1c],r10d
  438366:	sbb    edx,edx
  438368:	add    edx,0x2
  43836b:	test   r9d,r9d
  43836e:	mov    DWORD PTR [rax+0x14],edx
  438371:	jne    0x438318
  438373:	movsxd rcx,edx
  438376:	shl    edx,0x5
  438379:	sub    r11d,0x432
  438380:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  438385:	mov    DWORD PTR [rdi],r11d
  438388:	xor    ecx,0x1f
  43838b:	sub    edx,ecx
  43838d:	mov    DWORD PTR [rsi],edx
  43838f:	add    rsp,0x20
  438393:	pop    rbx
  438394:	pop    rsi
  438395:	pop    rdi
  438396:	ret    
  438397:	nop    WORD PTR [rax+rax*1+0x0]
  4383a0:	mov    DWORD PTR [rax+0x18],ebx
  4383a3:	jmp    0x43835e
  4383a5:	xor    eax,eax
  4383a7:	jmp    0x43832c
  4383a9:	nop    DWORD PTR [rax+0x0]
  4383b0:	mov    rax,rcx
  4383b3:	lea    rcx,[rdx+0x1]
  4383b7:	movzx  edx,BYTE PTR [rdx]
  4383ba:	test   dl,dl
  4383bc:	mov    BYTE PTR [rax],dl
  4383be:	je     0x4383d2
  4383c0:	add    rcx,0x1
  4383c4:	movzx  edx,BYTE PTR [rcx-0x1]
  4383c8:	add    rax,0x1
  4383cc:	test   dl,dl
  4383ce:	mov    BYTE PTR [rax],dl
  4383d0:	jne    0x4383c0
  4383d2:	repz ret 
  4383d4:	nop
  4383d5:	nop
  4383d6:	nop
  4383d7:	nop
  4383d8:	nop
  4383d9:	nop
  4383da:	nop
  4383db:	nop
  4383dc:	nop
  4383dd:	nop
  4383de:	nop
  4383df:	nop
  4383e0:	push   r13
  4383e2:	push   r12
  4383e4:	push   rbp
  4383e5:	push   rdi
  4383e6:	push   rsi
  4383e7:	push   rbx
  4383e8:	sub    rsp,0x28
  4383ec:	mov    rsi,rcx
  4383ef:	lea    ecx,[r8+0x8]
  4383f3:	mov    ebp,edx
  4383f5:	mov    edx,0x38e38e39
  4383fa:	mov    edi,r8d
  4383fd:	mov    ebx,r9d
  438400:	mov    eax,ecx
  438402:	sar    ecx,0x1f
  438405:	imul   edx
  438407:	sar    edx,1
  438409:	sub    edx,ecx
  43840b:	cmp    edx,0x1
  43840e:	jle    0x4384d4
  438414:	mov    eax,0x1
  438419:	xor    ecx,ecx
  43841b:	nop    DWORD PTR [rax+rax*1+0x0]
  438420:	add    eax,eax
  438422:	add    ecx,0x1
  438425:	cmp    edx,eax
  438427:	jg     0x438420
  438429:	call   0x4379c0
  43842e:	cmp    ebp,0x9
  438431:	mov    DWORD PTR [rax+0x18],ebx
  438434:	mov    DWORD PTR [rax+0x14],0x1
  43843b:	jle    0x4384c0
  438441:	lea    rbx,[rsi+0x9]
  438445:	lea    r12d,[rbp-0xa]
  438449:	lea    r13,[rsi+r12*1+0xa]
  43844e:	mov    rsi,rbx
  438451:	add    rsi,0x1
  438455:	movsx  r8d,BYTE PTR [rsi-0x1]
  43845a:	mov    edx,0xa
  43845f:	mov    rcx,rax
  438462:	sub    r8d,0x30
  438466:	call   0x437b40
  43846b:	cmp    rsi,r13
  43846e:	jne    0x438451
  438470:	movsxd rdx,DWORD PTR [rsp+0x80]
  438478:	lea    r9,[r12+rdx*1+0x1]
  43847d:	add    rbx,r9
  438480:	cmp    edi,ebp
  438482:	jle    0x4384af
  438484:	sub    edi,0x1
  438487:	sub    edi,ebp
  438489:	lea    rsi,[rbx+rdi*1+0x1]
  43848e:	xchg   ax,ax
  438490:	add    rbx,0x1
  438494:	movsx  r8d,BYTE PTR [rbx-0x1]
  438499:	mov    edx,0xa
  43849e:	mov    rcx,rax
  4384a1:	sub    r8d,0x30
  4384a5:	call   0x437b40
  4384aa:	cmp    rbx,rsi
  4384ad:	jne    0x438490
  4384af:	add    rsp,0x28
  4384b3:	pop    rbx
  4384b4:	pop    rsi
  4384b5:	pop    rdi
  4384b6:	pop    rbp
  4384b7:	pop    r12
  4384b9:	pop    r13
  4384bb:	ret    
  4384bc:	nop    DWORD PTR [rax+0x0]
  4384c0:	movsxd rdx,DWORD PTR [rsp+0x80]
  4384c8:	mov    ebp,0x9
  4384cd:	lea    rbx,[rsi+rdx*1+0x9]
  4384d2:	jmp    0x438480
  4384d4:	xor    ecx,ecx
  4384d6:	jmp    0x438429
  4384db:	nop    DWORD PTR [rax+rax*1+0x0]
  4384e0:	push   rdi
  4384e1:	push   rsi
  4384e2:	push   rbx
  4384e3:	sub    rsp,0x50
  4384e7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4384ec:	mov    rsi,rdx
  4384ef:	lea    rdx,[rsp+0x38]
  4384f4:	mov    rdi,rcx
  4384f7:	call   0x438180
  4384fc:	lea    rdx,[rsp+0x3c]
  438501:	mov    rcx,rsi
  438504:	movq   rbx,xmm0
  438509:	movapd xmm6,xmm0
  43850d:	call   0x438180
  438512:	mov    eax,DWORD PTR [rsp+0x38]
  438516:	sub    eax,DWORD PTR [rsp+0x3c]
  43851a:	movq   rcx,xmm0
  43851f:	mov    r8d,eax
  438522:	mov    eax,DWORD PTR [rdi+0x14]
  438525:	sub    eax,DWORD PTR [rsi+0x14]
  438528:	shl    eax,0x5
  43852b:	add    eax,r8d
  43852e:	test   eax,eax
  438530:	jle    0x438570
  438532:	movq   rdx,xmm6
  438537:	shl    eax,0x14
  43853a:	shr    rdx,0x20
  43853e:	add    eax,edx
  438540:	shl    rax,0x20
  438544:	mov    rdx,rax
  438547:	mov    eax,ebx
  438549:	or     rax,rdx
  43854c:	mov    QWORD PTR [rsp+0x28],rax
  438551:	movsd  xmm6,QWORD PTR [rsp+0x28]
  438557:	divsd  xmm6,xmm0
  43855b:	movapd xmm0,xmm6
  43855f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  438564:	add    rsp,0x50
  438568:	pop    rbx
  438569:	pop    rsi
  43856a:	pop    rdi
  43856b:	ret    
  43856c:	nop    DWORD PTR [rax+0x0]
  438570:	movq   rdx,xmm0
  438575:	shl    eax,0x14
  438578:	shr    rdx,0x20
  43857c:	mov    ebx,edx
  43857e:	sub    ebx,eax
  438580:	mov    rax,rbx
  438583:	shl    rax,0x20
  438587:	mov    rdx,rax
  43858a:	mov    eax,ecx
  43858c:	or     rax,rdx
  43858f:	mov    QWORD PTR [rsp+0x28],rax
  438594:	movsd  xmm0,QWORD PTR [rsp+0x28]
  43859a:	jmp    0x438557
  43859c:	nop    DWORD PTR [rax+0x0]
  4385a0:	mov    r8,QWORD PTR [rcx]
  4385a3:	jmp    0x4385be
  4385a5:	movsx  eax,BYTE PTR [r8]
  4385a9:	lea    r11d,[rax-0x41]
  4385ad:	lea    r10d,[rax+0x20]
  4385b1:	cmp    r11d,0x19
  4385b5:	cmovbe eax,r10d
  4385b9:	cmp    eax,r9d
  4385bc:	jne    0x4385e0
  4385be:	add    rdx,0x1
  4385c2:	movsx  r9d,BYTE PTR [rdx-0x1]
  4385c7:	add    r8,0x1
  4385cb:	test   r9d,r9d
  4385ce:	jne    0x4385a5
  4385d0:	mov    QWORD PTR [rcx],r8
  4385d3:	mov    eax,0x1
  4385d8:	ret    
  4385d9:	nop    DWORD PTR [rax+0x0]
  4385e0:	xor    eax,eax
  4385e2:	ret    
  4385e3:	nop    DWORD PTR [rax]
  4385e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4385f0:	sub    edx,0x1
  4385f3:	lea    rax,[r8+0x18]
  4385f7:	sar    edx,0x5
  4385fa:	movsxd rdx,edx
  4385fd:	lea    r11,[rcx+rdx*4+0x4]
  438602:	movsxd rdx,DWORD PTR [r8+0x14]
  438606:	lea    r10,[rax+rdx*4]
  43860a:	cmp    rax,r10
  43860d:	jae    0x43864b
  43860f:	mov    rdx,rcx
  438612:	add    rax,0x4
  438616:	mov    r9d,DWORD PTR [rax-0x4]
  43861a:	add    rdx,0x4
  43861e:	cmp    r10,rax
  438621:	mov    DWORD PTR [rdx-0x4],r9d
  438625:	ja     0x438612
  438627:	sub    r10,r8
  43862a:	lea    rax,[r10-0x19]
  43862e:	shr    rax,0x2
  438632:	lea    rcx,[rcx+rax*4+0x4]
  438637:	cmp    r11,rcx
  43863a:	jbe    0x438650
  43863c:	nop    DWORD PTR [rax+0x0]
  438640:	add    rcx,0x4
  438644:	mov    DWORD PTR [rcx-0x4],0x0
  43864b:	cmp    r11,rcx
  43864e:	ja     0x438640
  438650:	repz ret 
  438652:	nop    DWORD PTR [rax+0x0]
  438656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438660:	movsxd rax,DWORD PTR [rcx+0x14]
  438664:	mov    r9d,edx
  438667:	lea    r8,[rcx+0x18]
  43866b:	sar    r9d,0x5
  43866f:	cmp    eax,r9d
  438672:	jge    0x4386a1
  438674:	lea    r9,[r8+rax*4]
  438678:	cmp    r8,r9
  43867b:	jae    0x4386e6
  43867d:	mov    eax,DWORD PTR [r9-0x4]
  438681:	lea    rdx,[r9-0x4]
  438685:	test   eax,eax
  438687:	je     0x43869a
  438689:	jmp    0x4386e0
  43868b:	nop    DWORD PTR [rax+rax*1+0x0]
  438690:	sub    rdx,0x4
  438694:	mov    ecx,DWORD PTR [rdx]
  438696:	test   ecx,ecx
  438698:	jne    0x4386e0
  43869a:	cmp    r8,rdx
  43869d:	jb     0x438690
  43869f:	repz ret 
  4386a1:	jle    0x4386d0
  4386a3:	mov    ecx,edx
  4386a5:	movsxd r9,r9d
  4386a8:	and    ecx,0x1f
  4386ab:	lea    r9,[r8+r9*4]
  4386af:	je     0x438678
  4386b1:	mov    r10d,DWORD PTR [r9]
  4386b4:	mov    eax,r10d
  4386b7:	shr    eax,cl
  4386b9:	shl    eax,cl
  4386bb:	mov    edx,eax
  4386bd:	mov    eax,0x1
  4386c2:	cmp    edx,r10d
  4386c5:	je     0x438678
  4386c7:	repz ret 
  4386c9:	nop    DWORD PTR [rax+0x0]
  4386d0:	movsxd r9,r9d
  4386d3:	lea    r9,[r8+r9*4]
  4386d7:	jmp    0x438678
  4386d9:	nop    DWORD PTR [rax+0x0]
  4386e0:	mov    eax,0x1
  4386e5:	ret    
  4386e6:	xor    eax,eax
  4386e8:	ret    
  4386e9:	nop
  4386ea:	nop
  4386eb:	nop
  4386ec:	nop
  4386ed:	nop
  4386ee:	nop
  4386ef:	nop
  4386f0:	jmp    QWORD PTR [rip+0x4e48a]        # 0x486b80
  4386f6:	nop
  4386f7:	nop
  4386f8:	jmp    QWORD PTR [rip+0x4e47a]        # 0x486b78
  4386fe:	nop
  4386ff:	nop
  438700:	jmp    QWORD PTR [rip+0x4e46a]        # 0x486b70
  438706:	nop
  438707:	nop
  438708:	jmp    QWORD PTR [rip+0x4e45a]        # 0x486b68
  43870e:	nop
  43870f:	nop
  438710:	jmp    QWORD PTR [rip+0x4e44a]        # 0x486b60
  438716:	nop
  438717:	nop
  438718:	jmp    QWORD PTR [rip+0x4e43a]        # 0x486b58
  43871e:	nop
  43871f:	nop
  438720:	jmp    QWORD PTR [rip+0x4e42a]        # 0x486b50
  438726:	nop
  438727:	nop
  438728:	jmp    QWORD PTR [rip+0x4e41a]        # 0x486b48
  43872e:	nop
  43872f:	nop
  438730:	jmp    QWORD PTR [rip+0x4e40a]        # 0x486b40
  438736:	nop
  438737:	nop
  438738:	jmp    QWORD PTR [rip+0x4e3fa]        # 0x486b38
  43873e:	nop
  43873f:	nop
  438740:	jmp    QWORD PTR [rip+0x4e3ea]        # 0x486b30
  438746:	nop
  438747:	nop
  438748:	jmp    QWORD PTR [rip+0x4e3da]        # 0x486b28
  43874e:	nop
  43874f:	nop
  438750:	jmp    QWORD PTR [rip+0x4e3ca]        # 0x486b20
  438756:	nop
  438757:	nop
  438758:	jmp    QWORD PTR [rip+0x4e3ba]        # 0x486b18
  43875e:	nop
  43875f:	nop
  438760:	jmp    QWORD PTR [rip+0x4e3aa]        # 0x486b10
  438766:	nop
  438767:	nop
  438768:	jmp    QWORD PTR [rip+0x4e39a]        # 0x486b08
  43876e:	nop
  43876f:	nop
  438770:	jmp    QWORD PTR [rip+0x4e38a]        # 0x486b00
  438776:	nop
  438777:	nop
  438778:	jmp    QWORD PTR [rip+0x4e37a]        # 0x486af8
  43877e:	nop
  43877f:	nop
  438780:	jmp    QWORD PTR [rip+0x4e36a]        # 0x486af0
  438786:	nop
  438787:	nop
  438788:	jmp    QWORD PTR [rip+0x4e35a]        # 0x486ae8
  43878e:	nop
  43878f:	nop
  438790:	jmp    QWORD PTR [rip+0x4e34a]        # 0x486ae0
  438796:	nop
  438797:	nop
  438798:	jmp    QWORD PTR [rip+0x4e33a]        # 0x486ad8
  43879e:	nop
  43879f:	nop
  4387a0:	jmp    QWORD PTR [rip+0x4e32a]        # 0x486ad0
  4387a6:	nop
  4387a7:	nop
  4387a8:	jmp    QWORD PTR [rip+0x4e31a]        # 0x486ac8
  4387ae:	nop
  4387af:	nop
  4387b0:	jmp    QWORD PTR [rip+0x4e30a]        # 0x486ac0
  4387b6:	nop
  4387b7:	nop
  4387b8:	jmp    QWORD PTR [rip+0x4e2fa]        # 0x486ab8
  4387be:	nop
  4387bf:	nop
  4387c0:	jmp    QWORD PTR [rip+0x4e2ea]        # 0x486ab0
  4387c6:	nop
  4387c7:	nop
  4387c8:	jmp    QWORD PTR [rip+0x4e2da]        # 0x486aa8
  4387ce:	nop
  4387cf:	nop
  4387d0:	jmp    QWORD PTR [rip+0x4e2ca]        # 0x486aa0
  4387d6:	nop
  4387d7:	nop
  4387d8:	jmp    QWORD PTR [rip+0x4e2ba]        # 0x486a98
  4387de:	nop
  4387df:	nop
  4387e0:	jmp    QWORD PTR [rip+0x4e2aa]        # 0x486a90
  4387e6:	nop
  4387e7:	nop
  4387e8:	jmp    QWORD PTR [rip+0x4e29a]        # 0x486a88
  4387ee:	nop
  4387ef:	nop
  4387f0:	jmp    QWORD PTR [rip+0x4e28a]        # 0x486a80
  4387f6:	nop
  4387f7:	nop
  4387f8:	jmp    QWORD PTR [rip+0x4e27a]        # 0x486a78
  4387fe:	nop
  4387ff:	nop
  438800:	jmp    QWORD PTR [rip+0x4e26a]        # 0x486a70
  438806:	nop
  438807:	nop
  438808:	jmp    QWORD PTR [rip+0x4e25a]        # 0x486a68
  43880e:	nop
  43880f:	nop
  438810:	jmp    QWORD PTR [rip+0x4e24a]        # 0x486a60
  438816:	nop
  438817:	nop
  438818:	jmp    QWORD PTR [rip+0x4e23a]        # 0x486a58
  43881e:	nop
  43881f:	nop
  438820:	jmp    QWORD PTR [rip+0x4e22a]        # 0x486a50
  438826:	nop
  438827:	nop
  438828:	jmp    QWORD PTR [rip+0x4e21a]        # 0x486a48
  43882e:	nop
  43882f:	nop
  438830:	jmp    QWORD PTR [rip+0x4e20a]        # 0x486a40
  438836:	nop
  438837:	nop
  438838:	jmp    QWORD PTR [rip+0x4e1fa]        # 0x486a38
  43883e:	nop
  43883f:	nop
  438840:	jmp    QWORD PTR [rip+0x4e1ea]        # 0x486a30
  438846:	nop
  438847:	nop
  438848:	jmp    QWORD PTR [rip+0x4e1da]        # 0x486a28
  43884e:	nop
  43884f:	nop
  438850:	jmp    QWORD PTR [rip+0x4e1ca]        # 0x486a20
  438856:	nop
  438857:	nop
  438858:	jmp    QWORD PTR [rip+0x4e1ba]        # 0x486a18
  43885e:	nop
  43885f:	nop
  438860:	jmp    QWORD PTR [rip+0x4e1aa]        # 0x486a10
  438866:	nop
  438867:	nop
  438868:	jmp    QWORD PTR [rip+0x4e19a]        # 0x486a08
  43886e:	nop
  43886f:	nop
  438870:	jmp    QWORD PTR [rip+0x4e18a]        # 0x486a00
  438876:	nop
  438877:	nop
  438878:	jmp    QWORD PTR [rip+0x4e17a]        # 0x4869f8
  43887e:	nop
  43887f:	nop
  438880:	jmp    QWORD PTR [rip+0x4e16a]        # 0x4869f0
  438886:	nop
  438887:	nop
  438888:	jmp    QWORD PTR [rip+0x4e15a]        # 0x4869e8
  43888e:	nop
  43888f:	nop
  438890:	jmp    QWORD PTR [rip+0x4e14a]        # 0x4869e0
  438896:	nop
  438897:	nop
  438898:	jmp    QWORD PTR [rip+0x4e13a]        # 0x4869d8
  43889e:	nop
  43889f:	nop
  4388a0:	jmp    QWORD PTR [rip+0x4e12a]        # 0x4869d0
  4388a6:	nop
  4388a7:	nop
  4388a8:	jmp    QWORD PTR [rip+0x4e11a]        # 0x4869c8
  4388ae:	nop
  4388af:	nop
  4388b0:	jmp    QWORD PTR [rip+0x4e10a]        # 0x4869c0
  4388b6:	nop
  4388b7:	nop
  4388b8:	jmp    QWORD PTR [rip+0x4e0fa]        # 0x4869b8
  4388be:	nop
  4388bf:	nop
  4388c0:	jmp    QWORD PTR [rip+0x4e0ea]        # 0x4869b0
  4388c6:	nop
  4388c7:	nop
  4388c8:	jmp    QWORD PTR [rip+0x4e0da]        # 0x4869a8
  4388ce:	nop
  4388cf:	nop
  4388d0:	jmp    QWORD PTR [rip+0x4e0ca]        # 0x4869a0
  4388d6:	nop
  4388d7:	nop
  4388d8:	jmp    QWORD PTR [rip+0x4e0ba]        # 0x486998
  4388de:	nop
  4388df:	nop
  4388e0:	jmp    QWORD PTR [rip+0x4e0aa]        # 0x486990
  4388e6:	nop
  4388e7:	nop
  4388e8:	jmp    QWORD PTR [rip+0x4e09a]        # 0x486988
  4388ee:	nop
  4388ef:	nop
  4388f0:	jmp    QWORD PTR [rip+0x4e08a]        # 0x486980
  4388f6:	nop
  4388f7:	nop
  4388f8:	jmp    QWORD PTR [rip+0x4e07a]        # 0x486978
  4388fe:	nop
  4388ff:	nop
  438900:	jmp    QWORD PTR [rip+0x4e06a]        # 0x486970
  438906:	nop
  438907:	nop
  438908:	jmp    QWORD PTR [rip+0x4e05a]        # 0x486968
  43890e:	nop
  43890f:	nop
  438910:	jmp    QWORD PTR [rip+0x4e04a]        # 0x486960
  438916:	nop
  438917:	nop
  438918:	jmp    QWORD PTR [rip+0x4e03a]        # 0x486958
  43891e:	nop
  43891f:	nop
  438920:	jmp    QWORD PTR [rip+0x4e02a]        # 0x486950
  438926:	nop
  438927:	nop
  438928:	jmp    QWORD PTR [rip+0x4e01a]        # 0x486948
  43892e:	nop
  43892f:	nop
  438930:	jmp    QWORD PTR [rip+0x4e00a]        # 0x486940
  438936:	nop
  438937:	nop
  438938:	jmp    QWORD PTR [rip+0x4dffa]        # 0x486938
  43893e:	nop
  43893f:	nop
  438940:	jmp    QWORD PTR [rip+0x4dfea]        # 0x486930
  438946:	nop
  438947:	nop
  438948:	jmp    QWORD PTR [rip+0x4dfda]        # 0x486928
  43894e:	nop
  43894f:	nop
  438950:	jmp    QWORD PTR [rip+0x4dfca]        # 0x486920
  438956:	nop
  438957:	nop
  438958:	jmp    QWORD PTR [rip+0x4dfba]        # 0x486918
  43895e:	nop
  43895f:	nop
  438960:	jmp    QWORD PTR [rip+0x4dfaa]        # 0x486910
  438966:	nop
  438967:	nop
  438968:	jmp    QWORD PTR [rip+0x4df9a]        # 0x486908
  43896e:	nop
  43896f:	nop
  438970:	jmp    QWORD PTR [rip+0x4df8a]        # 0x486900
  438976:	nop
  438977:	nop
  438978:	jmp    QWORD PTR [rip+0x4df72]        # 0x4868f0
  43897e:	nop
  43897f:	nop
  438980:	jmp    QWORD PTR [rip+0x4df62]        # 0x4868e8
  438986:	nop
  438987:	nop
  438988:	jmp    QWORD PTR [rip+0x4df52]        # 0x4868e0
  43898e:	nop
  43898f:	nop
  438990:	jmp    QWORD PTR [rip+0x4df42]        # 0x4868d8
  438996:	nop
  438997:	nop
  438998:	jmp    QWORD PTR [rip+0x4df32]        # 0x4868d0
  43899e:	nop
  43899f:	nop
  4389a0:	jmp    QWORD PTR [rip+0x4df22]        # 0x4868c8
  4389a6:	nop
  4389a7:	nop
  4389a8:	jmp    QWORD PTR [rip+0x4df12]        # 0x4868c0
  4389ae:	nop
  4389af:	nop
  4389b0:	jmp    QWORD PTR [rip+0x4df02]        # 0x4868b8
  4389b6:	nop
  4389b7:	nop
  4389b8:	jmp    QWORD PTR [rip+0x4deea]        # 0x4868a8
  4389be:	nop
  4389bf:	nop
  4389c0:	jmp    QWORD PTR [rip+0x4deda]        # 0x4868a0
  4389c6:	nop
  4389c7:	nop
  4389c8:	jmp    QWORD PTR [rip+0x4dec2]        # 0x486890
  4389ce:	nop
  4389cf:	nop
  4389d0:	jmp    QWORD PTR [rip+0x4deb2]        # 0x486888
  4389d6:	nop
  4389d7:	nop
  4389d8:	jmp    QWORD PTR [rip+0x4de9a]        # 0x486878
  4389de:	nop
  4389df:	nop
  4389e0:	jmp    QWORD PTR [rip+0x4de8a]        # 0x486870
  4389e6:	nop
  4389e7:	nop
  4389e8:	jmp    QWORD PTR [rip+0x4de7a]        # 0x486868
  4389ee:	nop
  4389ef:	nop
  4389f0:	mov    rax,QWORD PTR [rip+0x4d1c9]        # 0x485bc0
  4389f7:	ret    
  4389f8:	nop    DWORD PTR [rax+rax*1+0x0]
  438a00:	mov    rax,rcx
  438a03:	xchg   QWORD PTR [rip+0x4d1b6],rax        # 0x485bc0
  438a0a:	ret    
  438a0b:	nop
  438a0c:	nop
  438a0d:	nop
  438a0e:	nop
  438a0f:	nop
  438a10:	jmp    QWORD PTR [rip+0x4dc2a]        # 0x486640
  438a16:	nop
  438a17:	nop
  438a18:	nop    DWORD PTR [rax+rax*1+0x0]
  438a20:	jmp    QWORD PTR [rip+0x4e182]        # 0x486ba8
  438a26:	nop
  438a27:	nop
  438a28:	jmp    QWORD PTR [rip+0x4e172]        # 0x486ba0
  438a2e:	nop
  438a2f:	nop
  438a30:	jmp    QWORD PTR [rip+0x4e18a]        # 0x486bc0
  438a36:	nop
  438a37:	nop
  438a38:	jmp    QWORD PTR [rip+0x4e17a]        # 0x486bb8
  438a3e:	nop
  438a3f:	nop
  438a40:	jmp    QWORD PTR [rip+0x4de12]        # 0x486858
  438a46:	nop
  438a47:	nop
  438a48:	jmp    QWORD PTR [rip+0x4de02]        # 0x486850
  438a4e:	nop
  438a4f:	nop
  438a50:	jmp    QWORD PTR [rip+0x4ddf2]        # 0x486848
  438a56:	nop
  438a57:	nop
  438a58:	jmp    QWORD PTR [rip+0x4dde2]        # 0x486840
  438a5e:	nop
  438a5f:	nop
  438a60:	jmp    QWORD PTR [rip+0x4ddd2]        # 0x486838
  438a66:	nop
  438a67:	nop
  438a68:	jmp    QWORD PTR [rip+0x4ddc2]        # 0x486830
  438a6e:	nop
  438a6f:	nop
  438a70:	jmp    QWORD PTR [rip+0x4ddb2]        # 0x486828
  438a76:	nop
  438a77:	nop
  438a78:	jmp    QWORD PTR [rip+0x4dda2]        # 0x486820
  438a7e:	nop
  438a7f:	nop
  438a80:	jmp    QWORD PTR [rip+0x4dd92]        # 0x486818
  438a86:	nop
  438a87:	nop
  438a88:	jmp    QWORD PTR [rip+0x4dd82]        # 0x486810
  438a8e:	nop
  438a8f:	nop
  438a90:	jmp    QWORD PTR [rip+0x4dd72]        # 0x486808
  438a96:	nop
  438a97:	nop
  438a98:	jmp    QWORD PTR [rip+0x4dd62]        # 0x486800
  438a9e:	nop
  438a9f:	nop
  438aa0:	jmp    QWORD PTR [rip+0x4dd52]        # 0x4867f8
  438aa6:	nop
  438aa7:	nop
  438aa8:	jmp    QWORD PTR [rip+0x4dd42]        # 0x4867f0
  438aae:	nop
  438aaf:	nop
  438ab0:	jmp    QWORD PTR [rip+0x4dd32]        # 0x4867e8
  438ab6:	nop
  438ab7:	nop
  438ab8:	jmp    QWORD PTR [rip+0x4dd22]        # 0x4867e0
  438abe:	nop
  438abf:	nop
  438ac0:	jmp    QWORD PTR [rip+0x4dd12]        # 0x4867d8
  438ac6:	nop
  438ac7:	nop
  438ac8:	jmp    QWORD PTR [rip+0x4dd02]        # 0x4867d0
  438ace:	nop
  438acf:	nop
  438ad0:	jmp    QWORD PTR [rip+0x4dcf2]        # 0x4867c8
  438ad6:	nop
  438ad7:	nop
  438ad8:	jmp    QWORD PTR [rip+0x4dce2]        # 0x4867c0
  438ade:	nop
  438adf:	nop
  438ae0:	jmp    QWORD PTR [rip+0x4dcd2]        # 0x4867b8
  438ae6:	nop
  438ae7:	nop
  438ae8:	jmp    QWORD PTR [rip+0x4dcc2]        # 0x4867b0
  438aee:	nop
  438aef:	nop
  438af0:	jmp    QWORD PTR [rip+0x4dcb2]        # 0x4867a8
  438af6:	nop
  438af7:	nop
  438af8:	jmp    QWORD PTR [rip+0x4dca2]        # 0x4867a0
  438afe:	nop
  438aff:	nop
  438b00:	jmp    QWORD PTR [rip+0x4dc92]        # 0x486798
  438b06:	nop
  438b07:	nop
  438b08:	jmp    QWORD PTR [rip+0x4dc82]        # 0x486790
  438b0e:	nop
  438b0f:	nop
  438b10:	jmp    QWORD PTR [rip+0x4dc72]        # 0x486788
  438b16:	nop
  438b17:	nop
  438b18:	jmp    QWORD PTR [rip+0x4dc62]        # 0x486780
  438b1e:	nop
  438b1f:	nop
  438b20:	jmp    QWORD PTR [rip+0x4dc52]        # 0x486778
  438b26:	nop
  438b27:	nop
  438b28:	jmp    QWORD PTR [rip+0x4dc42]        # 0x486770
  438b2e:	nop
  438b2f:	nop
  438b30:	jmp    QWORD PTR [rip+0x4dc32]        # 0x486768
  438b36:	nop
  438b37:	nop
  438b38:	jmp    QWORD PTR [rip+0x4dc22]        # 0x486760
  438b3e:	nop
  438b3f:	nop
  438b40:	jmp    QWORD PTR [rip+0x4dc12]        # 0x486758
  438b46:	nop
  438b47:	nop
  438b48:	jmp    QWORD PTR [rip+0x4dc02]        # 0x486750
  438b4e:	nop
  438b4f:	nop
  438b50:	jmp    QWORD PTR [rip+0x4dbf2]        # 0x486748
  438b56:	nop
  438b57:	nop
  438b58:	jmp    QWORD PTR [rip+0x4dbe2]        # 0x486740
  438b5e:	nop
  438b5f:	nop
  438b60:	jmp    QWORD PTR [rip+0x4dbd2]        # 0x486738
  438b66:	nop
  438b67:	nop
  438b68:	jmp    QWORD PTR [rip+0x4dbc2]        # 0x486730
  438b6e:	nop
  438b6f:	nop
  438b70:	jmp    QWORD PTR [rip+0x4dbb2]        # 0x486728
  438b76:	nop
  438b77:	nop
  438b78:	jmp    QWORD PTR [rip+0x4dba2]        # 0x486720
  438b7e:	nop
  438b7f:	nop
  438b80:	jmp    QWORD PTR [rip+0x4db92]        # 0x486718
  438b86:	nop
  438b87:	nop
  438b88:	jmp    QWORD PTR [rip+0x4db82]        # 0x486710
  438b8e:	nop
  438b8f:	nop
  438b90:	jmp    QWORD PTR [rip+0x4db72]        # 0x486708
  438b96:	nop
  438b97:	nop
  438b98:	jmp    QWORD PTR [rip+0x4db62]        # 0x486700
  438b9e:	nop
  438b9f:	nop
  438ba0:	jmp    QWORD PTR [rip+0x4db52]        # 0x4866f8
  438ba6:	nop
  438ba7:	nop
  438ba8:	jmp    QWORD PTR [rip+0x4db42]        # 0x4866f0
  438bae:	nop
  438baf:	nop
  438bb0:	jmp    QWORD PTR [rip+0x4db32]        # 0x4866e8
  438bb6:	nop
  438bb7:	nop
  438bb8:	jmp    QWORD PTR [rip+0x4db22]        # 0x4866e0
  438bbe:	nop
  438bbf:	nop
  438bc0:	jmp    QWORD PTR [rip+0x4db12]        # 0x4866d8
  438bc6:	nop
  438bc7:	nop
  438bc8:	jmp    QWORD PTR [rip+0x4db02]        # 0x4866d0
  438bce:	nop
  438bcf:	nop
  438bd0:	jmp    QWORD PTR [rip+0x4daf2]        # 0x4866c8
  438bd6:	nop
  438bd7:	nop
  438bd8:	jmp    QWORD PTR [rip+0x4dae2]        # 0x4866c0
  438bde:	nop
  438bdf:	nop
  438be0:	jmp    QWORD PTR [rip+0x4dad2]        # 0x4866b8
  438be6:	nop
  438be7:	nop
  438be8:	jmp    QWORD PTR [rip+0x4dac2]        # 0x4866b0
  438bee:	nop
  438bef:	nop
  438bf0:	jmp    QWORD PTR [rip+0x4dab2]        # 0x4866a8
  438bf6:	nop
  438bf7:	nop
  438bf8:	jmp    QWORD PTR [rip+0x4daa2]        # 0x4866a0
  438bfe:	nop
  438bff:	nop
  438c00:	jmp    QWORD PTR [rip+0x4da92]        # 0x486698
  438c06:	nop
  438c07:	nop
  438c08:	jmp    QWORD PTR [rip+0x4da82]        # 0x486690
  438c0e:	nop
  438c0f:	nop
  438c10:	jmp    QWORD PTR [rip+0x4da72]        # 0x486688
  438c16:	nop
  438c17:	nop
  438c18:	jmp    QWORD PTR [rip+0x4da62]        # 0x486680
  438c1e:	nop
  438c1f:	nop
  438c20:	jmp    QWORD PTR [rip+0x4da52]        # 0x486678
  438c26:	nop
  438c27:	nop
  438c28:	jmp    QWORD PTR [rip+0x4da42]        # 0x486670
  438c2e:	nop
  438c2f:	nop
  438c30:	jmp    QWORD PTR [rip+0x4da32]        # 0x486668
  438c36:	nop
  438c37:	nop
  438c38:	jmp    QWORD PTR [rip+0x4da22]        # 0x486660
  438c3e:	nop
  438c3f:	nop
  438c40:	jmp    QWORD PTR [rip+0x4da12]        # 0x486658
  438c46:	nop
  438c47:	nop
  438c48:	jmp    QWORD PTR [rip+0x4da02]        # 0x486650
  438c4e:	nop
  438c4f:	nop
  438c50:	push   r15
  438c52:	push   r14
  438c54:	push   r13
  438c56:	push   r12
  438c58:	push   rbp
  438c59:	push   rdi
  438c5a:	push   rsi
  438c5b:	push   rbx
  438c5c:	sub    rsp,0x58
  438c60:	mov    DWORD PTR [rsp+0xa0],ecx
  438c67:	mov    QWORD PTR [rsp+0xa8],rdx
  438c6f:	call   0x432d10
  438c74:	lea    rcx,[rip+0x35ac]        # 0x43c227
  438c7b:	mov    QWORD PTR [rsp+0x48],0x0
  438c84:	call   0x438838
  438c89:	test   rax,rax
  438c8c:	je     0x438cb8
  438c8e:	lea    rcx,[rip+0x35ab]        # 0x43c240
  438c95:	mov    DWORD PTR [rip+0x4b401],0x1        # 0x4840a0
  438c9f:	mov    DWORD PTR [rip+0x4b3f3],0x1        # 0x48409c
  438ca9:	mov    DWORD PTR [rip+0x4b3f5],0x0        # 0x4840a8
  438cb3:	call   0x405530
  438cb8:	xor    ecx,ecx
  438cba:	call   0x427820
  438cbf:	test   rax,rax
  438cc2:	mov    rbx,rax
  438cc5:	je     0x43905c
  438ccb:	lea    r8,[rip+0x35e3]        # 0x43c2b5
  438cd2:	lea    rdx,[rip+0x35e6]        # 0x43c2bf
  438cd9:	xor    r9d,r9d
  438cdc:	mov    rcx,rax
  438cdf:	call   0x407800
  438ce4:	lea    r8,[rip+0x35ca]        # 0x43c2b5
  438ceb:	lea    rdx,[rip+0x35d1]        # 0x43c2c3
  438cf2:	xor    r9d,r9d
  438cf5:	mov    rcx,rbx
  438cf8:	mov    rdi,rax
  438cfb:	call   0x407800
  438d00:	lea    rdx,[rip+0x35c2]        # 0x43c2c9
  438d07:	xor    r9d,r9d
  438d0a:	mov    r8,rax
  438d0d:	mov    rcx,rdi
  438d10:	mov    rsi,rax
  438d13:	call   0x4184b0
  438d18:	mov    rcx,rbx
  438d1b:	mov    QWORD PTR [rip+0x4b35e],rax        # 0x484080
  438d22:	call   0x40e6e0
  438d27:	mov    rcx,rdi
  438d2a:	call   0x40e6e0
  438d2f:	mov    rcx,rsi
  438d32:	call   0x40e6e0
  438d37:	cmp    QWORD PTR [rip+0x4b341],0x0        # 0x484080
  438d3f:	je     0x439637
  438d45:	lea    rcx,[rip+0x35a7]        # 0x43c2f3
  438d4c:	call   0x438838
  438d51:	test   rax,rax
  438d54:	je     0x438d65
  438d56:	lea    rdx,[rip+0x356c]        # 0x43c2c9
  438d5d:	mov    rcx,rax
  438d60:	call   0x4020a0
  438d65:	lea    rcx,[rip+0x3597]        # 0x43c303
  438d6c:	call   0x438838
  438d71:	test   rax,rax
  438d74:	je     0x439008
  438d7a:	lea    rcx,[rip+0x3582]        # 0x43c303
  438d81:	call   0x438838
  438d86:	lea    rdx,[rip+0x353c]        # 0x43c2c9
  438d8d:	mov    rcx,rax
  438d90:	call   0x4020a0
  438d95:	lea    rcx,[rip+0x3579]        # 0x43c315
  438d9c:	call   0x438838
  438da1:	test   rax,rax
  438da4:	mov    QWORD PTR [rip+0x4b2dd],rax        # 0x484088
  438dab:	je     0x439020
  438db1:	lea    rcx,[rip+0x3574]        # 0x43c32c
  438db8:	mov    rdx,rax
  438dbb:	call   0x4023f0
  438dc0:	lea    rcx,[rip+0x3575]        # 0x43c33c
  438dc7:	call   0x438838
  438dcc:	test   rax,rax
  438dcf:	je     0x438ff0
  438dd5:	lea    rcx,[rip+0x3579]        # 0x43c355
  438ddc:	mov    rdx,rax
  438ddf:	call   0x4023f0
  438de4:	lea    rcx,[rip+0x358d]        # 0x43c378
  438deb:	call   0x438838
  438df0:	test   rax,rax
  438df3:	je     0x438e0e
  438df5:	lea    rcx,[rip+0x359c]        # 0x43c398
  438dfc:	call   0x405530
  438e01:	mov    rax,QWORD PTR [rip+0x42d28]        # 0x47bb30
  438e08:	mov    DWORD PTR [rax],0x1
  438e0e:	xor    ecx,ecx
  438e10:	call   0x411290
  438e15:	lea    rdx,[rip+0x40a4]        # 0x43cec0
  438e1c:	xor    r8d,r8d
  438e1f:	mov    rcx,rax
  438e22:	mov    rsi,rax
  438e25:	call   0x412db0
  438e2a:	lea    r9,[rsp+0x48]
  438e2f:	lea    r8,[rsp+0xa8]
  438e37:	lea    rdx,[rsp+0xa0]
  438e3f:	mov    rcx,rsi
  438e42:	call   0x411e80
  438e47:	test   eax,eax
  438e49:	je     0x438f80
  438e4f:	mov    edx,DWORD PTR [rip+0x4b23f]        # 0x484094
  438e55:	test   edx,edx
  438e57:	je     0x438f30
  438e5d:	cmp    DWORD PTR [rip+0x4b278],0x0        # 0x4840dc
  438e64:	jne    0x438f46
  438e6a:	mov    edx,DWORD PTR [rip+0x4b238]        # 0x4840a8
  438e70:	lea    rcx,[rip+0x3589]        # 0x43c400
  438e77:	call   0x405530
  438e7c:	cmp    DWORD PTR [rip+0x4b225],0x0        # 0x4840a8
  438e83:	jne    0x439038
  438e89:	mov    DWORD PTR [rip+0x4b209],0x1        # 0x48409c
  438e93:	lea    rcx,[rip+0x3695]        # 0x43c52f
  438e9a:	call   0x405530
  438e9f:	mov    eax,DWORD PTR [rip+0x4b24b]        # 0x4840f0
  438ea5:	test   eax,eax
  438ea7:	je     0x438f76
  438ead:	call   0x403180
  438eb2:	movzx  eax,BYTE PTR [rip+0x4b23f]        # 0x4840f8
  438eb9:	test   al,0x18
  438ebb:	jne    0x438ed3
  438ebd:	cmp    DWORD PTR [rip+0x4b20c],0x0        # 0x4840d0
  438ec4:	jne    0x438ed3
  438ec6:	cmp    DWORD PTR [rip+0x4b20f],0x0        # 0x4840dc
  438ecd:	je     0x438fc3
  438ed3:	call   0x4031c0
  438ed8:	cmp    BYTE PTR [rip+0x4b219],0x0        # 0x4840f8
  438edf:	jne    0x438eee
  438ee1:	cmp    DWORD PTR [rip+0x4b1ec],0x0        # 0x4840d4
  438ee8:	je     0x438fac
  438eee:	mov    ebx,DWORD PTR [rip+0x4b20c]        # 0x484100
  438ef4:	test   ebx,ebx
  438ef6:	jne    0x438fdd
  438efc:	mov    rdx,QWORD PTR [rip+0x4b1ad]        # 0x4840b0
  438f03:	test   rdx,rdx
  438f06:	je     0x43906d
  438f0c:	lea    rcx,[rip+0x364d]        # 0x43c560
  438f13:	call   0x4025e0
  438f18:	shr    eax,0x1f
  438f1b:	mov    ebx,eax
  438f1d:	mov    eax,ebx
  438f1f:	add    rsp,0x58
  438f23:	pop    rbx
  438f24:	pop    rsi
  438f25:	pop    rdi
  438f26:	pop    rbp
  438f27:	pop    r12
  438f29:	pop    r13
  438f2b:	pop    r14
  438f2d:	pop    r15
  438f2f:	ret    
  438f30:	lea    rcx,[rip+0x3499]        # 0x43c3d0
  438f37:	call   0x405530
  438f3c:	mov    DWORD PTR [rip+0x4b196],0x1        # 0x4840dc
  438f46:	mov    edx,DWORD PTR [rip+0x4b150]        # 0x48409c
  438f4c:	lea    rcx,[rip+0x353d]        # 0x43c490
  438f53:	call   0x405530
  438f58:	cmp    DWORD PTR [rip+0x4b13d],0x0        # 0x48409c
  438f5f:	jne    0x438e93
  438f65:	lea    rcx,[rip+0x35db]        # 0x43c547
  438f6c:	call   0x405530
  438f71:	jmp    0x438e9f
  438f76:	call   0x403190
  438f7b:	jmp    0x438eb2
  438f80:	mov    rax,QWORD PTR [rsp+0x48]
  438f85:	mov    rbx,QWORD PTR [rax+0x8]
  438f89:	call   QWORD PTR [rip+0x4d8f9]        # 0x486888
  438f8f:	lea    rdx,[rip+0x3436]        # 0x43c3cc
  438f96:	lea    rcx,[rax+0x60]
  438f9a:	mov    r8,rbx
  438f9d:	mov    ebx,0x1
  438fa2:	call   0x438870
  438fa7:	jmp    0x438f1d
  438fac:	cmp    DWORD PTR [rip+0x4b129],0x0        # 0x4840dc
  438fb3:	jne    0x438eee
  438fb9:	call   0x4031b0
  438fbe:	jmp    0x438eee
  438fc3:	cmp    DWORD PTR [rip+0x4b126],0x0        # 0x4840f0
  438fca:	je     0x438ed8
  438fd0:	test   al,0x7
  438fd2:	je     0x438ed8
  438fd8:	jmp    0x438ed3
  438fdd:	lea    rcx,[rip+0x357c]        # 0x43c560
  438fe4:	xor    ebx,ebx
  438fe6:	call   0x4387c8
  438feb:	jmp    0x438f1d
  438ff0:	lea    rdx,[rip+0x336e]        # 0x43c365
  438ff7:	lea    rcx,[rip+0x3357]        # 0x43c355
  438ffe:	call   0x4023f0
  439003:	jmp    0x438de4
  439008:	mov    rcx,QWORD PTR [rip+0x4b071]        # 0x484080
  43900f:	lea    rdx,[rip+0x32b3]        # 0x43c2c9
  439016:	call   0x4020a0
  43901b:	jmp    0x438d95
  439020:	lea    rdx,[rip+0x3313]        # 0x43c33a
  439027:	lea    rcx,[rip+0x32fe]        # 0x43c32c
  43902e:	call   0x4023f0
  439033:	jmp    0x438dc0
  439038:	lea    rcx,[rip+0x31e8]        # 0x43c227
  43903f:	call   0x438838
  439044:	test   rax,rax
  439047:	jne    0x438e89
  43904d:	mov    DWORD PTR [rip+0x4b045],0x0        # 0x48409c
  439057:	jmp    0x438f65
  43905c:	lea    rcx,[rip+0x3215]        # 0x43c278
  439063:	call   0x405530
  439068:	jmp    0x438d37
  43906d:	call   0x402130
  439072:	cmp    DWORD PTR [rip+0x4b07b],0x0        # 0x4840f4
  439079:	jne    0x439546
  43907f:	lea    rcx,[rip+0x34df]        # 0x43c565
  439086:	call   0x41ae90
  43908b:	mov    rbp,rax
  43908e:	jmp    0x4390c9
  439090:	mov    rax,QWORD PTR [rsp+0xa8]
  439098:	sub    edx,0x1
  43909b:	mov    rcx,rbp
  43909e:	mov    DWORD PTR [rsp+0xa0],edx
  4390a5:	lea    rdx,[rax+0x8]
  4390a9:	mov    QWORD PTR [rsp+0xa8],rdx
  4390b1:	mov    rdx,QWORD PTR [rax+0x8]
  4390b5:	call   0x41ace0
  4390ba:	lea    rdx,[rip+0x34a5]        # 0x43c566
  4390c1:	mov    rcx,rbp
  4390c4:	call   0x41ace0
  4390c9:	mov    edx,DWORD PTR [rsp+0xa0]
  4390d0:	cmp    edx,0x1
  4390d3:	jg     0x439090
  4390d5:	mov    rcx,rsi
  4390d8:	call   0x4112d0
  4390dd:	mov    rcx,QWORD PTR [rbp+0x0]
  4390e1:	call   0x419b00
  4390e6:	mov    rcx,rax
  4390e9:	call   0x419ba0
  4390ee:	lea    rcx,[rip+0x3473]        # 0x43c568
  4390f5:	call   0x438838
  4390fa:	test   rax,rax
  4390fd:	je     0x43926d
  439103:	lea    rcx,[rip+0x345e]        # 0x43c568
  43910a:	call   0x438838
  43910f:	lea    rdx,[rip+0x3461]        # 0x43c577
  439116:	mov    rcx,rax
  439119:	call   0x438878
  43911e:	test   rax,rax
  439121:	mov    r12,rax
  439124:	je     0x43964d
  43912a:	mov    rdx,QWORD PTR [rbp+0x0]
  43912e:	lea    r8,[rip+0x345e]        # 0x43c593
  439135:	xor    ecx,ecx
  439137:	xor    r13d,r13d
  43913a:	mov    r15d,0x1
  439140:	call   0x403880
  439145:	test   rax,rax
  439148:	mov    rdi,rax
  43914b:	jne    0x439223
  439151:	jmp    0x43960c
  439156:	call   0x403110
  43915b:	mov    rsi,rax
  43915e:	test   r12,r12
  439161:	je     0x4392b5
  439167:	test   rsi,rsi
  43916a:	je     0x439579
  439170:	mov    r14,QWORD PTR [rbx+0x10]
  439174:	lea    rax,[rip+0x30a5]        # 0x43c220
  43917b:	mov    ecx,DWORD PTR [rbx+0x8]
  43917e:	test   r14,r14
  439181:	cmove  r14,rax
  439185:	call   0x4026f0
  43918a:	mov    QWORD PTR [rsp+0x20],r14
  43918f:	mov    r8,QWORD PTR [rbx]
  439192:	lea    rdx,[rip+0x3455]        # 0x43c5ee
  439199:	mov    r9,rax
  43919c:	mov    rcx,r12
  43919f:	call   0x438870
  4391a4:	mov    rdx,QWORD PTR [rsi+0x10]
  4391a8:	mov    ecx,DWORD PTR [rbx+0x8]
  4391ab:	mov    r8,QWORD PTR [rbx+0x10]
  4391af:	call   0x4025f0
  4391b4:	test   eax,eax
  4391b6:	jne    0x439275
  4391bc:	mov    r9,QWORD PTR [rbx+0x10]
  4391c0:	mov    r15,QWORD PTR [rsi+0x10]
  4391c4:	mov    r14,QWORD PTR [rsi+0x8]
  4391c8:	mov    ecx,DWORD PTR [rbx+0x8]
  4391cb:	mov    QWORD PTR [rsp+0x38],r9
  4391d0:	call   0x4026f0
  4391d5:	mov    QWORD PTR [rsp+0x28],r15
  4391da:	mov    QWORD PTR [rsp+0x20],r14
  4391df:	lea    rcx,[rip+0x342a]        # 0x43c610
  4391e6:	mov    r9,QWORD PTR [rsp+0x38]
  4391eb:	mov    rdx,QWORD PTR [rbx]
  4391ee:	mov    r8,rax
  4391f1:	call   0x4055e0
  4391f6:	mov    r8,QWORD PTR [rsi+0x20]
  4391fa:	test   r8,r8
  4391fd:	je     0x4392d5
  439203:	mov    rdx,QWORD PTR [rsi+0x8]
  439207:	lea    rcx,[rip+0x3432]        # 0x43c640
  43920e:	xor    r15d,r15d
  439211:	call   0x4055e0
  439216:	mov    rdi,QWORD PTR [rdi+0x8]
  43921a:	test   rdi,rdi
  43921d:	je     0x4392dd
  439223:	cmp    QWORD PTR [rip+0x4ae95],0x0        # 0x4840c0
  43922b:	mov    rbx,QWORD PTR [rdi]
  43922e:	je     0x439285
  439230:	mov    rcx,QWORD PTR [rbx+0x10]
  439234:	call   0x40e6e0
  439239:	mov    rcx,QWORD PTR [rip+0x4ae80]        # 0x4840c0
  439240:	mov    DWORD PTR [rbx+0x8],0x4
  439247:	call   0x4182b0
  43924c:	mov    QWORD PTR [rbx+0x10],rax
  439250:	cmp    DWORD PTR [rip+0x4ae95],0x0        # 0x4840ec
  439257:	mov    rcx,QWORD PTR [rbx]
  43925a:	jne    0x439156
  439260:	call   0x403090
  439265:	mov    rsi,rax
  439268:	jmp    0x43915e
  43926d:	xor    r12d,r12d
  439270:	jmp    0x43912a
  439275:	mov    rcx,r13
  439278:	mov    rdx,rsi
  43927b:	call   0x409b50
  439280:	mov    r13,rax
  439283:	jmp    0x439216
  439285:	cmp    QWORD PTR [rip+0x4ae3b],0x0        # 0x4840c8
  43928d:	je     0x439513
  439293:	mov    rcx,QWORD PTR [rbx+0x10]
  439297:	call   0x40e6e0
  43929c:	mov    rcx,QWORD PTR [rip+0x4ae25]        # 0x4840c8
  4392a3:	mov    DWORD PTR [rbx+0x8],0x3
  4392aa:	call   0x4182b0
  4392af:	mov    QWORD PTR [rbx+0x10],rax
  4392b3:	jmp    0x439250
  4392b5:	test   rsi,rsi
  4392b8:	jne    0x4391a4
  4392be:	mov    rdx,QWORD PTR [rbx]
  4392c1:	lea    rcx,[rip+0x3330]        # 0x43c5f8
  4392c8:	xor    r15d,r15d
  4392cb:	call   0x4055e0
  4392d0:	jmp    0x439216
  4392d5:	xor    r15d,r15d
  4392d8:	jmp    0x439216
  4392dd:	mov    rcx,r13
  4392e0:	call   0x409fa0
  4392e5:	test   r15d,r15d
  4392e8:	mov    rdi,rax
  4392eb:	je     0x439590
  4392f1:	test   r12,r12
  4392f4:	je     0x4392fe
  4392f6:	mov    rcx,r12
  4392f9:	call   0x438898
  4392fe:	mov    edx,0x1
  439303:	mov    rcx,rbp
  439306:	call   0x41a8e0
  43930b:	cmp    DWORD PTR [rip+0x4adca],0x0        # 0x4840dc
  439312:	jne    0x4393e6
  439318:	cmp    DWORD PTR [rip+0x4ad85],0x0        # 0x4840a4
  43931f:	mov    rbx,rdi
  439322:	jne    0x4393ed
  439328:	mov    ebx,DWORD PTR [rip+0x4adba]        # 0x4840e8
  43932e:	test   ebx,ebx
  439330:	jne    0x4393ca
  439336:	cmp    DWORD PTR [rip+0x4adbf],0x0        # 0x4840fc
  43933d:	mov    rsi,rdi
  439340:	jne    0x439464
  439346:	cmp    DWORD PTR [rip+0x4ad8b],0x0        # 0x4840d8
  43934d:	mov    rsi,rdi
  439350:	jne    0x439436
  439356:	cmp    DWORD PTR [rip+0x4ad77],0x0        # 0x4840d4
  43935d:	mov    r13,rdi
  439360:	jne    0x4394ae
  439366:	cmp    DWORD PTR [rip+0x4ad63],0x0        # 0x4840d0
  43936d:	mov    r13,rdi
  439370:	jne    0x439472
  439376:	mov    rdx,QWORD PTR [rip+0x4ad63]        # 0x4840e0
  43937d:	test   rdx,rdx
  439380:	je     0x4395d3
  439386:	mov    rcx,rdi
  439389:	call   0x402520
  43938e:	lea    rcx,[rip+0x32db]        # 0x43c670
  439395:	mov    rsi,rax
  439398:	mov    rdx,rax
  43939b:	call   0x4387d8
  4393a0:	mov    rcx,rsi
  4393a3:	call   0x40e6e0
  4393a8:	movzx  eax,BYTE PTR [rip+0x4ad49]        # 0x4840f8
  4393af:	test   al,al
  4393b1:	jne    0x4395e2
  4393b7:	mov    ecx,0xa
  4393bc:	call   0x4387d0
  4393c1:	jmp    0x438f1d
  4393c6:	mov    rdi,QWORD PTR [rdi+0x8]
  4393ca:	test   rdi,rdi
  4393cd:	je     0x439590
  4393d3:	mov    rax,QWORD PTR [rdi]
  4393d6:	mov    edx,DWORD PTR [rax+0x78]
  4393d9:	mov    rcx,QWORD PTR [rax+0x38]
  4393dd:	call   0x4054d0
  4393e2:	test   eax,eax
  4393e4:	je     0x4393c6
  4393e6:	xor    ebx,ebx
  4393e8:	jmp    0x438f1d
  4393ed:	test   rbx,rbx
  4393f0:	je     0x439328
  4393f6:	mov    rax,QWORD PTR [rbx]
  4393f9:	mov    rcx,QWORD PTR [rax+0x60]
  4393fd:	test   rcx,rcx
  439400:	je     0x439411
  439402:	lea    rdx,[rip+0xfffffffffffcbaf7]        # 0x404f00
  439409:	xor    r8d,r8d
  43940c:	call   0x409430
  439411:	mov    rbx,QWORD PTR [rbx+0x8]
  439415:	test   rbx,rbx
  439418:	je     0x439328
  43941e:	mov    ecx,0xa
  439423:	call   0x4387d0
  439428:	jmp    0x4393ed
  43942a:	test   al,al
  43942c:	jne    0x4395be
  439432:	mov    rsi,QWORD PTR [rsi+0x8]
  439436:	test   rsi,rsi
  439439:	je     0x439356
  43943f:	mov    rcx,QWORD PTR [rsi]
  439442:	mov    rdx,QWORD PTR [rcx]
  439445:	jmp    0x43944b
  439447:	add    rdx,0x1
  43944b:	movzx  eax,BYTE PTR [rdx]
  43944e:	cmp    al,0x2f
  439450:	je     0x439447
  439452:	jmp    0x43942a
  439454:	mov    rax,QWORD PTR [rsi]
  439457:	mov    rcx,QWORD PTR [rax+0x10]
  43945b:	call   0x4387c8
  439460:	mov    rsi,QWORD PTR [rsi+0x8]
  439464:	test   rsi,rsi
  439467:	jne    0x439454
  439469:	jmp    0x439346
  43946e:	mov    r13,QWORD PTR [r13+0x8]
  439472:	test   r13,r13
  439475:	je     0x439376
  43947b:	mov    r12,QWORD PTR [r13+0x0]
  43947f:	mov    rsi,QWORD PTR [r12+0x48]
  439484:	jmp    0x4394a3
  439486:	mov    rbp,QWORD PTR [rsi]
  439489:	mov    rcx,QWORD PTR [r12+0x38]
  43948e:	mov    rdx,rbp
  439491:	call   0x40a070
  439496:	test   rax,rax
  439499:	je     0x439550
  43949f:	mov    rsi,QWORD PTR [rsi+0x8]
  4394a3:	test   rsi,rsi
  4394a6:	jne    0x439486
  4394a8:	jmp    0x43946e
  4394aa:	mov    r13,QWORD PTR [r13+0x8]
  4394ae:	test   r13,r13
  4394b1:	je     0x439366
  4394b7:	mov    r12,QWORD PTR [r13+0x0]
  4394bb:	mov    rsi,QWORD PTR [r12+0x38]
  4394c0:	jmp    0x4394cf
  4394c2:	mov    rcx,QWORD PTR [rbp+0x0]
  4394c6:	call   0x4387c8
  4394cb:	mov    rsi,QWORD PTR [rsi+0x8]
  4394cf:	test   rsi,rsi
  4394d2:	je     0x4394aa
  4394d4:	mov    rbp,QWORD PTR [rsi]
  4394d7:	mov    rcx,QWORD PTR [r12+0x68]
  4394dc:	mov    rdx,QWORD PTR [rbp+0x0]
  4394e0:	call   0x408de0
  4394e5:	test   rax,rax
  4394e8:	je     0x4394c2
  4394ea:	mov    ecx,DWORD PTR [rax+0x8]
  4394ed:	cmp    ecx,0x6
  4394f0:	je     0x4394c2
  4394f2:	mov    r14,QWORD PTR [rax+0x10]
  4394f6:	call   0x4026f0
  4394fb:	mov    rdx,QWORD PTR [rbp+0x0]
  4394ff:	lea    rcx,[rip+0x30e8]        # 0x43c5ee
  439506:	mov    r8,rax
  439509:	mov    r9,r14
  43950c:	call   0x4387d8
  439511:	jmp    0x4394cb
  439513:	cmp    QWORD PTR [rip+0x4ab9d],0x0        # 0x4840b8
  43951b:	je     0x439250
  439521:	mov    rcx,QWORD PTR [rbx+0x10]
  439525:	call   0x40e6e0
  43952a:	mov    rcx,QWORD PTR [rip+0x4ab87]        # 0x4840b8
  439531:	mov    DWORD PTR [rbx+0x8],0x2
  439538:	call   0x4182b0
  43953d:	mov    QWORD PTR [rbx+0x10],rax
  439541:	jmp    0x439250
  439546:	call   0x403120
  43954b:	jmp    0x438f1d
  439550:	mov    rcx,QWORD PTR [r12+0x68]
  439555:	mov    rdx,QWORD PTR [rbp+0x0]
  439559:	call   0x408de0
  43955e:	test   rax,rax
  439561:	je     0x43956b
  439563:	mov    ecx,DWORD PTR [rax+0x8]
  439566:	cmp    ecx,0x6
  439569:	jne    0x43959a
  43956b:	mov    rcx,QWORD PTR [rbp+0x0]
  43956f:	call   0x4387c8
  439574:	jmp    0x43949f
  439579:	mov    r8,QWORD PTR [rbx]
  43957c:	lea    rdx,[rip+0x305d]        # 0x43c5e0
  439583:	mov    rcx,r12
  439586:	call   0x438870
  43958b:	jmp    0x4392be
  439590:	mov    ebx,0x1
  439595:	jmp    0x438f1d
  43959a:	mov    r14,QWORD PTR [rax+0x10]
  43959e:	call   0x4026f0
  4395a3:	mov    rdx,QWORD PTR [rbp+0x0]
  4395a7:	lea    rcx,[rip+0x3040]        # 0x43c5ee
  4395ae:	mov    r8,rax
  4395b1:	mov    r9,r14
  4395b4:	call   0x4387d8
  4395b9:	jmp    0x43949f
  4395be:	mov    r8,QWORD PTR [rcx+0x10]
  4395c2:	lea    rcx,[rip+0x309e]        # 0x43c667
  4395c9:	call   0x4387d8
  4395ce:	jmp    0x439432
  4395d3:	movzx  eax,BYTE PTR [rip+0x4ab1e]        # 0x4840f8
  4395da:	test   al,al
  4395dc:	je     0x4393e6
  4395e2:	mov    rcx,rdi
  4395e5:	movzx  edx,al
  4395e8:	call   0x402270
  4395ed:	lea    rcx,[rip+0x307c]        # 0x43c670
  4395f4:	mov    rsi,rax
  4395f7:	mov    rdx,rax
  4395fa:	call   0x4387d8
  4395ff:	mov    rcx,rsi
  439602:	call   0x40e6e0
  439607:	jmp    0x4393b7
  43960c:	call   QWORD PTR [rip+0x4d276]        # 0x486888
  439612:	lea    rcx,[rip+0x2f97]        # 0x43c5b0
  439619:	lea    r9,[rax+0x60]
  43961d:	mov    r8d,0x2f
  439623:	mov    edx,0x1
  439628:	mov    ebx,0x1
  43962d:	call   0x438848
  439632:	jmp    0x438f1d
  439637:	lea    rcx,[rip+0x2c92]        # 0x43c2d0
  43963e:	call   0x4055e0
  439643:	mov    ecx,0x1
  439648:	call   0x4388a0
  43964d:	lea    rcx,[rip+0x2f14]        # 0x43c568
  439654:	call   0x438838
  439659:	mov    rbx,rax
  43965c:	call   QWORD PTR [rip+0x4d226]        # 0x486888
  439662:	lea    rdx,[rip+0x2f10]        # 0x43c579
  439669:	lea    rcx,[rax+0x60]
  43966d:	mov    r8,rbx
  439670:	call   0x438870
  439675:	mov    ecx,0x1
  43967a:	call   0x4388a0
  43967f:	nop
  439680:	push   rbx
  439681:	sub    rsp,0x20
  439685:	call   0x411680
  43968a:	lea    rcx,[rip+0x663a]        # 0x43fccb
  439691:	mov    rbx,rax
  439694:	mov    rdx,rax
  439697:	call   0x40fef0
  43969c:	mov    rcx,rbx
  43969f:	call   0x40e6e0
  4396a4:	xor    ecx,ecx
  4396a6:	call   0x4388a0
  4396ab:	nop
  4396ac:	nop
  4396ad:	nop
  4396ae:	nop
  4396af:	nop
  4396b0:	sub    rsp,0x28
  4396b4:	call   0x438790
  4396b9:	lea    rcx,[rip+0x7660]        # 0x440d20
  4396c0:	mov    rdx,rax
  4396c3:	call   0x415050
  4396c8:	nop
  4396c9:	nop
  4396ca:	nop
  4396cb:	nop
  4396cc:	nop
  4396cd:	nop
  4396ce:	nop
  4396cf:	nop
  4396d0:	push   rbx
  4396d1:	add    rsp,0xffffffffffffff80
  4396d5:	call   0x40bff0
  4396da:	call   0x4272a0
  4396df:	lea    rax,[rip+0x41650]        # 0x47ad36
  4396e6:	lea    rcx,[rip+0x41673]        # 0x47ad60
  4396ed:	mov    DWORD PTR [rsp+0x28],0x4
  4396f5:	mov    DWORD PTR [rsp+0x38],0x8
  4396fd:	mov    DWORD PTR [rsp+0x48],0x10
  439705:	mov    QWORD PTR [rsp+0x20],rax
  43970a:	lea    rax,[rip+0x4162b]        # 0x47ad3c
  439711:	mov    DWORD PTR [rsp+0x58],0x20
  439719:	mov    DWORD PTR [rsp+0x68],0x40
  439721:	mov    DWORD PTR [rsp+0x78],0x80
  439729:	mov    QWORD PTR [rsp+0x30],rax
  43972e:	lea    rax,[rip+0x41610]        # 0x47ad45
  439735:	mov    ebx,DWORD PTR [rip+0x1249]        # 0x43a984
  43973b:	mov    QWORD PTR [rsp+0x40],rax
  439740:	lea    rax,[rip+0x41606]        # 0x47ad4d
  439747:	mov    QWORD PTR [rsp+0x50],rax
  43974c:	lea    rax,[rip+0x41602]        # 0x47ad55
  439753:	mov    QWORD PTR [rsp+0x60],rax
  439758:	lea    rax,[rip+0x415fb]        # 0x47ad5a
  43975f:	mov    QWORD PTR [rsp+0x70],rax
  439764:	call   0x438838
  439769:	test   rax,rax
  43976c:	je     0x439809
  439772:	lea    rdx,[rsp+0x20]
  439777:	mov    r8d,0x6
  43977d:	mov    rcx,rax
  439780:	call   0x430c70
  439785:	mov    DWORD PTR [rip+0x11f9],eax        # 0x43a984
  43978b:	lea    rax,[rip+0x415e2]        # 0x47ad74
  439792:	lea    rcx,[rip+0x41606]        # 0x47ad9f
  439799:	mov    DWORD PTR [rsp+0x28],0x1
  4397a1:	mov    DWORD PTR [rsp+0x38],0x18
  4397a9:	mov    QWORD PTR [rsp+0x20],rax
  4397ae:	lea    rax,[rip+0x415cb]        # 0x47ad80
  4397b5:	mov    DWORD PTR [rsp+0x48],0x8
  4397bd:	mov    QWORD PTR [rsp+0x30],rax
  4397c2:	lea    rax,[rip+0x415c6]        # 0x47ad8f
  4397c9:	mov    QWORD PTR [rsp+0x40],rax
  4397ce:	call   0x438838
  4397d3:	xor    edx,edx
  4397d5:	test   rax,rax
  4397d8:	je     0x4397ef
  4397da:	lea    rdx,[rsp+0x20]
  4397df:	mov    r8d,0x3
  4397e5:	mov    rcx,rax
  4397e8:	call   0x430c70
  4397ed:	mov    edx,eax
  4397ef:	mov    eax,edx
  4397f1:	and    edx,0x1
  4397f4:	and    eax,0xfffffffc
  4397f7:	or     DWORD PTR [rip+0x1183],eax        # 0x43a980
  4397fd:	mov    DWORD PTR [rip+0x4af2d],edx        # 0x484730
  439803:	sub    rsp,0xffffffffffffff80
  439807:	pop    rbx
  439808:	ret    
  439809:	mov    eax,ebx
  43980b:	jmp    0x439785
  439810:	(bad)  
  439811:	(bad)  
  439812:	(bad)  
  439813:	(bad)  
  439814:	(bad)  
  439815:	(bad)  
  439816:	(bad)  
  439817:	call   rax
  439819:	xchg   esi,eax
  43981a:	rex.XB add BYTE PTR [r8],al
	...
  439825:	add    BYTE PTR [rax],al
  439827:	add    bh,bh
  439829:	(bad)  
  43982a:	(bad)  
  43982b:	(bad)  
  43982c:	(bad)  
  43982d:	(bad)  
  43982e:	(bad)  
  43982f:	inc    DWORD PTR [rax]
  439831:	add    BYTE PTR [rax],al
  439833:	add    BYTE PTR [rax],al
  439835:	add    BYTE PTR [rax],al
	...
