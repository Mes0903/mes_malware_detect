
b01ebabccdd9ba01a12d94191864a364100ea7978ddea792b99f614b7c267ceb.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x47b5]        # 0x4057d0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x47b6]        # 0x4057e0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x47b9]        # 0x4057f0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x477c]        # 0x4057c0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x462f]        # 0x405680
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4751]        # 0x4057b0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402ef0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401e70
  401081:	mov    rdx,QWORD PTR [rip+0x4688]        # 0x405710
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x466e]        # 0x405700
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x46d4]        # 0x405770
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x460b]        # 0x4056b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401a50
  4010af:	mov    rax,QWORD PTR [rip+0x457a]        # 0x405630
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402ef0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xc29]        # 0x401d50
  401127:	call   0x401d40
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4635]        # 0x4057a0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x45c5]        # 0x405760
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402f08
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x45ea]        # 0x4057b0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x44eb]        # 0x4056e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x821a]        # 0x40941c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x44c7]        # 0x4056f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x440c]        # 0x405670
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402060
  40127d:	lea    rcx,[rip+0x137c]        # 0x402600
  401284:	call   QWORD PTR [rip+0x818a]        # 0x409414
  40128a:	mov    rdx,QWORD PTR [rip+0x443f]        # 0x4056d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402510
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402f30
  4012a5:	call   0x401e50
  4012aa:	mov    rax,QWORD PTR [rip+0x43cf]        # 0x405680
  4012b1:	mov    QWORD PTR [rip+0x7b90],rax        # 0x408e48
  4012b8:	mov    rax,QWORD PTR [rip+0x43e1]        # 0x4056a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x7b29],rax        # 0x408e40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402e68
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402e28
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402e68
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402e60
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401a20
  4013bb:	mov    rax,QWORD PTR [rip+0x42ce]        # 0x405690
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403000
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402ed8
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x42b9]        # 0x4056f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402ee0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x42cd]        # 0x405730
  401463:	mov    rcx,QWORD PTR [rip+0x42b6]        # 0x405720
  40146a:	call   0x402ed0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7f2b]        # 0x4093c4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x42a9]        # 0x405750
  4014a7:	mov    rcx,QWORD PTR [rip+0x4292]        # 0x405740
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402ed0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402ea0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x42d5]        # 0x4057b0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401a60
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x42a5]        # 0x4057b0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401a60
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x28
  401534:	mov    r8,QWORD PTR [rip+0x6f05]        # 0x408440
  40153b:	lea    rdx,[rip+0x3abe]        # 0x405000
  401542:	mov    r9,rcx
  401545:	lea    rcx,[rip+0x6af4]        # 0x408040
  40154c:	call   0x402e30
  401551:	lea    rax,[rip+0x6ae8]        # 0x408040
  401558:	add    rsp,0x28
  40155c:	ret    
  40155d:	nop    DWORD PTR [rax]
  401560:	push   r13
  401562:	push   r12
  401564:	push   rbp
  401565:	push   rdi
  401566:	push   rsi
  401567:	push   rbx
  401568:	sub    rsp,0x38
  40156c:	lea    rdi,[rsp+0x98]
  401574:	lea    rsi,[rsp+0x90]
  40157c:	mov    r12,rdx
  40157f:	mov    rbx,r8
  401582:	mov    rbp,rcx
  401585:	mov    r13,r9
  401588:	mov    r8,rdi
  40158b:	mov    rdx,rsi
  40158e:	call   0x401870
  401593:	test   eax,eax
  401595:	jne    0x4015a4
  401597:	add    rsp,0x38
  40159b:	pop    rbx
  40159c:	pop    rsi
  40159d:	pop    rdi
  40159e:	pop    rbp
  40159f:	pop    r12
  4015a1:	pop    r13
  4015a3:	ret    
  4015a4:	movsd  xmm0,QWORD PTR [rsp+0x90]
  4015ad:	lea    rdx,[rip+0x3a52]        # 0x405006
  4015b4:	mov    r8,r13
  4015b7:	mov    rcx,rbx
  4015ba:	movsd  QWORD PTR [rsp+0x20],xmm0
  4015c0:	movsd  xmm0,QWORD PTR [rsp+0x98]
  4015c9:	movsd  QWORD PTR [rsp+0x28],xmm0
  4015cf:	call   0x402e88
  4015d4:	cmp    WORD PTR [r12],0x2
  4015da:	je     0x401689
  4015e0:	movsd  xmm1,QWORD PTR [rsp+0x98]
  4015e9:	lea    rdx,[rip+0x3a3e]        # 0x40502e
  4015f0:	mov    rcx,rbx
  4015f3:	movsd  xmm0,QWORD PTR [rsp+0x90]
  4015fc:	movq   r9,xmm1
  401601:	movapd xmm3,xmm1
  401605:	movq   r8,xmm0
  40160a:	movapd xmm2,xmm0
  40160e:	call   0x402e88
  401613:	mov    r9,rdi
  401616:	mov    r8,rsi
  401619:	mov    edx,0x1
  40161e:	mov    rcx,r12
  401621:	call   0x401840
  401626:	test   eax,eax
  401628:	je     0x40167a
  40162a:	cmp    DWORD PTR [rsp+0xa8],0x0
  401632:	je     0x401791
  401638:	movsd  xmm0,QWORD PTR [rsp+0x90]
  401641:	lea    rdx,[rip+0x39f6]        # 0x40503e
  401648:	mov    rcx,rbx
  40164b:	movapd xmm2,xmm0
  40164f:	movq   r8,xmm0
  401654:	call   0x402e88
  401659:	movsd  xmm0,QWORD PTR [rsp+0x98]
  401662:	lea    rdx,[rip+0x39de]        # 0x405047
  401669:	mov    rcx,rbx
  40166c:	movapd xmm2,xmm0
  401670:	movq   r8,xmm0
  401675:	call   0x402e88
  40167a:	mov    rdx,rbx
  40167d:	mov    ecx,0xa
  401682:	call   0x402e80
  401687:	jmp    0x4016d9
  401689:	cmp    DWORD PTR [rsp+0xa8],0x0
  401691:	je     0x401732
  401697:	movsd  xmm0,QWORD PTR [rsp+0x90]
  4016a0:	lea    rdx,[rip+0x3966]        # 0x40500d
  4016a7:	mov    rcx,rbx
  4016aa:	movapd xmm2,xmm0
  4016ae:	movq   r8,xmm0
  4016b3:	call   0x402e88
  4016b8:	movsd  xmm0,QWORD PTR [rsp+0x98]
  4016c1:	lea    rdx,[rip+0x394c]        # 0x405014
  4016c8:	mov    rcx,rbx
  4016cb:	movapd xmm2,xmm0
  4016cf:	movq   r8,xmm0
  4016d4:	call   0x402e88
  4016d9:	cmp    DWORD PTR [rsp+0xa0],0x0
  4016e1:	jne    0x4016ed
  4016e3:	mov    eax,0x1
  4016e8:	jmp    0x401597
  4016ed:	lea    rdx,[rsp+0x20]
  4016f2:	lea    r8,[rsp+0x28]
  4016f7:	mov    rcx,rbp
  4016fa:	call   0x401858
  4016ff:	test   eax,eax
  401701:	je     0x4016e3
  401703:	movsd  xmm1,QWORD PTR [rsp+0x28]
  401709:	lea    rdx,[rip+0x3948]        # 0x405058
  401710:	mov    rcx,rbx
  401713:	movsd  xmm0,QWORD PTR [rsp+0x20]
  401719:	movapd xmm3,xmm1
  40171d:	movq   r9,xmm1
  401722:	movapd xmm2,xmm0
  401726:	movq   r8,xmm0
  40172b:	call   0x402e88
  401730:	jmp    0x4016e3
  401732:	movsd  xmm0,QWORD PTR [rsp+0x90]
  40173b:	lea    rdx,[rip+0x38d9]        # 0x40501b
  401742:	mov    r8d,0x2
  401748:	call   0x401890
  40174d:	lea    rdx,[rip+0x38cc]        # 0x405020
  401754:	mov    rcx,rbx
  401757:	mov    r8,rax
  40175a:	call   0x402e88
  40175f:	lea    rdx,[rip+0x38bf]        # 0x405025
  401766:	movsd  xmm0,QWORD PTR [rsp+0x98]
  40176f:	mov    r8d,0x2
  401775:	call   0x401890
  40177a:	lea    rdx,[rip+0x38a8]        # 0x405029
  401781:	mov    r8,rax
  401784:	mov    rcx,rbx
  401787:	call   0x402e88
  40178c:	jmp    0x4016d9
  401791:	movsd  xmm0,QWORD PTR [rsp+0x90]
  40179a:	lea    rdx,[rip+0x387a]        # 0x40501b
  4017a1:	mov    r8d,0x2
  4017a7:	call   0x401890
  4017ac:	lea    rdx,[rip+0x389a]        # 0x40504d
  4017b3:	mov    rcx,rbx
  4017b6:	mov    r8,rax
  4017b9:	call   0x402e88
  4017be:	lea    rdx,[rip+0x3860]        # 0x405025
  4017c5:	movsd  xmm0,QWORD PTR [rsp+0x98]
  4017ce:	mov    r8d,0x2
  4017d4:	call   0x401890
  4017d9:	lea    rdx,[rip+0x3874]        # 0x405054
  4017e0:	mov    r8,rax
  4017e3:	mov    rcx,rbx
  4017e6:	call   0x402e88
  4017eb:	jmp    0x40167a
  4017f0:	sub    rsp,0x28
  4017f4:	lea    rcx,[rip+0x387d]        # 0x405078
  4017fb:	call   0x402e40
  401800:	mov    ecx,0x1
  401805:	call   0x402ea0
  40180a:	nop
  40180b:	nop
  40180c:	nop
  40180d:	nop
  40180e:	nop
  40180f:	nop
  401810:	jmp    QWORD PTR [rip+0x7b6e]        # 0x409384
  401816:	nop
  401817:	nop
  401818:	jmp    QWORD PTR [rip+0x7b5e]        # 0x40937c
  40181e:	nop
  40181f:	nop
  401820:	jmp    QWORD PTR [rip+0x7b4e]        # 0x409374
  401826:	nop
  401827:	nop
  401828:	jmp    QWORD PTR [rip+0x7b3e]        # 0x40936c
  40182e:	nop
  40182f:	nop
  401830:	jmp    QWORD PTR [rip+0x7b2e]        # 0x409364
  401836:	nop
  401837:	nop
  401838:	jmp    QWORD PTR [rip+0x7b1e]        # 0x40935c
  40183e:	nop
  40183f:	nop
  401840:	jmp    QWORD PTR [rip+0x7b0e]        # 0x409354
  401846:	nop
  401847:	nop
  401848:	jmp    QWORD PTR [rip+0x7afe]        # 0x40934c
  40184e:	nop
  40184f:	nop
  401850:	jmp    QWORD PTR [rip+0x7aee]        # 0x409344
  401856:	nop
  401857:	nop
  401858:	jmp    QWORD PTR [rip+0x7ade]        # 0x40933c
  40185e:	nop
  40185f:	nop
  401860:	jmp    QWORD PTR [rip+0x7ace]        # 0x409334
  401866:	nop
  401867:	nop
  401868:	jmp    QWORD PTR [rip+0x7abe]        # 0x40932c
  40186e:	nop
  40186f:	nop
  401870:	jmp    QWORD PTR [rip+0x7aae]        # 0x409324
  401876:	nop
  401877:	nop
  401878:	jmp    QWORD PTR [rip+0x7a9e]        # 0x40931c
  40187e:	nop
  40187f:	nop
  401880:	jmp    QWORD PTR [rip+0x7a8e]        # 0x409314
  401886:	nop
  401887:	nop
  401888:	jmp    QWORD PTR [rip+0x7a7e]        # 0x40930c
  40188e:	nop
  40188f:	nop
  401890:	jmp    QWORD PTR [rip+0x7a6e]        # 0x409304
  401896:	nop
  401897:	nop
  401898:	jmp    QWORD PTR [rip+0x7a5e]        # 0x4092fc
  40189e:	nop
  40189f:	nop
  4018a0:	jmp    QWORD PTR [rip+0x7cde]        # 0x409584
  4018a6:	nop
  4018a7:	nop
  4018a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4018b0:	push   rbx
  4018b1:	sub    rsp,0x30
  4018b5:	mov    rbx,rcx
  4018b8:	mov    rcx,QWORD PTR [rip+0x7591]        # 0x408e50
  4018bf:	call   0x401e60
  4018c4:	cmp    rax,0xffffffffffffffff
  4018c8:	mov    QWORD PTR [rsp+0x20],rax
  4018cd:	je     0x401945
  4018cf:	mov    ecx,0x8
  4018d4:	call   0x402ec8
  4018d9:	mov    rcx,QWORD PTR [rip+0x7570]        # 0x408e50
  4018e0:	call   0x401e60
  4018e5:	mov    rcx,QWORD PTR [rip+0x756c]        # 0x408e58
  4018ec:	mov    QWORD PTR [rsp+0x20],rax
  4018f1:	call   0x401e60
  4018f6:	lea    rdx,[rsp+0x20]
  4018fb:	lea    r8,[rsp+0x28]
  401900:	mov    rcx,rbx
  401903:	mov    QWORD PTR [rsp+0x28],rax
  401908:	call   0x402f10
  40190d:	mov    rcx,QWORD PTR [rsp+0x20]
  401912:	mov    rbx,rax
  401915:	call   0x401e70
  40191a:	mov    rcx,QWORD PTR [rsp+0x28]
  40191f:	mov    QWORD PTR [rip+0x752a],rax        # 0x408e50
  401926:	call   0x401e70
  40192b:	mov    ecx,0x8
  401930:	mov    QWORD PTR [rip+0x7521],rax        # 0x408e58
  401937:	call   0x402eb8
  40193c:	mov    rax,rbx
  40193f:	add    rsp,0x30
  401943:	pop    rbx
  401944:	ret    
  401945:	mov    rax,QWORD PTR [rip+0x3d74]        # 0x4056c0
  40194c:	mov    rcx,rbx
  40194f:	call   QWORD PTR [rax]
  401951:	add    rsp,0x30
  401955:	pop    rbx
  401956:	ret    
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	sub    rsp,0x28
  401964:	call   0x4018b0
  401969:	test   rax,rax
  40196c:	sete   al
  40196f:	movzx  eax,al
  401972:	neg    eax
  401974:	add    rsp,0x28
  401978:	ret    
  401979:	nop
  40197a:	nop
  40197b:	nop
  40197c:	nop
  40197d:	nop
  40197e:	nop
  40197f:	nop
  401980:	sub    rsp,0x28
  401984:	mov    rax,QWORD PTR [rip+0x2685]        # 0x404010
  40198b:	mov    rax,QWORD PTR [rax]
  40198e:	test   rax,rax
  401991:	je     0x4019b0
  401993:	call   rax
  401995:	mov    rax,QWORD PTR [rip+0x2674]        # 0x404010
  40199c:	lea    rdx,[rax+0x8]
  4019a0:	mov    rax,QWORD PTR [rax+0x8]
  4019a4:	mov    QWORD PTR [rip+0x2665],rdx        # 0x404010
  4019ab:	test   rax,rax
  4019ae:	jne    0x401993
  4019b0:	add    rsp,0x28
  4019b4:	ret    
  4019b5:	nop
  4019b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019c0:	push   rsi
  4019c1:	push   rbx
  4019c2:	sub    rsp,0x28
  4019c6:	mov    rsi,QWORD PTR [rip+0x3c73]        # 0x405640
  4019cd:	mov    rax,QWORD PTR [rsi]
  4019d0:	cmp    eax,0xffffffff
  4019d3:	mov    ebx,eax
  4019d5:	je     0x401a00
  4019d7:	test   ebx,ebx
  4019d9:	je     0x4019ea
  4019db:	nop    DWORD PTR [rax+rax*1+0x0]
  4019e0:	mov    eax,ebx
  4019e2:	call   QWORD PTR [rsi+rax*8]
  4019e5:	sub    ebx,0x1
  4019e8:	jne    0x4019e0
  4019ea:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401980
  4019f1:	add    rsp,0x28
  4019f5:	pop    rbx
  4019f6:	pop    rsi
  4019f7:	jmp    0x401960
  4019fc:	nop    DWORD PTR [rax+0x0]
  401a00:	xor    ebx,ebx
  401a02:	jmp    0x401a06
  401a04:	mov    ebx,eax
  401a06:	lea    edx,[rbx+0x1]
  401a09:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401a0e:	mov    rax,rdx
  401a11:	jne    0x401a04
  401a13:	jmp    0x4019d7
  401a15:	nop
  401a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a20:	mov    eax,DWORD PTR [rip+0x6a5a]        # 0x408480
  401a26:	test   eax,eax
  401a28:	je     0x401a30
  401a2a:	repz ret 
  401a2c:	nop    DWORD PTR [rax+0x0]
  401a30:	mov    DWORD PTR [rip+0x6a46],0x1        # 0x408480
  401a3a:	jmp    0x4019c0
  401a3c:	nop
  401a3d:	nop
  401a3e:	nop
  401a3f:	nop
  401a40:	mov    rax,QWORD PTR [rip+0x7a35]        # 0x40947c
  401a47:	rex.W jmp rax
  401a4a:	nop
  401a4b:	nop
  401a4c:	nop
  401a4d:	nop
  401a4e:	nop
  401a4f:	nop
  401a50:	xor    eax,eax
  401a52:	ret    
  401a53:	nop
  401a54:	nop
  401a55:	nop
  401a56:	nop
  401a57:	nop
  401a58:	nop
  401a59:	nop
  401a5a:	nop
  401a5b:	nop
  401a5c:	nop
  401a5d:	nop
  401a5e:	nop
  401a5f:	nop
  401a60:	push   r12
  401a62:	push   rbp
  401a63:	push   rdi
  401a64:	push   rsi
  401a65:	push   rbx
  401a66:	sub    rsp,0x40
  401a6a:	mov    rbx,QWORD PTR [rip+0x25ff]        # 0x404070
  401a71:	movabs rax,0x2b992ddfa232
  401a7b:	mov    QWORD PTR [rsp+0x20],0x0
  401a84:	cmp    rbx,rax
  401a87:	je     0x401aa0
  401a89:	not    rbx
  401a8c:	mov    QWORD PTR [rip+0x25ed],rbx        # 0x404080
  401a93:	add    rsp,0x40
  401a97:	pop    rbx
  401a98:	pop    rsi
  401a99:	pop    rdi
  401a9a:	pop    rbp
  401a9b:	pop    r12
  401a9d:	ret    
  401a9e:	xchg   ax,ax
  401aa0:	lea    rcx,[rsp+0x20]
  401aa5:	call   QWORD PTR [rip+0x7921]        # 0x4093cc
  401aab:	mov    r12,QWORD PTR [rsp+0x20]
  401ab0:	call   QWORD PTR [rip+0x78f6]        # 0x4093ac
  401ab6:	mov    ebp,eax
  401ab8:	call   QWORD PTR [rip+0x78f6]        # 0x4093b4
  401abe:	mov    edi,eax
  401ac0:	call   QWORD PTR [rip+0x790e]        # 0x4093d4
  401ac6:	lea    rcx,[rsp+0x30]
  401acb:	mov    esi,eax
  401acd:	call   QWORD PTR [rip+0x7919]        # 0x4093ec
  401ad3:	xor    r12,QWORD PTR [rsp+0x30]
  401ad8:	mov    edx,edi
  401ada:	movabs rax,0xffffffffffff
  401ae4:	xor    rbp,r12
  401ae7:	mov    rdi,rbp
  401aea:	xor    rdi,rdx
  401aed:	mov    edx,esi
  401aef:	xor    rdi,rdx
  401af2:	mov    rsi,rdi
  401af5:	and    rsi,rax
  401af8:	cmp    rsi,rbx
  401afb:	je     0x401b20
  401afd:	mov    rax,rsi
  401b00:	not    rax
  401b03:	mov    QWORD PTR [rip+0x2566],rsi        # 0x404070
  401b0a:	mov    QWORD PTR [rip+0x256f],rax        # 0x404080
  401b11:	add    rsp,0x40
  401b15:	pop    rbx
  401b16:	pop    rsi
  401b17:	pop    rdi
  401b18:	pop    rbp
  401b19:	pop    r12
  401b1b:	ret    
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	movabs rax,0xffffd466d2205dcc
  401b2a:	movabs rsi,0x2b992ddfa233
  401b34:	jmp    0x401b03
  401b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b40:	push   rbp
  401b41:	push   rsi
  401b42:	push   rbx
  401b43:	mov    rbp,rsp
  401b46:	sub    rsp,0x70
  401b4a:	mov    rsi,rcx
  401b4d:	lea    rcx,[rip+0x696c]        # 0x4084c0
  401b54:	call   QWORD PTR [rip+0x78a2]        # 0x4093fc
  401b5a:	mov    rbx,QWORD PTR [rip+0x6a57]        # 0x4085b8
  401b61:	xor    r8d,r8d
  401b64:	lea    rdx,[rbp-0x28]
  401b68:	mov    rcx,rbx
  401b6b:	call   QWORD PTR [rip+0x7893]        # 0x409404
  401b71:	test   rax,rax
  401b74:	mov    r9,rax
  401b77:	je     0x401c20
  401b7d:	lea    rax,[rbp-0x20]
  401b81:	mov    QWORD PTR [rsp+0x38],0x0
  401b8a:	mov    r8,rbx
  401b8d:	mov    rdx,QWORD PTR [rbp-0x28]
  401b91:	xor    ecx,ecx
  401b93:	mov    QWORD PTR [rsp+0x30],rax
  401b98:	lea    rax,[rbp-0x18]
  401b9c:	mov    QWORD PTR [rsp+0x28],rax
  401ba1:	lea    rax,[rip+0x6918]        # 0x4084c0
  401ba8:	mov    QWORD PTR [rsp+0x20],rax
  401bad:	call   QWORD PTR [rip+0x7859]        # 0x40940c
  401bb3:	mov    rax,QWORD PTR [rip+0x69fe]        # 0x4085b8
  401bba:	xor    ecx,ecx
  401bbc:	mov    QWORD PTR [rip+0x697d],rsi        # 0x408540
  401bc3:	mov    DWORD PTR [rip+0x6df3],0xc0000409        # 0x4089c0
  401bcd:	mov    DWORD PTR [rip+0x6ded],0x1        # 0x4089c4
  401bd7:	mov    QWORD PTR [rip+0x6df2],rax        # 0x4089d0
  401bde:	mov    rax,QWORD PTR [rip+0x248b]        # 0x404070
  401be5:	mov    QWORD PTR [rbp-0x10],rax
  401be9:	mov    rax,QWORD PTR [rip+0x2490]        # 0x404080
  401bf0:	mov    QWORD PTR [rbp-0x8],rax
  401bf4:	call   QWORD PTR [rip+0x781a]        # 0x409414
  401bfa:	lea    rcx,[rip+0x379f]        # 0x4053a0
  401c01:	call   QWORD PTR [rip+0x782d]        # 0x409434
  401c07:	call   QWORD PTR [rip+0x7797]        # 0x4093a4
  401c0d:	mov    edx,0xc0000409
  401c12:	mov    rcx,rax
  401c15:	call   QWORD PTR [rip+0x7809]        # 0x409424
  401c1b:	call   0x402eb0
  401c20:	mov    rax,QWORD PTR [rbp+0x18]
  401c24:	mov    QWORD PTR [rip+0x698d],rax        # 0x4085b8
  401c2b:	lea    rax,[rbp+0x8]
  401c2f:	mov    QWORD PTR [rip+0x6922],rax        # 0x408558
  401c36:	jmp    0x401bb3
  401c3b:	nop
  401c3c:	nop
  401c3d:	nop
  401c3e:	nop
  401c3f:	nop
  401c40:	sub    rsp,0x28
  401c44:	test   edx,edx
  401c46:	je     0x401c60
  401c48:	cmp    edx,0x3
  401c4b:	je     0x401c60
  401c4d:	mov    eax,0x1
  401c52:	add    rsp,0x28
  401c56:	ret    
  401c57:	nop    WORD PTR [rax+rax*1+0x0]
  401c60:	call   0x402950
  401c65:	mov    eax,0x1
  401c6a:	add    rsp,0x28
  401c6e:	ret    
  401c6f:	nop
  401c70:	push   rsi
  401c71:	push   rbx
  401c72:	sub    rsp,0x28
  401c76:	mov    rax,QWORD PTR [rip+0x39a3]        # 0x405620
  401c7d:	cmp    DWORD PTR [rax],0x2
  401c80:	je     0x401c88
  401c82:	mov    DWORD PTR [rax],0x2
  401c88:	cmp    edx,0x2
  401c8b:	je     0x401ca0
  401c8d:	cmp    edx,0x1
  401c90:	je     0x401cd2
  401c92:	mov    eax,0x1
  401c97:	add    rsp,0x28
  401c9b:	pop    rbx
  401c9c:	pop    rsi
  401c9d:	ret    
  401c9e:	xchg   ax,ax
  401ca0:	lea    rbx,[rip+0x83b9]        # 0x40a060
  401ca7:	lea    rsi,[rip+0x83b2]        # 0x40a060
  401cae:	cmp    rbx,rsi
  401cb1:	je     0x401c92
  401cb3:	mov    rax,QWORD PTR [rbx]
  401cb6:	test   rax,rax
  401cb9:	je     0x401cbd
  401cbb:	call   rax
  401cbd:	add    rbx,0x8
  401cc1:	cmp    rbx,rsi
  401cc4:	jne    0x401cb3
  401cc6:	mov    eax,0x1
  401ccb:	add    rsp,0x28
  401ccf:	pop    rbx
  401cd0:	pop    rsi
  401cd1:	ret    
  401cd2:	call   0x402950
  401cd7:	jmp    0x401c92
  401cd9:	nop    DWORD PTR [rax+0x0]
  401ce0:	xor    eax,eax
  401ce2:	ret    
  401ce3:	nop
  401ce4:	nop
  401ce5:	nop
  401ce6:	nop
  401ce7:	nop
  401ce8:	nop
  401ce9:	nop
  401cea:	nop
  401ceb:	nop
  401cec:	nop
  401ced:	nop
  401cee:	nop
  401cef:	nop
  401cf0:	sub    rsp,0x58
  401cf4:	mov    rax,QWORD PTR [rip+0x6da5]        # 0x408aa0
  401cfb:	test   rax,rax
  401cfe:	je     0x401d2c
  401d00:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401d09:	mov    DWORD PTR [rsp+0x20],ecx
  401d0d:	lea    rcx,[rsp+0x20]
  401d12:	mov    QWORD PTR [rsp+0x28],rdx
  401d17:	movsd  QWORD PTR [rsp+0x30],xmm2
  401d1d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401d23:	movsd  QWORD PTR [rsp+0x40],xmm0
  401d29:	call   rax
  401d2b:	nop
  401d2c:	add    rsp,0x58
  401d30:	ret    
  401d31:	nop    DWORD PTR [rax+rax*1+0x0]
  401d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d40:	mov    QWORD PTR [rip+0x6d59],rcx        # 0x408aa0
  401d47:	jmp    0x402ee8
  401d4c:	nop    DWORD PTR [rax+0x0]
  401d50:	push   rsi
  401d51:	push   rbx
  401d52:	sub    rsp,0x78
  401d56:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401d5b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401d60:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401d66:	cmp    DWORD PTR [rcx],0x6
  401d69:	ja     0x401e40
  401d6f:	mov    edx,DWORD PTR [rcx]
  401d71:	lea    rax,[rip+0x376c]        # 0x4054e4
  401d78:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401d7c:	add    rax,rdx
  401d7f:	jmp    rax
  401d81:	lea    rbx,[rip+0x3638]        # 0x4053c0
  401d88:	nop    DWORD PTR [rax+rax*1+0x0]
  401d90:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401d96:	mov    rsi,QWORD PTR [rcx+0x8]
  401d9a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401d9f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401da4:	call   0x402f00
  401da9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401db0:	lea    rcx,[rax+0x60]
  401db4:	lea    rdx,[rip+0x36fd]        # 0x4054b8
  401dbb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401dc1:	mov    r9,rsi
  401dc4:	mov    r8,rbx
  401dc7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401dcd:	call   0x402e88
  401dd2:	nop
  401dd3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401dd8:	xor    eax,eax
  401dda:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401ddf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401de5:	add    rsp,0x78
  401de9:	pop    rbx
  401dea:	pop    rsi
  401deb:	ret    
  401dec:	nop    DWORD PTR [rax+0x0]
  401df0:	lea    rbx,[rip+0x35e8]        # 0x4053df
  401df7:	jmp    0x401d90
  401df9:	nop    DWORD PTR [rax+0x0]
  401e00:	lea    rbx,[rip+0x35f9]        # 0x405400
  401e07:	jmp    0x401d90
  401e09:	nop    DWORD PTR [rax+0x0]
  401e10:	lea    rbx,[rip+0x3659]        # 0x405470
  401e17:	jmp    0x401d90
  401e1c:	nop    DWORD PTR [rax+0x0]
  401e20:	lea    rbx,[rip+0x3621]        # 0x405448
  401e27:	jmp    0x401d90
  401e2c:	nop    DWORD PTR [rax+0x0]
  401e30:	lea    rbx,[rip+0x35e9]        # 0x405420
  401e37:	jmp    0x401d90
  401e3c:	nop    DWORD PTR [rax+0x0]
  401e40:	lea    rbx,[rip+0x365f]        # 0x4054a6
  401e47:	jmp    0x401d90
  401e4c:	nop
  401e4d:	nop
  401e4e:	nop
  401e4f:	nop
  401e50:	fninit 
  401e52:	ret    
  401e53:	nop
  401e54:	nop
  401e55:	nop
  401e56:	nop
  401e57:	nop
  401e58:	nop
  401e59:	nop
  401e5a:	nop
  401e5b:	nop
  401e5c:	nop
  401e5d:	nop
  401e5e:	nop
  401e5f:	nop
  401e60:	mov    rax,rcx
  401e63:	ret    
  401e64:	xchg   ax,ax
  401e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e70:	mov    rax,rcx
  401e73:	ret    
  401e74:	nop
  401e75:	nop
  401e76:	nop
  401e77:	nop
  401e78:	nop
  401e79:	nop
  401e7a:	nop
  401e7b:	nop
  401e7c:	nop
  401e7d:	nop
  401e7e:	nop
  401e7f:	nop
  401e80:	push   rsi
  401e81:	push   rbx
  401e82:	sub    rsp,0x38
  401e86:	lea    rax,[rsp+0x58]
  401e8b:	mov    rbx,rcx
  401e8e:	mov    QWORD PTR [rsp+0x58],rdx
  401e93:	mov    QWORD PTR [rsp+0x60],r8
  401e98:	mov    QWORD PTR [rsp+0x68],r9
  401e9d:	mov    QWORD PTR [rsp+0x28],rax
  401ea2:	call   0x402f00
  401ea7:	lea    rcx,[rip+0x3652]        # 0x405500
  401eae:	lea    r9,[rax+0x60]
  401eb2:	mov    r8d,0x1b
  401eb8:	mov    edx,0x1
  401ebd:	call   0x402e70
  401ec2:	mov    rsi,QWORD PTR [rsp+0x28]
  401ec7:	call   0x402f00
  401ecc:	lea    rcx,[rax+0x60]
  401ed0:	mov    rdx,rbx
  401ed3:	mov    r8,rsi
  401ed6:	call   0x402e10
  401edb:	call   0x402eb0
  401ee0:	nop
  401ee1:	nop    DWORD PTR [rax+rax*1+0x0]
  401ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ef0:	push   r13
  401ef2:	push   r12
  401ef4:	push   rbp
  401ef5:	push   rdi
  401ef6:	push   rsi
  401ef7:	push   rbx
  401ef8:	sub    rsp,0x58
  401efc:	movsxd rbp,DWORD PTR [rip+0x6bc1]        # 0x408ac4
  401f03:	mov    rbx,rcx
  401f06:	mov    rsi,rdx
  401f09:	mov    rdi,r8
  401f0c:	test   ebp,ebp
  401f0e:	jle    0x40200a
  401f14:	mov    rax,QWORD PTR [rip+0x6bad]        # 0x408ac8
  401f1b:	xor    r9d,r9d
  401f1e:	add    rax,0x8
  401f22:	mov    r10,QWORD PTR [rax]
  401f25:	cmp    rbx,r10
  401f28:	jb     0x401f3e
  401f2a:	mov    rdx,QWORD PTR [rax+0x8]
  401f2e:	mov    r11d,DWORD PTR [rdx+0x8]
  401f32:	add    r10,r11
  401f35:	cmp    rbx,r10
  401f38:	jb     0x401ff0
  401f3e:	add    r9d,0x1
  401f42:	add    rax,0x18
  401f46:	cmp    r9d,ebp
  401f49:	jne    0x401f22
  401f4b:	mov    rcx,rbx
  401f4e:	call   0x402b60
  401f53:	test   rax,rax
  401f56:	mov    r12,rax
  401f59:	je     0x402042
  401f5f:	lea    rbp,[rbp+rbp*2+0x0]
  401f64:	shl    rbp,0x3
  401f68:	mov    r13,rbp
  401f6b:	add    r13,QWORD PTR [rip+0x6b56]        # 0x408ac8
  401f72:	mov    QWORD PTR [r13+0x10],rax
  401f76:	mov    DWORD PTR [r13+0x0],0x0
  401f7e:	call   0x402c80
  401f83:	mov    edx,DWORD PTR [r12+0xc]
  401f88:	mov    r8d,0x30
  401f8e:	add    rax,rdx
  401f91:	lea    rdx,[rsp+0x20]
  401f96:	mov    QWORD PTR [r13+0x8],rax
  401f9a:	mov    rax,QWORD PTR [rip+0x6b27]        # 0x408ac8
  401fa1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401fa6:	call   QWORD PTR [rip+0x7498]        # 0x409444
  401fac:	test   rax,rax
  401faf:	je     0x402025
  401fb1:	mov    eax,DWORD PTR [rsp+0x44]
  401fb5:	lea    edx,[rax-0x4]
  401fb8:	and    edx,0xfffffffb
  401fbb:	je     0x401fe9
  401fbd:	sub    eax,0x40
  401fc0:	and    eax,0xffffffbf
  401fc3:	je     0x401fe9
  401fc5:	mov    r9,rbp
  401fc8:	add    r9,QWORD PTR [rip+0x6af9]        # 0x408ac8
  401fcf:	mov    r8d,0x40
  401fd5:	mov    rdx,QWORD PTR [rsp+0x38]
  401fda:	mov    rcx,QWORD PTR [rsp+0x20]
  401fdf:	call   QWORD PTR [rip+0x7457]        # 0x40943c
  401fe5:	test   eax,eax
  401fe7:	je     0x402011
  401fe9:	add    DWORD PTR [rip+0x6ad4],0x1        # 0x408ac4
  401ff0:	mov    r8,rdi
  401ff3:	mov    rdx,rsi
  401ff6:	mov    rcx,rbx
  401ff9:	add    rsp,0x58
  401ffd:	pop    rbx
  401ffe:	pop    rsi
  401fff:	pop    rdi
  402000:	pop    rbp
  402001:	pop    r12
  402003:	pop    r13
  402005:	jmp    0x402e60
  40200a:	xor    ebp,ebp
  40200c:	jmp    0x401f4b
  402011:	call   QWORD PTR [rip+0x73a5]        # 0x4093bc
  402017:	lea    rcx,[rip+0x355a]        # 0x405578
  40201e:	mov    edx,eax
  402020:	call   0x401e80
  402025:	mov    rax,QWORD PTR [rip+0x6a9c]        # 0x408ac8
  40202c:	mov    edx,DWORD PTR [r12+0x8]
  402031:	lea    rcx,[rip+0x3508]        # 0x405540
  402038:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40203d:	call   0x401e80
  402042:	lea    rcx,[rip+0x34d7]        # 0x405520
  402049:	mov    rdx,rbx
  40204c:	call   0x401e80
  402051:	nop
  402052:	nop    DWORD PTR [rax+0x0]
  402056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402060:	push   rbp
  402061:	push   r14
  402063:	push   r13
  402065:	push   r12
  402067:	push   rdi
  402068:	push   rsi
  402069:	push   rbx
  40206a:	mov    rbp,rsp
  40206d:	sub    rsp,0x60
  402071:	mov    ebx,DWORD PTR [rip+0x6a49]        # 0x408ac0
  402077:	test   ebx,ebx
  402079:	je     0x402090
  40207b:	mov    rsp,rbp
  40207e:	pop    rbx
  40207f:	pop    rsi
  402080:	pop    rdi
  402081:	pop    r12
  402083:	pop    r13
  402085:	pop    r14
  402087:	pop    rbp
  402088:	ret    
  402089:	nop    DWORD PTR [rax+0x0]
  402090:	mov    DWORD PTR [rip+0x6a26],0x1        # 0x408ac0
  40209a:	call   0x402bb0
  40209f:	cdqe   
  4020a1:	lea    rax,[rax+rax*2]
  4020a5:	lea    rax,[rax*8+0x1e]
  4020ad:	and    rax,0xfffffffffffffff0
  4020b1:	call   0x402dd0
  4020b6:	mov    rsi,QWORD PTR [rip+0x3593]        # 0x405650
  4020bd:	mov    rbx,QWORD PTR [rip+0x359c]        # 0x405660
  4020c4:	sub    rsp,rax
  4020c7:	mov    DWORD PTR [rip+0x69f3],0x0        # 0x408ac4
  4020d1:	lea    rax,[rsp+0x20]
  4020d6:	mov    QWORD PTR [rip+0x69eb],rax        # 0x408ac8
  4020dd:	mov    rax,rsi
  4020e0:	sub    rax,rbx
  4020e3:	cmp    rax,0x7
  4020e7:	jle    0x40207b
  4020e9:	cmp    rax,0xb
  4020ed:	jle    0x402115
  4020ef:	mov    r11d,DWORD PTR [rbx]
  4020f2:	test   r11d,r11d
  4020f5:	jne    0x402240
  4020fb:	mov    r10d,DWORD PTR [rbx+0x4]
  4020ff:	test   r10d,r10d
  402102:	jne    0x402240
  402108:	mov    r9d,DWORD PTR [rbx+0x8]
  40210c:	test   r9d,r9d
  40210f:	jne    0x40212c
  402111:	add    rbx,0xc
  402115:	mov    r8d,DWORD PTR [rbx]
  402118:	test   r8d,r8d
  40211b:	jne    0x402240
  402121:	mov    ecx,DWORD PTR [rbx+0x4]
  402124:	test   ecx,ecx
  402126:	jne    0x402240
  40212c:	mov    edx,DWORD PTR [rbx+0x8]
  40212f:	cmp    edx,0x1
  402132:	jne    0x40234c
  402138:	add    rbx,0xc
  40213c:	cmp    rbx,rsi
  40213f:	jae    0x40207b
  402145:	mov    r12,QWORD PTR [rip+0x3534]        # 0x405680
  40214c:	lea    r13,[rbp-0x30]
  402150:	movabs r14,0xffffffff00000000
  40215a:	mov    ecx,DWORD PTR [rbx+0x4]
  40215d:	mov    eax,DWORD PTR [rbx]
  40215f:	movzx  edx,BYTE PTR [rbx+0x8]
  402163:	add    rax,r12
  402166:	add    rcx,r12
  402169:	cmp    edx,0x10
  40216c:	mov    r8,QWORD PTR [rax]
  40216f:	je     0x4022b6
  402175:	jbe    0x40227d
  40217b:	cmp    edx,0x20
  40217e:	je     0x4022ff
  402184:	cmp    edx,0x40
  402187:	jne    0x4022eb
  40218d:	sub    r8,rax
  402190:	mov    rdx,r13
  402193:	mov    rdi,r13
  402196:	mov    rax,r8
  402199:	add    rax,QWORD PTR [rcx]
  40219c:	mov    r8d,0x8
  4021a2:	mov    QWORD PTR [rbp-0x30],rax
  4021a6:	call   0x401ef0
  4021ab:	add    rbx,0xc
  4021af:	cmp    rbx,rsi
  4021b2:	jb     0x40215a
  4021b4:	mov    eax,DWORD PTR [rip+0x690a]        # 0x408ac4
  4021ba:	xor    ebx,ebx
  4021bc:	xor    esi,esi
  4021be:	test   eax,eax
  4021c0:	jle    0x40207b
  4021c6:	mov    r14,QWORD PTR [rip+0x7277]        # 0x409444
  4021cd:	lea    r13,[rbp-0x34]
  4021d1:	mov    r12,QWORD PTR [rip+0x7264]        # 0x40943c
  4021d8:	jmp    0x4021f3
  4021da:	nop    WORD PTR [rax+rax*1+0x0]
  4021e0:	add    esi,0x1
  4021e3:	add    rbx,0x18
  4021e7:	cmp    esi,DWORD PTR [rip+0x68d7]        # 0x408ac4
  4021ed:	jge    0x40207b
  4021f3:	mov    rax,rbx
  4021f6:	add    rax,QWORD PTR [rip+0x68cb]        # 0x408ac8
  4021fd:	mov    edx,DWORD PTR [rax]
  4021ff:	test   edx,edx
  402201:	je     0x4021e0
  402203:	mov    rcx,QWORD PTR [rax+0x8]
  402207:	mov    r8d,0x30
  40220d:	mov    rdx,rdi
  402210:	call   r14
  402213:	test   rax,rax
  402216:	je     0x40232e
  40221c:	mov    rax,QWORD PTR [rip+0x68a5]        # 0x408ac8
  402223:	mov    r9,r13
  402226:	mov    rdx,QWORD PTR [rbp-0x18]
  40222a:	mov    rcx,QWORD PTR [rbp-0x30]
  40222e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402232:	call   r12
  402235:	jmp    0x4021e0
  402237:	nop    WORD PTR [rax+rax*1+0x0]
  402240:	cmp    rbx,rsi
  402243:	jae    0x40207b
  402249:	mov    r12,QWORD PTR [rip+0x3430]        # 0x405680
  402250:	lea    rdi,[rbp-0x30]
  402254:	mov    ecx,DWORD PTR [rbx+0x4]
  402257:	mov    eax,DWORD PTR [rbx]
  402259:	mov    r8d,0x4
  40225f:	mov    rdx,rdi
  402262:	add    rbx,0x8
  402266:	add    rcx,r12
  402269:	add    eax,DWORD PTR [rcx]
  40226b:	mov    DWORD PTR [rbp-0x30],eax
  40226e:	call   0x401ef0
  402273:	cmp    rbx,rsi
  402276:	jb     0x402254
  402278:	jmp    0x4021b4
  40227d:	cmp    edx,0x8
  402280:	jne    0x4022eb
  402282:	movzx  edx,BYTE PTR [rcx]
  402285:	mov    rdi,r13
  402288:	mov    r10,rdx
  40228b:	or     r10,0xffffffffffffff00
  402292:	test   dl,dl
  402294:	cmovs  rdx,r10
  402298:	sub    rdx,rax
  40229b:	lea    rax,[r8+rdx*1]
  40229f:	mov    r8d,0x1
  4022a5:	mov    rdx,r13
  4022a8:	mov    QWORD PTR [rbp-0x30],rax
  4022ac:	call   0x401ef0
  4022b1:	jmp    0x4021ab
  4022b6:	movzx  edx,WORD PTR [rcx]
  4022b9:	mov    rdi,r13
  4022bc:	mov    r10,rdx
  4022bf:	or     r10,0xffffffffffff0000
  4022c6:	test   dx,dx
  4022c9:	cmovs  rdx,r10
  4022cd:	sub    rdx,rax
  4022d0:	lea    rax,[r8+rdx*1]
  4022d4:	mov    r8d,0x2
  4022da:	mov    rdx,r13
  4022dd:	mov    QWORD PTR [rbp-0x30],rax
  4022e1:	call   0x401ef0
  4022e6:	jmp    0x4021ab
  4022eb:	lea    rcx,[rip+0x32e6]        # 0x4055d8
  4022f2:	mov    QWORD PTR [rbp-0x30],0x0
  4022fa:	call   0x401e80
  4022ff:	mov    edx,DWORD PTR [rcx]
  402301:	mov    rdi,r13
  402304:	mov    r10,rdx
  402307:	or     r10,r14
  40230a:	test   edx,edx
  40230c:	cmovs  rdx,r10
  402310:	sub    rdx,rax
  402313:	lea    rax,[r8+rdx*1]
  402317:	mov    r8d,0x4
  40231d:	mov    rdx,r13
  402320:	mov    QWORD PTR [rbp-0x30],rax
  402324:	call   0x401ef0
  402329:	jmp    0x4021ab
  40232e:	add    rbx,QWORD PTR [rip+0x6793]        # 0x408ac8
  402335:	lea    rcx,[rip+0x3204]        # 0x405540
  40233c:	mov    rax,QWORD PTR [rbx+0x10]
  402340:	mov    r8,QWORD PTR [rbx+0x8]
  402344:	mov    edx,DWORD PTR [rax+0x8]
  402347:	call   0x401e80
  40234c:	lea    rcx,[rip+0x324d]        # 0x4055a0
  402353:	call   0x401e80
  402358:	nop
  402359:	nop
  40235a:	nop
  40235b:	nop
  40235c:	nop
  40235d:	nop
  40235e:	nop
  40235f:	nop
  402360:	sub    rsp,0x28
  402364:	mov    eax,DWORD PTR [rcx]
  402366:	cmp    eax,0xc0000091
  40236b:	ja     0x4023d0
  40236d:	cmp    eax,0xc000008d
  402372:	jae    0x4023ef
  402374:	cmp    eax,0xc0000008
  402379:	je     0x402490
  40237f:	ja     0x402460
  402385:	cmp    eax,0x80000002
  40238a:	je     0x402490
  402390:	cmp    eax,0xc0000005
  402395:	jne    0x40246e
  40239b:	xor    edx,edx
  40239d:	mov    ecx,0xb
  4023a2:	call   0x402e38
  4023a7:	cmp    rax,0x1
  4023ab:	je     0x4024f0
  4023b1:	test   rax,rax
  4023b4:	je     0x4024d0
  4023ba:	mov    ecx,0xb
  4023bf:	call   rax
  4023c1:	xor    eax,eax
  4023c3:	add    rsp,0x28
  4023c7:	ret    
  4023c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023d0:	cmp    eax,0xc0000094
  4023d5:	je     0x4024a0
  4023db:	ja     0x402420
  4023dd:	cmp    eax,0xc0000092
  4023e2:	je     0x402490
  4023e8:	cmp    eax,0xc0000093
  4023ed:	jne    0x40246e
  4023ef:	xor    edx,edx
  4023f1:	mov    ecx,0x8
  4023f6:	call   0x402e38
  4023fb:	cmp    rax,0x1
  4023ff:	mov    rdx,rax
  402402:	je     0x402478
  402404:	test   rdx,rdx
  402407:	mov    eax,0x1
  40240c:	je     0x4023c3
  40240e:	mov    ecx,0x8
  402413:	call   rdx
  402415:	xor    eax,eax
  402417:	add    rsp,0x28
  40241b:	ret    
  40241c:	nop    DWORD PTR [rax+0x0]
  402420:	cmp    eax,0xc0000095
  402425:	je     0x402490
  402427:	cmp    eax,0xc0000096
  40242c:	jne    0x40246e
  40242e:	xor    edx,edx
  402430:	mov    ecx,0x4
  402435:	call   0x402e38
  40243a:	cmp    rax,0x1
  40243e:	je     0x4024da
  402444:	test   rax,rax
  402447:	je     0x4024d0
  40244d:	mov    ecx,0x4
  402452:	call   rax
  402454:	xor    eax,eax
  402456:	jmp    0x4023c3
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]
  402460:	cmp    eax,0xc000001d
  402465:	je     0x40242e
  402467:	cmp    eax,0xc000008c
  40246c:	je     0x402490
  40246e:	mov    eax,0x1
  402473:	add    rsp,0x28
  402477:	ret    
  402478:	mov    edx,0x1
  40247d:	mov    ecx,0x8
  402482:	call   0x402e38
  402487:	call   0x401e50
  40248c:	nop    DWORD PTR [rax+0x0]
  402490:	xor    eax,eax
  402492:	add    rsp,0x28
  402496:	ret    
  402497:	nop    WORD PTR [rax+rax*1+0x0]
  4024a0:	xor    edx,edx
  4024a2:	mov    ecx,0x8
  4024a7:	call   0x402e38
  4024ac:	cmp    rax,0x1
  4024b0:	mov    rdx,rax
  4024b3:	jne    0x402404
  4024b9:	mov    edx,0x1
  4024be:	mov    ecx,0x8
  4024c3:	call   0x402e38
  4024c8:	xor    eax,eax
  4024ca:	jmp    0x4023c3
  4024cf:	nop
  4024d0:	mov    eax,0x4
  4024d5:	add    rsp,0x28
  4024d9:	ret    
  4024da:	mov    edx,0x1
  4024df:	mov    ecx,0x4
  4024e4:	call   0x402e38
  4024e9:	xor    eax,eax
  4024eb:	jmp    0x4023c3
  4024f0:	mov    edx,0x1
  4024f5:	mov    ecx,0xb
  4024fa:	call   0x402e38
  4024ff:	xor    eax,eax
  402501:	jmp    0x4023c3
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	push   r12
  402512:	push   rbp
  402513:	push   rdi
  402514:	push   rsi
  402515:	push   rbx
  402516:	sub    rsp,0x20
  40251a:	call   0x402c80
  40251f:	mov    rbp,rax
  402522:	mov    eax,DWORD PTR [rip+0x65e0]        # 0x408b08
  402528:	test   eax,eax
  40252a:	jne    0x402551
  40252c:	test   rbp,rbp
  40252f:	je     0x402551
  402531:	lea    rcx,[rip+0x30d8]        # 0x405610
  402538:	mov    DWORD PTR [rip+0x65c6],0x1        # 0x408b08
  402542:	call   0x402ac0
  402547:	test   rax,rax
  40254a:	je     0x402560
  40254c:	mov    eax,0x1
  402551:	add    rsp,0x20
  402555:	pop    rbx
  402556:	pop    rsi
  402557:	pop    rdi
  402558:	pop    rbp
  402559:	pop    r12
  40255b:	ret    
  40255c:	nop    DWORD PTR [rax+0x0]
  402560:	lea    rbx,[rip+0x66d9]        # 0x408c40
  402567:	mov    ecx,0x30
  40256c:	lea    rdx,[rip+0x65cd]        # 0x408b40
  402573:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402360
  40257a:	xor    esi,esi
  40257c:	mov    rdi,rbx
  40257f:	rep stos QWORD PTR es:[rdi],rax
  402582:	mov    rdi,rdx
  402585:	sub    r12,rbp
  402588:	mov    cl,0x20
  40258a:	rep stos QWORD PTR es:[rdi],rax
  40258d:	mov    rdi,rdx
  402590:	jmp    0x4025c0
  402592:	mov    BYTE PTR [rdi],0x9
  402595:	mov    DWORD PTR [rdi+0x4],r12d
  402599:	add    rsi,0x1
  40259d:	mov    edx,DWORD PTR [rax+0xc]
  4025a0:	add    rbx,0xc
  4025a4:	mov    DWORD PTR [rbx-0xc],edx
  4025a7:	add    edx,DWORD PTR [rax+0x8]
  4025aa:	mov    rax,rdi
  4025ad:	sub    rax,rbp
  4025b0:	add    rdi,0x8
  4025b4:	mov    DWORD PTR [rbx-0x4],eax
  4025b7:	mov    DWORD PTR [rbx-0x8],edx
  4025ba:	cmp    rsi,0x20
  4025be:	je     0x4025f5
  4025c0:	mov    rcx,rsi
  4025c3:	call   0x402bf0
  4025c8:	test   rax,rax
  4025cb:	jne    0x402592
  4025cd:	test   rsi,rsi
  4025d0:	je     0x40254c
  4025d6:	mov    edx,esi
  4025d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	mov    r8,rbp
  4025e3:	lea    rcx,[rip+0x6656]        # 0x408c40
  4025ea:	call   QWORD PTR [rip+0x6e04]        # 0x4093f4
  4025f0:	jmp    0x40254c
  4025f5:	mov    edx,0x20
  4025fa:	jmp    0x4025e0
  4025fc:	nop    DWORD PTR [rax+0x0]
  402600:	push   rbx
  402601:	sub    rsp,0x20
  402605:	mov    rdx,QWORD PTR [rcx]
  402608:	mov    eax,DWORD PTR [rdx]
  40260a:	mov    r8d,eax
  40260d:	and    r8d,0x20ffffff
  402614:	cmp    r8d,0x20474343
  40261b:	je     0x402720
  402621:	cmp    eax,0xc0000091
  402626:	mov    rbx,rcx
  402629:	ja     0x4026b0
  40262f:	cmp    eax,0xc000008d
  402634:	jae    0x4026c7
  40263a:	cmp    eax,0xc0000008
  40263f:	je     0x402673
  402641:	ja     0x402680
  402643:	cmp    eax,0x80000002
  402648:	je     0x402673
  40264a:	cmp    eax,0xc0000005
  40264f:	jne    0x402692
  402651:	xor    edx,edx
  402653:	mov    ecx,0xb
  402658:	call   0x402e38
  40265d:	cmp    rax,0x1
  402661:	je     0x402790
  402667:	test   rax,rax
  40266a:	je     0x402692
  40266c:	mov    ecx,0xb
  402671:	call   rax
  402673:	mov    eax,0xffffffff
  402678:	add    rsp,0x20
  40267c:	pop    rbx
  40267d:	ret    
  40267e:	xchg   ax,ax
  402680:	cmp    eax,0xc000001d
  402685:	je     0x402746
  40268b:	cmp    eax,0xc000008c
  402690:	je     0x402673
  402692:	mov    rax,QWORD PTR [rip+0x6467]        # 0x408b00
  402699:	test   rax,rax
  40269c:	je     0x402678
  40269e:	mov    rcx,rbx
  4026a1:	add    rsp,0x20
  4026a5:	pop    rbx
  4026a6:	rex.W jmp rax
  4026a9:	nop    DWORD PTR [rax+0x0]
  4026b0:	cmp    eax,0xc0000094
  4026b5:	je     0x4026f2
  4026b7:	ja     0x402730
  4026b9:	cmp    eax,0xc0000092
  4026be:	je     0x402673
  4026c0:	cmp    eax,0xc0000093
  4026c5:	jne    0x402692
  4026c7:	xor    edx,edx
  4026c9:	mov    ecx,0x8
  4026ce:	call   0x402e38
  4026d3:	cmp    rax,0x1
  4026d7:	jne    0x402704
  4026d9:	mov    edx,0x1
  4026de:	mov    ecx,0x8
  4026e3:	call   0x402e38
  4026e8:	call   0x401e50
  4026ed:	jmp    0x402673
  4026f2:	xor    edx,edx
  4026f4:	mov    ecx,0x8
  4026f9:	call   0x402e38
  4026fe:	cmp    rax,0x1
  402702:	je     0x402772
  402704:	test   rax,rax
  402707:	je     0x402692
  402709:	mov    ecx,0x8
  40270e:	call   rax
  402710:	mov    eax,0xffffffff
  402715:	jmp    0x402678
  40271a:	nop    WORD PTR [rax+rax*1+0x0]
  402720:	test   BYTE PTR [rdx+0x4],0x1
  402724:	jne    0x402621
  40272a:	jmp    0x402673
  40272f:	nop
  402730:	cmp    eax,0xc0000095
  402735:	je     0x402673
  40273b:	cmp    eax,0xc0000096
  402740:	jne    0x402692
  402746:	xor    edx,edx
  402748:	mov    ecx,0x4
  40274d:	call   0x402e38
  402752:	cmp    rax,0x1
  402756:	je     0x4027a4
  402758:	test   rax,rax
  40275b:	je     0x402692
  402761:	mov    ecx,0x4
  402766:	call   rax
  402768:	mov    eax,0xffffffff
  40276d:	jmp    0x402678
  402772:	mov    edx,0x1
  402777:	mov    ecx,0x8
  40277c:	call   0x402e38
  402781:	jmp    0x402673
  402786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402790:	mov    edx,0x1
  402795:	mov    ecx,0xb
  40279a:	call   0x402e38
  40279f:	jmp    0x402673
  4027a4:	mov    edx,0x1
  4027a9:	mov    ecx,0x4
  4027ae:	call   0x402e38
  4027b3:	jmp    0x402673
  4027b8:	nop
  4027b9:	nop
  4027ba:	nop
  4027bb:	nop
  4027bc:	nop
  4027bd:	nop
  4027be:	nop
  4027bf:	nop
  4027c0:	push   rbp
  4027c1:	push   rdi
  4027c2:	push   rsi
  4027c3:	push   rbx
  4027c4:	sub    rsp,0x28
  4027c8:	lea    rcx,[rip+0x6611]        # 0x408de0
  4027cf:	call   QWORD PTR [rip+0x6bc7]        # 0x40939c
  4027d5:	mov    rbx,QWORD PTR [rip+0x65e4]        # 0x408dc0
  4027dc:	test   rbx,rbx
  4027df:	je     0x402814
  4027e1:	mov    rbp,QWORD PTR [rip+0x6c44]        # 0x40942c
  4027e8:	mov    rdi,QWORD PTR [rip+0x6bcd]        # 0x4093bc
  4027ef:	nop
  4027f0:	mov    ecx,DWORD PTR [rbx]
  4027f2:	call   rbp
  4027f4:	mov    rsi,rax
  4027f7:	call   rdi
  4027f9:	test   eax,eax
  4027fb:	jne    0x40280b
  4027fd:	test   rsi,rsi
  402800:	je     0x40280b
  402802:	mov    rax,QWORD PTR [rbx+0x8]
  402806:	mov    rcx,rsi
  402809:	call   rax
  40280b:	mov    rbx,QWORD PTR [rbx+0x10]
  40280f:	test   rbx,rbx
  402812:	jne    0x4027f0
  402814:	mov    rax,QWORD PTR [rip+0x6bc9]        # 0x4093e4
  40281b:	lea    rcx,[rip+0x65be]        # 0x408de0
  402822:	add    rsp,0x28
  402826:	pop    rbx
  402827:	pop    rsi
  402828:	pop    rdi
  402829:	pop    rbp
  40282a:	rex.W jmp rax
  40282d:	nop    DWORD PTR [rax]
  402830:	push   rdi
  402831:	push   rsi
  402832:	push   rbx
  402833:	sub    rsp,0x20
  402837:	mov    eax,DWORD PTR [rip+0x658b]        # 0x408dc8
  40283d:	test   eax,eax
  40283f:	jne    0x402850
  402841:	add    rsp,0x20
  402845:	pop    rbx
  402846:	pop    rsi
  402847:	pop    rdi
  402848:	ret    
  402849:	nop    DWORD PTR [rax+0x0]
  402850:	mov    rsi,rdx
  402853:	mov    edi,ecx
  402855:	mov    edx,0x18
  40285a:	mov    ecx,0x1
  40285f:	call   0x402ea8
  402864:	test   rax,rax
  402867:	mov    rbx,rax
  40286a:	je     0x4028a8
  40286c:	mov    DWORD PTR [rax],edi
  40286e:	mov    QWORD PTR [rax+0x8],rsi
  402872:	lea    rcx,[rip+0x6567]        # 0x408de0
  402879:	call   QWORD PTR [rip+0x6b1d]        # 0x40939c
  40287f:	mov    rax,QWORD PTR [rip+0x653a]        # 0x408dc0
  402886:	lea    rcx,[rip+0x6553]        # 0x408de0
  40288d:	mov    QWORD PTR [rip+0x652c],rbx        # 0x408dc0
  402894:	mov    QWORD PTR [rbx+0x10],rax
  402898:	call   QWORD PTR [rip+0x6b46]        # 0x4093e4
  40289e:	xor    eax,eax
  4028a0:	add    rsp,0x20
  4028a4:	pop    rbx
  4028a5:	pop    rsi
  4028a6:	pop    rdi
  4028a7:	ret    
  4028a8:	mov    eax,0xffffffff
  4028ad:	jmp    0x402841
  4028af:	nop
  4028b0:	push   rbx
  4028b1:	sub    rsp,0x20
  4028b5:	mov    eax,DWORD PTR [rip+0x650d]        # 0x408dc8
  4028bb:	test   eax,eax
  4028bd:	jne    0x4028d0
  4028bf:	xor    eax,eax
  4028c1:	add    rsp,0x20
  4028c5:	pop    rbx
  4028c6:	ret    
  4028c7:	nop    WORD PTR [rax+rax*1+0x0]
  4028d0:	mov    ebx,ecx
  4028d2:	lea    rcx,[rip+0x6507]        # 0x408de0
  4028d9:	call   QWORD PTR [rip+0x6abd]        # 0x40939c
  4028df:	mov    rdx,QWORD PTR [rip+0x64da]        # 0x408dc0
  4028e6:	test   rdx,rdx
  4028e9:	je     0x402907
  4028eb:	mov    eax,DWORD PTR [rdx]
  4028ed:	cmp    eax,ebx
  4028ef:	jne    0x4028fe
  4028f1:	jmp    0x40293f
  4028f3:	mov    r8d,DWORD PTR [rax]
  4028f6:	cmp    r8d,ebx
  4028f9:	je     0x402920
  4028fb:	mov    rdx,rax
  4028fe:	mov    rax,QWORD PTR [rdx+0x10]
  402902:	test   rax,rax
  402905:	jne    0x4028f3
  402907:	lea    rcx,[rip+0x64d2]        # 0x408de0
  40290e:	call   QWORD PTR [rip+0x6ad0]        # 0x4093e4
  402914:	xor    eax,eax
  402916:	add    rsp,0x20
  40291a:	pop    rbx
  40291b:	ret    
  40291c:	nop    DWORD PTR [rax+0x0]
  402920:	mov    rcx,rax
  402923:	mov    rax,QWORD PTR [rax+0x10]
  402927:	mov    QWORD PTR [rdx+0x10],rax
  40292b:	call   0x402e78
  402930:	lea    rcx,[rip+0x64a9]        # 0x408de0
  402937:	call   QWORD PTR [rip+0x6aa7]        # 0x4093e4
  40293d:	jmp    0x402914
  40293f:	mov    rax,QWORD PTR [rdx+0x10]
  402943:	mov    rcx,rdx
  402946:	mov    QWORD PTR [rip+0x6473],rax        # 0x408dc0
  40294d:	jmp    0x40292b
  40294f:	nop
  402950:	push   rbx
  402951:	sub    rsp,0x20
  402955:	cmp    edx,0x1
  402958:	je     0x4029f0
  40295e:	jb     0x402990
  402960:	cmp    edx,0x2
  402963:	je     0x402980
  402965:	cmp    edx,0x3
  402968:	jne    0x402985
  40296a:	mov    eax,DWORD PTR [rip+0x6458]        # 0x408dc8
  402970:	test   eax,eax
  402972:	je     0x402985
  402974:	call   0x4027c0
  402979:	jmp    0x402985
  40297b:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	call   0x401e50
  402985:	mov    eax,0x1
  40298a:	add    rsp,0x20
  40298e:	pop    rbx
  40298f:	ret    
  402990:	mov    eax,DWORD PTR [rip+0x6432]        # 0x408dc8
  402996:	test   eax,eax
  402998:	jne    0x402a20
  40299e:	mov    eax,DWORD PTR [rip+0x6424]        # 0x408dc8
  4029a4:	cmp    eax,0x1
  4029a7:	jne    0x402985
  4029a9:	mov    rcx,QWORD PTR [rip+0x6410]        # 0x408dc0
  4029b0:	test   rcx,rcx
  4029b3:	je     0x4029c6
  4029b5:	mov    rbx,QWORD PTR [rcx+0x10]
  4029b9:	call   0x402e78
  4029be:	test   rbx,rbx
  4029c1:	mov    rcx,rbx
  4029c4:	jne    0x4029b5
  4029c6:	lea    rcx,[rip+0x6413]        # 0x408de0
  4029cd:	mov    QWORD PTR [rip+0x63e8],0x0        # 0x408dc0
  4029d8:	mov    DWORD PTR [rip+0x63e6],0x0        # 0x408dc8
  4029e2:	call   QWORD PTR [rip+0x69ac]        # 0x409394
  4029e8:	jmp    0x402985
  4029ea:	nop    WORD PTR [rax+rax*1+0x0]
  4029f0:	mov    eax,DWORD PTR [rip+0x63d2]        # 0x408dc8
  4029f6:	test   eax,eax
  4029f8:	je     0x402a10
  4029fa:	mov    eax,0x1
  4029ff:	mov    DWORD PTR [rip+0x63bf],0x1        # 0x408dc8
  402a09:	add    rsp,0x20
  402a0d:	pop    rbx
  402a0e:	ret    
  402a0f:	nop
  402a10:	lea    rcx,[rip+0x63c9]        # 0x408de0
  402a17:	call   QWORD PTR [rip+0x69bf]        # 0x4093dc
  402a1d:	jmp    0x4029fa
  402a1f:	nop
  402a20:	call   0x4027c0
  402a25:	jmp    0x40299e
  402a2a:	nop
  402a2b:	nop
  402a2c:	nop
  402a2d:	nop
  402a2e:	nop
  402a2f:	nop
  402a30:	movsxd rax,DWORD PTR [rcx+0x3c]
  402a34:	add    rcx,rax
  402a37:	xor    eax,eax
  402a39:	cmp    DWORD PTR [rcx],0x4550
  402a3f:	je     0x402a43
  402a41:	repz ret 
  402a43:	xor    eax,eax
  402a45:	cmp    WORD PTR [rcx+0x18],0x20b
  402a4b:	sete   al
  402a4e:	ret    
  402a4f:	nop
  402a50:	cmp    WORD PTR [rcx],0x5a4d
  402a55:	je     0x402a60
  402a57:	xor    eax,eax
  402a59:	ret    
  402a5a:	nop    WORD PTR [rax+rax*1+0x0]
  402a60:	jmp    0x402a30
  402a62:	nop    DWORD PTR [rax+0x0]
  402a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a70:	movsxd rax,DWORD PTR [rcx+0x3c]
  402a74:	add    rcx,rax
  402a77:	movzx  eax,WORD PTR [rcx+0x14]
  402a7b:	lea    rax,[rcx+rax*1+0x18]
  402a80:	movzx  ecx,WORD PTR [rcx+0x6]
  402a84:	test   ecx,ecx
  402a86:	je     0x402ab1
  402a88:	sub    ecx,0x1
  402a8b:	lea    rcx,[rcx+rcx*4]
  402a8f:	lea    r9,[rax+rcx*8+0x28]
  402a94:	mov    r8d,DWORD PTR [rax+0xc]
  402a98:	cmp    r8,rdx
  402a9b:	mov    rcx,r8
  402a9e:	ja     0x402aa8
  402aa0:	add    ecx,DWORD PTR [rax+0x8]
  402aa3:	cmp    rdx,rcx
  402aa6:	jb     0x402ab3
  402aa8:	add    rax,0x28
  402aac:	cmp    rax,r9
  402aaf:	jne    0x402a94
  402ab1:	xor    eax,eax
  402ab3:	repz ret 
  402ab5:	nop
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	push   rdi
  402ac1:	push   rsi
  402ac2:	push   rbx
  402ac3:	sub    rsp,0x20
  402ac7:	mov    rsi,rcx
  402aca:	call   0x402e28
  402acf:	cmp    rax,0x8
  402ad3:	ja     0x402af0
  402ad5:	mov    rbx,QWORD PTR [rip+0x2ba4]        # 0x405680
  402adc:	xor    edi,edi
  402ade:	cmp    WORD PTR [rbx],0x5a4d
  402ae3:	je     0x402b00
  402ae5:	mov    rax,rdi
  402ae8:	add    rsp,0x20
  402aec:	pop    rbx
  402aed:	pop    rsi
  402aee:	pop    rdi
  402aef:	ret    
  402af0:	xor    edi,edi
  402af2:	mov    rax,rdi
  402af5:	add    rsp,0x20
  402af9:	pop    rbx
  402afa:	pop    rsi
  402afb:	pop    rdi
  402afc:	ret    
  402afd:	nop    DWORD PTR [rax]
  402b00:	mov    rcx,rbx
  402b03:	call   0x402a30
  402b08:	test   eax,eax
  402b0a:	je     0x402ae5
  402b0c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402b10:	add    rdx,rbx
  402b13:	movzx  eax,WORD PTR [rdx+0x14]
  402b17:	lea    rbx,[rdx+rax*1+0x18]
  402b1c:	movzx  eax,WORD PTR [rdx+0x6]
  402b20:	test   eax,eax
  402b22:	je     0x402ae5
  402b24:	sub    eax,0x1
  402b27:	lea    rax,[rax+rax*4]
  402b2b:	lea    rdi,[rbx+rax*8+0x28]
  402b30:	jmp    0x402b3b
  402b32:	add    rbx,0x28
  402b36:	cmp    rbx,rdi
  402b39:	je     0x402af0
  402b3b:	mov    r8d,0x8
  402b41:	mov    rdx,rsi
  402b44:	mov    rcx,rbx
  402b47:	call   0x402e20
  402b4c:	test   eax,eax
  402b4e:	jne    0x402b32
  402b50:	mov    rdi,rbx
  402b53:	mov    rax,rdi
  402b56:	add    rsp,0x20
  402b5a:	pop    rbx
  402b5b:	pop    rsi
  402b5c:	pop    rdi
  402b5d:	ret    
  402b5e:	xchg   ax,ax
  402b60:	push   rsi
  402b61:	push   rbx
  402b62:	sub    rsp,0x28
  402b66:	mov    rbx,QWORD PTR [rip+0x2b13]        # 0x405680
  402b6d:	cmp    WORD PTR [rbx],0x5a4d
  402b72:	je     0x402b80
  402b74:	xor    eax,eax
  402b76:	add    rsp,0x28
  402b7a:	pop    rbx
  402b7b:	pop    rsi
  402b7c:	ret    
  402b7d:	nop    DWORD PTR [rax]
  402b80:	mov    rsi,rcx
  402b83:	mov    rcx,rbx
  402b86:	call   0x402a30
  402b8b:	test   eax,eax
  402b8d:	je     0x402b74
  402b8f:	sub    rsi,rbx
  402b92:	mov    rcx,rbx
  402b95:	mov    rdx,rsi
  402b98:	add    rsp,0x28
  402b9c:	pop    rbx
  402b9d:	pop    rsi
  402b9e:	jmp    0x402a70
  402ba3:	nop    DWORD PTR [rax]
  402ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bb0:	push   rbx
  402bb1:	sub    rsp,0x20
  402bb5:	mov    rbx,QWORD PTR [rip+0x2ac4]        # 0x405680
  402bbc:	xor    eax,eax
  402bbe:	cmp    WORD PTR [rbx],0x5a4d
  402bc3:	je     0x402bd0
  402bc5:	add    rsp,0x20
  402bc9:	pop    rbx
  402bca:	ret    
  402bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rcx,rbx
  402bd3:	call   0x402a30
  402bd8:	test   eax,eax
  402bda:	je     0x402bc5
  402bdc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402be0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402be5:	add    rsp,0x20
  402be9:	pop    rbx
  402bea:	ret    
  402beb:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	push   rdi
  402bf1:	push   rsi
  402bf2:	push   rbx
  402bf3:	sub    rsp,0x20
  402bf7:	mov    rsi,QWORD PTR [rip+0x2a82]        # 0x405680
  402bfe:	xor    edi,edi
  402c00:	mov    rbx,rcx
  402c03:	cmp    WORD PTR [rsi],0x5a4d
  402c08:	je     0x402c15
  402c0a:	mov    rax,rdi
  402c0d:	add    rsp,0x20
  402c11:	pop    rbx
  402c12:	pop    rsi
  402c13:	pop    rdi
  402c14:	ret    
  402c15:	mov    rcx,rsi
  402c18:	call   0x402a30
  402c1d:	test   eax,eax
  402c1f:	je     0x402c0a
  402c21:	movsxd rax,DWORD PTR [rsi+0x3c]
  402c25:	add    rsi,rax
  402c28:	movzx  eax,WORD PTR [rsi+0x14]
  402c2c:	lea    rdx,[rsi+rax*1+0x18]
  402c31:	movzx  eax,WORD PTR [rsi+0x6]
  402c35:	test   eax,eax
  402c37:	je     0x402c0a
  402c39:	sub    eax,0x1
  402c3c:	lea    rax,[rax+rax*4]
  402c40:	lea    rax,[rdx+rax*8+0x28]
  402c45:	test   BYTE PTR [rdx+0x27],0x20
  402c49:	je     0x402c54
  402c4b:	test   rbx,rbx
  402c4e:	je     0x402c70
  402c50:	sub    rbx,0x1
  402c54:	add    rdx,0x28
  402c58:	cmp    rdx,rax
  402c5b:	jne    0x402c45
  402c5d:	xor    edi,edi
  402c5f:	mov    rax,rdi
  402c62:	add    rsp,0x20
  402c66:	pop    rbx
  402c67:	pop    rsi
  402c68:	pop    rdi
  402c69:	ret    
  402c6a:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	mov    rdi,rdx
  402c73:	mov    rax,rdi
  402c76:	add    rsp,0x20
  402c7a:	pop    rbx
  402c7b:	pop    rsi
  402c7c:	pop    rdi
  402c7d:	ret    
  402c7e:	xchg   ax,ax
  402c80:	push   rsi
  402c81:	push   rbx
  402c82:	sub    rsp,0x28
  402c86:	mov    rsi,QWORD PTR [rip+0x29f3]        # 0x405680
  402c8d:	xor    ebx,ebx
  402c8f:	cmp    WORD PTR [rsi],0x5a4d
  402c94:	je     0x402ca0
  402c96:	mov    rax,rbx
  402c99:	add    rsp,0x28
  402c9d:	pop    rbx
  402c9e:	pop    rsi
  402c9f:	ret    
  402ca0:	mov    rcx,rsi
  402ca3:	call   0x402a30
  402ca8:	test   eax,eax
  402caa:	cmovne rbx,rsi
  402cae:	mov    rax,rbx
  402cb1:	add    rsp,0x28
  402cb5:	pop    rbx
  402cb6:	pop    rsi
  402cb7:	ret    
  402cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	push   rsi
  402cc1:	push   rbx
  402cc2:	sub    rsp,0x28
  402cc6:	mov    rbx,QWORD PTR [rip+0x29b3]        # 0x405680
  402ccd:	xor    eax,eax
  402ccf:	cmp    WORD PTR [rbx],0x5a4d
  402cd4:	je     0x402ce0
  402cd6:	add    rsp,0x28
  402cda:	pop    rbx
  402cdb:	pop    rsi
  402cdc:	ret    
  402cdd:	nop    DWORD PTR [rax]
  402ce0:	mov    rsi,rcx
  402ce3:	mov    rcx,rbx
  402ce6:	call   0x402a30
  402ceb:	test   eax,eax
  402ced:	je     0x402cd6
  402cef:	sub    rsi,rbx
  402cf2:	mov    rcx,rbx
  402cf5:	mov    rdx,rsi
  402cf8:	call   0x402a70
  402cfd:	test   rax,rax
  402d00:	je     0x402d11
  402d02:	mov    eax,DWORD PTR [rax+0x24]
  402d05:	not    eax
  402d07:	shr    eax,0x1f
  402d0a:	add    rsp,0x28
  402d0e:	pop    rbx
  402d0f:	pop    rsi
  402d10:	ret    
  402d11:	xor    eax,eax
  402d13:	jmp    0x402cd6
  402d15:	nop
  402d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d20:	push   rbp
  402d21:	push   rdi
  402d22:	push   rsi
  402d23:	push   rbx
  402d24:	sub    rsp,0x28
  402d28:	mov    rdi,QWORD PTR [rip+0x2951]        # 0x405680
  402d2f:	xor    ebp,ebp
  402d31:	mov    esi,ecx
  402d33:	cmp    WORD PTR [rdi],0x5a4d
  402d38:	je     0x402d50
  402d3a:	mov    rax,rbp
  402d3d:	add    rsp,0x28
  402d41:	pop    rbx
  402d42:	pop    rsi
  402d43:	pop    rdi
  402d44:	pop    rbp
  402d45:	ret    
  402d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d50:	mov    rcx,rdi
  402d53:	call   0x402a30
  402d58:	test   eax,eax
  402d5a:	je     0x402d3a
  402d5c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402d60:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402d67:	test   edx,edx
  402d69:	je     0x402d3a
  402d6b:	mov    ebx,edx
  402d6d:	mov    rcx,rdi
  402d70:	mov    rdx,rbx
  402d73:	call   0x402a70
  402d78:	test   rax,rax
  402d7b:	je     0x402d3a
  402d7d:	add    rbx,rdi
  402d80:	mov    rdx,rbx
  402d83:	jne    0x402d97
  402d85:	jmp    0x402d3a
  402d87:	nop    WORD PTR [rax+rax*1+0x0]
  402d90:	sub    esi,0x1
  402d93:	add    rdx,0x14
  402d97:	mov    ecx,DWORD PTR [rdx+0x4]
  402d9a:	test   ecx,ecx
  402d9c:	jne    0x402da5
  402d9e:	mov    eax,DWORD PTR [rdx+0xc]
  402da1:	test   eax,eax
  402da3:	je     0x402dc0
  402da5:	test   esi,esi
  402da7:	jg     0x402d90
  402da9:	mov    ebp,DWORD PTR [rdx+0xc]
  402dac:	add    rbp,rdi
  402daf:	mov    rax,rbp
  402db2:	add    rsp,0x28
  402db6:	pop    rbx
  402db7:	pop    rsi
  402db8:	pop    rdi
  402db9:	pop    rbp
  402dba:	ret    
  402dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	xor    ebp,ebp
  402dc2:	mov    rax,rbp
  402dc5:	add    rsp,0x28
  402dc9:	pop    rbx
  402dca:	pop    rsi
  402dcb:	pop    rdi
  402dcc:	pop    rbp
  402dcd:	ret    
  402dce:	nop
  402dcf:	nop
  402dd0:	push   rcx
  402dd1:	push   rax
  402dd2:	cmp    rax,0x1000
  402dd8:	lea    rcx,[rsp+0x18]
  402ddd:	jb     0x402df8
  402ddf:	sub    rcx,0x1000
  402de6:	or     QWORD PTR [rcx],0x0
  402dea:	sub    rax,0x1000
  402df0:	cmp    rax,0x1000
  402df6:	ja     0x402ddf
  402df8:	sub    rcx,rax
  402dfb:	or     QWORD PTR [rcx],0x0
  402dff:	pop    rax
  402e00:	pop    rcx
  402e01:	ret    
  402e02:	nop
  402e03:	nop
  402e04:	nop
  402e05:	nop
  402e06:	nop
  402e07:	nop
  402e08:	nop
  402e09:	nop
  402e0a:	nop
  402e0b:	nop
  402e0c:	nop
  402e0d:	nop
  402e0e:	nop
  402e0f:	nop
  402e10:	jmp    QWORD PTR [rip+0x675e]        # 0x409574
  402e16:	nop
  402e17:	nop
  402e18:	jmp    QWORD PTR [rip+0x674e]        # 0x40956c
  402e1e:	nop
  402e1f:	nop
  402e20:	jmp    QWORD PTR [rip+0x673e]        # 0x409564
  402e26:	nop
  402e27:	nop
  402e28:	jmp    QWORD PTR [rip+0x672e]        # 0x40955c
  402e2e:	nop
  402e2f:	nop
  402e30:	jmp    QWORD PTR [rip+0x671e]        # 0x409554
  402e36:	nop
  402e37:	nop
  402e38:	jmp    QWORD PTR [rip+0x670e]        # 0x40954c
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0x66fe]        # 0x409544
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0x66ee]        # 0x40953c
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0x66de]        # 0x409534
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0x66ce]        # 0x40952c
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0x66be]        # 0x409524
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0x66ae]        # 0x40951c
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0x669e]        # 0x409514
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0x668e]        # 0x40950c
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0x667e]        # 0x409504
  402e86:	nop
  402e87:	nop
  402e88:	jmp    QWORD PTR [rip+0x666e]        # 0x4094fc
  402e8e:	nop
  402e8f:	nop
  402e90:	jmp    QWORD PTR [rip+0x665e]        # 0x4094f4
  402e96:	nop
  402e97:	nop
  402e98:	jmp    QWORD PTR [rip+0x664e]        # 0x4094ec
  402e9e:	nop
  402e9f:	nop
  402ea0:	jmp    QWORD PTR [rip+0x663e]        # 0x4094e4
  402ea6:	nop
  402ea7:	nop
  402ea8:	jmp    QWORD PTR [rip+0x662e]        # 0x4094dc
  402eae:	nop
  402eaf:	nop
  402eb0:	jmp    QWORD PTR [rip+0x661e]        # 0x4094d4
  402eb6:	nop
  402eb7:	nop
  402eb8:	jmp    QWORD PTR [rip+0x660e]        # 0x4094cc
  402ebe:	nop
  402ebf:	nop
  402ec0:	jmp    QWORD PTR [rip+0x65fe]        # 0x4094c4
  402ec6:	nop
  402ec7:	nop
  402ec8:	jmp    QWORD PTR [rip+0x65ee]        # 0x4094bc
  402ece:	nop
  402ecf:	nop
  402ed0:	jmp    QWORD PTR [rip+0x65de]        # 0x4094b4
  402ed6:	nop
  402ed7:	nop
  402ed8:	jmp    QWORD PTR [rip+0x65c6]        # 0x4094a4
  402ede:	nop
  402edf:	nop
  402ee0:	jmp    QWORD PTR [rip+0x65b6]        # 0x40949c
  402ee6:	nop
  402ee7:	nop
  402ee8:	jmp    QWORD PTR [rip+0x659e]        # 0x40948c
  402eee:	nop
  402eef:	nop
  402ef0:	jmp    QWORD PTR [rip+0x658e]        # 0x409484
  402ef6:	nop
  402ef7:	nop
  402ef8:	jmp    QWORD PTR [rip+0x657e]        # 0x40947c
  402efe:	nop
  402eff:	nop
  402f00:	jmp    QWORD PTR [rip+0x656e]        # 0x409474
  402f06:	nop
  402f07:	nop
  402f08:	jmp    QWORD PTR [rip+0x6556]        # 0x409464
  402f0e:	nop
  402f0f:	nop
  402f10:	jmp    QWORD PTR [rip+0x6546]        # 0x40945c
  402f16:	nop
  402f17:	nop
  402f18:	jmp    QWORD PTR [rip+0x6536]        # 0x409454
  402f1e:	nop
  402f1f:	nop
  402f20:	mov    rax,QWORD PTR [rip+0x5f09]        # 0x408e30
  402f27:	ret    
  402f28:	nop    DWORD PTR [rax+rax*1+0x0]
  402f30:	mov    rax,rcx
  402f33:	xchg   QWORD PTR [rip+0x5ef6],rax        # 0x408e30
  402f3a:	ret    
  402f3b:	nop
  402f3c:	nop
  402f3d:	nop
  402f3e:	nop
  402f3f:	nop
  402f40:	jmp    QWORD PTR [rip+0x64fe]        # 0x409444
  402f46:	nop
  402f47:	nop
  402f48:	jmp    QWORD PTR [rip+0x64ee]        # 0x40943c
  402f4e:	nop
  402f4f:	nop
  402f50:	jmp    QWORD PTR [rip+0x64de]        # 0x409434
  402f56:	nop
  402f57:	nop
  402f58:	jmp    QWORD PTR [rip+0x64ce]        # 0x40942c
  402f5e:	nop
  402f5f:	nop
  402f60:	jmp    QWORD PTR [rip+0x64be]        # 0x409424
  402f66:	nop
  402f67:	nop
  402f68:	jmp    QWORD PTR [rip+0x64ae]        # 0x40941c
  402f6e:	nop
  402f6f:	nop
  402f70:	jmp    QWORD PTR [rip+0x649e]        # 0x409414
  402f76:	nop
  402f77:	nop
  402f78:	jmp    QWORD PTR [rip+0x648e]        # 0x40940c
  402f7e:	nop
  402f7f:	nop
  402f80:	jmp    QWORD PTR [rip+0x647e]        # 0x409404
  402f86:	nop
  402f87:	nop
  402f88:	jmp    QWORD PTR [rip+0x646e]        # 0x4093fc
  402f8e:	nop
  402f8f:	nop
  402f90:	jmp    QWORD PTR [rip+0x645e]        # 0x4093f4
  402f96:	nop
  402f97:	nop
  402f98:	jmp    QWORD PTR [rip+0x644e]        # 0x4093ec
  402f9e:	nop
  402f9f:	nop
  402fa0:	jmp    QWORD PTR [rip+0x643e]        # 0x4093e4
  402fa6:	nop
  402fa7:	nop
  402fa8:	jmp    QWORD PTR [rip+0x642e]        # 0x4093dc
  402fae:	nop
  402faf:	nop
  402fb0:	jmp    QWORD PTR [rip+0x641e]        # 0x4093d4
  402fb6:	nop
  402fb7:	nop
  402fb8:	jmp    QWORD PTR [rip+0x640e]        # 0x4093cc
  402fbe:	nop
  402fbf:	nop
  402fc0:	jmp    QWORD PTR [rip+0x63fe]        # 0x4093c4
  402fc6:	nop
  402fc7:	nop
  402fc8:	jmp    QWORD PTR [rip+0x63ee]        # 0x4093bc
  402fce:	nop
  402fcf:	nop
  402fd0:	jmp    QWORD PTR [rip+0x63de]        # 0x4093b4
  402fd6:	nop
  402fd7:	nop
  402fd8:	jmp    QWORD PTR [rip+0x63ce]        # 0x4093ac
  402fde:	nop
  402fdf:	nop
  402fe0:	jmp    QWORD PTR [rip+0x63be]        # 0x4093a4
  402fe6:	nop
  402fe7:	nop
  402fe8:	jmp    QWORD PTR [rip+0x63ae]        # 0x40939c
  402fee:	nop
  402fef:	nop
  402ff0:	jmp    QWORD PTR [rip+0x639e]        # 0x409394
  402ff6:	nop
  402ff7:	nop
  402ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  403000:	push   r15
  403002:	push   r14
  403004:	push   r13
  403006:	push   r12
  403008:	push   rbp
  403009:	push   rdi
  40300a:	push   rsi
  40300b:	push   rbx
  40300c:	sub    rsp,0x4e8
  403013:	movaps XMMWORD PTR [rsp+0x4c0],xmm6
  40301b:	movaps XMMWORD PTR [rsp+0x4d0],xmm7
  403023:	mov    r13d,ecx
  403026:	mov    rbp,rdx
  403029:	call   0x401a20
  40302e:	cmp    r13d,0x1
  403032:	jle    0x403528
  403038:	mov    r14d,0x1
  40303e:	mov    QWORD PTR [rsp+0x538],rbp
  403046:	lea    r9,[rip+0x219c]        # 0x4051e9
  40304d:	mov    ebp,r14d
  403050:	mov    r14d,r13d
  403053:	mov    r13,QWORD PTR [rsp+0x538]
  40305b:	mov    DWORD PTR [rsp+0x58],0x0
  403063:	mov    DWORD PTR [rsp+0x6c],0x0
  40306b:	mov    ebx,0x1
  403070:	mov    DWORD PTR [rsp+0x68],0x0
  403078:	mov    DWORD PTR [rsp+0x54],0x0
  403080:	mov    r15d,0x9
  403086:	mov    DWORD PTR [rsp+0x5c],0x0
  40308e:	mov    QWORD PTR [rsp+0x60],0x0
  403097:	mov    r12d,0x3
  40309d:	nop    DWORD PTR [rax]
  4030a0:	movsxd rax,ebx
  4030a3:	mov    rdi,r9
  4030a6:	mov    rcx,r15
  4030a9:	lea    rdx,[rax*8+0x0]
  4030b1:	mov    rax,QWORD PTR [r13+rax*8+0x0]
  4030b6:	mov    rsi,rax
  4030b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030bb:	je     0x403163
  4030c1:	lea    rdi,[rip+0x212a]        # 0x4051f2
  4030c8:	mov    rsi,rax
  4030cb:	mov    rcx,r12
  4030ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030d0:	je     0x403440
  4030d6:	lea    rdi,[rip+0x2118]        # 0x4051f5
  4030dd:	mov    rsi,rax
  4030e0:	mov    ecx,0x5
  4030e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030e7:	je     0x403430
  4030ed:	lea    rdi,[rip+0x2106]        # 0x4051fa
  4030f4:	mov    ecx,0x7
  4030f9:	mov    rsi,rax
  4030fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030fe:	je     0x403470
  403104:	lea    rdi,[rip+0x20f6]        # 0x405201
  40310b:	mov    rsi,rax
  40310e:	mov    rcx,r12
  403111:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403113:	je     0x403480
  403119:	lea    rdi,[rip+0x20e4]        # 0x405204
  403120:	mov    rsi,rax
  403123:	mov    rcx,r12
  403126:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403128:	je     0x403490
  40312e:	lea    rdi,[rip+0x20d2]        # 0x405207
  403135:	mov    rsi,rax
  403138:	mov    rcx,r15
  40313b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40313d:	je     0x40315b
  40313f:	cmp    QWORD PTR [rsp+0x60],0x0
  403145:	jne    0x403528
  40314b:	cmp    BYTE PTR [rax],0x2d
  40314e:	je     0x403528
  403154:	mov    QWORD PTR [rsp+0x60],rax
  403159:	jmp    0x403165
  40315b:	mov    DWORD PTR [rsp+0x58],0x1
  403163:	xor    ebp,ebp
  403165:	add    ebx,0x1
  403168:	cmp    r14d,ebx
  40316b:	jg     0x4030a0
  403171:	mov    r8d,DWORD PTR [rsp+0x58]
  403176:	mov    r14d,ebp
  403179:	test   r8d,r8d
  40317c:	je     0x40351c
  403182:	mov    ecx,DWORD PTR [rsp+0x58]
  403186:	test   ecx,ecx
  403188:	je     0x40349d
  40318e:	lea    rsi,[rsp+0xc0]
  403196:	mov    WORD PTR [rsp+0x80],0x1
  4031a0:	mov    WORD PTR [rsp+0x82],0x1
  4031aa:	mov    WORD PTR [rsp+0x84],0x0
  4031b4:	mov    WORD PTR [rsp+0x86],0x6
  4031be:	lea    rdi,[rsp+0x80]
  4031c6:	mov    WORD PTR [rsp+0x88],0x400
  4031d0:	mov    WORD PTR [rsp+0x8a],0x0
  4031da:	mov    WORD PTR [rsp+0x8c],0x1
  4031e4:	mov    WORD PTR [rsp+0x8e],0x1
  4031ee:	mov    WORD PTR [rsp+0x90],0x401
  4031f8:	mov    WORD PTR [rsp+0x92],0x0
  403202:	mov    WORD PTR [rsp+0x94],0x1
  40320c:	mov    WORD PTR [rsp+0x96],0x1
  403216:	mov    WORD PTR [rsp+0x98],0x402
  403220:	mov    WORD PTR [rsp+0x9a],0x87b1
  40322a:	mov    WORD PTR [rsp+0x9c],0x11
  403234:	mov    WORD PTR [rsp+0x9e],0x0
  40323e:	mov    WORD PTR [rsp+0xa0],0x804
  403248:	mov    WORD PTR [rsp+0xa2],0x0
  403252:	mov    WORD PTR [rsp+0xa4],0x1
  40325c:	mov    WORD PTR [rsp+0xa6],0x2329
  403266:	mov    WORD PTR [rsp+0xa8],0x806
  403270:	mov    WORD PTR [rsp+0xaa],0x0
  40327a:	mov    WORD PTR [rsp+0xac],0x1
  403284:	mov    WORD PTR [rsp+0xae],0x238e
  40328e:	mov    WORD PTR [rsp+0xb0],0xc00
  403298:	mov    WORD PTR [rsp+0xb2],0x0
  4032a2:	mov    WORD PTR [rsp+0xb4],0x1
  4032ac:	mov    WORD PTR [rsp+0xb6],0x6857
  4032b6:	call   0x401838
  4032bb:	movsd  xmm1,QWORD PTR [rip+0x20b5]        # 0x405378
  4032c3:	mov    QWORD PTR [rsp+0x20],rsi
  4032c8:	mov    r9d,0x2
  4032ce:	mov    r8d,0x3
  4032d4:	mov    edx,0x830e
  4032d9:	mov    rcx,rax
  4032dc:	mov    rbx,rax
  4032df:	movsd  QWORD PTR [rsp+0xc0],xmm1
  4032e8:	movsd  QWORD PTR [rsp+0xc8],xmm1
  4032f1:	mov    QWORD PTR [rsp+0xd0],0x0
  4032fd:	call   0x401828
  403302:	movsd  xmm4,QWORD PTR [rip+0x2076]        # 0x405380
  40330a:	mov    r9d,0x2
  403310:	movsd  xmm5,QWORD PTR [rip+0x2070]        # 0x405388
  403318:	mov    QWORD PTR [rsp+0x20],rsi
  40331d:	mov    r8d,0x6
  403323:	mov    edx,0x8482
  403328:	mov    rcx,rbx
  40332b:	movsd  QWORD PTR [rsp+0xd8],xmm4
  403334:	mov    QWORD PTR [rsp+0xc0],0x0
  403340:	mov    QWORD PTR [rsp+0xc8],0x0
  40334c:	movsd  QWORD PTR [rsp+0xe0],xmm5
  403355:	mov    QWORD PTR [rsp+0xd0],0x0
  403361:	mov    QWORD PTR [rsp+0xe8],0x0
  40336d:	call   0x401828
  403372:	mov    r9d,0x1
  403378:	mov    r8d,0x1c
  40337e:	mov    edx,0x87af
  403383:	mov    rcx,rbx
  403386:	mov    QWORD PTR [rsp+0x20],rdi
  40338b:	call   0x401828
  403390:	lea    rax,[rip+0x1e79]        # 0x405210
  403397:	mov    r9d,0x3
  40339d:	mov    r8d,0x12
  4033a3:	mov    edx,0x87b1
  4033a8:	mov    rcx,rbx
  4033ab:	mov    QWORD PTR [rsp+0x20],rax
  4033b0:	call   0x401828
  4033b5:	mov    rcx,rbx
  4033b8:	call   0x401860
  4033bd:	mov    rsi,rax
  4033c0:	mov    edx,DWORD PTR [rsp+0x54]
  4033c4:	test   edx,edx
  4033c6:	jne    0x40352d
  4033cc:	xor    r8d,r8d
  4033cf:	xor    edx,edx
  4033d1:	mov    rcx,rsi
  4033d4:	call   0x401850
  4033d9:	test   r14d,r14d
  4033dc:	jne    0x403763
  4033e2:	mov    rcx,rsi
  4033e5:	call   0x401888
  4033ea:	mov    eax,DWORD PTR [rsp+0x58]
  4033ee:	mov    rcx,rbx
  4033f1:	test   eax,eax
  4033f3:	je     0x4035d8
  4033f9:	call   0x401830
  4033fe:	call   0x401898
  403403:	xor    eax,eax
  403405:	movaps xmm6,XMMWORD PTR [rsp+0x4c0]
  40340d:	movaps xmm7,XMMWORD PTR [rsp+0x4d0]
  403415:	add    rsp,0x4e8
  40341c:	pop    rbx
  40341d:	pop    rsi
  40341e:	pop    rdi
  40341f:	pop    rbp
  403420:	pop    r12
  403422:	pop    r13
  403424:	pop    r14
  403426:	pop    r15
  403428:	ret    
  403429:	nop    DWORD PTR [rax+0x0]
  403430:	mov    DWORD PTR [rsp+0x54],0x1
  403438:	jmp    0x403165
  40343d:	nop    DWORD PTR [rax]
  403440:	mov    rax,QWORD PTR [r13+rdx*1+0x8]
  403445:	lea    rcx,[rip+0xffffffffffffe0e4]        # 0x401530
  40344c:	mov    QWORD PTR [rsp+0x48],r9
  403451:	add    ebx,0x1
  403454:	mov    QWORD PTR [rip+0x4fe5],rax        # 0x408440
  40345b:	call   0x401810
  403460:	mov    r9,QWORD PTR [rsp+0x48]
  403465:	jmp    0x403165
  40346a:	nop    WORD PTR [rax+rax*1+0x0]
  403470:	mov    DWORD PTR [rsp+0x5c],0x1
  403478:	jmp    0x403165
  40347d:	nop    DWORD PTR [rax]
  403480:	mov    DWORD PTR [rsp+0x68],0x1
  403488:	jmp    0x403165
  40348d:	nop    DWORD PTR [rax]
  403490:	mov    DWORD PTR [rsp+0x6c],0x1
  403498:	jmp    0x403165
  40349d:	mov    rcx,QWORD PTR [rsp+0x60]
  4034a2:	lea    rdx,[rip+0x1d79]        # 0x405222
  4034a9:	call   0x401818
  4034ae:	test   rax,rax
  4034b1:	mov    rbx,rax
  4034b4:	je     0x403733
  4034ba:	mov    rcx,rax
  4034bd:	call   0x401868
  4034c2:	test   rax,rax
  4034c5:	mov    rsi,rax
  4034c8:	jne    0x4033c0
  4034ce:	mov    rsi,QWORD PTR [rip+0x5f9f]        # 0x409474
  4034d5:	call   rsi
  4034d7:	lea    rcx,[rip+0x1d46]        # 0x405224
  4034de:	lea    r9,[rax+0x60]
  4034e2:	mov    r8d,0x12
  4034e8:	mov    edx,0x1
  4034ed:	call   0x402e70
  4034f2:	call   rsi
  4034f4:	lea    rcx,[rip+0x1d3c]        # 0x405237
  4034fb:	lea    r9,[rax+0x60]
  4034ff:	mov    r8d,0x13
  403505:	mov    edx,0x1
  40350a:	call   0x402e70
  40350f:	mov    rcx,rbx
  403512:	call   0x401820
  403517:	jmp    0x403754
  40351c:	cmp    QWORD PTR [rsp+0x60],0x0
  403522:	jne    0x403182
  403528:	call   0x4017f0
  40352d:	lea    rbp,[rsp+0xc0]
  403535:	mov    rdx,QWORD PTR [rsp+0x60]
  40353a:	mov    r8d,0x3fc
  403540:	mov    rcx,rbp
  403543:	mov    rdi,rbp
  403546:	call   0x402e18
  40354b:	xor    eax,eax
  40354d:	or     rcx,0xffffffffffffffff
  403551:	repnz scas al,BYTE PTR es:[rdi]
  403553:	not    rcx
  403556:	sub    rcx,0x1
  40355a:	lea    eax,[rcx-0x1]
  40355d:	test   eax,eax
  40355f:	jg     0x403568
  403561:	jmp    0x4035e2
  403563:	sub    eax,0x1
  403566:	je     0x4035e2
  403568:	movsxd rdx,eax
  40356b:	cmp    BYTE PTR [rsp+rdx*1+0xc0],0x2e
  403573:	jne    0x403563
  403575:	add    rdx,rbp
  403578:	mov    DWORD PTR [rdx],0x7766742e
  40357e:	mov    BYTE PTR [rdx+0x4],0x0
  403582:	lea    r12,[rsp+0x78]
  403587:	lea    rdi,[rsp+0x70]
  40358c:	mov    rcx,rsi
  40358f:	movsd  xmm2,QWORD PTR [rip+0x1df9]        # 0x405390
  403597:	mov    r8,r12
  40359a:	mov    rdx,rdi
  40359d:	movsd  QWORD PTR [rsp+0x70],xmm2
  4035a3:	movsd  QWORD PTR [rsp+0x78],xmm2
  4035a9:	call   0x401870
  4035ae:	test   eax,eax
  4035b0:	jne    0x4035f1
  4035b2:	call   QWORD PTR [rip+0x5ebc]        # 0x409474
  4035b8:	lea    rcx,[rip+0x1c91]        # 0x405250
  4035bf:	lea    r9,[rax+0x60]
  4035c3:	mov    r8d,0x2e
  4035c9:	mov    edx,0x1
  4035ce:	call   0x402e70
  4035d3:	jmp    0x4033e2
  4035d8:	call   0x401820
  4035dd:	jmp    0x4033fe
  4035e2:	add    rcx,rbp
  4035e5:	mov    DWORD PTR [rcx],0x7766742e
  4035eb:	mov    BYTE PTR [rcx+0x4],0x0
  4035ef:	jmp    0x403582
  4035f1:	movsd  xmm7,QWORD PTR [rsp+0x70]
  4035f7:	mov    r8,r12
  4035fa:	movsd  xmm6,QWORD PTR [rsp+0x78]
  403600:	mov    rdx,rdi
  403603:	movsd  xmm2,QWORD PTR [rip+0x1d8d]        # 0x405398
  40360b:	mov    rcx,rsi
  40360e:	movsd  xmm0,QWORD PTR [rip+0x1d7a]        # 0x405390
  403616:	movsd  QWORD PTR [rsp+0xa0],xmm7
  40361f:	movsd  QWORD PTR [rsp+0xa8],xmm6
  403628:	movsd  QWORD PTR [rsp+0x70],xmm2
  40362e:	movsd  QWORD PTR [rsp+0x78],xmm0
  403634:	call   0x401870
  403639:	test   eax,eax
  40363b:	je     0x4033e2
  403641:	movsd  xmm0,QWORD PTR [rsp+0x70]
  403647:	mov    r8,r12
  40364a:	mov    rdx,rdi
  40364d:	movsd  xmm1,QWORD PTR [rip+0x1d3b]        # 0x405390
  403655:	mov    rcx,rsi
  403658:	subsd  xmm0,xmm7
  40365c:	movsd  xmm3,QWORD PTR [rip+0x1d34]        # 0x405398
  403664:	movsd  QWORD PTR [rsp+0x70],xmm1
  40366a:	movsd  QWORD PTR [rsp+0x80],xmm0
  403673:	movsd  xmm0,QWORD PTR [rsp+0x78]
  403679:	movsd  QWORD PTR [rsp+0x78],xmm3
  40367f:	subsd  xmm0,xmm6
  403683:	movsd  QWORD PTR [rsp+0x88],xmm0
  40368c:	call   0x401870
  403691:	test   eax,eax
  403693:	je     0x4033e2
  403699:	movsd  xmm0,QWORD PTR [rsp+0x70]
  40369f:	lea    rdx,[rip+0x1bd9]        # 0x40527f
  4036a6:	mov    rcx,rbp
  4036a9:	xor    r12d,r12d
  4036ac:	lea    rdi,[rsp+0x80]
  4036b4:	subsd  xmm0,xmm7
  4036b8:	movsd  QWORD PTR [rsp+0x90],xmm0
  4036c1:	movsd  xmm0,QWORD PTR [rsp+0x78]
  4036c7:	subsd  xmm0,xmm6
  4036cb:	movsd  QWORD PTR [rsp+0x98],xmm0
  4036d4:	call   0x402e90
  4036d9:	test   rax,rax
  4036dc:	mov    r13,rax
  4036df:	je     0x403947
  4036e5:	movsd  xmm0,QWORD PTR [rdi+r12*1]
  4036eb:	lea    rdx,[rip+0x1bb4]        # 0x4052a6
  4036f2:	mov    rcx,r13
  4036f5:	add    r12,0x8
  4036f9:	movapd xmm2,xmm0
  4036fd:	movq   r8,xmm0
  403702:	call   0x402e88
  403707:	cmp    r12,0x30
  40370b:	jne    0x4036e5
  40370d:	mov    rcx,r13
  403710:	call   0x402e98
  403715:	call   QWORD PTR [rip+0x5d59]        # 0x409474
  40371b:	lea    rdx,[rip+0x1b8d]        # 0x4052af
  403722:	lea    rcx,[rax+0x60]
  403726:	mov    r8,rbp
  403729:	call   0x402e88
  40372e:	jmp    0x4033e2
  403733:	call   QWORD PTR [rip+0x5d3b]        # 0x409474
  403739:	lea    rcx,[rip+0x1af7]        # 0x405237
  403740:	lea    r9,[rax+0x60]
  403744:	mov    r8d,0x13
  40374a:	mov    edx,0x1
  40374f:	call   0x402e70
  403754:	call   0x401898
  403759:	mov    eax,0x1
  40375e:	jmp    0x403405
  403763:	lea    rbp,[rsp+0xc0]
  40376b:	mov    rcx,rsi
  40376e:	mov    rdx,rbp
  403771:	call   0x401880
  403776:	test   eax,eax
  403778:	je     0x4033e2
  40377e:	mov    ecx,0xa
  403783:	call   0x402e48
  403788:	mov    rdi,QWORD PTR [rip+0x5ce5]        # 0x409474
  40378f:	call   rdi
  403791:	lea    rdx,[rax+0x30]
  403795:	mov    rcx,rbp
  403798:	call   0x401848
  40379d:	cmp    DWORD PTR [rsp+0x5c],0x0
  4037a2:	jne    0x403921
  4037a8:	lea    r8,[rsp+0x78]
  4037ad:	mov    edx,0x100
  4037b2:	mov    rcx,rbx
  4037b5:	call   0x4018a0
  4037ba:	lea    r8,[rsp+0x80]
  4037c2:	mov    edx,0x101
  4037c7:	mov    rcx,rbx
  4037ca:	call   0x4018a0
  4037cf:	mov    r13d,DWORD PTR [rsp+0x80]
  4037d7:	mov    r12d,DWORD PTR [rsp+0x78]
  4037dc:	call   rdi
  4037de:	lea    rcx,[rip+0x1afe]        # 0x4052e3
  4037e5:	lea    rdi,[rax+0x30]
  4037e9:	call   0x402e40
  4037ee:	mov    eax,DWORD PTR [rsp+0x6c]
  4037f2:	lea    r9,[rip+0x1aff]        # 0x4052f8
  4037f9:	mov    QWORD PTR [rsp+0x28],0x0
  403802:	mov    QWORD PTR [rsp+0x20],0x0
  40380b:	mov    r8,rdi
  40380e:	mov    rdx,rbp
  403811:	mov    rcx,rsi
  403814:	mov    DWORD PTR [rsp+0x38],eax
  403818:	mov    eax,DWORD PTR [rsp+0x68]
  40381c:	mov    DWORD PTR [rsp+0x30],eax
  403820:	call   0x401560
  403825:	test   eax,eax
  403827:	je     0x403910
  40382d:	pxor   xmm6,xmm6
  403831:	mov    r15d,DWORD PTR [rsp+0x6c]
  403836:	mov    r14d,DWORD PTR [rsp+0x68]
  40383b:	pxor   xmm7,xmm7
  40383f:	lea    r9,[rip+0x1b03]        # 0x405349
  403846:	mov    r8,rdi
  403849:	mov    rdx,rbp
  40384c:	mov    rcx,rsi
  40384f:	cvtsi2sd xmm6,r13d
  403854:	mov    DWORD PTR [rsp+0x38],r15d
  403859:	mov    DWORD PTR [rsp+0x30],r14d
  40385e:	mov    QWORD PTR [rsp+0x20],0x0
  403867:	movsd  QWORD PTR [rsp+0x28],xmm6
  40386d:	call   0x401560
  403872:	cvtsi2sd xmm7,r12d
  403877:	lea    r9,[rip+0x1ad6]        # 0x405354
  40387e:	mov    r8,rdi
  403881:	mov    rdx,rbp
  403884:	mov    rcx,rsi
  403887:	mov    DWORD PTR [rsp+0x38],r15d
  40388c:	mov    DWORD PTR [rsp+0x30],r14d
  403891:	mov    QWORD PTR [rsp+0x28],0x0
  40389a:	movsd  QWORD PTR [rsp+0x20],xmm7
  4038a0:	call   0x401560
  4038a5:	movsd  QWORD PTR [rsp+0x28],xmm6
  4038ab:	lea    r9,[rip+0x1aae]        # 0x405360
  4038b2:	mov    r8,rdi
  4038b5:	movsd  QWORD PTR [rsp+0x20],xmm7
  4038bb:	mov    rdx,rbp
  4038be:	mov    rcx,rsi
  4038c1:	mov    DWORD PTR [rsp+0x38],r15d
  4038c6:	mov    DWORD PTR [rsp+0x30],r14d
  4038cb:	call   0x401560
  4038d0:	movsd  xmm0,QWORD PTR [rip+0x1ab8]        # 0x405390
  4038d8:	lea    r9,[rip+0x1a8d]        # 0x40536c
  4038df:	mov    DWORD PTR [rsp+0x38],r15d
  4038e4:	mov    DWORD PTR [rsp+0x30],r14d
  4038e9:	mov    r8,rdi
  4038ec:	mulsd  xmm6,xmm0
  4038f0:	mov    rdx,rbp
  4038f3:	mov    rcx,rsi
  4038f6:	mulsd  xmm0,xmm7
  4038fa:	movsd  QWORD PTR [rsp+0x28],xmm6
  403900:	movsd  QWORD PTR [rsp+0x20],xmm0
  403906:	call   0x401560
  40390b:	jmp    0x4033e2
  403910:	lea    rcx,[rip+0x19f1]        # 0x405308
  403917:	call   0x402e40
  40391c:	jmp    0x4033e2
  403921:	mov    ecx,0xa
  403926:	call   0x402e48
  40392b:	mov    rcx,rbp
  40392e:	call   0x401878
  403933:	lea    rcx,[rip+0x1992]        # 0x4052cc
  40393a:	mov    rdx,rax
  40393d:	call   0x402e50
  403942:	jmp    0x4037a8
  403947:	lea    rcx,[rip+0x1934]        # 0x405282
  40394e:	call   0x402e58
  403953:	call   QWORD PTR [rip+0x5b1b]        # 0x409474
  403959:	lea    rdx,[rip+0x1928]        # 0x405288
  403960:	lea    rcx,[rax+0x60]
  403964:	mov    r8,rbp
  403967:	call   0x402e88
  40396c:	jmp    0x4033e2
  403971:	nop
  403972:	nop
  403973:	nop
  403974:	nop
  403975:	nop
  403976:	nop
  403977:	nop
  403978:	nop
  403979:	nop
  40397a:	nop
  40397b:	nop
  40397c:	nop
  40397d:	nop
  40397e:	nop
  40397f:	nop
  403980:	(bad)  
  403981:	(bad)  
  403982:	(bad)  
  403983:	(bad)  
  403984:	(bad)  
  403985:	(bad)  
  403986:	(bad)  
  403987:	inc    DWORD PTR [rax]
  403989:	add    BYTE PTR [rax],al
  40398b:	add    BYTE PTR [rax],al
  40398d:	add    BYTE PTR [rax],al
  40398f:	add    bh,bh
  403991:	(bad)  
  403992:	(bad)  
  403993:	(bad)  
  403994:	(bad)  
  403995:	(bad)  
  403996:	(bad)  
  403997:	inc    DWORD PTR [rax]
  403999:	add    BYTE PTR [rax],al
  40399b:	add    BYTE PTR [rax],al
  40399d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	cwde   
  404011:	cmp    DWORD PTR [rax+0x0],eax
	...
  404020:	(bad)  
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax],ah
  404061:	(bad)  
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax],dh
  404069:	(bad)  
  40406a:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	and    eax,0x73255c73
  405005:	add    BYTE PTR [rip+0x7333312d],ah        # 0x73738138
  40500b:	and    BYTE PTR [rax],al
  40500d:	sub    BYTE PTR [rip+0x2c66372e],ah        # 0x2ca68741
  405013:	add    BYTE PTR [rip+0x2966372e],ah        # 0x29a68747
  405019:	or     al,BYTE PTR [rax]
  40501b:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40501d:	outs   dx,BYTE PTR ds:[rsi]
  40501e:	add    BYTE PTR [eax],ch
  405021:	and    eax,0x4c002c73
  405026:	(bad)  
  405027:	je     0x405029
  405029:	and    eax,0xa2973
  40502e:	sub    BYTE PTR [rip+0x332e3231],ah        # 0x336e8265
  405034:	data16 sub al,0x25
  405037:	xor    DWORD PTR [rdx],esi
  405039:	xor    esp,DWORD PTR cs:[rsi+0x29]
  40503d:	add    BYTE PTR [rax],ah
  40503f:	and    BYTE PTR [rax],ch
  405041:	and    eax,0x2c66372e
  405046:	add    BYTE PTR [rip+0x2966372e],ah        # 0x29a6877a
  40504c:	add    BYTE PTR [rax],ah
  40504e:	and    BYTE PTR [rax],ch
  405050:	and    eax,0x25002c73
  405055:	jae    0x405080
  405057:	add    BYTE PTR [rax],ah
  405059:	and    BYTE PTR [rax],ah
  40505b:	and    BYTE PTR [rax],ah
  40505d:	and    BYTE PTR [rcx+0x6e],ch
  405060:	jbe    0x4050c7
  405062:	jb     0x4050d7
  405064:	and    BYTE PTR gs:[rax],ch
  405067:	and    eax,0x332e3131
  40506c:	data16 sub al,0x25
  40506f:	xor    DWORD PTR [rcx],esi
  405071:	xor    esp,DWORD PTR cs:[rsi+0x29]
  405075:	or     al,BYTE PTR [rax]
  405077:	add    BYTE PTR [rbp+0x73],dl
  40507a:	(bad)  
  40507b:	cmp    ah,BYTE PTR gs:[eax]
  40507f:	ins    BYTE PTR es:[rdi],dx
  405080:	imul   esi,DWORD PTR [rbx+0x74],0x206f6567
  405087:	pop    rbx
  405088:	sub    eax,0x5b205d64
  40508d:	sub    eax,0x5d776674
  405092:	and    BYTE PTR [rbx+0x2d],bl
  405095:	jo     0x405109
  405097:	outs   dx,DWORD PTR ds:[rsi]
  405098:	push   0x34
  40509a:	pop    rbp
  40509b:	and    BYTE PTR [rbx+0x2d],bl
  40509e:	outs   dx,BYTE PTR ds:[rsi]
  40509f:	outs   dx,DWORD PTR ds:[rsi]
  4050a0:	pop    rdi
  4050a1:	outs   dx,BYTE PTR ds:[rsi]
  4050a2:	outs   dx,DWORD PTR ds:[rsi]
  4050a3:	jb     0x405112
  4050a5:	pop    rbp
  4050a6:	and    BYTE PTR [rbx+0x2d],bl
  4050a9:	je     0x4050cb
  4050ab:	je     0x40510e
  4050ad:	(bad)  
  4050ae:	ins    BYTE PTR es:[rdi],dx
  4050af:	gs imul esi,DWORD PTR fs:[rdx+0x5d],0x6c696620
  4050b8:	outs   dx,BYTE PTR gs:[rsi]
  4050ba:	(bad)  
  4050bb:	ins    DWORD PTR es:[rdi],dx
  4050bc:	or     cl,BYTE PTR gs:[rdx]
  4050bf:	and    BYTE PTR [rax],ah
  4050c1:	sub    eax,0x72203a64
  4050c6:	gs jo  0x405138
  4050c9:	jb     0x40513f
  4050cb:	and    BYTE PTR [rcx+riz*2+0x74],ch
  4050cf:	(bad)  
  4050d0:	ins    BYTE PTR es:[rdi],dx
  4050d1:	outs   dx,DWORD PTR ds:[rsi]
  4050d2:	outs   dx,BYTE PTR ds:[rsi]
  4050d3:	and    BYTE PTR [ebx+0x6f],ah
  4050d7:	jb     0x405147
  4050d9:	gs jb  0x40514f
  4050dc:	and    BYTE PTR [rcx+0x6e],ch
  4050df:	and    BYTE PTR [rbp+riz*2+0x63],ah
  4050e3:	imul   ebp,DWORD PTR [rbp+0x61],0x6564206c
  4050ea:	addr32 jb 0x405152
  4050ed:	gs jae 0x405110
  4050f0:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  4050f7:	and    BYTE PTR [rdi+0x66],ch
  4050fa:	and    BYTE PTR [rbp+rcx*2+0x53],al
  4050fe:	or     ah,BYTE PTR cs:[rax]
  405101:	and    BYTE PTR [rip+0x3a776674],ch        # 0x3ab7b77b
  405107:	and    BYTE PTR [rdi+0x65],al
  40510a:	outs   dx,BYTE PTR ds:[rsi]
  40510b:	gs jb  0x40516f
  40510e:	je     0x405175
  405110:	and    BYTE PTR [rcx+0x20],ah
  405113:	cs je  0x40517c
  405116:	ja     0x405138
  405118:	sub    BYTE PTR [rbp+0x53],al
  40511b:	push   rdx
  40511c:	rex.WB and BYTE PTR [r9+rcx*2+0x46],dl
  405121:	rex.RX and BYTE PTR [rdi+0x6f],r10b
  405125:	jb     0x405193
  405127:	sub    DWORD PTR fs:[rax],esp
  40512a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f66
  405131:	jb     0x405153
  405133:	je     0x40519d
  405135:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
  40513a:	addr32 gs je 0x40515e
  40513e:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x200a
  405145:	and    BYTE PTR [rip+0x6a6f7270],ch        # 0x6aafc3bb
  40514b:	xor    al,0x3a
  40514d:	and    BYTE PTR [rdx+0x65],dl
  405150:	jo     0x4051c1
  405152:	jb     0x4051c8
  405154:	and    BYTE PTR [rax+0x52],dl
  405157:	rex.WRXB
  405158:	rex.WX
  405159:	cs xor al,0x20
  40515c:	gs jno 0x4051d4
  40515f:	imul   esi,DWORD PTR [rsi+0x65],0x746e656c
  405166:	and    BYTE PTR [rax+0x72],dh
  405169:	outs   dx,DWORD PTR ds:[rsi]
  40516a:	push   0x65
  40516c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  405170:	outs   dx,BYTE PTR ds:[rsi]
  405171:	and    BYTE PTR [rbp+riz*2+0x66],ah
  405175:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  40517c:	or     ah,BYTE PTR cs:[rax]
  40517f:	and    BYTE PTR [rip+0x6e5f6f6e],ch        # 0x6e9fc0f3
  405185:	outs   dx,DWORD PTR ds:[rsi]
  405186:	jb     0x4051f5
  405188:	cmp    ah,BYTE PTR [rax]
  40518a:	rex.R outs dx,DWORD PTR ds:[rsi]
  40518c:	outs   dx,BYTE PTR ds:[rsi]
  40518d:	(bad)  
  40518e:	je     0x4051b0
  405190:	jb     0x4051f7
  405192:	jo     0x405203
  405194:	jb     0x40520a
  405196:	and    BYTE PTR [rdi],ah
  405198:	outs   dx,BYTE PTR ds:[rsi]
  405199:	outs   dx,DWORD PTR ds:[rsi]
  40519a:	jb     0x405209
  40519c:	(bad)  
  40519d:	ins    BYTE PTR es:[rdi],dx
  40519e:	imul   edi,DWORD PTR [rdx+0x65],0x70202764
  4051a5:	(bad)  
  4051a6:	jb     0x405209
  4051a8:	ins    DWORD PTR es:[rdi],dx
  4051a9:	gs je  0x405211
  4051ac:	jb     0x4051ce
  4051ae:	jbe    0x405211
  4051b0:	ins    BYTE PTR es:[rdi],dx
  4051b1:	jne    0x405218
  4051b3:	jae    0x4051e3
  4051b5:	or     ah,BYTE PTR [rax]
  4051b7:	and    BYTE PTR [rsi+0x69],ah
  4051ba:	ins    BYTE PTR es:[rdi],dx
  4051bb:	outs   dx,BYTE PTR gs:[rsi]
  4051bd:	(bad)  
  4051be:	ins    DWORD PTR es:[rdi],dx
  4051bf:	cmp    ah,BYTE PTR gs:[rax]
  4051c2:	rex.WRX (bad) 
  4051c4:	ins    DWORD PTR es:[rdi],dx
  4051c5:	and    BYTE PTR gs:[rdi+0x66],ch
  4051c9:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4051cd:	and    BYTE PTR [rdi+0x65],al
  4051d0:	outs   dx,DWORD PTR ds:[rsi]
  4051d1:	push   rsp
  4051d2:	rex.WB
  4051d3:	rex.RX
  4051d4:	rex.RX and BYTE PTR [rsi+0x69],r12b
  4051d8:	ins    BYTE PTR es:[rdi],dx
  4051d9:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4051de:	jb     0x405245
  4051e0:	jo     0x405251
  4051e2:	jb     0x405258
  4051e4:	and    BYTE PTR [rdi+0x6e],ch
  4051e7:	add    BYTE PTR cs:[rip+0x6e5f6f6e],ch        # 0x6e9fc15c
  4051ee:	outs   dx,DWORD PTR ds:[rsi]
  4051ef:	jb     0x40525e
  4051f1:	add    BYTE PTR [rip+0x742d0074],ch        # 0x746d526b
  4051f7:	data16 ja 0x4051fa
  4051fa:	sub    eax,0x6a6f7270
  4051ff:	xor    al,0x0
  405201:	sub    eax,0x642d0069
  405206:	add    BYTE PTR [rip+0x745f7473],ch        # 0x749fc67f
  40520c:	gs jae 0x405283
  40520f:	add    BYTE PTR [rbp+0x54],dl
  405212:	rex.WRB and BYTE PTR [r8],r12b
  405215:	and    BYTE PTR [rax],ah
  405217:	xor    DWORD PTR [rcx],esi
  405219:	and    BYTE PTR [rbx+0x20],dl
  40521c:	xor    BYTE PTR [r8],r14b
  40521f:	xor    BYTE PTR [rax+rax*1+0x72],bh
  405223:	add    BYTE PTR [rsi+0x61],ah
  405226:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  40522e:	rex.RXB push r12
  405230:	rex.WB
  405231:	rex.RX
  405232:	rex.WRX
  405233:	gs ja  0x405240
  405236:	add    BYTE PTR [rsi+0x61],ah
  405239:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
  405241:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  405245:	je     0x4052ae
  405247:	outs   dx,DWORD PTR gs:[rsi]
  405249:	or     al,BYTE PTR [rax]
  40524b:	add    BYTE PTR [rax],al
  40524d:	add    BYTE PTR [rax],al
  40524f:	add    BYTE PTR [rbp+0x6e],dl
  405252:	(bad)  
  405253:	(bad)  
  405254:	ins    BYTE PTR es:[rdi],dx
  405255:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  40525a:	je     0x4052ce
  40525c:	(bad)  
  40525d:	outs   dx,BYTE PTR ds:[rsi]
  40525e:	jae    0x4052cc
  405260:	(bad)  
  405261:	je     0x4052c8
  405263:	and    BYTE PTR [rcx+0x6d],ch
  405266:	(bad)  
  405267:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  40526d:	push   rax
  40526e:	rex.XB push r11
  405270:	and    BYTE PTR [rbx+0x6f],ah
  405273:	outs   dx,DWORD PTR ds:[rsi]
  405274:	jb     0x4052da
  405276:	imul   ebp,DWORD PTR [rsi+0x61],0x2e736574
  40527d:	or     al,BYTE PTR [rax]
  40527f:	ja     0x4052f5
  405281:	add    BYTE PTR [rsi+0x6f],ah
  405284:	jo     0x4052eb
  405286:	outs   dx,BYTE PTR ds:[rsi]
  405287:	add    BYTE PTR [rsi+0x61],al
  40528a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  405292:	outs   dx,DWORD PTR ds:[rsi]
  405293:	jo     0x4052fa
  405295:	outs   dx,BYTE PTR ds:[rsi]
  405296:	and    BYTE PTR [rsi+rax*2+0x57],dl
  40529a:	and    BYTE PTR [rsi+0x69],ah
  40529d:	ins    BYTE PTR es:[rdi],dx
  40529e:	and    BYTE PTR gs:[rax+0x25],ah
  4052a2:	jae    0x4052cb
  4052a4:	or     al,BYTE PTR [rax]
  4052a6:	and    eax,0x312e3432
  4052ab:	xor    BYTE PTR [rsi+0xa],ah
  4052ae:	add    BYTE PTR [rdi+0x6f],dl
  4052b1:	jb     0x40531f
  4052b3:	and    BYTE PTR fs:[rsi+0x69],ah
  4052b7:	ins    BYTE PTR es:[rdi],dx
  4052b8:	and    BYTE PTR gs:[rdi+0x72],dh
  4052bc:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f74206e
  4052c4:	and    BYTE PTR [rdi],ah
  4052c6:	and    eax,0xa2e2773
  4052cb:	add    BYTE PTR [rax+0x52],dl
  4052ce:	rex.WRXB
  4052cf:	rex.WX
  4052d0:	cs xor al,0x20
  4052d3:	rex.R
  4052d4:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
  4052db:	outs   dx,DWORD PTR ds:[rsi]
  4052dc:	outs   dx,BYTE PTR ds:[rsi]
  4052dd:	cmp    ah,BYTE PTR [rax]
  4052df:	and    eax,0xa000a73
  4052e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4052e6:	jb     0x405356
  4052e8:	gs jb  0x40530b
  4052eb:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4052ed:	outs   dx,DWORD PTR ds:[rsi]
  4052ee:	jb     0x405354
  4052f0:	imul   ebp,DWORD PTR [rsi+0x61],0x3a736574
  4052f7:	add    BYTE PTR [rbp+0x70],dl
  4052fa:	jo     0x405361
  4052fc:	jb     0x40531e
  4052fe:	rex.WR
  4052ff:	gs data16 je 0x405303
  405303:	add    BYTE PTR [rax],al
  405305:	add    BYTE PTR [rax],al
  405307:	add    BYTE PTR [rax],ah
  405309:	cs cs and BYTE PTR cs:[rbp+0x6e],dh
  40530f:	(bad)  
  405310:	(bad)  
  405311:	ins    BYTE PTR es:[rdi],dx
  405312:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  405317:	je     0x40538b
  405319:	(bad)  
  40531a:	outs   dx,BYTE PTR ds:[rsi]
  40531b:	jae    0x405383
  40531d:	outs   dx,DWORD PTR ds:[rsi]
  40531e:	jb     0x40538d
  405320:	and    BYTE PTR [rax+0x6f],dh
  405323:	imul   ebp,DWORD PTR [rsi+0x74],0x65622073
  40532a:	je     0x4053a3
  40532c:	gs outs dx,BYTE PTR gs:[rsi]
  40532f:	and    BYTE PTR [rax+0x69],dh
  405332:	js     0x405399
  405334:	ins    BYTE PTR es:[rdi],dx
  405335:	(bad)  
  405336:	ins    BYTE PTR es:[rdi],dx
  405337:	imul   ebp,DWORD PTR [rsi+0x65],0x646e6120
  40533e:	and    BYTE PTR [rax+0x43],dl
  405341:	push   rbx
  405342:	and    BYTE PTR [rbx+0x70],dh
  405345:	(bad)  
  405346:	movsxd esp,DWORD PTR [rbp+0x0]
  405349:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40534b:	ja     0x4053b2
  40534d:	jb     0x40536f
  40534f:	rex.WR
  405350:	gs data16 je 0x405354
  405354:	push   rbp
  405355:	jo     0x4053c7
  405357:	gs jb  0x40537a
  40535a:	push   rdx
  40535b:	imul   esp,DWORD PTR [rdi+0x68],0x6f4c0074
  405362:	ja     0x4053c9
  405364:	jb     0x405386
  405366:	push   rdx
  405367:	imul   esp,DWORD PTR [rdi+0x68],0x65430074
  40536e:	outs   dx,BYTE PTR ds:[rsi]
  40536f:	je     0x4053d6
  405371:	jb     0x405373
	...
  40537b:	add    BYTE PTR [rax],al
  40537d:	add    BYTE PTR [rsi+0x40],cl
  405380:	add    BYTE PTR [rax],al
  405382:	add    BYTE PTR [rax],al
  405384:	out    0x1a,al
  405387:	add    BYTE PTR [r8],al
  40538a:	add    BYTE PTR [rax],al
  40538c:	int3   
  40538d:	sahf   
  40538e:	rex.WR
  40538f:	add    BYTE PTR [r8],al
  405392:	add    BYTE PTR [rax],al
  405394:	add    BYTE PTR [rax],al
  405396:	loopne 0x4053d7
  405398:	add    BYTE PTR [rax],al
  40539a:	add    BYTE PTR [rax],al
  40539c:	add    BYTE PTR [rax],al
  40539e:	clc    
  40539f:	(bad)  
  4053a0:	ror    BYTE PTR [rcx+0x40],0x0
  4053a7:	add    al,al
  4053a9:	test   BYTE PTR [rax+0x0],al
  4053ac:	add    BYTE PTR [rax],al
  4053ae:	add    BYTE PTR [rax],al
  4053b0:	jo     0x4053ce
  4053b2:	add    BYTE PTR [rax],al
	...
  4053bd:	add    BYTE PTR [rax],al
  4053bf:	add    BYTE PTR [rcx+0x72],al
  4053c2:	addr32 jne 0x405432
  4053c5:	outs   dx,BYTE PTR gs:[rsi]
  4053c7:	je     0x4053e9
  4053c9:	outs   dx,DWORD PTR fs:[rsi]
  4053cb:	ins    DWORD PTR es:[rdi],dx
  4053cc:	(bad)  
  4053cd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4053d4:	jb     0x4053f6
  4053d6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4053da:	rex.B
  4053db:	rex.WB
  4053dc:	rex.WRX sub QWORD PTR [rax],r8
  4053df:	rex.B jb 0x405449
  4053e2:	jne    0x405451
  4053e4:	outs   dx,BYTE PTR gs:[rsi]
  4053e6:	je     0x405408
  4053e8:	jae    0x405453
  4053ea:	outs   dx,BYTE PTR ds:[rsi]
  4053eb:	addr32 jne 0x40545a
  4053ee:	(bad)  
  4053ef:	jb     0x40545a
  4053f1:	je     0x40546c
  4053f3:	and    BYTE PTR [rax],ch
  4053f5:	push   rbx
  4053f6:	rex.WB
  4053f7:	rex.RXB
  4053f8:	rex.WRX sub QWORD PTR [rax],r8
  4053fb:	add    BYTE PTR [rax],al
  4053fd:	add    BYTE PTR [rax],al
  4053ff:	add    BYTE PTR [rdi+0x76],cl
  405402:	gs jb  0x40546b
  405405:	ins    BYTE PTR es:[rdi],dx
  405406:	outs   dx,DWORD PTR ds:[rsi]
  405407:	ja     0x405429
  405409:	jb     0x40546c
  40540b:	outs   dx,BYTE PTR ds:[rsi]
  40540c:	and    BYTE PTR gs:[ebp+0x72],ah
  405411:	jb     0x405482
  405413:	jb     0x405435
  405415:	sub    BYTE PTR [rdi+0x56],cl
  405418:	rex.RB push r10
  40541a:	rex.RX
  40541b:	rex.WR
  40541c:	rex.WRXB push r15
  40541e:	sub    DWORD PTR [rax],eax
  405420:	push   rax
  405421:	(bad)  
  405422:	jb     0x405498
  405424:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40542b:	jae    0x40544d
  40542d:	outs   dx,DWORD PTR ds:[rsi]
  40542e:	data16 and BYTE PTR [rbx+0x69],dh
  405432:	outs   dx,BYTE PTR ds:[esi]
  405434:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40543b:	and    BYTE PTR gs:[rax],ch
  40543e:	push   rax
  40543f:	rex.WR
  405440:	rex.WRXB push r11
  405442:	push   rbx
  405443:	sub    DWORD PTR [rax],eax
  405445:	add    BYTE PTR [rax],al
  405447:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40544b:	(bad)  
  40544c:	ins    BYTE PTR es:[rdi],dx
  40544d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405451:	jae    0x405473
  405453:	outs   dx,DWORD PTR ds:[rsi]
  405454:	data16 and BYTE PTR [rbx+0x69],dh
  405458:	outs   dx,BYTE PTR ds:[esi]
  40545a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405461:	and    BYTE PTR gs:[rax],ch
  405464:	push   rsp
  405465:	rex.WR
  405466:	rex.WRXB push r11
  405468:	push   rbx
  405469:	sub    DWORD PTR [rax],eax
  40546b:	add    BYTE PTR [rax],al
  40546d:	add    BYTE PTR [rax],al
  40546f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405473:	and    BYTE PTR [rdx+0x65],dh
  405476:	jae    0x4054ed
  405478:	ins    BYTE PTR es:[rdi],dx
  405479:	je     0x40549b
  40547b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405482:	jae    0x4054f1
  405484:	(bad)  
  405485:	ins    BYTE PTR es:[rdi],dx
  405486:	ins    BYTE PTR es:[rdi],dx
  405487:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40548b:	(bad)  
  40548c:	and    BYTE PTR gs:[rdx+0x65],dh
  405490:	jo     0x405504
  405492:	gs jae 0x4054fa
  405495:	outs   dx,BYTE PTR ds:[rsi]
  405496:	je     0x4054fd
  405498:	and    BYTE PTR fs:[rax],ch
  40549b:	push   rbp
  40549c:	rex.WRX
  40549d:	rex.R
  40549e:	rex.RB push r10
  4054a0:	rex.RX
  4054a1:	rex.WR
  4054a2:	rex.WRXB push r15
  4054a4:	sub    DWORD PTR [rax],eax
  4054a6:	push   rbp
  4054a7:	outs   dx,BYTE PTR ds:[rsi]
  4054a8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4054ac:	outs   dx,BYTE PTR ds:[rsi]
  4054ad:	and    BYTE PTR [rbp+0x72],ah
  4054b0:	jb     0x405521
  4054b2:	jb     0x4054b4
  4054b4:	add    BYTE PTR [rax],al
  4054b6:	add    BYTE PTR [rax],al
  4054b8:	pop    rdi
  4054b9:	ins    DWORD PTR es:[rdi],dx
  4054ba:	(bad)  
  4054bb:	je     0x405525
  4054bd:	gs jb  0x405532
  4054c0:	sub    BYTE PTR [rcx],ch
  4054c2:	cmp    ah,BYTE PTR [rax]
  4054c4:	and    eax,0x6e692073
  4054c9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657d42
  4054cf:	sub    al,0x20
  4054d1:	and    eax,0x20202967
  4054d6:	sub    BYTE PTR [rdx+0x65],dh
  4054d9:	je     0x405551
  4054db:	(bad)  
  4054dc:	ins    BYTE PTR es:[rdi],dx
  4054dd:	cmp    eax,0xa296725
  4054e2:	add    BYTE PTR [rax],al
  4054e4:	pop    rsp
  4054e5:	leave  
  4054e6:	(bad)  
  4054e7:	call   FWORD PTR [rbp+0xcffffc8]
  4054ed:	leave  
  4054ee:	(bad)  
  4054ef:	call   FWORD PTR [rcx+rcx*8]
  4054f2:	(bad)  
  4054f3:	jmp    FWORD PTR [rcx+rcx*8]
  4054f6:	(bad)  
  4054f7:	(bad)  
  4054f8:	cmp    al,0xc9
  4054fa:	(bad)  
  4054fb:	dec    DWORD PTR [rcx+rcx*8-0x1]
  4054ff:	dec    DWORD PTR [rbp+0x69]
  405502:	outs   dx,BYTE PTR ds:[rsi]
  405503:	addr32 ja 0x405533
  405506:	ja     0x40553e
  405508:	xor    al,0x20
  40550a:	jb     0x405581
  40550c:	outs   dx,BYTE PTR ds:[rsi]
  40550d:	je     0x405578
  40550f:	ins    DWORD PTR es:[rdi],dx
  405510:	and    BYTE PTR gs:[rsi+0x61],ah
  405514:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40551c:	add    BYTE PTR [rax],al
  40551e:	add    BYTE PTR [rax],al
  405520:	rex.B
  405521:	fs fs jb 0x40558a
  405525:	jae    0x40559a
  405527:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8759d
  40552d:	jae    0x40554f
  40552f:	outs   dx,BYTE PTR ds:[rsi]
  405530:	outs   dx,DWORD PTR ds:[rsi]
  405531:	and    BYTE PTR [rcx+0x6d],ch
  405534:	(bad)  
  405535:	addr32 gs sub eax,0x74636573
  40553c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405543:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40554a:	jne    0x4055b1
  40554c:	jb     0x4055c7
  40554e:	and    BYTE PTR [rsi+0x61],ah
  405551:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405559:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a275c3
  40555f:	je     0x4055c6
  405561:	jae    0x405583
  405563:	(bad)  
  405564:	je     0x405586
  405566:	(bad)  
  405567:	fs fs jb 0x4055d0
  40556b:	jae    0x4055e0
  40556d:	and    BYTE PTR [rip+0x70],ah        # 0x4055e3
  405573:	add    BYTE PTR [rax],al
  405575:	add    BYTE PTR [rax],al
  405577:	add    BYTE PTR [rax],ah
  405579:	and    BYTE PTR [rsi+0x69],dl
  40557c:	jb     0x4055f2
  40557e:	jne    0x4055e1
  405580:	ins    BYTE PTR es:[rdi],dx
  405581:	push   rax
  405582:	jb     0x4055f3
  405584:	je     0x4055eb
  405586:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40558a:	(bad)  
  40558b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405593:	push   0x646f6320
  405598:	and    BYTE PTR gs:[rax],dh
  40559b:	js     0x4055c2
  40559d:	js     0x40559f
  40559f:	add    BYTE PTR [rax],ah
  4055a1:	and    BYTE PTR [rbp+0x6e],dl
  4055a4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055a8:	outs   dx,BYTE PTR ds:[rsi]
  4055a9:	and    BYTE PTR [rax+0x73],dh
  4055ac:	gs jne 0x405613
  4055af:	outs   dx,DWORD PTR ds:[rsi]
  4055b0:	and    BYTE PTR [rdx+0x65],dh
  4055b3:	ins    BYTE PTR es:[rdi],dx
  4055b4:	outs   dx,DWORD PTR ds:[rsi]
  4055b5:	movsxd esp,DWORD PTR [rcx+0x74]
  4055b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4055bf:	je     0x405630
  4055c1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4055c4:	and    BYTE PTR [rsi+0x65],dh
  4055c7:	jb     0x40563c
  4055c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4055d0:	or     al,BYTE PTR [rax]
  4055d2:	add    BYTE PTR [rax],al
  4055d4:	add    BYTE PTR [rax],al
  4055d6:	add    BYTE PTR [rax],al
  4055d8:	and    BYTE PTR [rax],ah
  4055da:	push   rbp
  4055db:	outs   dx,BYTE PTR ds:[rsi]
  4055dc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055e0:	outs   dx,BYTE PTR ds:[rsi]
  4055e1:	and    BYTE PTR [rax+0x73],dh
  4055e4:	gs jne 0x40564b
  4055e7:	outs   dx,DWORD PTR ds:[rsi]
  4055e8:	and    BYTE PTR [rdx+0x65],dh
  4055eb:	ins    BYTE PTR es:[rdi],dx
  4055ec:	outs   dx,DWORD PTR ds:[rsi]
  4055ed:	movsxd esp,DWORD PTR [rcx+0x74]
  4055f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4055f7:	and    BYTE PTR [rbx+0x69],dh
  4055fa:	jp     0x405661
  4055fc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8466
	...
  40560e:	add    BYTE PTR [rax],al
  405610:	cs jo  0x405677
  405613:	(bad)  
  405614:	je     0x405677
	...
  40561e:	add    BYTE PTR [rax],al
  405620:	rex
  405621:	rex
  405622:	add    BYTE PTR [rax],al
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rax+0x40],dl
  405632:	add    BYTE PTR [rax],al
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rax+0x4039],al
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rax+0x5b],ah
  405652:	add    BYTE PTR [rax],al
	...
  40565d:	add    BYTE PTR [rax],al
  40565f:	add    BYTE PTR [rax+0x5b],ah
  405662:	add    BYTE PTR [rax],al
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rax+0x4053],dh
	...
  405681:	add    BYTE PTR [rax+0x0],al
	...
  405690:	ins    BYTE PTR es:[rdi],dx
  405691:	xchg   esp,eax
  405692:	add    BYTE PTR [rax],al
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rsp+rdx*4+0x40],dl
	...
  4056ae:	add    BYTE PTR [rax],al
  4056b0:	lods   al,BYTE PTR ds:[rsi]
  4056b1:	xchg   esp,eax
  4056b2:	add    BYTE PTR [rax],al
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    ah,al
  4056c1:	xchg   esp,eax
  4056c2:	add    BYTE PTR [rax],al
	...
  4056d1:	mov    eax,DWORD PTR [rax+0x0]
	...
  4056e0:	push   0x408e
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rax-0x72],ah
  4056f2:	add    BYTE PTR [rax],al
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rax-0x72],dl
  405702:	add    BYTE PTR [rax],al
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rax-0x72],bl
  405712:	add    BYTE PTR [rax],al
	...
  405721:	movabs al,ds:0x40
  40572a:	add    BYTE PTR [rax],al
  40572c:	add    BYTE PTR [rax],al
  40572e:	add    BYTE PTR [rax],al
  405730:	adc    BYTE PTR [rax+0x40],ah
	...
  40573e:	add    BYTE PTR [rax],al
  405740:	sbb    BYTE PTR [rax+0x40],ah
	...
  40574e:	add    BYTE PTR [rax],al
  405750:	xor    BYTE PTR [rax+0x40],ah
	...
  40575e:	add    BYTE PTR [rax],al
  405760:	nop
  405761:	test   BYTE PTR [rax+0x0],al
	...
  405770:	ror    BYTE PTR [rdx+0x40],1
	...
  40577e:	add    BYTE PTR [rax],al
  405780:	add    BYTE PTR [rsi],ah
  405782:	add    BYTE PTR [rax],al
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rax+0x1d],dl
  405792:	add    BYTE PTR [rax],al
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rax+0x408a],al
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rax+0x408a],dh
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rax+0x4084],ah
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rax+0x408a],bl
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdx+rcx*4+0x40],dl
	...
  4057ee:	add    BYTE PTR [rax],al
  4057f0:	nop
  4057f1:	mov    al,BYTE PTR [rax+0x0]
	...
  405800:	rex.RXB
  405801:	rex.XB
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rdi+0x43],al
  405862:	rex.XB cmp spl,BYTE PTR [r8]
  405865:	sub    BYTE PTR [rdi+0x4e],al
  405868:	push   rbp
  405869:	sub    DWORD PTR [rax],esp
  40586b:	xor    al,0x2e
  40586d:	cmp    DWORD PTR [rsi],ebp
  40586f:	xor    al,0x0
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rdi+0x43],al
  405882:	rex.XB cmp spl,BYTE PTR [r8]
  405885:	sub    BYTE PTR [rdi+0x4e],al
  405888:	push   rbp
  405889:	sub    DWORD PTR [rax],esp
  40588b:	xor    al,0x2e
  40588d:	cmp    DWORD PTR [rsi],ebp
  40588f:	xor    al,0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x4e],al
  4058a8:	push   rbp
  4058a9:	sub    DWORD PTR [rax],esp
  4058ab:	xor    al,0x2e
  4058ad:	cmp    DWORD PTR [rsi],ebp
  4058af:	xor    al,0x0
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rdi+0x43],al
  4058c2:	rex.XB cmp spl,BYTE PTR [r8]
  4058c5:	sub    BYTE PTR [rdi+0x4e],al
  4058c8:	push   rbp
  4058c9:	sub    DWORD PTR [rax],esp
  4058cb:	xor    al,0x2e
  4058cd:	cmp    DWORD PTR [rsi],ebp
  4058cf:	xor    al,0x0
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rdi+0x43],al
  4058e2:	rex.XB cmp spl,BYTE PTR [r8]
  4058e5:	sub    BYTE PTR [rdi+0x4e],al
  4058e8:	push   rbp
  4058e9:	sub    DWORD PTR [rax],esp
  4058eb:	xor    al,0x2e
  4058ed:	cmp    DWORD PTR [rsi],ebp
  4058ef:	xor    al,0x0
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdi+0x43],al
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x4e],al
  405908:	push   rbp
  405909:	sub    DWORD PTR [rax],esp
  40590b:	xor    al,0x2e
  40590d:	cmp    DWORD PTR [rsi],ebp
  40590f:	xor    al,0x0
	...
  40591d:	add    BYTE PTR [rax],al
  40591f:	add    BYTE PTR [rdi+0x43],al
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x4e],al
  405928:	push   rbp
  405929:	sub    DWORD PTR [rax],esp
  40592b:	xor    al,0x2e
  40592d:	cmp    DWORD PTR [rsi],ebp
  40592f:	xor    al,0x0
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rdi+0x43],al
  405942:	rex.XB cmp spl,BYTE PTR [r8]
  405945:	sub    BYTE PTR [rdi+0x4e],al
  405948:	push   rbp
  405949:	sub    DWORD PTR [rax],esp
  40594b:	xor    al,0x2e
  40594d:	cmp    DWORD PTR [rsi],ebp
  40594f:	xor    al,0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rdi+0x43],al
  405962:	rex.XB cmp spl,BYTE PTR [r8]
  405965:	sub    BYTE PTR [rdi+0x4e],al
  405968:	push   rbp
  405969:	sub    DWORD PTR [rax],esp
  40596b:	xor    al,0x2e
  40596d:	cmp    DWORD PTR [rsi],ebp
  40596f:	xor    al,0x0
	...
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rdi+0x43],al
  405982:	rex.XB cmp spl,BYTE PTR [r8]
  405985:	sub    BYTE PTR [rdi+0x4e],al
  405988:	push   rbp
  405989:	sub    DWORD PTR [rax],esp
  40598b:	xor    al,0x2e
  40598d:	cmp    DWORD PTR [rsi],ebp
  40598f:	xor    al,0x0
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rdi+0x43],al
  4059a2:	rex.XB cmp spl,BYTE PTR [r8]
  4059a5:	sub    BYTE PTR [rdi+0x4e],al
  4059a8:	push   rbp
  4059a9:	sub    DWORD PTR [rax],esp
  4059ab:	xor    al,0x2e
  4059ad:	cmp    DWORD PTR [rsi],ebp
  4059af:	xor    al,0x0
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rdi+0x43],al
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x4e],al
  4059c8:	push   rbp
  4059c9:	sub    DWORD PTR [rax],esp
  4059cb:	xor    al,0x2e
  4059cd:	cmp    DWORD PTR [rsi],ebp
  4059cf:	xor    al,0x0
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rdi+0x43],al
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x4e],al
  4059e8:	push   rbp
  4059e9:	sub    DWORD PTR [rax],esp
  4059eb:	xor    al,0x2e
  4059ed:	cmp    DWORD PTR [rsi],ebp
  4059ef:	xor    al,0x0
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rdi+0x43],al
  405a02:	rex.XB cmp spl,BYTE PTR [r8]
  405a05:	sub    BYTE PTR [rdi+0x4e],al
  405a08:	push   rbp
  405a09:	sub    DWORD PTR [rax],esp
  405a0b:	xor    al,0x2e
  405a0d:	cmp    DWORD PTR [rsi],ebp
  405a0f:	xor    al,0x0
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b3d:	add    BYTE PTR [rax],al
  405b3f:	add    BYTE PTR [rdi+0x43],al
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x4e],al
  405b48:	push   rbp
  405b49:	sub    DWORD PTR [rax],esp
  405b4b:	xor    al,0x2e
  405b4d:	cmp    DWORD PTR [rsi],ebp
  405b4f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x155d0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x60000070
  406055:	adc    eax,0x17f00000
  40605a:	add    BYTE PTR [rax],al
  40605c:	jo     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	lock (bad) 
  406062:	add    BYTE PTR [rax],al
  406064:	or     ebx,DWORD PTR [rax]
  406066:	add    BYTE PTR [rax],al
  406068:	test   BYTE PTR [rax+0x0],dh
  40606b:	add    BYTE PTR [rax+0x57000018],dh
  406071:	sbb    DWORD PTR [rax],eax
  406073:	add    BYTE PTR [rax+rsi*2+0x19600000],ch
  40607a:	add    BYTE PTR [rax],al
  40607c:	jns    0x406097
  40607e:	add    BYTE PTR [rax],al
  406080:	mov    ah,0x70
  406082:	add    BYTE PTR [rax],al
  406084:	sbb    BYTE PTR [rcx],0x0
  406087:	add    BYTE PTR [rbp-0x43ffffe7],dh
  40608d:	jo     0x40608f
  40608f:	add    al,al
  406091:	sbb    DWORD PTR [rax],eax
  406093:	add    BYTE PTR [rip+0xffffffffc400001a],dl        # 0xffffffffc44060b3
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax],ah
  40609d:	sbb    al,BYTE PTR [rax]
  40609f:	add    BYTE PTR [rdx+rbx*1],bh
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	shl    BYTE PTR [rax+0x0],1
  4060a7:	add    BYTE PTR [rax+0x1a],al
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	rex.WX sbb al,BYTE PTR [rax]
  4060af:	add    ah,dl
  4060b1:	jo     0x4060b3
  4060b3:	add    BYTE PTR [rax+0x1a],dl
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	push   rbx
  4060b9:	sbb    al,BYTE PTR [rax]
  4060bb:	add    al,bl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x1a],ah
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	sbb    eax,DWORD PTR ss:[rax]
  4060c7:	add    ah,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x1b],al
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	cmp    ebx,DWORD PTR [rax+rax*1]
  4060d3:	add    ah,ch
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax+0x1c],al
  4060da:	add    BYTE PTR [rax],al
  4060dc:	outs   dx,DWORD PTR ds:[rsi]
  4060dd:	sbb    al,0x0
  4060df:	add    ah,bh
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax+0x1c],dh
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	fstp   DWORD PTR [rax+rax*1]
  4060eb:	add    BYTE PTR [rcx+rsi*2],al
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	loopne 0x40610e
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	jrcxz  0x406112
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	adc    BYTE PTR [rcx+0x0],dh
  4060fb:	add    al,dh
  4060fd:	sbb    al,0x0
  4060ff:	add    BYTE PTR [rcx],dh
  406101:	sbb    eax,0x71140000
  406106:	add    BYTE PTR [rax],al
  406108:	rex sbb eax,0x1d4c0000
  40610e:	add    BYTE PTR [rax],al
  406110:	sbb    al,0x71
  406112:	add    BYTE PTR [rax],al
  406114:	push   rax
  406115:	sbb    eax,0x1e4c0000
  40611a:	add    BYTE PTR [rax],al
  40611c:	and    BYTE PTR [rcx+0x0],dh
  40611f:	add    BYTE PTR [rax+0x1e],dl
  406122:	add    BYTE PTR [rax],al
  406124:	push   rbx
  406125:	(bad)  
  406126:	add    BYTE PTR [rax],al
  406128:	cmp    BYTE PTR [rcx+0x0],dh
  40612b:	add    BYTE PTR [rax+0x1e],ah
  40612e:	add    BYTE PTR [rax],al
  406130:	fs (bad) 
  406132:	add    BYTE PTR [rax],al
  406134:	cmp    al,0x71
  406136:	add    BYTE PTR [rax],al
  406138:	jo     0x406158
  40613a:	add    BYTE PTR [rax],al
  40613c:	je     0x40615c
  40613e:	add    BYTE PTR [rax],al
  406140:	rex jno 0x406143
  406143:	add    BYTE PTR [rax-0x1effffe2],al
  406149:	(bad)  
  40614a:	add    BYTE PTR [rax],al
  40614c:	rex.R jno 0x40614f
  40614f:	add    al,dh
  406151:	(bad)  
  406152:	add    BYTE PTR [rax],al
  406154:	push   rdx
  406155:	and    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rax+0x71],dl
  40615a:	add    BYTE PTR [rax],al
  40615c:	(bad)  
  40615d:	and    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rcx+0x23],bl
  406162:	add    BYTE PTR [rax],al
  406164:	fs jno 0x406167
  406167:	add    BYTE PTR [rax+0x23],ah
  40616a:	add    BYTE PTR [rax],al
  40616c:	(bad)  
  40616d:	and    eax,0x717c0000
  406172:	add    BYTE PTR [rax],al
  406174:	adc    BYTE PTR [rip+0x25fc0000],ah        # 0x263c617a
  40617a:	add    BYTE PTR [rax],al
  40617c:	test   BYTE PTR [rcx+0x0],dh
  40617f:	add    BYTE PTR [rax],al
  406181:	add    BYTE PTR es:[rax],al
  406184:	mov    eax,0x94000027
  406189:	jno    0x40618b
  40618b:	add    al,al
  40618d:	(bad)  
  40618e:	add    BYTE PTR [rax],al
  406190:	sub    eax,0x9c000028
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],dh
  406199:	sub    BYTE PTR [rax],al
  40619b:	add    BYTE PTR [rdi-0x53ffffd8],ch
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax+0x4f000028],dh
  4061a9:	sub    DWORD PTR [rax],eax
  4061ab:	add    BYTE PTR [rax+0x50000071],bh
  4061b1:	sub    DWORD PTR [rax],eax
  4061b3:	add    BYTE PTR [rdx],ch
  4061b5:	sub    al,BYTE PTR [rax]
  4061b7:	add    al,al
  4061b9:	jno    0x4061bb
  4061bb:	add    BYTE PTR [rax],dh
  4061bd:	sub    al,BYTE PTR [rax]
  4061bf:	add    BYTE PTR [rdi+0x2a],cl
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	enter  0x71,0x0
  4061c8:	push   rax
  4061c9:	sub    al,BYTE PTR [rax]
  4061cb:	add    BYTE PTR [rdx+0x2a],ah
  4061ce:	add    BYTE PTR [rax],al
  4061d0:	int3   
  4061d1:	jno    0x4061d3
  4061d3:	add    BYTE PTR [rax+0x2a],dh
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	mov    ch,0x2a
  4061da:	add    BYTE PTR [rax],al
  4061dc:	shl    BYTE PTR [rcx+0x0],1
  4061df:	add    al,al
  4061e1:	sub    al,BYTE PTR [rax]
  4061e3:	add    BYTE PTR [rsi+0x2b],bl
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	(bad)  
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x2b],ah
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	movabs ds:0xb0000071e000002b,eax
  4061f9:	sub    eax,DWORD PTR [rax]
  4061fb:	add    bl,ch
  4061fd:	sub    eax,DWORD PTR [rax]
  4061ff:	add    ah,ch
  406201:	jno    0x406203
  406203:	add    al,dh
  406205:	sub    eax,DWORD PTR [rax]
  406207:	add    BYTE PTR [rsi+0x2c],bh
  40620a:	add    BYTE PTR [rax],al
  40620c:	hlt    
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax-0x47ffffd4],al
  406215:	sub    al,0x0
  406217:	add    BYTE PTR [rax],al
  406219:	jb     0x40621b
  40621b:	add    al,al
  40621d:	sub    al,0x0
  40621f:	add    BYTE PTR [rip+0xc00002d],dl        # 0xc406252
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax],ah
  406229:	sub    eax,0x2dce0000
  40622e:	add    BYTE PTR [rax],al
  406230:	sbb    BYTE PTR [rdx+0x0],dh
  406233:	add    BYTE PTR [rax],ah
  406235:	(bad)  
  406236:	add    BYTE PTR [rax],al
  406238:	sub    BYTE PTR [rdi],ch
  40623a:	add    BYTE PTR [rax],al
  40623c:	sub    BYTE PTR [rdx+0x0],dh
  40623f:	add    BYTE PTR [rax],dh
  406241:	(bad)  
  406242:	add    BYTE PTR [rax],al
  406244:	cmp    ebp,DWORD PTR [rdi]
  406246:	add    BYTE PTR [rax],al
  406248:	sub    al,0x72
  40624a:	add    BYTE PTR [rax],al
  40624c:	add    BYTE PTR [rax],dh
  40624e:	add    BYTE PTR [rax],al
  406250:	jno    0x40628b
  406252:	add    BYTE PTR [rax],al
  406254:	mov    WORD PTR [rax+0x0],?
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	sbb    BYTE PTR [rdi],ch
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],al
  407041:	add    BYTE PTR es:[rax],al
  407044:	in     al,dx
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	sbb    BYTE PTR [rdi],ch
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	add    BYTE PTR [rsi],ah
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rcx+rax*1],eax
  40706b:	add    BYTE PTR [rdx+rax*2],al
  40706e:	add    BYTE PTR [rax],al
  407070:	add    DWORD PTR [rdi+rax*1],ecx
  407073:	add    BYTE PTR [rdx+riz*2],cl
  407076:	or     BYTE PTR [rax],dh
  407078:	(bad)  
  407079:	(bad)  
  40707a:	(bad)  
  40707b:	jo     0x407082
  40707d:	push   rax
  40707e:	add    al,0xc0
  407080:	add    dl,al
  407082:	add    BYTE PTR [rax],al
  407084:	add    DWORD PTR [rcx+rax*1],eax
  407087:	add    BYTE PTR [rdx+rax*2],al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rbx],esp
  40708e:	(bad)  
  40708f:	add    BYTE PTR [rbx],ah
  407091:	js     0x4070e0
  407093:	add    BYTE PTR [rbx],bl
  407095:	push   0x113004c
  40709a:	popf   
  40709b:	add    BYTE PTR [rax+rsi*1],cl
  40709e:	or     esp,DWORD PTR [rax+0xa]
  4070a1:	jo     0x4070ac
  4070a3:	push   rax
  4070a4:	or     al,al
  4070a6:	(bad)  
  4070a7:	rol    BYTE PTR [rax+riz*8],1
  4070aa:	add    dh,al
  4070ac:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570b4
  4070b2:	add    DWORD PTR [rax],esi
  4070b4:	add    DWORD PTR [rcx+rax*1],eax
  4070b7:	add    BYTE PTR [rdx+rax*2],al
  4070ba:	add    BYTE PTR [rax],al
  4070bc:	add    DWORD PTR [rcx+rax*1],eax
  4070bf:	add    BYTE PTR [rdx+rax*2],al
  4070c2:	add    BYTE PTR [rax],al
  4070c4:	add    DWORD PTR [rsi],eax
  4070c6:	add    eax,DWORD PTR [rax]
  4070c8:	(bad)  
  4070c9:	rex.X add sil,BYTE PTR [rax]
  4070cc:	add    DWORD PTR [rax+0x0],esp
  4070cf:	add    BYTE PTR [rcx],al
  4070d1:	add    BYTE PTR [rax],al
  4070d3:	add    BYTE PTR [rcx],al
  4070d5:	add    BYTE PTR [rax],al
  4070d7:	add    BYTE PTR [rcx],al
  4070d9:	add    BYTE PTR [rax],al
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	or     al,BYTE PTR [rsi]
  4070df:	add    BYTE PTR [rdx],cl
  4070e1:	jb     0x4070e9
  4070e3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07549
  4070e9:	push   rax
  4070ea:	add    al,al
  4070ec:	add    DWORD PTR [rdx],ecx
  4070ee:	add    eax,0x6d20a05
  4070f3:	add    eax,DWORD PTR [rbx]
  4070f5:	xor    BYTE PTR [rdx],al
  4070f7:	(bad)  
  4070f8:	add    DWORD PTR [rax+0x0],edx
  4070fb:	add    BYTE PTR [rcx],al
  4070fd:	add    al,0x1
  4070ff:	add    BYTE PTR [rdx+rax*2],al
  407102:	add    BYTE PTR [rax],al
  407104:	add    DWORD PTR [rsi],eax
  407106:	add    eax,DWORD PTR [rax]
  407108:	(bad)  
  407109:	rex.X add sil,BYTE PTR [rax]
  40710c:	add    DWORD PTR [rax+0x0],esp
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	add    al,0x1
  407117:	add    BYTE PTR [rdx+riz*4],al
  40711a:	add    BYTE PTR [rax],al
  40711c:	add    DWORD PTR [rax],eax
  40711e:	add    BYTE PTR [rax],al
  407120:	add    DWORD PTR [rsi],edx
  407122:	or     DWORD PTR [rax],eax
  407124:	(bad)  
  407125:	mov    BYTE PTR [rsi],al
  407127:	add    BYTE PTR [rax],dl
  407129:	js     0x407130
  40712b:	add    BYTE PTR [rbx],cl
  40712d:	push   0xffffffffe2060004
  407132:	add    dh,BYTE PTR [rax]
  407134:	add    DWORD PTR [rax+0x0],esp
  407137:	add    BYTE PTR [rcx],al
  407139:	add    BYTE PTR [rax],al
  40713b:	add    BYTE PTR [rcx],al
  40713d:	add    BYTE PTR [rax],al
  40713f:	add    BYTE PTR [rcx],al
  407141:	add    BYTE PTR [rax],al
  407143:	add    BYTE PTR [rcx],al
  407145:	(bad)  
  407146:	add    eax,DWORD PTR [rax]
  407148:	(bad)  
  407149:	(bad)  
  40714b:	xor    BYTE PTR [rcx],al
  40714d:	(bad)  
  40714e:	add    BYTE PTR [rax],al
  407150:	add    DWORD PTR [rdi+rax*1],ecx
  407153:	add    BYTE PTR [rdx+riz*4],cl
  407156:	or     BYTE PTR [rax],dh
  407158:	(bad)  
  407159:	(bad)  
  40715a:	(bad)  
  40715b:	jo     0x407162
  40715d:	push   rax
  40715e:	add    al,0xc0
  407160:	add    dl,al
  407162:	add    BYTE PTR [rax],al
  407164:	add    DWORD PTR [rcx],edx
  407166:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e237d
  40716c:	or     dh,BYTE PTR [rax]
  40716e:	or     DWORD PTR [rax+0x8],esp
  407171:	jo     0x40717a
  407173:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220754a
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rcx+rax*1],eax
  40717f:	add    BYTE PTR [rdx+rax*2],al
  407182:	add    BYTE PTR [rax],al
  407184:	add    DWORD PTR [rdx],ecx
  407186:	(bad)  
  407187:	add    BYTE PTR [rdx],cl
  407189:	xor    al,BYTE PTR [rsi]
  40718b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075f1
  407191:	push   rax
  407192:	add    al,al
  407194:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245719c
  40719a:	add    DWORD PTR [rax],esi
  40719c:	add    DWORD PTR [rax],ecx
  40719e:	add    eax,0x4420800
  4071a3:	xor    BYTE PTR [rbx],al
  4071a5:	(bad)  
  4071a6:	add    dh,BYTE PTR [rax+0x1]
  4071a9:	push   rax
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rdi],eax
  4071ae:	add    al,0x0
  4071b0:	(bad)  
  4071b1:	xor    al,BYTE PTR [rbx]
  4071b3:	xor    BYTE PTR [rdx],al
  4071b5:	(bad)  
  4071b6:	add    DWORD PTR [rax+0x1],esi
  4071b9:	add    eax,0x32050002
  4071be:	add    DWORD PTR [rax],esi
  4071c0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571c8
  4071c6:	add    DWORD PTR [rax],esi
  4071c8:	add    DWORD PTR [rax],eax
  4071ca:	add    BYTE PTR [rax],al
  4071cc:	add    DWORD PTR [rax],eax
  4071ce:	add    BYTE PTR [rax],al
  4071d0:	add    DWORD PTR [rax],eax
  4071d2:	add    BYTE PTR [rax],al
  4071d4:	add    DWORD PTR [rdi],eax
  4071d6:	add    al,0x0
  4071d8:	(bad)  
  4071d9:	xor    al,BYTE PTR [rbx]
  4071db:	xor    BYTE PTR [rdx],al
  4071dd:	(bad)  
  4071de:	add    DWORD PTR [rax+0x1],esi
  4071e1:	(bad)  
  4071e2:	add    eax,DWORD PTR [rax]
  4071e4:	(bad)  
  4071e5:	rex.X add sil,BYTE PTR [rax]
  4071e8:	add    DWORD PTR [rax+0x0],esp
  4071eb:	add    BYTE PTR [rcx],al
  4071ed:	add    eax,0x32050002
  4071f2:	add    DWORD PTR [rax],esi
  4071f4:	add    DWORD PTR [rdi],eax
  4071f6:	add    al,0x0
  4071f8:	(bad)  
  4071f9:	xor    al,BYTE PTR [rbx]
  4071fb:	xor    BYTE PTR [rdx],al
  4071fd:	(bad)  
  4071fe:	add    DWORD PTR [rax+0x1],esi
  407201:	(bad)  
  407202:	add    eax,DWORD PTR [rax]
  407204:	(bad)  
  407205:	rex.X add sil,BYTE PTR [rax]
  407208:	add    DWORD PTR [rax+0x0],esp
  40720b:	add    BYTE PTR [rcx],al
  40720d:	(bad)  
  40720e:	add    eax,DWORD PTR [rax]
  407210:	(bad)  
  407211:	rex.X add sil,BYTE PTR [rax]
  407214:	add    DWORD PTR [rax+0x0],esp
  407217:	add    BYTE PTR [rcx],al
  407219:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a1f
  40721f:	xor    BYTE PTR [rbx],al
  407221:	(bad)  
  407222:	add    dh,BYTE PTR [rax+0x1]
  407225:	push   rax
  407226:	add    BYTE PTR [rax],al
  407228:	add    DWORD PTR [rax],eax
  40722a:	add    BYTE PTR [rax],al
  40722c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40900d:	(bad)  
  40900e:	add    BYTE PTR [rax],al
  409010:	cld    
  409011:	xchg   edx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	cld    
  409015:	nop
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	adc    al,0x9b
  409022:	add    BYTE PTR [rax],al
  409024:	xchg   esp,eax
  409025:	xchg   ebx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    esp,0x91
  40902d:	add    BYTE PTR [rax],al
  40902f:	add    BYTE PTR [rax],al
  409031:	add    BYTE PTR [rax],al
  409033:	add    BYTE PTR [rax+0x5400009b],bh
  409039:	xchg   esp,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	in     al,dx
  40903d:	xchg   edx,eax
	...
  409046:	add    BYTE PTR [rax],al
  409048:	enter  0x9b,0x0
  40904c:	test   BYTE PTR [rbp+0x0],dl
	...
  409062:	add    BYTE PTR [rax],al
  409064:	xchg   esp,eax
  409065:	xchg   ebp,eax
  409066:	add    BYTE PTR [rax],al
  409068:	add    BYTE PTR [rax],al
  40906a:	add    BYTE PTR [rax],al
  40906c:	test   al,0x95
  40906e:	add    BYTE PTR [rax],al
  409070:	add    BYTE PTR [rax],al
  409072:	add    BYTE PTR [rax],al
  409074:	mov    eax,0x95
  409079:	add    BYTE PTR [rax],al
  40907b:	add    ah,al
  40907d:	xchg   ebp,eax
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rax],al
  409082:	add    BYTE PTR [rax],al
  409084:	(bad)  
  409085:	xchg   ebp,eax
  409086:	add    BYTE PTR [rax],al
  409088:	add    BYTE PTR [rax],al
  40908a:	add    BYTE PTR [rax],al
  40908c:	call   0x409126
  409091:	add    BYTE PTR [rax],al
  409093:	add    ah,bh
  409095:	xchg   ebp,eax
  409096:	add    BYTE PTR [rax],al
  409098:	add    BYTE PTR [rax],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	or     BYTE PTR [rsi+0x0],dl
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	sbb    al,0x96
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	add    BYTE PTR [rax],al
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	xor    BYTE PTR [rsi+0x0],dl
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	cmp    al,0x96
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	add    BYTE PTR [rax],al
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	rex.WR xchg rsi,rax
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	fs xchg esi,eax
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	add    BYTE PTR [rax],al
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	jo     0x409064
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	add    BYTE PTR [rax],al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	adc    BYTE PTR [rsi+0x0],0x0
  4090db:	add    BYTE PTR [rsi+rdx*4+0x0],cl
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	pushf  
  4090e5:	xchg   esi,eax
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	test   al,0x96
	...
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	rcl    BYTE PTR [rsi+0x0],0x0
  409103:	add    al,bl
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	lock xchg esi,eax
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	add    al,0x97
  409116:	add    BYTE PTR [rax],al
  409118:	add    BYTE PTR [rax],al
  40911a:	add    BYTE PTR [rax],al
  40911c:	sbb    dl,BYTE PTR [rdi+0x0]
  409122:	add    BYTE PTR [rax],al
  409124:	xor    BYTE PTR [rdi+0x0],dl
  40912a:	add    BYTE PTR [rax],al
  40912c:	rex xchg edi,eax
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	push   rdx
  409135:	xchg   edi,eax
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	ins    BYTE PTR es:[rdi],dx
  40913d:	xchg   edi,eax
  40913e:	add    BYTE PTR [rax],al
  409140:	add    BYTE PTR [rax],al
  409142:	add    BYTE PTR [rax],al
  409144:	jl     0x4090dd
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	cwde   
  40914d:	xchg   edi,eax
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	mov    al,0x97
  409156:	add    BYTE PTR [rax],al
  409158:	add    BYTE PTR [rax],al
  40915a:	add    BYTE PTR [rax],al
  40915c:	retf   0x97
  40915f:	add    BYTE PTR [rax],al
  409161:	add    BYTE PTR [rax],al
  409163:	add    al,ah
  409165:	xchg   edi,eax
  409166:	add    BYTE PTR [rax],al
  409168:	add    BYTE PTR [rax],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	hlt    
  40916d:	xchg   edi,eax
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	(bad)  
  409175:	cwde   
  409176:	add    BYTE PTR [rax],al
  409178:	add    BYTE PTR [rax],al
  40917a:	add    BYTE PTR [rax],al
  40917c:	and    bl,BYTE PTR [rax+0x0]
  409182:	add    BYTE PTR [rax],al
  409184:	rex cwde 
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	cdqe   
  40918e:	add    BYTE PTR [rax],al
  409190:	add    BYTE PTR [rax],al
  409192:	add    BYTE PTR [rax],al
  409194:	pop    rsp
  409195:	cwde   
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	push   0xffffffffffffff98
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	xchg   BYTE PTR [rax+0x0],bl
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	cwde   
  4091ad:	cwde   
	...
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	test   al,0x98
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    BYTE PTR [rax],al
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	rcr    BYTE PTR [rax+0x0],0x0
  4091cb:	add    dh,cl
  4091cd:	cwde   
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	ficomp WORD PTR [rax+0x0]
  4091da:	add    BYTE PTR [rax],al
  4091dc:	(bad)  
  4091dd:	cwde   
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	clc    
  4091e5:	cwde   
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	add    BYTE PTR [rax],al
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	or     BYTE PTR [rcx+0x0],bl
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	sbb    bl,BYTE PTR [rcx+0x0]
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	cs cdq 
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    BYTE PTR [rax],al
  409202:	add    BYTE PTR [rax],al
  409204:	cmp    BYTE PTR [rcx+0x0],bl
  40920a:	add    BYTE PTR [rax],al
  40920c:	rex.RX cdq 
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	push   rax
  409215:	cdq    
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	pop    rdx
  40921d:	cdq    
  40921e:	add    BYTE PTR [rax],al
  409220:	add    BYTE PTR [rax],al
  409222:	add    BYTE PTR [rax],al
  409224:	cwd    
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	outs   dx,BYTE PTR ds:[rsi]
  40922d:	cdq    
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	js     0x4091cf
  409236:	add    BYTE PTR [rax],al
  409238:	add    BYTE PTR [rax],al
  40923a:	add    BYTE PTR [rax],al
  40923c:	(bad)  
  40923d:	cdq    
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	mov    bl,BYTE PTR [rcx+0x0]
  40924a:	add    BYTE PTR [rax],al
  40924c:	xchg   esp,eax
  40924d:	cdq    
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	pushf  
  409255:	cdq    
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rax],al
  40925a:	add    BYTE PTR [rax],al
  40925c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40925d:	cdq    
  40925e:	add    BYTE PTR [rax],al
  409260:	add    BYTE PTR [rax],al
  409262:	add    BYTE PTR [rax],al
  409264:	scas   al,BYTE PTR es:[rdi]
  409265:	cdq    
  409266:	add    BYTE PTR [rax],al
  409268:	add    BYTE PTR [rax],al
  40926a:	add    BYTE PTR [rax],al
  40926c:	mov    eax,0x99
  409271:	add    BYTE PTR [rax],al
  409273:	add    al,al
  409275:	cdq    
  409276:	add    BYTE PTR [rax],al
  409278:	add    BYTE PTR [rax],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	enter  0x99,0x0
  409280:	add    BYTE PTR [rax],al
  409282:	add    BYTE PTR [rax],al
  409284:	rcr    BYTE PTR [rcx+0x0],cl
  40928a:	add    BYTE PTR [rax],al
  40928c:	fcomp  QWORD PTR [rcx+0x0]
  409292:	add    BYTE PTR [rax],al
  409294:	out    0x99,al
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	lock cdq 
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	cli    
  4092a5:	cdq    
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    BYTE PTR [rax],al
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    al,0x9a
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	add    BYTE PTR [rax],al
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	or     al,0x9a
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	add    BYTE PTR [rax],al
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	(bad)  
  4092bd:	(bad)  
  4092be:	add    BYTE PTR [rax],al
  4092c0:	add    BYTE PTR [rax],al
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	and    BYTE PTR [rdx+0x0],bl
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	sub    bl,BYTE PTR [rdx+0x0]
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	xor    al,0x9a
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	ds (bad) 
	...
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	rex.WR (bad) 
	...
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	xchg   esp,eax
  4092fd:	xchg   ebp,eax
  4092fe:	add    BYTE PTR [rax],al
  409300:	add    BYTE PTR [rax],al
  409302:	add    BYTE PTR [rax],al
  409304:	test   al,0x95
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
  40930a:	add    BYTE PTR [rax],al
  40930c:	mov    eax,0x95
  409311:	add    BYTE PTR [rax],al
  409313:	add    ah,al
  409315:	xchg   ebp,eax
  409316:	add    BYTE PTR [rax],al
  409318:	add    BYTE PTR [rax],al
  40931a:	add    BYTE PTR [rax],al
  40931c:	(bad)  
  40931d:	xchg   ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	call   0x4093be
  409329:	add    BYTE PTR [rax],al
  40932b:	add    ah,bh
  40932d:	xchg   ebp,eax
  40932e:	add    BYTE PTR [rax],al
  409330:	add    BYTE PTR [rax],al
  409332:	add    BYTE PTR [rax],al
  409334:	or     BYTE PTR [rsi+0x0],dl
  40933a:	add    BYTE PTR [rax],al
  40933c:	sbb    al,0x96
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
  409342:	add    BYTE PTR [rax],al
  409344:	xor    BYTE PTR [rsi+0x0],dl
  40934a:	add    BYTE PTR [rax],al
  40934c:	cmp    al,0x96
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
  409352:	add    BYTE PTR [rax],al
  409354:	rex.WR xchg rsi,rax
  409356:	add    BYTE PTR [rax],al
  409358:	add    BYTE PTR [rax],al
  40935a:	add    BYTE PTR [rax],al
  40935c:	fs xchg esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	jo     0x4092fc
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	adc    BYTE PTR [rsi+0x0],0x0
  409373:	add    BYTE PTR [rsi+rdx*4+0x0],cl
  40937a:	add    BYTE PTR [rax],al
  40937c:	pushf  
  40937d:	xchg   esi,eax
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
  409382:	add    BYTE PTR [rax],al
  409384:	test   al,0x96
	...
  409392:	add    BYTE PTR [rax],al
  409394:	rcl    BYTE PTR [rsi+0x0],0x0
  40939b:	add    al,bl
  40939d:	xchg   esi,eax
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	lock xchg esi,eax
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax],al
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    al,0x97
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	sbb    dl,BYTE PTR [rdi+0x0]
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	xor    BYTE PTR [rdi+0x0],dl
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	rex xchg edi,eax
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	add    BYTE PTR [rax],al
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	push   rdx
  4093cd:	xchg   edi,eax
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	add    BYTE PTR [rax],al
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	ins    BYTE PTR es:[rdi],dx
  4093d5:	xchg   edi,eax
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	jl     0x409375
  4093de:	add    BYTE PTR [rax],al
  4093e0:	add    BYTE PTR [rax],al
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	cwde   
  4093e5:	xchg   edi,eax
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	mov    al,0x97
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	add    BYTE PTR [rax],al
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	retf   0x97
  4093f7:	add    BYTE PTR [rax],al
  4093f9:	add    BYTE PTR [rax],al
  4093fb:	add    al,ah
  4093fd:	xchg   edi,eax
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
  409402:	add    BYTE PTR [rax],al
  409404:	hlt    
  409405:	xchg   edi,eax
  409406:	add    BYTE PTR [rax],al
  409408:	add    BYTE PTR [rax],al
  40940a:	add    BYTE PTR [rax],al
  40940c:	(bad)  
  40940d:	cwde   
  40940e:	add    BYTE PTR [rax],al
  409410:	add    BYTE PTR [rax],al
  409412:	add    BYTE PTR [rax],al
  409414:	and    bl,BYTE PTR [rax+0x0]
  40941a:	add    BYTE PTR [rax],al
  40941c:	rex cwde 
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
  409422:	add    BYTE PTR [rax],al
  409424:	cdqe   
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	pop    rsp
  40942d:	cwde   
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	push   0xffffffffffffff98
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
  40943a:	add    BYTE PTR [rax],al
  40943c:	xchg   BYTE PTR [rax+0x0],bl
  409442:	add    BYTE PTR [rax],al
  409444:	cwde   
  409445:	cwde   
	...
  409452:	add    BYTE PTR [rax],al
  409454:	test   al,0x98
  409456:	add    BYTE PTR [rax],al
  409458:	add    BYTE PTR [rax],al
  40945a:	add    BYTE PTR [rax],al
  40945c:	rcr    BYTE PTR [rax+0x0],0x0
  409463:	add    dh,cl
  409465:	cwde   
  409466:	add    BYTE PTR [rax],al
  409468:	add    BYTE PTR [rax],al
  40946a:	add    BYTE PTR [rax],al
  40946c:	ficomp WORD PTR [rax+0x0]
  409472:	add    BYTE PTR [rax],al
  409474:	(bad)  
  409475:	cwde   
  409476:	add    BYTE PTR [rax],al
  409478:	add    BYTE PTR [rax],al
  40947a:	add    BYTE PTR [rax],al
  40947c:	clc    
  40947d:	cwde   
  40947e:	add    BYTE PTR [rax],al
  409480:	add    BYTE PTR [rax],al
  409482:	add    BYTE PTR [rax],al
  409484:	or     BYTE PTR [rcx+0x0],bl
  40948a:	add    BYTE PTR [rax],al
  40948c:	sbb    bl,BYTE PTR [rcx+0x0]
  409492:	add    BYTE PTR [rax],al
  409494:	cs cdq 
  409496:	add    BYTE PTR [rax],al
  409498:	add    BYTE PTR [rax],al
  40949a:	add    BYTE PTR [rax],al
  40949c:	cmp    BYTE PTR [rcx+0x0],bl
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	rex.RX cdq 
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	push   rax
  4094ad:	cdq    
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	pop    rdx
  4094b5:	cdq    
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	add    BYTE PTR [rax],al
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	cwd    
  4094be:	add    BYTE PTR [rax],al
  4094c0:	add    BYTE PTR [rax],al
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	outs   dx,BYTE PTR ds:[rsi]
  4094c5:	cdq    
  4094c6:	add    BYTE PTR [rax],al
  4094c8:	add    BYTE PTR [rax],al
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	js     0x409467
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	add    BYTE PTR [rax],al
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	(bad)  
  4094d5:	cdq    
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	mov    bl,BYTE PTR [rcx+0x0]
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	xchg   esp,eax
  4094e5:	cdq    
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	add    BYTE PTR [rax],al
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	pushf  
  4094ed:	cdq    
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	add    BYTE PTR [rax],al
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4094f5:	cdq    
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	add    BYTE PTR [rax],al
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	scas   al,BYTE PTR es:[rdi]
  4094fd:	cdq    
  4094fe:	add    BYTE PTR [rax],al
  409500:	add    BYTE PTR [rax],al
  409502:	add    BYTE PTR [rax],al
  409504:	mov    eax,0x99
  409509:	add    BYTE PTR [rax],al
  40950b:	add    al,al
  40950d:	cdq    
  40950e:	add    BYTE PTR [rax],al
  409510:	add    BYTE PTR [rax],al
  409512:	add    BYTE PTR [rax],al
  409514:	enter  0x99,0x0
  409518:	add    BYTE PTR [rax],al
  40951a:	add    BYTE PTR [rax],al
  40951c:	rcr    BYTE PTR [rcx+0x0],cl
  409522:	add    BYTE PTR [rax],al
  409524:	fcomp  QWORD PTR [rcx+0x0]
  40952a:	add    BYTE PTR [rax],al
  40952c:	out    0x99,al
  40952e:	add    BYTE PTR [rax],al
  409530:	add    BYTE PTR [rax],al
  409532:	add    BYTE PTR [rax],al
  409534:	lock cdq 
  409536:	add    BYTE PTR [rax],al
  409538:	add    BYTE PTR [rax],al
  40953a:	add    BYTE PTR [rax],al
  40953c:	cli    
  40953d:	cdq    
  40953e:	add    BYTE PTR [rax],al
  409540:	add    BYTE PTR [rax],al
  409542:	add    BYTE PTR [rax],al
  409544:	add    al,0x9a
  409546:	add    BYTE PTR [rax],al
  409548:	add    BYTE PTR [rax],al
  40954a:	add    BYTE PTR [rax],al
  40954c:	or     al,0x9a
  40954e:	add    BYTE PTR [rax],al
  409550:	add    BYTE PTR [rax],al
  409552:	add    BYTE PTR [rax],al
  409554:	(bad)  
  409555:	(bad)  
  409556:	add    BYTE PTR [rax],al
  409558:	add    BYTE PTR [rax],al
  40955a:	add    BYTE PTR [rax],al
  40955c:	and    BYTE PTR [rdx+0x0],bl
  409562:	add    BYTE PTR [rax],al
  409564:	sub    bl,BYTE PTR [rdx+0x0]
  40956a:	add    BYTE PTR [rax],al
  40956c:	xor    al,0x9a
  40956e:	add    BYTE PTR [rax],al
  409570:	add    BYTE PTR [rax],al
  409572:	add    BYTE PTR [rax],al
  409574:	ds (bad) 
	...
  409582:	add    BYTE PTR [rax],al
  409584:	rex.WR (bad) 
	...
  409592:	add    BYTE PTR [rax],al
  409594:	add    eax,DWORD PTR [rax]
  409596:	rex.RXB push r12
  409598:	rex.WB
  409599:	rex.RX
  40959a:	rex.R
  40959b:	gs (bad) 
  40959d:	movsxd esp,DWORD PTR [rbx+0x65]
  4095a0:	jae    0x409615
  4095a2:	rex.XB push r11
  4095a4:	push   rsi
  4095a5:	add    BYTE PTR [rax],al
  4095a7:	add    BYTE PTR [rax+rax*1],al
  4095aa:	rex.RXB push r12
  4095ac:	rex.WB
  4095ad:	rex.RX
  4095ae:	rex.R
  4095af:	movsxd edx,DWORD PTR gs:[rdi+rbp*2+0x44]
  4095b4:	rex.WRB push r11
  4095b6:	add    BYTE PTR [rax],al
  4095b8:	(bad)  
  4095b9:	add    BYTE PTR [rdi+0x54],al
  4095bc:	rex.WB
  4095bd:	rex.RX
  4095be:	rex.RX jb 0x409626
  4095c1:	add    BYTE PTR gs:[rax],al
  4095c4:	or     al,BYTE PTR [rax]
  4095c6:	rex.RXB push r12
  4095c8:	rex.WB
  4095c9:	rex.RX
  4095ca:	rex.RXB
  4095cb:	gs je  0x409612
  4095ce:	data16 outs dx,BYTE PTR gs:[rsi]
  4095d1:	add    BYTE PTR [rax],al
  4095d3:	add    BYTE PTR [rdi],cl
  4095d5:	add    BYTE PTR [rdi+0x54],al
  4095d8:	rex.WB
  4095d9:	rex.RX
  4095da:	rex.RXB
  4095db:	gs je  0x40962e
  4095de:	jb     0x40964f
  4095e0:	push   0x34
  4095e2:	rex.R
  4095e3:	data16 outs dx,BYTE PTR gs:[rsi]
  4095e6:	add    BYTE PTR [rax],al
  4095e8:	adc    eax,DWORD PTR [rax]
  4095ea:	rex.RXB push r12
  4095ec:	rex.WB
  4095ed:	rex.RX
  4095ee:	rex.WB ins DWORD PTR es:[rdi],dx
  4095f0:	(bad)  
  4095f1:	addr32 gs push rsp
  4095f4:	outs   dx,DWORD PTR ds:[rsi]
  4095f5:	push   rax
  4095f6:	rex.XB push r11
  4095f8:	add    BYTE PTR [rax],al
  4095fa:	add    BYTE PTR [rax],al
  4095fc:	sbb    al,0x0
  4095fe:	rex.RXB push r12
  409600:	rex.WB
  409601:	rex.RX
  409602:	rex.WRX
  409603:	gs ja  0x409606
  409606:	add    BYTE PTR [rax],al
  409608:	sbb    eax,0x49544700
  40960d:	rex.RX
  40960e:	rex.WRX
  40960f:	gs ja  0x409665
  409612:	imul   ebp,DWORD PTR [rbp+0x70],0x6154656c
  409619:	addr32 jae 0x40961c
  40961c:	(bad)  
  40961d:	add    BYTE PTR [rdi+0x54],al
  409620:	rex.WB
  409621:	rex.RX push rax
  409623:	rex.XB push r11
  409625:	push   rsp
  409626:	outs   dx,DWORD PTR ds:[rsi]
  409627:	rex.WB ins DWORD PTR es:[rdi],dx
  409629:	(bad)  
  40962a:	add    BYTE PTR gs:[eax],al
  40962e:	add    BYTE PTR [rax],al
  409630:	and    DWORD PTR [rax],eax
  409632:	rex.RXB push r12
  409634:	rex.WB
  409635:	rex.RX push rax
  409637:	jb     0x4096a2
  409639:	outs   dx,BYTE PTR ds:[rsi]
  40963a:	je     0x40963c
  40963c:	and    al,BYTE PTR [rax]
  40963e:	rex.RXB push r12
  409640:	rex.WB
  409641:	rex.RX push rax
  409643:	jb     0x4096ae
  409645:	outs   dx,BYTE PTR ds:[rsi]
  409646:	je     0x40968c
  409648:	data16 outs dx,BYTE PTR gs:[rsi]
  40964b:	add    BYTE PTR [rax+rax*1],ah
  40964e:	rex.RXB push r12
  409650:	rex.WB
  409651:	rex.RX push rax
  409653:	jb     0x4096c4
  409655:	push   0x34
  409657:	push   rsp
  409658:	outs   dx,DWORD PTR ds:[rsi]
  409659:	rex.WR (bad) 
  40965b:	je     0x4096a9
  40965d:	outs   dx,DWORD PTR ds:[rsi]
  40965e:	outs   dx,BYTE PTR ds:[rsi]
  40965f:	add    BYTE PTR [eax],al
  409662:	add    BYTE PTR [rax],al
  409664:	xor    BYTE PTR [rax],al
  409666:	push   rbx
  409667:	push   rsp
  409668:	pop    rdi
  409669:	rex.XB jb 0x4096d1
  40966c:	(bad)  
  40966d:	je     0x4096d4
  40966f:	add    BYTE PTR [rcx],dh
  409671:	add    BYTE PTR [rbx+0x54],dl
  409674:	pop    rdi
  409675:	rex.R
  409676:	gs jae 0x4096ed
  409679:	jb     0x4096ea
  40967b:	jns    0x40967d
  40967d:	add    BYTE PTR [rax],al
  40967f:	add    BYTE PTR [rbx],dh
  409681:	add    BYTE PTR [rbx+0x54],dl
  409684:	pop    rdi
  409685:	push   rbx
  409686:	gs je  0x4096d4
  409689:	gs jns 0x40968c
  40968c:	add    BYTE PTR ss:[rax+0x54],bl
  409690:	rex.WB
  409691:	rex.RX
  409692:	rex.RX
  409693:	rex.XB ins BYTE PTR es:[rdi],dx
  409695:	outs   dx,DWORD PTR ds:[rsi]
  409696:	jae    0x4096fd
  409698:	add    BYTE PTR [rax],al
  40969a:	add    BYTE PTR [rax],al
  40969c:	cmp    DWORD PTR [rax],eax
  40969e:	pop    rax
  40969f:	push   rsp
  4096a0:	rex.WB
  4096a1:	rex.RX
  4096a2:	rex.RX
  4096a3:	rex.WRXB jo 0x40970b
  4096a6:	outs   dx,BYTE PTR ds:[rsi]
  4096a7:	add    BYTE PTR [rbx+0x0],bl
  4096aa:	addr32 je 0x409700
  4096ad:	gs je  0x4096f3
  4096b0:	push   rbx
  4096b1:	push   rsi
  4096b2:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x48656d61
  4096bb:	outs   dx,DWORD PTR ds:[rsi]
  4096bc:	outs   dx,DWORD PTR ds:[rsi]
  4096bd:	imul   eax,DWORD PTR [rax],0x0
  4096c0:	fadd   DWORD PTR [rax]
  4096c2:	rex.R
  4096c3:	gs ins BYTE PTR es:[rdi],dx
  4096c5:	gs je  0x40972d
  4096c8:	rex.XB jb 0x409734
  4096cb:	je     0x409736
  4096cd:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096d0:	push   rbx
  4096d1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096d6:	outs   dx,BYTE PTR ds:[rsi]
  4096d7:	add    al,bh
  4096d9:	add    BYTE PTR [rbp+0x6e],al
  4096dc:	je     0x409743
  4096de:	jb     0x409723
  4096e0:	jb     0x40974b
  4096e2:	je     0x40974d
  4096e4:	movsxd esp,DWORD PTR [rcx+0x6c]
  4096e7:	push   rbx
  4096e8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4096ed:	outs   dx,BYTE PTR ds:[rsi]
  4096ee:	add    BYTE PTR [rax],al
  4096f0:	int    0x1
  4096f2:	rex.RXB
  4096f3:	gs je  0x409739
  4096f6:	jne    0x40976a
  4096f8:	jb     0x40975f
  4096fa:	outs   dx,BYTE PTR ds:[rsi]
  4096fb:	je     0x40974d
  4096fd:	jb     0x40976e
  4096ff:	movsxd esp,DWORD PTR [rbp+0x73]
  409702:	jae    0x409704
  409704:	(bad)  
  409705:	add    DWORD PTR [rdi+0x65],eax
  409708:	je     0x40974d
  40970a:	jne    0x40977e
  40970c:	jb     0x409773
  40970e:	outs   dx,BYTE PTR ds:[rsi]
  40970f:	je     0x409761
  409711:	jb     0x409782
  409713:	movsxd esp,DWORD PTR [rbp+0x73]
  409716:	jae    0x409761
  409718:	fs add dl,dl
  40971b:	add    DWORD PTR [rdi+0x65],eax
  40971e:	je     0x409763
  409720:	jne    0x409794
  409722:	jb     0x409789
  409724:	outs   dx,BYTE PTR ds:[rsi]
  409725:	je     0x40977b
  409727:	push   0x64616572
  40972c:	rex.WB
  40972d:	add    BYTE PTR fs:[rax],al
  409730:	adc    BYTE PTR [rdx],al
  409732:	rex.RXB
  409733:	gs je  0x409782
  409736:	(bad)  
  409737:	jae    0x4097ad
  409739:	rex.RB jb 0x4097ae
  40973c:	outs   dx,DWORD PTR ds:[rsi]
  40973d:	jb     0x40973f
  40973f:	add    BYTE PTR [rbx+0x2],dh
  409742:	rex.RXB
  409743:	gs je  0x409799
  409746:	je     0x4097a9
  409748:	jb     0x4097be
  40974a:	jne    0x4097bc
  40974c:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40974e:	outs   dx,WORD PTR ds:[rsi]
  409750:	add    BYTE PTR [r10+0x74654702],cl
  409757:	push   rbx
  409758:	jns    0x4097cd
  40975a:	je     0x4097c1
  40975c:	ins    DWORD PTR es:[rdi],dx
  40975d:	push   rsp
  40975e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  409765:	ins    BYTE PTR es:[rdi],dx
  409766:	gs push rsp
  409768:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40976f:	gs je  0x4097c6
  409772:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409779:	je     0x40977b
  40977b:	add    cl,bh
  40977d:	add    cl,BYTE PTR [rcx+0x6e]
  409780:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409788:	rex.XB jb 0x4097f4
  40978b:	je     0x4097f6
  40978d:	movsxd esp,DWORD PTR [rcx+0x6c]
  409790:	push   rbx
  409791:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409796:	outs   dx,BYTE PTR ds:[rsi]
  409797:	add    BYTE PTR [rbx+0x3],cl
  40979a:	rex.WR
  40979b:	gs (bad) 
  40979d:	jbe    0x409804
  40979f:	rex.XB jb 0x40980b
  4097a2:	je     0x40980d
  4097a4:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097a7:	push   rbx
  4097a8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4097ad:	outs   dx,BYTE PTR ds:[rsi]
  4097ae:	add    BYTE PTR [rax],al
  4097b0:	mov    ebx,0x65755103
  4097b5:	jb     0x409830
  4097b7:	push   rax
  4097b8:	gs jb  0x409821
  4097bb:	outs   dx,DWORD PTR ds:[rsi]
  4097bc:	jb     0x40982b
  4097be:	(bad)  
  4097bf:	outs   dx,BYTE PTR ds:[rsi]
  4097c0:	movsxd esp,DWORD PTR [rbp+0x43]
  4097c3:	outs   dx,DWORD PTR ds:[rsi]
  4097c4:	jne    0x409834
  4097c6:	je     0x40982d
  4097c8:	jb     0x4097ca
  4097ca:	add    DWORD PTR [rdx+rdx*2],eax
  4097cd:	je     0x40983b
  4097cf:	rex.B
  4097d0:	fs fs rex.RX jne 0x409843
  4097d5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4097d9:	outs   dx,BYTE PTR ds:[rsi]
  4097da:	push   rsp
  4097db:	(bad)  
  4097dc:	(bad)  
  4097dd:	ins    BYTE PTR es:[rdi],dx
  4097de:	add    BYTE PTR gs:[rdx],al
  4097e1:	add    al,0x52
  4097e3:	je     0x409851
  4097e5:	rex.XB (bad) 
  4097e7:	jo     0x40985d
  4097e9:	jne    0x40985d
  4097eb:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4097ee:	outs   dx,BYTE PTR ds:[rsi]
  4097ef:	je     0x409856
  4097f1:	js     0x409867
  4097f3:	add    BYTE PTR [rcx],cl
  4097f5:	add    al,0x52
  4097f7:	je     0x409865
  4097f9:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4097fb:	outs   dx,DWORD PTR ds:[rsi]
  4097fc:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409800:	jne    0x409870
  409802:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409806:	outs   dx,BYTE PTR ds:[rsi]
  409807:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409809:	je     0x40987d
  40980b:	jns    0x40980d
  40980d:	add    BYTE PTR [rax],dl
  40980f:	add    al,0x52
  409811:	je     0x40987f
  409813:	push   rsi
  409814:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40981b:	outs   dx,BYTE PTR ds:[rsi]
  40981c:	ja     0x409887
  40981e:	outs   dx,BYTE PTR ds:[rsi]
  40981f:	add    BYTE PTR fs:[rax],al
  409822:	lahf   
  409823:	add    al,0x53
  409825:	gs je  0x40987d
  409828:	outs   dx,BYTE PTR ds:[rsi]
  409829:	push   0x6c646e61
  40982e:	gs fs rex.RB js 0x409896
  409833:	gs jo  0x4098aa
  409836:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40983d:	gs jb  0x409840
  409840:	lods   al,BYTE PTR ds:[rsi]
  409841:	add    al,0x53
  409843:	ins    BYTE PTR es:[rdi],dx
  409844:	gs gs jo 0x409848
  409848:	mov    edx,0x72655404
  40984d:	ins    DWORD PTR es:[rdi],dx
  40984e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409855:	outs   dx,DWORD PTR ds:[rsi]
  409856:	movsxd esp,DWORD PTR [rbp+0x73]
  409859:	jae    0x40985b
  40985b:	add    cl,al
  40985d:	add    al,0x54
  40985f:	ins    BYTE PTR es:[rdi],dx
  409860:	jae    0x4098a9
  409862:	gs je  0x4098bb
  409865:	(bad)  
  409866:	ins    BYTE PTR es:[rdi],dx
  409867:	jne    0x4098ce
  409869:	add    dh,cl
  40986b:	add    al,0x55
  40986d:	outs   dx,BYTE PTR ds:[rsi]
  40986e:	push   0x6c646e61
  409873:	gs fs rex.RB js 0x4098db
  409878:	gs jo  0x4098ef
  40987b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409882:	gs jb  0x409885
  409885:	add    ah,ch
  409887:	add    al,0x56
  409889:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409890:	jb     0x409901
  409892:	je     0x4098f9
  409894:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409898:	out    dx,al
  409899:	add    al,0x56
  40989b:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098a2:	jne    0x409909
  4098a4:	jb     0x40991f
  4098a6:	add    BYTE PTR [rax],al
  4098a8:	(bad)  
  4098a9:	add    BYTE PTR [rdi+0x5f],bl
  4098ac:	rex.XB pop r15
  4098ae:	jae    0x409920
  4098b0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4098b4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4098bb:	ins    BYTE PTR es:[rdi],dx
  4098bc:	gs jb  0x4098bf
  4098bf:	add    BYTE PTR [rsi+0x0],cl
  4098c2:	pop    rdi
  4098c3:	pop    rdi
  4098c4:	fs ins BYTE PTR es:[rdi],dx
  4098c6:	ins    BYTE PTR es:[rdi],dx
  4098c7:	outs   dx,DWORD PTR ds:[rsi]
  4098c8:	outs   dx,BYTE PTR ds:[rsi]
  4098c9:	gs js  0x409935
  4098cc:	je     0x4098ce
  4098ce:	push   rcx
  4098cf:	add    BYTE PTR [rdi+0x5f],bl
  4098d2:	addr32 gs je 0x409943
  4098d6:	(bad)  
  4098d7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4098de:	push   rdx
  4098df:	add    BYTE PTR [rdi+0x5f],bl
  4098e2:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4098e9:	add    BYTE PTR [rbx+0x0],dl
  4098ec:	pop    rdi
  4098ed:	pop    rdi
  4098ee:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4098f5:	movsxd eax,DWORD PTR [rax]
  4098f7:	add    BYTE PTR [rdx+0x0],bl
  4098fa:	pop    rdi
  4098fb:	pop    rdi
  4098fc:	ins    BYTE PTR es:[rdi],dx
  4098fd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409900:	jbe    0x409961
  409902:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409909:	add    BYTE PTR [rdi+0x5f],bl
  40990c:	jae    0x409973
  40990e:	je     0x40996f
  409910:	(bad)  
  409911:	jo     0x409983
  409913:	pop    rdi
  409914:	je     0x40998f
  409916:	jo     0x40997d
  409918:	add    BYTE PTR [rax],al
  40991a:	(bad)  
  40991b:	add    BYTE PTR [rdi+0x5f],bl
  40991e:	jae    0x409985
  409920:	je     0x409997
  409922:	jae    0x409989
  409924:	jb     0x409993
  409926:	(bad)  
  409927:	je     0x409991
  409929:	gs jb  0x40999e
  40992c:	add    BYTE PTR [rax],al
  40992e:	jno    0x409930
  409930:	pop    rdi
  409931:	(bad)  
  409932:	movsxd ebp,DWORD PTR [rbp+0x64]
  409935:	ins    BYTE PTR es:[rdi],dx
  409936:	outs   dx,BYTE PTR ds:[rsi]
  409937:	add    BYTE PTR [rax+0x0],bh
  40993a:	pop    rdi
  40993b:	(bad)  
  40993c:	ins    DWORD PTR es:[rdi],dx
  40993d:	jae    0x4099a6
  40993f:	pop    rdi
  409940:	gs js  0x4099ac
  409943:	je     0x409945
  409945:	add    BYTE PTR [rdx+0x65635f00],cl
  40994b:	js     0x4099b6
  40994d:	je     0x40994f
  40994f:	add    dl,bl
  409951:	add    BYTE PTR [rdi+0x66],bl
  409954:	ins    DWORD PTR es:[rdi],dx
  409955:	outs   dx,DWORD PTR ds:[rsi]
  409956:	fs add BYTE PTR gs:[rax],al
  40995a:	sbb    al,BYTE PTR [rcx]
  40995c:	pop    rdi
  40995d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409964:	ins    DWORD PTR es:[rdi],dx
  409965:	add    BYTE PTR [rax+0x6f6c5f01],al
  40996b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40996e:	and    eax,0x6e6f5f02
  409973:	gs js  0x4099df
  409976:	je     0x409978
  409978:	(bad)
  40997c:	outs   dx,BYTE PTR ds:[rsi]
  40997d:	ins    BYTE PTR es:[rdi],dx
  40997e:	outs   dx,DWORD PTR ds:[rsi]
  40997f:	movsxd ebp,DWORD PTR [rbx+0x0]
  409982:	jg     0x409987
  409984:	(bad)  
  409985:	(bad)  
  409986:	outs   dx,DWORD PTR ds:[rsi]
  409987:	jb     0x4099fd
  409989:	add    BYTE PTR [rax+0x6c616303],dl
  40998f:	ins    BYTE PTR es:[rdi],dx
  409990:	outs   dx,DWORD PTR ds:[rsi]
  409991:	movsxd eax,DWORD PTR [rax]
  409993:	add    BYTE PTR [rbp+0x69786503],bl
  409999:	je     0x40999b
  40999b:	add    BYTE PTR [rcx+0x6c636603],ah
  4099a1:	outs   dx,DWORD PTR ds:[rsi]
  4099a2:	jae    0x409a09
  4099a4:	add    BYTE PTR [rax],al
  4099a6:	scas   al,BYTE PTR es:[rdi]
  4099a7:	add    esp,DWORD PTR [rsi+0x6f]
  4099aa:	jo     0x409a11
  4099ac:	outs   dx,BYTE PTR ds:[rsi]
  4099ad:	add    BYTE PTR [rax+0x72706603],dh
  4099b3:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  4099ba:	data16 jo 0x409a32
  4099bd:	je     0x409a22
  4099bf:	add    BYTE PTR [rdi+0x65726603],dh
  4099c5:	add    BYTE PTR gs:[rax],al
  4099c8:	ret    0x6603
  4099cb:	ja     0x409a3f
  4099cd:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  4099d5:	(bad)  
  4099d6:	ins    BYTE PTR es:[rdi],dx
  4099d7:	ins    BYTE PTR es:[rdi],dx
  4099d8:	outs   dx,DWORD PTR ds:[rsi]
  4099d9:	movsxd eax,DWORD PTR [rax]
  4099db:	add    al,bh
  4099dd:	add    ebp,DWORD PTR [rbp+0x65]
  4099e0:	ins    DWORD PTR es:[rdi],dx
  4099e1:	movsxd esi,DWORD PTR [rax+0x79]
  4099e4:	add    BYTE PTR [rax],al
  4099e6:	inc    BYTE PTR [rbx]
  4099e8:	jo     0x409a4f
  4099ea:	jb     0x409a5e
  4099ec:	outs   dx,DWORD PTR ds:[rsi]
  4099ed:	jb     0x4099ef
  4099ef:	add    BYTE PTR [rcx],al
  4099f1:	add    al,0x70
  4099f3:	jb     0x409a5e
  4099f5:	outs   dx,BYTE PTR ds:[rsi]
  4099f6:	je     0x409a5e
  4099f8:	add    BYTE PTR [rax],al
  4099fa:	add    al,0x4
  4099fc:	jo     0x409a73
  4099fe:	je     0x409a63
  409a00:	push   0x5007261
  409a05:	add    al,0x70
  409a07:	jne    0x409a7d
  409a09:	jae    0x409a0b
  409a0b:	add    BYTE PTR [rsi],dl
  409a0d:	add    al,0x73
  409a0f:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409a16:	sbb    eax,DWORD PTR [rbx+rsi*2]
  409a19:	jo     0x409a8d
  409a1b:	imul   ebp,DWORD PTR [rsi+0x74],0x42b0066
  409a22:	jae    0x409a98
  409a24:	jb     0x409a92
  409a26:	outs   dx,BYTE PTR gs:[rsi]
  409a28:	add    BYTE PTR [rax],al
  409a2a:	cs add al,0x73
  409a2d:	je     0x409aa1
  409a2f:	outs   dx,BYTE PTR ds:[rsi]
  409a30:	movsxd ebp,DWORD PTR [rbp+0x70]
  409a33:	add    BYTE PTR [rdi],ch
  409a35:	add    al,0x73
  409a37:	je     0x409aab
  409a39:	outs   dx,BYTE PTR ds:[rsi]
  409a3a:	movsxd esi,DWORD PTR [rax+0x79]
  409a3d:	add    BYTE PTR [rsi+0x4],cl
  409a40:	jbe    0x409aa8
  409a42:	jo     0x409ab6
  409a44:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409a4b:	add    BYTE PTR [rip+0x46495400],bh        # 0x4689ee51
  409a51:	rex.RX
  409a52:	rex.RXB
  409a53:	gs je  0x409a9c
  409a56:	imul   esp,DWORD PTR [rbp+0x6c],0x64
  409a5d:	nop
  409a5e:	add    BYTE PTR [rax],al
  409a60:	add    BYTE PTR [rax-0x70000000],dl
  409a66:	add    BYTE PTR [rax],al
  409a68:	add    BYTE PTR [rax-0x70000000],dl
  409a6e:	add    BYTE PTR [rax],al
  409a70:	add    BYTE PTR [rax-0x70000000],dl
  409a76:	add    BYTE PTR [rax],al
  409a78:	add    BYTE PTR [rax-0x70000000],dl
  409a7e:	add    BYTE PTR [rax],al
  409a80:	add    BYTE PTR [rax-0x70000000],dl
  409a86:	add    BYTE PTR [rax],al
  409a88:	add    BYTE PTR [rax-0x70000000],dl
  409a8e:	add    BYTE PTR [rax],al
  409a90:	add    BYTE PTR [rax-0x70000000],dl
  409a96:	add    BYTE PTR [rax],al
  409a98:	add    BYTE PTR [rax-0x70000000],dl
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	add    BYTE PTR [rax+0x696c0000],dl
  409aa6:	(bad)  
  409aa7:	outs   dx,DWORD PTR gs:[esi]
  409aaa:	je     0x409b15
  409aac:	data16 sub ax,0x2e32
  409ab1:	fs ins BYTE PTR es:[rdi],dx
  409ab3:	ins    BYTE PTR es:[rdi],dx
  409ab4:	add    BYTE PTR [rax],al
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	adc    al,0x90
  409aba:	add    BYTE PTR [rax],al
  409abc:	adc    al,0x90
  409abe:	add    BYTE PTR [rax],al
  409ac0:	adc    al,0x90
  409ac2:	add    BYTE PTR [rax],al
  409ac4:	adc    al,0x90
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	adc    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	adc    al,0x90
  409ace:	add    BYTE PTR [rax],al
  409ad0:	adc    al,0x90
  409ad2:	add    BYTE PTR [rax],al
  409ad4:	adc    al,0x90
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	adc    al,0x90
  409ada:	add    BYTE PTR [rax],al
  409adc:	adc    al,0x90
  409ade:	add    BYTE PTR [rax],al
  409ae0:	adc    al,0x90
  409ae2:	add    BYTE PTR [rax],al
  409ae4:	adc    al,0x90
  409ae6:	add    BYTE PTR [rax],al
  409ae8:	adc    al,0x90
  409aea:	add    BYTE PTR [rax],al
  409aec:	adc    al,0x90
  409aee:	add    BYTE PTR [rax],al
  409af0:	adc    al,0x90
  409af2:	add    BYTE PTR [rax],al
  409af4:	adc    al,0x90
  409af6:	add    BYTE PTR [rax],al
  409af8:	adc    al,0x90
  409afa:	add    BYTE PTR [rax],al
  409afc:	adc    al,0x90
  409afe:	add    BYTE PTR [rax],al
  409b00:	adc    al,0x90
  409b02:	add    BYTE PTR [rax],al
  409b04:	adc    al,0x90
  409b06:	add    BYTE PTR [rax],al
  409b08:	adc    al,0x90
  409b0a:	add    BYTE PTR [rax],al
  409b0c:	adc    al,0x90
  409b0e:	add    BYTE PTR [rax],al
  409b10:	adc    al,0x90
  409b12:	add    BYTE PTR [rax],al
  409b14:	rex.WXB
  409b15:	rex.RB push r10
  409b17:	rex.WRX
  409b18:	rex.RB
  409b19:	xor    r14,QWORD PTR [rdx]
  409b1c:	cs fs ins BYTE PTR es:[rdi],dx
  409b1f:	ins    BYTE PTR es:[rdi],dx
  409b20:	add    BYTE PTR [rax],al
  409b22:	add    BYTE PTR [rax],al
  409b24:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b2a:	add    BYTE PTR [rax],al
  409b2c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b32:	add    BYTE PTR [rax],al
  409b34:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b3a:	add    BYTE PTR [rax],al
  409b3c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b42:	add    BYTE PTR [rax],al
  409b44:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b4a:	add    BYTE PTR [rax],al
  409b4c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b52:	add    BYTE PTR [rax],al
  409b54:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b5a:	add    BYTE PTR [rax],al
  409b5c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b62:	add    BYTE PTR [rax],al
  409b64:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b6a:	add    BYTE PTR [rax],al
  409b6c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b72:	add    BYTE PTR [rax],al
  409b74:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b82:	add    BYTE PTR [rax],al
  409b84:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b92:	add    BYTE PTR [rax],al
  409b94:	sub    BYTE PTR [rax-0x6fd80000],dl
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ba2:	add    BYTE PTR [rax],al
  409ba4:	sub    BYTE PTR [rax-0x6fd80000],dl
  409baa:	add    BYTE PTR [rax],al
  409bac:	sub    BYTE PTR [rax-0x6fd80000],dl
  409bb2:	add    BYTE PTR [rax],al
  409bb4:	sub    BYTE PTR [rax+0x736d0000],dl
  409bba:	jbe    0x409c1f
  409bbc:	jb     0x409c32
  409bbe:	cs fs ins BYTE PTR es:[rdi],dx
  409bc1:	ins    BYTE PTR es:[rdi],dx
  409bc2:	add    BYTE PTR [rax],al
  409bc4:	cmp    al,0x90
  409bc6:	add    BYTE PTR [rax],al
  409bc8:	ins    BYTE PTR es:[rdi],dx
  409bc9:	imul   esp,DWORD PTR [rdx+0x74],0x2d666669
  409bd0:	xor    eax,0x6c6c642e
  409bd5:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x1a],al
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x1c],dh
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x1c],al
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rdx+rcx*4+0x40],bl
  40b036:	add    BYTE PTR [rax],al
  40b038:	movabs al,ds:0x40
	...
