
c8a0eebccc746daef3270ddd170d030ddee6f9c6ac09dc6a41b4d5fb6b1aa4d6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x31155]        # 0x432170
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x31156]        # 0x432180
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x31159]        # 0x432190
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x3111c]        # 0x432160
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x30f5f]        # 0x431fb0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x310f1]        # 0x432150
  40105f:	mov    DWORD PTR [rip+0x35fa3],edx        # 0x437008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x422668
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x41beb0
  401081:	mov    rdx,QWORD PTR [rip+0x30fc8]        # 0x432050
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x30fae]        # 0x432040
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x31024]        # 0x4320c0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x30f4b]        # 0x431ff0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x41ba90
  4010af:	mov    rax,QWORD PTR [rip+0x30eaa]        # 0x431f60
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x422668
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1ac69]        # 0x41bd90
  401127:	call   0x41bd80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x30f85]        # 0x4320f0
  40116b:	lea    r8,[rip+0x35ea6]        # 0x437018
  401172:	lea    rdx,[rip+0x35ea7]        # 0x437020
  401179:	lea    rcx,[rip+0x35ea8]        # 0x437028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x35e78],eax        # 0x437000
  401188:	lea    rax,[rip+0x35e71]        # 0x437000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x30f15]        # 0x4320b0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x422680
  4011a3:	mov    DWORD PTR [rip+0x35e67],eax        # 0x437010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x30f8a]        # 0x432150
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x30e2b]        # 0x432020
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x9b1aa]        # 0x49c3ac
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x30e07]        # 0x432030
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x35dba],0x1        # 0x437004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x30d3c]        # 0x431fa0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x41c0a0
  40127d:	lea    rcx,[rip+0x1b3bc]        # 0x41c640
  401284:	call   QWORD PTR [rip+0x9b112]        # 0x49c39c
  40128a:	mov    rdx,QWORD PTR [rip+0x30d7f]        # 0x432010
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x41c550
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4226b0
  4012a5:	call   0x41be90
  4012aa:	mov    rax,QWORD PTR [rip+0x30cff]        # 0x431fb0
  4012b1:	mov    QWORD PTR [rip+0x69cc0],rax        # 0x46af78
  4012b8:	mov    rax,QWORD PTR [rip+0x30d21]        # 0x431fe0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x69c59],rax        # 0x46af70
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x23cca],eax        # 0x425000
  401336:	mov    r12d,DWORD PTR [rip+0x35ceb]        # 0x437028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4224e8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x35cc2]        # 0x437020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x422468
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4224e8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4224d8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x35c6a],rbp        # 0x437020
  4013b6:	call   0x41ba60
  4013bb:	mov    rax,QWORD PTR [rip+0x30bfe]        # 0x431fc0
  4013c2:	mov    rdx,QWORD PTR [rip+0x35c4f]        # 0x437018
  4013c9:	mov    ecx,DWORD PTR [rip+0x35c59]        # 0x437028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x35c3c]        # 0x437018
  4013dc:	mov    rdx,QWORD PTR [rip+0x35c3d]        # 0x437020
  4013e3:	call   0x422930
  4013e8:	mov    ecx,DWORD PTR [rip+0x35c1a]        # 0x437008
  4013ee:	mov    DWORD PTR [rip+0x35c18],eax        # 0x43700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x35c02]        # 0x437004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x422650
  40140b:	mov    eax,DWORD PTR [rip+0x35bfb]        # 0x43700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x30bf9]        # 0x432030
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x422658
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x30c1d]        # 0x432080
  401463:	mov    rcx,QWORD PTR [rip+0x30c06]        # 0x432070
  40146a:	call   0x4225f0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x9ae83]        # 0x49c31c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x30bf9]        # 0x4320a0
  4014a7:	mov    rcx,QWORD PTR [rip+0x30be2]        # 0x432090
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4225f0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x422578
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x30c75]        # 0x432150
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x41baa0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x30c45]        # 0x432150
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x41baa0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	mov    rcx,QWORD PTR [rip+0x35b62]        # 0x4370a0
  40153e:	test   rcx,rcx
  401541:	je     0x401575
  401543:	cmp    QWORD PTR [rip+0x35b5d],0x0        # 0x4370a8
  40154b:	je     0x401575
  40154d:	mov    rdi,QWORD PTR [rip+0x30bec]        # 0x432140
  401554:	mov    rbx,r8
  401557:	mov    rsi,rdx
  40155a:	call   QWORD PTR [rdi]
  40155c:	mov    QWORD PTR [rsi],rax
  40155f:	mov    rcx,QWORD PTR [rip+0x35b42]        # 0x4370a8
  401566:	call   QWORD PTR [rdi]
  401568:	mov    QWORD PTR [rbx],rax
  40156b:	xor    eax,eax
  40156d:	add    rsp,0x20
  401571:	pop    rbx
  401572:	pop    rsi
  401573:	pop    rdi
  401574:	ret    
  401575:	mov    eax,0xffffffff
  40157a:	jmp    0x40156d
  40157c:	nop    DWORD PTR [rax+0x0]
  401580:	push   rsi
  401581:	push   rbx
  401582:	sub    rsp,0xa8
  401589:	mov    rbx,QWORD PTR [rip+0x9ae94]        # 0x49c424
  401590:	mov    rsi,rcx
  401593:	call   rbx
  401595:	lea    rdx,[rax+0x60]
  401599:	mov    rcx,rsi
  40159c:	call   0x422538
  4015a1:	call   rbx
  4015a3:	lea    rcx,[rsp+0x20]
  4015a8:	mov    r8,rax
  4015ab:	mov    edx,0x80
  4015b0:	call   0x422558
  4015b5:	test   rax,rax
  4015b8:	je     0x4015e0
  4015ba:	movzx  eax,BYTE PTR [rsp+0x20]
  4015bf:	cmp    al,0xa
  4015c1:	je     0x4015e0
  4015c3:	cmp    al,0xd
  4015c5:	je     0x4015e0
  4015c7:	and    eax,0xffffffdf
  4015ca:	cmp    al,0x59
  4015cc:	sete   al
  4015cf:	movzx  eax,al
  4015d2:	add    rsp,0xa8
  4015d9:	pop    rbx
  4015da:	pop    rsi
  4015db:	ret    
  4015dc:	nop    DWORD PTR [rax+0x0]
  4015e0:	xor    eax,eax
  4015e2:	add    rsp,0xa8
  4015e9:	pop    rbx
  4015ea:	pop    rsi
  4015eb:	ret    
  4015ec:	nop    DWORD PTR [rax+0x0]
  4015f0:	sub    rsp,0x258
  4015f7:	imul   edx,edx,0x3e8
  4015fd:	movsxd rax,ecx
  401600:	mov    DWORD PTR [rsp+0x40],0x1
  401608:	mov    QWORD PTR [rsp+0x48],rax
  40160d:	mov    QWORD PTR [rsp+0x30],0x0
  401616:	mov    eax,0x1
  40161b:	cmp    edx,0xf423f
  401621:	mov    DWORD PTR [rsp+0x38],edx
  401625:	jle    0x40164e
  401627:	nop    WORD PTR [rax+rax*1+0x0]
  401630:	sub    edx,0xf4240
  401636:	mov    r8,rax
  401639:	add    rax,0x1
  40163d:	cmp    edx,0xf423f
  401643:	jg     0x401630
  401645:	mov    DWORD PTR [rsp+0x38],edx
  401649:	mov    QWORD PTR [rsp+0x30],r8
  40164e:	lea    rax,[rsp+0x30]
  401653:	lea    rdx,[rsp+0x40]
  401658:	add    ecx,0x1
  40165b:	xor    r9d,r9d
  40165e:	xor    r8d,r8d
  401661:	mov    QWORD PTR [rsp+0x20],rax
  401666:	call   0x418f90
  40166b:	add    rsp,0x258
  401672:	ret    
  401673:	nop    DWORD PTR [rax]
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	xor    r9d,r9d
  401683:	jmp    0x4187d0
  401688:	nop    DWORD PTR [rax+rax*1+0x0]
  401690:	xor    r9d,r9d
  401693:	jmp    0x419c80
  401698:	nop    DWORD PTR [rax+rax*1+0x0]
  4016a0:	sub    rsp,0x38
  4016a4:	mov    QWORD PTR [rsp+0x50],r8
  4016a9:	lea    r8,[rsp+0x50]
  4016ae:	mov    QWORD PTR [rsp+0x58],r9
  4016b3:	mov    QWORD PTR [rsp+0x28],r8
  4016b8:	call   0x41d9a0
  4016bd:	add    rsp,0x38
  4016c1:	ret    
  4016c2:	nop    DWORD PTR [rax+0x0]
  4016c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016d0:	push   rsi
  4016d1:	push   rbx
  4016d2:	sub    rsp,0x28
  4016d6:	mov    ebx,ecx
  4016d8:	mov    rsi,rdx
  4016db:	call   QWORD PTR [rip+0x9ad43]        # 0x49c424
  4016e1:	lea    rdx,[rip+0x27918]        # 0x429000
  4016e8:	lea    rcx,[rax+0x60]
  4016ec:	mov    r9,rsi
  4016ef:	mov    r8d,ebx
  4016f2:	add    rsp,0x28
  4016f6:	pop    rbx
  4016f7:	pop    rsi
  4016f8:	jmp    0x4016a0
  4016fa:	nop    WORD PTR [rax+rax*1+0x0]
  401700:	push   rbp
  401701:	push   r15
  401703:	push   r14
  401705:	push   r13
  401707:	push   r12
  401709:	push   rdi
  40170a:	push   rsi
  40170b:	push   rbx
  40170c:	sub    rsp,0x48
  401710:	lea    rbp,[rsp+0x80]
  401718:	mov    r9d,DWORD PTR [rip+0x69869]        # 0x46af88
  40171f:	mov    rbx,rcx
  401722:	test   r9d,r9d
  401725:	je     0x4018b0
  40172b:	mov    edx,DWORD PTR [rip+0x238ef]        # 0x425020
  401731:	lea    rcx,[rbp-0x48]
  401735:	or     edx,0x4
  401738:	call   0x408010
  40173d:	mov    edx,DWORD PTR [rip+0x69865]        # 0x46afa8
  401743:	test   edx,edx
  401745:	jne    0x401a70
  40174b:	lea    r13,[rbp-0x50]
  40174f:	mov    rdx,QWORD PTR [rip+0x35ada]        # 0x437230
  401756:	mov    rcx,QWORD PTR [rbp-0x48]
  40175a:	mov    r8,r13
  40175d:	call   0x407ec0
  401762:	test   eax,eax
  401764:	js     0x401ae9
  40176a:	mov    r8d,DWORD PTR [rip+0x35acb]        # 0x43723c
  401771:	test   r8d,r8d
  401774:	jne    0x4017a6
  401776:	mov    ecx,DWORD PTR [rip+0x35abc]        # 0x437238
  40177c:	test   ecx,ecx
  40177e:	jne    0x4017a6
  401780:	test   rbx,rbx
  401783:	je     0x4017a6
  401785:	mov    rcx,rbx
  401788:	call   0x422468
  40178d:	mov    edx,0x3a
  401792:	mov    rcx,rbx
  401795:	mov    rsi,rax
  401798:	call   0x422490
  40179d:	test   rax,rax
  4017a0:	je     0x401aa2
  4017a6:	mov    rdi,QWORD PTR [rip+0x30963]        # 0x432110
  4017ad:	mov    rax,QWORD PTR [rdi+0x78]
  4017b1:	test   BYTE PTR [rax+0x898],0xf
  4017b8:	mov    rdx,rax
  4017bb:	jne    0x4019d0
  4017c1:	test   BYTE PTR [rdx+0x1258],0xf
  4017c8:	jne    0x401943
  4017ce:	mov    r8,QWORD PTR [rip+0x35a3b]        # 0x437210
  4017d5:	mov    rcx,QWORD PTR [rbp-0x48]
  4017d9:	mov    edx,0x2
  4017de:	call   0x408140
  4017e3:	mov    r8,QWORD PTR [rip+0x35a36]        # 0x437220
  4017ea:	test   r8,r8
  4017ed:	je     0x4017fd
  4017ef:	mov    rcx,QWORD PTR [rbp-0x48]
  4017f3:	mov    edx,0x3
  4017f8:	call   0x408140
  4017fd:	mov    r8,QWORD PTR [rip+0x35a14]        # 0x437218
  401804:	test   r8,r8
  401807:	je     0x401817
  401809:	mov    rcx,QWORD PTR [rbp-0x48]
  40180d:	mov    edx,0x4
  401812:	call   0x408140
  401817:	mov    r8,QWORD PTR [rip+0x359ea]        # 0x437208
  40181e:	mov    rcx,QWORD PTR [rbp-0x48]
  401822:	mov    edx,0x1
  401827:	call   0x408140
  40182c:	mov    rcx,QWORD PTR [rip+0x359d5]        # 0x437208
  401833:	lea    rdx,[rip+0xdd6]        # 0x402610
  40183a:	call   0x408210
  40183f:	mov    rcx,QWORD PTR [rip+0x359c2]        # 0x437208
  401846:	lea    rdx,[rip+0x5d3]        # 0x401e20
  40184d:	call   0x408208
  401852:	mov    edx,DWORD PTR [rip+0x69748]        # 0x46afa0
  401858:	test   edx,edx
  40185a:	jne    0x401930
  401860:	movsxd rdx,DWORD PTR [rip+0x69745]        # 0x46afac
  401867:	test   edx,edx
  401869:	jle    0x401879
  40186b:	mov    eax,DWORD PTR [rip+0x359cb]        # 0x43723c
  401871:	test   eax,eax
  401873:	je     0x4019f0
  401879:	mov    rax,QWORD PTR [rdi+0x78]
  40187d:	test   BYTE PTR [rax+0x12c0],0xf
  401884:	mov    rdx,rax
  401887:	jne    0x401915
  40188d:	test   BYTE PTR [rdx+0x11f0],0xf
  401894:	jne    0x4018c4
  401896:	mov    rax,QWORD PTR [rbp-0x48]
  40189a:	lea    rsp,[rbp-0x38]
  40189e:	pop    rbx
  40189f:	pop    rsi
  4018a0:	pop    rdi
  4018a1:	pop    r12
  4018a3:	pop    r13
  4018a5:	pop    r14
  4018a7:	pop    r15
  4018a9:	pop    rbp
  4018aa:	ret    
  4018ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4018b0:	mov    edx,DWORD PTR [rip+0x2376a]        # 0x425020
  4018b6:	lea    rcx,[rbp-0x48]
  4018ba:	call   0x408010
  4018bf:	jmp    0x40174b
  4018c4:	mov    rdx,QWORD PTR [rdx+0x11f8]
  4018cb:	mov    rcx,QWORD PTR [rbp-0x48]
  4018cf:	mov    r8,r13
  4018d2:	call   0x407d40
  4018d7:	cmp    eax,0xffffffce
  4018da:	je     0x401a80
  4018e0:	test   eax,eax
  4018e2:	je     0x401a40
  4018e8:	mov    ecx,eax
  4018ea:	call   0x407d30
  4018ef:	mov    rbx,rax
  4018f2:	call   QWORD PTR [rip+0x9ab2c]        # 0x49c424
  4018f8:	lea    rdx,[rip+0x27792]        # 0x429091
  4018ff:	lea    rcx,[rax+0x60]
  401903:	mov    r8,rbx
  401906:	call   0x4016a0
  40190b:	mov    ecx,0x1
  401910:	call   0x422578
  401915:	mov    rcx,QWORD PTR [rbp-0x48]
  401919:	mov    edx,0x1
  40191e:	call   0x408068
  401923:	mov    rdx,QWORD PTR [rdi+0x78]
  401927:	jmp    0x40188d
  40192c:	nop    DWORD PTR [rax+0x0]
  401930:	mov    rcx,QWORD PTR [rbp-0x48]
  401934:	mov    edx,0x1
  401939:	call   0x407f30
  40193e:	jmp    0x401860
  401943:	mov    rsi,QWORD PTR [rdx+0x1268]
  40194a:	mov    QWORD PTR [rbp-0x58],rsp
  40194e:	mov    eax,DWORD PTR [rsi]
  401950:	add    rsi,0x8
  401954:	mov    r14,rax
  401957:	shl    rax,0x4
  40195b:	add    rax,0x16
  40195f:	shr    rax,0x4
  401963:	shl    rax,0x4
  401967:	call   0x41ce10
  40196c:	sub    rsp,rax
  40196f:	test   r14d,r14d
  401972:	lea    r15,[rsp+0x20]
  401977:	je     0x4019af
  401979:	lea    eax,[r14-0x1]
  40197d:	xor    ebx,ebx
  40197f:	lea    r12,[rax*8+0x8]
  401987:	nop    WORD PTR [rax+rax*1+0x0]
  401990:	mov    rax,QWORD PTR [rsi+rbx*1]
  401994:	mov    QWORD PTR [r15+rbx*2],rax
  401998:	mov    rcx,QWORD PTR [rsi+rbx*1]
  40199c:	call   0x422468
  4019a1:	mov    DWORD PTR [r15+rbx*2+0x8],eax
  4019a6:	add    rbx,0x8
  4019aa:	cmp    rbx,r12
  4019ad:	jne    0x401990
  4019af:	mov    rcx,QWORD PTR [rbp-0x48]
  4019b3:	xor    r9d,r9d
  4019b6:	mov    r8d,r14d
  4019b9:	mov    rdx,r15
  4019bc:	call   0x408298
  4019c1:	mov    rsp,QWORD PTR [rbp-0x58]
  4019c5:	jmp    0x4017ce
  4019ca:	nop    WORD PTR [rax+rax*1+0x0]
  4019d0:	mov    edx,DWORD PTR [rax+0x8a0]
  4019d6:	mov    rcx,QWORD PTR [rbp-0x48]
  4019da:	call   0x4080e8
  4019df:	mov    rdx,QWORD PTR [rdi+0x78]
  4019e3:	jmp    0x4017c1
  4019e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4019f0:	mov    rcx,QWORD PTR [rbp-0x48]
  4019f4:	call   0x407e08
  4019f9:	test   rax,rax
  4019fc:	jns    0x401879
  401a02:	mov    esi,DWORD PTR [rip+0x695a4]        # 0x46afac
  401a08:	mov    rbx,QWORD PTR [rip+0x9aa15]        # 0x49c424
  401a0f:	call   rbx
  401a11:	lea    rdx,[rip+0x27620]        # 0x429038
  401a18:	lea    rcx,[rax+0x60]
  401a1c:	mov    r8d,esi
  401a1f:	call   0x4016a0
  401a24:	call   rbx
  401a26:	lea    rdx,[rip+0x2763b]        # 0x429068
  401a2d:	lea    rcx,[rax+0x60]
  401a31:	call   0x4016a0
  401a36:	jmp    0x40190b
  401a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a40:	mov    rax,QWORD PTR [rdi+0x78]
  401a44:	mov    rbx,QWORD PTR [rax+0x11f8]
  401a4b:	call   QWORD PTR [rip+0x9a9d3]        # 0x49c424
  401a51:	lea    rdx,[rip+0x27650]        # 0x4290a8
  401a58:	lea    rcx,[rax+0x60]
  401a5c:	mov    r8,rbx
  401a5f:	call   0x4016a0
  401a64:	jmp    0x401896
  401a69:	nop    DWORD PTR [rax+0x0]
  401a70:	mov    rcx,QWORD PTR [rbp-0x48]
  401a74:	call   0x4080d0
  401a79:	jmp    0x40174b
  401a7e:	xchg   ax,ax
  401a80:	mov    rbx,QWORD PTR [rbp-0x50]
  401a84:	call   QWORD PTR [rip+0x9a99a]        # 0x49c424
  401a8a:	lea    rdx,[rip+0x27579]        # 0x42900a
  401a91:	lea    rcx,[rax+0x60]
  401a95:	mov    r8,rbx
  401a98:	call   0x4016a0
  401a9d:	jmp    0x40190b
  401aa2:	cmp    esi,0x2
  401aa5:	jle    0x401ad0
  401aa7:	movsx  eax,BYTE PTR [rbx]
  401aaa:	sub    eax,0x30
  401aad:	cmp    eax,0x9
  401ab0:	ja     0x401ad0
  401ab2:	movsxd rax,esi
  401ab5:	movsx  eax,BYTE PTR [rbx+rax*1-0x1]
  401aba:	sub    eax,0x30
  401abd:	cmp    eax,0x9
  401ac0:	jbe    0x4017a6
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	mov    rcx,QWORD PTR [rbp-0x48]
  401ad4:	mov    r9,rsi
  401ad7:	mov    r8,rbx
  401ada:	mov    edx,0x1
  401adf:	call   0x407dd8
  401ae4:	jmp    0x4017a6
  401ae9:	cmp    eax,0xffffffce
  401aec:	je     0x401a80
  401aee:	mov    ecx,eax
  401af0:	call   0x407d30
  401af5:	mov    rbx,rax
  401af8:	call   QWORD PTR [rip+0x9a926]        # 0x49c424
  401afe:	lea    rdx,[rip+0x2751a]        # 0x42901f
  401b05:	lea    rcx,[rax+0x60]
  401b09:	mov    r8,rbx
  401b0c:	call   0x4016a0
  401b11:	jmp    0x40190b
  401b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b20:	sub    rsp,0x38
  401b24:	mov    QWORD PTR [rsp+0x48],rdx
  401b29:	lea    rdx,[rsp+0x48]
  401b2e:	mov    QWORD PTR [rsp+0x50],r8
  401b33:	mov    QWORD PTR [rsp+0x58],r9
  401b38:	mov    QWORD PTR [rsp+0x28],rdx
  401b3d:	call   0x41d9d0
  401b42:	add    rsp,0x38
  401b46:	ret    
  401b47:	nop    WORD PTR [rax+rax*1+0x0]
  401b50:	push   r14
  401b52:	push   r13
  401b54:	push   r12
  401b56:	push   rbp
  401b57:	push   rdi
  401b58:	push   rsi
  401b59:	push   rbx
  401b5a:	sub    rsp,0x70
  401b5e:	mov    rbp,rdx
  401b61:	mov    rdi,r8
  401b64:	call   0x407e60
  401b69:	lea    rcx,[rip+0x27550]        # 0x4290c0
  401b70:	mov    rsi,rax
  401b73:	call   0x401b20
  401b78:	test   rsi,rsi
  401b7b:	je     0x401d50
  401b81:	lea    rcx,[rip+0x27550]        # 0x4290d8
  401b88:	mov    rdx,rsi
  401b8b:	call   0x401b20
  401b90:	mov    r12,QWORD PTR [rip+0x30579]        # 0x432110
  401b97:	mov    rax,QWORD PTR [r12+0x78]
  401b9c:	test   BYTE PTR [rax+0xd78],0xf
  401ba3:	je     0x401cc1
  401ba9:	mov    rcx,QWORD PTR [rax+0xd80]
  401bb0:	mov    rax,QWORD PTR [rip+0x30589]        # 0x432140
  401bb7:	call   QWORD PTR [rax]
  401bb9:	mov    QWORD PTR [rbp+0x0],rax
  401bbd:	test   rax,rax
  401bc0:	je     0x401df0
  401bc6:	lea    rcx,[rip+0x27563]        # 0x429130
  401bcd:	call   0x4186b0
  401bd2:	test   rax,rax
  401bd5:	je     0x401dfb
  401bdb:	mov    rcx,rax
  401bde:	mov    QWORD PTR [rsp+0x30],rax
  401be3:	call   0x422468
  401be8:	mov    r9d,eax
  401beb:	mov    DWORD PTR [rsp+0x38],eax
  401bef:	mov    rax,QWORD PTR [rip+0x3053a]        # 0x432130
  401bf6:	shr    r9d,1
  401bf9:	lea    ecx,[r9+0x1]
  401bfd:	mov    QWORD PTR [rsp+0x28],rcx
  401c02:	call   QWORD PTR [rax]
  401c04:	test   rax,rax
  401c07:	mov    rbx,rax
  401c0a:	je     0x401df0
  401c10:	lea    r14,[rsp+0x28]
  401c15:	lea    rcx,[rsp+0x30]
  401c1a:	mov    rdx,rax
  401c1d:	mov    r8,r14
  401c20:	call   0x408048
  401c25:	test   eax,eax
  401c27:	mov    r13d,eax
  401c2a:	js     0x401d90
  401c30:	mov    rax,QWORD PTR [rsp+0x28]
  401c35:	xor    r13d,r13d
  401c38:	mov    QWORD PTR [rdi],rbx
  401c3b:	mov    DWORD PTR [rdi+0x8],eax
  401c3e:	mov    rax,QWORD PTR [r12+0x78]
  401c43:	test   BYTE PTR [rax+0x10],0xf
  401c47:	je     0x401caf
  401c49:	lea    r12,[rsp+0x40]
  401c4e:	mov    rcx,rdi
  401c51:	mov    r8,r14
  401c54:	mov    QWORD PTR [rsp+0x28],0x29
  401c5d:	mov    rdx,r12
  401c60:	call   0x408040
  401c65:	mov    rdi,QWORD PTR [rbp+0x0]
  401c69:	mov    rbx,QWORD PTR [rip+0x9a7b4]        # 0x49c424
  401c70:	call   rbx
  401c72:	lea    rdx,[rip+0x274fb]        # 0x429174
  401c79:	lea    rcx,[rax+0x60]
  401c7d:	mov    r8,rdi
  401c80:	call   0x4016a0
  401c85:	call   rbx
  401c87:	lea    rdx,[rip+0x274f8]        # 0x429186
  401c8e:	lea    rcx,[rax+0x60]
  401c92:	mov    r8,rsi
  401c95:	call   0x4016a0
  401c9a:	call   rbx
  401c9c:	lea    rdx,[rip+0x274f1]        # 0x429194
  401ca3:	lea    rcx,[rax+0x60]
  401ca7:	mov    r8,r12
  401caa:	call   0x4016a0
  401caf:	mov    eax,r13d
  401cb2:	add    rsp,0x70
  401cb6:	pop    rbx
  401cb7:	pop    rsi
  401cb8:	pop    rdi
  401cb9:	pop    rbp
  401cba:	pop    r12
  401cbc:	pop    r13
  401cbe:	pop    r14
  401cc0:	ret    
  401cc1:	lea    rcx,[rip+0x2742c]        # 0x4290f4
  401cc8:	mov    QWORD PTR [rsp+0x30],0x0
  401cd1:	call   0x401b20
  401cd6:	mov    r13,QWORD PTR [rip+0x9a747]        # 0x49c424
  401cdd:	call   r13
  401ce0:	lea    rcx,[rax+0x30]
  401ce4:	call   0x422560
  401ce9:	call   r13
  401cec:	lea    rdx,[rsp+0x40]
  401cf1:	lea    rcx,[rsp+0x30]
  401cf6:	mov    r8,rax
  401cf9:	call   0x414d20
  401cfe:	mov    rbx,QWORD PTR [rsp+0x30]
  401d03:	test   rbx,rbx
  401d06:	je     0x401dca
  401d0c:	mov    rcx,rbx
  401d0f:	call   0x422468
  401d14:	lea    rdx,[rbx+rax*1-0x1]
  401d19:	movzx  eax,BYTE PTR [rdx]
  401d1c:	cmp    al,0xa
  401d1e:	je     0x401d70
  401d20:	cmp    al,0xd
  401d22:	je     0x401d61
  401d24:	mov    rax,QWORD PTR [rip+0x30415]        # 0x432140
  401d2b:	mov    rcx,rbx
  401d2e:	call   QWORD PTR [rax]
  401d30:	mov    rcx,QWORD PTR [rsp+0x30]
  401d35:	mov    QWORD PTR [rbp+0x0],rax
  401d39:	call   0x422528
  401d3e:	mov    rax,QWORD PTR [rbp+0x0]
  401d42:	jmp    0x401bbd
  401d47:	nop    WORD PTR [rax+rax*1+0x0]
  401d50:	lea    rcx,[rip+0x27390]        # 0x4290e7
  401d57:	call   0x401b20
  401d5c:	jmp    0x401b90
  401d61:	mov    BYTE PTR [rdx],0x0
  401d64:	mov    rbx,QWORD PTR [rsp+0x30]
  401d69:	jmp    0x401d24
  401d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d70:	mov    BYTE PTR [rdx],0x0
  401d73:	mov    rbx,QWORD PTR [rsp+0x30]
  401d78:	mov    rcx,rbx
  401d7b:	call   0x422468
  401d80:	lea    rdx,[rbx+rax*1-0x1]
  401d85:	movzx  eax,BYTE PTR [rdx]
  401d88:	jmp    0x401d20
  401d8a:	nop    WORD PTR [rax+rax*1+0x0]
  401d90:	mov    ecx,eax
  401d92:	call   0x407d30
  401d97:	mov    rsi,rax
  401d9a:	call   QWORD PTR [rip+0x9a684]        # 0x49c424
  401da0:	lea    rdx,[rip+0x273b0]        # 0x429157
  401da7:	lea    rcx,[rax+0x60]
  401dab:	mov    r8,rsi
  401dae:	call   0x4016a0
  401db3:	mov    rsi,QWORD PTR [rip+0x30366]        # 0x432120
  401dba:	mov    rcx,rbx
  401dbd:	call   QWORD PTR [rsi]
  401dbf:	mov    rcx,QWORD PTR [rbp+0x0]
  401dc3:	call   QWORD PTR [rsi]
  401dc5:	jmp    0x401caf
  401dca:	call   r13
  401dcd:	lea    rdx,[rip+0x2733c]        # 0x429110
  401dd4:	lea    rcx,[rax+0x60]
  401dd8:	mov    r13d,0xffffffe0
  401dde:	call   0x4016a0
  401de3:	jmp    0x401caf
  401de8:	nop    DWORD PTR [rax+rax*1+0x0]
  401df0:	mov    r13d,0xffffffe7
  401df6:	jmp    0x401caf
  401dfb:	call   QWORD PTR [rip+0x9a623]        # 0x49c424
  401e01:	lea    rdx,[rip+0x27334]        # 0x42913c
  401e08:	lea    rcx,[rax+0x60]
  401e0c:	mov    r13d,0xffffffe0
  401e12:	call   0x4016a0
  401e17:	jmp    0x401caf
  401e1c:	nop    DWORD PTR [rax+0x0]
  401e20:	push   r15
  401e22:	push   r14
  401e24:	push   r13
  401e26:	push   r12
  401e28:	push   rbp
  401e29:	push   rdi
  401e2a:	push   rsi
  401e2b:	push   rbx
  401e2c:	sub    rsp,0xc8
  401e33:	mov    rax,QWORD PTR [rip+0x302d6]        # 0x432110
  401e3a:	mov    r15d,0x1
  401e40:	mov    r14,rcx
  401e43:	mov    rdx,QWORD PTR [rax+0x78]
  401e47:	mov    eax,DWORD PTR [rdx+0x148]
  401e4d:	mov    r13d,DWORD PTR [rdx+0x280]
  401e54:	mov    ecx,DWORD PTR [rdx+0xe0]
  401e5a:	shr    eax,0x5
  401e5d:	and    r13d,0x20
  401e61:	xor    eax,0x1
  401e64:	and    eax,0x1
  401e67:	mov    BYTE PTR [rsp+0x5b],al
  401e6b:	jne    0x401e7b
  401e6d:	shr    ecx,0x5
  401e70:	mov    r15d,ecx
  401e73:	xor    r15d,0x1
  401e77:	and    r15d,0x1
  401e7b:	test   BYTE PTR [rdx+0x7c8],0xf
  401e82:	jne    0x401f55
  401e88:	mov    r8d,DWORD PTR [rip+0x69115]        # 0x46afa4
  401e8f:	mov    edx,DWORD PTR [rip+0x3521b]        # 0x4370b0
  401e95:	mov    rcx,r14
  401e98:	call   0x4034a0
  401e9d:	test   r13d,r13d
  401ea0:	je     0x402032
  401ea6:	xor    eax,eax
  401ea8:	test   r15d,r15d
  401eab:	jne    0x401ec1
  401ead:	add    rsp,0xc8
  401eb4:	pop    rbx
  401eb5:	pop    rsi
  401eb6:	pop    rdi
  401eb7:	pop    rbp
  401eb8:	pop    r12
  401eba:	pop    r13
  401ebc:	pop    r14
  401ebe:	pop    r15
  401ec0:	ret    
  401ec1:	lea    rdx,[rsp+0xa0]
  401ec9:	mov    rcx,r14
  401ecc:	call   0x408230
  401ed1:	test   rax,rax
  401ed4:	mov    rbx,rax
  401ed7:	je     0x40253c
  401edd:	mov    ecx,DWORD PTR [rip+0x690a5]        # 0x46af88
  401ee3:	lea    rax,[rip+0x272bb]        # 0x4291a5
  401eea:	lea    rdx,[rip+0x272b0]        # 0x4291a1
  401ef1:	test   ecx,ecx
  401ef3:	mov    rcx,QWORD PTR [rip+0x351be]        # 0x4370b8
  401efa:	cmove  rdx,rax
  401efe:	call   0x405680
  401f03:	mov    r8,QWORD PTR [rip+0x351b6]        # 0x4370c0
  401f0a:	xor    edx,edx
  401f0c:	xor    ecx,ecx
  401f0e:	mov    DWORD PTR [rsp+0x30],0x0
  401f16:	mov    QWORD PTR [rsp+0x28],rbx
  401f1b:	mov    r9,rax
  401f1e:	mov    DWORD PTR [rsp+0x20],0x1
  401f26:	mov    rsi,rax
  401f29:	call   0x407cf0
  401f2e:	cmp    eax,0xffffffcf
  401f31:	je     0x4022e5
  401f37:	cmp    eax,0xffffffc4
  401f3a:	je     0x4021eb
  401f40:	test   eax,eax
  401f42:	js     0x4024ee
  401f48:	jne    0x40225b
  401f4e:	xor    eax,eax
  401f50:	jmp    0x401ead
  401f55:	lea    rdx,[rsp+0x90]
  401f5d:	mov    rcx,r14
  401f60:	mov    DWORD PTR [rsp+0x90],0x0
  401f6b:	call   0x408230
  401f70:	mov    rbp,rax
  401f73:	mov    eax,DWORD PTR [rsp+0x90]
  401f7a:	test   eax,eax
  401f7c:	je     0x4025e6
  401f82:	mov    rax,QWORD PTR [rip+0x30187]        # 0x432110
  401f89:	lea    rdx,[rip+0x27241]        # 0x4291d1
  401f90:	mov    rax,QWORD PTR [rax+0x78]
  401f94:	mov    rcx,QWORD PTR [rax+0x7d0]
  401f9b:	call   0x422550
  401fa0:	test   rax,rax
  401fa3:	mov    rsi,rax
  401fa6:	je     0x4025b1
  401fac:	mov    eax,DWORD PTR [rsp+0x90]
  401fb3:	xor    ebx,ebx
  401fb5:	lea    rdi,[rsp+0xa0]
  401fbd:	mov    r12,QWORD PTR [rip+0x3015c]        # 0x432120
  401fc4:	test   eax,eax
  401fc6:	je     0x402025
  401fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  401fd0:	mov    edx,ebx
  401fd2:	lea    rcx,[rip+0x2720d]        # 0x4291e6
  401fd9:	mov    r8,rdi
  401fdc:	shl    rdx,0x4
  401fe0:	add    rdx,rbp
  401fe3:	call   0x407f10
  401fe8:	test   eax,eax
  401fea:	js     0x40248b
  401ff0:	mov    edx,DWORD PTR [rsp+0xa8]
  401ff7:	mov    rcx,QWORD PTR [rsp+0xa0]
  401fff:	mov    r9,rsi
  402002:	mov    r8d,0x1
  402008:	add    ebx,0x1
  40200b:	call   0x422510
  402010:	mov    rcx,QWORD PTR [rsp+0xa0]
  402018:	call   QWORD PTR [r12]
  40201c:	cmp    ebx,DWORD PTR [rsp+0x90]
  402023:	jb     0x401fd0
  402025:	mov    rcx,rsi
  402028:	call   0x422570
  40202d:	jmp    0x401e88
  402032:	mov    rdx,QWORD PTR [rip+0x35087]        # 0x4370c0
  402039:	lea    r8,[rip+0x271c1]        # 0x429201
  402040:	mov    rcx,r14
  402043:	call   0x402f60
  402048:	test   eax,eax
  40204a:	je     0x4022c0
  402050:	mov    rax,QWORD PTR [rip+0x300b9]        # 0x432110
  402057:	mov    rax,QWORD PTR [rax+0x78]
  40205b:	test   BYTE PTR [rax+0x2e8],0x20
  402062:	jne    0x401ea6
  402068:	xor    edx,edx
  40206a:	mov    rcx,r14
  40206d:	call   0x407f60
  402072:	test   eax,eax
  402074:	jne    0x401ea6
  40207a:	lea    rax,[rsp+0xa0]
  402082:	lea    rdx,[rsp+0x6c]
  402087:	mov    rcx,r14
  40208a:	mov    DWORD PTR [rsp+0x6c],0x0
  402092:	mov    DWORD PTR [rsp+0x98],0x17
  40209d:	mov    QWORD PTR [rsp+0x90],rax
  4020a5:	call   0x408230
  4020aa:	mov    esi,DWORD PTR [rsp+0x6c]
  4020ae:	mov    QWORD PTR [rsp+0x48],rax
  4020b3:	test   esi,esi
  4020b5:	je     0x40240b
  4020bb:	lea    rax,[rsp+0x78]
  4020c0:	mov    DWORD PTR [rsp+0x5c],0x0
  4020c8:	xor    esi,esi
  4020ca:	xor    ebx,ebx
  4020cc:	xor    r13d,r13d
  4020cf:	lea    rdi,[rsp+0x70]
  4020d4:	mov    QWORD PTR [rsp+0x50],rax
  4020d9:	lea    r12,[rsp+0x80]
  4020e1:	lea    rbp,[rsp+0x90]
  4020e9:	jmp    0x4021cb
  4020ee:	xchg   ax,ax
  4020f0:	mov    rcx,rdi
  4020f3:	call   0x407cc8
  4020f8:	mov    edx,ebx
  4020fa:	mov    rcx,QWORD PTR [rsp+0x70]
  4020ff:	xor    r8d,r8d
  402102:	shl    rdx,0x4
  402106:	add    rdx,QWORD PTR [rsp+0x48]
  40210b:	call   0x407cd0
  402110:	test   eax,eax
  402112:	js     0x402448
  402118:	test   esi,esi
  40211a:	jne    0x402340
  402120:	mov    r8,QWORD PTR [rsp+0x50]
  402125:	mov    rdx,QWORD PTR [rsp+0x70]
  40212a:	xor    r9d,r9d
  40212d:	mov    rcx,QWORD PTR [rip+0x350d4]        # 0x437208
  402134:	xor    esi,esi
  402136:	call   0x408240
  40213b:	test   eax,eax
  40213d:	js     0x40234f
  402143:	mov    r8d,DWORD PTR [rsp+0x98]
  40214b:	mov    rdx,QWORD PTR [rsp+0x90]
  402153:	xor    ecx,ecx
  402155:	call   0x407df0
  40215a:	test   eax,eax
  40215c:	js     0x4024be
  402162:	mov    r8,QWORD PTR [rsp+0x78]
  402167:	mov    rdx,QWORD PTR [rsp+0x70]
  40216c:	xor    ecx,ecx
  40216e:	mov    QWORD PTR [rsp+0x20],rbp
  402173:	mov    r9,r12
  402176:	call   0x405900
  40217b:	cmp    eax,0xffffffc8
  40217e:	je     0x4021b8
  402180:	test   eax,eax
  402182:	js     0x402516
  402188:	mov    eax,DWORD PTR [rip+0x34f22]        # 0x4370b0
  40218e:	mov    rdx,QWORD PTR [rsp+0x78]
  402193:	mov    r9,rbp
  402196:	mov    rcx,QWORD PTR [rsp+0x70]
  40219b:	mov    r8,r12
  40219e:	mov    DWORD PTR [rsp+0x20],eax
  4021a2:	call   0x405e60
  4021a7:	cmp    eax,0x1
  4021aa:	je     0x4023b0
  4021b0:	test   eax,eax
  4021b2:	je     0x402557
  4021b8:	add    ebx,0x1
  4021bb:	cmp    ebx,DWORD PTR [rsp+0x6c]
  4021bf:	mov    r13d,0x1
  4021c5:	jae    0x402432
  4021cb:	mov    rcx,rdi
  4021ce:	call   0x407cc8
  4021d3:	test   r13d,r13d
  4021d6:	je     0x4020f0
  4021dc:	mov    rcx,QWORD PTR [rsp+0x70]
  4021e1:	call   0x407ce8
  4021e6:	jmp    0x4020f0
  4021eb:	mov    rbp,QWORD PTR [rip+0x34ece]        # 0x4370c0
  4021f2:	mov    rdi,QWORD PTR [rip+0x9a22b]        # 0x49c424
  4021f9:	call   rdi
  4021fb:	lea    rdx,[rip+0x271ee]        # 0x4293f0
  402202:	lea    rcx,[rax+0x60]
  402206:	mov    r8,rbp
  402209:	call   0x4016a0
  40220e:	call   rdi
  402210:	lea    rdx,[rip+0x27221]        # 0x429438
  402217:	lea    rcx,[rax+0x60]
  40221b:	call   0x4016a0
  402220:	mov    rbp,QWORD PTR [rip+0x34e99]        # 0x4370c0
  402227:	call   rdi
  402229:	lea    rdx,[rip+0x27168]        # 0x429398
  402230:	lea    rcx,[rax+0x60]
  402234:	mov    r8,rbp
  402237:	call   0x4016a0
  40223c:	cmp    BYTE PTR [rsp+0x5b],0x0
  402241:	jne    0x4022db
  402247:	lea    rcx,[rip+0x2725a]        # 0x4294a8
  40224e:	call   0x401580
  402253:	test   eax,eax
  402255:	je     0x4022db
  40225b:	mov    r8,QWORD PTR [rip+0x34e5e]        # 0x4370c0
  402262:	xor    edx,edx
  402264:	xor    ecx,ecx
  402266:	mov    DWORD PTR [rsp+0x38],0x0
  40226e:	mov    QWORD PTR [rsp+0x30],0x0
  402277:	mov    r9,rsi
  40227a:	mov    QWORD PTR [rsp+0x28],rbx
  40227f:	mov    DWORD PTR [rsp+0x20],0x1
  402287:	call   0x407d38
  40228c:	test   eax,eax
  40228e:	jns    0x401f4e
  402294:	mov    ecx,eax
  402296:	call   0x407d30
  40229b:	mov    rbx,rax
  40229e:	call   QWORD PTR [rip+0x9a180]        # 0x49c424
  4022a4:	lea    rdx,[rip+0x27246]        # 0x4294f1
  4022ab:	lea    rcx,[rax+0x60]
  4022af:	mov    r8,rbx
  4022b2:	call   0x4016a0
  4022b7:	xor    eax,eax
  4022b9:	jmp    0x401ead
  4022be:	xchg   ax,ax
  4022c0:	lea    rcx,[rip+0x26f51]        # 0x429218
  4022c7:	call   0x401b20
  4022cc:	mov    eax,r15d
  4022cf:	or     eax,DWORD PTR [rip+0x68cb7]        # 0x46af8c
  4022d5:	jne    0x401ea6
  4022db:	mov    eax,0xffffffff
  4022e0:	jmp    0x401ead
  4022e5:	mov    rbp,QWORD PTR [rip+0x34dd4]        # 0x4370c0
  4022ec:	mov    rdi,QWORD PTR [rip+0x9a131]        # 0x49c424
  4022f3:	call   rdi
  4022f5:	lea    rdx,[rip+0x2706c]        # 0x429368
  4022fc:	lea    rcx,[rax+0x60]
  402300:	mov    r9,rsi
  402303:	mov    r8,rbp
  402306:	call   0x4016a0
  40230b:	mov    rbp,QWORD PTR [rip+0x34dae]        # 0x4370c0
  402312:	call   rdi
  402314:	lea    rdx,[rip+0x2707d]        # 0x429398
  40231b:	lea    rcx,[rax+0x60]
  40231f:	mov    r8,rbp
  402322:	call   0x4016a0
  402327:	lea    rcx,[rip+0x27092]        # 0x4293c0
  40232e:	call   0x401580
  402333:	test   eax,eax
  402335:	jne    0x40225b
  40233b:	jmp    0x4022db
  40233d:	nop    DWORD PTR [rax]
  402340:	mov    rcx,QWORD PTR [rsp+0x78]
  402345:	call   0x407ce8
  40234a:	jmp    0x402120
  40234f:	mov    eax,DWORD PTR [rsp+0x6c]
  402353:	sub    eax,ebx
  402355:	cmp    eax,0x1
  402358:	ja     0x4023ba
  40235a:	call   QWORD PTR [rip+0x9a0c4]        # 0x49c424
  402360:	lea    rdx,[rip+0x26f30]        # 0x429297
  402367:	lea    rcx,[rax+0x60]
  40236b:	call   0x4016a0
  402370:	mov    r10d,DWORD PTR [rsp+0x5c]
  402375:	test   r10d,r10d
  402378:	setne  bl
  40237b:	mov    rcx,QWORD PTR [rsp+0x70]
  402380:	call   0x407ce8
  402385:	test   bl,bl
  402387:	jne    0x4023ef
  402389:	lea    rcx,[rip+0x26f48]        # 0x4292d8
  402390:	call   0x401b20
  402395:	mov    eax,r15d
  402398:	or     eax,DWORD PTR [rip+0x68bee]        # 0x46af8c
  40239e:	jne    0x401ea6
  4023a4:	jmp    0x4022db
  4023a9:	nop    DWORD PTR [rax+0x0]
  4023b0:	add    DWORD PTR [rsp+0x5c],0x1
  4023b5:	jmp    0x4021b8
  4023ba:	mov    rcx,QWORD PTR [rsp+0x50]
  4023bf:	call   0x407cc8
  4023c4:	lea    edx,[rbx+0x1]
  4023c7:	mov    rcx,QWORD PTR [rsp+0x78]
  4023cc:	xor    r8d,r8d
  4023cf:	shl    rdx,0x4
  4023d3:	add    rdx,QWORD PTR [rsp+0x48]
  4023d8:	call   0x407cd0
  4023dd:	test   eax,eax
  4023df:	js     0x40257e
  4023e5:	mov    esi,0x1
  4023ea:	jmp    0x402143
  4023ef:	cmp    DWORD PTR [rsp+0x5c],0xffffffff
  4023f4:	je     0x402389
  4023f6:	mov    edx,DWORD PTR [rsp+0x5c]
  4023fa:	lea    rcx,[rip+0x26f17]        # 0x429318
  402401:	call   0x401b20
  402406:	jmp    0x401ea6
  40240b:	call   QWORD PTR [rip+0x9a013]        # 0x49c424
  402411:	lea    rdx,[rip+0x26e36]        # 0x42924e
  402418:	lea    rcx,[rax+0x60]
  40241c:	call   0x4016a0
  402421:	lea    rcx,[rip+0x26e3e]        # 0x429266
  402428:	call   0x401b20
  40242d:	jmp    0x401ea6
  402432:	test   esi,esi
  402434:	jne    0x402570
  40243a:	mov    edx,DWORD PTR [rsp+0x5c]
  40243e:	test   edx,edx
  402440:	setne  bl
  402443:	jmp    0x40237b
  402448:	mov    ecx,eax
  40244a:	call   0x407d30
  40244f:	mov    rbx,rax
  402452:	call   QWORD PTR [rip+0x99fcc]        # 0x49c424
  402458:	lea    rdx,[rip+0x26e24]        # 0x429283
  40245f:	lea    rcx,[rax+0x60]
  402463:	mov    r8,rbx
  402466:	call   0x4016a0
  40246b:	mov    ebx,DWORD PTR [rsp+0x5c]
  40246f:	test   ebx,ebx
  402471:	setne  bl
  402474:	test   esi,esi
  402476:	je     0x40237b
  40247c:	mov    rcx,QWORD PTR [rsp+0x78]
  402481:	call   0x407ce8
  402486:	jmp    0x40237b
  40248b:	mov    ecx,eax
  40248d:	call   0x407d30
  402492:	mov    rbx,rax
  402495:	call   QWORD PTR [rip+0x99f89]        # 0x49c424
  40249b:	lea    rdx,[rip+0x26d50]        # 0x4291f2
  4024a2:	lea    rcx,[rax+0x60]
  4024a6:	mov    r9,rbx
  4024a9:	mov    r8d,0x196
  4024af:	call   0x4016a0
  4024b4:	mov    ecx,0x1
  4024b9:	call   0x422578
  4024be:	mov    ecx,eax
  4024c0:	call   0x407d30
  4024c5:	mov    rbx,rax
  4024c8:	call   QWORD PTR [rip+0x99f56]        # 0x49c424
  4024ce:	lea    rdx,[rip+0x26dd6]        # 0x4292ab
  4024d5:	lea    rcx,[rax+0x60]
  4024d9:	mov    r8,rbx
  4024dc:	call   0x4016a0
  4024e1:	mov    r9d,DWORD PTR [rsp+0x5c]
  4024e6:	test   r9d,r9d
  4024e9:	setne  bl
  4024ec:	jmp    0x402474
  4024ee:	mov    ecx,eax
  4024f0:	call   0x407d30
  4024f5:	mov    rbx,rax
  4024f8:	call   QWORD PTR [rip+0x99f26]        # 0x49c424
  4024fe:	lea    rdx,[rip+0x26fcb]        # 0x4294d0
  402505:	lea    rcx,[rax+0x60]
  402509:	mov    r8,rbx
  40250c:	call   0x4016a0
  402511:	jmp    0x4022db
  402516:	call   QWORD PTR [rip+0x99f08]        # 0x49c424
  40251c:	lea    rdx,[rip+0x26d97]        # 0x4292ba
  402523:	lea    rcx,[rax+0x60]
  402527:	call   0x4016a0
  40252c:	mov    r8d,DWORD PTR [rsp+0x5c]
  402531:	test   r8d,r8d
  402534:	setne  bl
  402537:	jmp    0x402474
  40253c:	call   QWORD PTR [rip+0x99ee2]        # 0x49c424
  402542:	lea    rdx,[rip+0x26df7]        # 0x429340
  402549:	lea    rcx,[rax+0x60]
  40254d:	call   0x4016a0
  402552:	jmp    0x4022db
  402557:	xor    ebx,ebx
  402559:	test   esi,esi
  40255b:	jne    0x40247c
  402561:	mov    rcx,QWORD PTR [rsp+0x70]
  402566:	call   0x407ce8
  40256b:	jmp    0x402389
  402570:	mov    eax,DWORD PTR [rsp+0x5c]
  402574:	test   eax,eax
  402576:	setne  bl
  402579:	jmp    0x40247c
  40257e:	mov    ecx,eax
  402580:	call   0x407d30
  402585:	mov    rbx,rax
  402588:	call   QWORD PTR [rip+0x99e96]        # 0x49c424
  40258e:	lea    rdx,[rip+0x26cee]        # 0x429283
  402595:	lea    rcx,[rax+0x60]
  402599:	mov    r8,rbx
  40259c:	call   0x4016a0
  4025a1:	mov    r11d,DWORD PTR [rsp+0x5c]
  4025a6:	test   r11d,r11d
  4025a9:	setne  bl
  4025ac:	jmp    0x40247c
  4025b1:	mov    rax,QWORD PTR [rip+0x2fb58]        # 0x432110
  4025b8:	mov    rax,QWORD PTR [rax+0x78]
  4025bc:	mov    rbx,QWORD PTR [rax+0x7d0]
  4025c3:	call   QWORD PTR [rip+0x99e5b]        # 0x49c424
  4025c9:	lea    rdx,[rip+0x26c03]        # 0x4291d3
  4025d0:	lea    rcx,[rax+0x60]
  4025d4:	mov    r8,rbx
  4025d7:	call   0x4016a0
  4025dc:	mov    ecx,0x1
  4025e1:	call   0x422578
  4025e6:	call   QWORD PTR [rip+0x99e38]        # 0x49c424
  4025ec:	lea    rdx,[rip+0x26bbd]        # 0x4291b0
  4025f3:	lea    rcx,[rax+0x60]
  4025f7:	call   0x4016a0
  4025fc:	mov    ecx,0x1
  402601:	call   0x422578
  402606:	nop
  402607:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	push   r14
  402612:	push   r13
  402614:	push   r12
  402616:	push   rbp
  402617:	push   rdi
  402618:	push   rsi
  402619:	push   rbx
  40261a:	sub    rsp,0x140
  402621:	mov    eax,DWORD PTR [rip+0x34a89]        # 0x4370b0
  402627:	mov    r12,QWORD PTR [rsp+0x1b0]
  40262f:	mov    r13,rcx
  402632:	mov    ebp,r8d
  402635:	test   eax,eax
  402637:	je     0x4026b3
  402639:	test   r8d,r8d
  40263c:	mov    QWORD PTR [rsp+0x28],rdx
  402641:	jle    0x402770
  402647:	lea    rcx,[rip+0x26ec2]        # 0x429510
  40264e:	lea    r14,[rsp+0x38]
  402653:	lea    rdi,[rsp+0x40]
  402658:	xor    ebx,ebx
  40265a:	call   0x401b20
  40265f:	mov    rdx,QWORD PTR [rsp+0x28]
  402664:	mov    rsi,rdx
  402667:	nop    WORD PTR [rax+rax*1+0x0]
  402670:	mov    r8,r14
  402673:	mov    rdx,rdi
  402676:	mov    rcx,rsi
  402679:	mov    QWORD PTR [rsp+0x38],0x100
  402682:	call   0x407cb0
  402687:	test   eax,eax
  402689:	js     0x4026a8
  40268b:	lea    rcx,[rip+0x26edf]        # 0x429571
  402692:	mov    edx,ebx
  402694:	call   0x401b20
  402699:	lea    rcx,[rip+0x26edb]        # 0x42957b
  4026a0:	mov    rdx,rdi
  4026a3:	call   0x401b20
  4026a8:	add    ebx,0x1
  4026ab:	add    rsi,0x10
  4026af:	cmp    ebx,ebp
  4026b1:	jne    0x402670
  4026b3:	mov    rcx,r13
  4026b6:	call   0x4081e0
  4026bb:	cmp    eax,0x1
  4026be:	mov    DWORD PTR [r12],0x0
  4026c6:	je     0x4026f0
  4026c8:	xor    edx,edx
  4026ca:	cmp    eax,0x2
  4026cd:	je     0x402730
  4026cf:	lea    rcx,[rip+0x26ee2]        # 0x4295b8
  4026d6:	call   0x401b20
  4026db:	xor    eax,eax
  4026dd:	add    rsp,0x140
  4026e4:	pop    rbx
  4026e5:	pop    rsi
  4026e6:	pop    rdi
  4026e7:	pop    rbp
  4026e8:	pop    r12
  4026ea:	pop    r13
  4026ec:	pop    r14
  4026ee:	ret    
  4026ef:	nop
  4026f0:	mov    edx,DWORD PTR [rip+0x34b0a]        # 0x437200
  4026f6:	test   edx,edx
  4026f8:	je     0x4026cf
  4026fa:	mov    rax,QWORD PTR [rip+0x349ff]        # 0x437100
  402701:	test   rax,rax
  402704:	je     0x402781
  402706:	mov    rdi,QWORD PTR [rsp+0x1b8]
  40270e:	mov    QWORD PTR [rdi],rax
  402711:	mov    rax,QWORD PTR [rsp+0x1a8]
  402719:	lea    rdi,[rip+0x34a20]        # 0x437140
  402720:	mov    DWORD PTR [r12],edx
  402724:	mov    QWORD PTR [rax],rdi
  402727:	jmp    0x4026cf
  402729:	nop    DWORD PTR [rax+0x0]
  402730:	mov    rax,QWORD PTR [rip+0x34991]        # 0x4370c8
  402737:	test   rax,rax
  40273a:	je     0x4026cf
  40273c:	mov    rdi,QWORD PTR [rsp+0x1b8]
  402744:	mov    dl,0x1
  402746:	mov    QWORD PTR [rdi],rax
  402749:	mov    rax,QWORD PTR [rsp+0x1a8]
  402751:	lea    rdi,[rip+0x34988]        # 0x4370e0
  402758:	mov    DWORD PTR [r12],0x1
  402760:	mov    QWORD PTR [rax],rdi
  402763:	jmp    0x4026cf
  402768:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	lea    rcx,[rip+0x26dc1]        # 0x429538
  402777:	call   0x401b20
  40277c:	jmp    0x4026b3
  402781:	lea    rcx,[rip+0x26df8]        # 0x429580
  402788:	call   0x401b20
  40278d:	mov    eax,0xffffffff
  402792:	jmp    0x4026dd
  402797:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	push   r12
  4027a2:	push   rbp
  4027a3:	push   rdi
  4027a4:	push   rsi
  4027a5:	push   rbx
  4027a6:	sub    rsp,0x20
  4027aa:	mov    eax,edx
  4027ac:	cmp    edx,0xffffffe4
  4027af:	not    eax
  4027b1:	sete   r8b
  4027b5:	shr    eax,0x1f
  4027b8:	or     r8b,al
  4027bb:	jne    0x402844
  4027c1:	cmp    edx,0xffffffcc
  4027c4:	je     0x402844
  4027c6:	mov    r12,rcx
  4027c9:	mov    ecx,edx
  4027cb:	mov    ebx,edx
  4027cd:	lea    rbp,[rip+0x26e20]        # 0x4295f4
  4027d4:	mov    esi,0x0
  4027d9:	call   0x4080a8
  4027de:	test   eax,eax
  4027e0:	lea    rax,[rip+0x26e03]        # 0x4295ea
  4027e7:	mov    ecx,ebx
  4027e9:	cmovne esi,ebx
  4027ec:	cmove  rbp,rax
  4027f0:	call   0x407d30
  4027f5:	test   rax,rax
  4027f8:	mov    rdi,rax
  4027fb:	cmove  rdi,QWORD PTR [rip+0x2f9bd]        # 0x4321c0
  402803:	call   QWORD PTR [rip+0x99c1b]        # 0x49c424
  402809:	lea    rdx,[rip+0x26dea]        # 0x4295fa
  402810:	lea    rcx,[rax+0x60]
  402814:	mov    r8,rbp
  402817:	mov    r9,rdi
  40281a:	call   0x4016a0
  40281f:	mov    eax,ebx
  402821:	and    eax,0xfffffffb
  402824:	cmp    eax,0xfffffff0
  402827:	je     0x402851
  402829:	cmp    ebx,0xffffffdb
  40282c:	jne    0x402837
  40282e:	mov    eax,DWORD PTR [r12+0x10]
  402833:	test   eax,eax
  402835:	jne    0x402882
  402837:	mov    eax,esi
  402839:	add    rsp,0x20
  40283d:	pop    rbx
  40283e:	pop    rsi
  40283f:	pop    rdi
  402840:	pop    rbp
  402841:	pop    r12
  402843:	ret    
  402844:	xor    eax,eax
  402846:	add    rsp,0x20
  40284a:	pop    rbx
  40284b:	pop    rsi
  40284c:	pop    rdi
  40284d:	pop    rbp
  40284e:	pop    r12
  402850:	ret    
  402851:	mov    rcx,QWORD PTR [r12+0x8]
  402856:	call   0x4082b8
  40285b:	mov    ecx,eax
  40285d:	mov    edi,eax
  40285f:	call   0x4082b0
  402864:	test   rax,rax
  402867:	cmove  rax,QWORD PTR [rip+0x2f951]        # 0x4321c0
  40286f:	lea    rcx,[rip+0x26d96]        # 0x42960c
  402876:	mov    edx,edi
  402878:	mov    r8,rax
  40287b:	call   0x401b20
  402880:	jmp    0x402829
  402882:	lea    rcx,[rip+0x26da7]        # 0x429630
  402889:	call   0x401b20
  40288e:	mov    rcx,r12
  402891:	call   0x4028d0
  402896:	test   eax,eax
  402898:	je     0x4028b0
  40289a:	lea    rcx,[rip+0x26dd7]        # 0x429678
  4028a1:	call   0x401b20
  4028a6:	mov    eax,esi
  4028a8:	jmp    0x402839
  4028aa:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	lea    rcx,[rip+0x26da1]        # 0x429658
  4028b7:	call   0x401b20
  4028bc:	mov    eax,esi
  4028be:	jmp    0x402839
  4028c3:	nop    DWORD PTR [rax]
  4028c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028d0:	push   rsi
  4028d1:	push   rbx
  4028d2:	sub    rsp,0x28
  4028d6:	mov    edx,DWORD PTR [rcx]
  4028d8:	mov    rbx,rcx
  4028db:	mov    rcx,QWORD PTR [rcx+0x8]
  4028df:	mov    r8d,edx
  4028e2:	call   0x407d20
  4028e7:	mov    rsi,QWORD PTR [rbx+0x8]
  4028eb:	lea    rdx,[rip+0xffffffffffffed9e]        # 0x401690
  4028f2:	mov    rcx,rsi
  4028f5:	call   0x407d00
  4028fa:	lea    rdx,[rip+0xffffffffffffed7f]        # 0x401680
  402901:	mov    rcx,rsi
  402904:	call   0x407d10
  402909:	lea    rdx,[rip+0xffffffffffffece0]        # 0x4015f0
  402910:	mov    rcx,rsi
  402913:	call   0x407d08
  402918:	mov    rcx,QWORD PTR [rbx+0x8]
  40291c:	mov    edx,0xffffffff
  402921:	call   0x408070
  402926:	mov    rcx,QWORD PTR [rbx+0x8]
  40292a:	call   0x408078
  40292f:	test   eax,eax
  402931:	mov    esi,eax
  402933:	js     0x402990
  402935:	jne    0x4029a9
  402937:	mov    rax,QWORD PTR [rip+0x2f7d2]        # 0x432110
  40293e:	mov    r8d,0x2
  402944:	mov    rax,QWORD PTR [rax+0x78]
  402948:	test   BYTE PTR [rax+0xbd8],0xf
  40294f:	jne    0x402967
  402951:	mov    eax,DWORD PTR [rax+0xb08]
  402957:	and    eax,0xf
  40295a:	cmp    eax,0x1
  40295d:	sbb    r8d,r8d
  402960:	not    r8d
  402963:	and    r8d,0x2
  402967:	mov    rcx,QWORD PTR [rbx+0x8]
  40296b:	mov    edx,DWORD PTR [rip+0x3473f]        # 0x4370b0
  402971:	call   0x4034d0
  402976:	mov    DWORD PTR [rbx+0x10],0x1
  40297d:	mov    eax,esi
  40297f:	add    rsp,0x28
  402983:	pop    rbx
  402984:	pop    rsi
  402985:	ret    
  402986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402990:	mov    edx,eax
  402992:	mov    rcx,rbx
  402995:	call   0x4027a0
  40299a:	mov    ecx,esi
  40299c:	call   0x4080a8
  4029a1:	test   eax,eax
  4029a3:	je     0x402918
  4029a9:	mov    rcx,QWORD PTR [rbx+0x8]
  4029ad:	mov    edx,esi
  4029af:	call   0x4082a8
  4029b4:	mov    ecx,DWORD PTR [rbx]
  4029b6:	mov    edx,0x2
  4029bb:	call   0x41a040
  4029c0:	jmp    0x40297d
  4029c2:	nop    DWORD PTR [rax+0x0]
  4029c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029d0:	push   rdi
  4029d1:	push   rsi
  4029d2:	push   rbx
  4029d3:	sub    rsp,0x40
  4029d7:	xor    edx,edx
  4029d9:	mov    rbx,rcx
  4029dc:	lea    rdi,[rsp+0x38]
  4029e1:	mov    rcx,QWORD PTR [rcx+0x8]
  4029e5:	mov    QWORD PTR [rsp+0x38],0x0
  4029ee:	mov    r8,rdi
  4029f1:	call   0x407db8
  4029f6:	mov    rcx,QWORD PTR [rsp+0x38]
  4029fb:	call   0x414e40
  402a00:	test   rax,rax
  402a03:	mov    rsi,rax
  402a06:	je     0x402b30
  402a0c:	mov    rcx,QWORD PTR [rbx+0x8]
  402a10:	mov    r8,rdi
  402a13:	mov    rdx,rax
  402a16:	call   0x407db8
  402a1b:	lea    rcx,[rip+0x26c6f]        # 0x429691
  402a22:	call   0x401b20
  402a27:	mov    rcx,rbx
  402a2a:	call   0x4052b0
  402a2f:	lea    rcx,[rip+0x26c72]        # 0x4296a8
  402a36:	call   0x401b20
  402a3b:	lea    rax,[rip+0x26c9f]        # 0x4296e1
  402a42:	mov    r9d,DWORD PTR [rip+0x6853f]        # 0x46af88
  402a49:	mov    r8,QWORD PTR [rip+0x34668]        # 0x4370b8
  402a50:	mov    rdx,QWORD PTR [rip+0x34669]        # 0x4370c0
  402a57:	mov    rcx,rbx
  402a5a:	mov    QWORD PTR [rsp+0x20],rax
  402a5f:	call   0x405380
  402a64:	mov    rax,QWORD PTR [rip+0x2f6a5]        # 0x432110
  402a6b:	mov    rax,QWORD PTR [rax+0x78]
  402a6f:	test   BYTE PTR [rax+0x4f0],0xf
  402a76:	jne    0x402af0
  402a78:	mov    rcx,QWORD PTR [rip+0x34641]        # 0x4370c0
  402a7f:	call   0x401700
  402a84:	mov    r8,QWORD PTR [rsp+0x38]
  402a89:	mov    rdx,rsi
  402a8c:	mov    rcx,rax
  402a8f:	mov    QWORD PTR [rbx+0x8],rax
  402a93:	call   0x407d98
  402a98:	mov    rcx,rsi
  402a9b:	call   0x422528
  402aa0:	mov    rcx,rbx
  402aa3:	call   0x4028d0
  402aa8:	test   eax,eax
  402aaa:	mov    esi,eax
  402aac:	js     0x402b04
  402aae:	lea    rcx,[rip+0x26c63]        # 0x429718
  402ab5:	call   0x401b20
  402aba:	mov    rcx,QWORD PTR [rbx+0x8]
  402abe:	call   0x407da0
  402ac3:	test   eax,eax
  402ac5:	jne    0x402ad0
  402ac7:	add    rsp,0x40
  402acb:	pop    rbx
  402acc:	pop    rsi
  402acd:	pop    rdi
  402ace:	ret    
  402acf:	nop
  402ad0:	lea    rcx,[rip+0x26c69]        # 0x429740
  402ad7:	call   0x401b20
  402adc:	xor    eax,eax
  402ade:	add    rsp,0x40
  402ae2:	pop    rbx
  402ae3:	pop    rsi
  402ae4:	pop    rdi
  402ae5:	ret    
  402ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402af0:	mov    rdx,QWORD PTR [rax+0x4f8]
  402af7:	mov    rcx,rbx
  402afa:	call   0x404ea0
  402aff:	jmp    0x402a78
  402b04:	call   QWORD PTR [rip+0x9991a]        # 0x49c424
  402b0a:	lea    rdx,[rip+0x26bdf]        # 0x4296f0
  402b11:	lea    rcx,[rax+0x60]
  402b15:	call   0x4016a0
  402b1a:	mov    ecx,esi
  402b1c:	call   0x407f08
  402b21:	mov    eax,esi
  402b23:	add    rsp,0x40
  402b27:	pop    rbx
  402b28:	pop    rsi
  402b29:	pop    rdi
  402b2a:	ret    
  402b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b30:	mov    eax,0xffffffe7
  402b35:	jmp    0x402ac7
  402b37:	nop    WORD PTR [rax+rax*1+0x0]
  402b40:	push   rbx
  402b41:	sub    rsp,0x20
  402b45:	call   0x4028d0
  402b4a:	test   eax,eax
  402b4c:	mov    ebx,eax
  402b4e:	js     0x402b64
  402b50:	lea    rcx,[rip+0x26c24]        # 0x42977b
  402b57:	call   0x401b20
  402b5c:	xor    eax,eax
  402b5e:	add    rsp,0x20
  402b62:	pop    rbx
  402b63:	ret    
  402b64:	call   QWORD PTR [rip+0x998ba]        # 0x49c424
  402b6a:	lea    rdx,[rip+0x26bee]        # 0x42975f
  402b71:	lea    rcx,[rax+0x60]
  402b75:	call   0x4016a0
  402b7a:	mov    ecx,ebx
  402b7c:	call   0x407f08
  402b81:	mov    eax,ebx
  402b83:	add    rsp,0x20
  402b87:	pop    rbx
  402b88:	ret    
  402b89:	nop
  402b8a:	nop
  402b8b:	nop
  402b8c:	nop
  402b8d:	nop
  402b8e:	nop
  402b8f:	nop
  402b90:	sub    rsp,0x38
  402b94:	mov    QWORD PTR [rsp+0x48],rdx
  402b99:	lea    rdx,[rsp+0x48]
  402b9e:	mov    QWORD PTR [rsp+0x50],r8
  402ba3:	mov    QWORD PTR [rsp+0x58],r9
  402ba8:	mov    QWORD PTR [rsp+0x28],rdx
  402bad:	call   0x41d9d0
  402bb2:	add    rsp,0x38
  402bb6:	ret    
  402bb7:	nop    WORD PTR [rax+rax*1+0x0]
  402bc0:	push   rbx
  402bc1:	sub    rsp,0x20
  402bc5:	mov    rbx,rcx
  402bc8:	lea    rcx,[rip+0x27171]        # 0x429d40
  402bcf:	call   0x402b90
  402bd4:	mov    rcx,rbx
  402bd7:	call   0x4080c8
  402bdc:	mov    ecx,eax
  402bde:	mov    ebx,eax
  402be0:	call   0x4080c0
  402be5:	lea    rcx,[rip+0x27176]        # 0x429d62
  402bec:	mov    rdx,rax
  402bef:	call   0x402b90
  402bf4:	mov    ecx,ebx
  402bf6:	call   0x4080b8
  402bfb:	lea    rcx,[rip+0x27174]        # 0x429d76
  402c02:	lea    edx,[rax*8+0x0]
  402c09:	add    rsp,0x20
  402c0d:	pop    rbx
  402c0e:	jmp    0x402b90
  402c10:	sub    rsp,0x38
  402c14:	mov    QWORD PTR [rsp+0x50],r8
  402c19:	lea    r8,[rsp+0x50]
  402c1e:	mov    QWORD PTR [rsp+0x58],r9
  402c23:	mov    QWORD PTR [rsp+0x28],r8
  402c28:	call   0x41d9a0
  402c2d:	add    rsp,0x38
  402c31:	ret    
  402c32:	nop    DWORD PTR [rax+0x0]
  402c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c40:	push   rdi
  402c41:	push   rsi
  402c42:	push   rbx
  402c43:	sub    rsp,0x50
  402c47:	mov    rbx,rcx
  402c4a:	lea    rcx,[rip+0x2713f]        # 0x429d90
  402c51:	mov    esi,r8d
  402c54:	call   0x402b90
  402c59:	mov    rcx,rbx
  402c5c:	call   0x408120
  402c61:	lea    rcx,[rip+0x27147]        # 0x429daf
  402c68:	mov    edx,eax
  402c6a:	call   0x402b90
  402c6f:	mov    rcx,rbx
  402c72:	call   0x408118
  402c77:	lea    rcx,[rip+0x2714a]        # 0x429dc8
  402c7e:	mov    edx,eax
  402c80:	call   0x402b90
  402c85:	mov    rcx,rbx
  402c88:	call   0x408128
  402c8d:	lea    rcx,[rip+0x2714c]        # 0x429de0
  402c94:	mov    edx,eax
  402c96:	call   0x402b90
  402c9b:	test   esi,esi
  402c9d:	jne    0x402cb0
  402c9f:	add    rsp,0x50
  402ca3:	pop    rbx
  402ca4:	pop    rsi
  402ca5:	pop    rdi
  402ca6:	ret    
  402ca7:	nop    WORD PTR [rax+rax*1+0x0]
  402cb0:	lea    rsi,[rsp+0x40]
  402cb5:	lea    rdi,[rsp+0x30]
  402cba:	mov    rcx,rbx
  402cbd:	mov    QWORD PTR [rsp+0x30],0x0
  402cc6:	mov    DWORD PTR [rsp+0x38],0x0
  402cce:	mov    r8,rsi
  402cd1:	mov    rdx,rdi
  402cd4:	mov    QWORD PTR [rsp+0x40],0x0
  402cdd:	mov    DWORD PTR [rsp+0x48],0x0
  402ce5:	mov    QWORD PTR [rsp+0x20],0x0
  402cee:	mov    QWORD PTR [rsp+0x28],0x0
  402cf7:	call   0x408130
  402cfc:	test   eax,eax
  402cfe:	mov    ebx,eax
  402d00:	jne    0x402d60
  402d02:	lea    rcx,[rsp+0x20]
  402d07:	call   0x4080f0
  402d0c:	test   eax,eax
  402d0e:	mov    ebx,eax
  402d10:	je     0x402d80
  402d12:	call   QWORD PTR [rip+0x9970c]        # 0x49c424
  402d18:	lea    rdx,[rip+0x270f8]        # 0x429e17
  402d1f:	lea    rcx,[rax+0x60]
  402d23:	mov    r8d,ebx
  402d26:	xor    esi,esi
  402d28:	call   0x402c10
  402d2d:	mov    rbx,QWORD PTR [rip+0x2f3ec]        # 0x432120
  402d34:	mov    rcx,rsi
  402d37:	call   QWORD PTR [rbx]
  402d39:	mov    rcx,QWORD PTR [rsp+0x40]
  402d3e:	call   QWORD PTR [rbx]
  402d40:	mov    rcx,QWORD PTR [rsp+0x30]
  402d45:	call   QWORD PTR [rbx]
  402d47:	mov    rcx,QWORD PTR [rsp+0x20]
  402d4c:	call   0x408110
  402d51:	nop
  402d52:	add    rsp,0x50
  402d56:	pop    rbx
  402d57:	pop    rsi
  402d58:	pop    rdi
  402d59:	ret    
  402d5a:	nop    WORD PTR [rax+rax*1+0x0]
  402d60:	call   QWORD PTR [rip+0x996be]        # 0x49c424
  402d66:	lea    rdx,[rip+0x27092]        # 0x429dff
  402d6d:	lea    rcx,[rax+0x60]
  402d71:	mov    r8d,ebx
  402d74:	xor    esi,esi
  402d76:	call   0x402c10
  402d7b:	jmp    0x402d2d
  402d7d:	nop    DWORD PTR [rax]
  402d80:	mov    rcx,QWORD PTR [rsp+0x20]
  402d85:	mov    r8,rdi
  402d88:	mov    rdx,rsi
  402d8b:	call   0x4080f8
  402d90:	test   eax,eax
  402d92:	mov    ebx,eax
  402d94:	jne    0x402de0
  402d96:	lea    rdi,[rsp+0x28]
  402d9b:	mov    rcx,QWORD PTR [rsp+0x20]
  402da0:	xor    r8d,r8d
  402da3:	mov    edx,0x1
  402da8:	mov    r9,rdi
  402dab:	call   0x408108
  402db0:	cmp    eax,0xffffffcd
  402db3:	mov    ebx,eax
  402db5:	je     0x402e00
  402db7:	call   QWORD PTR [rip+0x99667]        # 0x49c424
  402dbd:	lea    rdx,[rip+0x27094]        # 0x429e58
  402dc4:	lea    rcx,[rax+0x60]
  402dc8:	mov    r8d,ebx
  402dcb:	xor    esi,esi
  402dcd:	call   0x402c10
  402dd2:	jmp    0x402d2d
  402dd7:	nop    WORD PTR [rax+rax*1+0x0]
  402de0:	call   QWORD PTR [rip+0x9963e]        # 0x49c424
  402de6:	lea    rdx,[rip+0x2704b]        # 0x429e38
  402ded:	lea    rcx,[rax+0x60]
  402df1:	mov    r8d,ebx
  402df4:	xor    esi,esi
  402df6:	call   0x402c10
  402dfb:	jmp    0x402d2d
  402e00:	mov    rax,QWORD PTR [rip+0x2f329]        # 0x432130
  402e07:	mov    rcx,QWORD PTR [rsp+0x28]
  402e0c:	call   QWORD PTR [rax]
  402e0e:	test   rax,rax
  402e11:	mov    rsi,rax
  402e14:	je     0x402e67
  402e16:	mov    rcx,QWORD PTR [rsp+0x20]
  402e1b:	mov    r9,rdi
  402e1e:	mov    r8,rax
  402e21:	mov    edx,0x1
  402e26:	call   0x408108
  402e2b:	test   eax,eax
  402e2d:	mov    ebx,eax
  402e2f:	je     0x402e4f
  402e31:	call   QWORD PTR [rip+0x995ed]        # 0x49c424
  402e37:	lea    rdx,[rip+0x27052]        # 0x429e90
  402e3e:	lea    rcx,[rax+0x60]
  402e42:	mov    r8d,ebx
  402e45:	call   0x402c10
  402e4a:	jmp    0x402d2d
  402e4f:	mov    edx,DWORD PTR [rsp+0x28]
  402e53:	lea    rcx,[rip+0x2705a]        # 0x429eb4
  402e5a:	mov    r8,rsi
  402e5d:	call   0x402b90
  402e62:	jmp    0x402d2d
  402e67:	call   QWORD PTR [rip+0x995b7]        # 0x49c424
  402e6d:	lea    rdx,[rip+0x27006]        # 0x429e7a
  402e74:	lea    rcx,[rax+0x60]
  402e78:	mov    r8d,ebx
  402e7b:	call   0x402c10
  402e80:	jmp    0x402d2d
  402e85:	nop
  402e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e90:	sub    rsp,0x38
  402e94:	lea    rdx,[rip+0x27032]        # 0x429ecd
  402e9b:	mov    QWORD PTR [rsp+0x50],r8
  402ea0:	lea    r8,[rsp+0x50]
  402ea5:	mov    QWORD PTR [rsp+0x58],r9
  402eaa:	mov    QWORD PTR [rsp+0x28],r8
  402eaf:	call   0x41da70
  402eb4:	add    rsp,0x38
  402eb8:	ret    
  402eb9:	nop    DWORD PTR [rax+0x0]
  402ec0:	push   r14
  402ec2:	push   r13
  402ec4:	push   r12
  402ec6:	push   rbp
  402ec7:	push   rdi
  402ec8:	push   rsi
  402ec9:	push   rbx
  402eca:	sub    rsp,0x20
  402ece:	lea    rax,[rip+0x27002]        # 0x429ed7
  402ed5:	test   rdx,rdx
  402ed8:	je     0x402f4a
  402eda:	lea    r8,[rdx+rdx*2+0x1]
  402edf:	lea    rax,[rip+0x26ff9]        # 0x429edf
  402ee6:	cmp    r8,0x3ff
  402eed:	ja     0x402f4a
  402eef:	lea    r14,[rdx-0x1]
  402ef3:	lea    rsi,[rip+0x343c6]        # 0x4372c0
  402efa:	lea    r13,[rip+0x26fd3]        # 0x429ed4
  402f01:	lea    r12,[rip+0x26fcd]        # 0x429ed5
  402f08:	mov    rdi,rdx
  402f0b:	mov    rbp,rcx
  402f0e:	xor    ebx,ebx
  402f10:	movzx  r8d,BYTE PTR [rbp+rbx*1+0x0]
  402f16:	cmp    r14,rbx
  402f19:	mov    r9,r12
  402f1c:	lea    rdx,[rip+0x26faa]        # 0x429ecd
  402f23:	cmove  r9,r13
  402f27:	mov    rcx,rsi
  402f2a:	add    rbx,0x1
  402f2e:	add    rsi,0x3
  402f32:	call   0x402e90
  402f37:	cmp    rbx,rdi
  402f3a:	jne    0x402f10
  402f3c:	lea    rax,[rip+0x3437d]        # 0x4372c0
  402f43:	mov    BYTE PTR [rip+0x34775],0x0        # 0x4376bf
  402f4a:	add    rsp,0x20
  402f4e:	pop    rbx
  402f4f:	pop    rsi
  402f50:	pop    rdi
  402f51:	pop    rbp
  402f52:	pop    r12
  402f54:	pop    r13
  402f56:	pop    r14
  402f58:	ret    
  402f59:	nop    DWORD PTR [rax+0x0]
  402f60:	push   rdi
  402f61:	push   rbx
  402f62:	sub    rsp,0x78
  402f66:	xor    eax,eax
  402f68:	lea    r10,[rsp+0x40]
  402f6d:	mov    rbx,rcx
  402f70:	test   rdx,rdx
  402f73:	mov    ecx,0x6
  402f78:	mov    DWORD PTR [rsp+0x2c],0x0
  402f80:	mov    rdi,r10
  402f83:	rep stos QWORD PTR es:[rdi],rax
  402f86:	je     0x403050
  402f8c:	mov    DWORD PTR [rsp+0x40],0x1
  402f94:	mov    QWORD PTR [rsp+0x48],rdx
  402f99:	mov    al,0x1
  402f9b:	test   r8,r8
  402f9e:	je     0x402fbb
  402fa0:	mov    edx,eax
  402fa2:	add    eax,0x1
  402fa5:	lea    r9,[rdx+rdx*2]
  402fa9:	shl    r9,0x3
  402fad:	mov    DWORD PTR [rsp+r9*1+0x40],0x2
  402fb6:	mov    QWORD PTR [rsp+r9*1+0x48],r8
  402fbb:	lea    r9,[rsp+0x2c]
  402fc0:	mov    r8d,eax
  402fc3:	mov    rdx,r10
  402fc6:	mov    rcx,rbx
  402fc9:	call   0x4081c0
  402fce:	cmp    eax,0xffffffcf
  402fd1:	je     0x403080
  402fd7:	test   eax,eax
  402fd9:	js     0x403030
  402fdb:	mov    rcx,rbx
  402fde:	call   0x4081e0
  402fe3:	mov    ecx,DWORD PTR [rsp+0x2c]
  402fe7:	lea    r8,[rsp+0x30]
  402fec:	xor    r9d,r9d
  402fef:	mov    edx,eax
  402ff1:	call   0x4081c8
  402ff6:	test   eax,eax
  402ff8:	js     0x403060
  402ffa:	mov    rdx,QWORD PTR [rsp+0x30]
  402fff:	lea    rcx,[rip+0x26f72]        # 0x429f78
  403006:	call   0x402b90
  40300b:	mov    rax,QWORD PTR [rip+0x2f10e]        # 0x432120
  403012:	mov    rcx,QWORD PTR [rsp+0x30]
  403017:	call   QWORD PTR [rax]
  403019:	mov    edx,DWORD PTR [rsp+0x2c]
  40301d:	xor    eax,eax
  40301f:	test   edx,edx
  403021:	sete   al
  403024:	add    rsp,0x78
  403028:	pop    rbx
  403029:	pop    rdi
  40302a:	ret    
  40302b:	nop    DWORD PTR [rax+rax*1+0x0]
  403030:	mov    ecx,eax
  403032:	call   0x407d30
  403037:	lea    rcx,[rip+0x26eda]        # 0x429f18
  40303e:	mov    rdx,rax
  403041:	call   0x402b90
  403046:	xor    eax,eax
  403048:	add    rsp,0x78
  40304c:	pop    rbx
  40304d:	pop    rdi
  40304e:	ret    
  40304f:	nop
  403050:	xor    eax,eax
  403052:	jmp    0x402f9b
  403057:	nop    WORD PTR [rax+rax*1+0x0]
  403060:	mov    ecx,eax
  403062:	call   0x407d30
  403067:	lea    rcx,[rip+0x26eda]        # 0x429f48
  40306e:	mov    rdx,rax
  403071:	call   0x402b90
  403076:	xor    eax,eax
  403078:	add    rsp,0x78
  40307c:	pop    rbx
  40307d:	pop    rdi
  40307e:	ret    
  40307f:	nop
  403080:	lea    rcx,[rip+0x26e69]        # 0x429ef0
  403087:	call   0x402b90
  40308c:	xor    eax,eax
  40308e:	jmp    0x403024
  403090:	push   r15
  403092:	push   r14
  403094:	push   r13
  403096:	push   r12
  403098:	push   rbp
  403099:	push   rdi
  40309a:	push   rsi
  40309b:	push   rbx
  40309c:	sub    rsp,0x68
  4030a0:	cmp    edx,0x1
  4030a3:	mov    rbx,rcx
  4030a6:	mov    rsi,r8
  4030a9:	sbb    edi,edi
  4030ab:	mov    r12d,r9d
  4030ae:	and    edi,0x3
  4030b1:	call   0x408250
  4030b6:	test   eax,eax
  4030b8:	jne    0x403360
  4030be:	mov    rcx,rbx
  4030c1:	call   0x4081e0
  4030c6:	cmp    eax,0x1
  4030c9:	je     0x4031d0
  4030cf:	cmp    eax,0x2
  4030d2:	je     0x4030f2
  4030d4:	lea    rcx,[rip+0x26fb5]        # 0x42a090
  4030db:	call   0x402b90
  4030e0:	nop
  4030e1:	add    rsp,0x68
  4030e5:	pop    rbx
  4030e6:	pop    rsi
  4030e7:	pop    rdi
  4030e8:	pop    rbp
  4030e9:	pop    r12
  4030eb:	pop    r13
  4030ed:	pop    r14
  4030ef:	pop    r15
  4030f1:	ret    
  4030f2:	lea    rdx,[rip+0x26f74]        # 0x42a06d
  4030f9:	mov    rcx,rsi
  4030fc:	mov    DWORD PTR [rsp+0x3c],0x0
  403104:	call   0x402c10
  403109:	lea    rdx,[rsp+0x3c]
  40310e:	mov    rcx,rbx
  403111:	call   0x408230
  403116:	mov    rbx,rax
  403119:	mov    eax,DWORD PTR [rsp+0x3c]
  40311d:	test   eax,eax
  40311f:	je     0x4030e1
  403121:	lea    rcx,[rsp+0x40]
  403126:	call   0x407f40
  40312b:	mov    rcx,QWORD PTR [rsp+0x40]
  403130:	xor    r8d,r8d
  403133:	mov    rdx,rbx
  403136:	call   0x407f48
  40313b:	test   eax,eax
  40313d:	js     0x4033d0
  403143:	mov    rcx,QWORD PTR [rsp+0x40]
  403148:	lea    r8,[rsp+0x50]
  40314d:	mov    edx,edi
  40314f:	call   0x407f38
  403154:	test   eax,eax
  403156:	je     0x403428
  40315c:	test   r12d,r12d
  40315f:	je     0x4031bb
  403161:	lea    rdi,[rsp+0x48]
  403166:	mov    rcx,QWORD PTR [rsp+0x40]
  40316b:	xor    r8d,r8d
  40316e:	mov    edx,0x1
  403173:	mov    QWORD PTR [rsp+0x48],0x0
  40317c:	xor    ebx,ebx
  40317e:	mov    r9,rdi
  403181:	call   0x407f50
  403186:	cmp    eax,0xffffffcd
  403189:	je     0x40344f
  40318f:	test   eax,eax
  403191:	js     0x403400
  403197:	mov    rdx,rsi
  40319a:	mov    rcx,rbx
  40319d:	call   0x422538
  4031a2:	mov    ecx,0xa
  4031a7:	mov    rdx,rsi
  4031aa:	call   0x422540
  4031af:	mov    rax,QWORD PTR [rip+0x2ef6a]        # 0x432120
  4031b6:	mov    rcx,rbx
  4031b9:	call   QWORD PTR [rax]
  4031bb:	mov    rcx,QWORD PTR [rsp+0x40]
  4031c0:	call   0x407f58
  4031c5:	jmp    0x4030e1
  4031ca:	nop    WORD PTR [rax+rax*1+0x0]
  4031d0:	lea    rdx,[rsp+0x3c]
  4031d5:	mov    rcx,rbx
  4031d8:	mov    DWORD PTR [rsp+0x3c],0x0
  4031e0:	call   0x408230
  4031e5:	mov    ecx,DWORD PTR [rsp+0x3c]
  4031e9:	mov    r13,rax
  4031ec:	test   ecx,ecx
  4031ee:	je     0x403371
  4031f4:	lea    rdx,[rip+0x26dcc]        # 0x429fc7
  4031fb:	mov    rcx,rsi
  4031fe:	call   0x402c10
  403203:	mov    r8d,DWORD PTR [rsp+0x3c]
  403208:	lea    rdx,[rip+0x26dd9]        # 0x429fe8
  40320f:	mov    rcx,rsi
  403212:	call   0x402c10
  403217:	mov    edx,DWORD PTR [rsp+0x3c]
  40321b:	test   edx,edx
  40321d:	je     0x4030e1
  403223:	lea    rax,[rsp+0x48]
  403228:	xor    ebx,ebx
  40322a:	lea    r14,[rsp+0x40]
  40322f:	lea    r15,[rsp+0x50]
  403234:	mov    QWORD PTR [rsp+0x20],rax
  403239:	mov    rax,QWORD PTR [rip+0x2eee0]        # 0x432120
  403240:	mov    QWORD PTR [rsp+0x28],rax
  403245:	jmp    0x4032d8
  40324a:	nop    WORD PTR [rax+rax*1+0x0]
  403250:	test   r12d,r12d
  403253:	je     0x4032c1
  403255:	mov    r9,QWORD PTR [rsp+0x20]
  40325a:	mov    rcx,QWORD PTR [rsp+0x40]
  40325f:	xor    r8d,r8d
  403262:	mov    edx,0x1
  403267:	mov    QWORD PTR [rsp+0x48],0x0
  403270:	xor    ebp,ebp
  403272:	call   0x407ce0
  403277:	cmp    eax,0xffffffcd
  40327a:	je     0x403394
  403280:	test   eax,eax
  403282:	js     0x403400
  403288:	mov    rax,QWORD PTR [rsp+0x48]
  40328d:	mov    rdx,rsi
  403290:	mov    ecx,0xa
  403295:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  40329a:	call   0x422540
  40329f:	mov    rdx,rsi
  4032a2:	mov    rcx,rbp
  4032a5:	call   0x422538
  4032aa:	mov    ecx,0xa
  4032af:	mov    rdx,rsi
  4032b2:	call   0x422540
  4032b7:	mov    rax,QWORD PTR [rsp+0x28]
  4032bc:	mov    rcx,rbp
  4032bf:	call   QWORD PTR [rax]
  4032c1:	mov    rcx,QWORD PTR [rsp+0x40]
  4032c6:	add    ebx,0x1
  4032c9:	call   0x407ce8
  4032ce:	cmp    ebx,DWORD PTR [rsp+0x3c]
  4032d2:	jae    0x4030e1
  4032d8:	mov    rcx,r14
  4032db:	call   0x407cc8
  4032e0:	mov    edx,ebx
  4032e2:	mov    rcx,QWORD PTR [rsp+0x40]
  4032e7:	xor    r8d,r8d
  4032ea:	shl    rdx,0x4
  4032ee:	add    rdx,r13
  4032f1:	call   0x407cd0
  4032f6:	test   eax,eax
  4032f8:	js     0x4033d0
  4032fe:	lea    rdx,[rip+0x26d25]        # 0x42a02a
  403305:	mov    r8d,ebx
  403308:	mov    rcx,rsi
  40330b:	call   0x402c10
  403310:	test   ebx,ebx
  403312:	je     0x403390
  403314:	cmp    edi,0x3
  403317:	jne    0x403390
  403319:	mov    edx,0x1
  40331e:	mov    edi,0x1
  403323:	mov    rcx,QWORD PTR [rsp+0x40]
  403328:	mov    r8,r15
  40332b:	call   0x407cb8
  403330:	test   eax,eax
  403332:	jne    0x403250
  403338:	mov    r8,QWORD PTR [rsp+0x50]
  40333d:	lea    rdx,[rip+0x26d02]        # 0x42a046
  403344:	mov    rcx,rsi
  403347:	call   0x402c10
  40334c:	mov    rax,QWORD PTR [rip+0x2edcd]        # 0x432120
  403353:	mov    rcx,QWORD PTR [rsp+0x50]
  403358:	call   QWORD PTR [rax]
  40335a:	jmp    0x403250
  40335f:	nop
  403360:	lea    rcx,[rip+0x26c21]        # 0x429f88
  403367:	call   0x402b90
  40336c:	jmp    0x4030be
  403371:	call   QWORD PTR [rip+0x990ad]        # 0x49c424
  403377:	lea    rdx,[rip+0x26c31]        # 0x429faf
  40337e:	lea    rcx,[rax+0x60]
  403382:	call   0x402c10
  403387:	jmp    0x4030e1
  40338c:	nop    DWORD PTR [rax+0x0]
  403390:	mov    edx,edi
  403392:	jmp    0x403323
  403394:	mov    rax,QWORD PTR [rsp+0x48]
  403399:	lea    rcx,[rax+0x1]
  40339d:	call   0x414e40
  4033a2:	test   rax,rax
  4033a5:	mov    rbp,rax
  4033a8:	je     0x40347b
  4033ae:	mov    r9,QWORD PTR [rsp+0x20]
  4033b3:	mov    rcx,QWORD PTR [rsp+0x40]
  4033b8:	mov    r8,rax
  4033bb:	mov    edx,0x1
  4033c0:	call   0x407ce0
  4033c5:	jmp    0x403280
  4033ca:	nop    WORD PTR [rax+rax*1+0x0]
  4033d0:	mov    ecx,eax
  4033d2:	call   0x407d30
  4033d7:	mov    rbx,rax
  4033da:	call   QWORD PTR [rip+0x99044]        # 0x49c424
  4033e0:	lea    rdx,[rip+0x26c2f]        # 0x42a016
  4033e7:	lea    rcx,[rax+0x60]
  4033eb:	mov    r8,rbx
  4033ee:	call   0x402c10
  4033f3:	jmp    0x4030e1
  4033f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403400:	mov    ecx,eax
  403402:	call   0x407d30
  403407:	mov    rbx,rax
  40340a:	call   QWORD PTR [rip+0x99014]        # 0x49c424
  403410:	lea    rdx,[rip+0x26c42]        # 0x42a059
  403417:	lea    rcx,[rax+0x60]
  40341b:	mov    r8,rbx
  40341e:	call   0x402c10
  403423:	jmp    0x4030e1
  403428:	mov    r8,QWORD PTR [rsp+0x50]
  40342d:	lea    rdx,[rip+0x26c56]        # 0x42a08a
  403434:	mov    rcx,rsi
  403437:	call   0x402c10
  40343c:	mov    rax,QWORD PTR [rip+0x2ecdd]        # 0x432120
  403443:	mov    rcx,QWORD PTR [rsp+0x50]
  403448:	call   QWORD PTR [rax]
  40344a:	jmp    0x40315c
  40344f:	mov    rcx,QWORD PTR [rsp+0x48]
  403454:	call   0x414e40
  403459:	test   rax,rax
  40345c:	mov    rbx,rax
  40345f:	je     0x40347b
  403461:	mov    rcx,QWORD PTR [rsp+0x40]
  403466:	mov    r9,rdi
  403469:	mov    r8,rax
  40346c:	mov    edx,0x1
  403471:	call   0x407f50
  403476:	jmp    0x40318f
  40347b:	call   QWORD PTR [rip+0x98fa3]        # 0x49c424
  403481:	lea    rdx,[rip+0x26bc2]        # 0x42a04a
  403488:	lea    rcx,[rax+0x60]
  40348c:	call   0x402c10
  403491:	mov    ecx,0x1
  403496:	call   0x422578
  40349b:	nop
  40349c:	nop    DWORD PTR [rax+0x0]
  4034a0:	push   rdi
  4034a1:	push   rsi
  4034a2:	push   rbx
  4034a3:	sub    rsp,0x20
  4034a7:	mov    edi,r8d
  4034aa:	mov    rbx,rcx
  4034ad:	mov    esi,edx
  4034af:	call   QWORD PTR [rip+0x98f6f]        # 0x49c424
  4034b5:	lea    r8,[rax+0x30]
  4034b9:	mov    r9d,edi
  4034bc:	mov    edx,esi
  4034be:	mov    rcx,rbx
  4034c1:	add    rsp,0x20
  4034c5:	pop    rbx
  4034c6:	pop    rsi
  4034c7:	pop    rdi
  4034c8:	jmp    0x403090
  4034cd:	nop    DWORD PTR [rax]
  4034d0:	push   r14
  4034d2:	push   r13
  4034d4:	push   r12
  4034d6:	push   rbp
  4034d7:	push   rdi
  4034d8:	push   rsi
  4034d9:	push   rbx
  4034da:	sub    rsp,0x180
  4034e1:	mov    rbx,rcx
  4034e4:	mov    ebp,r8d
  4034e7:	mov    edi,edx
  4034e9:	mov    QWORD PTR [rsp+0x38],0x21
  4034f2:	call   0x407db0
  4034f7:	lea    rcx,[rip+0x26bb2]        # 0x42a0b0
  4034fe:	mov    rdx,rax
  403501:	mov    rsi,rax
  403504:	call   0x402b90
  403509:	mov    rax,QWORD PTR [rip+0x2ec10]        # 0x432120
  403510:	mov    rcx,rsi
  403513:	lea    rsi,[rsp+0x50]
  403518:	call   QWORD PTR [rax]
  40351a:	lea    r8,[rsp+0x38]
  40351f:	mov    rdx,rsi
  403522:	mov    rcx,rbx
  403525:	call   0x407da8
  40352a:	mov    rdx,QWORD PTR [rsp+0x38]
  40352f:	mov    rcx,rsi
  403532:	call   0x402ec0
  403537:	lea    rcx,[rip+0x26b85]        # 0x42a0c3
  40353e:	mov    rdx,rax
  403541:	call   0x402b90
  403546:	mov    rcx,rbx
  403549:	call   0x408008
  40354e:	mov    rcx,rbx
  403551:	mov    esi,eax
  403553:	call   0x408268
  403558:	cmp    eax,0x5
  40355b:	ja     0x40357d
  40355d:	lea    r10,[rip+0x26db4]        # 0x42a318
  403564:	mov    r9d,eax
  403567:	movsxd rax,DWORD PTR [r10+r9*4]
  40356b:	add    r10,rax
  40356e:	jmp    r10
  403571:	lea    rcx,[rip+0x26bf4]        # 0x42a16c
  403578:	call   0x402b90
  40357d:	lea    r13,[rsp+0x34]
  403582:	lea    r12,[rsp+0x40]
  403587:	mov    rcx,rbx
  40358a:	call   0x407e78
  40358f:	mov    ecx,eax
  403591:	call   0x407e80
  403596:	test   rax,rax
  403599:	lea    rdx,[rip+0x26afe]        # 0x42a09e
  4035a0:	je     0x4035b4
  4035a2:	mov    rcx,rbx
  4035a5:	call   0x407e78
  4035aa:	mov    ecx,eax
  4035ac:	call   0x407e80
  4035b1:	mov    rdx,rax
  4035b4:	lea    rcx,[rip+0x26c10]        # 0x42a1cb
  4035bb:	call   0x402b90
  4035c0:	mov    ecx,esi
  4035c2:	call   0x408000
  4035c7:	test   rax,rax
  4035ca:	lea    rdx,[rip+0x26acd]        # 0x42a09e
  4035d1:	je     0x4035dd
  4035d3:	mov    ecx,esi
  4035d5:	call   0x408000
  4035da:	mov    rdx,rax
  4035dd:	lea    rcx,[rip+0x26bf6]        # 0x42a1da
  4035e4:	call   0x402b90
  4035e9:	mov    rcx,rbx
  4035ec:	call   0x407d90
  4035f1:	test   eax,eax
  4035f3:	jne    0x4038b1
  4035f9:	mov    rcx,rbx
  4035fc:	call   0x407d88
  403601:	test   eax,eax
  403603:	jne    0x403873
  403609:	mov    rcx,rbx
  40360c:	call   0x408198
  403611:	mov    ecx,eax
  403613:	call   0x408180
  403618:	test   rax,rax
  40361b:	lea    rdx,[rip+0x26a7c]        # 0x42a09e
  403622:	je     0x403636
  403624:	mov    rcx,rbx
  403627:	call   0x408198
  40362c:	mov    ecx,eax
  40362e:	call   0x408180
  403633:	mov    rdx,rax
  403636:	lea    rcx,[rip+0x26be1]        # 0x42a21e
  40363d:	call   0x402b90
  403642:	mov    rcx,rbx
  403645:	call   0x407fe8
  40364a:	mov    ecx,eax
  40364c:	call   0x407fe0
  403651:	test   rax,rax
  403654:	lea    rdx,[rip+0x26a43]        # 0x42a09e
  40365b:	je     0x40366f
  40365d:	mov    rcx,rbx
  403660:	call   0x407fe8
  403665:	mov    ecx,eax
  403667:	call   0x407fe0
  40366c:	mov    rdx,rax
  40366f:	lea    rcx,[rip+0x26bb6]        # 0x42a22c
  403676:	call   0x402b90
  40367b:	mov    rcx,rbx
  40367e:	call   0x408158
  403683:	mov    ecx,eax
  403685:	call   0x408150
  40368a:	test   rax,rax
  40368d:	lea    rdx,[rip+0x26a0a]        # 0x42a09e
  403694:	je     0x4036a8
  403696:	mov    rcx,rbx
  403699:	call   0x408158
  40369e:	mov    ecx,eax
  4036a0:	call   0x408150
  4036a5:	mov    rdx,rax
  4036a8:	lea    rcx,[rip+0x26b88]        # 0x42a237
  4036af:	call   0x402b90
  4036b4:	lea    rcx,[rip+0x26b8f]        # 0x42a24a
  4036bb:	call   0x402b90
  4036c0:	mov    rcx,rbx
  4036c3:	call   0x407dc0
  4036c8:	test   eax,eax
  4036ca:	jne    0x403862
  4036d0:	mov    rcx,rbx
  4036d3:	call   0x407de8
  4036d8:	test   eax,eax
  4036da:	jne    0x403851
  4036e0:	mov    rcx,rbx
  4036e3:	call   0x407dc8
  4036e8:	test   eax,eax
  4036ea:	jne    0x403840
  4036f0:	mov    edx,0x1
  4036f5:	mov    rcx,rbx
  4036f8:	call   0x407f60
  4036fd:	test   eax,eax
  4036ff:	jne    0x403810
  403705:	lea    rcx,[rip+0x26b95]        # 0x42a2a1
  40370c:	call   0x402b90
  403711:	mov    rdx,r13
  403714:	mov    rcx,rbx
  403717:	call   0x407d48
  40371c:	test   eax,eax
  40371e:	je     0x4037f0
  403724:	mov    rdx,r12
  403727:	mov    rcx,rbx
  40372a:	call   0x4082a0
  40372f:	test   eax,eax
  403731:	je     0x4037d4
  403737:	test   edi,edi
  403739:	mov    rsi,QWORD PTR [rip+0x98ce4]        # 0x49c424
  403740:	jne    0x403761
  403742:	call   rsi
  403744:	lea    rcx,[rax+0x30]
  403748:	call   0x422560
  40374d:	xor    eax,eax
  40374f:	add    rsp,0x180
  403756:	pop    rbx
  403757:	pop    rsi
  403758:	pop    rdi
  403759:	pop    rbp
  40375a:	pop    r12
  40375c:	pop    r13
  40375e:	pop    r14
  403760:	ret    
  403761:	lea    r8,[rsp+0x80]
  403769:	xor    edx,edx
  40376b:	mov    rcx,rbx
  40376e:	call   0x407dd0
  403773:	test   eax,eax
  403775:	jne    0x4038f0
  40377b:	lea    rcx,[rip+0x26b6e]        # 0x42a2f0
  403782:	xor    ebx,ebx
  403784:	call   0x402b90
  403789:	mov    eax,DWORD PTR [rsp+0x88]
  403790:	test   eax,eax
  403792:	je     0x4037bc
  403794:	mov    rax,QWORD PTR [rsp+0x80]
  40379c:	lea    rcx,[rip+0x26b6e]        # 0x42a311
  4037a3:	movzx  edx,BYTE PTR [rax+rbx*1]
  4037a7:	add    rbx,0x1
  4037ab:	call   0x402b90
  4037b0:	mov    eax,DWORD PTR [rsp+0x88]
  4037b7:	cmp    rax,rbx
  4037ba:	ja     0x403794
  4037bc:	lea    rcx,[rip+0x26ade]        # 0x42a2a1
  4037c3:	call   0x402b90
  4037c8:	mov    rsi,QWORD PTR [rip+0x98c55]        # 0x49c424
  4037cf:	jmp    0x403742
  4037d4:	mov    r8,QWORD PTR [rsp+0x40]
  4037d9:	mov    edx,DWORD PTR [rsp+0x48]
  4037dd:	lea    rcx,[rip+0x26ad3]        # 0x42a2b7
  4037e4:	call   0x402b90
  4037e9:	jmp    0x403737
  4037ee:	xchg   ax,ax
  4037f0:	mov    ecx,DWORD PTR [rsp+0x34]
  4037f4:	call   0x407d50
  4037f9:	lea    rcx,[rip+0x26aa3]        # 0x42a2a3
  403800:	mov    rdx,rax
  403803:	call   0x402b90
  403808:	jmp    0x403724
  40380d:	nop    DWORD PTR [rax]
  403810:	xor    edx,edx
  403812:	mov    rcx,rbx
  403815:	call   0x407f60
  40381a:	lea    rdx,[rip+0x26885]        # 0x42a0a6
  403821:	test   eax,eax
  403823:	lea    rax,[rip+0x266aa]        # 0x429ed4
  40382a:	lea    rcx,[rip+0x26a58]        # 0x42a289
  403831:	cmovne rdx,rax
  403835:	call   0x402b90
  40383a:	jmp    0x403705
  40383f:	nop
  403840:	lea    rcx,[rip+0x26a3c]        # 0x42a283
  403847:	call   0x402b90
  40384c:	jmp    0x4036f0
  403851:	lea    rcx,[rip+0x26a16]        # 0x42a26e
  403858:	call   0x402b90
  40385d:	jmp    0x4036e0
  403862:	lea    rcx,[rip+0x269ec]        # 0x42a255
  403869:	call   0x402b90
  40386e:	jmp    0x4036d0
  403873:	mov    rcx,rbx
  403876:	call   0x407d88
  40387b:	mov    ecx,eax
  40387d:	call   0x407d80
  403882:	test   rax,rax
  403885:	lea    rdx,[rip+0x26812]        # 0x42a09e
  40388c:	je     0x4038a0
  40388e:	mov    rcx,rbx
  403891:	call   0x407d88
  403896:	mov    ecx,eax
  403898:	call   0x407d80
  40389d:	mov    rdx,rax
  4038a0:	lea    rcx,[rip+0x2695f]        # 0x42a206
  4038a7:	call   0x402b90
  4038ac:	jmp    0x403609
  4038b1:	mov    rcx,rbx
  4038b4:	call   0x407d90
  4038b9:	mov    ecx,eax
  4038bb:	call   0x407d80
  4038c0:	test   rax,rax
  4038c3:	lea    rdx,[rip+0x267d4]        # 0x42a09e
  4038ca:	je     0x4038de
  4038cc:	mov    rcx,rbx
  4038cf:	call   0x407d90
  4038d4:	mov    ecx,eax
  4038d6:	call   0x407d80
  4038db:	mov    rdx,rax
  4038de:	lea    rcx,[rip+0x26909]        # 0x42a1ee
  4038e5:	call   0x402b90
  4038ea:	jmp    0x4035f9
  4038ef:	nop
  4038f0:	mov    ecx,eax
  4038f2:	call   0x407d30
  4038f7:	mov    rbx,rax
  4038fa:	call   rsi
  4038fc:	lea    rdx,[rip+0x269d2]        # 0x42a2d5
  403903:	lea    rcx,[rax+0x60]
  403907:	mov    r8,rbx
  40390a:	call   0x402c10
  40390f:	jmp    0x403742
  403914:	lea    r13,[rsp+0x34]
  403919:	lea    r12,[rsp+0x40]
  40391e:	lea    r14,[rsp+0x80]
  403926:	mov    DWORD PTR [rsp+0x20],0x0
  40392e:	mov    rcx,rbx
  403931:	mov    QWORD PTR [rsp+0x40],0x100
  40393a:	mov    r9,r13
  40393d:	mov    r8,r12
  403940:	mov    rdx,r14
  403943:	call   0x407de0
  403948:	test   eax,eax
  40394a:	je     0x403aa2
  403950:	test   bpl,0x2
  403954:	jne    0x403a80
  40395a:	and    ebp,0x1
  40395d:	jne    0x403a65
  403963:	lea    eax,[rsi-0x2]
  403966:	cmp    eax,0x1
  403969:	jbe    0x403ad4
  40396f:	lea    eax,[rsi-0xc]
  403972:	cmp    eax,0x1
  403975:	ja     0x403587
  40397b:	lea    rdx,[rip+0x267df]        # 0x42a161
  403982:	mov    rcx,rbx
  403985:	call   0x402bc0
  40398a:	jmp    0x403587
  40398f:	nop
  403990:	cmp    esi,0xb
  403993:	je     0x403ac0
  403999:	lea    rdx,[rip+0x26735]        # 0x42a0d5
  4039a0:	mov    r8d,edi
  4039a3:	mov    rcx,rbx
  4039a6:	lea    r13,[rsp+0x34]
  4039ab:	lea    r12,[rsp+0x40]
  4039b0:	call   0x402c40
  4039b5:	jmp    0x403587
  4039ba:	nop    WORD PTR [rax+rax*1+0x0]
  4039c0:	mov    rcx,rbx
  4039c3:	call   0x407d60
  4039c8:	test   rax,rax
  4039cb:	je     0x40357d
  4039d1:	mov    rcx,rbx
  4039d4:	lea    r13,[rsp+0x34]
  4039d9:	lea    r12,[rsp+0x40]
  4039de:	call   0x407d60
  4039e3:	lea    rcx,[rip+0x266f6]        # 0x42a0e0
  4039ea:	mov    rdx,rax
  4039ed:	call   0x402b90
  4039f2:	jmp    0x403587
  4039f7:	nop    WORD PTR [rax+rax*1+0x0]
  403a00:	mov    rcx,rbx
  403a03:	call   0x407e60
  403a08:	test   rax,rax
  403a0b:	je     0x403a24
  403a0d:	mov    rcx,rbx
  403a10:	call   0x407e60
  403a15:	lea    rcx,[rip+0x266f4]        # 0x42a110
  403a1c:	mov    rdx,rax
  403a1f:	call   0x402b90
  403a24:	mov    rcx,rbx
  403a27:	call   0x407e50
  403a2c:	test   rax,rax
  403a2f:	je     0x403a48
  403a31:	mov    rcx,rbx
  403a34:	call   0x407e50
  403a39:	lea    rcx,[rip+0x266f8]        # 0x42a138
  403a40:	mov    rdx,rax
  403a43:	call   0x402b90
  403a48:	cmp    esi,0xa
  403a4b:	lea    r13,[rsp+0x34]
  403a50:	lea    r12,[rsp+0x40]
  403a55:	je     0x403ad4
  403a57:	cmp    esi,0xe
  403a5a:	jne    0x403587
  403a60:	jmp    0x40397b
  403a65:	mov    r8d,0x1
  403a6b:	mov    edx,edi
  403a6d:	mov    rcx,rbx
  403a70:	call   0x4034a0
  403a75:	jmp    0x403963
  403a7a:	nop    WORD PTR [rax+rax*1+0x0]
  403a80:	mov    rcx,rbx
  403a83:	call   0x408238
  403a88:	test   rax,rax
  403a8b:	jne    0x40395a
  403a91:	lea    rcx,[rip+0x26710]        # 0x42a1a8
  403a98:	call   0x402b90
  403a9d:	jmp    0x40395a
  403aa2:	mov    edx,DWORD PTR [rsp+0x34]
  403aa6:	lea    rcx,[rip+0x266d8]        # 0x42a185
  403aad:	mov    r8,r14
  403ab0:	call   0x402b90
  403ab5:	jmp    0x403950
  403aba:	nop    WORD PTR [rax+rax*1+0x0]
  403ac0:	lea    rdx,[rip+0x2660e]        # 0x42a0d5
  403ac7:	mov    rcx,rbx
  403aca:	call   0x402bc0
  403acf:	jmp    0x40357d
  403ad4:	lea    rdx,[rip+0x26686]        # 0x42a161
  403adb:	mov    r8d,edi
  403ade:	mov    rcx,rbx
  403ae1:	call   0x402c40
  403ae6:	jmp    0x403587
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  403af0:	push   rbx
  403af1:	sub    rsp,0x40
  403af5:	mov    rbx,rcx
  403af8:	call   0x408250
  403afd:	test   eax,eax
  403aff:	jne    0x403c30
  403b05:	mov    rcx,rbx
  403b08:	call   0x4081e0
  403b0d:	cmp    eax,0x1
  403b10:	je     0x403ba0
  403b16:	cmp    eax,0x2
  403b19:	je     0x403b30
  403b1b:	lea    rcx,[rip+0x2656e]        # 0x42a090
  403b22:	call   0x402b90
  403b27:	nop
  403b28:	add    rsp,0x40
  403b2c:	pop    rbx
  403b2d:	ret    
  403b2e:	xchg   ax,ax
  403b30:	lea    rdx,[rsp+0x24]
  403b35:	mov    rcx,rbx
  403b38:	mov    DWORD PTR [rsp+0x24],0x0
  403b40:	call   0x408230
  403b45:	mov    rbx,rax
  403b48:	mov    eax,DWORD PTR [rsp+0x24]
  403b4c:	test   eax,eax
  403b4e:	je     0x403b28
  403b50:	lea    rcx,[rsp+0x28]
  403b55:	call   0x407f40
  403b5a:	mov    rcx,QWORD PTR [rsp+0x28]
  403b5f:	xor    r8d,r8d
  403b62:	mov    rdx,rbx
  403b65:	call   0x407f48
  403b6a:	test   eax,eax
  403b6c:	js     0x403c60
  403b72:	mov    rcx,QWORD PTR [rsp+0x28]
  403b77:	lea    r8,[rsp+0x30]
  403b7c:	mov    edx,0x3
  403b81:	call   0x407f38
  403b86:	test   eax,eax
  403b88:	je     0x403c90
  403b8e:	mov    rcx,QWORD PTR [rsp+0x28]
  403b93:	call   0x407f58
  403b98:	jmp    0x403b28
  403b9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ba0:	lea    rdx,[rsp+0x24]
  403ba5:	mov    rcx,rbx
  403ba8:	mov    DWORD PTR [rsp+0x24],0x0
  403bb0:	call   0x408230
  403bb5:	mov    edx,DWORD PTR [rsp+0x24]
  403bb9:	mov    rbx,rax
  403bbc:	test   edx,edx
  403bbe:	je     0x403c41
  403bc4:	lea    rcx,[rsp+0x28]
  403bc9:	call   0x407cc8
  403bce:	mov    rcx,QWORD PTR [rsp+0x28]
  403bd3:	xor    r8d,r8d
  403bd6:	mov    rdx,rbx
  403bd9:	call   0x407cd0
  403bde:	test   eax,eax
  403be0:	js     0x403c60
  403be2:	mov    rcx,QWORD PTR [rsp+0x28]
  403be7:	lea    r8,[rsp+0x30]
  403bec:	mov    edx,0x3
  403bf1:	call   0x407cb8
  403bf6:	test   eax,eax
  403bf8:	jne    0x403c19
  403bfa:	mov    rdx,QWORD PTR [rsp+0x30]
  403bff:	lea    rcx,[rip+0x2672a]        # 0x42a330
  403c06:	call   0x402b90
  403c0b:	mov    rax,QWORD PTR [rip+0x2e50e]        # 0x432120
  403c12:	mov    rcx,QWORD PTR [rsp+0x30]
  403c17:	call   QWORD PTR [rax]
  403c19:	mov    rcx,QWORD PTR [rsp+0x28]
  403c1e:	call   0x407ce8
  403c23:	nop
  403c24:	add    rsp,0x40
  403c28:	pop    rbx
  403c29:	ret    
  403c2a:	nop    WORD PTR [rax+rax*1+0x0]
  403c30:	lea    rcx,[rip+0x26351]        # 0x429f88
  403c37:	call   0x402b90
  403c3c:	jmp    0x403b05
  403c41:	call   QWORD PTR [rip+0x987dd]        # 0x49c424
  403c47:	lea    rdx,[rip+0x26361]        # 0x429faf
  403c4e:	lea    rcx,[rax+0x60]
  403c52:	call   0x402c10
  403c57:	nop
  403c58:	add    rsp,0x40
  403c5c:	pop    rbx
  403c5d:	ret    
  403c5e:	xchg   ax,ax
  403c60:	mov    ecx,eax
  403c62:	call   0x407d30
  403c67:	mov    rbx,rax
  403c6a:	call   QWORD PTR [rip+0x987b4]        # 0x49c424
  403c70:	lea    rdx,[rip+0x2639f]        # 0x42a016
  403c77:	lea    rcx,[rax+0x60]
  403c7b:	mov    r8,rbx
  403c7e:	call   0x402c10
  403c83:	jmp    0x403b28
  403c88:	nop    DWORD PTR [rax+rax*1+0x0]
  403c90:	mov    rdx,QWORD PTR [rsp+0x30]
  403c95:	lea    rcx,[rip+0x266a6]        # 0x42a342
  403c9c:	call   0x402b90
  403ca1:	mov    rax,QWORD PTR [rip+0x2e478]        # 0x432120
  403ca8:	mov    rcx,QWORD PTR [rsp+0x30]
  403cad:	call   QWORD PTR [rax]
  403caf:	jmp    0x403b8e
  403cb4:	xchg   ax,ax
  403cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cc0:	push   r15
  403cc2:	push   r14
  403cc4:	push   r13
  403cc6:	push   r12
  403cc8:	push   rbp
  403cc9:	push   rdi
  403cca:	push   rsi
  403ccb:	push   rbx
  403ccc:	sub    rsp,0x78
  403cd0:	test   rcx,rcx
  403cd3:	mov    rbx,rcx
  403cd6:	mov    ebp,edx
  403cd8:	je     0x404065
  403cde:	mov    rdx,rcx
  403ce1:	lea    rcx,[rip+0x2666e]        # 0x42a356
  403ce8:	call   0x402b90
  403ced:	lea    rcx,[rsp+0x60]
  403cf2:	lea    r8,[rsp+0x58]
  403cf7:	mov    rdx,rbx
  403cfa:	call   0x407ed0
  403cff:	test   eax,eax
  403d01:	js     0x404543
  403d07:	xor    ebx,ebx
  403d09:	lea    rdi,[rsp+0x50]
  403d0e:	lea    r12,[rsp+0x40]
  403d13:	lea    rbp,[rsp+0x54]
  403d18:	jmp    0x403d7a
  403d1a:	nop    WORD PTR [rax+rax*1+0x0]
  403d20:	cmp    eax,0xffffffeb
  403d23:	je     0x403d76
  403d25:	mov    ecx,DWORD PTR [rsp+0x50]
  403d29:	xor    r9d,r9d
  403d2c:	xor    r8d,r8d
  403d2f:	mov    QWORD PTR [rsp+0x28],rbp
  403d34:	mov    QWORD PTR [rsp+0x20],0x0
  403d3d:	mov    rdx,r12
  403d40:	call   0x408160
  403d45:	test   rax,rax
  403d48:	mov    rsi,rax
  403d4b:	je     0x403d76
  403d4d:	mov    ecx,DWORD PTR [rsp+0x54]
  403d51:	call   0x407e80
  403d56:	movzx  r9d,BYTE PTR [rsp+0x41]
  403d5c:	movzx  r8d,BYTE PTR [rsp+0x40]
  403d62:	lea    rcx,[rip+0x26618]        # 0x42a381
  403d69:	mov    QWORD PTR [rsp+0x20],rax
  403d6e:	mov    rdx,rsi
  403d71:	call   0x402b90
  403d76:	add    rbx,0x1
  403d7a:	mov    rcx,QWORD PTR [rsp+0x60]
  403d7f:	mov    r8,rdi
  403d82:	mov    edx,ebx
  403d84:	call   0x407ed8
  403d89:	cmp    eax,0xffffffc8
  403d8c:	jne    0x403d20
  403d8e:	lea    rcx,[rip+0x2650c]        # 0x42a2a1
  403d95:	lea    rdi,[rsp+0x68]
  403d9a:	call   0x402b90
  403d9f:	mov    rcx,QWORD PTR [rsp+0x60]
  403da4:	mov    rdx,rdi
  403da7:	call   0x407ef0
  403dac:	lea    rcx,[rip+0x265e7]        # 0x42a39a
  403db3:	mov    esi,eax
  403db5:	call   0x402b90
  403dba:	test   esi,esi
  403dbc:	je     0x404054
  403dc2:	xor    ebx,ebx
  403dc4:	cmp    rbx,rsi
  403dc7:	jae    0x403e03
  403dc9:	mov    rax,QWORD PTR [rsp+0x68]
  403dce:	mov    ecx,DWORD PTR [rax+rbx*4]
  403dd1:	add    rbx,0x1
  403dd5:	call   0x4081d8
  403dda:	lea    rcx,[rip+0x265d3]        # 0x42a3b4
  403de1:	mov    rdx,rax
  403de4:	call   0x402b90
  403de9:	cmp    rbx,rsi
  403dec:	je     0x403fb1
  403df2:	lea    rcx,[rip+0x265c4]        # 0x42a3bd
  403df9:	call   0x402b90
  403dfe:	cmp    rbx,rsi
  403e01:	jb     0x403dc9
  403e03:	mov    rcx,QWORD PTR [rsp+0x60]
  403e08:	mov    rdx,rdi
  403e0b:	call   0x407ec8
  403e10:	lea    rcx,[rip+0x265a9]        # 0x42a3c0
  403e17:	mov    esi,eax
  403e19:	call   0x402b90
  403e1e:	test   esi,esi
  403e20:	je     0x404043
  403e26:	xor    ebx,ebx
  403e28:	cmp    rbx,rsi
  403e2b:	jae    0x403e67
  403e2d:	mov    rax,QWORD PTR [rsp+0x68]
  403e32:	mov    ecx,DWORD PTR [rax+rbx*4]
  403e35:	add    rbx,0x1
  403e39:	call   0x407e80
  403e3e:	lea    rcx,[rip+0x26587]        # 0x42a3cc
  403e45:	mov    rdx,rax
  403e48:	call   0x402b90
  403e4d:	cmp    rsi,rbx
  403e50:	je     0x403fc2
  403e56:	lea    rcx,[rip+0x26560]        # 0x42a3bd
  403e5d:	call   0x402b90
  403e62:	cmp    rbx,rsi
  403e65:	jb     0x403e2d
  403e67:	mov    rcx,QWORD PTR [rsp+0x60]
  403e6c:	mov    rdx,rdi
  403e6f:	call   0x407ee8
  403e74:	lea    rcx,[rip+0x26559]        # 0x42a3d4
  403e7b:	mov    esi,eax
  403e7d:	call   0x402b90
  403e82:	test   esi,esi
  403e84:	je     0x404032
  403e8a:	xor    ebx,ebx
  403e8c:	cmp    rbx,rsi
  403e8f:	jae    0x403ecb
  403e91:	mov    rax,QWORD PTR [rsp+0x68]
  403e96:	mov    ecx,DWORD PTR [rax+rbx*4]
  403e99:	add    rbx,0x1
  403e9d:	call   0x408150
  403ea2:	lea    rcx,[rip+0x26539]        # 0x42a3e2
  403ea9:	mov    rdx,rax
  403eac:	call   0x402b90
  403eb1:	cmp    rsi,rbx
  403eb4:	je     0x403fe0
  403eba:	lea    rcx,[rip+0x264fc]        # 0x42a3bd
  403ec1:	call   0x402b90
  403ec6:	cmp    rbx,rsi
  403ec9:	jb     0x403e91
  403ecb:	mov    rcx,QWORD PTR [rsp+0x60]
  403ed0:	mov    rdx,rdi
  403ed3:	call   0x407ee0
  403ed8:	lea    rcx,[rip+0x2650b]        # 0x42a3ea
  403edf:	mov    esi,eax
  403ee1:	call   0x402b90
  403ee6:	test   esi,esi
  403ee8:	je     0x404021
  403eee:	xor    ebx,ebx
  403ef0:	cmp    rbx,rsi
  403ef3:	jae    0x403f2f
  403ef5:	mov    rax,QWORD PTR [rsp+0x68]
  403efa:	mov    ecx,DWORD PTR [rax+rbx*4]
  403efd:	add    rbx,0x1
  403f01:	call   0x4080c0
  403f06:	lea    rcx,[rip+0x264ef]        # 0x42a3fc
  403f0d:	mov    rdx,rax
  403f10:	call   0x402b90
  403f15:	cmp    rsi,rbx
  403f18:	je     0x403ff4
  403f1e:	lea    rcx,[rip+0x26498]        # 0x42a3bd
  403f25:	call   0x402b90
  403f2a:	cmp    rbx,rsi
  403f2d:	jb     0x403ef5
  403f2f:	mov    rcx,QWORD PTR [rsp+0x60]
  403f34:	mov    rdx,rdi
  403f37:	call   0x407eb8
  403f3c:	lea    rcx,[rip+0x264c2]        # 0x42a405
  403f43:	mov    esi,eax
  403f45:	call   0x402b90
  403f4a:	test   esi,esi
  403f4c:	je     0x404010
  403f52:	xor    ebx,ebx
  403f54:	cmp    rbx,rsi
  403f57:	jae    0x403f8f
  403f59:	mov    rax,QWORD PTR [rsp+0x68]
  403f5e:	mov    ecx,DWORD PTR [rax+rbx*4]
  403f61:	add    rbx,0x1
  403f65:	call   0x407d80
  403f6a:	lea    rcx,[rip+0x264a4]        # 0x42a415
  403f71:	mov    rdx,rax
  403f74:	call   0x402b90
  403f79:	cmp    rsi,rbx
  403f7c:	je     0x403fa0
  403f7e:	lea    rcx,[rip+0x26438]        # 0x42a3bd
  403f85:	call   0x402b90
  403f8a:	cmp    rbx,rsi
  403f8d:	jb     0x403f59
  403f8f:	add    rsp,0x78
  403f93:	pop    rbx
  403f94:	pop    rsi
  403f95:	pop    rdi
  403f96:	pop    rbp
  403f97:	pop    r12
  403f99:	pop    r13
  403f9b:	pop    r14
  403f9d:	pop    r15
  403f9f:	ret    
  403fa0:	lea    rcx,[rip+0x262fa]        # 0x42a2a1
  403fa7:	mov    rbx,rsi
  403faa:	call   0x402b90
  403faf:	jmp    0x403f54
  403fb1:	lea    rcx,[rip+0x262e9]        # 0x42a2a1
  403fb8:	call   0x402b90
  403fbd:	jmp    0x403dc4
  403fc2:	lea    rcx,[rip+0x262d8]        # 0x42a2a1
  403fc9:	mov    rbx,rsi
  403fcc:	call   0x402b90
  403fd1:	jmp    0x403e28
  403fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fe0:	lea    rcx,[rip+0x262ba]        # 0x42a2a1
  403fe7:	mov    rbx,rsi
  403fea:	call   0x402b90
  403fef:	jmp    0x403e8c
  403ff4:	lea    rcx,[rip+0x262a6]        # 0x42a2a1
  403ffb:	mov    rbx,rsi
  403ffe:	call   0x402b90
  404003:	jmp    0x403ef0
  404008:	nop    DWORD PTR [rax+rax*1+0x0]
  404010:	lea    rcx,[rip+0x26397]        # 0x42a3ae
  404017:	call   0x402b90
  40401c:	jmp    0x403f52
  404021:	lea    rcx,[rip+0x26386]        # 0x42a3ae
  404028:	call   0x402b90
  40402d:	jmp    0x403eee
  404032:	lea    rcx,[rip+0x26375]        # 0x42a3ae
  404039:	call   0x402b90
  40403e:	jmp    0x403e8a
  404043:	lea    rcx,[rip+0x26364]        # 0x42a3ae
  40404a:	call   0x402b90
  40404f:	jmp    0x403e26
  404054:	lea    rcx,[rip+0x26353]        # 0x42a3ae
  40405b:	call   0x402b90
  404060:	jmp    0x403dc2
  404065:	lea    rcx,[rip+0x263b1]        # 0x42a41d
  40406c:	xor    esi,esi
  40406e:	lea    r15,[rsp+0x58]
  404073:	lea    r14,[rsp+0x60]
  404078:	lea    r13,[rsp+0x40]
  40407d:	lea    r12,[rsp+0x54]
  404082:	call   0x402b90
  404087:	lea    rdi,[rsp+0x68]
  40408c:	jmp    0x404094
  40408e:	xchg   ax,ax
  404090:	add    rsi,0x1
  404094:	mov    QWORD PTR [rsp+0x28],r12
  404099:	mov    QWORD PTR [rsp+0x20],rdi
  40409e:	mov    r9,r14
  4040a1:	mov    r8,r15
  4040a4:	mov    rdx,r13
  4040a7:	mov    rcx,rsi
  4040aa:	call   0x408160
  4040af:	test   rax,rax
  4040b2:	mov    rbx,rax
  4040b5:	je     0x404123
  4040b7:	mov    ecx,DWORD PTR [rsp+0x54]
  4040bb:	call   0x407e80
  4040c0:	movzx  r9d,BYTE PTR [rsp+0x41]
  4040c6:	movzx  r8d,BYTE PTR [rsp+0x40]
  4040cc:	lea    rcx,[rip+0x262ae]        # 0x42a381
  4040d3:	mov    QWORD PTR [rsp+0x20],rax
  4040d8:	mov    rdx,rbx
  4040db:	call   0x402b90
  4040e0:	test   ebp,ebp
  4040e2:	je     0x404090
  4040e4:	mov    ecx,DWORD PTR [rsp+0x68]
  4040e8:	call   0x407fe0
  4040ed:	mov    ecx,DWORD PTR [rsp+0x60]
  4040f1:	mov    QWORD PTR [rsp+0x38],rax
  4040f6:	call   0x408180
  4040fb:	mov    ecx,DWORD PTR [rsp+0x58]
  4040ff:	mov    rbx,rax
  404102:	call   0x408000
  404107:	mov    r9,QWORD PTR [rsp+0x38]
  40410c:	lea    rcx,[rip+0x2631d]        # 0x42a430
  404113:	mov    r8,rbx
  404116:	mov    rdx,rax
  404119:	call   0x402b90
  40411e:	jmp    0x404090
  404123:	lea    rcx,[rip+0x26177]        # 0x42a2a1
  40412a:	call   0x402b90
  40412f:	call   0x4081d0
  404134:	lea    rcx,[rip+0x2625f]        # 0x42a39a
  40413b:	mov    rbx,rax
  40413e:	call   0x402b90
  404143:	mov    ecx,DWORD PTR [rbx]
  404145:	test   ecx,ecx
  404147:	jne    0x404166
  404149:	jmp    0x404197
  40414b:	nop    DWORD PTR [rax+rax*1+0x0]
  404150:	lea    rcx,[rip+0x26266]        # 0x42a3bd
  404157:	add    rbx,0x4
  40415b:	call   0x402b90
  404160:	mov    ecx,DWORD PTR [rbx]
  404162:	test   ecx,ecx
  404164:	je     0x404197
  404166:	call   0x4081d8
  40416b:	lea    rcx,[rip+0x26242]        # 0x42a3b4
  404172:	mov    rdx,rax
  404175:	call   0x402b90
  40417a:	mov    ebp,DWORD PTR [rbx+0x4]
  40417d:	test   ebp,ebp
  40417f:	jne    0x404150
  404181:	lea    rcx,[rip+0x26119]        # 0x42a2a1
  404188:	add    rbx,0x4
  40418c:	call   0x402b90
  404191:	mov    ecx,DWORD PTR [rbx]
  404193:	test   ecx,ecx
  404195:	jne    0x404166
  404197:	call   0x407e70
  40419c:	lea    rcx,[rip+0x2621d]        # 0x42a3c0
  4041a3:	mov    rbx,rax
  4041a6:	call   0x402b90
  4041ab:	mov    ecx,DWORD PTR [rbx]
  4041ad:	test   ecx,ecx
  4041af:	jne    0x4041c9
  4041b1:	jmp    0x4041fa
  4041b3:	lea    rcx,[rip+0x26203]        # 0x42a3bd
  4041ba:	add    rbx,0x4
  4041be:	call   0x402b90
  4041c3:	mov    ecx,DWORD PTR [rbx]
  4041c5:	test   ecx,ecx
  4041c7:	je     0x4041fa
  4041c9:	call   0x407e80
  4041ce:	lea    rcx,[rip+0x261f7]        # 0x42a3cc
  4041d5:	mov    rdx,rax
  4041d8:	call   0x402b90
  4041dd:	mov    edi,DWORD PTR [rbx+0x4]
  4041e0:	test   edi,edi
  4041e2:	jne    0x4041b3
  4041e4:	lea    rcx,[rip+0x260b6]        # 0x42a2a1
  4041eb:	add    rbx,0x4
  4041ef:	call   0x402b90
  4041f4:	mov    ecx,DWORD PTR [rbx]
  4041f6:	test   ecx,ecx
  4041f8:	jne    0x4041c9
  4041fa:	call   0x408170
  4041ff:	lea    rcx,[rip+0x26253]        # 0x42a459
  404206:	mov    rbx,rax
  404209:	call   0x402b90
  40420e:	mov    ecx,DWORD PTR [rbx]
  404210:	test   ecx,ecx
  404212:	jne    0x404236
  404214:	jmp    0x404267
  404216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404220:	lea    rcx,[rip+0x26196]        # 0x42a3bd
  404227:	add    rbx,0x4
  40422b:	call   0x402b90
  404230:	mov    ecx,DWORD PTR [rbx]
  404232:	test   ecx,ecx
  404234:	je     0x404267
  404236:	call   0x408180
  40423b:	lea    rcx,[rip+0x26228]        # 0x42a46a
  404242:	mov    rdx,rax
  404245:	call   0x402b90
  40424a:	mov    esi,DWORD PTR [rbx+0x4]
  40424d:	test   esi,esi
  40424f:	jne    0x404220
  404251:	lea    rcx,[rip+0x26049]        # 0x42a2a1
  404258:	add    rbx,0x4
  40425c:	call   0x402b90
  404261:	mov    ecx,DWORD PTR [rbx]
  404263:	test   ecx,ecx
  404265:	jne    0x404236
  404267:	call   0x407fd8
  40426c:	lea    rcx,[rip+0x261f0]        # 0x42a463
  404273:	mov    rbx,rax
  404276:	call   0x402b90
  40427b:	mov    ecx,DWORD PTR [rbx]
  40427d:	test   ecx,ecx
  40427f:	jne    0x404299
  404281:	jmp    0x4042cc
  404283:	lea    rcx,[rip+0x26133]        # 0x42a3bd
  40428a:	add    rbx,0x4
  40428e:	call   0x402b90
  404293:	mov    ecx,DWORD PTR [rbx]
  404295:	test   ecx,ecx
  404297:	je     0x4042cc
  404299:	call   0x407fe0
  40429e:	lea    rcx,[rip+0x261c5]        # 0x42a46a
  4042a5:	mov    rdx,rax
  4042a8:	call   0x402b90
  4042ad:	mov    r11d,DWORD PTR [rbx+0x4]
  4042b1:	test   r11d,r11d
  4042b4:	jne    0x404283
  4042b6:	lea    rcx,[rip+0x25fe4]        # 0x42a2a1
  4042bd:	add    rbx,0x4
  4042c1:	call   0x402b90
  4042c6:	mov    ecx,DWORD PTR [rbx]
  4042c8:	test   ecx,ecx
  4042ca:	jne    0x404299
  4042cc:	call   0x4080d8
  4042d1:	lea    rcx,[rip+0x26195]        # 0x42a46d
  4042d8:	mov    rbx,rax
  4042db:	call   0x402b90
  4042e0:	mov    ecx,DWORD PTR [rbx]
  4042e2:	test   ecx,ecx
  4042e4:	jne    0x404306
  4042e6:	jmp    0x404339
  4042e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f0:	lea    rcx,[rip+0x260c6]        # 0x42a3bd
  4042f7:	add    rbx,0x4
  4042fb:	call   0x402b90
  404300:	mov    ecx,DWORD PTR [rbx]
  404302:	test   ecx,ecx
  404304:	je     0x404339
  404306:	call   0x4080e0
  40430b:	lea    rcx,[rip+0x26158]        # 0x42a46a
  404312:	mov    rdx,rax
  404315:	call   0x402b90
  40431a:	mov    r10d,DWORD PTR [rbx+0x4]
  40431e:	test   r10d,r10d
  404321:	jne    0x4042f0
  404323:	lea    rcx,[rip+0x25f77]        # 0x42a2a1
  40432a:	add    rbx,0x4
  40432e:	call   0x402b90
  404333:	mov    ecx,DWORD PTR [rbx]
  404335:	test   ecx,ecx
  404337:	jne    0x404306
  404339:	call   0x407ff8
  40433e:	lea    rcx,[rip+0x26132]        # 0x42a477
  404345:	mov    rbx,rax
  404348:	call   0x402b90
  40434d:	mov    ecx,DWORD PTR [rbx]
  40434f:	test   ecx,ecx
  404351:	jne    0x40436b
  404353:	jmp    0x40439e
  404355:	lea    rcx,[rip+0x26061]        # 0x42a3bd
  40435c:	add    rbx,0x4
  404360:	call   0x402b90
  404365:	mov    ecx,DWORD PTR [rbx]
  404367:	test   ecx,ecx
  404369:	je     0x40439e
  40436b:	call   0x408000
  404370:	lea    rcx,[rip+0x260f3]        # 0x42a46a
  404377:	mov    rdx,rax
  40437a:	call   0x402b90
  40437f:	mov    r9d,DWORD PTR [rbx+0x4]
  404383:	test   r9d,r9d
  404386:	jne    0x404355
  404388:	lea    rcx,[rip+0x25f12]        # 0x42a2a1
  40438f:	add    rbx,0x4
  404393:	call   0x402b90
  404398:	mov    ecx,DWORD PTR [rbx]
  40439a:	test   ecx,ecx
  40439c:	jne    0x40436b
  40439e:	call   0x408148
  4043a3:	lea    rcx,[rip+0x2602a]        # 0x42a3d4
  4043aa:	mov    rbx,rax
  4043ad:	call   0x402b90
  4043b2:	mov    ecx,DWORD PTR [rbx]
  4043b4:	test   ecx,ecx
  4043b6:	jne    0x4043d6
  4043b8:	jmp    0x404409
  4043ba:	nop    WORD PTR [rax+rax*1+0x0]
  4043c0:	lea    rcx,[rip+0x25ff6]        # 0x42a3bd
  4043c7:	add    rbx,0x4
  4043cb:	call   0x402b90
  4043d0:	mov    ecx,DWORD PTR [rbx]
  4043d2:	test   ecx,ecx
  4043d4:	je     0x404409
  4043d6:	call   0x408150
  4043db:	lea    rcx,[rip+0x26000]        # 0x42a3e2
  4043e2:	mov    rdx,rax
  4043e5:	call   0x402b90
  4043ea:	mov    r8d,DWORD PTR [rbx+0x4]
  4043ee:	test   r8d,r8d
  4043f1:	jne    0x4043c0
  4043f3:	lea    rcx,[rip+0x25ea7]        # 0x42a2a1
  4043fa:	add    rbx,0x4
  4043fe:	call   0x402b90
  404403:	mov    ecx,DWORD PTR [rbx]
  404405:	test   ecx,ecx
  404407:	jne    0x4043d6
  404409:	call   0x4080b0
  40440e:	lea    rcx,[rip+0x25fd5]        # 0x42a3ea
  404415:	mov    rbx,rax
  404418:	call   0x402b90
  40441d:	mov    ecx,DWORD PTR [rbx]
  40441f:	test   ecx,ecx
  404421:	jne    0x40443b
  404423:	jmp    0x40446c
  404425:	lea    rcx,[rip+0x25f91]        # 0x42a3bd
  40442c:	add    rbx,0x4
  404430:	call   0x402b90
  404435:	mov    ecx,DWORD PTR [rbx]
  404437:	test   ecx,ecx
  404439:	je     0x40446c
  40443b:	call   0x4080c0
  404440:	lea    rcx,[rip+0x25fb5]        # 0x42a3fc
  404447:	mov    rdx,rax
  40444a:	call   0x402b90
  40444f:	mov    ecx,DWORD PTR [rbx+0x4]
  404452:	test   ecx,ecx
  404454:	jne    0x404425
  404456:	lea    rcx,[rip+0x25e44]        # 0x42a2a1
  40445d:	add    rbx,0x4
  404461:	call   0x402b90
  404466:	mov    ecx,DWORD PTR [rbx]
  404468:	test   ecx,ecx
  40446a:	jne    0x40443b
  40446c:	call   0x407ef8
  404471:	lea    rcx,[rip+0x26019]        # 0x42a491
  404478:	mov    rbx,rax
  40447b:	call   0x402b90
  404480:	mov    ecx,DWORD PTR [rbx]
  404482:	test   ecx,ecx
  404484:	jne    0x4044a6
  404486:	jmp    0x4044d7
  404488:	nop    DWORD PTR [rax+rax*1+0x0]
  404490:	lea    rcx,[rip+0x25f26]        # 0x42a3bd
  404497:	add    rbx,0x4
  40449b:	call   0x402b90
  4044a0:	mov    ecx,DWORD PTR [rbx]
  4044a2:	test   ecx,ecx
  4044a4:	je     0x4044d7
  4044a6:	call   0x407f00
  4044ab:	lea    rcx,[rip+0x25fb8]        # 0x42a46a
  4044b2:	mov    rdx,rax
  4044b5:	call   0x402b90
  4044ba:	mov    edx,DWORD PTR [rbx+0x4]
  4044bd:	test   edx,edx
  4044bf:	jne    0x404490
  4044c1:	lea    rcx,[rip+0x25dd9]        # 0x42a2a1
  4044c8:	add    rbx,0x4
  4044cc:	call   0x402b90
  4044d1:	mov    ecx,DWORD PTR [rbx]
  4044d3:	test   ecx,ecx
  4044d5:	jne    0x4044a6
  4044d7:	call   0x407d78
  4044dc:	lea    rcx,[rip+0x25f22]        # 0x42a405
  4044e3:	mov    rbx,rax
  4044e6:	call   0x402b90
  4044eb:	mov    ecx,DWORD PTR [rbx]
  4044ed:	test   ecx,ecx
  4044ef:	jne    0x40451a
  4044f1:	jmp    0x403f8f
  4044f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404500:	lea    rcx,[rip+0x25eb6]        # 0x42a3bd
  404507:	call   0x402b90
  40450c:	add    rbx,0x4
  404510:	mov    ecx,DWORD PTR [rbx]
  404512:	test   ecx,ecx
  404514:	je     0x403f8f
  40451a:	call   0x407d80
  40451f:	lea    rcx,[rip+0x25eef]        # 0x42a415
  404526:	mov    rdx,rax
  404529:	call   0x402b90
  40452e:	mov    eax,DWORD PTR [rbx+0x4]
  404531:	test   eax,eax
  404533:	jne    0x404500
  404535:	lea    rcx,[rip+0x25d65]        # 0x42a2a1
  40453c:	call   0x402b90
  404541:	jmp    0x40450c
  404543:	mov    rbx,QWORD PTR [rsp+0x58]
  404548:	call   QWORD PTR [rip+0x97ed6]        # 0x49c424
  40454e:	lea    rdx,[rip+0x25e17]        # 0x42a36c
  404555:	lea    rcx,[rax+0x60]
  404559:	mov    r8,rbx
  40455c:	call   0x402c10
  404561:	mov    ecx,0x1
  404566:	call   0x422578
  40456b:	nop
  40456c:	nop    DWORD PTR [rax+0x0]
  404570:	push   r12
  404572:	push   rbp
  404573:	push   rdi
  404574:	push   rsi
  404575:	push   rbx
  404576:	sub    rsp,0x20
  40457a:	mov    rbx,rdx
  40457d:	mov    r12,rcx
  404580:	mov    edx,0x80
  404585:	mov    rcx,rbx
  404588:	call   0x41d530
  40458d:	mov    rbp,QWORD PTR [rip+0x97e90]        # 0x49c424
  404594:	mov    rsi,rax
  404597:	call   rbp
  404599:	lea    rdx,[rip+0x25f08]        # 0x42a4a8
  4045a0:	lea    rcx,[rax+0x60]
  4045a4:	mov    r9,rbx
  4045a7:	mov    r8d,esi
  4045aa:	call   0x402c10
  4045af:	cmp    rsi,0x2
  4045b3:	jbe    0x404630
  4045b5:	movzx  eax,BYTE PTR [rbx]
  4045b8:	cmp    al,BYTE PTR [rbx+0x1]
  4045bb:	jne    0x404630
  4045bd:	cmp    al,0x2a
  4045bf:	jne    0x404630
  4045c1:	lea    rdi,[rip+0x25f05]        # 0x42a4cd
  4045c8:	mov    ecx,0xf
  4045cd:	mov    rsi,rbx
  4045d0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4045d2:	je     0x404640
  4045d4:	lea    rdi,[rip+0x25f26]        # 0x42a501
  4045db:	mov    rsi,rbx
  4045de:	mov    ecx,0xd
  4045e3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4045e5:	seta   dl
  4045e8:	setb   al
  4045eb:	xor    ebx,ebx
  4045ed:	cmp    dl,al
  4045ef:	jne    0x404632
  4045f1:	mov    r9d,0x1
  4045f7:	mov    r8d,0x5
  4045fd:	mov    edx,0x12c
  404602:	mov    rcx,r12
  404605:	mov    bl,0x2
  404607:	call   0x408060
  40460c:	test   eax,eax
  40460e:	jns    0x404632
  404610:	cmp    eax,0xffffffce
  404613:	jne    0x404661
  404615:	call   rbp
  404617:	lea    rdx,[rip+0x25ef1]        # 0x42a50f
  40461e:	lea    rcx,[rax+0x60]
  404622:	call   0x402c10
  404627:	jmp    0x404632
  404629:	nop    DWORD PTR [rax+0x0]
  404630:	xor    ebx,ebx
  404632:	mov    eax,ebx
  404634:	add    rsp,0x20
  404638:	pop    rbx
  404639:	pop    rsi
  40463a:	pop    rdi
  40463b:	pop    rbp
  40463c:	pop    r12
  40463e:	ret    
  40463f:	nop
  404640:	call   rbp
  404642:	lea    rdx,[rip+0x25e97]        # 0x42a4e0
  404649:	lea    rcx,[rax+0x60]
  40464d:	mov    ebx,0x1
  404652:	call   0x402c10
  404657:	mov    rcx,r12
  40465a:	call   0x407df8
  40465f:	jmp    0x404632
  404661:	mov    ecx,eax
  404663:	call   0x407d30
  404668:	mov    rbx,rax
  40466b:	call   rbp
  40466d:	lea    rdx,[rip+0x25eb9]        # 0x42a52d
  404674:	lea    rcx,[rax+0x60]
  404678:	mov    r8,rbx
  40467b:	call   0x402c10
  404680:	mov    ecx,0x1
  404685:	call   0x422578
  40468a:	nop
  40468b:	nop    DWORD PTR [rax+rax*1+0x0]
  404690:	push   r15
  404692:	push   r14
  404694:	push   r13
  404696:	push   r12
  404698:	push   rbp
  404699:	push   rdi
  40469a:	push   rsi
  40469b:	push   rbx
  40469c:	sub    rsp,0x28
  4046a0:	mov    ebx,DWORD PTR [rsp+0x90]
  4046a7:	lea    rdx,[rip+0x25ea8]        # 0x42a556
  4046ae:	lea    rbp,[rip+0x25e82]        # 0x42a537
  4046b5:	lea    r12,[rip+0x25e89]        # 0x42a545
  4046bc:	mov    r15,rcx
  4046bf:	mov    rdi,r8
  4046c2:	mov    r14,r9
  4046c5:	mov    r13,QWORD PTR [rsp+0x98]
  4046cd:	mov    rsi,QWORD PTR [rsp+0xa0]
  4046d5:	mov    eax,ebx
  4046d7:	and    eax,0x2
  4046da:	lea    rax,[rip+0x25e80]        # 0x42a561
  4046e1:	cmove  rbp,rdx
  4046e5:	cmove  r12,rax
  4046e9:	test   bl,0x4
  4046ec:	mov    eax,0x5
  4046f1:	jne    0x4048d4
  4046f7:	test   bl,0x8
  4046fa:	jne    0x404865
  404700:	and    ebx,0x20
  404703:	jne    0x40487a
  404709:	test   eax,eax
  40470b:	je     0x40472e
  40470d:	test   rdi,rdi
  404710:	mov    rcx,QWORD PTR [rip+0x32b89]        # 0x4372a0
  404717:	je     0x40472e
  404719:	test   rcx,rcx
  40471c:	je     0x40472e
  40471e:	mov    rdx,rdi
  404721:	call   0x422488
  404726:	test   eax,eax
  404728:	je     0x4047f0
  40472e:	lea    rcx,[rip+0x25eb5]        # 0x42a5ea
  404735:	mov    r8,rdi
  404738:	mov    rdx,r14
  40473b:	call   0x402b90
  404740:	lea    rcx,[rip+0x25ebd]        # 0x42a604
  404747:	mov    rdx,r12
  40474a:	call   0x402b90
  40474f:	mov    rcx,rbp
  404752:	call   0x422500
  404757:	test   rax,rax
  40475a:	mov    rbp,rax
  40475d:	je     0x404920
  404763:	movzx  eax,BYTE PTR [rbp+0x0]
  404767:	test   al,al
  404769:	je     0x4049e0
  40476f:	cmp    al,0xa
  404771:	je     0x4049e0
  404777:	mov    rcx,rbp
  40477a:	call   0x422468
  40477f:	lea    rdx,[rsi-0x1]
  404783:	sub    esi,0x1
  404786:	mov    rcx,r13
  404789:	cmp    rdx,rax
  40478c:	mov    rdx,rbp
  40478f:	cmovae esi,eax
  404792:	mov    ebx,esi
  404794:	mov    r8,rbx
  404797:	call   0x4224d8
  40479c:	cmp    esi,0x1f
  40479f:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  4047a5:	jbe    0x404900
  4047ab:	mov    BYTE PTR [rip+0x32ace],0x0        # 0x437280
  4047b2:	mov    rcx,QWORD PTR [rip+0x32ae7]        # 0x4372a0
  4047b9:	call   0x422528
  4047be:	test   rdi,rdi
  4047c1:	je     0x4048f0
  4047c7:	mov    rcx,rdi
  4047ca:	call   0x41a7c0
  4047cf:	mov    QWORD PTR [rip+0x32aca],rax        # 0x4372a0
  4047d6:	xor    eax,eax
  4047d8:	add    rsp,0x28
  4047dc:	pop    rbx
  4047dd:	pop    rsi
  4047de:	pop    rdi
  4047df:	pop    rbp
  4047e0:	pop    r12
  4047e2:	pop    r13
  4047e4:	pop    r14
  4047e6:	pop    r15
  4047e8:	ret    
  4047e9:	nop    DWORD PTR [rax+0x0]
  4047f0:	lea    r8,[rip+0x32a89]        # 0x437280
  4047f7:	mov    rdx,r8
  4047fa:	mov    ecx,DWORD PTR [rdx]
  4047fc:	add    rdx,0x4
  404800:	lea    eax,[rcx-0x1010101]
  404806:	not    ecx
  404808:	and    eax,ecx
  40480a:	and    eax,0x80808080
  40480f:	je     0x4047fa
  404811:	mov    ecx,eax
  404813:	shr    ecx,0x10
  404816:	test   eax,0x8080
  40481b:	cmove  eax,ecx
  40481e:	lea    rcx,[rdx+0x2]
  404822:	cmove  rdx,rcx
  404826:	add    al,al
  404828:	sbb    rdx,0x3
  40482c:	sub    rdx,r8
  40482f:	cmp    rdx,rsi
  404832:	jae    0x404a1a
  404838:	call   QWORD PTR [rip+0x97be6]        # 0x49c424
  40483e:	lea    rdx,[rip+0x25deb]        # 0x42a630
  404845:	lea    rcx,[rax+0x60]
  404849:	mov    r8,r14
  40484c:	call   0x402c10
  404851:	lea    rdx,[rip+0x32a28]        # 0x437280
  404858:	mov    rcx,r13
  40485b:	call   0x422480
  404860:	jmp    0x4047d6
  404865:	lea    rcx,[rip+0x25d2c]        # 0x42a598
  40486c:	call   0x402b90
  404871:	and    ebx,0x20
  404874:	je     0x40472e
  40487a:	lea    rcx,[rip+0x25d47]        # 0x42a5c8
  404881:	call   0x402b90
  404886:	lea    rcx,[rip+0x25d5d]        # 0x42a5ea
  40488d:	mov    r8,rdi
  404890:	mov    rdx,r14
  404893:	call   0x402b90
  404898:	lea    rcx,[rip+0x25d65]        # 0x42a604
  40489f:	mov    rdx,r12
  4048a2:	call   0x402b90
  4048a7:	mov    rcx,rbp
  4048aa:	call   0x422500
  4048af:	test   rax,rax
  4048b2:	je     0x404922
  4048b4:	call   QWORD PTR [rip+0x97b6a]        # 0x49c424
  4048ba:	lea    rdx,[rip+0x25da7]        # 0x42a668
  4048c1:	lea    rcx,[rax+0x60]
  4048c5:	call   0x402c10
  4048ca:	mov    ecx,0x1
  4048cf:	call   0x422578
  4048d4:	lea    rcx,[rip+0x25c8d]        # 0x42a568
  4048db:	call   0x402b90
  4048e0:	xor    eax,eax
  4048e2:	jmp    0x4046f7
  4048e7:	nop    WORD PTR [rax+rax*1+0x0]
  4048f0:	mov    QWORD PTR [rip+0x329a5],0x0        # 0x4372a0
  4048fb:	jmp    0x4047d6
  404900:	lea    r9,[rip+0x32979]        # 0x437280
  404907:	mov    r8,rbx
  40490a:	mov    rdx,r13
  40490d:	mov    rcx,r9
  404910:	call   0x4224d8
  404915:	mov    BYTE PTR [rax+rbx*1],0x0
  404919:	jmp    0x4047b2
  40491e:	xchg   ax,ax
  404920:	xor    ebx,ebx
  404922:	lea    rcx,[rip+0x25c2d]        # 0x42a556
  404929:	call   0x422500
  40492e:	test   rax,rax
  404931:	mov    rbp,rax
  404934:	jne    0x404991
  404936:	test   r15,r15
  404939:	je     0x4049b0
  40493b:	mov    eax,DWORD PTR [r15+0xa0]
  404942:	test   eax,eax
  404944:	jne    0x4049a0
  404946:	lea    rcx,[rip+0x25dba]        # 0x42a707
  40494d:	call   0x4186b0
  404952:	test   rax,rax
  404955:	mov    rbp,rax
  404958:	jne    0x404763
  40495e:	xchg   ax,ax
  404960:	mov    rbx,QWORD PTR [rip+0x97abd]        # 0x49c424
  404967:	call   rbx
  404969:	lea    rdx,[rip+0x25ce4]        # 0x42a654
  404970:	lea    rcx,[rax+0x60]
  404974:	call   0x402c10
  404979:	cmp    DWORD PTR [r15+0xa0],0x0
  404981:	jne    0x404a03
  404987:	mov    ecx,0x1
  40498c:	call   0x422578
  404991:	test   ebx,ebx
  404993:	je     0x404763
  404999:	jmp    0x4048b4
  40499e:	xchg   ax,ax
  4049a0:	test   ebx,ebx
  4049a2:	je     0x404960
  4049a4:	jmp    0x4048b4
  4049a9:	nop    DWORD PTR [rax+0x0]
  4049b0:	lea    rcx,[rip+0x25d50]        # 0x42a707
  4049b7:	call   0x4186b0
  4049bc:	test   rax,rax
  4049bf:	mov    rbp,rax
  4049c2:	jne    0x404763
  4049c8:	call   QWORD PTR [rip+0x97a56]        # 0x49c424
  4049ce:	lea    rdx,[rip+0x25c7f]        # 0x42a654
  4049d5:	lea    rcx,[rax+0x60]
  4049d9:	call   0x402c10
  4049de:	jmp    0x404987
  4049e0:	mov    rbx,QWORD PTR [rip+0x97a3d]        # 0x49c424
  4049e7:	call   rbx
  4049e9:	lea    rdx,[rip+0x25c64]        # 0x42a654
  4049f0:	lea    rcx,[rax+0x60]
  4049f4:	call   0x402c10
  4049f9:	test   r15,r15
  4049fc:	je     0x404987
  4049fe:	jmp    0x404979
  404a03:	call   rbx
  404a05:	lea    rdx,[rip+0x25c9c]        # 0x42a6a8
  404a0c:	lea    rcx,[rax+0x60]
  404a10:	call   0x402c10
  404a15:	jmp    0x404987
  404a1a:	call   QWORD PTR [rip+0x97a04]        # 0x49c424
  404a20:	lea    rdx,[rip+0x25bee]        # 0x42a615
  404a27:	lea    rcx,[rax+0x60]
  404a2b:	call   0x402c10
  404a30:	mov    ecx,0x1
  404a35:	call   0x422578
  404a3a:	nop
  404a3b:	nop
  404a3c:	nop
  404a3d:	nop
  404a3e:	nop
  404a3f:	nop
  404a40:	sub    rsp,0x38
  404a44:	mov    QWORD PTR [rsp+0x50],r8
  404a49:	lea    r8,[rsp+0x50]
  404a4e:	mov    QWORD PTR [rsp+0x58],r9
  404a53:	mov    QWORD PTR [rsp+0x28],r8
  404a58:	call   0x41d9a0
  404a5d:	add    rsp,0x38
  404a61:	ret    
  404a62:	nop    DWORD PTR [rax+0x0]
  404a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a70:	sub    rsp,0x38
  404a74:	mov    QWORD PTR [rsp+0x48],rdx
  404a79:	lea    rdx,[rsp+0x48]
  404a7e:	mov    QWORD PTR [rsp+0x50],r8
  404a83:	mov    QWORD PTR [rsp+0x58],r9
  404a88:	mov    QWORD PTR [rsp+0x28],rdx
  404a8d:	call   0x41d9d0
  404a92:	add    rsp,0x38
  404a96:	ret    
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	push   rbp
  404aa1:	push   rdi
  404aa2:	push   rsi
  404aa3:	push   rbx
  404aa4:	sub    rsp,0x28
  404aa8:	mov    ebp,edx
  404aaa:	mov    rsi,rcx
  404aad:	mov    rcx,r8
  404ab0:	mov    rbx,r8
  404ab3:	call   0x422468
  404ab8:	test   ebp,ebp
  404aba:	mov    rdi,rax
  404abd:	jne    0x404ae0
  404abf:	mov    ecx,DWORD PTR [rsi]
  404ac1:	xor    r9d,r9d
  404ac4:	movsxd r8,edi
  404ac7:	mov    rdx,rbx
  404aca:	call   0x419c80
  404acf:	cmp    eax,0xffffffff
  404ad2:	je     0x404afb
  404ad4:	cdqe   
  404ad6:	add    rsp,0x28
  404ada:	pop    rbx
  404adb:	pop    rsi
  404adc:	pop    rdi
  404add:	pop    rbp
  404ade:	ret    
  404adf:	nop
  404ae0:	call   QWORD PTR [rip+0x9793e]        # 0x49c424
  404ae6:	lea    rdx,[rip+0x25c33]        # 0x42a720
  404aed:	lea    rcx,[rax+0x60]
  404af1:	mov    r8,rbx
  404af4:	call   0x404a40
  404af9:	jmp    0x404abf
  404afb:	call   QWORD PTR [rip+0x97923]        # 0x49c424
  404b01:	lea    rdx,[rip+0x25c2f]        # 0x42a737
  404b08:	lea    rcx,[rax+0x60]
  404b0c:	mov    r8,rbx
  404b0f:	call   0x404a40
  404b14:	mov    ecx,0x1
  404b19:	call   0x422578
  404b1e:	nop
  404b1f:	nop
  404b20:	push   r15
  404b22:	push   r14
  404b24:	push   r13
  404b26:	push   r12
  404b28:	push   rbp
  404b29:	push   rdi
  404b2a:	push   rsi
  404b2b:	push   rbx
  404b2c:	sub    rsp,0x678
  404b33:	test   r8,r8
  404b36:	mov    rdi,rcx
  404b39:	mov    r13,rdx
  404b3c:	mov    rsi,r8
  404b3f:	mov    r12d,r9d
  404b42:	je     0x404b66
  404b44:	mov    edx,DWORD PTR [rdx]
  404b46:	test   edx,edx
  404b48:	je     0x404b66
  404b4a:	call   QWORD PTR [rip+0x978d4]        # 0x49c424
  404b50:	lea    rdx,[rip+0x25bf9]        # 0x42a750
  404b57:	lea    rcx,[rax+0x60]
  404b5b:	mov    r9,rsi
  404b5e:	mov    r8d,r12d
  404b61:	call   0x404a40
  404b66:	lea    rax,[rsp+0x60]
  404b6b:	lea    r14,[rsp+0x50]
  404b70:	lea    rbx,[rsp+0x270]
  404b78:	mov    ebp,r12d
  404b7b:	mov    QWORD PTR [rsp+0x38],rax
  404b80:	movsxd rax,DWORD PTR [rdi]
  404b83:	mov    rdx,QWORD PTR [rsp+0x38]
  404b88:	xor    r9d,r9d
  404b8b:	xor    r8d,r8d
  404b8e:	mov    QWORD PTR [rsp+0x20],r14
  404b93:	mov    DWORD PTR [rsp+0x60],0x1
  404b9b:	mov    QWORD PTR [rsp+0x50],0xa
  404ba4:	mov    DWORD PTR [rsp+0x58],0x0
  404bac:	mov    rcx,rax
  404baf:	mov    QWORD PTR [rsp+0x68],rax
  404bb4:	add    ecx,0x1
  404bb7:	call   0x418f90
  404bbc:	test   eax,eax
  404bbe:	jle    0x404c60
  404bc4:	mov    ecx,DWORD PTR [rdi]
  404bc6:	xor    r9d,r9d
  404bc9:	mov    r8d,0x3ff
  404bcf:	mov    rdx,rbx
  404bd2:	call   0x4187d0
  404bd7:	cmp    eax,0xffffffff
  404bda:	mov    r15,rax
  404bdd:	mov    DWORD PTR [rsp+0x44],eax
  404be1:	je     0x404c60
  404be3:	movsxd r11,eax
  404be6:	test   rsi,rsi
  404be9:	mov    BYTE PTR [rsp+r11*1+0x270],0x0
  404bf2:	je     0x404c40
  404bf4:	mov    eax,DWORD PTR [r13+0x0]
  404bf8:	test   eax,eax
  404bfa:	jne    0x404c83
  404c00:	mov    r9,rbp
  404c03:	mov    r8,rsi
  404c06:	mov    rdx,r11
  404c09:	mov    rcx,rbx
  404c0c:	call   0x415260
  404c11:	test   rax,rax
  404c14:	je     0x404c21
  404c16:	cmp    rax,rbx
  404c19:	je     0x404c21
  404c1b:	cmp    BYTE PTR [rax-0x1],0xa
  404c1f:	je     0x404c40
  404c21:	cmp    r15d,r12d
  404c24:	jl     0x404b80
  404c2a:	mov    r8,rbp
  404c2d:	mov    rdx,rsi
  404c30:	mov    rcx,rbx
  404c33:	call   0x422460
  404c38:	test   eax,eax
  404c3a:	jne    0x404b80
  404c40:	movsxd rax,DWORD PTR [rsp+0x44]
  404c45:	add    rsp,0x678
  404c4c:	pop    rbx
  404c4d:	pop    rsi
  404c4e:	pop    rdi
  404c4f:	pop    rbp
  404c50:	pop    r12
  404c52:	pop    r13
  404c54:	pop    r14
  404c56:	pop    r15
  404c58:	ret    
  404c59:	nop    DWORD PTR [rax+0x0]
  404c60:	call   QWORD PTR [rip+0x977be]        # 0x49c424
  404c66:	lea    rdx,[rip+0x25b02]        # 0x42a76f
  404c6d:	lea    rcx,[rax+0x60]
  404c71:	mov    r8,rsi
  404c74:	call   0x404a40
  404c79:	mov    ecx,0x1
  404c7e:	call   0x422578
  404c83:	mov    QWORD PTR [rsp+0x48],r11
  404c88:	call   QWORD PTR [rip+0x97796]        # 0x49c424
  404c8e:	lea    rdx,[rip+0x25aee]        # 0x42a783
  404c95:	lea    rcx,[rax+0x60]
  404c99:	mov    r8,rbx
  404c9c:	call   0x404a40
  404ca1:	mov    r11,QWORD PTR [rsp+0x48]
  404ca6:	jmp    0x404c00
  404cab:	nop    DWORD PTR [rax+rax*1+0x0]
  404cb0:	push   rbp
  404cb1:	push   rdi
  404cb2:	push   rsi
  404cb3:	push   rbx
  404cb4:	sub    rsp,0x28
  404cb8:	mov    eax,DWORD PTR [rcx+0x10]
  404cbb:	mov    rbx,rcx
  404cbe:	mov    rdi,rdx
  404cc1:	movsxd rsi,r8d
  404cc4:	test   eax,eax
  404cc6:	jne    0x404d10
  404cc8:	mov    rbp,QWORD PTR [rip+0x977a5]        # 0x49c474
  404ccf:	jmp    0x404cd8
  404cd1:	call   rbp
  404cd3:	cmp    DWORD PTR [rax],0x4
  404cd6:	jne    0x404d35
  404cd8:	mov    ecx,DWORD PTR [rbx]
  404cda:	xor    r9d,r9d
  404cdd:	mov    r8,rsi
  404ce0:	mov    rdx,rdi
  404ce3:	call   0x4187d0
  404ce8:	cmp    eax,0xffffffff
  404ceb:	mov    r9d,eax
  404cee:	je     0x404cd1
  404cf0:	movsxd rax,r9d
  404cf3:	add    rsp,0x28
  404cf7:	pop    rbx
  404cf8:	pop    rsi
  404cf9:	pop    rdi
  404cfa:	pop    rbp
  404cfb:	ret    
  404cfc:	nop    DWORD PTR [rax+0x0]
  404d00:	mov    rcx,QWORD PTR [rbx+0x8]
  404d04:	xor    edx,edx
  404d06:	call   0x408058
  404d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d10:	mov    rcx,QWORD PTR [rbx+0x8]
  404d14:	mov    r8,rsi
  404d17:	mov    rdx,rdi
  404d1a:	call   0x407e28
  404d1f:	cmp    eax,0xfffffedb
  404d24:	mov    r9d,eax
  404d27:	je     0x404d00
  404d29:	cmp    eax,0xffffffe4
  404d2c:	je     0x404d10
  404d2e:	cmp    eax,0xffffffcc
  404d31:	je     0x404d10
  404d33:	jmp    0x404cf0
  404d35:	mov    rax,0xffffffffffffffff
  404d3c:	add    rsp,0x28
  404d40:	pop    rbx
  404d41:	pop    rsi
  404d42:	pop    rdi
  404d43:	pop    rbp
  404d44:	ret    
  404d45:	nop
  404d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d50:	push   rsi
  404d51:	push   rbx
  404d52:	sub    rsp,0x38
  404d56:	mov    rsi,rdx
  404d59:	mov    edx,DWORD PTR [rcx+0x10]
  404d5c:	mov    rbx,rcx
  404d5f:	test   edx,edx
  404d61:	jne    0x404d90
  404d63:	mov    rdx,rsi
  404d66:	mov    rcx,rbx
  404d69:	call   0x404cb0
  404d6e:	mov    rsi,rax
  404d71:	mov    eax,DWORD PTR [rbx+0x10]
  404d74:	test   eax,eax
  404d76:	je     0x404d83
  404d78:	mov    rcx,QWORD PTR [rbx+0x8]
  404d7c:	xor    edx,edx
  404d7e:	call   0x407e00
  404d83:	movsxd rax,esi
  404d86:	add    rsp,0x38
  404d8a:	pop    rbx
  404d8b:	pop    rsi
  404d8c:	ret    
  404d8d:	nop    DWORD PTR [rax]
  404d90:	mov    rcx,QWORD PTR [rcx+0x8]
  404d94:	mov    edx,r9d
  404d97:	mov    DWORD PTR [rsp+0x2c],r8d
  404d9c:	call   0x407e00
  404da1:	mov    r8d,DWORD PTR [rsp+0x2c]
  404da6:	jmp    0x404d63
  404da8:	nop    DWORD PTR [rax+rax*1+0x0]
  404db0:	push   r13
  404db2:	push   r12
  404db4:	push   rbp
  404db5:	push   rdi
  404db6:	push   rsi
  404db7:	push   rbx
  404db8:	sub    rsp,0x28
  404dbc:	mov    rbp,rdx
  404dbf:	mov    edx,DWORD PTR [rcx+0x10]
  404dc2:	mov    rdi,rcx
  404dc5:	mov    r12d,r8d
  404dc8:	mov    rsi,r9
  404dcb:	test   edx,edx
  404dcd:	je     0x404e24
  404dcf:	movsxd r13,r8d
  404dd2:	test   rsi,rsi
  404dd5:	mov    rcx,QWORD PTR [rdi+0x8]
  404dd9:	je     0x404e15
  404ddb:	mov    r9,rsi
  404dde:	mov    r8,r13
  404de1:	mov    rdx,rbp
  404de4:	call   0x407e10
  404de9:	mov    ebx,eax
  404deb:	cmp    ebx,0xffffffcc
  404dee:	je     0x404dd2
  404df0:	cmp    ebx,0xffffffe4
  404df3:	je     0x404dd2
  404df5:	cmp    ebx,r12d
  404df8:	je     0x404e05
  404dfa:	test   ebx,ebx
  404dfc:	jle    0x404e05
  404dfe:	mov    eax,DWORD PTR [rdi+0x40]
  404e01:	test   eax,eax
  404e03:	jne    0x404e51
  404e05:	movsxd rax,ebx
  404e08:	add    rsp,0x28
  404e0c:	pop    rbx
  404e0d:	pop    rsi
  404e0e:	pop    rdi
  404e0f:	pop    rbp
  404e10:	pop    r12
  404e12:	pop    r13
  404e14:	ret    
  404e15:	mov    r8,r13
  404e18:	mov    rdx,rbp
  404e1b:	call   0x407e18
  404e20:	mov    ebx,eax
  404e22:	jmp    0x404deb
  404e24:	movsxd rsi,r8d
  404e27:	mov    r13,QWORD PTR [rip+0x97646]        # 0x49c474
  404e2e:	jmp    0x404e38
  404e30:	call   r13
  404e33:	cmp    DWORD PTR [rax],0x4
  404e36:	jne    0x404e70
  404e38:	mov    ecx,DWORD PTR [rdi]
  404e3a:	xor    r9d,r9d
  404e3d:	mov    r8,rsi
  404e40:	mov    rdx,rbp
  404e43:	call   0x419c80
  404e48:	cmp    eax,0xffffffff
  404e4b:	mov    ebx,eax
  404e4d:	je     0x404e30
  404e4f:	jmp    0x404df5
  404e51:	call   QWORD PTR [rip+0x975cd]        # 0x49c424
  404e57:	lea    rdx,[rip+0x25942]        # 0x42a7a0
  404e5e:	lea    rcx,[rax+0x60]
  404e62:	mov    r9d,r12d
  404e65:	mov    r8d,ebx
  404e68:	call   0x404a40
  404e6d:	jmp    0x404e05
  404e6f:	nop
  404e70:	mov    rax,0xffffffffffffffff
  404e77:	add    rsp,0x28
  404e7b:	pop    rbx
  404e7c:	pop    rsi
  404e7d:	pop    rdi
  404e7e:	pop    rbp
  404e7f:	pop    r12
  404e81:	pop    r13
  404e83:	ret    
  404e84:	xchg   ax,ax
  404e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e90:	xor    r9d,r9d
  404e93:	jmp    0x404db0
  404e98:	nop    DWORD PTR [rax+rax*1+0x0]
  404ea0:	push   rdi
  404ea1:	push   rsi
  404ea2:	push   rbx
  404ea3:	sub    rsp,0x220
  404eaa:	test   rdx,rdx
  404ead:	je     0x404ed5
  404eaf:	mov    r8d,DWORD PTR [rcx+0x10]
  404eb3:	test   r8d,r8d
  404eb6:	jne    0x404ed5
  404eb8:	mov    rbx,rdx
  404ebb:	mov    rsi,rcx
  404ebe:	lea    rdx,[rip+0x25902]        # 0x42a7c7
  404ec5:	mov    rcx,rbx
  404ec8:	mov    rdi,QWORD PTR [rip+0x9762d]        # 0x49c4fc
  404ecf:	call   rdi
  404ed1:	test   eax,eax
  404ed3:	jne    0x404ee0
  404ed5:	add    rsp,0x220
  404edc:	pop    rbx
  404edd:	pop    rsi
  404ede:	pop    rdi
  404edf:	ret    
  404ee0:	lea    rdx,[rip+0x258e6]        # 0x42a7cd
  404ee7:	mov    rcx,rbx
  404eea:	call   rdi
  404eec:	test   eax,eax
  404eee:	jne    0x404fa0
  404ef4:	mov    eax,DWORD PTR [rsi+0x40]
  404ef7:	test   eax,eax
  404ef9:	je     0x404f07
  404efb:	lea    rcx,[rip+0x258db]        # 0x42a7dd
  404f02:	call   0x404a70
  404f07:	lea    rbx,[rsi+0x40]
  404f0b:	lea    r8,[rip+0x258e6]        # 0x42a7f8
  404f12:	mov    rcx,rsi
  404f15:	mov    r9d,0x4
  404f1b:	lea    rdi,[rsp+0x20]
  404f20:	mov    rdx,rbx
  404f23:	call   0x404b20
  404f28:	mov    r9,QWORD PTR [rsi+0x18]
  404f2c:	lea    r8,[rip+0x258ca]        # 0x42a7fd
  404f33:	mov    rcx,rdi
  404f36:	mov    edx,0x200
  404f3b:	call   0x415550
  404f40:	mov    edx,DWORD PTR [rsi+0x40]
  404f43:	mov    r8,rdi
  404f46:	mov    rcx,rsi
  404f49:	call   0x404aa0
  404f4e:	lea    r8,[rip+0x258b1]        # 0x42a806
  404f55:	mov    r9d,0x4
  404f5b:	mov    rdx,rbx
  404f5e:	mov    rcx,rsi
  404f61:	call   0x404b20
  404f66:	mov    edx,DWORD PTR [rsi+0x40]
  404f69:	lea    r8,[rip+0x2589b]        # 0x42a80b
  404f70:	mov    rcx,rsi
  404f73:	call   0x404aa0
  404f78:	lea    r8,[rip+0x25879]        # 0x42a7f8
  404f7f:	mov    r9d,0x4
  404f85:	mov    rdx,rbx
  404f88:	mov    rcx,rsi
  404f8b:	call   0x404b20
  404f90:	nop
  404f91:	add    rsp,0x220
  404f98:	pop    rbx
  404f99:	pop    rsi
  404f9a:	pop    rdi
  404f9b:	ret    
  404f9c:	nop    DWORD PTR [rax+0x0]
  404fa0:	lea    rdx,[rip+0x2582b]        # 0x42a7d2
  404fa7:	mov    rcx,rbx
  404faa:	call   rdi
  404fac:	test   eax,eax
  404fae:	je     0x404ef4
  404fb4:	lea    rdx,[rip+0x2585a]        # 0x42a815
  404fbb:	mov    rcx,rbx
  404fbe:	call   rdi
  404fc0:	test   eax,eax
  404fc2:	jne    0x405034
  404fc4:	mov    edx,DWORD PTR [rsi+0x40]
  404fc7:	test   edx,edx
  404fc9:	je     0x404fda
  404fcb:	lea    rcx,[rip+0x2584e]        # 0x42a820
  404fd2:	call   0x404a70
  404fd7:	mov    edx,DWORD PTR [rsi+0x40]
  404fda:	lea    r8,[rip+0x2585a]        # 0x42a83b
  404fe1:	mov    rcx,rsi
  404fe4:	lea    rbx,[rsi+0x40]
  404fe8:	call   0x404aa0
  404fed:	lea    r8,[rip+0x25856]        # 0x42a84a
  404ff4:	mov    r9d,0x4
  404ffa:	mov    rdx,rbx
  404ffd:	mov    rcx,rsi
  405000:	call   0x404b20
  405005:	mov    edx,DWORD PTR [rsi+0x40]
  405008:	lea    r8,[rip+0x25840]        # 0x42a84f
  40500f:	mov    rcx,rsi
  405012:	call   0x404aa0
  405017:	lea    r8,[rip+0x2582c]        # 0x42a84a
  40501e:	mov    r9d,0x4
  405024:	mov    rdx,rbx
  405027:	mov    rcx,rsi
  40502a:	call   0x404b20
  40502f:	jmp    0x404ed5
  405034:	lea    rdx,[rip+0x257df]        # 0x42a81a
  40503b:	mov    rcx,rbx
  40503e:	call   rdi
  405040:	test   eax,eax
  405042:	je     0x404fc4
  405044:	lea    rdx,[rip+0x25811]        # 0x42a85c
  40504b:	mov    rcx,rbx
  40504e:	call   rdi
  405050:	test   eax,eax
  405052:	jne    0x4050e0
  405058:	cmp    DWORD PTR [rsi+0x40],0x0
  40505c:	je     0x40506a
  40505e:	lea    rcx,[rip+0x257fc]        # 0x42a861
  405065:	call   0x404a70
  40506a:	lea    rbx,[rsp+0x20]
  40506f:	mov    r9,QWORD PTR [rsi+0x18]
  405073:	lea    r8,[rip+0x25806]        # 0x42a880
  40507a:	mov    edx,0x200
  40507f:	mov    rcx,rbx
  405082:	call   0x415550
  405087:	mov    edx,DWORD PTR [rsi+0x40]
  40508a:	mov    r8,rbx
  40508d:	mov    rcx,rsi
  405090:	lea    rbx,[rsi+0x40]
  405094:	call   0x404aa0
  405099:	lea    r8,[rip+0x2584d]        # 0x42a8ed
  4050a0:	mov    r9d,0x2
  4050a6:	mov    rdx,rbx
  4050a9:	mov    rcx,rsi
  4050ac:	call   0x404b20
  4050b1:	mov    edx,DWORD PTR [rsi+0x40]
  4050b4:	lea    r8,[rip+0x25835]        # 0x42a8f0
  4050bb:	mov    rcx,rsi
  4050be:	call   0x404aa0
  4050c3:	lea    r8,[rip+0x2585a]        # 0x42a924
  4050ca:	mov    r9d,0x8
  4050d0:	mov    rdx,rbx
  4050d3:	mov    rcx,rsi
  4050d6:	call   0x404b20
  4050db:	jmp    0x404ed5
  4050e0:	lea    rdx,[rip+0x25846]        # 0x42a92d
  4050e7:	mov    rcx,rbx
  4050ea:	call   rdi
  4050ec:	test   eax,eax
  4050ee:	jne    0x405130
  4050f0:	cmp    DWORD PTR [rsi+0x40],0x0
  4050f4:	je     0x405102
  4050f6:	lea    rcx,[rip+0x25835]        # 0x42a932
  4050fd:	call   0x404a70
  405102:	mov    ecx,DWORD PTR [rsi]
  405104:	lea    rdx,[rip+0x25845]        # 0x42a950
  40510b:	xor    r9d,r9d
  40510e:	mov    r8d,0x1f
  405114:	call   0x419c80
  405119:	lea    rdx,[rsi+0x40]
  40511d:	xor    r9d,r9d
  405120:	xor    r8d,r8d
  405123:	mov    rcx,rsi
  405126:	call   0x404b20
  40512b:	jmp    0x404ed5
  405130:	lea    rdx,[rip+0x25839]        # 0x42a970
  405137:	mov    rcx,rbx
  40513a:	call   rdi
  40513c:	test   eax,eax
  40513e:	jne    0x4051a7
  405140:	cmp    DWORD PTR [rsi+0x40],0x0
  405144:	jne    0x4051fb
  40514a:	mov    edx,DWORD PTR [rsi+0x40]
  40514d:	lea    r8,[rip+0x2583f]        # 0x42a993
  405154:	mov    rcx,rsi
  405157:	lea    rbx,[rsi+0x40]
  40515b:	call   0x404aa0
  405160:	lea    r8,[rip+0x25833]        # 0x42a99a
  405167:	mov    r9d,0x4
  40516d:	mov    rdx,rbx
  405170:	mov    rcx,rsi
  405173:	call   0x404b20
  405178:	mov    edx,DWORD PTR [rsi+0x40]
  40517b:	lea    r8,[rip+0x2581d]        # 0x42a99f
  405182:	mov    rcx,rsi
  405185:	call   0x404aa0
  40518a:	lea    r8,[rip+0x25819]        # 0x42a9aa
  405191:	mov    r9d,0x3
  405197:	mov    rdx,rbx
  40519a:	mov    rcx,rsi
  40519d:	call   0x404b20
  4051a2:	jmp    0x404ed5
  4051a7:	lea    rdx,[rip+0x257c6]        # 0x42a974
  4051ae:	mov    rcx,rbx
  4051b1:	call   rdi
  4051b3:	test   eax,eax
  4051b5:	je     0x405140
  4051b7:	movsx  eax,BYTE PTR [rbx]
  4051ba:	sub    eax,0x30
  4051bd:	cmp    eax,0x9
  4051c0:	jbe    0x404ed5
  4051c6:	cmp    DWORD PTR [rip+0x324f3],0x0        # 0x4376c0
  4051cd:	jne    0x404ed5
  4051d3:	call   QWORD PTR [rip+0x9724b]        # 0x49c424
  4051d9:	lea    rdx,[rip+0x257ce]        # 0x42a9ae
  4051e0:	lea    rcx,[rax+0x60]
  4051e4:	mov    r8,rbx
  4051e7:	call   0x404a40
  4051ec:	mov    DWORD PTR [rip+0x324ca],0x1        # 0x4376c0
  4051f6:	jmp    0x404ed5
  4051fb:	lea    rcx,[rip+0x25777]        # 0x42a979
  405202:	call   0x404a70
  405207:	jmp    0x40514a
  40520c:	nop    DWORD PTR [rax+0x0]
  405210:	push   rbx
  405211:	sub    rsp,0x20
  405215:	lea    rdx,[rip+0x25640]        # 0x42a85c
  40521c:	mov    rbx,rcx
  40521f:	call   QWORD PTR [rip+0x972d7]        # 0x49c4fc
  405225:	test   eax,eax
  405227:	lea    rax,[rip+0x25797]        # 0x42a9c5
  40522e:	cmove  rbx,rax
  405232:	xor    edx,edx
  405234:	mov    rcx,rbx
  405237:	call   QWORD PTR [rip+0x9758f]        # 0x49c7cc
  40523d:	test   rax,rax
  405240:	mov    edx,0x1bb
  405245:	je     0x40524b
  405247:	movsx  edx,WORD PTR [rax+0x18]
  40524b:	mov    eax,edx
  40524d:	add    rsp,0x20
  405251:	pop    rbx
  405252:	ret    
  405253:	nop    DWORD PTR [rax]
  405256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405260:	push   rbx
  405261:	sub    rsp,0x20
  405265:	lea    rdx,[rip+0x255f0]        # 0x42a85c
  40526c:	mov    rbx,rcx
  40526f:	call   QWORD PTR [rip+0x97287]        # 0x49c4fc
  405275:	test   eax,eax
  405277:	lea    rax,[rip+0x25747]        # 0x42a9c5
  40527e:	cmove  rbx,rax
  405282:	xor    edx,edx
  405284:	mov    rcx,rbx
  405287:	call   QWORD PTR [rip+0x9753f]        # 0x49c7cc
  40528d:	test   rax,rax
  405290:	je     0x4052a0
  405292:	mov    rax,QWORD PTR [rax]
  405295:	add    rsp,0x20
  405299:	pop    rbx
  40529a:	ret    
  40529b:	nop    DWORD PTR [rax+rax*1+0x0]
  4052a0:	lea    rax,[rip+0x2572a]        # 0x42a9d1
  4052a7:	add    rsp,0x20
  4052ab:	pop    rbx
  4052ac:	ret    
  4052ad:	nop    DWORD PTR [rax]
  4052b0:	push   rsi
  4052b1:	push   rbx
  4052b2:	sub    rsp,0x28
  4052b6:	mov    eax,DWORD PTR [rcx+0x10]
  4052b9:	mov    rbx,rcx
  4052bc:	test   eax,eax
  4052be:	je     0x4052ed
  4052c0:	mov    rcx,QWORD PTR [rbx+0x8]
  4052c4:	mov    edx,0x1
  4052c9:	call   0x408260
  4052ce:	cmp    eax,0xffffffe4
  4052d1:	je     0x4052c0
  4052d3:	cmp    eax,0xffffffcc
  4052d6:	je     0x4052c0
  4052d8:	test   eax,eax
  4052da:	js     0x405350
  4052dc:	mov    rcx,QWORD PTR [rbx+0x8]
  4052e0:	call   0x408138
  4052e5:	mov    QWORD PTR [rbx+0x8],0x0
  4052ed:	mov    rcx,QWORD PTR [rbx+0x38]
  4052f1:	call   QWORD PTR [rip+0x974bd]        # 0x49c7b4
  4052f7:	mov    rcx,QWORD PTR [rbx+0x20]
  4052fb:	mov    QWORD PTR [rbx+0x30],0x0
  405303:	mov    QWORD PTR [rbx+0x38],0x0
  40530b:	call   0x422528
  405310:	mov    rcx,QWORD PTR [rbx+0x18]
  405314:	call   0x422528
  405319:	mov    rcx,QWORD PTR [rbx+0x28]
  40531d:	call   0x422528
  405322:	mov    ecx,DWORD PTR [rbx]
  405324:	mov    edx,0x2
  405329:	call   0x41a040
  40532e:	mov    ecx,DWORD PTR [rbx]
  405330:	call   0x418280
  405335:	mov    DWORD PTR [rbx],0xffffffff
  40533b:	mov    DWORD PTR [rbx+0x10],0x0
  405342:	add    rsp,0x28
  405346:	pop    rbx
  405347:	pop    rsi
  405348:	ret    
  405349:	nop    DWORD PTR [rax+0x0]
  405350:	mov    ecx,eax
  405352:	call   0x407d30
  405357:	mov    rsi,rax
  40535a:	call   QWORD PTR [rip+0x970c4]        # 0x49c424
  405360:	lea    rdx,[rip+0x2566e]        # 0x42a9d5
  405367:	lea    rcx,[rax+0x60]
  40536b:	mov    r8,rsi
  40536e:	call   0x404a40
  405373:	jmp    0x4052dc
  405378:	nop    DWORD PTR [rax+rax*1+0x0]
  405380:	push   r15
  405382:	push   r14
  405384:	mov    eax,0x10a8
  405389:	push   r13
  40538b:	push   r12
  40538d:	push   rbp
  40538e:	push   rdi
  40538f:	push   rsi
  405390:	push   rbx
  405391:	call   0x41ce10
  405396:	sub    rsp,rax
  405399:	xor    eax,eax
  40539b:	lea    rdi,[rcx+0x8]
  40539f:	mov    QWORD PTR [rsp+0x10f8],rdx
  4053a7:	mov    QWORD PTR [rsp+0x50],0x0
  4053b0:	mov    QWORD PTR [rsp+0x58],0x0
  4053b9:	mov    rbx,rcx
  4053bc:	mov    QWORD PTR [rcx],0x0
  4053c3:	and    rdi,0xfffffffffffffff8
  4053c7:	mov    QWORD PTR [rcx+0x40],0x0
  4053cf:	mov    rsi,r8
  4053d2:	sub    rcx,rdi
  4053d5:	mov    r13d,r9d
  4053d8:	add    ecx,0x48
  4053db:	shr    ecx,0x3
  4053de:	rep stos QWORD PTR es:[rdi],rax
  4053e1:	cmp    QWORD PTR [rsp+0x1110],0x0
  4053ea:	je     0x405400
  4053ec:	mov    rdx,QWORD PTR [rsp+0x10f8]
  4053f4:	lea    rcx,[rip+0x255f6]        # 0x42a9f1
  4053fb:	call   0x404a70
  405400:	lea    r8,[rsp+0x60]
  405405:	xor    eax,eax
  405407:	mov    ecx,0x6
  40540c:	cmp    r13d,0x1
  405410:	lea    r9,[rsp+0x48]
  405415:	mov    rdx,rsi
  405418:	mov    rdi,r8
  40541b:	rep stos QWORD PTR es:[rdi],rax
  40541e:	sbb    eax,eax
  405420:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405428:	add    eax,0x2
  40542b:	mov    DWORD PTR [rsp+0x68],eax
  40542f:	call   QWORD PTR [rip+0x97387]        # 0x49c7bc
  405435:	test   eax,eax
  405437:	mov    r12d,eax
  40543a:	jne    0x405608
  405440:	mov    rbp,QWORD PTR [rsp+0x48]
  405445:	lea    rdi,[rsp+0x90]
  40544d:	lea    rsi,[rsp+0x50]
  405452:	test   rbp,rbp
  405455:	je     0x4055a0
  40545b:	mov    edx,DWORD PTR [rbp+0x8]
  40545e:	mov    ecx,DWORD PTR [rbp+0x4]
  405461:	mov    r8d,DWORD PTR [rbp+0xc]
  405465:	call   0x41a410
  40546a:	cmp    eax,0xffffffff
  40546d:	mov    r15d,eax
  405470:	je     0x405573
  405476:	mov    rdx,QWORD PTR [rbp+0x10]
  40547a:	mov    rcx,QWORD PTR [rbp+0x20]
  40547e:	mov    r9d,0x1000
  405484:	mov    DWORD PTR [rsp+0x30],0xa
  40548c:	mov    DWORD PTR [rsp+0x28],0x10
  405494:	mov    r8,rdi
  405497:	mov    QWORD PTR [rsp+0x20],rsi
  40549c:	mov    r14,rdi
  40549f:	mov    r13,rsi
  4054a2:	call   QWORD PTR [rip+0x9731c]        # 0x49c7c4
  4054a8:	test   eax,eax
  4054aa:	mov    r12d,eax
  4054ad:	jne    0x405550
  4054b3:	cmp    QWORD PTR [rsp+0x1110],0x0
  4054bc:	je     0x4054d8
  4054be:	mov    rdx,QWORD PTR [rsp+0x1110]
  4054c6:	lea    rcx,[rip+0x25589]        # 0x42aa56
  4054cd:	mov    r9,rsi
  4054d0:	mov    r8,rdi
  4054d3:	call   0x404a70
  4054d8:	mov    rdx,QWORD PTR [rbp+0x20]
  4054dc:	mov    r8d,DWORD PTR [rbp+0x10]
  4054e0:	mov    ecx,r15d
  4054e3:	call   0x418290
  4054e8:	test   eax,eax
  4054ea:	mov    r12d,eax
  4054ed:	js     0x405573
  4054f3:	jne    0x4055cd
  4054f9:	mov    rcx,QWORD PTR [rsp+0x10f8]
  405501:	mov    DWORD PTR [rbx+0x10],0x0
  405508:	mov    DWORD PTR [rbx],r15d
  40550b:	call   0x41a7c0
  405510:	mov    rcx,r14
  405513:	mov    QWORD PTR [rbx+0x18],rax
  405517:	call   0x41a7c0
  40551c:	mov    rcx,r13
  40551f:	mov    QWORD PTR [rbx+0x20],rax
  405523:	call   0x41a7c0
  405528:	mov    QWORD PTR [rbx+0x28],rax
  40552c:	mov    rax,QWORD PTR [rsp+0x48]
  405531:	mov    QWORD PTR [rbx+0x30],rbp
  405535:	mov    QWORD PTR [rbx+0x38],rax
  405539:	add    rsp,0x10a8
  405540:	pop    rbx
  405541:	pop    rsi
  405542:	pop    rdi
  405543:	pop    rbp
  405544:	pop    r12
  405546:	pop    r13
  405548:	pop    r14
  40554a:	pop    r15
  40554c:	ret    
  40554d:	nop    DWORD PTR [rax]
  405550:	mov    ecx,eax
  405552:	call   0x4186a0
  405557:	mov    r13,rax
  40555a:	call   QWORD PTR [rip+0x96ec4]        # 0x49c424
  405560:	lea    rdx,[rip+0x254dc]        # 0x42aa43
  405567:	lea    rcx,[rax+0x60]
  40556b:	mov    r8,r13
  40556e:	call   0x404a40
  405573:	mov    rbp,QWORD PTR [rbp+0x28]
  405577:	test   rbp,rbp
  40557a:	jne    0x40545b
  405580:	test   r12d,r12d
  405583:	jne    0x4055c0
  405585:	cmp    r15d,0xffffffff
  405589:	je     0x4055a0
  40558b:	lea    r14,[rsp+0x90]
  405593:	lea    r13,[rsp+0x50]
  405598:	jmp    0x4054f9
  40559d:	nop    DWORD PTR [rax]
  4055a0:	call   QWORD PTR [rip+0x96e7e]        # 0x49c424
  4055a6:	lea    rdx,[rip+0x25473]        # 0x42aa20
  4055ad:	lea    rcx,[rax+0x60]
  4055b1:	call   0x404a40
  4055b6:	mov    ecx,0x1
  4055bb:	call   0x422578
  4055c0:	lea    r14,[rsp+0x90]
  4055c8:	lea    r13,[rsp+0x50]
  4055cd:	call   QWORD PTR [rip+0x96ea1]        # 0x49c474
  4055d3:	mov    ecx,DWORD PTR [rax]
  4055d5:	call   0x41a830
  4055da:	mov    rbx,rax
  4055dd:	call   QWORD PTR [rip+0x96e41]        # 0x49c424
  4055e3:	lea    rdx,[rip+0x2547e]        # 0x42aa68
  4055ea:	lea    rcx,[rax+0x60]
  4055ee:	mov    QWORD PTR [rsp+0x20],rbx
  4055f3:	mov    r9,r13
  4055f6:	mov    r8,r14
  4055f9:	call   0x404a40
  4055fe:	mov    ecx,0x1
  405603:	call   0x422578
  405608:	mov    ecx,eax
  40560a:	call   0x4186a0
  40560f:	mov    rbx,rax
  405612:	call   QWORD PTR [rip+0x96e0c]        # 0x49c424
  405618:	mov    r8,QWORD PTR [rsp+0x10f8]
  405620:	lea    rcx,[rax+0x60]
  405624:	lea    rdx,[rip+0x253d9]        # 0x42aa04
  40562b:	mov    QWORD PTR [rsp+0x20],rbx
  405630:	mov    r9,rsi
  405633:	call   0x404a40
  405638:	mov    ecx,0x1
  40563d:	call   0x422578
  405642:	nop
  405643:	nop    DWORD PTR [rax]
  405646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405650:	sub    rsp,0x1c8
  405657:	mov    ecx,0x101
  40565c:	lea    rdx,[rsp+0x20]
  405661:	call   QWORD PTR [rip+0x9712d]        # 0x49c794
  405667:	test   eax,eax
  405669:	je     0x405678
  40566b:	lea    rcx,[rip+0x25416]        # 0x42aa88
  405672:	call   0x4224c0
  405677:	nop
  405678:	add    rsp,0x1c8
  40567f:	ret    
  405680:	push   rsi
  405681:	push   rbx
  405682:	sub    rsp,0x28
  405686:	movsx  eax,BYTE PTR [rcx]
  405689:	mov    rbx,rcx
  40568c:	mov    rsi,rdx
  40568f:	sub    eax,0x30
  405692:	cmp    eax,0x9
  405695:	jbe    0x4056a1
  405697:	mov    rax,rbx
  40569a:	add    rsp,0x28
  40569e:	pop    rbx
  40569f:	pop    rsi
  4056a0:	ret    
  4056a1:	call   0x422598
  4056a6:	test   eax,eax
  4056a8:	je     0x405697
  4056aa:	movzx  ecx,ax
  4056ad:	call   QWORD PTR [rip+0x97129]        # 0x49c7dc
  4056b3:	mov    rdx,rsi
  4056b6:	movzx  ecx,ax
  4056b9:	call   QWORD PTR [rip+0x97115]        # 0x49c7d4
  4056bf:	test   rax,rax
  4056c2:	je     0x4056ce
  4056c4:	mov    rax,QWORD PTR [rax]
  4056c7:	add    rsp,0x28
  4056cb:	pop    rbx
  4056cc:	pop    rsi
  4056cd:	ret    
  4056ce:	call   QWORD PTR [rip+0x96d50]        # 0x49c424
  4056d4:	lea    rdx,[rip+0x253c5]        # 0x42aaa0
  4056db:	lea    rcx,[rax+0x60]
  4056df:	mov    r8,rbx
  4056e2:	call   0x404a40
  4056e7:	jmp    0x405697
  4056e9:	nop    DWORD PTR [rax+0x0]
  4056f0:	push   rsi
  4056f1:	push   rbx
  4056f2:	sub    rsp,0x28
  4056f6:	mov    rbx,rcx
  4056f9:	mov    rsi,rdx
  4056fc:	call   0x422598
  405701:	test   eax,eax
  405703:	je     0x405710
  405705:	add    rsp,0x28
  405709:	pop    rbx
  40570a:	pop    rsi
  40570b:	ret    
  40570c:	nop    DWORD PTR [rax+0x0]
  405710:	mov    rdx,rsi
  405713:	mov    rcx,rbx
  405716:	call   QWORD PTR [rip+0x970b0]        # 0x49c7cc
  40571c:	test   rax,rax
  40571f:	je     0x405735
  405721:	movzx  ecx,WORD PTR [rax+0x18]
  405725:	call   QWORD PTR [rip+0x970c1]        # 0x49c7ec
  40572b:	movzx  eax,ax
  40572e:	add    rsp,0x28
  405732:	pop    rbx
  405733:	pop    rsi
  405734:	ret    
  405735:	call   QWORD PTR [rip+0x96ce9]        # 0x49c424
  40573b:	lea    rdx,[rip+0x253a6]        # 0x42aae8
  405742:	lea    rcx,[rax+0x60]
  405746:	call   0x404a40
  40574b:	mov    ecx,0x1
  405750:	call   0x422578
  405755:	nop
  405756:	nop
  405757:	nop
  405758:	nop
  405759:	nop
  40575a:	nop
  40575b:	nop
  40575c:	nop
  40575d:	nop
  40575e:	nop
  40575f:	nop
  405760:	sub    rsp,0x38
  405764:	mov    QWORD PTR [rsp+0x50],r8
  405769:	lea    r8,[rsp+0x50]
  40576e:	mov    QWORD PTR [rsp+0x58],r9
  405773:	mov    QWORD PTR [rsp+0x28],r8
  405778:	call   0x41d9a0
  40577d:	add    rsp,0x38
  405781:	ret    
  405782:	nop    DWORD PTR [rax+0x0]
  405786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405790:	sub    rsp,0x38
  405794:	mov    QWORD PTR [rsp+0x48],rdx
  405799:	lea    rdx,[rsp+0x48]
  40579e:	mov    QWORD PTR [rsp+0x50],r8
  4057a3:	mov    QWORD PTR [rsp+0x58],r9
  4057a8:	mov    QWORD PTR [rsp+0x28],rdx
  4057ad:	call   0x41d9d0
  4057b2:	add    rsp,0x38
  4057b6:	ret    
  4057b7:	nop    WORD PTR [rax+rax*1+0x0]
  4057c0:	push   rbp
  4057c1:	push   rdi
  4057c2:	push   rsi
  4057c3:	push   rbx
  4057c4:	sub    rsp,0x38
  4057c8:	mov    rdi,rcx
  4057cb:	lea    rcx,[rsp+0x28]
  4057d0:	mov    rsi,rdx
  4057d3:	mov    rbp,r8
  4057d6:	mov    rbx,r9
  4057d9:	call   0x407fb8
  4057de:	test   eax,eax
  4057e0:	js     0x405840
  4057e2:	mov    rcx,QWORD PTR [rsp+0x28]
  4057e7:	mov    r9,rdi
  4057ea:	mov    r8,rsi
  4057ed:	mov    edx,0x3
  4057f2:	call   0x407fd0
  4057f7:	test   eax,eax
  4057f9:	js     0x40589a
  4057ff:	test   rbx,rbx
  405802:	je     0x40581b
  405804:	mov    rcx,QWORD PTR [rsp+0x28]
  405809:	xor    edx,edx
  40580b:	mov    r8,rbx
  40580e:	call   0x407fb0
  405813:	test   eax,eax
  405815:	js     0x4058c7
  40581b:	mov    rcx,QWORD PTR [rsp+0x28]
  405820:	mov    rdx,rbp
  405823:	call   0x407fc0
  405828:	test   eax,eax
  40582a:	jne    0x40586d
  40582c:	mov    rcx,QWORD PTR [rsp+0x28]
  405831:	call   0x407fc8
  405836:	nop
  405837:	add    rsp,0x38
  40583b:	pop    rbx
  40583c:	pop    rsi
  40583d:	pop    rdi
  40583e:	pop    rbp
  40583f:	ret    
  405840:	mov    ecx,eax
  405842:	call   0x407d30
  405847:	mov    rbx,rax
  40584a:	call   QWORD PTR [rip+0x96bd4]        # 0x49c424
  405850:	lea    rdx,[rip+0x252b9]        # 0x42ab10
  405857:	lea    rcx,[rax+0x60]
  40585b:	mov    r8,rbx
  40585e:	call   0x405760
  405863:	mov    ecx,0x1
  405868:	call   0x422578
  40586d:	mov    ecx,eax
  40586f:	call   0x407d30
  405874:	mov    rbx,rax
  405877:	call   QWORD PTR [rip+0x96ba7]        # 0x49c424
  40587d:	lea    rdx,[rip+0x252cb]        # 0x42ab4f
  405884:	lea    rcx,[rax+0x60]
  405888:	mov    r8,rbx
  40588b:	call   0x405760
  405890:	mov    ecx,0x1
  405895:	call   0x422578
  40589a:	mov    ecx,eax
  40589c:	call   0x407d30
  4058a1:	mov    rbx,rax
  4058a4:	call   QWORD PTR [rip+0x96b7a]        # 0x49c424
  4058aa:	lea    rdx,[rip+0x25271]        # 0x42ab22
  4058b1:	lea    rcx,[rax+0x60]
  4058b5:	mov    r8,rbx
  4058b8:	call   0x405760
  4058bd:	mov    ecx,0x1
  4058c2:	call   0x422578
  4058c7:	mov    ecx,eax
  4058c9:	call   0x407d30
  4058ce:	mov    rbx,rax
  4058d1:	call   QWORD PTR [rip+0x96b4d]        # 0x49c424
  4058d7:	lea    rdx,[rip+0x2525a]        # 0x42ab38
  4058de:	lea    rcx,[rax+0x60]
  4058e2:	mov    r8,rbx
  4058e5:	call   0x405760
  4058ea:	mov    ecx,0x1
  4058ef:	call   0x422578
  4058f4:	nop
  4058f5:	nop
  4058f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405900:	push   r15
  405902:	push   r14
  405904:	push   r13
  405906:	push   r12
  405908:	push   rbp
  405909:	push   rdi
  40590a:	push   rsi
  40590b:	push   rbx
  40590c:	sub    rsp,0x4b8
  405913:	mov    r13,rcx
  405916:	mov    rsi,rdx
  405919:	mov    rdi,r8
  40591c:	mov    rbp,r9
  40591f:	lea    rbx,[rsp+0xb0]
  405927:	call   0x405650
  40592c:	test   r13,r13
  40592f:	je     0x405bd4
  405935:	lea    rdx,[rip+0x25260]        # 0x42ab9c
  40593c:	mov    rcx,r13
  40593f:	call   0x422440
  405944:	test   rax,rax
  405947:	je     0x405c60
  40594d:	lea    r9,[rax+0x7]
  405951:	lea    r8,[rip+0x2524c]        # 0x42aba4
  405958:	lea    rcx,[rip+0x31da1]        # 0x437700
  40595f:	mov    edx,0x200
  405964:	lea    r15,[rip+0x251f8]        # 0x42ab63
  40596b:	call   0x415550
  405970:	lea    rcx,[rip+0x31d89]        # 0x437700
  405977:	mov    edx,0x2f
  40597c:	call   0x422490
  405981:	test   rax,rax
  405984:	je     0x40598d
  405986:	lea    r15,[rax+0x1]
  40598a:	mov    BYTE PTR [rax],0x0
  40598d:	lea    rcx,[rip+0x31d6c]        # 0x437700
  405994:	mov    edx,0x3a
  405999:	call   0x422490
  40599e:	test   rax,rax
  4059a1:	je     0x405b20
  4059a7:	lea    rcx,[rax+0x1]
  4059ab:	mov    BYTE PTR [rax],0x0
  4059ae:	call   0x422598
  4059b3:	test   eax,eax
  4059b5:	mov    r9d,eax
  4059b8:	je     0x405b20
  4059be:	lea    r14,[rsp+0x50]
  4059c3:	lea    r8,[rip+0x251dd]        # 0x42aba7
  4059ca:	lea    r13,[rip+0x31d2f]        # 0x437700
  4059d1:	mov    edx,0x10
  4059d6:	mov    rcx,r14
  4059d9:	call   0x415550
  4059de:	mov    r12,QWORD PTR [rip+0x96a3f]        # 0x49c424
  4059e5:	call   r12
  4059e8:	lea    rdx,[rip+0x251c1]        # 0x42abb0
  4059ef:	lea    rcx,[rax+0x60]
  4059f3:	mov    r8,r13
  4059f6:	call   0x405760
  4059fb:	mov    r9,QWORD PTR [rsp+0x520]
  405a03:	lea    r8,[rsp+0x40]
  405a08:	mov    rcx,rsi
  405a0b:	mov    rdx,rdi
  405a0e:	mov    QWORD PTR [rsp+0x30],0x0
  405a17:	mov    QWORD PTR [rsp+0x38],0x0
  405a20:	mov    rsi,rbx
  405a23:	call   0x4057c0
  405a28:	mov    eax,DWORD PTR [rsp+0x48]
  405a2c:	lea    r8,[rip+0x251a5]        # 0x42abd8
  405a33:	mov    QWORD PTR [rsp+0x20],r13
  405a38:	mov    r9,r15
  405a3b:	mov    edx,0x400
  405a40:	mov    rcx,rbx
  405a43:	mov    DWORD PTR [rsp+0x28],eax
  405a47:	call   0x415550
  405a4c:	mov    edx,DWORD PTR [rsi]
  405a4e:	add    rsi,0x4
  405a52:	lea    eax,[rdx-0x1010101]
  405a58:	not    edx
  405a5a:	and    eax,edx
  405a5c:	and    eax,0x80808080
  405a61:	je     0x405a4c
  405a63:	mov    edx,eax
  405a65:	lea    rdi,[rsp+0x60]
  405a6a:	mov    r8,r14
  405a6d:	shr    edx,0x10
  405a70:	test   eax,0x8080
  405a75:	cmove  eax,edx
  405a78:	lea    rdx,[rsi+0x2]
  405a7c:	mov    rcx,rdi
  405a7f:	cmove  rsi,rdx
  405a83:	add    al,al
  405a85:	lea    rax,[rip+0x251c8]        # 0x42ac54
  405a8c:	sbb    rsi,0x3
  405a90:	mov    rdx,r13
  405a93:	xor    r9d,r9d
  405a96:	mov    QWORD PTR [rsp+0x20],rax
  405a9b:	sub    rsi,rbx
  405a9e:	call   0x405380
  405aa3:	mov    r8d,esi
  405aa6:	mov    rdx,rbx
  405aa9:	mov    rcx,rdi
  405aac:	call   0x404e90
  405ab1:	mov    r8d,DWORD PTR [rsp+0x48]
  405ab6:	mov    rdx,QWORD PTR [rsp+0x40]
  405abb:	mov    rcx,rdi
  405abe:	call   0x404e90
  405ac3:	lea    rdx,[rip+0x31e36]        # 0x437900
  405aca:	mov    r8d,0x1001
  405ad0:	mov    rcx,rdi
  405ad3:	call   0x404cb0
  405ad8:	mov    rbx,rax
  405adb:	test   ebx,ebx
  405add:	jle    0x405b40
  405adf:	mov    esi,DWORD PTR [rsp+0x38]
  405ae3:	movsxd r14,ebx
  405ae6:	mov    rcx,QWORD PTR [rsp+0x30]
  405aeb:	lea    rdx,[r14+rsi*1]
  405aef:	call   0x415500
  405af4:	test   rax,rax
  405af7:	mov    QWORD PTR [rsp+0x30],rax
  405afc:	je     0x405d13
  405b02:	lea    rcx,[rax+rsi*1]
  405b06:	lea    rdx,[rip+0x31df3]        # 0x437900
  405b0d:	mov    r8,r14
  405b10:	add    ebx,esi
  405b12:	call   0x4224d8
  405b17:	mov    DWORD PTR [rsp+0x38],ebx
  405b1b:	jmp    0x405ac3
  405b1d:	nop    DWORD PTR [rax]
  405b20:	lea    r13,[rip+0x31bd9]        # 0x437700
  405b27:	mov    eax,0x3038
  405b2c:	mov    BYTE PTR [rsp+0x52],0x0
  405b31:	lea    r14,[rsp+0x50]
  405b36:	mov    WORD PTR [rsp+0x50],ax
  405b3b:	jmp    0x4059de
  405b40:	test   eax,eax
  405b42:	jne    0x405c70
  405b48:	mov    r13d,DWORD PTR [rsp+0x38]
  405b4d:	test   r13d,r13d
  405b50:	je     0x405c70
  405b56:	mov    rcx,rdi
  405b59:	call   0x4052b0
  405b5e:	mov    rsi,QWORD PTR [rsp+0x30]
  405b63:	lea    r8,[rip+0x25126]        # 0x42ac90
  405b6a:	mov    edx,r13d
  405b6d:	mov    r9d,0x4
  405b73:	mov    rcx,rsi
  405b76:	call   0x415260
  405b7b:	test   rax,rax
  405b7e:	je     0x405cf6
  405b84:	lea    rbx,[rax+0x4]
  405b88:	mov    r8,rsi
  405b8b:	sub    r8,rbx
  405b8e:	lea    ecx,[r8+r13*1]
  405b92:	mov    DWORD PTR [rbp+0x8],ecx
  405b95:	call   0x414e40
  405b9a:	test   rax,rax
  405b9d:	mov    QWORD PTR [rbp+0x0],rax
  405ba1:	je     0x405cec
  405ba7:	mov    r8d,DWORD PTR [rbp+0x8]
  405bab:	mov    rdx,rbx
  405bae:	mov    rcx,rax
  405bb1:	call   0x4224d8
  405bb6:	mov    rcx,rsi
  405bb9:	call   0x422528
  405bbe:	xor    eax,eax
  405bc0:	add    rsp,0x4b8
  405bc7:	pop    rbx
  405bc8:	pop    rsi
  405bc9:	pop    rdi
  405bca:	pop    rbp
  405bcb:	pop    r12
  405bcd:	pop    r13
  405bcf:	pop    r14
  405bd1:	pop    r15
  405bd3:	ret    
  405bd4:	xor    edx,edx
  405bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405be0:	lea    r12d,[rdx+0x1]
  405be4:	mov    QWORD PTR [rsp+0x20],0x0
  405bed:	mov    r9,rbx
  405bf0:	mov    r8d,0x2716
  405bf6:	mov    rcx,rsi
  405bf9:	call   0x407cd8
  405bfe:	cmp    eax,0xffffff97
  405c01:	mov    edx,r12d
  405c04:	je     0x405be0
  405c06:	test   eax,eax
  405c08:	js     0x405c86
  405c0a:	mov    eax,DWORD PTR [rsp+0xb8]
  405c11:	lea    ecx,[rax+0x1]
  405c14:	call   0x414e40
  405c19:	mov    r8d,DWORD PTR [rsp+0xb8]
  405c21:	mov    rdx,QWORD PTR [rsp+0xb0]
  405c29:	mov    rcx,rax
  405c2c:	mov    r13,rax
  405c2f:	call   0x4224d8
  405c34:	mov    eax,DWORD PTR [rsp+0xb8]
  405c3b:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  405c41:	mov    rax,QWORD PTR [rip+0x2c4d8]        # 0x432120
  405c48:	mov    rcx,QWORD PTR [rsp+0xb0]
  405c50:	call   QWORD PTR [rax]
  405c52:	jmp    0x405935
  405c57:	nop    WORD PTR [rax+rax*1+0x0]
  405c60:	lea    r15,[rip+0x24efc]        # 0x42ab63
  405c67:	jmp    0x405b27
  405c6c:	nop    DWORD PTR [rax+0x0]
  405c70:	lea    rcx,[rip+0x25014]        # 0x42ac8b
  405c77:	call   0x4224c0
  405c7c:	mov    eax,0xffffffff
  405c81:	jmp    0x405bc0
  405c86:	xor    edx,edx
  405c88:	nop    DWORD PTR [rax+rax*1+0x0]
  405c90:	lea    r13d,[rdx+0x1]
  405c94:	mov    QWORD PTR [rsp+0x20],0x0
  405c9d:	mov    r9,rbx
  405ca0:	mov    r8d,0x2716
  405ca6:	mov    rcx,rdi
  405ca9:	call   0x407cd8
  405cae:	cmp    eax,0xffffff97
  405cb1:	mov    r12d,eax
  405cb4:	mov    edx,r13d
  405cb7:	je     0x405c90
  405cb9:	test   eax,eax
  405cbb:	jns    0x405c0a
  405cc1:	mov    ecx,eax
  405cc3:	call   0x407d30
  405cc8:	mov    rbx,rax
  405ccb:	call   QWORD PTR [rip+0x96753]        # 0x49c424
  405cd1:	lea    rdx,[rip+0x24e90]        # 0x42ab68
  405cd8:	lea    rcx,[rax+0x60]
  405cdc:	mov    r8,rbx
  405cdf:	call   0x405760
  405ce4:	mov    eax,r12d
  405ce7:	jmp    0x405bc0
  405cec:	mov    eax,0xffffffff
  405cf1:	jmp    0x405bc0
  405cf6:	call   r12
  405cf9:	lea    rdx,[rip+0x24f98]        # 0x42ac98
  405d00:	lea    rcx,[rax+0x60]
  405d04:	call   0x405760
  405d09:	mov    eax,0xffffffff
  405d0e:	jmp    0x405bc0
  405d13:	call   r12
  405d16:	lea    rdx,[rip+0x24f4b]        # 0x42ac68
  405d1d:	lea    rcx,[rax+0x60]
  405d21:	call   0x405760
  405d26:	mov    ecx,0x1
  405d2b:	call   0x422578
  405d30:	nop
  405d31:	nop    DWORD PTR [rax+rax*1+0x0]
  405d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d40:	push   rbx
  405d41:	sub    rsp,0x20
  405d45:	test   ecx,ecx
  405d47:	mov    ebx,ecx
  405d49:	je     0x405db4
  405d4b:	lea    rcx,[rip+0x24f66]        # 0x42acb8
  405d52:	call   0x405790
  405d57:	test   bl,0x1
  405d5a:	je     0x405d74
  405d5c:	lea    rcx,[rip+0x24f65]        # 0x42acc8
  405d63:	call   0x405790
  405d68:	lea    rcx,[rip+0x24f5c]        # 0x42accb
  405d6f:	call   0x405790
  405d74:	test   bl,0x2
  405d77:	je     0x405d91
  405d79:	lea    rcx,[rip+0x24f48]        # 0x42acc8
  405d80:	call   0x405790
  405d85:	lea    rcx,[rip+0x24f55]        # 0x42ace1
  405d8c:	call   0x405790
  405d91:	test   bl,0x4
  405d94:	jne    0x405dc5
  405d96:	test   bl,0x8
  405d99:	jne    0x405de2
  405d9b:	test   bl,0x10
  405d9e:	jne    0x405dff
  405da0:	test   bl,0x20
  405da3:	jne    0x405e1c
  405da5:	and    ebx,0x40
  405da8:	jne    0x405e3d
  405dae:	add    rsp,0x20
  405db2:	pop    rbx
  405db3:	ret    
  405db4:	lea    rcx,[rip+0x24f05]        # 0x42acc0
  405dbb:	call   0x405790
  405dc0:	test   bl,0x4
  405dc3:	je     0x405d96
  405dc5:	lea    rcx,[rip+0x24efc]        # 0x42acc8
  405dcc:	call   0x405790
  405dd1:	lea    rcx,[rip+0x24f24]        # 0x42acfc
  405dd8:	call   0x405790
  405ddd:	test   bl,0x8
  405de0:	je     0x405d9b
  405de2:	lea    rcx,[rip+0x24edf]        # 0x42acc8
  405de9:	call   0x405790
  405dee:	lea    rcx,[rip+0x24f22]        # 0x42ad17
  405df5:	call   0x405790
  405dfa:	test   bl,0x10
  405dfd:	je     0x405da0
  405dff:	lea    rcx,[rip+0x24ec2]        # 0x42acc8
  405e06:	call   0x405790
  405e0b:	lea    rcx,[rip+0x24f18]        # 0x42ad2a
  405e12:	call   0x405790
  405e17:	test   bl,0x20
  405e1a:	je     0x405da5
  405e1c:	lea    rcx,[rip+0x24ea5]        # 0x42acc8
  405e23:	call   0x405790
  405e28:	lea    rcx,[rip+0x24f0d]        # 0x42ad3c
  405e2f:	call   0x405790
  405e34:	and    ebx,0x40
  405e37:	je     0x405dae
  405e3d:	lea    rcx,[rip+0x24e84]        # 0x42acc8
  405e44:	call   0x405790
  405e49:	lea    rcx,[rip+0x24f0a]        # 0x42ad5a
  405e50:	add    rsp,0x20
  405e54:	pop    rbx
  405e55:	jmp    0x405790
  405e5a:	nop    WORD PTR [rax+rax*1+0x0]
  405e60:	push   r12
  405e62:	push   rbp
  405e63:	push   rdi
  405e64:	push   rsi
  405e65:	push   rbx
  405e66:	sub    rsp,0xa0
  405e6d:	mov    rbp,rdx
  405e70:	mov    r12,r8
  405e73:	mov    rsi,r9
  405e76:	mov    rbx,rcx
  405e79:	xor    ecx,ecx
  405e7b:	call   QWORD PTR [rip+0x96683]        # 0x49c504
  405e81:	lea    rcx,[rsp+0x70]
  405e86:	mov    rdi,rax
  405e89:	call   0x407f80
  405e8e:	test   eax,eax
  405e90:	js     0x40612f
  405e96:	mov    rcx,QWORD PTR [rsp+0x70]
  405e9b:	mov    rdx,r12
  405e9e:	call   0x407f88
  405ea3:	test   eax,eax
  405ea5:	js     0x40615c
  405eab:	mov    rcx,QWORD PTR [rsp+0x70]
  405eb0:	xor    edx,edx
  405eb2:	mov    r8,rbx
  405eb5:	call   0x407fa8
  405eba:	test   eax,eax
  405ebc:	js     0x406010
  405ec2:	mov    rcx,QWORD PTR [rsp+0x70]
  405ec7:	lea    r8,[rsp+0x68]
  405ecc:	xor    r9d,r9d
  405ecf:	mov    rdx,rbp
  405ed2:	call   0x407f70
  405ed7:	test   eax,eax
  405ed9:	js     0x4061b6
  405edf:	mov    ecx,DWORD PTR [rsp+0x68]
  405ee3:	test   ecx,ecx
  405ee5:	jne    0x406030
  405eeb:	lea    rax,[rsp+0x6c]
  405ef0:	lea    rbx,[rsp+0x78]
  405ef5:	lea    r12,[rsp+0x88]
  405efd:	lea    rbp,[rsp+0x80]
  405f05:	mov    rcx,QWORD PTR [rsp+0x70]
  405f0a:	xor    r9d,r9d
  405f0d:	xor    r8d,r8d
  405f10:	xor    edx,edx
  405f12:	mov    QWORD PTR [rsp+0x50],0x0
  405f1b:	mov    QWORD PTR [rsp+0x48],rbx
  405f20:	mov    QWORD PTR [rsp+0x40],r12
  405f25:	mov    QWORD PTR [rsp+0x38],rbp
  405f2a:	mov    QWORD PTR [rsp+0x30],rax
  405f2f:	mov    QWORD PTR [rsp+0x28],0x0
  405f38:	mov    QWORD PTR [rsp+0x20],0x0
  405f41:	call   0x407f90
  405f46:	test   eax,eax
  405f48:	js     0x406189
  405f4e:	cmp    DWORD PTR [rsp+0x6c],0x1
  405f53:	je     0x4060e0
  405f59:	mov    rbx,QWORD PTR [rsp+0x88]
  405f61:	cmp    rbx,0xffffffffffffffff
  405f65:	je     0x406080
  405f6b:	cmp    rbx,rdi
  405f6e:	jl     0x4060ff
  405f74:	test   rsi,rsi
  405f77:	je     0x405fd7
  405f79:	mov    rcx,QWORD PTR [rsp+0x70]
  405f7e:	lea    r8,[rsp+0x90]
  405f86:	xor    edx,edx
  405f88:	call   0x407f98
  405f8d:	cmp    eax,0xffffffc8
  405f90:	je     0x4060b2
  405f96:	test   eax,eax
  405f98:	js     0x406203
  405f9e:	mov    r8d,DWORD PTR [rsp+0x98]
  405fa6:	cmp    r8d,DWORD PTR [rsi+0x8]
  405faa:	jne    0x4061e3
  405fb0:	mov    rbx,QWORD PTR [rsp+0x90]
  405fb8:	mov    rcx,QWORD PTR [rsi]
  405fbb:	mov    rdx,rbx
  405fbe:	call   0x4224e0
  405fc3:	test   eax,eax
  405fc5:	jne    0x4061e3
  405fcb:	mov    rax,QWORD PTR [rip+0x2c14e]        # 0x432120
  405fd2:	mov    rcx,rbx
  405fd5:	call   QWORD PTR [rax]
  405fd7:	mov    rcx,rbp
  405fda:	mov    ebx,0x1
  405fdf:	call   QWORD PTR [rip+0x96487]        # 0x49c46c
  405fe5:	lea    rcx,[rip+0x24fc4]        # 0x42afb0
  405fec:	mov    rdx,rax
  405fef:	call   0x405790
  405ff4:	mov    rcx,QWORD PTR [rsp+0x70]
  405ff9:	call   0x407fa0
  405ffe:	mov    eax,ebx
  406000:	add    rsp,0xa0
  406007:	pop    rbx
  406008:	pop    rsi
  406009:	pop    rdi
  40600a:	pop    rbp
  40600b:	pop    r12
  40600d:	ret    
  40600e:	xchg   ax,ax
  406010:	cmp    eax,0xffffffc8
  406013:	je     0x406064
  406015:	lea    rcx,[rip+0x24dac]        # 0x42adc8
  40601c:	mov    ebx,0xffffffff
  406021:	call   0x405790
  406026:	jmp    0x405ff4
  406028:	nop    DWORD PTR [rax+rax*1+0x0]
  406030:	lea    rcx,[rip+0x24df4]        # 0x42ae2b
  406037:	call   0x405790
  40603c:	mov    ecx,DWORD PTR [rsp+0x68]
  406040:	call   0x405d40
  406045:	lea    rcx,[rip+0x24dfd]        # 0x42ae49
  40604c:	call   0x405790
  406051:	mov    edx,DWORD PTR [rsp+0x68]
  406055:	test   edx,edx
  406057:	je     0x405eeb
  40605d:	mov    ebx,0xffffffff
  406062:	jmp    0x405ff4
  406064:	lea    rcx,[rip+0x24d2d]        # 0x42ad98
  40606b:	mov    ebx,0xffffffff
  406070:	call   0x405790
  406075:	jmp    0x405ff4
  40607a:	nop    WORD PTR [rax+rax*1+0x0]
  406080:	sub    rdi,QWORD PTR [rsp+0x80]
  406088:	cmp    rdi,0x3f480
  40608f:	jle    0x405f74
  406095:	mov    rcx,rbp
  406098:	call   QWORD PTR [rip+0x963ce]        # 0x49c46c
  40609e:	lea    rcx,[rip+0x24deb]        # 0x42ae90
  4060a5:	mov    rdx,rax
  4060a8:	call   0x405790
  4060ad:	jmp    0x405ff4
  4060b2:	mov    eax,DWORD PTR [rsp+0xf0]
  4060b9:	test   eax,eax
  4060bb:	je     0x405fd7
  4060c1:	call   QWORD PTR [rip+0x9635d]        # 0x49c424
  4060c7:	lea    rdx,[rip+0x24e52]        # 0x42af20
  4060ce:	lea    rcx,[rax+0x60]
  4060d2:	call   0x405760
  4060d7:	jmp    0x405fd7
  4060dc:	nop    DWORD PTR [rax+0x0]
  4060e0:	mov    rcx,rbx
  4060e3:	xor    ebx,ebx
  4060e5:	call   QWORD PTR [rip+0x96381]        # 0x49c46c
  4060eb:	lea    rcx,[rip+0x24d76]        # 0x42ae68
  4060f2:	mov    rdx,rax
  4060f5:	call   0x405790
  4060fa:	jmp    0x405ff4
  4060ff:	mov    rbx,QWORD PTR [rip+0x96366]        # 0x49c46c
  406106:	mov    rcx,r12
  406109:	call   rbx
  40610b:	mov    rcx,rbp
  40610e:	mov    rsi,rax
  406111:	call   rbx
  406113:	lea    rcx,[rip+0x24db6]        # 0x42aed0
  40611a:	mov    rdx,rax
  40611d:	mov    r8,rsi
  406120:	mov    ebx,0xffffffff
  406125:	call   0x405790
  40612a:	jmp    0x405ff4
  40612f:	mov    ecx,eax
  406131:	call   0x407d30
  406136:	mov    rbx,rax
  406139:	call   QWORD PTR [rip+0x962e5]        # 0x49c424
  40613f:	lea    rdx,[rip+0x24c28]        # 0x42ad6e
  406146:	lea    rcx,[rax+0x60]
  40614a:	mov    r8,rbx
  40614d:	call   0x405760
  406152:	mov    ecx,0x1
  406157:	call   0x422578
  40615c:	mov    ecx,eax
  40615e:	call   0x407d30
  406163:	mov    rbx,rax
  406166:	call   QWORD PTR [rip+0x962b8]        # 0x49c424
  40616c:	lea    rdx,[rip+0x24c0e]        # 0x42ad81
  406173:	lea    rcx,[rax+0x60]
  406177:	mov    r8,rbx
  40617a:	call   0x405760
  40617f:	mov    ecx,0x1
  406184:	call   0x422578
  406189:	mov    ecx,eax
  40618b:	call   0x407d30
  406190:	mov    rbx,rax
  406193:	call   QWORD PTR [rip+0x9628b]        # 0x49c424
  406199:	lea    rdx,[rip+0x24cac]        # 0x42ae4c
  4061a0:	lea    rcx,[rax+0x60]
  4061a4:	mov    r8,rbx
  4061a7:	call   0x405760
  4061ac:	mov    ecx,0x1
  4061b1:	call   0x422578
  4061b6:	mov    ecx,eax
  4061b8:	call   0x407d30
  4061bd:	mov    rbx,rax
  4061c0:	call   QWORD PTR [rip+0x9625e]        # 0x49c424
  4061c6:	lea    rdx,[rip+0x24c3b]        # 0x42ae08
  4061cd:	lea    rcx,[rax+0x60]
  4061d1:	mov    r8,rbx
  4061d4:	call   0x405760
  4061d9:	mov    ecx,0x1
  4061de:	call   0x422578
  4061e3:	call   QWORD PTR [rip+0x9623b]        # 0x49c424
  4061e9:	lea    rdx,[rip+0x24d98]        # 0x42af88
  4061f0:	lea    rcx,[rax+0x60]
  4061f4:	call   0x405760
  4061f9:	mov    ecx,0x1
  4061fe:	call   0x422578
  406203:	mov    ecx,eax
  406205:	call   0x407d30
  40620a:	mov    rbx,rax
  40620d:	call   QWORD PTR [rip+0x96211]        # 0x49c424
  406213:	lea    rdx,[rip+0x24d46]        # 0x42af60
  40621a:	lea    rcx,[rax+0x60]
  40621e:	mov    r8,rbx
  406221:	call   0x405760
  406226:	mov    ecx,0x1
  40622b:	call   0x422578
  406230:	nop
  406231:	nop
  406232:	nop
  406233:	nop
  406234:	nop
  406235:	nop
  406236:	nop
  406237:	nop
  406238:	nop
  406239:	nop
  40623a:	nop
  40623b:	nop
  40623c:	nop
  40623d:	nop
  40623e:	nop
  40623f:	nop
  406240:	sub    rsp,0x38
  406244:	mov    QWORD PTR [rsp+0x50],r8
  406249:	lea    r8,[rsp+0x50]
  40624e:	mov    QWORD PTR [rsp+0x58],r9
  406253:	mov    QWORD PTR [rsp+0x28],r8
  406258:	call   0x41d9a0
  40625d:	add    rsp,0x38
  406261:	ret    
  406262:	nop    DWORD PTR [rax+0x0]
  406266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406270:	push   rsi
  406271:	push   rbx
  406272:	sub    rsp,0x28
  406276:	mov    ebx,ecx
  406278:	mov    rsi,rdx
  40627b:	call   QWORD PTR [rip+0x961a3]        # 0x49c424
  406281:	lea    rdx,[rip+0x24d68]        # 0x42aff0
  406288:	lea    rcx,[rax+0x60]
  40628c:	mov    r9,rsi
  40628f:	mov    r8d,ebx
  406292:	add    rsp,0x28
  406296:	pop    rbx
  406297:	pop    rsi
  406298:	jmp    0x406240
  40629a:	nop    WORD PTR [rax+rax*1+0x0]
  4062a0:	sub    rsp,0x38
  4062a4:	mov    QWORD PTR [rsp+0x48],rdx
  4062a9:	lea    rdx,[rsp+0x48]
  4062ae:	mov    QWORD PTR [rsp+0x50],r8
  4062b3:	mov    QWORD PTR [rsp+0x58],r9
  4062b8:	mov    QWORD PTR [rsp+0x28],rdx
  4062bd:	call   0x41d9d0
  4062c2:	add    rsp,0x38
  4062c6:	ret    
  4062c7:	nop    WORD PTR [rax+rax*1+0x0]
  4062d0:	push   r12
  4062d2:	push   rbp
  4062d3:	push   rdi
  4062d4:	push   rsi
  4062d5:	push   rbx
  4062d6:	sub    rsp,0x70
  4062da:	mov    edi,ecx
  4062dc:	call   0x408020
  4062e1:	movsxd rsi,eax
  4062e4:	mov    rcx,rsi
  4062e7:	call   0x414e40
  4062ec:	test   rax,rax
  4062ef:	mov    rbx,rax
  4062f2:	je     0x40638b
  4062f8:	mov    r8,rsi
  4062fb:	mov    edx,0xf0
  406300:	mov    rcx,rax
  406303:	call   0x4224c8
  406308:	mov    ecx,edi
  40630a:	lea    r12,[rsp+0x30]
  40630f:	call   0x407fe0
  406314:	lea    rcx,[rip+0x24cdf]        # 0x42affa
  40631b:	mov    rdx,rax
  40631e:	call   0x4062a0
  406323:	call   QWORD PTR [rip+0x960fb]        # 0x49c424
  406329:	lea    rcx,[rax+0x30]
  40632d:	call   0x422560
  406332:	mov    rcx,r12
  406335:	call   0x406910
  40633a:	mov    rbp,QWORD PTR [rip+0x2bdbf]        # 0x432100
  406341:	lea    r9,[rip+0x325f8]        # 0x438940
  406348:	mov    QWORD PTR [rsp+0x28],rbx
  40634d:	mov    QWORD PTR [rsp+0x20],0x4000
  406356:	mov    r8,rsi
  406359:	mov    rdx,rbx
  40635c:	mov    ecx,edi
  40635e:	call   0x408028
  406363:	mov    eax,DWORD PTR [rbp+0x0]
  406366:	add    DWORD PTR [rsp+0x40],0x4000
  40636e:	test   eax,eax
  406370:	je     0x406341
  406372:	mov    rcx,r12
  406375:	mov    r8d,0x1
  40637b:	xor    edx,edx
  40637d:	call   0x406a70
  406382:	mov    rcx,rbx
  406385:	call   0x422528
  40638a:	nop
  40638b:	add    rsp,0x70
  40638f:	pop    rbx
  406390:	pop    rsi
  406391:	pop    rdi
  406392:	pop    rbp
  406393:	pop    r12
  406395:	ret    
  406396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063a0:	push   r14
  4063a2:	push   r13
  4063a4:	push   r12
  4063a6:	push   rbp
  4063a7:	push   rdi
  4063a8:	push   rsi
  4063a9:	push   rbx
  4063aa:	sub    rsp,0xa0
  4063b1:	mov    ebx,ecx
  4063b3:	mov    r14d,edx
  4063b6:	call   0x408190
  4063bb:	mov    ecx,ebx
  4063bd:	mov    r12d,eax
  4063c0:	call   0x408188
  4063c5:	movsxd rdi,eax
  4063c8:	mov    rbp,rax
  4063cb:	mov    rcx,rdi
  4063ce:	call   0x414e40
  4063d3:	test   rax,rax
  4063d6:	mov    rsi,rax
  4063d9:	je     0x40650c
  4063df:	mov    r8,rdi
  4063e2:	mov    edx,0xf0
  4063e7:	mov    rcx,rax
  4063ea:	movsxd r13,r12d
  4063ed:	call   0x4224c8
  4063f2:	mov    rcx,r13
  4063f5:	call   0x414e40
  4063fa:	test   rax,rax
  4063fd:	mov    rdi,rax
  406400:	je     0x40650c
  406406:	mov    r8,r13
  406409:	mov    edx,0xf0
  40640e:	mov    rcx,rax
  406411:	call   0x4224c8
  406416:	test   r14d,r14d
  406419:	mov    QWORD PTR [rsp+0x50],rdi
  40641e:	je     0x406520
  406424:	mov    ecx,ebx
  406426:	mov    DWORD PTR [rsp+0x48],ebp
  40642a:	mov    DWORD PTR [rsp+0x58],0xc
  406432:	mov    QWORD PTR [rsp+0x40],rsi
  406437:	lea    rbp,[rsp+0x60]
  40643c:	call   0x408180
  406441:	lea    rcx,[rip+0x24bb8]        # 0x42b000
  406448:	mov    rdx,rax
  40644b:	call   0x4062a0
  406450:	mov    r12,QWORD PTR [rip+0x95fcd]        # 0x49c424
  406457:	call   r12
  40645a:	lea    rcx,[rax+0x30]
  40645e:	call   0x422560
  406463:	mov    rcx,rbp
  406466:	call   0x406910
  40646b:	lea    rcx,[rsp+0x38]
  406470:	lea    r9,[rsp+0x50]
  406475:	lea    r8,[rsp+0x40]
  40647a:	mov    edx,ebx
  40647c:	call   0x408178
  406481:	test   eax,eax
  406483:	js     0x406582
  406489:	mov    rcx,QWORD PTR [rsp+0x38]
  40648e:	lea    rdx,[rip+0x324ab]        # 0x438940
  406495:	mov    r8d,0x400
  40649b:	call   0x4081b0
  4064a0:	mov    rbx,QWORD PTR [rip+0x2bc59]        # 0x432100
  4064a7:	nop    WORD PTR [rax+rax*1+0x0]
  4064b0:	lea    r9,[rip+0x32489]        # 0x438940
  4064b7:	mov    rcx,QWORD PTR [rsp+0x38]
  4064bc:	mov    QWORD PTR [rsp+0x20],0x4040
  4064c5:	mov    r8d,0x4000
  4064cb:	mov    rdx,r9
  4064ce:	call   0x4081a0
  4064d3:	mov    eax,DWORD PTR [rbx]
  4064d5:	add    DWORD PTR [rsp+0x70],0x4000
  4064dd:	test   eax,eax
  4064df:	je     0x4064b0
  4064e1:	mov    rcx,QWORD PTR [rsp+0x38]
  4064e6:	call   0x4081a8
  4064eb:	mov    r8d,0x1
  4064f1:	xor    edx,edx
  4064f3:	mov    rcx,rbp
  4064f6:	call   0x406a70
  4064fb:	mov    rcx,rsi
  4064fe:	call   0x422528
  406503:	mov    rcx,rdi
  406506:	call   0x422528
  40650b:	nop
  40650c:	add    rsp,0xa0
  406513:	pop    rbx
  406514:	pop    rsi
  406515:	pop    rdi
  406516:	pop    rbp
  406517:	pop    r12
  406519:	pop    r13
  40651b:	pop    r14
  40651d:	ret    
  40651e:	xchg   ax,ax
  406520:	mov    ecx,ebx
  406522:	mov    DWORD PTR [rsp+0x58],r12d
  406527:	mov    DWORD PTR [rsp+0x48],ebp
  40652b:	mov    QWORD PTR [rsp+0x40],rsi
  406530:	lea    rbp,[rsp+0x60]
  406535:	call   0x408180
  40653a:	lea    rcx,[rip+0x24abf]        # 0x42b000
  406541:	mov    rdx,rax
  406544:	call   0x4062a0
  406549:	mov    r12,QWORD PTR [rip+0x95ed4]        # 0x49c424
  406550:	call   r12
  406553:	lea    rcx,[rax+0x30]
  406557:	call   0x422560
  40655c:	mov    rcx,rbp
  40655f:	call   0x406910
  406564:	lea    rcx,[rsp+0x38]
  406569:	lea    r9,[rsp+0x50]
  40656e:	lea    r8,[rsp+0x40]
  406573:	mov    edx,ebx
  406575:	call   0x408178
  40657a:	test   eax,eax
  40657c:	jns    0x4064a0
  406582:	mov    ecx,eax
  406584:	call   0x407d30
  406589:	mov    rbx,rax
  40658c:	call   r12
  40658f:	lea    rdx,[rip+0x24a70]        # 0x42b006
  406596:	lea    rcx,[rax+0x60]
  40659a:	mov    r8,rbx
  40659d:	call   0x406240
  4065a2:	jmp    0x4064fb
  4065a7:	nop    WORD PTR [rax+rax*1+0x0]
  4065b0:	push   r14
  4065b2:	push   r13
  4065b4:	push   r12
  4065b6:	push   rbp
  4065b7:	push   rdi
  4065b8:	push   rsi
  4065b9:	push   rbx
  4065ba:	sub    rsp,0xa0
  4065c1:	mov    ebx,ecx
  4065c3:	mov    r13d,edx
  4065c6:	call   0x408190
  4065cb:	mov    ecx,ebx
  4065cd:	mov    r12d,eax
  4065d0:	call   0x408188
  4065d5:	movsxd rdi,eax
  4065d8:	mov    rbp,rax
  4065db:	mov    rcx,rdi
  4065de:	call   0x414e40
  4065e3:	test   rax,rax
  4065e6:	mov    rsi,rax
  4065e9:	je     0x40675f
  4065ef:	mov    r8,rdi
  4065f2:	mov    edx,0xf0
  4065f7:	mov    rcx,rax
  4065fa:	movsxd r14,r12d
  4065fd:	call   0x4224c8
  406602:	mov    rcx,r14
  406605:	call   0x414e40
  40660a:	test   rax,rax
  40660d:	mov    rdi,rax
  406610:	je     0x40675f
  406616:	mov    r8,r14
  406619:	mov    edx,0xf0
  40661e:	mov    rcx,rax
  406621:	call   0x4224c8
  406626:	mov    ecx,r13d
  406629:	mov    DWORD PTR [rsp+0x58],r12d
  40662e:	mov    DWORD PTR [rsp+0x48],ebp
  406632:	mov    QWORD PTR [rsp+0x50],rdi
  406637:	mov    QWORD PTR [rsp+0x40],rsi
  40663c:	call   0x407fe0
  406641:	mov    ecx,ebx
  406643:	mov    rbp,rax
  406646:	call   0x408180
  40664b:	lea    rcx,[rip+0x249bf]        # 0x42b011
  406652:	mov    r8,rbp
  406655:	mov    rdx,rax
  406658:	lea    rbp,[rsp+0x60]
  40665d:	call   0x4062a0
  406662:	mov    r12,QWORD PTR [rip+0x95dbb]        # 0x49c424
  406669:	call   r12
  40666c:	lea    rcx,[rax+0x30]
  406670:	call   0x422560
  406675:	mov    rcx,rbp
  406678:	call   0x406910
  40667d:	mov    r9d,DWORD PTR [rsp+0x48]
  406682:	mov    r8,QWORD PTR [rsp+0x40]
  406687:	lea    rcx,[rsp+0x38]
  40668c:	mov    edx,r13d
  40668f:	call   0x408018
  406694:	test   eax,eax
  406696:	js     0x406771
  40669c:	lea    rcx,[rsp+0x30]
  4066a1:	lea    r9,[rsp+0x50]
  4066a6:	lea    r8,[rsp+0x40]
  4066ab:	mov    edx,ebx
  4066ad:	call   0x408178
  4066b2:	test   eax,eax
  4066b4:	js     0x406771
  4066ba:	mov    rcx,QWORD PTR [rsp+0x38]
  4066bf:	lea    rdx,[rip+0x3227a]        # 0x438940
  4066c6:	mov    r8d,0x400
  4066cc:	call   0x408038
  4066d1:	mov    rbx,QWORD PTR [rip+0x2ba28]        # 0x432100
  4066d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066e0:	mov    rcx,QWORD PTR [rsp+0x38]
  4066e5:	lea    rdx,[rip+0x32254]        # 0x438940
  4066ec:	mov    r8d,0x4000
  4066f2:	call   0x408038
  4066f7:	lea    r9,[rip+0x32242]        # 0x438940
  4066fe:	mov    rcx,QWORD PTR [rsp+0x30]
  406703:	mov    QWORD PTR [rsp+0x20],0x4040
  40670c:	mov    r8d,0x4000
  406712:	mov    rdx,r9
  406715:	call   0x4081a0
  40671a:	mov    eax,DWORD PTR [rbx]
  40671c:	add    DWORD PTR [rsp+0x70],0x4000
  406724:	test   eax,eax
  406726:	je     0x4066e0
  406728:	mov    rcx,QWORD PTR [rsp+0x30]
  40672d:	call   0x4081a8
  406732:	mov    rcx,QWORD PTR [rsp+0x38]
  406737:	xor    edx,edx
  406739:	call   0x408030
  40673e:	mov    r8d,0x1
  406744:	xor    edx,edx
  406746:	mov    rcx,rbp
  406749:	call   0x406a70
  40674e:	mov    rcx,rsi
  406751:	call   0x422528
  406756:	mov    rcx,rdi
  406759:	call   0x422528
  40675e:	nop
  40675f:	add    rsp,0xa0
  406766:	pop    rbx
  406767:	pop    rsi
  406768:	pop    rdi
  406769:	pop    rbp
  40676a:	pop    r12
  40676c:	pop    r13
  40676e:	pop    r14
  406770:	ret    
  406771:	mov    ecx,eax
  406773:	call   0x407d30
  406778:	mov    rbx,rax
  40677b:	call   r12
  40677e:	lea    rdx,[rip+0x24881]        # 0x42b006
  406785:	lea    rcx,[rax+0x60]
  406789:	mov    r8,rbx
  40678c:	call   0x406240
  406791:	jmp    0x40674e
  406793:	nop    DWORD PTR [rax]
  406796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067a0:	push   rbx
  4067a1:	sub    rsp,0x20
  4067a5:	mov    ebx,ecx
  4067a7:	lea    rcx,[rip+0xfffffffffffffac2]        # 0x406270
  4067ae:	call   0x408088
  4067b3:	mov    ecx,ebx
  4067b5:	call   0x408080
  4067ba:	lea    rdx,[rip+0x3217f]        # 0x438940
  4067c1:	mov    r8d,0x10000
  4067c7:	xor    ecx,ecx
  4067c9:	call   0x407df0
  4067ce:	lea    rcx,[rip+0x2484b]        # 0x42b020
  4067d5:	mov    edx,0x4000
  4067da:	call   0x4062a0
  4067df:	mov    edx,0x3
  4067e4:	mov    ecx,0xd
  4067e9:	call   0x4065b0
  4067ee:	mov    edx,0x3
  4067f3:	mov    ecx,0x4
  4067f8:	call   0x4065b0
  4067fd:	mov    edx,0x6
  406802:	mov    ecx,0x4
  406807:	call   0x4065b0
  40680c:	mov    edx,0x1
  406811:	mov    ecx,0xa
  406816:	call   0x4063a0
  40681b:	mov    edx,0x1
  406820:	mov    ecx,0x17
  406825:	call   0x4063a0
  40682a:	lea    rcx,[rip+0x24827]        # 0x42b058
  406831:	mov    edx,0x4000
  406836:	call   0x4062a0
  40683b:	mov    ecx,0x3
  406840:	call   0x4062d0
  406845:	mov    ecx,0x6
  40684a:	call   0x4062d0
  40684f:	mov    ecx,0x8
  406854:	call   0x4062d0
  406859:	lea    rcx,[rip+0x24828]        # 0x42b088
  406860:	mov    edx,0x4000
  406865:	call   0x4062a0
  40686a:	xor    edx,edx
  40686c:	mov    ecx,0x3
  406871:	call   0x4063a0
  406876:	xor    edx,edx
  406878:	mov    ecx,0x4
  40687d:	call   0x4063a0
  406882:	xor    edx,edx
  406884:	mov    ecx,0x2
  406889:	call   0x4063a0
  40688e:	xor    edx,edx
  406890:	mov    ecx,0xd
  406895:	call   0x4063a0
  40689a:	nop
  40689b:	add    rsp,0x20
  40689f:	pop    rbx
  4068a0:	jmp    0x408098
  4068a5:	nop
  4068a6:	nop
  4068a7:	nop
  4068a8:	nop
  4068a9:	nop
  4068aa:	nop
  4068ab:	nop
  4068ac:	nop
  4068ad:	nop
  4068ae:	nop
  4068af:	nop
  4068b0:	sub    rsp,0x28
  4068b4:	mov    rcx,QWORD PTR [rcx]
  4068b7:	mov    edx,0xffffffff
  4068bc:	call   QWORD PTR [rip+0x95b22]        # 0x49c3e4
  4068c2:	xor    eax,eax
  4068c4:	mov    DWORD PTR [rip+0x42072],0x1        # 0x448940
  4068ce:	add    rsp,0x28
  4068d2:	ret    
  4068d3:	nop    DWORD PTR [rax]
  4068d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068e0:	sub    rsp,0x38
  4068e4:	mov    QWORD PTR [rsp+0x48],rdx
  4068e9:	lea    rdx,[rsp+0x48]
  4068ee:	mov    QWORD PTR [rsp+0x50],r8
  4068f3:	mov    QWORD PTR [rsp+0x58],r9
  4068f8:	mov    QWORD PTR [rsp+0x28],rdx
  4068fd:	call   0x41d9d0
  406902:	add    rsp,0x38
  406906:	ret    
  406907:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	push   rdi
  406911:	push   rbx
  406912:	sub    rsp,0x48
  406916:	xor    eax,eax
  406918:	xor    edx,edx
  40691a:	lea    rdi,[rcx+0x8]
  40691e:	mov    rbx,rcx
  406921:	mov    QWORD PTR [rcx],0x0
  406928:	mov    QWORD PTR [rcx+0x30],0x0
  406930:	and    rdi,0xfffffffffffffff8
  406934:	sub    rcx,rdi
  406937:	add    ecx,0x38
  40693a:	shr    ecx,0x3
  40693d:	rep stos QWORD PTR es:[rdi],rax
  406940:	lea    rcx,[rsp+0x30]
  406945:	call   0x414d90
  40694a:	mov    rax,QWORD PTR [rsp+0x30]
  40694f:	xor    r8d,r8d
  406952:	xor    ecx,ecx
  406954:	mov    edx,0x1
  406959:	mov    QWORD PTR [rbx],rax
  40695c:	mov    DWORD PTR [rip+0x41fda],0x0        # 0x448940
  406966:	imul   eax,DWORD PTR [rsp+0x38],0x3e8
  40696e:	mov    DWORD PTR [rbx+0x8],eax
  406971:	call   QWORD PTR [rip+0x95925]        # 0x49c29c
  406977:	test   rax,rax
  40697a:	mov    QWORD PTR [rbx+0x20],rax
  40697e:	je     0x4069eb
  406980:	xor    edx,edx
  406982:	xor    ecx,ecx
  406984:	mov    QWORD PTR [rsp+0x28],0x0
  40698d:	mov    DWORD PTR [rsp+0x20],0x0
  406995:	lea    r9,[rbx+0x20]
  406999:	lea    r8,[rip+0xffffffffffffff10]        # 0x4068b0
  4069a0:	call   QWORD PTR [rip+0x958ee]        # 0x49c294
  4069a6:	test   rax,rax
  4069a9:	mov    QWORD PTR [rbx+0x28],rax
  4069ad:	je     0x406a41
  4069b3:	mov    QWORD PTR [rbx+0x30],0x2faf080
  4069bb:	mov    rcx,QWORD PTR [rbx+0x20]
  4069bf:	xor    r9d,r9d
  4069c2:	xor    r8d,r8d
  4069c5:	lea    rdx,[rbx+0x30]
  4069c9:	mov    DWORD PTR [rsp+0x28],0x0
  4069d1:	mov    QWORD PTR [rsp+0x20],0x0
  4069da:	call   QWORD PTR [rip+0x959c4]        # 0x49c3a4
  4069e0:	test   eax,eax
  4069e2:	je     0x406a16
  4069e4:	add    rsp,0x48
  4069e8:	pop    rbx
  4069e9:	pop    rdi
  4069ea:	ret    
  4069eb:	call   QWORD PTR [rip+0x958fb]        # 0x49c2ec
  4069f1:	mov    ebx,eax
  4069f3:	call   QWORD PTR [rip+0x95a2b]        # 0x49c424
  4069f9:	lea    rdx,[rip+0x246b0]        # 0x42b0b0
  406a00:	lea    rcx,[rax+0x60]
  406a04:	mov    r8d,ebx
  406a07:	call   0x424310
  406a0c:	mov    ecx,0x1
  406a11:	call   0x422578
  406a16:	call   QWORD PTR [rip+0x958d0]        # 0x49c2ec
  406a1c:	mov    ebx,eax
  406a1e:	call   QWORD PTR [rip+0x95a00]        # 0x49c424
  406a24:	lea    rdx,[rip+0x246bc]        # 0x42b0e7
  406a2b:	lea    rcx,[rax+0x60]
  406a2f:	mov    r8d,ebx
  406a32:	call   0x424310
  406a37:	mov    ecx,0x1
  406a3c:	call   0x422578
  406a41:	call   QWORD PTR [rip+0x958a5]        # 0x49c2ec
  406a47:	mov    ebx,eax
  406a49:	call   QWORD PTR [rip+0x959d5]        # 0x49c424
  406a4f:	lea    rdx,[rip+0x24679]        # 0x42b0cf
  406a56:	lea    rcx,[rax+0x60]
  406a5a:	mov    r8d,ebx
  406a5d:	call   0x424310
  406a62:	mov    ecx,0x1
  406a67:	call   0x422578
  406a6c:	nop
  406a6d:	nop    DWORD PTR [rax]
  406a70:	push   rbp
  406a71:	push   rdi
  406a72:	push   rsi
  406a73:	push   rbx
  406a74:	sub    rsp,0x58
  406a78:	movaps XMMWORD PTR [rsp+0x30],xmm6
  406a7d:	movaps XMMWORD PTR [rsp+0x40],xmm7
  406a82:	mov    rbp,rcx
  406a85:	mov    rbx,rdx
  406a88:	mov    edi,r8d
  406a8b:	mov    rcx,QWORD PTR [rcx+0x20]
  406a8f:	test   rcx,rcx
  406a92:	je     0x406a9a
  406a94:	call   QWORD PTR [rip+0x957ea]        # 0x49c284
  406a9a:	mov    rcx,QWORD PTR [rbp+0x28]
  406a9e:	test   rcx,rcx
  406aa1:	je     0x406aa9
  406aa3:	call   QWORD PTR [rip+0x957db]        # 0x49c284
  406aa9:	lea    rsi,[rsp+0x20]
  406aae:	xor    edx,edx
  406ab0:	pxor   xmm6,xmm6
  406ab4:	mov    rcx,rsi
  406ab7:	call   0x414d90
  406abc:	imul   r10d,DWORD PTR [rbp+0x0],0xfffffc18
  406ac4:	imul   eax,DWORD PTR [rsp+0x20],0x3e8
  406acc:	imul   ecx,DWORD PTR [rsp+0x28],0x3e8
  406ad4:	mov    r9d,0x431bde83
  406ada:	movsd  xmm0,QWORD PTR [rip+0x24656]        # 0x42b138
  406ae2:	lea    r8d,[r10+rax*1]
  406ae6:	mov    r10d,DWORD PTR [rbp+0x8]
  406aea:	mov    eax,r10d
  406aed:	sar    r10d,0x1f
  406af1:	imul   r9d
  406af4:	mov    eax,ecx
  406af6:	sar    ecx,0x1f
  406af9:	sar    edx,0x12
  406afc:	sub    r10d,edx
  406aff:	imul   r9d
  406b02:	add    r10d,r8d
  406b05:	sar    edx,0x12
  406b08:	mov    r9d,edx
  406b0b:	sub    r9d,ecx
  406b0e:	test   rbx,rbx
  406b11:	lea    eax,[r10+r9*1]
  406b15:	cvtsi2sd xmm6,rax
  406b1a:	mov    eax,DWORD PTR [rbp+0x10]
  406b1d:	divsd  xmm6,xmm0
  406b21:	je     0x406b93
  406b23:	test   edi,edi
  406b25:	pxor   xmm0,xmm0
  406b29:	cvtsi2sd xmm0,rax
  406b2e:	movapd xmm7,xmm0
  406b32:	divsd  xmm7,xmm6
  406b36:	je     0x406b70
  406b38:	movapd xmm1,xmm7
  406b3c:	lea    rcx,[rip+0x245e8]        # 0x42b12b
  406b43:	mov    r8,rbx
  406b46:	movq   rdx,xmm7
  406b4b:	call   0x4068e0
  406b50:	movapd xmm0,xmm6
  406b54:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  406b59:	movaps xmm7,XMMWORD PTR [rsp+0x40]
  406b5e:	add    rsp,0x58
  406b62:	pop    rbx
  406b63:	pop    rsi
  406b64:	pop    rdi
  406b65:	pop    rbp
  406b66:	ret    
  406b67:	nop    WORD PTR [rax+rax*1+0x0]
  406b70:	movapd xmm3,xmm6
  406b74:	movq   r9,xmm6
  406b79:	movapd xmm1,xmm0
  406b7d:	movq   rdx,xmm0
  406b82:	lea    rcx,[rip+0x2457f]        # 0x42b108
  406b89:	mov    r8,rbx
  406b8c:	call   0x4068e0
  406b91:	jmp    0x406b38
  406b93:	lea    edx,[rax-0x3e9]
  406b99:	cmp    edx,0xf3e56
  406b9f:	jbe    0x406c80
  406ba5:	lea    edx,[rax-0xf4240]
  406bab:	pxor   xmm0,xmm0
  406baf:	cmp    edx,0x3b8b87bf
  406bb5:	jbe    0x406c22
  406bb7:	cmp    eax,0x3b9ac9ff
  406bbc:	ja     0x406c50
  406bc2:	cvtsi2sd xmm0,eax
  406bc6:	mov    eax,0x73
  406bcb:	mov    DWORD PTR [rsp+0x20],0x65747962
  406bd3:	mov    WORD PTR [rsp+0x24],ax
  406bd8:	movapd xmm7,xmm0
  406bdc:	divsd  xmm7,xmm6
  406be0:	test   edi,edi
  406be2:	jne    0x406c05
  406be4:	movapd xmm3,xmm6
  406be8:	lea    rcx,[rip+0x24519]        # 0x42b108
  406bef:	mov    r8,rsi
  406bf2:	movq   r9,xmm6
  406bf7:	movapd xmm1,xmm0
  406bfb:	movq   rdx,xmm0
  406c00:	call   0x4068e0
  406c05:	movapd xmm1,xmm7
  406c09:	lea    rcx,[rip+0x2451b]        # 0x42b12b
  406c10:	movq   rdx,xmm7
  406c15:	mov    r8,rsi
  406c18:	call   0x4068e0
  406c1d:	jmp    0x406b50
  406c22:	cvtsi2sd xmm0,eax
  406c26:	mov    ecx,0x424d
  406c2b:	mov    WORD PTR [rsp+0x20],cx
  406c30:	mov    BYTE PTR [rsp+0x22],0x0
  406c35:	divsd  xmm0,QWORD PTR [rip+0x24503]        # 0x42b140
  406c3d:	movapd xmm7,xmm0
  406c41:	divsd  xmm7,xmm6
  406c45:	jmp    0x406be0
  406c47:	nop    WORD PTR [rax+rax*1+0x0]
  406c50:	cvtsi2sd xmm0,rax
  406c55:	mov    edx,0x4247
  406c5a:	mov    WORD PTR [rsp+0x20],dx
  406c5f:	mov    BYTE PTR [rsp+0x22],0x0
  406c64:	divsd  xmm0,QWORD PTR [rip+0x244dc]        # 0x42b148
  406c6c:	movapd xmm7,xmm0
  406c70:	divsd  xmm7,xmm6
  406c74:	jmp    0x406be0
  406c79:	nop    DWORD PTR [rax+0x0]
  406c80:	pxor   xmm1,xmm1
  406c84:	mov    r8d,0x424b
  406c8a:	mov    WORD PTR [rsp+0x20],r8w
  406c90:	mov    BYTE PTR [rsp+0x22],0x0
  406c95:	cvtsi2sd xmm1,eax
  406c99:	divsd  xmm1,xmm0
  406c9d:	movapd xmm7,xmm1
  406ca1:	movapd xmm0,xmm1
  406ca5:	divsd  xmm7,xmm6
  406ca9:	jmp    0x406be0
  406cae:	nop
  406caf:	nop
  406cb0:	sub    rsp,0x38
  406cb4:	mov    QWORD PTR [rsp+0x50],r8
  406cb9:	lea    r8,[rsp+0x50]
  406cbe:	mov    QWORD PTR [rsp+0x58],r9
  406cc3:	mov    QWORD PTR [rsp+0x28],r8
  406cc8:	call   0x41d9a0
  406ccd:	add    rsp,0x38
  406cd1:	ret    
  406cd2:	nop    DWORD PTR [rax+0x0]
  406cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ce0:	push   rdi
  406ce1:	push   rsi
  406ce2:	push   rbx
  406ce3:	sub    rsp,0x30
  406ce7:	mov    rbx,QWORD PTR [rip+0x1f712]        # 0x426400
  406cee:	mov    esi,ecx
  406cf0:	mov    rdi,rdx
  406cf3:	call   QWORD PTR [rip+0x9572b]        # 0x49c424
  406cf9:	lea    rdx,[rip+0x24450]        # 0x42b150
  406d00:	lea    rcx,[rax+0x60]
  406d04:	mov    QWORD PTR [rsp+0x20],rdi
  406d09:	mov    r9d,esi
  406d0c:	mov    r8,rbx
  406d0f:	call   0x406cb0
  406d14:	nop
  406d15:	add    rsp,0x30
  406d19:	pop    rbx
  406d1a:	pop    rsi
  406d1b:	pop    rdi
  406d1c:	ret    
  406d1d:	nop    DWORD PTR [rax]
  406d20:	push   r14
  406d22:	push   r13
  406d24:	push   r12
  406d26:	push   rbp
  406d27:	push   rdi
  406d28:	push   rsi
  406d29:	push   rbx
  406d2a:	sub    rsp,0xb0
  406d31:	mov    rbx,rcx
  406d34:	mov    rcx,QWORD PTR [rip+0x1f6bd]        # 0x4263f8
  406d3b:	mov    ebp,edx
  406d3d:	lea    rsi,[rsp+0x40]
  406d42:	mov    QWORD PTR [rsp+0x60],rcx
  406d47:	call   0x422468
  406d4c:	lea    rcx,[rsp+0x20]
  406d51:	mov    DWORD PTR [rsp+0x68],eax
  406d55:	call   0x408288
  406d5a:	lea    rcx,[rip+0x41c2f]        # 0x448990
  406d61:	call   0x4080f0
  406d66:	mov    rcx,QWORD PTR [rip+0x41c23]        # 0x448990
  406d6d:	lea    rdx,[rsp+0x60]
  406d72:	mov    r8d,0x1
  406d78:	call   0x408100
  406d7d:	mov    rdx,QWORD PTR [rip+0x41c0c]        # 0x448990
  406d84:	mov    rcx,QWORD PTR [rsp+0x20]
  406d89:	call   0x408270
  406d8e:	lea    rcx,[rsp+0x30]
  406d93:	call   0x408258
  406d98:	mov    rdx,QWORD PTR [rip+0x41bf1]        # 0x448990
  406d9f:	mov    rcx,QWORD PTR [rsp+0x30]
  406da4:	call   0x408228
  406da9:	mov    rcx,QWORD PTR [rsp+0x30]
  406dae:	lea    r8,[rip+0x248cb]        # 0x42b680
  406db5:	lea    rdx,[rip+0x248d4]        # 0x42b690
  406dbc:	mov    r9d,0x1
  406dc2:	call   0x4081f8
  406dc7:	mov    rcx,QWORD PTR [rsp+0x30]
  406dcc:	lea    r8,[rip+0x2488d]        # 0x42b660
  406dd3:	lea    rdx,[rip+0x24896]        # 0x42b670
  406dda:	mov    r9d,0x1
  406de0:	call   0x4081f8
  406de5:	lea    rcx,[rsp+0x38]
  406dea:	mov    edx,0x1
  406def:	call   0x408010
  406df4:	mov    rcx,QWORD PTR [rsp+0x38]
  406df9:	mov    r8,rsi
  406dfc:	mov    rdx,rbx
  406dff:	call   0x407ec0
  406e04:	test   eax,eax
  406e06:	js     0x4071f8
  406e0c:	mov    r8,QWORD PTR [rsp+0x20]
  406e11:	mov    rcx,QWORD PTR [rsp+0x38]
  406e16:	mov    edx,0x2
  406e1b:	call   0x408140
  406e20:	mov    r8,QWORD PTR [rsp+0x30]
  406e25:	mov    rcx,QWORD PTR [rsp+0x38]
  406e2a:	mov    edx,0x1
  406e2f:	call   0x408140
  406e34:	mov    rcx,QWORD PTR [rsp+0x38]
  406e39:	lea    rdx,[rip+0x450]        # 0x407290
  406e40:	call   0x407d00
  406e45:	mov    rcx,QWORD PTR [rsp+0x38]
  406e4a:	lea    rdx,[rip+0x50f]        # 0x407360
  406e51:	call   0x407d10
  406e56:	mov    rcx,QWORD PTR [rsp+0x38]
  406e5b:	mov    rdx,rcx
  406e5e:	call   0x407d18
  406e63:	lea    rcx,[rsp+0x48]
  406e68:	mov    QWORD PTR [rip+0x51b4d],0x0        # 0x4589c0
  406e73:	mov    QWORD PTR [rip+0x41b1a],0x0        # 0x448998
  406e7e:	call   0x408290
  406e83:	lea    rcx,[rsp+0x28]
  406e88:	call   0x408258
  406e8d:	lea    rcx,[rsp+0x50]
  406e92:	mov    edx,0x2
  406e97:	call   0x408010
  406e9c:	mov    rcx,QWORD PTR [rsp+0x50]
  406ea1:	mov    r8,rsi
  406ea4:	mov    rdx,rbx
  406ea7:	call   0x407ec0
  406eac:	test   eax,eax
  406eae:	js     0x4071f8
  406eb4:	mov    r8,QWORD PTR [rsp+0x48]
  406eb9:	mov    rcx,QWORD PTR [rsp+0x50]
  406ebe:	mov    edx,0x2
  406ec3:	call   0x408140
  406ec8:	mov    r8,QWORD PTR [rsp+0x28]
  406ecd:	mov    rcx,QWORD PTR [rsp+0x50]
  406ed2:	mov    edx,0x1
  406ed7:	call   0x408140
  406edc:	mov    rcx,QWORD PTR [rsp+0x50]
  406ee1:	lea    rdx,[rip+0x358]        # 0x407240
  406ee8:	call   0x407d00
  406eed:	mov    rcx,QWORD PTR [rsp+0x50]
  406ef2:	lea    rdx,[rip+0x3e7]        # 0x4072e0
  406ef9:	call   0x407d10
  406efe:	mov    rcx,QWORD PTR [rsp+0x50]
  406f03:	mov    rdx,rcx
  406f06:	call   0x407d18
  406f0b:	mov    edi,0xffffffe4
  406f10:	mov    esi,edi
  406f12:	mov    rcx,QWORD PTR [rsp+0x50]
  406f17:	lea    rax,[rip+0x2424b]        # 0x42b169
  406f1e:	mov    QWORD PTR [rip+0x1f4db],rax        # 0x426400
  406f25:	call   0x408078
  406f2a:	cmp    eax,0xffffffcc
  406f2d:	mov    ebx,eax
  406f2f:	je     0x4070a8
  406f35:	cmp    esi,0xffffffe4
  406f38:	je     0x4070ed
  406f3e:	cmp    eax,0xffffffe4
  406f41:	je     0x4070e0
  406f47:	mov    edi,eax
  406f49:	mov    eax,edi
  406f4b:	or     eax,esi
  406f4d:	jne    0x407160
  406f53:	mov    rcx,QWORD PTR [rsp+0x38]
  406f58:	lea    r14,[rsp+0x70]
  406f5d:	lea    rdi,[rsp+0x58]
  406f62:	call   0x407fe8
  406f67:	mov    rcx,QWORD PTR [rsp+0x38]
  406f6c:	mov    esi,eax
  406f6e:	call   0x408198
  406f73:	mov    rcx,QWORD PTR [rsp+0x38]
  406f78:	mov    ebx,eax
  406f7a:	call   0x408008
  406f7f:	mov    r8d,esi
  406f82:	mov    edx,ebx
  406f84:	mov    ecx,eax
  406f86:	call   0x408168
  406f8b:	mov    r13,QWORD PTR [rip+0x95492]        # 0x49c424
  406f92:	mov    rbx,rax
  406f95:	movsxd rsi,ebp
  406f98:	call   r13
  406f9b:	lea    rdx,[rip+0x2420b]        # 0x42b1ad
  406fa2:	lea    rcx,[rax+0x30]
  406fa6:	mov    r8,rbx
  406fa9:	lea    rbx,[rip+0x64010]        # 0x46afc0
  406fb0:	call   0x406cb0
  406fb5:	call   r13
  406fb8:	lea    rcx,[rax+0x30]
  406fbc:	call   0x422560
  406fc1:	mov    r8d,0x10000
  406fc7:	mov    rdx,rbx
  406fca:	xor    ecx,ecx
  406fcc:	call   0x407df0
  406fd1:	mov    rcx,r14
  406fd4:	call   0x406910
  406fd9:	mov    r12,QWORD PTR [rip+0x2b120]        # 0x432100
  406fe0:	mov    rcx,QWORD PTR [rsp+0x50]
  406fe5:	mov    r8,rsi
  406fe8:	mov    rdx,rbx
  406feb:	call   0x407e18
  406ff0:	cmp    eax,0xffffffe4
  406ff3:	je     0x406fe0
  406ff5:	test   eax,eax
  406ff7:	js     0x407220
  406ffd:	nop    DWORD PTR [rax]
  407000:	mov    rcx,QWORD PTR [rsp+0x38]
  407005:	mov    rdx,rdi
  407008:	call   0x407e20
  40700d:	cmp    eax,0xffffffe4
  407010:	je     0x407000
  407012:	test   eax,eax
  407014:	js     0x4071ce
  40701a:	mov    rcx,QWORD PTR [rsp+0x58]
  40701f:	add    DWORD PTR [rsp+0x80],ebp
  407026:	call   0x407f28
  40702b:	mov    eax,DWORD PTR [r12]
  40702f:	test   eax,eax
  407031:	je     0x406fe0
  407033:	mov    r8d,0x1
  407039:	xor    edx,edx
  40703b:	mov    rcx,r14
  40703e:	call   0x406a70
  407043:	mov    rcx,QWORD PTR [rsp+0x50]
  407048:	mov    edx,0x1
  40704d:	call   0x408260
  407052:	mov    rcx,QWORD PTR [rsp+0x38]
  407057:	mov    edx,0x1
  40705c:	call   0x408260
  407061:	mov    rcx,QWORD PTR [rsp+0x50]
  407066:	call   0x408138
  40706b:	mov    rcx,QWORD PTR [rsp+0x38]
  407070:	call   0x408138
  407075:	mov    rcx,QWORD PTR [rsp+0x48]
  40707a:	call   0x408280
  40707f:	mov    rcx,QWORD PTR [rsp+0x20]
  407084:	call   0x408278
  407089:	mov    rcx,QWORD PTR [rip+0x41900]        # 0x448990
  407090:	call   0x408110
  407095:	nop
  407096:	add    rsp,0xb0
  40709d:	pop    rbx
  40709e:	pop    rsi
  40709f:	pop    rdi
  4070a0:	pop    rbp
  4070a1:	pop    r12
  4070a3:	pop    r13
  4070a5:	pop    r14
  4070a7:	ret    
  4070a8:	cmp    esi,0xffffffe4
  4070ab:	jne    0x4070e0
  4070ad:	mov    rcx,QWORD PTR [rsp+0x38]
  4070b2:	lea    rax,[rip+0x240b7]        # 0x42b170
  4070b9:	mov    QWORD PTR [rip+0x1f340],rax        # 0x426400
  4070c0:	call   0x408078
  4070c5:	cmp    eax,0xffffffcc
  4070c8:	je     0x407159
  4070ce:	xchg   ax,ax
  4070d0:	cmp    eax,0xffffffe4
  4070d3:	je     0x406f0b
  4070d9:	mov    esi,eax
  4070db:	nop    DWORD PTR [rax+rax*1+0x0]
  4070e0:	test   esi,esi
  4070e2:	je     0x406f12
  4070e8:	jmp    0x406f49
  4070ed:	mov    rcx,QWORD PTR [rsp+0x38]
  4070f2:	lea    rax,[rip+0x24077]        # 0x42b170
  4070f9:	mov    QWORD PTR [rip+0x1f300],rax        # 0x426400
  407100:	call   0x408078
  407105:	cmp    eax,0xffffffcc
  407108:	je     0x407147
  40710a:	cmp    ebx,0xffffffe4
  40710d:	je     0x4070d0
  40710f:	cmp    eax,0xffffffe4
  407112:	jne    0x40713e
  407114:	test   ebx,ebx
  407116:	jne    0x40713e
  407118:	mov    rcx,QWORD PTR [rsp+0x38]
  40711d:	lea    rax,[rip+0x2404c]        # 0x42b170
  407124:	xor    edi,edi
  407126:	mov    QWORD PTR [rip+0x1f2d3],rax        # 0x426400
  40712d:	call   0x408078
  407132:	cmp    eax,0xffffffcc
  407135:	je     0x407150
  407137:	cmp    eax,0xffffffe4
  40713a:	mov    ebx,edi
  40713c:	je     0x407114
  40713e:	mov    edi,ebx
  407140:	mov    esi,eax
  407142:	jmp    0x406f49
  407147:	cmp    ebx,0xffffffe4
  40714a:	je     0x407159
  40714c:	mov    eax,esi
  40714e:	jmp    0x407114
  407150:	mov    ebx,edi
  407152:	mov    eax,0xffffffe4
  407157:	jmp    0x407114
  407159:	mov    edi,esi
  40715b:	jmp    0x406f12
  407160:	mov    ecx,edi
  407162:	call   0x407d30
  407167:	mov    rbx,QWORD PTR [rip+0x952b6]        # 0x49c424
  40716e:	mov    rbp,rax
  407171:	call   rbx
  407173:	lea    rdx,[rip+0x23ffd]        # 0x42b177
  40717a:	lea    rcx,[rax+0x60]
  40717e:	mov    r8d,edi
  407181:	mov    r9,rbp
  407184:	call   0x406cb0
  407189:	mov    ecx,esi
  40718b:	call   0x407d30
  407190:	mov    rdi,rax
  407193:	call   rbx
  407195:	lea    rdx,[rip+0x23feb]        # 0x42b187
  40719c:	lea    rcx,[rax+0x60]
  4071a0:	mov    r9,rdi
  4071a3:	mov    r8d,esi
  4071a6:	call   0x406cb0
  4071ab:	call   rbx
  4071ad:	lea    r8,[rip+0x2448c]        # 0x42b640
  4071b4:	lea    rcx,[rax+0x60]
  4071b8:	lea    rdx,[rip+0x23fd8]        # 0x42b197
  4071bf:	call   0x406cb0
  4071c4:	mov    ecx,0x1
  4071c9:	call   0x422578
  4071ce:	mov    ecx,eax
  4071d0:	call   0x407d30
  4071d5:	mov    rbx,rax
  4071d8:	call   r13
  4071db:	lea    rdx,[rip+0x23fee]        # 0x42b1d0
  4071e2:	lea    rcx,[rax+0x60]
  4071e6:	mov    r8,rbx
  4071e9:	call   0x406cb0
  4071ee:	mov    ecx,0x1
  4071f3:	call   0x422578
  4071f8:	mov    rbx,QWORD PTR [rsp+0x40]
  4071fd:	call   QWORD PTR [rip+0x95221]        # 0x49c424
  407203:	lea    rdx,[rip+0x23f52]        # 0x42b15c
  40720a:	lea    rcx,[rax+0x60]
  40720e:	mov    r8,rbx
  407211:	call   0x406cb0
  407216:	mov    ecx,0x1
  40721b:	call   0x422578
  407220:	call   r13
  407223:	lea    rdx,[rip+0x23f8a]        # 0x42b1b4
  40722a:	lea    rcx,[rax+0x60]
  40722e:	call   0x406cb0
  407233:	mov    ecx,0x1
  407238:	call   0x422578
  40723d:	nop
  40723e:	xchg   ax,ax
  407240:	push   rsi
  407241:	push   rbx
  407242:	sub    rsp,0x28
  407246:	mov    rsi,QWORD PTR [rip+0x51773]        # 0x4589c0
  40724d:	mov    ebx,0x10000
  407252:	lea    rcx,[rip+0x517a7]        # 0x458a00
  407259:	sub    rbx,rsi
  40725c:	cmp    r8,rbx
  40725f:	cmovbe rbx,r8
  407263:	add    rcx,rsi
  407266:	mov    r8,rbx
  407269:	add    rsi,rbx
  40726c:	call   0x4224d8
  407271:	mov    rax,rbx
  407274:	mov    QWORD PTR [rip+0x51745],rsi        # 0x4589c0
  40727b:	add    rsp,0x28
  40727f:	pop    rbx
  407280:	pop    rsi
  407281:	ret    
  407282:	nop    DWORD PTR [rax+0x0]
  407286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407290:	push   rsi
  407291:	push   rbx
  407292:	sub    rsp,0x28
  407296:	mov    rsi,QWORD PTR [rip+0x416fb]        # 0x448998
  40729d:	mov    ebx,0x10000
  4072a2:	lea    rcx,[rip+0x41717]        # 0x4489c0
  4072a9:	sub    rbx,rsi
  4072ac:	cmp    r8,rbx
  4072af:	cmovbe rbx,r8
  4072b3:	add    rcx,rsi
  4072b6:	mov    r8,rbx
  4072b9:	add    rsi,rbx
  4072bc:	call   0x4224d8
  4072c1:	mov    rax,rbx
  4072c4:	mov    QWORD PTR [rip+0x416cd],rsi        # 0x448998
  4072cb:	add    rsp,0x28
  4072cf:	pop    rbx
  4072d0:	pop    rsi
  4072d1:	ret    
  4072d2:	nop    DWORD PTR [rax+0x0]
  4072d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072e0:	push   rdi
  4072e1:	push   rsi
  4072e2:	push   rbx
  4072e3:	sub    rsp,0x20
  4072e7:	mov    rsi,QWORD PTR [rip+0x416aa]        # 0x448998
  4072ee:	mov    rax,rdx
  4072f1:	test   rsi,rsi
  4072f4:	je     0x407340
  4072f6:	cmp    r8,rsi
  4072f9:	lea    rdi,[rip+0x416c0]        # 0x4489c0
  407300:	mov    rbx,r8
  407303:	cmova  rbx,rsi
  407307:	mov    rcx,rax
  40730a:	mov    r8,rbx
  40730d:	mov    rdx,rdi
  407310:	sub    rsi,rbx
  407313:	call   0x4224d8
  407318:	lea    rdx,[rbx+rdi*1]
  40731c:	mov    r8,rsi
  40731f:	mov    rcx,rdi
  407322:	call   0x4224d0
  407327:	mov    QWORD PTR [rip+0x4166a],rsi        # 0x448998
  40732e:	mov    rax,rbx
  407331:	add    rsp,0x20
  407335:	pop    rbx
  407336:	pop    rsi
  407337:	pop    rdi
  407338:	ret    
  407339:	nop    DWORD PTR [rax+0x0]
  407340:	mov    edx,0xb
  407345:	call   0x407d28
  40734a:	mov    rax,0xffffffffffffffff
  407351:	jmp    0x407331
  407353:	nop    DWORD PTR [rax]
  407356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407360:	push   rdi
  407361:	push   rsi
  407362:	push   rbx
  407363:	sub    rsp,0x20
  407367:	mov    rsi,QWORD PTR [rip+0x51652]        # 0x4589c0
  40736e:	mov    rax,rdx
  407371:	test   rsi,rsi
  407374:	je     0x4073c0
  407376:	cmp    r8,rsi
  407379:	lea    rdi,[rip+0x51680]        # 0x458a00
  407380:	mov    rbx,r8
  407383:	cmova  rbx,rsi
  407387:	mov    rcx,rax
  40738a:	mov    r8,rbx
  40738d:	mov    rdx,rdi
  407390:	sub    rsi,rbx
  407393:	call   0x4224d8
  407398:	lea    rdx,[rbx+rdi*1]
  40739c:	mov    r8,rsi
  40739f:	mov    rcx,rdi
  4073a2:	call   0x4224d0
  4073a7:	mov    QWORD PTR [rip+0x51612],rsi        # 0x4589c0
  4073ae:	mov    rax,rbx
  4073b1:	add    rsp,0x20
  4073b5:	pop    rbx
  4073b6:	pop    rsi
  4073b7:	pop    rdi
  4073b8:	ret    
  4073b9:	nop    DWORD PTR [rax+0x0]
  4073c0:	mov    edx,0xb
  4073c5:	call   0x407d28
  4073ca:	mov    rax,0xffffffffffffffff
  4073d1:	jmp    0x4073b1
  4073d3:	nop    DWORD PTR [rax]
  4073d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073e0:	sub    rsp,0x38
  4073e4:	mov    QWORD PTR [rsp+0x48],rdx
  4073e9:	lea    rdx,[rsp+0x48]
  4073ee:	mov    QWORD PTR [rsp+0x50],r8
  4073f3:	mov    QWORD PTR [rsp+0x58],r9
  4073f8:	mov    QWORD PTR [rsp+0x28],rdx
  4073fd:	call   0x41d9d0
  407402:	add    rsp,0x38
  407406:	ret    
  407407:	nop    WORD PTR [rax+rax*1+0x0]
  407410:	push   r15
  407412:	push   r14
  407414:	push   r13
  407416:	push   r12
  407418:	push   rbp
  407419:	push   rdi
  40741a:	push   rsi
  40741b:	push   rbx
  40741c:	sub    rsp,0xe8
  407423:	mov    r13,rcx
  407426:	mov    rcx,QWORD PTR [rip+0x1efcb]        # 0x4263f8
  40742d:	mov    QWORD PTR [rsp+0x80],rcx
  407435:	call   0x422468
  40743a:	lea    rcx,[rsp+0x70]
  40743f:	mov    DWORD PTR [rsp+0x88],eax
  407446:	mov    DWORD PTR [rip+0x41530],0x0        # 0x448980
  407450:	call   0x408258
  407455:	lea    rcx,[rsp+0x48]
  40745a:	call   0x408288
  40745f:	lea    rcx,[rip+0x41522]        # 0x448988
  407466:	call   0x4080f0
  40746b:	mov    rcx,QWORD PTR [rip+0x41516]        # 0x448988
  407472:	lea    rdx,[rsp+0x80]
  40747a:	mov    r8d,0x1
  407480:	call   0x408100
  407485:	test   eax,eax
  407487:	js     0x4079d9
  40748d:	mov    rdx,QWORD PTR [rip+0x414f4]        # 0x448988
  407494:	mov    rcx,QWORD PTR [rsp+0x48]
  407499:	call   0x408270
  40749e:	mov    rdx,QWORD PTR [rip+0x414e3]        # 0x448988
  4074a5:	mov    rcx,QWORD PTR [rsp+0x70]
  4074aa:	call   0x408228
  4074af:	mov    rcx,QWORD PTR [rsp+0x70]
  4074b4:	lea    r8,[rip+0x241c5]        # 0x42b680
  4074bb:	lea    rdx,[rip+0x241ce]        # 0x42b690
  4074c2:	mov    r9d,0x1
  4074c8:	call   0x4081f8
  4074cd:	test   eax,eax
  4074cf:	js     0x407a06
  4074d5:	mov    rcx,QWORD PTR [rsp+0x70]
  4074da:	lea    r8,[rip+0x2417f]        # 0x42b660
  4074e1:	lea    rdx,[rip+0x24188]        # 0x42b670
  4074e8:	mov    r9d,0x1
  4074ee:	call   0x4081f8
  4074f3:	test   eax,eax
  4074f5:	js     0x407a39
  4074fb:	lea    rcx,[rsp+0x60]
  407500:	lea    r12,[rsp+0x58]
  407505:	lea    rbp,[rsp+0x90]
  40750d:	call   0x408290
  407512:	lea    rcx,[rsp+0x68]
  407517:	call   0x408258
  40751c:	lea    rax,[rsp+0xa0]
  407524:	mov    rcx,rax
  407527:	mov    QWORD PTR [rsp+0x38],rax
  40752c:	call   0x406910
  407531:	lea    rax,[rsp+0x50]
  407536:	mov    QWORD PTR [rsp+0x20],0x0
  40753f:	mov    QWORD PTR [rsp+0x28],rax
  407544:	lea    rax,[rsp+0x78]
  407549:	mov    QWORD PTR [rsp+0x30],rax
  40754e:	jmp    0x407617
  407553:	mov    esi,eax
  407555:	mov    eax,esi
  407557:	or     eax,r15d
  40755a:	jne    0x407a94
  407560:	xor    edx,edx
  407562:	mov    rcx,rbp
  407565:	call   0x414d90
  40756a:	imul   r15d,DWORD PTR [rsp+0x98],0x3e8
  407576:	cmp    QWORD PTR [rsp+0x20],0x0
  40757c:	mov    rsi,QWORD PTR [rsp+0x90]
  407584:	je     0x40787d
  40758a:	mov    rcx,QWORD PTR [rsp+0x78]
  40758f:	imul   esi,esi,0x3e8
  407595:	imul   edi,edi,0xfffffc18
  40759b:	call   0x408138
  4075a0:	mov    rcx,QWORD PTR [rsp+0x50]
  4075a5:	add    edi,esi
  4075a7:	mov    esi,0x431bde83
  4075ac:	call   0x408138
  4075b1:	mov    eax,r15d
  4075b4:	mov    r9d,r15d
  4075b7:	mov    r8d,DWORD PTR [rip+0x413c2]        # 0x448980
  4075be:	imul   esi
  4075c0:	sar    r9d,0x1f
  4075c4:	mov    eax,ebx
  4075c6:	sar    ebx,0x1f
  4075c9:	lea    r10,[rip+0x739f0]        # 0x47afc0
  4075d0:	sar    edx,0x12
  4075d3:	lea    r11d,[r8+0x1]
  4075d7:	sub    edx,r9d
  4075da:	lea    ecx,[rdi+rdx*1]
  4075dd:	mov    DWORD PTR [rip+0x4139c],r11d        # 0x448980
  4075e4:	imul   esi
  4075e6:	sar    edx,0x12
  4075e9:	sub    ebx,edx
  4075eb:	add    ecx,ebx
  4075ed:	cmp    r11d,0x20000
  4075f4:	mov    DWORD PTR [r10+r8*4],ecx
  4075f8:	ja     0x407b03
  4075fe:	mov    rax,QWORD PTR [rip+0x2aafb]        # 0x432100
  407605:	add    DWORD PTR [rsp+0xb0],0x1
  40760d:	mov    eax,DWORD PTR [rax]
  40760f:	test   eax,eax
  407611:	jne    0x4078ba
  407617:	mov    rcx,QWORD PTR [rsp+0x28]
  40761c:	mov    edx,0x1
  407621:	call   0x408010
  407626:	mov    rcx,QWORD PTR [rsp+0x50]
  40762b:	mov    r8,r12
  40762e:	mov    rdx,r13
  407631:	call   0x407ec0
  407636:	test   eax,eax
  407638:	js     0x407a6c
  40763e:	mov    r8,QWORD PTR [rsp+0x48]
  407643:	mov    rcx,QWORD PTR [rsp+0x50]
  407648:	mov    edx,0x2
  40764d:	call   0x408140
  407652:	mov    r8,QWORD PTR [rsp+0x70]
  407657:	mov    rcx,QWORD PTR [rsp+0x50]
  40765c:	mov    edx,0x1
  407661:	call   0x408140
  407666:	mov    rcx,QWORD PTR [rsp+0x50]
  40766b:	lea    rdx,[rip+0xfffffffffffffc1e]        # 0x407290
  407672:	call   0x407d00
  407677:	mov    rcx,QWORD PTR [rsp+0x50]
  40767c:	lea    rdx,[rip+0xfffffffffffffcdd]        # 0x407360
  407683:	call   0x407d10
  407688:	mov    rcx,QWORD PTR [rsp+0x50]
  40768d:	mov    rdx,rcx
  407690:	call   0x407d18
  407695:	mov    rcx,QWORD PTR [rsp+0x30]
  40769a:	mov    edx,0x2
  40769f:	mov    QWORD PTR [rip+0x51316],0x0        # 0x4589c0
  4076aa:	mov    QWORD PTR [rip+0x412e3],0x0        # 0x448998
  4076b5:	call   0x408010
  4076ba:	mov    rcx,QWORD PTR [rsp+0x78]
  4076bf:	mov    r8,r12
  4076c2:	mov    rdx,r13
  4076c5:	call   0x407ec0
  4076ca:	test   eax,eax
  4076cc:	js     0x407a6c
  4076d2:	mov    r8,QWORD PTR [rsp+0x60]
  4076d7:	mov    rcx,QWORD PTR [rsp+0x78]
  4076dc:	mov    edx,0x2
  4076e1:	call   0x408140
  4076e6:	mov    r8,QWORD PTR [rsp+0x68]
  4076eb:	mov    rcx,QWORD PTR [rsp+0x78]
  4076f0:	mov    edx,0x1
  4076f5:	call   0x408140
  4076fa:	mov    rcx,QWORD PTR [rsp+0x78]
  4076ff:	lea    rdx,[rip+0xfffffffffffffb3a]        # 0x407240
  407706:	call   0x407d00
  40770b:	mov    rcx,QWORD PTR [rsp+0x78]
  407710:	lea    rdx,[rip+0xfffffffffffffbc9]        # 0x4072e0
  407717:	call   0x407d10
  40771c:	mov    rcx,QWORD PTR [rsp+0x78]
  407721:	mov    rdx,rcx
  407724:	call   0x407d18
  407729:	xor    edx,edx
  40772b:	mov    rcx,rbp
  40772e:	call   0x414d90
  407733:	imul   ebx,DWORD PTR [rsp+0x98],0x3e8
  40773e:	mov    rdi,QWORD PTR [rsp+0x90]
  407746:	mov    esi,0xffffffe4
  40774b:	mov    r15d,esi
  40774e:	xchg   ax,ax
  407750:	mov    rcx,QWORD PTR [rsp+0x78]
  407755:	lea    rax,[rip+0x23a0d]        # 0x42b169
  40775c:	mov    QWORD PTR [rip+0x1ec9d],rax        # 0x426400
  407763:	call   0x408078
  407768:	cmp    eax,0xffffffcc
  40776b:	mov    r14d,eax
  40776e:	je     0x407800
  407774:	cmp    r15d,0xffffffe4
  407778:	je     0x407790
  40777a:	cmp    eax,0xffffffe4
  40777d:	jne    0x407553
  407783:	test   r15d,r15d
  407786:	je     0x407750
  407788:	jmp    0x407555
  40778d:	nop    DWORD PTR [rax]
  407790:	mov    rcx,QWORD PTR [rsp+0x50]
  407795:	lea    rax,[rip+0x239d4]        # 0x42b170
  40779c:	mov    QWORD PTR [rip+0x1ec5d],rax        # 0x426400
  4077a3:	call   0x408078
  4077a8:	cmp    eax,0xffffffcc
  4077ab:	je     0x407850
  4077b1:	cmp    r14d,0xffffffe4
  4077b5:	je     0x407830
  4077b7:	cmp    eax,0xffffffe4
  4077ba:	jne    0x4077f0
  4077bc:	test   r14d,r14d
  4077bf:	jne    0x4077f0
  4077c1:	mov    rcx,QWORD PTR [rsp+0x50]
  4077c6:	lea    rax,[rip+0x239a3]        # 0x42b170
  4077cd:	xor    esi,esi
  4077cf:	mov    QWORD PTR [rip+0x1ec2a],rax        # 0x426400
  4077d6:	call   0x408078
  4077db:	cmp    eax,0xffffffcc
  4077de:	je     0x407870
  4077e4:	cmp    eax,0xffffffe4
  4077e7:	mov    r14d,esi
  4077ea:	je     0x4077bc
  4077ec:	nop    DWORD PTR [rax+0x0]
  4077f0:	mov    esi,r14d
  4077f3:	mov    r15d,eax
  4077f6:	jmp    0x407555
  4077fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407800:	cmp    r15d,0xffffffe4
  407804:	jne    0x407783
  40780a:	mov    rcx,QWORD PTR [rsp+0x50]
  40780f:	lea    rax,[rip+0x2395a]        # 0x42b170
  407816:	mov    QWORD PTR [rip+0x1ebe3],rax        # 0x426400
  40781d:	call   0x408078
  407822:	cmp    eax,0xffffffcc
  407825:	je     0x407860
  407827:	nop    WORD PTR [rax+rax*1+0x0]
  407830:	cmp    eax,0xffffffe4
  407833:	je     0x407746
  407839:	mov    r15d,eax
  40783c:	test   r15d,r15d
  40783f:	je     0x407750
  407845:	jmp    0x407555
  40784a:	nop    WORD PTR [rax+rax*1+0x0]
  407850:	cmp    r14d,0xffffffe4
  407854:	je     0x407860
  407856:	mov    eax,r15d
  407859:	jmp    0x4077bc
  40785e:	xchg   ax,ax
  407860:	mov    esi,r15d
  407863:	jmp    0x407750
  407868:	nop    DWORD PTR [rax+rax*1+0x0]
  407870:	mov    r14d,esi
  407873:	mov    eax,0xffffffe4
  407878:	jmp    0x4077bc
  40787d:	mov    rcx,QWORD PTR [rsp+0x50]
  407882:	call   0x407fe8
  407887:	mov    rcx,QWORD PTR [rsp+0x50]
  40788c:	mov    r14d,eax
  40788f:	call   0x408198
  407894:	mov    rcx,QWORD PTR [rsp+0x50]
  407899:	mov    DWORD PTR [rsp+0x20],eax
  40789d:	call   0x408008
  4078a2:	mov    edx,DWORD PTR [rsp+0x20]
  4078a6:	mov    r8d,r14d
  4078a9:	mov    ecx,eax
  4078ab:	call   0x408168
  4078b0:	mov    QWORD PTR [rsp+0x20],rax
  4078b5:	jmp    0x40758a
  4078ba:	mov    QWORD PTR [rsp+0x28],r10
  4078bf:	call   QWORD PTR [rip+0x94b5f]        # 0x49c424
  4078c5:	mov    r8,QWORD PTR [rsp+0x20]
  4078ca:	lea    rcx,[rax+0x30]
  4078ce:	lea    rdx,[rip+0x238d8]        # 0x42b1ad
  4078d5:	call   0x406cb0
  4078da:	mov    rcx,QWORD PTR [rsp+0x38]
  4078df:	lea    rdx,[rip+0x2394b]        # 0x42b231
  4078e6:	mov    r8d,0x1
  4078ec:	call   0x406a70
  4078f1:	mov    ecx,DWORD PTR [rip+0x41089]        # 0x448980
  4078f7:	test   ecx,ecx
  4078f9:	je     0x4079cb
  4078ff:	pxor   xmm1,xmm1
  407903:	mov    r10,QWORD PTR [rsp+0x28]
  407908:	xor    eax,eax
  40790a:	nop    WORD PTR [rax+rax*1+0x0]
  407910:	mov    edx,DWORD PTR [r10+rax*4]
  407914:	pxor   xmm0,xmm0
  407918:	add    rax,0x1
  40791c:	cmp    ecx,eax
  40791e:	cvtsi2sd xmm0,rdx
  407923:	addsd  xmm1,xmm0
  407927:	ja     0x407910
  407929:	pxor   xmm0,xmm0
  40792d:	mov    eax,ecx
  40792f:	pxor   xmm2,xmm2
  407933:	xor    edx,edx
  407935:	cvtsi2sd xmm0,rax
  40793a:	divsd  xmm1,xmm0
  40793e:	xchg   ax,ax
  407940:	mov    eax,DWORD PTR [r10+rdx*4]
  407944:	add    rdx,0x1
  407948:	cmp    ecx,edx
  40794a:	pxor   xmm0,xmm0
  40794e:	cvtsi2sd xmm0,rax
  407953:	subsd  xmm0,xmm1
  407957:	mulsd  xmm0,xmm0
  40795b:	addsd  xmm2,xmm0
  40795f:	ja     0x407940
  407961:	pxor   xmm0,xmm0
  407965:	lea    eax,[rcx-0x1]
  407968:	movq   r8,xmm1
  40796d:	lea    rdx,[rip+0x238ca]        # 0x42b23e
  407974:	lea    rcx,[rip+0x238dd]        # 0x42b258
  40797b:	cvtsi2sd xmm0,rax
  407980:	divsd  xmm2,xmm0
  407984:	movapd xmm3,xmm2
  407988:	movq   r9,xmm2
  40798d:	movapd xmm2,xmm1
  407991:	call   0x4073e0
  407996:	mov    rcx,QWORD PTR [rsp+0x60]
  40799b:	call   0x408280
  4079a0:	mov    rcx,QWORD PTR [rsp+0x48]
  4079a5:	call   0x408278
  4079aa:	mov    rcx,QWORD PTR [rip+0x40fd7]        # 0x448988
  4079b1:	call   0x408110
  4079b6:	nop
  4079b7:	add    rsp,0xe8
  4079be:	pop    rbx
  4079bf:	pop    rsi
  4079c0:	pop    rdi
  4079c1:	pop    rbp
  4079c2:	pop    r12
  4079c4:	pop    r13
  4079c6:	pop    r14
  4079c8:	pop    r15
  4079ca:	ret    
  4079cb:	pxor   xmm2,xmm2
  4079cf:	movapd xmm1,xmm2
  4079d3:	divsd  xmm1,xmm2
  4079d7:	jmp    0x407961
  4079d9:	mov    ecx,eax
  4079db:	call   0x407d30
  4079e0:	mov    rbx,rax
  4079e3:	call   QWORD PTR [rip+0x94a3b]        # 0x49c424
  4079e9:	lea    rdx,[rip+0x23808]        # 0x42b1f8
  4079f0:	lea    rcx,[rax+0x60]
  4079f4:	mov    r8,rbx
  4079f7:	call   0x406cb0
  4079fc:	mov    ecx,0x1
  407a01:	call   0x422578
  407a06:	mov    ecx,eax
  407a08:	call   0x407d30
  407a0d:	mov    rbx,rax
  407a10:	call   QWORD PTR [rip+0x94a0e]        # 0x49c424
  407a16:	lea    rdx,[rip+0x23803]        # 0x42b220
  407a1d:	lea    rcx,[rax+0x60]
  407a21:	mov    r9,rbx
  407a24:	mov    r8d,0x189
  407a2a:	call   0x406cb0
  407a2f:	mov    ecx,0x1
  407a34:	call   0x422578
  407a39:	mov    ecx,eax
  407a3b:	call   0x407d30
  407a40:	mov    rbx,rax
  407a43:	call   QWORD PTR [rip+0x949db]        # 0x49c424
  407a49:	lea    rdx,[rip+0x237d0]        # 0x42b220
  407a50:	lea    rcx,[rax+0x60]
  407a54:	mov    r9,rbx
  407a57:	mov    r8d,0x192
  407a5d:	call   0x406cb0
  407a62:	mov    ecx,0x1
  407a67:	call   0x422578
  407a6c:	mov    rbx,QWORD PTR [rsp+0x58]
  407a71:	call   QWORD PTR [rip+0x949ad]        # 0x49c424
  407a77:	lea    rdx,[rip+0x236de]        # 0x42b15c
  407a7e:	lea    rcx,[rax+0x60]
  407a82:	mov    r8,rbx
  407a85:	call   0x406cb0
  407a8a:	mov    ecx,0x1
  407a8f:	call   0x422578
  407a94:	mov    ecx,esi
  407a96:	call   0x407d30
  407a9b:	mov    rbx,QWORD PTR [rip+0x94982]        # 0x49c424
  407aa2:	mov    rdi,rax
  407aa5:	call   rbx
  407aa7:	lea    rdx,[rip+0x236c9]        # 0x42b177
  407aae:	lea    rcx,[rax+0x60]
  407ab2:	mov    r8d,esi
  407ab5:	mov    r9,rdi
  407ab8:	call   0x406cb0
  407abd:	mov    ecx,r15d
  407ac0:	call   0x407d30
  407ac5:	mov    rsi,rax
  407ac8:	call   rbx
  407aca:	lea    rdx,[rip+0x236b6]        # 0x42b187
  407ad1:	lea    rcx,[rax+0x60]
  407ad5:	mov    r9,rsi
  407ad8:	mov    r8d,r15d
  407adb:	call   0x406cb0
  407ae0:	call   rbx
  407ae2:	lea    r8,[rip+0x23b37]        # 0x42b620
  407ae9:	lea    rcx,[rax+0x60]
  407aed:	lea    rdx,[rip+0x236a3]        # 0x42b197
  407af4:	call   0x406cb0
  407af9:	mov    ecx,0x1
  407afe:	call   0x422578
  407b03:	call   0x4225a0
  407b08:	nop
  407b09:	nop    DWORD PTR [rax+0x0]
  407b10:	push   rsi
  407b11:	push   rbx
  407b12:	sub    rsp,0x28
  407b16:	mov    esi,ecx
  407b18:	lea    rcx,[rip+0xfffffffffffff1c1]        # 0x406ce0
  407b1f:	mov    ebx,edx
  407b21:	call   0x408088
  407b26:	mov    ecx,esi
  407b28:	call   0x408080
  407b2d:	call   0x408090
  407b32:	test   ebx,ebx
  407b34:	jne    0x407b90
  407b36:	lea    rcx,[rip+0x239b3]        # 0x42b4f0
  407b3d:	mov    r8d,0x100
  407b43:	mov    edx,0xc00
  407b48:	call   0x4073e0
  407b4d:	lea    rcx,[rip+0x239d4]        # 0x42b528
  407b54:	call   0x407410
  407b59:	lea    rcx,[rip+0x23a10]        # 0x42b570
  407b60:	call   0x407410
  407b65:	lea    rcx,[rip+0x23a5c]        # 0x42b5c8
  407b6c:	call   0x407410
  407b71:	lea    rcx,[rip+0x238a8]        # 0x42b420
  407b78:	call   0x407410
  407b7d:	nop
  407b7e:	add    rsp,0x28
  407b82:	pop    rbx
  407b83:	pop    rsi
  407b84:	jmp    0x408098
  407b89:	nop    DWORD PTR [rax+0x0]
  407b90:	lea    rcx,[rip+0x236e9]        # 0x42b280
  407b97:	mov    edx,0x578
  407b9c:	call   0x4073e0
  407ba1:	lea    rcx,[rip+0x23720]        # 0x42b2c8
  407ba8:	mov    edx,0x578
  407bad:	call   0x406d20
  407bb2:	lea    rcx,[rip+0x2374f]        # 0x42b308
  407bb9:	mov    edx,0x578
  407bbe:	call   0x406d20
  407bc3:	lea    rcx,[rip+0x2377e]        # 0x42b348
  407bca:	mov    edx,0x578
  407bcf:	call   0x406d20
  407bd4:	lea    rcx,[rip+0x237ad]        # 0x42b388
  407bdb:	mov    edx,0x578
  407be0:	call   0x406d20
  407be5:	lea    rcx,[rip+0x237dc]        # 0x42b3c8
  407bec:	mov    edx,0x578
  407bf1:	call   0x406d20
  407bf6:	lea    rcx,[rip+0x23823]        # 0x42b420
  407bfd:	mov    edx,0x578
  407c02:	call   0x406d20
  407c07:	lea    rcx,[rip+0x23852]        # 0x42b460
  407c0e:	mov    edx,0x578
  407c13:	call   0x406d20
  407c18:	lea    rcx,[rip+0x23889]        # 0x42b4a8
  407c1f:	mov    edx,0x3c00
  407c24:	call   0x4073e0
  407c29:	lea    rcx,[rip+0x23698]        # 0x42b2c8
  407c30:	mov    edx,0x3c00
  407c35:	call   0x406d20
  407c3a:	lea    rcx,[rip+0x236c7]        # 0x42b308
  407c41:	mov    edx,0x3c00
  407c46:	call   0x406d20
  407c4b:	lea    rcx,[rip+0x236f6]        # 0x42b348
  407c52:	mov    edx,0x3c00
  407c57:	call   0x406d20
  407c5c:	lea    rcx,[rip+0x23725]        # 0x42b388
  407c63:	mov    edx,0x3c00
  407c68:	call   0x406d20
  407c6d:	lea    rcx,[rip+0x23754]        # 0x42b3c8
  407c74:	mov    edx,0x3c00
  407c79:	call   0x406d20
  407c7e:	lea    rcx,[rip+0x2379b]        # 0x42b420
  407c85:	mov    edx,0x3c00
  407c8a:	call   0x406d20
  407c8f:	lea    rcx,[rip+0x237ca]        # 0x42b460
  407c96:	mov    edx,0x3c00
  407c9b:	call   0x406d20
  407ca0:	nop
  407ca1:	add    rsp,0x28
  407ca5:	pop    rbx
  407ca6:	pop    rsi
  407ca7:	jmp    0x408098
  407cac:	nop
  407cad:	nop
  407cae:	nop
  407caf:	nop
  407cb0:	jmp    QWORD PTR [rip+0x945be]        # 0x49c274
  407cb6:	nop
  407cb7:	nop
  407cb8:	jmp    QWORD PTR [rip+0x945ae]        # 0x49c26c
  407cbe:	nop
  407cbf:	nop
  407cc0:	jmp    QWORD PTR [rip+0x9459e]        # 0x49c264
  407cc6:	nop
  407cc7:	nop
  407cc8:	jmp    QWORD PTR [rip+0x9458e]        # 0x49c25c
  407cce:	nop
  407ccf:	nop
  407cd0:	jmp    QWORD PTR [rip+0x9457e]        # 0x49c254
  407cd6:	nop
  407cd7:	nop
  407cd8:	jmp    QWORD PTR [rip+0x9456e]        # 0x49c24c
  407cde:	nop
  407cdf:	nop
  407ce0:	jmp    QWORD PTR [rip+0x9455e]        # 0x49c244
  407ce6:	nop
  407ce7:	nop
  407ce8:	jmp    QWORD PTR [rip+0x9454e]        # 0x49c23c
  407cee:	nop
  407cef:	nop
  407cf0:	jmp    QWORD PTR [rip+0x9453e]        # 0x49c234
  407cf6:	nop
  407cf7:	nop
  407cf8:	jmp    QWORD PTR [rip+0x9452e]        # 0x49c22c
  407cfe:	nop
  407cff:	nop
  407d00:	jmp    QWORD PTR [rip+0x9451e]        # 0x49c224
  407d06:	nop
  407d07:	nop
  407d08:	jmp    QWORD PTR [rip+0x9450e]        # 0x49c21c
  407d0e:	nop
  407d0f:	nop
  407d10:	jmp    QWORD PTR [rip+0x944fe]        # 0x49c214
  407d16:	nop
  407d17:	nop
  407d18:	jmp    QWORD PTR [rip+0x944ee]        # 0x49c20c
  407d1e:	nop
  407d1f:	nop
  407d20:	jmp    QWORD PTR [rip+0x944de]        # 0x49c204
  407d26:	nop
  407d27:	nop
  407d28:	jmp    QWORD PTR [rip+0x944ce]        # 0x49c1fc
  407d2e:	nop
  407d2f:	nop
  407d30:	jmp    QWORD PTR [rip+0x944be]        # 0x49c1f4
  407d36:	nop
  407d37:	nop
  407d38:	jmp    QWORD PTR [rip+0x944a6]        # 0x49c1e4
  407d3e:	nop
  407d3f:	nop
  407d40:	jmp    QWORD PTR [rip+0x94496]        # 0x49c1dc
  407d46:	nop
  407d47:	nop
  407d48:	jmp    QWORD PTR [rip+0x94486]        # 0x49c1d4
  407d4e:	nop
  407d4f:	nop
  407d50:	jmp    QWORD PTR [rip+0x94476]        # 0x49c1cc
  407d56:	nop
  407d57:	nop
  407d58:	jmp    QWORD PTR [rip+0x94466]        # 0x49c1c4
  407d5e:	nop
  407d5f:	nop
  407d60:	jmp    QWORD PTR [rip+0x94456]        # 0x49c1bc
  407d66:	nop
  407d67:	nop
  407d68:	jmp    QWORD PTR [rip+0x94446]        # 0x49c1b4
  407d6e:	nop
  407d6f:	nop
  407d70:	jmp    QWORD PTR [rip+0x94436]        # 0x49c1ac
  407d76:	nop
  407d77:	nop
  407d78:	jmp    QWORD PTR [rip+0x94426]        # 0x49c1a4
  407d7e:	nop
  407d7f:	nop
  407d80:	jmp    QWORD PTR [rip+0x94416]        # 0x49c19c
  407d86:	nop
  407d87:	nop
  407d88:	jmp    QWORD PTR [rip+0x94406]        # 0x49c194
  407d8e:	nop
  407d8f:	nop
  407d90:	jmp    QWORD PTR [rip+0x943f6]        # 0x49c18c
  407d96:	nop
  407d97:	nop
  407d98:	jmp    QWORD PTR [rip+0x943e6]        # 0x49c184
  407d9e:	nop
  407d9f:	nop
  407da0:	jmp    QWORD PTR [rip+0x943d6]        # 0x49c17c
  407da6:	nop
  407da7:	nop
  407da8:	jmp    QWORD PTR [rip+0x943c6]        # 0x49c174
  407dae:	nop
  407daf:	nop
  407db0:	jmp    QWORD PTR [rip+0x943b6]        # 0x49c16c
  407db6:	nop
  407db7:	nop
  407db8:	jmp    QWORD PTR [rip+0x943a6]        # 0x49c164
  407dbe:	nop
  407dbf:	nop
  407dc0:	jmp    QWORD PTR [rip+0x94396]        # 0x49c15c
  407dc6:	nop
  407dc7:	nop
  407dc8:	jmp    QWORD PTR [rip+0x94386]        # 0x49c154
  407dce:	nop
  407dcf:	nop
  407dd0:	jmp    QWORD PTR [rip+0x94376]        # 0x49c14c
  407dd6:	nop
  407dd7:	nop
  407dd8:	jmp    QWORD PTR [rip+0x94366]        # 0x49c144
  407dde:	nop
  407ddf:	nop
  407de0:	jmp    QWORD PTR [rip+0x94356]        # 0x49c13c
  407de6:	nop
  407de7:	nop
  407de8:	jmp    QWORD PTR [rip+0x94346]        # 0x49c134
  407dee:	nop
  407def:	nop
  407df0:	jmp    QWORD PTR [rip+0x94336]        # 0x49c12c
  407df6:	nop
  407df7:	nop
  407df8:	jmp    QWORD PTR [rip+0x94326]        # 0x49c124
  407dfe:	nop
  407dff:	nop
  407e00:	jmp    QWORD PTR [rip+0x94316]        # 0x49c11c
  407e06:	nop
  407e07:	nop
  407e08:	jmp    QWORD PTR [rip+0x94306]        # 0x49c114
  407e0e:	nop
  407e0f:	nop
  407e10:	jmp    QWORD PTR [rip+0x942f6]        # 0x49c10c
  407e16:	nop
  407e17:	nop
  407e18:	jmp    QWORD PTR [rip+0x942e6]        # 0x49c104
  407e1e:	nop
  407e1f:	nop
  407e20:	jmp    QWORD PTR [rip+0x942d6]        # 0x49c0fc
  407e26:	nop
  407e27:	nop
  407e28:	jmp    QWORD PTR [rip+0x942c6]        # 0x49c0f4
  407e2e:	nop
  407e2f:	nop
  407e30:	jmp    QWORD PTR [rip+0x942b6]        # 0x49c0ec
  407e36:	nop
  407e37:	nop
  407e38:	jmp    QWORD PTR [rip+0x942a6]        # 0x49c0e4
  407e3e:	nop
  407e3f:	nop
  407e40:	jmp    QWORD PTR [rip+0x94296]        # 0x49c0dc
  407e46:	nop
  407e47:	nop
  407e48:	jmp    QWORD PTR [rip+0x94286]        # 0x49c0d4
  407e4e:	nop
  407e4f:	nop
  407e50:	jmp    QWORD PTR [rip+0x94276]        # 0x49c0cc
  407e56:	nop
  407e57:	nop
  407e58:	jmp    QWORD PTR [rip+0x94266]        # 0x49c0c4
  407e5e:	nop
  407e5f:	nop
  407e60:	jmp    QWORD PTR [rip+0x94256]        # 0x49c0bc
  407e66:	nop
  407e67:	nop
  407e68:	jmp    QWORD PTR [rip+0x94246]        # 0x49c0b4
  407e6e:	nop
  407e6f:	nop
  407e70:	jmp    QWORD PTR [rip+0x94236]        # 0x49c0ac
  407e76:	nop
  407e77:	nop
  407e78:	jmp    QWORD PTR [rip+0x94226]        # 0x49c0a4
  407e7e:	nop
  407e7f:	nop
  407e80:	jmp    QWORD PTR [rip+0x94216]        # 0x49c09c
  407e86:	nop
  407e87:	nop
  407e88:	jmp    QWORD PTR [rip+0x94206]        # 0x49c094
  407e8e:	nop
  407e8f:	nop
  407e90:	jmp    QWORD PTR [rip+0x941f6]        # 0x49c08c
  407e96:	nop
  407e97:	nop
  407e98:	jmp    QWORD PTR [rip+0x941e6]        # 0x49c084
  407e9e:	nop
  407e9f:	nop
  407ea0:	jmp    QWORD PTR [rip+0x941d6]        # 0x49c07c
  407ea6:	nop
  407ea7:	nop
  407ea8:	jmp    QWORD PTR [rip+0x941c6]        # 0x49c074
  407eae:	nop
  407eaf:	nop
  407eb0:	jmp    QWORD PTR [rip+0x941b6]        # 0x49c06c
  407eb6:	nop
  407eb7:	nop
  407eb8:	jmp    QWORD PTR [rip+0x941a6]        # 0x49c064
  407ebe:	nop
  407ebf:	nop
  407ec0:	jmp    QWORD PTR [rip+0x94196]        # 0x49c05c
  407ec6:	nop
  407ec7:	nop
  407ec8:	jmp    QWORD PTR [rip+0x94186]        # 0x49c054
  407ece:	nop
  407ecf:	nop
  407ed0:	jmp    QWORD PTR [rip+0x94176]        # 0x49c04c
  407ed6:	nop
  407ed7:	nop
  407ed8:	jmp    QWORD PTR [rip+0x94166]        # 0x49c044
  407ede:	nop
  407edf:	nop
  407ee0:	jmp    QWORD PTR [rip+0x94156]        # 0x49c03c
  407ee6:	nop
  407ee7:	nop
  407ee8:	jmp    QWORD PTR [rip+0x94146]        # 0x49c034
  407eee:	nop
  407eef:	nop
  407ef0:	jmp    QWORD PTR [rip+0x94136]        # 0x49c02c
  407ef6:	nop
  407ef7:	nop
  407ef8:	jmp    QWORD PTR [rip+0x94126]        # 0x49c024
  407efe:	nop
  407eff:	nop
  407f00:	jmp    QWORD PTR [rip+0x94116]        # 0x49c01c
  407f06:	nop
  407f07:	nop
  407f08:	jmp    QWORD PTR [rip+0x94106]        # 0x49c014
  407f0e:	nop
  407f0f:	nop
  407f10:	jmp    QWORD PTR [rip+0x940f6]        # 0x49c00c
  407f16:	nop
  407f17:	nop
  407f18:	jmp    QWORD PTR [rip+0x940e6]        # 0x49c004
  407f1e:	nop
  407f1f:	nop
  407f20:	jmp    QWORD PTR [rip+0x940d6]        # 0x49bffc
  407f26:	nop
  407f27:	nop
  407f28:	jmp    QWORD PTR [rip+0x940c6]        # 0x49bff4
  407f2e:	nop
  407f2f:	nop
  407f30:	jmp    QWORD PTR [rip+0x940b6]        # 0x49bfec
  407f36:	nop
  407f37:	nop
  407f38:	jmp    QWORD PTR [rip+0x940a6]        # 0x49bfe4
  407f3e:	nop
  407f3f:	nop
  407f40:	jmp    QWORD PTR [rip+0x94096]        # 0x49bfdc
  407f46:	nop
  407f47:	nop
  407f48:	jmp    QWORD PTR [rip+0x94086]        # 0x49bfd4
  407f4e:	nop
  407f4f:	nop
  407f50:	jmp    QWORD PTR [rip+0x94076]        # 0x49bfcc
  407f56:	nop
  407f57:	nop
  407f58:	jmp    QWORD PTR [rip+0x94066]        # 0x49bfc4
  407f5e:	nop
  407f5f:	nop
  407f60:	jmp    QWORD PTR [rip+0x94056]        # 0x49bfbc
  407f66:	nop
  407f67:	nop
  407f68:	jmp    QWORD PTR [rip+0x94046]        # 0x49bfb4
  407f6e:	nop
  407f6f:	nop
  407f70:	jmp    QWORD PTR [rip+0x94036]        # 0x49bfac
  407f76:	nop
  407f77:	nop
  407f78:	jmp    QWORD PTR [rip+0x94026]        # 0x49bfa4
  407f7e:	nop
  407f7f:	nop
  407f80:	jmp    QWORD PTR [rip+0x94016]        # 0x49bf9c
  407f86:	nop
  407f87:	nop
  407f88:	jmp    QWORD PTR [rip+0x94006]        # 0x49bf94
  407f8e:	nop
  407f8f:	nop
  407f90:	jmp    QWORD PTR [rip+0x93ff6]        # 0x49bf8c
  407f96:	nop
  407f97:	nop
  407f98:	jmp    QWORD PTR [rip+0x93fe6]        # 0x49bf84
  407f9e:	nop
  407f9f:	nop
  407fa0:	jmp    QWORD PTR [rip+0x93fd6]        # 0x49bf7c
  407fa6:	nop
  407fa7:	nop
  407fa8:	jmp    QWORD PTR [rip+0x93fc6]        # 0x49bf74
  407fae:	nop
  407faf:	nop
  407fb0:	jmp    QWORD PTR [rip+0x93fb6]        # 0x49bf6c
  407fb6:	nop
  407fb7:	nop
  407fb8:	jmp    QWORD PTR [rip+0x93fa6]        # 0x49bf64
  407fbe:	nop
  407fbf:	nop
  407fc0:	jmp    QWORD PTR [rip+0x93f96]        # 0x49bf5c
  407fc6:	nop
  407fc7:	nop
  407fc8:	jmp    QWORD PTR [rip+0x93f86]        # 0x49bf54
  407fce:	nop
  407fcf:	nop
  407fd0:	jmp    QWORD PTR [rip+0x93f76]        # 0x49bf4c
  407fd6:	nop
  407fd7:	nop
  407fd8:	jmp    QWORD PTR [rip+0x93f5e]        # 0x49bf3c
  407fde:	nop
  407fdf:	nop
  407fe0:	jmp    QWORD PTR [rip+0x93f4e]        # 0x49bf34
  407fe6:	nop
  407fe7:	nop
  407fe8:	jmp    QWORD PTR [rip+0x93f3e]        # 0x49bf2c
  407fee:	nop
  407fef:	nop
  407ff0:	jmp    QWORD PTR [rip+0x93f2e]        # 0x49bf24
  407ff6:	nop
  407ff7:	nop
  407ff8:	jmp    QWORD PTR [rip+0x93f1e]        # 0x49bf1c
  407ffe:	nop
  407fff:	nop
  408000:	jmp    QWORD PTR [rip+0x93f0e]        # 0x49bf14
  408006:	nop
  408007:	nop
  408008:	jmp    QWORD PTR [rip+0x93efe]        # 0x49bf0c
  40800e:	nop
  40800f:	nop
  408010:	jmp    QWORD PTR [rip+0x93eee]        # 0x49bf04
  408016:	nop
  408017:	nop
  408018:	jmp    QWORD PTR [rip+0x93ede]        # 0x49befc
  40801e:	nop
  40801f:	nop
  408020:	jmp    QWORD PTR [rip+0x93ece]        # 0x49bef4
  408026:	nop
  408027:	nop
  408028:	jmp    QWORD PTR [rip+0x93ebe]        # 0x49beec
  40802e:	nop
  40802f:	nop
  408030:	jmp    QWORD PTR [rip+0x93eae]        # 0x49bee4
  408036:	nop
  408037:	nop
  408038:	jmp    QWORD PTR [rip+0x93e9e]        # 0x49bedc
  40803e:	nop
  40803f:	nop
  408040:	jmp    QWORD PTR [rip+0x93e8e]        # 0x49bed4
  408046:	nop
  408047:	nop
  408048:	jmp    QWORD PTR [rip+0x93e7e]        # 0x49becc
  40804e:	nop
  40804f:	nop
  408050:	jmp    QWORD PTR [rip+0x93e6e]        # 0x49bec4
  408056:	nop
  408057:	nop
  408058:	jmp    QWORD PTR [rip+0x93e5e]        # 0x49bebc
  40805e:	nop
  40805f:	nop
  408060:	jmp    QWORD PTR [rip+0x93e4e]        # 0x49beb4
  408066:	nop
  408067:	nop
  408068:	jmp    QWORD PTR [rip+0x93e3e]        # 0x49beac
  40806e:	nop
  40806f:	nop
  408070:	jmp    QWORD PTR [rip+0x93e2e]        # 0x49bea4
  408076:	nop
  408077:	nop
  408078:	jmp    QWORD PTR [rip+0x93e1e]        # 0x49be9c
  40807e:	nop
  40807f:	nop
  408080:	jmp    QWORD PTR [rip+0x93e0e]        # 0x49be94
  408086:	nop
  408087:	nop
  408088:	jmp    QWORD PTR [rip+0x93dfe]        # 0x49be8c
  40808e:	nop
  40808f:	nop
  408090:	jmp    QWORD PTR [rip+0x93dee]        # 0x49be84
  408096:	nop
  408097:	nop
  408098:	jmp    QWORD PTR [rip+0x93dde]        # 0x49be7c
  40809e:	nop
  40809f:	nop
  4080a0:	jmp    QWORD PTR [rip+0x93dc6]        # 0x49be6c
  4080a6:	nop
  4080a7:	nop
  4080a8:	jmp    QWORD PTR [rip+0x93db6]        # 0x49be64
  4080ae:	nop
  4080af:	nop
  4080b0:	jmp    QWORD PTR [rip+0x93da6]        # 0x49be5c
  4080b6:	nop
  4080b7:	nop
  4080b8:	jmp    QWORD PTR [rip+0x93d96]        # 0x49be54
  4080be:	nop
  4080bf:	nop
  4080c0:	jmp    QWORD PTR [rip+0x93d86]        # 0x49be4c
  4080c6:	nop
  4080c7:	nop
  4080c8:	jmp    QWORD PTR [rip+0x93d76]        # 0x49be44
  4080ce:	nop
  4080cf:	nop
  4080d0:	jmp    QWORD PTR [rip+0x93d66]        # 0x49be3c
  4080d6:	nop
  4080d7:	nop
  4080d8:	jmp    QWORD PTR [rip+0x93d56]        # 0x49be34
  4080de:	nop
  4080df:	nop
  4080e0:	jmp    QWORD PTR [rip+0x93d46]        # 0x49be2c
  4080e6:	nop
  4080e7:	nop
  4080e8:	jmp    QWORD PTR [rip+0x93d36]        # 0x49be24
  4080ee:	nop
  4080ef:	nop
  4080f0:	jmp    QWORD PTR [rip+0x93d26]        # 0x49be1c
  4080f6:	nop
  4080f7:	nop
  4080f8:	jmp    QWORD PTR [rip+0x93d16]        # 0x49be14
  4080fe:	nop
  4080ff:	nop
  408100:	jmp    QWORD PTR [rip+0x93d06]        # 0x49be0c
  408106:	nop
  408107:	nop
  408108:	jmp    QWORD PTR [rip+0x93cf6]        # 0x49be04
  40810e:	nop
  40810f:	nop
  408110:	jmp    QWORD PTR [rip+0x93ce6]        # 0x49bdfc
  408116:	nop
  408117:	nop
  408118:	jmp    QWORD PTR [rip+0x93cd6]        # 0x49bdf4
  40811e:	nop
  40811f:	nop
  408120:	jmp    QWORD PTR [rip+0x93cc6]        # 0x49bdec
  408126:	nop
  408127:	nop
  408128:	jmp    QWORD PTR [rip+0x93cb6]        # 0x49bde4
  40812e:	nop
  40812f:	nop
  408130:	jmp    QWORD PTR [rip+0x93ca6]        # 0x49bddc
  408136:	nop
  408137:	nop
  408138:	jmp    QWORD PTR [rip+0x93c96]        # 0x49bdd4
  40813e:	nop
  40813f:	nop
  408140:	jmp    QWORD PTR [rip+0x93c86]        # 0x49bdcc
  408146:	nop
  408147:	nop
  408148:	jmp    QWORD PTR [rip+0x93c76]        # 0x49bdc4
  40814e:	nop
  40814f:	nop
  408150:	jmp    QWORD PTR [rip+0x93c66]        # 0x49bdbc
  408156:	nop
  408157:	nop
  408158:	jmp    QWORD PTR [rip+0x93c56]        # 0x49bdb4
  40815e:	nop
  40815f:	nop
  408160:	jmp    QWORD PTR [rip+0x93c46]        # 0x49bdac
  408166:	nop
  408167:	nop
  408168:	jmp    QWORD PTR [rip+0x93c36]        # 0x49bda4
  40816e:	nop
  40816f:	nop
  408170:	jmp    QWORD PTR [rip+0x93c26]        # 0x49bd9c
  408176:	nop
  408177:	nop
  408178:	jmp    QWORD PTR [rip+0x93c16]        # 0x49bd94
  40817e:	nop
  40817f:	nop
  408180:	jmp    QWORD PTR [rip+0x93c06]        # 0x49bd8c
  408186:	nop
  408187:	nop
  408188:	jmp    QWORD PTR [rip+0x93bf6]        # 0x49bd84
  40818e:	nop
  40818f:	nop
  408190:	jmp    QWORD PTR [rip+0x93be6]        # 0x49bd7c
  408196:	nop
  408197:	nop
  408198:	jmp    QWORD PTR [rip+0x93bd6]        # 0x49bd74
  40819e:	nop
  40819f:	nop
  4081a0:	jmp    QWORD PTR [rip+0x93bc6]        # 0x49bd6c
  4081a6:	nop
  4081a7:	nop
  4081a8:	jmp    QWORD PTR [rip+0x93bb6]        # 0x49bd64
  4081ae:	nop
  4081af:	nop
  4081b0:	jmp    QWORD PTR [rip+0x93ba6]        # 0x49bd5c
  4081b6:	nop
  4081b7:	nop
  4081b8:	jmp    QWORD PTR [rip+0x93b96]        # 0x49bd54
  4081be:	nop
  4081bf:	nop
  4081c0:	jmp    QWORD PTR [rip+0x93b86]        # 0x49bd4c
  4081c6:	nop
  4081c7:	nop
  4081c8:	jmp    QWORD PTR [rip+0x93b76]        # 0x49bd44
  4081ce:	nop
  4081cf:	nop
  4081d0:	jmp    QWORD PTR [rip+0x93b66]        # 0x49bd3c
  4081d6:	nop
  4081d7:	nop
  4081d8:	jmp    QWORD PTR [rip+0x93b56]        # 0x49bd34
  4081de:	nop
  4081df:	nop
  4081e0:	jmp    QWORD PTR [rip+0x93b46]        # 0x49bd2c
  4081e6:	nop
  4081e7:	nop
  4081e8:	jmp    QWORD PTR [rip+0x93b36]        # 0x49bd24
  4081ee:	nop
  4081ef:	nop
  4081f0:	jmp    QWORD PTR [rip+0x93b26]        # 0x49bd1c
  4081f6:	nop
  4081f7:	nop
  4081f8:	jmp    QWORD PTR [rip+0x93b16]        # 0x49bd14
  4081fe:	nop
  4081ff:	nop
  408200:	jmp    QWORD PTR [rip+0x93b06]        # 0x49bd0c
  408206:	nop
  408207:	nop
  408208:	jmp    QWORD PTR [rip+0x93af6]        # 0x49bd04
  40820e:	nop
  40820f:	nop
  408210:	jmp    QWORD PTR [rip+0x93ae6]        # 0x49bcfc
  408216:	nop
  408217:	nop
  408218:	jmp    QWORD PTR [rip+0x93ad6]        # 0x49bcf4
  40821e:	nop
  40821f:	nop
  408220:	jmp    QWORD PTR [rip+0x93ac6]        # 0x49bcec
  408226:	nop
  408227:	nop
  408228:	jmp    QWORD PTR [rip+0x93ab6]        # 0x49bce4
  40822e:	nop
  40822f:	nop
  408230:	jmp    QWORD PTR [rip+0x93aa6]        # 0x49bcdc
  408236:	nop
  408237:	nop
  408238:	jmp    QWORD PTR [rip+0x93a96]        # 0x49bcd4
  40823e:	nop
  40823f:	nop
  408240:	jmp    QWORD PTR [rip+0x93a86]        # 0x49bccc
  408246:	nop
  408247:	nop
  408248:	jmp    QWORD PTR [rip+0x93a76]        # 0x49bcc4
  40824e:	nop
  40824f:	nop
  408250:	jmp    QWORD PTR [rip+0x93a66]        # 0x49bcbc
  408256:	nop
  408257:	nop
  408258:	jmp    QWORD PTR [rip+0x93a56]        # 0x49bcb4
  40825e:	nop
  40825f:	nop
  408260:	jmp    QWORD PTR [rip+0x93a46]        # 0x49bcac
  408266:	nop
  408267:	nop
  408268:	jmp    QWORD PTR [rip+0x93a36]        # 0x49bca4
  40826e:	nop
  40826f:	nop
  408270:	jmp    QWORD PTR [rip+0x93a26]        # 0x49bc9c
  408276:	nop
  408277:	nop
  408278:	jmp    QWORD PTR [rip+0x93a16]        # 0x49bc94
  40827e:	nop
  40827f:	nop
  408280:	jmp    QWORD PTR [rip+0x93a06]        # 0x49bc8c
  408286:	nop
  408287:	nop
  408288:	jmp    QWORD PTR [rip+0x939f6]        # 0x49bc84
  40828e:	nop
  40828f:	nop
  408290:	jmp    QWORD PTR [rip+0x939e6]        # 0x49bc7c
  408296:	nop
  408297:	nop
  408298:	jmp    QWORD PTR [rip+0x939d6]        # 0x49bc74
  40829e:	nop
  40829f:	nop
  4082a0:	jmp    QWORD PTR [rip+0x939c6]        # 0x49bc6c
  4082a6:	nop
  4082a7:	nop
  4082a8:	jmp    QWORD PTR [rip+0x939b6]        # 0x49bc64
  4082ae:	nop
  4082af:	nop
  4082b0:	jmp    QWORD PTR [rip+0x939a6]        # 0x49bc5c
  4082b6:	nop
  4082b7:	nop
  4082b8:	jmp    QWORD PTR [rip+0x93996]        # 0x49bc54
  4082be:	nop
  4082bf:	nop
  4082c0:	sub    rsp,0x28
  4082c4:	lea    rcx,[rip+0x1e175]        # 0x426440
  4082cb:	xor    edx,edx
  4082cd:	call   0x4145f0
  4082d2:	mov    ecx,0x1
  4082d7:	call   0x422578
  4082dc:	nop
  4082dd:	nop    DWORD PTR [rax]
  4082e0:	mov    DWORD PTR [rip+0x60736],0x0        # 0x468a20
  4082ea:	mov    r9,QWORD PTR [rip+0x6072f]        # 0x468a20
  4082f1:	mov    r8d,0x1
  4082f7:	jmp    0x40ed30
  4082fc:	nop    DWORD PTR [rax+0x0]
  408300:	mov    DWORD PTR [rip+0x6070e],0x0        # 0x468a18
  40830a:	mov    r9,QWORD PTR [rip+0x60707]        # 0x468a18
  408311:	mov    r8d,0x1
  408317:	jmp    0x40ed30
  40831c:	nop    DWORD PTR [rax+0x0]
  408320:	mov    DWORD PTR [rip+0x606e6],0x0        # 0x468a10
  40832a:	mov    r9,QWORD PTR [rip+0x606df]        # 0x468a10
  408331:	mov    r8d,0x1
  408337:	jmp    0x40ed30
  40833c:	nop    DWORD PTR [rax+0x0]
  408340:	mov    DWORD PTR [rip+0x606be],0x0        # 0x468a08
  40834a:	mov    r9,QWORD PTR [rip+0x606b7]        # 0x468a08
  408351:	mov    r8d,0x1
  408357:	jmp    0x40ed30
  40835c:	nop    DWORD PTR [rax+0x0]
  408360:	mov    DWORD PTR [rip+0x60696],0x0        # 0x468a00
  40836a:	mov    r9,QWORD PTR [rip+0x6068f]        # 0x468a00
  408371:	mov    r8d,0x1
  408377:	jmp    0x40ed30
  40837c:	nop    DWORD PTR [rax+0x0]
  408380:	push   rsi
  408381:	push   rbx
  408382:	sub    rsp,0x28
  408386:	cmp    rcx,0xf
  40838a:	mov    rbx,rcx
  40838d:	mov    rsi,rdx
  408390:	ja     0x4083b0
  408392:	lea    r8,[rip+0x237b7]        # 0x42bb50
  408399:	mov    r9d,0x1
  40839f:	mov    rdx,rsi
  4083a2:	mov    rcx,rbx
  4083a5:	add    rsp,0x28
  4083a9:	pop    rbx
  4083aa:	pop    rsi
  4083ab:	jmp    0x40fce0
  4083b0:	call   0x408630
  4083b5:	cmp    DWORD PTR [rsi+0x18],0x1000
  4083bc:	jbe    0x4083d4
  4083be:	call   QWORD PTR [rip+0x94060]        # 0x49c424
  4083c4:	mov    rdx,QWORD PTR [rip+0x29dd5]        # 0x4321a0
  4083cb:	add    rax,0x60
  4083cf:	mov    QWORD PTR [rdx],rax
  4083d2:	jmp    0x408392
  4083d4:	add    rsp,0x28
  4083d8:	pop    rbx
  4083d9:	pop    rsi
  4083da:	ret    
  4083db:	nop    DWORD PTR [rax+rax*1+0x0]
  4083e0:	push   rsi
  4083e1:	push   rbx
  4083e2:	sub    rsp,0x28
  4083e6:	cmp    rcx,0xf
  4083ea:	mov    rbx,rcx
  4083ed:	mov    rsi,rdx
  4083f0:	ja     0x408410
  4083f2:	lea    r8,[rip+0x2374f]        # 0x42bb48
  4083f9:	mov    r9d,0x1
  4083ff:	mov    rdx,rsi
  408402:	mov    rcx,rbx
  408405:	add    rsp,0x28
  408409:	pop    rbx
  40840a:	pop    rsi
  40840b:	jmp    0x40fce0
  408410:	call   0x408630
  408415:	cmp    DWORD PTR [rsi+0x18],0x4268
  40841c:	jbe    0x408434
  40841e:	call   QWORD PTR [rip+0x94000]        # 0x49c424
  408424:	mov    rdx,QWORD PTR [rip+0x29d75]        # 0x4321a0
  40842b:	add    rax,0x60
  40842f:	mov    QWORD PTR [rdx],rax
  408432:	jmp    0x4083f2
  408434:	add    rsp,0x28
  408438:	pop    rbx
  408439:	pop    rsi
  40843a:	ret    
  40843b:	nop    DWORD PTR [rax+rax*1+0x0]
  408440:	push   rsi
  408441:	push   rbx
  408442:	sub    rsp,0x28
  408446:	cmp    rcx,0xf
  40844a:	mov    rbx,rcx
  40844d:	mov    rsi,rdx
  408450:	ja     0x408470
  408452:	lea    r8,[rip+0x236e7]        # 0x42bb40
  408459:	mov    r9d,0x1
  40845f:	mov    rdx,rsi
  408462:	mov    rcx,rbx
  408465:	add    rsp,0x28
  408469:	pop    rbx
  40846a:	pop    rsi
  40846b:	jmp    0x40fce0
  408470:	call   0x408630
  408475:	cmp    DWORD PTR [rsi+0x18],0x270f
  40847c:	jbe    0x408494
  40847e:	call   QWORD PTR [rip+0x93fa0]        # 0x49c424
  408484:	mov    rdx,QWORD PTR [rip+0x29d15]        # 0x4321a0
  40848b:	add    rax,0x60
  40848f:	mov    QWORD PTR [rdx],rax
  408492:	jmp    0x408452
  408494:	add    rsp,0x28
  408498:	pop    rbx
  408499:	pop    rsi
  40849a:	ret    
  40849b:	nop    DWORD PTR [rax+rax*1+0x0]
  4084a0:	push   rbx
  4084a1:	sub    rsp,0x20
  4084a5:	mov    r8d,0xc
  4084ab:	mov    rbx,rcx
  4084ae:	call   0x40d070
  4084b3:	test   eax,eax
  4084b5:	je     0x4084bd
  4084b7:	test   BYTE PTR [rbx+0x10],0x4
  4084bb:	jne    0x4084c3
  4084bd:	add    rsp,0x20
  4084c1:	pop    rbx
  4084c2:	ret    
  4084c3:	mov    rax,QWORD PTR [rip+0x1e00e]        # 0x4264d8
  4084ca:	lea    rcx,[rip+0x1df6f]        # 0x426440
  4084d1:	mov    edx,0x40
  4084d6:	add    rsp,0x20
  4084da:	pop    rbx
  4084db:	rex.W jmp rax
  4084de:	nop
  4084df:	nop
  4084e0:	push   rsi
  4084e1:	push   rbx
  4084e2:	sub    rsp,0x28
  4084e6:	mov    eax,DWORD PTR [rdx+0x10]
  4084e9:	mov    r8,QWORD PTR [rdx+0x38]
  4084ed:	mov    rsi,rcx
  4084f0:	mov    rbx,rdx
  4084f3:	and    eax,0xfffff00
  4084f8:	or     eax,0x8
  4084fb:	test   r8,r8
  4084fe:	mov    DWORD PTR [rdx+0x10],eax
  408501:	je     0x408509
  408503:	call   r8
  408506:	mov    eax,DWORD PTR [rbx+0x10]
  408509:	movzx  edx,WORD PTR [rbx]
  40850c:	mov    rcx,QWORD PTR [rsi+0xc8]
  408513:	and    eax,0xfffff00
  408518:	mov    rcx,QWORD PTR [rcx+rdx*8]
  40851c:	mov    QWORD PTR [rbx+0x18],rcx
  408520:	mov    rcx,QWORD PTR [rsi+0xd0]
  408527:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40852b:	mov    DWORD PTR [rbx+0x10],eax
  40852e:	mov    QWORD PTR [rbx+0x20],rdx
  408532:	add    rsp,0x28
  408536:	pop    rbx
  408537:	pop    rsi
  408538:	ret    
  408539:	nop    DWORD PTR [rax+0x0]
  408540:	push   rbp
  408541:	push   rdi
  408542:	push   rsi
  408543:	push   rbx
  408544:	sub    rsp,0x28
  408548:	mov    eax,DWORD PTR [rcx]
  40854a:	lea    rbx,[rcx+0x8]
  40854e:	mov    rbp,rcx
  408551:	lea    edx,[rax-0x1]
  408554:	test   eax,eax
  408556:	lea    rdi,[rbx+rdx*8+0x8]
  40855b:	jg     0x40856d
  40855d:	jmp    0x408590
  40855f:	nop
  408560:	mov    rcx,rsi
  408563:	call   0x422528
  408568:	cmp    rbx,rdi
  40856b:	je     0x408590
  40856d:	add    rbx,0x8
  408571:	mov    rsi,QWORD PTR [rbx-0x8]
  408575:	cmp    DWORD PTR [rsi],0x6
  408578:	jne    0x408560
  40857a:	mov    rcx,QWORD PTR [rsi+0x10]
  40857e:	call   0x408540
  408583:	mov    rcx,rsi
  408586:	call   0x422528
  40858b:	cmp    rbx,rdi
  40858e:	jne    0x40856d
  408590:	mov    rcx,rbp
  408593:	add    rsp,0x28
  408597:	pop    rbx
  408598:	pop    rsi
  408599:	pop    rdi
  40859a:	pop    rbp
  40859b:	jmp    0x422528
  4085a0:	push   rdi
  4085a1:	push   rsi
  4085a2:	push   rbx
  4085a3:	sub    rsp,0x20
  4085a7:	mov    rdi,QWORD PTR [rip+0x9400e]        # 0x49c5bc
  4085ae:	mov    rsi,rcx
  4085b1:	jmp    0x4085b7
  4085b3:	add    rsi,0x1
  4085b7:	movzx  ecx,BYTE PTR [rsi]
  4085ba:	call   rdi
  4085bc:	test   eax,eax
  4085be:	jne    0x4085b3
  4085c0:	mov    rcx,rsi
  4085c3:	call   0x422468
  4085c8:	lea    rbx,[rsi+rax*1]
  4085cc:	cmp    rbx,rsi
  4085cf:	ja     0x4085dc
  4085d1:	jmp    0x4085e6
  4085d3:	sub    rbx,0x1
  4085d7:	cmp    rbx,rsi
  4085da:	je     0x4085e6
  4085dc:	movzx  ecx,BYTE PTR [rbx-0x1]
  4085e0:	call   rdi
  4085e2:	test   eax,eax
  4085e4:	jne    0x4085d3
  4085e6:	mov    rax,rsi
  4085e9:	mov    BYTE PTR [rbx],0x0
  4085ec:	add    rsp,0x20
  4085f0:	pop    rbx
  4085f1:	pop    rsi
  4085f2:	pop    rdi
  4085f3:	ret    
  4085f4:	xchg   ax,ax
  4085f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408600:	sub    rsp,0x38
  408604:	mov    QWORD PTR [rsp+0x50],r8
  408609:	lea    r8,[rsp+0x50]
  40860e:	mov    QWORD PTR [rsp+0x58],r9
  408613:	mov    QWORD PTR [rsp+0x28],r8
  408618:	call   0x41d9a0
  40861d:	add    rsp,0x38
  408621:	ret    
  408622:	nop    DWORD PTR [rax+0x0]
  408626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408630:	push   r13
  408632:	push   r12
  408634:	push   rbp
  408635:	push   rdi
  408636:	push   rsi
  408637:	push   rbx
  408638:	sub    rsp,0x38
  40863c:	cmp    rcx,0xf
  408640:	jbe    0x40864d
  408642:	test   rdx,rdx
  408645:	je     0x40864d
  408647:	test   BYTE PTR [rdx+0x10],0x8
  40864b:	je     0x408660
  40864d:	add    rsp,0x38
  408651:	pop    rbx
  408652:	pop    rsi
  408653:	pop    rdi
  408654:	pop    rbp
  408655:	pop    r12
  408657:	pop    r13
  408659:	ret    
  40865a:	nop    WORD PTR [rax+rax*1+0x0]
  408660:	cmp    QWORD PTR [rdx+0x18],0x0
  408665:	je     0x40864d
  408667:	mov    rbx,rdx
  40866a:	mov    rsi,rcx
  40866d:	mov    rdi,QWORD PTR [rip+0x93e00]        # 0x49c474
  408674:	call   rdi
  408676:	mov    DWORD PTR [rax],0x0
  40867c:	mov    rcx,QWORD PTR [rbx+0x18]
  408680:	lea    rdx,[rsp+0x28]
  408685:	xor    r8d,r8d
  408688:	call   0x422438
  40868d:	mov    rbp,QWORD PTR [rbx+0x18]
  408691:	cmp    rbp,QWORD PTR [rsp+0x28]
  408696:	mov    r12d,eax
  408699:	je     0x4086d4
  40869b:	call   rdi
  40869d:	mov    eax,DWORD PTR [rax]
  40869f:	test   eax,eax
  4086a1:	jne    0x4086d0
  4086a3:	mov    eax,DWORD PTR [rbx+0x10]
  4086a6:	test   eax,0x1000000
  4086ab:	jne    0x40871f
  4086ad:	mov    rdx,QWORD PTR [rsp+0x28]
  4086b2:	cmp    BYTE PTR [rdx],0x0
  4086b5:	jne    0x4086d0
  4086b7:	test   al,0x40
  4086b9:	jne    0x408790
  4086bf:	mov    DWORD PTR [rbx+0x18],r12d
  4086c3:	jmp    0x40864d
  4086c5:	cmp    cl,0x67
  4086c8:	je     0x408776
  4086ce:	xchg   ax,ax
  4086d0:	mov    rbp,QWORD PTR [rbx+0x18]
  4086d4:	mov    r13,QWORD PTR [rsi+0x28]
  4086d8:	mov    r12,QWORD PTR [rip+0x1fbb9]        # 0x428298
  4086df:	call   QWORD PTR [rip+0x93d3f]        # 0x49c424
  4086e5:	lea    rcx,[rax+0x60]
  4086e9:	mov    r9,rbp
  4086ec:	mov    r8,r13
  4086ef:	mov    rdx,r12
  4086f2:	call   0x408600
  4086f7:	test   BYTE PTR [rsi+0x10],0x4
  4086fb:	je     0x40870b
  4086fd:	mov    edx,0x1
  408702:	mov    rcx,rsi
  408705:	call   QWORD PTR [rsi+0x98]
  40870b:	call   rdi
  40870d:	mov    DWORD PTR [rax],0x16
  408713:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40871a:	jmp    0x40864d
  40871f:	mov    r8,QWORD PTR [rsp+0x28]
  408724:	lea    rdx,[r8+0x1]
  408728:	mov    QWORD PTR [rsp+0x28],rdx
  40872d:	movzx  ecx,BYTE PTR [r8]
  408731:	cmp    cl,0x54
  408734:	je     0x4087a2
  408736:	jg     0x408756
  408738:	cmp    cl,0x47
  40873b:	je     0x4087a6
  40873d:	jle    0x4087ac
  40873f:	cmp    cl,0x4b
  408742:	je     0x40874d
  408744:	cmp    cl,0x4d
  408747:	jne    0x4086d0
  408749:	shl    r12d,0xa
  40874d:	shl    r12d,0xa
  408751:	jmp    0x4086b2
  408756:	cmp    cl,0x6b
  408759:	je     0x408784
  40875b:	jle    0x4086c5
  408761:	cmp    cl,0x6d
  408764:	je     0x40877d
  408766:	imul   r12d,r12d,0x3e8
  40876d:	cmp    cl,0x74
  408770:	jne    0x4086d0
  408776:	imul   r12d,r12d,0x3e8
  40877d:	imul   r12d,r12d,0x3e8
  408784:	imul   r12d,r12d,0x3e8
  40878b:	jmp    0x4086b2
  408790:	mov    rcx,QWORD PTR [rbx+0x18]
  408794:	call   0x422528
  408799:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40879d:	jmp    0x4086bf
  4087a2:	shl    r12d,0xa
  4087a6:	shl    r12d,0xa
  4087aa:	jmp    0x408749
  4087ac:	test   cl,cl
  4087ae:	jne    0x4086d0
  4087b4:	mov    QWORD PTR [rsp+0x28],r8
  4087b9:	mov    rdx,r8
  4087bc:	jmp    0x4086b2
  4087c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4087c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087d0:	push   rsi
  4087d1:	push   rbx
  4087d2:	sub    rsp,0x28
  4087d6:	test   rdx,rdx
  4087d9:	mov    rsi,rcx
  4087dc:	mov    rbx,rdx
  4087df:	je     0x408820
  4087e1:	mov    edx,0xa
  4087e6:	mov    rcx,rbx
  4087e9:	call   0x422490
  4087ee:	test   rax,rax
  4087f1:	je     0x408834
  4087f3:	sub    rax,rbx
  4087f6:	mov    r9,rsi
  4087f9:	mov    edx,0x1
  4087fe:	mov    r8,rax
  408801:	mov    rcx,rbx
  408804:	call   0x422510
  408809:	mov    rdx,rsi
  40880c:	mov    ecx,0xa
  408811:	add    rsp,0x28
  408815:	pop    rbx
  408816:	pop    rsi
  408817:	jmp    0x422540
  40881c:	nop    DWORD PTR [rax+0x0]
  408820:	test   r8,r8
  408823:	mov    rbx,r8
  408826:	jne    0x4087e1
  408828:	test   r9,r9
  40882b:	jne    0x408841
  40882d:	add    rsp,0x28
  408831:	pop    rbx
  408832:	pop    rsi
  408833:	ret    
  408834:	mov    rdx,rsi
  408837:	mov    rcx,rbx
  40883a:	call   0x422538
  40883f:	jmp    0x408809
  408841:	mov    rbx,r9
  408844:	jmp    0x4087e1
  408846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408850:	push   rsi
  408851:	push   rbx
  408852:	sub    rsp,0x28
  408856:	cmp    BYTE PTR [rcx],0x27
  408859:	mov    rbx,rcx
  40885c:	jne    0x40888b
  40885e:	mov    rsi,QWORD PTR [rip+0x93bbf]        # 0x49c424
  408865:	call   rsi
  408867:	lea    rcx,[rip+0x25be3]        # 0x42e451
  40886e:	lea    r9,[rax+0x30]
  408872:	mov    r8d,0x2
  408878:	mov    edx,0x1
  40887d:	add    rbx,0x1
  408881:	call   0x422510
  408886:	cmp    BYTE PTR [rbx],0x27
  408889:	je     0x408865
  40888b:	mov    rax,rbx
  40888e:	add    rsp,0x28
  408892:	pop    rbx
  408893:	pop    rsi
  408894:	ret    
  408895:	nop
  408896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088a0:	push   r12
  4088a2:	push   rbp
  4088a3:	push   rdi
  4088a4:	push   rsi
  4088a5:	push   rbx
  4088a6:	sub    rsp,0x20
  4088aa:	test   BYTE PTR [rdx+0x10],0x20
  4088ae:	mov    rdi,rcx
  4088b1:	mov    r12,rdx
  4088b4:	mov    rbx,r8
  4088b7:	je     0x4088c5
  4088b9:	cmp    WORD PTR [rdx+0x8],0x8000
  4088bf:	je     0x4089d0
  4088c5:	mov    rsi,QWORD PTR [r12+0x50]
  4088ca:	mov    rcx,rsi
  4088cd:	mov    ebp,0x11
  4088d2:	call   0x422468
  4088d7:	mov    rdx,rdi
  4088da:	mov    rcx,rsi
  4088dd:	sub    ebp,eax
  4088df:	call   0x422538
  4088e4:	test   rbx,rbx
  4088e7:	je     0x4089b0
  4088ed:	lea    rcx,[rip+0x244cc]        # 0x42cdc0
  4088f4:	mov    r9,rdi
  4088f7:	mov    r8d,0x3
  4088fd:	mov    edx,0x1
  408902:	lea    esi,[rbp-0x1]
  408905:	call   0x422510
  40890a:	test   ebp,ebp
  40890c:	jle    0x408925
  40890e:	xchg   ax,ax
  408910:	mov    rdx,rdi
  408913:	mov    ecx,0x20
  408918:	sub    esi,0x1
  40891b:	call   0x422540
  408920:	cmp    esi,0xffffffff
  408923:	jne    0x408910
  408925:	mov    eax,DWORD PTR [r12+0x10]
  40892a:	and    eax,0xf000
  40892f:	cmp    eax,0x5000
  408934:	jne    0x408975
  408936:	jmp    0x4089d9
  40893b:	nop    DWORD PTR [rax+rax*1+0x0]
  408940:	mov    rdx,rax
  408943:	mov    rcx,rbx
  408946:	mov    r9,rdi
  408949:	sub    rdx,rbx
  40894c:	mov    r8d,0x1
  408952:	lea    rbx,[rsi+0x1]
  408956:	call   0x422510
  40895b:	lea    rcx,[rip+0x24465]        # 0x42cdc7
  408962:	mov    r9,rdi
  408965:	mov    r8d,0x2
  40896b:	mov    edx,0x1
  408970:	call   0x422510
  408975:	mov    edx,0xa
  40897a:	mov    rcx,rbx
  40897d:	call   0x422490
  408982:	test   rax,rax
  408985:	mov    rsi,rax
  408988:	jne    0x408940
  40898a:	mov    rdx,rdi
  40898d:	mov    rcx,rbx
  408990:	call   0x422538
  408995:	mov    rdx,rdi
  408998:	mov    ecx,0xa
  40899d:	add    rsp,0x20
  4089a1:	pop    rbx
  4089a2:	pop    rsi
  4089a3:	pop    rdi
  4089a4:	pop    rbp
  4089a5:	pop    r12
  4089a7:	jmp    0x422540
  4089ac:	nop    DWORD PTR [rax+0x0]
  4089b0:	mov    eax,DWORD PTR [r12+0x10]
  4089b5:	and    eax,0xf000
  4089ba:	cmp    eax,0x5000
  4089bf:	jne    0x408995
  4089c1:	jmp    0x4088ed
  4089c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089d0:	mov    rsi,QWORD PTR [rdx+0x58]
  4089d4:	jmp    0x4088ca
  4089d9:	lea    rdx,[rip+0x243e4]        # 0x42cdc4
  4089e0:	mov    r8d,ebx
  4089e3:	mov    rcx,rdi
  4089e6:	call   0x408600
  4089eb:	jmp    0x408995
  4089ed:	nop    DWORD PTR [rax]
  4089f0:	sub    rsp,0x38
  4089f4:	mov    QWORD PTR [rsp+0x58],r9
  4089f9:	lea    r9,[rsp+0x58]
  4089fe:	mov    QWORD PTR [rsp+0x28],r9
  408a03:	call   0x41da10
  408a08:	add    rsp,0x38
  408a0c:	ret    
  408a0d:	nop    DWORD PTR [rax]
  408a10:	sub    rsp,0x38
  408a14:	mov    QWORD PTR [rsp+0x48],rdx
  408a19:	lea    rdx,[rsp+0x48]
  408a1e:	mov    QWORD PTR [rsp+0x50],r8
  408a23:	mov    QWORD PTR [rsp+0x58],r9
  408a28:	mov    QWORD PTR [rsp+0x28],rdx
  408a2d:	call   0x41d9d0
  408a32:	add    rsp,0x38
  408a36:	ret    
  408a37:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	push   rbx
  408a41:	sub    rsp,0x20
  408a45:	cmp    BYTE PTR [rip+0x60028],0x0        # 0x468a74
  408a4c:	mov    ebx,ecx
  408a4e:	jne    0x408a57
  408a50:	mov    ecx,ebx
  408a52:	call   0x422578
  408a57:	mov    edx,ecx
  408a59:	lea    rcx,[rip+0x2436a]        # 0x42cdca
  408a60:	call   0x408a10
  408a65:	jmp    0x408a50
  408a67:	nop    WORD PTR [rax+rax*1+0x0]
  408a70:	push   rsi
  408a71:	push   rbx
  408a72:	sub    rsp,0x28
  408a76:	mov    rbx,QWORD PTR [rip+0x1f6e3]        # 0x428160
  408a7d:	mov    rsi,rcx
  408a80:	call   QWORD PTR [rip+0x9399e]        # 0x49c424
  408a86:	lea    rcx,[rax+0x60]
  408a8a:	mov    r8,rsi
  408a8d:	mov    rdx,rbx
  408a90:	call   0x408600
  408a95:	mov    ecx,0x46
  408a9a:	call   0x408a40
  408a9f:	nop
  408aa0:	push   r15
  408aa2:	push   r14
  408aa4:	push   r13
  408aa6:	push   r12
  408aa8:	push   rbp
  408aa9:	push   rdi
  408aaa:	push   rsi
  408aab:	push   rbx
  408aac:	sub    rsp,0x58
  408ab0:	cmp    rcx,0xf
  408ab4:	mov    QWORD PTR [rsp+0xa0],rcx
  408abc:	mov    r13,rdx
  408abf:	mov    rbx,r8
  408ac2:	mov    ebp,r9d
  408ac5:	ja     0x408d43
  408acb:	mov    r8,QWORD PTR [r13+0x50]
  408acf:	mov    rdx,QWORD PTR [rip+0x1f97a]        # 0x428450
  408ad6:	mov    rcx,QWORD PTR [rip+0x5ff6b]        # 0x468a48
  408add:	call   0x408600
  408ae2:	mov    rdi,QWORD PTR [rbx]
  408ae5:	mov    DWORD PTR [rsp+0x38],0x0
  408aed:	cmp    BYTE PTR [rdi],0x7f
  408af0:	je     0x408d80
  408af6:	mov    rcx,rdi
  408af9:	mov    r12,rbx
  408afc:	mov    r14d,ebp
  408aff:	xor    esi,esi
  408b01:	xor    r15d,r15d
  408b04:	jmp    0x408b14
  408b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b10:	mov    rcx,QWORD PTR [r12]
  408b14:	call   0x422468
  408b19:	add    rax,0x1
  408b1d:	add    r12,0x8
  408b21:	cmp    r15,rax
  408b24:	cmovb  r15,rax
  408b28:	sub    r14d,0x1
  408b2c:	add    rsi,rax
  408b2f:	test   r14d,r14d
  408b32:	jg     0x408b10
  408b34:	cmp    r15,0x23
  408b38:	jbe    0x408bc0
  408b3e:	mov    esi,ebp
  408b40:	jmp    0x408b45
  408b42:	mov    rdi,QWORD PTR [rbx]
  408b45:	mov    rcx,QWORD PTR [rip+0x5fefc]        # 0x468a48
  408b4c:	lea    rdx,[rip+0x257dd]        # 0x42e330
  408b53:	mov    r8,rdi
  408b56:	sub    esi,0x1
  408b59:	add    rbx,0x8
  408b5d:	call   0x408600
  408b62:	test   esi,esi
  408b64:	jg     0x408b42
  408b66:	cmp    QWORD PTR [rsp+0xa0],0xf
  408b6f:	ja     0x408ccf
  408b75:	mov    eax,DWORD PTR [r13+0x10]
  408b79:	and    eax,0xf000
  408b7e:	cmp    eax,0x4000
  408b83:	je     0x408d15
  408b89:	mov    eax,DWORD PTR [rsp+0x38]
  408b8d:	mov    rdx,QWORD PTR [rip+0x1f674]        # 0x428208
  408b94:	mov    rcx,QWORD PTR [rip+0x5fead]        # 0x468a48
  408b9b:	lea    r9d,[rax+rbp*1-0x1]
  408ba0:	mov    r8d,eax
  408ba3:	call   0x408600
  408ba8:	nop
  408ba9:	add    rsp,0x58
  408bad:	pop    rbx
  408bae:	pop    rsi
  408baf:	pop    rdi
  408bb0:	pop    rbp
  408bb1:	pop    r12
  408bb3:	pop    r13
  408bb5:	pop    r14
  408bb7:	pop    r15
  408bb9:	ret    
  408bba:	nop    WORD PTR [rax+rax*1+0x0]
  408bc0:	cmp    rsi,0x4b
  408bc4:	jbe    0x408c70
  408bca:	lea    r12,[rsp+0x40]
  408bcf:	lea    r8,[rip+0x25760]        # 0x42e336
  408bd6:	mov    r9d,r15d
  408bd9:	mov    edx,0x10
  408bde:	mov    rcx,r12
  408be1:	call   0x4089f0
  408be6:	cmp    eax,0xf
  408be9:	jg     0x408dbc
  408bef:	mov    eax,0x4e
  408bf4:	xor    edx,edx
  408bf6:	mov    r9,QWORD PTR [rip+0x5fe4b]        # 0x468a48
  408bfd:	div    r15
  408c00:	lea    rcx,[rip+0x256f7]        # 0x42e2fe
  408c07:	mov    r8d,0x2
  408c0d:	mov    edx,0x1
  408c12:	add    rbx,0x8
  408c16:	mov    r15d,ebp
  408c19:	xor    esi,esi
  408c1b:	mov    rdi,rax
  408c1e:	call   0x422510
  408c23:	jmp    0x408c38
  408c25:	mov    rcx,QWORD PTR [rip+0x5fe1c]        # 0x468a48
  408c2c:	mov    rdx,r12
  408c2f:	call   0x408600
  408c34:	add    rbx,0x8
  408c38:	sub    r15d,0x1
  408c3c:	test   r15d,r15d
  408c3f:	jle    0x408da0
  408c45:	lea    eax,[rsi+0x1]
  408c48:	mov    r8,QWORD PTR [rbx-0x8]
  408c4c:	cmp    rax,rdi
  408c4f:	mov    rsi,rax
  408c52:	jne    0x408c25
  408c54:	mov    rcx,QWORD PTR [rip+0x5fded]        # 0x468a48
  408c5b:	lea    rdx,[rip+0x25765]        # 0x42e3c7
  408c62:	xor    esi,esi
  408c64:	call   0x408600
  408c69:	jmp    0x408c34
  408c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c70:	mov    rdx,QWORD PTR [rip+0x5fdd1]        # 0x468a48
  408c77:	mov    ecx,0x20
  408c7c:	mov    esi,ebp
  408c7e:	call   0x422540
  408c83:	mov    rdx,QWORD PTR [rip+0x5fdbe]        # 0x468a48
  408c8a:	mov    ecx,0x20
  408c8f:	add    rbx,0x8
  408c93:	sub    esi,0x1
  408c96:	call   0x422540
  408c9b:	mov    rcx,QWORD PTR [rbx-0x8]
  408c9f:	mov    rdx,QWORD PTR [rip+0x5fda2]        # 0x468a48
  408ca6:	call   0x422538
  408cab:	test   esi,esi
  408cad:	jg     0x408c83
  408caf:	mov    rdx,QWORD PTR [rip+0x5fd92]        # 0x468a48
  408cb6:	mov    ecx,0xa
  408cbb:	call   0x422540
  408cc0:	cmp    QWORD PTR [rsp+0xa0],0xf
  408cc9:	jbe    0x408b75
  408ccf:	mov    eax,DWORD PTR [rsp+0x38]
  408cd3:	mov    rdx,QWORD PTR [rip+0x1f52e]        # 0x428208
  408cda:	mov    rcx,QWORD PTR [rip+0x5fd67]        # 0x468a48
  408ce1:	lea    r9d,[rax+rbp*1-0x1]
  408ce6:	mov    r8d,eax
  408ce9:	call   0x408600
  408cee:	mov    rcx,QWORD PTR [rsp+0xa0]
  408cf6:	mov    edx,0x1
  408cfb:	call   QWORD PTR [rcx+0x98]
  408d01:	mov    eax,DWORD PTR [r13+0x10]
  408d05:	and    eax,0xf000
  408d0a:	cmp    eax,0x4000
  408d0f:	jne    0x408b89
  408d15:	mov    rdx,QWORD PTR [rip+0x1f634]        # 0x428350
  408d1c:	mov    rcx,QWORD PTR [rip+0x5fd25]        # 0x468a48
  408d23:	mov    r8d,ebp
  408d26:	call   0x408600
  408d2b:	mov    rdx,QWORD PTR [rip+0x5fd16]        # 0x468a48
  408d32:	mov    rcx,QWORD PTR [rip+0x1f707]        # 0x428440
  408d39:	call   0x422538
  408d3e:	jmp    0x408ba9
  408d43:	mov    rax,QWORD PTR [rcx+0x28]
  408d47:	mov    rcx,QWORD PTR [rip+0x5fcfa]        # 0x468a48
  408d4e:	mov    QWORD PTR [rsp+0x38],rax
  408d53:	mov    rax,QWORD PTR [rdx+0x50]
  408d57:	mov    r8,QWORD PTR [rsp+0x38]
  408d5c:	mov    QWORD PTR [rsp+0x20],rax
  408d61:	mov    r9,QWORD PTR [rdx+0x18]
  408d65:	mov    rdx,QWORD PTR [rip+0x5fd2c]        # 0x468a98
  408d6c:	call   0x408600
  408d71:	jmp    0x408acb
  408d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d80:	mov    rdi,QWORD PTR [rbx+0x8]
  408d84:	sub    ebp,0x1
  408d87:	add    rbx,0x8
  408d8b:	mov    DWORD PTR [rsp+0x38],0x1
  408d93:	jmp    0x408af6
  408d98:	nop    DWORD PTR [rax+rax*1+0x0]
  408da0:	mov    r8,QWORD PTR [rbx-0x8]
  408da4:	mov    rcx,QWORD PTR [rip+0x5fc9d]        # 0x468a48
  408dab:	lea    rdx,[rip+0x25611]        # 0x42e3c3
  408db2:	call   0x408600
  408db7:	jmp    0x408b66
  408dbc:	mov    ecx,0x1
  408dc1:	call   0x408a40
  408dc6:	nop
  408dc7:	nop    WORD PTR [rax+rax*1+0x0]
  408dd0:	push   r15
  408dd2:	push   r14
  408dd4:	push   r13
  408dd6:	push   r12
  408dd8:	push   rbp
  408dd9:	push   rdi
  408dda:	push   rsi
  408ddb:	push   rbx
  408ddc:	sub    rsp,0x38
  408de0:	mov    ebx,DWORD PTR [rsp+0xa0]
  408de7:	mov    rdi,rcx
  408dea:	mov    QWORD PTR [rsp+0x88],rdx
  408df2:	mov    QWORD PTR [rsp+0x90],r8
  408dfa:	mov    rbp,r9
  408dfd:	call   0x422468
  408e02:	mov    rsi,rax
  408e05:	movzx  eax,BYTE PTR [rdi]
  408e08:	cmp    al,0x7f
  408e0a:	ja     0x408e69
  408e0c:	lea    rdx,[rip+0x27fed]        # 0x430e00
  408e13:	movzx  ecx,al
  408e16:	mov    edx,DWORD PTR [rdx+rcx*4]
  408e19:	test   edx,0x30000
  408e1f:	je     0x408e60
  408e21:	lea    rdx,[rsp+0x28]
  408e26:	xor    r8d,r8d
  408e29:	mov    rcx,rdi
  408e2c:	mov    QWORD PTR [rsp+0x28],rdi
  408e31:	call   0x422430
  408e36:	cmp    DWORD PTR [rsp+0xa0],eax
  408e3d:	jbe    0x408e4f
  408e3f:	mov    rdx,QWORD PTR [rsp+0x28]
  408e44:	mov    eax,eax
  408e46:	cmp    BYTE PTR [rdx],0x0
  408e49:	je     0x408f04
  408e4f:	mov    rax,QWORD PTR [rip+0x1f44a]        # 0x4282a0
  408e56:	jmp    0x408ec9
  408e58:	nop    DWORD PTR [rax+rax*1+0x0]
  408e60:	and    dh,0x80
  408e63:	jne    0x408f15
  408e69:	xor    r14d,r14d
  408e6c:	test   rbx,rbx
  408e6f:	mov    r12,rbx
  408e72:	mov    r13,0xffffffffffffffff
  408e79:	je     0x408f27
  408e7f:	nop
  408e80:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  408e85:	mov    r8,rsi
  408e88:	mov    rdx,rdi
  408e8b:	mov    rcx,r15
  408e8e:	call   0x422460
  408e93:	test   eax,eax
  408e95:	jne    0x408eac
  408e97:	cmp    BYTE PTR [r15+rsi*1],0x0
  408e9c:	je     0x408f30
  408ea2:	cmp    r12,rbx
  408ea5:	mov    r12,r13
  408ea8:	cmove  r12,r14
  408eac:	add    r14,0x1
  408eb0:	cmp    rbx,r14
  408eb3:	jne    0x408e80
  408eb5:	cmp    rbx,r12
  408eb8:	mov    rax,r12
  408ebb:	ja     0x408f04
  408ebd:	cmp    r12,rbx
  408ec0:	je     0x408f27
  408ec2:	mov    rax,QWORD PTR [rip+0x1f2cf]        # 0x428198
  408ec9:	mov    QWORD PTR [rip+0x5fbc8],rax        # 0x468a98
  408ed0:	call   QWORD PTR [rip+0x9354e]        # 0x49c424
  408ed6:	mov    r9d,DWORD PTR [rsp+0xa0]
  408ede:	mov    rdx,QWORD PTR [rsp+0x90]
  408ee6:	add    rax,0x60
  408eea:	mov    rcx,QWORD PTR [rsp+0x88]
  408ef2:	mov    r8,rbp
  408ef5:	mov    QWORD PTR [rip+0x5fb4c],rax        # 0x468a48
  408efc:	call   0x408aa0
  408f01:	mov    rax,rbx
  408f04:	add    rsp,0x38
  408f08:	pop    rbx
  408f09:	pop    rsi
  408f0a:	pop    rdi
  408f0b:	pop    rbp
  408f0c:	pop    r12
  408f0e:	pop    r13
  408f10:	pop    r14
  408f12:	pop    r15
  408f14:	ret    
  408f15:	cmp    BYTE PTR [rdi+0x2],0x0
  408f19:	jne    0x408e69
  408f1f:	cmp    al,0x7e
  408f21:	je     0x408f35
  408f23:	cmp    al,0x2d
  408f25:	je     0x408f47
  408f27:	mov    rax,QWORD PTR [rip+0x1f322]        # 0x428250
  408f2e:	jmp    0x408ec9
  408f30:	mov    rax,r14
  408f33:	jmp    0x408f04
  408f35:	cmp    BYTE PTR [rdi+0x1],0x30
  408f39:	jne    0x408f27
  408f3b:	mov    eax,DWORD PTR [rsp+0xa0]
  408f42:	sub    eax,0x1
  408f45:	jmp    0x408f04
  408f47:	cmp    BYTE PTR [rdi+0x1],0x31
  408f4b:	jne    0x408f27
  408f4d:	jmp    0x408f3b
  408f4f:	nop
  408f50:	push   r13
  408f52:	push   r12
  408f54:	push   rbp
  408f55:	push   rdi
  408f56:	push   rsi
  408f57:	push   rbx
  408f58:	sub    rsp,0x48
  408f5c:	mov    rbx,QWORD PTR [rip+0x93511]        # 0x49c474
  408f63:	mov    r12,rdx
  408f66:	mov    r13,r8
  408f69:	mov    rsi,rcx
  408f6c:	call   rbx
  408f6e:	mov    ecx,DWORD PTR [rax]
  408f70:	call   0x422478
  408f75:	mov    rbp,rax
  408f78:	call   rbx
  408f7a:	mov    rbx,QWORD PTR [rip+0x1f23f]        # 0x4281c0
  408f81:	mov    edi,DWORD PTR [rax]
  408f83:	call   QWORD PTR [rip+0x9349b]        # 0x49c424
  408f89:	lea    rcx,[rax+0x60]
  408f8d:	mov    QWORD PTR [rsp+0x30],r13
  408f92:	mov    QWORD PTR [rsp+0x28],r12
  408f97:	mov    QWORD PTR [rsp+0x20],rbp
  408f9c:	mov    r9d,edi
  408f9f:	mov    r8,rsi
  408fa2:	mov    rdx,rbx
  408fa5:	call   0x408600
  408faa:	nop
  408fab:	add    rsp,0x48
  408faf:	pop    rbx
  408fb0:	pop    rsi
  408fb1:	pop    rdi
  408fb2:	pop    rbp
  408fb3:	pop    r12
  408fb5:	pop    r13
  408fb7:	ret    
  408fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408fc0:	sub    rsp,0x28
  408fc4:	call   0x408f50
  408fc9:	mov    ecx,0x1
  408fce:	call   0x408a40
  408fd3:	nop
  408fd4:	xchg   ax,ax
  408fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fe0:	sub    rsp,0x38
  408fe4:	mov    QWORD PTR [rsp+0x50],r8
  408fe9:	lea    r8,[rsp+0x50]
  408fee:	mov    QWORD PTR [rsp+0x58],r9
  408ff3:	mov    QWORD PTR [rsp+0x28],r8
  408ff8:	call   0x41da70
  408ffd:	add    rsp,0x38
  409001:	ret    
  409002:	nop    DWORD PTR [rax+0x0]
  409006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409010:	push   r12
  409012:	push   rbp
  409013:	push   rdi
  409014:	push   rsi
  409015:	push   rbx
  409016:	sub    rsp,0x20
  40901a:	mov    ebx,edx
  40901c:	mov    rsi,rcx
  40901f:	mov    rbp,r8
  409022:	sub    ebx,0x1
  409025:	mov    rdi,r9
  409028:	js     0x409052
  40902a:	nop    WORD PTR [rax+rax*1+0x0]
  409030:	mov    rdx,rsi
  409033:	mov    ecx,0x20
  409038:	sub    ebx,0x1
  40903b:	call   0x4224b8
  409040:	mov    rdx,rsi
  409043:	mov    ecx,0x20
  409048:	call   0x4224b8
  40904d:	cmp    ebx,0xffffffff
  409050:	jne    0x409030
  409052:	mov    edx,DWORD PTR [rdi]
  409054:	cmp    edx,0x6
  409057:	ja     0x409254
  40905d:	lea    rax,[rip+0x23d9c]        # 0x42ce00
  409064:	mov    ecx,edx
  409066:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40906a:	add    rax,rcx
  40906d:	jmp    rax
  40906f:	nop
  409070:	mov    r9d,DWORD PTR [rdi+0x10]
  409074:	mov    r8,QWORD PTR [rdi+0x8]
  409078:	lea    rdx,[rip+0x255f7]        # 0x42e676
  40907f:	mov    rcx,rsi
  409082:	add    rsp,0x20
  409086:	pop    rbx
  409087:	pop    rsi
  409088:	pop    rdi
  409089:	pop    rbp
  40908a:	pop    r12
  40908c:	jmp    0x408600
  409091:	mov    rbx,QWORD PTR [rdi+0x10]
  409095:	mov    rbp,QWORD PTR [rdi+0x8]
  409099:	test   rbx,rbx
  40909c:	je     0x4092e5
  4090a2:	mov    edi,DWORD PTR [rbx]
  4090a4:	mov    r8,rbp
  4090a7:	lea    rdx,[rip+0x25331]        # 0x42e3df
  4090ae:	test   edi,edi
  4090b0:	jle    0x409188
  4090b6:	lea    rdx,[rip+0x252f4]        # 0x42e3b1
  4090bd:	mov    rcx,rsi
  4090c0:	add    rbx,0x8
  4090c4:	call   0x408600
  4090c9:	mov    eax,DWORD PTR [rip+0x1ebb1]        # 0x427c80
  4090cf:	lea    edx,[rax+0x1]
  4090d2:	lea    eax,[rdi-0x1]
  4090d5:	mov    DWORD PTR [rip+0x1eba5],edx        # 0x427c80
  4090db:	lea    rdi,[rbx+rax*8+0x8]
  4090e0:	jmp    0x4090e8
  4090e2:	mov    edx,DWORD PTR [rip+0x1eb98]        # 0x427c80
  4090e8:	add    rbx,0x8
  4090ec:	mov    r9,QWORD PTR [rbx-0x8]
  4090f0:	xor    r8d,r8d
  4090f3:	mov    rcx,rsi
  4090f6:	call   0x409010
  4090fb:	cmp    rbx,rdi
  4090fe:	jne    0x4090e2
  409100:	mov    ebx,DWORD PTR [rip+0x1eb7a]        # 0x427c80
  409106:	lea    eax,[rbx-0x1]
  409109:	sub    ebx,0x2
  40910c:	mov    DWORD PTR [rip+0x1eb6e],eax        # 0x427c80
  409112:	js     0x409136
  409114:	mov    rdx,rsi
  409117:	mov    ecx,0x20
  40911c:	sub    ebx,0x1
  40911f:	call   0x4224b8
  409124:	mov    rdx,rsi
  409127:	mov    ecx,0x20
  40912c:	call   0x4224b8
  409131:	cmp    ebx,0xffffffff
  409134:	jne    0x409114
  409136:	mov    r8,rbp
  409139:	lea    rdx,[rip+0x23cb6]        # 0x42cdf6
  409140:	jmp    0x409188
  409142:	mov    r12,QWORD PTR [rdi+0x8]
  409146:	lea    rbp,[rdi+0x10]
  40914a:	lea    rdx,[rip+0x252a9]        # 0x42e3fa
  409151:	lea    rdi,[rip+0x246e8]        # 0x42d840
  409158:	mov    rcx,rsi
  40915b:	mov    r8,r12
  40915e:	call   0x408600
  409163:	movzx  ebx,BYTE PTR [rbp+0x0]
  409167:	cmp    ebx,0x26
  40916a:	je     0x409290
  409170:	jg     0x409264
  409176:	test   ebx,ebx
  409178:	jne    0x4092d0
  40917e:	lea    rdx,[rip+0x251a4]        # 0x42e329
  409185:	mov    r8,r12
  409188:	mov    rcx,rsi
  40918b:	add    rsp,0x20
  40918f:	pop    rbx
  409190:	pop    rsi
  409191:	pop    rdi
  409192:	pop    rbp
  409193:	pop    r12
  409195:	jmp    0x408600
  40919a:	nop    WORD PTR [rax+rax*1+0x0]
  4091a0:	test   rbp,rbp
  4091a3:	je     0x409070
  4091a9:	lea    rax,[rip+0x23c2c]        # 0x42cddc
  4091b0:	mov    r8,QWORD PTR [rdi+0x8]
  4091b4:	lea    r9,[rip+0x23c19]        # 0x42cdd4
  4091bb:	cmp    edx,0x2
  4091be:	lea    rdx,[rip+0x2530f]        # 0x42e4d4
  4091c5:	mov    rcx,rsi
  4091c8:	cmovne r9,rax
  4091cc:	mov    ebx,DWORD PTR [rbp+0x10]
  4091cf:	mov    r12,QWORD PTR [rbp+0x18]
  4091d3:	call   0x408600
  4091d8:	mov    ecx,0x3
  4091dd:	mov    rdx,rbp
  4091e0:	call   QWORD PTR [rbp+0x38]
  4091e3:	mov    rcx,QWORD PTR [rbp+0x18]
  4091e7:	test   rcx,rcx
  4091ea:	je     0x409202
  4091ec:	mov    rdx,rsi
  4091ef:	call   0x422538
  4091f4:	cmp    DWORD PTR [rdi],0x2
  4091f7:	je     0x409202
  4091f9:	mov    rcx,QWORD PTR [rbp+0x18]
  4091fd:	call   0x422528
  409202:	mov    QWORD PTR [rbp+0x18],r12
  409206:	mov    DWORD PTR [rbp+0x10],ebx
  409209:	lea    rdx,[rip+0x25119]        # 0x42e329
  409210:	mov    r8,QWORD PTR [rdi+0x8]
  409214:	jmp    0x409188
  409219:	nop    DWORD PTR [rax+0x0]
  409220:	mov    eax,DWORD PTR [rdi+0x10]
  409223:	lea    r9,[rip+0x23bc1]        # 0x42cdeb
  40922a:	mov    r8,QWORD PTR [rdi+0x8]
  40922e:	lea    rdx,[rip+0x2535c]        # 0x42e591
  409235:	mov    rcx,rsi
  409238:	test   eax,eax
  40923a:	lea    rax,[rip+0x23baf]        # 0x42cdf0
  409241:	cmove  r9,rax
  409245:	add    rsp,0x20
  409249:	pop    rbx
  40924a:	pop    rsi
  40924b:	pop    rdi
  40924c:	pop    rbp
  40924d:	pop    r12
  40924f:	jmp    0x408600
  409254:	mov    r8,QWORD PTR [rdi+0x8]
  409258:	lea    rdx,[rip+0x25180]        # 0x42e3df
  40925f:	jmp    0x409188
  409264:	cmp    ebx,0x3e
  409267:	je     0x409290
  409269:	jg     0x409283
  40926b:	cmp    ebx,0x3c
  40926e:	je     0x409290
  409270:	mov    rdx,rsi
  409273:	mov    ecx,ebx
  409275:	call   0x4224b8
  40927a:	add    rbp,0x1
  40927e:	jmp    0x409163
  409283:	lea    eax,[rbx-0x7f]
  409286:	cmp    eax,0x80
  40928b:	ja     0x409270
  40928d:	nop    DWORD PTR [rax]
  409290:	mov    rdx,rsi
  409293:	mov    ecx,0x26
  409298:	call   0x4224b8
  40929d:	cmp    ebx,0x26
  4092a0:	lea    rax,[rip+0x24559]        # 0x42d800
  4092a7:	je     0x4092d7
  4092a9:	add    rax,0x10
  4092ad:	cmp    ebx,DWORD PTR [rax]
  4092af:	je     0x4092d7
  4092b1:	cmp    rax,rdi
  4092b4:	jne    0x4092a9
  4092b6:	lea    rdx,[rip+0x2522c]        # 0x42e4e9
  4092bd:	mov    r8d,ebx
  4092c0:	mov    rcx,rsi
  4092c3:	call   0x408600
  4092c8:	jmp    0x40927a
  4092ca:	nop    WORD PTR [rax+rax*1+0x0]
  4092d0:	cmp    ebx,0x1f
  4092d3:	jg     0x409270
  4092d5:	jmp    0x409290
  4092d7:	lea    rcx,[rax+0x8]
  4092db:	mov    rdx,rsi
  4092de:	call   0x422538
  4092e3:	jmp    0x40927a
  4092e5:	add    rsp,0x20
  4092e9:	pop    rbx
  4092ea:	pop    rsi
  4092eb:	pop    rdi
  4092ec:	pop    rbp
  4092ed:	pop    r12
  4092ef:	ret    
  4092f0:	test   BYTE PTR [rdx+0x10],0x8
  4092f4:	je     0x409300
  4092f6:	repz ret 
  4092f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409300:	mov    rax,QWORD PTR [rcx+0x98]
  409307:	xor    edx,edx
  409309:	rex.W jmp rax
  40930c:	nop    DWORD PTR [rax+0x0]
  409310:	mov    rax,QWORD PTR [rip+0x1f071]        # 0x428388
  409317:	lea    r10,[rip+0x24f1b]        # 0x42e239
  40931e:	lea    r11,[rip+0x24f31]        # 0x42e256
  409325:	and    ecx,0x3
  409328:	cmp    ecx,0x2
  40932b:	mov    QWORD PTR [rdx],rax
  40932e:	mov    QWORD PTR [rip+0x5f7f3],r10        # 0x468b28
  409335:	lea    r10,[rip+0x24ef7]        # 0x42e233
  40933c:	mov    QWORD PTR [rip+0x5f82d],r11        # 0x468b70
  409343:	lea    r11,[rip+0x24ef4]        # 0x42e23e
  40934a:	lea    rdx,[rip+0x24090]        # 0x42d3e1
  409351:	mov    QWORD PTR [rip+0x5f7c0],r10        # 0x468b18
  409358:	lea    r10,[rip+0x24ee5]        # 0x42e244
  40935f:	mov    rax,QWORD PTR [rip+0x1edba]        # 0x428120
  409366:	mov    QWORD PTR [rip+0x5f7cb],r11        # 0x468b38
  40936d:	lea    r11,[rip+0x2406d]        # 0x42d3e1
  409374:	mov    QWORD PTR [rip+0x5f78d],rdx        # 0x468b08
  40937b:	mov    QWORD PTR [rip+0x5f7be],r10        # 0x468b40
  409382:	lea    r10,[rip+0x24ea4]        # 0x42e22d
  409389:	mov    rdx,QWORD PTR [rip+0x1ed88]        # 0x428118
  409390:	mov    r8,QWORD PTR [rip+0x1ed79]        # 0x428110
  409397:	mov    r9,QWORD PTR [rip+0x1ed6a]        # 0x428108
  40939e:	mov    QWORD PTR [rip+0x5f7a3],r11        # 0x468b48
  4093a5:	mov    QWORD PTR [rip+0x5f7a4],r10        # 0x468b50
  4093ac:	lea    r11,[rip+0x24f3a]        # 0x42e2ed
  4093b3:	lea    r10,[rip+0x24f40]        # 0x42e2fa
  4093ba:	mov    QWORD PTR [rip+0x5f73f],rax        # 0x468b00
  4093c1:	mov    QWORD PTR [rip+0x5f748],rdx        # 0x468b10
  4093c8:	mov    QWORD PTR [rip+0x5f751],r8        # 0x468b20
  4093cf:	mov    QWORD PTR [rip+0x5f75a],r9        # 0x468b30
  4093d6:	mov    QWORD PTR [rip+0x5f77b],r11        # 0x468b58
  4093dd:	mov    QWORD PTR [rip+0x5f77c],r10        # 0x468b60
  4093e4:	je     0x409420
  4093e6:	cmp    ecx,0x3
  4093e9:	je     0x409404
  4093eb:	cmp    ecx,0x1
  4093ee:	je     0x409404
  4093f0:	lea    rax,[rip+0x24e56]        # 0x42e24d
  4093f7:	mov    QWORD PTR [rip+0x5f76a],rax        # 0x468b68
  4093fe:	mov    eax,0x16
  409403:	ret    
  409404:	lea    rax,[rip+0x24e40]        # 0x42e24b
  40940b:	mov    QWORD PTR [rip+0x5f756],rax        # 0x468b68
  409412:	mov    eax,0x16
  409417:	ret    
  409418:	nop    DWORD PTR [rax+rax*1+0x0]
  409420:	lea    rcx,[rip+0x24e6d]        # 0x42e294
  409427:	mov    QWORD PTR [rip+0x5f73a],rcx        # 0x468b68
  40942e:	mov    BYTE PTR [r9],0x20
  409432:	mov    BYTE PTR [r8],0x20
  409436:	mov    BYTE PTR [rdx],0x20
  409439:	mov    BYTE PTR [rax],0x20
  40943c:	lea    rax,[rip+0x239d9]        # 0x42ce1c
  409443:	mov    QWORD PTR [rip+0x5f6f6],rax        # 0x468b40
  40944a:	mov    eax,0x8
  40944f:	ret    
  409450:	lea    rax,[rip+0x24e6c]        # 0x42e2c3
  409457:	and    ecx,0x12
  40945a:	mov    QWORD PTR [rip+0x5f69f],rax        # 0x468b00
  409461:	lea    rax,[rip+0x24e57]        # 0x42e2bf
  409468:	cmp    ecx,0x2
  40946b:	mov    QWORD PTR [rip+0x5f696],rax        # 0x468b08
  409472:	lea    rax,[rip+0x24e3e]        # 0x42e2b7
  409479:	mov    QWORD PTR [rip+0x5f690],rax        # 0x468b10
  409480:	lea    rax,[rip+0x24e20]        # 0x42e2a7
  409487:	mov    QWORD PTR [rip+0x5f692],rax        # 0x468b20
  40948e:	lea    rax,[rip+0x24e16]        # 0x42e2ab
  409495:	mov    QWORD PTR [rip+0x5f68c],rax        # 0x468b28
  40949c:	lea    rax,[rip+0x24e24]        # 0x42e2c7
  4094a3:	mov    QWORD PTR [rip+0x5f6c6],rax        # 0x468b70
  4094aa:	lea    rax,[rip+0x24df2]        # 0x42e2a3
  4094b1:	mov    QWORD PTR [rip+0x5f660],rax        # 0x468b18
  4094b8:	lea    rax,[rip+0x24dd8]        # 0x42e297
  4094bf:	mov    QWORD PTR [rip+0x5f66a],rax        # 0x468b30
  4094c6:	lea    rax,[rip+0x24de2]        # 0x42e2af
  4094cd:	mov    QWORD PTR [rip+0x5f664],rax        # 0x468b38
  4094d4:	lea    rax,[rip+0x24de0]        # 0x42e2bb
  4094db:	mov    QWORD PTR [rip+0x5f65e],rax        # 0x468b40
  4094e2:	lea    rax,[rip+0x24dca]        # 0x42e2b3
  4094e9:	mov    QWORD PTR [rip+0x5f658],rax        # 0x468b48
  4094f0:	lea    rax,[rip+0x24da4]        # 0x42e29b
  4094f7:	mov    QWORD PTR [rip+0x5f652],rax        # 0x468b50
  4094fe:	lea    rax,[rip+0x24def]        # 0x42e2f4
  409505:	mov    QWORD PTR [rip+0x5f64c],rax        # 0x468b58
  40950c:	lea    rax,[rip+0x24deb]        # 0x42e2fe
  409513:	mov    QWORD PTR [rip+0x5f646],rax        # 0x468b60
  40951a:	je     0x409595
  40951c:	jbe    0x409570
  40951e:	cmp    ecx,0x10
  409521:	je     0x409550
  409523:	cmp    ecx,0x12
  409526:	jne    0x409592
  409528:	mov    rax,QWORD PTR [rip+0x1ee59]        # 0x428388
  40952f:	mov    QWORD PTR [rdx],rax
  409532:	mov    rax,QWORD PTR [rip+0x1ee57]        # 0x428390
  409539:	mov    QWORD PTR [rip+0x5f628],rax        # 0x468b68
  409540:	mov    eax,0x13
  409545:	ret    
  409546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409550:	mov    rax,QWORD PTR [rip+0x1ee29]        # 0x428380
  409557:	mov    QWORD PTR [rdx],rax
  40955a:	mov    rax,QWORD PTR [rip+0x1ee2f]        # 0x428390
  409561:	mov    QWORD PTR [rip+0x5f600],rax        # 0x468b68
  409568:	mov    eax,0x13
  40956d:	ret    
  40956e:	xchg   ax,ax
  409570:	test   ecx,ecx
  409572:	jne    0x409592
  409574:	mov    rax,QWORD PTR [rip+0x1eeb5]        # 0x428430
  40957b:	mov    QWORD PTR [rdx],rax
  40957e:	lea    rax,[rip+0x24d01]        # 0x42e286
  409585:	mov    QWORD PTR [rip+0x5f5dc],rax        # 0x468b68
  40958c:	mov    eax,0x18
  409591:	ret    
  409592:	xor    eax,eax
  409594:	ret    
  409595:	mov    rax,QWORD PTR [rip+0x1ee9c]        # 0x428438
  40959c:	mov    QWORD PTR [rdx],rax
  40959f:	lea    rax,[rip+0x24ce0]        # 0x42e286
  4095a6:	mov    QWORD PTR [rip+0x5f5bb],rax        # 0x468b68
  4095ad:	mov    eax,0x18
  4095b2:	ret    
  4095b3:	nop    DWORD PTR [rax]
  4095b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095c0:	push   rsi
  4095c1:	push   rbx
  4095c2:	sub    rsp,0x38
  4095c6:	cmp    rcx,0xffffffffffffffff
  4095ca:	mov    r9,rdx
  4095cd:	je     0x409603
  4095cf:	movabs r10,0x7fffffffffffffff
  4095d9:	movsxd r8,r8d
  4095dc:	mov    rax,r10
  4095df:	cqo    
  4095e1:	idiv   r8
  4095e4:	cmp    rax,r9
  4095e7:	jl     0x409630
  4095e9:	imul   r8,r9
  4095ed:	sub    r10,r8
  4095f0:	cmp    rcx,r10
  4095f3:	jg     0x409630
  4095f5:	lea    rsi,[rcx+r8*1]
  4095f9:	mov    rax,rsi
  4095fc:	add    rsp,0x38
  409600:	pop    rbx
  409601:	pop    rsi
  409602:	ret    
  409603:	mov    QWORD PTR [rsp+0x28],rcx
  409608:	mov    rbx,QWORD PTR [rip+0x92e65]        # 0x49c474
  40960f:	call   rbx
  409611:	mov    eax,DWORD PTR [rax]
  409613:	mov    rcx,QWORD PTR [rsp+0x28]
  409618:	test   eax,eax
  40961a:	mov    rsi,rcx
  40961d:	jne    0x4095f9
  40961f:	call   rbx
  409621:	mov    DWORD PTR [rax],0x16
  409627:	jmp    0x4095f9
  409629:	nop    DWORD PTR [rax+0x0]
  409630:	call   QWORD PTR [rip+0x92e3e]        # 0x49c474
  409636:	mov    rsi,0xffffffffffffffff
  40963d:	mov    DWORD PTR [rax],0x22
  409643:	jmp    0x4095f9
  409645:	nop
  409646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409650:	push   r15
  409652:	push   r14
  409654:	push   r13
  409656:	push   r12
  409658:	push   rbp
  409659:	push   rdi
  40965a:	push   rsi
  40965b:	push   rbx
  40965c:	sub    rsp,0x48
  409660:	mov    rax,QWORD PTR [rdx]
  409663:	cmp    rcx,0xffffffffffffffff
  409667:	mov    QWORD PTR [rsp+0x38],rax
  40966c:	je     0x4096f9
  409672:	mov    r13d,r9d
  409675:	mov    r12,r8
  409678:	mov    rbp,rdx
  40967b:	mov    QWORD PTR [rsp+0x28],rcx
  409680:	mov    r15,QWORD PTR [rip+0x92ded]        # 0x49c474
  409687:	call   r15
  40968a:	mov    rcx,QWORD PTR [rsp+0x38]
  40968f:	lea    rdx,[rsp+0x38]
  409694:	mov    r8d,0xa
  40969a:	mov    DWORD PTR [rax],0x0
  4096a0:	call   0x422430
  4096a5:	mov    r14d,eax
  4096a8:	call   r15
  4096ab:	mov    eax,DWORD PTR [rax]
  4096ad:	test   eax,eax
  4096af:	jne    0x4096f9
  4096b1:	mov    rdi,QWORD PTR [rsp+0x38]
  4096b6:	mov    rsi,QWORD PTR [rip+0x92eff]        # 0x49c5bc
  4096bd:	jmp    0x4096c5
  4096bf:	nop
  4096c0:	mov    QWORD PTR [rsp+0x38],rdi
  4096c5:	movzx  ecx,BYTE PTR [rdi]
  4096c8:	mov    rbx,rdi
  4096cb:	add    rdi,0x1
  4096cf:	call   rsi
  4096d1:	test   eax,eax
  4096d3:	jne    0x4096c0
  4096d5:	cmp    r12,rbx
  4096d8:	jne    0x4096f0
  4096da:	mov    rcx,QWORD PTR [rsp+0x28]
  4096df:	mov    QWORD PTR [rbp+0x0],r12
  4096e3:	mov    r8d,r13d
  4096e6:	mov    rdx,r14
  4096e9:	call   0x4095c0
  4096ee:	jmp    0x409700
  4096f0:	call   r15
  4096f3:	mov    DWORD PTR [rax],0x16
  4096f9:	mov    rax,0xffffffffffffffff
  409700:	add    rsp,0x48
  409704:	pop    rbx
  409705:	pop    rsi
  409706:	pop    rdi
  409707:	pop    rbp
  409708:	pop    r12
  40970a:	pop    r13
  40970c:	pop    r14
  40970e:	pop    r15
  409710:	ret    
  409711:	nop    DWORD PTR [rax+rax*1+0x0]
  409716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409720:	push   rbp
  409721:	push   rdi
  409722:	push   rsi
  409723:	push   rbx
  409724:	sub    rsp,0x38
  409728:	mov    edx,0x3a
  40972d:	mov    rbx,rcx
  409730:	call   0x422490
  409735:	test   rax,rax
  409738:	je     0x4097d0
  40973e:	lea    rsi,[rsp+0x20]
  409743:	mov    r8,rax
  409746:	xor    ecx,ecx
  409748:	mov    r9d,0xe10
  40974e:	mov    QWORD PTR [rsp+0x20],rbx
  409753:	mov    rdx,rsi
  409756:	call   0x409650
  40975b:	mov    rbx,rax
  40975e:	mov    rax,QWORD PTR [rsp+0x20]
  409763:	mov    edx,0x3a
  409768:	lea    rcx,[rax+0x1]
  40976c:	mov    QWORD PTR [rsp+0x20],rcx
  409771:	call   0x422490
  409776:	test   rax,rax
  409779:	mov    r8,rax
  40977c:	je     0x4098bf
  409782:	mov    r9d,0x3c
  409788:	mov    rdx,rsi
  40978b:	mov    rcx,rbx
  40978e:	call   0x409650
  409793:	mov    rdi,rax
  409796:	mov    rax,QWORD PTR [rsp+0x20]
  40979b:	lea    rbx,[rax+0x1]
  40979f:	mov    rcx,rbx
  4097a2:	mov    QWORD PTR [rsp+0x20],rbx
  4097a7:	call   0x422468
  4097ac:	lea    r8,[rbx+rax*1]
  4097b0:	mov    r9d,0x1
  4097b6:	mov    rdx,rsi
  4097b9:	mov    rcx,rdi
  4097bc:	call   0x409650
  4097c1:	mov    rbp,rax
  4097c4:	mov    rax,rbp
  4097c7:	add    rsp,0x38
  4097cb:	pop    rbx
  4097cc:	pop    rsi
  4097cd:	pop    rdi
  4097ce:	pop    rbp
  4097cf:	ret    
  4097d0:	lea    rdx,[rip+0x2364c]        # 0x42ce23
  4097d7:	mov    rcx,rbx
  4097da:	call   0x422450
  4097df:	test   rax,rax
  4097e2:	je     0x4098e0
  4097e8:	mov    edx,0x48
  4097ed:	mov    rcx,rbx
  4097f0:	mov    QWORD PTR [rsp+0x28],rbx
  4097f5:	xor    ebp,ebp
  4097f7:	call   0x422490
  4097fc:	test   rax,rax
  4097ff:	je     0x409827
  409801:	lea    rdx,[rsp+0x28]
  409806:	mov    r9d,0xe10
  40980c:	mov    r8,rax
  40980f:	xor    ecx,ecx
  409811:	call   0x409650
  409816:	mov    rbp,rax
  409819:	mov    rax,QWORD PTR [rsp+0x28]
  40981e:	lea    rbx,[rax+0x1]
  409822:	mov    QWORD PTR [rsp+0x28],rbx
  409827:	mov    edx,0x4d
  40982c:	mov    rcx,rbx
  40982f:	call   0x422490
  409834:	test   rax,rax
  409837:	je     0x409860
  409839:	lea    rdx,[rsp+0x28]
  40983e:	mov    rcx,rbp
  409841:	mov    r9d,0x3c
  409847:	mov    r8,rax
  40984a:	call   0x409650
  40984f:	mov    rbp,rax
  409852:	mov    rax,QWORD PTR [rsp+0x28]
  409857:	lea    rbx,[rax+0x1]
  40985b:	mov    QWORD PTR [rsp+0x28],rbx
  409860:	mov    edx,0x53
  409865:	mov    rcx,rbx
  409868:	call   0x422490
  40986d:	test   rax,rax
  409870:	je     0x409899
  409872:	lea    rdx,[rsp+0x28]
  409877:	mov    rcx,rbp
  40987a:	mov    r9d,0x1
  409880:	mov    r8,rax
  409883:	call   0x409650
  409888:	mov    rbp,rax
  40988b:	mov    rax,QWORD PTR [rsp+0x28]
  409890:	lea    rbx,[rax+0x1]
  409894:	mov    QWORD PTR [rsp+0x28],rbx
  409899:	mov    rdi,QWORD PTR [rip+0x92d1c]        # 0x49c5bc
  4098a0:	jmp    0x4098a7
  4098a2:	mov    QWORD PTR [rsp+0x28],rbx
  4098a7:	movzx  ecx,BYTE PTR [rbx]
  4098aa:	add    rbx,0x1
  4098ae:	mov    esi,ecx
  4098b0:	call   rdi
  4098b2:	test   eax,eax
  4098b4:	jne    0x4098a2
  4098b6:	test   sil,sil
  4098b9:	je     0x4097c4
  4098bf:	call   QWORD PTR [rip+0x92baf]        # 0x49c474
  4098c5:	mov    rbp,0xffffffffffffffff
  4098cc:	mov    DWORD PTR [rax],0x16
  4098d2:	jmp    0x4097c4
  4098d7:	nop    WORD PTR [rax+rax*1+0x0]
  4098e0:	mov    rcx,rbx
  4098e3:	call   0x422468
  4098e8:	cmp    rax,0x6
  4098ec:	jne    0x4098bf
  4098ee:	movzx  eax,WORD PTR [rbx]
  4098f1:	lea    rbp,[rsp+0x22]
  4098f6:	lea    rdi,[rsp+0x28]
  4098fb:	lea    rsi,[rsp+0x20]
  409900:	mov    r9d,0xe10
  409906:	xor    ecx,ecx
  409908:	mov    r8,rbp
  40990b:	mov    rdx,rdi
  40990e:	mov    BYTE PTR [rsp+0x22],0x0
  409913:	mov    QWORD PTR [rsp+0x28],rsi
  409918:	mov    WORD PTR [rsp+0x20],ax
  40991d:	call   0x409650
  409922:	movzx  edx,WORD PTR [rbx+0x2]
  409926:	mov    r8,rbp
  409929:	mov    r9d,0x3c
  40992f:	mov    rcx,rax
  409932:	mov    BYTE PTR [rsp+0x22],0x0
  409937:	mov    QWORD PTR [rsp+0x28],rsi
  40993c:	mov    WORD PTR [rsp+0x20],dx
  409941:	mov    rdx,rdi
  409944:	call   0x409650
  409949:	movzx  edx,WORD PTR [rbx+0x4]
  40994d:	mov    r8,rbp
  409950:	mov    r9d,0x1
  409956:	mov    rcx,rax
  409959:	mov    BYTE PTR [rsp+0x22],0x0
  40995e:	mov    QWORD PTR [rsp+0x28],rsi
  409963:	mov    WORD PTR [rsp+0x20],dx
  409968:	mov    rdx,rdi
  40996b:	call   0x409650
  409970:	mov    rbp,rax
  409973:	jmp    0x4097c4
  409978:	nop    DWORD PTR [rax+rax*1+0x0]
  409980:	push   r13
  409982:	push   r12
  409984:	push   rbp
  409985:	push   rdi
  409986:	push   rsi
  409987:	push   rbx
  409988:	sub    rsp,0x38
  40998c:	mov    r12,QWORD PTR [rip+0x1e98d]        # 0x428320
  409993:	mov    r13,QWORD PTR [rcx+0x28]
  409997:	lea    rsi,[rip+0x26271]        # 0x42fc0f
  40999e:	cmp    WORD PTR [rdx+0x8],0x8000
  4099a4:	mov    rdi,rdx
  4099a7:	mov    rbx,rcx
  4099aa:	cmovne rsi,QWORD PTR [rip+0x1e836]        # 0x4281e8
  4099b2:	mov    rbp,QWORD PTR [rip+0x92a6b]        # 0x49c424
  4099b9:	call   rbp
  4099bb:	lea    rcx,[rax+0x60]
  4099bf:	mov    rdx,r12
  4099c2:	mov    r8,r13
  4099c5:	call   0x408600
  4099ca:	movzx  r12d,WORD PTR [rdi+0xc]
  4099cf:	cmp    r12w,0x1
  4099d4:	jbe    0x409a20
  4099d6:	mov    r13,QWORD PTR [rdi+0x50]
  4099da:	mov    rdi,QWORD PTR [rip+0x1e7d7]        # 0x4281b8
  4099e1:	call   rbp
  4099e3:	lea    rcx,[rax+0x60]
  4099e7:	mov    QWORD PTR [rsp+0x20],rsi
  4099ec:	movzx  r8d,r12w
  4099f0:	mov    r9,r13
  4099f3:	mov    rdx,rdi
  4099f6:	call   0x408600
  4099fb:	mov    edx,0x1
  409a00:	mov    rcx,rbx
  409a03:	call   QWORD PTR [rbx+0x98]
  409a09:	add    rsp,0x38
  409a0d:	pop    rbx
  409a0e:	pop    rsi
  409a0f:	pop    rdi
  409a10:	pop    rbp
  409a11:	pop    r12
  409a13:	pop    r13
  409a15:	ret    
  409a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a20:	mov    r12,QWORD PTR [rdi+0x50]
  409a24:	mov    rdi,QWORD PTR [rip+0x1e885]        # 0x4282b0
  409a2b:	call   rbp
  409a2d:	lea    rcx,[rax+0x60]
  409a31:	mov    r9,rsi
  409a34:	mov    r8,r12
  409a37:	mov    rdx,rdi
  409a3a:	call   0x408600
  409a3f:	jmp    0x4099fb
  409a41:	nop    DWORD PTR [rax+rax*1+0x0]
  409a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a50:	push   rbp
  409a51:	push   rdi
  409a52:	push   rsi
  409a53:	push   rbx
  409a54:	sub    rsp,0x48
  409a58:	mov    rbx,QWORD PTR [rdx]
  409a5b:	mov    rsi,rcx
  409a5e:	mov    r8d,DWORD PTR [rbx+0x10]
  409a62:	mov    rdi,QWORD PTR [rbx+0x38]
  409a66:	test   r8b,0x40
  409a6a:	jne    0x409b70
  409a70:	mov    rcx,QWORD PTR [rdx+0x8]
  409a74:	mov    QWORD PTR [rbx+0x18],rcx
  409a78:	test   BYTE PTR [rsi+0x12],0x8
  409a7c:	je     0x409a90
  409a7e:	test   r8d,0x100
  409a85:	mov    ebp,0x1
  409a8a:	jne    0x409b30
  409a90:	movzx  eax,WORD PTR [rbx+0x8]
  409a94:	cmp    ax,0x8000
  409a98:	je     0x409b90
  409a9e:	lea    r10,[rax+rax*2]
  409aa2:	mov    r9,QWORD PTR [rsi+0x78]
  409aa6:	and    r8d,0x4
  409aaa:	lea    rax,[rax+r10*4]
  409aae:	lea    r10,[r9+rax*8]
  409ab2:	jne    0x409b40
  409ab8:	mov    eax,0xffff8000
  409abd:	mov    WORD PTR [r10+0x4],ax
  409ac2:	movzx  eax,WORD PTR [rbx]
  409ac5:	cmp    ax,0x8000
  409ac9:	je     0x409b4a
  409acb:	movzx  r8d,WORD PTR [rbx+0x2]
  409ad0:	mov    WORD PTR [r10+0x4],ax
  409ad5:	mov    eax,DWORD PTR [rdx+0x10]
  409ad8:	or     eax,0x10
  409adb:	mov    WORD PTR [r10+0x6],r8w
  409ae0:	mov    DWORD PTR [rdx+0x10],eax
  409ae3:	mov    r8d,DWORD PTR [r10+0x10]
  409ae7:	mov    QWORD PTR [r10+0x18],rcx
  409aeb:	and    eax,0xf00000ff
  409af0:	and    r8d,0xfffff00
  409af7:	or     r8d,eax
  409afa:	mov    DWORD PTR [r10+0x10],r8d
  409afe:	and    r8d,0x4
  409b02:	je     0x409b50
  409b04:	movzx  eax,WORD PTR [r10+0xe]
  409b09:	add    eax,0x1
  409b0c:	cmp    ax,WORD PTR [r10+0xc]
  409b11:	mov    WORD PTR [r10+0xe],ax
  409b16:	jbe    0x409b50
  409b18:	test   BYTE PTR [rsi+0x10],0x4
  409b1c:	mov    ebp,0xffffffff
  409b21:	je     0x409b30
  409b23:	mov    rdx,r10
  409b26:	mov    rcx,rsi
  409b29:	call   0x409980
  409b2e:	xchg   ax,ax
  409b30:	mov    eax,ebp
  409b32:	add    rsp,0x48
  409b36:	pop    rbx
  409b37:	pop    rsi
  409b38:	pop    rdi
  409b39:	pop    rbp
  409b3a:	ret    
  409b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b40:	movzx  eax,WORD PTR [r10+0x4]
  409b45:	cmp    ax,WORD PTR [rbx]
  409b48:	jne    0x409bb0
  409b4a:	mov    eax,DWORD PTR [rdx+0x10]
  409b4d:	jmp    0x409ae3
  409b4f:	nop
  409b50:	xor    ebp,ebp
  409b52:	test   rdi,rdi
  409b55:	je     0x409b30
  409b57:	mov    rdx,r10
  409b5a:	mov    rcx,rsi
  409b5d:	call   rdi
  409b5f:	mov    eax,ebp
  409b61:	add    rsp,0x48
  409b65:	pop    rbx
  409b66:	pop    rsi
  409b67:	pop    rdi
  409b68:	pop    rbp
  409b69:	ret    
  409b6a:	nop    WORD PTR [rax+rax*1+0x0]
  409b70:	mov    rcx,QWORD PTR [rbx+0x18]
  409b74:	mov    QWORD PTR [rsp+0x38],rdx
  409b79:	call   0x422528
  409b7e:	mov    r8d,DWORD PTR [rbx+0x10]
  409b82:	mov    rdx,QWORD PTR [rsp+0x38]
  409b87:	jmp    0x409a70
  409b8c:	nop    DWORD PTR [rax+0x0]
  409b90:	movzx  eax,WORD PTR [rbx+0x2]
  409b94:	mov    r10,rbx
  409b97:	mov    WORD PTR [rbx+0x6],ax
  409b9b:	movzx  eax,WORD PTR [rbx]
  409b9e:	mov    WORD PTR [rbx+0x4],ax
  409ba2:	mov    eax,DWORD PTR [rdx+0x10]
  409ba5:	jmp    0x409aeb
  409baa:	nop    WORD PTR [rax+rax*1+0x0]
  409bb0:	lea    rdx,[rax+rax*2]
  409bb4:	mov    rdi,QWORD PTR [rbx+0x50]
  409bb8:	mov    rsi,QWORD PTR [r10+0x50]
  409bbc:	mov    rbx,QWORD PTR [rip+0x1e665]        # 0x428228
  409bc3:	lea    rax,[rax+rdx*4]
  409bc7:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  409bcc:	call   QWORD PTR [rip+0x92852]        # 0x49c424
  409bd2:	lea    rcx,[rax+0x60]
  409bd6:	mov    r9,rdi
  409bd9:	mov    r8,rsi
  409bdc:	mov    QWORD PTR [rsp+0x20],rbp
  409be1:	mov    rdx,rbx
  409be4:	mov    ebp,0xffffffff
  409be9:	call   0x408600
  409bee:	jmp    0x409b30
  409bf3:	nop    DWORD PTR [rax]
  409bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c00:	push   r13
  409c02:	push   r12
  409c04:	push   rbp
  409c05:	push   rdi
  409c06:	push   rsi
  409c07:	push   rbx
  409c08:	sub    rsp,0x38
  409c0c:	mov    rsi,rcx
  409c0f:	mov    rcx,QWORD PTR [rcx+0x78]
  409c13:	mov    eax,DWORD PTR [rsi+0xb0]
  409c19:	mov    rbx,rcx
  409c1c:	movzx  r10d,WORD PTR [rbx+0x2]
  409c21:	cmp    r10d,edx
  409c24:	je     0x409c70
  409c26:	sub    eax,0x1
  409c29:	add    rbx,0x68
  409c2d:	test   eax,eax
  409c2f:	jg     0x409c1c
  409c31:	movzx  eax,dl
  409c34:	cmp    eax,0x7f
  409c37:	ja     0x409c50
  409c39:	lea    r10,[rip+0x271c0]        # 0x430e00
  409c40:	test   DWORD PTR [r10+rax*4],0x30000
  409c48:	jne    0x409d09
  409c4e:	xchg   ax,ax
  409c50:	test   BYTE PTR [rsi+0x10],0x4
  409c54:	jne    0x409d3c
  409c5a:	mov    eax,0xffffffff
  409c5f:	add    rsp,0x38
  409c63:	pop    rbx
  409c64:	pop    rsi
  409c65:	pop    rdi
  409c66:	pop    rbp
  409c67:	pop    r12
  409c69:	pop    r13
  409c6b:	ret    
  409c6c:	nop    DWORD PTR [rax+0x0]
  409c70:	mov    eax,DWORD PTR [rbx+0x10]
  409c73:	test   eax,0x280000
  409c78:	je     0x409cf0
  409c7a:	cmp    eax,0x80100
  409c7f:	jne    0x409c50
  409c81:	mov    r13,QWORD PTR [rbx+0x50]
  409c85:	test   r13,r13
  409c88:	je     0x409c50
  409c8a:	test   BYTE PTR [rsi+0x10],0x4
  409c8e:	je     0x409c5a
  409c90:	mov    r12,QWORD PTR [rsi+0x20]
  409c94:	mov    rbp,QWORD PTR [rip+0x1e545]        # 0x4281e0
  409c9b:	mov    rdi,QWORD PTR [rip+0x92782]        # 0x49c424
  409ca2:	call   rdi
  409ca4:	lea    rcx,[rax+0x60]
  409ca8:	mov    r9,r13
  409cab:	mov    r8,r12
  409cae:	mov    rdx,rbp
  409cb1:	call   0x408600
  409cb6:	mov    rbx,QWORD PTR [rbx+0x40]
  409cba:	test   rbx,rbx
  409cbd:	je     0x409cd4
  409cbf:	call   rdi
  409cc1:	lea    rdx,[rip+0x24791]        # 0x42e459
  409cc8:	lea    rcx,[rax+0x60]
  409ccc:	mov    r8,rbx
  409ccf:	call   0x408600
  409cd4:	call   rdi
  409cd6:	lea    rdx,[rax+0x60]
  409cda:	mov    ecx,0xa
  409cdf:	call   0x422540
  409ce4:	jmp    0x409d67
  409ce9:	nop    DWORD PTR [rax+0x0]
  409cf0:	xor    eax,eax
  409cf2:	mov    QWORD PTR [r8],rbx
  409cf5:	mov    DWORD PTR [r9],0x1
  409cfc:	add    rsp,0x38
  409d00:	pop    rbx
  409d01:	pop    rsi
  409d02:	pop    rdi
  409d03:	pop    rbp
  409d04:	pop    r12
  409d06:	pop    r13
  409d08:	ret    
  409d09:	movzx  eax,WORD PTR [rsi+0xac]
  409d10:	cmp    ax,0x8000
  409d14:	je     0x409c50
  409d1a:	lea    rdx,[rax+rax*2]
  409d1e:	lea    rax,[rax+rdx*4]
  409d22:	lea    rax,[rcx+rax*8]
  409d26:	mov    QWORD PTR [r8],rax
  409d29:	xor    eax,eax
  409d2b:	sub    QWORD PTR [rsi+0x18],0x1
  409d30:	mov    DWORD PTR [r9],0x1
  409d37:	jmp    0x409c5f
  409d3c:	mov    DWORD PTR [rsp+0x2c],edx
  409d40:	mov    rdi,QWORD PTR [rsi+0x20]
  409d44:	mov    rbx,QWORD PTR [rip+0x1e4a5]        # 0x4281f0
  409d4b:	call   QWORD PTR [rip+0x926d3]        # 0x49c424
  409d51:	mov    edx,DWORD PTR [rsp+0x2c]
  409d55:	lea    rcx,[rax+0x60]
  409d59:	mov    r8,rdi
  409d5c:	mov    r9d,edx
  409d5f:	mov    rdx,rbx
  409d62:	call   0x408600
  409d67:	mov    rcx,rsi
  409d6a:	mov    edx,0x1
  409d6f:	call   QWORD PTR [rsi+0x98]
  409d75:	mov    ecx,0x1
  409d7a:	call   0x422630
  409d7f:	nop
  409d80:	push   rdi
  409d81:	push   rsi
  409d82:	push   rbx
  409d83:	sub    rsp,0x20
  409d87:	test   rcx,rcx
  409d8a:	je     0x409d91
  409d8c:	cmp    BYTE PTR [rcx],0x0
  409d8f:	jne    0x409dc0
  409d91:	call   QWORD PTR [rip+0x9268d]        # 0x49c424
  409d97:	lea    rcx,[rip+0x24577]        # 0x42e315
  409d9e:	lea    r9,[rax+0x30]
  409da2:	mov    r8d,0x2
  409da8:	mov    edx,0x1
  409dad:	add    rsp,0x20
  409db1:	pop    rbx
  409db2:	pop    rsi
  409db3:	pop    rdi
  409db4:	jmp    0x422510
  409db9:	nop    DWORD PTR [rax+0x0]
  409dc0:	call   0x408850
  409dc5:	cmp    BYTE PTR [rax],0x0
  409dc8:	mov    rbx,rax
  409dcb:	jne    0x409dd5
  409dcd:	add    rsp,0x20
  409dd1:	pop    rbx
  409dd2:	pop    rsi
  409dd3:	pop    rdi
  409dd4:	ret    
  409dd5:	mov    rdi,QWORD PTR [rip+0x92648]        # 0x49c424
  409ddc:	jmp    0x409e1a
  409dde:	xchg   ax,ax
  409de0:	call   rdi
  409de2:	mov    rdx,rsi
  409de5:	lea    r9,[rax+0x30]
  409de9:	mov    r8d,0x1
  409def:	sub    rdx,rbx
  409df2:	mov    rcx,rbx
  409df5:	call   0x422510
  409dfa:	call   rdi
  409dfc:	lea    rdx,[rax+0x30]
  409e00:	mov    ecx,0x27
  409e05:	call   0x422540
  409e0a:	mov    rcx,rsi
  409e0d:	call   0x408850
  409e12:	cmp    BYTE PTR [rax],0x0
  409e15:	mov    rbx,rax
  409e18:	je     0x409dcd
  409e1a:	call   rdi
  409e1c:	lea    rdx,[rax+0x30]
  409e20:	mov    ecx,0x27
  409e25:	call   0x422540
  409e2a:	mov    edx,0x27
  409e2f:	mov    rcx,rbx
  409e32:	call   0x422490
  409e37:	test   rax,rax
  409e3a:	mov    rsi,rax
  409e3d:	jne    0x409de0
  409e3f:	call   rdi
  409e41:	lea    rdx,[rax+0x30]
  409e45:	mov    rcx,rbx
  409e48:	call   0x422538
  409e4d:	call   rdi
  409e4f:	lea    rdx,[rax+0x30]
  409e53:	mov    ecx,0x27
  409e58:	add    rsp,0x20
  409e5c:	pop    rbx
  409e5d:	pop    rsi
  409e5e:	pop    rdi
  409e5f:	jmp    0x422540
  409e64:	xchg   ax,ax
  409e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e70:	push   rsi
  409e71:	push   rbx
  409e72:	sub    rsp,0x28
  409e76:	mov    eax,DWORD PTR [rcx]
  409e78:	test   al,0x2
  409e7a:	je     0x409ef1
  409e7c:	mov    rbx,rcx
  409e7f:	movzx  ecx,WORD PTR [rdx]
  409e82:	mov    rsi,r8
  409e85:	movzx  edx,cl
  409e88:	cmp    dl,0x7f
  409e8b:	ja     0x409ed0
  409e8d:	lea    r9,[rip+0x26f6c]        # 0x430e00
  409e94:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  409e9a:	je     0x409ed0
  409e9c:	movzx  r8d,cx
  409ea0:	mov    rcx,QWORD PTR [rip+0x5eba1]        # 0x468a48
  409ea7:	lea    rdx,[rip+0x22f7c]        # 0x42ce2a
  409eae:	call   0x408600
  409eb3:	mov    eax,DWORD PTR [rbx]
  409eb5:	and    eax,0x1001
  409eba:	cmp    eax,0x1001
  409ebf:	je     0x409f23
  409ec1:	add    rsp,0x28
  409ec5:	pop    rbx
  409ec6:	pop    rsi
  409ec7:	ret    
  409ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ed0:	and    eax,0x1001
  409ed5:	cmp    eax,0x1001
  409eda:	je     0x409f10
  409edc:	mov    rdx,QWORD PTR [rip+0x5eb65]        # 0x468a48
  409ee3:	mov    rcx,QWORD PTR [rsi]
  409ee6:	add    rsp,0x28
  409eea:	pop    rbx
  409eeb:	pop    rsi
  409eec:	jmp    0x422538
  409ef1:	mov    rdx,QWORD PTR [rip+0x5eb50]        # 0x468a48
  409ef8:	mov    rcx,QWORD PTR [r9]
  409efb:	add    rsp,0x28
  409eff:	pop    rbx
  409f00:	pop    rsi
  409f01:	jmp    0x422538
  409f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f10:	mov    rdx,QWORD PTR [rip+0x5eb31]        # 0x468a48
  409f17:	mov    ecx,0x20
  409f1c:	call   0x422540
  409f21:	jmp    0x409edc
  409f23:	mov    r9,QWORD PTR [rip+0x5eb1e]        # 0x468a48
  409f2a:	lea    rcx,[rip+0x22ef6]        # 0x42ce27
  409f31:	mov    r8d,0x2
  409f37:	mov    edx,0x1
  409f3c:	add    rsp,0x28
  409f40:	pop    rbx
  409f41:	pop    rsi
  409f42:	jmp    0x422510
  409f47:	nop    WORD PTR [rax+rax*1+0x0]
  409f50:	push   rdi
  409f51:	push   rsi
  409f52:	push   rbx
  409f53:	sub    rsp,0x20
  409f57:	lea    rax,[rip+0x26de2]        # 0x430d40
  409f5e:	mov    esi,ecx
  409f60:	mov    ecx,0x100
  409f65:	mov    ebx,DWORD PTR [rax+rsi*4]
  409f68:	call   0x4224e8
  409f6d:	test   rax,rax
  409f70:	mov    r8,rax
  409f73:	je     0x409fbb
  409f75:	mov    ecx,0x20
  409f7a:	xor    eax,eax
  409f7c:	mov    rdi,r8
  409f7f:	rep stos QWORD PTR es:[rdi],rax
  409f82:	lea    rcx,[rip+0x26e7b]        # 0x430e04
  409f89:	xor    edx,edx
  409f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f90:	test   DWORD PTR [rcx+rdx*4],ebx
  409f93:	je     0x409f9b
  409f95:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  409f9b:	add    rdx,0x1
  409f9f:	cmp    rdx,0x7f
  409fa3:	jne    0x409f90
  409fa5:	lea    rax,[rip+0x5ebd4]        # 0x468b80
  409fac:	mov    QWORD PTR [rax+rsi*8],r8
  409fb0:	mov    rax,r8
  409fb3:	add    rsp,0x20
  409fb7:	pop    rbx
  409fb8:	pop    rsi
  409fb9:	pop    rdi
  409fba:	ret    
  409fbb:	call   QWORD PTR [rip+0x92463]        # 0x49c424
  409fc1:	lea    rcx,[rip+0x22e70]        # 0x42ce38
  409fc8:	lea    r9,[rax+0x60]
  409fcc:	mov    r8d,0x23
  409fd2:	mov    edx,0x1
  409fd7:	call   0x422510
  409fdc:	mov    ecx,0x1
  409fe1:	call   0x422578
  409fe6:	nop
  409fe7:	nop    WORD PTR [rax+rax*1+0x0]
  409ff0:	push   rdi
  409ff1:	push   rsi
  409ff2:	push   rbx
  409ff3:	sub    rsp,0x20
  409ff7:	mov    r8,QWORD PTR [rdx]
  409ffa:	mov    eax,DWORD PTR [r8+0x10]
  409ffe:	and    eax,0xfffff00
  40a003:	or     eax,DWORD PTR [rdx+0x10]
  40a006:	test   al,0x20
  40a008:	mov    DWORD PTR [rdx+0x10],eax
  40a00b:	jne    0x40a070
  40a00d:	test   ah,0xf0
  40a010:	je     0x40a070
  40a012:	test   eax,0x10000
  40a017:	mov    eax,DWORD PTR [rdx+0x14]
  40a01a:	jne    0x40a0c4
  40a020:	cmp    eax,0x1
  40a023:	je     0x40a0a2
  40a025:	cmp    eax,0x2
  40a028:	jne    0x40a035
  40a02a:	cmp    QWORD PTR [rdx+0x8],0x0
  40a02f:	je     0x40a184
  40a035:	mov    eax,DWORD PTR [rcx+0x14]
  40a038:	cmp    eax,DWORD PTR [rcx+0x4]
  40a03b:	jbe    0x40a081
  40a03d:	mov    rdi,QWORD PTR [r8+0x50]
  40a041:	mov    rsi,QWORD PTR [rcx+0x20]
  40a045:	mov    rbx,QWORD PTR [rip+0x1e1d4]        # 0x428220
  40a04c:	nop    DWORD PTR [rax+0x0]
  40a050:	call   QWORD PTR [rip+0x923ce]        # 0x49c424
  40a056:	lea    rcx,[rax+0x60]
  40a05a:	mov    r9,rdi
  40a05d:	mov    r8,rsi
  40a060:	mov    rdx,rbx
  40a063:	call   0x408600
  40a068:	mov    eax,0xffffffff
  40a06d:	jmp    0x40a08b
  40a06f:	nop
  40a070:	cmp    DWORD PTR [rdx+0x14],0x1
  40a074:	je     0x40a093
  40a076:	cmp    QWORD PTR [rdx+0x8],0x0
  40a07b:	jne    0x40a170
  40a081:	mov    QWORD PTR [rcx+0x18],0x0
  40a089:	xor    eax,eax
  40a08b:	add    rsp,0x20
  40a08f:	pop    rbx
  40a090:	pop    rsi
  40a091:	pop    rdi
  40a092:	ret    
  40a093:	add    QWORD PTR [rcx+0x18],0x1
  40a098:	xor    eax,eax
  40a09a:	add    rsp,0x20
  40a09e:	pop    rbx
  40a09f:	pop    rsi
  40a0a0:	pop    rdi
  40a0a1:	ret    
  40a0a2:	mov    rax,QWORD PTR [rcx+0x18]
  40a0a6:	lea    r9,[rax+0x1]
  40a0aa:	mov    QWORD PTR [rcx+0x18],r9
  40a0ae:	cmp    BYTE PTR [rax+0x1],0x0
  40a0b2:	je     0x40a150
  40a0b8:	mov    eax,DWORD PTR [rcx+0x14]
  40a0bb:	mov    QWORD PTR [rdx+0x8],r9
  40a0bf:	jmp    0x40a038
  40a0c4:	cmp    eax,0x1
  40a0c7:	je     0x40a100
  40a0c9:	cmp    eax,0x2
  40a0cc:	jne    0x40a140
  40a0ce:	cmp    QWORD PTR [rdx+0x8],0x0
  40a0d3:	jne    0x40a081
  40a0d5:	test   BYTE PTR [rcx+0x10],0x3
  40a0d9:	je     0x40a081
  40a0db:	mov    r9d,DWORD PTR [rcx+0x14]
  40a0df:	mov    r8,QWORD PTR [rcx+0x8]
  40a0e3:	mov    r8,QWORD PTR [r8+r9*8]
  40a0e7:	mov    rax,r9
  40a0ea:	test   r8,r8
  40a0ed:	je     0x40a081
  40a0ef:	cmp    BYTE PTR [r8],0x2d
  40a0f3:	jne    0x40a12c
  40a0f5:	jmp    0x40a081
  40a0f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a100:	mov    rax,QWORD PTR [rcx+0x18]
  40a104:	lea    r8,[rax+0x1]
  40a108:	mov    QWORD PTR [rcx+0x18],r8
  40a10c:	cmp    BYTE PTR [rax+0x1],0x0
  40a110:	jne    0x40a132
  40a112:	mov    r9d,DWORD PTR [rcx+0x14]
  40a116:	mov    r8,QWORD PTR [rcx+0x8]
  40a11a:	mov    r8,QWORD PTR [r8+r9*8]
  40a11e:	mov    rax,r9
  40a121:	test   r8,r8
  40a124:	je     0x40a1a0
  40a126:	cmp    BYTE PTR [r8],0x2d
  40a12a:	je     0x40a1a0
  40a12c:	add    eax,0x1
  40a12f:	mov    DWORD PTR [rcx+0x14],eax
  40a132:	mov    QWORD PTR [rdx+0x8],r8
  40a136:	jmp    0x40a081
  40a13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a140:	mov    rcx,QWORD PTR [rip+0x1e041]        # 0x428188
  40a147:	call   0x408a70
  40a14c:	nop    DWORD PTR [rax+0x0]
  40a150:	mov    r9d,DWORD PTR [rcx+0x14]
  40a154:	mov    r10,QWORD PTR [rcx+0x8]
  40a158:	lea    eax,[r9+0x1]
  40a15c:	mov    r9,QWORD PTR [r10+r9*8]
  40a160:	mov    DWORD PTR [rcx+0x14],eax
  40a163:	mov    QWORD PTR [rcx+0x18],r9
  40a167:	jmp    0x40a0bb
  40a16c:	nop    DWORD PTR [rax+0x0]
  40a170:	mov    rdi,QWORD PTR [r8+0x50]
  40a174:	mov    rsi,QWORD PTR [rcx+0x20]
  40a178:	mov    rbx,QWORD PTR [rip+0x1e0b9]        # 0x428238
  40a17f:	jmp    0x40a050
  40a184:	mov    r9d,DWORD PTR [rcx+0x14]
  40a188:	mov    r10,QWORD PTR [rcx+0x8]
  40a18c:	lea    eax,[r9+0x1]
  40a190:	mov    r9,QWORD PTR [r10+r9*8]
  40a194:	mov    DWORD PTR [rcx+0x14],eax
  40a197:	jmp    0x40a0bb
  40a19c:	nop    DWORD PTR [rax+0x0]
  40a1a0:	mov    QWORD PTR [rdx+0x8],0x0
  40a1a8:	jmp    0x40a081
  40a1ad:	nop    DWORD PTR [rax]
  40a1b0:	push   rdi
  40a1b1:	push   rbx
  40a1b2:	sub    rsp,0x28
  40a1b6:	mov    rdi,rcx
  40a1b9:	call   0x4223d8
  40a1be:	test   rax,rax
  40a1c1:	je     0x40a1ca
  40a1c3:	add    rsp,0x28
  40a1c7:	pop    rbx
  40a1c8:	pop    rdi
  40a1c9:	ret    
  40a1ca:	or     rcx,0xffffffffffffffff
  40a1ce:	mov    rbx,QWORD PTR [rip+0x1df53]        # 0x428128
  40a1d5:	repnz scas al,BYTE PTR es:[rdi]
  40a1d7:	mov    rax,rcx
  40a1da:	not    rax
  40a1dd:	lea    rdi,[rax-0x1]
  40a1e1:	call   QWORD PTR [rip+0x9223d]        # 0x49c424
  40a1e7:	lea    rcx,[rax+0x60]
  40a1eb:	mov    r8d,edi
  40a1ee:	mov    rdx,rbx
  40a1f1:	call   0x408600
  40a1f6:	mov    ecx,0x1
  40a1fb:	call   0x408a40
  40a200:	nop
  40a201:	nop    DWORD PTR [rax+rax*1+0x0]
  40a206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a210:	push   r12
  40a212:	push   rbp
  40a213:	push   rdi
  40a214:	push   rsi
  40a215:	push   rbx
  40a216:	sub    rsp,0x20
  40a21a:	mov    eax,DWORD PTR [rcx+0xb0]
  40a220:	mov    rbp,QWORD PTR [rcx+0x90]
  40a227:	mov    rbx,QWORD PTR [rcx+0x78]
  40a22b:	test   eax,eax
  40a22d:	jle    0x40a2c4
  40a233:	sub    eax,0x1
  40a236:	mov    rsi,rcx
  40a239:	add    rax,0x1
  40a23d:	lea    rdx,[rax+rax*2]
  40a241:	lea    rax,[rax+rdx*4]
  40a245:	lea    rdi,[rbx+rax*8]
  40a249:	jmp    0x40a272
  40a24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a250:	cmp    eax,0x6
  40a253:	jne    0x40a269
  40a255:	mov    rax,rbx
  40a258:	sub    rax,QWORD PTR [rsi+0x78]
  40a25c:	mov    rdx,QWORD PTR [rbp+0x78]
  40a260:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  40a269:	add    rbx,0x68
  40a26d:	cmp    rbx,rdi
  40a270:	je     0x40a2c4
  40a272:	mov    edx,DWORD PTR [rbx+0x10]
  40a275:	mov    eax,edx
  40a277:	and    eax,0xf000
  40a27c:	shr    eax,0xc
  40a27f:	cmp    eax,0x1
  40a282:	jne    0x40a250
  40a284:	test   dh,0x4
  40a287:	je     0x40a29d
  40a289:	mov    rax,rbx
  40a28c:	sub    rax,QWORD PTR [rsi+0x78]
  40a290:	mov    rcx,QWORD PTR [rbp+0x78]
  40a294:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  40a29d:	and    edx,0x40
  40a2a0:	je     0x40a269
  40a2a2:	mov    r12,rbx
  40a2a5:	sub    r12,QWORD PTR [rsi+0x78]
  40a2a9:	mov    rcx,QWORD PTR [rbx+0x18]
  40a2ad:	add    r12,QWORD PTR [rbp+0x78]
  40a2b1:	add    rbx,0x68
  40a2b5:	call   0x40a1b0
  40a2ba:	cmp    rbx,rdi
  40a2bd:	mov    QWORD PTR [r12+0x18],rax
  40a2c2:	jne    0x40a272
  40a2c4:	add    rsp,0x20
  40a2c8:	pop    rbx
  40a2c9:	pop    rsi
  40a2ca:	pop    rdi
  40a2cb:	pop    rbp
  40a2cc:	pop    r12
  40a2ce:	ret    
  40a2cf:	nop
  40a2d0:	push   r13
  40a2d2:	push   r12
  40a2d4:	push   rbp
  40a2d5:	push   rdi
  40a2d6:	push   rsi
  40a2d7:	push   rbx
  40a2d8:	sub    rsp,0x28
  40a2dc:	mov    r13,rcx
  40a2df:	mov    rcx,rdx
  40a2e2:	mov    r12,r8
  40a2e5:	mov    ebp,r9d
  40a2e8:	call   0x422500
  40a2ed:	test   rax,rax
  40a2f0:	mov    QWORD PTR [r13+0x8],rax
  40a2f4:	je     0x40a3d0
  40a2fa:	mov    rdx,QWORD PTR [r13+0x0]
  40a2fe:	mov    ecx,DWORD PTR [rdx+0x10]
  40a301:	mov    rbx,QWORD PTR [rdx+0x60]
  40a305:	mov    DWORD PTR [r13+0x14],0x0
  40a30d:	mov    r8d,ecx
  40a310:	or     r8d,0x42
  40a314:	test   rbx,rbx
  40a317:	mov    DWORD PTR [r13+0x10],r8d
  40a31b:	je     0x40a362
  40a31d:	mov    rsi,rax
  40a320:	add    rsi,0x1
  40a324:	add    rbx,0x1
  40a328:	movzx  r11d,BYTE PTR [rsi-0x1]
  40a32d:	movzx  r10d,BYTE PTR [rbx-0x1]
  40a332:	cmp    r11b,r10b
  40a335:	je     0x40a34c
  40a337:	lea    rdx,[rip+0x1d982]        # 0x427cc0
  40a33e:	movzx  edi,r11b
  40a342:	movzx  edi,BYTE PTR [rdx+rdi*1]
  40a346:	cmp    BYTE PTR [rdx+r10*1],dil
  40a34a:	jne    0x40a362
  40a34c:	test   r11b,r11b
  40a34f:	jne    0x40a320
  40a351:	or     ecx,0x62
  40a354:	mov    QWORD PTR [r13+0x8],0x0
  40a35c:	mov    DWORD PTR [r13+0x10],ecx
  40a360:	jmp    0x40a392
  40a362:	cmp    ebp,0x1
  40a365:	je     0x40a3b0
  40a367:	cmp    ebp,0x2
  40a36a:	jne    0x40a374
  40a36c:	test   ecx,0x20020
  40a372:	jne    0x40a3e0
  40a374:	test   ch,0xf0
  40a377:	je     0x40a38a
  40a379:	cmp    BYTE PTR [rax],0x0
  40a37c:	jne    0x40a420
  40a382:	and    ecx,0x10000
  40a388:	je     0x40a3d0
  40a38a:	mov    QWORD PTR [r13+0x8],0x0
  40a392:	mov    rdx,r13
  40a395:	mov    rcx,r12
  40a398:	add    rsp,0x28
  40a39c:	pop    rbx
  40a39d:	pop    rsi
  40a39e:	pop    rdi
  40a39f:	pop    rbp
  40a3a0:	pop    r12
  40a3a2:	pop    r13
  40a3a4:	jmp    0x409a50
  40a3a9:	nop    DWORD PTR [rax+0x0]
  40a3b0:	mov    edx,ecx
  40a3b2:	and    edx,0x20020
  40a3b8:	cmp    edx,0x20000
  40a3be:	je     0x40a374
  40a3c0:	mov    edx,ecx
  40a3c2:	and    edx,0x40020
  40a3c8:	cmp    edx,0x40020
  40a3ce:	je     0x40a374
  40a3d0:	add    rsp,0x28
  40a3d4:	pop    rbx
  40a3d5:	pop    rsi
  40a3d6:	pop    rdi
  40a3d7:	pop    rbp
  40a3d8:	pop    r12
  40a3da:	pop    r13
  40a3dc:	ret    
  40a3dd:	nop    DWORD PTR [rax]
  40a3e0:	mov    edx,ecx
  40a3e2:	and    edx,0x40020
  40a3e8:	cmp    edx,0x20
  40a3eb:	je     0x40a374
  40a3ed:	mov    edx,ecx
  40a3ef:	and    edx,0x400020
  40a3f5:	cmp    edx,0x400000
  40a3fb:	je     0x40a374
  40a401:	mov    edx,ecx
  40a403:	and    edx,0x800020
  40a409:	cmp    edx,0x800020
  40a40f:	jne    0x40a3d0
  40a411:	jmp    0x40a374
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	mov    rcx,rax
  40a423:	call   0x40a1b0
  40a428:	or     DWORD PTR [r13+0x10],0x40
  40a42d:	mov    QWORD PTR [r13+0x8],rax
  40a431:	jmp    0x40a392
  40a436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a440:	push   rsi
  40a441:	push   rbx
  40a442:	sub    rsp,0x28
  40a446:	mov    rbx,rcx
  40a449:	call   0x4224e8
  40a44e:	test   rax,rax
  40a451:	je     0x40a45a
  40a453:	add    rsp,0x28
  40a457:	pop    rbx
  40a458:	pop    rsi
  40a459:	ret    
  40a45a:	mov    rsi,QWORD PTR [rip+0x1dcc7]        # 0x428128
  40a461:	call   QWORD PTR [rip+0x91fbd]        # 0x49c424
  40a467:	lea    rcx,[rax+0x60]
  40a46b:	mov    r8d,ebx
  40a46e:	mov    rdx,rsi
  40a471:	call   0x408600
  40a476:	mov    ecx,0x1
  40a47b:	call   0x408a40
  40a480:	nop
  40a481:	nop    DWORD PTR [rax+rax*1+0x0]
  40a486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a490:	push   rbp
  40a491:	push   rdi
  40a492:	push   rsi
  40a493:	push   rbx
  40a494:	sub    rsp,0x28
  40a498:	mov    rbx,QWORD PTR [rcx]
  40a49b:	mov    rsi,rcx
  40a49e:	mov    rdi,rdx
  40a4a1:	test   rbx,rbx
  40a4a4:	je     0x40a4f4
  40a4a6:	movsxd r8,DWORD PTR [rbx]
  40a4a9:	mov    eax,DWORD PTR [rbx+0x4]
  40a4ac:	cmp    r8d,eax
  40a4af:	lea    edx,[r8+0x1]
  40a4b3:	jge    0x40a4c5
  40a4b5:	mov    DWORD PTR [rbx],edx
  40a4b7:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  40a4bc:	add    rsp,0x28
  40a4c0:	pop    rbx
  40a4c1:	pop    rsi
  40a4c2:	pop    rdi
  40a4c3:	pop    rbp
  40a4c4:	ret    
  40a4c5:	add    eax,0x8
  40a4c8:	mov    rcx,rbx
  40a4cb:	mov    DWORD PTR [rbx+0x4],eax
  40a4ce:	cdqe   
  40a4d0:	lea    rbp,[rax*8+0x8]
  40a4d8:	mov    rdx,rbp
  40a4db:	call   0x4224a8
  40a4e0:	test   rax,rax
  40a4e3:	je     0x40a520
  40a4e5:	movsxd r8,DWORD PTR [rax]
  40a4e8:	mov    QWORD PTR [rsi],rax
  40a4eb:	mov    rbx,rax
  40a4ee:	lea    edx,[r8+0x1]
  40a4f2:	jmp    0x40a4b5
  40a4f4:	mov    ecx,0x38
  40a4f9:	call   0x40a440
  40a4fe:	test   rax,rax
  40a501:	mov    rbx,rax
  40a504:	je     0x40a4bc
  40a506:	mov    DWORD PTR [rax],0x0
  40a50c:	mov    DWORD PTR [rax+0x4],0x6
  40a513:	mov    edx,0x1
  40a518:	mov    QWORD PTR [rsi],rax
  40a51b:	xor    r8d,r8d
  40a51e:	jmp    0x40a4b5
  40a520:	mov    rsi,QWORD PTR [rip+0x1dc21]        # 0x428148
  40a527:	call   QWORD PTR [rip+0x91ef7]        # 0x49c424
  40a52d:	lea    rcx,[rax+0x60]
  40a531:	mov    r9,rbx
  40a534:	mov    r8d,ebp
  40a537:	mov    rdx,rsi
  40a53a:	call   0x408600
  40a53f:	mov    ecx,0x1
  40a544:	call   0x408a40
  40a549:	nop
  40a54a:	nop    WORD PTR [rax+rax*1+0x0]
  40a550:	push   r15
  40a552:	push   r14
  40a554:	push   r13
  40a556:	push   r12
  40a558:	push   rbp
  40a559:	push   rdi
  40a55a:	push   rsi
  40a55b:	push   rbx
  40a55c:	sub    rsp,0x58
  40a560:	mov    rbp,QWORD PTR [rsp+0xc0]
  40a568:	mov    QWORD PTR [rsp+0xa0],rcx
  40a570:	mov    r15,r9
  40a573:	mov    r14,rdx
  40a576:	mov    r12,r8
  40a579:	lea    rcx,[r8+rbp*1+0x18]
  40a57e:	call   0x40a440
  40a583:	test   r15,r15
  40a586:	mov    r13,rax
  40a589:	je     0x40a730
  40a58f:	test   rbp,rbp
  40a592:	mov    DWORD PTR [rax],0x1
  40a598:	je     0x40a680
  40a59e:	lea    rsi,[rax+0x10]
  40a5a2:	lea    rax,[rsp+0x48]
  40a5a7:	mov    ebx,ebp
  40a5a9:	lea    r10,[rip+0x23290]        # 0x42d840
  40a5b0:	mov    QWORD PTR [rsp+0x30],rax
  40a5b5:	jmp    0x40a5d5
  40a5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a5c0:	sub    ebx,0x1
  40a5c3:	add    rsi,0x1
  40a5c7:	mov    r15,rdi
  40a5ca:	test   ebx,ebx
  40a5cc:	mov    BYTE PTR [rsi-0x1],al
  40a5cf:	jle    0x40a6c5
  40a5d5:	movzx  eax,BYTE PTR [r15]
  40a5d9:	lea    rdi,[r15+0x1]
  40a5dd:	test   eax,eax
  40a5df:	je     0x40a6c5
  40a5e5:	cmp    eax,0x26
  40a5e8:	jne    0x40a5c0
  40a5ea:	cmp    ebx,0x2
  40a5ed:	mov    QWORD PTR [rsp+0x48],rdi
  40a5f2:	mov    eax,0x26
  40a5f7:	jle    0x40a5c0
  40a5f9:	cmp    BYTE PTR [r15+0x1],0x23
  40a5fe:	lea    r9,[rip+0x231fb]        # 0x42d800
  40a605:	je     0x40a6d0
  40a60b:	mov    r15,r9
  40a60e:	mov    QWORD PTR [rsp+0xc0],rbp
  40a616:	mov    QWORD PTR [rsp+0x38],rsi
  40a61b:	mov    ebp,DWORD PTR [r15+0x4]
  40a61f:	mov    esi,ebx
  40a621:	cmp    ebp,esi
  40a623:	jg     0x40a649
  40a625:	movsxd rbx,ebp
  40a628:	lea    rdx,[r15+0x8]
  40a62c:	mov    rcx,rdi
  40a62f:	mov    r8,rbx
  40a632:	mov    QWORD PTR [rsp+0x28],r10
  40a637:	call   0x422460
  40a63c:	test   eax,eax
  40a63e:	mov    r10,QWORD PTR [rsp+0x28]
  40a643:	je     0x40a751
  40a649:	cmp    r15,r10
  40a64c:	je     0x40a65f
  40a64e:	add    r15,0x10
  40a652:	mov    ebp,DWORD PTR [r15+0x4]
  40a656:	cmp    ebp,esi
  40a658:	jle    0x40a625
  40a65a:	cmp    r15,r10
  40a65d:	jne    0x40a64e
  40a65f:	mov    ebx,esi
  40a661:	mov    rbp,QWORD PTR [rsp+0xc0]
  40a669:	mov    rsi,QWORD PTR [rsp+0x38]
  40a66e:	mov    eax,0x26
  40a673:	jmp    0x40a5c0
  40a678:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	mov    BYTE PTR [rax+0x10],0x0
  40a684:	lea    rcx,[r13+rbp*1+0x11]
  40a689:	mov    QWORD PTR [r13+0x8],rcx
  40a68d:	mov    r8,r12
  40a690:	mov    rdx,r14
  40a693:	call   0x4224d8
  40a698:	mov    rax,QWORD PTR [r13+0x8]
  40a69c:	mov    rcx,QWORD PTR [rsp+0xa0]
  40a6a4:	mov    rdx,r13
  40a6a7:	mov    BYTE PTR [rax+r12*1],0x0
  40a6ac:	call   0x40a490
  40a6b1:	mov    rax,r13
  40a6b4:	add    rsp,0x58
  40a6b8:	pop    rbx
  40a6b9:	pop    rsi
  40a6ba:	pop    rdi
  40a6bb:	pop    rbp
  40a6bc:	pop    r12
  40a6be:	pop    r13
  40a6c0:	pop    r14
  40a6c2:	pop    r15
  40a6c4:	ret    
  40a6c5:	mov    BYTE PTR [rsi],0x0
  40a6c8:	jmp    0x40a684
  40a6ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a6d0:	lea    rcx,[r15+0x2]
  40a6d4:	mov    r8d,0xa
  40a6da:	mov    QWORD PTR [rsp+0x48],rcx
  40a6df:	cmp    BYTE PTR [r15+0x2],0x78
  40a6e4:	je     0x40a743
  40a6e6:	mov    rdx,QWORD PTR [rsp+0x30]
  40a6eb:	mov    QWORD PTR [rsp+0x28],r10
  40a6f0:	call   0x422430
  40a6f5:	mov    rdx,QWORD PTR [rsp+0x48]
  40a6fa:	mov    ecx,eax
  40a6fc:	mov    r10,QWORD PTR [rsp+0x28]
  40a701:	mov    eax,0x26
  40a706:	cmp    BYTE PTR [rdx],0x3b
  40a709:	jne    0x40a5c0
  40a70f:	add    rdx,0x1
  40a713:	mov    r8,rdx
  40a716:	sub    r8,rdi
  40a719:	cmp    r8d,ebx
  40a71c:	jg     0x40a5c0
  40a722:	sub    ebx,r8d
  40a725:	mov    eax,ecx
  40a727:	mov    rdi,rdx
  40a72a:	jmp    0x40a5c0
  40a72f:	nop
  40a730:	lea    rcx,[rax+0x10]
  40a734:	mov    DWORD PTR [rax],0x0
  40a73a:	mov    QWORD PTR [rax+0x8],rcx
  40a73e:	jmp    0x40a68d
  40a743:	lea    rcx,[r15+0x3]
  40a747:	mov    r8b,0x10
  40a74a:	mov    QWORD PTR [rsp+0x48],rcx
  40a74f:	jmp    0x40a6e6
  40a751:	mov    rax,rbx
  40a754:	mov    r9,r15
  40a757:	mov    ebx,esi
  40a759:	mov    r15d,ebp
  40a75c:	add    rdi,rax
  40a75f:	mov    rsi,QWORD PTR [rsp+0x38]
  40a764:	mov    rbp,QWORD PTR [rsp+0xc0]
  40a76c:	sub    ebx,r15d
  40a76f:	movzx  eax,BYTE PTR [r9]
  40a773:	jmp    0x40a5c0
  40a778:	nop    DWORD PTR [rax+rax*1+0x0]
  40a780:	push   rsi
  40a781:	push   rbx
  40a782:	sub    rsp,0x28
  40a786:	mov    rax,QWORD PTR [rdx+0x38]
  40a78a:	mov    rbx,rdx
  40a78d:	lea    rdx,[rip+0x7b2c]        # 0x4122c0
  40a794:	mov    rsi,rcx
  40a797:	cmp    rax,rdx
  40a79a:	je     0x40a8f0
  40a7a0:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x4092f0
  40a7a7:	cmp    rax,rdx
  40a7aa:	je     0x40a910
  40a7b0:	lea    rdx,[rip+0x8bf9]        # 0x4133b0
  40a7b7:	cmp    rax,rdx
  40a7ba:	je     0x40a924
  40a7c0:	mov    r8,QWORD PTR [rbx+0x48]
  40a7c4:	test   r8,r8
  40a7c7:	je     0x40a8b0
  40a7cd:	movzx  r9d,WORD PTR [rbx+0xc]
  40a7d2:	cmp    r9w,0x1
  40a7d7:	je     0x40a8d4
  40a7dd:	cmp    r9w,0xffff
  40a7e2:	je     0x40a7f7
  40a7e4:	mov    rdx,QWORD PTR [rcx]
  40a7e7:	lea    rcx,[rip+0x23fca]        # 0x42e7b8
  40a7ee:	call   0x408a10
  40a7f3:	mov    r8,QWORD PTR [rbx+0x48]
  40a7f7:	mov    rdx,QWORD PTR [rsi]
  40a7fa:	lea    rcx,[rip+0x2488f]        # 0x42f090
  40a801:	call   0x408a10
  40a806:	mov    eax,DWORD PTR [rbx+0x10]
  40a809:	test   ah,0xf0
  40a80c:	je     0x40a880
  40a80e:	test   eax,0x10000
  40a813:	jne    0x40a850
  40a815:	lea    rdx,[rip+0x23cd5]        # 0x42e4f1
  40a81c:	lea    rcx,[rip+0x23b73]        # 0x42e396
  40a823:	call   0x408a10
  40a828:	call   QWORD PTR [rip+0x91bf6]        # 0x49c424
  40a82e:	lea    rcx,[rip+0x23d19]        # 0x42e54e
  40a835:	lea    r9,[rax+0x30]
  40a839:	mov    r8d,0x10
  40a83f:	mov    edx,0x1
  40a844:	add    rsp,0x28
  40a848:	pop    rbx
  40a849:	pop    rsi
  40a84a:	jmp    0x422510
  40a84f:	nop
  40a850:	mov    rdx,QWORD PTR [rsi]
  40a853:	mov    r8,QWORD PTR [rbx+0x48]
  40a857:	lea    rcx,[rip+0x250ec]        # 0x42f94a
  40a85e:	call   0x408a10
  40a863:	lea    rdx,[rip+0x23b7c]        # 0x42e3e6
  40a86a:	lea    rcx,[rip+0x23b25]        # 0x42e396
  40a871:	call   0x408a10
  40a876:	jmp    0x40a828
  40a878:	nop    DWORD PTR [rax+rax*1+0x0]
  40a880:	mov    rdx,QWORD PTR [rsi]
  40a883:	mov    r8,QWORD PTR [rbx+0x48]
  40a887:	lea    rcx,[rip+0x250bc]        # 0x42f94a
  40a88e:	call   0x408a10
  40a893:	lea    rdx,[rip+0x23b33]        # 0x42e3cd
  40a89a:	lea    rcx,[rip+0x23af5]        # 0x42e396
  40a8a1:	call   0x408a10
  40a8a6:	jmp    0x40a828
  40a8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8b0:	test   rax,rax
  40a8b3:	je     0x40a950
  40a8b9:	mov    rdx,QWORD PTR [rcx]
  40a8bc:	lea    r8,[rip+0x23ac9]        # 0x42e38c
  40a8c3:	lea    rcx,[rip+0x2405a]        # 0x42e924
  40a8ca:	call   0x408a10
  40a8cf:	jmp    0x40a828
  40a8d4:	mov    rdx,QWORD PTR [rcx]
  40a8d7:	lea    rcx,[rip+0x250c6]        # 0x42f9a4
  40a8de:	call   0x408a10
  40a8e3:	jmp    0x40a806
  40a8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8f0:	mov    rdx,QWORD PTR [rcx]
  40a8f3:	lea    r8,[rip+0x23be7]        # 0x42e4e1
  40a8fa:	lea    rcx,[rip+0x24023]        # 0x42e924
  40a901:	call   0x408a10
  40a906:	jmp    0x40a828
  40a90b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a910:	mov    rdx,QWORD PTR [rcx]
  40a913:	lea    rcx,[rip+0x24f7c]        # 0x42f896
  40a91a:	call   0x408a10
  40a91f:	jmp    0x40a828
  40a924:	lea    rdx,[rip+0x23cab]        # 0x42e5d6
  40a92b:	lea    rcx,[rip+0x23a64]        # 0x42e396
  40a932:	call   0x408a10
  40a937:	lea    rdx,[rip+0x23bb3]        # 0x42e4f1
  40a93e:	lea    rcx,[rip+0x23a51]        # 0x42e396
  40a945:	call   0x408a10
  40a94a:	jmp    0x40a828
  40a94f:	nop
  40a950:	lea    rdx,[rip+0x23cae]        # 0x42e605
  40a957:	lea    rcx,[rip+0x23a38]        # 0x42e396
  40a95e:	call   0x408a10
  40a963:	lea    rdx,[rip+0x23a7c]        # 0x42e3e6
  40a96a:	lea    rcx,[rip+0x23a25]        # 0x42e396
  40a971:	call   0x408a10
  40a976:	jmp    0x40a828
  40a97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a980:	push   rbp
  40a981:	push   rdi
  40a982:	push   rsi
  40a983:	push   rbx
  40a984:	sub    rsp,0x28
  40a988:	mov    esi,DWORD PTR [rcx+0xb0]
  40a98e:	mov    rbx,QWORD PTR [rcx+0x78]
  40a992:	mov    rdi,rcx
  40a995:	call   QWORD PTR [rip+0x91a89]        # 0x49c424
  40a99b:	lea    rcx,[rip+0x23df7]        # 0x42e799
  40a9a2:	lea    r9,[rax+0x30]
  40a9a6:	mov    r8d,0x1e
  40a9ac:	mov    edx,0x1
  40a9b1:	call   0x422510
  40a9b6:	test   esi,esi
  40a9b8:	jle    0x40aa19
  40a9ba:	lea    eax,[rsi-0x1]
  40a9bd:	lea    rbp,[rdi+0x30]
  40a9c1:	add    rax,0x1
  40a9c5:	lea    rdx,[rax+rax*2]
  40a9c9:	lea    rax,[rax+rdx*4]
  40a9cd:	lea    rsi,[rbx+rax*8]
  40a9d1:	test   DWORD PTR [rbx+0x10],0x280000
  40a9d8:	jne    0x40aa10
  40a9da:	movzx  edx,WORD PTR [rbx+0x2]
  40a9de:	movzx  eax,dl
  40a9e1:	cmp    al,0x7f
  40a9e3:	ja     0x40aa10
  40a9e5:	lea    rcx,[rip+0x26414]        # 0x430e00
  40a9ec:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  40a9f1:	je     0x40aa10
  40a9f3:	lea    rcx,[rip+0x23b65]        # 0x42e55f
  40a9fa:	call   0x408a10
  40a9ff:	mov    rdx,rbx
  40aa02:	mov    rcx,rbp
  40aa05:	call   0x40a780
  40aa0a:	nop    WORD PTR [rax+rax*1+0x0]
  40aa10:	add    rbx,0x68
  40aa14:	cmp    rbx,rsi
  40aa17:	jne    0x40a9d1
  40aa19:	mov    r8,QWORD PTR [rdi+0x30]
  40aa1d:	lea    rdx,[rip+0x2393b]        # 0x42e35f
  40aa24:	lea    rcx,[rip+0x25152]        # 0x42fb7d
  40aa2b:	add    rsp,0x28
  40aa2f:	pop    rbx
  40aa30:	pop    rsi
  40aa31:	pop    rdi
  40aa32:	pop    rbp
  40aa33:	jmp    0x408a10
  40aa38:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa40:	push   r15
  40aa42:	push   r14
  40aa44:	push   r13
  40aa46:	push   r12
  40aa48:	push   rbp
  40aa49:	push   rdi
  40aa4a:	push   rsi
  40aa4b:	push   rbx
  40aa4c:	sub    rsp,0x58
  40aa50:	mov    rdi,rcx
  40aa53:	mov    QWORD PTR [rsp+0xa8],rdx
  40aa5b:	mov    rsi,r8
  40aa5e:	mov    rbx,r9
  40aa61:	call   0x422468
  40aa66:	sub    eax,0x1
  40aa69:	cmp    eax,0x1e
  40aa6c:	mov    DWORD PTR [rsp+0x2c],eax
  40aa70:	ja     0x40ab34
  40aa76:	mov    eax,DWORD PTR [rbx]
  40aa78:	mov    rbp,QWORD PTR [rsi]
  40aa7b:	test   eax,eax
  40aa7d:	jle    0x40abfe
  40aa83:	sub    eax,0x1
  40aa86:	mov    rbx,QWORD PTR [rip+0x91c07]        # 0x49c694
  40aa8d:	mov    r12d,0x2
  40aa93:	add    rax,0x1
  40aa97:	lea    rdx,[rax+rax*2]
  40aa9b:	lea    rax,[rax+rdx*4]
  40aa9f:	lea    rax,[rbp+rax*8+0x0]
  40aaa4:	mov    QWORD PTR [rsp+0x20],rax
  40aaa9:	nop    DWORD PTR [rax+0x0]
  40aab0:	cmp    rbp,QWORD PTR [rsp+0xa8]
  40aab8:	je     0x40ab22
  40aaba:	test   DWORD PTR [rbp+0x10],0x280000
  40aac1:	jne    0x40ab22
  40aac3:	mov    r15,QWORD PTR [rbp+0x50]
  40aac7:	xor    r14d,r14d
  40aaca:	jmp    0x40aad4
  40aacc:	nop    DWORD PTR [rax+0x0]
  40aad0:	add    r14d,0x1
  40aad4:	mov    r13d,r14d
  40aad7:	movzx  ecx,BYTE PTR [r15+r13*1]
  40aadc:	call   rbx
  40aade:	movzx  ecx,BYTE PTR [rdi+r13*1]
  40aae3:	mov    esi,eax
  40aae5:	call   rbx
  40aae7:	cmp    esi,eax
  40aae9:	je     0x40aad0
  40aaeb:	mov    r15,QWORD PTR [rbp+0x58]
  40aaef:	cmp    r12d,r14d
  40aaf2:	cmovb  r12d,r14d
  40aaf6:	test   r15,r15
  40aaf9:	je     0x40ab22
  40aafb:	xor    r14d,r14d
  40aafe:	jmp    0x40ab04
  40ab00:	add    r14d,0x1
  40ab04:	mov    r13d,r14d
  40ab07:	movsx  ecx,BYTE PTR [r15+r13*1]
  40ab0c:	call   rbx
  40ab0e:	movsx  ecx,BYTE PTR [rdi+r13*1]
  40ab13:	mov    esi,eax
  40ab15:	call   rbx
  40ab17:	cmp    esi,eax
  40ab19:	je     0x40ab00
  40ab1b:	cmp    r12d,r14d
  40ab1e:	cmovb  r12d,r14d
  40ab22:	add    rbp,0x68
  40ab26:	cmp    rbp,QWORD PTR [rsp+0x20]
  40ab2b:	jne    0x40aab0
  40ab2d:	cmp    DWORD PTR [rsp+0x2c],r12d
  40ab32:	ja     0x40ab55
  40ab34:	lea    rcx,[rip+0x23a34]        # 0x42e56f
  40ab3b:	mov    rdx,rdi
  40ab3e:	call   0x408a10
  40ab43:	nop
  40ab44:	add    rsp,0x58
  40ab48:	pop    rbx
  40ab49:	pop    rsi
  40ab4a:	pop    rdi
  40ab4b:	pop    rbp
  40ab4c:	pop    r12
  40ab4e:	pop    r13
  40ab50:	pop    r14
  40ab52:	pop    r15
  40ab54:	ret    
  40ab55:	lea    rbp,[rsp+0x30]
  40ab5a:	mov    ebx,r12d
  40ab5d:	cmp    r12d,0x8
  40ab61:	mov    rax,rdi
  40ab64:	lea    rsi,[rbp+rbx*1+0x0]
  40ab69:	mov    rcx,rbp
  40ab6c:	jae    0x40abd7
  40ab6e:	xor    edx,edx
  40ab70:	test   r12b,0x4
  40ab74:	je     0x40ab7f
  40ab76:	mov    edx,DWORD PTR [rax]
  40ab78:	mov    DWORD PTR [rcx],edx
  40ab7a:	mov    edx,0x4
  40ab7f:	test   r12b,0x2
  40ab83:	je     0x40ab93
  40ab85:	movzx  r8d,WORD PTR [rax+rdx*1]
  40ab8a:	mov    WORD PTR [rcx+rdx*1],r8w
  40ab8f:	add    rdx,0x2
  40ab93:	and    r12d,0x1
  40ab97:	je     0x40aba0
  40ab99:	movzx  eax,BYTE PTR [rax+rdx*1]
  40ab9d:	mov    BYTE PTR [rcx+rdx*1],al
  40aba0:	add    rbx,rdi
  40aba3:	jmp    0x40aba8
  40aba5:	mov    rsi,rax
  40aba8:	lea    rcx,[rip+0x239d0]        # 0x42e57f
  40abaf:	mov    BYTE PTR [rsi],0x0
  40abb2:	mov    rdx,rbp
  40abb5:	add    rbx,0x1
  40abb9:	call   0x408a10
  40abbe:	movzx  ecx,BYTE PTR [rbx-0x1]
  40abc2:	cmp    BYTE PTR [rbx],0x0
  40abc5:	lea    rax,[rsi+0x1]
  40abc9:	mov    BYTE PTR [rax-0x1],cl
  40abcc:	jne    0x40aba5
  40abce:	mov    BYTE PTR [rsi+0x1],0x0
  40abd2:	jmp    0x40ab34
  40abd7:	mov    ecx,r12d
  40abda:	xor    eax,eax
  40abdc:	and    ecx,0xfffffff8
  40abdf:	mov    edx,eax
  40abe1:	add    eax,0x8
  40abe4:	mov    r8,QWORD PTR [rdi+rdx*1]
  40abe8:	cmp    eax,ecx
  40abea:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40abef:	jb     0x40abdf
  40abf1:	lea    rcx,[rbp+rax*1+0x0]
  40abf6:	add    rax,rdi
  40abf9:	jmp    0x40ab6e
  40abfe:	mov    r12d,0x2
  40ac04:	jmp    0x40ab2d
  40ac09:	nop    DWORD PTR [rax+0x0]
  40ac10:	push   r14
  40ac12:	push   r13
  40ac14:	push   r12
  40ac16:	push   rbp
  40ac17:	push   rdi
  40ac18:	push   rsi
  40ac19:	push   rbx
  40ac1a:	sub    rsp,0x20
  40ac1e:	mov    r13,QWORD PTR [rip+0x917ff]        # 0x49c424
  40ac25:	mov    rbx,QWORD PTR [rcx+0x78]
  40ac29:	mov    rdi,rcx
  40ac2c:	mov    esi,DWORD PTR [rcx+0xb0]
  40ac32:	call   r13
  40ac35:	lea    rcx,[rip+0x23b5d]        # 0x42e799
  40ac3c:	lea    r9,[rax+0x30]
  40ac40:	mov    r8d,0x1e
  40ac46:	mov    edx,0x1
  40ac4b:	lea    r12,[rdi+0x78]
  40ac4f:	lea    rbp,[rdi+0xb0]
  40ac56:	call   0x422510
  40ac5b:	lea    r14,[rdi+0x30]
  40ac5f:	jmp    0x40ac70
  40ac61:	sub    esi,0x1
  40ac64:	add    rbx,0x68
  40ac68:	test   esi,esi
  40ac6a:	jle    0x40ad1d
  40ac70:	test   DWORD PTR [rbx+0x10],0x280000
  40ac77:	jne    0x40ac61
  40ac79:	mov    rcx,QWORD PTR [rbx+0x50]
  40ac7d:	mov    r9,rbp
  40ac80:	mov    r8,r12
  40ac83:	mov    rdx,rbx
  40ac86:	call   0x40aa40
  40ac8b:	mov    rcx,r14
  40ac8e:	mov    rdx,rbx
  40ac91:	call   0x40a780
  40ac96:	mov    rcx,QWORD PTR [rbx+0x58]
  40ac9a:	test   rcx,rcx
  40ac9d:	je     0x40ac61
  40ac9f:	mov    r9,rbp
  40aca2:	mov    r8,r12
  40aca5:	mov    rdx,rbx
  40aca8:	call   0x40aa40
  40acad:	lea    rax,[rip+0x86fc]        # 0x4133b0
  40acb4:	cmp    QWORD PTR [rbx+0x38],rax
  40acb8:	je     0x40ad50
  40acbe:	cmp    WORD PTR [rbx+0xc],0x1
  40acc3:	mov    rdx,QWORD PTR [rdi+0x30]
  40acc7:	mov    r9,QWORD PTR [rbx+0x60]
  40accb:	mov    r8,QWORD PTR [rbx+0x48]
  40accf:	je     0x40ad42
  40acd1:	lea    rcx,[rip+0x2450b]        # 0x42f1e3
  40acd8:	call   0x408a10
  40acdd:	lea    rdx,[rip+0x236e9]        # 0x42e3cd
  40ace4:	lea    rcx,[rip+0x236ab]        # 0x42e396
  40aceb:	sub    esi,0x1
  40acee:	add    rbx,0x68
  40acf2:	call   0x408a10
  40acf7:	call   r13
  40acfa:	lea    rcx,[rip+0x2384d]        # 0x42e54e
  40ad01:	lea    r9,[rax+0x30]
  40ad05:	mov    r8d,0x10
  40ad0b:	mov    edx,0x1
  40ad10:	call   0x422510
  40ad15:	test   esi,esi
  40ad17:	jg     0x40ac70
  40ad1d:	mov    r8,QWORD PTR [rdi+0x30]
  40ad21:	lea    rdx,[rip+0x236d7]        # 0x42e3ff
  40ad28:	lea    rcx,[rip+0x24e4e]        # 0x42fb7d
  40ad2f:	add    rsp,0x20
  40ad33:	pop    rbx
  40ad34:	pop    rsi
  40ad35:	pop    rdi
  40ad36:	pop    rbp
  40ad37:	pop    r12
  40ad39:	pop    r13
  40ad3b:	pop    r14
  40ad3d:	jmp    0x408a10
  40ad42:	lea    rcx,[rip+0x24527]        # 0x42f270
  40ad49:	call   0x408a10
  40ad4e:	jmp    0x40acdd
  40ad50:	lea    rdx,[rip+0x238dd]        # 0x42e634
  40ad57:	lea    rcx,[rip+0x23638]        # 0x42e396
  40ad5e:	call   0x408a10
  40ad63:	jmp    0x40acdd
  40ad68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad70:	push   r15
  40ad72:	push   r14
  40ad74:	push   r13
  40ad76:	push   r12
  40ad78:	push   rbp
  40ad79:	push   rdi
  40ad7a:	push   rsi
  40ad7b:	push   rbx
  40ad7c:	sub    rsp,0x68
  40ad80:	mov    eax,DWORD PTR [rcx+0x10]
  40ad83:	test   al,0x8
  40ad85:	jne    0x40ae90
  40ad8b:	mov    rdi,QWORD PTR [rcx+0x20]
  40ad8f:	test   rdi,rdi
  40ad92:	je     0x40aed0
  40ad98:	mov    rdx,QWORD PTR [rcx+0x18]
  40ad9c:	lea    r13,[rsp+0x40]
  40ada1:	mov    rbp,rcx
  40ada4:	mov    r8d,0x20
  40adaa:	mov    rcx,r13
  40adad:	call   0x41b8e0
  40adb2:	test   eax,eax
  40adb4:	jne    0x40ae90
  40adba:	mov    eax,DWORD PTR [rdi]
  40adbc:	test   eax,eax
  40adbe:	jle    0x40ae57
  40adc4:	lea    r15d,[rax-0x1]
  40adc8:	xor    ebx,ebx
  40adca:	xor    r12d,r12d
  40adcd:	lea    rax,[r15+0x1]
  40add1:	mov    QWORD PTR [rsp+0x38],rax
  40add6:	jmp    0x40ae00
  40add8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ade0:	mov    BYTE PTR [r15],0x3d
  40ade4:	cmp    r14d,r12d
  40ade7:	je     0x40adf1
  40ade9:	movsxd rax,r12d
  40adec:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  40adf1:	add    r12d,0x1
  40adf5:	add    rbx,0x1
  40adf9:	cmp    rbx,QWORD PTR [rsp+0x38]
  40adfe:	je     0x40ae57
  40ae00:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  40ae05:	mov    edx,0x3d
  40ae0a:	mov    r14d,ebx
  40ae0d:	mov    rcx,rsi
  40ae10:	call   0x422490
  40ae15:	test   rax,rax
  40ae18:	mov    r15,rax
  40ae1b:	je     0x40aea1
  40ae21:	mov    BYTE PTR [rax],0x0
  40ae24:	xor    r9d,r9d
  40ae27:	xor    r8d,r8d
  40ae2a:	mov    DWORD PTR [rsp+0x20],0x0
  40ae32:	mov    rdx,rsi
  40ae35:	mov    rcx,r13
  40ae38:	call   0x41b8d8
  40ae3d:	test   eax,eax
  40ae3f:	jne    0x40ade0
  40ae41:	mov    rcx,rsi
  40ae44:	add    rbx,0x1
  40ae48:	call   0x422528
  40ae4d:	sub    DWORD PTR [rdi],0x1
  40ae50:	cmp    rbx,QWORD PTR [rsp+0x38]
  40ae55:	jne    0x40ae00
  40ae57:	mov    rcx,r13
  40ae5a:	call   0x41b8d0
  40ae5f:	mov    eax,DWORD PTR [rdi]
  40ae61:	test   eax,eax
  40ae63:	jne    0x40ae90
  40ae65:	mov    eax,DWORD PTR [rbp+0x10]
  40ae68:	mov    edx,eax
  40ae6a:	and    edx,0xfffff00
  40ae70:	test   ah,0x8
  40ae73:	jne    0x40ae78
  40ae75:	or     edx,0x20
  40ae78:	mov    DWORD PTR [rbp+0x10],edx
  40ae7b:	mov    rcx,rdi
  40ae7e:	call   0x422528
  40ae83:	mov    QWORD PTR [rbp+0x20],0x0
  40ae8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae90:	add    rsp,0x68
  40ae94:	pop    rbx
  40ae95:	pop    rsi
  40ae96:	pop    rdi
  40ae97:	pop    rbp
  40ae98:	pop    r12
  40ae9a:	pop    r13
  40ae9c:	pop    r14
  40ae9e:	pop    r15
  40aea0:	ret    
  40aea1:	xor    r9d,r9d
  40aea4:	xor    r8d,r8d
  40aea7:	mov    DWORD PTR [rsp+0x20],0x0
  40aeaf:	mov    rdx,rsi
  40aeb2:	mov    rcx,r13
  40aeb5:	call   0x41b8d8
  40aeba:	test   eax,eax
  40aebc:	jne    0x40ade4
  40aec2:	jmp    0x40ae41
  40aec7:	nop    WORD PTR [rax+rax*1+0x0]
  40aed0:	mov    edx,eax
  40aed2:	and    edx,0xfffff00
  40aed8:	test   ah,0x8
  40aedb:	jne    0x40aee0
  40aedd:	or     edx,0x20
  40aee0:	mov    DWORD PTR [rcx+0x10],edx
  40aee3:	jmp    0x40ae90
  40aee5:	nop
  40aee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aef0:	push   rsi
  40aef1:	push   rbx
  40aef2:	sub    rsp,0x28
  40aef6:	test   BYTE PTR [rdx+0x10],0x4
  40aefa:	je     0x40af05
  40aefc:	mov    rax,QWORD PTR [rdx]
  40aeff:	test   BYTE PTR [rax+0x13],0x2
  40af03:	jne    0x40af10
  40af05:	add    rsp,0x28
  40af09:	pop    rbx
  40af0a:	pop    rsi
  40af0b:	jmp    0x409ff0
  40af10:	mov    rsi,QWORD PTR [rax+0x50]
  40af14:	mov    rbx,QWORD PTR [rip+0x1d355]        # 0x428270
  40af1b:	call   QWORD PTR [rip+0x91503]        # 0x49c424
  40af21:	lea    rcx,[rax+0x60]
  40af25:	mov    r8,rsi
  40af28:	mov    rdx,rbx
  40af2b:	call   0x408600
  40af30:	mov    eax,0xffffffff
  40af35:	add    rsp,0x28
  40af39:	pop    rbx
  40af3a:	pop    rsi
  40af3b:	ret    
  40af3c:	nop    DWORD PTR [rax+0x0]
  40af40:	push   r15
  40af42:	push   r14
  40af44:	push   r13
  40af46:	push   r12
  40af48:	push   rbp
  40af49:	push   rdi
  40af4a:	push   rsi
  40af4b:	push   rbx
  40af4c:	sub    rsp,0x188
  40af53:	movzx  eax,WORD PTR [rcx+0xaa]
  40af5a:	test   ax,0x7fff
  40af5e:	je     0x40b1b8
  40af64:	mov    r12,rdx
  40af67:	lea    rdx,[rax+rax*2]
  40af6b:	mov    rbp,rcx
  40af6e:	mov    rcx,QWORD PTR [rcx+0x78]
  40af72:	lea    rax,[rax+rdx*4]
  40af76:	lea    rax,[rcx+rax*8]
  40af7a:	mov    rbx,QWORD PTR [rax+0x18]
  40af7e:	test   rbx,rbx
  40af81:	je     0x40af8c
  40af83:	cmp    BYTE PTR [rbx],0x0
  40af86:	jne    0x40b030
  40af8c:	mov    rax,QWORD PTR [rbp+0x58]
  40af90:	test   rax,rax
  40af93:	jne    0x40afa4
  40af95:	jmp    0x40b1b8
  40af9a:	nop    WORD PTR [rax+rax*1+0x0]
  40afa0:	add    rax,0x8
  40afa4:	cmp    QWORD PTR [rax+0x8],0x0
  40afa9:	jne    0x40afa0
  40afab:	mov    rbx,QWORD PTR [rax]
  40afae:	xor    edi,edi
  40afb0:	cmp    BYTE PTR [rbx],0x24
  40afb3:	je     0x40b034
  40afb5:	lea    r13,[rsp+0x30]
  40afba:	mov    rcx,rbx
  40afbd:	mov    rsi,QWORD PTR [rip+0x916f8]        # 0x49c6bc
  40afc4:	mov    rdx,r13
  40afc7:	call   rsi
  40afc9:	test   eax,eax
  40afcb:	jne    0x40b1c0
  40afd1:	movzx  eax,WORD PTR [rsp+0x36]
  40afd6:	and    ax,0xf000
  40afda:	cmp    ax,0x4000
  40afde:	je     0x40b110
  40afe4:	cmp    ax,0x8000
  40afe8:	je     0x40b22d
  40afee:	mov    rbp,QWORD PTR [rbp+0x28]
  40aff2:	mov    rsi,QWORD PTR [rip+0x1d2e7]        # 0x4282e0
  40aff9:	call   QWORD PTR [rip+0x91425]        # 0x49c424
  40afff:	lea    rcx,[rax+0x60]
  40b003:	mov    r9,rbx
  40b006:	mov    r8,rbp
  40b009:	mov    rdx,rsi
  40b00c:	call   0x408600
  40b011:	xor    eax,eax
  40b013:	test   edi,edi
  40b015:	jne    0x40b1b0
  40b01b:	add    rsp,0x188
  40b022:	pop    rbx
  40b023:	pop    rsi
  40b024:	pop    rdi
  40b025:	pop    rbp
  40b026:	pop    r12
  40b028:	pop    r13
  40b02a:	pop    r14
  40b02c:	pop    r15
  40b02e:	ret    
  40b02f:	nop
  40b030:	xor    edi,edi
  40b032:	jmp    0x40afb5
  40b034:	lea    r13,[rbx+0x1]
  40b038:	mov    edx,0x5c
  40b03d:	mov    rcx,r13
  40b040:	call   0x422490
  40b045:	test   rax,rax
  40b048:	mov    r14,rax
  40b04b:	je     0x40b2d8
  40b051:	sub    rax,r13
  40b054:	cmp    rax,0x7f
  40b058:	jg     0x40b1b8
  40b05e:	lea    r8,[rsp+0x70]
  40b063:	cmp    rax,0x8
  40b067:	mov    rsi,r13
  40b06a:	mov    rdi,r8
  40b06d:	jb     0x40b079
  40b06f:	mov    rcx,rax
  40b072:	shr    rcx,0x3
  40b076:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40b079:	xor    edx,edx
  40b07b:	test   al,0x4
  40b07d:	je     0x40b088
  40b07f:	mov    edx,DWORD PTR [rsi]
  40b081:	mov    DWORD PTR [rdi],edx
  40b083:	mov    edx,0x4
  40b088:	test   al,0x2
  40b08a:	je     0x40b098
  40b08c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  40b090:	mov    WORD PTR [rdi+rdx*1],cx
  40b094:	add    rdx,0x2
  40b098:	test   al,0x1
  40b09a:	je     0x40b0a3
  40b09c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  40b0a0:	mov    BYTE PTR [rdi+rdx*1],cl
  40b0a3:	mov    rcx,r8
  40b0a6:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  40b0ab:	call   0x422500
  40b0b0:	test   rax,rax
  40b0b3:	mov    rdi,rax
  40b0b6:	je     0x40b2ec
  40b0bc:	mov    rcx,rax
  40b0bf:	call   0x422468
  40b0c4:	mov    rcx,r14
  40b0c7:	mov    rsi,rax
  40b0ca:	call   0x422468
  40b0cf:	lea    rcx,[rsi+rax*1+0x2]
  40b0d4:	mov    r13,rax
  40b0d7:	call   0x40a440
  40b0dc:	mov    rbx,rax
  40b0df:	mov    r8,rsi
  40b0e2:	mov    rdx,rdi
  40b0e5:	mov    rcx,rax
  40b0e8:	add    rsi,rbx
  40b0eb:	mov    edi,0x1
  40b0f0:	call   0x4224d8
  40b0f5:	lea    rcx,[rsi+0x1]
  40b0f9:	lea    r8,[r13+0x1]
  40b0fd:	mov    BYTE PTR [rsi],0x2f
  40b100:	mov    rdx,r14
  40b103:	call   0x4224d8
  40b108:	jmp    0x40afb5
  40b10d:	nop    DWORD PTR [rax]
  40b110:	mov    rcx,rbx
  40b113:	call   0x422468
  40b118:	mov    rcx,QWORD PTR [rbp+0x38]
  40b11c:	mov    r14,rax
  40b11f:	call   0x422468
  40b124:	lea    r14,[r14+rax*1+0x2]
  40b129:	mov    rcx,r14
  40b12c:	call   0x40a440
  40b131:	mov    r15,rax
  40b134:	mov    rax,QWORD PTR [rbp+0x38]
  40b138:	lea    r8,[rip+0x21d1d]        # 0x42ce5c
  40b13f:	mov    r9,rbx
  40b142:	mov    rdx,r14
  40b145:	mov    rcx,r15
  40b148:	mov    QWORD PTR [rsp+0x20],rax
  40b14d:	call   0x4089f0
  40b152:	cdqe   
  40b154:	cmp    r14,rax
  40b157:	jbe    0x40b39d
  40b15d:	test   edi,edi
  40b15f:	jne    0x40b2a6
  40b165:	mov    rdx,r13
  40b168:	mov    rcx,r15
  40b16b:	call   rsi
  40b16d:	test   eax,eax
  40b16f:	jne    0x40b2b3
  40b175:	movzx  eax,WORD PTR [rsp+0x36]
  40b17a:	and    ax,0xf000
  40b17e:	cmp    ax,0x8000
  40b182:	je     0x40b390
  40b188:	mov    rbx,QWORD PTR [rip+0x1d151]        # 0x4282e0
  40b18f:	mov    rsi,QWORD PTR [rbp+0x28]
  40b193:	call   QWORD PTR [rip+0x9128b]        # 0x49c424
  40b199:	lea    rcx,[rax+0x60]
  40b19d:	mov    r9,r15
  40b1a0:	mov    rdx,rbx
  40b1a3:	mov    r8,rsi
  40b1a6:	mov    rbx,r15
  40b1a9:	call   0x408600
  40b1ae:	xchg   ax,ax
  40b1b0:	mov    rcx,rbx
  40b1b3:	call   0x422528
  40b1b8:	xor    eax,eax
  40b1ba:	jmp    0x40b01b
  40b1bf:	nop
  40b1c0:	mov    r15,QWORD PTR [rip+0x912ad]        # 0x49c474
  40b1c7:	call   r15
  40b1ca:	cmp    DWORD PTR [rax],0x2
  40b1cd:	jne    0x40b241
  40b1cf:	mov    edx,0x5c
  40b1d4:	mov    rcx,rbx
  40b1d7:	call   0x422448
  40b1dc:	test   rax,rax
  40b1df:	je     0x40b223
  40b1e1:	sub    rax,rbx
  40b1e4:	cmp    rax,0x103
  40b1ea:	mov    r14,rax
  40b1ed:	ja     0x40b241
  40b1ef:	lea    r9,[rsp+0x70]
  40b1f4:	mov    r8,rax
  40b1f7:	mov    rdx,rbx
  40b1fa:	mov    rcx,r9
  40b1fd:	call   0x4224d8
  40b202:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  40b208:	mov    rdx,r13
  40b20b:	mov    rcx,rax
  40b20e:	call   rsi
  40b210:	test   eax,eax
  40b212:	jne    0x40b241
  40b214:	movzx  eax,WORD PTR [rsp+0x36]
  40b219:	and    ax,0xf000
  40b21d:	cmp    ax,0x4000
  40b221:	jne    0x40b241
  40b223:	mov    edx,0xffff8000
  40b228:	mov    WORD PTR [rsp+0x36],dx
  40b22d:	mov    rcx,rbx
  40b230:	call   0x4223e0
  40b235:	mov    DWORD PTR [r12],edi
  40b239:	mov    rax,rbx
  40b23c:	jmp    0x40b01b
  40b241:	mov    r12,QWORD PTR [rbp+0x28]
  40b245:	mov    rbp,QWORD PTR [rip+0x1d094]        # 0x4282e0
  40b24c:	mov    rsi,QWORD PTR [rip+0x911d1]        # 0x49c424
  40b253:	call   rsi
  40b255:	lea    rcx,[rax+0x60]
  40b259:	mov    r8,r12
  40b25c:	mov    rdx,rbp
  40b25f:	call   0x408600
  40b264:	call   r15
  40b267:	mov    ecx,DWORD PTR [rax]
  40b269:	call   0x422478
  40b26e:	mov    r13,rax
  40b271:	call   r15
  40b274:	mov    rbp,QWORD PTR [rip+0x1cfe5]        # 0x428260
  40b27b:	mov    r12d,DWORD PTR [rax]
  40b27e:	call   rsi
  40b280:	lea    rcx,[rax+0x60]
  40b284:	mov    QWORD PTR [rsp+0x20],rbx
  40b289:	mov    r9,r13
  40b28c:	mov    r8d,r12d
  40b28f:	mov    rdx,rbp
  40b292:	call   0x408600
  40b297:	test   edi,edi
  40b299:	jne    0x40b1b0
  40b29f:	xor    eax,eax
  40b2a1:	jmp    0x40b01b
  40b2a6:	mov    rcx,rbx
  40b2a9:	call   0x422528
  40b2ae:	jmp    0x40b165
  40b2b3:	mov    rbx,QWORD PTR [rip+0x911ba]        # 0x49c474
  40b2ba:	call   rbx
  40b2bc:	cmp    DWORD PTR [rax],0x2
  40b2bf:	jne    0x40b32e
  40b2c1:	mov    eax,0xffff8000
  40b2c6:	mov    rbx,r15
  40b2c9:	mov    edi,0x1
  40b2ce:	mov    WORD PTR [rsp+0x36],ax
  40b2d3:	jmp    0x40b22d
  40b2d8:	mov    rcx,r13
  40b2db:	call   0x422500
  40b2e0:	test   rax,rax
  40b2e3:	mov    rbx,rax
  40b2e6:	jne    0x40afb5
  40b2ec:	mov    rsi,QWORD PTR [rip+0x1cfed]        # 0x4282e0
  40b2f3:	mov    rdi,QWORD PTR [rbp+0x28]
  40b2f7:	mov    rbx,QWORD PTR [rip+0x91126]        # 0x49c424
  40b2fe:	call   rbx
  40b300:	lea    rcx,[rax+0x60]
  40b304:	mov    rdx,rsi
  40b307:	mov    r8,rdi
  40b30a:	call   0x408600
  40b30f:	mov    rsi,QWORD PTR [rip+0x1cf6a]        # 0x428280
  40b316:	call   rbx
  40b318:	lea    rcx,[rax+0x60]
  40b31c:	mov    r8,r13
  40b31f:	mov    rdx,rsi
  40b322:	call   0x408600
  40b327:	xor    eax,eax
  40b329:	jmp    0x40b01b
  40b32e:	mov    rbp,QWORD PTR [rbp+0x28]
  40b332:	mov    rdi,QWORD PTR [rip+0x1cfa7]        # 0x4282e0
  40b339:	mov    rsi,QWORD PTR [rip+0x910e4]        # 0x49c424
  40b340:	call   rsi
  40b342:	lea    rcx,[rax+0x60]
  40b346:	mov    r8,rbp
  40b349:	mov    rdx,rdi
  40b34c:	call   0x408600
  40b351:	call   rbx
  40b353:	mov    ecx,DWORD PTR [rax]
  40b355:	call   0x422478
  40b35a:	mov    rbp,rax
  40b35d:	call   rbx
  40b35f:	mov    rbx,QWORD PTR [rip+0x1cefa]        # 0x428260
  40b366:	mov    edi,DWORD PTR [rax]
  40b368:	call   rsi
  40b36a:	lea    rcx,[rax+0x60]
  40b36e:	mov    r9,rbp
  40b371:	mov    QWORD PTR [rsp+0x20],r15
  40b376:	mov    r8d,edi
  40b379:	mov    rdx,rbx
  40b37c:	call   0x408600
  40b381:	mov    rcx,r15
  40b384:	call   0x422528
  40b389:	xor    eax,eax
  40b38b:	jmp    0x40b01b
  40b390:	mov    rbx,r15
  40b393:	mov    edi,0x1
  40b398:	jmp    0x40b22d
  40b39d:	mov    ecx,0x1
  40b3a2:	call   0x408a40
  40b3a7:	nop
  40b3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3b0:	push   r15
  40b3b2:	push   r14
  40b3b4:	push   r13
  40b3b6:	push   r12
  40b3b8:	push   rbp
  40b3b9:	push   rdi
  40b3ba:	push   rsi
  40b3bb:	push   rbx
  40b3bc:	sub    rsp,0x148
  40b3c3:	test   rcx,rcx
  40b3c6:	mov    rsi,rcx
  40b3c9:	mov    rbx,rdx
  40b3cc:	je     0x40b479
  40b3d2:	lea    r12,[rsp+0x30]
  40b3d7:	xor    r13d,r13d
  40b3da:	mov    rcx,rsi
  40b3dd:	call   0x422468
  40b3e2:	mov    edx,r13d
  40b3e5:	cmp    rdx,rax
  40b3e8:	jae    0x40b479
  40b3ee:	movsxd rax,r13d
  40b3f1:	add    rax,rsi
  40b3f4:	movzx  edx,BYTE PTR [rax]
  40b3f7:	cmp    dl,0x3a
  40b3fa:	jne    0x40b40c
  40b3fc:	nop    DWORD PTR [rax+0x0]
  40b400:	add    rax,0x1
  40b404:	movzx  edx,BYTE PTR [rax]
  40b407:	cmp    dl,0x3a
  40b40a:	je     0x40b400
  40b40c:	mov    rcx,r12
  40b40f:	add    rax,0x1
  40b413:	test   dl,dl
  40b415:	mov    BYTE PTR [rcx],dl
  40b417:	je     0x40b421
  40b419:	cmp    dl,0x3a
  40b41c:	jne    0x40b481
  40b41e:	mov    BYTE PTR [rcx],0x0
  40b421:	mov    r13d,eax
  40b424:	sub    r13d,esi
  40b427:	cmp    BYTE PTR [rsp+0x30],0x0
  40b42c:	je     0x40b479
  40b42e:	mov    rcx,r12
  40b431:	call   0x41ce50
  40b436:	test   rax,rax
  40b439:	mov    rdi,rax
  40b43c:	jne    0x40b450
  40b43e:	jmp    0x40b3da
  40b440:	lea    rcx,[rax+0x8]
  40b444:	mov    rdx,rbx
  40b447:	call   0x422488
  40b44c:	test   eax,eax
  40b44e:	je     0x40b4a0
  40b450:	mov    rcx,rdi
  40b453:	call   0x41d030
  40b458:	test   rax,rax
  40b45b:	jne    0x40b440
  40b45d:	mov    rcx,rdi
  40b460:	call   0x41d250
  40b465:	mov    rcx,rsi
  40b468:	call   0x422468
  40b46d:	mov    edx,r13d
  40b470:	cmp    rdx,rax
  40b473:	jb     0x40b3ee
  40b479:	xor    r14d,r14d
  40b47c:	jmp    0x40b67e
  40b481:	add    rcx,0x1
  40b485:	mov    rdx,rcx
  40b488:	sub    rdx,r12
  40b48b:	cmp    edx,0x103
  40b491:	ja     0x40b421
  40b493:	movzx  edx,BYTE PTR [rax]
  40b496:	jmp    0x40b40f
  40b49b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4a0:	cmp    BYTE PTR [rbx],0x2f
  40b4a3:	je     0x40b6bb
  40b4a9:	cmp    BYTE PTR [rsp+0x30],0x0
  40b4ae:	jne    0x40b6cb
  40b4b4:	mov    rcx,rbx
  40b4b7:	call   0x422468
  40b4bc:	lea    rcx,[rax+0x3]
  40b4c0:	call   0x4224e8
  40b4c5:	lea    rcx,[rax+0x2]
  40b4c9:	mov    rbp,rax
  40b4cc:	mov    BYTE PTR [rax],0x2e
  40b4cf:	mov    BYTE PTR [rax+0x1],0x2f
  40b4d3:	mov    BYTE PTR [rax+0x2],0x0
  40b4d7:	mov    rdx,rbx
  40b4da:	call   0x422480
  40b4df:	mov    rcx,rbp
  40b4e2:	mov    edx,0x5
  40b4e7:	call   0x4223b0
  40b4ec:	test   eax,eax
  40b4ee:	mov    rcx,rbp
  40b4f1:	js     0x40b6a1
  40b4f7:	call   0x4223d8
  40b4fc:	cmp    BYTE PTR [rbp+0x0],0x2f
  40b500:	mov    r14,rax
  40b503:	sete   BYTE PTR [rsp+0x2f]
  40b508:	movzx  eax,BYTE PTR [rsp+0x2f]
  40b50d:	xor    r15d,r15d
  40b510:	xor    r13d,r13d
  40b513:	add    eax,0x2e
  40b516:	mov    BYTE PTR [rsp+0x2f],al
  40b51a:	movzx  eax,BYTE PTR [r14]
  40b51e:	xchg   ax,ax
  40b520:	test   al,al
  40b522:	mov    rbx,r13
  40b525:	je     0x40b657
  40b52b:	cmp    al,0x2f
  40b52d:	je     0x40b695
  40b533:	add    rbx,0x1
  40b537:	mov    esi,r15d
  40b53a:	jmp    0x40b547
  40b53c:	nop    DWORD PTR [rax+0x0]
  40b540:	test   dl,dl
  40b542:	je     0x40b558
  40b544:	mov    rbx,rcx
  40b547:	movzx  edx,BYTE PTR [r14+rbx*1]
  40b54c:	add    esi,0x1
  40b54f:	lea    rcx,[rbx+0x1]
  40b553:	cmp    dl,0x2f
  40b556:	jne    0x40b540
  40b558:	test   dl,dl
  40b55a:	lea    r15d,[rsi+0x1]
  40b55e:	je     0x40b657
  40b564:	movsxd r13,r15d
  40b567:	lea    r12,[r14+r13*1]
  40b56b:	movzx  eax,BYTE PTR [r12]
  40b570:	cmp    al,0x2f
  40b572:	jne    0x40b5a6
  40b574:	lea    r8,[r14+r13*1+0x1]
  40b579:	mov    r9d,r15d
  40b57c:	nop    DWORD PTR [rax+0x0]
  40b580:	mov    rdx,r8
  40b583:	add    r8,0x1
  40b587:	add    r9d,0x1
  40b58b:	cmp    BYTE PTR [r8-0x1],0x2f
  40b590:	je     0x40b580
  40b592:	cmp    r15d,r9d
  40b595:	je     0x40b5a6
  40b597:	lea    rcx,[r14+rbx*1+0x1]
  40b59c:	call   0x422480
  40b5a1:	movzx  eax,BYTE PTR [r12]
  40b5a6:	test   esi,esi
  40b5a8:	je     0x40b5be
  40b5aa:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  40b5b0:	je     0x40b520
  40b5b6:	test   al,al
  40b5b8:	je     0x40b749
  40b5be:	cmp    al,0x2e
  40b5c0:	jne    0x40b520
  40b5c6:	lea    rdx,[r14+r13*1+0x1]
  40b5cb:	movzx  ecx,BYTE PTR [rdx]
  40b5ce:	test   cl,cl
  40b5d0:	je     0x40b749
  40b5d6:	cmp    cl,0x2f
  40b5d9:	je     0x40b6b3
  40b5df:	cmp    cl,0x2e
  40b5e2:	jne    0x40b520
  40b5e8:	lea    rdx,[r14+r13*1+0x2]
  40b5ed:	movzx  ecx,BYTE PTR [rdx]
  40b5f0:	test   cl,cl
  40b5f2:	je     0x40b5fd
  40b5f4:	cmp    cl,0x2f
  40b5f7:	jne    0x40b520
  40b5fd:	movsxd rcx,esi
  40b600:	sub    rcx,0x1
  40b604:	jmp    0x40b61f
  40b606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b610:	lea    rax,[rcx-0x1]
  40b614:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  40b61a:	je     0x40b62e
  40b61c:	mov    rcx,rax
  40b61f:	sub    esi,0x1
  40b622:	cmp    esi,0xffffffff
  40b625:	jne    0x40b610
  40b627:	mov    rcx,0xffffffffffffffff
  40b62e:	lea    rcx,[r14+rcx*1+0x1]
  40b633:	call   0x422480
  40b638:	mov    r15d,0x0
  40b63e:	test   esi,esi
  40b640:	cmovns r15d,esi
  40b644:	movsxd r13,r15d
  40b647:	movzx  eax,BYTE PTR [r14+r13*1]
  40b64c:	mov    rbx,r13
  40b64f:	test   al,al
  40b651:	jne    0x40b52b
  40b657:	cmp    BYTE PTR [r14],0x0
  40b65b:	jne    0x40b75e
  40b661:	movzx  eax,BYTE PTR [rsp+0x2f]
  40b666:	mov    rcx,rbp
  40b669:	mov    BYTE PTR [r14+0x1],0x0
  40b66e:	mov    BYTE PTR [r14],al
  40b671:	call   0x422528
  40b676:	mov    rcx,rdi
  40b679:	call   0x41d250
  40b67e:	mov    rax,r14
  40b681:	add    rsp,0x148
  40b688:	pop    rbx
  40b689:	pop    rsi
  40b68a:	pop    rdi
  40b68b:	pop    rbp
  40b68c:	pop    r12
  40b68e:	pop    r13
  40b690:	pop    r14
  40b692:	pop    r15
  40b694:	ret    
  40b695:	mov    esi,r15d
  40b698:	add    r15d,0x1
  40b69c:	jmp    0x40b564
  40b6a1:	call   0x422528
  40b6a6:	mov    rcx,rdi
  40b6a9:	call   0x41d250
  40b6ae:	jmp    0x40b465
  40b6b3:	mov    rcx,r12
  40b6b6:	jmp    0x40b633
  40b6bb:	mov    rcx,rbx
  40b6be:	call   0x4223d8
  40b6c3:	mov    rbp,rax
  40b6c6:	jmp    0x40b4df
  40b6cb:	mov    r14,r12
  40b6ce:	mov    edx,DWORD PTR [r14]
  40b6d1:	add    r14,0x4
  40b6d5:	lea    eax,[rdx-0x1010101]
  40b6db:	not    edx
  40b6dd:	and    eax,edx
  40b6df:	and    eax,0x80808080
  40b6e4:	je     0x40b6ce
  40b6e6:	mov    edx,eax
  40b6e8:	mov    rcx,rbx
  40b6eb:	shr    edx,0x10
  40b6ee:	test   eax,0x8080
  40b6f3:	cmove  eax,edx
  40b6f6:	lea    rdx,[r14+0x2]
  40b6fa:	cmove  r14,rdx
  40b6fe:	add    al,al
  40b700:	sbb    r14,0x3
  40b704:	sub    r14,r12
  40b707:	call   0x422468
  40b70c:	lea    rcx,[r14+rax*1+0x2]
  40b711:	call   0x4224e8
  40b716:	lea    r8,[r14+0x1]
  40b71a:	mov    rcx,rax
  40b71d:	mov    rdx,r12
  40b720:	mov    rbp,rax
  40b723:	call   0x4224d8
  40b728:	movsxd rcx,r14d
  40b72b:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  40b730:	je     0x40b773
  40b732:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  40b737:	lea    ecx,[r14+0x1]
  40b73b:	movsxd rcx,ecx
  40b73e:	add    rcx,rbp
  40b741:	mov    BYTE PTR [rcx],0x0
  40b744:	jmp    0x40b4d7
  40b749:	lea    eax,[r15-0x1]
  40b74d:	cdqe   
  40b74f:	mov    BYTE PTR [r14+rax*1],0x0
  40b754:	cmp    BYTE PTR [r14],0x0
  40b758:	je     0x40b661
  40b75e:	mov    rcx,rbp
  40b761:	call   0x422528
  40b766:	mov    rcx,rdi
  40b769:	call   0x41d250
  40b76e:	jmp    0x40b67e
  40b773:	add    rcx,rbp
  40b776:	jmp    0x40b4d7
  40b77b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b780:	push   r12
  40b782:	push   rbp
  40b783:	push   rdi
  40b784:	push   rsi
  40b785:	push   rbx
  40b786:	sub    rsp,0x30
  40b78a:	test   rcx,rcx
  40b78d:	mov    rbx,rcx
  40b790:	mov    rdi,rdx
  40b793:	je     0x40b918
  40b799:	mov    r9d,DWORD PTR [rcx+0x10]
  40b79d:	mov    eax,r9d
  40b7a0:	shr    eax,0x15
  40b7a3:	and    eax,0x1
  40b7a6:	test   r9d,0x2000
  40b7ad:	mov    BYTE PTR [rip+0x5d2c1],al        # 0x468a74
  40b7b3:	je     0x40b7e2
  40b7b5:	mov    rax,QWORD PTR [rcx+0xa0]
  40b7bc:	test   rax,rax
  40b7bf:	je     0x40b7e2
  40b7c1:	mov    edx,DWORD PTR [rip+0x1c939]        # 0x428100
  40b7c7:	test   edx,edx
  40b7c9:	je     0x40b7e2
  40b7cb:	mov    edx,r9d
  40b7ce:	and    edx,0x30000
  40b7d4:	cmp    edx,0x20000
  40b7da:	je     0x40b871
  40b7e0:	call   rax
  40b7e2:	mov    esi,DWORD PTR [rbx]
  40b7e4:	lea    eax,[rsi-0x19000]
  40b7ea:	cmp    eax,0x10001
  40b7ef:	ja     0x40b889
  40b7f5:	cmp    QWORD PTR [rbx+0x28],0x0
  40b7fa:	je     0x40b810
  40b7fc:	xor    eax,eax
  40b7fe:	add    rsp,0x30
  40b802:	pop    rbx
  40b803:	pop    rsi
  40b804:	pop    rdi
  40b805:	pop    rbp
  40b806:	pop    r12
  40b808:	ret    
  40b809:	nop    DWORD PTR [rax+0x0]
  40b810:	mov    edx,0x5c
  40b815:	mov    rcx,rdi
  40b818:	call   0x422448
  40b81d:	test   rax,rax
  40b820:	je     0x40b883
  40b822:	add    rax,0x1
  40b826:	mov    QWORD PTR [rbx+0x28],rax
  40b82a:	lea    rcx,[rip+0x21631]        # 0x42ce62
  40b831:	call   0x422500
  40b836:	mov    rdx,rdi
  40b839:	mov    rcx,rax
  40b83c:	call   0x40b3b0
  40b841:	test   rax,rax
  40b844:	lea    rdx,[rip+0x229b5]        # 0x42e200
  40b84b:	lea    rcx,[rip+0x1c46e]        # 0x427cc0
  40b852:	cmove  rax,rdi
  40b856:	mov    QWORD PTR [rbx+0x20],rax
  40b85a:	mov    eax,0x2d
  40b85f:	nop
  40b860:	add    rdx,0x1
  40b864:	mov    BYTE PTR [rcx+rax*1],0x2d
  40b868:	movzx  eax,BYTE PTR [rdx]
  40b86b:	test   al,al
  40b86d:	jne    0x40b860
  40b86f:	jmp    0x40b7fc
  40b871:	or     r9d,0x10000
  40b878:	mov    DWORD PTR [rcx+0x10],r9d
  40b87c:	call   rax
  40b87e:	jmp    0x40b7e2
  40b883:	mov    QWORD PTR [rbx+0x28],rdi
  40b887:	jmp    0x40b82a
  40b889:	mov    r12,QWORD PTR [rip+0x1c8b0]        # 0x428140
  40b890:	mov    rbp,QWORD PTR [rip+0x90b8d]        # 0x49c424
  40b897:	call   rbp
  40b899:	lea    rcx,[rax+0x60]
  40b89d:	mov    eax,esi
  40b89f:	mov    r8,rdi
  40b8a2:	and    eax,0x7f
  40b8a5:	mov    rdx,r12
  40b8a8:	mov    DWORD PTR [rsp+0x28],eax
  40b8ac:	mov    eax,esi
  40b8ae:	sar    esi,0xc
  40b8b1:	sar    eax,0x7
  40b8b4:	mov    r9d,esi
  40b8b7:	and    eax,0x1f
  40b8ba:	mov    DWORD PTR [rsp+0x20],eax
  40b8be:	call   0x408600
  40b8c3:	cmp    DWORD PTR [rbx],0x29001
  40b8c9:	jle    0x40b904
  40b8cb:	call   rbp
  40b8cd:	mov    rcx,QWORD PTR [rip+0x1c864]        # 0x428138
  40b8d4:	lea    rdx,[rax+0x60]
  40b8d8:	call   0x422538
  40b8dd:	call   rbp
  40b8df:	lea    rcx,[rip+0x25417]        # 0x430cfd
  40b8e6:	lea    r9,[rax+0x60]
  40b8ea:	mov    r8d,0x1
  40b8f0:	mov    edx,0x8
  40b8f5:	call   0x422510
  40b8fa:	mov    eax,0xffffffff
  40b8ff:	jmp    0x40b7fe
  40b904:	call   rbp
  40b906:	mov    rcx,QWORD PTR [rip+0x1c843]        # 0x428150
  40b90d:	lea    rdx,[rax+0x60]
  40b911:	call   0x422538
  40b916:	jmp    0x40b8dd
  40b918:	call   QWORD PTR [rip+0x90b06]        # 0x49c424
  40b91e:	mov    rcx,QWORD PTR [rip+0x1c80b]        # 0x428130
  40b925:	lea    rdx,[rax+0x60]
  40b929:	call   0x422538
  40b92e:	mov    eax,0xffffffff
  40b933:	jmp    0x40b7fe
  40b938:	nop    DWORD PTR [rax+rax*1+0x0]
  40b940:	push   r15
  40b942:	push   r14
  40b944:	push   r13
  40b946:	push   r12
  40b948:	push   rbp
  40b949:	push   rdi
  40b94a:	push   rsi
  40b94b:	push   rbx
  40b94c:	sub    rsp,0x98
  40b953:	test   BYTE PTR [rcx+0x12],0x4
  40b957:	mov    rbx,rcx
  40b95a:	mov    rdi,rdx
  40b95d:	mov    rbp,r8
  40b960:	je     0x40b96d
  40b962:	cmp    WORD PTR [rdx+0x6],0x57
  40b967:	je     0x40bd7e
  40b96d:	cmp    QWORD PTR [rdi+0x28],0x0
  40b972:	je     0x40bc60
  40b978:	mov    eax,DWORD PTR [rip+0x5d0f2]        # 0x468a70
  40b97e:	lea    rsi,[rip+0x2287b]        # 0x42e200
  40b985:	mov    rdx,QWORD PTR [rip+0x5d0bc]        # 0x468a48
  40b98c:	lea    rcx,[rsi+rax*1+0xcb]
  40b994:	call   0x422538
  40b999:	mov    rbp,QWORD PTR [rdi+0x28]
  40b99d:	test   rbp,rbp
  40b9a0:	je     0x40ba32
  40b9a6:	cmp    DWORD PTR [rbp+0x4],0x8000
  40b9ad:	je     0x40bc70
  40b9b3:	mov    rdx,QWORD PTR [rip+0x5d08e]        # 0x468a48
  40b9ba:	mov    rcx,QWORD PTR [rip+0x1ca67]        # 0x428428
  40b9c1:	call   0x422538
  40b9c6:	movsxd rax,DWORD PTR [rbp+0x0]
  40b9ca:	nop    WORD PTR [rax+rax*1+0x0]
  40b9d0:	lea    rdx,[rax+rax*2]
  40b9d4:	mov    r9,QWORD PTR [rbx+0x78]
  40b9d8:	mov    rcx,QWORD PTR [rip+0x5d069]        # 0x468a48
  40b9df:	add    rbp,0x4
  40b9e3:	lea    rax,[rax+rdx*4]
  40b9e7:	mov    edx,DWORD PTR [rip+0x5d083]        # 0x468a70
  40b9ed:	lea    rax,[r9+rax*8]
  40b9f1:	mov    r8,QWORD PTR [rax+0x50]
  40b9f5:	lea    rdx,[rsi+rdx*1+0xe5]
  40b9fd:	call   0x408600
  40ba02:	movsxd rax,DWORD PTR [rbp+0x0]
  40ba06:	cmp    eax,0x8000
  40ba0b:	jne    0x40b9d0
  40ba0d:	cmp    QWORD PTR [rdi+0x30],0x0
  40ba12:	je     0x40ba9d
  40ba18:	mov    eax,DWORD PTR [rip+0x5d052]        # 0x468a70
  40ba1e:	mov    rdx,QWORD PTR [rip+0x5d023]        # 0x468a48
  40ba25:	lea    rcx,[rsi+rax*1+0xd9]
  40ba2d:	call   0x422538
  40ba32:	mov    rbp,QWORD PTR [rdi+0x30]
  40ba36:	test   rbp,rbp
  40ba39:	je     0x40ba9d
  40ba3b:	cmp    DWORD PTR [rbp+0x4],0x8000
  40ba42:	je     0x40bd02
  40ba48:	mov    rdx,QWORD PTR [rip+0x5cff9]        # 0x468a48
  40ba4f:	mov    rcx,QWORD PTR [rip+0x1c972]        # 0x4283c8
  40ba56:	call   0x422538
  40ba5b:	movsxd rax,DWORD PTR [rbp+0x0]
  40ba5f:	nop
  40ba60:	lea    rdx,[rax+rax*2]
  40ba64:	mov    rcx,QWORD PTR [rbx+0x78]
  40ba68:	add    rbp,0x4
  40ba6c:	lea    rax,[rax+rdx*4]
  40ba70:	mov    edx,DWORD PTR [rip+0x5cffa]        # 0x468a70
  40ba76:	lea    rax,[rcx+rax*8]
  40ba7a:	mov    rcx,QWORD PTR [rip+0x5cfc7]        # 0x468a48
  40ba81:	mov    r8,QWORD PTR [rax+0x50]
  40ba85:	lea    rdx,[rsi+rdx*1+0xe5]
  40ba8d:	call   0x408600
  40ba92:	movsxd rax,DWORD PTR [rbp+0x0]
  40ba96:	cmp    eax,0x8000
  40ba9b:	jne    0x40ba60
  40ba9d:	mov    r8,QWORD PTR [rdi+0x58]
  40baa1:	test   r8,r8
  40baa4:	je     0x40babf
  40baa6:	mov    edx,DWORD PTR [rip+0x5cfc4]        # 0x468a70
  40baac:	mov    rcx,QWORD PTR [rip+0x5cf95]        # 0x468a48
  40bab3:	add    rdx,QWORD PTR [rip+0x1c846]        # 0x428300
  40baba:	call   0x408600
  40babf:	mov    edx,DWORD PTR [rdi+0x10]
  40bac2:	mov    eax,edx
  40bac4:	and    eax,0xf000
  40bac9:	shr    eax,0xc
  40bacc:	cmp    eax,0x5
  40bacf:	je     0x40bc30
  40bad5:	cmp    eax,0x7
  40bad8:	je     0x40bbb0
  40bade:	and    dh,0x8
  40bae1:	jne    0x40bbc7
  40bae7:	movzx  eax,WORD PTR [rdi+0x8]
  40baeb:	cmp    ax,0x8000
  40baef:	je     0x40bafb
  40baf1:	cmp    ax,WORD PTR [rdi+0x4]
  40baf5:	jne    0x40bbe5
  40bafb:	mov    eax,DWORD PTR [rdi+0x10]
  40bafe:	test   ah,0x1
  40bb01:	je     0x40bb1d
  40bb03:	cmp    QWORD PTR [rbx+0x58],0x0
  40bb08:	je     0x40bd6e
  40bb0e:	movzx  edx,WORD PTR [rdi]
  40bb11:	cmp    edx,DWORD PTR [rbx+0xb4]
  40bb17:	jl     0x40bce1
  40bb1d:	and    eax,0xf000
  40bb22:	cmp    eax,0x4000
  40bb27:	je     0x40bd50
  40bb2d:	movzx  r8d,WORD PTR [rdi+0xa]
  40bb32:	cmp    r8w,0x1
  40bb37:	ja     0x40bca0
  40bb3d:	movzx  r8d,WORD PTR [rdi+0xc]
  40bb42:	cmp    r8w,0x1
  40bb47:	je     0x40bb73
  40bb49:	jb     0x40bd32
  40bb4f:	cmp    r8w,0xffff
  40bb54:	jne    0x40bcc3
  40bb5a:	mov    ecx,DWORD PTR [rip+0x5cf10]        # 0x468a70
  40bb60:	mov    rdx,QWORD PTR [rip+0x5cee1]        # 0x468a48
  40bb67:	add    rcx,QWORD PTR [rip+0x1c802]        # 0x428370
  40bb6e:	call   0x422538
  40bb73:	test   BYTE PTR [rbx+0x10],0x3
  40bb77:	jne    0x40bc13
  40bb7d:	movzx  eax,WORD PTR [rdi]
  40bb80:	cmp    WORD PTR [rbx+0xae],ax
  40bb87:	jne    0x40bc13
  40bb8d:	mov    ecx,DWORD PTR [rip+0x5cedd]        # 0x468a70
  40bb93:	mov    rdx,QWORD PTR [rip+0x5ceae]        # 0x468a48
  40bb9a:	add    rcx,QWORD PTR [rip+0x1c757]        # 0x4282f8
  40bba1:	call   0x422538
  40bba6:	jmp    0x40bc13
  40bba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbb0:	mov    rdx,rdi
  40bbb3:	mov    ecx,0x1
  40bbb8:	call   QWORD PTR [rdi+0x38]
  40bbbb:	mov    edx,DWORD PTR [rdi+0x10]
  40bbbe:	and    dh,0x8
  40bbc1:	je     0x40bae7
  40bbc7:	mov    ecx,DWORD PTR [rip+0x5cea3]        # 0x468a70
  40bbcd:	mov    rdx,QWORD PTR [rip+0x5ce74]        # 0x468a48
  40bbd4:	add    rcx,QWORD PTR [rip+0x1c73d]        # 0x428318
  40bbdb:	call   0x422538
  40bbe0:	jmp    0x40bae7
  40bbe5:	lea    rdx,[rax+rax*2]
  40bbe9:	mov    rcx,QWORD PTR [rip+0x5ce58]        # 0x468a48
  40bbf0:	lea    rax,[rax+rdx*4]
  40bbf4:	mov    rdx,QWORD PTR [rbx+0x78]
  40bbf8:	lea    rax,[rdx+rax*8]
  40bbfc:	mov    edx,DWORD PTR [rip+0x5ce6e]        # 0x468a70
  40bc02:	add    rdx,QWORD PTR [rip+0x1c6df]        # 0x4282e8
  40bc09:	mov    r8,QWORD PTR [rax+0x50]
  40bc0d:	call   0x408600
  40bc12:	nop
  40bc13:	add    rsp,0x98
  40bc1a:	pop    rbx
  40bc1b:	pop    rsi
  40bc1c:	pop    rdi
  40bc1d:	pop    rbp
  40bc1e:	pop    r12
  40bc20:	pop    r13
  40bc22:	pop    r14
  40bc24:	pop    r15
  40bc26:	ret    
  40bc27:	nop    WORD PTR [rax+rax*1+0x0]
  40bc30:	mov    rax,QWORD PTR [rdi+0x38]
  40bc34:	test   rax,rax
  40bc37:	je     0x40bade
  40bc3d:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x408630
  40bc44:	cmp    rax,rcx
  40bc47:	je     0x40bade
  40bc4d:	mov    rdx,rdi
  40bc50:	mov    ecx,0x1
  40bc55:	call   rax
  40bc57:	mov    edx,DWORD PTR [rdi+0x10]
  40bc5a:	jmp    0x40bade
  40bc5f:	nop
  40bc60:	cmp    QWORD PTR [rdi+0x30],0x0
  40bc65:	jne    0x40b978
  40bc6b:	jmp    0x40ba9d
  40bc70:	movsxd rax,DWORD PTR [rbp+0x0]
  40bc74:	mov    r10,QWORD PTR [rbx+0x78]
  40bc78:	mov    rcx,QWORD PTR [rip+0x5cdc9]        # 0x468a48
  40bc7f:	lea    rdx,[rax+rax*2]
  40bc83:	lea    rax,[rax+rdx*4]
  40bc87:	mov    rdx,QWORD PTR [rip+0x1c792]        # 0x428420
  40bc8e:	lea    rax,[r10+rax*8]
  40bc92:	mov    r8,QWORD PTR [rax+0x50]
  40bc96:	call   0x408600
  40bc9b:	jmp    0x40ba0d
  40bca0:	mov    edx,DWORD PTR [rip+0x5cdca]        # 0x468a70
  40bca6:	movzx  r9d,WORD PTR [rdi+0xc]
  40bcab:	add    rdx,QWORD PTR [rip+0x1c6ae]        # 0x428360
  40bcb2:	mov    rcx,QWORD PTR [rip+0x5cd8f]        # 0x468a48
  40bcb9:	call   0x408600
  40bcbe:	jmp    0x40bb73
  40bcc3:	mov    edx,DWORD PTR [rip+0x5cda7]        # 0x468a70
  40bcc9:	mov    rcx,QWORD PTR [rip+0x5cd78]        # 0x468a48
  40bcd0:	add    rdx,QWORD PTR [rip+0x1c771]        # 0x428448
  40bcd7:	call   0x408600
  40bcdc:	jmp    0x40bb73
  40bce1:	mov    ecx,DWORD PTR [rip+0x5cd89]        # 0x468a70
  40bce7:	mov    rdx,QWORD PTR [rip+0x5cd5a]        # 0x468a48
  40bcee:	add    rcx,QWORD PTR [rip+0x1c683]        # 0x428378
  40bcf5:	call   0x422538
  40bcfa:	mov    eax,DWORD PTR [rdi+0x10]
  40bcfd:	jmp    0x40bb1d
  40bd02:	movsxd rax,DWORD PTR [rbp+0x0]
  40bd06:	mov    r8,QWORD PTR [rbx+0x78]
  40bd0a:	mov    rcx,QWORD PTR [rip+0x5cd37]        # 0x468a48
  40bd11:	lea    rdx,[rax+rax*2]
  40bd15:	lea    rax,[rax+rdx*4]
  40bd19:	mov    rdx,QWORD PTR [rip+0x1c6b0]        # 0x4283d0
  40bd20:	lea    rax,[r8+rax*8]
  40bd24:	mov    r8,QWORD PTR [rax+0x50]
  40bd28:	call   0x408600
  40bd2d:	jmp    0x40ba9d
  40bd32:	mov    ecx,DWORD PTR [rip+0x5cd38]        # 0x468a70
  40bd38:	mov    rdx,QWORD PTR [rip+0x5cd09]        # 0x468a48
  40bd3f:	add    rcx,QWORD PTR [rip+0x1c672]        # 0x4283b8
  40bd46:	call   0x422538
  40bd4b:	jmp    0x40bb73
  40bd50:	mov    ecx,DWORD PTR [rip+0x5cd1a]        # 0x468a70
  40bd56:	mov    rdx,QWORD PTR [rip+0x5cceb]        # 0x468a48
  40bd5d:	add    rcx,QWORD PTR [rip+0x1c5f4]        # 0x428358
  40bd64:	call   0x422538
  40bd69:	jmp    0x40bb73
  40bd6e:	cmp    QWORD PTR [rbx+0x30],0x0
  40bd73:	jne    0x40bb0e
  40bd79:	jmp    0x40bb1d
  40bd7e:	mov    eax,DWORD PTR [rip+0x5ccec]        # 0x468a70
  40bd84:	lea    rdx,[rip+0x22475]        # 0x42e200
  40bd8b:	mov    edi,DWORD PTR [rcx+0xb4]
  40bd91:	mov    rsi,QWORD PTR [rcx+0x78]
  40bd95:	mov    r8,QWORD PTR [rip+0x1c6c4]        # 0x428460
  40bd9c:	xor    r12d,r12d
  40bd9f:	mov    rcx,QWORD PTR [rip+0x5cca2]        # 0x468a48
  40bda6:	lea    rdx,[rdx+rax*1+0xe5]
  40bdae:	call   0x408600
  40bdb3:	test   DWORD PTR [rsi+0x10],0x6280000
  40bdba:	jne    0x40bde2
  40bdbc:	movzx  eax,BYTE PTR [rsi+0x2]
  40bdc0:	cmp    al,0x7f
  40bdc2:	ja     0x40bdd2
  40bdc4:	lea    rdx,[rip+0x25035]        # 0x430e00
  40bdcb:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40bdd0:	jne    0x40bde2
  40bdd2:	mov    rcx,QWORD PTR [rsi+0x50]
  40bdd6:	call   0x422468
  40bddb:	cmp    r12,rax
  40bdde:	cmovb  r12,rax
  40bde2:	sub    edi,0x1
  40bde5:	add    rsi,0x68
  40bde9:	test   edi,edi
  40bdeb:	jg     0x40bdb3
  40bded:	lea    r14,[rsp+0x30]
  40bdf2:	lea    r9d,[r12+0x4]
  40bdf7:	lea    r8,[rip+0x215d7]        # 0x42d3d5
  40bdfe:	mov    edx,0xc
  40be03:	mov    rcx,r14
  40be06:	call   0x4089f0
  40be0b:	mov    eax,DWORD PTR [rip+0x5cc5f]        # 0x468a70
  40be11:	test   eax,eax
  40be13:	je     0x40be1e
  40be15:	sub    eax,0x1
  40be18:	mov    DWORD PTR [rip+0x5cc52],eax        # 0x468a70
  40be1e:	mov    r15d,DWORD PTR [rbx+0xb4]
  40be25:	mov    rsi,QWORD PTR [rbx+0x78]
  40be29:	lea    r12,[rbx+0x10]
  40be2d:	lea    r13,[rsp+0x40]
  40be32:	test   DWORD PTR [rsi+0x10],0x6280000
  40be39:	jne    0x40bf10
  40be3f:	movzx  eax,BYTE PTR [rsi+0x2]
  40be43:	cmp    al,0x7f
  40be45:	ja     0x40be59
  40be47:	lea    rdx,[rip+0x24fb2]        # 0x430e00
  40be4e:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40be53:	jne    0x40bf10
  40be59:	lea    rdx,[rsi+0x2]
  40be5d:	lea    r9,[rip+0x5ccfc]        # 0x468b60
  40be64:	lea    r8,[rip+0x5cced]        # 0x468b58
  40be6b:	mov    rcx,r12
  40be6e:	call   0x409e70
  40be73:	mov    eax,DWORD PTR [rsi+0x10]
  40be76:	test   eax,0x10000
  40be7b:	je     0x40bf42
  40be81:	mov    rdi,QWORD PTR [rip+0x5ccb8]        # 0x468b40
  40be88:	mov    rax,QWORD PTR [rip+0x5cd51]        # 0x468be0
  40be8f:	test   rax,rax
  40be92:	jne    0x40bea4
  40be94:	jmp    0x40bfed
  40be99:	nop    DWORD PTR [rax+0x0]
  40bea0:	add    rdi,0x1
  40bea4:	movzx  ecx,BYTE PTR [rdi]
  40bea7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40beab:	jne    0x40bea0
  40bead:	test   cl,cl
  40beaf:	mov    r9,QWORD PTR [rsi+0x50]
  40beb3:	jne    0x40bfcf
  40beb9:	lea    r8,[rip+0x20fa7]        # 0x42ce67
  40bec0:	mov    edx,0x50
  40bec5:	mov    rcx,r13
  40bec8:	call   0x4089f0
  40becd:	mov    r9,QWORD PTR [rsi+0x40]
  40bed1:	mov    rcx,QWORD PTR [rip+0x5cb70]        # 0x468a48
  40bed8:	mov    r8,r13
  40bedb:	mov    rdx,r14
  40bede:	call   0x408600
  40bee3:	mov    eax,DWORD PTR [rsi+0x10]
  40bee6:	and    eax,0xf000
  40beeb:	shr    eax,0xc
  40beee:	cmp    eax,0x2
  40bef1:	je     0x40bf26
  40bef3:	cmp    eax,0x4
  40bef6:	je     0x40bf26
  40bef8:	mov    r8,rbp
  40befb:	mov    rdx,rsi
  40befe:	mov    rcx,rbx
  40bf01:	call   0x40b940
  40bf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf10:	sub    r15d,0x1
  40bf14:	add    rsi,0x68
  40bf18:	test   r15d,r15d
  40bf1b:	jg     0x40be32
  40bf21:	jmp    0x40bc13
  40bf26:	movzx  eax,BYTE PTR [rip+0x5cb73]        # 0x468aa0
  40bf2d:	cmp    QWORD PTR [rsi+0x38],0x0
  40bf32:	mov    edx,0x1
  40bf37:	cmovne eax,edx
  40bf3a:	mov    BYTE PTR [rip+0x5cb60],al        # 0x468aa0
  40bf40:	jmp    0x40bef8
  40bf42:	and    eax,0xf000
  40bf47:	shr    eax,0xc
  40bf4a:	cmp    eax,0x8
  40bf4d:	ja     0x40bffc
  40bf53:	lea    rdi,[rip+0x20f16]        # 0x42ce70
  40bf5a:	movsxd rax,DWORD PTR [rdi+rax*4]
  40bf5e:	add    rax,rdi
  40bf61:	jmp    rax
  40bf63:	mov    rdi,QWORD PTR [rip+0x5cbae]        # 0x468b18
  40bf6a:	jmp    0x40be88
  40bf6f:	mov    rdi,QWORD PTR [rip+0x5cbc2]        # 0x468b38
  40bf76:	jmp    0x40be88
  40bf7b:	mov    rdi,QWORD PTR [rip+0x5cb8e]        # 0x468b10
  40bf82:	jmp    0x40be88
  40bf87:	mov    rdi,QWORD PTR [rip+0x5cb9a]        # 0x468b28
  40bf8e:	jmp    0x40be88
  40bf93:	mov    rdi,QWORD PTR [rip+0x5cb96]        # 0x468b30
  40bf9a:	jmp    0x40be88
  40bf9f:	mov    rdi,QWORD PTR [rip+0x5cb7a]        # 0x468b20
  40bfa6:	jmp    0x40be88
  40bfab:	mov    rdi,QWORD PTR [rip+0x5cb4e]        # 0x468b00
  40bfb2:	jmp    0x40be88
  40bfb7:	mov    rdi,QWORD PTR [rip+0x5cb8a]        # 0x468b48
  40bfbe:	jmp    0x40be88
  40bfc3:	mov    rdi,QWORD PTR [rip+0x5cba6]        # 0x468b70
  40bfca:	jmp    0x40be88
  40bfcf:	lea    r8,[rip+0x20e94]        # 0x42ce6a
  40bfd6:	mov    QWORD PTR [rsp+0x20],rdi
  40bfdb:	mov    edx,0x50
  40bfe0:	mov    rcx,r13
  40bfe3:	call   0x4089f0
  40bfe8:	jmp    0x40becd
  40bfed:	mov    ecx,0xc
  40bff2:	call   0x409f50
  40bff7:	jmp    0x40bea4
  40bffc:	mov    rdi,QWORD PTR [rsi+0x50]
  40c000:	mov    rsi,QWORD PTR [rbx+0x28]
  40c004:	mov    rbx,QWORD PTR [rip+0x1c205]        # 0x428210
  40c00b:	call   QWORD PTR [rip+0x90413]        # 0x49c424
  40c011:	lea    rcx,[rax+0x60]
  40c015:	mov    r9,rdi
  40c018:	mov    r8,rsi
  40c01b:	mov    rdx,rbx
  40c01e:	call   0x408600
  40c023:	mov    rcx,QWORD PTR [rip+0x1c156]        # 0x428180
  40c02a:	call   0x408a70
  40c02f:	nop
  40c030:	push   r15
  40c032:	push   r14
  40c034:	push   r13
  40c036:	push   r12
  40c038:	push   rbp
  40c039:	push   rdi
  40c03a:	push   rsi
  40c03b:	push   rbx
  40c03c:	sub    rsp,0x98
  40c043:	mov    rax,QWORD PTR [rcx+0x78]
  40c047:	mov    r13d,DWORD PTR [rcx+0xb0]
  40c04e:	xor    r15d,r15d
  40c051:	mov    rdi,rcx
  40c054:	mov    ebp,edx
  40c056:	mov    QWORD PTR [rsp+0xf0],r8
  40c05e:	xor    r14d,r14d
  40c061:	lea    rbx,[rax+0x2]
  40c065:	lea    rax,[rcx+0x10]
  40c069:	mov    QWORD PTR [rsp+0x38],rax
  40c06e:	lea    rax,[rsp+0x40]
  40c073:	mov    QWORD PTR [rsp+0x30],rax
  40c078:	mov    eax,r15d
  40c07b:	mov    r15d,r13d
  40c07e:	mov    r13d,eax
  40c081:	jmp    0x40c0a3
  40c083:	cmp    eax,0x80100
  40c088:	je     0x40c252
  40c08e:	sub    r15d,0x1
  40c092:	add    r13d,0x1
  40c096:	add    rbx,0x68
  40c09a:	test   r15d,r15d
  40c09d:	jle    0x40c2d0
  40c0a3:	mov    eax,DWORD PTR [rbx+0xe]
  40c0a6:	lea    rsi,[rbx-0x2]
  40c0aa:	test   eax,0x6080000
  40c0af:	jne    0x40c083
  40c0b1:	test   eax,0x200000
  40c0b6:	je     0x40c0e1
  40c0b8:	test   ebp,ebp
  40c0ba:	jne    0x40c08e
  40c0bc:	mov    r9,QWORD PTR [rsp+0xf0]
  40c0c4:	mov    r8,QWORD PTR [rbx+0x3e]
  40c0c8:	add    r14d,0x1
  40c0cc:	mov    rdx,QWORD PTR [rip+0x5ca7d]        # 0x468b50
  40c0d3:	mov    rcx,QWORD PTR [rip+0x5c96e]        # 0x468a48
  40c0da:	call   0x408600
  40c0df:	jmp    0x40c08e
  40c0e1:	mov    eax,DWORD PTR [rdi+0x10]
  40c0e4:	and    eax,0x40000
  40c0e9:	je     0x40c101
  40c0eb:	movzx  edx,BYTE PTR [rbx]
  40c0ee:	cmp    dl,0x7f
  40c0f1:	ja     0x40c08e
  40c0f3:	lea    rcx,[rip+0x24d06]        # 0x430e00
  40c0fa:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40c0ff:	je     0x40c08e
  40c101:	test   ebp,ebp
  40c103:	sete   r12b
  40c107:	test   r14d,r14d
  40c10a:	jle    0x40c150
  40c10c:	test   r12b,r12b
  40c10f:	je     0x40c150
  40c111:	cmp    DWORD PTR [rdi+0xb4],r13d
  40c118:	je     0x40c300
  40c11e:	cmp    r15d,0x1
  40c122:	jne    0x40c150
  40c124:	test   eax,eax
  40c126:	je     0x40c150
  40c128:	mov    r9,QWORD PTR [rsp+0xf0]
  40c130:	mov    r8,QWORD PTR [rip+0x1c321]        # 0x428458
  40c137:	mov    rdx,QWORD PTR [rip+0x5ca12]        # 0x468b50
  40c13e:	mov    rcx,QWORD PTR [rip+0x5c903]        # 0x468a48
  40c145:	call   0x408600
  40c14a:	nop    WORD PTR [rax+rax*1+0x0]
  40c150:	mov    rcx,QWORD PTR [rsp+0x38]
  40c155:	lea    r9,[rip+0x5ca04]        # 0x468b60
  40c15c:	lea    r8,[rip+0x5c9f5]        # 0x468b58
  40c163:	mov    rdx,rbx
  40c166:	call   0x409e70
  40c16b:	mov    eax,DWORD PTR [rbx+0xe]
  40c16e:	mov    r9,QWORD PTR [rip+0x5c9cb]        # 0x468b40
  40c175:	test   eax,0x10000
  40c17a:	jne    0x40c1a4
  40c17c:	and    eax,0xf000
  40c181:	shr    eax,0xc
  40c184:	cmp    eax,0x8
  40c187:	ja     0x40c3e7
  40c18d:	lea    rdx,[rip+0x20d0c]        # 0x42cea0
  40c194:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c198:	add    rdx,rax
  40c19b:	jmp    rdx
  40c19d:	mov    r9,QWORD PTR [rip+0x5c9cc]        # 0x468b70
  40c1a4:	mov    r8,QWORD PTR [rip+0x5c9bd]        # 0x468b68
  40c1ab:	lea    rax,[rip+0x22099]        # 0x42e24b
  40c1b2:	cmp    r8,rax
  40c1b5:	je     0x40c391
  40c1bb:	lea    rax,[rip+0x2208b]        # 0x42e24d
  40c1c2:	cmp    r8,rax
  40c1c5:	je     0x40c3c0
  40c1cb:	cmp    WORD PTR [rbx+0x8],0x0
  40c1d0:	mov    rax,QWORD PTR [rip+0x5c969]        # 0x468b40
  40c1d7:	mov    edx,0x50
  40c1dc:	cmovne rax,QWORD PTR [rip+0x5c924]        # 0x468b08
  40c1e4:	mov    rcx,QWORD PTR [rsp+0x30]
  40c1e9:	mov    QWORD PTR [rsp+0x28],rax
  40c1ee:	mov    rax,QWORD PTR [rbx+0x4e]
  40c1f2:	mov    QWORD PTR [rsp+0x20],rax
  40c1f7:	call   0x4089f0
  40c1fc:	mov    r9,QWORD PTR [rbx+0x3e]
  40c200:	mov    r8,QWORD PTR [rsp+0x30]
  40c205:	lea    rdx,[rip+0x5c8b4]        # 0x468ac0
  40c20c:	mov    rcx,QWORD PTR [rip+0x5c835]        # 0x468a48
  40c213:	call   0x408600
  40c218:	mov    eax,DWORD PTR [rbx+0xe]
  40c21b:	and    eax,0xf000
  40c220:	shr    eax,0xc
  40c223:	cmp    eax,0x2
  40c226:	je     0x40c2b0
  40c22c:	cmp    eax,0x4
  40c22f:	je     0x40c2b0
  40c231:	test   r12b,r12b
  40c234:	je     0x40c08e
  40c23a:	mov    r8,QWORD PTR [rsp+0xf0]
  40c242:	mov    rdx,rsi
  40c245:	mov    rcx,rdi
  40c248:	call   0x40b940
  40c24d:	jmp    0x40c08e
  40c252:	cmp    QWORD PTR [rbx+0x4e],0x0
  40c257:	je     0x40c08e
  40c25d:	test   ebp,ebp
  40c25f:	jne    0x40c08e
  40c265:	mov    rsi,QWORD PTR [rbx+0x3e]
  40c269:	mov    rcx,QWORD PTR [rsp+0x38]
  40c26e:	lea    r9,[rip+0x5c8eb]        # 0x468b60
  40c275:	lea    r8,[rip+0x5c8dc]        # 0x468b58
  40c27c:	mov    rdx,rbx
  40c27f:	test   rsi,rsi
  40c282:	cmove  rsi,QWORD PTR [rip+0x1c086]        # 0x428310
  40c28a:	call   0x409e70
  40c28f:	mov    r8,QWORD PTR [rbx+0x4e]
  40c293:	mov    rdx,QWORD PTR [rip+0x1c06e]        # 0x428308
  40c29a:	mov    rcx,QWORD PTR [rip+0x5c7a7]        # 0x468a48
  40c2a1:	mov    r9,rsi
  40c2a4:	call   0x408600
  40c2a9:	jmp    0x40c08e
  40c2ae:	xchg   ax,ax
  40c2b0:	movzx  eax,BYTE PTR [rip+0x5c7e9]        # 0x468aa0
  40c2b7:	cmp    QWORD PTR [rbx+0x36],0x0
  40c2bc:	mov    edx,0x1
  40c2c1:	cmovne eax,edx
  40c2c4:	mov    BYTE PTR [rip+0x5c7d6],al        # 0x468aa0
  40c2ca:	jmp    0x40c231
  40c2cf:	nop
  40c2d0:	mov    rdx,QWORD PTR [rip+0x5c771]        # 0x468a48
  40c2d7:	mov    ecx,0xa
  40c2dc:	call   0x422540
  40c2e1:	nop
  40c2e2:	add    rsp,0x98
  40c2e9:	pop    rbx
  40c2ea:	pop    rsi
  40c2eb:	pop    rdi
  40c2ec:	pop    rbp
  40c2ed:	pop    r12
  40c2ef:	pop    r13
  40c2f1:	pop    r14
  40c2f3:	pop    r15
  40c2f5:	ret    
  40c2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c300:	test   BYTE PTR [rbx-0x58],0x20
  40c304:	jne    0x40c150
  40c30a:	mov    r9,QWORD PTR [rsp+0xf0]
  40c312:	mov    r8,QWORD PTR [rip+0x1bfd7]        # 0x4282f0
  40c319:	mov    rdx,QWORD PTR [rip+0x5c830]        # 0x468b50
  40c320:	mov    rcx,QWORD PTR [rip+0x5c721]        # 0x468a48
  40c327:	call   0x408600
  40c32c:	jmp    0x40c150
  40c331:	mov    r9,QWORD PTR [rip+0x5c7e0]        # 0x468b18
  40c338:	jmp    0x40c1a4
  40c33d:	mov    r9,QWORD PTR [rip+0x5c804]        # 0x468b48
  40c344:	jmp    0x40c1a4
  40c349:	mov    r9,QWORD PTR [rip+0x5c7b0]        # 0x468b00
  40c350:	jmp    0x40c1a4
  40c355:	mov    r9,QWORD PTR [rip+0x5c7c4]        # 0x468b20
  40c35c:	jmp    0x40c1a4
  40c361:	mov    r9,QWORD PTR [rip+0x5c7c8]        # 0x468b30
  40c368:	jmp    0x40c1a4
  40c36d:	mov    r9,QWORD PTR [rip+0x5c7b4]        # 0x468b28
  40c374:	jmp    0x40c1a4
  40c379:	mov    r9,QWORD PTR [rip+0x5c790]        # 0x468b10
  40c380:	jmp    0x40c1a4
  40c385:	mov    r9,QWORD PTR [rip+0x5c7ac]        # 0x468b38
  40c38c:	jmp    0x40c1a4
  40c391:	mov    rax,QWORD PTR [rbx+0x4e]
  40c395:	mov    rcx,QWORD PTR [rsp+0x30]
  40c39a:	lea    r8,[rip+0x20af3]        # 0x42ce94
  40c3a1:	mov    QWORD PTR [rsp+0x20],r9
  40c3a6:	mov    edx,0x50
  40c3ab:	mov    r9,rax
  40c3ae:	call   0x4089f0
  40c3b3:	jmp    0x40c1fc
  40c3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3c0:	mov    rax,QWORD PTR [rbx+0x4e]
  40c3c4:	mov    rcx,QWORD PTR [rsp+0x30]
  40c3c9:	lea    r8,[rip+0x20acb]        # 0x42ce9b
  40c3d0:	mov    QWORD PTR [rsp+0x20],r9
  40c3d5:	mov    edx,0x50
  40c3da:	mov    r9,rax
  40c3dd:	call   0x4089f0
  40c3e2:	jmp    0x40c1fc
  40c3e7:	mov    rbp,QWORD PTR [rsi+0x50]
  40c3eb:	mov    rbx,QWORD PTR [rip+0x1be1e]        # 0x428210
  40c3f2:	mov    rsi,QWORD PTR [rdi+0x28]
  40c3f6:	call   QWORD PTR [rip+0x90028]        # 0x49c424
  40c3fc:	lea    rcx,[rax+0x60]
  40c400:	mov    r9,rbp
  40c403:	mov    rdx,rbx
  40c406:	mov    r8,rsi
  40c409:	call   0x408600
  40c40e:	mov    ecx,0x46
  40c413:	call   0x408a40
  40c418:	nop
  40c419:	nop    DWORD PTR [rax+0x0]
  40c420:	push   r15
  40c422:	push   r14
  40c424:	push   r13
  40c426:	push   r12
  40c428:	push   rbp
  40c429:	push   rdi
  40c42a:	push   rsi
  40c42b:	push   rbx
  40c42c:	sub    rsp,0x38
  40c430:	lea    r13,[rip+0x21b89]        # 0x42dfc0
  40c437:	lea    r12,[rip+0x20a86]        # 0x42cec4
  40c43e:	mov    rbx,rcx
  40c441:	mov    QWORD PTR [rsp+0x88],rdx
  40c449:	mov    r14,r8
  40c44c:	mov    rax,QWORD PTR [rip+0x5c7d5]        # 0x468c28
  40c453:	test   rax,rax
  40c456:	je     0x40c805
  40c45c:	movzx  edx,BYTE PTR [rbx]
  40c45f:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c463:	mov    rcx,rdx
  40c466:	je     0x40c508
  40c46c:	mov    rsi,rbx
  40c46f:	nop
  40c470:	add    rsi,0x1
  40c474:	movzx  edx,BYTE PTR [rsi]
  40c477:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c47b:	mov    rdi,rdx
  40c47e:	jne    0x40c470
  40c480:	mov    r10,rsi
  40c483:	mov    rbp,rsi
  40c486:	sub    r10,rbx
  40c489:	lea    eax,[r10-0x4]
  40c48d:	cmp    eax,0x4
  40c490:	ja     0x40c508
  40c492:	lea    rdx,[rip+0x21167]        # 0x42d600
  40c499:	movzx  eax,cl
  40c49c:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40c4a1:	add    r9d,r10d
  40c4a4:	cmp    r9d,0x9
  40c4a8:	ja     0x40c508
  40c4aa:	movsxd r9,r9d
  40c4ad:	shl    r9,0x4
  40c4b1:	lea    r15,[r13+r9*1+0x0]
  40c4b6:	mov    r11,QWORD PTR [r15]
  40c4b9:	cmp    cl,BYTE PTR [r11]
  40c4bc:	jne    0x40c508
  40c4be:	lea    rdx,[r11+0x1]
  40c4c2:	lea    rcx,[rbx+0x1]
  40c4c6:	lea    r8d,[r10-0x1]
  40c4ca:	mov    QWORD PTR [rsp+0x28],r11
  40c4cf:	mov    QWORD PTR [rsp+0x20],r10
  40c4d4:	call   0x422460
  40c4d9:	test   eax,eax
  40c4db:	jne    0x40c508
  40c4dd:	mov    r10,QWORD PTR [rsp+0x20]
  40c4e2:	mov    r11,QWORD PTR [rsp+0x28]
  40c4e7:	mov    r10d,r10d
  40c4ea:	cmp    BYTE PTR [r11+r10*1],0x0
  40c4ef:	jne    0x40c508
  40c4f1:	cmp    DWORD PTR [r15+0x8],0x6
  40c4f6:	ja     0x40c508
  40c4f8:	mov    eax,DWORD PTR [r15+0x8]
  40c4fc:	movsxd rax,DWORD PTR [r12+rax*4]
  40c500:	add    rax,r12
  40c503:	jmp    rax
  40c505:	mov    rbx,rsi
  40c508:	mov    rax,QWORD PTR [rip+0x5c779]        # 0x468c88
  40c50f:	mov    DWORD PTR [r14],0x0
  40c516:	test   rax,rax
  40c519:	jne    0x40c53a
  40c51b:	mov    ecx,0x21
  40c520:	call   0x409f50
  40c525:	jmp    0x40c53a
  40c527:	nop    WORD PTR [rax+rax*1+0x0]
  40c530:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c534:	jne    0x40c55b
  40c536:	add    rbx,0x1
  40c53a:	movzx  edx,BYTE PTR [rbx]
  40c53d:	test   dl,dl
  40c53f:	jne    0x40c530
  40c541:	xor    eax,eax
  40c543:	add    rsp,0x38
  40c547:	pop    rbx
  40c548:	pop    rsi
  40c549:	pop    rdi
  40c54a:	pop    rbp
  40c54b:	pop    r12
  40c54d:	pop    r13
  40c54f:	pop    r14
  40c551:	pop    r15
  40c553:	ret    
  40c554:	mov    DWORD PTR [r14],0x0
  40c55b:	mov    rax,rbx
  40c55e:	jmp    0x40c543
  40c560:	cmp    dil,0x7f
  40c564:	ja     0x40c505
  40c566:	lea    rax,[rip+0x24893]        # 0x430e00
  40c56d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40c574:	je     0x40c505
  40c576:	mov    rax,QWORD PTR [rsp+0x88]
  40c57e:	mov    rbx,rsi
  40c581:	mov    DWORD PTR [rax],0x2
  40c587:	mov    rax,QWORD PTR [rip+0x5c652]        # 0x468be0
  40c58e:	test   rax,rax
  40c591:	jne    0x40c5a4
  40c593:	jmp    0x40c814
  40c598:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5a0:	add    rbx,0x1
  40c5a4:	movzx  ecx,BYTE PTR [rbx]
  40c5a7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c5ab:	jne    0x40c5a0
  40c5ad:	cmp    cl,0x2f
  40c5b0:	je     0x40c554
  40c5b2:	cmp    cl,0x3e
  40c5b5:	je     0x40c55b
  40c5b7:	cmp    cl,0x7f
  40c5ba:	ja     0x40c541
  40c5bc:	lea    rax,[rip+0x2483d]        # 0x430e00
  40c5c3:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  40c5c8:	jne    0x40c44c
  40c5ce:	jmp    0x40c541
  40c5d3:	cmp    dil,0x3d
  40c5d7:	lea    rbp,[rsi+0x1]
  40c5db:	je     0x40c704
  40c5e1:	xor    edi,edi
  40c5e3:	mov    rax,QWORD PTR [rip+0x5c69e]        # 0x468c88
  40c5ea:	add    rbp,rdi
  40c5ed:	mov    DWORD PTR [r14],0x0
  40c5f4:	test   rax,rax
  40c5f7:	je     0x40c889
  40c5fd:	movzx  edx,BYTE PTR [rbp+0x0]
  40c601:	test   dl,dl
  40c603:	jne    0x40c620
  40c605:	jmp    0x40c541
  40c60a:	nop    WORD PTR [rax+rax*1+0x0]
  40c610:	add    rbp,0x1
  40c614:	movzx  edx,BYTE PTR [rbp+0x0]
  40c618:	test   dl,dl
  40c61a:	je     0x40c541
  40c620:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c624:	je     0x40c610
  40c626:	mov    rbx,rbp
  40c629:	jmp    0x40c587
  40c62e:	xchg   ax,ax
  40c630:	mov    rax,QWORD PTR [rip+0x5c651]        # 0x468c88
  40c637:	test   rax,rax
  40c63a:	je     0x40c87a
  40c640:	movzx  edx,BYTE PTR [rsi]
  40c643:	test   dl,dl
  40c645:	jne    0x40c660
  40c647:	jmp    0x40c541
  40c64c:	nop    DWORD PTR [rax+0x0]
  40c650:	add    rbp,0x1
  40c654:	movzx  edx,BYTE PTR [rbp+0x0]
  40c658:	test   dl,dl
  40c65a:	je     0x40c541
  40c660:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c664:	je     0x40c650
  40c666:	jmp    0x40c626
  40c668:	mov    rax,QWORD PTR [rip+0x5c619]        # 0x468c88
  40c66f:	test   rax,rax
  40c672:	je     0x40c86b
  40c678:	movzx  edx,BYTE PTR [rsi]
  40c67b:	test   dl,dl
  40c67d:	jne    0x40c694
  40c67f:	jmp    0x40c541
  40c684:	add    rbp,0x1
  40c688:	movzx  edx,BYTE PTR [rbp+0x0]
  40c68c:	test   dl,dl
  40c68e:	je     0x40c541
  40c694:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c698:	je     0x40c684
  40c69a:	jmp    0x40c626
  40c69c:	cmp    dil,0x7f
  40c6a0:	ja     0x40c505
  40c6a6:	lea    rax,[rip+0x24753]        # 0x430e00
  40c6ad:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40c6b4:	je     0x40c505
  40c6ba:	mov    rax,QWORD PTR [rsp+0x88]
  40c6c2:	mov    rbx,rsi
  40c6c5:	mov    DWORD PTR [rax],0x0
  40c6cb:	jmp    0x40c587
  40c6d0:	cmp    dil,0x7f
  40c6d4:	ja     0x40c505
  40c6da:	lea    rax,[rip+0x2471f]        # 0x430e00
  40c6e1:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40c6e8:	je     0x40c505
  40c6ee:	mov    rax,QWORD PTR [rsp+0x88]
  40c6f6:	mov    rbx,rsi
  40c6f9:	mov    DWORD PTR [rax],0x1
  40c6ff:	jmp    0x40c587
  40c704:	mov    rax,QWORD PTR [rip+0x5c54d]        # 0x468c58
  40c70b:	test   rax,rax
  40c70e:	je     0x40c898
  40c714:	movzx  edx,BYTE PTR [rsi+0x1]
  40c718:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c71c:	mov    r8,rdx
  40c71f:	je     0x40c5e1
  40c725:	mov    rbx,rbp
  40c728:	nop    DWORD PTR [rax+rax*1+0x0]
  40c730:	add    rbx,0x1
  40c734:	movzx  ecx,BYTE PTR [rbx]
  40c737:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c73b:	jne    0x40c730
  40c73d:	mov    rdi,rbx
  40c740:	sub    rdi,rbp
  40c743:	je     0x40c5e1
  40c749:	cmp    cl,0x7f
  40c74c:	ja     0x40c5e3
  40c752:	lea    rax,[rip+0x246a7]        # 0x430e00
  40c759:	test   DWORD PTR [rax+rcx*4],0x1000c01
  40c760:	je     0x40c5e3
  40c766:	lea    eax,[rdi-0x3]
  40c769:	mov    r11d,edi
  40c76c:	cmp    eax,0xb
  40c76f:	ja     0x40c5e3
  40c775:	lea    rdx,[rip+0x20f84]        # 0x42d700
  40c77c:	movzx  eax,r8b
  40c780:	movzx  eax,BYTE PTR [rdx+rax*1]
  40c784:	add    eax,edi
  40c786:	cmp    eax,0x11
  40c789:	ja     0x40c5e3
  40c78f:	movsxd r9,eax
  40c792:	lea    rax,[rip+0x21927]        # 0x42e0c0
  40c799:	shl    r9,0x4
  40c79d:	add    r9,rax
  40c7a0:	mov    r10,QWORD PTR [r9]
  40c7a3:	mov    QWORD PTR [rsp+0x28],r9
  40c7a8:	cmp    BYTE PTR [r10],r8b
  40c7ab:	jne    0x40c5e3
  40c7b1:	lea    rdx,[r10+0x1]
  40c7b5:	lea    rcx,[rsi+0x2]
  40c7b9:	lea    r8d,[r11-0x1]
  40c7bd:	mov    QWORD PTR [rsp+0x20],r10
  40c7c2:	call   0x422460
  40c7c7:	test   eax,eax
  40c7c9:	jne    0x40c5e3
  40c7cf:	mov    r10,QWORD PTR [rsp+0x20]
  40c7d4:	mov    eax,edi
  40c7d6:	cmp    BYTE PTR [r10+rax*1],0x0
  40c7db:	jne    0x40c5e3
  40c7e1:	mov    r9,QWORD PTR [rsp+0x28]
  40c7e6:	cmp    DWORD PTR [r9+0x8],0x9
  40c7eb:	ja     0x40c5e3
  40c7f1:	mov    edx,DWORD PTR [r9+0x8]
  40c7f5:	lea    rax,[rip+0x206e4]        # 0x42cee0
  40c7fc:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40c800:	add    rax,rdx
  40c803:	jmp    rax
  40c805:	mov    ecx,0x15
  40c80a:	call   0x409f50
  40c80f:	jmp    0x40c45c
  40c814:	mov    ecx,0xc
  40c819:	call   0x409f50
  40c81e:	jmp    0x40c5a4
  40c823:	mov    DWORD PTR [r14],0x6
  40c82a:	jmp    0x40c587
  40c82f:	mov    DWORD PTR [r14],0x4
  40c836:	jmp    0x40c587
  40c83b:	mov    DWORD PTR [r14],0x2
  40c842:	jmp    0x40c587
  40c847:	mov    DWORD PTR [r14],0x3
  40c84e:	jmp    0x40c587
  40c853:	mov    DWORD PTR [r14],0x5
  40c85a:	jmp    0x40c587
  40c85f:	mov    DWORD PTR [r14],0x1
  40c866:	jmp    0x40c587
  40c86b:	mov    ecx,0x21
  40c870:	call   0x409f50
  40c875:	jmp    0x40c678
  40c87a:	mov    ecx,0x21
  40c87f:	call   0x409f50
  40c884:	jmp    0x40c640
  40c889:	mov    ecx,0x21
  40c88e:	call   0x409f50
  40c893:	jmp    0x40c5fd
  40c898:	mov    ecx,0x1b
  40c89d:	call   0x409f50
  40c8a2:	jmp    0x40c714
  40c8a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8b0:	push   r15
  40c8b2:	push   r14
  40c8b4:	push   r13
  40c8b6:	push   r12
  40c8b8:	push   rbp
  40c8b9:	push   rdi
  40c8ba:	push   rsi
  40c8bb:	push   rbx
  40c8bc:	sub    rsp,0x48
  40c8c0:	mov    rsi,QWORD PTR [rip+0x8fcf5]        # 0x49c5bc
  40c8c7:	mov    rbx,rcx
  40c8ca:	jmp    0x40c8d4
  40c8cc:	nop    DWORD PTR [rax+0x0]
  40c8d0:	add    rbx,0x1
  40c8d4:	movzx  ebp,BYTE PTR [rbx]
  40c8d7:	mov    ecx,ebp
  40c8d9:	call   rsi
  40c8db:	test   eax,eax
  40c8dd:	jne    0x40c8d0
  40c8df:	cmp    bpl,0x50
  40c8e3:	je     0x40ca70
  40c8e9:	cmp    bpl,0x54
  40c8ed:	je     0x40ca14
  40c8f3:	sub    ebp,0x30
  40c8f6:	cmp    ebp,0x9
  40c8f9:	ja     0x40cf13
  40c8ff:	mov    rbp,QWORD PTR [rip+0x8fb6e]        # 0x49c474
  40c906:	lea    r13,[rsp+0x30]
  40c90b:	mov    QWORD PTR [rsp+0x30],rbx
  40c910:	xor    edi,edi
  40c912:	xor    r12d,r12d
  40c915:	call   rbp
  40c917:	mov    rcx,QWORD PTR [rsp+0x30]
  40c91c:	mov    r8d,0xa
  40c922:	mov    rdx,r13
  40c925:	mov    DWORD PTR [rax],0x0
  40c92b:	call   0x422438
  40c930:	movsxd r14,eax
  40c933:	call   rbp
  40c935:	mov    ecx,DWORD PTR [rax]
  40c937:	test   ecx,ecx
  40c939:	jne    0x40ca03
  40c93f:	mov    rbx,QWORD PTR [rsp+0x30]
  40c944:	movzx  r15d,BYTE PTR [rbx]
  40c948:	cmp    r15b,0x3a
  40c94c:	jne    0x40c95c
  40c94e:	jmp    0x40cd9b
  40c953:	mov    QWORD PTR [rsp+0x30],rbx
  40c958:	movzx  r15d,BYTE PTR [rbx]
  40c95c:	add    rbx,0x1
  40c960:	movzx  ecx,r15b
  40c964:	call   rsi
  40c966:	test   eax,eax
  40c968:	jne    0x40c953
  40c96a:	cmp    r15b,0x59
  40c96e:	je     0x40cbfb
  40c974:	jle    0x40ca30
  40c97a:	cmp    r15b,0x6d
  40c97e:	je     0x40cc2d
  40c984:	jg     0x40cba0
  40c98a:	cmp    r15b,0x64
  40c98e:	je     0x40cc12
  40c994:	cmp    r15b,0x68
  40c998:	jne    0x40ca03
  40c99a:	cmp    r12d,0x4
  40c99e:	ja     0x40ca03
  40c9a0:	mov    r8d,0xe10
  40c9a6:	mov    r12d,0x5
  40c9ac:	nop    DWORD PTR [rax+0x0]
  40c9b0:	mov    rcx,rdi
  40c9b3:	mov    rdx,r14
  40c9b6:	call   0x4095c0
  40c9bb:	mov    rdi,rax
  40c9be:	mov    rax,QWORD PTR [rsp+0x30]
  40c9c3:	lea    rbx,[rax+0x1]
  40c9c7:	mov    QWORD PTR [rsp+0x30],rbx
  40c9cc:	jmp    0x40c9d5
  40c9ce:	xchg   ax,ax
  40c9d0:	mov    QWORD PTR [rsp+0x30],rbx
  40c9d5:	movzx  r14d,BYTE PTR [rbx]
  40c9d9:	add    rbx,0x1
  40c9dd:	mov    ecx,r14d
  40c9e0:	call   rsi
  40c9e2:	test   eax,eax
  40c9e4:	jne    0x40c9d0
  40c9e6:	test   r14b,r14b
  40c9e9:	je     0x40cf0b
  40c9ef:	sub    r14d,0x30
  40c9f3:	cmp    r14d,0x9
  40c9f7:	ja     0x40ca03
  40c9f9:	cmp    r12d,0x7
  40c9fd:	jne    0x40c915
  40ca03:	call   rbp
  40ca05:	mov    DWORD PTR [rax],0x16
  40ca0b:	mov    rax,0xffffffffffffffff
  40ca12:	jmp    0x40ca1d
  40ca14:	lea    rcx,[rbx+0x1]
  40ca18:	call   0x409720
  40ca1d:	add    rsp,0x48
  40ca21:	pop    rbx
  40ca22:	pop    rsi
  40ca23:	pop    rdi
  40ca24:	pop    rbp
  40ca25:	pop    r12
  40ca27:	pop    r13
  40ca29:	pop    r14
  40ca2b:	pop    r15
  40ca2d:	ret    
  40ca2e:	xchg   ax,ax
  40ca30:	cmp    r15b,0x44
  40ca34:	je     0x40cc12
  40ca3a:	jle    0x40cbd2
  40ca40:	cmp    r15b,0x4d
  40ca44:	je     0x40cbb7
  40ca4a:	cmp    r15b,0x57
  40ca4e:	jne    0x40ca03
  40ca50:	cmp    r12d,0x2
  40ca54:	ja     0x40ca03
  40ca56:	mov    r8d,0x93a80
  40ca5c:	mov    r12d,0x3
  40ca62:	jmp    0x40c9b0
  40ca67:	nop    WORD PTR [rax+rax*1+0x0]
  40ca70:	lea    rcx,[rbx+0x1]
  40ca74:	call   0x4223d8
  40ca79:	test   rax,rax
  40ca7c:	mov    r13,rax
  40ca7f:	je     0x40cf46
  40ca85:	mov    edx,0x54
  40ca8a:	mov    rcx,rax
  40ca8d:	call   0x422490
  40ca92:	test   rax,rax
  40ca95:	mov    r12,rax
  40ca98:	je     0x40cd90
  40ca9e:	lea    rdi,[rax+0x1]
  40caa2:	mov    rcx,r13
  40caa5:	mov    BYTE PTR [rax],0x0
  40caa8:	call   0x4085a0
  40caad:	mov    rcx,rdi
  40cab0:	mov    rbx,rax
  40cab3:	call   0x4085a0
  40cab8:	test   rax,rax
  40cabb:	mov    r12,rax
  40cabe:	setne  r14b
  40cac2:	mov    edx,0x2d
  40cac7:	mov    rcx,rbx
  40caca:	call   0x422490
  40cacf:	test   rax,rax
  40cad2:	je     0x40cc48
  40cad8:	lea    rsi,[rsp+0x20]
  40cadd:	mov    r8,rax
  40cae0:	xor    ecx,ecx
  40cae2:	mov    r9d,0x1e13380
  40cae8:	mov    QWORD PTR [rsp+0x20],rbx
  40caed:	mov    rdx,rsi
  40caf0:	call   0x409650
  40caf5:	mov    rbx,rax
  40caf8:	mov    rax,QWORD PTR [rsp+0x20]
  40cafd:	mov    edx,0x2d
  40cb02:	lea    rcx,[rax+0x1]
  40cb06:	mov    QWORD PTR [rsp+0x20],rcx
  40cb0b:	call   0x422490
  40cb10:	test   rax,rax
  40cb13:	mov    r8,rax
  40cb16:	je     0x40cf2b
  40cb1c:	mov    r9d,0x278d00
  40cb22:	mov    rdx,rsi
  40cb25:	mov    rcx,rbx
  40cb28:	call   0x409650
  40cb2d:	mov    rdi,rax
  40cb30:	mov    rax,QWORD PTR [rsp+0x20]
  40cb35:	lea    rbx,[rax+0x1]
  40cb39:	mov    rcx,rbx
  40cb3c:	mov    QWORD PTR [rsp+0x20],rbx
  40cb41:	call   0x422468
  40cb46:	lea    r8,[rbx+rax*1]
  40cb4a:	mov    rcx,rdi
  40cb4d:	mov    r9d,0x15180
  40cb53:	mov    rdx,rsi
  40cb56:	call   0x409650
  40cb5b:	mov    rbp,QWORD PTR [rip+0x8f912]        # 0x49c474
  40cb62:	mov    rdi,rax
  40cb65:	call   rbp
  40cb67:	mov    r8d,DWORD PTR [rax]
  40cb6a:	test   r8d,r8d
  40cb6d:	jne    0x40cb90
  40cb6f:	test   r14b,r14b
  40cb72:	je     0x40cb90
  40cb74:	mov    rcx,r12
  40cb77:	call   0x409720
  40cb7c:	mov    rcx,rdi
  40cb7f:	mov    r8d,0x1
  40cb85:	mov    rdx,rax
  40cb88:	call   0x4095c0
  40cb8d:	mov    rdi,rax
  40cb90:	mov    rcx,r13
  40cb93:	call   0x422528
  40cb98:	mov    rax,rdi
  40cb9b:	jmp    0x40ca1d
  40cba0:	cmp    r15b,0x73
  40cba4:	jne    0x40cbf1
  40cba6:	mov    r8d,0x1
  40cbac:	mov    r12d,0x7
  40cbb2:	jmp    0x40c9b0
  40cbb7:	cmp    r12d,0x1
  40cbbb:	ja     0x40ca03
  40cbc1:	mov    r8d,0x278d00
  40cbc7:	mov    r12d,0x2
  40cbcd:	jmp    0x40c9b0
  40cbd2:	test   r15b,r15b
  40cbd5:	jne    0x40ca03
  40cbdb:	mov    r8d,0x1
  40cbe1:	mov    rdx,r14
  40cbe4:	mov    rcx,rdi
  40cbe7:	call   0x4095c0
  40cbec:	jmp    0x40ca1d
  40cbf1:	cmp    r15b,0x79
  40cbf5:	jne    0x40ca03
  40cbfb:	test   r12d,r12d
  40cbfe:	jne    0x40ca03
  40cc04:	mov    r8d,0x1e13380
  40cc0a:	mov    r12b,0x1
  40cc0d:	jmp    0x40c9b0
  40cc12:	cmp    r12d,0x3
  40cc16:	ja     0x40ca03
  40cc1c:	mov    r8d,0x15180
  40cc22:	mov    r12d,0x4
  40cc28:	jmp    0x40c9b0
  40cc2d:	cmp    r12d,0x6
  40cc31:	je     0x40ca03
  40cc37:	mov    r8d,0x3c
  40cc3d:	mov    r12d,0x6
  40cc43:	jmp    0x40c9b0
  40cc48:	lea    rdx,[rip+0x202b9]        # 0x42cf08
  40cc4f:	mov    rcx,rbx
  40cc52:	call   0x422450
  40cc57:	test   rax,rax
  40cc5a:	je     0x40ce69
  40cc60:	mov    edx,0x59
  40cc65:	mov    rcx,rbx
  40cc68:	mov    QWORD PTR [rsp+0x28],rbx
  40cc6d:	xor    edi,edi
  40cc6f:	call   0x422490
  40cc74:	test   rax,rax
  40cc77:	je     0x40cc9f
  40cc79:	lea    rdx,[rsp+0x28]
  40cc7e:	mov    r9d,0x1e13380
  40cc84:	mov    r8,rax
  40cc87:	xor    ecx,ecx
  40cc89:	call   0x409650
  40cc8e:	mov    rdi,rax
  40cc91:	mov    rax,QWORD PTR [rsp+0x28]
  40cc96:	lea    rbx,[rax+0x1]
  40cc9a:	mov    QWORD PTR [rsp+0x28],rbx
  40cc9f:	mov    edx,0x4d
  40cca4:	mov    rcx,rbx
  40cca7:	call   0x422490
  40ccac:	test   rax,rax
  40ccaf:	je     0x40ccd8
  40ccb1:	lea    rdx,[rsp+0x28]
  40ccb6:	mov    rcx,rdi
  40ccb9:	mov    r9d,0x278d00
  40ccbf:	mov    r8,rax
  40ccc2:	call   0x409650
  40ccc7:	mov    rdi,rax
  40ccca:	mov    rax,QWORD PTR [rsp+0x28]
  40cccf:	lea    rbx,[rax+0x1]
  40ccd3:	mov    QWORD PTR [rsp+0x28],rbx
  40ccd8:	mov    edx,0x57
  40ccdd:	mov    rcx,rbx
  40cce0:	call   0x422490
  40cce5:	test   rax,rax
  40cce8:	je     0x40cd11
  40ccea:	lea    rdx,[rsp+0x28]
  40ccef:	mov    rcx,rdi
  40ccf2:	mov    r9d,0x93a80
  40ccf8:	mov    r8,rax
  40ccfb:	call   0x409650
  40cd00:	mov    rdi,rax
  40cd03:	mov    rax,QWORD PTR [rsp+0x28]
  40cd08:	lea    rbx,[rax+0x1]
  40cd0c:	mov    QWORD PTR [rsp+0x28],rbx
  40cd11:	mov    edx,0x44
  40cd16:	mov    rcx,rbx
  40cd19:	call   0x422490
  40cd1e:	test   rax,rax
  40cd21:	je     0x40cd55
  40cd23:	lea    rdx,[rsp+0x28]
  40cd28:	mov    rcx,rdi
  40cd2b:	mov    r9d,0x15180
  40cd31:	mov    r8,rax
  40cd34:	call   0x409650
  40cd39:	mov    rdi,rax
  40cd3c:	mov    rax,QWORD PTR [rsp+0x28]
  40cd41:	lea    rbx,[rax+0x1]
  40cd45:	mov    QWORD PTR [rsp+0x28],rbx
  40cd4a:	jmp    0x40cd55
  40cd4c:	nop    DWORD PTR [rax+0x0]
  40cd50:	mov    QWORD PTR [rsp+0x28],rbx
  40cd55:	movzx  ecx,BYTE PTR [rbx]
  40cd58:	add    rbx,0x1
  40cd5c:	mov    ebp,ecx
  40cd5e:	call   rsi
  40cd60:	test   eax,eax
  40cd62:	jne    0x40cd50
  40cd64:	test   bpl,bpl
  40cd67:	mov    rbp,QWORD PTR [rip+0x8f706]        # 0x49c474
  40cd6e:	je     0x40cb65
  40cd74:	call   rbp
  40cd76:	mov    rdi,0xffffffffffffffff
  40cd7d:	mov    DWORD PTR [rax],0x16
  40cd83:	jmp    0x40cb65
  40cd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd90:	mov    rbx,r13
  40cd93:	xor    r14d,r14d
  40cd96:	jmp    0x40cac2
  40cd9b:	cmp    r12d,0x6
  40cd9f:	je     0x40ca03
  40cda5:	lea    r15,[rsp+0x38]
  40cdaa:	mov    QWORD PTR [rsp+0x38],rbx
  40cdaf:	mov    r13d,0x3
  40cdb5:	call   rbp
  40cdb7:	mov    DWORD PTR [rax],0x0
  40cdbd:	mov    rbx,QWORD PTR [rsp+0x38]
  40cdc2:	movzx  eax,BYTE PTR [rbx]
  40cdc5:	cmp    al,0x3a
  40cdc7:	jne    0x40ce20
  40cdc9:	sub    r13d,0x1
  40cdcd:	je     0x40ce20
  40cdcf:	lea    rcx,[rbx+0x1]
  40cdd3:	mov    rdx,r15
  40cdd6:	mov    r8d,0xa
  40cddc:	call   0x422430
  40cde1:	mov    ebx,eax
  40cde3:	call   rbp
  40cde5:	mov    edx,DWORD PTR [rax]
  40cde7:	test   edx,edx
  40cde9:	jne    0x40ce06
  40cdeb:	mov    rdx,r14
  40cdee:	mov    ecx,ebx
  40cdf0:	mov    r8d,0x3c
  40cdf6:	call   0x4095c0
  40cdfb:	mov    r14,rax
  40cdfe:	call   rbp
  40ce00:	mov    eax,DWORD PTR [rax]
  40ce02:	test   eax,eax
  40ce04:	je     0x40cdbd
  40ce06:	mov    rdx,0xffffffffffffffff
  40ce0d:	mov    r8d,0x1
  40ce13:	mov    rcx,rdi
  40ce16:	call   0x4095c0
  40ce1b:	jmp    0x40ca1d
  40ce20:	add    rbx,0x1
  40ce24:	mov    r13d,eax
  40ce27:	jmp    0x40ce3e
  40ce29:	nop    DWORD PTR [rax+0x0]
  40ce30:	mov    QWORD PTR [rsp+0x38],rbx
  40ce35:	add    rbx,0x1
  40ce39:	movzx  r13d,BYTE PTR [rbx-0x1]
  40ce3e:	movzx  ecx,r13b
  40ce42:	call   rsi
  40ce44:	test   eax,eax
  40ce46:	jne    0x40ce30
  40ce48:	test   r13b,r13b
  40ce4b:	jne    0x40cf5e
  40ce51:	cmp    r14,0xe0f
  40ce58:	jle    0x40ce64
  40ce5a:	cmp    r12d,0x5
  40ce5e:	je     0x40ca03
  40ce64:	mov    rdx,r14
  40ce67:	jmp    0x40ce0d
  40ce69:	mov    rcx,rbx
  40ce6c:	call   0x422468
  40ce71:	cmp    rax,0x8
  40ce75:	jne    0x40cf2b
  40ce7b:	mov    eax,DWORD PTR [rbx]
  40ce7d:	lea    rdi,[rsp+0x38]
  40ce82:	lea    rsi,[rsp+0x30]
  40ce87:	lea    r8,[rsp+0x34]
  40ce8c:	mov    r9d,0x1e13380
  40ce92:	xor    ecx,ecx
  40ce94:	mov    rdx,rdi
  40ce97:	mov    BYTE PTR [rsp+0x34],0x0
  40ce9c:	mov    QWORD PTR [rsp+0x38],rsi
  40cea1:	mov    DWORD PTR [rsp+0x30],eax
  40cea5:	lea    rbp,[rsi+0x2]
  40cea9:	call   0x409650
  40ceae:	movzx  edx,WORD PTR [rbx+0x4]
  40ceb2:	mov    r8,rbp
  40ceb5:	mov    r9d,0x278d00
  40cebb:	mov    rcx,rax
  40cebe:	mov    BYTE PTR [rsp+0x32],0x0
  40cec3:	mov    QWORD PTR [rsp+0x38],rsi
  40cec8:	mov    WORD PTR [rsp+0x30],dx
  40cecd:	mov    rdx,rdi
  40ced0:	call   0x409650
  40ced5:	movzx  edx,WORD PTR [rbx+0x6]
  40ced9:	mov    r8,rbp
  40cedc:	mov    r9d,0x15180
  40cee2:	mov    rcx,rax
  40cee5:	mov    BYTE PTR [rsp+0x32],0x0
  40ceea:	mov    QWORD PTR [rsp+0x38],rsi
  40ceef:	mov    WORD PTR [rsp+0x30],dx
  40cef4:	mov    rdx,rdi
  40cef7:	call   0x409650
  40cefc:	mov    rbp,QWORD PTR [rip+0x8f571]        # 0x49c474
  40cf03:	mov    rdi,rax
  40cf06:	jmp    0x40cb65
  40cf0b:	mov    rax,rdi
  40cf0e:	jmp    0x40ca1d
  40cf13:	call   QWORD PTR [rip+0x8f55b]        # 0x49c474
  40cf19:	mov    DWORD PTR [rax],0x16
  40cf1f:	mov    rax,0xffffffffffffffff
  40cf26:	jmp    0x40ca1d
  40cf2b:	mov    rbp,QWORD PTR [rip+0x8f542]        # 0x49c474
  40cf32:	mov    rdi,0xffffffffffffffff
  40cf39:	call   rbp
  40cf3b:	mov    DWORD PTR [rax],0x16
  40cf41:	jmp    0x40cb65
  40cf46:	call   QWORD PTR [rip+0x8f528]        # 0x49c474
  40cf4c:	mov    DWORD PTR [rax],0xc
  40cf52:	mov    rax,0xffffffffffffffff
  40cf59:	jmp    0x40ca1d
  40cf5e:	call   rbp
  40cf60:	mov    DWORD PTR [rax],0x16
  40cf66:	jmp    0x40ce06
  40cf6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf70:	push   rbp
  40cf71:	push   rdi
  40cf72:	push   rsi
  40cf73:	push   rbx
  40cf74:	sub    rsp,0x28
  40cf78:	lea    eax,[rdx-0x3]
  40cf7b:	mov    rsi,rdx
  40cf7e:	cmp    eax,0xb
  40cf81:	ja     0x40cfe0
  40cf83:	movzx  eax,BYTE PTR [rcx]
  40cf86:	lea    r8,[rip+0x20773]        # 0x42d700
  40cf8d:	mov    rdx,rax
  40cf90:	movzx  eax,BYTE PTR [r8+rax*1]
  40cf95:	add    eax,esi
  40cf97:	cmp    eax,0x11
  40cf9a:	ja     0x40cfe0
  40cf9c:	cdqe   
  40cf9e:	lea    rbx,[rip+0x2111b]        # 0x42e0c0
  40cfa5:	xor    ebp,ebp
  40cfa7:	shl    rax,0x4
  40cfab:	add    rbx,rax
  40cfae:	mov    rdi,QWORD PTR [rbx]
  40cfb1:	cmp    dl,BYTE PTR [rdi]
  40cfb3:	jne    0x40cfd5
  40cfb5:	lea    rdx,[rdi+0x1]
  40cfb9:	lea    r8d,[rsi-0x1]
  40cfbd:	add    rcx,0x1
  40cfc1:	call   0x422460
  40cfc6:	test   eax,eax
  40cfc8:	jne    0x40cfd5
  40cfca:	mov    esi,esi
  40cfcc:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40cfd0:	jne    0x40cfd5
  40cfd2:	mov    ebp,DWORD PTR [rbx+0x8]
  40cfd5:	mov    eax,ebp
  40cfd7:	add    rsp,0x28
  40cfdb:	pop    rbx
  40cfdc:	pop    rsi
  40cfdd:	pop    rdi
  40cfde:	pop    rbp
  40cfdf:	ret    
  40cfe0:	xor    ebp,ebp
  40cfe2:	mov    eax,ebp
  40cfe4:	add    rsp,0x28
  40cfe8:	pop    rbx
  40cfe9:	pop    rsi
  40cfea:	pop    rdi
  40cfeb:	pop    rbp
  40cfec:	ret    
  40cfed:	nop    DWORD PTR [rax]
  40cff0:	push   rbp
  40cff1:	push   rdi
  40cff2:	push   rsi
  40cff3:	push   rbx
  40cff4:	sub    rsp,0x28
  40cff8:	lea    eax,[rdx-0x4]
  40cffb:	mov    rsi,rdx
  40cffe:	cmp    eax,0x4
  40d001:	ja     0x40d060
  40d003:	movzx  eax,BYTE PTR [rcx]
  40d006:	lea    r8,[rip+0x205f3]        # 0x42d600
  40d00d:	mov    rdx,rax
  40d010:	movzx  eax,BYTE PTR [r8+rax*1]
  40d015:	add    eax,esi
  40d017:	cmp    eax,0x9
  40d01a:	ja     0x40d060
  40d01c:	cdqe   
  40d01e:	lea    rbx,[rip+0x20f9b]        # 0x42dfc0
  40d025:	xor    ebp,ebp
  40d027:	shl    rax,0x4
  40d02b:	add    rbx,rax
  40d02e:	mov    rdi,QWORD PTR [rbx]
  40d031:	cmp    dl,BYTE PTR [rdi]
  40d033:	jne    0x40d055
  40d035:	lea    rdx,[rdi+0x1]
  40d039:	lea    r8d,[rsi-0x1]
  40d03d:	add    rcx,0x1
  40d041:	call   0x422460
  40d046:	test   eax,eax
  40d048:	jne    0x40d055
  40d04a:	mov    esi,esi
  40d04c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40d050:	jne    0x40d055
  40d052:	mov    ebp,DWORD PTR [rbx+0x8]
  40d055:	mov    eax,ebp
  40d057:	add    rsp,0x28
  40d05b:	pop    rbx
  40d05c:	pop    rsi
  40d05d:	pop    rdi
  40d05e:	pop    rbp
  40d05f:	ret    
  40d060:	xor    ebp,ebp
  40d062:	mov    eax,ebp
  40d064:	add    rsp,0x28
  40d068:	pop    rbx
  40d069:	pop    rsi
  40d06a:	pop    rdi
  40d06b:	pop    rbp
  40d06c:	ret    
  40d06d:	nop    DWORD PTR [rax]
  40d070:	push   rbx
  40d071:	sub    rsp,0x20
  40d075:	cmp    rcx,0xf
  40d079:	jbe    0x40d0dc
  40d07b:	mov    eax,r8d
  40d07e:	mov    r9,rdx
  40d081:	cmp    r8d,DWORD PTR [rcx+0xb0]
  40d088:	lea    rdx,[rax+rax*2]
  40d08c:	lea    rdx,[rax+rdx*4]
  40d090:	mov    rax,QWORD PTR [rcx+0x78]
  40d094:	lea    rdx,[rax+rdx*8]
  40d098:	jae    0x40d113
  40d09a:	mov    eax,DWORD PTR [rdx+0x10]
  40d09d:	and    eax,0xfffff00
  40d0a2:	mov    DWORD PTR [rdx+0x10],eax
  40d0a5:	mov    r8d,DWORD PTR [r9+0x10]
  40d0a9:	and    r8d,0xf00000ff
  40d0b0:	or     eax,r8d
  40d0b3:	mov    r8,QWORD PTR [r9+0x18]
  40d0b7:	test   al,0x4
  40d0b9:	mov    DWORD PTR [rdx+0x10],eax
  40d0bc:	mov    QWORD PTR [rdx+0x18],r8
  40d0c0:	jne    0x40d0f0
  40d0c2:	xor    eax,eax
  40d0c4:	and    DWORD PTR [r9+0x10],0xfffff00
  40d0cc:	mov    WORD PTR [r9+0xe],ax
  40d0d1:	mov    rax,QWORD PTR [rdx+0x38]
  40d0d5:	test   rax,rax
  40d0d8:	je     0x40d0dc
  40d0da:	call   rax
  40d0dc:	xor    ebx,ebx
  40d0de:	mov    eax,ebx
  40d0e0:	add    rsp,0x20
  40d0e4:	pop    rbx
  40d0e5:	ret    
  40d0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0f0:	movzx  eax,WORD PTR [rdx+0xe]
  40d0f4:	add    eax,0x1
  40d0f7:	cmp    ax,WORD PTR [rdx+0xc]
  40d0fb:	mov    WORD PTR [rdx+0xe],ax
  40d0ff:	jbe    0x40d0c2
  40d101:	test   BYTE PTR [rcx+0x10],0x4
  40d105:	mov    ebx,0xffffffff
  40d10a:	je     0x40d0de
  40d10c:	call   0x409980
  40d111:	jmp    0x40d0de
  40d113:	call   QWORD PTR [rip+0x8f30b]        # 0x49c424
  40d119:	mov    rcx,QWORD PTR [rip+0x1b070]        # 0x428190
  40d120:	lea    rdx,[rax+0x60]
  40d124:	call   0x422538
  40d129:	mov    ecx,0x1
  40d12e:	call   0x408a40
  40d133:	nop
  40d134:	xchg   ax,ax
  40d136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d140:	push   rsi
  40d141:	push   rbx
  40d142:	sub    rsp,0x38
  40d146:	cmp    rcx,0xf
  40d14a:	jbe    0x40d19b
  40d14c:	test   rdx,rdx
  40d14f:	je     0x40d19b
  40d151:	mov    eax,DWORD PTR [rdx+0x10]
  40d154:	mov    esi,eax
  40d156:	and    esi,0x8
  40d159:	jne    0x40d19b
  40d15b:	mov    rcx,QWORD PTR [rdx+0x18]
  40d15f:	test   rcx,rcx
  40d162:	je     0x40d1e0
  40d164:	mov    rbx,rdx
  40d167:	movzx  edx,BYTE PTR [rcx]
  40d16a:	cmp    dl,0x46
  40d16d:	je     0x40d194
  40d16f:	jg     0x40d1b1
  40d171:	cmp    dl,0x23
  40d174:	je     0x40d1c2
  40d176:	cmp    dl,0x30
  40d179:	jne    0x40d1f0
  40d17b:	lea    rdx,[rsp+0x28]
  40d180:	xor    r8d,r8d
  40d183:	call   0x422438
  40d188:	test   eax,eax
  40d18a:	mov    eax,DWORD PTR [rbx+0x10]
  40d18d:	je     0x40d1d0
  40d18f:	mov    esi,0x1
  40d194:	test   al,0x40
  40d196:	jne    0x40d1a2
  40d198:	mov    DWORD PTR [rbx+0x18],esi
  40d19b:	add    rsp,0x38
  40d19f:	pop    rbx
  40d1a0:	pop    rsi
  40d1a1:	ret    
  40d1a2:	mov    rcx,QWORD PTR [rbx+0x18]
  40d1a6:	call   0x422528
  40d1ab:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40d1af:	jmp    0x40d198
  40d1b1:	cmp    dl,0x66
  40d1b4:	je     0x40d194
  40d1b6:	cmp    dl,0x6e
  40d1b9:	je     0x40d194
  40d1bb:	cmp    dl,0x4e
  40d1be:	jne    0x40d18f
  40d1c0:	jmp    0x40d194
  40d1c2:	xor    esi,esi
  40d1c4:	cmp    BYTE PTR [rcx+0x1],0x66
  40d1c8:	setne  sil
  40d1cc:	jmp    0x40d194
  40d1ce:	xchg   ax,ax
  40d1d0:	mov    rdx,QWORD PTR [rsp+0x28]
  40d1d5:	xor    esi,esi
  40d1d7:	cmp    BYTE PTR [rdx],0x0
  40d1da:	setne  sil
  40d1de:	jmp    0x40d194
  40d1e0:	mov    DWORD PTR [rdx+0x18],0x0
  40d1e7:	jmp    0x40d19b
  40d1e9:	nop    DWORD PTR [rax+0x0]
  40d1f0:	test   dl,dl
  40d1f2:	jne    0x40d18f
  40d1f4:	jmp    0x40d194
  40d1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d200:	sub    rsp,0x28
  40d204:	test   rcx,rcx
  40d207:	je     0x40d270
  40d209:	mov    eax,DWORD PTR [rcx+0x10]
  40d20c:	and    eax,0xf000
  40d211:	cmp    eax,0x6000
  40d216:	jne    0x40d270
  40d218:	mov    rcx,QWORD PTR [rcx+0x20]
  40d21c:	test   rcx,rcx
  40d21f:	je     0x40d24a
  40d221:	mov    r8d,DWORD PTR [rcx]
  40d224:	xor    r9d,r9d
  40d227:	add    rcx,0x8
  40d22b:	jmp    0x40d244
  40d22d:	nop    DWORD PTR [rax]
  40d230:	add    rcx,0x8
  40d234:	test   r9b,r9b
  40d237:	mov    rax,QWORD PTR [rcx-0x8]
  40d23b:	jne    0x40d260
  40d23d:	cmp    rax,rdx
  40d240:	sete   r9b
  40d244:	sub    r8d,0x1
  40d248:	jns    0x40d230
  40d24a:	call   QWORD PTR [rip+0x8f224]        # 0x49c474
  40d250:	mov    DWORD PTR [rax],0x2
  40d256:	xor    eax,eax
  40d258:	jmp    0x40d265
  40d25a:	nop    WORD PTR [rax+rax*1+0x0]
  40d260:	test   rax,rax
  40d263:	je     0x40d24a
  40d265:	add    rsp,0x28
  40d269:	ret    
  40d26a:	nop    WORD PTR [rax+rax*1+0x0]
  40d270:	call   QWORD PTR [rip+0x8f1fe]        # 0x49c474
  40d276:	mov    DWORD PTR [rax],0x16
  40d27c:	xor    eax,eax
  40d27e:	add    rsp,0x28
  40d282:	ret    
  40d283:	nop    DWORD PTR [rax]
  40d286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d290:	push   rbp
  40d291:	push   rdi
  40d292:	push   rsi
  40d293:	push   rbx
  40d294:	sub    rsp,0x28
  40d298:	test   rcx,rcx
  40d29b:	mov    rdi,rdx
  40d29e:	je     0x40d2f0
  40d2a0:	cmp    DWORD PTR [rcx],0x6
  40d2a3:	jne    0x40d2f0
  40d2a5:	mov    rax,QWORD PTR [rcx+0x10]
  40d2a9:	mov    edx,DWORD PTR [rax]
  40d2ab:	test   edx,edx
  40d2ad:	jle    0x40d320
  40d2af:	test   rdi,rdi
  40d2b2:	lea    rbx,[rax+0x8]
  40d2b6:	je     0x40d310
  40d2b8:	lea    eax,[rdx-0x1]
  40d2bb:	lea    rbp,[rbx+rax*8+0x8]
  40d2c0:	jmp    0x40d2c7
  40d2c2:	cmp    rbx,rbp
  40d2c5:	je     0x40d320
  40d2c7:	add    rbx,0x8
  40d2cb:	mov    rsi,QWORD PTR [rbx-0x8]
  40d2cf:	mov    rdx,rdi
  40d2d2:	mov    rcx,QWORD PTR [rsi+0x8]
  40d2d6:	call   0x422488
  40d2db:	test   eax,eax
  40d2dd:	jne    0x40d2c2
  40d2df:	mov    rax,rsi
  40d2e2:	add    rsp,0x28
  40d2e6:	pop    rbx
  40d2e7:	pop    rsi
  40d2e8:	pop    rdi
  40d2e9:	pop    rbp
  40d2ea:	ret    
  40d2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2f0:	xor    esi,esi
  40d2f2:	call   QWORD PTR [rip+0x8f17c]        # 0x49c474
  40d2f8:	mov    DWORD PTR [rax],0x16
  40d2fe:	mov    rax,rsi
  40d301:	add    rsp,0x28
  40d305:	pop    rbx
  40d306:	pop    rsi
  40d307:	pop    rdi
  40d308:	pop    rbp
  40d309:	ret    
  40d30a:	nop    WORD PTR [rax+rax*1+0x0]
  40d310:	mov    rsi,QWORD PTR [rax+0x8]
  40d314:	test   rsi,rsi
  40d317:	jne    0x40d2df
  40d319:	nop    DWORD PTR [rax+0x0]
  40d320:	call   QWORD PTR [rip+0x8f14e]        # 0x49c474
  40d326:	xor    esi,esi
  40d328:	mov    DWORD PTR [rax],0x2
  40d32e:	jmp    0x40d2df
  40d330:	push   r12
  40d332:	push   rbp
  40d333:	push   rdi
  40d334:	push   rsi
  40d335:	push   rbx
  40d336:	sub    rsp,0x20
  40d33a:	test   rcx,rcx
  40d33d:	mov    rbp,rdx
  40d340:	mov    r12,r8
  40d343:	je     0x40d3c0
  40d345:	mov    eax,DWORD PTR [rcx+0x10]
  40d348:	and    eax,0xf000
  40d34d:	cmp    eax,0x6000
  40d352:	jne    0x40d3c0
  40d354:	mov    rax,QWORD PTR [rcx+0x20]
  40d358:	test   rax,rax
  40d35b:	je     0x40d3a5
  40d35d:	mov    ebx,DWORD PTR [rax]
  40d35f:	lea    rsi,[rax+0x8]
  40d363:	test   ebx,ebx
  40d365:	je     0x40d3a5
  40d367:	test   rdx,rdx
  40d36a:	je     0x40d3d9
  40d36c:	nop    DWORD PTR [rax+0x0]
  40d370:	sub    ebx,0x1
  40d373:	js     0x40d3a5
  40d375:	add    rsi,0x8
  40d379:	mov    rdi,QWORD PTR [rsi-0x8]
  40d37d:	mov    rdx,rbp
  40d380:	mov    rcx,rdi
  40d383:	call   0x40d290
  40d388:	test   rax,rax
  40d38b:	je     0x40d370
  40d38d:	test   r12,r12
  40d390:	jne    0x40d370
  40d392:	test   rdi,rdi
  40d395:	mov    rax,rdi
  40d398:	je     0x40d3a5
  40d39a:	add    rsp,0x20
  40d39e:	pop    rbx
  40d39f:	pop    rsi
  40d3a0:	pop    rdi
  40d3a1:	pop    rbp
  40d3a2:	pop    r12
  40d3a4:	ret    
  40d3a5:	call   QWORD PTR [rip+0x8f0c9]        # 0x49c474
  40d3ab:	mov    DWORD PTR [rax],0x2
  40d3b1:	xor    eax,eax
  40d3b3:	add    rsp,0x20
  40d3b7:	pop    rbx
  40d3b8:	pop    rsi
  40d3b9:	pop    rdi
  40d3ba:	pop    rbp
  40d3bb:	pop    r12
  40d3bd:	ret    
  40d3be:	xchg   ax,ax
  40d3c0:	call   QWORD PTR [rip+0x8f0ae]        # 0x49c474
  40d3c6:	mov    DWORD PTR [rax],0x16
  40d3cc:	xor    eax,eax
  40d3ce:	add    rsp,0x20
  40d3d2:	pop    rbx
  40d3d3:	pop    rsi
  40d3d4:	pop    rdi
  40d3d5:	pop    rbp
  40d3d6:	pop    r12
  40d3d8:	ret    
  40d3d9:	mov    rax,QWORD PTR [rax+0x8]
  40d3dd:	jmp    0x40d39a
  40d3df:	nop
  40d3e0:	push   rbx
  40d3e1:	sub    rsp,0x20
  40d3e5:	test   rcx,rcx
  40d3e8:	je     0x40d440
  40d3ea:	cmp    DWORD PTR [rcx],0x6
  40d3ed:	jne    0x40d440
  40d3ef:	mov    r8,QWORD PTR [rcx+0x10]
  40d3f3:	mov    eax,DWORD PTR [r8]
  40d3f6:	add    r8,0x8
  40d3fa:	jmp    0x40d40d
  40d3fc:	nop    DWORD PTR [rax+0x0]
  40d400:	lea    rcx,[r8+0x8]
  40d404:	cmp    QWORD PTR [rcx-0x8],rdx
  40d408:	je     0x40d430
  40d40a:	mov    r8,rcx
  40d40d:	sub    eax,0x1
  40d410:	lea    ecx,[rax+0x1]
  40d413:	test   ecx,ecx
  40d415:	jg     0x40d400
  40d417:	mov    ebx,0x16
  40d41c:	call   QWORD PTR [rip+0x8f052]        # 0x49c474
  40d422:	mov    DWORD PTR [rax],ebx
  40d424:	xor    eax,eax
  40d426:	add    rsp,0x20
  40d42a:	pop    rbx
  40d42b:	ret    
  40d42c:	nop    DWORD PTR [rax+0x0]
  40d430:	test   eax,eax
  40d432:	jne    0x40d454
  40d434:	mov    ebx,0x2
  40d439:	jmp    0x40d41c
  40d43b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d440:	call   QWORD PTR [rip+0x8f02e]        # 0x49c474
  40d446:	mov    DWORD PTR [rax],0x16
  40d44c:	xor    eax,eax
  40d44e:	add    rsp,0x20
  40d452:	pop    rbx
  40d453:	ret    
  40d454:	mov    rax,QWORD PTR [r8+0x8]
  40d458:	add    rsp,0x20
  40d45c:	pop    rbx
  40d45d:	ret    
  40d45e:	xchg   ax,ax
  40d460:	push   rsi
  40d461:	push   rbx
  40d462:	sub    rsp,0x38
  40d466:	movzx  eax,BYTE PTR [rcx]
  40d469:	mov    rsi,rdx
  40d46c:	cmp    al,0x78
  40d46e:	mov    BYTE PTR [rdx],al
  40d470:	ja     0x40d5c3
  40d476:	lea    r9,[rip+0x1fa93]        # 0x42cf10
  40d47d:	movsxd rax,DWORD PTR [r9+rax*4]
  40d481:	add    r9,rax
  40d484:	jmp    r9
  40d487:	nop    WORD PTR [rax+rax*1+0x0]
  40d490:	mov    ebx,0x1
  40d495:	mov    BYTE PTR [rsi],r8b
  40d498:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4a0:	mov    eax,ebx
  40d4a2:	add    rsp,0x38
  40d4a6:	pop    rbx
  40d4a7:	pop    rsi
  40d4a8:	ret    
  40d4a9:	nop    DWORD PTR [rax+0x0]
  40d4b0:	xor    ebx,ebx
  40d4b2:	jmp    0x40d4a0
  40d4b4:	mov    BYTE PTR [rdx],0xb
  40d4b7:	mov    ebx,0x1
  40d4bc:	jmp    0x40d4a0
  40d4be:	xchg   ax,ax
  40d4c0:	mov    BYTE PTR [rdx],0xd
  40d4c3:	mov    ebx,0x1
  40d4c8:	jmp    0x40d4a0
  40d4ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d4d0:	mov    BYTE PTR [rdx],0x9
  40d4d3:	mov    ebx,0x1
  40d4d8:	jmp    0x40d4a0
  40d4da:	nop    WORD PTR [rax+rax*1+0x0]
  40d4e0:	cmp    BYTE PTR [rcx+0x1],0xa
  40d4e4:	mov    ebx,0x1
  40d4e9:	jne    0x40d4a0
  40d4eb:	mov    bl,0x2
  40d4ed:	jmp    0x40d495
  40d4ef:	nop
  40d4f0:	movzx  eax,BYTE PTR [rcx]
  40d4f3:	mov    ebx,0x1
  40d4f8:	mov    BYTE PTR [rsp+0x20],al
  40d4fc:	mov    eax,ebx
  40d4fe:	movzx  edx,BYTE PTR [rcx+rax*1]
  40d502:	cmp    dl,0x7f
  40d505:	ja     0x40d60a
  40d50b:	lea    r9,[rip+0x238ee]        # 0x430e00
  40d512:	movzx  r8d,dl
  40d516:	test   BYTE PTR [r9+r8*4+0x2],0x1
  40d51c:	je     0x40d60a
  40d522:	cmp    ebx,0x2
  40d525:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  40d529:	je     0x40d600
  40d52f:	mov    ebx,0x2
  40d534:	jmp    0x40d4fc
  40d536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d540:	movzx  eax,BYTE PTR [rcx+0x1]
  40d544:	mov    ebx,0x1
  40d549:	cmp    al,0x7f
  40d54b:	ja     0x40d4a0
  40d551:	lea    rdx,[rip+0x238a8]        # 0x430e00
  40d558:	movzx  r8d,al
  40d55c:	test   DWORD PTR [rdx+r8*4],0x70000
  40d564:	je     0x40d4a0
  40d56a:	movzx  ecx,BYTE PTR [rcx+0x2]
  40d56e:	mov    BYTE PTR [rsp+0x20],al
  40d572:	cmp    cl,0x7f
  40d575:	movzx  eax,cl
  40d578:	ja     0x40d635
  40d57e:	test   DWORD PTR [rdx+rax*4],0x70000
  40d585:	je     0x40d635
  40d58b:	mov    BYTE PTR [rsp+0x21],cl
  40d58f:	mov    ebx,0x3
  40d594:	mov    eax,0x2
  40d599:	lea    rcx,[rsp+0x20]
  40d59e:	mov    r8d,0x10
  40d5a4:	xor    edx,edx
  40d5a6:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40d5ab:	call   0x422430
  40d5b0:	mov    BYTE PTR [rsi],al
  40d5b2:	jmp    0x40d4a0
  40d5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d5c0:	mov    BYTE PTR [rdx],0x7
  40d5c3:	mov    ebx,0x1
  40d5c8:	mov    eax,ebx
  40d5ca:	add    rsp,0x38
  40d5ce:	pop    rbx
  40d5cf:	pop    rsi
  40d5d0:	ret    
  40d5d1:	mov    BYTE PTR [rdx],0x8
  40d5d4:	mov    ebx,0x1
  40d5d9:	jmp    0x40d4a0
  40d5de:	xchg   ax,ax
  40d5e0:	mov    BYTE PTR [rdx],0xc
  40d5e3:	mov    ebx,0x1
  40d5e8:	jmp    0x40d4a0
  40d5ed:	nop    DWORD PTR [rax]
  40d5f0:	mov    BYTE PTR [rdx],0xa
  40d5f3:	mov    ebx,0x1
  40d5f8:	jmp    0x40d4a0
  40d5fd:	nop    DWORD PTR [rax]
  40d600:	mov    ebx,0x3
  40d605:	mov    eax,0x3
  40d60a:	lea    rcx,[rsp+0x20]
  40d60f:	xor    edx,edx
  40d611:	mov    r8d,0x8
  40d617:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40d61c:	call   0x422430
  40d621:	mov    edx,0xff
  40d626:	cmp    eax,0xff
  40d62b:	cmova  eax,edx
  40d62e:	mov    BYTE PTR [rsi],al
  40d630:	jmp    0x40d4a0
  40d635:	mov    ebx,0x2
  40d63a:	mov    eax,0x1
  40d63f:	jmp    0x40d599
  40d644:	xchg   ax,ax
  40d646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d650:	push   r14
  40d652:	push   r13
  40d654:	push   r12
  40d656:	push   rbp
  40d657:	push   rdi
  40d658:	push   rsi
  40d659:	push   rbx
  40d65a:	sub    rsp,0x30
  40d65e:	movzx  esi,BYTE PTR [rcx]
  40d661:	movzx  r8d,BYTE PTR [rcx+0x1]
  40d666:	mov    r13d,0x1
  40d66c:	lea    rax,[rsp+0x2c]
  40d671:	mov    rbp,rdx
  40d674:	test   rdx,rdx
  40d677:	lea    r9,[rcx+0x1]
  40d67b:	mov    rbx,rcx
  40d67e:	mov    DWORD PTR [rsp+0x2c],0x0
  40d686:	cmove  rbp,rax
  40d68a:	movabs r12,0x200000000000011
  40d694:	cmp    sil,r8b
  40d697:	je     0x40d6c9
  40d699:	cmp    r8b,0xa
  40d69d:	lea    r14,[rbx+0x1]
  40d6a1:	lea    rdi,[r9+0x1]
  40d6a5:	mov    BYTE PTR [rbx],r8b
  40d6a8:	je     0x40d770
  40d6ae:	cmp    r8b,0x5c
  40d6b2:	je     0x40d732
  40d6b4:	test   r8b,r8b
  40d6b7:	je     0x40d721
  40d6b9:	movzx  r8d,BYTE PTR [r9+0x1]
  40d6be:	mov    rbx,r14
  40d6c1:	mov    r9,rdi
  40d6c4:	cmp    sil,r8b
  40d6c7:	jne    0x40d699
  40d6c9:	lea    rdi,[r9+0x1]
  40d6cd:	mov    BYTE PTR [rbx],0x0
  40d6d0:	movzx  esi,BYTE PTR [rdi]
  40d6d3:	cmp    sil,0x7f
  40d6d7:	ja     0x40d6f1
  40d6d9:	lea    rdx,[rip+0x23720]        # 0x430e00
  40d6e0:	movzx  eax,sil
  40d6e4:	test   DWORD PTR [rdx+rax*4],0xc01
  40d6eb:	jne    0x40d780
  40d6f1:	cmp    sil,0x27
  40d6f5:	je     0x40d7e0
  40d6fb:	cmp    sil,0x2f
  40d6ff:	je     0x40d801
  40d705:	cmp    sil,0x22
  40d709:	je     0x40d7e0
  40d70f:	mov    rax,rdi
  40d712:	add    rsp,0x30
  40d716:	pop    rbx
  40d717:	pop    rsi
  40d718:	pop    rdi
  40d719:	pop    rbp
  40d71a:	pop    r12
  40d71c:	pop    r13
  40d71e:	pop    r14
  40d720:	ret    
  40d721:	xor    eax,eax
  40d723:	add    rsp,0x30
  40d727:	pop    rbx
  40d728:	pop    rsi
  40d729:	pop    rdi
  40d72a:	pop    rbp
  40d72b:	pop    r12
  40d72d:	pop    r13
  40d72f:	pop    r14
  40d731:	ret    
  40d732:	movzx  r8d,BYTE PTR [r9+0x1]
  40d737:	cmp    r8b,0xa
  40d73b:	je     0x40d7f0
  40d741:	cmp    sil,0x27
  40d745:	je     0x40d7a0
  40d747:	mov    r8d,0xa
  40d74d:	mov    rdx,rbx
  40d750:	mov    rcx,rdi
  40d753:	call   0x40d460
  40d758:	test   eax,eax
  40d75a:	je     0x40d721
  40d75c:	mov    eax,eax
  40d75e:	mov    rbx,r14
  40d761:	lea    r9,[rdi+rax*1]
  40d765:	movzx  r8d,BYTE PTR [r9]
  40d769:	jmp    0x40d694
  40d76e:	xchg   ax,ax
  40d770:	add    DWORD PTR [rbp+0x0],0x1
  40d774:	jmp    0x40d6b9
  40d779:	nop    DWORD PTR [rax+0x0]
  40d780:	add    rdi,0x1
  40d784:	cmp    sil,0xa
  40d788:	jne    0x40d6d0
  40d78e:	add    DWORD PTR [rbp+0x0],0x1
  40d792:	jmp    0x40d6d0
  40d797:	nop    WORD PTR [rax+rax*1+0x0]
  40d7a0:	lea    ecx,[r8-0x23]
  40d7a4:	cmp    cl,0x39
  40d7a7:	ja     0x40d7d0
  40d7a9:	mov    rax,r13
  40d7ac:	shl    rax,cl
  40d7af:	test   rax,r12
  40d7b2:	je     0x40d7d0
  40d7b4:	mov    BYTE PTR [rbx],r8b
  40d7b7:	add    r9,0x2
  40d7bb:	movzx  r8d,BYTE PTR [r9]
  40d7bf:	mov    rbx,r14
  40d7c2:	jmp    0x40d694
  40d7c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7d0:	mov    r9,rdi
  40d7d3:	mov    rbx,r14
  40d7d6:	jmp    0x40d694
  40d7db:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7e0:	lea    r9,[rdi+0x1]
  40d7e4:	movzx  r8d,BYTE PTR [rdi+0x1]
  40d7e9:	jmp    0x40d694
  40d7ee:	xchg   ax,ax
  40d7f0:	add    DWORD PTR [rbp+0x0],0x1
  40d7f4:	add    r9,0x2
  40d7f8:	movzx  r8d,BYTE PTR [r9]
  40d7fc:	jmp    0x40d694
  40d801:	movzx  eax,BYTE PTR [rdi+0x1]
  40d805:	cmp    al,0x2a
  40d807:	je     0x40d830
  40d809:	cmp    al,0x2f
  40d80b:	jne    0x40d870
  40d80d:	mov    rcx,rdi
  40d810:	mov    edx,0xa
  40d815:	call   0x422490
  40d81a:	test   rax,rax
  40d81d:	mov    rdi,rax
  40d820:	jne    0x40d6d0
  40d826:	jmp    0x40d70f
  40d82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d830:	lea    rcx,[rdi+0x2]
  40d834:	lea    rdx,[rip+0x1f8b9]        # 0x42d0f4
  40d83b:	call   0x422440
  40d840:	test   rax,rax
  40d843:	je     0x40d870
  40d845:	cmp    rdi,rax
  40d848:	jae    0x40d880
  40d84a:	mov    edx,0x2f
  40d84f:	jmp    0x40d859
  40d851:	cmp    rdi,rax
  40d854:	je     0x40d880
  40d856:	movzx  edx,BYTE PTR [rdi]
  40d859:	add    rdi,0x1
  40d85d:	cmp    dl,0xa
  40d860:	jne    0x40d851
  40d862:	add    DWORD PTR [rbp+0x0],0x1
  40d866:	jmp    0x40d851
  40d868:	nop    DWORD PTR [rax+rax*1+0x0]
  40d870:	xor    edi,edi
  40d872:	jmp    0x40d70f
  40d877:	nop    WORD PTR [rax+rax*1+0x0]
  40d880:	lea    rdi,[rax+0x2]
  40d884:	jmp    0x40d6d0
  40d889:	nop    DWORD PTR [rax+0x0]
  40d890:	push   r15
  40d892:	push   r14
  40d894:	push   r13
  40d896:	push   r12
  40d898:	push   rbp
  40d899:	push   rdi
  40d89a:	push   rsi
  40d89b:	push   rbx
  40d89c:	sub    rsp,0xe8
  40d8a3:	test   rcx,rcx
  40d8a6:	mov    rbx,rcx
  40d8a9:	mov    rbp,rdx
  40d8ac:	mov    rdi,r8
  40d8af:	je     0x40e43a
  40d8b5:	mov    rax,QWORD PTR [rip+0x5b324]        # 0x468be0
  40d8bc:	test   rax,rax
  40d8bf:	je     0x40df7c
  40d8c5:	movzx  r8d,BYTE PTR [rbx]
  40d8c9:	cmp    BYTE PTR [rax+r8*1],0x0
  40d8ce:	mov    rcx,r8
  40d8d1:	je     0x40d8e3
  40d8d3:	add    rbx,0x1
  40d8d7:	movzx  edx,BYTE PTR [rbx]
  40d8da:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d8de:	mov    rcx,rdx
  40d8e1:	jne    0x40d8d3
  40d8e3:	test   cl,cl
  40d8e5:	je     0x40dde3
  40d8eb:	lea    rcx,[rdi+0x19]
  40d8ef:	call   0x40a440
  40d8f4:	lea    rcx,[rax+0x18]
  40d8f8:	mov    rsi,rax
  40d8fb:	mov    rdx,rbp
  40d8fe:	mov    r8,rdi
  40d901:	mov    DWORD PTR [rax],0x6
  40d907:	lea    rbp,[rsp+0x90]
  40d90f:	mov    QWORD PTR [rax+0x8],rcx
  40d913:	lea    r13,[rsi+0x10]
  40d917:	call   0x4224d8
  40d91c:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  40d921:	mov    ecx,0x38
  40d926:	lea    r12,[rbp+0x2]
  40d92a:	call   0x40a440
  40d92f:	mov    QWORD PTR [rsi+0x10],rax
  40d933:	mov    DWORD PTR [rax],0x0
  40d939:	mov    DWORD PTR [rax+0x4],0x6
  40d940:	lea    rax,[rsp+0x70]
  40d945:	mov    QWORD PTR [rsp+0x48],rax
  40d94a:	lea    rax,[rsp+0x98]
  40d952:	mov    QWORD PTR [rsp+0x38],rax
  40d957:	mov    rax,QWORD PTR [rip+0x5b282]        # 0x468be0
  40d95e:	test   rax,rax
  40d961:	jne    0x40d974
  40d963:	jmp    0x40dd45
  40d968:	nop    DWORD PTR [rax+rax*1+0x0]
  40d970:	add    rbx,0x1
  40d974:	movzx  ecx,BYTE PTR [rbx]
  40d977:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d97b:	mov    rdx,rcx
  40d97e:	jne    0x40d970
  40d980:	cmp    cl,0x7f
  40d983:	ja     0x40da20
  40d989:	movzx  eax,cl
  40d98c:	lea    rcx,[rip+0x2346d]        # 0x430e00
  40d993:	test   DWORD PTR [rcx+rax*4],0x180040
  40d99a:	je     0x40da20
  40d9a0:	mov    rax,QWORD PTR [rip+0x5b2b9]        # 0x468c60
  40d9a7:	lea    rdi,[rbx+0x1]
  40d9ab:	test   rax,rax
  40d9ae:	je     0x40e39a
  40d9b4:	movzx  edx,BYTE PTR [rbx+0x1]
  40d9b8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d9bc:	je     0x40d9cd
  40d9be:	xchg   ax,ax
  40d9c0:	add    rdi,0x1
  40d9c4:	movzx  edx,BYTE PTR [rdi]
  40d9c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d9cb:	jne    0x40d9c0
  40d9cd:	xor    eax,eax
  40d9cf:	cmp    BYTE PTR [rdi-0x1],0x3a
  40d9d3:	sete   al
  40d9d6:	sub    rdi,rax
  40d9d9:	mov    rax,QWORD PTR [rip+0x5b1f0]        # 0x468bd0
  40d9e0:	mov    r8,rdi
  40d9e3:	sub    r8,rbx
  40d9e6:	test   rax,rax
  40d9e9:	jne    0x40d9f4
  40d9eb:	jmp    0x40e381
  40d9f0:	add    rdi,0x1
  40d9f4:	movzx  ecx,BYTE PTR [rdi]
  40d9f7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d9fb:	mov    rdx,rcx
  40d9fe:	jne    0x40d9f0
  40da00:	lea    r14,[rip+0x1f6f5]        # 0x42d0fc
  40da07:	cmp    dl,0x3d
  40da0a:	ja     0x40dc52
  40da10:	movzx  eax,dl
  40da13:	movsxd rax,DWORD PTR [r14+rax*4]
  40da17:	add    rax,r14
  40da1a:	jmp    rax
  40da1c:	nop    DWORD PTR [rax+0x0]
  40da20:	cmp    dl,0x23
  40da23:	je     0x40db14
  40da29:	cmp    dl,0x3c
  40da2c:	je     0x40db30
  40da32:	test   dl,dl
  40da34:	je     0x40da84
  40da36:	mov    rcx,QWORD PTR [rsi+0x10]
  40da3a:	call   0x422528
  40da3f:	mov    rcx,rsi
  40da42:	call   0x422528
  40da47:	xor    eax,eax
  40da49:	add    rsp,0xe8
  40da50:	pop    rbx
  40da51:	pop    rsi
  40da52:	pop    rdi
  40da53:	pop    rbp
  40da54:	pop    r12
  40da56:	pop    r13
  40da58:	pop    r14
  40da5a:	pop    r15
  40da5c:	ret    
  40da5d:	add    rdi,0x1
  40da61:	mov    rdx,rbx
  40da64:	mov    QWORD PTR [rsp+0x20],0x0
  40da6d:	xor    r9d,r9d
  40da70:	mov    rcx,r13
  40da73:	mov    rbx,rdi
  40da76:	call   0x40a550
  40da7b:	test   rbx,rbx
  40da7e:	jne    0x40d957
  40da84:	mov    r15,QWORD PTR [rsi+0x10]
  40da88:	mov    edx,DWORD PTR [r15]
  40da8b:	test   edx,edx
  40da8d:	je     0x40e44d
  40da93:	cmp    edx,0x1
  40da96:	mov    rax,rsi
  40da99:	jle    0x40da49
  40da9b:	lea    r12d,[rdx-0x2]
  40da9f:	xor    edi,edi
  40daa1:	add    r12,0x1
  40daa5:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  40daaa:	mov    ebx,edi
  40daac:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  40dab1:	mov    r13,QWORD PTR [rbp+0x8]
  40dab5:	jmp    0x40dada
  40dab7:	nop    WORD PTR [rax+rax*1+0x0]
  40dac0:	lea    eax,[rbx+0x1]
  40dac3:	sub    ebx,0x1
  40dac6:	cmp    ebx,0xffffffff
  40dac9:	cdqe   
  40dacb:	mov    QWORD PTR [r15+rax*8+0x8],r14
  40dad0:	movsxd rax,ebx
  40dad3:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  40dad8:	je     0x40db10
  40dada:	mov    rcx,QWORD PTR [r14+0x8]
  40dade:	mov    rdx,r13
  40dae1:	call   0x422488
  40dae6:	test   eax,eax
  40dae8:	jg     0x40dac0
  40daea:	add    ebx,0x1
  40daed:	add    rdi,0x1
  40daf1:	movsxd rbx,ebx
  40daf4:	cmp    rdi,r12
  40daf7:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  40dafc:	jne    0x40daa5
  40dafe:	mov    rax,rsi
  40db01:	jmp    0x40da49
  40db06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db10:	xor    ebx,ebx
  40db12:	jmp    0x40daed
  40db14:	mov    rcx,rbx
  40db17:	mov    edx,0xa
  40db1c:	call   0x422490
  40db21:	mov    rbx,rax
  40db24:	jmp    0x40da7b
  40db29:	nop    DWORD PTR [rax+0x0]
  40db30:	mov    eax,DWORD PTR [rip+0x1a59a]        # 0x4280d0
  40db36:	mov    DWORD PTR [rsp+0x54],eax
  40db3a:	lea    rax,[rbx+0x1]
  40db3e:	mov    QWORD PTR [rsp+0x40],rax
  40db43:	movzx  eax,BYTE PTR [rbx+0x1]
  40db47:	cmp    al,0x7f
  40db49:	ja     0x40dbc0
  40db4b:	lea    r10,[rip+0x232ae]        # 0x430e00
  40db52:	movzx  edx,al
  40db55:	test   DWORD PTR [r10+rdx*4],0x180040
  40db5d:	je     0x40dbc0
  40db5f:	mov    rax,QWORD PTR [rip+0x5b0fa]        # 0x468c60
  40db66:	lea    rdi,[rbx+0x2]
  40db6a:	test   rax,rax
  40db6d:	je     0x40e497
  40db73:	movzx  edx,BYTE PTR [rbx+0x2]
  40db77:	cmp    BYTE PTR [rax+rdx*1],0x0
  40db7b:	je     0x40db8d
  40db7d:	nop    DWORD PTR [rax]
  40db80:	add    rdi,0x1
  40db84:	movzx  edx,BYTE PTR [rdi]
  40db87:	cmp    BYTE PTR [rax+rdx*1],0x0
  40db8b:	jne    0x40db80
  40db8d:	mov    r14,rdi
  40db90:	sub    r14,QWORD PTR [rsp+0x40]
  40db95:	cmp    r14,0x40
  40db99:	ja     0x40dbb1
  40db9b:	mov    DWORD PTR [rsp+0x70],0x1
  40dba3:	movzx  eax,BYTE PTR [rdi]
  40dba6:	cmp    al,0x7f
  40dba8:	movzx  edx,al
  40dbab:	jbe    0x40de90
  40dbb1:	mov    eax,DWORD PTR [rsp+0x54]
  40dbb5:	mov    DWORD PTR [rip+0x1a515],eax        # 0x4280d0
  40dbbb:	jmp    0x40da36
  40dbc0:	cmp    al,0x21
  40dbc2:	je     0x40ddf6
  40dbc8:	cmp    al,0x3f
  40dbca:	jne    0x40da36
  40dbd0:	mov    rcx,QWORD PTR [rsp+0x40]
  40dbd5:	mov    edx,0x3e
  40dbda:	call   0x422490
  40dbdf:	test   rax,rax
  40dbe2:	je     0x40da36
  40dbe8:	lea    rbx,[rax+0x1]
  40dbec:	test   rbx,rbx
  40dbef:	je     0x40da36
  40dbf5:	cmp    BYTE PTR [rbx],0x2c
  40dbf8:	jne    0x40d957
  40dbfe:	add    rbx,0x1
  40dc02:	jmp    0x40da7b
  40dc07:	mov    rax,QWORD PTR [rip+0x5afc2]        # 0x468bd0
  40dc0e:	lea    r15,[rdi+0x1]
  40dc12:	test   rax,rax
  40dc15:	je     0x40e4b0
  40dc1b:	movzx  edx,BYTE PTR [rdi+0x1]
  40dc1f:	mov    rdi,r15
  40dc22:	cmp    BYTE PTR [rax+rdx*1],0x0
  40dc26:	mov    rcx,rdx
  40dc29:	je     0x40dc40
  40dc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc30:	add    rdi,0x1
  40dc34:	movzx  edx,BYTE PTR [rdi]
  40dc37:	cmp    BYTE PTR [rax+rdx*1],0x0
  40dc3b:	mov    rcx,rdx
  40dc3e:	jne    0x40dc30
  40dc40:	cmp    cl,0x3a
  40dc43:	mov    edx,ecx
  40dc45:	je     0x40dc50
  40dc47:	cmp    cl,0x3d
  40dc4a:	jne    0x40da07
  40dc50:	mov    edx,ecx
  40dc52:	mov    r15,rdi
  40dc55:	cmp    dl,0xa
  40dc58:	lea    rax,[rdi+0x2]
  40dc5c:	lea    r14,[r15+0x1]
  40dc60:	je     0x40dc83
  40dc62:	cmp    dl,0x2c
  40dc65:	je     0x40dd54
  40dc6b:	test   dl,dl
  40dc6d:	je     0x40df52
  40dc73:	movzx  edx,BYTE PTR [r14]
  40dc77:	mov    r15,r14
  40dc7a:	lea    r14,[r15+0x1]
  40dc7e:	cmp    dl,0xa
  40dc81:	jne    0x40dc62
  40dc83:	cmp    r14,rax
  40dc86:	jbe    0x40dd54
  40dc8c:	cmp    BYTE PTR [r14-0x2],0x5c
  40dc91:	jne    0x40dc99
  40dc93:	cmp    BYTE PTR [r14],0x0
  40dc97:	jne    0x40dc73
  40dc99:	mov    rax,r14
  40dc9c:	mov    rdx,rbx
  40dc9f:	mov    r9,rdi
  40dca2:	sub    rax,rdi
  40dca5:	mov    rcx,r13
  40dca8:	mov    rbx,r14
  40dcab:	sub    rax,0x1
  40dcaf:	mov    QWORD PTR [rsp+0x20],rax
  40dcb4:	call   0x40a550
  40dcb9:	test   rax,rax
  40dcbc:	jne    0x40dd7d
  40dcc2:	jmp    0x40d957
  40dcc7:	nop    WORD PTR [rax+rax*1+0x0]
  40dcd0:	lea    r15,[rdi+0x1]
  40dcd4:	jmp    0x40dcf3
  40dcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dce0:	cmp    al,dl
  40dce2:	je     0x40de19
  40dce8:	cmp    al,0x5c
  40dcea:	je     0x40de50
  40dcf0:	mov    r15,r14
  40dcf3:	lea    r14,[r15+0x1]
  40dcf7:	movzx  eax,BYTE PTR [r14-0x1]
  40dcfc:	test   al,al
  40dcfe:	jne    0x40dce0
  40dd00:	mov    rax,r15
  40dd03:	mov    rdx,rbx
  40dd06:	mov    r9,rdi
  40dd09:	sub    rax,rdi
  40dd0c:	mov    rcx,r13
  40dd0f:	mov    rbx,r15
  40dd12:	mov    QWORD PTR [rsp+0x20],rax
  40dd17:	call   0x40a550
  40dd1c:	test   rax,rax
  40dd1f:	je     0x40d957
  40dd25:	mov    r8d,DWORD PTR [rip+0x1a3a4]        # 0x4280d0
  40dd2c:	test   r8d,r8d
  40dd2f:	jne    0x40da7b
  40dd35:	lea    rcx,[rax+0x10]
  40dd39:	xor    edx,edx
  40dd3b:	call   0x40d650
  40dd40:	jmp    0x40da7b
  40dd45:	mov    ecx,0xc
  40dd4a:	call   0x409f50
  40dd4f:	jmp    0x40d974
  40dd54:	mov    rax,r14
  40dd57:	mov    rdx,rbx
  40dd5a:	mov    r9,rdi
  40dd5d:	sub    rax,rdi
  40dd60:	mov    rcx,r13
  40dd63:	mov    rbx,r14
  40dd66:	sub    rax,0x1
  40dd6a:	mov    QWORD PTR [rsp+0x20],rax
  40dd6f:	call   0x40a550
  40dd74:	test   rax,rax
  40dd77:	je     0x40da7b
  40dd7d:	add    rax,0x10
  40dd81:	jmp    0x40dd87
  40dd83:	add    rax,0x1
  40dd87:	cmp    BYTE PTR [rax],0xa
  40dd8a:	je     0x40dd83
  40dd8c:	mov    edx,0xa
  40dd91:	mov    rcx,rax
  40dd94:	call   0x422490
  40dd99:	test   rax,rax
  40dd9c:	je     0x40da7b
  40dda2:	cmp    BYTE PTR [rax-0x1],0x5c
  40dda6:	jne    0x40dd87
  40dda8:	movzx  ecx,BYTE PTR [rax]
  40ddab:	lea    rdx,[rax-0x1]
  40ddaf:	lea    r8,[rdx+0x1]
  40ddb3:	test   cl,cl
  40ddb5:	mov    BYTE PTR [rdx],cl
  40ddb7:	je     0x40da7b
  40ddbd:	cmp    cl,0x5c
  40ddc0:	jne    0x40ddca
  40ddc2:	cmp    BYTE PTR [rax+0x1],0xa
  40ddc6:	cmove  r8,rdx
  40ddca:	add    rax,0x1
  40ddce:	movzx  ecx,BYTE PTR [rax]
  40ddd1:	mov    rdx,r8
  40ddd4:	lea    r8,[rdx+0x1]
  40ddd8:	test   cl,cl
  40ddda:	mov    BYTE PTR [rdx],cl
  40dddc:	jne    0x40ddbd
  40ddde:	jmp    0x40da7b
  40dde3:	call   QWORD PTR [rip+0x8e68b]        # 0x49c474
  40dde9:	mov    DWORD PTR [rax],0x2
  40ddef:	xor    eax,eax
  40ddf1:	jmp    0x40da49
  40ddf6:	mov    rcx,QWORD PTR [rsp+0x40]
  40ddfb:	lea    rdx,[rip+0x1f2f5]        # 0x42d0f7
  40de02:	call   0x422440
  40de07:	test   rax,rax
  40de0a:	je     0x40da36
  40de10:	lea    rbx,[rax+0x3]
  40de14:	jmp    0x40dbec
  40de19:	mov    rax,r14
  40de1c:	mov    r9,rdi
  40de1f:	mov    rdx,rbx
  40de22:	sub    rax,rdi
  40de25:	mov    rcx,r13
  40de28:	mov    QWORD PTR [rsp+0x20],rax
  40de2d:	call   0x40a550
  40de32:	test   rax,rax
  40de35:	je     0x40de45
  40de37:	mov    edx,DWORD PTR [rip+0x1a293]        # 0x4280d0
  40de3d:	test   edx,edx
  40de3f:	je     0x40e42d
  40de45:	mov    rbx,r14
  40de48:	jmp    0x40d957
  40de4d:	nop    DWORD PTR [rax]
  40de50:	mov    rcx,r15
  40de53:	add    r15,0x2
  40de57:	movzx  eax,BYTE PTR [rcx+0x1]
  40de5b:	test   al,al
  40de5d:	je     0x40e55e
  40de63:	cmp    al,0x5c
  40de65:	je     0x40de6f
  40de67:	cmp    al,dl
  40de69:	jne    0x40dcf3
  40de6f:	cmp    BYTE PTR [rcx+0x2],0x0
  40de73:	mov    rax,r15
  40de76:	lea    r15,[rcx+0x3]
  40de7a:	jne    0x40dcf3
  40de80:	mov    r15,rax
  40de83:	jmp    0x40dd00
  40de88:	nop    DWORD PTR [rax+rax*1+0x0]
  40de90:	movzx  ecx,al
  40de93:	mov    ecx,DWORD PTR [r10+rcx*4]
  40de97:	test   ecx,0xc01
  40de9d:	je     0x40defb
  40de9f:	mov    rax,QWORD PTR [rip+0x5ad3a]        # 0x468be0
  40dea6:	test   rax,rax
  40dea9:	jne    0x40deb7
  40deab:	jmp    0x40e51f
  40deb0:	add    rdi,0x1
  40deb4:	movzx  edx,BYTE PTR [rdi]
  40deb7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40debb:	jne    0x40deb0
  40debd:	mov    r8,QWORD PTR [rsp+0x48]
  40dec2:	lea    rdx,[rip+0x1a207]        # 0x4280d0
  40dec9:	mov    rcx,rdi
  40decc:	mov    QWORD PTR [rsp+0x58],r10
  40ded1:	call   0x40c420
  40ded6:	test   rax,rax
  40ded9:	mov    rdi,rax
  40dedc:	je     0x40dbb1
  40dee2:	movzx  edx,BYTE PTR [rax]
  40dee5:	cmp    dl,0x7f
  40dee8:	mov    eax,edx
  40deea:	ja     0x40dbb1
  40def0:	mov    r10,QWORD PTR [rsp+0x58]
  40def5:	mov    edx,edx
  40def7:	mov    ecx,DWORD PTR [r10+rdx*4]
  40defb:	and    ecx,0x1000c01
  40df01:	je     0x40dbb1
  40df07:	cmp    al,0x2f
  40df09:	je     0x40e40f
  40df0f:	mov    r15,rdi
  40df12:	add    r15,0x1
  40df16:	je     0x40dbb1
  40df1c:	mov    ecx,DWORD PTR [rsp+0x70]
  40df20:	test   ecx,ecx
  40df22:	jne    0x40df8b
  40df24:	mov    rdx,QWORD PTR [rsp+0x40]
  40df29:	mov    QWORD PTR [rsp+0x20],0x0
  40df32:	xor    r9d,r9d
  40df35:	mov    r8,r14
  40df38:	mov    rcx,r13
  40df3b:	mov    rbx,r15
  40df3e:	call   0x40a550
  40df43:	mov    eax,DWORD PTR [rsp+0x54]
  40df47:	mov    DWORD PTR [rip+0x1a183],eax        # 0x4280d0
  40df4d:	jmp    0x40dbf5
  40df52:	mov    rax,r15
  40df55:	mov    rdx,rbx
  40df58:	mov    r9,rdi
  40df5b:	sub    rax,rdi
  40df5e:	mov    rcx,r13
  40df61:	mov    rbx,r15
  40df64:	mov    QWORD PTR [rsp+0x20],rax
  40df69:	call   0x40a550
  40df6e:	test   rax,rax
  40df71:	jne    0x40dd7d
  40df77:	jmp    0x40d957
  40df7c:	mov    ecx,0xc
  40df81:	call   0x409f50
  40df86:	jmp    0x40d8c5
  40df8b:	cmp    DWORD PTR [rip+0x1a13e],0x2        # 0x4280d0
  40df92:	je     0x40dfbe
  40df94:	mov    rax,QWORD PTR [rip+0x5ac45]        # 0x468be0
  40df9b:	test   rax,rax
  40df9e:	je     0x40e506
  40dfa4:	movzx  edx,BYTE PTR [rdi+0x1]
  40dfa8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40dfac:	je     0x40dfbe
  40dfae:	xchg   ax,ax
  40dfb0:	add    r15,0x1
  40dfb4:	movzx  edx,BYTE PTR [r15]
  40dfb8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40dfbc:	jne    0x40dfb0
  40dfbe:	mov    rdi,QWORD PTR [rsp+0x38]
  40dfc3:	mov    ecx,0x8
  40dfc8:	xor    eax,eax
  40dfca:	mov    QWORD PTR [rsp+0x90],0x2f3c
  40dfd6:	rep stos QWORD PTR es:[rdi],rax
  40dfd9:	nop    DWORD PTR [rax+0x0]
  40dfe0:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  40dfe5:	mov    BYTE PTR [r12+rax*1],dl
  40dfe9:	add    rax,0x1
  40dfed:	cmp    r14,rax
  40dff0:	jne    0x40dfe0
  40dff2:	lea    rax,[r12+r14*1-0x1]
  40dff7:	mov    rdx,rbp
  40dffa:	mov    rcx,r15
  40dffd:	mov    QWORD PTR [rsp+0x58],r10
  40e002:	mov    BYTE PTR [rax+0x1],0x3e
  40e006:	mov    BYTE PTR [rax+0x2],0x0
  40e00a:	lea    rdi,[rax+0x2]
  40e00e:	call   0x422440
  40e013:	test   rax,rax
  40e016:	mov    rbx,rax
  40e019:	je     0x40dbb1
  40e01f:	cmp    DWORD PTR [rip+0x1a0aa],0x2        # 0x4280d0
  40e026:	mov    r10,QWORD PTR [rsp+0x58]
  40e02b:	jne    0x40e3a9
  40e031:	mov    rax,QWORD PTR [rip+0x5aba8]        # 0x468be0
  40e038:	mov    r9,rbx
  40e03b:	sub    rdi,rbp
  40e03e:	sub    r9,r15
  40e041:	add    rbx,rdi
  40e044:	test   rax,rax
  40e047:	jne    0x40e054
  40e049:	jmp    0x40e4d6
  40e04e:	xchg   ax,ax
  40e050:	add    rbx,0x1
  40e054:	movzx  edx,BYTE PTR [rbx]
  40e057:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e05b:	jne    0x40e050
  40e05d:	cmp    DWORD PTR [rsp+0x70],0x6
  40e062:	ja     0x40df43
  40e068:	mov    edx,DWORD PTR [rsp+0x70]
  40e06c:	lea    rax,[rip+0x1f181]        # 0x42d1f4
  40e073:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40e077:	add    rax,rdx
  40e07a:	jmp    rax
  40e07c:	lea    rcx,[r9+0x1]
  40e080:	mov    QWORD PTR [rsp+0x58],r9
  40e085:	call   0x40a440
  40e08a:	mov    r9,QWORD PTR [rsp+0x58]
  40e08f:	mov    rdx,r15
  40e092:	mov    rcx,rax
  40e095:	mov    rdi,rax
  40e098:	mov    r8,r9
  40e09b:	call   0x4224d8
  40e0a0:	mov    r9,QWORD PTR [rsp+0x58]
  40e0a5:	test   r9,r9
  40e0a8:	mov    BYTE PTR [rdi+r9*1],0x0
  40e0ad:	jne    0x40e45e
  40e0b3:	lea    rcx,[r14+0x19]
  40e0b7:	call   0x40a440
  40e0bc:	mov    rdx,QWORD PTR [rsp+0x40]
  40e0c1:	lea    rcx,[rax+0x18]
  40e0c5:	mov    r15,rax
  40e0c8:	mov    QWORD PTR [rax+0x10],0x0
  40e0d0:	mov    DWORD PTR [rax],0x6
  40e0d6:	mov    r8,r14
  40e0d9:	mov    QWORD PTR [rax+0x8],rcx
  40e0dd:	call   0x4224d8
  40e0e2:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  40e0e8:	mov    rdx,r15
  40e0eb:	mov    rcx,r13
  40e0ee:	call   0x40a490
  40e0f3:	mov    rcx,rdi
  40e0f6:	call   0x422528
  40e0fb:	jmp    0x40df43
  40e100:	lea    rcx,[r14+0x19]
  40e104:	mov    QWORD PTR [rsp+0x60],r10
  40e109:	mov    QWORD PTR [rsp+0x58],r9
  40e10e:	call   0x40a440
  40e113:	mov    rdi,rax
  40e116:	movzx  eax,BYTE PTR [r15]
  40e11a:	mov    r9,QWORD PTR [rsp+0x58]
  40e11f:	mov    r10,QWORD PTR [rsp+0x60]
  40e124:	cmp    al,0x7f
  40e126:	jbe    0x40e180
  40e128:	test   r9,r9
  40e12b:	je     0x40e18f
  40e12d:	xor    r8d,r8d
  40e130:	xor    edx,edx
  40e132:	mov    rcx,r15
  40e135:	call   0x422438
  40e13a:	mov    DWORD PTR [rdi+0x10],eax
  40e13d:	lea    rcx,[rdi+0x18]
  40e141:	mov    rdx,QWORD PTR [rsp+0x40]
  40e146:	mov    DWORD PTR [rdi],0x5
  40e14c:	mov    r8,r14
  40e14f:	mov    QWORD PTR [rdi+0x8],rcx
  40e153:	call   0x4224d8
  40e158:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  40e15e:	mov    rdx,rdi
  40e161:	mov    rcx,r13
  40e164:	call   0x40a490
  40e169:	jmp    0x40df43
  40e16e:	xchg   ax,ax
  40e170:	add    r15,0x1
  40e174:	movzx  eax,BYTE PTR [r15]
  40e178:	sub    r9,0x1
  40e17c:	cmp    al,0x7f
  40e17e:	ja     0x40e128
  40e180:	test   DWORD PTR [r10+rax*4],0xc01
  40e188:	je     0x40e128
  40e18a:	test   r9,r9
  40e18d:	jne    0x40e170
  40e18f:	mov    DWORD PTR [rdi+0x10],0x0
  40e196:	jmp    0x40e13d
  40e198:	lea    rcx,[r14+0x19]
  40e19c:	mov    QWORD PTR [rsp+0x60],r10
  40e1a1:	mov    QWORD PTR [rsp+0x58],r9
  40e1a6:	call   0x40a440
  40e1ab:	movzx  edx,BYTE PTR [r15]
  40e1af:	mov    rdi,rax
  40e1b2:	mov    r9,QWORD PTR [rsp+0x58]
  40e1b7:	mov    r10,QWORD PTR [rsp+0x60]
  40e1bc:	cmp    dl,0x7f
  40e1bf:	jbe    0x40e231
  40e1c1:	test   r9,r9
  40e1c4:	je     0x40e242
  40e1c6:	cmp    edx,0x7f
  40e1c9:	ja     0x40e4c9
  40e1cf:	mov    edx,edx
  40e1d1:	mov    eax,DWORD PTR [r10+rdx*4]
  40e1d5:	test   eax,0x30000
  40e1da:	je     0x40e4f9
  40e1e0:	mov    rcx,r15
  40e1e3:	call   0x422598
  40e1e8:	mov    DWORD PTR [rdi+0x10],eax
  40e1eb:	lea    rcx,[rdi+0x18]
  40e1ef:	mov    rdx,QWORD PTR [rsp+0x40]
  40e1f4:	mov    DWORD PTR [rdi],0x3
  40e1fa:	mov    r8,r14
  40e1fd:	mov    QWORD PTR [rdi+0x8],rcx
  40e201:	call   0x4224d8
  40e206:	mov    rax,QWORD PTR [rdi+0x8]
  40e20a:	mov    rdx,rdi
  40e20d:	mov    rcx,r13
  40e210:	mov    BYTE PTR [rax+r14*1],0x0
  40e215:	call   0x40a490
  40e21a:	jmp    0x40df43
  40e21f:	nop
  40e220:	add    r15,0x1
  40e224:	movzx  edx,BYTE PTR [r15]
  40e228:	sub    r9,0x1
  40e22c:	cmp    dl,0x7f
  40e22f:	ja     0x40e1c1
  40e231:	mov    eax,edx
  40e233:	test   DWORD PTR [r10+rax*4],0xc01
  40e23b:	je     0x40e1c1
  40e23d:	test   r9,r9
  40e240:	jne    0x40e220
  40e242:	mov    DWORD PTR [rdi+0x10],0x0
  40e249:	jmp    0x40e1eb
  40e24b:	mov    rdx,QWORD PTR [rsp+0x40]
  40e250:	mov    QWORD PTR [rsp+0x20],r9
  40e255:	mov    r8,r14
  40e258:	mov    r9,r15
  40e25b:	mov    rcx,r13
  40e25e:	mov    QWORD PTR [rsp+0x58],r10
  40e263:	call   0x40a550
  40e268:	mov    r15d,DWORD PTR [rip+0x19e61]        # 0x4280d0
  40e26f:	mov    r14,rax
  40e272:	cmp    r15d,0x2
  40e276:	je     0x40df43
  40e27c:	lea    rdi,[rax+0x10]
  40e280:	movzx  eax,BYTE PTR [rax+0x10]
  40e284:	mov    r10,QWORD PTR [rsp+0x58]
  40e289:	cmp    al,0x7f
  40e28b:	ja     0x40e47f
  40e291:	test   DWORD PTR [r10+rax*4],0xc01
  40e299:	je     0x40e47f
  40e29f:	mov    rax,QWORD PTR [rip+0x5a93a]        # 0x468be0
  40e2a6:	test   rax,rax
  40e2a9:	je     0x40e566
  40e2af:	mov    r9,rax
  40e2b2:	movzx  ecx,BYTE PTR [r14+0x11]
  40e2b7:	lea    rdx,[r14+0x11]
  40e2bb:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e2bf:	je     0x40e2ce
  40e2c1:	add    rdx,0x1
  40e2c5:	movzx  ecx,BYTE PTR [rdx]
  40e2c8:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e2cc:	jne    0x40e2c1
  40e2ce:	mov    rcx,rdx
  40e2d1:	mov    QWORD PTR [rsp+0x60],r9
  40e2d6:	mov    QWORD PTR [rsp+0x58],rdx
  40e2db:	call   0x422468
  40e2e0:	mov    rdx,QWORD PTR [rsp+0x58]
  40e2e5:	lea    r8,[rax+0x1]
  40e2e9:	mov    rcx,rdi
  40e2ec:	mov    QWORD PTR [rsp+0x40],rax
  40e2f1:	call   0x4224d0
  40e2f6:	mov    r10,QWORD PTR [rsp+0x40]
  40e2fb:	mov    r9,QWORD PTR [rsp+0x60]
  40e300:	lea    rdx,[rdi+r10*1]
  40e304:	test   r9,r9
  40e307:	je     0x40e57c
  40e30d:	cmp    rdi,rdx
  40e310:	jb     0x40e339
  40e312:	mov    rcx,rdi
  40e315:	mov    QWORD PTR [rsp+0x40],r9
  40e31a:	call   0x422468
  40e31f:	lea    rdx,[rdi+rax*1]
  40e323:	mov    r9,QWORD PTR [rsp+0x40]
  40e328:	cmp    rdi,rdx
  40e32b:	jb     0x40e339
  40e32d:	jmp    0x40e344
  40e32f:	nop
  40e330:	sub    rdx,0x1
  40e334:	cmp    rdi,rdx
  40e337:	jae    0x40e344
  40e339:	movzx  eax,BYTE PTR [rdx-0x1]
  40e33d:	cmp    BYTE PTR [r9+rax*1],0x0
  40e342:	jne    0x40e330
  40e344:	cmp    r15d,0x1
  40e348:	mov    BYTE PTR [rdx],0x0
  40e34b:	je     0x40df43
  40e351:	movzx  eax,BYTE PTR [r14+0x10]
  40e356:	cmp    al,0x22
  40e358:	je     0x40e362
  40e35a:	cmp    al,0x27
  40e35c:	jne    0x40df43
  40e362:	movzx  eax,BYTE PTR [rdx-0x1]
  40e366:	cmp    al,0x22
  40e368:	je     0x40e372
  40e36a:	cmp    al,0x27
  40e36c:	jne    0x40df43
  40e372:	xor    edx,edx
  40e374:	mov    rcx,rdi
  40e377:	call   0x40d650
  40e37c:	jmp    0x40df43
  40e381:	mov    ecx,0xa
  40e386:	mov    QWORD PTR [rsp+0x40],r8
  40e38b:	call   0x409f50
  40e390:	mov    r8,QWORD PTR [rsp+0x40]
  40e395:	jmp    0x40d9f4
  40e39a:	mov    ecx,0x1c
  40e39f:	call   0x409f50
  40e3a4:	jmp    0x40d9b4
  40e3a9:	mov    r8,QWORD PTR [rip+0x5a830]        # 0x468be0
  40e3b0:	test   r8,r8
  40e3b3:	mov    rdx,r8
  40e3b6:	je     0x40e53b
  40e3bc:	cmp    r15,rbx
  40e3bf:	jb     0x40e435
  40e3c1:	mov    rcx,r15
  40e3c4:	mov    QWORD PTR [rsp+0x68],r10
  40e3c9:	mov    QWORD PTR [rsp+0x60],rdx
  40e3ce:	mov    QWORD PTR [rsp+0x58],r8
  40e3d3:	call   0x422468
  40e3d8:	lea    r9,[r15+rax*1]
  40e3dc:	mov    r8,QWORD PTR [rsp+0x58]
  40e3e1:	mov    rdx,QWORD PTR [rsp+0x60]
  40e3e6:	mov    r10,QWORD PTR [rsp+0x68]
  40e3eb:	cmp    r15,r9
  40e3ee:	jb     0x40e3fb
  40e3f0:	jmp    0x40e407
  40e3f2:	sub    r9,0x1
  40e3f6:	cmp    r15,r9
  40e3f9:	jae    0x40e407
  40e3fb:	movzx  eax,BYTE PTR [r9-0x1]
  40e400:	cmp    BYTE PTR [r8+rax*1],0x0
  40e405:	jne    0x40e3f2
  40e407:	mov    rax,rdx
  40e40a:	jmp    0x40e03b
  40e40f:	cmp    BYTE PTR [rdi+0x1],0x3e
  40e413:	lea    rax,[rdi+0x1]
  40e417:	jne    0x40dbb1
  40e41d:	mov    DWORD PTR [rsp+0x70],0x0
  40e425:	mov    rdi,rax
  40e428:	jmp    0x40df0f
  40e42d:	mov    rbx,r14
  40e430:	jmp    0x40dd35
  40e435:	mov    r9,rbx
  40e438:	jmp    0x40e3fb
  40e43a:	call   QWORD PTR [rip+0x8e034]        # 0x49c474
  40e440:	mov    DWORD PTR [rax],0x16
  40e446:	xor    eax,eax
  40e448:	jmp    0x40da49
  40e44d:	call   QWORD PTR [rip+0x8e021]        # 0x49c474
  40e453:	mov    DWORD PTR [rax],0x2
  40e459:	jmp    0x40da36
  40e45e:	mov    rdx,QWORD PTR [rsp+0x40]
  40e463:	mov    r8,r14
  40e466:	mov    rcx,rdi
  40e469:	call   0x40d890
  40e46e:	test   rax,rax
  40e471:	mov    r15,rax
  40e474:	jne    0x40e0e8
  40e47a:	jmp    0x40e0f3
  40e47f:	mov    rcx,rdi
  40e482:	call   0x422468
  40e487:	mov    r9,QWORD PTR [rip+0x5a752]        # 0x468be0
  40e48e:	lea    rdx,[rdi+rax*1]
  40e492:	jmp    0x40e304
  40e497:	mov    ecx,0x1c
  40e49c:	mov    QWORD PTR [rsp+0x58],r10
  40e4a1:	call   0x409f50
  40e4a6:	mov    r10,QWORD PTR [rsp+0x58]
  40e4ab:	jmp    0x40db73
  40e4b0:	mov    ecx,0xa
  40e4b5:	mov    QWORD PTR [rsp+0x40],r8
  40e4ba:	call   0x409f50
  40e4bf:	mov    r8,QWORD PTR [rsp+0x40]
  40e4c4:	jmp    0x40dc1b
  40e4c9:	mov    eax,0x1
  40e4ce:	mov    DWORD PTR [rdi+0x10],eax
  40e4d1:	jmp    0x40e1eb
  40e4d6:	mov    ecx,0xc
  40e4db:	mov    QWORD PTR [rsp+0x60],r10
  40e4e0:	mov    QWORD PTR [rsp+0x58],r9
  40e4e5:	call   0x409f50
  40e4ea:	mov    r10,QWORD PTR [rsp+0x60]
  40e4ef:	mov    r9,QWORD PTR [rsp+0x58]
  40e4f4:	jmp    0x40e054
  40e4f9:	test   eax,0x8000002
  40e4fe:	sete   al
  40e501:	movzx  eax,al
  40e504:	jmp    0x40e4ce
  40e506:	mov    ecx,0xc
  40e50b:	mov    QWORD PTR [rsp+0x58],r10
  40e510:	call   0x409f50
  40e515:	mov    r10,QWORD PTR [rsp+0x58]
  40e51a:	jmp    0x40dfa4
  40e51f:	mov    ecx,0xc
  40e524:	mov    QWORD PTR [rsp+0x58],r10
  40e529:	call   0x409f50
  40e52e:	movzx  edx,BYTE PTR [rdi]
  40e531:	mov    r10,QWORD PTR [rsp+0x58]
  40e536:	jmp    0x40deb7
  40e53b:	mov    ecx,0xc
  40e540:	mov    QWORD PTR [rsp+0x58],r10
  40e545:	call   0x409f50
  40e54a:	mov    rdx,QWORD PTR [rip+0x5a68f]        # 0x468be0
  40e551:	mov    r8,rax
  40e554:	mov    r10,QWORD PTR [rsp+0x58]
  40e559:	jmp    0x40e3bc
  40e55e:	mov    r15,rcx
  40e561:	jmp    0x40dd00
  40e566:	mov    ecx,0xc
  40e56b:	call   0x409f50
  40e570:	mov    r9,QWORD PTR [rip+0x5a669]        # 0x468be0
  40e577:	jmp    0x40e2b2
  40e57c:	mov    ecx,0xc
  40e581:	mov    QWORD PTR [rsp+0x40],rdx
  40e586:	call   0x409f50
  40e58b:	mov    rdx,QWORD PTR [rsp+0x40]
  40e590:	mov    r9,rax
  40e593:	jmp    0x40e30d
  40e598:	mov    r15,rbx
  40e59b:	jmp    0x40df24
  40e5a0:	push   rdi
  40e5a1:	sub    rsp,0x90
  40e5a8:	xor    eax,eax
  40e5aa:	lea    rdi,[rsp+0x20]
  40e5af:	mov    r9,rcx
  40e5b2:	mov    ecx,0xd
  40e5b7:	rep stos QWORD PTR es:[rdi],rax
  40e5ba:	mov    eax,edx
  40e5bc:	lea    rdx,[rsp+0x20]
  40e5c1:	mov    QWORD PTR [rsp+0x38],rax
  40e5c6:	mov    cl,0x3
  40e5c8:	call   QWORD PTR [r9+0x38]
  40e5cc:	mov    rax,QWORD PTR [rsp+0x38]
  40e5d1:	add    rsp,0x90
  40e5d8:	pop    rdi
  40e5d9:	ret    
  40e5da:	nop    WORD PTR [rax+rax*1+0x0]
  40e5e0:	push   rbx
  40e5e1:	sub    rsp,0x40
  40e5e5:	cmp    rcx,0x2
  40e5e9:	mov    rbx,rdx
  40e5ec:	je     0x40e640
  40e5ee:	cmp    rcx,0x3
  40e5f2:	je     0x40e620
  40e5f4:	cmp    rcx,0x1
  40e5f8:	je     0x40e610
  40e5fa:	xor    eax,eax
  40e5fc:	test   BYTE PTR [rdx+0x10],0x8
  40e600:	je     0x40e6a0
  40e606:	add    rsp,0x40
  40e60a:	pop    rbx
  40e60b:	ret    
  40e60c:	nop    DWORD PTR [rax+0x0]
  40e610:	call   0x408aa0
  40e615:	xor    eax,eax
  40e617:	add    rsp,0x40
  40e61b:	pop    rbx
  40e61c:	ret    
  40e61d:	nop    DWORD PTR [rax]
  40e620:	mov    rax,QWORD PTR [rdx+0x18]
  40e624:	cmp    r9d,eax
  40e627:	jbe    0x40e690
  40e629:	mov    eax,eax
  40e62b:	mov    rax,QWORD PTR [r8+rax*8]
  40e62f:	mov    QWORD PTR [rdx+0x18],rax
  40e633:	xor    eax,eax
  40e635:	add    rsp,0x40
  40e639:	pop    rbx
  40e63a:	ret    
  40e63b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e640:	mov    rbx,QWORD PTR [rdx+0x18]
  40e644:	cmp    r9d,ebx
  40e647:	ja     0x40e660
  40e649:	lea    rcx,[rip+0x1fd14]        # 0x42e364
  40e650:	mov    edx,ebx
  40e652:	call   0x408a10
  40e657:	xor    eax,eax
  40e659:	add    rsp,0x40
  40e65d:	pop    rbx
  40e65e:	ret    
  40e65f:	nop
  40e660:	mov    QWORD PTR [rsp+0x38],r8
  40e665:	mov    ebx,ebx
  40e667:	call   QWORD PTR [rip+0x8ddb7]        # 0x49c424
  40e66d:	mov    r8,QWORD PTR [rsp+0x38]
  40e672:	lea    rdx,[rax+0x30]
  40e676:	mov    rcx,QWORD PTR [r8+rbx*8]
  40e67a:	call   0x422538
  40e67f:	xor    eax,eax
  40e681:	add    rsp,0x40
  40e685:	pop    rbx
  40e686:	ret    
  40e687:	nop    WORD PTR [rax+rax*1+0x0]
  40e690:	lea    rax,[rip+0x1fcd8]        # 0x42e36f
  40e697:	jmp    0x40e606
  40e69c:	nop    DWORD PTR [rax+0x0]
  40e6a0:	mov    DWORD PTR [rsp+0x20],r9d
  40e6a5:	mov    r9,r8
  40e6a8:	mov    r8,rdx
  40e6ab:	mov    rdx,rcx
  40e6ae:	mov    rcx,QWORD PTR [rbx+0x18]
  40e6b2:	call   0x408dd0
  40e6b7:	test   BYTE PTR [rbx+0x10],0x40
  40e6bb:	je     0x40e606
  40e6c1:	mov    rcx,QWORD PTR [rbx+0x18]
  40e6c5:	mov    QWORD PTR [rsp+0x38],rax
  40e6ca:	call   0x422528
  40e6cf:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40e6d3:	mov    QWORD PTR [rbx+0x18],0x0
  40e6db:	mov    rax,QWORD PTR [rsp+0x38]
  40e6e0:	jmp    0x40e606
  40e6e5:	nop
  40e6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6f0:	push   rsi
  40e6f1:	push   rbx
  40e6f2:	sub    rsp,0x28
  40e6f6:	mov    rsi,QWORD PTR [rcx+0x18]
  40e6fa:	mov    rbx,rcx
  40e6fd:	mov    rdx,rcx
  40e700:	mov    ecx,0x3
  40e705:	call   QWORD PTR [rbx+0x38]
  40e708:	mov    rax,QWORD PTR [rbx+0x18]
  40e70c:	mov    QWORD PTR [rbx+0x18],rsi
  40e710:	add    rsp,0x28
  40e714:	pop    rbx
  40e715:	pop    rsi
  40e716:	ret    
  40e717:	nop    WORD PTR [rax+rax*1+0x0]
  40e720:	push   r15
  40e722:	push   r14
  40e724:	push   r13
  40e726:	push   r12
  40e728:	push   rbp
  40e729:	push   rdi
  40e72a:	push   rsi
  40e72b:	push   rbx
  40e72c:	sub    rsp,0xe8
  40e733:	cmp    rcx,0x2
  40e737:	mov    r13,rcx
  40e73a:	mov    r12,rdx
  40e73d:	mov    rbx,r8
  40e740:	mov    ebp,r9d
  40e743:	je     0x40e9e1
  40e749:	cmp    rcx,0x3
  40e74d:	je     0x40e910
  40e753:	cmp    rcx,0x1
  40e757:	je     0x40e8f0
  40e75d:	test   BYTE PTR [rdx+0x10],0x8
  40e761:	jne    0x40e8fb
  40e767:	mov    rax,QWORD PTR [rip+0x5a472]        # 0x468be0
  40e76e:	mov    r15,QWORD PTR [rdx+0x18]
  40e772:	mov    rsi,QWORD PTR [rdx+0x20]
  40e776:	test   rax,rax
  40e779:	jne    0x40e784
  40e77b:	jmp    0x40ed00
  40e780:	add    r15,0x1
  40e784:	movzx  ecx,BYTE PTR [r15]
  40e788:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e78c:	jne    0x40e780
  40e78e:	test   cl,cl
  40e790:	je     0x40ead0
  40e796:	cmp    cl,0x3d
  40e799:	mov    QWORD PTR [rsp+0x30],rsi
  40e79e:	je     0x40ec90
  40e7a4:	cmp    cl,0x5e
  40e7a7:	je     0x40ea84
  40e7ad:	cmp    cl,0x2c
  40e7b0:	je     0x40ead0
  40e7b6:	mov    BYTE PTR [rsp+0x4f],0x0
  40e7bb:	lea    rax,[rsp+0x58]
  40e7c0:	movzx  edx,BYTE PTR [r15]
  40e7c4:	mov    QWORD PTR [rsp+0x38],rax
  40e7c9:	lea    rax,[rsp+0x60]
  40e7ce:	mov    QWORD PTR [rsp+0x40],rax
  40e7d3:	test   dl,dl
  40e7d5:	je     0x40ec41
  40e7db:	cmp    dl,0x2c
  40e7de:	je     0x40eb80
  40e7e4:	jg     0x40eb60
  40e7ea:	cmp    dl,0x21
  40e7ed:	je     0x40ebd0
  40e7f3:	cmp    dl,0x2b
  40e7f6:	jne    0x40eb6e
  40e7fc:	xor    r14d,r14d
  40e7ff:	mov    rax,QWORD PTR [rip+0x5a3da]        # 0x468be0
  40e806:	lea    rsi,[r15+0x1]
  40e80a:	test   rax,rax
  40e80d:	je     0x40ec77
  40e813:	movzx  edx,BYTE PTR [r15+0x1]
  40e818:	mov    r15,rsi
  40e81b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e81f:	je     0x40e82f
  40e821:	add    r15,0x1
  40e825:	movzx  edx,BYTE PTR [r15]
  40e829:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e82d:	jne    0x40e821
  40e82f:	mov    rax,QWORD PTR [rip+0x5a49a]        # 0x468cd0
  40e836:	test   rax,rax
  40e839:	je     0x40ec23
  40e83f:	movzx  edx,BYTE PTR [r15]
  40e843:	test   dl,dl
  40e845:	je     0x40ec41
  40e84b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e84f:	jne    0x40ec41
  40e855:	mov    rcx,r15
  40e858:	jmp    0x40e866
  40e85a:	nop    WORD PTR [rax+rax*1+0x0]
  40e860:	cmp    BYTE PTR [rax+rdx*1],0x0
  40e864:	jne    0x40e871
  40e866:	add    rcx,0x1
  40e86a:	movzx  edx,BYTE PTR [rcx]
  40e86d:	test   dl,dl
  40e86f:	jne    0x40e860
  40e871:	mov    r11d,ecx
  40e874:	sub    r11d,r15d
  40e877:	test   r11d,r11d
  40e87a:	je     0x40ec41
  40e880:	cmp    r11d,0x3
  40e884:	je     0x40ebf0
  40e88a:	cmp    r11d,0x4
  40e88e:	jne    0x40eae0
  40e894:	lea    rdi,[rip+0x1f9c0]        # 0x42e25b
  40e89b:	mov    ecx,0x4
  40e8a0:	mov    rsi,r15
  40e8a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e8a5:	jne    0x40eae0
  40e8ab:	add    r15,0x4
  40e8af:	test   r14b,r14b
  40e8b2:	jne    0x40e8c0
  40e8b4:	mov    QWORD PTR [rsp+0x30],0x0
  40e8bd:	nop    DWORD PTR [rax]
  40e8c0:	mov    rax,QWORD PTR [rip+0x5a319]        # 0x468be0
  40e8c7:	test   rax,rax
  40e8ca:	jne    0x40e8d5
  40e8cc:	jmp    0x40ec32
  40e8d1:	add    r15,0x1
  40e8d5:	movzx  ecx,BYTE PTR [r15]
  40e8d9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40e8dd:	mov    rdx,rcx
  40e8e0:	jne    0x40e8d1
  40e8e2:	jmp    0x40e7d3
  40e8e7:	nop    WORD PTR [rax+rax*1+0x0]
  40e8f0:	mov    ecx,0x1
  40e8f5:	call   0x408aa0
  40e8fa:	nop
  40e8fb:	add    rsp,0xe8
  40e902:	pop    rbx
  40e903:	pop    rsi
  40e904:	pop    rdi
  40e905:	pop    rbp
  40e906:	pop    r12
  40e908:	pop    r13
  40e90a:	pop    r14
  40e90c:	pop    r15
  40e90e:	ret    
  40e90f:	nop
  40e910:	mov    eax,0x1
  40e915:	mov    ecx,r9d
  40e918:	shl    eax,cl
  40e91a:	lea    r13d,[rax-0x1]
  40e91e:	mov    r14,r13
  40e921:	and    r14,QWORD PTR [rdx+0x20]
  40e925:	je     0x40ec86
  40e92b:	mov    rsi,r8
  40e92e:	mov    edi,0x1
  40e933:	xor    r15d,r15d
  40e936:	jmp    0x40e949
  40e938:	nop    DWORD PTR [rax+rax*1+0x0]
  40e940:	add    rsi,0x8
  40e944:	shr    r14,1
  40e947:	je     0x40e965
  40e949:	test   r14b,0x1
  40e94d:	je     0x40e95c
  40e94f:	mov    rcx,QWORD PTR [rsi]
  40e952:	call   0x422468
  40e957:	lea    rdi,[rdi+rax*1+0x4]
  40e95c:	add    r15d,0x1
  40e960:	cmp    ebp,r15d
  40e963:	ja     0x40e940
  40e965:	mov    rcx,rdi
  40e968:	mov    rbp,r13
  40e96b:	call   0x40a440
  40e970:	and    rbp,QWORD PTR [r12+0x20]
  40e975:	mov    r14,rax
  40e978:	mov    QWORD PTR [r12+0x18],rax
  40e97d:	je     0x40ea70
  40e983:	xor    r12d,r12d
  40e986:	jmp    0x40e9a4
  40e988:	nop    DWORD PTR [rax+rax*1+0x0]
  40e990:	mov    edx,0x2b20
  40e995:	lea    r14,[rax+0x3]
  40e999:	mov    BYTE PTR [rax+0x2],0x20
  40e99d:	mov    WORD PTR [rax],dx
  40e9a0:	add    r12d,0x1
  40e9a4:	mov    eax,ebp
  40e9a6:	shr    rbp,1
  40e9a9:	and    eax,0x1
  40e9ac:	test   eax,eax
  40e9ae:	je     0x40e9a0
  40e9b0:	mov    eax,r12d
  40e9b3:	mov    r13,QWORD PTR [rbx+rax*8]
  40e9b7:	mov    rcx,r13
  40e9ba:	call   0x422468
  40e9bf:	mov    rdx,r13
  40e9c2:	mov    r8,rax
  40e9c5:	mov    rcx,r14
  40e9c8:	mov    rsi,rax
  40e9cb:	call   0x4224d8
  40e9d0:	test   rbp,rbp
  40e9d3:	lea    rax,[r14+rsi*1]
  40e9d7:	jne    0x40e990
  40e9d9:	mov    BYTE PTR [rax],0x0
  40e9dc:	jmp    0x40e8fb
  40e9e1:	mov    eax,0x1
  40e9e6:	mov    ecx,r9d
  40e9e9:	xor    r13d,r13d
  40e9ec:	shl    rax,cl
  40e9ef:	xor    edx,edx
  40e9f1:	mov    rsi,QWORD PTR [rip+0x8da2c]        # 0x49c424
  40e9f8:	sub    rax,0x1
  40e9fc:	and    rax,QWORD PTR [r12+0x20]
  40ea01:	mov    r14,rsi
  40ea04:	mov    r12,rax
  40ea07:	jne    0x40ea3b
  40ea09:	jmp    0x40e8fb
  40ea0e:	xchg   ax,ax
  40ea10:	call   rdi
  40ea12:	mov    rcx,QWORD PTR [rbx]
  40ea15:	lea    rdx,[rax+0x30]
  40ea19:	call   0x422538
  40ea1e:	mov    rdx,r15
  40ea21:	add    r13d,0x1
  40ea25:	cmp    ebp,r13d
  40ea28:	jbe    0x40e8fb
  40ea2e:	add    rbx,0x8
  40ea32:	shr    r12,1
  40ea35:	je     0x40e8fb
  40ea3b:	test   r12b,0x1
  40ea3f:	je     0x40ea21
  40ea41:	test   rdx,rdx
  40ea44:	lea    r15,[rdx+0x1]
  40ea48:	mov    rdi,rsi
  40ea4b:	je     0x40ea10
  40ea4d:	call   r14
  40ea50:	lea    rcx,[rip+0x1f9c5]        # 0x42e41c
  40ea57:	lea    r9,[rax+0x30]
  40ea5b:	mov    r8d,0x3
  40ea61:	mov    edx,0x1
  40ea66:	mov    rdi,r14
  40ea69:	call   0x422510
  40ea6e:	jmp    0x40ea10
  40ea70:	mov    BYTE PTR [rax],0x0
  40ea73:	jmp    0x40e8fb
  40ea78:	mov    r15,rsi
  40ea7b:	mov    QWORD PTR [rsp+0x30],0x0
  40ea84:	mov    rax,QWORD PTR [rip+0x5a155]        # 0x468be0
  40ea8b:	lea    rsi,[r15+0x1]
  40ea8f:	test   rax,rax
  40ea92:	je     0x40ed0f
  40ea98:	movzx  ecx,BYTE PTR [r15+0x1]
  40ea9d:	mov    r15,rsi
  40eaa0:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eaa4:	mov    rdx,rcx
  40eaa7:	je     0x40eac1
  40eaa9:	nop    DWORD PTR [rax+0x0]
  40eab0:	add    r15,0x1
  40eab4:	movzx  ecx,BYTE PTR [r15]
  40eab8:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eabc:	mov    rdx,rcx
  40eabf:	jne    0x40eab0
  40eac1:	cmp    dl,0x2c
  40eac4:	mov    BYTE PTR [rsp+0x4f],0x1
  40eac9:	jne    0x40e7bb
  40eacf:	nop
  40ead0:	mov    QWORD PTR [r12+0x20],0x0
  40ead9:	jmp    0x40e8fb
  40eade:	xchg   ax,ax
  40eae0:	mov    rdx,QWORD PTR [rsp+0x38]
  40eae5:	xor    r8d,r8d
  40eae8:	mov    rcx,r15
  40eaeb:	mov    DWORD PTR [rsp+0x48],r11d
  40eaf0:	call   0x422430
  40eaf5:	movsxd rdi,DWORD PTR [rsp+0x48]
  40eafa:	mov    rdx,QWORD PTR [rsp+0x58]
  40eaff:	mov    eax,eax
  40eb01:	lea    rsi,[r15+rdi*1]
  40eb05:	cmp    rsi,rdx
  40eb08:	je     0x40eb47
  40eb0a:	mov    r15,QWORD PTR [rsp+0x40]
  40eb0f:	mov    r8,rdi
  40eb12:	mov    rcx,r15
  40eb15:	call   0x4224d8
  40eb1a:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  40eb1f:	mov    r9,rbx
  40eb22:	mov    DWORD PTR [rsp+0x20],ebp
  40eb26:	mov    r8,r12
  40eb29:	mov    rdx,r13
  40eb2c:	mov    rcx,r15
  40eb2f:	call   0x408dd0
  40eb34:	cmp    ebp,eax
  40eb36:	jbe    0x40ead0
  40eb38:	mov    ecx,eax
  40eb3a:	mov    edx,0x1
  40eb3f:	shl    edx,cl
  40eb41:	test   edx,edx
  40eb43:	mov    eax,edx
  40eb45:	je     0x40ead0
  40eb47:	test   r14b,r14b
  40eb4a:	je     0x40ebe0
  40eb50:	not    rax
  40eb53:	and    QWORD PTR [rsp+0x30],rax
  40eb58:	mov    r15,rsi
  40eb5b:	jmp    0x40e8c0
  40eb60:	cmp    dl,0x2d
  40eb63:	je     0x40ebd0
  40eb65:	cmp    dl,0x7c
  40eb68:	je     0x40e7fc
  40eb6e:	xor    r14d,r14d
  40eb71:	jmp    0x40e82f
  40eb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb80:	mov    rax,QWORD PTR [rip+0x5a059]        # 0x468be0
  40eb87:	lea    rsi,[r15+0x1]
  40eb8b:	test   rax,rax
  40eb8e:	je     0x40ecf1
  40eb94:	movzx  ecx,BYTE PTR [r15+0x1]
  40eb99:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eb9d:	mov    rdx,rcx
  40eba0:	je     0x40ebb2
  40eba2:	add    rsi,0x1
  40eba6:	movzx  ecx,BYTE PTR [rsi]
  40eba9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ebad:	mov    rdx,rcx
  40ebb0:	jne    0x40eba2
  40ebb2:	cmp    dl,0x7c
  40ebb5:	je     0x40ead0
  40ebbb:	cmp    dl,0x2c
  40ebbe:	je     0x40ead0
  40ebc4:	movzx  edx,BYTE PTR [rsi]
  40ebc7:	mov    r15,rsi
  40ebca:	jmp    0x40e7d3
  40ebcf:	nop
  40ebd0:	mov    r14d,0x1
  40ebd6:	jmp    0x40e7ff
  40ebdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebe0:	or     QWORD PTR [rsp+0x30],rax
  40ebe5:	jmp    0x40eb58
  40ebea:	nop    WORD PTR [rax+rax*1+0x0]
  40ebf0:	lea    rdi,[rip+0x1f70a]        # 0x42e301
  40ebf7:	mov    ecx,0x3
  40ebfc:	mov    rsi,r15
  40ebff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ec01:	jne    0x40eae0
  40ec07:	add    r15,0x3
  40ec0b:	test   r14b,r14b
  40ec0e:	jne    0x40e8b4
  40ec14:	mov    eax,0xffffffff
  40ec19:	mov    QWORD PTR [rsp+0x30],rax
  40ec1e:	jmp    0x40e8c0
  40ec23:	mov    ecx,0x2a
  40ec28:	call   0x409f50
  40ec2d:	jmp    0x40e83f
  40ec32:	mov    ecx,0xc
  40ec37:	call   0x409f50
  40ec3c:	jmp    0x40e8d5
  40ec41:	cmp    BYTE PTR [rsp+0x4f],0x0
  40ec46:	je     0x40ec52
  40ec48:	mov    eax,0xffffffff
  40ec4d:	xor    QWORD PTR [rsp+0x30],rax
  40ec52:	cmp    ebp,0x3f
  40ec55:	ja     0x40ec68
  40ec57:	mov    eax,0x1
  40ec5c:	mov    ecx,ebp
  40ec5e:	shl    eax,cl
  40ec60:	sub    eax,0x1
  40ec63:	and    QWORD PTR [rsp+0x30],rax
  40ec68:	mov    rax,QWORD PTR [rsp+0x30]
  40ec6d:	mov    QWORD PTR [r12+0x20],rax
  40ec72:	jmp    0x40e8fb
  40ec77:	mov    ecx,0xc
  40ec7c:	call   0x409f50
  40ec81:	jmp    0x40e813
  40ec86:	mov    edi,0x1
  40ec8b:	jmp    0x40e965
  40ec90:	mov    rax,QWORD PTR [rip+0x59f49]        # 0x468be0
  40ec97:	lea    rsi,[r15+0x1]
  40ec9b:	test   rax,rax
  40ec9e:	je     0x40ed1e
  40eca0:	movzx  ecx,BYTE PTR [r15+0x1]
  40eca5:	cmp    BYTE PTR [rax+rcx*1],0x0
  40eca9:	mov    rdx,rcx
  40ecac:	je     0x40ecc0
  40ecae:	xchg   ax,ax
  40ecb0:	add    rsi,0x1
  40ecb4:	movzx  ecx,BYTE PTR [rsi]
  40ecb7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ecbb:	mov    rdx,rcx
  40ecbe:	jne    0x40ecb0
  40ecc0:	cmp    dl,0x3d
  40ecc3:	je     0x40ead0
  40ecc9:	cmp    dl,0x5e
  40eccc:	je     0x40ea78
  40ecd2:	cmp    dl,0x2c
  40ecd5:	je     0x40ead0
  40ecdb:	mov    r15,rsi
  40ecde:	mov    BYTE PTR [rsp+0x4f],0x0
  40ece3:	mov    QWORD PTR [rsp+0x30],0x0
  40ecec:	jmp    0x40e7bb
  40ecf1:	mov    ecx,0xc
  40ecf6:	call   0x409f50
  40ecfb:	jmp    0x40eb94
  40ed00:	mov    ecx,0xc
  40ed05:	call   0x409f50
  40ed0a:	jmp    0x40e784
  40ed0f:	mov    ecx,0xc
  40ed14:	call   0x409f50
  40ed19:	jmp    0x40ea98
  40ed1e:	mov    ecx,0xc
  40ed23:	call   0x409f50
  40ed28:	jmp    0x40eca0
  40ed2d:	nop    DWORD PTR [rax]
  40ed30:	push   r15
  40ed32:	push   r14
  40ed34:	push   r13
  40ed36:	push   r12
  40ed38:	push   rbp
  40ed39:	push   rdi
  40ed3a:	push   rsi
  40ed3b:	push   rbx
  40ed3c:	sub    rsp,0x68
  40ed40:	cmp    rcx,0xf
  40ed44:	mov    rsi,rcx
  40ed47:	mov    rbx,rdx
  40ed4a:	mov    edi,r8d
  40ed4d:	mov    rbp,r9
  40ed50:	ja     0x40ed70
  40ed52:	cmp    rcx,0x1
  40ed56:	je     0x40ee80
  40ed5c:	add    rsp,0x68
  40ed60:	pop    rbx
  40ed61:	pop    rsi
  40ed62:	pop    rdi
  40ed63:	pop    rbp
  40ed64:	pop    r12
  40ed66:	pop    r13
  40ed68:	pop    r14
  40ed6a:	pop    r15
  40ed6c:	ret    
  40ed6d:	nop    DWORD PTR [rax]
  40ed70:	test   BYTE PTR [rdx+0x10],0x8
  40ed74:	je     0x40ed90
  40ed76:	mov    rcx,QWORD PTR [rdx+0x20]
  40ed7a:	test   rcx,rcx
  40ed7d:	je     0x40ed5c
  40ed7f:	call   0x422528
  40ed84:	jmp    0x40ed5c
  40ed86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed90:	mov    r13,QWORD PTR [rdx+0x18]
  40ed94:	mov    r14,QWORD PTR [rip+0x8d6d9]        # 0x49c474
  40ed9b:	call   r14
  40ed9e:	mov    DWORD PTR [rax],0x0
  40eda4:	mov    eax,edi
  40eda6:	and    eax,0x3
  40eda9:	cmp    eax,0x1
  40edac:	je     0x40eef5
  40edb2:	cmp    eax,0x2
  40edb5:	je     0x40eeb3
  40edbb:	mov    edx,0x5c
  40edc0:	mov    rcx,r13
  40edc3:	call   0x422448
  40edc8:	test   rax,rax
  40edcb:	je     0x40ee2c
  40edcd:	sub    rax,r13
  40edd0:	lea    rcx,[rax+0x1]
  40edd4:	mov    r12,rax
  40edd7:	call   0x40a440
  40eddc:	mov    r8,r12
  40eddf:	mov    r15,rax
  40ede2:	mov    rdx,r13
  40ede5:	mov    rcx,rax
  40ede8:	call   0x4224d8
  40eded:	mov    BYTE PTR [r15+r12*1],0x0
  40edf2:	lea    rdx,[rsp+0x20]
  40edf7:	mov    rcx,r15
  40edfa:	call   QWORD PTR [rip+0x8d8bc]        # 0x49c6bc
  40ee00:	test   eax,eax
  40ee02:	jne    0x40efb6
  40ee08:	call   r14
  40ee0b:	mov    DWORD PTR [rax],0x16
  40ee11:	movzx  eax,WORD PTR [rsp+0x26]
  40ee16:	and    ax,0xf000
  40ee1a:	cmp    ax,0x4000
  40ee1e:	jne    0x40efb6
  40ee24:	mov    rcx,r15
  40ee27:	call   0x422528
  40ee2c:	and    edi,0x30
  40ee2f:	cmp    edi,0x10
  40ee32:	je     0x40ef25
  40ee38:	cmp    edi,0x20
  40ee3b:	jne    0x40ed5c
  40ee41:	mov    rcx,QWORD PTR [rbx+0x18]
  40ee45:	mov    rdx,rbp
  40ee48:	call   0x422550
  40ee4d:	test   rax,rax
  40ee50:	mov    rdi,rax
  40ee53:	je     0x40efc9
  40ee59:	mov    edx,DWORD PTR [rbx+0x10]
  40ee5c:	test   dl,0x40
  40ee5f:	je     0x40ef72
  40ee65:	mov    rax,QWORD PTR [rbx+0x18]
  40ee69:	mov    QWORD PTR [rbx+0x20],rax
  40ee6d:	and    edx,0xffffffbf
  40ee70:	mov    QWORD PTR [rbx+0x18],rdi
  40ee74:	mov    DWORD PTR [rbx+0x10],edx
  40ee77:	jmp    0x40ed5c
  40ee7c:	nop    DWORD PTR [rax+0x0]
  40ee80:	and    edi,0x3
  40ee83:	cmp    edi,0x1
  40ee86:	je     0x40ef54
  40ee8c:	cmp    edi,0x2
  40ee8f:	jne    0x40ed5c
  40ee95:	mov    ecx,DWORD PTR [rip+0x59bd5]        # 0x468a70
  40ee9b:	mov    rdx,QWORD PTR [rip+0x59ba6]        # 0x468a48
  40eea2:	add    rcx,QWORD PTR [rip+0x19487]        # 0x428330
  40eea9:	call   0x422538
  40eeae:	jmp    0x40ed5c
  40eeb3:	lea    rdx,[rsp+0x20]
  40eeb8:	mov    rcx,r13
  40eebb:	call   QWORD PTR [rip+0x8d7fb]        # 0x49c6bc
  40eec1:	test   eax,eax
  40eec3:	je     0x40eed1
  40eec5:	call   r14
  40eec8:	cmp    DWORD PTR [rax],0x2
  40eecb:	je     0x40edbb
  40eed1:	call   r14
  40eed4:	cmp    DWORD PTR [rax],0x0
  40eed7:	jne    0x40eee2
  40eed9:	call   r14
  40eedc:	mov    DWORD PTR [rax],0x16
  40eee2:	mov    rcx,QWORD PTR [rsi+0x28]
  40eee6:	lea    rdx,[rip+0x1e323]        # 0x42d210
  40eeed:	mov    r8,r13
  40eef0:	call   0x408fc0
  40eef5:	lea    rdx,[rsp+0x20]
  40eefa:	mov    rcx,r13
  40eefd:	call   QWORD PTR [rip+0x8d7b9]        # 0x49c6bc
  40ef03:	test   eax,eax
  40ef05:	jne    0x40eee2
  40ef07:	call   r14
  40ef0a:	mov    DWORD PTR [rax],0x16
  40ef10:	movzx  eax,WORD PTR [rsp+0x26]
  40ef15:	and    ax,0xf000
  40ef19:	cmp    ax,0x8000
  40ef1d:	je     0x40ee2c
  40ef23:	jmp    0x40eee2
  40ef25:	mov    rcx,QWORD PTR [rbx+0x18]
  40ef29:	mov    edx,ebp
  40ef2b:	call   0x4223c8
  40ef30:	test   eax,eax
  40ef32:	mov    edi,eax
  40ef34:	js     0x40efa2
  40ef36:	mov    edx,DWORD PTR [rbx+0x10]
  40ef39:	test   dl,0x40
  40ef3c:	je     0x40ef90
  40ef3e:	mov    rax,QWORD PTR [rbx+0x18]
  40ef42:	mov    QWORD PTR [rbx+0x20],rax
  40ef46:	and    edx,0xffffffbf
  40ef49:	mov    DWORD PTR [rbx+0x18],edi
  40ef4c:	mov    DWORD PTR [rbx+0x10],edx
  40ef4f:	jmp    0x40ed5c
  40ef54:	mov    ecx,DWORD PTR [rip+0x59b16]        # 0x468a70
  40ef5a:	mov    rdx,QWORD PTR [rip+0x59ae7]        # 0x468a48
  40ef61:	add    rcx,QWORD PTR [rip+0x193d0]        # 0x428338
  40ef68:	call   0x422538
  40ef6d:	jmp    0x40ed5c
  40ef72:	mov    rcx,QWORD PTR [rbx+0x18]
  40ef76:	call   0x40a1b0
  40ef7b:	mov    edx,DWORD PTR [rbx+0x10]
  40ef7e:	mov    QWORD PTR [rbx+0x20],rax
  40ef82:	jmp    0x40ee6d
  40ef87:	nop    WORD PTR [rax+rax*1+0x0]
  40ef90:	mov    rcx,QWORD PTR [rbx+0x18]
  40ef94:	call   0x40a1b0
  40ef99:	mov    edx,DWORD PTR [rbx+0x10]
  40ef9c:	mov    QWORD PTR [rbx+0x20],rax
  40efa0:	jmp    0x40ef46
  40efa2:	mov    rcx,QWORD PTR [rsi+0x28]
  40efa6:	mov    r8,QWORD PTR [rbx+0x18]
  40efaa:	lea    rdx,[rip+0x1e264]        # 0x42d215
  40efb1:	call   0x408fc0
  40efb6:	mov    rcx,QWORD PTR [rsi+0x28]
  40efba:	lea    rdx,[rip+0x1e24f]        # 0x42d210
  40efc1:	mov    r8,r15
  40efc4:	call   0x408fc0
  40efc9:	mov    rcx,QWORD PTR [rsi+0x28]
  40efcd:	mov    r8,QWORD PTR [rbx+0x18]
  40efd1:	lea    rdx,[rip+0x1e242]        # 0x42d21a
  40efd8:	call   0x408fc0
  40efdd:	nop
  40efde:	xchg   ax,ax
  40efe0:	push   r15
  40efe2:	push   r14
  40efe4:	push   r13
  40efe6:	push   r12
  40efe8:	push   rbp
  40efe9:	push   rdi
  40efea:	push   rsi
  40efeb:	push   rbx
  40efec:	sub    rsp,0x38
  40eff0:	mov    edi,edx
  40eff2:	mov    rbp,rcx
  40eff5:	mov    rcx,r8
  40eff8:	mov    rbx,r8
  40effb:	mov    r12,r9
  40effe:	call   0x422468
  40f003:	movsxd rdx,edi
  40f006:	cmp    rax,rdx
  40f009:	setae  sil
  40f00d:	test   rax,rax
  40f010:	sete   al
  40f013:	or     sil,al
  40f016:	jne    0x40f055
  40f018:	movzx  r10d,BYTE PTR [rbx]
  40f01c:	cmp    r10b,0x24
  40f020:	je     0x40f070
  40f022:	mov    r9d,r10d
  40f025:	xor    eax,eax
  40f027:	jmp    0x40f044
  40f029:	nop    DWORD PTR [rax+0x0]
  40f030:	add    rax,0x1
  40f034:	mov    r8d,edi
  40f037:	sub    r8d,eax
  40f03a:	test   r8d,r8d
  40f03d:	jle    0x40f055
  40f03f:	movzx  r9d,BYTE PTR [rbx+rax*1]
  40f044:	test   r9b,r9b
  40f047:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40f04c:	jne    0x40f030
  40f04e:	mov    esi,0x1
  40f053:	jmp    0x40f057
  40f055:	xor    esi,esi
  40f057:	mov    eax,esi
  40f059:	add    rsp,0x38
  40f05d:	pop    rbx
  40f05e:	pop    rsi
  40f05f:	pop    rdi
  40f060:	pop    rbp
  40f061:	pop    r12
  40f063:	pop    r13
  40f065:	pop    r14
  40f067:	pop    r15
  40f069:	ret    
  40f06a:	nop    WORD PTR [rax+rax*1+0x0]
  40f070:	movzx  eax,BYTE PTR [rbx+0x1]
  40f074:	cmp    al,0x24
  40f076:	je     0x40f16e
  40f07c:	cmp    al,0x40
  40f07e:	je     0x40f13a
  40f084:	test   al,al
  40f086:	je     0x40f057
  40f088:	cmp    al,0x7f
  40f08a:	ja     0x40f057
  40f08c:	lea    rcx,[rip+0x21d6d]        # 0x430e00
  40f093:	movzx  edx,al
  40f096:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40f09d:	je     0x40f057
  40f09f:	add    rbx,0x1
  40f0a3:	mov    r8,rbp
  40f0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0b0:	add    r8,0x1
  40f0b4:	add    rbx,0x1
  40f0b8:	mov    BYTE PTR [r8-0x1],al
  40f0bc:	movzx  eax,BYTE PTR [rbx]
  40f0bf:	cmp    al,0x7f
  40f0c1:	ja     0x40f0cf
  40f0c3:	movzx  edx,al
  40f0c6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40f0cd:	jne    0x40f0b0
  40f0cf:	cmp    r8,rbp
  40f0d2:	je     0x40f057
  40f0d4:	mov    BYTE PTR [r8],0x0
  40f0d8:	mov    rcx,rbp
  40f0db:	call   0x422500
  40f0e0:	test   rax,rax
  40f0e3:	mov    r14,rax
  40f0e6:	je     0x40f057
  40f0ec:	mov    rcx,rax
  40f0ef:	mov    edi,edi
  40f0f1:	call   0x422468
  40f0f6:	mov    rcx,rbx
  40f0f9:	mov    r13,rax
  40f0fc:	call   0x422468
  40f101:	lea    r12,[rax+0x1]
  40f105:	lea    rax,[r12+r13*1]
  40f109:	cmp    rax,rdi
  40f10c:	jae    0x40f057
  40f112:	mov    r8,r13
  40f115:	mov    rdx,r14
  40f118:	mov    rcx,rbp
  40f11b:	call   0x4224d8
  40f120:	lea    rcx,[rbp+r13*1+0x0]
  40f125:	mov    r8,r12
  40f128:	mov    rdx,rbx
  40f12b:	mov    esi,0x1
  40f130:	call   0x4224d8
  40f135:	jmp    0x40f057
  40f13a:	mov    r9,QWORD PTR [rip+0x18f87]        # 0x4280c8
  40f141:	cmp    BYTE PTR [r9],0x0
  40f145:	je     0x40f055
  40f14b:	add    rbx,0x2
  40f14f:	lea    r8,[rip+0x1dd45]        # 0x42ce9b
  40f156:	mov    rcx,rbp
  40f159:	mov    QWORD PTR [rsp+0x20],rbx
  40f15e:	call   0x4089f0
  40f163:	cmp    edi,eax
  40f165:	setg   sil
  40f169:	jmp    0x40f057
  40f16e:	movzx  eax,BYTE PTR [rbx+0x2]
  40f172:	test   al,al
  40f174:	je     0x40f216
  40f17a:	cmp    al,0x5c
  40f17c:	mov    r15d,0x3
  40f182:	jne    0x40f057
  40f188:	mov    edx,0x5c
  40f18d:	mov    rcx,r12
  40f190:	mov    r14,r12
  40f193:	call   0x422490
  40f198:	test   rax,rax
  40f19b:	je     0x40f221
  40f1a1:	mov    edx,0x5c
  40f1a6:	mov    rcx,r14
  40f1a9:	call   0x422448
  40f1ae:	test   rax,rax
  40f1b1:	mov    r13,rax
  40f1b4:	je     0x40f057
  40f1ba:	movsxd rax,r15d
  40f1bd:	sub    r13,r14
  40f1c0:	mov    edi,edi
  40f1c2:	add    rbx,rax
  40f1c5:	add    r13,0x1
  40f1c9:	mov    rcx,rbx
  40f1cc:	call   0x422468
  40f1d1:	lea    r15,[rax+0x1]
  40f1d5:	lea    rax,[r15+r13*1]
  40f1d9:	cmp    rax,rdi
  40f1dc:	ja     0x40f057
  40f1e2:	mov    r8,r13
  40f1e5:	mov    rdx,r14
  40f1e8:	mov    rcx,rbp
  40f1eb:	call   0x4224d8
  40f1f0:	lea    rcx,[rbp+r13*1+0x0]
  40f1f5:	mov    r8,r15
  40f1f8:	mov    rdx,rbx
  40f1fb:	call   0x4224d8
  40f200:	cmp    r12,r14
  40f203:	je     0x40f04e
  40f209:	mov    rcx,r14
  40f20c:	call   0x422528
  40f211:	jmp    0x40f04e
  40f216:	mov    r15d,0x2
  40f21c:	jmp    0x40f188
  40f221:	lea    rcx,[rip+0x1dc3a]        # 0x42ce62
  40f228:	call   0x422500
  40f22d:	mov    rdx,r12
  40f230:	mov    rcx,rax
  40f233:	call   0x40b3b0
  40f238:	test   rax,rax
  40f23b:	mov    r14,rax
  40f23e:	jne    0x40f1a1
  40f244:	jmp    0x40f057
  40f249:	nop    DWORD PTR [rax+0x0]
  40f250:	push   r15
  40f252:	push   r14
  40f254:	push   r13
  40f256:	push   r12
  40f258:	push   rbp
  40f259:	push   rdi
  40f25a:	push   rsi
  40f25b:	push   rbx
  40f25c:	sub    rsp,0x178
  40f263:	mov    rbx,rcx
  40f266:	mov    r12,rdx
  40f269:	mov    rcx,QWORD PTR [rip+0x19150]        # 0x4283c0
  40f270:	mov    rdx,QWORD PTR [rip+0x597d1]        # 0x468a48
  40f277:	mov    r13,r8
  40f27a:	lea    rsi,[rbx+0x8]
  40f27e:	lea    rbp,[rsp+0x60]
  40f283:	call   0x422538
  40f288:	mov    rbx,QWORD PTR [rbx]
  40f28b:	test   rbx,rbx
  40f28e:	je     0x40f360
  40f294:	lea    r15,[rsp+0x20]
  40f299:	mov    r14,QWORD PTR [rip+0x8d41c]        # 0x49c6bc
  40f2a0:	jmp    0x40f2c4
  40f2a2:	mov    rdx,QWORD PTR [rip+0x5979f]        # 0x468a48
  40f2a9:	add    rsi,0x8
  40f2ad:	mov    ecx,0xa
  40f2b2:	call   0x422540
  40f2b7:	mov    rbx,QWORD PTR [rsi-0x8]
  40f2bb:	test   rbx,rbx
  40f2be:	je     0x40f360
  40f2c4:	mov    r9,r13
  40f2c7:	mov    r8,rbx
  40f2ca:	mov    edx,0x105
  40f2cf:	mov    rcx,rbp
  40f2d2:	mov    rdi,rbx
  40f2d5:	call   0x40efe0
  40f2da:	test   al,al
  40f2dc:	je     0x40f2e6
  40f2de:	cmp    BYTE PTR [rbx],0x24
  40f2e1:	mov    rdi,rbp
  40f2e4:	je     0x40f344
  40f2e6:	mov    rdx,QWORD PTR [rip+0x190bb]        # 0x4283a8
  40f2ed:	mov    rcx,QWORD PTR [rip+0x59754]        # 0x468a48
  40f2f4:	mov    r8,rbx
  40f2f7:	call   0x408600
  40f2fc:	cmp    BYTE PTR [r12],0x0
  40f301:	je     0x40f2a2
  40f303:	mov    rdx,r15
  40f306:	mov    rcx,rdi
  40f309:	call   r14
  40f30c:	test   eax,eax
  40f30e:	jne    0x40f2a2
  40f310:	movzx  eax,WORD PTR [rsp+0x26]
  40f315:	and    ax,0xf000
  40f319:	cmp    ax,0x4000
  40f31d:	jne    0x40f2a2
  40f31f:	mov    rdx,QWORD PTR [rip+0x59722]        # 0x468a48
  40f326:	mov    ecx,0x5c
  40f32b:	call   0x422540
  40f330:	mov    rdx,QWORD PTR [rip+0x59711]        # 0x468a48
  40f337:	mov    rcx,r12
  40f33a:	call   0x422538
  40f33f:	jmp    0x40f2a2
  40f344:	movzx  eax,BYTE PTR [rbx+0x1]
  40f348:	cmp    al,0x40
  40f34a:	je     0x40f350
  40f34c:	cmp    al,0x24
  40f34e:	jne    0x40f2e6
  40f350:	mov    rdi,rbp
  40f353:	mov    rbx,rbp
  40f356:	jmp    0x40f2e6
  40f358:	nop    DWORD PTR [rax+rax*1+0x0]
  40f360:	add    rsp,0x178
  40f367:	pop    rbx
  40f368:	pop    rsi
  40f369:	pop    rdi
  40f36a:	pop    rbp
  40f36b:	pop    r12
  40f36d:	pop    r13
  40f36f:	pop    r14
  40f371:	pop    r15
  40f373:	ret    
  40f374:	xchg   ax,ax
  40f376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f380:	push   r15
  40f382:	push   r14
  40f384:	push   r13
  40f386:	push   r12
  40f388:	push   rbp
  40f389:	push   rdi
  40f38a:	push   rsi
  40f38b:	push   rbx
  40f38c:	sub    rsp,0xc8
  40f393:	mov    rax,QWORD PTR [rip+0x18a9e]        # 0x427e38
  40f39a:	mov    rsi,rcx
  40f39d:	mov    edx,DWORD PTR [rax+0x78]
  40f3a0:	test   dl,0xf
  40f3a3:	je     0x40f760
  40f3a9:	mov    rdx,QWORD PTR [rax+0x80]
  40f3b0:	mov    QWORD PTR [rip+0x596d9],rdx        # 0x468a90
  40f3b7:	test   BYTE PTR [rax+0x10],0xf
  40f3bb:	mov    r12,QWORD PTR [rip+0x8d062]        # 0x49c424
  40f3c2:	jne    0x40f785
  40f3c8:	cmp    QWORD PTR [rip+0x596b8],0x0        # 0x468a88
  40f3d0:	je     0x40f3e5
  40f3d2:	call   r12
  40f3d5:	mov    rcx,QWORD PTR [rip+0x596ac]        # 0x468a88
  40f3dc:	lea    rdx,[rax+0x30]
  40f3e0:	call   0x422538
  40f3e5:	lea    rdi,[rsp+0x40]
  40f3ea:	xor    ecx,ecx
  40f3ec:	call   QWORD PTR [rip+0x8d112]        # 0x49c504
  40f3f2:	lea    rcx,[rsp+0x38]
  40f3f7:	mov    QWORD PTR [rsp+0x38],rax
  40f3fc:	call   QWORD PTR [rip+0x8d0ca]        # 0x49c4cc
  40f402:	lea    r8,[rip+0x1f098]        # 0x42e4a1
  40f409:	mov    r9,rax
  40f40c:	mov    edx,0x80
  40f411:	mov    rcx,rdi
  40f414:	call   0x422470
  40f419:	mov    rax,QWORD PTR [rip+0x18a18]        # 0x427e38
  40f420:	lea    r8,[rip+0x1f073]        # 0x42e49a
  40f427:	test   BYTE PTR [rax+0x10],0xf
  40f42b:	je     0x40f431
  40f42d:	mov    r8,QWORD PTR [rax+0x18]
  40f431:	cmp    QWORD PTR [rip+0x5964f],0x0        # 0x468a88
  40f439:	je     0x40fb64
  40f43f:	lea    rdx,[rip+0x206e4]        # 0x42fb2a
  40f446:	lea    rcx,[rip+0x20493]        # 0x42f8e0
  40f44d:	mov    r9,rdi
  40f450:	xor    ebx,ebx
  40f452:	call   0x408a10
  40f457:	mov    rdx,QWORD PTR [rsi+0x30]
  40f45b:	lea    rcx,[rip+0x1f14f]        # 0x42e5b1
  40f462:	call   0x408a10
  40f467:	mov    rbp,QWORD PTR [rsi+0x30]
  40f46b:	mov    r13,QWORD PTR [rip+0x8d21a]        # 0x49c68c
  40f472:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  40f477:	call   r13
  40f47a:	mov    BYTE PTR [rdi+rbx*1],al
  40f47d:	add    rbx,0x1
  40f481:	test   al,al
  40f483:	jne    0x40f472
  40f485:	lea    r8,[rip+0x1df57]        # 0x42d3e3
  40f48c:	lea    rcx,[rip+0x1f206]        # 0x42e699
  40f493:	mov    rdx,rbp
  40f496:	mov    QWORD PTR [rsi+0x20],rdi
  40f49a:	mov    QWORD PTR [rsi+0x28],rdi
  40f49e:	call   0x408a10
  40f4a3:	mov    rdx,QWORD PTR [rsi+0x30]
  40f4a7:	lea    r8,[rip+0x1df3f]        # 0x42d3ed
  40f4ae:	lea    rcx,[rip+0x1f1e4]        # 0x42e699
  40f4b5:	call   0x408a10
  40f4ba:	mov    rbx,QWORD PTR [rsi+0x78]
  40f4be:	lea    rdx,[rip+0x2dfb]        # 0x4122c0
  40f4c5:	mov    eax,DWORD PTR [rsi+0xb0]
  40f4cb:	cmp    QWORD PTR [rbx+0x38],rdx
  40f4cf:	je     0x40f4ff
  40f4d1:	cmp    eax,0x1
  40f4d4:	jle    0x40f51a
  40f4d6:	sub    eax,0x2
  40f4d9:	add    rax,0x1
  40f4dd:	lea    rcx,[rax+rax*2]
  40f4e1:	lea    rax,[rax+rcx*4]
  40f4e5:	lea    rcx,[rbx+rax*8]
  40f4e9:	mov    rax,rbx
  40f4ec:	jmp    0x40f4f5
  40f4ee:	xchg   ax,ax
  40f4f0:	cmp    rax,rcx
  40f4f3:	je     0x40f51a
  40f4f5:	add    rax,0x68
  40f4f9:	cmp    QWORD PTR [rax+0x38],rdx
  40f4fd:	jne    0x40f4f0
  40f4ff:	mov    rdx,QWORD PTR [rsi+0x30]
  40f503:	lea    r8,[rip+0x1dee9]        # 0x42d3f3
  40f50a:	lea    rcx,[rip+0x1f188]        # 0x42e699
  40f511:	call   0x408a10
  40f516:	mov    rbx,QWORD PTR [rsi+0x78]
  40f51a:	mov    eax,DWORD PTR [rsi+0xb4]
  40f520:	test   eax,eax
  40f522:	jle    0x40f5f0
  40f528:	sub    eax,0x1
  40f52b:	lea    r14,[rip+0x1fbda]        # 0x42f10c
  40f532:	lea    r13,[rip+0x2056e]        # 0x42faa7
  40f539:	add    rax,0x1
  40f53d:	lea    rdx,[rax+rax*2]
  40f541:	lea    rax,[rax+rdx*4]
  40f545:	lea    rbp,[rbx+rax*8]
  40f549:	jmp    0x40f596
  40f54b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f550:	cmp    eax,0x4
  40f553:	je     0x40f750
  40f559:	cmp    eax,0x5
  40f55c:	jne    0x40f730
  40f562:	mov    r9d,DWORD PTR [rbx+0x18]
  40f566:	lea    r8,[rip+0x1d857]        # 0x42cdc4
  40f56d:	mov    edx,0x20
  40f572:	mov    rcx,rdi
  40f575:	call   0x4089f0
  40f57a:	mov    r8,QWORD PTR [rbx+0x48]
  40f57e:	mov    r9,rdi
  40f581:	mov    rdx,QWORD PTR [rsi+0x30]
  40f585:	mov    rcx,r15
  40f588:	call   0x408a10
  40f58d:	add    rbx,0x68
  40f591:	cmp    rbx,rbp
  40f594:	je     0x40f5f0
  40f596:	mov    eax,DWORD PTR [rbx+0x10]
  40f599:	test   eax,0x280000
  40f59e:	jne    0x40f58d
  40f5a0:	mov    r8,QWORD PTR [rbx+0x48]
  40f5a4:	test   r8,r8
  40f5a7:	je     0x40f58d
  40f5a9:	cmp    WORD PTR [rbx+0xc],0x1
  40f5ae:	mov    r15,r13
  40f5b1:	cmova  r15,r14
  40f5b5:	and    eax,0xf000
  40f5ba:	shr    eax,0xc
  40f5bd:	cmp    eax,0x3
  40f5c0:	je     0x40f710
  40f5c6:	ja     0x40f550
  40f5c8:	cmp    eax,0x2
  40f5cb:	jne    0x40f730
  40f5d1:	mov    rdx,rbx
  40f5d4:	mov    ecx,0x2
  40f5d9:	call   QWORD PTR [rbx+0x38]
  40f5dc:	mov    r9,QWORD PTR [rbx+0x18]
  40f5e0:	mov    r8,QWORD PTR [rbx+0x48]
  40f5e4:	jmp    0x40f581
  40f5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5f0:	mov    eax,DWORD PTR [rsi+0x10]
  40f5f3:	and    eax,0x3
  40f5f6:	cmp    eax,0x2
  40f5f9:	je     0x40fb24
  40f5ff:	cmp    eax,0x3
  40f602:	je     0x40fa40
  40f608:	cmp    eax,0x1
  40f60b:	je     0x40f8c0
  40f611:	call   r12
  40f614:	lea    rcx,[rip+0x1fd92]        # 0x42f3ad
  40f61b:	lea    r9,[rax+0x30]
  40f61f:	mov    r8d,0x66
  40f625:	mov    edx,0x1
  40f62a:	call   0x422510
  40f62f:	call   r12
  40f632:	lea    rcx,[rip+0x1f50d]        # 0x42eb46
  40f639:	lea    r9,[rax+0x30]
  40f63d:	mov    edx,0x1
  40f642:	mov    r8d,0xfa
  40f648:	call   0x422510
  40f64d:	mov    rcx,rsi
  40f650:	call   0x40ac10
  40f655:	mov    rdx,QWORD PTR [rsi+0x30]
  40f659:	lea    rcx,[rip+0x1f725]        # 0x42ed85
  40f660:	call   0x408a10
  40f665:	mov    edi,DWORD PTR [rsi+0xb4]
  40f66b:	mov    rdx,QWORD PTR [rsi+0x30]
  40f66f:	lea    rcx,[rip+0x1f355]        # 0x42e9cb
  40f676:	mov    rbx,QWORD PTR [rsi+0x78]
  40f67a:	call   0x408a10
  40f67f:	test   edi,edi
  40f681:	jle    0x40f973
  40f687:	lea    eax,[rdi-0x1]
  40f68a:	lea    rbp,[rip+0x1f1e6]        # 0x42e877
  40f691:	lea    rdi,[rip+0x1f23b]        # 0x42e8d3
  40f698:	add    rax,0x1
  40f69c:	lea    rdx,[rax+rax*2]
  40f6a0:	lea    rax,[rax+rdx*4]
  40f6a4:	lea    r13,[rbx+rax*8]
  40f6a8:	jmp    0x40f6df
  40f6aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f6b0:	test   eax,0x100000
  40f6b5:	je     0x40f6d2
  40f6b7:	cmp    WORD PTR [rbx+0xc],0x2
  40f6bc:	mov    rcx,rbp
  40f6bf:	mov    r9d,0x1
  40f6c5:	cmovb  rcx,rdi
  40f6c9:	mov    rdx,QWORD PTR [rsi+0x30]
  40f6cd:	call   0x408a10
  40f6d2:	add    rbx,0x68
  40f6d6:	cmp    rbx,r13
  40f6d9:	je     0x40f973
  40f6df:	mov    eax,DWORD PTR [rbx+0x10]
  40f6e2:	test   eax,0x280000
  40f6e7:	jne    0x40f6d2
  40f6e9:	mov    r8,QWORD PTR [rbx+0x48]
  40f6ed:	test   r8,r8
  40f6f0:	je     0x40f6d2
  40f6f2:	movzx  r9d,WORD PTR [rbx+0xa]
  40f6f7:	test   r9w,r9w
  40f6fb:	je     0x40f6b0
  40f6fd:	cmp    WORD PTR [rbx+0xc],0x1
  40f702:	mov    rcx,rdi
  40f705:	cmova  rcx,rbp
  40f709:	jmp    0x40f6c9
  40f70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f710:	mov    eax,DWORD PTR [rbx+0x18]
  40f713:	lea    r9,[rip+0x1ec35]        # 0x42e34f
  40f71a:	test   eax,eax
  40f71c:	lea    rax,[rip+0x1edac]        # 0x42e4cf
  40f723:	cmovne r9,rax
  40f727:	jmp    0x40f581
  40f72c:	nop    DWORD PTR [rax+0x0]
  40f730:	mov    r9,QWORD PTR [rbx+0x18]
  40f734:	test   r9,r9
  40f737:	jne    0x40f581
  40f73d:	lea    rax,[rip+0x203a8]        # 0x42faec
  40f744:	cmp    r15,r13
  40f747:	cmove  r15,rax
  40f74b:	jmp    0x40f581
  40f750:	mov    r9d,DWORD PTR [rbx+0x18]
  40f754:	lea    r8,[rip+0x1dae7]        # 0x42d242
  40f75b:	jmp    0x40f56d
  40f760:	and    edx,0x20
  40f763:	je     0x40fb40
  40f769:	test   BYTE PTR [rax+0x10],0xf
  40f76d:	mov    QWORD PTR [rip+0x59318],0x0        # 0x468a90
  40f778:	mov    r12,QWORD PTR [rip+0x8cca5]        # 0x49c424
  40f77f:	je     0x40f3c8
  40f785:	mov    r13,QWORD PTR [rax+0x18]
  40f789:	lea    rdx,[rip+0x1daa0]        # 0x42d230
  40f790:	mov    rbp,QWORD PTR [rsi+0x28]
  40f794:	mov    rcx,r13
  40f797:	call   0x422550
  40f79c:	test   rax,rax
  40f79f:	mov    rdi,rax
  40f7a2:	je     0x40fbc4
  40f7a8:	mov    rcx,rax
  40f7ab:	call   0x4223c0
  40f7b0:	lea    rdx,[rsp+0x40]
  40f7b5:	mov    ecx,eax
  40f7b7:	call   QWORD PTR [rip+0x8ccdf]        # 0x49c49c
  40f7bd:	test   eax,eax
  40f7bf:	jne    0x40fbd4
  40f7c5:	movzx  eax,WORD PTR [rsp+0x46]
  40f7ca:	and    ax,0xf000
  40f7ce:	cmp    ax,0x8000
  40f7d2:	jne    0x40fbd4
  40f7d8:	mov    rax,QWORD PTR [rsp+0x58]
  40f7dd:	lea    rcx,[rax+0x1]
  40f7e1:	call   0x40a440
  40f7e6:	mov    r8,QWORD PTR [rsp+0x58]
  40f7eb:	mov    r12,rax
  40f7ee:	mov    rbx,rax
  40f7f1:	jmp    0x40f808
  40f7f3:	mov    r8,QWORD PTR [rsp+0x58]
  40f7f8:	sub    r8,rax
  40f7fb:	test   r8,r8
  40f7fe:	mov    QWORD PTR [rsp+0x58],r8
  40f803:	je     0x40f81d
  40f805:	add    rbx,rax
  40f808:	mov    r9,rdi
  40f80b:	mov    edx,0x1
  40f810:	mov    rcx,rbx
  40f813:	call   0x422530
  40f818:	test   rax,rax
  40f81b:	jne    0x40f7f3
  40f81d:	mov    BYTE PTR [rbx],0x0
  40f820:	mov    rcx,rdi
  40f823:	call   0x422570
  40f828:	test   r12,r12
  40f82b:	mov    QWORD PTR [rip+0x59246],r12        # 0x468a78
  40f832:	je     0x40f87a
  40f834:	lea    rdx,[rip+0x202ef]        # 0x42fb2a
  40f83b:	mov    rcx,r12
  40f83e:	call   0x422440
  40f843:	test   rax,rax
  40f846:	je     0x40fba8
  40f84c:	lea    rcx,[rax+0x1]
  40f850:	lea    rdx,[rip+0x1f100]        # 0x42e957
  40f857:	mov    BYTE PTR [rax],0x0
  40f85a:	call   0x422440
  40f85f:	test   rax,rax
  40f862:	je     0x40fb8f
  40f868:	add    rax,0x73
  40f86c:	mov    QWORD PTR [rip+0x59215],r12        # 0x468a88
  40f873:	mov    QWORD PTR [rip+0x59206],rax        # 0x468a80
  40f87a:	mov    r12,QWORD PTR [rip+0x8cba3]        # 0x49c424
  40f881:	call   r12
  40f884:	lea    rdx,[rip+0x1d9ad]        # 0x42d238
  40f88b:	lea    r8,[rax+0x30]
  40f88f:	mov    rcx,r13
  40f892:	call   0x422520
  40f897:	mov    rbx,rax
  40f89a:	call   r12
  40f89d:	lea    rdx,[rax+0x30]
  40f8a1:	cmp    rbx,rdx
  40f8a4:	je     0x40f3c8
  40f8aa:	lea    rdx,[rip+0x1d989]        # 0x42d23a
  40f8b1:	mov    r8,r13
  40f8b4:	mov    rcx,rbp
  40f8b7:	call   0x408fc0
  40f8bc:	nop    DWORD PTR [rax+0x0]
  40f8c0:	call   r12
  40f8c3:	lea    rcx,[rip+0x1f3ec]        # 0x42ecb6
  40f8ca:	lea    r9,[rax+0x30]
  40f8ce:	mov    r8d,0xce
  40f8d4:	mov    edx,0x1
  40f8d9:	call   0x422510
  40f8de:	call   r12
  40f8e1:	lea    rcx,[rip+0x1ea96]        # 0x42e37e
  40f8e8:	lea    r9,[rax+0x30]
  40f8ec:	mov    r8d,0xa
  40f8f2:	mov    edx,0x1
  40f8f7:	call   0x422510
  40f8fc:	call   r12
  40f8ff:	lea    rcx,[rip+0x1f240]        # 0x42eb46
  40f906:	lea    r9,[rax+0x30]
  40f90a:	mov    edx,0x1
  40f90f:	mov    r8d,0xfa
  40f915:	call   0x422510
  40f91a:	mov    rcx,rsi
  40f91d:	call   0x40ac10
  40f922:	mov    rdx,QWORD PTR [rsi+0x30]
  40f926:	lea    rcx,[rip+0x1f458]        # 0x42ed85
  40f92d:	call   0x408a10
  40f932:	call   r12
  40f935:	lea    rcx,[rip+0x1e9dc]        # 0x42e318
  40f93c:	lea    r9,[rax+0x30]
  40f940:	mov    r8d,0xc
  40f946:	mov    edx,0x1
  40f94b:	call   0x422510
  40f950:	call   r12
  40f953:	lea    rcx,[rip+0x1f850]        # 0x42f1aa
  40f95a:	lea    r9,[rax+0x30]
  40f95e:	mov    r8d,0x38
  40f964:	mov    edx,0x1
  40f969:	call   0x422510
  40f96e:	jmp    0x40f665
  40f973:	call   r12
  40f976:	lea    rcx,[rip+0x1efda]        # 0x42e957
  40f97d:	lea    r9,[rax+0x30]
  40f981:	mov    r8d,0x73
  40f987:	mov    edx,0x1
  40f98c:	call   0x422510
  40f991:	mov    rax,QWORD PTR [rip+0x590e8]        # 0x468a80
  40f998:	test   rax,rax
  40f99b:	je     0x40f9a2
  40f99d:	cmp    BYTE PTR [rax],0x0
  40f9a0:	jne    0x40fa10
  40f9a2:	mov    rax,QWORD PTR [rip+0x1848f]        # 0x427e38
  40f9a9:	test   BYTE PTR [rax+0x78],0x20
  40f9ad:	je     0x40fa25
  40f9af:	call   r12
  40f9b2:	lea    rcx,[rax+0x30]
  40f9b6:	call   0x422570
  40f9bb:	call   r12
  40f9be:	lea    rcx,[rax+0x30]
  40f9c2:	call   0x422568
  40f9c7:	test   eax,eax
  40f9c9:	jne    0x40fbe6
  40f9cf:	mov    rcx,QWORD PTR [rip+0x590a2]        # 0x468a78
  40f9d6:	call   0x422528
  40f9db:	mov    QWORD PTR [rip+0x590a2],0x0        # 0x468a88
  40f9e6:	mov    QWORD PTR [rip+0x5908f],0x0        # 0x468a80
  40f9f1:	mov    QWORD PTR [rip+0x5907c],0x0        # 0x468a78
  40f9fc:	add    rsp,0xc8
  40fa03:	pop    rbx
  40fa04:	pop    rsi
  40fa05:	pop    rdi
  40fa06:	pop    rbp
  40fa07:	pop    r12
  40fa09:	pop    r13
  40fa0b:	pop    r14
  40fa0d:	pop    r15
  40fa0f:	ret    
  40fa10:	call   r12
  40fa13:	mov    rcx,QWORD PTR [rip+0x59066]        # 0x468a80
  40fa1a:	lea    rdx,[rax+0x30]
  40fa1e:	call   0x422538
  40fa23:	jmp    0x40f9af
  40fa25:	mov    rdx,QWORD PTR [rsi+0x30]
  40fa29:	lea    rcx,[rip+0x1ea44]        # 0x42e474
  40fa30:	call   0x408a10
  40fa35:	jmp    0x40f9af
  40fa3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fa40:	call   r12
  40fa43:	lea    rcx,[rip+0x1f26c]        # 0x42ecb6
  40fa4a:	lea    r9,[rax+0x30]
  40fa4e:	mov    r8d,0xce
  40fa54:	mov    edx,0x1
  40fa59:	call   0x422510
  40fa5e:	call   r12
  40fa61:	lea    rcx,[rip+0x1e916]        # 0x42e37e
  40fa68:	lea    r9,[rax+0x30]
  40fa6c:	mov    r8d,0xa
  40fa72:	mov    edx,0x1
  40fa77:	call   0x422510
  40fa7c:	call   r12
  40fa7f:	lea    rcx,[rip+0x1f0c0]        # 0x42eb46
  40fa86:	lea    r9,[rax+0x30]
  40fa8a:	mov    r8d,0xfa
  40fa90:	mov    edx,0x1
  40fa95:	call   0x422510
  40fa9a:	mov    rcx,rsi
  40fa9d:	call   0x40ac10
  40faa2:	mov    rdx,QWORD PTR [rsi+0x30]
  40faa6:	lea    rcx,[rip+0x1f2d8]        # 0x42ed85
  40faad:	call   0x408a10
  40fab2:	call   r12
  40fab5:	lea    rcx,[rip+0x1e85c]        # 0x42e318
  40fabc:	lea    r9,[rax+0x30]
  40fac0:	mov    r8d,0xc
  40fac6:	mov    edx,0x1
  40facb:	call   0x422510
  40fad0:	call   r12
  40fad3:	lea    rcx,[rip+0x1e87b]        # 0x42e355
  40fada:	lea    r9,[rax+0x30]
  40fade:	mov    r8d,0x9
  40fae4:	mov    edx,0x1
  40fae9:	call   0x422510
  40faee:	call   r12
  40faf1:	lea    rcx,[rip+0x1f149]        # 0x42ec41
  40faf8:	lea    r9,[rax+0x30]
  40fafc:	mov    edx,0x1
  40fb01:	mov    r8d,0x74
  40fb07:	call   0x422510
  40fb0c:	mov    rcx,rsi
  40fb0f:	call   0x40a980
  40fb14:	mov    rdx,QWORD PTR [rsi+0x30]
  40fb18:	lea    rcx,[rip+0x1f8f5]        # 0x42f414
  40fb1f:	jmp    0x40f92d
  40fb24:	call   r12
  40fb27:	mov    r8d,0xce
  40fb2d:	lea    r9,[rax+0x30]
  40fb31:	mov    edx,0x1
  40fb36:	lea    rcx,[rip+0x1f179]        # 0x42ecb6
  40fb3d:	jmp    0x40facb
  40fb3f:	nop
  40fb40:	lea    rcx,[rip+0x1d6d9]        # 0x42d220
  40fb47:	call   0x422500
  40fb4c:	test   rax,rax
  40fb4f:	mov    QWORD PTR [rip+0x58f3a],rax        # 0x468a90
  40fb56:	je     0x40fbb4
  40fb58:	mov    rax,QWORD PTR [rip+0x182d9]        # 0x427e38
  40fb5f:	jmp    0x40f3b7
  40fb64:	mov    rdx,QWORD PTR [rip+0x58f25]        # 0x468a90
  40fb6b:	test   rdx,rdx
  40fb6e:	je     0x40f43f
  40fb74:	lea    rcx,[rip+0x1e8f2]        # 0x42e46d
  40fb7b:	mov    QWORD PTR [rsp+0x28],r8
  40fb80:	call   0x408a10
  40fb85:	mov    r8,QWORD PTR [rsp+0x28]
  40fb8a:	jmp    0x40f43f
  40fb8f:	mov    rcx,r12
  40fb92:	call   0x422468
  40fb97:	lea    rax,[r12+rax*1+0x53]
  40fb9c:	mov    QWORD PTR [rip+0x58edd],rax        # 0x468a80
  40fba3:	jmp    0x40f87a
  40fba8:	mov    QWORD PTR [rip+0x58ed1],r12        # 0x468a80
  40fbaf:	jmp    0x40f87a
  40fbb4:	lea    rax,[rip+0x1d66b]        # 0x42d226
  40fbbb:	mov    QWORD PTR [rip+0x58ece],rax        # 0x468a90
  40fbc2:	jmp    0x40fb58
  40fbc4:	mov    QWORD PTR [rip+0x58ea9],0x0        # 0x468a78
  40fbcf:	jmp    0x40f87a
  40fbd4:	lea    rdx,[rip+0x1d657]        # 0x42d232
  40fbdb:	mov    r8,r13
  40fbde:	mov    rcx,rbp
  40fbe1:	call   0x408fc0
  40fbe6:	mov    rcx,QWORD PTR [rsi+0x28]
  40fbea:	mov    r8,QWORD PTR [rip+0x186c7]        # 0x4282b8
  40fbf1:	mov    rdx,QWORD PTR [rip+0x186d0]        # 0x4282c8
  40fbf8:	call   0x408fc0
  40fbfd:	nop
  40fbfe:	xchg   ax,ax
  40fc00:	push   rbx
  40fc01:	sub    rsp,0x20
  40fc05:	test   rcx,rcx
  40fc08:	je     0x40fc1e
  40fc0a:	cmp    DWORD PTR [rcx],0x6
  40fc0d:	mov    rbx,rcx
  40fc10:	je     0x40fc24
  40fc12:	call   QWORD PTR [rip+0x8c85c]        # 0x49c474
  40fc18:	mov    DWORD PTR [rax],0x16
  40fc1e:	add    rsp,0x20
  40fc22:	pop    rbx
  40fc23:	ret    
  40fc24:	mov    rcx,QWORD PTR [rcx+0x10]
  40fc28:	call   0x408540
  40fc2d:	mov    rcx,rbx
  40fc30:	add    rsp,0x20
  40fc34:	pop    rbx
  40fc35:	jmp    0x422528
  40fc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	push   rdi
  40fc41:	push   rsi
  40fc42:	push   rbx
  40fc43:	sub    rsp,0x20
  40fc47:	cmp    rcx,0xe
  40fc4b:	jbe    0x40fc93
  40fc4d:	test   BYTE PTR [rdx+0x10],0x8
  40fc51:	mov    rsi,rdx
  40fc54:	je     0x40fca0
  40fc56:	mov    rcx,QWORD PTR [rdx+0x20]
  40fc5a:	test   rcx,rcx
  40fc5d:	je     0x40fc93
  40fc5f:	mov    eax,DWORD PTR [rcx]
  40fc61:	lea    rbx,[rcx+0x8]
  40fc65:	test   eax,eax
  40fc67:	jle    0x40fc87
  40fc69:	sub    eax,0x1
  40fc6c:	lea    rdi,[rbx+rax*8+0x8]
  40fc71:	add    rbx,0x8
  40fc75:	mov    rcx,QWORD PTR [rbx-0x8]
  40fc79:	call   0x40fc00
  40fc7e:	cmp    rbx,rdi
  40fc81:	jne    0x40fc71
  40fc83:	mov    rcx,QWORD PTR [rsi+0x20]
  40fc87:	add    rsp,0x20
  40fc8b:	pop    rbx
  40fc8c:	pop    rsi
  40fc8d:	pop    rdi
  40fc8e:	jmp    0x422528
  40fc93:	add    rsp,0x20
  40fc97:	pop    rbx
  40fc98:	pop    rsi
  40fc99:	pop    rdi
  40fc9a:	ret    
  40fc9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fca0:	mov    rbx,QWORD PTR [rdx+0x50]
  40fca4:	mov    rcx,rbx
  40fca7:	call   0x422468
  40fcac:	mov    rcx,QWORD PTR [rsi+0x18]
  40fcb0:	mov    r8,rax
  40fcb3:	mov    rdx,rbx
  40fcb6:	call   0x40d890
  40fcbb:	test   rax,rax
  40fcbe:	je     0x40fc93
  40fcc0:	lea    rcx,[rsi+0x20]
  40fcc4:	mov    rdx,rax
  40fcc7:	add    rsp,0x20
  40fccb:	pop    rbx
  40fccc:	pop    rsi
  40fccd:	pop    rdi
  40fcce:	jmp    0x40a490
  40fcd3:	nop    DWORD PTR [rax]
  40fcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fce0:	push   r12
  40fce2:	push   rbp
  40fce3:	push   rdi
  40fce4:	push   rsi
  40fce5:	push   rbx
  40fce6:	sub    rsp,0x30
  40fcea:	mov    eax,DWORD PTR [rip+0x58d80]        # 0x468a70
  40fcf0:	mov    rdi,rdx
  40fcf3:	lea    rdx,[rip+0x1e506]        # 0x42e200
  40fcfa:	cmp    rcx,0x1
  40fcfe:	mov    rbp,rcx
  40fd01:	mov    rbx,r8
  40fd04:	mov    esi,r9d
  40fd07:	lea    r12,[rdx+rax*1+0xcb]
  40fd0f:	je     0x40fd4b
  40fd11:	cmp    rcx,0xf
  40fd15:	ja     0x40fd22
  40fd17:	add    rsp,0x30
  40fd1b:	pop    rbx
  40fd1c:	pop    rsi
  40fd1d:	pop    rdi
  40fd1e:	pop    rbp
  40fd1f:	pop    r12
  40fd21:	ret    
  40fd22:	mov    eax,DWORD PTR [rdi+0x18]
  40fd25:	mov    rdx,QWORD PTR [rip+0x185a4]        # 0x4282d0
  40fd2c:	lea    r12,[rip+0x1d513]        # 0x42d246
  40fd33:	mov    DWORD PTR [rsp+0x20],eax
  40fd37:	mov    r8,QWORD PTR [rcx+0x28]
  40fd3b:	mov    r9,QWORD PTR [rdi+0x50]
  40fd3f:	mov    rcx,QWORD PTR [rip+0x58d02]        # 0x468a48
  40fd46:	call   0x408600
  40fd4b:	test   BYTE PTR [rdi+0x13],0x1
  40fd4f:	jne    0x40fe80
  40fd55:	cmp    esi,0x1
  40fd58:	jle    0x40fe9f
  40fd5e:	mov    rdx,QWORD PTR [rip+0x1868b]        # 0x4283f0
  40fd65:	mov    rcx,QWORD PTR [rip+0x58cdc]        # 0x468a48
  40fd6c:	mov    r8,r12
  40fd6f:	lea    rdi,[rip+0x1e682]        # 0x42e3f8
  40fd76:	call   0x408600
  40fd7b:	cmp    rbp,0x1
  40fd7f:	jne    0x40fdc8
  40fd81:	jmp    0x40feb0
  40fd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd90:	mov    rdx,QWORD PTR [rip+0x18641]        # 0x4283d8
  40fd97:	mov    rcx,QWORD PTR [rip+0x58caa]        # 0x468a48
  40fd9e:	mov    r8,rdi
  40fda1:	mov    DWORD PTR [rsp+0x20],eax
  40fda5:	call   0x408600
  40fdaa:	sub    esi,0x1
  40fdad:	mov    rdx,QWORD PTR [rip+0x58c94]        # 0x468a48
  40fdb4:	test   esi,esi
  40fdb6:	jle    0x40fe0d
  40fdb8:	mov    rcx,QWORD PTR [rip+0x18641]        # 0x428400
  40fdbf:	add    rbx,0x8
  40fdc3:	call   0x422538
  40fdc8:	mov    eax,DWORD PTR [rbx+0x4]
  40fdcb:	mov    r9d,DWORD PTR [rbx]
  40fdce:	cmp    eax,0x80000000
  40fdd3:	je     0x40fe40
  40fdd5:	cmp    r9d,0x80000000
  40fddc:	je     0x40fe60
  40fde2:	cmp    eax,0x7fffffff
  40fde7:	jne    0x40fd90
  40fde9:	mov    rdx,QWORD PTR [rip+0x185f0]        # 0x4283e0
  40fdf0:	mov    rcx,QWORD PTR [rip+0x58c51]        # 0x468a48
  40fdf7:	mov    r8,rdi
  40fdfa:	sub    esi,0x1
  40fdfd:	call   0x408600
  40fe02:	test   esi,esi
  40fe04:	mov    rdx,QWORD PTR [rip+0x58c3d]        # 0x468a48
  40fe0b:	jg     0x40fdb8
  40fe0d:	mov    ecx,0xa
  40fe12:	call   0x422540
  40fe17:	cmp    rbp,0xf
  40fe1b:	jbe    0x40fd17
  40fe21:	mov    rax,QWORD PTR [rbp+0x98]
  40fe28:	mov    edx,0x1
  40fe2d:	mov    rcx,rbp
  40fe30:	add    rsp,0x30
  40fe34:	pop    rbx
  40fe35:	pop    rsi
  40fe36:	pop    rdi
  40fe37:	pop    rbp
  40fe38:	pop    r12
  40fe3a:	rex.W jmp rax
  40fe3d:	nop    DWORD PTR [rax]
  40fe40:	mov    rdx,QWORD PTR [rip+0x185a1]        # 0x4283e8
  40fe47:	mov    rcx,QWORD PTR [rip+0x58bfa]        # 0x468a48
  40fe4e:	mov    r8,rdi
  40fe51:	call   0x408600
  40fe56:	jmp    0x40fdaa
  40fe5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe60:	mov    rdx,QWORD PTR [rip+0x185a9]        # 0x428410
  40fe67:	mov    rcx,QWORD PTR [rip+0x58bda]        # 0x468a48
  40fe6e:	mov    r9d,eax
  40fe71:	mov    r8,rdi
  40fe74:	call   0x408600
  40fe79:	jmp    0x40fdaa
  40fe7e:	xchg   ax,ax
  40fe80:	mov    rdx,QWORD PTR [rip+0x18581]        # 0x428408
  40fe87:	mov    rcx,QWORD PTR [rip+0x58bba]        # 0x468a48
  40fe8e:	mov    r8,r12
  40fe91:	call   0x408600
  40fe96:	cmp    esi,0x1
  40fe99:	jg     0x40fd5e
  40fe9f:	mov    rdx,QWORD PTR [rip+0x18552]        # 0x4283f8
  40fea6:	jmp    0x40fd65
  40feab:	nop    DWORD PTR [rax+rax*1+0x0]
  40feb0:	mov    eax,DWORD PTR [rip+0x58bba]        # 0x468a70
  40feb6:	lea    rdx,[rip+0x1e343]        # 0x42e200
  40febd:	lea    rdi,[rdx+rax*1+0xd2]
  40fec5:	jmp    0x40fdc8
  40feca:	nop    WORD PTR [rax+rax*1+0x0]
  40fed0:	push   r15
  40fed2:	push   r14
  40fed4:	push   r13
  40fed6:	push   r12
  40fed8:	push   rbp
  40fed9:	push   rdi
  40feda:	push   rsi
  40fedb:	push   rbx
  40fedc:	sub    rsp,0x28
  40fee0:	mov    ebx,0x3
  40fee5:	mov    rbp,rcx
  40fee8:	mov    rcx,rdx
  40feeb:	mov    rdi,rdx
  40feee:	call   0x422468
  40fef3:	mov    r9,rbp
  40fef6:	mov    r12,rax
  40fef9:	mov    eax,0x1
  40fefe:	xchg   ax,ax
  40ff00:	add    r9,0x1
  40ff04:	movzx  ecx,BYTE PTR [r9-0x1]
  40ff09:	lea    r10d,[rcx-0x20]
  40ff0d:	cmp    r10b,0x5e
  40ff11:	ja     0x40ff30
  40ff13:	cmp    cl,0x5c
  40ff16:	je     0x40ff60
  40ff18:	cmp    cl,0x22
  40ff1b:	mov    r10d,0x1
  40ff21:	je     0x40ff60
  40ff23:	add    rbx,r10
  40ff26:	jmp    0x40ff00
  40ff28:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff30:	cmp    cl,0xd
  40ff33:	ja     0x40ff53
  40ff35:	mov    r10,rax
  40ff38:	shl    r10,cl
  40ff3b:	test   r10d,0x3b80
  40ff42:	jne    0x40ff70
  40ff44:	test   r10d,0x400
  40ff4b:	jne    0x40ff80
  40ff4d:	and    r10d,0x1
  40ff51:	jne    0x40ff88
  40ff53:	add    rbx,0x4
  40ff57:	jmp    0x40ff00
  40ff59:	nop    DWORD PTR [rax+0x0]
  40ff60:	mov    r10d,0x2
  40ff66:	jmp    0x40ff23
  40ff68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff70:	add    rbx,0x2
  40ff74:	jmp    0x40ff00
  40ff76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff80:	add    rbx,r12
  40ff83:	jmp    0x40ff00
  40ff88:	mov    rcx,rbx
  40ff8b:	lea    r14,[rip+0x1d2b6]        # 0x42d248
  40ff92:	call   0x40a440
  40ff97:	mov    r13,rax
  40ff9a:	lea    rsi,[rax+0x1]
  40ff9e:	mov    BYTE PTR [rax],0x22
  40ffa1:	jmp    0x40ffc2
  40ffa3:	cmp    r8b,0x5c
  40ffa7:	je     0x4100c4
  40ffad:	cmp    r8b,0x22
  40ffb1:	je     0x4100c4
  40ffb7:	mov    BYTE PTR [rsi],r8b
  40ffba:	add    rsi,0x1
  40ffbe:	add    rbp,0x1
  40ffc2:	movzx  r8d,BYTE PTR [rbp+0x0]
  40ffc7:	lea    ecx,[r8-0x20]
  40ffcb:	cmp    cl,0x5e
  40ffce:	jbe    0x40ffa3
  40ffd0:	cmp    r8b,0xd
  40ffd4:	ja     0x4100ab
  40ffda:	movzx  eax,r8b
  40ffde:	movsxd rcx,DWORD PTR [r14+rax*4]
  40ffe2:	add    rcx,r14
  40ffe5:	jmp    rcx
  40ffe7:	movzx  eax,BYTE PTR [rbp+0x1]
  40ffeb:	lea    r15,[rbp+0x1]
  40ffef:	cmp    al,0xa
  40fff1:	jne    0x41000a
  40fff3:	mov    BYTE PTR [rsi],0x5c
  40fff6:	add    r15,0x1
  40fffa:	add    rsi,0x2
  40fffe:	mov    BYTE PTR [rsi-0x1],0x6e
  410002:	movzx  eax,BYTE PTR [r15]
  410006:	cmp    al,0xa
  410008:	je     0x40fff3
  41000a:	test   al,al
  41000c:	jne    0x4100d0
  410012:	mov    rax,rsi
  410015:	mov    BYTE PTR [rsi],0x5c
  410018:	add    rsi,0x2
  41001c:	mov    BYTE PTR [rax+0x1],0x6e
  410020:	mov    BYTE PTR [rsi],0x22
  410023:	mov    BYTE PTR [rsi+0x1],0x0
  410027:	add    rsi,0x2
  41002b:	sub    rsi,r13
  41002e:	cmp    rsi,rbx
  410031:	ja     0x4100e9
  410037:	mov    rax,r13
  41003a:	add    rsp,0x28
  41003e:	pop    rbx
  41003f:	pop    rsi
  410040:	pop    rdi
  410041:	pop    rbp
  410042:	pop    r12
  410044:	pop    r13
  410046:	pop    r14
  410048:	pop    r15
  41004a:	ret    
  41004b:	mov    BYTE PTR [rsi],0x5c
  41004e:	mov    BYTE PTR [rsi+0x1],0x72
  410052:	add    rsi,0x2
  410056:	jmp    0x40ffbe
  41005b:	mov    BYTE PTR [rsi],0x5c
  41005e:	mov    BYTE PTR [rsi+0x1],0x66
  410062:	add    rsi,0x2
  410066:	jmp    0x40ffbe
  41006b:	mov    BYTE PTR [rsi],0x5c
  41006e:	mov    BYTE PTR [rsi+0x1],0x76
  410072:	add    rsi,0x2
  410076:	jmp    0x40ffbe
  41007b:	mov    BYTE PTR [rsi],0x5c
  41007e:	mov    BYTE PTR [rsi+0x1],0x74
  410082:	add    rsi,0x2
  410086:	jmp    0x40ffbe
  41008b:	mov    BYTE PTR [rsi],0x5c
  41008e:	mov    BYTE PTR [rsi+0x1],0x62
  410092:	add    rsi,0x2
  410096:	jmp    0x40ffbe
  41009b:	mov    BYTE PTR [rsi],0x5c
  41009e:	mov    BYTE PTR [rsi+0x1],0x61
  4100a2:	add    rsi,0x2
  4100a6:	jmp    0x40ffbe
  4100ab:	lea    rdx,[rip+0x1e2f4]        # 0x42e3a6
  4100b2:	mov    rcx,rsi
  4100b5:	call   0x408fe0
  4100ba:	cdqe   
  4100bc:	add    rsi,rax
  4100bf:	jmp    0x40ffbe
  4100c4:	mov    BYTE PTR [rsi],0x5c
  4100c7:	add    rsi,0x1
  4100cb:	jmp    0x40ffb7
  4100d0:	mov    rcx,rsi
  4100d3:	mov    r8,r12
  4100d6:	mov    rdx,rdi
  4100d9:	call   0x4224d8
  4100de:	add    rsi,r12
  4100e1:	mov    rbp,r15
  4100e4:	jmp    0x40ffc2
  4100e9:	call   QWORD PTR [rip+0x8c335]        # 0x49c424
  4100ef:	lea    rcx,[rip+0x1e419]        # 0x42e50f
  4100f6:	lea    r9,[rax+0x60]
  4100fa:	mov    r8d,0x24
  410100:	mov    edx,0x1
  410105:	call   0x422510
  41010a:	mov    ecx,0x1
  41010f:	call   0x408a40
  410114:	nop
  410115:	nop
  410116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410120:	push   rsi
  410121:	push   rbx
  410122:	sub    rsp,0x28
  410126:	test   dl,dl
  410128:	mov    rbx,r8
  41012b:	jne    0x410160
  41012d:	lea    rdx,[rip+0x1e245]        # 0x42e379
  410134:	call   0x40fed0
  410139:	lea    rdx,[rip+0x1e301]        # 0x42e441
  410140:	mov    rsi,rax
  410143:	mov    rcx,rbx
  410146:	mov    r8,rax
  410149:	call   0x408600
  41014e:	mov    rcx,rsi
  410151:	add    rsp,0x28
  410155:	pop    rbx
  410156:	pop    rsi
  410157:	jmp    0x422528
  41015c:	nop    DWORD PTR [rax+0x0]
  410160:	mov    rdx,r8
  410163:	add    rsp,0x28
  410167:	pop    rbx
  410168:	pop    rsi
  410169:	jmp    0x422538
  41016e:	xchg   ax,ax
  410170:	push   r15
  410172:	push   r14
  410174:	push   r13
  410176:	push   r12
  410178:	push   rbp
  410179:	push   rdi
  41017a:	push   rsi
  41017b:	push   rbx
  41017c:	sub    rsp,0x38
  410180:	mov    eax,DWORD PTR [rcx+0x14]
  410183:	xor    r13d,r13d
  410186:	xor    r12d,r12d
  410189:	mov    rbp,rcx
  41018c:	lea    rcx,[rip+0x1e59c]        # 0x42e72f
  410193:	lea    edx,[rax-0x1]
  410196:	call   0x408a10
  41019b:	mov    rsi,QWORD PTR [rip+0x8c282]        # 0x49c424
  4101a2:	jmp    0x4101b9
  4101a4:	add    r12d,0x1
  4101a8:	add    r13,0x68
  4101ac:	cmp    r12d,DWORD PTR [rbp+0xb4]
  4101b3:	jge    0x410321
  4101b9:	mov    rdx,QWORD PTR [rbp+0x78]
  4101bd:	lea    rdi,[rdx+r13*1]
  4101c1:	mov    eax,DWORD PTR [rdi+0x10]
  4101c4:	test   eax,0x8280000
  4101c9:	jne    0x4101a4
  4101cb:	cmp    WORD PTR [rdi+0x8],0x8000
  4101d1:	jne    0x4101a4
  4101d3:	movzx  r8d,WORD PTR [rdi+0x4]
  4101d8:	cmp    r8d,r12d
  4101db:	je     0x410228
  4101dd:	lea    rax,[r8+r8*2]
  4101e1:	lea    rcx,[rip+0x1e4d0]        # 0x42e6b8
  4101e8:	lea    rax,[r8+rax*4]
  4101ec:	mov    r8,QWORD PTR [rdi+0x48]
  4101f0:	lea    rbx,[rdx+rax*8]
  4101f4:	mov    rax,QWORD PTR [rdi+0x18]
  4101f8:	mov    r9,QWORD PTR [rbx+0x48]
  4101fc:	mov    QWORD PTR [rbx+0x18],rax
  410200:	mov    eax,DWORD PTR [rbx+0x10]
  410203:	and    eax,0xfffff00
  410208:	mov    DWORD PTR [rbx+0x10],eax
  41020b:	mov    edx,DWORD PTR [rdi+0x10]
  41020e:	mov    rdi,rbx
  410211:	and    edx,0xf00000ff
  410217:	or     eax,edx
  410219:	mov    rdx,QWORD PTR [rbp+0x30]
  41021d:	mov    DWORD PTR [rbx+0x10],eax
  410220:	call   0x408a10
  410225:	mov    eax,DWORD PTR [rbx+0x10]
  410228:	mov    edx,eax
  41022a:	and    edx,0xf000
  410230:	shr    edx,0xc
  410233:	cmp    edx,0x4
  410236:	je     0x4103e9
  41023c:	mov    ecx,DWORD PTR [rdi+0x10]
  41023f:	and    ecx,0x2f
  410242:	cmp    ecx,0x20
  410245:	je     0x4101a4
  41024b:	test   ah,0x4
  41024e:	je     0x4102d2
  410254:	mov    r14,QWORD PTR [rdi+0x20]
  410258:	test   r14,r14
  41025b:	je     0x4102d2
  41025d:	mov    ebx,DWORD PTR [r14]
  410260:	mov    rdx,QWORD PTR [rbp+0x30]
  410264:	lea    rcx,[rip+0x1e49d]        # 0x42e708
  41026b:	mov    r8,QWORD PTR [rdi+0x48]
  41026f:	lea    r15,[r14+0x8]
  410273:	mov    r9d,ebx
  410276:	call   0x408a10
  41027b:	sub    ebx,0x1
  41027e:	js     0x4101a4
  410284:	mov    r9d,DWORD PTR [r14]
  410287:	mov    rdx,QWORD PTR [rbp+0x30]
  41028b:	lea    rcx,[rip+0x1e079]        # 0x42e30b
  410292:	mov    r8,QWORD PTR [rdi+0x48]
  410296:	add    r15,0x8
  41029a:	sub    r9d,ebx
  41029d:	call   0x408a10
  4102a2:	mov    rcx,QWORD PTR [r15-0x8]
  4102a6:	call   0x409d80
  4102ab:	mov    r9d,DWORD PTR [r14]
  4102ae:	mov    rdx,QWORD PTR [rbp+0x30]
  4102b2:	lea    rcx,[rip+0x1e084]        # 0x42e33d
  4102b9:	mov    r8,QWORD PTR [rdi+0x48]
  4102bd:	sub    r9d,ebx
  4102c0:	sub    ebx,0x1
  4102c3:	call   0x408a10
  4102c8:	cmp    ebx,0xffffffff
  4102cb:	jne    0x410284
  4102cd:	jmp    0x4101a4
  4102d2:	test   al,0x20
  4102d4:	jne    0x41034a
  4102d6:	cmp    edx,0x5
  4102d9:	je     0x4105ed
  4102df:	cmp    edx,0x2
  4102e2:	je     0x41060a
  4102e8:	cmp    edx,0x3
  4102eb:	je     0x4104e9
  4102f1:	mov    rax,QWORD PTR [rdi+0x18]
  4102f5:	test   rax,rax
  4102f8:	je     0x410303
  4102fa:	cmp    BYTE PTR [rax],0x0
  4102fd:	jne    0x4105b7
  410303:	movzx  r9d,WORD PTR [rdi+0xe]
  410308:	mov    rdx,QWORD PTR [rbp+0x30]
  41030c:	lea    rcx,[rip+0x1e45c]        # 0x42e76f
  410313:	mov    r8,QWORD PTR [rdi+0x48]
  410317:	call   0x408a10
  41031c:	jmp    0x4101a4
  410321:	test   BYTE PTR [rbp+0x11],0x8
  410325:	je     0x41032f
  410327:	mov    eax,DWORD PTR [rbp+0x4]
  41032a:	cmp    DWORD PTR [rbp+0x14],eax
  41032d:	jb     0x410375
  41032f:	call   rsi
  410331:	lea    rcx,[rax+0x30]
  410335:	add    rsp,0x38
  410339:	pop    rbx
  41033a:	pop    rsi
  41033b:	pop    rdi
  41033c:	pop    rbp
  41033d:	pop    r12
  41033f:	pop    r13
  410341:	pop    r14
  410343:	pop    r15
  410345:	jmp    0x422560
  41034a:	mov    r9,QWORD PTR [rdi+0x60]
  41034e:	mov    rdx,QWORD PTR [rbp+0x30]
  410352:	lea    rax,[rip+0x1ca97]        # 0x42cdf0
  410359:	mov    r8,QWORD PTR [rdi+0x48]
  41035d:	lea    rcx,[rip+0x1e3ea]        # 0x42e74e
  410364:	test   r9,r9
  410367:	cmove  r9,rax
  41036b:	call   0x408a10
  410370:	jmp    0x4101a4
  410375:	call   rsi
  410377:	lea    rcx,[rip+0x1e1c4]        # 0x42e542
  41037e:	lea    r9,[rax+0x30]
  410382:	mov    r8d,0x6
  410388:	mov    edx,0x1
  41038d:	call   0x422510
  410392:	mov    ebx,DWORD PTR [rbp+0x14]
  410395:	cmp    ebx,DWORD PTR [rbp+0x4]
  410398:	jae    0x4103c7
  41039a:	nop    WORD PTR [rax+rax*1+0x0]
  4103a0:	call   rsi
  4103a2:	lea    rdx,[rax+0x30]
  4103a6:	mov    ecx,0x20
  4103ab:	call   0x422540
  4103b0:	mov    rax,QWORD PTR [rbp+0x8]
  4103b4:	mov    edx,ebx
  4103b6:	add    ebx,0x1
  4103b9:	mov    rcx,QWORD PTR [rax+rdx*8]
  4103bd:	call   0x409d80
  4103c2:	cmp    ebx,DWORD PTR [rbp+0x4]
  4103c5:	jb     0x4103a0
  4103c7:	call   rsi
  4103c9:	lea    rcx,[rip+0x1e164]        # 0x42e534
  4103d0:	lea    r9,[rax+0x30]
  4103d4:	mov    r8d,0xd
  4103da:	mov    edx,0x1
  4103df:	call   0x422510
  4103e4:	jmp    0x41032f
  4103e9:	mov    rax,QWORD PTR [rdi+0x18]
  4103ed:	mov    rdx,QWORD PTR [rbp+0x30]
  4103f1:	lea    rcx,[rip+0x1e377]        # 0x42e76f
  4103f8:	mov    r9d,DWORD PTR [rdi+0x20]
  4103fc:	mov    r8,QWORD PTR [rdi+0x48]
  410400:	mov    QWORD PTR [rsp+0x28],rax
  410405:	call   0x408a10
  41040a:	mov    eax,0xffffffff
  41040f:	mov    rdx,rdi
  410412:	mov    ecx,0x3
  410417:	mov    QWORD PTR [rdi+0x20],rax
  41041b:	call   QWORD PTR [rdi+0x38]
  41041e:	mov    r14,QWORD PTR [rdi+0x18]
  410422:	cmp    BYTE PTR [r14],0x0
  410426:	je     0x4105b2
  41042c:	mov    QWORD PTR [rsp+0x20],0x1
  410435:	mov    rdx,QWORD PTR [rdi+0x48]
  410439:	lea    rcx,[rip+0x1ce40]        # 0x42d280
  410440:	call   0x408a10
  410445:	mov    r9,QWORD PTR [rip+0x58844]        # 0x468c90
  41044c:	test   r9,r9
  41044f:	je     0x4105a0
  410455:	movzx  eax,BYTE PTR [r14]
  410459:	cmp    BYTE PTR [r9+rax*1],0x0
  41045e:	je     0x410595
  410464:	mov    rdx,r14
  410467:	nop    WORD PTR [rax+rax*1+0x0]
  410470:	add    rdx,0x1
  410474:	movzx  ecx,BYTE PTR [rdx]
  410477:	cmp    BYTE PTR [r9+rcx*1],0x0
  41047c:	mov    rax,rcx
  41047f:	jne    0x410470
  410481:	cmp    al,0x7f
  410483:	lea    r14,[rdx+0x1]
  410487:	movsx  r15d,al
  41048b:	ja     0x4104ce
  41048d:	nop    DWORD PTR [rax]
  410490:	lea    r9,[rip+0x20969]        # 0x430e00
  410497:	mov    eax,DWORD PTR [r9+rax*4]
  41049b:	test   eax,0x80000
  4104a0:	je     0x410520
  4104a2:	call   rsi
  4104a4:	mov    rbx,rax
  4104a7:	mov    ecx,r15d
  4104aa:	call   QWORD PTR [rip+0x8c1e4]        # 0x49c694
  4104b0:	lea    rdx,[rbx+0x30]
  4104b4:	mov    ecx,eax
  4104b6:	call   0x422540
  4104bb:	movzx  eax,BYTE PTR [r14]
  4104bf:	mov    rdx,r14
  4104c2:	cmp    al,0x7f
  4104c4:	lea    r14,[rdx+0x1]
  4104c8:	movsx  r15d,al
  4104cc:	jbe    0x410490
  4104ce:	test   r15d,r15d
  4104d1:	je     0x410590
  4104d7:	call   rsi
  4104d9:	lea    rdx,[rax+0x30]
  4104dd:	mov    ecx,0x5f
  4104e2:	call   0x422540
  4104e7:	jmp    0x4104bb
  4104e9:	mov    eax,DWORD PTR [rdi+0x18]
  4104ec:	mov    rdx,QWORD PTR [rbp+0x30]
  4104f0:	lea    r9,[rip+0x1c8f4]        # 0x42cdeb
  4104f7:	mov    r8,QWORD PTR [rdi+0x48]
  4104fb:	lea    rcx,[rip+0x1e1e3]        # 0x42e6e5
  410502:	test   eax,eax
  410504:	lea    rax,[rip+0x1c8e5]        # 0x42cdf0
  41050b:	cmove  r9,rax
  41050f:	call   0x408a10
  410514:	jmp    0x4101a4
  410519:	nop    DWORD PTR [rax+0x0]
  410520:	test   eax,0x100000
  410525:	je     0x410540
  410527:	call   rsi
  410529:	lea    rdx,[rax+0x30]
  41052d:	mov    ecx,r15d
  410530:	call   0x422540
  410535:	jmp    0x4104bb
  410537:	nop    WORD PTR [rax+rax*1+0x0]
  410540:	test   eax,0xc81
  410545:	je     0x4104ce
  410547:	mov    rbx,QWORD PTR [rsp+0x20]
  41054c:	lea    rcx,[rip+0x1df35]        # 0x42e488
  410553:	mov    edx,ebx
  410555:	call   0x408a10
  41055a:	mov    rax,rbx
  41055d:	add    rax,rax
  410560:	cmp    BYTE PTR [r14],0x0
  410564:	mov    QWORD PTR [rsp+0x20],rax
  410569:	jne    0x410435
  41056f:	mov    rcx,QWORD PTR [rdi+0x18]
  410573:	call   0x422528
  410578:	mov    rax,QWORD PTR [rsp+0x28]
  41057d:	mov    QWORD PTR [rdi+0x18],rax
  410581:	jmp    0x4101a4
  410586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410590:	mov    r14,rdx
  410593:	jmp    0x410547
  410595:	movzx  eax,al
  410598:	mov    rdx,r14
  41059b:	jmp    0x4104c2
  4105a0:	mov    ecx,0x22
  4105a5:	call   0x409f50
  4105aa:	mov    r9,rax
  4105ad:	jmp    0x410455
  4105b2:	mov    rcx,r14
  4105b5:	jmp    0x410573
  4105b7:	mov    rdx,QWORD PTR [rbp+0x30]
  4105bb:	mov    r8,QWORD PTR [rdi+0x48]
  4105bf:	lea    rcx,[rip+0x1de4f]        # 0x42e415
  4105c6:	call   0x408a10
  4105cb:	mov    rcx,QWORD PTR [rdi+0x18]
  4105cf:	call   0x409d80
  4105d4:	mov    rdx,QWORD PTR [rbp+0x30]
  4105d8:	mov    r8,QWORD PTR [rdi+0x48]
  4105dc:	lea    rcx,[rip+0x1de23]        # 0x42e406
  4105e3:	call   0x408a10
  4105e8:	jmp    0x4101a4
  4105ed:	mov    rdx,QWORD PTR [rbp+0x30]
  4105f1:	mov    r9d,DWORD PTR [rdi+0x18]
  4105f5:	lea    rcx,[rip+0x1e173]        # 0x42e76f
  4105fc:	mov    r8,QWORD PTR [rdi+0x48]
  410600:	call   0x408a10
  410605:	jmp    0x4101a4
  41060a:	mov    r8,QWORD PTR [rdi+0x48]
  41060e:	mov    rdx,QWORD PTR [rbp+0x30]
  410612:	lea    rcx,[rip+0x1ddfc]        # 0x42e415
  410619:	mov    rbx,QWORD PTR [rdi+0x18]
  41061d:	call   0x408a10
  410622:	mov    rdx,rdi
  410625:	mov    ecx,0x3
  41062a:	call   QWORD PTR [rdi+0x38]
  41062d:	mov    rdx,QWORD PTR [rdi+0x18]
  410631:	lea    rcx,[rip+0x1de1c]        # 0x42e454
  410638:	call   0x408a10
  41063d:	test   BYTE PTR [rdi+0x10],0x40
  410641:	je     0x41064c
  410643:	mov    rcx,QWORD PTR [rdi+0x18]
  410647:	call   0x422528
  41064c:	mov    QWORD PTR [rdi+0x18],rbx
  410650:	mov    r8,QWORD PTR [rdi+0x48]
  410654:	lea    rcx,[rip+0x1ddab]        # 0x42e406
  41065b:	mov    rdx,QWORD PTR [rbp+0x30]
  41065f:	call   0x408a10
  410664:	jmp    0x4101a4
  410669:	nop    DWORD PTR [rax+0x0]
  410670:	push   rdi
  410671:	push   rsi
  410672:	push   rbx
  410673:	sub    rsp,0x20
  410677:	mov    rax,QWORD PTR [rcx+0x90]
  41067e:	mov    rbx,rcx
  410681:	test   rax,rax
  410684:	je     0x4106f1
  410686:	mov    rdx,QWORD PTR [rbx]
  410689:	lea    rdi,[rax+0x8]
  41068d:	mov    rsi,rbx
  410690:	lea    r9,[rax+0xe8]
  410697:	and    rdi,0xfffffffffffffff8
  41069b:	mov    QWORD PTR [rax],rdx
  41069e:	mov    rdx,QWORD PTR [rbx+0xe0]
  4106a5:	mov    QWORD PTR [rax+0xe0],rdx
  4106ac:	mov    rdx,rax
  4106af:	sub    rdx,rdi
  4106b2:	sub    rsi,rdx
  4106b5:	add    edx,0xe8
  4106bb:	shr    edx,0x3
  4106be:	mov    ecx,edx
  4106c0:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4106c3:	mov    rcx,r9
  4106c6:	movsxd rax,DWORD PTR [rax+0xb0]
  4106cd:	lea    rdx,[rax+rax*2]
  4106d1:	lea    r8,[rax+rdx*4]
  4106d5:	mov    rdx,QWORD PTR [rbx+0x78]
  4106d9:	shl    r8,0x3
  4106dd:	call   0x4224d8
  4106e2:	mov    rcx,rbx
  4106e5:	add    rsp,0x20
  4106e9:	pop    rbx
  4106ea:	pop    rsi
  4106eb:	pop    rdi
  4106ec:	jmp    0x40a210
  4106f1:	movsxd rax,DWORD PTR [rcx+0xb0]
  4106f8:	lea    rdx,[rax+rax*2]
  4106fc:	lea    rax,[rax+rdx*4]
  410700:	lea    rcx,[rax*8+0xe8]
  410708:	call   0x40a440
  41070d:	mov    QWORD PTR [rbx+0x90],rax
  410714:	jmp    0x410686
  410719:	nop    DWORD PTR [rax+0x0]
  410720:	push   r14
  410722:	push   r13
  410724:	push   r12
  410726:	push   rbp
  410727:	push   rdi
  410728:	push   rsi
  410729:	push   rbx
  41072a:	sub    rsp,0x20
  41072e:	lea    r12,[rcx+0x8]
  410732:	mov    r14,rcx
  410735:	mov    rbp,rcx
  410738:	and    r12,0xfffffffffffffff8
  41073c:	sub    r14,r12
  41073f:	lea    r13d,[r14+0xe8]
  410746:	shr    r13d,0x3
  41074a:	nop    WORD PTR [rax+rax*1+0x0]
  410750:	mov    rbx,QWORD PTR [rbp+0x78]
  410754:	mov    esi,DWORD PTR [rbp+0xb0]
  41075a:	jmp    0x410786
  41075c:	nop    DWORD PTR [rax+0x0]
  410760:	cmp    eax,0x6
  410763:	jne    0x410773
  410765:	mov    rcx,QWORD PTR [rbx+0x20]
  410769:	test   rcx,rcx
  41076c:	je     0x410773
  41076e:	call   0x408540
  410773:	sub    esi,0x1
  410776:	mov    QWORD PTR [rbx+0x20],0x0
  41077e:	add    rbx,0x68
  410782:	test   esi,esi
  410784:	jle    0x4107e0
  410786:	mov    edx,DWORD PTR [rbx+0x10]
  410789:	test   dl,0x40
  41078c:	jne    0x4107c4
  41078e:	mov    eax,edx
  410790:	and    eax,0xf000
  410795:	shr    eax,0xc
  410798:	cmp    eax,0x1
  41079b:	jne    0x410760
  41079d:	and    dh,0x4
  4107a0:	je     0x410773
  4107a2:	cmp    QWORD PTR [rbx+0x20],0x0
  4107a7:	je     0x410773
  4107a9:	lea    rax,[rip+0x1cadd]        # 0x42d28d
  4107b0:	cmp    rbp,0xf
  4107b4:	mov    QWORD PTR [rbx+0x18],rax
  4107b8:	jbe    0x410773
  4107ba:	mov    rcx,rbx
  4107bd:	call   0x40ad70
  4107c2:	jmp    0x410773
  4107c4:	mov    rcx,QWORD PTR [rbx+0x18]
  4107c8:	call   0x422528
  4107cd:	mov    edx,DWORD PTR [rbx+0x10]
  4107d0:	mov    QWORD PTR [rbx+0x18],0x0
  4107d8:	and    edx,0xffffffbf
  4107db:	mov    DWORD PTR [rbx+0x10],edx
  4107de:	jmp    0x41078e
  4107e0:	mov    rax,QWORD PTR [rbp+0x90]
  4107e7:	test   rax,rax
  4107ea:	je     0x41084f
  4107ec:	mov    rdx,QWORD PTR [rax]
  4107ef:	mov    rsi,rax
  4107f2:	mov    rdi,r12
  4107f5:	sub    rsi,r14
  4107f8:	mov    QWORD PTR [rbp+0x0],rdx
  4107fc:	mov    rcx,QWORD PTR [rax+0xe0]
  410803:	lea    rdx,[rax+0xe8]
  41080a:	mov    QWORD PTR [rbp+0xe0],rcx
  410811:	mov    ecx,r13d
  410814:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  410817:	movsxd rax,DWORD PTR [rax+0xb0]
  41081e:	mov    rcx,QWORD PTR [rbp+0x78]
  410822:	lea    r8,[rax+rax*2]
  410826:	lea    r8,[rax+r8*4]
  41082a:	shl    r8,0x3
  41082e:	call   0x4224d8
  410833:	mov    rcx,QWORD PTR [rbp+0x90]
  41083a:	call   0x422528
  41083f:	mov    QWORD PTR [rbp+0x90],0x0
  41084a:	jmp    0x410750
  41084f:	add    rsp,0x20
  410853:	pop    rbx
  410854:	pop    rsi
  410855:	pop    rdi
  410856:	pop    rbp
  410857:	pop    r12
  410859:	pop    r13
  41085b:	pop    r14
  41085d:	ret    
  41085e:	xchg   ax,ax
  410860:	push   rbp
  410861:	push   rdi
  410862:	push   rsi
  410863:	push   rbx
  410864:	sub    rsp,0x28
  410868:	mov    rbp,QWORD PTR [rcx+0x90]
  41086f:	mov    rbx,rcx
  410872:	test   rbp,rbp
  410875:	je     0x4108fb
  41087b:	mov    QWORD PTR [rcx+0x90],0x0
  410886:	lea    rdi,[rbx+0x8]
  41088a:	mov    rsi,rbp
  41088d:	call   0x410720
  410892:	mov    rax,QWORD PTR [rbp+0x0]
  410896:	and    rdi,0xfffffffffffffff8
  41089a:	lea    rdx,[rbp+0xe8]
  4108a1:	mov    QWORD PTR [rbx],rax
  4108a4:	mov    rax,QWORD PTR [rbp+0xe0]
  4108ab:	mov    QWORD PTR [rbx+0xe0],rax
  4108b2:	mov    rax,rbx
  4108b5:	sub    rax,rdi
  4108b8:	sub    rsi,rax
  4108bb:	add    eax,0xe8
  4108c0:	shr    eax,0x3
  4108c3:	mov    ecx,eax
  4108c5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4108c8:	movsxd rax,DWORD PTR [rbp+0xb0]
  4108cf:	mov    rcx,QWORD PTR [rbx+0x78]
  4108d3:	lea    r8,[rax+rax*2]
  4108d7:	lea    r8,[rax+r8*4]
  4108db:	shl    r8,0x3
  4108df:	call   0x4224d8
  4108e4:	mov    rcx,rbx
  4108e7:	mov    QWORD PTR [rbx+0x90],rbp
  4108ee:	add    rsp,0x28
  4108f2:	pop    rbx
  4108f3:	pop    rsi
  4108f4:	pop    rdi
  4108f5:	pop    rbp
  4108f6:	jmp    0x40a210
  4108fb:	mov    rsi,QWORD PTR [rcx+0x28]
  4108ff:	test   rsi,rsi
  410902:	je     0x41092a
  410904:	mov    rbx,QWORD PTR [rip+0x1795d]        # 0x428268
  41090b:	call   QWORD PTR [rip+0x8bb13]        # 0x49c424
  410911:	lea    rcx,[rax+0x60]
  410915:	mov    r8,rsi
  410918:	mov    rdx,rbx
  41091b:	call   0x408600
  410920:	mov    ecx,0x1
  410925:	call   0x408a40
  41092a:	mov    rsi,QWORD PTR [rcx+0x30]
  41092e:	lea    rax,[rip+0x1f2da]        # 0x42fc0f
  410935:	test   rsi,rsi
  410938:	cmove  rsi,rax
  41093c:	jmp    0x410904
  41093e:	xchg   ax,ax
  410940:	push   r15
  410942:	push   r14
  410944:	push   r13
  410946:	push   r12
  410948:	push   rbp
  410949:	push   rdi
  41094a:	push   rsi
  41094b:	push   rbx
  41094c:	sub    rsp,0x58
  410950:	lea    rdi,[rsp+0x48]
  410955:	mov    r13,rcx
  410958:	mov    DWORD PTR [rsp+0x48],0x0
  410960:	mov    rdx,rdi
  410963:	call   0x40af40
  410968:	test   rax,rax
  41096b:	mov    rbx,rax
  41096e:	je     0x410a49
  410974:	lea    rdx,[rip+0x1c8bd]        # 0x42d238
  41097b:	mov    rcx,rax
  41097e:	call   0x422550
  410983:	test   rax,rax
  410986:	mov    rsi,rax
  410989:	je     0x410cf3
  41098f:	mov    edx,DWORD PTR [rsp+0x48]
  410993:	test   edx,edx
  410995:	jne    0x410aa0
  41099b:	lea    rcx,[rip+0x1c8ee]        # 0x42d290
  4109a2:	mov    r9,rsi
  4109a5:	mov    r8d,0x3
  4109ab:	mov    edx,0x1
  4109b0:	call   0x422510
  4109b5:	mov    rbx,QWORD PTR [r13+0x60]
  4109b9:	mov    edx,0xa
  4109be:	mov    rcx,rbx
  4109c1:	call   0x422490
  4109c6:	test   rax,rax
  4109c9:	je     0x4109e2
  4109cb:	lea    r8,[rax+0x1]
  4109cf:	mov    r9,rsi
  4109d2:	mov    edx,0x1
  4109d7:	mov    rcx,rbx
  4109da:	sub    r8,rbx
  4109dd:	call   0x422510
  4109e2:	xor    ecx,ecx
  4109e4:	call   QWORD PTR [rip+0x8bb1a]        # 0x49c504
  4109ea:	mov    rcx,rdi
  4109ed:	mov    QWORD PTR [rsp+0x48],rax
  4109f2:	call   QWORD PTR [rip+0x8ba74]        # 0x49c46c
  4109f8:	lea    rdx,[rip+0x1d861]        # 0x42e260
  4109ff:	mov    r8,rax
  410a02:	mov    rcx,rsi
  410a05:	call   0x408600
  410a0a:	mov    r15d,DWORD PTR [r13+0xb4]
  410a11:	mov    rbx,QWORD PTR [r13+0x78]
  410a15:	mov    eax,DWORD PTR [rbx+0x10]
  410a18:	test   al,0xf
  410a1a:	je     0x410a33
  410a1c:	test   eax,0x280100
  410a21:	jne    0x410a33
  410a23:	movzx  edx,WORD PTR [rbx+0x8]
  410a27:	cmp    dx,0x8000
  410a2c:	je     0x410a60
  410a2e:	cmp    dx,WORD PTR [rbx]
  410a31:	je     0x410a60
  410a33:	sub    r15d,0x1
  410a37:	add    rbx,0x68
  410a3b:	test   r15d,r15d
  410a3e:	jg     0x410a15
  410a40:	mov    rcx,rsi
  410a43:	call   0x422570
  410a48:	nop
  410a49:	add    rsp,0x58
  410a4d:	pop    rbx
  410a4e:	pop    rsi
  410a4f:	pop    rdi
  410a50:	pop    rbp
  410a51:	pop    r12
  410a53:	pop    r13
  410a55:	pop    r14
  410a57:	pop    r15
  410a59:	ret    
  410a5a:	nop    WORD PTR [rax+rax*1+0x0]
  410a60:	test   al,0x10
  410a62:	mov    rdi,rbx
  410a65:	je     0x410a7b
  410a67:	movzx  edx,WORD PTR [rbx+0x4]
  410a6b:	lea    rcx,[rdx+rdx*2]
  410a6f:	lea    rcx,[rdx+rcx*4]
  410a73:	mov    rdx,QWORD PTR [r13+0x78]
  410a77:	lea    rdi,[rdx+rcx*8]
  410a7b:	and    eax,0xf000
  410a80:	shr    eax,0xc
  410a83:	cmp    eax,0x7
  410a86:	ja     0x410a33
  410a88:	lea    rcx,[rip+0x1c809]        # 0x42d298
  410a8f:	movsxd rax,DWORD PTR [rcx+rax*4]
  410a93:	add    rax,rcx
  410a96:	jmp    rax
  410a98:	nop    DWORD PTR [rax+rax*1+0x0]
  410aa0:	mov    rcx,rbx
  410aa3:	call   0x422528
  410aa8:	jmp    0x41099b
  410aad:	nop    DWORD PTR [rax]
  410ab0:	mov    r12,QWORD PTR [rdi+0x20]
  410ab4:	test   r12,r12
  410ab7:	je     0x410a33
  410abd:	mov    eax,DWORD PTR [r12]
  410ac1:	add    r12,0x8
  410ac5:	test   eax,eax
  410ac7:	jle    0x410a33
  410acd:	sub    eax,0x1
  410ad0:	lea    rax,[r12+rax*8+0x8]
  410ad5:	mov    QWORD PTR [rsp+0x38],rax
  410ada:	nop    WORD PTR [rax+rax*1+0x0]
  410ae0:	add    r12,0x8
  410ae4:	mov    rbp,QWORD PTR [r12-0x8]
  410ae9:	xor    edx,edx
  410aeb:	mov    rcx,rbp
  410aee:	call   0x40d290
  410af3:	test   rax,rax
  410af6:	mov    r14,rax
  410af9:	je     0x410b49
  410afb:	mov    r8,QWORD PTR [rdi+0x50]
  410aff:	lea    rdx,[rip+0x1d8ab]        # 0x42e3b1
  410b06:	mov    rcx,rsi
  410b09:	call   0x408600
  410b0e:	xchg   ax,ax
  410b10:	mov    r9,r14
  410b13:	mov    r8,rdi
  410b16:	mov    edx,0x1
  410b1b:	mov    rcx,rsi
  410b1e:	call   0x409010
  410b23:	mov    rdx,r14
  410b26:	mov    rcx,rbp
  410b29:	call   0x40d3e0
  410b2e:	test   rax,rax
  410b31:	mov    r14,rax
  410b34:	jne    0x410b10
  410b36:	mov    r8,QWORD PTR [rdi+0x50]
  410b3a:	lea    rdx,[rip+0x1c2b5]        # 0x42cdf6
  410b41:	mov    rcx,rsi
  410b44:	call   0x408600
  410b49:	cmp    r12,QWORD PTR [rsp+0x38]
  410b4e:	jne    0x410ae0
  410b50:	jmp    0x410a33
  410b55:	mov    r8,QWORD PTR [rdi+0x20]
  410b59:	test   r8,r8
  410b5c:	je     0x410cc8
  410b62:	mov    rdx,rdi
  410b65:	mov    rcx,rsi
  410b68:	call   0x4088a0
  410b6d:	jmp    0x410a33
  410b72:	test   BYTE PTR [rdi+0x10],0x20
  410b76:	mov    r8,QWORD PTR [rbx+0x50]
  410b7a:	mov    rax,r8
  410b7d:	je     0x410b83
  410b7f:	mov    rax,QWORD PTR [rbx+0x58]
  410b83:	test   rax,rax
  410b86:	lea    rdx,[rip+0x1c707]        # 0x42d294
  410b8d:	mov    rcx,rsi
  410b90:	cmovne r8,rax
  410b94:	call   0x408600
  410b99:	jmp    0x410a33
  410b9e:	xchg   ax,ax
  410ba0:	mov    eax,DWORD PTR [rdi+0x10]
  410ba3:	test   ah,0x4
  410ba6:	je     0x410d66
  410bac:	mov    rbp,QWORD PTR [rdi+0x20]
  410bb0:	mov    edx,DWORD PTR [rbp+0x0]
  410bb3:	add    rbp,0x8
  410bb7:	cmp    edx,0x1
  410bba:	jle    0x410d7a
  410bc0:	and    eax,0xffffffdf
  410bc3:	mov    DWORD PTR [rdi+0x10],eax
  410bc6:	lea    eax,[rdx-0x1]
  410bc9:	lea    r12,[rbp+rax*8+0x8]
  410bce:	xchg   ax,ax
  410bd0:	add    rbp,0x8
  410bd4:	mov    r8,QWORD PTR [rbp-0x8]
  410bd8:	mov    rdx,rdi
  410bdb:	mov    rcx,rsi
  410bde:	call   0x4088a0
  410be3:	cmp    rbp,r12
  410be6:	jne    0x410bd0
  410be8:	jmp    0x410a33
  410bed:	nop    DWORD PTR [rax]
  410bf0:	mov    rbp,QWORD PTR [rdi+0x18]
  410bf4:	mov    rdx,rdi
  410bf7:	mov    ecx,0x3
  410bfc:	call   QWORD PTR [rdi+0x38]
  410bff:	mov    r8,QWORD PTR [rdi+0x18]
  410c03:	mov    rdx,rdi
  410c06:	mov    rcx,rsi
  410c09:	call   0x4088a0
  410c0e:	mov    QWORD PTR [rdi+0x18],rbp
  410c12:	jmp    0x410a33
  410c17:	nop    WORD PTR [rax+rax*1+0x0]
  410c20:	mov    eax,DWORD PTR [rdi+0x18]
  410c23:	lea    r8,[rip+0x1c1c1]        # 0x42cdeb
  410c2a:	mov    rdx,rdi
  410c2d:	mov    rcx,rsi
  410c30:	test   eax,eax
  410c32:	lea    rax,[rip+0x1c1b7]        # 0x42cdf0
  410c39:	cmove  r8,rax
  410c3d:	call   0x4088a0
  410c42:	jmp    0x410a33
  410c47:	nop    WORD PTR [rax+rax*1+0x0]
  410c50:	mov    rdx,rdi
  410c53:	mov    rbp,QWORD PTR [rdi+0x18]
  410c57:	mov    ecx,0x3
  410c5c:	call   QWORD PTR [rdi+0x38]
  410c5f:	mov    r12,QWORD PTR [rdi+0x18]
  410c63:	mov    QWORD PTR [rdi+0x18],rbp
  410c67:	mov    rcx,r12
  410c6a:	call   0x422468
  410c6f:	lea    rcx,[rax+0x3]
  410c73:	mov    r14,rax
  410c76:	call   0x40a440
  410c7b:	lea    r8,[r14+0x1]
  410c7f:	lea    rcx,[rax+0x1]
  410c83:	mov    rbp,rax
  410c86:	mov    rdx,r12
  410c89:	mov    BYTE PTR [rax],0x3d
  410c8c:	call   0x4224d8
  410c91:	mov    r8,rbp
  410c94:	mov    rdx,rdi
  410c97:	mov    rcx,rsi
  410c9a:	call   0x4088a0
  410c9f:	mov    rcx,rbp
  410ca2:	call   0x422528
  410ca7:	mov    rcx,r12
  410caa:	call   0x422528
  410caf:	jmp    0x410a33
  410cb4:	movsxd r8,DWORD PTR [rdi+0x18]
  410cb8:	mov    rdx,rdi
  410cbb:	mov    rcx,rsi
  410cbe:	call   0x4088a0
  410cc3:	jmp    0x410a33
  410cc8:	cmp    DWORD PTR [r13+0x0],0x1ffff
  410cd0:	jle    0x410a33
  410cd6:	movzx  edx,WORD PTR [rdi]
  410cd9:	mov    rax,QWORD PTR [r13+0xc8]
  410ce0:	mov    r8,QWORD PTR [rdi+0x18]
  410ce4:	cmp    QWORD PTR [rax+rdx*8],r8
  410ce8:	jne    0x410b62
  410cee:	jmp    0x410a33
  410cf3:	mov    rbp,QWORD PTR [r13+0x28]
  410cf7:	mov    rdi,QWORD PTR [rip+0x175e2]        # 0x4282e0
  410cfe:	mov    rsi,QWORD PTR [rip+0x8b71f]        # 0x49c424
  410d05:	call   rsi
  410d07:	lea    rcx,[rax+0x60]
  410d0b:	mov    r8,rbp
  410d0e:	mov    rdx,rdi
  410d11:	call   0x408600
  410d16:	mov    rdi,QWORD PTR [rip+0x8b757]        # 0x49c474
  410d1d:	call   rdi
  410d1f:	mov    ecx,DWORD PTR [rax]
  410d21:	call   0x422478
  410d26:	mov    r12,rax
  410d29:	call   rdi
  410d2b:	mov    rdi,QWORD PTR [rip+0x17516]        # 0x428248
  410d32:	mov    ebp,DWORD PTR [rax]
  410d34:	call   rsi
  410d36:	lea    rcx,[rax+0x60]
  410d3a:	mov    QWORD PTR [rsp+0x20],rbx
  410d3f:	mov    r9,r12
  410d42:	mov    r8d,ebp
  410d45:	mov    rdx,rdi
  410d48:	call   0x408600
  410d4d:	mov    ecx,DWORD PTR [rsp+0x48]
  410d51:	test   ecx,ecx
  410d53:	je     0x410a49
  410d59:	mov    rcx,rbx
  410d5c:	call   0x422528
  410d61:	jmp    0x410a49
  410d66:	mov    r8,QWORD PTR [rdi+0x18]
  410d6a:	mov    rdx,rdi
  410d6d:	mov    rcx,rsi
  410d70:	call   0x4088a0
  410d75:	jmp    0x410a33
  410d7a:	test   edx,edx
  410d7c:	jg     0x410bc6
  410d82:	jmp    0x410a33
  410d87:	nop    WORD PTR [rax+rax*1+0x0]
  410d90:	cmp    rcx,0xf
  410d94:	jbe    0x410da3
  410d96:	test   rdx,rdx
  410d99:	je     0x410da3
  410d9b:	mov    rcx,rdx
  410d9e:	jmp    0x40ad70
  410da3:	repz ret 
  410da5:	nop
  410da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410db0:	push   rbx
  410db1:	sub    rsp,0x20
  410db5:	cmp    rcx,0xf
  410db9:	jbe    0x410df0
  410dbb:	test   rdx,rdx
  410dbe:	je     0x410df0
  410dc0:	test   BYTE PTR [rdx+0x10],0x8
  410dc4:	jne    0x410df0
  410dc6:	mov    rcx,QWORD PTR [rdx+0x18]
  410dca:	test   rcx,rcx
  410dcd:	je     0x410df0
  410dcf:	mov    rbx,rdx
  410dd2:	call   0x40a1b0
  410dd7:	lea    rcx,[rbx+0x20]
  410ddb:	mov    rdx,rax
  410dde:	add    rsp,0x20
  410de2:	pop    rbx
  410de3:	jmp    0x40a490
  410de8:	nop    DWORD PTR [rax+rax*1+0x0]
  410df0:	add    rsp,0x20
  410df4:	pop    rbx
  410df5:	ret    
  410df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e00:	push   rbx
  410e01:	test   r8d,r8d
  410e04:	jle    0x410e4a
  410e06:	lea    ebx,[r8-0x1]
  410e0a:	xor    r8d,r8d
  410e0d:	add    rbx,0x1
  410e11:	jmp    0x410e1c
  410e13:	add    r8,0x1
  410e17:	cmp    r8,rbx
  410e1a:	je     0x410e4a
  410e1c:	movzx  r10d,BYTE PTR [rcx+r8*1]
  410e21:	movzx  r9d,BYTE PTR [rdx+r8*1]
  410e26:	cmp    r10b,r9b
  410e29:	je     0x410e45
  410e2b:	lea    r11,[rip+0x16e8e]        # 0x427cc0
  410e32:	movzx  eax,r10b
  410e36:	movzx  eax,BYTE PTR [r11+rax*1]
  410e3b:	movzx  r9d,BYTE PTR [r11+r9*1]
  410e40:	sub    eax,r9d
  410e43:	jne    0x410e4c
  410e45:	test   r10b,r10b
  410e48:	jne    0x410e13
  410e4a:	xor    eax,eax
  410e4c:	pop    rbx
  410e4d:	ret    
  410e4e:	xchg   ax,ax
  410e50:	push   r15
  410e52:	push   r14
  410e54:	push   r13
  410e56:	push   r12
  410e58:	push   rbp
  410e59:	push   rdi
  410e5a:	push   rsi
  410e5b:	push   rbx
  410e5c:	sub    rsp,0xd8
  410e63:	mov    rbx,rdx
  410e66:	lea    rdx,[rdx+0x80]
  410e6d:	mov    QWORD PTR [rsp+0x120],rcx
  410e75:	mov    QWORD PTR [rsp+0x130],r8
  410e7d:	mov    r12,rbx
  410e80:	mov    esi,r12d
  410e83:	add    r12,0x1
  410e87:	movzx  eax,BYTE PTR [r12-0x1]
  410e8d:	sub    esi,ebx
  410e8f:	test   al,al
  410e91:	je     0x4110f0
  410e97:	cmp    al,0x3d
  410e99:	jne    0x411070
  410e9f:	lea    r9,[rsp+0x50]
  410ea4:	movsxd rdi,esi
  410ea7:	mov    rdx,rbx
  410eaa:	mov    r8,rdi
  410ead:	mov    rcx,r9
  410eb0:	call   0x4224d8
  410eb5:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  410eba:	mov    rbx,rax
  410ebd:	cmp    esi,0x1
  410ec0:	jle    0x411080
  410ec6:	mov    rax,QWORD PTR [rsp+0x120]
  410ece:	mov    rcx,QWORD PTR [rsp+0x120]
  410ed6:	xor    r15d,r15d
  410ed9:	mov    QWORD PTR [rsp+0x40],r12
  410ede:	mov    BYTE PTR [rsp+0x3f],0x0
  410ee3:	mov    r12d,r15d
  410ee6:	mov    DWORD PTR [rsp+0x38],0x0
  410eee:	xor    ebp,ebp
  410ef0:	mov    rax,QWORD PTR [rax+0x78]
  410ef4:	mov    edi,DWORD PTR [rcx+0xb0]
  410efa:	mov    r14,rax
  410efd:	mov    QWORD PTR [rsp+0x48],rax
  410f02:	movsxd rax,esi
  410f05:	mov    r15,r14
  410f08:	mov    r13,rax
  410f0b:	jmp    0x410f24
  410f0d:	nop    DWORD PTR [rax]
  410f10:	cmp    eax,0x80100
  410f15:	je     0x410f38
  410f17:	add    r12d,0x1
  410f1b:	add    r15,0x68
  410f1f:	cmp    edi,r12d
  410f22:	jle    0x410f6e
  410f24:	mov    r14,QWORD PTR [r15+0x50]
  410f28:	test   r14,r14
  410f2b:	je     0x410f17
  410f2d:	mov    eax,DWORD PTR [r15+0x10]
  410f31:	test   eax,0x280000
  410f36:	jne    0x410f10
  410f38:	mov    r8d,esi
  410f3b:	mov    rdx,r14
  410f3e:	mov    rcx,rbx
  410f41:	call   0x410e00
  410f46:	test   eax,eax
  410f48:	jne    0x4110b0
  410f4e:	cmp    BYTE PTR [r14+r13*1],0x0
  410f53:	je     0x411134
  410f59:	mov    DWORD PTR [rsp+0x38],r12d
  410f5e:	add    r12d,0x1
  410f62:	add    ebp,0x1
  410f65:	add    r15,0x68
  410f69:	cmp    edi,r12d
  410f6c:	jg     0x410f24
  410f6e:	test   ebp,ebp
  410f70:	mov    r12,QWORD PTR [rsp+0x40]
  410f75:	je     0x411100
  410f7b:	cmp    ebp,0x1
  410f7e:	je     0x411200
  410f84:	mov    rax,QWORD PTR [rsp+0x120]
  410f8c:	test   BYTE PTR [rax+0x10],0x4
  410f90:	je     0x411092
  410f96:	mov    r12,QWORD PTR [rax+0x20]
  410f9a:	mov    rdi,QWORD PTR [rip+0x17207]        # 0x4281a8
  410fa1:	mov    rsi,QWORD PTR [rip+0x8b47c]        # 0x49c424
  410fa8:	call   rsi
  410faa:	lea    rcx,[rax+0x60]
  410fae:	mov    DWORD PTR [rsp+0x20],ebp
  410fb2:	mov    r9,rbx
  410fb5:	mov    r8,r12
  410fb8:	mov    rdx,rdi
  410fbb:	call   0x408600
  410fc0:	cmp    ebp,0x4
  410fc3:	jg     0x411292
  410fc9:	mov    rcx,rbx
  410fcc:	lea    rbp,[rip+0x1c273]        # 0x42d246
  410fd3:	call   0x422468
  410fd8:	mov    r12d,eax
  410fdb:	mov    rax,QWORD PTR [rsp+0x120]
  410fe3:	test   BYTE PTR [rax+0x10],0x3
  410fe7:	lea    rax,[rip+0x1d39b]        # 0x42e389
  410fee:	cmovne rbp,rax
  410ff2:	mov    rax,QWORD PTR [rsp+0x120]
  410ffa:	xor    r13d,r13d
  410ffd:	mov    rdi,QWORD PTR [rax+0x78]
  411001:	call   rsi
  411003:	mov    rcx,QWORD PTR [rip+0x17196]        # 0x4281a0
  41100a:	lea    rdx,[rax+0x60]
  41100e:	call   0x422538
  411013:	mov    r14,QWORD PTR [rdi+0x50]
  411017:	test   r14,r14
  41101a:	je     0x411051
  41101c:	mov    r8d,r12d
  41101f:	mov    rdx,r14
  411022:	mov    rcx,rbx
  411025:	call   0x410e00
  41102a:	test   eax,eax
  41102c:	je     0x4112af
  411032:	mov    r14,QWORD PTR [rdi+0x58]
  411036:	test   r14,r14
  411039:	je     0x411051
  41103b:	mov    r8d,r12d
  41103e:	mov    rdx,r14
  411041:	mov    rcx,rbx
  411044:	call   0x410e00
  411049:	test   eax,eax
  41104b:	je     0x4112af
  411051:	mov    rax,QWORD PTR [rsp+0x120]
  411059:	add    rdi,0x68
  41105d:	add    r13d,0x1
  411061:	cmp    r13d,DWORD PTR [rax+0xb0]
  411068:	jl     0x411013
  41106a:	jmp    0x411292
  41106f:	nop
  411070:	cmp    r12,rdx
  411073:	jne    0x410e80
  411079:	nop    DWORD PTR [rax+0x0]
  411080:	mov    rax,QWORD PTR [rsp+0x120]
  411088:	test   BYTE PTR [rax+0x10],0x4
  41108c:	jne    0x41126f
  411092:	mov    eax,0xffffffff
  411097:	add    rsp,0xd8
  41109e:	pop    rbx
  41109f:	pop    rsi
  4110a0:	pop    rdi
  4110a1:	pop    rbp
  4110a2:	pop    r12
  4110a4:	pop    r13
  4110a6:	pop    r14
  4110a8:	pop    r15
  4110aa:	ret    
  4110ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4110b0:	mov    r14,QWORD PTR [r15+0x58]
  4110b4:	test   r14,r14
  4110b7:	je     0x410f17
  4110bd:	mov    r8d,esi
  4110c0:	mov    rdx,r14
  4110c3:	mov    rcx,rbx
  4110c6:	call   0x410e00
  4110cb:	test   eax,eax
  4110cd:	jne    0x410f17
  4110d3:	cmp    BYTE PTR [r14+r13*1],0x0
  4110d8:	je     0x41120a
  4110de:	mov    BYTE PTR [rsp+0x3f],0x1
  4110e3:	jmp    0x410f59
  4110e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4110f0:	xor    r12d,r12d
  4110f3:	jmp    0x410ebd
  4110f8:	nop    DWORD PTR [rax+rax*1+0x0]
  411100:	mov    rax,QWORD PTR [rsp+0x120]
  411108:	test   r12,r12
  41110b:	mov    eax,DWORD PTR [rax+0x10]
  41110e:	je     0x41121c
  411114:	test   al,0x4
  411116:	je     0x411092
  41111c:	mov    rax,QWORD PTR [rsp+0x120]
  411124:	mov    rsi,QWORD PTR [rip+0x170cd]        # 0x4281f8
  41112b:	mov    rdi,QWORD PTR [rax+0x20]
  41112f:	jmp    0x41127a
  411134:	mov    r15d,r12d
  411137:	mov    r12,QWORD PTR [rsp+0x40]
  41113c:	movsxd r10,r15d
  41113f:	mov    rcx,QWORD PTR [rsp+0x48]
  411144:	lea    rax,[r10+r10*2]
  411148:	lea    rax,[r10+rax*4]
  41114c:	lea    rbx,[rcx+rax*8]
  411150:	test   DWORD PTR [rbx+0x10],0x280000
  411157:	je     0x4111d0
  411159:	mov    rax,QWORD PTR [rsp+0x120]
  411161:	test   BYTE PTR [rax+0x10],0x4
  411165:	je     0x411092
  41116b:	mov    r12,QWORD PTR [rbx+0x50]
  41116f:	mov    rbp,QWORD PTR [rax+0x28]
  411173:	mov    rdi,QWORD PTR [rip+0x17066]        # 0x4281e0
  41117a:	mov    rsi,QWORD PTR [rip+0x8b2a3]        # 0x49c424
  411181:	call   rsi
  411183:	lea    rcx,[rax+0x60]
  411187:	mov    r9,r12
  41118a:	mov    r8,rbp
  41118d:	mov    rdx,rdi
  411190:	call   0x408600
  411195:	mov    rbx,QWORD PTR [rbx+0x40]
  411199:	test   rbx,rbx
  41119c:	je     0x4111b3
  41119e:	call   rsi
  4111a0:	lea    rdx,[rip+0x1d2b2]        # 0x42e459
  4111a7:	lea    rcx,[rax+0x60]
  4111ab:	mov    r8,rbx
  4111ae:	call   0x408600
  4111b3:	call   rsi
  4111b5:	lea    rdx,[rax+0x60]
  4111b9:	mov    ecx,0xa
  4111be:	call   0x422540
  4111c3:	jmp    0x411292
  4111c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4111d0:	cmp    BYTE PTR [rsp+0x3f],0x0
  4111d5:	je     0x4111e3
  4111d7:	mov    rax,QWORD PTR [rsp+0x130]
  4111df:	or     DWORD PTR [rax+0x10],0x20
  4111e3:	mov    rax,QWORD PTR [rsp+0x130]
  4111eb:	mov    QWORD PTR [rax],rbx
  4111ee:	mov    QWORD PTR [rax+0x8],r12
  4111f2:	mov    DWORD PTR [rax+0x14],0x2
  4111f9:	xor    eax,eax
  4111fb:	jmp    0x411097
  411200:	mov    r15d,DWORD PTR [rsp+0x38]
  411205:	jmp    0x41113c
  41120a:	mov    r15d,r12d
  41120d:	mov    BYTE PTR [rsp+0x3f],0x1
  411212:	mov    r12,QWORD PTR [rsp+0x40]
  411217:	jmp    0x41113c
  41121c:	test   al,0x3
  41121e:	jne    0x411114
  411224:	mov    rcx,QWORD PTR [rsp+0x120]
  41122c:	movzx  edx,WORD PTR [rcx+0xae]
  411233:	cmp    dx,0x8000
  411238:	je     0x411114
  41123e:	movzx  eax,dx
  411241:	mov    rcx,QWORD PTR [rsp+0x48]
  411246:	lea    rdx,[rax+rax*2]
  41124a:	lea    rax,[rax+rdx*4]
  41124e:	lea    rax,[rcx+rax*8]
  411252:	mov    rcx,QWORD PTR [rsp+0x130]
  41125a:	mov    QWORD PTR [rcx],rax
  41125d:	mov    QWORD PTR [rcx+0x8],rbx
  411261:	xor    eax,eax
  411263:	mov    DWORD PTR [rcx+0x14],0x3
  41126a:	jmp    0x411097
  41126f:	mov    rdi,QWORD PTR [rax+0x28]
  411273:	mov    rsi,QWORD PTR [rip+0x16f9e]        # 0x428218
  41127a:	call   QWORD PTR [rip+0x8b1a4]        # 0x49c424
  411280:	lea    rcx,[rax+0x60]
  411284:	mov    r9,rbx
  411287:	mov    r8,rdi
  41128a:	mov    rdx,rsi
  41128d:	call   0x408600
  411292:	mov    rcx,QWORD PTR [rsp+0x120]
  41129a:	mov    edx,0x1
  41129f:	call   QWORD PTR [rcx+0x98]
  4112a5:	mov    ecx,0x1
  4112aa:	call   0x422630
  4112af:	call   rsi
  4112b1:	lea    rdx,[rip+0x1cf4c]        # 0x42e204
  4112b8:	lea    rcx,[rax+0x60]
  4112bc:	mov    r9,r14
  4112bf:	mov    r8,rbp
  4112c2:	call   0x408600
  4112c7:	jmp    0x411051
  4112cc:	nop    DWORD PTR [rax+0x0]
  4112d0:	push   rsi
  4112d1:	push   rbx
  4112d2:	sub    rsp,0x38
  4112d6:	mov    rax,QWORD PTR [rcx+0x18]
  4112da:	test   rax,rax
  4112dd:	je     0x4112ea
  4112df:	movzx  eax,BYTE PTR [rax]
  4112e2:	test   al,al
  4112e4:	jne    0x4113b0
  4112ea:	mov    eax,DWORD PTR [rcx+0x14]
  4112ed:	cmp    eax,DWORD PTR [rcx+0x4]
  4112f0:	jae    0x41135f
  4112f2:	mov    rbx,rcx
  4112f5:	mov    r8,rdx
  4112f8:	mov    ecx,eax
  4112fa:	mov    rdx,QWORD PTR [rbx+0x8]
  4112fe:	mov    rdx,QWORD PTR [rdx+rcx*8]
  411302:	mov    ecx,DWORD PTR [rbx+0x10]
  411305:	test   cl,0x3
  411308:	mov    QWORD PTR [rbx+0x18],rdx
  41130c:	jne    0x411352
  41130e:	add    eax,0x1
  411311:	mov    DWORD PTR [rbx+0x14],eax
  411314:	cmp    BYTE PTR [rdx],0x2d
  411317:	jne    0x4113a0
  41131d:	nop    DWORD PTR [rax]
  411320:	add    rdx,0x1
  411324:	cmp    BYTE PTR [rdx],0x2d
  411327:	je     0x411320
  411329:	movzx  esi,WORD PTR [rbx+0xae]
  411330:	mov    eax,0xffff8000
  411335:	mov    rcx,rbx
  411338:	mov    WORD PTR [rbx+0xae],ax
  41133f:	call   0x410e50
  411344:	mov    WORD PTR [rbx+0xae],si
  41134b:	add    rsp,0x38
  41134f:	pop    rbx
  411350:	pop    rsi
  411351:	ret    
  411352:	lea    r9,[rdx+0x1]
  411356:	mov    QWORD PTR [rbx+0x18],r9
  41135a:	cmp    BYTE PTR [rdx],0x2d
  41135d:	je     0x411370
  41135f:	mov    eax,0x1
  411364:	add    rsp,0x38
  411368:	pop    rbx
  411369:	pop    rsi
  41136a:	ret    
  41136b:	nop    DWORD PTR [rax+rax*1+0x0]
  411370:	cmp    BYTE PTR [rdx+0x1],0x0
  411374:	je     0x41135f
  411376:	add    eax,0x1
  411379:	mov    DWORD PTR [rbx+0x14],eax
  41137c:	movzx  eax,BYTE PTR [rdx+0x1]
  411380:	cmp    al,0x2d
  411382:	jne    0x4113c4
  411384:	lea    rax,[rdx+0x2]
  411388:	mov    QWORD PTR [rbx+0x18],rax
  41138c:	cmp    BYTE PTR [rdx+0x2],0x0
  411390:	je     0x41135f
  411392:	and    ecx,0x1
  411395:	je     0x4113da
  411397:	mov    rdx,rax
  41139a:	nop    WORD PTR [rax+rax*1+0x0]
  4113a0:	mov    rcx,rbx
  4113a3:	add    rsp,0x38
  4113a7:	pop    rbx
  4113a8:	pop    rsi
  4113a9:	jmp    0x410e50
  4113ae:	xchg   ax,ax
  4113b0:	lea    r9,[rdx+0x14]
  4113b4:	mov    r8,rdx
  4113b7:	mov    edx,eax
  4113b9:	add    rsp,0x38
  4113bd:	pop    rbx
  4113be:	pop    rsi
  4113bf:	jmp    0x409c00
  4113c4:	and    ecx,0x2
  4113c7:	jne    0x4113ce
  4113c9:	mov    rdx,r9
  4113cc:	jmp    0x4113a0
  4113ce:	movzx  edx,al
  4113d1:	lea    r9,[r8+0x14]
  4113d5:	mov    rcx,rbx
  4113d8:	jmp    0x4113b9
  4113da:	mov    rsi,QWORD PTR [rbx+0x20]
  4113de:	mov    QWORD PTR [rsp+0x28],rdx
  4113e3:	mov    rbx,QWORD PTR [rip+0x16e0e]        # 0x4281f8
  4113ea:	call   QWORD PTR [rip+0x8b034]        # 0x49c424
  4113f0:	mov    rdx,QWORD PTR [rsp+0x28]
  4113f5:	lea    rcx,[rax+0x60]
  4113f9:	mov    r8,rsi
  4113fc:	mov    r9,rdx
  4113ff:	mov    rdx,rbx
  411402:	call   0x408600
  411407:	or     eax,0xffffffff
  41140a:	jmp    0x411364
  41140f:	nop
  411410:	push   rdi
  411411:	push   rsi
  411412:	push   rbx
  411413:	sub    rsp,0x50
  411417:	or     DWORD PTR [rcx+0x10],0x8000
  41141e:	lea    rdi,[rsp+0x30]
  411423:	mov    rbx,rcx
  411426:	mov    DWORD PTR [rcx+0x14],0x1
  41142d:	mov    QWORD PTR [rcx+0x18],0x0
  411435:	mov    rdx,rdi
  411438:	mov    rcx,rbx
  41143b:	mov    QWORD PTR [rsp+0x30],0x0
  411444:	mov    QWORD PTR [rsp+0x38],0x0
  41144d:	mov    DWORD PTR [rsp+0x40],0x2
  411455:	mov    DWORD PTR [rsp+0x44],0x0
  41145d:	call   0x4112d0
  411462:	test   eax,eax
  411464:	mov    esi,eax
  411466:	jne    0x411475
  411468:	mov    rdx,rdi
  41146b:	mov    rcx,rbx
  41146e:	call   0x40aef0
  411473:	mov    esi,eax
  411475:	cmp    esi,0xffffffff
  411478:	je     0x4114b0
  41147a:	cmp    esi,0x1
  41147d:	je     0x4114d0
  41147f:	mov    eax,DWORD PTR [rsp+0x40]
  411483:	mov    edx,eax
  411485:	and    edx,0x20020
  41148b:	cmp    edx,0x20000
  411491:	je     0x41149f
  411493:	and    eax,0x40020
  411498:	cmp    eax,0x40020
  41149d:	jne    0x411435
  41149f:	mov    rdx,rdi
  4114a2:	mov    rcx,rbx
  4114a5:	call   0x409a50
  4114aa:	test   eax,eax
  4114ac:	je     0x411435
  4114ae:	xchg   ax,ax
  4114b0:	mov    edx,DWORD PTR [rbx+0x10]
  4114b3:	mov    eax,esi
  4114b5:	test   dl,0x4
  4114b8:	jne    0x4114e3
  4114ba:	and    dh,0x7f
  4114bd:	mov    DWORD PTR [rbx+0x10],edx
  4114c0:	add    rsp,0x50
  4114c4:	pop    rbx
  4114c5:	pop    rsi
  4114c6:	pop    rdi
  4114c7:	ret    
  4114c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4114d0:	mov    edx,DWORD PTR [rbx+0x10]
  4114d3:	xor    eax,eax
  4114d5:	and    dh,0x7f
  4114d8:	mov    DWORD PTR [rbx+0x10],edx
  4114db:	add    rsp,0x50
  4114df:	pop    rbx
  4114e0:	pop    rsi
  4114e1:	pop    rdi
  4114e2:	ret    
  4114e3:	mov    DWORD PTR [rsp+0x2c],esi
  4114e7:	mov    edx,0x1
  4114ec:	mov    rcx,rbx
  4114ef:	call   QWORD PTR [rbx+0x98]
  4114f5:	mov    edx,DWORD PTR [rbx+0x10]
  4114f8:	mov    eax,DWORD PTR [rsp+0x2c]
  4114fc:	and    dh,0x7f
  4114ff:	mov    DWORD PTR [rbx+0x10],edx
  411502:	add    rsp,0x50
  411506:	pop    rbx
  411507:	pop    rsi
  411508:	pop    rdi
  411509:	ret    
  41150a:	nop    WORD PTR [rax+rax*1+0x0]
  411510:	push   rsi
  411511:	push   rbx
  411512:	sub    rsp,0x58
  411516:	lea    rsi,[rsp+0x30]
  41151b:	mov    rbx,rcx
  41151e:	mov    rdx,rsi
  411521:	mov    rcx,rbx
  411524:	mov    QWORD PTR [rsp+0x30],0x0
  41152d:	mov    QWORD PTR [rsp+0x38],0x0
  411536:	mov    DWORD PTR [rsp+0x40],0x4
  41153e:	mov    DWORD PTR [rsp+0x44],0x0
  411546:	call   0x4112d0
  41154b:	test   eax,eax
  41154d:	jne    0x41155a
  41154f:	mov    rdx,rsi
  411552:	mov    rcx,rbx
  411555:	call   0x40aef0
  41155a:	cmp    eax,0xffffffff
  41155d:	je     0x4115b5
  41155f:	cmp    eax,0x1
  411562:	je     0x4115d0
  411564:	mov    eax,DWORD PTR [rsp+0x40]
  411568:	test   eax,0x20020
  41156d:	je     0x4115a2
  41156f:	mov    edx,eax
  411571:	and    edx,0x40020
  411577:	cmp    edx,0x20
  41157a:	je     0x4115a2
  41157c:	mov    edx,eax
  41157e:	and    edx,0x400020
  411584:	cmp    edx,0x400000
  41158a:	je     0x411598
  41158c:	and    eax,0x800020
  411591:	cmp    eax,0x800020
  411596:	jne    0x41151e
  411598:	mov    rax,QWORD PTR [rsp+0x30]
  41159d:	sub    WORD PTR [rax+0xe],0x1
  4115a2:	mov    rdx,rsi
  4115a5:	mov    rcx,rbx
  4115a8:	call   0x409a50
  4115ad:	test   eax,eax
  4115af:	je     0x41151e
  4115b5:	test   BYTE PTR [rbx+0x10],0x4
  4115b9:	mov    eax,0xffffffff
  4115be:	jne    0x4115e0
  4115c0:	add    rsp,0x58
  4115c4:	pop    rbx
  4115c5:	pop    rsi
  4115c6:	ret    
  4115c7:	nop    WORD PTR [rax+rax*1+0x0]
  4115d0:	xor    al,al
  4115d2:	add    rsp,0x58
  4115d6:	pop    rbx
  4115d7:	pop    rsi
  4115d8:	ret    
  4115d9:	nop    DWORD PTR [rax+0x0]
  4115e0:	mov    DWORD PTR [rsp+0x2c],eax
  4115e4:	mov    edx,0x1
  4115e9:	mov    rcx,rbx
  4115ec:	call   QWORD PTR [rbx+0x98]
  4115f2:	mov    eax,DWORD PTR [rsp+0x2c]
  4115f6:	add    rsp,0x58
  4115fa:	pop    rbx
  4115fb:	pop    rsi
  4115fc:	ret    
  4115fd:	nop    DWORD PTR [rax]
  411600:	push   r14
  411602:	push   r13
  411604:	push   r12
  411606:	push   rbp
  411607:	push   rdi
  411608:	push   rsi
  411609:	push   rbx
  41160a:	sub    rsp,0x20
  41160e:	mov    rax,QWORD PTR [rip+0x576d3]        # 0x468ce8
  411615:	mov    rbp,rcx
  411618:	mov    rdi,rdx
  41161b:	mov    rbx,r8
  41161e:	mov    r12d,r9d
  411621:	test   rax,rax
  411624:	je     0x4118f4
  41162a:	movzx  edx,BYTE PTR [rbx]
  41162d:	cmp    BYTE PTR [rax+rdx*1],0x0
  411631:	je     0x411642
  411633:	add    rbx,0x1
  411637:	movzx  r10d,BYTE PTR [rbx]
  41163b:	cmp    BYTE PTR [rax+r10*1],0x0
  411640:	jne    0x411633
  411642:	lea    rdx,[rip+0x1ccbc]        # 0x42e305
  411649:	mov    rcx,rbx
  41164c:	call   0x422450
  411651:	test   rax,rax
  411654:	mov    r13,rax
  411657:	je     0x4118a7
  41165d:	cmp    DWORD PTR [rsp+0x80],0x2
  411665:	je     0x411870
  41166b:	movzx  eax,BYTE PTR [rax]
  41166e:	xor    r14d,r14d
  411671:	cmp    al,0x7f
  411673:	jbe    0x411750
  411679:	mov    rdx,QWORD PTR [rip+0x57560]        # 0x468be0
  411680:	lea    rsi,[r13+0x1]
  411684:	mov    BYTE PTR [r13+0x0],0x0
  411689:	test   rdx,rdx
  41168c:	je     0x411927
  411692:	movzx  eax,BYTE PTR [r13+0x1]
  411697:	cmp    BYTE PTR [rdx+rax*1],0x0
  41169b:	mov    r10,rax
  41169e:	je     0x4116b2
  4116a0:	add    rsi,0x1
  4116a4:	movzx  r11d,BYTE PTR [rsi]
  4116a8:	cmp    BYTE PTR [rdx+r11*1],0x0
  4116ad:	mov    r10,r11
  4116b0:	jne    0x4116a0
  4116b2:	test   r14d,r14d
  4116b5:	mov    r13,rsi
  4116b8:	je     0x4116ce
  4116ba:	cmp    r10b,0x3d
  4116be:	je     0x4117e0
  4116c4:	cmp    r10b,0x3a
  4116c8:	je     0x4117e0
  4116ce:	movzx  eax,BYTE PTR [rbx+0x1]
  4116d2:	cmp    al,0x7f
  4116d4:	ja     0x411725
  4116d6:	lea    rdx,[rip+0x1f723]        # 0x430e00
  4116dd:	test   DWORD PTR [rdx+rax*4],0x3b0040
  4116e4:	je     0x411725
  4116e6:	mov    r8,rdi
  4116e9:	mov    rdx,rbx
  4116ec:	mov    rcx,rbp
  4116ef:	call   0x410e50
  4116f4:	test   eax,eax
  4116f6:	jne    0x41173b
  4116f8:	test   r12d,r12d
  4116fb:	je     0x411770
  4116fd:	mov    eax,DWORD PTR [rdi+0x10]
  411700:	test   ah,0x1
  411703:	jne    0x41173b
  411705:	movzx  edx,BYTE PTR [r13+0x0]
  41170a:	cmp    dl,0x22
  41170d:	je     0x411820
  411713:	cmp    dl,0x27
  411716:	je     0x411820
  41171c:	mov    QWORD PTR [rdi+0x8],r13
  411720:	jmp    0x411831
  411725:	movsx  edx,BYTE PTR [rbx]
  411728:	lea    r9,[rdi+0x14]
  41172c:	mov    r8,rdi
  41172f:	mov    rcx,rbp
  411732:	call   0x409c00
  411737:	test   eax,eax
  411739:	je     0x4116f8
  41173b:	add    rsp,0x20
  41173f:	pop    rbx
  411740:	pop    rsi
  411741:	pop    rdi
  411742:	pop    rbp
  411743:	pop    r12
  411745:	pop    r13
  411747:	pop    r14
  411749:	ret    
  41174a:	nop    WORD PTR [rax+rax*1+0x0]
  411750:	lea    rdx,[rip+0x1f6a9]        # 0x430e00
  411757:	xor    r14d,r14d
  41175a:	test   DWORD PTR [rdx+rax*4],0xc01
  411761:	setne  r14b
  411765:	jmp    0x411679
  41176a:	nop    WORD PTR [rax+rax*1+0x0]
  411770:	movzx  eax,BYTE PTR [r13+0x0]
  411775:	cmp    al,0x22
  411777:	je     0x4118ce
  41177d:	cmp    al,0x27
  41177f:	je     0x4118ce
  411785:	mov    QWORD PTR [rdi+0x8],r13
  411789:	mov    rax,QWORD PTR [rdi]
  41178c:	mov    eax,DWORD PTR [rax+0x10]
  41178f:	test   ah,0xf0
  411792:	jne    0x411880
  411798:	cmp    BYTE PTR [r13+0x0],0x0
  41179d:	jne    0x41173b
  41179f:	mov    QWORD PTR [rdi+0x8],0x0
  4117a7:	mov    ebx,DWORD PTR [rip+0x16923]        # 0x4280d0
  4117ad:	mov    eax,DWORD PTR [rsp+0x80]
  4117b4:	mov    rdx,rdi
  4117b7:	mov    rcx,rbp
  4117ba:	mov    DWORD PTR [rip+0x16910],eax        # 0x4280d0
  4117c0:	call   0x409a50
  4117c5:	mov    DWORD PTR [rip+0x16905],ebx        # 0x4280d0
  4117cb:	add    rsp,0x20
  4117cf:	pop    rbx
  4117d0:	pop    rsi
  4117d1:	pop    rdi
  4117d2:	pop    rbp
  4117d3:	pop    r12
  4117d5:	pop    r13
  4117d7:	pop    r14
  4117d9:	ret    
  4117da:	nop    WORD PTR [rax+rax*1+0x0]
  4117e0:	mov    rax,QWORD PTR [rip+0x573f9]        # 0x468be0
  4117e7:	lea    r13,[rsi+0x1]
  4117eb:	test   rax,rax
  4117ee:	je     0x411939
  4117f4:	movzx  edx,BYTE PTR [rsi+0x1]
  4117f8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4117fc:	je     0x4116ce
  411802:	add    r13,0x1
  411806:	movzx  edx,BYTE PTR [r13+0x0]
  41180b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41180f:	jne    0x411802
  411811:	jmp    0x4116ce
  411816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411820:	xor    edx,edx
  411822:	mov    rcx,r13
  411825:	call   0x40d650
  41182a:	mov    eax,DWORD PTR [rdi+0x10]
  41182d:	mov    QWORD PTR [rdi+0x8],r13
  411831:	mov    edx,eax
  411833:	and    edx,0x60000
  411839:	cmp    edx,0x20000
  41183f:	je     0x411903
  411845:	jbe    0x4118b8
  411847:	cmp    edx,0x40000
  41184d:	je     0x411915
  411853:	cmp    edx,0x60000
  411859:	jne    0x411789
  41185f:	test   r12d,r12d
  411862:	jg     0x41173b
  411868:	jmp    0x411789
  41186d:	nop    DWORD PTR [rax]
  411870:	mov    BYTE PTR [rax],0x0
  411873:	add    r13,0x1
  411877:	jmp    0x4116ce
  41187c:	nop    DWORD PTR [rax+0x0]
  411880:	test   eax,0x10000
  411885:	je     0x4118dd
  411887:	cmp    BYTE PTR [r13+0x0],0x0
  41188c:	je     0x41179f
  411892:	mov    rcx,r13
  411895:	call   0x40a1b0
  41189a:	or     DWORD PTR [rdi+0x10],0x40
  41189e:	mov    QWORD PTR [rdi+0x8],rax
  4118a2:	jmp    0x4117a7
  4118a7:	mov    rcx,rbx
  4118aa:	call   0x422468
  4118af:	lea    r13,[rbx+rax*1]
  4118b3:	jmp    0x4116ce
  4118b8:	test   edx,edx
  4118ba:	jne    0x411789
  4118c0:	test   r12d,r12d
  4118c3:	jns    0x411789
  4118c9:	jmp    0x41173b
  4118ce:	xor    edx,edx
  4118d0:	mov    rcx,r13
  4118d3:	call   0x40d650
  4118d8:	jmp    0x411785
  4118dd:	cmp    BYTE PTR [r13+0x0],0x0
  4118e2:	jne    0x411892
  4118e4:	lea    rax,[rip+0x1e324]        # 0x42fc0f
  4118eb:	mov    QWORD PTR [rdi+0x8],rax
  4118ef:	jmp    0x4117a7
  4118f4:	mov    ecx,0x2d
  4118f9:	call   0x409f50
  4118fe:	jmp    0x41162a
  411903:	test   r12d,r12d
  411906:	js     0x41191a
  411908:	test   al,0x20
  41190a:	je     0x411789
  411910:	jmp    0x41173b
  411915:	test   r12d,r12d
  411918:	js     0x411908
  41191a:	test   al,0x20
  41191c:	jne    0x411789
  411922:	jmp    0x41173b
  411927:	mov    ecx,0xc
  41192c:	call   0x409f50
  411931:	mov    rdx,rax
  411934:	jmp    0x411692
  411939:	mov    ecx,0xc
  41193e:	call   0x409f50
  411943:	jmp    0x4117f4
  411948:	nop    DWORD PTR [rax+rax*1+0x0]
  411950:	push   rdi
  411951:	push   rsi
  411952:	push   rbx
  411953:	sub    rsp,0x50
  411957:	mov    esi,DWORD PTR [rcx+0x10]
  41195a:	mov    rbx,rcx
  41195d:	mov    QWORD PTR [rsp+0x30],0x0
  411966:	mov    QWORD PTR [rsp+0x38],0x0
  41196f:	mov    DWORD PTR [rsp+0x40],0x1
  411977:	mov    DWORD PTR [rsp+0x44],0x0
  41197f:	mov    eax,esi
  411981:	and    eax,0xfffffffb
  411984:	mov    DWORD PTR [rcx+0x10],eax
  411987:	mov    rcx,rdx
  41198a:	call   0x40a1b0
  41198f:	lea    rdx,[rsp+0x30]
  411994:	mov    rdi,rax
  411997:	xor    r9d,r9d
  41199a:	mov    r8,rax
  41199d:	mov    rcx,rbx
  4119a0:	mov    DWORD PTR [rsp+0x20],0x0
  4119a8:	call   0x411600
  4119ad:	mov    rcx,rdi
  4119b0:	call   0x422528
  4119b5:	mov    DWORD PTR [rbx+0x10],esi
  4119b8:	add    rsp,0x50
  4119bc:	pop    rbx
  4119bd:	pop    rsi
  4119be:	pop    rdi
  4119bf:	ret    
  4119c0:	push   rbp
  4119c1:	push   rdi
  4119c2:	push   rsi
  4119c3:	push   rbx
  4119c4:	sub    rsp,0x48
  4119c8:	mov    rsi,QWORD PTR [rdx+0x18]
  4119cc:	cmp    rcx,0xf
  4119d0:	mov    QWORD PTR [rsp+0x20],0x0
  4119d9:	mov    QWORD PTR [rsp+0x28],0x0
  4119e2:	mov    DWORD PTR [rsp+0x30],0x2
  4119ea:	mov    DWORD PTR [rsp+0x34],0x0
  4119f2:	jbe    0x4119fb
  4119f4:	mov    eax,DWORD PTR [rdx+0x10]
  4119f7:	test   al,0x8
  4119f9:	je     0x411a04
  4119fb:	add    rsp,0x48
  4119ff:	pop    rbx
  411a00:	pop    rsi
  411a01:	pop    rdi
  411a02:	pop    rbp
  411a03:	ret    
  411a04:	test   ah,0x80
  411a07:	je     0x411aa0
  411a0d:	test   BYTE PTR [rcx+0x12],0x4
  411a11:	mov    rbx,rcx
  411a14:	je     0x411ad2
  411a1a:	lea    rdi,[rsp+0x20]
  411a1f:	mov    rdx,rsi
  411a22:	mov    r8,rdi
  411a25:	call   0x410e50
  411a2a:	test   eax,eax
  411a2c:	jne    0x411ad2
  411a32:	mov    rdx,rdi
  411a35:	mov    rcx,rbx
  411a38:	call   0x409ff0
  411a3d:	test   eax,eax
  411a3f:	jne    0x411ad2
  411a45:	test   BYTE PTR [rbx+0x11],0x80
  411a49:	mov    eax,DWORD PTR [rsp+0x30]
  411a4d:	jne    0x411ab0
  411a4f:	test   eax,0x20020
  411a54:	je     0x411a83
  411a56:	mov    edx,eax
  411a58:	and    edx,0x40020
  411a5e:	cmp    edx,0x20
  411a61:	je     0x411a83
  411a63:	mov    edx,eax
  411a65:	and    edx,0x400020
  411a6b:	cmp    edx,0x400000
  411a71:	je     0x411a83
  411a73:	and    eax,0x800020
  411a78:	cmp    eax,0x800020
  411a7d:	jne    0x4119fb
  411a83:	mov    rdx,rdi
  411a86:	mov    rcx,rbx
  411a89:	call   0x409a50
  411a8e:	nop
  411a8f:	add    rsp,0x48
  411a93:	pop    rbx
  411a94:	pop    rsi
  411a95:	pop    rdi
  411a96:	pop    rbp
  411a97:	ret    
  411a98:	nop    DWORD PTR [rax+rax*1+0x0]
  411aa0:	mov    DWORD PTR [rsp+0x30],0x4
  411aa8:	jmp    0x411a0d
  411aad:	nop    DWORD PTR [rax]
  411ab0:	mov    edx,eax
  411ab2:	and    edx,0x20020
  411ab8:	cmp    edx,0x20000
  411abe:	je     0x411a83
  411ac0:	and    eax,0x40020
  411ac5:	cmp    eax,0x40020
  411aca:	jne    0x4119fb
  411ad0:	jmp    0x411a83
  411ad2:	mov    rbp,QWORD PTR [rbx+0x28]
  411ad6:	mov    rdi,QWORD PTR [rip+0x16723]        # 0x428200
  411add:	call   QWORD PTR [rip+0x8a941]        # 0x49c424
  411ae3:	lea    rcx,[rax+0x60]
  411ae7:	mov    r9,rsi
  411aea:	mov    r8,rbp
  411aed:	mov    rdx,rdi
  411af0:	call   0x408600
  411af5:	mov    rcx,rbx
  411af8:	mov    edx,0x1
  411afd:	call   QWORD PTR [rbx+0x98]
  411b03:	mov    ecx,0x1
  411b08:	call   0x422630
  411b0d:	nop
  411b0e:	xchg   ax,ax
  411b10:	push   r12
  411b12:	push   rbp
  411b13:	push   rdi
  411b14:	push   rsi
  411b15:	push   rbx
  411b16:	sub    rsp,0x40
  411b1a:	mov    rsi,QWORD PTR [rdx+0x18]
  411b1e:	cmp    rcx,0xf
  411b22:	mov    QWORD PTR [rsp+0x20],0x0
  411b2b:	mov    QWORD PTR [rsp+0x28],0x0
  411b34:	mov    DWORD PTR [rsp+0x30],0x4
  411b3c:	mov    DWORD PTR [rsp+0x34],0x0
  411b44:	jbe    0x411c5f
  411b4a:	cmp    BYTE PTR [rip+0x56eff],0x0        # 0x468a50
  411b51:	jne    0x411c5f
  411b57:	cmp    DWORD PTR [rcx],0x1ffff
  411b5d:	mov    rbx,rcx
  411b60:	jle    0x411cfb
  411b66:	cmp    QWORD PTR [rcx+0xd0],0x0
  411b6e:	je     0x411cfb
  411b74:	test   rsi,rsi
  411b77:	je     0x411b7e
  411b79:	cmp    BYTE PTR [rsi],0x0
  411b7c:	jne    0x411bcc
  411b7e:	mov    r12,QWORD PTR [rdx+0x50]
  411b82:	mov    rbp,QWORD PTR [rbx+0x28]
  411b86:	mov    rdi,QWORD PTR [rip+0x166cb]        # 0x428258
  411b8d:	call   QWORD PTR [rip+0x8a891]        # 0x49c424
  411b93:	lea    rcx,[rax+0x60]
  411b97:	mov    r8,rbp
  411b9a:	mov    r9,r12
  411b9d:	mov    rdx,rdi
  411ba0:	call   0x408600
  411ba5:	mov    edx,0x1
  411baa:	mov    rcx,rbx
  411bad:	call   QWORD PTR [rbx+0x98]
  411bb3:	lea    rdx,[rip+0x1b6fe]        # 0x42d2b8
  411bba:	lea    rcx,[rip+0x1b6ff]        # 0x42d2c0
  411bc1:	mov    r8d,0x60
  411bc7:	call   0x41d6b0
  411bcc:	cmp    BYTE PTR [rsi+0x1],0x0
  411bd0:	mov    BYTE PTR [rip+0x56e79],0x1        # 0x468a50
  411bd7:	jne    0x411c70
  411bdd:	movzx  edx,BYTE PTR [rsi]
  411be0:	cmp    dl,0x2a
  411be3:	je     0x411cd3
  411be9:	lea    r8,[rsp+0x20]
  411bee:	mov    rcx,rbx
  411bf1:	lea    r9,[r8+0x14]
  411bf5:	call   0x409c00
  411bfa:	test   eax,eax
  411bfc:	je     0x411c4b
  411bfe:	movsx  ebp,BYTE PTR [rsi]
  411c01:	mov    rdi,QWORD PTR [rbx+0x20]
  411c05:	mov    rsi,QWORD PTR [rip+0x165e4]        # 0x4281f0
  411c0c:	call   QWORD PTR [rip+0x8a812]        # 0x49c424
  411c12:	lea    rcx,[rax+0x60]
  411c16:	mov    r8,rdi
  411c19:	mov    r9d,ebp
  411c1c:	mov    rdx,rsi
  411c1f:	call   0x408600
  411c24:	mov    edx,0x1
  411c29:	mov    rcx,rbx
  411c2c:	call   QWORD PTR [rbx+0x98]
  411c32:	lea    rdx,[rip+0x1b67f]        # 0x42d2b8
  411c39:	lea    rcx,[rip+0x1b680]        # 0x42d2c0
  411c40:	mov    r8d,0x71
  411c46:	call   0x41d6b0
  411c4b:	mov    rdx,QWORD PTR [rsp+0x20]
  411c50:	mov    rcx,rbx
  411c53:	call   0x4084e0
  411c58:	mov    BYTE PTR [rip+0x56df1],0x0        # 0x468a50
  411c5f:	add    rsp,0x40
  411c63:	pop    rbx
  411c64:	pop    rsi
  411c65:	pop    rdi
  411c66:	pop    rbp
  411c67:	pop    r12
  411c69:	ret    
  411c6a:	nop    WORD PTR [rax+rax*1+0x0]
  411c70:	lea    r8,[rsp+0x20]
  411c75:	mov    rdx,rsi
  411c78:	mov    rcx,rbx
  411c7b:	call   0x410e50
  411c80:	test   eax,eax
  411c82:	je     0x411c4b
  411c84:	mov    rbp,QWORD PTR [rbx+0x20]
  411c88:	mov    rdi,QWORD PTR [rip+0x16569]        # 0x4281f8
  411c8f:	call   QWORD PTR [rip+0x8a78f]        # 0x49c424
  411c95:	lea    rcx,[rax+0x60]
  411c99:	mov    r9,rsi
  411c9c:	mov    r8,rbp
  411c9f:	mov    rdx,rdi
  411ca2:	call   0x408600
  411ca7:	mov    rcx,rbx
  411caa:	mov    edx,0x1
  411caf:	call   QWORD PTR [rbx+0x98]
  411cb5:	lea    rdx,[rip+0x1b5fc]        # 0x42d2b8
  411cbc:	lea    rcx,[rip+0x1b5fd]        # 0x42d2c0
  411cc3:	mov    r8d,0x79
  411cc9:	call   0x41d6b0
  411cce:	jmp    0x411c4b
  411cd3:	mov    rdi,QWORD PTR [rbx+0x78]
  411cd7:	mov    esi,DWORD PTR [rbx+0xb4]
  411cdd:	jmp    0x411ce4
  411cdf:	nop
  411ce0:	add    rdi,0x68
  411ce4:	mov    rdx,rdi
  411ce7:	mov    rcx,rbx
  411cea:	sub    esi,0x1
  411ced:	call   0x4084e0
  411cf2:	test   esi,esi
  411cf4:	jg     0x411ce0
  411cf6:	jmp    0x411c58
  411cfb:	mov    rcx,QWORD PTR [rip+0x16466]        # 0x428168
  411d02:	call   0x408a70
  411d07:	nop
  411d08:	nop    DWORD PTR [rax+rax*1+0x0]
  411d10:	push   r13
  411d12:	push   r12
  411d14:	push   rbp
  411d15:	push   rdi
  411d16:	push   rsi
  411d17:	push   rbx
  411d18:	sub    rsp,0x28
  411d1c:	mov    rbp,rcx
  411d1f:	mov    ecx,0xa
  411d24:	mov    rsi,rdx
  411d27:	call   0x40a440
  411d2c:	mov    rcx,QWORD PTR [rbp+0x28]
  411d30:	mov    rdi,rax
  411d33:	call   0x422468
  411d38:	mov    r13,rax
  411d3b:	mov    eax,0x3f3c
  411d40:	mov    WORD PTR [rdi],ax
  411d43:	movabs rax,0x6d6172676f7270
  411d4d:	mov    r12d,r13d
  411d50:	mov    QWORD PTR [rdi+0x2],rax
  411d54:	mov    r10,QWORD PTR [rip+0x56e85]        # 0x468be0
  411d5b:	lea    rbx,[rsi+0x1]
  411d5f:	test   r10,r10
  411d62:	je     0x411dd8
  411d64:	movzx  eax,BYTE PTR [rsi+0x1]
  411d68:	cmp    BYTE PTR [r10+rax*1],0x0
  411d6d:	je     0x411d7f
  411d6f:	nop
  411d70:	add    rbx,0x1
  411d74:	movzx  r9d,BYTE PTR [rbx]
  411d78:	cmp    BYTE PTR [r10+r9*1],0x0
  411d7d:	jne    0x411d70
  411d7f:	mov    rdx,QWORD PTR [rbp+0x28]
  411d83:	mov    r8d,r12d
  411d86:	mov    rcx,rbx
  411d89:	call   0x410e00
  411d8e:	test   eax,eax
  411d90:	jne    0x411dad
  411d92:	lea    rsi,[rbx+r13*1]
  411d96:	movzx  eax,BYTE PTR [rsi]
  411d99:	cmp    al,0x7f
  411d9b:	ja     0x411dad
  411d9d:	lea    rdx,[rip+0x1f05c]        # 0x430e00
  411da4:	test   DWORD PTR [rdx+rax*4],0x1000c01
  411dab:	jne    0x411dea
  411dad:	mov    rdx,rdi
  411db0:	mov    rcx,rbx
  411db3:	call   0x422440
  411db8:	test   rax,rax
  411dbb:	mov    rsi,rax
  411dbe:	jne    0x411d54
  411dc0:	mov    rcx,rdi
  411dc3:	call   0x422528
  411dc8:	mov    rax,rsi
  411dcb:	add    rsp,0x28
  411dcf:	pop    rbx
  411dd0:	pop    rsi
  411dd1:	pop    rdi
  411dd2:	pop    rbp
  411dd3:	pop    r12
  411dd5:	pop    r13
  411dd7:	ret    
  411dd8:	mov    ecx,0xc
  411ddd:	call   0x409f50
  411de2:	mov    r10,rax
  411de5:	jmp    0x411d64
  411dea:	mov    rcx,rdi
  411ded:	call   0x422528
  411df2:	jmp    0x411dfc
  411df4:	add    rsi,0x1
  411df8:	cmp    al,0x3e
  411dfa:	je     0x411dc8
  411dfc:	movzx  eax,BYTE PTR [rsi]
  411dff:	test   al,al
  411e01:	jne    0x411df4
  411e03:	xor    esi,esi
  411e05:	mov    rax,rsi
  411e08:	add    rsp,0x28
  411e0c:	pop    rbx
  411e0d:	pop    rsi
  411e0e:	pop    rdi
  411e0f:	pop    rbp
  411e10:	pop    r12
  411e12:	pop    r13
  411e14:	ret    
  411e15:	nop
  411e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e20:	push   r14
  411e22:	push   r13
  411e24:	push   r12
  411e26:	push   rbp
  411e27:	push   rdi
  411e28:	push   rsi
  411e29:	push   rbx
  411e2a:	sub    rsp,0x20
  411e2e:	test   rdx,rdx
  411e31:	mov    rbp,rcx
  411e34:	mov    rbx,rdx
  411e37:	je     0x411eb0
  411e39:	mov    rax,QWORD PTR [rip+0x56da0]        # 0x468be0
  411e40:	test   rax,rax
  411e43:	je     0x411f72
  411e49:	movzx  ecx,BYTE PTR [rbx]
  411e4c:	cmp    BYTE PTR [rax+rcx*1],0x0
  411e50:	mov    rdx,rcx
  411e53:	je     0x411e67
  411e55:	add    rbx,0x1
  411e59:	movzx  r8d,BYTE PTR [rbx]
  411e5d:	cmp    BYTE PTR [rax+r8*1],0x0
  411e62:	mov    rdx,r8
  411e65:	jne    0x411e55
  411e67:	test   dl,dl
  411e69:	je     0x411ea1
  411e6b:	xor    esi,esi
  411e6d:	mov    r14d,0x1
  411e73:	lea    rdi,[rip+0x1b5c6]        # 0x42d440
  411e7a:	xor    r12d,r12d
  411e7d:	mov    r13,QWORD PTR [rdi]
  411e80:	mov    rdx,QWORD PTR [rdi+0x10]
  411e84:	mov    rcx,rbx
  411e87:	mov    r8d,r13d
  411e8a:	call   0x410e00
  411e8f:	test   eax,eax
  411e91:	je     0x411ed0
  411e93:	add    r12d,0x1
  411e97:	add    rdi,0x18
  411e9b:	cmp    r12d,0x5
  411e9f:	jne    0x411e7d
  411ea1:	add    rsp,0x20
  411ea5:	pop    rbx
  411ea6:	pop    rsi
  411ea7:	pop    rdi
  411ea8:	pop    rbp
  411ea9:	pop    r12
  411eab:	pop    r13
  411ead:	pop    r14
  411eaf:	ret    
  411eb0:	lea    rcx,[rip+0x1b410]        # 0x42d2c7
  411eb7:	call   0x422500
  411ebc:	test   rax,rax
  411ebf:	mov    rbx,rax
  411ec2:	jne    0x411e39
  411ec8:	jmp    0x411ea1
  411eca:	nop    WORD PTR [rax+rax*1+0x0]
  411ed0:	add    rbx,r13
  411ed3:	movzx  r8d,BYTE PTR [rbx]
  411ed7:	cmp    r8b,0x7f
  411edb:	ja     0x411ea1
  411edd:	lea    rdx,[rip+0x1ef1c]        # 0x430e00
  411ee4:	movzx  eax,r8b
  411ee8:	test   DWORD PTR [rdx+rax*4],0xc13
  411eef:	je     0x411ea1
  411ef1:	mov    eax,r14d
  411ef4:	mov    ecx,r12d
  411ef7:	shl    eax,cl
  411ef9:	or     esi,eax
  411efb:	mov    rax,QWORD PTR [rip+0x56cde]        # 0x468be0
  411f02:	test   rax,rax
  411f05:	je     0x411fd2
  411f0b:	mov    edx,r8d
  411f0e:	cmp    BYTE PTR [rax+r8*1],0x0
  411f13:	je     0x411f25
  411f15:	add    rbx,0x1
  411f19:	movzx  ecx,BYTE PTR [rbx]
  411f1c:	cmp    BYTE PTR [rax+rcx*1],0x0
  411f20:	mov    rdx,rcx
  411f23:	jne    0x411f15
  411f25:	test   dl,dl
  411f27:	je     0x411f81
  411f29:	cmp    dl,0x2c
  411f2c:	jne    0x411e73
  411f32:	mov    rax,QWORD PTR [rip+0x56ca7]        # 0x468be0
  411f39:	lea    rdi,[rbx+0x1]
  411f3d:	test   rax,rax
  411f40:	je     0x411fe8
  411f46:	movzx  edx,BYTE PTR [rbx+0x1]
  411f4a:	mov    rbx,rdi
  411f4d:	cmp    BYTE PTR [rax+rdx*1],0x0
  411f51:	je     0x411e73
  411f57:	nop    WORD PTR [rax+rax*1+0x0]
  411f60:	add    rbx,0x1
  411f64:	movzx  edx,BYTE PTR [rbx]
  411f67:	cmp    BYTE PTR [rax+rdx*1],0x0
  411f6b:	jne    0x411f60
  411f6d:	jmp    0x411e73
  411f72:	mov    ecx,0xc
  411f77:	call   0x409f50
  411f7c:	jmp    0x411e49
  411f81:	mov    eax,esi
  411f83:	and    eax,0x3
  411f86:	cmp    eax,0x3
  411f89:	je     0x411ea1
  411f8f:	mov    eax,esi
  411f91:	and    eax,0xc
  411f94:	cmp    eax,0xc
  411f97:	je     0x411ea1
  411f9d:	lea    rax,[rip+0x1b49c]        # 0x42d440
  411fa4:	jmp    0x411fbf
  411fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411fb0:	and    DWORD PTR [rbp+0x0],edx
  411fb3:	shr    esi,1
  411fb5:	je     0x411ea1
  411fbb:	add    rax,0x18
  411fbf:	test   sil,0x1
  411fc3:	je     0x411fb3
  411fc5:	mov    edx,DWORD PTR [rax+0x8]
  411fc8:	test   dl,0x1
  411fcb:	jne    0x411fb0
  411fcd:	or     DWORD PTR [rbp+0x0],edx
  411fd0:	jmp    0x411fb3
  411fd2:	mov    ecx,0xc
  411fd7:	call   0x409f50
  411fdc:	movzx  edx,BYTE PTR [rbx]
  411fdf:	movzx  r8d,dl
  411fe3:	jmp    0x411f0e
  411fe8:	mov    ecx,0xc
  411fed:	call   0x409f50
  411ff2:	jmp    0x411f46
  411ff7:	nop    WORD PTR [rax+rax*1+0x0]
  412000:	push   r12
  412002:	push   rbp
  412003:	push   rdi
  412004:	push   rsi
  412005:	push   rbx
  412006:	sub    rsp,0x30
  41200a:	mov    rax,QWORD PTR [rip+0x56bcf]        # 0x468be0
  412011:	mov    rbp,rcx
  412014:	lea    rbx,[rdx+0x1]
  412018:	test   rax,rax
  41201b:	je     0x41209e
  412021:	movzx  edx,BYTE PTR [rdx+0x1]
  412025:	cmp    BYTE PTR [rax+rdx*1],0x0
  412029:	je     0x41203d
  41202b:	nop    DWORD PTR [rax+rax*1+0x0]
  412030:	add    rbx,0x1
  412034:	movzx  edx,BYTE PTR [rbx]
  412037:	cmp    BYTE PTR [rax+rdx*1],0x0
  41203b:	jne    0x412030
  41203d:	mov    edx,0x3e
  412042:	mov    rcx,rbx
  412045:	call   0x422490
  41204a:	test   rax,rax
  41204d:	mov    rsi,rax
  412050:	je     0x412090
  412052:	mov    r12d,eax
  412055:	add    rsi,0x1
  412059:	sub    r12d,ebx
  41205c:	lea    rcx,[r12+0x1]
  412061:	call   0x40a440
  412066:	mov    r8,r12
  412069:	mov    rdx,rbx
  41206c:	mov    rcx,rax
  41206f:	mov    rdi,rax
  412072:	call   0x4224d8
  412077:	lea    rcx,[rbp+0x10]
  41207b:	mov    rdx,rdi
  41207e:	mov    BYTE PTR [rdi+r12*1],0x0
  412083:	call   0x411e20
  412088:	mov    rcx,rdi
  41208b:	call   0x422528
  412090:	mov    rax,rsi
  412093:	add    rsp,0x30
  412097:	pop    rbx
  412098:	pop    rsi
  412099:	pop    rdi
  41209a:	pop    rbp
  41209b:	pop    r12
  41209d:	ret    
  41209e:	mov    ecx,0xc
  4120a3:	mov    QWORD PTR [rsp+0x28],rdx
  4120a8:	call   0x409f50
  4120ad:	mov    rdx,QWORD PTR [rsp+0x28]
  4120b2:	jmp    0x412021
  4120b7:	nop    WORD PTR [rax+rax*1+0x0]
  4120c0:	push   rbp
  4120c1:	push   rdi
  4120c2:	push   rsi
  4120c3:	push   rbx
  4120c4:	sub    rsp,0x28
  4120c8:	test   BYTE PTR [rdx+0x12],0x1
  4120cc:	mov    rbx,rcx
  4120cf:	mov    rsi,r8
  4120d2:	mov    ebp,r9d
  4120d5:	je     0x412110
  4120d7:	mov    rax,QWORD PTR [rdx+0x18]
  4120db:	test   rax,rax
  4120de:	je     0x412110
  4120e0:	movzx  edi,BYTE PTR [rax]
  4120e3:	test   dil,dil
  4120e6:	je     0x412110
  4120e8:	lea    eax,[rdi-0x43]
  4120eb:	cmp    al,0x33
  4120ed:	ja     0x412230
  4120f3:	lea    rdx,[rip+0x1b1de]        # 0x42d2d8
  4120fa:	movzx  eax,al
  4120fd:	movsxd rax,DWORD PTR [rdx+rax*4]
  412101:	add    rdx,rax
  412104:	jmp    rdx
  412106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412110:	lea    rcx,[rbx+0x10]
  412114:	xor    edx,edx
  412116:	call   0x411e20
  41211b:	test   BYTE PTR [rbx+0x11],0x10
  41211f:	jne    0x412160
  412121:	mov    rdx,QWORD PTR [rbx+0x50]
  412125:	mov    r9,QWORD PTR [rbx+0x60]
  412129:	mov    rcx,rsi
  41212c:	mov    r8,QWORD PTR [rbx+0x40]
  412130:	call   0x4087d0
  412135:	mov    rcx,rsi
  412138:	call   0x422560
  41213d:	mov    rcx,rsi
  412140:	call   0x422568
  412145:	test   eax,eax
  412147:	jne    0x412284
  41214d:	test   bpl,bpl
  412150:	jne    0x4122b0
  412156:	add    rsp,0x28
  41215a:	pop    rbx
  41215b:	pop    rsi
  41215c:	pop    rdi
  41215d:	pop    rbp
  41215e:	ret    
  41215f:	nop
  412160:	mov    rcx,QWORD PTR [rbx+0x40]
  412164:	test   rcx,rcx
  412167:	je     0x412260
  41216d:	mov    rdx,rsi
  412170:	call   0x422538
  412175:	cmp    DWORD PTR [rbx],0x21fff
  41217b:	jle    0x4121f2
  41217d:	cmp    QWORD PTR [rbx+0xe0],0x0
  412185:	je     0x4121f2
  412187:	mov    rdx,rsi
  41218a:	mov    ecx,0xa
  41218f:	call   0x422540
  412194:	mov    rcx,QWORD PTR [rbx+0xe0]
  41219b:	mov    rdx,rsi
  41219e:	call   0x422538
  4121a3:	jmp    0x412135
  4121a5:	mov    rcx,QWORD PTR [rcx+0x40]
  4121a9:	test   rcx,rcx
  4121ac:	je     0x4121b6
  4121ae:	mov    rdx,r8
  4121b1:	call   0x422538
  4121b6:	mov    rcx,QWORD PTR [rbx+0x48]
  4121ba:	test   rcx,rcx
  4121bd:	je     0x4121c7
  4121bf:	mov    rdx,rsi
  4121c2:	call   0x422538
  4121c7:	mov    rdx,rsi
  4121ca:	mov    ecx,0xa
  4121cf:	call   0x422540
  4121d4:	mov    rdx,QWORD PTR [rip+0x15f7d]        # 0x428158
  4121db:	lea    r8,[rip+0x1b1ee]        # 0x42d3d0
  4121e2:	mov    rcx,rsi
  4121e5:	call   0x408600
  4121ea:	cmp    DWORD PTR [rbx],0x21fff
  4121f0:	jg     0x41217d
  4121f2:	cmp    QWORD PTR [rbx+0x80],0x0
  4121fa:	je     0x412135
  412200:	mov    rdx,rsi
  412203:	mov    ecx,0xa
  412208:	call   0x422540
  41220d:	mov    r8,QWORD PTR [rbx+0x80]
  412214:	mov    rdx,QWORD PTR [rip+0x16195]        # 0x4283b0
  41221b:	mov    rcx,rsi
  41221e:	call   0x408600
  412223:	jmp    0x412135
  412228:	nop    DWORD PTR [rax+rax*1+0x0]
  412230:	mov    rbx,QWORD PTR [rip+0x15f99]        # 0x4281d0
  412237:	call   QWORD PTR [rip+0x8a1e7]        # 0x49c424
  41223d:	lea    rcx,[rax+0x60]
  412241:	movsx  r8d,dil
  412245:	mov    rdx,rbx
  412248:	call   0x408600
  41224d:	mov    ecx,0x1
  412252:	call   0x408a40
  412257:	nop    WORD PTR [rax+rax*1+0x0]
  412260:	mov    rcx,QWORD PTR [rbx+0x50]
  412264:	test   rcx,rcx
  412267:	jne    0x41216d
  41226d:	mov    rdx,QWORD PTR [rbx+0x60]
  412271:	xor    r9d,r9d
  412274:	xor    r8d,r8d
  412277:	mov    rcx,rsi
  41227a:	call   0x4087d0
  41227f:	jmp    0x412175
  412284:	call   QWORD PTR [rip+0x8a19a]        # 0x49c424
  41228a:	add    rax,0x30
  41228e:	mov    r8,QWORD PTR [rip+0x1602b]        # 0x4282c0
  412295:	mov    rcx,QWORD PTR [rbx+0x28]
  412299:	cmp    rsi,rax
  41229c:	cmove  r8,QWORD PTR [rip+0x16014]        # 0x4282b8
  4122a4:	mov    rdx,QWORD PTR [rip+0x1601d]        # 0x4282c8
  4122ab:	call   0x408fc0
  4122b0:	xor    ecx,ecx
  4122b2:	call   0x408a40
  4122b7:	nop
  4122b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4122c0:	push   rsi
  4122c1:	push   rbx
  4122c2:	sub    rsp,0x28
  4122c6:	cmp    BYTE PTR [rip+0x567a7],0x0        # 0x468a74
  4122cd:	mov    rbx,rcx
  4122d0:	mov    rsi,rdx
  4122d3:	je     0x4122f0
  4122d5:	call   QWORD PTR [rip+0x8a149]        # 0x49c424
  4122db:	cmp    rbx,0xf
  4122df:	lea    r8,[rax+0x60]
  4122e3:	ja     0x412300
  4122e5:	add    rsp,0x28
  4122e9:	pop    rbx
  4122ea:	pop    rsi
  4122eb:	ret    
  4122ec:	nop    DWORD PTR [rax+0x0]
  4122f0:	call   QWORD PTR [rip+0x8a12e]        # 0x49c424
  4122f6:	cmp    rbx,0xf
  4122fa:	lea    r8,[rax+0x30]
  4122fe:	jbe    0x4122e5
  412300:	mov    r9d,0x1
  412306:	mov    rdx,rsi
  412309:	mov    rcx,rbx
  41230c:	add    rsp,0x28
  412310:	pop    rbx
  412311:	pop    rsi
  412312:	jmp    0x4120c0
  412317:	nop    WORD PTR [rax+rax*1+0x0]
  412320:	add    rcx,0x1
  412324:	add    rdx,0x1
  412328:	movzx  r9d,BYTE PTR [rcx-0x1]
  41232d:	movzx  r8d,BYTE PTR [rdx-0x1]
  412332:	cmp    r9b,r8b
  412335:	je     0x412351
  412337:	lea    r10,[rip+0x15982]        # 0x427cc0
  41233e:	movzx  eax,r9b
  412342:	movzx  eax,BYTE PTR [r10+rax*1]
  412347:	movzx  r8d,BYTE PTR [r10+r8*1]
  41234c:	sub    eax,r8d
  41234f:	jne    0x412358
  412351:	test   r9b,r9b
  412354:	jne    0x412320
  412356:	xor    eax,eax
  412358:	repz ret 
  41235a:	nop    WORD PTR [rax+rax*1+0x0]
  412360:	test   r8d,r8d
  412363:	jne    0x412381
  412365:	lea    rdx,[rip+0x15a53]        # 0x427dbf
  41236c:	mov    eax,0xff
  412371:	mov    BYTE PTR [rdx],al
  412373:	sub    eax,0x1
  412376:	sub    rdx,0x1
  41237a:	cmp    eax,0xffffffff
  41237d:	jne    0x412371
  41237f:	repz ret 
  412381:	lea    r9,[rip+0x15938]        # 0x427cc0
  412388:	movzx  eax,dl
  41238b:	movzx  edx,cl
  41238e:	xchg   ax,ax
  412390:	mov    ecx,edx
  412392:	add    edx,0x1
  412395:	mov    BYTE PTR [r9+rcx*1],al
  412399:	add    eax,0x1
  41239c:	cmp    eax,0xff
  4123a1:	ja     0x4123b4
  4123a3:	cmp    edx,0xff
  4123a9:	ja     0x4123b4
  4123ab:	sub    r8d,0x1
  4123af:	test   r8d,r8d
  4123b2:	jg     0x412390
  4123b4:	repz ret 
  4123b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123c0:	test   rcx,rcx
  4123c3:	je     0x4123ef
  4123c5:	movzx  eax,BYTE PTR [rcx]
  4123c8:	test   al,al
  4123ca:	je     0x4123ef
  4123cc:	lea    rdx,[rip+0x158ed]        # 0x427cc0
  4123d3:	mov    r8d,eax
  4123d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123e0:	add    rcx,0x1
  4123e4:	mov    BYTE PTR [rdx+rax*1],r8b
  4123e8:	movzx  eax,BYTE PTR [rcx]
  4123eb:	test   al,al
  4123ed:	jne    0x4123e0
  4123ef:	repz ret 
  4123f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4123f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412400:	lea    r8,[rip+0x158b9]        # 0x427cc0
  412407:	nop    WORD PTR [rax+rax*1+0x0]
  412410:	movzx  eax,BYTE PTR [rdx]
  412413:	add    rcx,0x1
  412417:	add    rdx,0x1
  41241b:	movzx  eax,BYTE PTR [r8+rax*1]
  412420:	mov    BYTE PTR [rcx-0x1],al
  412423:	cmp    BYTE PTR [rdx-0x1],0x0
  412427:	jne    0x412410
  412429:	ret    
  41242a:	nop    WORD PTR [rax+rax*1+0x0]
  412430:	push   rbp
  412431:	push   rdi
  412432:	push   rsi
  412433:	push   rbx
  412434:	sub    rsp,0x68
  412438:	xor    eax,eax
  41243a:	lea    rdi,[r9+0x8]
  41243e:	mov    QWORD PTR [r9],0x0
  412445:	mov    QWORD PTR [r9+0x28],0x0
  41244d:	mov    rbx,r9
  412450:	mov    rbp,rcx
  412453:	and    rdi,0xfffffffffffffff8
  412457:	sub    r9,rdi
  41245a:	add    r9d,0x30
  41245e:	shr    r9d,0x3
  412462:	mov    ecx,r9d
  412465:	rep stos QWORD PTR es:[rdi],rax
  412468:	mov    DWORD PTR [rbx+0x24],edx
  41246b:	and    edx,0x2
  41246e:	mov    DWORD PTR [rbx+0x18],0xffffffff
  412475:	mov    DWORD PTR [rbx+0x28],r8d
  412479:	mov    ax,0x8000
  41247d:	je     0x4124a5
  41247f:	mov    eax,r8d
  412482:	and    eax,0x3
  412485:	cmp    eax,0x1
  412488:	sete   dl
  41248b:	movzx  eax,dl
  41248e:	movzx  edx,dl
  412491:	add    edx,edx
  412493:	and    r8d,0x1
  412497:	lea    eax,[rax+rax*1+0x8000]
  41249e:	jne    0x4124a5
  4124a0:	mov    eax,edx
  4124a2:	or     ah,0x84
  4124a5:	mov    edx,eax
  4124a7:	mov    rcx,rbp
  4124aa:	call   0x4223c8
  4124af:	test   eax,eax
  4124b1:	mov    DWORD PTR [rbx+0x18],eax
  4124b4:	js     0x412610
  4124ba:	lea    rdx,[rsp+0x20]
  4124bf:	mov    ecx,eax
  4124c1:	call   QWORD PTR [rip+0x89fd5]        # 0x49c49c
  4124c7:	test   eax,eax
  4124c9:	jne    0x4125f0
  4124cf:	movzx  eax,WORD PTR [rsp+0x26]
  4124d4:	and    ax,0xf000
  4124d8:	cmp    ax,0x8000
  4124dc:	je     0x412510
  4124de:	call   QWORD PTR [rip+0x89f90]        # 0x49c474
  4124e4:	mov    DWORD PTR [rax],0x16
  4124ea:	mov    ecx,DWORD PTR [rbx+0x18]
  4124ed:	mov    DWORD PTR [rbx+0x20],0x16
  4124f4:	call   0x4223b8
  4124f9:	mov    edx,DWORD PTR [rbx+0x20]
  4124fc:	test   edx,edx
  4124fe:	mov    rax,0xffffffffffffffff
  412505:	je     0x412530
  412507:	add    rsp,0x68
  41250b:	pop    rbx
  41250c:	pop    rsi
  41250d:	pop    rdi
  41250e:	pop    rbp
  41250f:	ret    
  412510:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  412514:	mov    rax,QWORD PTR [rsp+0x38]
  412519:	mov    QWORD PTR [rbx+0x8],rax
  41251d:	jne    0x4124f9
  41251f:	call   QWORD PTR [rip+0x89f4f]        # 0x49c474
  412525:	mov    edx,DWORD PTR [rax]
  412527:	mov    DWORD PTR [rbx+0x20],edx
  41252a:	jmp    0x4124fc
  41252c:	nop    DWORD PTR [rax+0x0]
  412530:	mov    rax,QWORD PTR [rbx+0x8]
  412534:	lea    rcx,[rax+0x1]
  412538:	call   0x40a440
  41253d:	test   rax,rax
  412540:	mov    rdi,rax
  412543:	mov    QWORD PTR [rbx],rax
  412546:	je     0x412650
  41254c:	mov    rsi,QWORD PTR [rbx+0x8]
  412550:	test   rsi,rsi
  412553:	jne    0x41256f
  412555:	jmp    0x412630
  41255a:	nop    WORD PTR [rax+rax*1+0x0]
  412560:	movsxd r10,eax
  412563:	add    rdi,r10
  412566:	sub    rsi,r10
  412569:	je     0x412630
  41256f:	mov    ecx,DWORD PTR [rbx+0x18]
  412572:	mov    r8d,esi
  412575:	mov    rdx,rdi
  412578:	call   0x4223d0
  41257d:	test   eax,eax
  41257f:	jg     0x412560
  412581:	mov    rsi,QWORD PTR [rip+0x89eec]        # 0x49c474
  412588:	call   rsi
  41258a:	mov    eax,DWORD PTR [rax]
  41258c:	lea    rdx,[rip+0x1ae15]        # 0x42d3a8
  412593:	lea    rcx,[rip+0x1ae13]        # 0x42d3ad
  41259a:	mov    r8,rbp
  41259d:	mov    DWORD PTR [rbx+0x20],eax
  4125a0:	call   0x408f50
  4125a5:	mov    rcx,QWORD PTR [rbx]
  4125a8:	call   0x422528
  4125ad:	mov    eax,DWORD PTR [rbx+0x20]
  4125b0:	test   eax,eax
  4125b2:	je     0x41263a
  4125b8:	mov    ecx,DWORD PTR [rbx+0x18]
  4125bb:	cmp    ecx,0xffffffff
  4125be:	je     0x4125cc
  4125c0:	call   0x4223b8
  4125c5:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4125cc:	call   rsi
  4125ce:	mov    edx,DWORD PTR [rbx+0x20]
  4125d1:	mov    DWORD PTR [rax],edx
  4125d3:	mov    rax,0xffffffffffffffff
  4125da:	mov    QWORD PTR [rbx],0xffffffffffffffff
  4125e1:	add    rsp,0x68
  4125e5:	pop    rbx
  4125e6:	pop    rsi
  4125e7:	pop    rdi
  4125e8:	pop    rbp
  4125e9:	ret    
  4125ea:	nop    WORD PTR [rax+rax*1+0x0]
  4125f0:	call   QWORD PTR [rip+0x89e7e]        # 0x49c474
  4125f6:	mov    eax,DWORD PTR [rax]
  4125f8:	mov    ecx,DWORD PTR [rbx+0x18]
  4125fb:	mov    DWORD PTR [rbx+0x20],eax
  4125fe:	call   0x4223b8
  412603:	jmp    0x4124f9
  412608:	nop    DWORD PTR [rax+rax*1+0x0]
  412610:	call   QWORD PTR [rip+0x89e5e]        # 0x49c474
  412616:	mov    edx,DWORD PTR [rax]
  412618:	mov    DWORD PTR [rbx+0x18],0xffffffff
  41261f:	mov    DWORD PTR [rbx+0x20],edx
  412622:	jmp    0x4124fc
  412627:	nop    WORD PTR [rax+rax*1+0x0]
  412630:	mov    BYTE PTR [rdi],0x0
  412633:	mov    DWORD PTR [rbx+0x20],0x0
  41263a:	mov    rax,QWORD PTR [rbx]
  41263d:	add    rsp,0x68
  412641:	pop    rbx
  412642:	pop    rsi
  412643:	pop    rdi
  412644:	pop    rbp
  412645:	ret    
  412646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412650:	mov    DWORD PTR [rbx+0x20],0xc
  412657:	mov    rsi,QWORD PTR [rip+0x89e16]        # 0x49c474
  41265e:	jmp    0x4125b8
  412663:	nop    DWORD PTR [rax]
  412666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412670:	push   rsi
  412671:	push   rbx
  412672:	sub    rsp,0x28
  412676:	mov    rsi,QWORD PTR [rip+0x89df7]        # 0x49c474
  41267d:	mov    rbx,rcx
  412680:	call   rsi
  412682:	mov    DWORD PTR [rax],0x0
  412688:	test   BYTE PTR [rbx+0x24],0x2
  41268c:	je     0x412699
  41268e:	mov    eax,DWORD PTR [rbx+0x28]
  412691:	and    eax,0x3
  412694:	cmp    eax,0x1
  412697:	je     0x4126d0
  412699:	mov    rcx,QWORD PTR [rbx]
  41269c:	call   0x422528
  4126a1:	call   rsi
  4126a3:	mov    ecx,DWORD PTR [rbx+0x18]
  4126a6:	mov    eax,DWORD PTR [rax]
  4126a8:	cmp    ecx,0xffffffff
  4126ab:	mov    DWORD PTR [rbx+0x20],eax
  4126ae:	je     0x4126bf
  4126b0:	call   0x4223b8
  4126b5:	mov    eax,DWORD PTR [rbx+0x20]
  4126b8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  4126bf:	add    rsp,0x28
  4126c3:	pop    rbx
  4126c4:	pop    rsi
  4126c5:	ret    
  4126c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126d0:	mov    ecx,DWORD PTR [rbx+0x18]
  4126d3:	xor    r8d,r8d
  4126d6:	xor    edx,edx
  4126d8:	call   0x41d990
  4126dd:	test   rax,rax
  4126e0:	js     0x412699
  4126e2:	mov    ecx,DWORD PTR [rbx+0x18]
  4126e5:	mov    r8d,DWORD PTR [rbx+0x8]
  4126e9:	mov    rdx,QWORD PTR [rbx]
  4126ec:	call   0x4223e8
  4126f1:	jmp    0x412699
  4126f3:	nop    DWORD PTR [rax]
  4126f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412700:	push   r15
  412702:	push   r14
  412704:	push   r13
  412706:	push   r12
  412708:	push   rbp
  412709:	push   rdi
  41270a:	push   rsi
  41270b:	push   rbx
  41270c:	sub    rsp,0x158
  412713:	mov    r13,rcx
  412716:	mov    r14d,r8d
  412719:	mov    rcx,rdx
  41271c:	mov    eax,DWORD PTR [r13+0x10]
  412720:	mov    r8d,0x2
  412726:	mov    edx,0x3
  41272b:	mov    QWORD PTR [rsp+0xa0],0x0
  412737:	mov    QWORD PTR [rsp+0xa8],0x0
  412743:	mov    DWORD PTR [rsp+0xb0],0x2
  41274e:	mov    DWORD PTR [rsp+0xb4],0x0
  412759:	mov    DWORD PTR [rsp+0x34],eax
  41275d:	lea    rax,[rsp+0xe0]
  412765:	mov    r9,rax
  412768:	mov    QWORD PTR [rsp+0x38],rax
  41276d:	call   0x412430
  412772:	cmp    rax,0xffffffffffffffff
  412776:	mov    rbx,rax
  412779:	je     0x4128e6
  41277f:	mov    eax,DWORD PTR [r13+0x10]
  412783:	mov    esi,0x2
  412788:	mov    edx,eax
  41278a:	and    edx,0xfffffffb
  41278d:	test   r14d,r14d
  412790:	mov    DWORD PTR [r13+0x10],edx
  412794:	je     0x412c79
  41279a:	test   eax,0x80000
  41279f:	mov    eax,0x1
  4127a4:	cmove  esi,eax
  4127a7:	lea    rax,[rsp+0x110]
  4127af:	mov    QWORD PTR [rsp+0x48],rax
  4127b4:	lea    rax,[rsp+0x111]
  4127bc:	mov    QWORD PTR [rsp+0x50],rax
  4127c1:	lea    rax,[rsp+0xa0]
  4127c9:	mov    QWORD PTR [rsp+0x40],rax
  4127ce:	lea    rax,[rsp+0x90]
  4127d6:	mov    QWORD PTR [rsp+0x58],rax
  4127db:	lea    rax,[rsp+0xc0]
  4127e3:	mov    QWORD PTR [rsp+0x60],rax
  4127e8:	lea    rax,[rsp+0x9c]
  4127f0:	mov    QWORD PTR [rsp+0x68],rax
  4127f5:	mov    rax,QWORD PTR [rip+0x563e4]        # 0x468be0
  4127fc:	mov    DWORD PTR [rsp+0xb0],esi
  412803:	test   rax,rax
  412806:	jne    0x412814
  412808:	jmp    0x412cbd
  41280d:	nop    DWORD PTR [rax]
  412810:	add    rbx,0x1
  412814:	movzx  ecx,BYTE PTR [rbx]
  412817:	cmp    BYTE PTR [rax+rcx*1],0x0
  41281b:	mov    rdx,rcx
  41281e:	jne    0x412810
  412820:	cmp    cl,0x7f
  412823:	ja     0x412900
  412829:	lea    rdi,[rip+0x1e5d0]        # 0x430e00
  412830:	movzx  eax,cl
  412833:	test   DWORD PTR [rdi+rax*4],0x180040
  41283a:	je     0x412900
  412840:	lea    rbp,[rbx+0x1]
  412844:	mov    edx,0xa
  412849:	mov    rcx,rbp
  41284c:	call   0x422490
  412851:	test   rax,rax
  412854:	mov    r12,rax
  412857:	je     0x412ccc
  41285d:	mov    rcx,QWORD PTR [rip+0x563fc]        # 0x468c60
  412864:	test   rcx,rcx
  412867:	je     0x412ed6
  41286d:	movzx  eax,BYTE PTR [rbx+0x1]
  412871:	cmp    BYTE PTR [rcx+rax*1],0x0
  412875:	je     0x41288e
  412877:	nop    WORD PTR [rax+rax*1+0x0]
  412880:	add    rbp,0x1
  412884:	movzx  eax,BYTE PTR [rbp+0x0]
  412888:	cmp    BYTE PTR [rcx+rax*1],0x0
  41288c:	jne    0x412880
  41288e:	mov    r8,QWORD PTR [rip+0x5634b]        # 0x468be0
  412895:	test   r8,r8
  412898:	jne    0x4128a4
  41289a:	jmp    0x412ee5
  41289f:	nop
  4128a0:	add    rbp,0x1
  4128a4:	movzx  eax,BYTE PTR [rbp+0x0]
  4128a8:	cmp    BYTE PTR [r8+rax*1],0x0
  4128ad:	jne    0x4128a0
  4128af:	cmp    rbp,r12
  4128b2:	ja     0x412c4c
  4128b8:	cmp    al,0x3a
  4128ba:	je     0x412c19
  4128c0:	cmp    al,0x3d
  4128c2:	je     0x412c19
  4128c8:	movzx  eax,BYTE PTR [rbp-0x1]
  4128cc:	cmp    al,0x7f
  4128ce:	jbe    0x412ca6
  4128d4:	mov    rcx,QWORD PTR [rsp+0x38]
  4128d9:	call   0x412670
  4128de:	mov    eax,DWORD PTR [rsp+0x34]
  4128e2:	mov    DWORD PTR [r13+0x10],eax
  4128e6:	add    rsp,0x158
  4128ed:	pop    rbx
  4128ee:	pop    rsi
  4128ef:	pop    rdi
  4128f0:	pop    rbp
  4128f1:	pop    r12
  4128f3:	pop    r13
  4128f5:	pop    r14
  4128f7:	pop    r15
  4128f9:	ret    
  4128fa:	nop    WORD PTR [rax+rax*1+0x0]
  412900:	cmp    dl,0x3c
  412903:	je     0x4129d0
  412909:	cmp    dl,0x5b
  41290c:	je     0x412930
  41290e:	cmp    dl,0x23
  412911:	jne    0x4128d4
  412913:	lea    rcx,[rbx+0x1]
  412917:	mov    edx,0xa
  41291c:	call   0x422490
  412921:	mov    rbx,rax
  412924:	test   rbx,rbx
  412927:	jne    0x4127f5
  41292d:	jmp    0x4128d4
  41292f:	nop
  412930:	mov    rbp,QWORD PTR [r13+0x30]
  412934:	mov    rcx,rbp
  412937:	call   0x422468
  41293c:	lea    rcx,[rbx+0x1]
  412940:	mov    r8,rax
  412943:	mov    rdx,rbp
  412946:	mov    rdi,rax
  412949:	call   0x422460
  41294e:	test   eax,eax
  412950:	je     0x412c84
  412956:	cmp    rdi,0x10
  41295a:	ja     0x4128d4
  412960:	mov    rcx,QWORD PTR [rsp+0x50]
  412965:	mov    r8,rdi
  412968:	mov    rdx,rbp
  41296b:	mov    QWORD PTR [rsp+0x110],0x5b
  412977:	mov    QWORD PTR [rsp+0x118],0x0
  412983:	mov    QWORD PTR [rsp+0x120],0x0
  41298f:	call   0x4224d8
  412994:	mov    rdx,QWORD PTR [rsp+0x48]
  412999:	mov    rcx,rbx
  41299c:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  4129a4:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  4129ac:	call   0x422440
  4129b1:	test   rax,rax
  4129b4:	je     0x4128d4
  4129ba:	mov    edx,0xa
  4129bf:	mov    rcx,rax
  4129c2:	call   0x422490
  4129c7:	mov    rbx,rax
  4129ca:	jmp    0x412924
  4129cf:	nop
  4129d0:	movzx  eax,BYTE PTR [rbx+0x1]
  4129d4:	cmp    al,0x7f
  4129d6:	ja     0x412be0
  4129dc:	lea    rdi,[rip+0x1e41d]        # 0x430e00
  4129e3:	movzx  edx,al
  4129e6:	test   DWORD PTR [rdi+rdx*4],0x180040
  4129ed:	je     0x412be0
  4129f3:	mov    eax,DWORD PTR [rip+0x156d7]        # 0x4280d0
  4129f9:	mov    DWORD PTR [rsp+0x9c],eax
  412a00:	lea    rax,[rbx+0x1]
  412a04:	mov    QWORD PTR [rsp+0x70],rax
  412a09:	mov    rax,QWORD PTR [rip+0x56250]        # 0x468c60
  412a10:	test   rax,rax
  412a13:	je     0x412fa9
  412a19:	movzx  edx,BYTE PTR [rbx+0x1]
  412a1d:	mov    r15,QWORD PTR [rsp+0x70]
  412a22:	cmp    BYTE PTR [rax+rdx*1],0x0
  412a26:	je     0x412a3e
  412a28:	nop    DWORD PTR [rax+rax*1+0x0]
  412a30:	add    r15,0x1
  412a34:	movzx  edx,BYTE PTR [r15]
  412a38:	cmp    BYTE PTR [rax+rdx*1],0x0
  412a3c:	jne    0x412a30
  412a3e:	mov    DWORD PTR [rsp+0xc0],0x1
  412a49:	movzx  edx,BYTE PTR [r15]
  412a4d:	cmp    dl,0x20
  412a50:	je     0x412e46
  412a56:	jle    0x412d66
  412a5c:	cmp    dl,0x2f
  412a5f:	je     0x412e9e
  412a65:	cmp    dl,0x3e
  412a68:	mov    rbp,r15
  412a6b:	jne    0x412d6f
  412a71:	mov    BYTE PTR [r15],0x0
  412a75:	mov    rcx,QWORD PTR [rsp+0x70]
  412a7a:	lea    r12,[rbp+0x1]
  412a7e:	mov    eax,DWORD PTR [rsp+0x9c]
  412a85:	mov    DWORD PTR [rsp+0x80],eax
  412a8c:	call   0x422468
  412a91:	lea    rcx,[rax+0x4]
  412a95:	mov    rbx,rax
  412a98:	cmp    rcx,0x3f
  412a9c:	ja     0x412ef7
  412aa2:	mov    rax,QWORD PTR [rsp+0x48]
  412aa7:	mov    rdx,QWORD PTR [rsp+0x70]
  412aac:	mov    r8,rbx
  412aaf:	mov    BYTE PTR [rsp+0x110],0x3c
  412ab7:	mov    BYTE PTR [rsp+0x111],0x2f
  412abf:	lea    rcx,[rax+0x2]
  412ac3:	call   0x4224d8
  412ac8:	lea    rcx,[rbx+0x3]
  412acc:	mov    rdx,QWORD PTR [rsp+0x48]
  412ad1:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  412ad9:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  412ae1:	mov    BYTE PTR [rbp+0x1],0x20
  412ae5:	mov    QWORD PTR [rsp+0x78],rcx
  412aea:	mov    rcx,r12
  412aed:	call   0x422440
  412af2:	mov    rdx,rax
  412af5:	test   rdx,rdx
  412af8:	je     0x4128d4
  412afe:	mov    rbx,QWORD PTR [rsp+0x78]
  412b03:	add    rbx,rdx
  412b06:	cmp    DWORD PTR [rsp+0x80],0x1
  412b0e:	je     0x412b56
  412b10:	mov    r8,QWORD PTR [rip+0x560c9]        # 0x468be0
  412b17:	test   r8,r8
  412b1a:	je     0x4130bc
  412b20:	cmp    r12,rdx
  412b23:	jb     0x412b4b
  412b25:	mov    rcx,r12
  412b28:	mov    QWORD PTR [rsp+0x78],r8
  412b2d:	call   0x422468
  412b32:	lea    rdx,[r12+rax*1]
  412b36:	mov    r8,QWORD PTR [rsp+0x78]
  412b3b:	cmp    r12,rdx
  412b3e:	jb     0x412b4b
  412b40:	jmp    0x412b56
  412b42:	sub    rdx,0x1
  412b46:	cmp    r12,rdx
  412b49:	jae    0x412b56
  412b4b:	movzx  eax,BYTE PTR [rdx-0x1]
  412b4f:	cmp    BYTE PTR [r8+rax*1],0x0
  412b54:	jne    0x412b42
  412b56:	test   rbx,rbx
  412b59:	mov    BYTE PTR [rdx],0x0
  412b5c:	je     0x4128d4
  412b62:	mov    r8,r12
  412b65:	mov    edx,0x20
  412b6a:	mov    rcx,r15
  412b6d:	sub    r8,r15
  412b70:	call   0x4224c8
  412b75:	cmp    DWORD PTR [rsp+0xc0],0x1
  412b7d:	mov    eax,DWORD PTR [rsp+0x9c]
  412b84:	jne    0x412eb8
  412b8a:	test   eax,eax
  412b8c:	jne    0x412eb8
  412b92:	mov    BYTE PTR [rsp+0x92],0x0
  412b9a:	add    rbp,0x2
  412b9e:	lea    rax,[rbp-0x1]
  412ba2:	lea    r9,[r12+0x1]
  412ba7:	mov    QWORD PTR [rsp+0x78],rax
  412bac:	movzx  eax,BYTE PTR [r12]
  412bb1:	cmp    eax,0x25
  412bb4:	je     0x413060
  412bba:	cmp    eax,0x26
  412bbd:	je     0x412fd4
  412bc3:	test   eax,eax
  412bc5:	je     0x412fc7
  412bcb:	mov    r12,r9
  412bce:	mov    BYTE PTR [rbp-0x1],al
  412bd1:	add    rbp,0x1
  412bd5:	jmp    0x412b9e
  412bd7:	nop    WORD PTR [rax+rax*1+0x0]
  412be0:	cmp    al,0x2f
  412be2:	je     0x412d03
  412be8:	cmp    al,0x3f
  412bea:	je     0x412d8e
  412bf0:	cmp    al,0x21
  412bf2:	jne    0x4128d4
  412bf8:	lea    rdx,[rip+0x1a4f8]        # 0x42d0f7
  412bff:	mov    rcx,rbx
  412c02:	call   0x422440
  412c07:	test   rax,rax
  412c0a:	je     0x4128d4
  412c10:	lea    rbx,[rax+0x3]
  412c14:	jmp    0x412924
  412c19:	mov    rax,QWORD PTR [rip+0x55fc0]        # 0x468be0
  412c20:	lea    rdi,[rbp+0x1]
  412c24:	test   rax,rax
  412c27:	je     0x412fb8
  412c2d:	movzx  edx,BYTE PTR [rbp+0x1]
  412c31:	cmp    BYTE PTR [rax+rdx*1],0x0
  412c35:	jne    0x412ce0
  412c3b:	cmp    r12,rdi
  412c3e:	jb     0x412c4c
  412c40:	cmp    BYTE PTR [r12-0x1],0x5c
  412c46:	je     0x412d23
  412c4c:	lea    rdi,[r12+0x1]
  412c51:	mov    BYTE PTR [r12],0x0
  412c56:	mov    rdx,QWORD PTR [rsp+0x40]
  412c5b:	mov    r8,rbx
  412c5e:	mov    DWORD PTR [rsp+0x20],0x1
  412c66:	mov    r9d,r14d
  412c69:	mov    rcx,r13
  412c6c:	mov    rbx,rdi
  412c6f:	call   0x411600
  412c74:	jmp    0x412924
  412c79:	mov    sil,0x4
  412c7c:	mov    r14b,0x1
  412c7f:	jmp    0x41279a
  412c84:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  412c89:	jne    0x412956
  412c8f:	lea    rcx,[rbx+rdi*1+0x2]
  412c94:	mov    edx,0xa
  412c99:	call   0x422490
  412c9e:	mov    rbx,rax
  412ca1:	jmp    0x412924
  412ca6:	test   DWORD PTR [rdi+rax*4],0xc01
  412cad:	je     0x4128d4
  412cb3:	cmp    BYTE PTR [r12-0x1],0x5c
  412cb9:	jne    0x412c4c
  412cbb:	jmp    0x412d23
  412cbd:	mov    ecx,0xc
  412cc2:	call   0x409f50
  412cc7:	jmp    0x412814
  412ccc:	mov    rcx,rbp
  412ccf:	call   0x422468
  412cd4:	lea    rbx,[rbp+rax*1+0x0]
  412cd9:	jmp    0x412924
  412cde:	xchg   ax,ax
  412ce0:	add    rdi,0x1
  412ce4:	movzx  edx,BYTE PTR [rdi]
  412ce7:	cmp    BYTE PTR [rax+rdx*1],0x0
  412ceb:	je     0x412c3b
  412cf1:	add    rdi,0x1
  412cf5:	movzx  edx,BYTE PTR [rdi]
  412cf8:	cmp    BYTE PTR [rax+rdx*1],0x0
  412cfc:	jne    0x412ce0
  412cfe:	jmp    0x412c3b
  412d03:	lea    rcx,[rbx+0x2]
  412d07:	mov    edx,0x3e
  412d0c:	call   0x422490
  412d11:	test   rax,rax
  412d14:	lea    rbx,[rax+0x1]
  412d18:	jne    0x412924
  412d1e:	jmp    0x4128d4
  412d23:	movzx  eax,BYTE PTR [r12]
  412d28:	lea    rdx,[r12-0x1]
  412d2d:	lea    rdi,[r12+0x1]
  412d32:	cmp    al,0xa
  412d34:	je     0x412d5e
  412d36:	cmp    al,0x5c
  412d38:	je     0x412e2b
  412d3e:	test   al,al
  412d40:	je     0x412e24
  412d46:	add    rdx,0x1
  412d4a:	mov    r12,rdi
  412d4d:	mov    BYTE PTR [rdx-0x1],al
  412d50:	movzx  eax,BYTE PTR [r12]
  412d55:	lea    rdi,[r12+0x1]
  412d5a:	cmp    al,0xa
  412d5c:	jne    0x412d36
  412d5e:	mov    BYTE PTR [rdx],0x0
  412d61:	jmp    0x412c56
  412d66:	cmp    dl,0x9
  412d69:	je     0x412e46
  412d6f:	mov    edx,0x3e
  412d74:	mov    rcx,r15
  412d77:	call   0x422490
  412d7c:	test   rax,rax
  412d7f:	je     0x4128d4
  412d85:	lea    rbx,[rax+0x1]
  412d89:	jmp    0x412924
  412d8e:	mov    rdi,QWORD PTR [rip+0x55ccb]        # 0x468a60
  412d95:	test   rdi,rdi
  412d98:	je     0x412f7b
  412d9e:	mov    rcx,rdi
  412da1:	call   0x422468
  412da6:	mov    r12,rax
  412da9:	lea    r15,[rbx+0x2]
  412dad:	mov    rdx,rdi
  412db0:	xor    ebp,ebp
  412db2:	mov    rdi,rbx
  412db5:	mov    r8,r12
  412db8:	mov    rcx,r15
  412dbb:	mov    ebx,ebp
  412dbd:	call   0x422460
  412dc2:	test   eax,eax
  412dc4:	jne    0x412de2
  412dc6:	lea    rdx,[rdi+r12*1+0x2]
  412dcb:	movzx  eax,BYTE PTR [rdx]
  412dce:	cmp    al,0x7f
  412dd0:	ja     0x412e0b
  412dd2:	lea    rcx,[rip+0x1e027]        # 0x430e00
  412dd9:	test   DWORD PTR [rcx+rax*4],0x3b0060
  412de0:	je     0x412e0b
  412de2:	cmp    rbp,0x1
  412de6:	je     0x412d6f
  412de8:	mov    rdx,QWORD PTR [rip+0x55c79]        # 0x468a68
  412def:	mov    ebp,0x1
  412df4:	mov    rcx,rdx
  412df7:	mov    QWORD PTR [rsp+0x70],rdx
  412dfc:	call   0x422468
  412e01:	mov    rdx,QWORD PTR [rsp+0x70]
  412e06:	mov    r12,rax
  412e09:	jmp    0x412db5
  412e0b:	lea    rax,[rip+0x1a6ae]        # 0x42d4c0
  412e12:	movsxd r12,ebx
  412e15:	mov    rcx,r13
  412e18:	call   QWORD PTR [rax+r12*8]
  412e1c:	mov    rbx,rax
  412e1f:	jmp    0x412924
  412e24:	xor    edi,edi
  412e26:	jmp    0x412d5e
  412e2b:	cmp    BYTE PTR [r12+0x1],0xa
  412e31:	jne    0x412d46
  412e37:	lea    rdi,[r12+0x2]
  412e3c:	mov    eax,0xa
  412e41:	jmp    0x412d46
  412e46:	mov    rax,QWORD PTR [rip+0x55d93]        # 0x468be0
  412e4d:	test   rax,rax
  412e50:	je     0x4130a9
  412e56:	cmp    BYTE PTR [rax+rdx*1],0x0
  412e5a:	mov    rcx,r15
  412e5d:	je     0x412e6d
  412e5f:	nop
  412e60:	add    rcx,0x1
  412e64:	movzx  edx,BYTE PTR [rcx]
  412e67:	cmp    BYTE PTR [rax+rdx*1],0x0
  412e6b:	jne    0x412e60
  412e6d:	mov    r8,QWORD PTR [rsp+0x60]
  412e72:	mov    rdx,QWORD PTR [rsp+0x68]
  412e77:	call   0x40c420
  412e7c:	test   rax,rax
  412e7f:	mov    rbp,rax
  412e82:	je     0x4128d4
  412e88:	movzx  eax,BYTE PTR [rax]
  412e8b:	cmp    al,0x3e
  412e8d:	je     0x412a71
  412e93:	cmp    al,0x2f
  412e95:	jne    0x4128d4
  412e9b:	mov    r15,rbp
  412e9e:	cmp    BYTE PTR [r15+0x1],0x3e
  412ea3:	jne    0x4128d4
  412ea9:	lea    rbx,[r15+0x2]
  412ead:	mov    BYTE PTR [r15],0x0
  412eb1:	mov    eax,DWORD PTR [rsp+0x9c]
  412eb8:	mov    r8,QWORD PTR [rsp+0x70]
  412ebd:	mov    rdx,QWORD PTR [rsp+0x40]
  412ec2:	mov    r9d,r14d
  412ec5:	mov    DWORD PTR [rsp+0x20],eax
  412ec9:	mov    rcx,r13
  412ecc:	call   0x411600
  412ed1:	jmp    0x412924
  412ed6:	mov    cl,0x1c
  412ed8:	call   0x409f50
  412edd:	mov    rcx,rax
  412ee0:	jmp    0x41286d
  412ee5:	mov    ecx,0xc
  412eea:	call   0x409f50
  412eef:	mov    r8,rax
  412ef2:	jmp    0x4128a4
  412ef7:	call   0x40a440
  412efc:	mov    rdx,QWORD PTR [rsp+0x70]
  412f01:	lea    rcx,[rax+0x2]
  412f05:	mov    r8,rbx
  412f08:	mov    BYTE PTR [rax],0x3c
  412f0b:	mov    BYTE PTR [rax+0x1],0x2f
  412f0f:	mov    QWORD PTR [rsp+0x88],rax
  412f17:	call   0x4224d8
  412f1c:	mov    r11,QWORD PTR [rsp+0x88]
  412f24:	lea    rax,[rbx+0x3]
  412f28:	mov    rcx,r12
  412f2b:	mov    QWORD PTR [rsp+0x78],rax
  412f30:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  412f36:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  412f3c:	mov    rdx,r11
  412f3f:	mov    BYTE PTR [rbp+0x1],0x20
  412f43:	call   0x422440
  412f48:	mov    r11,QWORD PTR [rsp+0x88]
  412f50:	cmp    r11,QWORD PTR [rsp+0x48]
  412f55:	mov    rdx,rax
  412f58:	je     0x412af5
  412f5e:	mov    rcx,r11
  412f61:	mov    QWORD PTR [rsp+0x88],rax
  412f69:	call   0x422528
  412f6e:	mov    rdx,QWORD PTR [rsp+0x88]
  412f76:	jmp    0x412af5
  412f7b:	lea    rax,[rip+0x1b297]        # 0x42e219
  412f82:	mov    r12d,0x7
  412f88:	lea    rdi,[rip+0x1b28a]        # 0x42e219
  412f8f:	mov    QWORD PTR [rip+0x55aca],rax        # 0x468a60
  412f96:	lea    rax,[rip+0x1b26f]        # 0x42e20c
  412f9d:	mov    QWORD PTR [rip+0x55ac4],rax        # 0x468a68
  412fa4:	jmp    0x412da9
  412fa9:	mov    ecx,0x1c
  412fae:	call   0x409f50
  412fb3:	jmp    0x412a19
  412fb8:	mov    ecx,0xc
  412fbd:	call   0x409f50
  412fc2:	jmp    0x412c2d
  412fc7:	mov    rax,QWORD PTR [rsp+0x78]
  412fcc:	mov    BYTE PTR [rax],0x0
  412fcf:	jmp    0x412eb1
  412fd4:	mov    QWORD PTR [rsp+0x110],r9
  412fdc:	movzx  eax,BYTE PTR [r12+0x1]
  412fe2:	cmp    al,0x23
  412fe4:	je     0x41317a
  412fea:	movzx  edx,al
  412fed:	cmp    edx,0x7f
  412ff0:	ja     0x413107
  412ff6:	test   DWORD PTR [rdi+rdx*4],0x30000
  412ffd:	je     0x413107
  413003:	mov    rcx,r9
  413006:	cmp    al,0x58
  413008:	je     0x4130f0
  41300e:	cmp    al,0x78
  413010:	je     0x4130f0
  413016:	cmp    al,0x30
  413018:	mov    r8d,0xa
  41301e:	je     0x4130d8
  413024:	mov    rdx,QWORD PTR [rsp+0x48]
  413029:	call   0x422430
  41302e:	cmp    eax,0x7f
  413031:	mov    r12,QWORD PTR [rsp+0x110]
  413039:	ja     0x412fc7
  41303b:	cmp    BYTE PTR [r12],0x3b
  413040:	jne    0x412fc7
  413042:	add    r12,0x1
  413046:	test   eax,eax
  413048:	mov    BYTE PTR [rbp-0x1],al
  41304b:	jne    0x412bd1
  413051:	jmp    0x412eb1
  413056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413060:	movzx  edx,BYTE PTR [r12+0x1]
  413066:	lea    r15,[r12+0x3]
  41306b:	mov    BYTE PTR [rsp+0x90],dl
  413072:	movzx  eax,BYTE PTR [r12+0x2]
  413078:	test   dl,dl
  41307a:	mov    BYTE PTR [rsp+0x91],al
  413081:	je     0x412fc7
  413087:	test   al,al
  413089:	je     0x412fc7
  41308f:	mov    rcx,QWORD PTR [rsp+0x58]
  413094:	mov    r8d,0x10
  41309a:	xor    edx,edx
  41309c:	mov    r12,r15
  41309f:	call   0x422430
  4130a4:	jmp    0x412bce
  4130a9:	mov    ecx,0xc
  4130ae:	call   0x409f50
  4130b3:	movzx  edx,BYTE PTR [r15]
  4130b7:	jmp    0x412e56
  4130bc:	mov    ecx,0xc
  4130c1:	mov    QWORD PTR [rsp+0x78],rdx
  4130c6:	call   0x409f50
  4130cb:	mov    rdx,QWORD PTR [rsp+0x78]
  4130d0:	mov    r8,rax
  4130d3:	jmp    0x412b20
  4130d8:	cmp    BYTE PTR [rcx+0x1],0x30
  4130dc:	mov    r8d,0x10
  4130e2:	mov    eax,0xa
  4130e7:	cmovne r8d,eax
  4130eb:	jmp    0x413024
  4130f0:	add    rcx,0x1
  4130f4:	mov    r8d,0x10
  4130fa:	mov    QWORD PTR [rsp+0x110],rcx
  413102:	jmp    0x413024
  413107:	lea    r12,[rip+0x1a43a]        # 0x42d548
  41310e:	xor    r15d,r15d
  413111:	jmp    0x413125
  413113:	add    r15d,0x1
  413117:	add    r12,0x10
  41311b:	cmp    r15d,0xc
  41311f:	je     0x412fc7
  413125:	movzx  r10d,WORD PTR [r12]
  41312a:	mov    rdx,QWORD PTR [r12-0x8]
  41312f:	mov    rcx,r9
  413132:	mov    QWORD PTR [rsp+0x80],r9
  41313a:	mov    r8,r10
  41313d:	mov    QWORD PTR [rsp+0x88],r10
  413145:	call   0x422460
  41314a:	test   eax,eax
  41314c:	mov    r9,QWORD PTR [rsp+0x80]
  413154:	mov    r10,QWORD PTR [rsp+0x88]
  41315c:	jne    0x413113
  41315e:	movsxd rax,r15d
  413161:	lea    rcx,[rip+0x1a3d8]        # 0x42d540
  413168:	lea    r12,[r9+r10*1]
  41316c:	shl    rax,0x4
  413170:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  413175:	jmp    0x413046
  41317a:	lea    rcx,[r12+0x2]
  41317f:	mov    QWORD PTR [rsp+0x110],rcx
  413187:	movzx  eax,BYTE PTR [r12+0x2]
  41318d:	jmp    0x413006
  413192:	nop    DWORD PTR [rax+0x0]
  413196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131a0:	push   r15
  4131a2:	push   r14
  4131a4:	push   r13
  4131a6:	push   r12
  4131a8:	push   rbp
  4131a9:	push   rdi
  4131aa:	push   rsi
  4131ab:	push   rbx
  4131ac:	sub    rsp,0x188
  4131b3:	mov    rdx,QWORD PTR [rcx+0x58]
  4131b7:	test   rdx,rdx
  4131ba:	je     0x413259
  4131c0:	mov    r15d,DWORD PTR [rcx+0x10]
  4131c4:	mov    eax,r15d
  4131c7:	and    eax,0xfffffffb
  4131ca:	cmp    QWORD PTR [rdx+0x8],0x0
  4131cf:	mov    DWORD PTR [rcx+0x10],eax
  4131d2:	je     0x413363
  4131d8:	lea    rax,[rdx+0x10]
  4131dc:	xor    ebx,ebx
  4131de:	xchg   ax,ax
  4131e0:	add    rax,0x8
  4131e4:	add    ebx,0x1
  4131e7:	cmp    QWORD PTR [rax-0x8],0x0
  4131ec:	jne    0x4131e0
  4131ee:	mov    rsi,rcx
  4131f1:	mov    ebp,0xffffffff
  4131f6:	lea    r12,[rsp+0x70]
  4131fb:	lea    r14,[rsp+0x30]
  413200:	mov    r13,QWORD PTR [rip+0x894b5]        # 0x49c6bc
  413207:	jmp    0x41323e
  413209:	nop    DWORD PTR [rax+0x0]
  413210:	movsxd rax,ebx
  413213:	mov    edi,ebx
  413215:	shl    rax,0x3
  413219:	mov    r8,QWORD PTR [rdx+rax*1]
  41321d:	test   r8,r8
  413220:	je     0x413255
  413222:	mov    r9,QWORD PTR [rsi+0x20]
  413226:	mov    edx,0x105
  41322b:	mov    rcx,r12
  41322e:	lea    ebx,[rdi+rbp*1]
  413231:	call   0x40efe0
  413236:	test   al,al
  413238:	jne    0x413270
  41323a:	mov    rdx,QWORD PTR [rsi+0x58]
  41323e:	cmp    ebx,0xffffffff
  413241:	jne    0x413210
  413243:	xor    eax,eax
  413245:	xor    edi,edi
  413247:	mov    ebp,0x1
  41324c:	mov    r8,QWORD PTR [rdx+rax*1]
  413250:	test   r8,r8
  413253:	jne    0x413222
  413255:	mov    DWORD PTR [rsi+0x10],r15d
  413259:	add    rsp,0x188
  413260:	pop    rbx
  413261:	pop    rsi
  413262:	pop    rdi
  413263:	pop    rbp
  413264:	pop    r12
  413266:	pop    r13
  413268:	pop    r14
  41326a:	pop    r15
  41326c:	ret    
  41326d:	nop    DWORD PTR [rax]
  413270:	mov    rdx,r14
  413273:	mov    rcx,r12
  413276:	call   r13
  413279:	test   eax,eax
  41327b:	jne    0x41323a
  41327d:	movzx  eax,WORD PTR [rsp+0x36]
  413282:	and    ax,0xf000
  413286:	cmp    ax,0x4000
  41328a:	jne    0x413318
  413290:	mov    r9,r12
  413293:	mov    edx,DWORD PTR [r9]
  413296:	add    r9,0x4
  41329a:	lea    eax,[rdx-0x1010101]
  4132a0:	not    edx
  4132a2:	and    eax,edx
  4132a4:	and    eax,0x80808080
  4132a9:	je     0x413293
  4132ab:	mov    edx,eax
  4132ad:	shr    edx,0x10
  4132b0:	test   eax,0x8080
  4132b5:	cmove  eax,edx
  4132b8:	lea    rdx,[r9+0x2]
  4132bc:	cmove  r9,rdx
  4132c0:	mov    rdx,QWORD PTR [rsi+0x38]
  4132c4:	add    al,al
  4132c6:	sbb    r9,0x3
  4132ca:	sub    r9,r12
  4132cd:	mov    rcx,rdx
  4132d0:	mov    QWORD PTR [rsp+0x28],r9
  4132d5:	mov    QWORD PTR [rsp+0x20],rdx
  4132da:	call   0x422468
  4132df:	mov    r9,QWORD PTR [rsp+0x28]
  4132e4:	lea    r8,[rax+0x1]
  4132e8:	mov    rdx,QWORD PTR [rsp+0x20]
  4132ed:	lea    rax,[r9+r8*1+0x1]
  4132f2:	cmp    rax,0x104
  4132f8:	ja     0x41323a
  4132fe:	add    r9,r12
  413301:	cmp    BYTE PTR [r9-0x1],0x5c
  413306:	mov    rcx,r9
  413309:	je     0x413313
  41330b:	add    rcx,0x1
  41330f:	mov    BYTE PTR [r9],0x5c
  413313:	call   0x4224d8
  413318:	mov    r8d,ebp
  41331b:	mov    rdx,r12
  41331e:	mov    rcx,rsi
  413321:	call   0x412700
  413326:	cmp    ebp,0xffffffff
  413329:	jne    0x41323a
  41332f:	movzx  eax,WORD PTR [rsi+0xaa]
  413336:	add    rax,0x1
  41333a:	lea    rdx,[rax+rax*2]
  41333e:	lea    rax,[rax+rdx*4]
  413342:	mov    rdx,QWORD PTR [rsi+0x78]
  413346:	lea    rax,[rdx+rax*8]
  41334a:	mov    eax,DWORD PTR [rax+0x10]
  41334d:	shr    eax,0x5
  413350:	and    eax,0x1
  413353:	mov    eax,0x1
  413358:	cmovne ebx,edi
  41335b:	cmovne ebp,eax
  41335e:	jmp    0x41323a
  413363:	xor    ebx,ebx
  413365:	jmp    0x4131ee
  41336a:	nop    WORD PTR [rax+rax*1+0x0]
  413370:	push   rdi
  413371:	push   rsi
  413372:	push   rbx
  413373:	sub    rsp,0x20
  413377:	mov    rbx,rcx
  41337a:	mov    rdi,rdx
  41337d:	call   0x40b780
  413382:	test   eax,eax
  413384:	mov    esi,eax
  413386:	jne    0x4133a0
  413388:	mov    QWORD PTR [rbx+0x28],rdi
  41338c:	mov    rcx,rbx
  41338f:	call   0x4131a0
  413394:	mov    eax,esi
  413396:	add    rsp,0x20
  41339a:	pop    rbx
  41339b:	pop    rsi
  41339c:	pop    rdi
  41339d:	ret    
  41339e:	xchg   ax,ax
  4133a0:	mov    esi,0xffffffff
  4133a5:	jmp    0x413394
  4133a7:	nop    WORD PTR [rax+rax*1+0x0]
  4133b0:	push   rsi
  4133b1:	push   rbx
  4133b2:	sub    rsp,0x68
  4133b6:	cmp    rcx,0xf
  4133ba:	jbe    0x4133c2
  4133bc:	test   BYTE PTR [rdx+0x10],0x28
  4133c0:	je     0x4133d0
  4133c2:	add    rsp,0x68
  4133c6:	pop    rbx
  4133c7:	pop    rsi
  4133c8:	ret    
  4133c9:	nop    DWORD PTR [rax+0x0]
  4133d0:	mov    rsi,rdx
  4133d3:	mov    rbx,rcx
  4133d6:	lea    rdx,[rsp+0x20]
  4133db:	mov    rcx,QWORD PTR [rsi+0x18]
  4133df:	call   QWORD PTR [rip+0x892d7]        # 0x49c6bc
  4133e5:	test   eax,eax
  4133e7:	je     0x413403
  4133e9:	test   BYTE PTR [rbx+0x10],0x4
  4133ed:	je     0x4133c2
  4133ef:	mov    rcx,QWORD PTR [rbx+0x28]
  4133f3:	mov    r8,QWORD PTR [rsi+0x18]
  4133f7:	lea    rdx,[rip+0x19e12]        # 0x42d210
  4133fe:	call   0x408fc0
  413403:	movzx  eax,WORD PTR [rsp+0x26]
  413408:	and    ax,0xf000
  41340c:	cmp    ax,0x8000
  413410:	je     0x413430
  413412:	test   BYTE PTR [rbx+0x10],0x4
  413416:	je     0x4133c2
  413418:	call   QWORD PTR [rip+0x89056]        # 0x49c474
  41341e:	mov    DWORD PTR [rax],0x16
  413424:	jmp    0x4133ef
  413426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413430:	mov    rdx,QWORD PTR [rsi+0x18]
  413434:	xor    r8d,r8d
  413437:	mov    rcx,rbx
  41343a:	call   0x412700
  41343f:	jmp    0x4133c2
  413441:	nop    DWORD PTR [rax+rax*1+0x0]
  413446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413450:	push   r12
  413452:	push   rbp
  413453:	push   rdi
  413454:	push   rsi
  413455:	push   rbx
  413456:	sub    rsp,0x50
  41345a:	mov    r8d,0x2
  413460:	mov    edx,0x1
  413465:	mov    ebp,DWORD PTR [rip+0x14c65]        # 0x4280d0
  41346b:	lea    rsi,[rsp+0x20]
  413470:	mov    rbx,rcx
  413473:	mov    r9,rsi
  413476:	call   0x412430
  41347b:	cmp    rax,0xffffffffffffffff
  41347f:	mov    rdi,rax
  413482:	je     0x4134f0
  413484:	mov    rcx,rbx
  413487:	mov    DWORD PTR [rip+0x14c3f],0x0        # 0x4280d0
  413491:	call   0x422468
  413496:	mov    rdx,rbx
  413499:	mov    r8,rax
  41349c:	mov    rcx,rdi
  41349f:	call   0x40d890
  4134a4:	test   rax,rax
  4134a7:	mov    rbx,rax
  4134aa:	je     0x4134d0
  4134ac:	mov    rcx,rsi
  4134af:	call   0x412670
  4134b4:	mov    DWORD PTR [rip+0x14c16],ebp        # 0x4280d0
  4134ba:	mov    rax,rbx
  4134bd:	add    rsp,0x50
  4134c1:	pop    rbx
  4134c2:	pop    rsi
  4134c3:	pop    rdi
  4134c4:	pop    rbp
  4134c5:	pop    r12
  4134c7:	ret    
  4134c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4134d0:	mov    rdi,QWORD PTR [rip+0x88f9d]        # 0x49c474
  4134d7:	call   rdi
  4134d9:	mov    r12d,DWORD PTR [rax]
  4134dc:	mov    rcx,rsi
  4134df:	call   0x412670
  4134e4:	call   rdi
  4134e6:	mov    DWORD PTR [rax],r12d
  4134e9:	jmp    0x4134b4
  4134eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4134f0:	xor    eax,eax
  4134f2:	jmp    0x4134bd
  4134f4:	xchg   ax,ax
  4134f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413500:	push   r13
  413502:	push   r12
  413504:	push   rbp
  413505:	push   rdi
  413506:	push   rsi
  413507:	push   rbx
  413508:	sub    rsp,0x28
  41350c:	cmp    rcx,0xf
  413510:	jbe    0x41351d
  413512:	test   rdx,rdx
  413515:	je     0x41351d
  413517:	test   BYTE PTR [rdx+0x10],0x8
  41351b:	je     0x413530
  41351d:	add    rsp,0x28
  413521:	pop    rbx
  413522:	pop    rsi
  413523:	pop    rdi
  413524:	pop    rbp
  413525:	pop    r12
  413527:	pop    r13
  413529:	ret    
  41352a:	nop    WORD PTR [rax+rax*1+0x0]
  413530:	mov    rsi,rcx
  413533:	mov    rcx,QWORD PTR [rdx+0x18]
  413537:	mov    rbx,rdx
  41353a:	call   0x40c8b0
  41353f:	cmp    rax,0xffffffffffffffff
  413543:	mov    rdi,rax
  413546:	je     0x413570
  413548:	test   BYTE PTR [rbx+0x10],0x40
  41354c:	jne    0x413560
  41354e:	mov    DWORD PTR [rbx+0x18],edi
  413551:	add    rsp,0x28
  413555:	pop    rbx
  413556:	pop    rsi
  413557:	pop    rdi
  413558:	pop    rbp
  413559:	pop    r12
  41355b:	pop    r13
  41355d:	ret    
  41355e:	xchg   ax,ax
  413560:	mov    rcx,QWORD PTR [rbx+0x18]
  413564:	call   0x422528
  413569:	and    DWORD PTR [rbx+0x10],0xffffffbf
  41356d:	jmp    0x41354e
  41356f:	nop
  413570:	mov    r13,QWORD PTR [rbx+0x18]
  413574:	mov    r12,QWORD PTR [rsi+0x28]
  413578:	mov    rbp,QWORD PTR [rip+0x14d09]        # 0x428288
  41357f:	call   QWORD PTR [rip+0x88e9f]        # 0x49c424
  413585:	lea    rcx,[rax+0x60]
  413589:	mov    r9,r13
  41358c:	mov    r8,r12
  41358f:	mov    rdx,rbp
  413592:	call   0x408600
  413597:	test   BYTE PTR [rsi+0x10],0x4
  41359b:	je     0x413548
  41359d:	mov    edx,0x1
  4135a2:	mov    rcx,rsi
  4135a5:	call   QWORD PTR [rsi+0x98]
  4135ab:	jmp    0x413548
  4135ad:	nop    DWORD PTR [rax]
  4135b0:	push   rbx
  4135b1:	sub    rsp,0x20
  4135b5:	mov    rbx,rdx
  4135b8:	call   0x413500
  4135bd:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  4135c1:	je     0x4135ce
  4135c3:	xor    ecx,ecx
  4135c5:	call   QWORD PTR [rip+0x88f39]        # 0x49c504
  4135cb:	add    DWORD PTR [rbx+0x18],eax
  4135ce:	add    rsp,0x20
  4135d2:	pop    rbx
  4135d3:	ret    
  4135d4:	xchg   ax,ax
  4135d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135e0:	push   r12
  4135e2:	push   rbp
  4135e3:	push   rdi
  4135e4:	push   rsi
  4135e5:	push   rbx
  4135e6:	sub    rsp,0x30
  4135ea:	test   rcx,rcx
  4135ed:	mov    rdi,rcx
  4135f0:	je     0x41398e
  4135f6:	mov    rax,QWORD PTR [rip+0x555e3]        # 0x468be0
  4135fd:	test   rax,rax
  413600:	je     0x4139b6
  413606:	movzx  ecx,BYTE PTR [rdi]
  413609:	mov    rbp,rdi
  41360c:	cmp    BYTE PTR [rax+rcx*1],0x0
  413610:	mov    rdx,rcx
  413613:	je     0x413626
  413615:	add    rbp,0x1
  413619:	movzx  ecx,BYTE PTR [rbp+0x0]
  41361d:	cmp    BYTE PTR [rax+rcx*1],0x0
  413621:	mov    rdx,rcx
  413624:	jne    0x413615
  413626:	test   dl,dl
  413628:	je     0x41398e
  41362e:	mov    rsi,rbp
  413631:	mov    r12d,0x2
  413637:	nop    WORD PTR [rax+rax*1+0x0]
  413640:	mov    rax,QWORD PTR [rip+0x55599]        # 0x468be0
  413647:	add    r12d,0x1
  41364b:	lea    rbx,[rsi+0x1]
  41364f:	test   rax,rax
  413652:	je     0x4138f7
  413658:	movzx  edx,BYTE PTR [rsi+0x1]
  41365c:	test   dl,dl
  41365e:	je     0x413968
  413664:	cmp    BYTE PTR [rax+rdx*1],0x0
  413668:	mov    rcx,rax
  41366b:	je     0x413676
  41366d:	jmp    0x41368d
  41366f:	nop
  413670:	cmp    BYTE PTR [rax+rdx*1],0x0
  413674:	jne    0x413681
  413676:	add    rbx,0x1
  41367a:	movzx  edx,BYTE PTR [rbx]
  41367d:	test   dl,dl
  41367f:	jne    0x413670
  413681:	test   rcx,rcx
  413684:	je     0x413920
  41368a:	mov    rax,rcx
  41368d:	movzx  edx,BYTE PTR [rbx]
  413690:	movzx  ecx,dl
  413693:	cmp    BYTE PTR [rax+rcx*1],0x0
  413697:	je     0x4138e7
  41369d:	mov    rsi,rbx
  4136a0:	add    rsi,0x1
  4136a4:	movzx  ecx,BYTE PTR [rsi]
  4136a7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4136ab:	mov    rdx,rcx
  4136ae:	jne    0x4136a0
  4136b0:	test   dl,dl
  4136b2:	jne    0x413640
  4136b4:	sub    rsi,rbp
  4136b7:	movsxd r12,r12d
  4136ba:	lea    rcx,[rsi+r12*8+0x10]
  4136bf:	call   0x40a440
  4136c4:	test   rax,rax
  4136c7:	mov    rbp,rax
  4136ca:	je     0x4139c5
  4136d0:	lea    rbx,[rax+r12*8]
  4136d4:	lea    rsi,[rsp+0x2f]
  4136d9:	mov    QWORD PTR [rax+0x8],rbx
  4136dd:	xor    eax,eax
  4136df:	nop
  4136e0:	lea    edx,[rax+0x1]
  4136e3:	mov    DWORD PTR [rbp+0x0],edx
  4136e6:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  4136eb:	movzx  r8d,BYTE PTR [rdi]
  4136ef:	cmp    r8b,0x7f
  4136f3:	ja     0x41370d
  4136f5:	lea    rdx,[rip+0x1d704]        # 0x430e00
  4136fc:	movzx  eax,r8b
  413700:	test   DWORD PTR [rdx+rax*4],0xc01
  413707:	jne    0x4137ad
  41370d:	cmp    r8b,0x22
  413711:	je     0x413800
  413717:	cmp    r8b,0x27
  41371b:	je     0x413740
  41371d:	test   r8b,r8b
  413720:	je     0x4137e0
  413726:	mov    BYTE PTR [rbx],r8b
  413729:	movzx  r8d,BYTE PTR [rdi+0x1]
  41372e:	add    rbx,0x1
  413732:	add    rdi,0x1
  413736:	cmp    r8b,0x7f
  41373a:	ja     0x41370d
  41373c:	jmp    0x4136f5
  41373e:	xchg   ax,ax
  413740:	movzx  r8d,BYTE PTR [rdi+0x1]
  413745:	lea    rax,[rdi+0x1]
  413749:	cmp    r8b,0x27
  41374d:	lea    rdi,[rax+0x1]
  413751:	je     0x41377e
  413753:	cmp    r8b,0x5c
  413757:	je     0x413880
  41375d:	test   r8b,r8b
  413760:	je     0x413930
  413766:	mov    BYTE PTR [rbx],r8b
  413769:	movzx  r8d,BYTE PTR [rdi]
  41376d:	mov    rax,rdi
  413770:	add    rbx,0x1
  413774:	lea    rdi,[rax+0x1]
  413778:	cmp    r8b,0x27
  41377c:	jne    0x413753
  41377e:	test   rdi,rdi
  413781:	je     0x413930
  413787:	movzx  r8d,BYTE PTR [rdi]
  41378b:	cmp    r8b,0x7f
  41378f:	ja     0x4136ef
  413795:	lea    rdx,[rip+0x1d664]        # 0x430e00
  41379c:	movzx  eax,r8b
  4137a0:	test   DWORD PTR [rdx+rax*4],0xc01
  4137a7:	je     0x4136ef
  4137ad:	mov    rax,QWORD PTR [rip+0x5542c]        # 0x468be0
  4137b4:	lea    r12,[rdi+0x1]
  4137b8:	test   rax,rax
  4137bb:	je     0x4139a7
  4137c1:	movzx  edx,BYTE PTR [rdi+0x1]
  4137c5:	mov    rdi,r12
  4137c8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4137cc:	je     0x4137e0
  4137ce:	xchg   ax,ax
  4137d0:	add    rdi,0x1
  4137d4:	movzx  edx,BYTE PTR [rdi]
  4137d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4137db:	jne    0x4137d0
  4137dd:	nop    DWORD PTR [rax]
  4137e0:	mov    BYTE PTR [rbx],0x0
  4137e3:	cmp    BYTE PTR [rdi],0x0
  4137e6:	lea    rdx,[rbx+0x1]
  4137ea:	mov    eax,DWORD PTR [rbp+0x0]
  4137ed:	je     0x413951
  4137f3:	mov    rbx,rdx
  4137f6:	jmp    0x4136e0
  4137fb:	nop    DWORD PTR [rax+rax*1+0x0]
  413800:	add    rdi,0x1
  413804:	movzx  r8d,BYTE PTR [rdi]
  413808:	lea    r12,[rdi+0x1]
  41380c:	cmp    r8b,0x22
  413810:	mov    BYTE PTR [rsp+0x2f],r8b
  413815:	je     0x413832
  413817:	cmp    r8b,0x5c
  41381b:	je     0x413852
  41381d:	test   r8b,r8b
  413820:	je     0x413930
  413826:	mov    BYTE PTR [rbx],r8b
  413829:	mov    rdi,r12
  41382c:	add    rbx,0x1
  413830:	jmp    0x413804
  413832:	test   r12,r12
  413835:	mov    rdi,r12
  413838:	je     0x413930
  41383e:	movzx  r8d,BYTE PTR [r12]
  413843:	cmp    r8b,0x7f
  413847:	ja     0x4136ef
  41384d:	jmp    0x413795
  413852:	mov    r8d,0x7f
  413858:	mov    rcx,r12
  41385b:	mov    rdx,rsi
  41385e:	call   0x40d460
  413863:	movzx  r8d,BYTE PTR [rsp+0x2f]
  413869:	mov    eax,eax
  41386b:	add    r12,rax
  41386e:	mov    rdi,r12
  413871:	cmp    r8b,0x7f
  413875:	jne    0x413826
  413877:	jmp    0x413804
  413879:	nop    DWORD PTR [rax+0x0]
  413880:	movzx  edx,BYTE PTR [rax+0x1]
  413884:	cmp    dl,0xd
  413887:	je     0x4138c7
  413889:	ja     0x4138b0
  41388b:	test   dl,dl
  41388d:	je     0x413930
  413893:	cmp    dl,0xa
  413896:	jne    0x413766
  41389c:	movzx  r8d,BYTE PTR [rax+0x2]
  4138a1:	add    rax,0x2
  4138a5:	jmp    0x413749
  4138aa:	nop    WORD PTR [rax+rax*1+0x0]
  4138b0:	cmp    dl,0x27
  4138b3:	je     0x4138df
  4138b5:	cmp    dl,0x5c
  4138b8:	jne    0x413766
  4138be:	lea    rdi,[rax+0x2]
  4138c2:	jmp    0x413766
  4138c7:	movzx  r8d,BYTE PTR [rax+0x2]
  4138cc:	cmp    r8b,0xa
  4138d0:	je     0x413980
  4138d6:	add    rax,0x2
  4138da:	jmp    0x413749
  4138df:	mov    r8d,0x27
  4138e5:	jmp    0x4138be
  4138e7:	test   dl,dl
  4138e9:	mov    rsi,rbx
  4138ec:	jne    0x413640
  4138f2:	jmp    0x4136b4
  4138f7:	mov    ecx,0xc
  4138fc:	call   0x409f50
  413901:	movzx  edx,BYTE PTR [rsi+0x1]
  413905:	mov    rcx,QWORD PTR [rip+0x552d4]        # 0x468be0
  41390c:	test   dl,dl
  41390e:	jne    0x413670
  413914:	jmp    0x413681
  413919:	nop    DWORD PTR [rax+0x0]
  413920:	mov    ecx,0xc
  413925:	call   0x409f50
  41392a:	jmp    0x41368d
  41392f:	nop
  413930:	mov    rcx,rbp
  413933:	call   0x422528
  413938:	call   QWORD PTR [rip+0x88b36]        # 0x49c474
  41393e:	mov    DWORD PTR [rax],0x16
  413944:	xor    eax,eax
  413946:	add    rsp,0x30
  41394a:	pop    rbx
  41394b:	pop    rsi
  41394c:	pop    rdi
  41394d:	pop    rbp
  41394e:	pop    r12
  413950:	ret    
  413951:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  41395a:	mov    rax,rbp
  41395d:	add    rsp,0x30
  413961:	pop    rbx
  413962:	pop    rsi
  413963:	pop    rdi
  413964:	pop    rbp
  413965:	pop    r12
  413967:	ret    
  413968:	cmp    BYTE PTR [rax],0x0
  41396b:	jne    0x41369d
  413971:	mov    rsi,rbx
  413974:	jmp    0x4136b4
  413979:	nop    DWORD PTR [rax+0x0]
  413980:	movzx  r8d,BYTE PTR [rax+0x3]
  413985:	add    rax,0x3
  413989:	jmp    0x413749
  41398e:	call   QWORD PTR [rip+0x88ae0]        # 0x49c474
  413994:	mov    DWORD PTR [rax],0x2
  41399a:	xor    eax,eax
  41399c:	add    rsp,0x30
  4139a0:	pop    rbx
  4139a1:	pop    rsi
  4139a2:	pop    rdi
  4139a3:	pop    rbp
  4139a4:	pop    r12
  4139a6:	ret    
  4139a7:	mov    ecx,0xc
  4139ac:	call   0x409f50
  4139b1:	jmp    0x4137c1
  4139b6:	mov    ecx,0xc
  4139bb:	call   0x409f50
  4139c0:	jmp    0x413606
  4139c5:	call   QWORD PTR [rip+0x88aa9]        # 0x49c474
  4139cb:	mov    DWORD PTR [rax],0xc
  4139d1:	xor    eax,eax
  4139d3:	jmp    0x41399c
  4139d5:	nop
  4139d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139e0:	push   r15
  4139e2:	push   r14
  4139e4:	push   r13
  4139e6:	push   r12
  4139e8:	push   rbp
  4139e9:	push   rdi
  4139ea:	push   rsi
  4139eb:	push   rbx
  4139ec:	sub    rsp,0xd8
  4139f3:	test   BYTE PTR [rcx+0x11],0x1
  4139f7:	jne    0x413a10
  4139f9:	add    rsp,0xd8
  413a00:	pop    rbx
  413a01:	pop    rsi
  413a02:	pop    rdi
  413a03:	pop    rbp
  413a04:	pop    r12
  413a06:	pop    r13
  413a08:	pop    r14
  413a0a:	pop    r15
  413a0c:	ret    
  413a0d:	nop    DWORD PTR [rax]
  413a10:	mov    rdi,rcx
  413a13:	mov    rcx,QWORD PTR [rcx+0x30]
  413a17:	mov    ebp,edx
  413a19:	call   0x422500
  413a1e:	test   rax,rax
  413a21:	je     0x413a90
  413a23:	mov    rcx,rax
  413a26:	call   0x4135e0
  413a2b:	test   rax,rax
  413a2e:	mov    rbx,rax
  413a31:	je     0x413a90
  413a33:	mov    r13,QWORD PTR [rdi+0x8]
  413a37:	mov    QWORD PTR [rdi+0x8],rax
  413a3b:	mov    eax,DWORD PTR [rax]
  413a3d:	mov    esi,DWORD PTR [rdi+0x10]
  413a40:	mov    r12d,DWORD PTR [rdi+0x4]
  413a44:	mov    DWORD PTR [rdi+0x14],0x1
  413a4b:	mov    QWORD PTR [rdi+0x18],0x0
  413a53:	add    eax,0x1
  413a56:	mov    DWORD PTR [rdi+0x4],eax
  413a59:	mov    eax,esi
  413a5b:	and    eax,0xfffffffb
  413a5e:	cmp    ebp,0x1
  413a61:	mov    DWORD PTR [rdi+0x10],eax
  413a64:	je     0x413bc0
  413a6a:	jb     0x413bd0
  413a70:	cmp    ebp,0x2
  413a73:	jne    0x413a7d
  413a75:	mov    rcx,rdi
  413a78:	call   0x411510
  413a7d:	mov    rcx,rbx
  413a80:	call   0x422528
  413a85:	mov    QWORD PTR [rdi+0x8],r13
  413a89:	mov    DWORD PTR [rdi+0x4],r12d
  413a8d:	mov    DWORD PTR [rdi+0x10],esi
  413a90:	lea    r14,[rsp+0x50]
  413a95:	mov    rax,QWORD PTR [rdi+0x78]
  413a99:	mov    r9,QWORD PTR [rdi+0x30]
  413a9d:	lea    r8,[rip+0x19911]        # 0x42d3b5
  413aa4:	mov    edx,0x80
  413aa9:	mov    r15d,DWORD PTR [rdi+0xb4]
  413ab0:	mov    rcx,r14
  413ab3:	mov    r13d,0x7f
  413ab9:	mov    QWORD PTR [rsp+0x30],rax
  413abe:	call   0x4089f0
  413ac3:	movsxd r12,eax
  413ac6:	lea    esi,[r15-0x1]
  413aca:	mov    rbx,QWORD PTR [rsp+0x30]
  413acf:	add    r12,r14
  413ad2:	mov    eax,r12d
  413ad5:	sub    eax,r14d
  413ad8:	sub    r13,rax
  413adb:	lea    rax,[rsp+0x30]
  413ae0:	test   r15d,r15d
  413ae3:	mov    QWORD PTR [rsp+0x28],rax
  413ae8:	jg     0x413b01
  413aea:	jmp    0x413b50
  413aec:	nop    DWORD PTR [rax+0x0]
  413af0:	sub    esi,0x1
  413af3:	add    rbx,0x68
  413af7:	cmp    esi,0xffffffff
  413afa:	mov    QWORD PTR [rsp+0x30],rbx
  413aff:	je     0x413b50
  413b01:	test   BYTE PTR [rbx+0x11],0x1
  413b05:	jne    0x413af0
  413b07:	cmp    WORD PTR [rbx+0x8],0x8000
  413b0d:	jne    0x413af0
  413b0f:	mov    r15,QWORD PTR [rbx+0x48]
  413b13:	mov    rcx,r15
  413b16:	call   0x422468
  413b1b:	lea    r8,[rax+0x1]
  413b1f:	cmp    r13,r8
  413b22:	jb     0x413af0
  413b24:	mov    rdx,r15
  413b27:	mov    rcx,r12
  413b2a:	call   0x4224d8
  413b2f:	mov    rcx,QWORD PTR [rsp+0x28]
  413b34:	mov    r9d,ebp
  413b37:	mov    r8,rdi
  413b3a:	mov    rdx,r14
  413b3d:	call   0x40a2d0
  413b42:	mov    rbx,QWORD PTR [rsp+0x30]
  413b47:	jmp    0x413af0
  413b49:	nop    DWORD PTR [rax+0x0]
  413b50:	movzx  eax,WORD PTR [rdi+0xaa]
  413b57:	test   ax,0x7fff
  413b5b:	je     0x4139f9
  413b61:	add    rax,0x1
  413b65:	lea    rdx,[rax+rax*2]
  413b69:	lea    rdx,[rax+rdx*4]
  413b6d:	mov    rax,QWORD PTR [rdi+0x78]
  413b71:	lea    rax,[rax+rdx*8]
  413b75:	mov    rbx,QWORD PTR [rax+0x48]
  413b79:	mov    QWORD PTR [rsp+0x30],rax
  413b7e:	test   rbx,rbx
  413b81:	je     0x4139f9
  413b87:	mov    rcx,rbx
  413b8a:	call   0x422468
  413b8f:	lea    r8,[rax+0x1]
  413b93:	cmp    r13,r8
  413b96:	jb     0x4139f9
  413b9c:	mov    rdx,rbx
  413b9f:	mov    rcx,r12
  413ba2:	call   0x4224d8
  413ba7:	lea    rcx,[rsp+0x30]
  413bac:	mov    r9d,ebp
  413baf:	mov    r8,rdi
  413bb2:	mov    rdx,r14
  413bb5:	call   0x40a2d0
  413bba:	jmp    0x4139f9
  413bbf:	nop
  413bc0:	mov    rcx,rdi
  413bc3:	call   0x411410
  413bc8:	jmp    0x413a7d
  413bcd:	nop    DWORD PTR [rax]
  413bd0:	mov    rcx,rdi
  413bd3:	call   0x411410
  413bd8:	mov    DWORD PTR [rdi+0x14],0x1
  413bdf:	mov    QWORD PTR [rdi+0x18],0x0
  413be7:	jmp    0x413a75
  413bec:	nop    DWORD PTR [rax+0x0]
  413bf0:	push   r15
  413bf2:	push   r14
  413bf4:	push   r13
  413bf6:	push   r12
  413bf8:	push   rbp
  413bf9:	push   rdi
  413bfa:	push   rsi
  413bfb:	push   rbx
  413bfc:	sub    rsp,0x68
  413c00:	mov    ebp,edx
  413c02:	mov    rdx,QWORD PTR [r8]
  413c05:	mov    rbx,rcx
  413c08:	mov    rdi,r8
  413c0b:	call   0x40b780
  413c10:	test   eax,eax
  413c12:	mov    esi,eax
  413c14:	jne    0x414309
  413c1a:	mov    eax,DWORD PTR [rbx+0x10]
  413c1d:	test   al,0x40
  413c1f:	jne    0x413da0
  413c25:	or     eax,0x40
  413c28:	cmp    DWORD PTR [rbx],0x21fff
  413c2e:	mov    DWORD PTR [rbx+0x4],ebp
  413c31:	mov    QWORD PTR [rbx+0x8],rdi
  413c35:	mov    DWORD PTR [rbx+0x10],eax
  413c38:	jg     0x413d34
  413c3e:	mov    rcx,rbx
  413c41:	call   0x411410
  413c46:	test   eax,eax
  413c48:	jne    0x413d21
  413c4e:	movzx  eax,WORD PTR [rbx+0xaa]
  413c55:	test   ax,0x7fff
  413c59:	jne    0x413d50
  413c5f:	or     DWORD PTR [rbx+0x10],0x80000
  413c66:	cmp    QWORD PTR [rbx+0x58],0x0
  413c6b:	je     0x414070
  413c71:	mov    edx,0x1
  413c76:	mov    rcx,rbx
  413c79:	call   0x4139e0
  413c7e:	xchg   ax,ax
  413c80:	mov    edx,0x2
  413c85:	mov    rcx,rbx
  413c88:	call   0x4139e0
  413c8d:	mov    eax,DWORD PTR [rbx+0x10]
  413c90:	and    eax,0xfff7ffff
  413c95:	mov    DWORD PTR [rbx+0x10],eax
  413c98:	test   ah,0x20
  413c9b:	je     0x413cbd
  413c9d:	mov    rdx,QWORD PTR [rbx+0xa0]
  413ca4:	test   rdx,rdx
  413ca7:	je     0x413cbd
  413ca9:	mov    ecx,eax
  413cab:	and    ecx,0x30000
  413cb1:	cmp    ecx,0x10000
  413cb7:	je     0x41407f
  413cbd:	test   ah,0x8
  413cc0:	jne    0x413dd0
  413cc6:	mov    DWORD PTR [rbx+0x14],0x1
  413ccd:	mov    QWORD PTR [rbx+0x18],0x0
  413cd5:	mov    rcx,rbx
  413cd8:	call   0x411510
  413cdd:	test   eax,eax
  413cdf:	jne    0x413db0
  413ce5:	movzx  eax,WORD PTR [rbx+0xaa]
  413cec:	test   ax,ax
  413cef:	je     0x413d11
  413cf1:	cmp    ax,0x8000
  413cf5:	je     0x413d11
  413cf7:	lea    rdx,[rax+rax*2]
  413cfb:	lea    rax,[rax+rdx*4]
  413cff:	mov    rdx,QWORD PTR [rbx+0x78]
  413d03:	lea    rax,[rdx+rax*8]
  413d07:	test   BYTE PTR [rax+0x10],0x5
  413d0b:	jne    0x41439b
  413d11:	mov    esi,DWORD PTR [rbx+0x10]
  413d14:	test   sil,0x4
  413d18:	jne    0x413ee0
  413d1e:	mov    esi,DWORD PTR [rbx+0x14]
  413d21:	mov    eax,esi
  413d23:	add    rsp,0x68
  413d27:	pop    rbx
  413d28:	pop    rsi
  413d29:	pop    rdi
  413d2a:	pop    rbp
  413d2b:	pop    r12
  413d2d:	pop    r13
  413d2f:	pop    r14
  413d31:	pop    r15
  413d33:	ret    
  413d34:	mov    rax,QWORD PTR [rbx+0xd8]
  413d3b:	mov    QWORD PTR [rip+0x14386],rax        # 0x4280c8
  413d42:	jmp    0x413c3e
  413d47:	nop    WORD PTR [rax+rax*1+0x0]
  413d50:	add    rax,0x1
  413d54:	lea    rdx,[rax+rax*2]
  413d58:	lea    rdx,[rax+rdx*4]
  413d5c:	mov    rax,QWORD PTR [rbx+0x78]
  413d60:	lea    rsi,[rax+rdx*8]
  413d64:	test   BYTE PTR [rsi+0x10],0x20
  413d68:	jne    0x413dc0
  413d6a:	or     DWORD PTR [rbx+0x10],0x80000
  413d71:	cmp    QWORD PTR [rbx+0x58],0x0
  413d76:	je     0x414070
  413d7c:	mov    edx,0x1
  413d81:	mov    rcx,rbx
  413d84:	call   0x4139e0
  413d89:	test   BYTE PTR [rsi+0x10],0x20
  413d8d:	jne    0x413c80
  413d93:	mov    rcx,rbx
  413d96:	call   0x4131a0
  413d9b:	jmp    0x413c80
  413da0:	mov    eax,DWORD PTR [rbx+0x14]
  413da3:	test   eax,eax
  413da5:	je     0x413cc6
  413dab:	jmp    0x413cd5
  413db0:	mov    esi,DWORD PTR [rbx+0x4]
  413db3:	jmp    0x413d21
  413db8:	nop    DWORD PTR [rax+rax*1+0x0]
  413dc0:	mov    eax,DWORD PTR [rbx+0x10]
  413dc3:	jmp    0x413c98
  413dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  413dd0:	lea    rcx,[rip+0x195e2]        # 0x42d3b9
  413dd7:	mov    QWORD PTR [rsp+0x40],0x0
  413de0:	mov    QWORD PTR [rsp+0x48],0x0
  413de9:	mov    DWORD PTR [rsp+0x50],0x4
  413df1:	mov    DWORD PTR [rsp+0x54],0x0
  413df9:	call   0x422500
  413dfe:	test   rax,rax
  413e01:	jne    0x413cc6
  413e07:	test   BYTE PTR [rbx+0x10],0x3
  413e0b:	je     0x413cc6
  413e11:	mov    ecx,DWORD PTR [rbx+0x4]
  413e14:	shl    rcx,0x3
  413e18:	call   0x40a440
  413e1d:	test   rax,rax
  413e20:	mov    r12,rax
  413e23:	je     0x41426f
  413e29:	mov    ecx,DWORD PTR [rbx+0x4]
  413e2c:	shl    rcx,0x3
  413e30:	call   0x40a440
  413e35:	test   rax,rax
  413e38:	mov    rbp,rax
  413e3b:	je     0x414267
  413e41:	lea    r13,[rsp+0x40]
  413e46:	mov    r8d,DWORD PTR [rbx+0x4]
  413e4a:	mov    DWORD PTR [rbx+0x14],0x1
  413e51:	mov    QWORD PTR [rbx+0x18],0x0
  413e59:	mov    eax,0x1
  413e5e:	xor    edi,edi
  413e60:	lea    rcx,[r13+0x14]
  413e64:	xor    esi,esi
  413e66:	mov    QWORD PTR [rsp+0x38],rcx
  413e6b:	cmp    r8d,eax
  413e6e:	jbe    0x413e99
  413e70:	mov    rcx,QWORD PTR [rbx+0x8]
  413e74:	mov    edx,eax
  413e76:	mov    r14,QWORD PTR [rcx+rdx*8]
  413e7a:	cmp    BYTE PTR [r14],0x2d
  413e7e:	je     0x4140ce
  413e84:	add    eax,0x1
  413e87:	mov    edx,esi
  413e89:	add    esi,0x1
  413e8c:	cmp    r8d,eax
  413e8f:	mov    DWORD PTR [rbx+0x14],eax
  413e92:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  413e97:	ja     0x413e70
  413e99:	call   QWORD PTR [rip+0x885d5]        # 0x49c474
  413e9f:	mov    DWORD PTR [rax],0x0
  413ea5:	test   edi,edi
  413ea7:	jne    0x4142ed
  413ead:	test   esi,esi
  413eaf:	je     0x413ec9
  413eb1:	mov    rax,QWORD PTR [rbx+0x8]
  413eb5:	mov    r8d,esi
  413eb8:	mov    rdx,rbp
  413ebb:	shl    r8,0x3
  413ebf:	lea    rcx,[rax+rdi*8+0x8]
  413ec4:	call   0x4224d8
  413ec9:	mov    rcx,r12
  413ecc:	call   0x422528
  413ed1:	mov    rcx,rbp
  413ed4:	call   0x422528
  413ed9:	jmp    0x413cc6
  413ede:	xchg   ax,ax
  413ee0:	mov    r9,QWORD PTR [rbx+0x78]
  413ee4:	mov    r10d,DWORD PTR [rbx+0xb4]
  413eeb:	mov    rcx,r9
  413eee:	jmp    0x413f18
  413ef0:	movzx  eax,WORD PTR [rcx+0x8]
  413ef4:	cmp    ax,0x8000
  413ef8:	je     0x413fc3
  413efe:	cmp    ax,WORD PTR [rcx]
  413f01:	je     0x413fc3
  413f07:	sub    r10d,0x1
  413f0b:	test   r10d,r10d
  413f0e:	jle    0x414091
  413f14:	add    rcx,0x68
  413f18:	mov    r11d,DWORD PTR [rcx+0x10]
  413f1c:	test   r11b,0x5
  413f20:	je     0x413ef0
  413f22:	mov    rdx,QWORD PTR [rcx+0x28]
  413f26:	test   rdx,rdx
  413f29:	jne    0x413f4a
  413f2b:	jmp    0x413f54
  413f2d:	nop    DWORD PTR [rax]
  413f30:	lea    r8,[rax+rax*2]
  413f34:	add    rdx,0x4
  413f38:	lea    rax,[rax+r8*4]
  413f3c:	lea    rax,[r9+rax*8]
  413f40:	test   BYTE PTR [rax+0x10],0xf
  413f44:	je     0x414020
  413f4a:	movsxd rax,DWORD PTR [rdx]
  413f4d:	cmp    eax,0x8000
  413f52:	jne    0x413f30
  413f54:	mov    rdx,QWORD PTR [rcx+0x30]
  413f58:	test   rdx,rdx
  413f5b:	je     0x413ef0
  413f5d:	nop    DWORD PTR [rax]
  413f60:	movsxd rax,DWORD PTR [rdx]
  413f63:	cmp    eax,0x8000
  413f68:	je     0x413ef0
  413f6a:	lea    r8,[rax+rax*2]
  413f6e:	add    rdx,0x4
  413f72:	lea    rax,[rax+r8*4]
  413f76:	lea    rax,[r9+rax*8]
  413f7a:	test   BYTE PTR [rax+0x10],0x5
  413f7e:	je     0x413f60
  413f80:	mov    r12,QWORD PTR [rax+0x50]
  413f84:	mov    rbp,QWORD PTR [rcx+0x50]
  413f88:	mov    rdi,QWORD PTR [rbx+0x28]
  413f8c:	mov    rsi,QWORD PTR [rip+0x14245]        # 0x4281d8
  413f93:	call   QWORD PTR [rip+0x8848b]        # 0x49c424
  413f99:	lea    rcx,[rax+0x60]
  413f9d:	mov    QWORD PTR [rsp+0x20],r12
  413fa2:	mov    r9,rbp
  413fa5:	mov    r8,rdi
  413fa8:	mov    rdx,rsi
  413fab:	call   0x408600
  413fb0:	mov    edx,0x1
  413fb5:	mov    rcx,rbx
  413fb8:	call   QWORD PTR [rbx+0x98]
  413fbe:	jmp    0x413d1e
  413fc3:	movzx  edi,WORD PTR [rcx+0xa]
  413fc7:	cmp    WORD PTR [rcx+0xe],di
  413fcb:	jae    0x413f07
  413fd1:	test   r11d,0x100000
  413fd8:	je     0x413fe4
  413fda:	and    r11d,0x3
  413fde:	jne    0x413f07
  413fe4:	cmp    di,0x1
  413fe8:	jbe    0x414040
  413fea:	mov    r12,QWORD PTR [rcx+0x50]
  413fee:	mov    rbp,QWORD PTR [rbx+0x28]
  413ff2:	mov    rsi,QWORD PTR [rip+0x14297]        # 0x428290
  413ff9:	call   QWORD PTR [rip+0x88425]        # 0x49c424
  413fff:	lea    rcx,[rax+0x60]
  414003:	mov    DWORD PTR [rsp+0x20],edi
  414007:	mov    r9,r12
  41400a:	mov    r8,rbp
  41400d:	mov    rdx,rsi
  414010:	call   0x408600
  414015:	jmp    0x413fb0
  414017:	nop    WORD PTR [rax+rax*1+0x0]
  414020:	mov    r12,QWORD PTR [rax+0x50]
  414024:	mov    rbp,QWORD PTR [rcx+0x50]
  414028:	mov    rdi,QWORD PTR [rbx+0x28]
  41402c:	mov    rsi,QWORD PTR [rip+0x142a5]        # 0x4282d8
  414033:	jmp    0x413f93
  414038:	nop    DWORD PTR [rax+rax*1+0x0]
  414040:	mov    rbp,QWORD PTR [rcx+0x50]
  414044:	mov    rdi,QWORD PTR [rbx+0x28]
  414048:	mov    rsi,QWORD PTR [rip+0x141e1]        # 0x428230
  41404f:	call   QWORD PTR [rip+0x883cf]        # 0x49c424
  414055:	lea    rcx,[rax+0x60]
  414059:	mov    r9,rbp
  41405c:	mov    r8,rdi
  41405f:	mov    rdx,rsi
  414062:	call   0x408600
  414067:	jmp    0x413fb0
  41406c:	nop    DWORD PTR [rax+0x0]
  414070:	xor    edx,edx
  414072:	mov    rcx,rbx
  414075:	call   0x4139e0
  41407a:	jmp    0x413c8d
  41407f:	and    eax,0xfffeffff
  414084:	mov    DWORD PTR [rbx+0x10],eax
  414087:	call   rdx
  414089:	mov    eax,DWORD PTR [rbx+0x10]
  41408c:	jmp    0x413cbd
  414091:	test   esi,0x200
  414097:	je     0x41414a
  41409d:	mov    esi,DWORD PTR [rbx+0x14]
  4140a0:	cmp    DWORD PTR [rbx+0x4],esi
  4140a3:	jbe    0x413d21
  4140a9:	mov    rdi,QWORD PTR [rbx+0x28]
  4140ad:	mov    rsi,QWORD PTR [rip+0x1418c]        # 0x428240
  4140b4:	call   QWORD PTR [rip+0x8836a]        # 0x49c424
  4140ba:	lea    rcx,[rax+0x60]
  4140be:	mov    r8,rdi
  4140c1:	mov    rdx,rsi
  4140c4:	call   0x408600
  4140c9:	jmp    0x413fb0
  4140ce:	movzx  edx,BYTE PTR [r14+0x1]
  4140d3:	test   dl,dl
  4140d5:	je     0x413e84
  4140db:	cmp    dl,0x2d
  4140de:	jne    0x4141d0
  4140e4:	cmp    BYTE PTR [r14+0x2],0x0
  4140e9:	je     0x4143aa
  4140ef:	lea    rdx,[r14+0x2]
  4140f3:	mov    r8,r13
  4140f6:	mov    rcx,rbx
  4140f9:	call   0x410e50
  4140fe:	test   eax,eax
  414100:	js     0x4142dc
  414106:	mov    r8d,DWORD PTR [rbx+0x14]
  41410a:	mov    rcx,QWORD PTR [rbx+0x8]
  41410e:	lea    r15d,[rdi+0x1]
  414112:	lea    eax,[r8+0x1]
  414116:	mov    rdx,r8
  414119:	mov    r8,QWORD PTR [rcx+r8*8]
  41411d:	mov    ecx,edi
  41411f:	mov    DWORD PTR [rbx+0x14],eax
  414122:	mov    QWORD PTR [r12+rcx*8],r8
  414126:	mov    rcx,QWORD PTR [rsp+0x40]
  41412b:	mov    ecx,DWORD PTR [rcx+0x10]
  41412e:	test   ch,0xf0
  414131:	jne    0x414172
  414133:	cmp    DWORD PTR [rsp+0x54],0x1
  414138:	je     0x414280
  41413e:	mov    r8d,DWORD PTR [rbx+0x4]
  414142:	mov    edi,r15d
  414145:	jmp    0x413e6b
  41414a:	and    esi,0x400
  414150:	je     0x413d1e
  414156:	mov    esi,DWORD PTR [rbx+0x14]
  414159:	cmp    DWORD PTR [rbx+0x4],esi
  41415c:	ja     0x413d21
  414162:	mov    rdi,QWORD PTR [rbx+0x28]
  414166:	mov    rsi,QWORD PTR [rip+0x14043]        # 0x4281b0
  41416d:	jmp    0x4140b4
  414172:	and    ecx,0x10000
  414178:	mov    r8,QWORD PTR [rsp+0x48]
  41417d:	mov    ecx,DWORD PTR [rsp+0x54]
  414181:	je     0x4141ff
  414183:	cmp    ecx,0x1
  414186:	je     0x41424b
  41418c:	cmp    ecx,0x2
  41418f:	jne    0x41423a
  414195:	test   r8,r8
  414198:	jne    0x41413e
  41419a:	mov    r8d,DWORD PTR [rbx+0x4]
  41419e:	cmp    eax,r8d
  4141a1:	jae    0x414387
  4141a7:	mov    r9,QWORD PTR [rbx+0x8]
  4141ab:	mov    ecx,eax
  4141ad:	mov    rcx,QWORD PTR [r9+rcx*8]
  4141b1:	cmp    BYTE PTR [rcx],0x2d
  4141b4:	je     0x414142
  4141b6:	lea    eax,[rdx+0x2]
  4141b9:	mov    r10d,r15d
  4141bc:	lea    r15d,[rdi+0x2]
  4141c0:	mov    DWORD PTR [rbx+0x14],eax
  4141c3:	mov    QWORD PTR [r12+r10*8],rcx
  4141c7:	jmp    0x414142
  4141cc:	nop    DWORD PTR [rax+0x0]
  4141d0:	test   BYTE PTR [rbx+0x10],0x2
  4141d4:	jne    0x4141ea
  4141d6:	lea    rdx,[r14+0x1]
  4141da:	mov    r8,r13
  4141dd:	mov    rcx,rbx
  4141e0:	call   0x410e50
  4141e5:	jmp    0x4140fe
  4141ea:	mov    r9,QWORD PTR [rsp+0x38]
  4141ef:	mov    r8,r13
  4141f2:	mov    rcx,rbx
  4141f5:	call   0x409c00
  4141fa:	jmp    0x4140fe
  4141ff:	cmp    ecx,0x1
  414202:	je     0x41425b
  414204:	cmp    ecx,0x2
  414207:	jne    0x41423a
  414209:	test   r8,r8
  41420c:	jne    0x41413e
  414212:	mov    r8d,DWORD PTR [rbx+0x4]
  414216:	cmp    eax,r8d
  414219:	jae    0x41423a
  41421b:	mov    rcx,QWORD PTR [rbx+0x8]
  41421f:	add    edx,0x2
  414222:	mov    r10d,r15d
  414225:	mov    DWORD PTR [rbx+0x14],edx
  414228:	add    edi,0x2
  41422b:	mov    rax,QWORD PTR [rcx+rax*8]
  41422f:	mov    QWORD PTR [r12+r10*8],rax
  414233:	mov    eax,edx
  414235:	jmp    0x413e6b
  41423a:	call   QWORD PTR [rip+0x88234]        # 0x49c474
  414240:	mov    DWORD PTR [rax],0x5
  414246:	jmp    0x413ec9
  41424b:	cmp    BYTE PTR [r14+0x2],0x0
  414250:	je     0x41419a
  414256:	jmp    0x41413e
  41425b:	cmp    BYTE PTR [r14+0x2],0x0
  414260:	je     0x414212
  414262:	jmp    0x41413e
  414267:	mov    rcx,r12
  41426a:	call   0x422528
  41426f:	call   QWORD PTR [rip+0x881ff]        # 0x49c474
  414275:	mov    DWORD PTR [rax],0xc
  41427b:	jmp    0x413cc6
  414280:	movzx  eax,BYTE PTR [r14+0x2]
  414285:	lea    r11,[r14+0x2]
  414289:	lea    r14,[r13+0x14]
  41428d:	test   al,al
  41428f:	jne    0x4142c2
  414291:	jmp    0x41437f
  414296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142a0:	mov    rax,QWORD PTR [rsp+0x40]
  4142a5:	mov    r11,QWORD PTR [rsp+0x30]
  4142aa:	mov    eax,DWORD PTR [rax+0x10]
  4142ad:	test   ah,0xf0
  4142b0:	jne    0x414315
  4142b2:	add    r11,0x1
  4142b6:	movzx  eax,BYTE PTR [r11]
  4142ba:	test   al,al
  4142bc:	je     0x41437f
  4142c2:	movzx  edx,al
  4142c5:	mov    r9,r14
  4142c8:	mov    r8,r13
  4142cb:	mov    rcx,rbx
  4142ce:	mov    QWORD PTR [rsp+0x30],r11
  4142d3:	call   0x409c00
  4142d8:	test   eax,eax
  4142da:	jns    0x4142a0
  4142dc:	call   QWORD PTR [rip+0x88192]        # 0x49c474
  4142e2:	mov    DWORD PTR [rax],0x16
  4142e8:	jmp    0x413ec9
  4142ed:	mov    rax,QWORD PTR [rbx+0x8]
  4142f1:	mov    r8d,edi
  4142f4:	mov    rdx,r12
  4142f7:	shl    r8,0x3
  4142fb:	lea    rcx,[rax+0x8]
  4142ff:	call   0x4224d8
  414304:	jmp    0x413ead
  414309:	mov    rcx,QWORD PTR [rip+0x13e68]        # 0x428178
  414310:	call   0x408a70
  414315:	test   eax,0x10000
  41431a:	je     0x414353
  41431c:	cmp    BYTE PTR [r11+0x1],0x0
  414321:	jne    0x41437f
  414323:	mov    ecx,DWORD PTR [rbx+0x14]
  414326:	mov    rdx,QWORD PTR [rbx+0x8]
  41432a:	mov    rdx,QWORD PTR [rdx+rcx*8]
  41432e:	mov    rax,rcx
  414331:	cmp    BYTE PTR [rdx],0x2d
  414334:	je     0x41413e
  41433a:	add    eax,0x1
  41433d:	mov    r10d,r15d
  414340:	lea    r15d,[rdi+0x2]
  414344:	mov    DWORD PTR [rbx+0x14],eax
  414347:	mov    QWORD PTR [r12+r10*8],rdx
  41434b:	mov    eax,DWORD PTR [rbx+0x14]
  41434e:	jmp    0x41413e
  414353:	cmp    BYTE PTR [r11+0x1],0x0
  414358:	jne    0x41437f
  41435a:	mov    eax,DWORD PTR [rbx+0x14]
  41435d:	cmp    eax,DWORD PTR [rbx+0x4]
  414360:	jae    0x4142dc
  414366:	mov    rdx,QWORD PTR [rbx+0x8]
  41436a:	lea    ecx,[rax+0x1]
  41436d:	mov    r10d,r15d
  414370:	lea    r15d,[rdi+0x2]
  414374:	mov    DWORD PTR [rbx+0x14],ecx
  414377:	mov    rax,QWORD PTR [rdx+rax*8]
  41437b:	mov    QWORD PTR [r12+r10*8],rax
  41437f:	mov    eax,DWORD PTR [rbx+0x14]
  414382:	jmp    0x41413e
  414387:	call   QWORD PTR [rip+0x880e7]        # 0x49c474
  41438d:	mov    edi,r15d
  414390:	mov    DWORD PTR [rax],0x0
  414396:	jmp    0x413ea5
  41439b:	mov    rcx,rbx
  41439e:	call   0x410940
  4143a3:	xor    ecx,ecx
  4143a5:	call   0x408a40
  4143aa:	lea    ecx,[rax+0x1]
  4143ad:	mov    edx,edi
  4143af:	add    edi,0x1
  4143b2:	mov    r9d,esi
  4143b5:	cmp    ecx,r8d
  4143b8:	mov    DWORD PTR [rbx+0x14],ecx
  4143bb:	mov    QWORD PTR [r12+rdx*8],r14
  4143bf:	mov    edx,ecx
  4143c1:	jae    0x413ea5
  4143c7:	mov    r10,QWORD PTR [rbx+0x8]
  4143cb:	mov    r11d,edx
  4143ce:	add    edx,0x1
  4143d1:	mov    r11,QWORD PTR [r10+r11*8]
  4143d5:	mov    r10d,esi
  4143d8:	add    esi,0x1
  4143db:	cmp    edx,r8d
  4143de:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  4143e3:	jne    0x4143c7
  4143e5:	lea    esi,[rdx+r9*1-0x1]
  4143ea:	lea    edx,[rdx+rcx*1-0x1]
  4143ee:	sub    edx,eax
  4143f0:	sub    esi,eax
  4143f2:	mov    DWORD PTR [rbx+0x14],edx
  4143f5:	jmp    0x413ea5
  4143fa:	nop    WORD PTR [rax+rax*1+0x0]
  414400:	push   rsi
  414401:	push   rbx
  414402:	sub    rsp,0x38
  414406:	mov    rbx,rcx
  414409:	lea    rcx,[rcx+0x10]
  41440d:	mov    esi,edx
  41440f:	xor    edx,edx
  414411:	mov    QWORD PTR [rsp+0x28],0x0
  41441a:	call   0x411e20
  41441f:	test   esi,esi
  414421:	mov    ecx,DWORD PTR [rbx+0x10]
  414424:	je     0x414432
  414426:	test   ch,0x40
  414429:	je     0x414432
  41442b:	add    rsp,0x38
  41442f:	pop    rbx
  414430:	pop    rsi
  414431:	ret    
  414432:	test   ch,0x10
  414435:	lea    rdx,[rsp+0x28]
  41443a:	jne    0x4144a0
  41443c:	call   0x409450
  414441:	mov    r8,QWORD PTR [rsp+0x28]
  414446:	mov    edx,esi
  414448:	mov    rcx,rbx
  41444b:	call   0x40c030
  414450:	mov    rcx,QWORD PTR [rip+0x545f1]        # 0x468a48
  414457:	call   0x422560
  41445c:	mov    rcx,QWORD PTR [rip+0x545e5]        # 0x468a48
  414463:	call   0x422568
  414468:	test   eax,eax
  41446a:	je     0x41442b
  41446c:	call   QWORD PTR [rip+0x87fb2]        # 0x49c424
  414472:	add    rax,0x60
  414476:	cmp    QWORD PTR [rip+0x545cb],rax        # 0x468a48
  41447d:	mov    r8,QWORD PTR [rip+0x13e34]        # 0x4282b8
  414484:	cmove  r8,QWORD PTR [rip+0x13e34]        # 0x4282c0
  41448c:	mov    rcx,QWORD PTR [rbx+0x28]
  414490:	mov    rdx,QWORD PTR [rip+0x13e31]        # 0x4282c8
  414497:	call   0x408fc0
  41449c:	nop    DWORD PTR [rax+0x0]
  4144a0:	call   0x409310
  4144a5:	jmp    0x414441
  4144a7:	nop    WORD PTR [rax+rax*1+0x0]
  4144b0:	push   r15
  4144b2:	push   r14
  4144b4:	push   r13
  4144b6:	push   r12
  4144b8:	push   rbp
  4144b9:	push   rdi
  4144ba:	push   rsi
  4144bb:	push   rbx
  4144bc:	sub    rsp,0x28
  4144c0:	mov    rbx,rcx
  4144c3:	mov    esi,edx
  4144c5:	mov    r12,r8
  4144c8:	call   0x422468
  4144cd:	cmp    rax,0xff
  4144d3:	mov    rbp,rax
  4144d6:	jbe    0x4145c5
  4144dc:	test   sil,sil
  4144df:	jne    0x4145c5
  4144e5:	mov    rcx,rbx
  4144e8:	call   0x40a1b0
  4144ed:	mov    rdi,QWORD PTR [rip+0x880c8]        # 0x49c5bc
  4144f4:	mov    r13,rax
  4144f7:	mov    rsi,rax
  4144fa:	mov    r14,rsi
  4144fd:	nop    DWORD PTR [rax]
  414500:	mov    edx,0xa
  414505:	mov    rcx,r14
  414508:	call   0x422490
  41450d:	test   rax,rax
  414510:	mov    rbx,rax
  414513:	je     0x4145a0
  414519:	sub    rax,rsi
  41451c:	lea    r14,[rbx+0x1]
  414520:	cmp    rax,0x27
  414524:	jle    0x414500
  414526:	movsx  ecx,BYTE PTR [rbx+0x1]
  41452a:	mov    r15d,ecx
  41452d:	call   rdi
  41452f:	test   eax,eax
  414531:	je     0x414500
  414533:	cmp    r15b,0x9
  414537:	je     0x414500
  414539:	cmp    r15b,0xa
  41453d:	je     0x414563
  41453f:	cmp    r15b,0x20
  414543:	jne    0x414571
  414545:	add    rbx,0x8
  414549:	mov    rdx,r14
  41454c:	nop    DWORD PTR [rax+0x0]
  414550:	add    rdx,0x1
  414554:	cmp    BYTE PTR [rdx],0x20
  414557:	jne    0x414571
  414559:	cmp    rdx,rbx
  41455c:	jne    0x414550
  41455e:	mov    r14,rdx
  414561:	jmp    0x414500
  414563:	add    r14,0x1
  414567:	movzx  r15d,BYTE PTR [r14]
  41456b:	cmp    r15b,0xa
  41456f:	je     0x414563
  414571:	xor    edx,edx
  414573:	mov    rcx,rsi
  414576:	mov    BYTE PTR [r14],0x0
  41457a:	mov    r8,r12
  41457d:	sub    rsi,r14
  414580:	call   0x410120
  414585:	add    rbp,rsi
  414588:	je     0x4145ad
  41458a:	cmp    rbp,0xff
  414591:	mov    BYTE PTR [r14],r15b
  414594:	mov    rsi,r14
  414597:	ja     0x4144fa
  41459d:	nop    DWORD PTR [rax]
  4145a0:	mov    r8,r12
  4145a3:	xor    edx,edx
  4145a5:	mov    rcx,rsi
  4145a8:	call   0x410120
  4145ad:	mov    rcx,r13
  4145b0:	add    rsp,0x28
  4145b4:	pop    rbx
  4145b5:	pop    rsi
  4145b6:	pop    rdi
  4145b7:	pop    rbp
  4145b8:	pop    r12
  4145ba:	pop    r13
  4145bc:	pop    r14
  4145be:	pop    r15
  4145c0:	jmp    0x422528
  4145c5:	movzx  edx,sil
  4145c9:	mov    r8,r12
  4145cc:	mov    rcx,rbx
  4145cf:	add    rsp,0x28
  4145d3:	pop    rbx
  4145d4:	pop    rsi
  4145d5:	pop    rdi
  4145d6:	pop    rbp
  4145d7:	pop    r12
  4145d9:	pop    r13
  4145db:	pop    r14
  4145dd:	pop    r15
  4145df:	jmp    0x410120
  4145e4:	xchg   ax,ax
  4145e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4145f0:	push   rbp
  4145f1:	push   rdi
  4145f2:	push   rsi
  4145f3:	push   rbx
  4145f4:	sub    rsp,0x58
  4145f8:	mov    BYTE PTR [rip+0x544a1],0x0        # 0x468aa0
  4145ff:	mov    ebp,edx
  414601:	xor    edx,edx
  414603:	mov    rbx,rcx
  414606:	cmp    ebp,0x2750
  41460c:	lea    rcx,[rcx+0x10]
  414610:	je     0x414654
  414612:	call   0x411e20
  414617:	test   ebp,ebp
  414619:	je     0x414659
  41461b:	cmp    DWORD PTR [rbx],0x1dfff
  414621:	jle    0x414876
  414627:	cmp    QWORD PTR [rip+0x54419],0x0        # 0x468a48
  41462f:	mov    rcx,QWORD PTR [rbx+0xc0]
  414636:	je     0x414b1e
  41463c:	test   rcx,rcx
  41463f:	mov    eax,DWORD PTR [rbx+0x10]
  414642:	je     0x414884
  414648:	test   eax,0x100000
  41464d:	je     0x41468f
  41464f:	jmp    0x414884
  414654:	call   0x411e20
  414659:	cmp    DWORD PTR [rbx],0x1dfff
  41465f:	jle    0x4146f9
  414665:	cmp    QWORD PTR [rip+0x543db],0x0        # 0x468a48
  41466d:	mov    rcx,QWORD PTR [rbx+0xb8]
  414674:	je     0x414a67
  41467a:	test   rcx,rcx
  41467d:	mov    eax,DWORD PTR [rbx+0x10]
  414680:	je     0x414707
  414686:	test   eax,0x100000
  41468b:	jne    0x414707
  41468d:	xor    ebp,ebp
  41468f:	test   ah,0x20
  414692:	je     0x41494e
  414698:	mov    r8,QWORD PTR [rip+0x543a9]        # 0x468a48
  41469f:	mov    edx,0x1
  4146a4:	call   0x4144b0
  4146a9:	mov    rcx,QWORD PTR [rip+0x54398]        # 0x468a48
  4146b0:	call   0x422560
  4146b5:	mov    rcx,QWORD PTR [rip+0x5438c]        # 0x468a48
  4146bc:	call   0x422568
  4146c1:	test   eax,eax
  4146c3:	je     0x414947
  4146c9:	call   QWORD PTR [rip+0x87d55]        # 0x49c424
  4146cf:	add    rax,0x30
  4146d3:	cmp    QWORD PTR [rip+0x5436e],rax        # 0x468a48
  4146da:	mov    r8,QWORD PTR [rip+0x13bdf]        # 0x4282c0
  4146e1:	cmove  r8,QWORD PTR [rip+0x13bcf]        # 0x4282b8
  4146e9:	mov    rcx,QWORD PTR [rbx+0x28]
  4146ed:	mov    rdx,QWORD PTR [rip+0x13bd4]        # 0x4282c8
  4146f4:	call   0x408fc0
  4146f9:	cmp    QWORD PTR [rip+0x54347],0x0        # 0x468a48
  414701:	je     0x414a65
  414707:	mov    rcx,QWORD PTR [rip+0x5433a]        # 0x468a48
  41470e:	mov    rdx,QWORD PTR [rbx+0x60]
  414712:	xor    edi,edi
  414714:	mov    r8,QWORD PTR [rbx+0x28]
  414718:	call   0x408600
  41471d:	mov    ecx,DWORD PTR [rbx+0x10]
  414720:	test   ch,0x10
  414723:	mov    QWORD PTR [rsp+0x30],0x0
  41472c:	lea    rdx,[rsp+0x30]
  414731:	jne    0x41495f
  414737:	call   0x409450
  41473c:	lea    rdx,[rip+0x19ade]        # 0x42e221
  414743:	lea    rcx,[rip+0x54376]        # 0x468ac0
  41474a:	mov    r8d,eax
  41474d:	mov    esi,eax
  41474f:	call   0x408fe0
  414754:	test   ebp,ebp
  414756:	jne    0x414762
  414758:	mov    rax,QWORD PTR [rbx+0x78]
  41475c:	test   BYTE PTR [rax+0x12],0x20
  414760:	jne    0x414773
  414762:	mov    rdx,QWORD PTR [rip+0x542df]        # 0x468a48
  414769:	mov    rcx,QWORD PTR [rsp+0x30]
  41476e:	call   0x422538
  414773:	lea    eax,[rsi+0xf]
  414776:	mov    ecx,0x8
  41477b:	cdq    
  41477c:	idiv   ecx
  41477e:	neg    eax
  414780:	add    eax,0x4
  414783:	test   eax,eax
  414785:	jle    0x41478d
  414787:	mov    DWORD PTR [rip+0x542e3],eax        # 0x468a70
  41478d:	mov    r8,QWORD PTR [rsp+0x30]
  414792:	mov    edx,ebp
  414794:	mov    rcx,rbx
  414797:	call   0x40c030
  41479c:	mov    eax,DWORD PTR [rbx+0x10]
  41479f:	mov    edx,eax
  4147a1:	and    edx,0x3
  4147a4:	cmp    edx,0x1
  4147a7:	je     0x414a4a
  4147ad:	jb     0x414a2f
  4147b3:	cmp    edx,0x3
  4147b6:	jne    0x4147ce
  4147b8:	mov    rdx,QWORD PTR [rip+0x54289]        # 0x468a48
  4147bf:	mov    rcx,QWORD PTR [rip+0x13b7a]        # 0x428340
  4147c6:	call   0x422538
  4147cb:	mov    eax,DWORD PTR [rbx+0x10]
  4147ce:	test   al,0x20
  4147d0:	jne    0x4149d2
  4147d6:	test   ah,0x8
  4147d9:	jne    0x4149ba
  4147df:	mov    rcx,QWORD PTR [rbx+0x68]
  4147e3:	test   rcx,rcx
  4147e6:	je     0x4147f4
  4147e8:	mov    rdx,QWORD PTR [rip+0x54259]        # 0x468a48
  4147ef:	call   0x422538
  4147f4:	test   ebp,ebp
  4147f6:	je     0x4149ed
  4147fc:	cmp    DWORD PTR [rbx],0x21fff
  414802:	jle    0x414992
  414808:	mov    rcx,QWORD PTR [rbx+0xe0]
  41480f:	test   rcx,rcx
  414812:	je     0x414992
  414818:	mov    rdx,QWORD PTR [rip+0x54229]        # 0x468a48
  41481f:	call   0x422538
  414824:	mov    rcx,QWORD PTR [rip+0x5421d]        # 0x468a48
  41482b:	mov    ebp,edi
  41482d:	call   0x422560
  414832:	mov    rcx,QWORD PTR [rip+0x5420f]        # 0x468a48
  414839:	call   0x422568
  41483e:	test   eax,eax
  414840:	je     0x4146a9
  414846:	call   QWORD PTR [rip+0x87bd8]        # 0x49c424
  41484c:	add    rax,0x60
  414850:	cmp    QWORD PTR [rip+0x541f1],rax        # 0x468a48
  414857:	mov    r8,QWORD PTR [rip+0x13a5a]        # 0x4282b8
  41485e:	cmove  r8,QWORD PTR [rip+0x13a5a]        # 0x4282c0
  414866:	mov    rcx,QWORD PTR [rbx+0x28]
  41486a:	mov    rdx,QWORD PTR [rip+0x13a57]        # 0x4282c8
  414871:	call   0x408fc0
  414876:	cmp    QWORD PTR [rip+0x541ca],0x0        # 0x468a48
  41487e:	je     0x414b1c
  414884:	mov    rcx,QWORD PTR [rip+0x541bd]        # 0x468a48
  41488b:	mov    rdx,QWORD PTR [rbx+0x60]
  41488f:	mov    edi,ebp
  414891:	mov    r8,QWORD PTR [rbx+0x28]
  414895:	call   0x408600
  41489a:	mov    ecx,DWORD PTR [rbx+0x10]
  41489d:	test   ch,0x40
  4148a0:	je     0x414720
  4148a6:	cmp    DWORD PTR [rbx],0x25fff
  4148ac:	jle    0x414a90
  4148b2:	movsxd rax,DWORD PTR [rbx+0xb4]
  4148b9:	mov    r8,rax
  4148bc:	imul   rax,rax,0x68
  4148c0:	add    rax,QWORD PTR [rbx+0x78]
  4148c4:	cmp    DWORD PTR [rax+0x14],0x3
  4148c8:	je     0x414903
  4148ca:	mov    edx,DWORD PTR [rbx+0xb0]
  4148d0:	lea    r9d,[r8+0x1]
  4148d4:	cmp    r9d,edx
  4148d7:	jge    0x414c2f
  4148dd:	sub    edx,0x2
  4148e0:	sub    edx,r8d
  4148e3:	add    rdx,0x1
  4148e7:	imul   rdx,rdx,0x68
  4148eb:	add    rdx,rax
  4148ee:	jmp    0x4148f9
  4148f0:	cmp    rax,rdx
  4148f3:	je     0x414c2f
  4148f9:	add    rax,0x68
  4148fd:	cmp    DWORD PTR [rax+0x14],0x3
  414901:	jne    0x4148f0
  414903:	and    ecx,0x3
  414906:	cmp    ecx,0x2
  414909:	je     0x414c13
  41490f:	cmp    ecx,0x3
  414912:	je     0x414be1
  414918:	sub    ecx,0x1
  41491b:	je     0x414be1
  414921:	lea    r9,[rsp+0x30]
  414926:	mov    rdx,QWORD PTR [rax+0x50]
  41492a:	mov    r8d,0x14
  414930:	mov    rcx,r9
  414933:	mov    QWORD PTR [rsp+0x28],r9
  414938:	call   0x422458
  41493d:	mov    r9,QWORD PTR [rsp+0x28]
  414942:	jmp    0x414ac0
  414947:	mov    ecx,ebp
  414949:	call   0x408a40
  41494e:	mov    rdx,QWORD PTR [rip+0x540f3]        # 0x468a48
  414955:	call   0x422538
  41495a:	jmp    0x4146a9
  41495f:	call   0x409310
  414964:	lea    rdx,[rip+0x198b6]        # 0x42e221
  41496b:	lea    rcx,[rip+0x5414e]        # 0x468ac0
  414972:	mov    r8d,eax
  414975:	mov    esi,eax
  414977:	call   0x408fe0
  41497c:	mov    rdx,QWORD PTR [rip+0x540c5]        # 0x468a48
  414983:	mov    ecx,0xa
  414988:	call   0x422540
  41498d:	jmp    0x414773
  414992:	mov    r8,QWORD PTR [rbx+0x80]
  414999:	test   r8,r8
  41499c:	je     0x414824
  4149a2:	mov    rdx,QWORD PTR [rip+0x13a07]        # 0x4283b0
  4149a9:	mov    rcx,QWORD PTR [rip+0x54098]        # 0x468a48
  4149b0:	call   0x408600
  4149b5:	jmp    0x414824
  4149ba:	mov    rdx,QWORD PTR [rip+0x54087]        # 0x468a48
  4149c1:	mov    rcx,QWORD PTR [rip+0x13a50]        # 0x428418
  4149c8:	call   0x422538
  4149cd:	jmp    0x4147df
  4149d2:	mov    rdx,QWORD PTR [rip+0x5406f]        # 0x468a48
  4149d9:	mov    rcx,QWORD PTR [rip+0x139b8]        # 0x428398
  4149e0:	call   0x422538
  4149e5:	mov    eax,DWORD PTR [rbx+0x10]
  4149e8:	jmp    0x4147d6
  4149ed:	mov    rcx,QWORD PTR [rbx+0x58]
  4149f1:	test   rcx,rcx
  4149f4:	jne    0x414b3e
  4149fa:	test   BYTE PTR [rbx+0x11],0x1
  4149fe:	jne    0x414aed
  414a04:	cmp    BYTE PTR [rip+0x54095],0x0        # 0x468aa0
  414a0b:	jne    0x414b56
  414a11:	mov    rcx,QWORD PTR [rbx+0x70]
  414a15:	test   rcx,rcx
  414a18:	je     0x4147fc
  414a1e:	mov    rdx,QWORD PTR [rip+0x54023]        # 0x468a48
  414a25:	call   0x422538
  414a2a:	jmp    0x4147fc
  414a2f:	mov    rdx,QWORD PTR [rip+0x54012]        # 0x468a48
  414a36:	mov    rcx,QWORD PTR [rip+0x13963]        # 0x4283a0
  414a3d:	call   0x422538
  414a42:	mov    eax,DWORD PTR [rbx+0x10]
  414a45:	jmp    0x4147ce
  414a4a:	mov    rdx,QWORD PTR [rip+0x53ff7]        # 0x468a48
  414a51:	mov    rcx,QWORD PTR [rip+0x13910]        # 0x428368
  414a58:	call   0x422538
  414a5d:	mov    eax,DWORD PTR [rbx+0x10]
  414a60:	jmp    0x4147ce
  414a65:	xor    ecx,ecx
  414a67:	cmp    BYTE PTR [rip+0x54006],0x0        # 0x468a74
  414a6e:	mov    QWORD PTR [rsp+0x28],rcx
  414a73:	jne    0x414adc
  414a75:	call   QWORD PTR [rip+0x879a9]        # 0x49c424
  414a7b:	mov    rcx,QWORD PTR [rsp+0x28]
  414a80:	add    rax,0x30
  414a84:	mov    QWORD PTR [rip+0x53fbd],rax        # 0x468a48
  414a8b:	jmp    0x41467a
  414a90:	and    ecx,0x3
  414a93:	cmp    ecx,0x2
  414a96:	je     0x414bcb
  414a9c:	cmp    ecx,0x3
  414a9f:	je     0x414bb0
  414aa5:	sub    ecx,0x1
  414aa8:	je     0x414bb0
  414aae:	lea    r9,[rsp+0x30]
  414ab3:	mov    DWORD PTR [rsp+0x30],0x706c6568
  414abb:	mov    BYTE PTR [rsp+0x34],0x0
  414ac0:	mov    r8,QWORD PTR [rbx+0x28]
  414ac4:	mov    rdx,QWORD PTR [rip+0x137dd]        # 0x4282a8
  414acb:	mov    rcx,QWORD PTR [rip+0x53f76]        # 0x468a48
  414ad2:	call   0x408600
  414ad7:	jmp    0x4146a9
  414adc:	call   QWORD PTR [rip+0x87942]        # 0x49c424
  414ae2:	mov    rcx,QWORD PTR [rsp+0x28]
  414ae7:	add    rax,0x60
  414aeb:	jmp    0x414a84
  414aed:	mov    rdx,QWORD PTR [rip+0x53f54]        # 0x468a48
  414af4:	mov    rcx,QWORD PTR [rip+0x138c5]        # 0x4283c0
  414afb:	call   0x422538
  414b00:	mov    r8,QWORD PTR [rbx+0x30]
  414b04:	mov    rdx,QWORD PTR [rip+0x1381d]        # 0x428328
  414b0b:	mov    rcx,QWORD PTR [rip+0x53f36]        # 0x468a48
  414b12:	call   0x408600
  414b17:	jmp    0x414a04
  414b1c:	xor    ecx,ecx
  414b1e:	mov    QWORD PTR [rsp+0x28],rcx
  414b23:	call   QWORD PTR [rip+0x878fb]        # 0x49c424
  414b29:	add    rax,0x60
  414b2d:	mov    rcx,QWORD PTR [rsp+0x28]
  414b32:	mov    QWORD PTR [rip+0x53f0f],rax        # 0x468a48
  414b39:	jmp    0x41463c
  414b3e:	mov    rdx,QWORD PTR [rbx+0x38]
  414b42:	mov    r8,QWORD PTR [rbx+0x20]
  414b46:	call   0x40f250
  414b4b:	test   BYTE PTR [rbx+0x11],0x1
  414b4f:	jne    0x414b00
  414b51:	jmp    0x414a04
  414b56:	mov    rdx,QWORD PTR [rip+0x53eeb]        # 0x468a48
  414b5d:	mov    ecx,0xa
  414b62:	mov    ebp,DWORD PTR [rbx+0xb0]
  414b68:	mov    rsi,QWORD PTR [rbx+0x78]
  414b6c:	call   0x422540
  414b71:	mov    rcx,QWORD PTR [rip+0x53ed0]        # 0x468a48
  414b78:	call   0x422560
  414b7d:	jmp    0x414b93
  414b7f:	cmp    eax,0x4
  414b82:	je     0x414ba3
  414b84:	sub    ebp,0x1
  414b87:	add    rsi,0x68
  414b8b:	test   ebp,ebp
  414b8d:	jle    0x414a11
  414b93:	mov    eax,DWORD PTR [rsi+0x10]
  414b96:	and    eax,0xf000
  414b9b:	shr    eax,0xc
  414b9e:	cmp    eax,0x2
  414ba1:	jne    0x414b7f
  414ba3:	mov    rdx,rsi
  414ba6:	mov    ecx,0x1
  414bab:	call   QWORD PTR [rsi+0x38]
  414bae:	jmp    0x414b84
  414bb0:	lea    r9,[rsp+0x30]
  414bb5:	lea    rsi,[rip+0x1880d]        # 0x42d3c9
  414bbc:	mov    ecx,0x7
  414bc1:	mov    rdi,r9
  414bc4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  414bc6:	jmp    0x414ac0
  414bcb:	mov    WORD PTR [rsp+0x30],0x682d
  414bd2:	mov    BYTE PTR [rsp+0x32],0x0
  414bd7:	lea    r9,[rsp+0x30]
  414bdc:	jmp    0x414ac0
  414be1:	mov    BYTE PTR [rsp+0x31],0x2d
  414be6:	mov    BYTE PTR [rsp+0x30],0x2d
  414beb:	lea    r9,[rsp+0x30]
  414bf0:	mov    rdx,QWORD PTR [rax+0x50]
  414bf4:	lea    rcx,[rsp+0x32]
  414bf9:	mov    r8d,0x14
  414bff:	mov    QWORD PTR [rsp+0x28],r9
  414c04:	call   0x422458
  414c09:	mov    r9,QWORD PTR [rsp+0x28]
  414c0e:	jmp    0x414ac0
  414c13:	mov    BYTE PTR [rsp+0x30],0x2d
  414c18:	movzx  eax,WORD PTR [rax+0x2]
  414c1c:	lea    r9,[rsp+0x30]
  414c21:	mov    BYTE PTR [rsp+0x32],0x0
  414c26:	mov    BYTE PTR [rsp+0x31],al
  414c2a:	jmp    0x414ac0
  414c2f:	mov    rcx,QWORD PTR [rip+0x1353a]        # 0x428170
  414c36:	call   0x408a70
  414c3b:	nop
  414c3c:	nop    DWORD PTR [rax+0x0]
  414c40:	sub    rsp,0x28
  414c44:	call   0x4145f0
  414c49:	nop
  414c4a:	nop    WORD PTR [rax+rax*1+0x0]
  414c50:	sub    rsp,0x28
  414c54:	lea    rcx,[rip+0x13165]        # 0x427dc0
  414c5b:	xor    edx,edx
  414c5d:	call   0x4145f0
  414c62:	nop
  414c63:	nop    DWORD PTR [rax]
  414c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c70:	lea    rax,[rip+0x18759]        # 0x42d3d0
  414c77:	ret    
  414c78:	nop    DWORD PTR [rax+rax*1+0x0]
  414c80:	push   rsi
  414c81:	push   rbx
  414c82:	sub    rsp,0x28
  414c86:	cmp    BYTE PTR [rip+0x53de7],0x0        # 0x468a74
  414c8d:	mov    rbx,rcx
  414c90:	mov    rsi,rdx
  414c93:	je     0x414cb0
  414c95:	call   QWORD PTR [rip+0x87789]        # 0x49c424
  414c9b:	cmp    rbx,0xf
  414c9f:	lea    r8,[rax+0x60]
  414ca3:	ja     0x414cc0
  414ca5:	add    rsp,0x28
  414ca9:	pop    rbx
  414caa:	pop    rsi
  414cab:	ret    
  414cac:	nop    DWORD PTR [rax+0x0]
  414cb0:	call   QWORD PTR [rip+0x8776e]        # 0x49c424
  414cb6:	cmp    rbx,0xf
  414cba:	lea    r8,[rax+0x30]
  414cbe:	jbe    0x414ca5
  414cc0:	xor    r9d,r9d
  414cc3:	mov    rdx,rsi
  414cc6:	mov    rcx,rbx
  414cc9:	add    rsp,0x28
  414ccd:	pop    rbx
  414cce:	pop    rsi
  414ccf:	jmp    0x4120c0
  414cd4:	xchg   ax,ax
  414cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ce0:	push   rsi
  414ce1:	push   rbx
  414ce2:	sub    rsp,0x28
  414ce6:	mov    rbx,rcx
  414ce9:	mov    rsi,rdx
  414cec:	call   QWORD PTR [rip+0x87732]        # 0x49c424
  414cf2:	cmp    rbx,0xf
  414cf6:	ja     0x414d00
  414cf8:	add    rsp,0x28
  414cfc:	pop    rbx
  414cfd:	pop    rsi
  414cfe:	ret    
  414cff:	nop
  414d00:	lea    r8,[rax+0x60]
  414d04:	mov    r9d,0x1
  414d0a:	mov    rdx,rsi
  414d0d:	mov    rcx,rbx
  414d10:	add    rsp,0x28
  414d14:	pop    rbx
  414d15:	pop    rsi
  414d16:	jmp    0x4120c0
  414d1b:	nop
  414d1c:	nop
  414d1d:	nop
  414d1e:	nop
  414d1f:	nop
  414d20:	mov    r9,r8
  414d23:	mov    r8d,0xa
  414d29:	jmp    0x4173a0
  414d2e:	nop
  414d2f:	nop
  414d30:	sub    rsp,0x28
  414d34:	call   QWORD PTR [rip+0x87792]        # 0x49c4cc
  414d3a:	lea    rdx,[rip+0x53fbf]        # 0x468d00
  414d41:	cmp    QWORD PTR [rip+0x13738],rdx        # 0x428480
  414d48:	je     0x414d50
  414d4a:	add    rsp,0x28
  414d4e:	ret    
  414d4f:	nop
  414d50:	mov    QWORD PTR [rip+0x13729],rax        # 0x428480
  414d57:	add    rsp,0x28
  414d5b:	ret    
  414d5c:	nop    DWORD PTR [rax+0x0]
  414d60:	sub    rsp,0x28
  414d64:	call   QWORD PTR [rip+0x87752]        # 0x49c4bc
  414d6a:	lea    rdx,[rip+0x53f8f]        # 0x468d00
  414d71:	cmp    QWORD PTR [rip+0x13708],rdx        # 0x428480
  414d78:	je     0x414d80
  414d7a:	add    rsp,0x28
  414d7e:	ret    
  414d7f:	nop
  414d80:	mov    QWORD PTR [rip+0x136f9],rax        # 0x428480
  414d87:	add    rsp,0x28
  414d8b:	ret    
  414d8c:	nop    DWORD PTR [rax+0x0]
  414d90:	push   r15
  414d92:	push   r14
  414d94:	push   r13
  414d96:	push   r12
  414d98:	push   rbp
  414d99:	push   rdi
  414d9a:	push   rsi
  414d9b:	push   rbx
  414d9c:	sub    rsp,0x48
  414da0:	mov    rax,QWORD PTR [rip+0x136d9]        # 0x428480
  414da7:	mov    rbx,rcx
  414daa:	lea    rcx,[rsp+0x30]
  414daf:	mov    r8d,DWORD PTR [rax]
  414db2:	mov    r9d,DWORD PTR [rax+0x20]
  414db6:	mov    r15d,DWORD PTR [rax+0x4]
  414dba:	mov    r14d,DWORD PTR [rax+0x8]
  414dbe:	mov    r13d,DWORD PTR [rax+0xc]
  414dc2:	mov    r12d,DWORD PTR [rax+0x10]
  414dc6:	mov    DWORD PTR [rsp+0x2c],r8d
  414dcb:	mov    DWORD PTR [rsp+0x28],r9d
  414dd0:	mov    ebp,DWORD PTR [rax+0x14]
  414dd3:	mov    edi,DWORD PTR [rax+0x18]
  414dd6:	mov    esi,DWORD PTR [rax+0x1c]
  414dd9:	call   0x41d490
  414dde:	test   eax,eax
  414de0:	mov    r9d,DWORD PTR [rsp+0x28]
  414de5:	mov    r8d,DWORD PTR [rsp+0x2c]
  414dea:	jne    0x414dfb
  414dec:	movsxd rdx,DWORD PTR [rsp+0x30]
  414df1:	mov    QWORD PTR [rbx],rdx
  414df4:	mov    edx,DWORD PTR [rsp+0x34]
  414df8:	mov    DWORD PTR [rbx+0x8],edx
  414dfb:	mov    rdx,QWORD PTR [rip+0x1367e]        # 0x428480
  414e02:	mov    DWORD PTR [rdx],r8d
  414e05:	mov    DWORD PTR [rdx+0x4],r15d
  414e09:	mov    DWORD PTR [rdx+0x8],r14d
  414e0d:	mov    DWORD PTR [rdx+0xc],r13d
  414e11:	mov    DWORD PTR [rdx+0x10],r12d
  414e15:	mov    DWORD PTR [rdx+0x14],ebp
  414e18:	mov    DWORD PTR [rdx+0x18],edi
  414e1b:	mov    DWORD PTR [rdx+0x1c],esi
  414e1e:	mov    DWORD PTR [rdx+0x20],r9d
  414e22:	add    rsp,0x48
  414e26:	pop    rbx
  414e27:	pop    rsi
  414e28:	pop    rdi
  414e29:	pop    rbp
  414e2a:	pop    r12
  414e2c:	pop    r13
  414e2e:	pop    r14
  414e30:	pop    r15
  414e32:	ret    
  414e33:	nop
  414e34:	nop
  414e35:	nop
  414e36:	nop
  414e37:	nop
  414e38:	nop
  414e39:	nop
  414e3a:	nop
  414e3b:	nop
  414e3c:	nop
  414e3d:	nop
  414e3e:	nop
  414e3f:	nop
  414e40:	push   rbx
  414e41:	sub    rsp,0x20
  414e45:	call   0x4224e8
  414e4a:	test   rax,rax
  414e4d:	mov    rbx,rax
  414e50:	je     0x414e60
  414e52:	mov    rax,rbx
  414e55:	add    rsp,0x20
  414e59:	pop    rbx
  414e5a:	ret    
  414e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  414e60:	call   QWORD PTR [rip+0x8760e]        # 0x49c474
  414e66:	mov    DWORD PTR [rax],0xc
  414e6c:	mov    rax,rbx
  414e6f:	add    rsp,0x20
  414e73:	pop    rbx
  414e74:	ret    
  414e75:	nop
  414e76:	nop
  414e77:	nop
  414e78:	nop
  414e79:	nop
  414e7a:	nop
  414e7b:	nop
  414e7c:	nop
  414e7d:	nop
  414e7e:	nop
  414e7f:	nop
  414e80:	push   rdi
  414e81:	push   rsi
  414e82:	push   rbx
  414e83:	mov    esi,0x1
  414e88:	mov    r10d,0x1
  414e8e:	xor    r11d,r11d
  414e91:	mov    rax,0xffffffffffffffff
  414e98:	nop    DWORD PTR [rax+rax*1+0x0]
  414ea0:	lea    r9,[r11+r10*1]
  414ea4:	cmp    r9,rdx
  414ea7:	jae    0x414ed4
  414ea9:	lea    rbx,[rcx+rax*1]
  414ead:	movzx  edi,BYTE PTR [rbx+r10*1]
  414eb2:	cmp    BYTE PTR [rcx+r9*1],dil
  414eb6:	jae    0x414f40
  414ebc:	mov    r11,r9
  414ebf:	mov    r10d,0x1
  414ec5:	mov    rsi,r9
  414ec8:	lea    r9,[r11+r10*1]
  414ecc:	sub    rsi,rax
  414ecf:	cmp    r9,rdx
  414ed2:	jb     0x414ea9
  414ed4:	mov    QWORD PTR [r8],rsi
  414ed7:	mov    edi,0x1
  414edc:	mov    r10d,0x1
  414ee2:	xor    r11d,r11d
  414ee5:	mov    rbx,0xffffffffffffffff
  414eec:	nop    DWORD PTR [rax+0x0]
  414ef0:	lea    r9,[r11+r10*1]
  414ef4:	cmp    rdx,r9
  414ef7:	jbe    0x414f20
  414ef9:	lea    rsi,[rcx+rbx*1]
  414efd:	movzx  esi,BYTE PTR [rsi+r10*1]
  414f02:	cmp    BYTE PTR [rcx+r9*1],sil
  414f06:	jbe    0x414f60
  414f08:	mov    r11,r9
  414f0b:	mov    r10d,0x1
  414f11:	mov    rdi,r9
  414f14:	lea    r9,[r11+r10*1]
  414f18:	sub    rdi,rbx
  414f1b:	cmp    rdx,r9
  414f1e:	ja     0x414ef9
  414f20:	add    rbx,0x1
  414f24:	add    rax,0x1
  414f28:	cmp    rbx,rax
  414f2b:	jb     0x414f33
  414f2d:	mov    QWORD PTR [r8],rdi
  414f30:	mov    rax,rbx
  414f33:	pop    rbx
  414f34:	pop    rsi
  414f35:	pop    rdi
  414f36:	ret    
  414f37:	nop    WORD PTR [rax+rax*1+0x0]
  414f40:	je     0x414f80
  414f42:	mov    rax,r11
  414f45:	mov    esi,0x1
  414f4a:	add    r11,0x1
  414f4e:	mov    r10d,0x1
  414f54:	jmp    0x414ea0
  414f59:	nop    DWORD PTR [rax+0x0]
  414f60:	je     0x414f90
  414f62:	mov    rbx,r11
  414f65:	mov    edi,0x1
  414f6a:	add    r11,0x1
  414f6e:	mov    r10d,0x1
  414f74:	jmp    0x414ef0
  414f79:	nop    DWORD PTR [rax+0x0]
  414f80:	cmp    r10,rsi
  414f83:	je     0x414fa0
  414f85:	add    r10,0x1
  414f89:	jmp    0x414ea0
  414f8e:	xchg   ax,ax
  414f90:	cmp    r10,rdi
  414f93:	je     0x414fb1
  414f95:	add    r10,0x1
  414f99:	jmp    0x414ef0
  414f9e:	xchg   ax,ax
  414fa0:	mov    rsi,r10
  414fa3:	mov    r11,r9
  414fa6:	mov    r10d,0x1
  414fac:	jmp    0x414ea0
  414fb1:	mov    rdi,r10
  414fb4:	mov    r11,r9
  414fb7:	mov    r10d,0x1
  414fbd:	jmp    0x414ef0
  414fc2:	nop    DWORD PTR [rax+0x0]
  414fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fd0:	push   r15
  414fd2:	push   r14
  414fd4:	push   r13
  414fd6:	push   r12
  414fd8:	push   rbp
  414fd9:	push   rdi
  414fda:	push   rsi
  414fdb:	push   rbx
  414fdc:	sub    rsp,0x848
  414fe3:	cmp    r9,0x2
  414fe7:	mov    rbp,rcx
  414fea:	mov    r13,rdx
  414fed:	mov    rbx,r8
  414ff0:	mov    rdi,r9
  414ff3:	ja     0x415235
  414ff9:	lea    r12,[r9-0x1]
  414ffd:	mov    QWORD PTR [rsp+0x38],0x1
  415006:	mov    r14d,0x1
  41500c:	mov    rsi,r12
  41500f:	lea    r10,[rsp+0x40]
  415014:	lea    rax,[rsp+0x840]
  41501c:	nop    DWORD PTR [rax+0x0]
  415020:	mov    QWORD PTR [r10],rdi
  415023:	add    r10,0x8
  415027:	cmp    r10,rax
  41502a:	jne    0x415020
  41502c:	xor    eax,eax
  41502e:	test   rdi,rdi
  415031:	je     0x41504b
  415033:	movzx  edx,BYTE PTR [rbx+rax*1]
  415037:	mov    rcx,rsi
  41503a:	sub    rcx,rax
  41503d:	add    rax,0x1
  415041:	cmp    rax,rdi
  415044:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  415049:	jne    0x415033
  41504b:	lea    rdx,[rbx+r14*1]
  41504f:	mov    r8,r12
  415052:	mov    rcx,rbx
  415055:	call   0x4224e0
  41505a:	test   eax,eax
  41505c:	jne    0x41515a
  415062:	lea    rcx,[r12-0x1]
  415067:	mov    r11d,0x1
  41506d:	mov    r8,rdi
  415070:	sub    r11,r12
  415073:	xor    eax,eax
  415075:	xor    edx,edx
  415077:	sub    r8,r14
  41507a:	lea    r15,[rbp+rcx*1+0x0]
  41507f:	mov    QWORD PTR [rsp+0x28],r11
  415084:	sub    r13,rdi
  415087:	jmp    0x4150aa
  415089:	nop    DWORD PTR [rax+0x0]
  415090:	cmp    r14,r9
  415093:	jbe    0x41509c
  415095:	test   rax,rax
  415098:	cmovne r9,r8
  41509c:	add    rdx,r9
  41509f:	xor    eax,eax
  4150a1:	cmp    r13,rdx
  4150a4:	jb     0x415146
  4150aa:	lea    r10,[rbp+rdx*1+0x0]
  4150af:	movzx  r9d,BYTE PTR [r10+rsi*1]
  4150b4:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  4150b9:	test   r9,r9
  4150bc:	jne    0x415090
  4150be:	cmp    rax,r12
  4150c1:	mov    r9,r12
  4150c4:	cmovae r9,rax
  4150c8:	cmp    r9,rsi
  4150cb:	jae    0x4150f4
  4150cd:	lea    rdi,[rbp+r9*1+0x0]
  4150d2:	movzx  edi,BYTE PTR [rdi+rdx*1]
  4150d6:	cmp    BYTE PTR [rbx+r9*1],dil
  4150da:	je     0x4150eb
  4150dc:	jmp    0x415150
  4150de:	xchg   ax,ax
  4150e0:	movzx  edi,BYTE PTR [r10+r9*1]
  4150e5:	cmp    BYTE PTR [rbx+r9*1],dil
  4150e9:	jne    0x415150
  4150eb:	add    r9,0x1
  4150ef:	cmp    r9,rsi
  4150f2:	jb     0x4150e0
  4150f4:	cmp    r12,rax
  4150f7:	jbe    0x415256
  4150fd:	movzx  edi,BYTE PTR [r15+rdx*1]
  415102:	cmp    BYTE PTR [rbx+rcx*1],dil
  415106:	jne    0x415256
  41510c:	mov    r9,rcx
  41510f:	jmp    0x415125
  415111:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  415117:	lea    rdi,[r9-0x1]
  41511b:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  415120:	jne    0x41512a
  415122:	mov    r9,rdi
  415125:	cmp    r9,rax
  415128:	jne    0x415111
  41512a:	add    rax,0x1
  41512e:	cmp    rax,r9
  415131:	ja     0x4151f5
  415137:	add    rdx,r14
  41513a:	mov    rax,r8
  41513d:	cmp    r13,rdx
  415140:	jae    0x4150aa
  415146:	xor    eax,eax
  415148:	jmp    0x4151f8
  41514d:	nop    DWORD PTR [rax]
  415150:	add    rdx,QWORD PTR [rsp+0x28]
  415155:	jmp    0x41509c
  41515a:	mov    rax,rdi
  41515d:	lea    rcx,[r12-0x1]
  415162:	mov    r11d,0x1
  415168:	sub    rax,r12
  41516b:	cmp    rax,r12
  41516e:	lea    r14,[rbp+rcx*1+0x0]
  415173:	cmovb  rax,r12
  415177:	sub    r11,r12
  41517a:	sub    r13,rdi
  41517d:	lea    r8,[rax+0x1]
  415181:	xor    eax,eax
  415183:	lea    r10,[rbp+rax*1+0x0]
  415188:	movzx  edx,BYTE PTR [r10+rsi*1]
  41518d:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  415192:	test   rdx,rdx
  415195:	jne    0x415210
  415197:	cmp    r12,rsi
  41519a:	jae    0x4151c4
  41519c:	movzx  edx,BYTE PTR [r10+r12*1]
  4151a1:	mov    r9,r12
  4151a4:	cmp    BYTE PTR [rbx+r12*1],dl
  4151a8:	je     0x4151bb
  4151aa:	jmp    0x415220
  4151ac:	nop    DWORD PTR [rax+0x0]
  4151b0:	movzx  edx,BYTE PTR [r10+r9*1]
  4151b5:	cmp    BYTE PTR [rbx+r9*1],dl
  4151b9:	jne    0x415220
  4151bb:	add    r9,0x1
  4151bf:	cmp    r9,rsi
  4151c2:	jb     0x4151b0
  4151c4:	cmp    rcx,0xffffffffffffffff
  4151c8:	mov    r9,rcx
  4151cb:	je     0x4151f5
  4151cd:	movzx  edx,BYTE PTR [r14+rax*1]
  4151d2:	cmp    BYTE PTR [rbx+rcx*1],dl
  4151d5:	je     0x4151eb
  4151d7:	jmp    0x415230
  4151d9:	nop    DWORD PTR [rax+0x0]
  4151e0:	movzx  edx,BYTE PTR [r10+r9*1]
  4151e5:	cmp    BYTE PTR [rbx+r9*1],dl
  4151e9:	jne    0x415230
  4151eb:	sub    r9,0x1
  4151ef:	cmp    r9,0xffffffffffffffff
  4151f3:	jne    0x4151e0
  4151f5:	mov    rax,r10
  4151f8:	add    rsp,0x848
  4151ff:	pop    rbx
  415200:	pop    rsi
  415201:	pop    rdi
  415202:	pop    rbp
  415203:	pop    r12
  415205:	pop    r13
  415207:	pop    r14
  415209:	pop    r15
  41520b:	ret    
  41520c:	nop    DWORD PTR [rax+0x0]
  415210:	add    rax,rdx
  415213:	cmp    r13,rax
  415216:	jae    0x415183
  41521c:	xor    eax,eax
  41521e:	jmp    0x4151f8
  415220:	add    rax,r11
  415223:	add    rax,r9
  415226:	jmp    0x415213
  415228:	nop    DWORD PTR [rax+rax*1+0x0]
  415230:	add    rax,r8
  415233:	jmp    0x415213
  415235:	lea    r8,[rsp+0x38]
  41523a:	mov    rdx,r9
  41523d:	mov    rcx,rbx
  415240:	lea    rsi,[rdi-0x1]
  415244:	call   0x414e80
  415249:	mov    r14,QWORD PTR [rsp+0x38]
  41524e:	mov    r12,rax
  415251:	jmp    0x41500f
  415256:	mov    r9,r12
  415259:	jmp    0x41512a
  41525e:	xchg   ax,ax
  415260:	push   r15
  415262:	push   r14
  415264:	push   r13
  415266:	push   r12
  415268:	push   rbp
  415269:	push   rdi
  41526a:	push   rsi
  41526b:	push   rbx
  41526c:	sub    rsp,0x48
  415270:	test   r9,r9
  415273:	mov    rax,rcx
  415276:	je     0x4153e0
  41527c:	cmp    r9,rdx
  41527f:	ja     0x4153d5
  415285:	cmp    r9,0x1f
  415289:	mov    rsi,r9
  41528c:	mov    rbx,r8
  41528f:	mov    rbp,rdx
  415292:	mov    r12,rcx
  415295:	ja     0x4153f1
  41529b:	movzx  edx,BYTE PTR [r8]
  41529f:	mov    r8,rbp
  4152a2:	call   0x4174e0
  4152a7:	test   rax,rax
  4152aa:	mov    rdi,rax
  4152ad:	je     0x415410
  4152b3:	cmp    rsi,0x1
  4152b7:	je     0x415410
  4152bd:	mov    rcx,r12
  4152c0:	sub    rcx,rax
  4152c3:	xor    eax,eax
  4152c5:	lea    r12,[rcx+rbp*1]
  4152c9:	cmp    rsi,r12
  4152cc:	ja     0x4153e0
  4152d2:	cmp    rsi,0x2
  4152d6:	ja     0x4154cf
  4152dc:	lea    rbp,[rsi-0x1]
  4152e0:	mov    QWORD PTR [rsp+0x38],0x1
  4152e9:	mov    r13d,0x1
  4152ef:	lea    rdx,[rbx+r13*1]
  4152f3:	mov    r8,rbp
  4152f6:	mov    rcx,rbx
  4152f9:	call   0x4224e0
  4152fe:	test   eax,eax
  415300:	jne    0x415415
  415306:	lea    r9,[rbp-0x1]
  41530a:	mov    r15,rsi
  41530d:	mov    r11d,0x1
  415313:	xor    ecx,ecx
  415315:	xor    r8d,r8d
  415318:	sub    r15,r13
  41531b:	lea    rax,[rdi+r9*1]
  41531f:	sub    r11,rbp
  415322:	sub    r12,rsi
  415325:	mov    QWORD PTR [rsp+0x28],rax
  41532a:	nop    WORD PTR [rax+rax*1+0x0]
  415330:	cmp    r8,rbp
  415333:	mov    r10,rbp
  415336:	cmovae r10,r8
  41533a:	cmp    rsi,r10
  41533d:	jbe    0x415378
  41533f:	lea    rax,[rdi+r10*1]
  415343:	movzx  eax,BYTE PTR [rax+rcx*1]
  415347:	cmp    BYTE PTR [rbx+r10*1],al
  41534b:	jne    0x415400
  415351:	lea    rax,[rdi+rcx*1]
  415355:	jmp    0x41536f
  415357:	nop    WORD PTR [rax+rax*1+0x0]
  415360:	movzx  edx,BYTE PTR [rax+r10*1]
  415365:	cmp    BYTE PTR [rbx+r10*1],dl
  415369:	jne    0x415400
  41536f:	add    r10,0x1
  415373:	cmp    rsi,r10
  415376:	ja     0x415360
  415378:	cmp    rbp,r8
  41537b:	jbe    0x4154c7
  415381:	mov    rax,QWORD PTR [rsp+0x28]
  415386:	movzx  eax,BYTE PTR [rax+rcx*1]
  41538a:	cmp    BYTE PTR [rbx+r9*1],al
  41538e:	jne    0x4154c7
  415394:	mov    rdx,r9
  415397:	lea    r10,[rdi+rcx*1]
  41539b:	jmp    0x4153b4
  41539d:	nop    DWORD PTR [rax]
  4153a0:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  4153a6:	lea    rax,[rdx-0x1]
  4153aa:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  4153af:	jne    0x4153b9
  4153b1:	mov    rdx,rax
  4153b4:	cmp    rdx,r8
  4153b7:	jne    0x4153a0
  4153b9:	add    r8,0x1
  4153bd:	cmp    r8,rdx
  4153c0:	ja     0x4154ec
  4153c6:	add    rcx,r13
  4153c9:	mov    r8,r15
  4153cc:	cmp    r12,rcx
  4153cf:	jae    0x415330
  4153d5:	xor    eax,eax
  4153d7:	nop    WORD PTR [rax+rax*1+0x0]
  4153e0:	add    rsp,0x48
  4153e4:	pop    rbx
  4153e5:	pop    rsi
  4153e6:	pop    rdi
  4153e7:	pop    rbp
  4153e8:	pop    r12
  4153ea:	pop    r13
  4153ec:	pop    r14
  4153ee:	pop    r15
  4153f0:	ret    
  4153f1:	call   0x414fd0
  4153f6:	jmp    0x4153e0
  4153f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415400:	add    rcx,r11
  415403:	xor    r8d,r8d
  415406:	add    rcx,r10
  415409:	jmp    0x4153cc
  41540b:	nop    DWORD PTR [rax+rax*1+0x0]
  415410:	mov    rax,rdi
  415413:	jmp    0x4153e0
  415415:	mov    rax,rsi
  415418:	lea    r8,[rbp-0x1]
  41541c:	mov    r13d,0x1
  415422:	sub    rax,rbp
  415425:	lea    r9,[rdi+rbp*1]
  415429:	cmp    rax,rbp
  41542c:	lea    r14,[rdi+r8*1]
  415430:	cmovb  rax,rbp
  415434:	sub    r13,rbp
  415437:	sub    r12,rsi
  41543a:	lea    r11,[rax+0x1]
  41543e:	xor    eax,eax
  415440:	mov    QWORD PTR [rsp+0x38],r11
  415445:	cmp    rsi,rbp
  415448:	jbe    0x415474
  41544a:	movzx  ecx,BYTE PTR [r9+rax*1]
  41544f:	mov    r10,rbp
  415452:	lea    rdx,[rdi+rax*1]
  415456:	cmp    BYTE PTR [rbx+rbp*1],cl
  415459:	je     0x41546b
  41545b:	jmp    0x4154b0
  41545d:	nop    DWORD PTR [rax]
  415460:	movzx  ecx,BYTE PTR [rdx+r10*1]
  415465:	cmp    BYTE PTR [rbx+r10*1],cl
  415469:	jne    0x4154b0
  41546b:	add    r10,0x1
  41546f:	cmp    rsi,r10
  415472:	ja     0x415460
  415474:	cmp    r8,0xffffffffffffffff
  415478:	mov    rdx,r8
  41547b:	je     0x4154f5
  41547d:	movzx  ecx,BYTE PTR [r14+rax*1]
  415482:	cmp    BYTE PTR [rbx+r8*1],cl
  415486:	jne    0x4154c2
  415488:	lea    rcx,[rdi+rax*1]
  41548c:	jmp    0x41549b
  41548e:	xchg   ax,ax
  415490:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  415495:	cmp    BYTE PTR [rbx+rdx*1],r15b
  415499:	jne    0x4154c2
  41549b:	sub    rdx,0x1
  41549f:	cmp    rdx,0xffffffffffffffff
  4154a3:	jne    0x415490
  4154a5:	mov    rax,rcx
  4154a8:	jmp    0x4153e0
  4154ad:	nop    DWORD PTR [rax]
  4154b0:	add    rax,r13
  4154b3:	add    rax,r10
  4154b6:	cmp    r12,rax
  4154b9:	jae    0x415445
  4154bb:	xor    eax,eax
  4154bd:	jmp    0x4153e0
  4154c2:	add    rax,r11
  4154c5:	jmp    0x4154b6
  4154c7:	mov    rdx,rbp
  4154ca:	jmp    0x4153b9
  4154cf:	lea    r8,[rsp+0x38]
  4154d4:	mov    rdx,rsi
  4154d7:	mov    rcx,rbx
  4154da:	call   0x414e80
  4154df:	mov    r13,QWORD PTR [rsp+0x38]
  4154e4:	mov    rbp,rax
  4154e7:	jmp    0x4152ef
  4154ec:	lea    rax,[rdi+rcx*1]
  4154f0:	jmp    0x4153e0
  4154f5:	lea    rcx,[rdi+rax*1]
  4154f9:	jmp    0x4154a5
  4154fb:	nop
  4154fc:	nop
  4154fd:	nop
  4154fe:	nop
  4154ff:	nop
  415500:	push   rbx
  415501:	sub    rsp,0x20
  415505:	test   rcx,rcx
  415508:	je     0x415520
  41550a:	call   0x4224a8
  41550f:	mov    rbx,rax
  415512:	test   rbx,rbx
  415515:	je     0x415530
  415517:	mov    rax,rbx
  41551a:	add    rsp,0x20
  41551e:	pop    rbx
  41551f:	ret    
  415520:	mov    rcx,rdx
  415523:	call   0x4224e8
  415528:	mov    rbx,rax
  41552b:	test   rbx,rbx
  41552e:	jne    0x415517
  415530:	call   QWORD PTR [rip+0x86f3e]        # 0x49c474
  415536:	mov    DWORD PTR [rax],0xc
  41553c:	mov    rax,rbx
  41553f:	add    rsp,0x20
  415543:	pop    rbx
  415544:	ret    
  415545:	nop
  415546:	nop
  415547:	nop
  415548:	nop
  415549:	nop
  41554a:	nop
  41554b:	nop
  41554c:	nop
  41554d:	nop
  41554e:	nop
  41554f:	nop
  415550:	push   rbp
  415551:	push   rdi
  415552:	push   rsi
  415553:	push   rbx
  415554:	sub    rsp,0x38
  415558:	mov    QWORD PTR [rsp+0x78],r9
  41555d:	mov    QWORD PTR [rsp+0x20],rdx
  415562:	lea    r9,[rsp+0x78]
  415567:	mov    rbp,rdx
  41556a:	lea    rdx,[rsp+0x20]
  41556f:	mov    rdi,rcx
  415572:	mov    QWORD PTR [rsp+0x28],r9
  415577:	call   0x415610
  41557c:	test   rax,rax
  41557f:	mov    rsi,rax
  415582:	mov    rbx,QWORD PTR [rsp+0x20]
  415587:	je     0x4155e5
  415589:	cmp    rax,rdi
  41558c:	je     0x41559b
  41558e:	test   rbp,rbp
  415591:	jne    0x4155b0
  415593:	mov    rcx,rsi
  415596:	call   0x422528
  41559b:	cmp    rbx,0x7fffffff
  4155a2:	ja     0x4155d2
  4155a4:	mov    eax,ebx
  4155a6:	add    rsp,0x38
  4155aa:	pop    rbx
  4155ab:	pop    rsi
  4155ac:	pop    rdi
  4155ad:	pop    rbp
  4155ae:	ret    
  4155af:	nop
  4155b0:	lea    rax,[rbp-0x1]
  4155b4:	cmp    rbp,rbx
  4155b7:	mov    rdx,rsi
  4155ba:	mov    rcx,rdi
  4155bd:	cmova  rax,rbx
  4155c1:	mov    rbp,rax
  4155c4:	mov    r8,rax
  4155c7:	call   0x4224d8
  4155cc:	mov    BYTE PTR [rdi+rbp*1],0x0
  4155d0:	jmp    0x415593
  4155d2:	call   QWORD PTR [rip+0x86e9c]        # 0x49c474
  4155d8:	mov    DWORD PTR [rax],0x84
  4155de:	mov    eax,0xffffffff
  4155e3:	jmp    0x4155a6
  4155e5:	mov    eax,0xffffffff
  4155ea:	jmp    0x4155a6
  4155ec:	nop
  4155ed:	nop
  4155ee:	nop
  4155ef:	nop
  4155f0:	sub    rsp,0x38
  4155f4:	mov    QWORD PTR [rsp+0x58],r9
  4155f9:	lea    r9,[rsp+0x58]
  4155fe:	mov    QWORD PTR [rsp+0x28],r9
  415603:	call   0x41da10
  415608:	add    rsp,0x38
  41560c:	ret    
  41560d:	nop    DWORD PTR [rax]
  415610:	push   rbp
  415611:	push   r15
  415613:	push   r14
  415615:	push   r13
  415617:	push   r12
  415619:	push   rdi
  41561a:	push   rsi
  41561b:	push   rbx
  41561c:	sub    rsp,0x518
  415623:	lea    rbp,[rsp+0x80]
  41562b:	lea    rax,[rbp+0x110]
  415632:	lea    rdi,[rbp+0x200]
  415639:	mov    rbx,r8
  41563c:	mov    QWORD PTR [rbp+0x4e0],rcx
  415643:	mov    QWORD PTR [rbp+0x4e8],rdx
  41564a:	mov    rcx,rbx
  41564d:	mov    rdx,rdi
  415650:	mov    r8,rax
  415653:	mov    QWORD PTR [rbp+0x60],rdi
  415657:	mov    rsi,r9
  41565a:	mov    QWORD PTR [rbp+0x58],rax
  41565e:	mov    rdi,rax
  415661:	call   0x417680
  415666:	test   eax,eax
  415668:	js     0x4166b0
  41566e:	mov    rdx,rdi
  415671:	mov    rcx,rsi
  415674:	call   0x417590
  415679:	test   eax,eax
  41567b:	js     0x4169f0
  415681:	mov    rax,QWORD PTR [rbp+0x210]
  415688:	mov    rdx,0xffffffffffffffff
  41568f:	add    rax,0x7
  415693:	cmp    rax,0x7
  415697:	cmovb  rax,rdx
  41569b:	add    rax,QWORD PTR [rbp+0x218]
  4156a2:	jb     0x415ae0
  4156a8:	lea    rcx,[rax+0x6]
  4156ac:	cmp    rax,rcx
  4156af:	ja     0x415ae0
  4156b5:	cmp    rcx,0xf9f
  4156bc:	ja     0x416420
  4156c2:	add    rax,0x24
  4156c6:	and    rax,0xfffffffffffffff0
  4156ca:	call   0x41ce10
  4156cf:	sub    rsp,rax
  4156d2:	cmp    QWORD PTR [rbp+0x4e0],0x0
  4156da:	mov    QWORD PTR [rbp+0x50],0x0
  4156e2:	lea    rax,[rsp+0x40]
  4156e7:	mov    QWORD PTR [rbp+0x90],rax
  4156ee:	je     0x416458
  4156f4:	mov    rax,QWORD PTR [rbp+0x4e8]
  4156fb:	mov    r12,QWORD PTR [rax]
  4156fe:	mov    rax,QWORD PTR [rbp+0x4e0]
  415705:	mov    r13,QWORD PTR [rbp+0x208]
  41570c:	mov    rdi,rbx
  41570f:	xor    r15d,r15d
  415712:	mov    QWORD PTR [rbp+0x80],0x0
  41571d:	mov    QWORD PTR [rbp+0x98],rax
  415724:	lea    rax,[rbp+0xbc]
  41572b:	mov    rsi,QWORD PTR [r13+0x0]
  41572f:	mov    QWORD PTR [rbp+0x70],rax
  415733:	lea    rax,[rbp+0xa0]
  41573a:	cmp    rsi,rdi
  41573d:	mov    QWORD PTR [rbp+0x40],rax
  415741:	lea    rax,[rbp+0xd0]
  415748:	mov    QWORD PTR [rbp+0x48],rax
  41574c:	lea    rax,[rbp+0xb4]
  415753:	mov    QWORD PTR [rbp+0x38],rax
  415757:	je     0x415c23
  41575d:	sub    rsi,rdi
  415760:	mov    rax,0xffffffffffffffff
  415767:	mov    r14,rsi
  41576a:	add    r14,r15
  41576d:	cmovb  r14,rax
  415771:	cmp    r12,r14
  415774:	jae    0x415c32
  41577a:	test   r12,r12
  41577d:	je     0x415b40
  415783:	js     0x416550
  415789:	add    r12,r12
  41578c:	cmp    r12,r14
  41578f:	cmovb  r12,r14
  415793:	cmp    r12,0xffffffffffffffff
  415797:	je     0x416550
  41579d:	mov    rax,QWORD PTR [rbp+0x98]
  4157a4:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4157ab:	sete   r8b
  4157af:	test   rax,rax
  4157b2:	mov    BYTE PTR [rbp+0x88],r8b
  4157b9:	je     0x415b50
  4157bf:	test   r8b,r8b
  4157c2:	jne    0x415b50
  4157c8:	mov    rcx,QWORD PTR [rbp+0x98]
  4157cf:	mov    rdx,r12
  4157d2:	call   0x415500
  4157d7:	movzx  r8d,BYTE PTR [rbp+0x88]
  4157df:	mov    rbx,rax
  4157e2:	test   rbx,rbx
  4157e5:	je     0x416550
  4157eb:	test   r15,r15
  4157ee:	je     0x415807
  4157f0:	test   r8b,r8b
  4157f3:	je     0x415807
  4157f5:	mov    rdx,QWORD PTR [rbp+0x98]
  4157fc:	mov    r8,r15
  4157ff:	mov    rcx,rbx
  415802:	call   0x4224d8
  415807:	lea    rcx,[rbx+r15*1]
  41580b:	mov    r8,rsi
  41580e:	mov    rdx,rdi
  415811:	call   0x4224d8
  415816:	mov    rax,QWORD PTR [rbp+0x80]
  41581d:	cmp    QWORD PTR [rbp+0x200],rax
  415824:	je     0x416a35
  41582a:	movzx  edx,BYTE PTR [r13+0x48]
  41582f:	cmp    dl,0x25
  415832:	je     0x415b70
  415838:	mov    rax,QWORD PTR [r13+0x50]
  41583c:	cmp    rax,0xffffffffffffffff
  415840:	je     0x416360
  415846:	cmp    dl,0x6e
  415849:	je     0x415c40
  41584f:	shl    rax,0x5
  415853:	cmp    dl,0x73
  415856:	mov    r10,QWORD PTR [rbp+0x118]
  41585d:	je     0x415e21
  415863:	mov    eax,DWORD PTR [r10+rax*1]
  415867:	mov    DWORD PTR [rbp+0x88],eax
  41586d:	mov    rcx,QWORD PTR [r13+0x18]
  415871:	mov    r9,QWORD PTR [r13+0x20]
  415875:	mov    r8d,DWORD PTR [r13+0x10]
  415879:	cmp    rcx,r9
  41587c:	je     0x416680
  415882:	mov    rax,QWORD PTR [r13+0x28]
  415886:	cmp    rax,0xffffffffffffffff
  41588a:	je     0x416560
  415890:	shl    rax,0x5
  415894:	add    rax,r10
  415897:	cmp    DWORD PTR [rax],0x5
  41589a:	jne    0x416360
  4158a0:	movsxd r15,DWORD PTR [rax+0x10]
  4158a4:	test   r15d,r15d
  4158a7:	js     0x416670
  4158ad:	mov    rdx,QWORD PTR [r13+0x30]
  4158b1:	mov    rcx,QWORD PTR [r13+0x38]
  4158b5:	cmp    rdx,rcx
  4158b8:	je     0x415e10
  4158be:	mov    rax,QWORD PTR [r13+0x40]
  4158c2:	cmp    rax,0xffffffffffffffff
  4158c6:	je     0x4165b0
  4158cc:	shl    rax,0x5
  4158d0:	add    r10,rax
  4158d3:	cmp    DWORD PTR [r10],0x5
  4158d7:	jne    0x416360
  4158dd:	movsxd rsi,DWORD PTR [r10+0x10]
  4158e1:	test   esi,esi
  4158e3:	js     0x415e10
  4158e9:	mov    DWORD PTR [rbp+0x28],0x1
  4158f0:	mov    rax,QWORD PTR [rbp+0x90]
  4158f7:	test   r8b,0x1
  4158fb:	mov    BYTE PTR [rax],0x25
  4158fe:	lea    rdi,[rax+0x1]
  415902:	je     0x415913
  415904:	mov    rax,QWORD PTR [rbp+0x90]
  41590b:	lea    rdi,[rax+0x2]
  41590f:	mov    BYTE PTR [rax+0x1],0x27
  415913:	test   r8b,0x2
  415917:	je     0x415920
  415919:	mov    BYTE PTR [rdi],0x2d
  41591c:	add    rdi,0x1
  415920:	test   r8b,0x4
  415924:	je     0x41592d
  415926:	mov    BYTE PTR [rdi],0x2b
  415929:	add    rdi,0x1
  41592d:	test   r8b,0x8
  415931:	je     0x41593a
  415933:	mov    BYTE PTR [rdi],0x20
  415936:	add    rdi,0x1
  41593a:	test   r8b,0x10
  41593e:	je     0x415947
  415940:	mov    BYTE PTR [rdi],0x23
  415943:	add    rdi,0x1
  415947:	and    r8d,0x20
  41594b:	je     0x415954
  41594d:	mov    BYTE PTR [rdi],0x30
  415950:	add    rdi,0x1
  415954:	mov    rdx,QWORD PTR [r13+0x18]
  415958:	mov    r8,QWORD PTR [r13+0x20]
  41595c:	cmp    rdx,r8
  41595f:	je     0x415983
  415961:	mov    r9,r8
  415964:	mov    rcx,rdi
  415967:	sub    r9,rdx
  41596a:	mov    r8,r9
  41596d:	mov    QWORD PTR [rbp+0x98],r9
  415974:	call   0x4224d8
  415979:	mov    r9,QWORD PTR [rbp+0x98]
  415980:	add    rdi,r9
  415983:	mov    rdx,QWORD PTR [r13+0x30]
  415987:	mov    r8,QWORD PTR [r13+0x38]
  41598b:	cmp    rdx,r8
  41598e:	je     0x4159b2
  415990:	mov    r9,r8
  415993:	mov    rcx,rdi
  415996:	sub    r9,rdx
  415999:	mov    r8,r9
  41599c:	mov    QWORD PTR [rbp+0x98],r9
  4159a3:	call   0x4224d8
  4159a8:	mov    r9,QWORD PTR [rbp+0x98]
  4159af:	add    rdi,r9
  4159b2:	mov    eax,DWORD PTR [rbp+0x88]
  4159b8:	lea    ecx,[rax-0x7]
  4159bb:	cmp    ecx,0x9
  4159be:	ja     0x4159e3
  4159c0:	mov    eax,0x1
  4159c5:	shl    rax,cl
  4159c8:	test   eax,0x283
  4159cd:	jne    0x415fc4
  4159d3:	test   al,0x20
  4159d5:	jne    0x4166c0
  4159db:	test   al,0xc
  4159dd:	jne    0x416730
  4159e3:	movzx  eax,BYTE PTR [r13+0x48]
  4159e8:	mov    BYTE PTR [rdi+0x1],0x0
  4159ec:	mov    BYTE PTR [rdi],al
  4159ee:	mov    rax,QWORD PTR [r13+0x28]
  4159f2:	cmp    rax,0xffffffffffffffff
  4159f6:	je     0x4163e0
  4159fc:	shl    rax,0x5
  415a00:	add    rax,QWORD PTR [rbp+0x118]
  415a07:	cmp    DWORD PTR [rax],0x5
  415a0a:	jne    0x416360
  415a10:	mov    eax,DWORD PTR [rax+0x10]
  415a13:	mov    edx,0x1
  415a18:	mov    DWORD PTR [rbp+0xc0],eax
  415a1e:	mov    rax,QWORD PTR [r13+0x40]
  415a22:	cmp    rax,0xffffffffffffffff
  415a26:	je     0x4163d0
  415a2c:	shl    rax,0x5
  415a30:	add    rax,QWORD PTR [rbp+0x118]
  415a37:	cmp    DWORD PTR [rax],0x5
  415a3a:	jne    0x416360
  415a40:	mov    eax,DWORD PTR [rax+0x10]
  415a43:	lea    ecx,[rdx+0x1]
  415a46:	mov    DWORD PTR [rbp+0x78],ecx
  415a49:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  415a50:	lea    rax,[r14+0x2]
  415a54:	mov    rdx,0xffffffffffffffff
  415a5b:	cmp    r14,rax
  415a5e:	cmovbe rdx,rax
  415a62:	cmp    r12,rdx
  415a65:	jae    0x4163c0
  415a6b:	test   r12,r12
  415a6e:	je     0x415c70
  415a74:	js     0x415a91
  415a76:	add    r12,r12
  415a79:	cmp    r14,rax
  415a7c:	ja     0x415a91
  415a7e:	cmp    r12,rax
  415a81:	jae    0x415c88
  415a87:	cmp    rax,0xffffffffffffffff
  415a8b:	jne    0x417395
  415a91:	mov    rax,QWORD PTR [rip+0x869dc]        # 0x49c474
  415a98:	mov    r15,rbx
  415a9b:	mov    QWORD PTR [rbp+0x68],rax
  415a9f:	mov    QWORD PTR [rbp+0x98],r15
  415aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ab0:	mov    rax,QWORD PTR [rbp+0x98]
  415ab7:	test   rax,rax
  415aba:	je     0x415ac9
  415abc:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415ac3:	jne    0x416790
  415ac9:	mov    rax,QWORD PTR [rbp+0x50]
  415acd:	test   rax,rax
  415ad0:	je     0x415aeb
  415ad2:	mov    rcx,rax
  415ad5:	call   0x422528
  415ada:	jmp    0x415aeb
  415adc:	nop    DWORD PTR [rax+0x0]
  415ae0:	mov    rax,QWORD PTR [rip+0x8698d]        # 0x49c474
  415ae7:	mov    QWORD PTR [rbp+0x68],rax
  415aeb:	mov    rax,QWORD PTR [rbp+0x60]
  415aef:	mov    rcx,QWORD PTR [rbp+0x208]
  415af6:	add    rax,0x20
  415afa:	cmp    rcx,rax
  415afd:	je     0x415b04
  415aff:	call   0x422528
  415b04:	mov    rax,QWORD PTR [rbp+0x58]
  415b08:	mov    rcx,QWORD PTR [rbp+0x118]
  415b0f:	add    rax,0x10
  415b13:	cmp    rcx,rax
  415b16:	je     0x415b1d
  415b18:	call   0x422528
  415b1d:	mov    rax,QWORD PTR [rbp+0x68]
  415b21:	call   rax
  415b23:	mov    DWORD PTR [rax],0xc
  415b29:	xor    eax,eax
  415b2b:	lea    rsp,[rbp+0x498]
  415b32:	pop    rbx
  415b33:	pop    rsi
  415b34:	pop    rdi
  415b35:	pop    r12
  415b37:	pop    r13
  415b39:	pop    r14
  415b3b:	pop    r15
  415b3d:	pop    rbp
  415b3e:	ret    
  415b3f:	nop
  415b40:	mov    r12d,0xc
  415b46:	jmp    0x41578c
  415b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b50:	mov    rcx,r12
  415b53:	call   0x414e40
  415b58:	movzx  r8d,BYTE PTR [rbp+0x88]
  415b60:	mov    rbx,rax
  415b63:	jmp    0x4157e2
  415b68:	nop    DWORD PTR [rax+rax*1+0x0]
  415b70:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  415b75:	jne    0x416360
  415b7b:	lea    r15,[r14+0x1]
  415b7f:	mov    rax,0xffffffffffffffff
  415b86:	cmp    r14,r15
  415b89:	cmova  r15,rax
  415b8d:	cmp    r12,r15
  415b90:	jae    0x415bfa
  415b92:	test   r12,r12
  415b95:	je     0x416690
  415b9b:	js     0x416540
  415ba1:	add    r12,r12
  415ba4:	cmp    r12,r15
  415ba7:	cmovb  r12,r15
  415bab:	cmp    r12,0xffffffffffffffff
  415baf:	je     0x416540
  415bb5:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  415bbc:	sete   sil
  415bc0:	test   rbx,rbx
  415bc3:	je     0x4166a0
  415bc9:	test   sil,sil
  415bcc:	jne    0x4166a0
  415bd2:	mov    rdx,r12
  415bd5:	mov    rcx,rbx
  415bd8:	call   0x415500
  415bdd:	mov    r9,rax
  415be0:	test   r9,r9
  415be3:	je     0x416540
  415be9:	test   r14,r14
  415bec:	je     0x415bf7
  415bee:	test   sil,sil
  415bf1:	jne    0x4166d0
  415bf7:	mov    rbx,r9
  415bfa:	mov    BYTE PTR [rbx+r14*1],0x25
  415bff:	mov    QWORD PTR [rbp+0x98],rbx
  415c06:	mov    rdi,QWORD PTR [r13+0x8]
  415c0a:	add    r13,0x58
  415c0e:	mov    rsi,QWORD PTR [r13+0x0]
  415c12:	add    QWORD PTR [rbp+0x80],0x1
  415c1a:	cmp    rsi,rdi
  415c1d:	jne    0x41575d
  415c23:	mov    r14,r15
  415c26:	mov    rbx,QWORD PTR [rbp+0x98]
  415c2d:	jmp    0x415816
  415c32:	mov    rbx,QWORD PTR [rbp+0x98]
  415c39:	jmp    0x415807
  415c3e:	xchg   ax,ax
  415c40:	shl    rax,0x5
  415c44:	add    rax,QWORD PTR [rbp+0x118]
  415c4b:	mov    edi,DWORD PTR [rax]
  415c4d:	lea    edx,[rdi-0x12]
  415c50:	cmp    edx,0x4
  415c53:	ja     0x416360
  415c59:	lea    rcx,[rip+0x1b3a0]        # 0x431000
  415c60:	mov    rax,QWORD PTR [rax+0x10]
  415c64:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  415c68:	add    rcx,rdx
  415c6b:	jmp    rcx
  415c6d:	nop    DWORD PTR [rax]
  415c70:	cmp    r14,rax
  415c73:	ja     0x415a91
  415c79:	mov    r12d,0xc
  415c7f:	cmp    r12,rax
  415c82:	jb     0x415a87
  415c88:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  415c8f:	sete   r8b
  415c93:	test   rbx,rbx
  415c96:	mov    BYTE PTR [rbp+0x68],r8b
  415c9a:	je     0x4163a0
  415ca0:	test   r8b,r8b
  415ca3:	jne    0x4163a0
  415ca9:	mov    rdx,r12
  415cac:	mov    rcx,rbx
  415caf:	call   0x415500
  415cb4:	movzx  r8d,BYTE PTR [rbp+0x68]
  415cb9:	mov    QWORD PTR [rbp+0x98],rax
  415cc0:	cmp    QWORD PTR [rbp+0x98],0x0
  415cc8:	je     0x415a91
  415cce:	test   r14,r14
  415cd1:	je     0x415cea
  415cd3:	test   r8b,r8b
  415cd6:	je     0x415cea
  415cd8:	mov    rcx,QWORD PTR [rbp+0x98]
  415cdf:	mov    r8,r14
  415ce2:	mov    rdx,rbx
  415ce5:	call   0x4224d8
  415cea:	mov    rax,QWORD PTR [rbp+0x98]
  415cf1:	mov    BYTE PTR [rax+r14*1],0x0
  415cf6:	mov    rax,QWORD PTR [rip+0x86777]        # 0x49c474
  415cfd:	mov    QWORD PTR [rbp+0x68],rax
  415d01:	call   rax
  415d03:	mov    ebx,DWORD PTR [rbp+0x88]
  415d09:	mov    eax,DWORD PTR [rax]
  415d0b:	mov    QWORD PTR [rbp-0x10],rsi
  415d0f:	lea    edx,[rbx-0x9]
  415d12:	mov    DWORD PTR [rbp+0x30],eax
  415d15:	cmp    edx,0x2
  415d18:	sbb    rax,rax
  415d1b:	and    eax,0xa
  415d1e:	add    rax,0xa
  415d22:	cmp    rsi,rax
  415d25:	cmovae rax,rsi
  415d29:	mov    QWORD PTR [rbp-0x38],rax
  415d2d:	add    rax,rax
  415d30:	mov    QWORD PTR [rbp+0x20],rax
  415d34:	add    rax,0x1
  415d38:	cmp    edx,0x2
  415d3b:	mov    QWORD PTR [rbp+0x18],rax
  415d3f:	sbb    rax,rax
  415d42:	and    eax,0xb
  415d45:	add    rax,0xb
  415d49:	cmp    rsi,rax
  415d4c:	cmovae rax,rsi
  415d50:	mov    QWORD PTR [rbp-0x18],rax
  415d54:	add    rax,0x1
  415d58:	cmp    edx,0x2
  415d5b:	mov    QWORD PTR [rbp+0x10],rax
  415d5f:	sbb    rax,rax
  415d62:	mov    edx,0x2693
  415d67:	and    eax,0x8
  415d6a:	add    rax,0x9
  415d6e:	cmp    rsi,rax
  415d71:	cmovae rax,rsi
  415d75:	mov    QWORD PTR [rbp-0x20],rax
  415d79:	add    rax,0x2
  415d7d:	cmp    ebx,0xc
  415d80:	mov    QWORD PTR [rbp+0x8],rax
  415d84:	mov    eax,0x273
  415d89:	cmove  rax,rdx
  415d8d:	mov    QWORD PTR [rbp-0x28],rax
  415d91:	add    rax,rsi
  415d94:	cmp    ebx,0xc
  415d97:	mov    QWORD PTR [rbp+0x0],rax
  415d9b:	sete   al
  415d9e:	movzx  eax,al
  415da1:	lea    rax,[rax+rax*1+0xd]
  415da6:	cmp    rsi,rax
  415da9:	cmovae rax,rsi
  415dad:	mov    rsi,r12
  415db0:	mov    QWORD PTR [rbp-0x30],rax
  415db4:	add    rax,0xc
  415db8:	mov    QWORD PTR [rbp-0x8],rax
  415dbc:	mov    rax,rsi
  415dbf:	mov    ebx,0x7fffffff
  415dc4:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  415dce:	sub    rax,r14
  415dd1:	cmp    rax,0x7fffffff
  415dd7:	cmovbe rbx,rax
  415ddb:	call   QWORD PTR [rip+0x86693]        # 0x49c474
  415de1:	mov    DWORD PTR [rax],0x0
  415de7:	mov    eax,DWORD PTR [rbp+0x88]
  415ded:	cmp    eax,0x11
  415df0:	ja     0x416360
  415df6:	mov    edx,eax
  415df8:	lea    rax,[rip+0x1b215]        # 0x431014
  415dff:	movsxd rdx,DWORD PTR [rax+rdx*4]
  415e03:	add    rax,rdx
  415e06:	jmp    rax
  415e08:	nop    DWORD PTR [rax+rax*1+0x0]
  415e10:	mov    esi,0x6
  415e15:	mov    DWORD PTR [rbp+0x28],0x0
  415e1c:	jmp    0x4158f0
  415e21:	add    rax,r10
  415e24:	mov    edi,DWORD PTR [rax]
  415e26:	cmp    edi,0x10
  415e29:	mov    DWORD PTR [rbp+0x88],edi
  415e2f:	jne    0x41586d
  415e35:	mov    r8,QWORD PTR [r13+0x18]
  415e39:	mov    r9,QWORD PTR [r13+0x20]
  415e3d:	cmp    r8,r9
  415e40:	je     0x41647c
  415e46:	mov    rdx,QWORD PTR [r13+0x28]
  415e4a:	cmp    rdx,0xffffffffffffffff
  415e4e:	je     0x4170cd
  415e54:	shl    rdx,0x5
  415e58:	add    rdx,r10
  415e5b:	cmp    DWORD PTR [rdx],0x5
  415e5e:	jne    0x416360
  415e64:	movsxd rdx,DWORD PTR [rdx+0x10]
  415e68:	mov    rcx,rdx
  415e6b:	shr    rcx,0x3f
  415e6f:	mov    r8,rcx
  415e72:	neg    r8
  415e75:	xor    rdx,r8
  415e78:	lea    rdi,[rdx+rcx*1]
  415e7c:	mov    QWORD PTR [rbp+0x68],rdi
  415e80:	mov    r8,QWORD PTR [r13+0x30]
  415e84:	mov    r11,QWORD PTR [r13+0x38]
  415e88:	mov    DWORD PTR [rbp+0x88],0x1
  415e92:	cmp    r8,r11
  415e95:	je     0x41738c
  415e9b:	mov    rdx,QWORD PTR [r13+0x40]
  415e9f:	cmp    rdx,0xffffffffffffffff
  415ea3:	je     0x41706e
  415ea9:	shl    rdx,0x5
  415ead:	add    r10,rdx
  415eb0:	cmp    DWORD PTR [r10],0x5
  415eb4:	jne    0x416360
  415eba:	mov    r9d,DWORD PTR [r10+0x10]
  415ebe:	test   r9d,r9d
  415ec1:	movsxd r15,r9d
  415ec4:	js     0x416ffd
  415eca:	test   r15,r15
  415ecd:	mov    rsi,QWORD PTR [rax+0x10]
  415ed1:	mov    DWORD PTR [rbp+0xc0],0x0
  415edb:	je     0x417360
  415ee1:	movzx  edx,WORD PTR [rsi]
  415ee4:	test   dx,dx
  415ee7:	je     0x417360
  415eed:	lea    rax,[rbp+0xc0]
  415ef4:	mov    rcx,rsi
  415ef7:	mov    QWORD PTR [rbp+0x98],r13
  415efe:	mov    QWORD PTR [rbp+0x78],r12
  415f02:	mov    QWORD PTR [rbp+0x30],rsi
  415f06:	xor    edi,edi
  415f08:	mov    rsi,r15
  415f0b:	mov    r12,rcx
  415f0e:	mov    r13,rax
  415f11:	mov    r15,QWORD PTR [rbp+0x48]
  415f15:	jmp    0x415f49
  415f17:	nop    WORD PTR [rax+rax*1+0x0]
  415f20:	cdqe   
  415f22:	cmp    rax,rsi
  415f25:	ja     0x416df0
  415f2b:	add    r12,0x2
  415f2f:	add    rdi,rax
  415f32:	sub    rsi,rax
  415f35:	je     0x416df0
  415f3b:	movzx  edx,WORD PTR [r12]
  415f40:	test   dx,dx
  415f43:	je     0x416df0
  415f49:	mov    r8,r13
  415f4c:	mov    rcx,r15
  415f4f:	call   0x41d7f0
  415f54:	test   eax,eax
  415f56:	jns    0x415f20
  415f58:	test   rbx,rbx
  415f5b:	je     0x415f6e
  415f5d:	cmp    QWORD PTR [rbp+0x4e0],rbx
  415f64:	je     0x415f6e
  415f66:	mov    rcx,rbx
  415f69:	call   0x422528
  415f6e:	mov    rax,QWORD PTR [rbp+0x50]
  415f72:	test   rax,rax
  415f75:	je     0x415f7f
  415f77:	mov    rcx,rax
  415f7a:	call   0x422528
  415f7f:	mov    rax,QWORD PTR [rbp+0x60]
  415f83:	mov    rcx,QWORD PTR [rbp+0x208]
  415f8a:	add    rax,0x20
  415f8e:	cmp    rcx,rax
  415f91:	je     0x415f98
  415f93:	call   0x422528
  415f98:	mov    rax,QWORD PTR [rbp+0x58]
  415f9c:	mov    rcx,QWORD PTR [rbp+0x118]
  415fa3:	add    rax,0x10
  415fa7:	cmp    rcx,rax
  415faa:	je     0x415fb1
  415fac:	call   0x422528
  415fb1:	call   QWORD PTR [rip+0x864bd]        # 0x49c474
  415fb7:	mov    DWORD PTR [rax],0x2a
  415fbd:	xor    eax,eax
  415fbf:	jmp    0x415b2b
  415fc4:	mov    BYTE PTR [rdi],0x6c
  415fc7:	add    rdi,0x1
  415fcb:	jmp    0x4159e3
  415fd0:	mov    DWORD PTR [rax],r14d
  415fd3:	mov    r15,r14
  415fd6:	mov    QWORD PTR [rbp+0x98],rbx
  415fdd:	jmp    0x415c06
  415fe2:	mov    rax,QWORD PTR [r13+0x50]
  415fe6:	shl    rax,0x5
  415fea:	add    rax,QWORD PTR [rbp+0x118]
  415ff1:	mov    r9d,DWORD PTR [rax+0x10]
  415ff5:	mov    eax,DWORD PTR [rbp+0x78]
  415ff8:	cmp    eax,0x1
  415ffb:	je     0x4161f0
  416001:	cmp    eax,0x2
  416004:	mov    rax,QWORD PTR [rbp+0x98]
  41600b:	lea    r12,[rax+r14*1]
  41600f:	mov    rax,QWORD PTR [rbp+0x70]
  416013:	jne    0x416365
  416019:	mov    QWORD PTR [rsp+0x30],rax
  41601e:	mov    eax,DWORD PTR [rbp+0xc4]
  416024:	mov    rdx,rbx
  416027:	mov    DWORD PTR [rsp+0x28],r9d
  41602c:	mov    r8,QWORD PTR [rbp+0x90]
  416033:	mov    rcx,r12
  416036:	mov    r9d,DWORD PTR [rbp+0xc0]
  41603d:	mov    DWORD PTR [rsp+0x20],eax
  416041:	call   0x4155f0
  416046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416050:	movsxd rdx,DWORD PTR [rbp+0xbc]
  416057:	test   edx,edx
  416059:	js     0x4161b3
  41605f:	movsxd rcx,edx
  416062:	cmp    rcx,rbx
  416065:	jae    0x416072
  416067:	cmp    BYTE PTR [r12+rcx*1],0x0
  41606c:	jne    0x416360
  416072:	cmp    eax,edx
  416074:	jle    0x41607f
  416076:	mov    DWORD PTR [rbp+0xbc],eax
  41607c:	movsxd rdx,eax
  41607f:	lea    eax,[rdx+0x1]
  416082:	cmp    rax,rbx
  416085:	jb     0x416be0
  41608b:	cmp    rbx,0x7fffffff
  416092:	je     0x416c00
  416098:	lea    rcx,[rsi+rsi*1]
  41609c:	test   rsi,rsi
  41609f:	mov    rax,0xffffffffffffffff
  4160a6:	cmovs  rcx,rax
  4160aa:	add    edx,0x2
  4160ad:	add    rdx,r14
  4160b0:	jb     0x4160bc
  4160b2:	cmp    rcx,rdx
  4160b5:	mov    rax,rdx
  4160b8:	cmovae rax,rcx
  4160bc:	cmp    rsi,rax
  4160bf:	jae    0x415dbc
  4160c5:	test   rsi,rsi
  4160c8:	je     0x416381
  4160ce:	js     0x416c80
  4160d4:	add    rsi,rsi
  4160d7:	cmp    rsi,rax
  4160da:	cmovb  rsi,rax
  4160de:	cmp    rsi,0xffffffffffffffff
  4160e2:	je     0x416c80
  4160e8:	mov    rax,QWORD PTR [rbp+0x98]
  4160ef:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4160f6:	sete   bl
  4160f9:	test   rax,rax
  4160fc:	je     0x416390
  416102:	test   bl,bl
  416104:	jne    0x416390
  41610a:	mov    rcx,QWORD PTR [rbp+0x98]
  416111:	mov    rdx,rsi
  416114:	call   0x415500
  416119:	mov    r9,rax
  41611c:	test   r9,r9
  41611f:	je     0x416c80
  416125:	test   bl,bl
  416127:	je     0x416132
  416129:	test   r14,r14
  41612c:	jne    0x416610
  416132:	mov    QWORD PTR [rbp+0x98],r9
  416139:	jmp    0x415dbc
  41613e:	xchg   ax,ax
  416140:	mov    rax,QWORD PTR [r13+0x50]
  416144:	shl    rax,0x5
  416148:	add    rax,QWORD PTR [rbp+0x118]
  41614f:	mov    r9,QWORD PTR [rax+0x10]
  416153:	mov    eax,DWORD PTR [rbp+0x78]
  416156:	cmp    eax,0x1
  416159:	je     0x416630
  41615f:	cmp    eax,0x2
  416162:	mov    rax,QWORD PTR [rbp+0x98]
  416169:	lea    r12,[rax+r14*1]
  41616d:	mov    rax,QWORD PTR [rbp+0x70]
  416171:	jne    0x416460
  416177:	mov    QWORD PTR [rsp+0x30],rax
  41617c:	mov    QWORD PTR [rsp+0x28],r9
  416181:	mov    eax,DWORD PTR [rbp+0xc4]
  416187:	mov    r9d,DWORD PTR [rbp+0xc0]
  41618e:	mov    rdx,rbx
  416191:	mov    r8,QWORD PTR [rbp+0x90]
  416198:	mov    rcx,r12
  41619b:	mov    DWORD PTR [rsp+0x20],eax
  41619f:	call   0x4155f0
  4161a4:	movsxd rdx,DWORD PTR [rbp+0xbc]
  4161ab:	test   edx,edx
  4161ad:	jns    0x41605f
  4161b3:	cmp    BYTE PTR [rdi+0x1],0x0
  4161b7:	je     0x4163f0
  4161bd:	mov    BYTE PTR [rdi+0x1],0x0
  4161c1:	jmp    0x415dbc
  4161c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161d0:	mov    rax,QWORD PTR [r13+0x50]
  4161d4:	shl    rax,0x5
  4161d8:	add    rax,QWORD PTR [rbp+0x118]
  4161df:	movzx  r9d,WORD PTR [rax+0x10]
  4161e4:	mov    eax,DWORD PTR [rbp+0x78]
  4161e7:	cmp    eax,0x1
  4161ea:	jne    0x416001
  4161f0:	mov    rax,QWORD PTR [rbp+0x98]
  4161f7:	mov    DWORD PTR [rsp+0x20],r9d
  4161fc:	mov    rdx,rbx
  4161ff:	mov    r9d,DWORD PTR [rbp+0xc0]
  416206:	mov    r8,QWORD PTR [rbp+0x90]
  41620d:	lea    r12,[rax+r14*1]
  416211:	mov    rax,QWORD PTR [rbp+0x70]
  416215:	mov    rcx,r12
  416218:	mov    QWORD PTR [rsp+0x28],rax
  41621d:	call   0x4155f0
  416222:	jmp    0x416050
  416227:	nop    WORD PTR [rax+rax*1+0x0]
  416230:	mov    rax,QWORD PTR [r13+0x50]
  416234:	shl    rax,0x5
  416238:	add    rax,QWORD PTR [rbp+0x118]
  41623f:	movsx  r9d,BYTE PTR [rax+0x10]
  416244:	mov    eax,DWORD PTR [rbp+0x78]
  416247:	cmp    eax,0x1
  41624a:	jne    0x416001
  416250:	jmp    0x4161f0
  416252:	mov    rax,QWORD PTR [r13+0x50]
  416256:	shl    rax,0x5
  41625a:	add    rax,QWORD PTR [rbp+0x118]
  416261:	movsd  xmm0,QWORD PTR [rax+0x10]
  416266:	mov    eax,DWORD PTR [rbp+0x78]
  416269:	cmp    eax,0x1
  41626c:	je     0x416ba2
  416272:	cmp    eax,0x2
  416275:	mov    rax,QWORD PTR [rbp+0x98]
  41627c:	lea    r12,[rax+r14*1]
  416280:	mov    rax,QWORD PTR [rbp+0x70]
  416284:	jne    0x416764
  41628a:	mov    QWORD PTR [rsp+0x30],rax
  41628f:	mov    eax,DWORD PTR [rbp+0xc4]
  416295:	movsd  QWORD PTR [rsp+0x28],xmm0
  41629b:	mov    r9d,DWORD PTR [rbp+0xc0]
  4162a2:	mov    r8,QWORD PTR [rbp+0x90]
  4162a9:	mov    rdx,rbx
  4162ac:	mov    rcx,r12
  4162af:	mov    DWORD PTR [rsp+0x20],eax
  4162b3:	call   0x4155f0
  4162b8:	jmp    0x416050
  4162bd:	nop    DWORD PTR [rax]
  4162c0:	mov    rax,QWORD PTR [r13+0x50]
  4162c4:	shl    rax,0x5
  4162c8:	add    rax,QWORD PTR [rbp+0x118]
  4162cf:	fld    TBYTE PTR [rax+0x10]
  4162d2:	mov    eax,DWORD PTR [rbp+0x78]
  4162d5:	cmp    eax,0x1
  4162d8:	fstp   TBYTE PTR [rbp+0xa0]
  4162de:	je     0x416b80
  4162e4:	cmp    eax,0x2
  4162e7:	mov    rax,QWORD PTR [rbp+0x98]
  4162ee:	lea    r12,[rax+r14*1]
  4162f2:	mov    rax,QWORD PTR [rbp+0x70]
  4162f6:	jne    0x416744
  4162fc:	mov    QWORD PTR [rsp+0x30],rax
  416301:	mov    rax,QWORD PTR [rbp+0x40]
  416305:	mov    QWORD PTR [rsp+0x28],rax
  41630a:	jmp    0x416181
  41630f:	nop
  416310:	mov    rax,QWORD PTR [r13+0x50]
  416314:	shl    rax,0x5
  416318:	add    rax,QWORD PTR [rbp+0x118]
  41631f:	movsx  r9d,WORD PTR [rax+0x10]
  416324:	mov    eax,DWORD PTR [rbp+0x78]
  416327:	cmp    eax,0x1
  41632a:	jne    0x416001
  416330:	jmp    0x4161f0
  416335:	mov    rax,QWORD PTR [r13+0x50]
  416339:	shl    rax,0x5
  41633d:	add    rax,QWORD PTR [rbp+0x118]
  416344:	movzx  r9d,BYTE PTR [rax+0x10]
  416349:	mov    eax,DWORD PTR [rbp+0x78]
  41634c:	cmp    eax,0x1
  41634f:	jne    0x416001
  416355:	jmp    0x4161f0
  41635a:	nop    WORD PTR [rax+rax*1+0x0]
  416360:	call   0x4225a0
  416365:	mov    r8,QWORD PTR [rbp+0x90]
  41636c:	mov    QWORD PTR [rsp+0x20],rax
  416371:	mov    rdx,rbx
  416374:	mov    rcx,r12
  416377:	call   0x4155f0
  41637c:	jmp    0x416050
  416381:	mov    esi,0xc
  416386:	jmp    0x4160d7
  41638b:	nop    DWORD PTR [rax+rax*1+0x0]
  416390:	mov    rcx,rsi
  416393:	call   0x414e40
  416398:	mov    r9,rax
  41639b:	jmp    0x41611c
  4163a0:	mov    rcx,r12
  4163a3:	call   0x414e40
  4163a8:	movzx  r8d,BYTE PTR [rbp+0x68]
  4163ad:	mov    QWORD PTR [rbp+0x98],rax
  4163b4:	jmp    0x415cc0
  4163b9:	nop    DWORD PTR [rax+0x0]
  4163c0:	mov    QWORD PTR [rbp+0x98],rbx
  4163c7:	jmp    0x415cea
  4163cc:	nop    DWORD PTR [rax+0x0]
  4163d0:	mov    DWORD PTR [rbp+0x78],edx
  4163d3:	jmp    0x415a50
  4163d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4163e0:	xor    edx,edx
  4163e2:	jmp    0x415a1e
  4163e7:	nop    WORD PTR [rax+rax*1+0x0]
  4163f0:	test   eax,eax
  4163f2:	jns    0x416076
  4163f8:	movzx  eax,BYTE PTR [r13+0x48]
  4163fd:	mov    rcx,QWORD PTR [r13+0x50]
  416401:	sub    eax,0x41
  416404:	cmp    al,0x37
  416406:	ja     0x416360
  41640c:	lea    rdx,[rip+0x1ac49]        # 0x43105c
  416413:	movzx  eax,al
  416416:	movsxd rax,DWORD PTR [rdx+rax*4]
  41641a:	add    rdx,rax
  41641d:	jmp    rdx
  41641f:	nop
  416420:	cmp    rcx,0xffffffffffffffff
  416424:	je     0x415ae0
  41642a:	call   0x414e40
  41642f:	test   rax,rax
  416432:	mov    QWORD PTR [rbp+0x90],rax
  416439:	je     0x415ae0
  41643f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  416447:	mov    rax,QWORD PTR [rbp+0x90]
  41644e:	mov    QWORD PTR [rbp+0x50],rax
  416452:	jne    0x4156f4
  416458:	xor    r12d,r12d
  41645b:	jmp    0x4156fe
  416460:	mov    r8,QWORD PTR [rbp+0x90]
  416467:	mov    QWORD PTR [rsp+0x20],rax
  41646c:	mov    rdx,rbx
  41646f:	mov    rcx,r12
  416472:	call   0x4155f0
  416477:	jmp    0x416050
  41647c:	mov    r8,QWORD PTR [r13+0x30]
  416480:	mov    r11,QWORD PTR [r13+0x38]
  416484:	mov    QWORD PTR [rbp+0x68],0x0
  41648c:	mov    DWORD PTR [rbp+0x88],0x0
  416496:	cmp    r8,r11
  416499:	jne    0x415e9b
  41649f:	mov    rsi,QWORD PTR [rax+0x10]
  4164a3:	mov    rcx,rsi
  4164a6:	xor    edi,edi
  4164a8:	xor    r15d,r15d
  4164ab:	call   0x422408
  4164b0:	lea    rax,[rsi+rax*2]
  4164b4:	mov    QWORD PTR [rbp+0x98],rax
  4164bb:	xor    r9d,r9d
  4164be:	mov    QWORD PTR [rbp+0x30],0x0
  4164c6:	mov    rcx,QWORD PTR [rbp+0x68]
  4164ca:	cmp    QWORD PTR [rbp+0x30],rcx
  4164ce:	jae    0x416991
  4164d4:	test   BYTE PTR [r13+0x10],0x2
  4164d9:	jne    0x416991
  4164df:	mov    r11,QWORD PTR [rbp+0x68]
  4164e3:	sub    r11,QWORD PTR [rbp+0x30]
  4164e7:	mov    rax,r11
  4164ea:	add    rax,r14
  4164ed:	mov    rcx,rax
  4164f0:	mov    QWORD PTR [rbp+0x88],rax
  4164f7:	mov    rax,0xffffffffffffffff
  4164fe:	cmovae rax,rcx
  416502:	cmp    r12,rax
  416505:	jae    0x4172c7
  41650b:	test   r12,r12
  41650e:	je     0x417292
  416514:	js     0x416540
  416516:	add    r12,r12
  416519:	cmp    r14,rcx
  41651c:	ja     0x416540
  41651e:	cmp    r12,QWORD PTR [rbp+0x88]
  416525:	jae    0x4168ee
  41652b:	mov    rax,QWORD PTR [rbp+0x88]
  416532:	mov    r12,rax
  416535:	add    rax,0x1
  416539:	jne    0x4168ee
  41653f:	nop
  416540:	mov    QWORD PTR [rbp+0x98],rbx
  416547:	nop    WORD PTR [rax+rax*1+0x0]
  416550:	mov    rax,QWORD PTR [rip+0x85f1d]        # 0x49c474
  416557:	mov    QWORD PTR [rbp+0x68],rax
  41655b:	jmp    0x415ab0
  416560:	xor    r15d,r15d
  416563:	movabs r11,0x1999999999999999
  41656d:	nop    DWORD PTR [rax]
  416570:	add    rcx,0x1
  416574:	movsx  eax,BYTE PTR [rcx-0x1]
  416578:	mov    rdx,0xffffffffffffffff
  41657f:	sub    eax,0x30
  416582:	cmp    r15,r11
  416585:	cdqe   
  416587:	ja     0x416590
  416589:	lea    rdx,[r15+r15*4]
  41658d:	add    rdx,rdx
  416590:	add    rdx,rax
  416593:	mov    rax,0xffffffffffffffff
  41659a:	mov    r15,rdx
  41659d:	cmovb  r15,rax
  4165a1:	cmp    rcx,r9
  4165a4:	jne    0x416570
  4165a6:	jmp    0x4158ad
  4165ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4165b0:	add    rdx,0x1
  4165b4:	xor    esi,esi
  4165b6:	cmp    rcx,rdx
  4165b9:	je     0x4158e9
  4165bf:	movabs r9,0x1999999999999999
  4165c9:	nop    DWORD PTR [rax+0x0]
  4165d0:	add    rdx,0x1
  4165d4:	movsx  eax,BYTE PTR [rdx-0x1]
  4165d8:	mov    r10,0xffffffffffffffff
  4165df:	sub    eax,0x30
  4165e2:	cmp    rsi,r9
  4165e5:	cdqe   
  4165e7:	ja     0x4165f0
  4165e9:	lea    r10,[rsi+rsi*4]
  4165ed:	add    r10,r10
  4165f0:	mov    rsi,r10
  4165f3:	add    rsi,rax
  4165f6:	mov    rax,0xffffffffffffffff
  4165fd:	cmovb  rsi,rax
  416601:	cmp    rdx,rcx
  416604:	jne    0x4165d0
  416606:	jmp    0x4158e9
  41660b:	nop    DWORD PTR [rax+rax*1+0x0]
  416610:	mov    rdx,QWORD PTR [rbp+0x98]
  416617:	mov    r8,r14
  41661a:	mov    rcx,r9
  41661d:	call   0x4224d8
  416622:	mov    QWORD PTR [rbp+0x98],rax
  416629:	jmp    0x415dbc
  41662e:	xchg   ax,ax
  416630:	mov    rax,QWORD PTR [rbp+0x98]
  416637:	mov    QWORD PTR [rsp+0x20],r9
  41663c:	lea    r12,[rax+r14*1]
  416640:	mov    rax,QWORD PTR [rbp+0x70]
  416644:	mov    QWORD PTR [rsp+0x28],rax
  416649:	mov    r9d,DWORD PTR [rbp+0xc0]
  416650:	mov    r8,QWORD PTR [rbp+0x90]
  416657:	mov    rdx,rbx
  41665a:	mov    rcx,r12
  41665d:	call   0x4155f0
  416662:	jmp    0x416050
  416667:	nop    WORD PTR [rax+rax*1+0x0]
  416670:	or     r8d,0x2
  416674:	neg    r15
  416677:	jmp    0x4158ad
  41667c:	nop    DWORD PTR [rax+0x0]
  416680:	xor    r15d,r15d
  416683:	jmp    0x4158ad
  416688:	nop    DWORD PTR [rax+rax*1+0x0]
  416690:	mov    r12d,0xc
  416696:	jmp    0x415ba4
  41669b:	nop    DWORD PTR [rax+rax*1+0x0]
  4166a0:	mov    rcx,r12
  4166a3:	call   0x414e40
  4166a8:	mov    r9,rax
  4166ab:	jmp    0x415be0
  4166b0:	xor    eax,eax
  4166b2:	jmp    0x415b2b
  4166b7:	nop    WORD PTR [rax+rax*1+0x0]
  4166c0:	mov    BYTE PTR [rdi],0x4c
  4166c3:	add    rdi,0x1
  4166c7:	jmp    0x4159e3
  4166cc:	nop    DWORD PTR [rax+0x0]
  4166d0:	mov    rdx,rbx
  4166d3:	mov    r8,r14
  4166d6:	mov    rcx,r9
  4166d9:	call   0x4224d8
  4166de:	mov    rbx,rax
  4166e1:	jmp    0x415bfa
  4166e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4166f0:	mov    QWORD PTR [rax],r14
  4166f3:	mov    r15,r14
  4166f6:	mov    QWORD PTR [rbp+0x98],rbx
  4166fd:	jmp    0x415c06
  416702:	mov    WORD PTR [rax],r14w
  416706:	mov    r15,r14
  416709:	mov    QWORD PTR [rbp+0x98],rbx
  416710:	jmp    0x415c06
  416715:	mov    BYTE PTR [rax],r14b
  416718:	mov    r15,r14
  41671b:	mov    QWORD PTR [rbp+0x98],rbx
  416722:	jmp    0x415c06
  416727:	nop    WORD PTR [rax+rax*1+0x0]
  416730:	mov    BYTE PTR [rdi],0x49
  416733:	mov    BYTE PTR [rdi+0x1],0x36
  416737:	add    rdi,0x3
  41673b:	mov    BYTE PTR [rdi-0x1],0x34
  41673f:	jmp    0x4159e3
  416744:	mov    r9,QWORD PTR [rbp+0x40]
  416748:	mov    r8,QWORD PTR [rbp+0x90]
  41674f:	mov    rdx,rbx
  416752:	mov    QWORD PTR [rsp+0x20],rax
  416757:	mov    rcx,r12
  41675a:	call   0x4155f0
  41675f:	jmp    0x416050
  416764:	mov    r8,QWORD PTR [rbp+0x90]
  41676b:	movapd xmm3,xmm0
  41676f:	movq   r9,xmm0
  416774:	mov    QWORD PTR [rsp+0x20],rax
  416779:	mov    rdx,rbx
  41677c:	mov    rcx,r12
  41677f:	call   0x4155f0
  416784:	jmp    0x416050
  416789:	nop    DWORD PTR [rax+0x0]
  416790:	mov    rcx,rax
  416793:	call   0x422528
  416798:	jmp    0x415ac9
  41679d:	cmp    DWORD PTR [rbp+0x88],0x10
  4167a4:	je     0x416360
  4167aa:	mov    rax,rcx
  4167ad:	mov    edx,DWORD PTR [rbp+0x28]
  4167b0:	shl    rax,0x5
  4167b4:	add    rax,QWORD PTR [rbp+0x118]
  4167bb:	test   edx,edx
  4167bd:	mov    rcx,QWORD PTR [rax+0x10]
  4167c1:	jne    0x41736e
  4167c7:	call   0x422468
  4167cc:	cmp    r15,rax
  4167cf:	jbe    0x4172d7
  4167d5:	lea    rdx,[r15+0x1]
  4167d9:	mov    rax,r15
  4167dc:	cmp    rdx,rax
  4167df:	jae    0x417177
  4167e5:	mov    rdx,0xffffffffffffffff
  4167ec:	add    rdx,r14
  4167ef:	mov    rax,0xffffffffffffffff
  4167f6:	cmovb  rdx,rax
  4167fa:	test   rsi,rsi
  4167fd:	js     0x4172cf
  416803:	lea    r8,[rsi+rsi*1]
  416807:	lea    rcx,[r8+0xc]
  41680b:	cmp    r8,rcx
  41680e:	ja     0x4160c5
  416814:	cmp    rdx,rcx
  416817:	cmovb  rdx,rcx
  41681b:	cmp    rsi,rdx
  41681e:	mov    rax,rdx
  416821:	jae    0x415dbc
  416827:	jmp    0x4160c5
  41682c:	mov    eax,0x13
  416831:	jmp    0x4167cc
  416833:	mov    rcx,QWORD PTR [rbp+0x10]
  416837:	cmp    QWORD PTR [rbp-0x18],rcx
  41683b:	ja     0x4168cd
  416841:	mov    rax,QWORD PTR [rbp+0x10]
  416845:	jmp    0x4167cc
  416847:	xor    edx,edx
  416849:	mov    r11,QWORD PTR [rbp-0x38]
  41684d:	cmp    QWORD PTR [rbp+0x20],r11
  416851:	mov    rax,0xffffffffffffffff
  416858:	jb     0x4167dc
  41685a:	mov    r11,QWORD PTR [rbp+0x18]
  41685e:	cmp    QWORD PTR [rbp+0x20],r11
  416862:	ja     0x4167dc
  416868:	mov    rax,QWORD PTR [rbp+0x18]
  41686c:	jmp    0x4167cc
  416871:	cmp    DWORD PTR [rbp+0x88],0xe
  416878:	mov    eax,0x1
  41687d:	jne    0x4167cc
  416883:	mov    rax,QWORD PTR [rip+0x1b746]        # 0x431fd0
  41688a:	mov    rax,QWORD PTR [rax]
  41688d:	movsxd rax,DWORD PTR [rax]
  416890:	jmp    0x4167cc
  416895:	mov    rcx,QWORD PTR [rbp+0x8]
  416899:	cmp    QWORD PTR [rbp-0x20],rcx
  41689d:	ja     0x4168cd
  41689f:	mov    rax,QWORD PTR [rbp+0x8]
  4168a3:	jmp    0x4167cc
  4168a8:	mov    rcx,QWORD PTR [rbp+0x0]
  4168ac:	cmp    QWORD PTR [rbp-0x28],rcx
  4168b0:	ja     0x4168cd
  4168b2:	mov    rax,QWORD PTR [rbp+0x0]
  4168b6:	jmp    0x4167cc
  4168bb:	mov    rax,QWORD PTR [rbp-0x10]
  4168bf:	add    rax,0xc
  4168c3:	cmp    rax,0xb
  4168c7:	ja     0x4167cc
  4168cd:	xor    edx,edx
  4168cf:	mov    rax,0xffffffffffffffff
  4168d6:	jmp    0x4167dc
  4168db:	mov    rcx,QWORD PTR [rbp-0x30]
  4168df:	cmp    QWORD PTR [rbp-0x8],rcx
  4168e3:	jb     0x4168cd
  4168e5:	mov    rax,QWORD PTR [rbp-0x8]
  4168e9:	jmp    0x4167cc
  4168ee:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4168f5:	mov    DWORD PTR [rbp+0x20],r9d
  4168f9:	mov    QWORD PTR [rbp+0x78],r11
  4168fd:	sete   r8b
  416901:	test   rbx,rbx
  416904:	mov    BYTE PTR [rbp+0x28],r8b
  416908:	je     0x4172aa
  41690e:	test   r8b,r8b
  416911:	jne    0x4172aa
  416917:	mov    rdx,r12
  41691a:	mov    rcx,rbx
  41691d:	call   0x415500
  416922:	movzx  r8d,BYTE PTR [rbp+0x28]
  416927:	mov    r9d,DWORD PTR [rbp+0x20]
  41692b:	mov    r10,rax
  41692e:	mov    r11,QWORD PTR [rbp+0x78]
  416932:	test   r10,r10
  416935:	je     0x416540
  41693b:	test   r14,r14
  41693e:	je     0x416966
  416940:	test   r8b,r8b
  416943:	je     0x416966
  416945:	mov    rcx,r10
  416948:	mov    r8,r14
  41694b:	mov    rdx,rbx
  41694e:	mov    DWORD PTR [rbp+0x28],r9d
  416952:	mov    QWORD PTR [rbp+0x78],r11
  416956:	call   0x4224d8
  41695b:	mov    r11,QWORD PTR [rbp+0x78]
  41695f:	mov    r9d,DWORD PTR [rbp+0x28]
  416963:	mov    r10,rax
  416966:	lea    rcx,[r10+r14*1]
  41696a:	mov    r8,r11
  41696d:	mov    edx,0x20
  416972:	mov    DWORD PTR [rbp+0x28],r9d
  416976:	mov    QWORD PTR [rbp+0x78],r10
  41697a:	call   0x4224c8
  41697f:	mov    r10,QWORD PTR [rbp+0x78]
  416983:	mov    r14,QWORD PTR [rbp+0x88]
  41698a:	mov    r9d,DWORD PTR [rbp+0x28]
  41698e:	mov    rbx,r10
  416991:	or     r9d,r15d
  416994:	je     0x416c90
  41699a:	mov    rdx,rdi
  41699d:	mov    rax,0xffffffffffffffff
  4169a4:	mov    DWORD PTR [rbp+0xb4],0x0
  4169ae:	add    rdx,r14
  4169b1:	cmovae rax,rdx
  4169b5:	cmp    rax,r12
  4169b8:	jbe    0x416e95
  4169be:	test   r12,r12
  4169c1:	je     0x416e2f
  4169c7:	js     0x4169d5
  4169c9:	add    r12,r12
  4169cc:	cmp    rdx,r14
  4169cf:	jae    0x416e3e
  4169d5:	mov    rax,QWORD PTR [rip+0x85a98]        # 0x49c474
  4169dc:	mov    QWORD PTR [rbp+0x98],rbx
  4169e3:	mov    QWORD PTR [rbp+0x68],rax
  4169e7:	jmp    0x415ab0
  4169ec:	nop    DWORD PTR [rax+0x0]
  4169f0:	mov    rax,QWORD PTR [rbp+0x60]
  4169f4:	mov    rcx,QWORD PTR [rbp+0x208]
  4169fb:	add    rax,0x20
  4169ff:	cmp    rcx,rax
  416a02:	je     0x416a09
  416a04:	call   0x422528
  416a09:	mov    rax,QWORD PTR [rbp+0x58]
  416a0d:	mov    rcx,QWORD PTR [rbp+0x118]
  416a14:	add    rax,0x10
  416a18:	cmp    rcx,rax
  416a1b:	je     0x416a22
  416a1d:	call   0x422528
  416a22:	call   QWORD PTR [rip+0x85a4c]        # 0x49c474
  416a28:	mov    DWORD PTR [rax],0x16
  416a2e:	xor    eax,eax
  416a30:	jmp    0x415b2b
  416a35:	mov    rax,rbx
  416a38:	lea    rsi,[r14+0x1]
  416a3c:	mov    r15,rbx
  416a3f:	mov    QWORD PTR [rbp+0x98],rax
  416a46:	mov    rax,0xffffffffffffffff
  416a4d:	mov    rbx,r12
  416a50:	cmp    rsi,r14
  416a53:	mov    rdx,rax
  416a56:	cmovae rdx,rsi
  416a5a:	cmp    rdx,r12
  416a5d:	jbe    0x416ae8
  416a63:	test   r12,r12
  416a66:	je     0x41715a
  416a6c:	js     0x417326
  416a72:	add    rbx,rbx
  416a75:	cmp    rsi,r14
  416a78:	mov    rax,rsi
  416a7b:	jae    0x416a84
  416a7d:	mov    rax,0xffffffffffffffff
  416a84:	cmp    rax,rbx
  416a87:	jbe    0x416a95
  416a89:	cmp    rsi,r14
  416a8c:	jb     0x416550
  416a92:	mov    rbx,rsi
  416a95:	cmp    rbx,0xffffffffffffffff
  416a99:	je     0x416550
  416a9f:	cmp    QWORD PTR [rbp+0x4e0],r15
  416aa6:	sete   dil
  416aaa:	test   r15,r15
  416aad:	je     0x41721e
  416ab3:	test   dil,dil
  416ab6:	jne    0x41721e
  416abc:	mov    rdx,rbx
  416abf:	mov    rcx,r15
  416ac2:	call   0x415500
  416ac7:	mov    r9,rax
  416aca:	test   r9,r9
  416acd:	je     0x416550
  416ad3:	test   r14,r14
  416ad6:	je     0x416ae1
  416ad8:	test   dil,dil
  416adb:	jne    0x417278
  416ae1:	mov    QWORD PTR [rbp+0x98],r9
  416ae8:	mov    rax,QWORD PTR [rbp+0x98]
  416aef:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416af6:	mov    BYTE PTR [rax+r14*1],0x0
  416afb:	je     0x416b1e
  416afd:	cmp    rbx,rsi
  416b00:	jbe    0x416b1e
  416b02:	mov    rdx,rsi
  416b05:	mov    rcx,rax
  416b08:	mov    rdi,rax
  416b0b:	call   0x415500
  416b10:	test   rax,rax
  416b13:	cmove  rax,rdi
  416b17:	mov    QWORD PTR [rbp+0x98],rax
  416b1e:	mov    rax,QWORD PTR [rbp+0x50]
  416b22:	test   rax,rax
  416b25:	je     0x416b2f
  416b27:	mov    rcx,rax
  416b2a:	call   0x422528
  416b2f:	mov    rax,QWORD PTR [rbp+0x60]
  416b33:	mov    rcx,QWORD PTR [rbp+0x208]
  416b3a:	add    rax,0x20
  416b3e:	cmp    rcx,rax
  416b41:	je     0x416b48
  416b43:	call   0x422528
  416b48:	mov    rax,QWORD PTR [rbp+0x58]
  416b4c:	mov    rcx,QWORD PTR [rbp+0x118]
  416b53:	add    rax,0x10
  416b57:	cmp    rcx,rax
  416b5a:	je     0x416b61
  416b5c:	call   0x422528
  416b61:	mov    rax,QWORD PTR [rbp+0x4e8]
  416b68:	mov    QWORD PTR [rax],r14
  416b6b:	mov    rax,QWORD PTR [rbp+0x98]
  416b72:	jmp    0x415b2b
  416b77:	nop    WORD PTR [rax+rax*1+0x0]
  416b80:	mov    rax,QWORD PTR [rbp+0x98]
  416b87:	lea    r12,[rax+r14*1]
  416b8b:	mov    rax,QWORD PTR [rbp+0x70]
  416b8f:	mov    QWORD PTR [rsp+0x28],rax
  416b94:	mov    rax,QWORD PTR [rbp+0x40]
  416b98:	mov    QWORD PTR [rsp+0x20],rax
  416b9d:	jmp    0x416649
  416ba2:	mov    rax,QWORD PTR [rbp+0x98]
  416ba9:	mov    r9d,DWORD PTR [rbp+0xc0]
  416bb0:	movsd  QWORD PTR [rsp+0x20],xmm0
  416bb6:	mov    r8,QWORD PTR [rbp+0x90]
  416bbd:	mov    rdx,rbx
  416bc0:	lea    r12,[rax+r14*1]
  416bc4:	mov    rax,QWORD PTR [rbp+0x70]
  416bc8:	mov    rcx,r12
  416bcb:	mov    QWORD PTR [rsp+0x28],rax
  416bd0:	call   0x4155f0
  416bd5:	jmp    0x416050
  416bda:	nop    WORD PTR [rax+rax*1+0x0]
  416be0:	lea    r15,[rdx+r14*1]
  416be4:	mov    r12,rsi
  416be7:	call   QWORD PTR [rip+0x85887]        # 0x49c474
  416bed:	mov    edi,DWORD PTR [rbp+0x30]
  416bf0:	mov    DWORD PTR [rax],edi
  416bf2:	jmp    0x415c06
  416bf7:	nop    WORD PTR [rax+rax*1+0x0]
  416c00:	mov    rax,QWORD PTR [rbp+0x98]
  416c07:	test   rax,rax
  416c0a:	je     0x416c21
  416c0c:	cmp    QWORD PTR [rbp+0x4e0],rax
  416c13:	je     0x416c21
  416c15:	mov    rcx,QWORD PTR [rbp+0x98]
  416c1c:	call   0x422528
  416c21:	mov    rax,QWORD PTR [rbp+0x50]
  416c25:	test   rax,rax
  416c28:	je     0x416c32
  416c2a:	mov    rcx,rax
  416c2d:	call   0x422528
  416c32:	mov    rax,QWORD PTR [rbp+0x60]
  416c36:	mov    rcx,QWORD PTR [rbp+0x208]
  416c3d:	add    rax,0x20
  416c41:	cmp    rcx,rax
  416c44:	je     0x416c4b
  416c46:	call   0x422528
  416c4b:	mov    rax,QWORD PTR [rbp+0x58]
  416c4f:	mov    rcx,QWORD PTR [rbp+0x118]
  416c56:	add    rax,0x10
  416c5a:	cmp    rcx,rax
  416c5d:	je     0x416c64
  416c5f:	call   0x422528
  416c64:	call   QWORD PTR [rip+0x8580a]        # 0x49c474
  416c6a:	mov    DWORD PTR [rax],0x84
  416c70:	xor    eax,eax
  416c72:	jmp    0x415b2b
  416c77:	nop    WORD PTR [rax+rax*1+0x0]
  416c80:	mov    rax,QWORD PTR [rbp+0x98]
  416c87:	mov    r15,rax
  416c8a:	jmp    0x415a9f
  416c8f:	nop
  416c90:	cmp    rsi,QWORD PTR [rbp+0x98]
  416c97:	mov    DWORD PTR [rbp+0xb8],0x0
  416ca1:	jae    0x417384
  416ca7:	movzx  edx,WORD PTR [rsi]
  416caa:	test   dx,dx
  416cad:	je     0x416360
  416cb3:	lea    rax,[rbp+0xb8]
  416cba:	mov    rdi,QWORD PTR [rbp+0x48]
  416cbe:	mov    QWORD PTR [rbp+0x28],r13
  416cc2:	mov    QWORD PTR [rbp+0x88],rax
  416cc9:	nop    DWORD PTR [rax+0x0]
  416cd0:	mov    r8,QWORD PTR [rbp+0x88]
  416cd7:	mov    rcx,rdi
  416cda:	call   0x41d7f0
  416cdf:	test   eax,eax
  416ce1:	jle    0x41722e
  416ce7:	movsxd r13,eax
  416cea:	mov    rax,0xffffffffffffffff
  416cf1:	mov    r15,r13
  416cf4:	add    r15,r14
  416cf7:	cmovae rax,r15
  416cfb:	cmp    rax,r12
  416cfe:	jbe    0x416d8e
  416d04:	test   r12,r12
  416d07:	je     0x416d30
  416d09:	js     0x416d13
  416d0b:	add    r12,r12
  416d0e:	cmp    r15,r14
  416d11:	jae    0x416d3b
  416d13:	mov    rax,QWORD PTR [rip+0x8575a]        # 0x49c474
  416d1a:	mov    QWORD PTR [rbp+0x98],rbx
  416d21:	mov    QWORD PTR [rbp+0x68],rax
  416d25:	jmp    0x415ab0
  416d2a:	nop    WORD PTR [rax+rax*1+0x0]
  416d30:	cmp    r15,r14
  416d33:	jb     0x416d13
  416d35:	mov    r12d,0xc
  416d3b:	cmp    r12,r15
  416d3e:	jae    0x416d50
  416d40:	cmp    r15,0xffffffffffffffff
  416d44:	mov    r12,r15
  416d47:	je     0x416d13
  416d49:	nop    DWORD PTR [rax+0x0]
  416d50:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  416d57:	sete   r8b
  416d5b:	test   rbx,rbx
  416d5e:	mov    BYTE PTR [rbp+0x78],r8b
  416d62:	je     0x416dc2
  416d64:	test   r8b,r8b
  416d67:	jne    0x416dc2
  416d69:	mov    rdx,r12
  416d6c:	mov    rcx,rbx
  416d6f:	call   0x415500
  416d74:	movzx  r8d,BYTE PTR [rbp+0x78]
  416d79:	mov    r10,rax
  416d7c:	test   r10,r10
  416d7f:	je     0x416d13
  416d81:	test   r14,r14
  416d84:	je     0x416d8b
  416d86:	test   r8b,r8b
  416d89:	jne    0x416dd4
  416d8b:	mov    rbx,r10
  416d8e:	lea    rcx,[rbx+r14*1]
  416d92:	mov    r8,r13
  416d95:	mov    rdx,rdi
  416d98:	add    rsi,0x2
  416d9c:	call   0x4224d8
  416da1:	cmp    rsi,QWORD PTR [rbp+0x98]
  416da8:	jae    0x417258
  416dae:	movzx  edx,WORD PTR [rsi]
  416db1:	test   dx,dx
  416db4:	je     0x416360
  416dba:	mov    r14,r15
  416dbd:	jmp    0x416cd0
  416dc2:	mov    rcx,r12
  416dc5:	call   0x414e40
  416dca:	movzx  r8d,BYTE PTR [rbp+0x78]
  416dcf:	mov    r10,rax
  416dd2:	jmp    0x416d7c
  416dd4:	mov    rdx,rbx
  416dd7:	mov    r8,r14
  416dda:	mov    rcx,r10
  416ddd:	call   0x4224d8
  416de2:	mov    rbx,rax
  416de5:	jmp    0x416d8e
  416de7:	nop    WORD PTR [rax+rax*1+0x0]
  416df0:	mov    r13,QWORD PTR [rbp+0x98]
  416df7:	mov    rsi,QWORD PTR [rbp+0x30]
  416dfb:	mov    QWORD PTR [rbp+0x98],r12
  416e02:	mov    r12,QWORD PTR [rbp+0x78]
  416e06:	mov    ecx,DWORD PTR [rbp+0x88]
  416e0c:	mov    r15d,0x1
  416e12:	test   ecx,ecx
  416e14:	je     0x4164bb
  416e1a:	mov    QWORD PTR [rbp+0x30],rdi
  416e1e:	mov    r9d,0x1
  416e24:	mov    r15d,0x1
  416e2a:	jmp    0x4164c6
  416e2f:	cmp    rdx,r14
  416e32:	jb     0x4169d5
  416e38:	mov    r12d,0xc
  416e3e:	cmp    r12,rdx
  416e41:	jae    0x416e50
  416e43:	cmp    rdx,0xffffffffffffffff
  416e47:	je     0x4169d5
  416e4d:	mov    r12,rdx
  416e50:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  416e57:	sete   r15b
  416e5b:	test   rbx,rbx
  416e5e:	je     0x417268
  416e64:	test   r15b,r15b
  416e67:	jne    0x417268
  416e6d:	mov    rdx,r12
  416e70:	mov    rcx,rbx
  416e73:	call   0x415500
  416e78:	mov    r9,rax
  416e7b:	test   r9,r9
  416e7e:	je     0x4169d5
  416e84:	test   r14,r14
  416e87:	je     0x416e92
  416e89:	test   r15b,r15b
  416e8c:	jne    0x4172e0
  416e92:	mov    rbx,r9
  416e95:	test   rdi,rdi
  416e98:	je     0x41737c
  416e9e:	movzx  edx,WORD PTR [rsi]
  416ea1:	test   dx,dx
  416ea4:	je     0x416360
  416eaa:	mov    r15,r14
  416ead:	mov    QWORD PTR [rbp+0x88],r13
  416eb4:	mov    QWORD PTR [rbp+0x78],r12
  416eb8:	mov    r13,QWORD PTR [rbp+0x48]
  416ebc:	mov    r14,QWORD PTR [rbp+0x38]
  416ec0:	jmp    0x416ece
  416ec2:	movzx  edx,WORD PTR [rsi]
  416ec5:	test   dx,dx
  416ec8:	je     0x416360
  416ece:	mov    r8,r14
  416ed1:	mov    rcx,r13
  416ed4:	call   0x41d7f0
  416ed9:	test   eax,eax
  416edb:	jle    0x416360
  416ee1:	movsxd r12,eax
  416ee4:	lea    rcx,[rbx+r15*1]
  416ee8:	mov    rdx,r13
  416eeb:	mov    r8,r12
  416eee:	add    r15,r12
  416ef1:	add    rsi,0x2
  416ef5:	call   0x4224d8
  416efa:	sub    rdi,r12
  416efd:	jne    0x416ec2
  416eff:	mov    r13,QWORD PTR [rbp+0x88]
  416f06:	mov    r12,QWORD PTR [rbp+0x78]
  416f0a:	cmp    rsi,QWORD PTR [rbp+0x98]
  416f11:	jne    0x416360
  416f17:	mov    QWORD PTR [rbp+0x98],rbx
  416f1e:	mov    rdi,QWORD PTR [rbp+0x68]
  416f22:	cmp    QWORD PTR [rbp+0x30],rdi
  416f26:	jae    0x415c06
  416f2c:	test   BYTE PTR [r13+0x10],0x2
  416f31:	je     0x415c06
  416f37:	sub    rdi,QWORD PTR [rbp+0x30]
  416f3b:	mov    rax,0xffffffffffffffff
  416f42:	mov    rbx,rdi
  416f45:	add    rbx,r15
  416f48:	cmovae rax,rbx
  416f4c:	cmp    r12,rax
  416f4f:	jae    0x41731a
  416f55:	test   r12,r12
  416f58:	je     0x4172f6
  416f5e:	js     0x416550
  416f64:	add    r12,r12
  416f67:	cmp    r15,rbx
  416f6a:	ja     0x416550
  416f70:	cmp    r12,rbx
  416f73:	jae    0x416f82
  416f75:	cmp    rbx,0xffffffffffffffff
  416f79:	mov    r12,rbx
  416f7c:	je     0x416550
  416f82:	mov    rax,QWORD PTR [rbp+0x98]
  416f89:	cmp    rax,QWORD PTR [rbp+0x4e0]
  416f90:	sete   sil
  416f94:	test   rax,rax
  416f97:	je     0x41730a
  416f9d:	test   sil,sil
  416fa0:	jne    0x41730a
  416fa6:	mov    rcx,QWORD PTR [rbp+0x98]
  416fad:	mov    rdx,r12
  416fb0:	call   0x415500
  416fb5:	mov    r14,rax
  416fb8:	test   r14,r14
  416fbb:	je     0x416550
  416fc1:	test   r15,r15
  416fc4:	je     0x416fdd
  416fc6:	test   sil,sil
  416fc9:	je     0x416fdd
  416fcb:	mov    rdx,QWORD PTR [rbp+0x98]
  416fd2:	mov    r8,r15
  416fd5:	mov    rcx,r14
  416fd8:	call   0x4224d8
  416fdd:	lea    rcx,[r14+r15*1]
  416fe1:	mov    r8,rdi
  416fe4:	mov    edx,0x20
  416fe9:	mov    r15,rbx
  416fec:	call   0x4224c8
  416ff1:	mov    QWORD PTR [rbp+0x98],r14
  416ff8:	jmp    0x415c06
  416ffd:	mov    rsi,QWORD PTR [rax+0x10]
  417001:	mov    eax,DWORD PTR [rbp+0x88]
  417007:	test   eax,eax
  417009:	je     0x4164a3
  41700f:	movzx  edx,WORD PTR [rsi]
  417012:	mov    DWORD PTR [rbp+0xc0],0x0
  41701c:	test   dx,dx
  41701f:	je     0x41734c
  417025:	lea    rax,[rbp+0xc0]
  41702c:	mov    QWORD PTR [rbp+0x98],r13
  417033:	xor    edi,edi
  417035:	mov    QWORD PTR [rbp+0x88],rsi
  41703c:	mov    r15,QWORD PTR [rbp+0x48]
  417040:	mov    r13,rax
  417043:	jmp    0x41705a
  417045:	add    rsi,0x2
  417049:	movzx  edx,WORD PTR [rsi]
  41704c:	cdqe   
  41704e:	add    rdi,rax
  417051:	test   dx,dx
  417054:	je     0x417121
  41705a:	mov    r8,r13
  41705d:	mov    rcx,r15
  417060:	call   0x41d7f0
  417065:	test   eax,eax
  417067:	jns    0x417045
  417069:	jmp    0x415f58
  41706e:	add    r8,0x1
  417072:	cmp    r11,r8
  417075:	je     0x417337
  41707b:	xor    r15d,r15d
  41707e:	movabs r10,0x1999999999999999
  417088:	nop    DWORD PTR [rax+rax*1+0x0]
  417090:	add    r8,0x1
  417094:	movsx  edx,BYTE PTR [r8-0x1]
  417099:	mov    rcx,0xffffffffffffffff
  4170a0:	sub    edx,0x30
  4170a3:	cmp    r15,r10
  4170a6:	movsxd rdx,edx
  4170a9:	ja     0x4170b2
  4170ab:	lea    rcx,[r15+r15*4]
  4170af:	add    rcx,rcx
  4170b2:	add    rcx,rdx
  4170b5:	mov    rdx,0xffffffffffffffff
  4170bc:	mov    r15,rcx
  4170bf:	cmovb  r15,rdx
  4170c3:	cmp    r8,r11
  4170c6:	jne    0x417090
  4170c8:	jmp    0x415eca
  4170cd:	xor    esi,esi
  4170cf:	movabs r11,0x1999999999999999
  4170d9:	nop    DWORD PTR [rax+0x0]
  4170e0:	add    r8,0x1
  4170e4:	movsx  edx,BYTE PTR [r8-0x1]
  4170e9:	mov    rcx,0xffffffffffffffff
  4170f0:	sub    edx,0x30
  4170f3:	cmp    rsi,r11
  4170f6:	movsxd rdx,edx
  4170f9:	ja     0x417102
  4170fb:	lea    rcx,[rsi+rsi*4]
  4170ff:	add    rcx,rcx
  417102:	mov    rsi,rcx
  417105:	add    rsi,rdx
  417108:	mov    rdx,0xffffffffffffffff
  41710f:	cmovb  rsi,rdx
  417113:	cmp    r8,r9
  417116:	jne    0x4170e0
  417118:	mov    QWORD PTR [rbp+0x68],rsi
  41711c:	jmp    0x415e80
  417121:	mov    r13,QWORD PTR [rbp+0x98]
  417128:	mov    QWORD PTR [rbp+0x98],rsi
  41712f:	mov    rsi,QWORD PTR [rbp+0x88]
  417136:	mov    QWORD PTR [rbp+0x30],rdi
  41713a:	mov    rdi,QWORD PTR [rbp+0x68]
  41713e:	cmp    QWORD PTR [rbp+0x30],rdi
  417142:	mov    rdi,QWORD PTR [rbp+0x30]
  417146:	jae    0x41699a
  41714c:	xor    r15d,r15d
  41714f:	mov    r9d,0x1
  417155:	jmp    0x4164d4
  41715a:	cmp    rsi,r14
  41715d:	jb     0x416550
  417163:	cmp    rsi,0xc
  417167:	mov    ebx,0xc
  41716c:	jbe    0x416a9f
  417172:	jmp    0x416a92
  417177:	cmp    rdx,rbx
  41717a:	ja     0x4167ec
  417180:	movsxd rdx,DWORD PTR [rbp+0xbc]
  417187:	test   edx,edx
  417189:	jns    0x41607f
  41718f:	call   QWORD PTR [rip+0x852df]        # 0x49c474
  417195:	mov    ebx,DWORD PTR [rax]
  417197:	test   ebx,ebx
  417199:	jne    0x4171af
  41719b:	movzx  eax,BYTE PTR [r13+0x48]
  4171a0:	mov    bl,0x2a
  4171a2:	and    eax,0xffffffef
  4171a5:	cmp    al,0x63
  4171a7:	mov    eax,0x16
  4171ac:	cmovne ebx,eax
  4171af:	mov    rax,QWORD PTR [rbp+0x98]
  4171b6:	test   rax,rax
  4171b9:	je     0x4171cc
  4171bb:	cmp    QWORD PTR [rbp+0x4e0],rax
  4171c2:	je     0x4171cc
  4171c4:	mov    rcx,rax
  4171c7:	call   0x422528
  4171cc:	mov    rax,QWORD PTR [rbp+0x50]
  4171d0:	test   rax,rax
  4171d3:	je     0x4171dd
  4171d5:	mov    rcx,rax
  4171d8:	call   0x422528
  4171dd:	mov    rax,QWORD PTR [rbp+0x60]
  4171e1:	mov    rcx,QWORD PTR [rbp+0x208]
  4171e8:	add    rax,0x20
  4171ec:	cmp    rcx,rax
  4171ef:	je     0x4171f6
  4171f1:	call   0x422528
  4171f6:	mov    rax,QWORD PTR [rbp+0x58]
  4171fa:	mov    rcx,QWORD PTR [rbp+0x118]
  417201:	add    rax,0x10
  417205:	cmp    rcx,rax
  417208:	je     0x41720f
  41720a:	call   0x422528
  41720f:	call   QWORD PTR [rip+0x8525f]        # 0x49c474
  417215:	mov    DWORD PTR [rax],ebx
  417217:	xor    eax,eax
  417219:	jmp    0x415b2b
  41721e:	mov    rcx,rbx
  417221:	call   0x414e40
  417226:	mov    r9,rax
  417229:	jmp    0x416aca
  41722e:	test   rbx,rbx
  417231:	mov    QWORD PTR [rbp+0x98],rbx
  417238:	je     0x415f6e
  41723e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  417245:	je     0x415f6e
  41724b:	mov    rcx,rbx
  41724e:	call   0x422528
  417253:	jmp    0x415f6e
  417258:	mov    r13,QWORD PTR [rbp+0x28]
  41725c:	mov    QWORD PTR [rbp+0x98],rbx
  417263:	jmp    0x416f1e
  417268:	mov    rcx,r12
  41726b:	call   0x414e40
  417270:	mov    r9,rax
  417273:	jmp    0x416e7b
  417278:	mov    r8,r14
  41727b:	mov    rdx,r15
  41727e:	mov    rcx,r9
  417281:	call   0x4224d8
  417286:	mov    QWORD PTR [rbp+0x98],rax
  41728d:	jmp    0x416ae8
  417292:	cmp    r14,QWORD PTR [rbp+0x88]
  417299:	ja     0x416540
  41729f:	mov    r12d,0xc
  4172a5:	jmp    0x41651e
  4172aa:	mov    rcx,r12
  4172ad:	call   0x414e40
  4172b2:	mov    r11,QWORD PTR [rbp+0x78]
  4172b6:	mov    r10,rax
  4172b9:	movzx  r8d,BYTE PTR [rbp+0x28]
  4172be:	mov    r9d,DWORD PTR [rbp+0x20]
  4172c2:	jmp    0x416932
  4172c7:	mov    r10,rbx
  4172ca:	jmp    0x416966
  4172cf:	mov    rdx,rax
  4172d2:	jmp    0x41681b
  4172d7:	lea    rdx,[rax+0x1]
  4172db:	jmp    0x4167dc
  4172e0:	mov    rdx,rbx
  4172e3:	mov    r8,r14
  4172e6:	mov    rcx,r9
  4172e9:	call   0x4224d8
  4172ee:	mov    rbx,rax
  4172f1:	jmp    0x416e95
  4172f6:	cmp    r15,rbx
  4172f9:	ja     0x416550
  4172ff:	mov    r12d,0xc
  417305:	jmp    0x416f70
  41730a:	mov    rcx,r12
  41730d:	call   0x414e40
  417312:	mov    r14,rax
  417315:	jmp    0x416fb8
  41731a:	mov    r14,QWORD PTR [rbp+0x98]
  417321:	jmp    0x416fdd
  417326:	cmp    rsi,r14
  417329:	jae    0x416550
  41732f:	mov    rbx,rax
  417332:	jmp    0x416a7d
  417337:	mov    rax,QWORD PTR [rax+0x10]
  41733b:	xor    edi,edi
  41733d:	mov    QWORD PTR [rbp+0x98],rax
  417344:	mov    rsi,rax
  417347:	jmp    0x416e06
  41734c:	mov    QWORD PTR [rbp+0x98],rsi
  417353:	mov    QWORD PTR [rbp+0x30],0x0
  41735b:	jmp    0x41713a
  417360:	mov    QWORD PTR [rbp+0x98],rsi
  417367:	xor    edi,edi
  417369:	jmp    0x416e06
  41736e:	mov    rdx,QWORD PTR [rbp-0x10]
  417372:	call   0x41d530
  417377:	jmp    0x4167cc
  41737c:	mov    r15,r14
  41737f:	jmp    0x416f0a
  417384:	mov    r15,r14
  417387:	jmp    0x416f17
  41738c:	mov    rsi,QWORD PTR [rax+0x10]
  417390:	jmp    0x41700f
  417395:	mov    r12,rax
  417398:	jmp    0x415c88
  41739d:	nop
  41739e:	nop
  41739f:	nop
  4173a0:	push   r15
  4173a2:	push   r14
  4173a4:	push   r13
  4173a6:	push   r12
  4173a8:	push   rbp
  4173a9:	push   rdi
  4173aa:	push   rsi
  4173ab:	push   rbx
  4173ac:	sub    rsp,0x28
  4173b0:	test   rdx,rdx
  4173b3:	mov    rdi,rdx
  4173b6:	mov    rsi,rcx
  4173b9:	sete   dl
  4173bc:	test   r9,r9
  4173bf:	mov    DWORD PTR [rsp+0x80],r8d
  4173c7:	sete   al
  4173ca:	mov    rbp,r9
  4173cd:	or     dl,al
  4173cf:	jne    0x4174c3
  4173d5:	test   rcx,rcx
  4173d8:	je     0x4174c3
  4173de:	mov    rcx,QWORD PTR [rcx]
  4173e1:	test   rcx,rcx
  4173e4:	je     0x417490
  4173ea:	cmp    QWORD PTR [rdi],0x0
  4173ee:	je     0x417490
  4173f4:	xor    r13d,r13d
  4173f7:	movabs r12,0x8000000000000000
  417401:	jmp    0x417416
  417403:	cmp    ebx,DWORD PTR [rsp+0x80]
  41740a:	mov    rax,QWORD PTR [rsi]
  41740d:	mov    BYTE PTR [rax+r13*1],bl
  417411:	mov    r13,r14
  417414:	je     0x417468
  417416:	mov    rcx,rbp
  417419:	call   0x422508
  41741e:	cmp    eax,0xffffffff
  417421:	mov    ebx,eax
  417423:	je     0x417468
  417425:	mov    rax,QWORD PTR [rdi]
  417428:	lea    r14,[r13+0x1]
  41742c:	cmp    r14,rax
  41742f:	jb     0x417403
  417431:	lea    r15,[rax+rax*1+0x1]
  417436:	cmp    r15,r12
  417439:	cmova  r15,r12
  41743d:	cmp    r14,r15
  417440:	jae    0x4174b5
  417442:	mov    rcx,QWORD PTR [rsi]
  417445:	mov    rdx,r15
  417448:	call   0x415500
  41744d:	test   rax,rax
  417450:	je     0x417475
  417452:	cmp    ebx,DWORD PTR [rsp+0x80]
  417459:	mov    QWORD PTR [rsi],rax
  41745c:	mov    QWORD PTR [rdi],r15
  41745f:	mov    BYTE PTR [rax+r13*1],bl
  417463:	mov    r13,r14
  417466:	jne    0x417416
  417468:	mov    rax,QWORD PTR [rsi]
  41746b:	test   r13,r13
  41746e:	mov    BYTE PTR [rax+r13*1],0x0
  417473:	jne    0x4174b0
  417475:	mov    rax,0xffffffffffffffff
  41747c:	add    rsp,0x28
  417480:	pop    rbx
  417481:	pop    rsi
  417482:	pop    rdi
  417483:	pop    rbp
  417484:	pop    r12
  417486:	pop    r13
  417488:	pop    r14
  41748a:	pop    r15
  41748c:	ret    
  41748d:	nop    DWORD PTR [rax]
  417490:	mov    QWORD PTR [rdi],0x78
  417497:	mov    edx,0x78
  41749c:	call   0x415500
  4174a1:	test   rax,rax
  4174a4:	je     0x417475
  4174a6:	mov    QWORD PTR [rsi],rax
  4174a9:	jmp    0x4173f4
  4174ae:	xchg   ax,ax
  4174b0:	mov    rax,r13
  4174b3:	jmp    0x41747c
  4174b5:	call   QWORD PTR [rip+0x84fb9]        # 0x49c474
  4174bb:	mov    DWORD PTR [rax],0x84
  4174c1:	jmp    0x417475
  4174c3:	call   QWORD PTR [rip+0x84fab]        # 0x49c474
  4174c9:	mov    DWORD PTR [rax],0x16
  4174cf:	mov    rax,0xffffffffffffffff
  4174d6:	jmp    0x41747c
  4174d8:	nop
  4174d9:	nop
  4174da:	nop
  4174db:	nop
  4174dc:	nop
  4174dd:	nop
  4174de:	nop
  4174df:	nop
  4174e0:	test   r8,r8
  4174e3:	mov    r9d,edx
  4174e6:	je     0x417507
  4174e8:	test   cl,0x3
  4174eb:	je     0x417514
  4174ed:	cmp    BYTE PTR [rcx],dl
  4174ef:	jne    0x4174fd
  4174f1:	jmp    0x417510
  4174f3:	test   cl,0x3
  4174f6:	je     0x417514
  4174f8:	cmp    BYTE PTR [rcx],r9b
  4174fb:	je     0x417510
  4174fd:	add    rcx,0x1
  417501:	sub    r8,0x1
  417505:	jne    0x4174f3
  417507:	xor    eax,eax
  417509:	ret    
  41750a:	nop    WORD PTR [rax+rax*1+0x0]
  417510:	mov    rax,rcx
  417513:	ret    
  417514:	movzx  eax,dl
  417517:	mov    r11d,eax
  41751a:	shl    r11d,0x8
  41751e:	or     r11d,eax
  417521:	mov    eax,r11d
  417524:	shl    eax,0x10
  417527:	or     r11d,eax
  41752a:	cmp    r8,0x3
  41752e:	ja     0x417540
  417530:	jmp    0x417558
  417532:	sub    r8,0x4
  417536:	add    rcx,0x4
  41753a:	cmp    r8,0x3
  41753e:	jbe    0x417580
  417540:	mov    eax,DWORD PTR [rcx]
  417542:	xor    eax,r11d
  417545:	lea    r10d,[rax-0x1010101]
  41754c:	not    eax
  41754e:	and    eax,r10d
  417551:	test   eax,0x80808080
  417556:	je     0x417532
  417558:	add    r8,rcx
  41755b:	cmp    BYTE PTR [rcx],dl
  41755d:	lea    rax,[rcx+0x1]
  417561:	jne    0x41756f
  417563:	jmp    0x417510
  417565:	add    rax,0x1
  417569:	cmp    BYTE PTR [rax-0x1],r9b
  41756d:	je     0x417510
  41756f:	cmp    rax,r8
  417572:	mov    rcx,rax
  417575:	jne    0x417565
  417577:	xor    eax,eax
  417579:	ret    
  41757a:	nop    WORD PTR [rax+rax*1+0x0]
  417580:	test   r8,r8
  417583:	jne    0x417558
  417585:	jmp    0x417507
  417587:	nop
  417588:	nop
  417589:	nop
  41758a:	nop
  41758b:	nop
  41758c:	nop
  41758d:	nop
  41758e:	nop
  41758f:	nop
  417590:	xor    r9d,r9d
  417593:	cmp    QWORD PTR [rdx],0x0
  417597:	mov    rax,QWORD PTR [rdx+0x8]
  41759b:	lea    r10,[rip+0x19ba6]        # 0x431148
  4175a2:	je     0x4175d8
  4175a4:	cmp    DWORD PTR [rax],0x16
  4175a7:	ja     0x417674
  4175ad:	mov    r8d,DWORD PTR [rax]
  4175b0:	movsxd r8,DWORD PTR [r10+r8*4]
  4175b4:	add    r8,r10
  4175b7:	jmp    r8
  4175ba:	nop    WORD PTR [rax+rax*1+0x0]
  4175c0:	mov    r8,QWORD PTR [rcx]
  4175c3:	add    rcx,0x8
  4175c7:	mov    QWORD PTR [rax+0x10],r8
  4175cb:	add    r9,0x1
  4175cf:	add    rax,0x20
  4175d3:	cmp    QWORD PTR [rdx],r9
  4175d6:	ja     0x4175a4
  4175d8:	xor    eax,eax
  4175da:	ret    
  4175db:	nop    DWORD PTR [rax+rax*1+0x0]
  4175e0:	mov    r8d,DWORD PTR [rcx]
  4175e3:	add    rcx,0x8
  4175e7:	mov    DWORD PTR [rax+0x10],r8d
  4175eb:	jmp    0x4175cb
  4175ed:	nop    DWORD PTR [rax]
  4175f0:	mov    r8d,DWORD PTR [rcx]
  4175f3:	add    rcx,0x8
  4175f7:	mov    WORD PTR [rax+0x10],r8w
  4175fc:	jmp    0x4175cb
  4175fe:	xchg   ax,ax
  417600:	mov    r8d,DWORD PTR [rcx]
  417603:	add    rcx,0x8
  417607:	mov    BYTE PTR [rax+0x10],r8b
  41760b:	jmp    0x4175cb
  41760d:	nop    DWORD PTR [rax]
  417610:	movsd  xmm0,QWORD PTR [rcx]
  417614:	add    rcx,0x8
  417618:	movsd  QWORD PTR [rax+0x10],xmm0
  41761d:	jmp    0x4175cb
  41761f:	nop
  417620:	mov    r8,QWORD PTR [rcx]
  417623:	add    rcx,0x8
  417627:	fld    TBYTE PTR [r8]
  41762a:	fstp   TBYTE PTR [rax+0x10]
  41762d:	jmp    0x4175cb
  41762f:	nop
  417630:	mov    r8,QWORD PTR [rcx]
  417633:	add    rcx,0x8
  417637:	test   r8,r8
  41763a:	mov    QWORD PTR [rax+0x10],r8
  41763e:	jne    0x4175cb
  417640:	lea    r11,[rip+0x19af9]        # 0x431140
  417647:	mov    QWORD PTR [rax+0x10],r11
  41764b:	jmp    0x4175cb
  417650:	mov    r8,QWORD PTR [rcx]
  417653:	add    rcx,0x8
  417657:	test   r8,r8
  41765a:	mov    QWORD PTR [rax+0x10],r8
  41765e:	jne    0x4175cb
  417664:	lea    r11,[rip+0x19b39]        # 0x4311a4
  41766b:	mov    QWORD PTR [rax+0x10],r11
  41766f:	jmp    0x4175cb
  417674:	mov    eax,0xffffffff
  417679:	ret    
  41767a:	nop
  41767b:	nop
  41767c:	nop
  41767d:	nop
  41767e:	nop
  41767f:	nop
  417680:	push   r15
  417682:	push   r14
  417684:	push   r13
  417686:	push   r12
  417688:	push   rbp
  417689:	push   rdi
  41768a:	push   rsi
  41768b:	push   rbx
  41768c:	sub    rsp,0x58
  417690:	xor    r10d,r10d
  417693:	mov    r14d,0x7
  417699:	lea    rax,[rdx+0x20]
  41769d:	lea    r15,[r8+0x10]
  4176a1:	mov    QWORD PTR [rdx],0x0
  4176a8:	mov    rbx,rcx
  4176ab:	mov    r12,rdx
  4176ae:	mov    r13,r8
  4176b1:	mov    QWORD PTR [rdx+0x8],rax
  4176b5:	mov    QWORD PTR [rsp+0x30],rax
  4176ba:	mov    QWORD PTR [r8],0x0
  4176c1:	mov    QWORD PTR [r8+0x8],r15
  4176c5:	mov    r9,QWORD PTR [rdx+0x8]
  4176c9:	mov    rcx,QWORD PTR [rdx]
  4176cc:	mov    QWORD PTR [rsp+0x20],0x0
  4176d5:	mov    QWORD PTR [rsp+0x28],0x7
  4176de:	mov    QWORD PTR [rsp+0x38],0x0
  4176e7:	jmp    0x4176fb
  4176e9:	nop    DWORD PTR [rax+0x0]
  4176f0:	cmp    al,0x25
  4176f2:	lea    r11,[rbx+0x1]
  4176f6:	je     0x417730
  4176f8:	mov    rbx,r11
  4176fb:	movzx  eax,BYTE PTR [rbx]
  4176fe:	test   al,al
  417700:	jne    0x4176f0
  417702:	lea    rax,[rcx+rcx*4]
  417706:	lea    rax,[rcx+rax*2]
  41770a:	mov    QWORD PTR [r9+rax*8],rbx
  41770e:	mov    rax,QWORD PTR [rsp+0x20]
  417713:	mov    QWORD PTR [r12+0x10],r10
  417718:	mov    QWORD PTR [r12+0x18],rax
  41771d:	xor    eax,eax
  41771f:	add    rsp,0x58
  417723:	pop    rbx
  417724:	pop    rsi
  417725:	pop    rdi
  417726:	pop    rbp
  417727:	pop    r12
  417729:	pop    r13
  41772b:	pop    r14
  41772d:	pop    r15
  41772f:	ret    
  417730:	lea    rax,[rcx+rcx*4]
  417734:	lea    rax,[rcx+rax*2]
  417738:	lea    rsi,[r9+rax*8]
  41773c:	mov    QWORD PTR [rsi],rbx
  41773f:	mov    DWORD PTR [rsi+0x10],0x0
  417746:	mov    QWORD PTR [rsi+0x18],0x0
  41774e:	mov    QWORD PTR [rsi+0x20],0x0
  417756:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  41775e:	mov    QWORD PTR [rsi+0x30],0x0
  417766:	mov    QWORD PTR [rsi+0x38],0x0
  41776e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  417776:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  41777e:	movsx  eax,BYTE PTR [rbx+0x1]
  417782:	lea    edx,[rax-0x30]
  417785:	cmp    dl,0x9
  417788:	jbe    0x417984
  41778e:	mov    rdi,0xffffffffffffffff
  417795:	lea    rcx,[r11+0x1]
  417799:	jmp    0x4177c7
  41779b:	nop    DWORD PTR [rax+rax*1+0x0]
  4177a0:	cmp    al,0x2d
  4177a2:	je     0x4177d5
  4177a4:	cmp    al,0x2b
  4177a6:	je     0x4177e0
  4177a8:	cmp    al,0x20
  4177aa:	je     0x4177f0
  4177ac:	cmp    al,0x23
  4177ae:	je     0x417800
  4177b0:	cmp    al,0x30
  4177b2:	jne    0x417806
  4177b4:	or     DWORD PTR [rsi+0x10],0x20
  4177b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4177c0:	movzx  eax,BYTE PTR [rcx]
  4177c3:	add    rcx,0x1
  4177c7:	cmp    al,0x27
  4177c9:	lea    rbx,[rcx-0x1]
  4177cd:	jne    0x4177a0
  4177cf:	or     DWORD PTR [rsi+0x10],0x1
  4177d3:	jmp    0x4177c0
  4177d5:	or     DWORD PTR [rsi+0x10],0x2
  4177d9:	jmp    0x4177c0
  4177db:	nop    DWORD PTR [rax+rax*1+0x0]
  4177e0:	or     DWORD PTR [rsi+0x10],0x4
  4177e4:	jmp    0x4177c0
  4177e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4177f0:	or     DWORD PTR [rsi+0x10],0x8
  4177f4:	jmp    0x4177c0
  4177f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417800:	or     DWORD PTR [rsi+0x10],0x10
  417804:	jmp    0x4177c0
  417806:	cmp    al,0x2a
  417808:	mov    rdx,rbx
  41780b:	je     0x417a81
  417811:	lea    ecx,[rax-0x30]
  417814:	cmp    cl,0x9
  417817:	jbe    0x417a23
  41781d:	cmp    al,0x2e
  41781f:	je     0x4178b9
  417825:	xor    edx,edx
  417827:	mov    r8d,0x1
  41782d:	jmp    0x417873
  41782f:	nop
  417830:	cmp    al,0x4c
  417832:	je     0x4178a0
  417834:	cmp    al,0x6c
  417836:	je     0x4178b0
  417838:	cmp    al,0x6a
  41783a:	je     0x417890
  41783c:	mov    ecx,eax
  41783e:	and    ecx,0xffffffdf
  417841:	cmp    cl,0x5a
  417844:	je     0x417890
  417846:	cmp    al,0x74
  417848:	je     0x417890
  41784a:	cmp    al,0x49
  41784c:	jne    0x417a5c
  417852:	cmp    BYTE PTR [rbx+0x1],0x36
  417856:	jne    0x41794f
  41785c:	cmp    BYTE PTR [rbx+0x2],0x34
  417860:	jne    0x41794f
  417866:	add    edx,0x10
  417869:	add    rbx,0x3
  41786d:	nop    DWORD PTR [rax]
  417870:	movzx  eax,BYTE PTR [rbx]
  417873:	cmp    al,0x68
  417875:	jne    0x417830
  417877:	mov    ecx,edx
  417879:	mov    eax,r8d
  41787c:	add    rbx,0x1
  417880:	and    ecx,0x1
  417883:	shl    eax,cl
  417885:	or     edx,eax
  417887:	jmp    0x417870
  417889:	nop    DWORD PTR [rax+0x0]
  417890:	add    edx,0x10
  417893:	add    rbx,0x1
  417897:	jmp    0x417870
  417899:	nop    DWORD PTR [rax+0x0]
  4178a0:	or     edx,0x4
  4178a3:	add    rbx,0x1
  4178a7:	jmp    0x417870
  4178a9:	nop    DWORD PTR [rax+0x0]
  4178b0:	add    edx,0x8
  4178b3:	add    rbx,0x1
  4178b7:	jmp    0x417870
  4178b9:	cmp    BYTE PTR [rbx+0x1],0x2a
  4178bd:	jne    0x417b27
  4178c3:	lea    rbp,[rbx+0x2]
  4178c7:	mov    QWORD PTR [rsi+0x30],rbx
  4178cb:	cmp    QWORD PTR [rsp+0x20],0x1
  4178d1:	mov    QWORD PTR [rsi+0x38],rbp
  4178d5:	movsx  eax,BYTE PTR [rbx+0x2]
  4178d9:	lea    edx,[rax-0x30]
  4178dc:	jbe    0x417d80
  4178e2:	cmp    dl,0x9
  4178e5:	ja     0x417d92
  4178eb:	mov    rdx,rbp
  4178ee:	add    rdx,0x1
  4178f2:	movzx  ecx,BYTE PTR [rdx]
  4178f5:	lea    r8d,[rcx-0x30]
  4178f9:	cmp    r8b,0x9
  4178fd:	jbe    0x4178ee
  4178ff:	cmp    cl,0x24
  417902:	jne    0x417d92
  417908:	xor    ebx,ebx
  41790a:	movabs rcx,0x1999999999999999
  417914:	sub    eax,0x30
  417917:	mov    rdx,0xffffffffffffffff
  41791e:	cmp    rbx,rcx
  417921:	cdqe   
  417923:	ja     0x41792c
  417925:	lea    rdx,[rbx+rbx*4]
  417929:	add    rdx,rdx
  41792c:	add    rdx,rax
  41792f:	mov    rbx,rdx
  417932:	jae    0x41810e
  417938:	add    rbp,0x1
  41793c:	movsx  eax,BYTE PTR [rbp+0x0]
  417940:	mov    rbx,0xffffffffffffffff
  417947:	lea    edx,[rax-0x30]
  41794a:	cmp    dl,0x9
  41794d:	jbe    0x41790a
  41794f:	mov    rcx,QWORD PTR [r13+0x8]
  417953:	cmp    r15,rcx
  417956:	je     0x41795d
  417958:	call   0x422528
  41795d:	mov    rcx,QWORD PTR [r12+0x8]
  417962:	cmp    QWORD PTR [rsp+0x30],rcx
  417967:	je     0x41796e
  417969:	call   0x422528
  41796e:	call   QWORD PTR [rip+0x84b00]        # 0x49c474
  417974:	mov    DWORD PTR [rax],0x16
  41797a:	mov    eax,0xffffffff
  41797f:	jmp    0x41771f
  417984:	mov    rdx,r11
  417987:	nop    WORD PTR [rax+rax*1+0x0]
  417990:	add    rdx,0x1
  417994:	movzx  r8d,BYTE PTR [rdx]
  417998:	lea    ecx,[r8-0x30]
  41799c:	cmp    cl,0x9
  41799f:	jbe    0x417990
  4179a1:	cmp    r8b,0x24
  4179a5:	jne    0x41778e
  4179ab:	mov    rcx,r11
  4179ae:	xor    edi,edi
  4179b0:	jmp    0x4179cc
  4179b2:	movsx  eax,BYTE PTR [rcx+0x1]
  4179b6:	lea    rdx,[rcx+0x1]
  4179ba:	mov    rdi,0xffffffffffffffff
  4179c1:	lea    ecx,[rax-0x30]
  4179c4:	cmp    cl,0x9
  4179c7:	ja     0x41794f
  4179c9:	mov    rcx,rdx
  4179cc:	movabs rbx,0x1999999999999999
  4179d6:	sub    eax,0x30
  4179d9:	mov    rdx,0xffffffffffffffff
  4179e0:	cmp    rdi,rbx
  4179e3:	cdqe   
  4179e5:	ja     0x4179ee
  4179e7:	lea    rdx,[rdi+rdi*4]
  4179eb:	add    rdx,rdx
  4179ee:	mov    rdi,rdx
  4179f1:	add    rdi,rax
  4179f4:	jb     0x4179b2
  4179f6:	movsx  eax,BYTE PTR [rcx+0x1]
  4179fa:	lea    rdx,[rcx+0x1]
  4179fe:	lea    r8d,[rax-0x30]
  417a02:	cmp    r8b,0x9
  417a06:	jbe    0x4179c9
  417a08:	sub    rdi,0x1
  417a0c:	cmp    rdi,0xfffffffffffffffd
  417a10:	ja     0x41794f
  417a16:	lea    r11,[rcx+0x2]
  417a1a:	movzx  eax,BYTE PTR [rcx+0x2]
  417a1e:	jmp    0x417795
  417a23:	mov    QWORD PTR [rsi+0x18],rbx
  417a27:	movzx  eax,BYTE PTR [rbx]
  417a2a:	sub    eax,0x30
  417a2d:	cmp    al,0x9
  417a2f:	ja     0x41816c
  417a35:	add    rbx,0x1
  417a39:	movzx  eax,BYTE PTR [rbx]
  417a3c:	sub    eax,0x30
  417a3f:	cmp    al,0x9
  417a41:	jbe    0x417a35
  417a43:	mov    rax,rbx
  417a46:	sub    rax,rdx
  417a49:	cmp    r10,rax
  417a4c:	mov    QWORD PTR [rsi+0x20],rbx
  417a50:	cmovb  r10,rax
  417a54:	movzx  eax,BYTE PTR [rbx]
  417a57:	jmp    0x41781d
  417a5c:	lea    ecx,[rax-0x25]
  417a5f:	add    rbx,0x1
  417a63:	mov    ebp,eax
  417a65:	cmp    cl,0x53
  417a68:	ja     0x41794f
  417a6e:	lea    r9,[rip+0x1974b]        # 0x4311c0
  417a75:	movzx  ecx,cl
  417a78:	movsxd rcx,DWORD PTR [r9+rcx*4]
  417a7c:	add    rcx,r9
  417a7f:	jmp    rcx
  417a81:	mov    QWORD PTR [rsi+0x18],rbx
  417a85:	mov    QWORD PTR [rsi+0x20],rcx
  417a89:	test   r10,r10
  417a8c:	movsx  eax,BYTE PTR [rdx+0x1]
  417a90:	mov    rbx,rcx
  417a93:	lea    edx,[rax-0x30]
  417a96:	jne    0x417be6
  417a9c:	cmp    dl,0x9
  417a9f:	jbe    0x417b74
  417aa5:	mov    r10d,0x1
  417aab:	mov    rbp,QWORD PTR [rsp+0x38]
  417ab0:	mov    rax,rbp
  417ab3:	mov    QWORD PTR [rsi+0x28],rbp
  417ab7:	add    rax,0x1
  417abb:	cmp    rbp,0xffffffffffffffff
  417abf:	je     0x41794f
  417ac5:	mov    QWORD PTR [rsp+0x38],rax
  417aca:	cmp    r14,rbp
  417acd:	jbe    0x417e99
  417ad3:	mov    rcx,QWORD PTR [r13+0x8]
  417ad7:	mov    rax,QWORD PTR [r13+0x0]
  417adb:	mov    rdx,rax
  417ade:	shl    rdx,0x5
  417ae2:	add    rdx,rcx
  417ae5:	cmp    rbp,rax
  417ae8:	jb     0x417b07
  417aea:	nop    WORD PTR [rax+rax*1+0x0]
  417af0:	add    rax,0x1
  417af4:	mov    DWORD PTR [rdx],0x0
  417afa:	add    rdx,0x20
  417afe:	cmp    rax,rbp
  417b01:	jbe    0x417af0
  417b03:	mov    QWORD PTR [r13+0x0],rax
  417b07:	shl    rbp,0x5
  417b0b:	lea    rax,[rcx+rbp*1]
  417b0f:	mov    edx,DWORD PTR [rax]
  417b11:	test   edx,edx
  417b13:	jne    0x417fc8
  417b19:	mov    DWORD PTR [rax],0x5
  417b1f:	movzx  eax,BYTE PTR [rbx]
  417b22:	jmp    0x41781d
  417b27:	mov    QWORD PTR [rsi+0x30],rbx
  417b2b:	movzx  eax,BYTE PTR [rbx+0x1]
  417b2f:	lea    rdx,[rbx+0x1]
  417b33:	sub    eax,0x30
  417b36:	cmp    al,0x9
  417b38:	ja     0x417b4e
  417b3a:	nop    WORD PTR [rax+rax*1+0x0]
  417b40:	add    rdx,0x1
  417b44:	movzx  eax,BYTE PTR [rdx]
  417b47:	sub    eax,0x30
  417b4a:	cmp    al,0x9
  417b4c:	jbe    0x417b40
  417b4e:	mov    rax,rdx
  417b51:	mov    QWORD PTR [rsi+0x38],rdx
  417b55:	sub    rax,rbx
  417b58:	mov    rbx,QWORD PTR [rsp+0x20]
  417b5d:	cmp    rbx,rax
  417b60:	cmovae rax,rbx
  417b64:	mov    rbx,rdx
  417b67:	mov    QWORD PTR [rsp+0x20],rax
  417b6c:	movzx  eax,BYTE PTR [rdx]
  417b6f:	jmp    0x417825
  417b74:	mov    r10b,0x1
  417b77:	nop    WORD PTR [rax+rax*1+0x0]
  417b80:	add    rcx,0x1
  417b84:	movzx  edx,BYTE PTR [rcx]
  417b87:	lea    r8d,[rdx-0x30]
  417b8b:	cmp    r8b,0x9
  417b8f:	jbe    0x417b80
  417b91:	cmp    dl,0x24
  417b94:	jne    0x417aab
  417b9a:	xor    ebp,ebp
  417b9c:	movabs rcx,0x1999999999999999
  417ba6:	sub    eax,0x30
  417ba9:	mov    rdx,0xffffffffffffffff
  417bb0:	cmp    rbp,rcx
  417bb3:	cdqe   
  417bb5:	ja     0x417bbf
  417bb7:	lea    rdx,[rbp+rbp*4+0x0]
  417bbc:	add    rdx,rdx
  417bbf:	add    rdx,rax
  417bc2:	mov    rbp,rdx
  417bc5:	jae    0x4180e0
  417bcb:	add    rbx,0x1
  417bcf:	movsx  eax,BYTE PTR [rbx]
  417bd2:	mov    rbp,0xffffffffffffffff
  417bd9:	lea    edx,[rax-0x30]
  417bdc:	cmp    dl,0x9
  417bdf:	jbe    0x417b9c
  417be1:	jmp    0x41794f
  417be6:	cmp    dl,0x9
  417be9:	jbe    0x417b80
  417beb:	jmp    0x417aab
  417bf0:	cmp    edx,0xf
  417bf3:	mov    r9d,0xc
  417bf9:	jle    0x41806d
  417bff:	cmp    rdi,0xffffffffffffffff
  417c03:	je     0x417fe0
  417c09:	mov    QWORD PTR [rsi+0x50],rdi
  417c0d:	cmp    r14,rdi
  417c10:	jbe    0x417eec
  417c16:	mov    rcx,QWORD PTR [r13+0x8]
  417c1a:	mov    rax,QWORD PTR [r13+0x0]
  417c1e:	mov    rdx,rax
  417c21:	shl    rdx,0x5
  417c25:	add    rdx,rcx
  417c28:	cmp    rdi,rax
  417c2b:	jb     0x417c47
  417c2d:	nop    DWORD PTR [rax]
  417c30:	add    rax,0x1
  417c34:	mov    DWORD PTR [rdx],0x0
  417c3a:	add    rdx,0x20
  417c3e:	cmp    rax,rdi
  417c41:	jbe    0x417c30
  417c43:	mov    QWORD PTR [r13+0x0],rax
  417c47:	shl    rdi,0x5
  417c4b:	lea    rax,[rcx+rdi*1]
  417c4f:	mov    edx,DWORD PTR [rax]
  417c51:	test   edx,edx
  417c53:	jne    0x417f60
  417c59:	mov    DWORD PTR [rax],r9d
  417c5c:	mov    BYTE PTR [rsi+0x48],bpl
  417c60:	mov    rax,QWORD PTR [r12]
  417c64:	mov    QWORD PTR [rsi+0x8],rbx
  417c68:	lea    rcx,[rax+0x1]
  417c6c:	cmp    rcx,QWORD PTR [rsp+0x28]
  417c71:	mov    QWORD PTR [r12],rcx
  417c75:	jae    0x417e20
  417c7b:	mov    r9,QWORD PTR [r12+0x8]
  417c80:	jmp    0x4176fb
  417c85:	xor    r9d,r9d
  417c88:	cmp    edx,0x7
  417c8b:	mov    ebp,eax
  417c8d:	setg   r9b
  417c91:	add    r9d,0xf
  417c95:	jmp    0x417bff
  417c9a:	cmp    edx,0xf
  417c9d:	jg     0x417cd0
  417c9f:	test   dl,0x4
  417ca2:	jne    0x417cd0
  417ca4:	cmp    edx,0x7
  417ca7:	jg     0x418218
  417cad:	test   dl,0x2
  417cb0:	jne    0x41820b
  417cb6:	and    edx,0x1
  417cb9:	mov    ebp,eax
  417cbb:	neg    edx
  417cbd:	mov    r9d,edx
  417cc0:	add    r9d,0x14
  417cc4:	jmp    0x417bff
  417cc9:	nop    DWORD PTR [rax+0x0]
  417cd0:	mov    ebp,eax
  417cd2:	mov    r9d,0x16
  417cd8:	jmp    0x417bff
  417cdd:	cmp    edx,0xf
  417ce0:	mov    r9d,0x9
  417ce6:	jg     0x417bff
  417cec:	test   dl,0x4
  417cef:	jne    0x417bff
  417cf5:	cmp    edx,0x7
  417cf8:	mov    r9b,0x7
  417cfb:	jg     0x417bff
  417d01:	test   dl,0x2
  417d04:	mov    r9b,0x1
  417d07:	jne    0x417bff
  417d0d:	and    edx,0x1
  417d10:	cmp    edx,0x1
  417d13:	sbb    r9d,r9d
  417d16:	and    r9d,0x2
  417d1a:	add    r9d,0x3
  417d1e:	jmp    0x417bff
  417d23:	xor    r9d,r9d
  417d26:	cmp    edx,0x7
  417d29:	mov    ebp,eax
  417d2b:	setg   r9b
  417d2f:	add    r9d,0xd
  417d33:	jmp    0x417bff
  417d38:	cmp    edx,0xf
  417d3b:	mov    r9d,0xa
  417d41:	jg     0x417bff
  417d47:	test   dl,0x4
  417d4a:	jne    0x417bff
  417d50:	cmp    edx,0x7
  417d53:	mov    r9b,0x8
  417d56:	jg     0x417bff
  417d5c:	test   dl,0x2
  417d5f:	mov    r9b,0x2
  417d62:	jne    0x417bff
  417d68:	and    edx,0x1
  417d6b:	cmp    edx,0x1
  417d6e:	sbb    r9d,r9d
  417d71:	and    r9d,0x2
  417d75:	add    r9d,0x4
  417d79:	jmp    0x417bff
  417d7e:	xchg   ax,ax
  417d80:	cmp    dl,0x9
  417d83:	mov    QWORD PTR [rsp+0x20],0x2
  417d8c:	jbe    0x4178eb
  417d92:	mov    rbx,QWORD PTR [rsi+0x40]
  417d96:	cmp    rbx,0xffffffffffffffff
  417d9a:	je     0x4180b3
  417da0:	cmp    r14,rbx
  417da3:	ja     0x418019
  417da9:	test   r14,r14
  417dac:	js     0x417eb7
  417db2:	add    r14,r14
  417db5:	cmp    r14,rbx
  417db8:	ja     0x417dc7
  417dba:	lea    r14,[rbx+0x1]
  417dbe:	cmp    r14,rbx
  417dc1:	jb     0x417eb7
  417dc7:	movabs rax,0x7ffffffffffffff
  417dd1:	cmp    r14,rax
  417dd4:	ja     0x417eb7
  417dda:	mov    rcx,QWORD PTR [r13+0x8]
  417dde:	mov    rdx,r14
  417de1:	mov    QWORD PTR [rsp+0x40],r10
  417de6:	shl    rdx,0x5
  417dea:	cmp    r15,rcx
  417ded:	je     0x41824a
  417df3:	call   0x415500
  417df8:	mov    r10,QWORD PTR [rsp+0x40]
  417dfd:	mov    r9,rax
  417e00:	test   r9,r9
  417e03:	je     0x417eb7
  417e09:	cmp    r15,QWORD PTR [r13+0x8]
  417e0d:	je     0x418225
  417e13:	mov    QWORD PTR [r13+0x8],r9
  417e17:	mov    rcx,r9
  417e1a:	jmp    0x41801d
  417e1f:	nop
  417e20:	mov    rax,QWORD PTR [rsp+0x28]
  417e25:	test   rax,rax
  417e28:	js     0x417eb7
  417e2e:	add    rax,rax
  417e31:	mov    rdi,rax
  417e34:	mov    QWORD PTR [rsp+0x28],rax
  417e39:	movabs rax,0x2e8ba2e8ba2e8ba
  417e43:	cmp    rdi,rax
  417e46:	ja     0x417eb7
  417e48:	lea    rax,[rdi+rdi*4]
  417e4c:	mov    rcx,QWORD PTR [r12+0x8]
  417e51:	mov    QWORD PTR [rsp+0x40],r10
  417e56:	lea    rdx,[rdi+rax*2]
  417e5a:	shl    rdx,0x3
  417e5e:	cmp    QWORD PTR [rsp+0x30],rcx
  417e63:	je     0x418004
  417e69:	call   0x415500
  417e6e:	mov    r10,QWORD PTR [rsp+0x40]
  417e73:	mov    r9,rax
  417e76:	test   r9,r9
  417e79:	je     0x417eb7
  417e7b:	mov    rax,QWORD PTR [rsp+0x30]
  417e80:	cmp    rax,QWORD PTR [r12+0x8]
  417e85:	je     0x418173
  417e8b:	mov    QWORD PTR [r12+0x8],r9
  417e90:	mov    rcx,QWORD PTR [r12]
  417e94:	jmp    0x4176fb
  417e99:	test   r14,r14
  417e9c:	js     0x417eb7
  417e9e:	add    r14,r14
  417ea1:	cmp    r14,rbp
  417ea4:	ja     0x417f70
  417eaa:	lea    r14,[rbp+0x1]
  417eae:	cmp    r14,rbp
  417eb1:	jae    0x417f70
  417eb7:	mov    rcx,QWORD PTR [r13+0x8]
  417ebb:	cmp    r15,rcx
  417ebe:	je     0x417ec5
  417ec0:	call   0x422528
  417ec5:	mov    rcx,QWORD PTR [r12+0x8]
  417eca:	cmp    QWORD PTR [rsp+0x30],rcx
  417ecf:	je     0x417ed6
  417ed1:	call   0x422528
  417ed6:	call   QWORD PTR [rip+0x84598]        # 0x49c474
  417edc:	mov    DWORD PTR [rax],0xc
  417ee2:	mov    eax,0xffffffff
  417ee7:	jmp    0x41771f
  417eec:	test   r14,r14
  417eef:	js     0x417eb7
  417ef1:	add    r14,r14
  417ef4:	cmp    r14,rdi
  417ef7:	ja     0x417f02
  417ef9:	lea    r14,[rdi+0x1]
  417efd:	cmp    r14,rdi
  417f00:	jb     0x417eb7
  417f02:	movabs rax,0x7ffffffffffffff
  417f0c:	cmp    r14,rax
  417f0f:	ja     0x417eb7
  417f11:	mov    rcx,QWORD PTR [r13+0x8]
  417f15:	mov    rdx,r14
  417f18:	mov    QWORD PTR [rsp+0x48],r10
  417f1d:	shl    rdx,0x5
  417f21:	mov    DWORD PTR [rsp+0x40],r9d
  417f26:	cmp    r15,rcx
  417f29:	je     0x41813d
  417f2f:	call   0x415500
  417f34:	mov    r9d,DWORD PTR [rsp+0x40]
  417f39:	mov    r10,QWORD PTR [rsp+0x48]
  417f3e:	mov    r11,rax
  417f41:	test   r11,r11
  417f44:	je     0x417eb7
  417f4a:	cmp    r15,QWORD PTR [r13+0x8]
  417f4e:	je     0x4181dc
  417f54:	mov    QWORD PTR [r13+0x8],r11
  417f58:	mov    rcx,r11
  417f5b:	jmp    0x417c1a
  417f60:	cmp    r9d,edx
  417f63:	je     0x417c5c
  417f69:	jmp    0x417953
  417f6e:	xchg   ax,ax
  417f70:	movabs rax,0x7ffffffffffffff
  417f7a:	cmp    r14,rax
  417f7d:	ja     0x417eb7
  417f83:	mov    rcx,QWORD PTR [r13+0x8]
  417f87:	mov    rdx,r14
  417f8a:	mov    QWORD PTR [rsp+0x40],r10
  417f8f:	shl    rdx,0x5
  417f93:	cmp    r15,rcx
  417f96:	je     0x4181a2
  417f9c:	call   0x415500
  417fa1:	mov    r10,QWORD PTR [rsp+0x40]
  417fa6:	mov    r9,rax
  417fa9:	test   r9,r9
  417fac:	je     0x417eb7
  417fb2:	cmp    r15,QWORD PTR [r13+0x8]
  417fb6:	je     0x4181b7
  417fbc:	mov    QWORD PTR [r13+0x8],r9
  417fc0:	mov    rcx,r9
  417fc3:	jmp    0x417ad7
  417fc8:	cmp    edx,0x5
  417fcb:	je     0x417a54
  417fd1:	jmp    0x417953
  417fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417fe0:	mov    rdi,QWORD PTR [rsp+0x38]
  417fe5:	mov    rax,rdi
  417fe8:	mov    QWORD PTR [rsi+0x50],rdi
  417fec:	add    rax,0x1
  417ff0:	cmp    rdi,0xffffffffffffffff
  417ff4:	je     0x41794f
  417ffa:	mov    QWORD PTR [rsp+0x38],rax
  417fff:	jmp    0x417c0d
  418004:	mov    rcx,rdx
  418007:	call   0x414e40
  41800c:	mov    r10,QWORD PTR [rsp+0x40]
  418011:	mov    r9,rax
  418014:	jmp    0x417e76
  418019:	mov    rcx,QWORD PTR [r13+0x8]
  41801d:	mov    rax,QWORD PTR [r13+0x0]
  418021:	mov    rdx,rax
  418024:	shl    rdx,0x5
  418028:	add    rdx,rcx
  41802b:	cmp    rbx,rax
  41802e:	jb     0x418047
  418030:	add    rax,0x1
  418034:	mov    DWORD PTR [rdx],0x0
  41803a:	add    rdx,0x20
  41803e:	cmp    rax,rbx
  418041:	jbe    0x418030
  418043:	mov    QWORD PTR [r13+0x0],rax
  418047:	mov    rax,rbx
  41804a:	shl    rax,0x5
  41804e:	add    rax,rcx
  418051:	mov    edx,DWORD PTR [rax]
  418053:	test   edx,edx
  418055:	jne    0x418157
  41805b:	mov    DWORD PTR [rax],0x5
  418061:	mov    rbx,rbp
  418064:	movzx  eax,BYTE PTR [rbp+0x0]
  418068:	jmp    0x417825
  41806d:	and    edx,0x4
  418070:	cmp    edx,0x1
  418073:	sbb    r9d,r9d
  418076:	add    r9d,0xc
  41807a:	jmp    0x417bff
  41807f:	mov    r9d,0xe
  418085:	mov    ebp,0x63
  41808a:	jmp    0x417bff
  41808f:	mov    ebp,eax
  418091:	jmp    0x417c5c
  418096:	mov    ebp,eax
  418098:	mov    r9d,0x11
  41809e:	jmp    0x417bff
  4180a3:	mov    r9d,0x10
  4180a9:	mov    ebp,0x73
  4180ae:	jmp    0x417bff
  4180b3:	mov    rbx,QWORD PTR [rsp+0x38]
  4180b8:	mov    rax,rbx
  4180bb:	mov    QWORD PTR [rsi+0x40],rbx
  4180bf:	add    rax,0x1
  4180c3:	cmp    rbx,0xffffffffffffffff
  4180c7:	je     0x41794f
  4180cd:	mov    QWORD PTR [rsp+0x38],rax
  4180d2:	jmp    0x417da0
  4180d7:	nop    WORD PTR [rax+rax*1+0x0]
  4180e0:	add    rbx,0x1
  4180e4:	movsx  eax,BYTE PTR [rbx]
  4180e7:	lea    edx,[rax-0x30]
  4180ea:	cmp    dl,0x9
  4180ed:	jbe    0x417b9c
  4180f3:	sub    rbp,0x1
  4180f7:	cmp    rbp,0xfffffffffffffffd
  4180fb:	ja     0x41794f
  418101:	mov    QWORD PTR [rsi+0x28],rbp
  418105:	add    rbx,0x1
  418109:	jmp    0x417aca
  41810e:	add    rbp,0x1
  418112:	movsx  eax,BYTE PTR [rbp+0x0]
  418116:	lea    edx,[rax-0x30]
  418119:	cmp    dl,0x9
  41811c:	jbe    0x41790a
  418122:	sub    rbx,0x1
  418126:	cmp    rbx,0xfffffffffffffffd
  41812a:	ja     0x41794f
  418130:	mov    QWORD PTR [rsi+0x40],rbx
  418134:	add    rbp,0x1
  418138:	jmp    0x417da0
  41813d:	mov    rcx,rdx
  418140:	call   0x414e40
  418145:	mov    r10,QWORD PTR [rsp+0x48]
  41814a:	mov    r11,rax
  41814d:	mov    r9d,DWORD PTR [rsp+0x40]
  418152:	jmp    0x417f41
  418157:	cmp    edx,0x5
  41815a:	jne    0x417953
  418160:	movzx  eax,BYTE PTR [rbp+0x0]
  418164:	mov    rbx,rbp
  418167:	jmp    0x417825
  41816c:	xor    eax,eax
  41816e:	jmp    0x417a49
  418173:	mov    rax,QWORD PTR [r12]
  418177:	mov    rcx,r9
  41817a:	mov    QWORD PTR [rsp+0x40],r10
  41817f:	lea    rdx,[rax+rax*4]
  418183:	lea    r8,[rax+rdx*2]
  418187:	mov    rdx,QWORD PTR [rsp+0x30]
  41818c:	shl    r8,0x3
  418190:	call   0x4224d8
  418195:	mov    r10,QWORD PTR [rsp+0x40]
  41819a:	mov    r9,rax
  41819d:	jmp    0x417e8b
  4181a2:	mov    rcx,rdx
  4181a5:	call   0x414e40
  4181aa:	mov    r10,QWORD PTR [rsp+0x40]
  4181af:	mov    r9,rax
  4181b2:	jmp    0x417fa9
  4181b7:	mov    r8,QWORD PTR [r13+0x0]
  4181bb:	mov    rcx,r9
  4181be:	mov    rdx,r15
  4181c1:	mov    QWORD PTR [rsp+0x40],r10
  4181c6:	shl    r8,0x5
  4181ca:	call   0x4224d8
  4181cf:	mov    r10,QWORD PTR [rsp+0x40]
  4181d4:	mov    r9,rax
  4181d7:	jmp    0x417fbc
  4181dc:	mov    r8,QWORD PTR [r13+0x0]
  4181e0:	mov    rcx,r11
  4181e3:	mov    rdx,r15
  4181e6:	mov    QWORD PTR [rsp+0x48],r10
  4181eb:	mov    DWORD PTR [rsp+0x40],r9d
  4181f0:	shl    r8,0x5
  4181f4:	call   0x4224d8
  4181f9:	mov    r10,QWORD PTR [rsp+0x48]
  4181fe:	mov    r11,rax
  418201:	mov    r9d,DWORD PTR [rsp+0x40]
  418206:	jmp    0x417f54
  41820b:	mov    ebp,eax
  41820d:	mov    r9d,0x12
  418213:	jmp    0x417bff
  418218:	mov    ebp,eax
  41821a:	mov    r9d,0x15
  418220:	jmp    0x417bff
  418225:	mov    r8,QWORD PTR [r13+0x0]
  418229:	mov    rcx,r9
  41822c:	mov    rdx,r15
  41822f:	mov    QWORD PTR [rsp+0x40],r10
  418234:	shl    r8,0x5
  418238:	call   0x4224d8
  41823d:	mov    r10,QWORD PTR [rsp+0x40]
  418242:	mov    r9,rax
  418245:	jmp    0x417e13
  41824a:	mov    rcx,rdx
  41824d:	call   0x414e40
  418252:	mov    r10,QWORD PTR [rsp+0x40]
  418257:	mov    r9,rax
  41825a:	jmp    0x417e00
  41825f:	nop
  418260:	push   rbx
  418261:	sub    rsp,0x20
  418265:	mov    ebx,ecx
  418267:	call   0x418780
  41826c:	mov    ecx,ebx
  41826e:	add    rsp,0x20
  418272:	pop    rbx
  418273:	jmp    0x4223b8
  418278:	nop    DWORD PTR [rax+rax*1+0x0]
  418280:	mov    edx,ecx
  418282:	lea    rcx,[rip+0xffffffffffffffd7]        # 0x418260
  418289:	jmp    0x41ad80
  41828e:	nop
  41828f:	nop
  418290:	push   rsi
  418291:	push   rbx
  418292:	sub    rsp,0x38
  418296:	mov    rbx,rdx
  418299:	mov    esi,r8d
  41829c:	call   0x4187b0
  4182a1:	cmp    rax,0xffffffffffffffff
  4182a5:	mov    rcx,rax
  4182a8:	je     0x418410
  4182ae:	mov    rdx,rbx
  4182b1:	mov    r8d,esi
  4182b4:	call   QWORD PTR [rip+0x844f2]        # 0x49c7ac
  4182ba:	mov    ebx,eax
  4182bc:	test   ebx,ebx
  4182be:	js     0x4182d0
  4182c0:	add    rsp,0x38
  4182c4:	pop    rbx
  4182c5:	pop    rsi
  4182c6:	ret    
  4182c7:	nop    WORD PTR [rax+rax*1+0x0]
  4182d0:	mov    rsi,QWORD PTR [rip+0x844a5]        # 0x49c77c
  4182d7:	call   rsi
  4182d9:	cmp    eax,0x2733
  4182de:	je     0x418400
  4182e4:	call   rsi
  4182e6:	cmp    eax,0x2740
  4182eb:	mov    esi,eax
  4182ed:	je     0x4185f1
  4182f3:	jg     0x418340
  4182f5:	cmp    eax,0x2736
  4182fa:	je     0x4185de
  418300:	jle    0x4183c2
  418306:	cmp    eax,0x273a
  41830b:	je     0x418533
  418311:	jg     0x418472
  418317:	cmp    eax,0x2738
  41831c:	je     0x4185cb
  418322:	jg     0x4185b8
  418328:	call   QWORD PTR [rip+0x84146]        # 0x49c474
  41832e:	mov    DWORD PTR [rax],0x6d
  418334:	mov    eax,ebx
  418336:	jmp    0x4182c0
  418338:	nop    DWORD PTR [rax+rax*1+0x0]
  418340:	cmp    eax,0x2748
  418345:	je     0x4185a5
  41834b:	jg     0x418382
  41834d:	cmp    eax,0x2744
  418352:	je     0x418546
  418358:	jg     0x4184a2
  41835e:	cmp    eax,0x2742
  418363:	je     0x418617
  418369:	jg     0x418604
  41836f:	call   QWORD PTR [rip+0x840ff]        # 0x49c474
  418375:	mov    DWORD PTR [rax],0x65
  41837b:	mov    eax,ebx
  41837d:	jmp    0x4182c0
  418382:	cmp    eax,0x274e
  418387:	je     0x41856c
  41838d:	jg     0x418430
  418393:	cmp    eax,0x274c
  418398:	je     0x418592
  41839e:	jg     0x41857f
  4183a4:	cmp    eax,0x2749
  4183a9:	jne    0x418451
  4183af:	call   QWORD PTR [rip+0x840bf]        # 0x49c474
  4183b5:	mov    DWORD PTR [rax],0x7e
  4183bb:	mov    eax,ebx
  4183bd:	jmp    0x4182c0
  4183c2:	cmp    eax,0x57
  4183c5:	je     0x4184e7
  4183cb:	jle    0x4184c6
  4183d1:	cmp    eax,0x2734
  4183d6:	je     0x418663
  4183dc:	jg     0x418650
  4183e2:	cmp    eax,0x2733
  4183e7:	jne    0x418451
  4183e9:	call   QWORD PTR [rip+0x84085]        # 0x49c474
  4183ef:	mov    DWORD PTR [rax],0x8c
  4183f5:	mov    eax,ebx
  4183f7:	jmp    0x4182c0
  4183fc:	nop    DWORD PTR [rax+0x0]
  418400:	mov    ecx,0x2734
  418405:	call   QWORD PTR [rip+0x84379]        # 0x49c784
  41840b:	jmp    0x4182e4
  418410:	mov    QWORD PTR [rsp+0x28],rax
  418415:	call   QWORD PTR [rip+0x84059]        # 0x49c474
  41841b:	mov    rcx,QWORD PTR [rsp+0x28]
  418420:	mov    DWORD PTR [rax],0x9
  418426:	mov    eax,ecx
  418428:	jmp    0x4182c0
  41842d:	nop    DWORD PTR [rax]
  418430:	cmp    eax,0x2751
  418435:	je     0x418559
  41843b:	cmp    eax,0x2752
  418440:	je     0x418520
  418446:	cmp    eax,0x274f
  41844b:	je     0x41850d
  418451:	call   QWORD PTR [rip+0x8401d]        # 0x49c474
  418457:	lea    ecx,[rsi-0x2711]
  41845d:	lea    edx,[rsi-0x2710]
  418463:	cmp    ecx,0x17
  418466:	cmovbe esi,edx
  418469:	mov    DWORD PTR [rax],esi
  41846b:	mov    eax,ebx
  41846d:	jmp    0x4182c0
  418472:	cmp    eax,0x273d
  418477:	je     0x41863d
  41847d:	cmp    eax,0x273f
  418482:	je     0x41862a
  418488:	cmp    eax,0x273b
  41848d:	jne    0x418451
  41848f:	call   QWORD PTR [rip+0x83fdf]        # 0x49c474
  418495:	mov    DWORD PTR [rax],0x87
  41849b:	mov    eax,ebx
  41849d:	jmp    0x4182c0
  4184a2:	cmp    eax,0x2746
  4184a7:	je     0x418689
  4184ad:	jg     0x418676
  4184b3:	call   QWORD PTR [rip+0x83fbb]        # 0x49c474
  4184b9:	mov    DWORD PTR [rax],0x6a
  4184bf:	mov    eax,ebx
  4184c1:	jmp    0x4182c0
  4184c6:	cmp    eax,0x6
  4184c9:	je     0x4184fa
  4184cb:	cmp    eax,0x8
  4184ce:	jne    0x418451
  4184d4:	call   QWORD PTR [rip+0x83f9a]        # 0x49c474
  4184da:	mov    DWORD PTR [rax],0xc
  4184e0:	mov    eax,ebx
  4184e2:	jmp    0x4182c0
  4184e7:	call   QWORD PTR [rip+0x83f87]        # 0x49c474
  4184ed:	mov    DWORD PTR [rax],0x16
  4184f3:	mov    eax,ebx
  4184f5:	jmp    0x4182c0
  4184fa:	call   QWORD PTR [rip+0x83f74]        # 0x49c474
  418500:	mov    DWORD PTR [rax],0x9
  418506:	mov    eax,ebx
  418508:	jmp    0x4182c0
  41850d:	call   QWORD PTR [rip+0x83f61]        # 0x49c474
  418513:	mov    DWORD PTR [rax],0x26
  418519:	mov    eax,ebx
  41851b:	jmp    0x4182c0
  418520:	call   QWORD PTR [rip+0x83f4e]        # 0x49c474
  418526:	mov    DWORD PTR [rax],0x29
  41852c:	mov    eax,ebx
  41852e:	jmp    0x4182c0
  418533:	call   QWORD PTR [rip+0x83f3b]        # 0x49c474
  418539:	mov    DWORD PTR [rax],0x7b
  41853f:	mov    eax,ebx
  418541:	jmp    0x4182c0
  418546:	call   QWORD PTR [rip+0x83f28]        # 0x49c474
  41854c:	mov    DWORD PTR [rax],0x75
  418552:	mov    eax,ebx
  418554:	jmp    0x4182c0
  418559:	call   QWORD PTR [rip+0x83f15]        # 0x49c474
  41855f:	mov    DWORD PTR [rax],0x6e
  418565:	mov    eax,ebx
  418567:	jmp    0x4182c0
  41856c:	call   QWORD PTR [rip+0x83f02]        # 0x49c474
  418572:	mov    DWORD PTR [rax],0x72
  418578:	mov    eax,ebx
  41857a:	jmp    0x4182c0
  41857f:	call   QWORD PTR [rip+0x83eef]        # 0x49c474
  418585:	mov    DWORD PTR [rax],0x6b
  41858b:	mov    eax,ebx
  41858d:	jmp    0x4182c0
  418592:	call   QWORD PTR [rip+0x83edc]        # 0x49c474
  418598:	mov    DWORD PTR [rax],0x8a
  41859e:	mov    eax,ebx
  4185a0:	jmp    0x4182c0
  4185a5:	call   QWORD PTR [rip+0x83ec9]        # 0x49c474
  4185ab:	mov    DWORD PTR [rax],0x71
  4185b1:	mov    eax,ebx
  4185b3:	jmp    0x4182c0
  4185b8:	call   QWORD PTR [rip+0x83eb6]        # 0x49c474
  4185be:	mov    DWORD PTR [rax],0x88
  4185c4:	mov    eax,ebx
  4185c6:	jmp    0x4182c0
  4185cb:	call   QWORD PTR [rip+0x83ea3]        # 0x49c474
  4185d1:	mov    DWORD PTR [rax],0x73
  4185d7:	mov    eax,ebx
  4185d9:	jmp    0x4182c0
  4185de:	call   QWORD PTR [rip+0x83e90]        # 0x49c474
  4185e4:	mov    DWORD PTR [rax],0x80
  4185ea:	mov    eax,ebx
  4185ec:	jmp    0x4182c0
  4185f1:	call   QWORD PTR [rip+0x83e7d]        # 0x49c474
  4185f7:	mov    DWORD PTR [rax],0x64
  4185fd:	mov    eax,ebx
  4185ff:	jmp    0x4182c0
  418604:	call   QWORD PTR [rip+0x83e6a]        # 0x49c474
  41860a:	mov    DWORD PTR [rax],0x76
  418610:	mov    eax,ebx
  418612:	jmp    0x4182c0
  418617:	call   QWORD PTR [rip+0x83e57]        # 0x49c474
  41861d:	mov    DWORD PTR [rax],0x74
  418623:	mov    eax,ebx
  418625:	jmp    0x4182c0
  41862a:	call   QWORD PTR [rip+0x83e44]        # 0x49c474
  418630:	mov    DWORD PTR [rax],0x66
  418636:	mov    eax,ebx
  418638:	jmp    0x4182c0
  41863d:	call   QWORD PTR [rip+0x83e31]        # 0x49c474
  418643:	mov    DWORD PTR [rax],0x82
  418649:	mov    eax,ebx
  41864b:	jmp    0x4182c0
  418650:	call   QWORD PTR [rip+0x83e1e]        # 0x49c474
  418656:	mov    DWORD PTR [rax],0x67
  41865c:	mov    eax,ebx
  41865e:	jmp    0x4182c0
  418663:	call   QWORD PTR [rip+0x83e0b]        # 0x49c474
  418669:	mov    DWORD PTR [rax],0x70
  41866f:	mov    eax,ebx
  418671:	jmp    0x4182c0
  418676:	call   QWORD PTR [rip+0x83df8]        # 0x49c474
  41867c:	mov    DWORD PTR [rax],0x77
  418682:	mov    eax,ebx
  418684:	jmp    0x4182c0
  418689:	call   QWORD PTR [rip+0x83de5]        # 0x49c474
  41868f:	mov    DWORD PTR [rax],0x6c
  418695:	mov    eax,ebx
  418697:	jmp    0x4182c0
  41869c:	nop
  41869d:	nop
  41869e:	nop
  41869f:	nop
  4186a0:	jmp    0x41b850
  4186a5:	nop
  4186a6:	nop
  4186a7:	nop
  4186a8:	nop
  4186a9:	nop
  4186aa:	nop
  4186ab:	nop
  4186ac:	nop
  4186ad:	nop
  4186ae:	nop
  4186af:	nop
  4186b0:	push   rbp
  4186b1:	push   rdi
  4186b2:	push   rsi
  4186b3:	push   rbx
  4186b4:	sub    rsp,0x238
  4186bb:	test   rcx,rcx
  4186be:	mov    rbp,rcx
  4186c1:	je     0x4186e3
  4186c3:	mov    rbx,QWORD PTR [rip+0x83d5a]        # 0x49c424
  4186ca:	call   rbx
  4186cc:	lea    rdx,[rax+0x60]
  4186d0:	mov    rcx,rbp
  4186d3:	call   0x422538
  4186d8:	call   rbx
  4186da:	lea    rcx,[rax+0x60]
  4186de:	call   0x422560
  4186e3:	mov    rsi,QWORD PTR [rip+0x83dca]        # 0x49c4b4
  4186ea:	lea    rdi,[rsp+0x1f]
  4186ef:	xor    ebx,ebx
  4186f1:	call   rsi
  4186f3:	cmp    eax,0xd
  4186f6:	je     0x418712
  4186f8:	add    rbx,0x1
  4186fc:	cmp    rbx,0x200
  418703:	mov    BYTE PTR [rdi+rbx*1],al
  418706:	jne    0x4186f1
  418708:	mov    BYTE PTR [rsp+0x220],0x0
  418710:	jmp    0x418717
  418712:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  418717:	test   rbp,rbp
  41871a:	je     0x41874b
  41871c:	mov    rbx,QWORD PTR [rip+0x83d01]        # 0x49c424
  418723:	call   rbx
  418725:	lea    rcx,[rip+0x18be4]        # 0x431310
  41872c:	lea    r9,[rax+0x60]
  418730:	mov    r8d,0x2
  418736:	mov    edx,0x1
  41873b:	call   0x422510
  418740:	call   rbx
  418742:	lea    rcx,[rax+0x60]
  418746:	call   0x422560
  41874b:	lea    rcx,[rsp+0x20]
  418750:	call   0x41a7c0
  418755:	add    rsp,0x238
  41875c:	pop    rbx
  41875d:	pop    rsi
  41875e:	pop    rdi
  41875f:	pop    rbp
  418760:	ret    
  418761:	nop
  418762:	nop
  418763:	nop
  418764:	nop
  418765:	nop
  418766:	nop
  418767:	nop
  418768:	nop
  418769:	nop
  41876a:	nop
  41876b:	nop
  41876c:	nop
  41876d:	nop
  41876e:	nop
  41876f:	nop
  418770:	ret    
  418771:	nop    DWORD PTR [rax+rax*1+0x0]
  418776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418780:	sub    rsp,0x28
  418784:	mov    eax,DWORD PTR [rip+0x505b6]        # 0x468d40
  41878a:	test   eax,eax
  41878c:	jne    0x4187a5
  41878e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x418770
  418795:	call   QWORD PTR [rip+0xfdad]        # 0x428548
  41879b:	mov    DWORD PTR [rip+0x5059b],0x1        # 0x468d40
  4187a5:	add    rsp,0x28
  4187a9:	ret    
  4187aa:	nop
  4187ab:	nop
  4187ac:	nop
  4187ad:	nop
  4187ae:	nop
  4187af:	nop
  4187b0:	push   rbx
  4187b1:	sub    rsp,0x20
  4187b5:	mov    ebx,ecx
  4187b7:	call   0x418780
  4187bc:	mov    rax,QWORD PTR [rip+0x83ce9]        # 0x49c4ac
  4187c3:	mov    ecx,ebx
  4187c5:	add    rsp,0x20
  4187c9:	pop    rbx
  4187ca:	rex.W jmp rax
  4187cd:	nop
  4187ce:	nop
  4187cf:	nop
  4187d0:	push   rdi
  4187d1:	push   rsi
  4187d2:	push   rbx
  4187d3:	sub    rsp,0x30
  4187d7:	mov    rbx,rdx
  4187da:	mov    rsi,r8
  4187dd:	mov    edi,r9d
  4187e0:	call   0x4187b0
  4187e5:	cmp    rax,0xffffffffffffffff
  4187e9:	mov    rcx,rax
  4187ec:	je     0x418930
  4187f2:	mov    rdx,rbx
  4187f5:	mov    r9d,edi
  4187f8:	mov    r8d,esi
  4187fb:	call   QWORD PTR [rip+0x83ff3]        # 0x49c7f4
  418801:	test   eax,eax
  418803:	mov    ebx,eax
  418805:	js     0x418812
  418807:	movsxd rax,ebx
  41880a:	add    rsp,0x30
  41880e:	pop    rbx
  41880f:	pop    rsi
  418810:	pop    rdi
  418811:	ret    
  418812:	call   QWORD PTR [rip+0x83f64]        # 0x49c77c
  418818:	cmp    eax,0x2740
  41881d:	mov    esi,eax
  41881f:	je     0x418aa5
  418825:	jg     0x418870
  418827:	cmp    eax,0x2736
  41882c:	je     0x418a83
  418832:	jle    0x4188f0
  418838:	cmp    eax,0x273a
  41883d:	je     0x418a72
  418843:	jg     0x418972
  418849:	cmp    eax,0x2738
  41884e:	je     0x418ac7
  418854:	jg     0x418ab6
  41885a:	call   QWORD PTR [rip+0x83c14]        # 0x49c474
  418860:	mov    DWORD PTR [rax],0x6d
  418866:	jmp    0x418807
  418868:	nop    DWORD PTR [rax+rax*1+0x0]
  418870:	cmp    eax,0x2748
  418875:	je     0x418a94
  41887b:	jg     0x4188b0
  41887d:	cmp    eax,0x2744
  418882:	je     0x418a61
  418888:	jg     0x418950
  41888e:	cmp    eax,0x2742
  418893:	je     0x418a50
  418899:	jg     0x418a3f
  41889f:	call   QWORD PTR [rip+0x83bcf]        # 0x49c474
  4188a5:	mov    DWORD PTR [rax],0x65
  4188ab:	jmp    0x418807
  4188b0:	cmp    eax,0x274e
  4188b5:	je     0x418b0b
  4188bb:	jg     0x4189b2
  4188c1:	cmp    eax,0x274c
  4188c6:	je     0x418b2d
  4188cc:	jg     0x418b1c
  4188d2:	cmp    eax,0x2749
  4188d7:	jne    0x418993
  4188dd:	call   QWORD PTR [rip+0x83b91]        # 0x49c474
  4188e3:	mov    DWORD PTR [rax],0x7e
  4188e9:	jmp    0x418807
  4188ee:	xchg   ax,ax
  4188f0:	cmp    eax,0x57
  4188f3:	je     0x4189fb
  4188f9:	jle    0x4189e0
  4188ff:	cmp    eax,0x2734
  418904:	je     0x418b4f
  41890a:	jg     0x418b3e
  418910:	cmp    eax,0x2733
  418915:	jne    0x418993
  418917:	call   QWORD PTR [rip+0x83b57]        # 0x49c474
  41891d:	mov    DWORD PTR [rax],0x8c
  418923:	jmp    0x418807
  418928:	nop    DWORD PTR [rax+rax*1+0x0]
  418930:	mov    QWORD PTR [rsp+0x28],rax
  418935:	call   QWORD PTR [rip+0x83b39]        # 0x49c474
  41893b:	mov    rcx,QWORD PTR [rsp+0x28]
  418940:	mov    DWORD PTR [rax],0x9
  418946:	mov    rax,rcx
  418949:	jmp    0x41880a
  41894e:	xchg   ax,ax
  418950:	cmp    eax,0x2746
  418955:	je     0x418ae9
  41895b:	jg     0x418ad8
  418961:	call   QWORD PTR [rip+0x83b0d]        # 0x49c474
  418967:	mov    DWORD PTR [rax],0x6a
  41896d:	jmp    0x418807
  418972:	cmp    eax,0x273d
  418977:	je     0x418a2e
  41897d:	cmp    eax,0x273f
  418982:	je     0x418a1d
  418988:	cmp    eax,0x273b
  41898d:	je     0x418afa
  418993:	call   QWORD PTR [rip+0x83adb]        # 0x49c474
  418999:	lea    ecx,[rsi-0x2711]
  41899f:	lea    edx,[rsi-0x2710]
  4189a5:	cmp    ecx,0x17
  4189a8:	cmovbe esi,edx
  4189ab:	mov    DWORD PTR [rax],esi
  4189ad:	jmp    0x418807
  4189b2:	cmp    eax,0x2751
  4189b7:	je     0x418b71
  4189bd:	cmp    eax,0x2752
  4189c2:	je     0x418b60
  4189c8:	cmp    eax,0x274f
  4189cd:	jne    0x418993
  4189cf:	call   QWORD PTR [rip+0x83a9f]        # 0x49c474
  4189d5:	mov    DWORD PTR [rax],0x26
  4189db:	jmp    0x418807
  4189e0:	cmp    eax,0x6
  4189e3:	je     0x418a0c
  4189e5:	cmp    eax,0x8
  4189e8:	jne    0x418993
  4189ea:	call   QWORD PTR [rip+0x83a84]        # 0x49c474
  4189f0:	mov    DWORD PTR [rax],0xc
  4189f6:	jmp    0x418807
  4189fb:	call   QWORD PTR [rip+0x83a73]        # 0x49c474
  418a01:	mov    DWORD PTR [rax],0x16
  418a07:	jmp    0x418807
  418a0c:	call   QWORD PTR [rip+0x83a62]        # 0x49c474
  418a12:	mov    DWORD PTR [rax],0x9
  418a18:	jmp    0x418807
  418a1d:	call   QWORD PTR [rip+0x83a51]        # 0x49c474
  418a23:	mov    DWORD PTR [rax],0x66
  418a29:	jmp    0x418807
  418a2e:	call   QWORD PTR [rip+0x83a40]        # 0x49c474
  418a34:	mov    DWORD PTR [rax],0x82
  418a3a:	jmp    0x418807
  418a3f:	call   QWORD PTR [rip+0x83a2f]        # 0x49c474
  418a45:	mov    DWORD PTR [rax],0x76
  418a4b:	jmp    0x418807
  418a50:	call   QWORD PTR [rip+0x83a1e]        # 0x49c474
  418a56:	mov    DWORD PTR [rax],0x74
  418a5c:	jmp    0x418807
  418a61:	call   QWORD PTR [rip+0x83a0d]        # 0x49c474
  418a67:	mov    DWORD PTR [rax],0x75
  418a6d:	jmp    0x418807
  418a72:	call   QWORD PTR [rip+0x839fc]        # 0x49c474
  418a78:	mov    DWORD PTR [rax],0x7b
  418a7e:	jmp    0x418807
  418a83:	call   QWORD PTR [rip+0x839eb]        # 0x49c474
  418a89:	mov    DWORD PTR [rax],0x80
  418a8f:	jmp    0x418807
  418a94:	call   QWORD PTR [rip+0x839da]        # 0x49c474
  418a9a:	mov    DWORD PTR [rax],0x71
  418aa0:	jmp    0x418807
  418aa5:	call   QWORD PTR [rip+0x839c9]        # 0x49c474
  418aab:	mov    DWORD PTR [rax],0x64
  418ab1:	jmp    0x418807
  418ab6:	call   QWORD PTR [rip+0x839b8]        # 0x49c474
  418abc:	mov    DWORD PTR [rax],0x88
  418ac2:	jmp    0x418807
  418ac7:	call   QWORD PTR [rip+0x839a7]        # 0x49c474
  418acd:	mov    DWORD PTR [rax],0x73
  418ad3:	jmp    0x418807
  418ad8:	call   QWORD PTR [rip+0x83996]        # 0x49c474
  418ade:	mov    DWORD PTR [rax],0x77
  418ae4:	jmp    0x418807
  418ae9:	call   QWORD PTR [rip+0x83985]        # 0x49c474
  418aef:	mov    DWORD PTR [rax],0x6c
  418af5:	jmp    0x418807
  418afa:	call   QWORD PTR [rip+0x83974]        # 0x49c474
  418b00:	mov    DWORD PTR [rax],0x87
  418b06:	jmp    0x418807
  418b0b:	call   QWORD PTR [rip+0x83963]        # 0x49c474
  418b11:	mov    DWORD PTR [rax],0x72
  418b17:	jmp    0x418807
  418b1c:	call   QWORD PTR [rip+0x83952]        # 0x49c474
  418b22:	mov    DWORD PTR [rax],0x6b
  418b28:	jmp    0x418807
  418b2d:	call   QWORD PTR [rip+0x83941]        # 0x49c474
  418b33:	mov    DWORD PTR [rax],0x8a
  418b39:	jmp    0x418807
  418b3e:	call   QWORD PTR [rip+0x83930]        # 0x49c474
  418b44:	mov    DWORD PTR [rax],0x67
  418b4a:	jmp    0x418807
  418b4f:	call   QWORD PTR [rip+0x8391f]        # 0x49c474
  418b55:	mov    DWORD PTR [rax],0x70
  418b5b:	jmp    0x418807
  418b60:	call   QWORD PTR [rip+0x8390e]        # 0x49c474
  418b66:	mov    DWORD PTR [rax],0x29
  418b6c:	jmp    0x418807
  418b71:	call   QWORD PTR [rip+0x838fd]        # 0x49c474
  418b77:	mov    DWORD PTR [rax],0x6e
  418b7d:	jmp    0x418807
  418b82:	nop
  418b83:	nop
  418b84:	nop
  418b85:	nop
  418b86:	nop
  418b87:	nop
  418b88:	nop
  418b89:	nop
  418b8a:	nop
  418b8b:	nop
  418b8c:	nop
  418b8d:	nop
  418b8e:	nop
  418b8f:	nop
  418b90:	push   rbp
  418b91:	push   r15
  418b93:	push   r14
  418b95:	push   r13
  418b97:	push   r12
  418b99:	push   rdi
  418b9a:	push   rsi
  418b9b:	push   rbx
  418b9c:	sub    rsp,0x98
  418ba3:	lea    rbp,[rsp+0x80]
  418bab:	mov    rdi,QWORD PTR [rbp+0x80]
  418bb2:	mov    r14,rcx
  418bb5:	mov    ebx,edx
  418bb7:	mov    r15,r8
  418bba:	mov    r13,r9
  418bbd:	call   QWORD PTR [rip+0x83721]        # 0x49c2e4
  418bc3:	cmp    eax,0x2
  418bc6:	je     0x418cb0
  418bcc:	cmp    eax,0x3
  418bcf:	je     0x418d00
  418bd5:	cmp    eax,0x1
  418bd8:	je     0x418bed
  418bda:	xor    edx,edx
  418bdc:	mov    rcx,r14
  418bdf:	call   QWORD PTR [rip+0x837ff]        # 0x49c3e4
  418be5:	test   eax,eax
  418be7:	jne    0x418cd9
  418bed:	lea    esi,[rbx+0x7]
  418bf0:	test   ebx,ebx
  418bf2:	mov    r10d,ebx
  418bf5:	mov    r8d,0x1
  418bfb:	cmovns esi,ebx
  418bfe:	and    r10d,0x7
  418c02:	mov    r12d,esi
  418c05:	sar    r12d,0x3
  418c09:	movsxd r12,r12d
  418c0c:	movzx  eax,BYTE PTR [r15+r12*1]
  418c11:	bt     eax,r10d
  418c15:	jae    0x418cf0
  418c1b:	mov    eax,0x1
  418c20:	mov    ecx,r10d
  418c23:	xor    edx,edx
  418c25:	shl    eax,cl
  418c27:	or     BYTE PTR [r15+r12*1+0x8],al
  418c2c:	mov    eax,0x1
  418c31:	test   r8d,r8d
  418c34:	je     0x418c66
  418c36:	lea    esi,[rbx+0x7]
  418c39:	test   ebx,ebx
  418c3b:	mov    ecx,ebx
  418c3d:	cmovns esi,ebx
  418c40:	and    ecx,0x7
  418c43:	sar    esi,0x3
  418c46:	movsxd rsi,esi
  418c49:	movzx  r8d,BYTE PTR [r13+rsi*1+0x0]
  418c4f:	bt     r8d,ecx
  418c53:	jae    0x418c66
  418c55:	mov    r8d,0x1
  418c5b:	add    eax,0x1
  418c5e:	shl    r8d,cl
  418c61:	or     BYTE PTR [r13+rsi*1+0x8],r8b
  418c66:	test   edx,edx
  418c68:	je     0x418c97
  418c6a:	lea    edx,[rbx+0x7]
  418c6d:	test   ebx,ebx
  418c6f:	cmovns edx,ebx
  418c72:	and    ebx,0x7
  418c75:	sar    edx,0x3
  418c78:	movsxd rdx,edx
  418c7b:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  418c7f:	bt     ecx,ebx
  418c82:	jae    0x418c97
  418c84:	mov    r8d,0x1
  418c8a:	mov    ecx,ebx
  418c8c:	add    eax,0x1
  418c8f:	shl    r8d,cl
  418c92:	or     BYTE PTR [rdi+rdx*1+0x8],r8b
  418c97:	lea    rsp,[rbp+0x18]
  418c9b:	pop    rbx
  418c9c:	pop    rsi
  418c9d:	pop    rdi
  418c9e:	pop    r12
  418ca0:	pop    r13
  418ca2:	pop    r14
  418ca4:	pop    r15
  418ca6:	pop    rbp
  418ca7:	ret    
  418ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  418cb0:	lea    esi,[rbx+0x7]
  418cb3:	test   ebx,ebx
  418cb5:	mov    r12d,ebx
  418cb8:	mov    r10d,ebx
  418cbb:	cmovs  r12d,esi
  418cbf:	and    r10d,0x7
  418cc3:	sar    r12d,0x3
  418cc7:	movsxd rax,r12d
  418cca:	movzx  eax,BYTE PTR [r15+rax*1]
  418ccf:	bt     eax,r10d
  418cd3:	jb     0x418d93
  418cd9:	xor    edx,edx
  418cdb:	mov    r8d,0x1
  418ce1:	xor    eax,eax
  418ce3:	jmp    0x418c31
  418ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  418cf0:	xor    edx,edx
  418cf2:	xor    eax,eax
  418cf4:	jmp    0x418c31
  418cf9:	nop    DWORD PTR [rax+0x0]
  418d00:	mov    edx,DWORD PTR [rip+0x50052]        # 0x468d58
  418d06:	test   edx,edx
  418d08:	je     0x418d60
  418d0a:	lea    rax,[rbp-0x38]
  418d0e:	xor    r9d,r9d
  418d11:	xor    r8d,r8d
  418d14:	xor    edx,edx
  418d16:	mov    QWORD PTR [rsp+0x28],0x0
  418d1f:	mov    rcx,r14
  418d22:	mov    QWORD PTR [rsp+0x20],rax
  418d27:	call   QWORD PTR [rip+0x8363f]        # 0x49c36c
  418d2d:	test   eax,eax
  418d2f:	je     0x418e10
  418d35:	mov    eax,DWORD PTR [rbp-0x38]
  418d38:	test   eax,eax
  418d3a:	je     0x418ec0
  418d40:	lea    esi,[rbx+0x7]
  418d43:	test   ebx,ebx
  418d45:	mov    r10d,ebx
  418d48:	cmovns esi,ebx
  418d4b:	and    r10d,0x7
  418d4f:	xor    r8d,r8d
  418d52:	mov    r12d,esi
  418d55:	sar    r12d,0x3
  418d59:	jmp    0x418c09
  418d5e:	xchg   ax,ax
  418d60:	lea    rcx,[rip+0x185b9]        # 0x431320
  418d67:	call   QWORD PTR [rip+0x8358f]        # 0x49c2fc
  418d6d:	lea    rdx,[rip+0x185b6]        # 0x43132a
  418d74:	mov    rcx,rax
  418d77:	call   QWORD PTR [rip+0x83597]        # 0x49c314
  418d7d:	mov    DWORD PTR [rip+0x4ffd1],0x1        # 0x468d58
  418d87:	mov    QWORD PTR [rip+0x4ffc2],rax        # 0x468d50
  418d8e:	jmp    0x418d0a
  418d93:	xor    edx,edx
  418d95:	mov    DWORD PTR [rbp-0x48],r10d
  418d99:	mov    rcx,r14
  418d9c:	call   QWORD PTR [rip+0x83642]        # 0x49c3e4
  418da2:	test   eax,eax
  418da4:	jne    0x418cd9
  418daa:	lea    rdx,[rbp-0x20]
  418dae:	mov    rcx,r14
  418db1:	call   QWORD PTR [rip+0x83505]        # 0x49c2bc
  418db7:	test   eax,eax
  418db9:	mov    r8d,0x1
  418dbf:	mov    r10d,DWORD PTR [rbp-0x48]
  418dc3:	je     0x418c09
  418dc9:	mov    DWORD PTR [rbp-0x38],0x0
  418dd0:	mov    DWORD PTR [rbp-0x34],0x0
  418dd7:	lea    rdx,[rbp-0x34]
  418ddb:	mov    rcx,r14
  418dde:	call   QWORD PTR [rip+0x83528]        # 0x49c30c
  418de4:	test   eax,eax
  418de6:	mov    r10d,DWORD PTR [rbp-0x48]
  418dea:	je     0x418ecc
  418df0:	mov    r8d,DWORD PTR [rbp-0x34]
  418df4:	test   r8d,r8d
  418df7:	jne    0x418eee
  418dfd:	mov    edx,0x1
  418e02:	mov    r8d,0x1
  418e08:	xor    eax,eax
  418e0a:	jmp    0x418c31
  418e0f:	nop
  418e10:	call   QWORD PTR [rip+0x834d6]        # 0x49c2ec
  418e16:	cmp    eax,0x6d
  418e19:	je     0x418ec0
  418e1f:	mov    rax,QWORD PTR [rip+0x4ff2a]        # 0x468d50
  418e26:	lea    rdx,[rbp-0x30]
  418e2a:	mov    QWORD PTR [rbp-0x30],0x0
  418e32:	mov    QWORD PTR [rbp-0x28],0x0
  418e3a:	lea    r8,[rbp-0x20]
  418e3e:	mov    QWORD PTR [rbp-0x20],0x0
  418e46:	mov    QWORD PTR [rbp-0x18],0x0
  418e4e:	mov    QWORD PTR [rbp-0x10],0x0
  418e56:	test   rax,rax
  418e59:	mov    QWORD PTR [rbp-0x8],0x0
  418e61:	mov    QWORD PTR [rbp+0x0],0x0
  418e69:	je     0x418cd9
  418e6f:	mov    DWORD PTR [rsp+0x20],0x18
  418e77:	mov    r9d,0x28
  418e7d:	mov    rcx,r14
  418e80:	call   rax
  418e82:	test   eax,eax
  418e84:	jne    0x418cd9
  418e8a:	mov    eax,DWORD PTR [rbp-0x4]
  418e8d:	cmp    eax,0x1ff
  418e92:	ja     0x418cd9
  418e98:	mov    edx,DWORD PTR [rbp-0x8]
  418e9b:	cmp    edx,0x1ff
  418ea1:	setbe  cl
  418ea4:	xor    r8d,r8d
  418ea7:	cmp    eax,edx
  418ea9:	sete   r8b
  418ead:	xor    edx,edx
  418eaf:	xor    eax,eax
  418eb1:	and    r8d,ecx
  418eb4:	jmp    0x418c31
  418eb9:	nop    DWORD PTR [rax+0x0]
  418ec0:	xor    edx,edx
  418ec2:	xor    r8d,r8d
  418ec5:	xor    eax,eax
  418ec7:	jmp    0x418c31
  418ecc:	lea    rdx,[rip+0x1846e]        # 0x431341
  418ed3:	lea    rcx,[rip+0x18470]        # 0x43134a
  418eda:	mov    r8d,0xbf
  418ee0:	call   0x41d6b0
  418ee5:	mov    r10d,DWORD PTR [rbp-0x48]
  418ee9:	jmp    0x418df0
  418eee:	mov    eax,r8d
  418ef1:	mov    DWORD PTR [rbp-0x4c],r10d
  418ef5:	lea    rax,[rax+rax*4]
  418ef9:	lea    rax,[rax*4+0x1e]
  418f01:	shr    rax,0x4
  418f05:	shl    rax,0x4
  418f09:	call   0x41ce10
  418f0e:	sub    rsp,rax
  418f11:	lea    r9,[rbp-0x38]
  418f15:	mov    rcx,r14
  418f18:	lea    r11,[rsp+0x30]
  418f1d:	mov    rdx,r11
  418f20:	mov    QWORD PTR [rbp-0x48],r11
  418f24:	call   QWORD PTR [rip+0x8343a]        # 0x49c364
  418f2a:	test   eax,eax
  418f2c:	mov    r11,QWORD PTR [rbp-0x48]
  418f30:	mov    r10d,DWORD PTR [rbp-0x4c]
  418f34:	je     0x418dfd
  418f3a:	mov    edx,DWORD PTR [rbp-0x38]
  418f3d:	test   edx,edx
  418f3f:	je     0x418dfd
  418f45:	lea    ecx,[rdx-0x1]
  418f48:	mov    rax,r11
  418f4b:	xor    edx,edx
  418f4d:	mov    r8d,0x1
  418f53:	add    rcx,0x1
  418f57:	imul   rcx,rcx,0x14
  418f5b:	add    rcx,r11
  418f5e:	cmp    WORD PTR [rax],0x1
  418f62:	cmove  edx,r8d
  418f66:	add    rax,0x14
  418f6a:	cmp    rax,rcx
  418f6d:	jne    0x418f5e
  418f6f:	xor    eax,eax
  418f71:	test   edx,edx
  418f73:	mov    r8d,0x1
  418f79:	jne    0x418c09
  418f7f:	jmp    0x418c39
  418f84:	xchg   ax,ax
  418f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f90:	push   rbp
  418f91:	push   r15
  418f93:	push   r14
  418f95:	push   r13
  418f97:	push   r12
  418f99:	push   rdi
  418f9a:	push   rsi
  418f9b:	push   rbx
  418f9c:	sub    rsp,0x948
  418fa3:	lea    rbp,[rsp+0x80]
  418fab:	mov    eax,0x40
  418fb0:	cmp    ecx,0x40
  418fb3:	mov    r14,rdx
  418fb6:	mov    QWORD PTR [rbp+0x920],r8
  418fbd:	cmovle eax,ecx
  418fc0:	cmp    QWORD PTR [rbp+0x930],0x0
  418fc8:	mov    QWORD PTR [rbp+0x928],r9
  418fcf:	mov    DWORD PTR [rbp-0x10],eax
  418fd2:	je     0x419bbb
  418fd8:	mov    rax,QWORD PTR [rbp+0x930]
  418fdf:	mov    edx,0x10624dd3
  418fe4:	mov    rdi,QWORD PTR [rbp+0x930]
  418feb:	mov    ecx,DWORD PTR [rax+0x8]
  418fee:	mov    eax,ecx
  418ff0:	sar    ecx,0x1f
  418ff3:	imul   edx
  418ff5:	sar    edx,0x6
  418ff8:	mov    eax,edx
  418ffa:	imul   edx,DWORD PTR [rdi],0x3e8
  419000:	sub    eax,ecx
  419002:	add    eax,edx
  419004:	test   r8,r8
  419007:	sete   dl
  41900a:	test   r9,r9
  41900d:	mov    DWORD PTR [rbp-0xc],eax
  419010:	sete   al
  419013:	test   dl,al
  419015:	je     0x419020
  419017:	test   r14,r14
  41901a:	je     0x419c5b
  419020:	mov    rax,QWORD PTR [rip+0x4fd41]        # 0x468d68
  419027:	test   rax,rax
  41902a:	je     0x419bd2
  419030:	test   r14,r14
  419033:	mov    QWORD PTR [rbp+0x6b0],rax
  41903a:	mov    QWORD PTR [rbp+0x20],0x0
  419042:	mov    QWORD PTR [rbp+0x28],0x0
  41904a:	mov    QWORD PTR [rbp+0x30],0x0
  419052:	mov    QWORD PTR [rbp+0x38],0x0
  41905a:	mov    QWORD PTR [rbp+0x40],0x0
  419062:	mov    QWORD PTR [rbp+0x48],0x0
  41906a:	mov    QWORD PTR [rbp+0x10],0x0
  419072:	je     0x419c29
  419078:	mov    r9d,DWORD PTR [r14]
  41907b:	test   r9d,r9d
  41907e:	je     0x419105
  419084:	lea    rax,[rbp+0xc]
  419088:	xor    r15d,r15d
  41908b:	lea    rdi,[rbp+0x4a0]
  419092:	mov    rsi,QWORD PTR [rip+0x83223]        # 0x49c2bc
  419099:	mov    r12d,0x1
  41909f:	mov    QWORD PTR [rbp-0x8],rax
  4190a3:	jmp    0x4190cd
  4190a5:	lea    eax,[rbx+0x7]
  4190a8:	test   ebx,ebx
  4190aa:	mov    ecx,ebx
  4190ac:	mov    edx,r12d
  4190af:	cmovns eax,ebx
  4190b2:	and    ecx,0x7
  4190b5:	add    r15d,0x1
  4190b9:	sar    eax,0x3
  4190bc:	shl    edx,cl
  4190be:	cdqe   
  4190c0:	or     BYTE PTR [rbp+rax*1+0x20],dl
  4190c4:	or     BYTE PTR [rbp+rax*1+0x10],dl
  4190c8:	cmp    r15d,DWORD PTR [r14]
  4190cb:	jae    0x419105
  4190cd:	movsxd rax,r15d
  4190d0:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
  4190d5:	mov    ecx,ebx
  4190d7:	call   0x4187b0
  4190dc:	mov    rdx,rdi
  4190df:	mov    r13,rax
  4190e2:	mov    rcx,rax
  4190e5:	call   rsi
  4190e7:	test   eax,eax
  4190e9:	je     0x4190a5
  4190eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4190ef:	mov    rcx,r13
  4190f2:	call   QWORD PTR [rip+0x83214]        # 0x49c30c
  4190f8:	test   eax,eax
  4190fa:	jne    0x4190a5
  4190fc:	add    r15d,0x1
  419100:	cmp    r15d,DWORD PTR [r14]
  419103:	jb     0x4190cd
  419105:	cmp    QWORD PTR [rbp+0x920],0x0
  41910d:	je     0x419c43
  419113:	mov    rax,QWORD PTR [rbp+0x920]
  41911a:	mov    r8d,DWORD PTR [rax]
  41911d:	test   r8d,r8d
  419120:	je     0x4191cc
  419126:	lea    rax,[rbp+0xc]
  41912a:	xor    r15d,r15d
  41912d:	mov    QWORD PTR [rbp+0x918],r14
  419134:	lea    rdi,[rbp+0x4a0]
  41913b:	mov    rsi,QWORD PTR [rip+0x8317a]        # 0x49c2bc
  419142:	mov    r12d,0x1
  419148:	mov    QWORD PTR [rbp-0x8],rax
  41914c:	mov    r14d,r15d
  41914f:	mov    rbx,QWORD PTR [rbp+0x920]
  419156:	jmp    0x41918c
  419158:	nop    DWORD PTR [rax+rax*1+0x0]
  419160:	lea    eax,[r13+0x7]
  419164:	test   r13d,r13d
  419167:	mov    ecx,r13d
  41916a:	mov    edx,r12d
  41916d:	cmovns eax,r13d
  419171:	and    ecx,0x7
  419174:	add    r14d,0x1
  419178:	sar    eax,0x3
  41917b:	shl    edx,cl
  41917d:	cdqe   
  41917f:	or     BYTE PTR [rbp+rax*1+0x30],dl
  419183:	or     BYTE PTR [rbp+rax*1+0x10],dl
  419187:	cmp    r14d,DWORD PTR [rbx]
  41918a:	jae    0x4191c5
  41918c:	movsxd rax,r14d
  41918f:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
  419194:	mov    ecx,r13d
  419197:	call   0x4187b0
  41919c:	mov    rdx,rdi
  41919f:	mov    r15,rax
  4191a2:	mov    rcx,rax
  4191a5:	call   rsi
  4191a7:	test   eax,eax
  4191a9:	je     0x419160
  4191ab:	mov    rdx,QWORD PTR [rbp-0x8]
  4191af:	mov    rcx,r15
  4191b2:	call   QWORD PTR [rip+0x83154]        # 0x49c30c
  4191b8:	test   eax,eax
  4191ba:	je     0x419160
  4191bc:	add    r14d,0x1
  4191c0:	cmp    r14d,DWORD PTR [rbx]
  4191c3:	jb     0x41918c
  4191c5:	mov    r14,QWORD PTR [rbp+0x918]
  4191cc:	cmp    QWORD PTR [rbp+0x928],0x0
  4191d4:	je     0x419c11
  4191da:	mov    rax,QWORD PTR [rbp+0x928]
  4191e1:	mov    eax,DWORD PTR [rax]
  4191e3:	test   eax,eax
  4191e5:	je     0x41922b
  4191e7:	mov    rdi,QWORD PTR [rbp+0x928]
  4191ee:	sub    eax,0x1
  4191f1:	mov    r8d,0x1
  4191f7:	lea    rdx,[rdi+0x8]
  4191fb:	lea    r9,[rdi+rax*8+0x10]
  419200:	mov    rcx,QWORD PTR [rdx]
  419203:	mov    edi,r8d
  419206:	lea    eax,[rcx+0x7]
  419209:	test   ecx,ecx
  41920b:	cmovns eax,ecx
  41920e:	and    ecx,0x7
  419211:	add    rdx,0x8
  419215:	sar    eax,0x3
  419218:	shl    edi,cl
  41921a:	cdqe   
  41921c:	or     BYTE PTR [rbp+rax*1+0x40],dil
  419221:	or     BYTE PTR [rbp+rax*1+0x10],dil
  419226:	cmp    rdx,r9
  419229:	jne    0x419200
  41922b:	mov    rax,QWORD PTR [rbp+0x920]
  419232:	mov    DWORD PTR [r14],0x0
  419239:	mov    DWORD PTR [rbp+0x80],0x0
  419243:	mov    DWORD PTR [rbp+0x290],0x0
  41924d:	mov    DWORD PTR [rbp+0x4a0],0x0
  419257:	mov    DWORD PTR [rax],0x0
  41925d:	mov    rax,QWORD PTR [rbp+0x928]
  419264:	mov    DWORD PTR [rax],0x0
  41926a:	mov    eax,DWORD PTR [rbp-0x10]
  41926d:	test   eax,eax
  41926f:	jle    0x419c6b
  419275:	lea    rbx,[rbp+0x50]
  419279:	xor    esi,esi
  41927b:	mov    r15d,0x1
  419281:	mov    DWORD PTR [rbp-0x18],esi
  419284:	mov    r12d,eax
  419287:	mov    QWORD PTR [rbp-0x8],rbx
  41928b:	lea    rbx,[rbp+0x30]
  41928f:	mov    QWORD PTR [rbp-0x20],rbx
  419293:	lea    rbx,[rbp+0x20]
  419297:	mov    QWORD PTR [rbp-0x28],rbx
  41929b:	jmp    0x4192ac
  41929d:	nop    DWORD PTR [rax]
  4192a0:	add    esi,0x1
  4192a3:	cmp    esi,r12d
  4192a6:	je     0x41933b
  4192ac:	mov    r9d,esi
  4192af:	mov    r13d,esi
  4192b2:	sar    r9d,0x3
  4192b6:	and    r13d,0x7
  4192ba:	movsxd rdi,r9d
  4192bd:	movzx  eax,BYTE PTR [rbp+rdi*1+0x10]
  4192c2:	bt     eax,r13d
  4192c6:	jae    0x4192a0
  4192c8:	mov    ecx,esi
  4192ca:	call   0x4187b0
  4192cf:	test   rax,rax
  4192d2:	mov    rbx,rax
  4192d5:	je     0x419b6b
  4192db:	mov    rdx,QWORD PTR [rbp-0x8]
  4192df:	mov    rcx,rax
  4192e2:	call   QWORD PTR [rip+0x82fd4]        # 0x49c2bc
  4192e8:	test   eax,eax
  4192ea:	je     0x419427
  4192f0:	mov    ecx,DWORD PTR [rbp-0xc]
  4192f3:	mov    eax,r15d
  4192f6:	add    r15d,0x1
  4192fa:	mov    QWORD PTR [rbp+rax*8+0x6b0],rbx
  419302:	test   ecx,ecx
  419304:	je     0x4192a0
  419306:	lea    rax,[rbp+0x40]
  41930a:	mov    r9,QWORD PTR [rbp-0x20]
  41930e:	mov    r8,QWORD PTR [rbp-0x28]
  419312:	mov    edx,esi
  419314:	mov    rcx,rbx
  419317:	mov    QWORD PTR [rsp+0x20],rax
  41931c:	call   0x418b90
  419321:	test   eax,eax
  419323:	mov    eax,0x0
  419328:	cmove  eax,DWORD PTR [rbp-0xc]
  41932c:	add    esi,0x1
  41932f:	cmp    esi,r12d
  419332:	mov    DWORD PTR [rbp-0xc],eax
  419335:	jne    0x4192ac
  41933b:	mov    esi,DWORD PTR [rbp-0x18]
  41933e:	test   esi,esi
  419340:	sete   BYTE PTR [rbp-0x20]
  419344:	setne  BYTE PTR [rbp-0x41]
  419348:	mov    edi,DWORD PTR [rbp-0xc]
  41934b:	mov    eax,r15d
  41934e:	mov    QWORD PTR [rbp+rax*8+0x6b0],0x0
  41935a:	cmp    edi,0xffffffff
  41935d:	je     0x41936b
  41935f:	call   0x422580
  419364:	mov    ebx,eax
  419366:	add    ebx,edi
  419368:	mov    DWORD PTR [rbp-0x48],ebx
  41936b:	mov    QWORD PTR [rbp+0x918],r14
  419372:	mov    r14d,DWORD PTR [rbp-0xc]
  419376:	lea    rax,[rbp+0x6b0]
  41937d:	mov    rbx,QWORD PTR [rip+0x833c8]        # 0x49c74c
  419384:	mov    r13,QWORD PTR [rip+0x833c9]        # 0x49c754
  41938b:	mov    QWORD PTR [rbp-0x28],rax
  41938f:	mov    rax,QWORD PTR [rip+0x83466]        # 0x49c7fc
  419396:	test   r14d,r14d
  419399:	mov    r12,QWORD PTR [rip+0x83394]        # 0x49c734
  4193a0:	sete   dil
  4193a4:	or     dil,BYTE PTR [rbp-0x20]
  4193a8:	mov    QWORD PTR [rbp-0x50],rax
  4193ac:	je     0x419805
  4193b2:	cmp    r14d,0xffffffff
  4193b6:	mov    edi,0x1
  4193bb:	mov    DWORD PTR [rbp-0xc],0x0
  4193c2:	jne    0x419852
  4193c8:	mov    BYTE PTR [rbp-0x8],dil
  4193cc:	mov    rdi,QWORD PTR [rbp-0x28]
  4193d0:	lea    rsi,[rbp+0x50]
  4193d4:	xor    r8d,r8d
  4193d7:	mov    DWORD PTR [rsp+0x20],0x4ff
  4193df:	mov    r9d,r14d
  4193e2:	mov    rdx,rdi
  4193e5:	mov    ecx,r15d
  4193e8:	call   QWORD PTR [rip+0x83356]        # 0x49c744
  4193ee:	cmp    eax,r15d
  4193f1:	jne    0x419672
  4193f7:	nop    WORD PTR [rax+rax*1+0x0]
  419400:	xor    r9d,r9d
  419403:	xor    r8d,r8d
  419406:	xor    edx,edx
  419408:	mov    DWORD PTR [rsp+0x20],0x1
  419410:	mov    rcx,rsi
  419413:	call   rbx
  419415:	test   eax,eax
  419417:	je     0x4193d4
  419419:	mov    rcx,rsi
  41941c:	call   r13
  41941f:	mov    rcx,rsi
  419422:	call   r12
  419425:	jmp    0x419400
  419427:	xor    edx,edx
  419429:	mov    DWORD PTR [rbp+0x50],0xdeadbeef
  419430:	mov    r8,QWORD PTR [rbp-0x8]
  419434:	mov    rcx,rbx
  419437:	call   QWORD PTR [rip+0x8332f]        # 0x49c76c
  41943d:	cmp    DWORD PTR [rbp+0x50],0xdeadbeef
  419444:	je     0x4192f0
  41944a:	movzx  eax,BYTE PTR [rbp+rdi*1+0x20]
  41944f:	mov    r8d,0x20
  419455:	bt     eax,r13d
  419459:	jae    0x4194f9
  41945f:	mov    ecx,DWORD PTR [r14]
  419462:	test   ecx,ecx
  419464:	je     0x41948a
  419466:	cmp    rbx,QWORD PTR [r14+0x8]
  41946a:	je     0x419497
  41946c:	lea    rdx,[r14+0x10]
  419470:	xor    eax,eax
  419472:	jmp    0x41947e
  419474:	add    rdx,0x8
  419478:	cmp    QWORD PTR [rdx-0x8],rbx
  41947c:	je     0x419497
  41947e:	add    eax,0x1
  419481:	cmp    eax,ecx
  419483:	jne    0x419474
  419485:	cmp    ecx,0x3f
  419488:	ja     0x419497
  41948a:	mov    eax,ecx
  41948c:	add    ecx,0x1
  41948f:	mov    QWORD PTR [r14+rax*8+0x8],rbx
  419494:	mov    DWORD PTR [r14],ecx
  419497:	mov    ecx,DWORD PTR [rbp+0x80]
  41949d:	test   ecx,ecx
  41949f:	je     0x4194e0
  4194a1:	cmp    rbx,QWORD PTR [rbp+0x88]
  4194a8:	je     0x419b60
  4194ae:	lea    rdx,[rbp+0x90]
  4194b5:	xor    eax,eax
  4194b7:	jmp    0x4194ce
  4194b9:	nop    DWORD PTR [rax+0x0]
  4194c0:	add    rdx,0x8
  4194c4:	cmp    QWORD PTR [rdx-0x8],rbx
  4194c8:	je     0x419b60
  4194ce:	add    eax,0x1
  4194d1:	cmp    eax,ecx
  4194d3:	jne    0x4194c0
  4194d5:	cmp    ecx,0x3f
  4194d8:	mov    r8d,0x29
  4194de:	ja     0x4194f9
  4194e0:	mov    eax,ecx
  4194e2:	add    ecx,0x1
  4194e5:	mov    r8d,0x29
  4194eb:	mov    QWORD PTR [rbp+rax*8+0x88],rbx
  4194f3:	mov    DWORD PTR [rbp+0x80],ecx
  4194f9:	movzx  eax,BYTE PTR [rbp+rdi*1+0x30]
  4194fe:	bt     eax,r13d
  419502:	jae    0x4195a9
  419508:	mov    rax,QWORD PTR [rbp+0x920]
  41950f:	or     r8d,0x12
  419513:	mov    ecx,DWORD PTR [rax]
  419515:	test   ecx,ecx
  419517:	je     0x419546
  419519:	cmp    rbx,QWORD PTR [rax+0x8]
  41951d:	je     0x419559
  41951f:	lea    rdx,[rax+0x10]
  419523:	xor    eax,eax
  419525:	jmp    0x41953a
  419527:	nop    WORD PTR [rax+rax*1+0x0]
  419530:	add    rdx,0x8
  419534:	cmp    QWORD PTR [rdx-0x8],rbx
  419538:	je     0x419559
  41953a:	add    eax,0x1
  41953d:	cmp    eax,ecx
  41953f:	jne    0x419530
  419541:	cmp    ecx,0x3f
  419544:	ja     0x419559
  419546:	mov    rdx,QWORD PTR [rbp+0x920]
  41954d:	mov    eax,ecx
  41954f:	add    ecx,0x1
  419552:	mov    QWORD PTR [rdx+rax*8+0x8],rbx
  419557:	mov    DWORD PTR [rdx],ecx
  419559:	mov    ecx,DWORD PTR [rbp+0x290]
  41955f:	test   ecx,ecx
  419561:	je     0x419596
  419563:	cmp    rbx,QWORD PTR [rbp+0x298]
  41956a:	je     0x4195a9
  41956c:	lea    rdx,[rbp+0x2a0]
  419573:	xor    eax,eax
  419575:	jmp    0x41958a
  419577:	nop    WORD PTR [rax+rax*1+0x0]
  419580:	add    rdx,0x8
  419584:	cmp    QWORD PTR [rdx-0x8],rbx
  419588:	je     0x4195a9
  41958a:	add    eax,0x1
  41958d:	cmp    eax,ecx
  41958f:	jne    0x419580
  419591:	cmp    ecx,0x3f
  419594:	ja     0x4195a9
  419596:	mov    eax,ecx
  419598:	add    ecx,0x1
  41959b:	mov    QWORD PTR [rbp+rax*8+0x298],rbx
  4195a3:	mov    DWORD PTR [rbp+0x290],ecx
  4195a9:	movzx  eax,BYTE PTR [rbp+rdi*1+0x40]
  4195ae:	bt     eax,r13d
  4195b2:	jae    0x419659
  4195b8:	mov    rax,QWORD PTR [rbp+0x928]
  4195bf:	or     r8d,0x4
  4195c3:	mov    ecx,DWORD PTR [rax]
  4195c5:	test   ecx,ecx
  4195c7:	je     0x4195f6
  4195c9:	cmp    rbx,QWORD PTR [rax+0x8]
  4195cd:	je     0x419609
  4195cf:	lea    rdx,[rax+0x10]
  4195d3:	xor    eax,eax
  4195d5:	jmp    0x4195ea
  4195d7:	nop    WORD PTR [rax+rax*1+0x0]
  4195e0:	add    rdx,0x8
  4195e4:	cmp    QWORD PTR [rdx-0x8],rbx
  4195e8:	je     0x419609
  4195ea:	add    eax,0x1
  4195ed:	cmp    eax,ecx
  4195ef:	jne    0x4195e0
  4195f1:	cmp    ecx,0x3f
  4195f4:	ja     0x419609
  4195f6:	mov    rdi,QWORD PTR [rbp+0x928]
  4195fd:	mov    eax,ecx
  4195ff:	add    ecx,0x1
  419602:	mov    QWORD PTR [rdi+rax*8+0x8],rbx
  419607:	mov    DWORD PTR [rdi],ecx
  419609:	mov    ecx,DWORD PTR [rbp+0x4a0]
  41960f:	test   ecx,ecx
  419611:	je     0x419646
  419613:	cmp    rbx,QWORD PTR [rbp+0x4a8]
  41961a:	je     0x419659
  41961c:	lea    rdx,[rbp+0x4b0]
  419623:	xor    eax,eax
  419625:	jmp    0x41963a
  419627:	nop    WORD PTR [rax+rax*1+0x0]
  419630:	add    rdx,0x8
  419634:	cmp    QWORD PTR [rdx-0x8],rbx
  419638:	je     0x419659
  41963a:	add    eax,0x1
  41963d:	cmp    eax,ecx
  41963f:	jne    0x419630
  419641:	cmp    ecx,0x3f
  419644:	ja     0x419659
  419646:	mov    eax,ecx
  419648:	add    ecx,0x1
  41964b:	mov    QWORD PTR [rbp+rax*8+0x4a8],rbx
  419653:	mov    DWORD PTR [rbp+0x4a0],ecx
  419659:	mov    rdx,QWORD PTR [rip+0x4f708]        # 0x468d68
  419660:	mov    rcx,rbx
  419663:	call   QWORD PTR [rip+0x8310b]        # 0x49c774
  419669:	add    DWORD PTR [rbp-0x18],0x1
  41966d:	jmp    0x4192a0
  419672:	movzx  edi,BYTE PTR [rbp-0x8]
  419676:	test   dil,dil
  419679:	je     0x4196ad
  41967b:	cmp    BYTE PTR [rbp-0x41],0x0
  41967f:	je     0x4196ad
  419681:	lea    rax,[rip+0x4f6d4]        # 0x468d5c
  419688:	lea    rdx,[rbp+0x80]
  41968f:	lea    r9,[rbp+0x4a0]
  419696:	lea    r8,[rbp+0x290]
  41969d:	xor    ecx,ecx
  41969f:	mov    QWORD PTR [rsp+0x20],rax
  4196a4:	mov    rax,QWORD PTR [rbp-0x50]
  4196a8:	call   rax
  4196aa:	mov    DWORD PTR [rbp-0xc],eax
  4196ad:	cmp    r15d,0x1
  4196b1:	jbe    0x4198b7
  4196b7:	mov    eax,DWORD PTR [rbp-0x10]
  4196ba:	test   eax,eax
  4196bc:	jle    0x4198a6
  4196c2:	lea    rdi,[rbp+0x30]
  4196c6:	mov    r15d,0x1
  4196cc:	xor    esi,esi
  4196ce:	mov    DWORD PTR [rbp-0x18],r14d
  4196d2:	mov    DWORD PTR [rbp-0x8],r15d
  4196d6:	mov    QWORD PTR [rbp-0x30],rdi
  4196da:	lea    rdi,[rbp+0x20]
  4196de:	mov    QWORD PTR [rbp-0x38],rdi
  4196e2:	lea    rdi,[rbp+0x40]
  4196e6:	mov    QWORD PTR [rbp-0x40],rdi
  4196ea:	mov    edi,eax
  4196ec:	jmp    0x4196f7
  4196ee:	xchg   ax,ax
  4196f0:	add    esi,0x1
  4196f3:	cmp    esi,edi
  4196f5:	je     0x419776
  4196f7:	mov    r10d,esi
  4196fa:	mov    r14d,esi
  4196fd:	sar    r10d,0x3
  419701:	and    r14d,0x7
  419705:	movsxd r15,r10d
  419708:	movzx  eax,BYTE PTR [rbp+r15*1+0x10]
  41970e:	bt     eax,r14d
  419712:	jae    0x4196f0
  419714:	mov    ecx,esi
  419716:	call   0x4187b0
  41971b:	mov    edx,DWORD PTR [rbp-0x8]
  41971e:	mov    rcx,QWORD PTR [rbp+rdx*8+0x6b0]
  419726:	cmp    rcx,rax
  419729:	jne    0x4196f0
  41972b:	mov    rax,QWORD PTR [rbp-0x40]
  41972f:	mov    r9,QWORD PTR [rbp-0x30]
  419733:	mov    edx,esi
  419735:	mov    r8,QWORD PTR [rbp-0x38]
  419739:	add    DWORD PTR [rbp-0x8],0x1
  41973d:	mov    QWORD PTR [rsp+0x20],rax
  419742:	call   0x418b90
  419747:	movzx  eax,BYTE PTR [rbp+r15*1+0x28]
  41974d:	bt     eax,r14d
  419751:	jb     0x41976b
  419753:	movzx  eax,BYTE PTR [rbp+r15*1+0x38]
  419759:	bt     eax,r14d
  41975d:	jb     0x41976b
  41975f:	movzx  eax,BYTE PTR [rbp+r15*1+0x48]
  419765:	bt     eax,r14d
  419769:	jae    0x4196f0
  41976b:	add    esi,0x1
  41976e:	add    DWORD PTR [rbp-0xc],0x1
  419772:	cmp    esi,edi
  419774:	jne    0x4196f7
  419776:	mov    edx,DWORD PTR [rbp-0xc]
  419779:	mov    r14d,DWORD PTR [rbp-0x18]
  41977d:	mov    r15d,DWORD PTR [rbp-0x8]
  419781:	test   edx,edx
  419783:	jne    0x4198b7
  419789:	cmp    r14d,0xffffffff
  41978d:	je     0x4197a2
  41978f:	cmp    r15d,0x1
  419793:	jbe    0x419b81
  419799:	test   r14d,r14d
  41979c:	je     0x419b81
  4197a2:	lea    rax,[rbp+0x80]
  4197a9:	mov    rsi,QWORD PTR [rbp+0x918]
  4197b0:	mov    ecx,0x41
  4197b5:	mov    edx,0x1
  4197ba:	mov    rdi,rax
  4197bd:	lea    rax,[rbp+0x290]
  4197c4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4197c7:	mov    rdi,rax
  4197ca:	mov    rsi,QWORD PTR [rbp+0x920]
  4197d1:	lea    rax,[rbp+0x4a0]
  4197d8:	mov    cl,0x41
  4197da:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4197dd:	mov    rdi,rax
  4197e0:	mov    rsi,QWORD PTR [rbp+0x928]
  4197e7:	mov    cl,0x41
  4197e9:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4197ec:	mov    cl,0x1
  4197ee:	call   QWORD PTR [rip+0x82bc0]        # 0x49c3b4
  4197f4:	test   r14d,r14d
  4197f7:	sete   dil
  4197fb:	or     dil,BYTE PTR [rbp-0x20]
  4197ff:	jne    0x4193b2
  419805:	lea    r10,[rbp+0x290]
  41980c:	lea    r11,[rbp+0x80]
  419813:	lea    rax,[rbp+0x4a0]
  41981a:	lea    rdx,[rip+0x4f53b]        # 0x468d5c
  419821:	xor    ecx,ecx
  419823:	mov    r8,r10
  419826:	mov    QWORD PTR [rbp-0x18],r10
  41982a:	mov    QWORD PTR [rbp-0x8],r11
  41982e:	mov    QWORD PTR [rsp+0x20],rdx
  419833:	mov    QWORD PTR [rbp-0x30],rax
  419837:	mov    rdx,r11
  41983a:	mov    r9,rax
  41983d:	call   QWORD PTR [rip+0x82fb9]        # 0x49c7fc
  419843:	test   eax,eax
  419845:	mov    DWORD PTR [rbp-0xc],eax
  419848:	mov    r11,QWORD PTR [rbp-0x8]
  41984c:	mov    r10,QWORD PTR [rbp-0x18]
  419850:	je     0x419870
  419852:	call   0x422580
  419857:	mov    edx,DWORD PTR [rbp-0x48]
  41985a:	mov    r14d,edx
  41985d:	sub    r14d,eax
  419860:	cmp    eax,edx
  419862:	mov    eax,0x0
  419867:	cmovg  r14d,eax
  41986b:	jmp    0x4193c8
  419870:	mov    ecx,0x41
  419875:	mov    rdi,r11
  419878:	mov    rsi,QWORD PTR [rbp+0x918]
  41987f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419882:	mov    rdi,r10
  419885:	mov    rsi,QWORD PTR [rbp+0x920]
  41988c:	mov    cl,0x41
  41988e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419891:	mov    rdi,QWORD PTR [rbp-0x30]
  419895:	mov    rsi,QWORD PTR [rbp+0x928]
  41989c:	mov    cl,0x41
  41989e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4198a1:	jmp    0x4193b2
  4198a6:	mov    edx,DWORD PTR [rbp-0xc]
  4198a9:	mov    r15d,0x1
  4198af:	test   edx,edx
  4198b1:	je     0x419789
  4198b7:	mov    r14,QWORD PTR [rbp+0x918]
  4198be:	mov    rax,QWORD PTR [rbp+0x920]
  4198c5:	mov    DWORD PTR [r14],0x0
  4198cc:	mov    DWORD PTR [rax],0x0
  4198d2:	mov    rax,QWORD PTR [rbp+0x928]
  4198d9:	mov    DWORD PTR [rax],0x0
  4198df:	mov    eax,DWORD PTR [rbp-0x10]
  4198e2:	test   eax,eax
  4198e4:	jle    0x419a62
  4198ea:	lea    rax,[rbp+0x80]
  4198f1:	lea    r12,[rbp+0x4a0]
  4198f8:	mov    ebx,0x1
  4198fd:	xor    r13d,r13d
  419900:	mov    DWORD PTR [rbp-0x8],ebx
  419903:	mov    rdi,QWORD PTR [rbp+0x920]
  41990a:	mov    QWORD PTR [rbp-0x18],rax
  41990e:	lea    rax,[rbp+0x290]
  419915:	mov    r15,QWORD PTR [rbp+0x928]
  41991c:	mov    QWORD PTR [rbp-0x28],r12
  419920:	mov    QWORD PTR [rbp-0x20],rax
  419924:	jmp    0x419934
  419926:	add    r13,0x1
  41992a:	cmp    DWORD PTR [rbp-0x10],r13d
  41992e:	jle    0x419a62
  419934:	mov    esi,r13d
  419937:	mov    ebx,r13d
  41993a:	sar    esi,0x3
  41993d:	and    ebx,0x7
  419940:	movsxd rsi,esi
  419943:	movzx  eax,BYTE PTR [rbp+rsi*1+0x10]
  419948:	bt     eax,ebx
  41994b:	jae    0x419926
  41994d:	mov    ecx,r13d
  419950:	call   0x4187b0
  419955:	mov    r12,rax
  419958:	mov    eax,DWORD PTR [rbp-0x8]
  41995b:	cmp    QWORD PTR [rbp+rax*8+0x6b0],r12
  419963:	je     0x419a79
  419969:	xor    r8d,r8d
  41996c:	xor    edx,edx
  41996e:	mov    rcx,r12
  419971:	call   QWORD PTR [rip+0x82dfd]        # 0x49c774
  419977:	mov    rdx,QWORD PTR [rbp-0x18]
  41997b:	mov    rcx,r12
  41997e:	call   0x41b810
  419983:	test   eax,eax
  419985:	je     0x4199ba
  419987:	mov    ecx,DWORD PTR [r14]
  41998a:	test   ecx,ecx
  41998c:	je     0x419bee
  419992:	cmp    QWORD PTR [r14+0x8],r13
  419996:	je     0x4199ba
  419998:	lea    rdx,[r14+0x10]
  41999c:	xor    eax,eax
  41999e:	jmp    0x4199aa
  4199a0:	add    rdx,0x8
  4199a4:	cmp    r13,QWORD PTR [rdx-0x8]
  4199a8:	je     0x4199ba
  4199aa:	add    eax,0x1
  4199ad:	cmp    eax,ecx
  4199af:	jne    0x4199a0
  4199b1:	cmp    ecx,0x3f
  4199b4:	jbe    0x419bee
  4199ba:	mov    rdx,QWORD PTR [rbp-0x20]
  4199be:	mov    rcx,r12
  4199c1:	call   0x41b810
  4199c6:	test   eax,eax
  4199c8:	je     0x4199fc
  4199ca:	mov    ecx,DWORD PTR [rdi]
  4199cc:	test   ecx,ecx
  4199ce:	je     0x419c00
  4199d4:	cmp    QWORD PTR [rdi+0x8],r13
  4199d8:	je     0x4199fc
  4199da:	lea    rax,[rdi+0x10]
  4199de:	xor    edx,edx
  4199e0:	jmp    0x4199ec
  4199e2:	add    rax,0x8
  4199e6:	cmp    QWORD PTR [rax-0x8],r13
  4199ea:	je     0x4199fc
  4199ec:	add    edx,0x1
  4199ef:	cmp    edx,ecx
  4199f1:	jne    0x4199e2
  4199f3:	cmp    ecx,0x3f
  4199f6:	jbe    0x419c00
  4199fc:	mov    rdx,QWORD PTR [rbp-0x28]
  419a00:	mov    rcx,r12
  419a03:	call   0x41b810
  419a08:	test   eax,eax
  419a0a:	je     0x419926
  419a10:	mov    ecx,DWORD PTR [r15]
  419a13:	test   ecx,ecx
  419a15:	je     0x419a47
  419a17:	cmp    QWORD PTR [r15+0x8],r13
  419a1b:	je     0x419926
  419a21:	lea    rdx,[r15+0x10]
  419a25:	xor    eax,eax
  419a27:	jmp    0x419a37
  419a29:	add    rdx,0x8
  419a2d:	cmp    QWORD PTR [rdx-0x8],r13
  419a31:	je     0x419926
  419a37:	add    eax,0x1
  419a3a:	cmp    eax,ecx
  419a3c:	jne    0x419a29
  419a3e:	cmp    ecx,0x3f
  419a41:	ja     0x419926
  419a47:	mov    eax,ecx
  419a49:	add    ecx,0x1
  419a4c:	mov    QWORD PTR [r15+rax*8+0x8],r13
  419a51:	add    r13,0x1
  419a55:	cmp    DWORD PTR [rbp-0x10],r13d
  419a59:	mov    DWORD PTR [r15],ecx
  419a5c:	jg     0x419934
  419a62:	mov    eax,DWORD PTR [rbp-0xc]
  419a65:	lea    rsp,[rbp+0x8c8]
  419a6c:	pop    rbx
  419a6d:	pop    rsi
  419a6e:	pop    rdi
  419a6f:	pop    r12
  419a71:	pop    r13
  419a73:	pop    r14
  419a75:	pop    r15
  419a77:	pop    rbp
  419a78:	ret    
  419a79:	movzx  eax,BYTE PTR [rbp+rsi*1+0x28]
  419a7e:	add    DWORD PTR [rbp-0x8],0x1
  419a82:	bt     eax,ebx
  419a85:	jae    0x419ac3
  419a87:	mov    eax,DWORD PTR [r14]
  419a8a:	test   eax,eax
  419a8c:	je     0x419ab6
  419a8e:	cmp    QWORD PTR [r14+0x8],r13
  419a92:	je     0x419ac3
  419a94:	lea    r8,[r14+0x10]
  419a98:	xor    ecx,ecx
  419a9a:	jmp    0x419aaa
  419a9c:	nop    DWORD PTR [rax+0x0]
  419aa0:	add    r8,0x8
  419aa4:	cmp    QWORD PTR [r8-0x8],r13
  419aa8:	je     0x419ac3
  419aaa:	add    ecx,0x1
  419aad:	cmp    ecx,eax
  419aaf:	jne    0x419aa0
  419ab1:	cmp    eax,0x3f
  419ab4:	ja     0x419ac3
  419ab6:	mov    ecx,eax
  419ab8:	add    eax,0x1
  419abb:	mov    QWORD PTR [r14+rcx*8+0x8],r13
  419ac0:	mov    DWORD PTR [r14],eax
  419ac3:	movzx  eax,BYTE PTR [rbp+rsi*1+0x38]
  419ac8:	bt     eax,ebx
  419acb:	jae    0x419b03
  419acd:	mov    eax,DWORD PTR [rdi]
  419acf:	test   eax,eax
  419ad1:	je     0x419af7
  419ad3:	cmp    QWORD PTR [rdi+0x8],r13
  419ad7:	je     0x419b03
  419ad9:	lea    r8,[rdi+0x10]
  419add:	xor    ecx,ecx
  419adf:	jmp    0x419aeb
  419ae1:	add    r8,0x8
  419ae5:	cmp    QWORD PTR [r8-0x8],r13
  419ae9:	je     0x419b03
  419aeb:	add    ecx,0x1
  419aee:	cmp    ecx,eax
  419af0:	jne    0x419ae1
  419af2:	cmp    eax,0x3f
  419af5:	ja     0x419b03
  419af7:	mov    ecx,eax
  419af9:	add    eax,0x1
  419afc:	mov    QWORD PTR [rdi+rcx*8+0x8],r13
  419b01:	mov    DWORD PTR [rdi],eax
  419b03:	movzx  eax,BYTE PTR [rbp+rsi*1+0x48]
  419b08:	bt     eax,ebx
  419b0b:	jae    0x419926
  419b11:	mov    eax,DWORD PTR [r15]
  419b14:	test   eax,eax
  419b16:	je     0x419b4e
  419b18:	cmp    QWORD PTR [r15+0x8],r13
  419b1c:	je     0x419926
  419b22:	lea    rcx,[r15+0x10]
  419b26:	xor    edx,edx
  419b28:	jmp    0x419b3e
  419b2a:	nop    WORD PTR [rax+rax*1+0x0]
  419b30:	add    rcx,0x8
  419b34:	cmp    QWORD PTR [rcx-0x8],r13
  419b38:	je     0x419926
  419b3e:	add    edx,0x1
  419b41:	cmp    edx,eax
  419b43:	jne    0x419b30
  419b45:	cmp    eax,0x3f
  419b48:	ja     0x419926
  419b4e:	mov    edx,eax
  419b50:	add    eax,0x1
  419b53:	mov    QWORD PTR [r15+rdx*8+0x8],r13
  419b58:	mov    DWORD PTR [r15],eax
  419b5b:	jmp    0x419926
  419b60:	mov    r8d,0x29
  419b66:	jmp    0x4194f9
  419b6b:	call   QWORD PTR [rip+0x82903]        # 0x49c474
  419b71:	mov    DWORD PTR [rax],0x9
  419b77:	mov    eax,0xffffffff
  419b7c:	jmp    0x419a65
  419b81:	mov    eax,r14d
  419b84:	mov    r14,QWORD PTR [rbp+0x918]
  419b8b:	test   eax,eax
  419b8d:	jne    0x4198be
  419b93:	cmp    QWORD PTR [rbp+0x930],0x0
  419b9b:	je     0x4198be
  419ba1:	mov    rax,QWORD PTR [rbp+0x930]
  419ba8:	mov    DWORD PTR [rax+0x8],0x0
  419baf:	mov    QWORD PTR [rax],0x0
  419bb6:	jmp    0x4198be
  419bbb:	mov    rax,QWORD PTR [rip+0x4f1a6]        # 0x468d68
  419bc2:	mov    DWORD PTR [rbp-0xc],0xffffffff
  419bc9:	test   rax,rax
  419bcc:	jne    0x419030
  419bd2:	xor    r9d,r9d
  419bd5:	xor    r8d,r8d
  419bd8:	xor    edx,edx
  419bda:	xor    ecx,ecx
  419bdc:	call   QWORD PTR [rip+0x826aa]        # 0x49c28c
  419be2:	mov    QWORD PTR [rip+0x4f17f],rax        # 0x468d68
  419be9:	jmp    0x419030
  419bee:	mov    eax,ecx
  419bf0:	add    ecx,0x1
  419bf3:	mov    QWORD PTR [r14+rax*8+0x8],r13
  419bf8:	mov    DWORD PTR [r14],ecx
  419bfb:	jmp    0x4199ba
  419c00:	mov    eax,ecx
  419c02:	add    ecx,0x1
  419c05:	mov    QWORD PTR [rdi+rax*8+0x8],r13
  419c0a:	mov    DWORD PTR [rdi],ecx
  419c0c:	jmp    0x4199fc
  419c11:	sub    rsp,0x220
  419c18:	lea    rax,[rsp+0x30]
  419c1d:	mov    QWORD PTR [rbp+0x928],rax
  419c24:	jmp    0x41922b
  419c29:	sub    rsp,0x220
  419c30:	cmp    QWORD PTR [rbp+0x920],0x0
  419c38:	lea    r14,[rsp+0x30]
  419c3d:	jne    0x419113
  419c43:	sub    rsp,0x220
  419c4a:	lea    rax,[rsp+0x30]
  419c4f:	mov    QWORD PTR [rbp+0x920],rax
  419c56:	jmp    0x4191cc
  419c5b:	mov    ecx,DWORD PTR [rbp-0xc]
  419c5e:	call   QWORD PTR [rip+0x82748]        # 0x49c3ac
  419c64:	xor    eax,eax
  419c66:	jmp    0x419a65
  419c6b:	mov    BYTE PTR [rbp-0x41],0x0
  419c6f:	mov    BYTE PTR [rbp-0x20],0x1
  419c73:	mov    r15d,0x1
  419c79:	jmp    0x419348
  419c7e:	nop
  419c7f:	nop
  419c80:	push   rdi
  419c81:	push   rsi
  419c82:	push   rbx
  419c83:	sub    rsp,0x30
  419c87:	mov    rbx,rdx
  419c8a:	mov    rsi,r8
  419c8d:	mov    edi,r9d
  419c90:	call   0x4187b0
  419c95:	cmp    rax,0xffffffffffffffff
  419c99:	mov    rcx,rax
  419c9c:	je     0x419de0
  419ca2:	mov    rdx,rbx
  419ca5:	mov    r9d,edi
  419ca8:	mov    r8d,esi
  419cab:	call   QWORD PTR [rip+0x82b53]        # 0x49c804
  419cb1:	test   eax,eax
  419cb3:	mov    ebx,eax
  419cb5:	js     0x419cc2
  419cb7:	movsxd rax,ebx
  419cba:	add    rsp,0x30
  419cbe:	pop    rbx
  419cbf:	pop    rsi
  419cc0:	pop    rdi
  419cc1:	ret    
  419cc2:	call   QWORD PTR [rip+0x82ab4]        # 0x49c77c
  419cc8:	cmp    eax,0x2740
  419ccd:	mov    esi,eax
  419ccf:	je     0x419f55
  419cd5:	jg     0x419d20
  419cd7:	cmp    eax,0x2736
  419cdc:	je     0x419f33
  419ce2:	jle    0x419da0
  419ce8:	cmp    eax,0x273a
  419ced:	je     0x419f22
  419cf3:	jg     0x419e22
  419cf9:	cmp    eax,0x2738
  419cfe:	je     0x419f77
  419d04:	jg     0x419f66
  419d0a:	call   QWORD PTR [rip+0x82764]        # 0x49c474
  419d10:	mov    DWORD PTR [rax],0x6d
  419d16:	jmp    0x419cb7
  419d18:	nop    DWORD PTR [rax+rax*1+0x0]
  419d20:	cmp    eax,0x2748
  419d25:	je     0x419f44
  419d2b:	jg     0x419d60
  419d2d:	cmp    eax,0x2744
  419d32:	je     0x419f11
  419d38:	jg     0x419e00
  419d3e:	cmp    eax,0x2742
  419d43:	je     0x419f00
  419d49:	jg     0x419eef
  419d4f:	call   QWORD PTR [rip+0x8271f]        # 0x49c474
  419d55:	mov    DWORD PTR [rax],0x65
  419d5b:	jmp    0x419cb7
  419d60:	cmp    eax,0x274e
  419d65:	je     0x419fbb
  419d6b:	jg     0x419e62
  419d71:	cmp    eax,0x274c
  419d76:	je     0x419fdd
  419d7c:	jg     0x419fcc
  419d82:	cmp    eax,0x2749
  419d87:	jne    0x419e43
  419d8d:	call   QWORD PTR [rip+0x826e1]        # 0x49c474
  419d93:	mov    DWORD PTR [rax],0x7e
  419d99:	jmp    0x419cb7
  419d9e:	xchg   ax,ax
  419da0:	cmp    eax,0x57
  419da3:	je     0x419eab
  419da9:	jle    0x419e90
  419daf:	cmp    eax,0x2734
  419db4:	je     0x419fff
  419dba:	jg     0x419fee
  419dc0:	cmp    eax,0x2733
  419dc5:	jne    0x419e43
  419dc7:	call   QWORD PTR [rip+0x826a7]        # 0x49c474
  419dcd:	mov    DWORD PTR [rax],0x8c
  419dd3:	jmp    0x419cb7
  419dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  419de0:	mov    QWORD PTR [rsp+0x28],rax
  419de5:	call   QWORD PTR [rip+0x82689]        # 0x49c474
  419deb:	mov    rcx,QWORD PTR [rsp+0x28]
  419df0:	mov    DWORD PTR [rax],0x9
  419df6:	mov    rax,rcx
  419df9:	jmp    0x419cba
  419dfe:	xchg   ax,ax
  419e00:	cmp    eax,0x2746
  419e05:	je     0x419f99
  419e0b:	jg     0x419f88
  419e11:	call   QWORD PTR [rip+0x8265d]        # 0x49c474
  419e17:	mov    DWORD PTR [rax],0x6a
  419e1d:	jmp    0x419cb7
  419e22:	cmp    eax,0x273d
  419e27:	je     0x419ede
  419e2d:	cmp    eax,0x273f
  419e32:	je     0x419ecd
  419e38:	cmp    eax,0x273b
  419e3d:	je     0x419faa
  419e43:	call   QWORD PTR [rip+0x8262b]        # 0x49c474
  419e49:	lea    ecx,[rsi-0x2711]
  419e4f:	lea    edx,[rsi-0x2710]
  419e55:	cmp    ecx,0x17
  419e58:	cmovbe esi,edx
  419e5b:	mov    DWORD PTR [rax],esi
  419e5d:	jmp    0x419cb7
  419e62:	cmp    eax,0x2751
  419e67:	je     0x41a021
  419e6d:	cmp    eax,0x2752
  419e72:	je     0x41a010
  419e78:	cmp    eax,0x274f
  419e7d:	jne    0x419e43
  419e7f:	call   QWORD PTR [rip+0x825ef]        # 0x49c474
  419e85:	mov    DWORD PTR [rax],0x26
  419e8b:	jmp    0x419cb7
  419e90:	cmp    eax,0x6
  419e93:	je     0x419ebc
  419e95:	cmp    eax,0x8
  419e98:	jne    0x419e43
  419e9a:	call   QWORD PTR [rip+0x825d4]        # 0x49c474
  419ea0:	mov    DWORD PTR [rax],0xc
  419ea6:	jmp    0x419cb7
  419eab:	call   QWORD PTR [rip+0x825c3]        # 0x49c474
  419eb1:	mov    DWORD PTR [rax],0x16
  419eb7:	jmp    0x419cb7
  419ebc:	call   QWORD PTR [rip+0x825b2]        # 0x49c474
  419ec2:	mov    DWORD PTR [rax],0x9
  419ec8:	jmp    0x419cb7
  419ecd:	call   QWORD PTR [rip+0x825a1]        # 0x49c474
  419ed3:	mov    DWORD PTR [rax],0x66
  419ed9:	jmp    0x419cb7
  419ede:	call   QWORD PTR [rip+0x82590]        # 0x49c474
  419ee4:	mov    DWORD PTR [rax],0x82
  419eea:	jmp    0x419cb7
  419eef:	call   QWORD PTR [rip+0x8257f]        # 0x49c474
  419ef5:	mov    DWORD PTR [rax],0x76
  419efb:	jmp    0x419cb7
  419f00:	call   QWORD PTR [rip+0x8256e]        # 0x49c474
  419f06:	mov    DWORD PTR [rax],0x74
  419f0c:	jmp    0x419cb7
  419f11:	call   QWORD PTR [rip+0x8255d]        # 0x49c474
  419f17:	mov    DWORD PTR [rax],0x75
  419f1d:	jmp    0x419cb7
  419f22:	call   QWORD PTR [rip+0x8254c]        # 0x49c474
  419f28:	mov    DWORD PTR [rax],0x7b
  419f2e:	jmp    0x419cb7
  419f33:	call   QWORD PTR [rip+0x8253b]        # 0x49c474
  419f39:	mov    DWORD PTR [rax],0x80
  419f3f:	jmp    0x419cb7
  419f44:	call   QWORD PTR [rip+0x8252a]        # 0x49c474
  419f4a:	mov    DWORD PTR [rax],0x71
  419f50:	jmp    0x419cb7
  419f55:	call   QWORD PTR [rip+0x82519]        # 0x49c474
  419f5b:	mov    DWORD PTR [rax],0x64
  419f61:	jmp    0x419cb7
  419f66:	call   QWORD PTR [rip+0x82508]        # 0x49c474
  419f6c:	mov    DWORD PTR [rax],0x88
  419f72:	jmp    0x419cb7
  419f77:	call   QWORD PTR [rip+0x824f7]        # 0x49c474
  419f7d:	mov    DWORD PTR [rax],0x73
  419f83:	jmp    0x419cb7
  419f88:	call   QWORD PTR [rip+0x824e6]        # 0x49c474
  419f8e:	mov    DWORD PTR [rax],0x77
  419f94:	jmp    0x419cb7
  419f99:	call   QWORD PTR [rip+0x824d5]        # 0x49c474
  419f9f:	mov    DWORD PTR [rax],0x6c
  419fa5:	jmp    0x419cb7
  419faa:	call   QWORD PTR [rip+0x824c4]        # 0x49c474
  419fb0:	mov    DWORD PTR [rax],0x87
  419fb6:	jmp    0x419cb7
  419fbb:	call   QWORD PTR [rip+0x824b3]        # 0x49c474
  419fc1:	mov    DWORD PTR [rax],0x72
  419fc7:	jmp    0x419cb7
  419fcc:	call   QWORD PTR [rip+0x824a2]        # 0x49c474
  419fd2:	mov    DWORD PTR [rax],0x6b
  419fd8:	jmp    0x419cb7
  419fdd:	call   QWORD PTR [rip+0x82491]        # 0x49c474
  419fe3:	mov    DWORD PTR [rax],0x8a
  419fe9:	jmp    0x419cb7
  419fee:	call   QWORD PTR [rip+0x82480]        # 0x49c474
  419ff4:	mov    DWORD PTR [rax],0x67
  419ffa:	jmp    0x419cb7
  419fff:	call   QWORD PTR [rip+0x8246f]        # 0x49c474
  41a005:	mov    DWORD PTR [rax],0x70
  41a00b:	jmp    0x419cb7
  41a010:	call   QWORD PTR [rip+0x8245e]        # 0x49c474
  41a016:	mov    DWORD PTR [rax],0x29
  41a01c:	jmp    0x419cb7
  41a021:	call   QWORD PTR [rip+0x8244d]        # 0x49c474
  41a027:	mov    DWORD PTR [rax],0x6e
  41a02d:	jmp    0x419cb7
  41a032:	nop
  41a033:	nop
  41a034:	nop
  41a035:	nop
  41a036:	nop
  41a037:	nop
  41a038:	nop
  41a039:	nop
  41a03a:	nop
  41a03b:	nop
  41a03c:	nop
  41a03d:	nop
  41a03e:	nop
  41a03f:	nop
  41a040:	push   rdi
  41a041:	push   rsi
  41a042:	push   rbx
  41a043:	sub    rsp,0x30
  41a047:	mov    ebx,edx
  41a049:	call   0x4187b0
  41a04e:	cmp    rax,0xffffffffffffffff
  41a052:	mov    rcx,rax
  41a055:	je     0x41a190
  41a05b:	mov    edx,ebx
  41a05d:	call   QWORD PTR [rip+0x827a9]        # 0x49c80c
  41a063:	test   eax,eax
  41a065:	mov    esi,eax
  41a067:	mov    ebx,eax
  41a069:	js     0x41a075
  41a06b:	mov    eax,ebx
  41a06d:	add    rsp,0x30
  41a071:	pop    rbx
  41a072:	pop    rsi
  41a073:	pop    rdi
  41a074:	ret    
  41a075:	call   QWORD PTR [rip+0x82701]        # 0x49c77c
  41a07b:	cmp    eax,0x2740
  41a080:	mov    edi,eax
  41a082:	je     0x41a31b
  41a088:	jg     0x41a0d0
  41a08a:	cmp    eax,0x2736
  41a08f:	je     0x41a2f9
  41a095:	jle    0x41a152
  41a09b:	cmp    eax,0x273a
  41a0a0:	je     0x41a2e8
  41a0a6:	jg     0x41a1d4
  41a0ac:	cmp    eax,0x2738
  41a0b1:	je     0x41a33f
  41a0b7:	jg     0x41a32c
  41a0bd:	call   QWORD PTR [rip+0x823b1]        # 0x49c474
  41a0c3:	mov    ebx,esi
  41a0c5:	mov    DWORD PTR [rax],0x6d
  41a0cb:	jmp    0x41a06b
  41a0cd:	nop    DWORD PTR [rax]
  41a0d0:	cmp    eax,0x2748
  41a0d5:	je     0x41a30a
  41a0db:	jg     0x41a112
  41a0dd:	cmp    eax,0x2744
  41a0e2:	je     0x41a2d7
  41a0e8:	jg     0x41a1b0
  41a0ee:	cmp    eax,0x2742
  41a0f3:	je     0x41a2c6
  41a0f9:	jg     0x41a2b3
  41a0ff:	call   QWORD PTR [rip+0x8236f]        # 0x49c474
  41a105:	mov    ebx,esi
  41a107:	mov    DWORD PTR [rax],0x65
  41a10d:	jmp    0x41a06b
  41a112:	cmp    eax,0x274e
  41a117:	je     0x41a387
  41a11d:	jg     0x41a220
  41a123:	cmp    eax,0x274c
  41a128:	je     0x41a3ab
  41a12e:	jg     0x41a398
  41a134:	cmp    eax,0x2749
  41a139:	jne    0x41a1f5
  41a13f:	call   QWORD PTR [rip+0x8232f]        # 0x49c474
  41a145:	mov    ebx,esi
  41a147:	mov    DWORD PTR [rax],0x7e
  41a14d:	jmp    0x41a06b
  41a152:	cmp    eax,0x57
  41a155:	je     0x41a26d
  41a15b:	jle    0x41a250
  41a161:	cmp    eax,0x2734
  41a166:	je     0x41a3cf
  41a16c:	jg     0x41a3bc
  41a172:	cmp    eax,0x2733
  41a177:	jne    0x41a1f5
  41a179:	call   QWORD PTR [rip+0x822f5]        # 0x49c474
  41a17f:	mov    ebx,esi
  41a181:	mov    DWORD PTR [rax],0x8c
  41a187:	jmp    0x41a06b
  41a18c:	nop    DWORD PTR [rax+0x0]
  41a190:	mov    QWORD PTR [rsp+0x28],rax
  41a195:	call   QWORD PTR [rip+0x822d9]        # 0x49c474
  41a19b:	mov    rcx,QWORD PTR [rsp+0x28]
  41a1a0:	mov    DWORD PTR [rax],0x9
  41a1a6:	mov    ebx,ecx
  41a1a8:	jmp    0x41a06b
  41a1ad:	nop    DWORD PTR [rax]
  41a1b0:	cmp    eax,0x2746
  41a1b5:	je     0x41a363
  41a1bb:	jg     0x41a350
  41a1c1:	call   QWORD PTR [rip+0x822ad]        # 0x49c474
  41a1c7:	mov    ebx,esi
  41a1c9:	mov    DWORD PTR [rax],0x6a
  41a1cf:	jmp    0x41a06b
  41a1d4:	cmp    eax,0x273d
  41a1d9:	je     0x41a2a2
  41a1df:	cmp    eax,0x273f
  41a1e4:	je     0x41a28f
  41a1ea:	cmp    eax,0x273b
  41a1ef:	je     0x41a374
  41a1f5:	call   QWORD PTR [rip+0x82279]        # 0x49c474
  41a1fb:	lea    ecx,[rdi-0x2711]
  41a201:	lea    edx,[rdi-0x2710]
  41a207:	mov    ebx,esi
  41a209:	cmp    ecx,0x17
  41a20c:	cmovbe edi,edx
  41a20f:	mov    DWORD PTR [rax],edi
  41a211:	jmp    0x41a06b
  41a216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a220:	cmp    eax,0x2751
  41a225:	je     0x41a3f3
  41a22b:	cmp    eax,0x2752
  41a230:	je     0x41a3e0
  41a236:	cmp    eax,0x274f
  41a23b:	jne    0x41a1f5
  41a23d:	call   QWORD PTR [rip+0x82231]        # 0x49c474
  41a243:	mov    ebx,esi
  41a245:	mov    DWORD PTR [rax],0x26
  41a24b:	jmp    0x41a06b
  41a250:	cmp    eax,0x6
  41a253:	je     0x41a27e
  41a255:	cmp    eax,0x8
  41a258:	jne    0x41a1f5
  41a25a:	call   QWORD PTR [rip+0x82214]        # 0x49c474
  41a260:	mov    ebx,esi
  41a262:	mov    DWORD PTR [rax],0xc
  41a268:	jmp    0x41a06b
  41a26d:	call   QWORD PTR [rip+0x82201]        # 0x49c474
  41a273:	mov    DWORD PTR [rax],0x16
  41a279:	jmp    0x41a06b
  41a27e:	call   QWORD PTR [rip+0x821f0]        # 0x49c474
  41a284:	mov    DWORD PTR [rax],0x9
  41a28a:	jmp    0x41a06b
  41a28f:	call   QWORD PTR [rip+0x821df]        # 0x49c474
  41a295:	mov    ebx,esi
  41a297:	mov    DWORD PTR [rax],0x66
  41a29d:	jmp    0x41a06b
  41a2a2:	call   QWORD PTR [rip+0x821cc]        # 0x49c474
  41a2a8:	mov    DWORD PTR [rax],0x82
  41a2ae:	jmp    0x41a06b
  41a2b3:	call   QWORD PTR [rip+0x821bb]        # 0x49c474
  41a2b9:	mov    ebx,esi
  41a2bb:	mov    DWORD PTR [rax],0x76
  41a2c1:	jmp    0x41a06b
  41a2c6:	call   QWORD PTR [rip+0x821a8]        # 0x49c474
  41a2cc:	mov    DWORD PTR [rax],0x74
  41a2d2:	jmp    0x41a06b
  41a2d7:	call   QWORD PTR [rip+0x82197]        # 0x49c474
  41a2dd:	mov    DWORD PTR [rax],0x75
  41a2e3:	jmp    0x41a06b
  41a2e8:	call   QWORD PTR [rip+0x82186]        # 0x49c474
  41a2ee:	mov    DWORD PTR [rax],0x7b
  41a2f4:	jmp    0x41a06b
  41a2f9:	call   QWORD PTR [rip+0x82175]        # 0x49c474
  41a2ff:	mov    DWORD PTR [rax],0x80
  41a305:	jmp    0x41a06b
  41a30a:	call   QWORD PTR [rip+0x82164]        # 0x49c474
  41a310:	mov    DWORD PTR [rax],0x71
  41a316:	jmp    0x41a06b
  41a31b:	call   QWORD PTR [rip+0x82153]        # 0x49c474
  41a321:	mov    DWORD PTR [rax],0x64
  41a327:	jmp    0x41a06b
  41a32c:	call   QWORD PTR [rip+0x82142]        # 0x49c474
  41a332:	mov    ebx,esi
  41a334:	mov    DWORD PTR [rax],0x88
  41a33a:	jmp    0x41a06b
  41a33f:	call   QWORD PTR [rip+0x8212f]        # 0x49c474
  41a345:	mov    DWORD PTR [rax],0x73
  41a34b:	jmp    0x41a06b
  41a350:	call   QWORD PTR [rip+0x8211e]        # 0x49c474
  41a356:	mov    ebx,esi
  41a358:	mov    DWORD PTR [rax],0x77
  41a35e:	jmp    0x41a06b
  41a363:	call   QWORD PTR [rip+0x8210b]        # 0x49c474
  41a369:	mov    DWORD PTR [rax],0x6c
  41a36f:	jmp    0x41a06b
  41a374:	call   QWORD PTR [rip+0x820fa]        # 0x49c474
  41a37a:	mov    ebx,esi
  41a37c:	mov    DWORD PTR [rax],0x87
  41a382:	jmp    0x41a06b
  41a387:	call   QWORD PTR [rip+0x820e7]        # 0x49c474
  41a38d:	mov    DWORD PTR [rax],0x72
  41a393:	jmp    0x41a06b
  41a398:	call   QWORD PTR [rip+0x820d6]        # 0x49c474
  41a39e:	mov    ebx,esi
  41a3a0:	mov    DWORD PTR [rax],0x6b
  41a3a6:	jmp    0x41a06b
  41a3ab:	call   QWORD PTR [rip+0x820c3]        # 0x49c474
  41a3b1:	mov    DWORD PTR [rax],0x8a
  41a3b7:	jmp    0x41a06b
  41a3bc:	call   QWORD PTR [rip+0x820b2]        # 0x49c474
  41a3c2:	mov    ebx,esi
  41a3c4:	mov    DWORD PTR [rax],0x67
  41a3ca:	jmp    0x41a06b
  41a3cf:	call   QWORD PTR [rip+0x8209f]        # 0x49c474
  41a3d5:	mov    DWORD PTR [rax],0x70
  41a3db:	jmp    0x41a06b
  41a3e0:	call   QWORD PTR [rip+0x8208e]        # 0x49c474
  41a3e6:	mov    ebx,esi
  41a3e8:	mov    DWORD PTR [rax],0x29
  41a3ee:	jmp    0x41a06b
  41a3f3:	call   QWORD PTR [rip+0x8207b]        # 0x49c474
  41a3f9:	mov    DWORD PTR [rax],0x6e
  41a3ff:	jmp    0x41a06b
  41a404:	nop
  41a405:	nop
  41a406:	nop
  41a407:	nop
  41a408:	nop
  41a409:	nop
  41a40a:	nop
  41a40b:	nop
  41a40c:	nop
  41a40d:	nop
  41a40e:	nop
  41a40f:	nop
  41a410:	push   rsi
  41a411:	push   rbx
  41a412:	sub    rsp,0x48
  41a416:	mov    ebx,ecx
  41a418:	mov    esi,edx
  41a41a:	mov    ecx,0x101
  41a41f:	mov    DWORD PTR [rsp+0x3c],r8d
  41a424:	call   0x41b6f0
  41a429:	xor    r9d,r9d
  41a42c:	mov    DWORD PTR [rsp+0x28],0x0
  41a434:	mov    DWORD PTR [rsp+0x20],0x0
  41a43c:	mov    r8d,DWORD PTR [rsp+0x3c]
  41a441:	mov    edx,esi
  41a443:	mov    ecx,ebx
  41a445:	call   QWORD PTR [rip+0x82341]        # 0x49c78c
  41a44b:	cmp    rax,0xffffffffffffffff
  41a44f:	je     0x41a470
  41a451:	mov    rcx,rax
  41a454:	mov    rax,QWORD PTR [rip+0x82091]        # 0x49c4ec
  41a45b:	mov    edx,0x8002
  41a460:	add    rsp,0x48
  41a464:	pop    rbx
  41a465:	pop    rsi
  41a466:	rex.W jmp rax
  41a469:	nop    DWORD PTR [rax+0x0]
  41a470:	call   QWORD PTR [rip+0x82306]        # 0x49c77c
  41a476:	cmp    eax,0x2740
  41a47b:	mov    ebx,eax
  41a47d:	je     0x41a73e
  41a483:	jg     0x41a4d0
  41a485:	cmp    eax,0x2736
  41a48a:	je     0x41a6d8
  41a490:	jle    0x41a54b
  41a496:	cmp    eax,0x273a
  41a49b:	je     0x41a683
  41a4a1:	jg     0x41a5a5
  41a4a7:	cmp    eax,0x2738
  41a4ac:	je     0x41a760
  41a4b2:	jg     0x41a74f
  41a4b8:	call   QWORD PTR [rip+0x81fb6]        # 0x49c474
  41a4be:	mov    DWORD PTR [rax],0x6d
  41a4c4:	mov    eax,0xffffffff
  41a4c9:	add    rsp,0x48
  41a4cd:	pop    rbx
  41a4ce:	pop    rsi
  41a4cf:	ret    
  41a4d0:	cmp    eax,0x2748
  41a4d5:	je     0x41a72d
  41a4db:	jg     0x41a50d
  41a4dd:	cmp    eax,0x2744
  41a4e2:	je     0x41a672
  41a4e8:	jg     0x41a583
  41a4ee:	cmp    eax,0x2742
  41a4f3:	je     0x41a661
  41a4f9:	jg     0x41a650
  41a4ff:	call   QWORD PTR [rip+0x81f6f]        # 0x49c474
  41a505:	mov    DWORD PTR [rax],0x65
  41a50b:	jmp    0x41a4c4
  41a50d:	cmp    eax,0x274e
  41a512:	je     0x41a6c7
  41a518:	jg     0x41a5e5
  41a51e:	cmp    eax,0x274c
  41a523:	je     0x41a6fa
  41a529:	jg     0x41a6e9
  41a52f:	cmp    eax,0x2749
  41a534:	jne    0x41a5c6
  41a53a:	call   QWORD PTR [rip+0x81f34]        # 0x49c474
  41a540:	mov    DWORD PTR [rax],0x7e
  41a546:	jmp    0x41a4c4
  41a54b:	cmp    eax,0x57
  41a54e:	je     0x41a62e
  41a554:	jle    0x41a613
  41a55a:	cmp    eax,0x2734
  41a55f:	je     0x41a782
  41a565:	jg     0x41a771
  41a56b:	cmp    eax,0x2733
  41a570:	jne    0x41a5c6
  41a572:	call   QWORD PTR [rip+0x81efc]        # 0x49c474
  41a578:	mov    DWORD PTR [rax],0x8c
  41a57e:	jmp    0x41a4c4
  41a583:	cmp    eax,0x2746
  41a588:	je     0x41a71c
  41a58e:	jg     0x41a70b
  41a594:	call   QWORD PTR [rip+0x81eda]        # 0x49c474
  41a59a:	mov    DWORD PTR [rax],0x6a
  41a5a0:	jmp    0x41a4c4
  41a5a5:	cmp    eax,0x273d
  41a5aa:	je     0x41a6a5
  41a5b0:	cmp    eax,0x273f
  41a5b5:	je     0x41a694
  41a5bb:	cmp    eax,0x273b
  41a5c0:	je     0x41a6b6
  41a5c6:	call   QWORD PTR [rip+0x81ea8]        # 0x49c474
  41a5cc:	lea    ecx,[rbx-0x2711]
  41a5d2:	lea    edx,[rbx-0x2710]
  41a5d8:	cmp    ecx,0x17
  41a5db:	cmovbe ebx,edx
  41a5de:	mov    DWORD PTR [rax],ebx
  41a5e0:	jmp    0x41a4c4
  41a5e5:	cmp    eax,0x2751
  41a5ea:	je     0x41a7a4
  41a5f0:	cmp    eax,0x2752
  41a5f5:	je     0x41a793
  41a5fb:	cmp    eax,0x274f
  41a600:	jne    0x41a5c6
  41a602:	call   QWORD PTR [rip+0x81e6c]        # 0x49c474
  41a608:	mov    DWORD PTR [rax],0x26
  41a60e:	jmp    0x41a4c4
  41a613:	cmp    eax,0x6
  41a616:	je     0x41a63f
  41a618:	cmp    eax,0x8
  41a61b:	jne    0x41a5c6
  41a61d:	call   QWORD PTR [rip+0x81e51]        # 0x49c474
  41a623:	mov    DWORD PTR [rax],0xc
  41a629:	jmp    0x41a4c4
  41a62e:	call   QWORD PTR [rip+0x81e40]        # 0x49c474
  41a634:	mov    DWORD PTR [rax],0x16
  41a63a:	jmp    0x41a4c4
  41a63f:	call   QWORD PTR [rip+0x81e2f]        # 0x49c474
  41a645:	mov    DWORD PTR [rax],0x9
  41a64b:	jmp    0x41a4c4
  41a650:	call   QWORD PTR [rip+0x81e1e]        # 0x49c474
  41a656:	mov    DWORD PTR [rax],0x76
  41a65c:	jmp    0x41a4c4
  41a661:	call   QWORD PTR [rip+0x81e0d]        # 0x49c474
  41a667:	mov    DWORD PTR [rax],0x74
  41a66d:	jmp    0x41a4c4
  41a672:	call   QWORD PTR [rip+0x81dfc]        # 0x49c474
  41a678:	mov    DWORD PTR [rax],0x75
  41a67e:	jmp    0x41a4c4
  41a683:	call   QWORD PTR [rip+0x81deb]        # 0x49c474
  41a689:	mov    DWORD PTR [rax],0x7b
  41a68f:	jmp    0x41a4c4
  41a694:	call   QWORD PTR [rip+0x81dda]        # 0x49c474
  41a69a:	mov    DWORD PTR [rax],0x66
  41a6a0:	jmp    0x41a4c4
  41a6a5:	call   QWORD PTR [rip+0x81dc9]        # 0x49c474
  41a6ab:	mov    DWORD PTR [rax],0x82
  41a6b1:	jmp    0x41a4c4
  41a6b6:	call   QWORD PTR [rip+0x81db8]        # 0x49c474
  41a6bc:	mov    DWORD PTR [rax],0x87
  41a6c2:	jmp    0x41a4c4
  41a6c7:	call   QWORD PTR [rip+0x81da7]        # 0x49c474
  41a6cd:	mov    DWORD PTR [rax],0x72
  41a6d3:	jmp    0x41a4c4
  41a6d8:	call   QWORD PTR [rip+0x81d96]        # 0x49c474
  41a6de:	mov    DWORD PTR [rax],0x80
  41a6e4:	jmp    0x41a4c4
  41a6e9:	call   QWORD PTR [rip+0x81d85]        # 0x49c474
  41a6ef:	mov    DWORD PTR [rax],0x6b
  41a6f5:	jmp    0x41a4c4
  41a6fa:	call   QWORD PTR [rip+0x81d74]        # 0x49c474
  41a700:	mov    DWORD PTR [rax],0x8a
  41a706:	jmp    0x41a4c4
  41a70b:	call   QWORD PTR [rip+0x81d63]        # 0x49c474
  41a711:	mov    DWORD PTR [rax],0x77
  41a717:	jmp    0x41a4c4
  41a71c:	call   QWORD PTR [rip+0x81d52]        # 0x49c474
  41a722:	mov    DWORD PTR [rax],0x6c
  41a728:	jmp    0x41a4c4
  41a72d:	call   QWORD PTR [rip+0x81d41]        # 0x49c474
  41a733:	mov    DWORD PTR [rax],0x71
  41a739:	jmp    0x41a4c4
  41a73e:	call   QWORD PTR [rip+0x81d30]        # 0x49c474
  41a744:	mov    DWORD PTR [rax],0x64
  41a74a:	jmp    0x41a4c4
  41a74f:	call   QWORD PTR [rip+0x81d1f]        # 0x49c474
  41a755:	mov    DWORD PTR [rax],0x88
  41a75b:	jmp    0x41a4c4
  41a760:	call   QWORD PTR [rip+0x81d0e]        # 0x49c474
  41a766:	mov    DWORD PTR [rax],0x73
  41a76c:	jmp    0x41a4c4
  41a771:	call   QWORD PTR [rip+0x81cfd]        # 0x49c474
  41a777:	mov    DWORD PTR [rax],0x67
  41a77d:	jmp    0x41a4c4
  41a782:	call   QWORD PTR [rip+0x81cec]        # 0x49c474
  41a788:	mov    DWORD PTR [rax],0x70
  41a78e:	jmp    0x41a4c4
  41a793:	call   QWORD PTR [rip+0x81cdb]        # 0x49c474
  41a799:	mov    DWORD PTR [rax],0x29
  41a79f:	jmp    0x41a4c4
  41a7a4:	call   QWORD PTR [rip+0x81cca]        # 0x49c474
  41a7aa:	mov    DWORD PTR [rax],0x6e
  41a7b0:	jmp    0x41a4c4
  41a7b5:	nop
  41a7b6:	nop
  41a7b7:	nop
  41a7b8:	nop
  41a7b9:	nop
  41a7ba:	nop
  41a7bb:	nop
  41a7bc:	nop
  41a7bd:	nop
  41a7be:	nop
  41a7bf:	nop
  41a7c0:	push   rsi
  41a7c1:	push   rbx
  41a7c2:	sub    rsp,0x28
  41a7c6:	mov    rsi,rcx
  41a7c9:	call   0x422468
  41a7ce:	lea    rbx,[rax+0x1]
  41a7d2:	mov    rcx,rbx
  41a7d5:	call   0x414e40
  41a7da:	test   rax,rax
  41a7dd:	je     0x41a7f3
  41a7df:	mov    r8,rbx
  41a7e2:	mov    rdx,rsi
  41a7e5:	mov    rcx,rax
  41a7e8:	add    rsp,0x28
  41a7ec:	pop    rbx
  41a7ed:	pop    rsi
  41a7ee:	jmp    0x4224d8
  41a7f3:	xor    eax,eax
  41a7f5:	add    rsp,0x28
  41a7f9:	pop    rbx
  41a7fa:	pop    rsi
  41a7fb:	ret    
  41a7fc:	nop
  41a7fd:	nop
  41a7fe:	nop
  41a7ff:	nop
  41a800:	sub    rsp,0x38
  41a804:	lea    rdx,[rip+0x16b45]        # 0x431350
  41a80b:	lea    rcx,[rip+0x4e56e]        # 0x468d80
  41a812:	mov    QWORD PTR [rsp+0x50],r8
  41a817:	lea    r8,[rsp+0x50]
  41a81c:	mov    QWORD PTR [rsp+0x58],r9
  41a821:	mov    QWORD PTR [rsp+0x28],r8
  41a826:	call   0x41da70
  41a82b:	add    rsp,0x38
  41a82f:	ret    
  41a830:	push   rdi
  41a831:	push   rsi
  41a832:	push   rbx
  41a833:	sub    rsp,0x20
  41a837:	mov    ebx,ecx
  41a839:	call   0x41a920
  41a83e:	test   rax,rax
  41a841:	je     0x41a850
  41a843:	add    rsp,0x20
  41a847:	pop    rbx
  41a848:	pop    rsi
  41a849:	pop    rdi
  41a84a:	ret    
  41a84b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a850:	mov    ecx,ebx
  41a852:	call   0x422478
  41a857:	test   rax,rax
  41a85a:	mov    rsi,rax
  41a85d:	je     0x41a8e0
  41a863:	cmp    BYTE PTR [rax],0x0
  41a866:	je     0x41a8e0
  41a868:	mov    rcx,rax
  41a86b:	call   0x422468
  41a870:	cmp    rax,0xff
  41a876:	ja     0x41a90e
  41a87c:	add    rax,0x1
  41a880:	lea    rdi,[rip+0x4e4f9]        # 0x468d80
  41a887:	cmp    eax,0x8
  41a88a:	jae    0x41a8d0
  41a88c:	xor    edx,edx
  41a88e:	test   al,0x4
  41a890:	jne    0x41a8c0
  41a892:	test   al,0x2
  41a894:	jne    0x41a8b0
  41a896:	test   al,0x1
  41a898:	jne    0x41a8a3
  41a89a:	lea    rax,[rip+0x4e4df]        # 0x468d80
  41a8a1:	jmp    0x41a843
  41a8a3:	movzx  eax,BYTE PTR [rsi+rdx*1]
  41a8a7:	mov    BYTE PTR [rdi+rdx*1],al
  41a8aa:	jmp    0x41a89a
  41a8ac:	nop    DWORD PTR [rax+0x0]
  41a8b0:	movzx  ecx,WORD PTR [rsi+rdx*1]
  41a8b4:	mov    WORD PTR [rdi+rdx*1],cx
  41a8b8:	add    rdx,0x2
  41a8bc:	jmp    0x41a896
  41a8be:	xchg   ax,ax
  41a8c0:	mov    edx,DWORD PTR [rsi]
  41a8c2:	mov    DWORD PTR [rdi],edx
  41a8c4:	mov    edx,0x4
  41a8c9:	jmp    0x41a892
  41a8cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8d0:	mov    ecx,eax
  41a8d2:	shr    ecx,0x3
  41a8d5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a8d8:	jmp    0x41a88c
  41a8da:	nop    WORD PTR [rax+rax*1+0x0]
  41a8e0:	lea    rdx,[rip+0x16a69]        # 0x431350
  41a8e7:	lea    rcx,[rip+0x4e492]        # 0x468d80
  41a8ee:	mov    r8d,ebx
  41a8f1:	call   0x41a800
  41a8f6:	call   QWORD PTR [rip+0x81b78]        # 0x49c474
  41a8fc:	mov    DWORD PTR [rax],0x16
  41a902:	lea    rax,[rip+0x4e477]        # 0x468d80
  41a909:	jmp    0x41a843
  41a90e:	call   0x4225a0
  41a913:	nop
  41a914:	nop
  41a915:	nop
  41a916:	nop
  41a917:	nop
  41a918:	nop
  41a919:	nop
  41a91a:	nop
  41a91b:	nop
  41a91c:	nop
  41a91d:	nop
  41a91e:	nop
  41a91f:	nop
  41a920:	cmp    ecx,0x2754
  41a926:	je     0x41acd0
  41a92c:	jg     0x41a982
  41a92e:	cmp    ecx,0x89
  41a934:	je     0x41acb0
  41a93a:	jg     0x41a9e3
  41a940:	cmp    ecx,0x79
  41a943:	je     0x41ace0
  41a949:	jle    0x41ab11
  41a94f:	cmp    ecx,0x7d
  41a952:	lea    rax,[rip+0x16a59]        # 0x4313b2
  41a959:	je     0x41a980
  41a95b:	jle    0x41ac20
  41a961:	cmp    ecx,0x7f
  41a964:	lea    rax,[rip+0x16e45]        # 0x4317b0
  41a96b:	je     0x41a980
  41a96d:	cmp    ecx,0x83
  41a973:	lea    rax,[rip+0x16a5a]        # 0x4313d4
  41a97a:	jne    0x41a9e0
  41a97c:	nop    DWORD PTR [rax+0x0]
  41a980:	repz ret 
  41a982:	cmp    ecx,0x2779
  41a988:	je     0x41acc0
  41a98e:	jg     0x41aa32
  41a994:	cmp    ecx,0x276c
  41a99a:	je     0x41aca1
  41a9a0:	jg     0x41ab50
  41a9a6:	cmp    ecx,0x2756
  41a9ac:	lea    rax,[rip+0x16afb]        # 0x4314ae
  41a9b3:	je     0x41a980
  41a9b5:	lea    rax,[rip+0x16ade]        # 0x43149a
  41a9bc:	jl     0x41a980
  41a9be:	cmp    ecx,0x2757
  41a9c4:	lea    rax,[rip+0x16af9]        # 0x4314c4
  41a9cb:	je     0x41a980
  41a9cd:	cmp    ecx,0x276b
  41a9d3:	lea    rax,[rip+0x16b86]        # 0x431560
  41a9da:	je     0x41a980
  41a9dc:	nop    DWORD PTR [rax+0x0]
  41a9e0:	xor    eax,eax
  41a9e2:	ret    
  41a9e3:	cmp    ecx,0x273c
  41a9e9:	je     0x41ad00
  41a9ef:	jle    0x41aa85
  41a9f5:	cmp    ecx,0x274b
  41a9fb:	lea    rax,[rip+0x16a46]        # 0x431448
  41aa02:	je     0x41a980
  41aa08:	jle    0x41ab90
  41aa0e:	cmp    ecx,0x2750
  41aa14:	lea    rax,[rip+0x16a50]        # 0x43146b
  41aa1b:	je     0x41a980
  41aa21:	cmp    ecx,0x2753
  41aa27:	lea    rax,[rip+0x16a4a]        # 0x431478
  41aa2e:	jne    0x41a9e0
  41aa30:	repz ret 
  41aa32:	cmp    ecx,0x277f
  41aa38:	je     0x41acf0
  41aa3e:	jle    0x41aad0
  41aa44:	cmp    ecx,0x2afa
  41aa4a:	lea    rax,[rip+0x16c97]        # 0x4316e8
  41aa51:	je     0x41a980
  41aa57:	jle    0x41abf0
  41aa5d:	cmp    ecx,0x2afb
  41aa63:	lea    rax,[rip+0x16c9e]        # 0x431708
  41aa6a:	je     0x41a980
  41aa70:	cmp    ecx,0x2afc
  41aa76:	lea    rax,[rip+0x16ca3]        # 0x431720
  41aa7d:	jne    0x41a9e0
  41aa83:	repz ret 
  41aa85:	cmp    ecx,0x3e4
  41aa8b:	lea    rax,[rip+0x16a66]        # 0x4314f8
  41aa92:	je     0x41a980
  41aa98:	jle    0x41abc0
  41aa9e:	cmp    ecx,0x3e5
  41aaa4:	lea    rax,[rip+0x16a85]        # 0x431530
  41aaab:	je     0x41a980
  41aab1:	cmp    ecx,0x7d4
  41aab7:	lea    rax,[rip+0x16cd3]        # 0x431791
  41aabe:	jne    0x41a9e0
  41aac4:	repz ret 
  41aac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aad0:	cmp    ecx,0x277c
  41aad6:	lea    rax,[rip+0x16bb5]        # 0x431692
  41aadd:	je     0x41a980
  41aae3:	jg     0x41ac63
  41aae9:	cmp    ecx,0x277a
  41aaef:	lea    rax,[rip+0x16b62]        # 0x431658
  41aaf6:	je     0x41a980
  41aafc:	cmp    ecx,0x277b
  41ab02:	lea    rax,[rip+0x16b75]        # 0x43167e
  41ab09:	jne    0x41a9e0
  41ab0f:	repz ret 
  41ab11:	cmp    ecx,0x68
  41ab14:	lea    rax,[rip+0x16c89]        # 0x4317a4
  41ab1b:	je     0x41a980
  41ab21:	jle    0x41ac90
  41ab27:	cmp    ecx,0x6f
  41ab2a:	lea    rax,[rip+0x16c37]        # 0x431768
  41ab31:	je     0x41a980
  41ab37:	cmp    ecx,0x78
  41ab3a:	lea    rax,[rip+0x16846]        # 0x431387
  41ab41:	jne    0x41a9e0
  41ab47:	repz ret 
  41ab49:	nop    DWORD PTR [rax+0x0]
  41ab50:	cmp    ecx,0x2776
  41ab56:	je     0x41ac82
  41ab5c:	jg     0x41ac42
  41ab62:	cmp    ecx,0x276d
  41ab68:	lea    rax,[rip+0x16a41]        # 0x4315b0
  41ab6f:	je     0x41a980
  41ab75:	cmp    ecx,0x2775
  41ab7b:	lea    rax,[rip+0x16a56]        # 0x4315d8
  41ab82:	jne    0x41a9e0
  41ab88:	repz ret 
  41ab8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ab90:	cmp    ecx,0x273e
  41ab96:	lea    rax,[rip+0x1685d]        # 0x4313fa
  41ab9d:	je     0x41a980
  41aba3:	cmp    ecx,0x274a
  41aba9:	lea    rax,[rip+0x16868]        # 0x431418
  41abb0:	jne    0x41a9e0
  41abb6:	repz ret 
  41abb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41abc0:	cmp    ecx,0x8b
  41abc6:	lea    rax,[rip+0x167ab]        # 0x431378
  41abcd:	je     0x41a980
  41abd3:	cmp    ecx,0x3e3
  41abd9:	lea    rax,[rip+0x168f5]        # 0x4314d5
  41abe0:	jne    0x41a9e0
  41abe6:	repz ret 
  41abe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41abf0:	cmp    ecx,0x2780
  41abf6:	lea    rax,[rip+0x16abc]        # 0x4316b9
  41abfd:	je     0x41a980
  41ac03:	cmp    ecx,0x2af9
  41ac09:	lea    rax,[rip+0x16ac4]        # 0x4316d4
  41ac10:	jne    0x41a9e0
  41ac16:	repz ret 
  41ac18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac20:	cmp    ecx,0x7a
  41ac23:	lea    rax,[rip+0x16b23]        # 0x43174d
  41ac2a:	je     0x41a980
  41ac30:	cmp    ecx,0x7c
  41ac33:	lea    rax,[rip+0x1675f]        # 0x431399
  41ac3a:	jne    0x41a9e0
  41ac40:	repz ret 
  41ac42:	cmp    ecx,0x2777
  41ac48:	je     0x41acf0
  41ac4e:	cmp    ecx,0x2778
  41ac54:	lea    rax,[rip+0x169bd]        # 0x431618
  41ac5b:	jne    0x41a9e0
  41ac61:	repz ret 
  41ac63:	cmp    ecx,0x277d
  41ac69:	lea    rax,[rip+0x16a34]        # 0x4316a4
  41ac70:	je     0x41a980
  41ac76:	cmp    ecx,0x277e
  41ac7c:	jne    0x41a9e0
  41ac82:	lea    rax,[rip+0x1696d]        # 0x4315f6
  41ac89:	ret    
  41ac8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ac90:	test   ecx,ecx
  41ac92:	lea    rax,[rip+0x166d7]        # 0x431370
  41ac99:	jne    0x41a9e0
  41ac9f:	repz ret 
  41aca1:	lea    rax,[rip+0x168e0]        # 0x431588
  41aca8:	ret    
  41aca9:	nop    DWORD PTR [rax+0x0]
  41acb0:	lea    rax,[rip+0x1670f]        # 0x4313c6
  41acb7:	ret    
  41acb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acc0:	lea    rax,[rip+0x16971]        # 0x431638
  41acc7:	ret    
  41acc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acd0:	lea    rax,[rip+0x167b4]        # 0x43148b
  41acd7:	ret    
  41acd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ace0:	lea    rax,[rip+0x16a94]        # 0x43177b
  41ace7:	ret    
  41ace8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acf0:	lea    rax,[rip+0x1690f]        # 0x431606
  41acf7:	ret    
  41acf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad00:	lea    rax,[rip+0x166d9]        # 0x4313e0
  41ad07:	ret    
  41ad08:	nop
  41ad09:	nop
  41ad0a:	nop
  41ad0b:	nop
  41ad0c:	nop
  41ad0d:	nop
  41ad0e:	nop
  41ad0f:	nop
  41ad10:	lea    r9,[rip+0xd789]        # 0x4284a0
  41ad17:	cmp    rcx,r9
  41ad1a:	je     0x41ad30
  41ad1c:	mov    r9,QWORD PTR [rcx+0x10]
  41ad20:	mov    rcx,QWORD PTR [rcx]
  41ad23:	rex.WB jmp r9
  41ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad30:	mov    ecx,r8d
  41ad33:	rex.W jmp rdx
  41ad36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad40:	lea    r10,[rip+0xd759]        # 0x4284a0
  41ad47:	mov    rax,rcx
  41ad4a:	mov    r11,rdx
  41ad4d:	mov    ecx,r8d
  41ad50:	cmp    rax,r10
  41ad53:	mov    r8,QWORD PTR [rsp+0x28]
  41ad58:	je     0x41ad70
  41ad5a:	mov    QWORD PTR [rsp+0x28],r8
  41ad5f:	mov    r8d,ecx
  41ad62:	mov    r10,QWORD PTR [rax+0x18]
  41ad66:	mov    rcx,QWORD PTR [rax]
  41ad69:	rex.WB jmp r10
  41ad6c:	nop    DWORD PTR [rax+0x0]
  41ad70:	mov    edx,r9d
  41ad73:	rex.WB jmp r11
  41ad76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad80:	mov    r8d,edx
  41ad83:	mov    rdx,rcx
  41ad86:	mov    rcx,QWORD PTR [rip+0xd713]        # 0x4284a0
  41ad8d:	jmp    0x41ad10
  41ad8f:	nop
  41ad90:	sub    rsp,0x38
  41ad94:	mov    QWORD PTR [rsp+0x20],r9
  41ad99:	mov    r9d,r8d
  41ad9c:	mov    r8d,edx
  41ad9f:	mov    rdx,rcx
  41ada2:	mov    rcx,QWORD PTR [rip+0xd6f7]        # 0x4284a0
  41ada9:	call   0x41ad40
  41adae:	add    rsp,0x38
  41adb2:	ret    
  41adb3:	nop    DWORD PTR [rax]
  41adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41adc0:	sub    rsp,0x28
  41adc4:	lea    rax,[rip+0xffffffffffffff45]        # 0x41ad10
  41adcb:	test   rcx,rcx
  41adce:	cmove  rcx,rax
  41add2:	lea    rax,[rip+0xffffffffffffff67]        # 0x41ad40
  41add9:	test   rdx,rdx
  41addc:	cmove  rdx,rax
  41ade0:	cmp    QWORD PTR [r8],0x0
  41ade4:	je     0x41ae00
  41ade6:	cmp    QWORD PTR [r8+0x10],rcx
  41adea:	jne    0x41ae38
  41adec:	cmp    QWORD PTR [r8+0x18],rdx
  41adf0:	jne    0x41ae38
  41adf2:	add    rsp,0x28
  41adf6:	ret    
  41adf7:	nop    WORD PTR [rax+rax*1+0x0]
  41ae00:	cmp    QWORD PTR [r8+0x8],0x0
  41ae05:	jne    0x41ade6
  41ae07:	mov    rax,QWORD PTR [rip+0xd692]        # 0x4284a0
  41ae0e:	mov    QWORD PTR [r8+0x10],rcx
  41ae12:	mov    QWORD PTR [r8+0x18],rdx
  41ae16:	mov    QWORD PTR [r8],rax
  41ae19:	lea    rax,[rip+0xd680]        # 0x4284a0
  41ae20:	mov    QWORD PTR [r8+0x8],rax
  41ae24:	mov    rax,QWORD PTR [rip+0xd675]        # 0x4284a0
  41ae2b:	mov    QWORD PTR [rip+0xd66e],r8        # 0x4284a0
  41ae32:	mov    QWORD PTR [rax+0x8],r8
  41ae36:	jmp    0x41adf2
  41ae38:	call   0x4225a0
  41ae3d:	nop
  41ae3e:	xchg   ax,ax
  41ae40:	mov    rax,QWORD PTR [rcx+0x8]
  41ae44:	mov    rdx,QWORD PTR [rcx]
  41ae47:	test   rax,rax
  41ae4a:	je     0x41ae77
  41ae4c:	test   rdx,rdx
  41ae4f:	je     0x41ae77
  41ae51:	mov    QWORD PTR [rax],rdx
  41ae54:	mov    QWORD PTR [rdx+0x8],rax
  41ae58:	mov    QWORD PTR [rcx],0x0
  41ae5f:	mov    QWORD PTR [rcx+0x8],0x0
  41ae67:	mov    QWORD PTR [rcx+0x10],0x0
  41ae6f:	mov    QWORD PTR [rcx+0x18],0x0
  41ae77:	repz ret 
  41ae79:	nop
  41ae7a:	nop
  41ae7b:	nop
  41ae7c:	nop
  41ae7d:	nop
  41ae7e:	nop
  41ae7f:	nop
  41ae80:	push   r12
  41ae82:	push   rbp
  41ae83:	push   rdi
  41ae84:	push   rsi
  41ae85:	push   rbx
  41ae86:	sub    rsp,0x60
  41ae8a:	mov    rbp,rcx
  41ae8d:	mov    ecx,r8d
  41ae90:	mov    r12,rdx
  41ae93:	mov    esi,r8d
  41ae96:	mov    edi,r9d
  41ae99:	call   0x4187b0
  41ae9e:	xor    edx,edx
  41aea0:	mov    rbx,rax
  41aea3:	mov    DWORD PTR [rsp+0x30],0xdeadbeef
  41aeab:	lea    r8,[rsp+0x30]
  41aeb0:	mov    rcx,rax
  41aeb3:	call   QWORD PTR [rip+0x818b3]        # 0x49c76c
  41aeb9:	cmp    DWORD PTR [rsp+0x30],0xdeadbeef
  41aec1:	je     0x41aef0
  41aec3:	mov    r8,QWORD PTR [rsp+0xb0]
  41aecb:	mov    edx,edi
  41aecd:	mov    rcx,rbx
  41aed0:	call   QWORD PTR [rip+0x8190e]        # 0x49c7e4
  41aed6:	test   eax,eax
  41aed8:	js     0x41af19
  41aeda:	xor    eax,eax
  41aedc:	add    rsp,0x60
  41aee0:	pop    rbx
  41aee1:	pop    rsi
  41aee2:	pop    rdi
  41aee3:	pop    rbp
  41aee4:	pop    r12
  41aee6:	ret    
  41aee7:	nop    WORD PTR [rax+rax*1+0x0]
  41aef0:	mov    rax,QWORD PTR [rsp+0xb0]
  41aef8:	mov    r9d,edi
  41aefb:	mov    r8d,esi
  41aefe:	mov    rdx,r12
  41af01:	mov    rcx,rbp
  41af04:	mov    QWORD PTR [rsp+0x20],rax
  41af09:	call   0x41ad40
  41af0e:	add    rsp,0x60
  41af12:	pop    rbx
  41af13:	pop    rsi
  41af14:	pop    rdi
  41af15:	pop    rbp
  41af16:	pop    r12
  41af18:	ret    
  41af19:	call   QWORD PTR [rip+0x8185d]        # 0x49c77c
  41af1f:	cmp    eax,0x2740
  41af24:	mov    ebx,eax
  41af26:	je     0x41b233
  41af2c:	jg     0x41af75
  41af2e:	cmp    eax,0x2736
  41af33:	je     0x41b1bb
  41af39:	jle    0x41b001
  41af3f:	cmp    eax,0x273a
  41af44:	je     0x41b157
  41af4a:	jg     0x41b061
  41af50:	cmp    eax,0x2738
  41af55:	je     0x41b25b
  41af5b:	jg     0x41b247
  41af61:	call   QWORD PTR [rip+0x8150d]        # 0x49c474
  41af67:	mov    DWORD PTR [rax],0x6d
  41af6d:	or     eax,0xffffffff
  41af70:	jmp    0x41aedc
  41af75:	cmp    eax,0x2748
  41af7a:	je     0x41b21f
  41af80:	jg     0x41afc0
  41af82:	cmp    eax,0x2744
  41af87:	je     0x41b143
  41af8d:	jg     0x41b03c
  41af93:	cmp    eax,0x2742
  41af98:	je     0x41b12f
  41af9e:	jg     0x41b11b
  41afa4:	call   QWORD PTR [rip+0x814ca]        # 0x49c474
  41afaa:	mov    DWORD PTR [rax],0x65
  41afb0:	or     eax,0xffffffff
  41afb3:	jmp    0x41aedc
  41afb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41afc0:	cmp    eax,0x274e
  41afc5:	je     0x41b1a7
  41afcb:	jg     0x41b0a4
  41afd1:	cmp    eax,0x274c
  41afd6:	je     0x41b1e3
  41afdc:	jg     0x41b1cf
  41afe2:	cmp    eax,0x2749
  41afe7:	jne    0x41b082
  41afed:	call   QWORD PTR [rip+0x81481]        # 0x49c474
  41aff3:	mov    DWORD PTR [rax],0x7e
  41aff9:	or     eax,0xffffffff
  41affc:	jmp    0x41aedc
  41b001:	cmp    eax,0x57
  41b004:	je     0x41b0f3
  41b00a:	jle    0x41b0d5
  41b010:	cmp    eax,0x2734
  41b015:	je     0x41b283
  41b01b:	jg     0x41b26f
  41b021:	cmp    eax,0x2733
  41b026:	jne    0x41b082
  41b028:	call   QWORD PTR [rip+0x81446]        # 0x49c474
  41b02e:	mov    DWORD PTR [rax],0x8c
  41b034:	or     eax,0xffffffff
  41b037:	jmp    0x41aedc
  41b03c:	cmp    eax,0x2746
  41b041:	je     0x41b20b
  41b047:	jg     0x41b1f7
  41b04d:	call   QWORD PTR [rip+0x81421]        # 0x49c474
  41b053:	mov    DWORD PTR [rax],0x6a
  41b059:	or     eax,0xffffffff
  41b05c:	jmp    0x41aedc
  41b061:	cmp    eax,0x273d
  41b066:	je     0x41b17f
  41b06c:	cmp    eax,0x273f
  41b071:	je     0x41b16b
  41b077:	cmp    eax,0x273b
  41b07c:	je     0x41b193
  41b082:	call   QWORD PTR [rip+0x813ec]        # 0x49c474
  41b088:	lea    ecx,[rbx-0x2711]
  41b08e:	lea    edx,[rbx-0x2710]
  41b094:	cmp    ecx,0x17
  41b097:	cmovbe ebx,edx
  41b09a:	mov    DWORD PTR [rax],ebx
  41b09c:	or     eax,0xffffffff
  41b09f:	jmp    0x41aedc
  41b0a4:	cmp    eax,0x2751
  41b0a9:	je     0x41b2ab
  41b0af:	cmp    eax,0x2752
  41b0b4:	je     0x41b297
  41b0ba:	cmp    eax,0x274f
  41b0bf:	jne    0x41b082
  41b0c1:	call   QWORD PTR [rip+0x813ad]        # 0x49c474
  41b0c7:	mov    DWORD PTR [rax],0x26
  41b0cd:	or     eax,0xffffffff
  41b0d0:	jmp    0x41aedc
  41b0d5:	cmp    eax,0x6
  41b0d8:	je     0x41b107
  41b0da:	cmp    eax,0x8
  41b0dd:	jne    0x41b082
  41b0df:	call   QWORD PTR [rip+0x8138f]        # 0x49c474
  41b0e5:	mov    DWORD PTR [rax],0xc
  41b0eb:	or     eax,0xffffffff
  41b0ee:	jmp    0x41aedc
  41b0f3:	call   QWORD PTR [rip+0x8137b]        # 0x49c474
  41b0f9:	mov    DWORD PTR [rax],0x16
  41b0ff:	or     eax,0xffffffff
  41b102:	jmp    0x41aedc
  41b107:	call   QWORD PTR [rip+0x81367]        # 0x49c474
  41b10d:	mov    DWORD PTR [rax],0x9
  41b113:	or     eax,0xffffffff
  41b116:	jmp    0x41aedc
  41b11b:	call   QWORD PTR [rip+0x81353]        # 0x49c474
  41b121:	mov    DWORD PTR [rax],0x76
  41b127:	or     eax,0xffffffff
  41b12a:	jmp    0x41aedc
  41b12f:	call   QWORD PTR [rip+0x8133f]        # 0x49c474
  41b135:	mov    DWORD PTR [rax],0x74
  41b13b:	or     eax,0xffffffff
  41b13e:	jmp    0x41aedc
  41b143:	call   QWORD PTR [rip+0x8132b]        # 0x49c474
  41b149:	mov    DWORD PTR [rax],0x75
  41b14f:	or     eax,0xffffffff
  41b152:	jmp    0x41aedc
  41b157:	call   QWORD PTR [rip+0x81317]        # 0x49c474
  41b15d:	mov    DWORD PTR [rax],0x7b
  41b163:	or     eax,0xffffffff
  41b166:	jmp    0x41aedc
  41b16b:	call   QWORD PTR [rip+0x81303]        # 0x49c474
  41b171:	mov    DWORD PTR [rax],0x66
  41b177:	or     eax,0xffffffff
  41b17a:	jmp    0x41aedc
  41b17f:	call   QWORD PTR [rip+0x812ef]        # 0x49c474
  41b185:	mov    DWORD PTR [rax],0x82
  41b18b:	or     eax,0xffffffff
  41b18e:	jmp    0x41aedc
  41b193:	call   QWORD PTR [rip+0x812db]        # 0x49c474
  41b199:	mov    DWORD PTR [rax],0x87
  41b19f:	or     eax,0xffffffff
  41b1a2:	jmp    0x41aedc
  41b1a7:	call   QWORD PTR [rip+0x812c7]        # 0x49c474
  41b1ad:	mov    DWORD PTR [rax],0x72
  41b1b3:	or     eax,0xffffffff
  41b1b6:	jmp    0x41aedc
  41b1bb:	call   QWORD PTR [rip+0x812b3]        # 0x49c474
  41b1c1:	mov    DWORD PTR [rax],0x80
  41b1c7:	or     eax,0xffffffff
  41b1ca:	jmp    0x41aedc
  41b1cf:	call   QWORD PTR [rip+0x8129f]        # 0x49c474
  41b1d5:	mov    DWORD PTR [rax],0x6b
  41b1db:	or     eax,0xffffffff
  41b1de:	jmp    0x41aedc
  41b1e3:	call   QWORD PTR [rip+0x8128b]        # 0x49c474
  41b1e9:	mov    DWORD PTR [rax],0x8a
  41b1ef:	or     eax,0xffffffff
  41b1f2:	jmp    0x41aedc
  41b1f7:	call   QWORD PTR [rip+0x81277]        # 0x49c474
  41b1fd:	mov    DWORD PTR [rax],0x77
  41b203:	or     eax,0xffffffff
  41b206:	jmp    0x41aedc
  41b20b:	call   QWORD PTR [rip+0x81263]        # 0x49c474
  41b211:	mov    DWORD PTR [rax],0x6c
  41b217:	or     eax,0xffffffff
  41b21a:	jmp    0x41aedc
  41b21f:	call   QWORD PTR [rip+0x8124f]        # 0x49c474
  41b225:	mov    DWORD PTR [rax],0x71
  41b22b:	or     eax,0xffffffff
  41b22e:	jmp    0x41aedc
  41b233:	call   QWORD PTR [rip+0x8123b]        # 0x49c474
  41b239:	mov    DWORD PTR [rax],0x64
  41b23f:	or     eax,0xffffffff
  41b242:	jmp    0x41aedc
  41b247:	call   QWORD PTR [rip+0x81227]        # 0x49c474
  41b24d:	mov    DWORD PTR [rax],0x88
  41b253:	or     eax,0xffffffff
  41b256:	jmp    0x41aedc
  41b25b:	call   QWORD PTR [rip+0x81213]        # 0x49c474
  41b261:	mov    DWORD PTR [rax],0x73
  41b267:	or     eax,0xffffffff
  41b26a:	jmp    0x41aedc
  41b26f:	call   QWORD PTR [rip+0x811ff]        # 0x49c474
  41b275:	mov    DWORD PTR [rax],0x67
  41b27b:	or     eax,0xffffffff
  41b27e:	jmp    0x41aedc
  41b283:	call   QWORD PTR [rip+0x811eb]        # 0x49c474
  41b289:	mov    DWORD PTR [rax],0x70
  41b28f:	or     eax,0xffffffff
  41b292:	jmp    0x41aedc
  41b297:	call   QWORD PTR [rip+0x811d7]        # 0x49c474
  41b29d:	mov    DWORD PTR [rax],0x29
  41b2a3:	or     eax,0xffffffff
  41b2a6:	jmp    0x41aedc
  41b2ab:	call   QWORD PTR [rip+0x811c3]        # 0x49c474
  41b2b1:	mov    DWORD PTR [rax],0x6e
  41b2b7:	or     eax,0xffffffff
  41b2ba:	jmp    0x41aedc
  41b2bf:	nop
  41b2c0:	push   rbp
  41b2c1:	push   rdi
  41b2c2:	push   rsi
  41b2c3:	push   rbx
  41b2c4:	sub    rsp,0x58
  41b2c8:	mov    rdi,rcx
  41b2cb:	mov    ecx,r8d
  41b2ce:	mov    rbp,rdx
  41b2d1:	mov    ebx,r8d
  41b2d4:	call   0x4187b0
  41b2d9:	xor    edx,edx
  41b2db:	mov    rsi,rax
  41b2de:	mov    DWORD PTR [rsp+0x20],0xdeadbeef
  41b2e6:	lea    r8,[rsp+0x20]
  41b2eb:	mov    rcx,rax
  41b2ee:	call   QWORD PTR [rip+0x81478]        # 0x49c76c
  41b2f4:	cmp    DWORD PTR [rsp+0x20],0xdeadbeef
  41b2fc:	je     0x41b320
  41b2fe:	mov    rcx,rsi
  41b301:	call   QWORD PTR [rip+0x8149d]        # 0x49c7a4
  41b307:	test   eax,eax
  41b309:	mov    esi,eax
  41b30b:	jne    0x41b340
  41b30d:	mov    ecx,ebx
  41b30f:	call   QWORD PTR [rip+0x8114f]        # 0x49c464
  41b315:	mov    eax,esi
  41b317:	add    rsp,0x58
  41b31b:	pop    rbx
  41b31c:	pop    rsi
  41b31d:	pop    rdi
  41b31e:	pop    rbp
  41b31f:	ret    
  41b320:	mov    r8d,ebx
  41b323:	mov    rdx,rbp
  41b326:	mov    rcx,rdi
  41b329:	call   0x41ad10
  41b32e:	mov    esi,eax
  41b330:	mov    eax,esi
  41b332:	add    rsp,0x58
  41b336:	pop    rbx
  41b337:	pop    rsi
  41b338:	pop    rdi
  41b339:	pop    rbp
  41b33a:	ret    
  41b33b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b340:	call   QWORD PTR [rip+0x81436]        # 0x49c77c
  41b346:	cmp    eax,0x2740
  41b34b:	mov    ebx,eax
  41b34d:	je     0x41b656
  41b353:	jg     0x41b3a0
  41b355:	cmp    eax,0x2736
  41b35a:	je     0x41b5de
  41b360:	jle    0x41b424
  41b366:	cmp    eax,0x273a
  41b36b:	je     0x41b57a
  41b371:	jg     0x41b484
  41b377:	cmp    eax,0x2738
  41b37c:	je     0x41b67e
  41b382:	jg     0x41b66a
  41b388:	call   QWORD PTR [rip+0x810e6]        # 0x49c474
  41b38e:	or     esi,0xffffffff
  41b391:	mov    DWORD PTR [rax],0x6d
  41b397:	jmp    0x41b315
  41b39c:	nop    DWORD PTR [rax+0x0]
  41b3a0:	cmp    eax,0x2748
  41b3a5:	je     0x41b642
  41b3ab:	jg     0x41b3e3
  41b3ad:	cmp    eax,0x2744
  41b3b2:	je     0x41b566
  41b3b8:	jg     0x41b45f
  41b3be:	cmp    eax,0x2742
  41b3c3:	je     0x41b552
  41b3c9:	jg     0x41b53e
  41b3cf:	call   QWORD PTR [rip+0x8109f]        # 0x49c474
  41b3d5:	or     esi,0xffffffff
  41b3d8:	mov    DWORD PTR [rax],0x65
  41b3de:	jmp    0x41b315
  41b3e3:	cmp    eax,0x274e
  41b3e8:	je     0x41b5ca
  41b3ee:	jg     0x41b4c7
  41b3f4:	cmp    eax,0x274c
  41b3f9:	je     0x41b606
  41b3ff:	jg     0x41b5f2
  41b405:	cmp    eax,0x2749
  41b40a:	jne    0x41b4a5
  41b410:	call   QWORD PTR [rip+0x8105e]        # 0x49c474
  41b416:	or     esi,0xffffffff
  41b419:	mov    DWORD PTR [rax],0x7e
  41b41f:	jmp    0x41b315
  41b424:	cmp    eax,0x57
  41b427:	je     0x41b516
  41b42d:	jle    0x41b4f8
  41b433:	cmp    eax,0x2734
  41b438:	je     0x41b6a6
  41b43e:	jg     0x41b692
  41b444:	cmp    eax,0x2733
  41b449:	jne    0x41b4a5
  41b44b:	call   QWORD PTR [rip+0x81023]        # 0x49c474
  41b451:	or     esi,0xffffffff
  41b454:	mov    DWORD PTR [rax],0x8c
  41b45a:	jmp    0x41b315
  41b45f:	cmp    eax,0x2746
  41b464:	je     0x41b62e
  41b46a:	jg     0x41b61a
  41b470:	call   QWORD PTR [rip+0x80ffe]        # 0x49c474
  41b476:	or     esi,0xffffffff
  41b479:	mov    DWORD PTR [rax],0x6a
  41b47f:	jmp    0x41b315
  41b484:	cmp    eax,0x273d
  41b489:	je     0x41b5a2
  41b48f:	cmp    eax,0x273f
  41b494:	je     0x41b58e
  41b49a:	cmp    eax,0x273b
  41b49f:	je     0x41b5b6
  41b4a5:	call   QWORD PTR [rip+0x80fc9]        # 0x49c474
  41b4ab:	lea    ecx,[rbx-0x2711]
  41b4b1:	lea    edx,[rbx-0x2710]
  41b4b7:	cmp    ecx,0x17
  41b4ba:	cmovbe ebx,edx
  41b4bd:	or     esi,0xffffffff
  41b4c0:	mov    DWORD PTR [rax],ebx
  41b4c2:	jmp    0x41b315
  41b4c7:	cmp    eax,0x2751
  41b4cc:	je     0x41b6ce
  41b4d2:	cmp    eax,0x2752
  41b4d7:	je     0x41b6ba
  41b4dd:	cmp    eax,0x274f
  41b4e2:	jne    0x41b4a5
  41b4e4:	call   QWORD PTR [rip+0x80f8a]        # 0x49c474
  41b4ea:	or     esi,0xffffffff
  41b4ed:	mov    DWORD PTR [rax],0x26
  41b4f3:	jmp    0x41b315
  41b4f8:	cmp    eax,0x6
  41b4fb:	je     0x41b52a
  41b4fd:	cmp    eax,0x8
  41b500:	jne    0x41b4a5
  41b502:	call   QWORD PTR [rip+0x80f6c]        # 0x49c474
  41b508:	or     esi,0xffffffff
  41b50b:	mov    DWORD PTR [rax],0xc
  41b511:	jmp    0x41b315
  41b516:	call   QWORD PTR [rip+0x80f58]        # 0x49c474
  41b51c:	or     esi,0xffffffff
  41b51f:	mov    DWORD PTR [rax],0x16
  41b525:	jmp    0x41b315
  41b52a:	call   QWORD PTR [rip+0x80f44]        # 0x49c474
  41b530:	or     esi,0xffffffff
  41b533:	mov    DWORD PTR [rax],0x9
  41b539:	jmp    0x41b315
  41b53e:	call   QWORD PTR [rip+0x80f30]        # 0x49c474
  41b544:	or     esi,0xffffffff
  41b547:	mov    DWORD PTR [rax],0x76
  41b54d:	jmp    0x41b315
  41b552:	call   QWORD PTR [rip+0x80f1c]        # 0x49c474
  41b558:	or     esi,0xffffffff
  41b55b:	mov    DWORD PTR [rax],0x74
  41b561:	jmp    0x41b315
  41b566:	call   QWORD PTR [rip+0x80f08]        # 0x49c474
  41b56c:	or     esi,0xffffffff
  41b56f:	mov    DWORD PTR [rax],0x75
  41b575:	jmp    0x41b315
  41b57a:	call   QWORD PTR [rip+0x80ef4]        # 0x49c474
  41b580:	or     esi,0xffffffff
  41b583:	mov    DWORD PTR [rax],0x7b
  41b589:	jmp    0x41b315
  41b58e:	call   QWORD PTR [rip+0x80ee0]        # 0x49c474
  41b594:	or     esi,0xffffffff
  41b597:	mov    DWORD PTR [rax],0x66
  41b59d:	jmp    0x41b315
  41b5a2:	call   QWORD PTR [rip+0x80ecc]        # 0x49c474
  41b5a8:	or     esi,0xffffffff
  41b5ab:	mov    DWORD PTR [rax],0x82
  41b5b1:	jmp    0x41b315
  41b5b6:	call   QWORD PTR [rip+0x80eb8]        # 0x49c474
  41b5bc:	or     esi,0xffffffff
  41b5bf:	mov    DWORD PTR [rax],0x87
  41b5c5:	jmp    0x41b315
  41b5ca:	call   QWORD PTR [rip+0x80ea4]        # 0x49c474
  41b5d0:	or     esi,0xffffffff
  41b5d3:	mov    DWORD PTR [rax],0x72
  41b5d9:	jmp    0x41b315
  41b5de:	call   QWORD PTR [rip+0x80e90]        # 0x49c474
  41b5e4:	or     esi,0xffffffff
  41b5e7:	mov    DWORD PTR [rax],0x80
  41b5ed:	jmp    0x41b315
  41b5f2:	call   QWORD PTR [rip+0x80e7c]        # 0x49c474
  41b5f8:	or     esi,0xffffffff
  41b5fb:	mov    DWORD PTR [rax],0x6b
  41b601:	jmp    0x41b315
  41b606:	call   QWORD PTR [rip+0x80e68]        # 0x49c474
  41b60c:	or     esi,0xffffffff
  41b60f:	mov    DWORD PTR [rax],0x8a
  41b615:	jmp    0x41b315
  41b61a:	call   QWORD PTR [rip+0x80e54]        # 0x49c474
  41b620:	or     esi,0xffffffff
  41b623:	mov    DWORD PTR [rax],0x77
  41b629:	jmp    0x41b315
  41b62e:	call   QWORD PTR [rip+0x80e40]        # 0x49c474
  41b634:	or     esi,0xffffffff
  41b637:	mov    DWORD PTR [rax],0x6c
  41b63d:	jmp    0x41b315
  41b642:	call   QWORD PTR [rip+0x80e2c]        # 0x49c474
  41b648:	or     esi,0xffffffff
  41b64b:	mov    DWORD PTR [rax],0x71
  41b651:	jmp    0x41b315
  41b656:	call   QWORD PTR [rip+0x80e18]        # 0x49c474
  41b65c:	or     esi,0xffffffff
  41b65f:	mov    DWORD PTR [rax],0x64
  41b665:	jmp    0x41b315
  41b66a:	call   QWORD PTR [rip+0x80e04]        # 0x49c474
  41b670:	or     esi,0xffffffff
  41b673:	mov    DWORD PTR [rax],0x88
  41b679:	jmp    0x41b315
  41b67e:	call   QWORD PTR [rip+0x80df0]        # 0x49c474
  41b684:	or     esi,0xffffffff
  41b687:	mov    DWORD PTR [rax],0x73
  41b68d:	jmp    0x41b315
  41b692:	call   QWORD PTR [rip+0x80ddc]        # 0x49c474
  41b698:	or     esi,0xffffffff
  41b69b:	mov    DWORD PTR [rax],0x67
  41b6a1:	jmp    0x41b315
  41b6a6:	call   QWORD PTR [rip+0x80dc8]        # 0x49c474
  41b6ac:	or     esi,0xffffffff
  41b6af:	mov    DWORD PTR [rax],0x70
  41b6b5:	jmp    0x41b315
  41b6ba:	call   QWORD PTR [rip+0x80db4]        # 0x49c474
  41b6c0:	or     esi,0xffffffff
  41b6c3:	mov    DWORD PTR [rax],0x29
  41b6c9:	jmp    0x41b315
  41b6ce:	call   QWORD PTR [rip+0x80da0]        # 0x49c474
  41b6d4:	or     esi,0xffffffff
  41b6d7:	mov    DWORD PTR [rax],0x6e
  41b6dd:	jmp    0x41b315
  41b6e2:	nop    DWORD PTR [rax+0x0]
  41b6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6f0:	push   rbx
  41b6f1:	sub    rsp,0x1c0
  41b6f8:	xor    eax,eax
  41b6fa:	cmp    DWORD PTR [rip+0x4d780],ecx        # 0x468e80
  41b700:	mov    ebx,ecx
  41b702:	jl     0x41b710
  41b704:	add    rsp,0x1c0
  41b70b:	pop    rbx
  41b70c:	ret    
  41b70d:	nop    DWORD PTR [rax]
  41b710:	lea    rdx,[rsp+0x20]
  41b715:	movzx  ecx,cx
  41b718:	call   QWORD PTR [rip+0x81076]        # 0x49c794
  41b71e:	mov    edx,eax
  41b720:	mov    eax,0x1
  41b725:	test   edx,edx
  41b727:	jne    0x41b704
  41b729:	movzx  edx,WORD PTR [rsp+0x20]
  41b72e:	mov    al,0x2
  41b730:	cmp    ebx,edx
  41b732:	jg     0x41b704
  41b734:	mov    eax,DWORD PTR [rip+0x4d746]        # 0x468e80
  41b73a:	test   eax,eax
  41b73c:	jne    0x41b758
  41b73e:	lea    r8,[rip+0x4d75b]        # 0x468ea0
  41b745:	lea    rdx,[rip+0xfffffffffffff734]        # 0x41ae80
  41b74c:	lea    rcx,[rip+0xfffffffffffffb6d]        # 0x41b2c0
  41b753:	call   0x41adc0
  41b758:	mov    DWORD PTR [rip+0x4d722],ebx        # 0x468e80
  41b75e:	xor    eax,eax
  41b760:	jmp    0x41b704
  41b762:	nop    DWORD PTR [rax+0x0]
  41b766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b770:	sub    rsp,0x28
  41b774:	lea    rcx,[rip+0x4d725]        # 0x468ea0
  41b77b:	mov    DWORD PTR [rip+0x4d6fb],0x0        # 0x468e80
  41b785:	call   0x41ae40
  41b78a:	call   QWORD PTR [rip+0x80fd4]        # 0x49c764
  41b790:	test   eax,eax
  41b792:	setne  al
  41b795:	movzx  eax,al
  41b798:	add    rsp,0x28
  41b79c:	ret    
  41b79d:	nop
  41b79e:	nop
  41b79f:	nop
  41b7a0:	jmp    QWORD PTR [rip+0x81066]        # 0x49c80c
  41b7a6:	nop
  41b7a7:	nop
  41b7a8:	jmp    QWORD PTR [rip+0x81056]        # 0x49c804
  41b7ae:	nop
  41b7af:	nop
  41b7b0:	jmp    QWORD PTR [rip+0x81046]        # 0x49c7fc
  41b7b6:	nop
  41b7b7:	nop
  41b7b8:	jmp    QWORD PTR [rip+0x81036]        # 0x49c7f4
  41b7be:	nop
  41b7bf:	nop
  41b7c0:	jmp    QWORD PTR [rip+0x81026]        # 0x49c7ec
  41b7c6:	nop
  41b7c7:	nop
  41b7c8:	jmp    QWORD PTR [rip+0x81016]        # 0x49c7e4
  41b7ce:	nop
  41b7cf:	nop
  41b7d0:	jmp    QWORD PTR [rip+0x81006]        # 0x49c7dc
  41b7d6:	nop
  41b7d7:	nop
  41b7d8:	jmp    QWORD PTR [rip+0x80ff6]        # 0x49c7d4
  41b7de:	nop
  41b7df:	nop
  41b7e0:	jmp    QWORD PTR [rip+0x80fe6]        # 0x49c7cc
  41b7e6:	nop
  41b7e7:	nop
  41b7e8:	jmp    QWORD PTR [rip+0x80fd6]        # 0x49c7c4
  41b7ee:	nop
  41b7ef:	nop
  41b7f0:	jmp    QWORD PTR [rip+0x80fc6]        # 0x49c7bc
  41b7f6:	nop
  41b7f7:	nop
  41b7f8:	jmp    QWORD PTR [rip+0x80fb6]        # 0x49c7b4
  41b7fe:	nop
  41b7ff:	nop
  41b800:	jmp    QWORD PTR [rip+0x80fa6]        # 0x49c7ac
  41b806:	nop
  41b807:	nop
  41b808:	jmp    QWORD PTR [rip+0x80f96]        # 0x49c7a4
  41b80e:	nop
  41b80f:	nop
  41b810:	jmp    QWORD PTR [rip+0x80f86]        # 0x49c79c
  41b816:	nop
  41b817:	nop
  41b818:	jmp    QWORD PTR [rip+0x80f76]        # 0x49c794
  41b81e:	nop
  41b81f:	nop
  41b820:	jmp    QWORD PTR [rip+0x80f66]        # 0x49c78c
  41b826:	nop
  41b827:	nop
  41b828:	jmp    QWORD PTR [rip+0x80f56]        # 0x49c784
  41b82e:	nop
  41b82f:	nop
  41b830:	jmp    QWORD PTR [rip+0x80f46]        # 0x49c77c
  41b836:	nop
  41b837:	nop
  41b838:	jmp    QWORD PTR [rip+0x80f36]        # 0x49c774
  41b83e:	nop
  41b83f:	nop
  41b840:	jmp    QWORD PTR [rip+0x80f26]        # 0x49c76c
  41b846:	nop
  41b847:	nop
  41b848:	jmp    QWORD PTR [rip+0x80f16]        # 0x49c764
  41b84e:	nop
  41b84f:	nop
  41b850:	sub    rsp,0x28
  41b854:	call   0x41b880
  41b859:	lea    rcx,[rip+0x4d660]        # 0x468ec0
  41b860:	mov    r8d,0x401
  41b866:	mov    rdx,rax
  41b869:	call   0x422400
  41b86e:	lea    rax,[rip+0x4d64b]        # 0x468ec0
  41b875:	add    rsp,0x28
  41b879:	ret    
  41b87a:	nop
  41b87b:	nop
  41b87c:	nop
  41b87d:	nop
  41b87e:	nop
  41b87f:	nop
  41b880:	push   rbx
  41b881:	sub    rsp,0x40
  41b885:	lea    rbx,[rip+0x4da74]        # 0x469300
  41b88c:	mov    r9d,0x400
  41b892:	xor    edx,edx
  41b894:	mov    r8d,ecx
  41b897:	mov    QWORD PTR [rsp+0x30],0x0
  41b8a0:	mov    DWORD PTR [rsp+0x28],0x400
  41b8a8:	mov    QWORD PTR [rsp+0x20],rbx
  41b8ad:	mov    ecx,0x12ff
  41b8b2:	call   QWORD PTR [rip+0x809fc]        # 0x49c2b4
  41b8b8:	mov    rax,rbx
  41b8bb:	add    rsp,0x40
  41b8bf:	pop    rbx
  41b8c0:	ret    
  41b8c1:	nop
  41b8c2:	nop
  41b8c3:	nop
  41b8c4:	nop
  41b8c5:	nop
  41b8c6:	nop
  41b8c7:	nop
  41b8c8:	nop
  41b8c9:	nop
  41b8ca:	nop
  41b8cb:	nop
  41b8cc:	nop
  41b8cd:	nop
  41b8ce:	nop
  41b8cf:	nop
  41b8d0:	jmp    QWORD PTR [rip+0x80e4e]        # 0x49c724
  41b8d6:	nop
  41b8d7:	nop
  41b8d8:	jmp    QWORD PTR [rip+0x80e3e]        # 0x49c71c
  41b8de:	nop
  41b8df:	nop
  41b8e0:	jmp    QWORD PTR [rip+0x80e2e]        # 0x49c714
  41b8e6:	nop
  41b8e7:	nop
  41b8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8f0:	push   rbx
  41b8f1:	sub    rsp,0x30
  41b8f5:	mov    rbx,rcx
  41b8f8:	mov    rcx,QWORD PTR [rip+0x7f6c1]        # 0x49afc0
  41b8ff:	call   0x41bea0
  41b904:	cmp    rax,0xffffffffffffffff
  41b908:	mov    QWORD PTR [rsp+0x20],rax
  41b90d:	je     0x41b985
  41b90f:	mov    ecx,0x8
  41b914:	call   0x4225e0
  41b919:	mov    rcx,QWORD PTR [rip+0x7f6a0]        # 0x49afc0
  41b920:	call   0x41bea0
  41b925:	mov    rcx,QWORD PTR [rip+0x7f69c]        # 0x49afc8
  41b92c:	mov    QWORD PTR [rsp+0x20],rax
  41b931:	call   0x41bea0
  41b936:	lea    rdx,[rsp+0x20]
  41b93b:	lea    r8,[rsp+0x28]
  41b940:	mov    rcx,rbx
  41b943:	mov    QWORD PTR [rsp+0x28],rax
  41b948:	call   0x422688
  41b94d:	mov    rcx,QWORD PTR [rsp+0x20]
  41b952:	mov    rbx,rax
  41b955:	call   0x41beb0
  41b95a:	mov    rcx,QWORD PTR [rsp+0x28]
  41b95f:	mov    QWORD PTR [rip+0x7f65a],rax        # 0x49afc0
  41b966:	call   0x41beb0
  41b96b:	mov    ecx,0x8
  41b970:	mov    QWORD PTR [rip+0x7f651],rax        # 0x49afc8
  41b977:	call   0x4225a8
  41b97c:	mov    rax,rbx
  41b97f:	add    rsp,0x30
  41b983:	pop    rbx
  41b984:	ret    
  41b985:	mov    rax,QWORD PTR [rip+0x16674]        # 0x432000
  41b98c:	mov    rcx,rbx
  41b98f:	call   QWORD PTR [rax]
  41b991:	add    rsp,0x30
  41b995:	pop    rbx
  41b996:	ret    
  41b997:	nop    WORD PTR [rax+rax*1+0x0]
  41b9a0:	sub    rsp,0x28
  41b9a4:	call   0x41b8f0
  41b9a9:	test   rax,rax
  41b9ac:	sete   al
  41b9af:	movzx  eax,al
  41b9b2:	neg    eax
  41b9b4:	add    rsp,0x28
  41b9b8:	ret    
  41b9b9:	nop
  41b9ba:	nop
  41b9bb:	nop
  41b9bc:	nop
  41b9bd:	nop
  41b9be:	nop
  41b9bf:	nop
  41b9c0:	sub    rsp,0x28
  41b9c4:	mov    rax,QWORD PTR [rip+0xcaf5]        # 0x4284c0
  41b9cb:	mov    rax,QWORD PTR [rax]
  41b9ce:	test   rax,rax
  41b9d1:	je     0x41b9f0
  41b9d3:	call   rax
  41b9d5:	mov    rax,QWORD PTR [rip+0xcae4]        # 0x4284c0
  41b9dc:	lea    rdx,[rax+0x8]
  41b9e0:	mov    rax,QWORD PTR [rax+0x8]
  41b9e4:	mov    QWORD PTR [rip+0xcad5],rdx        # 0x4284c0
  41b9eb:	test   rax,rax
  41b9ee:	jne    0x41b9d3
  41b9f0:	add    rsp,0x28
  41b9f4:	ret    
  41b9f5:	nop
  41b9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba00:	push   rsi
  41ba01:	push   rbx
  41ba02:	sub    rsp,0x28
  41ba06:	mov    rsi,QWORD PTR [rip+0x16563]        # 0x431f70
  41ba0d:	mov    rax,QWORD PTR [rsi]
  41ba10:	cmp    eax,0xffffffff
  41ba13:	mov    ebx,eax
  41ba15:	je     0x41ba40
  41ba17:	test   ebx,ebx
  41ba19:	je     0x41ba2a
  41ba1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba20:	mov    eax,ebx
  41ba22:	call   QWORD PTR [rsi+rax*8]
  41ba25:	sub    ebx,0x1
  41ba28:	jne    0x41ba20
  41ba2a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x41b9c0
  41ba31:	add    rsp,0x28
  41ba35:	pop    rbx
  41ba36:	pop    rsi
  41ba37:	jmp    0x41b9a0
  41ba3c:	nop    DWORD PTR [rax+0x0]
  41ba40:	xor    ebx,ebx
  41ba42:	jmp    0x41ba46
  41ba44:	mov    ebx,eax
  41ba46:	lea    edx,[rbx+0x1]
  41ba49:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41ba4e:	mov    rax,rdx
  41ba51:	jne    0x41ba44
  41ba53:	jmp    0x41ba17
  41ba55:	nop
  41ba56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba60:	mov    eax,DWORD PTR [rip+0x4e0da]        # 0x469b40
  41ba66:	test   eax,eax
  41ba68:	je     0x41ba70
  41ba6a:	repz ret 
  41ba6c:	nop    DWORD PTR [rax+0x0]
  41ba70:	mov    DWORD PTR [rip+0x4e0c6],0x1        # 0x469b40
  41ba7a:	jmp    0x41ba00
  41ba7c:	nop
  41ba7d:	nop
  41ba7e:	nop
  41ba7f:	nop
  41ba80:	mov    rax,QWORD PTR [rip+0x809a5]        # 0x49c42c
  41ba87:	rex.W jmp rax
  41ba8a:	nop
  41ba8b:	nop
  41ba8c:	nop
  41ba8d:	nop
  41ba8e:	nop
  41ba8f:	nop
  41ba90:	xor    eax,eax
  41ba92:	ret    
  41ba93:	nop
  41ba94:	nop
  41ba95:	nop
  41ba96:	nop
  41ba97:	nop
  41ba98:	nop
  41ba99:	nop
  41ba9a:	nop
  41ba9b:	nop
  41ba9c:	nop
  41ba9d:	nop
  41ba9e:	nop
  41ba9f:	nop
  41baa0:	push   r12
  41baa2:	push   rbp
  41baa3:	push   rdi
  41baa4:	push   rsi
  41baa5:	push   rbx
  41baa6:	sub    rsp,0x40
  41baaa:	mov    rbx,QWORD PTR [rip+0xcaaf]        # 0x428560
  41bab1:	movabs rax,0x2b992ddfa232
  41babb:	mov    QWORD PTR [rsp+0x20],0x0
  41bac4:	cmp    rbx,rax
  41bac7:	je     0x41bae0
  41bac9:	not    rbx
  41bacc:	mov    QWORD PTR [rip+0xca9d],rbx        # 0x428570
  41bad3:	add    rsp,0x40
  41bad7:	pop    rbx
  41bad8:	pop    rsi
  41bad9:	pop    rdi
  41bada:	pop    rbp
  41badb:	pop    r12
  41badd:	ret    
  41bade:	xchg   ax,ax
  41bae0:	lea    rcx,[rsp+0x20]
  41bae5:	call   QWORD PTR [rip+0x80841]        # 0x49c32c
  41baeb:	mov    r12,QWORD PTR [rsp+0x20]
  41baf0:	call   QWORD PTR [rip+0x807d6]        # 0x49c2cc
  41baf6:	mov    ebp,eax
  41baf8:	call   QWORD PTR [rip+0x807d6]        # 0x49c2d4
  41bafe:	mov    edi,eax
  41bb00:	call   QWORD PTR [rip+0x8082e]        # 0x49c334
  41bb06:	lea    rcx,[rsp+0x30]
  41bb0b:	mov    esi,eax
  41bb0d:	call   QWORD PTR [rip+0x80861]        # 0x49c374
  41bb13:	xor    r12,QWORD PTR [rsp+0x30]
  41bb18:	mov    edx,edi
  41bb1a:	movabs rax,0xffffffffffff
  41bb24:	xor    rbp,r12
  41bb27:	mov    rdi,rbp
  41bb2a:	xor    rdi,rdx
  41bb2d:	mov    edx,esi
  41bb2f:	xor    rdi,rdx
  41bb32:	mov    rsi,rdi
  41bb35:	and    rsi,rax
  41bb38:	cmp    rsi,rbx
  41bb3b:	je     0x41bb60
  41bb3d:	mov    rax,rsi
  41bb40:	not    rax
  41bb43:	mov    QWORD PTR [rip+0xca16],rsi        # 0x428560
  41bb4a:	mov    QWORD PTR [rip+0xca1f],rax        # 0x428570
  41bb51:	add    rsp,0x40
  41bb55:	pop    rbx
  41bb56:	pop    rsi
  41bb57:	pop    rdi
  41bb58:	pop    rbp
  41bb59:	pop    r12
  41bb5b:	ret    
  41bb5c:	nop    DWORD PTR [rax+0x0]
  41bb60:	movabs rax,0xffffd466d2205dcc
  41bb6a:	movabs rsi,0x2b992ddfa233
  41bb74:	jmp    0x41bb43
  41bb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb80:	push   rbp
  41bb81:	push   rsi
  41bb82:	push   rbx
  41bb83:	mov    rbp,rsp
  41bb86:	sub    rsp,0x70
  41bb8a:	mov    rsi,rcx
  41bb8d:	lea    rcx,[rip+0x4dfec]        # 0x469b80
  41bb94:	call   QWORD PTR [rip+0x807ea]        # 0x49c384
  41bb9a:	mov    rbx,QWORD PTR [rip+0x4e0d7]        # 0x469c78
  41bba1:	xor    r8d,r8d
  41bba4:	lea    rdx,[rbp-0x28]
  41bba8:	mov    rcx,rbx
  41bbab:	call   QWORD PTR [rip+0x807db]        # 0x49c38c
  41bbb1:	test   rax,rax
  41bbb4:	mov    r9,rax
  41bbb7:	je     0x41bc60
  41bbbd:	lea    rax,[rbp-0x20]
  41bbc1:	mov    QWORD PTR [rsp+0x38],0x0
  41bbca:	mov    r8,rbx
  41bbcd:	mov    rdx,QWORD PTR [rbp-0x28]
  41bbd1:	xor    ecx,ecx
  41bbd3:	mov    QWORD PTR [rsp+0x30],rax
  41bbd8:	lea    rax,[rbp-0x18]
  41bbdc:	mov    QWORD PTR [rsp+0x28],rax
  41bbe1:	lea    rax,[rip+0x4df98]        # 0x469b80
  41bbe8:	mov    QWORD PTR [rsp+0x20],rax
  41bbed:	call   QWORD PTR [rip+0x807a1]        # 0x49c394
  41bbf3:	mov    rax,QWORD PTR [rip+0x4e07e]        # 0x469c78
  41bbfa:	xor    ecx,ecx
  41bbfc:	mov    QWORD PTR [rip+0x4dffd],rsi        # 0x469c00
  41bc03:	mov    DWORD PTR [rip+0x4e473],0xc0000409        # 0x46a080
  41bc0d:	mov    DWORD PTR [rip+0x4e46d],0x1        # 0x46a084
  41bc17:	mov    QWORD PTR [rip+0x4e472],rax        # 0x46a090
  41bc1e:	mov    rax,QWORD PTR [rip+0xc93b]        # 0x428560
  41bc25:	mov    QWORD PTR [rbp-0x10],rax
  41bc29:	mov    rax,QWORD PTR [rip+0xc940]        # 0x428570
  41bc30:	mov    QWORD PTR [rbp-0x8],rax
  41bc34:	call   QWORD PTR [rip+0x80762]        # 0x49c39c
  41bc3a:	lea    rcx,[rip+0x15b8f]        # 0x4317d0
  41bc41:	call   QWORD PTR [rip+0x80785]        # 0x49c3cc
  41bc47:	call   QWORD PTR [rip+0x80677]        # 0x49c2c4
  41bc4d:	mov    edx,0xc0000409
  41bc52:	mov    rcx,rax
  41bc55:	call   QWORD PTR [rip+0x80761]        # 0x49c3bc
  41bc5b:	call   0x4225a0
  41bc60:	mov    rax,QWORD PTR [rbp+0x18]
  41bc64:	mov    QWORD PTR [rip+0x4e00d],rax        # 0x469c78
  41bc6b:	lea    rax,[rbp+0x8]
  41bc6f:	mov    QWORD PTR [rip+0x4dfa2],rax        # 0x469c18
  41bc76:	jmp    0x41bbf3
  41bc7b:	nop
  41bc7c:	nop
  41bc7d:	nop
  41bc7e:	nop
  41bc7f:	nop
  41bc80:	sub    rsp,0x28
  41bc84:	test   edx,edx
  41bc86:	je     0x41bca0
  41bc88:	cmp    edx,0x3
  41bc8b:	je     0x41bca0
  41bc8d:	mov    eax,0x1
  41bc92:	add    rsp,0x28
  41bc96:	ret    
  41bc97:	nop    WORD PTR [rax+rax*1+0x0]
  41bca0:	call   0x41c990
  41bca5:	mov    eax,0x1
  41bcaa:	add    rsp,0x28
  41bcae:	ret    
  41bcaf:	nop
  41bcb0:	push   rsi
  41bcb1:	push   rbx
  41bcb2:	sub    rsp,0x28
  41bcb6:	mov    rax,QWORD PTR [rip+0x16293]        # 0x431f50
  41bcbd:	cmp    DWORD PTR [rax],0x2
  41bcc0:	je     0x41bcc8
  41bcc2:	mov    DWORD PTR [rax],0x2
  41bcc8:	cmp    edx,0x2
  41bccb:	je     0x41bce0
  41bccd:	cmp    edx,0x1
  41bcd0:	je     0x41bd12
  41bcd2:	mov    eax,0x1
  41bcd7:	add    rsp,0x28
  41bcdb:	pop    rbx
  41bcdc:	pop    rsi
  41bcdd:	ret    
  41bcde:	xchg   ax,ax
  41bce0:	lea    rbx,[rip+0x83379]        # 0x49f060
  41bce7:	lea    rsi,[rip+0x83372]        # 0x49f060
  41bcee:	cmp    rbx,rsi
  41bcf1:	je     0x41bcd2
  41bcf3:	mov    rax,QWORD PTR [rbx]
  41bcf6:	test   rax,rax
  41bcf9:	je     0x41bcfd
  41bcfb:	call   rax
  41bcfd:	add    rbx,0x8
  41bd01:	cmp    rbx,rsi
  41bd04:	jne    0x41bcf3
  41bd06:	mov    eax,0x1
  41bd0b:	add    rsp,0x28
  41bd0f:	pop    rbx
  41bd10:	pop    rsi
  41bd11:	ret    
  41bd12:	call   0x41c990
  41bd17:	jmp    0x41bcd2
  41bd19:	nop    DWORD PTR [rax+0x0]
  41bd20:	xor    eax,eax
  41bd22:	ret    
  41bd23:	nop
  41bd24:	nop
  41bd25:	nop
  41bd26:	nop
  41bd27:	nop
  41bd28:	nop
  41bd29:	nop
  41bd2a:	nop
  41bd2b:	nop
  41bd2c:	nop
  41bd2d:	nop
  41bd2e:	nop
  41bd2f:	nop
  41bd30:	sub    rsp,0x58
  41bd34:	mov    rax,QWORD PTR [rip+0x4e425]        # 0x46a160
  41bd3b:	test   rax,rax
  41bd3e:	je     0x41bd6c
  41bd40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  41bd49:	mov    DWORD PTR [rsp+0x20],ecx
  41bd4d:	lea    rcx,[rsp+0x20]
  41bd52:	mov    QWORD PTR [rsp+0x28],rdx
  41bd57:	movsd  QWORD PTR [rsp+0x30],xmm2
  41bd5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  41bd63:	movsd  QWORD PTR [rsp+0x40],xmm0
  41bd69:	call   rax
  41bd6b:	nop
  41bd6c:	add    rsp,0x58
  41bd70:	ret    
  41bd71:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd80:	mov    QWORD PTR [rip+0x4e3d9],rcx        # 0x46a160
  41bd87:	jmp    0x422660
  41bd8c:	nop    DWORD PTR [rax+0x0]
  41bd90:	push   rsi
  41bd91:	push   rbx
  41bd92:	sub    rsp,0x78
  41bd96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41bd9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41bda0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41bda6:	cmp    DWORD PTR [rcx],0x6
  41bda9:	ja     0x41be80
  41bdaf:	mov    edx,DWORD PTR [rcx]
  41bdb1:	lea    rax,[rip+0x15b5c]        # 0x431914
  41bdb8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41bdbc:	add    rax,rdx
  41bdbf:	jmp    rax
  41bdc1:	lea    rbx,[rip+0x15a28]        # 0x4317f0
  41bdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdd0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  41bdd6:	mov    rsi,QWORD PTR [rcx+0x8]
  41bdda:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41bddf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  41bde4:	call   0x422678
  41bde9:	movsd  QWORD PTR [rsp+0x30],xmm8
  41bdf0:	lea    rcx,[rax+0x60]
  41bdf4:	lea    rdx,[rip+0x15aed]        # 0x4318e8
  41bdfb:	movsd  QWORD PTR [rsp+0x28],xmm7
  41be01:	mov    r9,rsi
  41be04:	mov    r8,rbx
  41be07:	movsd  QWORD PTR [rsp+0x20],xmm6
  41be0d:	call   0x422548
  41be12:	nop
  41be13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41be18:	xor    eax,eax
  41be1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41be1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41be25:	add    rsp,0x78
  41be29:	pop    rbx
  41be2a:	pop    rsi
  41be2b:	ret    
  41be2c:	nop    DWORD PTR [rax+0x0]
  41be30:	lea    rbx,[rip+0x159d8]        # 0x43180f
  41be37:	jmp    0x41bdd0
  41be39:	nop    DWORD PTR [rax+0x0]
  41be40:	lea    rbx,[rip+0x159e9]        # 0x431830
  41be47:	jmp    0x41bdd0
  41be49:	nop    DWORD PTR [rax+0x0]
  41be50:	lea    rbx,[rip+0x15a49]        # 0x4318a0
  41be57:	jmp    0x41bdd0
  41be5c:	nop    DWORD PTR [rax+0x0]
  41be60:	lea    rbx,[rip+0x15a11]        # 0x431878
  41be67:	jmp    0x41bdd0
  41be6c:	nop    DWORD PTR [rax+0x0]
  41be70:	lea    rbx,[rip+0x159d9]        # 0x431850
  41be77:	jmp    0x41bdd0
  41be7c:	nop    DWORD PTR [rax+0x0]
  41be80:	lea    rbx,[rip+0x15a4f]        # 0x4318d6
  41be87:	jmp    0x41bdd0
  41be8c:	nop
  41be8d:	nop
  41be8e:	nop
  41be8f:	nop
  41be90:	fninit 
  41be92:	ret    
  41be93:	nop
  41be94:	nop
  41be95:	nop
  41be96:	nop
  41be97:	nop
  41be98:	nop
  41be99:	nop
  41be9a:	nop
  41be9b:	nop
  41be9c:	nop
  41be9d:	nop
  41be9e:	nop
  41be9f:	nop
  41bea0:	mov    rax,rcx
  41bea3:	ret    
  41bea4:	xchg   ax,ax
  41bea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41beb0:	mov    rax,rcx
  41beb3:	ret    
  41beb4:	nop
  41beb5:	nop
  41beb6:	nop
  41beb7:	nop
  41beb8:	nop
  41beb9:	nop
  41beba:	nop
  41bebb:	nop
  41bebc:	nop
  41bebd:	nop
  41bebe:	nop
  41bebf:	nop
  41bec0:	push   rsi
  41bec1:	push   rbx
  41bec2:	sub    rsp,0x38
  41bec6:	lea    rax,[rsp+0x58]
  41becb:	mov    rbx,rcx
  41bece:	mov    QWORD PTR [rsp+0x58],rdx
  41bed3:	mov    QWORD PTR [rsp+0x60],r8
  41bed8:	mov    QWORD PTR [rsp+0x68],r9
  41bedd:	mov    QWORD PTR [rsp+0x28],rax
  41bee2:	call   0x422678
  41bee7:	lea    rcx,[rip+0x15a42]        # 0x431930
  41beee:	lea    r9,[rax+0x60]
  41bef2:	mov    r8d,0x1b
  41bef8:	mov    edx,0x1
  41befd:	call   0x422510
  41bf02:	mov    rsi,QWORD PTR [rsp+0x28]
  41bf07:	call   0x422678
  41bf0c:	lea    rcx,[rax+0x60]
  41bf10:	mov    rdx,rbx
  41bf13:	mov    r8,rsi
  41bf16:	call   0x422418
  41bf1b:	call   0x4225a0
  41bf20:	nop
  41bf21:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf30:	push   r13
  41bf32:	push   r12
  41bf34:	push   rbp
  41bf35:	push   rdi
  41bf36:	push   rsi
  41bf37:	push   rbx
  41bf38:	sub    rsp,0x58
  41bf3c:	movsxd rbp,DWORD PTR [rip+0x4e241]        # 0x46a184
  41bf43:	mov    rbx,rcx
  41bf46:	mov    rsi,rdx
  41bf49:	mov    rdi,r8
  41bf4c:	test   ebp,ebp
  41bf4e:	jle    0x41c04a
  41bf54:	mov    rax,QWORD PTR [rip+0x4e22d]        # 0x46a188
  41bf5b:	xor    r9d,r9d
  41bf5e:	add    rax,0x8
  41bf62:	mov    r10,QWORD PTR [rax]
  41bf65:	cmp    rbx,r10
  41bf68:	jb     0x41bf7e
  41bf6a:	mov    rdx,QWORD PTR [rax+0x8]
  41bf6e:	mov    r11d,DWORD PTR [rdx+0x8]
  41bf72:	add    r10,r11
  41bf75:	cmp    rbx,r10
  41bf78:	jb     0x41c030
  41bf7e:	add    r9d,0x1
  41bf82:	add    rax,0x18
  41bf86:	cmp    r9d,ebp
  41bf89:	jne    0x41bf62
  41bf8b:	mov    rcx,rbx
  41bf8e:	call   0x41cba0
  41bf93:	test   rax,rax
  41bf96:	mov    r12,rax
  41bf99:	je     0x41c082
  41bf9f:	lea    rbp,[rbp+rbp*2+0x0]
  41bfa4:	shl    rbp,0x3
  41bfa8:	mov    r13,rbp
  41bfab:	add    r13,QWORD PTR [rip+0x4e1d6]        # 0x46a188
  41bfb2:	mov    QWORD PTR [r13+0x10],rax
  41bfb6:	mov    DWORD PTR [r13+0x0],0x0
  41bfbe:	call   0x41ccc0
  41bfc3:	mov    edx,DWORD PTR [r12+0xc]
  41bfc8:	mov    r8d,0x30
  41bfce:	add    rax,rdx
  41bfd1:	lea    rdx,[rsp+0x20]
  41bfd6:	mov    QWORD PTR [r13+0x8],rax
  41bfda:	mov    rax,QWORD PTR [rip+0x4e1a7]        # 0x46a188
  41bfe1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  41bfe6:	call   QWORD PTR [rip+0x803f0]        # 0x49c3dc
  41bfec:	test   rax,rax
  41bfef:	je     0x41c065
  41bff1:	mov    eax,DWORD PTR [rsp+0x44]
  41bff5:	lea    edx,[rax-0x4]
  41bff8:	and    edx,0xfffffffb
  41bffb:	je     0x41c029
  41bffd:	sub    eax,0x40
  41c000:	and    eax,0xffffffbf
  41c003:	je     0x41c029
  41c005:	mov    r9,rbp
  41c008:	add    r9,QWORD PTR [rip+0x4e179]        # 0x46a188
  41c00f:	mov    r8d,0x40
  41c015:	mov    rdx,QWORD PTR [rsp+0x38]
  41c01a:	mov    rcx,QWORD PTR [rsp+0x20]
  41c01f:	call   QWORD PTR [rip+0x803af]        # 0x49c3d4
  41c025:	test   eax,eax
  41c027:	je     0x41c051
  41c029:	add    DWORD PTR [rip+0x4e154],0x1        # 0x46a184
  41c030:	mov    r8,rdi
  41c033:	mov    rdx,rsi
  41c036:	mov    rcx,rbx
  41c039:	add    rsp,0x58
  41c03d:	pop    rbx
  41c03e:	pop    rsi
  41c03f:	pop    rdi
  41c040:	pop    rbp
  41c041:	pop    r12
  41c043:	pop    r13
  41c045:	jmp    0x4224d8
  41c04a:	xor    ebp,ebp
  41c04c:	jmp    0x41bf8b
  41c051:	call   QWORD PTR [rip+0x80295]        # 0x49c2ec
  41c057:	lea    rcx,[rip+0x1594a]        # 0x4319a8
  41c05e:	mov    edx,eax
  41c060:	call   0x41bec0
  41c065:	mov    rax,QWORD PTR [rip+0x4e11c]        # 0x46a188
  41c06c:	mov    edx,DWORD PTR [r12+0x8]
  41c071:	lea    rcx,[rip+0x158f8]        # 0x431970
  41c078:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41c07d:	call   0x41bec0
  41c082:	lea    rcx,[rip+0x158c7]        # 0x431950
  41c089:	mov    rdx,rbx
  41c08c:	call   0x41bec0
  41c091:	nop
  41c092:	nop    DWORD PTR [rax+0x0]
  41c096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0a0:	push   rbp
  41c0a1:	push   r14
  41c0a3:	push   r13
  41c0a5:	push   r12
  41c0a7:	push   rdi
  41c0a8:	push   rsi
  41c0a9:	push   rbx
  41c0aa:	mov    rbp,rsp
  41c0ad:	sub    rsp,0x60
  41c0b1:	mov    ebx,DWORD PTR [rip+0x4e0c9]        # 0x46a180
  41c0b7:	test   ebx,ebx
  41c0b9:	je     0x41c0d0
  41c0bb:	mov    rsp,rbp
  41c0be:	pop    rbx
  41c0bf:	pop    rsi
  41c0c0:	pop    rdi
  41c0c1:	pop    r12
  41c0c3:	pop    r13
  41c0c5:	pop    r14
  41c0c7:	pop    rbp
  41c0c8:	ret    
  41c0c9:	nop    DWORD PTR [rax+0x0]
  41c0d0:	mov    DWORD PTR [rip+0x4e0a6],0x1        # 0x46a180
  41c0da:	call   0x41cbf0
  41c0df:	cdqe   
  41c0e1:	lea    rax,[rax+rax*2]
  41c0e5:	lea    rax,[rax*8+0x1e]
  41c0ed:	and    rax,0xfffffffffffffff0
  41c0f1:	call   0x41ce10
  41c0f6:	mov    rsi,QWORD PTR [rip+0x15e83]        # 0x431f80
  41c0fd:	mov    rbx,QWORD PTR [rip+0x15e8c]        # 0x431f90
  41c104:	sub    rsp,rax
  41c107:	mov    DWORD PTR [rip+0x4e073],0x0        # 0x46a184
  41c111:	lea    rax,[rsp+0x20]
  41c116:	mov    QWORD PTR [rip+0x4e06b],rax        # 0x46a188
  41c11d:	mov    rax,rsi
  41c120:	sub    rax,rbx
  41c123:	cmp    rax,0x7
  41c127:	jle    0x41c0bb
  41c129:	cmp    rax,0xb
  41c12d:	jle    0x41c155
  41c12f:	mov    r11d,DWORD PTR [rbx]
  41c132:	test   r11d,r11d
  41c135:	jne    0x41c280
  41c13b:	mov    r10d,DWORD PTR [rbx+0x4]
  41c13f:	test   r10d,r10d
  41c142:	jne    0x41c280
  41c148:	mov    r9d,DWORD PTR [rbx+0x8]
  41c14c:	test   r9d,r9d
  41c14f:	jne    0x41c16c
  41c151:	add    rbx,0xc
  41c155:	mov    r8d,DWORD PTR [rbx]
  41c158:	test   r8d,r8d
  41c15b:	jne    0x41c280
  41c161:	mov    ecx,DWORD PTR [rbx+0x4]
  41c164:	test   ecx,ecx
  41c166:	jne    0x41c280
  41c16c:	mov    edx,DWORD PTR [rbx+0x8]
  41c16f:	cmp    edx,0x1
  41c172:	jne    0x41c38c
  41c178:	add    rbx,0xc
  41c17c:	cmp    rbx,rsi
  41c17f:	jae    0x41c0bb
  41c185:	mov    r12,QWORD PTR [rip+0x15e24]        # 0x431fb0
  41c18c:	lea    r13,[rbp-0x30]
  41c190:	movabs r14,0xffffffff00000000
  41c19a:	mov    ecx,DWORD PTR [rbx+0x4]
  41c19d:	mov    eax,DWORD PTR [rbx]
  41c19f:	movzx  edx,BYTE PTR [rbx+0x8]
  41c1a3:	add    rax,r12
  41c1a6:	add    rcx,r12
  41c1a9:	cmp    edx,0x10
  41c1ac:	mov    r8,QWORD PTR [rax]
  41c1af:	je     0x41c2f6
  41c1b5:	jbe    0x41c2bd
  41c1bb:	cmp    edx,0x20
  41c1be:	je     0x41c33f
  41c1c4:	cmp    edx,0x40
  41c1c7:	jne    0x41c32b
  41c1cd:	sub    r8,rax
  41c1d0:	mov    rdx,r13
  41c1d3:	mov    rdi,r13
  41c1d6:	mov    rax,r8
  41c1d9:	add    rax,QWORD PTR [rcx]
  41c1dc:	mov    r8d,0x8
  41c1e2:	mov    QWORD PTR [rbp-0x30],rax
  41c1e6:	call   0x41bf30
  41c1eb:	add    rbx,0xc
  41c1ef:	cmp    rbx,rsi
  41c1f2:	jb     0x41c19a
  41c1f4:	mov    eax,DWORD PTR [rip+0x4df8a]        # 0x46a184
  41c1fa:	xor    ebx,ebx
  41c1fc:	xor    esi,esi
  41c1fe:	test   eax,eax
  41c200:	jle    0x41c0bb
  41c206:	mov    r14,QWORD PTR [rip+0x801cf]        # 0x49c3dc
  41c20d:	lea    r13,[rbp-0x34]
  41c211:	mov    r12,QWORD PTR [rip+0x801bc]        # 0x49c3d4
  41c218:	jmp    0x41c233
  41c21a:	nop    WORD PTR [rax+rax*1+0x0]
  41c220:	add    esi,0x1
  41c223:	add    rbx,0x18
  41c227:	cmp    esi,DWORD PTR [rip+0x4df57]        # 0x46a184
  41c22d:	jge    0x41c0bb
  41c233:	mov    rax,rbx
  41c236:	add    rax,QWORD PTR [rip+0x4df4b]        # 0x46a188
  41c23d:	mov    edx,DWORD PTR [rax]
  41c23f:	test   edx,edx
  41c241:	je     0x41c220
  41c243:	mov    rcx,QWORD PTR [rax+0x8]
  41c247:	mov    r8d,0x30
  41c24d:	mov    rdx,rdi
  41c250:	call   r14
  41c253:	test   rax,rax
  41c256:	je     0x41c36e
  41c25c:	mov    rax,QWORD PTR [rip+0x4df25]        # 0x46a188
  41c263:	mov    r9,r13
  41c266:	mov    rdx,QWORD PTR [rbp-0x18]
  41c26a:	mov    rcx,QWORD PTR [rbp-0x30]
  41c26e:	mov    r8d,DWORD PTR [rax+rbx*1]
  41c272:	call   r12
  41c275:	jmp    0x41c220
  41c277:	nop    WORD PTR [rax+rax*1+0x0]
  41c280:	cmp    rbx,rsi
  41c283:	jae    0x41c0bb
  41c289:	mov    r12,QWORD PTR [rip+0x15d20]        # 0x431fb0
  41c290:	lea    rdi,[rbp-0x30]
  41c294:	mov    ecx,DWORD PTR [rbx+0x4]
  41c297:	mov    eax,DWORD PTR [rbx]
  41c299:	mov    r8d,0x4
  41c29f:	mov    rdx,rdi
  41c2a2:	add    rbx,0x8
  41c2a6:	add    rcx,r12
  41c2a9:	add    eax,DWORD PTR [rcx]
  41c2ab:	mov    DWORD PTR [rbp-0x30],eax
  41c2ae:	call   0x41bf30
  41c2b3:	cmp    rbx,rsi
  41c2b6:	jb     0x41c294
  41c2b8:	jmp    0x41c1f4
  41c2bd:	cmp    edx,0x8
  41c2c0:	jne    0x41c32b
  41c2c2:	movzx  edx,BYTE PTR [rcx]
  41c2c5:	mov    rdi,r13
  41c2c8:	mov    r10,rdx
  41c2cb:	or     r10,0xffffffffffffff00
  41c2d2:	test   dl,dl
  41c2d4:	cmovs  rdx,r10
  41c2d8:	sub    rdx,rax
  41c2db:	lea    rax,[r8+rdx*1]
  41c2df:	mov    r8d,0x1
  41c2e5:	mov    rdx,r13
  41c2e8:	mov    QWORD PTR [rbp-0x30],rax
  41c2ec:	call   0x41bf30
  41c2f1:	jmp    0x41c1eb
  41c2f6:	movzx  edx,WORD PTR [rcx]
  41c2f9:	mov    rdi,r13
  41c2fc:	mov    r10,rdx
  41c2ff:	or     r10,0xffffffffffff0000
  41c306:	test   dx,dx
  41c309:	cmovs  rdx,r10
  41c30d:	sub    rdx,rax
  41c310:	lea    rax,[r8+rdx*1]
  41c314:	mov    r8d,0x2
  41c31a:	mov    rdx,r13
  41c31d:	mov    QWORD PTR [rbp-0x30],rax
  41c321:	call   0x41bf30
  41c326:	jmp    0x41c1eb
  41c32b:	lea    rcx,[rip+0x156d6]        # 0x431a08
  41c332:	mov    QWORD PTR [rbp-0x30],0x0
  41c33a:	call   0x41bec0
  41c33f:	mov    edx,DWORD PTR [rcx]
  41c341:	mov    rdi,r13
  41c344:	mov    r10,rdx
  41c347:	or     r10,r14
  41c34a:	test   edx,edx
  41c34c:	cmovs  rdx,r10
  41c350:	sub    rdx,rax
  41c353:	lea    rax,[r8+rdx*1]
  41c357:	mov    r8d,0x4
  41c35d:	mov    rdx,r13
  41c360:	mov    QWORD PTR [rbp-0x30],rax
  41c364:	call   0x41bf30
  41c369:	jmp    0x41c1eb
  41c36e:	add    rbx,QWORD PTR [rip+0x4de13]        # 0x46a188
  41c375:	lea    rcx,[rip+0x155f4]        # 0x431970
  41c37c:	mov    rax,QWORD PTR [rbx+0x10]
  41c380:	mov    r8,QWORD PTR [rbx+0x8]
  41c384:	mov    edx,DWORD PTR [rax+0x8]
  41c387:	call   0x41bec0
  41c38c:	lea    rcx,[rip+0x1563d]        # 0x4319d0
  41c393:	call   0x41bec0
  41c398:	nop
  41c399:	nop
  41c39a:	nop
  41c39b:	nop
  41c39c:	nop
  41c39d:	nop
  41c39e:	nop
  41c39f:	nop
  41c3a0:	sub    rsp,0x28
  41c3a4:	mov    eax,DWORD PTR [rcx]
  41c3a6:	cmp    eax,0xc0000091
  41c3ab:	ja     0x41c410
  41c3ad:	cmp    eax,0xc000008d
  41c3b2:	jae    0x41c42f
  41c3b4:	cmp    eax,0xc0000008
  41c3b9:	je     0x41c4d0
  41c3bf:	ja     0x41c4a0
  41c3c5:	cmp    eax,0x80000002
  41c3ca:	je     0x41c4d0
  41c3d0:	cmp    eax,0xc0000005
  41c3d5:	jne    0x41c4ae
  41c3db:	xor    edx,edx
  41c3dd:	mov    ecx,0xb
  41c3e2:	call   0x422498
  41c3e7:	cmp    rax,0x1
  41c3eb:	je     0x41c530
  41c3f1:	test   rax,rax
  41c3f4:	je     0x41c510
  41c3fa:	mov    ecx,0xb
  41c3ff:	call   rax
  41c401:	xor    eax,eax
  41c403:	add    rsp,0x28
  41c407:	ret    
  41c408:	nop    DWORD PTR [rax+rax*1+0x0]
  41c410:	cmp    eax,0xc0000094
  41c415:	je     0x41c4e0
  41c41b:	ja     0x41c460
  41c41d:	cmp    eax,0xc0000092
  41c422:	je     0x41c4d0
  41c428:	cmp    eax,0xc0000093
  41c42d:	jne    0x41c4ae
  41c42f:	xor    edx,edx
  41c431:	mov    ecx,0x8
  41c436:	call   0x422498
  41c43b:	cmp    rax,0x1
  41c43f:	mov    rdx,rax
  41c442:	je     0x41c4b8
  41c444:	test   rdx,rdx
  41c447:	mov    eax,0x1
  41c44c:	je     0x41c403
  41c44e:	mov    ecx,0x8
  41c453:	call   rdx
  41c455:	xor    eax,eax
  41c457:	add    rsp,0x28
  41c45b:	ret    
  41c45c:	nop    DWORD PTR [rax+0x0]
  41c460:	cmp    eax,0xc0000095
  41c465:	je     0x41c4d0
  41c467:	cmp    eax,0xc0000096
  41c46c:	jne    0x41c4ae
  41c46e:	xor    edx,edx
  41c470:	mov    ecx,0x4
  41c475:	call   0x422498
  41c47a:	cmp    rax,0x1
  41c47e:	je     0x41c51a
  41c484:	test   rax,rax
  41c487:	je     0x41c510
  41c48d:	mov    ecx,0x4
  41c492:	call   rax
  41c494:	xor    eax,eax
  41c496:	jmp    0x41c403
  41c49b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4a0:	cmp    eax,0xc000001d
  41c4a5:	je     0x41c46e
  41c4a7:	cmp    eax,0xc000008c
  41c4ac:	je     0x41c4d0
  41c4ae:	mov    eax,0x1
  41c4b3:	add    rsp,0x28
  41c4b7:	ret    
  41c4b8:	mov    edx,0x1
  41c4bd:	mov    ecx,0x8
  41c4c2:	call   0x422498
  41c4c7:	call   0x41be90
  41c4cc:	nop    DWORD PTR [rax+0x0]
  41c4d0:	xor    eax,eax
  41c4d2:	add    rsp,0x28
  41c4d6:	ret    
  41c4d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c4e0:	xor    edx,edx
  41c4e2:	mov    ecx,0x8
  41c4e7:	call   0x422498
  41c4ec:	cmp    rax,0x1
  41c4f0:	mov    rdx,rax
  41c4f3:	jne    0x41c444
  41c4f9:	mov    edx,0x1
  41c4fe:	mov    ecx,0x8
  41c503:	call   0x422498
  41c508:	xor    eax,eax
  41c50a:	jmp    0x41c403
  41c50f:	nop
  41c510:	mov    eax,0x4
  41c515:	add    rsp,0x28
  41c519:	ret    
  41c51a:	mov    edx,0x1
  41c51f:	mov    ecx,0x4
  41c524:	call   0x422498
  41c529:	xor    eax,eax
  41c52b:	jmp    0x41c403
  41c530:	mov    edx,0x1
  41c535:	mov    ecx,0xb
  41c53a:	call   0x422498
  41c53f:	xor    eax,eax
  41c541:	jmp    0x41c403
  41c546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c550:	push   r12
  41c552:	push   rbp
  41c553:	push   rdi
  41c554:	push   rsi
  41c555:	push   rbx
  41c556:	sub    rsp,0x20
  41c55a:	call   0x41ccc0
  41c55f:	mov    rbp,rax
  41c562:	mov    eax,DWORD PTR [rip+0x4dc60]        # 0x46a1c8
  41c568:	test   eax,eax
  41c56a:	jne    0x41c591
  41c56c:	test   rbp,rbp
  41c56f:	je     0x41c591
  41c571:	lea    rcx,[rip+0x154c8]        # 0x431a40
  41c578:	mov    DWORD PTR [rip+0x4dc46],0x1        # 0x46a1c8
  41c582:	call   0x41cb00
  41c587:	test   rax,rax
  41c58a:	je     0x41c5a0
  41c58c:	mov    eax,0x1
  41c591:	add    rsp,0x20
  41c595:	pop    rbx
  41c596:	pop    rsi
  41c597:	pop    rdi
  41c598:	pop    rbp
  41c599:	pop    r12
  41c59b:	ret    
  41c59c:	nop    DWORD PTR [rax+0x0]
  41c5a0:	lea    rbx,[rip+0x4dd59]        # 0x46a300
  41c5a7:	mov    ecx,0x30
  41c5ac:	lea    rdx,[rip+0x4dc4d]        # 0x46a200
  41c5b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x41c3a0
  41c5ba:	xor    esi,esi
  41c5bc:	mov    rdi,rbx
  41c5bf:	rep stos QWORD PTR es:[rdi],rax
  41c5c2:	mov    rdi,rdx
  41c5c5:	sub    r12,rbp
  41c5c8:	mov    cl,0x20
  41c5ca:	rep stos QWORD PTR es:[rdi],rax
  41c5cd:	mov    rdi,rdx
  41c5d0:	jmp    0x41c600
  41c5d2:	mov    BYTE PTR [rdi],0x9
  41c5d5:	mov    DWORD PTR [rdi+0x4],r12d
  41c5d9:	add    rsi,0x1
  41c5dd:	mov    edx,DWORD PTR [rax+0xc]
  41c5e0:	add    rbx,0xc
  41c5e4:	mov    DWORD PTR [rbx-0xc],edx
  41c5e7:	add    edx,DWORD PTR [rax+0x8]
  41c5ea:	mov    rax,rdi
  41c5ed:	sub    rax,rbp
  41c5f0:	add    rdi,0x8
  41c5f4:	mov    DWORD PTR [rbx-0x4],eax
  41c5f7:	mov    DWORD PTR [rbx-0x8],edx
  41c5fa:	cmp    rsi,0x20
  41c5fe:	je     0x41c635
  41c600:	mov    rcx,rsi
  41c603:	call   0x41cc30
  41c608:	test   rax,rax
  41c60b:	jne    0x41c5d2
  41c60d:	test   rsi,rsi
  41c610:	je     0x41c58c
  41c616:	mov    edx,esi
  41c618:	nop    DWORD PTR [rax+rax*1+0x0]
  41c620:	mov    r8,rbp
  41c623:	lea    rcx,[rip+0x4dcd6]        # 0x46a300
  41c62a:	call   QWORD PTR [rip+0x7fd4c]        # 0x49c37c
  41c630:	jmp    0x41c58c
  41c635:	mov    edx,0x20
  41c63a:	jmp    0x41c620
  41c63c:	nop    DWORD PTR [rax+0x0]
  41c640:	push   rbx
  41c641:	sub    rsp,0x20
  41c645:	mov    rdx,QWORD PTR [rcx]
  41c648:	mov    eax,DWORD PTR [rdx]
  41c64a:	mov    r8d,eax
  41c64d:	and    r8d,0x20ffffff
  41c654:	cmp    r8d,0x20474343
  41c65b:	je     0x41c760
  41c661:	cmp    eax,0xc0000091
  41c666:	mov    rbx,rcx
  41c669:	ja     0x41c6f0
  41c66f:	cmp    eax,0xc000008d
  41c674:	jae    0x41c707
  41c67a:	cmp    eax,0xc0000008
  41c67f:	je     0x41c6b3
  41c681:	ja     0x41c6c0
  41c683:	cmp    eax,0x80000002
  41c688:	je     0x41c6b3
  41c68a:	cmp    eax,0xc0000005
  41c68f:	jne    0x41c6d2
  41c691:	xor    edx,edx
  41c693:	mov    ecx,0xb
  41c698:	call   0x422498
  41c69d:	cmp    rax,0x1
  41c6a1:	je     0x41c7d0
  41c6a7:	test   rax,rax
  41c6aa:	je     0x41c6d2
  41c6ac:	mov    ecx,0xb
  41c6b1:	call   rax
  41c6b3:	mov    eax,0xffffffff
  41c6b8:	add    rsp,0x20
  41c6bc:	pop    rbx
  41c6bd:	ret    
  41c6be:	xchg   ax,ax
  41c6c0:	cmp    eax,0xc000001d
  41c6c5:	je     0x41c786
  41c6cb:	cmp    eax,0xc000008c
  41c6d0:	je     0x41c6b3
  41c6d2:	mov    rax,QWORD PTR [rip+0x4dae7]        # 0x46a1c0
  41c6d9:	test   rax,rax
  41c6dc:	je     0x41c6b8
  41c6de:	mov    rcx,rbx
  41c6e1:	add    rsp,0x20
  41c6e5:	pop    rbx
  41c6e6:	rex.W jmp rax
  41c6e9:	nop    DWORD PTR [rax+0x0]
  41c6f0:	cmp    eax,0xc0000094
  41c6f5:	je     0x41c732
  41c6f7:	ja     0x41c770
  41c6f9:	cmp    eax,0xc0000092
  41c6fe:	je     0x41c6b3
  41c700:	cmp    eax,0xc0000093
  41c705:	jne    0x41c6d2
  41c707:	xor    edx,edx
  41c709:	mov    ecx,0x8
  41c70e:	call   0x422498
  41c713:	cmp    rax,0x1
  41c717:	jne    0x41c744
  41c719:	mov    edx,0x1
  41c71e:	mov    ecx,0x8
  41c723:	call   0x422498
  41c728:	call   0x41be90
  41c72d:	jmp    0x41c6b3
  41c732:	xor    edx,edx
  41c734:	mov    ecx,0x8
  41c739:	call   0x422498
  41c73e:	cmp    rax,0x1
  41c742:	je     0x41c7b2
  41c744:	test   rax,rax
  41c747:	je     0x41c6d2
  41c749:	mov    ecx,0x8
  41c74e:	call   rax
  41c750:	mov    eax,0xffffffff
  41c755:	jmp    0x41c6b8
  41c75a:	nop    WORD PTR [rax+rax*1+0x0]
  41c760:	test   BYTE PTR [rdx+0x4],0x1
  41c764:	jne    0x41c661
  41c76a:	jmp    0x41c6b3
  41c76f:	nop
  41c770:	cmp    eax,0xc0000095
  41c775:	je     0x41c6b3
  41c77b:	cmp    eax,0xc0000096
  41c780:	jne    0x41c6d2
  41c786:	xor    edx,edx
  41c788:	mov    ecx,0x4
  41c78d:	call   0x422498
  41c792:	cmp    rax,0x1
  41c796:	je     0x41c7e4
  41c798:	test   rax,rax
  41c79b:	je     0x41c6d2
  41c7a1:	mov    ecx,0x4
  41c7a6:	call   rax
  41c7a8:	mov    eax,0xffffffff
  41c7ad:	jmp    0x41c6b8
  41c7b2:	mov    edx,0x1
  41c7b7:	mov    ecx,0x8
  41c7bc:	call   0x422498
  41c7c1:	jmp    0x41c6b3
  41c7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7d0:	mov    edx,0x1
  41c7d5:	mov    ecx,0xb
  41c7da:	call   0x422498
  41c7df:	jmp    0x41c6b3
  41c7e4:	mov    edx,0x1
  41c7e9:	mov    ecx,0x4
  41c7ee:	call   0x422498
  41c7f3:	jmp    0x41c6b3
  41c7f8:	nop
  41c7f9:	nop
  41c7fa:	nop
  41c7fb:	nop
  41c7fc:	nop
  41c7fd:	nop
  41c7fe:	nop
  41c7ff:	nop
  41c800:	push   rbp
  41c801:	push   rdi
  41c802:	push   rsi
  41c803:	push   rbx
  41c804:	sub    rsp,0x28
  41c808:	lea    rcx,[rip+0x4dc91]        # 0x46a4a0
  41c80f:	call   QWORD PTR [rip+0x7fa97]        # 0x49c2ac
  41c815:	mov    rbx,QWORD PTR [rip+0x4dc64]        # 0x46a480
  41c81c:	test   rbx,rbx
  41c81f:	je     0x41c854
  41c821:	mov    rbp,QWORD PTR [rip+0x7fb9c]        # 0x49c3c4
  41c828:	mov    rdi,QWORD PTR [rip+0x7fabd]        # 0x49c2ec
  41c82f:	nop
  41c830:	mov    ecx,DWORD PTR [rbx]
  41c832:	call   rbp
  41c834:	mov    rsi,rax
  41c837:	call   rdi
  41c839:	test   eax,eax
  41c83b:	jne    0x41c84b
  41c83d:	test   rsi,rsi
  41c840:	je     0x41c84b
  41c842:	mov    rax,QWORD PTR [rbx+0x8]
  41c846:	mov    rcx,rsi
  41c849:	call   rax
  41c84b:	mov    rbx,QWORD PTR [rbx+0x10]
  41c84f:	test   rbx,rbx
  41c852:	jne    0x41c830
  41c854:	mov    rax,QWORD PTR [rip+0x7faf9]        # 0x49c354
  41c85b:	lea    rcx,[rip+0x4dc3e]        # 0x46a4a0
  41c862:	add    rsp,0x28
  41c866:	pop    rbx
  41c867:	pop    rsi
  41c868:	pop    rdi
  41c869:	pop    rbp
  41c86a:	rex.W jmp rax
  41c86d:	nop    DWORD PTR [rax]
  41c870:	push   rdi
  41c871:	push   rsi
  41c872:	push   rbx
  41c873:	sub    rsp,0x20
  41c877:	mov    eax,DWORD PTR [rip+0x4dc0b]        # 0x46a488
  41c87d:	test   eax,eax
  41c87f:	jne    0x41c890
  41c881:	add    rsp,0x20
  41c885:	pop    rbx
  41c886:	pop    rsi
  41c887:	pop    rdi
  41c888:	ret    
  41c889:	nop    DWORD PTR [rax+0x0]
  41c890:	mov    rsi,rdx
  41c893:	mov    edi,ecx
  41c895:	mov    edx,0x18
  41c89a:	mov    ecx,0x1
  41c89f:	call   0x422590
  41c8a4:	test   rax,rax
  41c8a7:	mov    rbx,rax
  41c8aa:	je     0x41c8e8
  41c8ac:	mov    DWORD PTR [rax],edi
  41c8ae:	mov    QWORD PTR [rax+0x8],rsi
  41c8b2:	lea    rcx,[rip+0x4dbe7]        # 0x46a4a0
  41c8b9:	call   QWORD PTR [rip+0x7f9ed]        # 0x49c2ac
  41c8bf:	mov    rax,QWORD PTR [rip+0x4dbba]        # 0x46a480
  41c8c6:	lea    rcx,[rip+0x4dbd3]        # 0x46a4a0
  41c8cd:	mov    QWORD PTR [rip+0x4dbac],rbx        # 0x46a480
  41c8d4:	mov    QWORD PTR [rbx+0x10],rax
  41c8d8:	call   QWORD PTR [rip+0x7fa76]        # 0x49c354
  41c8de:	xor    eax,eax
  41c8e0:	add    rsp,0x20
  41c8e4:	pop    rbx
  41c8e5:	pop    rsi
  41c8e6:	pop    rdi
  41c8e7:	ret    
  41c8e8:	mov    eax,0xffffffff
  41c8ed:	jmp    0x41c881
  41c8ef:	nop
  41c8f0:	push   rbx
  41c8f1:	sub    rsp,0x20
  41c8f5:	mov    eax,DWORD PTR [rip+0x4db8d]        # 0x46a488
  41c8fb:	test   eax,eax
  41c8fd:	jne    0x41c910
  41c8ff:	xor    eax,eax
  41c901:	add    rsp,0x20
  41c905:	pop    rbx
  41c906:	ret    
  41c907:	nop    WORD PTR [rax+rax*1+0x0]
  41c910:	mov    ebx,ecx
  41c912:	lea    rcx,[rip+0x4db87]        # 0x46a4a0
  41c919:	call   QWORD PTR [rip+0x7f98d]        # 0x49c2ac
  41c91f:	mov    rdx,QWORD PTR [rip+0x4db5a]        # 0x46a480
  41c926:	test   rdx,rdx
  41c929:	je     0x41c947
  41c92b:	mov    eax,DWORD PTR [rdx]
  41c92d:	cmp    eax,ebx
  41c92f:	jne    0x41c93e
  41c931:	jmp    0x41c97f
  41c933:	mov    r8d,DWORD PTR [rax]
  41c936:	cmp    r8d,ebx
  41c939:	je     0x41c960
  41c93b:	mov    rdx,rax
  41c93e:	mov    rax,QWORD PTR [rdx+0x10]
  41c942:	test   rax,rax
  41c945:	jne    0x41c933
  41c947:	lea    rcx,[rip+0x4db52]        # 0x46a4a0
  41c94e:	call   QWORD PTR [rip+0x7fa00]        # 0x49c354
  41c954:	xor    eax,eax
  41c956:	add    rsp,0x20
  41c95a:	pop    rbx
  41c95b:	ret    
  41c95c:	nop    DWORD PTR [rax+0x0]
  41c960:	mov    rcx,rax
  41c963:	mov    rax,QWORD PTR [rax+0x10]
  41c967:	mov    QWORD PTR [rdx+0x10],rax
  41c96b:	call   0x422528
  41c970:	lea    rcx,[rip+0x4db29]        # 0x46a4a0
  41c977:	call   QWORD PTR [rip+0x7f9d7]        # 0x49c354
  41c97d:	jmp    0x41c954
  41c97f:	mov    rax,QWORD PTR [rdx+0x10]
  41c983:	mov    rcx,rdx
  41c986:	mov    QWORD PTR [rip+0x4daf3],rax        # 0x46a480
  41c98d:	jmp    0x41c96b
  41c98f:	nop
  41c990:	push   rbx
  41c991:	sub    rsp,0x20
  41c995:	cmp    edx,0x1
  41c998:	je     0x41ca30
  41c99e:	jb     0x41c9d0
  41c9a0:	cmp    edx,0x2
  41c9a3:	je     0x41c9c0
  41c9a5:	cmp    edx,0x3
  41c9a8:	jne    0x41c9c5
  41c9aa:	mov    eax,DWORD PTR [rip+0x4dad8]        # 0x46a488
  41c9b0:	test   eax,eax
  41c9b2:	je     0x41c9c5
  41c9b4:	call   0x41c800
  41c9b9:	jmp    0x41c9c5
  41c9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9c0:	call   0x41be90
  41c9c5:	mov    eax,0x1
  41c9ca:	add    rsp,0x20
  41c9ce:	pop    rbx
  41c9cf:	ret    
  41c9d0:	mov    eax,DWORD PTR [rip+0x4dab2]        # 0x46a488
  41c9d6:	test   eax,eax
  41c9d8:	jne    0x41ca60
  41c9de:	mov    eax,DWORD PTR [rip+0x4daa4]        # 0x46a488
  41c9e4:	cmp    eax,0x1
  41c9e7:	jne    0x41c9c5
  41c9e9:	mov    rcx,QWORD PTR [rip+0x4da90]        # 0x46a480
  41c9f0:	test   rcx,rcx
  41c9f3:	je     0x41ca06
  41c9f5:	mov    rbx,QWORD PTR [rcx+0x10]
  41c9f9:	call   0x422528
  41c9fe:	test   rbx,rbx
  41ca01:	mov    rcx,rbx
  41ca04:	jne    0x41c9f5
  41ca06:	lea    rcx,[rip+0x4da93]        # 0x46a4a0
  41ca0d:	mov    QWORD PTR [rip+0x4da68],0x0        # 0x46a480
  41ca18:	mov    DWORD PTR [rip+0x4da66],0x0        # 0x46a488
  41ca22:	call   QWORD PTR [rip+0x7f87c]        # 0x49c2a4
  41ca28:	jmp    0x41c9c5
  41ca2a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca30:	mov    eax,DWORD PTR [rip+0x4da52]        # 0x46a488
  41ca36:	test   eax,eax
  41ca38:	je     0x41ca50
  41ca3a:	mov    eax,0x1
  41ca3f:	mov    DWORD PTR [rip+0x4da3f],0x1        # 0x46a488
  41ca49:	add    rsp,0x20
  41ca4d:	pop    rbx
  41ca4e:	ret    
  41ca4f:	nop
  41ca50:	lea    rcx,[rip+0x4da49]        # 0x46a4a0
  41ca57:	call   QWORD PTR [rip+0x7f8e7]        # 0x49c344
  41ca5d:	jmp    0x41ca3a
  41ca5f:	nop
  41ca60:	call   0x41c800
  41ca65:	jmp    0x41c9de
  41ca6a:	nop
  41ca6b:	nop
  41ca6c:	nop
  41ca6d:	nop
  41ca6e:	nop
  41ca6f:	nop
  41ca70:	movsxd rax,DWORD PTR [rcx+0x3c]
  41ca74:	add    rcx,rax
  41ca77:	xor    eax,eax
  41ca79:	cmp    DWORD PTR [rcx],0x4550
  41ca7f:	je     0x41ca83
  41ca81:	repz ret 
  41ca83:	xor    eax,eax
  41ca85:	cmp    WORD PTR [rcx+0x18],0x20b
  41ca8b:	sete   al
  41ca8e:	ret    
  41ca8f:	nop
  41ca90:	cmp    WORD PTR [rcx],0x5a4d
  41ca95:	je     0x41caa0
  41ca97:	xor    eax,eax
  41ca99:	ret    
  41ca9a:	nop    WORD PTR [rax+rax*1+0x0]
  41caa0:	jmp    0x41ca70
  41caa2:	nop    DWORD PTR [rax+0x0]
  41caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cab0:	movsxd rax,DWORD PTR [rcx+0x3c]
  41cab4:	add    rcx,rax
  41cab7:	movzx  eax,WORD PTR [rcx+0x14]
  41cabb:	lea    rax,[rcx+rax*1+0x18]
  41cac0:	movzx  ecx,WORD PTR [rcx+0x6]
  41cac4:	test   ecx,ecx
  41cac6:	je     0x41caf1
  41cac8:	sub    ecx,0x1
  41cacb:	lea    rcx,[rcx+rcx*4]
  41cacf:	lea    r9,[rax+rcx*8+0x28]
  41cad4:	mov    r8d,DWORD PTR [rax+0xc]
  41cad8:	cmp    r8,rdx
  41cadb:	mov    rcx,r8
  41cade:	ja     0x41cae8
  41cae0:	add    ecx,DWORD PTR [rax+0x8]
  41cae3:	cmp    rdx,rcx
  41cae6:	jb     0x41caf3
  41cae8:	add    rax,0x28
  41caec:	cmp    rax,r9
  41caef:	jne    0x41cad4
  41caf1:	xor    eax,eax
  41caf3:	repz ret 
  41caf5:	nop
  41caf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb00:	push   rdi
  41cb01:	push   rsi
  41cb02:	push   rbx
  41cb03:	sub    rsp,0x20
  41cb07:	mov    rsi,rcx
  41cb0a:	call   0x422468
  41cb0f:	cmp    rax,0x8
  41cb13:	ja     0x41cb30
  41cb15:	mov    rbx,QWORD PTR [rip+0x15494]        # 0x431fb0
  41cb1c:	xor    edi,edi
  41cb1e:	cmp    WORD PTR [rbx],0x5a4d
  41cb23:	je     0x41cb40
  41cb25:	mov    rax,rdi
  41cb28:	add    rsp,0x20
  41cb2c:	pop    rbx
  41cb2d:	pop    rsi
  41cb2e:	pop    rdi
  41cb2f:	ret    
  41cb30:	xor    edi,edi
  41cb32:	mov    rax,rdi
  41cb35:	add    rsp,0x20
  41cb39:	pop    rbx
  41cb3a:	pop    rsi
  41cb3b:	pop    rdi
  41cb3c:	ret    
  41cb3d:	nop    DWORD PTR [rax]
  41cb40:	mov    rcx,rbx
  41cb43:	call   0x41ca70
  41cb48:	test   eax,eax
  41cb4a:	je     0x41cb25
  41cb4c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  41cb50:	add    rdx,rbx
  41cb53:	movzx  eax,WORD PTR [rdx+0x14]
  41cb57:	lea    rbx,[rdx+rax*1+0x18]
  41cb5c:	movzx  eax,WORD PTR [rdx+0x6]
  41cb60:	test   eax,eax
  41cb62:	je     0x41cb25
  41cb64:	sub    eax,0x1
  41cb67:	lea    rax,[rax+rax*4]
  41cb6b:	lea    rdi,[rbx+rax*8+0x28]
  41cb70:	jmp    0x41cb7b
  41cb72:	add    rbx,0x28
  41cb76:	cmp    rbx,rdi
  41cb79:	je     0x41cb30
  41cb7b:	mov    r8d,0x8
  41cb81:	mov    rdx,rsi
  41cb84:	mov    rcx,rbx
  41cb87:	call   0x422460
  41cb8c:	test   eax,eax
  41cb8e:	jne    0x41cb72
  41cb90:	mov    rdi,rbx
  41cb93:	mov    rax,rdi
  41cb96:	add    rsp,0x20
  41cb9a:	pop    rbx
  41cb9b:	pop    rsi
  41cb9c:	pop    rdi
  41cb9d:	ret    
  41cb9e:	xchg   ax,ax
  41cba0:	push   rsi
  41cba1:	push   rbx
  41cba2:	sub    rsp,0x28
  41cba6:	mov    rbx,QWORD PTR [rip+0x15403]        # 0x431fb0
  41cbad:	cmp    WORD PTR [rbx],0x5a4d
  41cbb2:	je     0x41cbc0
  41cbb4:	xor    eax,eax
  41cbb6:	add    rsp,0x28
  41cbba:	pop    rbx
  41cbbb:	pop    rsi
  41cbbc:	ret    
  41cbbd:	nop    DWORD PTR [rax]
  41cbc0:	mov    rsi,rcx
  41cbc3:	mov    rcx,rbx
  41cbc6:	call   0x41ca70
  41cbcb:	test   eax,eax
  41cbcd:	je     0x41cbb4
  41cbcf:	sub    rsi,rbx
  41cbd2:	mov    rcx,rbx
  41cbd5:	mov    rdx,rsi
  41cbd8:	add    rsp,0x28
  41cbdc:	pop    rbx
  41cbdd:	pop    rsi
  41cbde:	jmp    0x41cab0
  41cbe3:	nop    DWORD PTR [rax]
  41cbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cbf0:	push   rbx
  41cbf1:	sub    rsp,0x20
  41cbf5:	mov    rbx,QWORD PTR [rip+0x153b4]        # 0x431fb0
  41cbfc:	xor    eax,eax
  41cbfe:	cmp    WORD PTR [rbx],0x5a4d
  41cc03:	je     0x41cc10
  41cc05:	add    rsp,0x20
  41cc09:	pop    rbx
  41cc0a:	ret    
  41cc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc10:	mov    rcx,rbx
  41cc13:	call   0x41ca70
  41cc18:	test   eax,eax
  41cc1a:	je     0x41cc05
  41cc1c:	movsxd rax,DWORD PTR [rbx+0x3c]
  41cc20:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  41cc25:	add    rsp,0x20
  41cc29:	pop    rbx
  41cc2a:	ret    
  41cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc30:	push   rdi
  41cc31:	push   rsi
  41cc32:	push   rbx
  41cc33:	sub    rsp,0x20
  41cc37:	mov    rsi,QWORD PTR [rip+0x15372]        # 0x431fb0
  41cc3e:	xor    edi,edi
  41cc40:	mov    rbx,rcx
  41cc43:	cmp    WORD PTR [rsi],0x5a4d
  41cc48:	je     0x41cc55
  41cc4a:	mov    rax,rdi
  41cc4d:	add    rsp,0x20
  41cc51:	pop    rbx
  41cc52:	pop    rsi
  41cc53:	pop    rdi
  41cc54:	ret    
  41cc55:	mov    rcx,rsi
  41cc58:	call   0x41ca70
  41cc5d:	test   eax,eax
  41cc5f:	je     0x41cc4a
  41cc61:	movsxd rax,DWORD PTR [rsi+0x3c]
  41cc65:	add    rsi,rax
  41cc68:	movzx  eax,WORD PTR [rsi+0x14]
  41cc6c:	lea    rdx,[rsi+rax*1+0x18]
  41cc71:	movzx  eax,WORD PTR [rsi+0x6]
  41cc75:	test   eax,eax
  41cc77:	je     0x41cc4a
  41cc79:	sub    eax,0x1
  41cc7c:	lea    rax,[rax+rax*4]
  41cc80:	lea    rax,[rdx+rax*8+0x28]
  41cc85:	test   BYTE PTR [rdx+0x27],0x20
  41cc89:	je     0x41cc94
  41cc8b:	test   rbx,rbx
  41cc8e:	je     0x41ccb0
  41cc90:	sub    rbx,0x1
  41cc94:	add    rdx,0x28
  41cc98:	cmp    rdx,rax
  41cc9b:	jne    0x41cc85
  41cc9d:	xor    edi,edi
  41cc9f:	mov    rax,rdi
  41cca2:	add    rsp,0x20
  41cca6:	pop    rbx
  41cca7:	pop    rsi
  41cca8:	pop    rdi
  41cca9:	ret    
  41ccaa:	nop    WORD PTR [rax+rax*1+0x0]
  41ccb0:	mov    rdi,rdx
  41ccb3:	mov    rax,rdi
  41ccb6:	add    rsp,0x20
  41ccba:	pop    rbx
  41ccbb:	pop    rsi
  41ccbc:	pop    rdi
  41ccbd:	ret    
  41ccbe:	xchg   ax,ax
  41ccc0:	push   rsi
  41ccc1:	push   rbx
  41ccc2:	sub    rsp,0x28
  41ccc6:	mov    rsi,QWORD PTR [rip+0x152e3]        # 0x431fb0
  41cccd:	xor    ebx,ebx
  41cccf:	cmp    WORD PTR [rsi],0x5a4d
  41ccd4:	je     0x41cce0
  41ccd6:	mov    rax,rbx
  41ccd9:	add    rsp,0x28
  41ccdd:	pop    rbx
  41ccde:	pop    rsi
  41ccdf:	ret    
  41cce0:	mov    rcx,rsi
  41cce3:	call   0x41ca70
  41cce8:	test   eax,eax
  41ccea:	cmovne rbx,rsi
  41ccee:	mov    rax,rbx
  41ccf1:	add    rsp,0x28
  41ccf5:	pop    rbx
  41ccf6:	pop    rsi
  41ccf7:	ret    
  41ccf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd00:	push   rsi
  41cd01:	push   rbx
  41cd02:	sub    rsp,0x28
  41cd06:	mov    rbx,QWORD PTR [rip+0x152a3]        # 0x431fb0
  41cd0d:	xor    eax,eax
  41cd0f:	cmp    WORD PTR [rbx],0x5a4d
  41cd14:	je     0x41cd20
  41cd16:	add    rsp,0x28
  41cd1a:	pop    rbx
  41cd1b:	pop    rsi
  41cd1c:	ret    
  41cd1d:	nop    DWORD PTR [rax]
  41cd20:	mov    rsi,rcx
  41cd23:	mov    rcx,rbx
  41cd26:	call   0x41ca70
  41cd2b:	test   eax,eax
  41cd2d:	je     0x41cd16
  41cd2f:	sub    rsi,rbx
  41cd32:	mov    rcx,rbx
  41cd35:	mov    rdx,rsi
  41cd38:	call   0x41cab0
  41cd3d:	test   rax,rax
  41cd40:	je     0x41cd51
  41cd42:	mov    eax,DWORD PTR [rax+0x24]
  41cd45:	not    eax
  41cd47:	shr    eax,0x1f
  41cd4a:	add    rsp,0x28
  41cd4e:	pop    rbx
  41cd4f:	pop    rsi
  41cd50:	ret    
  41cd51:	xor    eax,eax
  41cd53:	jmp    0x41cd16
  41cd55:	nop
  41cd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd60:	push   rbp
  41cd61:	push   rdi
  41cd62:	push   rsi
  41cd63:	push   rbx
  41cd64:	sub    rsp,0x28
  41cd68:	mov    rdi,QWORD PTR [rip+0x15241]        # 0x431fb0
  41cd6f:	xor    ebp,ebp
  41cd71:	mov    esi,ecx
  41cd73:	cmp    WORD PTR [rdi],0x5a4d
  41cd78:	je     0x41cd90
  41cd7a:	mov    rax,rbp
  41cd7d:	add    rsp,0x28
  41cd81:	pop    rbx
  41cd82:	pop    rsi
  41cd83:	pop    rdi
  41cd84:	pop    rbp
  41cd85:	ret    
  41cd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd90:	mov    rcx,rdi
  41cd93:	call   0x41ca70
  41cd98:	test   eax,eax
  41cd9a:	je     0x41cd7a
  41cd9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  41cda0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  41cda7:	test   edx,edx
  41cda9:	je     0x41cd7a
  41cdab:	mov    ebx,edx
  41cdad:	mov    rcx,rdi
  41cdb0:	mov    rdx,rbx
  41cdb3:	call   0x41cab0
  41cdb8:	test   rax,rax
  41cdbb:	je     0x41cd7a
  41cdbd:	add    rbx,rdi
  41cdc0:	mov    rdx,rbx
  41cdc3:	jne    0x41cdd7
  41cdc5:	jmp    0x41cd7a
  41cdc7:	nop    WORD PTR [rax+rax*1+0x0]
  41cdd0:	sub    esi,0x1
  41cdd3:	add    rdx,0x14
  41cdd7:	mov    ecx,DWORD PTR [rdx+0x4]
  41cdda:	test   ecx,ecx
  41cddc:	jne    0x41cde5
  41cdde:	mov    eax,DWORD PTR [rdx+0xc]
  41cde1:	test   eax,eax
  41cde3:	je     0x41ce00
  41cde5:	test   esi,esi
  41cde7:	jg     0x41cdd0
  41cde9:	mov    ebp,DWORD PTR [rdx+0xc]
  41cdec:	add    rbp,rdi
  41cdef:	mov    rax,rbp
  41cdf2:	add    rsp,0x28
  41cdf6:	pop    rbx
  41cdf7:	pop    rsi
  41cdf8:	pop    rdi
  41cdf9:	pop    rbp
  41cdfa:	ret    
  41cdfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce00:	xor    ebp,ebp
  41ce02:	mov    rax,rbp
  41ce05:	add    rsp,0x28
  41ce09:	pop    rbx
  41ce0a:	pop    rsi
  41ce0b:	pop    rdi
  41ce0c:	pop    rbp
  41ce0d:	ret    
  41ce0e:	nop
  41ce0f:	nop
  41ce10:	push   rcx
  41ce11:	push   rax
  41ce12:	cmp    rax,0x1000
  41ce18:	lea    rcx,[rsp+0x18]
  41ce1d:	jb     0x41ce38
  41ce1f:	sub    rcx,0x1000
  41ce26:	or     QWORD PTR [rcx],0x0
  41ce2a:	sub    rax,0x1000
  41ce30:	cmp    rax,0x1000
  41ce36:	ja     0x41ce1f
  41ce38:	sub    rcx,rax
  41ce3b:	or     QWORD PTR [rcx],0x0
  41ce3f:	pop    rax
  41ce40:	pop    rcx
  41ce41:	ret    
  41ce42:	nop
  41ce43:	nop
  41ce44:	nop
  41ce45:	nop
  41ce46:	nop
  41ce47:	nop
  41ce48:	nop
  41ce49:	nop
  41ce4a:	nop
  41ce4b:	nop
  41ce4c:	nop
  41ce4d:	nop
  41ce4e:	nop
  41ce4f:	nop
  41ce50:	push   rdi
  41ce51:	push   rsi
  41ce52:	push   rbx
  41ce53:	sub    rsp,0x130
  41ce5a:	mov    rbx,rcx
  41ce5d:	call   0x422638
  41ce62:	test   rbx,rbx
  41ce65:	mov    DWORD PTR [rax],0x0
  41ce6b:	je     0x41d01e
  41ce71:	cmp    BYTE PTR [rbx],0x0
  41ce74:	je     0x41cfe0
  41ce7a:	mov    rcx,rbx
  41ce7d:	call   QWORD PTR [rip+0x7f459]        # 0x49c2dc
  41ce83:	cmp    eax,0xffffffff
  41ce86:	je     0x41d000
  41ce8c:	test   al,0x10
  41ce8e:	je     0x41cfe0
  41ce94:	lea    rdi,[rsp+0x20]
  41ce99:	mov    rdx,rbx
  41ce9c:	mov    r8d,0x104
  41cea2:	mov    rcx,rdi
  41cea5:	mov    rbx,rdi
  41cea8:	call   0x422610
  41cead:	mov    r8d,DWORD PTR [rbx]
  41ceb0:	add    rbx,0x4
  41ceb4:	lea    eax,[r8-0x1010101]
  41cebb:	not    r8d
  41cebe:	and    eax,r8d
  41cec1:	and    eax,0x80808080
  41cec6:	je     0x41cead
  41cec8:	mov    edx,eax
  41ceca:	shr    edx,0x10
  41cecd:	test   eax,0x8080
  41ced2:	cmove  eax,edx
  41ced5:	lea    rdx,[rbx+0x2]
  41ced9:	cmove  rbx,rdx
  41cedd:	add    al,al
  41cedf:	sbb    rbx,0x3
  41cee3:	sub    rbx,rdi
  41cee6:	lea    rcx,[rbx+0x24b]
  41ceed:	call   0x4224e8
  41cef2:	test   rax,rax
  41cef5:	mov    rsi,rax
  41cef8:	je     0x41d00f
  41cefe:	lea    r9,[rax+0x244]
  41cf05:	lea    r8,[rbx+0x1]
  41cf09:	mov    rdx,rdi
  41cf0c:	mov    rcx,r9
  41cf0f:	call   0x4224d8
  41cf14:	cmp    BYTE PTR [rsi+0x244],0x0
  41cf1b:	mov    r9,rax
  41cf1e:	je     0x41cf40
  41cf20:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  41cf28:	cmp    al,0x2f
  41cf2a:	je     0x41cf40
  41cf2c:	cmp    al,0x5c
  41cf2e:	je     0x41cf40
  41cf30:	mov    r8d,0x5c
  41cf36:	mov    WORD PTR [r9+rbx*1],r8w
  41cf3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf40:	mov    rcx,r9
  41cf43:	mov    eax,DWORD PTR [rcx]
  41cf45:	add    rcx,0x4
  41cf49:	lea    edx,[rax-0x1010101]
  41cf4f:	not    eax
  41cf51:	and    edx,eax
  41cf53:	and    edx,0x80808080
  41cf59:	je     0x41cf43
  41cf5b:	mov    eax,edx
  41cf5d:	shr    eax,0x10
  41cf60:	test   edx,0x8080
  41cf66:	cmove  edx,eax
  41cf69:	lea    rax,[rcx+0x2]
  41cf6d:	cmove  rcx,rax
  41cf71:	add    dl,dl
  41cf73:	mov    eax,0x2a
  41cf78:	sbb    rcx,0x3
  41cf7c:	xor    edx,edx
  41cf7e:	mov    WORD PTR [rcx],ax
  41cf81:	mov    WORD PTR [rsi+0x12c],dx
  41cf88:	lea    rdx,[rsi+0x130]
  41cf8f:	xor    ecx,ecx
  41cf91:	xor    eax,eax
  41cf93:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41cf9e:	mov    WORD PTR [rsi+0x12e],cx
  41cfa5:	mov    rdi,rdx
  41cfa8:	mov    ecx,0x20
  41cfad:	mov    DWORD PTR [rsi+0x240],0x0
  41cfb7:	mov    DWORD PTR [rsi+0x128],0x0
  41cfc1:	rep stos QWORD PTR es:[rdi],rax
  41cfc4:	mov    rax,rsi
  41cfc7:	mov    DWORD PTR [rdi],0x0
  41cfcd:	add    rsp,0x130
  41cfd4:	pop    rbx
  41cfd5:	pop    rsi
  41cfd6:	pop    rdi
  41cfd7:	ret    
  41cfd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfe0:	call   0x422638
  41cfe5:	mov    DWORD PTR [rax],0x14
  41cfeb:	xor    eax,eax
  41cfed:	add    rsp,0x130
  41cff4:	pop    rbx
  41cff5:	pop    rsi
  41cff6:	pop    rdi
  41cff7:	ret    
  41cff8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d000:	call   0x422638
  41d005:	mov    DWORD PTR [rax],0x2
  41d00b:	xor    eax,eax
  41d00d:	jmp    0x41cfcd
  41d00f:	call   0x422638
  41d014:	mov    DWORD PTR [rax],0xc
  41d01a:	xor    eax,eax
  41d01c:	jmp    0x41cfcd
  41d01e:	call   0x422638
  41d023:	mov    DWORD PTR [rax],0xe
  41d029:	xor    eax,eax
  41d02b:	jmp    0x41cfcd
  41d02d:	nop    DWORD PTR [rax]
  41d030:	push   rbp
  41d031:	push   rdi
  41d032:	push   rsi
  41d033:	push   rbx
  41d034:	sub    rsp,0x158
  41d03b:	mov    rbx,rcx
  41d03e:	call   0x422638
  41d043:	test   rbx,rbx
  41d046:	mov    DWORD PTR [rax],0x0
  41d04c:	je     0x41d23d
  41d052:	mov    eax,DWORD PTR [rbx+0x240]
  41d058:	test   eax,eax
  41d05a:	js     0x41d1df
  41d060:	lea    rdi,[rsp+0x20]
  41d065:	je     0x41d114
  41d06b:	mov    rcx,QWORD PTR [rbx+0x238]
  41d072:	mov    rdx,rdi
  41d075:	call   0x4223f0
  41d07a:	cmp    eax,0xffffffff
  41d07d:	mov    ebp,eax
  41d07f:	je     0x41d185
  41d085:	mov    eax,DWORD PTR [rsp+0x20]
  41d089:	lea    rsi,[rbx+0x24]
  41d08d:	lea    rdx,[rdi+0x28]
  41d091:	mov    r8d,0x104
  41d097:	mov    rcx,rsi
  41d09a:	mov    DWORD PTR [rbx],eax
  41d09c:	mov    rax,QWORD PTR [rsp+0x28]
  41d0a1:	mov    QWORD PTR [rbx+0x8],rax
  41d0a5:	mov    rax,QWORD PTR [rsp+0x30]
  41d0aa:	mov    QWORD PTR [rbx+0x10],rax
  41d0ae:	mov    rax,QWORD PTR [rsp+0x38]
  41d0b3:	mov    QWORD PTR [rbx+0x18],rax
  41d0b7:	mov    rax,QWORD PTR [rsp+0x40]
  41d0bc:	mov    DWORD PTR [rbx+0x20],eax
  41d0bf:	call   0x422458
  41d0c4:	test   ebp,ebp
  41d0c6:	jne    0x41d1b3
  41d0cc:	mov    eax,DWORD PTR [rbx+0x240]
  41d0d2:	add    eax,0x1
  41d0d5:	test   eax,eax
  41d0d7:	mov    DWORD PTR [rbx+0x240],eax
  41d0dd:	jle    0x41d1df
  41d0e3:	mov    rcx,rsi
  41d0e6:	call   0x422468
  41d0eb:	lea    rcx,[rbx+0x130]
  41d0f2:	mov    WORD PTR [rbx+0x12e],ax
  41d0f9:	mov    rdx,rsi
  41d0fc:	call   0x422480
  41d101:	lea    rax,[rbx+0x128]
  41d108:	add    rsp,0x158
  41d10f:	pop    rbx
  41d110:	pop    rsi
  41d111:	pop    rdi
  41d112:	pop    rbp
  41d113:	ret    
  41d114:	lea    rcx,[rbx+0x244]
  41d11b:	mov    rdx,rdi
  41d11e:	call   0x422620
  41d123:	cmp    rax,0xffffffffffffffff
  41d127:	mov    rbp,rax
  41d12a:	je     0x41d1f0
  41d130:	mov    eax,DWORD PTR [rsp+0x20]
  41d134:	lea    rsi,[rbx+0x24]
  41d138:	lea    rdx,[rdi+0x28]
  41d13c:	mov    r8d,0x104
  41d142:	mov    rcx,rsi
  41d145:	mov    DWORD PTR [rbx],eax
  41d147:	mov    rax,QWORD PTR [rsp+0x28]
  41d14c:	mov    QWORD PTR [rbx+0x8],rax
  41d150:	mov    rax,QWORD PTR [rsp+0x30]
  41d155:	mov    QWORD PTR [rbx+0x10],rax
  41d159:	mov    rax,QWORD PTR [rsp+0x38]
  41d15e:	mov    QWORD PTR [rbx+0x18],rax
  41d162:	mov    rax,QWORD PTR [rsp+0x40]
  41d167:	mov    DWORD PTR [rbx+0x20],eax
  41d16a:	call   0x422458
  41d16f:	mov    QWORD PTR [rbx+0x238],rbp
  41d176:	mov    DWORD PTR [rbx+0x240],0x1
  41d180:	jmp    0x41d0e3
  41d185:	lea    rdi,[rbx+0x8]
  41d189:	mov    rcx,rbx
  41d18c:	xor    eax,eax
  41d18e:	mov    QWORD PTR [rbx],0x0
  41d195:	mov    QWORD PTR [rbx+0x120],0x0
  41d1a0:	and    rdi,0xfffffffffffffff8
  41d1a4:	sub    rcx,rdi
  41d1a7:	add    ecx,0x128
  41d1ad:	shr    ecx,0x3
  41d1b0:	rep stos QWORD PTR es:[rdi],rax
  41d1b3:	call   QWORD PTR [rip+0x7f133]        # 0x49c2ec
  41d1b9:	cmp    eax,0x12
  41d1bc:	je     0x41d230
  41d1be:	mov    rcx,QWORD PTR [rbx+0x238]
  41d1c5:	call   0x422628
  41d1ca:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d1d5:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41d1df:	xor    eax,eax
  41d1e1:	add    rsp,0x158
  41d1e8:	pop    rbx
  41d1e9:	pop    rsi
  41d1ea:	pop    rdi
  41d1eb:	pop    rbp
  41d1ec:	ret    
  41d1ed:	nop    DWORD PTR [rax]
  41d1f0:	lea    rdi,[rbx+0x8]
  41d1f4:	mov    rcx,rbx
  41d1f7:	xor    eax,eax
  41d1f9:	mov    QWORD PTR [rbx],0x0
  41d200:	mov    QWORD PTR [rbx+0x120],0x0
  41d20b:	and    rdi,0xfffffffffffffff8
  41d20f:	sub    rcx,rdi
  41d212:	add    ecx,0x128
  41d218:	shr    ecx,0x3
  41d21b:	rep stos QWORD PTR es:[rdi],rax
  41d21e:	mov    QWORD PTR [rbx+0x238],rbp
  41d225:	mov    DWORD PTR [rbx+0x240],ebp
  41d22b:	xor    eax,eax
  41d22d:	jmp    0x41d1e1
  41d22f:	nop
  41d230:	call   0x422638
  41d235:	mov    DWORD PTR [rax],0x0
  41d23b:	jmp    0x41d1be
  41d23d:	call   0x422638
  41d242:	mov    DWORD PTR [rax],0xe
  41d248:	xor    eax,eax
  41d24a:	jmp    0x41d108
  41d24f:	nop
  41d250:	push   rsi
  41d251:	push   rbx
  41d252:	sub    rsp,0x28
  41d256:	mov    rsi,rcx
  41d259:	call   0x422638
  41d25e:	test   rsi,rsi
  41d261:	mov    DWORD PTR [rax],0x0
  41d267:	je     0x41d290
  41d269:	mov    rcx,QWORD PTR [rsi+0x238]
  41d270:	xor    ebx,ebx
  41d272:	cmp    rcx,0xffffffffffffffff
  41d276:	je     0x41d27f
  41d278:	call   0x422628
  41d27d:	mov    ebx,eax
  41d27f:	mov    rcx,rsi
  41d282:	call   0x422528
  41d287:	mov    eax,ebx
  41d289:	add    rsp,0x28
  41d28d:	pop    rbx
  41d28e:	pop    rsi
  41d28f:	ret    
  41d290:	call   0x422638
  41d295:	mov    DWORD PTR [rax],0xe
  41d29b:	mov    eax,0xffffffff
  41d2a0:	jmp    0x41d289
  41d2a2:	nop    DWORD PTR [rax+0x0]
  41d2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d2b0:	push   rbx
  41d2b1:	sub    rsp,0x20
  41d2b5:	mov    rbx,rcx
  41d2b8:	call   0x422638
  41d2bd:	test   rbx,rbx
  41d2c0:	mov    DWORD PTR [rax],0x0
  41d2c6:	je     0x41d2f5
  41d2c8:	mov    rcx,QWORD PTR [rbx+0x238]
  41d2cf:	cmp    rcx,0xffffffffffffffff
  41d2d3:	je     0x41d2da
  41d2d5:	call   0x422628
  41d2da:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d2e5:	mov    DWORD PTR [rbx+0x240],0x0
  41d2ef:	add    rsp,0x20
  41d2f3:	pop    rbx
  41d2f4:	ret    
  41d2f5:	call   0x422638
  41d2fa:	mov    DWORD PTR [rax],0xe
  41d300:	jmp    0x41d2ef
  41d302:	nop    DWORD PTR [rax+0x0]
  41d306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d310:	push   rbx
  41d311:	sub    rsp,0x20
  41d315:	mov    rbx,rcx
  41d318:	call   0x422638
  41d31d:	test   rbx,rbx
  41d320:	mov    DWORD PTR [rax],0x0
  41d326:	je     0x41d334
  41d328:	mov    eax,DWORD PTR [rbx+0x240]
  41d32e:	add    rsp,0x20
  41d332:	pop    rbx
  41d333:	ret    
  41d334:	call   0x422638
  41d339:	mov    DWORD PTR [rax],0xe
  41d33f:	mov    eax,0xffffffff
  41d344:	jmp    0x41d32e
  41d346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d350:	push   rsi
  41d351:	push   rbx
  41d352:	sub    rsp,0x28
  41d356:	mov    rbx,rcx
  41d359:	mov    esi,edx
  41d35b:	call   0x422638
  41d360:	test   rbx,rbx
  41d363:	mov    DWORD PTR [rax],0x0
  41d369:	je     0x41d3dd
  41d36b:	cmp    esi,0xffffffff
  41d36e:	jl     0x41d3d0
  41d370:	je     0x41d3a0
  41d372:	mov    rcx,rbx
  41d375:	call   0x41d2b0
  41d37a:	jmp    0x41d38d
  41d37c:	nop    DWORD PTR [rax+0x0]
  41d380:	mov    rcx,rbx
  41d383:	call   0x41d030
  41d388:	test   rax,rax
  41d38b:	je     0x41d3c7
  41d38d:	cmp    esi,DWORD PTR [rbx+0x240]
  41d393:	jg     0x41d380
  41d395:	add    rsp,0x28
  41d399:	pop    rbx
  41d39a:	pop    rsi
  41d39b:	ret    
  41d39c:	nop    DWORD PTR [rax+0x0]
  41d3a0:	mov    rcx,QWORD PTR [rbx+0x238]
  41d3a7:	cmp    rcx,0xffffffffffffffff
  41d3ab:	je     0x41d3b2
  41d3ad:	call   0x422628
  41d3b2:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d3bd:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41d3c7:	add    rsp,0x28
  41d3cb:	pop    rbx
  41d3cc:	pop    rsi
  41d3cd:	ret    
  41d3ce:	xchg   ax,ax
  41d3d0:	call   0x422638
  41d3d5:	mov    DWORD PTR [rax],0x16
  41d3db:	jmp    0x41d3c7
  41d3dd:	call   0x422638
  41d3e2:	mov    DWORD PTR [rax],0xe
  41d3e8:	jmp    0x41d3c7
  41d3ea:	nop
  41d3eb:	nop
  41d3ec:	nop
  41d3ed:	nop
  41d3ee:	nop
  41d3ef:	nop
  41d3f0:	push   rsi
  41d3f1:	push   rbx
  41d3f2:	sub    rsp,0xe8
  41d3f9:	test   rdx,rdx
  41d3fc:	mov    rbx,rcx
  41d3ff:	mov    rsi,rdx
  41d402:	je     0x41d426
  41d404:	lea    rcx,[rsp+0x30]
  41d409:	call   QWORD PTR [rip+0x7ef2d]        # 0x49c33c
  41d40f:	cmp    eax,0xffffffff
  41d412:	je     0x41d480
  41d414:	mov    edx,DWORD PTR [rsp+0x30]
  41d418:	cmp    eax,0x2
  41d41b:	sete   al
  41d41e:	movzx  eax,al
  41d421:	mov    DWORD PTR [rsi],edx
  41d423:	mov    DWORD PTR [rsi+0x4],eax
  41d426:	test   rbx,rbx
  41d429:	je     0x41d46e
  41d42b:	lea    rcx,[rsp+0x20]
  41d430:	call   QWORD PTR [rip+0x7eef6]        # 0x49c32c
  41d436:	movabs r8,0xfe624e212ac18000
  41d440:	add    r8,QWORD PTR [rsp+0x20]
  41d445:	movabs rdx,0xd6bf94d5e57a42bd
  41d44f:	mov    rax,r8
  41d452:	mul    rdx
  41d455:	shr    rdx,0x17
  41d459:	mov    QWORD PTR [rbx],rdx
  41d45c:	imul   rdx,rdx,0x989680
  41d463:	sub    r8,rdx
  41d466:	imul   r8d,r8d,0x64
  41d46a:	mov    DWORD PTR [rbx+0x8],r8d
  41d46e:	xor    eax,eax
  41d470:	add    rsp,0xe8
  41d477:	pop    rbx
  41d478:	pop    rsi
  41d479:	ret    
  41d47a:	nop    WORD PTR [rax+rax*1+0x0]
  41d480:	mov    DWORD PTR [rsi],0x0
  41d486:	mov    DWORD PTR [rsi+0x4],0x0
  41d48d:	jmp    0x41d426
  41d48f:	nop
  41d490:	push   rbx
  41d491:	sub    rsp,0x30
  41d495:	mov    rbx,rcx
  41d498:	lea    rcx,[rsp+0x20]
  41d49d:	call   0x41d3f0
  41d4a2:	test   eax,eax
  41d4a4:	mov    r9d,eax
  41d4a7:	jne    0x41d4d5
  41d4a9:	mov    rax,QWORD PTR [rsp+0x20]
  41d4ae:	mov    r8d,DWORD PTR [rsp+0x28]
  41d4b3:	mov    edx,0x10624dd3
  41d4b8:	mov    DWORD PTR [rbx],eax
  41d4ba:	mov    eax,r8d
  41d4bd:	sar    r8d,0x1f
  41d4c1:	imul   edx
  41d4c3:	sar    edx,0x6
  41d4c6:	sub    edx,r8d
  41d4c9:	mov    DWORD PTR [rbx+0x4],edx
  41d4cc:	mov    eax,r9d
  41d4cf:	add    rsp,0x30
  41d4d3:	pop    rbx
  41d4d4:	ret    
  41d4d5:	mov    r9d,0xffffffff
  41d4db:	jmp    0x41d4cc
  41d4dd:	nop    DWORD PTR [rax]
  41d4e0:	push   rbx
  41d4e1:	sub    rsp,0x30
  41d4e5:	mov    rbx,rcx
  41d4e8:	lea    rcx,[rsp+0x20]
  41d4ed:	call   0x41d3f0
  41d4f2:	test   eax,eax
  41d4f4:	mov    r9d,eax
  41d4f7:	jne    0x41d525
  41d4f9:	mov    rax,QWORD PTR [rsp+0x20]
  41d4fe:	mov    r8d,DWORD PTR [rsp+0x28]
  41d503:	mov    edx,0x10624dd3
  41d508:	mov    DWORD PTR [rbx],eax
  41d50a:	mov    eax,r8d
  41d50d:	sar    r8d,0x1f
  41d511:	imul   edx
  41d513:	sar    edx,0x6
  41d516:	sub    edx,r8d
  41d519:	mov    DWORD PTR [rbx+0x4],edx
  41d51c:	mov    eax,r9d
  41d51f:	add    rsp,0x30
  41d523:	pop    rbx
  41d524:	ret    
  41d525:	mov    r9d,0xffffffff
  41d52b:	jmp    0x41d51c
  41d52d:	nop
  41d52e:	nop
  41d52f:	nop
  41d530:	test   rdx,rdx
  41d533:	mov    r8,rcx
  41d536:	je     0x41d562
  41d538:	cmp    BYTE PTR [rcx],0x0
  41d53b:	jne    0x41d545
  41d53d:	jmp    0x41d562
  41d53f:	nop
  41d540:	cmp    BYTE PTR [rcx],0x0
  41d543:	je     0x41d560
  41d545:	add    rcx,0x1
  41d549:	mov    rax,rcx
  41d54c:	sub    rax,r8
  41d54f:	cmp    rax,rdx
  41d552:	jb     0x41d540
  41d554:	repz ret 
  41d556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d560:	repz ret 
  41d562:	xor    eax,eax
  41d564:	ret    
  41d565:	nop
  41d566:	nop
  41d567:	nop
  41d568:	nop
  41d569:	nop
  41d56a:	nop
  41d56b:	nop
  41d56c:	nop
  41d56d:	nop
  41d56e:	nop
  41d56f:	nop
  41d570:	push   r12
  41d572:	push   rbp
  41d573:	push   rdi
  41d574:	push   rsi
  41d575:	push   rbx
  41d576:	sub    rsp,0x250
  41d57d:	mov    rbx,rdx
  41d580:	mov    rsi,rcx
  41d583:	mov    ecx,0x4000
  41d588:	mov    r12d,r8d
  41d58b:	call   0x4224e8
  41d590:	test   rbx,rbx
  41d593:	mov    rbp,rax
  41d596:	je     0x41d660
  41d59c:	cmp    WORD PTR [rbx],0x0
  41d5a0:	lea    rax,[rip+0x144a9]        # 0x431a50
  41d5a7:	cmove  rbx,rax
  41d5ab:	test   rsi,rsi
  41d5ae:	je     0x41d651
  41d5b4:	cmp    WORD PTR [rsi],0x0
  41d5b8:	lea    rax,[rip+0x144a5]        # 0x431a64
  41d5bf:	cmove  rsi,rax
  41d5c3:	lea    rdi,[rsp+0x40]
  41d5c8:	xor    ecx,ecx
  41d5ca:	mov    r8d,0x104
  41d5d0:	mov    rdx,rdi
  41d5d3:	call   QWORD PTR [rip+0x7ed1b]        # 0x49c2f4
  41d5d9:	test   eax,eax
  41d5db:	je     0x41d640
  41d5dd:	lea    r8,[rip+0x14484]        # 0x431a68
  41d5e4:	mov    QWORD PTR [rsp+0x30],rsi
  41d5e9:	mov    DWORD PTR [rsp+0x28],r12d
  41d5ee:	mov    QWORD PTR [rsp+0x20],rbx
  41d5f3:	mov    r9,rdi
  41d5f6:	mov    edx,0x1fff
  41d5fb:	mov    rcx,rbp
  41d5fe:	call   0x4225c0
  41d603:	mov    rax,QWORD PTR [rip+0x14b46]        # 0x432150
  41d60a:	mov    eax,DWORD PTR [rax]
  41d60c:	test   eax,eax
  41d60e:	je     0x41d685
  41d610:	xor    ecx,ecx
  41d612:	mov    r9d,0x12012
  41d618:	lea    r8,[rip+0x144e1]        # 0x431b00
  41d61f:	mov    rdx,rbp
  41d622:	call   QWORD PTR [rip+0x7f114]        # 0x49c73c
  41d628:	cmp    eax,0x3
  41d62b:	je     0x41d671
  41d62d:	cmp    eax,0x5
  41d630:	jne    0x41d66c
  41d632:	add    rsp,0x250
  41d639:	pop    rbx
  41d63a:	pop    rsi
  41d63b:	pop    rdi
  41d63c:	pop    rbp
  41d63d:	pop    r12
  41d63f:	ret    
  41d640:	lea    rdx,[rip+0x14409]        # 0x431a50
  41d647:	mov    rcx,rdi
  41d64a:	call   0x422410
  41d64f:	jmp    0x41d5dd
  41d651:	lea    rsi,[rip+0x1440c]        # 0x431a64
  41d658:	jmp    0x41d5c3
  41d65d:	nop    DWORD PTR [rax]
  41d660:	lea    rbx,[rip+0x143e9]        # 0x431a50
  41d667:	jmp    0x41d5ab
  41d66c:	call   0x4225a0
  41d671:	mov    ecx,0x16
  41d676:	call   0x4224b0
  41d67b:	mov    ecx,0x3
  41d680:	call   0x422630
  41d685:	call   0x422678
  41d68a:	lea    rdx,[rip+0x1445f]        # 0x431af0
  41d691:	lea    rcx,[rax+0x60]
  41d695:	mov    r8,rbp
  41d698:	call   0x422518
  41d69d:	call   0x4225a0
  41d6a2:	nop
  41d6a3:	nop    DWORD PTR [rax]
  41d6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6b0:	push   rbp
  41d6b1:	push   rdi
  41d6b2:	push   rsi
  41d6b3:	push   rbx
  41d6b4:	sub    rsp,0x38
  41d6b8:	mov    rdi,rdx
  41d6bb:	mov    DWORD PTR [rsp+0x2c],r8d
  41d6c0:	mov    rbp,rcx
  41d6c3:	call   0x422468
  41d6c8:	lea    rcx,[rax+rax*1+0x2]
  41d6cd:	call   0x4224e8
  41d6d2:	mov    rcx,rdi
  41d6d5:	mov    rsi,rax
  41d6d8:	call   0x422468
  41d6dd:	lea    rcx,[rax+rax*1+0x2]
  41d6e2:	call   0x4224e8
  41d6e7:	movzx  r9d,BYTE PTR [rbp+0x0]
  41d6ec:	xor    r10d,r10d
  41d6ef:	mov    rbx,rax
  41d6f2:	mov    r8d,DWORD PTR [rsp+0x2c]
  41d6f7:	test   r9b,r9b
  41d6fa:	je     0x41d717
  41d6fc:	nop    DWORD PTR [rax+0x0]
  41d700:	mov    WORD PTR [rsi+r10*2],r9w
  41d705:	add    r10,0x1
  41d709:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  41d70f:	test   r9b,r9b
  41d712:	jne    0x41d700
  41d714:	add    r10,r10
  41d717:	movzx  r9d,BYTE PTR [rdi]
  41d71b:	xor    edx,edx
  41d71d:	mov    WORD PTR [rsi+r10*1],dx
  41d722:	xor    r10d,r10d
  41d725:	test   r9b,r9b
  41d728:	je     0x41d746
  41d72a:	nop    WORD PTR [rax+rax*1+0x0]
  41d730:	mov    WORD PTR [rbx+r10*2],r9w
  41d735:	add    r10,0x1
  41d739:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41d73e:	test   r9b,r9b
  41d741:	jne    0x41d730
  41d743:	add    r10,r10
  41d746:	xor    eax,eax
  41d748:	mov    rdx,rbx
  41d74b:	mov    rcx,rsi
  41d74e:	mov    WORD PTR [rbx+r10*1],ax
  41d753:	call   0x41d570
  41d758:	mov    rcx,rsi
  41d75b:	call   0x422528
  41d760:	mov    rcx,rbx
  41d763:	add    rsp,0x38
  41d767:	pop    rbx
  41d768:	pop    rsi
  41d769:	pop    rdi
  41d76a:	pop    rbp
  41d76b:	jmp    0x422528
  41d770:	sub    rsp,0x58
  41d774:	test   r8d,r8d
  41d777:	mov    eax,r8d
  41d77a:	mov    WORD PTR [rsp+0x68],dx
  41d77f:	jne    0x41d794
  41d781:	cmp    dx,0xff
  41d786:	ja     0x41d7da
  41d788:	mov    BYTE PTR [rcx],dl
  41d78a:	mov    eax,0x1
  41d78f:	add    rsp,0x58
  41d793:	ret    
  41d794:	lea    rdx,[rsp+0x4c]
  41d799:	mov    DWORD PTR [rsp+0x28],r9d
  41d79e:	mov    QWORD PTR [rsp+0x20],rcx
  41d7a3:	mov    DWORD PTR [rsp+0x4c],0x0
  41d7ab:	mov    QWORD PTR [rsp+0x30],0x0
  41d7b4:	mov    r9d,0x1
  41d7ba:	mov    QWORD PTR [rsp+0x38],rdx
  41d7bf:	lea    r8,[rsp+0x68]
  41d7c4:	xor    edx,edx
  41d7c6:	mov    ecx,eax
  41d7c8:	call   QWORD PTR [rip+0x7ec1e]        # 0x49c3ec
  41d7ce:	test   eax,eax
  41d7d0:	je     0x41d7da
  41d7d2:	mov    edx,DWORD PTR [rsp+0x4c]
  41d7d6:	test   edx,edx
  41d7d8:	je     0x41d78f
  41d7da:	call   0x422638
  41d7df:	mov    DWORD PTR [rax],0x2a
  41d7e5:	mov    eax,0xffffffff
  41d7ea:	add    rsp,0x58
  41d7ee:	ret    
  41d7ef:	nop
  41d7f0:	push   rdi
  41d7f1:	push   rsi
  41d7f2:	push   rbx
  41d7f3:	sub    rsp,0x30
  41d7f7:	lea    rax,[rsp+0x20]
  41d7fc:	test   rcx,rcx
  41d7ff:	mov    rbx,rcx
  41d802:	mov    esi,edx
  41d804:	cmove  rbx,rax
  41d808:	mov    rax,QWORD PTR [rip+0x147c1]        # 0x431fd0
  41d80f:	mov    rax,QWORD PTR [rax]
  41d812:	mov    edi,DWORD PTR [rax]
  41d814:	call   0x422690
  41d819:	movzx  edx,si
  41d81c:	mov    r8d,eax
  41d81f:	mov    rcx,rbx
  41d822:	mov    r9d,edi
  41d825:	call   0x41d770
  41d82a:	cdqe   
  41d82c:	add    rsp,0x30
  41d830:	pop    rbx
  41d831:	pop    rsi
  41d832:	pop    rdi
  41d833:	ret    
  41d834:	xchg   ax,ax
  41d836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d840:	push   r14
  41d842:	push   r13
  41d844:	push   r12
  41d846:	push   rbp
  41d847:	push   rdi
  41d848:	push   rsi
  41d849:	push   rbx
  41d84a:	sub    rsp,0x30
  41d84e:	mov    r13,rdx
  41d851:	mov    rbx,rcx
  41d854:	mov    rdi,r8
  41d857:	call   0x422690
  41d85c:	mov    ebp,eax
  41d85e:	mov    rax,QWORD PTR [rip+0x1476b]        # 0x431fd0
  41d865:	mov    r14,QWORD PTR [r13+0x0]
  41d869:	mov    rax,QWORD PTR [rax]
  41d86c:	test   r14,r14
  41d86f:	mov    r12d,DWORD PTR [rax]
  41d872:	je     0x41d960
  41d878:	xor    esi,esi
  41d87a:	test   rbx,rbx
  41d87d:	je     0x41d910
  41d883:	test   rdi,rdi
  41d886:	jne    0x41d8a8
  41d888:	jmp    0x41d8d4
  41d88a:	nop    WORD PTR [rax+rax*1+0x0]
  41d890:	movsxd r10,eax
  41d893:	add    rbx,r10
  41d896:	add    rsi,r10
  41d899:	cmp    BYTE PTR [rbx-0x1],0x0
  41d89d:	je     0x41d8f0
  41d89f:	add    r14,0x2
  41d8a3:	cmp    rdi,rsi
  41d8a6:	jbe    0x41d8d4
  41d8a8:	movzx  edx,WORD PTR [r14]
  41d8ac:	mov    r9d,r12d
  41d8af:	mov    r8d,ebp
  41d8b2:	mov    rcx,rbx
  41d8b5:	call   0x41d770
  41d8ba:	test   eax,eax
  41d8bc:	jg     0x41d890
  41d8be:	mov    rax,0xffffffffffffffff
  41d8c5:	add    rsp,0x30
  41d8c9:	pop    rbx
  41d8ca:	pop    rsi
  41d8cb:	pop    rdi
  41d8cc:	pop    rbp
  41d8cd:	pop    r12
  41d8cf:	pop    r13
  41d8d1:	pop    r14
  41d8d3:	ret    
  41d8d4:	mov    rax,rsi
  41d8d7:	mov    QWORD PTR [r13+0x0],r14
  41d8db:	add    rsp,0x30
  41d8df:	pop    rbx
  41d8e0:	pop    rsi
  41d8e1:	pop    rdi
  41d8e2:	pop    rbp
  41d8e3:	pop    r12
  41d8e5:	pop    r13
  41d8e7:	pop    r14
  41d8e9:	ret    
  41d8ea:	nop    WORD PTR [rax+rax*1+0x0]
  41d8f0:	lea    rax,[rsi-0x1]
  41d8f4:	mov    QWORD PTR [r13+0x0],0x0
  41d8fc:	add    rsp,0x30
  41d900:	pop    rbx
  41d901:	pop    rsi
  41d902:	pop    rdi
  41d903:	pop    rbp
  41d904:	pop    r12
  41d906:	pop    r13
  41d908:	pop    r14
  41d90a:	ret    
  41d90b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d910:	test   rdi,rdi
  41d913:	lea    rbx,[rsp+0x20]
  41d918:	jne    0x41d93b
  41d91a:	jmp    0x41d971
  41d91c:	nop    DWORD PTR [rax+0x0]
  41d920:	movsxd rdx,eax
  41d923:	sub    eax,0x1
  41d926:	cdqe   
  41d928:	add    rsi,rdx
  41d92b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  41d930:	je     0x41d979
  41d932:	add    r14,0x2
  41d936:	cmp    rdi,rsi
  41d939:	jbe    0x41d971
  41d93b:	movzx  edx,WORD PTR [r14]
  41d93f:	mov    r9d,r12d
  41d942:	mov    r8d,ebp
  41d945:	mov    rcx,rbx
  41d948:	call   0x41d770
  41d94d:	test   eax,eax
  41d94f:	jg     0x41d920
  41d951:	jmp    0x41d8be
  41d956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d960:	xor    eax,eax
  41d962:	add    rsp,0x30
  41d966:	pop    rbx
  41d967:	pop    rsi
  41d968:	pop    rdi
  41d969:	pop    rbp
  41d96a:	pop    r12
  41d96c:	pop    r13
  41d96e:	pop    r14
  41d970:	ret    
  41d971:	mov    rax,rsi
  41d974:	jmp    0x41d8c5
  41d979:	lea    rax,[rsi-0x1]
  41d97d:	jmp    0x41d8c5
  41d982:	nop
  41d983:	nop
  41d984:	nop
  41d985:	nop
  41d986:	nop
  41d987:	nop
  41d988:	nop
  41d989:	nop
  41d98a:	nop
  41d98b:	nop
  41d98c:	nop
  41d98d:	nop
  41d98e:	nop
  41d98f:	nop
  41d990:	jmp    0x4225d8
  41d995:	nop
  41d996:	nop
  41d997:	nop
  41d998:	nop
  41d999:	nop
  41d99a:	nop
  41d99b:	nop
  41d99c:	nop
  41d99d:	nop
  41d99e:	nop
  41d99f:	nop
  41d9a0:	sub    rsp,0x38
  41d9a4:	mov    r9,rdx
  41d9a7:	mov    QWORD PTR [rsp+0x20],r8
  41d9ac:	mov    rdx,rcx
  41d9af:	xor    r8d,r8d
  41d9b2:	mov    ecx,0x6000
  41d9b7:	call   0x41f2d0
  41d9bc:	add    rsp,0x38
  41d9c0:	ret    
  41d9c1:	nop
  41d9c2:	nop
  41d9c3:	nop
  41d9c4:	nop
  41d9c5:	nop
  41d9c6:	nop
  41d9c7:	nop
  41d9c8:	nop
  41d9c9:	nop
  41d9ca:	nop
  41d9cb:	nop
  41d9cc:	nop
  41d9cd:	nop
  41d9ce:	nop
  41d9cf:	nop
  41d9d0:	push   rsi
  41d9d1:	push   rbx
  41d9d2:	sub    rsp,0x38
  41d9d6:	mov    rbx,rcx
  41d9d9:	mov    rsi,rdx
  41d9dc:	call   0x422678
  41d9e1:	lea    rdx,[rax+0x30]
  41d9e5:	mov    QWORD PTR [rsp+0x20],rsi
  41d9ea:	mov    r9,rbx
  41d9ed:	xor    r8d,r8d
  41d9f0:	mov    ecx,0x6000
  41d9f5:	call   0x41f2d0
  41d9fa:	add    rsp,0x38
  41d9fe:	pop    rbx
  41d9ff:	pop    rsi
  41da00:	ret    
  41da01:	nop
  41da02:	nop
  41da03:	nop
  41da04:	nop
  41da05:	nop
  41da06:	nop
  41da07:	nop
  41da08:	nop
  41da09:	nop
  41da0a:	nop
  41da0b:	nop
  41da0c:	nop
  41da0d:	nop
  41da0e:	nop
  41da0f:	nop
  41da10:	push   rsi
  41da11:	push   rbx
  41da12:	sub    rsp,0x38
  41da16:	test   rdx,rdx
  41da19:	mov    rsi,rcx
  41da1c:	je     0x41da50
  41da1e:	lea    rbx,[rdx-0x1]
  41da22:	mov    QWORD PTR [rsp+0x20],r9
  41da27:	mov    rdx,rcx
  41da2a:	mov    r9,r8
  41da2d:	xor    ecx,ecx
  41da2f:	mov    r8d,ebx
  41da32:	call   0x41f2d0
  41da37:	cmp    eax,ebx
  41da39:	cmovle ebx,eax
  41da3c:	movsxd rbx,ebx
  41da3f:	mov    BYTE PTR [rsi+rbx*1],0x0
  41da43:	add    rsp,0x38
  41da47:	pop    rbx
  41da48:	pop    rsi
  41da49:	ret    
  41da4a:	nop    WORD PTR [rax+rax*1+0x0]
  41da50:	mov    QWORD PTR [rsp+0x20],r9
  41da55:	mov    rdx,rcx
  41da58:	mov    r9,r8
  41da5b:	xor    ecx,ecx
  41da5d:	xor    r8d,r8d
  41da60:	call   0x41f2d0
  41da65:	add    rsp,0x38
  41da69:	pop    rbx
  41da6a:	pop    rsi
  41da6b:	ret    
  41da6c:	nop
  41da6d:	nop
  41da6e:	nop
  41da6f:	nop
  41da70:	push   rbx
  41da71:	sub    rsp,0x30
  41da75:	mov    rbx,rcx
  41da78:	mov    r9,rdx
  41da7b:	mov    QWORD PTR [rsp+0x20],r8
  41da80:	mov    rdx,rcx
  41da83:	xor    r8d,r8d
  41da86:	mov    ecx,0x4000
  41da8b:	call   0x41f2d0
  41da90:	movsxd rdx,eax
  41da93:	mov    BYTE PTR [rbx+rdx*1],0x0
  41da97:	add    rsp,0x30
  41da9b:	pop    rbx
  41da9c:	ret    
  41da9d:	nop
  41da9e:	nop
  41da9f:	nop
  41daa0:	sub    rsp,0x58
  41daa4:	mov    rax,QWORD PTR [rdx]
  41daa7:	mov    r11,rdx
  41daaa:	mov    edx,DWORD PTR [rdx+0x8]
  41daad:	mov    r10,rdx
  41dab0:	and    r10w,0x7fff
  41dab6:	jne    0x41dad4
  41dab8:	mov    rdx,rax
  41dabb:	shr    rdx,0x20
  41dabf:	or     eax,edx
  41dac1:	jne    0x41db40
  41dac3:	mov    DWORD PTR [rsp+0x44],0x0
  41dacb:	movzx  eax,WORD PTR [r11+0x8]
  41dad0:	xor    edx,edx
  41dad2:	jmp    0x41dafb
  41dad4:	cmp    r10w,0x7fff
  41dada:	je     0x41db60
  41dae0:	movzx  eax,WORD PTR [r11+0x8]
  41dae5:	mov    DWORD PTR [rsp+0x44],0x1
  41daed:	mov    edx,eax
  41daef:	and    edx,0x7fff
  41daf5:	sub    edx,0x403e
  41dafb:	and    eax,0x8000
  41db00:	mov    r10,QWORD PTR [rsp+0x80]
  41db08:	mov    DWORD PTR [r10],eax
  41db0b:	lea    rax,[rsp+0x48]
  41db10:	mov    QWORD PTR [rsp+0x30],r9
  41db15:	mov    DWORD PTR [rsp+0x20],ecx
  41db19:	lea    r9,[rsp+0x44]
  41db1e:	lea    rcx,[rip+0xa9eb]        # 0x428510
  41db25:	mov    DWORD PTR [rsp+0x28],r8d
  41db2a:	mov    QWORD PTR [rsp+0x38],rax
  41db2f:	mov    r8,r11
  41db32:	call   0x41ff50
  41db37:	add    rsp,0x58
  41db3b:	ret    
  41db3c:	nop    DWORD PTR [rax+0x0]
  41db40:	test   edx,edx
  41db42:	js     0x41dae0
  41db44:	mov    DWORD PTR [rsp+0x44],0x2
  41db4c:	movzx  eax,WORD PTR [r11+0x8]
  41db51:	mov    edx,0xffffbfc3
  41db56:	jmp    0x41dafb
  41db58:	nop    DWORD PTR [rax+rax*1+0x0]
  41db60:	mov    rdx,rax
  41db63:	shr    rdx,0x20
  41db67:	and    edx,0x7fffffff
  41db6d:	or     edx,eax
  41db6f:	jne    0x41db85
  41db71:	mov    DWORD PTR [rsp+0x44],0x3
  41db79:	movzx  eax,WORD PTR [r11+0x8]
  41db7e:	xor    edx,edx
  41db80:	jmp    0x41dafb
  41db85:	mov    DWORD PTR [rsp+0x44],0x4
  41db8d:	xor    edx,edx
  41db8f:	xor    eax,eax
  41db91:	jmp    0x41db00
  41db96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dba0:	push   rbx
  41dba1:	sub    rsp,0x20
  41dba5:	mov    rbx,rdx
  41dba8:	mov    edx,DWORD PTR [rdx+0x8]
  41dbab:	test   dh,0x40
  41dbae:	jne    0x41dbb8
  41dbb0:	mov    eax,DWORD PTR [rbx+0x24]
  41dbb3:	cmp    DWORD PTR [rbx+0x28],eax
  41dbb6:	jle    0x41dbca
  41dbb8:	and    dh,0x20
  41dbbb:	jne    0x41dbe0
  41dbbd:	movsxd rax,DWORD PTR [rbx+0x24]
  41dbc1:	mov    rdx,QWORD PTR [rbx]
  41dbc4:	mov    BYTE PTR [rdx+rax*1],cl
  41dbc7:	mov    eax,DWORD PTR [rbx+0x24]
  41dbca:	add    eax,0x1
  41dbcd:	mov    DWORD PTR [rbx+0x24],eax
  41dbd0:	add    rsp,0x20
  41dbd4:	pop    rbx
  41dbd5:	ret    
  41dbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dbe0:	mov    rdx,QWORD PTR [rbx]
  41dbe3:	call   0x422540
  41dbe8:	mov    eax,DWORD PTR [rbx+0x24]
  41dbeb:	add    eax,0x1
  41dbee:	mov    DWORD PTR [rbx+0x24],eax
  41dbf1:	add    rsp,0x20
  41dbf5:	pop    rbx
  41dbf6:	ret    
  41dbf7:	nop    WORD PTR [rax+rax*1+0x0]
  41dc00:	push   r14
  41dc02:	push   r13
  41dc04:	push   r12
  41dc06:	push   rbp
  41dc07:	push   rdi
  41dc08:	push   rsi
  41dc09:	push   rbx
  41dc0a:	sub    rsp,0x40
  41dc0e:	lea    r14,[rsp+0x2c]
  41dc13:	lea    r13,[rsp+0x30]
  41dc18:	mov    ebx,edx
  41dc1a:	mov    rsi,r8
  41dc1d:	xor    edx,edx
  41dc1f:	mov    r12,rcx
  41dc22:	mov    r8,r14
  41dc25:	mov    rcx,r13
  41dc28:	call   0x41d7f0
  41dc2d:	mov    ebp,DWORD PTR [rsi+0x10]
  41dc30:	cmp    ebp,ebx
  41dc32:	jge    0x41dcd9
  41dc38:	test   ebp,ebp
  41dc3a:	js     0x41dcd9
  41dc40:	mov    eax,DWORD PTR [rsi+0xc]
  41dc43:	cmp    ebp,eax
  41dc45:	jge    0x41dce6
  41dc4b:	sub    eax,ebp
  41dc4d:	test   eax,eax
  41dc4f:	mov    DWORD PTR [rsi+0xc],eax
  41dc52:	jle    0x41dc60
  41dc54:	test   BYTE PTR [rsi+0x9],0x4
  41dc58:	je     0x41dcf2
  41dc5e:	xchg   ax,ax
  41dc60:	test   ebp,ebp
  41dc62:	jle    0x41dcbd
  41dc64:	add    r12,0x2
  41dc68:	movzx  edx,WORD PTR [r12-0x2]
  41dc6e:	mov    r8,r14
  41dc71:	mov    rcx,r13
  41dc74:	call   0x41d7f0
  41dc79:	test   eax,eax
  41dc7b:	jle    0x41dcbd
  41dc7d:	sub    eax,0x1
  41dc80:	mov    rbx,r13
  41dc83:	lea    rdi,[r13+rax*1+0x1]
  41dc88:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc90:	add    rbx,0x1
  41dc94:	movsx  ecx,BYTE PTR [rbx-0x1]
  41dc98:	mov    rdx,rsi
  41dc9b:	call   0x41dba0
  41dca0:	cmp    rbx,rdi
  41dca3:	jne    0x41dc90
  41dca5:	sub    ebp,0x1
  41dca8:	jmp    0x41dc60
  41dcaa:	nop    WORD PTR [rax+rax*1+0x0]
  41dcb0:	mov    rdx,rsi
  41dcb3:	mov    ecx,0x20
  41dcb8:	call   0x41dba0
  41dcbd:	mov    eax,DWORD PTR [rsi+0xc]
  41dcc0:	lea    edx,[rax-0x1]
  41dcc3:	test   eax,eax
  41dcc5:	mov    DWORD PTR [rsi+0xc],edx
  41dcc8:	jg     0x41dcb0
  41dcca:	add    rsp,0x40
  41dcce:	pop    rbx
  41dccf:	pop    rsi
  41dcd0:	pop    rdi
  41dcd1:	pop    rbp
  41dcd2:	pop    r12
  41dcd4:	pop    r13
  41dcd6:	pop    r14
  41dcd8:	ret    
  41dcd9:	mov    eax,DWORD PTR [rsi+0xc]
  41dcdc:	mov    ebp,ebx
  41dcde:	cmp    ebp,eax
  41dce0:	jl     0x41dc4b
  41dce6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41dced:	jmp    0x41dc60
  41dcf2:	sub    eax,0x1
  41dcf5:	mov    DWORD PTR [rsi+0xc],eax
  41dcf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd00:	mov    rdx,rsi
  41dd03:	mov    ecx,0x20
  41dd08:	call   0x41dba0
  41dd0d:	mov    eax,DWORD PTR [rsi+0xc]
  41dd10:	lea    edx,[rax-0x1]
  41dd13:	test   eax,eax
  41dd15:	mov    DWORD PTR [rsi+0xc],edx
  41dd18:	jne    0x41dd00
  41dd1a:	jmp    0x41dc60
  41dd1f:	nop
  41dd20:	push   rdi
  41dd21:	push   rsi
  41dd22:	push   rbx
  41dd23:	sub    rsp,0x20
  41dd27:	mov    edi,DWORD PTR [r8+0x10]
  41dd2b:	mov    rsi,rcx
  41dd2e:	mov    rbx,r8
  41dd31:	cmp    edi,edx
  41dd33:	jge    0x41ddb0
  41dd35:	test   edi,edi
  41dd37:	js     0x41ddb0
  41dd39:	mov    eax,DWORD PTR [rbx+0xc]
  41dd3c:	cmp    edi,eax
  41dd3e:	jge    0x41ddb9
  41dd40:	sub    eax,edi
  41dd42:	test   eax,eax
  41dd44:	mov    DWORD PTR [rbx+0xc],eax
  41dd47:	jle    0x41de12
  41dd4d:	test   BYTE PTR [rbx+0x9],0x4
  41dd51:	jne    0x41dde0
  41dd57:	sub    eax,0x1
  41dd5a:	mov    DWORD PTR [rbx+0xc],eax
  41dd5d:	nop    DWORD PTR [rax]
  41dd60:	mov    rdx,rbx
  41dd63:	mov    ecx,0x20
  41dd68:	call   0x41dba0
  41dd6d:	mov    eax,DWORD PTR [rbx+0xc]
  41dd70:	mov    edx,eax
  41dd72:	sub    eax,0x1
  41dd75:	test   edx,edx
  41dd77:	mov    DWORD PTR [rbx+0xc],eax
  41dd7a:	jne    0x41dd60
  41dd7c:	test   edi,edi
  41dd7e:	lea    edx,[rdi-0x1]
  41dd81:	je     0x41de00
  41dd83:	lea    rdi,[rsi+rdx*1+0x1]
  41dd88:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd90:	add    rsi,0x1
  41dd94:	movsx  ecx,BYTE PTR [rsi-0x1]
  41dd98:	mov    rdx,rbx
  41dd9b:	call   0x41dba0
  41dda0:	cmp    rsi,rdi
  41dda3:	jne    0x41dd90
  41dda5:	jmp    0x41ddfd
  41dda7:	nop    WORD PTR [rax+rax*1+0x0]
  41ddb0:	mov    eax,DWORD PTR [rbx+0xc]
  41ddb3:	mov    edi,edx
  41ddb5:	cmp    edi,eax
  41ddb7:	jl     0x41dd40
  41ddb9:	test   edi,edi
  41ddbb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41ddc2:	lea    edx,[rdi-0x1]
  41ddc5:	jne    0x41dd83
  41ddc7:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41ddce:	add    rsp,0x20
  41ddd2:	pop    rbx
  41ddd3:	pop    rsi
  41ddd4:	pop    rdi
  41ddd5:	ret    
  41ddd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dde0:	test   edi,edi
  41dde2:	lea    edx,[rdi-0x1]
  41dde5:	jne    0x41dd83
  41dde7:	sub    eax,0x1
  41ddea:	mov    DWORD PTR [rbx+0xc],eax
  41dded:	nop    DWORD PTR [rax]
  41ddf0:	mov    rdx,rbx
  41ddf3:	mov    ecx,0x20
  41ddf8:	call   0x41dba0
  41ddfd:	mov    eax,DWORD PTR [rbx+0xc]
  41de00:	lea    edx,[rax-0x1]
  41de03:	test   eax,eax
  41de05:	mov    DWORD PTR [rbx+0xc],edx
  41de08:	jg     0x41ddf0
  41de0a:	add    rsp,0x20
  41de0e:	pop    rbx
  41de0f:	pop    rsi
  41de10:	pop    rdi
  41de11:	ret    
  41de12:	test   edi,edi
  41de14:	lea    edx,[rdi-0x1]
  41de17:	jne    0x41dd83
  41de1d:	sub    eax,0x1
  41de20:	mov    DWORD PTR [rbx+0xc],eax
  41de23:	jmp    0x41ddce
  41de25:	nop
  41de26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de30:	sub    rsp,0x38
  41de34:	test   ecx,ecx
  41de36:	mov    DWORD PTR [r8+0x10],0xffffffff
  41de3e:	je     0x41de84
  41de40:	lea    rcx,[rsp+0x20]
  41de45:	mov    r11d,DWORD PTR [r8+0x8]
  41de49:	mov    BYTE PTR [rsp+0x20],0x2d
  41de4e:	lea    r10,[rcx+0x1]
  41de52:	and    r11d,0x20
  41de56:	xor    r9d,r9d
  41de59:	movzx  eax,BYTE PTR [rdx+r9*1]
  41de5e:	and    eax,0xffffffdf
  41de61:	or     eax,r11d
  41de64:	mov    BYTE PTR [r10+r9*1],al
  41de68:	add    r9,0x1
  41de6c:	cmp    r9,0x3
  41de70:	jne    0x41de59
  41de72:	lea    rdx,[r10+0x3]
  41de76:	sub    rdx,rcx
  41de79:	call   0x41dd20
  41de7e:	nop
  41de7f:	add    rsp,0x38
  41de83:	ret    
  41de84:	mov    r11d,DWORD PTR [r8+0x8]
  41de88:	test   r11d,0x100
  41de8f:	je     0x41dea1
  41de91:	lea    rcx,[rsp+0x20]
  41de96:	mov    BYTE PTR [rsp+0x20],0x2b
  41de9b:	lea    r10,[rcx+0x1]
  41de9f:	jmp    0x41de52
  41dea1:	test   r11b,0x40
  41dea5:	je     0x41dec0
  41dea7:	lea    rcx,[rsp+0x20]
  41deac:	mov    BYTE PTR [rsp+0x20],0x20
  41deb1:	lea    r10,[rcx+0x1]
  41deb5:	jmp    0x41de52
  41deb7:	nop    WORD PTR [rax+rax*1+0x0]
  41dec0:	lea    rcx,[rsp+0x20]
  41dec5:	mov    r10,rcx
  41dec8:	jmp    0x41de52
  41deca:	nop    WORD PTR [rax+rax*1+0x0]
  41ded0:	push   rbp
  41ded1:	push   r12
  41ded3:	push   rdi
  41ded4:	push   rsi
  41ded5:	push   rbx
  41ded6:	mov    rbp,rsp
  41ded9:	sub    rsp,0x30
  41dedd:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  41dee1:	mov    rsi,rcx
  41dee4:	je     0x41df80
  41deea:	movzx  edx,WORD PTR [rcx+0x18]
  41deee:	test   dx,dx
  41def1:	je     0x41df52
  41def3:	movsxd rax,DWORD PTR [rsi+0x14]
  41def7:	mov    r12,rsp
  41defa:	add    rax,0xf
  41defe:	and    rax,0xfffffffffffffff0
  41df02:	call   0x41ce10
  41df07:	sub    rsp,rax
  41df0a:	lea    r8,[rbp-0x4]
  41df0e:	mov    DWORD PTR [rbp-0x4],0x0
  41df15:	lea    rbx,[rsp+0x20]
  41df1a:	mov    rcx,rbx
  41df1d:	call   0x41d7f0
  41df22:	test   eax,eax
  41df24:	jle    0x41df70
  41df26:	sub    eax,0x1
  41df29:	lea    rdi,[rbx+rax*1+0x1]
  41df2e:	xchg   ax,ax
  41df30:	add    rbx,0x1
  41df34:	movsx  ecx,BYTE PTR [rbx-0x1]
  41df38:	mov    rdx,rsi
  41df3b:	call   0x41dba0
  41df40:	cmp    rbx,rdi
  41df43:	jne    0x41df30
  41df45:	mov    rsp,r12
  41df48:	mov    rsp,rbp
  41df4b:	pop    rbx
  41df4c:	pop    rsi
  41df4d:	pop    rdi
  41df4e:	pop    r12
  41df50:	pop    rbp
  41df51:	ret    
  41df52:	mov    rdx,rsi
  41df55:	mov    ecx,0x2e
  41df5a:	call   0x41dba0
  41df5f:	nop
  41df60:	mov    rsp,rbp
  41df63:	pop    rbx
  41df64:	pop    rsi
  41df65:	pop    rdi
  41df66:	pop    r12
  41df68:	pop    rbp
  41df69:	ret    
  41df6a:	nop    WORD PTR [rax+rax*1+0x0]
  41df70:	mov    rdx,rsi
  41df73:	mov    ecx,0x2e
  41df78:	call   0x41dba0
  41df7d:	jmp    0x41df45
  41df7f:	nop
  41df80:	mov    DWORD PTR [rbp-0x4],0x0
  41df87:	call   0x4224f0
  41df8c:	mov    rdx,QWORD PTR [rax]
  41df8f:	lea    rcx,[rbp-0x6]
  41df93:	lea    r9,[rbp-0x4]
  41df97:	mov    r8d,0x10
  41df9d:	call   0x4221b0
  41dfa2:	test   eax,eax
  41dfa4:	jle    0x41dfb6
  41dfa6:	movzx  edx,WORD PTR [rbp-0x6]
  41dfaa:	mov    WORD PTR [rsi+0x18],dx
  41dfae:	mov    DWORD PTR [rsi+0x14],eax
  41dfb1:	jmp    0x41deee
  41dfb6:	movzx  edx,WORD PTR [rsi+0x18]
  41dfba:	jmp    0x41dfae
  41dfbc:	nop    DWORD PTR [rax+0x0]
  41dfc0:	push   r12
  41dfc2:	push   rbp
  41dfc3:	push   rdi
  41dfc4:	push   rsi
  41dfc5:	push   rbx
  41dfc6:	sub    rsp,0x20
  41dfca:	mov    esi,r8d
  41dfcd:	mov    ebp,ecx
  41dfcf:	mov    rdi,rdx
  41dfd2:	test   esi,esi
  41dfd4:	mov    rbx,r9
  41dfd7:	mov    r8d,DWORD PTR [r9+0xc]
  41dfdb:	jle    0x41e1b2
  41dfe1:	cmp    esi,r8d
  41dfe4:	jg     0x41e120
  41dfea:	sub    r8d,esi
  41dfed:	mov    DWORD PTR [r9+0xc],r8d
  41dff1:	test   r8d,r8d
  41dff4:	js     0x41e120
  41dffa:	mov    eax,DWORD PTR [rbx+0x10]
  41dffd:	cmp    eax,r8d
  41e000:	jge    0x41e120
  41e006:	sub    r8d,eax
  41e009:	test   r8d,r8d
  41e00c:	mov    DWORD PTR [rbx+0xc],r8d
  41e010:	jle    0x41e12d
  41e016:	test   eax,eax
  41e018:	jle    0x41e265
  41e01e:	sub    r8d,0x1
  41e022:	test   esi,esi
  41e024:	mov    DWORD PTR [rbx+0xc],r8d
  41e028:	jle    0x41e034
  41e02a:	test   BYTE PTR [rbx+0x9],0x10
  41e02e:	jne    0x41e13f
  41e034:	test   r8d,r8d
  41e037:	jle    0x41e07d
  41e039:	test   ebp,ebp
  41e03b:	jne    0x41e04b
  41e03d:	mov    eax,DWORD PTR [rbx+0x8]
  41e040:	test   eax,0x1c0
  41e045:	je     0x41e245
  41e04b:	sub    r8d,0x1
  41e04f:	test   r8d,r8d
  41e052:	mov    DWORD PTR [rbx+0xc],r8d
  41e056:	jle    0x41e07d
  41e058:	test   DWORD PTR [rbx+0x8],0x600
  41e05f:	jne    0x41e07d
  41e061:	jmp    0x41e070
  41e063:	mov    rdx,rbx
  41e066:	mov    ecx,0x20
  41e06b:	call   0x41dba0
  41e070:	mov    eax,DWORD PTR [rbx+0xc]
  41e073:	lea    edx,[rax-0x1]
  41e076:	test   eax,eax
  41e078:	mov    DWORD PTR [rbx+0xc],edx
  41e07b:	jg     0x41e063
  41e07d:	test   ebp,ebp
  41e07f:	jne    0x41e1a0
  41e085:	mov    eax,DWORD PTR [rbx+0x8]
  41e088:	test   ah,0x1
  41e08b:	jne    0x41e1d0
  41e091:	test   al,0x40
  41e093:	jne    0x41e253
  41e099:	mov    edx,DWORD PTR [rbx+0xc]
  41e09c:	test   edx,edx
  41e09e:	jle    0x41e0b3
  41e0a0:	mov    eax,DWORD PTR [rbx+0x8]
  41e0a3:	and    eax,0x600
  41e0a8:	cmp    eax,0x200
  41e0ad:	je     0x41e1e2
  41e0b3:	test   esi,esi
  41e0b5:	jle    0x41e212
  41e0bb:	lea    r12,[rbx+0x20]
  41e0bf:	mov    ebp,0x55555556
  41e0c4:	movzx  eax,BYTE PTR [rdi]
  41e0c7:	mov    ecx,0x30
  41e0cc:	test   al,al
  41e0ce:	je     0x41e0d7
  41e0d0:	add    rdi,0x1
  41e0d4:	movsx  ecx,al
  41e0d7:	mov    rdx,rbx
  41e0da:	call   0x41dba0
  41e0df:	sub    esi,0x1
  41e0e2:	je     0x41e300
  41e0e8:	test   BYTE PTR [rbx+0x9],0x10
  41e0ec:	je     0x41e0c4
  41e0ee:	cmp    WORD PTR [rbx+0x20],0x0
  41e0f3:	je     0x41e0c4
  41e0f5:	mov    eax,esi
  41e0f7:	imul   ebp
  41e0f9:	mov    eax,esi
  41e0fb:	sar    eax,0x1f
  41e0fe:	sub    edx,eax
  41e100:	lea    eax,[rdx+rdx*2]
  41e103:	cmp    esi,eax
  41e105:	jne    0x41e0c4
  41e107:	mov    r8,rbx
  41e10a:	mov    edx,0x1
  41e10f:	mov    rcx,r12
  41e112:	call   0x41dc00
  41e117:	jmp    0x41e0c4
  41e119:	nop    DWORD PTR [rax+0x0]
  41e120:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41e127:	mov    r8d,0xffffffff
  41e12d:	test   esi,esi
  41e12f:	jle    0x41e07d
  41e135:	test   BYTE PTR [rbx+0x9],0x10
  41e139:	je     0x41e07d
  41e13f:	cmp    WORD PTR [rbx+0x20],0x0
  41e144:	je     0x41e034
  41e14a:	lea    ecx,[rsi+0x2]
  41e14d:	mov    edx,0x55555556
  41e152:	mov    eax,ecx
  41e154:	sar    ecx,0x1f
  41e157:	imul   edx
  41e159:	sub    edx,ecx
  41e15b:	cmp    edx,0x1
  41e15e:	jle    0x41e034
  41e164:	test   r8d,r8d
  41e167:	jle    0x41e07d
  41e16d:	mov    eax,r8d
  41e170:	sub    eax,edx
  41e172:	add    eax,0x1
  41e175:	jmp    0x41e189
  41e177:	nop    WORD PTR [rax+rax*1+0x0]
  41e180:	test   r8d,r8d
  41e183:	je     0x41e2f4
  41e189:	sub    r8d,0x1
  41e18d:	cmp    r8d,eax
  41e190:	jne    0x41e180
  41e192:	mov    DWORD PTR [rbx+0xc],r8d
  41e196:	jmp    0x41e034
  41e19b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1a0:	mov    rdx,rbx
  41e1a3:	mov    ecx,0x2d
  41e1a8:	call   0x41dba0
  41e1ad:	jmp    0x41e099
  41e1b2:	test   r8d,r8d
  41e1b5:	jle    0x41dff1
  41e1bb:	sub    r8d,0x1
  41e1bf:	mov    DWORD PTR [r9+0xc],r8d
  41e1c3:	jmp    0x41dffa
  41e1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1d0:	mov    rdx,rbx
  41e1d3:	mov    ecx,0x2b
  41e1d8:	call   0x41dba0
  41e1dd:	jmp    0x41e099
  41e1e2:	sub    edx,0x1
  41e1e5:	mov    DWORD PTR [rbx+0xc],edx
  41e1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1f0:	mov    rdx,rbx
  41e1f3:	mov    ecx,0x30
  41e1f8:	call   0x41dba0
  41e1fd:	mov    eax,DWORD PTR [rbx+0xc]
  41e200:	lea    edx,[rax-0x1]
  41e203:	test   eax,eax
  41e205:	mov    DWORD PTR [rbx+0xc],edx
  41e208:	jg     0x41e1f0
  41e20a:	test   esi,esi
  41e20c:	jg     0x41e0bb
  41e212:	mov    rdx,rbx
  41e215:	mov    ecx,0x30
  41e21a:	call   0x41dba0
  41e21f:	mov    eax,DWORD PTR [rbx+0x10]
  41e222:	test   eax,eax
  41e224:	jg     0x41e292
  41e226:	test   BYTE PTR [rbx+0x9],0x8
  41e22a:	jne    0x41e292
  41e22c:	test   esi,esi
  41e22e:	jne    0x41e2d6
  41e234:	sub    eax,0x1
  41e237:	mov    DWORD PTR [rbx+0x10],eax
  41e23a:	add    rsp,0x20
  41e23e:	pop    rbx
  41e23f:	pop    rsi
  41e240:	pop    rdi
  41e241:	pop    rbp
  41e242:	pop    r12
  41e244:	ret    
  41e245:	test   ah,0x6
  41e248:	je     0x41e070
  41e24e:	jmp    0x41e088
  41e253:	mov    rdx,rbx
  41e256:	mov    ecx,0x20
  41e25b:	call   0x41dba0
  41e260:	jmp    0x41e099
  41e265:	mov    eax,DWORD PTR [rbx+0x8]
  41e268:	test   ah,0x8
  41e26b:	jne    0x41e01e
  41e271:	test   esi,esi
  41e273:	jle    0x41e039
  41e279:	test   ah,0x10
  41e27c:	je     0x41e039
  41e282:	cmp    WORD PTR [rbx+0x20],0x0
  41e287:	jne    0x41e14a
  41e28d:	jmp    0x41e039
  41e292:	mov    rcx,rbx
  41e295:	call   0x41ded0
  41e29a:	test   esi,esi
  41e29c:	je     0x41e2bb
  41e29e:	jmp    0x41e2d3
  41e2a0:	movzx  eax,BYTE PTR [rdi]
  41e2a3:	mov    ecx,0x30
  41e2a8:	test   al,al
  41e2aa:	je     0x41e2b3
  41e2ac:	add    rdi,0x1
  41e2b0:	movsx  ecx,al
  41e2b3:	mov    rdx,rbx
  41e2b6:	call   0x41dba0
  41e2bb:	mov    eax,DWORD PTR [rbx+0x10]
  41e2be:	lea    edx,[rax-0x1]
  41e2c1:	test   eax,eax
  41e2c3:	mov    DWORD PTR [rbx+0x10],edx
  41e2c6:	jg     0x41e2a0
  41e2c8:	add    rsp,0x20
  41e2cc:	pop    rbx
  41e2cd:	pop    rsi
  41e2ce:	pop    rdi
  41e2cf:	pop    rbp
  41e2d0:	pop    r12
  41e2d2:	ret    
  41e2d3:	mov    eax,DWORD PTR [rbx+0x10]
  41e2d6:	add    eax,esi
  41e2d8:	mov    DWORD PTR [rbx+0x10],eax
  41e2db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2e0:	mov    rdx,rbx
  41e2e3:	mov    ecx,0x30
  41e2e8:	call   0x41dba0
  41e2ed:	add    esi,0x1
  41e2f0:	jne    0x41e2e0
  41e2f2:	jmp    0x41e2bb
  41e2f4:	mov    DWORD PTR [rbx+0xc],0x0
  41e2fb:	jmp    0x41e07d
  41e300:	mov    eax,DWORD PTR [rbx+0x10]
  41e303:	test   eax,eax
  41e305:	jle    0x41e311
  41e307:	mov    rcx,rbx
  41e30a:	call   0x41ded0
  41e30f:	jmp    0x41e2bb
  41e311:	test   BYTE PTR [rbx+0x9],0x8
  41e315:	jne    0x41e307
  41e317:	jmp    0x41e234
  41e31c:	nop    DWORD PTR [rax+0x0]
  41e320:	push   rsi
  41e321:	push   rbx
  41e322:	sub    rsp,0x68
  41e326:	mov    r8d,DWORD PTR [rdx+0x10]
  41e32a:	fld    TBYTE PTR [rcx]
  41e32c:	mov    rbx,rdx
  41e32f:	test   r8d,r8d
  41e332:	js     0x41e3d0
  41e338:	lea    rdx,[rsp+0x30]
  41e33d:	lea    r9,[rsp+0x4c]
  41e342:	mov    ecx,0x3
  41e347:	fstp   TBYTE PTR [rsp+0x50]
  41e34b:	mov    rax,QWORD PTR [rsp+0x50]
  41e350:	mov    QWORD PTR [rsp+0x30],rax
  41e355:	mov    rax,QWORD PTR [rsp+0x58]
  41e35a:	mov    QWORD PTR [rsp+0x38],rax
  41e35f:	lea    rax,[rsp+0x48]
  41e364:	mov    QWORD PTR [rsp+0x20],rax
  41e369:	call   0x41daa0
  41e36e:	mov    r8d,DWORD PTR [rsp+0x4c]
  41e373:	mov    rsi,rax
  41e376:	cmp    r8d,0xffff8000
  41e37d:	je     0x41e3e2
  41e37f:	mov    ecx,DWORD PTR [rsp+0x48]
  41e383:	mov    rdx,rax
  41e386:	mov    r9,rbx
  41e389:	call   0x41dfc0
  41e38e:	mov    eax,DWORD PTR [rbx+0xc]
  41e391:	lea    edx,[rax-0x1]
  41e394:	test   eax,eax
  41e396:	mov    DWORD PTR [rbx+0xc],edx
  41e399:	jle    0x41e3be
  41e39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3a0:	mov    rdx,rbx
  41e3a3:	mov    ecx,0x20
  41e3a8:	call   0x41dba0
  41e3ad:	mov    r8d,DWORD PTR [rbx+0xc]
  41e3b1:	lea    r9d,[r8-0x1]
  41e3b5:	test   r8d,r8d
  41e3b8:	mov    DWORD PTR [rbx+0xc],r9d
  41e3bc:	jg     0x41e3a0
  41e3be:	mov    rcx,rsi
  41e3c1:	call   0x41fdb0
  41e3c6:	nop
  41e3c7:	add    rsp,0x68
  41e3cb:	pop    rbx
  41e3cc:	pop    rsi
  41e3cd:	ret    
  41e3ce:	xchg   ax,ax
  41e3d0:	mov    DWORD PTR [rdx+0x10],0x6
  41e3d7:	mov    r8d,0x6
  41e3dd:	jmp    0x41e338
  41e3e2:	mov    ecx,DWORD PTR [rsp+0x48]
  41e3e6:	mov    r8,rbx
  41e3e9:	mov    rdx,rax
  41e3ec:	call   0x41de30
  41e3f1:	mov    rcx,rsi
  41e3f4:	call   0x41fdb0
  41e3f9:	nop
  41e3fa:	add    rsp,0x68
  41e3fe:	pop    rbx
  41e3ff:	pop    rsi
  41e400:	ret    
  41e401:	nop    DWORD PTR [rax+rax*1+0x0]
  41e406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e410:	push   rbp
  41e411:	push   r13
  41e413:	push   r12
  41e415:	push   rdi
  41e416:	push   rsi
  41e417:	push   rbx
  41e418:	sub    rsp,0x28
  41e41c:	lea    rbp,[rsp+0x80]
  41e424:	mov    ebx,DWORD PTR [rdx+0x10]
  41e427:	mov    r11d,DWORD PTR [rdx+0x8]
  41e42b:	mov    r8d,0x0
  41e431:	mov    rsi,rdx
  41e434:	test   ebx,ebx
  41e436:	cmovns r8d,ebx
  41e43a:	add    r8d,0x17
  41e43e:	test   r11d,0x1000
  41e445:	je     0x41e452
  41e447:	cmp    WORD PTR [rdx+0x20],0x0
  41e44c:	jne    0x41e642
  41e452:	movsxd r13,DWORD PTR [rsi+0xc]
  41e456:	movsxd rax,r8d
  41e459:	cmp    r8d,r13d
  41e45c:	cmovl  rax,r13
  41e460:	add    rax,0x1e
  41e464:	and    rax,0xfffffffffffffff0
  41e468:	call   0x41ce10
  41e46d:	sub    rsp,rax
  41e470:	test   r11b,0x80
  41e474:	lea    r12,[rsp+0x20]
  41e479:	je     0x41e48c
  41e47b:	test   rcx,rcx
  41e47e:	js     0x41e6d0
  41e484:	and    r11b,0x7f
  41e488:	mov    DWORD PTR [rsi+0x8],r11d
  41e48c:	test   rcx,rcx
  41e48f:	je     0x41e6d8
  41e495:	mov    r10d,r11d
  41e498:	mov    r8,r12
  41e49b:	movabs r9,0xcccccccccccccccd
  41e4a5:	and    r10d,0x1000
  41e4ac:	jmp    0x41e4e3
  41e4ae:	xchg   ax,ax
  41e4b0:	cmp    r12,rdi
  41e4b3:	je     0x41e4e0
  41e4b5:	test   r10d,r10d
  41e4b8:	je     0x41e4e0
  41e4ba:	cmp    WORD PTR [rsi+0x20],0x0
  41e4bf:	je     0x41e4e0
  41e4c1:	mov    rax,rdi
  41e4c4:	sub    rax,r12
  41e4c7:	cqo    
  41e4c9:	shr    rdx,0x3e
  41e4cd:	add    rax,rdx
  41e4d0:	and    eax,0x3
  41e4d3:	sub    rax,rdx
  41e4d6:	cmp    rax,0x3
  41e4da:	je     0x41e620
  41e4e0:	mov    r8,rdi
  41e4e3:	mov    rax,rcx
  41e4e6:	lea    rdi,[r8+0x1]
  41e4ea:	mul    r9
  41e4ed:	shr    rdx,0x3
  41e4f1:	lea    rax,[rdx+rdx*4]
  41e4f5:	add    rax,rax
  41e4f8:	sub    rcx,rax
  41e4fb:	add    ecx,0x30
  41e4fe:	test   rdx,rdx
  41e501:	mov    BYTE PTR [r8],cl
  41e504:	mov    rcx,rdx
  41e507:	jne    0x41e4b0
  41e509:	test   ebx,ebx
  41e50b:	jle    0x41e545
  41e50d:	mov    rax,r12
  41e510:	sub    rax,rdi
  41e513:	add    eax,ebx
  41e515:	test   eax,eax
  41e517:	jle    0x41e545
  41e519:	sub    eax,0x1
  41e51c:	mov    rdx,rax
  41e51f:	lea    rcx,[rdi+rax*1+0x1]
  41e524:	mov    rax,rdi
  41e527:	nop    WORD PTR [rax+rax*1+0x0]
  41e530:	add    rax,0x1
  41e534:	mov    BYTE PTR [rax-0x1],0x30
  41e538:	cmp    rax,rcx
  41e53b:	jne    0x41e530
  41e53d:	movsxd rax,edx
  41e540:	lea    rdi,[rdi+rax*1+0x1]
  41e545:	cmp    r12,rdi
  41e548:	jne    0x41e555
  41e54a:	test   ebx,ebx
  41e54c:	je     0x41e555
  41e54e:	mov    BYTE PTR [rdi],0x30
  41e551:	add    rdi,0x1
  41e555:	test   r13d,r13d
  41e558:	jle    0x41e5be
  41e55a:	mov    rax,r12
  41e55d:	sub    rax,rdi
  41e560:	add    r13d,eax
  41e563:	test   r13d,r13d
  41e566:	mov    DWORD PTR [rsi+0xc],r13d
  41e56a:	jle    0x41e5be
  41e56c:	test   r11d,0x1c0
  41e573:	je     0x41e57d
  41e575:	sub    r13d,0x1
  41e579:	mov    DWORD PTR [rsi+0xc],r13d
  41e57d:	test   ebx,ebx
  41e57f:	js     0x41e680
  41e585:	test   r11d,0x400
  41e58c:	jne    0x41e5be
  41e58e:	mov    eax,DWORD PTR [rsi+0xc]
  41e591:	lea    edx,[rax-0x1]
  41e594:	test   eax,eax
  41e596:	mov    DWORD PTR [rsi+0xc],edx
  41e599:	jle    0x41e5be
  41e59b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5a0:	mov    rdx,rsi
  41e5a3:	mov    ecx,0x20
  41e5a8:	call   0x41dba0
  41e5ad:	mov    eax,DWORD PTR [rsi+0xc]
  41e5b0:	lea    edx,[rax-0x1]
  41e5b3:	test   eax,eax
  41e5b5:	mov    DWORD PTR [rsi+0xc],edx
  41e5b8:	jg     0x41e5a0
  41e5ba:	mov    r11d,DWORD PTR [rsi+0x8]
  41e5be:	test   r11b,0x80
  41e5c2:	je     0x41e630
  41e5c4:	lea    rbx,[rdi+0x1]
  41e5c8:	mov    BYTE PTR [rdi],0x2d
  41e5cb:	cmp    r12,rbx
  41e5ce:	jae    0x41e5fe
  41e5d0:	sub    rbx,0x1
  41e5d4:	movsx  ecx,BYTE PTR [rbx]
  41e5d7:	mov    rdx,rsi
  41e5da:	call   0x41dba0
  41e5df:	cmp    rbx,r12
  41e5e2:	jne    0x41e5d0
  41e5e4:	mov    eax,DWORD PTR [rsi+0xc]
  41e5e7:	lea    edx,[rax-0x1]
  41e5ea:	test   eax,eax
  41e5ec:	mov    DWORD PTR [rsi+0xc],edx
  41e5ef:	jle    0x41e60b
  41e5f1:	mov    rdx,rsi
  41e5f4:	mov    ecx,0x20
  41e5f9:	call   0x41dba0
  41e5fe:	mov    eax,DWORD PTR [rsi+0xc]
  41e601:	lea    edx,[rax-0x1]
  41e604:	test   eax,eax
  41e606:	mov    DWORD PTR [rsi+0xc],edx
  41e609:	jg     0x41e5f1
  41e60b:	lea    rsp,[rbp-0x58]
  41e60f:	pop    rbx
  41e610:	pop    rsi
  41e611:	pop    rdi
  41e612:	pop    r12
  41e614:	pop    r13
  41e616:	pop    rbp
  41e617:	ret    
  41e618:	nop    DWORD PTR [rax+rax*1+0x0]
  41e620:	lea    rdi,[r8+0x2]
  41e624:	mov    BYTE PTR [r8+0x1],0x2c
  41e629:	jmp    0x41e4e0
  41e62e:	xchg   ax,ax
  41e630:	test   r11d,0x100
  41e637:	je     0x41e660
  41e639:	lea    rbx,[rdi+0x1]
  41e63d:	mov    BYTE PTR [rdi],0x2b
  41e640:	jmp    0x41e5cb
  41e642:	mov    eax,r8d
  41e645:	mov    edx,0x55555556
  41e64a:	imul   edx
  41e64c:	mov    eax,r8d
  41e64f:	sar    eax,0x1f
  41e652:	sub    edx,eax
  41e654:	add    r8d,edx
  41e657:	jmp    0x41e452
  41e65c:	nop    DWORD PTR [rax+0x0]
  41e660:	and    r11d,0x40
  41e664:	mov    rbx,rdi
  41e667:	je     0x41e5cb
  41e66d:	add    rbx,0x1
  41e671:	mov    BYTE PTR [rdi],0x20
  41e674:	jmp    0x41e5cb
  41e679:	nop    DWORD PTR [rax+0x0]
  41e680:	mov    eax,r11d
  41e683:	and    eax,0x600
  41e688:	cmp    eax,0x200
  41e68d:	jne    0x41e585
  41e693:	mov    eax,DWORD PTR [rsi+0xc]
  41e696:	lea    ecx,[rax-0x1]
  41e699:	test   eax,eax
  41e69b:	mov    DWORD PTR [rsi+0xc],ecx
  41e69e:	jle    0x41e5be
  41e6a4:	lea    rdx,[rdi+rcx*1+0x1]
  41e6a9:	mov    rax,rdi
  41e6ac:	nop    DWORD PTR [rax+0x0]
  41e6b0:	add    rax,0x1
  41e6b4:	mov    BYTE PTR [rax-0x1],0x30
  41e6b8:	cmp    rax,rdx
  41e6bb:	jne    0x41e6b0
  41e6bd:	lea    rdi,[rdi+rcx*1+0x1]
  41e6c2:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41e6c9:	jmp    0x41e5be
  41e6ce:	xchg   ax,ax
  41e6d0:	neg    rcx
  41e6d3:	jmp    0x41e48c
  41e6d8:	mov    rdi,r12
  41e6db:	jmp    0x41e509
  41e6e0:	push   rdi
  41e6e1:	push   rsi
  41e6e2:	push   rbx
  41e6e3:	sub    rsp,0x20
  41e6e7:	mov    rsi,r9
  41e6ea:	lea    r9d,[r8-0x1]
  41e6ee:	mov    r8d,0x66666667
  41e6f4:	mov    r10,rdx
  41e6f7:	mov    eax,r9d
  41e6fa:	movsxd rbx,r9d
  41e6fd:	sar    r9d,0x1f
  41e701:	imul   r8d
  41e704:	sar    edx,0x2
  41e707:	mov    r8d,edx
  41e70a:	sub    r8d,r9d
  41e70d:	mov    r9d,0x1
  41e713:	je     0x41e73b
  41e715:	mov    r11d,0x66666667
  41e71b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e720:	mov    eax,r8d
  41e723:	sar    r8d,0x1f
  41e727:	add    r9d,0x1
  41e72b:	imul   r11d
  41e72e:	mov    eax,edx
  41e730:	sar    eax,0x2
  41e733:	sub    eax,r8d
  41e736:	mov    r8d,eax
  41e739:	jne    0x41e720
  41e73b:	mov    edi,DWORD PTR [rsi+0x2c]
  41e73e:	mov    eax,DWORD PTR [rsi+0xc]
  41e741:	cmp    r9d,edi
  41e744:	cmovge edi,r9d
  41e748:	lea    edx,[rdi+0x2]
  41e74b:	cmp    eax,edx
  41e74d:	jg     0x41e7a2
  41e74f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41e756:	mov    r9,rsi
  41e759:	mov    rdx,r10
  41e75c:	mov    r8d,0x1
  41e762:	call   0x41dfc0
  41e767:	mov    ecx,DWORD PTR [rsi+0x8]
  41e76a:	mov    eax,DWORD PTR [rsi+0x2c]
  41e76d:	mov    rdx,rsi
  41e770:	mov    DWORD PTR [rsi+0x10],eax
  41e773:	mov    eax,ecx
  41e775:	and    ecx,0x20
  41e778:	or     eax,0x1c0
  41e77d:	or     ecx,0x45
  41e780:	mov    DWORD PTR [rsi+0x8],eax
  41e783:	call   0x41dba0
  41e788:	lea    r9d,[rdi+0x1]
  41e78c:	add    DWORD PTR [rsi+0xc],r9d
  41e790:	mov    rdx,rsi
  41e793:	mov    rcx,rbx
  41e796:	add    rsp,0x20
  41e79a:	pop    rbx
  41e79b:	pop    rsi
  41e79c:	pop    rdi
  41e79d:	jmp    0x41e410
  41e7a2:	sub    eax,edx
  41e7a4:	mov    DWORD PTR [rsi+0xc],eax
  41e7a7:	jmp    0x41e756
  41e7a9:	nop    DWORD PTR [rax+0x0]
  41e7b0:	push   rsi
  41e7b1:	push   rbx
  41e7b2:	sub    rsp,0x68
  41e7b6:	mov    eax,DWORD PTR [rdx+0x10]
  41e7b9:	fld    TBYTE PTR [rcx]
  41e7bb:	mov    rbx,rdx
  41e7be:	test   eax,eax
  41e7c0:	lea    r8d,[rax+0x1]
  41e7c4:	js     0x41e830
  41e7c6:	lea    rdx,[rsp+0x30]
  41e7cb:	lea    r9,[rsp+0x4c]
  41e7d0:	mov    ecx,0x2
  41e7d5:	fstp   TBYTE PTR [rsp+0x50]
  41e7d9:	mov    rax,QWORD PTR [rsp+0x50]
  41e7de:	mov    QWORD PTR [rsp+0x30],rax
  41e7e3:	mov    rax,QWORD PTR [rsp+0x58]
  41e7e8:	mov    QWORD PTR [rsp+0x38],rax
  41e7ed:	lea    rax,[rsp+0x48]
  41e7f2:	mov    QWORD PTR [rsp+0x20],rax
  41e7f7:	call   0x41daa0
  41e7fc:	mov    r8d,DWORD PTR [rsp+0x4c]
  41e801:	mov    rsi,rax
  41e804:	cmp    r8d,0xffff8000
  41e80b:	je     0x41e840
  41e80d:	mov    ecx,DWORD PTR [rsp+0x48]
  41e811:	mov    r9,rbx
  41e814:	mov    rdx,rax
  41e817:	call   0x41e6e0
  41e81c:	mov    rcx,rsi
  41e81f:	call   0x41fdb0
  41e824:	nop
  41e825:	add    rsp,0x68
  41e829:	pop    rbx
  41e82a:	pop    rsi
  41e82b:	ret    
  41e82c:	nop    DWORD PTR [rax+0x0]
  41e830:	mov    DWORD PTR [rdx+0x10],0x6
  41e837:	mov    r8d,0x7
  41e83d:	jmp    0x41e7c6
  41e83f:	nop
  41e840:	mov    ecx,DWORD PTR [rsp+0x48]
  41e844:	mov    r8,rbx
  41e847:	mov    rdx,rax
  41e84a:	call   0x41de30
  41e84f:	mov    rcx,rsi
  41e852:	call   0x41fdb0
  41e857:	nop
  41e858:	add    rsp,0x68
  41e85c:	pop    rbx
  41e85d:	pop    rsi
  41e85e:	ret    
  41e85f:	nop
  41e860:	push   rsi
  41e861:	push   rbx
  41e862:	sub    rsp,0x78
  41e866:	mov    r8d,DWORD PTR [rdx+0x10]
  41e86a:	fld    TBYTE PTR [rcx]
  41e86c:	mov    rbx,rdx
  41e86f:	test   r8d,r8d
  41e872:	js     0x41e9b0
  41e878:	je     0x41e990
  41e87e:	lea    rdx,[rsp+0x40]
  41e883:	lea    r9,[rsp+0x5c]
  41e888:	mov    ecx,0x2
  41e88d:	fstp   TBYTE PTR [rsp+0x60]
  41e891:	mov    rax,QWORD PTR [rsp+0x60]
  41e896:	mov    QWORD PTR [rsp+0x40],rax
  41e89b:	mov    rax,QWORD PTR [rsp+0x68]
  41e8a0:	mov    QWORD PTR [rsp+0x48],rax
  41e8a5:	lea    rax,[rsp+0x58]
  41e8aa:	mov    QWORD PTR [rsp+0x20],rax
  41e8af:	call   0x41daa0
  41e8b4:	mov    r8d,DWORD PTR [rsp+0x5c]
  41e8b9:	mov    rsi,rax
  41e8bc:	cmp    r8d,0xffff8000
  41e8c3:	je     0x41e9d0
  41e8c9:	cmp    r8d,0xfffffffd
  41e8cd:	jl     0x41e950
  41e8d3:	mov    eax,DWORD PTR [rbx+0x10]
  41e8d6:	cmp    r8d,eax
  41e8d9:	jg     0x41e950
  41e8db:	test   BYTE PTR [rbx+0x9],0x8
  41e8df:	jne    0x41e9c2
  41e8e5:	mov    rcx,rsi
  41e8e8:	mov    DWORD PTR [rsp+0x3c],r8d
  41e8ed:	call   0x422468
  41e8f2:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e8f7:	sub    eax,r8d
  41e8fa:	test   eax,eax
  41e8fc:	mov    DWORD PTR [rbx+0x10],eax
  41e8ff:	js     0x41e9e1
  41e905:	mov    ecx,DWORD PTR [rsp+0x58]
  41e909:	mov    rdx,rsi
  41e90c:	mov    r9,rbx
  41e90f:	call   0x41dfc0
  41e914:	mov    eax,DWORD PTR [rbx+0xc]
  41e917:	lea    edx,[rax-0x1]
  41e91a:	test   eax,eax
  41e91c:	mov    DWORD PTR [rbx+0xc],edx
  41e91f:	jle    0x41e97d
  41e921:	mov    rdx,rbx
  41e924:	mov    ecx,0x20
  41e929:	call   0x41dba0
  41e92e:	mov    r8d,DWORD PTR [rbx+0xc]
  41e932:	lea    r9d,[r8-0x1]
  41e936:	test   r8d,r8d
  41e939:	mov    DWORD PTR [rbx+0xc],r9d
  41e93d:	jg     0x41e921
  41e93f:	mov    rcx,rsi
  41e942:	call   0x41fdb0
  41e947:	nop
  41e948:	add    rsp,0x78
  41e94c:	pop    rbx
  41e94d:	pop    rsi
  41e94e:	ret    
  41e94f:	nop
  41e950:	test   BYTE PTR [rbx+0x9],0x8
  41e954:	jne    0x41e9a2
  41e956:	mov    rcx,rsi
  41e959:	mov    DWORD PTR [rsp+0x3c],r8d
  41e95e:	call   0x422468
  41e963:	mov    r8d,DWORD PTR [rsp+0x3c]
  41e968:	sub    eax,0x1
  41e96b:	mov    DWORD PTR [rbx+0x10],eax
  41e96e:	mov    ecx,DWORD PTR [rsp+0x58]
  41e972:	mov    r9,rbx
  41e975:	mov    rdx,rsi
  41e978:	call   0x41e6e0
  41e97d:	mov    rcx,rsi
  41e980:	call   0x41fdb0
  41e985:	nop
  41e986:	add    rsp,0x78
  41e98a:	pop    rbx
  41e98b:	pop    rsi
  41e98c:	ret    
  41e98d:	nop    DWORD PTR [rax]
  41e990:	mov    DWORD PTR [rdx+0x10],0x1
  41e997:	mov    r8d,0x1
  41e99d:	jmp    0x41e87e
  41e9a2:	sub    DWORD PTR [rbx+0x10],0x1
  41e9a6:	jmp    0x41e96e
  41e9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9b0:	mov    DWORD PTR [rdx+0x10],0x6
  41e9b7:	mov    r8d,0x6
  41e9bd:	jmp    0x41e87e
  41e9c2:	sub    eax,r8d
  41e9c5:	mov    DWORD PTR [rbx+0x10],eax
  41e9c8:	jmp    0x41e905
  41e9cd:	nop    DWORD PTR [rax]
  41e9d0:	mov    ecx,DWORD PTR [rsp+0x58]
  41e9d4:	mov    r8,rbx
  41e9d7:	mov    rdx,rax
  41e9da:	call   0x41de30
  41e9df:	jmp    0x41e97d
  41e9e1:	mov    edx,DWORD PTR [rbx+0xc]
  41e9e4:	test   edx,edx
  41e9e6:	jle    0x41e905
  41e9ec:	add    eax,edx
  41e9ee:	mov    DWORD PTR [rbx+0xc],eax
  41e9f1:	jmp    0x41e905
  41e9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea00:	push   rbp
  41ea01:	push   r14
  41ea03:	push   r13
  41ea05:	push   r12
  41ea07:	push   rdi
  41ea08:	push   rsi
  41ea09:	push   rbx
  41ea0a:	mov    rbp,rsp
  41ea0d:	sub    rsp,0x20
  41ea11:	mov    r10d,0x12
  41ea17:	mov    eax,0x18
  41ea1c:	cmp    ecx,0x6f
  41ea1f:	mov    rbx,r8
  41ea22:	mov    r8d,DWORD PTR [r8+0x10]
  41ea26:	mov    r11d,ecx
  41ea29:	setne  cl
  41ea2c:	mov    edi,DWORD PTR [rbx+0x8]
  41ea2f:	movzx  ecx,cl
  41ea32:	cmovne eax,r10d
  41ea36:	mov    r10b,0x0
  41ea39:	add    ecx,0x3
  41ea3c:	test   r8d,r8d
  41ea3f:	mov    r9,rdx
  41ea42:	cmovns r10d,r8d
  41ea46:	add    r10d,eax
  41ea49:	test   edi,0x1000
  41ea4f:	je     0x41ea5c
  41ea51:	cmp    WORD PTR [rbx+0x20],0x0
  41ea56:	jne    0x41ec23
  41ea5c:	movsxd r12,DWORD PTR [rbx+0xc]
  41ea60:	movsxd rax,r10d
  41ea63:	cmp    r10d,r12d
  41ea66:	cmovl  rax,r12
  41ea6a:	add    rax,0x1e
  41ea6e:	and    rax,0xfffffffffffffff0
  41ea72:	call   0x41ce10
  41ea77:	xor    edx,edx
  41ea79:	sub    rsp,rax
  41ea7c:	cmp    r11d,0x6f
  41ea80:	lea    rsi,[rsp+0x20]
  41ea85:	setne  dl
  41ea88:	test   r9,r9
  41ea8b:	lea    edx,[rdx*8+0x7]
  41ea92:	mov    r10,rsi
  41ea95:	je     0x41ed42
  41ea9b:	mov    r13d,r11d
  41ea9e:	and    r13d,0x20
  41eaa2:	jmp    0x41eab0
  41eaa4:	shr    r9,cl
  41eaa7:	mov    BYTE PTR [r10-0x1],r14b
  41eaab:	test   r9,r9
  41eaae:	je     0x41ead5
  41eab0:	mov    eax,edx
  41eab2:	add    r10,0x1
  41eab6:	and    eax,r9d
  41eab9:	lea    r14d,[rax+0x30]
  41eabd:	cmp    r14b,0x39
  41eac1:	jbe    0x41eaa4
  41eac3:	add    eax,0x37
  41eac6:	shr    r9,cl
  41eac9:	or     eax,r13d
  41eacc:	test   r9,r9
  41eacf:	mov    BYTE PTR [r10-0x1],al
  41ead3:	jne    0x41eab0
  41ead5:	cmp    rsi,r10
  41ead8:	je     0x41ed42
  41eade:	test   r8d,r8d
  41eae1:	jle    0x41eca2
  41eae7:	mov    rax,rsi
  41eaea:	sub    rax,r10
  41eaed:	add    eax,r8d
  41eaf0:	test   eax,eax
  41eaf2:	jle    0x41eca2
  41eaf8:	sub    eax,0x1
  41eafb:	mov    rdx,rax
  41eafe:	lea    rcx,[r10+rax*1+0x1]
  41eb03:	mov    rax,r10
  41eb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb10:	add    rax,0x1
  41eb14:	mov    BYTE PTR [rax-0x1],0x30
  41eb18:	cmp    rax,rcx
  41eb1b:	jne    0x41eb10
  41eb1d:	movsxd rax,edx
  41eb20:	lea    r10,[r10+rax*1+0x1]
  41eb25:	cmp    rsi,r10
  41eb28:	jne    0x41eb40
  41eb2a:	test   r8d,r8d
  41eb2d:	je     0x41eb40
  41eb2f:	mov    BYTE PTR [r10],0x30
  41eb33:	add    r10,0x1
  41eb37:	nop    WORD PTR [rax+rax*1+0x0]
  41eb40:	mov    rax,r10
  41eb43:	sub    rax,rsi
  41eb46:	cmp    r12d,eax
  41eb49:	jle    0x41ec70
  41eb4f:	sub    r12d,eax
  41eb52:	test   r12d,r12d
  41eb55:	mov    DWORD PTR [rbx+0xc],r12d
  41eb59:	jle    0x41eda7
  41eb5f:	cmp    r11d,0x6f
  41eb63:	mov    edx,DWORD PTR [rbx+0x8]
  41eb66:	je     0x41ed30
  41eb6c:	test   dh,0x8
  41eb6f:	je     0x41ecf0
  41eb75:	lea    r13d,[r12-0x2]
  41eb7a:	test   r13d,r13d
  41eb7d:	jle    0x41eb88
  41eb7f:	test   r8d,r8d
  41eb82:	js     0x41ec3d
  41eb88:	test   r13d,r13d
  41eb8b:	mov    BYTE PTR [r10],r11b
  41eb8e:	lea    rdi,[r10+0x2]
  41eb92:	mov    BYTE PTR [r10+0x1],0x30
  41eb97:	jle    0x41ec98
  41eb9d:	and    dh,0x4
  41eba0:	jne    0x41ecc3
  41eba6:	lea    r14d,[r13-0x1]
  41ebaa:	mov    r12d,r14d
  41ebad:	nop    DWORD PTR [rax]
  41ebb0:	sub    r12d,0x1
  41ebb4:	mov    rdx,rbx
  41ebb7:	mov    ecx,0x20
  41ebbc:	call   0x41dba0
  41ebc1:	lea    eax,[r12+0x1]
  41ebc6:	test   eax,eax
  41ebc8:	jg     0x41ebb0
  41ebca:	test   r14d,r14d
  41ebcd:	lea    r13d,[r14-0x1]
  41ebd1:	mov    r12d,0x0
  41ebd7:	cmovns r12d,r14d
  41ebdb:	sub    r13d,r12d
  41ebde:	cmp    rsi,rdi
  41ebe1:	jb     0x41ecd0
  41ebe7:	nop    WORD PTR [rax+rax*1+0x0]
  41ebf0:	test   r13d,r13d
  41ebf3:	lea    esi,[r13-0x1]
  41ebf7:	jle    0x41ec15
  41ebf9:	nop    DWORD PTR [rax+0x0]
  41ec00:	mov    rdx,rbx
  41ec03:	mov    ecx,0x20
  41ec08:	sub    esi,0x1
  41ec0b:	call   0x41dba0
  41ec10:	cmp    esi,0xffffffff
  41ec13:	jne    0x41ec00
  41ec15:	mov    rsp,rbp
  41ec18:	pop    rbx
  41ec19:	pop    rsi
  41ec1a:	pop    rdi
  41ec1b:	pop    r12
  41ec1d:	pop    r13
  41ec1f:	pop    r14
  41ec21:	pop    rbp
  41ec22:	ret    
  41ec23:	mov    eax,r10d
  41ec26:	mov    edx,0x55555556
  41ec2b:	imul   edx
  41ec2d:	mov    eax,r10d
  41ec30:	sar    eax,0x1f
  41ec33:	sub    edx,eax
  41ec35:	add    r10d,edx
  41ec38:	jmp    0x41ea5c
  41ec3d:	mov    eax,edx
  41ec3f:	and    eax,0x600
  41ec44:	cmp    eax,0x200
  41ec49:	je     0x41ed50
  41ec4f:	mov    r12d,r13d
  41ec52:	test   dh,0x8
  41ec55:	mov    r13d,r12d
  41ec58:	mov    rdi,r10
  41ec5b:	je     0x41eb9d
  41ec61:	mov    r13d,r12d
  41ec64:	jmp    0x41eb88
  41ec69:	nop    DWORD PTR [rax+0x0]
  41ec70:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41ec77:	mov    r13d,0xffffffff
  41ec7d:	cmp    r11d,0x6f
  41ec81:	je     0x41ec95
  41ec83:	mov    edx,DWORD PTR [rbx+0x8]
  41ec86:	mov    eax,edx
  41ec88:	and    eax,0x800
  41ec8d:	test   eax,eax
  41ec8f:	jne    0x41eb88
  41ec95:	mov    rdi,r10
  41ec98:	cmp    rsi,rdi
  41ec9b:	jb     0x41ecd0
  41ec9d:	jmp    0x41ec15
  41eca2:	cmp    r11d,0x6f
  41eca6:	jne    0x41eb25
  41ecac:	test   BYTE PTR [rbx+0x9],0x8
  41ecb0:	je     0x41eb25
  41ecb6:	mov    BYTE PTR [r10],0x30
  41ecba:	add    r10,0x1
  41ecbe:	jmp    0x41eb25
  41ecc3:	cmp    rsi,rdi
  41ecc6:	jae    0x41edaf
  41eccc:	nop    DWORD PTR [rax+0x0]
  41ecd0:	sub    rdi,0x1
  41ecd4:	movsx  ecx,BYTE PTR [rdi]
  41ecd7:	mov    rdx,rbx
  41ecda:	call   0x41dba0
  41ecdf:	cmp    rsi,rdi
  41ece2:	jb     0x41ecd0
  41ece4:	jmp    0x41ebf0
  41ece9:	nop    DWORD PTR [rax+0x0]
  41ecf0:	test   r8d,r8d
  41ecf3:	jns    0x41ec52
  41ecf9:	mov    eax,edx
  41ecfb:	and    eax,0x600
  41ed00:	cmp    eax,0x200
  41ed05:	je     0x41ed9e
  41ed0b:	cmp    r11d,0x6f
  41ed0f:	jne    0x41ec52
  41ed15:	and    dh,0x4
  41ed18:	jne    0x41ed3a
  41ed1a:	lea    r14d,[r12-0x1]
  41ed1f:	mov    rdi,r10
  41ed22:	jmp    0x41ebaa
  41ed27:	nop    WORD PTR [rax+rax*1+0x0]
  41ed30:	test   r8d,r8d
  41ed33:	js     0x41ecf9
  41ed35:	and    dh,0x4
  41ed38:	je     0x41ed1a
  41ed3a:	mov    rdi,r10
  41ed3d:	mov    r13d,r12d
  41ed40:	jmp    0x41ecdf
  41ed42:	and    edi,0xfffff7ff
  41ed48:	mov    DWORD PTR [rbx+0x8],edi
  41ed4b:	jmp    0x41eade
  41ed50:	lea    r8d,[r12-0x3]
  41ed55:	mov    r12d,r8d
  41ed58:	mov    eax,r12d
  41ed5b:	lea    rcx,[r10+rax*1+0x1]
  41ed60:	mov    rax,r10
  41ed63:	add    rax,0x1
  41ed67:	mov    BYTE PTR [rax-0x1],0x30
  41ed6b:	cmp    rax,rcx
  41ed6e:	jne    0x41ed63
  41ed70:	movsxd rax,r8d
  41ed73:	cmp    r11d,0x6f
  41ed77:	lea    r10,[r10+rax*1+0x1]
  41ed7c:	je     0x41ed90
  41ed7e:	mov    eax,edx
  41ed80:	mov    r13d,0xffffffff
  41ed86:	and    eax,0x800
  41ed8b:	jmp    0x41ec8d
  41ed90:	mov    rdi,r10
  41ed93:	mov    r13d,0xffffffff
  41ed99:	jmp    0x41ec98
  41ed9e:	sub    r12d,0x1
  41eda2:	mov    r8d,r12d
  41eda5:	jmp    0x41ed58
  41eda7:	mov    r13d,r12d
  41edaa:	jmp    0x41ec7d
  41edaf:	lea    esi,[r13-0x1]
  41edb3:	jmp    0x41ec00
  41edb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41edc0:	push   r13
  41edc2:	push   r12
  41edc4:	push   rbp
  41edc5:	push   rdi
  41edc6:	push   rsi
  41edc7:	push   rbx
  41edc8:	sub    rsp,0x68
  41edcc:	mov    r9,QWORD PTR [rcx]
  41edcf:	mov    r10d,DWORD PTR [rcx+0x8]
  41edd3:	mov    rbx,rdx
  41edd6:	mov    rax,r9
  41edd9:	mov    QWORD PTR [rsp+0x30],r9
  41edde:	mov    DWORD PTR [rsp+0x38],r10d
  41ede3:	shr    rax,0x20
  41ede7:	mov    r8,r10
  41edea:	and    eax,0x7fffffff
  41edef:	or     r9d,eax
  41edf2:	lea    eax,[r10+r10*1]
  41edf6:	mov    edx,r9d
  41edf9:	neg    edx
  41edfb:	and    eax,0xfffe
  41ee00:	or     edx,r9d
  41ee03:	shr    edx,0x1f
  41ee06:	or     edx,eax
  41ee08:	mov    eax,0xfffe
  41ee0d:	sub    eax,edx
  41ee0f:	sar    eax,0x10
  41ee12:	test   eax,eax
  41ee14:	jne    0x41f200
  41ee1a:	movzx  esi,WORD PTR [rsp+0x38]
  41ee1f:	mov    ecx,esi
  41ee21:	and    ecx,0x8000
  41ee27:	je     0x41ee30
  41ee29:	or     DWORD PTR [rbx+0x8],0x80
  41ee30:	and    r8w,0x7fff
  41ee36:	cmp    r8w,0x7fff
  41ee3c:	jne    0x41ee60
  41ee3e:	test   r9d,r9d
  41ee41:	jne    0x41ee60
  41ee43:	lea    rdx,[rip+0x12cea]        # 0x431b34
  41ee4a:	mov    r8,rbx
  41ee4d:	call   0x41de30
  41ee52:	jmp    0x41f1d5
  41ee57:	nop    WORD PTR [rax+rax*1+0x0]
  41ee60:	and    si,0x7fff
  41ee65:	jne    0x41ef90
  41ee6b:	mov    rax,QWORD PTR [rsp+0x30]
  41ee70:	test   rax,rax
  41ee73:	jne    0x41f21f
  41ee79:	mov    r9d,DWORD PTR [rbx+0x10]
  41ee7d:	cmp    r9d,0xe
  41ee81:	jbe    0x41f29c
  41ee87:	xor    esi,esi
  41ee89:	mov    r8d,DWORD PTR [rbx+0x8]
  41ee8d:	lea    rbp,[rsp+0x40]
  41ee92:	test   r9d,r9d
  41ee95:	jle    0x41f2ac
  41ee9b:	lea    rax,[rbp+0x1]
  41ee9f:	mov    BYTE PTR [rsp+0x40],0x2e
  41eea4:	mov    r10d,DWORD PTR [rbx+0xc]
  41eea8:	lea    rdi,[rax+0x1]
  41eeac:	mov    BYTE PTR [rax],0x30
  41eeaf:	mov    r12d,0x2
  41eeb5:	test   r10d,r10d
  41eeb8:	jg     0x41f0bc
  41eebe:	xchg   ax,ax
  41eec0:	test   r8b,0x80
  41eec4:	jne    0x41f180
  41eeca:	test   r8d,0x100
  41eed1:	jne    0x41f270
  41eed7:	and    r8d,0x40
  41eedb:	jne    0x41f282
  41eee1:	mov    rdx,rbx
  41eee4:	mov    ecx,0x30
  41eee9:	call   0x41dba0
  41eeee:	mov    ecx,DWORD PTR [rbx+0x8]
  41eef1:	mov    rdx,rbx
  41eef4:	and    ecx,0x20
  41eef7:	or     ecx,0x58
  41eefa:	call   0x41dba0
  41eeff:	mov    eax,DWORD PTR [rbx+0xc]
  41ef02:	test   eax,eax
  41ef04:	jle    0x41ef2c
  41ef06:	test   BYTE PTR [rbx+0x9],0x2
  41ef0a:	je     0x41ef2c
  41ef0c:	sub    eax,0x1
  41ef0f:	mov    DWORD PTR [rbx+0xc],eax
  41ef12:	mov    rdx,rbx
  41ef15:	mov    ecx,0x30
  41ef1a:	call   0x41dba0
  41ef1f:	mov    eax,DWORD PTR [rbx+0xc]
  41ef22:	lea    edx,[rax-0x1]
  41ef25:	test   eax,eax
  41ef27:	mov    DWORD PTR [rbx+0xc],edx
  41ef2a:	jg     0x41ef12
  41ef2c:	cmp    rdi,rbp
  41ef2f:	lea    r13,[rsp+0x2e]
  41ef34:	ja     0x41ef69
  41ef36:	jmp    0x41f19f
  41ef3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef40:	movzx  eax,WORD PTR [rbx+0x20]
  41ef44:	test   ax,ax
  41ef47:	mov    WORD PTR [rsp+0x2e],ax
  41ef4c:	je     0x41ef60
  41ef4e:	mov    r8,rbx
  41ef51:	mov    edx,0x1
  41ef56:	mov    rcx,r13
  41ef59:	call   0x41dc00
  41ef5e:	xchg   ax,ax
  41ef60:	cmp    rdi,rbp
  41ef63:	je     0x41f19f
  41ef69:	sub    rdi,0x1
  41ef6d:	movsx  ecx,BYTE PTR [rdi]
  41ef70:	cmp    ecx,0x2e
  41ef73:	je     0x41f1e2
  41ef79:	cmp    ecx,0x2c
  41ef7c:	je     0x41ef40
  41ef7e:	mov    rdx,rbx
  41ef81:	call   0x41dba0
  41ef86:	jmp    0x41ef60
  41ef88:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef90:	mov    r9d,DWORD PTR [rbx+0x10]
  41ef94:	sub    si,0x3fff
  41ef99:	mov    rax,QWORD PTR [rsp+0x30]
  41ef9e:	cmp    r9d,0xe
  41efa2:	ja     0x41f24d
  41efa8:	test   rax,rax
  41efab:	js     0x41efb5
  41efad:	nop    DWORD PTR [rax]
  41efb0:	add    rax,rax
  41efb3:	jns    0x41efb0
  41efb5:	mov    ecx,0xe
  41efba:	mov    edx,0x4
  41efbf:	shr    rax,1
  41efc2:	sub    ecx,r9d
  41efc5:	shl    ecx,0x2
  41efc8:	shl    rdx,cl
  41efcb:	add    rax,rdx
  41efce:	js     0x41f294
  41efd4:	add    rax,rax
  41efd7:	mov    ecx,0xf
  41efdc:	sub    ecx,r9d
  41efdf:	shl    ecx,0x2
  41efe2:	shr    rax,cl
  41efe5:	mov    r8d,DWORD PTR [rbx+0x8]
  41efe9:	lea    rbp,[rsp+0x40]
  41efee:	mov    rdi,rbp
  41eff1:	mov    r11d,r8d
  41eff4:	mov    r10d,r8d
  41eff7:	and    r11d,0x800
  41effe:	and    r10d,0x20
  41f002:	jmp    0x41f033
  41f004:	mov    ecx,DWORD PTR [rbx+0x10]
  41f007:	test   ecx,ecx
  41f009:	jle    0x41f011
  41f00b:	sub    ecx,0x1
  41f00e:	mov    DWORD PTR [rbx+0x10],ecx
  41f011:	shr    rax,0x4
  41f015:	mov    r9,rdi
  41f018:	test   edx,edx
  41f01a:	je     0x41f084
  41f01c:	cmp    edx,0x9
  41f01f:	lea    rdi,[r9+0x1]
  41f023:	jle    0x41f097
  41f025:	add    edx,0x37
  41f028:	or     edx,r10d
  41f02b:	mov    BYTE PTR [r9],dl
  41f02e:	test   rax,rax
  41f031:	je     0x41f0a0
  41f033:	mov    edx,eax
  41f035:	and    edx,0xf
  41f038:	cmp    edx,eax
  41f03a:	jne    0x41f004
  41f03c:	cmp    rdi,rbp
  41f03f:	ja     0x41f052
  41f041:	test   r11d,r11d
  41f044:	jne    0x41f052
  41f046:	mov    r12d,DWORD PTR [rbx+0x10]
  41f04a:	mov    r9,rdi
  41f04d:	test   r12d,r12d
  41f050:	jle    0x41f059
  41f052:	lea    r9,[rdi+0x1]
  41f056:	mov    BYTE PTR [rdi],0x2e
  41f059:	cmp    rax,0x1
  41f05d:	jbe    0x41f269
  41f063:	lea    ecx,[rsi-0x1]
  41f066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f070:	shr    rax,1
  41f073:	mov    esi,ecx
  41f075:	cmp    rax,0x1
  41f079:	lea    ecx,[rsi-0x1]
  41f07c:	jne    0x41f070
  41f07e:	xor    al,al
  41f080:	test   edx,edx
  41f082:	jne    0x41f01c
  41f084:	cmp    r9,rbp
  41f087:	ja     0x41f093
  41f089:	mov    ecx,DWORD PTR [rbx+0x10]
  41f08c:	mov    rdi,r9
  41f08f:	test   ecx,ecx
  41f091:	js     0x41f02e
  41f093:	lea    rdi,[r9+0x1]
  41f097:	add    edx,0x30
  41f09a:	jmp    0x41f02b
  41f09c:	nop    DWORD PTR [rax+0x0]
  41f0a0:	cmp    rdi,rbp
  41f0a3:	je     0x41f2a3
  41f0a9:	mov    r10d,DWORD PTR [rbx+0xc]
  41f0ad:	mov    r12d,0x2
  41f0b3:	test   r10d,r10d
  41f0b6:	jle    0x41eec0
  41f0bc:	mov    edx,DWORD PTR [rbx+0x10]
  41f0bf:	mov    rax,rdi
  41f0c2:	movsx  r11d,si
  41f0c6:	sub    rax,rbp
  41f0c9:	lea    ecx,[rdx+rax*1]
  41f0cc:	test   edx,edx
  41f0ce:	mov    edx,r8d
  41f0d1:	cmovg  eax,ecx
  41f0d4:	and    edx,0x1c0
  41f0da:	mov    ecx,0x66666667
  41f0df:	cmp    edx,0x1
  41f0e2:	sbb    edx,edx
  41f0e4:	lea    r9d,[rax+rdx*1+0x6]
  41f0e9:	mov    eax,r11d
  41f0ec:	imul   ecx
  41f0ee:	mov    eax,r11d
  41f0f1:	sar    eax,0x1f
  41f0f4:	mov    ecx,edx
  41f0f6:	sar    ecx,0x2
  41f0f9:	sub    ecx,eax
  41f0fb:	je     0x41f120
  41f0fd:	mov    r11d,0x66666667
  41f103:	mov    eax,ecx
  41f105:	sar    ecx,0x1f
  41f108:	add    r9d,0x1
  41f10c:	imul   r11d
  41f10f:	add    r12d,0x1
  41f113:	sar    edx,0x2
  41f116:	sub    edx,ecx
  41f118:	mov    ecx,edx
  41f11a:	jne    0x41f103
  41f11c:	movsx  r12d,r12w
  41f120:	cmp    r10d,r9d
  41f123:	jle    0x41f1f0
  41f129:	sub    r10d,r9d
  41f12c:	test   r8d,0x600
  41f133:	jne    0x41f260
  41f139:	lea    eax,[r10-0x1]
  41f13d:	test   r10d,r10d
  41f140:	mov    DWORD PTR [rbx+0xc],eax
  41f143:	jle    0x41eec0
  41f149:	nop    DWORD PTR [rax+0x0]
  41f150:	mov    rdx,rbx
  41f153:	mov    ecx,0x20
  41f158:	call   0x41dba0
  41f15d:	mov    eax,DWORD PTR [rbx+0xc]
  41f160:	lea    edx,[rax-0x1]
  41f163:	test   eax,eax
  41f165:	mov    DWORD PTR [rbx+0xc],edx
  41f168:	jg     0x41f150
  41f16a:	mov    r8d,DWORD PTR [rbx+0x8]
  41f16e:	test   r8b,0x80
  41f172:	je     0x41eeca
  41f178:	nop    DWORD PTR [rax+rax*1+0x0]
  41f180:	mov    rdx,rbx
  41f183:	mov    ecx,0x2d
  41f188:	call   0x41dba0
  41f18d:	jmp    0x41eee1
  41f192:	mov    rdx,rbx
  41f195:	mov    ecx,0x30
  41f19a:	call   0x41dba0
  41f19f:	mov    eax,DWORD PTR [rbx+0x10]
  41f1a2:	lea    edx,[rax-0x1]
  41f1a5:	test   eax,eax
  41f1a7:	mov    DWORD PTR [rbx+0x10],edx
  41f1aa:	jg     0x41f192
  41f1ac:	mov    ecx,DWORD PTR [rbx+0x8]
  41f1af:	mov    rdx,rbx
  41f1b2:	and    ecx,0x20
  41f1b5:	or     ecx,0x50
  41f1b8:	call   0x41dba0
  41f1bd:	add    DWORD PTR [rbx+0xc],r12d
  41f1c1:	or     DWORD PTR [rbx+0x8],0x1c0
  41f1c8:	movsx  rcx,si
  41f1cc:	mov    rdx,rbx
  41f1cf:	call   0x41e410
  41f1d4:	nop
  41f1d5:	add    rsp,0x68
  41f1d9:	pop    rbx
  41f1da:	pop    rsi
  41f1db:	pop    rdi
  41f1dc:	pop    rbp
  41f1dd:	pop    r12
  41f1df:	pop    r13
  41f1e1:	ret    
  41f1e2:	mov    rcx,rbx
  41f1e5:	call   0x41ded0
  41f1ea:	jmp    0x41ef60
  41f1ef:	nop
  41f1f0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41f1f7:	jmp    0x41eec0
  41f1fc:	nop    DWORD PTR [rax+0x0]
  41f200:	lea    rdx,[rip+0x12929]        # 0x431b30
  41f207:	mov    r8,rbx
  41f20a:	xor    ecx,ecx
  41f20c:	call   0x41de30
  41f211:	nop
  41f212:	add    rsp,0x68
  41f216:	pop    rbx
  41f217:	pop    rsi
  41f218:	pop    rdi
  41f219:	pop    rbp
  41f21a:	pop    r12
  41f21c:	pop    r13
  41f21e:	ret    
  41f21f:	js     0x41f2c1
  41f225:	mov    edx,0xffffc001
  41f22a:	nop    WORD PTR [rax+rax*1+0x0]
  41f230:	mov    esi,edx
  41f232:	sub    edx,0x1
  41f235:	add    rax,rax
  41f238:	jns    0x41f230
  41f23a:	mov    r9d,DWORD PTR [rbx+0x10]
  41f23e:	cmp    r9d,0xe
  41f242:	jbe    0x41efb5
  41f248:	jmp    0x41efe5
  41f24d:	test   rax,rax
  41f250:	jne    0x41efe5
  41f256:	jmp    0x41ee89
  41f25b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f260:	mov    DWORD PTR [rbx+0xc],r10d
  41f264:	jmp    0x41eec0
  41f269:	xor    eax,eax
  41f26b:	jmp    0x41f018
  41f270:	mov    rdx,rbx
  41f273:	mov    ecx,0x2b
  41f278:	call   0x41dba0
  41f27d:	jmp    0x41eee1
  41f282:	mov    rdx,rbx
  41f285:	mov    ecx,0x20
  41f28a:	call   0x41dba0
  41f28f:	jmp    0x41eee1
  41f294:	add    esi,0x1
  41f297:	jmp    0x41efd7
  41f29c:	xor    eax,eax
  41f29e:	jmp    0x41efb0
  41f2a3:	mov    r9d,DWORD PTR [rbx+0x10]
  41f2a7:	jmp    0x41ee92
  41f2ac:	test   r8d,0x800
  41f2b3:	mov    rax,rbp
  41f2b6:	je     0x41eea4
  41f2bc:	jmp    0x41ee9b
  41f2c1:	mov    esi,0xffffc002
  41f2c6:	jmp    0x41f23a
  41f2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	push   r15
  41f2d2:	push   r14
  41f2d4:	push   r13
  41f2d6:	push   r12
  41f2d8:	push   rbp
  41f2d9:	push   rdi
  41f2da:	push   rsi
  41f2db:	push   rbx
  41f2dc:	sub    rsp,0xb8
  41f2e3:	mov    r13,QWORD PTR [rsp+0x120]
  41f2eb:	mov    r15d,ecx
  41f2ee:	mov    rdi,rdx
  41f2f1:	mov    esi,r8d
  41f2f4:	mov    rbx,r9
  41f2f7:	and    r15d,0x6000
  41f2fe:	call   0x422638
  41f303:	mov    eax,DWORD PTR [rax]
  41f305:	lea    rcx,[rip+0x12841]        # 0x431b4d
  41f30c:	xor    edx,edx
  41f30e:	mov    QWORD PTR [rsp+0x80],rdi
  41f316:	mov    DWORD PTR [rsp+0x88],r15d
  41f31e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41f329:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f334:	mov    DWORD PTR [rsp+0x34],eax
  41f338:	xor    eax,eax
  41f33a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  41f345:	mov    WORD PTR [rsp+0x98],ax
  41f34d:	mov    DWORD PTR [rsp+0x9c],0x0
  41f358:	mov    WORD PTR [rsp+0xa0],dx
  41f360:	mov    DWORD PTR [rsp+0xa4],0x0
  41f36b:	mov    DWORD PTR [rsp+0xa8],esi
  41f372:	call   0x422500
  41f377:	test   rax,rax
  41f37a:	je     0x41f38c
  41f37c:	movsx  edx,BYTE PTR [rax]
  41f37f:	mov    eax,0x2
  41f384:	sub    edx,0x30
  41f387:	cmp    edx,0x2
  41f38a:	jbe    0x41f399
  41f38c:	call   0x422780
  41f391:	and    eax,0x1
  41f394:	neg    eax
  41f396:	add    eax,0x3
  41f399:	lea    rdi,[rsp+0x70]
  41f39e:	mov    DWORD PTR [rsp+0xac],eax
  41f3a5:	movzx  eax,BYTE PTR [rbx]
  41f3a8:	lea    rsi,[rsp+0x6e]
  41f3ad:	lea    r12,[rsp+0x80]
  41f3b5:	lea    rbp,[rip+0x127a8]        # 0x431b64
  41f3bc:	mov    QWORD PTR [rsp+0x28],rdi
  41f3c1:	lea    rdi,[rsp+0x50]
  41f3c6:	mov    QWORD PTR [rsp+0x38],rsi
  41f3cb:	mov    QWORD PTR [rsp+0x20],rdi
  41f3d0:	mov    edi,r15d
  41f3d3:	or     edi,0x200
  41f3d9:	mov    DWORD PTR [rsp+0x48],edi
  41f3dd:	nop    DWORD PTR [rax]
  41f3e0:	movsx  ecx,al
  41f3e3:	lea    rsi,[rbx+0x1]
  41f3e7:	test   ecx,ecx
  41f3e9:	je     0x41f46a
  41f3eb:	cmp    ecx,0x25
  41f3ee:	jne    0x41f450
  41f3f0:	movzx  eax,BYTE PTR [rbx+0x1]
  41f3f4:	xor    r10d,r10d
  41f3f7:	xor    r14d,r14d
  41f3fa:	mov    DWORD PTR [rsp+0x88],r15d
  41f402:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f40d:	mov    rdi,rsi
  41f410:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41f41b:	lea    r11,[r12+0xc]
  41f420:	test   al,al
  41f422:	je     0x41f5cb
  41f428:	lea    edx,[rax-0x20]
  41f42b:	lea    rbx,[rdi+0x1]
  41f42f:	movsx  ecx,al
  41f432:	cmp    dl,0x5a
  41f435:	ja     0x41fa40
  41f43b:	movzx  edx,dl
  41f43e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41f443:	add    rdx,rbp
  41f446:	jmp    rdx
  41f448:	nop    DWORD PTR [rax+rax*1+0x0]
  41f450:	mov    rdx,r12
  41f453:	call   0x41dba0
  41f458:	movzx  eax,BYTE PTR [rbx+0x1]
  41f45c:	mov    rbx,rsi
  41f45f:	lea    rsi,[rbx+0x1]
  41f463:	movsx  ecx,al
  41f466:	test   ecx,ecx
  41f468:	jne    0x41f3eb
  41f46a:	mov    eax,DWORD PTR [rsp+0xa4]
  41f471:	add    rsp,0xb8
  41f478:	pop    rbx
  41f479:	pop    rsi
  41f47a:	pop    rdi
  41f47b:	pop    rbp
  41f47c:	pop    r12
  41f47e:	pop    r13
  41f480:	pop    r14
  41f482:	pop    r15
  41f484:	ret    
  41f485:	sub    r10d,0x2
  41f489:	mov    rax,r13
  41f48c:	cmp    r10d,0x1
  41f490:	jbe    0x41fa83
  41f496:	mov    rsi,QWORD PTR [rax]
  41f499:	add    r13,0x8
  41f49d:	test   rsi,rsi
  41f4a0:	je     0x41f565
  41f4a6:	mov    rcx,rsi
  41f4a9:	call   0x422468
  41f4ae:	mov    edx,eax
  41f4b0:	mov    r8,r12
  41f4b3:	mov    rcx,rsi
  41f4b6:	call   0x41dd20
  41f4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4c0:	movzx  eax,BYTE PTR [rbx]
  41f4c3:	jmp    0x41f3e0
  41f4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4d0:	test   r14d,r14d
  41f4d3:	jne    0x41f4e3
  41f4d5:	cmp    DWORD PTR [rsp+0x88],r15d
  41f4dd:	je     0x41fc4b
  41f4e3:	mov    rdx,QWORD PTR [r13+0x0]
  41f4e7:	lea    rsi,[r13+0x8]
  41f4eb:	mov    r8,r12
  41f4ee:	mov    ecx,0x78
  41f4f3:	mov    QWORD PTR [rsp+0x78],0x0
  41f4fc:	mov    r13,rsi
  41f4ff:	mov    QWORD PTR [rsp+0x70],rdx
  41f504:	call   0x41ea00
  41f509:	jmp    0x41f4c0
  41f50b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f510:	cmp    r10d,0x5
  41f514:	mov    rax,QWORD PTR [r13+0x0]
  41f518:	je     0x41fb8a
  41f51e:	cmp    r10d,0x1
  41f522:	je     0x41fc14
  41f528:	cmp    r10d,0x2
  41f52c:	je     0x41f538
  41f52e:	cmp    r10d,0x3
  41f532:	je     0x41fcbc
  41f538:	mov    edx,DWORD PTR [rsp+0xa4]
  41f53f:	add    r13,0x8
  41f543:	mov    DWORD PTR [rax],edx
  41f545:	jmp    0x41f4c0
  41f54a:	nop    WORD PTR [rax+rax*1+0x0]
  41f550:	mov    ecx,DWORD PTR [rsp+0x34]
  41f554:	call   0x422478
  41f559:	test   rax,rax
  41f55c:	mov    rsi,rax
  41f55f:	jne    0x41f4a6
  41f565:	mov    edx,0x6
  41f56a:	lea    rsi,[rip+0x125d5]        # 0x431b46
  41f571:	jmp    0x41f4b0
  41f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f580:	movzx  eax,BYTE PTR [rdi+0x1]
  41f584:	mov    r10d,0x2
  41f58a:	mov    r14d,0x4
  41f590:	cmp    al,0x6c
  41f592:	jne    0x41f5c0
  41f594:	lea    rbx,[rdi+0x2]
  41f598:	movzx  eax,BYTE PTR [rdi+0x2]
  41f59c:	mov    r10d,0x3
  41f5a2:	mov    r14d,0x4
  41f5a8:	jmp    0x41f5c0
  41f5aa:	nop    WORD PTR [rax+rax*1+0x0]
  41f5b0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f5b4:	mov    r10d,0x3
  41f5ba:	mov    r14d,0x4
  41f5c0:	test   al,al
  41f5c2:	mov    rdi,rbx
  41f5c5:	jne    0x41f428
  41f5cb:	mov    rbx,rdi
  41f5ce:	jmp    0x41f3e0
  41f5d3:	mov    eax,DWORD PTR [rsp+0x88]
  41f5da:	mov    rdx,r13
  41f5dd:	add    r13,0x8
  41f5e1:	or     eax,0x20
  41f5e4:	test   al,0x4
  41f5e6:	mov    DWORD PTR [rsp+0x88],eax
  41f5ed:	je     0x41f84b
  41f5f3:	mov    rax,QWORD PTR [rdx]
  41f5f6:	mov    rcx,QWORD PTR [rsp+0x20]
  41f5fb:	mov    rdx,r12
  41f5fe:	fld    TBYTE PTR [rax]
  41f600:	fstp   TBYTE PTR [rsp+0x50]
  41f604:	call   0x41e860
  41f609:	jmp    0x41f4c0
  41f60e:	xchg   ax,ax
  41f610:	movzx  eax,BYTE PTR [rdi+0x1]
  41f614:	mov    r10d,0x1
  41f61a:	mov    r14d,0x4
  41f620:	cmp    al,0x68
  41f622:	jne    0x41f5c0
  41f624:	lea    rbx,[rdi+0x2]
  41f628:	movzx  eax,BYTE PTR [rdi+0x2]
  41f62c:	mov    r10d,0x5
  41f632:	mov    r14d,0x4
  41f638:	jmp    0x41f5c0
  41f63a:	nop    WORD PTR [rax+rax*1+0x0]
  41f640:	mov    eax,DWORD PTR [rsp+0x88]
  41f647:	mov    rdx,r13
  41f64a:	add    r13,0x8
  41f64e:	or     eax,0x20
  41f651:	test   al,0x4
  41f653:	mov    DWORD PTR [rsp+0x88],eax
  41f65a:	je     0x41f879
  41f660:	mov    rax,QWORD PTR [rdx]
  41f663:	mov    rcx,QWORD PTR [rsp+0x20]
  41f668:	mov    rdx,r12
  41f66b:	fld    TBYTE PTR [rax]
  41f66d:	fstp   TBYTE PTR [rsp+0x50]
  41f671:	call   0x41e320
  41f676:	jmp    0x41f4c0
  41f67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f680:	mov    eax,DWORD PTR [rsp+0x88]
  41f687:	mov    rdx,r13
  41f68a:	add    r13,0x8
  41f68e:	or     eax,0x20
  41f691:	test   al,0x4
  41f693:	mov    DWORD PTR [rsp+0x88],eax
  41f69a:	je     0x41f8a7
  41f6a0:	mov    rax,QWORD PTR [rdx]
  41f6a3:	mov    rcx,QWORD PTR [rsp+0x20]
  41f6a8:	mov    rdx,r12
  41f6ab:	fld    TBYTE PTR [rax]
  41f6ad:	fstp   TBYTE PTR [rsp+0x50]
  41f6b1:	call   0x41e7b0
  41f6b6:	jmp    0x41f4c0
  41f6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6c0:	cmp    r10d,0x3
  41f6c4:	je     0x41fb9c
  41f6ca:	cmp    r10d,0x2
  41f6ce:	je     0x41fc39
  41f6d4:	mov    eax,DWORD PTR [r13+0x0]
  41f6d8:	cmp    r10d,0x1
  41f6dc:	lea    rdx,[r13+0x8]
  41f6e0:	mov    QWORD PTR [rsp+0x70],rax
  41f6e5:	je     0x41fc7b
  41f6eb:	cmp    r10d,0x5
  41f6ef:	mov    r13,rdx
  41f6f2:	je     0x41fcd0
  41f6f8:	cmp    ecx,0x75
  41f6fb:	je     0x41fbdc
  41f701:	mov    r8,r12
  41f704:	mov    rdx,rax
  41f707:	call   0x41ea00
  41f70c:	jmp    0x41f4c0
  41f711:	sub    r10d,0x2
  41f715:	mov    rax,r13
  41f718:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f723:	cmp    r10d,0x1
  41f727:	jbe    0x41f8cb
  41f72d:	mov    eax,DWORD PTR [rax]
  41f72f:	mov    rcx,QWORD PTR [rsp+0x28]
  41f734:	mov    r8,r12
  41f737:	mov    edx,0x1
  41f73c:	add    r13,0x8
  41f740:	mov    BYTE PTR [rsp+0x70],al
  41f744:	call   0x41dd20
  41f749:	jmp    0x41f4c0
  41f74e:	xchg   ax,ax
  41f750:	mov    eax,DWORD PTR [rsp+0x88]
  41f757:	mov    rdx,r13
  41f75a:	add    r13,0x8
  41f75e:	or     eax,0x20
  41f761:	test   al,0x4
  41f763:	mov    DWORD PTR [rsp+0x88],eax
  41f76a:	je     0x41f908
  41f770:	mov    rax,QWORD PTR [rdx]
  41f773:	mov    rcx,QWORD PTR [rsp+0x20]
  41f778:	mov    rdx,r12
  41f77b:	fld    TBYTE PTR [rax]
  41f77d:	fstp   TBYTE PTR [rsp+0x50]
  41f781:	call   0x41edc0
  41f786:	jmp    0x41f4c0
  41f78b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f790:	or     DWORD PTR [rsp+0x88],0x80
  41f79b:	cmp    r10d,0x3
  41f79f:	je     0x41fb78
  41f7a5:	cmp    r10d,0x2
  41f7a9:	je     0x41fc27
  41f7af:	movsxd rcx,DWORD PTR [r13+0x0]
  41f7b3:	cmp    r10d,0x1
  41f7b7:	lea    rax,[r13+0x8]
  41f7bb:	mov    QWORD PTR [rsp+0x70],rcx
  41f7c0:	je     0x41fc8d
  41f7c6:	cmp    r10d,0x5
  41f7ca:	mov    r13,rax
  41f7cd:	je     0x41fcdf
  41f7d3:	mov    rax,rcx
  41f7d6:	mov    rdx,r12
  41f7d9:	sar    rax,0x3f
  41f7dd:	mov    QWORD PTR [rsp+0x78],rax
  41f7e2:	call   0x41e410
  41f7e7:	jmp    0x41f4c0
  41f7ec:	nop    DWORD PTR [rax+0x0]
  41f7f0:	or     DWORD PTR [rsp+0x88],0x4
  41f7f8:	movzx  eax,BYTE PTR [rdi+0x1]
  41f7fc:	mov    r14d,0x4
  41f802:	jmp    0x41f5c0
  41f807:	nop    WORD PTR [rax+rax*1+0x0]
  41f810:	movzx  eax,BYTE PTR [rdi+0x1]
  41f814:	cmp    al,0x36
  41f816:	je     0x41fb58
  41f81c:	cmp    al,0x33
  41f81e:	je     0x41fbec
  41f824:	mov    r10d,0x3
  41f82a:	mov    r14d,0x4
  41f830:	jmp    0x41f5c0
  41f835:	mov    eax,DWORD PTR [rsp+0x88]
  41f83c:	mov    rdx,r13
  41f83f:	add    r13,0x8
  41f843:	test   al,0x4
  41f845:	jne    0x41f5f3
  41f84b:	mov    rcx,QWORD PTR [rsp+0x20]
  41f850:	fld    QWORD PTR [rdx]
  41f852:	mov    rdx,r12
  41f855:	fstp   TBYTE PTR [rsp+0x50]
  41f859:	call   0x41e860
  41f85e:	jmp    0x41f4c0
  41f863:	mov    eax,DWORD PTR [rsp+0x88]
  41f86a:	mov    rdx,r13
  41f86d:	add    r13,0x8
  41f871:	test   al,0x4
  41f873:	jne    0x41f660
  41f879:	mov    rcx,QWORD PTR [rsp+0x20]
  41f87e:	fld    QWORD PTR [rdx]
  41f880:	mov    rdx,r12
  41f883:	fstp   TBYTE PTR [rsp+0x50]
  41f887:	call   0x41e320
  41f88c:	jmp    0x41f4c0
  41f891:	mov    eax,DWORD PTR [rsp+0x88]
  41f898:	mov    rdx,r13
  41f89b:	add    r13,0x8
  41f89f:	test   al,0x4
  41f8a1:	jne    0x41f6a0
  41f8a7:	mov    rcx,QWORD PTR [rsp+0x20]
  41f8ac:	fld    QWORD PTR [rdx]
  41f8ae:	mov    rdx,r12
  41f8b1:	fstp   TBYTE PTR [rsp+0x50]
  41f8b5:	call   0x41e7b0
  41f8ba:	jmp    0x41f4c0
  41f8bf:	nop
  41f8c0:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f8cb:	mov    eax,DWORD PTR [r13+0x0]
  41f8cf:	mov    rcx,QWORD PTR [rsp+0x28]
  41f8d4:	lea    rsi,[r13+0x8]
  41f8d8:	mov    r8,r12
  41f8db:	mov    edx,0x1
  41f8e0:	mov    r13,rsi
  41f8e3:	mov    WORD PTR [rsp+0x70],ax
  41f8e8:	call   0x41dc00
  41f8ed:	jmp    0x41f4c0
  41f8f2:	mov    eax,DWORD PTR [rsp+0x88]
  41f8f9:	mov    rdx,r13
  41f8fc:	add    r13,0x8
  41f900:	test   al,0x4
  41f902:	jne    0x41f770
  41f908:	mov    rcx,QWORD PTR [rsp+0x20]
  41f90d:	fld    QWORD PTR [rdx]
  41f90f:	mov    rdx,r12
  41f912:	fstp   TBYTE PTR [rsp+0x50]
  41f916:	call   0x41edc0
  41f91b:	jmp    0x41f4c0
  41f920:	test   r14d,r14d
  41f923:	jne    0x41fac0
  41f929:	or     DWORD PTR [rsp+0x88],0x200
  41f934:	movzx  eax,BYTE PTR [rdi+0x1]
  41f938:	jmp    0x41f5c0
  41f93d:	nop    DWORD PTR [rax]
  41f940:	cmp    r14d,0x1
  41f944:	jbe    0x41fbae
  41f94a:	movzx  eax,BYTE PTR [rdi+0x1]
  41f94e:	mov    r14d,0x4
  41f954:	jmp    0x41f5c0
  41f959:	nop    DWORD PTR [rax+0x0]
  41f960:	test   r14d,r14d
  41f963:	jne    0x41f9e9
  41f969:	or     DWORD PTR [rsp+0x88],0x400
  41f974:	movzx  eax,BYTE PTR [rdi+0x1]
  41f978:	jmp    0x41f5c0
  41f97d:	nop    DWORD PTR [rax]
  41f980:	test   r14d,r14d
  41f983:	jne    0x41f9e9
  41f985:	or     DWORD PTR [rsp+0x88],0x100
  41f990:	movzx  eax,BYTE PTR [rdi+0x1]
  41f994:	jmp    0x41f5c0
  41f999:	nop    DWORD PTR [rax+0x0]
  41f9a0:	test   r14d,r14d
  41f9a3:	jne    0x41f9e9
  41f9a5:	or     DWORD PTR [rsp+0x88],0x800
  41f9b0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f9b4:	jmp    0x41f5c0
  41f9b9:	nop    DWORD PTR [rax+0x0]
  41f9c0:	test   r14d,r14d
  41f9c3:	jne    0x41f9e9
  41f9c5:	or     DWORD PTR [rsp+0x88],0x40
  41f9cd:	movzx  eax,BYTE PTR [rdi+0x1]
  41f9d1:	jmp    0x41f5c0
  41f9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9e0:	test   r14d,r14d
  41f9e3:	je     0x41faf2
  41f9e9:	movzx  eax,BYTE PTR [rdi+0x1]
  41f9ed:	jmp    0x41f5c0
  41f9f2:	mov    rdx,r12
  41f9f5:	call   0x41dba0
  41f9fa:	jmp    0x41f4c0
  41f9ff:	nop
  41fa00:	test   r11,r11
  41fa03:	je     0x41f94a
  41fa09:	test   r14d,0xfffffffd
  41fa10:	jne    0x41fae0
  41fa16:	mov    eax,DWORD PTR [r13+0x0]
  41fa1a:	lea    rdx,[r13+0x8]
  41fa1e:	test   eax,eax
  41fa20:	mov    DWORD PTR [r11],eax
  41fa23:	js     0x41fca0
  41fa29:	movzx  eax,BYTE PTR [rdi+0x1]
  41fa2d:	mov    r13,rdx
  41fa30:	xor    r11d,r11d
  41fa33:	jmp    0x41f5c0
  41fa38:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa40:	sub    eax,0x30
  41fa43:	cmp    al,0x9
  41fa45:	ja     0x41fc66
  41fa4b:	cmp    r14d,0x3
  41fa4f:	ja     0x41fc66
  41fa55:	test   r14d,r14d
  41fa58:	jne    0x41faca
  41fa5a:	mov    r14d,0x1
  41fa60:	test   r11,r11
  41fa63:	je     0x41f9e9
  41fa65:	mov    eax,DWORD PTR [r11]
  41fa68:	test   eax,eax
  41fa6a:	js     0x41fbcd
  41fa70:	lea    eax,[rax+rax*4]
  41fa73:	lea    eax,[rcx+rax*2-0x30]
  41fa77:	mov    DWORD PTR [r11],eax
  41fa7a:	movzx  eax,BYTE PTR [rdi+0x1]
  41fa7e:	jmp    0x41f5c0
  41fa83:	mov    rsi,QWORD PTR [r13+0x0]
  41fa87:	lea    rax,[rip+0x120aa]        # 0x431b38
  41fa8e:	lea    rdi,[r13+0x8]
  41fa92:	mov    r13,rdi
  41fa95:	test   rsi,rsi
  41fa98:	cmove  rsi,rax
  41fa9c:	mov    rcx,rsi
  41fa9f:	call   0x422408
  41faa4:	mov    r8,r12
  41faa7:	mov    edx,eax
  41faa9:	mov    rcx,rsi
  41faac:	call   0x41dc00
  41fab1:	jmp    0x41f4c0
  41fab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fac0:	cmp    r14d,0x3
  41fac4:	ja     0x41fc66
  41faca:	cmp    r14d,0x2
  41face:	mov    eax,0x3
  41fad3:	cmove  r14d,eax
  41fad7:	jmp    0x41fa60
  41fad9:	nop    DWORD PTR [rax+0x0]
  41fae0:	movzx  eax,BYTE PTR [rdi+0x1]
  41fae4:	xor    r11d,r11d
  41fae7:	mov    r14d,0x4
  41faed:	jmp    0x41f5c0
  41faf2:	mov    DWORD PTR [rsp+0x4c],r10d
  41faf7:	mov    QWORD PTR [rsp+0x40],r11
  41fafc:	or     DWORD PTR [rsp+0x88],0x1000
  41fb07:	mov    DWORD PTR [rsp+0x70],0x0
  41fb0f:	call   0x4224f0
  41fb14:	mov    r9,QWORD PTR [rsp+0x28]
  41fb19:	mov    rdx,QWORD PTR [rax+0x8]
  41fb1d:	mov    r8d,0x10
  41fb23:	mov    rcx,QWORD PTR [rsp+0x38]
  41fb28:	call   0x4221b0
  41fb2d:	test   eax,eax
  41fb2f:	mov    r11,QWORD PTR [rsp+0x40]
  41fb34:	mov    r10d,DWORD PTR [rsp+0x4c]
  41fb39:	jle    0x41fb48
  41fb3b:	movzx  edx,WORD PTR [rsp+0x6e]
  41fb40:	mov    WORD PTR [rsp+0xa0],dx
  41fb48:	mov    DWORD PTR [rsp+0x9c],eax
  41fb4f:	movzx  eax,BYTE PTR [rdi+0x1]
  41fb53:	jmp    0x41f5c0
  41fb58:	cmp    BYTE PTR [rdi+0x2],0x34
  41fb5c:	je     0x41fcef
  41fb62:	mov    eax,0x36
  41fb67:	mov    r10d,0x3
  41fb6d:	mov    r14d,0x4
  41fb73:	jmp    0x41f5c0
  41fb78:	mov    rcx,QWORD PTR [r13+0x0]
  41fb7c:	add    r13,0x8
  41fb80:	mov    QWORD PTR [rsp+0x70],rcx
  41fb85:	jmp    0x41f7d3
  41fb8a:	mov    edx,DWORD PTR [rsp+0xa4]
  41fb91:	add    r13,0x8
  41fb95:	mov    BYTE PTR [rax],dl
  41fb97:	jmp    0x41f4c0
  41fb9c:	mov    rax,QWORD PTR [r13+0x0]
  41fba0:	add    r13,0x8
  41fba4:	mov    QWORD PTR [rsp+0x70],rax
  41fba9:	jmp    0x41f6f8
  41fbae:	mov    DWORD PTR [rsp+0x90],0x0
  41fbb9:	movzx  eax,BYTE PTR [rdi+0x1]
  41fbbd:	lea    r11,[r12+0x10]
  41fbc2:	mov    r14d,0x2
  41fbc8:	jmp    0x41f5c0
  41fbcd:	sub    ecx,0x30
  41fbd0:	movzx  eax,BYTE PTR [rdi+0x1]
  41fbd4:	mov    DWORD PTR [r11],ecx
  41fbd7:	jmp    0x41f5c0
  41fbdc:	mov    rdx,r12
  41fbdf:	mov    rcx,rax
  41fbe2:	call   0x41e410
  41fbe7:	jmp    0x41f4c0
  41fbec:	cmp    BYTE PTR [rdi+0x2],0x32
  41fbf0:	mov    eax,0x33
  41fbf5:	jne    0x41f824
  41fbfb:	lea    rbx,[rdi+0x3]
  41fbff:	movzx  eax,BYTE PTR [rdi+0x3]
  41fc03:	mov    r10d,0x2
  41fc09:	mov    r14d,0x4
  41fc0f:	jmp    0x41f5c0
  41fc14:	mov    edx,DWORD PTR [rsp+0xa4]
  41fc1b:	add    r13,0x8
  41fc1f:	mov    WORD PTR [rax],dx
  41fc22:	jmp    0x41f4c0
  41fc27:	movsxd rcx,DWORD PTR [r13+0x0]
  41fc2b:	add    r13,0x8
  41fc2f:	mov    QWORD PTR [rsp+0x70],rcx
  41fc34:	jmp    0x41f7d3
  41fc39:	mov    eax,DWORD PTR [r13+0x0]
  41fc3d:	add    r13,0x8
  41fc41:	mov    QWORD PTR [rsp+0x70],rax
  41fc46:	jmp    0x41f6f8
  41fc4b:	mov    eax,DWORD PTR [rsp+0x48]
  41fc4f:	mov    DWORD PTR [rsp+0x90],0x10
  41fc5a:	mov    DWORD PTR [rsp+0x88],eax
  41fc61:	jmp    0x41f4e3
  41fc66:	mov    rdx,r12
  41fc69:	mov    ecx,0x25
  41fc6e:	mov    rbx,rsi
  41fc71:	call   0x41dba0
  41fc76:	jmp    0x41f4c0
  41fc7b:	movzx  eax,WORD PTR [rsp+0x70]
  41fc80:	mov    r13,rdx
  41fc83:	mov    QWORD PTR [rsp+0x70],rax
  41fc88:	jmp    0x41f6f8
  41fc8d:	movsx  rcx,WORD PTR [rsp+0x70]
  41fc93:	mov    r13,rax
  41fc96:	mov    QWORD PTR [rsp+0x70],rcx
  41fc9b:	jmp    0x41f7d3
  41fca0:	test   r14d,r14d
  41fca3:	jne    0x41fd08
  41fca5:	or     DWORD PTR [rsp+0x88],0x400
  41fcb0:	neg    DWORD PTR [rsp+0x8c]
  41fcb7:	jmp    0x41fa29
  41fcbc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  41fcc4:	add    r13,0x8
  41fcc8:	mov    QWORD PTR [rax],rdx
  41fccb:	jmp    0x41f4c0
  41fcd0:	movzx  eax,BYTE PTR [rsp+0x70]
  41fcd5:	mov    QWORD PTR [rsp+0x70],rax
  41fcda:	jmp    0x41f6f8
  41fcdf:	movsx  rcx,BYTE PTR [rsp+0x70]
  41fce5:	mov    QWORD PTR [rsp+0x70],rcx
  41fcea:	jmp    0x41f7d3
  41fcef:	lea    rbx,[rdi+0x3]
  41fcf3:	movzx  eax,BYTE PTR [rdi+0x3]
  41fcf7:	mov    r10d,0x3
  41fcfd:	mov    r14d,0x4
  41fd03:	jmp    0x41f5c0
  41fd08:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41fd13:	movzx  eax,BYTE PTR [rdi+0x1]
  41fd17:	mov    r13,rdx
  41fd1a:	xor    r11d,r11d
  41fd1d:	jmp    0x41f5c0
  41fd22:	nop
  41fd23:	nop
  41fd24:	nop
  41fd25:	nop
  41fd26:	nop
  41fd27:	nop
  41fd28:	nop
  41fd29:	nop
  41fd2a:	nop
  41fd2b:	nop
  41fd2c:	nop
  41fd2d:	nop
  41fd2e:	nop
  41fd2f:	nop
  41fd30:	push   rbx
  41fd31:	sub    rsp,0x20
  41fd35:	xor    ebx,ebx
  41fd37:	cmp    ecx,0x1b
  41fd3a:	jle    0x41fd4d
  41fd3c:	mov    eax,0x4
  41fd41:	add    eax,eax
  41fd43:	add    ebx,0x1
  41fd46:	lea    edx,[rax+0x17]
  41fd49:	cmp    edx,ecx
  41fd4b:	jl     0x41fd41
  41fd4d:	mov    ecx,ebx
  41fd4f:	call   0x421620
  41fd54:	mov    DWORD PTR [rax],ebx
  41fd56:	add    rax,0x4
  41fd5a:	add    rsp,0x20
  41fd5e:	pop    rbx
  41fd5f:	ret    
  41fd60:	push   rsi
  41fd61:	push   rbx
  41fd62:	sub    rsp,0x28
  41fd66:	mov    rbx,rcx
  41fd69:	mov    ecx,r8d
  41fd6c:	mov    rsi,rdx
  41fd6f:	call   0x41fd30
  41fd74:	movzx  ecx,BYTE PTR [rbx]
  41fd77:	lea    r8,[rbx+0x1]
  41fd7b:	test   cl,cl
  41fd7d:	mov    BYTE PTR [rax],cl
  41fd7f:	mov    rcx,rax
  41fd82:	je     0x41fd99
  41fd84:	add    r8,0x1
  41fd88:	movzx  r9d,BYTE PTR [r8-0x1]
  41fd8d:	add    rcx,0x1
  41fd91:	test   r9b,r9b
  41fd94:	mov    BYTE PTR [rcx],r9b
  41fd97:	jne    0x41fd84
  41fd99:	test   rsi,rsi
  41fd9c:	je     0x41fda1
  41fd9e:	mov    QWORD PTR [rsi],rcx
  41fda1:	add    rsp,0x28
  41fda5:	pop    rbx
  41fda6:	pop    rsi
  41fda7:	ret    
  41fda8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fdb0:	mov    edx,0x1
  41fdb5:	mov    rax,rcx
  41fdb8:	mov    ecx,DWORD PTR [rcx-0x4]
  41fdbb:	shl    edx,cl
  41fdbd:	mov    DWORD PTR [rax+0x4],ecx
  41fdc0:	lea    rcx,[rax-0x4]
  41fdc4:	mov    DWORD PTR [rax+0x8],edx
  41fdc7:	jmp    0x421730
  41fdcc:	nop    DWORD PTR [rax+0x0]
  41fdd0:	push   r15
  41fdd2:	push   r14
  41fdd4:	push   r13
  41fdd6:	push   r12
  41fdd8:	push   rbp
  41fdd9:	push   rdi
  41fdda:	push   rsi
  41fddb:	push   rbx
  41fddc:	sub    rsp,0x38
  41fde0:	xor    eax,eax
  41fde2:	mov    edi,DWORD PTR [rdx+0x14]
  41fde5:	cmp    edi,DWORD PTR [rcx+0x14]
  41fde8:	mov    r15,rdx
  41fdeb:	jg     0x41ff39
  41fdf1:	sub    edi,0x1
  41fdf4:	lea    rbx,[rdx+0x18]
  41fdf8:	lea    r12,[rcx+0x18]
  41fdfc:	movsxd r13,edi
  41fdff:	xor    edx,edx
  41fe01:	shl    r13,0x2
  41fe05:	lea    rbp,[rbx+r13*1]
  41fe09:	add    r13,r12
  41fe0c:	mov    eax,DWORD PTR [rbp+0x0]
  41fe0f:	lea    r8d,[rax+0x1]
  41fe13:	mov    eax,DWORD PTR [r13+0x0]
  41fe17:	div    r8d
  41fe1a:	test   eax,eax
  41fe1c:	mov    r14d,eax
  41fe1f:	mov    DWORD PTR [rsp+0x2c],eax
  41fe23:	je     0x41feb7
  41fe29:	mov    edx,eax
  41fe2b:	mov    rsi,rbx
  41fe2e:	mov    r11,r12
  41fe31:	xor    eax,eax
  41fe33:	xor    r10d,r10d
  41fe36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe40:	add    rsi,0x4
  41fe44:	mov    r8d,DWORD PTR [rsi-0x4]
  41fe48:	mov    r9d,DWORD PTR [r11]
  41fe4b:	add    r11,0x4
  41fe4f:	imul   r8,rdx
  41fe53:	add    r8,rax
  41fe56:	mov    rax,r8
  41fe59:	mov    r8d,r8d
  41fe5c:	sub    r9,r8
  41fe5f:	shr    rax,0x20
  41fe63:	sub    r9,r10
  41fe66:	mov    r10,r9
  41fe69:	mov    DWORD PTR [r11-0x4],r9d
  41fe6d:	shr    r10,0x20
  41fe71:	and    r10d,0x1
  41fe75:	cmp    rbp,rsi
  41fe78:	jae    0x41fe40
  41fe7a:	mov    r11d,DWORD PTR [r13+0x0]
  41fe7e:	test   r11d,r11d
  41fe81:	jne    0x41feb7
  41fe83:	lea    rax,[r13-0x4]
  41fe87:	cmp    r12,rax
  41fe8a:	jae    0x41feb4
  41fe8c:	mov    r10d,DWORD PTR [r13-0x4]
  41fe90:	test   r10d,r10d
  41fe93:	je     0x41fea8
  41fe95:	jmp    0x41feb4
  41fe97:	nop    WORD PTR [rax+rax*1+0x0]
  41fea0:	mov    r9d,DWORD PTR [rax]
  41fea3:	test   r9d,r9d
  41fea6:	jne    0x41feb4
  41fea8:	sub    rax,0x4
  41feac:	sub    edi,0x1
  41feaf:	cmp    r12,rax
  41feb2:	jb     0x41fea0
  41feb4:	mov    DWORD PTR [rcx+0x14],edi
  41feb7:	mov    rdx,r15
  41feba:	mov    rsi,rcx
  41febd:	call   0x421c50
  41fec2:	test   eax,eax
  41fec4:	js     0x41ff35
  41fec6:	lea    eax,[r14+0x1]
  41feca:	mov    rcx,r12
  41fecd:	xor    edx,edx
  41fecf:	mov    DWORD PTR [rsp+0x2c],eax
  41fed3:	add    rbx,0x4
  41fed7:	mov    eax,DWORD PTR [rcx]
  41fed9:	mov    r8d,DWORD PTR [rbx-0x4]
  41fedd:	add    rcx,0x4
  41fee1:	sub    rax,r8
  41fee4:	sub    rax,rdx
  41fee7:	mov    rdx,rax
  41feea:	mov    DWORD PTR [rcx-0x4],eax
  41feed:	shr    rdx,0x20
  41fef1:	and    edx,0x1
  41fef4:	cmp    rbp,rbx
  41fef7:	jae    0x41fed3
  41fef9:	movsxd rax,edi
  41fefc:	lea    rdx,[r12+rax*4]
  41ff00:	mov    r8d,DWORD PTR [rdx]
  41ff03:	test   r8d,r8d
  41ff06:	jne    0x41ff35
  41ff08:	lea    rax,[rdx-0x4]
  41ff0c:	cmp    r12,rax
  41ff0f:	jae    0x41ff32
  41ff11:	mov    ecx,DWORD PTR [rdx-0x4]
  41ff14:	test   ecx,ecx
  41ff16:	je     0x41ff26
  41ff18:	jmp    0x41ff32
  41ff1a:	nop    WORD PTR [rax+rax*1+0x0]
  41ff20:	mov    edx,DWORD PTR [rax]
  41ff22:	test   edx,edx
  41ff24:	jne    0x41ff32
  41ff26:	sub    rax,0x4
  41ff2a:	sub    edi,0x1
  41ff2d:	cmp    r12,rax
  41ff30:	jb     0x41ff20
  41ff32:	mov    DWORD PTR [rsi+0x14],edi
  41ff35:	mov    eax,DWORD PTR [rsp+0x2c]
  41ff39:	add    rsp,0x38
  41ff3d:	pop    rbx
  41ff3e:	pop    rsi
  41ff3f:	pop    rdi
  41ff40:	pop    rbp
  41ff41:	pop    r12
  41ff43:	pop    r13
  41ff45:	pop    r14
  41ff47:	pop    r15
  41ff49:	ret    
  41ff4a:	nop
  41ff4b:	nop
  41ff4c:	nop
  41ff4d:	nop
  41ff4e:	nop
  41ff4f:	nop
  41ff50:	push   r15
  41ff52:	push   r14
  41ff54:	push   r13
  41ff56:	push   r12
  41ff58:	push   rbp
  41ff59:	push   rdi
  41ff5a:	push   rsi
  41ff5b:	push   rbx
  41ff5c:	sub    rsp,0xb8
  41ff63:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41ff6b:	mov    r12d,DWORD PTR [r9]
  41ff6e:	mov    eax,r12d
  41ff71:	and    eax,0xffffffcf
  41ff74:	mov    DWORD PTR [r9],eax
  41ff77:	mov    eax,r12d
  41ff7a:	and    eax,0x7
  41ff7d:	cmp    eax,0x4
  41ff80:	ja     0x4213b3
  41ff86:	mov    r13d,edx
  41ff89:	lea    rdx,[rip+0x11d50]        # 0x431ce0
  41ff90:	mov    QWORD PTR [rsp+0x28],r9
  41ff95:	mov    r15,r8
  41ff98:	mov    rbp,rcx
  41ff9b:	movsxd rax,DWORD PTR [rdx+rax*4]
  41ff9f:	add    rdx,rax
  41ffa2:	jmp    rdx
  41ffa4:	mov    edi,DWORD PTR [rcx]
  41ffa6:	xor    ecx,ecx
  41ffa8:	cmp    edi,0x20
  41ffab:	jle    0x41ffbb
  41ffad:	mov    eax,0x20
  41ffb2:	add    eax,eax
  41ffb4:	add    ecx,0x1
  41ffb7:	cmp    edi,eax
  41ffb9:	jg     0x41ffb2
  41ffbb:	call   0x421620
  41ffc0:	mov    rsi,rax
  41ffc3:	lea    eax,[rdi-0x1]
  41ffc6:	lea    r9,[rsi+0x18]
  41ffca:	sar    eax,0x5
  41ffcd:	cdqe   
  41ffcf:	mov    rdx,r9
  41ffd2:	lea    r11,[r15+rax*4]
  41ffd6:	mov    rax,r15
  41ffd9:	nop    DWORD PTR [rax+0x0]
  41ffe0:	mov    ecx,DWORD PTR [rax]
  41ffe2:	add    rax,0x4
  41ffe6:	add    rdx,0x4
  41ffea:	cmp    r11,rax
  41ffed:	mov    DWORD PTR [rdx-0x4],ecx
  41fff0:	jae    0x41ffe0
  41fff2:	sub    rdx,r9
  41fff5:	sar    rdx,0x2
  41fff9:	mov    r14d,edx
  41fffc:	movsxd rdx,edx
  41ffff:	lea    rax,[r9+rdx*4-0x4]
  420004:	jmp    0x42001f
  420006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420010:	sub    rax,0x4
  420014:	test   edx,edx
  420016:	mov    r14d,edx
  420019:	je     0x420520
  42001f:	mov    r8d,DWORD PTR [rax]
  420022:	lea    edx,[r14-0x1]
  420026:	test   r8d,r8d
  420029:	je     0x420010
  42002b:	movsxd rdx,edx
  42002e:	mov    DWORD PTR [rsi+0x14],r14d
  420032:	shl    r14d,0x5
  420036:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  42003b:	xor    eax,0x1f
  42003e:	sub    r14d,eax
  420041:	mov    rcx,rsi
  420044:	call   0x4214c0
  420049:	test   eax,eax
  42004b:	mov    DWORD PTR [rsp+0x9c],eax
  420052:	mov    r11d,r13d
  420055:	jne    0x420530
  42005b:	mov    ecx,DWORD PTR [rsi+0x14]
  42005e:	test   ecx,ecx
  420060:	jne    0x420110
  420066:	mov    rcx,rsi
  420069:	call   0x421730
  42006e:	mov    rax,QWORD PTR [rsp+0x130]
  420076:	mov    rdx,QWORD PTR [rsp+0x138]
  42007e:	lea    rcx,[rip+0x11c58]        # 0x431cdd
  420085:	mov    r8d,0x1
  42008b:	mov    DWORD PTR [rax],0x1
  420091:	call   0x41fd60
  420096:	nop
  420097:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  42009f:	add    rsp,0xb8
  4200a6:	pop    rbx
  4200a7:	pop    rsi
  4200a8:	pop    rdi
  4200a9:	pop    rbp
  4200aa:	pop    r12
  4200ac:	pop    r13
  4200ae:	pop    r14
  4200b0:	pop    r15
  4200b2:	ret    
  4200b3:	mov    rax,QWORD PTR [rsp+0x130]
  4200bb:	mov    rdx,QWORD PTR [rsp+0x138]
  4200c3:	lea    rcx,[rip+0x11c0f]        # 0x431cd9
  4200ca:	mov    r8d,0x3
  4200d0:	mov    DWORD PTR [rax],0xffff8000
  4200d6:	call   0x41fd60
  4200db:	jmp    0x420097
  4200dd:	nop    DWORD PTR [rax]
  4200e0:	mov    rax,QWORD PTR [rsp+0x130]
  4200e8:	mov    rdx,QWORD PTR [rsp+0x138]
  4200f0:	lea    rcx,[rip+0x11bd9]        # 0x431cd0
  4200f7:	mov    r8d,0x8
  4200fd:	mov    DWORD PTR [rax],0xffff8000
  420103:	call   0x41fd60
  420108:	jmp    0x420097
  42010a:	nop    WORD PTR [rax+rax*1+0x0]
  420110:	lea    rdx,[rsp+0x9c]
  420118:	mov    rcx,rsi
  42011b:	mov    DWORD PTR [rsp+0x30],r11d
  420120:	call   0x421de0
  420125:	movq   rdx,xmm0
  42012a:	movq   r9,xmm0
  42012f:	mov    r11d,DWORD PTR [rsp+0x30]
  420134:	pxor   xmm0,xmm0
  420138:	shr    rdx,0x20
  42013c:	mov    r9d,r9d
  42013f:	and    edx,0xfffff
  420145:	lea    ecx,[r11+r14*1-0x1]
  42014a:	or     edx,0x3ff00000
  420150:	mov    rax,rdx
  420153:	cvtsi2sd xmm0,ecx
  420157:	shl    rax,0x20
  42015b:	mov    ebx,ecx
  42015d:	or     r9,rax
  420160:	sar    ebx,0x1f
  420163:	mov    QWORD PTR [rsp+0x30],r9
  420168:	mov    eax,ebx
  42016a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  420170:	xor    eax,ecx
  420172:	sub    eax,ebx
  420174:	subsd  xmm1,QWORD PTR [rip+0x11b7c]        # 0x431cf8
  42017c:	sub    eax,0x435
  420181:	test   eax,eax
  420183:	mulsd  xmm0,QWORD PTR [rip+0x11b85]        # 0x431d10
  42018b:	mulsd  xmm1,QWORD PTR [rip+0x11b6d]        # 0x431d00
  420193:	addsd  xmm1,QWORD PTR [rip+0x11b6d]        # 0x431d08
  42019b:	addsd  xmm1,xmm0
  42019f:	jle    0x4201b5
  4201a1:	pxor   xmm0,xmm0
  4201a5:	cvtsi2sd xmm0,eax
  4201a9:	mulsd  xmm0,QWORD PTR [rip+0x11b67]        # 0x431d18
  4201b1:	addsd  xmm1,xmm0
  4201b5:	cvttsd2si eax,xmm1
  4201b9:	pxor   xmm6,xmm6
  4201bd:	ucomisd xmm6,xmm1
  4201c1:	mov    DWORD PTR [rsp+0x30],eax
  4201c5:	ja     0x420a53
  4201cb:	mov    eax,ecx
  4201cd:	mov    r9d,r9d
  4201d0:	mov    DWORD PTR [rsp+0x6c],0x1
  4201d8:	shl    eax,0x14
  4201db:	add    eax,edx
  4201dd:	shl    rax,0x20
  4201e1:	or     r9,rax
  4201e4:	cmp    DWORD PTR [rsp+0x30],0x16
  4201e9:	mov    QWORD PTR [rsp+0x80],r9
  4201f1:	ja     0x420220
  4201f3:	movsxd rax,DWORD PTR [rsp+0x30]
  4201f8:	mov    rdx,QWORD PTR [rip+0x11e61]        # 0x432060
  4201ff:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  420204:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  42020d:	jbe    0x420570
  420213:	sub    DWORD PTR [rsp+0x30],0x1
  420218:	mov    DWORD PTR [rsp+0x6c],0x0
  420220:	mov    eax,r14d
  420223:	mov    DWORD PTR [rsp+0x50],0x0
  42022b:	sub    eax,ecx
  42022d:	sub    eax,0x1
  420230:	mov    DWORD PTR [rsp+0x40],eax
  420234:	js     0x420a40
  42023a:	mov    eax,DWORD PTR [rsp+0x30]
  42023e:	test   eax,eax
  420240:	js     0x420a20
  420246:	add    DWORD PTR [rsp+0x40],eax
  42024a:	mov    DWORD PTR [rsp+0x88],eax
  420251:	mov    DWORD PTR [rsp+0x58],0x0
  420259:	cmp    DWORD PTR [rsp+0x120],0x9
  420261:	ja     0x420550
  420267:	cmp    DWORD PTR [rsp+0x120],0x5
  42026f:	jle    0x42055b
  420275:	sub    DWORD PTR [rsp+0x120],0x4
  42027d:	xor    eax,eax
  42027f:	cmp    DWORD PTR [rsp+0x120],0x3
  420287:	je     0x420c14
  42028d:	jle    0x420973
  420293:	cmp    DWORD PTR [rsp+0x120],0x4
  42029b:	mov    DWORD PTR [rsp+0x60],0x1
  4202a3:	je     0x420580
  4202a9:	cmp    DWORD PTR [rsp+0x120],0x5
  4202b1:	jne    0x420989
  4202b7:	mov    ebx,DWORD PTR [rsp+0x30]
  4202bb:	add    ebx,DWORD PTR [rsp+0x128]
  4202c2:	mov    DWORD PTR [rsp+0x8c],ebx
  4202c9:	add    ebx,0x1
  4202cc:	test   ebx,ebx
  4202ce:	mov    DWORD PTR [rsp+0x68],ebx
  4202d2:	mov    ecx,ebx
  4202d4:	jle    0x420e50
  4202da:	cmp    ebx,0xe
  4202dd:	mov    DWORD PTR [rsp+0x9c],ebx
  4202e4:	setbe  bl
  4202e7:	and    ebx,eax
  4202e9:	mov    QWORD PTR [rsp+0x78],r9
  4202ee:	mov    DWORD PTR [rsp+0x70],r11d
  4202f3:	call   0x41fd30
  4202f8:	mov    QWORD PTR [rsp+0x48],rax
  4202fd:	mov    eax,DWORD PTR [rbp+0xc]
  420300:	mov    r11d,DWORD PTR [rsp+0x70]
  420305:	mov    r9,QWORD PTR [rsp+0x78]
  42030a:	sub    eax,0x1
  42030d:	mov    DWORD PTR [rsp+0x38],eax
  420311:	je     0x420338
  420313:	mov    ecx,DWORD PTR [rsp+0x38]
  420317:	mov    eax,0x2
  42031c:	test   ecx,ecx
  42031e:	cmovns eax,ecx
  420321:	and    r12d,0x8
  420325:	mov    DWORD PTR [rsp+0x38],eax
  420329:	je     0x420338
  42032b:	mov    eax,0x3
  420330:	sub    eax,DWORD PTR [rsp+0x38]
  420334:	mov    DWORD PTR [rsp+0x38],eax
  420338:	test   bl,bl
  42033a:	je     0x420630
  420340:	mov    eax,DWORD PTR [rsp+0x38]
  420344:	or     eax,DWORD PTR [rsp+0x30]
  420348:	jne    0x420630
  42034e:	mov    eax,DWORD PTR [rsp+0x6c]
  420352:	mov    DWORD PTR [rsp+0x9c],0x0
  42035d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  420366:	test   eax,eax
  420368:	je     0x42037c
  42036a:	movsd  xmm0,QWORD PTR [rip+0x119b6]        # 0x431d28
  420372:	ucomisd xmm0,xmm4
  420376:	ja     0x4211ab
  42037c:	movapd xmm0,xmm4
  420380:	mov    r12d,DWORD PTR [rsp+0x68]
  420385:	addsd  xmm0,xmm4
  420389:	addsd  xmm0,QWORD PTR [rip+0x119af]        # 0x431d40
  420391:	movq   rdx,xmm0
  420396:	movq   rax,xmm0
  42039b:	shr    rdx,0x20
  42039f:	mov    eax,eax
  4203a1:	sub    edx,0x3400000
  4203a7:	shl    rdx,0x20
  4203ab:	or     rax,rdx
  4203ae:	test   r12d,r12d
  4203b1:	je     0x4205e7
  4203b7:	mov    r9d,DWORD PTR [rsp+0x68]
  4203bc:	movapd xmm0,xmm4
  4203c0:	xor    ecx,ecx
  4203c2:	mov    ebx,DWORD PTR [rsp+0x60]
  4203c6:	lea    edx,[r9-0x1]
  4203ca:	movsxd rdx,edx
  4203cd:	test   ebx,ebx
  4203cf:	je     0x420ef3
  4203d5:	mov    r10,QWORD PTR [rip+0x11c84]        # 0x432060
  4203dc:	movsd  xmm1,QWORD PTR [rip+0x1197c]        # 0x431d60
  4203e4:	mov    QWORD PTR [rsp+0x38],rax
  4203e9:	cvttsd2si eax,xmm0
  4203ed:	pxor   xmm2,xmm2
  4203f1:	mov    DWORD PTR [rsp+0x9c],0x0
  4203fc:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  420402:	mov    rdx,QWORD PTR [rsp+0x48]
  420407:	mov    rbx,rdx
  42040a:	add    rbx,0x1
  42040e:	cvtsi2sd xmm2,eax
  420412:	add    eax,0x30
  420415:	mov    BYTE PTR [rdx],al
  420417:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42041d:	subsd  xmm0,xmm2
  420421:	subsd  xmm1,xmm5
  420425:	ucomisd xmm1,xmm0
  420429:	ja     0x4204c4
  42042f:	movsd  xmm5,QWORD PTR [rip+0x118f1]        # 0x431d28
  420437:	movapd xmm2,xmm5
  42043b:	subsd  xmm2,xmm0
  42043f:	ucomisd xmm1,xmm2
  420443:	ja     0x420fc7
  420449:	mov    eax,DWORD PTR [rsp+0x9c]
  420450:	movsd  xmm3,QWORD PTR [rip+0x118d8]        # 0x431d30
  420458:	add    eax,0x1
  42045b:	cmp    r9d,eax
  42045e:	mov    DWORD PTR [rsp+0x9c],eax
  420465:	jg     0x42049c
  420467:	jmp    0x42061e
  42046c:	nop    DWORD PTR [rax+0x0]
  420470:	movapd xmm2,xmm5
  420474:	subsd  xmm2,xmm0
  420478:	ucomisd xmm1,xmm2
  42047c:	ja     0x420fc7
  420482:	mov    eax,DWORD PTR [rsp+0x9c]
  420489:	add    eax,0x1
  42048c:	cmp    r9d,eax
  42048f:	mov    DWORD PTR [rsp+0x9c],eax
  420496:	jle    0x42061e
  42049c:	mulsd  xmm0,xmm3
  4204a0:	add    rbx,0x1
  4204a4:	pxor   xmm2,xmm2
  4204a8:	mulsd  xmm1,xmm3
  4204ac:	cvttsd2si eax,xmm0
  4204b0:	cvtsi2sd xmm2,eax
  4204b4:	add    eax,0x30
  4204b7:	mov    BYTE PTR [rbx-0x1],al
  4204ba:	subsd  xmm0,xmm2
  4204be:	ucomisd xmm1,xmm0
  4204c2:	jbe    0x420470
  4204c4:	ucomisd xmm0,xmm6
  4204c8:	lea    ebp,[rcx+0x1]
  4204cb:	jp     0x4204d3
  4204cd:	je     0x420e27
  4204d3:	mov    r15d,0x10
  4204d9:	nop    DWORD PTR [rax+0x0]
  4204e0:	mov    rcx,rsi
  4204e3:	call   0x421730
  4204e8:	cmp    QWORD PTR [rsp+0x138],0x0
  4204f1:	mov    rax,QWORD PTR [rsp+0x130]
  4204f9:	mov    BYTE PTR [rbx],0x0
  4204fc:	mov    DWORD PTR [rax],ebp
  4204fe:	je     0x42050b
  420500:	mov    rax,QWORD PTR [rsp+0x138]
  420508:	mov    QWORD PTR [rax],rbx
  42050b:	mov    rax,QWORD PTR [rsp+0x28]
  420510:	or     DWORD PTR [rax],r15d
  420513:	mov    rax,QWORD PTR [rsp+0x48]
  420518:	jmp    0x420097
  42051d:	nop    DWORD PTR [rax]
  420520:	mov    DWORD PTR [rsi+0x14],0x0
  420527:	jmp    0x420041
  42052c:	nop    DWORD PTR [rax+0x0]
  420530:	mov    edx,eax
  420532:	mov    rcx,rsi
  420535:	call   0x4213c0
  42053a:	mov    eax,DWORD PTR [rsp+0x9c]
  420541:	lea    r11d,[r13+rax*1+0x0]
  420546:	sub    r14d,eax
  420549:	jmp    0x42005b
  42054e:	xchg   ax,ax
  420550:	mov    DWORD PTR [rsp+0x120],0x0
  42055b:	add    ecx,0x3fe
  420561:	cmp    ecx,0x7f7
  420567:	setbe  al
  42056a:	jmp    0x42027f
  42056f:	nop
  420570:	mov    DWORD PTR [rsp+0x6c],0x0
  420578:	jmp    0x420220
  42057d:	nop    DWORD PTR [rax]
  420580:	mov    edx,DWORD PTR [rsp+0x128]
  420587:	test   edx,edx
  420589:	jle    0x420e3b
  42058f:	cmp    DWORD PTR [rsp+0x128],0xe
  420597:	setbe  bl
  42059a:	mov    ecx,DWORD PTR [rsp+0x128]
  4205a1:	and    ebx,eax
  4205a3:	mov    DWORD PTR [rsp+0x9c],ecx
  4205aa:	mov    DWORD PTR [rsp+0x8c],ecx
  4205b1:	mov    DWORD PTR [rsp+0x68],ecx
  4205b5:	jmp    0x4202e9
  4205ba:	movapd xmm0,xmm4
  4205be:	addsd  xmm0,xmm4
  4205c2:	addsd  xmm0,QWORD PTR [rip+0x11776]        # 0x431d40
  4205ca:	movq   rdx,xmm0
  4205cf:	movq   rax,xmm0
  4205d4:	shr    rdx,0x20
  4205d8:	mov    eax,eax
  4205da:	sub    edx,0x3400000
  4205e0:	shl    rdx,0x20
  4205e4:	or     rax,rdx
  4205e7:	movapd xmm1,xmm4
  4205eb:	mov    QWORD PTR [rsp+0x38],rax
  4205f0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4205f6:	subsd  xmm1,QWORD PTR [rip+0x1174a]        # 0x431d48
  4205fe:	ucomisd xmm1,xmm0
  420602:	ja     0x420ee4
  420608:	movsd  xmm2,QWORD PTR [rip+0x11740]        # 0x431d50
  420610:	xorpd  xmm0,xmm2
  420614:	ucomisd xmm0,xmm1
  420618:	ja     0x4209fd
  42061e:	movq   r9,xmm4
  420623:	mov    DWORD PTR [rsp+0x38],0x0
  42062b:	nop    DWORD PTR [rax+rax*1+0x0]
  420630:	test   r11d,r11d
  420633:	js     0x4206d2
  420639:	movsxd rax,DWORD PTR [rsp+0x30]
  42063e:	cmp    eax,DWORD PTR [rbp+0x14]
  420641:	jg     0x4206d2
  420647:	mov    ebx,DWORD PTR [rsp+0x68]
  42064b:	mov    rdx,QWORD PTR [rip+0x11a0e]        # 0x432060
  420652:	test   ebx,ebx
  420654:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  420659:	jg     0x420d63
  42065f:	mov    eax,DWORD PTR [rsp+0x128]
  420666:	shr    eax,0x1f
  420669:	test   al,al
  42066b:	je     0x420d63
  420671:	test   ebx,ebx
  420673:	jne    0x4209fd
  420679:	mulsd  xmm2,QWORD PTR [rip+0x116c7]        # 0x431d48
  420681:	mov    QWORD PTR [rsp+0x38],r9
  420686:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42068c:	ucomisd xmm2,xmm5
  420690:	jae    0x4209fd
  420696:	mov    ebp,DWORD PTR [rsp+0x30]
  42069a:	xor    r12d,r12d
  42069d:	xor    edi,edi
  42069f:	add    ebp,0x2
  4206a2:	mov    rax,QWORD PTR [rsp+0x48]
  4206a7:	mov    r15d,0x20
  4206ad:	lea    rbx,[rax+0x1]
  4206b1:	mov    BYTE PTR [rax],0x31
  4206b4:	mov    rcx,r12
  4206b7:	call   0x421730
  4206bc:	test   rdi,rdi
  4206bf:	je     0x4204e0
  4206c5:	mov    rcx,rdi
  4206c8:	call   0x421730
  4206cd:	jmp    0x4204e0
  4206d2:	mov    r9d,DWORD PTR [rsp+0x60]
  4206d7:	test   r9d,r9d
  4206da:	je     0x420be0
  4206e0:	mov    edx,DWORD PTR [rbp+0x4]
  4206e3:	sub    edi,r14d
  4206e6:	mov    ecx,r11d
  4206e9:	lea    eax,[rdi+0x1]
  4206ec:	sub    ecx,edi
  4206ee:	cmp    ecx,edx
  4206f0:	mov    DWORD PTR [rsp+0x9c],eax
  4206f7:	jge    0x42072c
  4206f9:	mov    ebx,DWORD PTR [rsp+0x120]
  420700:	lea    ecx,[rbx-0x3]
  420703:	and    ecx,0xfffffffd
  420706:	je     0x42072c
  420708:	mov    ebx,DWORD PTR [rsp+0x68]
  42070c:	sub    r11d,edx
  42070f:	lea    eax,[r11+0x1]
  420713:	test   ebx,ebx
  420715:	mov    DWORD PTR [rsp+0x9c],eax
  42071c:	setg   cl
  42071f:	cmp    ebx,eax
  420721:	setl   dl
  420724:	test   cl,dl
  420726:	je     0x420e6f
  42072c:	cmp    DWORD PTR [rsp+0x120],0x1
  420734:	jle    0x420e6f
  42073a:	mov    ebx,DWORD PTR [rsp+0x58]
  42073e:	mov    eax,DWORD PTR [rsp+0x68]
  420742:	mov    r12d,ebx
  420745:	sub    eax,0x1
  420748:	sub    r12d,eax
  42074b:	cmp    ebx,eax
  42074d:	jge    0x420763
  42074f:	mov    edx,eax
  420751:	sub    edx,DWORD PTR [rsp+0x58]
  420755:	xor    r12d,r12d
  420758:	add    DWORD PTR [rsp+0x88],edx
  42075f:	mov    DWORD PTR [rsp+0x58],eax
  420763:	mov    eax,DWORD PTR [rsp+0x68]
  420767:	test   eax,eax
  420769:	js     0x421102
  42076f:	mov    ebx,DWORD PTR [rsp+0x50]
  420773:	mov    DWORD PTR [rsp+0x9c],eax
  42077a:	mov    ecx,0x1
  42077f:	add    DWORD PTR [rsp+0x50],eax
  420783:	add    DWORD PTR [rsp+0x40],eax
  420787:	call   0x421860
  42078c:	mov    rdi,rax
  42078f:	mov    ecx,DWORD PTR [rsp+0x40]
  420793:	test   ecx,ecx
  420795:	mov    eax,ecx
  420797:	jle    0x4207b5
  420799:	test   ebx,ebx
  42079b:	jle    0x4207b5
  42079d:	cmp    ecx,ebx
  42079f:	cmovg  eax,ebx
  4207a2:	sub    DWORD PTR [rsp+0x50],eax
  4207a6:	sub    ecx,eax
  4207a8:	mov    DWORD PTR [rsp+0x9c],eax
  4207af:	sub    ebx,eax
  4207b1:	mov    DWORD PTR [rsp+0x40],ecx
  4207b5:	mov    r8d,DWORD PTR [rsp+0x58]
  4207ba:	test   r8d,r8d
  4207bd:	jle    0x42080b
  4207bf:	mov    ecx,DWORD PTR [rsp+0x60]
  4207c3:	test   ecx,ecx
  4207c5:	je     0x420c00
  4207cb:	test   r12d,r12d
  4207ce:	jle    0x4207fe
  4207d0:	mov    rcx,rdi
  4207d3:	mov    edx,r12d
  4207d6:	call   0x4219c0
  4207db:	mov    rdx,rsi
  4207de:	mov    rcx,rax
  4207e1:	mov    rdi,rax
  4207e4:	call   0x421890
  4207e9:	mov    rcx,rsi
  4207ec:	mov    QWORD PTR [rsp+0x70],rax
  4207f1:	call   0x421730
  4207f6:	mov    rax,QWORD PTR [rsp+0x70]
  4207fb:	mov    rsi,rax
  4207fe:	mov    edx,DWORD PTR [rsp+0x58]
  420802:	sub    edx,r12d
  420805:	jne    0x420c04
  42080b:	mov    ecx,0x1
  420810:	call   0x421860
  420815:	mov    r12,rax
  420818:	mov    eax,DWORD PTR [rsp+0x88]
  42081f:	test   eax,eax
  420821:	jle    0x420950
  420827:	mov    rcx,r12
  42082a:	mov    edx,eax
  42082c:	call   0x4219c0
  420831:	cmp    DWORD PTR [rsp+0x120],0x1
  420839:	mov    r12,rax
  42083c:	jg     0x420848
  42083e:	cmp    r14d,0x1
  420842:	je     0x42090c
  420848:	xor    ebp,ebp
  42084a:	mov    eax,DWORD PTR [r12+0x14]
  42084f:	sub    eax,0x1
  420852:	cdqe   
  420854:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  42085a:	xor    eax,0x1f
  42085d:	sub    eax,DWORD PTR [rsp+0x40]
  420861:	mov    edx,DWORD PTR [rsp+0x50]
  420865:	sub    eax,0x4
  420868:	and    eax,0x1f
  42086b:	add    edx,eax
  42086d:	mov    r13d,eax
  420870:	mov    DWORD PTR [rsp+0x9c],eax
  420877:	test   edx,edx
  420879:	mov    ecx,eax
  42087b:	jle    0x42088f
  42087d:	mov    rcx,rsi
  420880:	call   0x421b30
  420885:	mov    ecx,DWORD PTR [rsp+0x9c]
  42088c:	mov    rsi,rax
  42088f:	mov    edx,DWORD PTR [rsp+0x40]
  420893:	add    edx,ecx
  420895:	test   edx,edx
  420897:	jle    0x4208a4
  420899:	mov    rcx,r12
  42089c:	call   0x421b30
  4208a1:	mov    r12,rax
  4208a4:	mov    eax,DWORD PTR [rsp+0x6c]
  4208a8:	test   eax,eax
  4208aa:	jne    0x420c21
  4208b0:	mov    r14d,DWORD PTR [rsp+0x68]
  4208b5:	test   r14d,r14d
  4208b8:	jg     0x420a71
  4208be:	cmp    DWORD PTR [rsp+0x120],0x2
  4208c6:	jle    0x420a71
  4208cc:	mov    r11d,DWORD PTR [rsp+0x68]
  4208d1:	test   r11d,r11d
  4208d4:	jne    0x420a02
  4208da:	xor    r8d,r8d
  4208dd:	mov    rcx,r12
  4208e0:	mov    edx,0x5
  4208e5:	call   0x4217a0
  4208ea:	mov    rcx,rsi
  4208ed:	mov    rdx,rax
  4208f0:	mov    r12,rax
  4208f3:	call   0x421c50
  4208f8:	test   eax,eax
  4208fa:	jle    0x420a02
  420900:	mov    ebp,DWORD PTR [rsp+0x30]
  420904:	add    ebp,0x2
  420907:	jmp    0x4206a2
  42090c:	mov    eax,DWORD PTR [rbp+0x4]
  42090f:	add    eax,0x1
  420912:	cmp    r13d,eax
  420915:	jle    0x420848
  42091b:	add    DWORD PTR [rsp+0x50],0x1
  420920:	add    DWORD PTR [rsp+0x40],0x1
  420925:	mov    ebp,0x1
  42092a:	nop    WORD PTR [rax+rax*1+0x0]
  420930:	mov    edx,DWORD PTR [rsp+0x88]
  420937:	mov    eax,0x1f
  42093c:	test   edx,edx
  42093e:	je     0x42085d
  420944:	jmp    0x42084a
  420949:	nop    DWORD PTR [rax+0x0]
  420950:	cmp    DWORD PTR [rsp+0x120],0x1
  420958:	jg     0x420960
  42095a:	cmp    r14d,0x1
  42095e:	je     0x420964
  420960:	xor    ebp,ebp
  420962:	jmp    0x420930
  420964:	mov    eax,DWORD PTR [rbp+0x4]
  420967:	xor    ebp,ebp
  420969:	add    eax,0x1
  42096c:	cmp    r13d,eax
  42096f:	jle    0x420930
  420971:	jmp    0x42091b
  420973:	cmp    DWORD PTR [rsp+0x120],0x2
  42097b:	mov    DWORD PTR [rsp+0x60],0x0
  420983:	je     0x420580
  420989:	pxor   xmm0,xmm0
  42098d:	mov    QWORD PTR [rsp+0x60],r9
  420992:	mov    DWORD PTR [rsp+0x68],r11d
  420997:	cvtsi2sd xmm0,edi
  42099b:	mulsd  xmm0,QWORD PTR [rip+0x1137d]        # 0x431d20
  4209a3:	cvttsd2si ecx,xmm0
  4209a7:	add    ecx,0x3
  4209aa:	mov    DWORD PTR [rsp+0x9c],ecx
  4209b1:	call   0x41fd30
  4209b6:	mov    QWORD PTR [rsp+0x48],rax
  4209bb:	mov    eax,DWORD PTR [rbp+0xc]
  4209be:	mov    r11d,DWORD PTR [rsp+0x68]
  4209c3:	mov    r9,QWORD PTR [rsp+0x60]
  4209c8:	sub    eax,0x1
  4209cb:	mov    DWORD PTR [rsp+0x38],eax
  4209cf:	jne    0x420e7d
  4209d5:	mov    eax,0xffffffff
  4209da:	mov    DWORD PTR [rsp+0x60],0x1
  4209e2:	mov    DWORD PTR [rsp+0x128],0x0
  4209ed:	mov    DWORD PTR [rsp+0x8c],eax
  4209f4:	mov    DWORD PTR [rsp+0x68],eax
  4209f8:	jmp    0x420630
  4209fd:	xor    r12d,r12d
  420a00:	xor    edi,edi
  420a02:	mov    ebp,DWORD PTR [rsp+0x128]
  420a09:	mov    rbx,QWORD PTR [rsp+0x48]
  420a0e:	mov    r15d,0x10
  420a14:	neg    ebp
  420a16:	jmp    0x4206b4
  420a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  420a20:	mov    eax,DWORD PTR [rsp+0x30]
  420a24:	sub    DWORD PTR [rsp+0x50],eax
  420a28:	mov    DWORD PTR [rsp+0x88],0x0
  420a33:	neg    eax
  420a35:	mov    DWORD PTR [rsp+0x58],eax
  420a39:	jmp    0x420259
  420a3e:	xchg   ax,ax
  420a40:	neg    eax
  420a42:	mov    DWORD PTR [rsp+0x40],0x0
  420a4a:	mov    DWORD PTR [rsp+0x50],eax
  420a4e:	jmp    0x42023a
  420a53:	pxor   xmm0,xmm0
  420a57:	cvtsi2sd xmm0,eax
  420a5b:	ucomisd xmm0,xmm1
  420a5f:	jp     0x420a67
  420a61:	je     0x4201cb
  420a67:	sub    DWORD PTR [rsp+0x30],0x1
  420a6c:	jmp    0x4201cb
  420a71:	mov    r10d,DWORD PTR [rsp+0x60]
  420a76:	test   r10d,r10d
  420a79:	je     0x420c80
  420a7f:	lea    edx,[rbx+r13*1]
  420a83:	test   edx,edx
  420a85:	jle    0x420a92
  420a87:	mov    rcx,rdi
  420a8a:	call   0x421b30
  420a8f:	mov    rdi,rax
  420a92:	test   ebp,ebp
  420a94:	mov    r13,rdi
  420a97:	jne    0x421135
  420a9d:	mov    DWORD PTR [rsp+0x9c],0x1
  420aa8:	mov    rbx,QWORD PTR [rsp+0x48]
  420aad:	mov    QWORD PTR [rsp+0x40],r12
  420ab2:	mov    QWORD PTR [rsp+0x50],r15
  420ab7:	jmp    0x420b7e
  420abc:	nop    DWORD PTR [rax+0x0]
  420ac0:	mov    rcx,r8
  420ac3:	call   0x421730
  420ac8:	mov    eax,r12d
  420acb:	or     eax,DWORD PTR [rsp+0x120]
  420ad2:	jne    0x420aea
  420ad4:	mov    ecx,DWORD PTR [rsp+0x38]
  420ad8:	test   ecx,ecx
  420ada:	jne    0x420aea
  420adc:	mov    rax,QWORD PTR [rsp+0x50]
  420ae1:	test   BYTE PTR [rax],0x1
  420ae4:	je     0x4212a5
  420aea:	test   r14d,r14d
  420aed:	js     0x421000
  420af3:	or     r14d,DWORD PTR [rsp+0x120]
  420afb:	jne    0x420b0b
  420afd:	mov    rax,QWORD PTR [rsp+0x50]
  420b02:	test   BYTE PTR [rax],0x1
  420b05:	je     0x421000
  420b0b:	test   r12d,r12d
  420b0e:	jle    0x420b1b
  420b10:	cmp    DWORD PTR [rsp+0x38],0x2
  420b15:	jne    0x42120f
  420b1b:	add    rbx,0x1
  420b1f:	mov    BYTE PTR [rbx-0x1],bpl
  420b23:	mov    eax,DWORD PTR [rsp+0x68]
  420b27:	cmp    DWORD PTR [rsp+0x9c],eax
  420b2e:	je     0x42119b
  420b34:	xor    r8d,r8d
  420b37:	mov    rcx,rsi
  420b3a:	mov    edx,0xa
  420b3f:	call   0x4217a0
  420b44:	xor    r8d,r8d
  420b47:	cmp    rdi,r13
  420b4a:	mov    rsi,rax
  420b4d:	mov    edx,0xa
  420b52:	mov    rcx,rdi
  420b55:	je     0x420bf0
  420b5b:	call   0x4217a0
  420b60:	mov    rcx,r13
  420b63:	xor    r8d,r8d
  420b66:	mov    edx,0xa
  420b6b:	mov    rdi,rax
  420b6e:	call   0x4217a0
  420b73:	mov    r13,rax
  420b76:	add    DWORD PTR [rsp+0x9c],0x1
  420b7e:	mov    r12,QWORD PTR [rsp+0x40]
  420b83:	mov    rcx,rsi
  420b86:	mov    rdx,r12
  420b89:	call   0x41fdd0
  420b8e:	mov    rdx,rdi
  420b91:	mov    rcx,rsi
  420b94:	mov    r15d,eax
  420b97:	lea    ebp,[rax+0x30]
  420b9a:	call   0x421c50
  420b9f:	mov    rcx,r12
  420ba2:	mov    rdx,r13
  420ba5:	mov    r14d,eax
  420ba8:	call   0x421ca0
  420bad:	mov    r9d,DWORD PTR [rax+0x10]
  420bb1:	mov    r8,rax
  420bb4:	mov    r12d,0x1
  420bba:	test   r9d,r9d
  420bbd:	jne    0x420ac0
  420bc3:	mov    rdx,rax
  420bc6:	mov    rcx,rsi
  420bc9:	mov    QWORD PTR [rsp+0x58],rax
  420bce:	call   0x421c50
  420bd3:	mov    r8,QWORD PTR [rsp+0x58]
  420bd8:	mov    r12d,eax
  420bdb:	jmp    0x420ac0
  420be0:	mov    r12d,DWORD PTR [rsp+0x58]
  420be5:	mov    ebx,DWORD PTR [rsp+0x50]
  420be9:	xor    edi,edi
  420beb:	jmp    0x42078f
  420bf0:	call   0x4217a0
  420bf5:	mov    rdi,rax
  420bf8:	mov    r13,rax
  420bfb:	jmp    0x420b76
  420c00:	mov    edx,DWORD PTR [rsp+0x58]
  420c04:	mov    rcx,rsi
  420c07:	call   0x4219c0
  420c0c:	mov    rsi,rax
  420c0f:	jmp    0x42080b
  420c14:	mov    DWORD PTR [rsp+0x60],0x0
  420c1c:	jmp    0x4202b7
  420c21:	mov    rdx,r12
  420c24:	mov    rcx,rsi
  420c27:	call   0x421c50
  420c2c:	test   eax,eax
  420c2e:	jns    0x4208b0
  420c34:	xor    r8d,r8d
  420c37:	mov    rcx,rsi
  420c3a:	mov    edx,0xa
  420c3f:	sub    DWORD PTR [rsp+0x30],0x1
  420c44:	call   0x4217a0
  420c49:	mov    rsi,rax
  420c4c:	mov    eax,DWORD PTR [rsp+0x60]
  420c50:	test   eax,eax
  420c52:	jne    0x421318
  420c58:	mov    eax,DWORD PTR [rsp+0x8c]
  420c5f:	test   eax,eax
  420c61:	jg     0x420c75
  420c63:	cmp    DWORD PTR [rsp+0x120],0x2
  420c6b:	mov    DWORD PTR [rsp+0x68],eax
  420c6f:	jg     0x4208cc
  420c75:	mov    eax,DWORD PTR [rsp+0x8c]
  420c7c:	mov    DWORD PTR [rsp+0x68],eax
  420c80:	mov    DWORD PTR [rsp+0x9c],0x1
  420c8b:	mov    rbx,QWORD PTR [rsp+0x48]
  420c90:	mov    r13d,DWORD PTR [rsp+0x68]
  420c95:	jmp    0x420cbb
  420c97:	nop    WORD PTR [rax+rax*1+0x0]
  420ca0:	mov    rcx,rsi
  420ca3:	xor    r8d,r8d
  420ca6:	mov    edx,0xa
  420cab:	call   0x4217a0
  420cb0:	add    DWORD PTR [rsp+0x9c],0x1
  420cb8:	mov    rsi,rax
  420cbb:	mov    rdx,r12
  420cbe:	mov    rcx,rsi
  420cc1:	add    rbx,0x1
  420cc5:	call   0x41fdd0
  420cca:	lea    ebp,[rax+0x30]
  420ccd:	mov    BYTE PTR [rbx-0x1],bpl
  420cd1:	cmp    DWORD PTR [rsp+0x9c],r13d
  420cd9:	jl     0x420ca0
  420cdb:	xor    r14d,r14d
  420cde:	mov    eax,DWORD PTR [rsp+0x38]
  420ce2:	test   eax,eax
  420ce4:	je     0x4210ac
  420cea:	cmp    eax,0x2
  420ced:	je     0x4210dc
  420cf3:	cmp    DWORD PTR [rsi+0x14],0x1
  420cf7:	jle    0x421273
  420cfd:	movzx  edx,BYTE PTR [rbx-0x1]
  420d01:	mov    rcx,QWORD PTR [rsp+0x48]
  420d06:	jmp    0x420d20
  420d08:	nop    DWORD PTR [rax+rax*1+0x0]
  420d10:	cmp    rax,rcx
  420d13:	je     0x420ecc
  420d19:	movzx  edx,BYTE PTR [rax-0x1]
  420d1d:	mov    rbx,rax
  420d20:	cmp    dl,0x39
  420d23:	lea    rax,[rbx-0x1]
  420d27:	je     0x420d10
  420d29:	add    edx,0x1
  420d2c:	mov    r15d,0x20
  420d32:	mov    BYTE PTR [rax],dl
  420d34:	mov    rcx,r12
  420d37:	call   0x421730
  420d3c:	test   rdi,rdi
  420d3f:	je     0x420e2f
  420d45:	cmp    r14,rdi
  420d48:	je     0x420d57
  420d4a:	test   r14,r14
  420d4d:	je     0x420d57
  420d4f:	mov    rcx,r14
  420d52:	call   0x421730
  420d57:	mov    ebp,DWORD PTR [rsp+0x30]
  420d5b:	add    ebp,0x1
  420d5e:	jmp    0x4206c5
  420d63:	mov    QWORD PTR [rsp+0x40],r9
  420d68:	mov    rdi,QWORD PTR [rsp+0x48]
  420d6d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  420d73:	mov    DWORD PTR [rsp+0x9c],0x1
  420d7e:	movapd xmm1,xmm0
  420d82:	mov    rbx,rdi
  420d85:	add    rbx,0x1
  420d89:	divsd  xmm1,xmm2
  420d8d:	cvttsd2si eax,xmm1
  420d91:	pxor   xmm1,xmm1
  420d95:	cvtsi2sd xmm1,eax
  420d99:	lea    edx,[rax+0x30]
  420d9c:	mov    BYTE PTR [rdi],dl
  420d9e:	mulsd  xmm1,xmm2
  420da2:	subsd  xmm0,xmm1
  420da6:	ucomisd xmm0,xmm6
  420daa:	jp     0x420dae
  420dac:	je     0x420e20
  420dae:	mov    edx,DWORD PTR [rsp+0x9c]
  420db5:	cmp    DWORD PTR [rsp+0x68],edx
  420db9:	je     0x420ea7
  420dbf:	movsd  xmm3,QWORD PTR [rip+0x10f69]        # 0x431d30
  420dc7:	movapd xmm4,xmm6
  420dcb:	mov    ecx,DWORD PTR [rsp+0x68]
  420dcf:	jmp    0x420de0
  420dd1:	mov    edx,DWORD PTR [rsp+0x9c]
  420dd8:	cmp    ecx,edx
  420dda:	je     0x420ea7
  420de0:	mulsd  xmm0,xmm3
  420de4:	add    edx,0x1
  420de7:	add    rbx,0x1
  420deb:	mov    DWORD PTR [rsp+0x9c],edx
  420df2:	movapd xmm1,xmm0
  420df6:	divsd  xmm1,xmm2
  420dfa:	cvttsd2si eax,xmm1
  420dfe:	pxor   xmm1,xmm1
  420e02:	cvtsi2sd xmm1,eax
  420e06:	lea    edx,[rax+0x30]
  420e09:	mov    BYTE PTR [rbx-0x1],dl
  420e0c:	mulsd  xmm1,xmm2
  420e10:	subsd  xmm0,xmm1
  420e14:	ucomisd xmm0,xmm6
  420e18:	jp     0x420dd1
  420e1a:	ucomisd xmm0,xmm4
  420e1e:	jne    0x420dd1
  420e20:	mov    ebp,DWORD PTR [rsp+0x30]
  420e24:	add    ebp,0x1
  420e27:	xor    r15d,r15d
  420e2a:	jmp    0x4204e0
  420e2f:	mov    ebp,DWORD PTR [rsp+0x30]
  420e33:	add    ebp,0x1
  420e36:	jmp    0x4204e0
  420e3b:	mov    ebx,0x1
  420e40:	mov    DWORD PTR [rsp+0x128],0x1
  420e4b:	jmp    0x42059a
  420e50:	cmp    DWORD PTR [rsp+0x68],0xe
  420e55:	mov    DWORD PTR [rsp+0x9c],0x1
  420e60:	mov    ecx,0x1
  420e65:	setbe  bl
  420e68:	and    ebx,eax
  420e6a:	jmp    0x4202e9
  420e6f:	mov    r12d,DWORD PTR [rsp+0x58]
  420e74:	mov    ebx,DWORD PTR [rsp+0x50]
  420e78:	jmp    0x42077a
  420e7d:	mov    eax,0xffffffff
  420e82:	xor    ebx,ebx
  420e84:	mov    DWORD PTR [rsp+0x60],0x1
  420e8c:	mov    DWORD PTR [rsp+0x8c],eax
  420e93:	mov    DWORD PTR [rsp+0x68],eax
  420e97:	mov    DWORD PTR [rsp+0x128],0x0
  420ea2:	jmp    0x420313
  420ea7:	mov    r10d,DWORD PTR [rsp+0x38]
  420eac:	test   r10d,r10d
  420eaf:	je     0x42116e
  420eb5:	cmp    DWORD PTR [rsp+0x38],0x1
  420eba:	je     0x421261
  420ec0:	mov    ebp,DWORD PTR [rsp+0x30]
  420ec4:	add    ebp,0x1
  420ec7:	jmp    0x4204d3
  420ecc:	mov    rax,QWORD PTR [rsp+0x48]
  420ed1:	add    DWORD PTR [rsp+0x30],0x1
  420ed6:	mov    r15d,0x20
  420edc:	mov    BYTE PTR [rax],0x31
  420edf:	jmp    0x420d34
  420ee4:	mov    ebp,0x2
  420ee9:	xor    r12d,r12d
  420eec:	xor    edi,edi
  420eee:	jmp    0x4206a2
  420ef3:	mov    r10,QWORD PTR [rip+0x11166]        # 0x432060
  420efa:	mov    QWORD PTR [rsp+0x38],rax
  420eff:	movsd  xmm3,QWORD PTR [rsp+0x38]
  420f05:	mov    DWORD PTR [rsp+0x9c],0x1
  420f10:	mov    rbx,QWORD PTR [rsp+0x48]
  420f15:	movsd  xmm1,QWORD PTR [rip+0x10e13]        # 0x431d30
  420f1d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  420f23:	jmp    0x420f33
  420f25:	mulsd  xmm0,xmm1
  420f29:	add    edx,0x1
  420f2c:	mov    DWORD PTR [rsp+0x9c],edx
  420f33:	cvttsd2si eax,xmm0
  420f37:	test   eax,eax
  420f39:	je     0x420f47
  420f3b:	pxor   xmm2,xmm2
  420f3f:	cvtsi2sd xmm2,eax
  420f43:	subsd  xmm0,xmm2
  420f47:	add    rbx,0x1
  420f4b:	add    eax,0x30
  420f4e:	mov    BYTE PTR [rbx-0x1],al
  420f51:	mov    edx,DWORD PTR [rsp+0x9c]
  420f58:	cmp    edx,r9d
  420f5b:	jne    0x420f25
  420f5d:	movsd  xmm1,QWORD PTR [rip+0x10dfb]        # 0x431d60
  420f65:	movapd xmm2,xmm3
  420f69:	addsd  xmm2,xmm1
  420f6d:	ucomisd xmm0,xmm2
  420f71:	ja     0x420fc7
  420f73:	subsd  xmm1,xmm3
  420f77:	ucomisd xmm1,xmm0
  420f7b:	jbe    0x42061e
  420f81:	ucomisd xmm0,xmm6
  420f85:	jp     0x42130d
  420f8b:	jne    0x42130d
  420f91:	xor    r15d,r15d
  420f94:	jmp    0x420fa7
  420f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420fa0:	movzx  eax,BYTE PTR [rbx-0x2]
  420fa4:	mov    rbx,rdx
  420fa7:	cmp    al,0x30
  420fa9:	lea    rdx,[rbx-0x1]
  420fad:	je     0x420fa0
  420faf:	lea    ebp,[rcx+0x1]
  420fb2:	jmp    0x4204e0
  420fb7:	test   al,0x1
  420fb9:	mov    ecx,DWORD PTR [rsp+0x30]
  420fbd:	movzx  eax,BYTE PTR [rbx-0x1]
  420fc1:	je     0x42130d
  420fc7:	mov    r8,QWORD PTR [rsp+0x48]
  420fcc:	jmp    0x420fe0
  420fce:	xchg   ax,ax
  420fd0:	cmp    rdx,r8
  420fd3:	je     0x42111c
  420fd9:	movzx  eax,BYTE PTR [rdx-0x1]
  420fdd:	mov    rbx,rdx
  420fe0:	cmp    al,0x39
  420fe2:	lea    rdx,[rbx-0x1]
  420fe6:	je     0x420fd0
  420fe8:	mov    QWORD PTR [rsp+0x48],r8
  420fed:	add    eax,0x1
  420ff0:	mov    BYTE PTR [rdx],al
  420ff2:	lea    ebp,[rcx+0x1]
  420ff5:	mov    r15d,0x20
  420ffb:	jmp    0x4204e0
  421000:	mov    edx,DWORD PTR [rsp+0x38]
  421004:	mov    eax,r12d
  421007:	mov    r14d,ebp
  42100a:	mov    r12,QWORD PTR [rsp+0x40]
  42100f:	test   edx,edx
  421011:	je     0x421241
  421017:	cmp    DWORD PTR [rsi+0x14],0x1
  42101b:	jle    0x421237
  421021:	cmp    DWORD PTR [rsp+0x38],0x2
  421026:	jne    0x421077
  421028:	jmp    0x421256
  42102d:	nop    DWORD PTR [rax]
  421030:	add    rbx,0x1
  421034:	xor    r8d,r8d
  421037:	mov    rcx,r13
  42103a:	mov    BYTE PTR [rbx-0x1],r14b
  42103e:	mov    edx,0xa
  421043:	call   0x4217a0
  421048:	cmp    rdi,r13
  42104b:	mov    rcx,rsi
  42104e:	mov    edx,0xa
  421053:	cmove  rdi,rax
  421057:	xor    r8d,r8d
  42105a:	mov    rbp,rax
  42105d:	call   0x4217a0
  421062:	mov    rdx,r12
  421065:	mov    rcx,rax
  421068:	mov    rsi,rax
  42106b:	call   0x41fdd0
  421070:	lea    r14d,[rax+0x30]
  421074:	mov    r13,rbp
  421077:	mov    rdx,r13
  42107a:	mov    rcx,r12
  42107d:	call   0x421c50
  421082:	test   eax,eax
  421084:	jg     0x421030
  421086:	cmp    r14d,0x39
  42108a:	je     0x421286
  421090:	add    r14d,0x1
  421094:	mov    r15d,0x20
  42109a:	mov    BYTE PTR [rbx],r14b
  42109d:	mov    r14,rdi
  4210a0:	add    rbx,0x1
  4210a4:	mov    rdi,r13
  4210a7:	jmp    0x420d34
  4210ac:	mov    rcx,rsi
  4210af:	mov    edx,0x1
  4210b4:	call   0x421b30
  4210b9:	mov    rdx,r12
  4210bc:	mov    rcx,rax
  4210bf:	mov    rsi,rax
  4210c2:	call   0x421c50
  4210c7:	cmp    eax,0x0
  4210ca:	jg     0x420cfd
  4210d0:	jne    0x4210dc
  4210d2:	and    bpl,0x1
  4210d6:	jne    0x420cfd
  4210dc:	cmp    DWORD PTR [rsi+0x14],0x1
  4210e0:	mov    r15d,0x10
  4210e6:	jg     0x4210f3
  4210e8:	jmp    0x42137d
  4210ed:	nop    DWORD PTR [rax]
  4210f0:	mov    rbx,rax
  4210f3:	cmp    BYTE PTR [rbx-0x1],0x30
  4210f7:	lea    rax,[rbx-0x1]
  4210fb:	je     0x4210f0
  4210fd:	jmp    0x420d34
  421102:	mov    ebx,DWORD PTR [rsp+0x50]
  421106:	mov    DWORD PTR [rsp+0x9c],0x0
  421111:	xor    eax,eax
  421113:	sub    ebx,DWORD PTR [rsp+0x68]
  421117:	jmp    0x42077a
  42111c:	mov    QWORD PTR [rsp+0x48],r8
  421121:	add    ecx,0x1
  421124:	mov    BYTE PTR [r8],0x30
  421128:	mov    rdx,r8
  42112b:	mov    eax,0x31
  421130:	jmp    0x420ff0
  421135:	mov    ecx,DWORD PTR [rdi+0x8]
  421138:	call   0x421620
  42113d:	lea    rcx,[rax+0x10]
  421141:	mov    rbx,rax
  421144:	movsxd rax,DWORD PTR [rdi+0x14]
  421148:	lea    rdx,[rdi+0x10]
  42114c:	lea    r8,[rax*4+0x8]
  421154:	call   0x4224d8
  421159:	mov    edx,0x1
  42115e:	mov    rcx,rbx
  421161:	call   0x421b30
  421166:	mov    r13,rax
  421169:	jmp    0x420a9d
  42116e:	addsd  xmm0,xmm0
  421172:	ucomisd xmm0,xmm2
  421176:	ja     0x421261
  42117c:	ucomisd xmm2,xmm0
  421180:	jp     0x421188
  421182:	je     0x420fb7
  421188:	movzx  eax,BYTE PTR [rbx-0x1]
  42118c:	mov    ecx,DWORD PTR [rsp+0x30]
  421190:	mov    r15d,0x10
  421196:	jmp    0x420fa7
  42119b:	mov    r14,rdi
  42119e:	mov    r12,QWORD PTR [rsp+0x40]
  4211a3:	mov    rdi,r13
  4211a6:	jmp    0x420cde
  4211ab:	mov    eax,DWORD PTR [rsp+0x68]
  4211af:	test   eax,eax
  4211b1:	je     0x4205ba
  4211b7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4211bf:	test   r9d,r9d
  4211c2:	jle    0x42061e
  4211c8:	movsd  xmm0,QWORD PTR [rip+0x10b60]        # 0x431d30
  4211d0:	mov    ecx,0xffffffff
  4211d5:	movsd  xmm1,QWORD PTR [rip+0x10b5b]        # 0x431d38
  4211dd:	mulsd  xmm0,xmm4
  4211e1:	mulsd  xmm1,xmm0
  4211e5:	addsd  xmm1,QWORD PTR [rip+0x10b53]        # 0x431d40
  4211ed:	movq   rdx,xmm1
  4211f2:	movq   rax,xmm1
  4211f7:	shr    rdx,0x20
  4211fb:	mov    eax,eax
  4211fd:	sub    edx,0x3400000
  421203:	shl    rdx,0x20
  421207:	or     rax,rdx
  42120a:	jmp    0x4203c2
  42120f:	cmp    ebp,0x39
  421212:	mov    r12,QWORD PTR [rsp+0x40]
  421217:	mov    rax,rbx
  42121a:	je     0x421289
  42121c:	add    ebp,0x1
  42121f:	mov    r14,rdi
  421222:	add    rbx,0x1
  421226:	mov    BYTE PTR [rax],bpl
  421229:	mov    rdi,r13
  42122c:	mov    r15d,0x20
  421232:	jmp    0x420d34
  421237:	cmp    DWORD PTR [rsi+0x18],0x0
  42123b:	jne    0x421021
  421241:	test   eax,eax
  421243:	jg     0x4212d9
  421249:	xor    r15d,r15d
  42124c:	cmp    DWORD PTR [rsi+0x14],0x1
  421250:	jle    0x421358
  421256:	mov    r15d,0x10
  42125c:	jmp    0x42109a
  421261:	movzx  eax,BYTE PTR [rbx-0x1]
  421265:	mov    ecx,DWORD PTR [rsp+0x30]
  421269:	mov    r8,QWORD PTR [rsp+0x48]
  42126e:	jmp    0x420fe0
  421273:	mov    eax,DWORD PTR [rsi+0x18]
  421276:	test   eax,eax
  421278:	jne    0x420cfd
  42127e:	xor    r15d,r15d
  421281:	jmp    0x4210f3
  421286:	mov    rax,rbx
  421289:	mov    r14,rdi
  42128c:	add    rbx,0x1
  421290:	mov    rdi,r13
  421293:	mov    BYTE PTR [rax],0x39
  421296:	mov    edx,0x39
  42129b:	mov    rcx,QWORD PTR [rsp+0x48]
  4212a0:	jmp    0x420d20
  4212a5:	cmp    ebp,0x39
  4212a8:	mov    r12,QWORD PTR [rsp+0x40]
  4212ad:	mov    rax,rbx
  4212b0:	je     0x421286
  4212b2:	test   r14d,r14d
  4212b5:	jle    0x421390
  4212bb:	mov    ebp,r15d
  4212be:	mov    r15d,0x20
  4212c4:	add    ebp,0x31
  4212c7:	mov    r14,rdi
  4212ca:	add    rbx,0x1
  4212ce:	mov    BYTE PTR [rax],bpl
  4212d1:	mov    rdi,r13
  4212d4:	jmp    0x420d34
  4212d9:	mov    rcx,rsi
  4212dc:	mov    edx,0x1
  4212e1:	call   0x421b30
  4212e6:	mov    rdx,r12
  4212e9:	mov    rcx,rax
  4212ec:	mov    rsi,rax
  4212ef:	call   0x421c50
  4212f4:	cmp    eax,0x0
  4212f7:	jle    0x42136a
  4212f9:	cmp    ebp,0x39
  4212fc:	je     0x421286
  4212fe:	lea    r14d,[rbp+0x1]
  421302:	mov    r15d,0x20
  421308:	jmp    0x42124c
  42130d:	mov    r15d,0x10
  421313:	jmp    0x420fa7
  421318:	xor    r8d,r8d
  42131b:	mov    rcx,rdi
  42131e:	mov    edx,0xa
  421323:	call   0x4217a0
  421328:	mov    rdi,rax
  42132b:	mov    eax,DWORD PTR [rsp+0x8c]
  421332:	test   eax,eax
  421334:	jg     0x421348
  421336:	cmp    DWORD PTR [rsp+0x120],0x2
  42133e:	mov    DWORD PTR [rsp+0x68],eax
  421342:	jg     0x4208cc
  421348:	mov    eax,DWORD PTR [rsp+0x8c]
  42134f:	mov    DWORD PTR [rsp+0x68],eax
  421353:	jmp    0x420a7f
  421358:	cmp    DWORD PTR [rsi+0x18],0x0
  42135c:	mov    eax,0x10
  421361:	cmovne r15d,eax
  421365:	jmp    0x42109a
  42136a:	jne    0x421372
  42136c:	test   bpl,0x1
  421370:	jne    0x4212f9
  421372:	mov    r15d,0x20
  421378:	jmp    0x42124c
  42137d:	cmp    DWORD PTR [rsi+0x18],0x1
  421381:	sbb    r15d,r15d
  421384:	not    r15d
  421387:	and    r15d,0x10
  42138b:	jmp    0x4210f3
  421390:	cmp    DWORD PTR [rsi+0x14],0x1
  421394:	mov    r15d,0x10
  42139a:	jg     0x4212c7
  4213a0:	cmp    DWORD PTR [rsi+0x18],0x1
  4213a4:	sbb    r15d,r15d
  4213a7:	not    r15d
  4213aa:	and    r15d,0x10
  4213ae:	jmp    0x4212c7
  4213b3:	xor    eax,eax
  4213b5:	jmp    0x420097
  4213ba:	nop
  4213bb:	nop
  4213bc:	nop
  4213bd:	nop
  4213be:	nop
  4213bf:	nop
  4213c0:	push   rbp
  4213c1:	push   rdi
  4213c2:	push   rsi
  4213c3:	push   rbx
  4213c4:	mov    rsi,rcx
  4213c7:	lea    r10,[rcx+0x18]
  4213cb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4213cf:	mov    eax,edx
  4213d1:	sar    eax,0x5
  4213d4:	cmp    eax,ecx
  4213d6:	jge    0x421460
  4213dc:	cdqe   
  4213de:	and    edx,0x1f
  4213e1:	lea    rbx,[r10+rcx*4]
  4213e5:	lea    rdi,[r10+rax*4]
  4213e9:	je     0x421473
  4213ef:	mov    r9d,DWORD PTR [rdi]
  4213f2:	lea    r8,[rdi+0x4]
  4213f6:	mov    ebp,0x20
  4213fb:	mov    ecx,edx
  4213fd:	sub    ebp,edx
  4213ff:	shr    r9d,cl
  421402:	cmp    rbx,r8
  421405:	jbe    0x4214b8
  42140b:	mov    r11,r10
  42140e:	xchg   ax,ax
  421410:	mov    eax,DWORD PTR [r8]
  421413:	mov    ecx,ebp
  421415:	add    r11,0x4
  421419:	add    r8,0x4
  42141d:	shl    eax,cl
  42141f:	mov    ecx,edx
  421421:	or     eax,r9d
  421424:	mov    DWORD PTR [r11-0x4],eax
  421428:	mov    r9d,DWORD PTR [r8-0x4]
  42142c:	shr    r9d,cl
  42142f:	cmp    rbx,r8
  421432:	ja     0x421410
  421434:	sub    rbx,rdi
  421437:	lea    rax,[rbx-0x5]
  42143b:	shr    rax,0x2
  42143f:	lea    rax,[r10+rax*4+0x4]
  421444:	test   r9d,r9d
  421447:	mov    DWORD PTR [rax],r9d
  42144a:	je     0x421450
  42144c:	add    rax,0x4
  421450:	sub    rax,r10
  421453:	shr    rax,0x2
  421457:	jmp    0x4214ac
  421459:	nop    DWORD PTR [rax+0x0]
  421460:	mov    DWORD PTR [rsi+0x14],0x0
  421467:	mov    DWORD PTR [rsi+0x18],0x0
  42146e:	pop    rbx
  42146f:	pop    rsi
  421470:	pop    rdi
  421471:	pop    rbp
  421472:	ret    
  421473:	cmp    rbx,rdi
  421476:	mov    rdx,r10
  421479:	mov    rax,rdi
  42147c:	jbe    0x421460
  42147e:	xchg   ax,ax
  421480:	add    rax,0x4
  421484:	mov    r8d,DWORD PTR [rax-0x4]
  421488:	add    rdx,0x4
  42148c:	cmp    rbx,rax
  42148f:	mov    DWORD PTR [rdx-0x4],r8d
  421493:	ja     0x421480
  421495:	not    rdi
  421498:	lea    rax,[rdi+rbx*1]
  42149c:	shr    rax,0x2
  4214a0:	lea    rax,[rax*4+0x4]
  4214a8:	shr    rax,0x2
  4214ac:	test   eax,eax
  4214ae:	mov    DWORD PTR [rsi+0x14],eax
  4214b1:	je     0x421467
  4214b3:	pop    rbx
  4214b4:	pop    rsi
  4214b5:	pop    rdi
  4214b6:	pop    rbp
  4214b7:	ret    
  4214b8:	mov    rax,r10
  4214bb:	jmp    0x421444
  4214bd:	nop    DWORD PTR [rax]
  4214c0:	movsxd rax,DWORD PTR [rcx+0x14]
  4214c4:	lea    rdx,[rcx+0x18]
  4214c8:	lea    r8,[rdx+rax*4]
  4214cc:	cmp    rdx,r8
  4214cf:	jae    0x4214fb
  4214d1:	mov    ecx,DWORD PTR [rcx+0x18]
  4214d4:	xor    eax,eax
  4214d6:	test   ecx,ecx
  4214d8:	je     0x4214e6
  4214da:	jmp    0x4214f4
  4214dc:	nop    DWORD PTR [rax+0x0]
  4214e0:	mov    ecx,DWORD PTR [rdx]
  4214e2:	test   ecx,ecx
  4214e4:	jne    0x4214f4
  4214e6:	add    rdx,0x4
  4214ea:	add    eax,0x20
  4214ed:	cmp    r8,rdx
  4214f0:	ja     0x4214e0
  4214f2:	repz ret 
  4214f4:	tzcnt  ecx,ecx
  4214f8:	add    eax,ecx
  4214fa:	ret    
  4214fb:	xor    eax,eax
  4214fd:	ret    
  4214fe:	nop
  4214ff:	nop
  421500:	push   rsi
  421501:	push   rbx
  421502:	sub    rsp,0x28
  421506:	mov    eax,DWORD PTR [rip+0x49984]        # 0x46ae90
  42150c:	movsxd rsi,ecx
  42150f:	cmp    eax,0x2
  421512:	je     0x42157d
  421514:	test   eax,eax
  421516:	je     0x421542
  421518:	cmp    eax,0x1
  42151b:	jne    0x42153b
  42151d:	mov    rbx,QWORD PTR [rip+0x7ae88]        # 0x49c3ac
  421524:	mov    ecx,0x1
  421529:	call   rbx
  42152b:	mov    eax,DWORD PTR [rip+0x4995f]        # 0x46ae90
  421531:	cmp    eax,0x1
  421534:	je     0x421524
  421536:	cmp    eax,0x2
  421539:	je     0x42157d
  42153b:	add    rsp,0x28
  42153f:	pop    rbx
  421540:	pop    rsi
  421541:	ret    
  421542:	mov    al,0x1
  421544:	xchg   DWORD PTR [rip+0x49946],eax        # 0x46ae90
  42154a:	test   eax,eax
  42154c:	jne    0x4215a0
  42154e:	lea    rcx,[rip+0x4996b]        # 0x46aec0
  421555:	mov    rbx,QWORD PTR [rip+0x7ade8]        # 0x49c344
  42155c:	call   rbx
  42155e:	lea    rcx,[rip+0x49983]        # 0x46aee8
  421565:	call   rbx
  421567:	lea    rcx,[rip+0x62]        # 0x4215d0
  42156e:	call   0x41b9a0
  421573:	mov    DWORD PTR [rip+0x49913],0x2        # 0x46ae90
  42157d:	lea    rdx,[rsi+rsi*4]
  421581:	lea    rax,[rip+0x49938]        # 0x46aec0
  421588:	lea    rcx,[rax+rdx*8]
  42158c:	mov    rax,QWORD PTR [rip+0x7ad19]        # 0x49c2ac
  421593:	add    rsp,0x28
  421597:	pop    rbx
  421598:	pop    rsi
  421599:	rex.W jmp rax
  42159c:	nop    DWORD PTR [rax+0x0]
  4215a0:	cmp    eax,0x2
  4215a3:	je     0x4215c0
  4215a5:	mov    eax,DWORD PTR [rip+0x498e5]        # 0x46ae90
  4215ab:	cmp    eax,0x1
  4215ae:	je     0x42151d
  4215b4:	jmp    0x421536
  4215b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4215c0:	mov    DWORD PTR [rip+0x498c6],0x2        # 0x46ae90
  4215ca:	jmp    0x42157d
  4215cc:	nop    DWORD PTR [rax+0x0]
  4215d0:	push   rbx
  4215d1:	sub    rsp,0x20
  4215d5:	mov    eax,0x3
  4215da:	xchg   DWORD PTR [rip+0x498b0],eax        # 0x46ae90
  4215e0:	cmp    eax,0x2
  4215e3:	je     0x4215f0
  4215e5:	add    rsp,0x20
  4215e9:	pop    rbx
  4215ea:	ret    
  4215eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4215f0:	mov    rbx,QWORD PTR [rip+0x7acad]        # 0x49c2a4
  4215f7:	lea    rcx,[rip+0x498c2]        # 0x46aec0
  4215fe:	call   rbx
  421600:	lea    rcx,[rip+0x498e1]        # 0x46aee8
  421607:	mov    rax,rbx
  42160a:	add    rsp,0x20
  42160e:	pop    rbx
  42160f:	rex.W jmp rax
  421612:	nop    DWORD PTR [rax+0x0]
  421616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421620:	push   rdi
  421621:	push   rsi
  421622:	push   rbx
  421623:	sub    rsp,0x20
  421627:	mov    ebx,ecx
  421629:	xor    ecx,ecx
  42162b:	call   0x421500
  421630:	cmp    ebx,0x9
  421633:	jg     0x421670
  421635:	lea    rdx,[rip+0x49804]        # 0x46ae40
  42163c:	movsxd rcx,ebx
  42163f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  421643:	test   rdi,rdi
  421646:	je     0x4216d0
  42164c:	cmp    DWORD PTR [rip+0x4983d],0x2        # 0x46ae90
  421653:	mov    r8,QWORD PTR [rdi]
  421656:	mov    QWORD PTR [rdx+rcx*8],r8
  42165a:	jne    0x4216b6
  42165c:	lea    rcx,[rip+0x4985d]        # 0x46aec0
  421663:	call   QWORD PTR [rip+0x7aceb]        # 0x49c354
  421669:	jmp    0x4216b6
  42166b:	nop    DWORD PTR [rax+rax*1+0x0]
  421670:	mov    eax,0x1
  421675:	mov    ecx,ebx
  421677:	shl    eax,cl
  421679:	mov    esi,eax
  42167b:	lea    eax,[rax-0x1]
  42167e:	cdqe   
  421680:	lea    rdx,[rax*4+0x27]
  421688:	shr    rdx,0x3
  42168c:	mov    edx,edx
  42168e:	lea    rcx,[rdx*8+0x0]
  421696:	call   0x4224e8
  42169b:	test   rax,rax
  42169e:	mov    rdi,rax
  4216a1:	je     0x42172a
  4216a7:	cmp    DWORD PTR [rip+0x497e2],0x2        # 0x46ae90
  4216ae:	mov    DWORD PTR [rdi+0x8],ebx
  4216b1:	mov    DWORD PTR [rdi+0xc],esi
  4216b4:	je     0x42165c
  4216b6:	mov    DWORD PTR [rdi+0x14],0x0
  4216bd:	mov    DWORD PTR [rdi+0x10],0x0
  4216c4:	mov    rax,rdi
  4216c7:	add    rsp,0x20
  4216cb:	pop    rbx
  4216cc:	pop    rsi
  4216cd:	pop    rdi
  4216ce:	ret    
  4216cf:	nop
  4216d0:	mov    ecx,ebx
  4216d2:	mov    eax,0x1
  4216d7:	mov    rdi,QWORD PTR [rip+0x6e52]        # 0x428530
  4216de:	shl    eax,cl
  4216e0:	lea    rcx,[rip+0x48e59]        # 0x46a540
  4216e7:	lea    edx,[rax-0x1]
  4216ea:	mov    esi,eax
  4216ec:	mov    rax,rdi
  4216ef:	movsxd rdx,edx
  4216f2:	sub    rax,rcx
  4216f5:	lea    rdx,[rdx*4+0x27]
  4216fd:	mov    rcx,rax
  421700:	sar    rcx,0x3
  421704:	shr    rdx,0x3
  421708:	mov    edx,edx
  42170a:	add    rcx,rdx
  42170d:	cmp    rcx,0x120
  421714:	ja     0x42168e
  42171a:	lea    rdx,[rdi+rdx*8]
  42171e:	mov    QWORD PTR [rip+0x6e0b],rdx        # 0x428530
  421725:	jmp    0x4216a7
  42172a:	xor    eax,eax
  42172c:	jmp    0x4216c7
  42172e:	xchg   ax,ax
  421730:	push   rbx
  421731:	sub    rsp,0x20
  421735:	test   rcx,rcx
  421738:	je     0x421769
  42173a:	cmp    DWORD PTR [rcx+0x8],0x9
  42173e:	jg     0x421770
  421740:	mov    rbx,rcx
  421743:	xor    ecx,ecx
  421745:	call   0x421500
  42174a:	movsxd rdx,DWORD PTR [rbx+0x8]
  42174e:	lea    rax,[rip+0x496eb]        # 0x46ae40
  421755:	cmp    DWORD PTR [rip+0x49734],0x2        # 0x46ae90
  42175c:	mov    rcx,QWORD PTR [rax+rdx*8]
  421760:	mov    QWORD PTR [rax+rdx*8],rbx
  421764:	mov    QWORD PTR [rbx],rcx
  421767:	je     0x421780
  421769:	add    rsp,0x20
  42176d:	pop    rbx
  42176e:	ret    
  42176f:	nop
  421770:	add    rsp,0x20
  421774:	pop    rbx
  421775:	jmp    0x422528
  42177a:	nop    WORD PTR [rax+rax*1+0x0]
  421780:	mov    rax,QWORD PTR [rip+0x7abcd]        # 0x49c354
  421787:	lea    rcx,[rip+0x49732]        # 0x46aec0
  42178e:	add    rsp,0x20
  421792:	pop    rbx
  421793:	rex.W jmp rax
  421796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4217a0:	push   rbp
  4217a1:	push   rdi
  4217a2:	push   rsi
  4217a3:	push   rbx
  4217a4:	sub    rsp,0x28
  4217a8:	mov    esi,DWORD PTR [rcx+0x14]
  4217ab:	xor    r9d,r9d
  4217ae:	lea    r10,[rcx+0x18]
  4217b2:	mov    rdi,rcx
  4217b5:	movsxd rbx,r8d
  4217b8:	movsxd rdx,edx
  4217bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4217c0:	mov    eax,DWORD PTR [r10+r9*4]
  4217c4:	imul   rax,rdx
  4217c8:	add    rax,rbx
  4217cb:	mov    rbx,rax
  4217ce:	mov    DWORD PTR [r10+r9*4],eax
  4217d2:	add    r9,0x1
  4217d6:	shr    rbx,0x20
  4217da:	cmp    esi,r9d
  4217dd:	jg     0x4217c0
  4217df:	test   rbx,rbx
  4217e2:	mov    rax,rdi
  4217e5:	je     0x4217fc
  4217e7:	cmp    esi,DWORD PTR [rdi+0xc]
  4217ea:	jge    0x421805
  4217ec:	movsxd rax,esi
  4217ef:	add    esi,0x1
  4217f2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4217f6:	mov    DWORD PTR [rdi+0x14],esi
  4217f9:	mov    rax,rdi
  4217fc:	add    rsp,0x28
  421800:	pop    rbx
  421801:	pop    rsi
  421802:	pop    rdi
  421803:	pop    rbp
  421804:	ret    
  421805:	mov    eax,DWORD PTR [rdi+0x8]
  421808:	lea    ecx,[rax+0x1]
  42180b:	call   0x421620
  421810:	test   rax,rax
  421813:	mov    rbp,rax
  421816:	je     0x42184e
  421818:	lea    rcx,[rax+0x10]
  42181c:	movsxd rax,DWORD PTR [rdi+0x14]
  421820:	lea    rdx,[rdi+0x10]
  421824:	lea    r8,[rax*4+0x8]
  42182c:	call   0x4224d8
  421831:	mov    rcx,rdi
  421834:	mov    rdi,rbp
  421837:	call   0x421730
  42183c:	movsxd rax,esi
  42183f:	add    esi,0x1
  421842:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421846:	mov    DWORD PTR [rdi+0x14],esi
  421849:	mov    rax,rdi
  42184c:	jmp    0x4217fc
  42184e:	xor    eax,eax
  421850:	jmp    0x4217fc
  421852:	nop    DWORD PTR [rax+0x0]
  421856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421860:	push   rbx
  421861:	sub    rsp,0x20
  421865:	mov    ebx,ecx
  421867:	mov    ecx,0x1
  42186c:	call   0x421620
  421871:	test   rax,rax
  421874:	je     0x421880
  421876:	mov    DWORD PTR [rax+0x18],ebx
  421879:	mov    DWORD PTR [rax+0x14],0x1
  421880:	add    rsp,0x20
  421884:	pop    rbx
  421885:	ret    
  421886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421890:	push   r14
  421892:	push   r13
  421894:	push   r12
  421896:	push   rbp
  421897:	push   rdi
  421898:	push   rsi
  421899:	push   rbx
  42189a:	sub    rsp,0x20
  42189e:	movsxd r13,DWORD PTR [rcx+0x14]
  4218a2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4218a6:	mov    r12,rcx
  4218a9:	mov    r14,rdx
  4218ac:	cmp    r13d,ebx
  4218af:	jl     0x4219b1
  4218b5:	mov    eax,ebx
  4218b7:	movsxd rbx,r13d
  4218ba:	movsxd r13,eax
  4218bd:	xor    eax,eax
  4218bf:	lea    esi,[rbx+r13*1]
  4218c3:	cmp    esi,DWORD PTR [r12+0xc]
  4218c8:	setg   al
  4218cb:	add    eax,DWORD PTR [r12+0x8]
  4218d0:	mov    ecx,eax
  4218d2:	call   0x421620
  4218d7:	test   rax,rax
  4218da:	je     0x4219bc
  4218e0:	lea    rdi,[rax+0x18]
  4218e4:	movsxd rdx,esi
  4218e7:	lea    rbp,[rdi+rdx*4]
  4218eb:	mov    r8,rdi
  4218ee:	cmp    rdi,rbp
  4218f1:	jae    0x421903
  4218f3:	mov    DWORD PTR [r8],0x0
  4218fa:	add    r8,0x4
  4218fe:	cmp    rbp,r8
  421901:	ja     0x4218f3
  421903:	lea    rdx,[r14+0x18]
  421907:	add    r12,0x18
  42190b:	lea    rbx,[r12+rbx*4]
  42190f:	lea    r13,[rdx+r13*4]
  421913:	cmp    rdx,r13
  421916:	jae    0x421979
  421918:	nop    DWORD PTR [rax+rax*1+0x0]
  421920:	add    rdx,0x4
  421924:	mov    r11d,DWORD PTR [rdx-0x4]
  421928:	test   r11d,r11d
  42192b:	je     0x421970
  42192d:	mov    r9,rdi
  421930:	mov    r8,r12
  421933:	xor    r10d,r10d
  421936:	jmp    0x421943
  421938:	nop    DWORD PTR [rax+rax*1+0x0]
  421940:	mov    r9,r14
  421943:	add    r8,0x4
  421947:	mov    ecx,DWORD PTR [r8-0x4]
  42194b:	mov    r14d,DWORD PTR [r9]
  42194e:	imul   rcx,r11
  421952:	add    rcx,r14
  421955:	lea    r14,[r9+0x4]
  421959:	add    rcx,r10
  42195c:	mov    r10,rcx
  42195f:	mov    DWORD PTR [r14-0x4],ecx
  421963:	shr    r10,0x20
  421967:	cmp    rbx,r8
  42196a:	ja     0x421940
  42196c:	mov    DWORD PTR [r9+0x4],r10d
  421970:	add    rdi,0x4
  421974:	cmp    r13,rdx
  421977:	ja     0x421920
  421979:	test   esi,esi
  42197b:	jle    0x42199f
  42197d:	mov    r8d,DWORD PTR [rbp-0x4]
  421981:	lea    rdx,[rbp-0x4]
  421985:	test   r8d,r8d
  421988:	je     0x42199a
  42198a:	jmp    0x42199f
  42198c:	nop    DWORD PTR [rax+0x0]
  421990:	sub    rdx,0x4
  421994:	mov    ecx,DWORD PTR [rdx]
  421996:	test   ecx,ecx
  421998:	jne    0x42199f
  42199a:	sub    esi,0x1
  42199d:	jne    0x421990
  42199f:	mov    DWORD PTR [rax+0x14],esi
  4219a2:	add    rsp,0x20
  4219a6:	pop    rbx
  4219a7:	pop    rsi
  4219a8:	pop    rdi
  4219a9:	pop    rbp
  4219aa:	pop    r12
  4219ac:	pop    r13
  4219ae:	pop    r14
  4219b0:	ret    
  4219b1:	mov    r12,rdx
  4219b4:	mov    r14,rcx
  4219b7:	jmp    0x4218bd
  4219bc:	xor    eax,eax
  4219be:	jmp    0x4219a2
  4219c0:	push   rbp
  4219c1:	push   rdi
  4219c2:	push   rsi
  4219c3:	push   rbx
  4219c4:	sub    rsp,0x28
  4219c8:	mov    eax,edx
  4219ca:	mov    rbp,rcx
  4219cd:	mov    ebx,edx
  4219cf:	and    eax,0x3
  4219d2:	jne    0x421a60
  4219d8:	sar    ebx,0x2
  4219db:	mov    rax,rbp
  4219de:	test   ebx,ebx
  4219e0:	je     0x421a2c
  4219e2:	mov    rdi,QWORD PTR [rip+0x48b17]        # 0x46a500
  4219e9:	test   rdi,rdi
  4219ec:	jne    0x421a02
  4219ee:	jmp    0x421aad
  4219f3:	sar    ebx,1
  4219f5:	je     0x421a29
  4219f7:	mov    rsi,QWORD PTR [rdi]
  4219fa:	test   rsi,rsi
  4219fd:	je     0x421a35
  4219ff:	mov    rdi,rsi
  421a02:	test   bl,0x1
  421a05:	je     0x4219f3
  421a07:	mov    rdx,rdi
  421a0a:	mov    rcx,rbp
  421a0d:	call   0x421890
  421a12:	test   rax,rax
  421a15:	mov    rsi,rax
  421a18:	je     0x421a83
  421a1a:	mov    rcx,rbp
  421a1d:	mov    rbp,rsi
  421a20:	call   0x421730
  421a25:	sar    ebx,1
  421a27:	jne    0x4219f7
  421a29:	mov    rax,rbp
  421a2c:	add    rsp,0x28
  421a30:	pop    rbx
  421a31:	pop    rsi
  421a32:	pop    rdi
  421a33:	pop    rbp
  421a34:	ret    
  421a35:	mov    ecx,0x1
  421a3a:	call   0x421500
  421a3f:	mov    rsi,QWORD PTR [rdi]
  421a42:	test   rsi,rsi
  421a45:	je     0x421a8e
  421a47:	cmp    DWORD PTR [rip+0x49442],0x2        # 0x46ae90
  421a4e:	jne    0x4219ff
  421a50:	lea    rcx,[rip+0x49491]        # 0x46aee8
  421a57:	call   QWORD PTR [rip+0x7a8f7]        # 0x49c354
  421a5d:	jmp    0x4219ff
  421a5f:	nop
  421a60:	sub    eax,0x1
  421a63:	lea    rdx,[rip+0x10316]        # 0x431d80
  421a6a:	xor    r8d,r8d
  421a6d:	cdqe   
  421a6f:	mov    edx,DWORD PTR [rdx+rax*4]
  421a72:	call   0x4217a0
  421a77:	test   rax,rax
  421a7a:	mov    rbp,rax
  421a7d:	jne    0x4219d8
  421a83:	xor    eax,eax
  421a85:	add    rsp,0x28
  421a89:	pop    rbx
  421a8a:	pop    rsi
  421a8b:	pop    rdi
  421a8c:	pop    rbp
  421a8d:	ret    
  421a8e:	mov    rdx,rdi
  421a91:	mov    rcx,rdi
  421a94:	call   0x421890
  421a99:	test   rax,rax
  421a9c:	mov    rsi,rax
  421a9f:	mov    QWORD PTR [rdi],rax
  421aa2:	je     0x421a83
  421aa4:	mov    QWORD PTR [rax],0x0
  421aab:	jmp    0x421a47
  421aad:	mov    ecx,0x1
  421ab2:	call   0x421500
  421ab7:	mov    rdi,QWORD PTR [rip+0x48a42]        # 0x46a500
  421abe:	test   rdi,rdi
  421ac1:	je     0x421ae2
  421ac3:	cmp    DWORD PTR [rip+0x493c6],0x2        # 0x46ae90
  421aca:	jne    0x421a02
  421ad0:	lea    rcx,[rip+0x49411]        # 0x46aee8
  421ad7:	call   QWORD PTR [rip+0x7a877]        # 0x49c354
  421add:	jmp    0x421a02
  421ae2:	mov    ecx,0x1
  421ae7:	call   0x421620
  421aec:	test   rax,rax
  421aef:	mov    rdi,rax
  421af2:	je     0x421b12
  421af4:	mov    DWORD PTR [rax+0x18],0x271
  421afb:	mov    DWORD PTR [rax+0x14],0x1
  421b02:	mov    QWORD PTR [rip+0x489f7],rax        # 0x46a500
  421b09:	mov    QWORD PTR [rax],0x0
  421b10:	jmp    0x421ac3
  421b12:	mov    QWORD PTR [rip+0x489e3],0x0        # 0x46a500
  421b1d:	xor    eax,eax
  421b1f:	jmp    0x421a85
  421b24:	xchg   ax,ax
  421b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b30:	push   r13
  421b32:	push   r12
  421b34:	push   rbp
  421b35:	push   rdi
  421b36:	push   rsi
  421b37:	push   rbx
  421b38:	sub    rsp,0x28
  421b3c:	mov    rdi,rcx
  421b3f:	mov    ebp,edx
  421b41:	mov    esi,edx
  421b43:	mov    r12d,DWORD PTR [rdi+0x14]
  421b47:	sar    ebp,0x5
  421b4a:	mov    eax,DWORD PTR [rdi+0xc]
  421b4d:	mov    ecx,DWORD PTR [rcx+0x8]
  421b50:	add    r12d,ebp
  421b53:	lea    ebx,[r12+0x1]
  421b58:	cmp    ebx,eax
  421b5a:	jle    0x421b69
  421b5c:	nop    DWORD PTR [rax+0x0]
  421b60:	add    eax,eax
  421b62:	add    ecx,0x1
  421b65:	cmp    ebx,eax
  421b67:	jg     0x421b60
  421b69:	call   0x421620
  421b6e:	test   rax,rax
  421b71:	mov    r13,rax
  421b74:	je     0x421c3f
  421b7a:	test   ebp,ebp
  421b7c:	lea    r8,[rax+0x18]
  421b80:	jle    0x421c37
  421b86:	lea    eax,[rbp-0x1]
  421b89:	lea    r9,[r8+rax*4+0x4]
  421b8e:	xchg   ax,ax
  421b90:	add    r8,0x4
  421b94:	mov    DWORD PTR [r8-0x4],0x0
  421b9c:	cmp    r8,r9
  421b9f:	jne    0x421b90
  421ba1:	movsxd rax,DWORD PTR [rdi+0x14]
  421ba5:	lea    r8,[rdi+0x18]
  421ba9:	mov    edx,esi
  421bab:	and    edx,0x1f
  421bae:	lea    rbp,[r8+rax*4]
  421bb2:	je     0x421c20
  421bb4:	mov    eax,0x20
  421bb9:	xor    r11d,r11d
  421bbc:	sub    eax,edx
  421bbe:	jmp    0x421bc3
  421bc0:	mov    r9,rsi
  421bc3:	mov    r10d,DWORD PTR [r8]
  421bc6:	mov    ecx,edx
  421bc8:	lea    rsi,[r9+0x4]
  421bcc:	add    r8,0x4
  421bd0:	shl    r10d,cl
  421bd3:	mov    ecx,eax
  421bd5:	or     r10d,r11d
  421bd8:	mov    DWORD PTR [rsi-0x4],r10d
  421bdc:	mov    r11d,DWORD PTR [r8-0x4]
  421be0:	shr    r11d,cl
  421be3:	cmp    rbp,r8
  421be6:	ja     0x421bc0
  421be8:	add    r12d,0x2
  421bec:	test   r11d,r11d
  421bef:	mov    DWORD PTR [r9+0x4],r11d
  421bf3:	cmovne ebx,r12d
  421bf7:	sub    ebx,0x1
  421bfa:	mov    rcx,rdi
  421bfd:	mov    DWORD PTR [r13+0x14],ebx
  421c01:	call   0x421730
  421c06:	mov    rax,r13
  421c09:	add    rsp,0x28
  421c0d:	pop    rbx
  421c0e:	pop    rsi
  421c0f:	pop    rdi
  421c10:	pop    rbp
  421c11:	pop    r12
  421c13:	pop    r13
  421c15:	ret    
  421c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c20:	add    r8,0x4
  421c24:	mov    edx,DWORD PTR [r8-0x4]
  421c28:	add    r9,0x4
  421c2c:	cmp    rbp,r8
  421c2f:	mov    DWORD PTR [r9-0x4],edx
  421c33:	ja     0x421c20
  421c35:	jmp    0x421bf7
  421c37:	mov    r9,r8
  421c3a:	jmp    0x421ba1
  421c3f:	xor    eax,eax
  421c41:	jmp    0x421c09
  421c43:	nop    DWORD PTR [rax]
  421c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c50:	movsxd r8,DWORD PTR [rdx+0x14]
  421c54:	mov    eax,DWORD PTR [rcx+0x14]
  421c57:	sub    eax,r8d
  421c5a:	test   eax,eax
  421c5c:	jne    0x421c92
  421c5e:	shl    r8,0x2
  421c62:	add    rcx,0x18
  421c66:	lea    rax,[rcx+r8*1]
  421c6a:	lea    rdx,[rdx+r8*1+0x18]
  421c6f:	jmp    0x421c76
  421c71:	cmp    rcx,rax
  421c74:	jae    0x421c90
  421c76:	sub    rdx,0x4
  421c7a:	sub    rax,0x4
  421c7e:	mov    r9d,DWORD PTR [rdx]
  421c81:	cmp    DWORD PTR [rax],r9d
  421c84:	je     0x421c71
  421c86:	sbb    eax,eax
  421c88:	or     eax,0x1
  421c8b:	ret    
  421c8c:	nop    DWORD PTR [rax+0x0]
  421c90:	xor    eax,eax
  421c92:	repz ret 
  421c94:	xchg   ax,ax
  421c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ca0:	push   rdi
  421ca1:	push   rsi
  421ca2:	push   rbx
  421ca3:	sub    rsp,0x20
  421ca7:	mov    rsi,rcx
  421caa:	mov    rdi,rdx
  421cad:	call   0x421c50
  421cb2:	test   eax,eax
  421cb4:	je     0x421da0
  421cba:	mov    ebx,0x0
  421cbf:	js     0x421dc2
  421cc5:	mov    ecx,DWORD PTR [rsi+0x8]
  421cc8:	call   0x421620
  421ccd:	test   rax,rax
  421cd0:	je     0x421dd2
  421cd6:	movsxd rdx,DWORD PTR [rsi+0x14]
  421cda:	lea    rcx,[rsi+0x18]
  421cde:	mov    DWORD PTR [rax+0x10],ebx
  421ce1:	lea    r10,[rdi+0x18]
  421ce5:	xor    r9d,r9d
  421ce8:	mov    rbx,rdx
  421ceb:	lea    rsi,[rcx+rdx*4]
  421cef:	movsxd rdx,DWORD PTR [rdi+0x14]
  421cf3:	lea    rdi,[r10+rdx*4]
  421cf7:	lea    rdx,[rax+0x18]
  421cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  421d00:	add    rcx,0x4
  421d04:	add    r10,0x4
  421d08:	mov    r11d,DWORD PTR [r10-0x4]
  421d0c:	mov    r8d,DWORD PTR [rcx-0x4]
  421d10:	add    rdx,0x4
  421d14:	sub    r8,r11
  421d17:	sub    r8,r9
  421d1a:	mov    r9,r8
  421d1d:	mov    r11d,r8d
  421d20:	mov    DWORD PTR [rdx-0x4],r8d
  421d24:	shr    r9,0x20
  421d28:	and    r9d,0x1
  421d2c:	cmp    rdi,r10
  421d2f:	ja     0x421d00
  421d31:	cmp    rsi,rcx
  421d34:	mov    rdi,rdx
  421d37:	mov    r10,rcx
  421d3a:	jbe    0x421d76
  421d3c:	nop    DWORD PTR [rax+0x0]
  421d40:	add    rcx,0x4
  421d44:	mov    r8d,DWORD PTR [rcx-0x4]
  421d48:	add    rdx,0x4
  421d4c:	sub    r8,r9
  421d4f:	mov    r9,r8
  421d52:	mov    r11d,r8d
  421d55:	mov    DWORD PTR [rdx-0x4],r8d
  421d59:	shr    r9,0x20
  421d5d:	and    r9d,0x1
  421d61:	cmp    rsi,rcx
  421d64:	ja     0x421d40
  421d66:	not    r10
  421d69:	lea    rdx,[r10+rsi*1]
  421d6d:	shr    rdx,0x2
  421d71:	lea    rdx,[rdi+rdx*4+0x4]
  421d76:	sub    rdx,0x4
  421d7a:	test   r11d,r11d
  421d7d:	jne    0x421d8d
  421d7f:	nop
  421d80:	sub    rdx,0x4
  421d84:	mov    ecx,DWORD PTR [rdx]
  421d86:	sub    ebx,0x1
  421d89:	test   ecx,ecx
  421d8b:	je     0x421d80
  421d8d:	mov    DWORD PTR [rax+0x14],ebx
  421d90:	add    rsp,0x20
  421d94:	pop    rbx
  421d95:	pop    rsi
  421d96:	pop    rdi
  421d97:	ret    
  421d98:	nop    DWORD PTR [rax+rax*1+0x0]
  421da0:	xor    ecx,ecx
  421da2:	call   0x421620
  421da7:	test   rax,rax
  421daa:	je     0x421dd2
  421dac:	mov    DWORD PTR [rax+0x14],0x1
  421db3:	mov    DWORD PTR [rax+0x18],0x0
  421dba:	add    rsp,0x20
  421dbe:	pop    rbx
  421dbf:	pop    rsi
  421dc0:	pop    rdi
  421dc1:	ret    
  421dc2:	mov    rax,rsi
  421dc5:	mov    bl,0x1
  421dc7:	mov    rsi,rdi
  421dca:	mov    rdi,rax
  421dcd:	jmp    0x421cc5
  421dd2:	xor    eax,eax
  421dd4:	jmp    0x421d90
  421dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421de0:	push   rsi
  421de1:	push   rbx
  421de2:	sub    rsp,0x18
  421de6:	movsxd rax,DWORD PTR [rcx+0x14]
  421dea:	lea    r10,[rcx+0x18]
  421dee:	mov    ecx,0x20
  421df3:	lea    r9,[r10+rax*4]
  421df7:	mov    eax,DWORD PTR [r9-0x4]
  421dfb:	lea    rbx,[r9-0x4]
  421dff:	bsr    r8d,eax
  421e03:	xor    r8d,0x1f
  421e07:	sub    ecx,r8d
  421e0a:	cmp    r8d,0xa
  421e0e:	mov    DWORD PTR [rdx],ecx
  421e10:	jg     0x421e60
  421e12:	mov    ecx,0xb
  421e17:	mov    r11d,eax
  421e1a:	xor    esi,esi
  421e1c:	sub    ecx,r8d
  421e1f:	shr    r11d,cl
  421e22:	or     r11d,0x3ff00000
  421e29:	shl    r11,0x20
  421e2d:	cmp    r10,rbx
  421e30:	jae    0x421e38
  421e32:	mov    esi,DWORD PTR [r9-0x8]
  421e36:	shr    esi,cl
  421e38:	lea    ecx,[r8+0x15]
  421e3c:	shl    eax,cl
  421e3e:	mov    edx,eax
  421e40:	mov    eax,esi
  421e42:	or     eax,edx
  421e44:	or     rax,r11
  421e47:	mov    QWORD PTR [rsp+0x8],rax
  421e4c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  421e52:	add    rsp,0x18
  421e56:	pop    rbx
  421e57:	pop    rsi
  421e58:	ret    
  421e59:	nop    DWORD PTR [rax+0x0]
  421e60:	cmp    r10,rbx
  421e63:	jae    0x421ec0
  421e65:	mov    r11d,r8d
  421e68:	lea    rsi,[r9-0x8]
  421e6c:	mov    edx,DWORD PTR [r9-0x8]
  421e70:	sub    r11d,0xb
  421e74:	je     0x421ee2
  421e76:	mov    ebx,0x2b
  421e7b:	mov    ecx,r11d
  421e7e:	sub    ebx,r8d
  421e81:	shl    eax,cl
  421e83:	mov    r8d,edx
  421e86:	mov    ecx,ebx
  421e88:	shr    r8d,cl
  421e8b:	or     eax,r8d
  421e8e:	xor    r8d,r8d
  421e91:	or     eax,0x3ff00000
  421e96:	shl    rax,0x20
  421e9a:	cmp    r10,rsi
  421e9d:	jae    0x421ea6
  421e9f:	mov    r8d,DWORD PTR [r9-0xc]
  421ea3:	shr    r8d,cl
  421ea6:	mov    ecx,r11d
  421ea9:	shl    edx,cl
  421eab:	or     r8d,edx
  421eae:	movabs rdx,0xffffffff00000000
  421eb8:	and    rax,rdx
  421ebb:	or     rax,r8
  421ebe:	jmp    0x421e47
  421ec0:	mov    r11d,r8d
  421ec3:	sub    r11d,0xb
  421ec7:	je     0x421ee0
  421ec9:	mov    ecx,r11d
  421ecc:	xor    r8d,r8d
  421ecf:	xor    edx,edx
  421ed1:	shl    eax,cl
  421ed3:	or     eax,0x3ff00000
  421ed8:	shl    rax,0x20
  421edc:	jmp    0x421ea6
  421ede:	xchg   ax,ax
  421ee0:	xor    edx,edx
  421ee2:	or     eax,0x3ff00000
  421ee7:	shl    rax,0x20
  421eeb:	or     rax,rdx
  421eee:	jmp    0x421e47
  421ef3:	nop    DWORD PTR [rax]
  421ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f00:	push   rdi
  421f01:	push   rsi
  421f02:	push   rbx
  421f03:	sub    rsp,0x20
  421f07:	mov    ecx,0x1
  421f0c:	movq   rbx,xmm0
  421f11:	mov    rdi,rdx
  421f14:	mov    rsi,r8
  421f17:	call   0x421620
  421f1c:	test   rax,rax
  421f1f:	je     0x422005
  421f25:	mov    r9,rbx
  421f28:	shr    r9,0x20
  421f2c:	mov    r10d,r9d
  421f2f:	and    r9d,0x7fffffff
  421f36:	and    r10d,0xfffff
  421f3d:	shr    r9d,0x14
  421f41:	mov    edx,r10d
  421f44:	or     edx,0x100000
  421f4a:	test   r9d,r9d
  421f4d:	cmovne r10d,edx
  421f51:	test   ebx,ebx
  421f53:	jne    0x421f94
  421f55:	xor    ecx,ecx
  421f57:	mov    DWORD PTR [rax+0x14],0x1
  421f5e:	mov    edx,0x1
  421f63:	tzcnt  ecx,r10d
  421f68:	shr    r10d,cl
  421f6b:	test   r9d,r9d
  421f6e:	lea    r11d,[rcx+0x20]
  421f72:	mov    DWORD PTR [rax+0x18],r10d
  421f76:	je     0x421fd3
  421f78:	lea    edx,[r11+r9*1-0x433]
  421f80:	mov    DWORD PTR [rdi],edx
  421f82:	mov    edx,0x35
  421f87:	sub    edx,r11d
  421f8a:	mov    DWORD PTR [rsi],edx
  421f8c:	add    rsp,0x20
  421f90:	pop    rbx
  421f91:	pop    rsi
  421f92:	pop    rdi
  421f93:	ret    
  421f94:	xor    r11d,r11d
  421f97:	tzcnt  r11d,ebx
  421f9c:	mov    ecx,r11d
  421f9f:	shr    ebx,cl
  421fa1:	test   r11d,r11d
  421fa4:	je     0x422000
  421fa6:	mov    ecx,0x20
  421fab:	mov    edx,r10d
  421fae:	sub    ecx,r11d
  421fb1:	shl    edx,cl
  421fb3:	mov    ecx,r11d
  421fb6:	or     ebx,edx
  421fb8:	shr    r10d,cl
  421fbb:	mov    DWORD PTR [rax+0x18],ebx
  421fbe:	cmp    r10d,0x1
  421fc2:	mov    DWORD PTR [rax+0x1c],r10d
  421fc6:	sbb    edx,edx
  421fc8:	add    edx,0x2
  421fcb:	test   r9d,r9d
  421fce:	mov    DWORD PTR [rax+0x14],edx
  421fd1:	jne    0x421f78
  421fd3:	movsxd rcx,edx
  421fd6:	shl    edx,0x5
  421fd9:	sub    r11d,0x432
  421fe0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  421fe5:	mov    DWORD PTR [rdi],r11d
  421fe8:	xor    ecx,0x1f
  421feb:	sub    edx,ecx
  421fed:	mov    DWORD PTR [rsi],edx
  421fef:	add    rsp,0x20
  421ff3:	pop    rbx
  421ff4:	pop    rsi
  421ff5:	pop    rdi
  421ff6:	ret    
  421ff7:	nop    WORD PTR [rax+rax*1+0x0]
  422000:	mov    DWORD PTR [rax+0x18],ebx
  422003:	jmp    0x421fbe
  422005:	xor    eax,eax
  422007:	jmp    0x421f8c
  422009:	nop    DWORD PTR [rax+0x0]
  422010:	mov    rax,rcx
  422013:	lea    rcx,[rdx+0x1]
  422017:	movzx  edx,BYTE PTR [rdx]
  42201a:	test   dl,dl
  42201c:	mov    BYTE PTR [rax],dl
  42201e:	je     0x422032
  422020:	add    rcx,0x1
  422024:	movzx  edx,BYTE PTR [rcx-0x1]
  422028:	add    rax,0x1
  42202c:	test   dl,dl
  42202e:	mov    BYTE PTR [rax],dl
  422030:	jne    0x422020
  422032:	repz ret 
  422034:	nop
  422035:	nop
  422036:	nop
  422037:	nop
  422038:	nop
  422039:	nop
  42203a:	nop
  42203b:	nop
  42203c:	nop
  42203d:	nop
  42203e:	nop
  42203f:	nop
  422040:	push   rbp
  422041:	push   rdi
  422042:	push   rsi
  422043:	push   rbx
  422044:	sub    rsp,0x48
  422048:	test   rdx,rdx
  42204b:	je     0x422173
  422051:	test   r8,r8
  422054:	je     0x422180
  42205a:	mov    eax,DWORD PTR [r9]
  42205d:	mov    DWORD PTR [r9],0x0
  422064:	mov    DWORD PTR [rsp+0x30],eax
  422068:	movzx  eax,BYTE PTR [rdx]
  42206b:	test   al,al
  42206d:	je     0x422110
  422073:	cmp    DWORD PTR [rsp+0x98],0x1
  42207b:	mov    rsi,r9
  42207e:	mov    rdi,r8
  422081:	mov    rbx,rdx
  422084:	mov    rbp,rcx
  422087:	jbe    0x4220f0
  422089:	cmp    BYTE PTR [rsp+0x30],0x0
  42208e:	jne    0x422120
  422094:	movzx  edx,al
  422097:	mov    ecx,DWORD PTR [rsp+0x90]
  42209e:	call   QWORD PTR [rip+0x7a2a8]        # 0x49c34c
  4220a4:	test   eax,eax
  4220a6:	je     0x4220f0
  4220a8:	cmp    rdi,0x1
  4220ac:	jbe    0x42219c
  4220b2:	mov    DWORD PTR [rsp+0x28],0x1
  4220ba:	mov    QWORD PTR [rsp+0x20],rbp
  4220bf:	mov    r9d,0x2
  4220c5:	mov    r8,rbx
  4220c8:	mov    edx,0x8
  4220cd:	mov    ecx,DWORD PTR [rsp+0x90]
  4220d4:	call   QWORD PTR [rip+0x7a282]        # 0x49c35c
  4220da:	test   eax,eax
  4220dc:	je     0x422187
  4220e2:	mov    eax,0x2
  4220e7:	add    rsp,0x48
  4220eb:	pop    rbx
  4220ec:	pop    rsi
  4220ed:	pop    rdi
  4220ee:	pop    rbp
  4220ef:	ret    
  4220f0:	mov    eax,DWORD PTR [rsp+0x90]
  4220f7:	test   eax,eax
  4220f9:	jne    0x422140
  4220fb:	movzx  eax,BYTE PTR [rbx]
  4220fe:	mov    WORD PTR [rbp+0x0],ax
  422102:	mov    eax,0x1
  422107:	add    rsp,0x48
  42210b:	pop    rbx
  42210c:	pop    rsi
  42210d:	pop    rdi
  42210e:	pop    rbp
  42210f:	ret    
  422110:	xor    edx,edx
  422112:	xor    eax,eax
  422114:	mov    WORD PTR [rcx],dx
  422117:	add    rsp,0x48
  42211b:	pop    rbx
  42211c:	pop    rsi
  42211d:	pop    rdi
  42211e:	pop    rbp
  42211f:	ret    
  422120:	mov    BYTE PTR [rsp+0x31],al
  422124:	mov    DWORD PTR [rsp+0x28],0x1
  42212c:	mov    r9d,0x2
  422132:	mov    QWORD PTR [rsp+0x20],rcx
  422137:	lea    r8,[rsp+0x30]
  42213c:	jmp    0x4220c8
  42213e:	xchg   ax,ax
  422140:	mov    DWORD PTR [rsp+0x28],0x1
  422148:	mov    QWORD PTR [rsp+0x20],rbp
  42214d:	mov    r9d,0x1
  422153:	mov    r8,rbx
  422156:	mov    edx,0x8
  42215b:	mov    ecx,DWORD PTR [rsp+0x90]
  422162:	call   QWORD PTR [rip+0x7a1f4]        # 0x49c35c
  422168:	test   eax,eax
  42216a:	je     0x422187
  42216c:	mov    eax,0x1
  422171:	jmp    0x422117
  422173:	xor    eax,eax
  422175:	add    rsp,0x48
  422179:	pop    rbx
  42217a:	pop    rsi
  42217b:	pop    rdi
  42217c:	pop    rbp
  42217d:	ret    
  42217e:	xchg   ax,ax
  422180:	mov    eax,0xfffffffe
  422185:	jmp    0x422117
  422187:	call   0x422638
  42218c:	mov    DWORD PTR [rax],0x2a
  422192:	mov    eax,0xffffffff
  422197:	jmp    0x422117
  42219c:	movzx  eax,BYTE PTR [rbx]
  42219f:	mov    BYTE PTR [rsi],al
  4221a1:	mov    eax,0xfffffffe
  4221a6:	jmp    0x422117
  4221ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4221b0:	push   rbp
  4221b1:	push   rdi
  4221b2:	push   rsi
  4221b3:	push   rbx
  4221b4:	sub    rsp,0x58
  4221b8:	xor    eax,eax
  4221ba:	mov    WORD PTR [rsp+0x4e],ax
  4221bf:	lea    rax,[rsp+0x4e]
  4221c4:	test   rcx,rcx
  4221c7:	mov    rbx,rcx
  4221ca:	mov    rsi,r9
  4221cd:	mov    rdi,rdx
  4221d0:	cmove  rbx,rax
  4221d4:	mov    rax,QWORD PTR [rip+0xfdf5]        # 0x431fd0
  4221db:	mov    QWORD PTR [rsp+0x38],r8
  4221e0:	mov    rax,QWORD PTR [rax]
  4221e3:	mov    ebp,DWORD PTR [rax]
  4221e5:	call   0x422690
  4221ea:	mov    r8,QWORD PTR [rsp+0x38]
  4221ef:	lea    r9,[rip+0x48d52]        # 0x46af48
  4221f6:	test   rsi,rsi
  4221f9:	mov    DWORD PTR [rsp+0x28],ebp
  4221fd:	mov    DWORD PTR [rsp+0x20],eax
  422201:	mov    rdx,rdi
  422204:	cmovne r9,rsi
  422208:	mov    rcx,rbx
  42220b:	call   0x422040
  422210:	cdqe   
  422212:	add    rsp,0x58
  422216:	pop    rbx
  422217:	pop    rsi
  422218:	pop    rdi
  422219:	pop    rbp
  42221a:	ret    
  42221b:	nop    DWORD PTR [rax+rax*1+0x0]
  422220:	push   r15
  422222:	push   r14
  422224:	push   r13
  422226:	push   r12
  422228:	push   rbp
  422229:	push   rdi
  42222a:	push   rsi
  42222b:	push   rbx
  42222c:	sub    rsp,0x48
  422230:	lea    rax,[rip+0x48d0d]        # 0x46af44
  422237:	test   r9,r9
  42223a:	mov    rdi,r9
  42223d:	mov    r13,rdx
  422240:	cmove  rdi,rax
  422244:	mov    r14,rcx
  422247:	mov    rsi,r8
  42224a:	call   0x422690
  42224f:	mov    r12d,eax
  422252:	mov    rax,QWORD PTR [rip+0xfd77]        # 0x431fd0
  422259:	test   r13,r13
  42225c:	mov    rax,QWORD PTR [rax]
  42225f:	mov    ebp,DWORD PTR [rax]
  422261:	je     0x4222e5
  422267:	mov    rdx,QWORD PTR [r13+0x0]
  42226b:	test   rdx,rdx
  42226e:	je     0x4222e5
  422270:	test   r14,r14
  422273:	je     0x4222f0
  422275:	xor    ebx,ebx
  422277:	test   rsi,rsi
  42227a:	jne    0x42229a
  42227c:	jmp    0x4222e5
  42227e:	xchg   ax,ax
  422280:	movsxd r10,eax
  422283:	add    r14,0x2
  422287:	mov    rdx,r10
  42228a:	add    rdx,QWORD PTR [r13+0x0]
  42228e:	add    rbx,r10
  422291:	cmp    rsi,rbx
  422294:	mov    QWORD PTR [r13+0x0],rdx
  422298:	jbe    0x4222e0
  42229a:	mov    r8,rsi
  42229d:	mov    DWORD PTR [rsp+0x28],ebp
  4222a1:	mov    DWORD PTR [rsp+0x20],r12d
  4222a6:	sub    r8,rbx
  4222a9:	mov    r9,rdi
  4222ac:	mov    rcx,r14
  4222af:	call   0x422040
  4222b4:	cmp    eax,0x0
  4222b7:	jg     0x422280
  4222b9:	jne    0x4222e0
  4222bb:	cmp    rbx,rsi
  4222be:	jae    0x4222e0
  4222c0:	mov    QWORD PTR [r13+0x0],0x0
  4222c8:	mov    rax,rbx
  4222cb:	add    rsp,0x48
  4222cf:	pop    rbx
  4222d0:	pop    rsi
  4222d1:	pop    rdi
  4222d2:	pop    rbp
  4222d3:	pop    r12
  4222d5:	pop    r13
  4222d7:	pop    r14
  4222d9:	pop    r15
  4222db:	ret    
  4222dc:	xor    ebx,ebx
  4222de:	xchg   ax,ax
  4222e0:	mov    rax,rbx
  4222e3:	jmp    0x4222cb
  4222e5:	xor    eax,eax
  4222e7:	jmp    0x4222cb
  4222e9:	nop    DWORD PTR [rax+0x0]
  4222f0:	xor    eax,eax
  4222f2:	test   rsi,rsi
  4222f5:	mov    WORD PTR [rsp+0x3e],ax
  4222fa:	je     0x4222dc
  4222fc:	mov    r15d,ebp
  4222ff:	xor    ebx,ebx
  422301:	lea    r14,[rsp+0x3e]
  422306:	jmp    0x422325
  422308:	nop    DWORD PTR [rax+rax*1+0x0]
  422310:	cdqe   
  422312:	mov    rdx,rax
  422315:	add    rdx,QWORD PTR [r13+0x0]
  422319:	add    rbx,rax
  42231c:	cmp    rsi,rbx
  42231f:	mov    QWORD PTR [r13+0x0],rdx
  422323:	jbe    0x4222e0
  422325:	mov    DWORD PTR [rsp+0x28],ebp
  422329:	mov    DWORD PTR [rsp+0x20],r12d
  42232e:	mov    r9,rdi
  422331:	mov    r8,r15
  422334:	mov    rcx,r14
  422337:	call   0x422040
  42233c:	test   eax,eax
  42233e:	jg     0x422310
  422340:	jmp    0x4222e0
  422342:	nop    DWORD PTR [rax+0x0]
  422346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422350:	push   rbp
  422351:	push   rdi
  422352:	push   rsi
  422353:	push   rbx
  422354:	sub    rsp,0x48
  422358:	xor    eax,eax
  42235a:	mov    WORD PTR [rsp+0x3e],ax
  42235f:	mov    rax,QWORD PTR [rip+0xfc6a]        # 0x431fd0
  422366:	mov    rbx,r8
  422369:	mov    rsi,rcx
  42236c:	mov    rdi,rdx
  42236f:	mov    rax,QWORD PTR [rax]
  422372:	mov    ebp,DWORD PTR [rax]
  422374:	call   0x422690
  422379:	lea    r9,[rip+0x48bc0]        # 0x46af40
  422380:	test   rbx,rbx
  422383:	lea    rcx,[rsp+0x3e]
  422388:	mov    DWORD PTR [rsp+0x28],ebp
  42238c:	mov    DWORD PTR [rsp+0x20],eax
  422390:	mov    r8,rdi
  422393:	cmovne r9,rbx
  422397:	mov    rdx,rsi
  42239a:	call   0x422040
  42239f:	cdqe   
  4223a1:	add    rsp,0x48
  4223a5:	pop    rbx
  4223a6:	pop    rsi
  4223a7:	pop    rdi
  4223a8:	pop    rbp
  4223a9:	ret    
  4223aa:	nop
  4223ab:	nop
  4223ac:	nop
  4223ad:	nop
  4223ae:	nop
  4223af:	nop
  4223b0:	jmp    QWORD PTR [rip+0x7a34e]        # 0x49c704
  4223b6:	nop
  4223b7:	nop
  4223b8:	jmp    QWORD PTR [rip+0x7a33e]        # 0x49c6fc
  4223be:	nop
  4223bf:	nop
  4223c0:	jmp    QWORD PTR [rip+0x7a32e]        # 0x49c6f4
  4223c6:	nop
  4223c7:	nop
  4223c8:	jmp    QWORD PTR [rip+0x7a31e]        # 0x49c6ec
  4223ce:	nop
  4223cf:	nop
  4223d0:	jmp    QWORD PTR [rip+0x7a30e]        # 0x49c6e4
  4223d6:	nop
  4223d7:	nop
  4223d8:	jmp    QWORD PTR [rip+0x7a2fe]        # 0x49c6dc
  4223de:	nop
  4223df:	nop
  4223e0:	jmp    QWORD PTR [rip+0x7a2ee]        # 0x49c6d4
  4223e6:	nop
  4223e7:	nop
  4223e8:	jmp    QWORD PTR [rip+0x7a2de]        # 0x49c6cc
  4223ee:	nop
  4223ef:	nop
  4223f0:	jmp    QWORD PTR [rip+0x7a2ce]        # 0x49c6c4
  4223f6:	nop
  4223f7:	nop
  4223f8:	jmp    QWORD PTR [rip+0x7a2be]        # 0x49c6bc
  4223fe:	nop
  4223ff:	nop
  422400:	jmp    QWORD PTR [rip+0x7a2ae]        # 0x49c6b4
  422406:	nop
  422407:	nop
  422408:	jmp    QWORD PTR [rip+0x7a29e]        # 0x49c6ac
  42240e:	nop
  42240f:	nop
  422410:	jmp    QWORD PTR [rip+0x7a28e]        # 0x49c6a4
  422416:	nop
  422417:	nop
  422418:	jmp    QWORD PTR [rip+0x7a27e]        # 0x49c69c
  42241e:	nop
  42241f:	nop
  422420:	jmp    QWORD PTR [rip+0x7a26e]        # 0x49c694
  422426:	nop
  422427:	nop
  422428:	jmp    QWORD PTR [rip+0x7a25e]        # 0x49c68c
  42242e:	nop
  42242f:	nop
  422430:	jmp    QWORD PTR [rip+0x7a24e]        # 0x49c684
  422436:	nop
  422437:	nop
  422438:	jmp    QWORD PTR [rip+0x7a23e]        # 0x49c67c
  42243e:	nop
  42243f:	nop
  422440:	jmp    QWORD PTR [rip+0x7a22e]        # 0x49c674
  422446:	nop
  422447:	nop
  422448:	jmp    QWORD PTR [rip+0x7a21e]        # 0x49c66c
  42244e:	nop
  42244f:	nop
  422450:	jmp    QWORD PTR [rip+0x7a20e]        # 0x49c664
  422456:	nop
  422457:	nop
  422458:	jmp    QWORD PTR [rip+0x7a1fe]        # 0x49c65c
  42245e:	nop
  42245f:	nop
  422460:	jmp    QWORD PTR [rip+0x7a1ee]        # 0x49c654
  422466:	nop
  422467:	nop
  422468:	jmp    QWORD PTR [rip+0x7a1de]        # 0x49c64c
  42246e:	nop
  42246f:	nop
  422470:	jmp    QWORD PTR [rip+0x7a1ce]        # 0x49c644
  422476:	nop
  422477:	nop
  422478:	jmp    QWORD PTR [rip+0x7a1be]        # 0x49c63c
  42247e:	nop
  42247f:	nop
  422480:	jmp    QWORD PTR [rip+0x7a1ae]        # 0x49c634
  422486:	nop
  422487:	nop
  422488:	jmp    QWORD PTR [rip+0x7a19e]        # 0x49c62c
  42248e:	nop
  42248f:	nop
  422490:	jmp    QWORD PTR [rip+0x7a18e]        # 0x49c624
  422496:	nop
  422497:	nop
  422498:	jmp    QWORD PTR [rip+0x7a17e]        # 0x49c61c
  42249e:	nop
  42249f:	nop
  4224a0:	jmp    QWORD PTR [rip+0x7a16e]        # 0x49c614
  4224a6:	nop
  4224a7:	nop
  4224a8:	jmp    QWORD PTR [rip+0x7a15e]        # 0x49c60c
  4224ae:	nop
  4224af:	nop
  4224b0:	jmp    QWORD PTR [rip+0x7a14e]        # 0x49c604
  4224b6:	nop
  4224b7:	nop
  4224b8:	jmp    QWORD PTR [rip+0x7a13e]        # 0x49c5fc
  4224be:	nop
  4224bf:	nop
  4224c0:	jmp    QWORD PTR [rip+0x7a12e]        # 0x49c5f4
  4224c6:	nop
  4224c7:	nop
  4224c8:	jmp    QWORD PTR [rip+0x7a11e]        # 0x49c5ec
  4224ce:	nop
  4224cf:	nop
  4224d0:	jmp    QWORD PTR [rip+0x7a10e]        # 0x49c5e4
  4224d6:	nop
  4224d7:	nop
  4224d8:	jmp    QWORD PTR [rip+0x7a0fe]        # 0x49c5dc
  4224de:	nop
  4224df:	nop
  4224e0:	jmp    QWORD PTR [rip+0x7a0ee]        # 0x49c5d4
  4224e6:	nop
  4224e7:	nop
  4224e8:	jmp    QWORD PTR [rip+0x7a0de]        # 0x49c5cc
  4224ee:	nop
  4224ef:	nop
  4224f0:	jmp    QWORD PTR [rip+0x7a0ce]        # 0x49c5c4
  4224f6:	nop
  4224f7:	nop
  4224f8:	jmp    QWORD PTR [rip+0x7a0be]        # 0x49c5bc
  4224fe:	nop
  4224ff:	nop
  422500:	jmp    QWORD PTR [rip+0x7a0ae]        # 0x49c5b4
  422506:	nop
  422507:	nop
  422508:	jmp    QWORD PTR [rip+0x7a09e]        # 0x49c5ac
  42250e:	nop
  42250f:	nop
  422510:	jmp    QWORD PTR [rip+0x7a08e]        # 0x49c5a4
  422516:	nop
  422517:	nop
  422518:	jmp    QWORD PTR [rip+0x7a07e]        # 0x49c59c
  42251e:	nop
  42251f:	nop
  422520:	jmp    QWORD PTR [rip+0x7a06e]        # 0x49c594
  422526:	nop
  422527:	nop
  422528:	jmp    QWORD PTR [rip+0x7a05e]        # 0x49c58c
  42252e:	nop
  42252f:	nop
  422530:	jmp    QWORD PTR [rip+0x7a04e]        # 0x49c584
  422536:	nop
  422537:	nop
  422538:	jmp    QWORD PTR [rip+0x7a03e]        # 0x49c57c
  42253e:	nop
  42253f:	nop
  422540:	jmp    QWORD PTR [rip+0x7a02e]        # 0x49c574
  422546:	nop
  422547:	nop
  422548:	jmp    QWORD PTR [rip+0x7a01e]        # 0x49c56c
  42254e:	nop
  42254f:	nop
  422550:	jmp    QWORD PTR [rip+0x7a00e]        # 0x49c564
  422556:	nop
  422557:	nop
  422558:	jmp    QWORD PTR [rip+0x79ffe]        # 0x49c55c
  42255e:	nop
  42255f:	nop
  422560:	jmp    QWORD PTR [rip+0x79fee]        # 0x49c554
  422566:	nop
  422567:	nop
  422568:	jmp    QWORD PTR [rip+0x79fde]        # 0x49c54c
  42256e:	nop
  42256f:	nop
  422570:	jmp    QWORD PTR [rip+0x79fce]        # 0x49c544
  422576:	nop
  422577:	nop
  422578:	jmp    QWORD PTR [rip+0x79fbe]        # 0x49c53c
  42257e:	nop
  42257f:	nop
  422580:	jmp    QWORD PTR [rip+0x79fae]        # 0x49c534
  422586:	nop
  422587:	nop
  422588:	jmp    QWORD PTR [rip+0x79f9e]        # 0x49c52c
  42258e:	nop
  42258f:	nop
  422590:	jmp    QWORD PTR [rip+0x79f8e]        # 0x49c524
  422596:	nop
  422597:	nop
  422598:	jmp    QWORD PTR [rip+0x79f7e]        # 0x49c51c
  42259e:	nop
  42259f:	nop
  4225a0:	jmp    QWORD PTR [rip+0x79f6e]        # 0x49c514
  4225a6:	nop
  4225a7:	nop
  4225a8:	jmp    QWORD PTR [rip+0x79f5e]        # 0x49c50c
  4225ae:	nop
  4225af:	nop
  4225b0:	jmp    QWORD PTR [rip+0x79f4e]        # 0x49c504
  4225b6:	nop
  4225b7:	nop
  4225b8:	jmp    QWORD PTR [rip+0x79f3e]        # 0x49c4fc
  4225be:	nop
  4225bf:	nop
  4225c0:	jmp    QWORD PTR [rip+0x79f2e]        # 0x49c4f4
  4225c6:	nop
  4225c7:	nop
  4225c8:	jmp    QWORD PTR [rip+0x79f1e]        # 0x49c4ec
  4225ce:	nop
  4225cf:	nop
  4225d0:	jmp    QWORD PTR [rip+0x79f0e]        # 0x49c4e4
  4225d6:	nop
  4225d7:	nop
  4225d8:	jmp    QWORD PTR [rip+0x79efe]        # 0x49c4dc
  4225de:	nop
  4225df:	nop
  4225e0:	jmp    QWORD PTR [rip+0x79eee]        # 0x49c4d4
  4225e6:	nop
  4225e7:	nop
  4225e8:	jmp    QWORD PTR [rip+0x79ede]        # 0x49c4cc
  4225ee:	nop
  4225ef:	nop
  4225f0:	jmp    QWORD PTR [rip+0x79ece]        # 0x49c4c4
  4225f6:	nop
  4225f7:	nop
  4225f8:	jmp    QWORD PTR [rip+0x79ebe]        # 0x49c4bc
  4225fe:	nop
  4225ff:	nop
  422600:	jmp    QWORD PTR [rip+0x79eae]        # 0x49c4b4
  422606:	nop
  422607:	nop
  422608:	jmp    QWORD PTR [rip+0x79e9e]        # 0x49c4ac
  42260e:	nop
  42260f:	nop
  422610:	jmp    QWORD PTR [rip+0x79e8e]        # 0x49c4a4
  422616:	nop
  422617:	nop
  422618:	jmp    QWORD PTR [rip+0x79e7e]        # 0x49c49c
  42261e:	nop
  42261f:	nop
  422620:	jmp    QWORD PTR [rip+0x79e66]        # 0x49c48c
  422626:	nop
  422627:	nop
  422628:	jmp    QWORD PTR [rip+0x79e56]        # 0x49c484
  42262e:	nop
  42262f:	nop
  422630:	jmp    QWORD PTR [rip+0x79e46]        # 0x49c47c
  422636:	nop
  422637:	nop
  422638:	jmp    QWORD PTR [rip+0x79e36]        # 0x49c474
  42263e:	nop
  42263f:	nop
  422640:	jmp    QWORD PTR [rip+0x79e26]        # 0x49c46c
  422646:	nop
  422647:	nop
  422648:	jmp    QWORD PTR [rip+0x79e16]        # 0x49c464
  42264e:	nop
  42264f:	nop
  422650:	jmp    QWORD PTR [rip+0x79e06]        # 0x49c45c
  422656:	nop
  422657:	nop
  422658:	jmp    QWORD PTR [rip+0x79df6]        # 0x49c454
  42265e:	nop
  42265f:	nop
  422660:	jmp    QWORD PTR [rip+0x79dde]        # 0x49c444
  422666:	nop
  422667:	nop
  422668:	jmp    QWORD PTR [rip+0x79dce]        # 0x49c43c
  42266e:	nop
  42266f:	nop
  422670:	jmp    QWORD PTR [rip+0x79db6]        # 0x49c42c
  422676:	nop
  422677:	nop
  422678:	jmp    QWORD PTR [rip+0x79da6]        # 0x49c424
  42267e:	nop
  42267f:	nop
  422680:	jmp    QWORD PTR [rip+0x79d8e]        # 0x49c414
  422686:	nop
  422687:	nop
  422688:	jmp    QWORD PTR [rip+0x79d7e]        # 0x49c40c
  42268e:	nop
  42268f:	nop
  422690:	jmp    QWORD PTR [rip+0x79d6e]        # 0x49c404
  422696:	nop
  422697:	nop
  422698:	jmp    QWORD PTR [rip+0x79d5e]        # 0x49c3fc
  42269e:	nop
  42269f:	nop
  4226a0:	mov    rax,QWORD PTR [rip+0x488a9]        # 0x46af50
  4226a7:	ret    
  4226a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4226b0:	mov    rax,rcx
  4226b3:	xchg   QWORD PTR [rip+0x48896],rax        # 0x46af50
  4226ba:	ret    
  4226bb:	nop
  4226bc:	nop
  4226bd:	nop
  4226be:	nop
  4226bf:	nop
  4226c0:	mov    eax,DWORD PTR [rip+0x4889a]        # 0x46af60
  4226c6:	ret    
  4226c7:	nop    WORD PTR [rax+rax*1+0x0]
  4226d0:	mov    eax,ecx
  4226d2:	xchg   DWORD PTR [rip+0x48888],eax        # 0x46af60
  4226d8:	ret    
  4226d9:	nop    DWORD PTR [rax+0x0]
  4226e0:	push   rbx
  4226e1:	sub    rsp,0x20
  4226e5:	mov    ebx,ecx
  4226e7:	lea    rcx,[rip+0xf812]        # 0x431f00
  4226ee:	call   QWORD PTR [rip+0x79c10]        # 0x49c304
  4226f4:	lea    rdx,[rip+0xf81b]        # 0x431f16
  4226fb:	mov    rcx,rax
  4226fe:	call   QWORD PTR [rip+0x79c10]        # 0x49c314
  422704:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x4226d0
  42270b:	test   rax,rax
  42270e:	mov    ecx,ebx
  422710:	cmove  rax,rdx
  422714:	mov    QWORD PTR [rip+0x5e3d],rax        # 0x428558
  42271b:	add    rsp,0x20
  42271f:	pop    rbx
  422720:	rex.W jmp rax
  422723:	nop    DWORD PTR [rax]
  422726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422730:	sub    rsp,0x28
  422734:	lea    rcx,[rip+0xf7c5]        # 0x431f00
  42273b:	call   QWORD PTR [rip+0x79bc3]        # 0x49c304
  422741:	lea    rdx,[rip+0xf7e1]        # 0x431f29
  422748:	mov    rcx,rax
  42274b:	call   QWORD PTR [rip+0x79bc3]        # 0x49c314
  422751:	lea    rdx,[rip+0xffffffffffffff68]        # 0x4226c0
  422758:	test   rax,rax
  42275b:	cmove  rax,rdx
  42275f:	mov    QWORD PTR [rip+0x5dea],rax        # 0x428550
  422766:	add    rsp,0x28
  42276a:	rex.W jmp rax
  42276d:	nop    DWORD PTR [rax]
  422770:	mov    rax,QWORD PTR [rip+0x5de1]        # 0x428558
  422777:	rex.W jmp rax
  42277a:	nop    WORD PTR [rax+rax*1+0x0]
  422780:	mov    rax,QWORD PTR [rip+0x5dc9]        # 0x428550
  422787:	rex.W jmp rax
  42278a:	nop
  42278b:	nop
  42278c:	nop
  42278d:	nop
  42278e:	nop
  42278f:	nop
  422790:	jmp    QWORD PTR [rip+0x79fbe]        # 0x49c754
  422796:	nop
  422797:	nop
  422798:	jmp    QWORD PTR [rip+0x79fae]        # 0x49c74c
  42279e:	nop
  42279f:	nop
  4227a0:	jmp    QWORD PTR [rip+0x79f9e]        # 0x49c744
  4227a6:	nop
  4227a7:	nop
  4227a8:	jmp    QWORD PTR [rip+0x79f8e]        # 0x49c73c
  4227ae:	nop
  4227af:	nop
  4227b0:	jmp    QWORD PTR [rip+0x79f7e]        # 0x49c734
  4227b6:	nop
  4227b7:	nop
  4227b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4227c0:	jmp    QWORD PTR [rip+0x79c26]        # 0x49c3ec
  4227c6:	nop
  4227c7:	nop
  4227c8:	jmp    QWORD PTR [rip+0x79c16]        # 0x49c3e4
  4227ce:	nop
  4227cf:	nop
  4227d0:	jmp    QWORD PTR [rip+0x79c06]        # 0x49c3dc
  4227d6:	nop
  4227d7:	nop
  4227d8:	jmp    QWORD PTR [rip+0x79bf6]        # 0x49c3d4
  4227de:	nop
  4227df:	nop
  4227e0:	jmp    QWORD PTR [rip+0x79be6]        # 0x49c3cc
  4227e6:	nop
  4227e7:	nop
  4227e8:	jmp    QWORD PTR [rip+0x79bd6]        # 0x49c3c4
  4227ee:	nop
  4227ef:	nop
  4227f0:	jmp    QWORD PTR [rip+0x79bc6]        # 0x49c3bc
  4227f6:	nop
  4227f7:	nop
  4227f8:	jmp    QWORD PTR [rip+0x79bb6]        # 0x49c3b4
  4227fe:	nop
  4227ff:	nop
  422800:	jmp    QWORD PTR [rip+0x79ba6]        # 0x49c3ac
  422806:	nop
  422807:	nop
  422808:	jmp    QWORD PTR [rip+0x79b96]        # 0x49c3a4
  42280e:	nop
  42280f:	nop
  422810:	jmp    QWORD PTR [rip+0x79b86]        # 0x49c39c
  422816:	nop
  422817:	nop
  422818:	jmp    QWORD PTR [rip+0x79b76]        # 0x49c394
  42281e:	nop
  42281f:	nop
  422820:	jmp    QWORD PTR [rip+0x79b66]        # 0x49c38c
  422826:	nop
  422827:	nop
  422828:	jmp    QWORD PTR [rip+0x79b56]        # 0x49c384
  42282e:	nop
  42282f:	nop
  422830:	jmp    QWORD PTR [rip+0x79b46]        # 0x49c37c
  422836:	nop
  422837:	nop
  422838:	jmp    QWORD PTR [rip+0x79b36]        # 0x49c374
  42283e:	nop
  42283f:	nop
  422840:	jmp    QWORD PTR [rip+0x79b26]        # 0x49c36c
  422846:	nop
  422847:	nop
  422848:	jmp    QWORD PTR [rip+0x79b16]        # 0x49c364
  42284e:	nop
  42284f:	nop
  422850:	jmp    QWORD PTR [rip+0x79b06]        # 0x49c35c
  422856:	nop
  422857:	nop
  422858:	jmp    QWORD PTR [rip+0x79af6]        # 0x49c354
  42285e:	nop
  42285f:	nop
  422860:	jmp    QWORD PTR [rip+0x79ae6]        # 0x49c34c
  422866:	nop
  422867:	nop
  422868:	jmp    QWORD PTR [rip+0x79ad6]        # 0x49c344
  42286e:	nop
  42286f:	nop
  422870:	jmp    QWORD PTR [rip+0x79ac6]        # 0x49c33c
  422876:	nop
  422877:	nop
  422878:	jmp    QWORD PTR [rip+0x79ab6]        # 0x49c334
  42287e:	nop
  42287f:	nop
  422880:	jmp    QWORD PTR [rip+0x79aa6]        # 0x49c32c
  422886:	nop
  422887:	nop
  422888:	jmp    QWORD PTR [rip+0x79a96]        # 0x49c324
  42288e:	nop
  42288f:	nop
  422890:	jmp    QWORD PTR [rip+0x79a86]        # 0x49c31c
  422896:	nop
  422897:	nop
  422898:	jmp    QWORD PTR [rip+0x79a76]        # 0x49c314
  42289e:	nop
  42289f:	nop
  4228a0:	jmp    QWORD PTR [rip+0x79a66]        # 0x49c30c
  4228a6:	nop
  4228a7:	nop
  4228a8:	jmp    QWORD PTR [rip+0x79a56]        # 0x49c304
  4228ae:	nop
  4228af:	nop
  4228b0:	jmp    QWORD PTR [rip+0x79a46]        # 0x49c2fc
  4228b6:	nop
  4228b7:	nop
  4228b8:	jmp    QWORD PTR [rip+0x79a36]        # 0x49c2f4
  4228be:	nop
  4228bf:	nop
  4228c0:	jmp    QWORD PTR [rip+0x79a26]        # 0x49c2ec
  4228c6:	nop
  4228c7:	nop
  4228c8:	jmp    QWORD PTR [rip+0x79a16]        # 0x49c2e4
  4228ce:	nop
  4228cf:	nop
  4228d0:	jmp    QWORD PTR [rip+0x79a06]        # 0x49c2dc
  4228d6:	nop
  4228d7:	nop
  4228d8:	jmp    QWORD PTR [rip+0x799f6]        # 0x49c2d4
  4228de:	nop
  4228df:	nop
  4228e0:	jmp    QWORD PTR [rip+0x799e6]        # 0x49c2cc
  4228e6:	nop
  4228e7:	nop
  4228e8:	jmp    QWORD PTR [rip+0x799d6]        # 0x49c2c4
  4228ee:	nop
  4228ef:	nop
  4228f0:	jmp    QWORD PTR [rip+0x799c6]        # 0x49c2bc
  4228f6:	nop
  4228f7:	nop
  4228f8:	jmp    QWORD PTR [rip+0x799b6]        # 0x49c2b4
  4228fe:	nop
  4228ff:	nop
  422900:	jmp    QWORD PTR [rip+0x799a6]        # 0x49c2ac
  422906:	nop
  422907:	nop
  422908:	jmp    QWORD PTR [rip+0x79996]        # 0x49c2a4
  42290e:	nop
  42290f:	nop
  422910:	jmp    QWORD PTR [rip+0x79986]        # 0x49c29c
  422916:	nop
  422917:	nop
  422918:	jmp    QWORD PTR [rip+0x79976]        # 0x49c294
  42291e:	nop
  42291f:	nop
  422920:	jmp    QWORD PTR [rip+0x79966]        # 0x49c28c
  422926:	nop
  422927:	nop
  422928:	jmp    QWORD PTR [rip+0x79956]        # 0x49c284
  42292e:	nop
  42292f:	nop
  422930:	push   r15
  422932:	push   r14
  422934:	mov    eax,0x2168
  422939:	push   r13
  42293b:	push   r12
  42293d:	push   rbp
  42293e:	push   rdi
  42293f:	push   rsi
  422940:	push   rbx
  422941:	call   0x41ce10
  422946:	sub    rsp,rax
  422949:	mov    ebx,ecx
  42294b:	mov    rsi,rdx
  42294e:	call   0x41ba60
  422953:	mov    rcx,QWORD PTR [rip+0xf7b6]        # 0x432110
  42295a:	mov    edx,ebx
  42295c:	mov    r8,rsi
  42295f:	call   0x413bf0
  422964:	sub    ebx,eax
  422966:	mov    ecx,ebx
  422968:	xor    ebx,ebx
  42296a:	test   ecx,ecx
  42296c:	jle    0x422974
  42296e:	cdqe   
  422970:	mov    rbx,QWORD PTR [rsi+rax*8]
  422974:	mov    rbp,QWORD PTR [rip+0xf795]        # 0x432110
  42297b:	mov    r8,QWORD PTR [rbp+0x78]
  42297f:	test   BYTE PTR [r8+0x1598],0xf
  422987:	jne    0x423c98
  42298d:	test   BYTE PTR [r8+0xf80],0xf
  422995:	jne    0x42412c
  42299b:	test   BYTE PTR [r8+0x1050],0xf
  4229a3:	jne    0x424117
  4229a9:	test   BYTE PTR [r8+0xfe8],0xf
  4229b1:	jne    0x424105
  4229b7:	test   BYTE PTR [r8+0x900],0xf
  4229bf:	je     0x4229cf
  4229c1:	mov    rax,QWORD PTR [r8+0x908]
  4229c8:	mov    QWORD PTR [rip+0x14861],rax        # 0x437230
  4229cf:	test   BYTE PTR [r8+0x78],0xf
  4229d4:	setne  al
  4229d7:	movzx  edx,al
  4229da:	test   al,al
  4229dc:	mov    DWORD PTR [rip+0x146ce],edx        # 0x4370b0
  4229e2:	je     0x423c80
  4229e8:	mov    DWORD PTR [rip+0x485b2],0x1        # 0x46afa4
  4229f2:	test   BYTE PTR [r8+0x10b8],0xf
  4229fa:	jne    0x4240b9
  422a00:	test   BYTE PTR [r8+0x1120],0xf
  422a08:	jne    0x424011
  422a0e:	xor    eax,eax
  422a10:	test   BYTE PTR [r8+0x1390],0xf
  422a18:	setne  al
  422a1b:	test   BYTE PTR [r8+0x13f8],0xf
  422a23:	mov    DWORD PTR [rip+0x1480f],eax        # 0x437238
  422a29:	setne  al
  422a2c:	movzx  edx,al
  422a2f:	test   al,al
  422a31:	mov    DWORD PTR [rip+0x14805],edx        # 0x43723c
  422a37:	je     0x422a40
  422a39:	or     DWORD PTR [rip+0x25e0],0x10        # 0x425020
  422a40:	xor    eax,eax
  422a42:	test   BYTE PTR [r8+0x1460],0xf
  422a4a:	setne  al
  422a4d:	test   BYTE PTR [r8+0x14c8],0xf
  422a55:	mov    DWORD PTR [rip+0x48525],eax        # 0x46af80
  422a5b:	je     0x423cbe
  422a61:	mov    rdx,QWORD PTR [r8+0x14d0]
  422a68:	xor    eax,eax
  422a6a:	or     rcx,0xffffffffffffffff
  422a6e:	mov    rdi,rdx
  422a71:	repnz scas al,BYTE PTR es:[rdi]
  422a73:	mov    rax,rcx
  422a76:	not    rax
  422a79:	sub    rax,0x1
  422a7d:	cmp    rax,0x1
  422a81:	ja     0x423ff1
  422a87:	cmp    BYTE PTR [rdx],0x0
  422a8a:	mov    QWORD PTR [rip+0x14797],rdx        # 0x437228
  422a91:	js     0x423ff1
  422a97:	xor    eax,eax
  422a99:	test   BYTE PTR [r8+0x420],0xf
  422aa1:	setne  al
  422aa4:	mov    DWORD PTR [rip+0x484ea],eax        # 0x46af94
  422aaa:	xor    eax,eax
  422aac:	test   BYTE PTR [r8+0x350],0xf
  422ab4:	setne  al
  422ab7:	mov    DWORD PTR [rip+0x484db],eax        # 0x46af98
  422abd:	xor    eax,eax
  422abf:	test   BYTE PTR [r8+0x3b8],0xf
  422ac7:	setne  al
  422aca:	mov    DWORD PTR [rip+0x484c0],eax        # 0x46af90
  422ad0:	xor    eax,eax
  422ad2:	test   BYTE PTR [r8+0xeb0],0xf
  422ada:	setne  al
  422add:	mov    DWORD PTR [rip+0x484a9],eax        # 0x46af8c
  422ae3:	xor    eax,eax
  422ae5:	test   BYTE PTR [r8+0xf18],0xf
  422aed:	setne  al
  422af0:	mov    DWORD PTR [rip+0x484a6],eax        # 0x46af9c
  422af6:	xor    eax,eax
  422af8:	test   BYTE PTR [r8+0x558],0xf
  422b00:	setne  al
  422b03:	test   BYTE PTR [r8+0xe48],0xf
  422b0b:	mov    DWORD PTR [rip+0x48477],eax        # 0x46af88
  422b11:	mov    eax,DWORD PTR [r8+0x5c8]
  422b18:	mov    DWORD PTR [rip+0x4848a],eax        # 0x46afa8
  422b1e:	je     0x423bdf
  422b24:	mov    rax,QWORD PTR [r8+0xe50]
  422b2b:	mov    QWORD PTR [rip+0x14586],rax        # 0x4370b8
  422b32:	mov    rdx,QWORD PTR [rbp+0x78]
  422b36:	mov    eax,DWORD PTR [rdx+0x1330]
  422b3c:	mov    DWORD PTR [rip+0x4846a],eax        # 0x46afac
  422b42:	xor    eax,eax
  422b44:	test   BYTE PTR [rdx+0x6f8],0xf
  422b4b:	setne  al
  422b4e:	mov    DWORD PTR [rip+0x4844c],eax        # 0x46afa0
  422b54:	xor    eax,eax
  422b56:	test   BYTE PTR [rdx+0x690],0xf
  422b5d:	sete   al
  422b60:	test   BYTE PTR [rdx+0xca8],0xf
  422b67:	mov    DWORD PTR [rip+0x146d3],eax        # 0x437240
  422b6d:	je     0x422b7d
  422b6f:	mov    rax,QWORD PTR [rdx+0xcb0]
  422b76:	mov    QWORD PTR [rip+0x14523],rax        # 0x4370a0
  422b7d:	test   BYTE PTR [rdx+0xd10],0xf
  422b84:	je     0x422b94
  422b86:	mov    rax,QWORD PTR [rdx+0xd18]
  422b8d:	mov    QWORD PTR [rip+0x14514],rax        # 0x4370a8
  422b94:	test   BYTE PTR [rdx+0x968],0xf
  422b9b:	je     0x422bab
  422b9d:	mov    rax,QWORD PTR [rdx+0x970]
  422ba4:	mov    QWORD PTR [rip+0x144c5],rax        # 0x437070
  422bab:	test   BYTE PTR [rdx+0x9d0],0xf
  422bb2:	je     0x422bc2
  422bb4:	mov    rax,QWORD PTR [rdx+0x9d8]
  422bbb:	mov    QWORD PTR [rip+0x144a6],rax        # 0x437068
  422bc2:	test   BYTE PTR [rdx+0xb70],0xf
  422bc9:	je     0x422bd9
  422bcb:	mov    rax,QWORD PTR [rdx+0xb78]
  422bd2:	mov    QWORD PTR [rip+0x144a7],rax        # 0x437080
  422bd9:	test   BYTE PTR [rdx+0xbd8],0xf
  422be0:	je     0x422bf0
  422be2:	mov    rax,QWORD PTR [rdx+0xbe0]
  422be9:	mov    QWORD PTR [rip+0x14488],rax        # 0x437078
  422bf0:	test   BYTE PTR [rdx+0xa38],0xf
  422bf7:	je     0x422c07
  422bf9:	mov    rax,QWORD PTR [rdx+0xa40]
  422c00:	mov    QWORD PTR [rip+0x14491],rax        # 0x437098
  422c07:	test   BYTE PTR [rdx+0xb08],0xf
  422c0e:	je     0x422c1e
  422c10:	mov    rax,QWORD PTR [rdx+0xb10]
  422c17:	mov    QWORD PTR [rip+0x14472],rax        # 0x437090
  422c1e:	test   BYTE PTR [rdx+0xd78],0xf
  422c25:	je     0x422c35
  422c27:	mov    rax,QWORD PTR [rdx+0xd80]
  422c2e:	mov    QWORD PTR [rip+0x1442b],rax        # 0x437060
  422c35:	test   BYTE PTR [rdx+0xde0],0xf
  422c3c:	je     0x423c71
  422c42:	mov    rdi,QWORD PTR [rdx+0xde8]
  422c49:	xor    eax,eax
  422c4b:	or     rcx,0xffffffffffffffff
  422c4f:	mov    QWORD PTR [rip+0x143fa],rdi        # 0x437050
  422c56:	repnz scas al,BYTE PTR es:[rdi]
  422c58:	mov    rax,rcx
  422c5b:	not    rax
  422c5e:	sub    rax,0x1
  422c62:	mov    DWORD PTR [rip+0x143f0],eax        # 0x437058
  422c68:	test   BYTE PTR [rdx+0xaa0],0xf
  422c6f:	je     0x422c7f
  422c71:	mov    rax,QWORD PTR [rdx+0xaa8]
  422c78:	mov    QWORD PTR [rip+0x14409],rax        # 0x437088
  422c7f:	xor    eax,eax
  422c81:	test   BYTE PTR [rdx+0x628],0xf
  422c88:	setne  al
  422c8b:	test   rbx,rbx
  422c8e:	mov    DWORD PTR [rip+0x482f0],eax        # 0x46af84
  422c94:	je     0x423fc3
  422c9a:	mov    QWORD PTR [rip+0x1441f],rbx        # 0x4370c0
  422ca1:	lea    rcx,[rip+0xfffffffffffdea28]        # 0x4016d0
  422ca8:	call   0x408088
  422cad:	mov    rax,QWORD PTR [rbp+0x78]
  422cb1:	mov    ecx,DWORD PTR [rax+0x18]
  422cb4:	call   0x408080
  422cb9:	call   0x408090
  422cbe:	test   eax,eax
  422cc0:	js     0x423f96
  422cc6:	cmp    QWORD PTR [rip+0x143f2],0x0        # 0x4370c0
  422cce:	je     0x423f76
  422cd4:	call   0x405650
  422cd9:	lea    rcx,[rip+0x14528]        # 0x437208
  422ce0:	call   0x408258
  422ce5:	test   eax,eax
  422ce7:	js     0x423f56
  422ced:	mov    rcx,QWORD PTR [rip+0x14514]        # 0x437208
  422cf4:	lea    rdx,[rip+0xfffffffffffe1995]        # 0x404690
  422cfb:	xor    r8d,r8d
  422cfe:	call   0x408218
  422d03:	mov    rdx,QWORD PTR [rip+0x14366]        # 0x437070
  422d0a:	test   rdx,rdx
  422d0d:	je     0x423c00
  422d13:	mov    r8d,DWORD PTR [rip+0x14526]        # 0x437240
  422d1a:	mov    rcx,QWORD PTR [rip+0x144e7]        # 0x437208
  422d21:	call   0x4081e8
  422d26:	test   eax,eax
  422d28:	jns    0x423c0f
  422d2e:	call   QWORD PTR [rip+0x796f0]        # 0x49c424
  422d34:	lea    rdx,[rip+0x6ba5]        # 0x4298e0
  422d3b:	lea    rcx,[rax+0x60]
  422d3f:	call   0x4016a0
  422d44:	mov    rdx,QWORD PTR [rip+0x1431d]        # 0x437068
  422d4b:	test   rdx,rdx
  422d4e:	je     0x422d79
  422d50:	mov    r8d,DWORD PTR [rip+0x144e9]        # 0x437240
  422d57:	mov    rcx,QWORD PTR [rip+0x144aa]        # 0x437208
  422d5e:	call   0x408200
  422d63:	test   eax,eax
  422d65:	js     0x423f3b
  422d6b:	lea    rcx,[rip+0x6bdf]        # 0x429951
  422d72:	mov    edx,eax
  422d74:	call   0x401b20
  422d79:	mov    rcx,QWORD PTR [rip+0x142f8]        # 0x437078
  422d80:	mov    QWORD PTR [rsp+0x140],0x0
  422d8c:	mov    DWORD PTR [rsp+0x148],0x0
  422d97:	test   rcx,rcx
  422d9a:	je     0x422ed1
  422da0:	cmp    QWORD PTR [rip+0x142d8],0x0        # 0x437080
  422da8:	je     0x422ed1
  422dae:	lea    rbx,[rsp+0x140]
  422db6:	mov    rdx,rbx
  422db9:	call   0x407ff0
  422dbe:	test   eax,eax
  422dc0:	js     0x423ef6
  422dc6:	lea    rsi,[rsp+0x1150]
  422dce:	mov    r9d,DWORD PTR [rip+0x1446b]        # 0x437240
  422dd5:	lea    rdx,[rsp+0xa0]
  422ddd:	mov    DWORD PTR [rsp+0x20],0x1
  422de5:	mov    r8,rbx
  422de8:	mov    DWORD PTR [rsp+0xa0],0x6
  422df3:	mov    rcx,rsi
  422df6:	call   0x407cc0
  422dfb:	test   eax,eax
  422dfd:	js     0x423ec9
  422e03:	mov    DWORD PTR [rip+0x143f7],eax        # 0x437200
  422e09:	je     0x422e45
  422e0b:	lea    r12,[rip+0x1432e]        # 0x437140
  422e12:	xor    edi,edi
  422e14:	mov    rdx,QWORD PTR [rsi]
  422e17:	xor    r8d,r8d
  422e1a:	mov    rcx,r12
  422e1d:	call   0x407f18
  422e22:	test   eax,eax
  422e24:	js     0x423e9c
  422e2a:	mov    rcx,QWORD PTR [rsi]
  422e2d:	add    edi,0x1
  422e30:	add    rsi,0x8
  422e34:	add    r12,0x20
  422e38:	call   0x407ce8
  422e3d:	cmp    edi,DWORD PTR [rip+0x143bd]        # 0x437200
  422e43:	jb     0x422e14
  422e45:	mov    rsi,QWORD PTR [rip+0xf2d4]        # 0x432120
  422e4c:	mov    rcx,QWORD PTR [rsp+0x140]
  422e54:	call   QWORD PTR [rsi]
  422e56:	lea    rcx,[rip+0x142a3]        # 0x437100
  422e5d:	call   0x407e90
  422e62:	test   eax,eax
  422e64:	js     0x423e6f
  422e6a:	mov    rcx,QWORD PTR [rip+0x1428f]        # 0x437100
  422e71:	lea    rdx,[rip+0xfffffffffffe1818]        # 0x404690
  422e78:	xor    r8d,r8d
  422e7b:	call   0x407e88
  422e80:	mov    rcx,QWORD PTR [rip+0x141f9]        # 0x437080
  422e87:	call   0x407cf8
  422e8c:	test   eax,eax
  422e8e:	je     0x423c22
  422e94:	mov    rdx,QWORD PTR [rip+0x141e5]        # 0x437080
  422e9b:	mov    rcx,QWORD PTR [rip+0x1425e]        # 0x437100
  422ea2:	xor    r8d,r8d
  422ea5:	call   0x407ea0
  422eaa:	test   eax,eax
  422eac:	js     0x424214
  422eb2:	mov    ebx,DWORD PTR [rip+0x14348]        # 0x437200
  422eb8:	call   QWORD PTR [rip+0x79566]        # 0x49c424
  422ebe:	lea    rdx,[rip+0x6b9b]        # 0x429a60
  422ec5:	lea    rcx,[rax+0x30]
  422ec9:	mov    r8d,ebx
  422ecc:	call   0x4016a0
  422ed1:	mov    rax,QWORD PTR [rbp+0x78]
  422ed5:	test   BYTE PTR [rax+0xc40],0xf
  422edc:	jne    0x423b2d
  422ee2:	mov    rcx,QWORD PTR [rip+0x141a7]        # 0x437090
  422ee9:	test   rcx,rcx
  422eec:	je     0x424202
  422ef2:	cmp    QWORD PTR [rip+0x1419e],0x0        # 0x437098
  422efa:	je     0x424202
  422f00:	lea    rbx,[rsp+0x140]
  422f08:	mov    rdx,rbx
  422f0b:	call   0x407ff0
  422f10:	test   eax,eax
  422f12:	js     0x4241e2
  422f18:	lea    rax,[rsp+0xf0]
  422f20:	mov    rcx,rax
  422f23:	mov    QWORD PTR [rsp+0x38],rax
  422f28:	call   0x407f40
  422f2d:	mov    rax,QWORD PTR [rbp+0x78]
  422f31:	xor    r9d,r9d
  422f34:	test   BYTE PTR [rax+0xc40],0xf
  422f3b:	je     0x422f45
  422f3d:	lea    r9,[rsp+0xb0]
  422f45:	lea    rcx,[rip+0x14194]        # 0x4370e0
  422f4c:	mov    DWORD PTR [rsp+0x20],0x0
  422f54:	mov    r8d,0x1
  422f5a:	mov    rdx,rbx
  422f5d:	call   0x407f20
  422f62:	test   eax,eax
  422f64:	js     0x4241b5
  422f6a:	mov    rsi,QWORD PTR [rip+0xf1af]        # 0x432120
  422f71:	mov    rcx,QWORD PTR [rsp+0x140]
  422f79:	call   QWORD PTR [rsi]
  422f7b:	lea    rcx,[rip+0x14146]        # 0x4370c8
  422f82:	call   0x407e90
  422f87:	test   eax,eax
  422f89:	js     0x423e6f
  422f8f:	mov    rcx,QWORD PTR [rip+0x14132]        # 0x4370c8
  422f96:	lea    rdx,[rip+0xfffffffffffe16f3]        # 0x404690
  422f9d:	xor    r8d,r8d
  422fa0:	call   0x407e88
  422fa5:	mov    rcx,QWORD PTR [rip+0x140ec]        # 0x437098
  422fac:	call   0x407cf8
  422fb1:	test   eax,eax
  422fb3:	je     0x423aaf
  422fb9:	mov    rdx,QWORD PTR [rip+0x140d8]        # 0x437098
  422fc0:	mov    rcx,QWORD PTR [rip+0x14101]        # 0x4370c8
  422fc7:	xor    r8d,r8d
  422fca:	call   0x407ea0
  422fcf:	test   eax,eax
  422fd1:	js     0x424214
  422fd7:	call   QWORD PTR [rip+0x79447]        # 0x49c424
  422fdd:	lea    rdx,[rip+0x6b64]        # 0x429b48
  422fe4:	lea    rcx,[rax+0x30]
  422fe8:	call   0x4016a0
  422fed:	mov    rdx,QWORD PTR [rip+0x14094]        # 0x437088
  422ff4:	test   rdx,rdx
  422ff7:	je     0x423013
  422ff9:	mov    rcx,QWORD PTR [rip+0x14208]        # 0x437208
  423000:	mov    r8d,0x1
  423006:	call   0x408220
  42300b:	test   eax,eax
  42300d:	js     0x42419a
  423013:	cmp    QWORD PTR [rip+0x14085],0x0        # 0x4370a0
  42301b:	je     0x42304e
  42301d:	cmp    QWORD PTR [rip+0x14083],0x0        # 0x4370a8
  423025:	je     0x42304e
  423027:	lea    rcx,[rip+0x141f2]        # 0x437220
  42302e:	call   0x407d70
  423033:	test   eax,eax
  423035:	js     0x42417f
  42303b:	mov    rcx,QWORD PTR [rip+0x141de]        # 0x437220
  423042:	lea    rdx,[rip+0xfffffffffffde4e7]        # 0x401530
  423049:	call   0x407d58
  42304e:	lea    rcx,[rip+0x141c3]        # 0x437218
  423055:	call   0x407e68
  42305a:	test   eax,eax
  42305c:	js     0x424164
  423062:	mov    rdx,QWORD PTR [rip+0x13ff7]        # 0x437060
  423069:	test   rdx,rdx
  42306c:	je     0x423b15
  423072:	cmp    QWORD PTR [rip+0x13fd6],0x0        # 0x437050
  42307a:	je     0x423b15
  423080:	mov    rcx,QWORD PTR [rip+0x14191]        # 0x437218
  423087:	lea    r8,[rip+0x13fc2]        # 0x437050
  42308e:	mov    r9d,0x1
  423094:	call   0x407e48
  423099:	test   eax,eax
  42309b:	js     0x42413c
  4230a1:	lea    rcx,[rip+0x14168]        # 0x437210
  4230a8:	call   0x408290
  4230ad:	test   eax,eax
  4230af:	js     0x4242a3
  4230b5:	lea    rax,[rip+0x6625]        # 0x4296e1
  4230bc:	mov    r9d,DWORD PTR [rip+0x47ec5]        # 0x46af88
  4230c3:	mov    r8,QWORD PTR [rip+0x13fee]        # 0x4370b8
  4230ca:	mov    rdx,QWORD PTR [rip+0x13fef]        # 0x4370c0
  4230d1:	mov    rcx,QWORD PTR [rsp+0x38]
  4230d6:	mov    QWORD PTR [rsp+0x20],rax
  4230db:	call   0x405380
  4230e0:	mov    eax,DWORD PTR [rip+0x13fca]        # 0x4370b0
  4230e6:	mov    DWORD PTR [rsp+0x130],eax
  4230ed:	mov    rax,QWORD PTR [rbp+0x78]
  4230f1:	test   BYTE PTR [rax+0x4f0],0xf
  4230f8:	je     0x42310b
  4230fa:	mov    rdx,QWORD PTR [rax+0x4f8]
  423101:	mov    rcx,QWORD PTR [rsp+0x38]
  423106:	call   0x404ea0
  42310b:	mov    rcx,QWORD PTR [rip+0x13fae]        # 0x4370c0
  423112:	call   0x401700
  423117:	mov    r12d,DWORD PTR [rip+0x47e76]        # 0x46af94
  42311e:	mov    QWORD PTR [rsp+0xf8],rax
  423126:	test   r12d,r12d
  423129:	jne    0x423271
  42312f:	mov    rcx,QWORD PTR [rsp+0x38]
  423134:	call   0x4028d0
  423139:	test   eax,eax
  42313b:	mov    ebx,eax
  42313d:	js     0x42426f
  423143:	lea    rcx,[rip+0x6ae8]        # 0x429c32
  42314a:	call   0x401b20
  42314f:	cmp    DWORD PTR [rip+0x47e42],0x0        # 0x46af98
  423156:	je     0x42316a
  423158:	mov    rcx,QWORD PTR [rsp+0x38]
  42315d:	call   0x4029d0
  423162:	test   eax,eax
  423164:	jne    0x424265
  42316a:	lea    rbx,[rsp+0x140]
  423172:	mov    rcx,QWORD PTR [rsp+0xf8]
  42317a:	mov    rdx,rbx
  42317d:	call   0x407f68
  423182:	test   eax,eax
  423184:	js     0x423d38
  42318a:	mov    rax,QWORD PTR [rbp+0x78]
  42318e:	test   BYTE PTR [rax+0x78],0x20
  423192:	jne    0x423219
  423198:	cmp    QWORD PTR [rsp+0x140],0x0
  4231a1:	je     0x423271
  4231a7:	lea    rcx,[rsp+0xb0]
  4231af:	call   0x407f80
  4231b4:	test   eax,eax
  4231b6:	js     0x423dbc
  4231bc:	mov    rcx,QWORD PTR [rsp+0xb0]
  4231c4:	mov    rdx,rbx
  4231c7:	call   0x407f88
  4231cc:	test   eax,eax
  4231ce:	js     0x423d94
  4231d4:	xor    edx,edx
  4231d6:	cmp    DWORD PTR [rip+0x47dc7],0x0        # 0x46afa4
  4231dd:	mov    rcx,QWORD PTR [rsp+0xb0]
  4231e5:	lea    r8,[rsp+0x1150]
  4231ed:	sete   dl
  4231f0:	call   0x407f78
  4231f5:	mov    rcx,QWORD PTR [rsp+0xb0]
  4231fd:	call   0x407fa0
  423202:	call   QWORD PTR [rip+0x7921c]        # 0x49c424
  423208:	mov    rcx,QWORD PTR [rsp+0x1150]
  423210:	lea    rdx,[rax+0x30]
  423214:	call   0x422538
  423219:	mov    rax,QWORD PTR [rbp+0x78]
  42321d:	test   BYTE PTR [rax+0x830],0xf
  423224:	je     0x423271
  423226:	cmp    QWORD PTR [rsp+0x140],0x0
  42322f:	je     0x423271
  423231:	mov    rcx,QWORD PTR [rax+0x838]
  423238:	lea    rdx,[rip+0x5f92]        # 0x4291d1
  42323f:	call   0x422550
  423244:	test   rax,rax
  423247:	mov    rbx,rax
  42324a:	je     0x423271
  42324c:	mov    r8d,DWORD PTR [rsp+0x148]
  423254:	mov    rcx,QWORD PTR [rsp+0x140]
  42325c:	mov    r9,rax
  42325f:	mov    edx,0x1
  423264:	call   0x422510
  423269:	mov    rcx,rbx
  42326c:	call   0x422570
  423271:	lea    rcx,[rip+0x6a01]        # 0x429c79
  423278:	call   0x401b20
  42327d:	mov    ebp,DWORD PTR [rip+0x47d0d]        # 0x46af90
  423283:	test   ebp,ebp
  423285:	je     0x423299
  423287:	mov    rcx,QWORD PTR [rsp+0x38]
  42328c:	call   0x402b40
  423291:	test   eax,eax
  423293:	jne    0x424265
  423299:	mov    r15,QWORD PTR [rip+0x79184]        # 0x49c424
  4232a0:	call   r15
  4232a3:	lea    rcx,[rax+0x30]
  4232a7:	call   0x422560
  4232ac:	call   r15
  4232af:	lea    rcx,[rax+0x60]
  4232b3:	call   0x422560
  4232b8:	call   r15
  4232bb:	lea    rcx,[rax+0x30]
  4232bf:	xor    edx,edx
  4232c1:	call   0x4224a0
  4232c6:	call   r15
  4232c9:	lea    rcx,[rax+0x60]
  4232cd:	xor    edx,edx
  4232cf:	call   0x4224a0
  4232d4:	mov    edi,DWORD PTR [rip+0x47ca6]        # 0x46af80
  4232da:	test   edi,edi
  4232dc:	jne    0x424241
  4232e2:	lea    r14,[rsp+0xa0]
  4232ea:	lea    rax,[rsp+0x140]
  4232f2:	lea    r12,[rsp+0x1150]
  4232fa:	mov    DWORD PTR [rsp+0x4c],0x0
  423302:	mov    QWORD PTR [rsp+0x58],rax
  423307:	mov    rax,r14
  42330a:	mov    r14,r12
  42330d:	mov    r12,rax
  423310:	mov    esi,DWORD PTR [rip+0x13d2a]        # 0x437040
  423316:	mov    edx,DWORD PTR [rsp+0x100]
  42331d:	test   esi,esi
  42331f:	je     0x423330
  423321:	test   edx,edx
  423323:	je     0x4234c1
  423329:	nop    DWORD PTR [rax+0x0]
  423330:	movsxd rax,DWORD PTR [rsp+0xf0]
  423338:	cmp    edx,0x1
  42333b:	mov    DWORD PTR [rsp+0x1150],0x1
  423346:	mov    QWORD PTR [rsp+0xa0],0x0
  423352:	mov    DWORD PTR [rsp+0xa8],0x7a120
  42335d:	mov    rbx,rax
  423360:	mov    QWORD PTR [rsp+0x1158],rax
  423368:	je     0x423400
  42336e:	lea    ecx,[rbx+0x1]
  423371:	xor    r9d,r9d
  423374:	xor    r8d,r8d
  423377:	mov    QWORD PTR [rsp+0x20],r12
  42337c:	mov    rdx,r14
  42337f:	call   0x418f90
  423384:	test   eax,eax
  423386:	mov    ebx,eax
  423388:	js     0x423310
  42338a:	mov    eax,DWORD PTR [rsp+0x1150]
  423391:	movsxd r8,DWORD PTR [rsp+0xf0]
  423399:	test   eax,eax
  42339b:	je     0x4233c4
  42339d:	cmp    r8,QWORD PTR [rsp+0x1158]
  4233a5:	je     0x423420
  4233a7:	sub    eax,0x1
  4233aa:	lea    rcx,[r14+0x10]
  4233ae:	lea    r9,[r14+rax*8+0x10]
  4233b3:	jmp    0x4233bf
  4233b5:	add    rcx,0x8
  4233b9:	cmp    r8,QWORD PTR [rcx-0x8]
  4233bd:	je     0x423420
  4233bf:	cmp    rcx,r9
  4233c2:	jne    0x4233b5
  4233c4:	mov    ecx,0xfffffff6
  4233c9:	call   QWORD PTR [rip+0x78f55]        # 0x49c324
  4233cf:	mov    edx,0xc8
  4233d4:	mov    rcx,rax
  4233d7:	call   QWORD PTR [rip+0x79007]        # 0x49c3e4
  4233dd:	test   eax,eax
  4233df:	je     0x42355d
  4233e5:	test   ebx,ebx
  4233e7:	jne    0x423310
  4233ed:	mov    edx,DWORD PTR [rsp+0x100]
  4233f4:	jmp    0x423330
  4233f9:	nop    DWORD PTR [rax+0x0]
  423400:	mov    rcx,QWORD PTR [rsp+0xf8]
  423408:	call   0x407e30
  42340d:	test   rax,rax
  423410:	je     0x42336e
  423416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423420:	mov    rdi,QWORD PTR [rsp+0x58]
  423425:	xor    eax,eax
  423427:	mov    ecx,0x200
  42342c:	mov    rdx,QWORD PTR [rsp+0x58]
  423431:	mov    r8d,0x1000
  423437:	rep stos QWORD PTR es:[rdi],rax
  42343a:	mov    rcx,QWORD PTR [rsp+0x38]
  42343f:	mov    BYTE PTR [rdi],0x0
  423442:	call   0x404cb0
  423447:	test   eax,eax
  423449:	mov    rsi,rax
  42344c:	je     0x4242db
  423452:	mov    rcx,QWORD PTR [rsp+0x38]
  423457:	mov    edx,eax
  423459:	call   0x4027a0
  42345e:	test   eax,eax
  423460:	js     0x4242be
  423466:	test   esi,esi
  423468:	jle    0x4234b4
  42346a:	mov    ebx,DWORD PTR [rip+0x13c40]        # 0x4370b0
  423470:	test   ebx,ebx
  423472:	jne    0x423a51
  423478:	mov    rdi,QWORD PTR [rsp+0x58]
  42347d:	lea    eax,[rsi-0x1]
  423480:	lea    rsi,[rdi+rax*1+0x1]
  423485:	mov    rbx,rdi
  423488:	nop    DWORD PTR [rax+rax*1+0x0]
  423490:	call   r15
  423493:	movsx  ecx,BYTE PTR [rbx]
  423496:	lea    rdx,[rax+0x30]
  42349a:	add    rbx,0x1
  42349e:	call   0x422540
  4234a3:	cmp    rbx,rsi
  4234a6:	jne    0x423490
  4234a8:	call   r15
  4234ab:	lea    rcx,[rax+0x30]
  4234af:	call   0x422560
  4234b4:	mov    DWORD PTR [rsp+0x4c],0x0
  4234bc:	jmp    0x423310
  4234c1:	call   r15
  4234c4:	lea    rdx,[rip+0x67c7]        # 0x429c92
  4234cb:	lea    rcx,[rax+0x60]
  4234cf:	call   0x4016a0
  4234d4:	mov    rcx,QWORD PTR [rsp+0x38]
  4234d9:	call   0x4028d0
  4234de:	test   eax,eax
  4234e0:	jns    0x4233ed
  4234e6:	call   r15
  4234e9:	lea    rdx,[rip+0x6728]        # 0x429c18
  4234f0:	lea    rcx,[rax+0x60]
  4234f4:	mov    ebx,0x1
  4234f9:	call   0x4016a0
  4234fe:	mov    rcx,QWORD PTR [rsp+0x38]
  423503:	call   0x4052b0
  423508:	mov    rcx,QWORD PTR [rip+0x13d11]        # 0x437220
  42350f:	test   rcx,rcx
  423512:	je     0x423519
  423514:	call   0x407d68
  423519:	mov    rcx,QWORD PTR [rip+0x13cf8]        # 0x437218
  423520:	test   rcx,rcx
  423523:	je     0x42352a
  423525:	call   0x407e58
  42352a:	mov    rcx,QWORD PTR [rip+0x13cd7]        # 0x437208
  423531:	call   0x408248
  423536:	mov    rcx,QWORD PTR [rip+0x13cd3]        # 0x437210
  42353d:	call   0x408280
  423542:	call   0x408098
  423547:	mov    eax,ebx
  423549:	add    rsp,0x2168
  423550:	pop    rbx
  423551:	pop    rsi
  423552:	pop    rdi
  423553:	pop    rbp
  423554:	pop    r12
  423556:	pop    r13
  423558:	pop    r14
  42355a:	pop    r15
  42355c:	ret    
  42355d:	mov    esi,eax
  42355f:	call   r15
  423562:	mov    rcx,rax
  423565:	call   0x4223c0
  42356a:	mov    rdx,QWORD PTR [rsp+0x58]
  42356f:	mov    r8d,0xfff
  423575:	mov    ecx,eax
  423577:	call   0x4223d0
  42357c:	movsxd rbp,eax
  42357f:	test   rbp,rbp
  423582:	jle    0x423a09
  423588:	mov    r10d,DWORD PTR [rip+0x479f5]        # 0x46af84
  42358f:	mov    BYTE PTR [rsp+rbp*1+0x140],0x0
  423597:	test   r10d,r10d
  42359a:	je     0x4235c2
  42359c:	mov    rcx,QWORD PTR [rsp+0x58]
  4235a1:	mov    edx,0xa
  4235a6:	call   0x422490
  4235ab:	test   rax,rax
  4235ae:	je     0x4235c2
  4235b0:	mov    r9d,0xa0d
  4235b6:	mov    BYTE PTR [rax+0x2],0x0
  4235ba:	add    rbp,0x1
  4235be:	mov    WORD PTR [rax],r9w
  4235c2:	mov    rdi,QWORD PTR [rsp+0x58]
  4235c7:	lea    rax,[rip+0x479b2]        # 0x46af80
  4235ce:	lea    rsi,[rsp+0xb0]
  4235d6:	mov    QWORD PTR [rsp+0x60],r15
  4235db:	mov    QWORD PTR [rsp+0x40],r14
  4235e0:	mov    QWORD PTR [rsp+0x78],rax
  4235e5:	mov    QWORD PTR [rsp+0x50],rsi
  4235ea:	mov    r13,rdi
  4235ed:	add    rdi,rbp
  4235f0:	mov    eax,DWORD PTR [rip+0x4798a]        # 0x46af80
  4235f6:	mov    QWORD PTR [rsp+0x80],rdi
  4235fe:	mov    QWORD PTR [rsp+0x68],r12
  423603:	jmp    0x423682
  423605:	mov    edx,DWORD PTR [rip+0x47991]        # 0x46af9c
  42360b:	test   edx,edx
  42360d:	je     0x423624
  42360f:	mov    rcx,QWORD PTR [rsp+0xf8]
  423617:	call   0x407e38
  42361c:	test   eax,eax
  42361e:	jne    0x4239c3
  423624:	mov    rcx,QWORD PTR [rsp+0x38]
  423629:	mov    rdx,r13
  42362c:	mov    r8d,ebp
  42362f:	call   0x404e90
  423634:	mov    edx,eax
  423636:	test   edx,edx
  423638:	jle    0x4239fa
  42363e:	mov    eax,DWORD PTR [rip+0x13a6c]        # 0x4370b0
  423644:	test   eax,eax
  423646:	jne    0x42398c
  42364c:	mov    rax,QWORD PTR [rsp+0x78]
  423651:	mov    eax,DWORD PTR [rax]
  423653:	test   eax,eax
  423655:	je     0x4239a7
  42365b:	mov    r13,QWORD PTR [rsp+0xb8]
  423663:	mov    rdi,QWORD PTR [rsp+0x80]
  42366b:	cmp    r13,rdi
  42366e:	jae    0x4239a7
  423674:	mov    rbp,rdi
  423677:	mov    DWORD PTR [rsp+0x4c],0x1
  42367f:	sub    rbp,r13
  423682:	test   eax,eax
  423684:	je     0x423605
  42368a:	mov    r14d,ebp
  42368d:	nop    DWORD PTR [rax]
  423690:	mov    rax,QWORD PTR [rsp+0xd0]
  423698:	movsxd rbp,r14d
  42369b:	mov    DWORD PTR [rsp+0xc8],0x0
  4236a6:	mov    DWORD PTR [rsp+0xc0],0x0
  4236b1:	test   rax,rax
  4236b4:	je     0x4237ea
  4236ba:	mov    rdi,QWORD PTR [rsp+0x50]
  4236bf:	lea    rdx,[rbp+rax*1+0x0]
  4236c4:	mov    ebx,0x14
  4236c9:	sub    rbx,rax
  4236cc:	cmp    rdx,0x14
  4236d0:	mov    rdx,r13
  4236d3:	cmovbe rbx,rbp
  4236d7:	lea    rcx,[rdi+rax*1+0x28]
  4236dc:	lea    rsi,[rdi+0x28]
  4236e0:	mov    r8,rbx
  4236e3:	call   0x4224d8
  4236e8:	mov    r12,QWORD PTR [rsp+0xd0]
  4236f0:	lea    rax,[r13+rbx*1+0x0]
  4236f5:	mov    QWORD PTR [rsp+0xb8],rax
  4236fd:	add    rbx,r12
  423700:	mov    QWORD PTR [rsp+0xd0],rbx
  423708:	mov    rdi,QWORD PTR [rip+0x13b19]        # 0x437228
  42370f:	mov    QWORD PTR [rsp+0xb0],rsi
  423717:	movzx  r9d,BYTE PTR [rsi]
  42371b:	cmp    r9b,BYTE PTR [rdi]
  42371e:	je     0x423848
  423724:	cmp    rbx,r12
  423727:	jle    0x4237c1
  42372d:	mov    rax,r12
  423730:	jmp    0x42374b
  423732:	cmp    dl,0xa
  423735:	sete   dl
  423738:	add    rax,0x1
  42373c:	movzx  edx,dl
  42373f:	cmp    rax,rbx
  423742:	mov    DWORD PTR [rsp+0xc4],edx
  423749:	je     0x4237c1
  42374b:	test   rax,rax
  42374e:	je     0x423a64
  423754:	movzx  edx,BYTE PTR [rsi+rax*1]
  423758:	cmp    dl,BYTE PTR [rdi]
  42375a:	jne    0x423732
  42375c:	mov    ecx,DWORD PTR [rsp+0xc4]
  423763:	test   ecx,ecx
  423765:	je     0x423732
  423767:	mov    rdx,rax
  42376a:	movsxd rbp,eax
  42376d:	mov    DWORD PTR [rsp+0xc8],eax
  423774:	sub    rdx,r12
  423777:	mov    DWORD PTR [rsp+0xc4],0x1
  423782:	add    rdx,r13
  423785:	mov    QWORD PTR [rsp+0xb8],rdx
  42378d:	test   ebp,ebp
  42378f:	jne    0x4237cd
  423791:	mov    eax,DWORD PTR [rsp+0xc0]
  423798:	test   eax,eax
  42379a:	je     0x4237d6
  42379c:	cmp    eax,0x1
  42379f:	je     0x42383c
  4237a5:	cmp    eax,0x2
  4237a8:	je     0x423805
  4237aa:	mov    ebx,0x1
  4237af:	mov    rcx,QWORD PTR [rsp+0xf8]
  4237b7:	call   0x408138
  4237bc:	jmp    0x423508
  4237c1:	mov    QWORD PTR [rsp+0xd0],0x0
  4237cd:	test   rbp,rbp
  4237d0:	jne    0x4242ee
  4237d6:	mov    r15,QWORD PTR [rsp+0x60]
  4237db:	mov    r14,QWORD PTR [rsp+0x40]
  4237e0:	mov    r12,QWORD PTR [rsp+0x68]
  4237e5:	jmp    0x423310
  4237ea:	lea    rax,[r13+rbp*1+0x0]
  4237ef:	mov    rbx,rbp
  4237f2:	mov    rsi,r13
  4237f5:	xor    r12d,r12d
  4237f8:	mov    QWORD PTR [rsp+0xb8],rax
  423800:	jmp    0x423708
  423805:	mov    rcx,QWORD PTR [rsp+0x38]
  42380a:	call   0x402b40
  42380f:	test   eax,eax
  423811:	jne    0x4237aa
  423813:	mov    rax,QWORD PTR [rsp+0xb8]
  42381b:	mov    DWORD PTR [rsp+0xc0],0x0
  423826:	mov    rdx,rax
  423829:	sub    rdx,r13
  42382c:	cmp    r14d,edx
  42382f:	jle    0x4237d6
  423831:	sub    r14d,edx
  423834:	mov    r13,rax
  423837:	jmp    0x423690
  42383c:	mov    rcx,QWORD PTR [rsp+0x38]
  423841:	call   0x4029d0
  423846:	jmp    0x42380f
  423848:	mov    r8d,DWORD PTR [rsp+0xc4]
  423850:	test   r8d,r8d
  423853:	je     0x423724
  423859:	lea    r10,[rip+0x17e4]        # 0x425044
  423860:	mov    QWORD PTR [rsp+0x90],rdi
  423868:	mov    edi,r9d
  42386b:	mov    QWORD PTR [rsp+0x88],rbp
  423873:	cmp    dil,0x5e
  423877:	mov    QWORD PTR [rsp+0x70],0x0
  423880:	mov    rbp,r10
  423883:	mov    rcx,rbp
  423886:	je     0x4238ea
  423888:	mov    rcx,QWORD PTR [rsp+0x40]
  42388d:	mov    rdx,rbp
  423890:	call   0x422480
  423895:	mov    rdx,rbp
  423898:	mov    ecx,DWORD PTR [rdx]
  42389a:	add    rdx,0x4
  42389e:	lea    eax,[rcx-0x1010101]
  4238a4:	not    ecx
  4238a6:	and    eax,ecx
  4238a8:	and    eax,0x80808080
  4238ad:	je     0x423898
  4238af:	mov    ecx,eax
  4238b1:	shr    ecx,0x10
  4238b4:	test   eax,0x8080
  4238b9:	cmove  eax,ecx
  4238bc:	lea    rcx,[rdx+0x2]
  4238c0:	cmove  rdx,rcx
  4238c4:	add    al,al
  4238c6:	mov    rcx,QWORD PTR [rsp+0x40]
  4238cb:	sbb    rdx,0x3
  4238cf:	sub    rdx,rbp
  4238d2:	mov    BYTE PTR [rsp+rdx*1+0x1150],0x0
  4238da:	mov    BYTE PTR [rsp+0x1150],dil
  4238e2:	mov    BYTE PTR [rsp+rdx*1+0x114e],dil
  4238ea:	mov    r15,rcx
  4238ed:	mov    edx,DWORD PTR [r15]
  4238f0:	add    r15,0x4
  4238f4:	lea    eax,[rdx-0x1010101]
  4238fa:	not    edx
  4238fc:	and    eax,edx
  4238fe:	and    eax,0x80808080
  423903:	je     0x4238ed
  423905:	mov    edx,eax
  423907:	mov    r11,rbx
  42390a:	shr    edx,0x10
  42390d:	test   eax,0x8080
  423912:	cmove  eax,edx
  423915:	lea    rdx,[r15+0x2]
  423919:	cmove  r15,rdx
  42391d:	add    al,al
  42391f:	mov    rdx,rsi
  423922:	sbb    r15,0x3
  423926:	sub    r15,rcx
  423929:	cmp    r15,rbx
  42392c:	cmovle r11,r15
  423930:	mov    r8,r11
  423933:	mov    QWORD PTR [rsp+0x98],r11
  42393b:	call   0x422460
  423940:	test   eax,eax
  423942:	mov    r11,QWORD PTR [rsp+0x98]
  42394a:	je     0x423a6c
  423950:	add    rbp,0x18
  423954:	cmp    QWORD PTR [rsp+0x70],0x1
  42395a:	je     0x423977
  42395c:	cmp    dil,0x5e
  423960:	mov    QWORD PTR [rsp+0x70],0x1
  423969:	mov    rcx,rbp
  42396c:	jne    0x423888
  423972:	jmp    0x4238ea
  423977:	mov    rdi,QWORD PTR [rsp+0x90]
  42397f:	mov    rbp,QWORD PTR [rsp+0x88]
  423987:	jmp    0x423724
  42398c:	lea    rcx,[rip+0x6394]        # 0x429d27
  423993:	call   0x401b20
  423998:	mov    rax,QWORD PTR [rsp+0x78]
  42399d:	mov    eax,DWORD PTR [rax]
  42399f:	test   eax,eax
  4239a1:	jne    0x42365b
  4239a7:	mov    r15,QWORD PTR [rsp+0x60]
  4239ac:	mov    r14,QWORD PTR [rsp+0x40]
  4239b1:	mov    r12,QWORD PTR [rsp+0x68]
  4239b6:	mov    DWORD PTR [rsp+0x4c],0x1
  4239be:	jmp    0x423310
  4239c3:	mov    r9,QWORD PTR [rsp+0x40]
  4239c8:	mov    rcx,QWORD PTR [rsp+0x38]
  4239cd:	mov    rdx,r13
  4239d0:	mov    r8d,ebp
  4239d3:	mov    QWORD PTR [rsp+0x1150],0x0
  4239df:	mov    QWORD PTR [rsp+0x1158],0x1000
  4239eb:	call   0x404db0
  4239f0:	mov    edx,eax
  4239f2:	test   edx,edx
  4239f4:	jg     0x42363e
  4239fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4239ff:	call   0x4027a0
  423a04:	jmp    0x42364c
  423a09:	mov    r11d,DWORD PTR [rsp+0x100]
  423a11:	test   r11d,r11d
  423a14:	jne    0x423de4
  423a1a:	call   r15
  423a1d:	lea    rdx,[rip+0x626e]        # 0x429c92
  423a24:	lea    rcx,[rax+0x60]
  423a28:	call   0x4016a0
  423a2d:	mov    rcx,QWORD PTR [rsp+0x38]
  423a32:	call   0x4028d0
  423a37:	mov    ebx,eax
  423a39:	call   r15
  423a3c:	mov    rcx,rax
  423a3f:	call   0x422588
  423a44:	test   ebx,ebx
  423a46:	jns    0x423310
  423a4c:	jmp    0x4234e6
  423a51:	lea    rcx,[rip+0x62be]        # 0x429d16
  423a58:	mov    edx,esi
  423a5a:	call   0x401b20
  423a5f:	jmp    0x423478
  423a64:	movzx  edx,BYTE PTR [rsi]
  423a67:	jmp    0x423732
  423a6c:	cmp    r11,r15
  423a6f:	mov    rbp,QWORD PTR [rsp+0x88]
  423a77:	je     0x423b9d
  423a7d:	mov    rax,QWORD PTR [rsp+0xd0]
  423a85:	mov    rdi,QWORD PTR [rsp+0x50]
  423a8a:	mov    r8,rbp
  423a8d:	mov    rdx,r13
  423a90:	lea    rcx,[rdi+rax*1+0x28]
  423a95:	call   0x4224d8
  423a9a:	add    QWORD PTR [rsp+0xd0],rbp
  423aa2:	movsxd rbp,DWORD PTR [rsp+0xc8]
  423aaa:	jmp    0x42378d
  423aaf:	mov    rcx,QWORD PTR [rip+0x135e2]        # 0x437098
  423ab6:	mov    rdx,rbx
  423ab9:	call   0x407ff0
  423abe:	test   eax,eax
  423ac0:	js     0x423d74
  423ac6:	mov    rax,QWORD PTR [rbp+0x78]
  423aca:	test   BYTE PTR [rax+0xc40],0xf
  423ad1:	mov    QWORD PTR [rsp+0x20],0x0
  423ada:	je     0x423cf1
  423ae0:	mov    r8d,DWORD PTR [rip+0x13759]        # 0x437240
  423ae7:	mov    rcx,QWORD PTR [rip+0x135da]        # 0x4370c8
  423aee:	lea    r9,[rsp+0xb0]
  423af6:	mov    rdx,rbx
  423af9:	call   0x407ea8
  423afe:	test   eax,eax
  423b00:	js     0x424214
  423b06:	mov    rcx,QWORD PTR [rsp+0x140]
  423b0e:	call   QWORD PTR [rsi]
  423b10:	jmp    0x422fd7
  423b15:	mov    rcx,QWORD PTR [rip+0x136fc]        # 0x437218
  423b1c:	lea    rdx,[rip+0xfffffffffffde02d]        # 0x401b50
  423b23:	call   0x407e40
  423b28:	jmp    0x4230a1
  423b2d:	mov    rbx,QWORD PTR [rax+0xc48]
  423b34:	or     rcx,0xffffffffffffffff
  423b38:	xor    eax,eax
  423b3a:	mov    QWORD PTR [rsp+0xf0],0x8
  423b46:	mov    rdi,rbx
  423b49:	repnz scas al,BYTE PTR es:[rdi]
  423b4b:	cmp    rcx,0xffffffffffffffee
  423b4f:	jne    0x423d54
  423b55:	lea    r9,[rsp+0xf0]
  423b5d:	lea    r8,[rsp+0xb0]
  423b65:	mov    edx,0x10
  423b6a:	mov    rcx,rbx
  423b6d:	call   0x408050
  423b72:	test   eax,eax
  423b74:	jns    0x422ee2
  423b7a:	call   QWORD PTR [rip+0x788a4]        # 0x49c424
  423b80:	lea    rdx,[rip+0x5f49]        # 0x429ad0
  423b87:	lea    rcx,[rax+0x60]
  423b8b:	mov    r8,rbx
  423b8e:	call   0x4016a0
  423b93:	mov    ecx,0x1
  423b98:	call   0x422578
  423b9d:	imul   r11,QWORD PTR [rsp+0x70],0x18
  423ba3:	mov    rax,r15
  423ba6:	mov    QWORD PTR [rsp+0xd0],0x0
  423bb2:	movsxd rbp,DWORD PTR [rsp+0xc8]
  423bba:	sub    rax,r12
  423bbd:	add    rax,r13
  423bc0:	mov    QWORD PTR [rsp+0xb8],rax
  423bc8:	lea    rax,[rip+0x1471]        # 0x425040
  423bcf:	mov    eax,DWORD PTR [rax+r11*1]
  423bd3:	mov    DWORD PTR [rsp+0xc0],eax
  423bda:	jmp    0x42378d
  423bdf:	test   BYTE PTR [r8+0x4f0],0xf
  423be7:	jne    0x423d20
  423bed:	lea    rax,[rip+0x5c84]        # 0x429878
  423bf4:	mov    QWORD PTR [rip+0x134bd],rax        # 0x4370b8
  423bfb:	jmp    0x422b32
  423c00:	xor    eax,eax
  423c02:	cmp    DWORD PTR [rip+0x47383],0x0        # 0x46af8c
  423c09:	je     0x423d0f
  423c0f:	lea    rcx,[rip+0x5cf2]        # 0x429908
  423c16:	mov    edx,eax
  423c18:	call   0x401b20
  423c1d:	jmp    0x422d44
  423c22:	mov    rcx,QWORD PTR [rip+0x13457]        # 0x437080
  423c29:	mov    rdx,rbx
  423c2c:	call   0x407ff0
  423c31:	test   eax,eax
  423c33:	js     0x423d74
  423c39:	mov    r8d,DWORD PTR [rip+0x13600]        # 0x437240
  423c40:	mov    rcx,QWORD PTR [rip+0x134b9]        # 0x437100
  423c47:	xor    r9d,r9d
  423c4a:	mov    DWORD PTR [rsp+0x20],0x0
  423c52:	mov    rdx,rbx
  423c55:	call   0x407e98
  423c5a:	test   eax,eax
  423c5c:	js     0x424214
  423c62:	mov    rcx,QWORD PTR [rsp+0x140]
  423c6a:	call   QWORD PTR [rsi]
  423c6c:	jmp    0x422eb2
  423c71:	mov    DWORD PTR [rip+0x133dd],0x0        # 0x437058
  423c7b:	jmp    0x422c68
  423c80:	xor    eax,eax
  423c82:	test   BYTE PTR [r8+0x760],0xf
  423c8a:	setne  al
  423c8d:	mov    DWORD PTR [rip+0x47311],eax        # 0x46afa4
  423c93:	jmp    0x4229f2
  423c98:	call   0x4080a0
  423c9d:	test   eax,eax
  423c9f:	je     0x423cd1
  423ca1:	call   QWORD PTR [rip+0x7877d]        # 0x49c424
  423ca7:	lea    rdx,[rip+0x5aea]        # 0x429798
  423cae:	lea    rcx,[rax+0x60]
  423cb2:	call   0x4016a0
  423cb7:	xor    ecx,ecx
  423cb9:	call   0x422578
  423cbe:	lea    rax,[rip+0x5bb1]        # 0x429876
  423cc5:	mov    QWORD PTR [rip+0x1355c],rax        # 0x437228
  423ccc:	jmp    0x422a97
  423cd1:	call   QWORD PTR [rip+0x7874d]        # 0x49c424
  423cd7:	lea    rdx,[rip+0x5ada]        # 0x4297b8
  423cde:	lea    rcx,[rax+0x60]
  423ce2:	call   0x4016a0
  423ce7:	mov    ecx,0x1
  423cec:	call   0x422578
  423cf1:	mov    r8d,DWORD PTR [rip+0x13548]        # 0x437240
  423cf8:	mov    rcx,QWORD PTR [rip+0x133c9]        # 0x4370c8
  423cff:	xor    r9d,r9d
  423d02:	mov    rdx,rbx
  423d05:	call   0x407ea8
  423d0a:	jmp    0x423afe
  423d0f:	mov    rcx,QWORD PTR [rip+0x134f2]        # 0x437208
  423d16:	call   0x4081f0
  423d1b:	jmp    0x422d26
  423d20:	mov    rcx,QWORD PTR [r8+0x4f8]
  423d27:	call   0x405260
  423d2c:	mov    QWORD PTR [rip+0x13385],rax        # 0x4370b8
  423d33:	jmp    0x422b32
  423d38:	mov    QWORD PTR [rsp+0x140],0x0
  423d44:	mov    DWORD PTR [rsp+0x148],0x0
  423d4f:	jmp    0x42318a
  423d54:	call   QWORD PTR [rip+0x786ca]        # 0x49c424
  423d5a:	lea    rdx,[rip+0x5d2f]        # 0x429a90
  423d61:	lea    rcx,[rax+0x60]
  423d65:	call   0x4016a0
  423d6a:	mov    ecx,0x1
  423d6f:	call   0x422578
  423d74:	call   QWORD PTR [rip+0x786aa]        # 0x49c424
  423d7a:	lea    rdx,[rip+0x5cc2]        # 0x429a43
  423d81:	lea    rcx,[rax+0x60]
  423d85:	call   0x4016a0
  423d8a:	mov    ecx,0x1
  423d8f:	call   0x422578
  423d94:	mov    ecx,eax
  423d96:	call   0x407d30
  423d9b:	mov    rbx,rax
  423d9e:	call   QWORD PTR [rip+0x78680]        # 0x49c424
  423da4:	lea    rdx,[rip+0x5eb6]        # 0x429c61
  423dab:	lea    rcx,[rax+0x60]
  423daf:	mov    r8,rbx
  423db2:	call   0x4016a0
  423db7:	jmp    0x423271
  423dbc:	mov    ecx,eax
  423dbe:	call   0x407d30
  423dc3:	mov    rbx,rax
  423dc6:	call   QWORD PTR [rip+0x78658]        # 0x49c424
  423dcc:	lea    rdx,[rip+0x5e7a]        # 0x429c4d
  423dd3:	lea    rcx,[rax+0x60]
  423dd7:	mov    r8,rbx
  423dda:	call   0x4016a0
  423ddf:	jmp    0x423271
  423de4:	xor    ebx,ebx
  423de6:	cmp    DWORD PTR [rsp+0x4c],0x0
  423deb:	mov    r12,r14
  423dee:	je     0x4234fe
  423df4:	xor    eax,eax
  423df6:	mov    ecx,0x200
  423dfb:	mov    rdi,r14
  423dfe:	rep stos QWORD PTR es:[rdi],rax
  423e01:	mov    rcx,QWORD PTR [rsp+0x38]
  423e06:	mov    r9d,0x1f40
  423e0c:	mov    r8d,0x1000
  423e12:	mov    rdx,r14
  423e15:	mov    ebx,esi
  423e17:	stos   BYTE PTR es:[rdi],al
  423e18:	call   0x404d50
  423e1d:	cmp    eax,0x0
  423e20:	mov    edi,eax
  423e22:	je     0x4234fe
  423e28:	jle    0x423e68
  423e2a:	cmp    DWORD PTR [rip+0x1327f],0x0        # 0x4370b0
  423e31:	je     0x423e41
  423e33:	lea    rcx,[rip+0x5edc]        # 0x429d16
  423e3a:	mov    edx,eax
  423e3c:	call   0x401b20
  423e41:	xor    ebx,ebx
  423e43:	call   r15
  423e46:	movsx  ecx,BYTE PTR [r12+rbx*1]
  423e4b:	lea    rdx,[rax+0x30]
  423e4f:	add    rbx,0x1
  423e53:	call   0x422540
  423e58:	cmp    edi,ebx
  423e5a:	jg     0x423e43
  423e5c:	call   r15
  423e5f:	lea    rcx,[rax+0x30]
  423e63:	call   0x422560
  423e68:	xor    ebx,ebx
  423e6a:	jmp    0x4234fe
  423e6f:	mov    ecx,eax
  423e71:	call   0x407d30
  423e76:	mov    rbx,rax
  423e79:	call   QWORD PTR [rip+0x785a5]        # 0x49c424
  423e7f:	lea    rdx,[rip+0x5b82]        # 0x429a08
  423e86:	lea    rcx,[rax+0x60]
  423e8a:	mov    r8,rbx
  423e8d:	call   0x4016a0
  423e92:	mov    ecx,0x1
  423e97:	call   0x422578
  423e9c:	mov    ecx,eax
  423e9e:	call   0x407d30
  423ea3:	mov    rbx,rax
  423ea6:	call   QWORD PTR [rip+0x78578]        # 0x49c424
  423eac:	lea    rdx,[rip+0x5b2d]        # 0x4299e0
  423eb3:	lea    rcx,[rax+0x60]
  423eb7:	mov    r8,rbx
  423eba:	call   0x4016a0
  423ebf:	mov    ecx,0x1
  423ec4:	call   0x422578
  423ec9:	cmp    eax,0xffffffcd
  423ecc:	je     0x423f16
  423ece:	mov    ecx,eax
  423ed0:	call   0x407d30
  423ed5:	mov    rbx,rax
  423ed8:	call   QWORD PTR [rip+0x78546]        # 0x49c424
  423ede:	lea    rdx,[rip+0x5ad3]        # 0x4299b8
  423ee5:	lea    rcx,[rax+0x60]
  423ee9:	mov    r8,rbx
  423eec:	call   0x4016a0
  423ef1:	jmp    0x423d8a
  423ef6:	call   QWORD PTR [rip+0x78528]        # 0x49c424
  423efc:	lea    rdx,[rip+0x5a64]        # 0x429967
  423f03:	lea    rcx,[rax+0x60]
  423f07:	call   0x4016a0
  423f0c:	mov    ecx,0x1
  423f11:	call   0x422578
  423f16:	mov    ebx,DWORD PTR [rsp+0xa0]
  423f1d:	call   QWORD PTR [rip+0x78501]        # 0x49c424
  423f23:	lea    rdx,[rip+0x5a5e]        # 0x429988
  423f2a:	lea    rcx,[rax+0x60]
  423f2e:	mov    r8d,ebx
  423f31:	call   0x4016a0
  423f36:	jmp    0x423d8a
  423f3b:	call   QWORD PTR [rip+0x784e3]        # 0x49c424
  423f41:	lea    rdx,[rip+0x59e8]        # 0x429930
  423f48:	lea    rcx,[rax+0x60]
  423f4c:	call   0x4016a0
  423f51:	jmp    0x422d79
  423f56:	call   QWORD PTR [rip+0x784c8]        # 0x49c424
  423f5c:	lea    rdx,[rip+0x5955]        # 0x4298b8
  423f63:	lea    rcx,[rax+0x60]
  423f67:	call   0x4016a0
  423f6c:	mov    ecx,0x1
  423f71:	call   0x422578
  423f76:	call   QWORD PTR [rip+0x784a8]        # 0x49c424
  423f7c:	lea    rdx,[rip+0x5921]        # 0x4298a4
  423f83:	lea    rcx,[rax+0x60]
  423f87:	call   0x4016a0
  423f8c:	mov    ecx,0x1
  423f91:	call   0x422578
  423f96:	mov    ecx,eax
  423f98:	call   0x407d30
  423f9d:	mov    rbx,rax
  423fa0:	call   QWORD PTR [rip+0x7847e]        # 0x49c424
  423fa6:	lea    rdx,[rip+0x58e6]        # 0x429893
  423fad:	lea    rcx,[rax+0x60]
  423fb1:	mov    r8,rbx
  423fb4:	call   0x4016a0
  423fb9:	mov    ecx,0x1
  423fbe:	call   0x422578
  423fc3:	cmp    QWORD PTR [rip+0x130f5],0x0        # 0x4370c0
  423fcb:	jne    0x422ca1
  423fd1:	call   QWORD PTR [rip+0x7844d]        # 0x49c424
  423fd7:	lea    rdx,[rip+0x589e]        # 0x42987c
  423fde:	lea    rcx,[rax+0x60]
  423fe2:	call   0x4016a0
  423fe7:	mov    ecx,0x1
  423fec:	call   0x422578
  423ff1:	call   QWORD PTR [rip+0x7842d]        # 0x49c424
  423ff7:	lea    rdx,[rip+0x582a]        # 0x429828
  423ffe:	lea    rcx,[rax+0x60]
  424002:	call   0x4016a0
  424007:	mov    ecx,0x1
  42400c:	call   0x422578
  424011:	xor    ecx,ecx
  424013:	xor    ebx,ebx
  424015:	xor    esi,esi
  424017:	call   0x4081b8
  42401c:	lea    rcx,[rip+0x57bd]        # 0x4297e0
  424023:	mov    rdx,rax
  424026:	call   0x401b20
  42402b:	mov    r15,QWORD PTR [rip+0x783f2]        # 0x49c424
  424032:	call   r15
  424035:	lea    rdx,[rax+0x30]
  424039:	mov    ecx,0x9
  42403e:	call   0x422540
  424043:	mov    edx,0x1
  424048:	mov    ecx,esi
  42404a:	call   0x407eb0
  42404f:	test   rax,rax
  424052:	je     0x42407d
  424054:	lea    rcx,[rip+0x57a5]        # 0x429800
  42405b:	mov    rdx,rax
  42405e:	call   0x401b20
  424063:	add    ebx,eax
  424065:	cmp    ebx,0x40
  424068:	jbe    0x424078
  42406a:	lea    rcx,[rip+0x5793]        # 0x429804
  424071:	xor    ebx,ebx
  424073:	call   0x401b20
  424078:	add    esi,0x1
  42407b:	jmp    0x424043
  42407d:	lea    rcx,[rip+0x5783]        # 0x429807
  424084:	xor    ebx,ebx
  424086:	xor    esi,esi
  424088:	call   0x401b20
  42408d:	call   r15
  424090:	lea    rdx,[rax+0x30]
  424094:	mov    ecx,0x9
  424099:	call   0x422540
  42409e:	mov    edx,0x2
  4240a3:	mov    ecx,esi
  4240a5:	call   0x407eb0
  4240aa:	test   rax,rax
  4240ad:	je     0x4240f2
  4240af:	cmp    BYTE PTR [rax],0x0
  4240b2:	jne    0x4240cc
  4240b4:	add    esi,0x1
  4240b7:	jmp    0x42409e
  4240b9:	mov    rcx,QWORD PTR [rip+0x13170]        # 0x437230
  4240c0:	call   0x403cc0
  4240c5:	xor    ecx,ecx
  4240c7:	call   0x422578
  4240cc:	lea    rcx,[rip+0x5748]        # 0x42981b
  4240d3:	mov    rdx,rax
  4240d6:	call   0x401b20
  4240db:	add    ebx,eax
  4240dd:	cmp    ebx,0x40
  4240e0:	jbe    0x4240b4
  4240e2:	lea    rcx,[rip+0x571b]        # 0x429804
  4240e9:	xor    ebx,ebx
  4240eb:	call   0x401b20
  4240f0:	jmp    0x4240b4
  4240f2:	lea    rcx,[rip+0x5728]        # 0x429821
  4240f9:	call   0x401b20
  4240fe:	xor    ecx,ecx
  424100:	call   0x422578
  424105:	mov    ecx,DWORD PTR [r8+0x18]
  424109:	xor    edx,edx
  42410b:	call   0x407b10
  424110:	xor    ecx,ecx
  424112:	call   0x422578
  424117:	mov    ecx,DWORD PTR [r8+0x18]
  42411b:	mov    edx,0x1
  424120:	call   0x407b10
  424125:	xor    ecx,ecx
  424127:	call   0x422578
  42412c:	mov    ecx,DWORD PTR [r8+0x18]
  424130:	call   0x4067a0
  424135:	xor    ecx,ecx
  424137:	call   0x422578
  42413c:	mov    ecx,eax
  42413e:	call   0x407d30
  424143:	mov    rbx,rax
  424146:	call   QWORD PTR [rip+0x782d8]        # 0x49c424
  42414c:	lea    rdx,[rip+0x5a7d]        # 0x429bd0
  424153:	lea    rcx,[rax+0x60]
  424157:	mov    r8,rbx
  42415a:	call   0x4016a0
  42415f:	jmp    0x4230a1
  424164:	call   QWORD PTR [rip+0x782ba]        # 0x49c424
  42416a:	lea    rdx,[rip+0x5a41]        # 0x429bb2
  424171:	lea    rcx,[rax+0x60]
  424175:	call   0x4016a0
  42417a:	jmp    0x423062
  42417f:	call   QWORD PTR [rip+0x7829f]        # 0x49c424
  424185:	lea    rdx,[rip+0x5a0c]        # 0x429b98
  42418c:	lea    rcx,[rax+0x60]
  424190:	call   0x4016a0
  424195:	jmp    0x42303b
  42419a:	call   QWORD PTR [rip+0x78284]        # 0x49c424
  4241a0:	lea    rdx,[rip+0x59c9]        # 0x429b70
  4241a7:	lea    rcx,[rax+0x60]
  4241ab:	call   0x4016a0
  4241b0:	jmp    0x423013
  4241b5:	mov    ecx,eax
  4241b7:	call   0x407d30
  4241bc:	mov    rbx,rax
  4241bf:	call   QWORD PTR [rip+0x7825f]        # 0x49c424
  4241c5:	lea    rdx,[rip+0x5954]        # 0x429b20
  4241cc:	lea    rcx,[rax+0x60]
  4241d0:	mov    r8,rbx
  4241d3:	call   0x4016a0
  4241d8:	mov    ecx,0x1
  4241dd:	call   0x422578
  4241e2:	call   QWORD PTR [rip+0x7823c]        # 0x49c424
  4241e8:	lea    rdx,[rip+0x5909]        # 0x429af8
  4241ef:	lea    rcx,[rax+0x60]
  4241f3:	call   0x4016a0
  4241f8:	mov    ecx,0x1
  4241fd:	call   0x422578
  424202:	lea    rax,[rsp+0xf0]
  42420a:	mov    QWORD PTR [rsp+0x38],rax
  42420f:	jmp    0x422fed
  424214:	mov    ecx,eax
  424216:	call   0x407d30
  42421b:	mov    rbx,rax
  42421e:	call   QWORD PTR [rip+0x78200]        # 0x49c424
  424224:	lea    rdx,[rip+0x57fd]        # 0x429a28
  42422b:	lea    rcx,[rax+0x60]
  42422f:	mov    r8,rbx
  424232:	call   0x4016a0
  424237:	mov    ecx,0x1
  42423c:	call   0x422578
  424241:	lea    rdx,[rsp+0xb0]
  424249:	mov    ecx,0x10
  42424e:	xor    eax,eax
  424250:	mov    rdi,rdx
  424253:	rep stos DWORD PTR es:[rdi],eax
  424255:	mov    DWORD PTR [rsp+0xc4],0x1
  424260:	jmp    0x4232e2
  424265:	mov    eax,0x1
  42426a:	jmp    0x423549
  42426f:	call   QWORD PTR [rip+0x781af]        # 0x49c424
  424275:	lea    rdx,[rip+0x599c]        # 0x429c18
  42427c:	lea    rcx,[rax+0x60]
  424280:	call   0x4016a0
  424285:	mov    ecx,ebx
  424287:	call   0x407f08
  42428c:	mov    rcx,QWORD PTR [rsp+0xf8]
  424294:	call   0x408138
  424299:	mov    eax,0x1
  42429e:	jmp    0x423549
  4242a3:	call   QWORD PTR [rip+0x7817b]        # 0x49c424
  4242a9:	lea    rdx,[rip+0x5948]        # 0x429bf8
  4242b0:	lea    rcx,[rax+0x60]
  4242b4:	call   0x4016a0
  4242b9:	jmp    0x4230b5
  4242be:	call   r15
  4242c1:	lea    rdx,[rip+0x5a18]        # 0x429ce0
  4242c8:	lea    rcx,[rax+0x60]
  4242cc:	mov    ebx,0x1
  4242d1:	call   0x4016a0
  4242d6:	jmp    0x4237af
  4242db:	lea    rcx,[rip+0x59ce]        # 0x429cb0
  4242e2:	xor    ebx,ebx
  4242e4:	call   0x401b20
  4242e9:	jmp    0x4237af
  4242ee:	test   rbp,rbp
  4242f1:	js     0x4237aa
  4242f7:	mov    r13,QWORD PTR [rsp+0xb0]
  4242ff:	jmp    0x423605
  424304:	nop
  424305:	nop
  424306:	nop
  424307:	nop
  424308:	nop
  424309:	nop
  42430a:	nop
  42430b:	nop
  42430c:	nop
  42430d:	nop
  42430e:	nop
  42430f:	nop
  424310:	sub    rsp,0x38
  424314:	mov    QWORD PTR [rsp+0x50],r8
  424319:	lea    r8,[rsp+0x50]
  42431e:	mov    QWORD PTR [rsp+0x58],r9
  424323:	mov    QWORD PTR [rsp+0x28],r8
  424328:	call   0x41d9a0
  42432d:	add    rsp,0x38
  424331:	ret    
  424332:	nop
  424333:	nop
  424334:	nop
  424335:	nop
  424336:	nop
  424337:	nop
  424338:	nop
  424339:	nop
  42433a:	nop
  42433b:	nop
  42433c:	nop
  42433d:	nop
  42433e:	nop
  42433f:	nop
  424340:	(bad)  
  424341:	(bad)  
  424342:	(bad)  
  424343:	(bad)  
  424344:	(bad)  
  424345:	(bad)  
  424346:	(bad)  
  424347:	inc    DWORD PTR [rax]
  424349:	add    BYTE PTR [rax],al
  42434b:	add    BYTE PTR [rax],al
  42434d:	add    BYTE PTR [rax],al
  42434f:	add    bh,bh
  424351:	(bad)  
  424352:	(bad)  
  424353:	(bad)  
  424354:	(bad)  
  424355:	(bad)  
  424356:	(bad)  
  424357:	inc    DWORD PTR [rax]
  424359:	add    BYTE PTR [rax],al
  42435b:	add    BYTE PTR [rax],al
  42435d:	add    BYTE PTR [rax],al
	...
