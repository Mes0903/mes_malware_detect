
343564ae7b089278180f139230e02a587598bbc10ceb2ace00268c63127a792d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    DWORD PTR [rsp+0x8],ecx
   140001004:	push   rbx
   140001005:	sub    rsp,0x150
   14000100c:	mov    r8,rdx
   14000100f:	lea    rcx,[rsp+0x20]
   140001014:	lea    rdx,[rsp+0x160]
   14000101c:	mov    r9d,0x50602
   140001022:	call   QWORD PTR [rip+0xc490]        # 0x14000d4b8
   140001028:	lea    rcx,[rsp+0x30]
   14000102d:	xor    edx,edx
   14000102f:	call   0x140008f10
   140001034:	lea    rcx,[rsp+0x30]
   140001039:	call   QWORD PTR [rip+0xc481]        # 0x14000d4c0
   14000103f:	lea    rcx,[rsp+0x30]
   140001044:	call   0x140007840
   140001049:	call   QWORD PTR [rip+0xc489]        # 0x14000d4d8
   14000104f:	lea    rcx,[rsp+0x60]
   140001054:	mov    ebx,eax
   140001056:	call   QWORD PTR [rip+0xb534]        # 0x14000c590
   14000105c:	lea    rcx,[rsp+0x30]
   140001061:	call   QWORD PTR [rip+0xc461]        # 0x14000d4c8
   140001067:	lea    rcx,[rsp+0x20]
   14000106c:	call   QWORD PTR [rip+0xc45e]        # 0x14000d4d0
   140001072:	mov    eax,ebx
   140001074:	add    rsp,0x150
   14000107b:	pop    rbx
   14000107c:	ret    
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    QWORD PTR [rsp+0x10],rbx
   140001085:	push   rdi
   140001086:	sub    rsp,0x30
   14000108a:	mov    rbx,rdx
   14000108d:	mov    rdi,rcx
   140001090:	lea    r8,[rip+0xc505]        # 0x14000d59c
   140001097:	lea    rdx,[rip+0xc4f6]        # 0x14000d594
   14000109e:	lea    rcx,[rsp+0x40]
   1400010a3:	xor    r9d,r9d
   1400010a6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400010ae:	call   QWORD PTR [rip+0xb324]        # 0x14000c3d8
   1400010b4:	mov    rcx,rbx
   1400010b7:	mov    rdx,rax
   1400010ba:	call   QWORD PTR [rip+0xc3e0]        # 0x14000d4a0
   1400010c0:	lea    rcx,[rsp+0x40]
   1400010c5:	call   QWORD PTR [rip+0xb315]        # 0x14000c3e0
   1400010cb:	lea    r8,[rip+0xc4be]        # 0x14000d590
   1400010d2:	lea    rdx,[rip+0xc4bb]        # 0x14000d594
   1400010d9:	lea    rcx,[rsp+0x40]
   1400010de:	xor    r9d,r9d
   1400010e1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400010e9:	call   QWORD PTR [rip+0xb2e9]        # 0x14000c3d8
   1400010ef:	mov    rcx,QWORD PTR [rdi+0x8]
   1400010f3:	mov    rdx,rax
   1400010f6:	call   QWORD PTR [rip+0xc3ac]        # 0x14000d4a8
   1400010fc:	lea    rcx,[rsp+0x40]
   140001101:	call   QWORD PTR [rip+0xb2d9]        # 0x14000c3e0
   140001107:	lea    r8,[rip+0xc47e]        # 0x14000d58c
   14000110e:	lea    rdx,[rip+0xc47f]        # 0x14000d594
   140001115:	lea    rcx,[rsp+0x40]
   14000111a:	xor    r9d,r9d
   14000111d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140001125:	call   QWORD PTR [rip+0xb2ad]        # 0x14000c3d8
   14000112b:	mov    rcx,QWORD PTR [rdi+0x20]
   14000112f:	mov    rdx,rax
   140001132:	call   QWORD PTR [rip+0xc370]        # 0x14000d4a8
   140001138:	lea    rcx,[rsp+0x40]
   14000113d:	call   QWORD PTR [rip+0xb29d]        # 0x14000c3e0
   140001143:	lea    r8,[rip+0xc43e]        # 0x14000d588
   14000114a:	lea    rdx,[rip+0xc443]        # 0x14000d594
   140001151:	lea    rcx,[rsp+0x40]
   140001156:	xor    r9d,r9d
   140001159:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140001161:	call   QWORD PTR [rip+0xb271]        # 0x14000c3d8
   140001167:	mov    rcx,QWORD PTR [rdi+0x30]
   14000116b:	mov    rdx,rax
   14000116e:	call   QWORD PTR [rip+0xc334]        # 0x14000d4a8
   140001174:	lea    rcx,[rsp+0x40]
   140001179:	call   QWORD PTR [rip+0xb261]        # 0x14000c3e0
   14000117f:	lea    r8,[rip+0xc3fa]        # 0x14000d580
   140001186:	lea    rdx,[rip+0xc407]        # 0x14000d594
   14000118d:	lea    rcx,[rsp+0x40]
   140001192:	xor    r9d,r9d
   140001195:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000119d:	call   QWORD PTR [rip+0xb235]        # 0x14000c3d8
   1400011a3:	mov    rcx,QWORD PTR [rdi+0x40]
   1400011a7:	mov    rdx,rax
   1400011aa:	call   QWORD PTR [rip+0xc300]        # 0x14000d4b0
   1400011b0:	lea    rcx,[rsp+0x40]
   1400011b5:	call   QWORD PTR [rip+0xb225]        # 0x14000c3e0
   1400011bb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400011c0:	add    rsp,0x30
   1400011c4:	pop    rdi
   1400011c5:	ret    
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400011da:	mov    QWORD PTR [rsp+0x18],rsi
   1400011df:	mov    QWORD PTR [rsp+0x20],rdi
   1400011e4:	push   r12
   1400011e6:	sub    rsp,0x60
   1400011ea:	cmp    BYTE PTR [rsp+0x90],0x0
   1400011f2:	mov    r12,rcx
   1400011f5:	movzx  edi,r9b
   1400011f9:	lea    rcx,[rsp+0x38]
   1400011fe:	movzx  ebp,r8b
   140001202:	mov    rbx,rdx
   140001205:	mov    esi,0x4
   14000120a:	mov    DWORD PTR [rsp+0x20],0xff
   140001212:	je     0x14000121f
   140001214:	mov    edx,0x8c
   140001219:	lea    r9d,[rdx+0x64]
   14000121d:	jmp    0x140001228
   14000121f:	mov    edx,0x78
   140001224:	lea    r9d,[rdx+0x64]
   140001228:	mov    r8d,edx
   14000122b:	call   QWORD PTR [rip+0xb327]        # 0x14000c558
   140001231:	lea    rdx,[rsp+0x38]
   140001236:	lea    rcx,[rsp+0x30]
   14000123b:	mov    r8d,0x1
   140001241:	call   QWORD PTR [rip+0xb1d1]        # 0x14000c418
   140001247:	lea    rdx,[rsp+0x30]
   14000124c:	mov    rcx,rbx
   14000124f:	call   QWORD PTR [rip+0xb1bb]        # 0x14000c410
   140001255:	lea    rcx,[rsp+0x30]
   14000125a:	call   QWORD PTR [rip+0xb1a8]        # 0x14000c408
   140001260:	test   dil,dil
   140001263:	je     0x1400012b8
   140001265:	mov    edx,0x50
   14000126a:	lea    rcx,[rsp+0x38]
   14000126f:	mov    r9d,0xd2
   140001275:	mov    r8d,edx
   140001278:	mov    esi,0x6
   14000127d:	mov    DWORD PTR [rsp+0x20],0x96
   140001285:	call   QWORD PTR [rip+0xb2cd]        # 0x14000c558
   14000128b:	lea    r8d,[rsi-0x5]
   14000128f:	lea    rdx,[rsp+0x38]
   140001294:	lea    rcx,[rsp+0x30]
   140001299:	call   QWORD PTR [rip+0xb179]        # 0x14000c418
   14000129f:	lea    rdx,[rsp+0x30]
   1400012a4:	mov    rcx,rbx
   1400012a7:	call   QWORD PTR [rip+0xb163]        # 0x14000c410
   1400012ad:	lea    rcx,[rsp+0x30]
   1400012b2:	call   QWORD PTR [rip+0xb150]        # 0x14000c408
   1400012b8:	mov    edx,0x32
   1400012bd:	lea    rcx,[rsp+0x38]
   1400012c2:	mov    DWORD PTR [rsp+0x20],0x8c
   1400012ca:	mov    r9d,edx
   1400012cd:	mov    r8d,edx
   1400012d0:	call   QWORD PTR [rip+0xb282]        # 0x14000c558
   1400012d6:	lea    rdx,[rsp+0x38]
   1400012db:	mov    rcx,rbx
   1400012de:	call   QWORD PTR [rip+0xb11c]        # 0x14000c400
   1400012e4:	test   bpl,bpl
   1400012e7:	jne    0x140001339
   1400012e9:	mov    r9d,0x50
   1400012ef:	lea    rcx,[rsp+0x38]
   1400012f4:	mov    edx,0xa0
   1400012f9:	mov    r8d,r9d
   1400012fc:	mov    DWORD PTR [rsp+0x20],0xfa
   140001304:	call   QWORD PTR [rip+0xb24e]        # 0x14000c558
   14000130a:	lea    rdx,[rsp+0x38]
   14000130f:	lea    rcx,[rsp+0x30]
   140001314:	mov    r8d,0x1
   14000131a:	call   QWORD PTR [rip+0xb0f8]        # 0x14000c418
   140001320:	lea    rdx,[rsp+0x30]
   140001325:	mov    rcx,rbx
   140001328:	call   QWORD PTR [rip+0xb0e2]        # 0x14000c410
   14000132e:	lea    rcx,[rsp+0x30]
   140001333:	call   QWORD PTR [rip+0xb0cf]        # 0x14000c408
   140001339:	cmp    BYTE PTR [rsp+0x98],0x0
   140001341:	movsd  xmm3,QWORD PTR [rip+0xc26f]        # 0x14000d5b8
   140001349:	movsd  xmm2,QWORD PTR [rip+0xc227]        # 0x14000d578
   140001351:	movd   xmm4,esi
   140001355:	lea    eax,[rsi+rsi*1]
   140001358:	lea    rdx,[rsp+0x38]
   14000135d:	movsd  xmm0,QWORD PTR [r12]
   140001363:	movsd  xmm1,QWORD PTR [rip+0xc245]        # 0x14000d5b0
   14000136b:	mov    rcx,rbx
   14000136e:	mulsd  xmm0,QWORD PTR [rip+0xc232]        # 0x14000d5a8
   140001376:	cvtdq2pd xmm4,xmm4
   14000137a:	addsd  xmm0,xmm3
   14000137e:	subsd  xmm0,xmm4
   140001382:	addsd  xmm0,xmm2
   140001386:	movsd  QWORD PTR [rsp+0x38],xmm0
   14000138c:	movsd  xmm0,QWORD PTR [r12+0x8]
   140001393:	mulsd  xmm0,xmm1
   140001397:	subsd  xmm1,xmm0
   14000139b:	movd   xmm0,eax
   14000139f:	addsd  xmm1,xmm3
   1400013a3:	cvtdq2pd xmm0,xmm0
   1400013a7:	subsd  xmm1,xmm4
   1400013ab:	addsd  xmm1,xmm2
   1400013af:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400013b5:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400013bb:	movsd  QWORD PTR [rsp+0x40],xmm1
   1400013c1:	je     0x1400013cb
   1400013c3:	call   QWORD PTR [rip+0xb02f]        # 0x14000c3f8
   1400013c9:	jmp    0x1400013d7
   1400013cb:	mov    r8d,0x1
   1400013d1:	call   QWORD PTR [rip+0xb0e1]        # 0x14000c4b8
   1400013d7:	lea    r11,[rsp+0x60]
   1400013dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400013e0:	mov    rbp,QWORD PTR [r11+0x18]
   1400013e4:	mov    rsi,QWORD PTR [r11+0x20]
   1400013e8:	mov    rdi,QWORD PTR [r11+0x28]
   1400013ec:	mov    rsp,r11
   1400013ef:	pop    r12
   1400013f1:	ret    
   1400013f2:	int3   
   1400013f3:	int3   
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	cmp    DWORD PTR [rdx+0x50],0x1
   140001404:	jne    0x140001416
   140001406:	mov    DWORD PTR [rcx+0x4c],0xffffffff
   14000140d:	mov    BYTE PTR [rcx+0x50],0x0
   140001411:	or     WORD PTR [rdx+0x12],0x4
   140001416:	repz ret 
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	mov    r11,rsp
   140001423:	mov    QWORD PTR [r11+0x8],rbx
   140001427:	mov    QWORD PTR [r11+0x10],rbp
   14000142b:	mov    QWORD PTR [r11+0x18],rsi
   14000142f:	push   rdi
   140001430:	sub    rsp,0xc0
   140001437:	mov    rax,QWORD PTR [rcx+0x38]
   14000143b:	lea    rsi,[rcx+0x38]
   14000143f:	or     edi,0xffffffff
   140001442:	movaps XMMWORD PTR [r11-0x18],xmm6
   140001447:	movsd  xmm6,QWORD PTR [rip+0xc179]        # 0x14000d5c8
   14000144f:	mov    ecx,DWORD PTR [rax+0x4]
   140001452:	xor    ebx,ebx
   140001454:	mov    rbp,rdx
   140001457:	dec    ecx
   140001459:	test   ecx,ecx
   14000145b:	jle    0x140001597
   140001461:	movaps XMMWORD PTR [r11-0x28],xmm7
   140001466:	movsd  xmm7,QWORD PTR [rip+0xc152]        # 0x14000d5c0
   14000146e:	movaps XMMWORD PTR [r11-0x38],xmm8
   140001473:	movsd  xmm8,QWORD PTR [rip+0xc13c]        # 0x14000d5b8
   14000147c:	movaps XMMWORD PTR [r11-0x48],xmm9
   140001481:	movsd  xmm9,QWORD PTR [rip+0xc126]        # 0x14000d5b0
   14000148a:	movaps XMMWORD PTR [r11-0x58],xmm10
   14000148f:	movsd  xmm10,QWORD PTR [rip+0xc110]        # 0x14000d5a8
   140001498:	movaps XMMWORD PTR [r11-0x68],xmm11
   14000149d:	xorpd  xmm11,xmm11
   1400014a2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400014b0:	movd   xmm0,DWORD PTR [rbp+0x0]
   1400014b5:	movd   xmm1,DWORD PTR [rbp+0x4]
   1400014ba:	mov    edx,ebx
   1400014bc:	mov    rcx,rsi
   1400014bf:	cvtdq2pd xmm0,xmm0
   1400014c3:	cvtdq2pd xmm1,xmm1
   1400014c7:	movsd  QWORD PTR [rsp+0x20],xmm0
   1400014cd:	movsd  QWORD PTR [rsp+0x28],xmm1
   1400014d3:	call   QWORD PTR [rip+0xaedf]        # 0x14000c3b8
   1400014d9:	lea    rcx,[rsp+0x20]
   1400014de:	lea    rdx,[rsp+0x40]
   1400014e3:	movsd  xmm0,QWORD PTR [rax]
   1400014e7:	movapd xmm1,xmm9
   1400014ec:	mulsd  xmm0,xmm10
   1400014f1:	addsd  xmm0,xmm8
   1400014f6:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400014fc:	movsd  xmm0,QWORD PTR [rax+0x8]
   140001501:	mov    rax,QWORD PTR [rcx]
   140001504:	mov    QWORD PTR [rdx],rax
   140001507:	mov    rax,QWORD PTR [rcx+0x8]
   14000150b:	lea    rcx,[rsp+0x30]
   140001510:	mulsd  xmm0,xmm9
   140001515:	mov    QWORD PTR [rdx+0x8],rax
   140001519:	lea    rdx,[rsp+0x50]
   14000151e:	subsd  xmm1,xmm0
   140001522:	addsd  xmm1,xmm8
   140001527:	movsd  QWORD PTR [rsp+0x38],xmm1
   14000152d:	mov    rax,QWORD PTR [rcx]
   140001530:	mov    QWORD PTR [rdx],rax
   140001533:	mov    rax,QWORD PTR [rcx+0x8]
   140001537:	lea    rcx,[rsp+0x40]
   14000153c:	mov    QWORD PTR [rdx+0x8],rax
   140001540:	call   QWORD PTR [rip+0xae7a]        # 0x14000c3c0
   140001546:	comisd xmm11,xmm6
   14000154b:	jbe    0x140001553
   14000154d:	comisd xmm7,xmm0
   140001551:	ja     0x140001559
   140001553:	comisd xmm6,xmm0
   140001557:	jbe    0x14000155f
   140001559:	movapd xmm6,xmm0
   14000155d:	mov    edi,ebx
   14000155f:	mov    rcx,QWORD PTR [rsi]
   140001562:	inc    ebx
   140001564:	mov    edx,DWORD PTR [rcx+0x4]
   140001567:	dec    edx
   140001569:	cmp    ebx,edx
   14000156b:	jl     0x1400014b0
   140001571:	movaps xmm11,XMMWORD PTR [rsp+0x60]
   140001577:	movaps xmm10,XMMWORD PTR [rsp+0x70]
   14000157d:	movaps xmm9,XMMWORD PTR [rsp+0x80]
   140001586:	movaps xmm8,XMMWORD PTR [rsp+0x90]
   14000158f:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   140001597:	lea    r11,[rsp+0xc0]
   14000159f:	mov    eax,edi
   1400015a1:	mov    rbx,QWORD PTR [r11+0x10]
   1400015a5:	mov    rbp,QWORD PTR [r11+0x18]
   1400015a9:	mov    rsi,QWORD PTR [r11+0x20]
   1400015ad:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400015b2:	mov    rsp,r11
   1400015b5:	pop    rdi
   1400015b6:	ret    
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	xorpd  xmm3,xmm3
   1400015c4:	movsd  xmm4,QWORD PTR [rip+0xc024]        # 0x14000d5f0
   1400015cc:	movapd xmm2,xmm0
   1400015d0:	comisd xmm1,xmm3
   1400015d4:	subsd  xmm2,xmm1
   1400015d8:	jae    0x1400015de
   1400015da:	xorpd  xmm1,xmm4
   1400015de:	comisd xmm0,xmm3
   1400015e2:	movsd  QWORD PTR [rsp+0x10],xmm1
   1400015e8:	jae    0x1400015ee
   1400015ea:	xorpd  xmm0,xmm4
   1400015ee:	comisd xmm2,xmm3
   1400015f2:	movsd  QWORD PTR [rsp+0x8],xmm0
   1400015f8:	jae    0x1400015fe
   1400015fa:	xorpd  xmm2,xmm4
   1400015fe:	comisd xmm1,xmm0
   140001602:	lea    rax,[rsp+0x8]
   140001607:	ja     0x14000160e
   140001609:	lea    rax,[rsp+0x10]
   14000160e:	mulsd  xmm2,QWORD PTR [rip+0xbfea]        # 0x14000d600
   140001616:	movsd  xmm0,QWORD PTR [rax]
   14000161a:	comisd xmm0,xmm2
   14000161e:	jb     0x140001623
   140001620:	mov    al,0x1
   140001622:	ret    
   140001623:	xor    al,al
   140001625:	ret    
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    QWORD PTR [rsp+0x10],rbx
   140001635:	mov    QWORD PTR [rsp+0x20],rsi
   14000163a:	push   rdi
   14000163b:	push   r12
   14000163d:	push   r13
   14000163f:	push   r14
   140001641:	push   r15
   140001643:	sub    rsp,0x50
   140001647:	mov    rsi,rdx
   14000164a:	mov    rdi,rcx
   14000164d:	lea    rdx,[rsp+0x90]
   140001655:	mov    rcx,rsi
   140001658:	call   QWORD PTR [rip+0xacda]        # 0x14000c338
   14000165e:	lea    rcx,[rsp+0x90]
   140001666:	mov    r8,QWORD PTR [rax]
   140001669:	cmp    DWORD PTR [r8+0x4],0x0
   14000166e:	sete   bl
   140001671:	call   QWORD PTR [rip+0xad69]        # 0x14000c3e0
   140001677:	test   bl,bl
   140001679:	je     0x1400016b0
   14000167b:	lea    rdx,[rip+0xbf12]        # 0x14000d594
   140001682:	lea    rcx,[rsp+0x90]
   14000168a:	mov    r8d,0x4
   140001690:	call   QWORD PTR [rip+0xacaa]        # 0x14000c340
   140001696:	mov    rcx,rsi
   140001699:	mov    rdx,rax
   14000169c:	call   QWORD PTR [rip+0xaca6]        # 0x14000c348
   1400016a2:	lea    rcx,[rsp+0x90]
   1400016aa:	call   QWORD PTR [rip+0xad30]        # 0x14000c3e0
   1400016b0:	lea    rdx,[rsp+0x90]
   1400016b8:	mov    rcx,rsi
   1400016bb:	mov    DWORD PTR [rsp+0x90],0x1a0
   1400016c6:	mov    DWORD PTR [rsp+0x94],0x2f
   1400016d1:	call   QWORD PTR [rip+0xbd11]        # 0x14000d3e8
   1400016d7:	lea    rcx,[rsp+0x80]
   1400016df:	mov    edx,0x1
   1400016e4:	mov    DWORD PTR [rsp+0x80],0x110000
   1400016ef:	call   QWORD PTR [rip+0xbcfb]        # 0x14000d3f0
   1400016f5:	lea    rcx,[rsp+0x80]
   1400016fd:	xor    edx,edx
   1400016ff:	call   QWORD PTR [rip+0xbcf3]        # 0x14000d3f8
   140001705:	lea    rcx,[rsp+0x80]
   14000170d:	xor    edx,edx
   14000170f:	call   QWORD PTR [rip+0xbceb]        # 0x14000d400
   140001715:	lea    rdx,[rsp+0x90]
   14000171d:	mov    rcx,rsi
   140001720:	call   QWORD PTR [rip+0xbce2]        # 0x14000d408
   140001726:	mov    edx,DWORD PTR [rsp+0x80]
   14000172d:	mov    ecx,DWORD PTR [rax]
   14000172f:	and    ecx,0xe0000000
   140001735:	xor    ecx,edx
   140001737:	and    ecx,0x20000000
   14000173d:	xor    edx,ecx
   14000173f:	mov    rcx,rsi
   140001742:	mov    DWORD PTR [rsp+0x80],edx
   140001749:	call   QWORD PTR [rip+0xbcc1]        # 0x14000d410
   14000174f:	mov    ecx,0x20
   140001754:	call   0x14000b106
   140001759:	mov    rbx,rax
   14000175c:	test   rax,rax
   14000175f:	je     0x140001784
   140001761:	mov    rdx,rsi
   140001764:	mov    rcx,rax
   140001767:	call   QWORD PTR [rip+0xbcab]        # 0x14000d418
   14000176d:	lea    r11,[rip+0xc864]        # 0x14000dfd8
   140001774:	lea    rax,[rip+0xc7cd]        # 0x14000df48
   14000177b:	mov    QWORD PTR [rbx],r11
   14000177e:	mov    QWORD PTR [rbx+0x10],rax
   140001782:	jmp    0x140001786
   140001784:	xor    ebx,ebx
   140001786:	lea    rdx,[rip+0xc7a3]        # 0x14000df30
   14000178d:	lea    rcx,[rsp+0x90]
   140001795:	mov    r8d,0xa
   14000179b:	mov    QWORD PTR [rdi],rbx
   14000179e:	call   QWORD PTR [rip+0xab9c]        # 0x14000c340
   1400017a4:	mov    rcx,QWORD PTR [rdi]
   1400017a7:	mov    rdx,rax
   1400017aa:	call   QWORD PTR [rip+0xab98]        # 0x14000c348
   1400017b0:	lea    rcx,[rsp+0x90]
   1400017b8:	call   QWORD PTR [rip+0xac22]        # 0x14000c3e0
   1400017be:	mov    ecx,0x30
   1400017c3:	call   0x14000b106
   1400017c8:	lea    r12,[rip+0xc5f9]        # 0x14000ddc8
   1400017cf:	lea    r13,[rip+0xc5b2]        # 0x14000dd88
   1400017d6:	mov    rbx,rax
   1400017d9:	test   rax,rax
   1400017dc:	je     0x1400017f6
   1400017de:	xor    r8d,r8d
   1400017e1:	mov    rdx,rsi
   1400017e4:	mov    rcx,rax
   1400017e7:	call   QWORD PTR [rip+0xbc33]        # 0x14000d420
   1400017ed:	mov    QWORD PTR [rbx],r12
   1400017f0:	mov    QWORD PTR [rbx+0x10],r13
   1400017f4:	jmp    0x1400017f8
   1400017f6:	xor    ebx,ebx
   1400017f8:	lea    rdx,[rip+0xc571]        # 0x14000dd70
   1400017ff:	lea    rcx,[rsp+0x90]
   140001807:	mov    r8d,0x5
   14000180d:	mov    QWORD PTR [rdi+0x8],rbx
   140001811:	call   QWORD PTR [rip+0xab29]        # 0x14000c340
   140001817:	mov    rcx,QWORD PTR [rdi+0x8]
   14000181b:	mov    rdx,rax
   14000181e:	call   QWORD PTR [rip+0xab24]        # 0x14000c348
   140001824:	lea    rcx,[rsp+0x90]
   14000182c:	call   QWORD PTR [rip+0xabae]        # 0x14000c3e0
   140001832:	lea    rcx,[rsp+0x40]
   140001837:	call   QWORD PTR [rip+0xacfb]        # 0x14000c538
   14000183d:	lea    rcx,[rsp+0x40]
   140001842:	mov    edx,0x4b
   140001847:	call   QWORD PTR [rip+0xacf3]        # 0x14000c540
   14000184d:	lea    rcx,[rsp+0x40]
   140001852:	mov    edx,0x4b
   140001857:	call   QWORD PTR [rip+0xace3]        # 0x14000c540
   14000185d:	mov    rcx,QWORD PTR [rdi+0x8]
   140001861:	lea    rdx,[rsp+0x40]
   140001866:	call   QWORD PTR [rip+0xbbbc]        # 0x14000d428
   14000186c:	mov    rdx,QWORD PTR [rdi+0x8]
   140001870:	mov    rcx,QWORD PTR [rdi]
   140001873:	mov    DWORD PTR [rsp+0x30],0x0
   14000187b:	xor    r9d,r9d
   14000187e:	xor    r8d,r8d
   140001881:	mov    DWORD PTR [rsp+0x28],0x1
   140001889:	mov    DWORD PTR [rsp+0x20],0x1
   140001891:	call   QWORD PTR [rip+0xbb99]        # 0x14000d430
   140001897:	mov    ecx,0x30
   14000189c:	call   0x14000b106
   1400018a1:	mov    rbx,rax
   1400018a4:	test   rax,rax
   1400018a7:	je     0x1400018cf
   1400018a9:	xor    r8d,r8d
   1400018ac:	mov    rdx,rsi
   1400018af:	mov    rcx,rax
   1400018b2:	call   QWORD PTR [rip+0xbb80]        # 0x14000d438
   1400018b8:	lea    r11,[rip+0xc349]        # 0x14000dc08
   1400018bf:	lea    rax,[rip+0xc302]        # 0x14000dbc8
   1400018c6:	mov    QWORD PTR [rbx],r11
   1400018c9:	mov    QWORD PTR [rbx+0x10],rax
   1400018cd:	jmp    0x1400018d1
   1400018cf:	xor    ebx,ebx
   1400018d1:	lea    rdx,[rip+0xc2e0]        # 0x14000dbb8
   1400018d8:	lea    rcx,[rsp+0x90]
   1400018e0:	mov    r8d,0x6
   1400018e6:	mov    QWORD PTR [rdi+0x10],rbx
   1400018ea:	call   QWORD PTR [rip+0xaa50]        # 0x14000c340
   1400018f0:	mov    rcx,QWORD PTR [rdi+0x10]
   1400018f4:	mov    rdx,rax
   1400018f7:	call   QWORD PTR [rip+0xaa4b]        # 0x14000c348
   1400018fd:	lea    rcx,[rsp+0x90]
   140001905:	call   QWORD PTR [rip+0xaad5]        # 0x14000c3e0
   14000190b:	mov    ecx,0x20
   140001910:	call   0x14000b106
   140001915:	mov    rbx,rax
   140001918:	test   rax,rax
   14000191b:	je     0x140001941
   14000191d:	mov    rdx,QWORD PTR [rdi+0x10]
   140001921:	mov    rcx,rax
   140001924:	call   QWORD PTR [rip+0xbb16]        # 0x14000d440
   14000192a:	lea    r11,[rip+0xc207]        # 0x14000db38
   140001931:	lea    rax,[rip+0xc170]        # 0x14000daa8
   140001938:	mov    QWORD PTR [rbx],r11
   14000193b:	mov    QWORD PTR [rbx+0x10],rax
   14000193f:	jmp    0x140001943
   140001941:	xor    ebx,ebx
   140001943:	mov    edx,0x4
   140001948:	mov    rcx,rbx
   14000194b:	mov    QWORD PTR [rdi+0x18],rbx
   14000194f:	call   QWORD PTR [rip+0xbaf3]        # 0x14000d448
   140001955:	mov    rcx,QWORD PTR [rdi+0x18]
   140001959:	mov    edx,0x2
   14000195e:	mov    r9d,edx
   140001961:	mov    r8d,edx
   140001964:	mov    DWORD PTR [rsp+0x20],0x2
   14000196c:	call   QWORD PTR [rip+0xbade]        # 0x14000d450
   140001972:	lea    rdx,[rip+0xc107]        # 0x14000da80
   140001979:	lea    rcx,[rsp+0x90]
   140001981:	mov    r8d,0x10
   140001987:	call   QWORD PTR [rip+0xa9b3]        # 0x14000c340
   14000198d:	mov    rcx,QWORD PTR [rdi+0x18]
   140001991:	mov    rdx,rax
   140001994:	call   QWORD PTR [rip+0xa9ae]        # 0x14000c348
   14000199a:	lea    rcx,[rsp+0x90]
   1400019a2:	call   QWORD PTR [rip+0xaa38]        # 0x14000c3e0
   1400019a8:	mov    ecx,0x30
   1400019ad:	call   0x14000b106
   1400019b2:	mov    rbx,rax
   1400019b5:	test   rax,rax
   1400019b8:	je     0x1400019d3
   1400019ba:	mov    rdx,QWORD PTR [rdi+0x10]
   1400019be:	xor    r8d,r8d
   1400019c1:	mov    rcx,rax
   1400019c4:	call   QWORD PTR [rip+0xba56]        # 0x14000d420
   1400019ca:	mov    QWORD PTR [rbx],r12
   1400019cd:	mov    QWORD PTR [rbx+0x10],r13
   1400019d1:	jmp    0x1400019d5
   1400019d3:	xor    ebx,ebx
   1400019d5:	lea    rdx,[rip+0xc09c]        # 0x14000da78
   1400019dc:	lea    rcx,[rsp+0x90]
   1400019e4:	mov    r8d,0x7
   1400019ea:	mov    QWORD PTR [rdi+0x20],rbx
   1400019ee:	call   QWORD PTR [rip+0xa94c]        # 0x14000c340
   1400019f4:	mov    rcx,QWORD PTR [rdi+0x20]
   1400019f8:	mov    rdx,rax
   1400019fb:	call   QWORD PTR [rip+0xa947]        # 0x14000c348
   140001a01:	lea    rcx,[rsp+0x90]
   140001a09:	call   QWORD PTR [rip+0xa9d1]        # 0x14000c3e0
   140001a0f:	mov    rdx,QWORD PTR [rdi+0x20]
   140001a13:	mov    rcx,QWORD PTR [rdi+0x18]
   140001a17:	xor    r9d,r9d
   140001a1a:	xor    r8d,r8d
   140001a1d:	call   QWORD PTR [rip+0xba35]        # 0x14000d458
   140001a23:	mov    ecx,0x30
   140001a28:	call   0x14000b106
   140001a2d:	lea    r14,[rip+0xbea4]        # 0x14000d8d8
   140001a34:	lea    r15,[rip+0xbe5d]        # 0x14000d898
   140001a3b:	mov    rbx,rax
   140001a3e:	test   rax,rax
   140001a41:	je     0x140001a59
   140001a43:	mov    rdx,QWORD PTR [rdi+0x10]
   140001a47:	mov    rcx,rax
   140001a4a:	call   QWORD PTR [rip+0xba10]        # 0x14000d460
   140001a50:	mov    QWORD PTR [rbx],r14
   140001a53:	mov    QWORD PTR [rbx+0x10],r15
   140001a57:	jmp    0x140001a5b
   140001a59:	xor    ebx,ebx
   140001a5b:	lea    rdx,[rip+0xbe26]        # 0x14000d888
   140001a62:	lea    rcx,[rsp+0x90]
   140001a6a:	mov    r8d,0x4
   140001a70:	mov    QWORD PTR [rdi+0x28],rbx
   140001a74:	call   QWORD PTR [rip+0xa8c6]        # 0x14000c340
   140001a7a:	mov    rcx,QWORD PTR [rdi+0x28]
   140001a7e:	mov    rdx,rax
   140001a81:	call   QWORD PTR [rip+0xa8c1]        # 0x14000c348
   140001a87:	lea    rcx,[rsp+0x90]
   140001a8f:	call   QWORD PTR [rip+0xa94b]        # 0x14000c3e0
   140001a95:	mov    rcx,QWORD PTR [rdi+0x28]
   140001a99:	mov    edx,0x4
   140001a9e:	call   QWORD PTR [rip+0xb9c4]        # 0x14000d468
   140001aa4:	mov    rcx,QWORD PTR [rdi+0x28]
   140001aa8:	movsd  xmm1,QWORD PTR [rip+0xbdd0]        # 0x14000d880
   140001ab0:	call   QWORD PTR [rip+0xb9ba]        # 0x14000d470
   140001ab6:	mov    rdx,QWORD PTR [rdi+0x28]
   140001aba:	mov    rcx,QWORD PTR [rdi+0x18]
   140001abe:	xor    r9d,r9d
   140001ac1:	xor    r8d,r8d
   140001ac4:	call   QWORD PTR [rip+0xb98e]        # 0x14000d458
   140001aca:	mov    ecx,0x30
   140001acf:	call   0x14000b106
   140001ad4:	mov    rbx,rax
   140001ad7:	test   rax,rax
   140001ada:	je     0x140001af5
   140001adc:	mov    rdx,QWORD PTR [rdi+0x10]
   140001ae0:	xor    r8d,r8d
   140001ae3:	mov    rcx,rax
   140001ae6:	call   QWORD PTR [rip+0xb934]        # 0x14000d420
   140001aec:	mov    QWORD PTR [rbx],r12
   140001aef:	mov    QWORD PTR [rbx+0x10],r13
   140001af3:	jmp    0x140001af7
   140001af5:	xor    ebx,ebx
   140001af7:	lea    rdx,[rip+0xbd7a]        # 0x14000d878
   140001afe:	lea    rcx,[rsp+0x90]
   140001b06:	mov    r8d,0x7
   140001b0c:	mov    QWORD PTR [rdi+0x30],rbx
   140001b10:	call   QWORD PTR [rip+0xa82a]        # 0x14000c340
   140001b16:	mov    rcx,QWORD PTR [rdi+0x30]
   140001b1a:	mov    rdx,rax
   140001b1d:	call   QWORD PTR [rip+0xa825]        # 0x14000c348
   140001b23:	lea    rcx,[rsp+0x90]
   140001b2b:	call   QWORD PTR [rip+0xa8af]        # 0x14000c3e0
   140001b31:	mov    rdx,QWORD PTR [rdi+0x30]
   140001b35:	mov    rcx,QWORD PTR [rdi+0x18]
   140001b39:	xor    r9d,r9d
   140001b3c:	xor    r8d,r8d
   140001b3f:	call   QWORD PTR [rip+0xb913]        # 0x14000d458
   140001b45:	mov    ecx,0x30
   140001b4a:	call   0x14000b106
   140001b4f:	mov    rbx,rax
   140001b52:	test   rax,rax
   140001b55:	je     0x140001b6d
   140001b57:	mov    rdx,QWORD PTR [rdi+0x10]
   140001b5b:	mov    rcx,rax
   140001b5e:	call   QWORD PTR [rip+0xb8fc]        # 0x14000d460
   140001b64:	mov    QWORD PTR [rbx],r14
   140001b67:	mov    QWORD PTR [rbx+0x10],r15
   140001b6b:	jmp    0x140001b6f
   140001b6d:	xor    ebx,ebx
   140001b6f:	lea    rdx,[rip+0xbcfa]        # 0x14000d870
   140001b76:	lea    rcx,[rsp+0x90]
   140001b7e:	mov    r8d,0x4
   140001b84:	mov    QWORD PTR [rdi+0x38],rbx
   140001b88:	call   QWORD PTR [rip+0xa7b2]        # 0x14000c340
   140001b8e:	mov    rcx,QWORD PTR [rdi+0x38]
   140001b92:	mov    rdx,rax
   140001b95:	call   QWORD PTR [rip+0xa7ad]        # 0x14000c348
   140001b9b:	lea    rcx,[rsp+0x90]
   140001ba3:	call   QWORD PTR [rip+0xa837]        # 0x14000c3e0
   140001ba9:	mov    rcx,QWORD PTR [rdi+0x38]
   140001bad:	mov    edx,0x4
   140001bb2:	call   QWORD PTR [rip+0xb8b0]        # 0x14000d468
   140001bb8:	mov    rcx,QWORD PTR [rdi+0x38]
   140001bbc:	movsd  xmm1,QWORD PTR [rip+0xbca4]        # 0x14000d868
   140001bc4:	call   QWORD PTR [rip+0xb8ae]        # 0x14000d478
   140001bca:	mov    rcx,QWORD PTR [rdi+0x38]
   140001bce:	movsd  xmm1,QWORD PTR [rip+0xb9ea]        # 0x14000d5c0
   140001bd6:	call   QWORD PTR [rip+0xb8a4]        # 0x14000d480
   140001bdc:	mov    rcx,QWORD PTR [rdi+0x38]
   140001be0:	movsd  xmm1,QWORD PTR [rip+0xbc98]        # 0x14000d880
   140001be8:	call   QWORD PTR [rip+0xb882]        # 0x14000d470
   140001bee:	mov    rdx,QWORD PTR [rdi+0x38]
   140001bf2:	mov    rcx,QWORD PTR [rdi+0x18]
   140001bf6:	xor    r9d,r9d
   140001bf9:	xor    r8d,r8d
   140001bfc:	call   QWORD PTR [rip+0xb856]        # 0x14000d458
   140001c02:	mov    rdx,QWORD PTR [rdi+0x10]
   140001c06:	mov    rcx,QWORD PTR [rdi]
   140001c09:	mov    DWORD PTR [rsp+0x30],0x0
   140001c11:	mov    r9d,0x1
   140001c17:	xor    r8d,r8d
   140001c1a:	mov    DWORD PTR [rsp+0x28],0x1
   140001c22:	mov    DWORD PTR [rsp+0x20],0x1
   140001c2a:	call   QWORD PTR [rip+0xb800]        # 0x14000d430
   140001c30:	mov    ecx,0x30
   140001c35:	call   0x14000b106
   140001c3a:	mov    rbx,rax
   140001c3d:	test   rax,rax
   140001c40:	je     0x140001c65
   140001c42:	mov    rdx,rsi
   140001c45:	mov    rcx,rax
   140001c48:	call   QWORD PTR [rip+0xb83a]        # 0x14000d488
   140001c4e:	lea    r11,[rip+0xba93]        # 0x14000d6e8
   140001c55:	lea    rax,[rip+0xba4c]        # 0x14000d6a8
   140001c5c:	mov    QWORD PTR [rbx],r11
   140001c5f:	mov    QWORD PTR [rbx+0x10],rax
   140001c63:	jmp    0x140001c67
   140001c65:	xor    ebx,ebx
   140001c67:	lea    rdx,[rip+0xb912]        # 0x14000d580
   140001c6e:	lea    rcx,[rsp+0x90]
   140001c76:	mov    r8d,0x6
   140001c7c:	mov    QWORD PTR [rdi+0x40],rbx
   140001c80:	call   QWORD PTR [rip+0xa6ba]        # 0x14000c340
   140001c86:	mov    rcx,QWORD PTR [rdi+0x40]
   140001c8a:	mov    rdx,rax
   140001c8d:	call   QWORD PTR [rip+0xa6b5]        # 0x14000c348
   140001c93:	lea    rcx,[rsp+0x90]
   140001c9b:	call   QWORD PTR [rip+0xa73f]        # 0x14000c3e0
   140001ca1:	mov    rdx,QWORD PTR [rdi+0x40]
   140001ca5:	mov    rcx,QWORD PTR [rdi]
   140001ca8:	mov    DWORD PTR [rsp+0x30],0x0
   140001cb0:	mov    r9d,0x2
   140001cb6:	xor    r8d,r8d
   140001cb9:	mov    DWORD PTR [rsp+0x28],0x1
   140001cc1:	mov    DWORD PTR [rsp+0x20],0x1
   140001cc9:	call   QWORD PTR [rip+0xb761]        # 0x14000d430
   140001ccf:	mov    ecx,0x30
   140001cd4:	call   0x14000b106
   140001cd9:	mov    rbx,rax
   140001cdc:	test   rax,rax
   140001cdf:	je     0x140001d0b
   140001ce1:	mov    edx,0x63
   140001ce6:	mov    rcx,rax
   140001ce9:	mov    DWORD PTR [rsp+0x20],0x1
   140001cf1:	lea    r9d,[rdx-0x5c]
   140001cf5:	lea    r8d,[rdx-0x59]
   140001cf9:	call   QWORD PTR [rip+0xb791]        # 0x14000d490
   140001cff:	lea    r11,[rip+0xb912]        # 0x14000d618
   140001d06:	mov    QWORD PTR [rbx],r11
   140001d09:	jmp    0x140001d0d
   140001d0b:	xor    ebx,ebx
   140001d0d:	mov    rcx,QWORD PTR [rdi]
   140001d10:	mov    DWORD PTR [rsp+0x30],0x80
   140001d18:	mov    r9d,0x3
   140001d1e:	xor    r8d,r8d
   140001d21:	mov    rdx,rbx
   140001d24:	mov    DWORD PTR [rsp+0x28],0x1
   140001d2c:	mov    QWORD PTR [rdi+0x48],rbx
   140001d30:	mov    DWORD PTR [rsp+0x20],0x1
   140001d38:	call   QWORD PTR [rip+0xb75a]        # 0x14000d498
   140001d3e:	mov    rdx,rsi
   140001d41:	mov    rcx,rdi
   140001d44:	call   0x140001080
   140001d49:	mov    rcx,rsi
   140001d4c:	call   QWORD PTR [rip+0xa5fe]        # 0x14000c350
   140001d52:	lea    rcx,[rsp+0x40]
   140001d57:	call   QWORD PTR [rip+0xa7eb]        # 0x14000c548
   140001d5d:	lea    r11,[rsp+0x50]
   140001d62:	mov    rbx,QWORD PTR [r11+0x38]
   140001d66:	mov    rsi,QWORD PTR [r11+0x48]
   140001d6a:	mov    rsp,r11
   140001d6d:	pop    r15
   140001d6f:	pop    r14
   140001d71:	pop    r13
   140001d73:	pop    r12
   140001d75:	pop    rdi
   140001d76:	ret    
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	mov    QWORD PTR [rsp+0x8],rbx
   140001d85:	push   rdi
   140001d86:	sub    rsp,0x20
   140001d8a:	mov    ebx,edx
   140001d8c:	mov    rdi,rcx
   140001d8f:	call   QWORD PTR [rip+0xa8a3]        # 0x14000c638
   140001d95:	test   bl,0x1
   140001d98:	je     0x140001da2
   140001d9a:	mov    rcx,rdi
   140001d9d:	call   0x14000b100
   140001da2:	mov    rax,rdi
   140001da5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001daa:	add    rsp,0x20
   140001dae:	pop    rdi
   140001daf:	ret    
   140001db0:	mov    QWORD PTR [rsp+0x8],rbx
   140001db5:	push   rdi
   140001db6:	sub    rsp,0x20
   140001dba:	mov    ebx,edx
   140001dbc:	mov    rdi,rcx
   140001dbf:	call   QWORD PTR [rip+0xa87b]        # 0x14000c640
   140001dc5:	test   bl,0x1
   140001dc8:	je     0x140001dd2
   140001dca:	mov    rcx,rdi
   140001dcd:	call   0x14000b100
   140001dd2:	mov    rax,rdi
   140001dd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001dda:	add    rsp,0x20
   140001dde:	pop    rdi
   140001ddf:	ret    
   140001de0:	mov    QWORD PTR [rsp+0x8],rbx
   140001de5:	push   rdi
   140001de6:	sub    rsp,0x20
   140001dea:	mov    ebx,edx
   140001dec:	mov    rdi,rcx
   140001def:	call   QWORD PTR [rip+0xa853]        # 0x14000c648
   140001df5:	test   bl,0x1
   140001df8:	je     0x140001e02
   140001dfa:	mov    rcx,rdi
   140001dfd:	call   0x14000b100
   140001e02:	mov    rax,rdi
   140001e05:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e0a:	add    rsp,0x20
   140001e0e:	pop    rdi
   140001e0f:	ret    
   140001e10:	mov    QWORD PTR [rsp+0x8],rbx
   140001e15:	push   rdi
   140001e16:	sub    rsp,0x20
   140001e1a:	mov    ebx,edx
   140001e1c:	mov    rdi,rcx
   140001e1f:	call   QWORD PTR [rip+0xa82b]        # 0x14000c650
   140001e25:	test   bl,0x1
   140001e28:	je     0x140001e32
   140001e2a:	mov    rcx,rdi
   140001e2d:	call   0x14000b100
   140001e32:	mov    rax,rdi
   140001e35:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e3a:	add    rsp,0x20
   140001e3e:	pop    rdi
   140001e3f:	ret    
   140001e40:	mov    QWORD PTR [rsp+0x8],rbx
   140001e45:	push   rdi
   140001e46:	sub    rsp,0x20
   140001e4a:	mov    ebx,edx
   140001e4c:	mov    rdi,rcx
   140001e4f:	call   QWORD PTR [rip+0xa803]        # 0x14000c658
   140001e55:	test   bl,0x1
   140001e58:	je     0x140001e62
   140001e5a:	mov    rcx,rdi
   140001e5d:	call   0x14000b100
   140001e62:	mov    rax,rdi
   140001e65:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e6a:	add    rsp,0x20
   140001e6e:	pop    rdi
   140001e6f:	ret    
   140001e70:	mov    QWORD PTR [rsp+0x8],rbx
   140001e75:	push   rdi
   140001e76:	sub    rsp,0x20
   140001e7a:	mov    ebx,edx
   140001e7c:	mov    rdi,rcx
   140001e7f:	call   QWORD PTR [rip+0xa7db]        # 0x14000c660
   140001e85:	test   bl,0x1
   140001e88:	je     0x140001e92
   140001e8a:	mov    rcx,rdi
   140001e8d:	call   0x14000b100
   140001e92:	mov    rax,rdi
   140001e95:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e9a:	add    rsp,0x20
   140001e9e:	pop    rdi
   140001e9f:	ret    
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	push   rdi
   140001ea6:	sub    rsp,0x20
   140001eaa:	mov    ebx,edx
   140001eac:	mov    rdi,rcx
   140001eaf:	call   QWORD PTR [rip+0xa7b3]        # 0x14000c668
   140001eb5:	test   bl,0x1
   140001eb8:	je     0x140001ec2
   140001eba:	mov    rcx,rdi
   140001ebd:	call   0x14000b100
   140001ec2:	mov    rax,rdi
   140001ec5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001eca:	add    rsp,0x20
   140001ece:	pop    rdi
   140001ecf:	ret    
   140001ed0:	sub    rcx,0x10
   140001ed4:	jmp    0x140001db0
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	sub    rcx,0x10
   140001ee4:	jmp    0x140001e40
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	sub    rcx,0x10
   140001ef4:	jmp    0x140001de0
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	sub    rcx,0x10
   140001f04:	jmp    0x140001e10
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	sub    rcx,0x10
   140001f14:	jmp    0x140001e70
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	sub    rcx,0x10
   140001f24:	jmp    0x140001ea0
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    QWORD PTR [rsp+0x8],rbx
   140001f35:	push   rdi
   140001f36:	sub    rsp,0x20
   140001f3a:	cmp    DWORD PTR [rdx+0x50],0x1
   140001f3e:	mov    rbx,rdx
   140001f41:	mov    rdi,rcx
   140001f44:	jne    0x140001f90
   140001f46:	lea    rdx,[rsp+0x38]
   140001f4b:	mov    rcx,rbx
   140001f4e:	call   QWORD PTR [rip+0xa5dc]        # 0x14000c530
   140001f54:	mov    rcx,rdi
   140001f57:	mov    rdx,rax
   140001f5a:	call   0x140001420
   140001f5f:	mov    DWORD PTR [rdi+0x4c],eax
   140001f62:	cmp    eax,0xffffffff
   140001f65:	je     0x140001f76
   140001f67:	mov    rax,QWORD PTR [rdi]
   140001f6a:	mov    rdx,rbx
   140001f6d:	mov    rcx,rdi
   140001f70:	call   QWORD PTR [rax+0x98]
   140001f76:	lea    rdx,[rsp+0x38]
   140001f7b:	mov    rcx,rbx
   140001f7e:	call   QWORD PTR [rip+0xa5ac]        # 0x14000c530
   140001f84:	mov    rcx,QWORD PTR [rax]
   140001f87:	mov    QWORD PTR [rdi+0x54],rcx
   140001f8b:	or     WORD PTR [rbx+0x12],0x4
   140001f90:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f95:	add    rsp,0x20
   140001f99:	pop    rdi
   140001f9a:	ret    
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	sub    rsp,0x38
   140001fa4:	movsd  xmm5,QWORD PTR [rip+0xb644]        # 0x14000d5f0
   140001fac:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140001fb1:	xorpd  xmm6,xmm6
   140001fb5:	comisd xmm0,xmm6
   140001fb9:	movapd xmm4,xmm1
   140001fbd:	movsd  xmm1,QWORD PTR [rip+0xc09b]        # 0x14000e060
   140001fc5:	movapd xmm3,xmm0
   140001fc9:	movsd  QWORD PTR [rsp+0x50],xmm1
   140001fcf:	movapd xmm2,xmm0
   140001fd3:	subsd  xmm3,xmm1
   140001fd7:	jb     0x140001fe1
   140001fd9:	movsd  QWORD PTR [rsp+0x40],xmm0
   140001fdf:	jmp    0x140001feb
   140001fe1:	xorpd  xmm0,xmm5
   140001fe5:	movsd  QWORD PTR [rsp+0x40],xmm0
   140001feb:	comisd xmm3,xmm6
   140001fef:	jae    0x140001ff5
   140001ff1:	xorpd  xmm3,xmm5
   140001ff5:	comisd xmm1,xmm0
   140001ff9:	lea    rax,[rsp+0x40]
   140001ffe:	ja     0x140002005
   140002000:	lea    rax,[rsp+0x50]
   140002005:	mulsd  xmm3,QWORD PTR [rip+0xb5f3]        # 0x14000d600
   14000200d:	movsd  xmm0,QWORD PTR [rax]
   140002011:	comisd xmm0,xmm3
   140002015:	jb     0x140002023
   140002017:	mov    al,0x1
   140002019:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000201e:	add    rsp,0x38
   140002022:	ret    
   140002023:	movsd  xmm3,QWORD PTR [rip+0xc02d]        # 0x14000e058
   14000202b:	movsd  xmm5,QWORD PTR [rip+0xb545]        # 0x14000d578
   140002033:	mulsd  xmm2,xmm3
   140002037:	comisd xmm2,xmm6
   14000203b:	jb     0x140002047
   14000203d:	addsd  xmm2,xmm5
   140002041:	cvttsd2si edx,xmm2
   140002045:	jmp    0x14000206d
   140002047:	movapd xmm0,xmm2
   14000204b:	subsd  xmm0,QWORD PTR [rip+0xb51d]        # 0x14000d570
   140002053:	cvttsd2si eax,xmm0
   140002057:	movd   xmm1,eax
   14000205b:	cvtdq2pd xmm1,xmm1
   14000205f:	subsd  xmm2,xmm1
   140002063:	addsd  xmm2,xmm5
   140002067:	cvttsd2si edx,xmm2
   14000206b:	add    edx,eax
   14000206d:	mulsd  xmm4,xmm3
   140002071:	comisd xmm4,xmm6
   140002075:	jb     0x140002081
   140002077:	addsd  xmm4,xmm5
   14000207b:	cvttsd2si ecx,xmm4
   14000207f:	jmp    0x1400020a7
   140002081:	movapd xmm0,xmm4
   140002085:	subsd  xmm0,QWORD PTR [rip+0xb4e3]        # 0x14000d570
   14000208d:	cvttsd2si eax,xmm0
   140002091:	movd   xmm1,eax
   140002095:	cvtdq2pd xmm1,xmm1
   140002099:	subsd  xmm4,xmm1
   14000209d:	addsd  xmm4,xmm5
   1400020a1:	cvttsd2si ecx,xmm4
   1400020a5:	add    ecx,eax
   1400020a7:	movd   xmm1,ecx
   1400020ab:	movd   xmm0,edx
   1400020af:	cvtdq2pd xmm1,xmm1
   1400020b3:	cvtdq2pd xmm0,xmm0
   1400020b7:	divsd  xmm1,xmm3
   1400020bb:	divsd  xmm0,xmm3
   1400020bf:	call   0x1400015c0
   1400020c4:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400020c9:	test   al,al
   1400020cb:	setne  al
   1400020ce:	add    rsp,0x38
   1400020d2:	ret    
   1400020d3:	int3   
   1400020d4:	int3   
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	rex push rdi
   1400020e2:	sub    rsp,0x90
   1400020e9:	mov    edi,edx
   1400020eb:	test   edx,edx
   1400020ed:	jne    0x1400020fa
   1400020ef:	xor    al,al
   1400020f1:	add    rsp,0x90
   1400020f8:	pop    rdi
   1400020f9:	ret    
   1400020fa:	mov    QWORD PTR [rsp+0xa0],rbx
   140002102:	lea    rbx,[rcx+0x38]
   140002106:	movaps XMMWORD PTR [rsp+0x80],xmm6
   14000210e:	mov    rcx,rbx
   140002111:	movaps XMMWORD PTR [rsp+0x70],xmm7
   140002116:	call   QWORD PTR [rip+0xa29c]        # 0x14000c3b8
   14000211c:	lea    rcx,[rsp+0x50]
   140002121:	mov    rdx,QWORD PTR [rax]
   140002124:	mov    rax,QWORD PTR [rax+0x8]
   140002128:	mov    QWORD PTR [rcx],rdx
   14000212b:	mov    QWORD PTR [rcx+0x8],rax
   14000212f:	lea    edx,[rdi-0x1]
   140002132:	mov    rcx,rbx
   140002135:	call   QWORD PTR [rip+0xa27d]        # 0x14000c3b8
   14000213b:	lea    rcx,[rsp+0x60]
   140002140:	mov    rdx,QWORD PTR [rax]
   140002143:	mov    rax,QWORD PTR [rax+0x8]
   140002147:	mov    QWORD PTR [rcx],rdx
   14000214a:	mov    QWORD PTR [rcx+0x8],rax
   14000214e:	lea    edx,[rdi+0x1]
   140002151:	mov    rcx,rbx
   140002154:	call   QWORD PTR [rip+0xa25e]        # 0x14000c3b8
   14000215a:	lea    rdx,[rsp+0x40]
   14000215f:	mov    rcx,QWORD PTR [rax]
   140002162:	mov    rax,QWORD PTR [rax+0x8]
   140002166:	movsd  xmm7,QWORD PTR [rsp+0x50]
   14000216c:	movsd  xmm6,QWORD PTR [rsp+0x58]
   140002172:	mov    QWORD PTR [rdx],rcx
   140002175:	mov    QWORD PTR [rdx+0x8],rax
   140002179:	lea    rcx,[rsp+0x20]
   14000217e:	movsd  xmm1,QWORD PTR [rsp+0x48]
   140002184:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14000218a:	subsd  xmm0,xmm7
   14000218e:	subsd  xmm1,xmm6
   140002192:	movsd  QWORD PTR [rsp+0x20],xmm0
   140002198:	movsd  QWORD PTR [rsp+0x28],xmm1
   14000219e:	call   QWORD PTR [rip+0xa154]        # 0x14000c2f8
   1400021a4:	lea    rcx,[rsp+0x30]
   1400021a9:	movsd  xmm1,QWORD PTR [rsp+0x20]
   1400021af:	movsd  xmm2,QWORD PTR [rsp+0x28]
   1400021b5:	subsd  xmm7,QWORD PTR [rsp+0x60]
   1400021bb:	divsd  xmm1,xmm0
   1400021bf:	divsd  xmm2,xmm0
   1400021c3:	subsd  xmm6,QWORD PTR [rsp+0x68]
   1400021c9:	movsd  QWORD PTR [rsp+0x30],xmm7
   1400021cf:	movsd  QWORD PTR [rsp+0x50],xmm1
   1400021d5:	movsd  QWORD PTR [rsp+0x58],xmm2
   1400021db:	movsd  QWORD PTR [rsp+0x38],xmm6
   1400021e1:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   1400021e6:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400021ec:	call   QWORD PTR [rip+0xa106]        # 0x14000c2f8
   1400021f2:	movsd  xmm1,QWORD PTR [rsp+0x30]
   1400021f8:	movsd  xmm6,QWORD PTR [rsp+0x38]
   1400021fe:	divsd  xmm1,xmm0
   140002202:	divsd  xmm6,xmm0
   140002206:	movsd  QWORD PTR [rsp+0x60],xmm1
   14000220c:	movsd  QWORD PTR [rsp+0x68],xmm6
   140002212:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140002217:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000221d:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140002223:	call   0x140001fa0
   140002228:	movaps xmm7,XMMWORD PTR [rsp+0x70]
   14000222d:	mov    rbx,QWORD PTR [rsp+0xa0]
   140002235:	test   al,al
   140002237:	je     0x140002262
   140002239:	movsd  xmm0,QWORD PTR [rsp+0x28]
   14000223f:	movapd xmm1,xmm6
   140002243:	call   0x140001fa0
   140002248:	test   al,al
   14000224a:	je     0x140002262
   14000224c:	mov    eax,0x1
   140002251:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   140002259:	add    rsp,0x90
   140002260:	pop    rdi
   140002261:	ret    
   140002262:	xor    eax,eax
   140002264:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   14000226c:	add    rsp,0x90
   140002273:	pop    rdi
   140002274:	ret    
   140002275:	int3   
   140002276:	int3   
   140002277:	int3   
   140002278:	int3   
   140002279:	int3   
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	test   rdx,rdx
   140002283:	je     0x1400022c8
   140002285:	mov    QWORD PTR [rsp+0x8],rbx
   14000228a:	push   rdi
   14000228b:	sub    rsp,0x20
   14000228f:	mov    eax,DWORD PTR [rcx+0x8]
   140002292:	mov    rbx,rdx
   140002295:	mov    QWORD PTR [rdx],0x0
   14000229c:	mov    DWORD PTR [rdx+0x8],eax
   14000229f:	lea    rdx,[rcx+0x10]
   1400022a3:	mov    rdi,rcx
   1400022a6:	lea    rcx,[rbx+0x10]
   1400022aa:	call   QWORD PTR [rip+0x9ea0]        # 0x14000c150
   1400022b0:	lea    rdx,[rdi+0x18]
   1400022b4:	lea    rcx,[rbx+0x18]
   1400022b8:	call   QWORD PTR [rip+0xa0a2]        # 0x14000c360
   1400022be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022c3:	add    rsp,0x20
   1400022c7:	pop    rdi
   1400022c8:	repz ret 
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x10],rbp
   1400022d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400022da:	push   rdi
   1400022db:	sub    rsp,0x20
   1400022df:	mov    esi,r8d
   1400022e2:	mov    r8,QWORD PTR [rcx]
   1400022e5:	mov    rdi,rcx
   1400022e8:	mov    ecx,DWORD PTR [r8+0x20]
   1400022ec:	mov    rbp,rdx
   1400022ef:	test   ecx,ecx
   1400022f1:	je     0x140002349
   1400022f3:	xor    edx,edx
   1400022f5:	mov    eax,esi
   1400022f7:	mov    QWORD PTR [rsp+0x30],rbx
   1400022fc:	div    ecx
   1400022fe:	mov    rax,QWORD PTR [r8+0x8]
   140002302:	lea    rbx,[rax+rdx*8]
   140002306:	mov    rax,QWORD PTR [rax+rdx*8]
   14000230a:	cmp    rax,r8
   14000230d:	je     0x140002331
   14000230f:	nop
   140002310:	cmp    esi,DWORD PTR [rax+0x8]
   140002313:	jne    0x140002326
   140002315:	lea    rdx,[rax+0x10]
   140002319:	mov    rcx,rbp
   14000231c:	call   QWORD PTR [rip+0xa036]        # 0x14000c358
   140002322:	test   al,al
   140002324:	jne    0x140002331
   140002326:	mov    rbx,QWORD PTR [rbx]
   140002329:	mov    rax,QWORD PTR [rbx]
   14000232c:	cmp    rax,QWORD PTR [rdi]
   14000232f:	jne    0x140002310
   140002331:	mov    rax,rbx
   140002334:	mov    rbx,QWORD PTR [rsp+0x30]
   140002339:	mov    rbp,QWORD PTR [rsp+0x38]
   14000233e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002343:	add    rsp,0x20
   140002347:	pop    rdi
   140002348:	ret    
   140002349:	mov    rbp,QWORD PTR [rsp+0x38]
   14000234e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002353:	mov    rax,rdi
   140002356:	add    rsp,0x20
   14000235a:	pop    rdi
   14000235b:	ret    
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	rex push rbx
   140002362:	push   rsi
   140002363:	push   rdi
   140002364:	sub    rsp,0x80
   14000236b:	mov    rbx,rcx
   14000236e:	or     rcx,0xffffffffffffffff
   140002372:	mov    rsi,rdx
   140002375:	lea    rdx,[rip+0xbcec]        # 0x14000e068
   14000237c:	xor    eax,eax
   14000237e:	movaps XMMWORD PTR [rsp+0x70],xmm6
   140002383:	movaps XMMWORD PTR [rsp+0x60],xmm7
   140002388:	mov    QWORD PTR [rsp+0x38],rdx
   14000238d:	mov    rdi,rdx
   140002390:	lea    rdx,[rsp+0x30]
   140002395:	repnz scas al,BYTE PTR es:[rdi]
   140002397:	not    rcx
   14000239a:	dec    rcx
   14000239d:	mov    DWORD PTR [rsp+0x30],ecx
   1400023a1:	mov    rcx,rsi
   1400023a4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400023a9:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400023af:	call   QWORD PTR [rip+0x9f13]        # 0x14000c2c8
   1400023b5:	lea    rdx,[rbx+0x38]
   1400023b9:	lea    rcx,[rsp+0x40]
   1400023be:	call   QWORD PTR [rip+0x9fbc]        # 0x14000c380
   1400023c4:	lea    rcx,[rsp+0x40]
   1400023c9:	mov    DWORD PTR [rsp+0x48],0x0
   1400023d1:	call   QWORD PTR [rip+0x9fb1]        # 0x14000c388
   1400023d7:	lea    rcx,[rsp+0x40]
   1400023dc:	mov    QWORD PTR [rsp+0x50],rax
   1400023e1:	call   QWORD PTR [rip+0x9fa9]        # 0x14000c390
   1400023e7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400023ec:	mov    edx,DWORD PTR [rsp+0x48]
   1400023f0:	mov    QWORD PTR [rsp+0x58],rax
   1400023f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002400:	mov    ecx,edx
   140002402:	inc    edx
   140002404:	mov    DWORD PTR [rsp+0x48],edx
   140002408:	test   ecx,ecx
   14000240a:	jne    0x140002566
   140002410:	cmp    rbx,rax
   140002413:	je     0x140002566
   140002419:	nop    DWORD PTR [rax+0x0]
   140002420:	test   edx,edx
   140002422:	je     0x14000254e
   140002428:	movsd  xmm7,QWORD PTR [rbx+0x8]
   14000242d:	movsd  xmm6,QWORD PTR [rbx]
   140002431:	lea    rcx,[rsp+0xa0]
   140002439:	mov    dl,0x2c
   14000243b:	call   QWORD PTR [rip+0x9e8f]        # 0x14000c2d0
   140002441:	lea    rcx,[rsp+0x28]
   140002446:	mov    r9d,0x2
   14000244c:	movapd xmm1,xmm6
   140002450:	movzx  edi,WORD PTR [rax]
   140002453:	mov    r8b,0x67
   140002456:	call   QWORD PTR [rip+0x9e7c]        # 0x14000c2d8
   14000245c:	lea    rcx,[rsp+0x20]
   140002461:	mov    rdx,rax
   140002464:	call   QWORD PTR [rip+0x9ce6]        # 0x14000c150
   14000246a:	lea    rcx,[rsp+0x20]
   14000246f:	movzx  edx,di
   140002472:	call   QWORD PTR [rip+0x9ce8]        # 0x14000c160
   140002478:	lea    rcx,[rsp+0x30]
   14000247d:	mov    r9d,0x3
   140002483:	movapd xmm1,xmm7
   140002487:	mov    r8b,0x67
   14000248a:	call   QWORD PTR [rip+0x9e48]        # 0x14000c2d8
   140002490:	lea    rdx,[rsp+0x20]
   140002495:	lea    rcx,[rsp+0xb8]
   14000249d:	mov    rdi,rax
   1400024a0:	call   QWORD PTR [rip+0x9caa]        # 0x14000c150
   1400024a6:	lea    rcx,[rsp+0xb8]
   1400024ae:	mov    rdx,rdi
   1400024b1:	call   QWORD PTR [rip+0x9ca1]        # 0x14000c158
   1400024b7:	lea    rcx,[rsp+0xa8]
   1400024bf:	mov    dl,0x2c
   1400024c1:	call   QWORD PTR [rip+0x9e09]        # 0x14000c2d0
   1400024c7:	lea    rdx,[rsp+0xb8]
   1400024cf:	lea    rcx,[rsp+0xb0]
   1400024d7:	movzx  edi,WORD PTR [rax]
   1400024da:	call   QWORD PTR [rip+0x9c70]        # 0x14000c150
   1400024e0:	lea    rcx,[rsp+0xb0]
   1400024e8:	movzx  edx,di
   1400024eb:	call   QWORD PTR [rip+0x9c6f]        # 0x14000c160
   1400024f1:	lea    rdx,[rsp+0xb0]
   1400024f9:	mov    rcx,rsi
   1400024fc:	call   QWORD PTR [rip+0x9c56]        # 0x14000c158
   140002502:	lea    rcx,[rsp+0xb0]
   14000250a:	call   QWORD PTR [rip+0x9ed0]        # 0x14000c3e0
   140002510:	lea    rcx,[rsp+0xb8]
   140002518:	call   QWORD PTR [rip+0x9ec2]        # 0x14000c3e0
   14000251e:	lea    rcx,[rsp+0x20]
   140002523:	call   QWORD PTR [rip+0x9eb7]        # 0x14000c3e0
   140002529:	lea    rcx,[rsp+0x28]
   14000252e:	call   QWORD PTR [rip+0x9eac]        # 0x14000c3e0
   140002534:	lea    rcx,[rsp+0x30]
   140002539:	call   QWORD PTR [rip+0x9ea1]        # 0x14000c3e0
   14000253f:	mov    edx,DWORD PTR [rsp+0x48]
   140002543:	dec    edx
   140002545:	mov    DWORD PTR [rsp+0x48],edx
   140002549:	jmp    0x140002420
   14000254e:	mov    rbx,QWORD PTR [rsp+0x50]
   140002553:	mov    rax,QWORD PTR [rsp+0x58]
   140002558:	add    rbx,0x10
   14000255c:	mov    QWORD PTR [rsp+0x50],rbx
   140002561:	jmp    0x140002400
   140002566:	lea    rcx,[rsp+0x40]
   14000256b:	call   QWORD PTR [rip+0x9e5f]        # 0x14000c3d0
   140002571:	mov    edx,0x1
   140002576:	mov    rcx,rsi
   140002579:	call   QWORD PTR [rip+0x9d61]        # 0x14000c2e0
   14000257f:	lea    rcx,[rsp+0xa0]
   140002587:	mov    dl,0x5d
   140002589:	call   QWORD PTR [rip+0x9d41]        # 0x14000c2d0
   14000258f:	mov    rcx,rsi
   140002592:	movzx  edx,WORD PTR [rax]
   140002595:	call   QWORD PTR [rip+0x9bc5]        # 0x14000c160
   14000259b:	mov    rax,rsi
   14000259e:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   1400025a3:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   1400025a8:	add    rsp,0x80
   1400025af:	pop    rdi
   1400025b0:	pop    rsi
   1400025b1:	pop    rbx
   1400025b2:	ret    
   1400025b3:	int3   
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400025c5:	mov    QWORD PTR [rsp+0x20],rsi
   1400025ca:	push   rdi
   1400025cb:	sub    rsp,0x20
   1400025cf:	mov    rdi,rcx
   1400025d2:	add    rcx,0x30
   1400025d6:	mov    rbx,rdx
   1400025d9:	call   QWORD PTR [rip+0x9cd1]        # 0x14000c2b0
   1400025df:	test   al,al
   1400025e1:	jne    0x140002676
   1400025e7:	lea    rcx,[rdi+0x30]
   1400025eb:	mov    rdx,rbx
   1400025ee:	mov    BYTE PTR [rdi+0xa8],0x1
   1400025f5:	call   QWORD PTR [rip+0x9cbd]        # 0x14000c2b8
   1400025fb:	lea    rdx,[rsp+0x40]
   140002600:	lea    rcx,[rdi+0x30]
   140002604:	call   QWORD PTR [rip+0x9cb6]        # 0x14000c2c0
   14000260a:	lea    rcx,[rdi+0x38]
   14000260e:	mov    rdx,rax
   140002611:	call   QWORD PTR [rip+0x9db1]        # 0x14000c3c8
   140002617:	lea    rcx,[rsp+0x40]
   14000261c:	call   QWORD PTR [rip+0x9dae]        # 0x14000c3d0
   140002622:	mov    r11,QWORD PTR [rdi+0x38]
   140002626:	mov    eax,0x55555556
   14000262b:	mov    rcx,rdi
   14000262e:	imul   DWORD PTR [r11+0x4]
   140002632:	mov    eax,edx
   140002634:	shr    eax,0x1f
   140002637:	add    edx,eax
   140002639:	mov    DWORD PTR [rdi+0x48],edx
   14000263c:	call   QWORD PTR [rip+0xa02e]        # 0x14000c670
   140002642:	mov    rcx,rdi
   140002645:	call   0x14000a310
   14000264a:	lea    rdx,[rsp+0x30]
   14000264f:	mov    rcx,rdi
   140002652:	call   0x140002360
   140002657:	lea    rdx,[rsp+0x30]
   14000265c:	mov    rcx,rdi
   14000265f:	call   0x14000a330
   140002664:	lea    rcx,[rsp+0x30]
   140002669:	mov    BYTE PTR [rdi+0xa8],0x0
   140002670:	call   QWORD PTR [rip+0x9d6a]        # 0x14000c3e0
   140002676:	mov    rbx,QWORD PTR [rsp+0x38]
   14000267b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002680:	add    rsp,0x20
   140002684:	pop    rdi
   140002685:	ret    
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	rex push rbx
   140002692:	sub    rsp,0x20
   140002696:	mov    rbx,rcx
   140002699:	add    rcx,0x18
   14000269d:	call   QWORD PTR [rip+0x9ccd]        # 0x14000c370
   1400026a3:	lea    rcx,[rbx+0x10]
   1400026a7:	add    rsp,0x20
   1400026ab:	pop    rbx
   1400026ac:	rex.W jmp QWORD PTR [rip+0x9d2d]        # 0x14000c3e0
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	rex push rbp
   1400026c2:	push   rsi
   1400026c3:	push   r12
   1400026c5:	sub    rsp,0x30
   1400026c9:	mov    edx,DWORD PTR [rcx+0x48]
   1400026cc:	xor    r12d,r12d
   1400026cf:	mov    rsi,rcx
   1400026d2:	mov    rbp,r12
   1400026d5:	test   edx,edx
   1400026d7:	jle    0x1400027b9
   1400026dd:	mov    QWORD PTR [rsp+0x58],rbx
   1400026e2:	mov    QWORD PTR [rsp+0x60],rdi
   1400026e7:	mov    QWORD PTR [rsp+0x68],r13
   1400026ec:	mov    QWORD PTR [rsp+0x28],r14
   1400026f1:	mov    QWORD PTR [rsp+0x20],r15
   1400026f6:	lea    r10,[rcx+0x38]
   1400026fa:	mov    r15d,r12d
   1400026fd:	nop    DWORD PTR [rax]
   140002700:	mov    rcx,QWORD PTR [rsi+0xa0]
   140002707:	lea    r8d,[rdx-0x1]
   14000270b:	xor    r13b,r13b
   14000270e:	movsxd rax,DWORD PTR [rcx+0x8]
   140002712:	add    rax,rbp
   140002715:	cmp    r12d,r8d
   140002718:	mov    r14,QWORD PTR [rcx+rax*8+0x10]
   14000271d:	jge    0x14000272f
   14000271f:	mov    rdx,QWORD PTR [rsi+0x40]
   140002723:	mov    rcx,QWORD PTR [rdx+0x10]
   140002727:	add    rcx,rbp
   14000272a:	movzx  r13d,BYTE PTR [rcx+rdx*1]
   14000272f:	cmp    r12d,r8d
   140002732:	lea    rdx,[rsp+0x50]
   140002737:	mov    r9d,0x3
   14000273d:	mov    r8d,r15d
   140002740:	mov    rcx,r10
   140002743:	sete   dil
   140002747:	call   QWORD PTR [rip+0x9b53]        # 0x14000c2a0
   14000274d:	lea    rcx,[r14+0x128]
   140002754:	mov    DWORD PTR [r14+0x130],r12d
   14000275b:	mov    rdx,rax
   14000275e:	mov    rbx,rax
   140002761:	call   QWORD PTR [rip+0x9c61]        # 0x14000c3c8
   140002767:	mov    rcx,r14
   14000276a:	mov    BYTE PTR [r14+0x134],r13b
   140002771:	mov    BYTE PTR [r14+0x135],dil
   140002778:	call   0x140009cb0
   14000277d:	mov    rcx,rbx
   140002780:	call   QWORD PTR [rip+0x9c4a]        # 0x14000c3d0
   140002786:	mov    edx,DWORD PTR [rsi+0x48]
   140002789:	inc    r12d
   14000278c:	add    r15d,0x3
   140002790:	inc    rbp
   140002793:	cmp    r12d,edx
   140002796:	lea    r10,[rsi+0x38]
   14000279a:	jl     0x140002700
   1400027a0:	mov    r15,QWORD PTR [rsp+0x20]
   1400027a5:	mov    r14,QWORD PTR [rsp+0x28]
   1400027aa:	mov    r13,QWORD PTR [rsp+0x68]
   1400027af:	mov    rdi,QWORD PTR [rsp+0x60]
   1400027b4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400027b9:	add    rsp,0x30
   1400027bd:	pop    r12
   1400027bf:	pop    rsi
   1400027c0:	pop    rbp
   1400027c1:	ret    
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    r9d,edx
   1400027d3:	mov    r8,rcx
   1400027d6:	test   edx,edx
   1400027d8:	jne    0x1400027dd
   1400027da:	xor    al,al
   1400027dc:	ret    
   1400027dd:	mov    rax,QWORD PTR [rcx+0x38]
   1400027e1:	mov    ecx,DWORD PTR [rax+0x4]
   1400027e4:	dec    ecx
   1400027e6:	cmp    edx,ecx
   1400027e8:	je     0x1400027da
   1400027ea:	cmp    DWORD PTR [r8+0x48],0x1
   1400027ef:	je     0x1400027da
   1400027f1:	mov    eax,0x55555556
   1400027f6:	imul   r9d
   1400027f9:	mov    eax,edx
   1400027fb:	shr    eax,0x1f
   1400027fe:	add    edx,eax
   140002800:	lea    eax,[rdx+rdx*2]
   140002803:	mov    edx,r9d
   140002806:	sub    edx,eax
   140002808:	jne    0x14000280f
   14000280a:	dec    r9d
   14000280d:	jmp    0x140002817
   14000280f:	cmp    edx,0x1
   140002812:	jne    0x140002817
   140002814:	inc    r9d
   140002817:	test   r9d,r9d
   14000281a:	je     0x1400027da
   14000281c:	cmp    r9d,ecx
   14000281f:	je     0x1400027da
   140002821:	mov    r8,QWORD PTR [r8+0x40]
   140002825:	mov    eax,0x55555556
   14000282a:	imul   r9d
   14000282d:	mov    eax,edx
   14000282f:	shr    eax,0x1f
   140002832:	add    eax,edx
   140002834:	cdqe   
   140002836:	add    rax,QWORD PTR [r8+0x10]
   14000283a:	mov    al,BYTE PTR [rax+r8*1]
   14000283e:	ret    
   14000283f:	int3   
   140002840:	mov    QWORD PTR [rsp+0x18],rbx
   140002845:	push   rsi
   140002846:	sub    rsp,0x20
   14000284a:	mov    rax,QWORD PTR [rdx]
   14000284d:	mov    rsi,rcx
   140002850:	mov    rbx,rdx
   140002853:	mov    QWORD PTR [rcx],rax
   140002856:	mov    ecx,DWORD PTR [rax]
   140002858:	test   ecx,ecx
   14000285a:	je     0x140002873
   14000285c:	cmp    ecx,0xffffffff
   14000285f:	je     0x1400028d8
   140002861:	lock add DWORD PTR [rax],0x1
   140002865:	mov    rax,rsi
   140002868:	mov    rbx,QWORD PTR [rsp+0x40]
   14000286d:	add    rsp,0x20
   140002871:	pop    rsi
   140002872:	ret    
   140002873:	mov    edx,DWORD PTR [rax+0x4]
   140002876:	mov    rcx,rsi
   140002879:	mov    QWORD PTR [rsp+0x30],rbp
   14000287e:	mov    QWORD PTR [rsp+0x38],rdi
   140002883:	call   QWORD PTR [rip+0x9a0f]        # 0x14000c298
   140002889:	mov    r11,QWORD PTR [rsi]
   14000288c:	mov    rcx,QWORD PTR [rbx]
   14000288f:	movsxd rax,DWORD PTR [r11+0xc]
   140002893:	lea    rbp,[r11+rax*8+0x10]
   140002898:	movsxd rax,DWORD PTR [rcx+0x8]
   14000289c:	lea    rdi,[rcx+rax*8+0x10]
   1400028a1:	movsxd rax,DWORD PTR [r11+0x8]
   1400028a5:	lea    rbx,[r11+rax*8+0x10]
   1400028aa:	cmp    rbx,rbp
   1400028ad:	je     0x1400028ce
   1400028af:	nop
   1400028b0:	test   rbx,rbx
   1400028b3:	je     0x1400028c1
   1400028b5:	mov    rdx,rdi
   1400028b8:	mov    rcx,rbx
   1400028bb:	call   QWORD PTR [rip+0x988f]        # 0x14000c150
   1400028c1:	add    rbx,0x8
   1400028c5:	add    rdi,0x8
   1400028c9:	cmp    rbx,rbp
   1400028cc:	jne    0x1400028b0
   1400028ce:	mov    rbp,QWORD PTR [rsp+0x30]
   1400028d3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400028d8:	mov    rax,rsi
   1400028db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028e0:	add    rsp,0x20
   1400028e4:	pop    rsi
   1400028e5:	ret    
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	int3   
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	int3   
   1400028ed:	int3   
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400028fa:	mov    DWORD PTR [rsp+0x10],edx
   1400028fe:	push   rsi
   1400028ff:	push   rdi
   140002900:	push   r12
   140002902:	push   r13
   140002904:	push   r14
   140002906:	sub    rsp,0x20
   14000290a:	mov    rdx,QWORD PTR [rcx]
   14000290d:	movsxd r13,r8d
   140002910:	mov    r12,rcx
   140002913:	movsxd rax,DWORD PTR [rdx+0x8]
   140002917:	mov    r8d,r13d
   14000291a:	lea    r14,[rdx+rax*8+0x10]
   14000291f:	lea    rdx,[rsp+0x58]
   140002924:	call   QWORD PTR [rip+0x9956]        # 0x14000c280
   14000292a:	mov    r10,QWORD PTR [r12]
   14000292e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002933:	movsxd r9,DWORD PTR [r10+0x8]
   140002937:	mov    rsi,rax
   14000293a:	mov    rdi,r14
   14000293d:	add    rdx,r9
   140002940:	lea    rbx,[r10+r9*8+0x10]
   140002945:	lea    rbp,[r10+rdx*8+0x10]
   14000294a:	cmp    rbx,rbp
   14000294d:	je     0x14000296e
   14000294f:	nop
   140002950:	test   rbx,rbx
   140002953:	je     0x140002961
   140002955:	mov    rdx,rdi
   140002958:	mov    rcx,rbx
   14000295b:	call   QWORD PTR [rip+0x97ef]        # 0x14000c150
   140002961:	add    rbx,0x8
   140002965:	add    rdi,0x8
   140002969:	cmp    rbx,rbp
   14000296c:	jne    0x140002950
   14000296e:	mov    r8,QWORD PTR [r12]
   140002972:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002977:	movsxd rcx,DWORD PTR [r8+0x8]
   14000297b:	movsxd rax,DWORD PTR [r8+0xc]
   14000297f:	lea    rdi,[r14+rdx*8]
   140002983:	add    rcx,rdx
   140002986:	lea    rbp,[r8+rax*8+0x10]
   14000298b:	add    rcx,r13
   14000298e:	lea    rbx,[r8+rcx*8+0x10]
   140002993:	cmp    rbx,rbp
   140002996:	je     0x1400029b6
   140002998:	test   rbx,rbx
   14000299b:	je     0x1400029a9
   14000299d:	mov    rdx,rdi
   1400029a0:	mov    rcx,rbx
   1400029a3:	call   QWORD PTR [rip+0x97a7]        # 0x14000c150
   1400029a9:	add    rbx,0x8
   1400029ad:	add    rdi,0x8
   1400029b1:	cmp    rbx,rbp
   1400029b4:	jne    0x140002998
   1400029b6:	mov    eax,DWORD PTR [rsi]
   1400029b8:	test   eax,eax
   1400029ba:	je     0x1400029cc
   1400029bc:	cmp    eax,0xffffffff
   1400029bf:	je     0x1400029fe
   1400029c1:	lock add DWORD PTR [rsi],0xffffffff
   1400029c5:	setne  al
   1400029c8:	test   al,al
   1400029ca:	jne    0x1400029fe
   1400029cc:	movsxd rax,DWORD PTR [rsi+0xc]
   1400029d0:	lea    rbx,[rsi+rax*8+0x10]
   1400029d5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400029d9:	lea    rdi,[rsi+rax*8+0x10]
   1400029de:	cmp    rdi,rbx
   1400029e1:	je     0x1400029f5
   1400029e3:	sub    rbx,0x8
   1400029e7:	mov    rcx,rbx
   1400029ea:	call   QWORD PTR [rip+0x99f0]        # 0x14000c3e0
   1400029f0:	cmp    rbx,rdi
   1400029f3:	jne    0x1400029e3
   1400029f5:	mov    rcx,rsi
   1400029f8:	call   QWORD PTR [rip+0x98f2]        # 0x14000c2f0
   1400029fe:	mov    rdx,QWORD PTR [r12]
   140002a02:	movsxd rax,DWORD PTR [rsp+0x58]
   140002a07:	mov    rbx,QWORD PTR [rsp+0x50]
   140002a0c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002a10:	mov    rbp,QWORD PTR [rsp+0x60]
   140002a15:	add    rcx,rax
   140002a18:	lea    rax,[rdx+rcx*8+0x10]
   140002a1d:	add    rsp,0x20
   140002a21:	pop    r14
   140002a23:	pop    r13
   140002a25:	pop    r12
   140002a27:	pop    rdi
   140002a28:	pop    rsi
   140002a29:	ret    
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	rex push rbx
   140002a32:	push   rdi
   140002a33:	push   r12
   140002a35:	sub    rsp,0x20
   140002a39:	mov    rbx,QWORD PTR [rcx]
   140002a3c:	mov    QWORD PTR [rsp+0x40],rbp
   140002a41:	movsxd r12,r8d
   140002a44:	mov    eax,DWORD PTR [rbx]
   140002a46:	movsxd rbp,edx
   140002a49:	mov    rdi,rcx
   140002a4c:	cmp    eax,0x1
   140002a4f:	je     0x140002a59
   140002a51:	test   eax,eax
   140002a53:	je     0x140002a59
   140002a55:	mov    cl,0x1
   140002a57:	jmp    0x140002a5b
   140002a59:	xor    cl,cl
   140002a5b:	test   r8d,r8d
   140002a5e:	je     0x140002b50
   140002a64:	mov    eax,DWORD PTR [rbx+0x8]
   140002a67:	btr    eax,0x1f
   140002a6b:	cmp    r12d,eax
   140002a6e:	jne    0x140002aa2
   140002a70:	test   cl,cl
   140002a72:	jne    0x140002aa2
   140002a74:	cmp    ebp,DWORD PTR [rbx+0x4]
   140002a77:	jle    0x140002a9a
   140002a79:	mov    rax,QWORD PTR [rbx+0x10]
   140002a7d:	movsxd rcx,DWORD PTR [rbx+0x4]
   140002a81:	mov    r8,rbp
   140002a84:	add    rcx,rax
   140002a87:	xor    edx,edx
   140002a89:	add    rcx,rbx
   140002a8c:	sub    r8,rcx
   140002a8f:	add    r8,rax
   140002a92:	add    r8,rbx
   140002a95:	call   0x14000b10c
   140002a9a:	mov    DWORD PTR [rbx+0x4],ebp
   140002a9d:	jmp    0x140002b57
   140002aa2:	mov    edx,0x8
   140002aa7:	mov    QWORD PTR [rsp+0x48],rsi
   140002aac:	mov    r8,r12
   140002aaf:	lea    ecx,[rdx-0x7]
   140002ab2:	mov    QWORD PTR [rsp+0x50],r13
   140002ab7:	mov    QWORD PTR [rsp+0x58],r14
   140002abc:	call   QWORD PTR [rip+0x98a6]        # 0x14000c368
   140002ac2:	mov    rbx,rax
   140002ac5:	mov    DWORD PTR [rax+0x4],ebp
   140002ac8:	mov    rdx,QWORD PTR [rdi]
   140002acb:	cmp    ebp,DWORD PTR [rdx+0x4]
   140002ace:	mov    rcx,QWORD PTR [rdx+0x10]
   140002ad2:	lea    r14,[rdx+rcx*1]
   140002ad6:	jle    0x140002ae4
   140002ad8:	movsxd rsi,DWORD PTR [rdx+0x4]
   140002adc:	add    rsi,rcx
   140002adf:	add    rsi,rdx
   140002ae2:	jmp    0x140002aec
   140002ae4:	lea    rsi,[rbp+rcx*1+0x0]
   140002ae9:	add    rsi,rdx
   140002aec:	mov    rax,QWORD PTR [rax+0x10]
   140002af0:	mov    r8,rsi
   140002af3:	mov    rdx,r14
   140002af6:	lea    r13,[rbx+rax*1]
   140002afa:	sub    r8,r14
   140002afd:	mov    rcx,r13
   140002b00:	call   0x14000b112
   140002b05:	mov    r11,QWORD PTR [rdi]
   140002b08:	cmp    ebp,DWORD PTR [r11+0x4]
   140002b0c:	jle    0x140002b2c
   140002b0e:	movsxd r8,DWORD PTR [rbx+0x4]
   140002b12:	sub    r13,r14
   140002b15:	xor    edx,edx
   140002b17:	add    r13,rsi
   140002b1a:	sub    r8,r13
   140002b1d:	mov    rcx,r13
   140002b20:	add    r8,QWORD PTR [rbx+0x10]
   140002b24:	add    r8,rbx
   140002b27:	call   0x14000b10c
   140002b2c:	mov    rax,QWORD PTR [rdi]
   140002b2f:	mov    r14,QWORD PTR [rsp+0x58]
   140002b34:	mov    r13,QWORD PTR [rsp+0x50]
   140002b39:	mov    ecx,DWORD PTR [rax+0x8]
   140002b3c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002b41:	xor    ecx,DWORD PTR [rbx+0x8]
   140002b44:	btr    ecx,0x1f
   140002b48:	xor    ecx,DWORD PTR [rax+0x8]
   140002b4b:	mov    DWORD PTR [rbx+0x8],ecx
   140002b4e:	jmp    0x140002b57
   140002b50:	mov    rbx,QWORD PTR [rip+0x9849]        # 0x14000c3a0
   140002b57:	mov    rcx,QWORD PTR [rdi]
   140002b5a:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b5f:	cmp    rcx,rbx
   140002b62:	je     0x140002b90
   140002b64:	mov    eax,DWORD PTR [rcx]
   140002b66:	test   eax,eax
   140002b68:	je     0x140002b7a
   140002b6a:	cmp    eax,0xffffffff
   140002b6d:	je     0x140002b8d
   140002b6f:	lock add DWORD PTR [rcx],0xffffffff
   140002b73:	setne  al
   140002b76:	test   al,al
   140002b78:	jne    0x140002b8d
   140002b7a:	mov    rcx,QWORD PTR [rdi]
   140002b7d:	mov    r8d,0x8
   140002b83:	lea    edx,[r8-0x7]
   140002b87:	call   QWORD PTR [rip+0x980b]        # 0x14000c398
   140002b8d:	mov    QWORD PTR [rdi],rbx
   140002b90:	add    rsp,0x20
   140002b94:	pop    r12
   140002b96:	pop    rdi
   140002b97:	pop    rbx
   140002b98:	ret    
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ba5:	mov    QWORD PTR [rsp+0x18],rbp
   140002baa:	mov    QWORD PTR [rsp+0x20],rsi
   140002baf:	mov    DWORD PTR [rsp+0x10],edx
   140002bb3:	push   rdi
   140002bb4:	sub    rsp,0x20
   140002bb8:	mov    rdx,QWORD PTR [rcx]
   140002bbb:	movsxd rbp,r8d
   140002bbe:	mov    rdi,rcx
   140002bc1:	movsxd rax,DWORD PTR [rdx+0x8]
   140002bc5:	mov    r8d,ebp
   140002bc8:	lea    rsi,[rdx+rax*8+0x10]
   140002bcd:	lea    rdx,[rsp+0x38]
   140002bd2:	call   QWORD PTR [rip+0x96a8]        # 0x14000c280
   140002bd8:	mov    r10,QWORD PTR [rdi]
   140002bdb:	movsxd rdx,DWORD PTR [rsp+0x38]
   140002be0:	movsxd r9,DWORD PTR [r10+0x8]
   140002be4:	mov    rbx,rax
   140002be7:	add    rdx,r9
   140002bea:	lea    rcx,[r10+r9*8+0x10]
   140002bef:	lea    r8,[r10+rdx*8+0x10]
   140002bf4:	cmp    rsi,rcx
   140002bf7:	je     0x140002c11
   140002bf9:	sub    r8,rcx
   140002bfc:	sar    r8,0x3
   140002c00:	test   r8,r8
   140002c03:	jle    0x140002c11
   140002c05:	shl    r8,0x3
   140002c09:	mov    rdx,rsi
   140002c0c:	call   0x14000b112
   140002c11:	mov    r8,QWORD PTR [rdi]
   140002c14:	movsxd rdx,DWORD PTR [rsp+0x38]
   140002c19:	movsxd rcx,DWORD PTR [r8+0x8]
   140002c1d:	movsxd rax,DWORD PTR [r8+0xc]
   140002c21:	lea    r10,[rsi+rdx*8]
   140002c25:	add    rcx,rdx
   140002c28:	lea    r9,[r8+rax*8+0x10]
   140002c2d:	add    rcx,rbp
   140002c30:	lea    rcx,[r8+rcx*8+0x10]
   140002c35:	cmp    r10,rcx
   140002c38:	je     0x140002c56
   140002c3a:	sub    r9,rcx
   140002c3d:	sar    r9,0x3
   140002c41:	test   r9,r9
   140002c44:	jle    0x140002c56
   140002c46:	lea    r8,[r9*8+0x0]
   140002c4e:	mov    rdx,r10
   140002c51:	call   0x14000b112
   140002c56:	mov    eax,DWORD PTR [rbx]
   140002c58:	test   eax,eax
   140002c5a:	je     0x140002c6c
   140002c5c:	cmp    eax,0xffffffff
   140002c5f:	je     0x140002c75
   140002c61:	lock add DWORD PTR [rbx],0xffffffff
   140002c65:	setne  al
   140002c68:	test   al,al
   140002c6a:	jne    0x140002c75
   140002c6c:	mov    rcx,rbx
   140002c6f:	call   QWORD PTR [rip+0x967b]        # 0x14000c2f0
   140002c75:	mov    rdx,QWORD PTR [rdi]
   140002c78:	movsxd rax,DWORD PTR [rsp+0x38]
   140002c7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c82:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002c86:	mov    rbp,QWORD PTR [rsp+0x40]
   140002c8b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002c90:	add    rcx,rax
   140002c93:	lea    rax,[rdx+rcx*8+0x10]
   140002c98:	add    rsp,0x20
   140002c9c:	pop    rdi
   140002c9d:	ret    
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ca5:	mov    QWORD PTR [rsp+0x18],rbp
   140002caa:	mov    DWORD PTR [rsp+0x10],edx
   140002cae:	push   rsi
   140002caf:	push   rdi
   140002cb0:	push   r12
   140002cb2:	push   r13
   140002cb4:	push   r14
   140002cb6:	sub    rsp,0x20
   140002cba:	mov    rdx,QWORD PTR [rcx]
   140002cbd:	movsxd r12,r8d
   140002cc0:	mov    r14,rcx
   140002cc3:	movsxd rax,DWORD PTR [rdx+0x8]
   140002cc7:	mov    r8d,r12d
   140002cca:	lea    r13,[rdx+rax*8+0x10]
   140002ccf:	lea    rdx,[rsp+0x58]
   140002cd4:	call   QWORD PTR [rip+0x95a6]        # 0x14000c280
   140002cda:	mov    r10,QWORD PTR [r14]
   140002cdd:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002ce2:	movsxd r9,DWORD PTR [r10+0x8]
   140002ce6:	mov    rsi,rax
   140002ce9:	mov    rdi,r13
   140002cec:	add    rdx,r9
   140002cef:	lea    rbx,[r10+r9*8+0x10]
   140002cf4:	lea    rbp,[r10+rdx*8+0x10]
   140002cf9:	cmp    rbx,rbp
   140002cfc:	je     0x140002d34
   140002cfe:	xchg   ax,ax
   140002d00:	mov    ecx,0x10
   140002d05:	call   0x14000b106
   140002d0a:	test   rax,rax
   140002d0d:	je     0x140002d22
   140002d0f:	mov    rdx,QWORD PTR [rdi]
   140002d12:	mov    rcx,QWORD PTR [rdx]
   140002d15:	mov    QWORD PTR [rax],rcx
   140002d18:	mov    rcx,QWORD PTR [rdx+0x8]
   140002d1c:	mov    QWORD PTR [rax+0x8],rcx
   140002d20:	jmp    0x140002d24
   140002d22:	xor    eax,eax
   140002d24:	mov    QWORD PTR [rbx],rax
   140002d27:	add    rbx,0x8
   140002d2b:	add    rdi,0x8
   140002d2f:	cmp    rbx,rbp
   140002d32:	jne    0x140002d00
   140002d34:	mov    r8,QWORD PTR [r14]
   140002d37:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002d3c:	movsxd rcx,DWORD PTR [r8+0x8]
   140002d40:	movsxd rax,DWORD PTR [r8+0xc]
   140002d44:	lea    rdi,[r13+rdx*8+0x0]
   140002d49:	add    rcx,rdx
   140002d4c:	lea    rbp,[r8+rax*8+0x10]
   140002d51:	add    rcx,r12
   140002d54:	lea    rbx,[r8+rcx*8+0x10]
   140002d59:	cmp    rbx,rbp
   140002d5c:	je     0x140002d94
   140002d5e:	xchg   ax,ax
   140002d60:	mov    ecx,0x10
   140002d65:	call   0x14000b106
   140002d6a:	test   rax,rax
   140002d6d:	je     0x140002d82
   140002d6f:	mov    rdx,QWORD PTR [rdi]
   140002d72:	mov    rcx,QWORD PTR [rdx]
   140002d75:	mov    QWORD PTR [rax],rcx
   140002d78:	mov    rcx,QWORD PTR [rdx+0x8]
   140002d7c:	mov    QWORD PTR [rax+0x8],rcx
   140002d80:	jmp    0x140002d84
   140002d82:	xor    eax,eax
   140002d84:	mov    QWORD PTR [rbx],rax
   140002d87:	add    rbx,0x8
   140002d8b:	add    rdi,0x8
   140002d8f:	cmp    rbx,rbp
   140002d92:	jne    0x140002d60
   140002d94:	mov    eax,DWORD PTR [rsi]
   140002d96:	test   eax,eax
   140002d98:	je     0x140002daa
   140002d9a:	cmp    eax,0xffffffff
   140002d9d:	je     0x140002ddc
   140002d9f:	lock add DWORD PTR [rsi],0xffffffff
   140002da3:	setne  al
   140002da6:	test   al,al
   140002da8:	jne    0x140002ddc
   140002daa:	movsxd rax,DWORD PTR [rsi+0xc]
   140002dae:	lea    rbx,[rsi+rax*8+0x10]
   140002db3:	movsxd rax,DWORD PTR [rsi+0x8]
   140002db7:	lea    rdi,[rsi+rax*8+0x10]
   140002dbc:	cmp    rdi,rbx
   140002dbf:	je     0x140002dd3
   140002dc1:	mov    rcx,QWORD PTR [rbx-0x8]
   140002dc5:	sub    rbx,0x8
   140002dc9:	call   0x14000b100
   140002dce:	cmp    rbx,rdi
   140002dd1:	jne    0x140002dc1
   140002dd3:	mov    rcx,rsi
   140002dd6:	call   QWORD PTR [rip+0x9514]        # 0x14000c2f0
   140002ddc:	mov    rdx,QWORD PTR [r14]
   140002ddf:	movsxd rax,DWORD PTR [rsp+0x58]
   140002de4:	mov    rbx,QWORD PTR [rsp+0x50]
   140002de9:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002ded:	mov    rbp,QWORD PTR [rsp+0x60]
   140002df2:	add    rcx,rax
   140002df5:	lea    rax,[rdx+rcx*8+0x10]
   140002dfa:	add    rsp,0x20
   140002dfe:	pop    r14
   140002e00:	pop    r13
   140002e02:	pop    r12
   140002e04:	pop    rdi
   140002e05:	pop    rsi
   140002e06:	ret    
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    QWORD PTR [rsp+0x8],rbx
   140002e15:	mov    QWORD PTR [rsp+0x10],rbp
   140002e1a:	mov    QWORD PTR [rsp+0x18],rsi
   140002e1f:	push   rdi
   140002e20:	sub    rsp,0x20
   140002e24:	mov    r8,QWORD PTR [rcx]
   140002e27:	mov    rbx,rcx
   140002e2a:	movsxd rax,DWORD PTR [r8+0x8]
   140002e2e:	lea    rdi,[r8+rax*8+0x10]
   140002e33:	call   QWORD PTR [rip+0x945f]        # 0x14000c298
   140002e39:	mov    rdx,QWORD PTR [rbx]
   140002e3c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002e40:	mov    rsi,rax
   140002e43:	lea    rbp,[rdx+rcx*8+0x10]
   140002e48:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002e4c:	lea    rbx,[rdx+rcx*8+0x10]
   140002e51:	cmp    rbx,rbp
   140002e54:	je     0x140002e8a
   140002e56:	mov    ecx,0x10
   140002e5b:	call   0x14000b106
   140002e60:	test   rax,rax
   140002e63:	je     0x140002e78
   140002e65:	mov    rdx,QWORD PTR [rdi]
   140002e68:	mov    rcx,QWORD PTR [rdx]
   140002e6b:	mov    QWORD PTR [rax],rcx
   140002e6e:	mov    rcx,QWORD PTR [rdx+0x8]
   140002e72:	mov    QWORD PTR [rax+0x8],rcx
   140002e76:	jmp    0x140002e7a
   140002e78:	xor    eax,eax
   140002e7a:	mov    QWORD PTR [rbx],rax
   140002e7d:	add    rbx,0x8
   140002e81:	add    rdi,0x8
   140002e85:	cmp    rbx,rbp
   140002e88:	jne    0x140002e56
   140002e8a:	mov    eax,DWORD PTR [rsi]
   140002e8c:	test   eax,eax
   140002e8e:	je     0x140002ea0
   140002e90:	cmp    eax,0xffffffff
   140002e93:	je     0x140002edb
   140002e95:	lock add DWORD PTR [rsi],0xffffffff
   140002e99:	setne  al
   140002e9c:	test   al,al
   140002e9e:	jne    0x140002edb
   140002ea0:	movsxd rax,DWORD PTR [rsi+0xc]
   140002ea4:	lea    rbx,[rsi+rax*8+0x10]
   140002ea9:	movsxd rax,DWORD PTR [rsi+0x8]
   140002ead:	lea    rdi,[rsi+rax*8+0x10]
   140002eb2:	cmp    rdi,rbx
   140002eb5:	je     0x140002ed2
   140002eb7:	nop    WORD PTR [rax+rax*1+0x0]
   140002ec0:	mov    rcx,QWORD PTR [rbx-0x8]
   140002ec4:	sub    rbx,0x8
   140002ec8:	call   0x14000b100
   140002ecd:	cmp    rbx,rdi
   140002ed0:	jne    0x140002ec0
   140002ed2:	mov    rcx,rsi
   140002ed5:	call   QWORD PTR [rip+0x9415]        # 0x14000c2f0
   140002edb:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ee0:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ee5:	mov    rsi,QWORD PTR [rsp+0x40]
   140002eea:	add    rsp,0x20
   140002eee:	pop    rdi
   140002eef:	ret    
   140002ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ef5:	mov    QWORD PTR [rsp+0x10],rbp
   140002efa:	mov    QWORD PTR [rsp+0x18],rsi
   140002eff:	push   rdi
   140002f00:	sub    rsp,0x20
   140002f04:	mov    r8,QWORD PTR [rcx]
   140002f07:	mov    rbx,rcx
   140002f0a:	movsxd rax,DWORD PTR [r8+0x8]
   140002f0e:	lea    rdi,[r8+rax*8+0x10]
   140002f13:	call   QWORD PTR [rip+0x937f]        # 0x14000c298
   140002f19:	mov    rdx,QWORD PTR [rbx]
   140002f1c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002f20:	mov    rsi,rax
   140002f23:	lea    rbp,[rdx+rcx*8+0x10]
   140002f28:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002f2c:	lea    rbx,[rdx+rcx*8+0x10]
   140002f31:	cmp    rbx,rbp
   140002f34:	je     0x140002f54
   140002f36:	test   rbx,rbx
   140002f39:	je     0x140002f47
   140002f3b:	mov    rdx,rdi
   140002f3e:	mov    rcx,rbx
   140002f41:	call   QWORD PTR [rip+0x9209]        # 0x14000c150
   140002f47:	add    rbx,0x8
   140002f4b:	add    rdi,0x8
   140002f4f:	cmp    rbx,rbp
   140002f52:	jne    0x140002f36
   140002f54:	mov    eax,DWORD PTR [rsi]
   140002f56:	test   eax,eax
   140002f58:	je     0x140002f6a
   140002f5a:	cmp    eax,0xffffffff
   140002f5d:	je     0x140002f9c
   140002f5f:	lock add DWORD PTR [rsi],0xffffffff
   140002f63:	setne  al
   140002f66:	test   al,al
   140002f68:	jne    0x140002f9c
   140002f6a:	movsxd rax,DWORD PTR [rsi+0xc]
   140002f6e:	lea    rbx,[rsi+rax*8+0x10]
   140002f73:	movsxd rax,DWORD PTR [rsi+0x8]
   140002f77:	lea    rdi,[rsi+rax*8+0x10]
   140002f7c:	cmp    rdi,rbx
   140002f7f:	je     0x140002f93
   140002f81:	sub    rbx,0x8
   140002f85:	mov    rcx,rbx
   140002f88:	call   QWORD PTR [rip+0x9452]        # 0x14000c3e0
   140002f8e:	cmp    rbx,rdi
   140002f91:	jne    0x140002f81
   140002f93:	mov    rcx,rsi
   140002f96:	call   QWORD PTR [rip+0x9354]        # 0x14000c2f0
   140002f9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fa1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002fa6:	mov    rsi,QWORD PTR [rsp+0x40]
   140002fab:	add    rsp,0x20
   140002faf:	pop    rdi
   140002fb0:	ret    
   140002fb1:	int3   
   140002fb2:	int3   
   140002fb3:	int3   
   140002fb4:	int3   
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    rax,rsp
   140002fc3:	push   rbx
   140002fc4:	push   rbp
   140002fc5:	push   rsi
   140002fc6:	push   rdi
   140002fc7:	push   r13
   140002fc9:	push   r14
   140002fcb:	sub    rsp,0x188
   140002fd2:	movaps XMMWORD PTR [rax-0x48],xmm6
   140002fd6:	movaps XMMWORD PTR [rax-0x58],xmm7
   140002fda:	movaps XMMWORD PTR [rax-0x68],xmm8
   140002fdf:	xor    ebp,ebp
   140002fe1:	mov    r13,rcx
   140002fe4:	movaps XMMWORD PTR [rax-0x78],xmm9
   140002fe9:	movaps XMMWORD PTR [rax-0x88],xmm10
   140002ff1:	movaps XMMWORD PTR [rax-0x98],xmm11
   140002ff9:	movaps XMMWORD PTR [rax-0xa8],xmm12
   140003001:	movaps XMMWORD PTR [rax-0xb8],xmm13
   140003009:	movaps XMMWORD PTR [rax-0xc8],xmm14
   140003011:	test   rcx,rcx
   140003014:	je     0x14000301c
   140003016:	lea    rdx,[rcx+0x10]
   14000301a:	jmp    0x14000301f
   14000301c:	mov    rdx,rbp
   14000301f:	lea    rcx,[rsp+0x1c0]
   140003027:	call   QWORD PTR [rip+0x946b]        # 0x14000c498
   14000302d:	lea    rcx,[rsp+0xa0]
   140003035:	mov    edx,0x2
   14000303a:	call   QWORD PTR [rip+0x9460]        # 0x14000c4a0
   140003040:	lea    rdx,[rsp+0xa0]
   140003048:	lea    rcx,[rsp+0x1d0]
   140003050:	call   QWORD PTR [rip+0x9452]        # 0x14000c4a8
   140003056:	lea    rcx,[rsp+0x1d0]
   14000305e:	mov    edx,0x1
   140003063:	call   QWORD PTR [rip+0x9447]        # 0x14000c4b0
   140003069:	mov    rax,QWORD PTR [r13+0x28]
   14000306d:	mov    edx,0x3
   140003072:	mov    esi,DWORD PTR [rax+0x20]
   140003075:	mov    edi,DWORD PTR [rax+0x1c]
   140003078:	lea    r8d,[rdx-0x2]
   14000307c:	sub    esi,DWORD PTR [rax+0x18]
   14000307f:	sub    edi,DWORD PTR [rax+0x14]
   140003082:	lea    rcx,[rsp+0x1d8]
   14000308a:	call   QWORD PTR [rip+0x9360]        # 0x14000c3f0
   140003090:	lea    rcx,[rsp+0x30]
   140003095:	mov    r9d,edi
   140003098:	xor    r8d,r8d
   14000309b:	xor    edx,edx
   14000309d:	mov    DWORD PTR [rsp+0x20],esi
   1400030a1:	mov    rbx,rax
   1400030a4:	call   QWORD PTR [rip+0x91be]        # 0x14000c268
   1400030aa:	lea    rcx,[rsp+0x1c0]
   1400030b2:	mov    rdx,rax
   1400030b5:	mov    r8,rbx
   1400030b8:	call   QWORD PTR [rip+0x9402]        # 0x14000c4c0
   1400030be:	lea    rcx,[rsp+0x1d8]
   1400030c6:	call   QWORD PTR [rip+0x933c]        # 0x14000c408
   1400030cc:	mov    r11,QWORD PTR [r13+0x28]
   1400030d0:	lea    rcx,[rsp+0xa0]
   1400030d8:	mov    eax,DWORD PTR [r11+0x20]
   1400030dc:	mov    r9d,DWORD PTR [r11+0x1c]
   1400030e0:	xor    r8d,r8d
   1400030e3:	sub    eax,DWORD PTR [r11+0x18]
   1400030e7:	sub    r9d,DWORD PTR [r11+0x14]
   1400030eb:	xor    edx,edx
   1400030ed:	mov    DWORD PTR [rsp+0x20],eax
   1400030f1:	call   QWORD PTR [rip+0x9171]        # 0x14000c268
   1400030f7:	lea    rdx,[rsp+0xa0]
   1400030ff:	lea    rcx,[rsp+0x1c0]
   140003107:	mov    r8d,0x1
   14000310d:	call   QWORD PTR [rip+0x93b5]        # 0x14000c4c8
   140003113:	lea    rcx,[rsp+0x1c0]
   14000311b:	mov    r8b,0x1
   14000311e:	mov    edx,0x1
   140003123:	call   QWORD PTR [rip+0x93a7]        # 0x14000c4d0
   140003129:	lea    rcx,[rsp+0xa0]
   140003131:	mov    edx,0x5
   140003136:	call   QWORD PTR [rip+0x9364]        # 0x14000c4a0
   14000313c:	lea    rdx,[rsp+0xa0]
   140003144:	lea    rcx,[rsp+0x1d8]
   14000314c:	call   QWORD PTR [rip+0x9356]        # 0x14000c4a8
   140003152:	lea    rcx,[rsp+0x1d0]
   14000315a:	mov    rdx,rax
   14000315d:	call   QWORD PTR [rip+0x9375]        # 0x14000c4d8
   140003163:	lea    rcx,[rsp+0x1d8]
   14000316b:	call   QWORD PTR [rip+0x936f]        # 0x14000c4e0
   140003171:	lea    rcx,[rsp+0x1d0]
   140003179:	mov    edx,0x1
   14000317e:	call   QWORD PTR [rip+0x932c]        # 0x14000c4b0
   140003184:	lea    rcx,[rsp+0x1d0]
   14000318c:	mov    edx,0x2
   140003191:	call   QWORD PTR [rip+0x9351]        # 0x14000c4e8
   140003197:	lea    rdx,[rsp+0x1d0]
   14000319f:	lea    rcx,[rsp+0x1c0]
   1400031a7:	call   QWORD PTR [rip+0x9343]        # 0x14000c4f0
   1400031ad:	movsd  xmm8,QWORD PTR [rip+0xa3fa]        # 0x14000d5b0
   1400031b6:	xorpd  xmm10,xmm10
   1400031bb:	movsd  xmm6,QWORD PTR [rip+0xaec5]        # 0x14000e088
   1400031c3:	movsd  xmm7,QWORD PTR [rip+0xa3ed]        # 0x14000d5b8
   1400031cb:	movapd xmm0,xmm10
   1400031d0:	movapd xmm11,xmm8
   1400031d5:	mulsd  xmm0,xmm8
   1400031da:	subsd  xmm11,xmm0
   1400031df:	movsd  QWORD PTR [rsp+0x70],xmm6
   1400031e5:	addsd  xmm11,xmm7
   1400031ea:	movsd  xmm9,QWORD PTR [rip+0xa3b5]        # 0x14000d5a8
   1400031f3:	movapd xmm12,xmm10
   1400031f8:	lea    rdx,[rsp+0xb8]
   140003200:	lea    rcx,[rsp+0x70]
   140003205:	movsd  QWORD PTR [rsp+0x78],xmm11
   14000320c:	movsd  QWORD PTR [rsp+0x68],xmm11
   140003213:	mulsd  xmm12,xmm9
   140003218:	addsd  xmm12,xmm7
   14000321d:	movsd  QWORD PTR [rsp+0x60],xmm12
   140003224:	call   QWORD PTR [rip+0x9046]        # 0x14000c270
   14000322a:	lea    rdx,[rsp+0xb0]
   140003232:	lea    rcx,[rsp+0x60]
   140003237:	mov    rbx,QWORD PTR [rax]
   14000323a:	mov    QWORD PTR [rsp+0x1d8],rbx
   140003242:	call   QWORD PTR [rip+0x9028]        # 0x14000c270
   140003248:	lea    rcx,[rsp+0x88]
   140003250:	movsd  xmm14,QWORD PTR [rip+0xa31f]        # 0x14000d578
   140003259:	movd   xmm1,DWORD PTR [rsp+0x1dc]
   140003262:	movd   xmm0,ebx
   140003266:	mov    rax,QWORD PTR [rax]
   140003269:	lea    rdx,[rsp+0x30]
   14000326e:	mov    r8d,0x1
   140003274:	cvtdq2pd xmm1,xmm1
   140003278:	cvtdq2pd xmm0,xmm0
   14000327c:	addsd  xmm1,xmm14
   140003281:	movd   xmm2,eax
   140003285:	shr    rax,0x20
   140003289:	movsd  QWORD PTR [rsp+0x58],xmm1
   14000328f:	addsd  xmm0,xmm14
   140003294:	movd   xmm3,eax
   140003298:	movsd  QWORD PTR [rsp+0x50],xmm0
   14000329e:	cvtdq2pd xmm2,xmm2
   1400032a2:	cvtdq2pd xmm3,xmm3
   1400032a6:	addsd  xmm2,xmm14
   1400032ab:	movsd  QWORD PTR [rsp+0x88],xmm2
   1400032b4:	addsd  xmm3,xmm14
   1400032b9:	movsd  QWORD PTR [rsp+0x90],xmm3
   1400032c2:	mov    rax,QWORD PTR [rcx]
   1400032c5:	mov    QWORD PTR [rdx],rax
   1400032c8:	mov    rax,QWORD PTR [rcx+0x8]
   1400032cc:	lea    rcx,[rsp+0x50]
   1400032d1:	mov    QWORD PTR [rdx+0x8],rax
   1400032d5:	mov    rax,QWORD PTR [rcx]
   1400032d8:	lea    rdx,[rsp+0x40]
   1400032dd:	mov    QWORD PTR [rdx],rax
   1400032e0:	mov    rax,QWORD PTR [rcx+0x8]
   1400032e4:	lea    rcx,[rsp+0x1c0]
   1400032ec:	mov    QWORD PTR [rdx+0x8],rax
   1400032f0:	lea    rdx,[rsp+0x30]
   1400032f5:	call   QWORD PTR [rip+0x9255]        # 0x14000c550
   1400032fb:	lea    rdx,[rsp+0xb8]
   140003303:	lea    rcx,[rsp+0x70]
   140003308:	movapd xmm13,xmm10
   14000330d:	movsd  QWORD PTR [rsp+0x70],xmm6
   140003313:	movsd  QWORD PTR [rsp+0x60],xmm12
   14000331a:	addsd  xmm13,xmm7
   14000331f:	movsd  QWORD PTR [rsp+0x78],xmm13
   140003326:	movsd  QWORD PTR [rsp+0x68],xmm13
   14000332d:	call   QWORD PTR [rip+0x8f3d]        # 0x14000c270
   140003333:	lea    rdx,[rsp+0xb0]
   14000333b:	lea    rcx,[rsp+0x60]
   140003340:	mov    rbx,QWORD PTR [rax]
   140003343:	mov    QWORD PTR [rsp+0x1d8],rbx
   14000334b:	call   QWORD PTR [rip+0x8f1f]        # 0x14000c270
   140003351:	mov    rax,QWORD PTR [rax]
   140003354:	movd   xmm1,DWORD PTR [rsp+0x1dc]
   14000335d:	movd   xmm0,ebx
   140003361:	cvtdq2pd xmm1,xmm1
   140003365:	cvtdq2pd xmm0,xmm0
   140003369:	addsd  xmm1,xmm14
   14000336e:	movd   xmm2,eax
   140003372:	shr    rax,0x20
   140003376:	addsd  xmm0,xmm14
   14000337b:	movsd  QWORD PTR [rsp+0x58],xmm1
   140003381:	movd   xmm3,eax
   140003385:	cvtdq2pd xmm2,xmm2
   140003389:	movsd  QWORD PTR [rsp+0x50],xmm0
   14000338f:	cvtdq2pd xmm3,xmm3
   140003393:	addsd  xmm2,xmm14
   140003398:	movsd  QWORD PTR [rsp+0x88],xmm2
   1400033a1:	addsd  xmm3,xmm14
   1400033a6:	lea    rcx,[rsp+0x88]
   1400033ae:	movsd  QWORD PTR [rsp+0x90],xmm3
   1400033b7:	lea    rdx,[rsp+0x30]
   1400033bc:	mov    rax,QWORD PTR [rcx]
   1400033bf:	mov    r8d,0x1
   1400033c5:	mov    QWORD PTR [rdx],rax
   1400033c8:	mov    rax,QWORD PTR [rcx+0x8]
   1400033cc:	lea    rcx,[rsp+0x50]
   1400033d1:	mov    QWORD PTR [rdx+0x8],rax
   1400033d5:	mov    rax,QWORD PTR [rcx]
   1400033d8:	lea    rdx,[rsp+0x40]
   1400033dd:	mov    QWORD PTR [rdx],rax
   1400033e0:	mov    rax,QWORD PTR [rcx+0x8]
   1400033e4:	lea    rcx,[rsp+0x1c0]
   1400033ec:	mov    QWORD PTR [rdx+0x8],rax
   1400033f0:	lea    rdx,[rsp+0x30]
   1400033f5:	call   QWORD PTR [rip+0x9155]        # 0x14000c550
   1400033fb:	cmp    DWORD PTR [r13+0x48],ebp
   1400033ff:	mov    edi,ebp
   140003401:	jle    0x14000373d
   140003407:	movsd  xmm6,QWORD PTR [rip+0xac51]        # 0x14000e060
   14000340f:	nop
   140003410:	lea    rcx,[rsp+0x80]
   140003418:	call   QWORD PTR [rip+0x90da]        # 0x14000c4f8
   14000341e:	movsd  QWORD PTR [rsp+0x50],xmm10
   140003425:	movsd  QWORD PTR [rsp+0x58],xmm10
   14000342c:	test   edi,edi
   14000342e:	jne    0x140003454
   140003430:	movsd  QWORD PTR [rsp+0xe0],xmm12
   14000343a:	movsd  QWORD PTR [rsp+0xe8],xmm11
   140003444:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000344c:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140003452:	jmp    0x1400034a6
   140003454:	lea    edx,[rdi+rdi*2-0x1]
   140003458:	lea    rcx,[r13+0x38]
   14000345c:	call   QWORD PTR [rip+0x8f56]        # 0x14000c3b8
   140003462:	movapd xmm1,xmm8
   140003467:	movsd  xmm0,QWORD PTR [rax]
   14000346b:	mulsd  xmm0,xmm9
   140003470:	addsd  xmm0,xmm7
   140003474:	movsd  QWORD PTR [rsp+0xa0],xmm0
   14000347d:	movsd  xmm0,QWORD PTR [rax+0x8]
   140003482:	mulsd  xmm0,xmm8
   140003487:	subsd  xmm1,xmm0
   14000348b:	addsd  xmm1,xmm7
   14000348f:	movsd  QWORD PTR [rsp+0xa8],xmm1
   140003498:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   1400034a0:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400034a6:	lea    rdx,[rsp+0x50]
   1400034ab:	lea    rcx,[rsp+0x80]
   1400034b3:	call   QWORD PTR [rip+0x9047]        # 0x14000c500
   1400034b9:	lea    ebx,[rdi+rdi*2]
   1400034bc:	lea    rcx,[r13+0x38]
   1400034c0:	mov    edx,ebx
   1400034c2:	call   QWORD PTR [rip+0x8ef0]        # 0x14000c3b8
   1400034c8:	lea    edx,[rbx+0x1]
   1400034cb:	lea    rcx,[r13+0x38]
   1400034cf:	movsd  xmm0,QWORD PTR [rax]
   1400034d3:	movsd  xmm1,QWORD PTR [rax+0x8]
   1400034d8:	mulsd  xmm0,xmm9
   1400034dd:	mulsd  xmm1,xmm8
   1400034e2:	addsd  xmm0,xmm7
   1400034e6:	movsd  QWORD PTR [rsp+0x88],xmm0
   1400034ef:	movapd xmm0,xmm8
   1400034f4:	subsd  xmm0,xmm1
   1400034f8:	addsd  xmm0,xmm7
   1400034fc:	movsd  QWORD PTR [rsp+0x90],xmm0
   140003505:	call   QWORD PTR [rip+0x8ead]        # 0x14000c3b8
   14000350b:	lea    edx,[rbx+0x2]
   14000350e:	lea    rcx,[r13+0x38]
   140003512:	movsd  xmm0,QWORD PTR [rax]
   140003516:	movsd  xmm1,QWORD PTR [rax+0x8]
   14000351b:	mulsd  xmm0,xmm9
   140003520:	mulsd  xmm1,xmm8
   140003525:	addsd  xmm0,xmm7
   140003529:	movsd  QWORD PTR [rsp+0x70],xmm0
   14000352f:	movapd xmm0,xmm8
   140003534:	subsd  xmm0,xmm1
   140003538:	addsd  xmm0,xmm7
   14000353c:	movsd  QWORD PTR [rsp+0x78],xmm0
   140003542:	call   QWORD PTR [rip+0x8e70]        # 0x14000c3b8
   140003548:	lea    r9,[rsp+0x60]
   14000354d:	lea    r8,[rsp+0x70]
   140003552:	lea    rdx,[rsp+0x88]
   14000355a:	lea    rcx,[rsp+0x80]
   140003562:	movsd  xmm0,QWORD PTR [rax]
   140003566:	movsd  xmm1,QWORD PTR [rax+0x8]
   14000356b:	mulsd  xmm0,xmm9
   140003570:	mulsd  xmm1,xmm8
   140003575:	addsd  xmm0,xmm7
   140003579:	movsd  QWORD PTR [rsp+0x60],xmm0
   14000357f:	movapd xmm0,xmm8
   140003584:	subsd  xmm0,xmm1
   140003588:	addsd  xmm0,xmm7
   14000358c:	movsd  QWORD PTR [rsp+0x68],xmm0
   140003592:	call   QWORD PTR [rip+0x8f70]        # 0x14000c508
   140003598:	mov    edx,0x2
   14000359d:	lea    rcx,[rsp+0xb8]
   1400035a5:	lea    r8d,[rdx-0x1]
   1400035a9:	call   QWORD PTR [rip+0x8e41]        # 0x14000c3f0
   1400035af:	lea    rcx,[rsp+0xb0]
   1400035b7:	mov    r9d,0x1
   1400035bd:	movapd xmm2,xmm6
   1400035c1:	mov    rdx,rax
   1400035c4:	mov    DWORD PTR [rsp+0x28],0x40
   1400035cc:	mov    DWORD PTR [rsp+0x20],0x10
   1400035d4:	call   QWORD PTR [rip+0x8f36]        # 0x14000c510
   1400035da:	lea    rdx,[rsp+0x80]
   1400035e2:	lea    rcx,[rsp+0x1c0]
   1400035ea:	mov    r8,rax
   1400035ed:	call   QWORD PTR [rip+0x8f25]        # 0x14000c518
   1400035f3:	lea    rcx,[rsp+0xb0]
   1400035fb:	call   QWORD PTR [rip+0x8edf]        # 0x14000c4e0
   140003601:	lea    rcx,[rsp+0xb8]
   140003609:	call   QWORD PTR [rip+0x8df9]        # 0x14000c408
   14000360f:	lea    rcx,[rsp+0x30]
   140003614:	mov    edx,0x2
   140003619:	call   QWORD PTR [rip+0x8e81]        # 0x14000c4a0
   14000361f:	lea    rdx,[rsp+0x30]
   140003624:	lea    rcx,[rsp+0x1d8]
   14000362c:	call   QWORD PTR [rip+0x8e76]        # 0x14000c4a8
   140003632:	lea    rcx,[rsp+0x1d8]
   14000363a:	mov    edx,0x1
   14000363f:	call   QWORD PTR [rip+0x8e6b]        # 0x14000c4b0
   140003645:	lea    rcx,[rsp+0x1d8]
   14000364d:	mov    edx,0x2
   140003652:	call   QWORD PTR [rip+0x8e90]        # 0x14000c4e8
   140003658:	lea    rdx,[rsp+0x1d8]
   140003660:	lea    rcx,[rsp+0x1c0]
   140003668:	call   QWORD PTR [rip+0x8e82]        # 0x14000c4f0
   14000366e:	lea    rcx,[rsp+0x50]
   140003673:	lea    rdx,[rsp+0xc0]
   14000367b:	mov    rax,QWORD PTR [rcx]
   14000367e:	mov    r8d,0x1
   140003684:	mov    QWORD PTR [rdx],rax
   140003687:	mov    rax,QWORD PTR [rcx+0x8]
   14000368b:	lea    rcx,[rsp+0x88]
   140003693:	mov    QWORD PTR [rdx+0x8],rax
   140003697:	mov    rax,QWORD PTR [rcx]
   14000369a:	lea    rdx,[rsp+0xd0]
   1400036a2:	mov    QWORD PTR [rdx],rax
   1400036a5:	mov    rax,QWORD PTR [rcx+0x8]
   1400036a9:	lea    rcx,[rsp+0x1c0]
   1400036b1:	mov    QWORD PTR [rdx+0x8],rax
   1400036b5:	lea    rdx,[rsp+0xc0]
   1400036bd:	call   QWORD PTR [rip+0x8e8d]        # 0x14000c550
   1400036c3:	lea    rcx,[rsp+0x60]
   1400036c8:	lea    rdx,[rsp+0xc0]
   1400036d0:	mov    rax,QWORD PTR [rcx]
   1400036d3:	mov    r8d,0x1
   1400036d9:	mov    QWORD PTR [rdx],rax
   1400036dc:	mov    rax,QWORD PTR [rcx+0x8]
   1400036e0:	lea    rcx,[rsp+0x70]
   1400036e5:	mov    QWORD PTR [rdx+0x8],rax
   1400036e9:	mov    rax,QWORD PTR [rcx]
   1400036ec:	lea    rdx,[rsp+0xd0]
   1400036f4:	mov    QWORD PTR [rdx],rax
   1400036f7:	mov    rax,QWORD PTR [rcx+0x8]
   1400036fb:	lea    rcx,[rsp+0x1c0]
   140003703:	mov    QWORD PTR [rdx+0x8],rax
   140003707:	lea    rdx,[rsp+0xc0]
   14000370f:	call   QWORD PTR [rip+0x8e3b]        # 0x14000c550
   140003715:	lea    rcx,[rsp+0x1d8]
   14000371d:	call   QWORD PTR [rip+0x8dbd]        # 0x14000c4e0
   140003723:	lea    rcx,[rsp+0x80]
   14000372b:	call   QWORD PTR [rip+0x8def]        # 0x14000c520
   140003731:	inc    edi
   140003733:	cmp    edi,DWORD PTR [r13+0x48]
   140003737:	jl     0x140003410
   14000373d:	mov    edx,0x78
   140003742:	lea    rcx,[rsp+0x30]
   140003747:	mov    DWORD PTR [rsp+0x20],0xff
   14000374f:	lea    r9d,[rdx+0x64]
   140003753:	mov    r8d,edx
   140003756:	call   QWORD PTR [rip+0x8dfc]        # 0x14000c558
   14000375c:	lea    rdx,[rsp+0x30]
   140003761:	lea    rcx,[rsp+0x1d8]
   140003769:	mov    r8d,0x1
   14000376f:	call   QWORD PTR [rip+0x8ca3]        # 0x14000c418
   140003775:	lea    rdx,[rsp+0x1d8]
   14000377d:	lea    rcx,[rsp+0x1c0]
   140003785:	call   QWORD PTR [rip+0x8c85]        # 0x14000c410
   14000378b:	lea    rcx,[rsp+0x1d8]
   140003793:	call   QWORD PTR [rip+0x8c6f]        # 0x14000c408
   140003799:	mov    edx,0x50
   14000379e:	lea    rcx,[rsp+0x30]
   1400037a3:	mov    r8d,edx
   1400037a6:	mov    r9d,0xd2
   1400037ac:	mov    DWORD PTR [rsp+0x20],0x96
   1400037b4:	call   QWORD PTR [rip+0x8d9e]        # 0x14000c558
   1400037ba:	lea    rdx,[rsp+0x30]
   1400037bf:	lea    rcx,[rsp+0x1d8]
   1400037c7:	mov    r8d,0x1
   1400037cd:	call   QWORD PTR [rip+0x8c45]        # 0x14000c418
   1400037d3:	lea    rdx,[rsp+0x1d8]
   1400037db:	lea    rcx,[rsp+0x1c0]
   1400037e3:	call   QWORD PTR [rip+0x8c27]        # 0x14000c410
   1400037e9:	lea    rcx,[rsp+0x1d8]
   1400037f1:	call   QWORD PTR [rip+0x8c11]        # 0x14000c408
   1400037f7:	mov    edx,0x32
   1400037fc:	lea    rcx,[rsp+0x30]
   140003801:	mov    r9d,edx
   140003804:	mov    r8d,edx
   140003807:	mov    DWORD PTR [rsp+0x20],0x8c
   14000380f:	call   QWORD PTR [rip+0x8d43]        # 0x14000c558
   140003815:	lea    rdx,[rsp+0x30]
   14000381a:	lea    rcx,[rsp+0x1c0]
   140003822:	call   QWORD PTR [rip+0x8bd8]        # 0x14000c400
   140003828:	mov    r9d,0x50
   14000382e:	lea    rcx,[rsp+0x30]
   140003833:	mov    r8d,r9d
   140003836:	mov    edx,0xa0
   14000383b:	mov    DWORD PTR [rsp+0x20],0xfa
   140003843:	call   QWORD PTR [rip+0x8d0f]        # 0x14000c558
   140003849:	lea    rdx,[rsp+0x30]
   14000384e:	lea    rcx,[rsp+0x1d8]
   140003856:	mov    r8d,0x1
   14000385c:	call   QWORD PTR [rip+0x8bb6]        # 0x14000c418
   140003862:	lea    rdx,[rsp+0x1d8]
   14000386a:	lea    rcx,[rsp+0x1c0]
   140003872:	call   QWORD PTR [rip+0x8b98]        # 0x14000c410
   140003878:	lea    rcx,[rsp+0x1d8]
   140003880:	call   QWORD PTR [rip+0x8b82]        # 0x14000c408
   140003886:	lea    rcx,[rsp+0xc0]
   14000388e:	movsd  xmm7,QWORD PTR [rip+0xa7ea]        # 0x14000e080
   140003896:	movsd  xmm6,QWORD PTR [rip+0xa7da]        # 0x14000e078
   14000389e:	subsd  xmm11,xmm7
   1400038a3:	subsd  xmm12,xmm7
   1400038a8:	movapd xmm3,xmm6
   1400038ac:	addsd  xmm11,xmm14
   1400038b1:	addsd  xmm12,xmm14
   1400038b6:	movsd  QWORD PTR [rsp+0x20],xmm6
   1400038bc:	movapd xmm2,xmm11
   1400038c1:	movapd xmm1,xmm12
   1400038c6:	call   QWORD PTR [rip+0x89ac]        # 0x14000c278
   1400038cc:	lea    rcx,[rsp+0x1c0]
   1400038d4:	mov    r8d,0x1
   1400038da:	mov    rdx,rax
   1400038dd:	call   QWORD PTR [rip+0x8bd5]        # 0x14000c4b8
   1400038e3:	mov    edx,0x78
   1400038e8:	lea    rcx,[rsp+0x30]
   1400038ed:	lea    r9d,[rdx+0x64]
   1400038f1:	mov    r8d,edx
   1400038f4:	mov    DWORD PTR [rsp+0x20],0xff
   1400038fc:	call   QWORD PTR [rip+0x8c56]        # 0x14000c558
   140003902:	lea    rdx,[rsp+0x30]
   140003907:	lea    rcx,[rsp+0x1d8]
   14000390f:	mov    r8d,0x1
   140003915:	call   QWORD PTR [rip+0x8afd]        # 0x14000c418
   14000391b:	lea    rdx,[rsp+0x1d8]
   140003923:	lea    rcx,[rsp+0x1c0]
   14000392b:	call   QWORD PTR [rip+0x8adf]        # 0x14000c410
   140003931:	lea    rcx,[rsp+0x1d8]
   140003939:	call   QWORD PTR [rip+0x8ac9]        # 0x14000c408
   14000393f:	mov    edx,0x50
   140003944:	lea    rcx,[rsp+0x30]
   140003949:	mov    r8d,edx
   14000394c:	mov    r9d,0xd2
   140003952:	mov    DWORD PTR [rsp+0x20],0x96
   14000395a:	call   QWORD PTR [rip+0x8bf8]        # 0x14000c558
   140003960:	lea    rdx,[rsp+0x30]
   140003965:	lea    rcx,[rsp+0x1d8]
   14000396d:	mov    r8d,0x1
   140003973:	call   QWORD PTR [rip+0x8a9f]        # 0x14000c418
   140003979:	lea    rdx,[rsp+0x1d8]
   140003981:	lea    rcx,[rsp+0x1c0]
   140003989:	call   QWORD PTR [rip+0x8a81]        # 0x14000c410
   14000398f:	lea    rcx,[rsp+0x1d8]
   140003997:	call   QWORD PTR [rip+0x8a6b]        # 0x14000c408
   14000399d:	mov    edx,0x32
   1400039a2:	lea    rcx,[rsp+0x30]
   1400039a7:	mov    r9d,edx
   1400039aa:	mov    r8d,edx
   1400039ad:	mov    DWORD PTR [rsp+0x20],0x8c
   1400039b5:	call   QWORD PTR [rip+0x8b9d]        # 0x14000c558
   1400039bb:	lea    rdx,[rsp+0x30]
   1400039c0:	lea    rcx,[rsp+0x1c0]
   1400039c8:	call   QWORD PTR [rip+0x8a32]        # 0x14000c400
   1400039ce:	mov    r9d,0x50
   1400039d4:	lea    rcx,[rsp+0x30]
   1400039d9:	mov    r8d,r9d
   1400039dc:	mov    edx,0xa0
   1400039e1:	mov    DWORD PTR [rsp+0x20],0xfa
   1400039e9:	call   QWORD PTR [rip+0x8b69]        # 0x14000c558
   1400039ef:	lea    rdx,[rsp+0x30]
   1400039f4:	lea    rcx,[rsp+0x1d8]
   1400039fc:	mov    r8d,0x1
   140003a02:	call   QWORD PTR [rip+0x8a10]        # 0x14000c418
   140003a08:	lea    rdx,[rsp+0x1d8]
   140003a10:	lea    rcx,[rsp+0x1c0]
   140003a18:	call   QWORD PTR [rip+0x89f2]        # 0x14000c410
   140003a1e:	lea    rcx,[rsp+0x1d8]
   140003a26:	call   QWORD PTR [rip+0x89dc]        # 0x14000c408
   140003a2c:	lea    rcx,[rsp+0xc0]
   140003a34:	movsd  xmm1,QWORD PTR [rip+0xa634]        # 0x14000e070
   140003a3c:	subsd  xmm13,xmm7
   140003a41:	movapd xmm3,xmm6
   140003a45:	addsd  xmm13,xmm14
   140003a4a:	movsd  QWORD PTR [rsp+0x20],xmm6
   140003a50:	movapd xmm2,xmm13
   140003a55:	call   QWORD PTR [rip+0x881d]        # 0x14000c278
   140003a5b:	lea    rcx,[rsp+0x1c0]
   140003a63:	mov    r8d,0x1
   140003a69:	mov    rdx,rax
   140003a6c:	call   QWORD PTR [rip+0x8a46]        # 0x14000c4b8
   140003a72:	mov    rax,QWORD PTR [r13+0x38]
   140003a76:	movaps xmm14,XMMWORD PTR [rsp+0xf0]
   140003a7f:	movaps xmm13,XMMWORD PTR [rsp+0x100]
   140003a88:	movaps xmm12,XMMWORD PTR [rsp+0x110]
   140003a91:	mov    r8d,DWORD PTR [rax+0x4]
   140003a95:	dec    r8d
   140003a98:	movaps xmm11,XMMWORD PTR [rsp+0x120]
   140003aa1:	movaps xmm10,XMMWORD PTR [rsp+0x130]
   140003aaa:	movaps xmm9,XMMWORD PTR [rsp+0x140]
   140003ab3:	movaps xmm8,XMMWORD PTR [rsp+0x150]
   140003abc:	movaps xmm7,XMMWORD PTR [rsp+0x160]
   140003ac4:	movaps xmm6,XMMWORD PTR [rsp+0x170]
   140003acc:	test   r8d,r8d
   140003acf:	jle    0x140003bc3
   140003ad5:	mov    QWORD PTR [rsp+0x180],r12
   140003add:	nop    DWORD PTR [rax]
   140003ae0:	test   ebp,ebp
   140003ae2:	jne    0x140003ae9
   140003ae4:	xor    r12b,r12b
   140003ae7:	jmp    0x140003b57
   140003ae9:	cmp    ebp,r8d
   140003aec:	jne    0x140003af3
   140003aee:	xor    r12b,r12b
   140003af1:	jmp    0x140003b57
   140003af3:	cmp    DWORD PTR [r13+0x48],0x1
   140003af8:	jne    0x140003aff
   140003afa:	xor    r12b,r12b
   140003afd:	jmp    0x140003b57
   140003aff:	mov    eax,0x55555556
   140003b04:	mov    ecx,ebp
   140003b06:	imul   ebp
   140003b08:	mov    eax,edx
   140003b0a:	shr    eax,0x1f
   140003b0d:	add    edx,eax
   140003b0f:	lea    eax,[rdx+rdx*2]
   140003b12:	sub    ecx,eax
   140003b14:	jne    0x140003b1b
   140003b16:	lea    edx,[rbp-0x1]
   140003b19:	jmp    0x140003b27
   140003b1b:	cmp    ecx,0x1
   140003b1e:	jne    0x140003b25
   140003b20:	lea    edx,[rbp+0x1]
   140003b23:	jmp    0x140003b27
   140003b25:	mov    edx,ebp
   140003b27:	test   edx,edx
   140003b29:	jne    0x140003b30
   140003b2b:	xor    r12b,r12b
   140003b2e:	jmp    0x140003b57
   140003b30:	cmp    edx,r8d
   140003b33:	jne    0x140003b3a
   140003b35:	xor    r12b,r12b
   140003b38:	jmp    0x140003b57
   140003b3a:	mov    rcx,QWORD PTR [r13+0x40]
   140003b3e:	mov    eax,0x55555556
   140003b43:	imul   edx
   140003b45:	mov    eax,edx
   140003b47:	shr    eax,0x1f
   140003b4a:	add    eax,edx
   140003b4c:	cdqe   
   140003b4e:	add    rax,QWORD PTR [rcx+0x10]
   140003b52:	movzx  r12d,BYTE PTR [rax+rcx*1]
   140003b57:	cmp    ebp,DWORD PTR [r13+0x4c]
   140003b5b:	lea    esi,[rbp+0x1]
   140003b5e:	mov    eax,0x55555556
   140003b63:	sete   dil
   140003b67:	imul   esi
   140003b69:	mov    eax,edx
   140003b6b:	shr    eax,0x1f
   140003b6e:	add    edx,eax
   140003b70:	lea    ecx,[rdx+rdx*2]
   140003b73:	mov    edx,ebp
   140003b75:	cmp    esi,ecx
   140003b77:	lea    rcx,[r13+0x38]
   140003b7b:	sete   bl
   140003b7e:	call   QWORD PTR [rip+0x8834]        # 0x14000c3b8
   140003b84:	lea    rdx,[rsp+0x1c0]
   140003b8c:	movzx  r9d,bl
   140003b90:	mov    r8b,0x1
   140003b93:	mov    rcx,rax
   140003b96:	mov    BYTE PTR [rsp+0x28],r12b
   140003b9b:	mov    BYTE PTR [rsp+0x20],dil
   140003ba0:	call   0x1400011d0
   140003ba5:	mov    rax,QWORD PTR [r13+0x38]
   140003ba9:	mov    ebp,esi
   140003bab:	mov    r8d,DWORD PTR [rax+0x4]
   140003baf:	dec    r8d
   140003bb2:	cmp    esi,r8d
   140003bb5:	jl     0x140003ae0
   140003bbb:	mov    r12,QWORD PTR [rsp+0x180]
   140003bc3:	lea    rcx,[rsp+0x1d0]
   140003bcb:	call   QWORD PTR [rip+0x890f]        # 0x14000c4e0
   140003bd1:	lea    rcx,[rsp+0x1c0]
   140003bd9:	call   QWORD PTR [rip+0x8949]        # 0x14000c528
   140003bdf:	add    rsp,0x188
   140003be6:	pop    r14
   140003be8:	pop    r13
   140003bea:	pop    rdi
   140003beb:	pop    rsi
   140003bec:	pop    rbp
   140003bed:	pop    rbx
   140003bee:	ret    
   140003bef:	int3   
   140003bf0:	rex push rbx
   140003bf2:	push   rbp
   140003bf3:	push   rdi
   140003bf4:	sub    rsp,0x30
   140003bf8:	mov    rbp,rcx
   140003bfb:	lea    rcx,[rsp+0x50]
   140003c00:	mov    edx,0x2d
   140003c05:	mov    QWORD PTR [rsp+0x20],r13
   140003c0a:	call   QWORD PTR [rip+0x8680]        # 0x14000c290
   140003c10:	xor    r13d,r13d
   140003c13:	cmp    DWORD PTR [rbp+0x48],r13d
   140003c17:	jle    0x140003c86
   140003c19:	mov    QWORD PTR [rsp+0x68],rsi
   140003c1e:	mov    QWORD PTR [rsp+0x28],r12
   140003c23:	mov    esi,0x1
   140003c28:	nop    DWORD PTR [rax+rax*1+0x0]
   140003c30:	lea    edx,[rsi+0x1]
   140003c33:	lea    rcx,[rbp+0x38]
   140003c37:	call   QWORD PTR [rip+0x877b]        # 0x14000c3b8
   140003c3d:	lea    rcx,[rbp+0x38]
   140003c41:	mov    edx,esi
   140003c43:	mov    rdi,rax
   140003c46:	call   QWORD PTR [rip+0x876c]        # 0x14000c3b8
   140003c4c:	lea    edx,[rsi-0x1]
   140003c4f:	lea    rcx,[rbp+0x38]
   140003c53:	mov    rbx,rax
   140003c56:	call   QWORD PTR [rip+0x875c]        # 0x14000c3b8
   140003c5c:	lea    rcx,[rsp+0x50]
   140003c61:	mov    r9,rdi
   140003c64:	mov    rdx,rax
   140003c67:	mov    r8,rbx
   140003c6a:	call   QWORD PTR [rip+0x85f0]        # 0x14000c260
   140003c70:	inc    r13d
   140003c73:	add    esi,0x3
   140003c76:	cmp    r13d,DWORD PTR [rbp+0x48]
   140003c7a:	jl     0x140003c30
   140003c7c:	mov    r12,QWORD PTR [rsp+0x28]
   140003c81:	mov    rsi,QWORD PTR [rsp+0x68]
   140003c86:	lea    rdx,[rsp+0x50]
   140003c8b:	lea    rcx,[rbp+0x30]
   140003c8f:	call   QWORD PTR [rip+0x861b]        # 0x14000c2b0
   140003c95:	mov    r13,QWORD PTR [rsp+0x20]
   140003c9a:	test   al,al
   140003c9c:	jne    0x140003d33
   140003ca2:	lea    rdx,[rsp+0x50]
   140003ca7:	lea    rcx,[rbp+0x30]
   140003cab:	mov    BYTE PTR [rbp+0xa8],0x1
   140003cb2:	call   QWORD PTR [rip+0x8600]        # 0x14000c2b8
   140003cb8:	lea    rdx,[rsp+0x60]
   140003cbd:	lea    rcx,[rbp+0x30]
   140003cc1:	call   QWORD PTR [rip+0x85f9]        # 0x14000c2c0
   140003cc7:	lea    rcx,[rbp+0x38]
   140003ccb:	mov    rdx,rax
   140003cce:	call   QWORD PTR [rip+0x86f4]        # 0x14000c3c8
   140003cd4:	lea    rcx,[rsp+0x60]
   140003cd9:	call   QWORD PTR [rip+0x86f1]        # 0x14000c3d0
   140003cdf:	mov    r11,QWORD PTR [rbp+0x38]
   140003ce3:	mov    eax,0x55555556
   140003ce8:	mov    rcx,rbp
   140003ceb:	imul   DWORD PTR [r11+0x4]
   140003cef:	mov    eax,edx
   140003cf1:	shr    eax,0x1f
   140003cf4:	add    edx,eax
   140003cf6:	mov    DWORD PTR [rbp+0x48],edx
   140003cf9:	call   QWORD PTR [rip+0x8971]        # 0x14000c670
   140003cff:	mov    rcx,rbp
   140003d02:	call   0x14000a310
   140003d07:	lea    rdx,[rsp+0x58]
   140003d0c:	mov    rcx,rbp
   140003d0f:	call   0x140002360
   140003d14:	lea    rdx,[rsp+0x58]
   140003d19:	mov    rcx,rbp
   140003d1c:	call   0x14000a330
   140003d21:	lea    rcx,[rsp+0x58]
   140003d26:	mov    BYTE PTR [rbp+0xa8],0x0
   140003d2d:	call   QWORD PTR [rip+0x86ad]        # 0x14000c3e0
   140003d33:	mov    rcx,rbp
   140003d36:	call   0x1400026c0
   140003d3b:	lea    rcx,[rsp+0x50]
   140003d40:	call   QWORD PTR [rip+0x862a]        # 0x14000c370
   140003d46:	add    rsp,0x30
   140003d4a:	pop    rdi
   140003d4b:	pop    rbp
   140003d4c:	pop    rbx
   140003d4d:	ret    
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	mov    QWORD PTR [rsp+0x20],rbx
   140003d55:	push   rdi
   140003d56:	sub    rsp,0x50
   140003d5a:	cmp    BYTE PTR [rcx+0x50],0x0
   140003d5e:	mov    QWORD PTR [rsp+0x68],rsi
   140003d63:	mov    rdi,rcx
   140003d66:	mov    rsi,rdx
   140003d69:	jne    0x140003dae
   140003d6b:	lea    rdx,[rsp+0x70]
   140003d70:	mov    rcx,rsi
   140003d73:	call   QWORD PTR [rip+0x87b7]        # 0x14000c530
   140003d79:	mov    r8d,DWORD PTR [rdi+0x58]
   140003d7d:	lea    rcx,[rsp+0x60]
   140003d82:	sub    r8d,DWORD PTR [rax+0x4]
   140003d86:	mov    r11,rax
   140003d89:	mov    eax,DWORD PTR [rdi+0x54]
   140003d8c:	sub    eax,DWORD PTR [r11]
   140003d8f:	mov    DWORD PTR [rsp+0x64],r8d
   140003d94:	mov    DWORD PTR [rsp+0x60],eax
   140003d98:	call   QWORD PTR [rip+0x84b2]        # 0x14000c250
   140003d9e:	mov    ebx,eax
   140003da0:	call   QWORD PTR [rip+0x88d2]        # 0x14000c678
   140003da6:	cmp    ebx,eax
   140003da8:	jle    0x140003dae
   140003daa:	mov    BYTE PTR [rdi+0x50],0x1
   140003dae:	lea    rdx,[rsp+0x60]
   140003db3:	mov    rcx,rsi
   140003db6:	call   QWORD PTR [rip+0x8774]        # 0x14000c530
   140003dbc:	cmp    BYTE PTR [rdi+0x50],0x0
   140003dc0:	mov    rsi,QWORD PTR [rsp+0x68]
   140003dc5:	movsd  xmm0,QWORD PTR [rip+0x97eb]        # 0x14000d5b8
   140003dcd:	movd   xmm1,DWORD PTR [rax+0x4]
   140003dd2:	movd   xmm2,DWORD PTR [rax]
   140003dd6:	cvtdq2pd xmm1,xmm1
   140003dda:	cvtdq2pd xmm2,xmm2
   140003dde:	subsd  xmm1,xmm0
   140003de2:	subsd  xmm2,xmm0
   140003de6:	movsd  xmm0,QWORD PTR [rip+0x9782]        # 0x14000d570
   140003dee:	divsd  xmm1,QWORD PTR [rip+0x97ba]        # 0x14000d5b0
   140003df6:	divsd  xmm2,QWORD PTR [rip+0x97aa]        # 0x14000d5a8
   140003dfe:	subsd  xmm0,xmm1
   140003e02:	movsd  QWORD PTR [rsp+0x20],xmm2
   140003e08:	movsd  QWORD PTR [rsp+0x28],xmm0
   140003e0e:	je     0x140004046
   140003e14:	mov    r10d,DWORD PTR [rdi+0x4c]
   140003e18:	test   r10d,r10d
   140003e1b:	js     0x140004046
   140003e21:	mov    rax,QWORD PTR [rdi+0x38]
   140003e25:	cmp    r10d,DWORD PTR [rax+0x4]
   140003e29:	jge    0x140004046
   140003e2f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140003e34:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140003e39:	movsd  xmm6,QWORD PTR [rip+0x97a7]        # 0x14000d5e8
   140003e41:	comisd xmm2,xmm6
   140003e45:	movaps XMMWORD PTR [rsp+0x30],xmm7
   140003e4a:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140003e50:	jbe    0x140003e5a
   140003e52:	movsd  QWORD PTR [rsp+0x20],xmm6
   140003e58:	jmp    0x140003e60
   140003e5a:	movsd  xmm6,QWORD PTR [rsp+0x20]
   140003e60:	movsd  xmm0,QWORD PTR [rip+0x9778]        # 0x14000d5e0
   140003e68:	comisd xmm0,xmm6
   140003e6c:	jbe    0x140003e78
   140003e6e:	movsd  QWORD PTR [rsp+0x20],xmm0
   140003e74:	movapd xmm6,xmm0
   140003e78:	movsd  xmm0,QWORD PTR [rip+0x9758]        # 0x14000d5d8
   140003e80:	movsd  xmm7,QWORD PTR [rsp+0x28]
   140003e86:	comisd xmm0,xmm7
   140003e8a:	jbe    0x140003e96
   140003e8c:	movsd  QWORD PTR [rsp+0x28],xmm0
   140003e92:	movapd xmm7,xmm0
   140003e96:	movsd  xmm0,QWORD PTR [rip+0x9732]        # 0x14000d5d0
   140003e9e:	comisd xmm7,xmm0
   140003ea2:	jbe    0x140003eae
   140003ea4:	movsd  QWORD PTR [rsp+0x28],xmm0
   140003eaa:	movapd xmm7,xmm0
   140003eae:	lea    ecx,[r10+0x1]
   140003eb2:	mov    eax,0x55555556
   140003eb7:	imul   ecx
   140003eb9:	mov    eax,edx
   140003ebb:	shr    eax,0x1f
   140003ebe:	add    edx,eax
   140003ec0:	lea    eax,[rdx+rdx*2]
   140003ec3:	cmp    ecx,eax
   140003ec5:	jne    0x140003f50
   140003ecb:	lea    rcx,[rdi+0x38]
   140003ecf:	mov    edx,r10d
   140003ed2:	call   QWORD PTR [rip+0x8380]        # 0x14000c258
   140003ed8:	mov    edx,DWORD PTR [rdi+0x4c]
   140003edb:	lea    rcx,[rdi+0x38]
   140003edf:	subsd  xmm6,QWORD PTR [rax]
   140003ee3:	subsd  xmm7,QWORD PTR [rax+0x8]
   140003ee8:	call   QWORD PTR [rip+0x836a]        # 0x14000c258
   140003eee:	lea    rdx,[rsp+0x20]
   140003ef3:	mov    rcx,QWORD PTR [rdx]
   140003ef6:	mov    QWORD PTR [rax],rcx
   140003ef9:	mov    rcx,QWORD PTR [rdx+0x8]
   140003efd:	mov    QWORD PTR [rax+0x8],rcx
   140003f01:	mov    edx,DWORD PTR [rdi+0x4c]
   140003f04:	lea    rcx,[rdi+0x38]
   140003f08:	dec    edx
   140003f0a:	call   QWORD PTR [rip+0x8348]        # 0x14000c258
   140003f10:	lea    rcx,[rdi+0x38]
   140003f14:	movapd xmm0,xmm6
   140003f18:	movapd xmm1,xmm7
   140003f1c:	addsd  xmm0,QWORD PTR [rax]
   140003f20:	addsd  xmm1,QWORD PTR [rax+0x8]
   140003f25:	movsd  QWORD PTR [rax],xmm0
   140003f29:	movsd  QWORD PTR [rax+0x8],xmm1
   140003f2e:	mov    edx,DWORD PTR [rdi+0x4c]
   140003f31:	inc    edx
   140003f33:	call   QWORD PTR [rip+0x831f]        # 0x14000c258
   140003f39:	addsd  xmm6,QWORD PTR [rax]
   140003f3d:	addsd  xmm7,QWORD PTR [rax+0x8]
   140003f42:	movsd  QWORD PTR [rax],xmm6
   140003f46:	movsd  QWORD PTR [rax+0x8],xmm7
   140003f4b:	jmp    0x140004034
   140003f50:	mov    edx,r10d
   140003f53:	mov    rcx,rdi
   140003f56:	call   0x1400027d0
   140003f5b:	test   al,al
   140003f5d:	jne    0x140003f84
   140003f5f:	lea    rcx,[rdi+0x38]
   140003f63:	mov    edx,r10d
   140003f66:	call   QWORD PTR [rip+0x82ec]        # 0x14000c258
   140003f6c:	lea    rdx,[rsp+0x20]
   140003f71:	mov    rcx,QWORD PTR [rdx]
   140003f74:	mov    QWORD PTR [rax],rcx
   140003f77:	mov    rcx,QWORD PTR [rdx+0x8]
   140003f7b:	mov    QWORD PTR [rax+0x8],rcx
   140003f7f:	jmp    0x140004034
   140003f84:	lea    rcx,[rdi+0x38]
   140003f88:	mov    edx,r10d
   140003f8b:	call   QWORD PTR [rip+0x82c7]        # 0x14000c258
   140003f91:	mov    edx,DWORD PTR [rdi+0x4c]
   140003f94:	lea    rcx,[rdi+0x38]
   140003f98:	subsd  xmm6,QWORD PTR [rax]
   140003f9c:	subsd  xmm7,QWORD PTR [rax+0x8]
   140003fa1:	call   QWORD PTR [rip+0x82b1]        # 0x14000c258
   140003fa7:	lea    rdx,[rsp+0x20]
   140003fac:	mov    rcx,QWORD PTR [rdx]
   140003faf:	mov    QWORD PTR [rax],rcx
   140003fb2:	mov    rcx,QWORD PTR [rdx+0x8]
   140003fb6:	mov    QWORD PTR [rax+0x8],rcx
   140003fba:	mov    r8d,DWORD PTR [rdi+0x4c]
   140003fbe:	cmp    r8d,0x1
   140003fc2:	jle    0x140003fe1
   140003fc4:	mov    eax,0x55555556
   140003fc9:	imul   r8d
   140003fcc:	mov    eax,edx
   140003fce:	shr    eax,0x1f
   140003fd1:	add    edx,eax
   140003fd3:	lea    ecx,[rdx+rdx*2]
   140003fd6:	cmp    r8d,ecx
   140003fd9:	jne    0x140003fe1
   140003fdb:	lea    edx,[r8-0x2]
   140003fdf:	jmp    0x140004010
   140003fe1:	mov    rcx,QWORD PTR [rdi+0x38]
   140003fe5:	mov    edx,DWORD PTR [rcx+0x4]
   140003fe8:	sub    edx,0x2
   140003feb:	cmp    r8d,edx
   140003fee:	jge    0x140004034
   140003ff0:	mov    eax,0x55555556
   140003ff5:	mov    ecx,r8d
   140003ff8:	imul   r8d
   140003ffb:	mov    eax,edx
   140003ffd:	shr    eax,0x1f
   140004000:	add    edx,eax
   140004002:	lea    eax,[rdx+rdx*2]
   140004005:	sub    ecx,eax
   140004007:	cmp    ecx,0x1
   14000400a:	jne    0x140004034
   14000400c:	lea    edx,[r8+0x2]
   140004010:	lea    rcx,[rdi+0x38]
   140004014:	call   QWORD PTR [rip+0x823e]        # 0x14000c258
   14000401a:	movsd  xmm1,QWORD PTR [rax+0x8]
   14000401f:	movsd  xmm0,QWORD PTR [rax]
   140004023:	subsd  xmm1,xmm7
   140004027:	subsd  xmm0,xmm6
   14000402b:	movsd  QWORD PTR [rax+0x8],xmm1
   140004030:	movsd  QWORD PTR [rax],xmm0
   140004034:	mov    rcx,rdi
   140004037:	call   0x140003bf0
   14000403c:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140004041:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140004046:	mov    rbx,QWORD PTR [rsp+0x78]
   14000404b:	add    rsp,0x50
   14000404f:	pop    rdi
   140004050:	ret    
   140004051:	int3   
   140004052:	int3   
   140004053:	int3   
   140004054:	int3   
   140004055:	int3   
   140004056:	int3   
   140004057:	int3   
   140004058:	int3   
   140004059:	int3   
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	mov    QWORD PTR [rsp+0x8],rbx
   140004065:	push   rdi
   140004066:	sub    rsp,0x30
   14000406a:	mov    rbx,rcx
   14000406d:	mov    rcx,QWORD PTR [rcx]
   140004070:	lea    r8,[rip+0xffffffffffffe619]        # 0x140002690
   140004077:	lea    rdx,[rip+0xffffffffffffe202]        # 0x140002280
   14000407e:	mov    r9d,0x20
   140004084:	mov    DWORD PTR [rsp+0x20],0x8
   14000408c:	call   QWORD PTR [rip+0x81ae]        # 0x14000c240
   140004092:	mov    rdi,rax
   140004095:	mov    rax,QWORD PTR [rbx]
   140004098:	mov    ecx,DWORD PTR [rax+0x10]
   14000409b:	test   ecx,ecx
   14000409d:	je     0x1400040b0
   14000409f:	cmp    ecx,0xffffffff
   1400040a2:	je     0x1400040c0
   1400040a4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400040a9:	setne  al
   1400040ac:	test   al,al
   1400040ae:	jne    0x1400040c0
   1400040b0:	mov    rcx,QWORD PTR [rbx]
   1400040b3:	lea    rdx,[rip+0xffffffffffffe5d6]        # 0x140002690
   1400040ba:	call   QWORD PTR [rip+0x81c8]        # 0x14000c288
   1400040c0:	mov    QWORD PTR [rbx],rdi
   1400040c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400040c8:	add    rsp,0x30
   1400040cc:	pop    rdi
   1400040cd:	ret    
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400040d5:	push   rdi
   1400040d6:	sub    rsp,0x20
   1400040da:	mov    rbx,rcx
   1400040dd:	mov    rcx,QWORD PTR [rdx]
   1400040e0:	mov    rdi,rdx
   1400040e3:	cmp    QWORD PTR [rbx],rcx
   1400040e6:	je     0x14000418e
   1400040ec:	mov    QWORD PTR [rsp+0x30],rcx
   1400040f1:	mov    eax,DWORD PTR [rcx]
   1400040f3:	test   eax,eax
   1400040f5:	je     0x140004102
   1400040f7:	cmp    eax,0xffffffff
   1400040fa:	je     0x140004155
   1400040fc:	lock add DWORD PTR [rcx],0x1
   140004100:	jmp    0x140004150
   140004102:	mov    edx,DWORD PTR [rcx+0x4]
   140004105:	lea    rcx,[rsp+0x30]
   14000410a:	call   QWORD PTR [rip+0x8188]        # 0x14000c298
   140004110:	mov    rcx,QWORD PTR [rsp+0x30]
   140004115:	mov    rdx,QWORD PTR [rdi]
   140004118:	movsxd rax,DWORD PTR [rcx+0xc]
   14000411c:	lea    r8,[rcx+rax*8+0x10]
   140004121:	movsxd rax,DWORD PTR [rdx+0x8]
   140004125:	lea    rdx,[rdx+rax*8+0x10]
   14000412a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000412e:	lea    r9,[rcx+rax*8+0x10]
   140004133:	cmp    rdx,r9
   140004136:	je     0x140004155
   140004138:	sub    r8,r9
   14000413b:	sar    r8,0x3
   14000413f:	test   r8,r8
   140004142:	jle    0x140004155
   140004144:	shl    r8,0x3
   140004148:	mov    rcx,r9
   14000414b:	call   0x14000b112
   140004150:	mov    rcx,QWORD PTR [rsp+0x30]
   140004155:	lea    rax,[rsp+0x30]
   14000415a:	cmp    rax,rbx
   14000415d:	je     0x14000416d
   14000415f:	mov    rax,rcx
   140004162:	mov    rcx,QWORD PTR [rbx]
   140004165:	mov    QWORD PTR [rsp+0x30],rcx
   14000416a:	mov    QWORD PTR [rbx],rax
   14000416d:	mov    eax,DWORD PTR [rcx]
   14000416f:	test   eax,eax
   140004171:	je     0x140004188
   140004173:	cmp    eax,0xffffffff
   140004176:	je     0x14000418e
   140004178:	lock add DWORD PTR [rcx],0xffffffff
   14000417c:	setne  al
   14000417f:	test   al,al
   140004181:	jne    0x14000418e
   140004183:	mov    rcx,QWORD PTR [rsp+0x30]
   140004188:	call   QWORD PTR [rip+0x8162]        # 0x14000c2f0
   14000418e:	mov    rax,rbx
   140004191:	mov    rbx,QWORD PTR [rsp+0x38]
   140004196:	add    rsp,0x20
   14000419a:	pop    rdi
   14000419b:	ret    
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	mov    QWORD PTR [rsp+0x20],rsi
   1400041a5:	push   rdi
   1400041a6:	sub    rsp,0x20
   1400041aa:	mov    rdi,QWORD PTR [rip+0x81ef]        # 0x14000c3a0
   1400041b1:	mov    QWORD PTR [rsp+0x40],rbp
   1400041b6:	mov    rbp,rcx
   1400041b9:	cmp    rdi,QWORD PTR [rcx]
   1400041bc:	je     0x1400042b3
   1400041c2:	mov    eax,DWORD PTR [rdi]
   1400041c4:	mov    QWORD PTR [rsp+0x38],rbx
   1400041c9:	test   eax,eax
   1400041cb:	je     0x1400041e3
   1400041cd:	cmp    eax,0xffffffff
   1400041d0:	je     0x1400041d6
   1400041d2:	lock add DWORD PTR [rdi],0x1
   1400041d6:	mov    rbx,rdi
   1400041d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400041de:	jmp    0x140004267
   1400041e3:	mov    r8d,DWORD PTR [rdi+0x8]
   1400041e7:	bt     r8d,0x1f
   1400041ec:	jae    0x140004216
   1400041ee:	xor    r9d,r9d
   1400041f1:	and    r8d,0x7fffffff
   1400041f8:	lea    edx,[r9+0x8]
   1400041fc:	lea    ecx,[rdx-0x7]
   1400041ff:	call   QWORD PTR [rip+0x8163]        # 0x14000c368
   140004205:	mov    rbx,rax
   140004208:	mov    QWORD PTR [rsp+0x30],rax
   14000420d:	or     DWORD PTR [rax+0x8],0x80000000
   140004214:	jmp    0x140004232
   140004216:	movsxd r8,DWORD PTR [rdi+0x4]
   14000421a:	xor    r9d,r9d
   14000421d:	lea    edx,[r9+0x8]
   140004221:	lea    ecx,[rdx-0x7]
   140004224:	call   QWORD PTR [rip+0x813e]        # 0x14000c368
   14000422a:	mov    rbx,rax
   14000422d:	mov    QWORD PTR [rsp+0x30],rax
   140004232:	mov    eax,DWORD PTR [rbx+0x8]
   140004235:	btr    eax,0x1f
   140004239:	test   eax,eax
   14000423b:	je     0x140004267
   14000423d:	mov    rax,QWORD PTR [rdi+0x10]
   140004241:	movsxd r8,DWORD PTR [rdi+0x4]
   140004245:	lea    rdx,[rax+rdi*1]
   140004249:	sub    r8,rdx
   14000424c:	add    r8,rax
   14000424f:	mov    rax,QWORD PTR [rbx+0x10]
   140004253:	lea    rcx,[rbx+rax*1]
   140004257:	add    r8,rdi
   14000425a:	call   0x14000b112
   14000425f:	mov    r11d,DWORD PTR [rdi+0x4]
   140004263:	mov    DWORD PTR [rbx+0x4],r11d
   140004267:	lea    rax,[rsp+0x30]
   14000426c:	cmp    rax,rbp
   14000426f:	je     0x140004281
   140004271:	mov    rax,rbx
   140004274:	mov    rbx,QWORD PTR [rbp+0x0]
   140004278:	mov    QWORD PTR [rsp+0x30],rbx
   14000427d:	mov    QWORD PTR [rbp+0x0],rax
   140004281:	mov    eax,DWORD PTR [rbx]
   140004283:	test   eax,eax
   140004285:	je     0x14000429c
   140004287:	cmp    eax,0xffffffff
   14000428a:	je     0x1400042ae
   14000428c:	lock add DWORD PTR [rbx],0xffffffff
   140004290:	setne  al
   140004293:	test   al,al
   140004295:	jne    0x1400042ae
   140004297:	mov    rbx,QWORD PTR [rsp+0x30]
   14000429c:	mov    edx,0x1
   1400042a1:	mov    rcx,rbx
   1400042a4:	lea    r8d,[rdx+0x7]
   1400042a8:	call   QWORD PTR [rip+0x80ea]        # 0x14000c398
   1400042ae:	mov    rbx,QWORD PTR [rsp+0x38]
   1400042b3:	mov    eax,DWORD PTR [rdi]
   1400042b5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400042ba:	test   eax,eax
   1400042bc:	je     0x1400042ce
   1400042be:	cmp    eax,0xffffffff
   1400042c1:	je     0x1400042e0
   1400042c3:	lock add DWORD PTR [rdi],0xffffffff
   1400042c7:	setne  al
   1400042ca:	test   al,al
   1400042cc:	jne    0x1400042e0
   1400042ce:	mov    edx,0x1
   1400042d3:	mov    rcx,rdi
   1400042d6:	lea    r8d,[rdx+0x7]
   1400042da:	call   QWORD PTR [rip+0x80b8]        # 0x14000c398
   1400042e0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400042e5:	add    rsp,0x20
   1400042e9:	pop    rdi
   1400042ea:	ret    
   1400042eb:	int3   
   1400042ec:	int3   
   1400042ed:	int3   
   1400042ee:	int3   
   1400042ef:	int3   
   1400042f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400042f5:	mov    QWORD PTR [rsp+0x20],rbp
   1400042fa:	push   rdi
   1400042fb:	sub    rsp,0x20
   1400042ff:	mov    rax,QWORD PTR [rip+0x80aa]        # 0x14000c3b0
   140004306:	mov    rdi,rdx
   140004309:	mov    rbp,rcx
   14000430c:	mov    QWORD PTR [rdx],rax
   14000430f:	mov    rax,QWORD PTR [rcx]
   140004312:	mov    edx,DWORD PTR [rax+0x14]
   140004315:	mov    rax,QWORD PTR [rip+0x8094]        # 0x14000c3b0
   14000431c:	cmp    DWORD PTR [rax+0x4],edx
   14000431f:	jge    0x14000433f
   140004321:	mov    eax,DWORD PTR [rax]
   140004323:	cmp    eax,0x1
   140004326:	je     0x140004336
   140004328:	test   eax,eax
   14000432a:	je     0x140004336
   14000432c:	mov    rcx,rdi
   14000432f:	call   0x140002ef0
   140004334:	jmp    0x14000433f
   140004336:	mov    rcx,rdi
   140004339:	call   QWORD PTR [rip+0x7ef9]        # 0x14000c238
   14000433f:	mov    rax,QWORD PTR [rbp+0x0]
   140004343:	mov    ecx,DWORD PTR [rax+0x20]
   140004346:	mov    rbx,QWORD PTR [rax+0x8]
   14000434a:	test   ecx,ecx
   14000434c:	je     0x14000435f
   14000434e:	xchg   ax,ax
   140004350:	dec    ecx
   140004352:	cmp    QWORD PTR [rbx],rax
   140004355:	jne    0x1400043a5
   140004357:	add    rbx,0x8
   14000435b:	test   ecx,ecx
   14000435d:	jne    0x140004350
   14000435f:	mov    rbx,rax
   140004362:	cmp    rbx,rax
   140004365:	je     0x1400043e1
   140004367:	mov    QWORD PTR [rsp+0x38],rsi
   14000436c:	nop    DWORD PTR [rax+0x0]
   140004370:	mov    rax,QWORD PTR [rdi]
   140004373:	mov    ecx,DWORD PTR [rax]
   140004375:	cmp    ecx,0x1
   140004378:	je     0x1400043aa
   14000437a:	test   ecx,ecx
   14000437c:	je     0x1400043aa
   14000437e:	mov    edx,0x7fffffff
   140004383:	mov    r8d,0x1
   140004389:	mov    rcx,rdi
   14000438c:	call   0x1400028f0
   140004391:	test   rax,rax
   140004394:	je     0x1400043ca
   140004396:	lea    rdx,[rbx+0x10]
   14000439a:	mov    rcx,rax
   14000439d:	call   QWORD PTR [rip+0x7dad]        # 0x14000c150
   1400043a3:	jmp    0x1400043ca
   1400043a5:	mov    rbx,QWORD PTR [rbx]
   1400043a8:	jmp    0x140004362
   1400043aa:	lea    rdx,[rbx+0x10]
   1400043ae:	lea    rcx,[rsp+0x30]
   1400043b3:	call   QWORD PTR [rip+0x7d97]        # 0x14000c150
   1400043b9:	mov    rcx,rdi
   1400043bc:	call   QWORD PTR [rip+0x7e86]        # 0x14000c248
   1400043c2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400043c7:	mov    QWORD PTR [rax],rcx
   1400043ca:	mov    rcx,rbx
   1400043cd:	call   QWORD PTR [rip+0x7fa5]        # 0x14000c378
   1400043d3:	mov    rbx,rax
   1400043d6:	cmp    rax,QWORD PTR [rbp+0x0]
   1400043da:	jne    0x140004370
   1400043dc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400043e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043e6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400043eb:	mov    rax,rdi
   1400043ee:	add    rsp,0x20
   1400043f2:	pop    rdi
   1400043f3:	ret    
   1400043f4:	int3   
   1400043f5:	int3   
   1400043f6:	int3   
   1400043f7:	int3   
   1400043f8:	int3   
   1400043f9:	int3   
   1400043fa:	int3   
   1400043fb:	int3   
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	rex push rbx
   140004402:	sub    rsp,0x20
   140004406:	mov    rbx,rcx
   140004409:	mov    rcx,QWORD PTR [rcx]
   14000440c:	mov    eax,DWORD PTR [rcx]
   14000440e:	cmp    eax,0x1
   140004411:	je     0x14000445a
   140004413:	test   eax,eax
   140004415:	je     0x14000445a
   140004417:	mov    r8d,DWORD PTR [rcx+0x8]
   14000441b:	btr    r8d,0x1f
   140004420:	test   r8d,r8d
   140004423:	jne    0x14000444c
   140004425:	lea    r9d,[r8+0x2]
   140004429:	xor    r8d,r8d
   14000442c:	lea    edx,[r9+0x6]
   140004430:	lea    ecx,[rdx-0x7]
   140004433:	call   QWORD PTR [rip+0x7f2f]        # 0x14000c368
   140004439:	mov    QWORD PTR [rbx],rax
   14000443c:	mov    rcx,rax
   14000443f:	mov    rax,QWORD PTR [rax+0x10]
   140004443:	add    rax,rcx
   140004446:	add    rsp,0x20
   14000444a:	pop    rbx
   14000444b:	ret    
   14000444c:	mov    edx,DWORD PTR [rcx+0x4]
   14000444f:	xor    r9d,r9d
   140004452:	mov    rcx,rbx
   140004455:	call   0x140002a30
   14000445a:	mov    rcx,QWORD PTR [rbx]
   14000445d:	mov    rax,QWORD PTR [rcx+0x10]
   140004461:	add    rax,rcx
   140004464:	add    rsp,0x20
   140004468:	pop    rbx
   140004469:	ret    
   14000446a:	int3   
   14000446b:	int3   
   14000446c:	int3   
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	rex push rbx
   140004472:	push   rbp
   140004473:	push   rsi
   140004474:	sub    rsp,0x20
   140004478:	mov    rbp,rcx
   14000447b:	add    rcx,0x40
   14000447f:	call   0x1400041a0
   140004484:	mov    eax,DWORD PTR [rbp+0x48]
   140004487:	xor    ebx,ebx
   140004489:	dec    eax
   14000448b:	test   eax,eax
   14000448d:	jle    0x140004550
   140004493:	mov    QWORD PTR [rsp+0x40],rdi
   140004498:	mov    QWORD PTR [rsp+0x48],r12
   14000449d:	mov    QWORD PTR [rsp+0x50],r13
   1400044a2:	mov    edi,0x2
   1400044a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400044b0:	mov    edx,edi
   1400044b2:	mov    rcx,rbp
   1400044b5:	call   0x1400020e0
   1400044ba:	mov    rcx,QWORD PTR [rbp+0x40]
   1400044be:	mov    r11d,DWORD PTR [rcx+0x4]
   1400044c2:	mov    r8d,DWORD PTR [rcx+0x8]
   1400044c6:	mov    edx,DWORD PTR [rcx]
   1400044c8:	btr    r8d,0x1f
   1400044cd:	lea    r13d,[r11+0x1]
   1400044d1:	movzx  r12d,al
   1400044d5:	cmp    r13d,r8d
   1400044d8:	seta   r10b
   1400044dc:	cmp    edx,0x1
   1400044df:	je     0x1400044e5
   1400044e1:	test   edx,edx
   1400044e3:	jne    0x1400044f8
   1400044e5:	test   r10b,r10b
   1400044e8:	jne    0x1400044f8
   1400044ea:	movsxd rax,DWORD PTR [rcx+0x4]
   1400044ee:	add    rax,QWORD PTR [rcx+0x10]
   1400044f2:	mov    BYTE PTR [rax+rcx*1],r12b
   1400044f6:	jmp    0x140004528
   1400044f8:	movzx  eax,r10b
   1400044fc:	lea    rcx,[rbp+0x40]
   140004500:	mov    edx,r11d
   140004503:	neg    al
   140004505:	sbb    r9d,r9d
   140004508:	and    r9d,0x8
   14000450c:	test   r10b,r10b
   14000450f:	cmovne r8d,r13d
   140004513:	call   0x140002a30
   140004518:	mov    r11,QWORD PTR [rbp+0x40]
   14000451c:	movsxd rax,DWORD PTR [r11+0x4]
   140004520:	add    rax,QWORD PTR [r11+0x10]
   140004524:	mov    BYTE PTR [rax+r11*1],r12b
   140004528:	mov    rax,QWORD PTR [rbp+0x40]
   14000452c:	inc    ebx
   14000452e:	add    edi,0x3
   140004531:	inc    DWORD PTR [rax+0x4]
   140004534:	mov    eax,DWORD PTR [rbp+0x48]
   140004537:	dec    eax
   140004539:	cmp    ebx,eax
   14000453b:	jl     0x1400044b0
   140004541:	mov    r13,QWORD PTR [rsp+0x50]
   140004546:	mov    r12,QWORD PTR [rsp+0x48]
   14000454b:	mov    rdi,QWORD PTR [rsp+0x40]
   140004550:	add    rsp,0x20
   140004554:	pop    rsi
   140004555:	pop    rbp
   140004556:	pop    rbx
   140004557:	ret    
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    QWORD PTR [rsp+0x20],rbp
   140004565:	push   rdi
   140004566:	sub    rsp,0x20
   14000456a:	mov    rbp,rdx
   14000456d:	lea    rdx,[rsp+0x30]
   140004572:	add    rcx,0x60
   140004576:	call   0x1400042f0
   14000457b:	mov    rcx,rbp
   14000457e:	mov    rdx,rax
   140004581:	call   0x140002840
   140004586:	mov    rdi,QWORD PTR [rsp+0x30]
   14000458b:	mov    eax,DWORD PTR [rdi]
   14000458d:	test   eax,eax
   14000458f:	je     0x1400045a6
   140004591:	cmp    eax,0xffffffff
   140004594:	je     0x1400045f5
   140004596:	lock add DWORD PTR [rdi],0xffffffff
   14000459a:	setne  al
   14000459d:	test   al,al
   14000459f:	jne    0x1400045f5
   1400045a1:	mov    rdi,QWORD PTR [rsp+0x30]
   1400045a6:	movsxd rax,DWORD PTR [rdi+0xc]
   1400045aa:	mov    QWORD PTR [rsp+0x38],rbx
   1400045af:	mov    QWORD PTR [rsp+0x40],rsi
   1400045b4:	lea    rbx,[rdi+rax*8+0x10]
   1400045b9:	movsxd rax,DWORD PTR [rdi+0x8]
   1400045bd:	lea    rsi,[rdi+rax*8+0x10]
   1400045c2:	cmp    rsi,rbx
   1400045c5:	je     0x1400045e2
   1400045c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400045d0:	sub    rbx,0x8
   1400045d4:	mov    rcx,rbx
   1400045d7:	call   QWORD PTR [rip+0x7e03]        # 0x14000c3e0
   1400045dd:	cmp    rbx,rsi
   1400045e0:	jne    0x1400045d0
   1400045e2:	mov    rcx,rdi
   1400045e5:	call   QWORD PTR [rip+0x7d05]        # 0x14000c2f0
   1400045eb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400045f0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400045f5:	mov    rax,rbp
   1400045f8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400045fd:	add    rsp,0x20
   140004601:	pop    rdi
   140004602:	ret    
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    rax,rsp
   140004613:	push   rbx
   140004614:	push   rsi
   140004615:	push   rdi
   140004616:	sub    rsp,0x110
   14000461d:	movaps XMMWORD PTR [rax-0x28],xmm6
   140004621:	movaps XMMWORD PTR [rax-0x38],xmm7
   140004625:	movaps XMMWORD PTR [rax-0x48],xmm8
   14000462a:	mov    rbx,rcx
   14000462d:	lea    rcx,[rax+0x10]
   140004631:	mov    edx,0x2d
   140004636:	movaps XMMWORD PTR [rax-0x58],xmm9
   14000463b:	movaps XMMWORD PTR [rax-0x68],xmm10
   140004640:	movaps XMMWORD PTR [rax-0x78],xmm11
   140004645:	movsd  xmm10,QWORD PTR [rip+0x8f22]        # 0x14000d570
   14000464e:	movsd  QWORD PTR [rsp+0x30],xmm10
   140004655:	movsd  QWORD PTR [rsp+0x38],xmm10
   14000465c:	movaps XMMWORD PTR [rax-0x88],xmm12
   140004664:	movaps XMMWORD PTR [rax-0x98],xmm13
   14000466c:	movaps XMMWORD PTR [rax-0xa8],xmm14
   140004674:	movaps XMMWORD PTR [rsp+0x70],xmm15
   14000467a:	call   QWORD PTR [rip+0x7c10]        # 0x14000c290
   140004680:	movsd  xmm0,QWORD PTR [rip+0x9be8]        # 0x14000e270
   140004688:	movsd  xmm5,QWORD PTR [rip+0x8ee8]        # 0x14000d578
   140004690:	lea    r9,[rsp+0x40]
   140004695:	lea    r8,[rsp+0x50]
   14000469a:	lea    rdx,[rsp+0x60]
   14000469f:	movsd  xmm8,QWORD PTR [rip+0x9bc0]        # 0x14000e268
   1400046a8:	movsd  xmm9,QWORD PTR [rip+0x9baf]        # 0x14000e260
   1400046b1:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400046b7:	lea    rcx,[rsp+0x138]
   1400046bf:	movsd  xmm0,QWORD PTR [rip+0x9b91]        # 0x14000e258
   1400046c7:	movsd  QWORD PTR [rsp+0x40],xmm5
   1400046cd:	movsd  QWORD PTR [rsp+0x48],xmm5
   1400046d3:	movsd  QWORD PTR [rsp+0x58],xmm0
   1400046d9:	movsd  QWORD PTR [rsp+0x60],xmm8
   1400046e0:	movsd  QWORD PTR [rsp+0x68],xmm9
   1400046e7:	call   QWORD PTR [rip+0x7b73]        # 0x14000c260
   1400046ed:	lea    r9,[rsp+0x30]
   1400046f2:	lea    r8,[rsp+0x60]
   1400046f7:	lea    rdx,[rsp+0x50]
   1400046fc:	lea    rcx,[rsp+0x138]
   140004704:	movsd  xmm0,QWORD PTR [rip+0x9b44]        # 0x14000e250
   14000470c:	movsd  xmm1,QWORD PTR [rip+0x9b34]        # 0x14000e248
   140004714:	movsd  QWORD PTR [rsp+0x60],xmm0
   14000471a:	movsd  xmm0,QWORD PTR [rip+0x9b1e]        # 0x14000e240
   140004722:	movsd  QWORD PTR [rsp+0x50],xmm1
   140004728:	movsd  QWORD PTR [rsp+0x68],xmm0
   14000472e:	movsd  xmm0,QWORD PTR [rip+0x9b02]        # 0x14000e238
   140004736:	movsd  QWORD PTR [rsp+0x58],xmm0
   14000473c:	call   QWORD PTR [rip+0x7b1e]        # 0x14000c260
   140004742:	lea    r8,[rip+0x9adf]        # 0x14000e228
   140004749:	lea    rdx,[rsp+0x130]
   140004751:	lea    rcx,[rip+0x18de8]        # 0x14001d540
   140004758:	xor    r9d,r9d
   14000475b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140004763:	call   QWORD PTR [rip+0x79ff]        # 0x14000c168
   140004769:	mov    rax,QWORD PTR [rbx+0x60]
   14000476d:	add    rbx,0x60
   140004771:	mov    ecx,DWORD PTR [rax+0x10]
   140004774:	cmp    ecx,0x1
   140004777:	je     0x140004785
   140004779:	test   ecx,ecx
   14000477b:	je     0x140004785
   14000477d:	mov    rcx,rbx
   140004780:	call   0x140004060
   140004785:	mov    rax,QWORD PTR [rbx]
   140004788:	lea    rcx,[rsp+0x130]
   140004790:	mov    edx,DWORD PTR [rax+0x24]
   140004793:	call   QWORD PTR [rip+0x7b0f]        # 0x14000c2a8
   140004799:	mov    r9,QWORD PTR [rbx]
   14000479c:	mov    ecx,DWORD PTR [r9+0x20]
   1400047a0:	mov    esi,eax
   1400047a2:	test   ecx,ecx
   1400047a4:	je     0x1400047e8
   1400047a6:	xor    edx,edx
   1400047a8:	div    ecx
   1400047aa:	mov    rcx,QWORD PTR [r9+0x8]
   1400047ae:	lea    rdi,[rcx+rdx*8]
   1400047b2:	mov    rcx,QWORD PTR [rcx+rdx*8]
   1400047b6:	cmp    rcx,r9
   1400047b9:	je     0x1400047eb
   1400047bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400047c0:	cmp    esi,DWORD PTR [rcx+0x8]
   1400047c3:	jne    0x1400047db
   1400047c5:	lea    rdx,[rcx+0x10]
   1400047c9:	lea    rcx,[rsp+0x130]
   1400047d1:	call   QWORD PTR [rip+0x7b81]        # 0x14000c358
   1400047d7:	test   al,al
   1400047d9:	jne    0x1400047eb
   1400047db:	mov    rdi,QWORD PTR [rdi]
   1400047de:	mov    rcx,QWORD PTR [rdi]
   1400047e1:	cmp    rcx,QWORD PTR [rbx]
   1400047e4:	jne    0x1400047c0
   1400047e6:	jmp    0x1400047eb
   1400047e8:	mov    rdi,rbx
   1400047eb:	mov    rcx,QWORD PTR [rdi]
   1400047ee:	mov    rax,QWORD PTR [rbx]
   1400047f1:	mov    QWORD PTR [rsp+0x140],rbp
   1400047f9:	cmp    rcx,rax
   1400047fc:	jne    0x1400048cb
   140004802:	mov    rcx,rax
   140004805:	call   QWORD PTR [rip+0x7a25]        # 0x14000c230
   14000480b:	test   al,al
   14000480d:	je     0x140004870
   14000480f:	mov    rax,QWORD PTR [rbx]
   140004812:	lea    rcx,[rsp+0x130]
   14000481a:	mov    edx,DWORD PTR [rax+0x24]
   14000481d:	call   QWORD PTR [rip+0x7a85]        # 0x14000c2a8
   140004823:	mov    r8,QWORD PTR [rbx]
   140004826:	mov    ecx,DWORD PTR [r8+0x20]
   14000482a:	mov    esi,eax
   14000482c:	test   ecx,ecx
   14000482e:	je     0x14000486d
   140004830:	xor    edx,edx
   140004832:	div    ecx
   140004834:	mov    rax,QWORD PTR [r8+0x8]
   140004838:	lea    rdi,[rax+rdx*8]
   14000483c:	mov    rax,QWORD PTR [rax+rdx*8]
   140004840:	cmp    rax,r8
   140004843:	je     0x140004870
   140004845:	cmp    esi,DWORD PTR [rax+0x8]
   140004848:	jne    0x140004860
   14000484a:	lea    rdx,[rax+0x10]
   14000484e:	lea    rcx,[rsp+0x130]
   140004856:	call   QWORD PTR [rip+0x7afc]        # 0x14000c358
   14000485c:	test   al,al
   14000485e:	jne    0x140004870
   140004860:	mov    rdi,QWORD PTR [rdi]
   140004863:	mov    rax,QWORD PTR [rdi]
   140004866:	cmp    rax,QWORD PTR [rbx]
   140004869:	jne    0x140004845
   14000486b:	jmp    0x140004870
   14000486d:	mov    rdi,rbx
   140004870:	mov    rcx,QWORD PTR [rbx]
   140004873:	mov    edx,0x8
   140004878:	call   QWORD PTR [rip+0x7a6a]        # 0x14000c2e8
   14000487e:	mov    rbp,rax
   140004881:	test   rax,rax
   140004884:	je     0x1400048be
   140004886:	mov    rcx,QWORD PTR [rdi]
   140004889:	lea    rdx,[rsp+0x130]
   140004891:	mov    DWORD PTR [rax+0x8],esi
   140004894:	mov    QWORD PTR [rax],rcx
   140004897:	lea    rcx,[rax+0x10]
   14000489b:	call   QWORD PTR [rip+0x78af]        # 0x14000c150
   1400048a1:	lea    rcx,[rbp+0x18]
   1400048a5:	lea    rdx,[rsp+0x138]
   1400048ad:	call   QWORD PTR [rip+0x7aad]        # 0x14000c360
   1400048b3:	mov    QWORD PTR [rdi],rbp
   1400048b6:	mov    rax,QWORD PTR [rbx]
   1400048b9:	inc    DWORD PTR [rax+0x14]
   1400048bc:	jmp    0x1400048dd
   1400048be:	xor    ebp,ebp
   1400048c0:	mov    QWORD PTR [rdi],rbp
   1400048c3:	mov    rax,QWORD PTR [rbx]
   1400048c6:	inc    DWORD PTR [rax+0x14]
   1400048c9:	jmp    0x1400048dd
   1400048cb:	lea    rdx,[rsp+0x138]
   1400048d3:	add    rcx,0x18
   1400048d7:	call   QWORD PTR [rip+0x79db]        # 0x14000c2b8
   1400048dd:	lea    rcx,[rsp+0x130]
   1400048e5:	call   QWORD PTR [rip+0x7af5]        # 0x14000c3e0
   1400048eb:	lea    rcx,[rsp+0x138]
   1400048f3:	call   QWORD PTR [rip+0x7a77]        # 0x14000c370
   1400048f9:	lea    rcx,[rsp+0x138]
   140004901:	mov    edx,0x2d
   140004906:	call   QWORD PTR [rip+0x7984]        # 0x14000c290
   14000490c:	lea    r9,[rsp+0x30]
   140004911:	lea    r8,[rsp+0x60]
   140004916:	movsd  xmm6,QWORD PTR [rip+0x9902]        # 0x14000e220
   14000491e:	movsd  xmm12,QWORD PTR [rip+0x98f1]        # 0x14000e218
   140004927:	movsd  xmm13,QWORD PTR [rip+0x98e0]        # 0x14000e210
   140004930:	lea    rdx,[rsp+0x50]
   140004935:	lea    rcx,[rsp+0x138]
   14000493d:	movsd  QWORD PTR [rsp+0x60],xmm6
   140004943:	movsd  QWORD PTR [rsp+0x50],xmm12
   14000494a:	movsd  QWORD PTR [rsp+0x58],xmm13
   140004951:	movsd  QWORD PTR [rsp+0x68],xmm10
   140004958:	call   QWORD PTR [rip+0x7902]        # 0x14000c260
   14000495e:	lea    r8,[rip+0x98a3]        # 0x14000e208
   140004965:	lea    rdx,[rsp+0x130]
   14000496d:	lea    rcx,[rip+0x18bcc]        # 0x14001d540
   140004974:	xor    r9d,r9d
   140004977:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000497f:	call   QWORD PTR [rip+0x77e3]        # 0x14000c168
   140004985:	mov    rax,QWORD PTR [rbx]
   140004988:	mov    ecx,DWORD PTR [rax+0x10]
   14000498b:	cmp    ecx,0x1
   14000498e:	je     0x14000499c
   140004990:	test   ecx,ecx
   140004992:	je     0x14000499c
   140004994:	mov    rcx,rbx
   140004997:	call   0x140004060
   14000499c:	mov    rax,QWORD PTR [rbx]
   14000499f:	lea    rcx,[rsp+0x130]
   1400049a7:	mov    edx,DWORD PTR [rax+0x24]
   1400049aa:	call   QWORD PTR [rip+0x78f8]        # 0x14000c2a8
   1400049b0:	mov    r9,QWORD PTR [rbx]
   1400049b3:	mov    ecx,DWORD PTR [r9+0x20]
   1400049b7:	mov    esi,eax
   1400049b9:	test   ecx,ecx
   1400049bb:	je     0x1400049fa
   1400049bd:	xor    edx,edx
   1400049bf:	div    ecx
   1400049c1:	mov    rcx,QWORD PTR [r9+0x8]
   1400049c5:	lea    rdi,[rcx+rdx*8]
   1400049c9:	mov    rcx,QWORD PTR [rcx+rdx*8]
   1400049cd:	cmp    rcx,r9
   1400049d0:	je     0x1400049fd
   1400049d2:	cmp    esi,DWORD PTR [rcx+0x8]
   1400049d5:	jne    0x1400049ed
   1400049d7:	lea    rdx,[rcx+0x10]
   1400049db:	lea    rcx,[rsp+0x130]
   1400049e3:	call   QWORD PTR [rip+0x796f]        # 0x14000c358
   1400049e9:	test   al,al
   1400049eb:	jne    0x1400049fd
   1400049ed:	mov    rdi,QWORD PTR [rdi]
   1400049f0:	mov    rcx,QWORD PTR [rdi]
   1400049f3:	cmp    rcx,QWORD PTR [rbx]
   1400049f6:	jne    0x1400049d2
   1400049f8:	jmp    0x1400049fd
   1400049fa:	mov    rdi,rbx
   1400049fd:	mov    rcx,QWORD PTR [rdi]
   140004a00:	mov    rax,QWORD PTR [rbx]
   140004a03:	cmp    rcx,rax
   140004a06:	jne    0x140004ad6
   140004a0c:	mov    rcx,rax
   140004a0f:	call   QWORD PTR [rip+0x781b]        # 0x14000c230
   140004a15:	test   al,al
   140004a17:	je     0x140004a7b
   140004a19:	mov    rax,QWORD PTR [rbx]
   140004a1c:	lea    rcx,[rsp+0x130]
   140004a24:	mov    edx,DWORD PTR [rax+0x24]
   140004a27:	call   QWORD PTR [rip+0x787b]        # 0x14000c2a8
   140004a2d:	mov    r8,QWORD PTR [rbx]
   140004a30:	mov    ecx,DWORD PTR [r8+0x20]
   140004a34:	mov    esi,eax
   140004a36:	test   ecx,ecx
   140004a38:	je     0x140004a78
   140004a3a:	xor    edx,edx
   140004a3c:	div    ecx
   140004a3e:	mov    rax,QWORD PTR [r8+0x8]
   140004a42:	lea    rdi,[rax+rdx*8]
   140004a46:	mov    rax,QWORD PTR [rax+rdx*8]
   140004a4a:	cmp    rax,r8
   140004a4d:	je     0x140004a7b
   140004a4f:	nop
   140004a50:	cmp    esi,DWORD PTR [rax+0x8]
   140004a53:	jne    0x140004a6b
   140004a55:	lea    rdx,[rax+0x10]
   140004a59:	lea    rcx,[rsp+0x130]
   140004a61:	call   QWORD PTR [rip+0x78f1]        # 0x14000c358
   140004a67:	test   al,al
   140004a69:	jne    0x140004a7b
   140004a6b:	mov    rdi,QWORD PTR [rdi]
   140004a6e:	mov    rax,QWORD PTR [rdi]
   140004a71:	cmp    rax,QWORD PTR [rbx]
   140004a74:	jne    0x140004a50
   140004a76:	jmp    0x140004a7b
   140004a78:	mov    rdi,rbx
   140004a7b:	mov    rcx,QWORD PTR [rbx]
   140004a7e:	mov    edx,0x8
   140004a83:	call   QWORD PTR [rip+0x785f]        # 0x14000c2e8
   140004a89:	mov    rbp,rax
   140004a8c:	test   rax,rax
   140004a8f:	je     0x140004ac9
   140004a91:	mov    rcx,QWORD PTR [rdi]
   140004a94:	lea    rdx,[rsp+0x130]
   140004a9c:	mov    DWORD PTR [rax+0x8],esi
   140004a9f:	mov    QWORD PTR [rax],rcx
   140004aa2:	lea    rcx,[rax+0x10]
   140004aa6:	call   QWORD PTR [rip+0x76a4]        # 0x14000c150
   140004aac:	lea    rcx,[rbp+0x18]
   140004ab0:	lea    rdx,[rsp+0x138]
   140004ab8:	call   QWORD PTR [rip+0x78a2]        # 0x14000c360
   140004abe:	mov    QWORD PTR [rdi],rbp
   140004ac1:	mov    rax,QWORD PTR [rbx]
   140004ac4:	inc    DWORD PTR [rax+0x14]
   140004ac7:	jmp    0x140004ae8
   140004ac9:	xor    ebp,ebp
   140004acb:	mov    QWORD PTR [rdi],rbp
   140004ace:	mov    rax,QWORD PTR [rbx]
   140004ad1:	inc    DWORD PTR [rax+0x14]
   140004ad4:	jmp    0x140004ae8
   140004ad6:	lea    rdx,[rsp+0x138]
   140004ade:	add    rcx,0x18
   140004ae2:	call   QWORD PTR [rip+0x77d0]        # 0x14000c2b8
   140004ae8:	lea    rcx,[rsp+0x130]
   140004af0:	call   QWORD PTR [rip+0x78ea]        # 0x14000c3e0
   140004af6:	lea    rcx,[rsp+0x138]
   140004afe:	call   QWORD PTR [rip+0x786c]        # 0x14000c370
   140004b04:	lea    rcx,[rsp+0x138]
   140004b0c:	mov    edx,0x2d
   140004b11:	call   QWORD PTR [rip+0x7779]        # 0x14000c290
   140004b17:	lea    r9,[rsp+0x60]
   140004b1c:	lea    r8,[rsp+0x50]
   140004b21:	movsd  xmm5,QWORD PTR [rip+0x96d7]        # 0x14000e200
   140004b29:	movsd  xmm0,QWORD PTR [rip+0x96c7]        # 0x14000e1f8
   140004b31:	movsd  xmm1,QWORD PTR [rip+0x96b7]        # 0x14000e1f0
   140004b39:	lea    rdx,[rsp+0x40]
   140004b3e:	lea    rcx,[rsp+0x138]
   140004b46:	movsd  xmm7,QWORD PTR [rip+0x969a]        # 0x14000e1e8
   140004b4e:	movsd  QWORD PTR [rsp+0x60],xmm5
   140004b54:	movsd  QWORD PTR [rsp+0x68],xmm0
   140004b5a:	movsd  QWORD PTR [rsp+0x50],xmm1
   140004b60:	movsd  QWORD PTR [rsp+0x58],xmm7
   140004b66:	movsd  QWORD PTR [rsp+0x40],xmm12
   140004b6d:	movsd  QWORD PTR [rsp+0x48],xmm13
   140004b74:	call   QWORD PTR [rip+0x76e6]        # 0x14000c260
   140004b7a:	movsd  xmm0,QWORD PTR [rip+0x965e]        # 0x14000e1e0
   140004b82:	movsd  xmm1,QWORD PTR [rip+0x964e]        # 0x14000e1d8
   140004b8a:	lea    r9,[rsp+0x30]
   140004b8f:	lea    r8,[rsp+0x60]
   140004b94:	lea    rdx,[rsp+0x50]
   140004b99:	movsd  QWORD PTR [rsp+0x50],xmm0
   140004b9f:	movsd  QWORD PTR [rsp+0x58],xmm1
   140004ba5:	movsd  QWORD PTR [rsp+0x60],xmm6
   140004bab:	lea    rcx,[rsp+0x138]
   140004bb3:	movsd  QWORD PTR [rsp+0x68],xmm10
   140004bba:	call   QWORD PTR [rip+0x76a0]        # 0x14000c260
   140004bc0:	lea    r8,[rip+0x9601]        # 0x14000e1c8
   140004bc7:	lea    rdx,[rsp+0x130]
   140004bcf:	lea    rcx,[rip+0x1896a]        # 0x14001d540
   140004bd6:	xor    r9d,r9d
   140004bd9:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140004be1:	call   QWORD PTR [rip+0x7581]        # 0x14000c168
   140004be7:	mov    rax,QWORD PTR [rbx]
   140004bea:	mov    ecx,DWORD PTR [rax+0x10]
   140004bed:	cmp    ecx,0x1
   140004bf0:	je     0x140004bfe
   140004bf2:	test   ecx,ecx
   140004bf4:	je     0x140004bfe
   140004bf6:	mov    rcx,rbx
   140004bf9:	call   0x140004060
   140004bfe:	mov    rax,QWORD PTR [rbx]
   140004c01:	lea    rcx,[rsp+0x130]
   140004c09:	mov    edx,DWORD PTR [rax+0x24]
   140004c0c:	call   QWORD PTR [rip+0x7696]        # 0x14000c2a8
   140004c12:	mov    r9,QWORD PTR [rbx]
   140004c15:	mov    ecx,DWORD PTR [r9+0x20]
   140004c19:	mov    esi,eax
   140004c1b:	test   ecx,ecx
   140004c1d:	je     0x140004c5c
   140004c1f:	xor    edx,edx
   140004c21:	div    ecx
   140004c23:	mov    rcx,QWORD PTR [r9+0x8]
   140004c27:	lea    rdi,[rcx+rdx*8]
   140004c2b:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140004c2f:	cmp    rcx,r9
   140004c32:	je     0x140004c5f
   140004c34:	cmp    esi,DWORD PTR [rcx+0x8]
   140004c37:	jne    0x140004c4f
   140004c39:	lea    rdx,[rcx+0x10]
   140004c3d:	lea    rcx,[rsp+0x130]
   140004c45:	call   QWORD PTR [rip+0x770d]        # 0x14000c358
   140004c4b:	test   al,al
   140004c4d:	jne    0x140004c5f
   140004c4f:	mov    rdi,QWORD PTR [rdi]
   140004c52:	mov    rcx,QWORD PTR [rdi]
   140004c55:	cmp    rcx,QWORD PTR [rbx]
   140004c58:	jne    0x140004c34
   140004c5a:	jmp    0x140004c5f
   140004c5c:	mov    rdi,rbx
   140004c5f:	mov    rcx,QWORD PTR [rdi]
   140004c62:	mov    rax,QWORD PTR [rbx]
   140004c65:	cmp    rcx,rax
   140004c68:	jne    0x140004d37
   140004c6e:	mov    rcx,rax
   140004c71:	call   QWORD PTR [rip+0x75b9]        # 0x14000c230
   140004c77:	test   al,al
   140004c79:	je     0x140004cdc
   140004c7b:	mov    rax,QWORD PTR [rbx]
   140004c7e:	lea    rcx,[rsp+0x130]
   140004c86:	mov    edx,DWORD PTR [rax+0x24]
   140004c89:	call   QWORD PTR [rip+0x7619]        # 0x14000c2a8
   140004c8f:	mov    r8,QWORD PTR [rbx]
   140004c92:	mov    ecx,DWORD PTR [r8+0x20]
   140004c96:	mov    esi,eax
   140004c98:	test   ecx,ecx
   140004c9a:	je     0x140004cd9
   140004c9c:	xor    edx,edx
   140004c9e:	div    ecx
   140004ca0:	mov    rax,QWORD PTR [r8+0x8]
   140004ca4:	lea    rdi,[rax+rdx*8]
   140004ca8:	mov    rax,QWORD PTR [rax+rdx*8]
   140004cac:	cmp    rax,r8
   140004caf:	je     0x140004cdc
   140004cb1:	cmp    esi,DWORD PTR [rax+0x8]
   140004cb4:	jne    0x140004ccc
   140004cb6:	lea    rdx,[rax+0x10]
   140004cba:	lea    rcx,[rsp+0x130]
   140004cc2:	call   QWORD PTR [rip+0x7690]        # 0x14000c358
   140004cc8:	test   al,al
   140004cca:	jne    0x140004cdc
   140004ccc:	mov    rdi,QWORD PTR [rdi]
   140004ccf:	mov    rax,QWORD PTR [rdi]
   140004cd2:	cmp    rax,QWORD PTR [rbx]
   140004cd5:	jne    0x140004cb1
   140004cd7:	jmp    0x140004cdc
   140004cd9:	mov    rdi,rbx
   140004cdc:	mov    rcx,QWORD PTR [rbx]
   140004cdf:	mov    edx,0x8
   140004ce4:	call   QWORD PTR [rip+0x75fe]        # 0x14000c2e8
   140004cea:	mov    rbp,rax
   140004ced:	test   rax,rax
   140004cf0:	je     0x140004d2a
   140004cf2:	mov    rcx,QWORD PTR [rdi]
   140004cf5:	lea    rdx,[rsp+0x130]
   140004cfd:	mov    DWORD PTR [rax+0x8],esi
   140004d00:	mov    QWORD PTR [rax],rcx
   140004d03:	lea    rcx,[rax+0x10]
   140004d07:	call   QWORD PTR [rip+0x7443]        # 0x14000c150
   140004d0d:	lea    rcx,[rbp+0x18]
   140004d11:	lea    rdx,[rsp+0x138]
   140004d19:	call   QWORD PTR [rip+0x7641]        # 0x14000c360
   140004d1f:	mov    QWORD PTR [rdi],rbp
   140004d22:	mov    rax,QWORD PTR [rbx]
   140004d25:	inc    DWORD PTR [rax+0x14]
   140004d28:	jmp    0x140004d49
   140004d2a:	xor    ebp,ebp
   140004d2c:	mov    QWORD PTR [rdi],rbp
   140004d2f:	mov    rax,QWORD PTR [rbx]
   140004d32:	inc    DWORD PTR [rax+0x14]
   140004d35:	jmp    0x140004d49
   140004d37:	lea    rdx,[rsp+0x138]
   140004d3f:	add    rcx,0x18
   140004d43:	call   QWORD PTR [rip+0x756f]        # 0x14000c2b8
   140004d49:	lea    rcx,[rsp+0x130]
   140004d51:	call   QWORD PTR [rip+0x7689]        # 0x14000c3e0
   140004d57:	lea    rcx,[rsp+0x138]
   140004d5f:	call   QWORD PTR [rip+0x760b]        # 0x14000c370
   140004d65:	lea    rcx,[rsp+0x138]
   140004d6d:	mov    edx,0x2d
   140004d72:	call   QWORD PTR [rip+0x7518]        # 0x14000c290
   140004d78:	lea    r9,[rsp+0x60]
   140004d7d:	lea    r8,[rsp+0x50]
   140004d82:	movsd  xmm5,QWORD PTR [rip+0x9436]        # 0x14000e1c0
   140004d8a:	movsd  xmm0,QWORD PTR [rip+0x9426]        # 0x14000e1b8
   140004d92:	movsd  xmm1,QWORD PTR [rip+0x9416]        # 0x14000e1b0
   140004d9a:	lea    rdx,[rsp+0x40]
   140004d9f:	lea    rcx,[rsp+0x138]
   140004da7:	movsd  xmm15,QWORD PTR [rip+0x93f8]        # 0x14000e1a8
   140004db0:	movsd  QWORD PTR [rsp+0x60],xmm5
   140004db6:	movsd  QWORD PTR [rsp+0x50],xmm0
   140004dbc:	movsd  QWORD PTR [rsp+0x68],xmm15
   140004dc3:	movsd  QWORD PTR [rsp+0x58],xmm1
   140004dc9:	movsd  QWORD PTR [rsp+0x40],xmm8
   140004dd0:	movsd  QWORD PTR [rsp+0x48],xmm9
   140004dd7:	call   QWORD PTR [rip+0x7483]        # 0x14000c260
   140004ddd:	movsd  xmm0,QWORD PTR [rip+0x93bb]        # 0x14000e1a0
   140004de5:	movsd  xmm14,QWORD PTR [rip+0x93aa]        # 0x14000e198
   140004dee:	lea    r9,[rsp+0x30]
   140004df3:	lea    r8,[rsp+0x60]
   140004df8:	lea    rdx,[rsp+0x50]
   140004dfd:	movsd  xmm11,QWORD PTR [rip+0x938a]        # 0x14000e190
   140004e06:	movsd  xmm6,QWORD PTR [rip+0x937a]        # 0x14000e188
   140004e0e:	movsd  QWORD PTR [rsp+0x60],xmm14
   140004e15:	lea    rcx,[rsp+0x138]
   140004e1d:	movsd  QWORD PTR [rsp+0x68],xmm11
   140004e24:	movsd  QWORD PTR [rsp+0x50],xmm6
   140004e2a:	movsd  QWORD PTR [rsp+0x58],xmm0
   140004e30:	call   QWORD PTR [rip+0x742a]        # 0x14000c260
   140004e36:	lea    r8,[rip+0x9333]        # 0x14000e170
   140004e3d:	lea    rdx,[rsp+0x130]
   140004e45:	lea    rcx,[rip+0x186f4]        # 0x14001d540
   140004e4c:	xor    r9d,r9d
   140004e4f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140004e57:	call   QWORD PTR [rip+0x730b]        # 0x14000c168
   140004e5d:	mov    rax,QWORD PTR [rbx]
   140004e60:	mov    ecx,DWORD PTR [rax+0x10]
   140004e63:	cmp    ecx,0x1
   140004e66:	je     0x140004e74
   140004e68:	test   ecx,ecx
   140004e6a:	je     0x140004e74
   140004e6c:	mov    rcx,rbx
   140004e6f:	call   0x140004060
   140004e74:	mov    rax,QWORD PTR [rbx]
   140004e77:	lea    rcx,[rsp+0x130]
   140004e7f:	mov    edx,DWORD PTR [rax+0x24]
   140004e82:	call   QWORD PTR [rip+0x7420]        # 0x14000c2a8
   140004e88:	mov    r9,QWORD PTR [rbx]
   140004e8b:	mov    ecx,DWORD PTR [r9+0x20]
   140004e8f:	mov    esi,eax
   140004e91:	test   ecx,ecx
   140004e93:	je     0x140004ed8
   140004e95:	xor    edx,edx
   140004e97:	div    ecx
   140004e99:	mov    rcx,QWORD PTR [r9+0x8]
   140004e9d:	lea    rdi,[rcx+rdx*8]
   140004ea1:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140004ea5:	cmp    rcx,r9
   140004ea8:	je     0x140004edb
   140004eaa:	nop    WORD PTR [rax+rax*1+0x0]
   140004eb0:	cmp    esi,DWORD PTR [rcx+0x8]
   140004eb3:	jne    0x140004ecb
   140004eb5:	lea    rdx,[rcx+0x10]
   140004eb9:	lea    rcx,[rsp+0x130]
   140004ec1:	call   QWORD PTR [rip+0x7491]        # 0x14000c358
   140004ec7:	test   al,al
   140004ec9:	jne    0x140004edb
   140004ecb:	mov    rdi,QWORD PTR [rdi]
   140004ece:	mov    rcx,QWORD PTR [rdi]
   140004ed1:	cmp    rcx,QWORD PTR [rbx]
   140004ed4:	jne    0x140004eb0
   140004ed6:	jmp    0x140004edb
   140004ed8:	mov    rdi,rbx
   140004edb:	mov    rcx,QWORD PTR [rdi]
   140004ede:	mov    rax,QWORD PTR [rbx]
   140004ee1:	cmp    rcx,rax
   140004ee4:	jne    0x140004fb6
   140004eea:	mov    rcx,rax
   140004eed:	call   QWORD PTR [rip+0x733d]        # 0x14000c230
   140004ef3:	test   al,al
   140004ef5:	je     0x140004f5b
   140004ef7:	mov    rax,QWORD PTR [rbx]
   140004efa:	lea    rcx,[rsp+0x130]
   140004f02:	mov    edx,DWORD PTR [rax+0x24]
   140004f05:	call   QWORD PTR [rip+0x739d]        # 0x14000c2a8
   140004f0b:	mov    r8,QWORD PTR [rbx]
   140004f0e:	mov    ecx,DWORD PTR [r8+0x20]
   140004f12:	mov    esi,eax
   140004f14:	test   ecx,ecx
   140004f16:	je     0x140004f58
   140004f18:	xor    edx,edx
   140004f1a:	div    ecx
   140004f1c:	mov    rax,QWORD PTR [r8+0x8]
   140004f20:	lea    rdi,[rax+rdx*8]
   140004f24:	mov    rax,QWORD PTR [rax+rdx*8]
   140004f28:	cmp    rax,r8
   140004f2b:	je     0x140004f5b
   140004f2d:	nop    DWORD PTR [rax]
   140004f30:	cmp    esi,DWORD PTR [rax+0x8]
   140004f33:	jne    0x140004f4b
   140004f35:	lea    rdx,[rax+0x10]
   140004f39:	lea    rcx,[rsp+0x130]
   140004f41:	call   QWORD PTR [rip+0x7411]        # 0x14000c358
   140004f47:	test   al,al
   140004f49:	jne    0x140004f5b
   140004f4b:	mov    rdi,QWORD PTR [rdi]
   140004f4e:	mov    rax,QWORD PTR [rdi]
   140004f51:	cmp    rax,QWORD PTR [rbx]
   140004f54:	jne    0x140004f30
   140004f56:	jmp    0x140004f5b
   140004f58:	mov    rdi,rbx
   140004f5b:	mov    rcx,QWORD PTR [rbx]
   140004f5e:	mov    edx,0x8
   140004f63:	call   QWORD PTR [rip+0x737f]        # 0x14000c2e8
   140004f69:	mov    rbp,rax
   140004f6c:	test   rax,rax
   140004f6f:	je     0x140004fa9
   140004f71:	mov    rcx,QWORD PTR [rdi]
   140004f74:	lea    rdx,[rsp+0x130]
   140004f7c:	mov    DWORD PTR [rax+0x8],esi
   140004f7f:	mov    QWORD PTR [rax],rcx
   140004f82:	lea    rcx,[rax+0x10]
   140004f86:	call   QWORD PTR [rip+0x71c4]        # 0x14000c150
   140004f8c:	lea    rcx,[rbp+0x18]
   140004f90:	lea    rdx,[rsp+0x138]
   140004f98:	call   QWORD PTR [rip+0x73c2]        # 0x14000c360
   140004f9e:	mov    QWORD PTR [rdi],rbp
   140004fa1:	mov    rax,QWORD PTR [rbx]
   140004fa4:	inc    DWORD PTR [rax+0x14]
   140004fa7:	jmp    0x140004fc8
   140004fa9:	xor    ebp,ebp
   140004fab:	mov    QWORD PTR [rdi],rbp
   140004fae:	mov    rax,QWORD PTR [rbx]
   140004fb1:	inc    DWORD PTR [rax+0x14]
   140004fb4:	jmp    0x140004fc8
   140004fb6:	lea    rdx,[rsp+0x138]
   140004fbe:	add    rcx,0x18
   140004fc2:	call   QWORD PTR [rip+0x72f0]        # 0x14000c2b8
   140004fc8:	lea    rcx,[rsp+0x130]
   140004fd0:	call   QWORD PTR [rip+0x740a]        # 0x14000c3e0
   140004fd6:	lea    rcx,[rsp+0x138]
   140004fde:	call   QWORD PTR [rip+0x738c]        # 0x14000c370
   140004fe4:	lea    rcx,[rsp+0x138]
   140004fec:	mov    edx,0x2d
   140004ff1:	call   QWORD PTR [rip+0x7299]        # 0x14000c290
   140004ff7:	lea    r9,[rsp+0x60]
   140004ffc:	lea    r8,[rsp+0x50]
   140005001:	movsd  xmm5,QWORD PTR [rip+0x915f]        # 0x14000e168
   140005009:	movsd  xmm8,QWORD PTR [rip+0x914e]        # 0x14000e160
   140005012:	movsd  xmm10,QWORD PTR [rip+0x913d]        # 0x14000e158
   14000501b:	lea    rdx,[rsp+0x40]
   140005020:	lea    rcx,[rsp+0x138]
   140005028:	movsd  QWORD PTR [rsp+0x60],xmm5
   14000502e:	movsd  QWORD PTR [rsp+0x68],xmm8
   140005035:	movsd  QWORD PTR [rsp+0x50],xmm10
   14000503c:	movsd  QWORD PTR [rsp+0x58],xmm7
   140005042:	movsd  QWORD PTR [rsp+0x40],xmm12
   140005049:	movsd  QWORD PTR [rsp+0x48],xmm13
   140005050:	call   QWORD PTR [rip+0x720a]        # 0x14000c260
   140005056:	lea    r9,[rsp+0x30]
   14000505b:	lea    r8,[rsp+0x60]
   140005060:	lea    rdx,[rsp+0x50]
   140005065:	lea    rcx,[rsp+0x138]
   14000506d:	movsd  xmm12,QWORD PTR [rip+0x9182]        # 0x14000e1f8
   140005076:	movsd  xmm9,QWORD PTR [rip+0x90d1]        # 0x14000e150
   14000507f:	movsd  QWORD PTR [rsp+0x68],xmm8
   140005086:	movsd  QWORD PTR [rsp+0x60],xmm12
   14000508d:	movsd  QWORD PTR [rsp+0x58],xmm9
   140005094:	movsd  QWORD PTR [rsp+0x50],xmm6
   14000509a:	call   QWORD PTR [rip+0x71c0]        # 0x14000c260
   1400050a0:	lea    r8,[rip+0x9099]        # 0x14000e140
   1400050a7:	lea    rdx,[rsp+0x130]
   1400050af:	lea    rcx,[rip+0x1848a]        # 0x14001d540
   1400050b6:	xor    r9d,r9d
   1400050b9:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400050c1:	call   QWORD PTR [rip+0x70a1]        # 0x14000c168
   1400050c7:	mov    rax,QWORD PTR [rbx]
   1400050ca:	movaps xmm13,XMMWORD PTR [rsp+0x90]
   1400050d3:	mov    ecx,DWORD PTR [rax+0x10]
   1400050d6:	cmp    ecx,0x1
   1400050d9:	je     0x1400050e7
   1400050db:	test   ecx,ecx
   1400050dd:	je     0x1400050e7
   1400050df:	mov    rcx,rbx
   1400050e2:	call   0x140004060
   1400050e7:	mov    rax,QWORD PTR [rbx]
   1400050ea:	lea    rcx,[rsp+0x130]
   1400050f2:	mov    edx,DWORD PTR [rax+0x24]
   1400050f5:	call   QWORD PTR [rip+0x71ad]        # 0x14000c2a8
   1400050fb:	mov    r9,QWORD PTR [rbx]
   1400050fe:	mov    ecx,DWORD PTR [r9+0x20]
   140005102:	mov    esi,eax
   140005104:	test   ecx,ecx
   140005106:	je     0x140005148
   140005108:	xor    edx,edx
   14000510a:	div    ecx
   14000510c:	mov    rcx,QWORD PTR [r9+0x8]
   140005110:	lea    rdi,[rcx+rdx*8]
   140005114:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140005118:	cmp    rcx,r9
   14000511b:	je     0x14000514b
   14000511d:	nop    DWORD PTR [rax]
   140005120:	cmp    esi,DWORD PTR [rcx+0x8]
   140005123:	jne    0x14000513b
   140005125:	lea    rdx,[rcx+0x10]
   140005129:	lea    rcx,[rsp+0x130]
   140005131:	call   QWORD PTR [rip+0x7221]        # 0x14000c358
   140005137:	test   al,al
   140005139:	jne    0x14000514b
   14000513b:	mov    rdi,QWORD PTR [rdi]
   14000513e:	mov    rcx,QWORD PTR [rdi]
   140005141:	cmp    rcx,QWORD PTR [rbx]
   140005144:	jne    0x140005120
   140005146:	jmp    0x14000514b
   140005148:	mov    rdi,rbx
   14000514b:	mov    rcx,QWORD PTR [rdi]
   14000514e:	mov    rax,QWORD PTR [rbx]
   140005151:	cmp    rcx,rax
   140005154:	jne    0x140005226
   14000515a:	mov    rcx,rax
   14000515d:	call   QWORD PTR [rip+0x70cd]        # 0x14000c230
   140005163:	test   al,al
   140005165:	je     0x1400051cb
   140005167:	mov    rax,QWORD PTR [rbx]
   14000516a:	lea    rcx,[rsp+0x130]
   140005172:	mov    edx,DWORD PTR [rax+0x24]
   140005175:	call   QWORD PTR [rip+0x712d]        # 0x14000c2a8
   14000517b:	mov    r8,QWORD PTR [rbx]
   14000517e:	mov    ecx,DWORD PTR [r8+0x20]
   140005182:	mov    esi,eax
   140005184:	test   ecx,ecx
   140005186:	je     0x1400051c8
   140005188:	xor    edx,edx
   14000518a:	div    ecx
   14000518c:	mov    rax,QWORD PTR [r8+0x8]
   140005190:	lea    rdi,[rax+rdx*8]
   140005194:	mov    rax,QWORD PTR [rax+rdx*8]
   140005198:	cmp    rax,r8
   14000519b:	je     0x1400051cb
   14000519d:	nop    DWORD PTR [rax]
   1400051a0:	cmp    esi,DWORD PTR [rax+0x8]
   1400051a3:	jne    0x1400051bb
   1400051a5:	lea    rdx,[rax+0x10]
   1400051a9:	lea    rcx,[rsp+0x130]
   1400051b1:	call   QWORD PTR [rip+0x71a1]        # 0x14000c358
   1400051b7:	test   al,al
   1400051b9:	jne    0x1400051cb
   1400051bb:	mov    rdi,QWORD PTR [rdi]
   1400051be:	mov    rax,QWORD PTR [rdi]
   1400051c1:	cmp    rax,QWORD PTR [rbx]
   1400051c4:	jne    0x1400051a0
   1400051c6:	jmp    0x1400051cb
   1400051c8:	mov    rdi,rbx
   1400051cb:	mov    rcx,QWORD PTR [rbx]
   1400051ce:	mov    edx,0x8
   1400051d3:	call   QWORD PTR [rip+0x710f]        # 0x14000c2e8
   1400051d9:	mov    rbp,rax
   1400051dc:	test   rax,rax
   1400051df:	je     0x140005219
   1400051e1:	mov    rcx,QWORD PTR [rdi]
   1400051e4:	lea    rdx,[rsp+0x130]
   1400051ec:	mov    DWORD PTR [rax+0x8],esi
   1400051ef:	mov    QWORD PTR [rax],rcx
   1400051f2:	lea    rcx,[rax+0x10]
   1400051f6:	call   QWORD PTR [rip+0x6f54]        # 0x14000c150
   1400051fc:	lea    rcx,[rbp+0x18]
   140005200:	lea    rdx,[rsp+0x138]
   140005208:	call   QWORD PTR [rip+0x7152]        # 0x14000c360
   14000520e:	mov    QWORD PTR [rdi],rbp
   140005211:	mov    rax,QWORD PTR [rbx]
   140005214:	inc    DWORD PTR [rax+0x14]
   140005217:	jmp    0x140005238
   140005219:	xor    ebp,ebp
   14000521b:	mov    QWORD PTR [rdi],rbp
   14000521e:	mov    rax,QWORD PTR [rbx]
   140005221:	inc    DWORD PTR [rax+0x14]
   140005224:	jmp    0x140005238
   140005226:	lea    rdx,[rsp+0x138]
   14000522e:	add    rcx,0x18
   140005232:	call   QWORD PTR [rip+0x7080]        # 0x14000c2b8
   140005238:	lea    rcx,[rsp+0x130]
   140005240:	call   QWORD PTR [rip+0x719a]        # 0x14000c3e0
   140005246:	lea    rcx,[rsp+0x138]
   14000524e:	call   QWORD PTR [rip+0x711c]        # 0x14000c370
   140005254:	lea    rcx,[rsp+0x130]
   14000525c:	mov    edx,0x2d
   140005261:	call   QWORD PTR [rip+0x7029]        # 0x14000c290
   140005267:	lea    r9,[rsp+0x60]
   14000526c:	lea    r8,[rsp+0x50]
   140005271:	movsd  xmm0,QWORD PTR [rip+0x8ff7]        # 0x14000e270
   140005279:	movsd  xmm1,QWORD PTR [rip+0x8fcf]        # 0x14000e250
   140005281:	movsd  xmm7,QWORD PTR [rip+0x8eaf]        # 0x14000e138
   140005289:	lea    rdx,[rsp+0x40]
   14000528e:	lea    rcx,[rsp+0x130]
   140005296:	movsd  QWORD PTR [rsp+0x60],xmm0
   14000529c:	movsd  xmm0,QWORD PTR [rip+0x8f4c]        # 0x14000e1f0
   1400052a4:	movsd  QWORD PTR [rsp+0x68],xmm12
   1400052ab:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400052b1:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400052b7:	movsd  QWORD PTR [rsp+0x58],xmm1
   1400052bd:	movsd  QWORD PTR [rsp+0x48],xmm7
   1400052c3:	call   QWORD PTR [rip+0x6f97]        # 0x14000c260
   1400052c9:	movsd  xmm5,QWORD PTR [rip+0x8e5f]        # 0x14000e130
   1400052d1:	movsd  xmm6,QWORD PTR [rip+0x8e4f]        # 0x14000e128
   1400052d9:	lea    r9,[rsp+0x60]
   1400052de:	lea    r8,[rsp+0x50]
   1400052e3:	lea    rdx,[rsp+0x40]
   1400052e8:	movsd  xmm0,QWORD PTR [rip+0x8e30]        # 0x14000e120
   1400052f0:	movsd  QWORD PTR [rsp+0x60],xmm5
   1400052f6:	movsd  QWORD PTR [rsp+0x50],xmm6
   1400052fc:	lea    rcx,[rsp+0x130]
   140005304:	movsd  QWORD PTR [rsp+0x58],xmm6
   14000530a:	movsd  QWORD PTR [rsp+0x40],xmm0
   140005310:	movsd  QWORD PTR [rsp+0x48],xmm5
   140005316:	movsd  QWORD PTR [rsp+0x68],xmm12
   14000531d:	call   QWORD PTR [rip+0x6f3d]        # 0x14000c260
   140005323:	movsd  xmm1,QWORD PTR [rip+0x8f0d]        # 0x14000e238
   14000532b:	movsd  xmm5,QWORD PTR [rip+0x8de5]        # 0x14000e118
   140005333:	lea    r9,[rsp+0x60]
   140005338:	lea    r8,[rsp+0x50]
   14000533d:	lea    rdx,[rsp+0x40]
   140005342:	movsd  xmm0,QWORD PTR [rip+0x8e8e]        # 0x14000e1d8
   14000534a:	movsd  QWORD PTR [rsp+0x60],xmm5
   140005350:	movsd  QWORD PTR [rsp+0x58],xmm1
   140005356:	lea    rcx,[rsp+0x130]
   14000535e:	movsd  QWORD PTR [rsp+0x40],xmm0
   140005364:	movsd  QWORD PTR [rsp+0x48],xmm1
   14000536a:	movsd  QWORD PTR [rsp+0x68],xmm12
   140005371:	movsd  QWORD PTR [rsp+0x50],xmm11
   140005378:	call   QWORD PTR [rip+0x6ee2]        # 0x14000c260
   14000537e:	movsd  xmm0,QWORD PTR [rip+0x8d8a]        # 0x14000e110
   140005386:	movsd  xmm1,QWORD PTR [rip+0x8d7a]        # 0x14000e108
   14000538e:	lea    r9,[rsp+0x60]
   140005393:	lea    r8,[rsp+0x50]
   140005398:	lea    rdx,[rsp+0x40]
   14000539d:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400053a3:	movsd  xmm0,QWORD PTR [rip+0x8d55]        # 0x14000e100
   1400053ab:	movsd  QWORD PTR [rsp+0x60],xmm14
   1400053b2:	lea    rcx,[rsp+0x130]
   1400053ba:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400053c0:	movsd  QWORD PTR [rsp+0x68],xmm12
   1400053c7:	movsd  QWORD PTR [rsp+0x58],xmm1
   1400053cd:	movsd  QWORD PTR [rsp+0x48],xmm14
   1400053d4:	call   QWORD PTR [rip+0x6e86]        # 0x14000c260
   1400053da:	movsd  xmm5,QWORD PTR [rip+0x8d16]        # 0x14000e0f8
   1400053e2:	lea    r9,[rsp+0x30]
   1400053e7:	lea    r8,[rsp+0x60]
   1400053ec:	lea    rdx,[rsp+0x50]
   1400053f1:	lea    rcx,[rsp+0x130]
   1400053f9:	movsd  QWORD PTR [rsp+0x68],xmm8
   140005400:	movsd  QWORD PTR [rsp+0x50],xmm9
   140005407:	movsd  QWORD PTR [rsp+0x58],xmm9
   14000540e:	movsd  QWORD PTR [rsp+0x60],xmm5
   140005414:	call   QWORD PTR [rip+0x6e46]        # 0x14000c260
   14000541a:	lea    r8,[rip+0x8cc7]        # 0x14000e0e8
   140005421:	lea    rdx,[rsp+0x138]
   140005429:	lea    rcx,[rip+0x18110]        # 0x14001d540
   140005430:	xor    r9d,r9d
   140005433:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000543b:	call   QWORD PTR [rip+0x6d27]        # 0x14000c168
   140005441:	mov    rax,QWORD PTR [rbx]
   140005444:	mov    ecx,DWORD PTR [rax+0x10]
   140005447:	movaps xmm12,XMMWORD PTR [rsp+0xa0]
   140005450:	movaps xmm11,XMMWORD PTR [rsp+0xb0]
   140005459:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
   140005462:	movaps xmm8,XMMWORD PTR [rsp+0xe0]
   14000546b:	cmp    ecx,0x1
   14000546e:	je     0x14000547c
   140005470:	test   ecx,ecx
   140005472:	je     0x14000547c
   140005474:	mov    rcx,rbx
   140005477:	call   0x140004060
   14000547c:	mov    rax,QWORD PTR [rbx]
   14000547f:	lea    rcx,[rsp+0x138]
   140005487:	mov    edx,DWORD PTR [rax+0x24]
   14000548a:	call   QWORD PTR [rip+0x6e18]        # 0x14000c2a8
   140005490:	mov    r9,QWORD PTR [rbx]
   140005493:	mov    ecx,DWORD PTR [r9+0x20]
   140005497:	mov    esi,eax
   140005499:	test   ecx,ecx
   14000549b:	je     0x1400054da
   14000549d:	xor    edx,edx
   14000549f:	div    ecx
   1400054a1:	mov    rcx,QWORD PTR [r9+0x8]
   1400054a5:	lea    rdi,[rcx+rdx*8]
   1400054a9:	mov    rcx,QWORD PTR [rcx+rdx*8]
   1400054ad:	cmp    rcx,r9
   1400054b0:	je     0x1400054dd
   1400054b2:	cmp    esi,DWORD PTR [rcx+0x8]
   1400054b5:	jne    0x1400054cd
   1400054b7:	lea    rdx,[rcx+0x10]
   1400054bb:	lea    rcx,[rsp+0x138]
   1400054c3:	call   QWORD PTR [rip+0x6e8f]        # 0x14000c358
   1400054c9:	test   al,al
   1400054cb:	jne    0x1400054dd
   1400054cd:	mov    rdi,QWORD PTR [rdi]
   1400054d0:	mov    rcx,QWORD PTR [rdi]
   1400054d3:	cmp    rcx,QWORD PTR [rbx]
   1400054d6:	jne    0x1400054b2
   1400054d8:	jmp    0x1400054dd
   1400054da:	mov    rdi,rbx
   1400054dd:	mov    rcx,QWORD PTR [rdi]
   1400054e0:	mov    rax,QWORD PTR [rbx]
   1400054e3:	cmp    rcx,rax
   1400054e6:	jne    0x1400055b6
   1400054ec:	mov    rcx,rax
   1400054ef:	call   QWORD PTR [rip+0x6d3b]        # 0x14000c230
   1400054f5:	test   al,al
   1400054f7:	je     0x14000555b
   1400054f9:	mov    rax,QWORD PTR [rbx]
   1400054fc:	lea    rcx,[rsp+0x138]
   140005504:	mov    edx,DWORD PTR [rax+0x24]
   140005507:	call   QWORD PTR [rip+0x6d9b]        # 0x14000c2a8
   14000550d:	mov    r8,QWORD PTR [rbx]
   140005510:	mov    ecx,DWORD PTR [r8+0x20]
   140005514:	mov    esi,eax
   140005516:	test   ecx,ecx
   140005518:	je     0x140005558
   14000551a:	xor    edx,edx
   14000551c:	div    ecx
   14000551e:	mov    rax,QWORD PTR [r8+0x8]
   140005522:	lea    rdi,[rax+rdx*8]
   140005526:	mov    rax,QWORD PTR [rax+rdx*8]
   14000552a:	cmp    rax,r8
   14000552d:	je     0x14000555b
   14000552f:	nop
   140005530:	cmp    esi,DWORD PTR [rax+0x8]
   140005533:	jne    0x14000554b
   140005535:	lea    rdx,[rax+0x10]
   140005539:	lea    rcx,[rsp+0x138]
   140005541:	call   QWORD PTR [rip+0x6e11]        # 0x14000c358
   140005547:	test   al,al
   140005549:	jne    0x14000555b
   14000554b:	mov    rdi,QWORD PTR [rdi]
   14000554e:	mov    rax,QWORD PTR [rdi]
   140005551:	cmp    rax,QWORD PTR [rbx]
   140005554:	jne    0x140005530
   140005556:	jmp    0x14000555b
   140005558:	mov    rdi,rbx
   14000555b:	mov    rcx,QWORD PTR [rbx]
   14000555e:	mov    edx,0x8
   140005563:	call   QWORD PTR [rip+0x6d7f]        # 0x14000c2e8
   140005569:	mov    rbp,rax
   14000556c:	test   rax,rax
   14000556f:	je     0x1400055a9
   140005571:	mov    rcx,QWORD PTR [rdi]
   140005574:	lea    rdx,[rsp+0x138]
   14000557c:	mov    DWORD PTR [rax+0x8],esi
   14000557f:	mov    QWORD PTR [rax],rcx
   140005582:	lea    rcx,[rax+0x10]
   140005586:	call   QWORD PTR [rip+0x6bc4]        # 0x14000c150
   14000558c:	lea    rcx,[rbp+0x18]
   140005590:	lea    rdx,[rsp+0x130]
   140005598:	call   QWORD PTR [rip+0x6dc2]        # 0x14000c360
   14000559e:	mov    QWORD PTR [rdi],rbp
   1400055a1:	mov    rax,QWORD PTR [rbx]
   1400055a4:	inc    DWORD PTR [rax+0x14]
   1400055a7:	jmp    0x1400055c8
   1400055a9:	xor    ebp,ebp
   1400055ab:	mov    QWORD PTR [rdi],rbp
   1400055ae:	mov    rax,QWORD PTR [rbx]
   1400055b1:	inc    DWORD PTR [rax+0x14]
   1400055b4:	jmp    0x1400055c8
   1400055b6:	lea    rdx,[rsp+0x130]
   1400055be:	add    rcx,0x18
   1400055c2:	call   QWORD PTR [rip+0x6cf0]        # 0x14000c2b8
   1400055c8:	lea    rcx,[rsp+0x138]
   1400055d0:	call   QWORD PTR [rip+0x6e0a]        # 0x14000c3e0
   1400055d6:	lea    rcx,[rsp+0x130]
   1400055de:	call   QWORD PTR [rip+0x6d8c]        # 0x14000c370
   1400055e4:	lea    rcx,[rsp+0x138]
   1400055ec:	mov    edx,0x2d
   1400055f1:	call   QWORD PTR [rip+0x6c99]        # 0x14000c290
   1400055f7:	lea    r9,[rsp+0x60]
   1400055fc:	lea    r8,[rsp+0x50]
   140005601:	movsd  xmm0,QWORD PTR [rip+0x8ad7]        # 0x14000e0e0
   140005609:	movsd  xmm1,QWORD PTR [rip+0x8ac7]        # 0x14000e0d8
   140005611:	movsd  QWORD PTR [rsp+0x60],xmm7
   140005617:	lea    rdx,[rsp+0x40]
   14000561c:	lea    rcx,[rsp+0x138]
   140005624:	movsd  QWORD PTR [rsp+0x68],xmm0
   14000562a:	movsd  xmm0,QWORD PTR [rip+0x8a9e]        # 0x14000e0d0
   140005632:	movsd  QWORD PTR [rsp+0x58],xmm1
   140005638:	movsd  xmm1,QWORD PTR [rip+0x8a88]        # 0x14000e0c8
   140005640:	movsd  QWORD PTR [rsp+0x40],xmm0
   140005646:	movsd  QWORD PTR [rsp+0x50],xmm15
   14000564d:	movsd  QWORD PTR [rsp+0x48],xmm1
   140005653:	call   QWORD PTR [rip+0x6c07]        # 0x14000c260
   140005659:	movsd  xmm0,QWORD PTR [rip+0x8a5f]        # 0x14000e0c0
   140005661:	movsd  xmm1,QWORD PTR [rip+0x8a4f]        # 0x14000e0b8
   140005669:	lea    r9,[rsp+0x60]
   14000566e:	lea    r8,[rsp+0x50]
   140005673:	lea    rdx,[rsp+0x40]
   140005678:	movsd  QWORD PTR [rsp+0x68],xmm0
   14000567e:	movsd  xmm0,QWORD PTR [rip+0x8a2a]        # 0x14000e0b0
   140005686:	movsd  QWORD PTR [rsp+0x60],xmm6
   14000568c:	lea    rcx,[rsp+0x138]
   140005694:	movsd  xmm6,QWORD PTR [rip+0x7ed4]        # 0x14000d570
   14000569c:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400056a2:	movsd  QWORD PTR [rsp+0x50],xmm1
   1400056a8:	movsd  QWORD PTR [rsp+0x58],xmm6
   1400056ae:	movsd  QWORD PTR [rsp+0x40],xmm10
   1400056b5:	call   QWORD PTR [rip+0x6ba5]        # 0x14000c260
   1400056bb:	lea    r9,[rsp+0x30]
   1400056c0:	lea    r8,[rsp+0x60]
   1400056c5:	movsd  xmm0,QWORD PTR [rip+0x89db]        # 0x14000e0a8
   1400056cd:	movsd  xmm1,QWORD PTR [rip+0x89cb]        # 0x14000e0a0
   1400056d5:	movsd  QWORD PTR [rsp+0x60],xmm14
   1400056dc:	lea    rdx,[rsp+0x50]
   1400056e1:	lea    rcx,[rsp+0x138]
   1400056e9:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400056ef:	movsd  QWORD PTR [rsp+0x58],xmm1
   1400056f5:	movsd  QWORD PTR [rsp+0x68],xmm6
   1400056fb:	call   QWORD PTR [rip+0x6b5f]        # 0x14000c260
   140005701:	lea    r8,[rip+0x8988]        # 0x14000e090
   140005708:	lea    rdx,[rsp+0x130]
   140005710:	lea    rcx,[rip+0x17e29]        # 0x14001d540
   140005717:	xor    r9d,r9d
   14000571a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005722:	call   QWORD PTR [rip+0x6a40]        # 0x14000c168
   140005728:	mov    rax,QWORD PTR [rbx]
   14000572b:	movaps xmm15,XMMWORD PTR [rsp+0x70]
   140005731:	movaps xmm14,XMMWORD PTR [rsp+0x80]
   14000573a:	movaps xmm10,XMMWORD PTR [rsp+0xc0]
   140005743:	mov    ecx,DWORD PTR [rax+0x10]
   140005746:	movaps xmm7,XMMWORD PTR [rsp+0xf0]
   14000574e:	movaps xmm6,XMMWORD PTR [rsp+0x100]
   140005756:	cmp    ecx,0x1
   140005759:	je     0x140005767
   14000575b:	test   ecx,ecx
   14000575d:	je     0x140005767
   14000575f:	mov    rcx,rbx
   140005762:	call   0x140004060
   140005767:	mov    rax,QWORD PTR [rbx]
   14000576a:	lea    rcx,[rsp+0x130]
   140005772:	mov    edx,DWORD PTR [rax+0x24]
   140005775:	call   QWORD PTR [rip+0x6b2d]        # 0x14000c2a8
   14000577b:	mov    r9,QWORD PTR [rbx]
   14000577e:	mov    ecx,DWORD PTR [r9+0x20]
   140005782:	mov    esi,eax
   140005784:	test   ecx,ecx
   140005786:	je     0x1400057c8
   140005788:	xor    edx,edx
   14000578a:	div    ecx
   14000578c:	mov    rcx,QWORD PTR [r9+0x8]
   140005790:	lea    rdi,[rcx+rdx*8]
   140005794:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140005798:	cmp    rcx,r9
   14000579b:	je     0x1400057cb
   14000579d:	nop    DWORD PTR [rax]
   1400057a0:	cmp    esi,DWORD PTR [rcx+0x8]
   1400057a3:	jne    0x1400057bb
   1400057a5:	lea    rdx,[rcx+0x10]
   1400057a9:	lea    rcx,[rsp+0x130]
   1400057b1:	call   QWORD PTR [rip+0x6ba1]        # 0x14000c358
   1400057b7:	test   al,al
   1400057b9:	jne    0x1400057cb
   1400057bb:	mov    rdi,QWORD PTR [rdi]
   1400057be:	mov    rcx,QWORD PTR [rdi]
   1400057c1:	cmp    rcx,QWORD PTR [rbx]
   1400057c4:	jne    0x1400057a0
   1400057c6:	jmp    0x1400057cb
   1400057c8:	mov    rdi,rbx
   1400057cb:	mov    rcx,QWORD PTR [rdi]
   1400057ce:	mov    rax,QWORD PTR [rbx]
   1400057d1:	cmp    rcx,rax
   1400057d4:	jne    0x1400058a6
   1400057da:	mov    rcx,rax
   1400057dd:	call   QWORD PTR [rip+0x6a4d]        # 0x14000c230
   1400057e3:	test   al,al
   1400057e5:	je     0x14000584b
   1400057e7:	mov    rax,QWORD PTR [rbx]
   1400057ea:	lea    rcx,[rsp+0x130]
   1400057f2:	mov    edx,DWORD PTR [rax+0x24]
   1400057f5:	call   QWORD PTR [rip+0x6aad]        # 0x14000c2a8
   1400057fb:	mov    r8,QWORD PTR [rbx]
   1400057fe:	mov    ecx,DWORD PTR [r8+0x20]
   140005802:	mov    esi,eax
   140005804:	test   ecx,ecx
   140005806:	je     0x140005848
   140005808:	xor    edx,edx
   14000580a:	div    ecx
   14000580c:	mov    rax,QWORD PTR [r8+0x8]
   140005810:	lea    rdi,[rax+rdx*8]
   140005814:	mov    rax,QWORD PTR [rax+rdx*8]
   140005818:	cmp    rax,r8
   14000581b:	je     0x14000584b
   14000581d:	nop    DWORD PTR [rax]
   140005820:	cmp    esi,DWORD PTR [rax+0x8]
   140005823:	jne    0x14000583b
   140005825:	lea    rdx,[rax+0x10]
   140005829:	lea    rcx,[rsp+0x130]
   140005831:	call   QWORD PTR [rip+0x6b21]        # 0x14000c358
   140005837:	test   al,al
   140005839:	jne    0x14000584b
   14000583b:	mov    rdi,QWORD PTR [rdi]
   14000583e:	mov    rax,QWORD PTR [rdi]
   140005841:	cmp    rax,QWORD PTR [rbx]
   140005844:	jne    0x140005820
   140005846:	jmp    0x14000584b
   140005848:	mov    rdi,rbx
   14000584b:	mov    rcx,QWORD PTR [rbx]
   14000584e:	mov    edx,0x8
   140005853:	call   QWORD PTR [rip+0x6a8f]        # 0x14000c2e8
   140005859:	mov    rbp,rax
   14000585c:	test   rax,rax
   14000585f:	je     0x140005899
   140005861:	mov    rcx,QWORD PTR [rdi]
   140005864:	lea    rdx,[rsp+0x130]
   14000586c:	mov    DWORD PTR [rax+0x8],esi
   14000586f:	mov    QWORD PTR [rax],rcx
   140005872:	lea    rcx,[rax+0x10]
   140005876:	call   QWORD PTR [rip+0x68d4]        # 0x14000c150
   14000587c:	lea    rcx,[rbp+0x18]
   140005880:	lea    rdx,[rsp+0x138]
   140005888:	call   QWORD PTR [rip+0x6ad2]        # 0x14000c360
   14000588e:	mov    QWORD PTR [rdi],rbp
   140005891:	mov    rax,QWORD PTR [rbx]
   140005894:	inc    DWORD PTR [rax+0x14]
   140005897:	jmp    0x1400058b8
   140005899:	xor    ebp,ebp
   14000589b:	mov    QWORD PTR [rdi],rbp
   14000589e:	mov    rax,QWORD PTR [rbx]
   1400058a1:	inc    DWORD PTR [rax+0x14]
   1400058a4:	jmp    0x1400058b8
   1400058a6:	lea    rdx,[rsp+0x138]
   1400058ae:	add    rcx,0x18
   1400058b2:	call   QWORD PTR [rip+0x6a00]        # 0x14000c2b8
   1400058b8:	lea    rcx,[rsp+0x130]
   1400058c0:	call   QWORD PTR [rip+0x6b1a]        # 0x14000c3e0
   1400058c6:	lea    rcx,[rsp+0x138]
   1400058ce:	call   QWORD PTR [rip+0x6a9c]        # 0x14000c370
   1400058d4:	mov    rbp,QWORD PTR [rsp+0x140]
   1400058dc:	add    rsp,0x110
   1400058e3:	pop    rdi
   1400058e4:	pop    rsi
   1400058e5:	pop    rbx
   1400058e6:	ret    
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	int3   
   1400058ed:	int3   
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	rex push rbx
   1400058f2:	push   rbp
   1400058f3:	push   rsi
   1400058f4:	push   rdi
   1400058f5:	push   r12
   1400058f7:	push   r13
   1400058f9:	push   r14
   1400058fb:	push   r15
   1400058fd:	sub    rsp,0x98
   140005904:	cmp    QWORD PTR [rcx+0x98],0x0
   14000590c:	movaps XMMWORD PTR [rsp+0x80],xmm6
   140005914:	mov    rsi,rcx
   140005917:	jne    0x140005957
   140005919:	mov    ecx,0x30
   14000591e:	call   0x14000b106
   140005923:	mov    rdi,rax
   140005926:	test   rax,rax
   140005929:	je     0x14000594e
   14000592b:	mov    rdx,rsi
   14000592e:	mov    rcx,rax
   140005931:	call   QWORD PTR [rip+0x6da9]        # 0x14000c6e0
   140005937:	lea    r11,[rip+0x8aaa]        # 0x14000e3e8
   14000593e:	lea    rax,[rip+0x8a63]        # 0x14000e3a8
   140005945:	mov    QWORD PTR [rdi],r11
   140005948:	mov    QWORD PTR [rdi+0x10],rax
   14000594c:	jmp    0x140005950
   14000594e:	xor    edi,edi
   140005950:	mov    QWORD PTR [rsi+0x98],rdi
   140005957:	mov    rcx,QWORD PTR [rsi+0x98]
   14000595e:	call   QWORD PTR [rip+0x6d74]        # 0x14000c6d8
   140005964:	test   rax,rax
   140005967:	je     0x140005989
   140005969:	mov    rcx,QWORD PTR [rsi+0x98]
   140005970:	call   QWORD PTR [rip+0x6d62]        # 0x14000c6d8
   140005976:	mov    rcx,rax
   140005979:	test   rax,rax
   14000597c:	je     0x140005989
   14000597e:	mov    rax,QWORD PTR [rax]
   140005981:	mov    edx,0x1
   140005986:	call   QWORD PTR [rax+0x18]
   140005989:	mov    rcx,QWORD PTR [rsi+0x98]
   140005990:	xor    edx,edx
   140005992:	call   QWORD PTR [rip+0x6d38]        # 0x14000c6d0
   140005998:	mov    rcx,QWORD PTR [rsi+0x98]
   14000599f:	mov    dl,0x1
   1400059a1:	call   QWORD PTR [rip+0x6d21]        # 0x14000c6c8
   1400059a7:	mov    rcx,QWORD PTR [rsi+0x98]
   1400059ae:	mov    edx,0x1
   1400059b3:	call   QWORD PTR [rip+0x6d07]        # 0x14000c6c0
   1400059b9:	mov    ecx,0x30
   1400059be:	call   0x14000b106
   1400059c3:	lea    rbp,[rip+0x823e]        # 0x14000dc08
   1400059ca:	lea    r12,[rip+0x81f7]        # 0x14000dbc8
   1400059d1:	mov    rdi,rax
   1400059d4:	test   rax,rax
   1400059d7:	je     0x1400059f5
   1400059d9:	mov    rdx,QWORD PTR [rsi+0x98]
   1400059e0:	xor    r8d,r8d
   1400059e3:	mov    rcx,rax
   1400059e6:	call   QWORD PTR [rip+0x7a4c]        # 0x14000d438
   1400059ec:	mov    QWORD PTR [rdi],rbp
   1400059ef:	mov    QWORD PTR [rdi+0x10],r12
   1400059f3:	jmp    0x1400059f7
   1400059f5:	xor    edi,edi
   1400059f7:	mov    rcx,QWORD PTR [rsi+0x98]
   1400059fe:	mov    rdx,rdi
   140005a01:	call   QWORD PTR [rip+0x6cb1]        # 0x14000c6b8
   140005a07:	mov    ecx,0x20
   140005a0c:	call   0x14000b106
   140005a11:	mov    r13,rax
   140005a14:	test   rax,rax
   140005a17:	je     0x140005a4a
   140005a19:	mov    rcx,QWORD PTR [rsi+0x98]
   140005a20:	call   QWORD PTR [rip+0x6cb2]        # 0x14000c6d8
   140005a26:	mov    rcx,r13
   140005a29:	mov    rdx,rax
   140005a2c:	call   QWORD PTR [rip+0x6c7e]        # 0x14000c6b0
   140005a32:	lea    rdx,[rip+0x88df]        # 0x14000e318
   140005a39:	lea    rax,[rip+0x8848]        # 0x14000e288
   140005a40:	mov    QWORD PTR [r13+0x0],rdx
   140005a44:	mov    QWORD PTR [r13+0x10],rax
   140005a48:	jmp    0x140005a4d
   140005a4a:	xor    r13d,r13d
   140005a4d:	xor    edx,edx
   140005a4f:	mov    rcx,r13
   140005a52:	call   QWORD PTR [rip+0x6c50]        # 0x14000c6a8
   140005a58:	mov    edx,0x2
   140005a5d:	mov    rcx,r13
   140005a60:	call   QWORD PTR [rip+0x79e2]        # 0x14000d448
   140005a66:	mov    rcx,QWORD PTR [rsi+0x98]
   140005a6d:	call   QWORD PTR [rip+0x6c65]        # 0x14000c6d8
   140005a73:	mov    rdx,r13
   140005a76:	mov    rcx,rax
   140005a79:	call   QWORD PTR [rip+0x6c21]        # 0x14000c6a0
   140005a7f:	mov    rdi,QWORD PTR [rip+0x692a]        # 0x14000c3b0
   140005a86:	lea    r15,[rsi+0xa0]
   140005a8d:	lea    rdx,[rsp+0xe8]
   140005a95:	mov    rcx,r15
   140005a98:	mov    QWORD PTR [rsp+0xe8],rdi
   140005aa0:	call   0x1400040d0
   140005aa5:	mov    r11d,DWORD PTR [rdi]
   140005aa8:	test   r11d,r11d
   140005aab:	je     0x140005ac6
   140005aad:	cmp    r11d,0xffffffff
   140005ab1:	je     0x140005acf
   140005ab3:	lock add DWORD PTR [rdi],0xffffffff
   140005ab7:	setne  al
   140005aba:	test   al,al
   140005abc:	jne    0x140005acf
   140005abe:	mov    rdi,QWORD PTR [rsp+0xe8]
   140005ac6:	mov    rcx,rdi
   140005ac9:	call   QWORD PTR [rip+0x6821]        # 0x14000c2f0
   140005acf:	mov    ecx,0x30
   140005ad4:	call   0x14000b106
   140005ad9:	mov    rbx,rax
   140005adc:	test   rax,rax
   140005adf:	je     0x140005b06
   140005ae1:	mov    rcx,QWORD PTR [rsi+0x98]
   140005ae8:	call   QWORD PTR [rip+0x6bea]        # 0x14000c6d8
   140005aee:	xor    r8d,r8d
   140005af1:	mov    rcx,rbx
   140005af4:	mov    rdx,rax
   140005af7:	call   QWORD PTR [rip+0x793b]        # 0x14000d438
   140005afd:	mov    QWORD PTR [rbx],rbp
   140005b00:	mov    QWORD PTR [rbx+0x10],r12
   140005b04:	jmp    0x140005b08
   140005b06:	xor    ebx,ebx
   140005b08:	lea    rcx,[rsp+0x30]
   140005b0d:	mov    rdx,rbx
   140005b10:	call   0x140001630
   140005b15:	mov    rcx,QWORD PTR [rsp+0x58]
   140005b1a:	xorpd  xmm6,xmm6
   140005b1e:	movapd xmm1,xmm6
   140005b22:	call   QWORD PTR [rip+0x6b70]        # 0x14000c698
   140005b28:	mov    rcx,QWORD PTR [rsp+0x68]
   140005b2d:	movapd xmm1,xmm6
   140005b31:	call   QWORD PTR [rip+0x6b61]        # 0x14000c698
   140005b37:	xor    r9d,r9d
   140005b3a:	xor    r8d,r8d
   140005b3d:	mov    rdx,rbx
   140005b40:	mov    rcx,r13
   140005b43:	call   QWORD PTR [rip+0x790f]        # 0x14000d458
   140005b49:	or     rcx,0xffffffffffffffff
   140005b4d:	xor    eax,eax
   140005b4f:	lea    rdi,[rip+0x8722]        # 0x14000e278
   140005b56:	repnz scas al,BYTE PTR es:[rdi]
   140005b58:	not    rcx
   140005b5b:	lea    rdx,[rcx-0x1]
   140005b5f:	lea    rcx,[rip+0x8712]        # 0x14000e278
   140005b66:	call   QWORD PTR [rip+0x66bc]        # 0x14000c228
   140005b6c:	mov    rcx,QWORD PTR [rsp+0x38]
   140005b71:	lea    rdx,[rsp+0xf0]
   140005b79:	mov    QWORD PTR [rsp+0xf0],rax
   140005b81:	call   QWORD PTR [rip+0x7921]        # 0x14000d4a8
   140005b87:	lea    rcx,[rsp+0xf0]
   140005b8f:	call   QWORD PTR [rip+0x684b]        # 0x14000c3e0
   140005b95:	xor    edx,edx
   140005b97:	mov    rcx,rbx
   140005b9a:	call   QWORD PTR [rip+0x6af0]        # 0x14000c690
   140005ba0:	xor    r12d,r12d
   140005ba3:	xor    r14d,r14d
   140005ba6:	cmp    DWORD PTR [rsi+0x48],r12d
   140005baa:	jle    0x140005cd1
   140005bb0:	mov    DWORD PTR [rsp+0xe0],r12d
   140005bb8:	nop    DWORD PTR [rax+rax*1+0x0]
   140005bc0:	mov    ecx,0x138
   140005bc5:	call   0x14000b106
   140005bca:	mov    rdi,rax
   140005bcd:	test   rax,rax
   140005bd0:	je     0x140005bef
   140005bd2:	mov    rcx,QWORD PTR [rsi+0x98]
   140005bd9:	call   QWORD PTR [rip+0x6af9]        # 0x14000c6d8
   140005bdf:	mov    rcx,rdi
   140005be2:	mov    rdx,rax
   140005be5:	call   0x140009e50
   140005bea:	mov    rbp,rax
   140005bed:	jmp    0x140005bf1
   140005bef:	xor    ebp,ebp
   140005bf1:	xor    r9d,r9d
   140005bf4:	xor    r8d,r8d
   140005bf7:	mov    rdx,rbp
   140005bfa:	mov    rcx,r13
   140005bfd:	call   QWORD PTR [rip+0x7855]        # 0x14000d458
   140005c03:	mov    edi,DWORD PTR [rsi+0x48]
   140005c06:	xor    r15b,r15b
   140005c09:	dec    edi
   140005c0b:	cmp    r12d,edi
   140005c0e:	jge    0x140005c21
   140005c10:	mov    rdx,QWORD PTR [rsi+0x40]
   140005c14:	mov    rax,QWORD PTR [rdx+0x10]
   140005c18:	lea    rcx,[r14+rax*1]
   140005c1c:	movzx  r15d,BYTE PTR [rcx+rdx*1]
   140005c21:	mov    r8d,DWORD PTR [rsp+0xe0]
   140005c29:	lea    rdx,[rsp+0xf8]
   140005c31:	lea    rcx,[rsi+0x38]
   140005c35:	mov    r9d,0x3
   140005c3b:	sete   bl
   140005c3e:	call   QWORD PTR [rip+0x665c]        # 0x14000c2a0
   140005c44:	lea    rcx,[rbp+0x128]
   140005c4b:	mov    DWORD PTR [rbp+0x130],r12d
   140005c52:	mov    rdx,rax
   140005c55:	mov    rdi,rax
   140005c58:	call   QWORD PTR [rip+0x676a]        # 0x14000c3c8
   140005c5e:	mov    rcx,rbp
   140005c61:	mov    BYTE PTR [rbp+0x134],r15b
   140005c68:	mov    BYTE PTR [rbp+0x135],bl
   140005c6e:	call   0x140009cb0
   140005c73:	mov    rcx,rdi
   140005c76:	call   QWORD PTR [rip+0x6754]        # 0x14000c3d0
   140005c7c:	mov    QWORD PTR [rbp+0x120],rsi
   140005c83:	lea    r15,[rsi+0xa0]
   140005c8a:	mov    rax,QWORD PTR [r15]
   140005c8d:	mov    ecx,DWORD PTR [rax]
   140005c8f:	cmp    ecx,0x1
   140005c92:	je     0x140005cad
   140005c94:	test   ecx,ecx
   140005c96:	je     0x140005cad
   140005c98:	mov    edx,0x7fffffff
   140005c9d:	mov    r8d,0x1
   140005ca3:	mov    rcx,r15
   140005ca6:	call   0x140002ba0
   140005cab:	jmp    0x140005cb6
   140005cad:	mov    rcx,r15
   140005cb0:	call   QWORD PTR [rip+0x6592]        # 0x14000c248
   140005cb6:	add    DWORD PTR [rsp+0xe0],0x3
   140005cbe:	inc    r12d
   140005cc1:	mov    QWORD PTR [rax],rbp
   140005cc4:	inc    r14
   140005cc7:	cmp    r12d,DWORD PTR [rsi+0x48]
   140005ccb:	jl     0x140005bc0
   140005cd1:	mov    ecx,0x30
   140005cd6:	call   0x14000b106
   140005cdb:	mov    rdi,rax
   140005cde:	test   rax,rax
   140005ce1:	je     0x140005d0c
   140005ce3:	mov    edx,0xa
   140005ce8:	mov    rcx,rax
   140005ceb:	mov    DWORD PTR [rsp+0x20],0x7
   140005cf3:	lea    r9d,[rdx-0x3]
   140005cf7:	mov    r8d,edx
   140005cfa:	call   QWORD PTR [rip+0x7790]        # 0x14000d490
   140005d00:	lea    r11,[rip+0x7911]        # 0x14000d618
   140005d07:	mov    QWORD PTR [rdi],r11
   140005d0a:	jmp    0x140005d0e
   140005d0c:	xor    edi,edi
   140005d0e:	mov    rdx,rdi
   140005d11:	mov    rcx,r13
   140005d14:	call   QWORD PTR [rip+0x696e]        # 0x14000c688
   140005d1a:	mov    rcx,QWORD PTR [rsi+0x98]
   140005d21:	call   QWORD PTR [rip+0x6959]        # 0x14000c680
   140005d27:	mov    rcx,rax
   140005d2a:	call   QWORD PTR [rip+0x7790]        # 0x14000d4c0
   140005d30:	mov    rcx,QWORD PTR [rsi+0x98]
   140005d37:	call   QWORD PTR [rip+0x6943]        # 0x14000c680
   140005d3d:	lea    rcx,[rsp+0xe0]
   140005d45:	mov    edx,0x1
   140005d4a:	mov    rdi,rax
   140005d4d:	mov    DWORD PTR [rsp+0xe0],0x110000
   140005d58:	call   QWORD PTR [rip+0x7692]        # 0x14000d3f0
   140005d5e:	mov    edx,DWORD PTR [rsp+0xe0]
   140005d65:	mov    rcx,rdi
   140005d68:	call   QWORD PTR [rip+0x76a2]        # 0x14000d410
   140005d6e:	mov    rcx,QWORD PTR [rsi+0x98]
   140005d75:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   140005d7d:	add    rsp,0x98
   140005d84:	pop    r15
   140005d86:	pop    r14
   140005d88:	pop    r13
   140005d8a:	pop    r12
   140005d8c:	pop    rdi
   140005d8d:	pop    rsi
   140005d8e:	pop    rbp
   140005d8f:	pop    rbx
   140005d90:	rex.W jmp QWORD PTR [rip+0x7729]        # 0x14000d4c0
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	mov    QWORD PTR [rsp+0x8],rbx
   140005da5:	push   rdi
   140005da6:	sub    rsp,0x20
   140005daa:	mov    ebx,edx
   140005dac:	mov    rdi,rcx
   140005daf:	call   QWORD PTR [rip+0x6a1b]        # 0x14000c7d0
   140005db5:	test   bl,0x1
   140005db8:	je     0x140005dc2
   140005dba:	mov    rcx,rdi
   140005dbd:	call   0x14000b100
   140005dc2:	mov    rax,rdi
   140005dc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005dca:	add    rsp,0x20
   140005dce:	pop    rdi
   140005dcf:	ret    
   140005dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140005dd5:	push   rdi
   140005dd6:	sub    rsp,0x20
   140005dda:	mov    ebx,edx
   140005ddc:	mov    rdi,rcx
   140005ddf:	call   QWORD PTR [rip+0x69f3]        # 0x14000c7d8
   140005de5:	test   bl,0x1
   140005de8:	je     0x140005df2
   140005dea:	mov    rcx,rdi
   140005ded:	call   0x14000b100
   140005df2:	mov    rax,rdi
   140005df5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005dfa:	add    rsp,0x20
   140005dfe:	pop    rdi
   140005dff:	ret    
   140005e00:	sub    rcx,0x10
   140005e04:	jmp    0x140005da0
   140005e09:	int3   
   140005e0a:	int3   
   140005e0b:	int3   
   140005e0c:	int3   
   140005e0d:	int3   
   140005e0e:	int3   
   140005e0f:	int3   
   140005e10:	sub    rcx,0x10
   140005e14:	jmp    0x140005dd0
   140005e19:	int3   
   140005e1a:	int3   
   140005e1b:	int3   
   140005e1c:	int3   
   140005e1d:	int3   
   140005e1e:	int3   
   140005e1f:	int3   
   140005e20:	mov    QWORD PTR [rsp+0x10],rbx
   140005e25:	mov    QWORD PTR [rsp+0x18],rsi
   140005e2a:	push   rdi
   140005e2b:	sub    rsp,0x20
   140005e2f:	mov    rax,QWORD PTR [rcx+0x60]
   140005e33:	mov    rsi,rdx
   140005e36:	mov    rbx,rcx
   140005e39:	cmp    DWORD PTR [rax+0x14],0x0
   140005e3d:	je     0x140005e7d
   140005e3f:	xor    r8d,r8d
   140005e42:	cmp    DWORD PTR [rax+0x20],r8d
   140005e46:	je     0x140005e57
   140005e48:	mov    edx,DWORD PTR [rax+0x24]
   140005e4b:	mov    rcx,rsi
   140005e4e:	call   QWORD PTR [rip+0x6454]        # 0x14000c2a8
   140005e54:	mov    r8d,eax
   140005e57:	lea    rcx,[rbx+0x60]
   140005e5b:	mov    rdx,rsi
   140005e5e:	call   0x1400022d0
   140005e63:	mov    rdx,QWORD PTR [rax]
   140005e66:	cmp    rdx,QWORD PTR [rbx+0x60]
   140005e6a:	je     0x140005e7d
   140005e6c:	lea    rcx,[rsp+0x30]
   140005e71:	add    rdx,0x18
   140005e75:	call   QWORD PTR [rip+0x64e5]        # 0x14000c360
   140005e7b:	jmp    0x140005e8a
   140005e7d:	lea    rcx,[rsp+0x30]
   140005e82:	xor    edx,edx
   140005e84:	call   QWORD PTR [rip+0x6406]        # 0x14000c290
   140005e8a:	lea    rdx,[rsp+0x30]
   140005e8f:	mov    rcx,rbx
   140005e92:	call   0x1400025c0
   140005e97:	lea    rcx,[rsp+0x30]
   140005e9c:	call   QWORD PTR [rip+0x64ce]        # 0x14000c370
   140005ea2:	mov    rcx,rbx
   140005ea5:	call   0x140004470
   140005eaa:	mov    rcx,rbx
   140005ead:	mov    rbx,QWORD PTR [rsp+0x38]
   140005eb2:	mov    rsi,QWORD PTR [rsp+0x40]
   140005eb7:	add    rsp,0x20
   140005ebb:	pop    rdi
   140005ebc:	jmp    0x1400058f0
   140005ec1:	int3   
   140005ec2:	int3   
   140005ec3:	int3   
   140005ec4:	int3   
   140005ec5:	int3   
   140005ec6:	int3   
   140005ec7:	int3   
   140005ec8:	int3   
   140005ec9:	int3   
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	mov    QWORD PTR [rsp+0x10],rbx
   140005ed5:	mov    QWORD PTR [rsp+0x18],rsi
   140005eda:	mov    QWORD PTR [rsp+0x20],rdi
   140005edf:	push   r12
   140005ee1:	push   r13
   140005ee3:	push   r14
   140005ee5:	sub    rsp,0x40
   140005ee9:	xor    esi,esi
   140005eeb:	xor    r8d,r8d
   140005eee:	mov    rdi,rcx
   140005ef1:	mov    DWORD PTR [rsp+0x60],esi
   140005ef5:	call   QWORD PTR [rip+0x753d]        # 0x14000d438
   140005efb:	lea    r11,[rip+0x8906]        # 0x14000e808
   140005f02:	lea    rax,[rip+0x88bf]        # 0x14000e7c8
   140005f09:	lea    rcx,[rdi+0x30]
   140005f0d:	xor    edx,edx
   140005f0f:	mov    QWORD PTR [rdi],r11
   140005f12:	mov    QWORD PTR [rdi+0x10],rax
   140005f16:	call   QWORD PTR [rip+0x6374]        # 0x14000c290
   140005f1c:	lea    rcx,[rdi+0x38]
   140005f20:	call   QWORD PTR [rip+0x62f2]        # 0x14000c218
   140005f26:	mov    r11,QWORD PTR [rip+0x6473]        # 0x14000c3a0
   140005f2d:	mov    edx,0x3c0
   140005f32:	mov    QWORD PTR [rdi+0x40],r11
   140005f36:	mov    DWORD PTR [rdi+0x54],esi
   140005f39:	mov    DWORD PTR [rdi+0x58],esi
   140005f3c:	mov    rax,QWORD PTR [rip+0x6465]        # 0x14000c3a8
   140005f43:	mov    r8d,0x280
   140005f49:	mov    rcx,rdi
   140005f4c:	mov    QWORD PTR [rdi+0x60],rax
   140005f50:	mov    QWORD PTR [rdi+0x98],rsi
   140005f57:	mov    rax,QWORD PTR [rip+0x6452]        # 0x14000c3b0
   140005f5e:	mov    QWORD PTR [rdi+0xa0],rax
   140005f65:	mov    BYTE PTR [rdi+0xa8],sil
   140005f6c:	call   QWORD PTR [rip+0x688e]        # 0x14000c800
   140005f72:	movsd  xmm5,QWORD PTR [rip+0x82ee]        # 0x14000e268
   140005f7a:	movsd  xmm0,QWORD PTR [rip+0x82de]        # 0x14000e260
   140005f82:	lea    rdx,[rsp+0x30]
   140005f87:	lea    rcx,[rdi+0x38]
   140005f8b:	movsd  QWORD PTR [rsp+0x30],xmm5
   140005f91:	movsd  QWORD PTR [rsp+0x38],xmm0
   140005f97:	call   QWORD PTR [rip+0x6283]        # 0x14000c220
   140005f9d:	lea    rdx,[rsp+0x30]
   140005fa2:	lea    rcx,[rdi+0x38]
   140005fa6:	movsd  xmm5,QWORD PTR [rip+0x82c2]        # 0x14000e270
   140005fae:	movsd  xmm0,QWORD PTR [rip+0x82a2]        # 0x14000e258
   140005fb6:	movsd  QWORD PTR [rsp+0x30],xmm5
   140005fbc:	movsd  QWORD PTR [rsp+0x38],xmm0
   140005fc2:	call   QWORD PTR [rip+0x6258]        # 0x14000c220
   140005fc8:	lea    rdx,[rsp+0x30]
   140005fcd:	lea    rcx,[rdi+0x38]
   140005fd1:	movsd  xmm5,QWORD PTR [rip+0x759f]        # 0x14000d578
   140005fd9:	movsd  QWORD PTR [rsp+0x30],xmm5
   140005fdf:	movsd  QWORD PTR [rsp+0x38],xmm5
   140005fe5:	call   QWORD PTR [rip+0x6235]        # 0x14000c220
   140005feb:	lea    rdx,[rsp+0x30]
   140005ff0:	lea    rcx,[rdi+0x38]
   140005ff4:	movsd  xmm5,QWORD PTR [rip+0x824c]        # 0x14000e248
   140005ffc:	movsd  xmm0,QWORD PTR [rip+0x8234]        # 0x14000e238
   140006004:	movsd  QWORD PTR [rsp+0x30],xmm5
   14000600a:	movsd  QWORD PTR [rsp+0x38],xmm0
   140006010:	call   QWORD PTR [rip+0x620a]        # 0x14000c220
   140006016:	lea    rdx,[rsp+0x30]
   14000601b:	lea    rcx,[rdi+0x38]
   14000601f:	movsd  xmm5,QWORD PTR [rip+0x8229]        # 0x14000e250
   140006027:	movsd  xmm0,QWORD PTR [rip+0x8211]        # 0x14000e240
   14000602f:	movsd  QWORD PTR [rsp+0x30],xmm5
   140006035:	movsd  QWORD PTR [rsp+0x38],xmm0
   14000603b:	call   QWORD PTR [rip+0x61df]        # 0x14000c220
   140006041:	lea    rdx,[rsp+0x30]
   140006046:	lea    rcx,[rdi+0x38]
   14000604a:	movsd  xmm5,QWORD PTR [rip+0x751e]        # 0x14000d570
   140006052:	movsd  QWORD PTR [rsp+0x30],xmm5
   140006058:	movsd  QWORD PTR [rsp+0x38],xmm5
   14000605e:	call   QWORD PTR [rip+0x61bc]        # 0x14000c220
   140006064:	lea    ecx,[rsi+0x30]
   140006067:	mov    DWORD PTR [rdi+0x48],0x2
   14000606e:	mov    DWORD PTR [rdi+0x4c],0xffffffff
   140006075:	mov    BYTE PTR [rdi+0x50],sil
   140006079:	call   0x14000b106
   14000607e:	lea    r13,[rip+0x85d3]        # 0x14000e658
   140006085:	lea    r14,[rip+0x858c]        # 0x14000e618
   14000608c:	mov    rbx,rax
   14000608f:	test   rax,rax
   140006092:	je     0x1400060a9
   140006094:	mov    rdx,rdi
   140006097:	mov    rcx,rax
   14000609a:	call   QWORD PTR [rip+0x6758]        # 0x14000c7f8
   1400060a0:	mov    QWORD PTR [rbx],r13
   1400060a3:	mov    QWORD PTR [rbx+0x10],r14
   1400060a7:	jmp    0x1400060ab
   1400060a9:	xor    ebx,ebx
   1400060ab:	mov    ecx,0x10
   1400060b0:	mov    QWORD PTR [rdi+0x68],rbx
   1400060b4:	call   0x14000b106
   1400060b9:	lea    r12,[rip+0x84f8]        # 0x14000e5b8
   1400060c0:	mov    rbx,rax
   1400060c3:	test   rax,rax
   1400060c6:	je     0x140006108
   1400060c8:	lea    r8,[rip+0x84d1]        # 0x14000e5a0
   1400060cf:	lea    rdx,[rsp+0x60]
   1400060d4:	lea    rcx,[rip+0x17465]        # 0x14001d540
   1400060db:	xor    r9d,r9d
   1400060de:	mov    esi,0x1
   1400060e3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400060eb:	call   QWORD PTR [rip+0x6077]        # 0x14000c168
   1400060f1:	mov    r8,QWORD PTR [rdi+0x68]
   1400060f5:	lea    rdx,[rsp+0x60]
   1400060fa:	mov    rcx,rbx
   1400060fd:	call   QWORD PTR [rip+0x66ed]        # 0x14000c7f0
   140006103:	mov    QWORD PTR [rbx],r12
   140006106:	jmp    0x14000610a
   140006108:	xor    ebx,ebx
   14000610a:	mov    QWORD PTR [rdi+0x78],rbx
   14000610e:	test   sil,0x1
   140006112:	je     0x140006122
   140006114:	lea    rcx,[rsp+0x60]
   140006119:	and    esi,0xfffffffe
   14000611c:	call   QWORD PTR [rip+0x62be]        # 0x14000c3e0
   140006122:	mov    ecx,0x10
   140006127:	call   0x14000b106
   14000612c:	mov    rbx,rax
   14000612f:	test   rax,rax
   140006132:	je     0x140006172
   140006134:	lea    r8,[rip+0x8455]        # 0x14000e590
   14000613b:	lea    rdx,[rsp+0x60]
   140006140:	lea    rcx,[rip+0x173f9]        # 0x14001d540
   140006147:	xor    r9d,r9d
   14000614a:	or     esi,0x2
   14000614d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140006155:	call   QWORD PTR [rip+0x600d]        # 0x14000c168
   14000615b:	mov    r8,QWORD PTR [rdi+0x68]
   14000615f:	lea    rdx,[rsp+0x60]
   140006164:	mov    rcx,rbx
   140006167:	call   QWORD PTR [rip+0x6683]        # 0x14000c7f0
   14000616d:	mov    QWORD PTR [rbx],r12
   140006170:	jmp    0x140006174
   140006172:	xor    ebx,ebx
   140006174:	mov    QWORD PTR [rdi+0x80],rbx
   14000617b:	test   sil,0x2
   14000617f:	je     0x14000618f
   140006181:	lea    rcx,[rsp+0x60]
   140006186:	and    esi,0xfffffffd
   140006189:	call   QWORD PTR [rip+0x6251]        # 0x14000c3e0
   14000618f:	mov    ecx,0x10
   140006194:	call   0x14000b106
   140006199:	mov    rbx,rax
   14000619c:	test   rax,rax
   14000619f:	je     0x1400061df
   1400061a1:	lea    r8,[rip+0x83d8]        # 0x14000e580
   1400061a8:	lea    rdx,[rsp+0x60]
   1400061ad:	lea    rcx,[rip+0x1738c]        # 0x14001d540
   1400061b4:	xor    r9d,r9d
   1400061b7:	or     esi,0x4
   1400061ba:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400061c2:	call   QWORD PTR [rip+0x5fa0]        # 0x14000c168
   1400061c8:	mov    r8,QWORD PTR [rdi+0x68]
   1400061cc:	lea    rdx,[rsp+0x60]
   1400061d1:	mov    rcx,rbx
   1400061d4:	call   QWORD PTR [rip+0x6616]        # 0x14000c7f0
   1400061da:	mov    QWORD PTR [rbx],r12
   1400061dd:	jmp    0x1400061e1
   1400061df:	xor    ebx,ebx
   1400061e1:	mov    QWORD PTR [rdi+0x88],rbx
   1400061e8:	test   sil,0x4
   1400061ec:	je     0x1400061fc
   1400061ee:	lea    rcx,[rsp+0x60]
   1400061f3:	and    esi,0xfffffffb
   1400061f6:	call   QWORD PTR [rip+0x61e4]        # 0x14000c3e0
   1400061fc:	mov    rcx,QWORD PTR [rdi+0x80]
   140006203:	mov    dl,0x1
   140006205:	call   QWORD PTR [rip+0x65dd]        # 0x14000c7e8
   14000620b:	mov    rdx,QWORD PTR [rdi+0x78]
   14000620f:	mov    rcx,QWORD PTR [rdi+0x68]
   140006213:	call   QWORD PTR [rip+0x65c7]        # 0x14000c7e0
   140006219:	mov    rdx,QWORD PTR [rdi+0x80]
   140006220:	mov    rcx,QWORD PTR [rdi+0x68]
   140006224:	call   QWORD PTR [rip+0x65b6]        # 0x14000c7e0
   14000622a:	mov    rdx,QWORD PTR [rdi+0x88]
   140006231:	mov    rcx,QWORD PTR [rdi+0x68]
   140006235:	call   QWORD PTR [rip+0x65a5]        # 0x14000c7e0
   14000623b:	mov    ecx,0x30
   140006240:	call   0x14000b106
   140006245:	mov    rbx,rax
   140006248:	test   rax,rax
   14000624b:	je     0x140006262
   14000624d:	mov    rdx,rdi
   140006250:	mov    rcx,rax
   140006253:	call   QWORD PTR [rip+0x659f]        # 0x14000c7f8
   140006259:	mov    QWORD PTR [rbx],r13
   14000625c:	mov    QWORD PTR [rbx+0x10],r14
   140006260:	jmp    0x140006264
   140006262:	xor    ebx,ebx
   140006264:	mov    ecx,0x10
   140006269:	mov    QWORD PTR [rdi+0x70],rbx
   14000626d:	call   0x14000b106
   140006272:	mov    rbx,rax
   140006275:	test   rax,rax
   140006278:	je     0x1400062b8
   14000627a:	lea    r8,[rip+0x82ef]        # 0x14000e570
   140006281:	lea    rdx,[rsp+0x60]
   140006286:	lea    rcx,[rip+0x172b3]        # 0x14001d540
   14000628d:	xor    r9d,r9d
   140006290:	or     esi,0x8
   140006293:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000629b:	call   QWORD PTR [rip+0x5ec7]        # 0x14000c168
   1400062a1:	mov    r8,QWORD PTR [rdi+0x68]
   1400062a5:	lea    rdx,[rsp+0x60]
   1400062aa:	mov    rcx,rbx
   1400062ad:	call   QWORD PTR [rip+0x653d]        # 0x14000c7f0
   1400062b3:	mov    QWORD PTR [rbx],r12
   1400062b6:	jmp    0x1400062ba
   1400062b8:	xor    ebx,ebx
   1400062ba:	mov    QWORD PTR [rdi+0x90],rbx
   1400062c1:	test   sil,0x8
   1400062c5:	je     0x1400062d2
   1400062c7:	lea    rcx,[rsp+0x60]
   1400062cc:	call   QWORD PTR [rip+0x610e]        # 0x14000c3e0
   1400062d2:	mov    rdx,QWORD PTR [rdi+0x90]
   1400062d9:	mov    rcx,QWORD PTR [rdi+0x70]
   1400062dd:	call   QWORD PTR [rip+0x64fd]        # 0x14000c7e0
   1400062e3:	mov    rcx,rdi
   1400062e6:	call   0x140004610
   1400062eb:	mov    rcx,rdi
   1400062ee:	call   0x140004470
   1400062f3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400062f8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400062fd:	mov    rax,rdi
   140006300:	mov    rdi,QWORD PTR [rsp+0x78]
   140006305:	add    rsp,0x40
   140006309:	pop    r14
   14000630b:	pop    r13
   14000630d:	pop    r12
   14000630f:	ret    
   140006310:	mov    QWORD PTR [rsp+0x8],rbx
   140006315:	push   rdi
   140006316:	sub    rsp,0x20
   14000631a:	mov    ebx,edx
   14000631c:	mov    rdi,rcx
   14000631f:	call   QWORD PTR [rip+0x6593]        # 0x14000c8b8
   140006325:	test   bl,0x1
   140006328:	je     0x140006332
   14000632a:	mov    rcx,rdi
   14000632d:	call   0x14000b100
   140006332:	mov    rax,rdi
   140006335:	mov    rbx,QWORD PTR [rsp+0x30]
   14000633a:	add    rsp,0x20
   14000633e:	pop    rdi
   14000633f:	ret    
   140006340:	mov    QWORD PTR [rsp+0x8],rbx
   140006345:	push   rdi
   140006346:	sub    rsp,0x20
   14000634a:	mov    ebx,edx
   14000634c:	mov    rdi,rcx
   14000634f:	call   QWORD PTR [rip+0x656b]        # 0x14000c8c0
   140006355:	test   bl,0x1
   140006358:	je     0x140006362
   14000635a:	mov    rcx,rdi
   14000635d:	call   0x14000b100
   140006362:	mov    rax,rdi
   140006365:	mov    rbx,QWORD PTR [rsp+0x30]
   14000636a:	add    rsp,0x20
   14000636e:	pop    rdi
   14000636f:	ret    
   140006370:	sub    rcx,0x10
   140006374:	jmp    0x140006450
   140006379:	int3   
   14000637a:	int3   
   14000637b:	int3   
   14000637c:	int3   
   14000637d:	int3   
   14000637e:	int3   
   14000637f:	int3   
   140006380:	sub    rcx,0x10
   140006384:	jmp    0x140006310
   140006389:	int3   
   14000638a:	int3   
   14000638b:	int3   
   14000638c:	int3   
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	mov    QWORD PTR [rsp+0x8],rbx
   140006395:	push   rdi
   140006396:	sub    rsp,0x20
   14000639a:	mov    rbx,rcx
   14000639d:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400063a4:	mov    eax,DWORD PTR [rcx]
   1400063a6:	test   eax,eax
   1400063a8:	je     0x1400063ba
   1400063aa:	cmp    eax,0xffffffff
   1400063ad:	je     0x1400063c7
   1400063af:	lock add DWORD PTR [rcx],0xffffffff
   1400063b3:	setne  al
   1400063b6:	test   al,al
   1400063b8:	jne    0x1400063c7
   1400063ba:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400063c1:	call   QWORD PTR [rip+0x5f29]        # 0x14000c2f0
   1400063c7:	mov    rcx,QWORD PTR [rbx+0x60]
   1400063cb:	mov    eax,DWORD PTR [rcx+0x10]
   1400063ce:	test   eax,eax
   1400063d0:	je     0x1400063e3
   1400063d2:	cmp    eax,0xffffffff
   1400063d5:	je     0x1400063f4
   1400063d7:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400063dc:	setne  al
   1400063df:	test   al,al
   1400063e1:	jne    0x1400063f4
   1400063e3:	mov    rcx,QWORD PTR [rbx+0x60]
   1400063e7:	lea    rdx,[rip+0xffffffffffffc2a2]        # 0x140002690
   1400063ee:	call   QWORD PTR [rip+0x5e94]        # 0x14000c288
   1400063f4:	mov    rcx,QWORD PTR [rbx+0x40]
   1400063f8:	mov    eax,DWORD PTR [rcx]
   1400063fa:	test   eax,eax
   1400063fc:	je     0x14000640e
   1400063fe:	cmp    eax,0xffffffff
   140006401:	je     0x140006421
   140006403:	lock add DWORD PTR [rcx],0xffffffff
   140006407:	setne  al
   14000640a:	test   al,al
   14000640c:	jne    0x140006421
   14000640e:	mov    rcx,QWORD PTR [rbx+0x40]
   140006412:	mov    edx,0x1
   140006417:	lea    r8d,[rdx+0x7]
   14000641b:	call   QWORD PTR [rip+0x5f77]        # 0x14000c398
   140006421:	lea    rcx,[rbx+0x38]
   140006425:	call   QWORD PTR [rip+0x5fa5]        # 0x14000c3d0
   14000642b:	lea    rcx,[rbx+0x30]
   14000642f:	call   QWORD PTR [rip+0x5f3b]        # 0x14000c370
   140006435:	mov    rcx,rbx
   140006438:	mov    rbx,QWORD PTR [rsp+0x30]
   14000643d:	add    rsp,0x20
   140006441:	pop    rdi
   140006442:	rex.W jmp QWORD PTR [rip+0x6207]        # 0x14000c650
   140006449:	int3   
   14000644a:	int3   
   14000644b:	int3   
   14000644c:	int3   
   14000644d:	int3   
   14000644e:	int3   
   14000644f:	int3   
   140006450:	mov    QWORD PTR [rsp+0x8],rbx
   140006455:	push   rdi
   140006456:	sub    rsp,0x20
   14000645a:	mov    ebx,edx
   14000645c:	mov    rdi,rcx
   14000645f:	call   0x140006390
   140006464:	test   bl,0x1
   140006467:	je     0x140006471
   140006469:	mov    rcx,rdi
   14000646c:	call   0x14000b100
   140006471:	mov    rax,rdi
   140006474:	mov    rbx,QWORD PTR [rsp+0x30]
   140006479:	add    rsp,0x20
   14000647d:	pop    rdi
   14000647e:	ret    
   14000647f:	int3   
   140006480:	rex push rbx
   140006482:	sub    rsp,0x20
   140006486:	cmp    QWORD PTR [rcx+0x98],0x0
   14000648e:	mov    rbx,rcx
   140006491:	jne    0x1400064a5
   140006493:	call   0x1400058f0
   140006498:	mov    rax,QWORD PTR [rbx+0x98]
   14000649f:	add    rsp,0x20
   1400064a3:	pop    rbx
   1400064a4:	ret    
   1400064a5:	mov    rax,QWORD PTR [rcx+0x98]
   1400064ac:	add    rsp,0x20
   1400064b0:	pop    rbx
   1400064b1:	ret    
   1400064b2:	int3   
   1400064b3:	int3   
   1400064b4:	int3   
   1400064b5:	int3   
   1400064b6:	int3   
   1400064b7:	int3   
   1400064b8:	int3   
   1400064b9:	int3   
   1400064ba:	int3   
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400064c5:	push   rdi
   1400064c6:	sub    rsp,0x70
   1400064ca:	mov    rbx,rcx
   1400064cd:	mov    rcx,QWORD PTR [rcx+0x80]
   1400064d4:	mov    edi,edx
   1400064d6:	call   QWORD PTR [rip+0x63ec]        # 0x14000c8c8
   1400064dc:	test   al,al
   1400064de:	je     0x1400066a1
   1400064e4:	cmp    edi,0x3
   1400064e7:	mov    QWORD PTR [rsp+0x80],rsi
   1400064ef:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400064f4:	movaps XMMWORD PTR [rsp+0x50],xmm7
   1400064f9:	movaps XMMWORD PTR [rsp+0x40],xmm8
   1400064ff:	movaps XMMWORD PTR [rsp+0x30],xmm9
   140006505:	xorpd  xmm7,xmm7
   140006509:	movsd  QWORD PTR [rsp+0x20],xmm7
   14000650f:	movsd  QWORD PTR [rsp+0x28],xmm7
   140006515:	movapd xmm9,xmm7
   14000651a:	jle    0x140006549
   14000651c:	lea    edx,[rdi-0x3]
   14000651f:	lea    rcx,[rbx+0x38]
   140006523:	call   QWORD PTR [rip+0x5e8f]        # 0x14000c3b8
   140006529:	lea    rdx,[rsp+0x20]
   14000652e:	mov    rcx,QWORD PTR [rax]
   140006531:	mov    rax,QWORD PTR [rax+0x8]
   140006535:	mov    QWORD PTR [rdx],rcx
   140006538:	mov    QWORD PTR [rdx+0x8],rax
   14000653c:	movsd  xmm9,QWORD PTR [rsp+0x28]
   140006543:	movsd  xmm7,QWORD PTR [rsp+0x20]
   140006549:	movsd  xmm6,QWORD PTR [rip+0x701f]        # 0x14000d570
   140006551:	mov    rax,QWORD PTR [rbx+0x38]
   140006555:	lea    edx,[rdi+0x3]
   140006558:	cmp    edx,DWORD PTR [rax+0x4]
   14000655b:	movsd  QWORD PTR [rsp+0x20],xmm6
   140006561:	movsd  QWORD PTR [rsp+0x28],xmm6
   140006567:	movapd xmm8,xmm6
   14000656c:	jge    0x140006598
   14000656e:	lea    rcx,[rbx+0x38]
   140006572:	call   QWORD PTR [rip+0x5e40]        # 0x14000c3b8
   140006578:	lea    rdx,[rsp+0x20]
   14000657d:	mov    rcx,QWORD PTR [rax]
   140006580:	mov    rax,QWORD PTR [rax+0x8]
   140006584:	mov    QWORD PTR [rdx],rcx
   140006587:	mov    QWORD PTR [rdx+0x8],rax
   14000658b:	movsd  xmm8,QWORD PTR [rsp+0x28]
   140006592:	movsd  xmm6,QWORD PTR [rsp+0x20]
   140006598:	movsd  xmm0,QWORD PTR [rip+0x7ae0]        # 0x14000e080
   1400065a0:	subsd  xmm6,xmm7
   1400065a4:	subsd  xmm8,xmm9
   1400065a9:	lea    rcx,[rbx+0x38]
   1400065ad:	mov    edx,edi
   1400065af:	divsd  xmm6,xmm0
   1400065b3:	divsd  xmm8,xmm0
   1400065b8:	call   QWORD PTR [rip+0x5dfa]        # 0x14000c3b8
   1400065be:	lea    rdx,[rsp+0x20]
   1400065c3:	mov    rcx,QWORD PTR [rax]
   1400065c6:	mov    rax,QWORD PTR [rax+0x8]
   1400065ca:	mov    QWORD PTR [rdx],rcx
   1400065cd:	mov    QWORD PTR [rdx+0x8],rax
   1400065d1:	movsd  xmm7,QWORD PTR [rsp+0x28]
   1400065d7:	movsd  xmm9,QWORD PTR [rsp+0x20]
   1400065de:	test   edi,edi
   1400065e0:	jle    0x140006620
   1400065e2:	movapd xmm0,xmm9
   1400065e7:	movapd xmm1,xmm7
   1400065eb:	lea    edx,[rdi-0x1]
   1400065ee:	lea    rcx,[rbx+0x38]
   1400065f2:	subsd  xmm0,xmm6
   1400065f6:	subsd  xmm1,xmm8
   1400065fb:	movsd  QWORD PTR [rsp+0x20],xmm0
   140006601:	movsd  QWORD PTR [rsp+0x28],xmm1
   140006607:	call   QWORD PTR [rip+0x5c4b]        # 0x14000c258
   14000660d:	lea    rdx,[rsp+0x20]
   140006612:	mov    rcx,QWORD PTR [rdx]
   140006615:	mov    QWORD PTR [rax],rcx
   140006618:	mov    rcx,QWORD PTR [rdx+0x8]
   14000661c:	mov    QWORD PTR [rax+0x8],rcx
   140006620:	mov    rax,QWORD PTR [rbx+0x38]
   140006624:	lea    edx,[rdi+0x1]
   140006627:	cmp    edx,DWORD PTR [rax+0x4]
   14000662a:	jge    0x14000665f
   14000662c:	addsd  xmm6,xmm9
   140006631:	addsd  xmm7,xmm8
   140006636:	lea    rcx,[rbx+0x38]
   14000663a:	movsd  QWORD PTR [rsp+0x20],xmm6
   140006640:	movsd  QWORD PTR [rsp+0x28],xmm7
   140006646:	call   QWORD PTR [rip+0x5c0c]        # 0x14000c258
   14000664c:	lea    rdx,[rsp+0x20]
   140006651:	mov    rcx,QWORD PTR [rdx]
   140006654:	mov    QWORD PTR [rax],rcx
   140006657:	mov    rcx,QWORD PTR [rdx+0x8]
   14000665b:	mov    QWORD PTR [rax+0x8],rcx
   14000665f:	lea    rcx,[rbx+0x40]
   140006663:	call   0x140004400
   140006668:	mov    rsi,QWORD PTR [rsp+0x80]
   140006670:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   140006676:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   14000667c:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140006681:	mov    r11,rax
   140006684:	mov    eax,0x55555556
   140006689:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14000668e:	imul   edi
   140006690:	mov    ecx,edx
   140006692:	shr    ecx,0x1f
   140006695:	add    edx,ecx
   140006697:	movsxd rcx,edx
   14000669a:	mov    BYTE PTR [r11+rcx*1],0x1
   14000669f:	jmp    0x1400066c3
   1400066a1:	lea    rcx,[rbx+0x40]
   1400066a5:	call   0x140004400
   1400066aa:	mov    r11,rax
   1400066ad:	mov    eax,0x55555556
   1400066b2:	imul   edi
   1400066b4:	mov    ecx,edx
   1400066b6:	shr    ecx,0x1f
   1400066b9:	add    edx,ecx
   1400066bb:	movsxd rcx,edx
   1400066be:	mov    BYTE PTR [r11+rcx*1],0x0
   1400066c3:	mov    rcx,rbx
   1400066c6:	call   0x140003bf0
   1400066cb:	mov    rcx,rbx
   1400066ce:	mov    rbx,QWORD PTR [rsp+0x88]
   1400066d6:	add    rsp,0x70
   1400066da:	pop    rdi
   1400066db:	rex.W jmp QWORD PTR [rip+0x5f8e]        # 0x14000c670
   1400066e2:	int3   
   1400066e3:	int3   
   1400066e4:	int3   
   1400066e5:	int3   
   1400066e6:	int3   
   1400066e7:	int3   
   1400066e8:	int3   
   1400066e9:	int3   
   1400066ea:	int3   
   1400066eb:	int3   
   1400066ec:	int3   
   1400066ed:	int3   
   1400066ee:	int3   
   1400066ef:	int3   
   1400066f0:	mov    rax,rsp
   1400066f3:	mov    QWORD PTR [rax+0x8],rbx
   1400066f7:	mov    QWORD PTR [rax+0x10],rsi
   1400066fb:	push   rdi
   1400066fc:	sub    rsp,0xa0
   140006703:	cmp    edx,0x3
   140006706:	movaps XMMWORD PTR [rax-0x18],xmm6
   14000670a:	xorpd  xmm6,xmm6
   14000670e:	movaps XMMWORD PTR [rax-0x28],xmm7
   140006712:	movaps XMMWORD PTR [rax-0x38],xmm8
   140006717:	movaps XMMWORD PTR [rax-0x48],xmm9
   14000671c:	movsd  QWORD PTR [rsp+0x20],xmm6
   140006722:	mov    ebx,edx
   140006724:	mov    rsi,rcx
   140006727:	movsd  QWORD PTR [rax-0x80],xmm6
   14000672c:	movapd xmm8,xmm6
   140006731:	movaps XMMWORD PTR [rax-0x58],xmm10
   140006736:	movaps XMMWORD PTR [rax-0x68],xmm11
   14000673b:	movaps XMMWORD PTR [rax-0x78],xmm12
   140006740:	jle    0x14000676f
   140006742:	add    edx,0xfffffffd
   140006745:	add    rcx,0x38
   140006749:	call   QWORD PTR [rip+0x5c69]        # 0x14000c3b8
   14000674f:	lea    rdx,[rsp+0x20]
   140006754:	mov    rcx,QWORD PTR [rax]
   140006757:	mov    rax,QWORD PTR [rax+0x8]
   14000675b:	mov    QWORD PTR [rdx],rcx
   14000675e:	mov    QWORD PTR [rdx+0x8],rax
   140006762:	movsd  xmm8,QWORD PTR [rsp+0x28]
   140006769:	movsd  xmm6,QWORD PTR [rsp+0x20]
   14000676f:	movsd  xmm7,QWORD PTR [rip+0x6df9]        # 0x14000d570
   140006777:	mov    rax,QWORD PTR [rsi+0x38]
   14000677b:	lea    edx,[rbx+0x3]
   14000677e:	cmp    edx,DWORD PTR [rax+0x4]
   140006781:	movsd  QWORD PTR [rsp+0x20],xmm7
   140006787:	movsd  QWORD PTR [rsp+0x28],xmm7
   14000678d:	movapd xmm9,xmm7
   140006792:	jge    0x1400067be
   140006794:	lea    rcx,[rsi+0x38]
   140006798:	call   QWORD PTR [rip+0x5c1a]        # 0x14000c3b8
   14000679e:	lea    rdx,[rsp+0x20]
   1400067a3:	mov    rcx,QWORD PTR [rax]
   1400067a6:	mov    rax,QWORD PTR [rax+0x8]
   1400067aa:	mov    QWORD PTR [rdx],rcx
   1400067ad:	mov    QWORD PTR [rdx+0x8],rax
   1400067b1:	movsd  xmm9,QWORD PTR [rsp+0x28]
   1400067b8:	movsd  xmm7,QWORD PTR [rsp+0x20]
   1400067be:	lea    rcx,[rsi+0x38]
   1400067c2:	mov    edx,ebx
   1400067c4:	call   QWORD PTR [rip+0x5bee]        # 0x14000c3b8
   1400067ca:	lea    rdx,[rsp+0x20]
   1400067cf:	mov    rcx,QWORD PTR [rax]
   1400067d2:	mov    rax,QWORD PTR [rax+0x8]
   1400067d6:	movsd  xmm12,QWORD PTR [rip+0x8191]        # 0x14000e970
   1400067df:	mov    QWORD PTR [rdx],rcx
   1400067e2:	mov    QWORD PTR [rdx+0x8],rax
   1400067e6:	movsd  xmm10,QWORD PTR [rsp+0x28]
   1400067ed:	movsd  xmm11,QWORD PTR [rsp+0x20]
   1400067f4:	test   ebx,ebx
   1400067f6:	jle    0x140006843
   1400067f8:	subsd  xmm6,xmm11
   1400067fd:	subsd  xmm8,xmm10
   140006802:	lea    edx,[rbx-0x1]
   140006805:	lea    rcx,[rsi+0x38]
   140006809:	divsd  xmm6,xmm12
   14000680e:	divsd  xmm8,xmm12
   140006813:	addsd  xmm6,xmm11
   140006818:	addsd  xmm8,xmm10
   14000681d:	movsd  QWORD PTR [rsp+0x20],xmm6
   140006823:	movsd  QWORD PTR [rsp+0x28],xmm8
   14000682a:	call   QWORD PTR [rip+0x5a28]        # 0x14000c258
   140006830:	lea    rdx,[rsp+0x20]
   140006835:	mov    rcx,QWORD PTR [rdx]
   140006838:	mov    QWORD PTR [rax],rcx
   14000683b:	mov    rcx,QWORD PTR [rdx+0x8]
   14000683f:	mov    QWORD PTR [rax+0x8],rcx
   140006843:	mov    rax,QWORD PTR [rsi+0x38]
   140006847:	lea    edx,[rbx+0x1]
   14000684a:	cmp    edx,DWORD PTR [rax+0x4]
   14000684d:	jge    0x140006897
   14000684f:	subsd  xmm7,xmm11
   140006854:	subsd  xmm9,xmm10
   140006859:	lea    rcx,[rsi+0x38]
   14000685d:	divsd  xmm7,xmm12
   140006862:	divsd  xmm9,xmm12
   140006867:	addsd  xmm7,xmm11
   14000686c:	addsd  xmm9,xmm10
   140006871:	movsd  QWORD PTR [rsp+0x20],xmm7
   140006877:	movsd  QWORD PTR [rsp+0x28],xmm9
   14000687e:	call   QWORD PTR [rip+0x59d4]        # 0x14000c258
   140006884:	lea    rdx,[rsp+0x20]
   140006889:	mov    rcx,QWORD PTR [rdx]
   14000688c:	mov    QWORD PTR [rax],rcx
   14000688f:	mov    rcx,QWORD PTR [rdx+0x8]
   140006893:	mov    QWORD PTR [rax+0x8],rcx
   140006897:	lea    rcx,[rsi+0x40]
   14000689b:	call   0x140004400
   1400068a0:	mov    r11,rax
   1400068a3:	mov    eax,0x55555556
   1400068a8:	imul   ebx
   1400068aa:	mov    ecx,edx
   1400068ac:	shr    ecx,0x1f
   1400068af:	add    edx,ecx
   1400068b1:	movsxd rcx,edx
   1400068b4:	mov    BYTE PTR [r11+rcx*1],0x0
   1400068b9:	mov    rcx,rsi
   1400068bc:	lea    r11,[rsp+0xa0]
   1400068c4:	mov    rbx,QWORD PTR [r11+0x10]
   1400068c8:	mov    rsi,QWORD PTR [r11+0x18]
   1400068cc:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400068d1:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400068d6:	movaps xmm8,XMMWORD PTR [r11-0x30]
   1400068db:	movaps xmm9,XMMWORD PTR [r11-0x40]
   1400068e0:	movaps xmm10,XMMWORD PTR [r11-0x50]
   1400068e5:	movaps xmm11,XMMWORD PTR [r11-0x60]
   1400068ea:	movaps xmm12,XMMWORD PTR [r11-0x70]
   1400068ef:	mov    rsp,r11
   1400068f2:	pop    rdi
   1400068f3:	jmp    0x140003bf0
   1400068f8:	int3   
   1400068f9:	int3   
   1400068fa:	int3   
   1400068fb:	int3   
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	mov    r11,rsp
   140006903:	push   rbx
   140006904:	push   r12
   140006906:	push   r13
   140006908:	sub    rsp,0x80
   14000690f:	movsd  xmm0,QWORD PTR [rip+0x6ca1]        # 0x14000d5b8
   140006917:	movsd  xmm1,QWORD PTR [rdx+0x8]
   14000691c:	mov    rax,QWORD PTR [rcx+0x38]
   140006920:	movaps XMMWORD PTR [rsp+0x60],xmm7
   140006925:	movaps XMMWORD PTR [r11-0x48],xmm8
   14000692a:	mov    r13,rcx
   14000692d:	xor    ebx,ebx
   14000692f:	movsd  xmm2,QWORD PTR [rdx]
   140006933:	movsd  xmm8,QWORD PTR [rip+0x6c34]        # 0x14000d570
   14000693c:	subsd  xmm1,xmm0
   140006940:	movaps XMMWORD PTR [r11-0x58],xmm9
   140006945:	mov    QWORD PTR [r11+0x18],rdi
   140006949:	mov    edi,ebx
   14000694b:	divsd  xmm1,QWORD PTR [rip+0x6c5d]        # 0x14000d5b0
   140006953:	subsd  xmm2,xmm0
   140006957:	movapd xmm0,xmm8
   14000695c:	divsd  xmm2,QWORD PTR [rip+0x6c44]        # 0x14000d5a8
   140006964:	subsd  xmm0,xmm1
   140006968:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000696e:	movsd  QWORD PTR [rsp+0x20],xmm2
   140006974:	mov    ecx,DWORD PTR [rax+0x4]
   140006977:	dec    ecx
   140006979:	test   ecx,ecx
   14000697b:	jle    0x1400069ea
   14000697d:	mov    QWORD PTR [r11+0x8],rbp
   140006981:	mov    QWORD PTR [r11+0x10],rsi
   140006985:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006990:	lea    esi,[rdi+0x1]
   140006993:	mov    eax,0x55555556
   140006998:	mov    ebp,esi
   14000699a:	imul   esi
   14000699c:	mov    eax,edx
   14000699e:	shr    eax,0x1f
   1400069a1:	add    edx,eax
   1400069a3:	lea    eax,[rdx+rdx*2]
   1400069a6:	sub    ebp,eax
   1400069a8:	jne    0x1400069c6
   1400069aa:	lea    rcx,[r13+0x38]
   1400069ae:	mov    edx,edi
   1400069b0:	call   QWORD PTR [rip+0x5a02]        # 0x14000c3b8
   1400069b6:	movsd  xmm2,QWORD PTR [rsp+0x20]
   1400069bc:	movsd  xmm0,QWORD PTR [rax]
   1400069c0:	comisd xmm0,xmm2
   1400069c4:	ja     0x1400069da
   1400069c6:	mov    rax,QWORD PTR [r13+0x38]
   1400069ca:	test   ebp,ebp
   1400069cc:	mov    ecx,DWORD PTR [rax+0x4]
   1400069cf:	cmove  ebx,edi
   1400069d2:	mov    edi,esi
   1400069d4:	dec    ecx
   1400069d6:	cmp    esi,ecx
   1400069d8:	jl     0x140006990
   1400069da:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400069e2:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400069ea:	xorpd  xmm7,xmm7
   1400069ee:	mov    rdi,QWORD PTR [rsp+0xb0]
   1400069f6:	movsd  QWORD PTR [rsp+0x30],xmm7
   1400069fc:	movsd  QWORD PTR [rsp+0x38],xmm7
   140006a02:	movapd xmm9,xmm7
   140006a07:	test   ebx,ebx
   140006a09:	jle    0x140006a3d
   140006a0b:	lea    rcx,[r13+0x38]
   140006a0f:	mov    edx,ebx
   140006a11:	call   QWORD PTR [rip+0x59a1]        # 0x14000c3b8
   140006a17:	lea    rdx,[rsp+0x30]
   140006a1c:	mov    rcx,QWORD PTR [rax]
   140006a1f:	mov    rax,QWORD PTR [rax+0x8]
   140006a23:	movsd  xmm2,QWORD PTR [rsp+0x20]
   140006a29:	mov    QWORD PTR [rdx],rcx
   140006a2c:	mov    QWORD PTR [rdx+0x8],rax
   140006a30:	movsd  xmm9,QWORD PTR [rsp+0x38]
   140006a37:	movsd  xmm7,QWORD PTR [rsp+0x30]
   140006a3d:	mov    rax,QWORD PTR [r13+0x38]
   140006a41:	lea    edx,[rbx+0x3]
   140006a44:	movapd xmm0,xmm8
   140006a49:	cmp    edx,DWORD PTR [rax+0x4]
   140006a4c:	movsd  QWORD PTR [rsp+0x30],xmm8
   140006a53:	movsd  QWORD PTR [rsp+0x38],xmm0
   140006a59:	jge    0x140006a8b
   140006a5b:	lea    rcx,[r13+0x38]
   140006a5f:	call   QWORD PTR [rip+0x5953]        # 0x14000c3b8
   140006a65:	lea    rdx,[rsp+0x30]
   140006a6a:	mov    rcx,QWORD PTR [rax]
   140006a6d:	mov    rax,QWORD PTR [rax+0x8]
   140006a71:	movsd  xmm2,QWORD PTR [rsp+0x20]
   140006a77:	mov    QWORD PTR [rdx],rcx
   140006a7a:	mov    QWORD PTR [rdx+0x8],rax
   140006a7e:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140006a84:	movsd  xmm8,QWORD PTR [rsp+0x30]
   140006a8b:	movaps XMMWORD PTR [rsp+0x70],xmm6
   140006a90:	test   ebx,ebx
   140006a92:	jle    0x140006a99
   140006a94:	add    ebx,0x2
   140006a97:	jmp    0x140006a9b
   140006a99:	inc    ebx
   140006a9b:	addsd  xmm0,QWORD PTR [rsp+0x28]
   140006aa1:	movsd  xmm6,QWORD PTR [rip+0x6acf]        # 0x14000d578
   140006aa9:	addsd  xmm8,xmm2
   140006aae:	lea    r8,[rsp+0x30]
   140006ab3:	lea    rcx,[r13+0x38]
   140006ab7:	mov    edx,ebx
   140006ab9:	mulsd  xmm8,xmm6
   140006abe:	mulsd  xmm0,xmm6
   140006ac2:	movsd  QWORD PTR [rsp+0x38],xmm0
   140006ac8:	movsd  QWORD PTR [rsp+0x30],xmm8
   140006acf:	call   QWORD PTR [rip+0x5733]        # 0x14000c208
   140006ad5:	lea    r8,[rsp+0x20]
   140006ada:	lea    rcx,[r13+0x38]
   140006ade:	mov    edx,ebx
   140006ae0:	call   QWORD PTR [rip+0x5722]        # 0x14000c208
   140006ae6:	lea    r8,[rsp+0x30]
   140006aeb:	lea    rcx,[r13+0x38]
   140006aef:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140006af5:	addsd  xmm7,QWORD PTR [rsp+0x20]
   140006afb:	mov    edx,ebx
   140006afd:	addsd  xmm0,xmm9
   140006b02:	mulsd  xmm7,xmm6
   140006b06:	movsd  QWORD PTR [rsp+0x30],xmm7
   140006b0c:	mulsd  xmm0,xmm6
   140006b10:	movsd  QWORD PTR [rsp+0x38],xmm0
   140006b16:	call   QWORD PTR [rip+0x56ec]        # 0x14000c208
   140006b1c:	inc    DWORD PTR [r13+0x48]
   140006b20:	mov    rcx,r13
   140006b23:	call   0x140004470
   140006b28:	mov    rcx,r13
   140006b2b:	call   0x1400058f0
   140006b30:	mov    rcx,r13
   140006b33:	call   0x140003bf0
   140006b38:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140006b3d:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   140006b42:	movaps xmm8,XMMWORD PTR [rsp+0x50]
   140006b48:	movaps xmm9,XMMWORD PTR [rsp+0x40]
   140006b4e:	add    rsp,0x80
   140006b55:	pop    r13
   140006b57:	pop    r12
   140006b59:	pop    rbx
   140006b5a:	ret    
   140006b5b:	int3   
   140006b5c:	int3   
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    QWORD PTR [rsp+0x8],rbx
   140006b65:	mov    QWORD PTR [rsp+0x10],rbp
   140006b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140006b6f:	push   rdi
   140006b70:	sub    rsp,0x30
   140006b74:	mov    rbp,rdx
   140006b77:	add    rdx,0x20
   140006b7b:	mov    rbx,rcx
   140006b7e:	call   0x140001420
   140006b83:	mov    edi,eax
   140006b85:	test   eax,eax
   140006b87:	jle    0x140006c3a
   140006b8d:	lea    r9d,[rax+0x1]
   140006b91:	mov    eax,0x55555556
   140006b96:	imul   r9d
   140006b99:	mov    r8d,edx
   140006b9c:	shr    r8d,0x1f
   140006ba0:	add    edx,r8d
   140006ba3:	lea    ecx,[rdx+rdx*2]
   140006ba6:	cmp    r9d,ecx
   140006ba9:	jne    0x140006c3a
   140006baf:	mov    edx,edi
   140006bb1:	mov    rcx,rbx
   140006bb4:	call   0x1400027d0
   140006bb9:	mov    rcx,QWORD PTR [rbx+0x80]
   140006bc0:	movzx  edx,al
   140006bc3:	call   QWORD PTR [rip+0x5d0f]        # 0x14000c8d8
   140006bc9:	mov    rcx,QWORD PTR [rbx+0x68]
   140006bcd:	lea    rdx,[rbp+0x28]
   140006bd1:	xor    r8d,r8d
   140006bd4:	call   QWORD PTR [rip+0x5cf6]        # 0x14000c8d0
   140006bda:	cmp    rax,QWORD PTR [rbx+0x78]
   140006bde:	jne    0x140006c10
   140006be0:	lea    edx,[rdi-0x1]
   140006be3:	lea    rcx,[rbx+0x38]
   140006be7:	mov    r8d,0x3
   140006bed:	call   QWORD PTR [rip+0x561d]        # 0x14000c210
   140006bf3:	dec    DWORD PTR [rbx+0x48]
   140006bf6:	mov    rcx,rbx
   140006bf9:	call   0x140004470
   140006bfe:	mov    rcx,rbx
   140006c01:	call   0x1400058f0
   140006c06:	mov    rcx,rbx
   140006c09:	call   0x140003bf0
   140006c0e:	jmp    0x140006c8a
   140006c10:	cmp    rax,QWORD PTR [rbx+0x80]
   140006c17:	jne    0x140006c25
   140006c19:	mov    edx,edi
   140006c1b:	mov    rcx,rbx
   140006c1e:	call   0x1400064c0
   140006c23:	jmp    0x140006c8a
   140006c25:	cmp    rax,QWORD PTR [rbx+0x88]
   140006c2c:	jne    0x140006c8a
   140006c2e:	mov    edx,edi
   140006c30:	mov    rcx,rbx
   140006c33:	call   0x1400066f0
   140006c38:	jmp    0x140006c8a
   140006c3a:	mov    rcx,QWORD PTR [rbx+0x70]
   140006c3e:	lea    rdx,[rbp+0x28]
   140006c42:	xor    r8d,r8d
   140006c45:	call   QWORD PTR [rip+0x5c85]        # 0x14000c8d0
   140006c4b:	cmp    rax,QWORD PTR [rbx+0x90]
   140006c52:	jne    0x140006c8a
   140006c54:	movd   xmm0,DWORD PTR [rbp+0x20]
   140006c59:	movd   xmm1,DWORD PTR [rbp+0x24]
   140006c5e:	lea    rdx,[rsp+0x20]
   140006c63:	mov    rcx,rbx
   140006c66:	cvtdq2pd xmm0,xmm0
   140006c6a:	cvtdq2pd xmm1,xmm1
   140006c6e:	movsd  QWORD PTR [rsp+0x20],xmm0
   140006c74:	movsd  QWORD PTR [rsp+0x28],xmm1
   140006c7a:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140006c7f:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140006c85:	call   0x140006900
   140006c8a:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c8f:	mov    rbp,QWORD PTR [rsp+0x48]
   140006c94:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c99:	add    rsp,0x30
   140006c9d:	pop    rdi
   140006c9e:	ret    
   140006c9f:	int3   
   140006ca0:	rex push rbx
   140006ca2:	push   r13
   140006ca4:	sub    rsp,0xa8
   140006cab:	cmp    BYTE PTR [rcx+0xa8],0x0
   140006cb2:	mov    rbx,rdx
   140006cb5:	mov    r13,rcx
   140006cb8:	jne    0x140007456
   140006cbe:	lea    rcx,[rsp+0xd0]
   140006cc6:	mov    dl,0x5b
   140006cc8:	call   QWORD PTR [rip+0x5602]        # 0x14000c2d0
   140006cce:	mov    r8d,0x1
   140006cd4:	mov    rcx,rbx
   140006cd7:	movzx  edx,WORD PTR [rax]
   140006cda:	call   QWORD PTR [rip+0x5500]        # 0x14000c1e0
   140006ce0:	test   al,al
   140006ce2:	je     0x140007456
   140006ce8:	lea    rcx,[rsp+0xd8]
   140006cf0:	mov    dl,0x5d
   140006cf2:	call   QWORD PTR [rip+0x55d8]        # 0x14000c2d0
   140006cf8:	mov    r8d,0x1
   140006cfe:	mov    rcx,rbx
   140006d01:	movzx  edx,WORD PTR [rax]
   140006d04:	call   QWORD PTR [rip+0x54de]        # 0x14000c1e8
   140006d0a:	test   al,al
   140006d0c:	je     0x140007456
   140006d12:	mov    QWORD PTR [rsp+0xc8],rbp
   140006d1a:	mov    QWORD PTR [rsp+0xa0],rsi
   140006d22:	lea    rcx,[rsp+0x48]
   140006d27:	mov    rdx,rbx
   140006d2a:	mov    QWORD PTR [rsp+0x98],rdi
   140006d32:	mov    QWORD PTR [rsp+0x90],r12
   140006d3a:	call   QWORD PTR [rip+0x5410]        # 0x14000c150
   140006d40:	xor    edx,edx
   140006d42:	lea    rcx,[rsp+0x48]
   140006d47:	lea    r8d,[rdx+0x1]
   140006d4b:	call   QWORD PTR [rip+0x549f]        # 0x14000c1f0
   140006d51:	lea    rcx,[rsp+0x48]
   140006d56:	mov    edx,0x1
   140006d5b:	call   QWORD PTR [rip+0x557f]        # 0x14000c2e0
   140006d61:	lea    rcx,[rsp+0x78]
   140006d66:	mov    dl,0x2c
   140006d68:	call   QWORD PTR [rip+0x5562]        # 0x14000c2d0
   140006d6e:	lea    rdx,[rsp+0x40]
   140006d73:	lea    rcx,[rsp+0x48]
   140006d78:	movzx  r8d,WORD PTR [rax]
   140006d7c:	mov    r9d,0x1
   140006d82:	mov    DWORD PTR [rsp+0x20],0x1
   140006d8a:	call   QWORD PTR [rip+0x5468]        # 0x14000c1f8
   140006d90:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d95:	mov    ecx,DWORD PTR [rbx+0xc]
   140006d98:	sub    ecx,DWORD PTR [rbx+0x8]
   140006d9b:	cmp    ecx,0x6
   140006d9e:	jl     0x1400073dd
   140006da4:	mov    eax,0x2aaaaaab
   140006da9:	imul   ecx
   140006dab:	mov    eax,edx
   140006dad:	shr    eax,0x1f
   140006db0:	add    edx,eax
   140006db2:	lea    eax,[rdx+rdx*2]
   140006db5:	add    eax,eax
   140006db7:	cmp    ecx,eax
   140006db9:	jne    0x1400073dd
   140006dbf:	mov    rax,QWORD PTR [rip+0x55ea]        # 0x14000c3b0
   140006dc6:	mov    QWORD PTR [rsp+0x38],rax
   140006dcb:	mov    edx,DWORD PTR [rbx+0xc]
   140006dce:	sub    edx,DWORD PTR [rbx+0x8]
   140006dd1:	cmp    DWORD PTR [rax+0x4],edx
   140006dd4:	jge    0x140006e78
   140006dda:	mov    ecx,DWORD PTR [rax]
   140006ddc:	cmp    ecx,0x1
   140006ddf:	je     0x140006e68
   140006de5:	test   ecx,ecx
   140006de7:	je     0x140006e68
   140006de9:	movsxd rcx,DWORD PTR [rax+0x8]
   140006ded:	lea    rdi,[rax+rcx*8+0x10]
   140006df2:	lea    rcx,[rsp+0x38]
   140006df7:	call   QWORD PTR [rip+0x549b]        # 0x14000c298
   140006dfd:	mov    rbx,rax
   140006e00:	mov    rax,QWORD PTR [rsp+0x38]
   140006e05:	movsxd rcx,DWORD PTR [rax+0xc]
   140006e09:	lea    r8,[rax+rcx*8+0x10]
   140006e0e:	movsxd rcx,DWORD PTR [rax+0x8]
   140006e12:	lea    rcx,[rax+rcx*8+0x10]
   140006e17:	cmp    rdi,rcx
   140006e1a:	je     0x140006e34
   140006e1c:	sub    r8,rcx
   140006e1f:	sar    r8,0x3
   140006e23:	test   r8,r8
   140006e26:	jle    0x140006e34
   140006e28:	shl    r8,0x3
   140006e2c:	mov    rdx,rdi
   140006e2f:	call   0x14000b112
   140006e34:	mov    eax,DWORD PTR [rbx]
   140006e36:	test   eax,eax
   140006e38:	je     0x140006e58
   140006e3a:	cmp    eax,0xffffffff
   140006e3d:	je     0x140006e51
   140006e3f:	lock add DWORD PTR [rbx],0xffffffff
   140006e43:	setne  al
   140006e46:	test   al,al
   140006e48:	je     0x140006e58
   140006e4a:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e4f:	jmp    0x140006e78
   140006e51:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e56:	jmp    0x140006e78
   140006e58:	mov    rcx,rbx
   140006e5b:	call   QWORD PTR [rip+0x548f]        # 0x14000c2f0
   140006e61:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e66:	jmp    0x140006e78
   140006e68:	lea    rcx,[rsp+0x38]
   140006e6d:	call   QWORD PTR [rip+0x53c5]        # 0x14000c238
   140006e73:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e78:	mov    QWORD PTR [rsp+0x50],rbx
   140006e7d:	mov    eax,DWORD PTR [rbx]
   140006e7f:	test   eax,eax
   140006e81:	je     0x140006e93
   140006e83:	cmp    eax,0xffffffff
   140006e86:	je     0x140006ef3
   140006e88:	lock add DWORD PTR [rbx],0x1
   140006e8c:	mov    rbx,QWORD PTR [rsp+0x50]
   140006e91:	jmp    0x140006ef3
   140006e93:	mov    edx,DWORD PTR [rbx+0x4]
   140006e96:	lea    rcx,[rsp+0x50]
   140006e9b:	call   QWORD PTR [rip+0x53f7]        # 0x14000c298
   140006ea1:	mov    rbx,QWORD PTR [rsp+0x50]
   140006ea6:	movsxd rax,DWORD PTR [rbx+0xc]
   140006eaa:	lea    rbp,[rbx+rax*8+0x10]
   140006eaf:	mov    rax,QWORD PTR [rsp+0x40]
   140006eb4:	movsxd rcx,DWORD PTR [rax+0x8]
   140006eb8:	lea    rsi,[rax+rcx*8+0x10]
   140006ebd:	movsxd rax,DWORD PTR [rbx+0x8]
   140006ec1:	lea    rdi,[rbx+rax*8+0x10]
   140006ec6:	cmp    rdi,rbp
   140006ec9:	je     0x140006ef3
   140006ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   140006ed0:	test   rdi,rdi
   140006ed3:	je     0x140006ee1
   140006ed5:	mov    rdx,rsi
   140006ed8:	mov    rcx,rdi
   140006edb:	call   QWORD PTR [rip+0x526f]        # 0x14000c150
   140006ee1:	add    rdi,0x8
   140006ee5:	add    rsi,0x8
   140006ee9:	cmp    rdi,rbp
   140006eec:	jne    0x140006ed0
   140006eee:	mov    rbx,QWORD PTR [rsp+0x50]
   140006ef3:	xor    ebp,ebp
   140006ef5:	mov    DWORD PTR [rsp+0x58],ebp
   140006ef9:	movsxd rax,DWORD PTR [rbx+0x8]
   140006efd:	lea    rdi,[rbx+rax*8+0x10]
   140006f02:	mov    QWORD PTR [rsp+0x60],rdi
   140006f07:	movsxd rax,DWORD PTR [rbx+0xc]
   140006f0b:	lea    rcx,[rbx+rax*8+0x10]
   140006f10:	mov    QWORD PTR [rsp+0x68],rcx
   140006f15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006f20:	mov    eax,0x1
   140006f25:	mov    DWORD PTR [rsp+0x58],eax
   140006f29:	cmp    rdi,rcx
   140006f2c:	je     0x14000709a
   140006f32:	test   eax,eax
   140006f34:	je     0x140006fae
   140006f36:	lea    rdx,[rsp+0xc0]
   140006f3e:	mov    rcx,rdi
   140006f41:	call   QWORD PTR [rip+0x52b9]        # 0x14000c200
   140006f47:	mov    rax,QWORD PTR [rsp+0x38]
   140006f4c:	mov    ecx,DWORD PTR [rax]
   140006f4e:	movsd  QWORD PTR [rsp+0x80],xmm0
   140006f57:	cmp    ecx,0x1
   140006f5a:	je     0x140006f82
   140006f5c:	test   ecx,ecx
   140006f5e:	je     0x140006f82
   140006f60:	lea    rcx,[rsp+0x38]
   140006f65:	mov    edx,0x7fffffff
   140006f6a:	mov    r8d,0x1
   140006f70:	call   0x140002ba0
   140006f75:	mov    rcx,QWORD PTR [rsp+0x80]
   140006f7d:	mov    QWORD PTR [rax],rcx
   140006f80:	jmp    0x140006f98
   140006f82:	lea    rcx,[rsp+0x38]
   140006f87:	call   QWORD PTR [rip+0x52bb]        # 0x14000c248
   140006f8d:	mov    rcx,QWORD PTR [rsp+0x80]
   140006f95:	mov    QWORD PTR [rax],rcx
   140006f98:	cmp    BYTE PTR [rsp+0xc0],bpl
   140006fa0:	je     0x140006fc6
   140006fa2:	mov    eax,DWORD PTR [rsp+0x58]
   140006fa6:	dec    eax
   140006fa8:	mov    DWORD PTR [rsp+0x58],eax
   140006fac:	jmp    0x140006f32
   140006fae:	mov    rdi,QWORD PTR [rsp+0x60]
   140006fb3:	mov    rcx,QWORD PTR [rsp+0x68]
   140006fb8:	add    rdi,0x8
   140006fbc:	mov    QWORD PTR [rsp+0x60],rdi
   140006fc1:	jmp    0x140006f20
   140006fc6:	mov    rdi,QWORD PTR [rsp+0x50]
   140006fcb:	mov    eax,DWORD PTR [rdi]
   140006fcd:	test   eax,eax
   140006fcf:	je     0x140006fe6
   140006fd1:	cmp    eax,0xffffffff
   140006fd4:	je     0x14000701b
   140006fd6:	lock add DWORD PTR [rdi],0xffffffff
   140006fda:	setne  al
   140006fdd:	test   al,al
   140006fdf:	jne    0x14000701b
   140006fe1:	mov    rdi,QWORD PTR [rsp+0x50]
   140006fe6:	movsxd rax,DWORD PTR [rdi+0xc]
   140006fea:	lea    rbx,[rdi+rax*8+0x10]
   140006fef:	movsxd rax,DWORD PTR [rdi+0x8]
   140006ff3:	lea    rsi,[rdi+rax*8+0x10]
   140006ff8:	cmp    rsi,rbx
   140006ffb:	je     0x140007012
   140006ffd:	nop    DWORD PTR [rax]
   140007000:	sub    rbx,0x8
   140007004:	mov    rcx,rbx
   140007007:	call   QWORD PTR [rip+0x53d3]        # 0x14000c3e0
   14000700d:	cmp    rbx,rsi
   140007010:	jne    0x140007000
   140007012:	mov    rcx,rdi
   140007015:	call   QWORD PTR [rip+0x52d5]        # 0x14000c2f0
   14000701b:	mov    rcx,QWORD PTR [rsp+0x38]
   140007020:	mov    eax,DWORD PTR [rcx]
   140007022:	test   eax,eax
   140007024:	je     0x14000703b
   140007026:	cmp    eax,0xffffffff
   140007029:	je     0x140007041
   14000702b:	lock add DWORD PTR [rcx],0xffffffff
   14000702f:	setne  al
   140007032:	test   al,al
   140007034:	jne    0x140007041
   140007036:	mov    rcx,QWORD PTR [rsp+0x38]
   14000703b:	call   QWORD PTR [rip+0x52af]        # 0x14000c2f0
   140007041:	mov    rdi,QWORD PTR [rsp+0x40]
   140007046:	mov    eax,DWORD PTR [rdi]
   140007048:	test   eax,eax
   14000704a:	je     0x140007069
   14000704c:	cmp    eax,0xffffffff
   14000704f:	je     0x14000742b
   140007055:	lock add DWORD PTR [rdi],0xffffffff
   140007059:	setne  al
   14000705c:	test   al,al
   14000705e:	jne    0x14000742b
   140007064:	mov    rdi,QWORD PTR [rsp+0x40]
   140007069:	movsxd rax,DWORD PTR [rdi+0xc]
   14000706d:	lea    rbx,[rdi+rax*8+0x10]
   140007072:	movsxd rax,DWORD PTR [rdi+0x8]
   140007076:	lea    rsi,[rdi+rax*8+0x10]
   14000707b:	cmp    rsi,rbx
   14000707e:	je     0x140007092
   140007080:	sub    rbx,0x8
   140007084:	mov    rcx,rbx
   140007087:	call   QWORD PTR [rip+0x5353]        # 0x14000c3e0
   14000708d:	cmp    rbx,rsi
   140007090:	jne    0x140007080
   140007092:	mov    rcx,rdi
   140007095:	jmp    0x140007425
   14000709a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000709f:	mov    eax,DWORD PTR [rdi]
   1400070a1:	test   eax,eax
   1400070a3:	je     0x1400070ba
   1400070a5:	cmp    eax,0xffffffff
   1400070a8:	je     0x1400070ec
   1400070aa:	lock add DWORD PTR [rdi],0xffffffff
   1400070ae:	setne  al
   1400070b1:	test   al,al
   1400070b3:	jne    0x1400070ec
   1400070b5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400070ba:	movsxd rax,DWORD PTR [rdi+0xc]
   1400070be:	lea    rbx,[rdi+rax*8+0x10]
   1400070c3:	movsxd rax,DWORD PTR [rdi+0x8]
   1400070c7:	lea    rsi,[rdi+rax*8+0x10]
   1400070cc:	cmp    rsi,rbx
   1400070cf:	je     0x1400070e3
   1400070d1:	sub    rbx,0x8
   1400070d5:	mov    rcx,rbx
   1400070d8:	call   QWORD PTR [rip+0x5302]        # 0x14000c3e0
   1400070de:	cmp    rbx,rsi
   1400070e1:	jne    0x1400070d1
   1400070e3:	mov    rcx,rdi
   1400070e6:	call   QWORD PTR [rip+0x5204]        # 0x14000c2f0
   1400070ec:	mov    rax,QWORD PTR [rsp+0x38]
   1400070f1:	mov    rbx,QWORD PTR [rip+0x52b8]        # 0x14000c3b0
   1400070f8:	mov    QWORD PTR [rsp+0x30],rbx
   1400070fd:	mov    ecx,DWORD PTR [rax+0xc]
   140007100:	sub    ecx,DWORD PTR [rax+0x8]
   140007103:	mov    eax,ecx
   140007105:	cdq    
   140007106:	sub    eax,edx
   140007108:	sar    eax,1
   14000710a:	movsxd rsi,eax
   14000710d:	cmp    DWORD PTR [rbx+0x4],esi
   140007110:	jge    0x140007142
   140007112:	mov    eax,DWORD PTR [rbx]
   140007114:	cmp    eax,0x1
   140007117:	je     0x140007130
   140007119:	test   eax,eax
   14000711b:	je     0x140007130
   14000711d:	lea    rcx,[rsp+0x30]
   140007122:	mov    edx,esi
   140007124:	call   0x140002e10
   140007129:	mov    rbx,QWORD PTR [rsp+0x30]
   14000712e:	jmp    0x140007142
   140007130:	lea    rcx,[rsp+0x30]
   140007135:	mov    edx,esi
   140007137:	call   QWORD PTR [rip+0x50fb]        # 0x14000c238
   14000713d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007142:	mov    rdi,rbp
   140007145:	test   esi,esi
   140007147:	jle    0x140007226
   14000714d:	nop    DWORD PTR [rax]
   140007150:	mov    rax,QWORD PTR [rsp+0x38]
   140007155:	movsxd rcx,DWORD PTR [rax+0x8]
   140007159:	lea    rdx,[rcx+rdi*2]
   14000715d:	lea    rcx,[rcx+rdi*2]
   140007161:	movsd  xmm0,QWORD PTR [rax+rcx*8+0x10]
   140007167:	movsd  xmm1,QWORD PTR [rax+rdx*8+0x18]
   14000716d:	mov    eax,DWORD PTR [rbx]
   14000716f:	movsd  QWORD PTR [rsp+0x80],xmm0
   140007178:	movsd  QWORD PTR [rsp+0x88],xmm1
   140007181:	cmp    eax,0x1
   140007184:	je     0x1400071d4
   140007186:	test   eax,eax
   140007188:	je     0x1400071d4
   14000718a:	lea    rcx,[rsp+0x30]
   14000718f:	mov    edx,0x7fffffff
   140007194:	mov    r8d,0x1
   14000719a:	call   0x140002ca0
   14000719f:	mov    ecx,0x10
   1400071a4:	mov    rbx,rax
   1400071a7:	call   0x14000b106
   1400071ac:	test   rax,rax
   1400071af:	je     0x1400071cc
   1400071b1:	lea    rdx,[rsp+0x80]
   1400071b9:	mov    rcx,QWORD PTR [rdx]
   1400071bc:	mov    QWORD PTR [rax],rcx
   1400071bf:	mov    rcx,QWORD PTR [rdx+0x8]
   1400071c3:	mov    QWORD PTR [rax+0x8],rcx
   1400071c7:	mov    QWORD PTR [rbx],rax
   1400071ca:	jmp    0x14000720f
   1400071cc:	mov    rax,rbp
   1400071cf:	mov    QWORD PTR [rbx],rax
   1400071d2:	jmp    0x14000720f
   1400071d4:	lea    rcx,[rsp+0x30]
   1400071d9:	call   QWORD PTR [rip+0x5069]        # 0x14000c248
   1400071df:	mov    ecx,0x10
   1400071e4:	mov    rbx,rax
   1400071e7:	call   0x14000b106
   1400071ec:	test   rax,rax
   1400071ef:	je     0x140007209
   1400071f1:	lea    rdx,[rsp+0x80]
   1400071f9:	mov    rcx,QWORD PTR [rdx]
   1400071fc:	mov    QWORD PTR [rax],rcx
   1400071ff:	mov    rcx,QWORD PTR [rdx+0x8]
   140007203:	mov    QWORD PTR [rax+0x8],rcx
   140007207:	jmp    0x14000720c
   140007209:	mov    rax,rbp
   14000720c:	mov    QWORD PTR [rbx],rax
   14000720f:	inc    rdi
   140007212:	cmp    rdi,rsi
   140007215:	jge    0x140007221
   140007217:	mov    rbx,QWORD PTR [rsp+0x30]
   14000721c:	jmp    0x140007150
   140007221:	mov    rbx,QWORD PTR [rsp+0x30]
   140007226:	mov    eax,DWORD PTR [rbx]
   140007228:	cmp    eax,0x1
   14000722b:	je     0x140007243
   14000722d:	test   eax,eax
   14000722f:	je     0x140007243
   140007231:	mov    edx,DWORD PTR [rbx+0x4]
   140007234:	lea    rcx,[rsp+0x30]
   140007239:	call   0x140002e10
   14000723e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007243:	movsxd rax,DWORD PTR [rbx+0xc]
   140007247:	movsd  xmm3,QWORD PTR [rip+0x6321]        # 0x14000d570
   14000724f:	xorpd  xmm4,xmm4
   140007253:	movsd  xmm2,QWORD PTR [rip+0x6395]        # 0x14000d5f0
   14000725b:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   140007260:	movsd  xmm0,QWORD PTR [rcx]
   140007264:	subsd  xmm0,xmm3
   140007268:	comisd xmm0,xmm4
   14000726c:	jae    0x140007272
   14000726e:	xorpd  xmm0,xmm2
   140007272:	movsd  xmm1,QWORD PTR [rip+0x638e]        # 0x14000d608
   14000727a:	comisd xmm1,xmm0
   14000727e:	jb     0x140007354
   140007284:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140007289:	subsd  xmm0,xmm3
   14000728d:	comisd xmm0,xmm4
   140007291:	jae    0x140007297
   140007293:	xorpd  xmm0,xmm2
   140007297:	comisd xmm1,xmm0
   14000729b:	jb     0x140007354
   1400072a1:	lea    rcx,[rsp+0x70]
   1400072a6:	mov    edx,0x2d
   1400072ab:	call   QWORD PTR [rip+0x4fdf]        # 0x14000c290
   1400072b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400072b6:	mov    eax,0x55555556
   1400072bb:	mov    r8d,DWORD PTR [rcx+0x8]
   1400072bf:	mov    edx,DWORD PTR [rcx+0xc]
   1400072c2:	sub    edx,r8d
   1400072c5:	imul   edx
   1400072c7:	mov    eax,edx
   1400072c9:	shr    eax,0x1f
   1400072cc:	add    edx,eax
   1400072ce:	test   edx,edx
   1400072d0:	jle    0x140007327
   1400072d2:	mov    rbx,rbp
   1400072d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400072e0:	movsxd rdx,r8d
   1400072e3:	add    rdx,rbx
   1400072e6:	mov    r9,QWORD PTR [rcx+rdx*8+0x20]
   1400072eb:	mov    r8,QWORD PTR [rcx+rdx*8+0x18]
   1400072f0:	mov    rdx,QWORD PTR [rcx+rdx*8+0x10]
   1400072f5:	lea    rcx,[rsp+0x70]
   1400072fa:	call   QWORD PTR [rip+0x4f60]        # 0x14000c260
   140007300:	mov    rcx,QWORD PTR [rsp+0x30]
   140007305:	mov    eax,0x55555556
   14000730a:	mov    r8d,DWORD PTR [rcx+0x8]
   14000730e:	mov    edx,DWORD PTR [rcx+0xc]
   140007311:	inc    ebp
   140007313:	sub    edx,r8d
   140007316:	add    rbx,0x3
   14000731a:	imul   edx
   14000731c:	mov    eax,edx
   14000731e:	shr    eax,0x1f
   140007321:	add    edx,eax
   140007323:	cmp    ebp,edx
   140007325:	jl     0x1400072e0
   140007327:	lea    rdx,[rsp+0x70]
   14000732c:	mov    rcx,r13
   14000732f:	call   0x1400025c0
   140007334:	mov    rcx,r13
   140007337:	call   0x140004470
   14000733c:	mov    rcx,r13
   14000733f:	call   0x1400058f0
   140007344:	lea    rcx,[rsp+0x70]
   140007349:	call   QWORD PTR [rip+0x5021]        # 0x14000c370
   14000734f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007354:	mov    eax,DWORD PTR [rbx]
   140007356:	test   eax,eax
   140007358:	je     0x14000736f
   14000735a:	cmp    eax,0xffffffff
   14000735d:	je     0x1400073ab
   14000735f:	lock add DWORD PTR [rbx],0xffffffff
   140007363:	setne  al
   140007366:	test   al,al
   140007368:	jne    0x1400073ab
   14000736a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000736f:	movsxd rax,DWORD PTR [rbx+0xc]
   140007373:	lea    rdi,[rbx+rax*8+0x10]
   140007378:	movsxd rax,DWORD PTR [rbx+0x8]
   14000737c:	lea    rsi,[rbx+rax*8+0x10]
   140007381:	cmp    rsi,rdi
   140007384:	je     0x1400073a2
   140007386:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007390:	mov    rcx,QWORD PTR [rdi-0x8]
   140007394:	sub    rdi,0x8
   140007398:	call   0x14000b100
   14000739d:	cmp    rdi,rsi
   1400073a0:	jne    0x140007390
   1400073a2:	mov    rcx,rbx
   1400073a5:	call   QWORD PTR [rip+0x4f45]        # 0x14000c2f0
   1400073ab:	mov    rax,QWORD PTR [rsp+0x38]
   1400073b0:	mov    ecx,DWORD PTR [rax]
   1400073b2:	test   ecx,ecx
   1400073b4:	je     0x1400073cd
   1400073b6:	cmp    ecx,0xffffffff
   1400073b9:	je     0x1400073c6
   1400073bb:	lock add DWORD PTR [rax],0xffffffff
   1400073bf:	setne  al
   1400073c2:	test   al,al
   1400073c4:	je     0x1400073cd
   1400073c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400073cb:	jmp    0x1400073dd
   1400073cd:	mov    rcx,QWORD PTR [rsp+0x38]
   1400073d2:	call   QWORD PTR [rip+0x4f18]        # 0x14000c2f0
   1400073d8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400073dd:	mov    eax,DWORD PTR [rbx]
   1400073df:	test   eax,eax
   1400073e1:	je     0x1400073f8
   1400073e3:	cmp    eax,0xffffffff
   1400073e6:	je     0x14000742b
   1400073e8:	lock add DWORD PTR [rbx],0xffffffff
   1400073ec:	setne  al
   1400073ef:	test   al,al
   1400073f1:	jne    0x14000742b
   1400073f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400073f8:	movsxd rax,DWORD PTR [rbx+0xc]
   1400073fc:	lea    rdi,[rbx+rax*8+0x10]
   140007401:	movsxd rax,DWORD PTR [rbx+0x8]
   140007405:	lea    rsi,[rbx+rax*8+0x10]
   14000740a:	cmp    rsi,rdi
   14000740d:	je     0x140007422
   14000740f:	nop
   140007410:	sub    rdi,0x8
   140007414:	mov    rcx,rdi
   140007417:	call   QWORD PTR [rip+0x4fc3]        # 0x14000c3e0
   14000741d:	cmp    rdi,rsi
   140007420:	jne    0x140007410
   140007422:	mov    rcx,rbx
   140007425:	call   QWORD PTR [rip+0x4ec5]        # 0x14000c2f0
   14000742b:	lea    rcx,[rsp+0x48]
   140007430:	call   QWORD PTR [rip+0x4faa]        # 0x14000c3e0
   140007436:	mov    rdi,QWORD PTR [rsp+0x98]
   14000743e:	mov    rsi,QWORD PTR [rsp+0xa0]
   140007446:	mov    rbp,QWORD PTR [rsp+0xc8]
   14000744e:	mov    r12,QWORD PTR [rsp+0x90]
   140007456:	add    rsp,0xa8
   14000745d:	pop    r13
   14000745f:	pop    rbx
   140007460:	ret    
   140007461:	int3   
   140007462:	int3   
   140007463:	int3   
   140007464:	int3   
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	int3   
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	int3   
   14000746d:	int3   
   14000746e:	int3   
   14000746f:	int3   
   140007470:	mov    QWORD PTR [rsp+0x10],rbx
   140007475:	push   rdi
   140007476:	sub    rsp,0x30
   14000747a:	mov    rbx,rdx
   14000747d:	mov    rdi,rcx
   140007480:	lea    r8,[rip+0x6115]        # 0x14000d59c
   140007487:	lea    rdx,[rip+0x753a]        # 0x14000e9c8
   14000748e:	lea    rcx,[rsp+0x40]
   140007493:	xor    r9d,r9d
   140007496:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000749e:	call   QWORD PTR [rip+0x4f34]        # 0x14000c3d8
   1400074a4:	mov    rcx,rbx
   1400074a7:	mov    rdx,rax
   1400074aa:	call   QWORD PTR [rip+0x5ff0]        # 0x14000d4a0
   1400074b0:	lea    rcx,[rsp+0x40]
   1400074b5:	call   QWORD PTR [rip+0x4f25]        # 0x14000c3e0
   1400074bb:	lea    r8,[rip+0x74f6]        # 0x14000e9b8
   1400074c2:	lea    rdx,[rip+0x74ff]        # 0x14000e9c8
   1400074c9:	lea    rcx,[rsp+0x40]
   1400074ce:	xor    r9d,r9d
   1400074d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400074d9:	call   QWORD PTR [rip+0x4ef9]        # 0x14000c3d8
   1400074df:	mov    rcx,QWORD PTR [rdi+0x10]
   1400074e3:	mov    rdx,rax
   1400074e6:	call   QWORD PTR [rip+0x5fbc]        # 0x14000d4a8
   1400074ec:	lea    rcx,[rsp+0x40]
   1400074f1:	call   QWORD PTR [rip+0x4ee9]        # 0x14000c3e0
   1400074f7:	lea    r8,[rip+0x74b2]        # 0x14000e9b0
   1400074fe:	lea    rdx,[rip+0x74c3]        # 0x14000e9c8
   140007505:	lea    rcx,[rsp+0x40]
   14000750a:	xor    r9d,r9d
   14000750d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007515:	call   QWORD PTR [rip+0x4ebd]        # 0x14000c3d8
   14000751b:	mov    rcx,QWORD PTR [rdi+0x20]
   14000751f:	mov    rdx,rax
   140007522:	call   QWORD PTR [rip+0x5f80]        # 0x14000d4a8
   140007528:	lea    rcx,[rsp+0x40]
   14000752d:	call   QWORD PTR [rip+0x4ead]        # 0x14000c3e0
   140007533:	lea    r8,[rip+0x746e]        # 0x14000e9a8
   14000753a:	lea    rdx,[rip+0x7487]        # 0x14000e9c8
   140007541:	lea    rcx,[rsp+0x40]
   140007546:	xor    r9d,r9d
   140007549:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007551:	call   QWORD PTR [rip+0x4e81]        # 0x14000c3d8
   140007557:	mov    rcx,QWORD PTR [rdi+0x30]
   14000755b:	mov    rdx,rax
   14000755e:	call   QWORD PTR [rip+0x5f44]        # 0x14000d4a8
   140007564:	lea    rcx,[rsp+0x40]
   140007569:	call   QWORD PTR [rip+0x4e71]        # 0x14000c3e0
   14000756f:	lea    r8,[rip+0x7422]        # 0x14000e998
   140007576:	lea    rdx,[rip+0x744b]        # 0x14000e9c8
   14000757d:	lea    rcx,[rsp+0x40]
   140007582:	xor    r9d,r9d
   140007585:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000758d:	call   QWORD PTR [rip+0x4e45]        # 0x14000c3d8
   140007593:	mov    rcx,QWORD PTR [rdi+0x48]
   140007597:	mov    rdx,rax
   14000759a:	call   QWORD PTR [rip+0x5340]        # 0x14000c8e0
   1400075a0:	lea    rcx,[rsp+0x40]
   1400075a5:	call   QWORD PTR [rip+0x4e35]        # 0x14000c3e0
   1400075ab:	lea    r8,[rip+0x73c6]        # 0x14000e978
   1400075b2:	lea    rdx,[rip+0x740f]        # 0x14000e9c8
   1400075b9:	lea    rcx,[rsp+0x40]
   1400075be:	xor    r9d,r9d
   1400075c1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400075c9:	call   QWORD PTR [rip+0x4e09]        # 0x14000c3d8
   1400075cf:	mov    rcx,QWORD PTR [rdi+0x50]
   1400075d3:	mov    rdx,rax
   1400075d6:	call   QWORD PTR [rip+0x5ed4]        # 0x14000d4b0
   1400075dc:	lea    rcx,[rsp+0x40]
   1400075e1:	call   QWORD PTR [rip+0x4df9]        # 0x14000c3e0
   1400075e7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400075ec:	add    rsp,0x30
   1400075f0:	pop    rdi
   1400075f1:	ret    
   1400075f2:	int3   
   1400075f3:	int3   
   1400075f4:	int3   
   1400075f5:	int3   
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	mov    QWORD PTR [rsp+0x10],rbx
   140007605:	push   rdi
   140007606:	sub    rsp,0x30
   14000760a:	mov    rbx,rdx
   14000760d:	mov    rdi,rcx
   140007610:	lea    r8,[rip+0x7429]        # 0x14000ea40
   140007617:	lea    rdx,[rip+0x7412]        # 0x14000ea30
   14000761e:	lea    rcx,[rsp+0x40]
   140007623:	xor    r9d,r9d
   140007626:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000762e:	call   QWORD PTR [rip+0x4da4]        # 0x14000c3d8
   140007634:	mov    rcx,rbx
   140007637:	mov    rdx,rax
   14000763a:	call   QWORD PTR [rip+0x5e60]        # 0x14000d4a0
   140007640:	lea    rcx,[rsp+0x40]
   140007645:	call   QWORD PTR [rip+0x4d95]        # 0x14000c3e0
   14000764b:	lea    r8,[rip+0x73c6]        # 0x14000ea18
   140007652:	lea    rdx,[rip+0x73d7]        # 0x14000ea30
   140007659:	lea    rcx,[rsp+0x40]
   14000765e:	xor    r9d,r9d
   140007661:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007669:	call   QWORD PTR [rip+0x4d69]        # 0x14000c3d8
   14000766f:	mov    rcx,QWORD PTR [rdi+0x18]
   140007673:	mov    rdx,rax
   140007676:	call   QWORD PTR [rip+0x5e2c]        # 0x14000d4a8
   14000767c:	lea    rcx,[rsp+0x40]
   140007681:	call   QWORD PTR [rip+0x4d59]        # 0x14000c3e0
   140007687:	lea    r8,[rip+0x7372]        # 0x14000ea00
   14000768e:	lea    rdx,[rip+0x739b]        # 0x14000ea30
   140007695:	lea    rcx,[rsp+0x40]
   14000769a:	xor    r9d,r9d
   14000769d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400076a5:	call   QWORD PTR [rip+0x4d2d]        # 0x14000c3d8
   1400076ab:	mov    rcx,QWORD PTR [rdi+0x20]
   1400076af:	mov    rdx,rax
   1400076b2:	call   QWORD PTR [rip+0x5df0]        # 0x14000d4a8
   1400076b8:	lea    rcx,[rsp+0x40]
   1400076bd:	call   QWORD PTR [rip+0x4d1d]        # 0x14000c3e0
   1400076c3:	lea    r8,[rip+0x7326]        # 0x14000e9f0
   1400076ca:	lea    rdx,[rip+0x735f]        # 0x14000ea30
   1400076d1:	lea    rcx,[rsp+0x40]
   1400076d6:	xor    r9d,r9d
   1400076d9:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400076e1:	call   QWORD PTR [rip+0x4cf1]        # 0x14000c3d8
   1400076e7:	mov    rcx,QWORD PTR [rdi+0x28]
   1400076eb:	mov    rdx,rax
   1400076ee:	call   QWORD PTR [rip+0x5db4]        # 0x14000d4a8
   1400076f4:	lea    rcx,[rsp+0x40]
   1400076f9:	call   QWORD PTR [rip+0x4ce1]        # 0x14000c3e0
   1400076ff:	lea    r8,[rip+0x72e6]        # 0x14000e9ec
   140007706:	lea    rdx,[rip+0x7323]        # 0x14000ea30
   14000770d:	lea    rcx,[rsp+0x40]
   140007712:	xor    r9d,r9d
   140007715:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000771d:	call   QWORD PTR [rip+0x4cb5]        # 0x14000c3d8
   140007723:	mov    rcx,QWORD PTR [rdi+0x30]
   140007727:	mov    rdx,rax
   14000772a:	call   QWORD PTR [rip+0x51b8]        # 0x14000c8e8
   140007730:	lea    rcx,[rsp+0x40]
   140007735:	call   QWORD PTR [rip+0x4ca5]        # 0x14000c3e0
   14000773b:	lea    r8,[rip+0x72a6]        # 0x14000e9e8
   140007742:	lea    rdx,[rip+0x72e7]        # 0x14000ea30
   140007749:	lea    rcx,[rsp+0x40]
   14000774e:	xor    r9d,r9d
   140007751:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007759:	call   QWORD PTR [rip+0x4c79]        # 0x14000c3d8
   14000775f:	mov    rcx,QWORD PTR [rdi+0x38]
   140007763:	mov    rdx,rax
   140007766:	call   QWORD PTR [rip+0x517c]        # 0x14000c8e8
   14000776c:	lea    rcx,[rsp+0x40]
   140007771:	call   QWORD PTR [rip+0x4c69]        # 0x14000c3e0
   140007777:	lea    r8,[rip+0x726e]        # 0x14000e9ec
   14000777e:	lea    rdx,[rip+0x72ab]        # 0x14000ea30
   140007785:	lea    rcx,[rsp+0x40]
   14000778a:	xor    r9d,r9d
   14000778d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007795:	call   QWORD PTR [rip+0x4c3d]        # 0x14000c3d8
   14000779b:	mov    rcx,QWORD PTR [rdi+0x40]
   14000779f:	mov    rdx,rax
   1400077a2:	call   QWORD PTR [rip+0x5140]        # 0x14000c8e8
   1400077a8:	lea    rcx,[rsp+0x40]
   1400077ad:	call   QWORD PTR [rip+0x4c2d]        # 0x14000c3e0
   1400077b3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400077bb:	xor    r9d,r9d
   1400077be:	lea    r8,[rip+0x7223]        # 0x14000e9e8
   1400077c5:	lea    rdx,[rip+0x7264]        # 0x14000ea30
   1400077cc:	lea    rcx,[rsp+0x40]
   1400077d1:	call   QWORD PTR [rip+0x4c01]        # 0x14000c3d8
   1400077d7:	mov    rcx,QWORD PTR [rdi+0x48]
   1400077db:	mov    rdx,rax
   1400077de:	call   QWORD PTR [rip+0x5104]        # 0x14000c8e8
   1400077e4:	lea    rcx,[rsp+0x40]
   1400077e9:	call   QWORD PTR [rip+0x4bf1]        # 0x14000c3e0
   1400077ef:	lea    r8,[rip+0x71e2]        # 0x14000e9d8
   1400077f6:	lea    rdx,[rip+0x7233]        # 0x14000ea30
   1400077fd:	lea    rcx,[rsp+0x40]
   140007802:	xor    r9d,r9d
   140007805:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000780d:	call   QWORD PTR [rip+0x4bc5]        # 0x14000c3d8
   140007813:	mov    rcx,QWORD PTR [rdi+0x50]
   140007817:	mov    rdx,rax
   14000781a:	call   QWORD PTR [rip+0x5c88]        # 0x14000d4a8
   140007820:	lea    rcx,[rsp+0x40]
   140007825:	call   QWORD PTR [rip+0x4bb5]        # 0x14000c3e0
   14000782b:	mov    rbx,QWORD PTR [rsp+0x48]
   140007830:	add    rsp,0x30
   140007834:	pop    rdi
   140007835:	ret    
   140007836:	int3   
   140007837:	int3   
   140007838:	int3   
   140007839:	int3   
   14000783a:	int3   
   14000783b:	int3   
   14000783c:	int3   
   14000783d:	int3   
   14000783e:	int3   
   14000783f:	int3   
   140007840:	mov    QWORD PTR [rsp+0x18],rbx
   140007845:	push   rdi
   140007846:	sub    rsp,0x30
   14000784a:	lea    rdx,[rsp+0x20]
   14000784f:	mov    rdi,rcx
   140007852:	call   QWORD PTR [rip+0x50a0]        # 0x14000c8f8
   140007858:	lea    rdx,[rsp+0x48]
   14000785d:	mov    rcx,rdi
   140007860:	mov    ebx,DWORD PTR [rax+0xc]
   140007863:	sub    ebx,DWORD PTR [rax+0x4]
   140007866:	call   QWORD PTR [rip+0x5084]        # 0x14000c8f0
   14000786c:	mov    ecx,DWORD PTR [rax+0x4]
   14000786f:	mov    eax,DWORD PTR [rax]
   140007871:	lea    edx,[rbx+rcx*1+0x11]
   140007875:	lea    rcx,[rdi+0x30]
   140007879:	mov    DWORD PTR [rsp+0x40],eax
   14000787d:	mov    DWORD PTR [rsp+0x44],edx
   140007881:	lea    rdx,[rsp+0x40]
   140007886:	call   QWORD PTR [rip+0x4bf4]        # 0x14000c480
   14000788c:	lea    rcx,[rdi+0x30]
   140007890:	call   QWORD PTR [rip+0x4bf2]        # 0x14000c488
   140007896:	lea    rcx,[rdi+0x30]
   14000789a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000789f:	add    rsp,0x30
   1400078a3:	pop    rdi
   1400078a4:	rex.W jmp QWORD PTR [rip+0x4be5]        # 0x14000c490
   1400078ab:	int3   
   1400078ac:	int3   
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	rex push rbx
   1400078b2:	sub    rsp,0x20
   1400078b6:	mov    rbx,rcx
   1400078b9:	mov    rcx,QWORD PTR [rcx+0x88]
   1400078c0:	lea    rdx,[rsp+0x38]
   1400078c5:	call   QWORD PTR [rip+0x5035]        # 0x14000c900
   1400078cb:	lea    rdx,[rsp+0x30]
   1400078d0:	mov    rcx,rax
   1400078d3:	call   QWORD PTR [rip+0x48ff]        # 0x14000c1d8
   1400078d9:	mov    rcx,QWORD PTR [rbx+0x110]
   1400078e0:	mov    rdx,rax
   1400078e3:	call   0x140006ca0
   1400078e8:	lea    rcx,[rsp+0x30]
   1400078ed:	call   QWORD PTR [rip+0x4aed]        # 0x14000c3e0
   1400078f3:	lea    rcx,[rsp+0x38]
   1400078f8:	call   QWORD PTR [rip+0x4ae2]        # 0x14000c3e0
   1400078fe:	add    rsp,0x20
   140007902:	pop    rbx
   140007903:	ret    
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	rex push rbx
   140007912:	sub    rsp,0x20
   140007916:	mov    rbx,rcx
   140007919:	call   QWORD PTR [rip+0x5959]        # 0x14000d278
   14000791f:	mov    rcx,rbx
   140007922:	add    rsp,0x20
   140007926:	pop    rbx
   140007927:	jmp    0x140007840
   14000792c:	int3   
   14000792d:	int3   
   14000792e:	int3   
   14000792f:	int3   
   140007930:	rex push rbx
   140007932:	sub    rsp,0x20
   140007936:	mov    rbx,rcx
   140007939:	call   QWORD PTR [rip+0x5931]        # 0x14000d270
   14000793f:	mov    rcx,rbx
   140007942:	add    rsp,0x20
   140007946:	pop    rbx
   140007947:	jmp    0x140007840
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	add    rcx,0x30
   140007954:	rex.W jmp QWORD PTR [rip+0x4b1d]        # 0x14000c478
   14000795b:	int3   
   14000795c:	int3   
   14000795d:	int3   
   14000795e:	int3   
   14000795f:	int3   
   140007960:	rex push rbx
   140007962:	push   rbp
   140007963:	push   rsi
   140007964:	push   rdi
   140007965:	push   r12
   140007967:	push   r13
   140007969:	push   r14
   14000796b:	sub    rsp,0x50
   14000796f:	mov    rsi,rdx
   140007972:	mov    rdi,rcx
   140007975:	lea    rdx,[rsp+0x40]
   14000797a:	mov    rcx,rsi
   14000797d:	call   QWORD PTR [rip+0x49b5]        # 0x14000c338
   140007983:	lea    rcx,[rsp+0x40]
   140007988:	mov    r8,QWORD PTR [rax]
   14000798b:	cmp    DWORD PTR [r8+0x4],0x0
   140007990:	sete   bl
   140007993:	call   QWORD PTR [rip+0x4a47]        # 0x14000c3e0
   140007999:	test   bl,bl
   14000799b:	je     0x1400079cc
   14000799d:	lea    rdx,[rip+0x7024]        # 0x14000e9c8
   1400079a4:	lea    rcx,[rsp+0x40]
   1400079a9:	mov    r8d,0xa
   1400079af:	call   QWORD PTR [rip+0x498b]        # 0x14000c340
   1400079b5:	mov    rcx,rsi
   1400079b8:	mov    rdx,rax
   1400079bb:	call   QWORD PTR [rip+0x4987]        # 0x14000c348
   1400079c1:	lea    rcx,[rsp+0x40]
   1400079c6:	call   QWORD PTR [rip+0x4a14]        # 0x14000c3e0
   1400079cc:	lea    rdx,[rsp+0x40]
   1400079d1:	mov    rcx,rsi
   1400079d4:	mov    DWORD PTR [rsp+0x40],0x1e7
   1400079dc:	mov    DWORD PTR [rsp+0x44],0x273
   1400079e4:	call   QWORD PTR [rip+0x59fe]        # 0x14000d3e8
   1400079ea:	lea    rcx,[rsp+0x90]
   1400079f2:	mov    edx,0x1
   1400079f7:	mov    DWORD PTR [rsp+0x90],0x570000
   140007a02:	call   QWORD PTR [rip+0x59e8]        # 0x14000d3f0
   140007a08:	lea    rcx,[rsp+0x90]
   140007a10:	xor    edx,edx
   140007a12:	call   QWORD PTR [rip+0x59e0]        # 0x14000d3f8
   140007a18:	lea    rcx,[rsp+0x90]
   140007a20:	xor    edx,edx
   140007a22:	call   QWORD PTR [rip+0x59d8]        # 0x14000d400
   140007a28:	lea    rdx,[rsp+0x40]
   140007a2d:	mov    rcx,rsi
   140007a30:	call   QWORD PTR [rip+0x59d2]        # 0x14000d408
   140007a36:	mov    edx,DWORD PTR [rsp+0x90]
   140007a3d:	mov    ecx,DWORD PTR [rax]
   140007a3f:	and    ecx,0xe0000000
   140007a45:	xor    ecx,edx
   140007a47:	and    ecx,0x20000000
   140007a4d:	xor    edx,ecx
   140007a4f:	mov    rcx,rsi
   140007a52:	mov    DWORD PTR [rsp+0x90],edx
   140007a59:	call   QWORD PTR [rip+0x59b1]        # 0x14000d410
   140007a5f:	mov    ecx,0x20
   140007a64:	call   0x14000b106
   140007a69:	xor    ebp,ebp
   140007a6b:	mov    rbx,rax
   140007a6e:	test   rax,rax
   140007a71:	je     0x140007a96
   140007a73:	mov    rdx,rsi
   140007a76:	mov    rcx,rax
   140007a79:	call   QWORD PTR [rip+0x5999]        # 0x14000d418
   140007a7f:	lea    r11,[rip+0x6552]        # 0x14000dfd8
   140007a86:	lea    rax,[rip+0x64bb]        # 0x14000df48
   140007a8d:	mov    QWORD PTR [rbx],r11
   140007a90:	mov    QWORD PTR [rbx+0x10],rax
   140007a94:	jmp    0x140007a99
   140007a96:	mov    rbx,rbp
   140007a99:	lea    rdx,[rip+0x6490]        # 0x14000df30
   140007aa0:	lea    rcx,[rsp+0x40]
   140007aa5:	mov    r8d,0xa
   140007aab:	mov    QWORD PTR [rdi],rbx
   140007aae:	call   QWORD PTR [rip+0x488c]        # 0x14000c340
   140007ab4:	mov    rcx,QWORD PTR [rdi]
   140007ab7:	mov    rdx,rax
   140007aba:	call   QWORD PTR [rip+0x4888]        # 0x14000c348
   140007ac0:	lea    rcx,[rsp+0x40]
   140007ac5:	call   QWORD PTR [rip+0x4915]        # 0x14000c3e0
   140007acb:	mov    ecx,0x30
   140007ad0:	call   0x14000b106
   140007ad5:	lea    r14,[rip+0x5b3c]        # 0x14000d618
   140007adc:	mov    rbx,rax
   140007adf:	test   rax,rax
   140007ae2:	je     0x140007b03
   140007ae4:	mov    edx,0x14
   140007ae9:	mov    rcx,rax
   140007aec:	mov    DWORD PTR [rsp+0x20],ebp
   140007af0:	lea    r9d,[rdx-0x13]
   140007af4:	lea    r8d,[rdx-0x7]
   140007af8:	call   QWORD PTR [rip+0x5992]        # 0x14000d490
   140007afe:	mov    QWORD PTR [rbx],r14
   140007b01:	jmp    0x140007b06
   140007b03:	mov    rbx,rbp
   140007b06:	mov    rcx,QWORD PTR [rdi]
   140007b09:	mov    DWORD PTR [rsp+0x30],ebp
   140007b0d:	mov    r9d,0x2
   140007b13:	xor    r8d,r8d
   140007b16:	mov    rdx,rbx
   140007b19:	mov    DWORD PTR [rsp+0x28],0x1
   140007b21:	mov    QWORD PTR [rdi+0x8],rbx
   140007b25:	mov    DWORD PTR [rsp+0x20],0x1
   140007b2d:	call   QWORD PTR [rip+0x5965]        # 0x14000d498
   140007b33:	mov    ecx,0x30
   140007b38:	call   0x14000b106
   140007b3d:	lea    r12,[rip+0x6284]        # 0x14000ddc8
   140007b44:	lea    r13,[rip+0x623d]        # 0x14000dd88
   140007b4b:	mov    rbx,rax
   140007b4e:	test   rax,rax
   140007b51:	je     0x140007b6b
   140007b53:	mov    r8d,ebp
   140007b56:	mov    rdx,rsi
   140007b59:	mov    rcx,rax
   140007b5c:	call   QWORD PTR [rip+0x58be]        # 0x14000d420
   140007b62:	mov    QWORD PTR [rbx],r12
   140007b65:	mov    QWORD PTR [rbx+0x10],r13
   140007b69:	jmp    0x140007b6e
   140007b6b:	mov    rbx,rbp
   140007b6e:	lea    rdx,[rip+0x7863]        # 0x14000f3d8
   140007b75:	lea    rcx,[rsp+0x40]
   140007b7a:	mov    r8d,0x7
   140007b80:	mov    QWORD PTR [rdi+0x10],rbx
   140007b84:	call   QWORD PTR [rip+0x47b6]        # 0x14000c340
   140007b8a:	mov    rcx,QWORD PTR [rdi+0x10]
   140007b8e:	mov    rdx,rax
   140007b91:	call   QWORD PTR [rip+0x47b1]        # 0x14000c348
   140007b97:	lea    rcx,[rsp+0x40]
   140007b9c:	call   QWORD PTR [rip+0x483e]        # 0x14000c3e0
   140007ba2:	mov    rdx,QWORD PTR [rdi+0x10]
   140007ba6:	mov    rcx,QWORD PTR [rdi]
   140007ba9:	xor    r9d,r9d
   140007bac:	mov    DWORD PTR [rsp+0x30],ebp
   140007bb0:	mov    DWORD PTR [rsp+0x28],0x1
   140007bb8:	lea    r8d,[r9+0x1]
   140007bbc:	mov    DWORD PTR [rsp+0x20],0x1
   140007bc4:	call   QWORD PTR [rip+0x5866]        # 0x14000d430
   140007bca:	mov    ecx,0x30
   140007bcf:	call   0x14000b106
   140007bd4:	mov    rbx,rax
   140007bd7:	test   rax,rax
   140007bda:	je     0x140007bff
   140007bdc:	mov    rdx,rsi
   140007bdf:	mov    rcx,rax
   140007be2:	call   QWORD PTR [rip+0x4d68]        # 0x14000c950
   140007be8:	lea    r11,[rip+0x7649]        # 0x14000f238
   140007bef:	lea    rax,[rip+0x7602]        # 0x14000f1f8
   140007bf6:	mov    QWORD PTR [rbx],r11
   140007bf9:	mov    QWORD PTR [rbx+0x10],rax
   140007bfd:	jmp    0x140007c02
   140007bff:	mov    rbx,rbp
   140007c02:	lea    rdx,[rip+0x75df]        # 0x14000f1e8
   140007c09:	lea    rcx,[rsp+0x40]
   140007c0e:	mov    r8d,0x7
   140007c14:	mov    QWORD PTR [rdi+0x18],rbx
   140007c18:	call   QWORD PTR [rip+0x4722]        # 0x14000c340
   140007c1e:	mov    rcx,QWORD PTR [rdi+0x18]
   140007c22:	mov    rdx,rax
   140007c25:	call   QWORD PTR [rip+0x471d]        # 0x14000c348
   140007c2b:	lea    rcx,[rsp+0x40]
   140007c30:	call   QWORD PTR [rip+0x47aa]        # 0x14000c3e0
   140007c36:	mov    rdx,QWORD PTR [rdi+0x18]
   140007c3a:	mov    rcx,QWORD PTR [rdi]
   140007c3d:	mov    r9d,0x1
   140007c43:	mov    DWORD PTR [rsp+0x30],ebp
   140007c47:	mov    DWORD PTR [rsp+0x28],0x2
   140007c4f:	mov    r8d,r9d
   140007c52:	mov    DWORD PTR [rsp+0x20],0x1
   140007c5a:	call   QWORD PTR [rip+0x57d0]        # 0x14000d430
   140007c60:	mov    ecx,0x30
   140007c65:	call   0x14000b106
   140007c6a:	mov    rbx,rax
   140007c6d:	test   rax,rax
   140007c70:	je     0x140007c8a
   140007c72:	mov    r8d,ebp
   140007c75:	mov    rdx,rsi
   140007c78:	mov    rcx,rax
   140007c7b:	call   QWORD PTR [rip+0x579f]        # 0x14000d420
   140007c81:	mov    QWORD PTR [rbx],r12
   140007c84:	mov    QWORD PTR [rbx+0x10],r13
   140007c88:	jmp    0x140007c8d
   140007c8a:	mov    rbx,rbp
   140007c8d:	lea    rdx,[rip+0x60dc]        # 0x14000dd70
   140007c94:	lea    rcx,[rsp+0x40]
   140007c99:	mov    r8d,0x5
   140007c9f:	mov    QWORD PTR [rdi+0x20],rbx
   140007ca3:	call   QWORD PTR [rip+0x4697]        # 0x14000c340
   140007ca9:	mov    rcx,QWORD PTR [rdi+0x20]
   140007cad:	mov    rdx,rax
   140007cb0:	call   QWORD PTR [rip+0x4692]        # 0x14000c348
   140007cb6:	lea    rcx,[rsp+0x40]
   140007cbb:	call   QWORD PTR [rip+0x471f]        # 0x14000c3e0
   140007cc1:	mov    rdx,QWORD PTR [rdi+0x20]
   140007cc5:	mov    rcx,QWORD PTR [rdi]
   140007cc8:	xor    r9d,r9d
   140007ccb:	mov    DWORD PTR [rsp+0x30],ebp
   140007ccf:	mov    DWORD PTR [rsp+0x28],0x1
   140007cd7:	lea    r8d,[r9+0x2]
   140007cdb:	mov    DWORD PTR [rsp+0x20],0x1
   140007ce3:	call   QWORD PTR [rip+0x5747]        # 0x14000d430
   140007ce9:	mov    ecx,0x30
   140007cee:	call   0x14000b106
   140007cf3:	mov    rbx,rax
   140007cf6:	test   rax,rax
   140007cf9:	je     0x140007d1e
   140007cfb:	mov    rdx,rsi
   140007cfe:	mov    rcx,rax
   140007d01:	call   QWORD PTR [rip+0x4c41]        # 0x14000c948
   140007d07:	lea    r11,[rip+0x732a]        # 0x14000f038
   140007d0e:	lea    rax,[rip+0x72e3]        # 0x14000eff8
   140007d15:	mov    QWORD PTR [rbx],r11
   140007d18:	mov    QWORD PTR [rbx+0x10],rax
   140007d1c:	jmp    0x140007d21
   140007d1e:	mov    rbx,rbp
   140007d21:	lea    rdx,[rip+0x72b8]        # 0x14000efe0
   140007d28:	lea    rcx,[rsp+0x40]
   140007d2d:	mov    r8d,0xd
   140007d33:	mov    QWORD PTR [rdi+0x28],rbx
   140007d37:	call   QWORD PTR [rip+0x4603]        # 0x14000c340
   140007d3d:	mov    rcx,QWORD PTR [rdi+0x28]
   140007d41:	mov    rdx,rax
   140007d44:	call   QWORD PTR [rip+0x45fe]        # 0x14000c348
   140007d4a:	lea    rcx,[rsp+0x40]
   140007d4f:	call   QWORD PTR [rip+0x468b]        # 0x14000c3e0
   140007d55:	mov    rcx,QWORD PTR [rdi+0x28]
   140007d59:	mov    edx,0xffffff
   140007d5e:	mov    r8d,0x80
   140007d64:	call   QWORD PTR [rip+0x4bd6]        # 0x14000c940
   140007d6a:	mov    rcx,QWORD PTR [rdi+0x28]
   140007d6e:	xor    edx,edx
   140007d70:	call   QWORD PTR [rip+0x4bc2]        # 0x14000c938
   140007d76:	lea    rdx,[rip+0x725b]        # 0x14000efd8
   140007d7d:	lea    rcx,[rsp+0x40]
   140007d82:	xor    r8d,r8d
   140007d85:	call   QWORD PTR [rip+0x45b5]        # 0x14000c340
   140007d8b:	mov    rcx,QWORD PTR [rdi+0x28]
   140007d8f:	mov    rdx,rax
   140007d92:	call   QWORD PTR [rip+0x4b98]        # 0x14000c930
   140007d98:	lea    rcx,[rsp+0x40]
   140007d9d:	call   QWORD PTR [rip+0x463d]        # 0x14000c3e0
   140007da3:	mov    rdx,QWORD PTR [rdi+0x28]
   140007da7:	mov    rcx,QWORD PTR [rdi]
   140007daa:	mov    r9d,0x1
   140007db0:	mov    DWORD PTR [rsp+0x30],ebp
   140007db4:	mov    DWORD PTR [rsp+0x28],0x2
   140007dbc:	lea    r8d,[r9+0x1]
   140007dc0:	mov    DWORD PTR [rsp+0x20],0x1
   140007dc8:	call   QWORD PTR [rip+0x5662]        # 0x14000d430
   140007dce:	mov    ecx,0x30
   140007dd3:	call   0x14000b106
   140007dd8:	mov    rbx,rax
   140007ddb:	test   rax,rax
   140007dde:	je     0x140007df8
   140007de0:	mov    r8d,ebp
   140007de3:	mov    rdx,rsi
   140007de6:	mov    rcx,rax
   140007de9:	call   QWORD PTR [rip+0x5631]        # 0x14000d420
   140007def:	mov    QWORD PTR [rbx],r12
   140007df2:	mov    QWORD PTR [rbx+0x10],r13
   140007df6:	jmp    0x140007dfb
   140007df8:	mov    rbx,rbp
   140007dfb:	lea    rdx,[rip+0x71ce]        # 0x14000efd0
   140007e02:	lea    rcx,[rsp+0x40]
   140007e07:	mov    r8d,0x7
   140007e0d:	mov    QWORD PTR [rdi+0x30],rbx
   140007e11:	call   QWORD PTR [rip+0x4529]        # 0x14000c340
   140007e17:	mov    rcx,QWORD PTR [rdi+0x30]
   140007e1b:	mov    rdx,rax
   140007e1e:	call   QWORD PTR [rip+0x4524]        # 0x14000c348
   140007e24:	lea    rcx,[rsp+0x40]
   140007e29:	call   QWORD PTR [rip+0x45b1]        # 0x14000c3e0
   140007e2f:	mov    rdx,QWORD PTR [rdi+0x30]
   140007e33:	mov    rcx,QWORD PTR [rdi]
   140007e36:	xor    r9d,r9d
   140007e39:	mov    DWORD PTR [rsp+0x30],ebp
   140007e3d:	mov    DWORD PTR [rsp+0x28],0x1
   140007e45:	lea    r8d,[r9+0x3]
   140007e49:	mov    DWORD PTR [rsp+0x20],0x1
   140007e51:	call   QWORD PTR [rip+0x55d9]        # 0x14000d430
   140007e57:	mov    ecx,0x30
   140007e5c:	call   0x14000b106
   140007e61:	mov    rbx,rax
   140007e64:	test   rax,rax
   140007e67:	je     0x140007e8c
   140007e69:	mov    rdx,rsi
   140007e6c:	mov    rcx,rax
   140007e6f:	call   QWORD PTR [rip+0x4ab3]        # 0x14000c928
   140007e75:	lea    r11,[rip+0x6fdc]        # 0x14000ee58
   140007e7c:	lea    rax,[rip+0x6f95]        # 0x14000ee18
   140007e83:	mov    QWORD PTR [rbx],r11
   140007e86:	mov    QWORD PTR [rbx+0x10],rax
   140007e8a:	jmp    0x140007e8f
   140007e8c:	mov    rbx,rbp
   140007e8f:	lea    rdx,[rip+0x6f6a]        # 0x14000ee00
   140007e96:	lea    rcx,[rsp+0x40]
   140007e9b:	mov    r8d,0x8
   140007ea1:	mov    QWORD PTR [rdi+0x38],rbx
   140007ea5:	call   QWORD PTR [rip+0x4495]        # 0x14000c340
   140007eab:	mov    rcx,QWORD PTR [rdi+0x38]
   140007eaf:	mov    rdx,rax
   140007eb2:	call   QWORD PTR [rip+0x4490]        # 0x14000c348
   140007eb8:	lea    rcx,[rsp+0x40]
   140007ebd:	call   QWORD PTR [rip+0x451d]        # 0x14000c3e0
   140007ec3:	lea    rcx,[rsp+0xa0]
   140007ecb:	mov    edx,0x1
   140007ed0:	mov    DWORD PTR [rsp+0xa0],0x70000
   140007edb:	call   QWORD PTR [rip+0x550f]        # 0x14000d3f0
   140007ee1:	lea    rcx,[rsp+0xa0]
   140007ee9:	xor    edx,edx
   140007eeb:	call   QWORD PTR [rip+0x5507]        # 0x14000d3f8
   140007ef1:	lea    rcx,[rsp+0xa0]
   140007ef9:	xor    edx,edx
   140007efb:	call   QWORD PTR [rip+0x54ff]        # 0x14000d400
   140007f01:	mov    rcx,QWORD PTR [rdi+0x38]
   140007f05:	lea    rdx,[rsp+0x40]
   140007f0a:	call   QWORD PTR [rip+0x54f8]        # 0x14000d408
   140007f10:	mov    edx,DWORD PTR [rsp+0xa0]
   140007f17:	mov    ecx,DWORD PTR [rax]
   140007f19:	and    ecx,0xe0000000
   140007f1f:	xor    ecx,edx
   140007f21:	and    ecx,0x20000000
   140007f27:	xor    edx,ecx
   140007f29:	mov    rcx,QWORD PTR [rdi+0x38]
   140007f2d:	mov    DWORD PTR [rsp+0xa0],edx
   140007f34:	call   QWORD PTR [rip+0x54d6]        # 0x14000d410
   140007f3a:	mov    rdx,QWORD PTR [rdi+0x38]
   140007f3e:	mov    rcx,QWORD PTR [rdi]
   140007f41:	mov    r9d,0x1
   140007f47:	mov    DWORD PTR [rsp+0x30],ebp
   140007f4b:	lea    r8d,[r9+0x2]
   140007f4f:	mov    DWORD PTR [rsp+0x28],0x2
   140007f57:	mov    DWORD PTR [rsp+0x20],0x1
   140007f5f:	call   QWORD PTR [rip+0x54cb]        # 0x14000d430
   140007f65:	mov    ecx,0x30
   140007f6a:	call   0x14000b106
   140007f6f:	mov    rbx,rax
   140007f72:	test   rax,rax
   140007f75:	je     0x140007f95
   140007f77:	mov    edx,0x14
   140007f7c:	mov    rcx,rax
   140007f7f:	mov    DWORD PTR [rsp+0x20],ebp
   140007f83:	lea    r9d,[rdx-0x13]
   140007f87:	mov    r8d,edx
   140007f8a:	call   QWORD PTR [rip+0x5500]        # 0x14000d490
   140007f90:	mov    QWORD PTR [rbx],r14
   140007f93:	jmp    0x140007f98
   140007f95:	mov    rbx,rbp
   140007f98:	mov    rcx,QWORD PTR [rdi]
   140007f9b:	mov    r9d,0x1
   140007fa1:	mov    DWORD PTR [rsp+0x30],ebp
   140007fa5:	lea    r8d,[r9+0x5]
   140007fa9:	mov    rdx,rbx
   140007fac:	mov    DWORD PTR [rsp+0x28],0x1
   140007fb4:	mov    QWORD PTR [rdi+0x40],rbx
   140007fb8:	mov    DWORD PTR [rsp+0x20],0x1
   140007fc0:	call   QWORD PTR [rip+0x54d2]        # 0x14000d498
   140007fc6:	mov    ecx,0x30
   140007fcb:	call   0x14000b106
   140007fd0:	mov    rbx,rax
   140007fd3:	test   rax,rax
   140007fd6:	je     0x140007ffb
   140007fd8:	mov    rdx,rsi
   140007fdb:	mov    rcx,rax
   140007fde:	call   QWORD PTR [rip+0x493c]        # 0x14000c920
   140007fe4:	lea    r11,[rip+0x6cad]        # 0x14000ec98
   140007feb:	lea    rax,[rip+0x6c66]        # 0x14000ec58
   140007ff2:	mov    QWORD PTR [rbx],r11
   140007ff5:	mov    QWORD PTR [rbx+0x10],rax
   140007ff9:	jmp    0x140007ffe
   140007ffb:	mov    rbx,rbp
   140007ffe:	lea    rdx,[rip+0x6c33]        # 0x14000ec38
   140008005:	lea    rcx,[rsp+0x40]
   14000800a:	mov    r8d,0x8
   140008010:	mov    QWORD PTR [rdi+0x48],rbx
   140008014:	call   QWORD PTR [rip+0x4326]        # 0x14000c340
   14000801a:	mov    rcx,QWORD PTR [rdi+0x48]
   14000801e:	mov    rdx,rax
   140008021:	call   QWORD PTR [rip+0x4321]        # 0x14000c348
   140008027:	lea    rcx,[rsp+0x40]
   14000802c:	call   QWORD PTR [rip+0x43ae]        # 0x14000c3e0
   140008032:	lea    rcx,[rsp+0xa8]
   14000803a:	mov    edx,0x1
   14000803f:	mov    DWORD PTR [rsp+0xa8],0x750000
   14000804a:	call   QWORD PTR [rip+0x53a0]        # 0x14000d3f0
   140008050:	lea    rcx,[rsp+0xa8]
   140008058:	xor    edx,edx
   14000805a:	call   QWORD PTR [rip+0x5398]        # 0x14000d3f8
   140008060:	lea    rcx,[rsp+0xa8]
   140008068:	xor    edx,edx
   14000806a:	call   QWORD PTR [rip+0x5390]        # 0x14000d400
   140008070:	mov    rcx,QWORD PTR [rdi+0x48]
   140008074:	lea    rdx,[rsp+0x40]
   140008079:	call   QWORD PTR [rip+0x5389]        # 0x14000d408
   14000807f:	mov    edx,DWORD PTR [rsp+0xa8]
   140008086:	mov    ecx,DWORD PTR [rax]
   140008088:	and    ecx,0xe0000000
   14000808e:	xor    ecx,edx
   140008090:	and    ecx,0x20000000
   140008096:	xor    edx,ecx
   140008098:	mov    rcx,QWORD PTR [rdi+0x48]
   14000809c:	mov    DWORD PTR [rsp+0xa8],edx
   1400080a3:	call   QWORD PTR [rip+0x5367]        # 0x14000d410
   1400080a9:	mov    rcx,QWORD PTR [rdi+0x48]
   1400080ad:	xor    r8d,r8d
   1400080b0:	mov    edx,0x190
   1400080b5:	call   QWORD PTR [rip+0x485d]        # 0x14000c918
   1400080bb:	mov    rcx,QWORD PTR [rdi+0x48]
   1400080bf:	mov    dl,0x1
   1400080c1:	call   QWORD PTR [rip+0x4849]        # 0x14000c910
   1400080c7:	mov    rdx,QWORD PTR [rdi+0x48]
   1400080cb:	mov    rcx,QWORD PTR [rdi]
   1400080ce:	xor    r9d,r9d
   1400080d1:	mov    DWORD PTR [rsp+0x30],ebp
   1400080d5:	mov    DWORD PTR [rsp+0x28],0x3
   1400080dd:	lea    r8d,[r9+0x9]
   1400080e1:	mov    DWORD PTR [rsp+0x20],0x1
   1400080e9:	call   QWORD PTR [rip+0x5341]        # 0x14000d430
   1400080ef:	mov    ecx,0x30
   1400080f4:	call   0x14000b106
   1400080f9:	mov    rbx,rax
   1400080fc:	test   rax,rax
   1400080ff:	je     0x140008124
   140008101:	mov    rdx,rsi
   140008104:	mov    rcx,rax
   140008107:	call   QWORD PTR [rip+0x47fb]        # 0x14000c908
   14000810d:	lea    r11,[rip+0x69a4]        # 0x14000eab8
   140008114:	lea    rax,[rip+0x695d]        # 0x14000ea78
   14000811b:	mov    QWORD PTR [rbx],r11
   14000811e:	mov    QWORD PTR [rbx+0x10],rax
   140008122:	jmp    0x140008127
   140008124:	mov    rbx,rbp
   140008127:	lea    rdx,[rip+0x6932]        # 0x14000ea60
   14000812e:	lea    rcx,[rsp+0x40]
   140008133:	mov    r8d,0xc
   140008139:	mov    QWORD PTR [rdi+0x50],rbx
   14000813d:	call   QWORD PTR [rip+0x41fd]        # 0x14000c340
   140008143:	mov    rcx,QWORD PTR [rdi+0x50]
   140008147:	mov    rdx,rax
   14000814a:	call   QWORD PTR [rip+0x41f8]        # 0x14000c348
   140008150:	lea    rcx,[rsp+0x40]
   140008155:	call   QWORD PTR [rip+0x4285]        # 0x14000c3e0
   14000815b:	mov    rdx,QWORD PTR [rdi+0x50]
   14000815f:	mov    rcx,QWORD PTR [rdi]
   140008162:	mov    r9d,0x1
   140008168:	mov    DWORD PTR [rsp+0x30],ebp
   14000816c:	mov    DWORD PTR [rsp+0x28],0x2
   140008174:	lea    r8d,[r9+0x3]
   140008178:	mov    DWORD PTR [rsp+0x20],0x1
   140008180:	call   QWORD PTR [rip+0x52aa]        # 0x14000d430
   140008186:	mov    rdx,rsi
   140008189:	mov    rcx,rdi
   14000818c:	call   0x140007470
   140008191:	mov    rcx,rsi
   140008194:	call   QWORD PTR [rip+0x41b6]        # 0x14000c350
   14000819a:	add    rsp,0x50
   14000819e:	pop    r14
   1400081a0:	pop    r13
   1400081a2:	pop    r12
   1400081a4:	pop    rdi
   1400081a5:	pop    rsi
   1400081a6:	pop    rbp
   1400081a7:	pop    rbx
   1400081a8:	ret    
   1400081a9:	int3   
   1400081aa:	int3   
   1400081ab:	int3   
   1400081ac:	int3   
   1400081ad:	int3   
   1400081ae:	int3   
   1400081af:	int3   
   1400081b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081b5:	push   rdi
   1400081b6:	sub    rsp,0x20
   1400081ba:	mov    ebx,edx
   1400081bc:	mov    rdi,rcx
   1400081bf:	call   QWORD PTR [rip+0x4a7b]        # 0x14000cc40
   1400081c5:	test   bl,0x1
   1400081c8:	je     0x1400081d2
   1400081ca:	mov    rcx,rdi
   1400081cd:	call   0x14000b100
   1400081d2:	mov    rax,rdi
   1400081d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081da:	add    rsp,0x20
   1400081de:	pop    rdi
   1400081df:	ret    
   1400081e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081e5:	push   rdi
   1400081e6:	sub    rsp,0x20
   1400081ea:	mov    ebx,edx
   1400081ec:	mov    rdi,rcx
   1400081ef:	call   QWORD PTR [rip+0x4a53]        # 0x14000cc48
   1400081f5:	test   bl,0x1
   1400081f8:	je     0x140008202
   1400081fa:	mov    rcx,rdi
   1400081fd:	call   0x14000b100
   140008202:	mov    rax,rdi
   140008205:	mov    rbx,QWORD PTR [rsp+0x30]
   14000820a:	add    rsp,0x20
   14000820e:	pop    rdi
   14000820f:	ret    
   140008210:	mov    QWORD PTR [rsp+0x8],rbx
   140008215:	push   rdi
   140008216:	sub    rsp,0x20
   14000821a:	mov    ebx,edx
   14000821c:	mov    rdi,rcx
   14000821f:	call   QWORD PTR [rip+0x4a2b]        # 0x14000cc50
   140008225:	test   bl,0x1
   140008228:	je     0x140008232
   14000822a:	mov    rcx,rdi
   14000822d:	call   0x14000b100
   140008232:	mov    rax,rdi
   140008235:	mov    rbx,QWORD PTR [rsp+0x30]
   14000823a:	add    rsp,0x20
   14000823e:	pop    rdi
   14000823f:	ret    
   140008240:	mov    QWORD PTR [rsp+0x8],rbx
   140008245:	push   rdi
   140008246:	sub    rsp,0x20
   14000824a:	mov    ebx,edx
   14000824c:	mov    rdi,rcx
   14000824f:	call   QWORD PTR [rip+0x4a03]        # 0x14000cc58
   140008255:	test   bl,0x1
   140008258:	je     0x140008262
   14000825a:	mov    rcx,rdi
   14000825d:	call   0x14000b100
   140008262:	mov    rax,rdi
   140008265:	mov    rbx,QWORD PTR [rsp+0x30]
   14000826a:	add    rsp,0x20
   14000826e:	pop    rdi
   14000826f:	ret    
   140008270:	mov    QWORD PTR [rsp+0x8],rbx
   140008275:	push   rdi
   140008276:	sub    rsp,0x20
   14000827a:	mov    ebx,edx
   14000827c:	mov    rdi,rcx
   14000827f:	call   QWORD PTR [rip+0x49db]        # 0x14000cc60
   140008285:	test   bl,0x1
   140008288:	je     0x140008292
   14000828a:	mov    rcx,rdi
   14000828d:	call   0x14000b100
   140008292:	mov    rax,rdi
   140008295:	mov    rbx,QWORD PTR [rsp+0x30]
   14000829a:	add    rsp,0x20
   14000829e:	pop    rdi
   14000829f:	ret    
   1400082a0:	sub    rcx,0x10
   1400082a4:	jmp    0x1400081b0
   1400082a9:	int3   
   1400082aa:	int3   
   1400082ab:	int3   
   1400082ac:	int3   
   1400082ad:	int3   
   1400082ae:	int3   
   1400082af:	int3   
   1400082b0:	sub    rcx,0x10
   1400082b4:	jmp    0x140008210
   1400082b9:	int3   
   1400082ba:	int3   
   1400082bb:	int3   
   1400082bc:	int3   
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	sub    rcx,0x10
   1400082c4:	jmp    0x140008240
   1400082c9:	int3   
   1400082ca:	int3   
   1400082cb:	int3   
   1400082cc:	int3   
   1400082cd:	int3   
   1400082ce:	int3   
   1400082cf:	int3   
   1400082d0:	sub    rcx,0x10
   1400082d4:	jmp    0x140008270
   1400082d9:	int3   
   1400082da:	int3   
   1400082db:	int3   
   1400082dc:	int3   
   1400082dd:	int3   
   1400082de:	int3   
   1400082df:	int3   
   1400082e0:	sub    rcx,0x10
   1400082e4:	jmp    0x1400081e0
   1400082e9:	int3   
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	int3   
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400082f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400082fa:	push   rdi
   1400082fb:	sub    rsp,0x30
   1400082ff:	mov    rbx,rcx
   140008302:	mov    edx,0x800
   140008307:	add    rcx,0x30
   14000830b:	call   QWORD PTR [rip+0x415f]        # 0x14000c470
   140008311:	or     rcx,0xffffffffffffffff
   140008315:	lea    rdx,[rip+0x70d8]        # 0x14000f3f4
   14000831c:	mov    QWORD PTR [rsp+0x28],rdx
   140008321:	mov    rdi,rdx
   140008324:	xor    eax,eax
   140008326:	repnz scas al,BYTE PTR es:[rdi]
   140008328:	lea    rdx,[rsp+0x20]
   14000832d:	not    rcx
   140008330:	dec    rcx
   140008333:	mov    DWORD PTR [rsp+0x20],ecx
   140008337:	lea    rcx,[rsp+0x40]
   14000833c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140008341:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140008347:	call   QWORD PTR [rip+0x3f7b]        # 0x14000c2c8
   14000834d:	lea    rcx,[rbx+0x30]
   140008351:	call   QWORD PTR [rip+0x4221]        # 0x14000c578
   140008357:	mov    r8,QWORD PTR [rbx+0x110]
   14000835e:	lea    rdx,[rsp+0x40]
   140008363:	mov    rcx,rax
   140008366:	call   QWORD PTR [rip+0x41fc]        # 0x14000c568
   14000836c:	lea    rcx,[rsp+0x40]
   140008371:	call   QWORD PTR [rip+0x4069]        # 0x14000c3e0
   140008377:	or     rcx,0xffffffffffffffff
   14000837b:	xor    eax,eax
   14000837d:	lea    rdi,[rip+0x705c]        # 0x14000f3e0
   140008384:	repnz scas al,BYTE PTR es:[rdi]
   140008386:	not    rcx
   140008389:	lea    rdx,[rcx-0x1]
   14000838d:	lea    rcx,[rip+0x704c]        # 0x14000f3e0
   140008394:	call   QWORD PTR [rip+0x3e8e]        # 0x14000c228
   14000839a:	lea    rdx,[rsp+0x40]
   14000839f:	lea    rcx,[rsp+0x48]
   1400083a4:	xor    r8d,r8d
   1400083a7:	mov    QWORD PTR [rsp+0x40],rax
   1400083ac:	call   QWORD PTR [rip+0x3e16]        # 0x14000c1c8
   1400083b2:	lea    rcx,[rbx+0x30]
   1400083b6:	mov    rdx,rax
   1400083b9:	call   QWORD PTR [rip+0x41c9]        # 0x14000c588
   1400083bf:	lea    rcx,[rsp+0x48]
   1400083c4:	call   QWORD PTR [rip+0x3e06]        # 0x14000c1d0
   1400083ca:	lea    rcx,[rsp+0x40]
   1400083cf:	call   QWORD PTR [rip+0x400b]        # 0x14000c3e0
   1400083d5:	lea    rcx,[rbx+0x30]
   1400083d9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400083de:	mov    rsi,QWORD PTR [rsp+0x58]
   1400083e3:	add    rsp,0x30
   1400083e7:	pop    rdi
   1400083e8:	rex.W jmp QWORD PTR [rip+0x40a1]        # 0x14000c490
   1400083ef:	int3   
   1400083f0:	test   edx,edx
   1400083f2:	je     0x140008765
   1400083f8:	mov    rax,rsp
   1400083fb:	push   rbp
   1400083fc:	sub    rsp,0xe0
   140008403:	mov    QWORD PTR [rax+0x8],rbx
   140008407:	mov    QWORD PTR [rax-0x10],rsi
   14000840b:	mov    QWORD PTR [rax-0x18],rdi
   14000840f:	movaps XMMWORD PTR [rax-0x28],xmm6
   140008413:	movaps XMMWORD PTR [rax-0x38],xmm7
   140008417:	movaps XMMWORD PTR [rax-0x48],xmm8
   14000841c:	mov    rbp,rcx
   14000841f:	mov    rcx,QWORD PTR [rcx+0xe8]
   140008426:	lea    rdx,[rax+0x18]
   14000842a:	movaps XMMWORD PTR [rax-0x58],xmm9
   14000842f:	movaps XMMWORD PTR [rax-0x68],xmm10
   140008434:	movaps XMMWORD PTR [rax-0x78],xmm11
   140008439:	call   QWORD PTR [rip+0x4829]        # 0x14000cc68
   14000843f:	xor    edx,edx
   140008441:	mov    rcx,rax
   140008444:	call   QWORD PTR [rip+0x3db6]        # 0x14000c200
   14000844a:	lea    rcx,[rsp+0x100]
   140008452:	movsd  QWORD PTR [rsp+0x108],xmm0
   14000845b:	movapd xmm6,xmm0
   14000845f:	call   QWORD PTR [rip+0x3f7b]        # 0x14000c3e0
   140008465:	mov    rcx,QWORD PTR [rbp+0xf0]
   14000846c:	lea    rdx,[rsp+0x100]
   140008474:	call   QWORD PTR [rip+0x47ee]        # 0x14000cc68
   14000847a:	xor    edx,edx
   14000847c:	mov    rcx,rax
   14000847f:	call   QWORD PTR [rip+0x3d7b]        # 0x14000c200
   140008485:	lea    rcx,[rsp+0x100]
   14000848d:	movapd xmm10,xmm0
   140008492:	call   QWORD PTR [rip+0x3f48]        # 0x14000c3e0
   140008498:	mov    rcx,QWORD PTR [rbp+0xf8]
   14000849f:	lea    rdx,[rsp+0x100]
   1400084a7:	call   QWORD PTR [rip+0x47bb]        # 0x14000cc68
   1400084ad:	xor    edx,edx
   1400084af:	mov    rcx,rax
   1400084b2:	call   QWORD PTR [rip+0x3d48]        # 0x14000c200
   1400084b8:	lea    rcx,[rsp+0x100]
   1400084c0:	movsd  QWORD PTR [rsp+0x58],xmm0
   1400084c6:	movapd xmm7,xmm0
   1400084ca:	call   QWORD PTR [rip+0x3f10]        # 0x14000c3e0
   1400084d0:	mov    rcx,QWORD PTR [rbp+0x100]
   1400084d7:	lea    rdx,[rsp+0x100]
   1400084df:	call   QWORD PTR [rip+0x4783]        # 0x14000cc68
   1400084e5:	xor    edx,edx
   1400084e7:	mov    rcx,rax
   1400084ea:	call   QWORD PTR [rip+0x3d10]        # 0x14000c200
   1400084f0:	lea    rcx,[rsp+0x100]
   1400084f8:	movapd xmm11,xmm0
   1400084fd:	call   QWORD PTR [rip+0x3edd]        # 0x14000c3e0
   140008503:	movsd  xmm5,QWORD PTR [rip+0x6f0d]        # 0x14000f418
   14000850b:	xorpd  xmm1,xmm1
   14000850f:	comisd xmm6,xmm5
   140008513:	movsd  QWORD PTR [rsp+0x100],xmm5
   14000851c:	movsd  QWORD PTR [rsp+0x48],xmm1
   140008522:	jbe    0x14000852e
   140008524:	lea    rax,[rsp+0x100]
   14000852c:	jmp    0x140008536
   14000852e:	lea    rax,[rsp+0x108]
   140008536:	movsd  xmm0,QWORD PTR [rax]
   14000853a:	comisd xmm0,xmm1
   14000853e:	ja     0x140008545
   140008540:	lea    rax,[rsp+0x48]
   140008545:	comisd xmm7,xmm5
   140008549:	movsd  xmm9,QWORD PTR [rax]
   14000854e:	movsd  QWORD PTR [rsp+0x100],xmm5
   140008557:	divsd  xmm9,xmm5
   14000855c:	movsd  QWORD PTR [rsp+0x108],xmm1
   140008565:	jbe    0x140008571
   140008567:	lea    rax,[rsp+0x100]
   14000856f:	jmp    0x140008576
   140008571:	lea    rax,[rsp+0x58]
   140008576:	movsd  xmm0,QWORD PTR [rax]
   14000857a:	comisd xmm0,xmm1
   14000857e:	ja     0x140008588
   140008580:	lea    rax,[rsp+0x108]
   140008588:	movsd  xmm7,QWORD PTR [rax]
   14000858c:	or     rcx,0xffffffffffffffff
   140008590:	xor    eax,eax
   140008592:	lea    rdi,[rip+0x6e67]        # 0x14000f400
   140008599:	repnz scas al,BYTE PTR es:[rdi]
   14000859b:	divsd  xmm7,xmm5
   14000859f:	not    rcx
   1400085a2:	lea    rdx,[rcx-0x1]
   1400085a6:	lea    rcx,[rip+0x6e53]        # 0x14000f400
   1400085ad:	call   QWORD PTR [rip+0x3c75]        # 0x14000c228
   1400085b3:	lea    rcx,[rsp+0xf8]
   1400085bb:	mov    dl,0x20
   1400085bd:	mov    QWORD PTR [rsp+0x48],rax
   1400085c2:	call   QWORD PTR [rip+0x3d08]        # 0x14000c2d0
   1400085c8:	lea    rcx,[rsp+0x100]
   1400085d0:	mov    dl,0x20
   1400085d2:	mov    rsi,rax
   1400085d5:	call   QWORD PTR [rip+0x3cf5]        # 0x14000c2d0
   1400085db:	lea    rcx,[rsp+0x108]
   1400085e3:	mov    dl,0x20
   1400085e5:	mov    rbx,rax
   1400085e8:	call   QWORD PTR [rip+0x3ce2]        # 0x14000c2d0
   1400085ee:	lea    rcx,[rsp+0x40]
   1400085f3:	mov    dl,0x20
   1400085f5:	mov    rdi,rax
   1400085f8:	call   QWORD PTR [rip+0x3cd2]        # 0x14000c2d0
   1400085fe:	lea    rdx,[rsp+0x68]
   140008603:	xor    r9d,r9d
   140008606:	movsd  xmm6,QWORD PTR [rip+0x4f62]        # 0x14000d570
   14000860e:	mulsd  xmm11,xmm7
   140008613:	movapd xmm2,xmm9
   140008618:	mulsd  xmm10,xmm9
   14000861d:	movzx  ecx,WORD PTR [rax]
   140008620:	movapd xmm8,xmm6
   140008625:	subsd  xmm6,xmm7
   140008629:	mov    WORD PTR [rsp+0x30],cx
   14000862e:	lea    rcx,[rsp+0x48]
   140008633:	mov    DWORD PTR [rsp+0x28],0x3
   14000863b:	subsd  xmm8,xmm11
   140008640:	mov    BYTE PTR [rsp+0x20],0x66
   140008645:	call   QWORD PTR [rip+0x3b75]        # 0x14000c1c0
   14000864b:	lea    rdx,[rsp+0x60]
   140008650:	movapd xmm2,xmm10
   140008655:	mov    rcx,rax
   140008658:	movzx  eax,WORD PTR [rdi]
   14000865b:	xor    r9d,r9d
   14000865e:	mov    WORD PTR [rsp+0x30],ax
   140008663:	mov    DWORD PTR [rsp+0x28],0x3
   14000866b:	mov    BYTE PTR [rsp+0x20],0x66
   140008670:	call   QWORD PTR [rip+0x3b4a]        # 0x14000c1c0
   140008676:	lea    rdx,[rsp+0x58]
   14000867b:	xor    r9d,r9d
   14000867e:	movapd xmm2,xmm6
   140008682:	mov    rcx,rax
   140008685:	movzx  eax,WORD PTR [rbx]
   140008688:	mov    WORD PTR [rsp+0x30],ax
   14000868d:	mov    DWORD PTR [rsp+0x28],0x3
   140008695:	mov    BYTE PTR [rsp+0x20],0x66
   14000869a:	call   QWORD PTR [rip+0x3b20]        # 0x14000c1c0
   1400086a0:	lea    rdx,[rsp+0x50]
   1400086a5:	xor    r9d,r9d
   1400086a8:	movapd xmm2,xmm8
   1400086ad:	mov    rcx,rax
   1400086b0:	movzx  eax,WORD PTR [rsi]
   1400086b3:	mov    WORD PTR [rsp+0x30],ax
   1400086b8:	mov    DWORD PTR [rsp+0x28],0x3
   1400086c0:	mov    BYTE PTR [rsp+0x20],0x66
   1400086c5:	call   QWORD PTR [rip+0x3af5]        # 0x14000c1c0
   1400086cb:	lea    rcx,[rsp+0x58]
   1400086d0:	call   QWORD PTR [rip+0x3d0a]        # 0x14000c3e0
   1400086d6:	lea    rcx,[rsp+0x60]
   1400086db:	call   QWORD PTR [rip+0x3cff]        # 0x14000c3e0
   1400086e1:	lea    rcx,[rsp+0x68]
   1400086e6:	call   QWORD PTR [rip+0x3cf4]        # 0x14000c3e0
   1400086ec:	lea    rcx,[rsp+0x48]
   1400086f1:	call   QWORD PTR [rip+0x3ce9]        # 0x14000c3e0
   1400086f7:	mov    rcx,QWORD PTR [rbp+0x88]
   1400086fe:	lea    rdx,[rsp+0x50]
   140008703:	call   QWORD PTR [rip+0x4227]        # 0x14000c930
   140008709:	lea    rcx,[rsp+0x50]
   14000870e:	call   QWORD PTR [rip+0x3ccc]        # 0x14000c3e0
   140008714:	movaps xmm11,XMMWORD PTR [rsp+0x70]
   14000871a:	movaps xmm10,XMMWORD PTR [rsp+0x80]
   140008723:	movaps xmm9,XMMWORD PTR [rsp+0x90]
   14000872c:	mov    rdi,QWORD PTR [rsp+0xd0]
   140008734:	mov    rsi,QWORD PTR [rsp+0xd8]
   14000873c:	mov    rbx,QWORD PTR [rsp+0xf0]
   140008744:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
   14000874d:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
   140008755:	movaps xmm6,XMMWORD PTR [rsp+0xc0]
   14000875d:	add    rsp,0xe0
   140008764:	pop    rbp
   140008765:	repz ret 
   140008767:	int3   
   140008768:	int3   
   140008769:	int3   
   14000876a:	int3   
   14000876b:	int3   
   14000876c:	int3   
   14000876d:	int3   
   14000876e:	int3   
   14000876f:	int3   
   140008770:	mov    QWORD PTR [rsp+0x10],rbx
   140008775:	mov    QWORD PTR [rsp+0x18],rsi
   14000877a:	push   rdi
   14000877b:	push   r12
   14000877d:	push   r13
   14000877f:	push   r14
   140008781:	push   r15
   140008783:	sub    rsp,0x40
   140008787:	mov    rsi,rdx
   14000878a:	mov    rdi,rcx
   14000878d:	lea    rdx,[rsp+0x70]
   140008792:	mov    rcx,rsi
   140008795:	call   QWORD PTR [rip+0x3b9d]        # 0x14000c338
   14000879b:	lea    rcx,[rsp+0x70]
   1400087a0:	mov    r8,QWORD PTR [rax]
   1400087a3:	cmp    DWORD PTR [r8+0x4],0x0
   1400087a8:	sete   bl
   1400087ab:	call   QWORD PTR [rip+0x3c2f]        # 0x14000c3e0
   1400087b1:	test   bl,bl
   1400087b3:	je     0x1400087e4
   1400087b5:	lea    rdx,[rip+0x6274]        # 0x14000ea30
   1400087bc:	lea    rcx,[rsp+0x70]
   1400087c1:	mov    r8d,0xc
   1400087c7:	call   QWORD PTR [rip+0x3b73]        # 0x14000c340
   1400087cd:	mov    rcx,rsi
   1400087d0:	mov    rdx,rax
   1400087d3:	call   QWORD PTR [rip+0x3b6f]        # 0x14000c348
   1400087d9:	lea    rcx,[rsp+0x70]
   1400087de:	call   QWORD PTR [rip+0x3bfc]        # 0x14000c3e0
   1400087e4:	lea    rdx,[rsp+0x70]
   1400087e9:	mov    rcx,rsi
   1400087ec:	mov    DWORD PTR [rsp+0x70],0x190
   1400087f4:	mov    DWORD PTR [rsp+0x74],0xa4
   1400087fc:	call   QWORD PTR [rip+0x4be6]        # 0x14000d3e8
   140008802:	mov    ecx,0x30
   140008807:	call   0x14000b106
   14000880c:	mov    rbx,rax
   14000880f:	test   rax,rax
   140008812:	je     0x140008837
   140008814:	mov    rdx,rsi
   140008817:	mov    rcx,rax
   14000881a:	call   QWORD PTR [rip+0x4488]        # 0x14000cca8
   140008820:	lea    r11,[rip+0x6fe1]        # 0x14000f808
   140008827:	lea    rax,[rip+0x6f9a]        # 0x14000f7c8
   14000882e:	mov    QWORD PTR [rbx],r11
   140008831:	mov    QWORD PTR [rbx+0x10],rax
   140008835:	jmp    0x140008839
   140008837:	xor    ebx,ebx
   140008839:	lea    rdx,[rip+0x6f70]        # 0x14000f7b0
   140008840:	lea    rcx,[rsp+0x70]
   140008845:	mov    r8d,0x9
   14000884b:	mov    QWORD PTR [rdi],rbx
   14000884e:	call   QWORD PTR [rip+0x3aec]        # 0x14000c340
   140008854:	mov    rcx,QWORD PTR [rdi]
   140008857:	mov    rdx,rax
   14000885a:	call   QWORD PTR [rip+0x3ae8]        # 0x14000c348
   140008860:	lea    rcx,[rsp+0x70]
   140008865:	call   QWORD PTR [rip+0x3b75]        # 0x14000c3e0
   14000886b:	mov    rcx,QWORD PTR [rdi]
   14000886e:	lea    rdx,[rsp+0x30]
   140008873:	mov    DWORD PTR [rsp+0x30],0x28
   14000887b:	mov    DWORD PTR [rsp+0x34],0x82
   140008883:	mov    DWORD PTR [rsp+0x38],0x17c
   14000888b:	mov    DWORD PTR [rsp+0x3c],0xa1
   140008893:	call   QWORD PTR [rip+0x4407]        # 0x14000cca0
   140008899:	mov    rcx,QWORD PTR [rdi]
   14000889c:	mov    edx,0x1
   1400088a1:	call   QWORD PTR [rip+0x43f1]        # 0x14000cc98
   1400088a7:	mov    rcx,QWORD PTR [rdi]
   1400088aa:	mov    edx,0x400400
   1400088af:	call   QWORD PTR [rip+0x43db]        # 0x14000cc90
   1400088b5:	mov    ecx,0x30
   1400088ba:	call   0x14000b106
   1400088bf:	mov    rbx,rax
   1400088c2:	test   rax,rax
   1400088c5:	je     0x1400088ed
   1400088c7:	xor    r8d,r8d
   1400088ca:	mov    rdx,rsi
   1400088cd:	mov    rcx,rax
   1400088d0:	call   QWORD PTR [rip+0x4b62]        # 0x14000d438
   1400088d6:	lea    r11,[rip+0x532b]        # 0x14000dc08
   1400088dd:	lea    rax,[rip+0x52e4]        # 0x14000dbc8
   1400088e4:	mov    QWORD PTR [rbx],r11
   1400088e7:	mov    QWORD PTR [rbx+0x10],rax
   1400088eb:	jmp    0x1400088ef
   1400088ed:	xor    ebx,ebx
   1400088ef:	lea    rdx,[rip+0x6ea2]        # 0x14000f798
   1400088f6:	lea    rcx,[rsp+0x70]
   1400088fb:	mov    r8d,0x10
   140008901:	mov    QWORD PTR [rdi+0x8],rbx
   140008905:	call   QWORD PTR [rip+0x3a35]        # 0x14000c340
   14000890b:	mov    rcx,QWORD PTR [rdi+0x8]
   14000890f:	mov    rdx,rax
   140008912:	call   QWORD PTR [rip+0x3a30]        # 0x14000c348
   140008918:	lea    rcx,[rsp+0x70]
   14000891d:	call   QWORD PTR [rip+0x3abd]        # 0x14000c3e0
   140008923:	mov    rcx,QWORD PTR [rdi+0x8]
   140008927:	lea    rdx,[rsp+0x30]
   14000892c:	mov    DWORD PTR [rsp+0x30],0x14
   140008934:	mov    DWORD PTR [rsp+0x34],0xa
   14000893c:	mov    DWORD PTR [rsp+0x38],0x17c
   140008944:	mov    DWORD PTR [rsp+0x3c],0x6e
   14000894c:	call   QWORD PTR [rip+0x434e]        # 0x14000cca0
   140008952:	mov    ecx,0x20
   140008957:	call   0x14000b106
   14000895c:	mov    rbx,rax
   14000895f:	test   rax,rax
   140008962:	je     0x140008988
   140008964:	mov    rdx,QWORD PTR [rdi+0x8]
   140008968:	mov    rcx,rax
   14000896b:	call   QWORD PTR [rip+0x4317]        # 0x14000cc88
   140008971:	lea    r11,[rip+0x6da0]        # 0x14000f718
   140008978:	lea    rax,[rip+0x6d09]        # 0x14000f688
   14000897f:	mov    QWORD PTR [rbx],r11
   140008982:	mov    QWORD PTR [rbx+0x10],rax
   140008986:	jmp    0x14000898a
   140008988:	xor    ebx,ebx
   14000898a:	lea    rdx,[rip+0x6cd7]        # 0x14000f668
   140008991:	lea    rcx,[rsp+0x70]
   140008996:	mov    r8d,0xa
   14000899c:	mov    QWORD PTR [rdi+0x10],rbx
   1400089a0:	call   QWORD PTR [rip+0x399a]        # 0x14000c340
   1400089a6:	mov    rcx,QWORD PTR [rdi+0x10]
   1400089aa:	mov    rdx,rax
   1400089ad:	call   QWORD PTR [rip+0x3995]        # 0x14000c348
   1400089b3:	lea    rcx,[rsp+0x70]
   1400089b8:	call   QWORD PTR [rip+0x3a22]        # 0x14000c3e0
   1400089be:	mov    rcx,QWORD PTR [rdi+0x10]
   1400089c2:	mov    edx,0x82
   1400089c7:	call   QWORD PTR [rip+0x42b3]        # 0x14000cc80
   1400089cd:	mov    rcx,QWORD PTR [rdi+0x10]
   1400089d1:	xor    r9d,r9d
   1400089d4:	xor    r8d,r8d
   1400089d7:	xor    edx,edx
   1400089d9:	mov    DWORD PTR [rsp+0x20],0x0
   1400089e1:	call   QWORD PTR [rip+0x4a69]        # 0x14000d450
   1400089e7:	mov    ecx,0x30
   1400089ec:	call   0x14000b106
   1400089f1:	lea    r14,[rip+0x53d0]        # 0x14000ddc8
   1400089f8:	lea    r15,[rip+0x5389]        # 0x14000dd88
   1400089ff:	mov    rbx,rax
   140008a02:	test   rax,rax
   140008a05:	je     0x140008a20
   140008a07:	mov    rdx,QWORD PTR [rdi+0x8]
   140008a0b:	xor    r8d,r8d
   140008a0e:	mov    rcx,rax
   140008a11:	call   QWORD PTR [rip+0x4a09]        # 0x14000d420
   140008a17:	mov    QWORD PTR [rbx],r14
   140008a1a:	mov    QWORD PTR [rbx+0x10],r15
   140008a1e:	jmp    0x140008a22
   140008a20:	xor    ebx,ebx
   140008a22:	lea    rdx,[rip+0x5347]        # 0x14000dd70
   140008a29:	lea    rcx,[rsp+0x70]
   140008a2e:	mov    r8d,0x5
   140008a34:	mov    QWORD PTR [rdi+0x18],rbx
   140008a38:	call   QWORD PTR [rip+0x3902]        # 0x14000c340
   140008a3e:	mov    rcx,QWORD PTR [rdi+0x18]
   140008a42:	mov    rdx,rax
   140008a45:	call   QWORD PTR [rip+0x38fd]        # 0x14000c348
   140008a4b:	lea    rcx,[rsp+0x70]
   140008a50:	call   QWORD PTR [rip+0x398a]        # 0x14000c3e0
   140008a56:	mov    r9,QWORD PTR [rdi+0x18]
   140008a5a:	mov    rcx,QWORD PTR [rdi+0x10]
   140008a5e:	xor    r8d,r8d
   140008a61:	xor    edx,edx
   140008a63:	call   QWORD PTR [rip+0x420f]        # 0x14000cc78
   140008a69:	mov    ecx,0x30
   140008a6e:	call   0x14000b106
   140008a73:	mov    rbx,rax
   140008a76:	test   rax,rax
   140008a79:	je     0x140008a94
   140008a7b:	mov    rdx,QWORD PTR [rdi+0x8]
   140008a7f:	xor    r8d,r8d
   140008a82:	mov    rcx,rax
   140008a85:	call   QWORD PTR [rip+0x4995]        # 0x14000d420
   140008a8b:	mov    QWORD PTR [rbx],r14
   140008a8e:	mov    QWORD PTR [rbx+0x10],r15
   140008a92:	jmp    0x140008a96
   140008a94:	xor    ebx,ebx
   140008a96:	lea    rdx,[rip+0x693b]        # 0x14000f3d8
   140008a9d:	lea    rcx,[rsp+0x70]
   140008aa2:	mov    r8d,0x7
   140008aa8:	mov    QWORD PTR [rdi+0x20],rbx
   140008aac:	call   QWORD PTR [rip+0x388e]        # 0x14000c340
   140008ab2:	mov    rcx,QWORD PTR [rdi+0x20]
   140008ab6:	mov    rdx,rax
   140008ab9:	call   QWORD PTR [rip+0x3889]        # 0x14000c348
   140008abf:	lea    rcx,[rsp+0x70]
   140008ac4:	call   QWORD PTR [rip+0x3916]        # 0x14000c3e0
   140008aca:	mov    r9,QWORD PTR [rdi+0x20]
   140008ace:	mov    rcx,QWORD PTR [rdi+0x10]
   140008ad2:	xor    r8d,r8d
   140008ad5:	lea    edx,[r8+0x2]
   140008ad9:	call   QWORD PTR [rip+0x4199]        # 0x14000cc78
   140008adf:	mov    ecx,0x30
   140008ae4:	call   0x14000b106
   140008ae9:	mov    rbx,rax
   140008aec:	test   rax,rax
   140008aef:	je     0x140008b0a
   140008af1:	mov    rdx,QWORD PTR [rdi+0x8]
   140008af5:	xor    r8d,r8d
   140008af8:	mov    rcx,rax
   140008afb:	call   QWORD PTR [rip+0x491f]        # 0x14000d420
   140008b01:	mov    QWORD PTR [rbx],r14
   140008b04:	mov    QWORD PTR [rbx+0x10],r15
   140008b08:	jmp    0x140008b0c
   140008b0a:	xor    ebx,ebx
   140008b0c:	lea    rdx,[rip+0x6b4d]        # 0x14000f660
   140008b13:	lea    rcx,[rsp+0x70]
   140008b18:	mov    r8d,0x7
   140008b1e:	mov    QWORD PTR [rdi+0x28],rbx
   140008b22:	call   QWORD PTR [rip+0x3818]        # 0x14000c340
   140008b28:	mov    rcx,QWORD PTR [rdi+0x28]
   140008b2c:	mov    rdx,rax
   140008b2f:	call   QWORD PTR [rip+0x3813]        # 0x14000c348
   140008b35:	lea    rcx,[rsp+0x70]
   140008b3a:	call   QWORD PTR [rip+0x38a0]        # 0x14000c3e0
   140008b40:	mov    r9,QWORD PTR [rdi+0x28]
   140008b44:	mov    rcx,QWORD PTR [rdi+0x10]
   140008b48:	xor    r8d,r8d
   140008b4b:	lea    edx,[r8+0x3]
   140008b4f:	call   QWORD PTR [rip+0x4123]        # 0x14000cc78
   140008b55:	mov    ecx,0x30
   140008b5a:	call   0x14000b106
   140008b5f:	lea    r12,[rip+0x6992]        # 0x14000f4f8
   140008b66:	lea    r13,[rip+0x694b]        # 0x14000f4b8
   140008b6d:	mov    rbx,rax
   140008b70:	test   rax,rax
   140008b73:	je     0x140008b8b
   140008b75:	mov    rdx,QWORD PTR [rdi+0x8]
   140008b79:	mov    rcx,rax
   140008b7c:	call   QWORD PTR [rip+0x40ee]        # 0x14000cc70
   140008b82:	mov    QWORD PTR [rbx],r12
   140008b85:	mov    QWORD PTR [rbx+0x10],r13
   140008b89:	jmp    0x140008b8d
   140008b8b:	xor    ebx,ebx
   140008b8d:	lea    rdx,[rip+0x6904]        # 0x14000f498
   140008b94:	lea    rcx,[rsp+0x70]
   140008b99:	mov    r8d,0xf
   140008b9f:	mov    QWORD PTR [rdi+0x30],rbx
   140008ba3:	call   QWORD PTR [rip+0x3797]        # 0x14000c340
   140008ba9:	mov    rcx,QWORD PTR [rdi+0x30]
   140008bad:	mov    rdx,rax
   140008bb0:	call   QWORD PTR [rip+0x3792]        # 0x14000c348
   140008bb6:	lea    rcx,[rsp+0x70]
   140008bbb:	call   QWORD PTR [rip+0x381f]        # 0x14000c3e0
   140008bc1:	mov    r9,QWORD PTR [rdi+0x30]
   140008bc5:	mov    rcx,QWORD PTR [rdi+0x10]
   140008bc9:	xor    edx,edx
   140008bcb:	lea    r8d,[rdx+0x1]
   140008bcf:	call   QWORD PTR [rip+0x40a3]        # 0x14000cc78
   140008bd5:	mov    ecx,0x30
   140008bda:	call   0x14000b106
   140008bdf:	mov    rbx,rax
   140008be2:	test   rax,rax
   140008be5:	je     0x140008bfd
   140008be7:	mov    rdx,QWORD PTR [rdi+0x8]
   140008beb:	mov    rcx,rax
   140008bee:	call   QWORD PTR [rip+0x407c]        # 0x14000cc70
   140008bf4:	mov    QWORD PTR [rbx],r12
   140008bf7:	mov    QWORD PTR [rbx+0x10],r13
   140008bfb:	jmp    0x140008bff
   140008bfd:	xor    ebx,ebx
   140008bff:	lea    rdx,[rip+0x6882]        # 0x14000f488
   140008c06:	lea    rcx,[rsp+0x70]
   140008c0b:	mov    r8d,0xb
   140008c11:	mov    QWORD PTR [rdi+0x38],rbx
   140008c15:	call   QWORD PTR [rip+0x3725]        # 0x14000c340
   140008c1b:	mov    rcx,QWORD PTR [rdi+0x38]
   140008c1f:	mov    rdx,rax
   140008c22:	call   QWORD PTR [rip+0x3720]        # 0x14000c348
   140008c28:	lea    rcx,[rsp+0x70]
   140008c2d:	call   QWORD PTR [rip+0x37ad]        # 0x14000c3e0
   140008c33:	mov    r9,QWORD PTR [rdi+0x38]
   140008c37:	mov    rcx,QWORD PTR [rdi+0x10]
   140008c3b:	mov    edx,0x1
   140008c40:	mov    r8d,edx
   140008c43:	call   QWORD PTR [rip+0x402f]        # 0x14000cc78
   140008c49:	mov    ecx,0x30
   140008c4e:	call   0x14000b106
   140008c53:	mov    rbx,rax
   140008c56:	test   rax,rax
   140008c59:	je     0x140008c71
   140008c5b:	mov    rdx,QWORD PTR [rdi+0x8]
   140008c5f:	mov    rcx,rax
   140008c62:	call   QWORD PTR [rip+0x4008]        # 0x14000cc70
   140008c68:	mov    QWORD PTR [rbx],r12
   140008c6b:	mov    QWORD PTR [rbx+0x10],r13
   140008c6f:	jmp    0x140008c73
   140008c71:	xor    ebx,ebx
   140008c73:	lea    rdx,[rip+0x67f6]        # 0x14000f470
   140008c7a:	lea    rcx,[rsp+0x70]
   140008c7f:	mov    r8d,0x10
   140008c85:	mov    QWORD PTR [rdi+0x40],rbx
   140008c89:	call   QWORD PTR [rip+0x36b1]        # 0x14000c340
   140008c8f:	mov    rcx,QWORD PTR [rdi+0x40]
   140008c93:	mov    rdx,rax
   140008c96:	call   QWORD PTR [rip+0x36ac]        # 0x14000c348
   140008c9c:	lea    rcx,[rsp+0x70]
   140008ca1:	call   QWORD PTR [rip+0x3739]        # 0x14000c3e0
   140008ca7:	mov    r9,QWORD PTR [rdi+0x40]
   140008cab:	mov    rcx,QWORD PTR [rdi+0x10]
   140008caf:	mov    edx,0x2
   140008cb4:	lea    r8d,[rdx-0x1]
   140008cb8:	call   QWORD PTR [rip+0x3fba]        # 0x14000cc78
   140008cbe:	mov    ecx,0x30
   140008cc3:	call   0x14000b106
   140008cc8:	mov    rbx,rax
   140008ccb:	test   rax,rax
   140008cce:	je     0x140008ce6
   140008cd0:	mov    rdx,QWORD PTR [rdi+0x8]
   140008cd4:	mov    rcx,rax
   140008cd7:	call   QWORD PTR [rip+0x3f93]        # 0x14000cc70
   140008cdd:	mov    QWORD PTR [rbx],r12
   140008ce0:	mov    QWORD PTR [rbx+0x10],r13
   140008ce4:	jmp    0x140008ce8
   140008ce6:	xor    ebx,ebx
   140008ce8:	lea    rdx,[rip+0x6771]        # 0x14000f460
   140008cef:	lea    rcx,[rsp+0x70]
   140008cf4:	mov    r8d,0xc
   140008cfa:	mov    QWORD PTR [rdi+0x48],rbx
   140008cfe:	call   QWORD PTR [rip+0x363c]        # 0x14000c340
   140008d04:	mov    rcx,QWORD PTR [rdi+0x48]
   140008d08:	mov    rdx,rax
   140008d0b:	call   QWORD PTR [rip+0x3637]        # 0x14000c348
   140008d11:	lea    rcx,[rsp+0x70]
   140008d16:	call   QWORD PTR [rip+0x36c4]        # 0x14000c3e0
   140008d1c:	mov    r9,QWORD PTR [rdi+0x48]
   140008d20:	mov    rcx,QWORD PTR [rdi+0x10]
   140008d24:	mov    edx,0x3
   140008d29:	lea    r8d,[rdx-0x2]
   140008d2d:	call   QWORD PTR [rip+0x3f45]        # 0x14000cc78
   140008d33:	mov    ecx,0x30
   140008d38:	call   0x14000b106
   140008d3d:	mov    rbx,rax
   140008d40:	test   rax,rax
   140008d43:	je     0x140008d5e
   140008d45:	mov    rdx,QWORD PTR [rdi+0x8]
   140008d49:	xor    r8d,r8d
   140008d4c:	mov    rcx,rax
   140008d4f:	call   QWORD PTR [rip+0x46cb]        # 0x14000d420
   140008d55:	mov    QWORD PTR [rbx],r14
   140008d58:	mov    QWORD PTR [rbx+0x10],r15
   140008d5c:	jmp    0x140008d60
   140008d5e:	xor    ebx,ebx
   140008d60:	lea    rdx,[rip+0x6269]        # 0x14000efd0
   140008d67:	lea    rcx,[rsp+0x70]
   140008d6c:	mov    r8d,0x7
   140008d72:	mov    QWORD PTR [rdi+0x50],rbx
   140008d76:	call   QWORD PTR [rip+0x35c4]        # 0x14000c340
   140008d7c:	mov    rcx,QWORD PTR [rdi+0x50]
   140008d80:	mov    rdx,rax
   140008d83:	call   QWORD PTR [rip+0x35bf]        # 0x14000c348
   140008d89:	lea    rcx,[rsp+0x70]
   140008d8e:	call   QWORD PTR [rip+0x364c]        # 0x14000c3e0
   140008d94:	mov    r9,QWORD PTR [rdi+0x50]
   140008d98:	mov    rcx,QWORD PTR [rdi+0x10]
   140008d9c:	xor    r8d,r8d
   140008d9f:	lea    edx,[r8+0x1]
   140008da3:	call   QWORD PTR [rip+0x3ecf]        # 0x14000cc78
   140008da9:	mov    rdx,rsi
   140008dac:	mov    rcx,rdi
   140008daf:	call   0x140007600
   140008db4:	mov    rdx,QWORD PTR [rdi]
   140008db7:	lea    rax,[rip+0x6692]        # 0x14000f450
   140008dbe:	lea    r8,[rip+0x667b]        # 0x14000f440
   140008dc5:	lea    rcx,[rsp+0x70]
   140008dca:	mov    r9,rsi
   140008dcd:	mov    DWORD PTR [rsp+0x28],0x0
   140008dd5:	mov    QWORD PTR [rsp+0x20],rax
   140008dda:	call   QWORD PTR [rip+0x33d0]        # 0x14000c1b0
   140008de0:	lea    rcx,[rsp+0x70]
   140008de5:	call   QWORD PTR [rip+0x33cd]        # 0x14000c1b8
   140008deb:	mov    rdx,QWORD PTR [rdi]
   140008dee:	lea    rax,[rip+0x663b]        # 0x14000f430
   140008df5:	lea    r8,[rip+0x6624]        # 0x14000f420
   140008dfc:	lea    rcx,[rsp+0x70]
   140008e01:	mov    r9,rsi
   140008e04:	mov    DWORD PTR [rsp+0x28],0x0
   140008e0c:	mov    QWORD PTR [rsp+0x20],rax
   140008e11:	call   QWORD PTR [rip+0x3399]        # 0x14000c1b0
   140008e17:	lea    rcx,[rsp+0x70]
   140008e1c:	call   QWORD PTR [rip+0x3396]        # 0x14000c1b8
   140008e22:	mov    rcx,rsi
   140008e25:	mov    rbx,QWORD PTR [rsp+0x78]
   140008e2a:	mov    rsi,QWORD PTR [rsp+0x80]
   140008e32:	add    rsp,0x40
   140008e36:	pop    r15
   140008e38:	pop    r14
   140008e3a:	pop    r13
   140008e3c:	pop    r12
   140008e3e:	pop    rdi
   140008e3f:	rex.W jmp QWORD PTR [rip+0x350a]        # 0x14000c350
   140008e46:	int3   
   140008e47:	int3   
   140008e48:	int3   
   140008e49:	int3   
   140008e4a:	int3   
   140008e4b:	int3   
   140008e4c:	int3   
   140008e4d:	int3   
   140008e4e:	int3   
   140008e4f:	int3   
   140008e50:	mov    QWORD PTR [rsp+0x8],rbx
   140008e55:	push   rdi
   140008e56:	sub    rsp,0x20
   140008e5a:	mov    ebx,edx
   140008e5c:	mov    rdi,rcx
   140008e5f:	call   QWORD PTR [rip+0x3f9b]        # 0x14000ce00
   140008e65:	test   bl,0x1
   140008e68:	je     0x140008e72
   140008e6a:	mov    rcx,rdi
   140008e6d:	call   0x14000b100
   140008e72:	mov    rax,rdi
   140008e75:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e7a:	add    rsp,0x20
   140008e7e:	pop    rdi
   140008e7f:	ret    
   140008e80:	mov    QWORD PTR [rsp+0x8],rbx
   140008e85:	push   rdi
   140008e86:	sub    rsp,0x20
   140008e8a:	mov    ebx,edx
   140008e8c:	mov    rdi,rcx
   140008e8f:	call   QWORD PTR [rip+0x3f73]        # 0x14000ce08
   140008e95:	test   bl,0x1
   140008e98:	je     0x140008ea2
   140008e9a:	mov    rcx,rdi
   140008e9d:	call   0x14000b100
   140008ea2:	mov    rax,rdi
   140008ea5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eaa:	add    rsp,0x20
   140008eae:	pop    rdi
   140008eaf:	ret    
   140008eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140008eb5:	push   rdi
   140008eb6:	sub    rsp,0x20
   140008eba:	mov    ebx,edx
   140008ebc:	mov    rdi,rcx
   140008ebf:	call   QWORD PTR [rip+0x3f4b]        # 0x14000ce10
   140008ec5:	test   bl,0x1
   140008ec8:	je     0x140008ed2
   140008eca:	mov    rcx,rdi
   140008ecd:	call   0x14000b100
   140008ed2:	mov    rax,rdi
   140008ed5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eda:	add    rsp,0x20
   140008ede:	pop    rdi
   140008edf:	ret    
   140008ee0:	sub    rcx,0x10
   140008ee4:	jmp    0x140008e50
   140008ee9:	int3   
   140008eea:	int3   
   140008eeb:	int3   
   140008eec:	int3   
   140008eed:	int3   
   140008eee:	int3   
   140008eef:	int3   
   140008ef0:	sub    rcx,0x10
   140008ef4:	jmp    0x140008eb0
   140008ef9:	int3   
   140008efa:	int3   
   140008efb:	int3   
   140008efc:	int3   
   140008efd:	int3   
   140008efe:	int3   
   140008eff:	int3   
   140008f00:	sub    rcx,0x10
   140008f04:	jmp    0x140008e80
   140008f09:	int3   
   140008f0a:	int3   
   140008f0b:	int3   
   140008f0c:	int3   
   140008f0d:	int3   
   140008f0e:	int3   
   140008f0f:	int3   
   140008f10:	mov    QWORD PTR [rsp+0x10],rbx
   140008f15:	push   rbp
   140008f16:	push   rsi
   140008f17:	push   rdi
   140008f18:	push   r12
   140008f1a:	push   r13
   140008f1c:	push   r14
   140008f1e:	push   r15
   140008f20:	sub    rsp,0x100
   140008f27:	xor    ebp,ebp
   140008f29:	xor    r8d,r8d
   140008f2c:	mov    r14,rcx
   140008f2f:	mov    DWORD PTR [rsp+0x140],ebp
   140008f36:	call   QWORD PTR [rip+0x3f3c]        # 0x14000ce78
   140008f3c:	lea    rdx,[rip+0x6de5]        # 0x14000fd28
   140008f43:	lea    rax,[rip+0x6d9e]        # 0x14000fce8
   140008f4a:	mov    QWORD PTR [r14],rdx
   140008f4d:	lea    r13,[r14+0x30]
   140008f51:	xor    edx,edx
   140008f53:	mov    rcx,r13
   140008f56:	mov    QWORD PTR [r14+0x10],rax
   140008f5a:	call   QWORD PTR [rip+0x3620]        # 0x14000c580
   140008f60:	xor    eax,eax
   140008f62:	or     r12,0xffffffffffffffff
   140008f66:	lea    rdi,[rip+0x6d5b]        # 0x14000fcc8
   140008f6d:	mov    rcx,r12
   140008f70:	repnz scas al,BYTE PTR es:[rdi]
   140008f72:	not    rcx
   140008f75:	lea    rdx,[rcx-0x1]
   140008f79:	lea    rcx,[rip+0x6d48]        # 0x14000fcc8
   140008f80:	call   QWORD PTR [rip+0x32a2]        # 0x14000c228
   140008f86:	lea    rdx,[rsp+0x140]
   140008f8e:	mov    rcx,r14
   140008f91:	mov    QWORD PTR [rsp+0x140],rax
   140008f99:	call   QWORD PTR [rip+0x4501]        # 0x14000d4a0
   140008f9f:	lea    rcx,[rsp+0x140]
   140008fa7:	call   QWORD PTR [rip+0x3433]        # 0x14000c3e0
   140008fad:	mov    ecx,0xb0
   140008fb2:	call   0x14000b106
   140008fb7:	test   rax,rax
   140008fba:	je     0x140008fcc
   140008fbc:	mov    rdx,r14
   140008fbf:	mov    rcx,rax
   140008fc2:	call   0x140005ed0
   140008fc7:	mov    r15,rax
   140008fca:	jmp    0x140008fcf
   140008fcc:	xor    r15d,r15d
   140008fcf:	mov    ecx,0x30
   140008fd4:	mov    QWORD PTR [rsp+0x50],r15
   140008fd9:	call   0x14000b106
   140008fde:	lea    rbx,[rip+0x4c23]        # 0x14000dc08
   140008fe5:	lea    rsi,[rip+0x4bdc]        # 0x14000dbc8
   140008fec:	mov    rdi,rax
   140008fef:	test   rax,rax
   140008ff2:	je     0x14000900c
   140008ff4:	xor    r8d,r8d
   140008ff7:	mov    rdx,r14
   140008ffa:	mov    rcx,rax
   140008ffd:	call   QWORD PTR [rip+0x4435]        # 0x14000d438
   140009003:	mov    QWORD PTR [rdi],rbx
   140009006:	mov    QWORD PTR [rdi+0x10],rsi
   14000900a:	jmp    0x14000900e
   14000900c:	xor    edi,edi
   14000900e:	mov    rdx,rdi
   140009011:	mov    rcx,r14
   140009014:	call   QWORD PTR [rip+0x3e56]        # 0x14000ce70
   14000901a:	mov    ecx,0x20
   14000901f:	call   0x14000b106
   140009024:	mov    rbx,rax
   140009027:	test   rax,rax
   14000902a:	je     0x14000904f
   14000902c:	mov    rdx,rdi
   14000902f:	mov    rcx,rax
   140009032:	call   QWORD PTR [rip+0x4408]        # 0x14000d440
   140009038:	lea    r11,[rip+0x4af9]        # 0x14000db38
   14000903f:	lea    rax,[rip+0x4a62]        # 0x14000daa8
   140009046:	mov    QWORD PTR [rbx],r11
   140009049:	mov    QWORD PTR [rbx+0x10],rax
   14000904d:	jmp    0x140009051
   14000904f:	xor    ebx,ebx
   140009051:	mov    ecx,0x20
   140009056:	call   0x14000b106
   14000905b:	mov    rsi,rax
   14000905e:	test   rax,rax
   140009061:	je     0x140009083
   140009063:	mov    rcx,rax
   140009066:	call   QWORD PTR [rip+0x3dfc]        # 0x14000ce68
   14000906c:	lea    rax,[rip+0x52a5]        # 0x14000e318
   140009073:	mov    QWORD PTR [rsi],rax
   140009076:	lea    rax,[rip+0x520b]        # 0x14000e288
   14000907d:	mov    QWORD PTR [rsi+0x10],rax
   140009081:	jmp    0x140009085
   140009083:	xor    esi,esi
   140009085:	mov    rdx,rbx
   140009088:	mov    rcx,rdi
   14000908b:	call   QWORD PTR [rip+0x360f]        # 0x14000c6a0
   140009091:	xor    r8d,r8d
   140009094:	mov    rdx,rsi
   140009097:	mov    rcx,rbx
   14000909a:	call   QWORD PTR [rip+0x3dc0]        # 0x14000ce60
   1400090a0:	mov    ecx,0x30
   1400090a5:	call   0x14000b106
   1400090aa:	mov    rdi,rax
   1400090ad:	test   rax,rax
   1400090b0:	je     0x1400090d8
   1400090b2:	xor    r8d,r8d
   1400090b5:	mov    rdx,r14
   1400090b8:	mov    rcx,rax
   1400090bb:	call   QWORD PTR [rip+0x4377]        # 0x14000d438
   1400090c1:	lea    rax,[rip+0x4b40]        # 0x14000dc08
   1400090c8:	mov    QWORD PTR [rdi],rax
   1400090cb:	lea    rax,[rip+0x4af6]        # 0x14000dbc8
   1400090d2:	mov    QWORD PTR [rdi+0x10],rax
   1400090d6:	jmp    0x1400090da
   1400090d8:	xor    edi,edi
   1400090da:	lea    rcx,[r14+0x60]
   1400090de:	mov    rdx,rdi
   1400090e1:	call   0x140007960
   1400090e6:	mov    rcx,QWORD PTR [r14+0x78]
   1400090ea:	mov    edx,0x32
   1400090ef:	call   QWORD PTR [rip+0x3d63]        # 0x14000ce58
   1400090f5:	mov    rcx,QWORD PTR [r14+0x78]
   1400090f9:	mov    edx,0x2710
   1400090fe:	call   QWORD PTR [rip+0x3d4c]        # 0x14000ce50
   140009104:	mov    rcx,QWORD PTR [r14+0x78]
   140009108:	mov    edx,0x1f4
   14000910d:	call   QWORD PTR [rip+0x3d35]        # 0x14000ce48
   140009113:	xor    r9d,r9d
   140009116:	xor    r8d,r8d
   140009119:	mov    rdx,rdi
   14000911c:	mov    rcx,rbx
   14000911f:	call   QWORD PTR [rip+0x4333]        # 0x14000d458
   140009125:	mov    ecx,0x30
   14000912a:	call   0x14000b106
   14000912f:	mov    rdi,rax
   140009132:	test   rax,rax
   140009135:	je     0x14000915d
   140009137:	xor    r8d,r8d
   14000913a:	mov    rdx,r14
   14000913d:	mov    rcx,rax
   140009140:	call   QWORD PTR [rip+0x42f2]        # 0x14000d438
   140009146:	lea    rax,[rip+0x4abb]        # 0x14000dc08
   14000914d:	mov    QWORD PTR [rdi],rax
   140009150:	lea    rax,[rip+0x4a71]        # 0x14000dbc8
   140009157:	mov    QWORD PTR [rdi+0x10],rax
   14000915b:	jmp    0x14000915f
   14000915d:	xor    edi,edi
   14000915f:	mov    rax,QWORD PTR [r14+0x40]
   140009163:	lea    rcx,[r14+0x40]
   140009167:	lea    rdx,[rsp+0xd8]
   14000916f:	mov    QWORD PTR [r14+0x58],rdi
   140009173:	call   QWORD PTR [rax+0x20]
   140009176:	mov    rcx,QWORD PTR [r14+0x58]
   14000917a:	mov    rdx,rax
   14000917d:	call   QWORD PTR [rip+0x3cbd]        # 0x14000ce40
   140009183:	xor    r9d,r9d
   140009186:	xor    r8d,r8d
   140009189:	mov    rdx,r15
   14000918c:	mov    rcx,rsi
   14000918f:	call   QWORD PTR [rip+0x42c3]        # 0x14000d458
   140009195:	mov    rdx,QWORD PTR [r14+0x58]
   140009199:	xor    r9d,r9d
   14000919c:	xor    r8d,r8d
   14000919f:	mov    rcx,rsi
   1400091a2:	call   QWORD PTR [rip+0x42b0]        # 0x14000d458
   1400091a8:	lea    rdx,[rsp+0xb8]
   1400091b0:	mov    rcx,r15
   1400091b3:	call   0x140002360
   1400091b8:	mov    rcx,QWORD PTR [r14+0x88]
   1400091bf:	mov    rdx,rax
   1400091c2:	call   QWORD PTR [rip+0x3768]        # 0x14000c930
   1400091c8:	lea    rcx,[rsp+0xb8]
   1400091d0:	call   QWORD PTR [rip+0x320a]        # 0x14000c3e0
   1400091d6:	mov    r9,QWORD PTR [r14+0x88]
   1400091dd:	lea    rax,[rip+0x6acc]        # 0x14000fcb0
   1400091e4:	lea    r8,[rip+0x6a9d]        # 0x14000fc88
   1400091eb:	lea    rcx,[rsp+0xa8]
   1400091f3:	mov    rdx,r15
   1400091f6:	mov    DWORD PTR [rsp+0x28],ebp
   1400091fa:	mov    QWORD PTR [rsp+0x20],rax
   1400091ff:	call   QWORD PTR [rip+0x2fab]        # 0x14000c1b0
   140009205:	lea    rcx,[rsp+0xa8]
   14000920d:	call   QWORD PTR [rip+0x2fa5]        # 0x14000c1b8
   140009213:	lea    rdx,[rip+0x5fce]        # 0x14000f1e8
   14000921a:	xor    eax,eax
   14000921c:	mov    rdi,rdx
   14000921f:	mov    QWORD PTR [rsp+0x68],rdx
   140009224:	mov    rcx,r12
   140009227:	repnz scas al,BYTE PTR es:[rdi]
   140009229:	lea    rdx,[rsp+0xf0]
   140009231:	not    rcx
   140009234:	dec    rcx
   140009237:	mov    DWORD PTR [rsp+0x60],ecx
   14000923b:	lea    rcx,[rsp+0x150]
   140009243:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140009248:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140009251:	call   QWORD PTR [rip+0x3071]        # 0x14000c2c8
   140009257:	mov    rcx,r13
   14000925a:	call   QWORD PTR [rip+0x3318]        # 0x14000c578
   140009260:	mov    r8,QWORD PTR [r14+0x78]
   140009264:	lea    rdx,[rsp+0x150]
   14000926c:	mov    rcx,rax
   14000926f:	call   QWORD PTR [rip+0x32f3]        # 0x14000c568
   140009275:	lea    rcx,[rsp+0x150]
   14000927d:	call   QWORD PTR [rip+0x315d]        # 0x14000c3e0
   140009283:	lea    rdx,[rsp+0x158]
   14000928b:	mov    rcx,r15
   14000928e:	call   0x140004560
   140009293:	mov    rdi,rax
   140009296:	mov    rdx,QWORD PTR [rax]
   140009299:	mov    QWORD PTR [rsp+0x30],rdx
   14000929e:	mov    ecx,DWORD PTR [rdx]
   1400092a0:	test   ecx,ecx
   1400092a2:	je     0x1400092af
   1400092a4:	cmp    ecx,0xffffffff
   1400092a7:	je     0x140009308
   1400092a9:	lock add DWORD PTR [rdx],0x1
   1400092ad:	jmp    0x140009303
   1400092af:	mov    edx,DWORD PTR [rdx+0x4]
   1400092b2:	lea    rcx,[rsp+0x30]
   1400092b7:	call   QWORD PTR [rip+0x2fdb]        # 0x14000c298
   1400092bd:	mov    rdx,QWORD PTR [rsp+0x30]
   1400092c2:	mov    rcx,QWORD PTR [rdi]
   1400092c5:	movsxd rax,DWORD PTR [rdx+0xc]
   1400092c9:	lea    rsi,[rdx+rax*8+0x10]
   1400092ce:	movsxd rax,DWORD PTR [rcx+0x8]
   1400092d2:	lea    rbx,[rcx+rax*8+0x10]
   1400092d7:	movsxd rax,DWORD PTR [rdx+0x8]
   1400092db:	lea    rdi,[rdx+rax*8+0x10]
   1400092e0:	cmp    rdi,rsi
   1400092e3:	je     0x140009308
   1400092e5:	test   rdi,rdi
   1400092e8:	je     0x1400092f6
   1400092ea:	mov    rdx,rbx
   1400092ed:	mov    rcx,rdi
   1400092f0:	call   QWORD PTR [rip+0x2e5a]        # 0x14000c150
   1400092f6:	add    rdi,0x8
   1400092fa:	add    rbx,0x8
   1400092fe:	cmp    rdi,rsi
   140009301:	jne    0x1400092e5
   140009303:	mov    rdx,QWORD PTR [rsp+0x30]
   140009308:	mov    rbx,QWORD PTR [rsp+0x158]
   140009310:	mov    DWORD PTR [rsp+0x38],ebp
   140009314:	movsxd rax,DWORD PTR [rdx+0x8]
   140009318:	lea    rcx,[rdx+rax*8+0x10]
   14000931d:	mov    QWORD PTR [rsp+0x40],rcx
   140009322:	movsxd rax,DWORD PTR [rdx+0xc]
   140009326:	lea    rcx,[rdx+rax*8+0x10]
   14000932b:	mov    QWORD PTR [rsp+0x48],rcx
   140009330:	mov    eax,DWORD PTR [rbx]
   140009332:	test   eax,eax
   140009334:	je     0x140009354
   140009336:	cmp    eax,0xffffffff
   140009339:	je     0x140009390
   14000933b:	mov    eax,r12d
   14000933e:	lock xadd DWORD PTR [rbx],eax
   140009342:	add    eax,0xffffffff
   140009345:	setne  al
   140009348:	test   al,al
   14000934a:	jne    0x140009390
   14000934c:	mov    rbx,QWORD PTR [rsp+0x158]
   140009354:	movsxd rax,DWORD PTR [rbx+0xc]
   140009358:	lea    rdi,[rbx+rax*8+0x10]
   14000935d:	movsxd rax,DWORD PTR [rbx+0x8]
   140009361:	lea    rsi,[rbx+rax*8+0x10]
   140009366:	cmp    rsi,rdi
   140009369:	je     0x140009382
   14000936b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009370:	sub    rdi,0x8
   140009374:	mov    rcx,rdi
   140009377:	call   QWORD PTR [rip+0x3063]        # 0x14000c3e0
   14000937d:	cmp    rdi,rsi
   140009380:	jne    0x140009370
   140009382:	mov    rcx,rbx
   140009385:	call   QWORD PTR [rip+0x2f65]        # 0x14000c2f0
   14000938b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009390:	mov    eax,DWORD PTR [rsp+0x38]
   140009394:	inc    DWORD PTR [rsp+0x38]
   140009398:	test   eax,eax
   14000939a:	jne    0x1400093ad
   14000939c:	mov    rax,QWORD PTR [rsp+0x48]
   1400093a1:	cmp    QWORD PTR [rsp+0x40],rax
   1400093a6:	je     0x1400093ad
   1400093a8:	mov    r13b,0x1
   1400093ab:	jmp    0x1400093b0
   1400093ad:	xor    r13b,r13b
   1400093b0:	test   bpl,0x2
   1400093b4:	je     0x14000941b
   1400093b6:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400093be:	and    ebp,0xfffffffd
   1400093c1:	mov    eax,DWORD PTR [rbx]
   1400093c3:	test   eax,eax
   1400093c5:	je     0x1400093e5
   1400093c7:	cmp    eax,0xffffffff
   1400093ca:	je     0x14000941b
   1400093cc:	mov    eax,r12d
   1400093cf:	lock xadd DWORD PTR [rbx],eax
   1400093d3:	add    eax,0xffffffff
   1400093d6:	setne  al
   1400093d9:	test   al,al
   1400093db:	jne    0x14000941b
   1400093dd:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400093e5:	movsxd rax,DWORD PTR [rbx+0xc]
   1400093e9:	lea    rdi,[rbx+rax*8+0x10]
   1400093ee:	movsxd rax,DWORD PTR [rbx+0x8]
   1400093f2:	lea    rsi,[rbx+rax*8+0x10]
   1400093f7:	cmp    rsi,rdi
   1400093fa:	je     0x140009412
   1400093fc:	nop    DWORD PTR [rax+0x0]
   140009400:	sub    rdi,0x8
   140009404:	mov    rcx,rdi
   140009407:	call   QWORD PTR [rip+0x2fd3]        # 0x14000c3e0
   14000940d:	cmp    rdi,rsi
   140009410:	jne    0x140009400
   140009412:	mov    rcx,rbx
   140009415:	call   QWORD PTR [rip+0x2ed5]        # 0x14000c2f0
   14000941b:	test   r13b,r13b
   14000941e:	je     0x140009677
   140009424:	mov    r15,QWORD PTR [rsp+0x40]
   140009429:	test   bpl,0x4
   14000942d:	je     0x1400094a0
   14000942f:	mov    rbx,QWORD PTR [rsp+0x80]
   140009437:	and    ebp,0xfffffffb
   14000943a:	mov    eax,DWORD PTR [rbx]
   14000943c:	test   eax,eax
   14000943e:	je     0x14000945e
   140009440:	cmp    eax,0xffffffff
   140009443:	je     0x1400094a0
   140009445:	mov    eax,r12d
   140009448:	lock xadd DWORD PTR [rbx],eax
   14000944c:	add    eax,0xffffffff
   14000944f:	setne  al
   140009452:	test   al,al
   140009454:	jne    0x1400094a0
   140009456:	mov    rbx,QWORD PTR [rsp+0x80]
   14000945e:	movsxd rax,DWORD PTR [rbx+0xc]
   140009462:	lea    rdi,[rbx+rax*8+0x10]
   140009467:	movsxd rax,DWORD PTR [rbx+0x8]
   14000946b:	lea    rsi,[rbx+rax*8+0x10]
   140009470:	cmp    rsi,rdi
   140009473:	je     0x140009492
   140009475:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009480:	sub    rdi,0x8
   140009484:	mov    rcx,rdi
   140009487:	call   QWORD PTR [rip+0x2f53]        # 0x14000c3e0
   14000948d:	cmp    rdi,rsi
   140009490:	jne    0x140009480
   140009492:	mov    rcx,rbx
   140009495:	call   QWORD PTR [rip+0x2e55]        # 0x14000c2f0
   14000949b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400094a0:	mov    r13d,DWORD PTR [rsp+0x38]
   1400094a5:	test   bpl,0x10
   1400094a9:	je     0x14000950c
   1400094ab:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400094b3:	and    ebp,0xffffffef
   1400094b6:	mov    eax,DWORD PTR [rbx]
   1400094b8:	test   eax,eax
   1400094ba:	je     0x1400094d2
   1400094bc:	cmp    eax,0xffffffff
   1400094bf:	je     0x14000950c
   1400094c1:	mov    eax,r12d
   1400094c4:	lock xadd DWORD PTR [rbx],eax
   1400094c8:	add    eax,0xffffffff
   1400094cb:	setne  al
   1400094ce:	test   al,al
   1400094d0:	jne    0x14000950c
   1400094d2:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400094da:	movsxd rax,DWORD PTR [rbx+0xc]
   1400094de:	lea    rdi,[rbx+rax*8+0x10]
   1400094e3:	movsxd rax,DWORD PTR [rbx+0x8]
   1400094e7:	lea    rsi,[rbx+rax*8+0x10]
   1400094ec:	cmp    rsi,rdi
   1400094ef:	je     0x140009503
   1400094f1:	sub    rdi,0x8
   1400094f5:	mov    rcx,rdi
   1400094f8:	call   QWORD PTR [rip+0x2ee2]        # 0x14000c3e0
   1400094fe:	cmp    rdi,rsi
   140009501:	jne    0x1400094f1
   140009503:	mov    rcx,rbx
   140009506:	call   QWORD PTR [rip+0x2de4]        # 0x14000c2f0
   14000950c:	test   r13d,r13d
   14000950f:	je     0x1400095f7
   140009515:	lea    rcx,[rsp+0xe0]
   14000951d:	call   QWORD PTR [rip+0x2c7d]        # 0x14000c1a0
   140009523:	mov    rsi,QWORD PTR [r14+0x98]
   14000952a:	mov    rcx,rsi
   14000952d:	mov    rbx,rax
   140009530:	call   QWORD PTR [rip+0x3902]        # 0x14000ce38
   140009536:	lea    rcx,[rsp+0x90]
   14000953e:	mov    edi,eax
   140009540:	call   QWORD PTR [rip+0x2f12]        # 0x14000c458
   140009546:	mov    r9,r15
   140009549:	mov    edx,edi
   14000954b:	mov    rcx,rsi
   14000954e:	mov    r8,rax
   140009551:	mov    QWORD PTR [rsp+0x20],rbx
   140009556:	call   QWORD PTR [rip+0x38d4]        # 0x14000ce30
   14000955c:	lea    rcx,[rsp+0x90]
   140009564:	call   QWORD PTR [rip+0x2ef6]        # 0x14000c460
   14000956a:	lea    rcx,[rsp+0xe0]
   140009572:	call   QWORD PTR [rip+0x2c30]        # 0x14000c1a8
   140009578:	dec    DWORD PTR [rsp+0x38]
   14000957c:	test   bpl,0x8
   140009580:	je     0x1400094a0
   140009586:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000958e:	and    ebp,0xfffffff7
   140009591:	mov    eax,DWORD PTR [rbx]
   140009593:	test   eax,eax
   140009595:	je     0x1400095b5
   140009597:	cmp    eax,0xffffffff
   14000959a:	je     0x1400094a0
   1400095a0:	mov    eax,r12d
   1400095a3:	lock xadd DWORD PTR [rbx],eax
   1400095a7:	add    eax,0xffffffff
   1400095aa:	setne  al
   1400095ad:	test   al,al
   1400095af:	jne    0x1400094a0
   1400095b5:	mov    rbx,QWORD PTR [rsp+0xd0]
   1400095bd:	movsxd rax,DWORD PTR [rbx+0xc]
   1400095c1:	lea    rdi,[rbx+rax*8+0x10]
   1400095c6:	movsxd rax,DWORD PTR [rbx+0x8]
   1400095ca:	lea    rsi,[rbx+rax*8+0x10]
   1400095cf:	cmp    rsi,rdi
   1400095d2:	je     0x140009492
   1400095d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400095e0:	sub    rdi,0x8
   1400095e4:	mov    rcx,rdi
   1400095e7:	call   QWORD PTR [rip+0x2df3]        # 0x14000c3e0
   1400095ed:	cmp    rdi,rsi
   1400095f0:	jne    0x1400095e0
   1400095f2:	jmp    0x140009492
   1400095f7:	add    QWORD PTR [rsp+0x40],0x8
   1400095fd:	test   bpl,0x1
   140009601:	je     0x140009390
   140009607:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000960f:	and    ebp,0xfffffffe
   140009612:	mov    eax,DWORD PTR [rbx]
   140009614:	test   eax,eax
   140009616:	je     0x14000963e
   140009618:	cmp    eax,0xffffffff
   14000961b:	je     0x140009390
   140009621:	mov    eax,r12d
   140009624:	lock xadd DWORD PTR [rbx],eax
   140009628:	add    eax,0xffffffff
   14000962b:	setne  al
   14000962e:	test   al,al
   140009630:	jne    0x140009390
   140009636:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000963e:	movsxd rax,DWORD PTR [rbx+0xc]
   140009642:	lea    rdi,[rbx+rax*8+0x10]
   140009647:	movsxd rax,DWORD PTR [rbx+0x8]
   14000964b:	lea    rsi,[rbx+rax*8+0x10]
   140009650:	cmp    rsi,rdi
   140009653:	je     0x140009382
   140009659:	nop    DWORD PTR [rax+0x0]
   140009660:	sub    rdi,0x8
   140009664:	mov    rcx,rdi
   140009667:	call   QWORD PTR [rip+0x2d73]        # 0x14000c3e0
   14000966d:	cmp    rdi,rsi
   140009670:	jne    0x140009660
   140009672:	jmp    0x140009382
   140009677:	mov    rbx,QWORD PTR [rsp+0x30]
   14000967c:	mov    eax,DWORD PTR [rbx]
   14000967e:	test   eax,eax
   140009680:	je     0x14000969c
   140009682:	cmp    eax,0xffffffff
   140009685:	je     0x1400096ce
   140009687:	lock xadd DWORD PTR [rbx],r12d
   14000968c:	add    r12d,0xffffffff
   140009690:	setne  al
   140009693:	test   al,al
   140009695:	jne    0x1400096ce
   140009697:	mov    rbx,QWORD PTR [rsp+0x30]
   14000969c:	movsxd rax,DWORD PTR [rbx+0xc]
   1400096a0:	lea    rdi,[rbx+rax*8+0x10]
   1400096a5:	movsxd rax,DWORD PTR [rbx+0x8]
   1400096a9:	lea    rsi,[rbx+rax*8+0x10]
   1400096ae:	cmp    rsi,rdi
   1400096b1:	je     0x1400096c5
   1400096b3:	sub    rdi,0x8
   1400096b7:	mov    rcx,rdi
   1400096ba:	call   QWORD PTR [rip+0x2d20]        # 0x14000c3e0
   1400096c0:	cmp    rdi,rsi
   1400096c3:	jne    0x1400096b3
   1400096c5:	mov    rcx,rbx
   1400096c8:	call   QWORD PTR [rip+0x2c22]        # 0x14000c2f0
   1400096ce:	mov    r15,QWORD PTR [rsp+0x50]
   1400096d3:	mov    rdx,QWORD PTR [r14+0x98]
   1400096da:	lea    rax,[rip+0x658f]        # 0x14000fc70
   1400096e1:	xor    ebp,ebp
   1400096e3:	lea    r8,[rip+0x6566]        # 0x14000fc50
   1400096ea:	lea    rcx,[rsp+0x70]
   1400096ef:	mov    r9,r15
   1400096f2:	mov    DWORD PTR [rsp+0x28],ebp
   1400096f6:	mov    QWORD PTR [rsp+0x20],rax
   1400096fb:	call   QWORD PTR [rip+0x2aaf]        # 0x14000c1b0
   140009701:	lea    rcx,[rsp+0x70]
   140009706:	call   QWORD PTR [rip+0x2aac]        # 0x14000c1b8
   14000970c:	mov    rcx,QWORD PTR [r14+0x98]
   140009713:	lea    rdx,[rsp+0xb0]
   14000971b:	call   QWORD PTR [rip+0x3707]        # 0x14000ce28
   140009721:	mov    rcx,r15
   140009724:	mov    rdx,rax
   140009727:	call   0x140005e20
   14000972c:	lea    rcx,[rsp+0xb0]
   140009734:	call   QWORD PTR [rip+0x2ca6]        # 0x14000c3e0
   14000973a:	lea    ecx,[rbp+0x20]
   14000973d:	call   0x14000b106
   140009742:	mov    rdi,rax
   140009745:	test   rax,rax
   140009748:	je     0x140009771
   14000974a:	mov    rdx,QWORD PTR [r14+0xa8]
   140009751:	mov    rcx,rax
   140009754:	call   QWORD PTR [rip+0x2f56]        # 0x14000c6b0
   14000975a:	lea    rax,[rip+0x4bb7]        # 0x14000e318
   140009761:	mov    QWORD PTR [rdi],rax
   140009764:	lea    rax,[rip+0x4b1d]        # 0x14000e288
   14000976b:	mov    QWORD PTR [rdi+0x10],rax
   14000976f:	jmp    0x140009774
   140009771:	mov    rdi,rbp
   140009774:	xor    edx,edx
   140009776:	mov    rcx,rdi
   140009779:	call   QWORD PTR [rip+0x2f29]        # 0x14000c6a8
   14000977f:	mov    rcx,QWORD PTR [r14+0xa8]
   140009786:	mov    rdx,rdi
   140009789:	call   QWORD PTR [rip+0x2f11]        # 0x14000c6a0
   14000978f:	mov    rcx,r15
   140009792:	call   0x140006480
   140009797:	mov    r9d,ebp
   14000979a:	xor    r8d,r8d
   14000979d:	mov    rdx,rax
   1400097a0:	mov    rcx,rdi
   1400097a3:	call   QWORD PTR [rip+0x3caf]        # 0x14000d458
   1400097a9:	mov    rdx,QWORD PTR [r14+0x88]
   1400097b0:	lea    rax,[rip+0x6481]        # 0x14000fc38
   1400097b7:	lea    r8,[rip+0x646a]        # 0x14000fc28
   1400097be:	lea    rcx,[rsp+0x78]
   1400097c3:	mov    r9,r14
   1400097c6:	mov    DWORD PTR [rsp+0x28],ebp
   1400097ca:	mov    QWORD PTR [r14+0x110],r15
   1400097d1:	mov    QWORD PTR [rsp+0x20],rax
   1400097d6:	call   QWORD PTR [rip+0x29d4]        # 0x14000c1b0
   1400097dc:	lea    rcx,[rsp+0x78]
   1400097e1:	call   QWORD PTR [rip+0x29d1]        # 0x14000c1b8
   1400097e7:	mov    ecx,0x30
   1400097ec:	call   0x14000b106
   1400097f1:	mov    rdi,rax
   1400097f4:	test   rax,rax
   1400097f7:	je     0x14000981f
   1400097f9:	mov    r8d,ebp
   1400097fc:	mov    rdx,r14
   1400097ff:	mov    rcx,rax
   140009802:	call   QWORD PTR [rip+0x3618]        # 0x14000ce20
   140009808:	lea    r11,[rip+0x6289]        # 0x14000fa98
   14000980f:	lea    rax,[rip+0x6242]        # 0x14000fa58
   140009816:	mov    QWORD PTR [rdi],r11
   140009819:	mov    QWORD PTR [rdi+0x10],rax
   14000981d:	jmp    0x140009822
   14000981f:	mov    rdi,rbp
   140009822:	lea    rcx,[r14+0xb8]
   140009829:	mov    rdx,rdi
   14000982c:	call   0x140008770
   140009831:	mov    ecx,0x28
   140009836:	call   0x14000b106
   14000983b:	lea    rsi,[rip+0x6196]        # 0x14000f9d8
   140009842:	mov    rbx,rax
   140009845:	test   rax,rax
   140009848:	je     0x14000985b
   14000984a:	mov    rdx,r14
   14000984d:	mov    rcx,rax
   140009850:	call   QWORD PTR [rip+0x2c12]        # 0x14000c468
   140009856:	mov    QWORD PTR [rbx],rsi
   140009859:	jmp    0x14000985e
   14000985b:	mov    rbx,rbp
   14000985e:	mov    rcx,QWORD PTR [r14+0xe8]
   140009865:	mov    rdx,rbx
   140009868:	call   QWORD PTR [rip+0x35aa]        # 0x14000ce18
   14000986e:	mov    ecx,0x28
   140009873:	call   0x14000b106
   140009878:	mov    rbx,rax
   14000987b:	test   rax,rax
   14000987e:	je     0x140009891
   140009880:	mov    rdx,r14
   140009883:	mov    rcx,rax
   140009886:	call   QWORD PTR [rip+0x2bdc]        # 0x14000c468
   14000988c:	mov    QWORD PTR [rbx],rsi
   14000988f:	jmp    0x140009894
   140009891:	mov    rbx,rbp
   140009894:	mov    rcx,QWORD PTR [r14+0xf0]
   14000989b:	mov    rdx,rbx
   14000989e:	call   QWORD PTR [rip+0x3574]        # 0x14000ce18
   1400098a4:	mov    ecx,0x28
   1400098a9:	call   0x14000b106
   1400098ae:	mov    rbx,rax
   1400098b1:	test   rax,rax
   1400098b4:	je     0x1400098c7
   1400098b6:	mov    rdx,r14
   1400098b9:	mov    rcx,rax
   1400098bc:	call   QWORD PTR [rip+0x2ba6]        # 0x14000c468
   1400098c2:	mov    QWORD PTR [rbx],rsi
   1400098c5:	jmp    0x1400098ca
   1400098c7:	mov    rbx,rbp
   1400098ca:	mov    rcx,QWORD PTR [r14+0xf8]
   1400098d1:	mov    rdx,rbx
   1400098d4:	call   QWORD PTR [rip+0x353e]        # 0x14000ce18
   1400098da:	mov    ecx,0x28
   1400098df:	call   0x14000b106
   1400098e4:	mov    rbx,rax
   1400098e7:	test   rax,rax
   1400098ea:	je     0x1400098fd
   1400098ec:	mov    rdx,r14
   1400098ef:	mov    rcx,rax
   1400098f2:	call   QWORD PTR [rip+0x2b70]        # 0x14000c468
   1400098f8:	mov    QWORD PTR [rbx],rsi
   1400098fb:	jmp    0x140009900
   1400098fd:	mov    rbx,rbp
   140009900:	mov    rcx,QWORD PTR [r14+0x100]
   140009907:	mov    rdx,rbx
   14000990a:	call   QWORD PTR [rip+0x3508]        # 0x14000ce18
   140009910:	mov    rdx,QWORD PTR [r14+0xb0]
   140009917:	lea    rax,[rip+0x60aa]        # 0x14000f9c8
   14000991e:	lea    r8,[rip+0x6093]        # 0x14000f9b8
   140009925:	lea    rcx,[rsp+0x88]
   14000992d:	mov    r9,rdi
   140009930:	mov    DWORD PTR [rsp+0x28],ebp
   140009934:	mov    QWORD PTR [rsp+0x20],rax
   140009939:	call   QWORD PTR [rip+0x2871]        # 0x14000c1b0
   14000993f:	lea    rcx,[rsp+0x88]
   140009947:	call   QWORD PTR [rip+0x286b]        # 0x14000c1b8
   14000994d:	lea    rax,[rip+0x604c]        # 0x14000f9a0
   140009954:	lea    r8,[rip+0x6035]        # 0x14000f990
   14000995b:	lea    rcx,[rsp+0x98]
   140009963:	mov    r9,r14
   140009966:	mov    rdx,rdi
   140009969:	mov    DWORD PTR [rsp+0x28],ebp
   14000996d:	mov    QWORD PTR [rsp+0x20],rax
   140009972:	call   QWORD PTR [rip+0x2838]        # 0x14000c1b0
   140009978:	lea    rcx,[rsp+0x98]
   140009980:	call   QWORD PTR [rip+0x2832]        # 0x14000c1b8
   140009986:	lea    rax,[rip+0x5ff3]        # 0x14000f980
   14000998d:	lea    r8,[rip+0x5fdc]        # 0x14000f970
   140009994:	lea    rcx,[rsp+0x60]
   140009999:	mov    r9,r14
   14000999c:	mov    rdx,r14
   14000999f:	mov    DWORD PTR [rsp+0x28],ebp
   1400099a3:	mov    QWORD PTR [rsp+0x20],rax
   1400099a8:	call   QWORD PTR [rip+0x2802]        # 0x14000c1b0
   1400099ae:	lea    rcx,[rsp+0x60]
   1400099b3:	call   QWORD PTR [rip+0x27ff]        # 0x14000c1b8
   1400099b9:	mov    rcx,r14
   1400099bc:	call   0x1400082f0
   1400099c1:	mov    rbx,QWORD PTR [rsp+0x148]
   1400099c9:	mov    rax,r14
   1400099cc:	add    rsp,0x100
   1400099d3:	pop    r15
   1400099d5:	pop    r14
   1400099d7:	pop    r13
   1400099d9:	pop    r12
   1400099db:	pop    rdi
   1400099dc:	pop    rsi
   1400099dd:	pop    rbp
   1400099de:	ret    
   1400099df:	int3   
   1400099e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400099e5:	push   rdi
   1400099e6:	sub    rsp,0x20
   1400099ea:	mov    ebx,edx
   1400099ec:	mov    rdi,rcx
   1400099ef:	call   QWORD PTR [rip+0x352b]        # 0x14000cf20
   1400099f5:	test   bl,0x1
   1400099f8:	je     0x140009a02
   1400099fa:	mov    rcx,rdi
   1400099fd:	call   0x14000b100
   140009a02:	mov    rax,rdi
   140009a05:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a0a:	add    rsp,0x20
   140009a0e:	pop    rdi
   140009a0f:	ret    
   140009a10:	mov    QWORD PTR [rsp+0x8],rbx
   140009a15:	push   rdi
   140009a16:	sub    rsp,0x20
   140009a1a:	mov    ebx,edx
   140009a1c:	mov    rdi,rcx
   140009a1f:	call   QWORD PTR [rip+0x29fb]        # 0x14000c420
   140009a25:	test   bl,0x1
   140009a28:	je     0x140009a32
   140009a2a:	mov    rcx,rdi
   140009a2d:	call   0x14000b100
   140009a32:	mov    rax,rdi
   140009a35:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a3a:	add    rsp,0x20
   140009a3e:	pop    rdi
   140009a3f:	ret    
   140009a40:	sub    rcx,0x10
   140009a44:	jmp    0x1400099e0
   140009a49:	int3   
   140009a4a:	int3   
   140009a4b:	int3   
   140009a4c:	int3   
   140009a4d:	int3   
   140009a4e:	int3   
   140009a4f:	int3   
   140009a50:	sub    rcx,0x10
   140009a54:	jmp    0x140009a60
   140009a59:	int3   
   140009a5a:	int3   
   140009a5b:	int3   
   140009a5c:	int3   
   140009a5d:	int3   
   140009a5e:	int3   
   140009a5f:	int3   
   140009a60:	mov    QWORD PTR [rsp+0x8],rbx
   140009a65:	push   rdi
   140009a66:	sub    rsp,0x20
   140009a6a:	mov    rdi,rcx
   140009a6d:	add    rcx,0x30
   140009a71:	mov    ebx,edx
   140009a73:	call   QWORD PTR [rip+0x2b17]        # 0x14000c590
   140009a79:	mov    rcx,rdi
   140009a7c:	call   QWORD PTR [rip+0x3a46]        # 0x14000d4c8
   140009a82:	test   bl,0x1
   140009a85:	je     0x140009a8f
   140009a87:	mov    rcx,rdi
   140009a8a:	call   0x14000b100
   140009a8f:	mov    rax,rdi
   140009a92:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a97:	add    rsp,0x20
   140009a9b:	pop    rdi
   140009a9c:	ret    
   140009a9d:	int3   
   140009a9e:	int3   
   140009a9f:	int3   
   140009aa0:	rex push rbx
   140009aa2:	sub    rsp,0x40
   140009aa6:	cmp    QWORD PTR [rcx+0x120],0x0
   140009aae:	mov    rbx,rcx
   140009ab1:	je     0x140009b20
   140009ab3:	cmp    BYTE PTR [rcx+0x136],0x0
   140009aba:	jne    0x140009b20
   140009abc:	mov    rcx,QWORD PTR [rcx+0x68]
   140009ac0:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140009ac5:	call   QWORD PTR [rip+0x345d]        # 0x14000cf28
   140009acb:	mov    rcx,QWORD PTR [rbx+0x58]
   140009acf:	movapd xmm6,xmm0
   140009ad3:	call   QWORD PTR [rip+0x344f]        # 0x14000cf28
   140009ad9:	mov    eax,DWORD PTR [rbx+0x130]
   140009adf:	movsd  QWORD PTR [rsp+0x28],xmm6
   140009ae5:	mov    rbx,QWORD PTR [rbx+0x120]
   140009aec:	lea    edx,[rax+rax*2]
   140009aef:	movsd  QWORD PTR [rsp+0x20],xmm0
   140009af5:	lea    rcx,[rbx+0x38]
   140009af9:	call   QWORD PTR [rip+0x2759]        # 0x14000c258
   140009aff:	lea    rcx,[rsp+0x20]
   140009b04:	mov    rdx,QWORD PTR [rcx]
   140009b07:	mov    QWORD PTR [rax],rdx
   140009b0a:	mov    rdx,QWORD PTR [rcx+0x8]
   140009b0e:	mov    rcx,rbx
   140009b11:	mov    QWORD PTR [rax+0x8],rdx
   140009b15:	call   QWORD PTR [rip+0x2b55]        # 0x14000c670
   140009b1b:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140009b20:	add    rsp,0x40
   140009b24:	pop    rbx
   140009b25:	ret    
   140009b26:	int3   
   140009b27:	int3   
   140009b28:	int3   
   140009b29:	int3   
   140009b2a:	int3   
   140009b2b:	int3   
   140009b2c:	int3   
   140009b2d:	int3   
   140009b2e:	int3   
   140009b2f:	int3   
   140009b30:	rex push rbx
   140009b32:	sub    rsp,0x40
   140009b36:	cmp    QWORD PTR [rcx+0x120],0x0
   140009b3e:	mov    rbx,rcx
   140009b41:	je     0x140009bb7
   140009b43:	cmp    BYTE PTR [rcx+0x136],0x0
   140009b4a:	jne    0x140009bb7
   140009b4c:	mov    rcx,QWORD PTR [rcx+0xb8]
   140009b53:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140009b58:	call   QWORD PTR [rip+0x33ca]        # 0x14000cf28
   140009b5e:	mov    rcx,QWORD PTR [rbx+0xa8]
   140009b65:	movapd xmm6,xmm0
   140009b69:	call   QWORD PTR [rip+0x33b9]        # 0x14000cf28
   140009b6f:	mov    eax,DWORD PTR [rbx+0x130]
   140009b75:	movsd  QWORD PTR [rsp+0x28],xmm6
   140009b7b:	mov    rbx,QWORD PTR [rbx+0x120]
   140009b82:	lea    edx,[rax+rax*2+0x1]
   140009b86:	movsd  QWORD PTR [rsp+0x20],xmm0
   140009b8c:	lea    rcx,[rbx+0x38]
   140009b90:	call   QWORD PTR [rip+0x26c2]        # 0x14000c258
   140009b96:	lea    rcx,[rsp+0x20]
   140009b9b:	mov    rdx,QWORD PTR [rcx]
   140009b9e:	mov    QWORD PTR [rax],rdx
   140009ba1:	mov    rdx,QWORD PTR [rcx+0x8]
   140009ba5:	mov    rcx,rbx
   140009ba8:	mov    QWORD PTR [rax+0x8],rdx
   140009bac:	call   QWORD PTR [rip+0x2abe]        # 0x14000c670
   140009bb2:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140009bb7:	add    rsp,0x40
   140009bbb:	pop    rbx
   140009bbc:	ret    
   140009bbd:	int3   
   140009bbe:	int3   
   140009bbf:	int3   
   140009bc0:	rex push rdi
   140009bc2:	sub    rsp,0x40
   140009bc6:	cmp    QWORD PTR [rcx+0x120],0x0
   140009bce:	mov    rdi,rcx
   140009bd1:	je     0x140009c9d
   140009bd7:	cmp    BYTE PTR [rcx+0x136],0x0
   140009bde:	jne    0x140009c9d
   140009be4:	mov    rcx,QWORD PTR [rcx+0x108]
   140009beb:	mov    QWORD PTR [rsp+0x50],rbx
   140009bf0:	mov    QWORD PTR [rsp+0x58],rsi
   140009bf5:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140009bfa:	call   QWORD PTR [rip+0x3328]        # 0x14000cf28
   140009c00:	mov    rcx,QWORD PTR [rdi+0xf8]
   140009c07:	movapd xmm6,xmm0
   140009c0b:	call   QWORD PTR [rip+0x3317]        # 0x14000cf28
   140009c11:	mov    rcx,QWORD PTR [rdi+0x110]
   140009c18:	movsd  QWORD PTR [rsp+0x28],xmm6
   140009c1e:	movsd  QWORD PTR [rsp+0x20],xmm0
   140009c24:	call   QWORD PTR [rip+0x3306]        # 0x14000cf30
   140009c2a:	mov    ecx,DWORD PTR [rdi+0x130]
   140009c30:	mov    rbx,QWORD PTR [rdi+0x120]
   140009c37:	lea    edx,[rcx+rcx*2+0x2]
   140009c3b:	movzx  esi,al
   140009c3e:	lea    rcx,[rbx+0x38]
   140009c42:	call   QWORD PTR [rip+0x2610]        # 0x14000c258
   140009c48:	lea    rcx,[rsp+0x20]
   140009c4d:	mov    rdx,QWORD PTR [rcx]
   140009c50:	mov    QWORD PTR [rax],rdx
   140009c53:	mov    rdx,QWORD PTR [rcx+0x8]
   140009c57:	mov    rcx,rbx
   140009c5a:	mov    QWORD PTR [rax+0x8],rdx
   140009c5e:	call   QWORD PTR [rip+0x2a0c]        # 0x14000c670
   140009c64:	mov    ebx,DWORD PTR [rdi+0x130]
   140009c6a:	mov    rdi,QWORD PTR [rdi+0x120]
   140009c71:	movzx  edx,sil
   140009c75:	mov    rcx,QWORD PTR [rdi+0x80]
   140009c7c:	call   QWORD PTR [rip+0x2c56]        # 0x14000c8d8
   140009c82:	lea    edx,[rbx+rbx*2+0x2]
   140009c86:	mov    rcx,rdi
   140009c89:	call   0x1400064c0
   140009c8e:	mov    rsi,QWORD PTR [rsp+0x58]
   140009c93:	mov    rbx,QWORD PTR [rsp+0x50]
   140009c98:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140009c9d:	add    rsp,0x40
   140009ca1:	pop    rdi
   140009ca2:	ret    
   140009ca3:	int3   
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	int3   
   140009ca7:	int3   
   140009ca8:	int3   
   140009ca9:	int3   
   140009caa:	int3   
   140009cab:	int3   
   140009cac:	int3   
   140009cad:	int3   
   140009cae:	int3   
   140009caf:	int3   
   140009cb0:	mov    QWORD PTR [rsp+0x20],rbx
   140009cb5:	push   rdi
   140009cb6:	sub    rsp,0x20
   140009cba:	mov    edx,DWORD PTR [rcx+0x130]
   140009cc0:	mov    rdi,rcx
   140009cc3:	mov    BYTE PTR [rcx+0x136],0x1
   140009cca:	lea    rcx,[rsp+0x40]
   140009ccf:	mov    r8d,0xa
   140009cd5:	call   QWORD PTR [rip+0x24b5]        # 0x14000c190
   140009cdb:	lea    rcx,[rsp+0x30]
   140009ce0:	mov    dl,0x70
   140009ce2:	mov    rbx,rax
   140009ce5:	call   QWORD PTR [rip+0x25e5]        # 0x14000c2d0
   140009ceb:	lea    rcx,[rsp+0x38]
   140009cf0:	movzx  edx,WORD PTR [rax]
   140009cf3:	call   QWORD PTR [rip+0x249f]        # 0x14000c198
   140009cf9:	lea    rcx,[rsp+0x38]
   140009cfe:	mov    rdx,rbx
   140009d01:	call   QWORD PTR [rip+0x2451]        # 0x14000c158
   140009d07:	mov    rcx,QWORD PTR [rdi+0xd8]
   140009d0e:	lea    rdx,[rsp+0x38]
   140009d13:	call   QWORD PTR [rip+0x378f]        # 0x14000d4a8
   140009d19:	lea    rcx,[rsp+0x38]
   140009d1e:	call   QWORD PTR [rip+0x26bc]        # 0x14000c3e0
   140009d24:	lea    rcx,[rsp+0x40]
   140009d29:	call   QWORD PTR [rip+0x26b1]        # 0x14000c3e0
   140009d2f:	movzx  edx,BYTE PTR [rdi+0x134]
   140009d36:	mov    rcx,QWORD PTR [rdi+0x110]
   140009d3d:	call   QWORD PTR [rip+0x31fd]        # 0x14000cf40
   140009d43:	cmp    BYTE PTR [rdi+0x135],0x0
   140009d4a:	mov    rcx,QWORD PTR [rdi+0x110]
   140009d51:	sete   bl
   140009d54:	call   QWORD PTR [rip+0x31de]        # 0x14000cf38
   140009d5a:	movzx  edx,bl
   140009d5d:	mov    rcx,rax
   140009d60:	call   QWORD PTR [rip+0x292a]        # 0x14000c690
   140009d66:	lea    rcx,[rdi+0x128]
   140009d6d:	xor    edx,edx
   140009d6f:	call   QWORD PTR [rip+0x2643]        # 0x14000c3b8
   140009d75:	mov    rcx,QWORD PTR [rdi+0x58]
   140009d79:	movsd  xmm1,QWORD PTR [rax]
   140009d7d:	call   QWORD PTR [rip+0x2915]        # 0x14000c698
   140009d83:	lea    rcx,[rdi+0x128]
   140009d8a:	xor    edx,edx
   140009d8c:	call   QWORD PTR [rip+0x2626]        # 0x14000c3b8
   140009d92:	mov    rcx,QWORD PTR [rdi+0x68]
   140009d96:	movsd  xmm1,QWORD PTR [rax+0x8]
   140009d9b:	call   QWORD PTR [rip+0x28f7]        # 0x14000c698
   140009da1:	lea    rcx,[rdi+0x128]
   140009da8:	mov    edx,0x1
   140009dad:	call   QWORD PTR [rip+0x2605]        # 0x14000c3b8
   140009db3:	mov    rcx,QWORD PTR [rdi+0xa8]
   140009dba:	movsd  xmm1,QWORD PTR [rax]
   140009dbe:	call   QWORD PTR [rip+0x28d4]        # 0x14000c698
   140009dc4:	lea    rcx,[rdi+0x128]
   140009dcb:	mov    edx,0x1
   140009dd0:	call   QWORD PTR [rip+0x25e2]        # 0x14000c3b8
   140009dd6:	mov    rcx,QWORD PTR [rdi+0xb8]
   140009ddd:	movsd  xmm1,QWORD PTR [rax+0x8]
   140009de2:	call   QWORD PTR [rip+0x28b0]        # 0x14000c698
   140009de8:	lea    rcx,[rdi+0x128]
   140009def:	mov    edx,0x2
   140009df4:	call   QWORD PTR [rip+0x25be]        # 0x14000c3b8
   140009dfa:	mov    rcx,QWORD PTR [rdi+0xf8]
   140009e01:	movsd  xmm1,QWORD PTR [rax]
   140009e05:	call   QWORD PTR [rip+0x288d]        # 0x14000c698
   140009e0b:	lea    rcx,[rdi+0x128]
   140009e12:	mov    edx,0x2
   140009e17:	call   QWORD PTR [rip+0x259b]        # 0x14000c3b8
   140009e1d:	mov    rcx,QWORD PTR [rdi+0x108]
   140009e24:	movsd  xmm1,QWORD PTR [rax+0x8]
   140009e29:	call   QWORD PTR [rip+0x2869]        # 0x14000c698
   140009e2f:	mov    rbx,QWORD PTR [rsp+0x48]
   140009e34:	mov    BYTE PTR [rdi+0x136],0x0
   140009e3b:	add    rsp,0x20
   140009e3f:	pop    rdi
   140009e40:	ret    
   140009e41:	int3   
   140009e42:	int3   
   140009e43:	int3   
   140009e44:	int3   
   140009e45:	int3   
   140009e46:	int3   
   140009e47:	int3   
   140009e48:	int3   
   140009e49:	int3   
   140009e4a:	int3   
   140009e4b:	int3   
   140009e4c:	int3   
   140009e4d:	int3   
   140009e4e:	int3   
   140009e4f:	int3   
   140009e50:	mov    QWORD PTR [rsp+0x10],rbx
   140009e55:	mov    QWORD PTR [rsp+0x18],rbp
   140009e5a:	push   rsi
   140009e5b:	push   rdi
   140009e5c:	push   r12
   140009e5e:	push   r13
   140009e60:	push   r14
   140009e62:	sub    rsp,0x30
   140009e66:	xor    r12d,r12d
   140009e69:	mov    rbx,rcx
   140009e6c:	mov    r8d,r12d
   140009e6f:	call   QWORD PTR [rip+0x35c3]        # 0x14000d438
   140009e75:	lea    rdx,[rip+0x60cc]        # 0x14000ff48
   140009e7c:	lea    rax,[rip+0x6085]        # 0x14000ff08
   140009e83:	lea    rcx,[rbx+0x128]
   140009e8a:	mov    QWORD PTR [rbx],rdx
   140009e8d:	mov    QWORD PTR [rbx+0x10],rax
   140009e91:	mov    QWORD PTR [rbx+0x120],r12
   140009e98:	call   QWORD PTR [rip+0x237a]        # 0x14000c218
   140009e9e:	lea    ecx,[r12+0x20]
   140009ea3:	mov    BYTE PTR [rbx+0x136],r12b
   140009eaa:	call   0x14000b106
   140009eaf:	mov    rsi,rax
   140009eb2:	test   rax,rax
   140009eb5:	je     0x140009eda
   140009eb7:	mov    rdx,rbx
   140009eba:	mov    rcx,rax
   140009ebd:	call   QWORD PTR [rip+0x27ed]        # 0x14000c6b0
   140009ec3:	lea    rdx,[rip+0x444e]        # 0x14000e318
   140009eca:	lea    rax,[rip+0x43b7]        # 0x14000e288
   140009ed1:	mov    QWORD PTR [rsi],rdx
   140009ed4:	mov    QWORD PTR [rsi+0x10],rax
   140009ed8:	jmp    0x140009edd
   140009eda:	mov    rsi,r12
   140009edd:	xor    edx,edx
   140009edf:	mov    rcx,rsi
   140009ee2:	call   QWORD PTR [rip+0x27c0]        # 0x14000c6a8
   140009ee8:	mov    edx,0x2
   140009eed:	mov    rcx,rsi
   140009ef0:	call   QWORD PTR [rip+0x3552]        # 0x14000d448
   140009ef6:	mov    rdx,rsi
   140009ef9:	mov    rcx,rbx
   140009efc:	call   QWORD PTR [rip+0x279e]        # 0x14000c6a0
   140009f02:	mov    ecx,0x30
   140009f07:	call   0x14000b106
   140009f0c:	lea    r13,[rip+0x3cf5]        # 0x14000dc08
   140009f13:	lea    r14,[rip+0x3cae]        # 0x14000dbc8
   140009f1a:	mov    rbp,rax
   140009f1d:	test   rax,rax
   140009f20:	je     0x140009f3b
   140009f22:	mov    r8d,r12d
   140009f25:	mov    rdx,rbx
   140009f28:	mov    rcx,rax
   140009f2b:	call   QWORD PTR [rip+0x3507]        # 0x14000d438
   140009f31:	mov    QWORD PTR [rbp+0x0],r13
   140009f35:	mov    QWORD PTR [rbp+0x10],r14
   140009f39:	jmp    0x140009f3e
   140009f3b:	mov    rbp,r12
   140009f3e:	lea    rcx,[rbx+0x30]
   140009f42:	mov    rdx,rbp
   140009f45:	call   0x140001630
   140009f4a:	or     rcx,0xffffffffffffffff
   140009f4e:	xor    eax,eax
   140009f50:	lea    rdi,[rip+0x5fa1]        # 0x14000fef8
   140009f57:	repnz scas al,BYTE PTR es:[rdi]
   140009f59:	not    rcx
   140009f5c:	lea    rdx,[rcx-0x1]
   140009f60:	lea    rcx,[rip+0x5f91]        # 0x14000fef8
   140009f67:	call   QWORD PTR [rip+0x22bb]        # 0x14000c228
   140009f6d:	mov    rcx,QWORD PTR [rbx+0x38]
   140009f71:	lea    rdx,[rsp+0x60]
   140009f76:	mov    QWORD PTR [rsp+0x60],rax
   140009f7b:	call   QWORD PTR [rip+0x3527]        # 0x14000d4a8
   140009f81:	lea    rcx,[rsp+0x60]
   140009f86:	call   QWORD PTR [rip+0x2454]        # 0x14000c3e0
   140009f8c:	mov    rcx,QWORD PTR [rbx+0x70]
   140009f90:	xor    edx,edx
   140009f92:	mov    rax,QWORD PTR [rcx]
   140009f95:	call   QWORD PTR [rax+0x58]
   140009f98:	mov    r9d,r12d
   140009f9b:	xor    r8d,r8d
   140009f9e:	mov    rdx,rbp
   140009fa1:	mov    rcx,rsi
   140009fa4:	call   QWORD PTR [rip+0x34ae]        # 0x14000d458
   140009faa:	mov    rdx,QWORD PTR [rbx+0x58]
   140009fae:	lea    rdi,[rip+0x5f33]        # 0x14000fee8
   140009fb5:	lea    r8,[rip+0x5f14]        # 0x14000fed0
   140009fbc:	lea    rcx,[rsp+0x60]
   140009fc1:	mov    r9,rbx
   140009fc4:	mov    DWORD PTR [rsp+0x28],r12d
   140009fc9:	mov    QWORD PTR [rsp+0x20],rdi
   140009fce:	call   QWORD PTR [rip+0x21dc]        # 0x14000c1b0
   140009fd4:	lea    rcx,[rsp+0x60]
   140009fd9:	call   QWORD PTR [rip+0x21d9]        # 0x14000c1b8
   140009fdf:	mov    rdx,QWORD PTR [rbx+0x68]
   140009fe3:	lea    r8,[rip+0x5ee6]        # 0x14000fed0
   140009fea:	lea    rcx,[rsp+0x60]
   140009fef:	mov    r9,rbx
   140009ff2:	mov    DWORD PTR [rsp+0x28],r12d
   140009ff7:	mov    QWORD PTR [rsp+0x20],rdi
   140009ffc:	call   QWORD PTR [rip+0x21ae]        # 0x14000c1b0
   14000a002:	lea    rcx,[rsp+0x60]
   14000a007:	call   QWORD PTR [rip+0x21ab]        # 0x14000c1b8
   14000a00d:	mov    ecx,0x30
   14000a012:	call   0x14000b106
   14000a017:	mov    rbp,rax
   14000a01a:	test   rax,rax
   14000a01d:	je     0x14000a038
   14000a01f:	mov    r8d,r12d
   14000a022:	mov    rdx,rbx
   14000a025:	mov    rcx,rax
   14000a028:	call   QWORD PTR [rip+0x340a]        # 0x14000d438
   14000a02e:	mov    QWORD PTR [rbp+0x0],r13
   14000a032:	mov    QWORD PTR [rbp+0x10],r14
   14000a036:	jmp    0x14000a03b
   14000a038:	mov    rbp,r12
   14000a03b:	lea    rcx,[rbx+0x80]
   14000a042:	mov    rdx,rbp
   14000a045:	call   0x140001630
   14000a04a:	or     rcx,0xffffffffffffffff
   14000a04e:	xor    eax,eax
   14000a050:	lea    rdi,[rip+0x5e71]        # 0x14000fec8
   14000a057:	repnz scas al,BYTE PTR es:[rdi]
   14000a059:	not    rcx
   14000a05c:	lea    rdx,[rcx-0x1]
   14000a060:	lea    rcx,[rip+0x5e61]        # 0x14000fec8
   14000a067:	call   QWORD PTR [rip+0x21bb]        # 0x14000c228
   14000a06d:	mov    rcx,QWORD PTR [rbx+0x88]
   14000a074:	lea    rdx,[rsp+0x60]
   14000a079:	mov    QWORD PTR [rsp+0x60],rax
   14000a07e:	call   QWORD PTR [rip+0x3424]        # 0x14000d4a8
   14000a084:	lea    rcx,[rsp+0x60]
   14000a089:	call   QWORD PTR [rip+0x2351]        # 0x14000c3e0
   14000a08f:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000a096:	xor    edx,edx
   14000a098:	mov    rax,QWORD PTR [rcx]
   14000a09b:	call   QWORD PTR [rax+0x58]
   14000a09e:	mov    r9d,r12d
   14000a0a1:	xor    r8d,r8d
   14000a0a4:	mov    rdx,rbp
   14000a0a7:	mov    rcx,rsi
   14000a0aa:	call   QWORD PTR [rip+0x33a8]        # 0x14000d458
   14000a0b0:	mov    rdx,QWORD PTR [rbx+0xa8]
   14000a0b7:	lea    rdi,[rip+0x5dfa]        # 0x14000feb8
   14000a0be:	lea    r8,[rip+0x5e0b]        # 0x14000fed0
   14000a0c5:	lea    rcx,[rsp+0x60]
   14000a0ca:	mov    r9,rbx
   14000a0cd:	mov    DWORD PTR [rsp+0x28],r12d
   14000a0d2:	mov    QWORD PTR [rsp+0x20],rdi
   14000a0d7:	call   QWORD PTR [rip+0x20d3]        # 0x14000c1b0
   14000a0dd:	lea    rcx,[rsp+0x60]
   14000a0e2:	call   QWORD PTR [rip+0x20d0]        # 0x14000c1b8
   14000a0e8:	mov    rdx,QWORD PTR [rbx+0xb8]
   14000a0ef:	lea    r8,[rip+0x5dda]        # 0x14000fed0
   14000a0f6:	lea    rcx,[rsp+0x60]
   14000a0fb:	mov    r9,rbx
   14000a0fe:	mov    DWORD PTR [rsp+0x28],r12d
   14000a103:	mov    QWORD PTR [rsp+0x20],rdi
   14000a108:	call   QWORD PTR [rip+0x20a2]        # 0x14000c1b0
   14000a10e:	lea    rcx,[rsp+0x60]
   14000a113:	call   QWORD PTR [rip+0x209f]        # 0x14000c1b8
   14000a119:	mov    ecx,0x30
   14000a11e:	call   0x14000b106
   14000a123:	mov    rbp,rax
   14000a126:	test   rax,rax
   14000a129:	je     0x14000a144
   14000a12b:	mov    r8d,r12d
   14000a12e:	mov    rdx,rbx
   14000a131:	mov    rcx,rax
   14000a134:	call   QWORD PTR [rip+0x32fe]        # 0x14000d438
   14000a13a:	mov    QWORD PTR [rbp+0x0],r13
   14000a13e:	mov    QWORD PTR [rbp+0x10],r14
   14000a142:	jmp    0x14000a147
   14000a144:	mov    rbp,r12
   14000a147:	lea    rcx,[rbx+0xd0]
   14000a14e:	mov    rdx,rbp
   14000a151:	call   0x140001630
   14000a156:	or     rcx,0xffffffffffffffff
   14000a15a:	xor    eax,eax
   14000a15c:	lea    rdi,[rip+0x342d]        # 0x14000d590
   14000a163:	repnz scas al,BYTE PTR es:[rdi]
   14000a165:	not    rcx
   14000a168:	lea    rdx,[rcx-0x1]
   14000a16c:	lea    rcx,[rip+0x341d]        # 0x14000d590
   14000a173:	call   QWORD PTR [rip+0x20af]        # 0x14000c228
   14000a179:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000a180:	lea    rdx,[rsp+0x60]
   14000a185:	mov    QWORD PTR [rsp+0x60],rax
   14000a18a:	call   QWORD PTR [rip+0x3318]        # 0x14000d4a8
   14000a190:	lea    rcx,[rsp+0x60]
   14000a195:	call   QWORD PTR [rip+0x2245]        # 0x14000c3e0
   14000a19b:	mov    r9d,r12d
   14000a19e:	xor    r8d,r8d
   14000a1a1:	mov    rdx,rbp
   14000a1a4:	mov    rcx,rsi
   14000a1a7:	call   QWORD PTR [rip+0x32ab]        # 0x14000d458
   14000a1ad:	mov    rdx,QWORD PTR [rbx+0x110]
   14000a1b4:	lea    rdi,[rip+0x5ced]        # 0x14000fea8
   14000a1bb:	lea    r8,[rip+0x5cd6]        # 0x14000fe98
   14000a1c2:	lea    rcx,[rsp+0x60]
   14000a1c7:	mov    r9,rbx
   14000a1ca:	mov    DWORD PTR [rsp+0x28],r12d
   14000a1cf:	mov    QWORD PTR [rsp+0x20],rdi
   14000a1d4:	call   QWORD PTR [rip+0x1fd6]        # 0x14000c1b0
   14000a1da:	lea    rcx,[rsp+0x60]
   14000a1df:	call   QWORD PTR [rip+0x1fd3]        # 0x14000c1b8
   14000a1e5:	mov    rdx,QWORD PTR [rbx+0xf8]
   14000a1ec:	lea    r8,[rip+0x5cdd]        # 0x14000fed0
   14000a1f3:	lea    rcx,[rsp+0x60]
   14000a1f8:	mov    r9,rbx
   14000a1fb:	mov    DWORD PTR [rsp+0x28],r12d
   14000a200:	mov    QWORD PTR [rsp+0x20],rdi
   14000a205:	call   QWORD PTR [rip+0x1fa5]        # 0x14000c1b0
   14000a20b:	lea    rcx,[rsp+0x60]
   14000a210:	call   QWORD PTR [rip+0x1fa2]        # 0x14000c1b8
   14000a216:	mov    rdx,QWORD PTR [rbx+0x108]
   14000a21d:	lea    r8,[rip+0x5cac]        # 0x14000fed0
   14000a224:	lea    rcx,[rsp+0x60]
   14000a229:	mov    r9,rbx
   14000a22c:	mov    DWORD PTR [rsp+0x28],r12d
   14000a231:	mov    QWORD PTR [rsp+0x20],rdi
   14000a236:	call   QWORD PTR [rip+0x1f74]        # 0x14000c1b0
   14000a23c:	lea    rcx,[rsp+0x60]
   14000a241:	call   QWORD PTR [rip+0x1f71]        # 0x14000c1b8
   14000a247:	mov    rbp,QWORD PTR [rsp+0x70]
   14000a24c:	mov    rax,rbx
   14000a24f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a254:	add    rsp,0x30
   14000a258:	pop    r14
   14000a25a:	pop    r13
   14000a25c:	pop    r12
   14000a25e:	pop    rdi
   14000a25f:	pop    rsi
   14000a260:	ret    
   14000a261:	int3   
   14000a262:	int3   
   14000a263:	int3   
   14000a264:	int3   
   14000a265:	int3   
   14000a266:	int3   
   14000a267:	int3   
   14000a268:	int3   
   14000a269:	int3   
   14000a26a:	int3   
   14000a26b:	int3   
   14000a26c:	int3   
   14000a26d:	int3   
   14000a26e:	int3   
   14000a26f:	int3   
   14000a270:	sub    rcx,0x10
   14000a274:	jmp    0x14000a280
   14000a279:	int3   
   14000a27a:	int3   
   14000a27b:	int3   
   14000a27c:	int3   
   14000a27d:	int3   
   14000a27e:	int3   
   14000a27f:	int3   
   14000a280:	mov    QWORD PTR [rsp+0x8],rbx
   14000a285:	push   rdi
   14000a286:	sub    rsp,0x20
   14000a28a:	mov    rdi,rcx
   14000a28d:	add    rcx,0x128
   14000a294:	mov    ebx,edx
   14000a296:	call   QWORD PTR [rip+0x2134]        # 0x14000c3d0
   14000a29c:	mov    rcx,rdi
   14000a29f:	call   QWORD PTR [rip+0x23ab]        # 0x14000c650
   14000a2a5:	test   bl,0x1
   14000a2a8:	je     0x14000a2b2
   14000a2aa:	mov    rcx,rdi
   14000a2ad:	call   0x14000b100
   14000a2b2:	mov    rax,rdi
   14000a2b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a2ba:	add    rsp,0x20
   14000a2be:	pop    rdi
   14000a2bf:	ret    
   14000a2c0:	mov    r10,rdx
   14000a2c3:	mov    r9,rcx
   14000a2c6:	test   rdx,rdx
   14000a2c9:	jne    0x14000a2ce
   14000a2cb:	xor    eax,eax
   14000a2cd:	ret    
   14000a2ce:	lea    r8,[rip+0x7333]        # 0x140011608
   14000a2d5:	mov    rax,rdx
   14000a2d8:	sub    r8,rdx
   14000a2db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a2e0:	movzx  edx,BYTE PTR [rax]
   14000a2e3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000a2e8:	sub    edx,ecx
   14000a2ea:	jne    0x14000a2f3
   14000a2ec:	inc    rax
   14000a2ef:	test   ecx,ecx
   14000a2f1:	jne    0x14000a2e0
   14000a2f3:	test   edx,edx
   14000a2f5:	jne    0x14000a2fb
   14000a2f7:	mov    rax,r9
   14000a2fa:	ret    
   14000a2fb:	mov    rdx,r10
   14000a2fe:	mov    rcx,r9
   14000a301:	rex.W jmp QWORD PTR [rip+0x2eb0]        # 0x14000d1b8
   14000a308:	int3   
   14000a309:	int3   
   14000a30a:	int3   
   14000a30b:	int3   
   14000a30c:	int3   
   14000a30d:	int3   
   14000a30e:	int3   
   14000a30f:	int3   
   14000a310:	lea    rdx,[rip+0x13229]        # 0x14001d540
   14000a317:	xor    r9d,r9d
   14000a31a:	xor    r8d,r8d
   14000a31d:	rex.W jmp QWORD PTR [rip+0x1e54]        # 0x14000c178
   14000a324:	int3   
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	int3   
   14000a32a:	int3   
   14000a32b:	int3   
   14000a32c:	int3   
   14000a32d:	int3   
   14000a32e:	int3   
   14000a32f:	int3   
   14000a330:	sub    rsp,0x38
   14000a334:	mov    QWORD PTR [rsp+0x28],rdx
   14000a339:	lea    r9,[rsp+0x20]
   14000a33e:	lea    rdx,[rip+0x131fb]        # 0x14001d540
   14000a345:	mov    r8d,0x1
   14000a34b:	mov    QWORD PTR [rsp+0x20],0x0
   14000a354:	call   QWORD PTR [rip+0x1e1e]        # 0x14000c178
   14000a35a:	add    rsp,0x38
   14000a35e:	ret    
   14000a35f:	int3   
   14000a360:	sub    rsp,0x38
   14000a364:	test   edx,edx
   14000a366:	jne    0x14000a3fb
   14000a36c:	test   r8d,r8d
   14000a36f:	je     0x14000a3e3
   14000a371:	sub    r8d,0x1
   14000a375:	je     0x14000a3b4
   14000a377:	sub    r8d,0x1
   14000a37b:	je     0x14000a3a7
   14000a37d:	sub    r8d,0x1
   14000a381:	je     0x14000a39a
   14000a383:	cmp    r8d,0x1
   14000a387:	jne    0x14000a48d
   14000a38d:	mov    rdx,QWORD PTR [r9+0x8]
   14000a391:	add    rsp,0x38
   14000a395:	jmp    0x140006ca0
   14000a39a:	mov    rdx,QWORD PTR [r9+0x8]
   14000a39e:	add    rsp,0x38
   14000a3a2:	jmp    0x140005e20
   14000a3a7:	mov    rdx,QWORD PTR [r9+0x8]
   14000a3ab:	add    rsp,0x38
   14000a3af:	jmp    0x1400025c0
   14000a3b4:	mov    rax,QWORD PTR [r9+0x8]
   14000a3b8:	lea    rdx,[rip+0x13181]        # 0x14001d540
   14000a3bf:	lea    r9,[rsp+0x20]
   14000a3c4:	mov    r8d,0x1
   14000a3ca:	mov    QWORD PTR [rsp+0x20],0x0
   14000a3d3:	mov    QWORD PTR [rsp+0x28],rax
   14000a3d8:	call   QWORD PTR [rip+0x1d9a]        # 0x14000c178
   14000a3de:	add    rsp,0x38
   14000a3e2:	ret    
   14000a3e3:	lea    rdx,[rip+0x13156]        # 0x14001d540
   14000a3ea:	xor    r9d,r9d
   14000a3ed:	xor    r8d,r8d
   14000a3f0:	add    rsp,0x38
   14000a3f4:	rex.W jmp QWORD PTR [rip+0x1d7d]        # 0x14000c178
   14000a3fb:	cmp    edx,0xa
   14000a3fe:	jne    0x14000a44e
   14000a400:	mov    rcx,QWORD PTR [r9+0x8]
   14000a404:	mov    rdx,QWORD PTR [r9]
   14000a407:	lea    r8,[rip+0xffffffffffffff02]        # 0x14000a310
   14000a40e:	mov    rax,QWORD PTR [rcx]
   14000a411:	cmp    rax,r8
   14000a414:	jne    0x14000a42c
   14000a416:	test   rax,rax
   14000a419:	je     0x14000a421
   14000a41b:	cmp    DWORD PTR [rcx+0x8],0x0
   14000a41f:	jne    0x14000a42c
   14000a421:	mov    DWORD PTR [rdx],0x0
   14000a427:	add    rsp,0x38
   14000a42b:	ret    
   14000a42c:	lea    r8,[rip+0xfffffffffffffefd]        # 0x14000a330
   14000a433:	cmp    rax,r8
   14000a436:	jne    0x14000a48d
   14000a438:	test   rax,rax
   14000a43b:	je     0x14000a443
   14000a43d:	cmp    DWORD PTR [rcx+0x8],0x0
   14000a441:	jne    0x14000a48d
   14000a443:	mov    DWORD PTR [rdx],0x1
   14000a449:	add    rsp,0x38
   14000a44d:	ret    
   14000a44e:	cmp    edx,0x1
   14000a451:	jne    0x14000a492
   14000a453:	mov    QWORD PTR [rsp+0x30],rbx
   14000a458:	mov    rbx,QWORD PTR [r9]
   14000a45b:	test   r8d,r8d
   14000a45e:	jne    0x14000a488
   14000a460:	lea    rdx,[rcx+0x30]
   14000a464:	lea    rcx,[rsp+0x20]
   14000a469:	call   QWORD PTR [rip+0x1ef1]        # 0x14000c360
   14000a46f:	lea    rdx,[rsp+0x20]
   14000a474:	mov    rcx,rbx
   14000a477:	call   QWORD PTR [rip+0x1e3b]        # 0x14000c2b8
   14000a47d:	lea    rcx,[rsp+0x20]
   14000a482:	call   QWORD PTR [rip+0x1ee8]        # 0x14000c370
   14000a488:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a48d:	add    rsp,0x38
   14000a491:	ret    
   14000a492:	cmp    edx,0x2
   14000a495:	jne    0x14000a48d
   14000a497:	test   r8d,r8d
   14000a49a:	jne    0x14000a48d
   14000a49c:	mov    rdx,QWORD PTR [r9]
   14000a49f:	add    rsp,0x38
   14000a4a3:	jmp    0x1400025c0
   14000a4a8:	int3   
   14000a4a9:	int3   
   14000a4aa:	int3   
   14000a4ab:	int3   
   14000a4ac:	int3   
   14000a4ad:	int3   
   14000a4ae:	int3   
   14000a4af:	int3   
   14000a4b0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a4b4:	cmp    QWORD PTR [rcx+0x28],0x0
   14000a4b9:	je     0x14000a4c2
   14000a4bb:	rex.W jmp QWORD PTR [rip+0x1cae]        # 0x14000c170
   14000a4c2:	lea    rax,[rip+0x13077]        # 0x14001d540
   14000a4c9:	ret    
   14000a4ca:	int3   
   14000a4cb:	int3   
   14000a4cc:	int3   
   14000a4cd:	int3   
   14000a4ce:	int3   
   14000a4cf:	int3   
   14000a4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000a4da:	mov    QWORD PTR [rsp+0x18],rsi
   14000a4df:	push   rdi
   14000a4e0:	sub    rsp,0x20
   14000a4e4:	mov    rsi,r9
   14000a4e7:	mov    edi,edx
   14000a4e9:	mov    rbp,rcx
   14000a4ec:	call   QWORD PTR [rip+0x2cbe]        # 0x14000d1b0
   14000a4f2:	mov    ebx,eax
   14000a4f4:	test   eax,eax
   14000a4f6:	js     0x14000a571
   14000a4f8:	test   edi,edi
   14000a4fa:	jne    0x14000a516
   14000a4fc:	cmp    eax,0x5
   14000a4ff:	jge    0x14000a511
   14000a501:	mov    r9,rsi
   14000a504:	mov    r8d,eax
   14000a507:	xor    edx,edx
   14000a509:	mov    rcx,rbp
   14000a50c:	call   0x14000a360
   14000a511:	sub    ebx,0x5
   14000a514:	jmp    0x14000a56f
   14000a516:	cmp    edi,0xc
   14000a519:	jne    0x14000a52e
   14000a51b:	cmp    eax,0x5
   14000a51e:	jge    0x14000a529
   14000a520:	mov    rax,QWORD PTR [rsi]
   14000a523:	mov    DWORD PTR [rax],0xffffffff
   14000a529:	sub    ebx,0x5
   14000a52c:	jmp    0x14000a56f
   14000a52e:	cmp    edi,0x1
   14000a531:	je     0x14000a55d
   14000a533:	cmp    edi,0x2
   14000a536:	je     0x14000a55d
   14000a538:	cmp    edi,0x3
   14000a53b:	je     0x14000a55d
   14000a53d:	cmp    edi,0xb
   14000a540:	je     0x14000a55d
   14000a542:	cmp    edi,0x4
   14000a545:	je     0x14000a56d
   14000a547:	cmp    edi,0x5
   14000a54a:	je     0x14000a56d
   14000a54c:	cmp    edi,0x6
   14000a54f:	je     0x14000a56d
   14000a551:	cmp    edi,0x7
   14000a554:	je     0x14000a56d
   14000a556:	cmp    edi,0x8
   14000a559:	jne    0x14000a56f
   14000a55b:	jmp    0x14000a56d
   14000a55d:	mov    r9,rsi
   14000a560:	mov    r8d,eax
   14000a563:	mov    edx,edi
   14000a565:	mov    rcx,rbp
   14000a568:	call   0x14000a360
   14000a56d:	dec    ebx
   14000a56f:	mov    eax,ebx
   14000a571:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a576:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a57b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a580:	add    rsp,0x20
   14000a584:	pop    rdi
   14000a585:	ret    
   14000a586:	int3   
   14000a587:	int3   
   14000a588:	int3   
   14000a589:	int3   
   14000a58a:	int3   
   14000a58b:	int3   
   14000a58c:	int3   
   14000a58d:	int3   
   14000a58e:	int3   
   14000a58f:	int3   
   14000a590:	sub    rsp,0x28
   14000a594:	test   edx,edx
   14000a596:	jne    0x14000a5b7
   14000a598:	test   r8d,r8d
   14000a59b:	je     0x14000a5b2
   14000a59d:	cmp    r8d,0x1
   14000a5a1:	jne    0x14000a5b7
   14000a5a3:	mov    rax,QWORD PTR [r9+0x8]
   14000a5a7:	mov    edx,DWORD PTR [rax]
   14000a5a9:	add    rsp,0x28
   14000a5ad:	jmp    0x1400083f0
   14000a5b2:	call   0x1400078b0
   14000a5b7:	add    rsp,0x28
   14000a5bb:	ret    
   14000a5bc:	int3   
   14000a5bd:	int3   
   14000a5be:	int3   
   14000a5bf:	int3   
   14000a5c0:	mov    r10,rdx
   14000a5c3:	mov    r9,rcx
   14000a5c6:	test   rdx,rdx
   14000a5c9:	jne    0x14000a5ce
   14000a5cb:	xor    eax,eax
   14000a5cd:	ret    
   14000a5ce:	lea    r8,[rip+0x7203]        # 0x1400117d8
   14000a5d5:	mov    rax,rdx
   14000a5d8:	sub    r8,rdx
   14000a5db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a5e0:	movzx  edx,BYTE PTR [rax]
   14000a5e3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000a5e8:	sub    edx,ecx
   14000a5ea:	jne    0x14000a5f3
   14000a5ec:	inc    rax
   14000a5ef:	test   ecx,ecx
   14000a5f1:	jne    0x14000a5e0
   14000a5f3:	test   edx,edx
   14000a5f5:	jne    0x14000a5fb
   14000a5f7:	mov    rax,r9
   14000a5fa:	ret    
   14000a5fb:	mov    rdx,r10
   14000a5fe:	mov    rcx,r9
   14000a601:	rex.W jmp QWORD PTR [rip+0x2948]        # 0x14000cf50
   14000a608:	int3   
   14000a609:	int3   
   14000a60a:	int3   
   14000a60b:	int3   
   14000a60c:	int3   
   14000a60d:	int3   
   14000a60e:	int3   
   14000a60f:	int3   
   14000a610:	mov    QWORD PTR [rsp+0x8],rbx
   14000a615:	mov    QWORD PTR [rsp+0x10],rbp
   14000a61a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a61f:	push   rdi
   14000a620:	sub    rsp,0x20
   14000a624:	mov    rbp,r9
   14000a627:	mov    edi,edx
   14000a629:	mov    rsi,rcx
   14000a62c:	call   QWORD PTR [rip+0x2926]        # 0x14000cf58
   14000a632:	mov    ebx,eax
   14000a634:	test   eax,eax
   14000a636:	js     0x14000a67d
   14000a638:	test   edi,edi
   14000a63a:	jne    0x14000a664
   14000a63c:	cmp    eax,0x2
   14000a63f:	jge    0x14000a678
   14000a641:	test   eax,eax
   14000a643:	je     0x14000a65a
   14000a645:	cmp    eax,0x1
   14000a648:	jne    0x14000a678
   14000a64a:	mov    rax,QWORD PTR [rbp+0x8]
   14000a64e:	mov    rcx,rsi
   14000a651:	mov    edx,DWORD PTR [rax]
   14000a653:	call   0x1400083f0
   14000a658:	jmp    0x14000a678
   14000a65a:	mov    rcx,rsi
   14000a65d:	call   0x1400078b0
   14000a662:	jmp    0x14000a678
   14000a664:	cmp    edi,0xc
   14000a667:	jne    0x14000a67b
   14000a669:	cmp    eax,0x2
   14000a66c:	jge    0x14000a678
   14000a66e:	mov    rax,QWORD PTR [rbp+0x0]
   14000a672:	mov    DWORD PTR [rax],0xffffffff
   14000a678:	sub    ebx,0x2
   14000a67b:	mov    eax,ebx
   14000a67d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a682:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a687:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a68c:	add    rsp,0x20
   14000a690:	pop    rdi
   14000a691:	ret    
   14000a692:	int3   
   14000a693:	int3   
   14000a694:	int3   
   14000a695:	int3   
   14000a696:	int3   
   14000a697:	int3   
   14000a698:	int3   
   14000a699:	int3   
   14000a69a:	int3   
   14000a69b:	int3   
   14000a69c:	int3   
   14000a69d:	int3   
   14000a69e:	int3   
   14000a69f:	int3   
   14000a6a0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a6a4:	cmp    QWORD PTR [rcx+0x28],0x0
   14000a6a9:	je     0x14000a6b2
   14000a6ab:	rex.W jmp QWORD PTR [rip+0x1abe]        # 0x14000c170
   14000a6b2:	lea    rax,[rip+0x12ebf]        # 0x14001d578
   14000a6b9:	ret    
   14000a6ba:	int3   
   14000a6bb:	int3   
   14000a6bc:	int3   
   14000a6bd:	int3   
   14000a6be:	int3   
   14000a6bf:	int3   
   14000a6c0:	sub    rsp,0x28
   14000a6c4:	test   edx,edx
   14000a6c6:	jne    0x14000a6f0
   14000a6c8:	test   r8d,r8d
   14000a6cb:	je     0x14000a6eb
   14000a6cd:	sub    r8d,0x1
   14000a6d1:	je     0x14000a6e2
   14000a6d3:	cmp    r8d,0x1
   14000a6d7:	jne    0x14000a6f0
   14000a6d9:	add    rsp,0x28
   14000a6dd:	jmp    0x140009bc0
   14000a6e2:	add    rsp,0x28
   14000a6e6:	jmp    0x140009b30
   14000a6eb:	call   0x140009aa0
   14000a6f0:	add    rsp,0x28
   14000a6f4:	ret    
   14000a6f5:	int3   
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	int3   
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	mov    r10,rdx
   14000a703:	mov    r9,rcx
   14000a706:	test   rdx,rdx
   14000a709:	jne    0x14000a70e
   14000a70b:	xor    eax,eax
   14000a70d:	ret    
   14000a70e:	lea    r8,[rip+0x71f3]        # 0x140011908
   14000a715:	mov    rax,rdx
   14000a718:	sub    r8,rdx
   14000a71b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a720:	movzx  edx,BYTE PTR [rax]
   14000a723:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000a728:	sub    edx,ecx
   14000a72a:	jne    0x14000a733
   14000a72c:	inc    rax
   14000a72f:	test   ecx,ecx
   14000a731:	jne    0x14000a720
   14000a733:	test   edx,edx
   14000a735:	jne    0x14000a73b
   14000a737:	mov    rax,r9
   14000a73a:	ret    
   14000a73b:	mov    rdx,r10
   14000a73e:	mov    rcx,r9
   14000a741:	rex.W jmp QWORD PTR [rip+0x2a70]        # 0x14000d1b8
   14000a748:	int3   
   14000a749:	int3   
   14000a74a:	int3   
   14000a74b:	int3   
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	mov    QWORD PTR [rsp+0x8],rbx
   14000a755:	mov    QWORD PTR [rsp+0x10],rbp
   14000a75a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a75f:	push   rdi
   14000a760:	sub    rsp,0x20
   14000a764:	mov    rbp,r9
   14000a767:	mov    esi,edx
   14000a769:	mov    rdi,rcx
   14000a76c:	call   QWORD PTR [rip+0x2a3e]        # 0x14000d1b0
   14000a772:	mov    ebx,eax
   14000a774:	test   eax,eax
   14000a776:	js     0x14000a7c8
   14000a778:	test   esi,esi
   14000a77a:	jne    0x14000a7af
   14000a77c:	cmp    eax,0x3
   14000a77f:	jge    0x14000a7c3
   14000a781:	mov    ecx,eax
   14000a783:	test   eax,eax
   14000a785:	je     0x14000a7a5
   14000a787:	sub    ecx,0x1
   14000a78a:	je     0x14000a79b
   14000a78c:	cmp    ecx,0x1
   14000a78f:	jne    0x14000a7c3
   14000a791:	mov    rcx,rdi
   14000a794:	call   0x140009bc0
   14000a799:	jmp    0x14000a7c3
   14000a79b:	mov    rcx,rdi
   14000a79e:	call   0x140009b30
   14000a7a3:	jmp    0x14000a7c3
   14000a7a5:	mov    rcx,rdi
   14000a7a8:	call   0x140009aa0
   14000a7ad:	jmp    0x14000a7c3
   14000a7af:	cmp    esi,0xc
   14000a7b2:	jne    0x14000a7c6
   14000a7b4:	cmp    eax,0x3
   14000a7b7:	jge    0x14000a7c3
   14000a7b9:	mov    rax,QWORD PTR [rbp+0x0]
   14000a7bd:	mov    DWORD PTR [rax],0xffffffff
   14000a7c3:	sub    ebx,0x3
   14000a7c6:	mov    eax,ebx
   14000a7c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a7cd:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a7d2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a7d7:	add    rsp,0x20
   14000a7db:	pop    rdi
   14000a7dc:	ret    
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a7e4:	cmp    QWORD PTR [rcx+0x28],0x0
   14000a7e9:	je     0x14000a7f2
   14000a7eb:	rex.W jmp QWORD PTR [rip+0x197e]        # 0x14000c170
   14000a7f2:	lea    rax,[rip+0x12db7]        # 0x14001d5b0
   14000a7f9:	ret    
   14000a7fa:	jmp    QWORD PTR [rip+0x2be0]        # 0x14000d3e0
   14000a800:	jmp    QWORD PTR [rip+0x2bd2]        # 0x14000d3d8
   14000a806:	jmp    QWORD PTR [rip+0x2bc4]        # 0x14000d3d0
   14000a80c:	jmp    QWORD PTR [rip+0x2bb6]        # 0x14000d3c8
   14000a812:	jmp    QWORD PTR [rip+0x2ba8]        # 0x14000d3c0
   14000a818:	jmp    QWORD PTR [rip+0x2b9a]        # 0x14000d3b8
   14000a81e:	jmp    QWORD PTR [rip+0x2b8c]        # 0x14000d3b0
   14000a824:	jmp    QWORD PTR [rip+0x2b7e]        # 0x14000d3a8
   14000a82a:	jmp    QWORD PTR [rip+0x2b70]        # 0x14000d3a0
   14000a830:	jmp    QWORD PTR [rip+0x2b62]        # 0x14000d398
   14000a836:	jmp    QWORD PTR [rip+0x2b54]        # 0x14000d390
   14000a83c:	jmp    QWORD PTR [rip+0x2b46]        # 0x14000d388
   14000a842:	jmp    QWORD PTR [rip+0x2b38]        # 0x14000d380
   14000a848:	jmp    QWORD PTR [rip+0x2b2a]        # 0x14000d378
   14000a84e:	jmp    QWORD PTR [rip+0x2b1c]        # 0x14000d370
   14000a854:	jmp    QWORD PTR [rip+0x2b0e]        # 0x14000d368
   14000a85a:	jmp    QWORD PTR [rip+0x2b00]        # 0x14000d360
   14000a860:	jmp    QWORD PTR [rip+0x2af2]        # 0x14000d358
   14000a866:	jmp    QWORD PTR [rip+0x2ae4]        # 0x14000d350
   14000a86c:	jmp    QWORD PTR [rip+0x2ad6]        # 0x14000d348
   14000a872:	jmp    QWORD PTR [rip+0x2ac8]        # 0x14000d340
   14000a878:	jmp    QWORD PTR [rip+0x2aba]        # 0x14000d338
   14000a87e:	jmp    QWORD PTR [rip+0x2aac]        # 0x14000d330
   14000a884:	jmp    QWORD PTR [rip+0x2a9e]        # 0x14000d328
   14000a88a:	jmp    QWORD PTR [rip+0x2a90]        # 0x14000d320
   14000a890:	jmp    QWORD PTR [rip+0x2a82]        # 0x14000d318
   14000a896:	jmp    QWORD PTR [rip+0x2a74]        # 0x14000d310
   14000a89c:	jmp    QWORD PTR [rip+0x2a66]        # 0x14000d308
   14000a8a2:	jmp    QWORD PTR [rip+0x2a58]        # 0x14000d300
   14000a8a8:	jmp    QWORD PTR [rip+0x2a4a]        # 0x14000d2f8
   14000a8ae:	jmp    QWORD PTR [rip+0x2a3c]        # 0x14000d2f0
   14000a8b4:	jmp    QWORD PTR [rip+0x2a2e]        # 0x14000d2e8
   14000a8ba:	jmp    QWORD PTR [rip+0x2a20]        # 0x14000d2e0
   14000a8c0:	jmp    QWORD PTR [rip+0x2a12]        # 0x14000d2d8
   14000a8c6:	jmp    QWORD PTR [rip+0x2a04]        # 0x14000d2d0
   14000a8cc:	jmp    QWORD PTR [rip+0x29f6]        # 0x14000d2c8
   14000a8d2:	jmp    QWORD PTR [rip+0x29e8]        # 0x14000d2c0
   14000a8d8:	jmp    QWORD PTR [rip+0x29da]        # 0x14000d2b8
   14000a8de:	jmp    QWORD PTR [rip+0x29cc]        # 0x14000d2b0
   14000a8e4:	jmp    QWORD PTR [rip+0x29be]        # 0x14000d2a8
   14000a8ea:	jmp    QWORD PTR [rip+0x29b0]        # 0x14000d2a0
   14000a8f0:	jmp    QWORD PTR [rip+0x29a2]        # 0x14000d298
   14000a8f6:	jmp    QWORD PTR [rip+0x2994]        # 0x14000d290
   14000a8fc:	jmp    QWORD PTR [rip+0x2986]        # 0x14000d288
   14000a902:	jmp    QWORD PTR [rip+0x2978]        # 0x14000d280
   14000a908:	jmp    QWORD PTR [rip+0x296a]        # 0x14000d278
   14000a90e:	jmp    QWORD PTR [rip+0x295c]        # 0x14000d270
   14000a914:	jmp    QWORD PTR [rip+0x294e]        # 0x14000d268
   14000a91a:	jmp    QWORD PTR [rip+0x2940]        # 0x14000d260
   14000a920:	jmp    QWORD PTR [rip+0x2932]        # 0x14000d258
   14000a926:	jmp    QWORD PTR [rip+0x2924]        # 0x14000d250
   14000a92c:	jmp    QWORD PTR [rip+0x2916]        # 0x14000d248
   14000a932:	jmp    QWORD PTR [rip+0x2908]        # 0x14000d240
   14000a938:	jmp    QWORD PTR [rip+0x28fa]        # 0x14000d238
   14000a93e:	jmp    QWORD PTR [rip+0x28ec]        # 0x14000d230
   14000a944:	jmp    QWORD PTR [rip+0x28de]        # 0x14000d228
   14000a94a:	jmp    QWORD PTR [rip+0x28d0]        # 0x14000d220
   14000a950:	jmp    QWORD PTR [rip+0x28c2]        # 0x14000d218
   14000a956:	jmp    QWORD PTR [rip+0x28b4]        # 0x14000d210
   14000a95c:	jmp    QWORD PTR [rip+0x28a6]        # 0x14000d208
   14000a962:	jmp    QWORD PTR [rip+0x2898]        # 0x14000d200
   14000a968:	jmp    QWORD PTR [rip+0x288a]        # 0x14000d1f8
   14000a96e:	jmp    QWORD PTR [rip+0x287c]        # 0x14000d1f0
   14000a974:	jmp    QWORD PTR [rip+0x286e]        # 0x14000d1e8
   14000a97a:	jmp    QWORD PTR [rip+0x2860]        # 0x14000d1e0
   14000a980:	jmp    QWORD PTR [rip+0x2852]        # 0x14000d1d8
   14000a986:	jmp    QWORD PTR [rip+0x2844]        # 0x14000d1d0
   14000a98c:	jmp    QWORD PTR [rip+0x2836]        # 0x14000d1c8
   14000a992:	jmp    QWORD PTR [rip+0x2828]        # 0x14000d1c0
   14000a998:	jmp    QWORD PTR [rip+0x281a]        # 0x14000d1b8
   14000a99e:	jmp    QWORD PTR [rip+0x280c]        # 0x14000d1b0
   14000a9a4:	jmp    QWORD PTR [rip+0x27fe]        # 0x14000d1a8
   14000a9aa:	jmp    QWORD PTR [rip+0x27f0]        # 0x14000d1a0
   14000a9b0:	jmp    QWORD PTR [rip+0x27e2]        # 0x14000d198
   14000a9b6:	jmp    QWORD PTR [rip+0x27d4]        # 0x14000d190
   14000a9bc:	jmp    QWORD PTR [rip+0x27c6]        # 0x14000d188
   14000a9c2:	jmp    QWORD PTR [rip+0x27b8]        # 0x14000d180
   14000a9c8:	jmp    QWORD PTR [rip+0x27aa]        # 0x14000d178
   14000a9ce:	jmp    QWORD PTR [rip+0x279c]        # 0x14000d170
   14000a9d4:	jmp    QWORD PTR [rip+0x278e]        # 0x14000d168
   14000a9da:	jmp    QWORD PTR [rip+0x2780]        # 0x14000d160
   14000a9e0:	jmp    QWORD PTR [rip+0x2772]        # 0x14000d158
   14000a9e6:	jmp    QWORD PTR [rip+0x2764]        # 0x14000d150
   14000a9ec:	jmp    QWORD PTR [rip+0x2756]        # 0x14000d148
   14000a9f2:	jmp    QWORD PTR [rip+0x2748]        # 0x14000d140
   14000a9f8:	jmp    QWORD PTR [rip+0x273a]        # 0x14000d138
   14000a9fe:	jmp    QWORD PTR [rip+0x272c]        # 0x14000d130
   14000aa04:	jmp    QWORD PTR [rip+0x271e]        # 0x14000d128
   14000aa0a:	jmp    QWORD PTR [rip+0x2710]        # 0x14000d120
   14000aa10:	jmp    QWORD PTR [rip+0x2702]        # 0x14000d118
   14000aa16:	jmp    QWORD PTR [rip+0x26f4]        # 0x14000d110
   14000aa1c:	jmp    QWORD PTR [rip+0x26e6]        # 0x14000d108
   14000aa22:	jmp    QWORD PTR [rip+0x26d8]        # 0x14000d100
   14000aa28:	jmp    QWORD PTR [rip+0x26ca]        # 0x14000d0f8
   14000aa2e:	jmp    QWORD PTR [rip+0x26bc]        # 0x14000d0f0
   14000aa34:	jmp    QWORD PTR [rip+0x26ae]        # 0x14000d0e8
   14000aa3a:	jmp    QWORD PTR [rip+0x26a0]        # 0x14000d0e0
   14000aa40:	jmp    QWORD PTR [rip+0x2692]        # 0x14000d0d8
   14000aa46:	jmp    QWORD PTR [rip+0x2684]        # 0x14000d0d0
   14000aa4c:	jmp    QWORD PTR [rip+0x2676]        # 0x14000d0c8
   14000aa52:	jmp    QWORD PTR [rip+0x2668]        # 0x14000d0c0
   14000aa58:	jmp    QWORD PTR [rip+0x265a]        # 0x14000d0b8
   14000aa5e:	jmp    QWORD PTR [rip+0x264c]        # 0x14000d0b0
   14000aa64:	jmp    QWORD PTR [rip+0x263e]        # 0x14000d0a8
   14000aa6a:	jmp    QWORD PTR [rip+0x2630]        # 0x14000d0a0
   14000aa70:	jmp    QWORD PTR [rip+0x2622]        # 0x14000d098
   14000aa76:	jmp    QWORD PTR [rip+0x2614]        # 0x14000d090
   14000aa7c:	jmp    QWORD PTR [rip+0x2606]        # 0x14000d088
   14000aa82:	jmp    QWORD PTR [rip+0x25f8]        # 0x14000d080
   14000aa88:	jmp    QWORD PTR [rip+0x25ea]        # 0x14000d078
   14000aa8e:	jmp    QWORD PTR [rip+0x25dc]        # 0x14000d070
   14000aa94:	jmp    QWORD PTR [rip+0x25ce]        # 0x14000d068
   14000aa9a:	jmp    QWORD PTR [rip+0x25c0]        # 0x14000d060
   14000aaa0:	jmp    QWORD PTR [rip+0x25b2]        # 0x14000d058
   14000aaa6:	jmp    QWORD PTR [rip+0x25a4]        # 0x14000d050
   14000aaac:	jmp    QWORD PTR [rip+0x2596]        # 0x14000d048
   14000aab2:	jmp    QWORD PTR [rip+0x2588]        # 0x14000d040
   14000aab8:	jmp    QWORD PTR [rip+0x257a]        # 0x14000d038
   14000aabe:	jmp    QWORD PTR [rip+0x256c]        # 0x14000d030
   14000aac4:	jmp    QWORD PTR [rip+0x255e]        # 0x14000d028
   14000aaca:	jmp    QWORD PTR [rip+0x2550]        # 0x14000d020
   14000aad0:	jmp    QWORD PTR [rip+0x2542]        # 0x14000d018
   14000aad6:	jmp    QWORD PTR [rip+0x2534]        # 0x14000d010
   14000aadc:	jmp    QWORD PTR [rip+0x2526]        # 0x14000d008
   14000aae2:	jmp    QWORD PTR [rip+0x2518]        # 0x14000d000
   14000aae8:	jmp    QWORD PTR [rip+0x250a]        # 0x14000cff8
   14000aaee:	jmp    QWORD PTR [rip+0x24fc]        # 0x14000cff0
   14000aaf4:	jmp    QWORD PTR [rip+0x24ee]        # 0x14000cfe8
   14000aafa:	jmp    QWORD PTR [rip+0x24e0]        # 0x14000cfe0
   14000ab00:	jmp    QWORD PTR [rip+0x24d2]        # 0x14000cfd8
   14000ab06:	jmp    QWORD PTR [rip+0x24c4]        # 0x14000cfd0
   14000ab0c:	jmp    QWORD PTR [rip+0x24b6]        # 0x14000cfc8
   14000ab12:	jmp    QWORD PTR [rip+0x24a8]        # 0x14000cfc0
   14000ab18:	jmp    QWORD PTR [rip+0x249a]        # 0x14000cfb8
   14000ab1e:	jmp    QWORD PTR [rip+0x248c]        # 0x14000cfb0
   14000ab24:	jmp    QWORD PTR [rip+0x247e]        # 0x14000cfa8
   14000ab2a:	jmp    QWORD PTR [rip+0x2470]        # 0x14000cfa0
   14000ab30:	jmp    QWORD PTR [rip+0x2462]        # 0x14000cf98
   14000ab36:	jmp    QWORD PTR [rip+0x2454]        # 0x14000cf90
   14000ab3c:	jmp    QWORD PTR [rip+0x2446]        # 0x14000cf88
   14000ab42:	jmp    QWORD PTR [rip+0x2438]        # 0x14000cf80
   14000ab48:	jmp    QWORD PTR [rip+0x242a]        # 0x14000cf78
   14000ab4e:	jmp    QWORD PTR [rip+0x241c]        # 0x14000cf70
   14000ab54:	jmp    QWORD PTR [rip+0x240e]        # 0x14000cf68
   14000ab5a:	jmp    QWORD PTR [rip+0x1f18]        # 0x14000ca78
   14000ab60:	jmp    QWORD PTR [rip+0x1a3a]        # 0x14000c5a0
   14000ab66:	jmp    QWORD PTR [rip+0x1a3c]        # 0x14000c5a8
   14000ab6c:	jmp    QWORD PTR [rip+0x1a3e]        # 0x14000c5b0
   14000ab72:	jmp    QWORD PTR [rip+0x1a40]        # 0x14000c5b8
   14000ab78:	jmp    QWORD PTR [rip+0x1a42]        # 0x14000c5c0
   14000ab7e:	jmp    QWORD PTR [rip+0x1a44]        # 0x14000c5c8
   14000ab84:	jmp    QWORD PTR [rip+0x1a46]        # 0x14000c5d0
   14000ab8a:	jmp    QWORD PTR [rip+0x1a48]        # 0x14000c5d8
   14000ab90:	jmp    QWORD PTR [rip+0x1a4a]        # 0x14000c5e0
   14000ab96:	jmp    QWORD PTR [rip+0x1a4c]        # 0x14000c5e8
   14000ab9c:	jmp    QWORD PTR [rip+0x1a4e]        # 0x14000c5f0
   14000aba2:	jmp    QWORD PTR [rip+0x1a50]        # 0x14000c5f8
   14000aba8:	jmp    QWORD PTR [rip+0x1a52]        # 0x14000c600
   14000abae:	jmp    QWORD PTR [rip+0x1a54]        # 0x14000c608
   14000abb4:	jmp    QWORD PTR [rip+0x1a56]        # 0x14000c610
   14000abba:	jmp    QWORD PTR [rip+0x1a58]        # 0x14000c618
   14000abc0:	jmp    QWORD PTR [rip+0x1a5a]        # 0x14000c620
   14000abc6:	jmp    QWORD PTR [rip+0x1a5c]        # 0x14000c628
   14000abcc:	jmp    QWORD PTR [rip+0x1a5e]        # 0x14000c630
   14000abd2:	jmp    QWORD PTR [rip+0x1b10]        # 0x14000c6e8
   14000abd8:	jmp    QWORD PTR [rip+0x1b12]        # 0x14000c6f0
   14000abde:	jmp    QWORD PTR [rip+0x1b14]        # 0x14000c6f8
   14000abe4:	jmp    QWORD PTR [rip+0x1b16]        # 0x14000c700
   14000abea:	jmp    QWORD PTR [rip+0x1b18]        # 0x14000c708
   14000abf0:	jmp    QWORD PTR [rip+0x1b1a]        # 0x14000c710
   14000abf6:	jmp    QWORD PTR [rip+0x1b1c]        # 0x14000c718
   14000abfc:	jmp    QWORD PTR [rip+0x1b1e]        # 0x14000c720
   14000ac02:	jmp    QWORD PTR [rip+0x1b20]        # 0x14000c728
   14000ac08:	jmp    QWORD PTR [rip+0x1b22]        # 0x14000c730
   14000ac0e:	jmp    QWORD PTR [rip+0x1b24]        # 0x14000c738
   14000ac14:	jmp    QWORD PTR [rip+0x1b26]        # 0x14000c740
   14000ac1a:	jmp    QWORD PTR [rip+0x1b28]        # 0x14000c748
   14000ac20:	jmp    QWORD PTR [rip+0x1b2a]        # 0x14000c750
   14000ac26:	jmp    QWORD PTR [rip+0x1b2c]        # 0x14000c758
   14000ac2c:	jmp    QWORD PTR [rip+0x1b2e]        # 0x14000c760
   14000ac32:	jmp    QWORD PTR [rip+0x1b30]        # 0x14000c768
   14000ac38:	jmp    QWORD PTR [rip+0x1b32]        # 0x14000c770
   14000ac3e:	jmp    QWORD PTR [rip+0x1b34]        # 0x14000c778
   14000ac44:	jmp    QWORD PTR [rip+0x1b36]        # 0x14000c780
   14000ac4a:	jmp    QWORD PTR [rip+0x1b38]        # 0x14000c788
   14000ac50:	jmp    QWORD PTR [rip+0x1b3a]        # 0x14000c790
   14000ac56:	jmp    QWORD PTR [rip+0x1b3c]        # 0x14000c798
   14000ac5c:	jmp    QWORD PTR [rip+0x1b3e]        # 0x14000c7a0
   14000ac62:	jmp    QWORD PTR [rip+0x1b40]        # 0x14000c7a8
   14000ac68:	jmp    QWORD PTR [rip+0x1b42]        # 0x14000c7b0
   14000ac6e:	jmp    QWORD PTR [rip+0x1b44]        # 0x14000c7b8
   14000ac74:	jmp    QWORD PTR [rip+0x1b46]        # 0x14000c7c0
   14000ac7a:	jmp    QWORD PTR [rip+0x1b48]        # 0x14000c7c8
   14000ac80:	jmp    QWORD PTR [rip+0x1b82]        # 0x14000c808
   14000ac86:	jmp    QWORD PTR [rip+0x1b84]        # 0x14000c810
   14000ac8c:	jmp    QWORD PTR [rip+0x1b86]        # 0x14000c818
   14000ac92:	jmp    QWORD PTR [rip+0x1b88]        # 0x14000c820
   14000ac98:	jmp    QWORD PTR [rip+0x1b8a]        # 0x14000c828
   14000ac9e:	jmp    QWORD PTR [rip+0x1b8c]        # 0x14000c830
   14000aca4:	jmp    QWORD PTR [rip+0x1b8e]        # 0x14000c838
   14000acaa:	jmp    QWORD PTR [rip+0x1b90]        # 0x14000c840
   14000acb0:	jmp    QWORD PTR [rip+0x1b92]        # 0x14000c848
   14000acb6:	jmp    QWORD PTR [rip+0x1b94]        # 0x14000c850
   14000acbc:	jmp    QWORD PTR [rip+0x1b96]        # 0x14000c858
   14000acc2:	jmp    QWORD PTR [rip+0x1b98]        # 0x14000c860
   14000acc8:	jmp    QWORD PTR [rip+0x1b9a]        # 0x14000c868
   14000acce:	jmp    QWORD PTR [rip+0x1b9c]        # 0x14000c870
   14000acd4:	jmp    QWORD PTR [rip+0x1b9e]        # 0x14000c878
   14000acda:	jmp    QWORD PTR [rip+0x1ba0]        # 0x14000c880
   14000ace0:	jmp    QWORD PTR [rip+0x1ba2]        # 0x14000c888
   14000ace6:	jmp    QWORD PTR [rip+0x1ba4]        # 0x14000c890
   14000acec:	jmp    QWORD PTR [rip+0x1ba6]        # 0x14000c898
   14000acf2:	jmp    QWORD PTR [rip+0x1ba8]        # 0x14000c8a0
   14000acf8:	jmp    QWORD PTR [rip+0x1baa]        # 0x14000c8a8
   14000acfe:	jmp    QWORD PTR [rip+0x1bac]        # 0x14000c8b0
   14000ad04:	jmp    QWORD PTR [rip+0x1c4e]        # 0x14000c958
   14000ad0a:	jmp    QWORD PTR [rip+0x1c50]        # 0x14000c960
   14000ad10:	jmp    QWORD PTR [rip+0x1c52]        # 0x14000c968
   14000ad16:	jmp    QWORD PTR [rip+0x1c54]        # 0x14000c970
   14000ad1c:	jmp    QWORD PTR [rip+0x1c56]        # 0x14000c978
   14000ad22:	jmp    QWORD PTR [rip+0x1c58]        # 0x14000c980
   14000ad28:	jmp    QWORD PTR [rip+0x1c5a]        # 0x14000c988
   14000ad2e:	jmp    QWORD PTR [rip+0x1c5c]        # 0x14000c990
   14000ad34:	jmp    QWORD PTR [rip+0x1c5e]        # 0x14000c998
   14000ad3a:	jmp    QWORD PTR [rip+0x1c60]        # 0x14000c9a0
   14000ad40:	jmp    QWORD PTR [rip+0x1c62]        # 0x14000c9a8
   14000ad46:	jmp    QWORD PTR [rip+0x1c64]        # 0x14000c9b0
   14000ad4c:	jmp    QWORD PTR [rip+0x1c66]        # 0x14000c9b8
   14000ad52:	jmp    QWORD PTR [rip+0x1c68]        # 0x14000c9c0
   14000ad58:	jmp    QWORD PTR [rip+0x1c6a]        # 0x14000c9c8
   14000ad5e:	jmp    QWORD PTR [rip+0x1c6c]        # 0x14000c9d0
   14000ad64:	jmp    QWORD PTR [rip+0x1c6e]        # 0x14000c9d8
   14000ad6a:	jmp    QWORD PTR [rip+0x1c70]        # 0x14000c9e0
   14000ad70:	jmp    QWORD PTR [rip+0x1c72]        # 0x14000c9e8
   14000ad76:	jmp    QWORD PTR [rip+0x1c74]        # 0x14000c9f0
   14000ad7c:	jmp    QWORD PTR [rip+0x1c76]        # 0x14000c9f8
   14000ad82:	jmp    QWORD PTR [rip+0x1c78]        # 0x14000ca00
   14000ad88:	jmp    QWORD PTR [rip+0x1c7a]        # 0x14000ca08
   14000ad8e:	jmp    QWORD PTR [rip+0x1c7c]        # 0x14000ca10
   14000ad94:	jmp    QWORD PTR [rip+0x1c7e]        # 0x14000ca18
   14000ad9a:	jmp    QWORD PTR [rip+0x1c80]        # 0x14000ca20
   14000ada0:	jmp    QWORD PTR [rip+0x1c82]        # 0x14000ca28
   14000ada6:	jmp    QWORD PTR [rip+0x1c84]        # 0x14000ca30
   14000adac:	jmp    QWORD PTR [rip+0x1c86]        # 0x14000ca38
   14000adb2:	jmp    QWORD PTR [rip+0x1c88]        # 0x14000ca40
   14000adb8:	jmp    QWORD PTR [rip+0x1c8a]        # 0x14000ca48
   14000adbe:	jmp    QWORD PTR [rip+0x1c8c]        # 0x14000ca50
   14000adc4:	jmp    QWORD PTR [rip+0x1c8e]        # 0x14000ca58
   14000adca:	jmp    QWORD PTR [rip+0x1c90]        # 0x14000ca60
   14000add0:	jmp    QWORD PTR [rip+0x1c92]        # 0x14000ca68
   14000add6:	jmp    QWORD PTR [rip+0x1c94]        # 0x14000ca70
   14000addc:	jmp    QWORD PTR [rip+0x26fe]        # 0x14000d4e0
   14000ade2:	jmp    QWORD PTR [rip+0x1c98]        # 0x14000ca80
   14000ade8:	jmp    QWORD PTR [rip+0x1c9a]        # 0x14000ca88
   14000adee:	jmp    QWORD PTR [rip+0x1c9c]        # 0x14000ca90
   14000adf4:	jmp    QWORD PTR [rip+0x1c9e]        # 0x14000ca98
   14000adfa:	jmp    QWORD PTR [rip+0x1ca0]        # 0x14000caa0
   14000ae00:	jmp    QWORD PTR [rip+0x1ca2]        # 0x14000caa8
   14000ae06:	jmp    QWORD PTR [rip+0x1ca4]        # 0x14000cab0
   14000ae0c:	jmp    QWORD PTR [rip+0x1ca6]        # 0x14000cab8
   14000ae12:	jmp    QWORD PTR [rip+0x1ca8]        # 0x14000cac0
   14000ae18:	jmp    QWORD PTR [rip+0x1caa]        # 0x14000cac8
   14000ae1e:	jmp    QWORD PTR [rip+0x1cac]        # 0x14000cad0
   14000ae24:	jmp    QWORD PTR [rip+0x1cae]        # 0x14000cad8
   14000ae2a:	jmp    QWORD PTR [rip+0x1cb0]        # 0x14000cae0
   14000ae30:	jmp    QWORD PTR [rip+0x1cb2]        # 0x14000cae8
   14000ae36:	jmp    QWORD PTR [rip+0x1cb4]        # 0x14000caf0
   14000ae3c:	jmp    QWORD PTR [rip+0x1cb6]        # 0x14000caf8
   14000ae42:	jmp    QWORD PTR [rip+0x1cb8]        # 0x14000cb00
   14000ae48:	jmp    QWORD PTR [rip+0x1cba]        # 0x14000cb08
   14000ae4e:	jmp    QWORD PTR [rip+0x1cbc]        # 0x14000cb10
   14000ae54:	jmp    QWORD PTR [rip+0x1cbe]        # 0x14000cb18
   14000ae5a:	jmp    QWORD PTR [rip+0x1cc0]        # 0x14000cb20
   14000ae60:	jmp    QWORD PTR [rip+0x1cc2]        # 0x14000cb28
   14000ae66:	jmp    QWORD PTR [rip+0x1cc4]        # 0x14000cb30
   14000ae6c:	jmp    QWORD PTR [rip+0x1cc6]        # 0x14000cb38
   14000ae72:	jmp    QWORD PTR [rip+0x1cc8]        # 0x14000cb40
   14000ae78:	jmp    QWORD PTR [rip+0x1cca]        # 0x14000cb48
   14000ae7e:	jmp    QWORD PTR [rip+0x1ccc]        # 0x14000cb50
   14000ae84:	jmp    QWORD PTR [rip+0x1cce]        # 0x14000cb58
   14000ae8a:	jmp    QWORD PTR [rip+0x1cd0]        # 0x14000cb60
   14000ae90:	jmp    QWORD PTR [rip+0x1cd2]        # 0x14000cb68
   14000ae96:	jmp    QWORD PTR [rip+0x1cd4]        # 0x14000cb70
   14000ae9c:	jmp    QWORD PTR [rip+0x1cd6]        # 0x14000cb78
   14000aea2:	jmp    QWORD PTR [rip+0x1cd8]        # 0x14000cb80
   14000aea8:	jmp    QWORD PTR [rip+0x1cda]        # 0x14000cb88
   14000aeae:	jmp    QWORD PTR [rip+0x1cdc]        # 0x14000cb90
   14000aeb4:	jmp    QWORD PTR [rip+0x1cde]        # 0x14000cb98
   14000aeba:	jmp    QWORD PTR [rip+0x1ce0]        # 0x14000cba0
   14000aec0:	jmp    QWORD PTR [rip+0x1ce2]        # 0x14000cba8
   14000aec6:	jmp    QWORD PTR [rip+0x1ce4]        # 0x14000cbb0
   14000aecc:	jmp    QWORD PTR [rip+0x1ce6]        # 0x14000cbb8
   14000aed2:	jmp    QWORD PTR [rip+0x1ce8]        # 0x14000cbc0
   14000aed8:	jmp    QWORD PTR [rip+0x1cea]        # 0x14000cbc8
   14000aede:	jmp    QWORD PTR [rip+0x1cec]        # 0x14000cbd0
   14000aee4:	jmp    QWORD PTR [rip+0x1cee]        # 0x14000cbd8
   14000aeea:	jmp    QWORD PTR [rip+0x1cf0]        # 0x14000cbe0
   14000aef0:	jmp    QWORD PTR [rip+0x1cf2]        # 0x14000cbe8
   14000aef6:	jmp    QWORD PTR [rip+0x1cf4]        # 0x14000cbf0
   14000aefc:	jmp    QWORD PTR [rip+0x1cf6]        # 0x14000cbf8
   14000af02:	jmp    QWORD PTR [rip+0x1cf8]        # 0x14000cc00
   14000af08:	jmp    QWORD PTR [rip+0x1cfa]        # 0x14000cc08
   14000af0e:	jmp    QWORD PTR [rip+0x1cfc]        # 0x14000cc10
   14000af14:	jmp    QWORD PTR [rip+0x1cfe]        # 0x14000cc18
   14000af1a:	jmp    QWORD PTR [rip+0x1d00]        # 0x14000cc20
   14000af20:	jmp    QWORD PTR [rip+0x1d02]        # 0x14000cc28
   14000af26:	jmp    QWORD PTR [rip+0x1d04]        # 0x14000cc30
   14000af2c:	jmp    QWORD PTR [rip+0x1d06]        # 0x14000cc38
   14000af32:	jmp    QWORD PTR [rip+0x1d78]        # 0x14000ccb0
   14000af38:	jmp    QWORD PTR [rip+0x1d7a]        # 0x14000ccb8
   14000af3e:	jmp    QWORD PTR [rip+0x1d7c]        # 0x14000ccc0
   14000af44:	jmp    QWORD PTR [rip+0x1d7e]        # 0x14000ccc8
   14000af4a:	jmp    QWORD PTR [rip+0x1d80]        # 0x14000ccd0
   14000af50:	jmp    QWORD PTR [rip+0x1d82]        # 0x14000ccd8
   14000af56:	jmp    QWORD PTR [rip+0x1d84]        # 0x14000cce0
   14000af5c:	jmp    QWORD PTR [rip+0x1d86]        # 0x14000cce8
   14000af62:	jmp    QWORD PTR [rip+0x1d88]        # 0x14000ccf0
   14000af68:	jmp    QWORD PTR [rip+0x1d8a]        # 0x14000ccf8
   14000af6e:	jmp    QWORD PTR [rip+0x1d8c]        # 0x14000cd00
   14000af74:	jmp    QWORD PTR [rip+0x1d8e]        # 0x14000cd08
   14000af7a:	jmp    QWORD PTR [rip+0x1d90]        # 0x14000cd10
   14000af80:	jmp    QWORD PTR [rip+0x1d92]        # 0x14000cd18
   14000af86:	jmp    QWORD PTR [rip+0x1d94]        # 0x14000cd20
   14000af8c:	jmp    QWORD PTR [rip+0x1d96]        # 0x14000cd28
   14000af92:	jmp    QWORD PTR [rip+0x1d98]        # 0x14000cd30
   14000af98:	jmp    QWORD PTR [rip+0x1d9a]        # 0x14000cd38
   14000af9e:	jmp    QWORD PTR [rip+0x1d9c]        # 0x14000cd40
   14000afa4:	jmp    QWORD PTR [rip+0x1d9e]        # 0x14000cd48
   14000afaa:	jmp    QWORD PTR [rip+0x1da0]        # 0x14000cd50
   14000afb0:	jmp    QWORD PTR [rip+0x1da2]        # 0x14000cd58
   14000afb6:	jmp    QWORD PTR [rip+0x1da4]        # 0x14000cd60
   14000afbc:	jmp    QWORD PTR [rip+0x1da6]        # 0x14000cd68
   14000afc2:	jmp    QWORD PTR [rip+0x1da8]        # 0x14000cd70
   14000afc8:	jmp    QWORD PTR [rip+0x1daa]        # 0x14000cd78
   14000afce:	jmp    QWORD PTR [rip+0x1dac]        # 0x14000cd80
   14000afd4:	jmp    QWORD PTR [rip+0x1dae]        # 0x14000cd88
   14000afda:	jmp    QWORD PTR [rip+0x1db0]        # 0x14000cd90
   14000afe0:	jmp    QWORD PTR [rip+0x1db2]        # 0x14000cd98
   14000afe6:	jmp    QWORD PTR [rip+0x1db4]        # 0x14000cda0
   14000afec:	jmp    QWORD PTR [rip+0x1db6]        # 0x14000cda8
   14000aff2:	jmp    QWORD PTR [rip+0x1db8]        # 0x14000cdb0
   14000aff8:	jmp    QWORD PTR [rip+0x1dba]        # 0x14000cdb8
   14000affe:	jmp    QWORD PTR [rip+0x1dbc]        # 0x14000cdc0
   14000b004:	jmp    QWORD PTR [rip+0x1dbe]        # 0x14000cdc8
   14000b00a:	jmp    QWORD PTR [rip+0x1dc0]        # 0x14000cdd0
   14000b010:	jmp    QWORD PTR [rip+0x1dc2]        # 0x14000cdd8
   14000b016:	jmp    QWORD PTR [rip+0x1dc4]        # 0x14000cde0
   14000b01c:	jmp    QWORD PTR [rip+0x1dc6]        # 0x14000cde8
   14000b022:	jmp    QWORD PTR [rip+0x1dc8]        # 0x14000cdf0
   14000b028:	jmp    QWORD PTR [rip+0x1dca]        # 0x14000cdf8
   14000b02e:	jmp    QWORD PTR [rip+0x1e4c]        # 0x14000ce80
   14000b034:	jmp    QWORD PTR [rip+0x1e4e]        # 0x14000ce88
   14000b03a:	jmp    QWORD PTR [rip+0x1e50]        # 0x14000ce90
   14000b040:	jmp    QWORD PTR [rip+0x1e52]        # 0x14000ce98
   14000b046:	jmp    QWORD PTR [rip+0x1e54]        # 0x14000cea0
   14000b04c:	jmp    QWORD PTR [rip+0x1e56]        # 0x14000cea8
   14000b052:	jmp    QWORD PTR [rip+0x1e58]        # 0x14000ceb0
   14000b058:	jmp    QWORD PTR [rip+0x1e5a]        # 0x14000ceb8
   14000b05e:	jmp    QWORD PTR [rip+0x1e5c]        # 0x14000cec0
   14000b064:	jmp    QWORD PTR [rip+0x1e5e]        # 0x14000cec8
   14000b06a:	jmp    QWORD PTR [rip+0x1e60]        # 0x14000ced0
   14000b070:	jmp    QWORD PTR [rip+0x1e62]        # 0x14000ced8
   14000b076:	jmp    QWORD PTR [rip+0x1e64]        # 0x14000cee0
   14000b07c:	jmp    QWORD PTR [rip+0x1e66]        # 0x14000cee8
   14000b082:	jmp    QWORD PTR [rip+0x1e68]        # 0x14000cef0
   14000b088:	jmp    QWORD PTR [rip+0x1e6a]        # 0x14000cef8
   14000b08e:	jmp    QWORD PTR [rip+0x1e6c]        # 0x14000cf00
   14000b094:	jmp    QWORD PTR [rip+0x1e6e]        # 0x14000cf08
   14000b09a:	jmp    QWORD PTR [rip+0x1e70]        # 0x14000cf10
   14000b0a0:	jmp    QWORD PTR [rip+0x1e72]        # 0x14000cf18
   14000b0a6:	jmp    QWORD PTR [rip+0x13a4]        # 0x14000c450
   14000b0ac:	jmp    QWORD PTR [rip+0x1396]        # 0x14000c448
   14000b0b2:	jmp    QWORD PTR [rip+0x1388]        # 0x14000c440
   14000b0b8:	jmp    QWORD PTR [rip+0x137a]        # 0x14000c438
   14000b0be:	jmp    QWORD PTR [rip+0x136c]        # 0x14000c430
   14000b0c4:	jmp    QWORD PTR [rip+0x135e]        # 0x14000c428
   14000b0ca:	jmp    QWORD PTR [rip+0x1260]        # 0x14000c330
   14000b0d0:	jmp    QWORD PTR [rip+0x1252]        # 0x14000c328
   14000b0d6:	jmp    QWORD PTR [rip+0x1244]        # 0x14000c320
   14000b0dc:	jmp    QWORD PTR [rip+0x1236]        # 0x14000c318
   14000b0e2:	jmp    QWORD PTR [rip+0x1228]        # 0x14000c310
   14000b0e8:	jmp    QWORD PTR [rip+0x121a]        # 0x14000c308
   14000b0ee:	jmp    QWORD PTR [rip+0x120c]        # 0x14000c300
   14000b0f4:	jmp    QWORD PTR [rip+0x108e]        # 0x14000c188
   14000b0fa:	jmp    QWORD PTR [rip+0x1080]        # 0x14000c180
   14000b100:	jmp    QWORD PTR [rip+0x103a]        # 0x14000c140
   14000b106:	jmp    QWORD PTR [rip+0xf64]        # 0x14000c070
   14000b10c:	jmp    QWORD PTR [rip+0xf56]        # 0x14000c068
   14000b112:	jmp    QWORD PTR [rip+0xf48]        # 0x14000c060
   14000b118:	mov    QWORD PTR [rsp+0x8],rbx
   14000b11d:	mov    QWORD PTR [rsp+0x10],rsi
   14000b122:	push   rdi
   14000b123:	sub    rsp,0x20
   14000b127:	mov    esi,edx
   14000b129:	mov    rbx,rcx
   14000b12c:	test   dl,0x2
   14000b12f:	je     0x14000b15b
   14000b131:	mov    r8d,DWORD PTR [rcx-0x8]
   14000b135:	lea    r9,[rip+0x7b2]        # 0x14000b8ee
   14000b13c:	mov    edx,0x18
   14000b141:	call   0x14000b604
   14000b146:	test   sil,0x1
   14000b14a:	je     0x14000b155
   14000b14c:	lea    rcx,[rbx-0x8]
   14000b150:	call   0x14000b100
   14000b155:	lea    rax,[rbx-0x8]
   14000b159:	jmp    0x14000b171
   14000b15b:	call   0x14000b8ee
   14000b160:	test   sil,0x1
   14000b164:	je     0x14000b16e
   14000b166:	mov    rcx,rbx
   14000b169:	call   0x14000b100
   14000b16e:	mov    rax,rbx
   14000b171:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b176:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b17b:	add    rsp,0x20
   14000b17f:	pop    rdi
   14000b180:	ret    
   14000b181:	int3   
   14000b182:	int3   
   14000b183:	int3   
   14000b184:	rex push rbx
   14000b186:	sub    rsp,0x20
   14000b18a:	mov    rbx,rcx
   14000b18d:	mov    rcx,QWORD PTR [rip+0x12504]        # 0x14001d698
   14000b194:	call   QWORD PTR [rip+0xf76]        # 0x14000c110
   14000b19a:	mov    QWORD PTR [rsp+0x38],rax
   14000b19f:	cmp    rax,0xffffffffffffffff
   14000b1a3:	jne    0x14000b1b0
   14000b1a5:	mov    rcx,rbx
   14000b1a8:	call   QWORD PTR [rip+0xf6a]        # 0x14000c118
   14000b1ae:	jmp    0x14000b22e
   14000b1b0:	mov    ecx,0x8
   14000b1b5:	call   0x14000b674
   14000b1ba:	nop
   14000b1bb:	mov    rcx,QWORD PTR [rip+0x124d6]        # 0x14001d698
   14000b1c2:	call   QWORD PTR [rip+0xf48]        # 0x14000c110
   14000b1c8:	mov    QWORD PTR [rsp+0x38],rax
   14000b1cd:	mov    rcx,QWORD PTR [rip+0x124bc]        # 0x14001d690
   14000b1d4:	call   QWORD PTR [rip+0xf36]        # 0x14000c110
   14000b1da:	mov    QWORD PTR [rsp+0x40],rax
   14000b1df:	mov    rcx,rbx
   14000b1e2:	call   QWORD PTR [rip+0xf40]        # 0x14000c128
   14000b1e8:	mov    rcx,rax
   14000b1eb:	lea    r8,[rsp+0x40]
   14000b1f0:	lea    rdx,[rsp+0x38]
   14000b1f5:	call   0x14000b66e
   14000b1fa:	mov    rbx,rax
   14000b1fd:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b202:	call   QWORD PTR [rip+0xf20]        # 0x14000c128
   14000b208:	mov    QWORD PTR [rip+0x12489],rax        # 0x14001d698
   14000b20f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b214:	call   QWORD PTR [rip+0xf0e]        # 0x14000c128
   14000b21a:	mov    QWORD PTR [rip+0x1246f],rax        # 0x14001d690
   14000b221:	mov    ecx,0x8
   14000b226:	call   0x14000b668
   14000b22b:	mov    rax,rbx
   14000b22e:	add    rsp,0x20
   14000b232:	pop    rbx
   14000b233:	ret    
   14000b234:	sub    rsp,0x28
   14000b238:	call   0x14000b184
   14000b23d:	neg    rax
   14000b240:	sbb    eax,eax
   14000b242:	neg    eax
   14000b244:	dec    eax
   14000b246:	add    rsp,0x28
   14000b24a:	ret    
   14000b24b:	int3   
   14000b24c:	sub    rsp,0x38
   14000b250:	lea    rcx,[rip+0x4c1]        # 0x14000b718
   14000b257:	call   0x14000b234
   14000b25c:	mov    r11d,DWORD PTR [rip+0x1240d]        # 0x14001d670
   14000b263:	mov    r9d,DWORD PTR [rip+0x12402]        # 0x14001d66c
   14000b26a:	lea    rax,[rip+0x123eb]        # 0x14001d65c
   14000b271:	lea    r8,[rip+0x123d0]        # 0x14001d648
   14000b278:	lea    rdx,[rip+0x123d1]        # 0x14001d650
   14000b27f:	lea    rcx,[rip+0x123ba]        # 0x14001d640
   14000b286:	mov    DWORD PTR [rip+0x123cf],r11d        # 0x14001d65c
   14000b28d:	mov    QWORD PTR [rsp+0x20],rax
   14000b292:	call   QWORD PTR [rip+0xe68]        # 0x14000c100
   14000b298:	mov    DWORD PTR [rip+0x123ba],eax        # 0x14001d658
   14000b29e:	test   eax,eax
   14000b2a0:	jns    0x14000b2ac
   14000b2a2:	mov    ecx,0x8
   14000b2a7:	call   0x14000b6d8
   14000b2ac:	add    rsp,0x38
   14000b2b0:	ret    
   14000b2b1:	int3   
   14000b2b2:	int3   
   14000b2b3:	int3   
   14000b2b4:	mov    QWORD PTR [rsp+0x8],rsi
   14000b2b9:	push   rdi
   14000b2ba:	sub    rsp,0xa0
   14000b2c1:	and    DWORD PTR [rsp+0x20],0x0
   14000b2c6:	lea    rcx,[rsp+0x30]
   14000b2cb:	call   QWORD PTR [rip+0xd37]        # 0x14000c008
   14000b2d1:	nop
   14000b2d2:	mov    rax,QWORD PTR gs:0x30
   14000b2db:	mov    rdi,QWORD PTR [rax+0x8]
   14000b2df:	xor    esi,esi
   14000b2e1:	xor    eax,eax
   14000b2e3:	lock cmpxchg QWORD PTR [rip+0x12394],rdi        # 0x14001d680
   14000b2ec:	je     0x14000b307
   14000b2ee:	cmp    rax,rdi
   14000b2f1:	jne    0x14000b2fa
   14000b2f3:	mov    esi,0x1
   14000b2f8:	jmp    0x14000b307
   14000b2fa:	mov    ecx,0x3e8
   14000b2ff:	call   QWORD PTR [rip+0xd4b]        # 0x14000c050
   14000b305:	jmp    0x14000b2e1
   14000b307:	mov    eax,DWORD PTR [rip+0x1236f]        # 0x14001d67c
   14000b30d:	cmp    eax,0x1
   14000b310:	jne    0x14000b31c
   14000b312:	lea    ecx,[rax+0x1e]
   14000b315:	call   0x14000b6d8
   14000b31a:	jmp    0x14000b35b
   14000b31c:	mov    eax,DWORD PTR [rip+0x1235a]        # 0x14001d67c
   14000b322:	test   eax,eax
   14000b324:	jne    0x14000b351
   14000b326:	mov    DWORD PTR [rip+0x1234c],0x1        # 0x14001d67c
   14000b330:	lea    rdx,[rip+0x2219]        # 0x14000d550
   14000b337:	lea    rcx,[rip+0x21fa]        # 0x14000d538
   14000b33e:	call   0x14000b828
   14000b343:	test   eax,eax
   14000b345:	je     0x14000b35b
   14000b347:	mov    eax,0xff
   14000b34c:	jmp    0x14000b4a9
   14000b351:	mov    DWORD PTR [rip+0x12309],0x1        # 0x14001d664
   14000b35b:	mov    eax,DWORD PTR [rip+0x1231b]        # 0x14001d67c
   14000b361:	cmp    eax,0x1
   14000b364:	jne    0x14000b383
   14000b366:	lea    rdx,[rip+0x21c3]        # 0x14000d530
   14000b36d:	lea    rcx,[rip+0x218c]        # 0x14000d500
   14000b374:	call   0x14000b822
   14000b379:	mov    DWORD PTR [rip+0x122f9],0x2        # 0x14001d67c
   14000b383:	test   esi,esi
   14000b385:	jne    0x14000b390
   14000b387:	xor    eax,eax
   14000b389:	xchg   QWORD PTR [rip+0x122f0],rax        # 0x14001d680
   14000b390:	cmp    QWORD PTR [rip+0x122f0],0x0        # 0x14001d688
   14000b398:	je     0x14000b3b9
   14000b39a:	lea    rcx,[rip+0x122e7]        # 0x14001d688
   14000b3a1:	call   0x14000b7e0
   14000b3a6:	test   eax,eax
   14000b3a8:	je     0x14000b3b9
   14000b3aa:	xor    r8d,r8d
   14000b3ad:	lea    edx,[r8+0x2]
   14000b3b1:	xor    ecx,ecx
   14000b3b3:	call   QWORD PTR [rip+0x122cf]        # 0x14001d688
   14000b3b9:	mov    rax,QWORD PTR [rip+0xd10]        # 0x14000c0d0
   14000b3c0:	mov    rdi,QWORD PTR [rax]
   14000b3c3:	mov    QWORD PTR [rsp+0x28],rdi
   14000b3c8:	mov    esi,DWORD PTR [rsp+0x20]
   14000b3cc:	cmp    BYTE PTR [rdi],0x20
   14000b3cf:	ja     0x14000b441
   14000b3d1:	cmp    BYTE PTR [rdi],0x0
   14000b3d4:	je     0x14000b3da
   14000b3d6:	test   esi,esi
   14000b3d8:	jne    0x14000b441
   14000b3da:	cmp    BYTE PTR [rdi],0x0
   14000b3dd:	je     0x14000b3ee
   14000b3df:	cmp    BYTE PTR [rdi],0x20
   14000b3e2:	ja     0x14000b3ee
   14000b3e4:	inc    rdi
   14000b3e7:	mov    QWORD PTR [rsp+0x28],rdi
   14000b3ec:	jmp    0x14000b3da
   14000b3ee:	test   BYTE PTR [rsp+0x6c],0x1
   14000b3f3:	movzx  eax,WORD PTR [rsp+0x70]
   14000b3f8:	mov    r9d,0xa
   14000b3fe:	cmovne r9d,eax
   14000b402:	mov    r8,rdi
   14000b405:	xor    edx,edx
   14000b407:	lea    rcx,[rip+0xffffffffffff4bf2]        # 0x140000000
   14000b40e:	call   0x14000b990
   14000b413:	mov    DWORD PTR [rip+0x12247],eax        # 0x14001d660
   14000b419:	cmp    DWORD PTR [rip+0x12224],0x0        # 0x14001d644
   14000b420:	jne    0x14000b42a
   14000b422:	mov    ecx,eax
   14000b424:	call   QWORD PTR [rip+0xcae]        # 0x14000c0d8
   14000b42a:	cmp    DWORD PTR [rip+0x12233],0x0        # 0x14001d664
   14000b431:	jne    0x14000b43f
   14000b433:	call   QWORD PTR [rip+0xca7]        # 0x14000c0e0
   14000b439:	mov    eax,DWORD PTR [rip+0x12221]        # 0x14001d660
   14000b43f:	jmp    0x14000b4a2
   14000b441:	cmp    BYTE PTR [rdi],0x22
   14000b444:	jne    0x14000b453
   14000b446:	xor    eax,eax
   14000b448:	test   esi,esi
   14000b44a:	sete   al
   14000b44d:	mov    esi,eax
   14000b44f:	mov    DWORD PTR [rsp+0x20],eax
   14000b453:	movzx  ecx,BYTE PTR [rdi]
   14000b456:	call   QWORD PTR [rip+0xc8c]        # 0x14000c0e8
   14000b45c:	test   eax,eax
   14000b45e:	je     0x14000b468
   14000b460:	inc    rdi
   14000b463:	mov    QWORD PTR [rsp+0x28],rdi
   14000b468:	inc    rdi
   14000b46b:	mov    QWORD PTR [rsp+0x28],rdi
   14000b470:	jmp    0x14000b3cc
   14000b475:	mov    DWORD PTR [rip+0x121e5],eax        # 0x14001d660
   14000b47b:	cmp    DWORD PTR [rip+0x121c2],0x0        # 0x14001d644
   14000b482:	jne    0x14000b48d
   14000b484:	mov    ecx,eax
   14000b486:	call   QWORD PTR [rip+0xc64]        # 0x14000c0f0
   14000b48c:	int3   
   14000b48d:	cmp    DWORD PTR [rip+0x121d0],0x0        # 0x14001d664
   14000b494:	jne    0x14000b4a2
   14000b496:	call   QWORD PTR [rip+0xc44]        # 0x14000c0e0
   14000b49c:	mov    eax,DWORD PTR [rip+0x121be]        # 0x14001d660
   14000b4a2:	jmp    0x14000b4a9
   14000b4a4:	mov    eax,0xff
   14000b4a9:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000b4b1:	add    rsp,0xa0
   14000b4b8:	pop    rdi
   14000b4b9:	ret    
   14000b4ba:	int3   
   14000b4bb:	int3   
   14000b4bc:	sub    rsp,0x28
   14000b4c0:	mov    eax,0x5a4d
   14000b4c5:	cmp    WORD PTR [rip+0xffffffffffff4b34],ax        # 0x140000000
   14000b4cc:	je     0x14000b4d2
   14000b4ce:	xor    eax,eax
   14000b4d0:	jmp    0x14000b521
   14000b4d2:	movsxd rcx,DWORD PTR [rip+0xffffffffffff4b63]        # 0x14000003c
   14000b4d9:	lea    rax,[rip+0xffffffffffff4b20]        # 0x140000000
   14000b4e0:	add    rcx,rax
   14000b4e3:	cmp    DWORD PTR [rcx],0x4550
   14000b4e9:	jne    0x14000b4ce
   14000b4eb:	movzx  eax,WORD PTR [rcx+0x18]
   14000b4ef:	cmp    eax,0x10b
   14000b4f4:	je     0x14000b510
   14000b4f6:	cmp    eax,0x20b
   14000b4fb:	jne    0x14000b4ce
   14000b4fd:	xor    eax,eax
   14000b4ff:	cmp    DWORD PTR [rcx+0x84],0xe
   14000b506:	jbe    0x14000b521
   14000b508:	cmp    DWORD PTR [rcx+0xf8],eax
   14000b50e:	jmp    0x14000b51e
   14000b510:	xor    eax,eax
   14000b512:	cmp    DWORD PTR [rcx+0x74],0xe
   14000b516:	jbe    0x14000b521
   14000b518:	cmp    DWORD PTR [rcx+0xe8],eax
   14000b51e:	setne  al
   14000b521:	mov    ecx,0x2
   14000b526:	mov    DWORD PTR [rip+0x12118],eax        # 0x14001d644
   14000b52c:	call   QWORD PTR [rip+0xb66]        # 0x14000c098
   14000b532:	or     rcx,0xffffffffffffffff
   14000b536:	call   QWORD PTR [rip+0xbec]        # 0x14000c128
   14000b53c:	mov    rcx,QWORD PTR [rip+0xb5d]        # 0x14000c0a0
   14000b543:	mov    QWORD PTR [rip+0x12146],rax        # 0x14001d690
   14000b54a:	mov    QWORD PTR [rip+0x12147],rax        # 0x14001d698
   14000b551:	mov    eax,DWORD PTR [rip+0x12121]        # 0x14001d678
   14000b557:	mov    DWORD PTR [rcx],eax
   14000b559:	mov    rdx,QWORD PTR [rip+0xb48]        # 0x14000c0a8
   14000b560:	mov    eax,DWORD PTR [rip+0x1210e]        # 0x14001d674
   14000b566:	mov    DWORD PTR [rdx],eax
   14000b568:	call   0x14000b6e0
   14000b56d:	call   0x14000b830
   14000b572:	cmp    DWORD PTR [rip+0x1209b],0x0        # 0x14001d614
   14000b579:	jne    0x14000b588
   14000b57b:	lea    rcx,[rip+0x2ae]        # 0x14000b830
   14000b582:	call   QWORD PTR [rip+0xb28]        # 0x14000c0b0
   14000b588:	cmp    DWORD PTR [rip+0x12081],0xffffffff        # 0x14001d610
   14000b58f:	jne    0x14000b59a
   14000b591:	or     ecx,0xffffffff
   14000b594:	call   QWORD PTR [rip+0xb1e]        # 0x14000c0b8
   14000b59a:	xor    eax,eax
   14000b59c:	add    rsp,0x28
   14000b5a0:	ret    
   14000b5a1:	int3   
   14000b5a2:	int3   
   14000b5a3:	int3   
   14000b5a4:	sub    rsp,0x28
   14000b5a8:	call   0x14000b834
   14000b5ad:	add    rsp,0x28
   14000b5b1:	jmp    0x14000b2b4
   14000b5b6:	int3   
   14000b5b7:	int3   
   14000b5b8:	mov    QWORD PTR [rsp+0x10],rbx
   14000b5bd:	mov    DWORD PTR [rsp+0x18],r8d
   14000b5c2:	mov    QWORD PTR [rsp+0x8],rcx
   14000b5c7:	push   rsi
   14000b5c8:	push   rdi
   14000b5c9:	push   r12
   14000b5cb:	sub    rsp,0x40
   14000b5cf:	mov    rsi,r9
   14000b5d2:	mov    edi,r8d
   14000b5d5:	mov    r12,rdx
   14000b5d8:	mov    rbx,rcx
   14000b5db:	sub    edi,0x1
   14000b5de:	mov    DWORD PTR [rsp+0x70],edi
   14000b5e2:	js     0x14000b5f3
   14000b5e4:	sub    rbx,r12
   14000b5e7:	mov    QWORD PTR [rsp+0x60],rbx
   14000b5ec:	mov    rcx,rbx
   14000b5ef:	call   rsi
   14000b5f1:	jmp    0x14000b5db
   14000b5f3:	jmp    0x14000b5f5
   14000b5f5:	mov    rbx,QWORD PTR [rsp+0x68]
   14000b5fa:	add    rsp,0x40
   14000b5fe:	pop    r12
   14000b600:	pop    rdi
   14000b601:	pop    rsi
   14000b602:	ret    
   14000b603:	int3   
   14000b604:	mov    rax,rsp
   14000b607:	mov    QWORD PTR [rax+0x20],r9
   14000b60b:	mov    DWORD PTR [rax+0x18],r8d
   14000b60f:	mov    QWORD PTR [rax+0x10],rdx
   14000b613:	push   rbx
   14000b614:	push   rsi
   14000b615:	push   rdi
   14000b616:	push   r12
   14000b618:	sub    rsp,0x38
   14000b61c:	mov    r12,r9
   14000b61f:	movsxd rdi,r8d
   14000b622:	mov    rsi,rdx
   14000b625:	and    DWORD PTR [rax-0x38],0x0
   14000b629:	mov    rbx,rdi
   14000b62c:	imul   rbx,rdx
   14000b630:	add    rbx,rcx
   14000b633:	mov    QWORD PTR [rax+0x8],rbx
   14000b637:	sub    edi,0x1
   14000b63a:	mov    DWORD PTR [rsp+0x70],edi
   14000b63e:	js     0x14000b650
   14000b640:	sub    rbx,rsi
   14000b643:	mov    QWORD PTR [rsp+0x60],rbx
   14000b648:	mov    rcx,rbx
   14000b64b:	call   r12
   14000b64e:	jmp    0x14000b637
   14000b650:	mov    DWORD PTR [rsp+0x20],0x1
   14000b658:	add    rsp,0x38
   14000b65c:	pop    r12
   14000b65e:	pop    rdi
   14000b65f:	pop    rsi
   14000b660:	pop    rbx
   14000b661:	ret    
   14000b662:	jmp    QWORD PTR [rip+0xa10]        # 0x14000c078
   14000b668:	jmp    QWORD PTR [rip+0xaca]        # 0x14000c138
   14000b66e:	jmp    QWORD PTR [rip+0xabc]        # 0x14000c130
   14000b674:	jmp    QWORD PTR [rip+0xaa6]        # 0x14000c120
   14000b67a:	int3   
   14000b67b:	int3   
   14000b67c:	sub    rsp,0x28
   14000b680:	mov    rax,QWORD PTR [rcx]
   14000b683:	cmp    DWORD PTR [rax],0xe06d7363
   14000b689:	jne    0x14000b6b6
   14000b68b:	cmp    DWORD PTR [rax+0x18],0x4
   14000b68f:	jne    0x14000b6b6
   14000b691:	mov    eax,DWORD PTR [rax+0x20]
   14000b694:	cmp    eax,0x19930520
   14000b699:	je     0x14000b6b0
   14000b69b:	cmp    eax,0x19930521
   14000b6a0:	je     0x14000b6b0
   14000b6a2:	cmp    eax,0x19930522
   14000b6a7:	je     0x14000b6b0
   14000b6a9:	cmp    eax,0x1994000
   14000b6ae:	jne    0x14000b6b6
   14000b6b0:	call   0x14000b8e8
   14000b6b5:	int3   
   14000b6b6:	xor    eax,eax
   14000b6b8:	add    rsp,0x28
   14000b6bc:	ret    
   14000b6bd:	int3   
   14000b6be:	int3   
   14000b6bf:	int3   
   14000b6c0:	sub    rsp,0x28
   14000b6c4:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000b67c
   14000b6cb:	call   QWORD PTR [rip+0x93f]        # 0x14000c010
   14000b6d1:	xor    eax,eax
   14000b6d3:	add    rsp,0x28
   14000b6d7:	ret    
   14000b6d8:	jmp    QWORD PTR [rip+0xa2a]        # 0x14000c108
   14000b6de:	int3   
   14000b6df:	int3   
   14000b6e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b6e5:	push   rdi
   14000b6e6:	sub    rsp,0x20
   14000b6ea:	lea    rbx,[rip+0x78cf]        # 0x140012fc0
   14000b6f1:	lea    rdi,[rip+0x78c8]        # 0x140012fc0
   14000b6f8:	jmp    0x14000b708
   14000b6fa:	mov    rax,QWORD PTR [rbx]
   14000b6fd:	test   rax,rax
   14000b700:	je     0x14000b704
   14000b702:	call   rax
   14000b704:	add    rbx,0x8
   14000b708:	cmp    rbx,rdi
   14000b70b:	jb     0x14000b6fa
   14000b70d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b712:	add    rsp,0x20
   14000b716:	pop    rdi
   14000b717:	ret    
   14000b718:	mov    QWORD PTR [rsp+0x8],rbx
   14000b71d:	push   rdi
   14000b71e:	sub    rsp,0x20
   14000b722:	lea    rbx,[rip+0x78a7]        # 0x140012fd0
   14000b729:	lea    rdi,[rip+0x78a0]        # 0x140012fd0
   14000b730:	jmp    0x14000b740
   14000b732:	mov    rax,QWORD PTR [rbx]
   14000b735:	test   rax,rax
   14000b738:	je     0x14000b73c
   14000b73a:	call   rax
   14000b73c:	add    rbx,0x8
   14000b740:	cmp    rbx,rdi
   14000b743:	jb     0x14000b732
   14000b745:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b74a:	add    rsp,0x20
   14000b74e:	pop    rdi
   14000b74f:	ret    
   14000b750:	jmp    QWORD PTR [rip+0x9a2]        # 0x14000c0f8
   14000b756:	int3   
   14000b757:	int3   
   14000b758:	int3   
   14000b759:	int3   
   14000b75a:	int3   
   14000b75b:	int3   
   14000b75c:	int3   
   14000b75d:	int3   
   14000b75e:	int3   
   14000b75f:	int3   
   14000b760:	mov    rax,rcx
   14000b763:	mov    ecx,0x5a4d
   14000b768:	cmp    WORD PTR [rax],cx
   14000b76b:	je     0x14000b770
   14000b76d:	xor    eax,eax
   14000b76f:	ret    
   14000b770:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000b774:	add    rcx,rax
   14000b777:	xor    eax,eax
   14000b779:	cmp    DWORD PTR [rcx],0x4550
   14000b77f:	jne    0x14000b78d
   14000b781:	mov    edx,0x20b
   14000b786:	cmp    WORD PTR [rcx+0x18],dx
   14000b78a:	sete   al
   14000b78d:	repz ret 
   14000b78f:	int3   
   14000b790:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000b794:	xor    r9d,r9d
   14000b797:	mov    r10,rdx
   14000b79a:	add    r8,rcx
   14000b79d:	movzx  eax,WORD PTR [r8+0x14]
   14000b7a2:	movzx  r11d,WORD PTR [r8+0x6]
   14000b7a7:	lea    rcx,[rax+r8*1+0x18]
   14000b7ac:	test   r11d,r11d
   14000b7af:	je     0x14000b7cf
   14000b7b1:	mov    edx,DWORD PTR [rcx+0xc]
   14000b7b4:	cmp    r10,rdx
   14000b7b7:	jb     0x14000b7c3
   14000b7b9:	mov    eax,DWORD PTR [rcx+0x8]
   14000b7bc:	add    eax,edx
   14000b7be:	cmp    r10,rax
   14000b7c1:	jb     0x14000b7d2
   14000b7c3:	inc    r9d
   14000b7c6:	add    rcx,0x28
   14000b7ca:	cmp    r9d,r11d
   14000b7cd:	jb     0x14000b7b1
   14000b7cf:	xor    eax,eax
   14000b7d1:	ret    
   14000b7d2:	mov    rax,rcx
   14000b7d5:	ret    
   14000b7d6:	int3   
   14000b7d7:	int3   
   14000b7d8:	int3   
   14000b7d9:	int3   
   14000b7da:	int3   
   14000b7db:	int3   
   14000b7dc:	int3   
   14000b7dd:	int3   
   14000b7de:	int3   
   14000b7df:	int3   
   14000b7e0:	sub    rsp,0x28
   14000b7e4:	mov    r8,rcx
   14000b7e7:	lea    r9,[rip+0xffffffffffff4812]        # 0x140000000
   14000b7ee:	mov    rcx,r9
   14000b7f1:	call   0x14000b760
   14000b7f6:	test   eax,eax
   14000b7f8:	je     0x14000b81c
   14000b7fa:	sub    r8,r9
   14000b7fd:	mov    rdx,r8
   14000b800:	mov    rcx,r9
   14000b803:	call   0x14000b790
   14000b808:	test   rax,rax
   14000b80b:	je     0x14000b81c
   14000b80d:	mov    eax,DWORD PTR [rax+0x24]
   14000b810:	shr    eax,0x1f
   14000b813:	not    eax
   14000b815:	and    eax,0x1
   14000b818:	jmp    0x14000b81c
   14000b81a:	xor    eax,eax
   14000b81c:	add    rsp,0x28
   14000b820:	ret    
   14000b821:	int3   
   14000b822:	jmp    QWORD PTR [rip+0x8a0]        # 0x14000c0c8
   14000b828:	jmp    QWORD PTR [rip+0x892]        # 0x14000c0c0
   14000b82e:	int3   
   14000b82f:	int3   
   14000b830:	xor    eax,eax
   14000b832:	ret    
   14000b833:	int3   
   14000b834:	mov    QWORD PTR [rsp+0x18],rbx
   14000b839:	push   rdi
   14000b83a:	sub    rsp,0x20
   14000b83e:	mov    rax,QWORD PTR [rip+0x11dd3]        # 0x14001d618
   14000b845:	and    QWORD PTR [rsp+0x30],0x0
   14000b84b:	movabs rdi,0x2b992ddfa232
   14000b855:	cmp    rax,rdi
   14000b858:	je     0x14000b866
   14000b85a:	not    rax
   14000b85d:	mov    QWORD PTR [rip+0x11dbc],rax        # 0x14001d620
   14000b864:	jmp    0x14000b8dc
   14000b866:	lea    rcx,[rsp+0x30]
   14000b86b:	call   QWORD PTR [rip+0x7cf]        # 0x14000c040
   14000b871:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b876:	call   QWORD PTR [rip+0x7cc]        # 0x14000c048
   14000b87c:	mov    r11d,eax
   14000b87f:	xor    rbx,r11
   14000b882:	call   QWORD PTR [rip+0x7b0]        # 0x14000c038
   14000b888:	mov    r11d,eax
   14000b88b:	xor    rbx,r11
   14000b88e:	call   QWORD PTR [rip+0x78c]        # 0x14000c020
   14000b894:	lea    rcx,[rsp+0x38]
   14000b899:	mov    r11d,eax
   14000b89c:	xor    rbx,r11
   14000b89f:	call   QWORD PTR [rip+0x773]        # 0x14000c018
   14000b8a5:	mov    r11,QWORD PTR [rsp+0x38]
   14000b8aa:	xor    r11,rbx
   14000b8ad:	movabs rax,0xffffffffffff
   14000b8b7:	and    r11,rax
   14000b8ba:	movabs rax,0x2b992ddfa233
   14000b8c4:	cmp    r11,rdi
   14000b8c7:	cmove  r11,rax
   14000b8cb:	mov    QWORD PTR [rip+0x11d46],r11        # 0x14001d618
   14000b8d2:	not    r11
   14000b8d5:	mov    QWORD PTR [rip+0x11d44],r11        # 0x14001d620
   14000b8dc:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b8e1:	add    rsp,0x20
   14000b8e5:	pop    rdi
   14000b8e6:	ret    
   14000b8e7:	int3   
   14000b8e8:	jmp    QWORD PTR [rip+0x7a2]        # 0x14000c090
   14000b8ee:	jmp    QWORD PTR [rip+0x794]        # 0x14000c088
   14000b8f4:	int3   
   14000b8f5:	int3   
   14000b8f6:	int3   
   14000b8f7:	int3   
   14000b8f8:	int3   
   14000b8f9:	int3   
   14000b8fa:	int3   
   14000b8fb:	int3   
   14000b8fc:	int3   
   14000b8fd:	int3   
   14000b8fe:	int3   
   14000b8ff:	int3   
   14000b900:	mov    rax,rsp
   14000b903:	mov    QWORD PTR [rax+0x8],rbx
   14000b907:	mov    QWORD PTR [rax+0x10],rbp
   14000b90b:	mov    QWORD PTR [rax+0x18],rsi
   14000b90f:	mov    QWORD PTR [rax+0x20],rdi
   14000b913:	push   r12
   14000b915:	sub    rsp,0x40
   14000b919:	xor    r12d,r12d
   14000b91c:	mov    rsi,rdx
   14000b91f:	mov    r8,rdx
   14000b922:	mov    QWORD PTR [rax-0x10],r12
   14000b926:	mov    QWORD PTR [rax-0x18],r12
   14000b92a:	mov    DWORD PTR [rax-0x20],r12d
   14000b92e:	or     r9d,0xffffffff
   14000b932:	xor    edx,edx
   14000b934:	mov    QWORD PTR [rax-0x28],r12
   14000b938:	mov    ebp,ecx
   14000b93a:	call   QWORD PTR [rip+0x6f0]        # 0x14000c030
   14000b940:	movsxd rbx,eax
   14000b943:	mov    rcx,rbx
   14000b946:	call   0x14000baa0
   14000b94b:	mov    QWORD PTR [rsp+0x38],r12
   14000b950:	mov    QWORD PTR [rsp+0x30],r12
   14000b955:	or     r9d,0xffffffff
   14000b959:	mov    r8,rsi
   14000b95c:	xor    edx,edx
   14000b95e:	mov    ecx,ebp
   14000b960:	mov    DWORD PTR [rsp+0x28],ebx
   14000b964:	mov    rdi,rax
   14000b967:	mov    QWORD PTR [rsp+0x20],rax
   14000b96c:	call   QWORD PTR [rip+0x6be]        # 0x14000c030
   14000b972:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b977:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b97c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b981:	mov    rax,rdi
   14000b984:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b989:	add    rsp,0x40
   14000b98d:	pop    r12
   14000b98f:	ret    
   14000b990:	push   r13
   14000b992:	sub    rsp,0x40
   14000b996:	call   QWORD PTR [rip+0x664]        # 0x14000c000
   14000b99c:	lea    rdx,[rsp+0x20]
   14000b9a1:	mov    rcx,rax
   14000b9a4:	call   QWORD PTR [rip+0x1b46]        # 0x14000d4f0
   14000b9aa:	mov    r13,rax
   14000b9ad:	test   rax,rax
   14000b9b0:	jne    0x14000b9bc
   14000b9b2:	or     eax,0xffffffff
   14000b9b5:	add    rsp,0x40
   14000b9b9:	pop    r13
   14000b9bb:	ret    
   14000b9bc:	mov    eax,DWORD PTR [rsp+0x20]
   14000b9c0:	mov    QWORD PTR [rsp+0x50],rbx
   14000b9c5:	mov    QWORD PTR [rsp+0x60],rsi
   14000b9ca:	inc    eax
   14000b9cc:	mov    QWORD PTR [rsp+0x38],rdi
   14000b9d1:	mov    QWORD PTR [rsp+0x30],r12
   14000b9d6:	movsxd rcx,eax
   14000b9d9:	mov    eax,0x8
   14000b9de:	mul    rcx
   14000b9e1:	mov    rcx,0xffffffffffffffff
   14000b9e8:	cmovo  rax,rcx
   14000b9ec:	mov    rcx,rax
   14000b9ef:	call   0x14000baa0
   14000b9f4:	mov    ecx,DWORD PTR [rsp+0x20]
   14000b9f8:	xor    edi,edi
   14000b9fa:	mov    r12,rax
   14000b9fd:	mov    esi,edi
   14000b9ff:	test   ecx,ecx
   14000ba01:	jle    0x14000ba33
   14000ba03:	mov    QWORD PTR [rsp+0x58],rbp
   14000ba08:	mov    rbp,r13
   14000ba0b:	mov    rbx,rax
   14000ba0e:	sub    rbp,rax
   14000ba11:	mov    rdx,QWORD PTR [rbx+rbp*1]
   14000ba15:	xor    ecx,ecx
   14000ba17:	call   0x14000b900
   14000ba1c:	inc    esi
   14000ba1e:	add    rbx,0x8
   14000ba22:	mov    QWORD PTR [rbx-0x8],rax
   14000ba26:	mov    ecx,DWORD PTR [rsp+0x20]
   14000ba2a:	cmp    esi,ecx
   14000ba2c:	jl     0x14000ba11
   14000ba2e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ba33:	movsxd rax,ecx
   14000ba36:	mov    rcx,r13
   14000ba39:	mov    QWORD PTR [r12+rax*8],rdi
   14000ba3d:	call   QWORD PTR [rip+0x5e5]        # 0x14000c028
   14000ba43:	mov    ecx,DWORD PTR [rsp+0x20]
   14000ba47:	mov    rdx,r12
   14000ba4a:	call   0x140001000
   14000ba4f:	cmp    DWORD PTR [rsp+0x20],edi
   14000ba53:	mov    esi,eax
   14000ba55:	jle    0x14000ba79
   14000ba57:	mov    rbx,r12
   14000ba5a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ba60:	mov    rcx,QWORD PTR [rbx]
   14000ba63:	test   rcx,rcx
   14000ba66:	je     0x14000ba79
   14000ba68:	call   0x14000baa6
   14000ba6d:	inc    edi
   14000ba6f:	add    rbx,0x8
   14000ba73:	cmp    edi,DWORD PTR [rsp+0x20]
   14000ba77:	jl     0x14000ba60
   14000ba79:	mov    rcx,r12
   14000ba7c:	call   0x14000baa6
   14000ba81:	mov    r12,QWORD PTR [rsp+0x30]
   14000ba86:	mov    rdi,QWORD PTR [rsp+0x38]
   14000ba8b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ba90:	mov    eax,esi
   14000ba92:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ba97:	add    rsp,0x40
   14000ba9b:	pop    r13
   14000ba9d:	ret    
   14000ba9e:	int3   
   14000ba9f:	int3   
   14000baa0:	jmp    0x14000b106
   14000baa5:	int3   
   14000baa6:	jmp    QWORD PTR [rip+0x5d4]        # 0x14000c080
   14000baac:	int3   
   14000baad:	int3   
   14000baae:	int3   
   14000baaf:	int3   
   14000bab0:	rex push rbp
   14000bab2:	sub    rsp,0x20
   14000bab6:	mov    rbp,rdx
   14000bab9:	mov    ecx,0x8
   14000babe:	call   0x14000b668
   14000bac3:	add    rsp,0x20
   14000bac7:	pop    rbp
   14000bac8:	ret    
   14000bac9:	rex push rbp
   14000bacb:	sub    rsp,0x20
   14000bacf:	mov    rbp,rdx
   14000bad2:	mov    rax,QWORD PTR [rcx]
   14000bad5:	mov    rdx,rcx
   14000bad8:	mov    ecx,DWORD PTR [rax]
   14000bada:	call   0x14000b750
   14000badf:	add    rsp,0x20
   14000bae3:	pop    rbp
   14000bae4:	ret    
   14000bae5:	rex push rbp
   14000bae7:	sub    rsp,0x20
   14000baeb:	mov    rbp,rdx
   14000baee:	mov    QWORD PTR [rbp+0x38],rcx
   14000baf2:	mov    QWORD PTR [rbp+0x28],rcx
   14000baf6:	mov    rax,QWORD PTR [rbp+0x28]
   14000bafa:	mov    rcx,QWORD PTR [rax]
   14000bafd:	mov    QWORD PTR [rbp+0x30],rcx
   14000bb01:	mov    rax,QWORD PTR [rbp+0x30]
   14000bb05:	cmp    DWORD PTR [rax],0xe06d7363
   14000bb0b:	je     0x14000bb19
   14000bb0d:	mov    DWORD PTR [rbp+0x20],0x0
   14000bb14:	mov    eax,DWORD PTR [rbp+0x20]
   14000bb17:	jmp    0x14000bb1e
   14000bb19:	call   0x14000b8e8
   14000bb1e:	add    rsp,0x20
   14000bb22:	pop    rbp
   14000bb23:	ret    
   14000bb24:	rex push rbp
   14000bb26:	sub    rsp,0x20
   14000bb2a:	mov    rbp,rdx
   14000bb2d:	cmp    DWORD PTR [rbp+0x20],0x0
   14000bb31:	jne    0x14000bb48
   14000bb33:	mov    r9,QWORD PTR [rbp+0x78]
   14000bb37:	mov    r8d,DWORD PTR [rbp+0x70]
   14000bb3b:	mov    rdx,QWORD PTR [rbp+0x68]
   14000bb3f:	mov    rcx,QWORD PTR [rbp+0x60]
   14000bb43:	call   0x14000b5b8
   14000bb48:	add    rsp,0x20
   14000bb4c:	pop    rbp
   14000bb4d:	ret    
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	rex push rbp
   14000bb52:	sub    rsp,0x20
   14000bb56:	mov    rbp,rdx
   14000bb59:	mov    rax,QWORD PTR [rcx]
   14000bb5c:	xor    ecx,ecx
   14000bb5e:	cmp    DWORD PTR [rax],0xc0000005
   14000bb64:	sete   cl
   14000bb67:	mov    eax,ecx
   14000bb69:	mov    eax,ecx
   14000bb6b:	add    rsp,0x20
   14000bb6f:	pop    rbp
   14000bb70:	ret    
   14000bb71:	int3   
   14000bb72:	int3   
   14000bb73:	int3   
   14000bb74:	int3   
   14000bb75:	int3   
   14000bb76:	int3   
   14000bb77:	int3   
   14000bb78:	int3   
   14000bb79:	int3   
   14000bb7a:	int3   
   14000bb7b:	int3   
   14000bb7c:	int3   
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	sub    rsp,0x28
   14000bb84:	lea    r9,[rip+0x4525]        # 0x1400100b0
   14000bb8b:	lea    r8,[rip+0x592e]        # 0x1400114c0
   14000bb92:	lea    rdx,[rip+0x595f]        # 0x1400114f8
   14000bb99:	mov    ecx,0x1
   14000bb9e:	call   0x14000b0f4
   14000bba3:	lea    rcx,[rip+0x46]        # 0x14000bbf0
   14000bbaa:	add    rsp,0x28
   14000bbae:	jmp    0x14000b234
   14000bbb3:	int3   
   14000bbb4:	int3   
   14000bbb5:	int3   
   14000bbb6:	int3   
   14000bbb7:	int3   
   14000bbb8:	int3   
   14000bbb9:	int3   
   14000bbba:	int3   
   14000bbbb:	int3   
   14000bbbc:	int3   
   14000bbbd:	int3   
   14000bbbe:	int3   
   14000bbbf:	int3   
   14000bbc0:	mov    rax,QWORD PTR [rip+0x1381]        # 0x14000cf48
   14000bbc7:	mov    QWORD PTR [rip+0x11972],rax        # 0x14001d540
   14000bbce:	ret    
   14000bbcf:	int3   
   14000bbd0:	mov    rax,QWORD PTR [rip+0x1389]        # 0x14000cf60
   14000bbd7:	mov    QWORD PTR [rip+0x1199a],rax        # 0x14001d578
   14000bbde:	ret    
   14000bbdf:	int3   
   14000bbe0:	mov    rax,QWORD PTR [rip+0x1361]        # 0x14000cf48
   14000bbe7:	mov    QWORD PTR [rip+0x119c2],rax        # 0x14001d5b0
   14000bbee:	ret    
   14000bbef:	int3   
   14000bbf0:	lea    r9,[rip+0x44b9]        # 0x1400100b0
   14000bbf7:	lea    r8,[rip+0x58c2]        # 0x1400114c0
   14000bbfe:	lea    rdx,[rip+0x58f3]        # 0x1400114f8
   14000bc05:	mov    ecx,0x1
   14000bc0a:	jmp    0x14000b0fa

Disassembly of section .rdata:

000000014000c000 <.rdata>:
   14000c000:	rol    ch,0x1
   14000c003:	add    BYTE PTR [rax],al
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rsp+rax*8+0x1],bh
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	(bad)  
   14000c011:	(bad)
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	add    ah,ch
   14000c019:	(bad)
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rsi],al
   14000c021:	(bad)
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	mov    ah,0xc5
   14000c02a:	add    DWORD PTR [rax],eax
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	sahf   
   14000c031:	(bad)
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	(bad)  
   14000c039:	(bad)
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	(bad)
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	sub    al,0xc5
   14000c04a:	add    DWORD PTR [rax],eax
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	mov    ah,0xc4
   14000c052:	add    DWORD PTR [rax],eax
	...
   14000c060:	and    al,0xc3
   14000c062:	add    DWORD PTR [rax],eax
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	sbb    al,bl
   14000c06a:	add    DWORD PTR [rax],eax
   14000c06c:	add    BYTE PTR [rax],al
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	or     bl,al
   14000c072:	add    DWORD PTR [rax],eax
   14000c074:	add    BYTE PTR [rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	cmp    al,bl
   14000c07a:	add    DWORD PTR [rax],eax
   14000c07c:	add    BYTE PTR [rax],al
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	mov    ebp,es
   14000c082:	add    DWORD PTR [rax],eax
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	jle    0x14000c04e
   14000c08a:	add    DWORD PTR [rax],eax
   14000c08c:	add    BYTE PTR [rax],al
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	push   0xffffffffffffffc4
   14000c092:	add    DWORD PTR [rax],eax
   14000c094:	add    BYTE PTR [rax],al
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	pop    rax
   14000c099:	(bad)
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi-0x3c],cl
   14000c0a2:	add    DWORD PTR [rax],eax
   14000c0a4:	add    BYTE PTR [rax],al
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	(bad)
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rsi],ch
   14000c0b1:	(bad)
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax],bl
   14000c0b9:	(bad)
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rdx],cl
   14000c0c1:	(bad)
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    dh,bh
   14000c0c9:	ret    
   14000c0ca:	add    DWORD PTR [rax],eax
   14000c0cc:	add    BYTE PTR [rax],al
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	hlt    
   14000c0d1:	ret    
   14000c0d2:	add    DWORD PTR [rax],eax
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	in     al,dx
   14000c0d9:	ret    
   14000c0da:	add    DWORD PTR [rax],eax
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	loop   0x14000c0a5
   14000c0e2:	add    DWORD PTR [rax],eax
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	(bad)  
   14000c0e9:	ret    
   14000c0ea:	add    DWORD PTR [rax],eax
   14000c0ec:	add    BYTE PTR [rax],al
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	int3   
   14000c0f1:	ret    
   14000c0f2:	add    DWORD PTR [rax],eax
   14000c0f4:	add    BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	mov    esi,0x1c3
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rsi+0x1c3],ch
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rax+0x1c3],ah
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rsi+0x1c3],cl
   14000c115:	add    BYTE PTR [rax],al
   14000c117:	add    BYTE PTR [rbx+rax*8+0x1],al
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	jl     0x14000c0e5
   14000c122:	add    DWORD PTR [rax],eax
   14000c124:	add    BYTE PTR [rax],al
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	push   0xffffffffffffffc3
   14000c12a:	add    DWORD PTR [rax],eax
   14000c12c:	add    BYTE PTR [rax],al
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	pop    rsp
   14000c131:	ret    
   14000c132:	add    DWORD PTR [rax],eax
   14000c134:	add    BYTE PTR [rax],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	push   rdx
   14000c139:	ret    
   14000c13a:	add    DWORD PTR [rax],eax
   14000c13c:	add    BYTE PTR [rax],al
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	clc    
   14000c141:	ret    0x1
	...
   14000c150:	xor    dh,BYTE PTR [rbp+0x1]
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	or     al,0xb5
   14000c15a:	add    DWORD PTR [rax],eax
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	rex.WRX mov bpl,0x1
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rdx-0x4b],dh
   14000c16a:	add    DWORD PTR [rax],eax
   14000c16c:	add    BYTE PTR [rax],al
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	mov    dl,0xc2
   14000c172:	add    DWORD PTR [rax],eax
   14000c174:	add    BYTE PTR [rax],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	js     0x14000c13c
   14000c17a:	add    DWORD PTR [rax],eax
   14000c17c:	add    BYTE PTR [rax],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	rex.WRX ret 0x1
   14000c184:	add    BYTE PTR [rax],al
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	es ret 0x1
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	(bad)  
   14000c191:	ret    0x1
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	call   0x14000c35e
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    al,dl
   14000c1a1:	rol    DWORD PTR [rcx],0x0
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	mov    eax,0x1c1
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    BYTE PTR [rdx-0x3f],ah
   14000c1b2:	add    DWORD PTR [rax],eax
   14000c1b4:	add    BYTE PTR [rax],al
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	cmp    al,0xc1
   14000c1ba:	add    DWORD PTR [rax],eax
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	adc    al,0xc1
   14000c1c2:	add    DWORD PTR [rax],eax
   14000c1c4:	add    BYTE PTR [rax],al
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	in     al,0xc0
   14000c1ca:	add    DWORD PTR [rax],eax
   14000c1cc:	add    BYTE PTR [rax],al
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	rol    al,1
   14000c1d2:	add    DWORD PTR [rax],eax
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	mov    al,0xc0
   14000c1da:	add    DWORD PTR [rax],eax
   14000c1dc:	add    BYTE PTR [rax],al
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	jb     0x14000c1a2
   14000c1e2:	add    DWORD PTR [rax],eax
   14000c1e4:	add    BYTE PTR [rax],al
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	rol    BYTE PTR ss:[rcx],0x0
   14000c1ec:	add    BYTE PTR [rax],al
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	adc    al,0xc0
   14000c1f2:	add    DWORD PTR [rax],eax
   14000c1f4:	add    BYTE PTR [rax],al
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	mov    edx,0x1bf
   14000c1fd:	add    BYTE PTR [rax],al
   14000c1ff:	add    BYTE PTR [rax+0x1bf],bl
   14000c205:	add    BYTE PTR [rax],al
   14000c207:	add    BYTE PTR [rdx-0x41],ah
   14000c20a:	add    DWORD PTR [rax],eax
   14000c20c:	add    BYTE PTR [rax],al
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	cmp    BYTE PTR [rdi+0x1],bh
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	adc    al,0xbf
   14000c21a:	add    DWORD PTR [rax],eax
   14000c21c:	add    BYTE PTR [rax],al
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	fidivr WORD PTR [rsi+0x1]
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	sahf   
   14000c229:	mov    esi,0x1
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	jle    0x14000c1f0
   14000c232:	add    DWORD PTR [rax],eax
   14000c234:	add    BYTE PTR [rax],al
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	pop    rsi
   14000c239:	mov    esi,0x1
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	(bad)  
   14000c241:	mov    esi,0x1
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	repnz mov ebp,0x1
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	(bad)  
   14000c251:	mov    ebp,0x1
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	sahf   
   14000c259:	mov    ebp,0x1
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	(bad)  
   14000c261:	mov    ebp,0x1
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	movabs rbp,0xbd22000000000001
   14000c272:	add    DWORD PTR [rax],eax
   14000c274:	add    BYTE PTR [rax],al
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	or     BYTE PTR [rbp+0x1],bh
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	(bad)  
   14000c281:	mov    esp,0x1
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	movabs ds:0x7e000000000001bc,al
   14000c291:	mov    esp,0x1
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	push   rsi
   14000c299:	mov    esp,0x1
   14000c29e:	add    BYTE PTR [rax],al
   14000c2a0:	sub    bh,BYTE PTR [rcx+rax*1+0x0]
   14000c2a7:	add    BYTE PTR [rsp+rdi*4],cl
   14000c2aa:	add    DWORD PTR [rax],eax
   14000c2ac:	add    BYTE PTR [rax],al
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	(bad)  
   14000c2b1:	mov    ebx,0x1
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	(bad)  
   14000c2b9:	mov    ebx,0x1
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	test   BYTE PTR [rbx+0x1],bh
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	pop    rsi
   14000c2c9:	mov    ebx,0x1
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	cmp    al,0xbb
   14000c2d2:	add    DWORD PTR [rax],eax
   14000c2d4:	add    BYTE PTR [rax],al
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	sbb    al,0xbb
   14000c2da:	add    DWORD PTR [rax],eax
   14000c2dc:	add    BYTE PTR [rax],al
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	add    bh,BYTE PTR [rbx+0x1]
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	fidivr DWORD PTR [rdx+0x1]
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	mov    dl,0xba
   14000c2f2:	add    DWORD PTR [rax],eax
   14000c2f4:	add    BYTE PTR [rax],al
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	mov    ?,WORD PTR [rdx+0x1]
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	pop    rsi
   14000c301:	mov    edx,0x1
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	sub    BYTE PTR [rdx+0x1],bh
   14000c30e:	add    BYTE PTR [rax],al
   14000c310:	hlt    
   14000c311:	mov    ecx,0x1
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	enter  0x1b9,0x0
   14000c31c:	add    BYTE PTR [rax],al
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	cwde   
   14000c321:	mov    ecx,0x1
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	fs mov ecx,0x1
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	cmp    al,0xb9
   14000c332:	add    DWORD PTR [rax],eax
   14000c334:	add    BYTE PTR [rax],al
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	adc    bh,BYTE PTR [rcx+0x1]
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	out    dx,al
   14000c341:	mov    eax,0x1
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	mov    esi,0x1b8
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rax+0x1b8],cl
   14000c355:	add    BYTE PTR [rax],al
   14000c357:	add    BYTE PTR [rax+rdi*4+0x1],ch
   14000c35b:	add    BYTE PTR [rax],al
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rdx-0x48],cl
   14000c362:	add    DWORD PTR [rax],eax
   14000c364:	add    BYTE PTR [rax],al
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	clc    
   14000c369:	mov    bh,0x1
   14000c36b:	add    BYTE PTR [rax],al
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    ah,bl
   14000c371:	mov    bh,0x1
   14000c373:	add    BYTE PTR [rax],al
   14000c375:	add    BYTE PTR [rax],al
   14000c377:	add    BYTE PTR [rsi+0x1b7],ch
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	add    BYTE PTR [rdi+rsi*4+0x1],al
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	push   rax
   14000c389:	mov    bh,0x1
   14000c38b:	add    BYTE PTR [rax],al
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rsi],bl
   14000c391:	mov    bh,0x1
   14000c393:	add    BYTE PTR [rax],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    ah,dh
   14000c399:	mov    dh,0x1
   14000c39b:	add    BYTE PTR [rax],al
   14000c39d:	add    BYTE PTR [rax],al
   14000c39f:	add    al,dl
   14000c3a1:	mov    dh,0x1
   14000c3a3:	add    BYTE PTR [rax],al
   14000c3a5:	add    BYTE PTR [rax],al
   14000c3a7:	add    BYTE PTR [rax+0x1b6],dh
   14000c3ad:	add    BYTE PTR [rax],al
   14000c3af:	add    BYTE PTR [rdx+0x1b6],cl
   14000c3b5:	add    BYTE PTR [rax],al
   14000c3b7:	add    BYTE PTR [rax-0x4a],bl
   14000c3ba:	add    DWORD PTR [rax],eax
   14000c3bc:	add    BYTE PTR [rax],al
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	ds mov dh,0x1
   14000c3c3:	add    BYTE PTR [rax],al
   14000c3c5:	add    BYTE PTR [rax],al
   14000c3c7:	add    BYTE PTR [rax],dl
   14000c3c9:	mov    dh,0x1
   14000c3cb:	add    BYTE PTR [rax],al
   14000c3cd:	add    BYTE PTR [rax],al
   14000c3cf:	add    ah,ch
   14000c3d1:	mov    ch,0x1
   14000c3d3:	add    BYTE PTR [rax],al
   14000c3d5:	add    BYTE PTR [rax],al
   14000c3d7:	add    BYTE PTR [rbp+rsi*4+0x1],dh
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	sahf   
   14000c3e1:	mov    ch,0x1
	...
   14000c3ef:	add    BYTE PTR [rdx-0x4f],dh
   14000c3f2:	add    DWORD PTR [rax],eax
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	movabs ds:0xd0000000000001ad,al
   14000c401:	lods   eax,DWORD PTR ds:[rsi]
   14000c402:	add    DWORD PTR [rax],eax
   14000c404:	add    BYTE PTR [rax],al
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	clc    
   14000c409:	lods   eax,DWORD PTR ds:[rsi]
   14000c40a:	add    DWORD PTR [rax],eax
   14000c40c:	add    BYTE PTR [rax],al
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	(bad)  
   14000c411:	scas   al,BYTE PTR es:[rdi]
   14000c412:	add    DWORD PTR [rax],eax
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	cmp    BYTE PTR [rsi+0x1],ch
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	mov    ?,WORD PTR [rcx+rax*1+0x0]
   14000c427:	add    BYTE PTR [rsp+rsi*4+0x1],ah
   14000c42b:	add    BYTE PTR [rax],al
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rdx],bh
   14000c431:	mov    ah,0x1
   14000c433:	add    BYTE PTR [rax],al
   14000c435:	add    BYTE PTR [rax],al
   14000c437:	add    dh,ch
   14000c439:	mov    bl,0x1
   14000c43b:	add    BYTE PTR [rax],al
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rax+0x1b3],ch
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rax-0x4d],bh
   14000c44a:	add    DWORD PTR [rax],eax
   14000c44c:	add    BYTE PTR [rax],al
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	mov    bl,0x1
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rbx+rsi*4],ch
   14000c45a:	add    DWORD PTR [rax],eax
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	sbb    BYTE PTR [rbx+0x1],dh
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	in     al,dx
   14000c469:	mov    dl,0x1
   14000c46b:	add    BYTE PTR [rax],al
   14000c46d:	add    BYTE PTR [rax],al
   14000c46f:	add    BYTE PTR [rdx+0x1b2],dh
   14000c475:	add    BYTE PTR [rax],al
   14000c477:	add    BYTE PTR [rsi+0x1b2],dl
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    BYTE PTR [rdx-0x4e],ch
   14000c482:	add    DWORD PTR [rax],eax
   14000c484:	add    BYTE PTR [rax],al
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	push   rax
   14000c489:	mov    dl,0x1
   14000c48b:	add    BYTE PTR [rax],al
   14000c48d:	add    BYTE PTR [rax],al
   14000c48f:	add    BYTE PTR [rsi],dh
   14000c491:	mov    dl,0x1
   14000c493:	add    BYTE PTR [rax],al
   14000c495:	add    BYTE PTR [rax],al
   14000c497:	add    BYTE PTR [rdx+rsi*4],cl
   14000c49a:	add    DWORD PTR [rax],eax
   14000c49c:	add    BYTE PTR [rax],al
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	in     al,0xb1
   14000c4a2:	add    DWORD PTR [rax],eax
   14000c4a4:	add    BYTE PTR [rax],al
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	(bad)  
   14000c4a9:	mov    cl,0x1
   14000c4ab:	add    BYTE PTR [rax],al
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rax+0x1b1],ch
   14000c4b5:	add    BYTE PTR [rax],al
   14000c4b7:	add    BYTE PTR [rsi-0x53],dh
   14000c4ba:	add    DWORD PTR [rax],eax
   14000c4bc:	add    BYTE PTR [rax],al
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	cmp    al,0xb1
   14000c4c2:	add    DWORD PTR [rax],eax
   14000c4c4:	add    BYTE PTR [rax],al
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	adc    BYTE PTR [rcx+0x1],dh
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	fdiv   QWORD PTR [rax+0x1]
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	mov    esi,0x1b0
   14000c4dd:	add    BYTE PTR [rax],al
   14000c4df:	add    BYTE PTR [rdx+0x1b0],ch
   14000c4e5:	add    BYTE PTR [rax],al
   14000c4e7:	add    BYTE PTR [rax+0x1b0],al
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    BYTE PTR [rdx-0x50],bl
   14000c4f2:	add    DWORD PTR [rax],eax
   14000c4f4:	add    BYTE PTR [rax],al
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	ds mov al,0x1
   14000c4fb:	add    BYTE PTR [rax],al
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	add    BYTE PTR [rax],dl
   14000c501:	mov    al,0x1
   14000c503:	add    BYTE PTR [rax],al
   14000c505:	add    BYTE PTR [rax],al
   14000c507:	add    al,ah
   14000c509:	scas   eax,DWORD PTR es:[rdi]
   14000c50a:	add    DWORD PTR [rax],eax
   14000c50c:	add    BYTE PTR [rax],al
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	nop
   14000c511:	scas   eax,DWORD PTR es:[rdi]
   14000c512:	add    DWORD PTR [rax],eax
   14000c514:	add    BYTE PTR [rax],al
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	push   rsp
   14000c519:	scas   eax,DWORD PTR es:[rdi]
   14000c51a:	add    DWORD PTR [rax],eax
   14000c51c:	add    BYTE PTR [rax],al
   14000c51e:	add    BYTE PTR [rax],al
   14000c520:	cmp    BYTE PTR [rdi+0x1],ch
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	and    BYTE PTR [rdi+0x1],ch
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	cli    
   14000c531:	scas   al,BYTE PTR es:[rdi]
   14000c532:	add    DWORD PTR [rax],eax
   14000c534:	add    BYTE PTR [rax],al
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	out    0xae,al
   14000c53a:	add    DWORD PTR [rax],eax
   14000c53c:	add    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	enter  0x1ae,0x0
   14000c544:	add    BYTE PTR [rax],al
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	mov    ah,0xae
   14000c54a:	add    DWORD PTR [rax],eax
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	mov    BYTE PTR [rsi+0x1],ch
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	push   0xffffffffffffffae
   14000c55a:	add    DWORD PTR [rax],eax
	...
   14000c568:	mov    edx,0x1b4
	...
   14000c575:	add    BYTE PTR [rax],al
   14000c577:	add    BYTE PTR [rsi+0x4f],bh
   14000c57a:	add    DWORD PTR [rax],eax
   14000c57c:	add    BYTE PTR [rax],al
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	mov    dl,0x4f
   14000c582:	add    DWORD PTR [rax],eax
   14000c584:	add    BYTE PTR [rax],al
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	push   rdx
   14000c589:	rex.WRXB add QWORD PTR [r8],r8
   14000c58c:	add    BYTE PTR [rax],al
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	cmp    BYTE PTR [rdi+0x1],cl
	...
   14000c59f:	add    BYTE PTR [rax],ch
   14000c5a1:	jb     0x14000c5a4
   14000c5a3:	add    BYTE PTR [rax],al
   14000c5a5:	add    BYTE PTR [rax],al
   14000c5a7:	add    BYTE PTR [rdx+0x72],bl
   14000c5aa:	add    DWORD PTR [rax],eax
   14000c5ac:	add    BYTE PTR [rax],al
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	mov    ?,WORD PTR [rdx+0x1]
   14000c5b3:	add    BYTE PTR [rax],al
   14000c5b5:	add    BYTE PTR [rax],al
   14000c5b7:	add    BYTE PTR [rdx+rsi*2+0x1],bh
   14000c5be:	add    BYTE PTR [rax],al
   14000c5c0:	loopne 0x14000c634
   14000c5c2:	add    DWORD PTR [rax],eax
   14000c5c4:	add    BYTE PTR [rax],al
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	(bad)  
   14000c5c9:	jae    0x14000c5cc
   14000c5cb:	add    BYTE PTR [rax],al
   14000c5cd:	add    BYTE PTR [rax],al
   14000c5cf:	add    BYTE PTR [rax],dh
   14000c5d1:	jae    0x14000c5d4
   14000c5d3:	add    BYTE PTR [rax],al
   14000c5d5:	add    BYTE PTR [rax],al
   14000c5d7:	add    BYTE PTR [rsi+0x73],bl
   14000c5da:	add    DWORD PTR [rax],eax
   14000c5dc:	add    BYTE PTR [rax],al
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	mov    WORD PTR [rbx+0x1],?
   14000c5e3:	add    BYTE PTR [rax],al
   14000c5e5:	add    BYTE PTR [rax],al
   14000c5e7:	add    al,bl
   14000c5e9:	jae    0x14000c5ec
   14000c5eb:	add    BYTE PTR [rax],al
   14000c5ed:	add    BYTE PTR [rax],al
   14000c5ef:	add    BYTE PTR [rax],cl
   14000c5f1:	je     0x14000c5f4
   14000c5f3:	add    BYTE PTR [rax],al
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    BYTE PTR [rdx],dh
   14000c5f9:	je     0x14000c5fc
   14000c5fb:	add    BYTE PTR [rax],al
   14000c5fd:	add    BYTE PTR [rax],al
   14000c5ff:	add    BYTE PTR [rsp+rsi*2+0x1],dl
   14000c603:	add    BYTE PTR [rax],al
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	add    BYTE PTR [rax+0x174],al
   14000c60d:	add    BYTE PTR [rax],al
   14000c60f:	add    BYTE PTR [rax+0x174],ch
   14000c615:	add    BYTE PTR [rax],al
   14000c617:	add    al,bl
   14000c619:	je     0x14000c61c
   14000c61b:	add    BYTE PTR [rax],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    ah,bh
   14000c621:	je     0x14000c624
   14000c623:	add    BYTE PTR [rax],al
   14000c625:	add    BYTE PTR [rax],al
   14000c627:	add    BYTE PTR [rax],ch
   14000c629:	jne    0x14000c62c
   14000c62b:	add    BYTE PTR [rax],al
   14000c62d:	add    BYTE PTR [rax],al
   14000c62f:	add    BYTE PTR [rax+0x75],dl
   14000c632:	add    DWORD PTR [rax],eax
   14000c634:	add    BYTE PTR [rax],al
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	sahf   
   14000c639:	jne    0x14000c63c
   14000c63b:	add    BYTE PTR [rax],al
   14000c63d:	add    BYTE PTR [rax],al
   14000c63f:	add    BYTE PTR [rax+0x175],bh
   14000c645:	add    BYTE PTR [rax],al
   14000c647:	add    dl,dl
   14000c649:	jne    0x14000c64c
   14000c64b:	add    BYTE PTR [rax],al
   14000c64d:	add    BYTE PTR [rax],al
   14000c64f:	add    al,ch
   14000c651:	jne    0x14000c654
   14000c653:	add    BYTE PTR [rax],al
   14000c655:	add    BYTE PTR [rax],al
   14000c657:	add    dh,bh
   14000c659:	jne    0x14000c65c
   14000c65b:	add    BYTE PTR [rax],al
   14000c65d:	add    BYTE PTR [rax],al
   14000c65f:	add    BYTE PTR [rax],bl
   14000c661:	jbe    0x14000c664
   14000c663:	add    BYTE PTR [rax],al
   14000c665:	add    BYTE PTR [rax],al
   14000c667:	add    BYTE PTR [rsi],dh
   14000c669:	jbe    0x14000c66c
   14000c66b:	add    BYTE PTR [rax],al
   14000c66d:	add    BYTE PTR [rax],al
   14000c66f:	add    BYTE PTR [rsi+0x76],cl
   14000c672:	add    DWORD PTR [rax],eax
   14000c674:	add    BYTE PTR [rax],al
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	push   0x76
   14000c67a:	add    DWORD PTR [rax],eax
   14000c67c:	add    BYTE PTR [rax],al
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	xchg   esp,eax
   14000c681:	jbe    0x14000c684
   14000c683:	add    BYTE PTR [rax],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    dl,cl
   14000c689:	jbe    0x14000c68c
   14000c68b:	add    BYTE PTR [rax],al
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    BYTE PTR [rax],al
   14000c691:	ja     0x14000c694
   14000c693:	add    BYTE PTR [rax],al
   14000c695:	add    BYTE PTR [rax],al
   14000c697:	add    BYTE PTR [rdx],ah
   14000c699:	ja     0x14000c69c
   14000c69b:	add    BYTE PTR [rax],al
   14000c69d:	add    BYTE PTR [rax],al
   14000c69f:	add    BYTE PTR [rax+0x77],cl
   14000c6a2:	add    DWORD PTR [rax],eax
   14000c6a4:	add    BYTE PTR [rax],al
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	je     0x14000c721
   14000c6aa:	add    DWORD PTR [rax],eax
   14000c6ac:	add    BYTE PTR [rax],al
   14000c6ae:	add    BYTE PTR [rax],al
   14000c6b0:	xchg   esp,eax
   14000c6b1:	ja     0x14000c6b4
   14000c6b3:	add    BYTE PTR [rax],al
   14000c6b5:	add    BYTE PTR [rax],al
   14000c6b7:	add    BYTE PTR [rdi+rsi*2+0x1],bh
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	in     al,dx
   14000c6c1:	ja     0x14000c6c4
   14000c6c3:	add    BYTE PTR [rax],al
   14000c6c5:	add    BYTE PTR [rax],al
   14000c6c7:	add    BYTE PTR [rax+0x78],al
   14000c6ca:	add    DWORD PTR [rax],eax
   14000c6cc:	add    BYTE PTR [rax],al
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d1:	js     0x14000c6d4
   14000c6d3:	add    BYTE PTR [rax],al
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rax+0x178],dl
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rax+rdi*2+0x1],bh
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	in     al,0x78
   14000c6ea:	add    DWORD PTR [rax],eax
   14000c6ec:	add    BYTE PTR [rax],al
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	sbb    BYTE PTR [rcx+0x1],bh
   14000c6f3:	add    BYTE PTR [rax],al
   14000c6f5:	add    BYTE PTR [rax],al
   14000c6f7:	add    BYTE PTR [rcx+rdi*2+0x1],al
   14000c6fb:	add    BYTE PTR [rax],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rcx+rdi*2+0x1],al
   14000c706:	add    BYTE PTR [rax],al
   14000c708:	mov    al,0x79
   14000c70a:	add    DWORD PTR [rax],eax
   14000c70c:	add    BYTE PTR [rax],al
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	out    dx,al
   14000c711:	jns    0x14000c714
   14000c713:	add    BYTE PTR [rax],al
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    BYTE PTR [rax],bl
   14000c719:	jp     0x14000c71c
   14000c71b:	add    BYTE PTR [rax],al
   14000c71d:	add    BYTE PTR [rax],al
   14000c71f:	add    BYTE PTR [rdx+0x7a],dl
   14000c722:	add    DWORD PTR [rax],eax
   14000c724:	add    BYTE PTR [rax],al
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	xchg   esp,eax
   14000c729:	jp     0x14000c72c
   14000c72b:	add    BYTE PTR [rax],al
   14000c72d:	add    BYTE PTR [rax],al
   14000c72f:	add    al,bl
   14000c731:	jp     0x14000c734
   14000c733:	add    BYTE PTR [rax],al
   14000c735:	add    BYTE PTR [rax],al
   14000c737:	add    BYTE PTR [rax],ah
   14000c739:	jnp    0x14000c73c
   14000c73b:	add    BYTE PTR [rax],al
   14000c73d:	add    BYTE PTR [rax],al
   14000c73f:	add    BYTE PTR [rax+0x7b],ah
   14000c742:	add    DWORD PTR [rax],eax
   14000c744:	add    BYTE PTR [rax],al
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	pushf  
   14000c749:	jnp    0x14000c74c
   14000c74b:	add    BYTE PTR [rax],al
   14000c74d:	add    BYTE PTR [rax],al
   14000c74f:	add    dl,bl
   14000c751:	jnp    0x14000c754
   14000c753:	add    BYTE PTR [rax],al
   14000c755:	add    BYTE PTR [rax],al
   14000c757:	add    BYTE PTR [rsi],dl
   14000c759:	jl     0x14000c75c
   14000c75b:	add    BYTE PTR [rax],al
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rsp+rdi*2+0x1],cl
   14000c763:	add    BYTE PTR [rax],al
   14000c765:	add    BYTE PTR [rax],al
   14000c767:	add    BYTE PTR [rsp+rdi*2+0x1],dl
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	fdivr  DWORD PTR [rcx+rax*1+0x0]
   14000c774:	add    BYTE PTR [rax],al
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	sbb    bh,BYTE PTR [rbp+0x1]
   14000c77b:	add    BYTE PTR [rax],al
   14000c77d:	add    BYTE PTR [rax],al
   14000c77f:	add    BYTE PTR [rsi+0x7d],bl
   14000c782:	add    DWORD PTR [rax],eax
   14000c784:	add    BYTE PTR [rax],al
   14000c786:	add    BYTE PTR [rax],al
   14000c788:	cwde   
   14000c789:	jge    0x14000c78c
   14000c78b:	add    BYTE PTR [rax],al
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    ah,al
   14000c791:	jge    0x14000c794
   14000c793:	add    BYTE PTR [rax],al
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    dl,dh
   14000c799:	jge    0x14000c79c
   14000c79b:	add    BYTE PTR [rax],al
   14000c79d:	add    BYTE PTR [rax],al
   14000c79f:	add    BYTE PTR [rsi],ch
   14000c7a1:	jle    0x14000c7a4
   14000c7a3:	add    BYTE PTR [rax],al
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rdx+0x7e],ch
   14000c7aa:	add    DWORD PTR [rax],eax
   14000c7ac:	add    BYTE PTR [rax],al
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	xchg   esi,eax
   14000c7b1:	jle    0x14000c7b4
   14000c7b3:	add    BYTE PTR [rax],al
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    al,cl
   14000c7b9:	jle    0x14000c7bc
   14000c7bb:	add    BYTE PTR [rax],al
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    ah,bh
   14000c7c1:	jle    0x14000c7c4
   14000c7c3:	add    BYTE PTR [rax],al
   14000c7c5:	add    BYTE PTR [rax],al
   14000c7c7:	add    BYTE PTR [rax],ch
   14000c7c9:	jg     0x14000c7cc
   14000c7cb:	add    BYTE PTR [rax],al
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rax+0x7f],ch
   14000c7d2:	add    DWORD PTR [rax],eax
   14000c7d4:	add    BYTE PTR [rax],al
   14000c7d6:	add    BYTE PTR [rax],al
   14000c7d8:	(bad)  
   14000c7d9:	jg     0x14000c7dc
   14000c7db:	add    BYTE PTR [rax],al
   14000c7dd:	add    BYTE PTR [rax],al
   14000c7df:	add    BYTE PTR [rdi+rdi*2+0x1],bl
   14000c7e6:	add    BYTE PTR [rax],al
   14000c7e8:	enter  0x17f,0x0
   14000c7ec:	add    BYTE PTR [rax],al
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	in     al,dx
   14000c7f1:	jg     0x14000c7f4
   14000c7f3:	add    BYTE PTR [rax],al
   14000c7f5:	add    BYTE PTR [rax],al
   14000c7f7:	add    BYTE PTR [rax+rax*4],bl
   14000c7fa:	add    DWORD PTR [rax],eax
   14000c7fc:	add    BYTE PTR [rax],al
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	add    BYTE PTR ds:[rcx],0x0
   14000c804:	add    BYTE PTR [rax],al
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	(bad)  
   14000c809:	add    BYTE PTR [rcx],0x0
   14000c80c:	add    BYTE PTR [rax],al
   14000c80e:	add    BYTE PTR [rax],al
   14000c810:	nop
   14000c811:	add    BYTE PTR [rcx],0x0
   14000c814:	add    BYTE PTR [rax],al
   14000c816:	add    BYTE PTR [rax],al
   14000c818:	mov    dh,0x80
   14000c81a:	add    DWORD PTR [rax],eax
   14000c81c:	add    BYTE PTR [rax],al
   14000c81e:	add    BYTE PTR [rax],al
   14000c820:	lock add BYTE PTR [rcx],0x0
   14000c824:	add    BYTE PTR [rax],al
   14000c826:	add    BYTE PTR [rax],al
   14000c828:	(bad)  
   14000c829:	add    DWORD PTR [rcx],0x0
   14000c82f:	add    BYTE PTR [rcx+rax*4+0x1],al
   14000c833:	add    BYTE PTR [rax],al
   14000c835:	add    BYTE PTR [rax],al
   14000c837:	add    BYTE PTR [rax-0x7f],ch
   14000c83a:	add    DWORD PTR [rax],eax
   14000c83c:	add    BYTE PTR [rax],al
   14000c83e:	add    BYTE PTR [rax],al
   14000c840:	pushf  
   14000c841:	add    DWORD PTR [rcx],0x0
   14000c847:	add    dl,dl
   14000c849:	add    DWORD PTR [rcx],0x0
   14000c84f:	add    BYTE PTR [rdx+rax*4],al
   14000c852:	add    DWORD PTR [rax],eax
   14000c854:	add    BYTE PTR [rax],al
   14000c856:	add    BYTE PTR [rax],al
   14000c858:	xor    al,BYTE PTR [rdx+0x1]
   14000c85e:	add    BYTE PTR [rax],al
   14000c860:	(bad)  
   14000c862:	add    DWORD PTR [rax],eax
   14000c864:	add    BYTE PTR [rax],al
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	mov    WORD PTR [rdx+0x1],es
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	mov    dh,0x82
   14000c872:	add    DWORD PTR [rax],eax
   14000c874:	add    BYTE PTR [rax],al
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	in     al,0x82
   14000c87a:	add    DWORD PTR [rax],eax
   14000c87c:	add    BYTE PTR [rax],al
   14000c87e:	add    BYTE PTR [rax],al
   14000c880:	adc    al,0x83
   14000c882:	add    DWORD PTR [rax],eax
   14000c884:	add    BYTE PTR [rax],al
   14000c886:	add    BYTE PTR [rax],al
   14000c888:	rex add DWORD PTR [rcx],0x0
   14000c88c:	add    BYTE PTR [rax],al
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	push   0xffffffffffffff83
   14000c892:	add    DWORD PTR [rax],eax
   14000c894:	add    BYTE PTR [rax],al
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	xchg   edx,eax
   14000c899:	add    DWORD PTR [rcx],0x0
   14000c89c:	add    BYTE PTR [rax],al
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	ret    0x183
   14000c8a3:	add    BYTE PTR [rax],al
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	add    dl,ch
   14000c8a9:	add    DWORD PTR [rcx],0x0
   14000c8ac:	add    BYTE PTR [rax],al
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	test   BYTE PTR es:[rcx],al
   14000c8b3:	add    BYTE PTR [rax],al
   14000c8b5:	add    BYTE PTR [rax],al
   14000c8b7:	add    BYTE PTR [rsi-0x7c],cl
   14000c8ba:	add    DWORD PTR [rax],eax
   14000c8bc:	add    BYTE PTR [rax],al
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	(bad)  
   14000c8c1:	test   BYTE PTR [rcx],al
   14000c8c3:	add    BYTE PTR [rax],al
   14000c8c5:	add    BYTE PTR [rax],al
   14000c8c7:	add    BYTE PTR [rax-0x7c],bh
   14000c8ca:	add    DWORD PTR [rax],eax
   14000c8cc:	add    BYTE PTR [rax],al
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	cwde   
   14000c8d1:	test   BYTE PTR [rcx],al
   14000c8d3:	add    BYTE PTR [rax],al
   14000c8d5:	add    BYTE PTR [rax],al
   14000c8d7:	add    dh,cl
   14000c8d9:	test   BYTE PTR [rcx],al
   14000c8db:	add    BYTE PTR [rax],al
   14000c8dd:	add    BYTE PTR [rax],al
   14000c8df:	add    al,dh
   14000c8e1:	test   BYTE PTR [rcx],al
   14000c8e3:	add    BYTE PTR [rax],al
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e7:	add    BYTE PTR [rax*4+0x1],bl
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	test   QWORD PTR [rcx],rax
   14000c8f3:	add    BYTE PTR [rax],al
   14000c8f5:	add    BYTE PTR [rax],al
   14000c8f7:	add    BYTE PTR [rdx-0x7b],ch
   14000c8fa:	add    DWORD PTR [rax],eax
   14000c8fc:	add    BYTE PTR [rax],al
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	xchg   esi,eax
   14000c901:	test   DWORD PTR [rcx],eax
   14000c903:	add    BYTE PTR [rax],al
   14000c905:	add    BYTE PTR [rax],al
   14000c907:	add    al,cl
   14000c909:	test   DWORD PTR [rcx],eax
   14000c90b:	add    BYTE PTR [rax],al
   14000c90d:	add    BYTE PTR [rax],al
   14000c90f:	add    al,dh
   14000c911:	test   DWORD PTR [rcx],eax
   14000c913:	add    BYTE PTR [rax],al
   14000c915:	add    BYTE PTR [rax],al
   14000c917:	add    BYTE PTR [rax],dl
   14000c919:	xchg   BYTE PTR [rcx],al
   14000c91b:	add    BYTE PTR [rax],al
   14000c91d:	add    BYTE PTR [rax],al
   14000c91f:	add    BYTE PTR [rsi],dh
   14000c921:	xchg   BYTE PTR [rcx],al
   14000c923:	add    BYTE PTR [rax],al
   14000c925:	add    BYTE PTR [rax],al
   14000c927:	add    BYTE PTR [rsi+rax*4+0x1],bl
   14000c92b:	add    BYTE PTR [rax],al
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    BYTE PTR [rdx+0x186],al
   14000c935:	add    BYTE PTR [rax],al
   14000c937:	add    BYTE PTR [rax+0x186],bh
   14000c93d:	add    BYTE PTR [rax],al
   14000c93f:	add    dl,ah
   14000c941:	xchg   BYTE PTR [rcx],al
   14000c943:	add    BYTE PTR [rax],al
   14000c945:	add    BYTE PTR [rax],al
   14000c947:	add    BYTE PTR [rax],cl
   14000c949:	xchg   DWORD PTR [rcx],eax
   14000c94b:	add    BYTE PTR [rax],al
   14000c94d:	add    BYTE PTR [rax],al
   14000c94f:	add    BYTE PTR [rdx],dh
   14000c951:	xchg   DWORD PTR [rcx],eax
   14000c953:	add    BYTE PTR [rax],al
   14000c955:	add    BYTE PTR [rax],al
   14000c957:	add    BYTE PTR [rsi-0x79],dl
   14000c95a:	add    DWORD PTR [rax],eax
   14000c95c:	add    BYTE PTR [rax],al
   14000c95e:	add    BYTE PTR [rax],al
   14000c960:	xchg   BYTE PTR [rdi+0x1],al
   14000c966:	add    BYTE PTR [rax],al
   14000c968:	scas   al,BYTE PTR es:[rdi]
   14000c969:	xchg   DWORD PTR [rcx],eax
   14000c96b:	add    BYTE PTR [rax],al
   14000c96d:	add    BYTE PTR [rax],al
   14000c96f:	add    ah,ch
   14000c971:	xchg   DWORD PTR [rcx],eax
   14000c973:	add    BYTE PTR [rax],al
   14000c975:	add    BYTE PTR [rax],al
   14000c977:	add    BYTE PTR [rax+rcx*4],dl
   14000c97a:	add    DWORD PTR [rax],eax
   14000c97c:	add    BYTE PTR [rax],al
   14000c97e:	add    BYTE PTR [rax],al
   14000c980:	pop    rax
   14000c981:	mov    BYTE PTR [rcx],al
   14000c983:	add    BYTE PTR [rax],al
   14000c985:	add    BYTE PTR [rax],al
   14000c987:	add    BYTE PTR [rax+0x188],al
   14000c98d:	add    BYTE PTR [rax],al
   14000c98f:	add    BYTE PTR [rax+0x188],dh
   14000c995:	add    BYTE PTR [rax],al
   14000c997:	add    al,ah
   14000c999:	mov    BYTE PTR [rcx],al
   14000c99b:	add    BYTE PTR [rax],al
   14000c99d:	add    BYTE PTR [rax],al
   14000c99f:	add    BYTE PTR [rsi],dl
   14000c9a1:	mov    DWORD PTR [rcx],eax
   14000c9a3:	add    BYTE PTR [rax],al
   14000c9a5:	add    BYTE PTR [rax],al
   14000c9a7:	add    BYTE PTR [rcx+rcx*4+0x1],al
   14000c9ab:	add    BYTE PTR [rax],al
   14000c9ad:	add    BYTE PTR [rax],al
   14000c9af:	add    BYTE PTR [rax+0x189],cl
   14000c9b5:	add    BYTE PTR [rax],al
   14000c9b7:	add    BYTE PTR [rsi+0x189],dh
   14000c9bd:	add    BYTE PTR [rax],al
   14000c9bf:	add    ah,bh
   14000c9c1:	mov    DWORD PTR [rcx],eax
   14000c9c3:	add    BYTE PTR [rax],al
   14000c9c5:	add    BYTE PTR [rax],al
   14000c9c7:	add    BYTE PTR [rdx+rcx*4],dh
   14000c9ca:	add    DWORD PTR [rax],eax
   14000c9cc:	add    BYTE PTR [rax],al
   14000c9ce:	add    BYTE PTR [rax],al
   14000c9d0:	data16 mov al,BYTE PTR [rcx]
   14000c9d3:	add    BYTE PTR [rax],al
   14000c9d5:	add    BYTE PTR [rax],al
   14000c9d7:	add    BYTE PTR [rdx+0x18a],ah
   14000c9dd:	add    BYTE PTR [rax],al
   14000c9df:	add    al,ah
   14000c9e1:	mov    al,BYTE PTR [rcx]
   14000c9e3:	add    BYTE PTR [rax],al
   14000c9e5:	add    BYTE PTR [rax],al
   14000c9e7:	add    BYTE PTR [rdx],ah
   14000c9e9:	mov    eax,DWORD PTR [rcx]
   14000c9eb:	add    BYTE PTR [rax],al
   14000c9ed:	add    BYTE PTR [rax],al
   14000c9ef:	add    BYTE PTR [rsi-0x75],bl
   14000c9f2:	add    DWORD PTR [rax],eax
   14000c9f4:	add    BYTE PTR [rax],al
   14000c9f6:	add    BYTE PTR [rax],al
   14000c9f8:	xchg   esi,eax
   14000c9f9:	mov    eax,DWORD PTR [rcx]
   14000c9fb:	add    BYTE PTR [rax],al
   14000c9fd:	add    BYTE PTR [rax],al
   14000c9ff:	add    dh,cl
   14000ca01:	mov    eax,DWORD PTR [rcx]
   14000ca03:	add    BYTE PTR [rax],al
   14000ca05:	add    BYTE PTR [rax],al
   14000ca07:	add    BYTE PTR [rax],cl
   14000ca09:	mov    WORD PTR [rcx],es
   14000ca0b:	add    BYTE PTR [rax],al
   14000ca0d:	add    BYTE PTR [rax],al
   14000ca0f:	add    BYTE PTR [rdx-0x74],al
   14000ca12:	add    DWORD PTR [rax],eax
   14000ca14:	add    BYTE PTR [rax],al
   14000ca16:	add    BYTE PTR [rax],al
   14000ca18:	jl     0x14000c9a6
   14000ca1a:	add    DWORD PTR [rax],eax
   14000ca1c:	add    BYTE PTR [rax],al
   14000ca1e:	add    BYTE PTR [rax],al
   14000ca20:	mov    ah,0x8c
   14000ca22:	add    DWORD PTR [rax],eax
   14000ca24:	add    BYTE PTR [rax],al
   14000ca26:	add    BYTE PTR [rax],al
   14000ca28:	out    dx,al
   14000ca29:	mov    WORD PTR [rcx],es
   14000ca2b:	add    BYTE PTR [rax],al
   14000ca2d:	add    BYTE PTR [rax],al
   14000ca2f:	add    BYTE PTR [rdx],dh
   14000ca31:	lea    eax,[rcx]
   14000ca33:	add    BYTE PTR [rax],al
   14000ca35:	add    BYTE PTR [rax],al
   14000ca37:	add    BYTE PTR [rdx-0x73],dh
   14000ca3a:	add    DWORD PTR [rax],eax
   14000ca3c:	add    BYTE PTR [rax],al
   14000ca3e:	add    BYTE PTR [rax],al
   14000ca40:	mov    al,0x8d
   14000ca42:	add    DWORD PTR [rax],eax
   14000ca44:	add    BYTE PTR [rax],al
   14000ca46:	add    BYTE PTR [rax],al
   14000ca48:	lock lea eax,[rcx]
   14000ca4b:	add    BYTE PTR [rax],al
   14000ca4d:	add    BYTE PTR [rax],al
   14000ca4f:	add    BYTE PTR [rsi],ah
   14000ca51:	mov    es,WORD PTR [rcx]
   14000ca53:	add    BYTE PTR [rax],al
   14000ca55:	add    BYTE PTR [rax],al
   14000ca57:	add    BYTE PTR [rsi+rcx*4+0x1],bl
   14000ca5b:	add    BYTE PTR [rax],al
   14000ca5d:	add    BYTE PTR [rax],al
   14000ca5f:	add    BYTE PTR [rax+0x18e],dl
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    ah,dl
   14000ca69:	mov    es,WORD PTR [rcx]
   14000ca6b:	add    BYTE PTR [rax],al
   14000ca6d:	add    BYTE PTR [rax],al
   14000ca6f:	add    BYTE PTR [rdi+rcx*4],ah
   14000ca72:	add    DWORD PTR [rax],eax
   14000ca74:	add    BYTE PTR [rax],al
   14000ca76:	add    BYTE PTR [rax],al
   14000ca78:	in     al,dx
   14000ca79:	jno    0x14000ca7c
   14000ca7b:	add    BYTE PTR [rax],al
   14000ca7d:	add    BYTE PTR [rax],al
   14000ca7f:	add    BYTE PTR [rdi+rcx*4+0x1],al
   14000ca86:	add    BYTE PTR [rax],al
   14000ca88:	mov    esi,0x18f
   14000ca8d:	add    BYTE PTR [rax],al
   14000ca8f:	add    dh,bh
   14000ca91:	pop    QWORD PTR [rcx]
   14000ca93:	add    BYTE PTR [rax],al
   14000ca95:	add    BYTE PTR [rax],al
   14000ca97:	add    BYTE PTR [rax+rdx*4+0x1],al
   14000ca9b:	add    BYTE PTR [rax],al
   14000ca9d:	add    BYTE PTR [rax],al
   14000ca9f:	add    BYTE PTR [rsi+0x190],al
   14000caa5:	add    BYTE PTR [rax],al
   14000caa7:	add    ah,al
   14000caa9:	nop
   14000caaa:	add    DWORD PTR [rax],eax
   14000caac:	add    BYTE PTR [rax],al
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	add    BYTE PTR [rcx+0x1],dl
   14000cab6:	add    BYTE PTR [rax],al
   14000cab8:	xor    dl,BYTE PTR [rcx+0x1]
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	pop    rsp
   14000cac1:	xchg   ecx,eax
   14000cac2:	add    DWORD PTR [rax],eax
   14000cac4:	add    BYTE PTR [rax],al
   14000cac6:	add    BYTE PTR [rax],al
   14000cac8:	(bad)  
   14000cac9:	xchg   ecx,eax
   14000caca:	add    DWORD PTR [rax],eax
   14000cacc:	add    BYTE PTR [rax],al
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	(bad)  
   14000cad1:	xchg   ecx,eax
   14000cad2:	add    DWORD PTR [rax],eax
   14000cad4:	add    BYTE PTR [rax],al
   14000cad6:	add    BYTE PTR [rax],al
   14000cad8:	in     al,dx
   14000cad9:	xchg   ecx,eax
   14000cada:	add    DWORD PTR [rax],eax
   14000cadc:	add    BYTE PTR [rax],al
   14000cade:	add    BYTE PTR [rax],al
   14000cae0:	sbb    al,0x92
   14000cae2:	add    DWORD PTR [rax],eax
   14000cae4:	add    BYTE PTR [rax],al
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	push   rsp
   14000cae9:	xchg   edx,eax
   14000caea:	add    DWORD PTR [rax],eax
   14000caec:	add    BYTE PTR [rax],al
   14000caee:	add    BYTE PTR [rax],al
   14000caf0:	mov    ss,WORD PTR [rdx+0x1]
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	rcl    BYTE PTR [rdx+0x1],0x0
   14000caff:	add    ah,dh
   14000cb01:	xchg   edx,eax
   14000cb02:	add    DWORD PTR [rax],eax
   14000cb04:	add    BYTE PTR [rax],al
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	sub    dl,BYTE PTR [rbx+0x1]
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	pop    rsi
   14000cb11:	xchg   ebx,eax
   14000cb12:	add    DWORD PTR [rax],eax
   14000cb14:	add    BYTE PTR [rax],al
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	xchg   esp,eax
   14000cb19:	xchg   ebx,eax
   14000cb1a:	add    DWORD PTR [rax],eax
   14000cb1c:	add    BYTE PTR [rax],al
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	(bad)  
   14000cb21:	xchg   ebx,eax
   14000cb22:	add    DWORD PTR [rax],eax
   14000cb24:	add    BYTE PTR [rax],al
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	cli    
   14000cb29:	xchg   ebx,eax
   14000cb2a:	add    DWORD PTR [rax],eax
   14000cb2c:	add    BYTE PTR [rax],al
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	cmp    BYTE PTR [rcx+rax*1+0x0],dl
   14000cb37:	add    BYTE PTR [rax-0x6c],ch
   14000cb3a:	add    DWORD PTR [rax],eax
   14000cb3c:	add    BYTE PTR [rax],al
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	cwde   
   14000cb41:	xchg   esp,eax
   14000cb42:	add    DWORD PTR [rax],eax
   14000cb44:	add    BYTE PTR [rax],al
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	(bad)  
   14000cb49:	xchg   esp,eax
   14000cb4a:	add    DWORD PTR [rax],eax
   14000cb4c:	add    BYTE PTR [rax],al
   14000cb4e:	add    BYTE PTR [rax],al
   14000cb50:	add    al,0x95
   14000cb52:	add    DWORD PTR [rax],eax
   14000cb54:	add    BYTE PTR [rax],al
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	rex.WRX xchg rbp,rax
   14000cb5a:	add    DWORD PTR [rax],eax
   14000cb5c:	add    BYTE PTR [rax],al
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	outs   dx,BYTE PTR ds:[rsi]
   14000cb61:	xchg   ebp,eax
   14000cb62:	add    DWORD PTR [rax],eax
   14000cb64:	add    BYTE PTR [rax],al
   14000cb66:	add    BYTE PTR [rax],al
   14000cb68:	mov    ss,WORD PTR [rbp+0x1]
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	rcl    BYTE PTR [rbp+0x1],0x0
   14000cb77:	add    dl,ch
   14000cb79:	xchg   ebp,eax
   14000cb7a:	add    DWORD PTR [rax],eax
   14000cb7c:	add    BYTE PTR [rax],al
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	sub    BYTE PTR [rsi+0x1],dl
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	push   rdx
   14000cb89:	xchg   esi,eax
   14000cb8a:	add    DWORD PTR [rax],eax
   14000cb8c:	add    BYTE PTR [rax],al
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	test   BYTE PTR [rsi+0x1],dl
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	mov    ah,0x96
   14000cb9a:	add    DWORD PTR [rax],eax
   14000cb9c:	add    BYTE PTR [rax],al
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	in     al,dx
   14000cba1:	xchg   esi,eax
   14000cba2:	add    DWORD PTR [rax],eax
   14000cba4:	add    BYTE PTR [rax],al
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	es xchg edi,eax
   14000cbaa:	add    DWORD PTR [rax],eax
   14000cbac:	add    BYTE PTR [rax],al
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	pop    rsp
   14000cbb1:	xchg   edi,eax
   14000cbb2:	add    DWORD PTR [rax],eax
   14000cbb4:	add    BYTE PTR [rax],al
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	nop
   14000cbb9:	xchg   edi,eax
   14000cbba:	add    DWORD PTR [rax],eax
   14000cbbc:	add    BYTE PTR [rax],al
   14000cbbe:	add    BYTE PTR [rax],al
   14000cbc0:	ret    0x197
   14000cbc3:	add    BYTE PTR [rax],al
   14000cbc5:	add    BYTE PTR [rax],al
   14000cbc7:	add    dh,dh
   14000cbc9:	xchg   edi,eax
   14000cbca:	add    DWORD PTR [rax],eax
   14000cbcc:	add    BYTE PTR [rax],al
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	and    al,0x98
   14000cbd2:	add    DWORD PTR [rax],eax
   14000cbd4:	add    BYTE PTR [rax],al
   14000cbd6:	add    BYTE PTR [rax],al
   14000cbd8:	pop    rax
   14000cbd9:	cwde   
   14000cbda:	add    DWORD PTR [rax],eax
   14000cbdc:	add    BYTE PTR [rax],al
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	test   BYTE PTR [rax+0x1],bl
   14000cbe6:	add    BYTE PTR [rax],al
   14000cbe8:	(bad)  
   14000cbe9:	cwde   
   14000cbea:	add    DWORD PTR [rax],eax
   14000cbec:	add    BYTE PTR [rax],al
   14000cbee:	add    BYTE PTR [rax],al
   14000cbf0:	lock cwde 
   14000cbf2:	add    DWORD PTR [rax],eax
   14000cbf4:	add    BYTE PTR [rax],al
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	sbb    bl,BYTE PTR [rcx+0x1]
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	rex.WR cqo 
   14000cc02:	add    DWORD PTR [rax],eax
   14000cc04:	add    BYTE PTR [rax],al
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	mov    BYTE PTR [rcx+0x1],bl
   14000cc0e:	add    BYTE PTR [rax],al
   14000cc10:	mov    esi,0x199
   14000cc15:	add    BYTE PTR [rax],al
   14000cc17:	add    ah,dh
   14000cc19:	cdq    
   14000cc1a:	add    DWORD PTR [rax],eax
   14000cc1c:	add    BYTE PTR [rax],al
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	sub    al,0x9a
   14000cc22:	add    DWORD PTR [rax],eax
   14000cc24:	add    BYTE PTR [rax],al
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	(bad)  
   14000cc29:	(bad)  
   14000cc2a:	add    DWORD PTR [rax],eax
   14000cc2c:	add    BYTE PTR [rax],al
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	xchg   esp,eax
   14000cc31:	(bad)  
   14000cc32:	add    DWORD PTR [rax],eax
   14000cc34:	add    BYTE PTR [rax],al
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	mov    esi,0x19a
   14000cc3d:	add    BYTE PTR [rax],al
   14000cc3f:	add    dl,ch
   14000cc41:	(bad)  
   14000cc42:	add    DWORD PTR [rax],eax
   14000cc44:	add    BYTE PTR [rax],al
   14000cc46:	add    BYTE PTR [rax],al
   14000cc48:	add    bl,BYTE PTR [rbx+0x1]
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	and    BYTE PTR [rbx+0x1],bl
   14000cc56:	add    BYTE PTR [rax],al
   14000cc58:	cmp    BYTE PTR [rbx+0x1],bl
   14000cc5e:	add    BYTE PTR [rax],al
   14000cc60:	push   rax
   14000cc61:	fwait
   14000cc62:	add    DWORD PTR [rax],eax
   14000cc64:	add    BYTE PTR [rax],al
   14000cc66:	add    BYTE PTR [rax],al
   14000cc68:	push   0xffffffffffffff9b
   14000cc6a:	add    DWORD PTR [rax],eax
   14000cc6c:	add    BYTE PTR [rax],al
   14000cc6e:	add    BYTE PTR [rax],al
   14000cc70:	nop
   14000cc71:	fwait
   14000cc72:	add    DWORD PTR [rax],eax
   14000cc74:	add    BYTE PTR [rax],al
   14000cc76:	add    BYTE PTR [rax],al
   14000cc78:	mov    dh,0x9b
   14000cc7a:	add    DWORD PTR [rax],eax
   14000cc7c:	add    BYTE PTR [rax],al
   14000cc7e:	add    BYTE PTR [rax],al
   14000cc80:	hlt    
   14000cc81:	fwait
   14000cc82:	add    DWORD PTR [rax],eax
   14000cc84:	add    BYTE PTR [rax],al
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	ds pushf 
   14000cc8a:	add    DWORD PTR [rax],eax
   14000cc8c:	add    BYTE PTR [rax],al
   14000cc8e:	add    BYTE PTR [rax],al
   14000cc90:	pushfw 
   14000cc92:	add    DWORD PTR [rax],eax
   14000cc94:	add    BYTE PTR [rax],al
   14000cc96:	add    BYTE PTR [rax],al
   14000cc98:	(bad)  
   14000cc99:	pushf  
   14000cc9a:	add    DWORD PTR [rax],eax
   14000cc9c:	add    BYTE PTR [rax],al
   14000cc9e:	add    BYTE PTR [rax],al
   14000cca0:	add    al,0x9d
   14000cca2:	add    DWORD PTR [rax],eax
   14000cca4:	add    BYTE PTR [rax],al
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	xor    BYTE PTR [rbp+0x1],bl
   14000ccae:	add    BYTE PTR [rax],al
   14000ccb0:	pop    rsp
   14000ccb1:	popf   
   14000ccb2:	add    DWORD PTR [rax],eax
   14000ccb4:	add    BYTE PTR [rax],al
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	xchg   esp,eax
   14000ccb9:	popf   
   14000ccba:	add    DWORD PTR [rax],eax
   14000ccbc:	add    BYTE PTR [rax],al
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	(bad)  
   14000ccc1:	popf   
   14000ccc2:	add    DWORD PTR [rax],eax
   14000ccc4:	add    BYTE PTR [rax],al
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	or     bl,BYTE PTR [rsi+0x1]
   14000ccce:	add    BYTE PTR [rax],al
   14000ccd0:	cmp    bl,BYTE PTR [rsi+0x1]
   14000ccd6:	add    BYTE PTR [rax],al
   14000ccd8:	jo     0x14000cc78
   14000ccda:	add    DWORD PTR [rax],eax
   14000ccdc:	add    BYTE PTR [rax],al
   14000ccde:	add    BYTE PTR [rax],al
   14000cce0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cce1:	sahf   
   14000cce2:	add    DWORD PTR [rax],eax
   14000cce4:	add    BYTE PTR [rax],al
   14000cce6:	add    BYTE PTR [rax],al
   14000cce8:	rcr    BYTE PTR [rsi+0x1],1
   14000ccee:	add    BYTE PTR [rax],al
   14000ccf0:	adc    BYTE PTR [rdi+0x1],bl
   14000ccf6:	add    BYTE PTR [rax],al
   14000ccf8:	rex.X lahf 
   14000ccfa:	add    DWORD PTR [rax],eax
   14000ccfc:	add    BYTE PTR [rax],al
   14000ccfe:	add    BYTE PTR [rax],al
   14000cd00:	jb     0x14000cca1
   14000cd02:	add    DWORD PTR [rax],eax
   14000cd04:	add    BYTE PTR [rax],al
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	movabs ds:0xc00000000000019f,al
   14000cd11:	lahf   
   14000cd12:	add    DWORD PTR [rax],eax
   14000cd14:	add    BYTE PTR [rax],al
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	(bad)  
   14000cd19:	lahf   
   14000cd1a:	add    DWORD PTR [rax],eax
   14000cd1c:	add    BYTE PTR [rax],al
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	sbb    BYTE PTR [rax+0x1],ah
   14000cd26:	add    BYTE PTR [rax],al
   14000cd28:	rex.X movabs al,ds:0xa08e000000000001
   14000cd32:	add    DWORD PTR [rax],eax
   14000cd34:	add    BYTE PTR [rax],al
   14000cd36:	add    BYTE PTR [rax],al
   14000cd38:	mov    esi,0x1a0
   14000cd3d:	add    BYTE PTR [rax],al
   14000cd3f:	add    dl,ch
   14000cd41:	movabs al,ds:0xa112000000000001
   14000cd4a:	add    DWORD PTR [rax],eax
   14000cd4c:	add    BYTE PTR [rax],al
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	movabs eax,ss:0xa168000000000001
   14000cd5a:	add    DWORD PTR [rax],eax
   14000cd5c:	add    BYTE PTR [rax],al
   14000cd5e:	add    BYTE PTR [rax],al
   14000cd60:	xchg   edx,eax
   14000cd61:	movabs eax,ds:0xa1d0000000000001
   14000cd6a:	add    DWORD PTR [rax],eax
   14000cd6c:	add    BYTE PTR [rax],al
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	cli    
   14000cd71:	movabs eax,ds:0xa222000000000001
   14000cd7a:	add    DWORD PTR [rax],eax
   14000cd7c:	add    BYTE PTR [rax],al
   14000cd7e:	add    BYTE PTR [rax],al
   14000cd80:	push   rdx
   14000cd81:	movabs ds:0xa28a000000000001,al
   14000cd8a:	add    DWORD PTR [rax],eax
   14000cd8c:	add    BYTE PTR [rax],al
   14000cd8e:	add    BYTE PTR [rax],al
   14000cd90:	vpshufb xmm0,xmm15,XMMWORD PTR [rax]
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    BYTE PTR [rdx],al
   14000cd99:	movabs ds:0xa338000000000001,eax
   14000cda2:	add    DWORD PTR [rax],eax
   14000cda4:	add    BYTE PTR [rax],al
   14000cda6:	add    BYTE PTR [rax],al
   14000cda8:	ins    BYTE PTR es:[rdi],dx
   14000cda9:	movabs ds:0xa3a0000000000001,eax
   14000cdb2:	add    DWORD PTR [rax],eax
   14000cdb4:	add    BYTE PTR [rax],al
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	(bad)  
   14000cdb9:	movabs ds:0xa408000000000001,eax
   14000cdc2:	add    DWORD PTR [rax],eax
   14000cdc4:	add    BYTE PTR [rax],al
   14000cdc6:	add    BYTE PTR [rax],al
   14000cdc8:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cdca:	add    DWORD PTR [rax],eax
   14000cdcc:	add    BYTE PTR [rax],al
   14000cdce:	add    BYTE PTR [rax],al
   14000cdd0:	and    BYTE PTR [rcx+rax*1+0x0],0x0
   14000cdd8:	mov    eax,0x1a4
   14000cddd:	add    BYTE PTR [rax],al
   14000cddf:	add    dl,dh
   14000cde1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cde2:	add    DWORD PTR [rax],eax
   14000cde4:	add    BYTE PTR [rax],al
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	and    ah,BYTE PTR [rbp+0x1]
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	push   rax
   14000cdf1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cdf2:	add    DWORD PTR [rax],eax
   14000cdf4:	add    BYTE PTR [rax],al
   14000cdf6:	add    BYTE PTR [rax],al
   14000cdf8:	mov    fs,WORD PTR [rbp+0x1]
   14000cdfe:	add    BYTE PTR [rax],al
   14000ce00:	fsub   DWORD PTR [rbp+0x1]
   14000ce06:	add    BYTE PTR [rax],al
   14000ce08:	clc    
   14000ce09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ce0a:	add    DWORD PTR [rax],eax
   14000ce0c:	add    BYTE PTR [rax],al
   14000ce0e:	add    BYTE PTR [rax],al
   14000ce10:	adc    ah,BYTE PTR [rsi+0x1]
   14000ce16:	add    BYTE PTR [rax],al
   14000ce18:	sub    ah,BYTE PTR [rsi+0x1]
   14000ce1e:	add    BYTE PTR [rax],al
   14000ce20:	pop    rsi
   14000ce21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce22:	add    DWORD PTR [rax],eax
   14000ce24:	add    BYTE PTR [rax],al
   14000ce26:	add    BYTE PTR [rax],al
   14000ce28:	sahf   
   14000ce29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce2a:	add    DWORD PTR [rax],eax
   14000ce2c:	add    BYTE PTR [rax],al
   14000ce2e:	add    BYTE PTR [rax],al
   14000ce30:	int3   
   14000ce31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce32:	add    DWORD PTR [rax],eax
   14000ce34:	add    BYTE PTR [rax],al
   14000ce36:	add    BYTE PTR [rax],al
   14000ce38:	adc    al,0xa7
   14000ce3a:	add    DWORD PTR [rax],eax
   14000ce3c:	add    BYTE PTR [rax],al
   14000ce3e:	add    BYTE PTR [rax],al
   14000ce40:	xor    BYTE PTR [rdi+0x1],ah
   14000ce46:	add    BYTE PTR [rax],al
   14000ce48:	pop    rsp
   14000ce49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ce4a:	add    DWORD PTR [rax],eax
   14000ce4c:	add    BYTE PTR [rax],al
   14000ce4e:	add    BYTE PTR [rax],al
   14000ce50:	jl     0x14000cdf9
   14000ce52:	add    DWORD PTR [rax],eax
   14000ce54:	add    BYTE PTR [rax],al
   14000ce56:	add    BYTE PTR [rax],al
   14000ce58:	sahf   
   14000ce59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ce5a:	add    DWORD PTR [rax],eax
   14000ce5c:	add    BYTE PTR [rax],al
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	shl    BYTE PTR [rdi+0x1],0x0
   14000ce67:	add    al,dh
   14000ce69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ce6a:	add    DWORD PTR [rax],eax
   14000ce6c:	add    BYTE PTR [rax],al
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	or     ch,BYTE PTR [rax+0x1]
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	test   al,0x1
   14000ce7b:	add    BYTE PTR [rax],al
   14000ce7d:	add    BYTE PTR [rax],al
   14000ce7f:	add    BYTE PTR [rax+rbp*4+0x1],al
   14000ce86:	add    BYTE PTR [rax],al
   14000ce88:	mov    al,0xa8
   14000ce8a:	add    DWORD PTR [rax],eax
   14000ce8c:	add    BYTE PTR [rax],al
   14000ce8e:	add    BYTE PTR [rax],al
   14000ce90:	lock test al,0x1
   14000ce93:	add    BYTE PTR [rax],al
   14000ce95:	add    BYTE PTR [rax],al
   14000ce97:	add    BYTE PTR [rdx],ah
   14000ce99:	test   eax,0x1
   14000ce9e:	add    BYTE PTR [rax],al
   14000cea0:	push   rdx
   14000cea1:	test   eax,0x1
   14000cea6:	add    BYTE PTR [rax],al
   14000cea8:	jp     0x14000ce53
   14000ceaa:	add    DWORD PTR [rax],eax
   14000ceac:	add    BYTE PTR [rax],al
   14000ceae:	add    BYTE PTR [rax],al
   14000ceb0:	mov    dh,0xa9
   14000ceb2:	add    DWORD PTR [rax],eax
   14000ceb4:	add    BYTE PTR [rax],al
   14000ceb6:	add    BYTE PTR [rax],al
   14000ceb8:	lock test eax,0x1
   14000cebe:	add    BYTE PTR [rax],al
   14000cec0:	adc    ch,BYTE PTR [rdx+0x1]
   14000cec6:	add    BYTE PTR [rax],al
   14000cec8:	cmp    BYTE PTR [rdx+0x1],ch
   14000cece:	add    BYTE PTR [rax],al
   14000ced0:	data16 stos BYTE PTR es:[rdi],al
   14000ced2:	add    DWORD PTR [rax],eax
   14000ced4:	add    BYTE PTR [rax],al
   14000ced6:	add    BYTE PTR [rax],al
   14000ced8:	cwde   
   14000ced9:	stos   BYTE PTR es:[rdi],al
   14000ceda:	add    DWORD PTR [rax],eax
   14000cedc:	add    BYTE PTR [rax],al
   14000cede:	add    BYTE PTR [rax],al
   14000cee0:	retf   0x1aa
   14000cee3:	add    BYTE PTR [rax],al
   14000cee5:	add    BYTE PTR [rax],al
   14000cee7:	add    dl,bh
   14000cee9:	stos   BYTE PTR es:[rdi],al
   14000ceea:	add    DWORD PTR [rax],eax
   14000ceec:	add    BYTE PTR [rax],al
   14000ceee:	add    BYTE PTR [rax],al
   14000cef0:	ss stos DWORD PTR es:[rdi],eax
   14000cef2:	add    DWORD PTR [rax],eax
   14000cef4:	add    BYTE PTR [rax],al
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	fs stos DWORD PTR es:[rdi],eax
   14000cefa:	add    DWORD PTR [rax],eax
   14000cefc:	add    BYTE PTR [rax],al
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	jle    0x14000cead
   14000cf02:	add    DWORD PTR [rax],eax
   14000cf04:	add    BYTE PTR [rax],al
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	cwde   
   14000cf09:	stos   DWORD PTR es:[rdi],eax
   14000cf0a:	add    DWORD PTR [rax],eax
   14000cf0c:	add    BYTE PTR [rax],al
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	mov    dl,0xab
   14000cf12:	add    DWORD PTR [rax],eax
   14000cf14:	add    BYTE PTR [rax],al
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	(bad)  
   14000cf19:	stos   DWORD PTR es:[rdi],eax
   14000cf1a:	add    DWORD PTR [rax],eax
   14000cf1c:	add    BYTE PTR [rax],al
   14000cf1e:	add    BYTE PTR [rax],al
   14000cf20:	(bad)  
   14000cf21:	stos   DWORD PTR es:[rdi],eax
   14000cf22:	add    DWORD PTR [rax],eax
   14000cf24:	add    BYTE PTR [rax],al
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	add    BYTE PTR [rcx+rax*1+0x0],ch
   14000cf2f:	add    BYTE PTR [rdx],ah
   14000cf31:	lods   al,BYTE PTR ds:[rsi]
   14000cf32:	add    DWORD PTR [rax],eax
   14000cf34:	add    BYTE PTR [rax],al
   14000cf36:	add    BYTE PTR [rax],al
   14000cf38:	rex.WX lods al,BYTE PTR ds:[rsi]
   14000cf3a:	add    DWORD PTR [rax],eax
   14000cf3c:	add    BYTE PTR [rax],al
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	jo     0x14000ceee
   14000cf42:	add    DWORD PTR [rax],eax
   14000cf44:	add    BYTE PTR [rax],al
   14000cf46:	add    BYTE PTR [rax],al
   14000cf48:	(bad)  
   14000cf49:	lods   al,BYTE PTR ds:[rsi]
   14000cf4a:	add    DWORD PTR [rax],eax
   14000cf4c:	add    BYTE PTR [rax],al
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	enter  0x1ac,0x0
   14000cf54:	add    BYTE PTR [rax],al
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	hlt    
   14000cf59:	lods   al,BYTE PTR ds:[rsi]
   14000cf5a:	add    DWORD PTR [rax],eax
   14000cf5c:	add    BYTE PTR [rax],al
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	xor    al,0xad
   14000cf62:	add    DWORD PTR [rax],eax
   14000cf64:	add    BYTE PTR [rax],al
   14000cf66:	add    BYTE PTR [rax],al
   14000cf68:	mov    dl,0x71
   14000cf6a:	add    DWORD PTR [rax],eax
   14000cf6c:	add    BYTE PTR [rax],al
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	jbe    0x14000cfe3
   14000cf72:	add    DWORD PTR [rax],eax
   14000cf74:	add    BYTE PTR [rax],al
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	cmp    al,0x71
   14000cf7a:	add    DWORD PTR [rax],eax
   14000cf7c:	add    BYTE PTR [rax],al
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	(bad)  
   14000cf81:	jno    0x14000cf84
   14000cf83:	add    BYTE PTR [rax],al
   14000cf85:	add    BYTE PTR [rax],al
   14000cf87:	add    dh,al
   14000cf89:	jo     0x14000cf8c
   14000cf8b:	add    BYTE PTR [rax],al
   14000cf8d:	add    BYTE PTR [rax],al
   14000cf8f:	add    BYTE PTR [rax+0x170],cl
   14000cf95:	add    BYTE PTR [rax],al
   14000cf97:	add    BYTE PTR [rax+0x70],bl
   14000cf9a:	add    DWORD PTR [rax],eax
   14000cf9c:	add    BYTE PTR [rax],al
   14000cf9e:	add    BYTE PTR [rax],al
   14000cfa0:	xor    BYTE PTR [rax+0x1],dh
   14000cfa3:	add    BYTE PTR [rax],al
   14000cfa5:	add    BYTE PTR [rax],al
   14000cfa7:	add    al,bh
   14000cfa9:	outs   dx,DWORD PTR ds:[rsi]
   14000cfaa:	add    DWORD PTR [rax],eax
   14000cfac:	add    BYTE PTR [rax],al
   14000cfae:	add    BYTE PTR [rax],al
   14000cfb0:	(bad)  
   14000cfb1:	outs   dx,DWORD PTR ds:[rsi]
   14000cfb2:	add    DWORD PTR [rax],eax
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	add    BYTE PTR [rax],al
   14000cfb8:	nop
   14000cfb9:	outs   dx,DWORD PTR ds:[rsi]
   14000cfba:	add    DWORD PTR [rax],eax
   14000cfbc:	add    BYTE PTR [rax],al
   14000cfbe:	add    BYTE PTR [rax],al
   14000cfc0:	outs   dx,WORD PTR ds:[rsi]
   14000cfc2:	add    DWORD PTR [rax],eax
   14000cfc4:	add    BYTE PTR [rax],al
   14000cfc6:	add    BYTE PTR [rax],al
   14000cfc8:	xor    al,0x6f
   14000cfca:	add    DWORD PTR [rax],eax
   14000cfcc:	add    BYTE PTR [rax],al
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	(bad)  
   14000cfd1:	outs   dx,BYTE PTR ds:[rsi]
   14000cfd2:	add    DWORD PTR [rax],eax
   14000cfd4:	add    BYTE PTR [rax],al
   14000cfd6:	add    BYTE PTR [rax],al
   14000cfd8:	enter  0x16e,0x0
   14000cfdc:	add    BYTE PTR [rax],al
   14000cfde:	add    BYTE PTR [rax],al
   14000cfe0:	outs   dx,BYTE PTR ds:[rsi]
   14000cfe1:	outs   dx,BYTE PTR ds:[rsi]
   14000cfe2:	add    DWORD PTR [rax],eax
   14000cfe4:	add    BYTE PTR [rax],al
   14000cfe6:	add    BYTE PTR [rax],al
   14000cfe8:	rex.WX outs dx,BYTE PTR ds:[rsi]
   14000cfea:	add    DWORD PTR [rax],eax
   14000cfec:	add    BYTE PTR [rax],al
   14000cfee:	add    BYTE PTR [rax],al
   14000cff0:	and    al,0x6e
   14000cff2:	add    DWORD PTR [rax],eax
   14000cff4:	add    BYTE PTR [rax],al
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	imul   BYTE PTR [rbp+0x1]
   14000cffb:	add    BYTE PTR [rax],al
   14000cffd:	add    BYTE PTR [rax],al
   14000cfff:	add    BYTE PTR [rbp+rbp*2+0x1],ch
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	pop    rdx
   14000d009:	ins    DWORD PTR es:[rdi],dx
   14000d00a:	add    DWORD PTR [rax],eax
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	and    al,0x6d
   14000d012:	add    DWORD PTR [rax],eax
   14000d014:	add    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	in     al,dx
   14000d019:	ins    BYTE PTR es:[rdi],dx
   14000d01a:	add    DWORD PTR [rax],eax
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	mov    ah,0x6c
   14000d022:	add    DWORD PTR [rax],eax
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	outs   dx,BYTE PTR ds:[rsi]
   14000d029:	ins    BYTE PTR es:[rdi],dx
   14000d02a:	add    DWORD PTR [rax],eax
   14000d02c:	add    BYTE PTR [rax],al
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	xor    al,0x6c
   14000d032:	add    DWORD PTR [rax],eax
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	clc    
   14000d039:	imul   eax,DWORD PTR [rcx],0x0
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	mov    esi,0x16b
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rdx+0x16b],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rsi+0x6b],al
   14000d052:	add    DWORD PTR [rax],eax
   14000d054:	add    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	or     ch,BYTE PTR [rbx+0x1]
   14000d05b:	add    BYTE PTR [rax],al
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    al,dl
   14000d061:	push   0x1
   14000d063:	add    BYTE PTR [rax],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rsi+0x16a],dl
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rax+0x6a],bl
   14000d072:	add    DWORD PTR [rax],eax
   14000d074:	add    BYTE PTR [rax],al
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	sbb    BYTE PTR [rdx+0x1],ch
   14000d07b:	add    BYTE PTR [rax],al
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    dl,bl
   14000d081:	imul   eax,DWORD PTR [rcx],0x0
   14000d087:	add    BYTE PTR [rcx+rbp*2+0x1],ah
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	je     0x14000d0fb
   14000d092:	add    DWORD PTR [rax],eax
   14000d094:	add    BYTE PTR [rax],al
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	cmp    ch,BYTE PTR [rcx+0x1]
   14000d09b:	add    BYTE PTR [rax],al
   14000d09d:	add    BYTE PTR [rax],al
   14000d09f:	add    BYTE PTR [rdx],cl
   14000d0a1:	imul   eax,DWORD PTR [rcx],0x0
   14000d0a7:	add    dh,al
   14000d0a9:	push   0x1
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	cwde   
   14000d0b1:	push   0x1
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	(bad)  
   14000d0b9:	push   0x1
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	rex push 0x1
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	adc    ch,BYTE PTR [rax+0x1]
   14000d0cb:	add    BYTE PTR [rax],al
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    dl,ch
   14000d0d1:	add    DWORD PTR [eax],eax
   14000d0d4:	add    BYTE PTR [rax],al
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	shl    BYTE PTR [rdi+0x1],0x0
   14000d0dc:	add    BYTE PTR [rax],al
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	xchg   edx,eax
   14000d0e1:	add    DWORD PTR [eax],eax
   14000d0e4:	add    BYTE PTR [rax],al
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	rex.W
   14000d0e9:	add    DWORD PTR [eax],eax
   14000d0ec:	add    BYTE PTR [rax],al
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	sbb    al,0x67
   14000d0f2:	add    DWORD PTR [rax],eax
   14000d0f4:	add    BYTE PTR [rax],al
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	lock add WORD PTR [rax],ax
   14000d0fc:	add    BYTE PTR [rax],al
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	(bad)  
   14000d101:	add    WORD PTR [rax],ax
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	test   al,0x66
   14000d10a:	add    DWORD PTR [rax],eax
   14000d10c:	add    BYTE PTR [rax],al
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	js     0x14000d178
   14000d112:	add    DWORD PTR [rax],eax
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	rex.W
   14000d119:	add    WORD PTR [rax],ax
   14000d11c:	add    BYTE PTR [rax],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	sbb    BYTE PTR [rsi+0x1],ah
   14000d123:	add    BYTE PTR [rax],al
   14000d125:	add    BYTE PTR [rax],al
   14000d127:	add    al,bl
   14000d129:	add    DWORD PTR gs:[rax],eax
   14000d12c:	add    BYTE PTR [rax],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	lods   al,BYTE PTR ds:[rsi]
   14000d131:	add    DWORD PTR gs:[rax],eax
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	js     0x14000d19f
   14000d13a:	add    DWORD PTR [rax],eax
   14000d13c:	add    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	rex.WRX
   14000d141:	add    DWORD PTR gs:[rax],eax
   14000d144:	add    BYTE PTR [rax],al
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	and    ah,BYTE PTR [rbp+0x1]
   14000d14b:	add    BYTE PTR [rax],al
   14000d14d:	add    BYTE PTR [rax],al
   14000d14f:	add    dh,ah
   14000d151:	add    DWORD PTR fs:[rax],eax
   14000d154:	add    BYTE PTR [rax],al
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	mov    dh,0x64
   14000d15a:	add    DWORD PTR [rax],eax
   14000d15c:	add    BYTE PTR [rax],al
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	(bad)  
   14000d161:	add    DWORD PTR fs:[rax],eax
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	push   rax
   14000d169:	add    DWORD PTR fs:[rax],eax
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	(bad)  
   14000d171:	add    DWORD PTR fs:[rax],eax
   14000d174:	add    BYTE PTR [rax],al
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	(bad)  
   14000d179:	movsxd eax,DWORD PTR [rcx]
   14000d17b:	add    BYTE PTR [rax],al
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    BYTE PTR [rdx+0x163],dh
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rbx+riz*2+0x1],bh
   14000d18b:	add    BYTE PTR [rax],al
   14000d18d:	add    BYTE PTR [rax],al
   14000d18f:	add    BYTE PTR [rax+0x63],bl
   14000d192:	add    DWORD PTR [rax],eax
   14000d194:	add    BYTE PTR [rax],al
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	sub    ah,BYTE PTR [rbx+0x1]
   14000d19b:	add    BYTE PTR [rax],al
   14000d19d:	add    BYTE PTR [rax],al
   14000d19f:	add    BYTE PTR [rbx+riz*2],al
   14000d1a2:	add    DWORD PTR [rax],eax
   14000d1a4:	add    BYTE PTR [rax],al
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	fsub   QWORD PTR [rdx+0x1]
   14000d1ab:	add    BYTE PTR [rax],al
   14000d1ad:	add    BYTE PTR [rax],al
   14000d1af:	add    BYTE PTR [rax+0x162],ah
   14000d1b5:	add    BYTE PTR [rax],al
   14000d1b7:	add    BYTE PTR [rax+0x62],bh
   14000d1ba:	add    DWORD PTR [rax],eax
   14000d1bc:	add    BYTE PTR [rax],al
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	rex.W (bad) 
   14000d1c3:	add    BYTE PTR [rax],al
   14000d1c5:	add    BYTE PTR [rax],al
   14000d1c7:	add    BYTE PTR [rax],bl
   14000d1c9:	(bad)  
   14000d1cb:	add    BYTE PTR [rax],al
   14000d1cd:	add    BYTE PTR [rax],al
   14000d1cf:	add    ah,bl
   14000d1d1:	(bad)  
   14000d1d2:	add    DWORD PTR [rax],eax
   14000d1d4:	add    BYTE PTR [rax],al
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	scas   al,BYTE PTR es:[rdi]
   14000d1d9:	(bad)  
   14000d1da:	add    DWORD PTR [rax],eax
   14000d1dc:	add    BYTE PTR [rax],al
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	jo     0x14000d243
   14000d1e2:	add    DWORD PTR [rax],eax
   14000d1e4:	add    BYTE PTR [rax],al
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	ds (bad) 
   14000d1ea:	add    DWORD PTR [rax],eax
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	and    ah,BYTE PTR [rcx+0x1]
   14000d1f3:	add    BYTE PTR [rax],al
   14000d1f5:	add    BYTE PTR [rax],al
   14000d1f7:	add    al,bh
   14000d1f9:	(bad)  
   14000d1fa:	add    DWORD PTR [rax],eax
   14000d1fc:	add    BYTE PTR [rax],al
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	mov    al,0x60
   14000d202:	add    DWORD PTR [rax],eax
   14000d204:	add    BYTE PTR [rax],al
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	je     0x14000d26a
   14000d20a:	add    DWORD PTR [rax],eax
   14000d20c:	add    BYTE PTR [rax],al
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	rex.W (bad) 
   14000d212:	add    DWORD PTR [rax],eax
   14000d214:	add    BYTE PTR [rax],al
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	(bad)  
   14000d219:	(bad)  
   14000d21a:	add    DWORD PTR [rax],eax
   14000d21c:	add    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	loopne 0x14000d281
   14000d222:	add    DWORD PTR [rax],eax
   14000d224:	add    BYTE PTR [rax],al
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	mov    dl,0x5f
   14000d22a:	add    DWORD PTR [rax],eax
   14000d22c:	add    BYTE PTR [rax],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	test   BYTE PTR [rdi+0x1],bl
   14000d233:	add    BYTE PTR [rax],al
   14000d235:	add    BYTE PTR [rax],al
   14000d237:	add    BYTE PTR [rdi+rbx*2+0x1],cl
   14000d23b:	add    BYTE PTR [rax],al
   14000d23d:	add    BYTE PTR [rax],al
   14000d23f:	add    BYTE PTR [rsi],dl
   14000d241:	pop    rdi
   14000d242:	add    DWORD PTR [rax],eax
   14000d244:	add    BYTE PTR [rax],al
   14000d246:	add    BYTE PTR [rax],al
   14000d248:	ficomp WORD PTR [rsi+0x1]
   14000d24b:	add    BYTE PTR [rax],al
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rsi+rbx*2+0x1],ch
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	jp     0x14000d2b8
   14000d25a:	add    DWORD PTR [rax],eax
   14000d25c:	add    BYTE PTR [rax],al
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	ds pop rsi
   14000d262:	add    DWORD PTR [rax],eax
   14000d264:	add    BYTE PTR [rax],al
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	(bad)  
   14000d269:	pop    rsi
   14000d26a:	add    DWORD PTR [rax],eax
   14000d26c:	add    BYTE PTR [rax],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	fcomp  QWORD PTR [rbp+0x1]
   14000d273:	add    BYTE PTR [rax],al
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rsi+0x15d],ch
   14000d27d:	add    BYTE PTR [rax],al
   14000d27f:	add    BYTE PTR [rsi+0x5d],bh
   14000d282:	add    DWORD PTR [rax],eax
   14000d284:	add    BYTE PTR [rax],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	push   rdx
   14000d289:	pop    rbp
   14000d28a:	add    DWORD PTR [rax],eax
   14000d28c:	add    BYTE PTR [rax],al
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	es pop rbp
   14000d292:	add    DWORD PTR [rax],eax
   14000d294:	add    BYTE PTR [rax],al
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	hlt    
   14000d299:	pop    rsp
   14000d29a:	add    DWORD PTR [rax],eax
   14000d29c:	add    BYTE PTR [rax],al
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	ret    0x15c
   14000d2a3:	add    BYTE PTR [rax],al
   14000d2a5:	add    BYTE PTR [rax],al
   14000d2a7:	add    BYTE PTR [rsi+0x15c],cl
   14000d2ad:	add    BYTE PTR [rax],al
   14000d2af:	add    BYTE PTR [rsi+0x5c],bl
   14000d2b2:	add    DWORD PTR [rax],eax
   14000d2b4:	add    BYTE PTR [rax],al
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	cs pop rsp
   14000d2ba:	add    DWORD PTR [rax],eax
   14000d2bc:	add    BYTE PTR [rax],al
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	cli    
   14000d2c1:	pop    rbx
   14000d2c2:	add    DWORD PTR [rax],eax
   14000d2c4:	add    BYTE PTR [rax],al
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	mov    esi,0x15b
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    BYTE PTR [rax+0x15b],cl
   14000d2d5:	add    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rbx+rbx*2+0x1],dl
   14000d2db:	add    BYTE PTR [rax],al
   14000d2dd:	add    BYTE PTR [rax],al
   14000d2df:	add    BYTE PTR [rbx+rbx*2],ch
   14000d2e2:	add    DWORD PTR [rax],eax
   14000d2e4:	add    BYTE PTR [rax],al
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	or     BYTE PTR [rbx+0x1],bl
   14000d2eb:	add    BYTE PTR [rax],al
   14000d2ed:	add    BYTE PTR [rax],al
   14000d2ef:	add    ah,bl
   14000d2f1:	pop    rdx
   14000d2f2:	add    DWORD PTR [rax],eax
   14000d2f4:	add    BYTE PTR [rax],al
   14000d2f6:	add    BYTE PTR [rax],al
   14000d2f8:	mov    dh,0x5a
   14000d2fa:	add    DWORD PTR [rax],eax
   14000d2fc:	add    BYTE PTR [rax],al
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	xchg   esp,eax
   14000d301:	pop    rdx
   14000d302:	add    DWORD PTR [rax],eax
   14000d304:	add    BYTE PTR [rax],al
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	outs   dx,BYTE PTR ds:[rsi]
   14000d309:	pop    rdx
   14000d30a:	add    DWORD PTR [rax],eax
   14000d30c:	add    BYTE PTR [rax],al
   14000d30e:	add    BYTE PTR [rax],al
   14000d310:	xor    bl,BYTE PTR [rdx+0x1]
   14000d313:	add    BYTE PTR [rax],al
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    BYTE PTR [rdx+rbx*2],cl
   14000d31a:	add    DWORD PTR [rax],eax
   14000d31c:	add    BYTE PTR [rax],al
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	ficomp WORD PTR [rcx+0x1]
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rcx+rbx*2+0x1],dl
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	(bad)  
   14000d331:	pop    rcx
   14000d332:	add    DWORD PTR [rax],eax
   14000d334:	add    BYTE PTR [rax],al
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	rex pop rcx
   14000d33a:	add    DWORD PTR [rax],eax
   14000d33c:	add    BYTE PTR [rax],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	adc    al,0x59
   14000d342:	add    DWORD PTR [rax],eax
   14000d344:	add    BYTE PTR [rax],al
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	lock pop rax
   14000d34a:	add    DWORD PTR [rax],eax
   14000d34c:	add    BYTE PTR [rax],al
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	rcr    BYTE PTR [rax+0x1],0x0
   14000d354:	add    BYTE PTR [rax],al
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	cwde   
   14000d359:	pop    rax
   14000d35a:	add    DWORD PTR [rax],eax
   14000d35c:	add    BYTE PTR [rax],al
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	ins    BYTE PTR es:[rdi],dx
   14000d361:	pop    rax
   14000d362:	add    DWORD PTR [rax],eax
   14000d364:	add    BYTE PTR [rax],al
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	rex.WRX pop rax
   14000d36a:	add    DWORD PTR [rax],eax
   14000d36c:	add    BYTE PTR [rax],al
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	sub    BYTE PTR [rax+0x1],bl
   14000d373:	add    BYTE PTR [rax],al
   14000d375:	add    BYTE PTR [rax],al
   14000d377:	add    al,bh
   14000d379:	push   rdi
   14000d37a:	add    DWORD PTR [rax],eax
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	lods   al,BYTE PTR ds:[rsi]
   14000d381:	push   rdi
   14000d382:	add    DWORD PTR [rax],eax
   14000d384:	add    BYTE PTR [rax],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	jle    0x14000d3e1
   14000d38a:	add    DWORD PTR [rax],eax
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	push   rax
   14000d391:	push   rdi
   14000d392:	add    DWORD PTR [rax],eax
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	es push rdi
   14000d39a:	add    DWORD PTR [rax],eax
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	or     BYTE PTR [rdi+0x1],dl
   14000d3a3:	add    BYTE PTR [rax],al
   14000d3a5:	add    BYTE PTR [rax],al
   14000d3a7:	add    dh,bl
   14000d3a9:	push   rsi
   14000d3aa:	add    DWORD PTR [rax],eax
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	scas   al,BYTE PTR es:[rdi]
   14000d3b1:	push   rsi
   14000d3b2:	add    DWORD PTR [rax],eax
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	jle    0x14000d410
   14000d3ba:	add    DWORD PTR [rax],eax
   14000d3bc:	add    BYTE PTR [rax],al
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	rex.WR push rsi
   14000d3c2:	add    DWORD PTR [rax],eax
   14000d3c4:	add    BYTE PTR [rax],al
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	sbb    al,0x56
   14000d3ca:	add    DWORD PTR [rax],eax
   14000d3cc:	add    BYTE PTR [rax],al
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	fcom   QWORD PTR [rbp+0x1]
   14000d3d3:	add    BYTE PTR [rax],al
   14000d3d5:	add    BYTE PTR [rax],al
   14000d3d7:	add    BYTE PTR [rax+0x155],dh
   14000d3dd:	add    BYTE PTR [rax],al
   14000d3df:	add    BYTE PTR [rbp+rdx*2+0x1],bh
   14000d3e3:	add    BYTE PTR [rax],al
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    BYTE PTR [rsi+0x55],dl
   14000d3ea:	add    DWORD PTR [rax],eax
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	(bad)  
   14000d3f1:	push   rbp
   14000d3f2:	add    DWORD PTR [rax],eax
   14000d3f4:	add    BYTE PTR [rax],al
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	lock push rsp
   14000d3fa:	add    DWORD PTR [rax],eax
   14000d3fc:	add    BYTE PTR [rax],al
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	(bad)  
   14000d401:	push   rsp
   14000d402:	add    DWORD PTR [rax],eax
   14000d404:	add    BYTE PTR [rax],al
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	xchg   esi,eax
   14000d409:	push   rsp
   14000d40a:	add    DWORD PTR [rax],eax
   14000d40c:	add    BYTE PTR [rax],al
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	push   sp
   14000d412:	add    DWORD PTR [rax],eax
   14000d414:	add    BYTE PTR [rax],al
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	ds push rsp
   14000d41a:	add    DWORD PTR [rax],eax
   14000d41c:	add    BYTE PTR [rax],al
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	(bad)  
   14000d421:	push   rbx
   14000d422:	add    DWORD PTR [rax],eax
   14000d424:	add    BYTE PTR [rax],al
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	(bad)  
   14000d429:	push   rbx
   14000d42a:	add    DWORD PTR [rax],eax
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	(bad)  
   14000d431:	push   rbx
   14000d432:	add    DWORD PTR [rax],eax
   14000d434:	add    BYTE PTR [rax],al
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	rex.W push rbx
   14000d43a:	add    DWORD PTR [rax],eax
   14000d43c:	add    BYTE PTR [rax],al
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	and    BYTE PTR [rbx+0x1],dl
   14000d443:	add    BYTE PTR [rax],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	add    ah,bh
   14000d449:	push   rdx
   14000d44a:	add    DWORD PTR [rax],eax
   14000d44c:	add    BYTE PTR [rax],al
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	rcl    BYTE PTR [rdx+0x1],1
   14000d453:	add    BYTE PTR [rax],al
   14000d455:	add    BYTE PTR [rax],al
   14000d457:	add    BYTE PTR [rax+0x152],al
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rsi+0x52],dl
   14000d462:	add    DWORD PTR [rax],eax
   14000d464:	add    BYTE PTR [rax],al
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	cs push rdx
   14000d46a:	add    DWORD PTR [rax],eax
   14000d46c:	add    BYTE PTR [rax],al
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	add    al,0x52
   14000d472:	add    DWORD PTR [rax],eax
   14000d474:	add    BYTE PTR [rax],al
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	fcom   QWORD PTR [rcx+0x1]
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    BYTE PTR [rcx+rdx*2+0x1],dh
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	mov    ss,WORD PTR [rcx+0x1]
   14000d48b:	add    BYTE PTR [rax],al
   14000d48d:	add    BYTE PTR [rax],al
   14000d48f:	add    BYTE PTR [rdx+0x51],bl
   14000d492:	add    DWORD PTR [rax],eax
   14000d494:	add    BYTE PTR [rax],al
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	add    al,0x51
   14000d49a:	add    DWORD PTR [rax],eax
   14000d49c:	add    BYTE PTR [rax],al
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	(bad)  
   14000d4a1:	push   rax
   14000d4a2:	add    DWORD PTR [rax],eax
   14000d4a4:	add    BYTE PTR [rax],al
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	lods   al,BYTE PTR ds:[rsi]
   14000d4a9:	push   rax
   14000d4aa:	add    DWORD PTR [rax],eax
   14000d4ac:	add    BYTE PTR [rax],al
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	jp     0x14000d502
   14000d4b2:	add    DWORD PTR [rax],eax
   14000d4b4:	add    BYTE PTR [rax],al
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	push   rdx
   14000d4b9:	push   rax
   14000d4ba:	add    DWORD PTR [rax],eax
   14000d4bc:	add    BYTE PTR [rax],al
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	cmp    BYTE PTR [rax+0x1],dl
   14000d4c3:	add    BYTE PTR [rax],al
   14000d4c5:	add    BYTE PTR [rax],al
   14000d4c7:	add    dh,ah
   14000d4c9:	rex.WRXB add QWORD PTR [r8],r8
   14000d4cc:	add    BYTE PTR [rax],al
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	add    BYTE PTR [rax+0x1],dl
   14000d4d3:	add    BYTE PTR [rax],al
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	add    BYTE PTR [rax+rdx*2],bl
   14000d4da:	add    DWORD PTR [rax],eax
   14000d4dc:	add    BYTE PTR [rax],al
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	push   rsi
   14000d4e1:	pop    QWORD PTR [rcx]
	...
   14000d4ef:	add    BYTE PTR [rdx-0x3b],ch
   14000d4f2:	add    DWORD PTR [rax],eax
	...
   14000d508:	rex.WR mov dl,0x0
   14000d50b:	rex add DWORD PTR [rax],eax
   14000d50e:	add    BYTE PTR [rax],al
   14000d510:	cmp    BYTE PTR [rbx+0x14000],0x0
   14000d517:	add    al,al
   14000d519:	mov    ebx,0x14000
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	sar    BYTE PTR [rbx+0x14000],1
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	loopne 0x14000d4e5
   14000d52a:	add    BYTE PTR [rax+0x1],al
	...
   14000d53d:	add    BYTE PTR [rax],al
   14000d53f:	add    BYTE PTR [rsp+rsi*4+0x14000],bh
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	shl    BYTE PTR [rsi+0x14000],0x0
	...
   14000d55f:	add    BYTE PTR [rdx+0x61],ah
   14000d562:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000d566:	ins    BYTE PTR es:[rdi],dx
   14000d567:	outs   dx,DWORD PTR ds:[rsi]
   14000d568:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d56b:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	add    BYTE PTR [rax],al
   14000d576:	lock (bad) 
   14000d578:	add    BYTE PTR [rax],al
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	add    BYTE PTR [rax],al
   14000d57e:	loopne 0x14000d5bf
   14000d580:	jae    0x14000d5ef
   14000d582:	outs   dx,DWORD PTR ds:[rsi]
   14000d583:	outs   dx,DWORD PTR ds:[rsi]
   14000d584:	je     0x14000d5ee
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	jns    0x14000d58a
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	js     0x14000d58e
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	jo     0x14000d5c3
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	push   rax
   14000d595:	(bad)  
   14000d596:	outs   dx,BYTE PTR ds:[rsi]
   14000d597:	add    BYTE PTR gs:[rax],al
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000d59e:	jb     0x14000d60d
	...
   14000d5ac:	add    BYTE PTR [rax],al
   14000d5ae:	test   BYTE PTR [rax+0x0],al
   14000d5b1:	add    BYTE PTR [rax],al
   14000d5b3:	add    BYTE PTR [rax],al
   14000d5b5:	add    BYTE PTR [rax+rax*2+0x0],dh
   14000d5b9:	add    BYTE PTR [rax],al
   14000d5bb:	add    BYTE PTR [rax],al
   14000d5bd:	add    BYTE PTR [rax+rax*2+0x0],ah
   14000d5c1:	add    BYTE PTR [rax],al
   14000d5c3:	add    BYTE PTR [rax],al
   14000d5c5:	add    BYTE PTR [rax+rax*2],ah
   14000d5c8:	add    BYTE PTR [rax],al
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	add    BYTE PTR [rax],al
   14000d5ce:	lock mov edi,0x0
   14000d5d4:	add    BYTE PTR [rax],al
   14000d5d6:	clc    
   14000d5d7:	(bad)  
   14000d5d8:	add    BYTE PTR [rax],al
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	add    BYTE PTR [rax],al
   14000d5de:	loopne 0x14000d59f
   14000d5e0:	add    BYTE PTR [rax],al
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	add    BYTE PTR [rax],al
   14000d5e6:	sar    BYTE PTR [rdi+0x0],1
   14000d5ec:	add    BYTE PTR [rax],al
   14000d5ee:	hlt    
   14000d5ef:	(bad)  
   14000d5f0:	add    BYTE PTR [rax],al
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	add    BYTE PTR [rax],al
   14000d5f6:	add    BYTE PTR [rax+0x0],al
   14000d5fc:	add    BYTE PTR [rax],al
   14000d5fe:	add    BYTE PTR [rax-0x5e000000],al
   14000d604:	xchg   esp,eax
   14000d605:	sbb    ch,BYTE PTR [rbp+0x42]
   14000d608:	adc    edx,ebp
   14000d60a:	sub    eax,0x71979981
   14000d60f:	cmp    eax,0x40012180
   14000d614:	add    DWORD PTR [rax],eax
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	sbb    BYTE PTR [rip+0x14000],0x0        # 0x14002161f
   14000d61f:	add    BYTE PTR [rsi-0x55],bh
   14000d622:	add    BYTE PTR [rax+0x1],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    BYTE PTR [rbx+rbp*4+0x14000],al
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	mov    ch,BYTE PTR [rbx+0x14000]
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	nop
   14000d639:	stos   DWORD PTR es:[rdi],eax
   14000d63a:	add    BYTE PTR [rax+0x1],al
   14000d63d:	add    BYTE PTR [rax],al
   14000d63f:	add    BYTE PTR [rsi+0x14000ab],dl
   14000d645:	add    BYTE PTR [rax],al
   14000d647:	add    BYTE PTR [rbx+rbp*4+0x14000],bl
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	movabs ds:0xa8000000014000ab,al
   14000d659:	stos   DWORD PTR es:[rdi],eax
   14000d65a:	add    BYTE PTR [rax+0x1],al
   14000d65d:	add    BYTE PTR [rax],al
   14000d65f:	add    BYTE PTR [rsi+0x14000ab],ch
   14000d665:	add    BYTE PTR [rax],al
   14000d667:	add    BYTE PTR [rbx+rbp*4+0x14000],dh
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	mov    edx,0x14000ab
   14000d675:	add    BYTE PTR [rax],al
   14000d677:	add    BYTE PTR [rdx-0x58],dh
   14000d67a:	add    BYTE PTR [rax+0x1],al
   14000d67d:	add    BYTE PTR [rax],al
   14000d67f:	add    al,al
   14000d681:	stos   DWORD PTR es:[rdi],eax
   14000d682:	add    BYTE PTR [rax+0x1],al
   14000d685:	add    BYTE PTR [rax],al
   14000d687:	add    dh,al
   14000d689:	stos   DWORD PTR es:[rdi],eax
   14000d68a:	add    BYTE PTR [rax+0x1],al
   14000d68d:	add    BYTE PTR [rax],al
   14000d68f:	add    ah,cl
   14000d691:	stos   DWORD PTR es:[rdi],eax
   14000d692:	add    BYTE PTR [rax+0x1],al
	...
   14000d69d:	add    BYTE PTR [rax],al
   14000d69f:	add    BYTE PTR [rax+0x21],bl
   14000d6a2:	add    DWORD PTR [rax+0x1],eax
   14000d6a5:	add    BYTE PTR [rax],al
   14000d6a7:	add    BYTE PTR [rax],ah
   14000d6a9:	(bad)  
   14000d6aa:	add    BYTE PTR [rax+0x1],al
   14000d6ad:	add    BYTE PTR [rax],al
   14000d6af:	add    BYTE PTR [rsi-0x57],ch
   14000d6b2:	add    BYTE PTR [rax+0x1],al
   14000d6b5:	add    BYTE PTR [rax],al
   14000d6b7:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000d6bb:	rex add DWORD PTR [rax],eax
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	jp     0x14000d66b
   14000d6c2:	add    BYTE PTR [rax+0x1],al
   14000d6c5:	add    BYTE PTR [rax],al
   14000d6c7:	add    BYTE PTR [rax+0x14000a9],al
   14000d6cd:	add    BYTE PTR [rax],al
   14000d6cf:	add    BYTE PTR [rsi+0x14000a9],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000d6de:	add    BYTE PTR [rax],al
   14000d6e0:	pop    rax
   14000d6e1:	and    BYTE PTR [rcx],al
   14000d6e3:	rex add DWORD PTR [rax],eax
   14000d6e6:	add    BYTE PTR [rax],al
   14000d6e8:	or     al,0xab
   14000d6ea:	add    BYTE PTR [rax+0x1],al
   14000d6ed:	add    BYTE PTR [rax],al
   14000d6ef:	add    BYTE PTR [rdx],dl
   14000d6f1:	stos   DWORD PTR es:[rdi],eax
   14000d6f2:	add    BYTE PTR [rax+0x1],al
   14000d6f5:	add    BYTE PTR [rax],al
   14000d6f7:	add    BYTE PTR [rax],bl
   14000d6f9:	stos   DWORD PTR es:[rdi],eax
   14000d6fa:	add    BYTE PTR [rax+0x1],al
   14000d6fd:	add    BYTE PTR [rax],al
   14000d6ff:	add    BYTE PTR [rax+0x140001e],ah
   14000d705:	add    BYTE PTR [rax],al
   14000d707:	add    BYTE PTR [rsi],bl
   14000d709:	stos   DWORD PTR es:[rdi],eax
   14000d70a:	add    BYTE PTR [rax+0x1],al
   14000d70d:	add    BYTE PTR [rax],al
   14000d70f:	add    al,dl
   14000d711:	mov    al,0x0
   14000d713:	rex add DWORD PTR [rax],eax
   14000d716:	add    BYTE PTR [rax],al
   14000d718:	and    al,0xab
   14000d71a:	add    BYTE PTR [rax+0x1],al
   14000d71d:	add    BYTE PTR [rax],al
   14000d71f:	add    dh,ch
   14000d721:	mov    al,0x0
   14000d723:	rex add DWORD PTR [rax],eax
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	fdiv   QWORD PTR [rax+0x14000]
   14000d72e:	add    BYTE PTR [rax],al
   14000d730:	loop   0x14000d6e2
   14000d732:	add    BYTE PTR [rax+0x1],al
   14000d735:	add    BYTE PTR [rax],al
   14000d737:	add    al,ch
   14000d739:	mov    al,0x0
   14000d73b:	rex add DWORD PTR [rax],eax
   14000d73e:	add    BYTE PTR [rax],al
   14000d740:	movabs ds:0x2a000000014000a8,al
   14000d749:	stos   DWORD PTR es:[rdi],eax
   14000d74a:	add    BYTE PTR [rax+0x1],al
   14000d74d:	add    BYTE PTR [rax],al
   14000d74f:	add    BYTE PTR [rax],dh
   14000d751:	stos   DWORD PTR es:[rdi],eax
   14000d752:	add    BYTE PTR [rax+0x1],al
   14000d755:	add    BYTE PTR [rax],al
   14000d757:	add    BYTE PTR [rsi+0x14000a9],dh
   14000d75d:	add    BYTE PTR [rax],al
   14000d75f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000d765:	add    BYTE PTR [rax],al
   14000d767:	add    BYTE PTR [rsi],dh
   14000d769:	stos   DWORD PTR es:[rdi],eax
   14000d76a:	add    BYTE PTR [rax+0x1],al
   14000d76d:	add    BYTE PTR [rax],al
   14000d76f:	add    BYTE PTR [rbx+rbp*4],bh
   14000d772:	add    BYTE PTR [rax+0x1],al
   14000d775:	add    BYTE PTR [rax],al
   14000d777:	add    ah,cl
   14000d779:	test   al,0x0
   14000d77b:	rex add DWORD PTR [rax],eax
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	rex.X stos DWORD PTR es:[rdi],eax
   14000d782:	add    BYTE PTR [rax+0x1],al
   14000d785:	add    BYTE PTR [rax],al
   14000d787:	add    al,bl
   14000d789:	test   al,0x0
   14000d78b:	rex add DWORD PTR [rax],eax
   14000d78e:	add    BYTE PTR [rax],al
   14000d790:	stos   QWORD PTR es:[rdi],rax
   14000d792:	add    BYTE PTR [rax+0x1],al
   14000d795:	add    BYTE PTR [rax],al
   14000d797:	add    BYTE PTR [rsi-0x55],cl
   14000d79a:	add    BYTE PTR [rax+0x1],al
   14000d79d:	add    BYTE PTR [rax],al
   14000d79f:	add    BYTE PTR [rbx+rbp*4+0x0],dl
   14000d7a3:	rex add DWORD PTR [rax],eax
   14000d7a6:	add    BYTE PTR [rax],al
   14000d7a8:	pop    rdx
   14000d7a9:	stos   DWORD PTR es:[rdi],eax
   14000d7aa:	add    BYTE PTR [rax+0x1],al
   14000d7ad:	add    BYTE PTR [rax],al
   14000d7af:	add    dh,dh
   14000d7b1:	test   al,0x0
   14000d7b3:	rex add DWORD PTR [rax],eax
   14000d7b6:	add    BYTE PTR [rax],al
   14000d7b8:	cld    
   14000d7b9:	test   al,0x0
   14000d7bb:	rex add DWORD PTR [rax],eax
   14000d7be:	add    BYTE PTR [rax],al
   14000d7c0:	(bad)  
   14000d7c1:	stos   DWORD PTR es:[rdi],eax
   14000d7c2:	add    BYTE PTR [rax+0x1],al
   14000d7c5:	add    BYTE PTR [rax],al
   14000d7c7:	add    BYTE PTR [rax],cl
   14000d7c9:	test   eax,0x14000
   14000d7ce:	add    BYTE PTR [rax],al
   14000d7d0:	(bad)  
   14000d7d1:	test   eax,0x14000
   14000d7d6:	add    BYTE PTR [rax],al
   14000d7d8:	adc    al,0xa9
   14000d7da:	add    BYTE PTR [rax+0x1],al
   14000d7dd:	add    BYTE PTR [rax],al
   14000d7df:	add    dh,ah
   14000d7e1:	test   eax,0x14000
   14000d7e6:	add    BYTE PTR [rax],al
   14000d7e8:	and    BYTE PTR [rcx+0x14000],ch
   14000d7ee:	add    BYTE PTR [rax],al
   14000d7f0:	es test eax,0x14000
   14000d7f6:	add    BYTE PTR [rax],al
   14000d7f8:	sub    al,0xa9
   14000d7fa:	add    BYTE PTR [rax+0x1],al
   14000d7fd:	add    BYTE PTR [rax],al
   14000d7ff:	add    BYTE PTR [rdx],dh
   14000d801:	test   eax,0x14000
   14000d806:	add    BYTE PTR [rax],al
   14000d808:	cmp    BYTE PTR [rcx+0x14000],ch
   14000d80e:	add    BYTE PTR [rax],al
   14000d810:	ds test eax,0x14000
   14000d816:	add    BYTE PTR [rax],al
   14000d818:	rex.R test eax,0x14000
   14000d81e:	add    BYTE PTR [rax],al
   14000d820:	rex.WX test rax,0x14000
   14000d826:	add    BYTE PTR [rax],al
   14000d828:	push   rax
   14000d829:	test   eax,0x14000
   14000d82e:	add    BYTE PTR [rax],al
   14000d830:	stos   WORD PTR es:[rdi],ax
   14000d832:	add    BYTE PTR [rax+0x1],al
   14000d835:	add    BYTE PTR [rax],al
   14000d837:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000d83b:	rex add DWORD PTR [rax],eax
   14000d83e:	add    BYTE PTR [rax],al
   14000d840:	(bad)  
   14000d841:	test   eax,0x14000
   14000d846:	add    BYTE PTR [rax],al
   14000d848:	repnz test eax,0x14000
   14000d84e:	add    BYTE PTR [rax],al
   14000d850:	ins    BYTE PTR es:[rdi],dx
   14000d851:	stos   DWORD PTR es:[rdi],eax
   14000d852:	add    BYTE PTR [rax+0x1],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    BYTE PTR [rdx-0x55],dh
   14000d85a:	add    BYTE PTR [rax+0x1],al
   14000d85d:	add    BYTE PTR [rax],al
   14000d85f:	add    BYTE PTR [rax-0x55],bh
   14000d862:	add    BYTE PTR [rax+0x1],al
	...
   14000d86d:	add    BYTE PTR [rax+rax*8],ah
   14000d870:	jo     0x14000d8a3
   14000d872:	pop    rdi
   14000d873:	jns    0x14000d875
   14000d875:	add    BYTE PTR [rax],al
   14000d877:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14000d87b:	gs ins BYTE PTR es:[rdi],dx
   14000d87d:	pop    rdi
   14000d87e:	jns    0x14000d880
   14000d880:	jnp    0x14000d896
   14000d882:	scas   al,BYTE PTR es:[rdi]
   14000d883:	rex.RXB loope 0x14000d900
   14000d886:	test   BYTE PTR [rdi],bh
   14000d888:	jo     0x14000d8bb
   14000d88a:	pop    rdi
   14000d88b:	js     0x14000d88d
   14000d88d:	add    BYTE PTR [rax],al
   14000d88f:	add    BYTE PTR [rax],dh
   14000d891:	and    BYTE PTR [rcx],al
   14000d893:	rex add DWORD PTR [rax],eax
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	adc    BYTE PTR [rdi],bl
   14000d89a:	add    BYTE PTR [rax+0x1],al
   14000d89d:	add    BYTE PTR [rax],al
   14000d89f:	add    BYTE PTR [rsi-0x57],ch
   14000d8a2:	add    BYTE PTR [rax+0x1],al
   14000d8a5:	add    BYTE PTR [rax],al
   14000d8a7:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000d8ab:	rex add DWORD PTR [rax],eax
   14000d8ae:	add    BYTE PTR [rax],al
   14000d8b0:	jp     0x14000d85b
   14000d8b2:	add    BYTE PTR [rax+0x1],al
   14000d8b5:	add    BYTE PTR [rax],al
   14000d8b7:	add    BYTE PTR [rax+0x14000a9],al
   14000d8bd:	add    BYTE PTR [rax],al
   14000d8bf:	add    BYTE PTR [rsi+0x14000a9],al
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000d8ce:	add    BYTE PTR [rax],al
   14000d8d0:	xor    BYTE PTR [rdi],bl
   14000d8d2:	add    DWORD PTR [rax+0x1],eax
   14000d8d5:	add    BYTE PTR [rax],al
   14000d8d7:	add    BYTE PTR [rax-0x56],bl
   14000d8da:	add    BYTE PTR [rax+0x1],al
   14000d8dd:	add    BYTE PTR [rax],al
   14000d8df:	add    BYTE PTR [rsi-0x56],bl
   14000d8e2:	add    BYTE PTR [rax+0x1],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    BYTE PTR [rdx+rbp*4+0x0],ah
   14000d8eb:	rex add DWORD PTR [rax],eax
   14000d8ee:	add    BYTE PTR [rax],al
   14000d8f0:	jo     0x14000d910
   14000d8f2:	add    BYTE PTR [rax+0x1],al
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	add    BYTE PTR [rdx-0x56],ch
   14000d8fa:	add    BYTE PTR [rax+0x1],al
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    al,dl
   14000d901:	mov    al,0x0
   14000d903:	rex add DWORD PTR [rax],eax
   14000d906:	add    BYTE PTR [rax],al
   14000d908:	jo     0x14000d8b4
   14000d90a:	add    BYTE PTR [rax+0x1],al
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    dh,ch
   14000d911:	mov    al,0x0
   14000d913:	rex add DWORD PTR [rax],eax
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	fdiv   QWORD PTR [rax+0x14000]
   14000d91e:	add    BYTE PTR [rax],al
   14000d920:	loop   0x14000d8d2
   14000d922:	add    BYTE PTR [rax+0x1],al
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    al,ch
   14000d929:	mov    al,0x0
   14000d92b:	rex add DWORD PTR [rax],eax
   14000d92e:	add    BYTE PTR [rax],al
   14000d930:	movabs ds:0x76000000014000a8,al
   14000d939:	stos   BYTE PTR es:[rdi],al
   14000d93a:	add    BYTE PTR [rax+0x1],al
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    BYTE PTR [rdx+rbp*4+0x0],bh
   14000d943:	rex add DWORD PTR [rax],eax
   14000d946:	add    BYTE PTR [rax],al
   14000d948:	mov    dh,0xa9
   14000d94a:	add    BYTE PTR [rax+0x1],al
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	add    BYTE PTR [rdx+0x14000aa],al
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    BYTE PTR [rax+0x14000aa],cl
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    ah,cl
   14000d969:	test   al,0x0
   14000d96b:	rex add DWORD PTR [rax],eax
   14000d96e:	add    BYTE PTR [rax],al
   14000d970:	mov    gs,WORD PTR [rdx+0x14000]
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	xchg   esp,eax
   14000d979:	stos   BYTE PTR es:[rdi],al
   14000d97a:	add    BYTE PTR [rax+0x1],al
   14000d97d:	add    BYTE PTR [rax],al
   14000d97f:	add    BYTE PTR [rdx+0x14000aa],bl
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    BYTE PTR [rax+0x14000aa],ah
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    BYTE PTR [rsi+0x14000aa],ah
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rdx+rbp*4+0x14000],ch
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	imul   BYTE PTR [rax+0x14000]
   14000d9a6:	add    BYTE PTR [rax],al
   14000d9a8:	cld    
   14000d9a9:	test   al,0x0
   14000d9ab:	rex add DWORD PTR [rax],eax
   14000d9ae:	add    BYTE PTR [rax],al
   14000d9b0:	mov    dl,0xaa
   14000d9b2:	add    BYTE PTR [rax+0x1],al
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rax],cl
   14000d9b9:	test   eax,0x14000
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	mov    eax,0x14000aa
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	add    BYTE PTR [rsi+0x14000aa],bh
   14000d9cd:	add    BYTE PTR [rax],al
   14000d9cf:	add    ah,al
   14000d9d1:	stos   BYTE PTR es:[rdi],al
   14000d9d2:	add    BYTE PTR [rax+0x1],al
   14000d9d5:	add    BYTE PTR [rax],al
   14000d9d7:	add    BYTE PTR [rax],ah
   14000d9d9:	test   eax,0x14000
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	es test eax,0x14000
   14000d9e6:	add    BYTE PTR [rax],al
   14000d9e8:	sub    al,0xa9
   14000d9ea:	add    BYTE PTR [rax+0x1],al
   14000d9ed:	add    BYTE PTR [rax],al
   14000d9ef:	add    BYTE PTR [rdx],dh
   14000d9f1:	test   eax,0x14000
   14000d9f6:	add    BYTE PTR [rax],al
   14000d9f8:	cmp    BYTE PTR [rcx+0x14000],ch
   14000d9fe:	add    BYTE PTR [rax],al
   14000da00:	ds test eax,0x14000
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	retf   0xaa
   14000da0b:	rex add DWORD PTR [rax],eax
   14000da0e:	add    BYTE PTR [rax],al
   14000da10:	shr    BYTE PTR [rdx+0x14000],1
   14000da16:	add    BYTE PTR [rax],al
   14000da18:	push   rax
   14000da19:	test   eax,0x14000
   14000da1e:	add    BYTE PTR [rax],al
   14000da20:	(bad)  
   14000da21:	stos   BYTE PTR es:[rdi],al
   14000da22:	add    BYTE PTR [rax+0x1],al
   14000da25:	add    BYTE PTR [rax],al
   14000da27:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000da2b:	rex add DWORD PTR [rax],eax
   14000da2e:	add    BYTE PTR [rax],al
   14000da30:	fsubr  QWORD PTR [rdx+0x14000]
   14000da36:	add    BYTE PTR [rax],al
   14000da38:	repnz test eax,0x14000
   14000da3e:	add    BYTE PTR [rax],al
   14000da40:	loop   0x14000d9ec
   14000da42:	add    BYTE PTR [rax+0x1],al
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    al,ch
   14000da49:	stos   BYTE PTR es:[rdi],al
   14000da4a:	add    BYTE PTR [rax+0x1],al
   14000da4d:	add    BYTE PTR [rax],al
   14000da4f:	add    dh,ch
   14000da51:	stos   BYTE PTR es:[rdi],al
   14000da52:	add    BYTE PTR [rax+0x1],al
   14000da55:	add    BYTE PTR [rax],al
   14000da57:	add    ah,dh
   14000da59:	stos   BYTE PTR es:[rdi],al
   14000da5a:	add    BYTE PTR [rax+0x1],al
   14000da5d:	add    BYTE PTR [rax],al
   14000da5f:	add    dl,bh
   14000da61:	stos   BYTE PTR es:[rdi],al
   14000da62:	add    BYTE PTR [rax+0x1],al
   14000da65:	add    BYTE PTR [rax],al
   14000da67:	add    BYTE PTR [rax],al
   14000da69:	stos   DWORD PTR es:[rdi],eax
   14000da6a:	add    BYTE PTR [rax+0x1],al
   14000da6d:	add    BYTE PTR [rax],al
   14000da6f:	add    BYTE PTR [rsi],al
   14000da71:	stos   DWORD PTR es:[rdi],eax
   14000da72:	add    BYTE PTR [rax+0x1],al
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14000da7b:	gs ins BYTE PTR es:[rdi],dx
   14000da7d:	pop    rdi
   14000da7e:	js     0x14000da80
   14000da80:	push   0x7a69726f
   14000da85:	outs   dx,DWORD PTR ds:[rsi]
   14000da86:	outs   dx,BYTE PTR ds:[rsi]
   14000da87:	je     0x14000daea
   14000da89:	ins    BYTE PTR es:[rdi],dx
   14000da8a:	rex.WR (bad) 
   14000da8c:	jns    0x14000dafd
   14000da8e:	jne    0x14000db04
	...
   14000daa0:	or     BYTE PTR [rdi],bl
   14000daa2:	add    DWORD PTR [rax+0x1],eax
   14000daa5:	add    BYTE PTR [rax],al
   14000daa7:	add    al,ah
   14000daa9:	(bad)  
   14000daaa:	add    BYTE PTR [rax+0x1],al
   14000daad:	add    BYTE PTR [rax],al
   14000daaf:	add    BYTE PTR [rdx],ah
   14000dab1:	stos   BYTE PTR es:[rdi],al
   14000dab2:	add    BYTE PTR [rax+0x1],al
   14000dab5:	add    BYTE PTR [rax],al
   14000dab7:	add    BYTE PTR [rax],ch
   14000dab9:	stos   BYTE PTR es:[rdi],al
   14000daba:	add    BYTE PTR [rax+0x1],al
   14000dabd:	add    BYTE PTR [rax],al
   14000dabf:	add    BYTE PTR [rsi],ch
   14000dac1:	stos   BYTE PTR es:[rdi],al
   14000dac2:	add    BYTE PTR [rax+0x1],al
   14000dac5:	add    BYTE PTR [rax],al
   14000dac7:	add    BYTE PTR [rdx+rbp*4],dh
   14000daca:	add    BYTE PTR [rax+0x1],al
   14000dacd:	add    BYTE PTR [rax],al
   14000dacf:	add    BYTE PTR [rdx],bh
   14000dad1:	stos   BYTE PTR es:[rdi],al
   14000dad2:	add    BYTE PTR [rax+0x1],al
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	add    BYTE PTR [rsi-0x58],cl
   14000dada:	add    BYTE PTR [rax+0x1],al
   14000dadd:	add    BYTE PTR [rax],al
   14000dadf:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000dae3:	rex add DWORD PTR [rax],eax
   14000dae6:	add    BYTE PTR [rax],al
   14000dae8:	stos   BYTE PTR es:[rdi],al
   14000daea:	add    BYTE PTR [rax+0x1],al
   14000daed:	add    BYTE PTR [rax],al
   14000daef:	add    BYTE PTR [rsi-0x56],al
   14000daf2:	add    BYTE PTR [rax+0x1],al
   14000daf5:	add    BYTE PTR [rax],al
   14000daf7:	add    BYTE PTR [rdx+rbp*4+0x0],cl
   14000dafb:	rex add DWORD PTR [rax],eax
   14000dafe:	add    BYTE PTR [rax],al
   14000db00:	push   rdx
   14000db01:	stos   BYTE PTR es:[rdi],al
   14000db02:	add    BYTE PTR [rax+0x1],al
   14000db05:	add    BYTE PTR [rax],al
   14000db07:	add    BYTE PTR [rdx-0x58],dh
   14000db0a:	add    BYTE PTR [rax+0x1],al
   14000db0d:	add    BYTE PTR [rax],al
   14000db0f:	add    BYTE PTR [rax-0x58],bh
   14000db12:	add    BYTE PTR [rax+0x1],al
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    BYTE PTR [rsi-0x58],bh
   14000db1a:	add    BYTE PTR [rax+0x1],al
   14000db1d:	add    BYTE PTR [rax],al
   14000db1f:	add    BYTE PTR [rax+rbp*4+0x14000],al
	...
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	or     BYTE PTR [rsi],bl
   14000db32:	add    DWORD PTR [rax+0x1],eax
   14000db35:	add    BYTE PTR [rax],al
   14000db37:	add    al,bh
   14000db39:	test   eax,0x14000
   14000db3e:	add    BYTE PTR [rax],al
   14000db40:	(bad)  
   14000db41:	test   eax,0x14000
   14000db46:	add    BYTE PTR [rax],al
   14000db48:	add    al,0xaa
   14000db4a:	add    BYTE PTR [rax+0x1],al
   14000db4d:	add    BYTE PTR [rax],al
   14000db4f:	add    BYTE PTR [rax+0x1e],al
   14000db52:	add    BYTE PTR [rax+0x1],al
   14000db55:	add    BYTE PTR [rax],al
   14000db57:	add    dl,cl
   14000db59:	mov    al,0x0
   14000db5b:	rex add DWORD PTR [rax],eax
   14000db5e:	add    BYTE PTR [rax],al
   14000db60:	shl    BYTE PTR [rax+0x14000],1
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	(bad)  
   14000db69:	mov    al,0x0
   14000db6b:	rex add DWORD PTR [rax],eax
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	or     al,0xa8
   14000db72:	add    BYTE PTR [rax+0x1],al
   14000db75:	add    BYTE PTR [rax],al
   14000db77:	add    ah,bl
   14000db79:	mov    al,0x0
   14000db7b:	rex add DWORD PTR [rax],eax
   14000db7e:	add    BYTE PTR [rax],al
   14000db80:	loop   0x14000db32
   14000db82:	add    BYTE PTR [rax+0x1],al
   14000db85:	add    BYTE PTR [rax],al
   14000db87:	add    al,ch
   14000db89:	mov    al,0x0
   14000db8b:	rex add DWORD PTR [rax],eax
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	or     ch,BYTE PTR [rdx+0x14000]
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	adc    BYTE PTR [rdx+0x14000],ch
   14000db9e:	add    BYTE PTR [rax],al
   14000dba0:	(bad)  
   14000dba1:	stos   BYTE PTR es:[rdi],al
   14000dba2:	add    BYTE PTR [rax+0x1],al
   14000dba5:	add    BYTE PTR [rax],al
   14000dba7:	add    BYTE PTR [rax+rbp*4],ah
   14000dbaa:	add    BYTE PTR [rax+0x1],al
   14000dbad:	add    BYTE PTR [rax],al
   14000dbaf:	add    BYTE PTR [rdx+rbp*4],bl
   14000dbb2:	add    BYTE PTR [rax+0x1],al
   14000dbb5:	add    BYTE PTR [rax],al
   14000dbb7:	add    BYTE PTR [rdi+0x69],dh
   14000dbba:	fs addr32 gs je 0x14000dbbf
   14000dbbf:	add    al,ah
   14000dbc1:	sbb    eax,0x14001
   14000dbc6:	add    BYTE PTR [rax],al
   14000dbc8:	add    BYTE PTR [rdi],bl
   14000dbca:	add    BYTE PTR [rax+0x1],al
   14000dbcd:	add    BYTE PTR [rax],al
   14000dbcf:	add    BYTE PTR [rsi-0x57],ch
   14000dbd2:	add    BYTE PTR [rax+0x1],al
   14000dbd5:	add    BYTE PTR [rax],al
   14000dbd7:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000dbdb:	rex add DWORD PTR [rax],eax
   14000dbde:	add    BYTE PTR [rax],al
   14000dbe0:	jp     0x14000db8b
   14000dbe2:	add    BYTE PTR [rax+0x1],al
   14000dbe5:	add    BYTE PTR [rax],al
   14000dbe7:	add    BYTE PTR [rax+0x14000a9],al
   14000dbed:	add    BYTE PTR [rax],al
   14000dbef:	add    BYTE PTR [rsi+0x14000a9],al
   14000dbf5:	add    BYTE PTR [rax],al
   14000dbf7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000dbfe:	add    BYTE PTR [rax],al
   14000dc00:	mov    eax,0x140011d
   14000dc05:	add    BYTE PTR [rax],al
   14000dc07:	add    BYTE PTR [rdx+0x14000a9],dl
   14000dc0d:	add    BYTE PTR [rax],al
   14000dc0f:	add    BYTE PTR [rax+0x14000a9],bl
   14000dc15:	add    BYTE PTR [rax],al
   14000dc17:	add    BYTE PTR [rsi+0x14000a9],bl
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	add    BYTE PTR [rax],dl
   14000dc21:	(bad)  
   14000dc22:	add    BYTE PTR [rax+0x1],al
   14000dc25:	add    BYTE PTR [rax],al
   14000dc27:	add    BYTE PTR [rcx+rbp*4+0x14000],ah
   14000dc2e:	add    BYTE PTR [rax],al
   14000dc30:	shl    BYTE PTR [rax+0x14000],1
   14000dc36:	add    BYTE PTR [rax],al
   14000dc38:	(bad)  
   14000dc39:	mov    al,0x0
   14000dc3b:	rex add DWORD PTR [rax],eax
   14000dc3e:	add    BYTE PTR [rax],al
   14000dc40:	out    dx,al
   14000dc41:	mov    al,0x0
   14000dc43:	rex add DWORD PTR [rax],eax
   14000dc46:	add    BYTE PTR [rax],al
   14000dc48:	fdiv   QWORD PTR [rax+0x14000]
   14000dc4e:	add    BYTE PTR [rax],al
   14000dc50:	loop   0x14000dc02
   14000dc52:	add    BYTE PTR [rax+0x1],al
   14000dc55:	add    BYTE PTR [rax],al
   14000dc57:	add    al,ch
   14000dc59:	mov    al,0x0
   14000dc5b:	rex add DWORD PTR [rax],eax
   14000dc5e:	add    BYTE PTR [rax],al
   14000dc60:	movabs ds:0xaa000000014000a8,al
   14000dc69:	test   eax,0x14000
   14000dc6e:	add    BYTE PTR [rax],al
   14000dc70:	mov    al,0xa9
   14000dc72:	add    BYTE PTR [rax+0x1],al
   14000dc75:	add    BYTE PTR [rax],al
   14000dc77:	add    BYTE PTR [rsi+0x14000a9],dh
   14000dc7d:	add    BYTE PTR [rax],al
   14000dc7f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000dc85:	add    BYTE PTR [rax],al
   14000dc87:	add    BYTE PTR [rcx+rbp*4+0x14000],bh
   14000dc8e:	add    BYTE PTR [rax],al
   14000dc90:	ret    0xa9
   14000dc93:	rex add DWORD PTR [rax],eax
   14000dc96:	add    BYTE PTR [rax],al
   14000dc98:	int3   
   14000dc99:	test   al,0x0
   14000dc9b:	rex add DWORD PTR [rax],eax
   14000dc9e:	add    BYTE PTR [rax],al
   14000dca0:	enter  0xa9,0x40
   14000dca4:	add    DWORD PTR [rax],eax
   14000dca6:	add    BYTE PTR [rax],al
   14000dca8:	fsubr  DWORD PTR [rax+0x14000]
   14000dcae:	add    BYTE PTR [rax],al
   14000dcb0:	(bad)  
   14000dcb1:	test   eax,0x14000
   14000dcb6:	add    BYTE PTR [rax],al
   14000dcb8:	in     al,0xa8
   14000dcba:	add    BYTE PTR [rax+0x1],al
   14000dcbd:	add    BYTE PTR [rax],al
   14000dcbf:	add    ah,dl
   14000dcc1:	test   eax,0x14000
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc8:	fisubr DWORD PTR [rcx+0x14000]
   14000dcce:	add    BYTE PTR [rax],al
   14000dcd0:	imul   BYTE PTR [rax+0x14000]
   14000dcd6:	add    BYTE PTR [rax],al
   14000dcd8:	cld    
   14000dcd9:	test   al,0x0
   14000dcdb:	rex add DWORD PTR [rax],eax
   14000dcde:	add    BYTE PTR [rax],al
   14000dce0:	loopne 0x14000dc8b
   14000dce2:	add    BYTE PTR [rax+0x1],al
   14000dce5:	add    BYTE PTR [rax],al
   14000dce7:	add    BYTE PTR [rax],cl
   14000dce9:	test   eax,0x14000
   14000dcee:	add    BYTE PTR [rax],al
   14000dcf0:	(bad)  
   14000dcf1:	test   eax,0x14000
   14000dcf6:	add    BYTE PTR [rax],al
   14000dcf8:	adc    al,0xa9
   14000dcfa:	add    BYTE PTR [rax+0x1],al
   14000dcfd:	add    BYTE PTR [rax],al
   14000dcff:	add    dh,ah
   14000dd01:	test   eax,0x14000
   14000dd06:	add    BYTE PTR [rax],al
   14000dd08:	and    BYTE PTR [rcx+0x14000],ch
   14000dd0e:	add    BYTE PTR [rax],al
   14000dd10:	es test eax,0x14000
   14000dd16:	add    BYTE PTR [rax],al
   14000dd18:	sub    al,0xa9
   14000dd1a:	add    BYTE PTR [rax+0x1],al
   14000dd1d:	add    BYTE PTR [rax],al
   14000dd1f:	add    BYTE PTR [rdx],dh
   14000dd21:	test   eax,0x14000
   14000dd26:	add    BYTE PTR [rax],al
   14000dd28:	cmp    BYTE PTR [rcx+0x14000],ch
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	ds test eax,0x14000
   14000dd36:	add    BYTE PTR [rax],al
   14000dd38:	rex.R test eax,0x14000
   14000dd3e:	add    BYTE PTR [rax],al
   14000dd40:	rex.WX test rax,0x14000
   14000dd46:	add    BYTE PTR [rax],al
   14000dd48:	push   rax
   14000dd49:	test   eax,0x14000
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	in     al,dx
   14000dd51:	test   eax,0x14000
   14000dd56:	add    BYTE PTR [rax],al
   14000dd58:	pop    rsp
   14000dd59:	test   eax,0x14000
   14000dd5e:	add    BYTE PTR [rax],al
   14000dd60:	(bad)  
   14000dd61:	test   eax,0x14000
   14000dd66:	add    BYTE PTR [rax],al
   14000dd68:	repnz test eax,0x14000
   14000dd6e:	add    BYTE PTR [rax],al
   14000dd70:	ins    BYTE PTR es:[rdi],dx
   14000dd71:	(bad)  
   14000dd72:	(bad)  
   14000dd73:	gs ins BYTE PTR es:[rdi],dx
	...
   14000dd7d:	add    BYTE PTR [rax],al
   14000dd7f:	add    BYTE PTR [rax+0x140011d],dl
   14000dd85:	add    BYTE PTR [rax],al
   14000dd87:	add    al,dh
   14000dd89:	(bad)  
   14000dd8a:	add    BYTE PTR [rax+0x1],al
   14000dd8d:	add    BYTE PTR [rax],al
   14000dd8f:	add    BYTE PTR [rsi-0x57],ch
   14000dd92:	add    BYTE PTR [rax+0x1],al
   14000dd95:	add    BYTE PTR [rax],al
   14000dd97:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000dd9b:	rex add DWORD PTR [rax],eax
   14000dd9e:	add    BYTE PTR [rax],al
   14000dda0:	jp     0x14000dd4b
   14000dda2:	add    BYTE PTR [rax+0x1],al
   14000dda5:	add    BYTE PTR [rax],al
   14000dda7:	add    BYTE PTR [rax+0x14000a9],al
   14000ddad:	add    BYTE PTR [rax],al
   14000ddaf:	add    BYTE PTR [rsi+0x14000a9],al
   14000ddb5:	add    BYTE PTR [rax],al
   14000ddb7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000ddbe:	add    BYTE PTR [rax],al
   14000ddc0:	mov    eax,0x140011b
   14000ddc5:	add    BYTE PTR [rax],al
   14000ddc7:	add    BYTE PTR [rdx+0x14000a8],cl
   14000ddcd:	add    BYTE PTR [rax],al
   14000ddcf:	add    BYTE PTR [rax+0x14000a8],dl
   14000ddd5:	add    BYTE PTR [rax],al
   14000ddd7:	add    BYTE PTR [rsi+0x14000a8],dl
   14000dddd:	add    BYTE PTR [rax],al
   14000dddf:	add    al,ah
   14000dde1:	sbb    eax,0x14000
   14000dde6:	add    BYTE PTR [rax],al
   14000dde8:	pushf  
   14000dde9:	test   al,0x0
   14000ddeb:	rex add DWORD PTR [rax],eax
   14000ddee:	add    BYTE PTR [rax],al
   14000ddf0:	shl    BYTE PTR [rax+0x14000],1
   14000ddf6:	add    BYTE PTR [rax],al
   14000ddf8:	(bad)  
   14000ddf9:	mov    al,0x0
   14000ddfb:	rex add DWORD PTR [rax],eax
   14000ddfe:	add    BYTE PTR [rax],al
   14000de00:	out    dx,al
   14000de01:	mov    al,0x0
   14000de03:	rex add DWORD PTR [rax],eax
   14000de06:	add    BYTE PTR [rax],al
   14000de08:	fdiv   QWORD PTR [rax+0x14000]
   14000de0e:	add    BYTE PTR [rax],al
   14000de10:	loop   0x14000ddc2
   14000de12:	add    BYTE PTR [rax+0x1],al
   14000de15:	add    BYTE PTR [rax],al
   14000de17:	add    al,ch
   14000de19:	mov    al,0x0
   14000de1b:	rex add DWORD PTR [rax],eax
   14000de1e:	add    BYTE PTR [rax],al
   14000de20:	movabs ds:0xa8000000014000a8,al
   14000de29:	test   al,0x0
   14000de2b:	rex add DWORD PTR [rax],eax
   14000de2e:	add    BYTE PTR [rax],al
   14000de30:	scas   al,BYTE PTR es:[rdi]
   14000de31:	test   al,0x0
   14000de33:	rex add DWORD PTR [rax],eax
   14000de36:	add    BYTE PTR [rax],al
   14000de38:	mov    ah,0xa8
   14000de3a:	add    BYTE PTR [rax+0x1],al
   14000de3d:	add    BYTE PTR [rax],al
   14000de3f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000de45:	add    BYTE PTR [rax],al
   14000de47:	add    al,al
   14000de49:	test   al,0x0
   14000de4b:	rex add DWORD PTR [rax],eax
   14000de4e:	add    BYTE PTR [rax],al
   14000de50:	(bad)  
   14000de51:	test   al,0x0
   14000de53:	rex add DWORD PTR [rax],eax
   14000de56:	add    BYTE PTR [rax],al
   14000de58:	int3   
   14000de59:	test   al,0x0
   14000de5b:	rex add DWORD PTR [rax],eax
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	shr    BYTE PTR [rax+0x14000],cl
   14000de66:	add    BYTE PTR [rax],al
   14000de68:	fsubr  DWORD PTR [rax+0x14000]
   14000de6e:	add    BYTE PTR [rax],al
   14000de70:	fisubr WORD PTR [rax+0x14000]
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	in     al,0xa8
   14000de7a:	add    BYTE PTR [rax+0x1],al
   14000de7d:	add    BYTE PTR [rax],al
   14000de7f:	add    dl,ch
   14000de81:	test   al,0x0
   14000de83:	rex add DWORD PTR [rax],eax
   14000de86:	add    BYTE PTR [rax],al
   14000de88:	lock test al,0x0
   14000de8b:	rex add DWORD PTR [rax],eax
   14000de8e:	add    BYTE PTR [rax],al
   14000de90:	imul   BYTE PTR [rax+0x14000]
   14000de96:	add    BYTE PTR [rax],al
   14000de98:	cld    
   14000de99:	test   al,0x0
   14000de9b:	rex add DWORD PTR [rax],eax
   14000de9e:	add    BYTE PTR [rax],al
   14000dea0:	add    ch,BYTE PTR [rcx+0x14000]
   14000dea6:	add    BYTE PTR [rax],al
   14000dea8:	or     BYTE PTR [rcx+0x14000],ch
   14000deae:	add    BYTE PTR [rax],al
   14000deb0:	(bad)  
   14000deb1:	test   eax,0x14000
   14000deb6:	add    BYTE PTR [rax],al
   14000deb8:	adc    al,0xa9
   14000deba:	add    BYTE PTR [rax+0x1],al
   14000debd:	add    BYTE PTR [rax],al
   14000debf:	add    BYTE PTR [rdx],bl
   14000dec1:	test   eax,0x14000
   14000dec6:	add    BYTE PTR [rax],al
   14000dec8:	and    BYTE PTR [rcx+0x14000],ch
   14000dece:	add    BYTE PTR [rax],al
   14000ded0:	es test eax,0x14000
   14000ded6:	add    BYTE PTR [rax],al
   14000ded8:	sub    al,0xa9
   14000deda:	add    BYTE PTR [rax+0x1],al
   14000dedd:	add    BYTE PTR [rax],al
   14000dedf:	add    BYTE PTR [rdx],dh
   14000dee1:	test   eax,0x14000
   14000dee6:	add    BYTE PTR [rax],al
   14000dee8:	cmp    BYTE PTR [rcx+0x14000],ch
   14000deee:	add    BYTE PTR [rax],al
   14000def0:	ds test eax,0x14000
   14000def6:	add    BYTE PTR [rax],al
   14000def8:	rex.R test eax,0x14000
   14000defe:	add    BYTE PTR [rax],al
   14000df00:	rex.WX test rax,0x14000
   14000df06:	add    BYTE PTR [rax],al
   14000df08:	push   rax
   14000df09:	test   eax,0x14000
   14000df0e:	add    BYTE PTR [rax],al
   14000df10:	push   rsi
   14000df11:	test   eax,0x14000
   14000df16:	add    BYTE PTR [rax],al
   14000df18:	pop    rsp
   14000df19:	test   eax,0x14000
   14000df1e:	add    BYTE PTR [rax],al
   14000df20:	(bad)  
   14000df21:	test   eax,0x14000
   14000df26:	add    BYTE PTR [rax],al
   14000df28:	push   0x14000a9
   14000df2d:	add    BYTE PTR [rax],al
   14000df2f:	add    BYTE PTR [rdi+0x72],ah
   14000df32:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   14000df3a:	add    BYTE PTR [rax],al
   14000df3c:	add    BYTE PTR [rax],al
   14000df3e:	add    BYTE PTR [rax],al
   14000df40:	nop
   14000df41:	sbb    eax,DWORD PTR [rcx]
   14000df43:	rex add DWORD PTR [rax],eax
   14000df46:	add    BYTE PTR [rax],al
   14000df48:	rcr    BYTE PTR [rsi],1
   14000df4a:	add    BYTE PTR [rax+0x1],al
   14000df4d:	add    BYTE PTR [rax],al
   14000df4f:	add    BYTE PTR [rax],dh
   14000df51:	test   al,0x0
   14000df53:	rex add DWORD PTR [rax],eax
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	ss test al,0x0
   14000df5b:	rex add DWORD PTR [rax],eax
   14000df5e:	add    BYTE PTR [rax],al
   14000df60:	cmp    al,0xa8
   14000df62:	add    BYTE PTR [rax+0x1],al
   14000df65:	add    BYTE PTR [rax],al
   14000df67:	add    BYTE PTR [rdx-0x58],al
   14000df6a:	add    BYTE PTR [rax+0x1],al
   14000df6d:	add    BYTE PTR [rax],al
   14000df6f:	add    BYTE PTR [rax-0x58],cl
   14000df72:	add    BYTE PTR [rax+0x1],al
   14000df75:	add    BYTE PTR [rax],al
   14000df77:	add    BYTE PTR [rsi-0x58],cl
   14000df7a:	add    BYTE PTR [rax+0x1],al
   14000df7d:	add    BYTE PTR [rax],al
   14000df7f:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000df83:	rex add DWORD PTR [rax],eax
   14000df86:	add    BYTE PTR [rax],al
   14000df88:	pop    rdx
   14000df89:	test   al,0x0
   14000df8b:	rex add DWORD PTR [rax],eax
   14000df8e:	add    BYTE PTR [rax],al
   14000df90:	(bad)  
   14000df91:	test   al,0x0
   14000df93:	rex add DWORD PTR [rax],eax
   14000df96:	add    BYTE PTR [rax],al
   14000df98:	data16 test al,0x0
   14000df9b:	rex add DWORD PTR [rax],eax
   14000df9e:	add    BYTE PTR [rax],al
   14000dfa0:	ins    BYTE PTR es:[rdi],dx
   14000dfa1:	test   al,0x0
   14000dfa3:	rex add DWORD PTR [rax],eax
   14000dfa6:	add    BYTE PTR [rax],al
   14000dfa8:	jb     0x14000df52
   14000dfaa:	add    BYTE PTR [rax+0x1],al
   14000dfad:	add    BYTE PTR [rax],al
   14000dfaf:	add    BYTE PTR [rax-0x58],bh
   14000dfb2:	add    BYTE PTR [rax+0x1],al
   14000dfb5:	add    BYTE PTR [rax],al
   14000dfb7:	add    BYTE PTR [rsi-0x58],bh
   14000dfba:	add    BYTE PTR [rax+0x1],al
   14000dfbd:	add    BYTE PTR [rax],al
   14000dfbf:	add    BYTE PTR [rax+rbp*4+0x14000],al
	...
   14000dfce:	add    BYTE PTR [rax],al
   14000dfd0:	fcomp  DWORD PTR [rcx]
   14000dfd2:	add    DWORD PTR [rax+0x1],eax
   14000dfd5:	add    BYTE PTR [rax],al
   14000dfd7:	add    dl,bh
   14000dfd9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dfda:	add    BYTE PTR [rax+0x1],al
   14000dfdd:	add    BYTE PTR [rax],al
   14000dfdf:	add    BYTE PTR [rax],al
   14000dfe1:	test   al,0x0
   14000dfe3:	rex add DWORD PTR [rax],eax
   14000dfe6:	add    BYTE PTR [rax],al
   14000dfe8:	(bad)  
   14000dfe9:	test   al,0x0
   14000dfeb:	rex add DWORD PTR [rax],eax
   14000dfee:	add    BYTE PTR [rax],al
   14000dff0:	mov    al,0x1d
   14000dff2:	add    BYTE PTR [rax+0x1],al
   14000dff5:	add    BYTE PTR [rax],al
   14000dff7:	add    dl,cl
   14000dff9:	mov    al,0x0
   14000dffb:	rex add DWORD PTR [rax],eax
   14000dffe:	add    BYTE PTR [rax],al
   14000e000:	shl    BYTE PTR [rax+0x14000],1
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	(bad)  
   14000e009:	mov    al,0x0
   14000e00b:	rex add DWORD PTR [rax],eax
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	or     al,0xa8
   14000e012:	add    BYTE PTR [rax+0x1],al
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	add    ah,bl
   14000e019:	mov    al,0x0
   14000e01b:	rex add DWORD PTR [rax],eax
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	loop   0x14000dfd2
   14000e022:	add    BYTE PTR [rax+0x1],al
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    al,ch
   14000e029:	mov    al,0x0
   14000e02b:	rex add DWORD PTR [rax],eax
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	adc    ch,BYTE PTR [rax+0x14000]
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	sbb    BYTE PTR [rax+0x14000],ch
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	(bad)  
   14000e041:	test   al,0x0
   14000e043:	rex add DWORD PTR [rax],eax
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	and    al,0xa8
   14000e04a:	add    BYTE PTR [rax+0x1],al
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rdx],ch
   14000e051:	test   al,0x0
   14000e053:	rex add DWORD PTR [rax],eax
	...
   14000e05e:	xor    al,0x40
   14000e060:	add    BYTE PTR [rax],al
   14000e062:	add    BYTE PTR [rax],al
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    BYTE PTR [rax+0x5b],al
	...
   14000e075:	(bad)  
   14000e076:	mov    BYTE PTR [rax+0x0],al
   14000e079:	add    BYTE PTR [rax],al
   14000e07b:	add    BYTE PTR [rax],al
   14000e07d:	add    BYTE PTR [rax],ch
   14000e07f:	add    BYTE PTR [rax],al
   14000e082:	add    BYTE PTR [rax],al
   14000e084:	add    BYTE PTR [rax],al
   14000e086:	sbb    BYTE PTR [rax+0x0],al
   14000e089:	add    BYTE PTR [rax],al
   14000e08b:	add    BYTE PTR [rax],al
   14000e08d:	add    BYTE PTR [rcx+0x65764f40],cl
   14000e093:	jb     0x14000e108
   14000e095:	push   0x746f6f
   14000e09a:	add    BYTE PTR [rax],al
   14000e09c:	add    BYTE PTR [rax],al
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	xor    esi,DWORD PTR [rbx]
   14000e0a2:	xor    esi,DWORD PTR [rbx]
   14000e0a4:	xor    esi,DWORD PTR [rbx]
   14000e0a6:	repz (bad) 
   14000e0a8:	pop    rsp
   14000e0a9:	pop    rdx
   14000e0ab:	cmc    
   14000e0ac:	sub    BYTE PTR [rdi+riz*8+0x3f],bl
   14000e0b0:	jnp    0x14000e0c6
   14000e0b2:	scas   al,BYTE PTR es:[rdi]
   14000e0b3:	rex.RXB loope 0x14000e130
   14000e0b6:	je     0x14000e0f7
   14000e0b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e0b9:	jo     0x14000e0f8
   14000e0bb:	or     dl,bh
   14000e0bd:	movabs ds:0x99999999999a3fe0,eax
   14000e0c6:	icebp  
   14000e0c7:	(bad)  
   14000e0c8:	mov    eax,0x51eb851e
   14000e0cd:	mov    eax,0x1eb8bfbe
   14000e0d2:	test   ebx,ebp
   14000e0d4:	push   rcx
   14000e0d5:	mov    eax,0xb8523fbe
   14000e0da:	(bad)  
   14000e0db:	test   ebx,ebp
   14000e0dd:	push   rcx
   14000e0de:	enter  0xabf,0xd7
   14000e0e2:	movabs ds:0x6d6f43bfb70a3d70,eax
   14000e0eb:	jo     0x14000e159
   14000e0ed:	gs js  0x14000e110
   14000e0f0:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000e0f2:	jne    0x14000e162
   14000e0f4:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e0f7:	add    BYTE PTR [rdx],cl
   14000e0f9:	xlat   BYTE PTR ds:[rbx]
   14000e0fa:	movabs ds:0xf5c28f3fef0a3d70,eax
   14000e103:	sub    BYTE PTR [rdi+rcx*4-0x16],bl
   14000e107:	(bad)  
   14000e108:	jno    0x14000e147
   14000e10a:	or     dl,bh
   14000e10c:	movabs ds:0xa3d70a3d73fed70,eax
   14000e115:	xlat   BYTE PTR ds:[rbx]
   14000e116:	jmp    0x14000e157
   14000e118:	rex.W loope 0x14000e195
   14000e11b:	adc    al,0xae
   14000e11d:	rex.RXB jmp 0xc51f9962
   14000e123:	jmp    0x14000e176
   14000e125:	mov    eax,0xa3d73fde
   14000e12a:	jo     0x14000e169
   14000e12c:	or     dl,bh
   14000e12e:	jrcxz  0x14000e16f
   14000e130:	(bad)  
   14000e131:	test   ebx,ebp
   14000e133:	push   rcx
   14000e134:	mov    eax,0x663fe51e
   14000e139:	data16 data16 data16 data16 data16 (bad) 
   14000e13f:	(bad)  
   14000e140:	push   rbx
   14000e141:	outs   dx,BYTE PTR ds:[rsi]
   14000e142:	(bad)  
   14000e143:	jo     0x14000e1b5
   14000e145:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14000e14c:	add    BYTE PTR [rax],al
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	data16 data16 data16 data16 data16 data16 out dx,al
   14000e157:	(bad)  
   14000e158:	adc    al,0xae
   14000e15a:	rex.RXB loope 0x14000e1d7
   14000e15d:	adc    al,0xde
   14000e15f:	(bad)  
   14000e160:	adc    al,0xae
   14000e162:	rex.RXB loope 0x14000e1df
   14000e165:	adc    al,0xee
   14000e167:	(bad)  
   14000e168:	loope  0x14000e1e4
   14000e16a:	adc    al,0xae
   14000e16c:	rex.RXB loope 0x14000e151
   14000e16f:	(bad)  
   14000e170:	push   rbx
   14000e171:	ins    BYTE PTR es:[rdi],dx
   14000e172:	outs   dx,DWORD PTR ds:[rsi]
   14000e173:	ja     0x14000e195
   14000e175:	imul   ebp,DWORD PTR [rsi+0x20],0x74736166
   14000e17c:	and    BYTE PTR [rdi+0x75],ch
   14000e17f:	je     0x14000e181
   14000e181:	add    BYTE PTR [rax],al
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    cl,ah
   14000e189:	jp     0x14000e19f
   14000e18b:	scas   al,BYTE PTR es:[rdi]
   14000e18c:	rex.RXB loope 0x14000e179
   14000e18f:	(bad)  
   14000e190:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e191:	jo     0x14000e1d0
   14000e193:	or     dl,bh
   14000e195:	movabs ds:0x1eb851eb851f3fe8,eax
   14000e19e:	in     eax,dx
   14000e19f:	(bad)  
   14000e1a0:	jno    0x14000e1df
   14000e1a2:	or     dl,bh
   14000e1a4:	movabs ds:0xa3d70a3d713fdd70,eax
   14000e1ad:	jo     0x14000e17c
   14000e1af:	(bad)  
   14000e1b0:	jnp    0x14000e1c6
   14000e1b2:	scas   al,BYTE PTR es:[rdi]
   14000e1b3:	rex.RXB loope 0x14000e230
   14000e1b6:	fs mov edi,0x47ae147b
   14000e1bc:	loope  0x14000e238
   14000e1be:	in     al,0x3f
   14000e1c0:	scas   al,BYTE PTR es:[rdi]
   14000e1c1:	rex.RXB loope 0x14000e23e
   14000e1c4:	adc    al,0xae
   14000e1c6:	out    0x3f,eax
   14000e1c8:	push   rbx
   14000e1c9:	imul   ebp,DWORD PTR [rbp+0x70],0x4220656c
   14000e1d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e1d1:	jne    0x14000e241
   14000e1d3:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	adc    al,0xae
   14000e1da:	rex.RXB loope 0x14000e257
   14000e1dd:	adc    al,0xe6
   14000e1df:	(bad)  
   14000e1e0:	(bad)  
   14000e1e1:	cdq    
   14000e1e2:	cdq    
   14000e1e3:	cdq    
   14000e1e4:	cdq    
   14000e1e5:	cdq    
   14000e1e6:	jmp    0x15eb9342a
   14000e1eb:	test   ebx,ebp
   14000e1ed:	push   rcx
   14000e1ee:	loopne 0x14000e22f
   14000e1f0:	push   rdx
   14000e1f1:	mov    eax,0x51eb851e
   14000e1f6:	fdivr  DWORD PTR [rdi]
   14000e1f8:	scas   al,BYTE PTR es:[rdi]
   14000e1f9:	rex.RXB loope 0x14000e276
   14000e1fc:	adc    al,0xae
   14000e1fe:	out    dx,eax
   14000e1ff:	(bad)  
   14000e200:	cmp    eax,0x70a3d70a
   14000e205:	cmp    eax,0x69533fe2
   14000e20a:	ins    DWORD PTR es:[rdi],dx
   14000e20b:	jo     0x14000e279
   14000e20d:	add    BYTE PTR gs:[rax],al
   14000e210:	jnp    0x14000e226
   14000e212:	scas   al,BYTE PTR es:[rdi]
   14000e213:	rex.RXB loope 0x14000e290
   14000e216:	fs (bad) 
   14000e218:	test   ebx,ebp
   14000e21a:	push   rcx
   14000e21b:	mov    eax,0x3fdb851e
   14000e220:	int    0xcc
   14000e222:	int3   
   14000e223:	int3   
   14000e224:	int3   
   14000e225:	int3   
   14000e226:	in     al,0x3f
   14000e228:	push   rbx
   14000e229:	je     0x14000e28c
   14000e22b:	outs   dx,BYTE PTR ds:[rsi]
   14000e22c:	fs (bad) 
   14000e22e:	jb     0x14000e294
   14000e230:	and    BYTE PTR [rbp+0x61],al
   14000e233:	jae    0x14000e29e
   14000e235:	outs   dx,BYTE PTR ds:[rsi]
   14000e236:	add    BYTE PTR [edx-0x48],dl
   14000e23a:	(bad)  
   14000e23b:	test   ebx,ebp
   14000e23d:	push   rcx
   14000e23e:	call   0x10ccdaf82
   14000e243:	int3   
   14000e244:	int3   
   14000e245:	int3   
   14000e246:	in     al,dx
   14000e247:	(bad)  
   14000e248:	(bad)  
   14000e249:	cdq    
   14000e24a:	cdq    
   14000e24b:	cdq    
   14000e24c:	cdq    
   14000e24d:	cdq    
   14000e24e:	loope  0x14000e28f
   14000e250:	data16 data16 data16 data16 data16 data16 out 0x3f,al
   14000e258:	mov    eax,0x51eb851e
   14000e25d:	mov    eax,0x33333fce
   14000e262:	xor    esi,DWORD PTR [rbx]
   14000e264:	xor    esi,DWORD PTR [rbx]
   14000e266:	mov    bl,0x3f
   14000e268:	(bad)  
   14000e269:	cdq    
   14000e26a:	cdq    
   14000e26b:	cdq    
   14000e26c:	cdq    
   14000e26d:	cdq    
   14000e26e:	fnstcw WORD PTR [rdi]
   14000e270:	int    0xcc
   14000e272:	int3   
   14000e273:	int3   
   14000e274:	int3   
   14000e275:	int3   
   14000e276:	fdivr  QWORD PTR [rdi]
   14000e278:	jo     0x14000e2aa
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	add    BYTE PTR [rax],al
   14000e27e:	add    BYTE PTR [rax],al
   14000e280:	shl    BYTE PTR [rbx],1
   14000e282:	add    DWORD PTR [rax+0x1],eax
   14000e285:	add    BYTE PTR [rax],al
   14000e287:	add    BYTE PTR [rax],dl
   14000e289:	pop    rsi
   14000e28a:	add    BYTE PTR [rax+0x1],al
   14000e28d:	add    BYTE PTR [rax],al
   14000e28f:	add    BYTE PTR [rdx],ah
   14000e291:	stos   BYTE PTR es:[rdi],al
   14000e292:	add    BYTE PTR [rax+0x1],al
   14000e295:	add    BYTE PTR [rax],al
   14000e297:	add    BYTE PTR [rax],ch
   14000e299:	stos   BYTE PTR es:[rdi],al
   14000e29a:	add    BYTE PTR [rax+0x1],al
   14000e29d:	add    BYTE PTR [rax],al
   14000e29f:	add    BYTE PTR [rsi],ch
   14000e2a1:	stos   BYTE PTR es:[rdi],al
   14000e2a2:	add    BYTE PTR [rax+0x1],al
   14000e2a5:	add    BYTE PTR [rax],al
   14000e2a7:	add    BYTE PTR [rdx+rbp*4],dh
   14000e2aa:	add    BYTE PTR [rax+0x1],al
   14000e2ad:	add    BYTE PTR [rax],al
   14000e2af:	add    BYTE PTR [rdx],bh
   14000e2b1:	stos   BYTE PTR es:[rdi],al
   14000e2b2:	add    BYTE PTR [rax+0x1],al
   14000e2b5:	add    BYTE PTR [rax],al
   14000e2b7:	add    BYTE PTR [rsi-0x58],cl
   14000e2ba:	add    BYTE PTR [rax+0x1],al
   14000e2bd:	add    BYTE PTR [rax],al
   14000e2bf:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000e2c3:	rex add DWORD PTR [rax],eax
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	stos   BYTE PTR es:[rdi],al
   14000e2ca:	add    BYTE PTR [rax+0x1],al
   14000e2cd:	add    BYTE PTR [rax],al
   14000e2cf:	add    BYTE PTR [rsi-0x56],al
   14000e2d2:	add    BYTE PTR [rax+0x1],al
   14000e2d5:	add    BYTE PTR [rax],al
   14000e2d7:	add    BYTE PTR [rdx+rbp*4+0x0],cl
   14000e2db:	rex add DWORD PTR [rax],eax
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	push   rdx
   14000e2e1:	stos   BYTE PTR es:[rdi],al
   14000e2e2:	add    BYTE PTR [rax+0x1],al
   14000e2e5:	add    BYTE PTR [rax],al
   14000e2e7:	add    BYTE PTR [rdx-0x58],dh
   14000e2ea:	add    BYTE PTR [rax+0x1],al
   14000e2ed:	add    BYTE PTR [rax],al
   14000e2ef:	add    BYTE PTR [rax-0x58],bh
   14000e2f2:	add    BYTE PTR [rax+0x1],al
   14000e2f5:	add    BYTE PTR [rax],al
   14000e2f7:	add    BYTE PTR [rsi-0x58],bh
   14000e2fa:	add    BYTE PTR [rax+0x1],al
   14000e2fd:	add    BYTE PTR [rax],al
   14000e2ff:	add    BYTE PTR [rax+rbp*4+0x14000],al
	...
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	cmp    BYTE PTR [rbx],ah
   14000e312:	add    DWORD PTR [rax+0x1],eax
   14000e315:	add    BYTE PTR [rax],al
   14000e317:	add    BYTE PTR [rsi-0x54],ch
   14000e31a:	add    BYTE PTR [rax+0x1],al
   14000e31d:	add    BYTE PTR [rax],al
   14000e31f:	add    BYTE PTR [rsp+rbp*4+0x0],dh
   14000e323:	rex add DWORD PTR [rax],eax
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	jp     0x14000e2d6
   14000e32a:	add    BYTE PTR [rax+0x1],al
   14000e32d:	add    BYTE PTR [rax],al
   14000e32f:	add    al,dl
   14000e331:	pop    rbp
   14000e332:	add    BYTE PTR [rax+0x1],al
   14000e335:	add    BYTE PTR [rax],al
   14000e337:	add    dl,cl
   14000e339:	mov    al,0x0
   14000e33b:	rex add DWORD PTR [rax],eax
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	shl    BYTE PTR [rax+0x14000],1
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	(bad)  
   14000e349:	mov    al,0x0
   14000e34b:	rex add DWORD PTR [rax],eax
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	or     al,0xa8
   14000e352:	add    BYTE PTR [rax+0x1],al
   14000e355:	add    BYTE PTR [rax],al
   14000e357:	add    ah,bl
   14000e359:	mov    al,0x0
   14000e35b:	rex add DWORD PTR [rax],eax
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	loop   0x14000e312
   14000e362:	add    BYTE PTR [rax+0x1],al
   14000e365:	add    BYTE PTR [rax],al
   14000e367:	add    al,ch
   14000e369:	mov    al,0x0
   14000e36b:	rex add DWORD PTR [rax],eax
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	or     ch,BYTE PTR [rdx+0x14000]
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	adc    BYTE PTR [rdx+0x14000],ch
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	(bad)  
   14000e381:	stos   BYTE PTR es:[rdi],al
   14000e382:	add    BYTE PTR [rax+0x1],al
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    BYTE PTR [rax+rbp*4],ah
   14000e38a:	add    BYTE PTR [rax+0x1],al
   14000e38d:	add    BYTE PTR [rax],al
   14000e38f:	add    BYTE PTR [rdx+rbp*4],bl
   14000e392:	add    BYTE PTR [rax+0x1],al
	...
   14000e39d:	add    BYTE PTR [rax],al
   14000e39f:	add    BYTE PTR [rax],dl
   14000e3a1:	and    eax,DWORD PTR [rcx]
   14000e3a3:	rex add DWORD PTR [rax],eax
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	add    BYTE PTR [rsi+0x0],bl
   14000e3ab:	rex add DWORD PTR [rax],eax
   14000e3ae:	add    BYTE PTR [rax],al
   14000e3b0:	outs   dx,BYTE PTR ds:[rsi]
   14000e3b1:	test   eax,0x14000
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	je     0x14000e363
   14000e3ba:	add    BYTE PTR [rax+0x1],al
   14000e3bd:	add    BYTE PTR [rax],al
   14000e3bf:	add    BYTE PTR [rdx-0x57],bh
   14000e3c2:	add    BYTE PTR [rax+0x1],al
   14000e3c5:	add    BYTE PTR [rax],al
   14000e3c7:	add    BYTE PTR [rax+0x14000a9],al
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    BYTE PTR [rsi+0x14000a9],al
   14000e3d5:	add    BYTE PTR [rax],al
   14000e3d7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000e3de:	add    BYTE PTR [rax],al
   14000e3e0:	add    BYTE PTR [rdx],ah
   14000e3e2:	add    DWORD PTR [rax+0x1],eax
   14000e3e5:	add    BYTE PTR [rax],al
   14000e3e7:	add    dl,dl
   14000e3e9:	stos   DWORD PTR es:[rdi],eax
   14000e3ea:	add    BYTE PTR [rax+0x1],al
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    al,bl
   14000e3f1:	stos   DWORD PTR es:[rdi],eax
   14000e3f2:	add    BYTE PTR [rax+0x1],al
   14000e3f5:	add    BYTE PTR [rax],al
   14000e3f7:	add    dh,bl
   14000e3f9:	stos   DWORD PTR es:[rdi],eax
   14000e3fa:	add    BYTE PTR [rax+0x1],al
   14000e3fd:	add    BYTE PTR [rax],al
   14000e3ff:	add    BYTE PTR [rax+0x140005d],ah
   14000e405:	add    BYTE PTR [rax],al
   14000e407:	add    ah,ah
   14000e409:	stos   DWORD PTR es:[rdi],eax
   14000e40a:	add    BYTE PTR [rax+0x1],al
   14000e40d:	add    BYTE PTR [rax],al
   14000e40f:	add    dl,ch
   14000e411:	stos   DWORD PTR es:[rdi],eax
   14000e412:	add    BYTE PTR [rax+0x1],al
   14000e415:	add    BYTE PTR [rax],al
   14000e417:	add    dh,dl
   14000e419:	mov    al,0x0
   14000e41b:	rex add DWORD PTR [rax],eax
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	out    dx,al
   14000e421:	mov    al,0x0
   14000e423:	rex add DWORD PTR [rax],eax
   14000e426:	add    BYTE PTR [rax],al
   14000e428:	fdiv   QWORD PTR [rax+0x14000]
   14000e42e:	add    BYTE PTR [rax],al
   14000e430:	loop   0x14000e3e2
   14000e432:	add    BYTE PTR [rax+0x1],al
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    al,ch
   14000e439:	mov    al,0x0
   14000e43b:	rex add DWORD PTR [rax],eax
   14000e43e:	add    BYTE PTR [rax],al
   14000e440:	movabs ds:0xf0000000014000a8,al
   14000e449:	stos   DWORD PTR es:[rdi],eax
   14000e44a:	add    BYTE PTR [rax+0x1],al
   14000e44d:	add    BYTE PTR [rax],al
   14000e44f:	add    dh,dh
   14000e451:	stos   DWORD PTR es:[rdi],eax
   14000e452:	add    BYTE PTR [rax+0x1],al
   14000e455:	add    BYTE PTR [rax],al
   14000e457:	add    BYTE PTR [rsi+0x14000a9],dh
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000e465:	add    BYTE PTR [rax],al
   14000e467:	add    ah,bh
   14000e469:	stos   DWORD PTR es:[rdi],eax
   14000e46a:	add    BYTE PTR [rax+0x1],al
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    BYTE PTR [rdx],al
   14000e471:	lods   al,BYTE PTR ds:[rsi]
   14000e472:	add    BYTE PTR [rax+0x1],al
   14000e475:	add    BYTE PTR [rax],al
   14000e477:	add    BYTE PTR [rax],cl
   14000e479:	lods   al,BYTE PTR ds:[rsi]
   14000e47a:	add    BYTE PTR [rax+0x1],al
   14000e47d:	add    BYTE PTR [rax],al
   14000e47f:	add    BYTE PTR [rsi],cl
   14000e481:	lods   al,BYTE PTR ds:[rsi]
   14000e482:	add    BYTE PTR [rax+0x1],al
   14000e485:	add    BYTE PTR [rax],al
   14000e487:	add    BYTE PTR [rsp+rbp*4],dl
   14000e48a:	add    BYTE PTR [rax+0x1],al
   14000e48d:	add    BYTE PTR [rax],al
   14000e48f:	add    BYTE PTR [rdx],bl
   14000e491:	lods   al,BYTE PTR ds:[rsi]
   14000e492:	add    BYTE PTR [rax+0x1],al
   14000e495:	add    BYTE PTR [rax],al
   14000e497:	add    ah,ah
   14000e499:	test   al,0x0
   14000e49b:	rex add DWORD PTR [rax],eax
   14000e49e:	add    BYTE PTR [rax],al
   14000e4a0:	(bad)  
   14000e4a1:	test   eax,0x14000
   14000e4a6:	add    BYTE PTR [rax],al
   14000e4a8:	fisubr DWORD PTR [rcx+0x14000]
   14000e4ae:	add    BYTE PTR [rax],al
   14000e4b0:	imul   BYTE PTR [rax+0x14000]
   14000e4b6:	add    BYTE PTR [rax],al
   14000e4b8:	cld    
   14000e4b9:	test   al,0x0
   14000e4bb:	rex add DWORD PTR [rax],eax
   14000e4be:	add    BYTE PTR [rax],al
   14000e4c0:	and    BYTE PTR [rax+rax*1+0x140],ch
   14000e4c7:	add    BYTE PTR [rax],cl
   14000e4c9:	test   eax,0x14000
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	lods   al,BYTE PTR es:[rsi]
   14000e4d2:	add    BYTE PTR [rax+0x1],al
   14000e4d5:	add    BYTE PTR [rax],al
   14000e4d7:	add    BYTE PTR [rcx+rbp*4],dl
   14000e4da:	add    BYTE PTR [rax+0x1],al
   14000e4dd:	add    BYTE PTR [rax],al
   14000e4df:	add    BYTE PTR [rsp+rbp*4],ch
   14000e4e2:	add    BYTE PTR [rax+0x1],al
   14000e4e5:	add    BYTE PTR [rax],al
   14000e4e7:	add    BYTE PTR [rax],ah
   14000e4e9:	test   eax,0x14000
   14000e4ee:	add    BYTE PTR [rax],al
   14000e4f0:	es test eax,0x14000
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	xor    ch,BYTE PTR [rax+rax*1+0x140]
   14000e4ff:	add    BYTE PTR [rax],bh
   14000e501:	lods   al,BYTE PTR ds:[rsi]
   14000e502:	add    BYTE PTR [rax+0x1],al
   14000e505:	add    BYTE PTR [rax],al
   14000e507:	add    BYTE PTR [rsi],bh
   14000e509:	lods   al,BYTE PTR ds:[rsi]
   14000e50a:	add    BYTE PTR [rax+0x1],al
   14000e50d:	add    BYTE PTR [rax],al
   14000e50f:	add    BYTE PTR [rsp+rbp*4+0x0],al
   14000e513:	rex add DWORD PTR [rax],eax
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	rex.R test eax,0x14000
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	rex.WX test rax,0x14000
   14000e526:	add    BYTE PTR [rax],al
   14000e528:	push   rax
   14000e529:	test   eax,0x14000
   14000e52e:	add    BYTE PTR [rax],al
   14000e530:	rex.WX lods al,BYTE PTR ds:[rsi]
   14000e532:	add    BYTE PTR [rax+0x1],al
   14000e535:	add    BYTE PTR [rax],al
   14000e537:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000e53b:	rex add DWORD PTR [rax],eax
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	(bad)  
   14000e541:	test   eax,0x14000
   14000e546:	add    BYTE PTR [rax],al
   14000e548:	push   rax
   14000e549:	lods   al,BYTE PTR ds:[rsi]
   14000e54a:	add    BYTE PTR [rax+0x1],al
   14000e54d:	add    BYTE PTR [rax],al
   14000e54f:	add    BYTE PTR [rsi-0x54],dl
   14000e552:	add    BYTE PTR [rax+0x1],al
   14000e555:	add    BYTE PTR [rax],al
   14000e557:	add    BYTE PTR [rsp+rbp*4+0x0],bl
   14000e55b:	rex add DWORD PTR [rax],eax
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	(bad)  
   14000e561:	lods   al,BYTE PTR ds:[rsi]
   14000e562:	add    BYTE PTR [rax+0x1],al
   14000e565:	add    BYTE PTR [rax],al
   14000e567:	add    BYTE PTR [rax-0x54],ch
   14000e56a:	add    BYTE PTR [rax+0x1],al
   14000e56d:	add    BYTE PTR [rax],al
   14000e56f:	add    BYTE PTR [rcx+0x64],al
   14000e572:	and    BYTE PTR fs:[rax+0x6f],dh
   14000e576:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000e57d:	add    BYTE PTR [rax],al
   14000e57f:	add    BYTE PTR [rbx+0x6f],al
   14000e582:	jb     0x14000e5f2
   14000e584:	gs jb  0x14000e5a7
   14000e587:	jo     0x14000e5f8
   14000e589:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000e590:	push   rbx
   14000e591:	ins    DWORD PTR es:[rdi],dx
   14000e592:	outs   dx,DWORD PTR ds:[rsi]
   14000e593:	outs   dx,DWORD PTR ds:[rsi]
   14000e594:	je     0x14000e5fe
   14000e596:	and    BYTE PTR [rax+0x6f],dh
   14000e599:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000e5a0:	rex.R
   14000e5a1:	gs ins BYTE PTR es:[rdi],dx
   14000e5a3:	gs je  0x14000e60b
   14000e5a6:	and    BYTE PTR [rax+0x6f],dh
   14000e5a9:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000e5b0:	push   0x1400125
   14000e5b5:	add    BYTE PTR [rax],al
   14000e5b7:	add    ah,ch
   14000e5b9:	lods   al,BYTE PTR ds:[rsi]
   14000e5ba:	add    BYTE PTR [rax+0x1],al
   14000e5bd:	add    BYTE PTR [rax],al
   14000e5bf:	add    dl,dh
   14000e5c1:	lods   al,BYTE PTR ds:[rsi]
   14000e5c2:	add    BYTE PTR [rax+0x1],al
   14000e5c5:	add    BYTE PTR [rax],al
   14000e5c7:	add    al,bh
   14000e5c9:	lods   al,BYTE PTR ds:[rsi]
   14000e5ca:	add    BYTE PTR [rax+0x1],al
   14000e5cd:	add    BYTE PTR [rax],al
   14000e5cf:	add    BYTE PTR [rax+0x63],al
   14000e5d2:	add    BYTE PTR [rax+0x1],al
   14000e5d5:	add    BYTE PTR [rax],al
   14000e5d7:	add    dh,bh
   14000e5d9:	lods   al,BYTE PTR ds:[rsi]
   14000e5da:	add    BYTE PTR [rax+0x1],al
   14000e5dd:	add    BYTE PTR [rax],al
   14000e5df:	add    al,dl
   14000e5e1:	mov    al,0x0
   14000e5e3:	rex add DWORD PTR [rax],eax
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	(bad)  
   14000e5e9:	mov    al,0x0
   14000e5eb:	rex add DWORD PTR [rax],eax
   14000e5ee:	add    BYTE PTR [rax],al
   14000e5f0:	out    dx,al
   14000e5f1:	mov    al,0x0
   14000e5f3:	rex add DWORD PTR [rax],eax
   14000e5f6:	add    BYTE PTR [rax],al
   14000e5f8:	fdiv   QWORD PTR [rax+0x14000]
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	loop   0x14000e5b2
   14000e602:	add    BYTE PTR [rax+0x1],al
   14000e605:	add    BYTE PTR [rax],al
   14000e607:	add    al,ch
   14000e609:	mov    al,0x0
   14000e60b:	rex add DWORD PTR [rax],eax
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	rex and eax,0x14001
   14000e616:	add    BYTE PTR [rax],al
   14000e618:	and    BYTE PTR [rbx+0x0],0x40
   14000e61c:	add    DWORD PTR [rax],eax
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	outs   dx,BYTE PTR ds:[rsi]
   14000e621:	test   eax,0x14000
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	je     0x14000e5d3
   14000e62a:	add    BYTE PTR [rax+0x1],al
   14000e62d:	add    BYTE PTR [rax],al
   14000e62f:	add    BYTE PTR [rdx-0x57],bh
   14000e632:	add    BYTE PTR [rax+0x1],al
   14000e635:	add    BYTE PTR [rax],al
   14000e637:	add    BYTE PTR [rax+0x14000a9],al
   14000e63d:	add    BYTE PTR [rax],al
   14000e63f:	add    BYTE PTR [rsi+0x14000a9],al
   14000e645:	add    BYTE PTR [rax],al
   14000e647:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000e64e:	add    BYTE PTR [rax],al
   14000e650:	mov    al,0x24
   14000e652:	add    DWORD PTR [rax+0x1],eax
   14000e655:	add    BYTE PTR [rax],al
   14000e657:	add    BYTE PTR [rax+0x14000ac],al
   14000e65d:	add    BYTE PTR [rax],al
   14000e65f:	add    BYTE PTR [rsi+0x14000ac],al
   14000e665:	add    BYTE PTR [rax],al
   14000e667:	add    BYTE PTR [rsp+rbp*4+0x14000],cl
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	adc    BYTE PTR [rbx+0x0],ah
   14000e673:	rex add DWORD PTR [rax],eax
   14000e676:	add    BYTE PTR [rax],al
   14000e678:	xchg   edx,eax
   14000e679:	lods   al,BYTE PTR ds:[rsi]
   14000e67a:	add    BYTE PTR [rax+0x1],al
   14000e67d:	add    BYTE PTR [rax],al
   14000e67f:	add    al,dl
   14000e681:	mov    al,0x0
   14000e683:	rex add DWORD PTR [rax],eax
   14000e686:	add    BYTE PTR [rax],al
   14000e688:	cwde   
   14000e689:	lods   al,BYTE PTR ds:[rsi]
   14000e68a:	add    BYTE PTR [rax+0x1],al
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    dh,ch
   14000e691:	mov    al,0x0
   14000e693:	rex add DWORD PTR [rax],eax
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	fdiv   QWORD PTR [rax+0x14000]
   14000e69e:	add    BYTE PTR [rax],al
   14000e6a0:	loop   0x14000e652
   14000e6a2:	add    BYTE PTR [rax+0x1],al
   14000e6a5:	add    BYTE PTR [rax],al
   14000e6a7:	add    al,ch
   14000e6a9:	mov    al,0x0
   14000e6ab:	rex add DWORD PTR [rax],eax
   14000e6ae:	add    BYTE PTR [rax],al
   14000e6b0:	movabs ds:0x9e000000014000a8,al
   14000e6b9:	lods   al,BYTE PTR ds:[rsi]
   14000e6ba:	add    BYTE PTR [rax+0x1],al
   14000e6bd:	add    BYTE PTR [rax],al
   14000e6bf:	add    BYTE PTR [rax+0x14000a9],dh
   14000e6c5:	add    BYTE PTR [rax],al
   14000e6c7:	add    BYTE PTR [rsi+0x14000a9],dh
   14000e6cd:	add    BYTE PTR [rax],al
   14000e6cf:	add    BYTE PTR [rdx+0x14000a8],bh
   14000e6d5:	add    BYTE PTR [rax],al
   14000e6d7:	add    BYTE PTR [rsp+rbp*4+0x14000],ah
   14000e6de:	add    BYTE PTR [rax],al
   14000e6e0:	stos   BYTE PTR es:[rdi],al
   14000e6e1:	lods   al,BYTE PTR ds:[rsi]
   14000e6e2:	add    BYTE PTR [rax+0x1],al
   14000e6e5:	add    BYTE PTR [rax],al
   14000e6e7:	add    ah,cl
   14000e6e9:	test   al,0x0
   14000e6eb:	rex add DWORD PTR [rax],eax
   14000e6ee:	add    BYTE PTR [rax],al
   14000e6f0:	mov    al,0xac
   14000e6f2:	add    BYTE PTR [rax+0x1],al
   14000e6f5:	add    BYTE PTR [rax],al
   14000e6f7:	add    BYTE PTR [rsi+0x14000ac],dh
   14000e6fd:	add    BYTE PTR [rax],al
   14000e6ff:	add    BYTE PTR [rsp+rbp*4+0x14000],bh
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	in     al,0xa8
   14000e70a:	add    BYTE PTR [rax+0x1],al
   14000e70d:	add    BYTE PTR [rax],al
   14000e70f:	add    ah,dl
   14000e711:	test   eax,0x14000
   14000e716:	add    BYTE PTR [rax],al
   14000e718:	fisubr DWORD PTR [rcx+0x14000]
   14000e71e:	add    BYTE PTR [rax],al
   14000e720:	ret    0xac
   14000e723:	rex add DWORD PTR [rax],eax
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	enter  0xac,0x40
   14000e72c:	add    DWORD PTR [rax],eax
   14000e72e:	add    BYTE PTR [rax],al
   14000e730:	(bad)  
   14000e731:	lods   al,BYTE PTR ds:[rsi]
   14000e732:	add    BYTE PTR [rax+0x1],al
   14000e735:	add    BYTE PTR [rax],al
   14000e737:	add    BYTE PTR [rax],cl
   14000e739:	test   eax,0x14000
   14000e73e:	add    BYTE PTR [rax],al
   14000e740:	(bad)  
   14000e741:	test   eax,0x14000
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	adc    al,0xa9
   14000e74a:	add    BYTE PTR [rax+0x1],al
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    dh,ah
   14000e751:	test   eax,0x14000
   14000e756:	add    BYTE PTR [rax],al
   14000e758:	and    BYTE PTR [rcx+0x14000],ch
   14000e75e:	add    BYTE PTR [rax],al
   14000e760:	(bad)  
   14000e761:	lods   al,BYTE PTR ds:[rsi]
   14000e762:	add    BYTE PTR [rax+0x1],al
   14000e765:	add    BYTE PTR [rax],al
   14000e767:	add    BYTE PTR [rcx+rbp*4],ch
   14000e76a:	add    BYTE PTR [rax+0x1],al
   14000e76d:	add    BYTE PTR [rax],al
   14000e76f:	add    BYTE PTR [rdx],dh
   14000e771:	test   eax,0x14000
   14000e776:	add    BYTE PTR [rax],al
   14000e778:	cmp    BYTE PTR [rcx+0x14000],ch
   14000e77e:	add    BYTE PTR [rax],al
   14000e780:	ds test eax,0x14000
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	rex.R test eax,0x14000
   14000e78e:	add    BYTE PTR [rax],al
   14000e790:	fisubr DWORD PTR [rax+rax*1+0x140]
   14000e797:	add    BYTE PTR [rax-0x57],dl
   14000e79a:	add    BYTE PTR [rax+0x1],al
   14000e79d:	add    BYTE PTR [rax],al
   14000e79f:	add    al,ah
   14000e7a1:	lods   al,BYTE PTR ds:[rsi]
   14000e7a2:	add    BYTE PTR [rax+0x1],al
   14000e7a5:	add    BYTE PTR [rax],al
   14000e7a7:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000e7ab:	rex add DWORD PTR [rax],eax
   14000e7ae:	add    BYTE PTR [rax],al
   14000e7b0:	(bad)  
   14000e7b1:	test   eax,0x14000
   14000e7b6:	add    BYTE PTR [rax],al
   14000e7b8:	out    0xac,al
   14000e7ba:	add    BYTE PTR [rax+0x1],al
   14000e7bd:	add    BYTE PTR [rax],al
   14000e7bf:	add    BYTE PTR [rax+0x1400124],cl
   14000e7c5:	add    BYTE PTR [rax],al
   14000e7c7:	add    BYTE PTR [rax+0x63],dh
   14000e7ca:	add    BYTE PTR [rax+0x1],al
   14000e7cd:	add    BYTE PTR [rax],al
   14000e7cf:	add    BYTE PTR [rsi-0x57],ch
   14000e7d2:	add    BYTE PTR [rax+0x1],al
   14000e7d5:	add    BYTE PTR [rax],al
   14000e7d7:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000e7db:	rex add DWORD PTR [rax],eax
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	jp     0x14000e78b
   14000e7e2:	add    BYTE PTR [rax+0x1],al
   14000e7e5:	add    BYTE PTR [rax],al
   14000e7e7:	add    BYTE PTR [rax+0x14000a9],al
   14000e7ed:	add    BYTE PTR [rax],al
   14000e7ef:	add    BYTE PTR [rsi+0x14000a9],al
   14000e7f5:	add    BYTE PTR [rax],al
   14000e7f7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000e7fe:	add    BYTE PTR [rax],al
   14000e800:	clc    
   14000e801:	and    eax,DWORD PTR [rcx]
   14000e803:	rex add DWORD PTR [rax],eax
   14000e806:	add    BYTE PTR [rax],al
   14000e808:	mov    al,0xa4
   14000e80a:	add    BYTE PTR [rax+0x1],al
   14000e80d:	add    BYTE PTR [rax],al
   14000e80f:	add    al,al
   14000e811:	movabs ds:0xa4d0000000014000,al
   14000e81a:	add    BYTE PTR [rax+0x1],al
   14000e81d:	add    BYTE PTR [rax],al
   14000e81f:	add    BYTE PTR [rax+0x64],dl
   14000e822:	add    BYTE PTR [rax+0x1],al
   14000e825:	add    BYTE PTR [rax],al
   14000e827:	add    BYTE PTR [rcx+rbp*4+0x14000],ah
   14000e82e:	add    BYTE PTR [rax],al
   14000e830:	shl    BYTE PTR [rax+0x14000],1
   14000e836:	add    BYTE PTR [rax],al
   14000e838:	(bad)  
   14000e839:	mov    al,0x0
   14000e83b:	rex add DWORD PTR [rax],eax
   14000e83e:	add    BYTE PTR [rax],al
   14000e840:	out    dx,al
   14000e841:	mov    al,0x0
   14000e843:	rex add DWORD PTR [rax],eax
   14000e846:	add    BYTE PTR [rax],al
   14000e848:	fdiv   QWORD PTR [rax+0x14000]
   14000e84e:	add    BYTE PTR [rax],al
   14000e850:	loop   0x14000e802
   14000e852:	add    BYTE PTR [rax+0x1],al
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    al,ch
   14000e859:	mov    al,0x0
   14000e85b:	rex add DWORD PTR [rax],eax
   14000e85e:	add    BYTE PTR [rax],al
   14000e860:	movabs ds:0xaa000000014000a8,al
   14000e869:	test   eax,0x14000
   14000e86e:	add    BYTE PTR [rax],al
   14000e870:	mov    al,0xa9
   14000e872:	add    BYTE PTR [rax+0x1],al
   14000e875:	add    BYTE PTR [rax],al
   14000e877:	add    BYTE PTR [rsi+0x14000a9],dh
   14000e87d:	add    BYTE PTR [rax],al
   14000e87f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000e885:	add    BYTE PTR [rax],al
   14000e887:	add    BYTE PTR [rax],dh
   14000e889:	(bad)  
   14000e88a:	add    BYTE PTR [rax+0x1],al
   14000e88d:	add    BYTE PTR [rax],al
   14000e88f:	add    BYTE PTR [rax],al
   14000e891:	adc    al,0x0
   14000e893:	rex add DWORD PTR [rax],eax
   14000e896:	add    BYTE PTR [rax],al
   14000e898:	int3   
   14000e899:	test   al,0x0
   14000e89b:	rex add DWORD PTR [rax],eax
   14000e89e:	add    BYTE PTR [rax],al
   14000e8a0:	push   rax
   14000e8a1:	cmp    eax,0x14000
   14000e8a6:	add    BYTE PTR [rax],al
   14000e8a8:	fsubr  DWORD PTR [rax+0x14000]
   14000e8ae:	add    BYTE PTR [rax],al
   14000e8b0:	(bad)  
   14000e8b1:	test   eax,0x14000
   14000e8b6:	add    BYTE PTR [rax],al
   14000e8b8:	in     al,0xa8
   14000e8ba:	add    BYTE PTR [rax+0x1],al
   14000e8bd:	add    BYTE PTR [rax],al
   14000e8bf:	add    ah,dl
   14000e8c1:	test   eax,0x14000
   14000e8c6:	add    BYTE PTR [rax],al
   14000e8c8:	fisubr DWORD PTR [rcx+0x14000]
   14000e8ce:	add    BYTE PTR [rax],al
   14000e8d0:	imul   BYTE PTR [rax+0x14000]
   14000e8d6:	add    BYTE PTR [rax],al
   14000e8d8:	cld    
   14000e8d9:	test   al,0x0
   14000e8db:	rex add DWORD PTR [rax],eax
   14000e8de:	add    BYTE PTR [rax],al
   14000e8e0:	shr    BYTE PTR [rdi],0x0
   14000e8e3:	rex add DWORD PTR [rax],eax
   14000e8e6:	add    BYTE PTR [rax],al
   14000e8e8:	or     BYTE PTR [rcx+0x14000],ch
   14000e8ee:	add    BYTE PTR [rax],al
   14000e8f0:	(bad)  
   14000e8f1:	test   eax,0x14000
   14000e8f6:	add    BYTE PTR [rax],al
   14000e8f8:	adc    al,0xa9
   14000e8fa:	add    BYTE PTR [rax+0x1],al
   14000e8fd:	add    BYTE PTR [rax],al
   14000e8ff:	add    BYTE PTR [rax+0x6b],ah
   14000e902:	add    BYTE PTR [rax+0x1],al
   14000e905:	add    BYTE PTR [rax],al
   14000e907:	add    BYTE PTR [rax],ah
   14000e909:	test   eax,0x14000
   14000e90e:	add    BYTE PTR [rax],al
   14000e910:	es test eax,0x14000
   14000e916:	add    BYTE PTR [rax],al
   14000e918:	sub    al,0xa9
   14000e91a:	add    BYTE PTR [rax+0x1],al
   14000e91d:	add    BYTE PTR [rax],al
   14000e91f:	add    BYTE PTR [rdx],dh
   14000e921:	test   eax,0x14000
   14000e926:	add    BYTE PTR [rax],al
   14000e928:	cmp    BYTE PTR [rcx+0x14000],ch
   14000e92e:	add    BYTE PTR [rax],al
   14000e930:	ds test eax,0x14000
   14000e936:	add    BYTE PTR [rax],al
   14000e938:	rex.R test eax,0x14000
   14000e93e:	add    BYTE PTR [rax],al
   14000e940:	rex.WX test rax,0x14000
   14000e946:	add    BYTE PTR [rax],al
   14000e948:	push   rax
   14000e949:	test   eax,0x14000
   14000e94e:	add    BYTE PTR [rax],al
   14000e950:	in     al,dx
   14000e951:	test   eax,0x14000
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	pop    rsp
   14000e959:	test   eax,0x14000
   14000e95e:	add    BYTE PTR [rax],al
   14000e960:	(bad)  
   14000e961:	test   eax,0x14000
   14000e966:	add    BYTE PTR [rax],al
   14000e968:	repnz test eax,0x14000
	...
   14000e976:	or     BYTE PTR [rax+0x49],al
   14000e979:	ins    DWORD PTR es:[rdi],dx
   14000e97a:	jo     0x14000e9eb
   14000e97c:	jb     0x14000e9f2
   14000e97e:	and    BYTE PTR [rcx+0x66],al
   14000e981:	je     0x14000e9e8
   14000e983:	jb     0x14000e9ca
   14000e985:	data16 movsxd si,DWORD PTR gs:[rbx+rsi*2+0x20]
   14000e98c:	rex.XB jne 0x14000ea01
   14000e98f:	jbe    0x14000e9f6
   14000e991:	add    BYTE PTR [rax],al
   14000e993:	add    BYTE PTR [rax],al
   14000e995:	add    BYTE PTR [rax],al
   14000e997:	add    BYTE PTR [rbx+0x6f],al
   14000e99a:	outs   dx,BYTE PTR ds:[rsi]
   14000e99b:	je     0x14000ea0f
   14000e99d:	outs   dx,DWORD PTR ds:[rsi]
   14000e99e:	ins    BYTE PTR es:[rdi],dx
   14000e99f:	and    BYTE PTR [rax+0x6f],dl
   14000e9a2:	imul   ebp,DWORD PTR [rsi+0x74],0x50000073
   14000e9a9:	jb     0x14000ea10
   14000e9ab:	jae    0x14000ea12
   14000e9ad:	je     0x14000ea22
   14000e9af:	add    BYTE PTR [rbx+0x6f],al
   14000e9b2:	fs add BYTE PTR gs:[rax],al
   14000e9b6:	add    BYTE PTR [rax],al
   14000e9b8:	rex.R jne 0x14000ea2d
   14000e9bb:	(bad)  
   14000e9bc:	je     0x14000ea27
   14000e9be:	outs   dx,DWORD PTR ds:[rsi]
   14000e9bf:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000e9c8:	push   rax
   14000e9c9:	jb     0x14000ea3a
   14000e9cb:	jo     0x14000ea32
   14000e9cd:	jb     0x14000ea43
   14000e9cf:	imul   esp,DWORD PTR [rbp+0x73],0x0
   14000e9d6:	add    BYTE PTR [rax],al
   14000e9d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e9da:	jo     0x14000ea51
   14000e9dc:	je     0x14000e9fe
   14000e9de:	push   rbx
   14000e9df:	ins    BYTE PTR es:[rdi],dx
   14000e9e0:	outs   dx,DWORD PTR ds:[rsi]
   14000e9e1:	jo     0x14000ea48
   14000e9e3:	cmp    al,BYTE PTR [rax]
   14000e9e5:	add    BYTE PTR [rax],al
   14000e9e7:	add    BYTE PTR [rax],dh
   14000e9e9:	add    BYTE PTR [rax],al
   14000e9eb:	add    BYTE PTR [rbx],dh
   14000e9ed:	xor    eax,DWORD PTR [rax]
   14000e9ef:	add    BYTE PTR [rdi+0x75],cl
   14000e9f2:	je     0x14000ea64
   14000e9f4:	jne    0x14000ea6a
   14000e9f6:	and    BYTE PTR [rbx+0x6c],dl
   14000e9f9:	outs   dx,DWORD PTR ds:[rsi]
   14000e9fa:	jo     0x14000ea61
   14000e9fc:	cmp    al,BYTE PTR [rax]
   14000e9fe:	add    BYTE PTR [rax],al
   14000ea00:	rex.WRXB jne 0x14000ea77
   14000ea03:	jo     0x14000ea7a
   14000ea05:	je     0x14000ea27
   14000ea07:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ea09:	data16 ins BYTE PTR es:[rdi],dx
   14000ea0b:	jne    0x14000ea72
   14000ea0d:	outs   dx,BYTE PTR ds:[rsi]
   14000ea0e:	movsxd esp,DWORD PTR [rbp+0x3a]
   14000ea11:	add    BYTE PTR [rax],al
   14000ea13:	add    BYTE PTR [rax],al
   14000ea15:	add    BYTE PTR [rax],al
   14000ea17:	add    BYTE PTR [rcx+0x6e],cl
   14000ea1a:	jo     0x14000ea91
   14000ea1c:	je     0x14000ea3e
   14000ea1e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ea20:	data16 ins BYTE PTR es:[rdi],dx
   14000ea22:	jne    0x14000ea89
   14000ea24:	outs   dx,BYTE PTR ds:[rsi]
   14000ea25:	movsxd esp,DWORD PTR [rbp+0x3a]
	...
   14000ea30:	rex.WB ins DWORD PTR es:[rdi],dx
   14000ea32:	jo     0x14000eaa3
   14000ea34:	jb     0x14000eaaa
   14000ea36:	imul   r12d,DWORD PTR [rcx+0x6c],0x676f
   14000ea3e:	add    BYTE PTR [rax],al
   14000ea40:	rex.WB ins DWORD PTR es:[rdi],dx
   14000ea42:	jo     0x14000eab3
   14000ea44:	jb     0x14000eaba
   14000ea46:	and    BYTE PTR [rcx+0x66],al
   14000ea49:	je     0x14000eab0
   14000ea4b:	jb     0x14000ea6d
   14000ea4d:	rex.RB
   14000ea4e:	data16 movsxd si,DWORD PTR gs:[rbx+rsi*2+0x20]
   14000ea55:	rex.XB jne 0x14000eaca
   14000ea58:	jbe    0x14000eabf
   14000ea5a:	add    BYTE PTR [rax],al
   14000ea5c:	add    BYTE PTR [rax],al
   14000ea5e:	add    BYTE PTR [rax],al
   14000ea60:	imul   ebp,DWORD PTR [rbp+0x70],0x4274726f
   14000ea67:	jne    0x14000eadd
   14000ea69:	je     0x14000eada
   14000ea6b:	outs   dx,BYTE PTR ds:[rsi]
   14000ea6c:	add    BYTE PTR [rax],al
   14000ea6e:	add    BYTE PTR [rax],al
   14000ea70:	js     0x14000ea9b
   14000ea72:	add    DWORD PTR [rax+0x1],eax
   14000ea75:	add    BYTE PTR [rax],al
   14000ea77:	add    al,dl
   14000ea79:	(bad)  
   14000ea7a:	add    BYTE PTR [rax+0x1],al
   14000ea7d:	add    BYTE PTR [rax],al
   14000ea7f:	add    BYTE PTR [rsi-0x57],ch
   14000ea82:	add    BYTE PTR [rax+0x1],al
   14000ea85:	add    BYTE PTR [rax],al
   14000ea87:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000ea8b:	rex add DWORD PTR [rax],eax
   14000ea8e:	add    BYTE PTR [rax],al
   14000ea90:	jp     0x14000ea3b
   14000ea92:	add    BYTE PTR [rax+0x1],al
   14000ea95:	add    BYTE PTR [rax],al
   14000ea97:	add    BYTE PTR [rax+0x14000a9],al
   14000ea9d:	add    BYTE PTR [rax],al
   14000ea9f:	add    BYTE PTR [rsi+0x14000a9],al
   14000eaa5:	add    BYTE PTR [rax],al
   14000eaa7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000eaae:	add    BYTE PTR [rax],al
   14000eab0:	loopne 0x14000eada
   14000eab2:	add    DWORD PTR [rax+0x1],eax
   14000eab5:	add    BYTE PTR [rax],al
   14000eab7:	add    dh,bl
   14000eab9:	scas   al,BYTE PTR es:[rdi]
   14000eaba:	add    BYTE PTR [rax+0x1],al
   14000eabd:	add    BYTE PTR [rax],al
   14000eabf:	add    ah,ah
   14000eac1:	scas   al,BYTE PTR es:[rdi]
   14000eac2:	add    BYTE PTR [rax+0x1],al
   14000eac5:	add    BYTE PTR [rax],al
   14000eac7:	add    dl,ch
   14000eac9:	scas   al,BYTE PTR es:[rdi]
   14000eaca:	add    BYTE PTR [rax+0x1],al
   14000eacd:	add    BYTE PTR [rax],al
   14000eacf:	add    BYTE PTR [rax-0x7e],dh
   14000ead2:	add    BYTE PTR [rax+0x1],al
   14000ead5:	add    BYTE PTR [rax],al
   14000ead7:	add    al,dh
   14000ead9:	scas   al,BYTE PTR es:[rdi]
   14000eada:	add    BYTE PTR [rax+0x1],al
   14000eadd:	add    BYTE PTR [rax],al
   14000eadf:	add    al,dl
   14000eae1:	mov    al,0x0
   14000eae3:	rex add DWORD PTR [rax],eax
   14000eae6:	add    BYTE PTR [rax],al
   14000eae8:	and    al,0xab
   14000eaea:	add    BYTE PTR [rax+0x1],al
   14000eaed:	add    BYTE PTR [rax],al
   14000eaef:	add    dh,ch
   14000eaf1:	mov    al,0x0
   14000eaf3:	rex add DWORD PTR [rax],eax
   14000eaf6:	add    BYTE PTR [rax],al
   14000eaf8:	fdiv   QWORD PTR [rax+0x14000]
   14000eafe:	add    BYTE PTR [rax],al
   14000eb00:	loop   0x14000eab2
   14000eb02:	add    BYTE PTR [rax+0x1],al
   14000eb05:	add    BYTE PTR [rax],al
   14000eb07:	add    al,ch
   14000eb09:	mov    al,0x0
   14000eb0b:	rex add DWORD PTR [rax],eax
   14000eb0e:	add    BYTE PTR [rax],al
   14000eb10:	movabs ds:0xf6000000014000a8,al
   14000eb19:	scas   al,BYTE PTR es:[rdi]
   14000eb1a:	add    BYTE PTR [rax+0x1],al
   14000eb1d:	add    BYTE PTR [rax],al
   14000eb1f:	add    ah,bh
   14000eb21:	scas   al,BYTE PTR es:[rdi]
   14000eb22:	add    BYTE PTR [rax+0x1],al
   14000eb25:	add    BYTE PTR [rax],al
   14000eb27:	add    BYTE PTR [rsi+0x14000a9],dh
   14000eb2d:	add    BYTE PTR [rax],al
   14000eb2f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000eb35:	add    BYTE PTR [rax],al
   14000eb37:	add    BYTE PTR [rsi],dh
   14000eb39:	stos   DWORD PTR es:[rdi],eax
   14000eb3a:	add    BYTE PTR [rax+0x1],al
   14000eb3d:	add    BYTE PTR [rax],al
   14000eb3f:	add    BYTE PTR [rbx+rbp*4],bh
   14000eb42:	add    BYTE PTR [rax+0x1],al
   14000eb45:	add    BYTE PTR [rax],al
   14000eb47:	add    ah,cl
   14000eb49:	test   al,0x0
   14000eb4b:	rex add DWORD PTR [rax],eax
   14000eb4e:	add    BYTE PTR [rax],al
   14000eb50:	add    ch,BYTE PTR [rdi+0x14000]
   14000eb56:	add    BYTE PTR [rax],al
   14000eb58:	fsubr  DWORD PTR [rax+0x14000]
   14000eb5e:	add    BYTE PTR [rax],al
   14000eb60:	or     BYTE PTR [rdi+0x14000],ch
   14000eb66:	add    BYTE PTR [rax],al
   14000eb68:	rex.WRX stos QWORD PTR es:[rdi],rax
   14000eb6a:	add    BYTE PTR [rax+0x1],al
   14000eb6d:	add    BYTE PTR [rax],al
   14000eb6f:	add    BYTE PTR [rsi],cl
   14000eb71:	scas   eax,DWORD PTR es:[rdi]
   14000eb72:	add    BYTE PTR [rax+0x1],al
   14000eb75:	add    BYTE PTR [rax],al
   14000eb77:	add    BYTE PTR [rdi+rbp*4],dl
   14000eb7a:	add    BYTE PTR [rax+0x1],al
   14000eb7d:	add    BYTE PTR [rax],al
   14000eb7f:	add    dh,dh
   14000eb81:	test   al,0x0
   14000eb83:	rex add DWORD PTR [rax],eax
   14000eb86:	add    BYTE PTR [rax],al
   14000eb88:	cld    
   14000eb89:	test   al,0x0
   14000eb8b:	rex add DWORD PTR [rax],eax
   14000eb8e:	add    BYTE PTR [rax],al
   14000eb90:	sbb    ch,BYTE PTR [rdi+0x14000]
   14000eb96:	add    BYTE PTR [rax],al
   14000eb98:	or     BYTE PTR [rcx+0x14000],ch
   14000eb9e:	add    BYTE PTR [rax],al
   14000eba0:	(bad)  
   14000eba1:	test   eax,0x14000
   14000eba6:	add    BYTE PTR [rax],al
   14000eba8:	adc    al,0xa9
   14000ebaa:	add    BYTE PTR [rax+0x1],al
   14000ebad:	add    BYTE PTR [rax],al
   14000ebaf:	add    dh,ah
   14000ebb1:	test   eax,0x14000
   14000ebb6:	add    BYTE PTR [rax],al
   14000ebb8:	and    BYTE PTR [rcx+0x14000],ch
   14000ebbe:	add    BYTE PTR [rax],al
   14000ebc0:	es test eax,0x14000
   14000ebc6:	add    BYTE PTR [rax],al
   14000ebc8:	sub    al,0xa9
   14000ebca:	add    BYTE PTR [rax+0x1],al
   14000ebcd:	add    BYTE PTR [rax],al
   14000ebcf:	add    BYTE PTR [rdx],dh
   14000ebd1:	test   eax,0x14000
   14000ebd6:	add    BYTE PTR [rax],al
   14000ebd8:	cmp    BYTE PTR [rcx+0x14000],ch
   14000ebde:	add    BYTE PTR [rax],al
   14000ebe0:	ds test eax,0x14000
   14000ebe6:	add    BYTE PTR [rax],al
   14000ebe8:	rex.R test eax,0x14000
   14000ebee:	add    BYTE PTR [rax],al
   14000ebf0:	rex.WX test rax,0x14000
   14000ebf6:	add    BYTE PTR [rax],al
   14000ebf8:	push   rax
   14000ebf9:	test   eax,0x14000
   14000ebfe:	add    BYTE PTR [rax],al
   14000ec00:	stos   WORD PTR es:[rdi],ax
   14000ec02:	add    BYTE PTR [rax+0x1],al
   14000ec05:	add    BYTE PTR [rax],al
   14000ec07:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000ec0b:	rex add DWORD PTR [rax],eax
   14000ec0e:	add    BYTE PTR [rax],al
   14000ec10:	(bad)  
   14000ec11:	test   eax,0x14000
   14000ec16:	add    BYTE PTR [rax],al
   14000ec18:	repnz test eax,0x14000
   14000ec1e:	add    BYTE PTR [rax],al
   14000ec20:	and    BYTE PTR [rdi+0x14000],ch
   14000ec26:	add    BYTE PTR [rax],al
   14000ec28:	es scas eax,DWORD PTR es:[rdi]
   14000ec2a:	add    BYTE PTR [rax+0x1],al
   14000ec2d:	add    BYTE PTR [rax],al
   14000ec2f:	add    BYTE PTR [rdi+rbp*4],ch
   14000ec32:	add    BYTE PTR [rax+0x1],al
   14000ec35:	add    BYTE PTR [rax],al
   14000ec37:	add    BYTE PTR [rdi+0x72],ah
   14000ec3a:	outs   dx,DWORD PTR ds:[rsi]
   14000ec3b:	jne    0x14000ecad
   14000ec3d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000ec3f:	js     0x14000ec41
	...
   14000ec4d:	add    BYTE PTR [rax],al
   14000ec4f:	add    BYTE PTR [rax+0x1400128],bh
   14000ec55:	add    BYTE PTR [rax],al
   14000ec57:	add    al,al
   14000ec59:	(bad)  
   14000ec5a:	add    BYTE PTR [rax+0x1],al
   14000ec5d:	add    BYTE PTR [rax],al
   14000ec5f:	add    BYTE PTR [rsi-0x57],ch
   14000ec62:	add    BYTE PTR [rax+0x1],al
   14000ec65:	add    BYTE PTR [rax],al
   14000ec67:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000ec6b:	rex add DWORD PTR [rax],eax
   14000ec6e:	add    BYTE PTR [rax],al
   14000ec70:	jp     0x14000ec1b
   14000ec72:	add    BYTE PTR [rax+0x1],al
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax+0x14000a9],al
   14000ec7d:	add    BYTE PTR [rax],al
   14000ec7f:	add    BYTE PTR [rsi+0x14000a9],al
   14000ec85:	add    BYTE PTR [rax],al
   14000ec87:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000ec8e:	add    BYTE PTR [rax],al
   14000ec90:	sub    BYTE PTR [rax],ch
   14000ec92:	add    DWORD PTR [rax+0x1],eax
   14000ec95:	add    BYTE PTR [rax],al
   14000ec97:	add    BYTE PTR [rax+0x14000ae],dl
   14000ec9d:	add    BYTE PTR [rax],al
   14000ec9f:	add    BYTE PTR [rsi+0x14000ae],dl
   14000eca5:	add    BYTE PTR [rax],al
   14000eca7:	add    BYTE PTR [rsi+rbp*4+0x14000],bl
   14000ecae:	add    BYTE PTR [rax],al
   14000ecb0:	rex (bad) 
   14000ecb2:	add    BYTE PTR [rax+0x1],al
   14000ecb5:	add    BYTE PTR [rax],al
   14000ecb7:	add    BYTE PTR [rdx+0x14000ae],ah
   14000ecbd:	add    BYTE PTR [rax],al
   14000ecbf:	add    al,dl
   14000ecc1:	mov    al,0x0
   14000ecc3:	rex add DWORD PTR [rax],eax
   14000ecc6:	add    BYTE PTR [rax],al
   14000ecc8:	(bad)  
   14000ecc9:	mov    al,0x0
   14000eccb:	rex add DWORD PTR [rax],eax
   14000ecce:	add    BYTE PTR [rax],al
   14000ecd0:	test   al,0xae
   14000ecd2:	add    BYTE PTR [rax+0x1],al
   14000ecd5:	add    BYTE PTR [rax],al
   14000ecd7:	add    ah,bl
   14000ecd9:	mov    al,0x0
   14000ecdb:	rex add DWORD PTR [rax],eax
   14000ecde:	add    BYTE PTR [rax],al
   14000ece0:	loop   0x14000ec92
   14000ece2:	add    BYTE PTR [rax+0x1],al
   14000ece5:	add    BYTE PTR [rax],al
   14000ece7:	add    al,ch
   14000ece9:	mov    al,0x0
   14000eceb:	rex add DWORD PTR [rax],eax
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	movabs ds:0xaa000000014000a8,al
   14000ecf9:	test   eax,0x14000
   14000ecfe:	add    BYTE PTR [rax],al
   14000ed00:	scas   al,BYTE PTR es:[rdi]
   14000ed01:	scas   al,BYTE PTR es:[rdi]
   14000ed02:	add    BYTE PTR [rax+0x1],al
   14000ed05:	add    BYTE PTR [rax],al
   14000ed07:	add    BYTE PTR [rsi+0x14000a9],dh
   14000ed0d:	add    BYTE PTR [rax],al
   14000ed0f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000ed15:	add    BYTE PTR [rax],al
   14000ed17:	add    BYTE PTR [rsi+rbp*4+0x14000],dh
   14000ed1e:	add    BYTE PTR [rax],al
   14000ed20:	mov    edx,0x14000ae
   14000ed25:	add    BYTE PTR [rax],al
   14000ed27:	add    ah,cl
   14000ed29:	test   al,0x0
   14000ed2b:	rex add DWORD PTR [rax],eax
   14000ed2e:	add    BYTE PTR [rax],al
   14000ed30:	shr    BYTE PTR [rsi+0x14000],0x0
   14000ed37:	add    al,bl
   14000ed39:	test   al,0x0
   14000ed3b:	rex add DWORD PTR [rax],eax
   14000ed3e:	add    BYTE PTR [rax],al
   14000ed40:	(bad)  
   14000ed41:	test   eax,0x14000
   14000ed46:	add    BYTE PTR [rax],al
   14000ed48:	in     al,0xa8
   14000ed4a:	add    BYTE PTR [rax+0x1],al
   14000ed4d:	add    BYTE PTR [rax],al
   14000ed4f:	add    dh,al
   14000ed51:	scas   al,BYTE PTR es:[rdi]
   14000ed52:	add    BYTE PTR [rax+0x1],al
   14000ed55:	add    BYTE PTR [rax],al
   14000ed57:	add    dl,bl
   14000ed59:	test   eax,0x14000
   14000ed5e:	add    BYTE PTR [rax],al
   14000ed60:	imul   BYTE PTR [rax+0x14000]
   14000ed66:	add    BYTE PTR [rax],al
   14000ed68:	cld    
   14000ed69:	test   al,0x0
   14000ed6b:	rex add DWORD PTR [rax],eax
   14000ed6e:	add    BYTE PTR [rax],al
   14000ed70:	int3   
   14000ed71:	scas   al,BYTE PTR es:[rdi]
   14000ed72:	add    BYTE PTR [rax+0x1],al
   14000ed75:	add    BYTE PTR [rax],al
   14000ed77:	add    BYTE PTR [rax],cl
   14000ed79:	test   eax,0x14000
   14000ed7e:	add    BYTE PTR [rax],al
   14000ed80:	shr    BYTE PTR [rsi+0x14000],cl
   14000ed86:	add    BYTE PTR [rax],al
   14000ed88:	adc    al,0xa9
   14000ed8a:	add    BYTE PTR [rax+0x1],al
   14000ed8d:	add    BYTE PTR [rax],al
   14000ed8f:	add    dh,ah
   14000ed91:	test   eax,0x14000
   14000ed96:	add    BYTE PTR [rax],al
   14000ed98:	and    BYTE PTR [rcx+0x14000],ch
   14000ed9e:	add    BYTE PTR [rax],al
   14000eda0:	es test eax,0x14000
   14000eda6:	add    BYTE PTR [rax],al
   14000eda8:	sub    al,0xa9
   14000edaa:	add    BYTE PTR [rax+0x1],al
   14000edad:	add    BYTE PTR [rax],al
   14000edaf:	add    BYTE PTR [rdx],dh
   14000edb1:	test   eax,0x14000
   14000edb6:	add    BYTE PTR [rax],al
   14000edb8:	cmp    BYTE PTR [rcx+0x14000],ch
   14000edbe:	add    BYTE PTR [rax],al
   14000edc0:	ds test eax,0x14000
   14000edc6:	add    BYTE PTR [rax],al
   14000edc8:	rex.R test eax,0x14000
   14000edce:	add    BYTE PTR [rax],al
   14000edd0:	rex.WX test rax,0x14000
   14000edd6:	add    BYTE PTR [rax],al
   14000edd8:	push   rax
   14000edd9:	test   eax,0x14000
   14000edde:	add    BYTE PTR [rax],al
   14000ede0:	fsubr  DWORD PTR [rsi+0x14000]
   14000ede6:	add    BYTE PTR [rax],al
   14000ede8:	pop    rsp
   14000ede9:	test   eax,0x14000
   14000edee:	add    BYTE PTR [rax],al
   14000edf0:	(bad)  
   14000edf1:	test   eax,0x14000
   14000edf6:	add    BYTE PTR [rax],al
   14000edf8:	repnz test eax,0x14000
   14000edfe:	add    BYTE PTR [rax],al
   14000ee00:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ee03:	(bad)  
   14000ee04:	outs   dx,DWORD PTR ds:[rsi]
   14000ee05:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000ee07:	js     0x14000ee09
	...
   14000ee11:	sub    BYTE PTR [rcx],al
   14000ee13:	rex add DWORD PTR [rax],eax
   14000ee16:	add    BYTE PTR [rax],al
   14000ee18:	mov    al,0x82
   14000ee1a:	add    BYTE PTR [rax+0x1],al
   14000ee1d:	add    BYTE PTR [rax],al
   14000ee1f:	add    BYTE PTR [rsi-0x57],ch
   14000ee22:	add    BYTE PTR [rax+0x1],al
   14000ee25:	add    BYTE PTR [rax],al
   14000ee27:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000ee2b:	rex add DWORD PTR [rax],eax
   14000ee2e:	add    BYTE PTR [rax],al
   14000ee30:	jp     0x14000eddb
   14000ee32:	add    BYTE PTR [rax+0x1],al
   14000ee35:	add    BYTE PTR [rax],al
   14000ee37:	add    BYTE PTR [rax+0x14000a9],al
   14000ee3d:	add    BYTE PTR [rax],al
   14000ee3f:	add    BYTE PTR [rsi+0x14000a9],al
   14000ee45:	add    BYTE PTR [rax],al
   14000ee47:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000ee4e:	add    BYTE PTR [rax],al
   14000ee50:	jo     0x14000ee79
   14000ee52:	add    DWORD PTR [rax+0x1],eax
   14000ee55:	add    BYTE PTR [rax],al
   14000ee57:	add    BYTE PTR [rsi],al
   14000ee59:	scas   al,BYTE PTR es:[rdi]
   14000ee5a:	add    BYTE PTR [rax+0x1],al
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rsi+rbp*4],cl
   14000ee62:	add    BYTE PTR [rax+0x1],al
   14000ee65:	add    BYTE PTR [rax],al
   14000ee67:	add    BYTE PTR [rdx],dl
   14000ee69:	scas   al,BYTE PTR es:[rdi]
   14000ee6a:	add    BYTE PTR [rax+0x1],al
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rax],dl
   14000ee71:	(bad)  
   14000ee72:	add    BYTE PTR [rax+0x1],al
   14000ee75:	add    BYTE PTR [rax],al
   14000ee77:	add    BYTE PTR [rax],bl
   14000ee79:	scas   al,BYTE PTR es:[rdi]
   14000ee7a:	add    BYTE PTR [rax+0x1],al
   14000ee7d:	add    BYTE PTR [rax],al
   14000ee7f:	add    al,dl
   14000ee81:	mov    al,0x0
   14000ee83:	rex add DWORD PTR [rax],eax
   14000ee86:	add    BYTE PTR [rax],al
   14000ee88:	(bad)  
   14000ee89:	mov    al,0x0
   14000ee8b:	rex add DWORD PTR [rax],eax
   14000ee8e:	add    BYTE PTR [rax],al
   14000ee90:	out    dx,al
   14000ee91:	mov    al,0x0
   14000ee93:	rex add DWORD PTR [rax],eax
   14000ee96:	add    BYTE PTR [rax],al
   14000ee98:	fdiv   QWORD PTR [rax+0x14000]
   14000ee9e:	add    BYTE PTR [rax],al
   14000eea0:	loop   0x14000ee52
   14000eea2:	add    BYTE PTR [rax+0x1],al
   14000eea5:	add    BYTE PTR [rax],al
   14000eea7:	add    al,ch
   14000eea9:	mov    al,0x0
   14000eeab:	rex add DWORD PTR [rax],eax
   14000eeae:	add    BYTE PTR [rax],al
   14000eeb0:	movabs ds:0x1e000000014000a8,al
   14000eeb9:	scas   al,BYTE PTR es:[rdi]
   14000eeba:	add    BYTE PTR [rax+0x1],al
   14000eebd:	add    BYTE PTR [rax],al
   14000eebf:	add    BYTE PTR [rsi+rbp*4],ah
   14000eec2:	add    BYTE PTR [rax+0x1],al
   14000eec5:	add    BYTE PTR [rax],al
   14000eec7:	add    BYTE PTR [rsi+0x14000a9],dh
   14000eecd:	add    BYTE PTR [rax],al
   14000eecf:	add    BYTE PTR [rdx+0x14000a8],bh
   14000eed5:	add    BYTE PTR [rax],al
   14000eed7:	add    BYTE PTR [rdx],ch
   14000eed9:	scas   al,BYTE PTR es:[rdi]
   14000eeda:	add    BYTE PTR [rax+0x1],al
   14000eedd:	add    BYTE PTR [rax],al
   14000eedf:	add    BYTE PTR [rax],dh
   14000eee1:	scas   al,BYTE PTR es:[rdi]
   14000eee2:	add    BYTE PTR [rax+0x1],al
   14000eee5:	add    BYTE PTR [rax],al
   14000eee7:	add    ah,cl
   14000eee9:	test   al,0x0
   14000eeeb:	rex add DWORD PTR [rax],eax
   14000eeee:	add    BYTE PTR [rax],al
   14000eef0:	enter  0xa9,0x40
   14000eef4:	add    DWORD PTR [rax],eax
   14000eef6:	add    BYTE PTR [rax],al
   14000eef8:	ss scas al,BYTE PTR es:[rdi]
   14000eefa:	add    BYTE PTR [rax+0x1],al
   14000eefd:	add    BYTE PTR [rax],al
   14000eeff:	add    BYTE PTR [rsi+rbp*4],bh
   14000ef02:	add    BYTE PTR [rax+0x1],al
   14000ef05:	add    BYTE PTR [rax],al
   14000ef07:	add    BYTE PTR [rdx-0x52],al
   14000ef0a:	add    BYTE PTR [rax+0x1],al
   14000ef0d:	add    BYTE PTR [rax],al
   14000ef0f:	add    BYTE PTR [rax-0x52],cl
   14000ef12:	add    BYTE PTR [rax+0x1],al
   14000ef15:	add    BYTE PTR [rax],al
   14000ef17:	add    BYTE PTR [rsi-0x52],cl
   14000ef1a:	add    BYTE PTR [rax+0x1],al
   14000ef1d:	add    BYTE PTR [rax],al
   14000ef1f:	add    dh,dh
   14000ef21:	test   al,0x0
   14000ef23:	rex add DWORD PTR [rax],eax
   14000ef26:	add    BYTE PTR [rax],al
   14000ef28:	cld    
   14000ef29:	test   al,0x0
   14000ef2b:	rex add DWORD PTR [rax],eax
   14000ef2e:	add    BYTE PTR [rax],al
   14000ef30:	push   rsp
   14000ef31:	scas   al,BYTE PTR es:[rdi]
   14000ef32:	add    BYTE PTR [rax+0x1],al
   14000ef35:	add    BYTE PTR [rax],al
   14000ef37:	add    BYTE PTR [rax],cl
   14000ef39:	test   eax,0x14000
   14000ef3e:	add    BYTE PTR [rax],al
   14000ef40:	pop    rdx
   14000ef41:	scas   al,BYTE PTR es:[rdi]
   14000ef42:	add    BYTE PTR [rax+0x1],al
   14000ef45:	add    BYTE PTR [rax],al
   14000ef47:	add    BYTE PTR [rcx+rbp*4],dl
   14000ef4a:	add    BYTE PTR [rax+0x1],al
   14000ef4d:	add    BYTE PTR [rax],al
   14000ef4f:	add    BYTE PTR [rax-0x52],ah
   14000ef52:	add    BYTE PTR [rax+0x1],al
   14000ef55:	add    BYTE PTR [rax],al
   14000ef57:	add    BYTE PTR [rax],ah
   14000ef59:	test   eax,0x14000
   14000ef5e:	add    BYTE PTR [rax],al
   14000ef60:	es test eax,0x14000
   14000ef66:	add    BYTE PTR [rax],al
   14000ef68:	sub    al,0xa9
   14000ef6a:	add    BYTE PTR [rax+0x1],al
   14000ef6d:	add    BYTE PTR [rax],al
   14000ef6f:	add    BYTE PTR [rdx],dh
   14000ef71:	test   eax,0x14000
   14000ef76:	add    BYTE PTR [rax],al
   14000ef78:	cmp    BYTE PTR [rcx+0x14000],ch
   14000ef7e:	add    BYTE PTR [rax],al
   14000ef80:	ds test eax,0x14000
   14000ef86:	add    BYTE PTR [rax],al
   14000ef88:	data16 scas al,BYTE PTR es:[rdi]
   14000ef8a:	add    BYTE PTR [rax+0x1],al
   14000ef8d:	add    BYTE PTR [rax],al
   14000ef8f:	add    BYTE PTR [rsi+rbp*4+0x0],ch
   14000ef93:	rex add DWORD PTR [rax],eax
   14000ef96:	add    BYTE PTR [rax],al
   14000ef98:	push   rax
   14000ef99:	test   eax,0x14000
   14000ef9e:	add    BYTE PTR [rax],al
   14000efa0:	jb     0x14000ef50
   14000efa2:	add    BYTE PTR [rax+0x1],al
   14000efa5:	add    BYTE PTR [rax],al
   14000efa7:	add    BYTE PTR [rax-0x52],bh
   14000efaa:	add    BYTE PTR [rax+0x1],al
   14000efad:	add    BYTE PTR [rax],al
   14000efaf:	add    BYTE PTR [rsi-0x52],bh
   14000efb2:	add    BYTE PTR [rax+0x1],al
   14000efb5:	add    BYTE PTR [rax],al
   14000efb7:	add    dl,dh
   14000efb9:	test   eax,0x14000
   14000efbe:	add    BYTE PTR [rax],al
   14000efc0:	test   BYTE PTR [rsi+0x14000],ch
   14000efc6:	add    BYTE PTR [rax],al
   14000efc8:	mov    ch,BYTE PTR [rsi+0x14000]
   14000efce:	add    BYTE PTR [rax],al
   14000efd0:	ins    BYTE PTR es:[rdi],dx
   14000efd1:	(bad)  
   14000efd2:	(bad)  
   14000efd3:	gs ins BYTE PTR es:[rdi],dx
   14000efd5:	pop    rdi
   14000efd6:	xor    al,BYTE PTR [rax]
	...
   14000efe0:	jo     0x14000f04e
   14000efe2:	(bad)  
   14000efe3:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   14000efea:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x1274800
   14000eff3:	rex add DWORD PTR [rax],eax
   14000eff6:	add    BYTE PTR [rax],al
   14000eff8:	loopne 0x14000ef7c
   14000effa:	add    BYTE PTR [rax+0x1],al
   14000effd:	add    BYTE PTR [rax],al
   14000efff:	add    BYTE PTR [rsi-0x57],ch
   14000f002:	add    BYTE PTR [rax+0x1],al
   14000f005:	add    BYTE PTR [rax],al
   14000f007:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000f00b:	rex add DWORD PTR [rax],eax
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	jp     0x14000efbb
   14000f012:	add    BYTE PTR [rax+0x1],al
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rax+0x14000a9],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rsi+0x14000a9],al
   14000f025:	add    BYTE PTR [rax],al
   14000f027:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000f02e:	add    BYTE PTR [rax],al
   14000f030:	test   al,0x26
   14000f032:	add    DWORD PTR [rax+0x1],eax
   14000f035:	add    BYTE PTR [rax],al
   14000f037:	add    BYTE PTR [rbp*4+0x14000],dh
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	cmp    ch,BYTE PTR [rbp+0x14000]
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	rex lods eax,DWORD PTR ds:[rsi]
   14000f04a:	add    BYTE PTR [rax+0x1],al
   14000f04d:	add    BYTE PTR [rax],al
   14000f04f:	add    al,ah
   14000f051:	add    DWORD PTR [rax],0x140
   14000f057:	add    BYTE PTR [rsi-0x53],al
   14000f05a:	add    BYTE PTR [rax+0x1],al
   14000f05d:	add    BYTE PTR [rax],al
   14000f05f:	add    BYTE PTR [rbp+rbp*4+0x0],cl
   14000f063:	rex add DWORD PTR [rax],eax
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	push   rdx
   14000f069:	lods   eax,DWORD PTR ds:[rsi]
   14000f06a:	add    BYTE PTR [rax+0x1],al
   14000f06d:	add    BYTE PTR [rax],al
   14000f06f:	add    dh,ch
   14000f071:	mov    al,0x0
   14000f073:	rex add DWORD PTR [rax],eax
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	fdiv   QWORD PTR [rax+0x14000]
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	loop   0x14000f032
   14000f082:	add    BYTE PTR [rax+0x1],al
   14000f085:	add    BYTE PTR [rax],al
   14000f087:	add    al,ch
   14000f089:	mov    al,0x0
   14000f08b:	rex add DWORD PTR [rax],eax
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	movabs ds:0x58000000014000a8,al
   14000f099:	lods   eax,DWORD PTR ds:[rsi]
   14000f09a:	add    BYTE PTR [rax+0x1],al
   14000f09d:	add    BYTE PTR [rax],al
   14000f09f:	add    dh,dh
   14000f0a1:	stos   DWORD PTR es:[rdi],eax
   14000f0a2:	add    BYTE PTR [rax+0x1],al
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    BYTE PTR [rsi+0x14000a9],dh
   14000f0ad:	add    BYTE PTR [rax],al
   14000f0af:	add    BYTE PTR [rdx+0x14000a8],bh
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rsi-0x53],bl
   14000f0ba:	add    BYTE PTR [rax+0x1],al
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    BYTE PTR [rbp+rbp*4+0x0],ah
   14000f0c3:	rex add DWORD PTR [rax],eax
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	push   0xffffffffffffffad
   14000f0ca:	add    BYTE PTR [rax+0x1],al
   14000f0cd:	add    BYTE PTR [rax],al
   14000f0cf:	add    BYTE PTR [rax-0x53],dh
   14000f0d2:	add    BYTE PTR [rax+0x1],al
   14000f0d5:	add    BYTE PTR [rax],al
   14000f0d7:	add    BYTE PTR [rsi-0x53],dh
   14000f0da:	add    BYTE PTR [rax+0x1],al
   14000f0dd:	add    BYTE PTR [rax],al
   14000f0df:	add    BYTE PTR [rbp+rbp*4+0x0],bh
   14000f0e3:	rex add DWORD PTR [rax],eax
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	(bad)  
   14000f0e9:	lods   eax,DWORD PTR ds:[rsi]
   14000f0ea:	add    BYTE PTR [rax+0x1],al
   14000f0ed:	add    BYTE PTR [rax],al
   14000f0ef:	add    BYTE PTR [rax+0x14000ad],cl
   14000f0f5:	add    BYTE PTR [rax],al
   14000f0f7:	add    BYTE PTR [rsi+0x14000ad],cl
   14000f0fd:	add    BYTE PTR [rax],al
   14000f0ff:	add    dh,dh
   14000f101:	test   al,0x0
   14000f103:	rex add DWORD PTR [rax],eax
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	cld    
   14000f109:	test   al,0x0
   14000f10b:	rex add DWORD PTR [rax],eax
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	xchg   esp,eax
   14000f111:	lods   eax,DWORD PTR ds:[rsi]
   14000f112:	add    BYTE PTR [rax+0x1],al
   14000f115:	add    BYTE PTR [rax],al
   14000f117:	add    BYTE PTR [rax],cl
   14000f119:	test   eax,0x14000
   14000f11e:	add    BYTE PTR [rax],al
   14000f120:	(bad)  
   14000f121:	lods   eax,DWORD PTR ds:[rsi]
   14000f122:	add    BYTE PTR [rax+0x1],al
   14000f125:	add    BYTE PTR [rax],al
   14000f127:	add    BYTE PTR [rcx+rbp*4],dl
   14000f12a:	add    BYTE PTR [rax+0x1],al
   14000f12d:	add    BYTE PTR [rax],al
   14000f12f:	add    BYTE PTR [rax+0x14000ad],ah
   14000f135:	add    BYTE PTR [rax],al
   14000f137:	add    BYTE PTR [rax],ah
   14000f139:	test   eax,0x14000
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	es test eax,0x14000
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f149:	lods   eax,DWORD PTR ds:[rsi]
   14000f14a:	add    BYTE PTR [rax+0x1],al
   14000f14d:	add    BYTE PTR [rax],al
   14000f14f:	add    BYTE PTR [rbp+rbp*4+0x14000],ch
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	mov    dl,0xad
   14000f15a:	add    BYTE PTR [rax+0x1],al
   14000f15d:	add    BYTE PTR [rax],al
   14000f15f:	add    BYTE PTR [rax+0x14000ad],bh
   14000f165:	add    BYTE PTR [rax],al
   14000f167:	add    BYTE PTR [rsi+0x14000ad],bh
   14000f16d:	add    BYTE PTR [rax],al
   14000f16f:	add    BYTE PTR [rdx-0x57],cl
   14000f172:	add    BYTE PTR [rax+0x1],al
   14000f175:	add    BYTE PTR [rax],al
   14000f177:	add    BYTE PTR [rax-0x57],dl
   14000f17a:	add    BYTE PTR [rax+0x1],al
   14000f17d:	add    BYTE PTR [rax],al
   14000f17f:	add    ah,al
   14000f181:	lods   eax,DWORD PTR ds:[rsi]
   14000f182:	add    BYTE PTR [rax+0x1],al
   14000f185:	add    BYTE PTR [rax],al
   14000f187:	add    dl,cl
   14000f189:	lods   eax,DWORD PTR ds:[rsi]
   14000f18a:	add    BYTE PTR [rax+0x1],al
   14000f18d:	add    BYTE PTR [rax],al
   14000f18f:	add    al,dl
   14000f191:	lods   eax,DWORD PTR ds:[rsi]
   14000f192:	add    BYTE PTR [rax+0x1],al
   14000f195:	add    BYTE PTR [rax],al
   14000f197:	add    dh,dl
   14000f199:	lods   eax,DWORD PTR ds:[rsi]
   14000f19a:	add    BYTE PTR [rax+0x1],al
   14000f19d:	add    BYTE PTR [rax],al
   14000f19f:	add    BYTE PTR [rsi-0x54],dl
   14000f1a2:	add    BYTE PTR [rax+0x1],al
   14000f1a5:	add    BYTE PTR [rax],al
   14000f1a7:	add    BYTE PTR [rsp+rbp*4+0x0],bl
   14000f1ab:	rex add DWORD PTR [rax],eax
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	fsubr  QWORD PTR [rbp+0x14000]
   14000f1b6:	add    BYTE PTR [rax],al
   14000f1b8:	loop   0x14000f167
   14000f1ba:	add    BYTE PTR [rax+0x1],al
   14000f1bd:	add    BYTE PTR [rax],al
   14000f1bf:	add    al,ch
   14000f1c1:	lods   eax,DWORD PTR ds:[rsi]
   14000f1c2:	add    BYTE PTR [rax+0x1],al
   14000f1c5:	add    BYTE PTR [rax],al
   14000f1c7:	add    dh,ch
   14000f1c9:	lods   eax,DWORD PTR ds:[rsi]
   14000f1ca:	add    BYTE PTR [rax+0x1],al
   14000f1cd:	add    BYTE PTR [rax],al
   14000f1cf:	add    ah,dh
   14000f1d1:	lods   eax,DWORD PTR ds:[rsi]
   14000f1d2:	add    BYTE PTR [rax+0x1],al
   14000f1d5:	add    BYTE PTR [rax],al
   14000f1d7:	add    dl,bh
   14000f1d9:	lods   eax,DWORD PTR ds:[rsi]
   14000f1da:	add    BYTE PTR [rax+0x1],al
   14000f1dd:	add    BYTE PTR [rax],al
   14000f1df:	add    BYTE PTR [rax],al
   14000f1e1:	scas   al,BYTE PTR es:[rdi]
   14000f1e2:	add    BYTE PTR [rax+0x1],al
   14000f1e5:	add    BYTE PTR [rax],al
   14000f1e7:	add    BYTE PTR [rbx+0x70],dh
   14000f1ea:	imul   ebp,DWORD PTR [rsi+0x42],0x8000786f
   14000f1f1:	add    DWORD PTR es:[rax+0x1],eax
   14000f1f5:	add    BYTE PTR [rax],al
   14000f1f7:	add    BYTE PTR [rax+0x1400082],ah
   14000f1fd:	add    BYTE PTR [rax],al
   14000f1ff:	add    BYTE PTR [rsi-0x57],ch
   14000f202:	add    BYTE PTR [rax+0x1],al
   14000f205:	add    BYTE PTR [rax],al
   14000f207:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000f20b:	rex add DWORD PTR [rax],eax
   14000f20e:	add    BYTE PTR [rax],al
   14000f210:	jp     0x14000f1bb
   14000f212:	add    BYTE PTR [rax+0x1],al
   14000f215:	add    BYTE PTR [rax],al
   14000f217:	add    BYTE PTR [rax+0x14000a9],al
   14000f21d:	add    BYTE PTR [rax],al
   14000f21f:	add    BYTE PTR [rsi+0x14000a9],al
   14000f225:	add    BYTE PTR [rax],al
   14000f227:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000f22e:	add    BYTE PTR [rax],al
   14000f230:	call   0x14140f35a
   14000f235:	add    BYTE PTR [rax],al
   14000f237:	add    BYTE PTR [rbp*4+0x14000],al
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	or     ch,BYTE PTR [rbp+0x14000]
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	adc    BYTE PTR [rbp+0x14000],ch
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	mov    al,0x81
   14000f252:	add    BYTE PTR [rax+0x1],al
   14000f255:	add    BYTE PTR [rax],al
   14000f257:	add    BYTE PTR [rsi],dl
   14000f259:	lods   eax,DWORD PTR ds:[rsi]
   14000f25a:	add    BYTE PTR [rax+0x1],al
   14000f25d:	add    BYTE PTR [rax],al
   14000f25f:	add    al,dl
   14000f261:	mov    al,0x0
   14000f263:	rex add DWORD PTR [rax],eax
   14000f266:	add    BYTE PTR [rax],al
   14000f268:	jo     0x14000f214
   14000f26a:	add    BYTE PTR [rax+0x1],al
   14000f26d:	add    BYTE PTR [rax],al
   14000f26f:	add    dh,ch
   14000f271:	mov    al,0x0
   14000f273:	rex add DWORD PTR [rax],eax
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	fdiv   QWORD PTR [rax+0x14000]
   14000f27e:	add    BYTE PTR [rax],al
   14000f280:	loop   0x14000f232
   14000f282:	add    BYTE PTR [rax+0x1],al
   14000f285:	add    BYTE PTR [rax],al
   14000f287:	add    al,ch
   14000f289:	mov    al,0x0
   14000f28b:	rex add DWORD PTR [rax],eax
   14000f28e:	add    BYTE PTR [rax],al
   14000f290:	movabs ds:0x76000000014000a8,al
   14000f299:	stos   BYTE PTR es:[rdi],al
   14000f29a:	add    BYTE PTR [rax+0x1],al
   14000f29d:	add    BYTE PTR [rax],al
   14000f29f:	add    BYTE PTR [rdx+rbp*4+0x0],bh
   14000f2a3:	rex add DWORD PTR [rax],eax
   14000f2a6:	add    BYTE PTR [rax],al
   14000f2a8:	mov    dh,0xa9
   14000f2aa:	add    BYTE PTR [rax+0x1],al
   14000f2ad:	add    BYTE PTR [rax],al
   14000f2af:	add    BYTE PTR [rdx+0x14000a8],bh
   14000f2b5:	add    BYTE PTR [rax],al
   14000f2b7:	add    BYTE PTR [rdx+0x14000aa],al
   14000f2bd:	add    BYTE PTR [rax],al
   14000f2bf:	add    BYTE PTR [rax+0x14000aa],cl
   14000f2c5:	add    BYTE PTR [rax],al
   14000f2c7:	add    ah,cl
   14000f2c9:	test   al,0x0
   14000f2cb:	rex add DWORD PTR [rax],eax
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	mov    gs,WORD PTR [rdx+0x14000]
   14000f2d6:	add    BYTE PTR [rax],al
   14000f2d8:	xchg   esp,eax
   14000f2d9:	stos   BYTE PTR es:[rdi],al
   14000f2da:	add    BYTE PTR [rax+0x1],al
   14000f2dd:	add    BYTE PTR [rax],al
   14000f2df:	add    BYTE PTR [rdx+0x14000aa],bl
   14000f2e5:	add    BYTE PTR [rax],al
   14000f2e7:	add    BYTE PTR [rax+0x14000aa],ah
   14000f2ed:	add    BYTE PTR [rax],al
   14000f2ef:	add    BYTE PTR [rsi+0x14000aa],ah
   14000f2f5:	add    BYTE PTR [rax],al
   14000f2f7:	add    BYTE PTR [rdx+rbp*4+0x14000],ch
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	imul   BYTE PTR [rax+0x14000]
   14000f306:	add    BYTE PTR [rax],al
   14000f308:	cld    
   14000f309:	test   al,0x0
   14000f30b:	rex add DWORD PTR [rax],eax
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	mov    dl,0xaa
   14000f312:	add    BYTE PTR [rax+0x1],al
   14000f315:	add    BYTE PTR [rax],al
   14000f317:	add    BYTE PTR [rax],cl
   14000f319:	test   eax,0x14000
   14000f31e:	add    BYTE PTR [rax],al
   14000f320:	mov    eax,0x14000aa
   14000f325:	add    BYTE PTR [rax],al
   14000f327:	add    BYTE PTR [rsi+0x14000aa],bh
   14000f32d:	add    BYTE PTR [rax],al
   14000f32f:	add    ah,al
   14000f331:	stos   BYTE PTR es:[rdi],al
   14000f332:	add    BYTE PTR [rax+0x1],al
   14000f335:	add    BYTE PTR [rax],al
   14000f337:	add    BYTE PTR [rax],ah
   14000f339:	test   eax,0x14000
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	es test eax,0x14000
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	sub    al,0xa9
   14000f34a:	add    BYTE PTR [rax+0x1],al
   14000f34d:	add    BYTE PTR [rax],al
   14000f34f:	add    BYTE PTR [rdx],dh
   14000f351:	test   eax,0x14000
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	cmp    BYTE PTR [rcx+0x14000],ch
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	ds test eax,0x14000
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	retf   0xaa
   14000f36b:	rex add DWORD PTR [rax],eax
   14000f36e:	add    BYTE PTR [rax],al
   14000f370:	shr    BYTE PTR [rdx+0x14000],1
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	push   rax
   14000f379:	test   eax,0x14000
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	(bad)  
   14000f381:	stos   BYTE PTR es:[rdi],al
   14000f382:	add    BYTE PTR [rax+0x1],al
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000f38b:	rex add DWORD PTR [rax],eax
   14000f38e:	add    BYTE PTR [rax],al
   14000f390:	fsubr  QWORD PTR [rdx+0x14000]
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	repnz test eax,0x14000
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	sbb    al,0xad
   14000f3a2:	add    BYTE PTR [rax+0x1],al
   14000f3a5:	add    BYTE PTR [rax],al
   14000f3a7:	add    BYTE PTR [rdx],ah
   14000f3a9:	lods   eax,DWORD PTR ds:[rsi]
   14000f3aa:	add    BYTE PTR [rax+0x1],al
   14000f3ad:	add    BYTE PTR [rax],al
   14000f3af:	add    dh,ch
   14000f3b1:	stos   BYTE PTR es:[rdi],al
   14000f3b2:	add    BYTE PTR [rax+0x1],al
   14000f3b5:	add    BYTE PTR [rax],al
   14000f3b7:	add    ah,dh
   14000f3b9:	stos   BYTE PTR es:[rdi],al
   14000f3ba:	add    BYTE PTR [rax+0x1],al
   14000f3bd:	add    BYTE PTR [rax],al
   14000f3bf:	add    dl,bh
   14000f3c1:	stos   BYTE PTR es:[rdi],al
   14000f3c2:	add    BYTE PTR [rax+0x1],al
   14000f3c5:	add    BYTE PTR [rax],al
   14000f3c7:	add    BYTE PTR [rax],ch
   14000f3c9:	lods   eax,DWORD PTR ds:[rsi]
   14000f3ca:	add    BYTE PTR [rax+0x1],al
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rsi],ch
   14000f3d1:	lods   eax,DWORD PTR ds:[rsi]
   14000f3d2:	add    BYTE PTR [rax+0x1],al
   14000f3d5:	add    BYTE PTR [rax],al
   14000f3d7:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14000f3db:	gs ins BYTE PTR es:[rdi],dx
   14000f3dd:	pop    rdi
   14000f3de:	xor    eax,DWORD PTR [rax]
   14000f3e0:	jno    0x14000f454
   14000f3e2:	movsxd edi,DWORD PTR [rdx]
   14000f3e4:	(bad)  
   14000f3e5:	jo     0x14000f459
   14000f3e7:	gs jbe 0x14000f453
   14000f3ea:	gs ja  0x14000f41b
   14000f3ed:	jno    0x14000f45c
   14000f3ef:	ins    BYTE PTR es:[rdi],dx
   14000f3f0:	add    BYTE PTR [rax],al
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	gs imul esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x0
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	pop    rbx
   14000f401:	and    eax,0x32252c31
   14000f406:	sub    al,0x25
   14000f408:	xor    ebp,DWORD PTR ds:0x2c312c34
   14000f40f:	xor    DWORD PTR [rbp+0x0],ebx
	...
   14000f41e:	pop    rcx
   14000f41f:	xor    sil,BYTE PTR [rdx+0x65]
   14000f423:	push   0x65
   14000f425:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000f429:	sub    BYTE PTR [rcx],ch
   14000f42b:	add    BYTE PTR [rax],al
   14000f42d:	add    BYTE PTR [rax],al
   14000f42f:	add    BYTE PTR [rcx],dh
   14000f431:	jb     0x14000f498
   14000f433:	push   0x65
   14000f435:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
   14000f439:	add    BYTE PTR [rax],al
   14000f43b:	add    BYTE PTR [rax],al
   14000f43d:	add    BYTE PTR [rax],al
   14000f43f:	add    BYTE PTR [rdx],dh
   14000f441:	(bad)  
   14000f442:	movsxd esp,DWORD PTR [rbx+0x65]
   14000f445:	jo     0x14000f4bb
   14000f447:	gs sub BYTE PTR fs:[rcx],ch
   14000f44b:	add    BYTE PTR [rax],al
   14000f44d:	add    BYTE PTR [rax],al
   14000f44f:	add    BYTE PTR [rcx],dh
   14000f451:	(bad)  
   14000f452:	movsxd esp,DWORD PTR [rbx+0x65]
   14000f455:	jo     0x14000f4cb
   14000f457:	sub    BYTE PTR [rcx],ch
   14000f459:	add    BYTE PTR [rax],al
   14000f45b:	add    BYTE PTR [rax],al
   14000f45d:	add    BYTE PTR [rax],al
   14000f45f:	add    BYTE PTR [rdi+0x75],ch
   14000f462:	je     0x14000f4b7
   14000f464:	ins    BYTE PTR es:[rdi],dx
   14000f465:	outs   dx,DWORD PTR ds:[rsi]
   14000f466:	jo     0x14000f4cd
   14000f468:	rex.RB
   14000f469:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x756f0000
   14000f472:	je     0x14000f4bd
   14000f474:	outs   dx,BYTE PTR ds:[rsi]
   14000f475:	data16 ins BYTE PTR es:[rdi],dx
   14000f477:	jne    0x14000f4de
   14000f479:	outs   dx,BYTE PTR ds:[rsi]
   14000f47a:	movsxd esp,DWORD PTR [rbp+0x45]
   14000f47d:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x0
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	imul   ebp,DWORD PTR [rsi+0x53],0x65706f6c
   14000f48f:	rex.RB
   14000f490:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x69000000
   14000f499:	outs   dx,BYTE PTR ds:[rsi]
   14000f49a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000f49c:	data16 ins BYTE PTR es:[rdi],dx
   14000f49e:	jne    0x14000f505
   14000f4a0:	outs   dx,BYTE PTR ds:[rsi]
   14000f4a1:	movsxd esp,DWORD PTR [rbp+0x45]
   14000f4a4:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x0
   14000f4ad:	add    BYTE PTR [rax],al
   14000f4af:	add    BYTE PTR [rax+0x140012b],ah
   14000f4b5:	add    BYTE PTR [rax],al
   14000f4b7:	add    al,dh
   14000f4b9:	mov    es,WORD PTR [rax]
   14000f4bb:	rex add DWORD PTR [rax],eax
   14000f4be:	add    BYTE PTR [rax],al
   14000f4c0:	outs   dx,BYTE PTR ds:[rsi]
   14000f4c1:	test   eax,0x14000
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	je     0x14000f473
   14000f4ca:	add    BYTE PTR [rax+0x1],al
   14000f4cd:	add    BYTE PTR [rax],al
   14000f4cf:	add    BYTE PTR [rdx-0x57],bh
   14000f4d2:	add    BYTE PTR [rax+0x1],al
   14000f4d5:	add    BYTE PTR [rax],al
   14000f4d7:	add    BYTE PTR [rax+0x14000a9],al
   14000f4dd:	add    BYTE PTR [rax],al
   14000f4df:	add    BYTE PTR [rsi+0x14000a9],al
   14000f4e5:	add    BYTE PTR [rax],al
   14000f4e7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000f4ee:	add    BYTE PTR [rax],al
   14000f4f0:	adc    BYTE PTR [rbx],ch
   14000f4f2:	add    DWORD PTR [rax+0x1],eax
   14000f4f5:	add    BYTE PTR [rax],al
   14000f4f7:	add    BYTE PTR [rdx+0x14000af],ch
   14000f4fd:	add    BYTE PTR [rax],al
   14000f4ff:	add    BYTE PTR [rax+0x14000af],dh
   14000f505:	add    BYTE PTR [rax],al
   14000f507:	add    BYTE PTR [rsi+0x14000af],dh
   14000f50d:	add    BYTE PTR [rax],al
   14000f50f:	add    BYTE PTR [rax+0x140008e],dh
   14000f515:	add    BYTE PTR [rax],al
   14000f517:	add    BYTE PTR [rdi+rbp*4+0x14000],bh
   14000f51e:	add    BYTE PTR [rax],al
   14000f520:	shl    BYTE PTR [rax+0x14000],1
   14000f526:	add    BYTE PTR [rax],al
   14000f528:	(bad)  
   14000f529:	mov    al,0x0
   14000f52b:	rex add DWORD PTR [rax],eax
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	out    dx,al
   14000f531:	mov    al,0x0
   14000f533:	rex add DWORD PTR [rax],eax
   14000f536:	add    BYTE PTR [rax],al
   14000f538:	fdiv   QWORD PTR [rax+0x14000]
   14000f53e:	add    BYTE PTR [rax],al
   14000f540:	loop   0x14000f4f2
   14000f542:	add    BYTE PTR [rax+0x1],al
   14000f545:	add    BYTE PTR [rax],al
   14000f547:	add    al,ch
   14000f549:	mov    al,0x0
   14000f54b:	rex add DWORD PTR [rax],eax
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	movabs ds:0xc2000000014000a8,al
   14000f559:	scas   eax,DWORD PTR es:[rdi]
   14000f55a:	add    BYTE PTR [rax+0x1],al
   14000f55d:	add    BYTE PTR [rax],al
   14000f55f:	add    al,cl
   14000f561:	scas   eax,DWORD PTR es:[rdi]
   14000f562:	add    BYTE PTR [rax+0x1],al
   14000f565:	add    BYTE PTR [rax],al
   14000f567:	add    BYTE PTR [rsi+0x14000a9],dh
   14000f56d:	add    BYTE PTR [rax],al
   14000f56f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000f575:	add    BYTE PTR [rax],al
   14000f577:	add    dh,cl
   14000f579:	scas   eax,DWORD PTR es:[rdi]
   14000f57a:	add    BYTE PTR [rax+0x1],al
   14000f57d:	add    BYTE PTR [rax],al
   14000f57f:	add    ah,dl
   14000f581:	scas   eax,DWORD PTR es:[rdi]
   14000f582:	add    BYTE PTR [rax+0x1],al
   14000f585:	add    BYTE PTR [rax],al
   14000f587:	add    dl,bl
   14000f589:	scas   eax,DWORD PTR es:[rdi]
   14000f58a:	add    BYTE PTR [rax+0x1],al
   14000f58d:	add    BYTE PTR [rax],al
   14000f58f:	add    al,ah
   14000f591:	scas   eax,DWORD PTR es:[rdi]
   14000f592:	add    BYTE PTR [rax+0x1],al
   14000f595:	add    BYTE PTR [rax],al
   14000f597:	add    al,bl
   14000f599:	test   al,0x0
   14000f59b:	rex add DWORD PTR [rax],eax
   14000f59e:	add    BYTE PTR [rax],al
   14000f5a0:	out    0xaf,al
   14000f5a2:	add    BYTE PTR [rax+0x1],al
   14000f5a5:	add    BYTE PTR [rax],al
   14000f5a7:	add    ah,ah
   14000f5a9:	test   al,0x0
   14000f5ab:	rex add DWORD PTR [rax],eax
   14000f5ae:	add    BYTE PTR [rax],al
   14000f5b0:	in     al,dx
   14000f5b1:	scas   eax,DWORD PTR es:[rdi]
   14000f5b2:	add    BYTE PTR [rax+0x1],al
   14000f5b5:	add    BYTE PTR [rax],al
   14000f5b7:	add    dl,dh
   14000f5b9:	scas   eax,DWORD PTR es:[rdi]
   14000f5ba:	add    BYTE PTR [rax+0x1],al
   14000f5bd:	add    BYTE PTR [rax],al
   14000f5bf:	add    dh,dh
   14000f5c1:	test   al,0x0
   14000f5c3:	rex add DWORD PTR [rax],eax
   14000f5c6:	add    BYTE PTR [rax],al
   14000f5c8:	cld    
   14000f5c9:	test   al,0x0
   14000f5cb:	rex add DWORD PTR [rax],eax
   14000f5ce:	add    BYTE PTR [rax],al
   14000f5d0:	clc    
   14000f5d1:	scas   eax,DWORD PTR es:[rdi]
   14000f5d2:	add    BYTE PTR [rax+0x1],al
   14000f5d5:	add    BYTE PTR [rax],al
   14000f5d7:	add    BYTE PTR [rax],cl
   14000f5d9:	test   eax,0x14000
   14000f5de:	add    BYTE PTR [rax],al
   14000f5e0:	(bad)  
   14000f5e1:	test   eax,0x14000
   14000f5e6:	add    BYTE PTR [rax],al
   14000f5e8:	adc    al,0xa9
   14000f5ea:	add    BYTE PTR [rax+0x1],al
   14000f5ed:	add    BYTE PTR [rax],al
   14000f5ef:	add    dh,bh
   14000f5f1:	scas   eax,DWORD PTR es:[rdi]
   14000f5f2:	add    BYTE PTR [rax+0x1],al
   14000f5f5:	add    BYTE PTR [rax],al
   14000f5f7:	add    BYTE PTR [rax],ah
   14000f5f9:	test   eax,0x14000
   14000f5fe:	add    BYTE PTR [rax],al
   14000f600:	es test eax,0x14000
   14000f606:	add    BYTE PTR [rax],al
   14000f608:	add    al,0xb0
   14000f60a:	add    BYTE PTR [rax+0x1],al
   14000f60d:	add    BYTE PTR [rax],al
   14000f60f:	add    BYTE PTR [rdx],cl
   14000f611:	mov    al,0x0
   14000f613:	rex add DWORD PTR [rax],eax
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	adc    BYTE PTR [rax+0x14000],dh
   14000f61e:	add    BYTE PTR [rax],al
   14000f620:	(bad)  
   14000f621:	mov    al,0x0
   14000f623:	rex add DWORD PTR [rax],eax
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	rex.R test eax,0x14000
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	rex.WX test rax,0x14000
   14000f636:	add    BYTE PTR [rax],al
   14000f638:	push   rax
   14000f639:	test   eax,0x14000
   14000f63e:	add    BYTE PTR [rax],al
   14000f640:	sbb    al,0xb0
   14000f642:	add    BYTE PTR [rax+0x1],al
   14000f645:	add    BYTE PTR [rax],al
   14000f647:	add    BYTE PTR [rdx],ah
   14000f649:	mov    al,0x0
   14000f64b:	rex add DWORD PTR [rax],eax
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	sub    BYTE PTR [rax+0x14000],dh
   14000f656:	add    BYTE PTR [rax],al
   14000f658:	repnz test eax,0x14000
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	ins    BYTE PTR es:[rdi],dx
   14000f661:	(bad)  
   14000f662:	(bad)  
   14000f663:	gs ins BYTE PTR es:[rdi],dx
   14000f665:	pop    rdi
   14000f666:	xor    al,0x0
   14000f668:	outs   dx,WORD PTR ds:[rsi]
   14000f66a:	jb     0x14000f6d9
   14000f66c:	rex.WR (bad) 
   14000f66e:	jns    0x14000f6df
   14000f670:	jne    0x14000f6e6
	...
   14000f67e:	add    BYTE PTR [rax],al
   14000f680:	call   0x14140f7af
   14000f685:	add    BYTE PTR [rax],al
   14000f687:	add    BYTE PTR [rax],al
   14000f689:	pop    QWORD PTR [rax]
   14000f68b:	rex add DWORD PTR [rax],eax
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	jp     0x14000f641
   14000f692:	add    BYTE PTR [rax+0x1],al
   14000f695:	add    BYTE PTR [rax],al
   14000f697:	add    BYTE PTR [rax+0x14000af],al
   14000f69d:	add    BYTE PTR [rax],al
   14000f69f:	add    BYTE PTR [rsi+0x14000af],al
   14000f6a5:	add    BYTE PTR [rax],al
   14000f6a7:	add    BYTE PTR [rdi+rbp*4+0x14000],cl
   14000f6ae:	add    BYTE PTR [rax],al
   14000f6b0:	xchg   edx,eax
   14000f6b1:	scas   eax,DWORD PTR es:[rdi]
   14000f6b2:	add    BYTE PTR [rax+0x1],al
   14000f6b5:	add    BYTE PTR [rax],al
   14000f6b7:	add    BYTE PTR [rsi-0x58],cl
   14000f6ba:	add    BYTE PTR [rax+0x1],al
   14000f6bd:	add    BYTE PTR [rax],al
   14000f6bf:	add    BYTE PTR [rax+rbp*4+0x0],dl
   14000f6c3:	rex add DWORD PTR [rax],eax
   14000f6c6:	add    BYTE PTR [rax],al
   14000f6c8:	cwde   
   14000f6c9:	scas   eax,DWORD PTR es:[rdi]
   14000f6ca:	add    BYTE PTR [rax+0x1],al
   14000f6cd:	add    BYTE PTR [rax],al
   14000f6cf:	add    BYTE PTR [rsi+0x14000af],bl
   14000f6d5:	add    BYTE PTR [rax],al
   14000f6d7:	add    BYTE PTR [rbx+rbp*4+0x14000],dh
   14000f6de:	add    BYTE PTR [rax],al
   14000f6e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6e1:	scas   eax,DWORD PTR es:[rdi]
   14000f6e2:	add    BYTE PTR [rax+0x1],al
   14000f6e5:	add    BYTE PTR [rax],al
   14000f6e7:	add    BYTE PTR [rdx-0x58],dh
   14000f6ea:	add    BYTE PTR [rax+0x1],al
   14000f6ed:	add    BYTE PTR [rax],al
   14000f6ef:	add    BYTE PTR [rax-0x58],bh
   14000f6f2:	add    BYTE PTR [rax+0x1],al
   14000f6f5:	add    BYTE PTR [rax],al
   14000f6f7:	add    BYTE PTR [rsi-0x58],bh
   14000f6fa:	add    BYTE PTR [rax+0x1],al
   14000f6fd:	add    BYTE PTR [rax],al
   14000f6ff:	add    BYTE PTR [rax+rbp*4+0x14000],al
	...
   14000f70e:	add    BYTE PTR [rax],al
   14000f710:	pop    rax
   14000f711:	sub    al,BYTE PTR [rcx]
   14000f713:	rex add DWORD PTR [rax],eax
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	push   rax
   14000f719:	scas   eax,DWORD PTR es:[rdi]
   14000f71a:	add    BYTE PTR [rax+0x1],al
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    BYTE PTR [rsi-0x51],dl
   14000f722:	add    BYTE PTR [rax+0x1],al
   14000f725:	add    BYTE PTR [rax],al
   14000f727:	add    BYTE PTR [rdi+rbp*4+0x0],bl
   14000f72b:	rex add DWORD PTR [rax],eax
   14000f72e:	add    BYTE PTR [rax],al
   14000f730:	or     BYTE PTR [rsi+0x14000],0x0
   14000f737:	add    dl,cl
   14000f739:	mov    al,0x0
   14000f73b:	rex add DWORD PTR [rax],eax
   14000f73e:	add    BYTE PTR [rax],al
   14000f740:	shl    BYTE PTR [rax+0x14000],1
   14000f746:	add    BYTE PTR [rax],al
   14000f748:	(bad)  
   14000f749:	mov    al,0x0
   14000f74b:	rex add DWORD PTR [rax],eax
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	or     al,0xa8
   14000f752:	add    BYTE PTR [rax+0x1],al
   14000f755:	add    BYTE PTR [rax],al
   14000f757:	add    ah,bl
   14000f759:	mov    al,0x0
   14000f75b:	rex add DWORD PTR [rax],eax
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	loop   0x14000f712
   14000f762:	add    BYTE PTR [rax+0x1],al
   14000f765:	add    BYTE PTR [rax],al
   14000f767:	add    al,ch
   14000f769:	mov    al,0x0
   14000f76b:	rex add DWORD PTR [rax],eax
   14000f76e:	add    BYTE PTR [rax],al
   14000f770:	(bad)  
   14000f771:	scas   eax,DWORD PTR es:[rdi]
   14000f772:	add    BYTE PTR [rax+0x1],al
   14000f775:	add    BYTE PTR [rax],al
   14000f777:	add    BYTE PTR [rax-0x51],ch
   14000f77a:	add    BYTE PTR [rax+0x1],al
   14000f77d:	add    BYTE PTR [rax],al
   14000f77f:	add    BYTE PTR [rsi-0x51],ch
   14000f782:	add    BYTE PTR [rax+0x1],al
   14000f785:	add    BYTE PTR [rax],al
   14000f787:	add    BYTE PTR [rax+rbp*4],ah
   14000f78a:	add    BYTE PTR [rax+0x1],al
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    BYTE PTR [rdi+rbp*4+0x0],dh
   14000f793:	rex add DWORD PTR [rax],eax
   14000f796:	add    BYTE PTR [rax],al
   14000f798:	outs   dx,WORD PTR ds:[rsi]
   14000f79a:	jb     0x14000f809
   14000f79c:	rex.WR (bad) 
   14000f79e:	jns    0x14000f80f
   14000f7a0:	jne    0x14000f816
   14000f7a2:	push   rdi
   14000f7a3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x74
   14000f7ab:	add    BYTE PTR [rax],al
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	add    BYTE PTR [rdx+0x75],ah
   14000f7b2:	je     0x14000f828
   14000f7b4:	outs   dx,DWORD PTR ds:[rsi]
   14000f7b5:	outs   dx,BYTE PTR ds:[rsi]
   14000f7b6:	rex.X outs dx,DWORD PTR ds:[rsi]
   14000f7b8:	js     0x14000f7ba
   14000f7ba:	add    BYTE PTR [rax],al
   14000f7bc:	add    BYTE PTR [rax],al
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	xor    BYTE PTR [rdx],ch
   14000f7c2:	add    DWORD PTR [rax+0x1],eax
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    al,ah
   14000f7c9:	mov    es,WORD PTR [rax]
   14000f7cb:	rex add DWORD PTR [rax],eax
   14000f7ce:	add    BYTE PTR [rax],al
   14000f7d0:	outs   dx,BYTE PTR ds:[rsi]
   14000f7d1:	test   eax,0x14000
   14000f7d6:	add    BYTE PTR [rax],al
   14000f7d8:	je     0x14000f783
   14000f7da:	add    BYTE PTR [rax+0x1],al
   14000f7dd:	add    BYTE PTR [rax],al
   14000f7df:	add    BYTE PTR [rdx-0x57],bh
   14000f7e2:	add    BYTE PTR [rax+0x1],al
   14000f7e5:	add    BYTE PTR [rax],al
   14000f7e7:	add    BYTE PTR [rax+0x14000a9],al
   14000f7ed:	add    BYTE PTR [rax],al
   14000f7ef:	add    BYTE PTR [rsi+0x14000a9],al
   14000f7f5:	add    BYTE PTR [rax],al
   14000f7f7:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000f7fe:	add    BYTE PTR [rax],al
   14000f800:	movabs al,ds:0x3200000001400129
   14000f809:	scas   eax,DWORD PTR es:[rdi]
   14000f80a:	add    BYTE PTR [rax+0x1],al
   14000f80d:	add    BYTE PTR [rax],al
   14000f80f:	add    BYTE PTR [rax],bh
   14000f811:	scas   eax,DWORD PTR es:[rdi]
   14000f812:	add    BYTE PTR [rax+0x1],al
   14000f815:	add    BYTE PTR [rax],al
   14000f817:	add    BYTE PTR [rsi],bh
   14000f819:	scas   eax,DWORD PTR es:[rdi]
   14000f81a:	add    BYTE PTR [rax+0x1],al
   14000f81d:	add    BYTE PTR [rax],al
   14000f81f:	add    BYTE PTR [rax-0x72],dl
   14000f822:	add    BYTE PTR [rax+0x1],al
   14000f825:	add    BYTE PTR [rax],al
   14000f827:	add    BYTE PTR [rdi+rbp*4+0x0],al
   14000f82b:	rex add DWORD PTR [rax],eax
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	shl    BYTE PTR [rax+0x14000],1
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	(bad)  
   14000f839:	mov    al,0x0
   14000f83b:	rex add DWORD PTR [rax],eax
   14000f83e:	add    BYTE PTR [rax],al
   14000f840:	out    dx,al
   14000f841:	mov    al,0x0
   14000f843:	rex add DWORD PTR [rax],eax
   14000f846:	add    BYTE PTR [rax],al
   14000f848:	fdiv   QWORD PTR [rax+0x14000]
   14000f84e:	add    BYTE PTR [rax],al
   14000f850:	loop   0x14000f802
   14000f852:	add    BYTE PTR [rax+0x1],al
   14000f855:	add    BYTE PTR [rax],al
   14000f857:	add    al,ch
   14000f859:	mov    al,0x0
   14000f85b:	rex add DWORD PTR [rax],eax
   14000f85e:	add    BYTE PTR [rax],al
   14000f860:	movabs ds:0xaa000000014000a8,al
   14000f869:	test   eax,0x14000
   14000f86e:	add    BYTE PTR [rax],al
   14000f870:	mov    al,0xa9
   14000f872:	add    BYTE PTR [rax+0x1],al
   14000f875:	add    BYTE PTR [rax],al
   14000f877:	add    BYTE PTR [rsi+0x14000a9],dh
   14000f87d:	add    BYTE PTR [rax],al
   14000f87f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000f885:	add    BYTE PTR [rax],al
   14000f887:	add    BYTE PTR [rcx+rbp*4+0x14000],bh
   14000f88e:	add    BYTE PTR [rax],al
   14000f890:	ret    0xa9
   14000f893:	rex add DWORD PTR [rax],eax
   14000f896:	add    BYTE PTR [rax],al
   14000f898:	int3   
   14000f899:	test   al,0x0
   14000f89b:	rex add DWORD PTR [rax],eax
   14000f89e:	add    BYTE PTR [rax],al
   14000f8a0:	enter  0xa9,0x40
   14000f8a4:	add    DWORD PTR [rax],eax
   14000f8a6:	add    BYTE PTR [rax],al
   14000f8a8:	fsubr  DWORD PTR [rax+0x14000]
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	(bad)  
   14000f8b1:	test   eax,0x14000
   14000f8b6:	add    BYTE PTR [rax],al
   14000f8b8:	in     al,0xa8
   14000f8ba:	add    BYTE PTR [rax+0x1],al
   14000f8bd:	add    BYTE PTR [rax],al
   14000f8bf:	add    ah,dl
   14000f8c1:	test   eax,0x14000
   14000f8c6:	add    BYTE PTR [rax],al
   14000f8c8:	fisubr DWORD PTR [rcx+0x14000]
   14000f8ce:	add    BYTE PTR [rax],al
   14000f8d0:	imul   BYTE PTR [rax+0x14000]
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	cld    
   14000f8d9:	test   al,0x0
   14000f8db:	rex add DWORD PTR [rax],eax
   14000f8de:	add    BYTE PTR [rax],al
   14000f8e0:	loopne 0x14000f88b
   14000f8e2:	add    BYTE PTR [rax+0x1],al
   14000f8e5:	add    BYTE PTR [rax],al
   14000f8e7:	add    BYTE PTR [rax],cl
   14000f8e9:	test   eax,0x14000
   14000f8ee:	add    BYTE PTR [rax],al
   14000f8f0:	(bad)  
   14000f8f1:	test   eax,0x14000
   14000f8f6:	add    BYTE PTR [rax],al
   14000f8f8:	adc    al,0xa9
   14000f8fa:	add    BYTE PTR [rax+0x1],al
   14000f8fd:	add    BYTE PTR [rax],al
   14000f8ff:	add    dh,ah
   14000f901:	test   eax,0x14000
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	and    BYTE PTR [rcx+0x14000],ch
   14000f90e:	add    BYTE PTR [rax],al
   14000f910:	es test eax,0x14000
   14000f916:	add    BYTE PTR [rax],al
   14000f918:	sub    al,0xa9
   14000f91a:	add    BYTE PTR [rax+0x1],al
   14000f91d:	add    BYTE PTR [rax],al
   14000f91f:	add    BYTE PTR [rdx],dh
   14000f921:	test   eax,0x14000
   14000f926:	add    BYTE PTR [rax],al
   14000f928:	cmp    BYTE PTR [rcx+0x14000],ch
   14000f92e:	add    BYTE PTR [rax],al
   14000f930:	ds test eax,0x14000
   14000f936:	add    BYTE PTR [rax],al
   14000f938:	rex.R test eax,0x14000
   14000f93e:	add    BYTE PTR [rax],al
   14000f940:	rex.WX test rax,0x14000
   14000f946:	add    BYTE PTR [rax],al
   14000f948:	push   rax
   14000f949:	test   eax,0x14000
   14000f94e:	add    BYTE PTR [rax],al
   14000f950:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000f952:	add    BYTE PTR [rax+0x1],al
   14000f955:	add    BYTE PTR [rax],al
   14000f957:	add    BYTE PTR [rcx+rbp*4+0x0],bl
   14000f95b:	rex add DWORD PTR [rax],eax
   14000f95e:	add    BYTE PTR [rax],al
   14000f960:	(bad)  
   14000f961:	test   eax,0x14000
   14000f966:	add    BYTE PTR [rax],al
   14000f968:	repnz test eax,0x14000
   14000f96e:	add    BYTE PTR [rax],al
   14000f970:	xor    ah,BYTE PTR [rbx+0x6c]
   14000f973:	outs   dx,DWORD PTR ds:[rsi]
   14000f974:	jae    0x14000f9db
   14000f976:	sub    BYTE PTR [rcx],ch
	...
   14000f980:	xor    DWORD PTR [rdi+rbp*2+0x43],esp
   14000f984:	ins    BYTE PTR es:[rdi],dx
   14000f985:	outs   dx,DWORD PTR ds:[rsi]
   14000f986:	jae    0x14000f9ed
   14000f988:	sub    BYTE PTR [rcx],ch
   14000f98a:	add    BYTE PTR [rax],al
   14000f98c:	add    BYTE PTR [rax],al
   14000f98e:	add    BYTE PTR [rax],al
   14000f990:	xor    ah,BYTE PTR [rsi+0x69]
   14000f993:	outs   dx,BYTE PTR ds:[rsi]
   14000f994:	imul   esi,DWORD PTR [rbx+0x68],0x69286465
   14000f99b:	outs   dx,BYTE PTR ds:[rsi]
   14000f99c:	je     0x14000f9c7
   14000f99e:	add    BYTE PTR [rax],al
   14000f9a0:	xor    DWORD PTR [rcx+0x6d],ebp
   14000f9a3:	jo     0x14000fa14
   14000f9a5:	jb     0x14000fa1b
   14000f9a7:	rex.R (bad) 
   14000f9a9:	je     0x14000fa0c
   14000f9ab:	sub    BYTE PTR [rcx+0x6e],ch
   14000f9ae:	je     0x14000f9d9
	...
   14000f9b8:	xor    ah,BYTE PTR [rbx+0x6c]
   14000f9bb:	imul   esp,DWORD PTR [rbx+0x6b],0x29286465
   14000f9c2:	add    BYTE PTR [rax],al
   14000f9c4:	add    BYTE PTR [rax],al
   14000f9c6:	add    BYTE PTR [rax],al
   14000f9c8:	xor    DWORD PTR [rbx+0x68],esi
   14000f9cb:	outs   dx,DWORD PTR ds:[rsi]
   14000f9cc:	ja     0x14000f9f6
   14000f9ce:	sub    DWORD PTR [rax],eax
   14000f9d0:	test   al,0x2d
   14000f9d2:	add    DWORD PTR [rax+0x1],eax
   14000f9d5:	add    BYTE PTR [rax],al
   14000f9d7:	add    BYTE PTR [rsi+0x14000b0],ah
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    BYTE PTR [rax+rsi*4+0x14000],ch
   14000f9e6:	add    BYTE PTR [rax],al
   14000f9e8:	mov    dl,0xb0
   14000f9ea:	add    BYTE PTR [rax+0x1],al
   14000f9ed:	add    BYTE PTR [rax],al
   14000f9ef:	add    BYTE PTR [rax],dl
   14000f9f1:	(bad)  
   14000f9f2:	add    BYTE PTR [rax+0x1],al
   14000f9f5:	add    BYTE PTR [rax],al
   14000f9f7:	add    dl,cl
   14000f9f9:	mov    al,0x0
   14000f9fb:	rex add DWORD PTR [rax],eax
   14000f9fe:	add    BYTE PTR [rax],al
   14000fa00:	shl    BYTE PTR [rax+0x14000],1
   14000fa06:	add    BYTE PTR [rax],al
   14000fa08:	(bad)  
   14000fa09:	mov    al,0x0
   14000fa0b:	rex add DWORD PTR [rax],eax
   14000fa0e:	add    BYTE PTR [rax],al
   14000fa10:	out    dx,al
   14000fa11:	mov    al,0x0
   14000fa13:	rex add DWORD PTR [rax],eax
   14000fa16:	add    BYTE PTR [rax],al
   14000fa18:	fdiv   QWORD PTR [rax+0x14000]
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	loop   0x14000f9d2
   14000fa22:	add    BYTE PTR [rax+0x1],al
   14000fa25:	add    BYTE PTR [rax],al
   14000fa27:	add    al,ch
   14000fa29:	mov    al,0x0
   14000fa2b:	rex add DWORD PTR [rax],eax
   14000fa2e:	add    BYTE PTR [rax],al
   14000fa30:	mov    eax,0x14000b0
   14000fa35:	add    BYTE PTR [rax],al
   14000fa37:	add    BYTE PTR [rsi+0x14000b0],bh
   14000fa3d:	add    BYTE PTR [rax],al
   14000fa3f:	add    ah,al
   14000fa41:	mov    al,0x0
   14000fa43:	rex add DWORD PTR [rax],eax
	...
   14000fa4e:	add    BYTE PTR [rax],al
   14000fa50:	sub    BYTE PTR [rip+0x14001],0x0        # 0x140023a58
   14000fa57:	add    BYTE PTR [rax-0x66],al
   14000fa5a:	add    BYTE PTR [rax+0x1],al
   14000fa5d:	add    BYTE PTR [rax],al
   14000fa5f:	add    BYTE PTR [rsi-0x57],ch
   14000fa62:	add    BYTE PTR [rax+0x1],al
   14000fa65:	add    BYTE PTR [rax],al
   14000fa67:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000fa6b:	rex add DWORD PTR [rax],eax
   14000fa6e:	add    BYTE PTR [rax],al
   14000fa70:	jp     0x14000fa1b
   14000fa72:	add    BYTE PTR [rax+0x1],al
   14000fa75:	add    BYTE PTR [rax],al
   14000fa77:	add    BYTE PTR [rax+0x14000a9],al
   14000fa7d:	add    BYTE PTR [rax],al
   14000fa7f:	add    BYTE PTR [rsi+0x14000a9],al
   14000fa85:	add    BYTE PTR [rax],al
   14000fa87:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000fa8e:	add    BYTE PTR [rax],al
   14000fa90:	lock sub al,0x1
   14000fa93:	rex add DWORD PTR [rax],eax
   14000fa96:	add    BYTE PTR [rax],al
   14000fa98:	mov    al,0x0
   14000fa9b:	rex add DWORD PTR [rax],eax
   14000fa9e:	add    BYTE PTR [rax],al
   14000faa0:	rex.RX mov al,0x0
   14000faa3:	rex add DWORD PTR [rax],eax
   14000faa6:	add    BYTE PTR [rax],al
   14000faa8:	rex.WR mov al,0x0
   14000faab:	rex add DWORD PTR [rax],eax
   14000faae:	add    BYTE PTR [rax],al
   14000fab0:	loopne 0x14000fa4b
   14000fab2:	add    BYTE PTR [rax+0x1],al
   14000fab5:	add    BYTE PTR [rax],al
   14000fab7:	add    BYTE PTR [rcx+rbp*4+0x14000],ah
   14000fabe:	add    BYTE PTR [rax],al
   14000fac0:	push   rdx
   14000fac1:	mov    al,0x0
   14000fac3:	rex add DWORD PTR [rax],eax
   14000fac6:	add    BYTE PTR [rax],al
   14000fac8:	(bad)  
   14000fac9:	mov    al,0x0
   14000facb:	rex add DWORD PTR [rax],eax
   14000face:	add    BYTE PTR [rax],al
   14000fad0:	out    dx,al
   14000fad1:	mov    al,0x0
   14000fad3:	rex add DWORD PTR [rax],eax
   14000fad6:	add    BYTE PTR [rax],al
   14000fad8:	fdiv   QWORD PTR [rax+0x14000]
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	loop   0x14000fa92
   14000fae2:	add    BYTE PTR [rax+0x1],al
   14000fae5:	add    BYTE PTR [rax],al
   14000fae7:	add    al,ch
   14000fae9:	mov    al,0x0
   14000faeb:	rex add DWORD PTR [rax],eax
   14000faee:	add    BYTE PTR [rax],al
   14000faf0:	pop    rax
   14000faf1:	mov    al,0x0
   14000faf3:	rex add DWORD PTR [rax],eax
   14000faf6:	add    BYTE PTR [rax],al
   14000faf8:	pop    rsi
   14000faf9:	mov    al,0x0
   14000fafb:	rex add DWORD PTR [rax],eax
   14000fafe:	add    BYTE PTR [rax],al
   14000fb00:	fs mov al,0x0
   14000fb03:	rex add DWORD PTR [rax],eax
   14000fb06:	add    BYTE PTR [rax],al
   14000fb08:	mov    dh,0xa9
   14000fb0a:	add    BYTE PTR [rax+0x1],al
   14000fb0d:	add    BYTE PTR [rax],al
   14000fb0f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000fb15:	add    BYTE PTR [rax],al
   14000fb17:	add    BYTE PTR [rcx+rbp*4+0x14000],bh
   14000fb1e:	add    BYTE PTR [rax],al
   14000fb20:	ret    0xa9
   14000fb23:	rex add DWORD PTR [rax],eax
   14000fb26:	add    BYTE PTR [rax],al
   14000fb28:	int3   
   14000fb29:	test   al,0x0
   14000fb2b:	rex add DWORD PTR [rax],eax
   14000fb2e:	add    BYTE PTR [rax],al
   14000fb30:	enter  0xa9,0x40
   14000fb34:	add    DWORD PTR [rax],eax
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	fsubr  DWORD PTR [rax+0x14000]
   14000fb3e:	add    BYTE PTR [rax],al
   14000fb40:	push   0xffffffffffffffb0
   14000fb42:	add    BYTE PTR [rax+0x1],al
   14000fb45:	add    BYTE PTR [rax],al
   14000fb47:	add    ah,ah
   14000fb49:	test   al,0x0
   14000fb4b:	rex add DWORD PTR [rax],eax
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	(bad)  
   14000fb51:	test   eax,0x14000
   14000fb56:	add    BYTE PTR [rax],al
   14000fb58:	fisubr DWORD PTR [rcx+0x14000]
   14000fb5e:	add    BYTE PTR [rax],al
   14000fb60:	imul   BYTE PTR [rax+0x14000]
   14000fb66:	add    BYTE PTR [rax],al
   14000fb68:	cld    
   14000fb69:	test   al,0x0
   14000fb6b:	rex add DWORD PTR [rax],eax
   14000fb6e:	add    BYTE PTR [rax],al
   14000fb70:	loopne 0x14000fb1b
   14000fb72:	add    BYTE PTR [rax+0x1],al
   14000fb75:	add    BYTE PTR [rax],al
   14000fb77:	add    BYTE PTR [rax],cl
   14000fb79:	test   eax,0x14000
   14000fb7e:	add    BYTE PTR [rax],al
   14000fb80:	jo     0x14000fb32
   14000fb82:	add    BYTE PTR [rax+0x1],al
   14000fb85:	add    BYTE PTR [rax],al
   14000fb87:	add    BYTE PTR [rsi-0x50],dh
   14000fb8a:	add    BYTE PTR [rax+0x1],al
   14000fb8d:	add    BYTE PTR [rax],al
   14000fb8f:	add    BYTE PTR [rax+rsi*4+0x0],bh
   14000fb93:	rex add DWORD PTR [rax],eax
   14000fb96:	add    BYTE PTR [rax],al
   14000fb98:	and    BYTE PTR [rcx+0x14000],ch
   14000fb9e:	add    BYTE PTR [rax],al
   14000fba0:	es test eax,0x14000
   14000fba6:	add    BYTE PTR [rax],al
   14000fba8:	sub    al,0xa9
   14000fbaa:	add    BYTE PTR [rax+0x1],al
   14000fbad:	add    BYTE PTR [rax],al
   14000fbaf:	add    BYTE PTR [rdx],dh
   14000fbb1:	test   eax,0x14000
   14000fbb6:	add    BYTE PTR [rax],al
   14000fbb8:	cmp    BYTE PTR [rcx+0x14000],ch
   14000fbbe:	add    BYTE PTR [rax],al
   14000fbc0:	ds test eax,0x14000
   14000fbc6:	add    BYTE PTR [rax],al
   14000fbc8:	(bad)  
   14000fbc9:	mov    al,0x0
   14000fbcb:	rex add DWORD PTR [rax],eax
   14000fbce:	add    BYTE PTR [rax],al
   14000fbd0:	rex.WX test rax,0x14000
   14000fbd6:	add    BYTE PTR [rax],al
   14000fbd8:	push   rax
   14000fbd9:	test   eax,0x14000
   14000fbde:	add    BYTE PTR [rax],al
   14000fbe0:	in     al,dx
   14000fbe1:	test   eax,0x14000
   14000fbe6:	add    BYTE PTR [rax],al
   14000fbe8:	pop    rsp
   14000fbe9:	test   eax,0x14000
   14000fbee:	add    BYTE PTR [rax],al
   14000fbf0:	(bad)  
   14000fbf1:	test   eax,0x14000
   14000fbf6:	add    BYTE PTR [rax],al
   14000fbf8:	repnz test eax,0x14000
   14000fbfe:	add    BYTE PTR [rax],al
   14000fc00:	mov    BYTE PTR [rax+0x14000],dh
   14000fc06:	add    BYTE PTR [rax],al
   14000fc08:	mov    ?,WORD PTR [rax+0x14000]
   14000fc0e:	add    BYTE PTR [rax],al
   14000fc10:	xchg   esp,eax
   14000fc11:	mov    al,0x0
   14000fc13:	rex add DWORD PTR [rax],eax
   14000fc16:	add    BYTE PTR [rax],al
   14000fc18:	(bad)  
   14000fc19:	mov    al,0x0
   14000fc1b:	rex add DWORD PTR [rax],eax
   14000fc1e:	add    BYTE PTR [rax],al
   14000fc20:	movabs al,ds:0x32000000014000b0
   14000fc29:	je     0x14000fc90
   14000fc2b:	js     0x14000fca1
   14000fc2d:	rex.XB push 0x65676e61
   14000fc33:	sub    BYTE PTR fs:[rcx],ch
   14000fc36:	add    BYTE PTR [rax],al
   14000fc38:	xor    DWORD PTR [rbp+riz*2+0x78],esi
   14000fc3c:	je     0x14000fc83
   14000fc3e:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x65],0x68437478
   14000fc47:	(bad)  
   14000fc48:	outs   dx,BYTE PTR ds:[rsi]
   14000fc49:	gs sub BYTE PTR fs:[ecx],ch
   14000fc4e:	add    BYTE PTR [rax],al
   14000fc50:	xor    ah,BYTE PTR [rbx+0x75]
   14000fc53:	jb     0x14000fcc7
   14000fc55:	outs   dx,BYTE PTR gs:[rsi]
   14000fc57:	je     0x14000fca2
   14000fc59:	outs   dx,BYTE PTR ds:[rsi]
   14000fc5a:	fs gs js 0x14000fca1
   14000fc5e:	push   0x65676e61
   14000fc63:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000fc67:	je     0x14000fcdb
   14000fc69:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000fc70:	xor    DWORD PTR [rbx+0x65],esi
   14000fc73:	je     0x14000fcc5
   14000fc75:	jb     0x14000fcdc
   14000fc77:	jae    0x14000fcde
   14000fc79:	je     0x14000fca3
   14000fc7b:	push   rcx
   14000fc7c:	push   rbx
   14000fc7d:	je     0x14000fcf1
   14000fc7f:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000fc86:	add    BYTE PTR [rax],al
   14000fc88:	xor    ah,BYTE PTR [rbp+0x61]
   14000fc8b:	jae    0x14000fcf6
   14000fc8d:	outs   dx,BYTE PTR ds:[rsi]
   14000fc8e:	addr32 rex.XB jne 0x14000fd04
   14000fc92:	jbe    0x14000fcf9
   14000fc94:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000fc96:	fs gs rex.XB push 0x65676e61
   14000fc9e:	sub    BYTE PTR fs:[rcx+0x53],dl
   14000fca2:	je     0x14000fd16
   14000fca4:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   14000fcab:	add    BYTE PTR [rax],al
   14000fcad:	add    BYTE PTR [rax],al
   14000fcaf:	add    BYTE PTR [rcx],dh
   14000fcb1:	jae    0x14000fd18
   14000fcb3:	je     0x14000fd05
   14000fcb5:	ins    BYTE PTR es:[rdi],dx
   14000fcb6:	(bad)  
   14000fcb7:	imul   ebp,DWORD PTR [rsi+0x54],0x28747865
   14000fcbe:	push   rcx
   14000fcbf:	push   rbx
   14000fcc0:	je     0x14000fd34
   14000fcc2:	imul   ebp,DWORD PTR [rsi+0x67],0x51000029
   14000fcc9:	rex.WRB
   14000fcca:	rex.WR and BYTE PTR [rbp+0x61],r8b
   14000fcce:	jae    0x14000fd39
   14000fcd0:	outs   dx,BYTE PTR ds:[rsi]
   14000fcd1:	and    BYTE PTR [ebx+0x75],al
   14000fcd5:	jb     0x14000fd4d
   14000fcd7:	and    BYTE PTR gs:[rbp+0x64],al
   14000fcdb:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x12cc800
   14000fce3:	rex add DWORD PTR [rax],eax
   14000fce6:	add    BYTE PTR [rax],al
   14000fce8:	push   rax
   14000fce9:	(bad)  
   14000fcea:	add    BYTE PTR [rax+0x1],al
   14000fced:	add    BYTE PTR [rax],al
   14000fcef:	add    BYTE PTR [rsi-0x57],ch
   14000fcf2:	add    BYTE PTR [rax+0x1],al
   14000fcf5:	add    BYTE PTR [rax],al
   14000fcf7:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000fcfb:	rex add DWORD PTR [rax],eax
   14000fcfe:	add    BYTE PTR [rax],al
   14000fd00:	jp     0x14000fcab
   14000fd02:	add    BYTE PTR [rax+0x1],al
   14000fd05:	add    BYTE PTR [rax],al
   14000fd07:	add    BYTE PTR [rax+0x14000a9],al
   14000fd0d:	add    BYTE PTR [rax],al
   14000fd0f:	add    BYTE PTR [rsi+0x14000a9],al
   14000fd15:	add    BYTE PTR [rax],al
   14000fd17:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000fd1e:	add    BYTE PTR [rax],al
   14000fd20:	enter  0x12b,0x40
   14000fd24:	add    DWORD PTR [rax],eax
   14000fd26:	add    BYTE PTR [rax],al
   14000fd28:	movabs al,ds:0xc0000000014000a6
   14000fd31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fd32:	add    BYTE PTR [rax+0x1],al
   14000fd35:	add    BYTE PTR [rax],al
   14000fd37:	add    BYTE PTR [rax],dl
   14000fd39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fd3a:	add    BYTE PTR [rax+0x1],al
   14000fd3d:	add    BYTE PTR [rax],al
   14000fd3f:	add    BYTE PTR [rax-0x66],ah
   14000fd42:	add    BYTE PTR [rax+0x1],al
   14000fd45:	add    BYTE PTR [rax],al
   14000fd47:	add    BYTE PTR [rsi],ch
   14000fd49:	mov    al,0x0
   14000fd4b:	rex add DWORD PTR [rax],eax
   14000fd4e:	add    BYTE PTR [rax],al
   14000fd50:	shl    BYTE PTR [rax+0x14000],1
   14000fd56:	add    BYTE PTR [rax],al
   14000fd58:	(bad)  
   14000fd59:	mov    al,0x0
   14000fd5b:	rex add DWORD PTR [rax],eax
   14000fd5e:	add    BYTE PTR [rax],al
   14000fd60:	out    dx,al
   14000fd61:	mov    al,0x0
   14000fd63:	rex add DWORD PTR [rax],eax
   14000fd66:	add    BYTE PTR [rax],al
   14000fd68:	fdiv   QWORD PTR [rax+0x14000]
   14000fd6e:	add    BYTE PTR [rax],al
   14000fd70:	loop   0x14000fd22
   14000fd72:	add    BYTE PTR [rax+0x1],al
   14000fd75:	add    BYTE PTR [rax],al
   14000fd77:	add    al,ch
   14000fd79:	mov    al,0x0
   14000fd7b:	rex add DWORD PTR [rax],eax
   14000fd7e:	add    BYTE PTR [rax],al
   14000fd80:	movabs ds:0xaa000000014000a8,al
   14000fd89:	test   eax,0x14000
   14000fd8e:	add    BYTE PTR [rax],al
   14000fd90:	mov    al,0xa9
   14000fd92:	add    BYTE PTR [rax+0x1],al
   14000fd95:	add    BYTE PTR [rax],al
   14000fd97:	add    BYTE PTR [rsi+0x14000a9],dh
   14000fd9d:	add    BYTE PTR [rax],al
   14000fd9f:	add    BYTE PTR [rdx+0x14000a8],bh
   14000fda5:	add    BYTE PTR [rax],al
   14000fda7:	add    BYTE PTR [rcx+rbp*4+0x14000],bh
   14000fdae:	add    BYTE PTR [rax],al
   14000fdb0:	ret    0xa9
   14000fdb3:	rex add DWORD PTR [rax],eax
   14000fdb6:	add    BYTE PTR [rax],al
   14000fdb8:	int3   
   14000fdb9:	test   al,0x0
   14000fdbb:	rex add DWORD PTR [rax],eax
   14000fdbe:	add    BYTE PTR [rax],al
   14000fdc0:	enter  0xa9,0x40
   14000fdc4:	add    DWORD PTR [rax],eax
   14000fdc6:	add    BYTE PTR [rax],al
   14000fdc8:	fsubr  DWORD PTR [rax+0x14000]
   14000fdce:	add    BYTE PTR [rax],al
   14000fdd0:	(bad)  
   14000fdd1:	test   eax,0x14000
   14000fdd6:	add    BYTE PTR [rax],al
   14000fdd8:	in     al,0xa8
   14000fdda:	add    BYTE PTR [rax+0x1],al
   14000fddd:	add    BYTE PTR [rax],al
   14000fddf:	add    ah,dl
   14000fde1:	test   eax,0x14000
   14000fde6:	add    BYTE PTR [rax],al
   14000fde8:	fisubr DWORD PTR [rcx+0x14000]
   14000fdee:	add    BYTE PTR [rax],al
   14000fdf0:	imul   BYTE PTR [rax+0x14000]
   14000fdf6:	add    BYTE PTR [rax],al
   14000fdf8:	cld    
   14000fdf9:	test   al,0x0
   14000fdfb:	rex add DWORD PTR [rax],eax
   14000fdfe:	add    BYTE PTR [rax],al
   14000fe00:	loopne 0x14000fdab
   14000fe02:	add    BYTE PTR [rax+0x1],al
   14000fe05:	add    BYTE PTR [rax],al
   14000fe07:	add    BYTE PTR [rax],dl
   14000fe09:	jns    0x14000fe0b
   14000fe0b:	rex add DWORD PTR [rax],eax
   14000fe0e:	add    BYTE PTR [rax],al
   14000fe10:	xor    BYTE PTR [rcx+0x0],bh
   14000fe13:	rex add DWORD PTR [rax],eax
   14000fe16:	add    BYTE PTR [rax],al
   14000fe18:	push   rax
   14000fe19:	jns    0x14000fe1b
   14000fe1b:	rex add DWORD PTR [rax],eax
   14000fe1e:	add    BYTE PTR [rax],al
   14000fe20:	xor    al,0xb0
   14000fe22:	add    BYTE PTR [rax+0x1],al
   14000fe25:	add    BYTE PTR [rax],al
   14000fe27:	add    BYTE PTR [rax],ah
   14000fe29:	test   eax,0x14000
   14000fe2e:	add    BYTE PTR [rax],al
   14000fe30:	es test eax,0x14000
   14000fe36:	add    BYTE PTR [rax],al
   14000fe38:	sub    al,0xa9
   14000fe3a:	add    BYTE PTR [rax+0x1],al
   14000fe3d:	add    BYTE PTR [rax],al
   14000fe3f:	add    BYTE PTR [rdx],dh
   14000fe41:	test   eax,0x14000
   14000fe46:	add    BYTE PTR [rax],al
   14000fe48:	cmp    BYTE PTR [rcx+0x14000],ch
   14000fe4e:	add    BYTE PTR [rax],al
   14000fe50:	ds test eax,0x14000
   14000fe56:	add    BYTE PTR [rax],al
   14000fe58:	rex.R test eax,0x14000
   14000fe5e:	add    BYTE PTR [rax],al
   14000fe60:	rex.WX test rax,0x14000
   14000fe66:	add    BYTE PTR [rax],al
   14000fe68:	push   rax
   14000fe69:	test   eax,0x14000
   14000fe6e:	add    BYTE PTR [rax],al
   14000fe70:	in     al,dx
   14000fe71:	test   eax,0x14000
   14000fe76:	add    BYTE PTR [rax],al
   14000fe78:	pop    rsp
   14000fe79:	test   eax,0x14000
   14000fe7e:	add    BYTE PTR [rax],al
   14000fe80:	(bad)  
   14000fe81:	test   eax,0x14000
   14000fe86:	add    BYTE PTR [rax],al
   14000fe88:	repnz test eax,0x14000
   14000fe8e:	add    BYTE PTR [rax],al
   14000fe90:	cmp    dh,BYTE PTR [rax+0x14000]
   14000fe96:	add    BYTE PTR [rax],al
   14000fe98:	xor    dh,BYTE PTR [rdi+rbp*2+0x67]
   14000fe9c:	ins    BYTE PTR es:[edi],dx
   14000fe9e:	gs sub BYTE PTR fs:[rdx+0x6f],ah
   14000fea3:	outs   dx,DWORD PTR ds:[rsi]
   14000fea4:	ins    BYTE PTR es:[rdi],dx
   14000fea5:	sub    DWORD PTR [rax],eax
   14000fea7:	add    BYTE PTR [rcx],dh
   14000fea9:	jo     0x14000ff00
   14000feab:	jo     0x14000ff11
   14000fead:	(bad)  
   14000feae:	je     0x14000ff15
   14000feb0:	sub    BYTE PTR fs:[rcx],ch
   14000feb3:	add    BYTE PTR [rax],al
   14000feb5:	add    BYTE PTR [rax],al
   14000feb7:	add    BYTE PTR [rcx],dh
   14000feb9:	movsxd esi,DWORD PTR [rdx]
   14000febb:	push   rbp
   14000febc:	jo     0x14000ff22
   14000febe:	(bad)  
   14000febf:	je     0x14000ff26
   14000fec1:	sub    BYTE PTR fs:[rcx],ch
   14000fec4:	add    BYTE PTR [rax],al
   14000fec6:	add    BYTE PTR [rax],al
   14000fec8:	movsxd esi,DWORD PTR [rdx]
   14000feca:	add    BYTE PTR [rax],al
   14000fecc:	add    BYTE PTR [rax],al
   14000fece:	add    BYTE PTR [rax],al
   14000fed0:	xor    dh,BYTE PTR [rsi+0x61]
   14000fed3:	ins    BYTE PTR es:[rdi],dx
   14000fed4:	jne    0x14000ff3b
   14000fed6:	rex.XB push 0x65676e61
   14000fedc:	sub    BYTE PTR fs:[rdi+rbp*2+0x75],ah
   14000fee1:	(bad)  
   14000fee2:	ins    BYTE PTR es:[rdi],dx
   14000fee3:	sub    DWORD PTR gs:[rax],eax
   14000fee6:	add    BYTE PTR [rax],al
   14000fee8:	xor    DWORD PTR [rbx+0x31],esp
   14000feeb:	push   rbp
   14000feec:	jo     0x14000ff52
   14000feee:	(bad)  
   14000feef:	je     0x14000ff56
   14000fef1:	sub    BYTE PTR fs:[rcx],ch
   14000fef4:	add    BYTE PTR [rax],al
   14000fef6:	add    BYTE PTR [rax],al
   14000fef8:	movsxd esi,DWORD PTR [rcx]
   14000fefa:	add    BYTE PTR [rax],al
   14000fefc:	add    BYTE PTR [rax],al
   14000fefe:	add    BYTE PTR [rax],al
   14000ff00:	sbb    BYTE PTR [rdi],ch
   14000ff02:	add    DWORD PTR [rax+0x1],eax
   14000ff05:	add    BYTE PTR [rax],al
   14000ff07:	add    BYTE PTR [rax-0x5e],dh
   14000ff0a:	add    BYTE PTR [rax+0x1],al
   14000ff0d:	add    BYTE PTR [rax],al
   14000ff0f:	add    BYTE PTR [rsi-0x57],ch
   14000ff12:	add    BYTE PTR [rax+0x1],al
   14000ff15:	add    BYTE PTR [rax],al
   14000ff17:	add    BYTE PTR [rcx+rbp*4+0x0],dh
   14000ff1b:	rex add DWORD PTR [rax],eax
   14000ff1e:	add    BYTE PTR [rax],al
   14000ff20:	jp     0x14000fecb
   14000ff22:	add    BYTE PTR [rax+0x1],al
   14000ff25:	add    BYTE PTR [rax],al
   14000ff27:	add    BYTE PTR [rax+0x14000a9],al
   14000ff2d:	add    BYTE PTR [rax],al
   14000ff2f:	add    BYTE PTR [rsi+0x14000a9],al
   14000ff35:	add    BYTE PTR [rax],al
   14000ff37:	add    BYTE PTR [rcx+rbp*4+0x14000],cl
   14000ff3e:	add    BYTE PTR [rax],al
   14000ff40:	mov    BYTE PTR [rsi],ch
   14000ff42:	add    DWORD PTR [rax+0x1],eax
   14000ff45:	add    BYTE PTR [rax],al
   14000ff47:	add    al,ah
   14000ff49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff4a:	add    BYTE PTR [rax+0x1],al
   14000ff4d:	add    BYTE PTR [rax],al
   14000ff4f:	add    BYTE PTR [rax],al
   14000ff51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff52:	add    BYTE PTR [rax+0x1],al
   14000ff55:	add    BYTE PTR [rax],al
   14000ff57:	add    BYTE PTR [rax-0x59],dl
   14000ff5a:	add    BYTE PTR [rax+0x1],al
   14000ff5d:	add    BYTE PTR [rax],al
   14000ff5f:	add    BYTE PTR [rax+0x14000a2],al
   14000ff65:	add    BYTE PTR [rax],al
   14000ff67:	add    BYTE PTR [rcx+rbp*4+0x14000],ah
   14000ff6e:	add    BYTE PTR [rax],al
   14000ff70:	shl    BYTE PTR [rax+0x14000],1
   14000ff76:	add    BYTE PTR [rax],al
   14000ff78:	(bad)  
   14000ff79:	mov    al,0x0
   14000ff7b:	rex add DWORD PTR [rax],eax
   14000ff7e:	add    BYTE PTR [rax],al
   14000ff80:	out    dx,al
   14000ff81:	mov    al,0x0
   14000ff83:	rex add DWORD PTR [rax],eax
   14000ff86:	add    BYTE PTR [rax],al
   14000ff88:	fdiv   QWORD PTR [rax+0x14000]
   14000ff8e:	add    BYTE PTR [rax],al
   14000ff90:	loop   0x14000ff42
   14000ff92:	add    BYTE PTR [rax+0x1],al
   14000ff95:	add    BYTE PTR [rax],al
   14000ff97:	add    al,ch
   14000ff99:	mov    al,0x0
   14000ff9b:	rex add DWORD PTR [rax],eax
   14000ff9e:	add    BYTE PTR [rax],al
   14000ffa0:	movabs ds:0xaa000000014000a8,al
   14000ffa9:	test   eax,0x14000
   14000ffae:	add    BYTE PTR [rax],al
   14000ffb0:	mov    al,0xa9
   14000ffb2:	add    BYTE PTR [rax+0x1],al
   14000ffb5:	add    BYTE PTR [rax],al
   14000ffb7:	add    BYTE PTR [rsi+0x14000a9],dh
   14000ffbd:	add    BYTE PTR [rax],al
   14000ffbf:	add    BYTE PTR [rdx+0x14000a8],bh
   14000ffc5:	add    BYTE PTR [rax],al
   14000ffc7:	add    BYTE PTR [rcx+rbp*4+0x14000],bh
   14000ffce:	add    BYTE PTR [rax],al
   14000ffd0:	ret    0xa9
   14000ffd3:	rex add DWORD PTR [rax],eax
   14000ffd6:	add    BYTE PTR [rax],al
   14000ffd8:	int3   
   14000ffd9:	test   al,0x0
   14000ffdb:	rex add DWORD PTR [rax],eax
   14000ffde:	add    BYTE PTR [rax],al
   14000ffe0:	enter  0xa9,0x40
   14000ffe4:	add    DWORD PTR [rax],eax
   14000ffe6:	add    BYTE PTR [rax],al
   14000ffe8:	fsubr  DWORD PTR [rax+0x14000]
   14000ffee:	add    BYTE PTR [rax],al
   14000fff0:	(bad)  
   14000fff1:	test   eax,0x14000
   14000fff6:	add    BYTE PTR [rax],al
   14000fff8:	in     al,0xa8
   14000fffa:	add    BYTE PTR [rax+0x1],al
   14000fffd:	add    BYTE PTR [rax],al
   14000ffff:	add    ah,dl
   140010001:	test   eax,0x14000
   140010006:	add    BYTE PTR [rax],al
   140010008:	fisubr DWORD PTR [rcx+0x14000]
   14001000e:	add    BYTE PTR [rax],al
   140010010:	imul   BYTE PTR [rax+0x14000]
   140010016:	add    BYTE PTR [rax],al
   140010018:	cld    
   140010019:	test   al,0x0
   14001001b:	rex add DWORD PTR [rax],eax
   14001001e:	add    BYTE PTR [rax],al
   140010020:	loopne 0x14000ffcb
   140010022:	add    BYTE PTR [rax+0x1],al
   140010025:	add    BYTE PTR [rax],al
   140010027:	add    BYTE PTR [rax],cl
   140010029:	test   eax,0x14000
   14001002e:	add    BYTE PTR [rax],al
   140010030:	(bad)  
   140010031:	test   eax,0x14000
   140010036:	add    BYTE PTR [rax],al
   140010038:	adc    al,0xa9
   14001003a:	add    BYTE PTR [rax+0x1],al
   14001003d:	add    BYTE PTR [rax],al
   14001003f:	add    dh,ah
   140010041:	test   eax,0x14000
   140010046:	add    BYTE PTR [rax],al
   140010048:	and    BYTE PTR [rcx+0x14000],ch
   14001004e:	add    BYTE PTR [rax],al
   140010050:	es test eax,0x14000
   140010056:	add    BYTE PTR [rax],al
   140010058:	sub    al,0xa9
   14001005a:	add    BYTE PTR [rax+0x1],al
   14001005d:	add    BYTE PTR [rax],al
   14001005f:	add    BYTE PTR [rdx],dh
   140010061:	test   eax,0x14000
   140010066:	add    BYTE PTR [rax],al
   140010068:	cmp    BYTE PTR [rcx+0x14000],ch
   14001006e:	add    BYTE PTR [rax],al
   140010070:	ds test eax,0x14000
   140010076:	add    BYTE PTR [rax],al
   140010078:	rex.R test eax,0x14000
   14001007e:	add    BYTE PTR [rax],al
   140010080:	rex.WX test rax,0x14000
   140010086:	add    BYTE PTR [rax],al
   140010088:	push   rax
   140010089:	test   eax,0x14000
   14001008e:	add    BYTE PTR [rax],al
   140010090:	in     al,dx
   140010091:	test   eax,0x14000
   140010096:	add    BYTE PTR [rax],al
   140010098:	pop    rsp
   140010099:	test   eax,0x14000
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	(bad)  
   1400100a1:	test   eax,0x14000
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	repnz test eax,0x14000
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	add    BYTE PTR [rax],al
   1400100b2:	add    al,0xc4
   1400100b4:	add    BYTE PTR [rax],al
   1400100b6:	adc    DWORD PTR [rax+rdi*2+0x5b57d59c],edx
   1400100bd:	rex.WRXB jmp 0x140010106
   1400100c0:	adc    BYTE PTR [rsi+0x47],bh
   1400100c3:	loop   0x140010104
   1400100c5:	mov    WORD PTR [rax],gs
   1400100c7:	(bad)  
   1400100c9:	xor    DWORD PTR [rbx+0x39],0xd57234a7
   1400100d0:	(bad)  
   1400100d1:	rex.WRX sbb r13b,BYTE PTR [rax]
   1400100d4:	push   rdx
   1400100d5:	rex.WX
   1400100d6:	rex.XB leave 
   1400100d8:	test   eax,0xda15552a
   1400100dd:	fcom   DWORD PTR [rbx]
   1400100df:	jnp    0x1400100a6
   1400100e1:	fisubr DWORD PTR [rbx+0x76]
   1400100e4:	xlat   BYTE PTR ds:[rbx]
   1400100e5:	rex.WB jl 0x140010092
   1400100e8:	(bad)  
   1400100e9:	test   esi,0x3738edae
   1400100ef:	push   rdx
   1400100f0:	jp     0x14001007c
   1400100f2:	push   0xffffffffdec505eb
   1400100f7:	mov    ecx,0x5e337ccf
   1400100fc:	mov    bh,0xbe
   1400100fe:	jl     0x1400100c5
   140010100:	jmp    0x1400100f2
   140010102:	movabs al,ds:0xd8a3c50accbe87fc
   14001010b:	ror    BYTE PTR [rcx-0x1],0x14
   14001010f:	mov    edx,0x3057ceed
   140010114:	mov    ss,WORD PTR [rcx]
   140010116:	out    dx,al
   140010117:	or     al,0x51
   140010119:	xchg   edx,eax
   14001011a:	mov    WORD PTR [rbp-0x17b2f3fb],fs
   140010120:	push   rbp
   140010121:	lods   al,BYTE PTR ds:[rsi]
   140010122:	test   eax,0x21f18161
   140010127:	ss es repz pop rbx
   14001012b:	lods   eax,DWORD PTR ds:[rsi]
   14001012c:	stc    
   14001012d:	jl     0x14001011d
   14001012f:	cmp    eax,0x96cb8f19
   140010134:	loopne 0x140010137
   140010136:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010137:	(bad)  
   140010138:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010139:	push   rcx
   14001013a:	imul   ebp,DWORD PTR [rcx+0xd731c77],0x53
   140010141:	cs adc al,ch
   140010144:	(bad)  
   140010145:	movsxd ecx,edx
   140010147:	sbb    BYTE PTR [rdx+rax*4+0x12ef9a71],0x1
   14001014f:	mov    DWORD PTR [rbx+rsi*2],ecx
   140010152:	movabs ds:0xc6e478a52c60f72d,al
   14001015b:	pop    rbx
   14001015c:	sub    bh,BYTE PTR [rax]
   14001015e:	mov    esi,0x187c3f1b
   140010163:	pop    rsp
   140010164:	(bad)  
   140010166:	ds or  al,0x6f
   140010169:	cli    
   14001016a:	sbb    ebx,0xfffffffb
   14001016d:	cmp    DWORD PTR [rdi],0xbb0d1ebc
   140010173:	popf   
   140010174:	jrcxz  0x140010140
   140010176:	xchg   edi,eax
   140010177:	and    al,0x41
   140010179:	adc    eax,0xe8602670
   14001017e:	mov    WORD PTR [rbx],fs
   140010180:	jl     0x140010156
   140010182:	sub    al,0x42
   140010184:	rex.RXB lods al,BYTE PTR ds:[rsi]
   140010186:	jbe    0x1400101d8
   140010188:	rex.XB sub al,0x45
   14001018b:	rex.W outs dx,BYTE PTR ds:[rsi]
   14001018d:	ror    DWORD PTR [rcx+rcx*1+0x8d0421e],0x91
   140010195:	(bad)
   140010198:	(bad)  
   140010199:	rex.WX pop rax
   14001019b:	add    DWORD PTR [rcx],edi
   14001019d:	sub    DWORD PTR [rax],esi
   14001019f:	(bad)  
   1400101a0:	retf   
   1400101a1:	test   eax,0x4082c3d3
   1400101a6:	stos   BYTE PTR es:[rdi],al
   1400101a7:	nop
   1400101a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400101a9:	add    edx,eax
   1400101ab:	pushf  
   1400101ac:	fdivr  DWORD PTR [rcx+0x52a3a2ba]
   1400101b3:	add    BYTE PTR [rdx+rdx*2],ch
   1400101b6:	mov    BYTE PTR [rcx],cl
   1400101b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400101b9:	(bad)  
   1400101ba:	xor    ah,BYTE PTR [rip+0x70c43c67]        # 0x1b0c53e27
   1400101c0:	leave  
   1400101c1:	out    dx,al
   1400101c2:	(bad)  
   1400101c3:	fmul   st(3),st
   1400101c5:	test   eax,0xd1453399
   1400101ca:	stos   BYTE PTR es:[rdi],al
   1400101cb:	xor    esp,DWORD PTR [rax-0x3e]
   1400101ce:	movabs al,ds:0x5919c51433e1994a
   1400101d7:	fisubr DWORD PTR [rcx-0x7b]
   1400101da:	js     0x1400101ee
   1400101dc:	rex.WRB mov r14b,0x28
   1400101df:	loope  0x14001021d
   1400101e1:	and    eax,0x3043b57d
   1400101e6:	push   rdi
   1400101e7:	fcomp  QWORD PTR [rax]
   1400101e9:	rex.WR push rdi
   1400101eb:	ins    BYTE PTR es:[rdi],dx
   1400101ec:	rex.WRX ror spl,1
   1400101ef:	xchg   ecx,eax
   1400101f0:	jbe    0x1400101fc
   1400101f2:	cdq    
   1400101f3:	add    ecx,DWORD PTR [rbx-0x3d]
   1400101f6:	(bad)  
   1400101f7:	(bad)  
   1400101f8:	jns    0x14001026a
   1400101fa:	and    eax,0x53eb2c15
   1400101ff:	sub    ch,BYTE PTR [rsi]
   140010201:	jne    0x1400101a8
   140010203:	and    DWORD PTR ss:[rcx-0x38],ebp
   140010207:	or     eax,0x4a06a997
   14001020c:	xlat   BYTE PTR ds:[rbx]
   14001020d:	jbe    0x14001026c
   14001020f:	sbb    eax,0x55c379f7
   140010214:	push   0xffffffffffffff9b
   140010216:	out    0x8a,al
   140010218:	jl     0x14001026e
   14001021a:	rex.WRX or r9,QWORD PTR [rdi-0x59]
   14001021e:	push   rdx
   14001021f:	and    eax,0x1cab52cc
   140010224:	(bad)  
   140010225:	jmp    0x192c162a0
   14001022a:	sbb    BYTE PTR [rcx-0x3cea4a93],0x79
   140010231:	scas   al,BYTE PTR es:[rdi]
   140010232:	fwait
   140010233:	jb     0x140010294
   140010235:	fistp  QWORD PTR [rsi-0x7c]
   140010238:	and    DWORD PTR [rdx-0x73],ebp
   14001023b:	or     ch,BYTE PTR [rsi-0x6babacf]
   140010241:	sbb    eax,0x7c7213e5
   140010246:	rex.RXB jge 0x140010278
   140010249:	xlat   BYTE PTR ds:[rbx]
   14001024a:	jae    0x140010224
   14001024c:	(bad)  
   14001024d:	int    0x56
   14001024f:	jb     0x1400101d3
   140010251:	(bad)  
   140010252:	xchg   ecx,eax
   140010253:	adc    dl,dh
   140010255:	xor    al,0x24
   140010257:	pop    rbp
   140010258:	rex.WRB xor r13b,BYTE PTR [r11]
   14001025b:	test   al,0x35
   14001025d:	jbe    0x1400102a9
   14001025f:	mov    bl,0xbb
   140010261:	ins    DWORD PTR es:[rdi],dx
   140010262:	int    0x50
   140010264:	imul   ebx,DWORD PTR [rbx],0x50ebd752
   14001026a:	(bad)  
   14001026b:	xchg   esi,eax
   14001026c:	(bad)  
   14001026d:	out    dx,eax
   14001026e:	adc    BYTE PTR [rcx],0x98
   140010271:	sub    eax,0xc4c98eab
   140010276:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010277:	jo     0x1400102a3
   140010279:	scas   eax,DWORD PTR es:[rdi]
   14001027a:	test   al,0x14
   14001027c:	jmp    0x140010203
   14001027e:	mov    esi,0x4cbd6492
   140010283:	mov    cl,BYTE PTR [rbp+0x33]
   140010286:	retf   
   140010287:	xor    ah,BYTE PTR [rdx+rcx*8-0x5a]
   14001028b:	lahf   
   14001028c:	retf   0x256d
   14001028f:	pushf  
   140010290:	mov    bl,0x15
   140010292:	lods   al,BYTE PTR ds:[rsi]
   140010293:	cmp    eax,0xb759eb0b
   140010298:	movsxd edi,DWORD PTR [rcx]
   14001029a:	rex.WXB hlt 
   14001029c:	scas   al,BYTE PTR es:[rdi]
   14001029d:	out    dx,al
   14001029e:	mov    edi,0xe4409123
   1400102a3:	movabs eax,ds:0x22c8f058cd9380c3
   1400102ac:	stos   DWORD PTR es:[rdi],eax
   1400102ad:	int3   
   1400102ae:	rex.RB push r12
   1400102b0:	test   esi,ebp
   1400102b2:	ror    DWORD PTR [rax+0x20],0x23
   1400102b6:	iret   
   1400102b7:	adc    eax,0x97ce38ce
   1400102bc:	fcomp  DWORD PTR [rbx-0x431bdeb6]
   1400102c2:	xor    al,0xdd
   1400102c4:	push   rsp
   1400102c5:	retf   0xa048
   1400102c8:	xor    BYTE PTR [rbx-0x7b],dh
   1400102cb:	sbb    ebp,DWORD PTR [rcx]
   1400102cd:	jns    0x1400102f5
   1400102cf:	sbb    eax,0xa7c2934e
   1400102d4:	pushf  
   1400102d5:	sub    eax,DWORD PTR [rdi+0x15404d39]
   1400102db:	ret    0x3a66
   1400102de:	shr    DWORD PTR [rdx+0x1c],0xe8
   1400102e2:	stos   BYTE PTR es:[rdi],al
   1400102e3:	rcl    BYTE PTR [rcx-0x66],0x7b
   1400102e7:	push   rdx
   1400102e8:	rex.RB lods eax,DWORD PTR ds:[rsi]
   1400102ea:	mov    edx,0xca225ab9
   1400102ef:	test   BYTE PTR [rdi],dl
   1400102f1:	sbb    ebp,DWORD PTR [rdx-0x7]
   1400102f4:	cmp    bh,BYTE PTR [rsi+0x716c3815]
   1400102fa:	push   rbx
   1400102fb:	mov    ebx,0x9e89af9e
   140010300:	push   rbx
   140010301:	add    eax,0x9483789c
   140010306:	rex.WXB
   140010307:	rex.WRB jge 0x1400102aa
   14001030a:	xor    esi,DWORD PTR [rbp+rdi*1-0x78]
   14001030e:	mov    eax,DWORD PTR [rax]
   140010310:	xor    ebx,DWORD PTR [rbx]
   140010312:	rcr    ecx,cl
   140010314:	out    0xd8,al
   140010316:	mov    cl,BYTE PTR [rax]
   140010318:	sbb    eax,0x804575da
   14001031d:	retf   0x11b6
   140010320:	mov    al,0xb0
   140010322:	test   BYTE PTR [rcx],dh
   140010324:	adc    esp,DWORD PTR [rbp+0x40]
   140010327:	jbe    0x140010313
   140010329:	adc    DWORD PTR [rcx+rcx*2+0x3dcde6ce],esp
   140010330:	sub    DWORD PTR [rbp+0x503a885e],0x7ca6527c
   14001033a:	jae    0x140010354
   14001033c:	push   rdx
   14001033d:	push   rcx
   14001033e:	(bad)  
   14001033f:	push   rax
   140010340:	sbb    esi,DWORD PTR [rbp+0x7a]
   140010343:	push   0x70
   140010345:	je     0x140010303
   140010347:	(bad)  
   140010348:	fst    DWORD PTR [rsi-0x4b]
   14001034b:	retf   0x934a
   14001034e:	rol    bl,1
   140010350:	loopne 0x1400102e9
   140010352:	(bad)  
   140010353:	(bad)  
   140010354:	xor    al,0xbe
   140010356:	stc    
   140010357:	icebp  
   140010358:	(bad)  
   140010359:	xor    ecx,DWORD PTR [rbx]
   14001035b:	push   rbx
   14001035c:	xchg   edx,eax
   14001035d:	frstor [rsp+rsi*4-0x2b]
   140010361:	(bad)  
   140010362:	cmc    
   140010363:	mov    cl,0x37
   140010365:	mov    eax,0x7a1eaefd
   14001036a:	(bad)  
   14001036b:	xor    eax,0x9a2ef5e1
   140010370:	rol    DWORD PTR [rdi+0x24c93c07],1
   140010376:	int    0x64
   140010378:	sbb    al,dh
   14001037a:	cmp    DWORD PTR [rdi],ecx
   14001037c:	(bad)  
   14001037d:	or     edi,esp
   14001037f:	ins    DWORD PTR es:[rdi],dx
   140010380:	mov    ebx,0x8130637b
   140010385:	fisttp WORD PTR [rdi]
   140010387:	jo     0x170fb21bb
   14001038d:	leave  
   14001038e:	lea    esi,[rcx-0x65c469af]
   140010394:	rex.RXB xchg r12d,eax
   140010396:	cmp    ecx,DWORD PTR [rax]
   140010398:	test   al,0x40
   14001039a:	(bad)  
   14001039b:	sbb    dh,dl
   14001039d:	mov    ebx,0x5860613f
   1400103a2:	sbb    dl,BYTE PTR [rcx-0x68]
   1400103a5:	xchg   ebp,eax
   1400103a6:	(bad)  
   1400103a7:	sub    eax,0x89b85a9c
   1400103ac:	unpcklps xmm4,XMMWORD PTR [rax-0x5c]
   1400103b0:	ins    BYTE PTR es:[rdi],dx
   1400103b1:	(bad)  
   1400103b2:	xor    al,0x54
   1400103b4:	(bad)
   1400103b7:	imul   ebx,DWORD PTR [rdi],0xffffffde
   1400103ba:	(bad)  
   1400103bb:	pop    rbx
   1400103bc:	xor    al,0xfe
   1400103be:	(bad)  
   1400103bf:	test   eax,0x12f947b4
   1400103c4:	mov    esi,0xcc105f7d
   1400103c9:	sbb    ch,BYTE PTR [rdx-0x4ecb5bb2]
   1400103cf:	cmovbe esp,ebp
   1400103d2:	fsubr  st,st(4)
   1400103d4:	rex.RX push rsi
   1400103d6:	psllw  mm7,mm1
   1400103d9:	jo     0x140010438
   1400103db:	(bad)  [rbp+0x7aaf60ba]
   1400103e1:	(bad)  
   1400103e2:	fmulp  st(0),st
   1400103e4:	ins    BYTE PTR es:[rdi],dx
   1400103e5:	xchg   ebx,eax
   1400103e6:	scas   ax,WORD PTR es:[rdi]
   1400103e8:	rex.WR push 0xffffffffffffff87
   1400103eb:	or     BYTE PTR [rdi],bl
   1400103ed:	fcmovu st,st(3)
   1400103ef:	(bad)  
   1400103f0:	or     bpl,BYTE PTR [rcx-0x7d05c784]
   1400103f7:	rex.WRB in eax,dx
   1400103f9:	cmp    bl,BYTE PTR [rdx-0x19]
   1400103fc:	clc    
   1400103fd:	movabs ds:0xf62fef796c33ff8e,eax
   140010406:	fldpi  
   140010408:	mov    ch,0xed
   14001040a:	jp     0x140010449
   14001040c:	jnp    0x1400103ab
   14001040e:	jge    0x1400103c1
   140010410:	test   DWORD PTR [rsi+0x6d],esi
   140010413:	fcmovnu st,st(2)
   140010415:	jno    0x140010452
   140010417:	movabs eax,ds:0x5776da296f2a14b7
   140010420:	and    eax,0xbfbdcea
   140010425:	rex (bad) 
   140010427:	xchg   edx,eax
   140010428:	pop    rdx
   140010429:	add    eax,0x58885dc3
   14001042e:	clc    
   14001042f:	shr    BYTE PTR [rbp-0x62],1
   140010432:	or     bl,BYTE PTR [rdi]
   140010434:	(bad)  
   140010435:	jnp    0x1400104b2
   140010437:	loope  0x14001045b
   140010439:	test   eax,0xd629b86f
   14001043e:	(bad)  
   14001043f:	not    BYTE PTR [rsi+0x70]
   140010442:	or     BYTE PTR [rax+0x7076f5d],bl
   140010448:	(bad)  
   140010449:	mov    ch,0xeb
   14001044b:	ins    DWORD PTR es:[rdi],dx
   14001044c:	loopne 0x14001045e
   14001044e:	hlt    
   14001044f:	in     al,dx
   140010450:	jp     0x140010463
   140010452:	sbb    al,0x76
   140010454:	mul    esp
   140010456:	(bad)  
   140010457:	ds inc bh
   14001045a:	adc    dl,cl
   14001045c:	xchg   esp,eax
   14001045d:	jge    0x1400104ae
   14001045f:	cmp    eax,0xd055a107
   140010464:	adc    al,0x6b
   140010466:	mov    dl,bh
   140010468:	pop    QWORD PTR [rcx-0x58]
   14001046b:	(bad)  
   14001046c:	mov    cl,0xeb
   14001046e:	push   rbp
   14001046f:	and    esp,esi
   140010471:	cmc    
   140010472:	ds jnp 0x14001048c
   140010475:	fisttp QWORD PTR [rbx+0x6de745ce]
   14001047b:	and    ah,dl
   14001047d:	fwait
   14001047e:	div    BYTE PTR [rax-0x7be50079]
   140010484:	pushf  
   140010485:	pop    rsi
   140010486:	ret    
   140010487:	or     al,0x52
   140010489:	mov    ch,0x7f
   14001048b:	ins    DWORD PTR es:[rdi],dx
   14001048c:	(bad)  
   14001048d:	out    dx,al
   14001048e:	in     eax,dx
   14001048f:	(bad)  
   140010490:	push   ax
   140010492:	sub    DWORD PTR [rbx-0x70],ecx
   140010495:	je     0x1400104eb
   140010497:	jae    0x140010482
   140010499:	push   0x25231f33
   14001049e:	xor    edi,DWORD PTR [rdx]
   1400104a0:	cmp    dl,BYTE PTR [rdi*8+0x6748b098]
   1400104a7:	mov    DWORD PTR [rip+0x454c3129],ebx        # 0x1854d35d6
   1400104ad:	test   BYTE PTR [rax],0xf4
   1400104b0:	cld    
   1400104b1:	mov    ebx,0xc176beae
   1400104b6:	lods   eax,DWORD PTR ds:[rsi]
   1400104b7:	jb     0x1400104b2
   1400104b9:	mov    bl,0xad
   1400104bb:	out    dx,al
   1400104bc:	sbb    DWORD PTR [rax-0x30c499a5],ebp
   1400104c2:	(bad)  
   1400104c3:	in     al,0xec
   1400104c5:	imul   ebp,DWORD PTR gs:[rdx-0x68001086],0xe3433da6
   1400104d0:	out    dx,eax
   1400104d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400104d2:	test   eax,0x76adfdbc
   1400104d7:	mov    WORD PTR fs:[rbx+0x44b0e9b5],cs
   1400104de:	and    al,0x5a
   1400104e0:	cld    
   1400104e1:	scas   eax,DWORD PTR es:[rdi]
   1400104e2:	(bad)  
   1400104e3:	push   rax
   1400104e4:	rex.XB pushf 
   1400104e6:	ds cmp al,0xe9
   1400104e9:	mov    cl,0x3a
   1400104eb:	cmp    DWORD PTR [rdx],ebx
   1400104ed:	or     DWORD PTR [rsi+0x1c],edx
   1400104f0:	popf   
   1400104f1:	mov    esi,0xe244ec14
   1400104f6:	lahf   
   1400104f7:	in     al,dx
   1400104f8:	(bad)  
   1400104f9:	xchg   edx,eax
   1400104fa:	mov    eax,0x4af87414
   1400104ff:	fsubr  QWORD PTR [rax-0x4e]
   140010502:	xchg   BYTE PTR [rip+0xffffffff9f7dfcf7],bh        # 0xdf7f01ff
   140010508:	ss in  al,dx
   14001050a:	xchg   DWORD PTR [rbp+rcx*8+0x4f],ecx
   14001050e:	jo     0x140010540
   140010510:	cmp    al,0x78
   140010512:	xchg   bl,bh
   140010514:	out    0x4d,eax
   140010516:	out    dx,al
   140010517:	sub    DWORD PTR [rcx-0xa],ebp
   14001051a:	es je  0x140010501
   14001051d:	fsubp  st(4),st
   14001051f:	rex
   140010520:	rex.RXB enter 0x2f8,0xc5
   140010525:	cmp    eax,0xefa544ff
   14001052a:	mov    dh,0x57
   14001052c:	es mov ah,0xbd
   14001052f:	stc    
   140010530:	shl    BYTE PTR [r15],cl
   140010533:	(bad)  
   140010534:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010535:	rex.X mov sil,0x9a
   140010538:	add    BYTE PTR [rdi+0x26ca41c6],al
   14001053e:	add    dh,BYTE PTR [rdi+0x530fee34]
   140010544:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010545:	add    ebp,ebx
   140010547:	sbb    DWORD PTR [rsi],ebp
   140010549:	rex.WRXB pushf 
   14001054b:	sahf   
   14001054c:	jmp    0x1400105ae
   14001054e:	clc    
   14001054f:	jbe    0x140010506
   140010551:	(bad)  
   140010552:	push   rdi
   140010553:	cwde   
   140010554:	(bad)  
   140010555:	fsub   st(4),st
   140010557:	loop   0x1400105b6
   140010559:	movsxd ebp,edx
   14001055b:	xchg   edi,eax
   14001055c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001055d:	push   rsp
   14001055e:	jg     0x140010573
   140010560:	sbb    BYTE PTR [rbx+0x77aa0d42],bl
   140010566:	jo     0x1400105bd
   140010568:	rex.RXB fst QWORD PTR [r11+0x70b66fd3]
   14001056f:	rex (bad) 
   140010571:	hlt    
   140010572:	mul    DWORD PTR [rdi]
   140010574:	(bad)  
   140010575:	test   eax,0xe5a0
   14001057a:	(bad)  
   14001057c:	(bad)  
   14001057d:	sub    ch,BYTE PTR [rdx]
   14001057f:	sub    ch,BYTE PTR [rdx]
   140010581:	sub    ch,BYTE PTR [rdx]
   140010583:	sub    ch,BYTE PTR [rdx]
   140010585:	sub    ch,BYTE PTR [rdx]
   140010587:	sub    ch,BYTE PTR [rdx]
   140010589:	sub    ch,BYTE PTR [rdx]
   14001058b:	sub    ch,BYTE PTR [rdx]
   14001058d:	sub    ch,BYTE PTR [rdx]
   14001058f:	sub    ch,BYTE PTR [rdx]
   140010591:	sub    ch,BYTE PTR [rdx]
   140010593:	sub    ch,BYTE PTR [rdx]
   140010595:	sub    ch,BYTE PTR [rdx]
   140010597:	sub    ch,BYTE PTR [rdx]
   140010599:	sub    ch,BYTE PTR [rdx]
   14001059b:	sub    ch,BYTE PTR [rdx]
   14001059d:	sub    ch,BYTE PTR [rdx]
   14001059f:	sub    ch,BYTE PTR [rdx]
   1400105a1:	sub    ch,BYTE PTR [rdx]
   1400105a3:	sub    ch,BYTE PTR [rdx]
   1400105a5:	sub    ch,BYTE PTR [rdx]
   1400105a7:	sub    ch,BYTE PTR [rdx]
   1400105a9:	sub    ch,BYTE PTR [rdx]
   1400105ab:	sub    ch,BYTE PTR [rdx]
   1400105ad:	sub    ch,BYTE PTR [rdx]
   1400105af:	sub    ch,BYTE PTR [rdx]
   1400105b1:	sub    ch,BYTE PTR [rdx]
   1400105b3:	sub    ch,BYTE PTR [rdx]
   1400105b5:	sub    ch,BYTE PTR [rdx]
   1400105b7:	sub    ch,BYTE PTR [rdx]
   1400105b9:	sub    ch,BYTE PTR [rdx]
   1400105bb:	sub    ch,BYTE PTR [rdx]
   1400105bd:	sub    ch,BYTE PTR [rdx]
   1400105bf:	sub    ch,BYTE PTR [rdx]
   1400105c1:	sub    ch,BYTE PTR [rdx]
   1400105c3:	sub    ch,BYTE PTR [rdx]
   1400105c5:	sub    ch,BYTE PTR [rdx]
   1400105c7:	sub    ch,BYTE PTR [rdx]
   1400105c9:	or     eax,0xd2a2a0a
   1400105ce:	or     ch,BYTE PTR [rdx]
   1400105d0:	sub    ah,BYTE PTR [rax]
   1400105d2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400105d4:	jo     0x14001064f
   1400105d6:	jb     0x140010641
   1400105d8:	addr32 push 0x43282074
   1400105de:	sub    DWORD PTR [rax],esp
   1400105e0:	xor    dh,BYTE PTR [rax]
   1400105e2:	xor    DWORD PTR [rip+0x65685420],esi        # 0x1a5695a08
   1400105e8:	and    BYTE PTR [rcx+0x74],dl
   1400105eb:	and    BYTE PTR [rbx+0x6f],al
   1400105ee:	ins    DWORD PTR es:[rdi],dx
   1400105ef:	jo     0x140010652
   1400105f1:	outs   dx,BYTE PTR ds:[rsi]
   1400105f2:	jns    0x140010614
   1400105f4:	rex.WR je 0x14001065b
   1400105f7:	cs or  eax,0x202a2a0a
   1400105fd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400105ff:	outs   dx,BYTE PTR ds:[rsi]
   140010600:	je     0x140010663
   140010602:	movsxd esi,DWORD PTR [rdx+rdi*1+0x20]
   140010606:	push   0x3a707474
   14001060b:	(bad)  
   14001060c:	(bad)  
   14001060d:	ja     0x140010686
   14001060f:	ja     0x14001063f
   140010611:	jno    0x140010687
   140010613:	imul   ebp,DWORD PTR cs:[rdi+0x2f],0x6563696c
   14001061b:	outs   dx,BYTE PTR ds:[rsi]
   14001061c:	jae    0x140010687
   14001061e:	outs   dx,BYTE PTR ds:[rsi]
   14001061f:	addr32 (bad) 
   140010621:	or     eax,0xd2a2a0a
   140010626:	or     ch,BYTE PTR [rdx]
   140010628:	sub    ah,BYTE PTR [rax]
   14001062a:	push   rsp
   14001062b:	push   0x66207369
   140010630:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x70207369
   140010638:	(bad)  
   140010639:	jb     0x1400106af
   14001063b:	and    BYTE PTR [rdi+0x66],ch
   14001063e:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010642:	and    BYTE PTR [rcx+0x74],dl
   140010645:	push   rcx
   140010646:	ins    DWORD PTR es:[rdi],dx
   140010647:	ins    BYTE PTR es:[rdi],dx
   140010648:	and    BYTE PTR [rbp+0x6f],ch
   14001064b:	fs jne 0x1400106ba
   14001064e:	and    BYTE PTR gs:[rdi+0x66],ch
   140010652:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010656:	and    BYTE PTR [rcx+0x74],dl
   140010659:	and    BYTE PTR [rdi+rbp*2+0x6f],dl
   14001065d:	ins    BYTE PTR es:[rdi],dx
   14001065e:	imul   ebp,DWORD PTR [rcx+0x74],0x2e
   140010662:	or     eax,0xd2a2a0a
   140010667:	or     ch,BYTE PTR [rdx]
   140010669:	sub    ah,BYTE PTR [rax]
   14001066b:	and    al,0x51
   14001066d:	push   rsp
   14001066e:	pop    rdi
   14001066f:	rex.X
   140010670:	rex.RB
   140010671:	rex.RXB
   140010672:	rex.WB
   140010673:	rex.WRX pop rdi
   140010675:	rex.WR
   140010676:	rex.WB
   140010677:	rex.XB
   140010678:	rex.RB
   140010679:	rex.WRX push rbx
   14001067b:	cmp    r9b,BYTE PTR [r15+rax*2+0x50]
   140010680:	rex.WR xor r14b,BYTE PTR [rcx]
   140010683:	and    al,0xd
   140010685:	or     ch,BYTE PTR [rdx]
   140010687:	sub    ah,BYTE PTR [rax]
   140010689:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001068b:	ins    DWORD PTR es:[rdi],dx
   14001068c:	ins    DWORD PTR es:[rdi],dx
   14001068d:	gs jb  0x1400106f3
   140010690:	imul   esp,DWORD PTR [rcx+0x6c],0x63694c20
   140010697:	outs   dx,BYTE PTR gs:[rsi]
   140010699:	jae    0x140010700
   14001069b:	and    BYTE PTR [rbp+0x73],dl
   14001069e:	(bad)  
   14001069f:	addr32 gs or eax,0x202a2a0a
   1400106a6:	imul   r12,QWORD PTR [rbx+0x65],0x6565736e
   1400106ae:	jae    0x1400106d0
   1400106b0:	push   0x69646c6f
   1400106b5:	outs   dx,BYTE PTR ds:[rsi]
   1400106b6:	and    BYTE PTR [esi+0x61],dh
   1400106ba:	ins    BYTE PTR es:[rdi],dx
   1400106bb:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x656d6d6f
   1400106c3:	jb     0x140010728
   1400106c5:	imul   esp,DWORD PTR [rcx+0x6c],0x20745120
   1400106cc:	ins    BYTE PTR es:[rdi],dx
   1400106cd:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
   1400106d4:	and    BYTE PTR [rbp+0x61],ch
   1400106d7:	jns    0x1400106f9
   1400106d9:	jne    0x14001074e
   1400106db:	and    BYTE PTR gs:[rax+rbp*2+0x69],dh
   1400106e0:	jae    0x140010702
   1400106e2:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e69
   1400106e9:	or     eax,0x202a2a0a
   1400106ee:	(bad)  
   1400106ef:	movsxd esp,DWORD PTR [rbx+0x6f]
   1400106f2:	jb     0x140010758
   1400106f4:	(bad)  
   1400106f5:	outs   dx,BYTE PTR ds:[rsi]
   1400106f6:	movsxd esp,DWORD PTR [rbp+0x20]
   1400106f9:	ja     0x140010764
   1400106fb:	je     0x140010765
   1400106fd:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010701:	and    BYTE PTR [rbx+0x6f],ah
   140010704:	ins    DWORD PTR es:[rdi],dx
   140010705:	ins    DWORD PTR es:[rdi],dx
   140010706:	gs jb  0x14001076c
   140010709:	imul   esp,DWORD PTR [rcx+0x6c],0x63696c20
   140010710:	outs   dx,BYTE PTR gs:[rsi]
   140010712:	jae    0x140010779
   140010714:	and    BYTE PTR [rcx+0x67],ah
   140010717:	jb     0x14001077e
   140010719:	gs ins DWORD PTR es:[rdi],dx
   14001071b:	outs   dx,BYTE PTR gs:[rsi]
   14001071d:	je     0x14001073f
   14001071f:	jo     0x140010793
   140010721:	outs   dx,DWORD PTR ds:[rsi]
   140010722:	jbe    0x14001078d
   140010724:	fs gs and BYTE PTR fs:[rdi+0x69],dh
   14001072a:	je     0x140010794
   14001072c:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010730:	or     eax,0x202a2a0a
   140010735:	push   rbx
   140010736:	outs   dx,DWORD PTR ds:[rsi]
   140010737:	data16 je 0x1400107b1
   14001073a:	(bad)  
   14001073b:	jb     0x1400107a2
   14001073d:	and    BYTE PTR [rdi+0x72],ch
   140010740:	sub    al,0x20
   140010742:	(bad)  
   140010743:	ins    BYTE PTR es:[rdi],dx
   140010744:	je     0x1400107ab
   140010746:	jb     0x1400107b6
   140010748:	(bad)  
   140010749:	je     0x1400107b4
   14001074b:	jbe    0x1400107b2
   14001074d:	ins    BYTE PTR es:[rdi],dx
   14001074e:	jns    0x14001077c
   140010750:	and    BYTE PTR [rcx+0x6e],ch
   140010753:	and    BYTE PTR [rcx+0x63],ah
   140010756:	movsxd ebp,DWORD PTR [rdi+0x72]
   140010759:	fs (bad) 
   14001075b:	outs   dx,BYTE PTR ds:[rsi]
   14001075c:	movsxd esp,DWORD PTR [rbp+0x20]
   14001075f:	ja     0x1400107ca
   140010761:	je     0x1400107cb
   140010763:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010767:	and    BYTE PTR [rbp+riz*2+0x72],dh
   14001076b:	ins    DWORD PTR es:[rdi],dx
   14001076c:	jae    0x14001078e
   14001076e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140010771:	je     0x1400107d4
   140010773:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692064
   14001077a:	or     eax,0x202a2a0a
   14001077f:	(bad)  
   140010780:	and    BYTE PTR [rdi+0x72],dh
   140010783:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6761206e
   14001078b:	jb     0x1400107f2
   14001078d:	gs ins DWORD PTR es:[rdi],dx
   14001078f:	outs   dx,BYTE PTR gs:[rsi]
   140010791:	je     0x1400107b3
   140010793:	(bad)  
   140010794:	gs je  0x14001080e
   140010797:	gs outs dx,BYTE PTR gs:[rsi]
   14001079a:	and    BYTE PTR [rcx+0x6f],bh
   14001079d:	jne    0x1400107bf
   14001079f:	(bad)  
   1400107a0:	outs   dx,BYTE PTR ds:[rsi]
   1400107a1:	and    BYTE PTR fs:[rax+rbp*2+0x65],dl
   1400107a6:	and    BYTE PTR [rcx+0x74],dl
   1400107a9:	and    BYTE PTR [rbx+0x6f],al
   1400107ac:	ins    DWORD PTR es:[rdi],dx
   1400107ad:	jo     0x140010810
   1400107af:	outs   dx,BYTE PTR ds:[rsi]
   1400107b0:	jns    0x1400107e0
   1400107b2:	and    BYTE PTR [rsi+0x6f],al
   1400107b5:	jb     0x1400107d7
   1400107b7:	ins    BYTE PTR es:[rdi],dx
   1400107b8:	imul   esp,DWORD PTR [rbx+0x65],0x6e69736e
   1400107bf:	and    BYTE PTR [ebp+eiz*2+0x72],dh
   1400107c4:	ins    DWORD PTR es:[rdi],dx
   1400107c5:	jae    0x1400107d4
   1400107c7:	or     ch,BYTE PTR [rdx]
   1400107c9:	sub    ah,BYTE PTR [rax]
   1400107cb:	(bad)  
   1400107cc:	outs   dx,BYTE PTR ds:[rsi]
   1400107cd:	and    BYTE PTR fs:[rbx+0x6f],ah
   1400107d1:	outs   dx,BYTE PTR ds:[rsi]
   1400107d2:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x7320736e
   1400107db:	gs and BYTE PTR gs:[rax+0x74],ch
   1400107e0:	je     0x140010852
   1400107e2:	cmp    ch,BYTE PTR [rdi]
   1400107e4:	(bad)  
   1400107e5:	ja     0x14001085e
   1400107e7:	ja     0x140010817
   1400107e9:	jno    0x14001085f
   1400107eb:	imul   ebp,DWORD PTR cs:[rdi+0x2f],0x6d726574
   1400107f3:	jae    0x140010822
   1400107f5:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400107f8:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x202e736e
   140010801:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140010803:	jb     0x140010825
   140010805:	data16 jne 0x14001087a
   140010808:	je     0x140010872
   14001080a:	gs jb  0x14001081a
   14001080d:	or     ch,BYTE PTR [rdx]
   14001080f:	sub    ah,BYTE PTR [rax]
   140010811:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
   140010818:	je     0x140010883
   14001081a:	outs   dx,DWORD PTR ds:[rsi]
   14001081b:	outs   dx,BYTE PTR ds:[rsi]
   14001081c:	and    BYTE PTR [rbp+0x73],dh
   14001081f:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
   140010824:	and    BYTE PTR [rbx+0x6f],ah
   140010827:	outs   dx,BYTE PTR ds:[rsi]
   140010828:	je     0x14001088b
   14001082a:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14001082e:	outs   dx,DWORD PTR ds:[rsi]
   14001082f:	jb     0x14001089e
   140010831:	and    BYTE PTR [rcx+0x74],ah
   140010834:	and    BYTE PTR [rax+0x74],ch
   140010837:	je     0x1400108a9
   140010839:	cmp    ch,BYTE PTR [rdi]
   14001083b:	(bad)  
   14001083c:	ja     0x1400108b5
   14001083e:	ja     0x14001086e
   140010840:	jno    0x1400108b6
   140010842:	imul   ebp,DWORD PTR cs:[rdi+0x2f],0x746e6f63
   14001084a:	(bad)  
   14001084b:	movsxd esi,DWORD PTR [rbp+rbp*1+0x75]
   14001084f:	jae    0x14001087f
   140010851:	or     eax,0xd2a2a0a
   140010856:	or     ch,BYTE PTR [rdx]
   140010858:	sub    ah,BYTE PTR [rax]
   14001085a:	rex.RXB
   14001085b:	rex.WRX push rbp
   14001085d:	and    BYTE PTR [rbp+riz*2+0x73],cl
   140010861:	jae    0x1400108c8
   140010863:	jb     0x140010885
   140010865:	rex.RXB
   140010866:	outs   dx,BYTE PTR gs:[rsi]
   140010868:	gs jb  0x1400108cc
   14001086b:	ins    BYTE PTR es:[rdi],dx
   14001086c:	and    BYTE PTR [rax+0x75],dl
   14001086f:	(bad)  
   140010870:	ins    BYTE PTR es:[rdi],dx
   140010871:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
   140010878:	outs   dx,BYTE PTR ds:[rsi]
   140010879:	jae    0x1400108e0
   14001087b:	and    BYTE PTR [rbp+0x73],dl
   14001087e:	(bad)  
   14001087f:	addr32 gs or eax,0x202a2a0a
   140010886:	rex.B ins BYTE PTR es:[rdi],dx
   140010888:	je     0x1400108ef
   14001088a:	jb     0x1400108fa
   14001088c:	(bad)  
   14001088d:	je     0x1400108f8
   14001088f:	jbe    0x1400108f6
   140010891:	ins    BYTE PTR es:[rdi],dx
   140010892:	jns    0x1400108c0
   140010894:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140010898:	jae    0x1400108ba
   14001089a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616d
   1400108a1:	jns    0x1400108c3
   1400108a3:	(bad)  
   1400108a4:	and    BYTE PTR gs:[rbp+0x73],dh
   1400108a8:	gs and BYTE PTR fs:[rbp+0x6e],dh
   1400108ad:	fs gs jb 0x1400108d1
   1400108b1:	je     0x14001091b
   1400108b3:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
   1400108b8:	ins    DWORD PTR es:[rdi],dx
   1400108b9:	jae    0x1400108db
   1400108bb:	outs   dx,DWORD PTR ds:[rsi]
   1400108bc:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
   1400108c1:	and    BYTE PTR [rdi+0x4e],al
   1400108c4:	push   rbp
   1400108c5:	and    BYTE PTR [rbp+riz*2+0x73],cl
   1400108c9:	jae    0x140010930
   1400108cb:	jb     0x1400108da
   1400108cd:	or     ch,BYTE PTR [rdx]
   1400108cf:	sub    ah,BYTE PTR [rax]
   1400108d1:	rex.RXB
   1400108d2:	outs   dx,BYTE PTR gs:[rsi]
   1400108d4:	gs jb  0x140010938
   1400108d7:	ins    BYTE PTR es:[rdi],dx
   1400108d8:	and    BYTE PTR [rax+0x75],dl
   1400108db:	(bad)  
   1400108dc:	ins    BYTE PTR es:[rdi],dx
   1400108dd:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
   1400108e4:	outs   dx,BYTE PTR ds:[rsi]
   1400108e5:	jae    0x14001094c
   1400108e7:	and    BYTE PTR [rsi+0x65],dh
   1400108ea:	jb     0x14001095f
   1400108ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x312e3220
   1400108f3:	and    BYTE PTR [rdi+0x72],ch
   1400108f6:	and    BYTE PTR [rsi+0x65],dh
   1400108f9:	jb     0x14001096e
   1400108fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x61203320
   140010902:	jae    0x140010924
   140010904:	jo     0x14001097b
   140010906:	(bad)  
   140010907:	ins    BYTE PTR es:[rdi],dx
   140010908:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
   14001090f:	jns    0x140010931
   140010911:	je     0x14001097b
   140010913:	and    BYTE PTR gs:[rsi+0x72],al
   140010917:	gs gs or eax,0x202a2a0a
   14001091e:	push   rbx
   14001091f:	outs   dx,DWORD PTR ds:[rsi]
   140010920:	data16 je 0x14001099a
   140010923:	(bad)  
   140010924:	jb     0x14001098b
   140010926:	and    BYTE PTR [rsi+0x6f],al
   140010929:	jne    0x140010999
   14001092b:	fs (bad) 
   14001092d:	je     0x140010998
   14001092f:	outs   dx,DWORD PTR ds:[rsi]
   140010930:	outs   dx,BYTE PTR ds:[rsi]
   140010931:	and    BYTE PTR [rcx+0x6e],ah
   140010934:	and    BYTE PTR fs:[rcx+0x70],ah
   140010938:	jo     0x14001099f
   14001093a:	(bad)  
   14001093b:	jb     0x1400109a6
   14001093d:	outs   dx,BYTE PTR ds:[rsi]
   14001093e:	and    BYTE PTR [ecx+0x6e],ch
   140010942:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010946:	and    BYTE PTR [rsi+0x69],ah
   140010949:	ins    BYTE PTR es:[rdi],dx
   14001094a:	and    BYTE PTR gs:[rcx+rcx*2+0x43],cl
   14001094f:	rex.RB
   140010950:	rex.WRX push rbx
   140010952:	rex.RB
   140010953:	cs rex.WR
   140010955:	rex.RXB push r8
   140010957:	rex.WR jbe 0x14001098c
   14001095a:	xor    DWORD PTR [rax],esp
   14001095c:	(bad)  
   14001095d:	outs   dx,BYTE PTR ds:[rsi]
   14001095e:	fs or  eax,0x202a2a0a
   140010964:	rex.WR
   140010965:	rex.WB
   140010966:	rex.XB
   140010967:	rex.RB
   140010968:	rex.WRX push rbx
   14001096a:	rex.RB
   14001096b:	cs rex.WR
   14001096d:	rex.RXB push r8
   14001096f:	rex.WR jbe 0x1400109a5
   140010972:	and    BYTE PTR [rcx+0x6e],ch
   140010975:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140010979:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14001097e:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010982:	and    BYTE PTR [rax+0x61],dh
   140010985:	movsxd ebp,DWORD PTR [rbx+0x61]
   140010988:	imul   ebp,DWORD PTR [esi+0x67],0x20666f20
   140010990:	je     0x1400109fa
   140010992:	imul   esi,DWORD PTR [rbx+0x20],0x656c6966
   140010999:	and    BYTE PTR cs:[rax+0x6c],dl
   14001099d:	gs (bad) 
   14001099f:	jae    0x140010a06
   1400109a1:	and    BYTE PTR [rdx+0x65],dh
   1400109a4:	jbe    0x140010a0f
   1400109a6:	gs ja  0x1400109c9
   1400109a9:	je     0x140010a13
   1400109ab:	gs or  eax,0x202a2a0a
   1400109b1:	outs   dx,WORD PTR ds:[rsi]
   1400109b3:	ins    BYTE PTR es:[rdi],dx
   1400109b4:	ins    BYTE PTR es:[rdi],dx
   1400109b5:	outs   dx,DWORD PTR ds:[rsi]
   1400109b6:	ja     0x140010a21
   1400109b8:	outs   dx,BYTE PTR ds:[rsi]
   1400109b9:	and    BYTE PTR [ecx+0x6e],ch
   1400109bd:	outs   dx,WORD PTR ds:[rsi]
   1400109bf:	jb     0x140010a2e
   1400109c1:	(bad)  
   1400109c2:	je     0x140010a2d
   1400109c4:	outs   dx,DWORD PTR ds:[rsi]
   1400109c5:	outs   dx,BYTE PTR ds:[rsi]
   1400109c6:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400109ca:	outs   dx,BYTE PTR gs:[rsi]
   1400109cc:	jae    0x140010a43
   1400109ce:	jb     0x140010a35
   1400109d0:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400109d4:	and    BYTE PTR [rdi+0x4e],al
   1400109d7:	push   rbp
   1400109d8:	and    BYTE PTR [rbp+riz*2+0x73],cl
   1400109dc:	jae    0x140010a43
   1400109de:	jb     0x140010a00
   1400109e0:	rex.RXB
   1400109e1:	outs   dx,BYTE PTR gs:[rsi]
   1400109e3:	gs jb  0x140010a47
   1400109e6:	ins    BYTE PTR es:[rdi],dx
   1400109e7:	and    BYTE PTR [rax+0x75],dl
   1400109ea:	(bad)  
   1400109eb:	ins    BYTE PTR es:[rdi],dx
   1400109ec:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
   1400109f3:	outs   dx,BYTE PTR ds:[rsi]
   1400109f4:	jae    0x140010a5b
   1400109f6:	or     eax,0x202a2a0a
   1400109fb:	jb     0x140010a62
   1400109fd:	jno    0x140010a74
   1400109ff:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   140010a06:	jae    0x140010a28
   140010a08:	ja     0x140010a73
   140010a0a:	ins    BYTE PTR es:[rdi],dx
   140010a0b:	ins    BYTE PTR es:[rdi],dx
   140010a0c:	and    BYTE PTR [rdx+0x65],ah
   140010a0f:	and    BYTE PTR [rbp+0x65],ch
   140010a12:	je     0x140010a4e
   140010a14:	and    BYTE PTR [rax+0x74],ch
   140010a17:	je     0x140010a89
   140010a19:	jae    0x140010a55
   140010a1b:	(bad)  
   140010a1c:	(bad)  
   140010a1d:	ja     0x140010a96
   140010a1f:	ja     0x140010a4f
   140010a21:	outs   dx,BYTE PTR ds:[esi]
   140010a23:	jne    0x140010a53
   140010a25:	outs   dx,DWORD PTR ds:[rsi]
   140010a26:	jb     0x140010a8f
   140010a28:	(bad)  
   140010a29:	ins    BYTE PTR es:[rdi],dx
   140010a2a:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
   140010a31:	(bad)  
   140010a32:	ins    BYTE PTR es:[rdi],dx
   140010a33:	addr32 jo 0x140010aa2
   140010a36:	cs push 0x206c6d74
   140010a3c:	(bad)  
   140010a3d:	outs   dx,BYTE PTR ds:[rsi]
   140010a3e:	fs or  eax,0x202a2a0a
   140010a44:	push   0x3a707474
   140010a49:	(bad)  
   140010a4a:	(bad)  
   140010a4b:	ja     0x140010ac4
   140010a4d:	ja     0x140010a7d
   140010a4f:	outs   dx,BYTE PTR ds:[esi]
   140010a51:	jne    0x140010a81
   140010a53:	outs   dx,DWORD PTR ds:[rsi]
   140010a54:	jb     0x140010abd
   140010a56:	(bad)  
   140010a57:	ins    BYTE PTR es:[rdi],dx
   140010a58:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
   140010a5f:	(bad)  
   140010a60:	outs   dx,DWORD PTR ds:[rsi]
   140010a61:	ins    BYTE PTR es:[rdi],dx
   140010a62:	fs sub eax,0x6563696c
   140010a68:	outs   dx,BYTE PTR ds:[rsi]
   140010a69:	jae    0x140010ad0
   140010a6b:	jae    0x140010a9c
   140010a6d:	ins    BYTE PTR es:[rdi],dx
   140010a6e:	addr32 jo 0x140010add
   140010a71:	sub    eax,0x2e312e32
   140010a76:	push   0x2e6c6d74
   140010a7b:	or     eax,0xd2a2a0a
   140010a80:	or     ch,BYTE PTR [rdx]
   140010a82:	sub    ah,BYTE PTR [rax]
   140010a84:	rex.B jae 0x140010aa7
   140010a87:	(bad)  
   140010a88:	and    BYTE PTR [rbx+0x70],dh
   140010a8b:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
   140010a8f:	ins    BYTE PTR es:[rdi],dx
   140010a90:	and    BYTE PTR [rbp+0x78],ah
   140010a93:	movsxd esp,DWORD PTR [rbp+0x70]
   140010a96:	je     0x140010b01
   140010a98:	outs   dx,DWORD PTR ds:[rsi]
   140010a99:	outs   dx,BYTE PTR ds:[rsi]
   140010a9a:	sub    al,0x20
   140010a9c:	push   rsp
   140010a9d:	push   0x74512065
   140010aa2:	and    BYTE PTR [rbx+0x6f],al
   140010aa5:	ins    DWORD PTR es:[rdi],dx
   140010aa6:	jo     0x140010b09
   140010aa8:	outs   dx,BYTE PTR ds:[rsi]
   140010aa9:	jns    0x140010acb
   140010aab:	imul   esi,DWORD PTR [esi+0x65],0x6f792073
   140010ab3:	jne    0x140010ad5
   140010ab5:	movsxd esp,DWORD PTR [rbp+0x72]
   140010ab8:	je     0x140010b1b
   140010aba:	imul   ebp,DWORD PTR [rsi+0x20],0x69646461
   140010ac1:	je     0x140010b2c
   140010ac3:	outs   dx,DWORD PTR ds:[rsi]
   140010ac4:	outs   dx,BYTE PTR ds:[rsi]
   140010ac5:	(bad)  
   140010ac6:	ins    BYTE PTR es:[rdi],dx
   140010ac7:	or     eax,0x202a2a0a
   140010acc:	jb     0x140010b37
   140010ace:	addr32 push 0x202e7374
   140010ad4:	push   rsp
   140010ad5:	push   0x20657365
   140010ada:	jb     0x140010b45
   140010adc:	addr32 push 0x61207374
   140010ae2:	jb     0x140010b49
   140010ae4:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140010ae8:	movsxd esi,DWORD PTR [rdx+0x69]
   140010aeb:	(bad)  
   140010aec:	gs and BYTE PTR fs:[rcx+0x6e],ch
   140010af1:	and    BYTE PTR [rax+rbp*2+0x65],dl
   140010af5:	and    BYTE PTR [rcx+0x74],dl
   140010af8:	and    BYTE PTR [rbx+0x6f],al
   140010afb:	ins    DWORD PTR es:[rdi],dx
   140010afc:	jo     0x140010b5f
   140010afe:	outs   dx,BYTE PTR ds:[rsi]
   140010aff:	jns    0x140010b21
   140010b01:	rex.WR
   140010b02:	rex.RXB push r8
   140010b04:	rex.WR and BYTE PTR [rbp+0x78],r8b
   140010b08:	movsxd esp,DWORD PTR [rbp+0x70]
   140010b0b:	je     0x140010b76
   140010b0d:	outs   dx,DWORD PTR ds:[rsi]
   140010b0e:	outs   dx,BYTE PTR ds:[rsi]
   140010b0f:	or     eax,0x202a2a0a
   140010b14:	jbe    0x140010b7b
   140010b16:	jb     0x140010b8b
   140010b18:	imul   ebp,DWORD PTR [rdi+0x6e],0x312e3120
   140010b1f:	sub    al,0x20
   140010b21:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
   140010b28:	and    BYTE PTR fs:[rcx+0x6e],ch
   140010b2c:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140010b30:	and    BYTE PTR [rsi+0x69],ah
   140010b33:	ins    BYTE PTR es:[rdi],dx
   140010b34:	and    BYTE PTR gs:[rdi+rax*2+0x50],cl
   140010b39:	rex.WR pop rdi
   140010b3b:	rex.RB pop r8
   140010b3d:	rex.XB
   140010b3e:	rex.RB push r8
   140010b40:	push   rsp
   140010b41:	rex.WB
   140010b42:	rex.WRXB
   140010b43:	rex.WRX
   140010b44:	cs je  0x140010bbf
   140010b47:	je     0x140010b69
   140010b49:	imul   ebp,DWORD PTR [rsi+0x20],0x73696874
   140010b50:	and    BYTE PTR [rax+0x61],dh
   140010b53:	movsxd ebp,DWORD PTR [rbx+0x61]
   140010b56:	addr32 gs cs or eax,0xd2a2a0a
   140010b5e:	or     ch,BYTE PTR [rdx]
   140010b60:	sub    ah,BYTE PTR [rax]
   140010b62:	and    al,0x51
   140010b64:	push   rsp
   140010b65:	pop    rdi
   140010b66:	rex.RB
   140010b67:	rex.WRX
   140010b68:	rex.R pop rdi
   140010b6a:	rex.WR
   140010b6b:	rex.WB
   140010b6c:	rex.XB
   140010b6d:	rex.RB
   140010b6e:	rex.WRX push rbx
   140010b70:	rex.RB and al,0xd
   140010b73:	or     ch,BYTE PTR [rdx]
   140010b75:	sub    cl,BYTE PTR [rip+0x2a2a2a0a]        # 0x16a2b3585
   140010b7b:	sub    ch,BYTE PTR [rdx]
   140010b7d:	sub    ch,BYTE PTR [rdx]
   140010b7f:	sub    ch,BYTE PTR [rdx]
   140010b81:	sub    ch,BYTE PTR [rdx]
   140010b83:	sub    ch,BYTE PTR [rdx]
   140010b85:	sub    ch,BYTE PTR [rdx]
   140010b87:	sub    ch,BYTE PTR [rdx]
   140010b89:	sub    ch,BYTE PTR [rdx]
   140010b8b:	sub    ch,BYTE PTR [rdx]
   140010b8d:	sub    ch,BYTE PTR [rdx]
   140010b8f:	sub    ch,BYTE PTR [rdx]
   140010b91:	sub    ch,BYTE PTR [rdx]
   140010b93:	sub    ch,BYTE PTR [rdx]
   140010b95:	sub    ch,BYTE PTR [rdx]
   140010b97:	sub    ch,BYTE PTR [rdx]
   140010b99:	sub    ch,BYTE PTR [rdx]
   140010b9b:	sub    ch,BYTE PTR [rdx]
   140010b9d:	sub    ch,BYTE PTR [rdx]
   140010b9f:	sub    ch,BYTE PTR [rdx]
   140010ba1:	sub    ch,BYTE PTR [rdx]
   140010ba3:	sub    ch,BYTE PTR [rdx]
   140010ba5:	sub    ch,BYTE PTR [rdx]
   140010ba7:	sub    ch,BYTE PTR [rdx]
   140010ba9:	sub    ch,BYTE PTR [rdx]
   140010bab:	sub    ch,BYTE PTR [rdx]
   140010bad:	sub    ch,BYTE PTR [rdx]
   140010baf:	sub    ch,BYTE PTR [rdx]
   140010bb1:	sub    ch,BYTE PTR [rdx]
   140010bb3:	sub    ch,BYTE PTR [rdx]
   140010bb5:	sub    ch,BYTE PTR [rdx]
   140010bb7:	sub    ch,BYTE PTR [rdx]
   140010bb9:	sub    ch,BYTE PTR [rdx]
   140010bbb:	sub    ch,BYTE PTR [rdx]
   140010bbd:	sub    ch,BYTE PTR [rdx]
   140010bbf:	sub    ch,BYTE PTR [rdx]
   140010bc1:	sub    ch,BYTE PTR [rdx]
   140010bc3:	sub    ch,BYTE PTR [rdi]
   140010bc5:	or     eax,0x690a0d0a
   140010bca:	ins    DWORD PTR es:[rdi],dx
   140010bcb:	jo     0x140010c3c
   140010bcd:	jb     0x140010c43
   140010bcf:	and    BYTE PTR [rcx+0x74],dl
   140010bd2:	push   rcx
   140010bd3:	jne    0x140010c3e
   140010bd5:	movsxd ebp,DWORD PTR [rbx+0x20]
   140010bd8:	xor    ch,BYTE PTR [rsi]
   140010bda:	xor    BYTE PTR [rip+0x490a0d0a],cl        # 0x1890b18ea
   140010be0:	je     0x140010c47
   140010be2:	ins    DWORD PTR es:[rdi],dx
   140010be3:	and    BYTE PTR [rbx+0xd],bh
   140010be6:	or     ah,BYTE PTR [rax]
   140010be8:	and    BYTE PTR [rax],ah
   140010bea:	and    BYTE PTR [rcx+0x64],ch
   140010bed:	cmp    ah,BYTE PTR [rax]
   140010bef:	jb     0x140010c60
   140010bf1:	outs   dx,DWORD PTR ds:[rsi]
   140010bf2:	je     0x140010c01
   140010bf4:	or     ah,BYTE PTR [rax]
   140010bf6:	and    BYTE PTR [rax],ah
   140010bf8:	and    BYTE PTR [rdi+0x69],dh
   140010bfb:	fs je  0x140010c66
   140010bfe:	cmp    ah,BYTE PTR [rax]
   140010c00:	and    BYTE PTR [rax],bh
   140010c02:	xor    BYTE PTR [rax],dh
   140010c04:	or     eax,0x2020200a
   140010c09:	and    BYTE PTR [rax+0x65],ch
   140010c0c:	imul   esp,DWORD PTR [rdi+0x68],0x31203a74
   140010c13:	xor    BYTE PTR [rax],dh
   140010c15:	or     eax,0x200a0d0a
   140010c1a:	and    BYTE PTR [rax],ah
   140010c1c:	and    BYTE PTR [rdx+0x65],dl
   140010c1f:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140010c23:	ins    BYTE PTR es:[edi],dx
   140010c25:	and    BYTE PTR gs:[rbx+0xd],bh
   140010c29:	or     ah,BYTE PTR [rax]
   140010c2b:	and    BYTE PTR [rax],ah
   140010c2d:	and    BYTE PTR [rax],ah
   140010c2f:	and    BYTE PTR [rax],ah
   140010c31:	and    BYTE PTR [rdi+0x72],ah
   140010c34:	(bad)  
   140010c35:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x47203a74
   140010c3d:	jb     0x140010ca0
   140010c3f:	imul   esp,DWORD PTR fs:[rbp+0x6e],0xd7b2074
   140010c47:	or     ah,BYTE PTR [rax]
   140010c49:	and    BYTE PTR [rax],ah
   140010c4b:	and    BYTE PTR [rax],ah
   140010c4d:	and    BYTE PTR [rax],ah
   140010c4f:	and    BYTE PTR [rax],ah
   140010c51:	and    BYTE PTR [rax],ah
   140010c53:	and    BYTE PTR [rdi+0x72],al
   140010c56:	(bad)  
   140010c57:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x6f745374
   140010c5f:	jo     0x140010c81
   140010c61:	jnp    0x140010c70
   140010c63:	or     ah,BYTE PTR [rax]
   140010c65:	and    BYTE PTR [rax],ah
   140010c67:	and    BYTE PTR [rax],ah
   140010c69:	and    BYTE PTR [rax],ah
   140010c6b:	and    BYTE PTR [rax],ah
   140010c6d:	and    BYTE PTR [rax],ah
   140010c6f:	and    BYTE PTR [rax],ah
   140010c71:	and    BYTE PTR [rax],ah
   140010c73:	and    BYTE PTR [rax+0x6f],dh
   140010c76:	jae    0x140010ce1
   140010c78:	je     0x140010ce3
   140010c7a:	outs   dx,DWORD PTR ds:[rsi]
   140010c7b:	outs   dx,BYTE PTR ds:[rsi]
   140010c7c:	cmp    ah,BYTE PTR [rax]
   140010c7e:	xor    BYTE PTR [rip+0x2020200a],cl        # 0x160212c8e
   140010c84:	and    BYTE PTR [rax],ah
   140010c86:	and    BYTE PTR [rax],ah
   140010c88:	and    BYTE PTR [rax],ah
   140010c8a:	and    BYTE PTR [rax],ah
   140010c8c:	and    BYTE PTR [rax],ah
   140010c8e:	and    BYTE PTR [rax],ah
   140010c90:	and    BYTE PTR [rbx+0x6f],ah
   140010c93:	ins    BYTE PTR es:[rdi],dx
   140010c94:	outs   dx,DWORD PTR ds:[rsi]
   140010c95:	jb     0x140010cd1
   140010c97:	and    BYTE PTR [rdx],ah
   140010c99:	and    esp,DWORD PTR [rcx+0x61]
   140010c9c:	(bad)  
   140010c9d:	(bad)  
   140010c9e:	(bad)  
   140010c9f:	(bad)  
   140010ca0:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160212cb0
   140010ca6:	and    BYTE PTR [rax],ah
   140010ca8:	and    BYTE PTR [rax],ah
   140010caa:	and    BYTE PTR [rax],ah
   140010cac:	and    BYTE PTR [rax],ah
   140010cae:	and    BYTE PTR [rbp+0xd],bh
   140010cb1:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160212cc1
   140010cb7:	and    BYTE PTR [rax],ah
   140010cb9:	and    BYTE PTR [rax],ah
   140010cbb:	and    BYTE PTR [rax],ah
   140010cbd:	and    BYTE PTR [rax],ah
   140010cbf:	and    BYTE PTR [rdi+0x72],al
   140010cc2:	(bad)  
   140010cc3:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x6f745374
   140010ccb:	jo     0x140010ced
   140010ccd:	jnp    0x140010cdc
   140010ccf:	or     ah,BYTE PTR [rax]
   140010cd1:	and    BYTE PTR [rax],ah
   140010cd3:	and    BYTE PTR [rax],ah
   140010cd5:	and    BYTE PTR [rax],ah
   140010cd7:	and    BYTE PTR [rax],ah
   140010cd9:	and    BYTE PTR [rax],ah
   140010cdb:	and    BYTE PTR [rax],ah
   140010cdd:	and    BYTE PTR [rax],ah
   140010cdf:	and    BYTE PTR [rax+0x6f],dh
   140010ce2:	jae    0x140010d4d
   140010ce4:	je     0x140010d4f
   140010ce6:	outs   dx,DWORD PTR ds:[rsi]
   140010ce7:	outs   dx,BYTE PTR ds:[rsi]
   140010ce8:	cmp    ah,BYTE PTR [rax]
   140010cea:	xor    BYTE PTR [rsi],ch
   140010cec:	xor    esi,DWORD PTR [rax+rsi*1]
   140010cef:	or     eax,0x2020200a
   140010cf4:	and    BYTE PTR [rax],ah
   140010cf6:	and    BYTE PTR [rax],ah
   140010cf8:	and    BYTE PTR [rax],ah
   140010cfa:	and    BYTE PTR [rax],ah
   140010cfc:	and    BYTE PTR [rax],ah
   140010cfe:	and    BYTE PTR [rax],ah
   140010d00:	and    BYTE PTR [rbx+0x6f],ah
   140010d03:	ins    BYTE PTR es:[rdi],dx
   140010d04:	outs   dx,DWORD PTR ds:[rsi]
   140010d05:	jb     0x140010d41
   140010d07:	and    BYTE PTR [rdx],ah
   140010d09:	and    esp,DWORD PTR [rcx+0x34]
   140010d0c:	(bad)  
   140010d0d:	xor    al,0x61
   140010d0f:	xor    al,0x22
   140010d11:	or     eax,0x2020200a
   140010d16:	and    BYTE PTR [rax],ah
   140010d18:	and    BYTE PTR [rax],ah
   140010d1a:	and    BYTE PTR [rax],ah
   140010d1c:	and    BYTE PTR [rax],ah
   140010d1e:	and    BYTE PTR [rbp+0xd],bh
   140010d21:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160212d31
   140010d27:	and    BYTE PTR [rax],ah
   140010d29:	and    BYTE PTR [rax],ah
   140010d2b:	and    BYTE PTR [rax],ah
   140010d2d:	and    BYTE PTR [rax],ah
   140010d2f:	and    BYTE PTR [rdi+0x72],al
   140010d32:	(bad)  
   140010d33:	imul   esp,DWORD PTR fs:[rbp+0x6e],0x6f745374
   140010d3b:	jo     0x140010d5d
   140010d3d:	jnp    0x140010d4c
   140010d3f:	or     ah,BYTE PTR [rax]
   140010d41:	and    BYTE PTR [rax],ah
   140010d43:	and    BYTE PTR [rax],ah
   140010d45:	and    BYTE PTR [rax],ah
   140010d47:	and    BYTE PTR [rax],ah
   140010d49:	and    BYTE PTR [rax],ah
   140010d4b:	and    BYTE PTR [rax],ah
   140010d4d:	and    BYTE PTR [rax],ah
   140010d4f:	and    BYTE PTR [rax+0x6f],dh
   140010d52:	jae    0x140010dbd
   140010d54:	je     0x140010dbf
   140010d56:	outs   dx,DWORD PTR ds:[rsi]
   140010d57:	outs   dx,BYTE PTR ds:[rsi]
   140010d58:	cmp    ah,BYTE PTR [rax]
   140010d5a:	xor    DWORD PTR [rip+0x2020200a],ecx        # 0x160212d6a
   140010d60:	and    BYTE PTR [rax],ah
   140010d62:	and    BYTE PTR [rax],ah
   140010d64:	and    BYTE PTR [rax],ah
   140010d66:	and    BYTE PTR [rax],ah
   140010d68:	and    BYTE PTR [rax],ah
   140010d6a:	and    BYTE PTR [rax],ah
   140010d6c:	and    BYTE PTR [rbx+0x6f],ah
   140010d6f:	ins    BYTE PTR es:[rdi],dx
   140010d70:	outs   dx,DWORD PTR ds:[rsi]
   140010d71:	jb     0x140010dad
   140010d73:	and    BYTE PTR [rdx],ah
   140010d75:	and    esi,DWORD PTR [rsi]
   140010d77:	(bad)  
   140010d78:	ss (bad) 
   140010d7a:	(bad)
   140010d80:	and    BYTE PTR [rax],ah
   140010d82:	and    BYTE PTR [rax],ah
   140010d84:	and    BYTE PTR [rax],ah
   140010d86:	and    BYTE PTR [rax],ah
   140010d88:	and    BYTE PTR [rax],ah
   140010d8a:	and    BYTE PTR [rbp+0xd],bh
   140010d8d:	or     ah,BYTE PTR [rax]
   140010d8f:	and    BYTE PTR [rax],ah
   140010d91:	and    BYTE PTR [rax],ah
   140010d93:	and    BYTE PTR [rax],ah
   140010d95:	and    BYTE PTR [rbp+0xd],bh
   140010d98:	or     ah,BYTE PTR [rax]
   140010d9a:	and    BYTE PTR [rax],ah
   140010d9c:	and    BYTE PTR [rax],ah
   140010d9e:	and    BYTE PTR [rax],ah
   140010da0:	and    BYTE PTR [rcx+0x6e],ah
   140010da3:	movsxd ebp,DWORD PTR [rax+0x6f]
   140010da6:	jb     0x140010e1b
   140010da8:	imul   bp,WORD PTR cs:[rsp+rbp*2+0x3a],0x7020
   140010db0:	(bad)  
   140010db1:	jb     0x140010e18
   140010db3:	outs   dx,BYTE PTR ds:[rsi]
   140010db4:	je     0x140010dc3
   140010db6:	or     ah,BYTE PTR [rax]
   140010db8:	and    BYTE PTR [rax],ah
   140010dba:	and    BYTE PTR [rbp+0xd],bh
   140010dbd:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160212dcd
   140010dc3:	and    BYTE PTR [rdx+0x75],al
   140010dc6:	je     0x140010e3c
   140010dc8:	outs   dx,DWORD PTR ds:[rsi]
   140010dc9:	outs   dx,BYTE PTR ds:[rsi]
   140010dca:	and    BYTE PTR [rbx+0xd],bh
   140010dcd:	or     ah,BYTE PTR [rax]
   140010dcf:	and    BYTE PTR [rax],ah
   140010dd1:	and    BYTE PTR [rax],ah
   140010dd3:	and    BYTE PTR [rax],ah
   140010dd5:	and    BYTE PTR [rcx+0x64],ch
   140010dd8:	cmp    ah,BYTE PTR [rax]
   140010dda:	(bad)  
   140010ddb:	jne    0x140010e51
   140010ddd:	je     0x140010e4e
   140010ddf:	outs   dx,BYTE PTR ds:[rsi]
   140010de0:	or     eax,0x200a0d0a
   140010de5:	and    BYTE PTR [rax],ah
   140010de7:	and    BYTE PTR [rax],ah
   140010de9:	and    BYTE PTR [rax],ah
   140010deb:	and    BYTE PTR [rax+0x3a],bh
   140010dee:	and    BYTE PTR [rcx],dh
   140010df0:	cmp    DWORD PTR [rip+0x2020200a],ecx        # 0x160212e00
   140010df6:	and    BYTE PTR [rax],ah
   140010df8:	and    BYTE PTR [rax],ah
   140010dfa:	and    BYTE PTR [rcx+0x3a],bh
   140010dfd:	and    BYTE PTR [rdx],dh
   140010dff:	xor    BYTE PTR [rip+0x2020200a],cl        # 0x160212e0f
   140010e05:	and    BYTE PTR [rax],ah
   140010e07:	and    BYTE PTR [rax],ah
   140010e09:	and    BYTE PTR [rdi+0x69],dh
   140010e0c:	fs je  0x140010e77
   140010e0f:	cmp    ah,BYTE PTR [rax]
   140010e11:	xor    DWORD PTR [rbx],esi
   140010e13:	xor    ecx,DWORD PTR [rip+0x2020200a]        # 0x160212e23
   140010e19:	and    BYTE PTR [rax],ah
   140010e1b:	and    BYTE PTR [rax],ah
   140010e1d:	and    BYTE PTR [rax+0x65],ch
   140010e20:	imul   esp,DWORD PTR [rdi+0x68],0x36203a74
   140010e27:	xor    DWORD PTR [rip+0x2020200a],ecx        # 0x160212e37
   140010e2d:	and    BYTE PTR [rax],ah
   140010e2f:	and    BYTE PTR [rax],ah
   140010e31:	and    BYTE PTR [rdi+0x6e],ch
   140010e34:	rex.XB ins BYTE PTR es:[rdi],dx
   140010e36:	imul   esp,DWORD PTR [rbx+0x6b],0x203a6465
   140010e3d:	jnp    0x140010e4c
   140010e3f:	or     ah,BYTE PTR [rax]
   140010e41:	and    BYTE PTR [rax],ah
   140010e43:	and    BYTE PTR [rax],ah
   140010e45:	and    BYTE PTR [rax],ah
   140010e47:	and    BYTE PTR [rax],ah
   140010e49:	and    BYTE PTR [rax],ah
   140010e4b:	and    BYTE PTR [rcx+0x66],ch
   140010e4e:	and    BYTE PTR [rax],ch
   140010e50:	jb     0x140010ec1
   140010e52:	outs   dx,DWORD PTR ds:[rsi]
   140010e53:	je     0x140010e83
   140010e55:	jae    0x140010ecb
   140010e57:	(bad)  
   140010e58:	je     0x140010ebf
   140010e5a:	and    BYTE PTR [rip+0x22223d3d],bh        # 0x162234b9d
   140010e60:	sub    DWORD PTR [rip+0x2020200a],ecx        # 0x160212e70
   140010e66:	and    BYTE PTR [rax],ah
   140010e68:	and    BYTE PTR [rax],ah
   140010e6a:	and    BYTE PTR [rax],ah
   140010e6c:	and    BYTE PTR [rax],ah
   140010e6e:	and    BYTE PTR [rax],ah
   140010e70:	and    BYTE PTR [rax],ah
   140010e72:	and    BYTE PTR [rdx+0x6f],dh
   140010e75:	outs   dx,DWORD PTR ds:[rsi]
   140010e76:	je     0x140010ea6
   140010e78:	jae    0x140010eee
   140010e7a:	(bad)  
   140010e7b:	je     0x140010ee2
   140010e7d:	and    BYTE PTR [rip+0x6f6d2220],bh        # 0x1af6e30a3
   140010e83:	jbe    0x140010eea
   140010e85:	and    bh,BYTE PTR fs:[rbx]
   140010e88:	or     eax,0x2020200a
   140010e8d:	and    BYTE PTR [rax],ah
   140010e8f:	and    BYTE PTR [rax],ah
   140010e91:	and    BYTE PTR [rax],ah
   140010e93:	and    BYTE PTR [rax],ah
   140010e95:	and    BYTE PTR [rbp+0x6c],ah
   140010e98:	jae    0x140010eff
   140010e9a:	or     eax,0x2020200a
   140010e9f:	and    BYTE PTR [rax],ah
   140010ea1:	and    BYTE PTR [rax],ah
   140010ea3:	and    BYTE PTR [rax],ah
   140010ea5:	and    BYTE PTR [rax],ah
   140010ea7:	and    BYTE PTR [rax],ah
   140010ea9:	and    BYTE PTR [rax],ah
   140010eab:	and    BYTE PTR [rdx+0x6f],dh
   140010eae:	outs   dx,DWORD PTR ds:[rsi]
   140010eaf:	je     0x140010edf
   140010eb1:	jae    0x140010f27
   140010eb3:	(bad)  
   140010eb4:	je     0x140010f1b
   140010eb6:	and    BYTE PTR [rip+0x3b222220],bh        # 0x17b2330dc
   140010ebc:	or     eax,0x2020200a
   140010ec1:	and    BYTE PTR [rax],ah
   140010ec3:	and    BYTE PTR [rax],ah
   140010ec5:	and    BYTE PTR [rbp+0xd],bh
   140010ec8:	or     ah,BYTE PTR [rax]
   140010eca:	and    BYTE PTR [rax],ah
   140010ecc:	and    BYTE PTR [rbp+0xd],bh
   140010ecf:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160212edf
   140010ed5:	and    BYTE PTR [rdx+0x65],dl
   140010ed8:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140010edc:	ins    BYTE PTR es:[edi],dx
   140010ede:	and    BYTE PTR gs:[rbx+0xd],bh
   140010ee2:	or     ah,BYTE PTR [rax]
   140010ee4:	and    BYTE PTR [rax],ah
   140010ee6:	and    BYTE PTR [rax],ah
   140010ee8:	and    BYTE PTR [rax],ah
   140010eea:	and    BYTE PTR [rcx+0x64],ch
   140010eed:	cmp    ah,BYTE PTR [rax]
   140010eef:	addr32 jb 0x140010f61
   140010ef2:	outs   dx,DWORD PTR ds:[rsi]
   140010ef3:	jbe    0x140010f5a
   140010ef5:	or     eax,0x2020200a
   140010efa:	and    BYTE PTR [rax],ah
   140010efc:	and    BYTE PTR [rax],ah
   140010efe:	and    BYTE PTR [rax+0x3a],bh
   140010f01:	and    BYTE PTR [rcx],dh
   140010f03:	xor    ecx,DWORD PTR ss:[rip+0x2020200a]        # 0x160212f14
   140010f0a:	and    BYTE PTR [rax],ah
   140010f0c:	and    BYTE PTR [rax],ah
   140010f0e:	and    BYTE PTR [rcx+0x3a],bh
   140010f11:	and    BYTE PTR [rdx],dh
   140010f13:	xor    BYTE PTR [rip+0x2020200a],cl        # 0x160212f23
   140010f19:	and    BYTE PTR [rax],ah
   140010f1b:	and    BYTE PTR [rax],ah
   140010f1d:	and    BYTE PTR [rdi+0x69],dh
   140010f20:	fs je  0x140010f8b
   140010f23:	cmp    ah,BYTE PTR [rax]
   140010f25:	xor    dh,BYTE PTR ss:[rdx]
   140010f28:	or     eax,0x2020200a
   140010f2d:	and    BYTE PTR [rax],ah
   140010f2f:	and    BYTE PTR [rax],ah
   140010f31:	and    BYTE PTR [rax+0x65],ch
   140010f34:	imul   esp,DWORD PTR [rdi+0x68],0x36203a74
   140010f3b:	xor    DWORD PTR [rip+0x2020200a],ecx        # 0x160212f4b
   140010f41:	and    BYTE PTR [rax],ah
   140010f43:	and    BYTE PTR [rax],ah
   140010f45:	and    BYTE PTR [rbx+0x6f],ah
   140010f48:	ins    BYTE PTR es:[rdi],dx
   140010f49:	outs   dx,DWORD PTR ds:[rsi]
   140010f4a:	jb     0x140010f86
   140010f4c:	and    BYTE PTR [rdx],ah
   140010f4e:	and    edi,DWORD PTR [rcx]
   140010f50:	xor    DWORD PTR [rcx],edi
   140010f52:	xor    DWORD PTR [rcx],edi
   140010f54:	xor    DWORD PTR [rdx],esp
   140010f56:	or     eax,0x2020200a
   140010f5b:	and    BYTE PTR [rax],ah
   140010f5d:	and    BYTE PTR [rax],ah
   140010f5f:	and    BYTE PTR [rdx+0x61],dh
   140010f62:	imul   esi,DWORD PTR fs:[rbp+0x73],0xd34203a
   140010f6a:	or     ah,BYTE PTR [rax]
   140010f6c:	and    BYTE PTR [rax],ah
   140010f6e:	and    BYTE PTR [rax],ah
   140010f70:	and    BYTE PTR [rax],ah
   140010f72:	and    BYTE PTR [rdx+0x6f],ah
   140010f75:	jb     0x140010fdb
   140010f77:	gs jb  0x140010fa8
   140010f7a:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140010f7d:	outs   dx,DWORD PTR ds:[rsi]
   140010f7e:	jb     0x140010fba
   140010f80:	and    BYTE PTR [rdx],ah
   140010f82:	and    esp,DWORD PTR [rcx+0x64]
   140010f85:	(bad)  
   140010f86:	fs (bad) 
   140010f88:	and    cl,BYTE PTR fs:[rip+0x200a0d0a]        # 0x1600b1c99
   140010f8f:	and    BYTE PTR [rax],ah
   140010f91:	and    BYTE PTR [rax],ah
   140010f93:	and    BYTE PTR [rax],ah
   140010f95:	and    BYTE PTR [rdx+0x65],dl
   140010f98:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140010f9c:	ins    BYTE PTR es:[edi],dx
   140010f9e:	and    BYTE PTR gs:[rbx+0xd],bh
   140010fa2:	or     ah,BYTE PTR [rax]
   140010fa4:	and    BYTE PTR [rax],ah
   140010fa6:	and    BYTE PTR [rax],ah
   140010fa8:	and    BYTE PTR [rax],ah
   140010faa:	and    BYTE PTR [rax],ah
   140010fac:	and    BYTE PTR [rax],ah
   140010fae:	and    BYTE PTR [rcx+0x64],ch
   140010fb1:	cmp    ah,BYTE PTR [rax]
   140010fb3:	jb     0x14001101a
   140010fb5:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140010fb9:	ins    BYTE PTR es:[edi],dx
   140010fbb:	gs or  eax,0x2020200a
   140010fc1:	and    BYTE PTR [rax],ah
   140010fc3:	and    BYTE PTR [rax],ah
   140010fc5:	and    BYTE PTR [rax],ah
   140010fc7:	and    BYTE PTR [rax],ah
   140010fc9:	and    BYTE PTR [rax+0x3a],bh
   140010fcc:	and    BYTE PTR [rcx],bh
   140010fce:	or     eax,0x2020200a
   140010fd3:	and    BYTE PTR [rax],ah
   140010fd5:	and    BYTE PTR [rax],ah
   140010fd7:	and    BYTE PTR [rax],ah
   140010fd9:	and    BYTE PTR [rax],ah
   140010fdb:	and    BYTE PTR [rcx+0x3a],bh
   140010fde:	and    BYTE PTR [rcx],bh
   140010fe0:	or     eax,0x2020200a
   140010fe5:	and    BYTE PTR [rax],ah
   140010fe7:	and    BYTE PTR [rax],ah
   140010fe9:	and    BYTE PTR [rax],ah
   140010feb:	and    BYTE PTR [rax],ah
   140010fed:	and    BYTE PTR [rdi+0x69],dh
   140010ff0:	fs je  0x14001105b
   140010ff3:	cmp    ah,BYTE PTR [rax]
   140010ff5:	xor    al,0x36
   140010ff7:	or     eax,0x2020200a
   140010ffc:	and    BYTE PTR [rax],ah
   140010ffe:	and    BYTE PTR [rax],ah
   140011000:	and    BYTE PTR [rax],ah
   140011002:	and    BYTE PTR [rax],ah
   140011004:	and    BYTE PTR [rax+0x65],ch
   140011007:	imul   esp,DWORD PTR [rdi+0x68],0x34203a74
   14001100e:	ss or  eax,0x2020200a
   140011014:	and    BYTE PTR [rax],ah
   140011016:	and    BYTE PTR [rax],ah
   140011018:	and    BYTE PTR [rax],ah
   14001101a:	and    BYTE PTR [rax],ah
   14001101c:	and    BYTE PTR [rbx+0x6f],ah
   14001101f:	ins    BYTE PTR es:[rdi],dx
   140011020:	outs   dx,DWORD PTR ds:[rsi]
   140011021:	jb     0x14001105d
   140011023:	and    BYTE PTR [rdx],ah
   140011025:	and    esi,DWORD PTR [rbx]
   140011027:	xor    BYTE PTR [rsi*1+0xd223762],dh
   14001102e:	or     ah,BYTE PTR [rax]
   140011030:	and    BYTE PTR [rax],ah
   140011032:	and    BYTE PTR [rax],ah
   140011034:	and    BYTE PTR [rax],ah
   140011036:	and    BYTE PTR [rax],ah
   140011038:	and    BYTE PTR [rax],ah
   14001103a:	and    BYTE PTR [rdx+0x61],dh
   14001103d:	imul   esi,DWORD PTR fs:[rbp+0x73],0xd34203a
   140011045:	or     ah,BYTE PTR [rax]
   140011047:	and    BYTE PTR [rax],ah
   140011049:	and    BYTE PTR [rax],ah
   14001104b:	and    BYTE PTR [rax],ah
   14001104d:	and    BYTE PTR [rax],ah
   14001104f:	and    BYTE PTR [rax],ah
   140011051:	and    BYTE PTR [rdx+0x6f],ah
   140011054:	jb     0x1400110ba
   140011056:	gs jb  0x140011087
   140011059:	ja     0x1400110c4
   14001105b:	fs je  0x1400110c6
   14001105e:	cmp    ah,BYTE PTR [rax]
   140011060:	xor    cl,BYTE PTR [rip+0x2020200a]        # 0x160213070
   140011066:	and    BYTE PTR [rax],ah
   140011068:	and    BYTE PTR [rax],ah
   14001106a:	and    BYTE PTR [rax],ah
   14001106c:	and    BYTE PTR [rax],ah
   14001106e:	and    BYTE PTR [rbx+0x6d],dh
   140011071:	outs   dx,DWORD PTR ds:[rsi]
   140011072:	outs   dx,DWORD PTR ds:[rsi]
   140011073:	je     0x1400110dd
   140011075:	cmp    ah,BYTE PTR [rax]
   140011077:	je     0x1400110eb
   140011079:	jne    0x1400110e0
   14001107b:	or     eax,0x2020200a
   140011080:	and    BYTE PTR [rax],ah
   140011082:	and    BYTE PTR [rax],ah
   140011084:	and    BYTE PTR [rax],ah
   140011086:	and    BYTE PTR [rax],ah
   140011088:	and    BYTE PTR [rdx+0x6f],ah
   14001108b:	jb     0x1400110f1
   14001108d:	gs jb  0x1400110be
   140011090:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140011093:	outs   dx,DWORD PTR ds:[rsi]
   140011094:	jb     0x1400110d0
   140011096:	and    BYTE PTR [rdx],ah
   140011098:	and    edi,DWORD PTR [rcx]
   14001109a:	gs (bad) 
   14001109c:	xor    BYTE PTR [rdx+0x62],ah
   14001109f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602130af
   1400110a5:	and    BYTE PTR [rax],ah
   1400110a7:	and    BYTE PTR [rax],ah
   1400110a9:	and    BYTE PTR [rax],ah
   1400110ab:	and    BYTE PTR [rax],ah
   1400110ad:	and    BYTE PTR [rcx+0x6e],ah
   1400110b0:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400110b3:	jb     0x140011128
   1400110b5:	cs (bad) 
   1400110b7:	outs   dx,DWORD PTR ds:[rsi]
   1400110b8:	je     0x14001112e
   1400110ba:	outs   dx,DWORD PTR ds:[rsi]
   1400110bb:	ins    DWORD PTR es:[rdi],dx
   1400110bc:	rex.WRB (bad) 
   1400110be:	jb     0x140011127
   1400110c0:	imul   ebp,DWORD PTR [rsi+0x3a],0xa0d3620
   1400110c7:	and    BYTE PTR [rax],ah
   1400110c9:	and    BYTE PTR [rax],ah
   1400110cb:	and    BYTE PTR [rax],ah
   1400110cd:	and    BYTE PTR [rax],ah
   1400110cf:	and    BYTE PTR [rax],ah
   1400110d1:	and    BYTE PTR [rax],ah
   1400110d3:	(bad)  
   1400110d4:	outs   dx,BYTE PTR ds:[rsi]
   1400110d5:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400110d8:	jb     0x14001114d
   1400110da:	cs je  0x14001114c
   1400110dd:	jo     0x14001112c
   1400110df:	(bad)  
   1400110e0:	jb     0x140011149
   1400110e2:	imul   ebp,DWORD PTR [rsi+0x3a],0xa0d3920
   1400110e9:	and    BYTE PTR [rax],ah
   1400110eb:	and    BYTE PTR [rax],ah
   1400110ed:	and    BYTE PTR [rax],ah
   1400110ef:	and    BYTE PTR [rax],ah
   1400110f1:	and    BYTE PTR [rax],ah
   1400110f3:	and    BYTE PTR [rax],ah
   1400110f5:	(bad)  
   1400110f6:	outs   dx,BYTE PTR ds:[rsi]
   1400110f7:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400110fa:	jb     0x14001116f
   1400110fc:	cs je  0x14001116e
   1400110ff:	jo     0x14001113b
   140011101:	and    BYTE PTR [rax+0x61],dh
   140011104:	jb     0x14001116b
   140011106:	outs   dx,BYTE PTR ds:[rsi]
   140011107:	je     0x140011137
   140011109:	je     0x14001117a
   14001110b:	jo     0x14001111a
   14001110d:	or     ah,BYTE PTR [rax]
   14001110f:	and    BYTE PTR [rax],ah
   140011111:	and    BYTE PTR [rax],ah
   140011113:	and    BYTE PTR [rax],ah
   140011115:	and    BYTE PTR [rax],ah
   140011117:	and    BYTE PTR [rax],ah
   140011119:	and    BYTE PTR [rcx+0x6e],ah
   14001111c:	movsxd ebp,DWORD PTR [rax+0x6f]
   14001111f:	jb     0x140011194
   140011121:	cs (bad) 
   140011123:	outs   dx,DWORD PTR ds:[rsi]
   140011124:	je     0x14001119a
   140011126:	outs   dx,DWORD PTR ds:[rsi]
   140011127:	ins    DWORD PTR es:[rdi],dx
   140011128:	cmp    ah,BYTE PTR [rax]
   14001112a:	jo     0x14001118d
   14001112c:	jb     0x140011193
   14001112e:	outs   dx,BYTE PTR ds:[rsi]
   14001112f:	je     0x14001115f
   140011131:	(bad)  
   140011132:	outs   dx,DWORD PTR ds:[rsi]
   140011133:	je     0x1400111a9
   140011135:	outs   dx,DWORD PTR ds:[rsi]
   140011136:	ins    DWORD PTR es:[rdi],dx
   140011137:	or     eax,0x2020200a
   14001113c:	and    BYTE PTR [rax],ah
   14001113e:	and    BYTE PTR [rax],ah
   140011140:	and    BYTE PTR [rbp+0xd],bh
   140011143:	or     ah,BYTE PTR [rax]
   140011145:	and    BYTE PTR [rax],ah
   140011147:	and    BYTE PTR [rbp+0xd],bh
   14001114a:	or     ah,BYTE PTR [rax]
   14001114c:	and    BYTE PTR [rax],ah
   14001114e:	and    BYTE PTR [rbx+0x74],dh
   140011151:	(bad)  
   140011152:	je     0x1400111b9
   140011154:	jae    0x140011190
   140011156:	and    BYTE PTR [rbx+0xd],bl
   140011159:	or     ah,BYTE PTR [rax]
   14001115b:	and    BYTE PTR [rax],ah
   14001115d:	and    BYTE PTR [rax],ah
   14001115f:	and    BYTE PTR [rax],ah
   140011161:	and    BYTE PTR [rbx+0x74],dl
   140011164:	(bad)  
   140011165:	je     0x1400111cc
   140011167:	and    BYTE PTR [rbx+0xd],bh
   14001116a:	or     ah,BYTE PTR [rax]
   14001116c:	and    BYTE PTR [rax],ah
   14001116e:	and    BYTE PTR [rax],ah
   140011170:	and    BYTE PTR [rax],ah
   140011172:	and    BYTE PTR [rax],ah
   140011174:	and    BYTE PTR [rax],ah
   140011176:	and    BYTE PTR [rsi+0x61],ch
   140011179:	ins    DWORD PTR es:[rdi],dx
   14001117a:	cmp    ah,BYTE PTR gs:[rax]
   14001117d:	and    ch,BYTE PTR [rbp+0x6f]
   140011180:	jbe    0x1400111e7
   140011182:	and    cl,BYTE PTR fs:[rip+0x200a0d0a]        # 0x1600b1e93
   140011189:	and    BYTE PTR [rax],ah
   14001118b:	and    BYTE PTR [rax],ah
   14001118d:	and    BYTE PTR [rax],ah
   14001118f:	and    BYTE PTR [rax],ah
   140011191:	and    BYTE PTR [rax],ah
   140011193:	and    BYTE PTR [rax+0x72],dl
   140011196:	outs   dx,DWORD PTR ds:[rsi]
   140011197:	jo     0x1400111fe
   140011199:	jb     0x14001120f
   14001119b:	jns    0x1400111e0
   14001119d:	push   0x65676e61
   1400111a2:	jae    0x1400111c4
   1400111a4:	jnp    0x1400111b3
   1400111a6:	or     ah,BYTE PTR [rax]
   1400111a8:	and    BYTE PTR [rax],ah
   1400111aa:	and    BYTE PTR [rax],ah
   1400111ac:	and    BYTE PTR [rax],ah
   1400111ae:	and    BYTE PTR [rax],ah
   1400111b0:	and    BYTE PTR [rax],ah
   1400111b2:	and    BYTE PTR [rax],ah
   1400111b4:	and    BYTE PTR [rax],ah
   1400111b6:	and    BYTE PTR [rcx+riz*2+0x72],dh
   1400111ba:	addr32 gs je 0x1400111f8
   1400111be:	and    BYTE PTR [rdx+0x65],dh
   1400111c1:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   1400111c5:	ins    BYTE PTR es:[edi],dx
   1400111c7:	gs or  eax,0x2020200a
   1400111cd:	and    BYTE PTR [rax],ah
   1400111cf:	and    BYTE PTR [rax],ah
   1400111d1:	and    BYTE PTR [rax],ah
   1400111d3:	and    BYTE PTR [rax],ah
   1400111d5:	and    BYTE PTR [rax],ah
   1400111d7:	and    BYTE PTR [rax],ah
   1400111d9:	and    BYTE PTR [rax+0x3a],bh
   1400111dc:	and    BYTE PTR [rip+0xa0d3736],dh        # 0x14a0e4918
   1400111e2:	and    BYTE PTR [rax],ah
   1400111e4:	and    BYTE PTR [rax],ah
   1400111e6:	and    BYTE PTR [rax],ah
   1400111e8:	and    BYTE PTR [rax],ah
   1400111ea:	and    BYTE PTR [rax],ah
   1400111ec:	and    BYTE PTR [rax],ah
   1400111ee:	and    BYTE PTR [rax],ah
   1400111f0:	and    BYTE PTR [rax],ah
   1400111f2:	jns    0x14001122e
   1400111f4:	and    BYTE PTR [rcx],bh
   1400111f6:	or     eax,0x2020200a
   1400111fb:	and    BYTE PTR [rax],ah
   1400111fd:	and    BYTE PTR [rax],ah
   1400111ff:	and    BYTE PTR [rax],ah
   140011201:	and    BYTE PTR [rax],ah
   140011203:	and    BYTE PTR [rax],ah
   140011205:	and    BYTE PTR [rax],ah
   140011207:	and    BYTE PTR [rcx+0x6e],ah
   14001120a:	movsxd ebp,DWORD PTR [rax+0x6f]
   14001120d:	jb     0x140011282
   14001120f:	cs (bad) 
   140011211:	outs   dx,DWORD PTR ds:[rsi]
   140011212:	je     0x140011288
   140011214:	outs   dx,DWORD PTR ds:[rsi]
   140011215:	ins    DWORD PTR es:[rdi],dx
   140011216:	rex.WRB (bad) 
   140011218:	jb     0x140011281
   14001121a:	imul   ebp,DWORD PTR [rsi+0x3a],0xa0d3620
   140011221:	and    BYTE PTR [rax],ah
   140011223:	and    BYTE PTR [rax],ah
   140011225:	and    BYTE PTR [rax],ah
   140011227:	and    BYTE PTR [rax],ah
   140011229:	and    BYTE PTR [rax],ah
   14001122b:	and    BYTE PTR [rax],ah
   14001122d:	and    BYTE PTR [rax],ah
   14001122f:	and    BYTE PTR [rax],ah
   140011231:	(bad)  
   140011232:	outs   dx,BYTE PTR ds:[rsi]
   140011233:	movsxd ebp,DWORD PTR [rax+0x6f]
   140011236:	jb     0x1400112ab
   140011238:	cs je  0x1400112aa
   14001123b:	jo     0x14001128a
   14001123d:	(bad)  
   14001123e:	jb     0x1400112a7
   140011240:	imul   ebp,DWORD PTR [rsi+0x3a],0xa0d3920
   140011247:	and    BYTE PTR [rax],ah
   140011249:	and    BYTE PTR [rax],ah
   14001124b:	and    BYTE PTR [rax],ah
   14001124d:	and    BYTE PTR [rax],ah
   14001124f:	and    BYTE PTR [rax],ah
   140011251:	and    BYTE PTR [rax],ah
   140011253:	jge    0x140011262
   140011255:	or     ah,BYTE PTR [rax]
   140011257:	and    BYTE PTR [rax],ah
   140011259:	and    BYTE PTR [rax],ah
   14001125b:	and    BYTE PTR [rax],ah
   14001125d:	and    BYTE PTR [rbp+0xd],bh
   140011260:	or     ah,BYTE PTR [rax]
   140011262:	and    BYTE PTR [rax],ah
   140011264:	and    BYTE PTR [rbp+0xd],bl
   140011267:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160213277
   14001126d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   140011271:	outs   dx,BYTE PTR ds:[rsi]
   140011272:	jae    0x1400112dd
   140011274:	je     0x1400112df
   140011276:	outs   dx,DWORD PTR ds:[rsi]
   140011277:	outs   dx,BYTE PTR ds:[rsi]
   140011278:	jae    0x1400112b4
   14001127a:	and    BYTE PTR [rbx+0xd],bl
   14001127d:	or     ah,BYTE PTR [rax]
   14001127f:	and    BYTE PTR [rax],ah
   140011281:	and    BYTE PTR [rax],ah
   140011283:	and    BYTE PTR [rax],ah
   140011285:	and    BYTE PTR [rdx+rsi*2+0x61],dl
   140011289:	outs   dx,BYTE PTR ds:[rsi]
   14001128a:	jae    0x1400112f5
   14001128c:	je     0x1400112f7
   14001128e:	outs   dx,DWORD PTR ds:[rsi]
   14001128f:	outs   dx,BYTE PTR ds:[rsi]
   140011290:	and    BYTE PTR [rbx+0xd],bh
   140011293:	or     ah,BYTE PTR [rax]
   140011295:	and    BYTE PTR [rax],ah
   140011297:	and    BYTE PTR [rax],ah
   140011299:	and    BYTE PTR [rax],ah
   14001129b:	and    BYTE PTR [rax],ah
   14001129d:	and    BYTE PTR [rax],ah
   14001129f:	and    BYTE PTR [rsi+0x72],ah
   1400112a2:	outs   dx,DWORD PTR ds:[rsi]
   1400112a3:	ins    DWORD PTR es:[rdi],dx
   1400112a4:	cmp    ah,BYTE PTR [rax]
   1400112a6:	and    ah,BYTE PTR [rdx]
   1400112a8:	or     eax,0x2020200a
   1400112ad:	and    BYTE PTR [rax],ah
   1400112af:	and    BYTE PTR [rax],ah
   1400112b1:	and    BYTE PTR [rax],ah
   1400112b3:	and    BYTE PTR [rax],ah
   1400112b5:	and    BYTE PTR [rdi+rbp*2+0x3a],dh
   1400112b9:	and    BYTE PTR [rdx],ah
   1400112bb:	ins    DWORD PTR es:[rdi],dx
   1400112bc:	outs   dx,DWORD PTR ds:[rsi]
   1400112bd:	jbe    0x140011324
   1400112bf:	and    cl,BYTE PTR fs:[rip+0x2020200a]        # 0x1602132d0
   1400112c6:	and    BYTE PTR [rax],ah
   1400112c8:	and    BYTE PTR [rax],ah
   1400112ca:	and    BYTE PTR [rax],ah
   1400112cc:	and    BYTE PTR [rax],ah
   1400112ce:	and    BYTE PTR [rbx+0x65],dl
   1400112d1:	jno    0x140011348
   1400112d3:	outs   dx,BYTE PTR gs:[rsi]
   1400112d5:	je     0x140011340
   1400112d7:	(bad)  
   1400112d8:	ins    BYTE PTR es:[rdi],dx
   1400112d9:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400112db:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   1400112e2:	and    BYTE PTR [rbx+0xd],bh
   1400112e5:	or     ah,BYTE PTR [rax]
   1400112e7:	and    BYTE PTR [rax],ah
   1400112e9:	and    BYTE PTR [rax],ah
   1400112eb:	and    BYTE PTR [rax],ah
   1400112ed:	and    BYTE PTR [rax],ah
   1400112ef:	and    BYTE PTR [rax],ah
   1400112f1:	and    BYTE PTR [rax],ah
   1400112f3:	and    BYTE PTR [rax],ah
   1400112f5:	and    BYTE PTR [rax+0x72],dl
   1400112f8:	outs   dx,DWORD PTR ds:[rsi]
   1400112f9:	jo     0x140011360
   1400112fb:	jb     0x140011371
   1400112fd:	jns    0x140011340
   1400112ff:	outs   dx,BYTE PTR ds:[rsi]
   140011300:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   140011307:	and    BYTE PTR [rbx+0xd],bh
   14001130a:	or     ah,BYTE PTR [rax]
   14001130c:	and    BYTE PTR [rax],ah
   14001130e:	and    BYTE PTR [rax],ah
   140011310:	and    BYTE PTR [rax],ah
   140011312:	and    BYTE PTR [rax],ah
   140011314:	and    BYTE PTR [rax],ah
   140011316:	and    BYTE PTR [rax],ah
   140011318:	and    BYTE PTR [rax],ah
   14001131a:	and    BYTE PTR [rax],ah
   14001131c:	and    BYTE PTR [rax],ah
   14001131e:	and    BYTE PTR [rbp+0x61],ah
   140011321:	jae    0x14001138c
   140011323:	outs   dx,BYTE PTR ds:[rsi]
   140011324:	cmp    ah,BYTE PTR [eax]
   140011327:	gs imul esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x7361652e
   140011331:	imul   ebp,DWORD PTR [rsi+0x67],0x76727543
   140011338:	gs or  eax,0x2020200a
   14001133e:	and    BYTE PTR [rax],ah
   140011340:	and    BYTE PTR [rax],ah
   140011342:	and    BYTE PTR [rax],ah
   140011344:	and    BYTE PTR [rax],ah
   140011346:	and    BYTE PTR [rax],ah
   140011348:	and    BYTE PTR [rax],ah
   14001134a:	and    BYTE PTR [rax],ah
   14001134c:	and    BYTE PTR [rax],ah
   14001134e:	and    BYTE PTR [rax+0x72],dh
   140011351:	outs   dx,DWORD PTR ds:[rsi]
   140011352:	jo     0x1400113b9
   140011354:	jb     0x1400113ca
   140011356:	jns    0x140011392
   140011358:	and    BYTE PTR [rdx],ah
   14001135a:	js     0x14001137e
   14001135c:	or     eax,0x2020200a
   140011361:	and    BYTE PTR [rax],ah
   140011363:	and    BYTE PTR [rax],ah
   140011365:	and    BYTE PTR [rax],ah
   140011367:	and    BYTE PTR [rax],ah
   140011369:	and    BYTE PTR [rax],ah
   14001136b:	and    BYTE PTR [rax],ah
   14001136d:	and    BYTE PTR [rax],ah
   14001136f:	and    BYTE PTR [rax],ah
   140011371:	and    BYTE PTR [rbp+rsi*2+0x72],ah
   140011375:	(bad)  
   140011376:	je     0x1400113e1
   140011378:	outs   dx,DWORD PTR ds:[rsi]
   140011379:	outs   dx,BYTE PTR ds:[rsi]
   14001137a:	cmp    ah,BYTE PTR [rax]
   14001137c:	jae    0x1400113ee
   14001137e:	imul   ebp,DWORD PTR [rsi+0x42],0x762e786f
   140011385:	(bad)  
   140011386:	ins    BYTE PTR es:[rdi],dx
   140011387:	jne    0x1400113ee
   140011389:	or     eax,0x2020200a
   14001138e:	and    BYTE PTR [rax],ah
   140011390:	and    BYTE PTR [rax],ah
   140011392:	and    BYTE PTR [rax],ah
   140011394:	and    BYTE PTR [rax],ah
   140011396:	and    BYTE PTR [rax],ah
   140011398:	and    BYTE PTR [rax],ah
   14001139a:	and    BYTE PTR [rbp+0xd],bh
   14001139d:	or     ah,BYTE PTR [rax]
   14001139f:	and    BYTE PTR [rax],ah
   1400113a1:	and    BYTE PTR [rax],ah
   1400113a3:	and    BYTE PTR [rax],ah
   1400113a5:	and    BYTE PTR [rax],ah
   1400113a7:	and    BYTE PTR [rax],ah
   1400113a9:	and    BYTE PTR [rbp+0xd],bh
   1400113ac:	or     ah,BYTE PTR [rax]
   1400113ae:	and    BYTE PTR [rax],ah
   1400113b0:	and    BYTE PTR [rax],ah
   1400113b2:	and    BYTE PTR [rax],ah
   1400113b4:	and    BYTE PTR [rbp+0x2c],bh
   1400113b7:	or     eax,0x2020200a
   1400113bc:	and    BYTE PTR [rax],ah
   1400113be:	and    BYTE PTR [rax],ah
   1400113c0:	and    BYTE PTR [rdx+rsi*2+0x61],dl
   1400113c4:	outs   dx,BYTE PTR ds:[rsi]
   1400113c5:	jae    0x140011430
   1400113c7:	je     0x140011432
   1400113c9:	outs   dx,DWORD PTR ds:[rsi]
   1400113ca:	outs   dx,BYTE PTR ds:[rsi]
   1400113cb:	and    BYTE PTR [rbx+0xd],bh
   1400113ce:	or     ah,BYTE PTR [rax]
   1400113d0:	and    BYTE PTR [rax],ah
   1400113d2:	and    BYTE PTR [rax],ah
   1400113d4:	and    BYTE PTR [rax],ah
   1400113d6:	and    BYTE PTR [rax],ah
   1400113d8:	and    BYTE PTR [rax],ah
   1400113da:	and    BYTE PTR [rsi+0x72],ah
   1400113dd:	outs   dx,DWORD PTR ds:[rsi]
   1400113de:	ins    DWORD PTR es:[rdi],dx
   1400113df:	cmp    ah,BYTE PTR [rax]
   1400113e1:	and    ch,BYTE PTR [rbp+0x6f]
   1400113e4:	jbe    0x14001144b
   1400113e6:	and    cl,BYTE PTR fs:[rip+0x2020200a]        # 0x1602133f7
   1400113ed:	and    BYTE PTR [rax],ah
   1400113ef:	and    BYTE PTR [rax],ah
   1400113f1:	and    BYTE PTR [rax],ah
   1400113f3:	and    BYTE PTR [rax],ah
   1400113f5:	and    BYTE PTR [rdi+rbp*2+0x3a],dh
   1400113f9:	and    BYTE PTR [rdx],ah
   1400113fb:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021340b
   140011401:	and    BYTE PTR [rax],ah
   140011403:	and    BYTE PTR [rax],ah
   140011405:	and    BYTE PTR [rax],ah
   140011407:	and    BYTE PTR [rax],ah
   140011409:	and    BYTE PTR [rax+0x72],dl
   14001140c:	outs   dx,DWORD PTR ds:[rsi]
   14001140d:	jo     0x140011474
   14001140f:	jb     0x140011485
   140011411:	jns    0x140011454
   140011413:	outs   dx,BYTE PTR ds:[rsi]
   140011414:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   14001141b:	and    BYTE PTR [rbx+0xd],bh
   14001141e:	or     ah,BYTE PTR [rax]
   140011420:	and    BYTE PTR [rax],ah
   140011422:	and    BYTE PTR [rax],ah
   140011424:	and    BYTE PTR [rax],ah
   140011426:	and    BYTE PTR [rax],ah
   140011428:	and    BYTE PTR [rax],ah
   14001142a:	and    BYTE PTR [rax],ah
   14001142c:	and    BYTE PTR [rax],ah
   14001142e:	and    BYTE PTR [rbp+0x61],ah
   140011431:	jae    0x14001149c
   140011433:	outs   dx,BYTE PTR ds:[rsi]
   140011434:	cmp    ah,BYTE PTR [eax]
   140011437:	gs imul esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x7361652e
   140011441:	imul   ebp,DWORD PTR [rsi+0x67],0x76727543
   140011448:	gs or  eax,0x2020200a
   14001144e:	and    BYTE PTR [rax],ah
   140011450:	and    BYTE PTR [rax],ah
   140011452:	and    BYTE PTR [rax],ah
   140011454:	and    BYTE PTR [rax],ah
   140011456:	and    BYTE PTR [rax],ah
   140011458:	and    BYTE PTR [rax],ah
   14001145a:	and    BYTE PTR [rax+0x72],dh
   14001145d:	outs   dx,DWORD PTR ds:[rsi]
   14001145e:	jo     0x1400114c5
   140011460:	jb     0x1400114d6
   140011462:	jns    0x14001149e
   140011464:	and    BYTE PTR [rdx],ah
   140011466:	js     0x14001148a
   140011468:	or     eax,0x2020200a
   14001146d:	and    BYTE PTR [rax],ah
   14001146f:	and    BYTE PTR [rax],ah
   140011471:	and    BYTE PTR [rax],ah
   140011473:	and    BYTE PTR [rax],ah
   140011475:	and    BYTE PTR [rax],ah
   140011477:	and    BYTE PTR [rax],ah
   140011479:	and    BYTE PTR [rbp+rsi*2+0x72],ah
   14001147d:	(bad)  
   14001147e:	je     0x1400114e9
   140011480:	outs   dx,DWORD PTR ds:[rsi]
   140011481:	outs   dx,BYTE PTR ds:[rsi]
   140011482:	cmp    ah,BYTE PTR [rax]
   140011484:	jae    0x1400114f6
   140011486:	imul   ebp,DWORD PTR [rsi+0x42],0x762e786f
   14001148d:	(bad)  
   14001148e:	ins    BYTE PTR es:[rdi],dx
   14001148f:	jne    0x1400114f6
   140011491:	or     eax,0x2020200a
   140011496:	and    BYTE PTR [rax],ah
   140011498:	and    BYTE PTR [rax],ah
   14001149a:	and    BYTE PTR [rax],ah
   14001149c:	and    BYTE PTR [rax],ah
   14001149e:	and    BYTE PTR [rbp+0xd],bh
   1400114a1:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x1602134b1
   1400114a7:	and    BYTE PTR [rax],ah
   1400114a9:	and    BYTE PTR [rax],ah
   1400114ab:	and    BYTE PTR [rbp+0xd],bh
   1400114ae:	or     ah,BYTE PTR [rax]
   1400114b0:	and    BYTE PTR [rax],ah
   1400114b2:	and    BYTE PTR [rbp+0xd],bl
   1400114b5:	or     bh,BYTE PTR [rbp+0xd]
   1400114b8:	or     al,BYTE PTR [rax]
   1400114ba:	add    BYTE PTR [rax],al
   1400114bc:	add    BYTE PTR [rax],al
   1400114be:	add    BYTE PTR [rax],al
   1400114c0:	add    BYTE PTR [rdx],cl
   1400114c2:	or     ebp,DWORD PTR [rax+0x71]
   1400114c5:	pop    rsp
   1400114c6:	add    BYTE PTR [rdx+0x0],al
   1400114c9:	jne    0x1400114cb
   1400114cb:	je     0x1400114cd
   1400114cd:	je     0x1400114cf
   1400114cf:	outs   dx,DWORD PTR ds:[rsi]
   1400114d0:	add    BYTE PTR [rsi+0x0],ch
   1400114d3:	add    BYTE PTR cs:[rcx+0x0],dh
   1400114d7:	ins    DWORD PTR es:[rdi],dx
   1400114d8:	add    BYTE PTR [rax+rax*1+0xb],ch
   1400114dc:	movaps XMMWORD PTR [rcx-0x44],xmm2
   1400114e0:	add    BYTE PTR [rax+0x0],dh
   1400114e3:	jb     0x1400114e5
   1400114e5:	add    BYTE PTR gs:[rsi+0x0],dh
   1400114e9:	imul   eax,DWORD PTR [rax],0x770065
   1400114ef:	add    BYTE PTR cs:[rcx+0x0],dh
   1400114f3:	ins    DWORD PTR es:[rdi],dx
   1400114f4:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400114f8:	add    BYTE PTR [rax],al
   1400114fa:	add    BYTE PTR [rax],al
   1400114fc:	add    BYTE PTR [rdx],al
   1400114fe:	add    BYTE PTR [rax],al
   140011500:	add    BYTE PTR [rdx],al
   140011502:	add    BYTE PTR [rax],al
   140011504:	add    BYTE PTR [rcx],al
   140011506:	add    BYTE PTR [rax],al
   140011508:	add    BYTE PTR [rax],al
   14001150a:	add    BYTE PTR [rcx],al
   14001150c:	add    BYTE PTR [rax],al
   14001150e:	add    BYTE PTR [rcx],al
   140011510:	add    BYTE PTR [rax],al
   140011512:	add    BYTE PTR [rax],al
   140011514:	add    BYTE PTR [rax],al
   140011516:	add    BYTE PTR [rdx],bl
   140011518:	add    BYTE PTR [rax],al
   14001151a:	add    BYTE PTR [rax],al
   14001151c:	add    BYTE PTR [rcx],al
   14001151e:	add    BYTE PTR [rax],al
   140011520:	add    al,0xc8
	...
   14001152e:	add    BYTE PTR [rax],al
   140011530:	(bad)  
   140011531:	(bad)  
   140011532:	(bad)  
   140011533:	dec    DWORD PTR [rax+rax*1]
	...
   14001153e:	add    BYTE PTR [rax],al
   140011540:	fadd   DWORD PTR [rax]
   140011542:	add    BYTE PTR [rax],al
   140011544:	add    BYTE PTR [rax],al
   140011546:	add    BYTE PTR [rax],al
   140011548:	(bad)  
   140011549:	(bad)  
   14001154a:	(bad)  
   14001154b:	call   QWORD PTR [rdx]
	...
   140011555:	add    BYTE PTR [rax],al
   140011557:	add    ch,cl
   140011559:	add    BYTE PTR [rax],al
   14001155b:	add    BYTE PTR [rax],al
   14001155d:	add    BYTE PTR [rax],al
   14001155f:	add    bh,bh
   140011561:	(bad)  
   140011562:	(bad)  
   140011563:	inc    DWORD PTR [rax]
	...
   14001156d:	add    BYTE PTR [rax],al
   14001156f:	add    al,cl
   140011571:	add    BYTE PTR [rax],al
   140011573:	add    BYTE PTR [rax],al
   140011575:	add    BYTE PTR [rax],al
   140011577:	add    bh,bh
   140011579:	(bad)  
   14001157a:	(bad)  
   14001157b:	call   QWORD PTR [rsi]
	...
   140011585:	add    BYTE PTR [rax],al
   140011587:	add    BYTE PTR [rcx+0x0],dh
   14001158d:	add    BYTE PTR [rax],al
   14001158f:	add    bh,bh
   140011591:	(bad)  
   140011592:	(bad)  
   140011593:	inc    DWORD PTR [rax+rax*1]
	...
   14001159e:	add    BYTE PTR [rax],al
   1400115a0:	mov    al,0x0
   1400115a2:	add    BYTE PTR [rax],al
   1400115a4:	add    BYTE PTR [rax],al
   1400115a6:	add    BYTE PTR [rax],al
   1400115a8:	(bad)  
   1400115a9:	(bad)  
   1400115aa:	(bad)  
   1400115ab:	dec    DWORD PTR [rsi]
	...
   1400115b5:	add    BYTE PTR [rax],al
   1400115b7:	add    BYTE PTR [rbp+0x0],bl
   1400115bd:	add    BYTE PTR [rax],al
   1400115bf:	add    bh,bh
   1400115c1:	(bad)  
   1400115c2:	(bad)  
   1400115c3:	dec    DWORD PTR [rbx]
	...
   1400115cd:	add    BYTE PTR [rax],al
   1400115cf:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400115d6:	add    BYTE PTR [rax],al
   1400115d8:	(bad)  
   1400115d9:	(bad)  
   1400115da:	(bad)  
   1400115db:	dec    DWORD PTR [rcx]
	...
   1400115e5:	add    BYTE PTR [rax],al
   1400115e7:	add    BYTE PTR [rax+0x0],cl
   1400115ed:	add    BYTE PTR [rax],al
   1400115ef:	add    bh,bh
   1400115f1:	(bad)  
   1400115f2:	(bad)  
   1400115f3:	inc    DWORD PTR [rax+rax*1]
	...
   1400115fe:	add    BYTE PTR [rax],al
   140011600:	jp     0x140011602
   140011602:	add    BYTE PTR [rax],al
   140011604:	add    BYTE PTR [rax],al
   140011606:	add    BYTE PTR [rax],al
   140011608:	push   rbx
   140011609:	jo     0x140011677
   14001160b:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140011612:	outs   dx,DWORD PTR ds:[rsi]
   140011613:	jb     0x140011615
   140011615:	gs (bad) 
   140011617:	jae    0x140011682
   140011619:	outs   dx,BYTE PTR ds:[rsi]
   14001161a:	addr32 rex.XB jne 0x140011690
   14001161e:	jbe    0x140011685
   140011620:	rex.XB push 0x65676e61
   140011626:	add    BYTE PTR fs:[rax],al
   140011629:	gs (bad) 
   14001162b:	jae    0x140011696
   14001162d:	outs   dx,BYTE PTR ds:[rsi]
   14001162e:	addr32 rex.XB jne 0x1400116a4
   140011632:	jbe    0x140011699
   140011634:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011636:	fs gs rex.XB push 0x65676e61
   14001163e:	add    BYTE PTR fs:[rbx+0x6f],ah
   140011642:	fs add BYTE PTR gs:[rbx+0x65],dh
   140011647:	je     0x14001168e
   140011649:	(bad)  
   14001164a:	jae    0x1400116b5
   14001164c:	outs   dx,BYTE PTR ds:[rsi]
   14001164d:	addr32 rex.XB jne 0x1400116c3
   140011651:	jbe    0x1400116b8
   140011653:	add    BYTE PTR [rbp+0x61],ah
   140011656:	jae    0x1400116c1
   140011658:	outs   dx,BYTE PTR ds:[rsi]
   140011659:	addr32 rex.XB jne 0x1400116cf
   14001165d:	jbe    0x1400116c4
   14001165f:	add    BYTE PTR [rbx+0x65],dh
   140011662:	je     0x1400116b4
   140011664:	jb     0x1400116cb
   140011666:	jae    0x1400116cd
   140011668:	je     0x14001166a
   14001166a:	outs   dx,BYTE PTR ds:[rsi]
   14001166b:	(bad)  
   14001166c:	ins    DWORD PTR es:[rdi],dx
   14001166d:	add    BYTE PTR gs:[rax],al
   140011670:	(bad)  
	...
   14001167d:	add    BYTE PTR [rax],al
   14001167f:	add    BYTE PTR [rip+0xe000000],al        # 0x14e011685
   140011685:	add    BYTE PTR [rax],al
   140011687:	add    BYTE PTR [rcx],al
   140011689:	add    BYTE PTR [rax],al
   14001168b:	add    BYTE PTR [rax+rax*1],dh
	...
   1400116a2:	add    BYTE PTR [rax],al
   1400116a4:	add    al,BYTE PTR [rax]
   1400116a6:	add    BYTE PTR [rax],al
   1400116a8:	add    DWORD PTR [rax],eax
   1400116aa:	add    BYTE PTR [rax],al
   1400116ac:	add    BYTE PTR [rax],al
   1400116ae:	add    BYTE PTR [rax],al
   1400116b0:	(bad)  
   1400116b1:	add    BYTE PTR [rax],al
   1400116b3:	add    BYTE PTR [rdx],al
   1400116b5:	add    BYTE PTR [rax],al
   1400116b7:	add    BYTE PTR [rsi],al
   1400116b9:	add    BYTE PTR [rax],al
   1400116bb:	add    BYTE PTR [rbx],al
   1400116bd:	add    BYTE PTR [rax],al
   1400116bf:	add    BYTE PTR [rcx],al
   1400116c1:	add    BYTE PTR [rax],al
   1400116c3:	add    BYTE PTR [rax],ch
   1400116c5:	add    BYTE PTR [rax],al
   1400116c7:	add    BYTE PTR [rdx],al
   1400116c9:	add    BYTE PTR [rax],al
   1400116cb:	add    BYTE PTR [rsi],al
   1400116cd:	add    BYTE PTR [rax],al
   1400116cf:	add    BYTE PTR [rip+0x1000000],al        # 0x1410116d5
   1400116d5:	add    BYTE PTR [rax],al
   1400116d7:	add    BYTE PTR [rbx],ch
   1400116d9:	add    BYTE PTR [rax],al
   1400116db:	add    BYTE PTR [rdx],al
   1400116dd:	add    BYTE PTR [rax],al
   1400116df:	add    BYTE PTR [rdx],cl
   1400116e1:	add    BYTE PTR [rax],al
   1400116e3:	add    BYTE PTR [rdi],al
   1400116e5:	add    BYTE PTR [rax],al
   1400116e7:	add    BYTE PTR [rcx],al
   1400116e9:	add    BYTE PTR [rax],al
   1400116eb:	add    BYTE PTR [rsi],ch
   1400116ed:	add    BYTE PTR [rax],al
   1400116ef:	add    BYTE PTR [rdx],al
   1400116f1:	add    BYTE PTR [rax],al
   1400116f3:	add    BYTE PTR [rdx],cl
   1400116f5:	add    BYTE PTR [rax],al
   1400116f7:	add    BYTE PTR [rip+0x1000000],al        # 0x1410116fd
   1400116fd:	add    BYTE PTR [rax],al
   1400116ff:	add    BYTE PTR [rcx],dh
   140011701:	add    BYTE PTR [rax],al
   140011703:	add    BYTE PTR [rdx],al
   140011705:	add    BYTE PTR [rax],al
   140011707:	add    BYTE PTR [rdx],cl
   140011709:	add    BYTE PTR [rax],al
   14001170b:	add    BYTE PTR [rbx],ch
   14001170d:	add    BYTE PTR [rax],al
   14001170f:	add    BYTE PTR [rbx],ch
   140011711:	add    BYTE PTR [rax],al
   140011713:	add    BYTE PTR [rdx],cl
   140011715:	add    BYTE PTR [rax],al
   140011717:	add    BYTE PTR [rax+rax*1],al
   14001171a:	add    BYTE PTR [rax],al
   14001171c:	sub    eax,DWORD PTR [rax]
   14001171e:	add    BYTE PTR [rax],al
   140011720:	sbb    eax,0x6000000
   140011725:	add    BYTE PTR [rax],al
   140011727:	add    BYTE PTR [rbx],ch
   140011729:	add    BYTE PTR [rax],al
   14001172b:	add    BYTE PTR [rdx],cl
   14001172d:	add    BYTE PTR [rax],al
   14001172f:	add    BYTE PTR [rax],cl
   140011731:	add    BYTE PTR [rax],al
   140011733:	add    BYTE PTR [rbx],ch
   140011735:	add    BYTE PTR [rax],al
   140011737:	add    BYTE PTR [rdx],cl
   140011739:	add    BYTE PTR [rax],al
   14001173b:	add    BYTE PTR [rax+rax*1],al
   14001173e:	add    BYTE PTR [rax],al
   140011740:	(bad)  
   140011741:	add    BYTE PTR [rax],al
   140011743:	add    BYTE PTR [rip+0x3000000],bl        # 0x143011749
   140011749:	push   rcx
   14001174a:	rex.WB add BYTE PTR [r8],al
	...
   14001175d:	add    BYTE PTR [rax],al
   14001175f:	add    bh,bh
   140011761:	(bad)  
   140011762:	(bad)  
   140011763:	dec    DWORD PTR [rdx]
	...
   14001176d:	add    BYTE PTR [rax],al
   14001176f:	add    BYTE PTR [rax+0x0],bh
   140011772:	add    BYTE PTR [rax],al
   140011774:	add    BYTE PTR [rax],al
   140011776:	add    BYTE PTR [rax],al
   140011778:	(bad)  
   140011779:	(bad)  
   14001177a:	(bad)  
   14001177b:	call   QWORD PTR [rbx]
	...
   140011785:	add    BYTE PTR [rax],al
   140011787:	add    BYTE PTR [rbx+0x0],ch
   14001178a:	add    BYTE PTR [rax],al
   14001178c:	add    BYTE PTR [rax],al
   14001178e:	add    BYTE PTR [rax],al
   140011790:	(bad)  
   140011791:	(bad)  
   140011792:	(bad)  
   140011793:	inc    DWORD PTR [rax]
	...
   14001179d:	add    BYTE PTR [rax],al
   14001179f:	add    BYTE PTR [rdi+0x0],ah
   1400117a2:	add    BYTE PTR [rax],al
   1400117a4:	add    BYTE PTR [rax],al
   1400117a6:	add    BYTE PTR [rax],al
   1400117a8:	(bad)  
   1400117a9:	(bad)  
   1400117aa:	(bad)  
   1400117ab:	dec    DWORD PTR [rdx]
	...
   1400117b5:	add    BYTE PTR [rax],al
   1400117b7:	add    BYTE PTR [rax+0x0],dl
   1400117ba:	add    BYTE PTR [rax],al
   1400117bc:	add    BYTE PTR [rax],al
   1400117be:	add    BYTE PTR [rax],al
   1400117c0:	(bad)  
   1400117c1:	(bad)  
   1400117c2:	(bad)  
   1400117c3:	inc    DWORD PTR [rsi]
	...
   1400117cd:	add    BYTE PTR [rax],al
   1400117cf:	add    BYTE PTR [rbx+0x0],al
   1400117d2:	add    BYTE PTR [rax],al
   1400117d4:	add    BYTE PTR [rax],al
   1400117d6:	add    BYTE PTR [rax],al
   1400117d8:	rex.WRB (bad) 
   1400117da:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   1400117e1:	ja     0x1400117e3
   1400117e3:	je     0x14001184a
   1400117e5:	js     0x14001185b
   1400117e7:	rex.RB
   1400117e8:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x65],0x68437478
   1400117f1:	(bad)  
   1400117f2:	outs   dx,BYTE PTR ds:[rsi]
   1400117f3:	gs add BYTE PTR fs:[eax],al
   1400117f8:	imul   ebp,DWORD PTR [rbp+0x70],0x4474726f
   1400117ff:	(bad)  
   140011800:	je     0x140011863
   140011802:	add    BYTE PTR [rdx+0x65],dh
   140011805:	jae    0x14001187c
   140011807:	ins    BYTE PTR es:[rdi],dx
   140011808:	je     0x14001180a
   14001180a:	add    BYTE PTR [rax],al
   14001180c:	add    BYTE PTR [rax],al
   14001180e:	add    BYTE PTR [rax],al
   140011810:	(bad)  
	...
   14001181d:	add    BYTE PTR [rax],al
   14001181f:	add    BYTE PTR [rdx],al
   140011821:	add    BYTE PTR [rax],al
   140011823:	add    BYTE PTR [rsi],cl
	...
   140011845:	add    BYTE PTR [rax],al
   140011847:	add    BYTE PTR [rcx],al
   140011849:	add    BYTE PTR [rax],al
   14001184b:	add    BYTE PTR [rax],al
   14001184d:	add    BYTE PTR [rax],al
   14001184f:	add    BYTE PTR [rax],bl
   140011851:	add    BYTE PTR [rax],al
   140011853:	add    BYTE PTR [rdx],al
   140011855:	add    BYTE PTR [rax],al
   140011857:	add    BYTE PTR [rdx],cl
   140011859:	add    BYTE PTR [rax],al
   14001185b:	add    BYTE PTR [rbx],al
   14001185d:	add    BYTE PTR [rax],al
   14001185f:	add    BYTE PTR [rcx],al
   140011861:	add    BYTE PTR [rax],al
   140011863:	add    BYTE PTR [rcx],bl
   140011865:	add    BYTE PTR [rax],al
   140011867:	add    BYTE PTR [rdx],al
   140011869:	add    BYTE PTR [rax],al
   14001186b:	add    BYTE PTR [rdx],cl
   14001186d:	add    BYTE PTR [rax],al
   14001186f:	add    BYTE PTR [rbx],ch
   140011871:	add    BYTE PTR [rax],al
   140011873:	add    BYTE PTR [rbx],ch
   140011875:	add    BYTE PTR [rax],al
   140011877:	add    BYTE PTR [rdx],al
   140011879:	add    BYTE PTR [rax],al
   14001187b:	add    BYTE PTR [rax+rax*1],al
	...
   14001188e:	add    BYTE PTR [rax],al
   140011890:	(bad)  
   140011891:	(bad)  
   140011892:	(bad)  
   140011893:	call   QWORD PTR [rcx]
	...
   14001189d:	add    BYTE PTR [rax],al
   14001189f:	add    BYTE PTR [rax+0x0],bh
   1400118a2:	add    BYTE PTR [rax],al
   1400118a4:	add    BYTE PTR [rax],al
   1400118a6:	add    BYTE PTR [rax],al
   1400118a8:	(bad)  
   1400118a9:	(bad)  
   1400118aa:	(bad)  
   1400118ab:	dec    DWORD PTR [rcx]
	...
   1400118b5:	add    BYTE PTR [rax],al
   1400118b7:	add    BYTE PTR [rdx+0x0],dh
   1400118ba:	add    BYTE PTR [rax],al
   1400118bc:	add    BYTE PTR [rax],al
   1400118be:	add    BYTE PTR [rax],al
   1400118c0:	(bad)  
   1400118c1:	(bad)  
   1400118c2:	(bad)  
   1400118c3:	inc    DWORD PTR [rax]
	...
   1400118cd:	add    BYTE PTR [rax],al
   1400118cf:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400118d3:	add    BYTE PTR [rax],al
   1400118d5:	add    BYTE PTR [rax],al
   1400118d7:	add    bh,bh
   1400118d9:	(bad)  
   1400118da:	(bad)  
   1400118db:	dec    DWORD PTR [rcx]
	...
   1400118e5:	add    BYTE PTR [rax],al
   1400118e7:	add    BYTE PTR [rbp+0x0],cl
   1400118ea:	add    BYTE PTR [rax],al
   1400118ec:	add    BYTE PTR [rax],al
   1400118ee:	add    BYTE PTR [rax],al
   1400118f0:	(bad)  
   1400118f1:	(bad)  
   1400118f2:	(bad)  
   1400118f3:	dec    DWORD PTR [rax]
	...
   1400118fd:	add    BYTE PTR [rax],al
   1400118ff:	add    BYTE PTR [rdi],bh
   140011901:	add    BYTE PTR [rax],al
   140011903:	add    BYTE PTR [rax],al
   140011905:	add    BYTE PTR [rax],al
   140011907:	add    BYTE PTR [rbx+0x65],dl
   14001190a:	ins    DWORD PTR es:[edi],dx
   14001190c:	outs   dx,BYTE PTR gs:[rsi]
   14001190e:	je     0x140011960
   140011910:	jb     0x140011981
   140011912:	jo     0x140011979
   140011914:	jb     0x14001198a
   140011916:	imul   esp,DWORD PTR [rbp+0x73],0x55316300
   14001191d:	jo     0x140011983
   14001191f:	(bad)  
   140011920:	je     0x140011987
   140011922:	add    BYTE PTR fs:[rax],al
   140011925:	movsxd esi,DWORD PTR [rdx]
   140011927:	push   rbp
   140011928:	jo     0x14001198e
   14001192a:	(bad)  
   14001192b:	je     0x140011992
   14001192d:	add    BYTE PTR fs:[rax+0x55],dh
   140011931:	jo     0x140011997
   140011933:	(bad)  
   140011934:	je     0x14001199b
   140011936:	add    BYTE PTR fs:[rax],al
   140011939:	add    BYTE PTR [rax],al
   14001193b:	add    BYTE PTR [rax],al
   14001193d:	add    BYTE PTR [rax],al
   14001193f:	add    BYTE PTR [rdi],al
	...
   14001194d:	add    BYTE PTR [rax],al
   14001194f:	add    BYTE PTR [rbx],al
   140011951:	add    BYTE PTR [rax],al
   140011953:	add    BYTE PTR [rsi],cl
	...
   140011975:	add    BYTE PTR [rax],al
   140011977:	add    BYTE PTR [rcx],al
   140011979:	add    BYTE PTR [rax],al
   14001197b:	add    BYTE PTR [rax],al
   14001197d:	add    BYTE PTR [rax],al
   14001197f:	add    BYTE PTR [rip+0x2000000],bl        # 0x142011985
   140011985:	add    BYTE PTR [rax],al
   140011987:	add    BYTE PTR [rax],cl
   140011989:	add    BYTE PTR [rax],al
   14001198b:	add    BYTE PTR [rbx],al
   14001198d:	add    BYTE PTR [rax],al
   14001198f:	add    BYTE PTR [rax],al
   140011991:	add    BYTE PTR [rax],al
   140011993:	add    BYTE PTR [rsi],bl
   140011995:	add    BYTE PTR [rax],al
   140011997:	add    BYTE PTR [rdx],al
   140011999:	add    BYTE PTR [rax],al
   14001199b:	add    BYTE PTR [rax],cl
   14001199d:	add    BYTE PTR [rax],al
   14001199f:	add    BYTE PTR [rax+rax*1],al
   1400119a2:	add    BYTE PTR [rax],al
   1400119a4:	add    BYTE PTR [rax],al
   1400119a6:	add    BYTE PTR [rax],al
   1400119a8:	(bad)  
   1400119a9:	add    BYTE PTR [rax],al
   1400119ab:	add    BYTE PTR [rdx],al
   1400119ad:	add    BYTE PTR [rax],al
   1400119af:	add    BYTE PTR [rax],cl
   1400119b1:	add    BYTE PTR [rax],al
   1400119b3:	add    BYTE PTR [rbx],ch
   1400119b5:	add    BYTE PTR [rax],al
   1400119b7:	add    BYTE PTR [rbx],ch
   1400119b9:	add    BYTE PTR [rax],al
   1400119bb:	add    BYTE PTR [rbx],ch
	...
   1400119c5:	add    BYTE PTR [rax],al
   1400119c7:	add    BYTE PTR [rax+0x2f],al
   1400119ca:	add    DWORD PTR [rax+0x1],eax
   1400119cd:	add    BYTE PTR [rax],al
   1400119cf:	add    BYTE PTR [rax],bl
   1400119d1:	mov    cl,0x0
   1400119d3:	rex add DWORD PTR [rax],eax
   1400119d6:	add    BYTE PTR [rax],al
   1400119d8:	add    DWORD PTR [rax],eax
	...
   1400119e2:	add    BYTE PTR [rax],al
   1400119e4:	adc    al,dl
   1400119e6:	add    DWORD PTR [rax],eax
   1400119e8:	add    BYTE PTR [rdx],bl
   1400119ea:	add    DWORD PTR [rax],eax
   1400119ec:	fcomp  DWORD PTR [rcx]
   1400119ee:	add    DWORD PTR [rax],eax
	...
   140011a04:	add    DWORD PTR [rax],eax
   140011a06:	add    BYTE PTR [rax],al
   140011a08:	add    al,0x0
   140011a0a:	add    BYTE PTR [rax],al
   140011a0c:	sbb    BYTE PTR [rdx],bl
   140011a0e:	add    DWORD PTR [rax],eax
	...
   140011a18:	sbb    al,BYTE PTR [rcx]
   140011a1b:	add    BYTE PTR [rax+0x1a],ch
   140011a1e:	add    DWORD PTR [rax],eax
   140011a20:	enter  0x11a,0x0
   140011a24:	sbb    BYTE PTR [rbx],bl
   140011a26:	add    DWORD PTR [rax],eax
	...
   140011a40:	adc    al,dl
   140011a42:	add    DWORD PTR [rax],eax
   140011a44:	add    eax,DWORD PTR [rax]
   140011a46:	add    BYTE PTR [rax],al
   140011a48:	add    BYTE PTR [rax],al
   140011a4a:	add    BYTE PTR [rax],al
   140011a4c:	(bad)  
   140011a4d:	(bad)  
   140011a4e:	(bad)  
   140011a4f:	inc    DWORD PTR [rax]
   140011a51:	add    BYTE PTR [rax],al
   140011a53:	add    BYTE PTR [rax+0x0],al
   140011a56:	add    BYTE PTR [rax],al
   140011a58:	add    BYTE PTR [rdx],bl
   140011a5a:	add    DWORD PTR [rax],eax
	...
   140011a68:	cmp    al,dl
   140011a6a:	add    DWORD PTR [rax],eax
   140011a6c:	add    al,BYTE PTR [rax]
   140011a6e:	add    BYTE PTR [rax],al
   140011a70:	add    BYTE PTR [rax],al
   140011a72:	add    BYTE PTR [rax],al
   140011a74:	(bad)  
   140011a75:	(bad)  
   140011a76:	(bad)  
   140011a77:	inc    DWORD PTR [rax]
   140011a79:	add    BYTE PTR [rax],al
   140011a7b:	add    BYTE PTR [rax+0x0],al
   140011a7e:	add    BYTE PTR [rax],al
   140011a80:	nop
   140011a81:	sbb    al,BYTE PTR [rcx]
	...
   140011a93:	add    BYTE PTR [rcx],al
   140011a95:	add    BYTE PTR [rax],al
   140011a97:	add    BYTE PTR [rbx],al
   140011a99:	add    BYTE PTR [rax],al
   140011a9b:	add    BYTE PTR [rax+0x11a],ch
   140011aa1:	add    BYTE PTR [rax],al
   140011aa3:	add    BYTE PTR [rax],al
   140011aa5:	add    BYTE PTR [rax],al
   140011aa7:	add    BYTE PTR [rax+0x1a],ch
   140011aaa:	add    DWORD PTR [rax],eax
   140011aac:	enter  0x11a,0x0
   140011ab0:	sbb    BYTE PTR [rbx],bl
   140011ab2:	add    DWORD PTR [rax],eax
	...
   140011ac8:	pop    rax
   140011ac9:	rol    BYTE PTR [rcx],1
	...
   140011ad3:	add    bh,bh
   140011ad5:	(bad)  
   140011ad6:	(bad)  
   140011ad7:	inc    DWORD PTR [rax]
   140011ad9:	add    BYTE PTR [rax],al
   140011adb:	add    BYTE PTR [rax+0x0],al
   140011ade:	add    BYTE PTR [rax],al
   140011ae0:	lock sbb al,BYTE PTR [rcx]
	...
   140011af7:	add    BYTE PTR [rcx],al
   140011af9:	add    BYTE PTR [rax],al
   140011afb:	add    BYTE PTR [rax],cl
   140011afd:	sbb    eax,DWORD PTR [rcx]
	...
   140011b07:	add    al,cl
   140011b09:	sbb    al,BYTE PTR [rcx]
	...
   140011b17:	add    BYTE PTR [rax-0x30],bh
   140011b1a:	add    DWORD PTR [rax],eax
   140011b1c:	add    BYTE PTR [rax],al
   140011b1e:	add    BYTE PTR [rax],al
   140011b20:	adc    BYTE PTR [rax],al
   140011b22:	add    BYTE PTR [rax],al
   140011b24:	(bad)  
   140011b25:	(bad)  
   140011b26:	(bad)  
   140011b27:	inc    DWORD PTR [rax]
   140011b29:	add    BYTE PTR [rax],al
   140011b2b:	add    BYTE PTR [rax+0x0],al
   140011b2e:	add    BYTE PTR [rax],al
   140011b30:	rex sbb eax,DWORD PTR [rcx]
	...
   140011b47:	add    BYTE PTR [rcx],al
   140011b49:	add    BYTE PTR [rax],al
   140011b4b:	add    BYTE PTR [rax+0x1b],bl
   140011b4e:	add    DWORD PTR [rax],eax
	...
   140011b58:	push   0x11b
	...
   140011b65:	add    BYTE PTR [rax],al
   140011b67:	add    BYTE PTR [rax-0x30],bh
   140011b6a:	add    DWORD PTR [rax],eax
	...
   140011b74:	(bad)  
   140011b75:	(bad)  
   140011b76:	(bad)  
   140011b77:	inc    DWORD PTR [rax]
   140011b79:	add    BYTE PTR [rax],al
   140011b7b:	add    BYTE PTR [rax+0x0],al
   140011b7e:	add    BYTE PTR [rax],al
   140011b80:	rex sbb eax,DWORD PTR [rcx]
	...
   140011b8f:	add    BYTE PTR [rcx],al
   140011b91:	add    BYTE PTR [rax],al
   140011b93:	add    BYTE PTR [rax],dl
   140011b95:	add    BYTE PTR [rax],al
   140011b97:	add    BYTE PTR [rax],al
   140011b99:	add    BYTE PTR [rax],al
   140011b9b:	add    BYTE PTR [rax],dl
   140011b9d:	rol    BYTE PTR [rcx],1
   140011b9f:	add    BYTE PTR [rax],al
   140011ba1:	sbb    al,BYTE PTR [rcx]
   140011ba3:	add    BYTE PTR [rax+0x11b],dl
	...
   140011bb5:	add    BYTE PTR [rax],al
   140011bb7:	add    BYTE PTR [rcx],al
	...
   140011bc1:	add    BYTE PTR [rax],al
   140011bc3:	add    BYTE PTR [rax-0x1ffffe30],ah
   140011bc9:	sbb    eax,DWORD PTR [rcx]
   140011bcb:	add    BYTE PTR [rax+0x11b],bh
	...
   140011be1:	add    BYTE PTR [rax],al
   140011be3:	add    BYTE PTR [rcx],al
   140011be5:	add    BYTE PTR [rax],al
   140011be7:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x138011bed
   140011bed:	sbb    eax,DWORD PTR [rcx]
	...
   140011bf7:	add    BYTE PTR [rax],ch
   140011bf9:	sbb    al,0x1
   140011bfb:	add    BYTE PTR [rax+0x1c],dl
   140011bfe:	add    DWORD PTR [rax],eax
   140011c00:	mov    eax,0xc800011c
   140011c05:	sbb    al,BYTE PTR [rcx]
   140011c07:	add    BYTE PTR [rax],bl
   140011c09:	sbb    eax,0x1
	...
   140011c26:	add    BYTE PTR [rax],al
   140011c28:	movabs al,ds:0x40001d0
   140011c31:	add    BYTE PTR [rax],al
   140011c33:	add    bh,bh
   140011c35:	(bad)  
   140011c36:	(bad)  
   140011c37:	inc    DWORD PTR [rax]
   140011c39:	add    BYTE PTR [rax],al
   140011c3b:	add    BYTE PTR [rax+0x0],al
   140011c3e:	add    BYTE PTR [rax],al
   140011c40:	loopne 0x140011c5d
   140011c42:	add    DWORD PTR [rax],eax
	...
   140011c50:	rcl    al,0x1
   140011c53:	add    BYTE PTR [rbx],al
   140011c55:	add    BYTE PTR [rax],al
   140011c57:	add    BYTE PTR [rax],al
   140011c59:	add    BYTE PTR [rax],al
   140011c5b:	add    bh,bh
   140011c5d:	(bad)  
   140011c5e:	(bad)  
   140011c5f:	inc    DWORD PTR [rax]
   140011c61:	add    BYTE PTR [rax],al
   140011c63:	add    BYTE PTR [rax+0x0],al
   140011c66:	add    BYTE PTR [rax],al
   140011c68:	js     0x140011c86
   140011c6a:	add    DWORD PTR [rax],eax
	...
   140011c7c:	add    DWORD PTR [rax],eax
   140011c7e:	add    BYTE PTR [rax],al
   140011c80:	add    al,0x0
   140011c82:	add    BYTE PTR [rax],al
   140011c84:	nop
   140011c85:	sbb    al,0x1
	...
   140011c8f:	add    BYTE PTR [rax+0x1c],dl
   140011c92:	add    DWORD PTR [rax],eax
   140011c94:	mov    eax,0xc800011c
   140011c99:	sbb    al,BYTE PTR [rcx]
   140011c9b:	add    BYTE PTR [rax],bl
   140011c9d:	sbb    eax,0x1
	...
   140011cb6:	add    BYTE PTR [rax],al
   140011cb8:	loopne 0x140011c8a
   140011cba:	add    DWORD PTR [rax],eax
   140011cbc:	add    al,BYTE PTR [rax]
   140011cbe:	add    BYTE PTR [rax],al
   140011cc0:	add    BYTE PTR [rax],al
   140011cc2:	add    BYTE PTR [rax],al
   140011cc4:	(bad)  
   140011cc5:	(bad)  
   140011cc6:	(bad)  
   140011cc7:	inc    DWORD PTR [rax]
   140011cc9:	add    BYTE PTR [rax],al
   140011ccb:	add    BYTE PTR [rax+0x0],al
   140011cce:	add    BYTE PTR [rax],al
   140011cd0:	loopne 0x140011cee
   140011cd2:	add    DWORD PTR [rax],eax
	...
   140011ce4:	add    DWORD PTR [rax],eax
   140011ce6:	add    BYTE PTR [rax],al
   140011ce8:	add    eax,DWORD PTR [rax]
   140011cea:	add    BYTE PTR [rax],al
   140011cec:	clc    
   140011ced:	sbb    al,0x1
	...
   140011cf7:	add    BYTE PTR [rax-0x37fffee4],bh
   140011cfd:	sbb    al,BYTE PTR [rcx]
   140011cff:	add    BYTE PTR [rax],bl
   140011d01:	sbb    eax,0x1
	...
   140011d16:	add    BYTE PTR [rax],al
   140011d18:	add    cl,dl
   140011d1a:	add    DWORD PTR [rax],eax
   140011d1c:	add    BYTE PTR [rax],al
   140011d1e:	add    BYTE PTR [rax],al
   140011d20:	adc    BYTE PTR [rax],al
   140011d22:	add    BYTE PTR [rax],al
   140011d24:	(bad)  
   140011d25:	(bad)  
   140011d26:	(bad)  
   140011d27:	inc    DWORD PTR [rax]
   140011d29:	add    BYTE PTR [rax],al
   140011d2b:	add    BYTE PTR [rax+0x0],al
   140011d2e:	add    BYTE PTR [rax],al
   140011d30:	rex sbb eax,0x1
	...
   140011d46:	add    BYTE PTR [rax],al
   140011d48:	add    DWORD PTR [rax],eax
   140011d4a:	add    BYTE PTR [rax],al
   140011d4c:	pop    rax
   140011d4d:	sbb    eax,0x1
   140011d52:	add    BYTE PTR [rax],al
   140011d54:	add    BYTE PTR [rax],al
   140011d56:	add    BYTE PTR [rax],al
   140011d58:	push   0x11d
	...
   140011d69:	rol    DWORD PTR [rcx],1
	...
   140011d73:	add    bh,bh
   140011d75:	(bad)  
   140011d76:	(bad)  
   140011d77:	inc    DWORD PTR [rax]
   140011d79:	add    BYTE PTR [rax],al
   140011d7b:	add    BYTE PTR [rax+0x0],al
   140011d7e:	add    BYTE PTR [rax],al
   140011d80:	rex sbb eax,0x1
	...
   140011d8e:	add    BYTE PTR [rax],al
   140011d90:	add    DWORD PTR [rax],eax
   140011d92:	add    BYTE PTR [rax],al
   140011d94:	adc    BYTE PTR [rax],al
   140011d96:	add    BYTE PTR [rax],al
   140011d98:	add    BYTE PTR [rax],al
   140011d9a:	add    BYTE PTR [rax],al
   140011d9c:	movabs al,ds:0x9000011be00001d0
   140011da5:	sbb    eax,0x1
	...
   140011db6:	add    BYTE PTR [rax],al
   140011db8:	add    DWORD PTR [rax],eax
	...
   140011dc2:	add    BYTE PTR [rax],al
   140011dc4:	loopne 0x140011d96
   140011dc6:	add    DWORD PTR [rax],eax
   140011dc8:	loopne 0x140011de6
   140011dca:	add    DWORD PTR [rax],eax
   140011dcc:	mov    eax,0x11d
	...
   140011ddd:	add    BYTE PTR [rax],al
   140011ddf:	add    BYTE PTR [rcx],al
   140011de1:	add    BYTE PTR [rax],al
   140011de3:	add    BYTE PTR [rax],dl
   140011de5:	add    BYTE PTR [rax],al
   140011de7:	add    BYTE PTR [rax],al
   140011de9:	add    BYTE PTR [rax],al
   140011deb:	add    al,ah
   140011ded:	rol    BYTE PTR [rcx],1
   140011def:	add    al,ah
   140011df1:	sbb    al,0x1
   140011df3:	add    al,ah
   140011df5:	sbb    eax,0x1
	...
   140011e06:	add    BYTE PTR [rax],al
   140011e08:	add    DWORD PTR [rax],eax
	...
   140011e12:	add    BYTE PTR [rax],al
   140011e14:	sub    cl,dl
   140011e16:	add    DWORD PTR [rax],eax
   140011e18:	xor    BYTE PTR [rsi],bl
   140011e1a:	add    DWORD PTR [rax],eax
   140011e1c:	or     BYTE PTR [rsi],bl
   140011e1e:	add    DWORD PTR [rax],eax
	...
   140011e34:	add    DWORD PTR [rax],eax
   140011e36:	add    BYTE PTR [rax],al
   140011e38:	add    eax,0x48000000
   140011e3d:	(bad)  
   140011e3e:	add    DWORD PTR [rax],eax
	...
   140011e48:	js     0x140011e68
   140011e4a:	add    DWORD PTR [rax],eax
   140011e4c:	movabs al,ds:0xc800011a6800011e
   140011e55:	sbb    al,BYTE PTR [rcx]
   140011e57:	add    BYTE PTR [rax],bl
   140011e59:	sbb    eax,DWORD PTR [rcx]
	...
   140011e77:	add    BYTE PTR [rax],ch
   140011e79:	rol    DWORD PTR [rcx],1
   140011e7b:	add    BYTE PTR [rax+rax*1],al
   140011e7e:	add    BYTE PTR [rax],al
   140011e80:	add    BYTE PTR [rax],al
   140011e82:	add    BYTE PTR [rax],al
   140011e84:	(bad)  
   140011e85:	(bad)  
   140011e86:	(bad)  
   140011e87:	inc    DWORD PTR [rax]
   140011e89:	add    BYTE PTR [rax],al
   140011e8b:	add    BYTE PTR [rax+0x0],al
   140011e8e:	add    BYTE PTR [rax],al
   140011e90:	xor    BYTE PTR [rsi],bl
   140011e92:	add    DWORD PTR [rax],eax
	...
   140011ea0:	push   rax
   140011ea1:	rol    DWORD PTR [rcx],1
   140011ea3:	add    BYTE PTR [rbx],al
   140011ea5:	add    BYTE PTR [rax],al
   140011ea7:	add    BYTE PTR [rax],al
   140011ea9:	add    BYTE PTR [rax],al
   140011eab:	add    bh,bh
   140011ead:	(bad)  
   140011eae:	(bad)  
   140011eaf:	inc    DWORD PTR [rax]
   140011eb1:	add    BYTE PTR [rax],al
   140011eb3:	add    BYTE PTR [rax+0x0],al
   140011eb6:	add    BYTE PTR [rax],al
   140011eb8:	enter  0x11e,0x0
	...
   140011ecc:	add    DWORD PTR [rax],eax
   140011ece:	add    BYTE PTR [rax],al
   140011ed0:	add    al,0x0
   140011ed2:	add    BYTE PTR [rax],al
   140011ed4:	loopne 0x140011ef4
   140011ed6:	add    DWORD PTR [rax],eax
	...
   140011ee0:	movabs al,ds:0xc800011a6800011e
   140011ee9:	sbb    al,BYTE PTR [rcx]
   140011eeb:	add    BYTE PTR [rax],bl
   140011eed:	sbb    eax,DWORD PTR [rcx]
	...
   140011f07:	add    BYTE PTR [rcx],al
   140011f09:	add    BYTE PTR [rax],al
   140011f0b:	add    BYTE PTR [rax],dl
   140011f0d:	add    BYTE PTR [rax],al
   140011f0f:	add    BYTE PTR [rax],al
   140011f11:	add    BYTE PTR [rax],al
   140011f13:	add    BYTE PTR [rax],ch
   140011f15:	rol    DWORD PTR [rcx],1
   140011f17:	add    BYTE PTR [rax],dh
   140011f19:	(bad)  
   140011f1a:	add    DWORD PTR [rax],eax
   140011f1c:	or     BYTE PTR [rdi],bl
   140011f1e:	add    DWORD PTR [rax],eax
	...
   140011f30:	add    DWORD PTR [rax],eax
	...
   140011f3a:	add    BYTE PTR [rax],al
   140011f3c:	js     0x140011f0f
   140011f3e:	add    DWORD PTR [rax],eax
   140011f40:	pop    rax
   140011f41:	(bad)  
   140011f42:	add    DWORD PTR [rax],eax
   140011f44:	xor    BYTE PTR [rdi],bl
   140011f46:	add    DWORD PTR [rax],eax
	...
   140011f5c:	add    DWORD PTR [rax],eax
   140011f5e:	add    BYTE PTR [rax],al
   140011f60:	add    eax,0x70000000
   140011f65:	(bad)  
   140011f66:	add    DWORD PTR [rax],eax
	...
   140011f70:	movabs al,ds:0xb800011fc800011f
   140011f79:	sbb    al,0x1
   140011f7b:	add    al,cl
   140011f7d:	sbb    al,BYTE PTR [rcx]
   140011f7f:	add    BYTE PTR [rax],bl
   140011f81:	sbb    eax,0x1
	...
   140011f9e:	add    BYTE PTR [rax],al
   140011fa0:	js     0x140011f73
   140011fa2:	add    DWORD PTR [rax],eax
   140011fa4:	add    al,0x0
   140011fa6:	add    BYTE PTR [rax],al
   140011fa8:	add    BYTE PTR [rax],al
   140011faa:	add    BYTE PTR [rax],al
   140011fac:	(bad)  
   140011fad:	(bad)  
   140011fae:	(bad)  
   140011faf:	inc    DWORD PTR [rax]
   140011fb1:	add    BYTE PTR [rax],al
   140011fb3:	add    BYTE PTR [rax+0x0],al
   140011fb6:	add    BYTE PTR [rax],al
   140011fb8:	pop    rax
   140011fb9:	(bad)  
   140011fba:	add    DWORD PTR [rax],eax
	...
   140011fc8:	movabs al,ds:0x30001d1
   140011fd1:	add    BYTE PTR [rax],al
   140011fd3:	add    bh,bh
   140011fd5:	(bad)  
   140011fd6:	(bad)  
   140011fd7:	inc    DWORD PTR [rax]
   140011fd9:	add    BYTE PTR [rax],al
   140011fdb:	add    BYTE PTR [rax+0x0],al
   140011fde:	add    BYTE PTR [rax],al
   140011fe0:	lock (bad) 
   140011fe2:	add    DWORD PTR [rax],eax
	...
   140011ff4:	add    DWORD PTR [rax],eax
   140011ff6:	add    BYTE PTR [rax],al
   140011ff8:	add    al,0x0
   140011ffa:	add    BYTE PTR [rax],al
   140011ffc:	or     BYTE PTR [rax],ah
   140011ffe:	add    DWORD PTR [rax],eax
	...
   140012008:	enter  0x11f,0x0
   14001200c:	mov    eax,0xc800011c
   140012011:	sbb    al,BYTE PTR [rcx]
   140012013:	add    BYTE PTR [rax],bl
   140012015:	sbb    eax,0x1
	...
   14001202e:	add    BYTE PTR [rax],al
   140012030:	add    DWORD PTR [rax],eax
   140012032:	add    BYTE PTR [rax],al
   140012034:	adc    BYTE PTR [rax],al
   140012036:	add    BYTE PTR [rax],al
   140012038:	add    BYTE PTR [rax],al
   14001203a:	add    BYTE PTR [rax],al
   14001203c:	js     0x14001200f
   14001203e:	add    DWORD PTR [rax],eax
   140012040:	pop    rax
   140012041:	(bad)  
   140012042:	add    DWORD PTR [rax],eax
   140012044:	xor    BYTE PTR [rax],ah
   140012046:	add    DWORD PTR [rax],eax
	...
   140012058:	add    DWORD PTR [rax],eax
	...
   140012062:	add    BYTE PTR [rax],al
   140012064:	enter  0x1d1,0x0
   140012068:	and    BYTE PTR [rax],0x1
   14001206b:	add    BYTE PTR [rax+0x20],bl
   14001206e:	add    DWORD PTR [rax],eax
	...
   140012084:	add    DWORD PTR [rax],eax
   140012086:	add    BYTE PTR [rax],al
   140012088:	add    eax,0x98000000
   14001208d:	and    BYTE PTR [rcx],al
	...
   140012097:	add    al,cl
   140012099:	and    BYTE PTR [rcx],al
   14001209b:	add    al,dh
   14001209d:	and    BYTE PTR [rcx],al
   14001209f:	add    BYTE PTR [rax-0x37fffee4],bh
   1400120a5:	sbb    al,BYTE PTR [rcx]
   1400120a7:	add    BYTE PTR [rax],bl
   1400120a9:	sbb    eax,0x1
	...
   1400120c6:	add    BYTE PTR [rax],al
   1400120c8:	enter  0x1d1,0x0
   1400120cc:	add    al,0x0
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	add    BYTE PTR [rax],al
   1400120d2:	add    BYTE PTR [rax],al
   1400120d4:	(bad)  
   1400120d5:	(bad)  
   1400120d6:	(bad)  
   1400120d7:	inc    DWORD PTR [rax]
   1400120d9:	add    BYTE PTR [rax],al
   1400120db:	add    BYTE PTR [rax+0x0],al
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	and    BYTE PTR [rax],0x1
	...
   1400120ef:	add    al,ch
   1400120f1:	rol    DWORD PTR [rcx],1
   1400120f3:	add    BYTE PTR [rbx],al
   1400120f5:	add    BYTE PTR [rax],al
   1400120f7:	add    BYTE PTR [rax],al
   1400120f9:	add    BYTE PTR [rax],al
   1400120fb:	add    bh,bh
   1400120fd:	(bad)  
   1400120fe:	(bad)  
   1400120ff:	inc    DWORD PTR [rax]
   140012101:	add    BYTE PTR [rax],al
   140012103:	add    BYTE PTR [rax+0x0],al
   140012106:	add    BYTE PTR [rax],al
   140012108:	sbb    BYTE PTR [rcx],ah
   14001210a:	add    DWORD PTR [rax],eax
	...
   14001211c:	add    DWORD PTR [rax],eax
   14001211e:	add    BYTE PTR [rax],al
   140012120:	add    al,0x0
   140012122:	add    BYTE PTR [rax],al
   140012124:	xor    BYTE PTR [rcx],ah
   140012126:	add    DWORD PTR [rax],eax
	...
   140012130:	lock and BYTE PTR [rcx],al
   140012133:	add    BYTE PTR [rax-0x37fffee4],bh
   140012139:	sbb    al,BYTE PTR [rcx]
   14001213b:	add    BYTE PTR [rax],bl
   14001213d:	sbb    eax,0x1
	...
   140012156:	add    BYTE PTR [rax],al
   140012158:	add    DWORD PTR [rax],eax
   14001215a:	add    BYTE PTR [rax],al
   14001215c:	adc    BYTE PTR [rax],al
   14001215e:	add    BYTE PTR [rax],al
   140012160:	add    BYTE PTR [rax],al
   140012162:	add    BYTE PTR [rax],al
   140012164:	enter  0x1d1,0x0
   140012168:	and    BYTE PTR [rax],0x1
   14001216b:	add    BYTE PTR [rax+0x21],bl
   14001216e:	add    DWORD PTR [rax],eax
	...
   140012180:	add    DWORD PTR [rax],eax
	...
   14001218a:	add    BYTE PTR [rax],al
   14001218c:	adc    dl,dl
   14001218e:	add    DWORD PTR [rax],eax
   140012190:	test   al,0x21
   140012192:	add    DWORD PTR [rax],eax
   140012194:	and    BYTE PTR [rcx],0x1
	...
   1400121af:	add    BYTE PTR [rdx],al
   1400121b1:	add    BYTE PTR [rax],al
   1400121b3:	add    al,al
   1400121b5:	and    DWORD PTR [rcx],eax
	...
   1400121bf:	add    al,bl
   1400121c1:	and    DWORD PTR [rcx],eax
   1400121c3:	add    BYTE PTR [rax+0x1b],ch
   1400121c6:	add    DWORD PTR [rax],eax
	...
   1400121d8:	adc    dl,dl
   1400121da:	add    DWORD PTR [rax],eax
   1400121dc:	add    DWORD PTR [rax],eax
   1400121de:	add    BYTE PTR [rax],al
   1400121e0:	add    BYTE PTR [rax],al
   1400121e2:	add    BYTE PTR [rax],al
   1400121e4:	(bad)  
   1400121e5:	(bad)  
   1400121e6:	(bad)  
   1400121e7:	inc    DWORD PTR [rax]
   1400121e9:	add    BYTE PTR [rax],al
   1400121eb:	add    BYTE PTR [rax+0x0],al
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	test   al,0x21
   1400121f2:	add    DWORD PTR [rax],eax
	...
   140012200:	add    DWORD PTR [rax],eax
	...
   14001220a:	add    BYTE PTR [rax],al
   14001220c:	cmp    dl,dl
   14001220e:	add    DWORD PTR [rax],eax
   140012210:	sub    BYTE PTR [rdx],ah
   140012212:	add    DWORD PTR [rax],eax
   140012214:	add    BYTE PTR [rdx],ah
   140012216:	add    DWORD PTR [rax],eax
	...
   14001222c:	add    DWORD PTR [rax],eax
   14001222e:	add    BYTE PTR [rax],al
   140012230:	(bad)  
   140012231:	add    BYTE PTR [rax],al
   140012233:	add    BYTE PTR [rax+0x22],al
   140012236:	add    DWORD PTR [rax],eax
	...
   140012240:	js     0x140012264
   140012242:	add    DWORD PTR [rax],eax
   140012244:	movabs al,ds:0xb800011c50000122
   14001224d:	sbb    al,0x1
   14001224f:	add    al,cl
   140012251:	sbb    al,BYTE PTR [rcx]
   140012253:	add    BYTE PTR [rax],bl
   140012255:	sbb    eax,0x1
	...
   140012276:	add    BYTE PTR [rax],al
   140012278:	cmp    dl,dl
   14001227a:	add    DWORD PTR [rax],eax
   14001227c:	add    eax,0x0
   140012281:	add    BYTE PTR [rax],al
   140012283:	add    bh,bh
   140012285:	(bad)  
   140012286:	(bad)  
   140012287:	inc    DWORD PTR [rax]
   140012289:	add    BYTE PTR [rax],al
   14001228b:	add    BYTE PTR [rax+0x0],al
   14001228e:	add    BYTE PTR [rax],al
   140012290:	sub    BYTE PTR [rdx],ah
   140012292:	add    DWORD PTR [rax],eax
	...
   1400122a0:	(bad)  
   1400122a1:	rol    BYTE PTR [rcx],cl
   1400122a3:	add    BYTE PTR [rax+rax*1],al
   1400122a6:	add    BYTE PTR [rax],al
   1400122a8:	add    BYTE PTR [rax],al
   1400122aa:	add    BYTE PTR [rax],al
   1400122ac:	(bad)  
   1400122ad:	(bad)  
   1400122ae:	(bad)  
   1400122af:	inc    DWORD PTR [rax]
   1400122b1:	add    BYTE PTR [rax],al
   1400122b3:	add    BYTE PTR [rax+0x0],al
   1400122b6:	add    BYTE PTR [rax],al
   1400122b8:	enter  0x122,0x0
	...
   1400122cc:	add    DWORD PTR [rax],eax
   1400122ce:	add    BYTE PTR [rax],al
   1400122d0:	add    eax,0xe0000000
   1400122d5:	and    al,BYTE PTR [rcx]
	...
   1400122df:	add    BYTE PTR [rax+0x50000122],ah
   1400122e5:	sbb    al,0x1
   1400122e7:	add    BYTE PTR [rax-0x37fffee4],bh
   1400122ed:	sbb    al,BYTE PTR [rcx]
   1400122ef:	add    BYTE PTR [rax],bl
   1400122f1:	sbb    eax,0x1
	...
   14001230e:	add    BYTE PTR [rax],al
   140012310:	add    DWORD PTR [rax],eax
   140012312:	add    BYTE PTR [rax],al
   140012314:	adc    BYTE PTR [rax],al
   140012316:	add    BYTE PTR [rax],al
   140012318:	add    BYTE PTR [rax],al
   14001231a:	add    BYTE PTR [rax],al
   14001231c:	cmp    dl,dl
   14001231e:	add    DWORD PTR [rax],eax
   140012320:	sub    BYTE PTR [rdx],ah
   140012322:	add    DWORD PTR [rax],eax
   140012324:	adc    BYTE PTR [rbx],ah
   140012326:	add    DWORD PTR [rax],eax
	...
   140012338:	add    DWORD PTR [rax],eax
	...
   140012342:	add    BYTE PTR [rax],al
   140012344:	nop
   140012345:	rol    BYTE PTR [rcx],cl
   140012347:	add    BYTE PTR [rax+0x23],ah
   14001234a:	add    DWORD PTR [rax],eax
   14001234c:	cmp    BYTE PTR [rbx],ah
   14001234e:	add    DWORD PTR [rax],eax
	...
   140012364:	add    DWORD PTR [rax],eax
   140012366:	add    BYTE PTR [rax],al
   140012368:	add    eax,0x78000000
   14001236d:	and    eax,DWORD PTR [rcx]
	...
   140012377:	add    BYTE PTR [rax-0x5ffffedd],ch
   14001237d:	(bad)  
   14001237e:	add    DWORD PTR [rax],eax
   140012380:	push   0xffffffffc800011a
   140012385:	sbb    al,BYTE PTR [rcx]
   140012387:	add    BYTE PTR [rax],bl
   140012389:	sbb    eax,DWORD PTR [rcx]
	...
   1400123a7:	add    BYTE PTR [rax+0x40001d2],dl
   1400123ad:	add    BYTE PTR [rax],al
   1400123af:	add    BYTE PTR [rax],al
   1400123b1:	add    BYTE PTR [rax],al
   1400123b3:	add    bh,bh
   1400123b5:	(bad)  
   1400123b6:	(bad)  
   1400123b7:	inc    DWORD PTR [rax]
   1400123b9:	add    BYTE PTR [rax],al
   1400123bb:	add    BYTE PTR [rax+0x0],al
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	(bad)  
   1400123c1:	and    eax,DWORD PTR [rcx]
	...
   1400123cf:	add    BYTE PTR [rcx],al
   1400123d1:	add    BYTE PTR [rax],al
   1400123d3:	add    BYTE PTR [rax],dl
   1400123d5:	add    BYTE PTR [rax],al
   1400123d7:	add    BYTE PTR [rax],al
   1400123d9:	add    BYTE PTR [rax],al
   1400123db:	add    BYTE PTR [rax+0x600001d2],dl
   1400123e1:	and    eax,DWORD PTR [rcx]
   1400123e3:	add    al,dl
   1400123e5:	and    eax,DWORD PTR [rcx]
	...
   1400123f7:	add    BYTE PTR [rcx],al
	...
   140012401:	add    BYTE PTR [rax],al
   140012403:	add    BYTE PTR [rax+0x200001d2],bh
   140012409:	and    al,0x1
   14001240b:	add    al,bh
   14001240d:	and    eax,DWORD PTR [rcx]
	...
   140012423:	add    BYTE PTR [rcx],al
   140012425:	add    BYTE PTR [rax],al
   140012427:	add    BYTE PTR [rax+rax*1],al
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	cmp    BYTE PTR [rcx+rax*1],ah
	...
   140012437:	add    BYTE PTR [rax+0x24],ah
   14001243a:	add    DWORD PTR [rax],eax
   14001243c:	mov    eax,0xc800011c
   140012441:	sbb    al,BYTE PTR [rcx]
   140012443:	add    BYTE PTR [rax],bl
   140012445:	sbb    eax,0x1
	...
   14001245e:	add    BYTE PTR [rax],al
   140012460:	mov    eax,0x30001d2
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rax],al
   140012469:	add    BYTE PTR [rax],al
   14001246b:	add    bh,bh
   14001246d:	(bad)  
   14001246e:	(bad)  
   14001246f:	inc    DWORD PTR [rax]
   140012471:	add    BYTE PTR [rax],al
   140012473:	add    BYTE PTR [rax+0x0],al
   140012476:	add    BYTE PTR [rax],al
   140012478:	and    BYTE PTR [rcx+rax*1],ah
	...
   140012487:	add    BYTE PTR [rcx],al
   140012489:	add    BYTE PTR [rax],al
   14001248b:	add    BYTE PTR [rax],dl
   14001248d:	add    BYTE PTR [rax],al
   14001248f:	add    BYTE PTR [rax],al
   140012491:	add    BYTE PTR [rax],al
   140012493:	add    BYTE PTR [rax+0x200001d2],bh
   140012499:	and    al,0x1
   14001249b:	add    BYTE PTR [rax+0x124],cl
	...
   1400124ad:	add    BYTE PTR [rax],al
   1400124af:	add    BYTE PTR [rcx],al
	...
   1400124b9:	add    BYTE PTR [rax],al
   1400124bb:	add    al,ah
   1400124bd:	rol    BYTE PTR [rcx],cl
   1400124bf:	add    al,bl
   1400124c1:	and    al,0x1
   1400124c3:	add    BYTE PTR [rax+0x124],dh
	...
   1400124d9:	add    BYTE PTR [rax],al
   1400124db:	add    BYTE PTR [rcx],al
   1400124dd:	add    BYTE PTR [rax],al
   1400124df:	add    BYTE PTR [rax+rax*1],al
   1400124e2:	add    BYTE PTR [rax],al
   1400124e4:	lock and al,0x1
	...
   1400124ef:	add    BYTE PTR [rax],bl
   1400124f1:	and    eax,0x1cb80001
   1400124f6:	add    DWORD PTR [rax],eax
   1400124f8:	enter  0x11a,0x0
   1400124fc:	sbb    BYTE PTR [rip+0x1],bl        # 0x140012503
	...
   140012516:	add    BYTE PTR [rax],al
   140012518:	loopne 0x1400124ec
   14001251a:	add    DWORD PTR [rax],eax
   14001251c:	add    eax,DWORD PTR [rax]
   14001251e:	add    BYTE PTR [rax],al
   140012520:	add    BYTE PTR [rax],al
   140012522:	add    BYTE PTR [rax],al
   140012524:	(bad)  
   140012525:	(bad)  
   140012526:	(bad)  
   140012527:	inc    DWORD PTR [rax]
   140012529:	add    BYTE PTR [rax],al
   14001252b:	add    BYTE PTR [rax+0x0],al
   14001252e:	add    BYTE PTR [rax],al
   140012530:	fsub   DWORD PTR [rcx+rax*1]
	...
   14001253f:	add    BYTE PTR [rcx],al
   140012541:	add    BYTE PTR [rax],al
   140012543:	add    BYTE PTR [rax],dl
   140012545:	add    BYTE PTR [rax],al
   140012547:	add    BYTE PTR [rax],al
   140012549:	add    BYTE PTR [rax],al
   14001254b:	add    al,ah
   14001254d:	rol    BYTE PTR [rcx],cl
   14001254f:	add    al,bl
   140012551:	and    al,0x1
   140012553:	add    BYTE PTR [rax+0x25],al
   140012556:	add    DWORD PTR [rax],eax
	...
   140012568:	add    DWORD PTR [rax],eax
	...
   140012572:	add    BYTE PTR [rax],al
   140012574:	add    bl,dl
   140012576:	add    DWORD PTR [rax],eax
   140012578:	nop
   140012579:	and    eax,0x25680001
   14001257e:	add    DWORD PTR [rax],eax
	...
   140012598:	add    al,BYTE PTR [rax]
   14001259a:	add    BYTE PTR [rax],al
   14001259c:	test   al,0x25
   14001259e:	add    DWORD PTR [rax],eax
	...
   1400125a8:	shl    BYTE PTR [rip+0x1ac80001],0x1        # 0x15ac925b0
	...
   1400125bf:	add    BYTE PTR [rax],al
   1400125c1:	rol    DWORD PTR [rcx],cl
   1400125c3:	add    BYTE PTR [rcx],al
   1400125c5:	add    BYTE PTR [rax],al
   1400125c7:	add    BYTE PTR [rax],al
   1400125c9:	add    BYTE PTR [rax],al
   1400125cb:	add    bh,bh
   1400125cd:	(bad)  
   1400125ce:	(bad)  
   1400125cf:	inc    DWORD PTR [rax]
   1400125d1:	add    BYTE PTR [rax],al
   1400125d3:	add    BYTE PTR [rax+0x0],al
   1400125d6:	add    BYTE PTR [rax],al
   1400125d8:	nop
   1400125d9:	and    eax,0x1
	...
   1400125e6:	add    BYTE PTR [rax],al
   1400125e8:	add    DWORD PTR [rax],eax
	...
   1400125f2:	add    BYTE PTR [rax],al
   1400125f4:	sub    bl,dl
   1400125f6:	add    DWORD PTR [rax],eax
   1400125f8:	adc    BYTE PTR [rsi],ah
   1400125fa:	add    DWORD PTR [rax],eax
   1400125fc:	call   0x140012726
	...
   140012611:	add    BYTE PTR [rax],al
   140012613:	add    BYTE PTR [rcx],al
   140012615:	add    BYTE PTR [rax],al
   140012617:	add    BYTE PTR [rip+0x28000000],al        # 0x16801261d
   14001261d:	add    DWORD PTR es:[rax],eax
	...
   140012628:	pop    rax
   140012629:	add    DWORD PTR es:[rax],eax
   14001262c:	enter  0x11f,0x0
   140012630:	mov    eax,0xc800011c
   140012635:	sbb    al,BYTE PTR [rcx]
   140012637:	add    BYTE PTR [rax],bl
   140012639:	sbb    eax,0x1
	...
   140012656:	add    BYTE PTR [rax],al
   140012658:	sub    bl,dl
   14001265a:	add    DWORD PTR [rax],eax
   14001265c:	add    al,0x0
   14001265e:	add    BYTE PTR [rax],al
   140012660:	add    BYTE PTR [rax],al
   140012662:	add    BYTE PTR [rax],al
   140012664:	(bad)  
   140012665:	(bad)  
   140012666:	(bad)  
   140012667:	inc    DWORD PTR [rax]
   140012669:	add    BYTE PTR [rax],al
   14001266b:	add    BYTE PTR [rax+0x0],al
   14001266e:	add    BYTE PTR [rax],al
   140012670:	adc    BYTE PTR [rsi],ah
   140012672:	add    DWORD PTR [rax],eax
	...
   140012680:	add    DWORD PTR [rax],eax
   140012682:	add    BYTE PTR [rax],al
   140012684:	adc    BYTE PTR [rax],al
   140012686:	add    BYTE PTR [rax],al
   140012688:	add    BYTE PTR [rax],al
   14001268a:	add    BYTE PTR [rax],al
   14001268c:	sub    bl,dl
   14001268e:	add    DWORD PTR [rax],eax
   140012690:	adc    BYTE PTR [rsi],ah
   140012692:	add    DWORD PTR [rax],eax
   140012694:	and    BYTE PTR [rsi],0x1
	...
   1400126a7:	add    BYTE PTR [rcx],al
	...
   1400126b1:	add    BYTE PTR [rax],al
   1400126b3:	add    BYTE PTR [rax-0x2d],cl
   1400126b6:	add    DWORD PTR [rax],eax
   1400126b8:	shl    BYTE PTR [rsi],1
   1400126ba:	add    DWORD PTR [rax],eax
   1400126bc:	test   al,0x26
   1400126be:	add    DWORD PTR [rax],eax
	...
   1400126d4:	add    DWORD PTR [rax],eax
   1400126d6:	add    BYTE PTR [rax],al
   1400126d8:	(bad)  
   1400126d9:	add    BYTE PTR [rax],al
   1400126db:	add    al,ch
   1400126dd:	add    DWORD PTR es:[rax],eax
	...
   1400126e8:	and    BYTE PTR [rdi],ah
   1400126ea:	add    DWORD PTR [rax],eax
   1400126ec:	movabs al,ds:0xb800011c50000122
   1400126f5:	sbb    al,0x1
   1400126f7:	add    al,cl
   1400126f9:	sbb    al,BYTE PTR [rcx]
   1400126fb:	add    BYTE PTR [rax],bl
   1400126fd:	sbb    eax,0x1
	...
   14001271e:	add    BYTE PTR [rax],al
   140012720:	rol    QWORD PTR [rcx],cl
   140012723:	add    BYTE PTR [rip+0x0],al        # 0x140012729
   140012729:	add    BYTE PTR [rax],al
   14001272b:	add    bh,bh
   14001272d:	(bad)  
   14001272e:	(bad)  
   14001272f:	inc    DWORD PTR [rax]
   140012731:	add    BYTE PTR [rax],al
   140012733:	add    BYTE PTR [rax+0x0],al
   140012736:	add    BYTE PTR [rax],al
   140012738:	shl    BYTE PTR [rsi],1
   14001273a:	add    DWORD PTR [rax],eax
	...
   140012748:	add    DWORD PTR [rax],eax
   14001274a:	add    BYTE PTR [rax],al
   14001274c:	adc    BYTE PTR [rax],al
   14001274e:	add    BYTE PTR [rax],al
   140012750:	add    BYTE PTR [rax],al
   140012752:	add    BYTE PTR [rax],al
   140012754:	rol    QWORD PTR [rcx],cl
   140012757:	add    al,dl
   140012759:	add    DWORD PTR es:[rax],eax
   14001275c:	rex.W (bad) 
   14001275e:	add    DWORD PTR [rax],eax
	...
   140012770:	add    DWORD PTR [rax],eax
	...
   14001277a:	add    BYTE PTR [rax],al
   14001277c:	jo     0x140012751
   14001277e:	add    DWORD PTR [rax],eax
   140012780:	cwde   
   140012781:	(bad)  
   140012782:	add    DWORD PTR [rax],eax
   140012784:	jo     0x1400127ad
   140012786:	add    DWORD PTR [rax],eax
	...
   14001279c:	add    DWORD PTR [rax],eax
   14001279e:	add    BYTE PTR [rax],al
   1400127a0:	add    al,0x0
   1400127a2:	add    BYTE PTR [rax],al
   1400127a4:	mov    al,0x27
   1400127a6:	add    DWORD PTR [rax],eax
	...
   1400127b0:	fsub   DWORD PTR [rdi]
   1400127b2:	add    DWORD PTR [rax],eax
   1400127b4:	mov    eax,0xc800011c
   1400127b9:	sbb    al,BYTE PTR [rcx]
   1400127bb:	add    BYTE PTR [rax],bl
   1400127bd:	sbb    eax,0x1
	...
   1400127d6:	add    BYTE PTR [rax],al
   1400127d8:	jo     0x1400127ad
   1400127da:	add    DWORD PTR [rax],eax
   1400127dc:	add    eax,DWORD PTR [rax]
   1400127de:	add    BYTE PTR [rax],al
   1400127e0:	add    BYTE PTR [rax],al
   1400127e2:	add    BYTE PTR [rax],al
   1400127e4:	(bad)  
   1400127e5:	(bad)  
   1400127e6:	(bad)  
   1400127e7:	inc    DWORD PTR [rax]
   1400127e9:	add    BYTE PTR [rax],al
   1400127eb:	add    BYTE PTR [rax+0x0],al
   1400127ee:	add    BYTE PTR [rax],al
   1400127f0:	cwde   
   1400127f1:	(bad)  
   1400127f2:	add    DWORD PTR [rax],eax
	...
   140012800:	add    DWORD PTR [rax],eax
   140012802:	add    BYTE PTR [rax],al
   140012804:	adc    BYTE PTR [rax],al
   140012806:	add    BYTE PTR [rax],al
   140012808:	add    BYTE PTR [rax],al
   14001280a:	add    BYTE PTR [rax],al
   14001280c:	jo     0x1400127e1
   14001280e:	add    DWORD PTR [rax],eax
   140012810:	cwde   
   140012811:	(bad)  
   140012812:	add    DWORD PTR [rax],eax
   140012814:	add    BYTE PTR [rax],ch
   140012816:	add    DWORD PTR [rax],eax
	...
   140012828:	add    DWORD PTR [rax],eax
	...
   140012832:	add    BYTE PTR [rax],al
   140012834:	nop
   140012835:	rol    DWORD PTR [rcx],cl
   140012837:	add    BYTE PTR [rax+0x28],dl
   14001283a:	add    DWORD PTR [rax],eax
   14001283c:	sub    BYTE PTR [rax],ch
   14001283e:	add    DWORD PTR [rax],eax
	...
   140012854:	add    DWORD PTR [rax],eax
   140012856:	add    BYTE PTR [rax],al
   140012858:	add    al,0x0
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	push   0x128
   140012861:	add    BYTE PTR [rax],al
   140012863:	add    BYTE PTR [rax],al
   140012865:	add    BYTE PTR [rax],al
   140012867:	add    BYTE PTR [rax-0x47fffed8],dl
   14001286d:	sbb    al,0x1
   14001286f:	add    al,cl
   140012871:	sbb    al,BYTE PTR [rcx]
   140012873:	add    BYTE PTR [rax],bl
   140012875:	sbb    eax,0x1
	...
   14001288e:	add    BYTE PTR [rax],al
   140012890:	nop
   140012891:	rol    DWORD PTR [rcx],cl
   140012893:	add    BYTE PTR [rbx],al
   140012895:	add    BYTE PTR [rax],al
   140012897:	add    BYTE PTR [rax],al
   140012899:	add    BYTE PTR [rax],al
   14001289b:	add    bh,bh
   14001289d:	(bad)  
   14001289e:	(bad)  
   14001289f:	inc    DWORD PTR [rax]
   1400128a1:	add    BYTE PTR [rax],al
   1400128a3:	add    BYTE PTR [rax+0x0],al
   1400128a6:	add    BYTE PTR [rax],al
   1400128a8:	push   rax
   1400128a9:	sub    BYTE PTR [rcx],al
	...
   1400128b7:	add    BYTE PTR [rcx],al
   1400128b9:	add    BYTE PTR [rax],al
   1400128bb:	add    BYTE PTR [rax],dl
   1400128bd:	add    BYTE PTR [rax],al
   1400128bf:	add    BYTE PTR [rax],al
   1400128c1:	add    BYTE PTR [rax],al
   1400128c3:	add    BYTE PTR [rax+0x500001d3],dl
   1400128c9:	sub    BYTE PTR [rcx],al
   1400128cb:	add    BYTE PTR [rax+0x128],bh
	...
   1400128dd:	add    BYTE PTR [rax],al
   1400128df:	add    BYTE PTR [rcx],al
	...
   1400128e9:	add    BYTE PTR [rax],al
   1400128eb:	add    BYTE PTR [rax+0x80001d3],dh
   1400128f1:	sub    DWORD PTR [rcx],eax
   1400128f3:	add    al,ah
   1400128f5:	sub    BYTE PTR [rcx],al
	...
   14001290b:	add    BYTE PTR [rcx],al
   14001290d:	add    BYTE PTR [rax],al
   14001290f:	add    BYTE PTR [rip+0x20000000],al        # 0x160012915
   140012915:	sub    DWORD PTR [rcx],eax
	...
   14001291f:	add    BYTE PTR [rax+0x29],dl
   140012922:	add    DWORD PTR [rax],eax
   140012924:	lock and BYTE PTR [rcx],al
   140012927:	add    BYTE PTR [rax-0x37fffee4],bh
   14001292d:	sbb    al,BYTE PTR [rcx]
   14001292f:	add    BYTE PTR [rax],bl
   140012931:	sbb    eax,0x1
	...
   14001294e:	add    BYTE PTR [rax],al
   140012950:	mov    al,0xd3
   140012952:	add    DWORD PTR [rax],eax
   140012954:	add    al,0x0
   140012956:	add    BYTE PTR [rax],al
   140012958:	add    BYTE PTR [rax],al
   14001295a:	add    BYTE PTR [rax],al
   14001295c:	(bad)  
   14001295d:	(bad)  
   14001295e:	(bad)  
   14001295f:	inc    DWORD PTR [rax]
   140012961:	add    BYTE PTR [rax],al
   140012963:	add    BYTE PTR [rax+0x0],al
   140012966:	add    BYTE PTR [rax],al
   140012968:	or     BYTE PTR [rcx],ch
   14001296a:	add    DWORD PTR [rax],eax
	...
   140012978:	add    DWORD PTR [rax],eax
   14001297a:	add    BYTE PTR [rax],al
   14001297c:	adc    BYTE PTR [rax],al
   14001297e:	add    BYTE PTR [rax],al
   140012980:	add    BYTE PTR [rax],al
   140012982:	add    BYTE PTR [rax],al
   140012984:	mov    al,0xd3
   140012986:	add    DWORD PTR [rax],eax
   140012988:	or     BYTE PTR [rcx],ch
   14001298a:	add    DWORD PTR [rax],eax
   14001298c:	js     0x1400129b7
   14001298e:	add    DWORD PTR [rax],eax
	...
   1400129a0:	add    DWORD PTR [rax],eax
	...
   1400129aa:	add    BYTE PTR [rax],al
   1400129ac:	fcom   st(3)
   1400129ae:	add    DWORD PTR [rax],eax
   1400129b0:	enter  0x129,0x0
   1400129b4:	movabs al,ds:0x129
	...
   1400129c9:	add    BYTE PTR [rax],al
   1400129cb:	add    BYTE PTR [rcx],al
   1400129cd:	add    BYTE PTR [rax],al
   1400129cf:	add    BYTE PTR [rax+rax*1],al
   1400129d2:	add    BYTE PTR [rax],al
   1400129d4:	loopne 0x1400129ff
   1400129d6:	add    DWORD PTR [rax],eax
	...
   1400129e0:	or     BYTE PTR [rdx],ch
   1400129e2:	add    DWORD PTR [rax],eax
   1400129e4:	mov    eax,0xc800011c
   1400129e9:	sbb    al,BYTE PTR [rcx]
   1400129eb:	add    BYTE PTR [rax],bl
   1400129ed:	sbb    eax,0x1
	...
   140012a06:	add    BYTE PTR [rax],al
   140012a08:	fcom   st(3)
   140012a0a:	add    DWORD PTR [rax],eax
   140012a0c:	add    eax,DWORD PTR [rax]
   140012a0e:	add    BYTE PTR [rax],al
   140012a10:	add    BYTE PTR [rax],al
   140012a12:	add    BYTE PTR [rax],al
   140012a14:	(bad)  
   140012a15:	(bad)  
   140012a16:	(bad)  
   140012a17:	inc    DWORD PTR [rax]
   140012a19:	add    BYTE PTR [rax],al
   140012a1b:	add    BYTE PTR [rax+0x0],al
   140012a1e:	add    BYTE PTR [rax],al
   140012a20:	enter  0x129,0x0
	...
   140012a30:	add    DWORD PTR [rax],eax
   140012a32:	add    BYTE PTR [rax],al
   140012a34:	adc    BYTE PTR [rax],al
   140012a36:	add    BYTE PTR [rax],al
   140012a38:	add    BYTE PTR [rax],al
   140012a3a:	add    BYTE PTR [rax],al
   140012a3c:	fcom   st(3)
   140012a3e:	add    DWORD PTR [rax],eax
   140012a40:	enter  0x129,0x0
   140012a44:	xor    BYTE PTR [rdx],ch
   140012a46:	add    DWORD PTR [rax],eax
	...
   140012a58:	add    DWORD PTR [rax],eax
	...
   140012a62:	add    BYTE PTR [rax],al
   140012a64:	add    ah,dl
   140012a66:	add    DWORD PTR [rax],eax
   140012a68:	sub    BYTE PTR [rdx],0x1
   140012a6b:	add    BYTE PTR [rax+0x2a],bl
   140012a6e:	add    DWORD PTR [rax],eax
	...
   140012a84:	add    DWORD PTR [rax],eax
   140012a86:	add    BYTE PTR [rax],al
   140012a88:	add    al,0x0
   140012a8a:	add    BYTE PTR [rax],al
   140012a8c:	cwde   
   140012a8d:	sub    al,BYTE PTR [rcx]
	...
   140012a97:	add    al,al
   140012a99:	sub    al,BYTE PTR [rcx]
   140012a9b:	add    BYTE PTR [rax+0x1a],ch
   140012a9e:	add    DWORD PTR [rax],eax
   140012aa0:	enter  0x11a,0x0
   140012aa4:	sbb    BYTE PTR [rbx],bl
   140012aa6:	add    DWORD PTR [rax],eax
	...
   140012ac0:	add    ah,dl
   140012ac2:	add    DWORD PTR [rax],eax
   140012ac4:	add    eax,DWORD PTR [rax]
   140012ac6:	add    BYTE PTR [rax],al
   140012ac8:	add    BYTE PTR [rax],al
   140012aca:	add    BYTE PTR [rax],al
   140012acc:	(bad)  
   140012acd:	(bad)  
   140012ace:	(bad)  
   140012acf:	inc    DWORD PTR [rax]
   140012ad1:	add    BYTE PTR [rax],al
   140012ad3:	add    BYTE PTR [rax+0x0],al
   140012ad6:	add    BYTE PTR [rax],al
   140012ad8:	sub    BYTE PTR [rdx],0x1
	...
   140012ae7:	add    BYTE PTR [rcx],al
   140012ae9:	add    BYTE PTR [rax],al
   140012aeb:	add    BYTE PTR [rax],dl
	...
   140012af5:	(bad)  
   140012af6:	add    DWORD PTR [rax],eax
   140012af8:	sub    BYTE PTR [rdx],0x1
   140012afb:	add    al,ch
   140012afd:	sub    al,BYTE PTR [rcx]
	...
   140012b0f:	add    BYTE PTR [rcx],al
	...
   140012b19:	add    BYTE PTR [rax],al
   140012b1b:	add    BYTE PTR [rax],ch
   140012b1d:	(bad)  
   140012b1e:	add    DWORD PTR [rax],eax
   140012b20:	cmp    BYTE PTR [rbx],ch
   140012b22:	add    DWORD PTR [rax],eax
   140012b24:	adc    BYTE PTR [rbx],ch
   140012b26:	add    DWORD PTR [rax],eax
	...
   140012b3c:	add    DWORD PTR [rax],eax
   140012b3e:	add    BYTE PTR [rax],al
   140012b40:	add    al,0x0
   140012b42:	add    BYTE PTR [rax],al
   140012b44:	push   rax
   140012b45:	sub    eax,DWORD PTR [rcx]
	...
   140012b4f:	add    BYTE PTR [rax+0x2b],bh
   140012b52:	add    DWORD PTR [rax],eax
   140012b54:	mov    eax,0xc800011c
   140012b59:	sbb    al,BYTE PTR [rcx]
   140012b5b:	add    BYTE PTR [rax],bl
   140012b5d:	sbb    eax,0x1
	...
   140012b76:	add    BYTE PTR [rax],al
   140012b78:	sub    ah,dl
   140012b7a:	add    DWORD PTR [rax],eax
   140012b7c:	add    eax,DWORD PTR [rax]
   140012b7e:	add    BYTE PTR [rax],al
   140012b80:	add    BYTE PTR [rax],al
   140012b82:	add    BYTE PTR [rax],al
   140012b84:	(bad)  
   140012b85:	(bad)  
   140012b86:	(bad)  
   140012b87:	inc    DWORD PTR [rax]
   140012b89:	add    BYTE PTR [rax],al
   140012b8b:	add    BYTE PTR [rax+0x0],al
   140012b8e:	add    BYTE PTR [rax],al
   140012b90:	cmp    BYTE PTR [rbx],ch
   140012b92:	add    DWORD PTR [rax],eax
	...
   140012ba0:	add    DWORD PTR [rax],eax
   140012ba2:	add    BYTE PTR [rax],al
   140012ba4:	adc    BYTE PTR [rax],al
   140012ba6:	add    BYTE PTR [rax],al
   140012ba8:	add    BYTE PTR [rax],al
   140012baa:	add    BYTE PTR [rax],al
   140012bac:	sub    ah,dl
   140012bae:	add    DWORD PTR [rax],eax
   140012bb0:	cmp    BYTE PTR [rbx],ch
   140012bb2:	add    DWORD PTR [rax],eax
   140012bb4:	movabs al,ds:0x12b
	...
   140012bc5:	add    BYTE PTR [rax],al
   140012bc7:	add    BYTE PTR [rcx],al
	...
   140012bd1:	add    BYTE PTR [rax],al
   140012bd3:	add    BYTE PTR [rax-0x2c],cl
   140012bd6:	add    DWORD PTR [rax],eax
   140012bd8:	lock sub eax,DWORD PTR [rcx]
   140012bdb:	add    al,cl
   140012bdd:	sub    eax,DWORD PTR [rcx]
	...
   140012bf3:	add    BYTE PTR [rcx],al
   140012bf5:	add    BYTE PTR [rax],al
   140012bf7:	add    BYTE PTR [rip+0x8000000],al        # 0x148012bfd
   140012bfd:	sub    al,0x1
	...
   140012c07:	add    BYTE PTR [rax],bh
   140012c09:	sub    al,0x1
   140012c0b:	add    BYTE PTR [rax+0x2c],ah
   140012c0e:	add    DWORD PTR [rax],eax
   140012c10:	mov    eax,0xc800011c
   140012c15:	sbb    al,BYTE PTR [rcx]
   140012c17:	add    BYTE PTR [rax],bl
   140012c19:	sbb    eax,0x1
	...
   140012c36:	add    BYTE PTR [rax],al
   140012c38:	rex.W (bad) 
   140012c3a:	add    DWORD PTR [rax],eax
   140012c3c:	add    al,0x0
   140012c3e:	add    BYTE PTR [rax],al
   140012c40:	add    BYTE PTR [rax],al
   140012c42:	add    BYTE PTR [rax],al
   140012c44:	(bad)  
   140012c45:	(bad)  
   140012c46:	(bad)  
   140012c47:	inc    DWORD PTR [rax]
   140012c49:	add    BYTE PTR [rax],al
   140012c4b:	add    BYTE PTR [rax+0x0],al
   140012c4e:	add    BYTE PTR [rax],al
   140012c50:	lock sub eax,DWORD PTR [rcx]
	...
   140012c5f:	add    BYTE PTR [rax-0x2c],dh
   140012c62:	add    DWORD PTR [rax],eax
   140012c64:	add    eax,DWORD PTR [rax]
   140012c66:	add    BYTE PTR [rax],al
   140012c68:	add    BYTE PTR [rax],al
   140012c6a:	add    BYTE PTR [rax],al
   140012c6c:	(bad)  
   140012c6d:	(bad)  
   140012c6e:	(bad)  
   140012c6f:	inc    DWORD PTR [rax]
   140012c71:	add    BYTE PTR [rax],al
   140012c73:	add    BYTE PTR [rax+0x0],al
   140012c76:	add    BYTE PTR [rax],al
   140012c78:	mov    BYTE PTR [rcx+rax*1],ch
	...
   140012c8b:	add    BYTE PTR [rcx],al
   140012c8d:	add    BYTE PTR [rax],al
   140012c8f:	add    BYTE PTR [rax+rax*1],al
   140012c92:	add    BYTE PTR [rax],al
   140012c94:	movabs al,ds:0x12c
   140012c9d:	add    BYTE PTR [rax],al
   140012c9f:	add    BYTE PTR [rax+0x2c],ah
   140012ca2:	add    DWORD PTR [rax],eax
   140012ca4:	mov    eax,0xc800011c
   140012ca9:	sbb    al,BYTE PTR [rcx]
   140012cab:	add    BYTE PTR [rax],bl
   140012cad:	sbb    eax,0x1
	...
   140012cc6:	add    BYTE PTR [rax],al
   140012cc8:	add    DWORD PTR [rax],eax
   140012cca:	add    BYTE PTR [rax],al
   140012ccc:	adc    BYTE PTR [rax],al
   140012cce:	add    BYTE PTR [rax],al
   140012cd0:	add    BYTE PTR [rax],al
   140012cd2:	add    BYTE PTR [rax],al
   140012cd4:	rex.W (bad) 
   140012cd6:	add    DWORD PTR [rax],eax
   140012cd8:	lock sub eax,DWORD PTR [rcx]
   140012cdb:	add    al,cl
   140012cdd:	sub    al,0x1
	...
   140012cef:	add    BYTE PTR [rcx],al
	...
   140012cf9:	add    BYTE PTR [rax],al
   140012cfb:	add    BYTE PTR [rax+0x180001d4],bl
   140012d01:	sub    eax,0x2cf00001
   140012d06:	add    DWORD PTR [rax],eax
	...
   140012d1c:	add    DWORD PTR [rax],eax
   140012d1e:	add    BYTE PTR [rax],al
   140012d20:	add    al,0x0
   140012d22:	add    BYTE PTR [rax],al
   140012d24:	xor    BYTE PTR [rip+0x1],ch        # 0x140012d2b
   140012d2a:	add    BYTE PTR [rax],al
   140012d2c:	add    BYTE PTR [rax],al
   140012d2e:	add    BYTE PTR [rax],al
   140012d30:	pop    rax
   140012d31:	sub    eax,0x1cb80001
   140012d36:	add    DWORD PTR [rax],eax
   140012d38:	enter  0x11a,0x0
   140012d3c:	sbb    BYTE PTR [rip+0x1],bl        # 0x140012d43
	...
   140012d56:	add    BYTE PTR [rax],al
   140012d58:	cwde   
   140012d59:	(bad)  
   140012d5a:	add    DWORD PTR [rax],eax
   140012d5c:	add    eax,DWORD PTR [rax]
   140012d5e:	add    BYTE PTR [rax],al
   140012d60:	add    BYTE PTR [rax],al
   140012d62:	add    BYTE PTR [rax],al
   140012d64:	(bad)  
   140012d65:	(bad)  
   140012d66:	(bad)  
   140012d67:	inc    DWORD PTR [rax]
   140012d69:	add    BYTE PTR [rax],al
   140012d6b:	add    BYTE PTR [rax+0x0],al
   140012d6e:	add    BYTE PTR [rax],al
   140012d70:	sbb    BYTE PTR [rip+0x1],ch        # 0x140012d77
	...
   140012d7e:	add    BYTE PTR [rax],al
   140012d80:	add    DWORD PTR [rax],eax
   140012d82:	add    BYTE PTR [rax],al
   140012d84:	adc    BYTE PTR [rax],al
   140012d86:	add    BYTE PTR [rax],al
   140012d88:	add    BYTE PTR [rax],al
   140012d8a:	add    BYTE PTR [rax],al
   140012d8c:	cwde   
   140012d8d:	(bad)  
   140012d8e:	add    DWORD PTR [rax],eax
   140012d90:	sbb    BYTE PTR [rip+0x2d800001],ch        # 0x16d812d97
   140012d96:	add    DWORD PTR [rax],eax
	...
   140012da8:	add    DWORD PTR [rax],eax
	...
   140012db2:	add    BYTE PTR [rax],al
   140012db4:	mov    eax,0xd00001d4
   140012db9:	sub    eax,0x2da80001
   140012dbe:	add    DWORD PTR [rax],eax
	...
   140012dd8:	add    eax,DWORD PTR [rax]
   140012dda:	add    BYTE PTR [rax],al
   140012ddc:	call   0x140012f0e
   140012de1:	add    BYTE PTR [rax],al
   140012de3:	add    BYTE PTR [rax],al
   140012de5:	add    BYTE PTR [rax],al
   140012de7:	add    BYTE PTR [rax],cl
   140012de9:	add    DWORD PTR cs:[rax],eax
   140012dec:	xor    BYTE PTR [rsi],ch
   140012dee:	add    DWORD PTR [rax],eax
   140012df0:	enter  0x11a,0x0
	...
   140012e08:	mov    eax,0x20001d4
   140012e0d:	add    BYTE PTR [rax],al
   140012e0f:	add    BYTE PTR [rax],al
   140012e11:	add    BYTE PTR [rax],al
   140012e13:	add    bh,bh
   140012e15:	(bad)  
   140012e16:	(bad)  
   140012e17:	inc    DWORD PTR [rax]
   140012e19:	add    BYTE PTR [rax],al
   140012e1b:	add    BYTE PTR [rax+0x0],al
   140012e1e:	add    BYTE PTR [rax],al
   140012e20:	shr    BYTE PTR [rip+0x1],1        # 0x140012e27
	...
   140012e2e:	add    BYTE PTR [rax],al
   140012e30:	loopne 0x140012e06
   140012e32:	add    DWORD PTR [rax],eax
   140012e34:	add    DWORD PTR [rax],eax
   140012e36:	add    BYTE PTR [rax],al
   140012e38:	add    BYTE PTR [rax],al
   140012e3a:	add    BYTE PTR [rax],al
   140012e3c:	(bad)  
   140012e3d:	(bad)  
   140012e3e:	(bad)  
   140012e3f:	inc    DWORD PTR [rax]
   140012e41:	add    BYTE PTR [rax],al
   140012e43:	add    BYTE PTR [rax+0x0],al
   140012e46:	add    BYTE PTR [rax],al
   140012e48:	pop    rax
   140012e49:	add    DWORD PTR cs:[rax],eax
	...
   140012e60:	add    al,BYTE PTR [rax]
   140012e62:	add    BYTE PTR [rax],al
   140012e64:	jo     0x140012e94
   140012e66:	add    DWORD PTR [rax],eax
	...
   140012e70:	xor    BYTE PTR [rsi],ch
   140012e72:	add    DWORD PTR [rax],eax
   140012e74:	enter  0x11a,0x0
	...
   140012e88:	add    DWORD PTR [rax],eax
	...
   140012e92:	add    BYTE PTR [rax],al
   140012e94:	adc    ch,dl
   140012e96:	add    DWORD PTR [rax],eax
   140012e98:	mov    al,0x2e
   140012e9a:	add    DWORD PTR [rax],eax
   140012e9c:	mov    BYTE PTR [rsi],ch
   140012e9e:	add    DWORD PTR [rax],eax
	...
   140012eb4:	add    DWORD PTR [rax],eax
   140012eb6:	add    BYTE PTR [rax],al
   140012eb8:	add    al,0x0
   140012eba:	add    BYTE PTR [rax],al
   140012ebc:	enter  0x12e,0x0
	...
   140012ec8:	lock add DWORD PTR cs:[rax],eax
   140012ecc:	mov    eax,0xc800011c
   140012ed1:	sbb    al,BYTE PTR [rcx]
   140012ed3:	add    BYTE PTR [rax],bl
   140012ed5:	sbb    eax,0x1
	...
   140012eee:	add    BYTE PTR [rax],al
   140012ef0:	adc    ch,dl
   140012ef2:	add    DWORD PTR [rax],eax
   140012ef4:	add    eax,DWORD PTR [rax]
   140012ef6:	add    BYTE PTR [rax],al
   140012ef8:	add    BYTE PTR [rax],al
   140012efa:	add    BYTE PTR [rax],al
   140012efc:	(bad)  
   140012efd:	(bad)  
   140012efe:	(bad)  
   140012eff:	inc    DWORD PTR [rax]
   140012f01:	add    BYTE PTR [rax],al
   140012f03:	add    BYTE PTR [rax+0x0],al
   140012f06:	add    BYTE PTR [rax],al
   140012f08:	mov    al,0x2e
   140012f0a:	add    DWORD PTR [rax],eax
	...
   140012f18:	add    DWORD PTR [rax],eax
   140012f1a:	add    BYTE PTR [rax],al
   140012f1c:	adc    BYTE PTR [rax],al
   140012f1e:	add    BYTE PTR [rax],al
   140012f20:	add    BYTE PTR [rax],al
   140012f22:	add    BYTE PTR [rax],al
   140012f24:	adc    ch,dl
   140012f26:	add    DWORD PTR [rax],eax
   140012f28:	mov    al,0x2e
   140012f2a:	add    DWORD PTR [rax],eax
   140012f2c:	sbb    BYTE PTR [rdi],ch
   140012f2e:	add    DWORD PTR [rax],eax
	...
   140012f40:	add    DWORD PTR [rax],eax
	...
   140012f4a:	add    BYTE PTR [rax],al
   140012f4c:	call   0x1a8013126
   140012f51:	(bad)  
   140012f52:	add    DWORD PTR [rax],eax
   140012f54:	rex (bad) 
   140012f56:	add    DWORD PTR [rax],eax
	...
   140012f70:	add    DWORD PTR [rax],eax
   140012f72:	add    BYTE PTR [rax],al
   140012f74:	sub    BYTE PTR [rdi],0x1
	...
   140012f7f:	add    BYTE PTR [rax+0x12f],dl
	...
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	add    al,ch
   140012f91:	(bad)  
   140012f92:	add    DWORD PTR [rax],eax
	...
   140012f9c:	(bad)  
   140012f9d:	(bad)  
   140012f9e:	(bad)  
   140012f9f:	inc    DWORD PTR [rax]
   140012fa1:	add    BYTE PTR [rax],al
   140012fa3:	add    BYTE PTR [rax+0x0],al
   140012fa6:	add    BYTE PTR [rax],al
   140012fa8:	push   0x12f
	...
   140012fd5:	add    BYTE PTR [rax],al
   140012fd7:	add    BYTE PTR [rcx],al
   140012fd9:	or     al,0x3
   140012fdb:	add    BYTE PTR [rcx+rax*1],cl
   140012fde:	sub    al,BYTE PTR [rax]
   140012fe0:	add    eax,0x1000030
   140012fe5:	or     al,BYTE PTR [rax+rax*1]
   140012fe8:	or     dh,BYTE PTR [rcx+rcx*1]
   140012feb:	add    BYTE PTR [rdx],cl
   140012fed:	push   rdx
   140012fee:	(bad)  
   140012fef:	jo     0x140012ff2
   140012ff1:	sbb    cl,BYTE PTR [rdx]
   140012ff3:	add    BYTE PTR [rdx],bl
   140012ff5:	je     0x140013008
   140012ff7:	add    BYTE PTR [rdx],bl
   140012ff9:	adc    BYTE PTR fs:[rax],al
   140012ffc:	sbb    dl,BYTE PTR [rdi+rcx*1+0x0]
   140013000:	sbb    dh,BYTE PTR [rsi+rcx*1]
   140013003:	add    BYTE PTR [rdx],bl
   140013005:	mov    dl,0x16
   140013007:	shl    BYTE PTR [rcx],0x0
   14001300a:	add    BYTE PTR [rax],al
   14001300c:	and    BYTE PTR [rax+rax*1],dl
   14001300f:	add    BYTE PTR [rcx+0x14],ah
   140013012:	add    BYTE PTR [rax],al
   140013014:	cmp    al,0x30
   140013016:	add    DWORD PTR [rax],eax
   140013018:	and    DWORD PTR [rdx+rcx*1],edi
   14001301b:	add    BYTE PTR [rax+rdi*4],bh
   14001301e:	(bad)  
   14001301f:	add    BYTE PTR [rsi],ch
   140013021:	test   al,0x7
   140013023:	add    BYTE PTR [rax],ah
   140013025:	cwde   
   140013026:	or     BYTE PTR [rax],al
   140013028:	adc    cl,BYTE PTR [rax+0x78050009]
   14001302e:	or     al,BYTE PTR [rax]
   140013030:	and    BYTE PTR [rax+rax*1],dl
   140013033:	add    BYTE PTR [rcx+0x14],ah
   140013036:	add    BYTE PTR [rax],al
   140013038:	cmp    al,0x30
   14001303a:	add    DWORD PTR [rax],eax
   14001303c:	add    DWORD PTR [rdi],esp
   14001303e:	or     eax,DWORD PTR [rax]
   140013040:	(bad)  
   140013041:	push   0x6417000b
   140013046:	sbb    al,0x0
   140013048:	(bad)  
   140013049:	push   rsp
   14001304a:	sbb    eax,DWORD PTR [rax]
   14001304c:	(bad)  
   14001304d:	xor    al,0x1a
   14001304f:	add    BYTE PTR [rdi],dl
   140013051:	add    DWORD PTR [rax],ebx
   140013053:	add    BYTE PTR [rax],dl
   140013055:	jo     0x140013057
   140013057:	add    BYTE PTR [rcx],al
   140013059:	(bad)  
   14001305a:	or     al,BYTE PTR [rax]
   14001305c:	(bad)  
   14001305d:	adc    eax,DWORD PTR fs:[rax]
   140013060:	(bad)  
   140013061:	xor    al,0x11
   140013063:	add    BYTE PTR [rdi],dl
   140013065:	xchg   edx,eax
   140013066:	adc    esi,eax
   140013068:	adc    eax,esp
   14001306a:	(bad)  
   14001306c:	or     eax,0x1700bc0
   140013071:	or     al,BYTE PTR [rax+rax*1]
   140013074:	or     dh,BYTE PTR [rsi+rax*1]
   140013077:	add    BYTE PTR [rdx],cl
   140013079:	xor    al,BYTE PTR [rsi]
   14001307b:	jo     0x14001307e
   14001307d:	adc    DWORD PTR [rbx],eax
   14001307f:	add    BYTE PTR [rcx],dl
   140013081:	push   0x62040002
   140013086:	add    BYTE PTR [rax],al
   140013088:	and    DWORD PTR [rax],eax
   14001308a:	add    al,BYTE PTR [rax]
   14001308c:	add    BYTE PTR [rax+0x8],ch
   14001308f:	add    al,ah
   140013091:	and    BYTE PTR [rax],al
   140013093:	add    dl,bh
   140013095:	and    BYTE PTR [rax],al
   140013097:	add    BYTE PTR [rax+0x21000130],bh
   14001309d:	sbb    al,0x6
   14001309f:	add    BYTE PTR [rax+rdi*2],bl
   1400130a2:	(bad)  
   1400130a3:	add    BYTE PTR [rax+rbp*2],dl
   1400130a6:	or     BYTE PTR [rax],al
   1400130a8:	or     BYTE PTR [rsp+rdx*1],dh
   1400130ab:	add    al,ah
   1400130ad:	and    BYTE PTR [rax],al
   1400130af:	add    dl,bh
   1400130b1:	and    BYTE PTR [rax],al
   1400130b3:	add    BYTE PTR [rax+0x1000130],bh
   1400130b9:	or     DWORD PTR [rbx],eax
   1400130bb:	add    BYTE PTR [rcx],cl
   1400130bd:	add    DWORD PTR [rdx],edx
   1400130bf:	add    BYTE PTR [rdx],al
   1400130c1:	jo     0x1400130c3
   1400130c3:	add    BYTE PTR [rcx],al
   1400130c5:	(bad)  
   1400130c7:	add    BYTE PTR [rdi],cl
   1400130c9:	xor    al,0x6
   1400130cb:	add    BYTE PTR [rdi],cl
   1400130cd:	xor    cl,BYTE PTR [rbx]
   1400130cf:	jo     0x1400130f2
   1400130d1:	add    BYTE PTR [rax],al
   1400130d3:	add    al,dl
   1400130d5:	and    al,BYTE PTR [rax]
   1400130d7:	add    bh,dh
   1400130d9:	and    al,BYTE PTR [rax]
   1400130db:	add    ah,dh
   1400130dd:	xor    BYTE PTR [rcx],al
   1400130df:	add    BYTE PTR [rcx],ah
   1400130e1:	add    eax,0x34050002
   1400130e6:	(bad)  
   1400130e7:	add    al,dl
   1400130e9:	and    al,BYTE PTR [rax]
   1400130eb:	add    bh,dh
   1400130ed:	and    al,BYTE PTR [rax]
   1400130ef:	add    ah,dh
   1400130f1:	xor    BYTE PTR [rcx],al
   1400130f3:	add    BYTE PTR [rcx],al
   1400130f5:	clts   
   1400130f7:	add    BYTE PTR [rdi],cl
   1400130f9:	or     BYTE PTR fs:[rax],al
   1400130fc:	andps  xmm0,XMMWORD PTR [rdi]
   1400130ff:	add    BYTE PTR [rdi],cl
   140013101:	xor    cl,BYTE PTR [rbx]
   140013103:	jo     0x140013106
   140013105:	sub    BYTE PTR [rax],cl
   140013107:	add    BYTE PTR [rax],ch
   140013109:	js     0x140013111
   14001310b:	add    BYTE PTR [rbx],ah
   14001310d:	push   0xfffffffff20b0007
   140013112:	add    al,0x70
   140013114:	add    esp,DWORD PTR [rax+0x2]
   140013117:	xor    BYTE PTR [rcx],al
   140013119:	clts   
   14001311b:	add    BYTE PTR [rdi],cl
   14001311d:	or     DWORD PTR fs:[rax],eax
   140013120:	sysenter 
   140013122:	(bad)  
   140013123:	add    BYTE PTR [rdi],cl
   140013125:	xor    cl,BYTE PTR [rbx]
   140013127:	jo     0x14001312a
   140013129:	(bad)  
   14001312a:	add    al,BYTE PTR [rax]
   14001312c:	(bad)  
   14001312d:	xor    al,BYTE PTR [rdx]
   14001312f:	xor    BYTE PTR [rcx],ah
   140013131:	add    BYTE PTR [rax],al
   140013133:	add    al,al
   140013135:	add    BYTE PTR es:[rax],al
   140013138:	frstor [rsi]
   14001313a:	add    BYTE PTR [rax],al
   14001313c:	xor    DWORD PTR fs:[rcx],eax
   14001313f:	add    BYTE PTR [rcx],ah
   140013141:	sbb    DWORD PTR [rdx],ecx
   140013143:	add    BYTE PTR [rcx],bl
   140013145:	hlt    
   140013146:	add    al,0x0
   140013148:	adc    al,0xe4
   14001314a:	add    eax,0xdd40f00
   14001314f:	add    BYTE PTR [rdx],cl
   140013151:	je     0x14001315f
   140013153:	add    BYTE PTR [rip+0xffffffffc0000b34],al        # 0x100013c8d
   140013159:	add    BYTE PTR es:[rax],al
   14001315c:	frstor [rsi]
   14001315e:	add    BYTE PTR [rax],al
   140013160:	xor    DWORD PTR fs:[rcx],eax
   140013163:	add    BYTE PTR [rcx],al
   140013165:	or     DWORD PTR [rax+rax*1],eax
   140013168:	or     DWORD PTR [rdx+0x5],edx
   14001316b:	rol    BYTE PTR [rbx],0x60
   14001316e:	add    dl,BYTE PTR [rax+0x21]
   140013171:	add    BYTE PTR [rax],al
   140013173:	add    BYTE PTR [rax+0x28],al
   140013176:	add    BYTE PTR [rax],al
   140013178:	jns    0x1400131a2
   14001317a:	add    BYTE PTR [rax],al
   14001317c:	cwde   
   14001317d:	xor    DWORD PTR [rcx],eax
   14001317f:	add    BYTE PTR [rcx],ah
   140013181:	or     al,BYTE PTR [rax+rax*1]
   140013184:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140013188:	add    eax,0x40000654
   14001318d:	sub    BYTE PTR [rax],al
   14001318f:	add    BYTE PTR [rcx+0x28],bh
   140013192:	add    BYTE PTR [rax],al
   140013194:	cwde   
   140013195:	xor    DWORD PTR [rcx],eax
   140013197:	add    BYTE PTR [rcx],al
   140013199:	or     al,BYTE PTR [rax+rax*1]
   14001319c:	or     dh,BYTE PTR [rax+rcx*1]
   14001319f:	add    BYTE PTR [rdx],cl
   1400131a1:	xor    al,BYTE PTR [rsi]
   1400131a3:	(bad)  
   1400131a4:	add    DWORD PTR [rdx],ebx
   1400131a6:	or     al,BYTE PTR [rax]
   1400131a8:	sbb    dl,BYTE PTR [rsp+rcx*1+0x0]
   1400131ac:	sbb    dh,BYTE PTR [rdx+rcx*1]
   1400131af:	add    BYTE PTR [rdx],bl
   1400131b1:	xor    dl,BYTE PTR [rsi]
   1400131b3:	loopne 0x1400131c9
   1400131b5:	rcl    BYTE PTR [rdx],1
   1400131b7:	rcl    BYTE PTR [rax],0x70
   1400131ba:	punpcklbw mm4,DWORD PTR [rcx]
   1400131bd:	add    BYTE PTR [rax],al
   1400131bf:	add    BYTE PTR [rax],dh
   1400131c1:	sub    al,BYTE PTR [rax]
   1400131c3:	add    BYTE PTR [rdx+rbp*1],bh
   1400131c6:	add    BYTE PTR [rax],al
   1400131c8:	or     al,0x32
   1400131ca:	add    DWORD PTR [rax],eax
   1400131cc:	and    DWORD PTR [rax],eax
   1400131ce:	add    BYTE PTR [rax],al
   1400131d0:	cmp    al,0x2a
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400131d5:	sub    al,BYTE PTR [rax]
   1400131d7:	add    al,bh
   1400131d9:	xor    DWORD PTR [rcx],eax
   1400131db:	add    BYTE PTR [rcx],ah
   1400131dd:	adc    eax,0xe4150006
   1400131e2:	or     eax,DWORD PTR [rax]
   1400131e4:	adc    ah,dl
   1400131e6:	or     al,BYTE PTR [rax]
   1400131e8:	add    eax,0x3c000964
   1400131ed:	sub    al,BYTE PTR [rax]
   1400131ef:	add    BYTE PTR [rdi-0x7ffffd6],ah
   1400131f5:	xor    DWORD PTR [rcx],eax
   1400131f7:	add    BYTE PTR [rcx],ah
   1400131f9:	add    eax,0x54050002
   1400131fe:	or     BYTE PTR [rax],al
   140013200:	xor    BYTE PTR [rdx],ch
   140013202:	add    BYTE PTR [rax],al
   140013204:	cmp    al,0x2a
   140013206:	add    BYTE PTR [rax],al
   140013208:	or     al,0x32
   14001320a:	add    DWORD PTR [rax],eax
   14001320c:	add    DWORD PTR [rcx],ecx
   14001320e:	add    al,0x0
   140013210:	or     DWORD PTR [rdx],esi
   140013212:	add    eax,0x27003c0
   140013217:	xor    BYTE PTR [rcx],al
   140013219:	sbb    BYTE PTR [rax],cl
   14001321b:	add    BYTE PTR [rax],bl
   14001321d:	or     DWORD PTR fs:[rax],eax
   140013220:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   140013224:	sbb    BYTE PTR [rsi+rax*1],dh
   140013227:	add    BYTE PTR [rax],bl
   140013229:	xor    dl,BYTE PTR [rax+rsi*2]
   14001322c:	and    DWORD PTR [rax],eax
   14001322e:	add    BYTE PTR [rax],al
   140013230:	shr    BYTE PTR [rdi],0x0
   140013233:	add    dl,dl
   140013235:	(bad)  
   140013236:	add    BYTE PTR [rax],al
   140013238:	test   BYTE PTR [rdx],dh
   14001323a:	add    DWORD PTR [rax],eax
   14001323c:	and    DWORD PTR [rax],ecx
   14001323e:	add    al,BYTE PTR [rax]
   140013240:	or     ah,al
   140013242:	xor    BYTE PTR [rax],al
   140013244:	ret    
   140013245:	cmp    eax,DWORD PTR [rax]
   140013247:	add    bh,ch
   140013249:	cmp    eax,DWORD PTR [rax]
   14001324b:	add    BYTE PTR [rdx+rsi*1],ch
   14001324e:	add    DWORD PTR [rax],eax
   140013250:	and    DWORD PTR [rdi],edi
   140013252:	adc    al,BYTE PTR [rax]
   140013254:	(bad)  
   140013255:	call   0x118383269
   14001325a:	adc    BYTE PTR [rax],al
   14001325c:	(bad)  
   14001325d:	enter  0x11,0x27
   140013261:	mov    eax,0xa81f0012
   140013266:	adc    eax,DWORD PTR [rax]
   140013268:	(bad)  
   140013269:	cwde   
   14001326a:	adc    al,0x0
   14001326c:	or     eax,0x8001588
   140013271:	js     0x140013289
   140013273:	add    BYTE PTR [rax+rbp*2],al
   140013276:	(bad)  
   140013277:	add    al,al
   140013279:	(bad)  
   14001327a:	add    BYTE PTR [rax],al
   14001327c:	shr    BYTE PTR [rdi],cl
   14001327e:	add    BYTE PTR [rax],al
   140013280:	test   BYTE PTR [rdx],dh
   140013282:	add    DWORD PTR [rax],eax
   140013284:	add    DWORD PTR [rdx],edx
   140013286:	or     BYTE PTR [rax],al
   140013288:	adc    al,BYTE PTR [rcx]
   14001328a:	xor    DWORD PTR [rax],eax
   14001328c:	or     esp,eax
   14001328e:	or     eax,edx
   140013290:	(bad)  
   140013291:	jo     0x140013299
   140013293:	(bad)  
   140013294:	add    eax,0x21300450
   140013299:	add    BYTE PTR [rax],al
   14001329b:	add    al,dh
   14001329d:	cmp    eax,DWORD PTR [rax]
   14001329f:	add    BYTE PTR [rip+0xffffffffe400003c],al        # 0x1240132e1
   1400132a5:	xor    al,BYTE PTR [rcx]
   1400132a7:	add    BYTE PTR [rcx],ah
   1400132a9:	add    BYTE PTR [rax],al
   1400132ab:	add    BYTE PTR [rip+0x1900003c],al        # 0x1590132ed
   1400132b1:	cmp    al,0x0
   1400132b3:	add    al,dl
   1400132b5:	xor    al,BYTE PTR [rcx]
   1400132b7:	add    BYTE PTR [rcx],ah
   1400132b9:	or     al,BYTE PTR [rax+rax*1]
   1400132bc:	or     al,ah
   1400132be:	add    eax,0xd640500
   1400132c3:	add    BYTE PTR [rip+0x1900003c],al        # 0x159013305
   1400132c9:	cmp    al,0x0
   1400132cb:	add    al,dl
   1400132cd:	xor    al,BYTE PTR [rcx]
   1400132cf:	add    BYTE PTR [rcx],ah
   1400132d1:	add    eax,0xd4050002
   1400132d6:	add    al,0x0
   1400132d8:	lock cmp eax,DWORD PTR [rax]
   1400132db:	add    BYTE PTR [rip+0xffffffffe400003c],al        # 0x12401331d
   1400132e1:	xor    al,BYTE PTR [rcx]
   1400132e3:	add    BYTE PTR [rcx],al
   1400132e5:	or     BYTE PTR [rax+rax*1],al
   1400132e8:	or     BYTE PTR [rdx+0x4],dl
   1400132eb:	jo     0x1400132f0
   1400132ed:	push   rax
   1400132ee:	add    dh,BYTE PTR [rax]
   1400132f0:	and    DWORD PTR [rax],eax
   1400132f2:	add    BYTE PTR [rax],al
   1400132f4:	adc    al,0x3e
   1400132f6:	add    BYTE PTR [rax],al
   1400132f8:	xor    al,0x3e
   1400132fa:	add    BYTE PTR [rax],al
   1400132fc:	sbb    BYTE PTR [rbx],dh
   1400132fe:	add    DWORD PTR [rax],eax
   140013300:	and    DWORD PTR [rsi],edx
   140013302:	add    al,0x0
   140013304:	(bad)  
   140013305:	js     0x14001330a
   140013307:	add    BYTE PTR [rip+0x14000468],al        # 0x154013775
   14001330d:	add    BYTE PTR ds:[rax],al
   140013310:	xor    al,0x3e
   140013312:	add    BYTE PTR [rax],al
   140013314:	sbb    BYTE PTR [rbx],dh
   140013316:	add    DWORD PTR [rax],eax
   140013318:	and    DWORD PTR [rax],eax
   14001331a:	add    BYTE PTR [rax],al
   14001331c:	push   rax
   14001331d:	cmp    eax,0x3d5e0000
   140013322:	add    BYTE PTR [rax],al
   140013324:	cmp    al,0x33
   140013326:	add    DWORD PTR [rax],eax
   140013328:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4063330
   14001332e:	or     eax,0x3d5000
   140013333:	add    BYTE PTR [rsi+0x3d],bl
   140013336:	add    BYTE PTR [rax],al
   140013338:	cmp    al,0x33
   14001333a:	add    DWORD PTR [rax],eax
   14001333c:	add    DWORD PTR [rdx],ecx
   14001333e:	add    al,0x0
   140013340:	or     dh,BYTE PTR [rdi+rcx*1]
   140013343:	add    BYTE PTR [rdx],cl
   140013345:	xchg   edx,eax
   140013346:	(bad)  
   140013347:	jo     0x14001334a
   140013349:	or     al,BYTE PTR [rax+rax*1]
   14001334c:	or     dh,BYTE PTR [rax+rcx*1]
   14001334f:	add    BYTE PTR [rdx],cl
   140013351:	push   rdx
   140013352:	(bad)  
   140013353:	jo     0x140013356
   140013355:	or     al,BYTE PTR [rax+rax*1]
   140013358:	or     dh,BYTE PTR [rdi+rax*1]
   14001335b:	add    BYTE PTR [rdx],cl
   14001335d:	xor    al,BYTE PTR [rsi]
   14001335f:	jo     0x140013382
   140013361:	add    BYTE PTR [rax],al
   140013363:	add    BYTE PTR [rax-0x4effffbf],ah
   140013369:	add    BYTE PTR [r8],al
   14001336c:	test   al,0x33
   14001336e:	add    DWORD PTR [rax],eax
   140013370:	and    DWORD PTR [rax],eax
   140013372:	add    BYTE PTR [rax],al
   140013374:	mov    cl,0x41
   140013376:	add    BYTE PTR [rax],al
   140013378:	(bad)
   14001337c:	xchg   esp,eax
   14001337d:	xor    eax,DWORD PTR [rcx]
   14001337f:	add    BYTE PTR [rcx],ah
   140013381:	add    eax,0x34050002
   140013386:	(bad)  
   140013387:	add    BYTE PTR [rcx-0x3bffffbf],dh
   14001338d:	add    BYTE PTR [r8],al
   140013390:	xchg   esp,eax
   140013391:	xor    eax,DWORD PTR [rcx]
   140013393:	add    BYTE PTR [rcx],ah
   140013395:	add    eax,0x54050002
   14001339a:	or     BYTE PTR [rax],al
   14001339c:	movabs al,ds:0xa8000041b1000041
   1400133a5:	xor    eax,DWORD PTR [rcx]
   1400133a7:	add    BYTE PTR [rcx],al
   1400133a9:	or     al,BYTE PTR [rax+rax*1]
   1400133ac:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   1400133b0:	or     dh,BYTE PTR [rdx]
   1400133b2:	(bad)  
   1400133b3:	jo     0x1400133d6
   1400133b5:	add    BYTE PTR [rdx],al
   1400133b7:	add    BYTE PTR [rax],al
   1400133b9:	fs (bad) 
   1400133bb:	add    al,dh
   1400133bd:	rex.X add BYTE PTR [rax],al
   1400133c0:	rex.XB add BYTE PTR [r8d],al
   1400133c4:	in     al,dx
   1400133c5:	xor    eax,DWORD PTR [rcx]
   1400133c7:	add    BYTE PTR [rcx],ah
   1400133c9:	add    BYTE PTR [rax],al
   1400133cb:	add    al,dh
   1400133cd:	rex.X add BYTE PTR [rax],al
   1400133d0:	rex.XB add BYTE PTR [r8d],al
   1400133d4:	in     al,dx
   1400133d5:	xor    eax,DWORD PTR [rcx]
   1400133d7:	add    BYTE PTR [rcx],ah
   1400133d9:	add    eax,0x64050002
   1400133de:	(bad)  
   1400133df:	add    al,dh
   1400133e1:	rex.X add BYTE PTR [rax],al
   1400133e4:	rex.XB add BYTE PTR [r8d],al
   1400133e8:	in     al,dx
   1400133e9:	xor    eax,DWORD PTR [rcx]
   1400133eb:	add    BYTE PTR [rcx],al
   1400133ed:	clts   
   1400133ef:	add    BYTE PTR [rdi],cl
   1400133f1:	push   rsp
   1400133f2:	or     DWORD PTR [rax],eax
   1400133f4:	sysenter 
   1400133f6:	or     BYTE PTR [rax],al
   1400133f8:	rdmsr  
   1400133fa:	or     esi,DWORD PTR [rax+0x21]
   1400133fd:	add    BYTE PTR [rax],al
   1400133ff:	add    BYTE PTR [rax+0x44],dh
   140013402:	add    BYTE PTR [rax],al
   140013404:	xchg   ebx,eax
   140013405:	add    BYTE PTR [rax],r8b
   140013408:	sub    BYTE PTR [rcx+rax*1],dh
   14001340b:	add    BYTE PTR [rcx],ah
   14001340d:	clts   
   14001340f:	add    BYTE PTR [rdi],cl
   140013411:	(bad)  
   140013412:	or     al,BYTE PTR [rax]
   140013414:	or     al,ah
   140013416:	or     DWORD PTR [rax],eax
   140013418:	add    eax,0x70000874
   14001341d:	add    BYTE PTR [rax],r8b
   140013420:	xchg   ebx,eax
   140013421:	add    BYTE PTR [rax],r8b
   140013424:	sub    BYTE PTR [rcx+rax*1],dh
   140013427:	add    BYTE PTR [rcx],al
   140013429:	or     BYTE PTR [rax+rax*1],al
   14001342c:	or     BYTE PTR [rdx],dh
   14001342e:	add    al,0x60
   140013430:	add    edx,DWORD PTR [rax+0x2]
   140013433:	xor    BYTE PTR [rcx],ah
   140013435:	add    BYTE PTR [rax],al
   140013437:	add    BYTE PTR [rax+0x45],ah
   14001343a:	add    BYTE PTR [rax],al
   14001343c:	stos   BYTE PTR es:[rdi],al
   14001343d:	add    BYTE PTR [r8],r8b
   140013440:	pop    rsp
   140013441:	xor    al,0x1
   140013443:	add    BYTE PTR [rcx],ah
   140013445:	or     al,BYTE PTR [rax+rax*1]
   140013448:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   14001344c:	add    eax,0x60000734
   140013451:	add    BYTE PTR [r8],r8b
   140013454:	stos   BYTE PTR es:[rdi],al
   140013455:	add    BYTE PTR [r8],r8b
   140013458:	pop    rsp
   140013459:	xor    al,0x1
   14001345b:	add    BYTE PTR [rcx],al
   14001345d:	or     al,BYTE PTR [rax+rax*1]
   140013460:	or     dl,BYTE PTR [rcx+rcx*1+0x0]
   140013464:	or     dh,BYTE PTR [rdx]
   140013466:	(bad)  
   140013467:	jo     0x14001348a
   140013469:	add    BYTE PTR [rdx],al
   14001346b:	add    BYTE PTR [rax],al
   14001346d:	push   rsp
   14001346e:	sub    BYTE PTR [rax],al
   140013470:	adc    BYTE PTR [rsi+0x0],al
   140013473:	add    BYTE PTR [rip+0x24000046],bl        # 0x1640134bf
   140013479:	xor    eax,0x210001
   14001347e:	or     BYTE PTR [rax],al
   140013480:	add    al,bh
   140013482:	(bad)  
   140013483:	add    BYTE PTR [rax],al
   140013485:	call   0xe8013492
   14001348a:	or     al,0x0
   14001348c:	add    BYTE PTR [rax+rbp*1+0x0],dl
   140013490:	sbb    eax,0x25000046
   140013495:	rex.RX add BYTE PTR [rax],r8b
   140013498:	or     al,0x35
   14001349a:	add    DWORD PTR [rax],eax
   14001349c:	and    DWORD PTR [rax],eax
   14001349e:	(bad)  
   14001349f:	add    BYTE PTR [rax],al
   1400134a1:	clc    
   1400134a2:	(bad)  
   1400134a3:	add    BYTE PTR [rax],al
   1400134a5:	call   0x1940134b2
   1400134aa:	sub    BYTE PTR [rax],al
   1400134ac:	and    eax,0x64000046
   1400134b1:	rex.RX add BYTE PTR [rax],r8b
   1400134b4:	call   0x1610135ed
   1400134b9:	or     BYTE PTR [rdx],al
   1400134bb:	add    BYTE PTR [rax],cl
   1400134bd:	push   rsp
   1400134be:	sub    BYTE PTR [rax],al
   1400134c0:	rex.RX add BYTE PTR fs:[rax],r8b
   1400134c4:	icebp  
   1400134c5:	rex.RXB add BYTE PTR [r8],r8b
   1400134c8:	int3   
   1400134c9:	xor    al,0x1
   1400134cb:	add    BYTE PTR [rcx],ah
   1400134cd:	(bad)  
   1400134ce:	(bad)  
   1400134cf:	add    BYTE PTR [rsi],dl
   1400134d1:	clc    
   1400134d2:	(bad)  
   1400134d3:	add    BYTE PTR [rax],dl
   1400134d5:	call   0x1180934e2
   1400134da:	or     DWORD PTR [rax],eax
   1400134dc:	and    eax,0x64000046
   1400134e1:	rex.RX add BYTE PTR [rax],r8b
   1400134e4:	call   0x16101361d
   1400134e9:	(bad)  
   1400134ea:	or     al,BYTE PTR [rax]
   1400134ec:	(bad)  
   1400134ed:	enter  0xa,0x20
   1400134f1:	mov    eax,0xa81b000b
   1400134f6:	or     al,0x0
   1400134f8:	(bad)  
   1400134f9:	cwde   
   1400134fa:	or     eax,0xe880500
   1400134ff:	add    BYTE PTR [rip+0x25000046],bl        # 0x16501354b
   140013505:	rex.RX add BYTE PTR [rax],r8b
   140013508:	or     al,0x35
   14001350a:	add    DWORD PTR [rax],eax
   14001350c:	and    DWORD PTR [rax],ecx
   14001350e:	add    al,0x0
   140013510:	or     BYTE PTR [rax+0xf],bh
   140013513:	add    BYTE PTR [rax+rbp*2],al
   140013516:	adc    BYTE PTR [rax],al
   140013518:	adc    BYTE PTR [rsi+0x0],al
   14001351b:	add    BYTE PTR [rip+0x24000046],bl        # 0x164013567
   140013521:	xor    eax,0xd010001
   140013526:	add    eax,0x22010d00
   14001352b:	add    BYTE PTR [rsi],al
   14001352d:	jo     0x140013534
   14001352f:	(bad)  
   140013530:	add    al,0x30
   140013532:	add    BYTE PTR [rax],al
   140013534:	add    DWORD PTR [rsp+rcx*1],esp
   140013537:	add    BYTE PTR [rax+rbp*2],ah
   14001353a:	or     BYTE PTR [rax],al
   14001353c:	adc    al,0x1
   14001353e:	adc    eax,DWORD PTR [rax]
   140013540:	or     eax,0x9e00bf0
   140013545:	rol    BYTE PTR [rdi],1
   140013547:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436139be
   14001354e:	add    dh,BYTE PTR [rax]
   140013550:	add    DWORD PTR [rdi],ecx
   140013552:	(bad)  
   140013553:	add    BYTE PTR [rdi],cl
   140013555:	or     BYTE PTR fs:[rax],al
   140013558:	sysenter 
   14001355a:	(bad)  
   14001355b:	add    BYTE PTR [rdi],cl
   14001355d:	xor    cl,BYTE PTR [rbx]
   14001355f:	jo     0x140013562
   140013561:	sbb    DWORD PTR [rdx],ecx
   140013563:	add    BYTE PTR [rcx],bl
   140013565:	je     0x140013576
   140013567:	add    BYTE PTR [rcx],bl
   140013569:	fs (bad) 
   14001356b:	add    BYTE PTR [rcx],bl
   14001356d:	xor    al,0xd
   14001356f:	add    BYTE PTR [rcx],bl
   140013571:	jb     0x140013588
   140013573:	loopne 0x140013588
   140013575:	rcl    BYTE PTR [rcx],1
   140013577:	shl    BYTE PTR [rcx],0x0
   14001357a:	add    BYTE PTR [rax],al
   14001357c:	shl    BYTE PTR [rax+rax*1+0x0],0xe7
   140013581:	add    BYTE PTR fs:[rax],al
   140013584:	lods   al,BYTE PTR ds:[rsi]
   140013585:	xor    eax,0x1e210001
   14001358a:	or     al,BYTE PTR [rax]
   14001358c:	(bad)  
   14001358d:	cwde   
   14001358e:	add    eax,DWORD PTR [rax]
   140013590:	sbb    BYTE PTR [rax+0x78120004],cl
   140013596:	add    eax,0x6680d00
   14001359b:	add    BYTE PTR [rax],cl
   14001359d:	adc    BYTE PTR fs:[rax],al
   1400135a0:	shl    BYTE PTR [rax+rax*1+0x0],0xe7
   1400135a5:	add    BYTE PTR fs:[rax],al
   1400135a8:	lods   al,BYTE PTR ds:[rsi]
   1400135a9:	xor    eax,0xa010001
   1400135ae:	add    al,0x0
   1400135b0:	or     dh,BYTE PTR [rcx+rdx*1]
   1400135b3:	add    BYTE PTR [rdx],cl
   1400135b5:	rol    BYTE PTR [rsi],cl
   1400135b7:	jo     0x1400135ba
   1400135b9:	push   rax
   1400135ba:	adc    eax,0x3c85000
   1400135bf:	add    BYTE PTR [rbx-0x48],cl
   1400135c2:	add    al,0x0
   1400135c4:	rex.RX test al,0x5
   1400135c7:	add    BYTE PTR [rax+rbx*4],ch
   1400135ca:	(bad)  
   1400135cb:	add    BYTE PTR [rdi],ah
   1400135cd:	mov    BYTE PTR [rdi],al
   1400135cf:	add    BYTE PTR [rdx],ah
   1400135d1:	js     0x1400135db
   1400135d3:	add    BYTE PTR [rdx],bl
   1400135d5:	push   0x64130009
   1400135da:	(bad)  
   1400135db:	add    BYTE PTR [rbx],dl
   1400135dd:	xor    al,0x16
   1400135df:	add    BYTE PTR [rbx],dl
   1400135e1:	add    DWORD PTR [rax+rax*1],edx
   1400135e4:	or     al,0x70
   1400135e6:	add    BYTE PTR [rax],al
   1400135e8:	and    DWORD PTR [rbp+0x68850002],eax
   1400135ee:	(bad)  
   1400135ef:	add    BYTE PTR [rax],al
   1400135f1:	imul   eax,DWORD PTR [rax],0x694500
   1400135f7:	add    BYTE PTR [rax],bh
   1400135f9:	add    DWORD PTR ss:[rax],eax
   1400135fc:	and    DWORD PTR [rax],eax
   1400135fe:	add    BYTE PTR [rax],al
   140013600:	imul   r8d,DWORD PTR [r8],0x697d00
   140013607:	add    BYTE PTR [rsi+rsi*1],ah
   14001360a:	add    DWORD PTR [rax],eax
   14001360c:	and    DWORD PTR [rax],ecx
   14001360e:	add    al,0x0
   140013610:	or     BYTE PTR [rbp+rdx*1+0x0],ah
   140013614:	add    al,0x54
   140013616:	adc    al,0x0
   140013618:	imul   r8d,DWORD PTR [r8],0x697d00
   14001361f:	add    BYTE PTR [rsi+rsi*1],ah
   140013622:	add    DWORD PTR [rax],eax
   140013624:	and    DWORD PTR [rdx+rax*1],eax
   140013627:	add    BYTE PTR [rsp+rsi*2],al
   14001362a:	(bad)  
   14001362b:	add    BYTE PTR [rax],al
   14001362d:	imul   eax,DWORD PTR [rax],0x694500
   140013633:	add    BYTE PTR [rax],bh
   140013635:	add    DWORD PTR ss:[rax],eax
   140013638:	add    DWORD PTR [rbp+0xa],eax
   14001363b:	add    BYTE PTR [rbp-0x68],al
   14001363e:	add    al,0x0
   140013640:	sub    cl,BYTE PTR [rax+0x78250005]
   140013646:	(bad)  
   140013647:	add    BYTE PTR [rdi],cl
   140013649:	repnz or al,dl
   14001364c:	(bad)  
   14001364d:	rol    BYTE PTR [rax+rsi*1],0x1
   140013651:	adc    al,0x8
   140013653:	add    BYTE PTR [rsp+riz*2],dl
   140013656:	or     al,BYTE PTR [rax]
   140013658:	adc    al,0x54
   14001365a:	or     DWORD PTR [rax],eax
   14001365c:	adc    al,0x34
   14001365e:	or     BYTE PTR [rax],al
   140013660:	adc    al,0x52
   140013662:	adc    BYTE PTR [rax+0x21],dh
   140013665:	add    BYTE PTR [rax],al
   140013667:	add    BYTE PTR [rax+0x1200006c],ah
   14001366d:	ins    DWORD PTR es:[rdi],dx
   14001366e:	add    BYTE PTR [rax],al
   140013670:	xchg   esp,eax
   140013671:	add    DWORD PTR ss:[rax],eax
   140013674:	and    DWORD PTR [rax],ebp
   140013676:	or     BYTE PTR [rax],al
   140013678:	sub    ah,al
   14001367a:	adc    al,BYTE PTR [rax]
   14001367c:	and    BYTE PTR [rbx+rdx*1+0x0],dh
   140013680:	adc    BYTE PTR [rsp+rdx*1+0x0],ah
   140013684:	or     BYTE PTR [rcx+rbx*1+0x0],dl
   140013688:	movabs al,ds:0x9400006d1200006c
   140013691:	add    DWORD PTR ss:[rax],eax
   140013694:	add    DWORD PTR [rbx],ecx
   140013696:	add    al,0x0
   140013698:	or     eax,DWORD PTR [rcx]
   14001369a:	adc    eax,0x2d00400
   14001369f:	xor    BYTE PTR [rcx],al
   1400136a1:	or     al,BYTE PTR [rax+rax*1]
   1400136a4:	or     dh,BYTE PTR [rdx+rcx*1]
   1400136a7:	add    BYTE PTR [rdx],cl
   1400136a9:	push   rdx
   1400136aa:	(bad)  
   1400136ab:	jo     0x1400136ae
   1400136ad:	invd   
   1400136af:	add    BYTE PTR [rdi],cl
   1400136b1:	xchg   edx,eax
   1400136b2:	or     esp,eax
   1400136b4:	or     eax,edx
   1400136b6:	(bad)  
   1400136b7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143613b2e
   1400136be:	add    dh,BYTE PTR [rax]
   1400136c0:	add    DWORD PTR [rdi],ecx
   1400136c2:	(bad)  
   1400136c3:	add    BYTE PTR [rdi],cl
   1400136c5:	or     eax,DWORD PTR fs:[rax]
   1400136c8:	sysenter 
   1400136ca:	or     al,BYTE PTR [rax]
   1400136cc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400136cf:	jo     0x1400136f2
   1400136d1:	add    BYTE PTR [rax],al
   1400136d3:	add    al,dh
   1400136d5:	add    DWORD PTR [rax],0x0
   1400136d8:	add    eax,DWORD PTR [rax+rax*1+0x1371400]
   1400136df:	add    BYTE PTR [rcx],ah
   1400136e1:	adc    al,BYTE PTR ss:[rax]
   1400136e4:	ss mov eax,0xa8310007
   1400136ea:	or     BYTE PTR [rax],al
   1400136ec:	sub    al,0x98
   1400136ee:	or     DWORD PTR [rax],eax
   1400136f0:	sbb    DWORD PTR [rax+0x7814000a],ecx
   1400136f6:	or     eax,DWORD PTR [rax]
   1400136f8:	adc    BYTE PTR [rax+0xc],ch
   1400136fb:	add    BYTE PTR [rsp+rsi*2],cl
   1400136fe:	sbb    al,BYTE PTR [rax]
   140013700:	or     BYTE PTR [rbx+rbx*1+0x0],ah
   140013704:	add    al,0x34
   140013706:	(bad)  
   140013707:	add    al,dh
   140013709:	add    DWORD PTR [rax],0x0
   14001370c:	add    eax,DWORD PTR [rax+rax*1+0x1371400]
   140013713:	add    BYTE PTR [rcx],al
   140013715:	adc    eax,DWORD PTR [rbx]
   140013717:	add    BYTE PTR [rbx],dl
   140013719:	add    DWORD PTR [rax+rax*1],ebx
   14001371c:	or     al,0x50
   14001371e:	add    BYTE PTR [rax],al
   140013720:	add    DWORD PTR [rdi],edx
   140013722:	or     al,BYTE PTR [rax]
   140013724:	(bad)  
   140013725:	adc    BYTE PTR fs:[rax],al
   140013728:	(bad)  
   140013729:	xor    al,0xf
   14001372b:	add    BYTE PTR [rdi],dl
   14001372d:	jb     0x140013742
   14001372f:	lock adc eax,esp
   140013732:	(bad)  
   140013734:	or     eax,0x1700bc0
   140013739:	(bad)  
   14001373a:	or     eax,DWORD PTR [rax]
   14001373c:	(bad)  
   14001373d:	xor    al,0x29
   14001373f:	add    BYTE PTR [rdi],dl
   140013741:	add    DWORD PTR [rax],esp
   140013743:	add    BYTE PTR [rax],dl
   140013745:	lock (bad) 
   140013747:	loopne 0x140013755
   140013749:	ror    BYTE PTR [rdx],1
   14001374b:	ror    BYTE PTR [rax],0x70
   14001374e:	(bad)  
   14001374f:	(bad)  
   140013750:	(bad)  
   140013751:	push   rax
   140013752:	add    BYTE PTR [rax],al
   140013754:	and    DWORD PTR [rax],eax
   140013756:	add    BYTE PTR [rax],al
   140013758:	movabs al,ds:0x7800009ac000009a
   140013761:	(bad)  
   140013762:	add    DWORD PTR [rax],eax
   140013764:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a806376c
   14001376a:	add    eax,DWORD PTR [rax]
   14001376c:	movabs al,ds:0x7800009ac000009a
   140013775:	(bad)  
   140013776:	add    DWORD PTR [rax],eax
   140013778:	add    DWORD PTR [rsi],eax
   14001377a:	add    al,BYTE PTR [rax]
   14001377c:	(bad)  
   14001377d:	jb     0x140013781
   14001377f:	xor    BYTE PTR [rcx],ah
   140013781:	add    BYTE PTR [rax],al
   140013783:	add    BYTE PTR [rax],dh
   140013785:	fwait
   140013786:	add    BYTE PTR [rax],al
   140013788:	push   rbx
   140013789:	fwait
   14001378a:	add    BYTE PTR [rax],al
   14001378c:	js     0x1400137c5
   14001378e:	add    DWORD PTR [rax],eax
   140013790:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8063798
   140013796:	add    eax,DWORD PTR [rax]
   140013798:	xor    BYTE PTR [rbx-0x64ad0000],bl
   14001379e:	add    BYTE PTR [rax],al
   1400137a0:	js     0x1400137d9
   1400137a2:	add    DWORD PTR [rax],eax
   1400137a4:	and    DWORD PTR [rax],eax
   1400137a6:	add    BYTE PTR [rax],al
   1400137a8:	rcr    BYTE PTR [rbx-0x64150000],0x0
   1400137af:	add    al,dl
   1400137b1:	(bad)  
   1400137b2:	add    DWORD PTR [rax],eax
   1400137b4:	and    DWORD PTR [rdi],ecx
   1400137b6:	(bad)  
   1400137b7:	add    BYTE PTR [rdi],cl
   1400137b9:	push   0x640a0003
   1400137be:	or     eax,DWORD PTR [rax]
   1400137c0:	add    eax,0xc0000a34
   1400137c5:	fwait
   1400137c6:	add    BYTE PTR [rax],al
   1400137c8:	jmp    0x140013765
   1400137ca:	add    BYTE PTR [rax],al
   1400137cc:	shl    BYTE PTR [rdi],1
   1400137ce:	add    DWORD PTR [rax],eax
   1400137d0:	add    DWORD PTR [rsi],eax
   1400137d2:	add    al,BYTE PTR [rax]
   1400137d4:	(bad)  
   1400137d5:	jb     0x1400137d9
   1400137d7:	jo     0x1400137da
   1400137d9:	or     al,BYTE PTR [rax+rax*1]
   1400137dc:	or     dh,BYTE PTR [rcx+rcx*1]
   1400137df:	add    BYTE PTR [rdx],cl
   1400137e1:	xor    al,BYTE PTR [rsi]
   1400137e3:	jo     0x1400137e6
   1400137e5:	(bad)  
   1400137e6:	or     al,BYTE PTR [rax]
   1400137e8:	(bad)  
   1400137e9:	push   rsp
   1400137ea:	(bad)  
   1400137eb:	add    BYTE PTR [rsi],dl
   1400137ed:	xor    al,0xd
   1400137ef:	add    BYTE PTR [rsi],dl
   1400137f1:	push   rdx
   1400137f2:	adc    ah,al
   1400137f4:	adc    al,dl
   1400137f6:	(bad)  
   1400137f7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400137fb:	(bad)  
   1400137fc:	and    DWORD PTR [rax],eax
   1400137fe:	add    BYTE PTR [rax],al
   140013800:	(bad)  
   140013801:	movabs ds:0x38200000a4530000,eax
   14001380a:	add    DWORD PTR [rax],eax
   14001380c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174063814
   140013812:	(bad)  
   140013813:	add    BYTE PTR [rax-0x5d],ah
   140013816:	add    BYTE PTR [rax],al
   140013818:	push   rbx
   140013819:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	and    BYTE PTR [rax],bh
   14001381e:	add    DWORD PTR [rax],eax
   140013820:	add    DWORD PTR [rcx+rax*1],eax
   140013823:	add    BYTE PTR [rdx+riz*2],al
   140013826:	add    BYTE PTR [rax],al
   140013828:	add    DWORD PTR [rcx+rax*1],eax
   14001382b:	add    BYTE PTR [rdx+rax*2],al
   14001382e:	add    BYTE PTR [rax],al
   140013830:	add    DWORD PTR [rax+rcx*1],edx
   140013833:	add    BYTE PTR [rsp+riz*2],dl
   140013836:	or     BYTE PTR [rax],al
   140013838:	adc    al,0x54
   14001383a:	(bad)  
   14001383b:	add    BYTE PTR [rsp+rsi*1],dl
   14001383e:	(bad)  
   14001383f:	add    BYTE PTR [rdx+rsi*1],dl
   140013842:	adc    BYTE PTR [rax+0x1],dh
   140013845:	clts   
   140013847:	add    BYTE PTR [rdi],cl
   140013849:	fs (bad) 
   14001384b:	add    BYTE PTR [rdi],cl
   14001384d:	xor    al,0x6
   14001384f:	add    BYTE PTR [rdi],cl
   140013851:	xor    cl,BYTE PTR [rbx]
   140013853:	jo     0x140013866
   140013855:	(bad)  
   140013856:	add    al,BYTE PTR [rax]
   140013858:	(bad)  
   140013859:	xor    al,BYTE PTR [rdx]
   14001385b:	xor    BYTE PTR [rdx-0x4a],ah
   14001385e:	add    BYTE PTR [rax],al
   140013860:	add    DWORD PTR [rax],eax
   140013862:	add    BYTE PTR [rax],al
   140013864:	mov    ebx,0x210000b1
   140013869:	mov    dl,0x0
   14001386b:	add    BYTE PTR [rax+0xba],dh
   140013871:	add    BYTE PTR [rax],al
   140013873:	add    BYTE PTR [rcx],cl
   140013875:	or     eax,0x640d0005
   14001387a:	(bad)  
   14001387b:	add    BYTE PTR [rip+0x6001401],cl        # 0x146014c82
   140013881:	jo     0x140013883
   140013883:	add    BYTE PTR [rdx-0x4a],ah
   140013886:	add    BYTE PTR [rax],al
   140013888:	add    al,BYTE PTR [rax]
   14001388a:	add    BYTE PTR [rax],al
   14001388c:	(bad)  
   14001388d:	mov    dl,0x0
   14001388f:	add    dl,dl
   140013891:	mov    dl,0x0
   140013893:	add    BYTE PTR [rcx],al
   140013895:	add    BYTE PTR [rax],al
   140013897:	add    BYTE PTR [rsp+rsi*4-0x4d2e0000],ah
   14001389e:	add    BYTE PTR [rax],al
   1400138a0:	jne    0x140013856
   1400138a2:	add    BYTE PTR [rax],al
   1400138a4:	leave  
   1400138a5:	mov    edx,0xb4750000
   1400138aa:	add    BYTE PTR [rax],al
   1400138ac:	add    DWORD PTR [rsi],eax
   1400138ae:	add    al,BYTE PTR [rax]
   1400138b0:	(bad)  
   1400138b1:	xor    al,BYTE PTR [rdx]
   1400138b3:	push   rax
   1400138b4:	or     DWORD PTR [rdi],edx
   1400138b6:	(bad)  
   1400138b7:	add    BYTE PTR [rdi],dl
   1400138b9:	xor    al,0xd
   1400138bb:	add    BYTE PTR [rdi],dl
   1400138bd:	jb     0x1400138d2
   1400138bf:	rcl    BYTE PTR [rcx],0x70
   1400138c2:	adc    BYTE PTR [rax+0x62],ah
   1400138c5:	mov    dh,0x0
   1400138c7:	add    BYTE PTR [rcx],al
   1400138c9:	add    BYTE PTR [rax],al
   1400138cb:	add    bl,bl
   1400138cd:	mov    ch,0x0
   1400138cf:	add    ch,dh
   1400138d1:	mov    ch,0x0
   1400138d3:	add    ch,ah
   1400138d5:	mov    edx,0xb5f50000
   1400138da:	add    BYTE PTR [rax],al
   1400138dc:	adc    DWORD PTR [rax],ebx
   1400138de:	add    eax,0x14621800
   1400138e3:	rcl    BYTE PTR [rdx],0x70
   1400138e6:	adc    DWORD PTR [rax+0x10],esp
   1400138e9:	xor    BYTE PTR [rax],al
   1400138eb:	add    BYTE PTR [rdx-0x4a],ah
   1400138ee:	add    BYTE PTR [rax],al
   1400138f0:	add    DWORD PTR [rax],eax
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	(bad)  
   1400138f5:	mov    dh,0x0
   1400138f7:	add    BYTE PTR [rax-0x4a],bl
   1400138fa:	add    BYTE PTR [rax],al
   1400138fc:	and    al,0xbb
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	add    BYTE PTR [rax],al
   140013902:	add    BYTE PTR [rax],al
   140013904:	or     DWORD PTR [rcx+rax*1],eax
   140013907:	add    BYTE PTR [rdx+rax*2],al
   14001390a:	add    BYTE PTR [rax],al
   14001390c:	(bad)  
   14001390d:	mov    dh,0x0
   14001390f:	add    BYTE PTR [rcx],al
   140013911:	add    BYTE PTR [rax],al
   140013913:	add    bh,ah
   140013915:	mov    bh,0x0
   140013917:	add    BYTE PTR [rdx],bl
   140013919:	mov    eax,0xbb500000
   14001391e:	add    BYTE PTR [rax],al
   140013920:	sbb    bh,BYTE PTR [rax+0xa010000]
   140013926:	add    al,0x0
   140013928:	or     dh,BYTE PTR [rax+rcx*1]
   14001392b:	add    BYTE PTR [rdx],cl
   14001392d:	xor    al,BYTE PTR [rsi]
   14001392f:	jo     0x140013932
   140013931:	sbb    DWORD PTR [rdx],ecx
   140013933:	add    BYTE PTR [rcx],bl
   140013935:	je     0x140013944
   140013937:	add    BYTE PTR [rcx],bl
   140013939:	fs or  al,0x0
   14001393c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140013940:	sbb    DWORD PTR [rdx+rcx*1],esi
   140013943:	add    BYTE PTR [rcx],bl
   140013945:	jb     0x14001395c
   140013947:	shl    BYTE PTR [rcx],0x0
   14001394a:	add    BYTE PTR [rax],al
   14001394c:	nop
   14001394d:	mov    ecx,0xba030000
   140013952:	add    BYTE PTR [rax],al
   140013954:	ins    BYTE PTR es:[rdi],dx
   140013955:	cmp    DWORD PTR [rcx],eax
   140013957:	add    BYTE PTR [rcx],ah
   140013959:	add    eax,0x54050002
   14001395e:	or     eax,DWORD PTR [rax]
   140013960:	nop
   140013961:	mov    ecx,0xba030000
   140013966:	add    BYTE PTR [rax],al
   140013968:	ins    BYTE PTR es:[rdi],dx
   140013969:	cmp    DWORD PTR [rcx],eax
   14001396b:	add    BYTE PTR [rcx],al
   14001396d:	rex.RX or r8b,BYTE PTR [rax]
   140013970:	rex.RX (bad) 
   140013972:	(bad)  
   140013973:	add    BYTE PTR [rcx+0x74],al
   140013976:	(bad)  
   140013977:	add    BYTE PTR [rdx],bh
   140013979:	fs or  al,0x0
   14001397c:	xor    eax,0x6000a34
   140013981:	jb     0x140013985
   140013983:	shl    BYTE PTR [rax+0x13f],1
   140013989:	add    BYTE PTR [rax],al
   14001398b:	add    BYTE PTR [rax],al
   14001398d:	add    BYTE PTR [rax],al
   14001398f:	add    al,bl
   140013991:	rex.WRXB add QWORD PTR [r8],r8
   140013994:	js     0x14001395b
   140013996:	add    BYTE PTR [rax],al
   140013998:	fdivr  DWORD PTR [rdi]
   14001399a:	add    DWORD PTR [rax],eax
	...
   1400139a4:	lods   ax,WORD PTR ds:[rsi]
   1400139a6:	add    DWORD PTR [rax],eax
   1400139a8:	movabs al,ds:0x13e280000c5
   1400139b1:	add    BYTE PTR [rax],al
   1400139b3:	add    BYTE PTR [rax],al
   1400139b5:	add    BYTE PTR [rax],al
   1400139b7:	add    BYTE PTR [rsi-0xffffe4c],ch
   1400139bd:	ret    
   1400139be:	add    BYTE PTR [rax],al
   1400139c0:	movabs al,ds:0x13f
   1400139c9:	add    BYTE PTR [rax],al
   1400139cb:	add    BYTE PTR [rax],al
   1400139cd:	mov    ch,0x1
   1400139cf:	add    BYTE PTR [rax-0x3b],ch
   1400139d2:	add    BYTE PTR [rax],al
   1400139d4:	mov    BYTE PTR [rbx],bh
   1400139d6:	add    DWORD PTR [rax],eax
	...
   1400139e0:	in     al,dx
   1400139e1:	ret    0x1
   1400139e4:	push   rax
   1400139e5:	rol    DWORD PTR [rax],0x0
   1400139e8:	cwde   
   1400139e9:	cmp    al,BYTE PTR [rcx]
	...
   1400139f3:	add    BYTE PTR [rsi],ch
   1400139f5:	ret    
   1400139f6:	add    DWORD PTR [rax],eax
   1400139f8:	(bad)  
   1400139f9:	rol    BYTE PTR [rax],0x0
   1400139fc:	cmp    BYTE PTR [rdx],bh
   1400139fe:	add    DWORD PTR [rax],eax
	...
   140013a08:	pop    rsp
   140013a09:	(bad)
   140013a0c:	add    al,al
   140013a0e:	add    BYTE PTR [rax],al
   140013a10:	sub    BYTE PTR [rdi+0x1],cl
	...
   140013a1b:	add    BYTE PTR [rax-0xffffe3b],al
   140013a21:	(bad)  
	...
   140013a36:	add    BYTE PTR [rax],al
   140013a38:	rol    ch,0x1
   140013a3b:	add    BYTE PTR [rax],al
   140013a3d:	add    BYTE PTR [rax],al
   140013a3f:	add    BYTE PTR [rsp+rax*8+0x1],bh
   140013a46:	add    BYTE PTR [rax],al
   140013a48:	(bad)  
   140013a49:	(bad)
   140013a4d:	add    BYTE PTR [rax],al
   140013a4f:	add    ah,ch
   140013a51:	(bad)
   140013a55:	add    BYTE PTR [rax],al
   140013a57:	add    BYTE PTR [rsi],al
   140013a59:	(bad)
   140013a5c:	add    BYTE PTR [rax],al
   140013a5e:	add    BYTE PTR [rax],al
   140013a60:	mov    ah,0xc5
   140013a62:	add    DWORD PTR [rax],eax
   140013a64:	add    BYTE PTR [rax],al
   140013a66:	add    BYTE PTR [rax],al
   140013a68:	sahf   
   140013a69:	(bad)
   140013a6c:	add    BYTE PTR [rax],al
   140013a6e:	add    BYTE PTR [rax],al
   140013a70:	(bad)  
   140013a71:	(bad)
   140013a74:	add    BYTE PTR [rax],al
   140013a76:	add    BYTE PTR [rax],al
   140013a78:	(bad)
   140013a7c:	add    BYTE PTR [rax],al
   140013a7e:	add    BYTE PTR [rax],al
   140013a80:	sub    al,0xc5
   140013a82:	add    DWORD PTR [rax],eax
   140013a84:	add    BYTE PTR [rax],al
   140013a86:	add    BYTE PTR [rax],al
   140013a88:	mov    ah,0xc4
   140013a8a:	add    DWORD PTR [rax],eax
	...
   140013a98:	and    al,0xc3
   140013a9a:	add    DWORD PTR [rax],eax
   140013a9c:	add    BYTE PTR [rax],al
   140013a9e:	add    BYTE PTR [rax],al
   140013aa0:	sbb    al,bl
   140013aa2:	add    DWORD PTR [rax],eax
   140013aa4:	add    BYTE PTR [rax],al
   140013aa6:	add    BYTE PTR [rax],al
   140013aa8:	or     bl,al
   140013aaa:	add    DWORD PTR [rax],eax
   140013aac:	add    BYTE PTR [rax],al
   140013aae:	add    BYTE PTR [rax],al
   140013ab0:	cmp    al,bl
   140013ab2:	add    DWORD PTR [rax],eax
   140013ab4:	add    BYTE PTR [rax],al
   140013ab6:	add    BYTE PTR [rax],al
   140013ab8:	mov    ebp,es
   140013aba:	add    DWORD PTR [rax],eax
   140013abc:	add    BYTE PTR [rax],al
   140013abe:	add    BYTE PTR [rax],al
   140013ac0:	jle    0x140013a86
   140013ac2:	add    DWORD PTR [rax],eax
   140013ac4:	add    BYTE PTR [rax],al
   140013ac6:	add    BYTE PTR [rax],al
   140013ac8:	push   0xffffffffffffffc4
   140013aca:	add    DWORD PTR [rax],eax
   140013acc:	add    BYTE PTR [rax],al
   140013ace:	add    BYTE PTR [rax],al
   140013ad0:	pop    rax
   140013ad1:	(bad)
   140013ad5:	add    BYTE PTR [rax],al
   140013ad7:	add    BYTE PTR [rsi-0x3c],cl
   140013ada:	add    DWORD PTR [rax],eax
   140013adc:	add    BYTE PTR [rax],al
   140013ade:	add    BYTE PTR [rax],al
   140013ae0:	(bad)
   140013ae5:	add    BYTE PTR [rax],al
   140013ae7:	add    BYTE PTR [rsi],ch
   140013ae9:	(bad)
   140013aed:	add    BYTE PTR [rax],al
   140013aef:	add    BYTE PTR [rax],bl
   140013af1:	(bad)
   140013af5:	add    BYTE PTR [rax],al
   140013af7:	add    BYTE PTR [rdx],cl
   140013af9:	(bad)
   140013afd:	add    BYTE PTR [rax],al
   140013aff:	add    dh,bh
   140013b01:	ret    
   140013b02:	add    DWORD PTR [rax],eax
   140013b04:	add    BYTE PTR [rax],al
   140013b06:	add    BYTE PTR [rax],al
   140013b08:	hlt    
   140013b09:	ret    
   140013b0a:	add    DWORD PTR [rax],eax
   140013b0c:	add    BYTE PTR [rax],al
   140013b0e:	add    BYTE PTR [rax],al
   140013b10:	in     al,dx
   140013b11:	ret    
   140013b12:	add    DWORD PTR [rax],eax
   140013b14:	add    BYTE PTR [rax],al
   140013b16:	add    BYTE PTR [rax],al
   140013b18:	loop   0x140013add
   140013b1a:	add    DWORD PTR [rax],eax
   140013b1c:	add    BYTE PTR [rax],al
   140013b1e:	add    BYTE PTR [rax],al
   140013b20:	(bad)  
   140013b21:	ret    
   140013b22:	add    DWORD PTR [rax],eax
   140013b24:	add    BYTE PTR [rax],al
   140013b26:	add    BYTE PTR [rax],al
   140013b28:	int3   
   140013b29:	ret    
   140013b2a:	add    DWORD PTR [rax],eax
   140013b2c:	add    BYTE PTR [rax],al
   140013b2e:	add    BYTE PTR [rax],al
   140013b30:	mov    esi,0x1c3
   140013b35:	add    BYTE PTR [rax],al
   140013b37:	add    BYTE PTR [rsi+0x1c3],ch
   140013b3d:	add    BYTE PTR [rax],al
   140013b3f:	add    BYTE PTR [rax+0x1c3],ah
   140013b45:	add    BYTE PTR [rax],al
   140013b47:	add    BYTE PTR [rsi+0x1c3],cl
   140013b4d:	add    BYTE PTR [rax],al
   140013b4f:	add    BYTE PTR [rbx+rax*8+0x1],al
   140013b56:	add    BYTE PTR [rax],al
   140013b58:	jl     0x140013b1d
   140013b5a:	add    DWORD PTR [rax],eax
   140013b5c:	add    BYTE PTR [rax],al
   140013b5e:	add    BYTE PTR [rax],al
   140013b60:	push   0xffffffffffffffc3
   140013b62:	add    DWORD PTR [rax],eax
   140013b64:	add    BYTE PTR [rax],al
   140013b66:	add    BYTE PTR [rax],al
   140013b68:	pop    rsp
   140013b69:	ret    
   140013b6a:	add    DWORD PTR [rax],eax
   140013b6c:	add    BYTE PTR [rax],al
   140013b6e:	add    BYTE PTR [rax],al
   140013b70:	push   rdx
   140013b71:	ret    
   140013b72:	add    DWORD PTR [rax],eax
   140013b74:	add    BYTE PTR [rax],al
   140013b76:	add    BYTE PTR [rax],al
   140013b78:	clc    
   140013b79:	ret    0x1
	...
   140013b88:	xor    dh,BYTE PTR [rbp+0x1]
   140013b8e:	add    BYTE PTR [rax],al
   140013b90:	or     al,0xb5
   140013b92:	add    DWORD PTR [rax],eax
   140013b94:	add    BYTE PTR [rax],al
   140013b96:	add    BYTE PTR [rax],al
   140013b98:	rex.WRX mov bpl,0x1
   140013b9b:	add    BYTE PTR [rax],al
   140013b9d:	add    BYTE PTR [rax],al
   140013b9f:	add    BYTE PTR [rdx-0x4b],dh
   140013ba2:	add    DWORD PTR [rax],eax
   140013ba4:	add    BYTE PTR [rax],al
   140013ba6:	add    BYTE PTR [rax],al
   140013ba8:	mov    dl,0xc2
   140013baa:	add    DWORD PTR [rax],eax
   140013bac:	add    BYTE PTR [rax],al
   140013bae:	add    BYTE PTR [rax],al
   140013bb0:	js     0x140013b74
   140013bb2:	add    DWORD PTR [rax],eax
   140013bb4:	add    BYTE PTR [rax],al
   140013bb6:	add    BYTE PTR [rax],al
   140013bb8:	rex.WRX ret 0x1
   140013bbc:	add    BYTE PTR [rax],al
   140013bbe:	add    BYTE PTR [rax],al
   140013bc0:	es ret 0x1
   140013bc4:	add    BYTE PTR [rax],al
   140013bc6:	add    BYTE PTR [rax],al
   140013bc8:	(bad)  
   140013bc9:	ret    0x1
   140013bcc:	add    BYTE PTR [rax],al
   140013bce:	add    BYTE PTR [rax],al
   140013bd0:	call   0x140013d96
   140013bd5:	add    BYTE PTR [rax],al
   140013bd7:	add    al,dl
   140013bd9:	rol    DWORD PTR [rcx],0x0
   140013bdc:	add    BYTE PTR [rax],al
   140013bde:	add    BYTE PTR [rax],al
   140013be0:	mov    eax,0x1c1
   140013be5:	add    BYTE PTR [rax],al
   140013be7:	add    BYTE PTR [rdx-0x3f],ah
   140013bea:	add    DWORD PTR [rax],eax
   140013bec:	add    BYTE PTR [rax],al
   140013bee:	add    BYTE PTR [rax],al
   140013bf0:	cmp    al,0xc1
   140013bf2:	add    DWORD PTR [rax],eax
   140013bf4:	add    BYTE PTR [rax],al
   140013bf6:	add    BYTE PTR [rax],al
   140013bf8:	adc    al,0xc1
   140013bfa:	add    DWORD PTR [rax],eax
   140013bfc:	add    BYTE PTR [rax],al
   140013bfe:	add    BYTE PTR [rax],al
   140013c00:	in     al,0xc0
   140013c02:	add    DWORD PTR [rax],eax
   140013c04:	add    BYTE PTR [rax],al
   140013c06:	add    BYTE PTR [rax],al
   140013c08:	rol    al,1
   140013c0a:	add    DWORD PTR [rax],eax
   140013c0c:	add    BYTE PTR [rax],al
   140013c0e:	add    BYTE PTR [rax],al
   140013c10:	mov    al,0xc0
   140013c12:	add    DWORD PTR [rax],eax
   140013c14:	add    BYTE PTR [rax],al
   140013c16:	add    BYTE PTR [rax],al
   140013c18:	jb     0x140013bda
   140013c1a:	add    DWORD PTR [rax],eax
   140013c1c:	add    BYTE PTR [rax],al
   140013c1e:	add    BYTE PTR [rax],al
   140013c20:	rol    BYTE PTR ss:[rcx],0x0
   140013c24:	add    BYTE PTR [rax],al
   140013c26:	add    BYTE PTR [rax],al
   140013c28:	adc    al,0xc0
   140013c2a:	add    DWORD PTR [rax],eax
   140013c2c:	add    BYTE PTR [rax],al
   140013c2e:	add    BYTE PTR [rax],al
   140013c30:	mov    edx,0x1bf
   140013c35:	add    BYTE PTR [rax],al
   140013c37:	add    BYTE PTR [rax+0x1bf],bl
   140013c3d:	add    BYTE PTR [rax],al
   140013c3f:	add    BYTE PTR [rdx-0x41],ah
   140013c42:	add    DWORD PTR [rax],eax
   140013c44:	add    BYTE PTR [rax],al
   140013c46:	add    BYTE PTR [rax],al
   140013c48:	cmp    BYTE PTR [rdi+0x1],bh
   140013c4e:	add    BYTE PTR [rax],al
   140013c50:	adc    al,0xbf
   140013c52:	add    DWORD PTR [rax],eax
   140013c54:	add    BYTE PTR [rax],al
   140013c56:	add    BYTE PTR [rax],al
   140013c58:	fidivr WORD PTR [rsi+0x1]
   140013c5e:	add    BYTE PTR [rax],al
   140013c60:	sahf   
   140013c61:	mov    esi,0x1
   140013c66:	add    BYTE PTR [rax],al
   140013c68:	jle    0x140013c28
   140013c6a:	add    DWORD PTR [rax],eax
   140013c6c:	add    BYTE PTR [rax],al
   140013c6e:	add    BYTE PTR [rax],al
   140013c70:	pop    rsi
   140013c71:	mov    esi,0x1
   140013c76:	add    BYTE PTR [rax],al
   140013c78:	(bad)  
   140013c79:	mov    esi,0x1
   140013c7e:	add    BYTE PTR [rax],al
   140013c80:	repnz mov ebp,0x1
   140013c86:	add    BYTE PTR [rax],al
   140013c88:	(bad)  
   140013c89:	mov    ebp,0x1
   140013c8e:	add    BYTE PTR [rax],al
   140013c90:	sahf   
   140013c91:	mov    ebp,0x1
   140013c96:	add    BYTE PTR [rax],al
   140013c98:	(bad)  
   140013c99:	mov    ebp,0x1
   140013c9e:	add    BYTE PTR [rax],al
   140013ca0:	movabs rbp,0xbd22000000000001
   140013caa:	add    DWORD PTR [rax],eax
   140013cac:	add    BYTE PTR [rax],al
   140013cae:	add    BYTE PTR [rax],al
   140013cb0:	or     BYTE PTR [rbp+0x1],bh
   140013cb6:	add    BYTE PTR [rax],al
   140013cb8:	(bad)  
   140013cb9:	mov    esp,0x1
   140013cbe:	add    BYTE PTR [rax],al
   140013cc0:	movabs ds:0x7e000000000001bc,al
   140013cc9:	mov    esp,0x1
   140013cce:	add    BYTE PTR [rax],al
   140013cd0:	push   rsi
   140013cd1:	mov    esp,0x1
   140013cd6:	add    BYTE PTR [rax],al
   140013cd8:	sub    bh,BYTE PTR [rcx+rax*1+0x0]
   140013cdf:	add    BYTE PTR [rsp+rdi*4],cl
   140013ce2:	add    DWORD PTR [rax],eax
   140013ce4:	add    BYTE PTR [rax],al
   140013ce6:	add    BYTE PTR [rax],al
   140013ce8:	(bad)  
   140013ce9:	mov    ebx,0x1
   140013cee:	add    BYTE PTR [rax],al
   140013cf0:	(bad)  
   140013cf1:	mov    ebx,0x1
   140013cf6:	add    BYTE PTR [rax],al
   140013cf8:	test   BYTE PTR [rbx+0x1],bh
   140013cfe:	add    BYTE PTR [rax],al
   140013d00:	pop    rsi
   140013d01:	mov    ebx,0x1
   140013d06:	add    BYTE PTR [rax],al
   140013d08:	cmp    al,0xbb
   140013d0a:	add    DWORD PTR [rax],eax
   140013d0c:	add    BYTE PTR [rax],al
   140013d0e:	add    BYTE PTR [rax],al
   140013d10:	sbb    al,0xbb
   140013d12:	add    DWORD PTR [rax],eax
   140013d14:	add    BYTE PTR [rax],al
   140013d16:	add    BYTE PTR [rax],al
   140013d18:	add    bh,BYTE PTR [rbx+0x1]
   140013d1e:	add    BYTE PTR [rax],al
   140013d20:	fidivr DWORD PTR [rdx+0x1]
   140013d26:	add    BYTE PTR [rax],al
   140013d28:	mov    dl,0xba
   140013d2a:	add    DWORD PTR [rax],eax
   140013d2c:	add    BYTE PTR [rax],al
   140013d2e:	add    BYTE PTR [rax],al
   140013d30:	mov    ?,WORD PTR [rdx+0x1]
   140013d36:	add    BYTE PTR [rax],al
   140013d38:	pop    rsi
   140013d39:	mov    edx,0x1
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	sub    BYTE PTR [rdx+0x1],bh
   140013d46:	add    BYTE PTR [rax],al
   140013d48:	hlt    
   140013d49:	mov    ecx,0x1
   140013d4e:	add    BYTE PTR [rax],al
   140013d50:	enter  0x1b9,0x0
   140013d54:	add    BYTE PTR [rax],al
   140013d56:	add    BYTE PTR [rax],al
   140013d58:	cwde   
   140013d59:	mov    ecx,0x1
   140013d5e:	add    BYTE PTR [rax],al
   140013d60:	fs mov ecx,0x1
   140013d66:	add    BYTE PTR [rax],al
   140013d68:	cmp    al,0xb9
   140013d6a:	add    DWORD PTR [rax],eax
   140013d6c:	add    BYTE PTR [rax],al
   140013d6e:	add    BYTE PTR [rax],al
   140013d70:	adc    bh,BYTE PTR [rcx+0x1]
   140013d76:	add    BYTE PTR [rax],al
   140013d78:	out    dx,al
   140013d79:	mov    eax,0x1
   140013d7e:	add    BYTE PTR [rax],al
   140013d80:	mov    esi,0x1b8
   140013d85:	add    BYTE PTR [rax],al
   140013d87:	add    BYTE PTR [rax+0x1b8],cl
   140013d8d:	add    BYTE PTR [rax],al
   140013d8f:	add    BYTE PTR [rax+rdi*4+0x1],ch
   140013d93:	add    BYTE PTR [rax],al
   140013d95:	add    BYTE PTR [rax],al
   140013d97:	add    BYTE PTR [rdx-0x48],cl
   140013d9a:	add    DWORD PTR [rax],eax
   140013d9c:	add    BYTE PTR [rax],al
   140013d9e:	add    BYTE PTR [rax],al
   140013da0:	clc    
   140013da1:	mov    bh,0x1
   140013da3:	add    BYTE PTR [rax],al
   140013da5:	add    BYTE PTR [rax],al
   140013da7:	add    ah,bl
   140013da9:	mov    bh,0x1
   140013dab:	add    BYTE PTR [rax],al
   140013dad:	add    BYTE PTR [rax],al
   140013daf:	add    BYTE PTR [rsi+0x1b7],ch
   140013db5:	add    BYTE PTR [rax],al
   140013db7:	add    BYTE PTR [rdi+rsi*4+0x1],al
   140013dbe:	add    BYTE PTR [rax],al
   140013dc0:	push   rax
   140013dc1:	mov    bh,0x1
   140013dc3:	add    BYTE PTR [rax],al
   140013dc5:	add    BYTE PTR [rax],al
   140013dc7:	add    BYTE PTR [rsi],bl
   140013dc9:	mov    bh,0x1
   140013dcb:	add    BYTE PTR [rax],al
   140013dcd:	add    BYTE PTR [rax],al
   140013dcf:	add    ah,dh
   140013dd1:	mov    dh,0x1
   140013dd3:	add    BYTE PTR [rax],al
   140013dd5:	add    BYTE PTR [rax],al
   140013dd7:	add    al,dl
   140013dd9:	mov    dh,0x1
   140013ddb:	add    BYTE PTR [rax],al
   140013ddd:	add    BYTE PTR [rax],al
   140013ddf:	add    BYTE PTR [rax+0x1b6],dh
   140013de5:	add    BYTE PTR [rax],al
   140013de7:	add    BYTE PTR [rdx+0x1b6],cl
   140013ded:	add    BYTE PTR [rax],al
   140013def:	add    BYTE PTR [rax-0x4a],bl
   140013df2:	add    DWORD PTR [rax],eax
   140013df4:	add    BYTE PTR [rax],al
   140013df6:	add    BYTE PTR [rax],al
   140013df8:	ds mov dh,0x1
   140013dfb:	add    BYTE PTR [rax],al
   140013dfd:	add    BYTE PTR [rax],al
   140013dff:	add    BYTE PTR [rax],dl
   140013e01:	mov    dh,0x1
   140013e03:	add    BYTE PTR [rax],al
   140013e05:	add    BYTE PTR [rax],al
   140013e07:	add    ah,ch
   140013e09:	mov    ch,0x1
   140013e0b:	add    BYTE PTR [rax],al
   140013e0d:	add    BYTE PTR [rax],al
   140013e0f:	add    BYTE PTR [rbp+rsi*4+0x1],dh
   140013e16:	add    BYTE PTR [rax],al
   140013e18:	sahf   
   140013e19:	mov    ch,0x1
	...
   140013e27:	add    BYTE PTR [rdx-0x4f],dh
   140013e2a:	add    DWORD PTR [rax],eax
   140013e2c:	add    BYTE PTR [rax],al
   140013e2e:	add    BYTE PTR [rax],al
   140013e30:	movabs ds:0xd0000000000001ad,al
   140013e39:	lods   eax,DWORD PTR ds:[rsi]
   140013e3a:	add    DWORD PTR [rax],eax
   140013e3c:	add    BYTE PTR [rax],al
   140013e3e:	add    BYTE PTR [rax],al
   140013e40:	clc    
   140013e41:	lods   eax,DWORD PTR ds:[rsi]
   140013e42:	add    DWORD PTR [rax],eax
   140013e44:	add    BYTE PTR [rax],al
   140013e46:	add    BYTE PTR [rax],al
   140013e48:	(bad)  
   140013e49:	scas   al,BYTE PTR es:[rdi]
   140013e4a:	add    DWORD PTR [rax],eax
   140013e4c:	add    BYTE PTR [rax],al
   140013e4e:	add    BYTE PTR [rax],al
   140013e50:	cmp    BYTE PTR [rsi+0x1],ch
   140013e56:	add    BYTE PTR [rax],al
   140013e58:	mov    ?,WORD PTR [rcx+rax*1+0x0]
   140013e5f:	add    BYTE PTR [rsp+rsi*4+0x1],ah
   140013e63:	add    BYTE PTR [rax],al
   140013e65:	add    BYTE PTR [rax],al
   140013e67:	add    BYTE PTR [rdx],bh
   140013e69:	mov    ah,0x1
   140013e6b:	add    BYTE PTR [rax],al
   140013e6d:	add    BYTE PTR [rax],al
   140013e6f:	add    dh,ch
   140013e71:	mov    bl,0x1
   140013e73:	add    BYTE PTR [rax],al
   140013e75:	add    BYTE PTR [rax],al
   140013e77:	add    BYTE PTR [rax+0x1b3],ch
   140013e7d:	add    BYTE PTR [rax],al
   140013e7f:	add    BYTE PTR [rax-0x4d],bh
   140013e82:	add    DWORD PTR [rax],eax
   140013e84:	add    BYTE PTR [rax],al
   140013e86:	add    BYTE PTR [rax],al
   140013e88:	mov    bl,0x1
   140013e8b:	add    BYTE PTR [rax],al
   140013e8d:	add    BYTE PTR [rax],al
   140013e8f:	add    BYTE PTR [rbx+rsi*4],ch
   140013e92:	add    DWORD PTR [rax],eax
   140013e94:	add    BYTE PTR [rax],al
   140013e96:	add    BYTE PTR [rax],al
   140013e98:	sbb    BYTE PTR [rbx+0x1],dh
   140013e9e:	add    BYTE PTR [rax],al
   140013ea0:	in     al,dx
   140013ea1:	mov    dl,0x1
   140013ea3:	add    BYTE PTR [rax],al
   140013ea5:	add    BYTE PTR [rax],al
   140013ea7:	add    BYTE PTR [rdx+0x1b2],dh
   140013ead:	add    BYTE PTR [rax],al
   140013eaf:	add    BYTE PTR [rsi+0x1b2],dl
   140013eb5:	add    BYTE PTR [rax],al
   140013eb7:	add    BYTE PTR [rdx-0x4e],ch
   140013eba:	add    DWORD PTR [rax],eax
   140013ebc:	add    BYTE PTR [rax],al
   140013ebe:	add    BYTE PTR [rax],al
   140013ec0:	push   rax
   140013ec1:	mov    dl,0x1
   140013ec3:	add    BYTE PTR [rax],al
   140013ec5:	add    BYTE PTR [rax],al
   140013ec7:	add    BYTE PTR [rsi],dh
   140013ec9:	mov    dl,0x1
   140013ecb:	add    BYTE PTR [rax],al
   140013ecd:	add    BYTE PTR [rax],al
   140013ecf:	add    BYTE PTR [rdx+rsi*4],cl
   140013ed2:	add    DWORD PTR [rax],eax
   140013ed4:	add    BYTE PTR [rax],al
   140013ed6:	add    BYTE PTR [rax],al
   140013ed8:	in     al,0xb1
   140013eda:	add    DWORD PTR [rax],eax
   140013edc:	add    BYTE PTR [rax],al
   140013ede:	add    BYTE PTR [rax],al
   140013ee0:	(bad)  
   140013ee1:	mov    cl,0x1
   140013ee3:	add    BYTE PTR [rax],al
   140013ee5:	add    BYTE PTR [rax],al
   140013ee7:	add    BYTE PTR [rax+0x1b1],ch
   140013eed:	add    BYTE PTR [rax],al
   140013eef:	add    BYTE PTR [rsi-0x53],dh
   140013ef2:	add    DWORD PTR [rax],eax
   140013ef4:	add    BYTE PTR [rax],al
   140013ef6:	add    BYTE PTR [rax],al
   140013ef8:	cmp    al,0xb1
   140013efa:	add    DWORD PTR [rax],eax
   140013efc:	add    BYTE PTR [rax],al
   140013efe:	add    BYTE PTR [rax],al
   140013f00:	adc    BYTE PTR [rcx+0x1],dh
   140013f06:	add    BYTE PTR [rax],al
   140013f08:	fdiv   QWORD PTR [rax+0x1]
   140013f0e:	add    BYTE PTR [rax],al
   140013f10:	mov    esi,0x1b0
   140013f15:	add    BYTE PTR [rax],al
   140013f17:	add    BYTE PTR [rdx+0x1b0],ch
   140013f1d:	add    BYTE PTR [rax],al
   140013f1f:	add    BYTE PTR [rax+0x1b0],al
   140013f25:	add    BYTE PTR [rax],al
   140013f27:	add    BYTE PTR [rdx-0x50],bl
   140013f2a:	add    DWORD PTR [rax],eax
   140013f2c:	add    BYTE PTR [rax],al
   140013f2e:	add    BYTE PTR [rax],al
   140013f30:	ds mov al,0x1
   140013f33:	add    BYTE PTR [rax],al
   140013f35:	add    BYTE PTR [rax],al
   140013f37:	add    BYTE PTR [rax],dl
   140013f39:	mov    al,0x1
   140013f3b:	add    BYTE PTR [rax],al
   140013f3d:	add    BYTE PTR [rax],al
   140013f3f:	add    al,ah
   140013f41:	scas   eax,DWORD PTR es:[rdi]
   140013f42:	add    DWORD PTR [rax],eax
   140013f44:	add    BYTE PTR [rax],al
   140013f46:	add    BYTE PTR [rax],al
   140013f48:	nop
   140013f49:	scas   eax,DWORD PTR es:[rdi]
   140013f4a:	add    DWORD PTR [rax],eax
   140013f4c:	add    BYTE PTR [rax],al
   140013f4e:	add    BYTE PTR [rax],al
   140013f50:	push   rsp
   140013f51:	scas   eax,DWORD PTR es:[rdi]
   140013f52:	add    DWORD PTR [rax],eax
   140013f54:	add    BYTE PTR [rax],al
   140013f56:	add    BYTE PTR [rax],al
   140013f58:	cmp    BYTE PTR [rdi+0x1],ch
   140013f5e:	add    BYTE PTR [rax],al
   140013f60:	and    BYTE PTR [rdi+0x1],ch
   140013f66:	add    BYTE PTR [rax],al
   140013f68:	cli    
   140013f69:	scas   al,BYTE PTR es:[rdi]
   140013f6a:	add    DWORD PTR [rax],eax
   140013f6c:	add    BYTE PTR [rax],al
   140013f6e:	add    BYTE PTR [rax],al
   140013f70:	out    0xae,al
   140013f72:	add    DWORD PTR [rax],eax
   140013f74:	add    BYTE PTR [rax],al
   140013f76:	add    BYTE PTR [rax],al
   140013f78:	enter  0x1ae,0x0
   140013f7c:	add    BYTE PTR [rax],al
   140013f7e:	add    BYTE PTR [rax],al
   140013f80:	mov    ah,0xae
   140013f82:	add    DWORD PTR [rax],eax
   140013f84:	add    BYTE PTR [rax],al
   140013f86:	add    BYTE PTR [rax],al
   140013f88:	mov    BYTE PTR [rsi+0x1],ch
   140013f8e:	add    BYTE PTR [rax],al
   140013f90:	push   0xffffffffffffffae
   140013f92:	add    DWORD PTR [rax],eax
	...
   140013fa0:	mov    edx,0x1b4
	...
   140013fad:	add    BYTE PTR [rax],al
   140013faf:	add    BYTE PTR [rsi+0x4f],bh
   140013fb2:	add    DWORD PTR [rax],eax
   140013fb4:	add    BYTE PTR [rax],al
   140013fb6:	add    BYTE PTR [rax],al
   140013fb8:	mov    dl,0x4f
   140013fba:	add    DWORD PTR [rax],eax
   140013fbc:	add    BYTE PTR [rax],al
   140013fbe:	add    BYTE PTR [rax],al
   140013fc0:	push   rdx
   140013fc1:	rex.WRXB add QWORD PTR [r8],r8
   140013fc4:	add    BYTE PTR [rax],al
   140013fc6:	add    BYTE PTR [rax],al
   140013fc8:	cmp    BYTE PTR [rdi+0x1],cl
	...
   140013fd7:	add    BYTE PTR [rax],ch
   140013fd9:	jb     0x140013fdc
   140013fdb:	add    BYTE PTR [rax],al
   140013fdd:	add    BYTE PTR [rax],al
   140013fdf:	add    BYTE PTR [rdx+0x72],bl
   140013fe2:	add    DWORD PTR [rax],eax
   140013fe4:	add    BYTE PTR [rax],al
   140013fe6:	add    BYTE PTR [rax],al
   140013fe8:	mov    ?,WORD PTR [rdx+0x1]
   140013feb:	add    BYTE PTR [rax],al
   140013fed:	add    BYTE PTR [rax],al
   140013fef:	add    BYTE PTR [rdx+rsi*2+0x1],bh
   140013ff6:	add    BYTE PTR [rax],al
   140013ff8:	loopne 0x14001406c
   140013ffa:	add    DWORD PTR [rax],eax
   140013ffc:	add    BYTE PTR [rax],al
   140013ffe:	add    BYTE PTR [rax],al
   140014000:	(bad)  
   140014001:	jae    0x140014004
   140014003:	add    BYTE PTR [rax],al
   140014005:	add    BYTE PTR [rax],al
   140014007:	add    BYTE PTR [rax],dh
   140014009:	jae    0x14001400c
   14001400b:	add    BYTE PTR [rax],al
   14001400d:	add    BYTE PTR [rax],al
   14001400f:	add    BYTE PTR [rsi+0x73],bl
   140014012:	add    DWORD PTR [rax],eax
   140014014:	add    BYTE PTR [rax],al
   140014016:	add    BYTE PTR [rax],al
   140014018:	mov    WORD PTR [rbx+0x1],?
   14001401b:	add    BYTE PTR [rax],al
   14001401d:	add    BYTE PTR [rax],al
   14001401f:	add    al,bl
   140014021:	jae    0x140014024
   140014023:	add    BYTE PTR [rax],al
   140014025:	add    BYTE PTR [rax],al
   140014027:	add    BYTE PTR [rax],cl
   140014029:	je     0x14001402c
   14001402b:	add    BYTE PTR [rax],al
   14001402d:	add    BYTE PTR [rax],al
   14001402f:	add    BYTE PTR [rdx],dh
   140014031:	je     0x140014034
   140014033:	add    BYTE PTR [rax],al
   140014035:	add    BYTE PTR [rax],al
   140014037:	add    BYTE PTR [rsp+rsi*2+0x1],dl
   14001403b:	add    BYTE PTR [rax],al
   14001403d:	add    BYTE PTR [rax],al
   14001403f:	add    BYTE PTR [rax+0x174],al
   140014045:	add    BYTE PTR [rax],al
   140014047:	add    BYTE PTR [rax+0x174],ch
   14001404d:	add    BYTE PTR [rax],al
   14001404f:	add    al,bl
   140014051:	je     0x140014054
   140014053:	add    BYTE PTR [rax],al
   140014055:	add    BYTE PTR [rax],al
   140014057:	add    ah,bh
   140014059:	je     0x14001405c
   14001405b:	add    BYTE PTR [rax],al
   14001405d:	add    BYTE PTR [rax],al
   14001405f:	add    BYTE PTR [rax],ch
   140014061:	jne    0x140014064
   140014063:	add    BYTE PTR [rax],al
   140014065:	add    BYTE PTR [rax],al
   140014067:	add    BYTE PTR [rax+0x75],dl
   14001406a:	add    DWORD PTR [rax],eax
   14001406c:	add    BYTE PTR [rax],al
   14001406e:	add    BYTE PTR [rax],al
   140014070:	sahf   
   140014071:	jne    0x140014074
   140014073:	add    BYTE PTR [rax],al
   140014075:	add    BYTE PTR [rax],al
   140014077:	add    BYTE PTR [rax+0x175],bh
   14001407d:	add    BYTE PTR [rax],al
   14001407f:	add    dl,dl
   140014081:	jne    0x140014084
   140014083:	add    BYTE PTR [rax],al
   140014085:	add    BYTE PTR [rax],al
   140014087:	add    al,ch
   140014089:	jne    0x14001408c
   14001408b:	add    BYTE PTR [rax],al
   14001408d:	add    BYTE PTR [rax],al
   14001408f:	add    dh,bh
   140014091:	jne    0x140014094
   140014093:	add    BYTE PTR [rax],al
   140014095:	add    BYTE PTR [rax],al
   140014097:	add    BYTE PTR [rax],bl
   140014099:	jbe    0x14001409c
   14001409b:	add    BYTE PTR [rax],al
   14001409d:	add    BYTE PTR [rax],al
   14001409f:	add    BYTE PTR [rsi],dh
   1400140a1:	jbe    0x1400140a4
   1400140a3:	add    BYTE PTR [rax],al
   1400140a5:	add    BYTE PTR [rax],al
   1400140a7:	add    BYTE PTR [rsi+0x76],cl
   1400140aa:	add    DWORD PTR [rax],eax
   1400140ac:	add    BYTE PTR [rax],al
   1400140ae:	add    BYTE PTR [rax],al
   1400140b0:	push   0x76
   1400140b2:	add    DWORD PTR [rax],eax
   1400140b4:	add    BYTE PTR [rax],al
   1400140b6:	add    BYTE PTR [rax],al
   1400140b8:	xchg   esp,eax
   1400140b9:	jbe    0x1400140bc
   1400140bb:	add    BYTE PTR [rax],al
   1400140bd:	add    BYTE PTR [rax],al
   1400140bf:	add    dl,cl
   1400140c1:	jbe    0x1400140c4
   1400140c3:	add    BYTE PTR [rax],al
   1400140c5:	add    BYTE PTR [rax],al
   1400140c7:	add    BYTE PTR [rax],al
   1400140c9:	ja     0x1400140cc
   1400140cb:	add    BYTE PTR [rax],al
   1400140cd:	add    BYTE PTR [rax],al
   1400140cf:	add    BYTE PTR [rdx],ah
   1400140d1:	ja     0x1400140d4
   1400140d3:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rax],al
   1400140d7:	add    BYTE PTR [rax+0x77],cl
   1400140da:	add    DWORD PTR [rax],eax
   1400140dc:	add    BYTE PTR [rax],al
   1400140de:	add    BYTE PTR [rax],al
   1400140e0:	je     0x140014159
   1400140e2:	add    DWORD PTR [rax],eax
   1400140e4:	add    BYTE PTR [rax],al
   1400140e6:	add    BYTE PTR [rax],al
   1400140e8:	xchg   esp,eax
   1400140e9:	ja     0x1400140ec
   1400140eb:	add    BYTE PTR [rax],al
   1400140ed:	add    BYTE PTR [rax],al
   1400140ef:	add    BYTE PTR [rdi+rsi*2+0x1],bh
   1400140f6:	add    BYTE PTR [rax],al
   1400140f8:	in     al,dx
   1400140f9:	ja     0x1400140fc
   1400140fb:	add    BYTE PTR [rax],al
   1400140fd:	add    BYTE PTR [rax],al
   1400140ff:	add    BYTE PTR [rax+0x78],al
   140014102:	add    DWORD PTR [rax],eax
   140014104:	add    BYTE PTR [rax],al
   140014106:	add    BYTE PTR [rax],al
   140014108:	outs   dx,BYTE PTR ds:[rsi]
   140014109:	js     0x14001410c
   14001410b:	add    BYTE PTR [rax],al
   14001410d:	add    BYTE PTR [rax],al
   14001410f:	add    BYTE PTR [rax+0x178],dl
   140014115:	add    BYTE PTR [rax],al
   140014117:	add    BYTE PTR [rax+rdi*2+0x1],bh
   14001411e:	add    BYTE PTR [rax],al
   140014120:	in     al,0x78
   140014122:	add    DWORD PTR [rax],eax
   140014124:	add    BYTE PTR [rax],al
   140014126:	add    BYTE PTR [rax],al
   140014128:	sbb    BYTE PTR [rcx+0x1],bh
   14001412b:	add    BYTE PTR [rax],al
   14001412d:	add    BYTE PTR [rax],al
   14001412f:	add    BYTE PTR [rcx+rdi*2+0x1],al
   140014133:	add    BYTE PTR [rax],al
   140014135:	add    BYTE PTR [rax],al
   140014137:	add    BYTE PTR [rcx+rdi*2+0x1],al
   14001413e:	add    BYTE PTR [rax],al
   140014140:	mov    al,0x79
   140014142:	add    DWORD PTR [rax],eax
   140014144:	add    BYTE PTR [rax],al
   140014146:	add    BYTE PTR [rax],al
   140014148:	out    dx,al
   140014149:	jns    0x14001414c
   14001414b:	add    BYTE PTR [rax],al
   14001414d:	add    BYTE PTR [rax],al
   14001414f:	add    BYTE PTR [rax],bl
   140014151:	jp     0x140014154
   140014153:	add    BYTE PTR [rax],al
   140014155:	add    BYTE PTR [rax],al
   140014157:	add    BYTE PTR [rdx+0x7a],dl
   14001415a:	add    DWORD PTR [rax],eax
   14001415c:	add    BYTE PTR [rax],al
   14001415e:	add    BYTE PTR [rax],al
   140014160:	xchg   esp,eax
   140014161:	jp     0x140014164
   140014163:	add    BYTE PTR [rax],al
   140014165:	add    BYTE PTR [rax],al
   140014167:	add    al,bl
   140014169:	jp     0x14001416c
   14001416b:	add    BYTE PTR [rax],al
   14001416d:	add    BYTE PTR [rax],al
   14001416f:	add    BYTE PTR [rax],ah
   140014171:	jnp    0x140014174
   140014173:	add    BYTE PTR [rax],al
   140014175:	add    BYTE PTR [rax],al
   140014177:	add    BYTE PTR [rax+0x7b],ah
   14001417a:	add    DWORD PTR [rax],eax
   14001417c:	add    BYTE PTR [rax],al
   14001417e:	add    BYTE PTR [rax],al
   140014180:	pushf  
   140014181:	jnp    0x140014184
   140014183:	add    BYTE PTR [rax],al
   140014185:	add    BYTE PTR [rax],al
   140014187:	add    dl,bl
   140014189:	jnp    0x14001418c
   14001418b:	add    BYTE PTR [rax],al
   14001418d:	add    BYTE PTR [rax],al
   14001418f:	add    BYTE PTR [rsi],dl
   140014191:	jl     0x140014194
   140014193:	add    BYTE PTR [rax],al
   140014195:	add    BYTE PTR [rax],al
   140014197:	add    BYTE PTR [rsp+rdi*2+0x1],cl
   14001419b:	add    BYTE PTR [rax],al
   14001419d:	add    BYTE PTR [rax],al
   14001419f:	add    BYTE PTR [rsp+rdi*2+0x1],dl
   1400141a6:	add    BYTE PTR [rax],al
   1400141a8:	fdivr  DWORD PTR [rcx+rax*1+0x0]
   1400141ac:	add    BYTE PTR [rax],al
   1400141ae:	add    BYTE PTR [rax],al
   1400141b0:	sbb    bh,BYTE PTR [rbp+0x1]
   1400141b3:	add    BYTE PTR [rax],al
   1400141b5:	add    BYTE PTR [rax],al
   1400141b7:	add    BYTE PTR [rsi+0x7d],bl
   1400141ba:	add    DWORD PTR [rax],eax
   1400141bc:	add    BYTE PTR [rax],al
   1400141be:	add    BYTE PTR [rax],al
   1400141c0:	cwde   
   1400141c1:	jge    0x1400141c4
   1400141c3:	add    BYTE PTR [rax],al
   1400141c5:	add    BYTE PTR [rax],al
   1400141c7:	add    ah,al
   1400141c9:	jge    0x1400141cc
   1400141cb:	add    BYTE PTR [rax],al
   1400141cd:	add    BYTE PTR [rax],al
   1400141cf:	add    dl,dh
   1400141d1:	jge    0x1400141d4
   1400141d3:	add    BYTE PTR [rax],al
   1400141d5:	add    BYTE PTR [rax],al
   1400141d7:	add    BYTE PTR [rsi],ch
   1400141d9:	jle    0x1400141dc
   1400141db:	add    BYTE PTR [rax],al
   1400141dd:	add    BYTE PTR [rax],al
   1400141df:	add    BYTE PTR [rdx+0x7e],ch
   1400141e2:	add    DWORD PTR [rax],eax
   1400141e4:	add    BYTE PTR [rax],al
   1400141e6:	add    BYTE PTR [rax],al
   1400141e8:	xchg   esi,eax
   1400141e9:	jle    0x1400141ec
   1400141eb:	add    BYTE PTR [rax],al
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    al,cl
   1400141f1:	jle    0x1400141f4
   1400141f3:	add    BYTE PTR [rax],al
   1400141f5:	add    BYTE PTR [rax],al
   1400141f7:	add    ah,bh
   1400141f9:	jle    0x1400141fc
   1400141fb:	add    BYTE PTR [rax],al
   1400141fd:	add    BYTE PTR [rax],al
   1400141ff:	add    BYTE PTR [rax],ch
   140014201:	jg     0x140014204
   140014203:	add    BYTE PTR [rax],al
   140014205:	add    BYTE PTR [rax],al
   140014207:	add    BYTE PTR [rax+0x7f],ch
   14001420a:	add    DWORD PTR [rax],eax
   14001420c:	add    BYTE PTR [rax],al
   14001420e:	add    BYTE PTR [rax],al
   140014210:	(bad)  
   140014211:	jg     0x140014214
   140014213:	add    BYTE PTR [rax],al
   140014215:	add    BYTE PTR [rax],al
   140014217:	add    BYTE PTR [rdi+rdi*2+0x1],bl
   14001421e:	add    BYTE PTR [rax],al
   140014220:	enter  0x17f,0x0
   140014224:	add    BYTE PTR [rax],al
   140014226:	add    BYTE PTR [rax],al
   140014228:	in     al,dx
   140014229:	jg     0x14001422c
   14001422b:	add    BYTE PTR [rax],al
   14001422d:	add    BYTE PTR [rax],al
   14001422f:	add    BYTE PTR [rax+rax*4],bl
   140014232:	add    DWORD PTR [rax],eax
   140014234:	add    BYTE PTR [rax],al
   140014236:	add    BYTE PTR [rax],al
   140014238:	add    BYTE PTR ds:[rcx],0x0
   14001423c:	add    BYTE PTR [rax],al
   14001423e:	add    BYTE PTR [rax],al
   140014240:	(bad)  
   140014241:	add    BYTE PTR [rcx],0x0
   140014244:	add    BYTE PTR [rax],al
   140014246:	add    BYTE PTR [rax],al
   140014248:	nop
   140014249:	add    BYTE PTR [rcx],0x0
   14001424c:	add    BYTE PTR [rax],al
   14001424e:	add    BYTE PTR [rax],al
   140014250:	mov    dh,0x80
   140014252:	add    DWORD PTR [rax],eax
   140014254:	add    BYTE PTR [rax],al
   140014256:	add    BYTE PTR [rax],al
   140014258:	lock add BYTE PTR [rcx],0x0
   14001425c:	add    BYTE PTR [rax],al
   14001425e:	add    BYTE PTR [rax],al
   140014260:	(bad)  
   140014261:	add    DWORD PTR [rcx],0x0
   140014267:	add    BYTE PTR [rcx+rax*4+0x1],al
   14001426b:	add    BYTE PTR [rax],al
   14001426d:	add    BYTE PTR [rax],al
   14001426f:	add    BYTE PTR [rax-0x7f],ch
   140014272:	add    DWORD PTR [rax],eax
   140014274:	add    BYTE PTR [rax],al
   140014276:	add    BYTE PTR [rax],al
   140014278:	pushf  
   140014279:	add    DWORD PTR [rcx],0x0
   14001427f:	add    dl,dl
   140014281:	add    DWORD PTR [rcx],0x0
   140014287:	add    BYTE PTR [rdx+rax*4],al
   14001428a:	add    DWORD PTR [rax],eax
   14001428c:	add    BYTE PTR [rax],al
   14001428e:	add    BYTE PTR [rax],al
   140014290:	xor    al,BYTE PTR [rdx+0x1]
   140014296:	add    BYTE PTR [rax],al
   140014298:	(bad)  
   14001429a:	add    DWORD PTR [rax],eax
   14001429c:	add    BYTE PTR [rax],al
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	mov    WORD PTR [rdx+0x1],es
   1400142a6:	add    BYTE PTR [rax],al
   1400142a8:	mov    dh,0x82
   1400142aa:	add    DWORD PTR [rax],eax
   1400142ac:	add    BYTE PTR [rax],al
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	in     al,0x82
   1400142b2:	add    DWORD PTR [rax],eax
   1400142b4:	add    BYTE PTR [rax],al
   1400142b6:	add    BYTE PTR [rax],al
   1400142b8:	adc    al,0x83
   1400142ba:	add    DWORD PTR [rax],eax
   1400142bc:	add    BYTE PTR [rax],al
   1400142be:	add    BYTE PTR [rax],al
   1400142c0:	rex add DWORD PTR [rcx],0x0
   1400142c4:	add    BYTE PTR [rax],al
   1400142c6:	add    BYTE PTR [rax],al
   1400142c8:	push   0xffffffffffffff83
   1400142ca:	add    DWORD PTR [rax],eax
   1400142cc:	add    BYTE PTR [rax],al
   1400142ce:	add    BYTE PTR [rax],al
   1400142d0:	xchg   edx,eax
   1400142d1:	add    DWORD PTR [rcx],0x0
   1400142d4:	add    BYTE PTR [rax],al
   1400142d6:	add    BYTE PTR [rax],al
   1400142d8:	ret    0x183
   1400142db:	add    BYTE PTR [rax],al
   1400142dd:	add    BYTE PTR [rax],al
   1400142df:	add    dl,ch
   1400142e1:	add    DWORD PTR [rcx],0x0
   1400142e4:	add    BYTE PTR [rax],al
   1400142e6:	add    BYTE PTR [rax],al
   1400142e8:	test   BYTE PTR es:[rcx],al
   1400142eb:	add    BYTE PTR [rax],al
   1400142ed:	add    BYTE PTR [rax],al
   1400142ef:	add    BYTE PTR [rsi-0x7c],cl
   1400142f2:	add    DWORD PTR [rax],eax
   1400142f4:	add    BYTE PTR [rax],al
   1400142f6:	add    BYTE PTR [rax],al
   1400142f8:	(bad)  
   1400142f9:	test   BYTE PTR [rcx],al
   1400142fb:	add    BYTE PTR [rax],al
   1400142fd:	add    BYTE PTR [rax],al
   1400142ff:	add    BYTE PTR [rax-0x7c],bh
   140014302:	add    DWORD PTR [rax],eax
   140014304:	add    BYTE PTR [rax],al
   140014306:	add    BYTE PTR [rax],al
   140014308:	cwde   
   140014309:	test   BYTE PTR [rcx],al
   14001430b:	add    BYTE PTR [rax],al
   14001430d:	add    BYTE PTR [rax],al
   14001430f:	add    dh,cl
   140014311:	test   BYTE PTR [rcx],al
   140014313:	add    BYTE PTR [rax],al
   140014315:	add    BYTE PTR [rax],al
   140014317:	add    al,dh
   140014319:	test   BYTE PTR [rcx],al
   14001431b:	add    BYTE PTR [rax],al
   14001431d:	add    BYTE PTR [rax],al
   14001431f:	add    BYTE PTR [rax*4+0x1],bl
   140014326:	add    BYTE PTR [rax],al
   140014328:	test   QWORD PTR [rcx],rax
   14001432b:	add    BYTE PTR [rax],al
   14001432d:	add    BYTE PTR [rax],al
   14001432f:	add    BYTE PTR [rdx-0x7b],ch
   140014332:	add    DWORD PTR [rax],eax
   140014334:	add    BYTE PTR [rax],al
   140014336:	add    BYTE PTR [rax],al
   140014338:	xchg   esi,eax
   140014339:	test   DWORD PTR [rcx],eax
   14001433b:	add    BYTE PTR [rax],al
   14001433d:	add    BYTE PTR [rax],al
   14001433f:	add    al,cl
   140014341:	test   DWORD PTR [rcx],eax
   140014343:	add    BYTE PTR [rax],al
   140014345:	add    BYTE PTR [rax],al
   140014347:	add    al,dh
   140014349:	test   DWORD PTR [rcx],eax
   14001434b:	add    BYTE PTR [rax],al
   14001434d:	add    BYTE PTR [rax],al
   14001434f:	add    BYTE PTR [rax],dl
   140014351:	xchg   BYTE PTR [rcx],al
   140014353:	add    BYTE PTR [rax],al
   140014355:	add    BYTE PTR [rax],al
   140014357:	add    BYTE PTR [rsi],dh
   140014359:	xchg   BYTE PTR [rcx],al
   14001435b:	add    BYTE PTR [rax],al
   14001435d:	add    BYTE PTR [rax],al
   14001435f:	add    BYTE PTR [rsi+rax*4+0x1],bl
   140014363:	add    BYTE PTR [rax],al
   140014365:	add    BYTE PTR [rax],al
   140014367:	add    BYTE PTR [rdx+0x186],al
   14001436d:	add    BYTE PTR [rax],al
   14001436f:	add    BYTE PTR [rax+0x186],bh
   140014375:	add    BYTE PTR [rax],al
   140014377:	add    dl,ah
   140014379:	xchg   BYTE PTR [rcx],al
   14001437b:	add    BYTE PTR [rax],al
   14001437d:	add    BYTE PTR [rax],al
   14001437f:	add    BYTE PTR [rax],cl
   140014381:	xchg   DWORD PTR [rcx],eax
   140014383:	add    BYTE PTR [rax],al
   140014385:	add    BYTE PTR [rax],al
   140014387:	add    BYTE PTR [rdx],dh
   140014389:	xchg   DWORD PTR [rcx],eax
   14001438b:	add    BYTE PTR [rax],al
   14001438d:	add    BYTE PTR [rax],al
   14001438f:	add    BYTE PTR [rsi-0x79],dl
   140014392:	add    DWORD PTR [rax],eax
   140014394:	add    BYTE PTR [rax],al
   140014396:	add    BYTE PTR [rax],al
   140014398:	xchg   BYTE PTR [rdi+0x1],al
   14001439e:	add    BYTE PTR [rax],al
   1400143a0:	scas   al,BYTE PTR es:[rdi]
   1400143a1:	xchg   DWORD PTR [rcx],eax
   1400143a3:	add    BYTE PTR [rax],al
   1400143a5:	add    BYTE PTR [rax],al
   1400143a7:	add    ah,ch
   1400143a9:	xchg   DWORD PTR [rcx],eax
   1400143ab:	add    BYTE PTR [rax],al
   1400143ad:	add    BYTE PTR [rax],al
   1400143af:	add    BYTE PTR [rax+rcx*4],dl
   1400143b2:	add    DWORD PTR [rax],eax
   1400143b4:	add    BYTE PTR [rax],al
   1400143b6:	add    BYTE PTR [rax],al
   1400143b8:	pop    rax
   1400143b9:	mov    BYTE PTR [rcx],al
   1400143bb:	add    BYTE PTR [rax],al
   1400143bd:	add    BYTE PTR [rax],al
   1400143bf:	add    BYTE PTR [rax+0x188],al
   1400143c5:	add    BYTE PTR [rax],al
   1400143c7:	add    BYTE PTR [rax+0x188],dh
   1400143cd:	add    BYTE PTR [rax],al
   1400143cf:	add    al,ah
   1400143d1:	mov    BYTE PTR [rcx],al
   1400143d3:	add    BYTE PTR [rax],al
   1400143d5:	add    BYTE PTR [rax],al
   1400143d7:	add    BYTE PTR [rsi],dl
   1400143d9:	mov    DWORD PTR [rcx],eax
   1400143db:	add    BYTE PTR [rax],al
   1400143dd:	add    BYTE PTR [rax],al
   1400143df:	add    BYTE PTR [rcx+rcx*4+0x1],al
   1400143e3:	add    BYTE PTR [rax],al
   1400143e5:	add    BYTE PTR [rax],al
   1400143e7:	add    BYTE PTR [rax+0x189],cl
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	add    BYTE PTR [rsi+0x189],dh
   1400143f5:	add    BYTE PTR [rax],al
   1400143f7:	add    ah,bh
   1400143f9:	mov    DWORD PTR [rcx],eax
   1400143fb:	add    BYTE PTR [rax],al
   1400143fd:	add    BYTE PTR [rax],al
   1400143ff:	add    BYTE PTR [rdx+rcx*4],dh
   140014402:	add    DWORD PTR [rax],eax
   140014404:	add    BYTE PTR [rax],al
   140014406:	add    BYTE PTR [rax],al
   140014408:	data16 mov al,BYTE PTR [rcx]
   14001440b:	add    BYTE PTR [rax],al
   14001440d:	add    BYTE PTR [rax],al
   14001440f:	add    BYTE PTR [rdx+0x18a],ah
   140014415:	add    BYTE PTR [rax],al
   140014417:	add    al,ah
   140014419:	mov    al,BYTE PTR [rcx]
   14001441b:	add    BYTE PTR [rax],al
   14001441d:	add    BYTE PTR [rax],al
   14001441f:	add    BYTE PTR [rdx],ah
   140014421:	mov    eax,DWORD PTR [rcx]
   140014423:	add    BYTE PTR [rax],al
   140014425:	add    BYTE PTR [rax],al
   140014427:	add    BYTE PTR [rsi-0x75],bl
   14001442a:	add    DWORD PTR [rax],eax
   14001442c:	add    BYTE PTR [rax],al
   14001442e:	add    BYTE PTR [rax],al
   140014430:	xchg   esi,eax
   140014431:	mov    eax,DWORD PTR [rcx]
   140014433:	add    BYTE PTR [rax],al
   140014435:	add    BYTE PTR [rax],al
   140014437:	add    dh,cl
   140014439:	mov    eax,DWORD PTR [rcx]
   14001443b:	add    BYTE PTR [rax],al
   14001443d:	add    BYTE PTR [rax],al
   14001443f:	add    BYTE PTR [rax],cl
   140014441:	mov    WORD PTR [rcx],es
   140014443:	add    BYTE PTR [rax],al
   140014445:	add    BYTE PTR [rax],al
   140014447:	add    BYTE PTR [rdx-0x74],al
   14001444a:	add    DWORD PTR [rax],eax
   14001444c:	add    BYTE PTR [rax],al
   14001444e:	add    BYTE PTR [rax],al
   140014450:	jl     0x1400143de
   140014452:	add    DWORD PTR [rax],eax
   140014454:	add    BYTE PTR [rax],al
   140014456:	add    BYTE PTR [rax],al
   140014458:	mov    ah,0x8c
   14001445a:	add    DWORD PTR [rax],eax
   14001445c:	add    BYTE PTR [rax],al
   14001445e:	add    BYTE PTR [rax],al
   140014460:	out    dx,al
   140014461:	mov    WORD PTR [rcx],es
   140014463:	add    BYTE PTR [rax],al
   140014465:	add    BYTE PTR [rax],al
   140014467:	add    BYTE PTR [rdx],dh
   140014469:	lea    eax,[rcx]
   14001446b:	add    BYTE PTR [rax],al
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    BYTE PTR [rdx-0x73],dh
   140014472:	add    DWORD PTR [rax],eax
   140014474:	add    BYTE PTR [rax],al
   140014476:	add    BYTE PTR [rax],al
   140014478:	mov    al,0x8d
   14001447a:	add    DWORD PTR [rax],eax
   14001447c:	add    BYTE PTR [rax],al
   14001447e:	add    BYTE PTR [rax],al
   140014480:	lock lea eax,[rcx]
   140014483:	add    BYTE PTR [rax],al
   140014485:	add    BYTE PTR [rax],al
   140014487:	add    BYTE PTR [rsi],ah
   140014489:	mov    es,WORD PTR [rcx]
   14001448b:	add    BYTE PTR [rax],al
   14001448d:	add    BYTE PTR [rax],al
   14001448f:	add    BYTE PTR [rsi+rcx*4+0x1],bl
   140014493:	add    BYTE PTR [rax],al
   140014495:	add    BYTE PTR [rax],al
   140014497:	add    BYTE PTR [rax+0x18e],dl
   14001449d:	add    BYTE PTR [rax],al
   14001449f:	add    ah,dl
   1400144a1:	mov    es,WORD PTR [rcx]
   1400144a3:	add    BYTE PTR [rax],al
   1400144a5:	add    BYTE PTR [rax],al
   1400144a7:	add    BYTE PTR [rdi+rcx*4],ah
   1400144aa:	add    DWORD PTR [rax],eax
   1400144ac:	add    BYTE PTR [rax],al
   1400144ae:	add    BYTE PTR [rax],al
   1400144b0:	in     al,dx
   1400144b1:	jno    0x1400144b4
   1400144b3:	add    BYTE PTR [rax],al
   1400144b5:	add    BYTE PTR [rax],al
   1400144b7:	add    BYTE PTR [rdi+rcx*4+0x1],al
   1400144be:	add    BYTE PTR [rax],al
   1400144c0:	mov    esi,0x18f
   1400144c5:	add    BYTE PTR [rax],al
   1400144c7:	add    dh,bh
   1400144c9:	pop    QWORD PTR [rcx]
   1400144cb:	add    BYTE PTR [rax],al
   1400144cd:	add    BYTE PTR [rax],al
   1400144cf:	add    BYTE PTR [rax+rdx*4+0x1],al
   1400144d3:	add    BYTE PTR [rax],al
   1400144d5:	add    BYTE PTR [rax],al
   1400144d7:	add    BYTE PTR [rsi+0x190],al
   1400144dd:	add    BYTE PTR [rax],al
   1400144df:	add    ah,al
   1400144e1:	nop
   1400144e2:	add    DWORD PTR [rax],eax
   1400144e4:	add    BYTE PTR [rax],al
   1400144e6:	add    BYTE PTR [rax],al
   1400144e8:	add    BYTE PTR [rcx+0x1],dl
   1400144ee:	add    BYTE PTR [rax],al
   1400144f0:	xor    dl,BYTE PTR [rcx+0x1]
   1400144f6:	add    BYTE PTR [rax],al
   1400144f8:	pop    rsp
   1400144f9:	xchg   ecx,eax
   1400144fa:	add    DWORD PTR [rax],eax
   1400144fc:	add    BYTE PTR [rax],al
   1400144fe:	add    BYTE PTR [rax],al
   140014500:	(bad)  
   140014501:	xchg   ecx,eax
   140014502:	add    DWORD PTR [rax],eax
   140014504:	add    BYTE PTR [rax],al
   140014506:	add    BYTE PTR [rax],al
   140014508:	(bad)  
   140014509:	xchg   ecx,eax
   14001450a:	add    DWORD PTR [rax],eax
   14001450c:	add    BYTE PTR [rax],al
   14001450e:	add    BYTE PTR [rax],al
   140014510:	in     al,dx
   140014511:	xchg   ecx,eax
   140014512:	add    DWORD PTR [rax],eax
   140014514:	add    BYTE PTR [rax],al
   140014516:	add    BYTE PTR [rax],al
   140014518:	sbb    al,0x92
   14001451a:	add    DWORD PTR [rax],eax
   14001451c:	add    BYTE PTR [rax],al
   14001451e:	add    BYTE PTR [rax],al
   140014520:	push   rsp
   140014521:	xchg   edx,eax
   140014522:	add    DWORD PTR [rax],eax
   140014524:	add    BYTE PTR [rax],al
   140014526:	add    BYTE PTR [rax],al
   140014528:	mov    ss,WORD PTR [rdx+0x1]
   14001452e:	add    BYTE PTR [rax],al
   140014530:	rcl    BYTE PTR [rdx+0x1],0x0
   140014537:	add    ah,dh
   140014539:	xchg   edx,eax
   14001453a:	add    DWORD PTR [rax],eax
   14001453c:	add    BYTE PTR [rax],al
   14001453e:	add    BYTE PTR [rax],al
   140014540:	sub    dl,BYTE PTR [rbx+0x1]
   140014546:	add    BYTE PTR [rax],al
   140014548:	pop    rsi
   140014549:	xchg   ebx,eax
   14001454a:	add    DWORD PTR [rax],eax
   14001454c:	add    BYTE PTR [rax],al
   14001454e:	add    BYTE PTR [rax],al
   140014550:	xchg   esp,eax
   140014551:	xchg   ebx,eax
   140014552:	add    DWORD PTR [rax],eax
   140014554:	add    BYTE PTR [rax],al
   140014556:	add    BYTE PTR [rax],al
   140014558:	(bad)  
   140014559:	xchg   ebx,eax
   14001455a:	add    DWORD PTR [rax],eax
   14001455c:	add    BYTE PTR [rax],al
   14001455e:	add    BYTE PTR [rax],al
   140014560:	cli    
   140014561:	xchg   ebx,eax
   140014562:	add    DWORD PTR [rax],eax
   140014564:	add    BYTE PTR [rax],al
   140014566:	add    BYTE PTR [rax],al
   140014568:	cmp    BYTE PTR [rcx+rax*1+0x0],dl
   14001456f:	add    BYTE PTR [rax-0x6c],ch
   140014572:	add    DWORD PTR [rax],eax
   140014574:	add    BYTE PTR [rax],al
   140014576:	add    BYTE PTR [rax],al
   140014578:	cwde   
   140014579:	xchg   esp,eax
   14001457a:	add    DWORD PTR [rax],eax
   14001457c:	add    BYTE PTR [rax],al
   14001457e:	add    BYTE PTR [rax],al
   140014580:	(bad)  
   140014581:	xchg   esp,eax
   140014582:	add    DWORD PTR [rax],eax
   140014584:	add    BYTE PTR [rax],al
   140014586:	add    BYTE PTR [rax],al
   140014588:	add    al,0x95
   14001458a:	add    DWORD PTR [rax],eax
   14001458c:	add    BYTE PTR [rax],al
   14001458e:	add    BYTE PTR [rax],al
   140014590:	rex.WRX xchg rbp,rax
   140014592:	add    DWORD PTR [rax],eax
   140014594:	add    BYTE PTR [rax],al
   140014596:	add    BYTE PTR [rax],al
   140014598:	outs   dx,BYTE PTR ds:[rsi]
   140014599:	xchg   ebp,eax
   14001459a:	add    DWORD PTR [rax],eax
   14001459c:	add    BYTE PTR [rax],al
   14001459e:	add    BYTE PTR [rax],al
   1400145a0:	mov    ss,WORD PTR [rbp+0x1]
   1400145a6:	add    BYTE PTR [rax],al
   1400145a8:	rcl    BYTE PTR [rbp+0x1],0x0
   1400145af:	add    dl,ch
   1400145b1:	xchg   ebp,eax
   1400145b2:	add    DWORD PTR [rax],eax
   1400145b4:	add    BYTE PTR [rax],al
   1400145b6:	add    BYTE PTR [rax],al
   1400145b8:	sub    BYTE PTR [rsi+0x1],dl
   1400145be:	add    BYTE PTR [rax],al
   1400145c0:	push   rdx
   1400145c1:	xchg   esi,eax
   1400145c2:	add    DWORD PTR [rax],eax
   1400145c4:	add    BYTE PTR [rax],al
   1400145c6:	add    BYTE PTR [rax],al
   1400145c8:	test   BYTE PTR [rsi+0x1],dl
   1400145ce:	add    BYTE PTR [rax],al
   1400145d0:	mov    ah,0x96
   1400145d2:	add    DWORD PTR [rax],eax
   1400145d4:	add    BYTE PTR [rax],al
   1400145d6:	add    BYTE PTR [rax],al
   1400145d8:	in     al,dx
   1400145d9:	xchg   esi,eax
   1400145da:	add    DWORD PTR [rax],eax
   1400145dc:	add    BYTE PTR [rax],al
   1400145de:	add    BYTE PTR [rax],al
   1400145e0:	es xchg edi,eax
   1400145e2:	add    DWORD PTR [rax],eax
   1400145e4:	add    BYTE PTR [rax],al
   1400145e6:	add    BYTE PTR [rax],al
   1400145e8:	pop    rsp
   1400145e9:	xchg   edi,eax
   1400145ea:	add    DWORD PTR [rax],eax
   1400145ec:	add    BYTE PTR [rax],al
   1400145ee:	add    BYTE PTR [rax],al
   1400145f0:	nop
   1400145f1:	xchg   edi,eax
   1400145f2:	add    DWORD PTR [rax],eax
   1400145f4:	add    BYTE PTR [rax],al
   1400145f6:	add    BYTE PTR [rax],al
   1400145f8:	ret    0x197
   1400145fb:	add    BYTE PTR [rax],al
   1400145fd:	add    BYTE PTR [rax],al
   1400145ff:	add    dh,dh
   140014601:	xchg   edi,eax
   140014602:	add    DWORD PTR [rax],eax
   140014604:	add    BYTE PTR [rax],al
   140014606:	add    BYTE PTR [rax],al
   140014608:	and    al,0x98
   14001460a:	add    DWORD PTR [rax],eax
   14001460c:	add    BYTE PTR [rax],al
   14001460e:	add    BYTE PTR [rax],al
   140014610:	pop    rax
   140014611:	cwde   
   140014612:	add    DWORD PTR [rax],eax
   140014614:	add    BYTE PTR [rax],al
   140014616:	add    BYTE PTR [rax],al
   140014618:	test   BYTE PTR [rax+0x1],bl
   14001461e:	add    BYTE PTR [rax],al
   140014620:	(bad)  
   140014621:	cwde   
   140014622:	add    DWORD PTR [rax],eax
   140014624:	add    BYTE PTR [rax],al
   140014626:	add    BYTE PTR [rax],al
   140014628:	lock cwde 
   14001462a:	add    DWORD PTR [rax],eax
   14001462c:	add    BYTE PTR [rax],al
   14001462e:	add    BYTE PTR [rax],al
   140014630:	sbb    bl,BYTE PTR [rcx+0x1]
   140014636:	add    BYTE PTR [rax],al
   140014638:	rex.WR cqo 
   14001463a:	add    DWORD PTR [rax],eax
   14001463c:	add    BYTE PTR [rax],al
   14001463e:	add    BYTE PTR [rax],al
   140014640:	mov    BYTE PTR [rcx+0x1],bl
   140014646:	add    BYTE PTR [rax],al
   140014648:	mov    esi,0x199
   14001464d:	add    BYTE PTR [rax],al
   14001464f:	add    ah,dh
   140014651:	cdq    
   140014652:	add    DWORD PTR [rax],eax
   140014654:	add    BYTE PTR [rax],al
   140014656:	add    BYTE PTR [rax],al
   140014658:	sub    al,0x9a
   14001465a:	add    DWORD PTR [rax],eax
   14001465c:	add    BYTE PTR [rax],al
   14001465e:	add    BYTE PTR [rax],al
   140014660:	(bad)  
   140014661:	(bad)  
   140014662:	add    DWORD PTR [rax],eax
   140014664:	add    BYTE PTR [rax],al
   140014666:	add    BYTE PTR [rax],al
   140014668:	xchg   esp,eax
   140014669:	(bad)  
   14001466a:	add    DWORD PTR [rax],eax
   14001466c:	add    BYTE PTR [rax],al
   14001466e:	add    BYTE PTR [rax],al
   140014670:	mov    esi,0x19a
   140014675:	add    BYTE PTR [rax],al
   140014677:	add    dl,ch
   140014679:	(bad)  
   14001467a:	add    DWORD PTR [rax],eax
   14001467c:	add    BYTE PTR [rax],al
   14001467e:	add    BYTE PTR [rax],al
   140014680:	add    bl,BYTE PTR [rbx+0x1]
   140014686:	add    BYTE PTR [rax],al
   140014688:	and    BYTE PTR [rbx+0x1],bl
   14001468e:	add    BYTE PTR [rax],al
   140014690:	cmp    BYTE PTR [rbx+0x1],bl
   140014696:	add    BYTE PTR [rax],al
   140014698:	push   rax
   140014699:	fwait
   14001469a:	add    DWORD PTR [rax],eax
   14001469c:	add    BYTE PTR [rax],al
   14001469e:	add    BYTE PTR [rax],al
   1400146a0:	push   0xffffffffffffff9b
   1400146a2:	add    DWORD PTR [rax],eax
   1400146a4:	add    BYTE PTR [rax],al
   1400146a6:	add    BYTE PTR [rax],al
   1400146a8:	nop
   1400146a9:	fwait
   1400146aa:	add    DWORD PTR [rax],eax
   1400146ac:	add    BYTE PTR [rax],al
   1400146ae:	add    BYTE PTR [rax],al
   1400146b0:	mov    dh,0x9b
   1400146b2:	add    DWORD PTR [rax],eax
   1400146b4:	add    BYTE PTR [rax],al
   1400146b6:	add    BYTE PTR [rax],al
   1400146b8:	hlt    
   1400146b9:	fwait
   1400146ba:	add    DWORD PTR [rax],eax
   1400146bc:	add    BYTE PTR [rax],al
   1400146be:	add    BYTE PTR [rax],al
   1400146c0:	ds pushf 
   1400146c2:	add    DWORD PTR [rax],eax
   1400146c4:	add    BYTE PTR [rax],al
   1400146c6:	add    BYTE PTR [rax],al
   1400146c8:	pushfw 
   1400146ca:	add    DWORD PTR [rax],eax
   1400146cc:	add    BYTE PTR [rax],al
   1400146ce:	add    BYTE PTR [rax],al
   1400146d0:	(bad)  
   1400146d1:	pushf  
   1400146d2:	add    DWORD PTR [rax],eax
   1400146d4:	add    BYTE PTR [rax],al
   1400146d6:	add    BYTE PTR [rax],al
   1400146d8:	add    al,0x9d
   1400146da:	add    DWORD PTR [rax],eax
   1400146dc:	add    BYTE PTR [rax],al
   1400146de:	add    BYTE PTR [rax],al
   1400146e0:	xor    BYTE PTR [rbp+0x1],bl
   1400146e6:	add    BYTE PTR [rax],al
   1400146e8:	pop    rsp
   1400146e9:	popf   
   1400146ea:	add    DWORD PTR [rax],eax
   1400146ec:	add    BYTE PTR [rax],al
   1400146ee:	add    BYTE PTR [rax],al
   1400146f0:	xchg   esp,eax
   1400146f1:	popf   
   1400146f2:	add    DWORD PTR [rax],eax
   1400146f4:	add    BYTE PTR [rax],al
   1400146f6:	add    BYTE PTR [rax],al
   1400146f8:	(bad)  
   1400146f9:	popf   
   1400146fa:	add    DWORD PTR [rax],eax
   1400146fc:	add    BYTE PTR [rax],al
   1400146fe:	add    BYTE PTR [rax],al
   140014700:	or     bl,BYTE PTR [rsi+0x1]
   140014706:	add    BYTE PTR [rax],al
   140014708:	cmp    bl,BYTE PTR [rsi+0x1]
   14001470e:	add    BYTE PTR [rax],al
   140014710:	jo     0x1400146b0
   140014712:	add    DWORD PTR [rax],eax
   140014714:	add    BYTE PTR [rax],al
   140014716:	add    BYTE PTR [rax],al
   140014718:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014719:	sahf   
   14001471a:	add    DWORD PTR [rax],eax
   14001471c:	add    BYTE PTR [rax],al
   14001471e:	add    BYTE PTR [rax],al
   140014720:	rcr    BYTE PTR [rsi+0x1],1
   140014726:	add    BYTE PTR [rax],al
   140014728:	adc    BYTE PTR [rdi+0x1],bl
   14001472e:	add    BYTE PTR [rax],al
   140014730:	rex.X lahf 
   140014732:	add    DWORD PTR [rax],eax
   140014734:	add    BYTE PTR [rax],al
   140014736:	add    BYTE PTR [rax],al
   140014738:	jb     0x1400146d9
   14001473a:	add    DWORD PTR [rax],eax
   14001473c:	add    BYTE PTR [rax],al
   14001473e:	add    BYTE PTR [rax],al
   140014740:	movabs ds:0xc00000000000019f,al
   140014749:	lahf   
   14001474a:	add    DWORD PTR [rax],eax
   14001474c:	add    BYTE PTR [rax],al
   14001474e:	add    BYTE PTR [rax],al
   140014750:	(bad)  
   140014751:	lahf   
   140014752:	add    DWORD PTR [rax],eax
   140014754:	add    BYTE PTR [rax],al
   140014756:	add    BYTE PTR [rax],al
   140014758:	sbb    BYTE PTR [rax+0x1],ah
   14001475e:	add    BYTE PTR [rax],al
   140014760:	rex.X movabs al,ds:0xa08e000000000001
   14001476a:	add    DWORD PTR [rax],eax
   14001476c:	add    BYTE PTR [rax],al
   14001476e:	add    BYTE PTR [rax],al
   140014770:	mov    esi,0x1a0
   140014775:	add    BYTE PTR [rax],al
   140014777:	add    dl,ch
   140014779:	movabs al,ds:0xa112000000000001
   140014782:	add    DWORD PTR [rax],eax
   140014784:	add    BYTE PTR [rax],al
   140014786:	add    BYTE PTR [rax],al
   140014788:	movabs eax,ss:0xa168000000000001
   140014792:	add    DWORD PTR [rax],eax
   140014794:	add    BYTE PTR [rax],al
   140014796:	add    BYTE PTR [rax],al
   140014798:	xchg   edx,eax
   140014799:	movabs eax,ds:0xa1d0000000000001
   1400147a2:	add    DWORD PTR [rax],eax
   1400147a4:	add    BYTE PTR [rax],al
   1400147a6:	add    BYTE PTR [rax],al
   1400147a8:	cli    
   1400147a9:	movabs eax,ds:0xa222000000000001
   1400147b2:	add    DWORD PTR [rax],eax
   1400147b4:	add    BYTE PTR [rax],al
   1400147b6:	add    BYTE PTR [rax],al
   1400147b8:	push   rdx
   1400147b9:	movabs ds:0xa28a000000000001,al
   1400147c2:	add    DWORD PTR [rax],eax
   1400147c4:	add    BYTE PTR [rax],al
   1400147c6:	add    BYTE PTR [rax],al
   1400147c8:	vpshufb xmm0,xmm15,XMMWORD PTR [rax]
   1400147cd:	add    BYTE PTR [rax],al
   1400147cf:	add    BYTE PTR [rdx],al
   1400147d1:	movabs ds:0xa338000000000001,eax
   1400147da:	add    DWORD PTR [rax],eax
   1400147dc:	add    BYTE PTR [rax],al
   1400147de:	add    BYTE PTR [rax],al
   1400147e0:	ins    BYTE PTR es:[rdi],dx
   1400147e1:	movabs ds:0xa3a0000000000001,eax
   1400147ea:	add    DWORD PTR [rax],eax
   1400147ec:	add    BYTE PTR [rax],al
   1400147ee:	add    BYTE PTR [rax],al
   1400147f0:	(bad)  
   1400147f1:	movabs ds:0xa408000000000001,eax
   1400147fa:	add    DWORD PTR [rax],eax
   1400147fc:	add    BYTE PTR [rax],al
   1400147fe:	add    BYTE PTR [rax],al
   140014800:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014802:	add    DWORD PTR [rax],eax
   140014804:	add    BYTE PTR [rax],al
   140014806:	add    BYTE PTR [rax],al
   140014808:	and    BYTE PTR [rcx+rax*1+0x0],0x0
   140014810:	mov    eax,0x1a4
   140014815:	add    BYTE PTR [rax],al
   140014817:	add    dl,dh
   140014819:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001481a:	add    DWORD PTR [rax],eax
   14001481c:	add    BYTE PTR [rax],al
   14001481e:	add    BYTE PTR [rax],al
   140014820:	and    ah,BYTE PTR [rbp+0x1]
   140014826:	add    BYTE PTR [rax],al
   140014828:	push   rax
   140014829:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001482a:	add    DWORD PTR [rax],eax
   14001482c:	add    BYTE PTR [rax],al
   14001482e:	add    BYTE PTR [rax],al
   140014830:	mov    fs,WORD PTR [rbp+0x1]
   140014836:	add    BYTE PTR [rax],al
   140014838:	fsub   DWORD PTR [rbp+0x1]
   14001483e:	add    BYTE PTR [rax],al
   140014840:	clc    
   140014841:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014842:	add    DWORD PTR [rax],eax
   140014844:	add    BYTE PTR [rax],al
   140014846:	add    BYTE PTR [rax],al
   140014848:	adc    ah,BYTE PTR [rsi+0x1]
   14001484e:	add    BYTE PTR [rax],al
   140014850:	sub    ah,BYTE PTR [rsi+0x1]
   140014856:	add    BYTE PTR [rax],al
   140014858:	pop    rsi
   140014859:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001485a:	add    DWORD PTR [rax],eax
   14001485c:	add    BYTE PTR [rax],al
   14001485e:	add    BYTE PTR [rax],al
   140014860:	sahf   
   140014861:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014862:	add    DWORD PTR [rax],eax
   140014864:	add    BYTE PTR [rax],al
   140014866:	add    BYTE PTR [rax],al
   140014868:	int3   
   140014869:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001486a:	add    DWORD PTR [rax],eax
   14001486c:	add    BYTE PTR [rax],al
   14001486e:	add    BYTE PTR [rax],al
   140014870:	adc    al,0xa7
   140014872:	add    DWORD PTR [rax],eax
   140014874:	add    BYTE PTR [rax],al
   140014876:	add    BYTE PTR [rax],al
   140014878:	xor    BYTE PTR [rdi+0x1],ah
   14001487e:	add    BYTE PTR [rax],al
   140014880:	pop    rsp
   140014881:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014882:	add    DWORD PTR [rax],eax
   140014884:	add    BYTE PTR [rax],al
   140014886:	add    BYTE PTR [rax],al
   140014888:	jl     0x140014831
   14001488a:	add    DWORD PTR [rax],eax
   14001488c:	add    BYTE PTR [rax],al
   14001488e:	add    BYTE PTR [rax],al
   140014890:	sahf   
   140014891:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014892:	add    DWORD PTR [rax],eax
   140014894:	add    BYTE PTR [rax],al
   140014896:	add    BYTE PTR [rax],al
   140014898:	shl    BYTE PTR [rdi+0x1],0x0
   14001489f:	add    al,dh
   1400148a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400148a2:	add    DWORD PTR [rax],eax
   1400148a4:	add    BYTE PTR [rax],al
   1400148a6:	add    BYTE PTR [rax],al
   1400148a8:	or     ch,BYTE PTR [rax+0x1]
   1400148ae:	add    BYTE PTR [rax],al
   1400148b0:	test   al,0x1
   1400148b3:	add    BYTE PTR [rax],al
   1400148b5:	add    BYTE PTR [rax],al
   1400148b7:	add    BYTE PTR [rax+rbp*4+0x1],al
   1400148be:	add    BYTE PTR [rax],al
   1400148c0:	mov    al,0xa8
   1400148c2:	add    DWORD PTR [rax],eax
   1400148c4:	add    BYTE PTR [rax],al
   1400148c6:	add    BYTE PTR [rax],al
   1400148c8:	lock test al,0x1
   1400148cb:	add    BYTE PTR [rax],al
   1400148cd:	add    BYTE PTR [rax],al
   1400148cf:	add    BYTE PTR [rdx],ah
   1400148d1:	test   eax,0x1
   1400148d6:	add    BYTE PTR [rax],al
   1400148d8:	push   rdx
   1400148d9:	test   eax,0x1
   1400148de:	add    BYTE PTR [rax],al
   1400148e0:	jp     0x14001488b
   1400148e2:	add    DWORD PTR [rax],eax
   1400148e4:	add    BYTE PTR [rax],al
   1400148e6:	add    BYTE PTR [rax],al
   1400148e8:	mov    dh,0xa9
   1400148ea:	add    DWORD PTR [rax],eax
   1400148ec:	add    BYTE PTR [rax],al
   1400148ee:	add    BYTE PTR [rax],al
   1400148f0:	lock test eax,0x1
   1400148f6:	add    BYTE PTR [rax],al
   1400148f8:	adc    ch,BYTE PTR [rdx+0x1]
   1400148fe:	add    BYTE PTR [rax],al
   140014900:	cmp    BYTE PTR [rdx+0x1],ch
   140014906:	add    BYTE PTR [rax],al
   140014908:	data16 stos BYTE PTR es:[rdi],al
   14001490a:	add    DWORD PTR [rax],eax
   14001490c:	add    BYTE PTR [rax],al
   14001490e:	add    BYTE PTR [rax],al
   140014910:	cwde   
   140014911:	stos   BYTE PTR es:[rdi],al
   140014912:	add    DWORD PTR [rax],eax
   140014914:	add    BYTE PTR [rax],al
   140014916:	add    BYTE PTR [rax],al
   140014918:	retf   0x1aa
   14001491b:	add    BYTE PTR [rax],al
   14001491d:	add    BYTE PTR [rax],al
   14001491f:	add    dl,bh
   140014921:	stos   BYTE PTR es:[rdi],al
   140014922:	add    DWORD PTR [rax],eax
   140014924:	add    BYTE PTR [rax],al
   140014926:	add    BYTE PTR [rax],al
   140014928:	ss stos DWORD PTR es:[rdi],eax
   14001492a:	add    DWORD PTR [rax],eax
   14001492c:	add    BYTE PTR [rax],al
   14001492e:	add    BYTE PTR [rax],al
   140014930:	fs stos DWORD PTR es:[rdi],eax
   140014932:	add    DWORD PTR [rax],eax
   140014934:	add    BYTE PTR [rax],al
   140014936:	add    BYTE PTR [rax],al
   140014938:	jle    0x1400148e5
   14001493a:	add    DWORD PTR [rax],eax
   14001493c:	add    BYTE PTR [rax],al
   14001493e:	add    BYTE PTR [rax],al
   140014940:	cwde   
   140014941:	stos   DWORD PTR es:[rdi],eax
   140014942:	add    DWORD PTR [rax],eax
   140014944:	add    BYTE PTR [rax],al
   140014946:	add    BYTE PTR [rax],al
   140014948:	mov    dl,0xab
   14001494a:	add    DWORD PTR [rax],eax
   14001494c:	add    BYTE PTR [rax],al
   14001494e:	add    BYTE PTR [rax],al
   140014950:	(bad)  
   140014951:	stos   DWORD PTR es:[rdi],eax
   140014952:	add    DWORD PTR [rax],eax
   140014954:	add    BYTE PTR [rax],al
   140014956:	add    BYTE PTR [rax],al
   140014958:	(bad)  
   140014959:	stos   DWORD PTR es:[rdi],eax
   14001495a:	add    DWORD PTR [rax],eax
   14001495c:	add    BYTE PTR [rax],al
   14001495e:	add    BYTE PTR [rax],al
   140014960:	add    BYTE PTR [rcx+rax*1+0x0],ch
   140014967:	add    BYTE PTR [rdx],ah
   140014969:	lods   al,BYTE PTR ds:[rsi]
   14001496a:	add    DWORD PTR [rax],eax
   14001496c:	add    BYTE PTR [rax],al
   14001496e:	add    BYTE PTR [rax],al
   140014970:	rex.WX lods al,BYTE PTR ds:[rsi]
   140014972:	add    DWORD PTR [rax],eax
   140014974:	add    BYTE PTR [rax],al
   140014976:	add    BYTE PTR [rax],al
   140014978:	jo     0x140014926
   14001497a:	add    DWORD PTR [rax],eax
   14001497c:	add    BYTE PTR [rax],al
   14001497e:	add    BYTE PTR [rax],al
   140014980:	(bad)  
   140014981:	lods   al,BYTE PTR ds:[rsi]
   140014982:	add    DWORD PTR [rax],eax
   140014984:	add    BYTE PTR [rax],al
   140014986:	add    BYTE PTR [rax],al
   140014988:	enter  0x1ac,0x0
   14001498c:	add    BYTE PTR [rax],al
   14001498e:	add    BYTE PTR [rax],al
   140014990:	hlt    
   140014991:	lods   al,BYTE PTR ds:[rsi]
   140014992:	add    DWORD PTR [rax],eax
   140014994:	add    BYTE PTR [rax],al
   140014996:	add    BYTE PTR [rax],al
   140014998:	xor    al,0xad
   14001499a:	add    DWORD PTR [rax],eax
   14001499c:	add    BYTE PTR [rax],al
   14001499e:	add    BYTE PTR [rax],al
   1400149a0:	mov    dl,0x71
   1400149a2:	add    DWORD PTR [rax],eax
   1400149a4:	add    BYTE PTR [rax],al
   1400149a6:	add    BYTE PTR [rax],al
   1400149a8:	jbe    0x140014a1b
   1400149aa:	add    DWORD PTR [rax],eax
   1400149ac:	add    BYTE PTR [rax],al
   1400149ae:	add    BYTE PTR [rax],al
   1400149b0:	cmp    al,0x71
   1400149b2:	add    DWORD PTR [rax],eax
   1400149b4:	add    BYTE PTR [rax],al
   1400149b6:	add    BYTE PTR [rax],al
   1400149b8:	(bad)  
   1400149b9:	jno    0x1400149bc
   1400149bb:	add    BYTE PTR [rax],al
   1400149bd:	add    BYTE PTR [rax],al
   1400149bf:	add    dh,al
   1400149c1:	jo     0x1400149c4
   1400149c3:	add    BYTE PTR [rax],al
   1400149c5:	add    BYTE PTR [rax],al
   1400149c7:	add    BYTE PTR [rax+0x170],cl
   1400149cd:	add    BYTE PTR [rax],al
   1400149cf:	add    BYTE PTR [rax+0x70],bl
   1400149d2:	add    DWORD PTR [rax],eax
   1400149d4:	add    BYTE PTR [rax],al
   1400149d6:	add    BYTE PTR [rax],al
   1400149d8:	xor    BYTE PTR [rax+0x1],dh
   1400149db:	add    BYTE PTR [rax],al
   1400149dd:	add    BYTE PTR [rax],al
   1400149df:	add    al,bh
   1400149e1:	outs   dx,DWORD PTR ds:[rsi]
   1400149e2:	add    DWORD PTR [rax],eax
   1400149e4:	add    BYTE PTR [rax],al
   1400149e6:	add    BYTE PTR [rax],al
   1400149e8:	(bad)  
   1400149e9:	outs   dx,DWORD PTR ds:[rsi]
   1400149ea:	add    DWORD PTR [rax],eax
   1400149ec:	add    BYTE PTR [rax],al
   1400149ee:	add    BYTE PTR [rax],al
   1400149f0:	nop
   1400149f1:	outs   dx,DWORD PTR ds:[rsi]
   1400149f2:	add    DWORD PTR [rax],eax
   1400149f4:	add    BYTE PTR [rax],al
   1400149f6:	add    BYTE PTR [rax],al
   1400149f8:	outs   dx,WORD PTR ds:[rsi]
   1400149fa:	add    DWORD PTR [rax],eax
   1400149fc:	add    BYTE PTR [rax],al
   1400149fe:	add    BYTE PTR [rax],al
   140014a00:	xor    al,0x6f
   140014a02:	add    DWORD PTR [rax],eax
   140014a04:	add    BYTE PTR [rax],al
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	(bad)  
   140014a09:	outs   dx,BYTE PTR ds:[rsi]
   140014a0a:	add    DWORD PTR [rax],eax
   140014a0c:	add    BYTE PTR [rax],al
   140014a0e:	add    BYTE PTR [rax],al
   140014a10:	enter  0x16e,0x0
   140014a14:	add    BYTE PTR [rax],al
   140014a16:	add    BYTE PTR [rax],al
   140014a18:	outs   dx,BYTE PTR ds:[rsi]
   140014a19:	outs   dx,BYTE PTR ds:[rsi]
   140014a1a:	add    DWORD PTR [rax],eax
   140014a1c:	add    BYTE PTR [rax],al
   140014a1e:	add    BYTE PTR [rax],al
   140014a20:	rex.WX outs dx,BYTE PTR ds:[rsi]
   140014a22:	add    DWORD PTR [rax],eax
   140014a24:	add    BYTE PTR [rax],al
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	and    al,0x6e
   140014a2a:	add    DWORD PTR [rax],eax
   140014a2c:	add    BYTE PTR [rax],al
   140014a2e:	add    BYTE PTR [rax],al
   140014a30:	imul   BYTE PTR [rbp+0x1]
   140014a33:	add    BYTE PTR [rax],al
   140014a35:	add    BYTE PTR [rax],al
   140014a37:	add    BYTE PTR [rbp+rbp*2+0x1],ch
   140014a3e:	add    BYTE PTR [rax],al
   140014a40:	pop    rdx
   140014a41:	ins    DWORD PTR es:[rdi],dx
   140014a42:	add    DWORD PTR [rax],eax
   140014a44:	add    BYTE PTR [rax],al
   140014a46:	add    BYTE PTR [rax],al
   140014a48:	and    al,0x6d
   140014a4a:	add    DWORD PTR [rax],eax
   140014a4c:	add    BYTE PTR [rax],al
   140014a4e:	add    BYTE PTR [rax],al
   140014a50:	in     al,dx
   140014a51:	ins    BYTE PTR es:[rdi],dx
   140014a52:	add    DWORD PTR [rax],eax
   140014a54:	add    BYTE PTR [rax],al
   140014a56:	add    BYTE PTR [rax],al
   140014a58:	mov    ah,0x6c
   140014a5a:	add    DWORD PTR [rax],eax
   140014a5c:	add    BYTE PTR [rax],al
   140014a5e:	add    BYTE PTR [rax],al
   140014a60:	outs   dx,BYTE PTR ds:[rsi]
   140014a61:	ins    BYTE PTR es:[rdi],dx
   140014a62:	add    DWORD PTR [rax],eax
   140014a64:	add    BYTE PTR [rax],al
   140014a66:	add    BYTE PTR [rax],al
   140014a68:	xor    al,0x6c
   140014a6a:	add    DWORD PTR [rax],eax
   140014a6c:	add    BYTE PTR [rax],al
   140014a6e:	add    BYTE PTR [rax],al
   140014a70:	clc    
   140014a71:	imul   eax,DWORD PTR [rcx],0x0
   140014a74:	add    BYTE PTR [rax],al
   140014a76:	add    BYTE PTR [rax],al
   140014a78:	mov    esi,0x16b
   140014a7d:	add    BYTE PTR [rax],al
   140014a7f:	add    BYTE PTR [rdx+0x16b],al
   140014a85:	add    BYTE PTR [rax],al
   140014a87:	add    BYTE PTR [rsi+0x6b],al
   140014a8a:	add    DWORD PTR [rax],eax
   140014a8c:	add    BYTE PTR [rax],al
   140014a8e:	add    BYTE PTR [rax],al
   140014a90:	or     ch,BYTE PTR [rbx+0x1]
   140014a93:	add    BYTE PTR [rax],al
   140014a95:	add    BYTE PTR [rax],al
   140014a97:	add    al,dl
   140014a99:	push   0x1
   140014a9b:	add    BYTE PTR [rax],al
   140014a9d:	add    BYTE PTR [rax],al
   140014a9f:	add    BYTE PTR [rsi+0x16a],dl
   140014aa5:	add    BYTE PTR [rax],al
   140014aa7:	add    BYTE PTR [rax+0x6a],bl
   140014aaa:	add    DWORD PTR [rax],eax
   140014aac:	add    BYTE PTR [rax],al
   140014aae:	add    BYTE PTR [rax],al
   140014ab0:	sbb    BYTE PTR [rdx+0x1],ch
   140014ab3:	add    BYTE PTR [rax],al
   140014ab5:	add    BYTE PTR [rax],al
   140014ab7:	add    dl,bl
   140014ab9:	imul   eax,DWORD PTR [rcx],0x0
   140014abf:	add    BYTE PTR [rcx+rbp*2+0x1],ah
   140014ac6:	add    BYTE PTR [rax],al
   140014ac8:	je     0x140014b33
   140014aca:	add    DWORD PTR [rax],eax
   140014acc:	add    BYTE PTR [rax],al
   140014ace:	add    BYTE PTR [rax],al
   140014ad0:	cmp    ch,BYTE PTR [rcx+0x1]
   140014ad3:	add    BYTE PTR [rax],al
   140014ad5:	add    BYTE PTR [rax],al
   140014ad7:	add    BYTE PTR [rdx],cl
   140014ad9:	imul   eax,DWORD PTR [rcx],0x0
   140014adf:	add    dh,al
   140014ae1:	push   0x1
   140014ae6:	add    BYTE PTR [rax],al
   140014ae8:	cwde   
   140014ae9:	push   0x1
   140014aee:	add    BYTE PTR [rax],al
   140014af0:	(bad)  
   140014af1:	push   0x1
   140014af6:	add    BYTE PTR [rax],al
   140014af8:	rex push 0x1
   140014afe:	add    BYTE PTR [rax],al
   140014b00:	adc    ch,BYTE PTR [rax+0x1]
   140014b03:	add    BYTE PTR [rax],al
   140014b05:	add    BYTE PTR [rax],al
   140014b07:	add    dl,ch
   140014b09:	add    DWORD PTR [eax],eax
   140014b0c:	add    BYTE PTR [rax],al
   140014b0e:	add    BYTE PTR [rax],al
   140014b10:	shl    BYTE PTR [rdi+0x1],0x0
   140014b14:	add    BYTE PTR [rax],al
   140014b16:	add    BYTE PTR [rax],al
   140014b18:	xchg   edx,eax
   140014b19:	add    DWORD PTR [eax],eax
   140014b1c:	add    BYTE PTR [rax],al
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	rex.W
   140014b21:	add    DWORD PTR [eax],eax
   140014b24:	add    BYTE PTR [rax],al
   140014b26:	add    BYTE PTR [rax],al
   140014b28:	sbb    al,0x67
   140014b2a:	add    DWORD PTR [rax],eax
   140014b2c:	add    BYTE PTR [rax],al
   140014b2e:	add    BYTE PTR [rax],al
   140014b30:	lock add WORD PTR [rax],ax
   140014b34:	add    BYTE PTR [rax],al
   140014b36:	add    BYTE PTR [rax],al
   140014b38:	(bad)  
   140014b39:	add    WORD PTR [rax],ax
   140014b3c:	add    BYTE PTR [rax],al
   140014b3e:	add    BYTE PTR [rax],al
   140014b40:	test   al,0x66
   140014b42:	add    DWORD PTR [rax],eax
   140014b44:	add    BYTE PTR [rax],al
   140014b46:	add    BYTE PTR [rax],al
   140014b48:	js     0x140014bb0
   140014b4a:	add    DWORD PTR [rax],eax
   140014b4c:	add    BYTE PTR [rax],al
   140014b4e:	add    BYTE PTR [rax],al
   140014b50:	rex.W
   140014b51:	add    WORD PTR [rax],ax
   140014b54:	add    BYTE PTR [rax],al
   140014b56:	add    BYTE PTR [rax],al
   140014b58:	sbb    BYTE PTR [rsi+0x1],ah
   140014b5b:	add    BYTE PTR [rax],al
   140014b5d:	add    BYTE PTR [rax],al
   140014b5f:	add    al,bl
   140014b61:	add    DWORD PTR gs:[rax],eax
   140014b64:	add    BYTE PTR [rax],al
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	lods   al,BYTE PTR ds:[rsi]
   140014b69:	add    DWORD PTR gs:[rax],eax
   140014b6c:	add    BYTE PTR [rax],al
   140014b6e:	add    BYTE PTR [rax],al
   140014b70:	js     0x140014bd7
   140014b72:	add    DWORD PTR [rax],eax
   140014b74:	add    BYTE PTR [rax],al
   140014b76:	add    BYTE PTR [rax],al
   140014b78:	rex.WRX
   140014b79:	add    DWORD PTR gs:[rax],eax
   140014b7c:	add    BYTE PTR [rax],al
   140014b7e:	add    BYTE PTR [rax],al
   140014b80:	and    ah,BYTE PTR [rbp+0x1]
   140014b83:	add    BYTE PTR [rax],al
   140014b85:	add    BYTE PTR [rax],al
   140014b87:	add    dh,ah
   140014b89:	add    DWORD PTR fs:[rax],eax
   140014b8c:	add    BYTE PTR [rax],al
   140014b8e:	add    BYTE PTR [rax],al
   140014b90:	mov    dh,0x64
   140014b92:	add    DWORD PTR [rax],eax
   140014b94:	add    BYTE PTR [rax],al
   140014b96:	add    BYTE PTR [rax],al
   140014b98:	(bad)  
   140014b99:	add    DWORD PTR fs:[rax],eax
   140014b9c:	add    BYTE PTR [rax],al
   140014b9e:	add    BYTE PTR [rax],al
   140014ba0:	push   rax
   140014ba1:	add    DWORD PTR fs:[rax],eax
   140014ba4:	add    BYTE PTR [rax],al
   140014ba6:	add    BYTE PTR [rax],al
   140014ba8:	(bad)  
   140014ba9:	add    DWORD PTR fs:[rax],eax
   140014bac:	add    BYTE PTR [rax],al
   140014bae:	add    BYTE PTR [rax],al
   140014bb0:	(bad)  
   140014bb1:	movsxd eax,DWORD PTR [rcx]
   140014bb3:	add    BYTE PTR [rax],al
   140014bb5:	add    BYTE PTR [rax],al
   140014bb7:	add    BYTE PTR [rdx+0x163],dh
   140014bbd:	add    BYTE PTR [rax],al
   140014bbf:	add    BYTE PTR [rbx+riz*2+0x1],bh
   140014bc3:	add    BYTE PTR [rax],al
   140014bc5:	add    BYTE PTR [rax],al
   140014bc7:	add    BYTE PTR [rax+0x63],bl
   140014bca:	add    DWORD PTR [rax],eax
   140014bcc:	add    BYTE PTR [rax],al
   140014bce:	add    BYTE PTR [rax],al
   140014bd0:	sub    ah,BYTE PTR [rbx+0x1]
   140014bd3:	add    BYTE PTR [rax],al
   140014bd5:	add    BYTE PTR [rax],al
   140014bd7:	add    BYTE PTR [rbx+riz*2],al
   140014bda:	add    DWORD PTR [rax],eax
   140014bdc:	add    BYTE PTR [rax],al
   140014bde:	add    BYTE PTR [rax],al
   140014be0:	fsub   QWORD PTR [rdx+0x1]
   140014be3:	add    BYTE PTR [rax],al
   140014be5:	add    BYTE PTR [rax],al
   140014be7:	add    BYTE PTR [rax+0x162],ah
   140014bed:	add    BYTE PTR [rax],al
   140014bef:	add    BYTE PTR [rax+0x62],bh
   140014bf2:	add    DWORD PTR [rax],eax
   140014bf4:	add    BYTE PTR [rax],al
   140014bf6:	add    BYTE PTR [rax],al
   140014bf8:	rex.W (bad) 
   140014bfb:	add    BYTE PTR [rax],al
   140014bfd:	add    BYTE PTR [rax],al
   140014bff:	add    BYTE PTR [rax],bl
   140014c01:	(bad)  
   140014c03:	add    BYTE PTR [rax],al
   140014c05:	add    BYTE PTR [rax],al
   140014c07:	add    ah,bl
   140014c09:	(bad)  
   140014c0a:	add    DWORD PTR [rax],eax
   140014c0c:	add    BYTE PTR [rax],al
   140014c0e:	add    BYTE PTR [rax],al
   140014c10:	scas   al,BYTE PTR es:[rdi]
   140014c11:	(bad)  
   140014c12:	add    DWORD PTR [rax],eax
   140014c14:	add    BYTE PTR [rax],al
   140014c16:	add    BYTE PTR [rax],al
   140014c18:	jo     0x140014c7b
   140014c1a:	add    DWORD PTR [rax],eax
   140014c1c:	add    BYTE PTR [rax],al
   140014c1e:	add    BYTE PTR [rax],al
   140014c20:	ds (bad) 
   140014c22:	add    DWORD PTR [rax],eax
   140014c24:	add    BYTE PTR [rax],al
   140014c26:	add    BYTE PTR [rax],al
   140014c28:	and    ah,BYTE PTR [rcx+0x1]
   140014c2b:	add    BYTE PTR [rax],al
   140014c2d:	add    BYTE PTR [rax],al
   140014c2f:	add    al,bh
   140014c31:	(bad)  
   140014c32:	add    DWORD PTR [rax],eax
   140014c34:	add    BYTE PTR [rax],al
   140014c36:	add    BYTE PTR [rax],al
   140014c38:	mov    al,0x60
   140014c3a:	add    DWORD PTR [rax],eax
   140014c3c:	add    BYTE PTR [rax],al
   140014c3e:	add    BYTE PTR [rax],al
   140014c40:	je     0x140014ca2
   140014c42:	add    DWORD PTR [rax],eax
   140014c44:	add    BYTE PTR [rax],al
   140014c46:	add    BYTE PTR [rax],al
   140014c48:	rex.W (bad) 
   140014c4a:	add    DWORD PTR [rax],eax
   140014c4c:	add    BYTE PTR [rax],al
   140014c4e:	add    BYTE PTR [rax],al
   140014c50:	(bad)  
   140014c51:	(bad)  
   140014c52:	add    DWORD PTR [rax],eax
   140014c54:	add    BYTE PTR [rax],al
   140014c56:	add    BYTE PTR [rax],al
   140014c58:	loopne 0x140014cb9
   140014c5a:	add    DWORD PTR [rax],eax
   140014c5c:	add    BYTE PTR [rax],al
   140014c5e:	add    BYTE PTR [rax],al
   140014c60:	mov    dl,0x5f
   140014c62:	add    DWORD PTR [rax],eax
   140014c64:	add    BYTE PTR [rax],al
   140014c66:	add    BYTE PTR [rax],al
   140014c68:	test   BYTE PTR [rdi+0x1],bl
   140014c6b:	add    BYTE PTR [rax],al
   140014c6d:	add    BYTE PTR [rax],al
   140014c6f:	add    BYTE PTR [rdi+rbx*2+0x1],cl
   140014c73:	add    BYTE PTR [rax],al
   140014c75:	add    BYTE PTR [rax],al
   140014c77:	add    BYTE PTR [rsi],dl
   140014c79:	pop    rdi
   140014c7a:	add    DWORD PTR [rax],eax
   140014c7c:	add    BYTE PTR [rax],al
   140014c7e:	add    BYTE PTR [rax],al
   140014c80:	ficomp WORD PTR [rsi+0x1]
   140014c83:	add    BYTE PTR [rax],al
   140014c85:	add    BYTE PTR [rax],al
   140014c87:	add    BYTE PTR [rsi+rbx*2+0x1],ch
   140014c8e:	add    BYTE PTR [rax],al
   140014c90:	jp     0x140014cf0
   140014c92:	add    DWORD PTR [rax],eax
   140014c94:	add    BYTE PTR [rax],al
   140014c96:	add    BYTE PTR [rax],al
   140014c98:	ds pop rsi
   140014c9a:	add    DWORD PTR [rax],eax
   140014c9c:	add    BYTE PTR [rax],al
   140014c9e:	add    BYTE PTR [rax],al
   140014ca0:	(bad)  
   140014ca1:	pop    rsi
   140014ca2:	add    DWORD PTR [rax],eax
   140014ca4:	add    BYTE PTR [rax],al
   140014ca6:	add    BYTE PTR [rax],al
   140014ca8:	fcomp  QWORD PTR [rbp+0x1]
   140014cab:	add    BYTE PTR [rax],al
   140014cad:	add    BYTE PTR [rax],al
   140014caf:	add    BYTE PTR [rsi+0x15d],ch
   140014cb5:	add    BYTE PTR [rax],al
   140014cb7:	add    BYTE PTR [rsi+0x5d],bh
   140014cba:	add    DWORD PTR [rax],eax
   140014cbc:	add    BYTE PTR [rax],al
   140014cbe:	add    BYTE PTR [rax],al
   140014cc0:	push   rdx
   140014cc1:	pop    rbp
   140014cc2:	add    DWORD PTR [rax],eax
   140014cc4:	add    BYTE PTR [rax],al
   140014cc6:	add    BYTE PTR [rax],al
   140014cc8:	es pop rbp
   140014cca:	add    DWORD PTR [rax],eax
   140014ccc:	add    BYTE PTR [rax],al
   140014cce:	add    BYTE PTR [rax],al
   140014cd0:	hlt    
   140014cd1:	pop    rsp
   140014cd2:	add    DWORD PTR [rax],eax
   140014cd4:	add    BYTE PTR [rax],al
   140014cd6:	add    BYTE PTR [rax],al
   140014cd8:	ret    0x15c
   140014cdb:	add    BYTE PTR [rax],al
   140014cdd:	add    BYTE PTR [rax],al
   140014cdf:	add    BYTE PTR [rsi+0x15c],cl
   140014ce5:	add    BYTE PTR [rax],al
   140014ce7:	add    BYTE PTR [rsi+0x5c],bl
   140014cea:	add    DWORD PTR [rax],eax
   140014cec:	add    BYTE PTR [rax],al
   140014cee:	add    BYTE PTR [rax],al
   140014cf0:	cs pop rsp
   140014cf2:	add    DWORD PTR [rax],eax
   140014cf4:	add    BYTE PTR [rax],al
   140014cf6:	add    BYTE PTR [rax],al
   140014cf8:	cli    
   140014cf9:	pop    rbx
   140014cfa:	add    DWORD PTR [rax],eax
   140014cfc:	add    BYTE PTR [rax],al
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	mov    esi,0x15b
   140014d05:	add    BYTE PTR [rax],al
   140014d07:	add    BYTE PTR [rax+0x15b],cl
   140014d0d:	add    BYTE PTR [rax],al
   140014d0f:	add    BYTE PTR [rbx+rbx*2+0x1],dl
   140014d13:	add    BYTE PTR [rax],al
   140014d15:	add    BYTE PTR [rax],al
   140014d17:	add    BYTE PTR [rbx+rbx*2],ch
   140014d1a:	add    DWORD PTR [rax],eax
   140014d1c:	add    BYTE PTR [rax],al
   140014d1e:	add    BYTE PTR [rax],al
   140014d20:	or     BYTE PTR [rbx+0x1],bl
   140014d23:	add    BYTE PTR [rax],al
   140014d25:	add    BYTE PTR [rax],al
   140014d27:	add    ah,bl
   140014d29:	pop    rdx
   140014d2a:	add    DWORD PTR [rax],eax
   140014d2c:	add    BYTE PTR [rax],al
   140014d2e:	add    BYTE PTR [rax],al
   140014d30:	mov    dh,0x5a
   140014d32:	add    DWORD PTR [rax],eax
   140014d34:	add    BYTE PTR [rax],al
   140014d36:	add    BYTE PTR [rax],al
   140014d38:	xchg   esp,eax
   140014d39:	pop    rdx
   140014d3a:	add    DWORD PTR [rax],eax
   140014d3c:	add    BYTE PTR [rax],al
   140014d3e:	add    BYTE PTR [rax],al
   140014d40:	outs   dx,BYTE PTR ds:[rsi]
   140014d41:	pop    rdx
   140014d42:	add    DWORD PTR [rax],eax
   140014d44:	add    BYTE PTR [rax],al
   140014d46:	add    BYTE PTR [rax],al
   140014d48:	xor    bl,BYTE PTR [rdx+0x1]
   140014d4b:	add    BYTE PTR [rax],al
   140014d4d:	add    BYTE PTR [rax],al
   140014d4f:	add    BYTE PTR [rdx+rbx*2],cl
   140014d52:	add    DWORD PTR [rax],eax
   140014d54:	add    BYTE PTR [rax],al
   140014d56:	add    BYTE PTR [rax],al
   140014d58:	ficomp WORD PTR [rcx+0x1]
   140014d5b:	add    BYTE PTR [rax],al
   140014d5d:	add    BYTE PTR [rax],al
   140014d5f:	add    BYTE PTR [rcx+rbx*2+0x1],dl
   140014d66:	add    BYTE PTR [rax],al
   140014d68:	(bad)  
   140014d69:	pop    rcx
   140014d6a:	add    DWORD PTR [rax],eax
   140014d6c:	add    BYTE PTR [rax],al
   140014d6e:	add    BYTE PTR [rax],al
   140014d70:	rex pop rcx
   140014d72:	add    DWORD PTR [rax],eax
   140014d74:	add    BYTE PTR [rax],al
   140014d76:	add    BYTE PTR [rax],al
   140014d78:	adc    al,0x59
   140014d7a:	add    DWORD PTR [rax],eax
   140014d7c:	add    BYTE PTR [rax],al
   140014d7e:	add    BYTE PTR [rax],al
   140014d80:	lock pop rax
   140014d82:	add    DWORD PTR [rax],eax
   140014d84:	add    BYTE PTR [rax],al
   140014d86:	add    BYTE PTR [rax],al
   140014d88:	rcr    BYTE PTR [rax+0x1],0x0
   140014d8c:	add    BYTE PTR [rax],al
   140014d8e:	add    BYTE PTR [rax],al
   140014d90:	cwde   
   140014d91:	pop    rax
   140014d92:	add    DWORD PTR [rax],eax
   140014d94:	add    BYTE PTR [rax],al
   140014d96:	add    BYTE PTR [rax],al
   140014d98:	ins    BYTE PTR es:[rdi],dx
   140014d99:	pop    rax
   140014d9a:	add    DWORD PTR [rax],eax
   140014d9c:	add    BYTE PTR [rax],al
   140014d9e:	add    BYTE PTR [rax],al
   140014da0:	rex.WRX pop rax
   140014da2:	add    DWORD PTR [rax],eax
   140014da4:	add    BYTE PTR [rax],al
   140014da6:	add    BYTE PTR [rax],al
   140014da8:	sub    BYTE PTR [rax+0x1],bl
   140014dab:	add    BYTE PTR [rax],al
   140014dad:	add    BYTE PTR [rax],al
   140014daf:	add    al,bh
   140014db1:	push   rdi
   140014db2:	add    DWORD PTR [rax],eax
   140014db4:	add    BYTE PTR [rax],al
   140014db6:	add    BYTE PTR [rax],al
   140014db8:	lods   al,BYTE PTR ds:[rsi]
   140014db9:	push   rdi
   140014dba:	add    DWORD PTR [rax],eax
   140014dbc:	add    BYTE PTR [rax],al
   140014dbe:	add    BYTE PTR [rax],al
   140014dc0:	jle    0x140014e19
   140014dc2:	add    DWORD PTR [rax],eax
   140014dc4:	add    BYTE PTR [rax],al
   140014dc6:	add    BYTE PTR [rax],al
   140014dc8:	push   rax
   140014dc9:	push   rdi
   140014dca:	add    DWORD PTR [rax],eax
   140014dcc:	add    BYTE PTR [rax],al
   140014dce:	add    BYTE PTR [rax],al
   140014dd0:	es push rdi
   140014dd2:	add    DWORD PTR [rax],eax
   140014dd4:	add    BYTE PTR [rax],al
   140014dd6:	add    BYTE PTR [rax],al
   140014dd8:	or     BYTE PTR [rdi+0x1],dl
   140014ddb:	add    BYTE PTR [rax],al
   140014ddd:	add    BYTE PTR [rax],al
   140014ddf:	add    dh,bl
   140014de1:	push   rsi
   140014de2:	add    DWORD PTR [rax],eax
   140014de4:	add    BYTE PTR [rax],al
   140014de6:	add    BYTE PTR [rax],al
   140014de8:	scas   al,BYTE PTR es:[rdi]
   140014de9:	push   rsi
   140014dea:	add    DWORD PTR [rax],eax
   140014dec:	add    BYTE PTR [rax],al
   140014dee:	add    BYTE PTR [rax],al
   140014df0:	jle    0x140014e48
   140014df2:	add    DWORD PTR [rax],eax
   140014df4:	add    BYTE PTR [rax],al
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	rex.WR push rsi
   140014dfa:	add    DWORD PTR [rax],eax
   140014dfc:	add    BYTE PTR [rax],al
   140014dfe:	add    BYTE PTR [rax],al
   140014e00:	sbb    al,0x56
   140014e02:	add    DWORD PTR [rax],eax
   140014e04:	add    BYTE PTR [rax],al
   140014e06:	add    BYTE PTR [rax],al
   140014e08:	fcom   QWORD PTR [rbp+0x1]
   140014e0b:	add    BYTE PTR [rax],al
   140014e0d:	add    BYTE PTR [rax],al
   140014e0f:	add    BYTE PTR [rax+0x155],dh
   140014e15:	add    BYTE PTR [rax],al
   140014e17:	add    BYTE PTR [rbp+rdx*2+0x1],bh
   140014e1b:	add    BYTE PTR [rax],al
   140014e1d:	add    BYTE PTR [rax],al
   140014e1f:	add    BYTE PTR [rsi+0x55],dl
   140014e22:	add    DWORD PTR [rax],eax
   140014e24:	add    BYTE PTR [rax],al
   140014e26:	add    BYTE PTR [rax],al
   140014e28:	(bad)  
   140014e29:	push   rbp
   140014e2a:	add    DWORD PTR [rax],eax
   140014e2c:	add    BYTE PTR [rax],al
   140014e2e:	add    BYTE PTR [rax],al
   140014e30:	lock push rsp
   140014e32:	add    DWORD PTR [rax],eax
   140014e34:	add    BYTE PTR [rax],al
   140014e36:	add    BYTE PTR [rax],al
   140014e38:	(bad)  
   140014e39:	push   rsp
   140014e3a:	add    DWORD PTR [rax],eax
   140014e3c:	add    BYTE PTR [rax],al
   140014e3e:	add    BYTE PTR [rax],al
   140014e40:	xchg   esi,eax
   140014e41:	push   rsp
   140014e42:	add    DWORD PTR [rax],eax
   140014e44:	add    BYTE PTR [rax],al
   140014e46:	add    BYTE PTR [rax],al
   140014e48:	push   sp
   140014e4a:	add    DWORD PTR [rax],eax
   140014e4c:	add    BYTE PTR [rax],al
   140014e4e:	add    BYTE PTR [rax],al
   140014e50:	ds push rsp
   140014e52:	add    DWORD PTR [rax],eax
   140014e54:	add    BYTE PTR [rax],al
   140014e56:	add    BYTE PTR [rax],al
   140014e58:	(bad)  
   140014e59:	push   rbx
   140014e5a:	add    DWORD PTR [rax],eax
   140014e5c:	add    BYTE PTR [rax],al
   140014e5e:	add    BYTE PTR [rax],al
   140014e60:	(bad)  
   140014e61:	push   rbx
   140014e62:	add    DWORD PTR [rax],eax
   140014e64:	add    BYTE PTR [rax],al
   140014e66:	add    BYTE PTR [rax],al
   140014e68:	(bad)  
   140014e69:	push   rbx
   140014e6a:	add    DWORD PTR [rax],eax
   140014e6c:	add    BYTE PTR [rax],al
   140014e6e:	add    BYTE PTR [rax],al
   140014e70:	rex.W push rbx
   140014e72:	add    DWORD PTR [rax],eax
   140014e74:	add    BYTE PTR [rax],al
   140014e76:	add    BYTE PTR [rax],al
   140014e78:	and    BYTE PTR [rbx+0x1],dl
   140014e7b:	add    BYTE PTR [rax],al
   140014e7d:	add    BYTE PTR [rax],al
   140014e7f:	add    ah,bh
   140014e81:	push   rdx
   140014e82:	add    DWORD PTR [rax],eax
   140014e84:	add    BYTE PTR [rax],al
   140014e86:	add    BYTE PTR [rax],al
   140014e88:	rcl    BYTE PTR [rdx+0x1],1
   140014e8b:	add    BYTE PTR [rax],al
   140014e8d:	add    BYTE PTR [rax],al
   140014e8f:	add    BYTE PTR [rax+0x152],al
   140014e95:	add    BYTE PTR [rax],al
   140014e97:	add    BYTE PTR [rsi+0x52],dl
   140014e9a:	add    DWORD PTR [rax],eax
   140014e9c:	add    BYTE PTR [rax],al
   140014e9e:	add    BYTE PTR [rax],al
   140014ea0:	cs push rdx
   140014ea2:	add    DWORD PTR [rax],eax
   140014ea4:	add    BYTE PTR [rax],al
   140014ea6:	add    BYTE PTR [rax],al
   140014ea8:	add    al,0x52
   140014eaa:	add    DWORD PTR [rax],eax
   140014eac:	add    BYTE PTR [rax],al
   140014eae:	add    BYTE PTR [rax],al
   140014eb0:	fcom   QWORD PTR [rcx+0x1]
   140014eb3:	add    BYTE PTR [rax],al
   140014eb5:	add    BYTE PTR [rax],al
   140014eb7:	add    BYTE PTR [rcx+rdx*2+0x1],dh
   140014ebe:	add    BYTE PTR [rax],al
   140014ec0:	mov    ss,WORD PTR [rcx+0x1]
   140014ec3:	add    BYTE PTR [rax],al
   140014ec5:	add    BYTE PTR [rax],al
   140014ec7:	add    BYTE PTR [rdx+0x51],bl
   140014eca:	add    DWORD PTR [rax],eax
   140014ecc:	add    BYTE PTR [rax],al
   140014ece:	add    BYTE PTR [rax],al
   140014ed0:	add    al,0x51
   140014ed2:	add    DWORD PTR [rax],eax
   140014ed4:	add    BYTE PTR [rax],al
   140014ed6:	add    BYTE PTR [rax],al
   140014ed8:	(bad)  
   140014ed9:	push   rax
   140014eda:	add    DWORD PTR [rax],eax
   140014edc:	add    BYTE PTR [rax],al
   140014ede:	add    BYTE PTR [rax],al
   140014ee0:	lods   al,BYTE PTR ds:[rsi]
   140014ee1:	push   rax
   140014ee2:	add    DWORD PTR [rax],eax
   140014ee4:	add    BYTE PTR [rax],al
   140014ee6:	add    BYTE PTR [rax],al
   140014ee8:	jp     0x140014f3a
   140014eea:	add    DWORD PTR [rax],eax
   140014eec:	add    BYTE PTR [rax],al
   140014eee:	add    BYTE PTR [rax],al
   140014ef0:	push   rdx
   140014ef1:	push   rax
   140014ef2:	add    DWORD PTR [rax],eax
   140014ef4:	add    BYTE PTR [rax],al
   140014ef6:	add    BYTE PTR [rax],al
   140014ef8:	cmp    BYTE PTR [rax+0x1],dl
   140014efb:	add    BYTE PTR [rax],al
   140014efd:	add    BYTE PTR [rax],al
   140014eff:	add    dh,ah
   140014f01:	rex.WRXB add QWORD PTR [r8],r8
   140014f04:	add    BYTE PTR [rax],al
   140014f06:	add    BYTE PTR [rax],al
   140014f08:	add    BYTE PTR [rax+0x1],dl
   140014f0b:	add    BYTE PTR [rax],al
   140014f0d:	add    BYTE PTR [rax],al
   140014f0f:	add    BYTE PTR [rax+rdx*2],bl
   140014f12:	add    DWORD PTR [rax],eax
   140014f14:	add    BYTE PTR [rax],al
   140014f16:	add    BYTE PTR [rax],al
   140014f18:	push   rsi
   140014f19:	pop    QWORD PTR [rcx]
	...
   140014f27:	add    BYTE PTR [rdx-0x3b],ch
   140014f2a:	add    DWORD PTR [rax],eax
	...
   140014f38:	and    eax,0x313f3f01
   140014f3d:	push   rcx
   140014f3e:	push   rcx
   140014f3f:	jne    0x140014faa
   140014f41:	movsxd ebp,DWORD PTR [rbx+0x56]
   140014f44:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140014f4b:	rex.B
   140014f4c:	rex.B
   140014f4d:	rex pop rax
   140014f4f:	pop    rdx
   140014f50:	add    BYTE PTR [rax],al
   140014f52:	pop    rsp
   140014f53:	or     eax,0x7465733f
   140014f58:	push   rbx
   140014f59:	outs   dx,DWORD PTR ds:[rsi]
   140014f5a:	jne    0x140014fce
   140014f5c:	movsxd esp,DWORD PTR [rbp+0x40]
   140014f5f:	push   rcx
   140014f60:	push   rcx
   140014f61:	jne    0x140014fcc
   140014f63:	movsxd ebp,DWORD PTR [rbx+0x56]
   140014f66:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140014f6d:	rex.B
   140014f6e:	pop    r8
   140014f70:	rex.B
   140014f71:	rex.RB
   140014f72:	rex.X push rsi
   140014f74:	push   rcx
   140014f75:	push   rbp
   140014f76:	jb     0x140014fe4
   140014f78:	rex
   140014f79:	rex
   140014f7a:	rex pop rdx
   140014f7c:	add    BYTE PTR [rax],al
   140014f7e:	or     r15,QWORD PTR [r15]
   140014f81:	jb     0x140014ff2
   140014f83:	outs   dx,DWORD PTR ds:[rsi]
   140014f84:	je     0x140014fc9
   140014f86:	outs   dx,DWORD PTR ds:[rsi]
   140014f87:	outs   dx,BYTE PTR ds:[rsi]
   140014f88:	je     0x140014fef
   140014f8a:	js     0x140015000
   140014f8c:	rex push rcx
   140014f8e:	push   rcx
   140014f8f:	jne    0x140014ffa
   140014f91:	movsxd ebp,DWORD PTR [rbx+0x56]
   140014f94:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140014f9b:	rex.X
   140014f9c:	push   r8
   140014f9e:	rex.RB
   140014f9f:	push   r14
   140014fa1:	push   rcx
   140014fa2:	push   rcx
   140014fa3:	ins    DWORD PTR es:[rdi],dx
   140014fa4:	ins    BYTE PTR es:[rdi],dx
   140014fa5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014fa7:	outs   dx,BYTE PTR ds:[rsi]
   140014fa8:	je     0x14001500f
   140014faa:	js     0x140015020
   140014fac:	rex
   140014fad:	rex pop rax
   140014faf:	pop    rdx
   140014fb0:	add    BYTE PTR [rax],al
   140014fb2:	jae    0x140014fb4
   140014fb4:	(bad)  
   140014fb5:	(bad)  
   140014fb6:	xor    BYTE PTR [rcx+0x51],dl
   140014fb9:	jne    0x140015024
   140014fbb:	movsxd ebp,DWORD PTR [rbx+0x56]
   140014fbe:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140014fc5:	rex.B
   140014fc6:	rex.B
   140014fc7:	rex push rax
   140014fc9:	rex.RB
   140014fca:	push   r14
   140014fcc:	push   rcx
   140014fcd:	push   rdi
   140014fce:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
   140014fd5:	rex pop rdx
   140014fd7:	add    BYTE PTR [rcx+0x74],dl
   140014fda:	xor    eax,0x63697551
   140014fdf:	imul   ebp,DWORD PTR [rsi],0x64
   140014fe2:	ins    BYTE PTR es:[rdi],dx
   140014fe3:	ins    BYTE PTR es:[rdi],dx
   140014fe4:	add    BYTE PTR [rax],al
   140014fe6:	(bad)  
   140014fe7:	add    bh,BYTE PTR [rdi]
   140014fe9:	(bad)  
   140014fea:	xor    DWORD PTR [rcx+0x4d],edx
   140014fed:	(bad)  
   140014fee:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   140014ff5:	ja     0x140015037
   140014ff7:	rex push rbp
   140014ff9:	rex.RB
   140014ffa:	rex.B
   140014ffb:	rex.B
   140014ffc:	rex pop rax
   140014ffe:	pop    rdx
   140014fff:	add    BYTE PTR [rsi+0x313f3f01],ch
   140015005:	push   rcx
   140015006:	rex.B jo 0x140015079
   140015009:	ins    BYTE PTR es:[rdi],dx
   14001500a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140015011:	rex
   140015012:	rex push rbp
   140015014:	rex.RB
   140015015:	rex.B
   140015016:	rex.B
   140015017:	rex pop rax
   140015019:	pop    rdx
   14001501a:	add    BYTE PTR [rax],al
   14001501c:	adc    al,0xb
   14001501e:	(bad)  
   14001501f:	gs js  0x140015087
   140015022:	movsxd eax,DWORD PTR [rax+0x51]
   140015025:	rex.B jo 0x140015098
   140015028:	ins    BYTE PTR es:[rdi],dx
   140015029:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140015030:	rex
   140015031:	rex push rbx
   140015033:	rex.B
   140015034:	rex.W pop rax
   140015036:	pop    rdx
   140015037:	add    BYTE PTR [rsi+0x1c],al
   14001503a:	(bad)  
   14001503b:	jae    0x1400150a5
   14001503d:	outs   dx,DWORD PTR ds:[rsi]
   14001503e:	ja     0x140015080
   140015040:	push   rcx
   140015041:	push   rdi
   140015042:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001504a:	rex.RB
   14001504b:	rex.B
   14001504c:	pop    r8
   14001504e:	pop    rax
   14001504f:	pop    rdx
   140015050:	add    BYTE PTR [rax],al
   140015052:	(bad)  
   140015053:	add    BYTE PTR [rdi],bh
   140015055:	(bad)  
   140015056:	xor    BYTE PTR [rcx+0x41],dl
   140015059:	jo     0x1400150cb
   14001505b:	ins    BYTE PTR es:[rdi],dx
   14001505c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140015063:	rex
   140015064:	rex push rcx
   140015066:	rex.RB
   140015067:	rex.B
   140015068:	rex.B
   140015069:	rex
   14001506a:	rex.B
   14001506b:	rex.RB
   14001506c:	rex.B
   14001506d:	rex.W push rax
   14001506f:	rex.RB
   140015070:	push   r8
   140015072:	rex.RB
   140015073:	rex.B
   140015074:	rex.R
   140015075:	rex.W
   140015076:	rex pop rdx
   140015078:	add    BYTE PTR [rax],al
   14001507a:	push   rcx
   14001507b:	sbb    edi,DWORD PTR [rdi]
   14001507d:	jae    0x1400150e4
   14001507f:	je     0x1400150d5
   140015081:	gs js  0x1400150f8
   140015084:	rex push rcx
   140015086:	(bad)
   14001508c:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140015090:	je     0x140015106
   140015092:	outs   dx,DWORD PTR ds:[rsi]
   140015093:	outs   dx,BYTE PTR ds:[rsi]
   140015094:	rex
   140015095:	rex push rcx
   140015097:	rex.RB
   140015098:	rex.B
   140015099:	pop    r8
   14001509b:	rex.B
   14001509c:	rex.RB
   14001509d:	rex.X push rsi
   14001509f:	push   rcx
   1400150a0:	push   rbx
   1400150a1:	je     0x140015115
   1400150a3:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400150aa:	add    BYTE PTR [rax],al
   1400150ac:	push   rsp
   1400150ad:	sbb    edi,DWORD PTR [rdi]
   1400150af:	jae    0x140015116
   1400150b1:	je     0x140015107
   1400150b3:	gs js  0x14001512a
   1400150b6:	rex push rcx
   1400150b8:	rex.WR (bad) 
   1400150ba:	(bad)  
   1400150bb:	gs ins BYTE PTR es:[rdi],dx
   1400150bd:	rex
   1400150be:	rex push rcx
   1400150c0:	rex.RB
   1400150c1:	rex.B
   1400150c2:	pop    r8
   1400150c4:	rex.B
   1400150c5:	rex.RB
   1400150c6:	rex.X push rsi
   1400150c8:	push   rcx
   1400150c9:	push   rbx
   1400150ca:	je     0x14001513e
   1400150cc:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400150d3:	add    BYTE PTR [rsi],cl
   1400150d5:	sbb    al,0x3f
   1400150d7:	jae    0x14001513e
   1400150d9:	je     0x140015132
   1400150db:	imul   ebp,DWORD PTR [rsi+0x64],0x6954776f
   1400150e2:	je     0x140015150
   1400150e4:	gs rex push rcx
   1400150e7:	push   rdi
   1400150e8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400150f0:	rex.RB
   1400150f1:	rex.B
   1400150f2:	pop    r8
   1400150f4:	rex.B
   1400150f5:	rex.RB
   1400150f6:	rex.X push rsi
   1400150f8:	push   rcx
   1400150f9:	push   rbx
   1400150fa:	je     0x14001516e
   1400150fc:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140015103:	add    BYTE PTR [rip+0x64613f05],dh        # 0x1a462900e
   140015109:	fs rex.WB je 0x140015172
   14001510d:	ins    DWORD PTR es:[rdi],dx
   14001510e:	rex push rcx
   140015110:	rex.RXB jb 0x14001517c
   140015113:	fs rex.WR (bad) 
   140015116:	jns    0x140015187
   140015118:	jne    0x14001518e
   14001511a:	rex
   14001511b:	rex push rcx
   14001511d:	rex.RB
   14001511e:	rex.B
   14001511f:	pop    r8
   140015121:	push   rax
   140015122:	rex.RB
   140015123:	push   r14
   140015125:	push   rcx
   140015126:	rex.WR (bad) 
   140015128:	jns    0x140015199
   14001512a:	jne    0x1400151a0
   14001512c:	rex.WB je 0x140015194
   14001512f:	ins    DWORD PTR es:[rdi],dx
   140015130:	rex
   140015131:	rex
   140015132:	rex.W
   140015133:	rex.W
   140015134:	rex.W
   140015135:	rex.W push rsi
   140015137:	(bad)  
   140015138:	and    al,0x51
   14001513a:	rex.RX ins BYTE PTR es:[rdi],dx
   14001513c:	(bad)  
   14001513d:	addr32 jae 0x140015180
   140015140:	push   rdi
   140015141:	xor    al,0x41
   140015143:	ins    BYTE PTR es:[rdi],dx
   140015144:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   14001514b:	rex.RX ins BYTE PTR es:[rdi],dx
   14001514d:	(bad)  
   14001514e:	addr32 rex push rcx
   140015151:	je     0x140015193
   140015153:	rex
   140015154:	rex
   140015155:	rex
   140015156:	rex pop rdx
   140015158:	add    BYTE PTR [rax],al
   14001515a:	add    eax,DWORD PTR [rcx]
   14001515c:	(bad)  
   14001515d:	(bad)  
   14001515e:	xor    BYTE PTR [rcx+0x53],dl
   140015161:	jo     0x1400151c4
   140015163:	movsxd esp,DWORD PTR [rbp+0x72]
   140015166:	rex.WB je 0x1400151ce
   140015169:	ins    DWORD PTR es:[rdi],dx
   14001516a:	rex
   14001516b:	rex push rcx
   14001516d:	rex.RB
   14001516e:	rex.B
   14001516f:	rex.B
   140015170:	rex
   140015171:	rex.W
   140015172:	rex.W push rdi
   140015174:	xor    al,0x50
   140015176:	outs   dx,DWORD PTR ds:[rsi]
   140015177:	ins    BYTE PTR es:[rdi],dx
   140015178:	imul   esp,DWORD PTR [rbx+0x79],0x69535140
   14001517f:	jp     0x1400151e6
   140015181:	push   rax
   140015182:	outs   dx,DWORD PTR ds:[rsi]
   140015183:	ins    BYTE PTR es:[rdi],dx
   140015184:	imul   esp,DWORD PTR [rbx+0x79],0x40304040
   14001518b:	pop    rdx
   14001518c:	add    BYTE PTR [rax],al
   14001518e:	sbb    eax,0x303f3f00
   140015193:	push   rcx
   140015194:	rex.XB push 0x426b6365
   14001519a:	outs   dx,DWORD PTR ds:[rsi]
   14001519b:	js     0x1400151dd
   14001519d:	rex push rcx
   14001519f:	rex.RB
   1400151a0:	rex.B
   1400151a1:	rex.B
   1400151a2:	rex push rax
   1400151a4:	rex.RB
   1400151a5:	push   r14
   1400151a7:	push   rcx
   1400151a8:	push   rdi
   1400151a9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400151b1:	pop    rdx
   1400151b2:	add    BYTE PTR [rax],al
   1400151b4:	pop    rdx
   1400151b5:	sbb    DWORD PTR [rdi],edi
   1400151b7:	jae    0x14001521e
   1400151b9:	je     0x140015208
   1400151bb:	(bad)  
   1400151bc:	js     0x140015227
   1400151be:	ins    DWORD PTR es:[rdi],dx
   1400151bf:	jne    0x14001522e
   1400151c1:	rex push rcx
   1400151c3:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400151c5:	jne    0x140015229
   1400151c7:	ins    BYTE PTR es:[rdi],dx
   1400151c8:	gs push rbx
   1400151ca:	jo     0x140015235
   1400151cc:	outs   dx,BYTE PTR ds:[rsi]
   1400151cd:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400151cf:	js     0x140015211
   1400151d1:	rex push rcx
   1400151d3:	rex.RB
   1400151d4:	rex.B
   1400151d5:	pop    r8
   1400151d7:	rex.WRX
   1400151d8:	rex pop rdx
   1400151da:	add    BYTE PTR [rax],al
   1400151dc:	js     0x1400151f7
   1400151de:	(bad)  
   1400151df:	jae    0x140015246
   1400151e1:	je     0x140015230
   1400151e3:	imul   ebp,DWORD PTR [rsi+0x69],0x406d756d
   1400151ea:	push   rcx
   1400151eb:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400151ed:	jne    0x140015251
   1400151ef:	ins    BYTE PTR es:[rdi],dx
   1400151f0:	gs push rbx
   1400151f2:	jo     0x14001525d
   1400151f4:	outs   dx,BYTE PTR ds:[rsi]
   1400151f5:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400151f7:	js     0x140015239
   1400151f9:	rex push rcx
   1400151fb:	rex.RB
   1400151fc:	rex.B
   1400151fd:	pop    r8
   1400151ff:	rex.WRX
   140015200:	rex pop rdx
   140015202:	add    BYTE PTR [rax],al
   140015204:	iret   
   140015205:	sbb    bh,BYTE PTR [rdi]
   140015207:	jae    0x14001526e
   140015209:	je     0x14001525e
   14001520b:	imul   ebp,DWORD PTR [rsi+0x67],0x7453656c
   140015212:	gs jo  0x140015255
   140015215:	push   rcx
   140015216:	rex.R outs dx,DWORD PTR ds:[rsi]
   140015218:	jne    0x14001527c
   14001521a:	ins    BYTE PTR es:[rdi],dx
   14001521b:	gs push rbx
   14001521d:	jo     0x140015288
   14001521f:	outs   dx,BYTE PTR ds:[rsi]
   140015220:	rex.X outs dx,DWORD PTR ds:[rsi]
   140015222:	js     0x140015264
   140015224:	rex push rcx
   140015226:	rex.RB
   140015227:	rex.B
   140015228:	pop    r8
   14001522a:	rex.WRX
   14001522b:	rex pop rdx
   14001522d:	add    al,dl
   14001522f:	(bad)  
   140015230:	(bad)  
   140015231:	jae    0x140015298
   140015233:	je     0x140015279
   140015235:	movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140015239:	(bad)  
   14001523a:	ins    BYTE PTR es:[rdi],dx
   14001523b:	jae    0x14001527d
   14001523d:	push   rcx
   14001523e:	rex.R outs dx,DWORD PTR ds:[rsi]
   140015240:	jne    0x1400152a4
   140015242:	ins    BYTE PTR es:[rdi],dx
   140015243:	gs push rbx
   140015245:	jo     0x1400152b0
   140015247:	outs   dx,BYTE PTR ds:[rsi]
   140015248:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001524a:	js     0x14001528c
   14001524c:	rex push rcx
   14001524e:	rex.RB
   14001524f:	rex.B
   140015250:	pop    r8
   140015252:	rex.W
   140015253:	rex pop rdx
   140015255:	add    BYTE PTR [rsi+0x0],al
   140015258:	(bad)  
   140015259:	(bad)  
   14001525a:	xor    BYTE PTR [rcx+0x44],dl
   14001525d:	outs   dx,DWORD PTR ds:[rsi]
   14001525e:	jne    0x1400152c2
   140015260:	ins    BYTE PTR es:[rdi],dx
   140015261:	gs push rbx
   140015263:	jo     0x1400152ce
   140015265:	outs   dx,BYTE PTR ds:[rsi]
   140015266:	rex.X outs dx,DWORD PTR ds:[rsi]
   140015268:	js     0x1400152aa
   14001526a:	rex push rcx
   14001526c:	rex.RB
   14001526d:	rex.B
   14001526e:	rex.B
   14001526f:	rex push rax
   140015271:	rex.RB
   140015272:	push   r14
   140015274:	push   rcx
   140015275:	push   rdi
   140015276:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001527e:	pop    rdx
   14001527f:	add    BYTE PTR [rdx+0x5],dh
   140015282:	(bad)  
   140015283:	(bad)  
   140015284:	fs fs push rdi
   140015287:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x42514074
   14001528f:	outs   dx,DWORD PTR ds:[rsi]
   140015290:	js     0x1400152de
   140015292:	(bad)  
   140015293:	jns    0x140015304
   140015295:	jne    0x14001530b
   140015297:	rex
   140015298:	rex push rcx
   14001529a:	rex.RB
   14001529b:	rex.B
   14001529c:	pop    r8
   14001529e:	push   rax
   14001529f:	rex.RB
   1400152a0:	push   r14
   1400152a2:	push   rcx
   1400152a3:	push   rdi
   1400152a4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   1400152ac:	push   rsi
   1400152ad:	(bad)  
   1400152ae:	and    al,0x51
   1400152b0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400152b2:	(bad)  
   1400152b3:	addr32 jae 0x1400152f6
   1400152b6:	push   rdi
   1400152b7:	xor    al,0x41
   1400152b9:	ins    BYTE PTR es:[rdi],dx
   1400152ba:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400152c1:	rex.RX ins BYTE PTR es:[rdi],dx
   1400152c3:	(bad)  
   1400152c4:	addr32 rex push rcx
   1400152c7:	je     0x140015309
   1400152c9:	rex
   1400152ca:	rex
   1400152cb:	rex
   1400152cc:	rex pop rdx
   1400152ce:	add    BYTE PTR [rax],al
   1400152d0:	jle    0x1400152e9
   1400152d2:	(bad)  
   1400152d3:	jae    0x14001533a
   1400152d5:	je     0x14001531a
   1400152d7:	outs   dx,DWORD PTR ds:[rsi]
   1400152d8:	outs   dx,BYTE PTR ds:[rsi]
   1400152d9:	je     0x140015340
   1400152db:	outs   dx,BYTE PTR ds:[rsi]
   1400152dc:	je     0x140015351
   1400152de:	rex.WRB (bad) 
   1400152e0:	jb     0x140015349
   1400152e2:	imul   ebp,DWORD PTR [rsi+0x73],0x614c5140
   1400152e9:	jns    0x14001535a
   1400152eb:	jne    0x140015361
   1400152ed:	rex
   1400152ee:	rex push rcx
   1400152f0:	rex.RB
   1400152f1:	rex.B
   1400152f2:	pop    r8
   1400152f4:	rex.W
   1400152f5:	rex.W
   1400152f6:	rex.W
   1400152f7:	rex.W
   1400152f8:	rex pop rdx
   1400152fa:	add    BYTE PTR [rax],al
   1400152fc:	hlt    
   1400152fd:	sbb    bh,BYTE PTR [rdi]
   1400152ff:	jae    0x140015366
   140015301:	je     0x140015356
   140015303:	jo     0x140015366
   140015305:	movsxd ebp,DWORD PTR [rcx+0x6e]
   140015308:	addr32 rex push rcx
   14001530b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001530d:	js     0x14001535b
   14001530f:	(bad)  
   140015310:	jns    0x140015381
   140015312:	jne    0x140015388
   140015314:	rex
   140015315:	rex push rcx
   140015317:	rex.RB
   140015318:	rex.B
   140015319:	pop    r8
   14001531b:	rex.W
   14001531c:	rex pop rdx
   14001531e:	add    BYTE PTR [rax],al
   140015320:	stos   DWORD PTR es:[rdi],eax
   140015321:	add    BYTE PTR [rdi],bh
   140015323:	(bad)  
   140015324:	xor    BYTE PTR [rcx+0x48],dl
   140015327:	rex.X outs dx,DWORD PTR ds:[rsi]
   140015329:	js     0x140015377
   14001532b:	(bad)  
   14001532c:	jns    0x14001539d
   14001532e:	jne    0x1400153a4
   140015330:	rex
   140015331:	rex push rcx
   140015333:	rex.RB
   140015334:	rex.B
   140015335:	rex.B
   140015336:	rex push rax
   140015338:	rex.RB
   140015339:	push   r14
   14001533b:	push   rcx
   14001533c:	push   rdi
   14001533d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140015345:	pop    rdx
   140015346:	add    BYTE PTR [rax],al
   140015348:	xchg   esp,eax
   140015349:	add    DWORD PTR [rdi],edi
   14001534b:	(bad)  
   14001534c:	xor    BYTE PTR [rcx+0x57],dl
   14001534f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140015357:	rex.RB
   140015358:	rex.B
   140015359:	rex.B
   14001535a:	rex push rax
   14001535c:	rex.RB
   14001535d:	push   r14
   14001535f:	xor    BYTE PTR [rax+0x56],al
   140015362:	(bad)  
   140015363:	and    al,0x51
   140015365:	rex.RX ins BYTE PTR es:[rdi],dx
   140015367:	(bad)  
   140015368:	addr32 jae 0x1400153ab
   14001536b:	push   rdi
   14001536c:	xor    al,0x57
   14001536e:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140015375:	jo     0x1400153dc
   140015377:	rex push rcx
   140015379:	je     0x1400153bb
   14001537b:	rex
   14001537c:	rex
   14001537d:	rex
   14001537e:	rex pop rdx
   140015380:	add    BYTE PTR [rax],al
   140015382:	jne    0x140015389
   140015384:	(bad)  
   140015385:	(bad)  
   140015386:	fs fs push rdi
   140015389:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x47514074
   140015391:	jb     0x1400153fc
   140015393:	fs rex.WR (bad) 
   140015396:	jns    0x140015407
   140015398:	jne    0x14001540e
   14001539a:	rex
   14001539b:	rex push rcx
   14001539d:	rex.RB
   14001539e:	rex.B
   14001539f:	pop    r8
   1400153a1:	push   rax
   1400153a2:	rex.RB
   1400153a3:	push   r14
   1400153a5:	push   rcx
   1400153a6:	push   rdi
   1400153a7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   1400153af:	rex.W
   1400153b0:	rex.W
   1400153b1:	rex.W push rsi
   1400153b3:	(bad)  
   1400153b4:	and    al,0x51
   1400153b6:	rex.RX ins BYTE PTR es:[rdi],dx
   1400153b8:	(bad)  
   1400153b9:	addr32 jae 0x1400153fc
   1400153bc:	push   rdi
   1400153bd:	xor    al,0x41
   1400153bf:	ins    BYTE PTR es:[rdi],dx
   1400153c0:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400153c7:	rex.RX ins BYTE PTR es:[rdi],dx
   1400153c9:	(bad)  
   1400153ca:	addr32 rex push rcx
   1400153cd:	je     0x14001540f
   1400153cf:	rex
   1400153d0:	rex
   1400153d1:	rex
   1400153d2:	rex pop rdx
   1400153d4:	add    BYTE PTR [rax],al
   1400153d6:	jne    0x1400153f0
   1400153d8:	(bad)  
   1400153d9:	jae    0x140015440
   1400153db:	je     0x140015423
   1400153dd:	outs   dx,DWORD PTR ds:[rsi]
   1400153de:	outs   dx,BYTE PTR ds:[rsi]
   1400153df:	je     0x140015421
   1400153e1:	push   rcx
   1400153e2:	push   rdi
   1400153e3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400153eb:	rex.RB
   1400153ec:	rex.B
   1400153ed:	pop    r8
   1400153ef:	rex.B
   1400153f0:	rex.RB
   1400153f1:	rex.X push rsi
   1400153f3:	push   rcx
   1400153f4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400153f6:	outs   dx,BYTE PTR ds:[rsi]
   1400153f7:	je     0x140015439
   1400153f9:	rex
   1400153fa:	rex pop rdx
   1400153fc:	add    BYTE PTR [rax],al
   1400153fe:	mov    ebp,0x303f3f00
   140015403:	push   rcx
   140015404:	rex.WR (bad) 
   140015406:	(bad)  
   140015407:	gs ins BYTE PTR es:[rdi],dx
   140015409:	rex
   14001540a:	rex push rcx
   14001540c:	rex.RB
   14001540d:	rex.B
   14001540e:	rex.B
   14001540f:	rex push rax
   140015411:	rex.RB
   140015412:	push   r14
   140015414:	push   rcx
   140015415:	push   rdi
   140015416:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   14001541e:	(bad)  
   14001541f:	and    al,0x51
   140015421:	rex.RX ins BYTE PTR es:[rdi],dx
   140015423:	(bad)  
   140015424:	addr32 jae 0x140015467
   140015427:	push   rdi
   140015428:	xor    al,0x57
   14001542a:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140015431:	jo     0x140015498
   140015433:	rex push rcx
   140015435:	je     0x140015477
   140015437:	rex
   140015438:	rex
   140015439:	rex
   14001543a:	rex pop rdx
   14001543c:	add    BYTE PTR [rax],al
   14001543e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001543f:	add    BYTE PTR [rdi],bh
   140015441:	(bad)  
   140015442:	xor    BYTE PTR [rcx+0x47],dl
   140015445:	jb     0x1400154b0
   140015447:	fs rex.WR (bad) 
   14001544a:	jns    0x1400154bb
   14001544c:	jne    0x1400154c2
   14001544e:	rex
   14001544f:	rex push rcx
   140015451:	rex.RB
   140015452:	rex.B
   140015453:	rex.B
   140015454:	rex push rax
   140015456:	rex.RB
   140015457:	push   r14
   140015459:	push   rcx
   14001545a:	push   rdi
   14001545b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140015463:	pop    rdx
   140015464:	add    BYTE PTR [rax],al
   140015466:	ficomp WORD PTR [rdx]
   140015468:	(bad)  
   140015469:	jae    0x1400154d0
   14001546b:	je     0x1400154c0
   14001546d:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140015474:	movsxd edi,DWORD PTR [rcx+0x40]
   140015477:	push   rcx
   140015478:	push   rdi
   140015479:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140015481:	rex.RB
   140015482:	rex.B
   140015483:	pop    r8
   140015485:	push   rsi
   140015486:	push   rcx
   140015487:	push   rbx
   140015488:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   14001548f:	movsxd edi,DWORD PTR [rcx+0x40]
   140015492:	rex
   140015493:	rex pop rdx
   140015495:	add    dl,dl
   140015497:	sbb    al,0x3f
   140015499:	jae    0x140015504
   14001549b:	jp     0x140015502
   14001549d:	push   rax
   14001549e:	outs   dx,DWORD PTR ds:[rsi]
   14001549f:	ins    BYTE PTR es:[rdi],dx
   1400154a0:	imul   esp,DWORD PTR [rbx+0x79],0x69575140
   1400154a7:	fs addr32 gs je 0x1400154ec
   1400154ac:	rex push rcx
   1400154ae:	rex.RB
   1400154af:	rex.X
   1400154b0:	rex.B (bad) 
   1400154b2:	push   r14
   1400154b4:	push   rcx
   1400154b5:	push   rbx
   1400154b6:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   1400154bd:	movsxd edi,DWORD PTR [rcx+0x40]
   1400154c0:	rex pop rax
   1400154c2:	pop    rdx
   1400154c3:	add    ch,al
   1400154c5:	sbb    edi,DWORD PTR [rdi]
   1400154c7:	jae    0x14001552e
   1400154c9:	je     0x140015521
   1400154cb:	gs jb  0x140015542
   1400154ce:	imul   esp,DWORD PTR [rbx+0x61],0x7274536c
   1400154d5:	gs je  0x14001553b
   1400154d8:	push   0x69535140
   1400154dd:	jp     0x140015544
   1400154df:	push   rax
   1400154e0:	outs   dx,DWORD PTR ds:[rsi]
   1400154e1:	ins    BYTE PTR es:[rdi],dx
   1400154e2:	imul   esp,DWORD PTR [rbx+0x79],0x45514040
   1400154e9:	rex.B
   1400154ea:	pop    r8
   1400154ec:	rex.W
   1400154ed:	rex pop rdx
   1400154ef:	add    dh,cl
   1400154f1:	sbb    BYTE PTR [rdi],bh
   1400154f3:	jae    0x14001555a
   1400154f5:	je     0x14001553f
   1400154f7:	outs   dx,DWORD PTR ds:[rsi]
   1400154f8:	jb     0x140015563
   1400154fa:	jp     0x14001556b
   1400154fc:	outs   dx,BYTE PTR ds:[rsi]
   1400154fd:	je     0x140015560
   1400154ff:	ins    BYTE PTR es:[rdi],dx
   140015500:	push   rbx
   140015501:	je     0x140015575
   140015503:	gs je  0x140015569
   140015506:	push   0x69535140
   14001550b:	jp     0x140015572
   14001550d:	push   rax
   14001550e:	outs   dx,DWORD PTR ds:[rsi]
   14001550f:	ins    BYTE PTR es:[rdi],dx
   140015510:	imul   esp,DWORD PTR [rbx+0x79],0x45514040
   140015517:	rex.B
   140015518:	pop    r8
   14001551a:	rex.W
   14001551b:	rex pop rdx
   14001551d:	add    BYTE PTR [rdi+rdx*1+0x7465733f],al
   140015524:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015526:	outs   dx,BYTE PTR ds:[rsi]
   140015527:	je     0x14001559b
   140015529:	outs   dx,DWORD PTR ds:[rsi]
   14001552a:	ins    BYTE PTR es:[rdi],dx
   14001552b:	push   rsp
   14001552c:	jns    0x14001559e
   14001552e:	gs rex push rcx
   140015531:	push   rbx
   140015532:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140015539:	movsxd edi,DWORD PTR [rcx+0x40]
   14001553c:	rex push rcx
   14001553e:	rex.RB
   14001553f:	rex.B
   140015540:	pop    r8
   140015542:	push   rdi
   140015543:	xor    al,0x43
   140015545:	outs   dx,DWORD PTR ds:[rsi]
   140015546:	outs   dx,BYTE PTR ds:[rsi]
   140015547:	je     0x1400155bb
   140015549:	outs   dx,DWORD PTR ds:[rsi]
   14001554a:	ins    BYTE PTR es:[rdi],dx
   14001554b:	push   rsp
   14001554c:	jns    0x1400155be
   14001554e:	rex xor DWORD PTR gs:[rax+0x40],eax
   140015553:	pop    rdx
   140015554:	add    BYTE PTR [rax],al
   140015556:	jp     0x14001556d
   140015558:	(bad)  
   140015559:	jb     0x1400155c0
   14001555b:	jae    0x1400155c6
   14001555d:	jp     0x1400155c4
   14001555f:	rex push rcx
   140015561:	push   rdi
   140015562:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001556a:	rex.RB
   14001556b:	rex.B
   14001556c:	pop    r8
   14001556e:	rex.B
   14001556f:	rex.RB
   140015570:	rex.X push rsi
   140015572:	push   rcx
   140015573:	push   rbx
   140015574:	imul   edi,DWORD PTR [rdx+0x65],0x5a404040
   14001557b:	add    BYTE PTR [rsi+0x656d3f10],al
   140015581:	je     0x1400155e4
   140015583:	rex.WRXB (bad) 
   140015585:	push   0x65
   140015587:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001558b:	rex.RXB jb 0x1400155f7
   14001558e:	fs rex.WR (bad) 
   140015591:	jns    0x140015602
   140015593:	jne    0x140015609
   140015595:	rex
   140015596:	rex push rbp
   140015598:	rex.RB
   140015599:	rex.X
   14001559a:	push   r8
   14001559c:	rex.RB
   14001559d:	rex.X push rbp
   14001559f:	push   rcx
   1400155a0:	rex.WRB
   1400155a1:	gs je  0x140015605
   1400155a4:	rex.WRXB (bad) 
   1400155a6:	push   0x65
   1400155a8:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400155ac:	pop    rax
   1400155ad:	pop    rdx
   1400155ae:	add    BYTE PTR [rax],al
   1400155b0:	stc    
   1400155b1:	adc    edi,DWORD PTR [rdi]
   1400155b3:	jno    0x140015629
   1400155b5:	pop    rdi
   1400155b6:	ins    DWORD PTR es:[rdi],dx
   1400155b7:	gs je  0x14001561b
   1400155ba:	movsxd esp,DWORD PTR [rcx+0x73]
   1400155bd:	je     0x1400155ff
   1400155bf:	push   rcx
   1400155c0:	rex.RXB jb 0x14001562c
   1400155c3:	fs rex.WR (bad) 
   1400155c6:	jns    0x140015637
   1400155c8:	jne    0x14001563e
   1400155ca:	rex
   1400155cb:	rex push rbp
   1400155cd:	rex.RB
   1400155ce:	rex.B
   1400155cf:	push   r8
   1400155d1:	rex.RB
   1400155d2:	pop    r8
   1400155d4:	push   rax
   1400155d5:	rex.RB
   1400155d6:	rex.X
   1400155d7:	rex.R
   1400155d8:	rex pop rdx
   1400155da:	add    BYTE PTR [rax],al
   1400155dc:	outs   dx,DWORD PTR ds:[rsi]
   1400155dd:	adc    edi,DWORD PTR [rdi]
   1400155df:	jno    0x140015655
   1400155e1:	pop    rdi
   1400155e2:	ins    DWORD PTR es:[rdi],dx
   1400155e3:	gs je  0x140015647
   1400155e6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400155e9:	ins    BYTE PTR es:[rdi],dx
   1400155ea:	rex push rcx
   1400155ec:	rex.RXB jb 0x140015658
   1400155ef:	fs rex.WR (bad) 
   1400155f2:	jns    0x140015663
   1400155f4:	jne    0x14001566a
   1400155f6:	rex
   1400155f7:	rex push rbp
   1400155f9:	rex.RB
   1400155fa:	rex.B
   1400155fb:	rex.B
   1400155fc:	rex.W push rdi
   1400155fe:	xor    al,0x43
   140015600:	(bad)  
   140015601:	ins    BYTE PTR es:[rdi],dx
   140015602:	ins    BYTE PTR es:[rdi],dx
   140015603:	rex push rcx
   140015605:	rex.WRB
   140015606:	gs je  0x14001566a
   140015609:	rex.WRXB (bad) 
   14001560b:	push   0x65
   14001560d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140015611:	rex.W push rax
   140015613:	rex.RB
   140015614:	push   r8
   140015616:	rex.RB
   140015617:	pop    r8
   140015619:	rex pop rdx
   14001561b:	add    BYTE PTR [rdx+0x68633f06],ch
   140015621:	imul   ebp,DWORD PTR [rsp+riz*2+0x45],0x746e6576
   140015629:	rex push rcx
   14001562b:	rex.WR (bad) 
   14001562d:	jns    0x14001569e
   14001562f:	jne    0x1400156a5
   140015631:	rex
   140015632:	rex
   140015633:	rex.WRB
   140015634:	rex.RB
   140015635:	rex.B
   140015636:	pop    r8
   140015638:	push   rax
   140015639:	rex.RB
   14001563a:	push   r14
   14001563c:	push   rcx
   14001563d:	rex.XB push 0x45646c69
   140015643:	jbe    0x1400156aa
   140015645:	outs   dx,BYTE PTR ds:[rsi]
   140015646:	je     0x140015688
   140015648:	rex
   140015649:	rex pop rdx
   14001564b:	add    BYTE PTR [rax*1+0x6464613f],dh
   140015652:	rex.WB je 0x1400156ba
   140015655:	ins    DWORD PTR es:[rdi],dx
   140015656:	rex push rcx
   140015658:	rex.RXB jb 0x1400156c4
   14001565b:	fs rex.WR (bad) 
   14001565e:	jns    0x1400156cf
   140015660:	jne    0x1400156d6
   140015662:	rex
   140015663:	rex
   140015664:	rex.WRB
   140015665:	rex.RB
   140015666:	rex.B
   140015667:	pop    r8
   140015669:	push   rax
   14001566a:	rex.RB
   14001566b:	push   r14
   14001566d:	push   rcx
   14001566e:	rex.WR (bad) 
   140015670:	jns    0x1400156e1
   140015672:	jne    0x1400156e8
   140015674:	rex.WB je 0x1400156dc
   140015677:	ins    DWORD PTR es:[rdi],dx
   140015678:	rex
   140015679:	rex
   14001567a:	rex pop rdx
   14001567c:	add    BYTE PTR [rax],al
   14001567e:	loopne 0x14001568e
   140015680:	(bad)  
   140015681:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   140015689:	rex.RXB jb 0x1400156f5
   14001568c:	fs rex.WR (bad) 
   14001568f:	jns    0x140015700
   140015691:	jne    0x140015707
   140015693:	rex
   140015694:	rex push rbp
   140015696:	rex.RB
   140015697:	rex.X
   140015698:	push   r8
   14001569a:	rex.RB
   14001569b:	push   r14
   14001569d:	push   rcx
   14001569e:	rex.WR (bad) 
   1400156a0:	jns    0x140015711
   1400156a2:	jne    0x140015718
   1400156a4:	rex.WB je 0x14001570c
   1400156a7:	ins    DWORD PTR es:[rdi],dx
   1400156a8:	rex
   1400156a9:	rex
   1400156aa:	rex.W
   1400156ab:	rex pop rdx
   1400156ad:	add    BYTE PTR [rax],bh
   1400156af:	(bad)  
   1400156b0:	(bad)  
   1400156b1:	je     0x140015714
   1400156b3:	imul   esp,DWORD PTR [rbp+0x41],0x74
   1400156b7:	rex push rcx
   1400156b9:	rex.RXB jb 0x140015725
   1400156bc:	fs rex.WR (bad) 
   1400156bf:	jns    0x140015730
   1400156c1:	jne    0x140015737
   1400156c3:	rex
   1400156c4:	rex push rbp
   1400156c6:	rex.RB
   1400156c7:	rex.B
   1400156c8:	push   r8
   1400156ca:	rex.RB
   1400156cb:	push   r14
   1400156cd:	push   rcx
   1400156ce:	rex.WR (bad) 
   1400156d0:	jns    0x140015741
   1400156d2:	jne    0x140015748
   1400156d4:	rex.WB je 0x14001573c
   1400156d7:	ins    DWORD PTR es:[rdi],dx
   1400156d8:	rex
   1400156d9:	rex
   1400156da:	rex.W
   1400156db:	rex pop rdx
   1400156dd:	add    BYTE PTR [rdi],ah
   1400156df:	or     eax,0x646e693f
   1400156e4:	gs js  0x140015736
   1400156e7:	rex push cx
   1400156ea:	rex.WR (bad) 
   1400156ec:	jns    0x14001575d
   1400156ee:	jne    0x140015764
   1400156f0:	rex
   1400156f1:	rex push rbp
   1400156f3:	rex.RB
   1400156f4:	rex.X
   1400156f5:	rex.B
   1400156f6:	rex.W push rax
   1400156f8:	rex.RB
   1400156f9:	push   r14
   1400156fb:	push   rcx
   1400156fc:	push   rdi
   1400156fd:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140015705:	pop    rdx
   140015706:	add    BYTE PTR [rax],al
   140015708:	scas   al,BYTE PTR es:[rdi]
   140015709:	(bad)  
   14001570a:	(bad)  
   14001570b:	movsxd ebp,DWORD PTR [rdi+0x75]
   14001570e:	outs   dx,BYTE PTR ds:[rsi]
   14001570f:	je     0x140015751
   140015711:	push   rcx
   140015712:	rex.RXB jb 0x14001577e
   140015715:	fs rex.WR (bad) 
   140015718:	jns    0x140015789
   14001571a:	jne    0x140015790
   14001571c:	rex
   14001571d:	rex push rbp
   14001571f:	rex.RB
   140015720:	rex.X
   140015721:	rex.B
   140015722:	rex.W pop rax
   140015724:	pop    rdx
   140015725:	add    BYTE PTR [rbp+0x69733f1c],ah
   14001572b:	jp     0x140015792
   14001572d:	imul   rbp,QWORD PTR [rsi+0x74],0x72475140
   140015735:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   14001573d:	rex
   14001573e:	rex push rbp
   140015740:	rex.RB
   140015741:	rex.X
   140015742:	rex.B (bad) 
   140015744:	push   r14
   140015746:	push   rcx
   140015747:	push   rbx
   140015748:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001574f:	add    ah,bh
   140015751:	adc    BYTE PTR [rdi],bh
   140015753:	ins    DWORD PTR es:[rdi],dx
   140015754:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001575b:	imul   edi,DWORD PTR [rdx+0x65],0x72475140
   140015762:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   14001576a:	rex
   14001576b:	rex push rbp
   14001576d:	rex.RB
   14001576e:	rex.X
   14001576f:	rex.B (bad) 
   140015771:	push   r14
   140015773:	push   rcx
   140015774:	push   rbx
   140015775:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001577c:	add    BYTE PTR [rax],al
   14001577e:	(bad)  
   14001577f:	adc    BYTE PTR [rdi],bh
   140015781:	ins    DWORD PTR es:[rdi],dx
   140015782:	(bad)  
   140015783:	js     0x1400157ee
   140015785:	ins    DWORD PTR es:[rdi],dx
   140015786:	jne    0x1400157f5
   140015788:	push   rbx
   140015789:	imul   edi,DWORD PTR [rdx+0x65],0x72475140
   140015790:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   140015798:	rex
   140015799:	rex push rbp
   14001579b:	rex.RB
   14001579c:	rex.X
   14001579d:	rex.B (bad) 
   14001579f:	push   r14
   1400157a1:	push   rcx
   1400157a2:	push   rbx
   1400157a3:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400157aa:	add    BYTE PTR [rax],al
   1400157ac:	and    eax,0x78653f0b
   1400157b1:	jo     0x140015814
   1400157b3:	outs   dx,BYTE PTR ds:[rsi]
   1400157b4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   1400157bc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400157c0:	outs   dx,BYTE PTR ds:[rsi]
   1400157c1:	jae    0x140015803
   1400157c3:	push   rcx
   1400157c4:	rex.RXB jb 0x140015830
   1400157c7:	fs rex.WR (bad) 
   1400157ca:	jns    0x14001583b
   1400157cc:	jne    0x140015842
   1400157ce:	rex
   1400157cf:	rex push rbp
   1400157d1:	rex.RB
   1400157d2:	rex.X
   1400157d3:	rex.B (bad) 
   1400157d5:	push   r14
   1400157d7:	(bad)  
   1400157d8:	and    al,0x51
   1400157da:	rex.RX ins BYTE PTR es:[rdi],dx
   1400157dc:	(bad)  
   1400157dd:	addr32 jae 0x140015820
   1400157e0:	push   rdi
   1400157e1:	xor    al,0x4f
   1400157e3:	jb     0x14001584e
   1400157e5:	outs   dx,BYTE PTR gs:[rsi]
   1400157e7:	je     0x14001584a
   1400157e9:	je     0x140015854
   1400157eb:	outs   dx,DWORD PTR ds:[rsi]
   1400157ec:	outs   dx,BYTE PTR ds:[rsi]
   1400157ed:	rex push rcx
   1400157ef:	je     0x140015831
   1400157f1:	rex
   1400157f2:	rex
   1400157f3:	rex pop rax
   1400157f5:	pop    rdx
   1400157f6:	add    BYTE PTR [rax],al
   1400157f8:	cdq    
   1400157f9:	sbb    BYTE PTR [rdi],bh
   1400157fb:	jae    0x140015862
   1400157fd:	je     0x140015846
   1400157ff:	outs   dx,DWORD PTR gs:[rsi]
   140015801:	ins    DWORD PTR es:[rdi],dx
   140015802:	gs je  0x140015877
   140015805:	jns    0x140015847
   140015807:	push   rcx
   140015808:	rex.RXB jb 0x140015874
   14001580b:	fs rex.WR (bad) 
   14001580e:	jns    0x14001587f
   140015810:	jne    0x140015886
   140015812:	rex
   140015813:	rex push rbp
   140015815:	rex.RB
   140015816:	rex.B
   140015817:	pop    r8
   140015819:	rex.B
   14001581a:	rex.RB
   14001581b:	rex.X push rsi
   14001581d:	push   rcx
   14001581e:	push   rdx
   14001581f:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140015824:	rex pop rdx
   140015826:	add    BYTE PTR [rax],al
   140015828:	sti    
   140015829:	or     edi,DWORD PTR [rdi]
   14001582b:	outs   dx,DWORD PTR gs:[esi]
   14001582e:	ins    DWORD PTR es:[rdi],dx
   14001582f:	gs je  0x1400158a4
   140015832:	jns    0x140015874
   140015834:	push   rcx
   140015835:	rex.WR (bad) 
   140015837:	jns    0x1400158a8
   140015839:	jne    0x1400158af
   14001583b:	rex
   14001583c:	rex push rbp
   14001583e:	rex.RB
   14001583f:	rex.X
   140015840:	rex.B (bad) 
   140015842:	push   r14
   140015844:	push   rcx
   140015845:	push   rdx
   140015846:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001584b:	pop    rax
   14001584c:	pop    rdx
   14001584d:	add    BYTE PTR [rcx],dh
   14001584f:	(bad)  
   140015850:	(bad)  
   140015851:	imul   esi,DWORD PTR [rbx+0x45],0x7974706d
   140015858:	rex push rcx
   14001585a:	rex.WR (bad) 
   14001585c:	jns    0x1400158cd
   14001585e:	jne    0x1400158d4
   140015860:	rex
   140015861:	rex push rbp
   140015863:	rex.RB
   140015864:	rex.X
   140015865:	pop    r15
   140015867:	rex.WRX pop rax
   140015869:	pop    rdx
   14001586a:	add    BYTE PTR [rax],al
   14001586c:	(bad)  
   14001586d:	or     al,0x3f
   14001586f:	push   0x65487361
   140015874:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001587b:	push   rdi
   14001587c:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   140015884:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   14001588c:	rex
   14001588d:	rex push rbp
   14001588f:	rex.RB
   140015890:	rex.X
   140015891:	pop    r15
   140015893:	rex.WRX pop rax
   140015895:	pop    rdx
   140015896:	add    BYTE PTR [rax],al
   140015898:	(bad)  
   140015899:	or     al,0x3f
   14001589b:	push   0x68676965
   1400158a0:	je     0x1400158e8
   1400158a2:	outs   dx,DWORD PTR ds:[rsi]
   1400158a3:	jb     0x1400158fc
   1400158a5:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   1400158ad:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   1400158b5:	rex
   1400158b6:	rex push rbp
   1400158b8:	rex.RB
   1400158b9:	rex.X
   1400158ba:	rex.B
   1400158bb:	rex.W
   1400158bc:	rex.W
   1400158bd:	rex pop rdx
   1400158bf:	add    ah,dh
   1400158c1:	adc    BYTE PTR [rdi],bh
   1400158c3:	ins    DWORD PTR es:[rdi],dx
   1400158c4:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   1400158cb:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   1400158d3:	push   rdi
   1400158d4:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   1400158dc:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   1400158e4:	rex
   1400158e5:	rex push rbp
   1400158e7:	rex.RB
   1400158e8:	rex.X
   1400158e9:	rex.B
   1400158ea:	rex.W
   1400158eb:	rex.W
   1400158ec:	rex pop rdx
   1400158ee:	add    BYTE PTR [rax],al
   1400158f0:	jmp    0x1400158ff
   1400158f2:	(bad)  
   1400158f3:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400158fa:	(bad)  
   1400158fb:	je     0x140015962
   1400158fd:	rex push rcx
   1400158ff:	rex.RXB jb 0x14001596b
   140015902:	fs rex.WR (bad) 
   140015905:	jns    0x140015976
   140015907:	jne    0x14001597d
   140015909:	rex
   14001590a:	rex push rbp
   14001590c:	rex.RB
   14001590d:	rex.B
   14001590e:	pop    r8
   140015910:	pop    rax
   140015911:	pop    rdx
   140015912:	add    BYTE PTR [rax],al
   140015914:	rex and DWORD PTR [rdi],edi
   140015917:	ja     0x140015982
   140015919:	fs addr32 gs je 0x14001595e
   14001591e:	push   rcx
   14001591f:	rex.WR (bad) 
   140015921:	jns    0x140015992
   140015923:	jne    0x140015999
   140015925:	rex.WB je 0x14001598d
   140015928:	ins    DWORD PTR es:[rdi],dx
   140015929:	rex
   14001592a:	rex push rbp
   14001592c:	rex.RB
   14001592d:	rex.B
   14001592e:	push   r8
   140015930:	rex.RB
   140015931:	push   r14
   140015933:	push   rcx
   140015934:	push   rdi
   140015935:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   14001593d:	pop    rdx
   14001593e:	add    BYTE PTR [rax],al
   140015940:	xchg   BYTE PTR [rdi],cl
   140015942:	(bad)  
   140015943:	ins    BYTE PTR es:[rdi],dx
   140015944:	(bad)  
   140015945:	jns    0x1400159b6
   140015947:	jne    0x1400159bd
   140015949:	rex push rcx
   14001594b:	rex.WR (bad) 
   14001594d:	jns    0x1400159be
   14001594f:	jne    0x1400159c5
   140015951:	rex
   140015952:	rex push rbp
   140015954:	rex.RB
   140015955:	rex.B
   140015956:	push   r8
   140015958:	rex.RB
   140015959:	push   r14
   14001595b:	xor    DWORD PTR [rax+0x58],eax
   14001595e:	pop    rdx
   14001595f:	add    al,bh
   140015961:	sbb    al,0x3f
   140015963:	jae    0x1400159d5
   140015965:	(bad)  
   140015966:	movsxd esp,DWORD PTR [rbp+0x72]
   140015969:	rex.WB je 0x1400159d1
   14001596c:	ins    DWORD PTR es:[rdi],dx
   14001596d:	rex push rcx
   14001596f:	rex.WR (bad) 
   140015971:	jns    0x1400159e2
   140015973:	jne    0x1400159e9
   140015975:	rex.WB je 0x1400159dd
   140015978:	ins    DWORD PTR es:[rdi],dx
   140015979:	rex
   14001597a:	rex push rbp
   14001597c:	rex.RB
   14001597d:	rex.B
   14001597e:	push   r8
   140015980:	rex.RB
   140015981:	push   r14
   140015983:	push   rcx
   140015984:	push   rbx
   140015985:	jo     0x1400159e8
   140015987:	movsxd esp,DWORD PTR [rbp+0x72]
   14001598a:	rex.WB je 0x1400159f2
   14001598d:	ins    DWORD PTR es:[rdi],dx
   14001598e:	rex
   14001598f:	rex pop rax
   140015991:	pop    rdx
   140015992:	add    BYTE PTR [rax],al
   140015994:	xchg   ebp,eax
   140015995:	(bad)  
   140015996:	(bad)  
   140015997:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001599a:	je     0x140015a0e
   14001599c:	outs   dx,DWORD PTR ds:[rsi]
   14001599d:	ins    BYTE PTR es:[rdi],dx
   14001599e:	push   rsp
   14001599f:	jns    0x140015a11
   1400159a1:	gs jae 0x1400159e4
   1400159a4:	push   rcx
   1400159a5:	rex.WR (bad) 
   1400159a7:	jns    0x140015a18
   1400159a9:	jne    0x140015a1f
   1400159ab:	rex
   1400159ac:	rex push rbp
   1400159ae:	rex.RB
   1400159af:	rex.X
   1400159b0:	rex.B (bad) 
   1400159b2:	push   r14
   1400159b4:	(bad)  
   1400159b5:	and    al,0x51
   1400159b7:	rex.RX ins BYTE PTR es:[rdi],dx
   1400159b9:	(bad)  
   1400159ba:	addr32 jae 0x1400159fd
   1400159bd:	push   rdi
   1400159be:	xor    al,0x43
   1400159c0:	outs   dx,DWORD PTR ds:[rsi]
   1400159c1:	outs   dx,BYTE PTR ds:[rsi]
   1400159c2:	je     0x140015a36
   1400159c4:	outs   dx,DWORD PTR ds:[rsi]
   1400159c5:	ins    BYTE PTR es:[rdi],dx
   1400159c6:	push   rsp
   1400159c7:	jns    0x140015a39
   1400159c9:	gs rex push rcx
   1400159cc:	push   rbx
   1400159cd:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   1400159d4:	movsxd edi,DWORD PTR [rcx+0x40]
   1400159d7:	rex
   1400159d8:	rex
   1400159d9:	rex pop rax
   1400159db:	pop    rdx
   1400159dc:	add    BYTE PTR [rax],al
   1400159de:	(bad)  
   1400159df:	adc    BYTE PTR [rdi],bh
   1400159e1:	ins    DWORD PTR es:[rdi],dx
   1400159e2:	gs je  0x140015a46
   1400159e5:	rex.WRXB (bad) 
   1400159e7:	push   0x65
   1400159e9:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400159ed:	rex.WR (bad) 
   1400159ef:	(bad)  
   1400159f0:	gs ins BYTE PTR es:[rdi],dx
   1400159f2:	rex
   1400159f3:	rex push rbp
   1400159f5:	rex.RB
   1400159f6:	rex.X
   1400159f7:	push   r8
   1400159f9:	rex.RB
   1400159fa:	rex.X push rbp
   1400159fc:	push   rcx
   1400159fd:	rex.WRB
   1400159fe:	gs je  0x140015a62
   140015a01:	rex.WRXB (bad) 
   140015a03:	push   0x65
   140015a05:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140015a09:	pop    rax
   140015a0a:	pop    rdx
   140015a0b:	add    BYTE PTR [rdx],al
   140015a0d:	adc    al,0x3f
   140015a0f:	jno    0x140015a85
   140015a11:	pop    rdi
   140015a12:	ins    DWORD PTR es:[rdi],dx
   140015a13:	gs je  0x140015a77
   140015a16:	movsxd esp,DWORD PTR [rcx+0x73]
   140015a19:	je     0x140015a5b
   140015a1b:	push   rcx
   140015a1c:	rex.WR (bad) 
   140015a1e:	(bad)  
   140015a1f:	gs ins BYTE PTR es:[rdi],dx
   140015a21:	rex
   140015a22:	rex push rbp
   140015a24:	rex.RB
   140015a25:	rex.B
   140015a26:	push   r8
   140015a28:	rex.RB
   140015a29:	pop    r8
   140015a2b:	push   rax
   140015a2c:	rex.RB
   140015a2d:	rex.X
   140015a2e:	rex.R
   140015a2f:	rex pop rdx
   140015a31:	add    BYTE PTR [rax+0x13],bh
   140015a34:	(bad)  
   140015a35:	jno    0x140015aab
   140015a37:	pop    rdi
   140015a38:	ins    DWORD PTR es:[rdi],dx
   140015a39:	gs je  0x140015a9d
   140015a3c:	movsxd esp,DWORD PTR [rcx+0x6c]
   140015a3f:	ins    BYTE PTR es:[rdi],dx
   140015a40:	rex push rcx
   140015a42:	rex.WR (bad) 
   140015a44:	(bad)  
   140015a45:	gs ins BYTE PTR es:[rdi],dx
   140015a47:	rex
   140015a48:	rex push rbp
   140015a4a:	rex.RB
   140015a4b:	rex.B
   140015a4c:	rex.B
   140015a4d:	rex.W push rdi
   140015a4f:	xor    al,0x43
   140015a51:	(bad)  
   140015a52:	ins    BYTE PTR es:[rdi],dx
   140015a53:	ins    BYTE PTR es:[rdi],dx
   140015a54:	rex push rcx
   140015a56:	rex.WRB
   140015a57:	gs je  0x140015abb
   140015a5a:	rex.WRXB (bad) 
   140015a5c:	push   0x65
   140015a5e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140015a62:	rex.W push rax
   140015a64:	rex.RB
   140015a65:	push   r8
   140015a67:	rex.RB
   140015a68:	pop    r8
   140015a6a:	rex pop rdx
   140015a6c:	add    BYTE PTR [rax],al
   140015a6e:	(bad)  
   140015a6f:	or     bh,BYTE PTR [rdi]
   140015a71:	gs jbe 0x140015ad9
   140015a74:	outs   dx,BYTE PTR ds:[rsi]
   140015a75:	je     0x140015ab7
   140015a77:	push   rcx
   140015a78:	rex.WR (bad) 
   140015a7a:	(bad)  
   140015a7b:	gs ins BYTE PTR es:[rdi],dx
   140015a7d:	rex
   140015a7e:	rex
   140015a7f:	rex.WRB
   140015a80:	rex.RB
   140015a81:	rex.B
   140015a82:	pop    r15
   140015a84:	rex.WRX push rax
   140015a86:	rex.RB
   140015a87:	push   r14
   140015a89:	push   rcx
   140015a8a:	rex.RB jbe 0x140015af2
   140015a8d:	outs   dx,BYTE PTR ds:[rsi]
   140015a8e:	je     0x140015ad0
   140015a90:	rex
   140015a91:	rex pop rdx
   140015a93:	add    bl,bl
   140015a95:	sbb    edi,DWORD PTR [rdi]
   140015a97:	jae    0x140015afe
   140015a99:	je     0x140015af1
   140015a9b:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   140015aa2:	push   rcx
   140015aa3:	push   rdi
   140015aa4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140015aac:	rex.RB
   140015aad:	rex.B
   140015aae:	pop    r8
   140015ab0:	pop    rdi
   140015ab1:	rex.WRX
   140015ab2:	rex pop rdx
   140015ab4:	add    BYTE PTR [rax],al
   140015ab6:	stos   BYTE PTR es:[rdi],al
   140015ab7:	sbb    al,0x3f
   140015ab9:	jae    0x140015b24
   140015abb:	jp     0x140015b22
   140015abd:	imul   rbp,QWORD PTR [rsi+0x74],0x614c5140
   140015ac5:	(bad)  
   140015ac6:	gs ins BYTE PTR es:[rdi],dx
   140015ac8:	rex
   140015ac9:	rex push rbp
   140015acb:	rex.RB
   140015acc:	rex.X
   140015acd:	rex.B (bad) 
   140015acf:	push   r14
   140015ad1:	push   rcx
   140015ad2:	push   rbx
   140015ad3:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140015ada:	add    BYTE PTR [rax],al
   140015adc:	or     eax,0x696d3f11
   140015ae1:	outs   dx,BYTE PTR ds:[rsi]
   140015ae2:	imul   ebp,DWORD PTR [rbp+0x75],0x7a69536d
   140015ae9:	imul   rbp,QWORD PTR gs:[rsi+0x74],0x614c5140
   140015af2:	(bad)  
   140015af3:	gs ins BYTE PTR es:[rdi],dx
   140015af5:	rex
   140015af6:	rex push rbp
   140015af8:	rex.RB
   140015af9:	rex.X
   140015afa:	rex.B (bad) 
   140015afc:	push   r14
   140015afe:	push   rcx
   140015aff:	push   rbx
   140015b00:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140015b07:	add    BYTE PTR [rbx+0x65683f0c],al
   140015b0d:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140015b14:	push   rdi
   140015b15:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140015b1d:	(bad)  
   140015b1e:	gs ins BYTE PTR es:[rdi],dx
   140015b20:	rex
   140015b21:	rex push rbp
   140015b23:	rex.RB
   140015b24:	rex.X
   140015b25:	rex.B
   140015b26:	rex.W
   140015b27:	rex.W
   140015b28:	rex pop rdx
   140015b2a:	add    BYTE PTR [rax],al
   140015b2c:	data16 or al,0x3f
   140015b2f:	push   0x65487361
   140015b34:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140015b3b:	push   rdi
   140015b3c:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   140015b44:	fs addr32 gs je 0x140015b89
   140015b49:	rex push rbp
   140015b4b:	rex.RB
   140015b4c:	rex.X
   140015b4d:	pop    r15
   140015b4f:	rex.WRX pop rax
   140015b51:	pop    rdx
   140015b52:	add    BYTE PTR [rax],al
   140015b54:	jbe    0x140015b67
   140015b56:	(bad)  
   140015b57:	ins    DWORD PTR es:[rdi],dx
   140015b58:	outs   dx,DWORD PTR ds:[rsi]
   140015b59:	jne    0x140015bce
   140015b5b:	gs push rax
   140015b5d:	jb     0x140015bc4
   140015b5f:	jae    0x140015bd4
   140015b61:	rex.RB jbe 0x140015bc9
   140015b64:	outs   dx,BYTE PTR ds:[rsi]
   140015b65:	je     0x140015ba7
   140015b67:	push   rcx
   140015b68:	rex.WR (bad) 
   140015b6a:	(bad)  
   140015b6b:	gs ins BYTE PTR es:[rdi],dx
   140015b6d:	rex
   140015b6e:	rex
   140015b6f:	rex.WRB
   140015b70:	rex.RB
   140015b71:	rex.B
   140015b72:	pop    r8
   140015b74:	push   rax
   140015b75:	rex.RB
   140015b76:	push   r14
   140015b78:	push   rcx
   140015b79:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140015b7b:	jne    0x140015bf0
   140015b7d:	gs rex.RB jbe 0x140015be6
   140015b81:	outs   dx,BYTE PTR ds:[rsi]
   140015b82:	je     0x140015bc4
   140015b84:	rex
   140015b85:	rex pop rdx
   140015b87:	add    BYTE PTR [rcx+rdx*1+0x756f6d3f],dl
   140015b8e:	jae    0x140015bf5
   140015b90:	push   rdx
   140015b91:	gs ins BYTE PTR es:[rdi],dx
   140015b93:	gs (bad) 
   140015b95:	jae    0x140015bfc
   140015b97:	rex.RB jbe 0x140015bff
   140015b9a:	outs   dx,BYTE PTR ds:[rsi]
   140015b9b:	je     0x140015bdd
   140015b9d:	push   rcx
   140015b9e:	rex.WR (bad) 
   140015ba0:	(bad)  
   140015ba1:	gs ins BYTE PTR es:[rdi],dx
   140015ba3:	rex
   140015ba4:	rex
   140015ba5:	rex.WRB
   140015ba6:	rex.RB
   140015ba7:	rex.B
   140015ba8:	pop    r8
   140015baa:	push   rax
   140015bab:	rex.RB
   140015bac:	push   r14
   140015bae:	push   rcx
   140015baf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140015bb1:	jne    0x140015c26
   140015bb3:	gs rex.RB jbe 0x140015c1c
   140015bb7:	outs   dx,BYTE PTR ds:[rsi]
   140015bb8:	je     0x140015bfa
   140015bba:	rex
   140015bbb:	rex pop rdx
   140015bbd:	add    BYTE PTR [rcx+rdx*1+0x3f],al
   140015bc1:	ins    DWORD PTR es:[rdi],dx
   140015bc2:	outs   dx,DWORD PTR ds:[rsi]
   140015bc3:	jne    0x140015c38
   140015bc5:	rex.R outs dx,DWORD PTR gs:[rsi]
   140015bc8:	jne    0x140015c2c
   140015bca:	ins    BYTE PTR es:[rdi],dx
   140015bcb:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140015bce:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140015bd5:	je     0x140015c17
   140015bd7:	push   rcx
   140015bd8:	push   rdi
   140015bd9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015be1:	rex.RB
   140015be2:	rex.B
   140015be3:	pop    r8
   140015be5:	push   rax
   140015be6:	rex.RB
   140015be7:	push   r14
   140015be9:	push   rcx
   140015bea:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140015bec:	jne    0x140015c61
   140015bee:	gs rex.RB jbe 0x140015c57
   140015bf2:	outs   dx,BYTE PTR ds:[rsi]
   140015bf3:	je     0x140015c35
   140015bf5:	rex
   140015bf6:	rex pop rdx
   140015bf8:	add    BYTE PTR [rax],al
   140015bfa:	push   rsp
   140015bfb:	adc    DWORD PTR [rdi],edi
   140015bfd:	ins    DWORD PTR es:[rdi],dx
   140015bfe:	outs   dx,DWORD PTR ds:[rsi]
   140015bff:	jne    0x140015c74
   140015c01:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140015c04:	jbe    0x140015c6b
   140015c06:	rex.RB jbe 0x140015c6e
   140015c09:	outs   dx,BYTE PTR ds:[rsi]
   140015c0a:	je     0x140015c4c
   140015c0c:	push   rcx
   140015c0d:	rex.WR (bad) 
   140015c0f:	(bad)  
   140015c10:	gs ins BYTE PTR es:[rdi],dx
   140015c12:	rex
   140015c13:	rex
   140015c14:	rex.WRB
   140015c15:	rex.RB
   140015c16:	rex.B
   140015c17:	pop    r8
   140015c19:	push   rax
   140015c1a:	rex.RB
   140015c1b:	push   r14
   140015c1d:	push   rcx
   140015c1e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140015c20:	jne    0x140015c95
   140015c22:	gs rex.RB jbe 0x140015c8b
   140015c26:	outs   dx,BYTE PTR ds:[rsi]
   140015c27:	je     0x140015c69
   140015c29:	rex
   140015c2a:	rex pop rdx
   140015c2c:	add    BYTE PTR [rax],al
   140015c2e:	xor    al,0x21
   140015c30:	(bad)  
   140015c31:	ja     0x140015c9b
   140015c33:	gs gs ins BYTE PTR es:[rdi],dx
   140015c36:	rex.RB jbe 0x140015c9e
   140015c39:	outs   dx,BYTE PTR ds:[rsi]
   140015c3a:	je     0x140015c7c
   140015c3c:	push   rcx
   140015c3d:	push   rdi
   140015c3e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015c46:	rex.RB
   140015c47:	rex.B
   140015c48:	pop    r8
   140015c4a:	push   rax
   140015c4b:	rex.RB
   140015c4c:	push   r14
   140015c4e:	push   rcx
   140015c4f:	push   rdi
   140015c50:	push   0x456c6565
   140015c55:	jbe    0x140015cbc
   140015c57:	outs   dx,BYTE PTR ds:[rsi]
   140015c58:	je     0x140015c9a
   140015c5a:	rex
   140015c5b:	rex pop rdx
   140015c5d:	add    BYTE PTR [rdi+rcx*1+0x3f],cl
   140015c61:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140015c65:	jb     0x140015ccc
   140015c67:	jae    0x140015cdc
   140015c69:	rex.RB jbe 0x140015cd1
   140015c6c:	outs   dx,BYTE PTR ds:[rsi]
   140015c6d:	je     0x140015caf
   140015c6f:	push   rcx
   140015c70:	rex.WR (bad) 
   140015c72:	(bad)  
   140015c73:	gs ins BYTE PTR es:[rdi],dx
   140015c75:	rex
   140015c76:	rex
   140015c77:	rex.WRB
   140015c78:	rex.RB
   140015c79:	rex.B
   140015c7a:	pop    r8
   140015c7c:	push   rax
   140015c7d:	rex.RB
   140015c7e:	push   r14
   140015c80:	push   rcx
   140015c81:	rex.WXB
   140015c82:	gs jns 0x140015cca
   140015c85:	jbe    0x140015cec
   140015c87:	outs   dx,BYTE PTR ds:[rsi]
   140015c88:	je     0x140015cca
   140015c8a:	rex
   140015c8b:	rex pop rdx
   140015c8d:	add    BYTE PTR [rsi+0xf],ah
   140015c90:	(bad)  
   140015c91:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140015c95:	gs ins BYTE PTR es:[rdi],dx
   140015c97:	gs (bad) 
   140015c99:	jae    0x140015d00
   140015c9b:	rex.RB jbe 0x140015d03
   140015c9e:	outs   dx,BYTE PTR ds:[rsi]
   140015c9f:	je     0x140015ce1
   140015ca1:	push   rcx
   140015ca2:	push   rdi
   140015ca3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015cab:	rex.RB
   140015cac:	rex.B
   140015cad:	pop    r8
   140015caf:	push   rax
   140015cb0:	rex.RB
   140015cb1:	push   r14
   140015cb3:	push   rcx
   140015cb4:	rex.WXB
   140015cb5:	gs jns 0x140015cfd
   140015cb8:	jbe    0x140015d1f
   140015cba:	outs   dx,BYTE PTR ds:[rsi]
   140015cbb:	je     0x140015cfd
   140015cbd:	rex
   140015cbe:	rex pop rdx
   140015cc0:	add    BYTE PTR [rax],al
   140015cc2:	mov    WORD PTR [rbx],cs
   140015cc4:	(bad)  
   140015cc5:	outs   dx,WORD PTR ds:[rsi]
   140015cc7:	movsxd esi,DWORD PTR [rbp+0x73]
   140015cca:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140015ccc:	rex.RB jbe 0x140015d34
   140015ccf:	outs   dx,BYTE PTR ds:[rsi]
   140015cd0:	je     0x140015d12
   140015cd2:	push   rcx
   140015cd3:	rex.WR (bad) 
   140015cd5:	(bad)  
   140015cd6:	gs ins BYTE PTR es:[rdi],dx
   140015cd8:	rex
   140015cd9:	rex
   140015cda:	rex.WRB
   140015cdb:	rex.RB
   140015cdc:	rex.B
   140015cdd:	pop    r8
   140015cdf:	push   rax
   140015ce0:	rex.RB
   140015ce1:	push   r14
   140015ce3:	push   rcx
   140015ce4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140015ce6:	movsxd esi,DWORD PTR [rbp+0x73]
   140015ce9:	rex.RB jbe 0x140015d51
   140015cec:	outs   dx,BYTE PTR ds:[rsi]
   140015ced:	je     0x140015d2f
   140015cef:	rex
   140015cf0:	rex pop rdx
   140015cf2:	add    BYTE PTR [rax],al
   140015cf4:	mov    cl,0xb
   140015cf6:	(bad)  
   140015cf7:	outs   dx,WORD PTR ds:[rsi]
   140015cf9:	movsxd esi,DWORD PTR [rbp+0x73]
   140015cfc:	rex.WRXB jne 0x140015d73
   140015cff:	rex.RB jbe 0x140015d67
   140015d02:	outs   dx,BYTE PTR ds:[rsi]
   140015d03:	je     0x140015d45
   140015d05:	push   rcx
   140015d06:	rex.WR (bad) 
   140015d08:	(bad)  
   140015d09:	gs ins BYTE PTR es:[rdi],dx
   140015d0b:	rex
   140015d0c:	rex
   140015d0d:	rex.WRB
   140015d0e:	rex.RB
   140015d0f:	rex.B
   140015d10:	pop    r8
   140015d12:	push   rax
   140015d13:	rex.RB
   140015d14:	push   r14
   140015d16:	push   rcx
   140015d17:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140015d19:	movsxd esi,DWORD PTR [rbp+0x73]
   140015d1c:	rex.RB jbe 0x140015d84
   140015d1f:	outs   dx,BYTE PTR ds:[rsi]
   140015d20:	je     0x140015d62
   140015d22:	rex
   140015d23:	rex pop rdx
   140015d25:	add    BYTE PTR [rdx+rcx*1+0x746e653f],dh
   140015d2c:	gs jb  0x140015d74
   140015d2f:	jbe    0x140015d96
   140015d31:	outs   dx,BYTE PTR ds:[rsi]
   140015d32:	je     0x140015d74
   140015d34:	push   rcx
   140015d35:	push   rdi
   140015d36:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015d3e:	rex.RB
   140015d3f:	rex.B
   140015d40:	pop    r8
   140015d42:	push   rax
   140015d43:	rex.RB
   140015d44:	push   r14
   140015d46:	push   rcx
   140015d47:	rex.RB jbe 0x140015daf
   140015d4a:	outs   dx,BYTE PTR ds:[rsi]
   140015d4b:	je     0x140015d8d
   140015d4d:	rex
   140015d4e:	rex pop rdx
   140015d50:	add    BYTE PTR [rax],al
   140015d52:	cdq    
   140015d53:	(bad)  
   140015d55:	ins    BYTE PTR es:[rdi],dx
   140015d56:	gs (bad) 
   140015d58:	jbe    0x140015dbf
   140015d5a:	rex.RB jbe 0x140015dc2
   140015d5d:	outs   dx,BYTE PTR ds:[rsi]
   140015d5e:	je     0x140015da0
   140015d60:	push   rcx
   140015d61:	push   rdi
   140015d62:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015d6a:	rex.RB
   140015d6b:	rex.B
   140015d6c:	pop    r8
   140015d6e:	push   rax
   140015d6f:	rex.RB
   140015d70:	push   r14
   140015d72:	push   rcx
   140015d73:	rex.RB jbe 0x140015ddb
   140015d76:	outs   dx,BYTE PTR ds:[rsi]
   140015d77:	je     0x140015db9
   140015d79:	rex
   140015d7a:	rex pop rdx
   140015d7c:	add    BYTE PTR [rax],al
   140015d7e:	pop    rsi
   140015d7f:	adc    bh,BYTE PTR [rdi]
   140015d81:	jo     0x140015de4
   140015d83:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140015d8a:	je     0x140015dcc
   140015d8c:	push   rcx
   140015d8d:	rex.WR (bad) 
   140015d8f:	(bad)  
   140015d90:	gs ins BYTE PTR es:[rdi],dx
   140015d92:	rex
   140015d93:	rex
   140015d94:	rex.WRB
   140015d95:	rex.RB
   140015d96:	rex.B
   140015d97:	pop    r8
   140015d99:	push   rax
   140015d9a:	rex.RB
   140015d9b:	push   r14
   140015d9d:	push   rcx
   140015d9e:	push   rax
   140015d9f:	(bad)  
   140015da0:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140015da7:	je     0x140015de9
   140015da9:	rex
   140015daa:	rex pop rdx
   140015dac:	add    BYTE PTR [rax],al
   140015dae:	mov    ecx,0x6f6d3f11
   140015db3:	jbe    0x140015e1a
   140015db5:	rex.RB jbe 0x140015e1d
   140015db8:	outs   dx,BYTE PTR ds:[rsi]
   140015db9:	je     0x140015dfb
   140015dbb:	push   rcx
   140015dbc:	push   rdi
   140015dbd:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015dc5:	rex.RB
   140015dc6:	rex.B
   140015dc7:	pop    r8
   140015dc9:	push   rax
   140015dca:	rex.RB
   140015dcb:	push   r14
   140015dcd:	push   rcx
   140015dce:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140015dd0:	jbe    0x140015e37
   140015dd2:	rex.RB jbe 0x140015e3a
   140015dd5:	outs   dx,BYTE PTR ds:[rsi]
   140015dd6:	je     0x140015e18
   140015dd8:	rex
   140015dd9:	rex pop rdx
   140015ddb:	add    BYTE PTR [rax+0x65723f15],ah
   140015de1:	jae    0x140015e4c
   140015de3:	jp     0x140015e4a
   140015de5:	rex.RB jbe 0x140015e4d
   140015de8:	outs   dx,BYTE PTR ds:[rsi]
   140015de9:	je     0x140015e2b
   140015deb:	push   rcx
   140015dec:	push   rdi
   140015ded:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015df5:	rex.RB
   140015df6:	rex.B
   140015df7:	pop    r8
   140015df9:	push   rax
   140015dfa:	rex.RB
   140015dfb:	push   r14
   140015dfd:	push   rcx
   140015dfe:	push   rdx
   140015dff:	gs jae 0x140015e6b
   140015e02:	jp     0x140015e69
   140015e04:	rex.RB jbe 0x140015e6c
   140015e07:	outs   dx,BYTE PTR ds:[rsi]
   140015e08:	je     0x140015e4a
   140015e0a:	rex
   140015e0b:	rex pop rdx
   140015e0d:	add    BYTE PTR [rbx],dl
   140015e0f:	(bad)  
   140015e10:	(bad)  
   140015e11:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140015e15:	gs rex.RB jbe 0x140015e7e
   140015e19:	outs   dx,BYTE PTR ds:[rsi]
   140015e1a:	je     0x140015e5c
   140015e1c:	push   rcx
   140015e1d:	push   rdi
   140015e1e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015e26:	rex.RB
   140015e27:	rex.B
   140015e28:	pop    r8
   140015e2a:	push   rax
   140015e2b:	rex.RB
   140015e2c:	push   r14
   140015e2e:	push   rcx
   140015e2f:	rex.XB ins BYTE PTR es:[rdi],dx
   140015e31:	outs   dx,DWORD PTR ds:[rsi]
   140015e32:	jae    0x140015e99
   140015e34:	rex.RB jbe 0x140015e9c
   140015e37:	outs   dx,BYTE PTR ds:[rsi]
   140015e38:	je     0x140015e7a
   140015e3a:	rex
   140015e3b:	rex pop rdx
   140015e3d:	add    BYTE PTR [rbx+0x6f633f07],cl
   140015e43:	outs   dx,BYTE PTR ds:[rsi]
   140015e44:	je     0x140015eab
   140015e46:	js     0x140015ebc
   140015e48:	rex.WRB
   140015e49:	outs   dx,BYTE PTR gs:[rsi]
   140015e4b:	jne    0x140015e92
   140015e4d:	jbe    0x140015eb4
   140015e4f:	outs   dx,BYTE PTR ds:[rsi]
   140015e50:	je     0x140015e92
   140015e52:	push   rcx
   140015e53:	rex.WR (bad) 
   140015e55:	(bad)  
   140015e56:	gs ins BYTE PTR es:[rdi],dx
   140015e58:	rex
   140015e59:	rex
   140015e5a:	rex.WRB
   140015e5b:	rex.RB
   140015e5c:	rex.B
   140015e5d:	pop    r8
   140015e5f:	push   rax
   140015e60:	rex.RB
   140015e61:	push   r14
   140015e63:	push   rcx
   140015e64:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015e66:	outs   dx,BYTE PTR ds:[rsi]
   140015e67:	je     0x140015ece
   140015e69:	js     0x140015edf
   140015e6b:	rex.WRB
   140015e6c:	outs   dx,BYTE PTR gs:[rsi]
   140015e6e:	jne    0x140015eb5
   140015e70:	jbe    0x140015ed7
   140015e72:	outs   dx,BYTE PTR ds:[rsi]
   140015e73:	je     0x140015eb5
   140015e75:	rex
   140015e76:	rex pop rdx
   140015e78:	add    BYTE PTR [rax],al
   140015e7a:	xor    BYTE PTR [rsi],bl
   140015e7c:	(bad)  
   140015e7d:	je     0x140015ee0
   140015e7f:	(bad)  
   140015e80:	ins    BYTE PTR es:[rdi],dx
   140015e81:	gs je  0x140015ec9
   140015e84:	jbe    0x140015eeb
   140015e86:	outs   dx,BYTE PTR ds:[rsi]
   140015e87:	je     0x140015ec9
   140015e89:	push   rcx
   140015e8a:	push   rdi
   140015e8b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015e93:	rex.RB
   140015e94:	rex.B
   140015e95:	pop    r8
   140015e97:	push   rax
   140015e98:	rex.RB
   140015e99:	push   r14
   140015e9b:	push   rcx
   140015e9c:	push   rsp
   140015e9d:	(bad)  
   140015e9e:	(bad)  
   140015e9f:	ins    BYTE PTR es:[rdi],dx
   140015ea0:	gs je  0x140015ee8
   140015ea3:	jbe    0x140015f0a
   140015ea5:	outs   dx,BYTE PTR ds:[rsi]
   140015ea6:	je     0x140015ee8
   140015ea8:	rex
   140015ea9:	rex pop rdx
   140015eab:	add    bl,dl
   140015ead:	add    al,0x3f
   140015eaf:	(bad)  
   140015eb0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140015eb4:	outs   dx,BYTE PTR ds:[rsi]
   140015eb5:	rex.RB jbe 0x140015f1d
   140015eb8:	outs   dx,BYTE PTR ds:[rsi]
   140015eb9:	je     0x140015efb
   140015ebb:	push   rcx
   140015ebc:	push   rdi
   140015ebd:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015ec5:	rex.RB
   140015ec6:	rex.B
   140015ec7:	pop    r8
   140015ec9:	push   rax
   140015eca:	rex.RB
   140015ecb:	push   r14
   140015ecd:	push   rcx
   140015ece:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140015ed3:	outs   dx,BYTE PTR ds:[rsi]
   140015ed4:	rex.RB jbe 0x140015f3c
   140015ed7:	outs   dx,BYTE PTR ds:[rsi]
   140015ed8:	je     0x140015f1a
   140015eda:	rex
   140015edb:	rex pop rdx
   140015edd:	add    BYTE PTR [rax],bl
   140015edf:	or     bh,BYTE PTR [rdi]
   140015ee1:	fs jb  0x140015f45
   140015ee4:	rex.RB outs dx,BYTE PTR ds:[esi]
   140015ee7:	je     0x140015f4e
   140015ee9:	jb     0x140015f30
   140015eeb:	jbe    0x140015f52
   140015eed:	outs   dx,BYTE PTR ds:[rsi]
   140015eee:	je     0x140015f30
   140015ef0:	push   rcx
   140015ef1:	push   rdi
   140015ef2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015efa:	rex.RB
   140015efb:	rex.B
   140015efc:	pop    r8
   140015efe:	push   rax
   140015eff:	rex.RB
   140015f00:	push   r14
   140015f02:	push   rcx
   140015f03:	rex.R jb 0x140015f67
   140015f06:	rex.RB outs dx,BYTE PTR ds:[esi]
   140015f09:	je     0x140015f70
   140015f0b:	jb     0x140015f52
   140015f0d:	jbe    0x140015f74
   140015f0f:	outs   dx,BYTE PTR ds:[rsi]
   140015f10:	je     0x140015f52
   140015f12:	rex
   140015f13:	rex pop rdx
   140015f15:	add    BYTE PTR [rdx],dh
   140015f17:	or     bh,BYTE PTR [rdi]
   140015f19:	fs jb  0x140015f7d
   140015f1c:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140015f1f:	jbe    0x140015f86
   140015f21:	rex.RB jbe 0x140015f89
   140015f24:	outs   dx,BYTE PTR ds:[rsi]
   140015f25:	je     0x140015f67
   140015f27:	push   rcx
   140015f28:	push   rdi
   140015f29:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015f31:	rex.RB
   140015f32:	rex.B
   140015f33:	pop    r8
   140015f35:	push   rax
   140015f36:	rex.RB
   140015f37:	push   r14
   140015f39:	push   rcx
   140015f3a:	rex.R jb 0x140015f9e
   140015f3d:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140015f40:	jbe    0x140015fa7
   140015f42:	rex.RB jbe 0x140015faa
   140015f45:	outs   dx,BYTE PTR ds:[rsi]
   140015f46:	je     0x140015f88
   140015f48:	rex
   140015f49:	rex pop rdx
   140015f4b:	add    BYTE PTR [rdx+rcx*1],ah
   140015f4e:	(bad)  
   140015f4f:	fs jb  0x140015fb3
   140015f52:	addr32 rex.WR
   140015f54:	gs (bad) 
   140015f56:	jbe    0x140015fbd
   140015f58:	rex.RB jbe 0x140015fc0
   140015f5b:	outs   dx,BYTE PTR ds:[rsi]
   140015f5c:	je     0x140015f9e
   140015f5e:	push   rcx
   140015f5f:	push   rdi
   140015f60:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015f68:	rex.RB
   140015f69:	rex.B
   140015f6a:	pop    r8
   140015f6c:	push   rax
   140015f6d:	rex.RB
   140015f6e:	push   r14
   140015f70:	push   rcx
   140015f71:	rex.R jb 0x140015fd5
   140015f74:	addr32 rex.WR
   140015f76:	gs (bad) 
   140015f78:	jbe    0x140015fdf
   140015f7a:	rex.RB jbe 0x140015fe2
   140015f7d:	outs   dx,BYTE PTR ds:[rsi]
   140015f7e:	je     0x140015fc0
   140015f80:	rex
   140015f81:	rex pop rdx
   140015f83:	add    BYTE PTR [rbp+0xa],ch
   140015f86:	(bad)  
   140015f87:	fs jb  0x140015ff9
   140015f8a:	jo     0x140015fd1
   140015f8c:	jbe    0x140015ff3
   140015f8e:	outs   dx,BYTE PTR ds:[rsi]
   140015f8f:	je     0x140015fd1
   140015f91:	push   rcx
   140015f92:	push   rdi
   140015f93:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015f9b:	rex.RB
   140015f9c:	rex.B
   140015f9d:	pop    r8
   140015f9f:	push   rax
   140015fa0:	rex.RB
   140015fa1:	push   r14
   140015fa3:	push   rcx
   140015fa4:	rex.R jb 0x140016016
   140015fa7:	jo     0x140015fee
   140015fa9:	jbe    0x140016010
   140015fab:	outs   dx,BYTE PTR ds:[rsi]
   140015fac:	je     0x140015fee
   140015fae:	rex
   140015faf:	rex pop rdx
   140015fb1:	add    BYTE PTR [rbp+0x1c],bl
   140015fb4:	(bad)  
   140015fb5:	jae    0x14001601f
   140015fb7:	outs   dx,DWORD PTR ds:[rsi]
   140015fb8:	ja     0x140015fff
   140015fba:	jbe    0x140016021
   140015fbc:	outs   dx,BYTE PTR ds:[rsi]
   140015fbd:	je     0x140015fff
   140015fbf:	push   rcx
   140015fc0:	push   rdi
   140015fc1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015fc9:	rex.RB
   140015fca:	rex.B
   140015fcb:	pop    r8
   140015fcd:	push   rax
   140015fce:	rex.RB
   140015fcf:	push   r14
   140015fd1:	push   rcx
   140015fd2:	push   rbx
   140015fd3:	push   0x7645776f
   140015fd8:	outs   dx,BYTE PTR gs:[rsi]
   140015fda:	je     0x14001601c
   140015fdc:	rex
   140015fdd:	rex pop rdx
   140015fdf:	add    BYTE PTR [rbp+0x69683f0c],ah
   140015fe5:	fs gs rex.RB jbe 0x14001604f
   140015fea:	outs   dx,BYTE PTR ds:[rsi]
   140015feb:	je     0x14001602d
   140015fed:	push   rcx
   140015fee:	push   rdi
   140015fef:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140015ff7:	rex.RB
   140015ff8:	rex.B
   140015ff9:	pop    r8
   140015ffb:	push   rax
   140015ffc:	rex.RB
   140015ffd:	push   r14
   140015fff:	push   rcx
   140016000:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   140016009:	rex
   14001600a:	rex
   14001600b:	rex pop rdx
   14001600d:	add    bh,al
   14001600f:	adc    DWORD PTR [rdi],edi
   140016011:	outs   dx,BYTE PTR ds:[rsi]
   140016012:	(bad)  
   140016013:	je     0x14001607e
   140016015:	jbe    0x14001607c
   140016017:	rex.RB jbe 0x14001607f
   14001601a:	outs   dx,BYTE PTR ds:[rsi]
   14001601b:	je     0x14001605d
   14001601d:	push   rcx
   14001601e:	push   rdi
   14001601f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016027:	rex.RB
   140016028:	rex.B
   140016029:	pop    r15
   14001602b:	rex.WRX
   14001602c:	rex.B
   14001602d:	rex.RB
   14001602e:	rex.X push rsi
   140016030:	push   rcx
   140016031:	rex.X jns 0x1400160a8
   140016034:	gs rex.B jb 0x1400160aa
   140016038:	(bad)  
   140016039:	jns    0x14001607b
   14001603b:	rex push rax
   14001603d:	rex.RB
   14001603e:	pop    r8
   140016040:	push   rax
   140016041:	rex.RB
   140016042:	rex.B
   140016043:	rex.WX
   140016044:	rex pop rdx
   140016046:	add    BYTE PTR [rax],al
   140016048:	jl     0x140016050
   14001604a:	(bad)  
   14001604b:	movsxd ebp,DWORD PTR [rax+0x61]
   14001604e:	outs   dx,BYTE PTR ds:[rsi]
   14001604f:	addr32 gs rex.RB jbe 0x1400160b9
   140016054:	outs   dx,BYTE PTR ds:[rsi]
   140016055:	je     0x140016097
   140016057:	push   rcx
   140016058:	rex.WR (bad) 
   14001605a:	(bad)  
   14001605b:	gs ins BYTE PTR es:[rdi],dx
   14001605d:	rex
   14001605e:	rex
   14001605f:	rex.WRB
   140016060:	rex.RB
   140016061:	rex.B
   140016062:	pop    r8
   140016064:	push   rax
   140016065:	rex.RB
   140016066:	push   r14
   140016068:	push   rcx
   140016069:	rex.RB jbe 0x1400160d1
   14001606c:	outs   dx,BYTE PTR ds:[rsi]
   14001606d:	je     0x1400160af
   14001606f:	rex
   140016070:	rex pop rdx
   140016072:	add    BYTE PTR [rax],al
   140016074:	jns    0x140016083
   140016076:	(bad)  
   140016077:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   14001607e:	je     0x1400160e8
   140016080:	outs   dx,DWORD PTR ds:[rsi]
   140016081:	fs rex.RB jbe 0x1400160ea
   140016085:	outs   dx,BYTE PTR ds:[rsi]
   140016086:	je     0x1400160c8
   140016088:	push   rcx
   140016089:	push   rdi
   14001608a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016092:	rex.RB
   140016093:	rex.B
   140016094:	pop    r8
   140016096:	push   rax
   140016097:	rex.RB
   140016098:	push   r14
   14001609a:	push   rcx
   14001609b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001609d:	jo     0x140016114
   14001609f:	je     0x1400160ee
   1400160a1:	gs je  0x14001610c
   1400160a4:	outs   dx,DWORD PTR ds:[rsi]
   1400160a5:	fs rex.RB jbe 0x14001610e
   1400160a9:	outs   dx,BYTE PTR ds:[rsi]
   1400160aa:	je     0x1400160ec
   1400160ac:	rex
   1400160ad:	rex pop rdx
   1400160af:	add    BYTE PTR [rcx+0x6e693f0d],cl
   1400160b5:	jo     0x14001612c
   1400160b7:	je     0x140016106
   1400160b9:	gs je  0x140016124
   1400160bc:	outs   dx,DWORD PTR ds:[rsi]
   1400160bd:	fs push rcx
   1400160bf:	jne    0x140016126
   1400160c1:	jb     0x14001613c
   1400160c3:	rex push rcx
   1400160c5:	push   rdi
   1400160c6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400160ce:	rex.RB
   1400160cf:	rex.X
   1400160d0:	rex.B (bad) 
   1400160d2:	push   r14
   1400160d4:	push   rcx
   1400160d5:	push   rsi
   1400160d6:	(bad)  
   1400160d7:	jb     0x140016142
   1400160d9:	(bad)  
   1400160da:	outs   dx,BYTE PTR ds:[rsi]
   1400160db:	je     0x14001611d
   1400160dd:	rex push rdi
   1400160df:	xor    al,0x49
   1400160e1:	outs   dx,BYTE PTR ds:[rsi]
   1400160e2:	jo     0x140016159
   1400160e4:	je     0x140016133
   1400160e6:	gs je  0x140016151
   1400160e9:	outs   dx,DWORD PTR ds:[rsi]
   1400160ea:	fs push rcx
   1400160ec:	jne    0x140016153
   1400160ee:	jb     0x140016169
   1400160f0:	rex push rcx
   1400160f2:	je     0x140016134
   1400160f4:	rex
   1400160f5:	rex pop rdx
   1400160f7:	add    BYTE PTR [rsi+0x6f663f0b],bl
   1400160fd:	movsxd esi,DWORD PTR [rbp+0x73]
   140016100:	rex.WRX
   140016101:	gs js  0x140016178
   140016104:	push   rax
   140016105:	jb     0x14001616c
   140016107:	jbe    0x14001614c
   140016109:	push   0x40646c69
   14001610e:	push   rcx
   14001610f:	rex.WR (bad) 
   140016111:	(bad)  
   140016112:	gs ins BYTE PTR es:[rdi],dx
   140016114:	rex
   140016115:	rex
   140016116:	rex.WRB
   140016117:	rex.RB
   140016118:	rex.B
   140016119:	pop    r15
   14001611b:	rex.WRX pop rdi
   14001611d:	rex.WRX
   14001611e:	rex pop rdx
   140016120:	add    BYTE PTR [rax],al
   140016122:	(bad)  
   140016123:	or     DWORD PTR [rdi],edi
   140016125:	fs gs jbe 0x14001617d
   140016129:	jns    0x14001619b
   14001612b:	gs rex push rcx
   14001612e:	push   rdi
   14001612f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016137:	rex.RB
   140016138:	rex.X
   140016139:	rex.B
   14001613a:	rex.W pop rax
   14001613c:	pop    rdx
   14001613d:	add    BYTE PTR [rdi+0x12],cl
   140016140:	(bad)  
   140016141:	jo     0x1400161a4
   140016143:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   14001614a:	outs   dx,BYTE PTR ds:[rsi]
   14001614b:	gs rex push rcx
   14001614e:	push   rdi
   14001614f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016157:	rex.RB
   140016158:	rex.X
   140016159:	push   r8
   14001615b:	rex.RB
   14001615c:	push   r14
   14001615e:	push   rcx
   14001615f:	push   rax
   140016160:	(bad)  
   140016161:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   140016168:	outs   dx,BYTE PTR ds:[rsi]
   140016169:	gs rex
   14001616b:	rex pop rax
   14001616d:	pop    rdx
   14001616e:	add    BYTE PTR [rax],al
   140016170:	fcom   DWORD PTR [rax]
   140016172:	(bad)  
   140016173:	ins    DWORD PTR es:[rdi],dx
   140016174:	gs je  0x1400161e9
   140016177:	imul   esp,DWORD PTR [rbx+0x40],0x64695751
   14001617e:	addr32 gs je 0x1400161c2
   140016182:	rex
   140016183:	rex.WRB
   140016184:	rex.RB
   140016185:	rex.X
   140016186:	rex.B
   140016187:	rex.W push rdi
   140016189:	xor    al,0x50
   14001618b:	(bad)  
   14001618c:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   140016193:	movsxd esp,DWORD PTR [rbp+0x4d]
   140016196:	gs je  0x14001620b
   140016199:	imul   esp,DWORD PTR [rbx+0x40],0x69615051
   1400161a0:	outs   dx,BYTE PTR ds:[rsi]
   1400161a1:	je     0x1400161e7
   1400161a3:	gs jbe 0x14001620f
   1400161a6:	movsxd esp,DWORD PTR [rbp+0x40]
   1400161a9:	rex
   1400161aa:	rex pop rdx
   1400161ac:	add    BYTE PTR [rax],al
   1400161ae:	rex.X or eax,0x696e693f
   1400161b4:	je     0x140016206
   1400161b6:	(bad)  
   1400161b7:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   1400161be:	push   rdi
   1400161bf:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400161c7:	rex.RB
   1400161c8:	rex.X
   1400161c9:	pop    r8
   1400161cb:	push   rax
   1400161cc:	rex.RB
   1400161cd:	push   r14
   1400161cf:	push   rcx
   1400161d0:	push   rax
   1400161d1:	(bad)  
   1400161d2:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   1400161d9:	rex pop rdx
   1400161db:	add    al,dh
   1400161dd:	adc    al,0x3f
   1400161df:	jb     0x140016246
   1400161e1:	imul   esi,DWORD PTR fs:[rdx+0x65],0x64657463
   1400161e9:	rex push rcx
   1400161eb:	push   rdi
   1400161ec:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400161f4:	rex.RB
   1400161f5:	rex.X
   1400161f6:	push   r8
   1400161f8:	rex.RB
   1400161f9:	push   r14
   1400161fb:	push   rcx
   1400161fc:	push   rax
   1400161fd:	(bad)  
   1400161fe:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   140016205:	movsxd esp,DWORD PTR [rbp+0x40]
   140016208:	rex push rax
   14001620a:	rex.RB
   14001620b:	push   r14
   14001620d:	push   rcx
   14001620e:	push   rax
   14001620f:	outs   dx,DWORD PTR ds:[rsi]
   140016210:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140016217:	add    BYTE PTR [rcx],bh
   140016219:	sbb    al,0x3f
   14001621b:	jae    0x140016285
   14001621d:	(bad)  
   14001621e:	jb     0x140016285
   140016220:	fs push rax
   140016222:	(bad)  
   140016223:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   14001622a:	push   rdi
   14001622b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016233:	rex.RB
   140016234:	rex.X
   140016235:	push   r8
   140016237:	rex.RB
   140016238:	push   r14
   14001623a:	push   rcx
   14001623b:	push   rax
   14001623c:	(bad)  
   14001623d:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140016244:	pop    rax
   140016245:	pop    rdx
   140016246:	add    BYTE PTR [rax],al
   140016248:	iret   
   140016249:	adc    BYTE PTR [rdi],bh
   14001624b:	ins    DWORD PTR es:[rdi],dx
   14001624c:	gs je  0x1400162b0
   14001624f:	rex.WRXB (bad) 
   140016251:	push   0x65
   140016253:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140016257:	push   rdi
   140016258:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016260:	rex.RB
   140016261:	rex.X
   140016262:	push   r8
   140016264:	rex.RB
   140016265:	rex.X push rbp
   140016267:	push   rcx
   140016268:	rex.WRB
   140016269:	gs je  0x1400162cd
   14001626c:	rex.WRXB (bad) 
   14001626e:	push   0x65
   140016270:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016274:	pop    rax
   140016275:	pop    rdx
   140016276:	add    BYTE PTR [rax],al
   140016278:	rex.X adc al,0x3f
   14001627b:	jno    0x1400162f1
   14001627d:	pop    rdi
   14001627e:	ins    DWORD PTR es:[rdi],dx
   14001627f:	gs je  0x1400162e3
   140016282:	movsxd esp,DWORD PTR [rcx+0x73]
   140016285:	je     0x1400162c7
   140016287:	push   rcx
   140016288:	push   rdi
   140016289:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016291:	rex.RB
   140016292:	rex.B
   140016293:	push   r8
   140016295:	rex.RB
   140016296:	pop    r8
   140016298:	push   rax
   140016299:	rex.RB
   14001629a:	rex.X
   14001629b:	rex.R
   14001629c:	rex pop rdx
   14001629e:	add    BYTE PTR [rax],al
   1400162a0:	mov    eax,0x74713f13
   1400162a5:	pop    rdi
   1400162a6:	ins    DWORD PTR es:[rdi],dx
   1400162a7:	gs je  0x14001630b
   1400162aa:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400162ad:	ins    BYTE PTR es:[rdi],dx
   1400162ae:	rex push rcx
   1400162b0:	push   rdi
   1400162b1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400162b9:	rex.RB
   1400162ba:	rex.B
   1400162bb:	rex.B
   1400162bc:	rex.W push rdi
   1400162be:	xor    al,0x43
   1400162c0:	(bad)  
   1400162c1:	ins    BYTE PTR es:[rdi],dx
   1400162c2:	ins    BYTE PTR es:[rdi],dx
   1400162c3:	rex push rcx
   1400162c5:	rex.WRB
   1400162c6:	gs je  0x14001632a
   1400162c9:	rex.WRXB (bad) 
   1400162cb:	push   0x65
   1400162cd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400162d1:	rex.W push rax
   1400162d3:	rex.RB
   1400162d4:	push   r8
   1400162d6:	rex.RB
   1400162d7:	pop    r8
   1400162d9:	rex pop rdx
   1400162db:	add    bl,bh
   1400162dd:	or     bh,BYTE PTR [rdi]
   1400162df:	gs jbe 0x140016347
   1400162e2:	outs   dx,BYTE PTR ds:[rsi]
   1400162e3:	je     0x140016325
   1400162e5:	push   rcx
   1400162e6:	push   rdi
   1400162e7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400162ef:	rex.RB
   1400162f0:	rex.B
   1400162f1:	pop    r15
   1400162f3:	rex.WRX push rax
   1400162f5:	rex.RB
   1400162f6:	push   r14
   1400162f8:	push   rcx
   1400162f9:	rex.RB jbe 0x140016361
   1400162fc:	outs   dx,BYTE PTR ds:[rsi]
   1400162fd:	je     0x14001633f
   1400162ff:	rex
   140016300:	rex pop rdx
   140016302:	add    BYTE PTR [rax],al
   140016304:	ret    
   140016305:	sbb    al,0x3f
   140016307:	jae    0x140016372
   140016309:	jp     0x140016370
   14001630b:	imul   rbp,QWORD PTR [rsi+0x74],0x69575140
   140016313:	fs addr32 gs je 0x140016358
   140016318:	rex push rbp
   14001631a:	rex.RB
   14001631b:	rex.X
   14001631c:	rex.B (bad) 
   14001631e:	push   r14
   140016320:	push   rcx
   140016321:	push   rbx
   140016322:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016329:	add    BYTE PTR [rdx],bl
   14001632b:	adc    DWORD PTR [rdi],edi
   14001632d:	ins    DWORD PTR es:[rdi],dx
   14001632e:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140016335:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001633c:	rex push rcx
   14001633e:	push   rdi
   14001633f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140016347:	rex.RB
   140016348:	rex.X
   140016349:	rex.B (bad) 
   14001634b:	push   r14
   14001634d:	push   rcx
   14001634e:	push   rbx
   14001634f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016356:	add    BYTE PTR [rax],al
   140016358:	mov    BYTE PTR [rdi+rdi*1],cl
   14001635b:	push   0x68676965
   140016360:	je     0x1400163a8
   140016362:	outs   dx,DWORD PTR ds:[rsi]
   140016363:	jb     0x1400163bc
   140016365:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   14001636d:	fs addr32 gs je 0x1400163b2
   140016372:	rex push rbp
   140016374:	rex.RB
   140016375:	rex.X
   140016376:	rex.B
   140016377:	rex.W
   140016378:	rex.W
   140016379:	rex pop rdx
   14001637b:	add    BYTE PTR [rsi+0x6f6d3f11],al
   140016381:	jne    0x1400163f6
   140016383:	gs push rax
   140016385:	jb     0x1400163ec
   140016387:	jae    0x1400163fc
   140016389:	rex.RB jbe 0x1400163f1
   14001638c:	outs   dx,BYTE PTR ds:[rsi]
   14001638d:	je     0x1400163cf
   14001638f:	push   rcx
   140016390:	push   rdi
   140016391:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016399:	rex.RB
   14001639a:	rex.B
   14001639b:	pop    r8
   14001639d:	push   rax
   14001639e:	rex.RB
   14001639f:	push   r14
   1400163a1:	push   rcx
   1400163a2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400163a4:	jne    0x140016419
   1400163a6:	gs rex.RB jbe 0x14001640f
   1400163aa:	outs   dx,BYTE PTR ds:[rsi]
   1400163ab:	je     0x1400163ed
   1400163ad:	rex
   1400163ae:	rex pop rdx
   1400163b0:	add    BYTE PTR [rax],al
   1400163b2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400163b3:	adc    DWORD PTR [rdi],edi
   1400163b5:	ins    DWORD PTR es:[rdi],dx
   1400163b6:	outs   dx,DWORD PTR ds:[rsi]
   1400163b7:	jne    0x14001642c
   1400163b9:	gs push rdx
   1400163bb:	gs ins BYTE PTR es:[rdi],dx
   1400163bd:	gs (bad) 
   1400163bf:	jae    0x140016426
   1400163c1:	rex.RB jbe 0x140016429
   1400163c4:	outs   dx,BYTE PTR ds:[rsi]
   1400163c5:	je     0x140016407
   1400163c7:	push   rcx
   1400163c8:	push   rdi
   1400163c9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400163d1:	rex.RB
   1400163d2:	rex.B
   1400163d3:	pop    r8
   1400163d5:	push   rax
   1400163d6:	rex.RB
   1400163d7:	push   r14
   1400163d9:	push   rcx
   1400163da:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400163dc:	jne    0x140016451
   1400163de:	gs rex.RB jbe 0x140016447
   1400163e2:	outs   dx,BYTE PTR ds:[rsi]
   1400163e3:	je     0x140016425
   1400163e5:	rex
   1400163e6:	rex pop rdx
   1400163e8:	add    BYTE PTR [rax],al
   1400163ea:	adc    DWORD PTR fs:[rdi],edi
   1400163ed:	ins    DWORD PTR es:[rdi],dx
   1400163ee:	outs   dx,DWORD PTR ds:[rsi]
   1400163ef:	jne    0x140016464
   1400163f1:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400163f4:	jbe    0x14001645b
   1400163f6:	rex.RB jbe 0x14001645e
   1400163f9:	outs   dx,BYTE PTR ds:[rsi]
   1400163fa:	je     0x14001643c
   1400163fc:	push   rcx
   1400163fd:	push   rdi
   1400163fe:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016406:	rex.RB
   140016407:	rex.B
   140016408:	pop    r8
   14001640a:	push   rax
   14001640b:	rex.RB
   14001640c:	push   r14
   14001640e:	push   rcx
   14001640f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016411:	jne    0x140016486
   140016413:	gs rex.RB jbe 0x14001647c
   140016417:	outs   dx,BYTE PTR ds:[rsi]
   140016418:	je     0x14001645a
   14001641a:	rex
   14001641b:	rex pop rdx
   14001641d:	add    BYTE PTR [rcx+0xf],bl
   140016420:	(bad)  
   140016421:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140016425:	jb     0x14001648c
   140016427:	jae    0x14001649c
   140016429:	rex.RB jbe 0x140016491
   14001642c:	outs   dx,BYTE PTR ds:[rsi]
   14001642d:	je     0x14001646f
   14001642f:	push   rcx
   140016430:	push   rdi
   140016431:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016439:	rex.RB
   14001643a:	rex.B
   14001643b:	pop    r8
   14001643d:	push   rax
   14001643e:	rex.RB
   14001643f:	push   r14
   140016441:	push   rcx
   140016442:	rex.WXB
   140016443:	gs jns 0x14001648b
   140016446:	jbe    0x1400164ad
   140016448:	outs   dx,BYTE PTR ds:[rsi]
   140016449:	je     0x14001648b
   14001644b:	rex
   14001644c:	rex pop rdx
   14001644e:	add    BYTE PTR [rax],al
   140016450:	xchg   ebx,eax
   140016451:	or     edi,DWORD PTR [rdi]
   140016453:	outs   dx,WORD PTR ds:[rsi]
   140016455:	movsxd esi,DWORD PTR [rbp+0x73]
   140016458:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001645a:	rex.RB jbe 0x1400164c2
   14001645d:	outs   dx,BYTE PTR ds:[rsi]
   14001645e:	je     0x1400164a0
   140016460:	push   rcx
   140016461:	push   rdi
   140016462:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001646a:	rex.RB
   14001646b:	rex.B
   14001646c:	pop    r8
   14001646e:	push   rax
   14001646f:	rex.RB
   140016470:	push   r14
   140016472:	push   rcx
   140016473:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140016475:	movsxd esi,DWORD PTR [rbp+0x73]
   140016478:	rex.RB jbe 0x1400164e0
   14001647b:	outs   dx,BYTE PTR ds:[rsi]
   14001647c:	je     0x1400164be
   14001647e:	rex
   14001647f:	rex pop rdx
   140016481:	add    BYTE PTR [rcx+0x6f663f0b],bh
   140016487:	movsxd esi,DWORD PTR [rbp+0x73]
   14001648a:	rex.WRXB jne 0x140016501
   14001648d:	rex.RB jbe 0x1400164f5
   140016490:	outs   dx,BYTE PTR ds:[rsi]
   140016491:	je     0x1400164d3
   140016493:	push   rcx
   140016494:	push   rdi
   140016495:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001649d:	rex.RB
   14001649e:	rex.B
   14001649f:	pop    r8
   1400164a1:	push   rax
   1400164a2:	rex.RB
   1400164a3:	push   r14
   1400164a5:	push   rcx
   1400164a6:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400164a8:	movsxd esi,DWORD PTR [rbp+0x73]
   1400164ab:	rex.RB jbe 0x140016513
   1400164ae:	outs   dx,BYTE PTR ds:[rsi]
   1400164af:	je     0x1400164f1
   1400164b1:	rex
   1400164b2:	rex pop rdx
   1400164b4:	add    BYTE PTR [rax],al
   1400164b6:	js     0x1400164ca
   1400164b8:	(bad)  
   1400164b9:	jo     0x14001651c
   1400164bb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400164c2:	je     0x140016504
   1400164c4:	push   rcx
   1400164c5:	push   rdi
   1400164c6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400164ce:	rex.RB
   1400164cf:	rex.B
   1400164d0:	pop    r8
   1400164d2:	push   rax
   1400164d3:	rex.RB
   1400164d4:	push   r14
   1400164d6:	push   rcx
   1400164d7:	push   rax
   1400164d8:	(bad)  
   1400164d9:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400164e0:	je     0x140016522
   1400164e2:	rex
   1400164e3:	rex pop rdx
   1400164e5:	add    BYTE PTR [rdx+0x6f633f07],dl
   1400164eb:	outs   dx,BYTE PTR ds:[rsi]
   1400164ec:	je     0x140016553
   1400164ee:	js     0x140016564
   1400164f0:	rex.WRB
   1400164f1:	outs   dx,BYTE PTR gs:[rsi]
   1400164f3:	jne    0x14001653a
   1400164f5:	jbe    0x14001655c
   1400164f7:	outs   dx,BYTE PTR ds:[rsi]
   1400164f8:	je     0x14001653a
   1400164fa:	push   rcx
   1400164fb:	push   rdi
   1400164fc:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140016504:	rex.RB
   140016505:	rex.B
   140016506:	pop    r8
   140016508:	push   rax
   140016509:	rex.RB
   14001650a:	push   r14
   14001650c:	push   rcx
   14001650d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001650f:	outs   dx,BYTE PTR ds:[rsi]
   140016510:	je     0x140016577
   140016512:	js     0x140016588
   140016514:	rex.WRB
   140016515:	outs   dx,BYTE PTR gs:[rsi]
   140016517:	jne    0x14001655e
   140016519:	jbe    0x140016580
   14001651b:	outs   dx,BYTE PTR ds:[rsi]
   14001651c:	je     0x14001655e
   14001651e:	rex
   14001651f:	rex pop rdx
   140016521:	add    BYTE PTR [rsi+rax*1+0x6168633f],cl
   140016528:	outs   dx,BYTE PTR ds:[rsi]
   140016529:	addr32 gs rex.RB jbe 0x140016593
   14001652e:	outs   dx,BYTE PTR ds:[rsi]
   14001652f:	je     0x140016571
   140016531:	push   rcx
   140016532:	push   rdi
   140016533:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001653b:	rex.RB
   14001653c:	rex.B
   14001653d:	pop    r8
   14001653f:	push   rax
   140016540:	rex.RB
   140016541:	push   r14
   140016543:	push   rcx
   140016544:	rex.RB jbe 0x1400165ac
   140016547:	outs   dx,BYTE PTR ds:[rsi]
   140016548:	je     0x14001658a
   14001654a:	rex
   14001654b:	rex pop rdx
   14001654d:	add    BYTE PTR [rbx+rcx*1+0x636f663f],ah
   140016554:	jne    0x1400165c9
   140016556:	rex.WRX
   140016557:	gs js  0x1400165ce
   14001655a:	push   rax
   14001655b:	jb     0x1400165c2
   14001655d:	jbe    0x1400165a2
   14001655f:	push   0x40646c69
   140016564:	push   rcx
   140016565:	push   rdi
   140016566:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14001656e:	rex.RB
   14001656f:	rex.B
   140016570:	pop    r15
   140016572:	rex.WRX pop rdi
   140016574:	rex.WRX
   140016575:	rex pop rdx
   140016577:	add    BYTE PTR [rax+0x656d3f10],cl
   14001657d:	je     0x1400165e0
   14001657f:	rex.WRXB (bad) 
   140016581:	push   0x65
   140016583:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140016587:	rex.W
   140016588:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001658a:	js     0x1400165d8
   14001658c:	(bad)  
   14001658d:	jns    0x1400165fe
   14001658f:	jne    0x140016605
   140016591:	rex
   140016592:	rex push rbp
   140016594:	rex.RB
   140016595:	rex.X
   140016596:	push   r8
   140016598:	rex.RB
   140016599:	rex.X push rbp
   14001659b:	push   rcx
   14001659c:	rex.WRB
   14001659d:	gs je  0x140016601
   1400165a0:	rex.WRXB (bad) 
   1400165a2:	push   0x65
   1400165a4:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400165a8:	pop    rax
   1400165a9:	pop    rdx
   1400165aa:	add    BYTE PTR [rax],al
   1400165ac:	sti    
   1400165ad:	adc    edi,DWORD PTR [rdi]
   1400165af:	jno    0x140016625
   1400165b1:	pop    rdi
   1400165b2:	ins    DWORD PTR es:[rdi],dx
   1400165b3:	gs je  0x140016617
   1400165b6:	movsxd esp,DWORD PTR [rcx+0x73]
   1400165b9:	je     0x1400165fb
   1400165bb:	push   rcx
   1400165bc:	rex.W
   1400165bd:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400165bf:	js     0x14001660d
   1400165c1:	(bad)  
   1400165c2:	jns    0x140016633
   1400165c4:	jne    0x14001663a
   1400165c6:	rex
   1400165c7:	rex push rbp
   1400165c9:	rex.RB
   1400165ca:	rex.B
   1400165cb:	push   r8
   1400165cd:	rex.RB
   1400165ce:	pop    r8
   1400165d0:	push   rax
   1400165d1:	rex.RB
   1400165d2:	rex.X
   1400165d3:	rex.R
   1400165d4:	rex pop rdx
   1400165d6:	add    BYTE PTR [rax],al
   1400165d8:	jno    0x1400165ed
   1400165da:	(bad)  
   1400165db:	jno    0x140016651
   1400165dd:	pop    rdi
   1400165de:	ins    DWORD PTR es:[rdi],dx
   1400165df:	gs je  0x140016643
   1400165e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400165e5:	ins    BYTE PTR es:[rdi],dx
   1400165e6:	rex push rcx
   1400165e8:	rex.W
   1400165e9:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400165eb:	js     0x140016639
   1400165ed:	(bad)  
   1400165ee:	jns    0x14001665f
   1400165f0:	jne    0x140016666
   1400165f2:	rex
   1400165f3:	rex push rbp
   1400165f5:	rex.RB
   1400165f6:	rex.B
   1400165f7:	rex.B
   1400165f8:	rex.W push rdi
   1400165fa:	xor    al,0x43
   1400165fc:	(bad)  
   1400165fd:	ins    BYTE PTR es:[rdi],dx
   1400165fe:	ins    BYTE PTR es:[rdi],dx
   1400165ff:	rex push rcx
   140016601:	rex.WRB
   140016602:	gs je  0x140016666
   140016605:	rex.WRXB (bad) 
   140016607:	push   0x65
   140016609:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001660d:	rex.W push rax
   14001660f:	rex.RB
   140016610:	push   r8
   140016612:	rex.RB
   140016613:	pop    r8
   140016615:	rex pop rdx
   140016617:	add    BYTE PTR [rbx],ch
   140016619:	add    eax,0x6464613f
   14001661e:	rex.WB je 0x140016686
   140016621:	ins    DWORD PTR es:[rdi],dx
   140016622:	rex push rcx
   140016624:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016626:	js     0x140016674
   140016628:	(bad)  
   140016629:	jns    0x14001669a
   14001662b:	jne    0x1400166a1
   14001662d:	rex
   14001662e:	rex push rbp
   140016630:	rex.RB
   140016631:	rex.B
   140016632:	pop    r8
   140016634:	push   rax
   140016635:	rex.RB
   140016636:	push   r14
   140016638:	push   rcx
   140016639:	rex.WR (bad) 
   14001663b:	jns    0x1400166ac
   14001663d:	jne    0x1400166b3
   14001663f:	rex.WB je 0x1400166a7
   140016642:	ins    DWORD PTR es:[rdi],dx
   140016643:	rex
   140016644:	rex
   140016645:	rex pop rdx
   140016647:	add    dl,dl
   140016649:	(bad)  
   14001664a:	(bad)  
   14001664b:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   140016653:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016655:	js     0x1400166a3
   140016657:	(bad)  
   140016658:	jns    0x1400166c9
   14001665a:	jne    0x1400166d0
   14001665c:	rex
   14001665d:	rex push rbp
   14001665f:	rex.RB
   140016660:	rex.X
   140016661:	push   r8
   140016663:	rex.RB
   140016664:	push   r14
   140016666:	push   rcx
   140016667:	rex.WR (bad) 
   140016669:	jns    0x1400166da
   14001666b:	jne    0x1400166e1
   14001666d:	rex.WB je 0x1400166d5
   140016670:	ins    DWORD PTR es:[rdi],dx
   140016671:	rex
   140016672:	rex
   140016673:	rex.W
   140016674:	rex pop rdx
   140016676:	add    BYTE PTR [rax],al
   140016678:	xor    eax,0x61743f1e
   14001667d:	imul   esp,DWORD PTR [rbp+0x41],0x74
   140016681:	rex push rcx
   140016683:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016685:	js     0x1400166d3
   140016687:	(bad)  
   140016688:	jns    0x1400166f9
   14001668a:	jne    0x140016700
   14001668c:	rex
   14001668d:	rex push rbp
   14001668f:	rex.RB
   140016690:	rex.B
   140016691:	push   r8
   140016693:	rex.RB
   140016694:	push   r14
   140016696:	push   rcx
   140016697:	rex.WR (bad) 
   140016699:	jns    0x14001670a
   14001669b:	jne    0x140016711
   14001669d:	rex.WB je 0x140016705
   1400166a0:	ins    DWORD PTR es:[rdi],dx
   1400166a1:	rex
   1400166a2:	rex
   1400166a3:	rex.W
   1400166a4:	rex pop rdx
   1400166a6:	add    BYTE PTR [rax],al
   1400166a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400166a9:	(bad)  
   1400166aa:	(bad)  
   1400166ab:	movsxd ebp,DWORD PTR [rdi+0x75]
   1400166ae:	outs   dx,BYTE PTR ds:[rsi]
   1400166af:	je     0x1400166f1
   1400166b1:	push   rcx
   1400166b2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400166b4:	js     0x140016702
   1400166b6:	(bad)  
   1400166b7:	jns    0x140016728
   1400166b9:	jne    0x14001672f
   1400166bb:	rex
   1400166bc:	rex push rbp
   1400166be:	rex.RB
   1400166bf:	rex.X
   1400166c0:	rex.B
   1400166c1:	rex.W pop rax
   1400166c3:	pop    rdx
   1400166c4:	add    BYTE PTR [rax],al
   1400166c6:	xchg   edx,eax
   1400166c7:	sbb    al,0x3f
   1400166c9:	jae    0x140016734
   1400166cb:	jp     0x140016732
   1400166cd:	imul   rbp,QWORD PTR [rsi+0x74],0x6f425140
   1400166d5:	js     0x140016723
   1400166d7:	(bad)  
   1400166d8:	jns    0x140016749
   1400166da:	jne    0x140016750
   1400166dc:	rex
   1400166dd:	rex push rbp
   1400166df:	rex.RB
   1400166e0:	rex.X
   1400166e1:	rex.B (bad) 
   1400166e3:	push   r14
   1400166e5:	push   rcx
   1400166e6:	push   rbx
   1400166e7:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400166ee:	add    BYTE PTR [rax],al
   1400166f0:	clc    
   1400166f1:	adc    BYTE PTR [rdi],bh
   1400166f3:	ins    DWORD PTR es:[rdi],dx
   1400166f4:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400166fb:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   140016702:	js     0x140016750
   140016704:	(bad)  
   140016705:	jns    0x140016776
   140016707:	jne    0x14001677d
   140016709:	rex
   14001670a:	rex push rbp
   14001670c:	rex.RB
   14001670d:	rex.X
   14001670e:	rex.B (bad) 
   140016710:	push   r14
   140016712:	push   rcx
   140016713:	push   rbx
   140016714:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001671b:	add    BYTE PTR [rax+rdx*1],ch
   14001671e:	(bad)  
   14001671f:	ins    DWORD PTR es:[rdi],dx
   140016720:	(bad)  
   140016721:	js     0x14001678c
   140016723:	ins    DWORD PTR es:[rdi],dx
   140016724:	jne    0x140016793
   140016726:	push   rbx
   140016727:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   14001672e:	js     0x14001677c
   140016730:	(bad)  
   140016731:	jns    0x1400167a2
   140016733:	jne    0x1400167a9
   140016735:	rex
   140016736:	rex push rbp
   140016738:	rex.RB
   140016739:	rex.X
   14001673a:	rex.B (bad) 
   14001673c:	push   r14
   14001673e:	push   rcx
   14001673f:	push   rbx
   140016740:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140016747:	add    BYTE PTR [rbx],ah
   140016749:	or     edi,DWORD PTR [rdi]
   14001674b:	gs js  0x1400167be
   14001674e:	(bad)  
   14001674f:	outs   dx,BYTE PTR ds:[rsi]
   140016750:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   140016758:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001675c:	outs   dx,BYTE PTR ds:[rsi]
   14001675d:	jae    0x14001679f
   14001675f:	push   rcx
   140016760:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016762:	js     0x1400167b0
   140016764:	(bad)  
   140016765:	jns    0x1400167d6
   140016767:	jne    0x1400167dd
   140016769:	rex
   14001676a:	rex push rbp
   14001676c:	rex.RB
   14001676d:	rex.X
   14001676e:	rex.B (bad) 
   140016770:	push   r14
   140016772:	(bad)  
   140016773:	and    al,0x51
   140016775:	rex.RX ins BYTE PTR es:[rdi],dx
   140016777:	(bad)  
   140016778:	addr32 jae 0x1400167bb
   14001677b:	push   rdi
   14001677c:	xor    al,0x4f
   14001677e:	jb     0x1400167e9
   140016780:	outs   dx,BYTE PTR gs:[rsi]
   140016782:	je     0x1400167e5
   140016784:	je     0x1400167ef
   140016786:	outs   dx,DWORD PTR ds:[rsi]
   140016787:	outs   dx,BYTE PTR ds:[rsi]
   140016788:	rex push rcx
   14001678a:	je     0x1400167cc
   14001678c:	rex
   14001678d:	rex
   14001678e:	rex pop rax
   140016790:	pop    rdx
   140016791:	add    BYTE PTR [rdi+0x65733f18],cl
   140016797:	je     0x1400167e0
   140016799:	outs   dx,DWORD PTR gs:[rsi]
   14001679b:	ins    DWORD PTR es:[rdi],dx
   14001679c:	gs je  0x140016811
   14001679f:	jns    0x1400167e1
   1400167a1:	push   rcx
   1400167a2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400167a4:	js     0x1400167f2
   1400167a6:	(bad)  
   1400167a7:	jns    0x140016818
   1400167a9:	jne    0x14001681f
   1400167ab:	rex
   1400167ac:	rex push rbp
   1400167ae:	rex.RB
   1400167af:	rex.B
   1400167b0:	pop    r8
   1400167b2:	rex.B
   1400167b3:	rex.RB
   1400167b4:	rex.X push rsi
   1400167b6:	push   rcx
   1400167b7:	push   rdx
   1400167b8:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   1400167bd:	rex pop rdx
   1400167bf:	add    BYTE PTR [rdi+0xc],bl
   1400167c2:	(bad)  
   1400167c3:	push   0x65487361
   1400167c8:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   1400167cf:	push   rdi
   1400167d0:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   1400167d8:	js     0x140016826
   1400167da:	(bad)  
   1400167db:	jns    0x14001684c
   1400167dd:	jne    0x140016853
   1400167df:	rex
   1400167e0:	rex push rbp
   1400167e2:	rex.RB
   1400167e3:	rex.X
   1400167e4:	pop    r15
   1400167e6:	rex.WRX pop rax
   1400167e8:	pop    rdx
   1400167e9:	add    BYTE PTR [rdi+0xc],bh
   1400167ec:	(bad)  
   1400167ed:	push   0x68676965
   1400167f2:	je     0x14001683a
   1400167f4:	outs   dx,DWORD PTR ds:[rsi]
   1400167f5:	jb     0x14001684e
   1400167f7:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   1400167ff:	js     0x14001684d
   140016801:	(bad)  
   140016802:	jns    0x140016873
   140016804:	jne    0x14001687a
   140016806:	rex
   140016807:	rex push rbp
   140016809:	rex.RB
   14001680a:	rex.X
   14001680b:	rex.B
   14001680c:	rex.W
   14001680d:	rex.W
   14001680e:	rex pop rdx
   140016810:	add    BYTE PTR [rax],al
   140016812:	repz adc BYTE PTR [rdi],bh
   140016815:	ins    DWORD PTR es:[rdi],dx
   140016816:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   14001681d:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   140016825:	push   rdi
   140016826:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   14001682e:	js     0x14001687c
   140016830:	(bad)  
   140016831:	jns    0x1400168a2
   140016833:	jne    0x1400168a9
   140016835:	rex
   140016836:	rex push rbp
   140016838:	rex.RB
   140016839:	rex.X
   14001683a:	rex.B
   14001683b:	rex.W
   14001683c:	rex.W
   14001683d:	rex pop rdx
   14001683f:	add    bl,ah
   140016841:	or     eax,0x766e693f
   140016846:	(bad)  
   140016847:	ins    BYTE PTR es:[rdi],dx
   140016848:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x42514065
   140016850:	outs   dx,DWORD PTR ds:[rsi]
   140016851:	js     0x14001689f
   140016853:	(bad)  
   140016854:	jns    0x1400168c5
   140016856:	jne    0x1400168cc
   140016858:	rex
   140016859:	rex push rbp
   14001685b:	rex.RB
   14001685c:	rex.B
   14001685d:	pop    r8
   14001685f:	pop    rax
   140016860:	pop    rdx
   140016861:	add    BYTE PTR [rdx+0x10],ch
   140016864:	(bad)  
   140016865:	ins    DWORD PTR es:[rdi],dx
   140016866:	gs je  0x1400168ca
   140016869:	rex.WRXB (bad) 
   14001686b:	push   0x65
   14001686d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140016871:	rex.R outs dx,DWORD PTR ds:[rsi]
   140016873:	jne    0x1400168d7
   140016875:	ins    BYTE PTR es:[rdi],dx
   140016876:	gs push rbx
   140016878:	jo     0x1400168e3
   14001687a:	outs   dx,BYTE PTR ds:[rsi]
   14001687b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001687d:	js     0x1400168bf
   14001687f:	rex push rbp
   140016881:	rex.RB
   140016882:	rex.X
   140016883:	push   r8
   140016885:	rex.RB
   140016886:	rex.X push rbp
   140016888:	push   rcx
   140016889:	rex.WRB
   14001688a:	gs je  0x1400168ee
   14001688d:	rex.WRXB (bad) 
   14001688f:	push   0x65
   140016891:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016895:	pop    rax
   140016896:	pop    rdx
   140016897:	add    ch,bl
   140016899:	adc    edi,DWORD PTR [rdi]
   14001689b:	jno    0x140016911
   14001689d:	pop    rdi
   14001689e:	ins    DWORD PTR es:[rdi],dx
   14001689f:	gs je  0x140016903
   1400168a2:	movsxd esp,DWORD PTR [rcx+0x73]
   1400168a5:	je     0x1400168e7
   1400168a7:	push   rcx
   1400168a8:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400168aa:	jne    0x14001690e
   1400168ac:	ins    BYTE PTR es:[rdi],dx
   1400168ad:	gs push rbx
   1400168af:	jo     0x14001691a
   1400168b1:	outs   dx,BYTE PTR ds:[rsi]
   1400168b2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400168b4:	js     0x1400168f6
   1400168b6:	rex push rbp
   1400168b8:	rex.RB
   1400168b9:	rex.B
   1400168ba:	push   r8
   1400168bc:	rex.RB
   1400168bd:	pop    r8
   1400168bf:	push   rax
   1400168c0:	rex.RB
   1400168c1:	rex.X
   1400168c2:	rex.R
   1400168c3:	rex pop rdx
   1400168c5:	add    BYTE PTR [rbx+0x13],dl
   1400168c8:	(bad)  
   1400168c9:	jno    0x14001693f
   1400168cb:	pop    rdi
   1400168cc:	ins    DWORD PTR es:[rdi],dx
   1400168cd:	gs je  0x140016931
   1400168d0:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400168d3:	ins    BYTE PTR es:[rdi],dx
   1400168d4:	rex push rcx
   1400168d6:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400168d8:	jne    0x14001693c
   1400168da:	ins    BYTE PTR es:[rdi],dx
   1400168db:	gs push rbx
   1400168dd:	jo     0x140016948
   1400168df:	outs   dx,BYTE PTR ds:[rsi]
   1400168e0:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400168e2:	js     0x140016924
   1400168e4:	rex push rbp
   1400168e6:	rex.RB
   1400168e7:	rex.B
   1400168e8:	rex.B
   1400168e9:	rex.W push rdi
   1400168eb:	xor    al,0x43
   1400168ed:	(bad)  
   1400168ee:	ins    BYTE PTR es:[rdi],dx
   1400168ef:	ins    BYTE PTR es:[rdi],dx
   1400168f0:	rex push rcx
   1400168f2:	rex.WRB
   1400168f3:	gs je  0x140016957
   1400168f6:	rex.WRXB (bad) 
   1400168f8:	push   0x65
   1400168fa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400168fe:	rex.W push rax
   140016900:	rex.RB
   140016901:	push   r8
   140016903:	rex.RB
   140016904:	pop    r8
   140016906:	rex pop rdx
   140016908:	add    BYTE PTR [rax],al
   14001690a:	mov    esp,0x76653f0a
   14001690f:	outs   dx,BYTE PTR gs:[rsi]
   140016911:	je     0x140016953
   140016913:	push   rcx
   140016914:	(bad)
   14001691a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   14001691e:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016925:	push   rbp
   140016926:	rex.RB
   140016927:	rex.B
   140016928:	pop    r15
   14001692a:	rex.WRX push rax
   14001692c:	rex.RB
   14001692d:	push   r14
   14001692f:	push   rcx
   140016930:	rex.RB jbe 0x140016998
   140016933:	outs   dx,BYTE PTR ds:[rsi]
   140016934:	je     0x140016976
   140016936:	rex
   140016937:	rex pop rdx
   140016939:	add    BYTE PTR [rdi+0x69743f1e],dl
   14001693f:	ins    DWORD PTR es:[rdi],dx
   140016940:	gs jb  0x140016988
   140016943:	jbe    0x1400169aa
   140016945:	outs   dx,BYTE PTR ds:[rsi]
   140016946:	je     0x140016988
   140016948:	push   rcx
   140016949:	(bad)
   14001694f:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016953:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   14001695a:	rex.WRB
   14001695b:	rex.RB
   14001695c:	rex.B
   14001695d:	pop    r8
   14001695f:	push   rax
   140016960:	rex.RB
   140016961:	push   r14
   140016963:	push   rcx
   140016964:	push   rsp
   140016965:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001696c:	outs   dx,BYTE PTR ds:[rsi]
   14001696d:	je     0x1400169af
   14001696f:	rex
   140016970:	rex pop rdx
   140016972:	add    BYTE PTR [rax],al
   140016974:	xchg   ecx,eax
   140016975:	sbb    al,0x3f
   140016977:	jae    0x1400169e2
   140016979:	jp     0x1400169e0
   14001697b:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140016983:	jae    0x1400169f9
   140016985:	jb     0x1400169e8
   140016987:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   14001698b:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016992:	push   rbp
   140016993:	rex.RB
   140016994:	rex.X
   140016995:	rex.B (bad) 
   140016997:	push   r14
   140016999:	push   rcx
   14001699a:	push   rbx
   14001699b:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400169a2:	add    BYTE PTR [rax],al
   1400169a4:	add    al,0x11
   1400169a6:	(bad)  
   1400169a7:	ins    DWORD PTR es:[rdi],dx
   1400169a8:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400169af:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400169b6:	rex push rcx
   1400169b8:	(bad)
   1400169be:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   1400169c2:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   1400169c9:	push   rbp
   1400169ca:	rex.RB
   1400169cb:	rex.X
   1400169cc:	rex.B (bad) 
   1400169ce:	push   r14
   1400169d0:	push   rcx
   1400169d1:	push   rbx
   1400169d2:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400169d9:	add    BYTE PTR [rdx+0x11],ch
   1400169dc:	(bad)  
   1400169dd:	ins    DWORD PTR es:[rdi],dx
   1400169de:	outs   dx,DWORD PTR ds:[rsi]
   1400169df:	jne    0x140016a54
   1400169e1:	gs push rax
   1400169e3:	jb     0x140016a4a
   1400169e5:	jae    0x140016a5a
   1400169e7:	rex.RB jbe 0x140016a4f
   1400169ea:	outs   dx,BYTE PTR ds:[rsi]
   1400169eb:	je     0x140016a2d
   1400169ed:	push   rcx
   1400169ee:	(bad)
   1400169f4:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   1400169f8:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   1400169ff:	rex.WRB
   140016a00:	rex.RB
   140016a01:	rex.B
   140016a02:	pop    r8
   140016a04:	push   rax
   140016a05:	rex.RB
   140016a06:	push   r14
   140016a08:	push   rcx
   140016a09:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016a0b:	jne    0x140016a80
   140016a0d:	gs rex.RB jbe 0x140016a76
   140016a11:	outs   dx,BYTE PTR ds:[rsi]
   140016a12:	je     0x140016a54
   140016a14:	rex
   140016a15:	rex pop rdx
   140016a17:	add    BYTE PTR [rdx+0x6f6d3f11],cl
   140016a1d:	jne    0x140016a92
   140016a1f:	gs push rdx
   140016a21:	gs ins BYTE PTR es:[rdi],dx
   140016a23:	gs (bad) 
   140016a25:	jae    0x140016a8c
   140016a27:	rex.RB jbe 0x140016a8f
   140016a2a:	outs   dx,BYTE PTR ds:[rsi]
   140016a2b:	je     0x140016a6d
   140016a2d:	push   rcx
   140016a2e:	(bad)
   140016a34:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016a38:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016a3f:	rex.WRB
   140016a40:	rex.RB
   140016a41:	rex.B
   140016a42:	pop    r8
   140016a44:	push   rax
   140016a45:	rex.RB
   140016a46:	push   r14
   140016a48:	push   rcx
   140016a49:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016a4b:	jne    0x140016ac0
   140016a4d:	gs rex.RB jbe 0x140016ab6
   140016a51:	outs   dx,BYTE PTR ds:[rsi]
   140016a52:	je     0x140016a94
   140016a54:	rex
   140016a55:	rex pop rdx
   140016a57:	add    BYTE PTR [rdx+0x11],cl
   140016a5a:	(bad)  
   140016a5b:	ins    DWORD PTR es:[rdi],dx
   140016a5c:	outs   dx,DWORD PTR ds:[rsi]
   140016a5d:	jne    0x140016ad2
   140016a5f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140016a62:	jbe    0x140016ac9
   140016a64:	rex.RB jbe 0x140016acc
   140016a67:	outs   dx,BYTE PTR ds:[rsi]
   140016a68:	je     0x140016aaa
   140016a6a:	push   rcx
   140016a6b:	(bad)
   140016a71:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016a75:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016a7c:	rex.WRB
   140016a7d:	rex.RB
   140016a7e:	rex.B
   140016a7f:	pop    r8
   140016a81:	push   rax
   140016a82:	rex.RB
   140016a83:	push   r14
   140016a85:	push   rcx
   140016a86:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016a88:	jne    0x140016afd
   140016a8a:	gs rex.RB jbe 0x140016af3
   140016a8e:	outs   dx,BYTE PTR ds:[rsi]
   140016a8f:	je     0x140016ad1
   140016a91:	rex
   140016a92:	rex pop rdx
   140016a94:	add    BYTE PTR [rax],al
   140016a96:	(bad)  
   140016a97:	and    DWORD PTR [rdi],edi
   140016a99:	ja     0x140016b03
   140016a9b:	gs gs ins BYTE PTR es:[rdi],dx
   140016a9e:	rex.RB jbe 0x140016b06
   140016aa1:	outs   dx,BYTE PTR ds:[rsi]
   140016aa2:	je     0x140016ae4
   140016aa4:	push   rcx
   140016aa5:	(bad)
   140016aab:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016aaf:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016ab6:	rex.WRB
   140016ab7:	rex.RB
   140016ab8:	rex.B
   140016ab9:	pop    r8
   140016abb:	push   rax
   140016abc:	rex.RB
   140016abd:	push   r14
   140016abf:	push   rcx
   140016ac0:	push   rdi
   140016ac1:	push   0x456c6565
   140016ac6:	jbe    0x140016b2d
   140016ac8:	outs   dx,BYTE PTR ds:[rsi]
   140016ac9:	je     0x140016b0b
   140016acb:	rex
   140016acc:	rex pop rdx
   140016ace:	add    BYTE PTR [rax],al
   140016ad0:	rex.B (bad) 
   140016ad3:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140016ad7:	jb     0x140016b3e
   140016ad9:	jae    0x140016b4e
   140016adb:	rex.RB jbe 0x140016b43
   140016ade:	outs   dx,BYTE PTR ds:[rsi]
   140016adf:	je     0x140016b21
   140016ae1:	push   rcx
   140016ae2:	(bad)
   140016ae8:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016aec:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016af3:	rex.WRB
   140016af4:	rex.RB
   140016af5:	rex.B
   140016af6:	pop    r8
   140016af8:	push   rax
   140016af9:	rex.RB
   140016afa:	push   r14
   140016afc:	push   rcx
   140016afd:	rex.WXB
   140016afe:	gs jns 0x140016b46
   140016b01:	jbe    0x140016b68
   140016b03:	outs   dx,BYTE PTR ds:[rsi]
   140016b04:	je     0x140016b46
   140016b06:	rex
   140016b07:	rex pop rdx
   140016b09:	add    BYTE PTR [rdi+rcx*1+0x3f],bl
   140016b0d:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140016b11:	gs ins BYTE PTR es:[rdi],dx
   140016b13:	gs (bad) 
   140016b15:	jae    0x140016b7c
   140016b17:	rex.RB jbe 0x140016b7f
   140016b1a:	outs   dx,BYTE PTR ds:[rsi]
   140016b1b:	je     0x140016b5d
   140016b1d:	push   rcx
   140016b1e:	(bad)
   140016b24:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016b28:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016b2f:	rex.WRB
   140016b30:	rex.RB
   140016b31:	rex.B
   140016b32:	pop    r8
   140016b34:	push   rax
   140016b35:	rex.RB
   140016b36:	push   r14
   140016b38:	push   rcx
   140016b39:	rex.WXB
   140016b3a:	gs jns 0x140016b82
   140016b3d:	jbe    0x140016ba4
   140016b3f:	outs   dx,BYTE PTR ds:[rsi]
   140016b40:	je     0x140016b82
   140016b42:	rex
   140016b43:	rex pop rdx
   140016b45:	add    BYTE PTR [rdx+0x6f663f0b],al
   140016b4b:	movsxd esi,DWORD PTR [rbp+0x73]
   140016b4e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016b50:	rex.RB jbe 0x140016bb8
   140016b53:	outs   dx,BYTE PTR ds:[rsi]
   140016b54:	je     0x140016b96
   140016b56:	push   rcx
   140016b57:	(bad)
   140016b5d:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016b61:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016b68:	rex.WRB
   140016b69:	rex.RB
   140016b6a:	rex.B
   140016b6b:	pop    r8
   140016b6d:	push   rax
   140016b6e:	rex.RB
   140016b6f:	push   r14
   140016b71:	push   rcx
   140016b72:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140016b74:	movsxd esi,DWORD PTR [rbp+0x73]
   140016b77:	rex.RB jbe 0x140016bdf
   140016b7a:	outs   dx,BYTE PTR ds:[rsi]
   140016b7b:	je     0x140016bbd
   140016b7d:	rex
   140016b7e:	rex pop rdx
   140016b80:	add    BYTE PTR [rax],al
   140016b82:	test   eax,0x6f663f0b
   140016b87:	movsxd esi,DWORD PTR [rbp+0x73]
   140016b8a:	rex.WRXB jne 0x140016c01
   140016b8d:	rex.RB jbe 0x140016bf5
   140016b90:	outs   dx,BYTE PTR ds:[rsi]
   140016b91:	je     0x140016bd3
   140016b93:	push   rcx
   140016b94:	(bad)
   140016b9a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016b9e:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016ba5:	rex.WRB
   140016ba6:	rex.RB
   140016ba7:	rex.B
   140016ba8:	pop    r8
   140016baa:	push   rax
   140016bab:	rex.RB
   140016bac:	push   r14
   140016bae:	push   rcx
   140016baf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140016bb1:	movsxd esi,DWORD PTR [rbp+0x73]
   140016bb4:	rex.RB jbe 0x140016c1c
   140016bb7:	outs   dx,BYTE PTR ds:[rsi]
   140016bb8:	je     0x140016bfa
   140016bba:	rex
   140016bbb:	rex pop rdx
   140016bbd:	add    BYTE PTR [rcx+0x12],dl
   140016bc0:	(bad)  
   140016bc1:	jo     0x140016c24
   140016bc3:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140016bca:	je     0x140016c0c
   140016bcc:	push   rcx
   140016bcd:	(bad)
   140016bd3:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016bd7:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016bde:	rex.WRB
   140016bdf:	rex.RB
   140016be0:	rex.B
   140016be1:	pop    r8
   140016be3:	push   rax
   140016be4:	rex.RB
   140016be5:	push   r14
   140016be7:	push   rcx
   140016be8:	push   rax
   140016be9:	(bad)  
   140016bea:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140016bf1:	je     0x140016c33
   140016bf3:	rex
   140016bf4:	rex pop rdx
   140016bf6:	add    BYTE PTR [rax],al
   140016bf8:	test   DWORD PTR [rip+0x7365723f],edx        # 0x1b366de3d
   140016bfe:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   140016c05:	je     0x140016c47
   140016c07:	push   rcx
   140016c08:	(bad)
   140016c0e:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016c12:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016c19:	rex.WRB
   140016c1a:	rex.RB
   140016c1b:	rex.B
   140016c1c:	pop    r8
   140016c1e:	push   rax
   140016c1f:	rex.RB
   140016c20:	push   r14
   140016c22:	push   rcx
   140016c23:	push   rdx
   140016c24:	gs jae 0x140016c90
   140016c27:	jp     0x140016c8e
   140016c29:	rex.RB jbe 0x140016c91
   140016c2c:	outs   dx,BYTE PTR ds:[rsi]
   140016c2d:	je     0x140016c6f
   140016c2f:	rex
   140016c30:	rex pop rdx
   140016c32:	add    BYTE PTR [rax],al
   140016c34:	or     al,0x7
   140016c36:	(bad)  
   140016c37:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140016c3b:	gs rex.RB jbe 0x140016ca4
   140016c3f:	outs   dx,BYTE PTR ds:[rsi]
   140016c40:	je     0x140016c82
   140016c42:	push   rcx
   140016c43:	(bad)
   140016c49:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016c4d:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016c54:	rex.WRB
   140016c55:	rex.RB
   140016c56:	rex.B
   140016c57:	pop    r8
   140016c59:	push   rax
   140016c5a:	rex.RB
   140016c5b:	push   r14
   140016c5d:	push   rcx
   140016c5e:	rex.XB ins BYTE PTR es:[rdi],dx
   140016c60:	outs   dx,DWORD PTR ds:[rsi]
   140016c61:	jae    0x140016cc8
   140016c63:	rex.RB jbe 0x140016ccb
   140016c66:	outs   dx,BYTE PTR ds:[rsi]
   140016c67:	je     0x140016ca9
   140016c69:	rex
   140016c6a:	rex pop rdx
   140016c6c:	add    BYTE PTR [rax],al
   140016c6e:	add    DWORD PTR [rdi],0x3f
   140016c71:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140016c74:	je     0x140016cdb
   140016c76:	js     0x140016cec
   140016c78:	rex.WRB
   140016c79:	outs   dx,BYTE PTR gs:[rsi]
   140016c7b:	jne    0x140016cc2
   140016c7d:	jbe    0x140016ce4
   140016c7f:	outs   dx,BYTE PTR ds:[rsi]
   140016c80:	je     0x140016cc2
   140016c82:	push   rcx
   140016c83:	(bad)
   140016c89:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016c8d:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016c94:	rex.WRB
   140016c95:	rex.RB
   140016c96:	rex.B
   140016c97:	pop    r8
   140016c99:	push   rax
   140016c9a:	rex.RB
   140016c9b:	push   r14
   140016c9d:	push   rcx
   140016c9e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016ca0:	outs   dx,BYTE PTR ds:[rsi]
   140016ca1:	je     0x140016d08
   140016ca3:	js     0x140016d19
   140016ca5:	rex.WRB
   140016ca6:	outs   dx,BYTE PTR gs:[rsi]
   140016ca8:	jne    0x140016cef
   140016caa:	jbe    0x140016d11
   140016cac:	outs   dx,BYTE PTR ds:[rsi]
   140016cad:	je     0x140016cef
   140016caf:	rex
   140016cb0:	rex pop rdx
   140016cb2:	add    BYTE PTR [rax],al
   140016cb4:	rex.WXB sbb al,0x3f
   140016cb7:	jae    0x140016d21
   140016cb9:	outs   dx,DWORD PTR ds:[rsi]
   140016cba:	ja     0x140016d01
   140016cbc:	jbe    0x140016d23
   140016cbe:	outs   dx,BYTE PTR ds:[rsi]
   140016cbf:	je     0x140016d01
   140016cc1:	push   rcx
   140016cc2:	(bad)
   140016cc8:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016ccc:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016cd3:	rex.WRB
   140016cd4:	rex.RB
   140016cd5:	rex.B
   140016cd6:	pop    r8
   140016cd8:	push   rax
   140016cd9:	rex.RB
   140016cda:	push   r14
   140016cdc:	push   rcx
   140016cdd:	push   rbx
   140016cde:	push   0x7645776f
   140016ce3:	outs   dx,BYTE PTR gs:[rsi]
   140016ce5:	je     0x140016d27
   140016ce7:	rex
   140016ce8:	rex pop rdx
   140016cea:	add    BYTE PTR [rax],al
   140016cec:	pushf  
   140016ced:	or     al,0x3f
   140016cef:	push   0x45656469
   140016cf4:	jbe    0x140016d5b
   140016cf6:	outs   dx,BYTE PTR ds:[rsi]
   140016cf7:	je     0x140016d39
   140016cf9:	push   rcx
   140016cfa:	(bad)
   140016d00:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016d04:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016d0b:	rex.WRB
   140016d0c:	rex.RB
   140016d0d:	rex.B
   140016d0e:	pop    r8
   140016d10:	push   rax
   140016d11:	rex.RB
   140016d12:	push   r14
   140016d14:	push   rcx
   140016d15:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   140016d1e:	rex
   140016d1f:	rex
   140016d20:	rex pop rdx
   140016d22:	add    BYTE PTR [rax],al
   140016d24:	jno    0x140016d2c
   140016d26:	(bad)  
   140016d27:	movsxd ebp,DWORD PTR [rax+0x61]
   140016d2a:	outs   dx,BYTE PTR ds:[rsi]
   140016d2b:	addr32 gs rex.RB jbe 0x140016d95
   140016d30:	outs   dx,BYTE PTR ds:[rsi]
   140016d31:	je     0x140016d73
   140016d33:	push   rcx
   140016d34:	(bad)
   140016d3a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016d3e:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016d45:	rex.WRB
   140016d46:	rex.RB
   140016d47:	rex.B
   140016d48:	pop    r8
   140016d4a:	push   rax
   140016d4b:	rex.RB
   140016d4c:	push   r14
   140016d4e:	push   rcx
   140016d4f:	rex.RB jbe 0x140016db7
   140016d52:	outs   dx,BYTE PTR ds:[rsi]
   140016d53:	je     0x140016d95
   140016d55:	rex
   140016d56:	rex pop rdx
   140016d58:	add    BYTE PTR [rax],al
   140016d5a:	jge    0x140016d69
   140016d5c:	(bad)  
   140016d5d:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   140016d64:	je     0x140016dce
   140016d66:	outs   dx,DWORD PTR ds:[rsi]
   140016d67:	fs push rcx
   140016d69:	jne    0x140016dd0
   140016d6b:	jb     0x140016de6
   140016d6d:	rex push rcx
   140016d6f:	(bad)
   140016d75:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016d79:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016d80:	push   rbp
   140016d81:	rex.RB
   140016d82:	rex.X
   140016d83:	rex.B (bad) 
   140016d85:	push   r14
   140016d87:	push   rcx
   140016d88:	push   rsi
   140016d89:	(bad)  
   140016d8a:	jb     0x140016df5
   140016d8c:	(bad)  
   140016d8d:	outs   dx,BYTE PTR ds:[rsi]
   140016d8e:	je     0x140016dd0
   140016d90:	rex push rdi
   140016d92:	xor    al,0x49
   140016d94:	outs   dx,BYTE PTR ds:[rsi]
   140016d95:	jo     0x140016e0c
   140016d97:	je     0x140016de6
   140016d99:	gs je  0x140016e04
   140016d9c:	outs   dx,DWORD PTR ds:[rsi]
   140016d9d:	fs push rcx
   140016d9f:	jne    0x140016e06
   140016da1:	jb     0x140016e1c
   140016da3:	rex push rcx
   140016da5:	je     0x140016de7
   140016da7:	rex
   140016da8:	rex pop rdx
   140016daa:	add    BYTE PTR [rax],al
   140016dac:	mov    cl,0x20
   140016dae:	(bad)  
   140016daf:	jbe    0x140016e12
   140016db1:	ins    BYTE PTR es:[rdi],dx
   140016db2:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x44514065
   140016dba:	outs   dx,DWORD PTR ds:[rsi]
   140016dbb:	jne    0x140016e1f
   140016dbd:	ins    BYTE PTR es:[rdi],dx
   140016dbe:	gs push rbx
   140016dc0:	jo     0x140016e2b
   140016dc2:	outs   dx,BYTE PTR ds:[rsi]
   140016dc3:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016dc5:	js     0x140016e07
   140016dc7:	rex push rbp
   140016dc9:	rex.RB
   140016dca:	rex.X
   140016dcb:	rex.B (bad) 
   140016dcd:	push   r15
   140016dcf:	xor    al,0x53
   140016dd1:	je     0x140016e34
   140016dd3:	je     0x140016e3a
   140016dd5:	rex push rcx
   140016dd7:	push   rsi
   140016dd8:	(bad)  
   140016dd9:	ins    BYTE PTR es:[rdi],dx
   140016dda:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   140016de2:	rex.B
   140016de3:	rex.RB
   140016de4:	push   r14
   140016de6:	push   rcx
   140016de7:	push   rbx
   140016de8:	je     0x140016e5c
   140016dea:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140016df1:	rex.B
   140016df2:	rex.W
   140016df3:	rex pop rdx
   140016df5:	add    BYTE PTR [rdx+0xb],dh
   140016df8:	(bad)  
   140016df9:	imul   di,WORD PTR [rax+0x75],0x4070
   140016dff:	push   rcx
   140016e00:	rex.R outs dx,DWORD PTR ds:[rsi]
   140016e02:	jne    0x140016e66
   140016e04:	ins    BYTE PTR es:[rdi],dx
   140016e05:	gs push rbx
   140016e07:	jo     0x140016e72
   140016e09:	outs   dx,BYTE PTR ds:[rsi]
   140016e0a:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016e0c:	js     0x140016e4e
   140016e0e:	rex push rbp
   140016e10:	rex.RB
   140016e11:	rex.X
   140016e12:	pop    r8
   140016e14:	rex.B
   140016e15:	rex.RB
   140016e16:	push   r14
   140016e18:	push   rcx
   140016e19:	push   rbx
   140016e1a:	je     0x140016e8e
   140016e1c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140016e23:	add    BYTE PTR [rsi+0x74733f1d],bh
   140016e29:	gs jo  0x140016e6e
   140016e2c:	jns    0x140016e6e
   140016e2e:	push   rcx
   140016e2f:	(bad)
   140016e35:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016e39:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016e40:	push   rbp
   140016e41:	rex.RB
   140016e42:	rex.B
   140016e43:	pop    r8
   140016e45:	rex.W
   140016e46:	rex pop rdx
   140016e48:	add    BYTE PTR [rax],al
   140016e4a:	retf   0x3f06
   140016e4d:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   140016e51:	jb     0x140016e93
   140016e53:	push   rcx
   140016e54:	(bad)
   140016e5a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016e5e:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016e65:	push   rbp
   140016e66:	rex.RB
   140016e67:	rex.B
   140016e68:	pop    r8
   140016e6a:	pop    rax
   140016e6b:	pop    rdx
   140016e6c:	add    BYTE PTR [rax],al
   140016e6e:	rcr    DWORD PTR [rip+0x6574733f],0x70        # 0x1a575e1b4
   140016e75:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140016e77:	(bad)  
   140016e78:	(bad)  
   140016e79:	ins    BYTE PTR es:[rdi],dx
   140016e7a:	gs fs rex push rcx
   140016e7e:	(bad)
   140016e84:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016e88:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016e8f:	rex.WRB
   140016e90:	rex.RB
   140016e91:	rex.X
   140016e92:	rex.B (bad) 
   140016e94:	push   r14
   140016e96:	(bad)  
   140016e97:	and    al,0x51
   140016e99:	rex.RX ins BYTE PTR es:[rdi],dx
   140016e9b:	(bad)  
   140016e9c:	addr32 jae 0x140016edf
   140016e9f:	push   rdi
   140016ea0:	xor    al,0x53
   140016ea2:	je     0x140016f09
   140016ea4:	jo     0x140016eeb
   140016ea6:	outs   dx,BYTE PTR ds:[rsi]
   140016ea7:	(bad)  
   140016ea8:	(bad)  
   140016ea9:	ins    BYTE PTR es:[rdi],dx
   140016eaa:	gs fs rex.RX ins BYTE PTR es:[rdi],dx
   140016eae:	(bad)  
   140016eaf:	addr32 rex push rcx
   140016eb2:	(bad)
   140016eb8:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   140016ebc:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   140016ec3:	rex
   140016ec4:	rex pop rax
   140016ec6:	pop    rdx
   140016ec7:	add    ah,al
   140016ec9:	and    BYTE PTR [rdi],bh
   140016ecb:	jbe    0x140016f2e
   140016ecd:	ins    BYTE PTR es:[rdi],dx
   140016ece:	jne    0x140016f35
   140016ed0:	rex.RX jb 0x140016f42
   140016ed3:	ins    DWORD PTR es:[rdi],dx
   140016ed4:	push   rsp
   140016ed5:	gs js  0x140016f4c
   140016ed8:	rex push rcx
   140016eda:	rex.R outs dx,DWORD PTR ds:[rsi]
   140016edc:	jne    0x140016f40
   140016ede:	ins    BYTE PTR es:[rdi],dx
   140016edf:	gs push rbx
   140016ee1:	jo     0x140016f4c
   140016ee3:	outs   dx,BYTE PTR ds:[rsi]
   140016ee4:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016ee6:	js     0x140016f28
   140016ee8:	rex push rbp
   140016eea:	rex.RB
   140016eeb:	rex.X
   140016eec:	rex.B
   140016eed:	rex.WRX
   140016eee:	rex.B
   140016eef:	rex.RB
   140016ef0:	rex.X push rsi
   140016ef2:	push   rcx
   140016ef3:	push   rbx
   140016ef4:	je     0x140016f68
   140016ef6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140016efd:	add    BYTE PTR [rdx+0x1e],bh
   140016f00:	(bad)  
   140016f01:	je     0x140016f68
   140016f03:	js     0x140016f79
   140016f05:	rex.RX jb 0x140016f77
   140016f08:	ins    DWORD PTR es:[rdi],dx
   140016f09:	push   rsi
   140016f0a:	(bad)  
   140016f0b:	ins    BYTE PTR es:[rdi],dx
   140016f0c:	jne    0x140016f73
   140016f0e:	rex push rcx
   140016f10:	rex.R outs dx,DWORD PTR ds:[rsi]
   140016f12:	jne    0x140016f76
   140016f14:	ins    BYTE PTR es:[rdi],dx
   140016f15:	gs push rbx
   140016f17:	jo     0x140016f82
   140016f19:	outs   dx,BYTE PTR ds:[rsi]
   140016f1a:	rex.X outs dx,DWORD PTR ds:[rsi]
   140016f1c:	js     0x140016f5e
   140016f1e:	rex push rbp
   140016f20:	rex.RB
   140016f21:	rex.X
   140016f22:	rex.B (bad) 
   140016f24:	push   r14
   140016f26:	push   rcx
   140016f27:	push   rbx
   140016f28:	je     0x140016f9c
   140016f2a:	imul   ebp,DWORD PTR [rsi+0x67],0x404e4040
   140016f31:	pop    rdx
   140016f32:	add    BYTE PTR [rax],al
   140016f34:	pop    rcx
   140016f35:	adc    BYTE PTR [rdi],bh
   140016f37:	ins    DWORD PTR es:[rdi],dx
   140016f38:	gs je  0x140016f9c
   140016f3b:	rex.WRXB (bad) 
   140016f3d:	push   0x65
   140016f3f:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140016f43:	rex.XB push 0x426b6365
   140016f49:	outs   dx,DWORD PTR ds:[rsi]
   140016f4a:	js     0x140016f8c
   140016f4c:	rex push rbp
   140016f4e:	rex.RB
   140016f4f:	rex.X
   140016f50:	push   r8
   140016f52:	rex.RB
   140016f53:	rex.X push rbp
   140016f55:	push   rcx
   140016f56:	rex.WRB
   140016f57:	gs je  0x140016fbb
   140016f5a:	rex.WRXB (bad) 
   140016f5c:	push   0x65
   140016f5e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016f62:	pop    rax
   140016f63:	pop    rdx
   140016f64:	add    BYTE PTR [rax],al
   140016f66:	int3   
   140016f67:	adc    edi,DWORD PTR [rdi]
   140016f69:	jno    0x140016fdf
   140016f6b:	pop    rdi
   140016f6c:	ins    DWORD PTR es:[rdi],dx
   140016f6d:	gs je  0x140016fd1
   140016f70:	movsxd esp,DWORD PTR [rcx+0x73]
   140016f73:	je     0x140016fb5
   140016f75:	push   rcx
   140016f76:	rex.XB push 0x426b6365
   140016f7c:	outs   dx,DWORD PTR ds:[rsi]
   140016f7d:	js     0x140016fbf
   140016f7f:	rex push rbp
   140016f81:	rex.RB
   140016f82:	rex.B
   140016f83:	push   r8
   140016f85:	rex.RB
   140016f86:	pop    r8
   140016f88:	push   rax
   140016f89:	rex.RB
   140016f8a:	rex.X
   140016f8b:	rex.R
   140016f8c:	rex pop rdx
   140016f8e:	add    BYTE PTR [rax],al
   140016f90:	rex.X adc edi,DWORD PTR [rdi]
   140016f93:	jno    0x140017009
   140016f95:	pop    rdi
   140016f96:	ins    DWORD PTR es:[rdi],dx
   140016f97:	gs je  0x140016ffb
   140016f9a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016f9d:	ins    BYTE PTR es:[rdi],dx
   140016f9e:	rex push rcx
   140016fa0:	rex.XB push 0x426b6365
   140016fa6:	outs   dx,DWORD PTR ds:[rsi]
   140016fa7:	js     0x140016fe9
   140016fa9:	rex push rbp
   140016fab:	rex.RB
   140016fac:	rex.B
   140016fad:	rex.B
   140016fae:	rex.W push rdi
   140016fb0:	xor    al,0x43
   140016fb2:	(bad)  
   140016fb3:	ins    BYTE PTR es:[rdi],dx
   140016fb4:	ins    BYTE PTR es:[rdi],dx
   140016fb5:	rex push rcx
   140016fb7:	rex.WRB
   140016fb8:	gs je  0x14001701c
   140016fbb:	rex.WRXB (bad) 
   140016fbd:	push   0x65
   140016fbf:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140016fc3:	rex.W push rax
   140016fc5:	rex.RB
   140016fc6:	push   r8
   140016fc8:	rex.RB
   140016fc9:	pop    r8
   140016fcb:	rex pop rdx
   140016fcd:	add    al,al
   140016fcf:	or     bh,BYTE PTR [rdi]
   140016fd1:	gs jbe 0x140017039
   140016fd4:	outs   dx,BYTE PTR ds:[rsi]
   140016fd5:	je     0x140017017
   140016fd7:	push   rcx
   140016fd8:	rex.XB push 0x426b6365
   140016fde:	outs   dx,DWORD PTR ds:[rsi]
   140016fdf:	js     0x140017021
   140016fe1:	rex
   140016fe2:	rex.WRB
   140016fe3:	rex.RB
   140016fe4:	rex.B
   140016fe5:	pop    r15
   140016fe7:	rex.WRX push rax
   140016fe9:	rex.RB
   140016fea:	push   r14
   140016fec:	push   rcx
   140016fed:	rex.RB jbe 0x140017055
   140016ff0:	outs   dx,BYTE PTR ds:[rsi]
   140016ff1:	je     0x140017033
   140016ff3:	rex
   140016ff4:	rex pop rdx
   140016ff6:	add    BYTE PTR [rax],al
   140016ff8:	xchg   esp,eax
   140016ff9:	(bad)  
   140016ffa:	(bad)  
   140016ffb:	je     0x140017066
   140016ffd:	ins    DWORD PTR es:[rdi],dx
   140016ffe:	gs jb  0x140017046
   140017001:	jbe    0x140017068
   140017003:	outs   dx,BYTE PTR ds:[rsi]
   140017004:	je     0x140017046
   140017006:	push   rcx
   140017007:	(bad)
   14001700d:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140017011:	je     0x140017087
   140017013:	outs   dx,DWORD PTR ds:[rsi]
   140017014:	outs   dx,BYTE PTR ds:[rsi]
   140017015:	rex
   140017016:	rex
   140017017:	rex.WRB
   140017018:	rex.RB
   140017019:	rex.B
   14001701a:	pop    r8
   14001701c:	push   rax
   14001701d:	rex.RB
   14001701e:	push   r14
   140017020:	push   rcx
   140017021:	push   rsp
   140017022:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140017029:	outs   dx,BYTE PTR ds:[rsi]
   14001702a:	je     0x14001706c
   14001702c:	rex
   14001702d:	rex pop rdx
   14001702f:	add    BYTE PTR [rsp+rbx*1+0x7a69733f],dl
   140017036:	imul   rbp,QWORD PTR gs:[rsi+0x74],0x68435140
   14001703f:	movsxd ebp,DWORD PTR gs:[rbx+0x42]
   140017043:	outs   dx,DWORD PTR ds:[rsi]
   140017044:	js     0x140017086
   140017046:	rex push rbp
   140017048:	rex.RB
   140017049:	rex.X
   14001704a:	rex.B (bad) 
   14001704c:	push   r14
   14001704e:	push   rcx
   14001704f:	push   rbx
   140017050:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017057:	add    BYTE PTR [rsi],al
   140017059:	adc    DWORD PTR [rdi],edi
   14001705b:	ins    DWORD PTR es:[rdi],dx
   14001705c:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140017063:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001706a:	rex push rcx
   14001706c:	rex.XB push 0x426b6365
   140017072:	outs   dx,DWORD PTR ds:[rsi]
   140017073:	js     0x1400170b5
   140017075:	rex push rbp
   140017077:	rex.RB
   140017078:	rex.X
   140017079:	rex.B (bad) 
   14001707b:	push   r14
   14001707d:	push   rcx
   14001707e:	push   rbx
   14001707f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017086:	add    BYTE PTR [rax],al
   140017088:	adc    DWORD PTR [edi],edi
   14001708b:	ins    DWORD PTR es:[rdi],dx
   14001708c:	outs   dx,DWORD PTR ds:[rsi]
   14001708d:	jne    0x140017102
   14001708f:	gs push rax
   140017091:	jb     0x1400170f8
   140017093:	jae    0x140017108
   140017095:	rex.RB jbe 0x1400170fd
   140017098:	outs   dx,BYTE PTR ds:[rsi]
   140017099:	je     0x1400170db
   14001709b:	push   rcx
   14001709c:	(bad)
   1400170a2:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   1400170a6:	je     0x14001711c
   1400170a8:	outs   dx,DWORD PTR ds:[rsi]
   1400170a9:	outs   dx,BYTE PTR ds:[rsi]
   1400170aa:	rex
   1400170ab:	rex
   1400170ac:	rex.WRB
   1400170ad:	rex.RB
   1400170ae:	rex.B
   1400170af:	pop    r8
   1400170b1:	push   rax
   1400170b2:	rex.RB
   1400170b3:	push   r14
   1400170b5:	push   rcx
   1400170b6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400170b8:	jne    0x14001712d
   1400170ba:	gs rex.RB jbe 0x140017123
   1400170be:	outs   dx,BYTE PTR ds:[rsi]
   1400170bf:	je     0x140017101
   1400170c1:	rex
   1400170c2:	rex pop rdx
   1400170c4:	add    BYTE PTR [rax],al
   1400170c6:	xchg   DWORD PTR [rcx],edx
   1400170c8:	(bad)  
   1400170c9:	ins    DWORD PTR es:[rdi],dx
   1400170ca:	outs   dx,DWORD PTR ds:[rsi]
   1400170cb:	jne    0x140017140
   1400170cd:	gs push rdx
   1400170cf:	gs ins BYTE PTR es:[rdi],dx
   1400170d1:	gs (bad) 
   1400170d3:	jae    0x14001713a
   1400170d5:	rex.RB jbe 0x14001713d
   1400170d8:	outs   dx,BYTE PTR ds:[rsi]
   1400170d9:	je     0x14001711b
   1400170db:	push   rcx
   1400170dc:	(bad)
   1400170e2:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   1400170e6:	je     0x14001715c
   1400170e8:	outs   dx,DWORD PTR ds:[rsi]
   1400170e9:	outs   dx,BYTE PTR ds:[rsi]
   1400170ea:	rex
   1400170eb:	rex
   1400170ec:	rex.WRB
   1400170ed:	rex.RB
   1400170ee:	rex.B
   1400170ef:	pop    r8
   1400170f1:	push   rax
   1400170f2:	rex.RB
   1400170f3:	push   r14
   1400170f5:	push   rcx
   1400170f6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400170f8:	jne    0x14001716d
   1400170fa:	gs rex.RB jbe 0x140017163
   1400170fe:	outs   dx,BYTE PTR ds:[rsi]
   1400170ff:	je     0x140017141
   140017101:	rex
   140017102:	rex pop rdx
   140017104:	add    BYTE PTR [rax],al
   140017106:	rex.WXB adc QWORD PTR [r15],rdi
   140017109:	ins    DWORD PTR es:[rdi],dx
   14001710a:	outs   dx,DWORD PTR ds:[rsi]
   14001710b:	jne    0x140017180
   14001710d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140017110:	jbe    0x140017177
   140017112:	rex.RB jbe 0x14001717a
   140017115:	outs   dx,BYTE PTR ds:[rsi]
   140017116:	je     0x140017158
   140017118:	push   rcx
   140017119:	rex.XB push 0x426b6365
   14001711f:	outs   dx,DWORD PTR ds:[rsi]
   140017120:	js     0x140017162
   140017122:	rex
   140017123:	rex.WRB
   140017124:	rex.RB
   140017125:	rex.B
   140017126:	pop    r8
   140017128:	push   rax
   140017129:	rex.RB
   14001712a:	push   r14
   14001712c:	push   rcx
   14001712d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001712f:	jne    0x1400171a4
   140017131:	gs rex.RB jbe 0x14001719a
   140017135:	outs   dx,BYTE PTR ds:[rsi]
   140017136:	je     0x140017178
   140017138:	rex
   140017139:	rex pop rdx
   14001713b:	add    BYTE PTR [rip+0x656b3f0f],bh        # 0x1a56cb050
   140017141:	jns    0x140017193
   140017143:	jb     0x1400171aa
   140017145:	jae    0x1400171ba
   140017147:	rex.RB jbe 0x1400171af
   14001714a:	outs   dx,BYTE PTR ds:[rsi]
   14001714b:	je     0x14001718d
   14001714d:	push   rcx
   14001714e:	(bad)
   140017154:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140017158:	je     0x1400171ce
   14001715a:	outs   dx,DWORD PTR ds:[rsi]
   14001715b:	outs   dx,BYTE PTR ds:[rsi]
   14001715c:	rex
   14001715d:	rex
   14001715e:	rex.WRB
   14001715f:	rex.RB
   140017160:	rex.B
   140017161:	pop    r8
   140017163:	push   rax
   140017164:	rex.RB
   140017165:	push   r14
   140017167:	push   rcx
   140017168:	rex.WXB
   140017169:	gs jns 0x1400171b1
   14001716c:	jbe    0x1400171d3
   14001716e:	outs   dx,BYTE PTR ds:[rsi]
   14001716f:	je     0x1400171b1
   140017171:	rex
   140017172:	rex pop rdx
   140017174:	add    BYTE PTR [rax],al
   140017176:	pop    rbx
   140017177:	(bad)  
   140017179:	imul   esp,DWORD PTR [rbp+0x79],0x52
   14001717d:	gs ins BYTE PTR es:[rdi],dx
   14001717f:	gs (bad) 
   140017181:	jae    0x1400171e8
   140017183:	rex.RB jbe 0x1400171eb
   140017186:	outs   dx,BYTE PTR ds:[rsi]
   140017187:	je     0x1400171c9
   140017189:	push   rcx
   14001718a:	(bad)
   140017190:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140017194:	je     0x14001720a
   140017196:	outs   dx,DWORD PTR ds:[rsi]
   140017197:	outs   dx,BYTE PTR ds:[rsi]
   140017198:	rex
   140017199:	rex
   14001719a:	rex.WRB
   14001719b:	rex.RB
   14001719c:	rex.B
   14001719d:	pop    r8
   14001719f:	push   rax
   1400171a0:	rex.RB
   1400171a1:	push   r14
   1400171a3:	push   rcx
   1400171a4:	rex.WXB
   1400171a5:	gs jns 0x1400171ed
   1400171a8:	jbe    0x14001720f
   1400171aa:	outs   dx,BYTE PTR ds:[rsi]
   1400171ab:	je     0x1400171ed
   1400171ad:	rex
   1400171ae:	rex pop rdx
   1400171b0:	add    BYTE PTR [rax],al
   1400171b2:	or     BYTE PTR [rbx],0x3f
   1400171b5:	outs   dx,WORD PTR ds:[rsi]
   1400171b7:	movsxd esi,DWORD PTR [rbp+0x73]
   1400171ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400171bc:	rex.RB jbe 0x140017224
   1400171bf:	outs   dx,BYTE PTR ds:[rsi]
   1400171c0:	je     0x140017202
   1400171c2:	push   rcx
   1400171c3:	(bad)
   1400171c9:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   1400171cd:	je     0x140017243
   1400171cf:	outs   dx,DWORD PTR ds:[rsi]
   1400171d0:	outs   dx,BYTE PTR ds:[rsi]
   1400171d1:	rex
   1400171d2:	rex
   1400171d3:	rex.WRB
   1400171d4:	rex.RB
   1400171d5:	rex.B
   1400171d6:	pop    r8
   1400171d8:	push   rax
   1400171d9:	rex.RB
   1400171da:	push   r14
   1400171dc:	push   rcx
   1400171dd:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400171df:	movsxd esi,DWORD PTR [rbp+0x73]
   1400171e2:	rex.RB jbe 0x14001724a
   1400171e5:	outs   dx,BYTE PTR ds:[rsi]
   1400171e6:	je     0x140017228
   1400171e8:	rex
   1400171e9:	rex pop rdx
   1400171eb:	add    BYTE PTR [rdi+0x6f663f0b],ah
   1400171f1:	movsxd esi,DWORD PTR [rbp+0x73]
   1400171f4:	rex.WRXB jne 0x14001726b
   1400171f7:	rex.RB jbe 0x14001725f
   1400171fa:	outs   dx,BYTE PTR ds:[rsi]
   1400171fb:	je     0x14001723d
   1400171fd:	push   rcx
   1400171fe:	(bad)
   140017204:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140017208:	je     0x14001727e
   14001720a:	outs   dx,DWORD PTR ds:[rsi]
   14001720b:	outs   dx,BYTE PTR ds:[rsi]
   14001720c:	rex
   14001720d:	rex
   14001720e:	rex.WRB
   14001720f:	rex.RB
   140017210:	rex.B
   140017211:	pop    r8
   140017213:	push   rax
   140017214:	rex.RB
   140017215:	push   r14
   140017217:	push   rcx
   140017218:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001721a:	movsxd esi,DWORD PTR [rbp+0x73]
   14001721d:	rex.RB jbe 0x140017285
   140017220:	outs   dx,BYTE PTR ds:[rsi]
   140017221:	je     0x140017263
   140017223:	rex
   140017224:	rex pop rdx
   140017226:	add    BYTE PTR [rax],al
   140017228:	push   rdx
   140017229:	adc    bh,BYTE PTR [rdi]
   14001722b:	jo     0x14001728e
   14001722d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140017234:	je     0x140017276
   140017236:	push   rcx
   140017237:	rex.XB push 0x426b6365
   14001723d:	outs   dx,DWORD PTR ds:[rsi]
   14001723e:	js     0x140017280
   140017240:	rex
   140017241:	rex.WRB
   140017242:	rex.RB
   140017243:	rex.B
   140017244:	pop    r8
   140017246:	push   rax
   140017247:	rex.RB
   140017248:	push   r14
   14001724a:	push   rcx
   14001724b:	push   rax
   14001724c:	(bad)  
   14001724d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140017254:	je     0x140017296
   140017256:	rex
   140017257:	rex pop rdx
   140017259:	add    BYTE PTR [rdi+0x6],ch
   14001725c:	(bad)  
   14001725d:	movsxd ebp,DWORD PTR [rax+0x61]
   140017260:	outs   dx,BYTE PTR ds:[rsi]
   140017261:	addr32 gs rex.RB jbe 0x1400172cb
   140017266:	outs   dx,BYTE PTR ds:[rsi]
   140017267:	je     0x1400172a9
   140017269:	push   rcx
   14001726a:	(bad)
   140017270:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140017274:	je     0x1400172ea
   140017276:	outs   dx,DWORD PTR ds:[rsi]
   140017277:	outs   dx,BYTE PTR ds:[rsi]
   140017278:	rex
   140017279:	rex
   14001727a:	rex.WRB
   14001727b:	rex.RB
   14001727c:	rex.B
   14001727d:	pop    r8
   14001727f:	push   rax
   140017280:	rex.RB
   140017281:	push   r14
   140017283:	push   rcx
   140017284:	rex.RB jbe 0x1400172ec
   140017287:	outs   dx,BYTE PTR ds:[rsi]
   140017288:	je     0x1400172ca
   14001728a:	rex
   14001728b:	rex pop rdx
   14001728d:	add    BYTE PTR [rbx+0x69683f0c],bh
   140017293:	je     0x1400172d7
   140017295:	jne    0x14001730b
   140017297:	je     0x140017308
   140017299:	outs   dx,BYTE PTR ds:[rsi]
   14001729a:	rex push rcx
   14001729c:	rex.XB push 0x426b6365
   1400172a2:	outs   dx,DWORD PTR ds:[rsi]
   1400172a3:	js     0x1400172e5
   1400172a5:	rex
   1400172a6:	rex.WRB
   1400172a7:	rex.RB
   1400172a8:	rex.X
   1400172a9:	pop    r15
   1400172ab:	rex.WRX
   1400172ac:	rex.B
   1400172ad:	rex.RB
   1400172ae:	rex.X push rsi
   1400172b0:	push   rcx
   1400172b1:	push   rax
   1400172b2:	outs   dx,DWORD PTR ds:[rsi]
   1400172b3:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400172ba:	add    BYTE PTR [rax],al
   1400172bc:	(bad)  
   1400172bd:	(bad)  
   1400172be:	(bad)  
   1400172bf:	movsxd ebp,DWORD PTR [rax+0x65]
   1400172c2:	movsxd ebp,DWORD PTR [rbx+0x53]
   1400172c5:	je     0x140017328
   1400172c7:	je     0x14001732e
   1400172c9:	push   rbx
   1400172ca:	gs je  0x14001730d
   1400172cd:	push   rcx
   1400172ce:	rex.XB push 0x426b6365
   1400172d4:	outs   dx,DWORD PTR ds:[rsi]
   1400172d5:	js     0x140017317
   1400172d7:	rex
   1400172d8:	rex.WRB
   1400172d9:	rex.RB
   1400172da:	rex.B
   1400172db:	pop    r8
   1400172dd:	pop    rax
   1400172de:	pop    rdx
   1400172df:	add    ch,dl
   1400172e1:	adc    DWORD PTR [rdi],edi
   1400172e3:	outs   dx,BYTE PTR ds:[rsi]
   1400172e4:	gs js  0x14001735b
   1400172e7:	rex.XB push 0x536b6365
   1400172ed:	je     0x140017350
   1400172ef:	je     0x140017356
   1400172f1:	rex push rcx
   1400172f3:	rex.XB push 0x426b6365
   1400172f9:	outs   dx,DWORD PTR ds:[rsi]
   1400172fa:	js     0x14001733c
   1400172fc:	rex
   1400172fd:	rex.WRB
   1400172fe:	rex.RB
   1400172ff:	rex.B
   140017300:	pop    r8
   140017302:	pop    rax
   140017303:	pop    rdx
   140017304:	add    BYTE PTR [rax],al
   140017306:	mov    ecx,0x69733f1c
   14001730b:	jp     0x140017372
   14001730d:	imul   rbp,QWORD PTR [rsi+0x74],0x70535140
   140017315:	(bad)  
   140017316:	movsxd esp,DWORD PTR [rbp+0x72]
   140017319:	rex.WB je 0x140017381
   14001731c:	ins    DWORD PTR es:[rdi],dx
   14001731d:	rex
   14001731e:	rex push rbp
   140017320:	rex.RB
   140017321:	rex.X
   140017322:	rex.B (bad) 
   140017324:	push   r14
   140017326:	push   rcx
   140017327:	push   rbx
   140017328:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001732f:	add    dh,bh
   140017331:	adc    BYTE PTR [rdi],bh
   140017333:	ins    DWORD PTR es:[rdi],dx
   140017334:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001733b:	imul   edi,DWORD PTR [rdx+0x65],0x70535140
   140017342:	(bad)  
   140017343:	movsxd esp,DWORD PTR [rbp+0x72]
   140017346:	rex.WB je 0x1400173ae
   140017349:	ins    DWORD PTR es:[rdi],dx
   14001734a:	rex
   14001734b:	rex push rbp
   14001734d:	rex.RB
   14001734e:	rex.X
   14001734f:	rex.B (bad) 
   140017351:	push   r14
   140017353:	push   rcx
   140017354:	push   rbx
   140017355:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001735c:	add    BYTE PTR [rax],al
   14001735e:	xor    DWORD PTR [rax],edx
   140017360:	(bad)  
   140017361:	ins    DWORD PTR es:[rdi],dx
   140017362:	(bad)  
   140017363:	js     0x1400173ce
   140017365:	ins    DWORD PTR es:[rdi],dx
   140017366:	jne    0x1400173d5
   140017368:	push   rbx
   140017369:	imul   edi,DWORD PTR [rdx+0x65],0x70535140
   140017370:	(bad)  
   140017371:	movsxd esp,DWORD PTR [rbp+0x72]
   140017374:	rex.WB je 0x1400173dc
   140017377:	ins    DWORD PTR es:[rdi],dx
   140017378:	rex
   140017379:	rex push rbp
   14001737b:	rex.RB
   14001737c:	rex.X
   14001737d:	rex.B (bad) 
   14001737f:	push   r14
   140017381:	push   rcx
   140017382:	push   rbx
   140017383:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001738a:	add    BYTE PTR [rax],al
   14001738c:	sub    BYTE PTR [rbx],cl
   14001738e:	(bad)  
   14001738f:	gs js  0x140017402
   140017392:	(bad)  
   140017393:	outs   dx,BYTE PTR ds:[rsi]
   140017394:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   14001739c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400173a0:	outs   dx,BYTE PTR ds:[rsi]
   1400173a1:	jae    0x1400173e3
   1400173a3:	push   rcx
   1400173a4:	push   rbx
   1400173a5:	jo     0x140017408
   1400173a7:	movsxd esp,DWORD PTR [rbp+0x72]
   1400173aa:	rex.WB je 0x140017412
   1400173ad:	ins    DWORD PTR es:[rdi],dx
   1400173ae:	rex
   1400173af:	rex push rbp
   1400173b1:	rex.RB
   1400173b2:	rex.X
   1400173b3:	rex.B (bad) 
   1400173b5:	push   r14
   1400173b7:	(bad)  
   1400173b8:	and    al,0x51
   1400173ba:	rex.RX ins BYTE PTR es:[rdi],dx
   1400173bc:	(bad)  
   1400173bd:	addr32 jae 0x140017400
   1400173c0:	push   rdi
   1400173c1:	xor    al,0x4f
   1400173c3:	jb     0x14001742e
   1400173c5:	outs   dx,BYTE PTR gs:[rsi]
   1400173c7:	je     0x14001742a
   1400173c9:	je     0x140017434
   1400173cb:	outs   dx,DWORD PTR ds:[rsi]
   1400173cc:	outs   dx,BYTE PTR ds:[rsi]
   1400173cd:	rex push rcx
   1400173cf:	je     0x140017411
   1400173d1:	rex
   1400173d2:	rex
   1400173d3:	rex pop rax
   1400173d5:	pop    rdx
   1400173d6:	add    BYTE PTR [rax],al
   1400173d8:	popf   
   1400173d9:	sbb    BYTE PTR [rdi],bh
   1400173db:	jae    0x140017442
   1400173dd:	je     0x140017426
   1400173df:	outs   dx,DWORD PTR gs:[rsi]
   1400173e1:	ins    DWORD PTR es:[rdi],dx
   1400173e2:	gs je  0x140017457
   1400173e5:	jns    0x140017427
   1400173e7:	push   rcx
   1400173e8:	push   rbx
   1400173e9:	jo     0x14001744c
   1400173eb:	movsxd esp,DWORD PTR [rbp+0x72]
   1400173ee:	rex.WB je 0x140017456
   1400173f1:	ins    DWORD PTR es:[rdi],dx
   1400173f2:	rex
   1400173f3:	rex push rbp
   1400173f5:	rex.RB
   1400173f6:	rex.B
   1400173f7:	pop    r8
   1400173f9:	rex.B
   1400173fa:	rex.RB
   1400173fb:	rex.X push rsi
   1400173fd:	push   rcx
   1400173fe:	push   rdx
   1400173ff:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140017404:	rex pop rdx
   140017406:	add    BYTE PTR [rax],al
   140017408:	cld    
   140017409:	or     edi,DWORD PTR [rdi]
   14001740b:	outs   dx,DWORD PTR gs:[esi]
   14001740e:	ins    DWORD PTR es:[rdi],dx
   14001740f:	gs je  0x140017484
   140017412:	jns    0x140017454
   140017414:	push   rcx
   140017415:	push   rbx
   140017416:	jo     0x140017479
   140017418:	movsxd esp,DWORD PTR [rbp+0x72]
   14001741b:	rex.WB je 0x140017483
   14001741e:	ins    DWORD PTR es:[rdi],dx
   14001741f:	rex
   140017420:	rex push rbp
   140017422:	rex.RB
   140017423:	rex.X
   140017424:	rex.B (bad) 
   140017426:	push   r14
   140017428:	push   rcx
   140017429:	push   rdx
   14001742a:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001742f:	pop    rax
   140017430:	pop    rdx
   140017431:	add    BYTE PTR [rbx],dh
   140017433:	(bad)  
   140017434:	(bad)  
   140017435:	imul   esi,DWORD PTR [rbx+0x45],0x7974706d
   14001743c:	rex push rcx
   14001743e:	push   rbx
   14001743f:	jo     0x1400174a2
   140017441:	movsxd esp,DWORD PTR [rbp+0x72]
   140017444:	rex.WB je 0x1400174ac
   140017447:	ins    DWORD PTR es:[rdi],dx
   140017448:	rex
   140017449:	rex push rbp
   14001744b:	rex.RB
   14001744c:	rex.X
   14001744d:	pop    r15
   14001744f:	rex.WRX pop rax
   140017451:	pop    rdx
   140017452:	add    BYTE PTR [rax],al
   140017454:	(bad)  
   140017455:	or     al,0x3f
   140017457:	push   0x65487361
   14001745c:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140017463:	push   rdi
   140017464:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   14001746c:	jns    0x1400174dd
   14001746e:	jne    0x1400174e4
   140017470:	rex.WB je 0x1400174d8
   140017473:	ins    DWORD PTR es:[rdi],dx
   140017474:	rex
   140017475:	rex push rbp
   140017477:	rex.RB
   140017478:	rex.X
   140017479:	pop    r15
   14001747b:	rex.WRX pop rax
   14001747d:	pop    rdx
   14001747e:	add    BYTE PTR [rax],al
   140017480:	test   BYTE PTR [rdi+rdi*1],cl
   140017483:	push   0x68676965
   140017488:	je     0x1400174d0
   14001748a:	outs   dx,DWORD PTR ds:[rsi]
   14001748b:	jb     0x1400174e4
   14001748d:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140017495:	jns    0x140017506
   140017497:	jne    0x14001750d
   140017499:	rex.WB je 0x140017501
   14001749c:	ins    DWORD PTR es:[rdi],dx
   14001749d:	rex
   14001749e:	rex push rbp
   1400174a0:	rex.RB
   1400174a1:	rex.X
   1400174a2:	rex.B
   1400174a3:	rex.W
   1400174a4:	rex.W
   1400174a5:	rex pop rdx
   1400174a7:	add    ch,dh
   1400174a9:	adc    BYTE PTR [rdi],bh
   1400174ab:	ins    DWORD PTR es:[rdi],dx
   1400174ac:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   1400174b3:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   1400174bb:	push   rdi
   1400174bc:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   1400174c4:	jns    0x140017535
   1400174c6:	jne    0x14001753c
   1400174c8:	rex.WB je 0x140017530
   1400174cb:	ins    DWORD PTR es:[rdi],dx
   1400174cc:	rex
   1400174cd:	rex push rbp
   1400174cf:	rex.RB
   1400174d0:	rex.X
   1400174d1:	rex.B
   1400174d2:	rex.W
   1400174d3:	rex.W
   1400174d4:	rex pop rdx
   1400174d6:	add    BYTE PTR [rax],al
   1400174d8:	in     eax,dx
   1400174d9:	or     eax,0x766e693f
   1400174de:	(bad)  
   1400174df:	ins    BYTE PTR es:[rdi],dx
   1400174e0:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4c514065
   1400174e8:	(bad)  
   1400174e9:	jns    0x14001755a
   1400174eb:	jne    0x140017561
   1400174ed:	rex.WB je 0x140017555
   1400174f0:	ins    DWORD PTR es:[rdi],dx
   1400174f1:	rex
   1400174f2:	rex push rbp
   1400174f4:	rex.RB
   1400174f5:	rex.B
   1400174f6:	pop    r8
   1400174f8:	pop    rax
   1400174f9:	pop    rdx
   1400174fa:	add    BYTE PTR [rax],al
   1400174fc:	xchg   DWORD PTR [rdi],ecx
   1400174fe:	(bad)  
   1400174ff:	ins    BYTE PTR es:[rdi],dx
   140017500:	(bad)  
   140017501:	jns    0x140017572
   140017503:	jne    0x140017579
   140017505:	rex push rcx
   140017507:	rex.WR (bad) 
   140017509:	jns    0x14001757a
   14001750b:	jne    0x140017581
   14001750d:	rex.WB je 0x140017575
   140017510:	ins    DWORD PTR es:[rdi],dx
   140017511:	rex
   140017512:	rex push rbp
   140017514:	rex.RB
   140017515:	rex.B
   140017516:	push   r8
   140017518:	rex.RB
   140017519:	push   r14
   14001751b:	push   rcx
   14001751c:	rex.WR (bad) 
   14001751e:	jns    0x14001758f
   140017520:	jne    0x140017596
   140017522:	rex
   140017523:	rex pop rax
   140017525:	pop    rdx
   140017526:	add    BYTE PTR [rax],al
   140017528:	stc    
   140017529:	sbb    al,0x3f
   14001752b:	jae    0x14001759d
   14001752d:	(bad)  
   14001752e:	movsxd esp,DWORD PTR [rbp+0x72]
   140017531:	rex.WB je 0x140017599
   140017534:	ins    DWORD PTR es:[rdi],dx
   140017535:	rex push rcx
   140017537:	push   rbx
   140017538:	jo     0x14001759b
   14001753a:	movsxd esp,DWORD PTR [rbp+0x72]
   14001753d:	rex.WB je 0x1400175a5
   140017540:	ins    DWORD PTR es:[rdi],dx
   140017541:	rex
   140017542:	rex push rbp
   140017544:	rex.RB
   140017545:	rex.B
   140017546:	push   r8
   140017548:	rex.RB
   140017549:	push   r14
   14001754b:	xor    DWORD PTR [rax+0x58],eax
   14001754e:	pop    rdx
   14001754f:	add    BYTE PTR [rsi+0x6f633f07],dl
   140017555:	outs   dx,BYTE PTR ds:[rsi]
   140017556:	je     0x1400175ca
   140017558:	outs   dx,DWORD PTR ds:[rsi]
   140017559:	ins    BYTE PTR es:[rdi],dx
   14001755a:	push   rsp
   14001755b:	jns    0x1400175cd
   14001755d:	gs jae 0x1400175a0
   140017560:	push   rcx
   140017561:	rex.WR (bad) 
   140017563:	jns    0x1400175d4
   140017565:	jne    0x1400175db
   140017567:	rex.WB je 0x1400175cf
   14001756a:	ins    DWORD PTR es:[rdi],dx
   14001756b:	rex
   14001756c:	rex push rbp
   14001756e:	rex.RB
   14001756f:	rex.X
   140017570:	rex.B (bad) 
   140017572:	push   r14
   140017574:	(bad)  
   140017575:	and    al,0x51
   140017577:	rex.RX ins BYTE PTR es:[rdi],dx
   140017579:	(bad)  
   14001757a:	addr32 jae 0x1400175bd
   14001757d:	push   rdi
   14001757e:	xor    al,0x43
   140017580:	outs   dx,DWORD PTR ds:[rsi]
   140017581:	outs   dx,BYTE PTR ds:[rsi]
   140017582:	je     0x1400175f6
   140017584:	outs   dx,DWORD PTR ds:[rsi]
   140017585:	ins    BYTE PTR es:[rdi],dx
   140017586:	push   rsp
   140017587:	jns    0x1400175f9
   140017589:	gs rex push rcx
   14001758c:	push   rbx
   14001758d:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140017594:	movsxd edi,DWORD PTR [rcx+0x40]
   140017597:	rex
   140017598:	rex
   140017599:	rex pop rax
   14001759b:	pop    rdx
   14001759c:	add    BYTE PTR [rax],al
   14001759e:	xor    al,0x2
   1400175a0:	(bad)  
   1400175a1:	(bad)  
   1400175a2:	xor    DWORD PTR [rcx+0x53],edx
   1400175a5:	jo     0x140017608
   1400175a7:	movsxd esp,DWORD PTR [rbp+0x72]
   1400175aa:	rex.WB je 0x140017612
   1400175ad:	ins    DWORD PTR es:[rdi],dx
   1400175ae:	rex
   1400175af:	rex push rbp
   1400175b1:	rex.RB
   1400175b2:	rex.B
   1400175b3:	rex.B
   1400175b4:	rex pop rax
   1400175b6:	pop    rdx
   1400175b7:	add    BYTE PTR [rbx],al
   1400175b9:	add    bh,BYTE PTR [rdi]
   1400175bb:	(bad)  
   1400175bc:	xor    DWORD PTR [rcx+0x47],edx
   1400175bf:	jb     0x14001762a
   1400175c1:	fs rex.WR (bad) 
   1400175c4:	jns    0x140017635
   1400175c6:	jne    0x14001763c
   1400175c8:	rex
   1400175c9:	rex push rbp
   1400175cb:	rex.RB
   1400175cc:	rex.B
   1400175cd:	rex.B
   1400175ce:	rex pop rax
   1400175d0:	pop    rdx
   1400175d1:	add    BYTE PTR [rsi],cl
   1400175d3:	add    bh,BYTE PTR [rdi]
   1400175d5:	(bad)  
   1400175d6:	xor    DWORD PTR [rcx+0x4c],edx
   1400175d9:	(bad)  
   1400175da:	(bad)  
   1400175db:	gs ins BYTE PTR es:[rdi],dx
   1400175dd:	rex
   1400175de:	rex push rbp
   1400175e0:	rex.RB
   1400175e1:	rex.B
   1400175e2:	rex.B
   1400175e3:	rex pop rax
   1400175e5:	pop    rdx
   1400175e6:	add    BYTE PTR [rax],al
   1400175e8:	je     0x1400175ec
   1400175ea:	(bad)  
   1400175eb:	(bad)  
   1400175ec:	xor    DWORD PTR [rcx+0x57],edx
   1400175ef:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400175f7:	rex.RB
   1400175f8:	rex.B
   1400175f9:	rex.B
   1400175fa:	rex pop rax
   1400175fc:	pop    rdx
   1400175fd:	add    BYTE PTR [rip+0x313f3f02],al        # 0x17140b505
   140017603:	push   rcx
   140017604:	rex.W
   140017605:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017607:	js     0x140017655
   140017609:	(bad)  
   14001760a:	jns    0x14001767b
   14001760c:	jne    0x140017682
   14001760e:	rex
   14001760f:	rex push rbp
   140017611:	rex.RB
   140017612:	rex.B
   140017613:	rex.B
   140017614:	rex pop rax
   140017616:	pop    rdx
   140017617:	add    dh,al
   140017619:	add    DWORD PTR [rdi],edi
   14001761b:	(bad)  
   14001761c:	xor    DWORD PTR [rcx+0x44],edx
   14001761f:	outs   dx,DWORD PTR ds:[rsi]
   140017620:	jne    0x140017684
   140017622:	ins    BYTE PTR es:[rdi],dx
   140017623:	gs push rbx
   140017625:	jo     0x140017690
   140017627:	outs   dx,BYTE PTR ds:[rsi]
   140017628:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001762a:	js     0x14001766c
   14001762c:	rex push rbp
   14001762e:	rex.RB
   14001762f:	rex.B
   140017630:	rex.B
   140017631:	rex pop rax
   140017633:	pop    rdx
   140017634:	add    BYTE PTR [rax],al
   140017636:	mov    bl,0x1
   140017638:	(bad)  
   140017639:	(bad)  
   14001763a:	xor    DWORD PTR [rcx+0x43],edx
   14001763d:	push   0x426b6365
   140017642:	outs   dx,DWORD PTR ds:[rsi]
   140017643:	js     0x140017685
   140017645:	rex push rbp
   140017647:	rex.RB
   140017648:	rex.B
   140017649:	rex.B
   14001764a:	rex pop rax
   14001764c:	pop    rdx
   14001764d:	add    BYTE PTR [rbx+0x20],ah
   140017650:	(bad)  
   140017651:	jne    0x1400176c3
   140017653:	fs (bad) 
   140017655:	je     0x1400176bc
   140017657:	rex push rcx
   140017659:	push   rdi
   14001765a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140017662:	rex.RB
   140017663:	rex.B
   140017664:	pop    r8
   140017666:	pop    rax
   140017667:	pop    rdx
   140017668:	add    BYTE PTR [rax],al
   14001766a:	and    bl,BYTE PTR [rip+0x6174733f]        # 0x1a175e9af
   140017670:	jb     0x1400176e6
   140017672:	rex.R jb 0x1400176d6
   140017675:	imul   r14d,DWORD PTR [ebx+0x74],0x65636e61
   14001767e:	rex push rcx
   140017680:	rex.B jo 0x1400176f3
   140017683:	ins    BYTE PTR es:[rdi],dx
   140017684:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001768b:	rex
   14001768c:	rex push rbx
   14001768e:	rex.B
   14001768f:	rex.W pop rax
   140017691:	pop    rdx
   140017692:	add    BYTE PTR [rax],al
   140017694:	jmp    0x1a977b5b9
   140017699:	gs ja  0x14001770c
   14001769c:	outs   dx,DWORD PTR ds:[rsi]
   14001769d:	jb     0x140017713
   14001769f:	rex push rcx
   1400176a1:	(bad)
   1400176a7:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400176ab:	jb     0x14001771c
   1400176ad:	ins    BYTE PTR es:[rdi],dx
   1400176ae:	ins    BYTE PTR es:[rdi],dx
   1400176af:	rex.B jb 0x140017717
   1400176b2:	(bad)  
   1400176b3:	rex
   1400176b4:	rex push rcx
   1400176b6:	rex.RB
   1400176b7:	rex.X
   1400176b8:	push   r8
   1400176ba:	rex.RB
   1400176bb:	push   r14
   1400176bd:	push   rcx
   1400176be:	push   rdi
   1400176bf:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   1400176c7:	pop    rdx
   1400176c8:	add    BYTE PTR [rax],al
   1400176ca:	pop    rsi
   1400176cb:	add    eax,0x6464613f
   1400176d0:	push   rbx
   1400176d1:	jo     0x140017734
   1400176d3:	movsxd esp,DWORD PTR [rbp+0x72]
   1400176d6:	rex.WB je 0x14001773e
   1400176d9:	ins    DWORD PTR es:[rdi],dx
   1400176da:	rex push rcx
   1400176dc:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400176de:	js     0x14001772c
   1400176e0:	(bad)  
   1400176e1:	jns    0x140017752
   1400176e3:	jne    0x140017759
   1400176e5:	rex
   1400176e6:	rex push rcx
   1400176e8:	rex.RB
   1400176e9:	rex.B
   1400176ea:	pop    r8
   1400176ec:	push   rax
   1400176ed:	rex.RB
   1400176ee:	push   r14
   1400176f0:	push   rcx
   1400176f1:	push   rbx
   1400176f2:	jo     0x140017755
   1400176f4:	movsxd esp,DWORD PTR [rbp+0x72]
   1400176f7:	rex.WB je 0x14001775f
   1400176fa:	ins    DWORD PTR es:[rdi],dx
   1400176fb:	rex
   1400176fc:	rex
   1400176fd:	rex pop rdx
   1400176ff:	add    BYTE PTR [rdx],ah
   140017701:	sbb    BYTE PTR [rdi],bh
   140017703:	jae    0x14001776a
   140017705:	je     0x14001774c
   140017707:	outs   dx,BYTE PTR ds:[rsi]
   140017708:	(bad)  
   140017709:	(bad)  
   14001770a:	ins    BYTE PTR es:[rdi],dx
   14001770b:	gs fs rex push rcx
   14001770f:	push   rdi
   140017710:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140017718:	rex.RB
   140017719:	rex.B
   14001771a:	pop    r8
   14001771c:	pop    rdi
   14001771d:	rex.WRX
   14001771e:	rex pop rdx
   140017720:	add    BYTE PTR [rax],al
   140017722:	mov    ah,0x1b
   140017724:	(bad)  
   140017725:	jae    0x14001778c
   140017727:	je     0x14001777f
   140017729:	(bad)  
   14001772a:	ins    BYTE PTR es:[rdi],dx
   14001772b:	jne    0x140017792
   14001772d:	rex push rcx
   14001772f:	rex.R outs dx,DWORD PTR ds:[rsi]
   140017731:	jne    0x140017795
   140017733:	ins    BYTE PTR es:[rdi],dx
   140017734:	gs push rbx
   140017736:	jo     0x1400177a1
   140017738:	outs   dx,BYTE PTR ds:[rsi]
   140017739:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001773b:	js     0x14001777d
   14001773d:	rex push rcx
   14001773f:	rex.RB
   140017740:	rex.B
   140017741:	pop    r8
   140017743:	rex.WRX
   140017744:	rex pop rdx
   140017746:	add    BYTE PTR [rax],al
   140017748:	cmp    DWORD PTR [rcx],ebx
   14001774a:	(bad)  
   14001774b:	jae    0x1400177b2
   14001774d:	je     0x14001779b
   14001774f:	(bad)  
   140017750:	jns    0x1400177c1
   140017752:	jne    0x1400177c8
   140017754:	rex push rcx
   140017756:	push   rdi
   140017757:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001775f:	rex.RB
   140017760:	rex.B
   140017761:	pop    r8
   140017763:	push   rax
   140017764:	rex.RB
   140017765:	push   r14
   140017767:	push   rcx
   140017768:	rex.WR (bad) 
   14001776a:	jns    0x1400177db
   14001776c:	jne    0x1400177e2
   14001776e:	rex
   14001776f:	rex
   140017770:	rex pop rdx
   140017772:	add    BYTE PTR [rax],al
   140017774:	rex.WRX sbb QWORD PTR [rdi],r15
   140017777:	jae    0x1400177de
   140017779:	je     0x1400177c8
   14001777b:	(bad)  
   14001777c:	jb     0x1400177e5
   14001777e:	imul   ebp,DWORD PTR [rsi+0x40],0x79614c51
   140017785:	outs   dx,DWORD PTR ds:[rsi]
   140017786:	jne    0x1400177fc
   140017788:	rex
   140017789:	rex push rcx
   14001778b:	rex.RB
   14001778c:	rex.B
   14001778d:	pop    r8
   14001778f:	rex.W
   140017790:	rex pop rdx
   140017792:	add    BYTE PTR [rax],al
   140017794:	xchg   ecx,eax
   140017795:	add    DWORD PTR [rdi],edi
   140017797:	(bad)  
   140017798:	xor    BYTE PTR [rcx+0x56],dl
   14001779b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001779d:	js     0x1400177eb
   14001779f:	(bad)  
   1400177a0:	jns    0x140017811
   1400177a2:	jne    0x140017818
   1400177a4:	rex
   1400177a5:	rex push rcx
   1400177a7:	rex.RB
   1400177a8:	rex.B
   1400177a9:	rex.B
   1400177aa:	rex push rax
   1400177ac:	rex.RB
   1400177ad:	push   r14
   1400177af:	push   rcx
   1400177b0:	push   rdi
   1400177b1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400177b9:	pop    rdx
   1400177ba:	add    BYTE PTR [rax],al
   1400177bc:	out    dx,eax
   1400177bd:	sbb    edi,DWORD PTR [rdi]
   1400177bf:	jae    0x140017826
   1400177c1:	je     0x14001781a
   1400177c3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x53514074
   1400177cb:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400177ce:	ins    BYTE PTR es:[rdi],dx
   1400177cf:	ins    BYTE PTR es:[rdi],dx
   1400177d0:	rex.B jb 0x140017838
   1400177d3:	(bad)  
   1400177d4:	rex
   1400177d5:	rex push rcx
   1400177d7:	rex.RB
   1400177d8:	rex.B
   1400177d9:	pop    r8
   1400177db:	push   rax
   1400177dc:	rex.RB
   1400177dd:	push   r14
   1400177df:	push   rcx
   1400177e0:	push   rdi
   1400177e1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400177e9:	pop    rdx
   1400177ea:	add    BYTE PTR [rax],al
   1400177ec:	(bad)  
   1400177ed:	sbb    BYTE PTR [rdi],bh
   1400177ef:	jae    0x140017856
   1400177f1:	je     0x14001783b
   1400177f3:	outs   dx,DWORD PTR ds:[rsi]
   1400177f4:	jb     0x14001785f
   1400177f6:	jp     0x140017867
   1400177f8:	outs   dx,BYTE PTR ds:[rsi]
   1400177f9:	je     0x14001785c
   1400177fb:	ins    BYTE PTR es:[rdi],dx
   1400177fc:	push   rbx
   1400177fd:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017800:	ins    BYTE PTR es:[rdi],dx
   140017801:	ins    BYTE PTR es:[rdi],dx
   140017802:	rex.X (bad) 
   140017804:	jb     0x140017856
   140017806:	outs   dx,DWORD PTR ds:[rsi]
   140017807:	ins    BYTE PTR es:[rdi],dx
   140017808:	imul   esp,DWORD PTR [rbx+0x79],0x62415140
   14001780f:	jae    0x140017885
   140017811:	jb     0x140017874
   140017813:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017817:	jb     0x140017888
   140017819:	ins    BYTE PTR es:[rdi],dx
   14001781a:	ins    BYTE PTR es:[rdi],dx
   14001781b:	rex.B jb 0x140017883
   14001781e:	(bad)  
   14001781f:	rex
   140017820:	rex push rcx
   140017822:	rex.RB
   140017823:	rex.B
   140017824:	pop    r8
   140017826:	push   rdi
   140017827:	xor    al,0x53
   140017829:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001782c:	ins    BYTE PTR es:[rdi],dx
   14001782d:	ins    BYTE PTR es:[rdi],dx
   14001782e:	rex.X (bad) 
   140017830:	jb     0x140017882
   140017832:	outs   dx,DWORD PTR ds:[rsi]
   140017833:	ins    BYTE PTR es:[rdi],dx
   140017834:	imul   esp,DWORD PTR [rbx+0x79],0x40745140
   14001783b:	rex
   14001783c:	rex pop rdx
   14001783e:	add    BYTE PTR [rax],al
   140017840:	repnz sbb edi,DWORD PTR [rdi]
   140017843:	jae    0x1400178aa
   140017845:	je     0x14001789e
   140017847:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x73655274
   14001784f:	imul   edi,DWORD PTR [rdx+0x61],0x40656c62
   140017856:	push   rcx
   140017857:	push   rbx
   140017858:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001785b:	ins    BYTE PTR es:[rdi],dx
   14001785c:	ins    BYTE PTR es:[rdi],dx
   14001785d:	rex.B jb 0x1400178c5
   140017860:	(bad)  
   140017861:	rex
   140017862:	rex push rcx
   140017864:	rex.RB
   140017865:	rex.B
   140017866:	pop    r8
   140017868:	pop    rdi
   140017869:	rex.WRX
   14001786a:	rex pop rdx
   14001786c:	add    BYTE PTR [rax],al
   14001786e:	lea    ebx,[rax]
   140017870:	(bad)  
   140017871:	jae    0x1400178d8
   140017873:	je     0x1400178bb
   140017875:	jb     0x1400178d8
   140017877:	ins    DWORD PTR es:[rdi],dx
   140017878:	gs push rbx
   14001787a:	je     0x1400178f5
   14001787c:	ins    BYTE PTR es:[rdi],dx
   14001787d:	gs rex push rcx
   140017880:	rex.RX jb 0x1400178e4
   140017883:	ins    DWORD PTR es:[rdi],dx
   140017884:	gs rex
   140017886:	rex push rcx
   140017888:	rex.RB
   140017889:	rex.B
   14001788a:	pop    r8
   14001788c:	rex.W
   14001788d:	rex pop rdx
   14001788f:	add    BYTE PTR [rdx+0x21],al
   140017892:	(bad)  
   140017893:	ja     0x1400178fe
   140017895:	fs addr32 gs je 0x1400178da
   14001789a:	push   rcx
   14001789b:	push   rbx
   14001789c:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001789f:	ins    BYTE PTR es:[rdi],dx
   1400178a0:	ins    BYTE PTR es:[rdi],dx
   1400178a1:	rex.B jb 0x140017909
   1400178a4:	(bad)  
   1400178a5:	rex
   1400178a6:	rex push rcx
   1400178a8:	rex.RB
   1400178a9:	rex.X
   1400178aa:	push   r8
   1400178ac:	rex.RB
   1400178ad:	push   r14
   1400178af:	push   rcx
   1400178b0:	push   rdi
   1400178b1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   1400178b9:	pop    rdx
   1400178ba:	add    BYTE PTR [rax],al
   1400178bc:	hlt    
   1400178bd:	add    BYTE PTR [rdi],bh
   1400178bf:	(bad)  
   1400178c0:	xor    BYTE PTR [rcx+0x53],dl
   1400178c3:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400178c6:	ins    BYTE PTR es:[rdi],dx
   1400178c7:	ins    BYTE PTR es:[rdi],dx
   1400178c8:	rex.B jb 0x140017930
   1400178cb:	(bad)  
   1400178cc:	rex
   1400178cd:	rex push rcx
   1400178cf:	rex.RB
   1400178d0:	rex.B
   1400178d1:	rex.B
   1400178d2:	rex push rax
   1400178d4:	rex.RB
   1400178d5:	push   r14
   1400178d7:	push   rcx
   1400178d8:	push   rdi
   1400178d9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400178e1:	pop    rdx
   1400178e2:	add    BYTE PTR [rax],al
   1400178e4:	stos   DWORD PTR es:[rdi],eax
   1400178e5:	adc    BYTE PTR [rdi],bh
   1400178e7:	ins    DWORD PTR es:[rdi],dx
   1400178e8:	gs je  0x14001794c
   1400178eb:	rex.WRXB (bad) 
   1400178ed:	push   0x65
   1400178ef:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400178f3:	push   rbx
   1400178f4:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400178f7:	ins    BYTE PTR es:[rdi],dx
   1400178f8:	ins    BYTE PTR es:[rdi],dx
   1400178f9:	rex.B jb 0x140017961
   1400178fc:	(bad)  
   1400178fd:	rex
   1400178fe:	rex push rbp
   140017900:	rex.RB
   140017901:	rex.X
   140017902:	push   r8
   140017904:	rex.RB
   140017905:	rex.X push rbp
   140017907:	push   rcx
   140017908:	rex.WRB
   140017909:	gs je  0x14001796d
   14001790c:	rex.WRXB (bad) 
   14001790e:	push   0x65
   140017910:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017914:	pop    rax
   140017915:	pop    rdx
   140017916:	add    BYTE PTR [rax],al
   140017918:	(bad)  
   140017919:	adc    al,0x3f
   14001791b:	jno    0x140017991
   14001791d:	pop    rdi
   14001791e:	ins    DWORD PTR es:[rdi],dx
   14001791f:	gs je  0x140017983
   140017922:	movsxd esp,DWORD PTR [rcx+0x73]
   140017925:	je     0x140017967
   140017927:	push   rcx
   140017928:	push   rbx
   140017929:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001792c:	ins    BYTE PTR es:[rdi],dx
   14001792d:	ins    BYTE PTR es:[rdi],dx
   14001792e:	rex.B jb 0x140017996
   140017931:	(bad)  
   140017932:	rex
   140017933:	rex push rbp
   140017935:	rex.RB
   140017936:	rex.B
   140017937:	push   r8
   140017939:	rex.RB
   14001793a:	pop    r8
   14001793c:	push   rax
   14001793d:	rex.RB
   14001793e:	rex.X
   14001793f:	rex.R
   140017940:	rex pop rdx
   140017942:	add    BYTE PTR [rax],al
   140017944:	xchg   esp,eax
   140017945:	adc    edi,DWORD PTR [rdi]
   140017947:	jno    0x1400179bd
   140017949:	pop    rdi
   14001794a:	ins    DWORD PTR es:[rdi],dx
   14001794b:	gs je  0x1400179af
   14001794e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140017951:	ins    BYTE PTR es:[rdi],dx
   140017952:	rex push rcx
   140017954:	push   rbx
   140017955:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017958:	ins    BYTE PTR es:[rdi],dx
   140017959:	ins    BYTE PTR es:[rdi],dx
   14001795a:	rex.B jb 0x1400179c2
   14001795d:	(bad)  
   14001795e:	rex
   14001795f:	rex push rbp
   140017961:	rex.RB
   140017962:	rex.B
   140017963:	rex.B
   140017964:	rex.W push rdi
   140017966:	xor    al,0x43
   140017968:	(bad)  
   140017969:	ins    BYTE PTR es:[rdi],dx
   14001796a:	ins    BYTE PTR es:[rdi],dx
   14001796b:	rex push rcx
   14001796d:	rex.WRB
   14001796e:	gs je  0x1400179d2
   140017971:	rex.WRXB (bad) 
   140017973:	push   0x65
   140017975:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017979:	rex.W push rax
   14001797b:	rex.RB
   14001797c:	push   r8
   14001797e:	rex.RB
   14001797f:	pop    r8
   140017981:	rex pop rdx
   140017983:	add    dh,ah
   140017985:	or     bh,BYTE PTR [rdi]
   140017987:	gs jbe 0x1400179ef
   14001798a:	outs   dx,BYTE PTR ds:[rsi]
   14001798b:	je     0x1400179cd
   14001798d:	push   rcx
   14001798e:	push   rbx
   14001798f:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017992:	ins    BYTE PTR es:[rdi],dx
   140017993:	ins    BYTE PTR es:[rdi],dx
   140017994:	rex.B jb 0x1400179fc
   140017997:	(bad)  
   140017998:	rex
   140017999:	rex
   14001799a:	rex.WRB
   14001799b:	rex.RB
   14001799c:	rex.B
   14001799d:	pop    r15
   14001799f:	rex.WRX push rax
   1400179a1:	rex.RB
   1400179a2:	push   r14
   1400179a4:	push   rcx
   1400179a5:	rex.RB jbe 0x140017a0d
   1400179a8:	outs   dx,BYTE PTR ds:[rsi]
   1400179a9:	je     0x1400179eb
   1400179ab:	rex
   1400179ac:	rex pop rdx
   1400179ae:	add    BYTE PTR [rax],al
   1400179b0:	or     al,0xb
   1400179b2:	(bad)  
   1400179b3:	gs jbe 0x140017a1b
   1400179b6:	outs   dx,BYTE PTR ds:[rsi]
   1400179b7:	je     0x1400179ff
   1400179b9:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x53514072
   1400179c1:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400179c4:	ins    BYTE PTR es:[rdi],dx
   1400179c5:	ins    BYTE PTR es:[rdi],dx
   1400179c6:	rex.B jb 0x140017a2e
   1400179c9:	(bad)  
   1400179ca:	rex
   1400179cb:	rex
   1400179cc:	rex.WRB
   1400179cd:	rex.RB
   1400179ce:	rex.B
   1400179cf:	pop    r15
   1400179d1:	rex.WRX push rax
   1400179d3:	rex.RB
   1400179d4:	push   r14
   1400179d6:	push   rcx
   1400179d7:	rex.WRXB (bad) 
   1400179d9:	push   0x65
   1400179db:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400179df:	push   rax
   1400179e0:	rex.RB
   1400179e1:	push   r14
   1400179e3:	push   rcx
   1400179e4:	rex.RB jbe 0x140017a4c
   1400179e7:	outs   dx,BYTE PTR ds:[rsi]
   1400179e8:	je     0x140017a2a
   1400179ea:	rex
   1400179eb:	rex pop rdx
   1400179ed:	add    BYTE PTR [rbp+0x69733f1c],dh
   1400179f3:	jp     0x140017a5a
   1400179f5:	imul   rbp,QWORD PTR [rsi+0x74],0x63535140
   1400179fd:	jb     0x140017a6e
   1400179ff:	ins    BYTE PTR es:[rdi],dx
   140017a00:	ins    BYTE PTR es:[rdi],dx
   140017a01:	rex.B jb 0x140017a69
   140017a04:	(bad)  
   140017a05:	rex
   140017a06:	rex push rbp
   140017a08:	rex.RB
   140017a09:	rex.X
   140017a0a:	rex.B (bad) 
   140017a0c:	push   r14
   140017a0e:	push   rcx
   140017a0f:	push   rbx
   140017a10:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017a17:	add    BYTE PTR [rbx],al
   140017a19:	adc    DWORD PTR [rdi],edi
   140017a1b:	ins    DWORD PTR es:[rdi],dx
   140017a1c:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140017a23:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140017a2a:	rex push rcx
   140017a2c:	(bad)
   140017a32:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017a36:	jb     0x140017aa7
   140017a38:	ins    BYTE PTR es:[rdi],dx
   140017a39:	ins    BYTE PTR es:[rdi],dx
   140017a3a:	rex.B jb 0x140017aa2
   140017a3d:	(bad)  
   140017a3e:	rex
   140017a3f:	rex push rbp
   140017a41:	rex.RB
   140017a42:	rex.X
   140017a43:	rex.B (bad) 
   140017a45:	push   r14
   140017a47:	push   rcx
   140017a48:	push   rbx
   140017a49:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017a50:	add    BYTE PTR [rax],al
   140017a52:	imul   edx,DWORD PTR [rcx],0x756f6d3f
   140017a58:	jae    0x140017abf
   140017a5a:	push   rax
   140017a5b:	jb     0x140017ac2
   140017a5d:	jae    0x140017ad2
   140017a5f:	rex.RB jbe 0x140017ac7
   140017a62:	outs   dx,BYTE PTR ds:[rsi]
   140017a63:	je     0x140017aa5
   140017a65:	push   rcx
   140017a66:	(bad)
   140017a6c:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017a70:	jb     0x140017ae1
   140017a72:	ins    BYTE PTR es:[rdi],dx
   140017a73:	ins    BYTE PTR es:[rdi],dx
   140017a74:	rex.B jb 0x140017adc
   140017a77:	(bad)  
   140017a78:	rex
   140017a79:	rex
   140017a7a:	rex.WRB
   140017a7b:	rex.RB
   140017a7c:	rex.B
   140017a7d:	pop    r8
   140017a7f:	push   rax
   140017a80:	rex.RB
   140017a81:	push   r14
   140017a83:	push   rcx
   140017a84:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017a86:	jne    0x140017afb
   140017a88:	gs rex.RB jbe 0x140017af1
   140017a8c:	outs   dx,BYTE PTR ds:[rsi]
   140017a8d:	je     0x140017acf
   140017a8f:	rex
   140017a90:	rex pop rdx
   140017a92:	add    BYTE PTR [rax],al
   140017a94:	mov    DWORD PTR [rcx],edx
   140017a96:	(bad)  
   140017a97:	ins    DWORD PTR es:[rdi],dx
   140017a98:	outs   dx,DWORD PTR ds:[rsi]
   140017a99:	jne    0x140017b0e
   140017a9b:	gs push rdx
   140017a9d:	gs ins BYTE PTR es:[rdi],dx
   140017a9f:	gs (bad) 
   140017aa1:	jae    0x140017b08
   140017aa3:	rex.RB jbe 0x140017b0b
   140017aa6:	outs   dx,BYTE PTR ds:[rsi]
   140017aa7:	je     0x140017ae9
   140017aa9:	push   rcx
   140017aaa:	(bad)
   140017ab0:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017ab4:	jb     0x140017b25
   140017ab6:	ins    BYTE PTR es:[rdi],dx
   140017ab7:	ins    BYTE PTR es:[rdi],dx
   140017ab8:	rex.B jb 0x140017b20
   140017abb:	(bad)  
   140017abc:	rex
   140017abd:	rex
   140017abe:	rex.WRB
   140017abf:	rex.RB
   140017ac0:	rex.B
   140017ac1:	pop    r8
   140017ac3:	push   rax
   140017ac4:	rex.RB
   140017ac5:	push   r14
   140017ac7:	push   rcx
   140017ac8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017aca:	jne    0x140017b3f
   140017acc:	gs rex.RB jbe 0x140017b35
   140017ad0:	outs   dx,BYTE PTR ds:[rsi]
   140017ad1:	je     0x140017b13
   140017ad3:	rex
   140017ad4:	rex pop rdx
   140017ad6:	add    BYTE PTR [rax],al
   140017ad8:	cmp    BYTE PTR [rcx],dl
   140017ada:	(bad)  
   140017adb:	ins    DWORD PTR es:[rdi],dx
   140017adc:	outs   dx,DWORD PTR ds:[rsi]
   140017add:	jne    0x140017b52
   140017adf:	rex.R outs dx,DWORD PTR gs:[rsi]
   140017ae2:	jne    0x140017b46
   140017ae4:	ins    BYTE PTR es:[rdi],dx
   140017ae5:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140017ae8:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140017aef:	je     0x140017b31
   140017af1:	push   rcx
   140017af2:	(bad)
   140017af8:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017afc:	jb     0x140017b6d
   140017afe:	ins    BYTE PTR es:[rdi],dx
   140017aff:	ins    BYTE PTR es:[rdi],dx
   140017b00:	rex.B jb 0x140017b68
   140017b03:	(bad)  
   140017b04:	rex
   140017b05:	rex
   140017b06:	rex.WRB
   140017b07:	rex.RB
   140017b08:	rex.B
   140017b09:	pop    r8
   140017b0b:	push   rax
   140017b0c:	rex.RB
   140017b0d:	push   r14
   140017b0f:	push   rcx
   140017b10:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017b12:	jne    0x140017b87
   140017b14:	gs rex.RB jbe 0x140017b7d
   140017b18:	outs   dx,BYTE PTR ds:[rsi]
   140017b19:	je     0x140017b5b
   140017b1b:	rex
   140017b1c:	rex pop rdx
   140017b1e:	add    BYTE PTR [rax],al
   140017b20:	adc    QWORD PTR [r15],rdi
   140017b23:	ins    DWORD PTR es:[rdi],dx
   140017b24:	outs   dx,DWORD PTR ds:[rsi]
   140017b25:	jne    0x140017b9a
   140017b27:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140017b2a:	jbe    0x140017b91
   140017b2c:	rex.RB jbe 0x140017b94
   140017b2f:	outs   dx,BYTE PTR ds:[rsi]
   140017b30:	je     0x140017b72
   140017b32:	push   rcx
   140017b33:	(bad)
   140017b39:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017b3d:	jb     0x140017bae
   140017b3f:	ins    BYTE PTR es:[rdi],dx
   140017b40:	ins    BYTE PTR es:[rdi],dx
   140017b41:	rex.B jb 0x140017ba9
   140017b44:	(bad)  
   140017b45:	rex
   140017b46:	rex
   140017b47:	rex.WRB
   140017b48:	rex.RB
   140017b49:	rex.B
   140017b4a:	pop    r8
   140017b4c:	push   rax
   140017b4d:	rex.RB
   140017b4e:	push   r14
   140017b50:	push   rcx
   140017b51:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140017b53:	jne    0x140017bc8
   140017b55:	gs rex.RB jbe 0x140017bbe
   140017b59:	outs   dx,BYTE PTR ds:[rsi]
   140017b5a:	je     0x140017b9c
   140017b5c:	rex
   140017b5d:	rex pop rdx
   140017b5f:	add    BYTE PTR [rip+0x68773f21],ah        # 0x1a878ba86
   140017b65:	gs gs ins BYTE PTR es:[rdi],dx
   140017b68:	rex.RB jbe 0x140017bd0
   140017b6b:	outs   dx,BYTE PTR ds:[rsi]
   140017b6c:	je     0x140017bae
   140017b6e:	push   rcx
   140017b6f:	(bad)
   140017b75:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017b79:	jb     0x140017bea
   140017b7b:	ins    BYTE PTR es:[rdi],dx
   140017b7c:	ins    BYTE PTR es:[rdi],dx
   140017b7d:	rex.B jb 0x140017be5
   140017b80:	(bad)  
   140017b81:	rex
   140017b82:	rex
   140017b83:	rex.WRB
   140017b84:	rex.RB
   140017b85:	rex.B
   140017b86:	pop    r8
   140017b88:	push   rax
   140017b89:	rex.RB
   140017b8a:	push   r14
   140017b8c:	push   rcx
   140017b8d:	push   rdi
   140017b8e:	push   0x456c6565
   140017b93:	jbe    0x140017bfa
   140017b95:	outs   dx,BYTE PTR ds:[rsi]
   140017b96:	je     0x140017bd8
   140017b98:	rex
   140017b99:	rex pop rdx
   140017b9b:	add    BYTE PTR [rdi],bh
   140017b9d:	(bad)  
   140017b9f:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140017ba3:	jb     0x140017c0a
   140017ba5:	jae    0x140017c1a
   140017ba7:	rex.RB jbe 0x140017c0f
   140017baa:	outs   dx,BYTE PTR ds:[rsi]
   140017bab:	je     0x140017bed
   140017bad:	push   rcx
   140017bae:	(bad)
   140017bb4:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017bb8:	jb     0x140017c29
   140017bba:	ins    BYTE PTR es:[rdi],dx
   140017bbb:	ins    BYTE PTR es:[rdi],dx
   140017bbc:	rex.B jb 0x140017c24
   140017bbf:	(bad)  
   140017bc0:	rex
   140017bc1:	rex
   140017bc2:	rex.WRB
   140017bc3:	rex.RB
   140017bc4:	rex.B
   140017bc5:	pop    r8
   140017bc7:	push   rax
   140017bc8:	rex.RB
   140017bc9:	push   r14
   140017bcb:	push   rcx
   140017bcc:	rex.WXB
   140017bcd:	gs jns 0x140017c15
   140017bd0:	jbe    0x140017c37
   140017bd2:	outs   dx,BYTE PTR ds:[rsi]
   140017bd3:	je     0x140017c15
   140017bd5:	rex
   140017bd6:	rex pop rdx
   140017bd8:	add    BYTE PTR [rax],al
   140017bda:	push   rax
   140017bdb:	adc    bh,BYTE PTR [rdi]
   140017bdd:	jo     0x140017c40
   140017bdf:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140017be6:	je     0x140017c28
   140017be8:	push   rcx
   140017be9:	(bad)
   140017bef:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017bf3:	jb     0x140017c64
   140017bf5:	ins    BYTE PTR es:[rdi],dx
   140017bf6:	ins    BYTE PTR es:[rdi],dx
   140017bf7:	rex.B jb 0x140017c5f
   140017bfa:	(bad)  
   140017bfb:	rex
   140017bfc:	rex
   140017bfd:	rex.WRB
   140017bfe:	rex.RB
   140017bff:	rex.B
   140017c00:	pop    r8
   140017c02:	push   rax
   140017c03:	rex.RB
   140017c04:	push   r14
   140017c06:	push   rcx
   140017c07:	push   rax
   140017c08:	(bad)  
   140017c09:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140017c10:	je     0x140017c52
   140017c12:	rex
   140017c13:	rex pop rdx
   140017c15:	add    BYTE PTR [rcx+0x65723f15],bl
   140017c1b:	jae    0x140017c86
   140017c1d:	jp     0x140017c84
   140017c1f:	rex.RB jbe 0x140017c87
   140017c22:	outs   dx,BYTE PTR ds:[rsi]
   140017c23:	je     0x140017c65
   140017c25:	push   rcx
   140017c26:	push   rbx
   140017c27:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017c2a:	ins    BYTE PTR es:[rdi],dx
   140017c2b:	ins    BYTE PTR es:[rdi],dx
   140017c2c:	rex.B jb 0x140017c94
   140017c2f:	(bad)  
   140017c30:	rex
   140017c31:	rex
   140017c32:	rex.WRB
   140017c33:	rex.RB
   140017c34:	rex.B
   140017c35:	pop    r8
   140017c37:	push   rax
   140017c38:	rex.RB
   140017c39:	push   r14
   140017c3b:	push   rcx
   140017c3c:	push   rdx
   140017c3d:	gs jae 0x140017ca9
   140017c40:	jp     0x140017ca7
   140017c42:	rex.RB jbe 0x140017caa
   140017c45:	outs   dx,BYTE PTR ds:[rsi]
   140017c46:	je     0x140017c88
   140017c48:	rex
   140017c49:	rex pop rdx
   140017c4b:	add    BYTE PTR [rdx+0x6f633f07],al
   140017c51:	outs   dx,BYTE PTR ds:[rsi]
   140017c52:	je     0x140017cb9
   140017c54:	js     0x140017cca
   140017c56:	rex.WRB
   140017c57:	outs   dx,BYTE PTR gs:[rsi]
   140017c59:	jne    0x140017ca0
   140017c5b:	jbe    0x140017cc2
   140017c5d:	outs   dx,BYTE PTR ds:[rsi]
   140017c5e:	je     0x140017ca0
   140017c60:	push   rcx
   140017c61:	(bad)
   140017c67:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017c6b:	jb     0x140017cdc
   140017c6d:	ins    BYTE PTR es:[rdi],dx
   140017c6e:	ins    BYTE PTR es:[rdi],dx
   140017c6f:	rex.B jb 0x140017cd7
   140017c72:	(bad)  
   140017c73:	rex
   140017c74:	rex
   140017c75:	rex.WRB
   140017c76:	rex.RB
   140017c77:	rex.B
   140017c78:	pop    r8
   140017c7a:	push   rax
   140017c7b:	rex.RB
   140017c7c:	push   r14
   140017c7e:	push   rcx
   140017c7f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017c81:	outs   dx,BYTE PTR ds:[rsi]
   140017c82:	je     0x140017ce9
   140017c84:	js     0x140017cfa
   140017c86:	rex.WRB
   140017c87:	outs   dx,BYTE PTR gs:[rsi]
   140017c89:	jne    0x140017cd0
   140017c8b:	jbe    0x140017cf2
   140017c8d:	outs   dx,BYTE PTR ds:[rsi]
   140017c8e:	je     0x140017cd0
   140017c90:	rex
   140017c91:	rex pop rdx
   140017c93:	add    BYTE PTR [rdi],cl
   140017c95:	or     bh,BYTE PTR [rdi]
   140017c97:	fs jb  0x140017cfb
   140017c9a:	rex.RB outs dx,BYTE PTR ds:[esi]
   140017c9d:	je     0x140017d04
   140017c9f:	jb     0x140017ce6
   140017ca1:	jbe    0x140017d08
   140017ca3:	outs   dx,BYTE PTR ds:[rsi]
   140017ca4:	je     0x140017ce6
   140017ca6:	push   rcx
   140017ca7:	(bad)
   140017cad:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017cb1:	jb     0x140017d22
   140017cb3:	ins    BYTE PTR es:[rdi],dx
   140017cb4:	ins    BYTE PTR es:[rdi],dx
   140017cb5:	rex.B jb 0x140017d1d
   140017cb8:	(bad)  
   140017cb9:	rex
   140017cba:	rex
   140017cbb:	rex.WRB
   140017cbc:	rex.RB
   140017cbd:	rex.B
   140017cbe:	pop    r8
   140017cc0:	push   rax
   140017cc1:	rex.RB
   140017cc2:	push   r14
   140017cc4:	push   rcx
   140017cc5:	rex.R jb 0x140017d29
   140017cc8:	rex.RB outs dx,BYTE PTR ds:[esi]
   140017ccb:	je     0x140017d32
   140017ccd:	jb     0x140017d14
   140017ccf:	jbe    0x140017d36
   140017cd1:	outs   dx,BYTE PTR ds:[rsi]
   140017cd2:	je     0x140017d14
   140017cd4:	rex
   140017cd5:	rex pop rdx
   140017cd7:	add    BYTE PTR [rdi],ah
   140017cd9:	or     bh,BYTE PTR [rdi]
   140017cdb:	fs jb  0x140017d3f
   140017cde:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140017ce1:	jbe    0x140017d48
   140017ce3:	rex.RB jbe 0x140017d4b
   140017ce6:	outs   dx,BYTE PTR ds:[rsi]
   140017ce7:	je     0x140017d29
   140017ce9:	push   rcx
   140017cea:	(bad)
   140017cf0:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017cf4:	jb     0x140017d65
   140017cf6:	ins    BYTE PTR es:[rdi],dx
   140017cf7:	ins    BYTE PTR es:[rdi],dx
   140017cf8:	rex.B jb 0x140017d60
   140017cfb:	(bad)  
   140017cfc:	rex
   140017cfd:	rex
   140017cfe:	rex.WRB
   140017cff:	rex.RB
   140017d00:	rex.B
   140017d01:	pop    r8
   140017d03:	push   rax
   140017d04:	rex.RB
   140017d05:	push   r14
   140017d07:	push   rcx
   140017d08:	rex.R jb 0x140017d6c
   140017d0b:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140017d0e:	jbe    0x140017d75
   140017d10:	rex.RB jbe 0x140017d78
   140017d13:	outs   dx,BYTE PTR ds:[rsi]
   140017d14:	je     0x140017d56
   140017d16:	rex
   140017d17:	rex pop rdx
   140017d19:	add    BYTE PTR [rdx],bl
   140017d1b:	or     bh,BYTE PTR [rdi]
   140017d1d:	fs jb  0x140017d81
   140017d20:	addr32 rex.WR
   140017d22:	gs (bad) 
   140017d24:	jbe    0x140017d8b
   140017d26:	rex.RB jbe 0x140017d8e
   140017d29:	outs   dx,BYTE PTR ds:[rsi]
   140017d2a:	je     0x140017d6c
   140017d2c:	push   rcx
   140017d2d:	(bad)
   140017d33:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017d37:	jb     0x140017da8
   140017d39:	ins    BYTE PTR es:[rdi],dx
   140017d3a:	ins    BYTE PTR es:[rdi],dx
   140017d3b:	rex.B jb 0x140017da3
   140017d3e:	(bad)  
   140017d3f:	rex
   140017d40:	rex
   140017d41:	rex.WRB
   140017d42:	rex.RB
   140017d43:	rex.B
   140017d44:	pop    r8
   140017d46:	push   rax
   140017d47:	rex.RB
   140017d48:	push   r14
   140017d4a:	push   rcx
   140017d4b:	rex.R jb 0x140017daf
   140017d4e:	addr32 rex.WR
   140017d50:	gs (bad) 
   140017d52:	jbe    0x140017db9
   140017d54:	rex.RB jbe 0x140017dbc
   140017d57:	outs   dx,BYTE PTR ds:[rsi]
   140017d58:	je     0x140017d9a
   140017d5a:	rex
   140017d5b:	rex pop rdx
   140017d5d:	add    BYTE PTR [rax+0xa],ah
   140017d60:	(bad)  
   140017d61:	fs jb  0x140017dd3
   140017d64:	jo     0x140017dab
   140017d66:	jbe    0x140017dcd
   140017d68:	outs   dx,BYTE PTR ds:[rsi]
   140017d69:	je     0x140017dab
   140017d6b:	push   rcx
   140017d6c:	(bad)
   140017d72:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017d76:	jb     0x140017de7
   140017d78:	ins    BYTE PTR es:[rdi],dx
   140017d79:	ins    BYTE PTR es:[rdi],dx
   140017d7a:	rex.B jb 0x140017de2
   140017d7d:	(bad)  
   140017d7e:	rex
   140017d7f:	rex
   140017d80:	rex.WRB
   140017d81:	rex.RB
   140017d82:	rex.B
   140017d83:	pop    r8
   140017d85:	push   rax
   140017d86:	rex.RB
   140017d87:	push   r14
   140017d89:	push   rcx
   140017d8a:	rex.R jb 0x140017dfc
   140017d8d:	jo     0x140017dd4
   140017d8f:	jbe    0x140017df6
   140017d91:	outs   dx,BYTE PTR ds:[rsi]
   140017d92:	je     0x140017dd4
   140017d94:	rex
   140017d95:	rex pop rdx
   140017d97:	add    BYTE PTR [rcx+0x6],bh
   140017d9a:	(bad)  
   140017d9b:	movsxd ebp,DWORD PTR [rax+0x61]
   140017d9e:	outs   dx,BYTE PTR ds:[rsi]
   140017d9f:	addr32 gs rex.RB jbe 0x140017e09
   140017da4:	outs   dx,BYTE PTR ds:[rsi]
   140017da5:	je     0x140017de7
   140017da7:	push   rcx
   140017da8:	rex.RX jb 0x140017e0c
   140017dab:	ins    DWORD PTR es:[rdi],dx
   140017dac:	gs rex
   140017dae:	rex
   140017daf:	rex.WRB
   140017db0:	rex.RB
   140017db1:	rex.B
   140017db2:	pop    r8
   140017db4:	push   rax
   140017db5:	rex.RB
   140017db6:	push   r14
   140017db8:	push   rcx
   140017db9:	rex.RB jbe 0x140017e21
   140017dbc:	outs   dx,BYTE PTR ds:[rsi]
   140017dbd:	je     0x140017dff
   140017dbf:	rex
   140017dc0:	rex pop rdx
   140017dc2:	add    BYTE PTR [rax],al
   140017dc4:	movabs eax,ds:0x4e7375636f663f0b
   140017dcd:	gs js  0x140017e44
   140017dd0:	push   rax
   140017dd1:	jb     0x140017e38
   140017dd3:	jbe    0x140017e18
   140017dd5:	push   0x40646c69
   140017dda:	push   rcx
   140017ddb:	push   rbx
   140017ddc:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017ddf:	ins    BYTE PTR es:[rdi],dx
   140017de0:	ins    BYTE PTR es:[rdi],dx
   140017de1:	rex.B jb 0x140017e49
   140017de4:	(bad)  
   140017de5:	rex
   140017de6:	rex push rbp
   140017de8:	rex.RB
   140017de9:	rex.B
   140017dea:	pop    r15
   140017dec:	rex.WRX pop rdi
   140017dee:	rex.WRX
   140017def:	rex pop rdx
   140017df1:	add    BYTE PTR [rax],ch
   140017df3:	sbb    al,0x3f
   140017df5:	jae    0x140017e5c
   140017df7:	je     0x140017e6e
   140017df9:	jo     0x140017e51
   140017dfb:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   140017e02:	rex push rcx
   140017e04:	(bad)
   140017e0a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017e0e:	jb     0x140017e7f
   140017e10:	ins    BYTE PTR es:[rdi],dx
   140017e11:	ins    BYTE PTR es:[rdi],dx
   140017e12:	rex.B jb 0x140017e7a
   140017e15:	(bad)  
   140017e16:	rex
   140017e17:	rex push rbp
   140017e19:	rex.RB
   140017e1a:	rex.B
   140017e1b:	pop    r8
   140017e1d:	push   rax
   140017e1e:	rex.RB
   140017e1f:	push   r14
   140017e21:	push   rcx
   140017e22:	push   rdi
   140017e23:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140017e2b:	pop    rdx
   140017e2c:	add    BYTE PTR [rax],al
   140017e2e:	in     al,dx
   140017e2f:	and    BYTE PTR [rdi],bh
   140017e31:	jbe    0x140017e9c
   140017e33:	gs ja  0x140017ea6
   140017e36:	outs   dx,DWORD PTR ds:[rsi]
   140017e37:	jb     0x140017ead
   140017e39:	rex.RB jbe 0x140017ea1
   140017e3c:	outs   dx,BYTE PTR ds:[rsi]
   140017e3d:	je     0x140017e7f
   140017e3f:	push   rcx
   140017e40:	(bad)
   140017e46:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140017e4a:	jb     0x140017ebb
   140017e4c:	ins    BYTE PTR es:[rdi],dx
   140017e4d:	ins    BYTE PTR es:[rdi],dx
   140017e4e:	rex.B jb 0x140017eb6
   140017e51:	(bad)  
   140017e52:	rex
   140017e53:	rex
   140017e54:	rex.WRB
   140017e55:	rex.RB
   140017e56:	rex.B
   140017e57:	pop    r15
   140017e59:	rex.WRX push rax
   140017e5b:	rex.RB
   140017e5c:	push   r14
   140017e5e:	push   rcx
   140017e5f:	rex.RB jbe 0x140017ec7
   140017e62:	outs   dx,BYTE PTR ds:[rsi]
   140017e63:	je     0x140017ea5
   140017e65:	rex
   140017e66:	rex pop rdx
   140017e68:	add    BYTE PTR [rax],al
   140017e6a:	rex.R (bad) 
   140017e6c:	(bad)  
   140017e6d:	jae    0x140017ed2
   140017e6f:	jb     0x140017ee0
   140017e71:	ins    BYTE PTR es:[rdi],dx
   140017e72:	ins    BYTE PTR es:[rdi],dx
   140017e73:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017e75:	outs   dx,BYTE PTR ds:[rsi]
   140017e76:	je     0x140017edd
   140017e78:	outs   dx,BYTE PTR ds:[rsi]
   140017e79:	je     0x140017eee
   140017e7b:	rex.X jns 0x140017ebe
   140017e7e:	push   rcx
   140017e7f:	push   rbx
   140017e80:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017e83:	ins    BYTE PTR es:[rdi],dx
   140017e84:	ins    BYTE PTR es:[rdi],dx
   140017e85:	rex.B jb 0x140017eed
   140017e88:	(bad)  
   140017e89:	rex
   140017e8a:	rex
   140017e8b:	rex.WRB
   140017e8c:	rex.RB
   140017e8d:	rex.B
   140017e8e:	pop    r8
   140017e90:	rex.W
   140017e91:	rex.W
   140017e92:	rex pop rdx
   140017e94:	add    BYTE PTR [rax],al
   140017e96:	mul    BYTE PTR [rax]
   140017e98:	(bad)  
   140017e99:	jbe    0x140017f04
   140017e9b:	gs ja  0x140017f0e
   140017e9e:	outs   dx,DWORD PTR ds:[rsi]
   140017e9f:	jb     0x140017f15
   140017ea1:	push   rbx
   140017ea2:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140017ea9:	rex push rcx
   140017eab:	push   rbx
   140017eac:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017eaf:	ins    BYTE PTR es:[rdi],dx
   140017eb0:	ins    BYTE PTR es:[rdi],dx
   140017eb1:	rex.B jb 0x140017f19
   140017eb4:	(bad)  
   140017eb5:	rex
   140017eb6:	rex
   140017eb7:	rex.WRB
   140017eb8:	rex.RB
   140017eb9:	rex.X
   140017eba:	rex.B (bad) 
   140017ebc:	push   r14
   140017ebe:	push   rcx
   140017ebf:	push   rbx
   140017ec0:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140017ec7:	add    dh,cl
   140017ec9:	adc    BYTE PTR [rdi],bh
   140017ecb:	ins    DWORD PTR es:[rdi],dx
   140017ecc:	gs je  0x140017f30
   140017ecf:	rex.WRXB (bad) 
   140017ed1:	push   0x65
   140017ed3:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140017ed7:	push   rsi
   140017ed8:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017eda:	js     0x140017f28
   140017edc:	(bad)  
   140017edd:	jns    0x140017f4e
   140017edf:	jne    0x140017f55
   140017ee1:	rex
   140017ee2:	rex push rbp
   140017ee4:	rex.RB
   140017ee5:	rex.X
   140017ee6:	push   r8
   140017ee8:	rex.RB
   140017ee9:	rex.X push rbp
   140017eeb:	push   rcx
   140017eec:	rex.WRB
   140017eed:	gs je  0x140017f51
   140017ef0:	rex.WRXB (bad) 
   140017ef2:	push   0x65
   140017ef4:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017ef8:	pop    rax
   140017ef9:	pop    rdx
   140017efa:	add    BYTE PTR [rax],al
   140017efc:	rex.B adc al,0x3f
   140017eff:	jno    0x140017f75
   140017f01:	pop    rdi
   140017f02:	ins    DWORD PTR es:[rdi],dx
   140017f03:	gs je  0x140017f67
   140017f06:	movsxd esp,DWORD PTR [rcx+0x73]
   140017f09:	je     0x140017f4b
   140017f0b:	push   rcx
   140017f0c:	push   rsi
   140017f0d:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017f0f:	js     0x140017f5d
   140017f11:	(bad)  
   140017f12:	jns    0x140017f83
   140017f14:	jne    0x140017f8a
   140017f16:	rex
   140017f17:	rex push rbp
   140017f19:	rex.RB
   140017f1a:	rex.B
   140017f1b:	push   r8
   140017f1d:	rex.RB
   140017f1e:	pop    r8
   140017f20:	push   rax
   140017f21:	rex.RB
   140017f22:	rex.X
   140017f23:	rex.R
   140017f24:	rex pop rdx
   140017f26:	add    BYTE PTR [rax],al
   140017f28:	mov    bh,0x13
   140017f2a:	(bad)  
   140017f2b:	jno    0x140017fa1
   140017f2d:	pop    rdi
   140017f2e:	ins    DWORD PTR es:[rdi],dx
   140017f2f:	gs je  0x140017f93
   140017f32:	movsxd esp,DWORD PTR [rcx+0x6c]
   140017f35:	ins    BYTE PTR es:[rdi],dx
   140017f36:	rex push rcx
   140017f38:	push   rsi
   140017f39:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017f3b:	js     0x140017f89
   140017f3d:	(bad)  
   140017f3e:	jns    0x140017faf
   140017f40:	jne    0x140017fb6
   140017f42:	rex
   140017f43:	rex push rbp
   140017f45:	rex.RB
   140017f46:	rex.B
   140017f47:	rex.B
   140017f48:	rex.W push rdi
   140017f4a:	xor    al,0x43
   140017f4c:	(bad)  
   140017f4d:	ins    BYTE PTR es:[rdi],dx
   140017f4e:	ins    BYTE PTR es:[rdi],dx
   140017f4f:	rex push rcx
   140017f51:	rex.WRB
   140017f52:	gs je  0x140017fb6
   140017f55:	rex.WRXB (bad) 
   140017f57:	push   0x65
   140017f59:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140017f5d:	rex.W push rax
   140017f5f:	rex.RB
   140017f60:	push   r8
   140017f62:	rex.RB
   140017f63:	pop    r8
   140017f65:	rex pop rdx
   140017f67:	add    BYTE PTR [rip+0x313f3f02],ch        # 0x17140be6f
   140017f6d:	push   rcx
   140017f6e:	push   rbx
   140017f6f:	movsxd esi,DWORD PTR [rdx+0x6f]
   140017f72:	ins    BYTE PTR es:[rdi],dx
   140017f73:	ins    BYTE PTR es:[rdi],dx
   140017f74:	rex.B jb 0x140017fdc
   140017f77:	(bad)  
   140017f78:	rex
   140017f79:	rex push rbp
   140017f7b:	rex.RB
   140017f7c:	rex.B
   140017f7d:	rex.B
   140017f7e:	rex pop rax
   140017f80:	pop    rdx
   140017f81:	add    BYTE PTR [rbx+0x2],dh
   140017f84:	(bad)  
   140017f85:	(bad)  
   140017f86:	xor    DWORD PTR [rcx+0x56],edx
   140017f89:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017f8b:	js     0x140017fd9
   140017f8d:	(bad)  
   140017f8e:	jns    0x140017fff
   140017f90:	jne    0x140018006
   140017f92:	rex
   140017f93:	rex push rbp
   140017f95:	rex.RB
   140017f96:	rex.B
   140017f97:	rex.B
   140017f98:	rex pop rax
   140017f9a:	pop    rdx
   140017f9b:	add    BYTE PTR [rax],dl
   140017f9d:	add    eax,0x6464613f
   140017fa2:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140017fa7:	outs   dx,BYTE PTR ds:[rsi]
   140017fa8:	rex push rcx
   140017faa:	push   rdi
   140017fab:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140017fb3:	rex.RB
   140017fb4:	rex.B
   140017fb5:	pop    r8
   140017fb7:	push   rax
   140017fb8:	rex.RB
   140017fb9:	push   r14
   140017fbb:	push   rcx
   140017fbc:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140017fc1:	outs   dx,BYTE PTR ds:[rsi]
   140017fc2:	rex
   140017fc3:	rex
   140017fc4:	rex pop rdx
   140017fc6:	add    BYTE PTR [rax],al
   140017fc8:	rex.WRB (bad) 
   140017fca:	(bad)  
   140017fcb:	jae    0x140018032
   140017fcd:	je     0x140018012
   140017fcf:	push   0x616b6365
   140017fd4:	(bad)  
   140017fd5:	ins    BYTE PTR es:[rdi],dx
   140017fd6:	gs rex push rcx
   140017fd9:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140017fde:	outs   dx,BYTE PTR ds:[rsi]
   140017fdf:	rex
   140017fe0:	rex push rcx
   140017fe2:	rex.RB
   140017fe3:	rex.B
   140017fe4:	pop    r8
   140017fe6:	pop    rdi
   140017fe7:	rex.WRX
   140017fe8:	rex pop rdx
   140017fea:	add    BYTE PTR [rax],al
   140017fec:	adc    al,BYTE PTR [rax]
   140017fee:	(bad)  
   140017fef:	(bad)  
   140017ff0:	xor    BYTE PTR [rcx+0x41],dl
   140017ff3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140017ff7:	outs   dx,BYTE PTR ds:[rsi]
   140017ff8:	rex
   140017ff9:	rex push rcx
   140017ffb:	rex.RB
   140017ffc:	rex.B
   140017ffd:	rex.B
   140017ffe:	rex
   140017fff:	rex.B
   140018000:	rex.RB
   140018001:	rex.X push rsi
   140018003:	push   rcx
   140018004:	push   rbx
   140018005:	je     0x140018079
   140018007:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001800e:	push   r14
   140018010:	push   rcx
   140018011:	rex.WRXB (bad) 
   140018013:	push   0x65
   140018015:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018019:	rex pop rdx
   14001801b:	add    bl,dl
   14001801d:	add    BYTE PTR [rdi],bh
   14001801f:	(bad)  
   140018020:	xor    BYTE PTR [rcx+0x4d],dl
   140018023:	outs   dx,BYTE PTR gs:[rsi]
   140018025:	jne    0x140018067
   140018027:	rex push rcx
   140018029:	rex.RB
   14001802a:	rex.B
   14001802b:	rex.B
   14001802c:	rex push rax
   14001802e:	rex.RB
   14001802f:	push   r14
   140018031:	push   rcx
   140018032:	push   rdi
   140018033:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001803b:	pop    rdx
   14001803c:	add    BYTE PTR [rax],al
   14001803e:	rex.WRXB sbb BYTE PTR [r15],r15b
   140018041:	jae    0x1400180a8
   140018043:	je     0x14001808b
   140018045:	imul   edi,DWORD PTR [rax+0x65],0x7a695364
   14001804c:	gs rex push rcx
   14001804f:	push   rdi
   140018050:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140018058:	rex.RB
   140018059:	rex.B
   14001805a:	pop    r8
   14001805c:	rex.W
   14001805d:	rex.W
   14001805e:	rex pop rdx
   140018060:	add    BYTE PTR [rax],al
   140018062:	xchg   edi,eax
   140018063:	adc    BYTE PTR [rdi],bh
   140018065:	ins    DWORD PTR es:[rdi],dx
   140018066:	gs je  0x1400180ca
   140018069:	rex.WRXB (bad) 
   14001806b:	push   0x65
   14001806d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018071:	rex.WRB
   140018072:	outs   dx,BYTE PTR gs:[rsi]
   140018074:	jne    0x1400180b6
   140018076:	rex push rbp
   140018078:	rex.RB
   140018079:	rex.X
   14001807a:	push   r8
   14001807c:	rex.RB
   14001807d:	rex.X push rbp
   14001807f:	push   rcx
   140018080:	rex.WRB
   140018081:	gs je  0x1400180e5
   140018084:	rex.WRXB (bad) 
   140018086:	push   0x65
   140018088:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001808c:	pop    rax
   14001808d:	pop    rdx
   14001808e:	add    BYTE PTR [rax],al
   140018090:	or     dl,BYTE PTR [rdi+rdi*1]
   140018093:	jno    0x140018109
   140018095:	pop    rdi
   140018096:	ins    DWORD PTR es:[rdi],dx
   140018097:	gs je  0x1400180fb
   14001809a:	movsxd esp,DWORD PTR [rcx+0x73]
   14001809d:	je     0x1400180df
   14001809f:	push   rcx
   1400180a0:	rex.WRB
   1400180a1:	outs   dx,BYTE PTR gs:[rsi]
   1400180a3:	jne    0x1400180e5
   1400180a5:	rex push rbp
   1400180a7:	rex.RB
   1400180a8:	rex.B
   1400180a9:	push   r8
   1400180ab:	rex.RB
   1400180ac:	pop    r8
   1400180ae:	push   rax
   1400180af:	rex.RB
   1400180b0:	rex.X
   1400180b1:	rex.R
   1400180b2:	rex pop rdx
   1400180b4:	add    BYTE PTR [rax],al
   1400180b6:	adc    BYTE PTR [rbx],0x3f
   1400180b9:	jno    0x14001812f
   1400180bb:	pop    rdi
   1400180bc:	ins    DWORD PTR es:[rdi],dx
   1400180bd:	gs je  0x140018121
   1400180c0:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400180c3:	ins    BYTE PTR es:[rdi],dx
   1400180c4:	rex push rcx
   1400180c6:	rex.WRB
   1400180c7:	outs   dx,BYTE PTR gs:[rsi]
   1400180c9:	jne    0x14001810b
   1400180cb:	rex push rbp
   1400180cd:	rex.RB
   1400180ce:	rex.B
   1400180cf:	rex.B
   1400180d0:	rex.W push rdi
   1400180d2:	xor    al,0x43
   1400180d4:	(bad)  
   1400180d5:	ins    BYTE PTR es:[rdi],dx
   1400180d6:	ins    BYTE PTR es:[rdi],dx
   1400180d7:	rex push rcx
   1400180d9:	rex.WRB
   1400180da:	gs je  0x14001813e
   1400180dd:	rex.WRXB (bad) 
   1400180df:	push   0x65
   1400180e1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400180e5:	rex.W push rax
   1400180e7:	rex.RB
   1400180e8:	push   r8
   1400180ea:	rex.RB
   1400180eb:	pop    r8
   1400180ed:	rex pop rdx
   1400180ef:	add    ah,bl
   1400180f1:	or     bh,BYTE PTR [rdi]
   1400180f3:	gs jbe 0x14001815b
   1400180f6:	outs   dx,BYTE PTR ds:[rsi]
   1400180f7:	je     0x140018139
   1400180f9:	push   rcx
   1400180fa:	rex.WRB
   1400180fb:	outs   dx,BYTE PTR gs:[rsi]
   1400180fd:	jne    0x14001813f
   1400180ff:	rex
   140018100:	rex.WRB
   140018101:	rex.RB
   140018102:	rex.B
   140018103:	pop    r15
   140018105:	rex.WRX push rax
   140018107:	rex.RB
   140018108:	push   r14
   14001810a:	push   rcx
   14001810b:	rex.RB jbe 0x140018173
   14001810e:	outs   dx,BYTE PTR ds:[rsi]
   14001810f:	je     0x140018151
   140018111:	rex
   140018112:	rex pop rdx
   140018114:	add    BYTE PTR [rax],al
   140018116:	popf   
   140018117:	(bad)  
   140018118:	(bad)  
   140018119:	je     0x140018184
   14001811b:	ins    DWORD PTR es:[rdi],dx
   14001811c:	gs jb  0x140018164
   14001811f:	jbe    0x140018186
   140018121:	outs   dx,BYTE PTR ds:[rsi]
   140018122:	je     0x140018164
   140018124:	push   rcx
   140018125:	rex.WRB
   140018126:	outs   dx,BYTE PTR gs:[rsi]
   140018128:	jne    0x14001816a
   14001812a:	rex
   14001812b:	rex.WRB
   14001812c:	rex.RB
   14001812d:	rex.B
   14001812e:	pop    r8
   140018130:	push   rax
   140018131:	rex.RB
   140018132:	push   r14
   140018134:	push   rcx
   140018135:	push   rsp
   140018136:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001813d:	outs   dx,BYTE PTR ds:[rsi]
   14001813e:	je     0x140018180
   140018140:	rex
   140018141:	rex pop rdx
   140018143:	add    BYTE PTR [rdi+0x69733f1c],ch
   140018149:	jp     0x1400181b0
   14001814b:	imul   rbp,QWORD PTR [rsi+0x74],0x654d5140
   140018153:	outs   dx,BYTE PTR ds:[rsi]
   140018154:	jne    0x140018196
   140018156:	rex push rbp
   140018158:	rex.RB
   140018159:	rex.X
   14001815a:	rex.B (bad) 
   14001815c:	push   r14
   14001815e:	push   rcx
   14001815f:	push   rbx
   140018160:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140018167:	add    BYTE PTR [rcx+0x11],bh
   14001816a:	(bad)  
   14001816b:	ins    DWORD PTR es:[rdi],dx
   14001816c:	outs   dx,DWORD PTR ds:[rsi]
   14001816d:	jne    0x1400181e2
   14001816f:	gs push rax
   140018171:	jb     0x1400181d8
   140018173:	jae    0x1400181e8
   140018175:	rex.RB jbe 0x1400181dd
   140018178:	outs   dx,BYTE PTR ds:[rsi]
   140018179:	je     0x1400181bb
   14001817b:	push   rcx
   14001817c:	rex.WRB
   14001817d:	outs   dx,BYTE PTR gs:[rsi]
   14001817f:	jne    0x1400181c1
   140018181:	rex
   140018182:	rex.WRB
   140018183:	rex.RB
   140018184:	rex.B
   140018185:	pop    r8
   140018187:	push   rax
   140018188:	rex.RB
   140018189:	push   r14
   14001818b:	push   rcx
   14001818c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001818e:	jne    0x140018203
   140018190:	gs rex.RB jbe 0x1400181f9
   140018194:	outs   dx,BYTE PTR ds:[rsi]
   140018195:	je     0x1400181d7
   140018197:	rex
   140018198:	rex pop rdx
   14001819a:	add    BYTE PTR [rax],al
   14001819c:	cwde   
   14001819d:	adc    DWORD PTR [rdi],edi
   14001819f:	ins    DWORD PTR es:[rdi],dx
   1400181a0:	outs   dx,DWORD PTR ds:[rsi]
   1400181a1:	jne    0x140018216
   1400181a3:	gs push rdx
   1400181a5:	gs ins BYTE PTR es:[rdi],dx
   1400181a7:	gs (bad) 
   1400181a9:	jae    0x140018210
   1400181ab:	rex.RB jbe 0x140018213
   1400181ae:	outs   dx,BYTE PTR ds:[rsi]
   1400181af:	je     0x1400181f1
   1400181b1:	push   rcx
   1400181b2:	rex.WRB
   1400181b3:	outs   dx,BYTE PTR gs:[rsi]
   1400181b5:	jne    0x1400181f7
   1400181b7:	rex
   1400181b8:	rex.WRB
   1400181b9:	rex.RB
   1400181ba:	rex.B
   1400181bb:	pop    r8
   1400181bd:	push   rax
   1400181be:	rex.RB
   1400181bf:	push   r14
   1400181c1:	push   rcx
   1400181c2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400181c4:	jne    0x140018239
   1400181c6:	gs rex.RB jbe 0x14001822f
   1400181ca:	outs   dx,BYTE PTR ds:[rsi]
   1400181cb:	je     0x14001820d
   1400181cd:	rex
   1400181ce:	rex pop rdx
   1400181d0:	add    BYTE PTR [rax],al
   1400181d2:	pop    rax
   1400181d3:	adc    DWORD PTR [rdi],edi
   1400181d5:	ins    DWORD PTR es:[rdi],dx
   1400181d6:	outs   dx,DWORD PTR ds:[rsi]
   1400181d7:	jne    0x14001824c
   1400181d9:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400181dc:	jbe    0x140018243
   1400181de:	rex.RB jbe 0x140018246
   1400181e1:	outs   dx,BYTE PTR ds:[rsi]
   1400181e2:	je     0x140018224
   1400181e4:	push   rcx
   1400181e5:	rex.WRB
   1400181e6:	outs   dx,BYTE PTR gs:[rsi]
   1400181e8:	jne    0x14001822a
   1400181ea:	rex
   1400181eb:	rex.WRB
   1400181ec:	rex.RB
   1400181ed:	rex.B
   1400181ee:	pop    r8
   1400181f0:	push   rax
   1400181f1:	rex.RB
   1400181f2:	push   r14
   1400181f4:	push   rcx
   1400181f5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400181f7:	jne    0x14001826c
   1400181f9:	gs rex.RB jbe 0x140018262
   1400181fd:	outs   dx,BYTE PTR ds:[rsi]
   1400181fe:	je     0x140018240
   140018200:	rex
   140018201:	rex pop rdx
   140018203:	add    BYTE PTR [rdi],ch
   140018205:	and    DWORD PTR [rdi],edi
   140018207:	ja     0x140018271
   140018209:	gs gs ins BYTE PTR es:[rdi],dx
   14001820c:	rex.RB jbe 0x140018274
   14001820f:	outs   dx,BYTE PTR ds:[rsi]
   140018210:	je     0x140018252
   140018212:	push   rcx
   140018213:	rex.WRB
   140018214:	outs   dx,BYTE PTR gs:[rsi]
   140018216:	jne    0x140018258
   140018218:	rex
   140018219:	rex.WRB
   14001821a:	rex.RB
   14001821b:	rex.B
   14001821c:	pop    r8
   14001821e:	push   rax
   14001821f:	rex.RB
   140018220:	push   r14
   140018222:	push   rcx
   140018223:	push   rdi
   140018224:	push   0x456c6565
   140018229:	jbe    0x140018290
   14001822b:	outs   dx,BYTE PTR ds:[rsi]
   14001822c:	je     0x14001826e
   14001822e:	rex
   14001822f:	rex pop rdx
   140018231:	add    BYTE PTR [rdi+0xf],cl
   140018234:	(bad)  
   140018235:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140018239:	jb     0x1400182a0
   14001823b:	jae    0x1400182b0
   14001823d:	rex.RB jbe 0x1400182a5
   140018240:	outs   dx,BYTE PTR ds:[rsi]
   140018241:	je     0x140018283
   140018243:	push   rcx
   140018244:	rex.WRB
   140018245:	outs   dx,BYTE PTR gs:[rsi]
   140018247:	jne    0x140018289
   140018249:	rex
   14001824a:	rex.WRB
   14001824b:	rex.RB
   14001824c:	rex.B
   14001824d:	pop    r8
   14001824f:	push   rax
   140018250:	rex.RB
   140018251:	push   r14
   140018253:	push   rcx
   140018254:	rex.WXB
   140018255:	gs jns 0x14001829d
   140018258:	jbe    0x1400182bf
   14001825a:	outs   dx,BYTE PTR ds:[rsi]
   14001825b:	je     0x14001829d
   14001825d:	rex
   14001825e:	rex pop rdx
   140018260:	add    BYTE PTR [rax],al
   140018262:	mov    dl,0xa
   140018264:	(bad)  
   140018265:	outs   dx,BYTE PTR gs:[rsi]
   140018267:	je     0x1400182ce
   140018269:	jb     0x1400182b0
   14001826b:	jbe    0x1400182d2
   14001826d:	outs   dx,BYTE PTR ds:[rsi]
   14001826e:	je     0x1400182b0
   140018270:	push   rcx
   140018271:	rex.WRB
   140018272:	outs   dx,BYTE PTR gs:[rsi]
   140018274:	jne    0x1400182b6
   140018276:	rex
   140018277:	rex.WRB
   140018278:	rex.RB
   140018279:	rex.B
   14001827a:	pop    r8
   14001827c:	push   rax
   14001827d:	rex.RB
   14001827e:	push   r14
   140018280:	push   rcx
   140018281:	rex.RB jbe 0x1400182e9
   140018284:	outs   dx,BYTE PTR ds:[rsi]
   140018285:	je     0x1400182c7
   140018287:	rex
   140018288:	rex pop rdx
   14001828a:	add    BYTE PTR [rax],al
   14001828c:	xchg   esi,eax
   14001828d:	(bad)  
   14001828f:	ins    BYTE PTR es:[rdi],dx
   140018290:	gs (bad) 
   140018292:	jbe    0x1400182f9
   140018294:	rex.RB jbe 0x1400182fc
   140018297:	outs   dx,BYTE PTR ds:[rsi]
   140018298:	je     0x1400182da
   14001829a:	push   rcx
   14001829b:	rex.WRB
   14001829c:	outs   dx,BYTE PTR gs:[rsi]
   14001829e:	jne    0x1400182e0
   1400182a0:	rex
   1400182a1:	rex.WRB
   1400182a2:	rex.RB
   1400182a3:	rex.B
   1400182a4:	pop    r8
   1400182a6:	push   rax
   1400182a7:	rex.RB
   1400182a8:	push   r14
   1400182aa:	push   rcx
   1400182ab:	rex.RB jbe 0x140018313
   1400182ae:	outs   dx,BYTE PTR ds:[rsi]
   1400182af:	je     0x1400182f1
   1400182b1:	rex
   1400182b2:	rex pop rdx
   1400182b4:	add    BYTE PTR [rax],al
   1400182b6:	movsxd edx,DWORD PTR [rdx]
   1400182b8:	(bad)  
   1400182b9:	jo     0x14001831c
   1400182bb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400182c2:	je     0x140018304
   1400182c4:	push   rcx
   1400182c5:	rex.WRB
   1400182c6:	outs   dx,BYTE PTR gs:[rsi]
   1400182c8:	jne    0x14001830a
   1400182ca:	rex
   1400182cb:	rex.WRB
   1400182cc:	rex.RB
   1400182cd:	rex.B
   1400182ce:	pop    r8
   1400182d0:	push   rax
   1400182d1:	rex.RB
   1400182d2:	push   r14
   1400182d4:	push   rcx
   1400182d5:	push   rax
   1400182d6:	(bad)  
   1400182d7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400182de:	je     0x140018320
   1400182e0:	rex
   1400182e1:	rex pop rdx
   1400182e3:	add    bh,cl
   1400182e5:	add    al,0x3f
   1400182e7:	(bad)  
   1400182e8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400182ec:	outs   dx,BYTE PTR ds:[rsi]
   1400182ed:	rex.RB jbe 0x140018355
   1400182f0:	outs   dx,BYTE PTR ds:[rsi]
   1400182f1:	je     0x140018333
   1400182f3:	push   rcx
   1400182f4:	rex.WRB
   1400182f5:	outs   dx,BYTE PTR gs:[rsi]
   1400182f7:	jne    0x140018339
   1400182f9:	rex
   1400182fa:	rex.WRB
   1400182fb:	rex.RB
   1400182fc:	rex.B
   1400182fd:	pop    r8
   1400182ff:	push   rax
   140018300:	rex.RB
   140018301:	push   r14
   140018303:	push   rcx
   140018304:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018309:	outs   dx,BYTE PTR ds:[rsi]
   14001830a:	rex.RB jbe 0x140018372
   14001830d:	outs   dx,BYTE PTR ds:[rsi]
   14001830e:	je     0x140018350
   140018310:	rex
   140018311:	rex pop rdx
   140018313:	add    BYTE PTR [rcx+0x69683f0c],ah
   140018319:	fs gs rex.RB jbe 0x140018383
   14001831e:	outs   dx,BYTE PTR ds:[rsi]
   14001831f:	je     0x140018361
   140018321:	push   rcx
   140018322:	rex.WRB
   140018323:	outs   dx,BYTE PTR gs:[rsi]
   140018325:	jne    0x140018367
   140018327:	rex
   140018328:	rex.WRB
   140018329:	rex.RB
   14001832a:	rex.B
   14001832b:	pop    r8
   14001832d:	push   rax
   14001832e:	rex.RB
   14001832f:	push   r14
   140018331:	push   rcx
   140018332:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   14001833b:	rex
   14001833c:	rex
   14001833d:	rex pop rdx
   14001833f:	add    BYTE PTR [rdi+0x6],bh
   140018342:	(bad)  
   140018343:	movsxd ebp,DWORD PTR [rax+0x61]
   140018346:	outs   dx,BYTE PTR ds:[rsi]
   140018347:	addr32 gs rex.RB jbe 0x1400183b1
   14001834c:	outs   dx,BYTE PTR ds:[rsi]
   14001834d:	je     0x14001838f
   14001834f:	push   rcx
   140018350:	rex.WRB
   140018351:	outs   dx,BYTE PTR gs:[rsi]
   140018353:	jne    0x140018395
   140018355:	rex
   140018356:	rex.WRB
   140018357:	rex.RB
   140018358:	rex.B
   140018359:	pop    r8
   14001835b:	push   rax
   14001835c:	rex.RB
   14001835d:	push   r14
   14001835f:	push   rcx
   140018360:	rex.RB jbe 0x1400183c8
   140018363:	outs   dx,BYTE PTR ds:[rsi]
   140018364:	je     0x1400183a6
   140018366:	rex
   140018367:	rex pop rdx
   140018369:	add    BYTE PTR [rdi+0x6f663f0b],bl
   14001836f:	movsxd esi,DWORD PTR [rbp+0x73]
   140018372:	rex.WRX
   140018373:	gs js  0x1400183ea
   140018376:	push   rax
   140018377:	jb     0x1400183de
   140018379:	jbe    0x1400183be
   14001837b:	push   0x40646c69
   140018380:	push   rcx
   140018381:	rex.WRB
   140018382:	outs   dx,BYTE PTR gs:[rsi]
   140018384:	jne    0x1400183c6
   140018386:	rex
   140018387:	rex.WRB
   140018388:	rex.RB
   140018389:	rex.B
   14001838a:	pop    r15
   14001838c:	rex.WRX pop rdi
   14001838e:	rex.WRX
   14001838f:	rex pop rdx
   140018391:	add    BYTE PTR [rbx+0x10],dl
   140018394:	(bad)  
   140018395:	ins    DWORD PTR es:[rdi],dx
   140018396:	gs je  0x1400183fa
   140018399:	rex.WRXB (bad) 
   14001839b:	push   0x65
   14001839d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400183a1:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400183a6:	outs   dx,BYTE PTR ds:[rsi]
   1400183a7:	rex
   1400183a8:	rex push rbp
   1400183aa:	rex.RB
   1400183ab:	rex.X
   1400183ac:	push   r8
   1400183ae:	rex.RB
   1400183af:	rex.X push rbp
   1400183b1:	push   rcx
   1400183b2:	rex.WRB
   1400183b3:	gs je  0x140018417
   1400183b6:	rex.WRXB (bad) 
   1400183b8:	push   0x65
   1400183ba:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400183be:	pop    rax
   1400183bf:	pop    rdx
   1400183c0:	add    BYTE PTR [rax],al
   1400183c2:	(bad)  
   1400183c3:	adc    edi,DWORD PTR [rdi]
   1400183c5:	jno    0x14001843b
   1400183c7:	pop    rdi
   1400183c8:	ins    DWORD PTR es:[rdi],dx
   1400183c9:	gs je  0x14001842d
   1400183cc:	movsxd esp,DWORD PTR [rcx+0x73]
   1400183cf:	je     0x140018411
   1400183d1:	push   rcx
   1400183d2:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400183d7:	outs   dx,BYTE PTR ds:[rsi]
   1400183d8:	rex
   1400183d9:	rex push rbp
   1400183db:	rex.RB
   1400183dc:	rex.B
   1400183dd:	push   r8
   1400183df:	rex.RB
   1400183e0:	pop    r8
   1400183e2:	push   rax
   1400183e3:	rex.RB
   1400183e4:	rex.X
   1400183e5:	rex.R
   1400183e6:	rex pop rdx
   1400183e8:	add    BYTE PTR [rax],al
   1400183ea:	cmp    al,0x13
   1400183ec:	(bad)  
   1400183ed:	jno    0x140018463
   1400183ef:	pop    rdi
   1400183f0:	ins    DWORD PTR es:[rdi],dx
   1400183f1:	gs je  0x140018455
   1400183f4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400183f7:	ins    BYTE PTR es:[rdi],dx
   1400183f8:	rex push rcx
   1400183fa:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400183ff:	outs   dx,BYTE PTR ds:[rsi]
   140018400:	rex
   140018401:	rex push rbp
   140018403:	rex.RB
   140018404:	rex.B
   140018405:	rex.B
   140018406:	rex.W push rdi
   140018408:	xor    al,0x43
   14001840a:	(bad)  
   14001840b:	ins    BYTE PTR es:[rdi],dx
   14001840c:	ins    BYTE PTR es:[rdi],dx
   14001840d:	rex push rcx
   14001840f:	rex.WRB
   140018410:	gs je  0x140018474
   140018413:	rex.WRXB (bad) 
   140018415:	push   0x65
   140018417:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001841b:	rex.W push rax
   14001841d:	rex.RB
   14001841e:	push   r8
   140018420:	rex.RB
   140018421:	pop    r8
   140018423:	rex pop rdx
   140018425:	add    BYTE PTR [rbp+0x76653f0a],bh
   14001842b:	outs   dx,BYTE PTR gs:[rsi]
   14001842d:	je     0x14001846f
   14001842f:	push   rcx
   140018430:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140018435:	outs   dx,BYTE PTR ds:[rsi]
   140018436:	rex
   140018437:	rex
   140018438:	rex.WRB
   140018439:	rex.RB
   14001843a:	rex.B
   14001843b:	pop    r15
   14001843d:	rex.WRX push rax
   14001843f:	rex.RB
   140018440:	push   r14
   140018442:	push   rcx
   140018443:	rex.RB jbe 0x1400184ab
   140018446:	outs   dx,BYTE PTR ds:[rsi]
   140018447:	je     0x140018489
   140018449:	rex
   14001844a:	rex pop rdx
   14001844c:	add    BYTE PTR [rax],al
   14001844e:	sbb    DWORD PTR [rdx],eax
   140018450:	(bad)  
   140018451:	(bad)  
   140018452:	xor    DWORD PTR [rcx+0x4d],edx
   140018455:	outs   dx,BYTE PTR gs:[rsi]
   140018457:	jne    0x140018499
   140018459:	rex push rbp
   14001845b:	rex.RB
   14001845c:	rex.B
   14001845d:	rex.B
   14001845e:	rex pop rax
   140018460:	pop    rdx
   140018461:	add    BYTE PTR [rbx+0x313f3f01],ch
   140018467:	push   rcx
   140018468:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001846d:	outs   dx,BYTE PTR ds:[rsi]
   14001846e:	rex
   14001846f:	rex push rbp
   140018471:	rex.RB
   140018472:	rex.B
   140018473:	rex.B
   140018474:	rex pop rax
   140018476:	pop    rdx
   140018477:	add    BYTE PTR [rax],bl
   140018479:	(bad)  
   14001847a:	(bad)  
   14001847b:	imul   esi,DWORD PTR [rbx+0x43],0x6b636568
   140018482:	gs fs rex push rcx
   140018486:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001848b:	outs   dx,BYTE PTR ds:[rsi]
   14001848c:	rex
   14001848d:	rex push rcx
   14001848f:	rex.RB
   140018490:	rex.X
   140018491:	pop    r15
   140018493:	rex.WRX pop rax
   140018495:	pop    rdx
   140018496:	add    BYTE PTR [rax],al
   140018498:	(bad)  
   140018499:	or     edi,DWORD PTR [rdi]
   14001849b:	gs js  0x140018503
   14001849e:	movsxd eax,DWORD PTR [rax+0x51]
   1400184a1:	rex.WRB
   1400184a2:	outs   dx,BYTE PTR gs:[rsi]
   1400184a4:	jne    0x1400184e6
   1400184a6:	rex push rcx
   1400184a8:	rex.RB
   1400184a9:	rex.B
   1400184aa:	push   r8
   1400184ac:	rex.RB
   1400184ad:	push   r14
   1400184af:	push   rcx
   1400184b0:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400184b5:	outs   dx,BYTE PTR ds:[rsi]
   1400184b6:	rex
   1400184b7:	rex
   1400184b8:	rex.B
   1400184b9:	rex.RB
   1400184ba:	rex.X push rsi
   1400184bc:	push   rcx
   1400184bd:	push   rax
   1400184be:	outs   dx,DWORD PTR ds:[rsi]
   1400184bf:	imul   ebp,DWORD PTR [rsi+0x74],0x45504040
   1400184c6:	push   r14
   1400184c8:	xor    al,BYTE PTR [rax+0x40]
   1400184cb:	pop    rdx
   1400184cc:	add    BYTE PTR [rax],al
   1400184ce:	push   rax
   1400184cf:	(bad)  
   1400184d0:	(bad)  
   1400184d1:	jae    0x140018538
   1400184d3:	je     0x140018518
   1400184d5:	push   0x656b6365
   1400184da:	fs rex push rcx
   1400184dd:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   1400184e2:	outs   dx,BYTE PTR ds:[rsi]
   1400184e3:	rex
   1400184e4:	rex push rcx
   1400184e6:	rex.RB
   1400184e7:	rex.B
   1400184e8:	pop    r8
   1400184ea:	pop    rdi
   1400184eb:	rex.WRX
   1400184ec:	rex pop rdx
   1400184ee:	add    BYTE PTR [rax],al
   1400184f0:	sbb    DWORD PTR [rbx],0x3f
   1400184f3:	jae    0x14001855a
   1400184f5:	je     0x14001854b
   1400184f7:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x72475140
   1400184ff:	outs   dx,DWORD PTR ds:[rsi]
   140018500:	jne    0x140018572
   140018502:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018504:	js     0x140018546
   140018506:	rex push rcx
   140018508:	rex.RB
   140018509:	rex.B
   14001850a:	pop    r8
   14001850c:	rex.B
   14001850d:	rex.RB
   14001850e:	rex.X push rsi
   140018510:	push   rcx
   140018511:	push   rbx
   140018512:	je     0x140018586
   140018514:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001851b:	add    BYTE PTR [rbp+0x1b],dl
   14001851e:	(bad)  
   14001851f:	jae    0x140018586
   140018521:	je     0x140018577
   140018523:	gs js  0x14001859a
   140018526:	rex push rcx
   140018528:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140018530:	rex
   140018531:	rex push rcx
   140018533:	rex.RB
   140018534:	rex.B
   140018535:	pop    r8
   140018537:	rex.B
   140018538:	rex.RB
   140018539:	rex.X push rsi
   14001853b:	push   rcx
   14001853c:	push   rbx
   14001853d:	je     0x1400185b1
   14001853f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140018546:	add    BYTE PTR [rax],al
   140018548:	xlat   BYTE PTR ds:[rbx]
   140018549:	adc    bh,BYTE PTR [rdi]
   14001854b:	jo     0x1400185bc
   14001854d:	jae    0x14001858f
   14001854f:	push   rcx
   140018550:	push   rdi
   140018551:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140018559:	rex.RB
   14001855a:	rex.X
   14001855b:	rex.B (bad) 
   14001855d:	push   r14
   14001855f:	push   rcx
   140018560:	push   rax
   140018561:	outs   dx,DWORD PTR ds:[rsi]
   140018562:	imul   ebp,DWORD PTR [rsi+0x74],0x5a584040
   140018569:	add    ah,ch
   14001856b:	or     edi,DWORD PTR [rdi]
   14001856d:	data16 jb 0x1400185d1
   140018570:	ins    DWORD PTR es:[rdi],dx
   140018571:	gs rex.RXB
   140018573:	outs   dx,DWORD PTR gs:[rsi]
   140018575:	ins    DWORD PTR es:[rdi],dx
   140018576:	gs je  0x1400185eb
   140018579:	jns    0x1400185bb
   14001857b:	push   rcx
   14001857c:	push   rdi
   14001857d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140018585:	rex.RB
   140018586:	rex.X
   140018587:	rex.B (bad) 
   140018589:	push   r14
   14001858b:	push   rcx
   14001858c:	push   rdx
   14001858d:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140018592:	pop    rax
   140018593:	pop    rdx
   140018594:	add    BYTE PTR [rax],al
   140018596:	mov    eax,0x6f743f1e
   14001859b:	push   rax
   14001859c:	ins    BYTE PTR es:[rdi],dx
   14001859d:	(bad)  
   14001859e:	imul   ebp,DWORD PTR [rsi+0x54],0x40747865
   1400185a5:	push   rcx
   1400185a6:	push   rax
   1400185a7:	ins    BYTE PTR es:[rdi],dx
   1400185a8:	(bad)  
   1400185a9:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   1400185b0:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424551
   1400185b9:	(bad)  
   1400185ba:	push   r14
   1400185bc:	push   rcx
   1400185bd:	push   rbx
   1400185be:	je     0x140018632
   1400185c0:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400185c7:	add    bh,ch
   1400185c9:	add    BYTE PTR [rdi],bh
   1400185cb:	(bad)  
   1400185cc:	xor    BYTE PTR [rcx+0x50],dl
   1400185cf:	jne    0x140018644
   1400185d1:	push   0x74747542
   1400185d6:	outs   dx,DWORD PTR ds:[rsi]
   1400185d7:	outs   dx,BYTE PTR ds:[rsi]
   1400185d8:	rex
   1400185d9:	rex push rcx
   1400185db:	rex.RB
   1400185dc:	rex.B
   1400185dd:	rex.B
   1400185de:	rex push rax
   1400185e0:	rex.RB
   1400185e1:	push   r14
   1400185e3:	push   rcx
   1400185e4:	push   rdi
   1400185e5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400185ed:	pop    rdx
   1400185ee:	add    BYTE PTR [rax],al
   1400185f0:	push   rdi
   1400185f1:	sbb    BYTE PTR [rdi],bh
   1400185f3:	jae    0x14001865a
   1400185f5:	je     0x14001863d
   1400185f7:	ins    BYTE PTR es:[rdi],dx
   1400185f8:	(bad)  
   1400185f9:	je     0x14001863b
   1400185fb:	push   rcx
   1400185fc:	rex.RXB jb 0x14001866e
   1400185ff:	jne    0x140018671
   140018601:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018603:	js     0x140018645
   140018605:	rex push rcx
   140018607:	rex.RB
   140018608:	rex.B
   140018609:	pop    r8
   14001860b:	pop    rdi
   14001860c:	rex.WRX
   14001860d:	rex pop rdx
   14001860f:	add    BYTE PTR [rax+0x65733f19],cl
   140018615:	je     0x140018664
   140018617:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001861e:	imul   edi,DWORD PTR [rdx+0x65],0x69575140
   140018625:	fs addr32 gs je 0x14001866a
   14001862a:	rex push rcx
   14001862c:	rex.RB
   14001862d:	rex.B
   14001862e:	pop    r8
   140018630:	rex.W
   140018631:	rex.W
   140018632:	rex pop rdx
   140018634:	add    BYTE PTR [rax],al
   140018636:	stos   BYTE PTR es:[rdi],al
   140018637:	add    BYTE PTR [rdi],bh
   140018639:	(bad)  
   14001863a:	xor    BYTE PTR [rcx+0x47],dl
   14001863d:	jb     0x1400186ae
   14001863f:	jne    0x1400186b1
   140018641:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018643:	js     0x140018685
   140018645:	rex push rcx
   140018647:	rex.RB
   140018648:	rex.B
   140018649:	rex.B
   14001864a:	rex push rax
   14001864c:	rex.RB
   14001864d:	push   r14
   14001864f:	push   rcx
   140018650:	push   rdi
   140018651:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140018659:	pop    rdx
   14001865a:	add    BYTE PTR [rax],al
   14001865c:	and    eax,0x303f3f00
   140018661:	push   rcx
   140018662:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018664:	ins    DWORD PTR es:[rdi],dx
   140018665:	(bad)  
   140018666:	outs   dx,DWORD PTR ds:[rsi]
   140018667:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018669:	js     0x1400186ab
   14001866b:	rex push rcx
   14001866d:	rex.RB
   14001866e:	rex.B
   14001866f:	rex.B
   140018670:	rex push rax
   140018672:	rex.RB
   140018673:	push   r14
   140018675:	push   rcx
   140018676:	push   rdi
   140018677:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001867f:	pop    rdx
   140018680:	add    BYTE PTR [rax],al
   140018682:	(bad)  
   140018683:	sbb    bh,BYTE PTR [rdi]
   140018685:	jae    0x1400186ec
   140018687:	je     0x1400186d9
   140018689:	ins    BYTE PTR es:[rdi],dx
   14001868a:	(bad)  
   14001868b:	imul   ebp,DWORD PTR [rsi+0x54],0x40747865
   140018692:	push   rcx
   140018693:	push   rax
   140018694:	ins    BYTE PTR es:[rdi],dx
   140018695:	(bad)  
   140018696:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   14001869d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   1400186a6:	pop    rax
   1400186a7:	rex.B
   1400186a8:	rex.RB
   1400186a9:	rex.X push rsi
   1400186ab:	push   rcx
   1400186ac:	push   rbx
   1400186ad:	je     0x140018721
   1400186af:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400186b6:	add    BYTE PTR [rax],al
   1400186b8:	rex.WXB sbb dil,BYTE PTR [r15]
   1400186bb:	jae    0x140018722
   1400186bd:	je     0x140018711
   1400186bf:	gs (bad) 
   1400186c1:	rex.WRXB outs dx,BYTE PTR fs:[rsi]
   1400186c4:	ins    BYTE PTR es:[rdi],dx
   1400186c5:	jns    0x140018707
   1400186c7:	push   rcx
   1400186c8:	push   rax
   1400186c9:	ins    BYTE PTR es:[rdi],dx
   1400186ca:	(bad)  
   1400186cb:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   1400186d2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   1400186db:	pop    rax
   1400186dc:	pop    rdi
   1400186dd:	rex.WRX
   1400186de:	rex pop rdx
   1400186e0:	add    BYTE PTR [rax],al
   1400186e2:	push   0x65733f19
   1400186e7:	je     0x140018736
   1400186e9:	(bad)  
   1400186ea:	js     0x140018755
   1400186ec:	ins    DWORD PTR es:[rdi],dx
   1400186ed:	jne    0x14001875c
   1400186ef:	push   rbx
   1400186f0:	imul   edi,DWORD PTR [rdx+0x65],0x69575140
   1400186f7:	fs addr32 gs je 0x14001873c
   1400186fc:	rex push rcx
   1400186fe:	rex.RB
   1400186ff:	rex.B
   140018700:	pop    r8
   140018702:	rex.W
   140018703:	rex.W
   140018704:	rex pop rdx
   140018706:	add    BYTE PTR [rax],al
   140018708:	out    0x0,al
   14001870a:	(bad)  
   14001870b:	(bad)  
   14001870c:	xor    BYTE PTR [rcx+0x50],dl
   14001870f:	ins    BYTE PTR es:[rdi],dx
   140018710:	(bad)  
   140018711:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018718:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   140018721:	rex push rax
   140018723:	rex.RB
   140018724:	push   r14
   140018726:	push   rcx
   140018727:	push   rdi
   140018728:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140018730:	pop    rdx
   140018731:	add    BYTE PTR [rcx+rax*1],al
   140018734:	(bad)  
   140018735:	(bad)  
   140018736:	xor    BYTE PTR [rcx+0x53],dl
   140018739:	jo     0x1400187a4
   14001873b:	outs   dx,BYTE PTR ds:[rsi]
   14001873c:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001873e:	js     0x140018780
   140018740:	rex push rcx
   140018742:	rex.RB
   140018743:	rex.B
   140018744:	rex.B
   140018745:	rex push rax
   140018747:	rex.RB
   140018748:	push   r14
   14001874a:	push   rcx
   14001874b:	push   rdi
   14001874c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140018754:	pop    rdx
   140018755:	add    BYTE PTR [rcx+0x656d3f10],dh
   14001875b:	je     0x1400187be
   14001875d:	rex.WRXB (bad) 
   14001875f:	push   0x65
   140018761:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140018765:	push   rbx
   140018766:	jo     0x1400187d1
   140018768:	outs   dx,BYTE PTR ds:[rsi]
   140018769:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001876b:	js     0x1400187ad
   14001876d:	rex push rbp
   14001876f:	rex.RB
   140018770:	rex.X
   140018771:	push   r8
   140018773:	rex.RB
   140018774:	rex.X push rbp
   140018776:	push   rcx
   140018777:	rex.WRB
   140018778:	gs je  0x1400187dc
   14001877b:	rex.WRXB (bad) 
   14001877d:	push   0x65
   14001877f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018783:	pop    rax
   140018784:	pop    rdx
   140018785:	add    BYTE PTR [rsp+rdx*1],ah
   140018788:	(bad)  
   140018789:	jno    0x1400187ff
   14001878b:	pop    rdi
   14001878c:	ins    DWORD PTR es:[rdi],dx
   14001878d:	gs je  0x1400187f1
   140018790:	movsxd esp,DWORD PTR [rcx+0x73]
   140018793:	je     0x1400187d5
   140018795:	push   rcx
   140018796:	push   rbx
   140018797:	jo     0x140018802
   140018799:	outs   dx,BYTE PTR ds:[rsi]
   14001879a:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001879c:	js     0x1400187de
   14001879e:	rex push rbp
   1400187a0:	rex.RB
   1400187a1:	rex.B
   1400187a2:	push   r8
   1400187a4:	rex.RB
   1400187a5:	pop    r8
   1400187a7:	push   rax
   1400187a8:	rex.RB
   1400187a9:	rex.X
   1400187aa:	rex.R
   1400187ab:	rex pop rdx
   1400187ad:	add    BYTE PTR [rdx+0x74713f13],bl
   1400187b3:	pop    rdi
   1400187b4:	ins    DWORD PTR es:[rdi],dx
   1400187b5:	gs je  0x140018819
   1400187b8:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400187bb:	ins    BYTE PTR es:[rdi],dx
   1400187bc:	rex push rcx
   1400187be:	push   rbx
   1400187bf:	jo     0x14001882a
   1400187c1:	outs   dx,BYTE PTR ds:[rsi]
   1400187c2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400187c4:	js     0x140018806
   1400187c6:	rex push rbp
   1400187c8:	rex.RB
   1400187c9:	rex.B
   1400187ca:	rex.B
   1400187cb:	rex.W push rdi
   1400187cd:	xor    al,0x43
   1400187cf:	(bad)  
   1400187d0:	ins    BYTE PTR es:[rdi],dx
   1400187d1:	ins    BYTE PTR es:[rdi],dx
   1400187d2:	rex push rcx
   1400187d4:	rex.WRB
   1400187d5:	gs je  0x140018839
   1400187d8:	rex.WRXB (bad) 
   1400187da:	push   0x65
   1400187dc:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400187e0:	rex.W push rax
   1400187e2:	rex.RB
   1400187e3:	push   r8
   1400187e5:	rex.RB
   1400187e6:	pop    r8
   1400187e8:	rex pop rdx
   1400187ea:	add    BYTE PTR [rax],al
   1400187ec:	jmp    0x1400187f8
   1400187ee:	(bad)  
   1400187ef:	gs jbe 0x140018857
   1400187f2:	outs   dx,BYTE PTR ds:[rsi]
   1400187f3:	je     0x140018835
   1400187f5:	push   rcx
   1400187f6:	push   rbx
   1400187f7:	jo     0x140018862
   1400187f9:	outs   dx,BYTE PTR ds:[rsi]
   1400187fa:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400187fc:	js     0x14001883e
   1400187fe:	rex
   1400187ff:	rex.WRB
   140018800:	rex.RB
   140018801:	rex.B
   140018802:	pop    r15
   140018804:	rex.WRX push rax
   140018806:	rex.RB
   140018807:	push   r14
   140018809:	push   rcx
   14001880a:	rex.RB jbe 0x140018872
   14001880d:	outs   dx,BYTE PTR ds:[rsi]
   14001880e:	je     0x140018850
   140018810:	rex
   140018811:	rex pop rdx
   140018813:	add    BYTE PTR [rdx+0x61763f20],dh
   140018819:	ins    BYTE PTR es:[rdi],dx
   14001881a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x53514065
   140018822:	jo     0x14001888d
   140018824:	outs   dx,BYTE PTR ds:[rsi]
   140018825:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018827:	js     0x140018869
   140018829:	rex
   14001882a:	rex.WRB
   14001882b:	rex.RB
   14001882c:	rex.X
   14001882d:	rex.B (bad) 
   14001882f:	push   r15
   140018831:	xor    al,0x53
   140018833:	je     0x140018896
   140018835:	je     0x14001889c
   140018837:	rex push rcx
   140018839:	push   rsi
   14001883a:	(bad)  
   14001883b:	ins    BYTE PTR es:[rdi],dx
   14001883c:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   140018844:	rex.B
   140018845:	rex.RB
   140018846:	push   r14
   140018848:	push   rcx
   140018849:	push   rbx
   14001884a:	je     0x1400188be
   14001884c:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140018853:	rex.B
   140018854:	rex.W
   140018855:	rex pop rdx
   140018857:	add    BYTE PTR [rbx+0xb],dh
   14001885a:	(bad)  
   14001885b:	imul   di,WORD PTR [rax+0x75],0x4070
   140018861:	push   rcx
   140018862:	push   rbx
   140018863:	jo     0x1400188ce
   140018865:	outs   dx,BYTE PTR ds:[rsi]
   140018866:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018868:	js     0x1400188aa
   14001886a:	rex
   14001886b:	rex.WRB
   14001886c:	rex.RB
   14001886d:	rex.X
   14001886e:	pop    r8
   140018870:	rex.B
   140018871:	rex.RB
   140018872:	push   r14
   140018874:	push   rcx
   140018875:	push   rbx
   140018876:	je     0x1400188ea
   140018878:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001887f:	add    ch,al
   140018881:	and    BYTE PTR [rdi],bh
   140018883:	jbe    0x1400188e6
   140018885:	ins    BYTE PTR es:[rdi],dx
   140018886:	jne    0x1400188ed
   140018888:	rex.RX jb 0x1400188fa
   14001888b:	ins    DWORD PTR es:[rdi],dx
   14001888c:	push   rsp
   14001888d:	gs js  0x140018904
   140018890:	rex push rcx
   140018892:	push   rbx
   140018893:	jo     0x1400188fe
   140018895:	outs   dx,BYTE PTR ds:[rsi]
   140018896:	rex.X outs dx,DWORD PTR ds:[rsi]
   140018898:	js     0x1400188da
   14001889a:	rex
   14001889b:	rex.WRB
   14001889c:	rex.RB
   14001889d:	rex.X
   14001889e:	rex.B
   14001889f:	rex.W
   1400188a0:	rex.B
   1400188a1:	rex.RB
   1400188a2:	rex.X push rsi
   1400188a4:	push   rcx
   1400188a5:	push   rbx
   1400188a6:	je     0x14001891a
   1400188a8:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400188af:	add    BYTE PTR [rbx+0x1e],bh
   1400188b2:	(bad)  
   1400188b3:	je     0x14001891a
   1400188b5:	js     0x14001892b
   1400188b7:	rex.RX jb 0x140018929
   1400188ba:	ins    DWORD PTR es:[rdi],dx
   1400188bb:	push   rsi
   1400188bc:	(bad)  
   1400188bd:	ins    BYTE PTR es:[rdi],dx
   1400188be:	jne    0x140018925
   1400188c0:	rex push rcx
   1400188c2:	push   rbx
   1400188c3:	jo     0x14001892e
   1400188c5:	outs   dx,BYTE PTR ds:[rsi]
   1400188c6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400188c8:	js     0x14001890a
   1400188ca:	rex
   1400188cb:	rex.WRB
   1400188cc:	rex.RB
   1400188cd:	rex.X
   1400188ce:	rex.B (bad) 
   1400188d0:	push   r14
   1400188d2:	push   rcx
   1400188d3:	push   rbx
   1400188d4:	je     0x140018948
   1400188d6:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   1400188dd:	pop    rdx
   1400188de:	add    BYTE PTR [rax],al
   1400188e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400188e1:	adc    BYTE PTR [rdi],bh
   1400188e3:	ins    DWORD PTR es:[rdi],dx
   1400188e4:	gs je  0x140018948
   1400188e7:	rex.WRXB (bad) 
   1400188e9:	push   0x65
   1400188eb:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400188ef:	push   rax
   1400188f0:	ins    BYTE PTR es:[rdi],dx
   1400188f1:	(bad)  
   1400188f2:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   1400188f9:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   140018902:	push   rax
   140018903:	rex.RB
   140018904:	rex.X push rbp
   140018906:	push   rcx
   140018907:	rex.WRB
   140018908:	gs je  0x14001896c
   14001890b:	rex.WRXB (bad) 
   14001890d:	push   0x65
   14001890f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140018913:	pop    rax
   140018914:	pop    rdx
   140018915:	add    BYTE PTR [rdi],dl
   140018917:	adc    al,0x3f
   140018919:	jno    0x14001898f
   14001891b:	pop    rdi
   14001891c:	ins    DWORD PTR es:[rdi],dx
   14001891d:	gs je  0x140018981
   140018920:	movsxd esp,DWORD PTR [rcx+0x73]
   140018923:	je     0x140018965
   140018925:	push   rcx
   140018926:	push   rax
   140018927:	ins    BYTE PTR es:[rdi],dx
   140018928:	(bad)  
   140018929:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018930:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140018939:	push   rax
   14001893a:	rex.RB
   14001893b:	pop    r8
   14001893d:	push   rax
   14001893e:	rex.RB
   14001893f:	rex.X
   140018940:	rex.R
   140018941:	rex pop rdx
   140018943:	add    BYTE PTR [rbp+0x74713f13],cl
   140018949:	pop    rdi
   14001894a:	ins    DWORD PTR es:[rdi],dx
   14001894b:	gs je  0x1400189af
   14001894e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140018951:	ins    BYTE PTR es:[rdi],dx
   140018952:	rex push rcx
   140018954:	push   rax
   140018955:	ins    BYTE PTR es:[rdi],dx
   140018956:	(bad)  
   140018957:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   14001895e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140018967:	rex.W push rdi
   140018969:	xor    al,0x43
   14001896b:	(bad)  
   14001896c:	ins    BYTE PTR es:[rdi],dx
   14001896d:	ins    BYTE PTR es:[rdi],dx
   14001896e:	rex push rcx
   140018970:	rex.WRB
   140018971:	gs je  0x1400189d5
   140018974:	rex.WRXB (bad) 
   140018976:	push   0x65
   140018978:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001897c:	rex.W push rax
   14001897e:	rex.RB
   14001897f:	push   r8
   140018981:	rex.RB
   140018982:	pop    r8
   140018984:	rex pop rdx
   140018986:	add    BYTE PTR [rax],al
   140018988:	loopne 0x140018994
   14001898a:	(bad)  
   14001898b:	gs jbe 0x1400189f3
   14001898e:	outs   dx,BYTE PTR ds:[rsi]
   14001898f:	je     0x1400189d1
   140018991:	push   rcx
   140018992:	push   rax
   140018993:	ins    BYTE PTR es:[rdi],dx
   140018994:	(bad)  
   140018995:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   14001899c:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400189a5:	pop    rdi
   1400189a6:	rex.WRX push rax
   1400189a8:	rex.RB
   1400189a9:	push   r14
   1400189ab:	push   rcx
   1400189ac:	rex.RB jbe 0x140018a14
   1400189af:	outs   dx,BYTE PTR ds:[rsi]
   1400189b0:	je     0x1400189f2
   1400189b2:	rex
   1400189b3:	rex pop rdx
   1400189b5:	add    BYTE PTR [rax],al
   1400189b7:	or     edi,DWORD PTR [rdi]
   1400189b9:	gs jbe 0x140018a21
   1400189bc:	outs   dx,BYTE PTR ds:[rsi]
   1400189bd:	je     0x140018a05
   1400189bf:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x41514072
   1400189c7:	(bad)
   1400189cc:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400189d0:	jb     0x140018a41
   1400189d2:	ins    BYTE PTR es:[rdi],dx
   1400189d3:	ins    BYTE PTR es:[rdi],dx
   1400189d4:	rex.B jb 0x140018a3c
   1400189d7:	(bad)  
   1400189d8:	rex
   1400189d9:	rex
   1400189da:	rex.WRB
   1400189db:	rex.RB
   1400189dc:	rex.B
   1400189dd:	pop    r15
   1400189df:	rex.WRX push rax
   1400189e1:	rex.RB
   1400189e2:	push   r14
   1400189e4:	push   rcx
   1400189e5:	rex.WRXB (bad) 
   1400189e7:	push   0x65
   1400189e9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400189ed:	push   rax
   1400189ee:	rex.RB
   1400189ef:	push   r14
   1400189f1:	push   rcx
   1400189f2:	rex.RB jbe 0x140018a5a
   1400189f5:	outs   dx,BYTE PTR ds:[rsi]
   1400189f6:	je     0x140018a38
   1400189f8:	rex
   1400189f9:	rex pop rdx
   1400189fb:	add    BYTE PTR [rdi+0x69743f1e],bl
   140018a01:	ins    DWORD PTR es:[rdi],dx
   140018a02:	gs jb  0x140018a4a
   140018a05:	jbe    0x140018a6c
   140018a07:	outs   dx,BYTE PTR ds:[rsi]
   140018a08:	je     0x140018a4a
   140018a0a:	push   rcx
   140018a0b:	push   rax
   140018a0c:	ins    BYTE PTR es:[rdi],dx
   140018a0d:	(bad)  
   140018a0e:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018a15:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018a1e:	pop    rax
   140018a1f:	push   rax
   140018a20:	rex.RB
   140018a21:	push   r14
   140018a23:	push   rcx
   140018a24:	push   rsp
   140018a25:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140018a2c:	outs   dx,BYTE PTR ds:[rsi]
   140018a2d:	je     0x140018a6f
   140018a2f:	rex
   140018a30:	rex pop rdx
   140018a32:	add    BYTE PTR [rax],al
   140018a34:	nop
   140018a35:	sbb    al,0x3f
   140018a37:	jae    0x140018aa2
   140018a39:	jp     0x140018aa0
   140018a3b:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140018a43:	jae    0x140018ab9
   140018a45:	jb     0x140018aa8
   140018a47:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140018a4b:	jb     0x140018abc
   140018a4d:	ins    BYTE PTR es:[rdi],dx
   140018a4e:	ins    BYTE PTR es:[rdi],dx
   140018a4f:	rex.B jb 0x140018ab7
   140018a52:	(bad)  
   140018a53:	rex
   140018a54:	rex push rbp
   140018a56:	rex.RB
   140018a57:	rex.X
   140018a58:	rex.B (bad) 
   140018a5a:	push   r14
   140018a5c:	push   rcx
   140018a5d:	push   rbx
   140018a5e:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140018a65:	add    BYTE PTR [rbx+0x11],bh
   140018a68:	(bad)  
   140018a69:	ins    DWORD PTR es:[rdi],dx
   140018a6a:	outs   dx,DWORD PTR ds:[rsi]
   140018a6b:	jne    0x140018ae0
   140018a6d:	gs push rax
   140018a6f:	jb     0x140018ad6
   140018a71:	jae    0x140018ae6
   140018a73:	rex.RB jbe 0x140018adb
   140018a76:	outs   dx,BYTE PTR ds:[rsi]
   140018a77:	je     0x140018ab9
   140018a79:	push   rcx
   140018a7a:	push   rax
   140018a7b:	ins    BYTE PTR es:[rdi],dx
   140018a7c:	(bad)  
   140018a7d:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018a84:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018a8d:	pop    rax
   140018a8e:	push   rax
   140018a8f:	rex.RB
   140018a90:	push   r14
   140018a92:	push   rcx
   140018a93:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018a95:	jne    0x140018b0a
   140018a97:	gs rex.RB jbe 0x140018b00
   140018a9b:	outs   dx,BYTE PTR ds:[rsi]
   140018a9c:	je     0x140018ade
   140018a9e:	rex
   140018a9f:	rex pop rdx
   140018aa1:	add    BYTE PTR [rdx+0x6f6d3f11],bl
   140018aa7:	jne    0x140018b1c
   140018aa9:	gs push rdx
   140018aab:	gs ins BYTE PTR es:[rdi],dx
   140018aad:	gs (bad) 
   140018aaf:	jae    0x140018b16
   140018ab1:	rex.RB jbe 0x140018b19
   140018ab4:	outs   dx,BYTE PTR ds:[rsi]
   140018ab5:	je     0x140018af7
   140018ab7:	push   rcx
   140018ab8:	push   rax
   140018ab9:	ins    BYTE PTR es:[rdi],dx
   140018aba:	(bad)  
   140018abb:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018ac2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018acb:	pop    rax
   140018acc:	push   rax
   140018acd:	rex.RB
   140018ace:	push   r14
   140018ad0:	push   rcx
   140018ad1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018ad3:	jne    0x140018b48
   140018ad5:	gs rex.RB jbe 0x140018b3e
   140018ad9:	outs   dx,BYTE PTR ds:[rsi]
   140018ada:	je     0x140018b1c
   140018adc:	rex
   140018add:	rex pop rdx
   140018adf:	add    BYTE PTR [rcx+0x11],al
   140018ae2:	(bad)  
   140018ae3:	ins    DWORD PTR es:[rdi],dx
   140018ae4:	outs   dx,DWORD PTR ds:[rsi]
   140018ae5:	jne    0x140018b5a
   140018ae7:	rex.R outs dx,DWORD PTR gs:[rsi]
   140018aea:	jne    0x140018b4e
   140018aec:	ins    BYTE PTR es:[rdi],dx
   140018aed:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140018af0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140018af7:	je     0x140018b39
   140018af9:	push   rcx
   140018afa:	push   rax
   140018afb:	ins    BYTE PTR es:[rdi],dx
   140018afc:	(bad)  
   140018afd:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018b04:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018b0d:	pop    rax
   140018b0e:	push   rax
   140018b0f:	rex.RB
   140018b10:	push   r14
   140018b12:	push   rcx
   140018b13:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018b15:	jne    0x140018b8a
   140018b17:	gs rex.RB jbe 0x140018b80
   140018b1b:	outs   dx,BYTE PTR ds:[rsi]
   140018b1c:	je     0x140018b5e
   140018b1e:	rex
   140018b1f:	rex pop rdx
   140018b21:	add    BYTE PTR [rdx+0x11],bl
   140018b24:	(bad)  
   140018b25:	ins    DWORD PTR es:[rdi],dx
   140018b26:	outs   dx,DWORD PTR ds:[rsi]
   140018b27:	jne    0x140018b9c
   140018b29:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140018b2c:	jbe    0x140018b93
   140018b2e:	rex.RB jbe 0x140018b96
   140018b31:	outs   dx,BYTE PTR ds:[rsi]
   140018b32:	je     0x140018b74
   140018b34:	push   rcx
   140018b35:	push   rax
   140018b36:	ins    BYTE PTR es:[rdi],dx
   140018b37:	(bad)  
   140018b38:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018b3f:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018b48:	pop    rax
   140018b49:	push   rax
   140018b4a:	rex.RB
   140018b4b:	push   r14
   140018b4d:	push   rcx
   140018b4e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140018b50:	jne    0x140018bc5
   140018b52:	gs rex.RB jbe 0x140018bbb
   140018b56:	outs   dx,BYTE PTR ds:[rsi]
   140018b57:	je     0x140018b99
   140018b59:	rex
   140018b5a:	rex pop rdx
   140018b5c:	add    BYTE PTR [rax],al
   140018b5e:	xor    BYTE PTR [rcx],ah
   140018b60:	(bad)  
   140018b61:	ja     0x140018bcb
   140018b63:	gs gs ins BYTE PTR es:[rdi],dx
   140018b66:	rex.RB jbe 0x140018bce
   140018b69:	outs   dx,BYTE PTR ds:[rsi]
   140018b6a:	je     0x140018bac
   140018b6c:	push   rcx
   140018b6d:	push   rax
   140018b6e:	ins    BYTE PTR es:[rdi],dx
   140018b6f:	(bad)  
   140018b70:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018b77:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018b80:	pop    rax
   140018b81:	push   rax
   140018b82:	rex.RB
   140018b83:	push   r14
   140018b85:	push   rcx
   140018b86:	push   rdi
   140018b87:	push   0x456c6565
   140018b8c:	jbe    0x140018bf3
   140018b8e:	outs   dx,BYTE PTR ds:[rsi]
   140018b8f:	je     0x140018bd1
   140018b91:	rex
   140018b92:	rex pop rdx
   140018b94:	add    BYTE PTR [rax],al
   140018b96:	push   rdx
   140018b97:	(bad)  
   140018b99:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140018b9d:	jb     0x140018c04
   140018b9f:	jae    0x140018c14
   140018ba1:	rex.RB jbe 0x140018c09
   140018ba4:	outs   dx,BYTE PTR ds:[rsi]
   140018ba5:	je     0x140018be7
   140018ba7:	push   rcx
   140018ba8:	push   rax
   140018ba9:	ins    BYTE PTR es:[rdi],dx
   140018baa:	(bad)  
   140018bab:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018bb2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018bbb:	pop    rax
   140018bbc:	push   rax
   140018bbd:	rex.RB
   140018bbe:	push   r14
   140018bc0:	push   rcx
   140018bc1:	rex.WXB
   140018bc2:	gs jns 0x140018c0a
   140018bc5:	jbe    0x140018c2c
   140018bc7:	outs   dx,BYTE PTR ds:[rsi]
   140018bc8:	je     0x140018c0a
   140018bca:	rex
   140018bcb:	rex pop rdx
   140018bcd:	add    BYTE PTR [rdi+rcx*1+0x3f],ah
   140018bd1:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140018bd5:	gs ins BYTE PTR es:[rdi],dx
   140018bd7:	gs (bad) 
   140018bd9:	jae    0x140018c40
   140018bdb:	rex.RB jbe 0x140018c43
   140018bde:	outs   dx,BYTE PTR ds:[rsi]
   140018bdf:	je     0x140018c21
   140018be1:	push   rcx
   140018be2:	push   rax
   140018be3:	ins    BYTE PTR es:[rdi],dx
   140018be4:	(bad)  
   140018be5:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018bec:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018bf5:	pop    rax
   140018bf6:	push   rax
   140018bf7:	rex.RB
   140018bf8:	push   r14
   140018bfa:	push   rcx
   140018bfb:	rex.WXB
   140018bfc:	gs jns 0x140018c44
   140018bff:	jbe    0x140018c66
   140018c01:	outs   dx,BYTE PTR ds:[rsi]
   140018c02:	je     0x140018c44
   140018c04:	rex
   140018c05:	rex pop rdx
   140018c07:	add    BYTE PTR [rax+0x6f663f0b],dl
   140018c0d:	movsxd esi,DWORD PTR [rbp+0x73]
   140018c10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018c12:	rex.RB jbe 0x140018c7a
   140018c15:	outs   dx,BYTE PTR ds:[rsi]
   140018c16:	je     0x140018c58
   140018c18:	push   rcx
   140018c19:	push   rax
   140018c1a:	ins    BYTE PTR es:[rdi],dx
   140018c1b:	(bad)  
   140018c1c:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018c23:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018c2c:	pop    rax
   140018c2d:	push   rax
   140018c2e:	rex.RB
   140018c2f:	push   r14
   140018c31:	push   rcx
   140018c32:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140018c34:	movsxd esi,DWORD PTR [rbp+0x73]
   140018c37:	rex.RB jbe 0x140018c9f
   140018c3a:	outs   dx,BYTE PTR ds:[rsi]
   140018c3b:	je     0x140018c7d
   140018c3d:	rex
   140018c3e:	rex pop rdx
   140018c40:	add    BYTE PTR [rax],al
   140018c42:	mov    ch,0xb
   140018c44:	(bad)  
   140018c45:	outs   dx,WORD PTR ds:[rsi]
   140018c47:	movsxd esi,DWORD PTR [rbp+0x73]
   140018c4a:	rex.WRXB jne 0x140018cc1
   140018c4d:	rex.RB jbe 0x140018cb5
   140018c50:	outs   dx,BYTE PTR ds:[rsi]
   140018c51:	je     0x140018c93
   140018c53:	push   rcx
   140018c54:	push   rax
   140018c55:	ins    BYTE PTR es:[rdi],dx
   140018c56:	(bad)  
   140018c57:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018c5e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018c67:	pop    rax
   140018c68:	push   rax
   140018c69:	rex.RB
   140018c6a:	push   r14
   140018c6c:	push   rcx
   140018c6d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140018c6f:	movsxd esi,DWORD PTR [rbp+0x73]
   140018c72:	rex.RB jbe 0x140018cda
   140018c75:	outs   dx,BYTE PTR ds:[rsi]
   140018c76:	je     0x140018cb8
   140018c78:	rex
   140018c79:	rex pop rdx
   140018c7b:	add    BYTE PTR [rsi+0x12],ah
   140018c7e:	(bad)  
   140018c7f:	jo     0x140018ce2
   140018c81:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140018c88:	je     0x140018cca
   140018c8a:	push   rcx
   140018c8b:	push   rax
   140018c8c:	ins    BYTE PTR es:[rdi],dx
   140018c8d:	(bad)  
   140018c8e:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018c95:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018c9e:	pop    rax
   140018c9f:	push   rax
   140018ca0:	rex.RB
   140018ca1:	push   r14
   140018ca3:	push   rcx
   140018ca4:	push   rax
   140018ca5:	(bad)  
   140018ca6:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140018cad:	je     0x140018cef
   140018caf:	rex
   140018cb0:	rex pop rdx
   140018cb2:	add    BYTE PTR [rax],al
   140018cb4:	xchg   esi,eax
   140018cb5:	adc    eax,0x7365723f
   140018cba:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   140018cc1:	je     0x140018d03
   140018cc3:	push   rcx
   140018cc4:	push   rax
   140018cc5:	ins    BYTE PTR es:[rdi],dx
   140018cc6:	(bad)  
   140018cc7:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018cce:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018cd7:	pop    rax
   140018cd8:	push   rax
   140018cd9:	rex.RB
   140018cda:	push   r14
   140018cdc:	push   rcx
   140018cdd:	push   rdx
   140018cde:	gs jae 0x140018d4a
   140018ce1:	jp     0x140018d48
   140018ce3:	rex.RB jbe 0x140018d4b
   140018ce6:	outs   dx,BYTE PTR ds:[rsi]
   140018ce7:	je     0x140018d29
   140018ce9:	rex
   140018cea:	rex pop rdx
   140018cec:	add    BYTE PTR [rax],al
   140018cee:	pop    QWORD PTR [rdi]
   140018cf0:	(bad)  
   140018cf1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140018cf4:	je     0x140018d5b
   140018cf6:	js     0x140018d6c
   140018cf8:	rex.WRB
   140018cf9:	outs   dx,BYTE PTR gs:[rsi]
   140018cfb:	jne    0x140018d42
   140018cfd:	jbe    0x140018d64
   140018cff:	outs   dx,BYTE PTR ds:[rsi]
   140018d00:	je     0x140018d42
   140018d02:	push   rcx
   140018d03:	push   rax
   140018d04:	ins    BYTE PTR es:[rdi],dx
   140018d05:	(bad)  
   140018d06:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018d0d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018d16:	pop    rax
   140018d17:	push   rax
   140018d18:	rex.RB
   140018d19:	push   r14
   140018d1b:	push   rcx
   140018d1c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018d1e:	outs   dx,BYTE PTR ds:[rsi]
   140018d1f:	je     0x140018d86
   140018d21:	js     0x140018d97
   140018d23:	rex.WRB
   140018d24:	outs   dx,BYTE PTR gs:[rsi]
   140018d26:	jne    0x140018d6d
   140018d28:	jbe    0x140018d8f
   140018d2a:	outs   dx,BYTE PTR ds:[rsi]
   140018d2b:	je     0x140018d6d
   140018d2d:	rex
   140018d2e:	rex pop rdx
   140018d30:	add    BYTE PTR [rax],al
   140018d32:	(bad)  
   140018d33:	or     bh,BYTE PTR [rdi]
   140018d35:	fs jb  0x140018d99
   140018d38:	rex.RB outs dx,BYTE PTR ds:[esi]
   140018d3b:	je     0x140018da2
   140018d3d:	jb     0x140018d84
   140018d3f:	jbe    0x140018da6
   140018d41:	outs   dx,BYTE PTR ds:[rsi]
   140018d42:	je     0x140018d84
   140018d44:	push   rcx
   140018d45:	push   rax
   140018d46:	ins    BYTE PTR es:[rdi],dx
   140018d47:	(bad)  
   140018d48:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018d4f:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018d58:	pop    rax
   140018d59:	push   rax
   140018d5a:	rex.RB
   140018d5b:	push   r14
   140018d5d:	push   rcx
   140018d5e:	rex.R jb 0x140018dc2
   140018d61:	rex.RB outs dx,BYTE PTR ds:[esi]
   140018d64:	je     0x140018dcb
   140018d66:	jb     0x140018dad
   140018d68:	jbe    0x140018dcf
   140018d6a:	outs   dx,BYTE PTR ds:[rsi]
   140018d6b:	je     0x140018dad
   140018d6d:	rex
   140018d6e:	rex pop rdx
   140018d70:	add    BYTE PTR [rax],al
   140018d72:	(bad)  
   140018d73:	or     bh,BYTE PTR [rdi]
   140018d75:	fs jb  0x140018dd9
   140018d78:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140018d7b:	jbe    0x140018de2
   140018d7d:	rex.RB jbe 0x140018de5
   140018d80:	outs   dx,BYTE PTR ds:[rsi]
   140018d81:	je     0x140018dc3
   140018d83:	push   rcx
   140018d84:	push   rax
   140018d85:	ins    BYTE PTR es:[rdi],dx
   140018d86:	(bad)  
   140018d87:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018d8e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018d97:	pop    rax
   140018d98:	push   rax
   140018d99:	rex.RB
   140018d9a:	push   r14
   140018d9c:	push   rcx
   140018d9d:	rex.R jb 0x140018e01
   140018da0:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140018da3:	jbe    0x140018e0a
   140018da5:	rex.RB jbe 0x140018e0d
   140018da8:	outs   dx,BYTE PTR ds:[rsi]
   140018da9:	je     0x140018deb
   140018dab:	rex
   140018dac:	rex pop rdx
   140018dae:	add    BYTE PTR [rax],al
   140018db0:	and    cl,BYTE PTR [rdx]
   140018db2:	(bad)  
   140018db3:	fs jb  0x140018e17
   140018db6:	addr32 rex.WR
   140018db8:	gs (bad) 
   140018dba:	jbe    0x140018e21
   140018dbc:	rex.RB jbe 0x140018e24
   140018dbf:	outs   dx,BYTE PTR ds:[rsi]
   140018dc0:	je     0x140018e02
   140018dc2:	push   rcx
   140018dc3:	push   rax
   140018dc4:	ins    BYTE PTR es:[rdi],dx
   140018dc5:	(bad)  
   140018dc6:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018dcd:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018dd6:	pop    rax
   140018dd7:	push   rax
   140018dd8:	rex.RB
   140018dd9:	push   r14
   140018ddb:	push   rcx
   140018ddc:	rex.R jb 0x140018e40
   140018ddf:	addr32 rex.WR
   140018de1:	gs (bad) 
   140018de3:	jbe    0x140018e4a
   140018de5:	rex.RB jbe 0x140018e4d
   140018de8:	outs   dx,BYTE PTR ds:[rsi]
   140018de9:	je     0x140018e2b
   140018deb:	rex
   140018dec:	rex pop rdx
   140018dee:	add    BYTE PTR [rax],al
   140018df0:	imul   ecx,DWORD PTR [rdx],0x6f72643f
   140018df6:	jo     0x140018e3d
   140018df8:	jbe    0x140018e5f
   140018dfa:	outs   dx,BYTE PTR ds:[rsi]
   140018dfb:	je     0x140018e3d
   140018dfd:	push   rcx
   140018dfe:	push   rax
   140018dff:	ins    BYTE PTR es:[rdi],dx
   140018e00:	(bad)  
   140018e01:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018e08:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018e11:	pop    rax
   140018e12:	push   rax
   140018e13:	rex.RB
   140018e14:	push   r14
   140018e16:	push   rcx
   140018e17:	rex.R jb 0x140018e89
   140018e1a:	jo     0x140018e61
   140018e1c:	jbe    0x140018e83
   140018e1e:	outs   dx,BYTE PTR ds:[rsi]
   140018e1f:	je     0x140018e61
   140018e21:	rex
   140018e22:	rex pop rdx
   140018e24:	add    BYTE PTR [rax],al
   140018e26:	push   rsp
   140018e27:	sbb    al,0x3f
   140018e29:	jae    0x140018e93
   140018e2b:	outs   dx,DWORD PTR ds:[rsi]
   140018e2c:	ja     0x140018e73
   140018e2e:	jbe    0x140018e95
   140018e30:	outs   dx,BYTE PTR ds:[rsi]
   140018e31:	je     0x140018e73
   140018e33:	push   rcx
   140018e34:	push   rax
   140018e35:	ins    BYTE PTR es:[rdi],dx
   140018e36:	(bad)  
   140018e37:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018e3e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018e47:	pop    rax
   140018e48:	push   rax
   140018e49:	rex.RB
   140018e4a:	push   r14
   140018e4c:	push   rcx
   140018e4d:	push   rbx
   140018e4e:	push   0x7645776f
   140018e53:	outs   dx,BYTE PTR gs:[rsi]
   140018e55:	je     0x140018e97
   140018e57:	rex
   140018e58:	rex pop rdx
   140018e5a:	add    BYTE PTR [rax],al
   140018e5c:	(bad)  
   140018e5d:	(bad)  
   140018e5e:	(bad)  
   140018e5f:	movsxd ebp,DWORD PTR [rax+0x61]
   140018e62:	outs   dx,BYTE PTR ds:[rsi]
   140018e63:	addr32 gs rex.RB jbe 0x140018ecd
   140018e68:	outs   dx,BYTE PTR ds:[rsi]
   140018e69:	je     0x140018eab
   140018e6b:	push   rcx
   140018e6c:	push   rax
   140018e6d:	ins    BYTE PTR es:[rdi],dx
   140018e6e:	(bad)  
   140018e6f:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018e76:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018e7f:	pop    rax
   140018e80:	push   rax
   140018e81:	rex.RB
   140018e82:	push   r14
   140018e84:	push   rcx
   140018e85:	rex.RB jbe 0x140018eed
   140018e88:	outs   dx,BYTE PTR ds:[rsi]
   140018e89:	je     0x140018ecb
   140018e8b:	rex
   140018e8c:	rex pop rdx
   140018e8e:	add    BYTE PTR [rax],al
   140018e90:	ja     0x140018e9f
   140018e92:	(bad)  
   140018e93:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   140018e9a:	je     0x140018f04
   140018e9c:	outs   dx,DWORD PTR ds:[rsi]
   140018e9d:	fs rex.RB jbe 0x140018f06
   140018ea1:	outs   dx,BYTE PTR ds:[rsi]
   140018ea2:	je     0x140018ee4
   140018ea4:	push   rcx
   140018ea5:	push   rax
   140018ea6:	ins    BYTE PTR es:[rdi],dx
   140018ea7:	(bad)  
   140018ea8:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018eaf:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018eb8:	pop    rax
   140018eb9:	push   rax
   140018eba:	rex.RB
   140018ebb:	push   r14
   140018ebd:	push   rcx
   140018ebe:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140018ec0:	jo     0x140018f37
   140018ec2:	je     0x140018f11
   140018ec4:	gs je  0x140018f2f
   140018ec7:	outs   dx,DWORD PTR ds:[rsi]
   140018ec8:	fs rex.RB jbe 0x140018f31
   140018ecc:	outs   dx,BYTE PTR ds:[rsi]
   140018ecd:	je     0x140018f0f
   140018ecf:	rex
   140018ed0:	rex pop rdx
   140018ed2:	add    BYTE PTR [rax],al
   140018ed4:	xchg   BYTE PTR [rip+0x706e693f],cl        # 0x1b06ff819
   140018eda:	jne    0x140018f50
   140018edc:	rex.WRB
   140018edd:	gs je  0x140018f48
   140018ee0:	outs   dx,DWORD PTR ds:[rsi]
   140018ee1:	fs push rcx
   140018ee3:	jne    0x140018f4a
   140018ee5:	jb     0x140018f60
   140018ee7:	rex push rcx
   140018ee9:	push   rax
   140018eea:	ins    BYTE PTR es:[rdi],dx
   140018eeb:	(bad)  
   140018eec:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018ef3:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   140018efc:	(bad)  
   140018efd:	push   r14
   140018eff:	push   rcx
   140018f00:	push   rsi
   140018f01:	(bad)  
   140018f02:	jb     0x140018f6d
   140018f04:	(bad)  
   140018f05:	outs   dx,BYTE PTR ds:[rsi]
   140018f06:	je     0x140018f48
   140018f08:	rex push rdi
   140018f0a:	xor    al,0x49
   140018f0c:	outs   dx,BYTE PTR ds:[rsi]
   140018f0d:	jo     0x140018f84
   140018f0f:	je     0x140018f5e
   140018f11:	gs je  0x140018f7c
   140018f14:	outs   dx,DWORD PTR ds:[rsi]
   140018f15:	fs push rcx
   140018f17:	jne    0x140018f7e
   140018f19:	jb     0x140018f94
   140018f1b:	rex push rcx
   140018f1d:	je     0x140018f5f
   140018f1f:	rex
   140018f20:	rex pop rdx
   140018f22:	add    BYTE PTR [rax],al
   140018f24:	movabs al,ds:0x4e7375636f663f0b
   140018f2d:	gs js  0x140018fa4
   140018f30:	push   rax
   140018f31:	jb     0x140018f98
   140018f33:	jbe    0x140018f78
   140018f35:	push   0x40646c69
   140018f3a:	push   rcx
   140018f3b:	push   rax
   140018f3c:	ins    BYTE PTR es:[rdi],dx
   140018f3d:	(bad)  
   140018f3e:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018f45:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018f4e:	pop    rdi
   140018f4f:	rex.WRX pop rdi
   140018f51:	rex.WRX
   140018f52:	rex pop rdx
   140018f54:	add    BYTE PTR [rax],al
   140018f56:	rex.XB (bad) 
   140018f58:	(bad)  
   140018f59:	jae    0x140018fbe
   140018f5b:	jb     0x140018fcc
   140018f5d:	ins    BYTE PTR es:[rdi],dx
   140018f5e:	ins    BYTE PTR es:[rdi],dx
   140018f5f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018f61:	outs   dx,BYTE PTR ds:[rsi]
   140018f62:	je     0x140018fc9
   140018f64:	outs   dx,BYTE PTR ds:[rsi]
   140018f65:	je     0x140018fda
   140018f67:	rex.X jns 0x140018faa
   140018f6a:	push   rcx
   140018f6b:	push   rax
   140018f6c:	ins    BYTE PTR es:[rdi],dx
   140018f6d:	(bad)  
   140018f6e:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018f75:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140018f7e:	pop    rax
   140018f7f:	rex.W
   140018f80:	rex.W
   140018f81:	rex pop rdx
   140018f83:	add    ah,dh
   140018f85:	and    BYTE PTR [rdi],bh
   140018f87:	jbe    0x140018ff2
   140018f89:	gs ja  0x140018ffc
   140018f8c:	outs   dx,DWORD PTR ds:[rsi]
   140018f8d:	jb     0x140019003
   140018f8f:	push   rbx
   140018f90:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140018f97:	rex push rcx
   140018f99:	(bad)
   140018f9f:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140018fa3:	jb     0x140019014
   140018fa5:	ins    BYTE PTR es:[rdi],dx
   140018fa6:	ins    BYTE PTR es:[rdi],dx
   140018fa7:	rex.B jb 0x14001900f
   140018faa:	(bad)  
   140018fab:	rex
   140018fac:	rex
   140018fad:	rex.WRB
   140018fae:	rex.RB
   140018faf:	rex.X
   140018fb0:	rex.B (bad) 
   140018fb2:	push   r14
   140018fb4:	push   rcx
   140018fb5:	push   rbx
   140018fb6:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140018fbd:	add    BYTE PTR [rbp+0x6f6c3f0f],ch
   140018fc3:	(bad)  
   140018fc4:	fs push rdx
   140018fc6:	gs jae 0x140019038
   140018fc9:	jne    0x14001903d
   140018fcb:	movsxd esp,DWORD PTR [rbp+0x40]
   140018fce:	push   rcx
   140018fcf:	push   rax
   140018fd0:	ins    BYTE PTR es:[rdi],dx
   140018fd1:	(bad)  
   140018fd2:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140018fd9:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140018fe2:	(bad)  
   140018fe3:	push   r14
   140018fe5:	push   rcx
   140018fe6:	push   rsi
   140018fe7:	(bad)  
   140018fe8:	jb     0x140019053
   140018fea:	(bad)  
   140018feb:	outs   dx,BYTE PTR ds:[rsi]
   140018fec:	je     0x14001902e
   140018fee:	rex
   140018fef:	rex.W
   140018ff0:	rex.B
   140018ff1:	rex.RB
   140018ff2:	rex.X push rsi
   140018ff4:	push   rcx
   140018ff5:	push   rbp
   140018ff6:	jb     0x140019064
   140018ff8:	rex
   140018ff9:	rex
   140018ffa:	rex pop rdx
   140018ffc:	add    BYTE PTR [rax],al
   140018ffe:	mov    BYTE PTR [rdi],0x3f
   140019001:	movsxd esi,DWORD PTR [rdx+0x65]
   140019004:	(bad)  
   140019005:	je     0x14001906c
   140019007:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001900f:	rex.RX jb 0x140019081
   140019012:	ins    DWORD PTR es:[rdi],dx
   140019013:	push   rbx
   140019014:	gs ins BYTE PTR es:[rdi],dx
   140019016:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001901b:	outs   dx,BYTE PTR ds:[rsi]
   14001901c:	rex push rcx
   14001901e:	push   rax
   14001901f:	ins    BYTE PTR es:[rdi],dx
   140019020:	(bad)  
   140019021:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140019028:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   140019031:	push   rax
   140019032:	rex.RB
   140019033:	push   r14
   140019035:	push   rcx
   140019036:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001903e:	rex
   14001903f:	rex pop rax
   140019041:	pop    rdx
   140019042:	add    BYTE PTR [rax],al
   140019044:	rex.RB (bad) 
   140019046:	(bad)  
   140019047:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001904a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001904c:	jae    0x1400190b3
   14001904e:	jb     0x1400190c4
   140019050:	rex.RX jb 0x1400190c2
   140019053:	ins    DWORD PTR es:[rdi],dx
   140019054:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001905c:	rex push rcx
   14001905e:	push   rax
   14001905f:	ins    BYTE PTR es:[rdi],dx
   140019060:	(bad)  
   140019061:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140019068:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   140019071:	pop    rdi
   140019072:	rex.WRX push rax
   140019074:	rex.RB
   140019075:	rex.X push rsi
   140019077:	push   rcx
   140019078:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140019080:	rex
   140019081:	rex
   140019082:	rex pop rdx
   140019084:	add    BYTE PTR [rax],al
   140019086:	xchg   ebp,eax
   140019087:	or     eax,0x736e693f
   14001908c:	gs jb  0x140019103
   14001908f:	rex.RX jb 0x140019101
   140019092:	ins    DWORD PTR es:[rdi],dx
   140019093:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14001909b:	rex push rcx
   14001909d:	push   rax
   14001909e:	ins    BYTE PTR es:[rdi],dx
   14001909f:	(bad)  
   1400190a0:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   1400190a7:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400190b0:	pop    rax
   1400190b1:	push   rax
   1400190b2:	rex.RB
   1400190b3:	rex.X push rsi
   1400190b5:	push   rcx
   1400190b6:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   1400190be:	rex
   1400190bf:	rex
   1400190c0:	rex pop rdx
   1400190c2:	add    BYTE PTR [rax],al
   1400190c4:	call   0x1af65cfd2
   1400190c9:	push   rbx
   1400190ca:	gs je  0x140019121
   1400190cd:	gs js  0x140019144
   1400190d0:	rex.XB jne 0x140019145
   1400190d3:	jae    0x140019144
   1400190d5:	jb     0x140019117
   1400190d7:	push   rcx
   1400190d8:	push   rax
   1400190d9:	ins    BYTE PTR es:[rdi],dx
   1400190da:	(bad)  
   1400190db:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   1400190e2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400190eb:	pop    rax
   1400190ec:	rex.B
   1400190ed:	rex.RB
   1400190ee:	rex.X push rsi
   1400190f0:	push   rcx
   1400190f1:	push   rsp
   1400190f2:	gs js  0x140019169
   1400190f5:	rex.XB jne 0x14001916a
   1400190f8:	jae    0x140019169
   1400190fa:	jb     0x14001913c
   1400190fc:	rex
   1400190fd:	rex pop rdx
   1400190ff:	add    BYTE PTR [rax+rdx*1+0x3f],bl
   140019103:	ins    DWORD PTR es:[rdi],dx
   140019104:	gs je  0x140019168
   140019107:	rex.WRXB (bad) 
   140019109:	push   0x65
   14001910b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001910f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019111:	ins    DWORD PTR es:[rdi],dx
   140019112:	(bad)  
   140019113:	outs   dx,DWORD PTR ds:[rsi]
   140019114:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019116:	js     0x140019158
   140019118:	rex push rbp
   14001911a:	rex.RB
   14001911b:	rex.X
   14001911c:	push   r8
   14001911e:	rex.RB
   14001911f:	rex.X push rbp
   140019121:	push   rcx
   140019122:	rex.WRB
   140019123:	gs je  0x140019187
   140019126:	rex.WRXB (bad) 
   140019128:	push   0x65
   14001912a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001912e:	pop    rax
   14001912f:	pop    rdx
   140019130:	add    BYTE PTR [rax],al
   140019132:	iret   
   140019133:	adc    edi,DWORD PTR [rdi]
   140019135:	jno    0x1400191ab
   140019137:	pop    rdi
   140019138:	ins    DWORD PTR es:[rdi],dx
   140019139:	gs je  0x14001919d
   14001913c:	movsxd esp,DWORD PTR [rcx+0x73]
   14001913f:	je     0x140019181
   140019141:	push   rcx
   140019142:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019144:	ins    DWORD PTR es:[rdi],dx
   140019145:	(bad)  
   140019146:	outs   dx,DWORD PTR ds:[rsi]
   140019147:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019149:	js     0x14001918b
   14001914b:	rex push rbp
   14001914d:	rex.RB
   14001914e:	rex.B
   14001914f:	push   r8
   140019151:	rex.RB
   140019152:	pop    r8
   140019154:	push   rax
   140019155:	rex.RB
   140019156:	rex.X
   140019157:	rex.R
   140019158:	rex pop rdx
   14001915a:	add    BYTE PTR [rax],al
   14001915c:	adc    r15d,DWORD PTR [r15]
   14001915f:	jno    0x1400191d5
   140019161:	pop    rdi
   140019162:	ins    DWORD PTR es:[rdi],dx
   140019163:	gs je  0x1400191c7
   140019166:	movsxd esp,DWORD PTR [rcx+0x6c]
   140019169:	ins    BYTE PTR es:[rdi],dx
   14001916a:	rex push rcx
   14001916c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001916e:	ins    DWORD PTR es:[rdi],dx
   14001916f:	(bad)  
   140019170:	outs   dx,DWORD PTR ds:[rsi]
   140019171:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019173:	js     0x1400191b5
   140019175:	rex push rbp
   140019177:	rex.RB
   140019178:	rex.B
   140019179:	rex.B
   14001917a:	rex.W push rdi
   14001917c:	xor    al,0x43
   14001917e:	(bad)  
   14001917f:	ins    BYTE PTR es:[rdi],dx
   140019180:	ins    BYTE PTR es:[rdi],dx
   140019181:	rex push rcx
   140019183:	rex.WRB
   140019184:	gs je  0x1400191e8
   140019187:	rex.WRXB (bad) 
   140019189:	push   0x65
   14001918b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001918f:	rex.W push rax
   140019191:	rex.RB
   140019192:	push   r8
   140019194:	rex.RB
   140019195:	pop    r8
   140019197:	rex pop rdx
   140019199:	add    cl,al
   14001919b:	or     bh,BYTE PTR [rdi]
   14001919d:	gs jbe 0x140019205
   1400191a0:	outs   dx,BYTE PTR ds:[rsi]
   1400191a1:	je     0x1400191e3
   1400191a3:	push   rcx
   1400191a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400191a6:	ins    DWORD PTR es:[rdi],dx
   1400191a7:	(bad)  
   1400191a8:	outs   dx,DWORD PTR ds:[rsi]
   1400191a9:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400191ab:	js     0x1400191ed
   1400191ad:	rex push rbp
   1400191af:	rex.RB
   1400191b0:	rex.B
   1400191b1:	pop    r15
   1400191b3:	rex.WRX push rax
   1400191b5:	rex.RB
   1400191b6:	push   r14
   1400191b8:	push   rcx
   1400191b9:	rex.RB jbe 0x140019221
   1400191bc:	outs   dx,BYTE PTR ds:[rsi]
   1400191bd:	je     0x1400191ff
   1400191bf:	rex
   1400191c0:	rex pop rdx
   1400191c2:	add    BYTE PTR [rax],al
   1400191c4:	xchg   esi,eax
   1400191c5:	sbb    al,0x3f
   1400191c7:	jae    0x140019232
   1400191c9:	jp     0x140019230
   1400191cb:	imul   rbp,QWORD PTR [rsi+0x74],0x6f435140
   1400191d3:	ins    DWORD PTR es:[rdi],dx
   1400191d4:	(bad)  
   1400191d5:	outs   dx,DWORD PTR ds:[rsi]
   1400191d6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400191d8:	js     0x14001921a
   1400191da:	rex push rbp
   1400191dc:	rex.RB
   1400191dd:	rex.X
   1400191de:	rex.B (bad) 
   1400191e0:	push   r14
   1400191e2:	push   rcx
   1400191e3:	push   rbx
   1400191e4:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400191eb:	add    BYTE PTR [rdi],al
   1400191ed:	adc    DWORD PTR [rdi],edi
   1400191ef:	ins    DWORD PTR es:[rdi],dx
   1400191f0:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400191f7:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400191fe:	rex push rcx
   140019200:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019202:	ins    DWORD PTR es:[rdi],dx
   140019203:	(bad)  
   140019204:	outs   dx,DWORD PTR ds:[rsi]
   140019205:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019207:	js     0x140019249
   140019209:	rex push rbp
   14001920b:	rex.RB
   14001920c:	rex.X
   14001920d:	rex.B (bad) 
   14001920f:	push   r14
   140019211:	push   rcx
   140019212:	push   rbx
   140019213:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001921a:	add    BYTE PTR [rax],al
   14001921c:	ins    BYTE PTR es:[rdi],dx
   14001921d:	adc    DWORD PTR [rdi],edi
   14001921f:	ins    DWORD PTR es:[rdi],dx
   140019220:	outs   dx,DWORD PTR ds:[rsi]
   140019221:	jne    0x140019296
   140019223:	gs push rax
   140019225:	jb     0x14001928c
   140019227:	jae    0x14001929c
   140019229:	rex.RB jbe 0x140019291
   14001922c:	outs   dx,BYTE PTR ds:[rsi]
   14001922d:	je     0x14001926f
   14001922f:	push   rcx
   140019230:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019232:	ins    DWORD PTR es:[rdi],dx
   140019233:	(bad)  
   140019234:	outs   dx,DWORD PTR ds:[rsi]
   140019235:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019237:	js     0x140019279
   140019239:	rex
   14001923a:	rex.WRB
   14001923b:	rex.RB
   14001923c:	rex.B
   14001923d:	pop    r8
   14001923f:	push   rax
   140019240:	rex.RB
   140019241:	push   r14
   140019243:	push   rcx
   140019244:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140019246:	jne    0x1400192bb
   140019248:	gs rex.RB jbe 0x1400192b1
   14001924c:	outs   dx,BYTE PTR ds:[rsi]
   14001924d:	je     0x14001928f
   14001924f:	rex
   140019250:	rex pop rdx
   140019252:	add    BYTE PTR [rax],al
   140019254:	mov    edx,DWORD PTR [rcx]
   140019256:	(bad)  
   140019257:	ins    DWORD PTR es:[rdi],dx
   140019258:	outs   dx,DWORD PTR ds:[rsi]
   140019259:	jne    0x1400192ce
   14001925b:	gs push rdx
   14001925d:	gs ins BYTE PTR es:[rdi],dx
   14001925f:	gs (bad) 
   140019261:	jae    0x1400192c8
   140019263:	rex.RB jbe 0x1400192cb
   140019266:	outs   dx,BYTE PTR ds:[rsi]
   140019267:	je     0x1400192a9
   140019269:	push   rcx
   14001926a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001926c:	ins    DWORD PTR es:[rdi],dx
   14001926d:	(bad)  
   14001926e:	outs   dx,DWORD PTR ds:[rsi]
   14001926f:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019271:	js     0x1400192b3
   140019273:	rex
   140019274:	rex.WRB
   140019275:	rex.RB
   140019276:	rex.B
   140019277:	pop    r8
   140019279:	push   rax
   14001927a:	rex.RB
   14001927b:	push   r14
   14001927d:	push   rcx
   14001927e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140019280:	jne    0x1400192f5
   140019282:	gs rex.RB jbe 0x1400192eb
   140019286:	outs   dx,BYTE PTR ds:[rsi]
   140019287:	je     0x1400192c9
   140019289:	rex
   14001928a:	rex pop rdx
   14001928c:	add    BYTE PTR [rax],al
   14001928e:	sub    BYTE PTR [rcx],ah
   140019290:	(bad)  
   140019291:	ja     0x1400192fb
   140019293:	gs gs ins BYTE PTR es:[rdi],dx
   140019296:	rex.RB jbe 0x1400192fe
   140019299:	outs   dx,BYTE PTR ds:[rsi]
   14001929a:	je     0x1400192dc
   14001929c:	push   rcx
   14001929d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001929f:	ins    DWORD PTR es:[rdi],dx
   1400192a0:	(bad)  
   1400192a1:	outs   dx,DWORD PTR ds:[rsi]
   1400192a2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400192a4:	js     0x1400192e6
   1400192a6:	rex
   1400192a7:	rex.WRB
   1400192a8:	rex.RB
   1400192a9:	rex.B
   1400192aa:	pop    r8
   1400192ac:	push   rax
   1400192ad:	rex.RB
   1400192ae:	push   r14
   1400192b0:	push   rcx
   1400192b1:	push   rdi
   1400192b2:	push   0x456c6565
   1400192b7:	jbe    0x14001931e
   1400192b9:	outs   dx,BYTE PTR ds:[rsi]
   1400192ba:	je     0x1400192fc
   1400192bc:	rex
   1400192bd:	rex pop rdx
   1400192bf:	add    BYTE PTR [rbx+0xf],al
   1400192c2:	(bad)  
   1400192c3:	imul   esp,DWORD PTR [rbp+0x79],0x50
   1400192c7:	jb     0x14001932e
   1400192c9:	jae    0x14001933e
   1400192cb:	rex.RB jbe 0x140019333
   1400192ce:	outs   dx,BYTE PTR ds:[rsi]
   1400192cf:	je     0x140019311
   1400192d1:	push   rcx
   1400192d2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400192d4:	ins    DWORD PTR es:[rdi],dx
   1400192d5:	(bad)  
   1400192d6:	outs   dx,DWORD PTR ds:[rsi]
   1400192d7:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400192d9:	js     0x14001931b
   1400192db:	rex
   1400192dc:	rex.WRB
   1400192dd:	rex.RB
   1400192de:	rex.B
   1400192df:	pop    r8
   1400192e1:	push   rax
   1400192e2:	rex.RB
   1400192e3:	push   r14
   1400192e5:	push   rcx
   1400192e6:	rex.WXB
   1400192e7:	gs jns 0x14001932f
   1400192ea:	jbe    0x140019351
   1400192ec:	outs   dx,BYTE PTR ds:[rsi]
   1400192ed:	je     0x14001932f
   1400192ef:	rex
   1400192f0:	rex pop rdx
   1400192f2:	add    BYTE PTR [rax],al
   1400192f4:	pop    rbp
   1400192f5:	(bad)  
   1400192f7:	imul   esp,DWORD PTR [rbp+0x79],0x52
   1400192fb:	gs ins BYTE PTR es:[rdi],dx
   1400192fd:	gs (bad) 
   1400192ff:	jae    0x140019366
   140019301:	rex.RB jbe 0x140019369
   140019304:	outs   dx,BYTE PTR ds:[rsi]
   140019305:	je     0x140019347
   140019307:	push   rcx
   140019308:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001930a:	ins    DWORD PTR es:[rdi],dx
   14001930b:	(bad)  
   14001930c:	outs   dx,DWORD PTR ds:[rsi]
   14001930d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001930f:	js     0x140019351
   140019311:	rex
   140019312:	rex.WRB
   140019313:	rex.RB
   140019314:	rex.B
   140019315:	pop    r8
   140019317:	push   rax
   140019318:	rex.RB
   140019319:	push   r14
   14001931b:	push   rcx
   14001931c:	rex.WXB
   14001931d:	gs jns 0x140019365
   140019320:	jbe    0x140019387
   140019322:	outs   dx,BYTE PTR ds:[rsi]
   140019323:	je     0x140019365
   140019325:	rex
   140019326:	rex pop rdx
   140019328:	add    BYTE PTR [rax],al
   14001932a:	or     DWORD PTR [rbx],0x3f
   14001932d:	outs   dx,WORD PTR ds:[rsi]
   14001932f:	movsxd esi,DWORD PTR [rbp+0x73]
   140019332:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140019334:	rex.RB jbe 0x14001939c
   140019337:	outs   dx,BYTE PTR ds:[rsi]
   140019338:	je     0x14001937a
   14001933a:	push   rcx
   14001933b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001933d:	ins    DWORD PTR es:[rdi],dx
   14001933e:	(bad)  
   14001933f:	outs   dx,DWORD PTR ds:[rsi]
   140019340:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019342:	js     0x140019384
   140019344:	rex
   140019345:	rex.WRB
   140019346:	rex.RB
   140019347:	rex.B
   140019348:	pop    r8
   14001934a:	push   rax
   14001934b:	rex.RB
   14001934c:	push   r14
   14001934e:	push   rcx
   14001934f:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019351:	movsxd esi,DWORD PTR [rbp+0x73]
   140019354:	rex.RB jbe 0x1400193bc
   140019357:	outs   dx,BYTE PTR ds:[rsi]
   140019358:	je     0x14001939a
   14001935a:	rex
   14001935b:	rex pop rdx
   14001935d:	add    BYTE PTR [rdx+0x6f663f0b],ch
   140019363:	movsxd esi,DWORD PTR [rbp+0x73]
   140019366:	rex.WRXB jne 0x1400193dd
   140019369:	rex.RB jbe 0x1400193d1
   14001936c:	outs   dx,BYTE PTR ds:[rsi]
   14001936d:	je     0x1400193af
   14001936f:	push   rcx
   140019370:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019372:	ins    DWORD PTR es:[rdi],dx
   140019373:	(bad)  
   140019374:	outs   dx,DWORD PTR ds:[rsi]
   140019375:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019377:	js     0x1400193b9
   140019379:	rex
   14001937a:	rex.WRB
   14001937b:	rex.RB
   14001937c:	rex.B
   14001937d:	pop    r8
   14001937f:	push   rax
   140019380:	rex.RB
   140019381:	push   r14
   140019383:	push   rcx
   140019384:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019386:	movsxd esi,DWORD PTR [rbp+0x73]
   140019389:	rex.RB jbe 0x1400193f1
   14001938c:	outs   dx,BYTE PTR ds:[rsi]
   14001938d:	je     0x1400193cf
   14001938f:	rex
   140019390:	rex pop rdx
   140019392:	add    BYTE PTR [rax],al
   140019394:	push   rbx
   140019395:	adc    bh,BYTE PTR [rdi]
   140019397:	jo     0x1400193fa
   140019399:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400193a0:	je     0x1400193e2
   1400193a2:	push   rcx
   1400193a3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400193a5:	ins    DWORD PTR es:[rdi],dx
   1400193a6:	(bad)  
   1400193a7:	outs   dx,DWORD PTR ds:[rsi]
   1400193a8:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400193aa:	js     0x1400193ec
   1400193ac:	rex
   1400193ad:	rex.WRB
   1400193ae:	rex.RB
   1400193af:	rex.B
   1400193b0:	pop    r8
   1400193b2:	push   rax
   1400193b3:	rex.RB
   1400193b4:	push   r14
   1400193b6:	push   rcx
   1400193b7:	push   rax
   1400193b8:	(bad)  
   1400193b9:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400193c0:	je     0x140019402
   1400193c2:	rex
   1400193c3:	rex pop rdx
   1400193c5:	add    BYTE PTR [rax+0x65723f15],cl
   1400193cb:	jae    0x140019436
   1400193cd:	jp     0x140019434
   1400193cf:	rex.RB jbe 0x140019437
   1400193d2:	outs   dx,BYTE PTR ds:[rsi]
   1400193d3:	je     0x140019415
   1400193d5:	push   rcx
   1400193d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400193d8:	ins    DWORD PTR es:[rdi],dx
   1400193d9:	(bad)  
   1400193da:	outs   dx,DWORD PTR ds:[rsi]
   1400193db:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400193dd:	js     0x14001941f
   1400193df:	rex
   1400193e0:	rex.WRB
   1400193e1:	rex.RB
   1400193e2:	rex.B
   1400193e3:	pop    r8
   1400193e5:	push   rax
   1400193e6:	rex.RB
   1400193e7:	push   r14
   1400193e9:	push   rcx
   1400193ea:	push   rdx
   1400193eb:	gs jae 0x140019457
   1400193ee:	jp     0x140019455
   1400193f0:	rex.RB jbe 0x140019458
   1400193f3:	outs   dx,BYTE PTR ds:[rsi]
   1400193f4:	je     0x140019436
   1400193f6:	rex
   1400193f7:	rex pop rdx
   1400193f9:	add    BYTE PTR [rdi+rax*1+0x6e6f633f],al
   140019400:	je     0x140019467
   140019402:	js     0x140019478
   140019404:	rex.WRB
   140019405:	outs   dx,BYTE PTR gs:[rsi]
   140019407:	jne    0x14001944e
   140019409:	jbe    0x140019470
   14001940b:	outs   dx,BYTE PTR ds:[rsi]
   14001940c:	je     0x14001944e
   14001940e:	push   rcx
   14001940f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019411:	ins    DWORD PTR es:[rdi],dx
   140019412:	(bad)  
   140019413:	outs   dx,DWORD PTR ds:[rsi]
   140019414:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019416:	js     0x140019458
   140019418:	rex
   140019419:	rex.WRB
   14001941a:	rex.RB
   14001941b:	rex.B
   14001941c:	pop    r8
   14001941e:	push   rax
   14001941f:	rex.RB
   140019420:	push   r14
   140019422:	push   rcx
   140019423:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019425:	outs   dx,BYTE PTR ds:[rsi]
   140019426:	je     0x14001948d
   140019428:	js     0x14001949e
   14001942a:	rex.WRB
   14001942b:	outs   dx,BYTE PTR gs:[rsi]
   14001942d:	jne    0x140019474
   14001942f:	jbe    0x140019496
   140019431:	outs   dx,BYTE PTR ds:[rsi]
   140019432:	je     0x140019474
   140019434:	rex
   140019435:	rex pop rdx
   140019437:	add    BYTE PTR [rsp+rbx*1+0x3f],cl
   14001943b:	jae    0x1400194a5
   14001943d:	outs   dx,DWORD PTR ds:[rsi]
   14001943e:	ja     0x140019485
   140019440:	jbe    0x1400194a7
   140019442:	outs   dx,BYTE PTR ds:[rsi]
   140019443:	je     0x140019485
   140019445:	push   rcx
   140019446:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019448:	ins    DWORD PTR es:[rdi],dx
   140019449:	(bad)  
   14001944a:	outs   dx,DWORD PTR ds:[rsi]
   14001944b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001944d:	js     0x14001948f
   14001944f:	rex
   140019450:	rex.WRB
   140019451:	rex.RB
   140019452:	rex.B
   140019453:	pop    r8
   140019455:	push   rax
   140019456:	rex.RB
   140019457:	push   r14
   140019459:	push   rcx
   14001945a:	push   rbx
   14001945b:	push   0x7645776f
   140019460:	outs   dx,BYTE PTR gs:[rsi]
   140019462:	je     0x1400194a4
   140019464:	rex
   140019465:	rex pop rdx
   140019467:	add    BYTE PTR [rbp+0x69683f0c],bl
   14001946d:	fs gs rex.RB jbe 0x1400194d7
   140019472:	outs   dx,BYTE PTR ds:[rsi]
   140019473:	je     0x1400194b5
   140019475:	push   rcx
   140019476:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019478:	ins    DWORD PTR es:[rdi],dx
   140019479:	(bad)  
   14001947a:	outs   dx,DWORD PTR ds:[rsi]
   14001947b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001947d:	js     0x1400194bf
   14001947f:	rex
   140019480:	rex.WRB
   140019481:	rex.RB
   140019482:	rex.B
   140019483:	pop    r8
   140019485:	push   rax
   140019486:	rex.RB
   140019487:	push   r14
   140019489:	push   rcx
   14001948a:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   140019493:	rex
   140019494:	rex
   140019495:	rex pop rdx
   140019497:	add    BYTE PTR [rbx+0x6],dh
   14001949a:	(bad)  
   14001949b:	movsxd ebp,DWORD PTR [rax+0x61]
   14001949e:	outs   dx,BYTE PTR ds:[rsi]
   14001949f:	addr32 gs rex.RB jbe 0x140019509
   1400194a4:	outs   dx,BYTE PTR ds:[rsi]
   1400194a5:	je     0x1400194e7
   1400194a7:	push   rcx
   1400194a8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400194aa:	ins    DWORD PTR es:[rdi],dx
   1400194ab:	(bad)  
   1400194ac:	outs   dx,DWORD PTR ds:[rsi]
   1400194ad:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400194af:	js     0x1400194f1
   1400194b1:	rex
   1400194b2:	rex.WRB
   1400194b3:	rex.RB
   1400194b4:	rex.B
   1400194b5:	pop    r8
   1400194b7:	push   rax
   1400194b8:	rex.RB
   1400194b9:	push   r14
   1400194bb:	push   rcx
   1400194bc:	rex.RB jbe 0x140019524
   1400194bf:	outs   dx,BYTE PTR ds:[rsi]
   1400194c0:	je     0x140019502
   1400194c2:	rex
   1400194c3:	rex pop rdx
   1400194c5:	add    BYTE PTR [rax+0xd],dh
   1400194c8:	(bad)  
   1400194c9:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   1400194d0:	je     0x14001953a
   1400194d2:	outs   dx,DWORD PTR ds:[rsi]
   1400194d3:	fs rex.RB jbe 0x14001953c
   1400194d7:	outs   dx,BYTE PTR ds:[rsi]
   1400194d8:	je     0x14001951a
   1400194da:	push   rcx
   1400194db:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400194dd:	ins    DWORD PTR es:[rdi],dx
   1400194de:	(bad)  
   1400194df:	outs   dx,DWORD PTR ds:[rsi]
   1400194e0:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400194e2:	js     0x140019524
   1400194e4:	rex
   1400194e5:	rex.WRB
   1400194e6:	rex.RB
   1400194e7:	rex.B
   1400194e8:	pop    r8
   1400194ea:	push   rax
   1400194eb:	rex.RB
   1400194ec:	push   r14
   1400194ee:	push   rcx
   1400194ef:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400194f1:	jo     0x140019568
   1400194f3:	je     0x140019542
   1400194f5:	gs je  0x140019560
   1400194f8:	outs   dx,DWORD PTR ds:[rsi]
   1400194f9:	fs rex.RB jbe 0x140019562
   1400194fd:	outs   dx,BYTE PTR ds:[rsi]
   1400194fe:	je     0x140019540
   140019500:	rex
   140019501:	rex pop rdx
   140019503:	add    BYTE PTR [rsi+0xd],bh
   140019506:	(bad)  
   140019507:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   14001950e:	je     0x140019578
   140019510:	outs   dx,DWORD PTR ds:[rsi]
   140019511:	fs push rcx
   140019513:	jne    0x14001957a
   140019515:	jb     0x140019590
   140019517:	rex push rcx
   140019519:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001951b:	ins    DWORD PTR es:[rdi],dx
   14001951c:	(bad)  
   14001951d:	outs   dx,DWORD PTR ds:[rsi]
   14001951e:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019520:	js     0x140019562
   140019522:	rex push rbp
   140019524:	rex.RB
   140019525:	rex.X
   140019526:	rex.B (bad) 
   140019528:	push   r14
   14001952a:	push   rcx
   14001952b:	push   rsi
   14001952c:	(bad)  
   14001952d:	jb     0x140019598
   14001952f:	(bad)  
   140019530:	outs   dx,BYTE PTR ds:[rsi]
   140019531:	je     0x140019573
   140019533:	rex push rdi
   140019535:	xor    al,0x49
   140019537:	outs   dx,BYTE PTR ds:[rsi]
   140019538:	jo     0x1400195af
   14001953a:	je     0x140019589
   14001953c:	gs je  0x1400195a7
   14001953f:	outs   dx,DWORD PTR ds:[rsi]
   140019540:	fs push rcx
   140019542:	jne    0x1400195a9
   140019544:	jb     0x1400195bf
   140019546:	rex push rcx
   140019548:	je     0x14001958a
   14001954a:	rex
   14001954b:	rex pop rdx
   14001954d:	add    BYTE PTR [rbp+0x1c],ch
   140019550:	(bad)  
   140019551:	jae    0x1400195bb
   140019553:	outs   dx,DWORD PTR ds:[rsi]
   140019554:	ja     0x1400195a6
   140019556:	outs   dx,DWORD PTR ds:[rsi]
   140019557:	jo     0x1400195ce
   140019559:	jo     0x14001959b
   14001955b:	push   rcx
   14001955c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001955e:	ins    DWORD PTR es:[rdi],dx
   14001955f:	(bad)  
   140019560:	outs   dx,DWORD PTR ds:[rsi]
   140019561:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019563:	js     0x1400195a5
   140019565:	rex push rbp
   140019567:	rex.RB
   140019568:	rex.B
   140019569:	pop    r8
   14001956b:	pop    rax
   14001956c:	pop    rdx
   14001956d:	add    BYTE PTR [rdi+0x69683f0c],ah
   140019573:	fs gs push rax
   140019576:	outs   dx,DWORD PTR ds:[rsi]
   140019577:	jo     0x1400195ee
   140019579:	jo     0x1400195bb
   14001957b:	push   rcx
   14001957c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001957e:	ins    DWORD PTR es:[rdi],dx
   14001957f:	(bad)  
   140019580:	outs   dx,DWORD PTR ds:[rsi]
   140019581:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019583:	js     0x1400195c5
   140019585:	rex push rbp
   140019587:	rex.RB
   140019588:	rex.B
   140019589:	pop    r8
   14001958b:	pop    rax
   14001958c:	pop    rdx
   14001958d:	add    BYTE PTR [rdi+0x656d3f10],al
   140019593:	je     0x1400195f6
   140019595:	rex.WRXB (bad) 
   140019597:	push   0x65
   140019599:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001959d:	rex.RXB jb 0x14001960f
   1400195a0:	jne    0x140019612
   1400195a2:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400195a4:	js     0x1400195e6
   1400195a6:	rex push rbp
   1400195a8:	rex.RB
   1400195a9:	rex.X
   1400195aa:	push   r8
   1400195ac:	rex.RB
   1400195ad:	rex.X push rbp
   1400195af:	push   rcx
   1400195b0:	rex.WRB
   1400195b1:	gs je  0x140019615
   1400195b4:	rex.WRXB (bad) 
   1400195b6:	push   0x65
   1400195b8:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400195bc:	pop    rax
   1400195bd:	pop    rdx
   1400195be:	add    BYTE PTR [rax],al
   1400195c0:	cli    
   1400195c1:	adc    edi,DWORD PTR [rdi]
   1400195c3:	jno    0x140019639
   1400195c5:	pop    rdi
   1400195c6:	ins    DWORD PTR es:[rdi],dx
   1400195c7:	gs je  0x14001962b
   1400195ca:	movsxd esp,DWORD PTR [rcx+0x73]
   1400195cd:	je     0x14001960f
   1400195cf:	push   rcx
   1400195d0:	rex.RXB jb 0x140019642
   1400195d3:	jne    0x140019645
   1400195d5:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400195d7:	js     0x140019619
   1400195d9:	rex push rbp
   1400195db:	rex.RB
   1400195dc:	rex.B
   1400195dd:	push   r8
   1400195df:	rex.RB
   1400195e0:	pop    r8
   1400195e2:	push   rax
   1400195e3:	rex.RB
   1400195e4:	rex.X
   1400195e5:	rex.R
   1400195e6:	rex pop rdx
   1400195e8:	add    BYTE PTR [rax],al
   1400195ea:	jo     0x1400195ff
   1400195ec:	(bad)  
   1400195ed:	jno    0x140019663
   1400195ef:	pop    rdi
   1400195f0:	ins    DWORD PTR es:[rdi],dx
   1400195f1:	gs je  0x140019655
   1400195f4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400195f7:	ins    BYTE PTR es:[rdi],dx
   1400195f8:	rex push rcx
   1400195fa:	rex.RXB jb 0x14001966c
   1400195fd:	jne    0x14001966f
   1400195ff:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019601:	js     0x140019643
   140019603:	rex push rbp
   140019605:	rex.RB
   140019606:	rex.B
   140019607:	rex.B
   140019608:	rex.W push rdi
   14001960a:	xor    al,0x43
   14001960c:	(bad)  
   14001960d:	ins    BYTE PTR es:[rdi],dx
   14001960e:	ins    BYTE PTR es:[rdi],dx
   14001960f:	rex push rcx
   140019611:	rex.WRB
   140019612:	gs je  0x140019676
   140019615:	rex.WRXB (bad) 
   140019617:	push   0x65
   140019619:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001961d:	rex.W push rax
   14001961f:	rex.RB
   140019620:	push   r8
   140019622:	rex.RB
   140019623:	pop    r8
   140019625:	rex pop rdx
   140019627:	add    cl,dl
   140019629:	or     bh,BYTE PTR [rdi]
   14001962b:	gs jbe 0x140019693
   14001962e:	outs   dx,BYTE PTR ds:[rsi]
   14001962f:	je     0x140019671
   140019631:	push   rcx
   140019632:	rex.RXB jb 0x1400196a4
   140019635:	jne    0x1400196a7
   140019637:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019639:	js     0x14001967b
   14001963b:	rex
   14001963c:	rex.WRB
   14001963d:	rex.RB
   14001963e:	rex.B
   14001963f:	pop    r15
   140019641:	rex.WRX push rax
   140019643:	rex.RB
   140019644:	push   r14
   140019646:	push   rcx
   140019647:	rex.RB jbe 0x1400196af
   14001964a:	outs   dx,BYTE PTR ds:[rsi]
   14001964b:	je     0x14001968d
   14001964d:	rex
   14001964e:	rex pop rdx
   140019650:	add    BYTE PTR [rax],al
   140019652:	test   eax,0x68633f06
   140019657:	imul   ebp,DWORD PTR [rsp+riz*2+0x45],0x746e6576
   14001965f:	rex push rcx
   140019661:	rex.RXB jb 0x1400196d3
   140019664:	jne    0x1400196d6
   140019666:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019668:	js     0x1400196aa
   14001966a:	rex
   14001966b:	rex.WRB
   14001966c:	rex.RB
   14001966d:	rex.B
   14001966e:	pop    r8
   140019670:	push   rax
   140019671:	rex.RB
   140019672:	push   r14
   140019674:	push   rcx
   140019675:	rex.XB push 0x45646c69
   14001967b:	jbe    0x1400196e2
   14001967d:	outs   dx,BYTE PTR ds:[rsi]
   14001967e:	je     0x1400196c0
   140019680:	rex
   140019681:	rex pop rdx
   140019683:	add    BYTE PTR [rbx],cl
   140019685:	adc    DWORD PTR [rdi],edi
   140019687:	ins    DWORD PTR es:[rdi],dx
   140019688:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001968f:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140019696:	rex push rcx
   140019698:	rex.RXB jb 0x14001970a
   14001969b:	jne    0x14001970d
   14001969d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001969f:	js     0x1400196e1
   1400196a1:	rex push rbp
   1400196a3:	rex.RB
   1400196a4:	rex.X
   1400196a5:	rex.B (bad) 
   1400196a7:	push   r14
   1400196a9:	push   rcx
   1400196aa:	push   rbx
   1400196ab:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400196b2:	add    BYTE PTR [rax],al
   1400196b4:	je     0x1400196c7
   1400196b6:	(bad)  
   1400196b7:	ins    DWORD PTR es:[rdi],dx
   1400196b8:	outs   dx,DWORD PTR ds:[rsi]
   1400196b9:	jne    0x14001972e
   1400196bb:	gs push rax
   1400196bd:	jb     0x140019724
   1400196bf:	jae    0x140019734
   1400196c1:	rex.RB jbe 0x140019729
   1400196c4:	outs   dx,BYTE PTR ds:[rsi]
   1400196c5:	je     0x140019707
   1400196c7:	push   rcx
   1400196c8:	rex.RXB jb 0x14001973a
   1400196cb:	jne    0x14001973d
   1400196cd:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400196cf:	js     0x140019711
   1400196d1:	rex
   1400196d2:	rex.WRB
   1400196d3:	rex.RB
   1400196d4:	rex.B
   1400196d5:	pop    r8
   1400196d7:	push   rax
   1400196d8:	rex.RB
   1400196d9:	push   r14
   1400196db:	push   rcx
   1400196dc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400196de:	jne    0x140019753
   1400196e0:	gs rex.RB jbe 0x140019749
   1400196e4:	outs   dx,BYTE PTR ds:[rsi]
   1400196e5:	je     0x140019727
   1400196e7:	rex
   1400196e8:	rex pop rdx
   1400196ea:	add    BYTE PTR [rax],al
   1400196ec:	xchg   edx,eax
   1400196ed:	adc    DWORD PTR [rdi],edi
   1400196ef:	ins    DWORD PTR es:[rdi],dx
   1400196f0:	outs   dx,DWORD PTR ds:[rsi]
   1400196f1:	jne    0x140019766
   1400196f3:	gs push rdx
   1400196f5:	gs ins BYTE PTR es:[rdi],dx
   1400196f7:	gs (bad) 
   1400196f9:	jae    0x140019760
   1400196fb:	rex.RB jbe 0x140019763
   1400196fe:	outs   dx,BYTE PTR ds:[rsi]
   1400196ff:	je     0x140019741
   140019701:	push   rcx
   140019702:	rex.RXB jb 0x140019774
   140019705:	jne    0x140019777
   140019707:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019709:	js     0x14001974b
   14001970b:	rex
   14001970c:	rex.WRB
   14001970d:	rex.RB
   14001970e:	rex.B
   14001970f:	pop    r8
   140019711:	push   rax
   140019712:	rex.RB
   140019713:	push   r14
   140019715:	push   rcx
   140019716:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140019718:	jne    0x14001978d
   14001971a:	gs rex.RB jbe 0x140019783
   14001971e:	outs   dx,BYTE PTR ds:[rsi]
   14001971f:	je     0x140019761
   140019721:	rex
   140019722:	rex pop rdx
   140019724:	add    BYTE PTR [rax],al
   140019726:	push   rdx
   140019727:	adc    DWORD PTR [rdi],edi
   140019729:	ins    DWORD PTR es:[rdi],dx
   14001972a:	outs   dx,DWORD PTR ds:[rsi]
   14001972b:	jne    0x1400197a0
   14001972d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140019730:	jbe    0x140019797
   140019732:	rex.RB jbe 0x14001979a
   140019735:	outs   dx,BYTE PTR ds:[rsi]
   140019736:	je     0x140019778
   140019738:	push   rcx
   140019739:	rex.RXB jb 0x1400197ab
   14001973c:	jne    0x1400197ae
   14001973e:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019740:	js     0x140019782
   140019742:	rex
   140019743:	rex.WRB
   140019744:	rex.RB
   140019745:	rex.B
   140019746:	pop    r8
   140019748:	push   rax
   140019749:	rex.RB
   14001974a:	push   r14
   14001974c:	push   rcx
   14001974d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001974f:	jne    0x1400197c4
   140019751:	gs rex.RB jbe 0x1400197ba
   140019755:	outs   dx,BYTE PTR ds:[rsi]
   140019756:	je     0x140019798
   140019758:	rex
   140019759:	rex pop rdx
   14001975b:	add    BYTE PTR [rbx+0x6f663f0b],cl
   140019761:	movsxd esi,DWORD PTR [rbp+0x73]
   140019764:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140019766:	rex.RB jbe 0x1400197ce
   140019769:	outs   dx,BYTE PTR ds:[rsi]
   14001976a:	je     0x1400197ac
   14001976c:	push   rcx
   14001976d:	rex.RXB jb 0x1400197df
   140019770:	jne    0x1400197e2
   140019772:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019774:	js     0x1400197b6
   140019776:	rex
   140019777:	rex.WRB
   140019778:	rex.RB
   140019779:	rex.B
   14001977a:	pop    r8
   14001977c:	push   rax
   14001977d:	rex.RB
   14001977e:	push   r14
   140019780:	push   rcx
   140019781:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019783:	movsxd esi,DWORD PTR [rbp+0x73]
   140019786:	rex.RB jbe 0x1400197ee
   140019789:	outs   dx,BYTE PTR ds:[rsi]
   14001978a:	je     0x1400197cc
   14001978c:	rex
   14001978d:	rex pop rdx
   14001978f:	add    BYTE PTR [rbx+0x12],bl
   140019792:	(bad)  
   140019793:	jo     0x1400197f6
   140019795:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001979c:	je     0x1400197de
   14001979e:	push   rcx
   14001979f:	rex.RXB jb 0x140019811
   1400197a2:	jne    0x140019814
   1400197a4:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400197a6:	js     0x1400197e8
   1400197a8:	rex
   1400197a9:	rex.WRB
   1400197aa:	rex.RB
   1400197ab:	rex.B
   1400197ac:	pop    r8
   1400197ae:	push   rax
   1400197af:	rex.RB
   1400197b0:	push   r14
   1400197b2:	push   rcx
   1400197b3:	push   rax
   1400197b4:	(bad)  
   1400197b5:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400197bc:	je     0x1400197fe
   1400197be:	rex
   1400197bf:	rex pop rdx
   1400197c1:	add    BYTE PTR [rdi+0x65723f15],cl
   1400197c7:	jae    0x140019832
   1400197c9:	jp     0x140019830
   1400197cb:	rex.RB jbe 0x140019833
   1400197ce:	outs   dx,BYTE PTR ds:[rsi]
   1400197cf:	je     0x140019811
   1400197d1:	push   rcx
   1400197d2:	rex.RXB jb 0x140019844
   1400197d5:	jne    0x140019847
   1400197d7:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400197d9:	js     0x14001981b
   1400197db:	rex
   1400197dc:	rex.WRB
   1400197dd:	rex.RB
   1400197de:	rex.B
   1400197df:	pop    r8
   1400197e1:	push   rax
   1400197e2:	rex.RB
   1400197e3:	push   r14
   1400197e5:	push   rcx
   1400197e6:	push   rdx
   1400197e7:	gs jae 0x140019853
   1400197ea:	jp     0x140019851
   1400197ec:	rex.RB jbe 0x140019854
   1400197ef:	outs   dx,BYTE PTR ds:[rsi]
   1400197f0:	je     0x140019832
   1400197f2:	rex
   1400197f3:	rex pop rdx
   1400197f5:	add    BYTE PTR [rbx+0x6],bh
   1400197f8:	(bad)  
   1400197f9:	movsxd ebp,DWORD PTR [rax+0x61]
   1400197fc:	outs   dx,BYTE PTR ds:[rsi]
   1400197fd:	addr32 gs rex.RB jbe 0x140019867
   140019802:	outs   dx,BYTE PTR ds:[rsi]
   140019803:	je     0x140019845
   140019805:	push   rcx
   140019806:	rex.RXB jb 0x140019878
   140019809:	jne    0x14001987b
   14001980b:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001980d:	js     0x14001984f
   14001980f:	rex
   140019810:	rex.WRB
   140019811:	rex.RB
   140019812:	rex.B
   140019813:	pop    r8
   140019815:	push   rax
   140019816:	rex.RB
   140019817:	push   r14
   140019819:	push   rcx
   14001981a:	rex.RB jbe 0x140019882
   14001981d:	outs   dx,BYTE PTR ds:[rsi]
   14001981e:	je     0x140019860
   140019820:	rex
   140019821:	rex pop rdx
   140019823:	add    BYTE PTR [rax+0x656d3f10],ch
   140019829:	je     0x14001988c
   14001982b:	rex.WRXB (bad) 
   14001982d:	push   0x65
   14001982f:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019833:	push   rax
   140019834:	jne    0x1400198a9
   140019836:	push   0x74747542
   14001983b:	outs   dx,DWORD PTR ds:[rsi]
   14001983c:	outs   dx,BYTE PTR ds:[rsi]
   14001983d:	rex
   14001983e:	rex push rbp
   140019840:	rex.RB
   140019841:	rex.X
   140019842:	push   r8
   140019844:	rex.RB
   140019845:	rex.X push rbp
   140019847:	push   rcx
   140019848:	rex.WRB
   140019849:	gs je  0x1400198ad
   14001984c:	rex.WRXB (bad) 
   14001984e:	push   0x65
   140019850:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019854:	pop    rax
   140019855:	pop    rdx
   140019856:	add    BYTE PTR [rax],al
   140019858:	sbb    edx,DWORD PTR [rdi+rdi*1]
   14001985b:	jno    0x1400198d1
   14001985d:	pop    rdi
   14001985e:	ins    DWORD PTR es:[rdi],dx
   14001985f:	gs je  0x1400198c3
   140019862:	movsxd esp,DWORD PTR [rcx+0x73]
   140019865:	je     0x1400198a7
   140019867:	push   rcx
   140019868:	push   rax
   140019869:	jne    0x1400198de
   14001986b:	push   0x74747542
   140019870:	outs   dx,DWORD PTR ds:[rsi]
   140019871:	outs   dx,BYTE PTR ds:[rsi]
   140019872:	rex
   140019873:	rex push rbp
   140019875:	rex.RB
   140019876:	rex.B
   140019877:	push   r8
   140019879:	rex.RB
   14001987a:	pop    r8
   14001987c:	push   rax
   14001987d:	rex.RB
   14001987e:	rex.X
   14001987f:	rex.R
   140019880:	rex pop rdx
   140019882:	add    BYTE PTR [rax],al
   140019884:	xchg   ecx,eax
   140019885:	adc    edi,DWORD PTR [rdi]
   140019887:	jno    0x1400198fd
   140019889:	pop    rdi
   14001988a:	ins    DWORD PTR es:[rdi],dx
   14001988b:	gs je  0x1400198ef
   14001988e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140019891:	ins    BYTE PTR es:[rdi],dx
   140019892:	rex push rcx
   140019894:	push   rax
   140019895:	jne    0x14001990a
   140019897:	push   0x74747542
   14001989c:	outs   dx,DWORD PTR ds:[rsi]
   14001989d:	outs   dx,BYTE PTR ds:[rsi]
   14001989e:	rex
   14001989f:	rex push rbp
   1400198a1:	rex.RB
   1400198a2:	rex.B
   1400198a3:	rex.B
   1400198a4:	rex.W push rdi
   1400198a6:	xor    al,0x43
   1400198a8:	(bad)  
   1400198a9:	ins    BYTE PTR es:[rdi],dx
   1400198aa:	ins    BYTE PTR es:[rdi],dx
   1400198ab:	rex push rcx
   1400198ad:	rex.WRB
   1400198ae:	gs je  0x140019912
   1400198b1:	rex.WRXB (bad) 
   1400198b3:	push   0x65
   1400198b5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400198b9:	rex.W push rax
   1400198bb:	rex.RB
   1400198bc:	push   r8
   1400198be:	rex.RB
   1400198bf:	pop    r8
   1400198c1:	rex pop rdx
   1400198c3:	add    bl,ah
   1400198c5:	or     bh,BYTE PTR [rdi]
   1400198c7:	gs jbe 0x14001992f
   1400198ca:	outs   dx,BYTE PTR ds:[rsi]
   1400198cb:	je     0x14001990d
   1400198cd:	push   rcx
   1400198ce:	push   rax
   1400198cf:	jne    0x140019944
   1400198d1:	push   0x74747542
   1400198d6:	outs   dx,DWORD PTR ds:[rsi]
   1400198d7:	outs   dx,BYTE PTR ds:[rsi]
   1400198d8:	rex
   1400198d9:	rex
   1400198da:	rex.WRB
   1400198db:	rex.RB
   1400198dc:	rex.B
   1400198dd:	pop    r15
   1400198df:	rex.WRX push rax
   1400198e1:	rex.RB
   1400198e2:	push   r14
   1400198e4:	push   rcx
   1400198e5:	rex.RB jbe 0x14001994d
   1400198e8:	outs   dx,BYTE PTR ds:[rsi]
   1400198e9:	je     0x14001992b
   1400198eb:	rex
   1400198ec:	rex pop rdx
   1400198ee:	add    BYTE PTR [rax],al
   1400198f0:	mov    bl,0x1c
   1400198f2:	(bad)  
   1400198f3:	jae    0x14001995e
   1400198f5:	jp     0x14001995c
   1400198f7:	imul   rbp,QWORD PTR [rsi+0x74],0x75505140
   1400198ff:	jae    0x140019969
   140019901:	rex.X jne 0x140019978
   140019904:	je     0x140019975
   140019906:	outs   dx,BYTE PTR ds:[rsi]
   140019907:	rex
   140019908:	rex push rbp
   14001990a:	rex.RB
   14001990b:	rex.X
   14001990c:	rex.B (bad) 
   14001990e:	push   r14
   140019910:	push   rcx
   140019911:	push   rbx
   140019912:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140019919:	add    BYTE PTR [rbx],dl
   14001991b:	adc    DWORD PTR [rdi],edi
   14001991d:	ins    DWORD PTR es:[rdi],dx
   14001991e:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140019925:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001992c:	rex push rcx
   14001992e:	push   rax
   14001992f:	jne    0x1400199a4
   140019931:	push   0x74747542
   140019936:	outs   dx,DWORD PTR ds:[rsi]
   140019937:	outs   dx,BYTE PTR ds:[rsi]
   140019938:	rex
   140019939:	rex push rbp
   14001993b:	rex.RB
   14001993c:	rex.X
   14001993d:	rex.B (bad) 
   14001993f:	push   r14
   140019941:	push   rcx
   140019942:	push   rbx
   140019943:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001994a:	add    BYTE PTR [rax],al
   14001994c:	rex.RXB adc DWORD PTR [r15],r15d
   14001994f:	ins    DWORD PTR es:[rdi],dx
   140019950:	outs   dx,DWORD PTR ds:[rsi]
   140019951:	jne    0x1400199c6
   140019953:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140019956:	jbe    0x1400199bd
   140019958:	rex.RB jbe 0x1400199c0
   14001995b:	outs   dx,BYTE PTR ds:[rsi]
   14001995c:	je     0x14001999e
   14001995e:	push   rcx
   14001995f:	(bad)
   140019965:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140019969:	je     0x1400199df
   14001996b:	outs   dx,DWORD PTR ds:[rsi]
   14001996c:	outs   dx,BYTE PTR ds:[rsi]
   14001996d:	rex
   14001996e:	rex
   14001996f:	rex.WRB
   140019970:	rex.RB
   140019971:	rex.B
   140019972:	pop    r8
   140019974:	push   rax
   140019975:	rex.RB
   140019976:	push   r14
   140019978:	push   rcx
   140019979:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001997b:	jne    0x1400199f0
   14001997d:	gs rex.RB jbe 0x1400199e6
   140019981:	outs   dx,BYTE PTR ds:[rsi]
   140019982:	je     0x1400199c4
   140019984:	rex
   140019985:	rex pop rdx
   140019987:	add    BYTE PTR [rbx+0xf],dl
   14001998a:	(bad)  
   14001998b:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001998f:	jb     0x1400199f6
   140019991:	jae    0x140019a06
   140019993:	rex.RB jbe 0x1400199fb
   140019996:	outs   dx,BYTE PTR ds:[rsi]
   140019997:	je     0x1400199d9
   140019999:	push   rcx
   14001999a:	push   rax
   14001999b:	jne    0x140019a10
   14001999d:	push   0x74747542
   1400199a2:	outs   dx,DWORD PTR ds:[rsi]
   1400199a3:	outs   dx,BYTE PTR ds:[rsi]
   1400199a4:	rex
   1400199a5:	rex
   1400199a6:	rex.WRB
   1400199a7:	rex.RB
   1400199a8:	rex.B
   1400199a9:	pop    r8
   1400199ab:	push   rax
   1400199ac:	rex.RB
   1400199ad:	push   r14
   1400199af:	push   rcx
   1400199b0:	rex.WXB
   1400199b1:	gs jns 0x1400199f9
   1400199b4:	jbe    0x140019a1b
   1400199b6:	outs   dx,BYTE PTR ds:[rsi]
   1400199b7:	je     0x1400199f9
   1400199b9:	rex
   1400199ba:	rex pop rdx
   1400199bc:	add    BYTE PTR [rax],al
   1400199be:	xchg   ecx,eax
   1400199bf:	or     edi,DWORD PTR [rdi]
   1400199c1:	outs   dx,WORD PTR ds:[rsi]
   1400199c3:	movsxd esi,DWORD PTR [rbp+0x73]
   1400199c6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400199c8:	rex.RB jbe 0x140019a30
   1400199cb:	outs   dx,BYTE PTR ds:[rsi]
   1400199cc:	je     0x140019a0e
   1400199ce:	push   rcx
   1400199cf:	push   rax
   1400199d0:	jne    0x140019a45
   1400199d2:	push   0x74747542
   1400199d7:	outs   dx,DWORD PTR ds:[rsi]
   1400199d8:	outs   dx,BYTE PTR ds:[rsi]
   1400199d9:	rex
   1400199da:	rex
   1400199db:	rex.WRB
   1400199dc:	rex.RB
   1400199dd:	rex.B
   1400199de:	pop    r8
   1400199e0:	push   rax
   1400199e1:	rex.RB
   1400199e2:	push   r14
   1400199e4:	push   rcx
   1400199e5:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400199e7:	movsxd esi,DWORD PTR [rbp+0x73]
   1400199ea:	rex.RB jbe 0x140019a52
   1400199ed:	outs   dx,BYTE PTR ds:[rsi]
   1400199ee:	je     0x140019a30
   1400199f0:	rex
   1400199f1:	rex pop rdx
   1400199f3:	add    BYTE PTR [rsi+0x6f663f0b],dh
   1400199f9:	movsxd esi,DWORD PTR [rbp+0x73]
   1400199fc:	rex.WRXB jne 0x140019a73
   1400199ff:	rex.RB jbe 0x140019a67
   140019a02:	outs   dx,BYTE PTR ds:[rsi]
   140019a03:	je     0x140019a45
   140019a05:	push   rcx
   140019a06:	push   rax
   140019a07:	jne    0x140019a7c
   140019a09:	push   0x74747542
   140019a0e:	outs   dx,DWORD PTR ds:[rsi]
   140019a0f:	outs   dx,BYTE PTR ds:[rsi]
   140019a10:	rex
   140019a11:	rex
   140019a12:	rex.WRB
   140019a13:	rex.RB
   140019a14:	rex.B
   140019a15:	pop    r8
   140019a17:	push   rax
   140019a18:	rex.RB
   140019a19:	push   r14
   140019a1b:	push   rcx
   140019a1c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019a1e:	movsxd esi,DWORD PTR [rbp+0x73]
   140019a21:	rex.RB jbe 0x140019a89
   140019a24:	outs   dx,BYTE PTR ds:[rsi]
   140019a25:	je     0x140019a67
   140019a27:	rex
   140019a28:	rex pop rdx
   140019a2a:	add    BYTE PTR [rax],al
   140019a2c:	push   0x61703f12
   140019a31:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140019a38:	je     0x140019a7a
   140019a3a:	push   rcx
   140019a3b:	push   rax
   140019a3c:	jne    0x140019ab1
   140019a3e:	push   0x74747542
   140019a43:	outs   dx,DWORD PTR ds:[rsi]
   140019a44:	outs   dx,BYTE PTR ds:[rsi]
   140019a45:	rex
   140019a46:	rex
   140019a47:	rex.WRB
   140019a48:	rex.RB
   140019a49:	rex.B
   140019a4a:	pop    r8
   140019a4c:	push   rax
   140019a4d:	rex.RB
   140019a4e:	push   r14
   140019a50:	push   rcx
   140019a51:	push   rax
   140019a52:	(bad)  
   140019a53:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140019a5a:	je     0x140019a9c
   140019a5c:	rex
   140019a5d:	rex pop rdx
   140019a5f:	add    BYTE PTR [rdx+0x69683f0c],bh
   140019a65:	je     0x140019aa9
   140019a67:	jne    0x140019add
   140019a69:	je     0x140019ada
   140019a6b:	outs   dx,BYTE PTR ds:[rsi]
   140019a6c:	rex push rcx
   140019a6e:	(bad)
   140019a74:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140019a78:	je     0x140019aee
   140019a7a:	outs   dx,DWORD PTR ds:[rsi]
   140019a7b:	outs   dx,BYTE PTR ds:[rsi]
   140019a7c:	rex
   140019a7d:	rex
   140019a7e:	rex.WRB
   140019a7f:	rex.RB
   140019a80:	rex.X
   140019a81:	pop    r15
   140019a83:	rex.WRX
   140019a84:	rex.B
   140019a85:	rex.RB
   140019a86:	rex.X push rsi
   140019a88:	push   rcx
   140019a89:	push   rax
   140019a8a:	outs   dx,DWORD PTR ds:[rsi]
   140019a8b:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140019a92:	add    BYTE PTR [rax],al
   140019a94:	cdq    
   140019a95:	(bad)  
   140019a96:	(bad)  
   140019a97:	movsxd ebp,DWORD PTR [rax+0x65]
   140019a9a:	movsxd ebp,DWORD PTR [rbx+0x53]
   140019a9d:	je     0x140019b00
   140019a9f:	je     0x140019b06
   140019aa1:	push   rbx
   140019aa2:	gs je  0x140019ae5
   140019aa5:	push   rcx
   140019aa6:	(bad)
   140019aac:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140019ab0:	je     0x140019b26
   140019ab2:	outs   dx,DWORD PTR ds:[rsi]
   140019ab3:	outs   dx,BYTE PTR ds:[rsi]
   140019ab4:	rex
   140019ab5:	rex
   140019ab6:	rex.WRB
   140019ab7:	rex.RB
   140019ab8:	rex.B
   140019ab9:	pop    r8
   140019abb:	pop    rax
   140019abc:	pop    rdx
   140019abd:	add    ah,dl
   140019abf:	adc    DWORD PTR [rdi],edi
   140019ac1:	outs   dx,BYTE PTR ds:[rsi]
   140019ac2:	gs js  0x140019b39
   140019ac5:	rex.XB push 0x536b6365
   140019acb:	je     0x140019b2e
   140019acd:	je     0x140019b34
   140019acf:	rex push rcx
   140019ad1:	(bad)
   140019ad7:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140019adb:	je     0x140019b51
   140019add:	outs   dx,DWORD PTR ds:[rsi]
   140019ade:	outs   dx,BYTE PTR ds:[rsi]
   140019adf:	rex
   140019ae0:	rex
   140019ae1:	rex.WRB
   140019ae2:	rex.RB
   140019ae3:	rex.B
   140019ae4:	pop    r8
   140019ae6:	pop    rax
   140019ae7:	pop    rdx
   140019ae8:	add    BYTE PTR [rax],al
   140019aea:	xor    eax,0x313f3f02
   140019aef:	push   rcx
   140019af0:	push   rbx
   140019af1:	jo     0x140019b5c
   140019af3:	outs   dx,BYTE PTR ds:[rsi]
   140019af4:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019af6:	js     0x140019b38
   140019af8:	rex push rbp
   140019afa:	rex.RB
   140019afb:	rex.B
   140019afc:	rex.B
   140019afd:	rex pop rax
   140019aff:	pop    rdx
   140019b00:	add    BYTE PTR [rax],al
   140019b02:	add    bh,BYTE PTR es:[rdi]
   140019b05:	(bad)  
   140019b06:	xor    DWORD PTR [rcx+0x50],edx
   140019b09:	ins    BYTE PTR es:[rdi],dx
   140019b0a:	(bad)  
   140019b0b:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   140019b12:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140019b1b:	rex pop rax
   140019b1d:	pop    rdx
   140019b1e:	add    BYTE PTR [rax],al
   140019b20:	mov    bh,0x1
   140019b22:	(bad)  
   140019b23:	(bad)  
   140019b24:	xor    DWORD PTR [rcx+0x43],edx
   140019b27:	outs   dx,DWORD PTR ds:[rsi]
   140019b28:	ins    DWORD PTR es:[rdi],dx
   140019b29:	(bad)  
   140019b2a:	outs   dx,DWORD PTR ds:[rsi]
   140019b2b:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019b2d:	js     0x140019b6f
   140019b2f:	rex push rbp
   140019b31:	rex.RB
   140019b32:	rex.B
   140019b33:	rex.B
   140019b34:	rex pop rax
   140019b36:	pop    rdx
   140019b37:	add    BYTE PTR [rdx+rax*1],al
   140019b3a:	(bad)  
   140019b3b:	(bad)  
   140019b3c:	xor    DWORD PTR [rcx+0x47],edx
   140019b3f:	jb     0x140019bb0
   140019b41:	jne    0x140019bb3
   140019b43:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019b45:	js     0x140019b87
   140019b47:	rex push rbp
   140019b49:	rex.RB
   140019b4a:	rex.B
   140019b4b:	rex.B
   140019b4c:	rex pop rax
   140019b4e:	pop    rdx
   140019b4f:	add    BYTE PTR [rdx],ch
   140019b51:	add    bh,BYTE PTR [rdi]
   140019b53:	(bad)  
   140019b54:	xor    DWORD PTR [rcx+0x50],edx
   140019b57:	jne    0x140019bcc
   140019b59:	push   0x74747542
   140019b5e:	outs   dx,DWORD PTR ds:[rsi]
   140019b5f:	outs   dx,BYTE PTR ds:[rsi]
   140019b60:	rex
   140019b61:	rex push rbp
   140019b63:	rex.RB
   140019b64:	rex.B
   140019b65:	rex.B
   140019b66:	rex pop rax
   140019b68:	pop    rdx
   140019b69:	add    BYTE PTR [rbp+0x1e],dl
   140019b6c:	(bad)  
   140019b6d:	je     0x140019bd4
   140019b6f:	js     0x140019be5
   140019b71:	rex push rcx
   140019b73:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140019b7b:	rex
   140019b7c:	rex push rcx
   140019b7e:	rex.RB
   140019b7f:	rex.X
   140019b80:	rex.B (bad) 
   140019b82:	push   r14
   140019b84:	push   rcx
   140019b85:	push   rbx
   140019b86:	je     0x140019bfa
   140019b88:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140019b8f:	add    dh,al
   140019b91:	add    BYTE PTR [rdi],bh
   140019b93:	(bad)  
   140019b94:	xor    BYTE PTR [rcx+0x4c],dl
   140019b97:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140019b9e:	rex
   140019b9f:	rex push rcx
   140019ba1:	rex.RB
   140019ba2:	rex.B
   140019ba3:	rex.B
   140019ba4:	rex push rax
   140019ba6:	rex.RB
   140019ba7:	push   r14
   140019ba9:	push   rcx
   140019baa:	push   rdi
   140019bab:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019bb3:	pop    rdx
   140019bb4:	add    BYTE PTR [rax],al
   140019bb6:	(bad)  
   140019bb7:	sbb    edi,DWORD PTR [rdi]
   140019bb9:	jae    0x140019c20
   140019bbb:	je     0x140019c14
   140019bbd:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x46514074
   140019bc5:	outs   dx,DWORD PTR ds:[rsi]
   140019bc6:	jb     0x140019c35
   140019bc8:	rex.WR (bad) 
   140019bca:	jns    0x140019c3b
   140019bcc:	jne    0x140019c42
   140019bce:	rex
   140019bcf:	rex push rcx
   140019bd1:	rex.RB
   140019bd2:	rex.B
   140019bd3:	pop    r8
   140019bd5:	rex.W push rdi
   140019bd7:	xor    al,0x49
   140019bd9:	je     0x140019c40
   140019bdb:	ins    DWORD PTR es:[rdi],dx
   140019bdc:	push   rdx
   140019bdd:	outs   dx,DWORD PTR ds:[rsi]
   140019bde:	ins    BYTE PTR es:[rdi],dx
   140019bdf:	rex xor DWORD PTR gs:[rax+0x50],eax
   140019be4:	rex.RB
   140019be5:	push   r14
   140019be7:	push   rcx
   140019be8:	push   rdi
   140019be9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019bf1:	pop    rdx
   140019bf2:	add    BYTE PTR [rax],al
   140019bf4:	(bad)  
   140019bf5:	sbb    DWORD PTR [rdi],edi
   140019bf7:	jae    0x140019c5e
   140019bf9:	je     0x140019c47
   140019bfb:	(bad)  
   140019bfc:	(bad)  
   140019bfd:	gs ins BYTE PTR es:[rdi],dx
   140019bff:	rex.B ins BYTE PTR es:[rdi],dx
   140019c01:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   140019c08:	rex push rcx
   140019c0a:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019c0c:	jb     0x140019c7b
   140019c0e:	rex.WR (bad) 
   140019c10:	jns    0x140019c81
   140019c12:	jne    0x140019c88
   140019c14:	rex
   140019c15:	rex push rcx
   140019c17:	rex.RB
   140019c18:	rex.B
   140019c19:	pop    r8
   140019c1b:	push   rsi
   140019c1c:	(bad)  
   140019c1d:	and    al,0x51
   140019c1f:	rex.RX ins BYTE PTR es:[rdi],dx
   140019c21:	(bad)  
   140019c22:	addr32 jae 0x140019c65
   140019c25:	push   rdi
   140019c26:	xor    al,0x41
   140019c28:	ins    BYTE PTR es:[rdi],dx
   140019c29:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   140019c30:	rex.RX ins BYTE PTR es:[rdi],dx
   140019c32:	(bad)  
   140019c33:	addr32 rex push rcx
   140019c36:	je     0x140019c78
   140019c38:	rex
   140019c39:	rex
   140019c3a:	rex
   140019c3b:	rex pop rdx
   140019c3d:	add    BYTE PTR [rbp+0x0],dl
   140019c40:	(bad)  
   140019c41:	(bad)  
   140019c42:	xor    BYTE PTR [rcx+0x46],dl
   140019c45:	outs   dx,DWORD PTR ds:[rsi]
   140019c46:	jb     0x140019cb5
   140019c48:	rex.WR (bad) 
   140019c4a:	jns    0x140019cbb
   140019c4c:	jne    0x140019cc2
   140019c4e:	rex
   140019c4f:	rex push rcx
   140019c51:	rex.RB
   140019c52:	rex.B
   140019c53:	rex.B
   140019c54:	rex push rax
   140019c56:	rex.RB
   140019c57:	push   r14
   140019c59:	push   rcx
   140019c5a:	push   rdi
   140019c5b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019c63:	pop    rdx
   140019c64:	add    BYTE PTR [rax],al
   140019c66:	add    bl,BYTE PTR [rbx]
   140019c68:	(bad)  
   140019c69:	jae    0x140019cd0
   140019c6b:	je     0x140019cc0
   140019c6d:	je     0x140019cd0
   140019c6f:	outs   dx,BYTE PTR ds:[rsi]
   140019c70:	fs (bad) 
   140019c72:	jb     0x140019cd8
   140019c74:	rex.X jne 0x140019ceb
   140019c77:	je     0x140019ce8
   140019c79:	outs   dx,BYTE PTR ds:[rsi]
   140019c7a:	jae    0x140019cbc
   140019c7c:	push   rcx
   140019c7d:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019c85:	je     0x140019cfb
   140019c87:	outs   dx,DWORD PTR ds:[rsi]
   140019c88:	outs   dx,BYTE PTR ds:[rsi]
   140019c89:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019c8b:	js     0x140019ccd
   140019c8d:	rex push rcx
   140019c8f:	rex.RB
   140019c90:	rex.B
   140019c91:	pop    r8
   140019c93:	push   rsi
   140019c94:	(bad)  
   140019c95:	and    al,0x51
   140019c97:	rex.RX ins BYTE PTR es:[rdi],dx
   140019c99:	(bad)  
   140019c9a:	addr32 jae 0x140019cdd
   140019c9d:	push   rdi
   140019c9e:	xor    al,0x53
   140019ca0:	je     0x140019d03
   140019ca2:	outs   dx,BYTE PTR ds:[rsi]
   140019ca3:	fs (bad) 
   140019ca5:	jb     0x140019d0b
   140019ca7:	rex.X jne 0x140019d1e
   140019caa:	je     0x140019d1b
   140019cac:	outs   dx,BYTE PTR ds:[rsi]
   140019cad:	rex push rcx
   140019caf:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019cb7:	je     0x140019d2d
   140019cb9:	outs   dx,DWORD PTR ds:[rsi]
   140019cba:	outs   dx,BYTE PTR ds:[rsi]
   140019cbb:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019cbd:	js     0x140019cff
   140019cbf:	rex
   140019cc0:	rex
   140019cc1:	rex
   140019cc2:	rex pop rdx
   140019cc4:	add    BYTE PTR [rax],al
   140019cc6:	lock sbb DWORD PTR [rdi],edi
   140019cc9:	jae    0x140019d30
   140019ccb:	je     0x140019d1c
   140019ccd:	jb     0x140019d38
   140019ccf:	outs   dx,BYTE PTR gs:[rsi]
   140019cd1:	je     0x140019d34
   140019cd3:	je     0x140019d3e
   140019cd5:	outs   dx,DWORD PTR ds:[rsi]
   140019cd6:	outs   dx,BYTE PTR ds:[rsi]
   140019cd7:	rex push rcx
   140019cd9:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019ce1:	je     0x140019d57
   140019ce3:	outs   dx,DWORD PTR ds:[rsi]
   140019ce4:	outs   dx,BYTE PTR ds:[rsi]
   140019ce5:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019ce7:	js     0x140019d29
   140019ce9:	rex push rcx
   140019ceb:	rex.RB
   140019cec:	rex.B
   140019ced:	pop    r8
   140019cef:	push   rdi
   140019cf0:	xor    al,0x4f
   140019cf2:	jb     0x140019d5d
   140019cf4:	outs   dx,BYTE PTR gs:[rsi]
   140019cf6:	je     0x140019d59
   140019cf8:	je     0x140019d63
   140019cfa:	outs   dx,DWORD PTR ds:[rsi]
   140019cfb:	outs   dx,BYTE PTR ds:[rsi]
   140019cfc:	rex push rcx
   140019cfe:	je     0x140019d40
   140019d00:	rex
   140019d01:	rex pop rdx
   140019d03:	add    BYTE PTR [rdi+0x65733f18],bl
   140019d09:	je     0x140019d52
   140019d0b:	outs   dx,DWORD PTR gs:[rsi]
   140019d0d:	ins    DWORD PTR es:[rdi],dx
   140019d0e:	gs je  0x140019d83
   140019d11:	jns    0x140019d53
   140019d13:	push   rcx
   140019d14:	push   rdi
   140019d15:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140019d1d:	rex.RB
   140019d1e:	rex.B
   140019d1f:	pop    r8
   140019d21:	rex.B
   140019d22:	rex.RB
   140019d23:	rex.X push rsi
   140019d25:	push   rcx
   140019d26:	push   rdx
   140019d27:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140019d2c:	rex pop rdx
   140019d2e:	add    BYTE PTR [rax],al
   140019d30:	cmp    al,BYTE PTR [rax]
   140019d32:	(bad)  
   140019d33:	(bad)  
   140019d34:	xor    BYTE PTR [rcx+0x44],dl
   140019d37:	imul   esp,DWORD PTR [rcx+0x6c],0x7542676f
   140019d3e:	je     0x140019db4
   140019d40:	outs   dx,DWORD PTR ds:[rsi]
   140019d41:	outs   dx,BYTE PTR ds:[rsi]
   140019d42:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019d44:	js     0x140019d86
   140019d46:	rex push rcx
   140019d48:	rex.RB
   140019d49:	rex.B
   140019d4a:	rex.B
   140019d4b:	rex push rax
   140019d4d:	rex.RB
   140019d4e:	push   r14
   140019d50:	push   rcx
   140019d51:	push   rdi
   140019d52:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140019d5a:	pop    rdx
   140019d5b:	add    BYTE PTR [rsi+0x10],ah
   140019d5e:	(bad)  
   140019d5f:	ins    DWORD PTR es:[rdi],dx
   140019d60:	gs je  0x140019dc4
   140019d63:	rex.WRXB (bad) 
   140019d65:	push   0x65
   140019d67:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019d6b:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019d73:	je     0x140019de9
   140019d75:	outs   dx,DWORD PTR ds:[rsi]
   140019d76:	outs   dx,BYTE PTR ds:[rsi]
   140019d77:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019d79:	js     0x140019dbb
   140019d7b:	rex push rbp
   140019d7d:	rex.RB
   140019d7e:	rex.X
   140019d7f:	push   r8
   140019d81:	rex.RB
   140019d82:	rex.X push rbp
   140019d84:	push   rcx
   140019d85:	rex.WRB
   140019d86:	gs je  0x140019dea
   140019d89:	rex.WRXB (bad) 
   140019d8b:	push   0x65
   140019d8d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019d91:	pop    rax
   140019d92:	pop    rdx
   140019d93:	add    cl,bl
   140019d95:	adc    edi,DWORD PTR [rdi]
   140019d97:	jno    0x140019e0d
   140019d99:	pop    rdi
   140019d9a:	ins    DWORD PTR es:[rdi],dx
   140019d9b:	gs je  0x140019dff
   140019d9e:	movsxd esp,DWORD PTR [rcx+0x73]
   140019da1:	je     0x140019de3
   140019da3:	push   rcx
   140019da4:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019dac:	je     0x140019e22
   140019dae:	outs   dx,DWORD PTR ds:[rsi]
   140019daf:	outs   dx,BYTE PTR ds:[rsi]
   140019db0:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019db2:	js     0x140019df4
   140019db4:	rex push rbp
   140019db6:	rex.RB
   140019db7:	rex.B
   140019db8:	push   r8
   140019dba:	rex.RB
   140019dbb:	pop    r8
   140019dbd:	push   rax
   140019dbe:	rex.RB
   140019dbf:	rex.X
   140019dc0:	rex.R
   140019dc1:	rex pop rdx
   140019dc3:	add    BYTE PTR [rdi+0x13],cl
   140019dc6:	(bad)  
   140019dc7:	jno    0x140019e3d
   140019dc9:	pop    rdi
   140019dca:	ins    DWORD PTR es:[rdi],dx
   140019dcb:	gs je  0x140019e2f
   140019dce:	movsxd esp,DWORD PTR [rcx+0x6c]
   140019dd1:	ins    BYTE PTR es:[rdi],dx
   140019dd2:	rex push rcx
   140019dd4:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019ddc:	je     0x140019e52
   140019dde:	outs   dx,DWORD PTR ds:[rsi]
   140019ddf:	outs   dx,BYTE PTR ds:[rsi]
   140019de0:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019de2:	js     0x140019e24
   140019de4:	rex push rbp
   140019de6:	rex.RB
   140019de7:	rex.B
   140019de8:	rex.B
   140019de9:	rex.W push rdi
   140019deb:	xor    al,0x43
   140019ded:	(bad)  
   140019dee:	ins    BYTE PTR es:[rdi],dx
   140019def:	ins    BYTE PTR es:[rdi],dx
   140019df0:	rex push rcx
   140019df2:	rex.WRB
   140019df3:	gs je  0x140019e57
   140019df6:	rex.WRXB (bad) 
   140019df8:	push   0x65
   140019dfa:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019dfe:	rex.W push rax
   140019e00:	rex.RB
   140019e01:	push   r8
   140019e03:	rex.RB
   140019e04:	pop    r8
   140019e06:	rex pop rdx
   140019e08:	add    BYTE PTR [rax],al
   140019e0a:	(bad)  
   140019e0b:	or     bh,BYTE PTR [rdi]
   140019e0d:	gs jbe 0x140019e75
   140019e10:	outs   dx,BYTE PTR ds:[rsi]
   140019e11:	je     0x140019e53
   140019e13:	push   rcx
   140019e14:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019e1c:	je     0x140019e92
   140019e1e:	outs   dx,DWORD PTR ds:[rsi]
   140019e1f:	outs   dx,BYTE PTR ds:[rsi]
   140019e20:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019e22:	js     0x140019e64
   140019e24:	rex
   140019e25:	rex.WRB
   140019e26:	rex.RB
   140019e27:	rex.B
   140019e28:	pop    r15
   140019e2a:	rex.WRX push rax
   140019e2c:	rex.RB
   140019e2d:	push   r14
   140019e2f:	push   rcx
   140019e30:	rex.RB jbe 0x140019e98
   140019e33:	outs   dx,BYTE PTR ds:[rsi]
   140019e34:	je     0x140019e76
   140019e36:	rex
   140019e37:	rex pop rdx
   140019e39:	add    BYTE PTR [rsi+rax*1+0x3f],dh
   140019e3d:	movsxd ebp,DWORD PTR [rax+0x61]
   140019e40:	outs   dx,BYTE PTR ds:[rsi]
   140019e41:	addr32 gs rex.RB jbe 0x140019eab
   140019e46:	outs   dx,BYTE PTR ds:[rsi]
   140019e47:	je     0x140019e89
   140019e49:	push   rcx
   140019e4a:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   140019e52:	je     0x140019ec8
   140019e54:	outs   dx,DWORD PTR ds:[rsi]
   140019e55:	outs   dx,BYTE PTR ds:[rsi]
   140019e56:	rex.X outs dx,DWORD PTR ds:[rsi]
   140019e58:	js     0x140019e9a
   140019e5a:	rex
   140019e5b:	rex.WRB
   140019e5c:	rex.RB
   140019e5d:	rex.B
   140019e5e:	pop    r8
   140019e60:	push   rax
   140019e61:	rex.RB
   140019e62:	push   r14
   140019e64:	push   rcx
   140019e65:	rex.RB jbe 0x140019ecd
   140019e68:	outs   dx,BYTE PTR ds:[rsi]
   140019e69:	je     0x140019eab
   140019e6b:	rex
   140019e6c:	rex pop rdx
   140019e6e:	add    BYTE PTR [rax],al
   140019e70:	jb     0x140019e82
   140019e72:	(bad)  
   140019e73:	ins    DWORD PTR es:[rdi],dx
   140019e74:	gs je  0x140019ed8
   140019e77:	rex.WRXB (bad) 
   140019e79:	push   0x65
   140019e7b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140019e7f:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019e81:	jb     0x140019ef0
   140019e83:	rex.WR (bad) 
   140019e85:	jns    0x140019ef6
   140019e87:	jne    0x140019efd
   140019e89:	rex
   140019e8a:	rex push rbp
   140019e8c:	rex.RB
   140019e8d:	rex.X
   140019e8e:	push   r8
   140019e90:	rex.RB
   140019e91:	rex.X push rbp
   140019e93:	push   rcx
   140019e94:	rex.WRB
   140019e95:	gs je  0x140019ef9
   140019e98:	rex.WRXB (bad) 
   140019e9a:	push   0x65
   140019e9c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019ea0:	pop    rax
   140019ea1:	pop    rdx
   140019ea2:	add    BYTE PTR [rax],al
   140019ea4:	in     eax,0x13
   140019ea6:	(bad)  
   140019ea7:	jno    0x140019f1d
   140019ea9:	pop    rdi
   140019eaa:	ins    DWORD PTR es:[rdi],dx
   140019eab:	gs je  0x140019f0f
   140019eae:	movsxd esp,DWORD PTR [rcx+0x73]
   140019eb1:	je     0x140019ef3
   140019eb3:	push   rcx
   140019eb4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019eb6:	jb     0x140019f25
   140019eb8:	rex.WR (bad) 
   140019eba:	jns    0x140019f2b
   140019ebc:	jne    0x140019f32
   140019ebe:	rex
   140019ebf:	rex push rbp
   140019ec1:	rex.RB
   140019ec2:	rex.B
   140019ec3:	push   r8
   140019ec5:	rex.RB
   140019ec6:	pop    r8
   140019ec8:	push   rax
   140019ec9:	rex.RB
   140019eca:	rex.X
   140019ecb:	rex.R
   140019ecc:	rex pop rdx
   140019ece:	add    BYTE PTR [rax],al
   140019ed0:	pop    rbx
   140019ed1:	adc    edi,DWORD PTR [rdi]
   140019ed3:	jno    0x140019f49
   140019ed5:	pop    rdi
   140019ed6:	ins    DWORD PTR es:[rdi],dx
   140019ed7:	gs je  0x140019f3b
   140019eda:	movsxd esp,DWORD PTR [rcx+0x6c]
   140019edd:	ins    BYTE PTR es:[rdi],dx
   140019ede:	rex push rcx
   140019ee0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019ee2:	jb     0x140019f51
   140019ee4:	rex.WR (bad) 
   140019ee6:	jns    0x140019f57
   140019ee8:	jne    0x140019f5e
   140019eea:	rex
   140019eeb:	rex push rbp
   140019eed:	rex.RB
   140019eee:	rex.B
   140019eef:	rex.B
   140019ef0:	rex.W push rdi
   140019ef2:	xor    al,0x43
   140019ef4:	(bad)  
   140019ef5:	ins    BYTE PTR es:[rdi],dx
   140019ef6:	ins    BYTE PTR es:[rdi],dx
   140019ef7:	rex push rcx
   140019ef9:	rex.WRB
   140019efa:	gs je  0x140019f5e
   140019efd:	rex.WRXB (bad) 
   140019eff:	push   0x65
   140019f01:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140019f05:	rex.W push rax
   140019f07:	rex.RB
   140019f08:	push   r8
   140019f0a:	rex.RB
   140019f0b:	pop    r8
   140019f0d:	rex pop rdx
   140019f0f:	add    BYTE PTR [rdi],ch
   140019f11:	add    eax,0x6464613f
   140019f16:	rex.WB je 0x140019f7e
   140019f19:	ins    DWORD PTR es:[rdi],dx
   140019f1a:	rex push rcx
   140019f1c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019f1e:	jb     0x140019f8d
   140019f20:	rex.WR (bad) 
   140019f22:	jns    0x140019f93
   140019f24:	jne    0x140019f9a
   140019f26:	rex
   140019f27:	rex push rbp
   140019f29:	rex.RB
   140019f2a:	rex.B
   140019f2b:	pop    r8
   140019f2d:	push   rax
   140019f2e:	rex.RB
   140019f2f:	push   r14
   140019f31:	push   rcx
   140019f32:	rex.WR (bad) 
   140019f34:	jns    0x140019fa5
   140019f36:	jne    0x140019fac
   140019f38:	rex.WB je 0x140019fa0
   140019f3b:	ins    DWORD PTR es:[rdi],dx
   140019f3c:	rex
   140019f3d:	rex
   140019f3e:	rex pop rdx
   140019f40:	add    BYTE PTR [rax],al
   140019f42:	(bad)  
   140019f43:	(bad)  
   140019f44:	(bad)  
   140019f45:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   140019f4d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019f4f:	jb     0x140019fbe
   140019f51:	rex.WR (bad) 
   140019f53:	jns    0x140019fc4
   140019f55:	jne    0x140019fcb
   140019f57:	rex
   140019f58:	rex push rbp
   140019f5a:	rex.RB
   140019f5b:	rex.X
   140019f5c:	push   r8
   140019f5e:	rex.RB
   140019f5f:	push   r14
   140019f61:	push   rcx
   140019f62:	rex.WR (bad) 
   140019f64:	jns    0x140019fd5
   140019f66:	jne    0x140019fdc
   140019f68:	rex.WB je 0x140019fd0
   140019f6b:	ins    DWORD PTR es:[rdi],dx
   140019f6c:	rex
   140019f6d:	rex
   140019f6e:	rex.W
   140019f6f:	rex pop rdx
   140019f71:	add    BYTE PTR [rdi],dh
   140019f73:	(bad)  
   140019f74:	(bad)  
   140019f75:	je     0x140019fd8
   140019f77:	imul   esp,DWORD PTR [rbp+0x41],0x74
   140019f7b:	rex push rcx
   140019f7d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019f7f:	jb     0x140019fee
   140019f81:	rex.WR (bad) 
   140019f83:	jns    0x140019ff4
   140019f85:	jne    0x140019ffb
   140019f87:	rex
   140019f88:	rex push rbp
   140019f8a:	rex.RB
   140019f8b:	rex.B
   140019f8c:	push   r8
   140019f8e:	rex.RB
   140019f8f:	push   r14
   140019f91:	push   rcx
   140019f92:	rex.WR (bad) 
   140019f94:	jns    0x14001a005
   140019f96:	jne    0x14001a00c
   140019f98:	rex.WB je 0x14001a000
   140019f9b:	ins    DWORD PTR es:[rdi],dx
   140019f9c:	rex
   140019f9d:	rex
   140019f9e:	rex.W
   140019f9f:	rex pop rdx
   140019fa1:	add    BYTE PTR [rdx+0x6f633f07],ch
   140019fa7:	jne    0x14001a017
   140019fa9:	je     0x140019feb
   140019fab:	push   rcx
   140019fac:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140019fae:	jb     0x14001a01d
   140019fb0:	rex.WR (bad) 
   140019fb2:	jns    0x14001a023
   140019fb4:	jne    0x14001a02a
   140019fb6:	rex
   140019fb7:	rex push rbp
   140019fb9:	rex.RB
   140019fba:	rex.X
   140019fbb:	rex.B
   140019fbc:	rex.W pop rax
   140019fbe:	pop    rdx
   140019fbf:	add    BYTE PTR [rbp+0x69733f1c],bl
   140019fc5:	jp     0x14001a02c
   140019fc7:	imul   rbp,QWORD PTR [rsi+0x74],0x6f465140
   140019fcf:	jb     0x14001a03e
   140019fd1:	rex.WR (bad) 
   140019fd3:	jns    0x14001a044
   140019fd5:	jne    0x14001a04b
   140019fd7:	rex
   140019fd8:	rex push rbp
   140019fda:	rex.RB
   140019fdb:	rex.X
   140019fdc:	rex.B (bad) 
   140019fde:	push   r14
   140019fe0:	push   rcx
   140019fe1:	push   rbx
   140019fe2:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140019fe9:	add    dl,bh
   140019feb:	adc    BYTE PTR [rdi],bh
   140019fed:	ins    DWORD PTR es:[rdi],dx
   140019fee:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140019ff5:	imul   edi,DWORD PTR [rdx+0x65],0x6f465140
   140019ffc:	jb     0x14001a06b
   140019ffe:	rex.WR (bad) 
   14001a000:	jns    0x14001a071
   14001a002:	jne    0x14001a078
   14001a004:	rex
   14001a005:	rex push rbp
   14001a007:	rex.RB
   14001a008:	rex.X
   14001a009:	rex.B (bad) 
   14001a00b:	push   r14
   14001a00d:	push   rcx
   14001a00e:	push   rbx
   14001a00f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a016:	add    BYTE PTR [rax],al
   14001a018:	xor    BYTE PTR [rax],dl
   14001a01a:	(bad)  
   14001a01b:	ins    DWORD PTR es:[rdi],dx
   14001a01c:	(bad)  
   14001a01d:	js     0x14001a088
   14001a01f:	ins    DWORD PTR es:[rdi],dx
   14001a020:	jne    0x14001a08f
   14001a022:	push   rbx
   14001a023:	imul   edi,DWORD PTR [rdx+0x65],0x614c5140
   14001a02a:	jns    0x14001a09b
   14001a02c:	jne    0x14001a0a2
   14001a02e:	rex
   14001a02f:	rex push rbp
   14001a031:	rex.RB
   14001a032:	rex.X
   14001a033:	rex.B (bad) 
   14001a035:	push   r14
   14001a037:	push   rcx
   14001a038:	push   rbx
   14001a039:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a040:	add    BYTE PTR [rax],al
   14001a042:	and    al,0xb
   14001a044:	(bad)  
   14001a045:	gs js  0x14001a0b8
   14001a048:	(bad)  
   14001a049:	outs   dx,BYTE PTR ds:[rsi]
   14001a04a:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   14001a052:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001a056:	outs   dx,BYTE PTR ds:[rsi]
   14001a057:	jae    0x14001a099
   14001a059:	push   rcx
   14001a05a:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a05c:	jb     0x14001a0cb
   14001a05e:	rex.WR (bad) 
   14001a060:	jns    0x14001a0d1
   14001a062:	jne    0x14001a0d8
   14001a064:	rex
   14001a065:	rex push rbp
   14001a067:	rex.RB
   14001a068:	rex.X
   14001a069:	rex.B (bad) 
   14001a06b:	push   r14
   14001a06d:	(bad)  
   14001a06e:	and    al,0x51
   14001a070:	rex.RX ins BYTE PTR es:[rdi],dx
   14001a072:	(bad)  
   14001a073:	addr32 jae 0x14001a0b6
   14001a076:	push   rdi
   14001a077:	xor    al,0x4f
   14001a079:	jb     0x14001a0e4
   14001a07b:	outs   dx,BYTE PTR gs:[rsi]
   14001a07d:	je     0x14001a0e0
   14001a07f:	je     0x14001a0ea
   14001a081:	outs   dx,DWORD PTR ds:[rsi]
   14001a082:	outs   dx,BYTE PTR ds:[rsi]
   14001a083:	rex push rcx
   14001a085:	je     0x14001a0c7
   14001a087:	rex
   14001a088:	rex
   14001a089:	rex pop rax
   14001a08b:	pop    rdx
   14001a08c:	add    BYTE PTR [rax],al
   14001a08e:	xchg   ecx,eax
   14001a08f:	sbb    BYTE PTR [rdi],bh
   14001a091:	jae    0x14001a0f8
   14001a093:	je     0x14001a0dc
   14001a095:	outs   dx,DWORD PTR gs:[rsi]
   14001a097:	ins    DWORD PTR es:[rdi],dx
   14001a098:	gs je  0x14001a10d
   14001a09b:	jns    0x14001a0dd
   14001a09d:	push   rcx
   14001a09e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a0a0:	jb     0x14001a10f
   14001a0a2:	rex.WR (bad) 
   14001a0a4:	jns    0x14001a115
   14001a0a6:	jne    0x14001a11c
   14001a0a8:	rex
   14001a0a9:	rex push rbp
   14001a0ab:	rex.RB
   14001a0ac:	rex.B
   14001a0ad:	pop    r8
   14001a0af:	rex.B
   14001a0b0:	rex.RB
   14001a0b1:	rex.X push rsi
   14001a0b3:	push   rcx
   14001a0b4:	push   rdx
   14001a0b5:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001a0ba:	rex pop rdx
   14001a0bc:	add    BYTE PTR [rax],al
   14001a0be:	(bad)  
   14001a0bf:	or     al,0x3f
   14001a0c1:	push   0x65487361
   14001a0c6:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14001a0cd:	push   rdi
   14001a0ce:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f465140
   14001a0d6:	jb     0x14001a145
   14001a0d8:	rex.WR (bad) 
   14001a0da:	jns    0x14001a14b
   14001a0dc:	jne    0x14001a152
   14001a0de:	rex
   14001a0df:	rex push rbp
   14001a0e1:	rex.RB
   14001a0e2:	rex.X
   14001a0e3:	pop    r15
   14001a0e5:	rex.WRX pop rax
   14001a0e7:	pop    rdx
   14001a0e8:	add    BYTE PTR [rax],al
   14001a0ea:	or     DWORD PTR [rdi+rdi*1],0x67696568
   14001a0f1:	push   0x726f4674
   14001a0f6:	push   rdi
   14001a0f7:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f465140
   14001a0ff:	jb     0x14001a16e
   14001a101:	rex.WR (bad) 
   14001a103:	jns    0x14001a174
   14001a105:	jne    0x14001a17b
   14001a107:	rex
   14001a108:	rex push rbp
   14001a10a:	rex.RB
   14001a10b:	rex.X
   14001a10c:	rex.B
   14001a10d:	rex.W
   14001a10e:	rex.W
   14001a10f:	rex pop rdx
   14001a111:	add    ah,ah
   14001a113:	or     eax,0x766e693f
   14001a118:	(bad)  
   14001a119:	ins    BYTE PTR es:[rdi],dx
   14001a11a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x46514065
   14001a122:	outs   dx,DWORD PTR ds:[rsi]
   14001a123:	jb     0x14001a192
   14001a125:	rex.WR (bad) 
   14001a127:	jns    0x14001a198
   14001a129:	jne    0x14001a19f
   14001a12b:	rex
   14001a12c:	rex push rbp
   14001a12e:	rex.RB
   14001a12f:	rex.B
   14001a130:	pop    r8
   14001a132:	pop    rax
   14001a133:	pop    rdx
   14001a134:	add    BYTE PTR [rax],al
   14001a136:	xchg   ecx,eax
   14001a137:	adc    BYTE PTR [rdi],bh
   14001a139:	ins    DWORD PTR es:[rdi],dx
   14001a13a:	gs je  0x14001a19e
   14001a13d:	rex.WRXB (bad) 
   14001a13f:	push   0x65
   14001a141:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a145:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a14d:	rex
   14001a14e:	rex push rbp
   14001a150:	rex.RB
   14001a151:	rex.X
   14001a152:	push   r8
   14001a154:	rex.RB
   14001a155:	rex.X push rbp
   14001a157:	push   rcx
   14001a158:	rex.WRB
   14001a159:	gs je  0x14001a1bd
   14001a15c:	rex.WRXB (bad) 
   14001a15e:	push   0x65
   14001a160:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a164:	pop    rax
   14001a165:	pop    rdx
   14001a166:	add    BYTE PTR [rax],al
   14001a168:	add    al,0x14
   14001a16a:	(bad)  
   14001a16b:	jno    0x14001a1e1
   14001a16d:	pop    rdi
   14001a16e:	ins    DWORD PTR es:[rdi],dx
   14001a16f:	gs je  0x14001a1d3
   14001a172:	movsxd esp,DWORD PTR [rcx+0x73]
   14001a175:	je     0x14001a1b7
   14001a177:	push   rcx
   14001a178:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a180:	rex
   14001a181:	rex push rbp
   14001a183:	rex.RB
   14001a184:	rex.B
   14001a185:	push   r8
   14001a187:	rex.RB
   14001a188:	pop    r8
   14001a18a:	push   rax
   14001a18b:	rex.RB
   14001a18c:	rex.X
   14001a18d:	rex.R
   14001a18e:	rex pop rdx
   14001a190:	add    BYTE PTR [rax],al
   14001a192:	jp     0x14001a1a7
   14001a194:	(bad)  
   14001a195:	jno    0x14001a20b
   14001a197:	pop    rdi
   14001a198:	ins    DWORD PTR es:[rdi],dx
   14001a199:	gs je  0x14001a1fd
   14001a19c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a19f:	ins    BYTE PTR es:[rdi],dx
   14001a1a0:	rex push rcx
   14001a1a2:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a1aa:	rex
   14001a1ab:	rex push rbp
   14001a1ad:	rex.RB
   14001a1ae:	rex.B
   14001a1af:	rex.B
   14001a1b0:	rex.W push rdi
   14001a1b2:	xor    al,0x43
   14001a1b4:	(bad)  
   14001a1b5:	ins    BYTE PTR es:[rdi],dx
   14001a1b6:	ins    BYTE PTR es:[rdi],dx
   14001a1b7:	rex push rcx
   14001a1b9:	rex.WRB
   14001a1ba:	gs je  0x14001a21e
   14001a1bd:	rex.WRXB (bad) 
   14001a1bf:	push   0x65
   14001a1c1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a1c5:	rex.W push rax
   14001a1c7:	rex.RB
   14001a1c8:	push   r8
   14001a1ca:	rex.RB
   14001a1cb:	pop    r8
   14001a1cd:	rex pop rdx
   14001a1cf:	add    dh,dl
   14001a1d1:	or     bh,BYTE PTR [rdi]
   14001a1d3:	gs jbe 0x14001a23b
   14001a1d6:	outs   dx,BYTE PTR ds:[rsi]
   14001a1d7:	je     0x14001a219
   14001a1d9:	push   rcx
   14001a1da:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a1e2:	rex
   14001a1e3:	rex push rbp
   14001a1e5:	rex.RB
   14001a1e6:	rex.B
   14001a1e7:	pop    r15
   14001a1e9:	rex.WRX push rax
   14001a1eb:	rex.RB
   14001a1ec:	push   r14
   14001a1ee:	push   rcx
   14001a1ef:	rex.RB jbe 0x14001a257
   14001a1f2:	outs   dx,BYTE PTR ds:[rsi]
   14001a1f3:	je     0x14001a235
   14001a1f5:	rex
   14001a1f6:	rex pop rdx
   14001a1f8:	add    BYTE PTR [rax],al
   14001a1fa:	stos   DWORD PTR es:[rdi],eax
   14001a1fb:	sbb    al,0x3f
   14001a1fd:	jae    0x14001a268
   14001a1ff:	jp     0x14001a266
   14001a201:	imul   rbp,QWORD PTR [rsi+0x74],0x694c5140
   14001a209:	outs   dx,BYTE PTR ds:[rsi]
   14001a20a:	gs rex.RB
   14001a20c:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   14001a215:	(bad)  
   14001a216:	push   r14
   14001a218:	push   rcx
   14001a219:	push   rbx
   14001a21a:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a221:	add    BYTE PTR [rsi],cl
   14001a223:	adc    DWORD PTR [rdi],edi
   14001a225:	ins    DWORD PTR es:[rdi],dx
   14001a226:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001a22d:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001a234:	rex push rcx
   14001a236:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a23e:	rex
   14001a23f:	rex push rbp
   14001a241:	rex.RB
   14001a242:	rex.X
   14001a243:	rex.B (bad) 
   14001a245:	push   r14
   14001a247:	push   rcx
   14001a248:	push   rbx
   14001a249:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001a250:	add    BYTE PTR [rax],al
   14001a252:	ja     0x14001a265
   14001a254:	(bad)  
   14001a255:	ins    DWORD PTR es:[rdi],dx
   14001a256:	outs   dx,DWORD PTR ds:[rsi]
   14001a257:	jne    0x14001a2cc
   14001a259:	gs push rax
   14001a25b:	jb     0x14001a2c2
   14001a25d:	jae    0x14001a2d2
   14001a25f:	rex.RB jbe 0x14001a2c7
   14001a262:	outs   dx,BYTE PTR ds:[rsi]
   14001a263:	je     0x14001a2a5
   14001a265:	push   rcx
   14001a266:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a26e:	rex
   14001a26f:	rex
   14001a270:	rex.WRB
   14001a271:	rex.RB
   14001a272:	rex.B
   14001a273:	pop    r8
   14001a275:	push   rax
   14001a276:	rex.RB
   14001a277:	push   r14
   14001a279:	push   rcx
   14001a27a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a27c:	jne    0x14001a2f1
   14001a27e:	gs rex.RB jbe 0x14001a2e7
   14001a282:	outs   dx,BYTE PTR ds:[rsi]
   14001a283:	je     0x14001a2c5
   14001a285:	rex
   14001a286:	rex pop rdx
   14001a288:	add    BYTE PTR [rax],al
   14001a28a:	xchg   ebp,eax
   14001a28b:	adc    DWORD PTR [rdi],edi
   14001a28d:	ins    DWORD PTR es:[rdi],dx
   14001a28e:	outs   dx,DWORD PTR ds:[rsi]
   14001a28f:	jne    0x14001a304
   14001a291:	gs push rdx
   14001a293:	gs ins BYTE PTR es:[rdi],dx
   14001a295:	gs (bad) 
   14001a297:	jae    0x14001a2fe
   14001a299:	rex.RB jbe 0x14001a301
   14001a29c:	outs   dx,BYTE PTR ds:[rsi]
   14001a29d:	je     0x14001a2df
   14001a29f:	push   rcx
   14001a2a0:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a2a8:	rex
   14001a2a9:	rex
   14001a2aa:	rex.WRB
   14001a2ab:	rex.RB
   14001a2ac:	rex.B
   14001a2ad:	pop    r8
   14001a2af:	push   rax
   14001a2b0:	rex.RB
   14001a2b1:	push   r14
   14001a2b3:	push   rcx
   14001a2b4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a2b6:	jne    0x14001a32b
   14001a2b8:	gs rex.RB jbe 0x14001a321
   14001a2bc:	outs   dx,BYTE PTR ds:[rsi]
   14001a2bd:	je     0x14001a2ff
   14001a2bf:	rex
   14001a2c0:	rex pop rdx
   14001a2c2:	add    BYTE PTR [rax],al
   14001a2c4:	(bad)  
   14001a2c5:	adc    DWORD PTR [rdi],edi
   14001a2c7:	ins    DWORD PTR es:[rdi],dx
   14001a2c8:	outs   dx,DWORD PTR ds:[rsi]
   14001a2c9:	jne    0x14001a33e
   14001a2cb:	rex.R outs dx,DWORD PTR gs:[rsi]
   14001a2ce:	jne    0x14001a332
   14001a2d0:	ins    BYTE PTR es:[rdi],dx
   14001a2d1:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14001a2d4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   14001a2db:	je     0x14001a31d
   14001a2dd:	push   rcx
   14001a2de:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a2e6:	rex
   14001a2e7:	rex
   14001a2e8:	rex.WRB
   14001a2e9:	rex.RB
   14001a2ea:	rex.B
   14001a2eb:	pop    r8
   14001a2ed:	push   rax
   14001a2ee:	rex.RB
   14001a2ef:	push   r14
   14001a2f1:	push   rcx
   14001a2f2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a2f4:	jne    0x14001a369
   14001a2f6:	gs rex.RB jbe 0x14001a35f
   14001a2fa:	outs   dx,BYTE PTR ds:[rsi]
   14001a2fb:	je     0x14001a33d
   14001a2fd:	rex
   14001a2fe:	rex pop rdx
   14001a300:	add    BYTE PTR [rax],al
   14001a302:	push   rbp
   14001a303:	adc    DWORD PTR [rdi],edi
   14001a305:	ins    DWORD PTR es:[rdi],dx
   14001a306:	outs   dx,DWORD PTR ds:[rsi]
   14001a307:	jne    0x14001a37c
   14001a309:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14001a30c:	jbe    0x14001a373
   14001a30e:	rex.RB jbe 0x14001a376
   14001a311:	outs   dx,BYTE PTR ds:[rsi]
   14001a312:	je     0x14001a354
   14001a314:	push   rcx
   14001a315:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a31d:	rex
   14001a31e:	rex
   14001a31f:	rex.WRB
   14001a320:	rex.RB
   14001a321:	rex.B
   14001a322:	pop    r8
   14001a324:	push   rax
   14001a325:	rex.RB
   14001a326:	push   r14
   14001a328:	push   rcx
   14001a329:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001a32b:	jne    0x14001a3a0
   14001a32d:	gs rex.RB jbe 0x14001a396
   14001a331:	outs   dx,BYTE PTR ds:[rsi]
   14001a332:	je     0x14001a374
   14001a334:	rex
   14001a335:	rex pop rdx
   14001a337:	add    BYTE PTR [rbp+0xf],cl
   14001a33a:	(bad)  
   14001a33b:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001a33f:	jb     0x14001a3a6
   14001a341:	jae    0x14001a3b6
   14001a343:	rex.RB jbe 0x14001a3ab
   14001a346:	outs   dx,BYTE PTR ds:[rsi]
   14001a347:	je     0x14001a389
   14001a349:	push   rcx
   14001a34a:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a352:	rex
   14001a353:	rex
   14001a354:	rex.WRB
   14001a355:	rex.RB
   14001a356:	rex.B
   14001a357:	pop    r8
   14001a359:	push   rax
   14001a35a:	rex.RB
   14001a35b:	push   r14
   14001a35d:	push   rcx
   14001a35e:	rex.WXB
   14001a35f:	gs jns 0x14001a3a7
   14001a362:	jbe    0x14001a3c9
   14001a364:	outs   dx,BYTE PTR ds:[rsi]
   14001a365:	je     0x14001a3a7
   14001a367:	rex
   14001a368:	rex pop rdx
   14001a36a:	add    BYTE PTR [rax],al
   14001a36c:	lea    ecx,[rbx]
   14001a36e:	(bad)  
   14001a36f:	outs   dx,WORD PTR ds:[rsi]
   14001a371:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a374:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a376:	rex.RB jbe 0x14001a3de
   14001a379:	outs   dx,BYTE PTR ds:[rsi]
   14001a37a:	je     0x14001a3bc
   14001a37c:	push   rcx
   14001a37d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a385:	rex
   14001a386:	rex
   14001a387:	rex.WRB
   14001a388:	rex.RB
   14001a389:	rex.B
   14001a38a:	pop    r8
   14001a38c:	push   rax
   14001a38d:	rex.RB
   14001a38e:	push   r14
   14001a390:	push   rcx
   14001a391:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a393:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a396:	rex.RB jbe 0x14001a3fe
   14001a399:	outs   dx,BYTE PTR ds:[rsi]
   14001a39a:	je     0x14001a3dc
   14001a39c:	rex
   14001a39d:	rex pop rdx
   14001a39f:	add    BYTE PTR [rdx+0x6f663f0b],dh
   14001a3a5:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a3a8:	rex.WRXB jne 0x14001a41f
   14001a3ab:	rex.RB jbe 0x14001a413
   14001a3ae:	outs   dx,BYTE PTR ds:[rsi]
   14001a3af:	je     0x14001a3f1
   14001a3b1:	push   rcx
   14001a3b2:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a3ba:	rex
   14001a3bb:	rex
   14001a3bc:	rex.WRB
   14001a3bd:	rex.RB
   14001a3be:	rex.B
   14001a3bf:	pop    r8
   14001a3c1:	push   rax
   14001a3c2:	rex.RB
   14001a3c3:	push   r14
   14001a3c5:	push   rcx
   14001a3c6:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001a3c8:	movsxd esi,DWORD PTR [rbp+0x73]
   14001a3cb:	rex.RB jbe 0x14001a433
   14001a3ce:	outs   dx,BYTE PTR ds:[rsi]
   14001a3cf:	je     0x14001a411
   14001a3d1:	rex
   14001a3d2:	rex pop rdx
   14001a3d4:	add    BYTE PTR [rax],al
   14001a3d6:	pop    rdi
   14001a3d7:	adc    bh,BYTE PTR [rdi]
   14001a3d9:	jo     0x14001a43c
   14001a3db:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001a3e2:	je     0x14001a424
   14001a3e4:	push   rcx
   14001a3e5:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a3ed:	rex
   14001a3ee:	rex
   14001a3ef:	rex.WRB
   14001a3f0:	rex.RB
   14001a3f1:	rex.B
   14001a3f2:	pop    r8
   14001a3f4:	push   rax
   14001a3f5:	rex.RB
   14001a3f6:	push   r14
   14001a3f8:	push   rcx
   14001a3f9:	push   rax
   14001a3fa:	(bad)  
   14001a3fb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14001a402:	je     0x14001a444
   14001a404:	rex
   14001a405:	rex pop rdx
   14001a407:	add    BYTE PTR [rdi+rax*1+0x6e6f633f],cl
   14001a40e:	je     0x14001a475
   14001a410:	js     0x14001a486
   14001a412:	rex.WRB
   14001a413:	outs   dx,BYTE PTR gs:[rsi]
   14001a415:	jne    0x14001a45c
   14001a417:	jbe    0x14001a47e
   14001a419:	outs   dx,BYTE PTR ds:[rsi]
   14001a41a:	je     0x14001a45c
   14001a41c:	push   rcx
   14001a41d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a425:	rex
   14001a426:	rex
   14001a427:	rex.WRB
   14001a428:	rex.RB
   14001a429:	rex.B
   14001a42a:	pop    r8
   14001a42c:	push   rax
   14001a42d:	rex.RB
   14001a42e:	push   r14
   14001a430:	push   rcx
   14001a431:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a433:	outs   dx,BYTE PTR ds:[rsi]
   14001a434:	je     0x14001a49b
   14001a436:	js     0x14001a4ac
   14001a438:	rex.WRB
   14001a439:	outs   dx,BYTE PTR gs:[rsi]
   14001a43b:	jne    0x14001a482
   14001a43d:	jbe    0x14001a4a4
   14001a43f:	outs   dx,BYTE PTR ds:[rsi]
   14001a440:	je     0x14001a482
   14001a442:	rex
   14001a443:	rex pop rdx
   14001a445:	add    BYTE PTR [rip+0x72643f0a],dl        # 0x1b265e355
   14001a44b:	(bad)  
   14001a44c:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001a44f:	je     0x14001a4b6
   14001a451:	jb     0x14001a498
   14001a453:	jbe    0x14001a4ba
   14001a455:	outs   dx,BYTE PTR ds:[rsi]
   14001a456:	je     0x14001a498
   14001a458:	push   rcx
   14001a459:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a461:	rex
   14001a462:	rex
   14001a463:	rex.WRB
   14001a464:	rex.RB
   14001a465:	rex.B
   14001a466:	pop    r8
   14001a468:	push   rax
   14001a469:	rex.RB
   14001a46a:	push   r14
   14001a46c:	push   rcx
   14001a46d:	rex.R jb 0x14001a4d1
   14001a470:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001a473:	je     0x14001a4da
   14001a475:	jb     0x14001a4bc
   14001a477:	jbe    0x14001a4de
   14001a479:	outs   dx,BYTE PTR ds:[rsi]
   14001a47a:	je     0x14001a4bc
   14001a47c:	rex
   14001a47d:	rex pop rdx
   14001a47f:	add    BYTE PTR [rip+0x72643f0a],ch        # 0x1b265e38f
   14001a485:	(bad)  
   14001a486:	rex.WRB outs dx,DWORD PTR ds:[esi]
   14001a489:	jbe    0x14001a4f0
   14001a48b:	rex.RB jbe 0x14001a4f3
   14001a48e:	outs   dx,BYTE PTR ds:[rsi]
   14001a48f:	je     0x14001a4d1
   14001a491:	push   rcx
   14001a492:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a49a:	rex
   14001a49b:	rex
   14001a49c:	rex.WRB
   14001a49d:	rex.RB
   14001a49e:	rex.B
   14001a49f:	pop    r8
   14001a4a1:	push   rax
   14001a4a2:	rex.RB
   14001a4a3:	push   r14
   14001a4a5:	push   rcx
   14001a4a6:	rex.R jb 0x14001a50a
   14001a4a9:	rex.WRB outs dx,DWORD PTR ds:[esi]
   14001a4ac:	jbe    0x14001a513
   14001a4ae:	rex.RB jbe 0x14001a516
   14001a4b1:	outs   dx,BYTE PTR ds:[rsi]
   14001a4b2:	je     0x14001a4f4
   14001a4b4:	rex
   14001a4b5:	rex pop rdx
   14001a4b7:	add    BYTE PTR [rax],ah
   14001a4b9:	or     bh,BYTE PTR [rdi]
   14001a4bb:	fs jb  0x14001a51f
   14001a4be:	addr32 rex.WR
   14001a4c0:	gs (bad) 
   14001a4c2:	jbe    0x14001a529
   14001a4c4:	rex.RB jbe 0x14001a52c
   14001a4c7:	outs   dx,BYTE PTR ds:[rsi]
   14001a4c8:	je     0x14001a50a
   14001a4ca:	push   rcx
   14001a4cb:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a4d3:	rex
   14001a4d4:	rex
   14001a4d5:	rex.WRB
   14001a4d6:	rex.RB
   14001a4d7:	rex.B
   14001a4d8:	pop    r8
   14001a4da:	push   rax
   14001a4db:	rex.RB
   14001a4dc:	push   r14
   14001a4de:	push   rcx
   14001a4df:	rex.R jb 0x14001a543
   14001a4e2:	addr32 rex.WR
   14001a4e4:	gs (bad) 
   14001a4e6:	jbe    0x14001a54d
   14001a4e8:	rex.RB jbe 0x14001a550
   14001a4eb:	outs   dx,BYTE PTR ds:[rsi]
   14001a4ec:	je     0x14001a52e
   14001a4ee:	rex
   14001a4ef:	rex pop rdx
   14001a4f1:	add    BYTE PTR [rsi+0xa],ah
   14001a4f4:	(bad)  
   14001a4f5:	fs jb  0x14001a567
   14001a4f8:	jo     0x14001a53f
   14001a4fa:	jbe    0x14001a561
   14001a4fc:	outs   dx,BYTE PTR ds:[rsi]
   14001a4fd:	je     0x14001a53f
   14001a4ff:	push   rcx
   14001a500:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a508:	rex
   14001a509:	rex
   14001a50a:	rex.WRB
   14001a50b:	rex.RB
   14001a50c:	rex.B
   14001a50d:	pop    r8
   14001a50f:	push   rax
   14001a510:	rex.RB
   14001a511:	push   r14
   14001a513:	push   rcx
   14001a514:	rex.R jb 0x14001a586
   14001a517:	jo     0x14001a55e
   14001a519:	jbe    0x14001a580
   14001a51b:	outs   dx,BYTE PTR ds:[rsi]
   14001a51c:	je     0x14001a55e
   14001a51e:	rex
   14001a51f:	rex pop rdx
   14001a521:	add    BYTE PTR [rbp+0x6],bh
   14001a524:	(bad)  
   14001a525:	movsxd ebp,DWORD PTR [rax+0x61]
   14001a528:	outs   dx,BYTE PTR ds:[rsi]
   14001a529:	addr32 gs rex.RB jbe 0x14001a593
   14001a52e:	outs   dx,BYTE PTR ds:[rsi]
   14001a52f:	je     0x14001a571
   14001a531:	push   rcx
   14001a532:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a53a:	rex
   14001a53b:	rex
   14001a53c:	rex.WRB
   14001a53d:	rex.RB
   14001a53e:	rex.B
   14001a53f:	pop    r8
   14001a541:	push   rax
   14001a542:	rex.RB
   14001a543:	push   r14
   14001a545:	push   rcx
   14001a546:	rex.RB jbe 0x14001a5ae
   14001a549:	outs   dx,BYTE PTR ds:[rsi]
   14001a54a:	je     0x14001a58c
   14001a54c:	rex
   14001a54d:	rex pop rdx
   14001a54f:	add    BYTE PTR [rsi+0xd],dh
   14001a552:	(bad)  
   14001a553:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   14001a55a:	je     0x14001a5c4
   14001a55c:	outs   dx,DWORD PTR ds:[rsi]
   14001a55d:	fs rex.RB jbe 0x14001a5c6
   14001a561:	outs   dx,BYTE PTR ds:[rsi]
   14001a562:	je     0x14001a5a4
   14001a564:	push   rcx
   14001a565:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a56d:	rex
   14001a56e:	rex
   14001a56f:	rex.WRB
   14001a570:	rex.RB
   14001a571:	rex.B
   14001a572:	pop    r8
   14001a574:	push   rax
   14001a575:	rex.RB
   14001a576:	push   r14
   14001a578:	push   rcx
   14001a579:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001a57b:	jo     0x14001a5f2
   14001a57d:	je     0x14001a5cc
   14001a57f:	gs je  0x14001a5ea
   14001a582:	outs   dx,DWORD PTR ds:[rsi]
   14001a583:	fs rex.RB jbe 0x14001a5ec
   14001a587:	outs   dx,BYTE PTR ds:[rsi]
   14001a588:	je     0x14001a5ca
   14001a58a:	rex
   14001a58b:	rex pop rdx
   14001a58d:	add    BYTE PTR [rbp+rcx*1+0x706e693f],al
   14001a594:	jne    0x14001a60a
   14001a596:	rex.WRB
   14001a597:	gs je  0x14001a602
   14001a59a:	outs   dx,DWORD PTR ds:[rsi]
   14001a59b:	fs push rcx
   14001a59d:	jne    0x14001a604
   14001a59f:	jb     0x14001a61a
   14001a5a1:	rex push rcx
   14001a5a3:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a5ab:	rex
   14001a5ac:	rex push rbp
   14001a5ae:	rex.RB
   14001a5af:	rex.X
   14001a5b0:	rex.B (bad) 
   14001a5b2:	push   r14
   14001a5b4:	push   rcx
   14001a5b5:	push   rsi
   14001a5b6:	(bad)  
   14001a5b7:	jb     0x14001a622
   14001a5b9:	(bad)  
   14001a5ba:	outs   dx,BYTE PTR ds:[rsi]
   14001a5bb:	je     0x14001a5fd
   14001a5bd:	rex push rdi
   14001a5bf:	xor    al,0x49
   14001a5c1:	outs   dx,BYTE PTR ds:[rsi]
   14001a5c2:	jo     0x14001a639
   14001a5c4:	je     0x14001a613
   14001a5c6:	gs je  0x14001a631
   14001a5c9:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ca:	fs push rcx
   14001a5cc:	jne    0x14001a633
   14001a5ce:	jb     0x14001a649
   14001a5d0:	rex push rcx
   14001a5d2:	je     0x14001a614
   14001a5d4:	rex
   14001a5d5:	rex pop rdx
   14001a5d7:	add    cl,al
   14001a5d9:	add    DWORD PTR [rdi],edi
   14001a5db:	(bad)  
   14001a5dc:	xor    DWORD PTR [rcx+0x44],edx
   14001a5df:	imul   esp,DWORD PTR [rcx+0x6c],0x7542676f
   14001a5e6:	je     0x14001a65c
   14001a5e8:	outs   dx,DWORD PTR ds:[rsi]
   14001a5e9:	outs   dx,BYTE PTR ds:[rsi]
   14001a5ea:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a5ec:	js     0x14001a62e
   14001a5ee:	rex push rbp
   14001a5f0:	rex.RB
   14001a5f1:	rex.B
   14001a5f2:	rex.B
   14001a5f3:	rex pop rax
   14001a5f5:	pop    rdx
   14001a5f6:	add    BYTE PTR [rax],al
   14001a5f8:	rol    DWORD PTR [rcx],1
   14001a5fa:	(bad)  
   14001a5fb:	(bad)  
   14001a5fc:	xor    DWORD PTR [rcx+0x46],edx
   14001a5ff:	outs   dx,DWORD PTR ds:[rsi]
   14001a600:	jb     0x14001a66f
   14001a602:	rex.WR (bad) 
   14001a604:	jns    0x14001a675
   14001a606:	jne    0x14001a67c
   14001a608:	rex
   14001a609:	rex push rbp
   14001a60b:	rex.RB
   14001a60c:	rex.B
   14001a60d:	rex.B
   14001a60e:	rex pop rax
   14001a610:	pop    rdx
   14001a611:	add    BYTE PTR [rdx],dl
   14001a613:	add    bh,BYTE PTR [rdi]
   14001a615:	(bad)  
   14001a616:	xor    DWORD PTR [rcx+0x4c],edx
   14001a619:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   14001a620:	rex
   14001a621:	rex push rbp
   14001a623:	rex.RB
   14001a624:	rex.B
   14001a625:	rex.B
   14001a626:	rex pop rax
   14001a628:	pop    rdx
   14001a629:	add    BYTE PTR [rcx+0x65733f1b],dh
   14001a62f:	je     0x14001a687
   14001a631:	(bad)  
   14001a632:	ins    BYTE PTR es:[rdi],dx
   14001a633:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x5140726f
   14001a63b:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001a643:	rex
   14001a644:	rex push rcx
   14001a646:	rex.RB
   14001a647:	rex.B
   14001a648:	pop    r8
   14001a64a:	push   rax
   14001a64b:	rex.RB
   14001a64c:	rex.X push rsi
   14001a64e:	push   rcx
   14001a64f:	push   rsi
   14001a650:	(bad)  
   14001a651:	ins    BYTE PTR es:[rdi],dx
   14001a652:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001a65a:	rex pop rdx
   14001a65c:	add    BYTE PTR [rax],al
   14001a65e:	cmp    DWORD PTR [rax],eax
   14001a660:	(bad)  
   14001a661:	(bad)  
   14001a662:	xor    BYTE PTR [rcx+0x44],dl
   14001a665:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   14001a66c:	push   rcx
   14001a66d:	rex.RB
   14001a66e:	rex.B
   14001a66f:	rex.B
   14001a670:	rex push rax
   14001a672:	rex.RB
   14001a673:	push   r14
   14001a675:	push   rcx
   14001a676:	push   rdi
   14001a677:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   14001a67f:	(bad)  
   14001a680:	and    al,0x51
   14001a682:	rex.RX ins BYTE PTR es:[rdi],dx
   14001a684:	(bad)  
   14001a685:	addr32 jae 0x14001a6c8
   14001a688:	push   rdi
   14001a689:	xor    al,0x57
   14001a68b:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   14001a692:	jo     0x14001a6f9
   14001a694:	rex push rcx
   14001a696:	je     0x14001a6d8
   14001a698:	rex
   14001a699:	rex
   14001a69a:	rex
   14001a69b:	rex pop rdx
   14001a69d:	add    BYTE PTR [rdx],ah
   14001a69f:	or     BYTE PTR [rdi],bh
   14001a6a1:	movsxd esi,DWORD PTR [rbp+0x72]
   14001a6a4:	jb     0x14001a70b
   14001a6a6:	outs   dx,BYTE PTR ds:[rsi]
   14001a6a7:	je     0x14001a6fd
   14001a6a9:	gs js  0x14001a720
   14001a6ac:	rex push rcx
   14001a6ae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a6b0:	ins    DWORD PTR es:[rdi],dx
   14001a6b1:	(bad)  
   14001a6b2:	outs   dx,DWORD PTR ds:[rsi]
   14001a6b3:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a6b5:	js     0x14001a6f7
   14001a6b7:	rex push rcx
   14001a6b9:	rex.RB
   14001a6ba:	rex.X
   14001a6bb:	rex.B (bad) 
   14001a6bd:	push   r14
   14001a6bf:	push   rcx
   14001a6c0:	push   rbx
   14001a6c1:	je     0x14001a735
   14001a6c3:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001a6ca:	add    BYTE PTR [rax],al
   14001a6cc:	fwait
   14001a6cd:	or     eax,0x736e693f
   14001a6d2:	gs jb  0x14001a749
   14001a6d5:	rex.WB je 0x14001a73d
   14001a6d8:	ins    DWORD PTR es:[rdi],dx
   14001a6d9:	rex push rcx
   14001a6db:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a6dd:	ins    DWORD PTR es:[rdi],dx
   14001a6de:	(bad)  
   14001a6df:	outs   dx,DWORD PTR ds:[rsi]
   14001a6e0:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a6e2:	js     0x14001a724
   14001a6e4:	rex push rcx
   14001a6e6:	rex.RB
   14001a6e7:	rex.B
   14001a6e8:	pop    r8
   14001a6ea:	rex.W
   14001a6eb:	rex.B
   14001a6ec:	rex.RB
   14001a6ed:	rex.X push rsi
   14001a6ef:	push   rcx
   14001a6f0:	movsxd rbp,DWORD PTR [r15+0x6e]
   14001a6f4:	rex
   14001a6f5:	rex
   14001a6f6:	rex.B
   14001a6f7:	rex.RB
   14001a6f8:	rex.X push rsi
   14001a6fa:	push   rcx
   14001a6fb:	push   rbx
   14001a6fc:	je     0x14001a770
   14001a6fe:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001a705:	rex.X push rsi
   14001a707:	push   rcx
   14001a708:	push   rsi
   14001a709:	(bad)  
   14001a70a:	jb     0x14001a775
   14001a70c:	(bad)  
   14001a70d:	outs   dx,BYTE PTR ds:[rsi]
   14001a70e:	je     0x14001a750
   14001a710:	rex
   14001a711:	rex pop rdx
   14001a713:	add    BYTE PTR [rax+0x6f633f07],ch
   14001a719:	jne    0x14001a789
   14001a71b:	je     0x14001a75d
   14001a71d:	push   rcx
   14001a71e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a720:	ins    DWORD PTR es:[rdi],dx
   14001a721:	(bad)  
   14001a722:	outs   dx,DWORD PTR ds:[rsi]
   14001a723:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a725:	js     0x14001a767
   14001a727:	rex push rcx
   14001a729:	rex.RB
   14001a72a:	rex.X
   14001a72b:	rex.B
   14001a72c:	rex.W pop rax
   14001a72e:	pop    rdx
   14001a72f:	add    BYTE PTR [rsi+0x18],cl
   14001a732:	(bad)  
   14001a733:	jae    0x14001a79a
   14001a735:	je     0x14001a77d
   14001a737:	imul   edi,DWORD PTR [rax+0x65],0x7a695364
   14001a73e:	gs rex push rcx
   14001a741:	push   rdi
   14001a742:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001a74a:	rex.RB
   14001a74b:	rex.B
   14001a74c:	pop    r8
   14001a74e:	rex.B
   14001a74f:	rex.RB
   14001a750:	rex.X push rsi
   14001a752:	push   rcx
   14001a753:	push   rbx
   14001a754:	imul   edi,DWORD PTR [rdx+0x65],0x5a404040
   14001a75b:	add    BYTE PTR [rdi+0x65733f1b],dh
   14001a761:	je     0x14001a7b9
   14001a763:	(bad)  
   14001a764:	ins    BYTE PTR es:[rdi],dx
   14001a765:	jne    0x14001a7cc
   14001a767:	rex push rcx
   14001a769:	push   rbx
   14001a76a:	jo     0x14001a7d5
   14001a76c:	outs   dx,BYTE PTR ds:[rsi]
   14001a76d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a76f:	js     0x14001a7b1
   14001a771:	rex push rcx
   14001a773:	rex.RB
   14001a774:	rex.B
   14001a775:	pop    r8
   14001a777:	rex.W
   14001a778:	rex pop rdx
   14001a77a:	add    BYTE PTR [rax],al
   14001a77c:	pop    rbp
   14001a77d:	sbb    DWORD PTR [rdi],edi
   14001a77f:	jae    0x14001a7e6
   14001a781:	je     0x14001a7d0
   14001a783:	(bad)  
   14001a784:	js     0x14001a7ef
   14001a786:	ins    DWORD PTR es:[rdi],dx
   14001a787:	jne    0x14001a7f6
   14001a789:	rex push rcx
   14001a78b:	push   rbx
   14001a78c:	jo     0x14001a7f7
   14001a78e:	outs   dx,BYTE PTR ds:[rsi]
   14001a78f:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a791:	js     0x14001a7d3
   14001a793:	rex push rcx
   14001a795:	rex.RB
   14001a796:	rex.B
   14001a797:	pop    r8
   14001a799:	rex.W
   14001a79a:	rex pop rdx
   14001a79c:	add    BYTE PTR [rax],al
   14001a79e:	jnp    0x14001a7b9
   14001a7a0:	(bad)  
   14001a7a1:	jae    0x14001a808
   14001a7a3:	je     0x14001a7f2
   14001a7a5:	imul   ebp,DWORD PTR [rsi+0x69],0x406d756d
   14001a7ac:	push   rcx
   14001a7ad:	push   rbx
   14001a7ae:	jo     0x14001a819
   14001a7b0:	outs   dx,BYTE PTR ds:[rsi]
   14001a7b1:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a7b3:	js     0x14001a7f5
   14001a7b5:	rex push rcx
   14001a7b7:	rex.RB
   14001a7b8:	rex.B
   14001a7b9:	pop    r8
   14001a7bb:	rex.W
   14001a7bc:	rex pop rdx
   14001a7be:	add    BYTE PTR [rax],al
   14001a7c0:	cmp    eax,0x64613f05
   14001a7c5:	fs rex.WR (bad) 
   14001a7c8:	jns    0x14001a839
   14001a7ca:	jne    0x14001a840
   14001a7cc:	rex push rcx
   14001a7ce:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a7d0:	js     0x14001a81e
   14001a7d2:	(bad)  
   14001a7d3:	jns    0x14001a844
   14001a7d5:	jne    0x14001a84b
   14001a7d7:	rex
   14001a7d8:	rex push rcx
   14001a7da:	rex.RB
   14001a7db:	rex.B
   14001a7dc:	pop    r8
   14001a7de:	push   rax
   14001a7df:	rex.RB
   14001a7e0:	push   r14
   14001a7e2:	push   rcx
   14001a7e3:	rex.WR (bad) 
   14001a7e5:	jns    0x14001a856
   14001a7e7:	jne    0x14001a85d
   14001a7e9:	rex
   14001a7ea:	rex
   14001a7eb:	rex.W
   14001a7ec:	rex pop rdx
   14001a7ee:	add    BYTE PTR [rax],al
   14001a7f0:	xchg   edx,eax
   14001a7f1:	add    DWORD PTR [rdi],edi
   14001a7f3:	(bad)  
   14001a7f4:	xor    BYTE PTR [rcx+0x56],dl
   14001a7f7:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a7f9:	js     0x14001a847
   14001a7fb:	(bad)  
   14001a7fc:	jns    0x14001a86d
   14001a7fe:	jne    0x14001a874
   14001a800:	rex
   14001a801:	rex push rcx
   14001a803:	rex.RB
   14001a804:	rex.B
   14001a805:	rex.B
   14001a806:	rex pop rax
   14001a808:	pop    rdx
   14001a809:	add    BYTE PTR [rdi+rdx*1+0x3f],al
   14001a80d:	jae    0x14001a874
   14001a80f:	je     0x14001a854
   14001a811:	outs   dx,BYTE PTR gs:[rsi]
   14001a813:	je     0x14001a887
   14001a815:	(bad)  
   14001a816:	ins    BYTE PTR es:[rdi],dx
   14001a817:	push   rdi
   14001a818:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d514074
   14001a820:	(bad)  
   14001a821:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001a828:	ja     0x14001a86a
   14001a82a:	rex push rcx
   14001a82c:	rex.RB
   14001a82d:	rex.B
   14001a82e:	pop    r8
   14001a830:	push   rax
   14001a831:	rex.RB
   14001a832:	push   r14
   14001a834:	push   rcx
   14001a835:	push   rdi
   14001a836:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14001a83e:	pop    rdx
   14001a83f:	add    dh,cl
   14001a841:	add    BYTE PTR [rdi],bh
   14001a843:	(bad)  
   14001a844:	xor    BYTE PTR [rcx+0x4d],dl
   14001a847:	(bad)  
   14001a848:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001a84f:	ja     0x14001a891
   14001a851:	rex push rcx
   14001a853:	rex.RB
   14001a854:	rex.B
   14001a855:	rex.B
   14001a856:	rex push rax
   14001a858:	rex.RB
   14001a859:	push   r14
   14001a85b:	push   rcx
   14001a85c:	push   rdi
   14001a85d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   14001a865:	(bad)  
   14001a866:	and    al,0x51
   14001a868:	rex.RX ins BYTE PTR es:[rdi],dx
   14001a86a:	(bad)  
   14001a86b:	addr32 jae 0x14001a8ae
   14001a86e:	push   rdi
   14001a86f:	xor    al,0x57
   14001a871:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   14001a878:	jo     0x14001a8df
   14001a87a:	rex push rcx
   14001a87c:	je     0x14001a8be
   14001a87e:	rex
   14001a87f:	rex
   14001a880:	rex
   14001a881:	rex pop rdx
   14001a883:	add    cl,bl
   14001a885:	or     bh,BYTE PTR [rdi]
   14001a887:	gs jbe 0x14001a8ef
   14001a88a:	outs   dx,BYTE PTR ds:[rsi]
   14001a88b:	je     0x14001a8cd
   14001a88d:	push   rcx
   14001a88e:	rex.WRB (bad) 
   14001a890:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001a897:	ja     0x14001a8d9
   14001a899:	rex
   14001a89a:	rex.WRB
   14001a89b:	rex.RB
   14001a89c:	rex.B
   14001a89d:	pop    r15
   14001a89f:	rex.WRX push rax
   14001a8a1:	rex.RB
   14001a8a2:	push   r14
   14001a8a4:	push   rcx
   14001a8a5:	rex.RB jbe 0x14001a90d
   14001a8a8:	outs   dx,BYTE PTR ds:[rsi]
   14001a8a9:	je     0x14001a8eb
   14001a8ab:	rex
   14001a8ac:	rex pop rdx
   14001a8ae:	add    BYTE PTR [rax],al
   14001a8b0:	lea    eax,[rdi]
   14001a8b2:	(bad)  
   14001a8b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a8b6:	je     0x14001a91d
   14001a8b8:	js     0x14001a92e
   14001a8ba:	rex.WRB
   14001a8bb:	outs   dx,BYTE PTR gs:[rsi]
   14001a8bd:	jne    0x14001a904
   14001a8bf:	jbe    0x14001a926
   14001a8c1:	outs   dx,BYTE PTR ds:[rsi]
   14001a8c2:	je     0x14001a904
   14001a8c4:	push   rcx
   14001a8c5:	rex.WRB (bad) 
   14001a8c7:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001a8ce:	ja     0x14001a910
   14001a8d0:	rex
   14001a8d1:	rex.WRB
   14001a8d2:	rex.RB
   14001a8d3:	rex.B
   14001a8d4:	pop    r8
   14001a8d6:	push   rax
   14001a8d7:	rex.RB
   14001a8d8:	push   r14
   14001a8da:	push   rcx
   14001a8db:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a8dd:	outs   dx,BYTE PTR ds:[rsi]
   14001a8de:	je     0x14001a945
   14001a8e0:	js     0x14001a956
   14001a8e2:	rex.WRB
   14001a8e3:	outs   dx,BYTE PTR gs:[rsi]
   14001a8e5:	jne    0x14001a92c
   14001a8e7:	jbe    0x14001a94e
   14001a8e9:	outs   dx,BYTE PTR ds:[rsi]
   14001a8ea:	je     0x14001a92c
   14001a8ec:	rex
   14001a8ed:	rex pop rdx
   14001a8ef:	add    cl,cl
   14001a8f1:	(bad)  
   14001a8f2:	(bad)  
   14001a8f3:	movsxd esi,DWORD PTR [rdx+0x65]
   14001a8f6:	(bad)  
   14001a8f7:	je     0x14001a95e
   14001a8f9:	push   rax
   14001a8fa:	outs   dx,DWORD PTR ds:[rsi]
   14001a8fb:	jo     0x14001a972
   14001a8fd:	jo     0x14001a94c
   14001a8ff:	outs   dx,BYTE PTR gs:[rsi]
   14001a901:	jne    0x14001a943
   14001a903:	push   rcx
   14001a904:	rex.WRB (bad) 
   14001a906:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001a90d:	ja     0x14001a94f
   14001a90f:	rex push rbp
   14001a911:	rex.RB
   14001a912:	rex.B
   14001a913:	push   r8
   14001a915:	rex.RB
   14001a916:	push   r14
   14001a918:	push   rcx
   14001a919:	rex.WRB
   14001a91a:	outs   dx,BYTE PTR gs:[rsi]
   14001a91c:	jne    0x14001a95e
   14001a91e:	rex pop rax
   14001a920:	pop    rdx
   14001a921:	add    BYTE PTR [rbp+0x10],ah
   14001a924:	(bad)  
   14001a925:	ins    DWORD PTR es:[rdi],dx
   14001a926:	gs je  0x14001a98a
   14001a929:	rex.WRXB (bad) 
   14001a92b:	push   0x65
   14001a92d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001a931:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a939:	push   rbp
   14001a93a:	rex.RB
   14001a93b:	rex.X
   14001a93c:	push   r8
   14001a93e:	rex.RB
   14001a93f:	rex.X push rbp
   14001a941:	push   rcx
   14001a942:	rex.WRB
   14001a943:	gs je  0x14001a9a7
   14001a946:	rex.WRXB (bad) 
   14001a948:	push   0x65
   14001a94a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a94e:	pop    rax
   14001a94f:	pop    rdx
   14001a950:	add    BYTE PTR [rax],al
   14001a952:	fcom   DWORD PTR [rbx]
   14001a954:	(bad)  
   14001a955:	jno    0x14001a9cb
   14001a957:	pop    rdi
   14001a958:	ins    DWORD PTR es:[rdi],dx
   14001a959:	gs je  0x14001a9bd
   14001a95c:	movsxd esp,DWORD PTR [rcx+0x73]
   14001a95f:	je     0x14001a9a1
   14001a961:	push   rcx
   14001a962:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a96a:	push   rbp
   14001a96b:	rex.RB
   14001a96c:	rex.B
   14001a96d:	push   r8
   14001a96f:	rex.RB
   14001a970:	pop    r8
   14001a972:	push   rax
   14001a973:	rex.RB
   14001a974:	rex.X
   14001a975:	rex.R
   14001a976:	rex pop rdx
   14001a978:	add    BYTE PTR [rax],al
   14001a97a:	rex.WRX adc r15,QWORD PTR [rdi]
   14001a97d:	jno    0x14001a9f3
   14001a97f:	pop    rdi
   14001a980:	ins    DWORD PTR es:[rdi],dx
   14001a981:	gs je  0x14001a9e5
   14001a984:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001a987:	ins    BYTE PTR es:[rdi],dx
   14001a988:	rex push rcx
   14001a98a:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001a992:	push   rbp
   14001a993:	rex.RB
   14001a994:	rex.B
   14001a995:	rex.B
   14001a996:	rex.W push rdi
   14001a998:	xor    al,0x43
   14001a99a:	(bad)  
   14001a99b:	ins    BYTE PTR es:[rdi],dx
   14001a99c:	ins    BYTE PTR es:[rdi],dx
   14001a99d:	rex push rcx
   14001a99f:	rex.WRB
   14001a9a0:	gs je  0x14001aa04
   14001a9a3:	rex.WRXB (bad) 
   14001a9a5:	push   0x65
   14001a9a7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a9ab:	rex.W push rax
   14001a9ad:	rex.RB
   14001a9ae:	push   r8
   14001a9b0:	rex.RB
   14001a9b1:	pop    r8
   14001a9b3:	rex pop rdx
   14001a9b5:	add    BYTE PTR [rbx],al
   14001a9b7:	or     edi,DWORD PTR [rdi]
   14001a9b9:	gs jbe 0x14001aa21
   14001a9bc:	outs   dx,BYTE PTR ds:[rsi]
   14001a9bd:	je     0x14001aa05
   14001a9bf:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   14001a9c7:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   14001a9ce:	rex.WRB
   14001a9cf:	rex.RB
   14001a9d0:	rex.B
   14001a9d1:	pop    r15
   14001a9d3:	rex.WRX push rax
   14001a9d5:	rex.RB
   14001a9d6:	push   r14
   14001a9d8:	push   rcx
   14001a9d9:	rex.WRXB (bad) 
   14001a9db:	push   0x65
   14001a9dd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001a9e1:	push   rax
   14001a9e2:	rex.RB
   14001a9e3:	push   r14
   14001a9e5:	push   rcx
   14001a9e6:	rex.RB jbe 0x14001aa4e
   14001a9e9:	outs   dx,BYTE PTR ds:[rsi]
   14001a9ea:	je     0x14001aa2c
   14001a9ec:	rex
   14001a9ed:	rex pop rdx
   14001a9ef:	add    dl,dl
   14001a9f1:	sbb    edi,DWORD PTR [rdi]
   14001a9f3:	jae    0x14001aa5a
   14001a9f5:	je     0x14001aa4d
   14001a9f7:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   14001a9fe:	push   rcx
   14001a9ff:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aa07:	push   rbp
   14001aa08:	rex.RB
   14001aa09:	rex.B
   14001aa0a:	pop    r8
   14001aa0c:	pop    rdi
   14001aa0d:	rex.WRX
   14001aa0e:	rex pop rdx
   14001aa10:	add    BYTE PTR [rax],al
   14001aa12:	(bad)  
   14001aa13:	sbb    al,0x3f
   14001aa15:	jae    0x14001aa80
   14001aa17:	jp     0x14001aa7e
   14001aa19:	imul   rbp,QWORD PTR [rsi+0x74],0x69445140
   14001aa21:	(bad)  
   14001aa22:	ins    BYTE PTR es:[rdi],dx
   14001aa23:	outs   dx,DWORD PTR ds:[rsi]
   14001aa24:	addr32 rex
   14001aa26:	rex push rbp
   14001aa28:	rex.RB
   14001aa29:	rex.X
   14001aa2a:	rex.B (bad) 
   14001aa2c:	push   r14
   14001aa2e:	push   rcx
   14001aa2f:	push   rbx
   14001aa30:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001aa37:	add    BYTE PTR [rdx],cl
   14001aa39:	adc    DWORD PTR [rdi],edi
   14001aa3b:	ins    DWORD PTR es:[rdi],dx
   14001aa3c:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14001aa43:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14001aa4a:	rex push rcx
   14001aa4c:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aa54:	push   rbp
   14001aa55:	rex.RB
   14001aa56:	rex.X
   14001aa57:	rex.B (bad) 
   14001aa59:	push   r14
   14001aa5b:	push   rcx
   14001aa5c:	push   rbx
   14001aa5d:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14001aa64:	add    BYTE PTR [rax],al
   14001aa66:	rex.RB (bad) 
   14001aa69:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14001aa6d:	jb     0x14001aad4
   14001aa6f:	jae    0x14001aae4
   14001aa71:	rex.RB jbe 0x14001aad9
   14001aa74:	outs   dx,BYTE PTR ds:[rsi]
   14001aa75:	je     0x14001aab7
   14001aa77:	push   rcx
   14001aa78:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aa80:	rex.WRB
   14001aa81:	rex.RB
   14001aa82:	rex.B
   14001aa83:	pop    r8
   14001aa85:	push   rax
   14001aa86:	rex.RB
   14001aa87:	push   r14
   14001aa89:	push   rcx
   14001aa8a:	rex.WXB
   14001aa8b:	gs jns 0x14001aad3
   14001aa8e:	jbe    0x14001aaf5
   14001aa90:	outs   dx,BYTE PTR ds:[rsi]
   14001aa91:	je     0x14001aad3
   14001aa93:	rex
   14001aa94:	rex pop rdx
   14001aa96:	add    BYTE PTR [rax],al
   14001aa98:	mov    edx,DWORD PTR [rip+0x7365723f]        # 0x1b3671cdd
   14001aa9e:	imul   edi,DWORD PTR [rdx+0x65],0x6e657645
   14001aaa5:	je     0x14001aae7
   14001aaa7:	push   rcx
   14001aaa8:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aab0:	rex.WRB
   14001aab1:	rex.RB
   14001aab2:	rex.B
   14001aab3:	pop    r8
   14001aab5:	push   rax
   14001aab6:	rex.RB
   14001aab7:	push   r14
   14001aab9:	push   rcx
   14001aaba:	push   rdx
   14001aabb:	gs jae 0x14001ab27
   14001aabe:	jp     0x14001ab25
   14001aac0:	rex.RB jbe 0x14001ab28
   14001aac3:	outs   dx,BYTE PTR ds:[rsi]
   14001aac4:	je     0x14001ab06
   14001aac6:	rex
   14001aac7:	rex pop rdx
   14001aac9:	add    BYTE PTR [rip+0x6c633f07],cl        # 0x1ac64e9d6
   14001aacf:	outs   dx,DWORD PTR ds:[rsi]
   14001aad0:	jae    0x14001ab37
   14001aad2:	rex.RB jbe 0x14001ab3a
   14001aad5:	outs   dx,BYTE PTR ds:[rsi]
   14001aad6:	je     0x14001ab18
   14001aad8:	push   rcx
   14001aad9:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aae1:	rex.WRB
   14001aae2:	rex.RB
   14001aae3:	rex.B
   14001aae4:	pop    r8
   14001aae6:	push   rax
   14001aae7:	rex.RB
   14001aae8:	push   r14
   14001aaea:	push   rcx
   14001aaeb:	rex.XB ins BYTE PTR es:[rdi],dx
   14001aaed:	outs   dx,DWORD PTR ds:[rsi]
   14001aaee:	jae    0x14001ab55
   14001aaf0:	rex.RB jbe 0x14001ab58
   14001aaf3:	outs   dx,BYTE PTR ds:[rsi]
   14001aaf4:	je     0x14001ab36
   14001aaf6:	rex
   14001aaf7:	rex pop rdx
   14001aaf9:	add    BYTE PTR [rbp+0x6f633f07],al
   14001aaff:	outs   dx,BYTE PTR ds:[rsi]
   14001ab00:	je     0x14001ab67
   14001ab02:	js     0x14001ab78
   14001ab04:	rex.WRB
   14001ab05:	outs   dx,BYTE PTR gs:[rsi]
   14001ab07:	jne    0x14001ab4e
   14001ab09:	jbe    0x14001ab70
   14001ab0b:	outs   dx,BYTE PTR ds:[rsi]
   14001ab0c:	je     0x14001ab4e
   14001ab0e:	push   rcx
   14001ab0f:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001ab17:	rex.WRB
   14001ab18:	rex.RB
   14001ab19:	rex.B
   14001ab1a:	pop    r8
   14001ab1c:	push   rax
   14001ab1d:	rex.RB
   14001ab1e:	push   r14
   14001ab20:	push   rcx
   14001ab21:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ab23:	outs   dx,BYTE PTR ds:[rsi]
   14001ab24:	je     0x14001ab8b
   14001ab26:	js     0x14001ab9c
   14001ab28:	rex.WRB
   14001ab29:	outs   dx,BYTE PTR gs:[rsi]
   14001ab2b:	jne    0x14001ab72
   14001ab2d:	jbe    0x14001ab94
   14001ab2f:	outs   dx,BYTE PTR ds:[rsi]
   14001ab30:	je     0x14001ab72
   14001ab32:	rex
   14001ab33:	rex pop rdx
   14001ab35:	add    BYTE PTR [rbp+0x1c],cl
   14001ab38:	(bad)  
   14001ab39:	jae    0x14001aba3
   14001ab3b:	outs   dx,DWORD PTR ds:[rsi]
   14001ab3c:	ja     0x14001ab83
   14001ab3e:	jbe    0x14001aba5
   14001ab40:	outs   dx,BYTE PTR ds:[rsi]
   14001ab41:	je     0x14001ab83
   14001ab43:	push   rcx
   14001ab44:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001ab4c:	rex.WRB
   14001ab4d:	rex.RB
   14001ab4e:	rex.B
   14001ab4f:	pop    r8
   14001ab51:	push   rax
   14001ab52:	rex.RB
   14001ab53:	push   r14
   14001ab55:	push   rcx
   14001ab56:	push   rbx
   14001ab57:	push   0x7645776f
   14001ab5c:	outs   dx,BYTE PTR gs:[rsi]
   14001ab5e:	je     0x14001aba0
   14001ab60:	rex
   14001ab61:	rex pop rdx
   14001ab63:	add    BYTE PTR [rsi],al
   14001ab65:	adc    bh,BYTE PTR [rdi]
   14001ab67:	outs   dx,DWORD PTR ds:[rsi]
   14001ab68:	jo     0x14001abcf
   14001ab6a:	outs   dx,BYTE PTR ds:[rsi]
   14001ab6b:	rex push rcx
   14001ab6d:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001ab75:	push   rbp
   14001ab76:	rex.RB
   14001ab77:	rex.B
   14001ab78:	pop    r8
   14001ab7a:	pop    rax
   14001ab7b:	pop    rdx
   14001ab7c:	add    BYTE PTR [rax],al
   14001ab7e:	adc    eax,0x78653f0b
   14001ab83:	movsxd eax,DWORD PTR gs:[rax+0x51]
   14001ab87:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001ab8f:	push   rbp
   14001ab90:	rex.RB
   14001ab91:	rex.B
   14001ab92:	rex.B
   14001ab93:	rex.W pop rax
   14001ab95:	pop    rdx
   14001ab96:	add    BYTE PTR [rax],al
   14001ab98:	sti    
   14001ab99:	or     DWORD PTR [rdi],edi
   14001ab9b:	outs   dx,DWORD PTR fs:[rsi]
   14001ab9d:	outs   dx,BYTE PTR ds:[rsi]
   14001ab9e:	gs rex push rcx
   14001aba1:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001aba9:	push   rbp
   14001abaa:	rex.RB
   14001abab:	rex.B
   14001abac:	pop    r8
   14001abae:	rex.W
   14001abaf:	rex pop rdx
   14001abb1:	add    BYTE PTR [rbp+0x63613f04],dh
   14001abb7:	movsxd esp,DWORD PTR [rbp+0x70]
   14001abba:	je     0x14001abfc
   14001abbc:	push   rcx
   14001abbd:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001abc5:	push   rbp
   14001abc6:	rex.RB
   14001abc7:	rex.B
   14001abc8:	pop    r8
   14001abca:	pop    rax
   14001abcb:	pop    rdx
   14001abcc:	add    BYTE PTR [rax],al
   14001abce:	or     al,0x15
   14001abd0:	(bad)  
   14001abd1:	jb     0x14001ac38
   14001abd3:	push   0x65
   14001abd5:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001abd9:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001abe1:	push   rbp
   14001abe2:	rex.RB
   14001abe3:	rex.B
   14001abe4:	pop    r8
   14001abe6:	pop    rax
   14001abe7:	pop    rdx
   14001abe8:	add    BYTE PTR [rax],al
   14001abea:	rol    BYTE PTR [rcx],0x3f
   14001abed:	(bad)  
   14001abee:	xor    DWORD PTR [rcx+0x44],edx
   14001abf1:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   14001abf8:	push   rbp
   14001abf9:	rex.RB
   14001abfa:	rex.B
   14001abfb:	rex.B
   14001abfc:	rex pop rax
   14001abfe:	pop    rdx
   14001abff:	add    BYTE PTR [rcx+0x61763f20],bh
   14001ac05:	ins    BYTE PTR es:[rdi],dx
   14001ac06:	jne    0x14001ac6d
   14001ac08:	rex push rcx
   14001ac0a:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001ac0c:	jne    0x14001ac70
   14001ac0e:	ins    BYTE PTR es:[rdi],dx
   14001ac0f:	gs push rbx
   14001ac11:	jo     0x14001ac7c
   14001ac13:	outs   dx,BYTE PTR ds:[rsi]
   14001ac14:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001ac16:	js     0x14001ac58
   14001ac18:	rex push rcx
   14001ac1a:	rex.RB
   14001ac1b:	rex.X
   14001ac1c:	rex.B
   14001ac1d:	rex.WRX pop rax
   14001ac1f:	pop    rdx
   14001ac20:	add    BYTE PTR [rax],al
   14001ac22:	(bad)  
   14001ac23:	(bad)  
   14001ac24:	(bad)  
   14001ac25:	imul   esi,DWORD PTR [rbx+0x43],0x6b636568
   14001ac2c:	gs fs rex push rcx
   14001ac30:	(bad)
   14001ac36:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   14001ac3a:	je     0x14001acb0
   14001ac3c:	outs   dx,DWORD PTR ds:[rsi]
   14001ac3d:	outs   dx,BYTE PTR ds:[rsi]
   14001ac3e:	rex
   14001ac3f:	rex push rcx
   14001ac41:	rex.RB
   14001ac42:	rex.X
   14001ac43:	pop    r15
   14001ac45:	rex.WRX pop rax
   14001ac47:	pop    rdx
   14001ac48:	add    BYTE PTR [rax],al
   14001ac4a:	fwait
   14001ac4b:	adc    bh,BYTE PTR [rdi]
   14001ac4d:	jo     0x14001acb0
   14001ac4f:	jb     0x14001acb6
   14001ac51:	outs   dx,BYTE PTR ds:[rsi]
   14001ac52:	je     0x14001acab
   14001ac54:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x57514074
   14001ac5c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14001ac64:	rex.RB
   14001ac65:	rex.X
   14001ac66:	push   r8
   14001ac68:	rex.RB
   14001ac69:	push   r14
   14001ac6b:	xor    DWORD PTR [rax+0x58],eax
   14001ac6e:	pop    rdx
   14001ac6f:	add    BYTE PTR [rdi+0x17],cl
   14001ac72:	(bad)  
   14001ac73:	jae    0x14001acda
   14001ac75:	je     0x14001acba
   14001ac77:	push   0x656b6365
   14001ac7c:	fs rex push rcx
   14001ac7f:	(bad)
   14001ac85:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   14001ac89:	je     0x14001acff
   14001ac8b:	outs   dx,DWORD PTR ds:[rsi]
   14001ac8c:	outs   dx,BYTE PTR ds:[rsi]
   14001ac8d:	rex
   14001ac8e:	rex push rcx
   14001ac90:	rex.RB
   14001ac91:	rex.B
   14001ac92:	pop    r8
   14001ac94:	pop    rdi
   14001ac95:	rex.WRX
   14001ac96:	rex pop rdx
   14001ac98:	add    BYTE PTR [rax],al
   14001ac9a:	scas   al,BYTE PTR es:[rdi]
   14001ac9b:	sbb    eax,0x6174733f
   14001aca0:	je     0x14001ad0b
   14001aca2:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001aca5:	je     0x14001ad08
   14001aca7:	rex.WRXB (bad) 
   14001aca9:	push   0x65
   14001acab:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001acaf:	push   rdi
   14001acb0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x32404074
   14001acb8:	push   rbp
   14001acb9:	push   rcx
   14001acba:	rex.WRB
   14001acbb:	gs je  0x14001ad1f
   14001acbe:	rex.WRXB (bad) 
   14001acc0:	push   0x65
   14001acc2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001acc6:	rex.X add BYTE PTR [rdi],al
   14001acc9:	adc    al,0x3f
   14001accb:	jno    0x14001ad41
   14001accd:	pop    rdi
   14001acce:	ins    DWORD PTR es:[rdi],dx
   14001accf:	gs je  0x14001ad33
   14001acd2:	movsxd esp,DWORD PTR [rcx+0x73]
   14001acd5:	je     0x14001ad17
   14001acd7:	push   rcx
   14001acd8:	rex.WRB (bad) 
   14001acda:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001ace1:	ja     0x14001ad23
   14001ace3:	rex push rbp
   14001ace5:	rex.RB
   14001ace6:	rex.B
   14001ace7:	push   r8
   14001ace9:	rex.RB
   14001acea:	pop    r8
   14001acec:	push   rax
   14001aced:	rex.RB
   14001acee:	rex.X
   14001acef:	rex.R
   14001acf0:	rex pop rdx
   14001acf2:	add    BYTE PTR [rax],al
   14001acf4:	jge    0x14001ad09
   14001acf6:	(bad)  
   14001acf7:	jno    0x14001ad6d
   14001acf9:	pop    rdi
   14001acfa:	ins    DWORD PTR es:[rdi],dx
   14001acfb:	gs je  0x14001ad5f
   14001acfe:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001ad01:	ins    BYTE PTR es:[rdi],dx
   14001ad02:	rex push rcx
   14001ad04:	rex.WRB (bad) 
   14001ad06:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001ad0d:	ja     0x14001ad4f
   14001ad0f:	rex push rbp
   14001ad11:	rex.RB
   14001ad12:	rex.B
   14001ad13:	rex.B
   14001ad14:	rex.W push rdi
   14001ad16:	xor    al,0x43
   14001ad18:	(bad)  
   14001ad19:	ins    BYTE PTR es:[rdi],dx
   14001ad1a:	ins    BYTE PTR es:[rdi],dx
   14001ad1b:	rex push rcx
   14001ad1d:	rex.WRB
   14001ad1e:	gs je  0x14001ad82
   14001ad21:	rex.WRXB (bad) 
   14001ad23:	push   0x65
   14001ad25:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ad29:	rex.W push rax
   14001ad2b:	rex.RB
   14001ad2c:	push   r8
   14001ad2e:	rex.RB
   14001ad2f:	pop    r8
   14001ad31:	rex pop rdx
   14001ad33:	add    BYTE PTR [rdx+0x1d],dh
   14001ad36:	(bad)  
   14001ad37:	jae    0x14001adad
   14001ad39:	(bad)  
   14001ad3a:	je     0x14001ada5
   14001ad3c:	movsxd ecx,DWORD PTR [rbp+0x65]
   14001ad3f:	je     0x14001ada2
   14001ad41:	rex.WRXB (bad) 
   14001ad43:	push   0x65
   14001ad45:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001ad49:	rex.WRB (bad) 
   14001ad4b:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001ad52:	ja     0x14001ad94
   14001ad54:	xor    dl,BYTE PTR [rbp+0x51]
   14001ad58:	rex.WRB
   14001ad59:	gs je  0x14001adbd
   14001ad5c:	rex.WRXB (bad) 
   14001ad5e:	push   0x65
   14001ad60:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ad64:	rex.X add BYTE PTR [rcx+0x74],dl
   14001ad68:	xor    eax,0x67646957
   14001ad6d:	gs je  0x14001ade3
   14001ad70:	cs fs ins BYTE PTR es:[rdi],dx
   14001ad73:	ins    BYTE PTR es:[rdi],dx
   14001ad74:	add    BYTE PTR [rax],al
   14001ad76:	xchg   esp,eax
   14001ad77:	or     al,0x3f
   14001ad79:	fs jb  0x14001addd
   14001ad7c:	ja     0x14001add0
   14001ad7e:	movsxd esi,DWORD PTR gs:[rbx+rsi*2+0x40]
   14001ad83:	push   rcx
   14001ad84:	push   rax
   14001ad85:	(bad)  
   14001ad86:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001ad8d:	push   rcx
   14001ad8e:	rex.RB
   14001ad8f:	rex.B
   14001ad90:	pop    r8
   14001ad92:	push   rax
   14001ad93:	rex.RB
   14001ad94:	rex.X push rsi
   14001ad96:	push   rcx
   14001ad97:	push   rdx
   14001ad98:	movsxd esi,DWORD PTR gs:[rsi+rax*2+0x40]
   14001ad9d:	rex
   14001ad9e:	rex.W
   14001ad9f:	rex pop rdx
   14001ada1:	add    BYTE PTR [rcx],bl
   14001ada3:	or     al,0x3f
   14001ada5:	fs jb  0x14001ae09
   14001ada8:	ja     0x14001adef
   14001adaa:	ins    BYTE PTR es:[rdi],dx
   14001adab:	ins    BYTE PTR es:[rdi],dx
   14001adac:	imul   esi,DWORD PTR [rax+0x73],0x50514065
   14001adb3:	(bad)  
   14001adb4:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001adbb:	push   rcx
   14001adbc:	rex.RB
   14001adbd:	rex.B
   14001adbe:	pop    r8
   14001adc0:	rex.B
   14001adc1:	rex.RB
   14001adc2:	rex.X push rsi
   14001adc4:	push   rcx
   14001adc5:	push   rdx
   14001adc6:	movsxd esi,DWORD PTR gs:[rsi+rax*2+0x40]
   14001adcb:	rex
   14001adcc:	rex pop rdx
   14001adce:	add    BYTE PTR [rax],al
   14001add0:	adc    al,0x56
   14001add2:	(bad)  
   14001add3:	jae    0x14001ae3a
   14001add5:	je     0x14001ae27
   14001add7:	outs   dx,BYTE PTR gs:[rsi]
   14001add9:	rex push rcx
   14001addb:	push   rax
   14001addc:	(bad)  
   14001addd:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001ade4:	push   rcx
   14001ade5:	rex.RB
   14001ade6:	rex.B
   14001ade7:	pop    r8
   14001ade9:	rex.B
   14001adea:	rex.RB
   14001adeb:	rex.X push rsi
   14001aded:	push   rcx
   14001adee:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001adf0:	ins    BYTE PTR es:[rdi],dx
   14001adf1:	outs   dx,DWORD PTR ds:[rsi]
   14001adf2:	jb     0x14001ae34
   14001adf4:	rex
   14001adf5:	rex pop rdx
   14001adf7:	add    BYTE PTR [rdi+0x3],cl
   14001adfa:	(bad)  
   14001adfb:	(bad)  
   14001adfc:	xor    DWORD PTR [rcx+0x42],edx
   14001adff:	jb     0x14001ae76
   14001ae01:	jae    0x14001ae6b
   14001ae03:	rex
   14001ae04:	rex push rcx
   14001ae06:	rex.RB
   14001ae07:	rex.B
   14001ae08:	rex.B
   14001ae09:	rex pop rax
   14001ae0b:	pop    rdx
   14001ae0c:	add    BYTE PTR [rax],al
   14001ae0e:	sbb    dl,BYTE PTR [rdi+rdi*1+0x73]
   14001ae12:	gs je  0x14001ae57
   14001ae15:	jb     0x14001ae8c
   14001ae17:	jae    0x14001ae81
   14001ae19:	rex push rcx
   14001ae1b:	push   rax
   14001ae1c:	(bad)  
   14001ae1d:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001ae24:	push   rcx
   14001ae25:	rex.RB
   14001ae26:	rex.B
   14001ae27:	pop    r8
   14001ae29:	rex.B
   14001ae2a:	rex.RB
   14001ae2b:	rex.X push rsi
   14001ae2d:	push   rcx
   14001ae2e:	rex.X jb 0x14001aea6
   14001ae31:	jae    0x14001ae9b
   14001ae33:	rex
   14001ae34:	rex
   14001ae35:	rex pop rdx
   14001ae37:	add    BYTE PTR [rbx+0x0],dl
   14001ae3a:	(bad)  
   14001ae3b:	(bad)  
   14001ae3c:	xor    BYTE PTR [rcx+0x42],dl
   14001ae3f:	jb     0x14001aeb6
   14001ae41:	jae    0x14001aeab
   14001ae43:	rex
   14001ae44:	rex push rcx
   14001ae46:	rex.RB
   14001ae47:	rex.B
   14001ae48:	rex.B
   14001ae49:	rex
   14001ae4a:	rex.B
   14001ae4b:	rex.RB
   14001ae4c:	rex.X push rsi
   14001ae4e:	push   rcx
   14001ae4f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ae51:	ins    BYTE PTR es:[rdi],dx
   14001ae52:	outs   dx,DWORD PTR ds:[rsi]
   14001ae53:	jb     0x14001ae95
   14001ae55:	rex push rdi
   14001ae57:	xor    al,0x42
   14001ae59:	jb     0x14001aed0
   14001ae5b:	jae    0x14001aec5
   14001ae5d:	push   rbx
   14001ae5e:	je     0x14001aed9
   14001ae60:	ins    BYTE PTR es:[rdi],dx
   14001ae61:	gs rex push rcx
   14001ae64:	je     0x14001aea6
   14001ae66:	rex
   14001ae67:	rex pop rdx
   14001ae69:	add    BYTE PTR [rcx+0x56],ah
   14001ae6c:	(bad)  
   14001ae6d:	jae    0x14001aed4
   14001ae6f:	je     0x14001aec3
   14001ae71:	addr32 (bad) 
   14001ae73:	rex push rcx
   14001ae75:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ae77:	ins    BYTE PTR es:[rdi],dx
   14001ae78:	outs   dx,DWORD PTR ds:[rsi]
   14001ae79:	jb     0x14001aebb
   14001ae7b:	rex push rcx
   14001ae7d:	rex.RB
   14001ae7e:	rex.B
   14001ae7f:	pop    r8
   14001ae81:	rex.W
   14001ae82:	rex.W
   14001ae83:	rex.W
   14001ae84:	rex.W
   14001ae85:	rex pop rdx
   14001ae87:	add    BYTE PTR [rax+0xc],al
   14001ae8a:	(bad)  
   14001ae8b:	fs jb  0x14001aeef
   14001ae8e:	ja     0x14001aedc
   14001ae90:	imul   ebp,DWORD PTR [rsi+0x65],0x50514073
   14001ae97:	(bad)  
   14001ae98:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001ae9f:	push   rcx
   14001aea0:	rex.RB
   14001aea1:	rex.B
   14001aea2:	pop    r8
   14001aea4:	push   rax
   14001aea5:	rex.RB
   14001aea6:	rex.X push rsi
   14001aea8:	push   rcx
   14001aea9:	imul   r13,QWORD PTR [rsi+0x65],0x48404046
   14001aeb1:	rex pop rdx
   14001aeb3:	add    BYTE PTR [rsi+0x3],ah
   14001aeb6:	(bad)  
   14001aeb7:	(bad)  
   14001aeb8:	xor    DWORD PTR [rcx+0x46],edx
   14001aebb:	outs   dx,DWORD PTR ds:[rsi]
   14001aebc:	outs   dx,BYTE PTR ds:[rsi]
   14001aebd:	je     0x14001aeff
   14001aebf:	rex push rcx
   14001aec1:	rex.RB
   14001aec2:	rex.B
   14001aec3:	rex.B
   14001aec4:	rex pop rax
   14001aec6:	pop    rdx
   14001aec7:	add    BYTE PTR [rbp+0x65733f57],al
   14001aecd:	je     0x14001af26
   14001aecf:	imul   esp,DWORD PTR gs:[rdi+0x68],0x46514074
   14001aed7:	outs   dx,DWORD PTR ds:[rsi]
   14001aed8:	outs   dx,BYTE PTR ds:[rsi]
   14001aed9:	je     0x14001af1b
   14001aedb:	rex push rcx
   14001aedd:	rex.RB
   14001aede:	rex.B
   14001aedf:	pop    r8
   14001aee1:	rex.W
   14001aee2:	rex pop rdx
   14001aee4:	add    BYTE PTR [rax],al
   14001aee6:	pushf  
   14001aee7:	add    BYTE PTR [rdi],bh
   14001aee9:	(bad)  
   14001aeea:	xor    BYTE PTR [rcx+0x46],dl
   14001aeed:	outs   dx,DWORD PTR ds:[rsi]
   14001aeee:	outs   dx,BYTE PTR ds:[rsi]
   14001aeef:	je     0x14001af31
   14001aef1:	rex push rcx
   14001aef3:	rex.RB
   14001aef4:	rex.B
   14001aef5:	rex.B
   14001aef6:	rex pop rax
   14001aef8:	pop    rdx
   14001aef9:	add    BYTE PTR [rcx+0x6f703f50],ch
   14001aeff:	jae    0x14001af41
   14001af01:	push   rcx
   14001af02:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001af04:	jne    0x14001af79
   14001af06:	gs rex.RB jbe 0x14001af6f
   14001af0a:	outs   dx,BYTE PTR ds:[rsi]
   14001af0b:	je     0x14001af4d
   14001af0d:	rex push rcx
   14001af0f:	rex.RB
   14001af10:	rex.X
   14001af11:	rex.B (bad) 
   14001af13:	push   r14
   14001af15:	push   rcx
   14001af16:	push   rax
   14001af17:	outs   dx,DWORD PTR ds:[rsi]
   14001af18:	imul   ebp,DWORD PTR [rsi+0x74],0x5a584040
   14001af1f:	add    dl,ah
   14001af21:	add    edi,DWORD PTR [rdi]
   14001af23:	(bad)  
   14001af24:	xor    DWORD PTR [rcx+0x50],edx
   14001af27:	(bad)  
   14001af28:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001af2f:	push   rcx
   14001af30:	rex.RB
   14001af31:	rex.B
   14001af32:	rex.B
   14001af33:	rex pop rax
   14001af35:	pop    rdx
   14001af36:	add    BYTE PTR [rax],al
   14001af38:	jrcxz  0x14001af3d
   14001af3a:	(bad)  
   14001af3b:	(bad)  
   14001af3c:	xor    DWORD PTR [rcx+0x50],edx
   14001af3f:	(bad)  
   14001af40:	imul   ebp,DWORD PTR [rsi+0x74],0x61507265
   14001af47:	je     0x14001afb1
   14001af49:	rex
   14001af4a:	rex push rcx
   14001af4c:	rex.RB
   14001af4d:	rex.B
   14001af4e:	rex.B
   14001af4f:	rex pop rax
   14001af51:	pop    rdx
   14001af52:	add    BYTE PTR [rax],al
   14001af54:	rcr    DWORD PTR [rax+0x3f],0x73
   14001af58:	je     0x14001afcc
   14001af5a:	outs   dx,DWORD PTR ds:[rsi]
   14001af5b:	imul   esp,DWORD PTR [rbp+0x50],0x61
   14001af5f:	je     0x14001afc9
   14001af61:	rex push rcx
   14001af63:	push   rax
   14001af64:	(bad)  
   14001af65:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001af6c:	push   rcx
   14001af6d:	rex.RB
   14001af6e:	rex.B
   14001af6f:	pop    r8
   14001af71:	rex.B
   14001af72:	rex.RB
   14001af73:	rex.X push rsi
   14001af75:	push   rcx
   14001af76:	push   rax
   14001af77:	(bad)  
   14001af78:	imul   ebp,DWORD PTR [rsi+0x74],0x61507265
   14001af7f:	je     0x14001afe9
   14001af81:	rex
   14001af82:	rex
   14001af83:	rex.B
   14001af84:	rex.RB
   14001af85:	rex.X push rsi
   14001af87:	push   rcx
   14001af88:	push   rax
   14001af89:	outs   dx,BYTE PTR gs:[rsi]
   14001af8b:	rex
   14001af8c:	rex
   14001af8d:	rex pop rdx
   14001af8f:	add    ch,cl
   14001af91:	add    DWORD PTR [rdi],edi
   14001af93:	(bad)  
   14001af94:	xor    BYTE PTR [rcx+0x50],dl
   14001af97:	outs   dx,BYTE PTR gs:[rsi]
   14001af99:	rex
   14001af9a:	rex push rcx
   14001af9c:	rex.RB
   14001af9d:	rex.B
   14001af9e:	rex.B
   14001af9f:	rex
   14001afa0:	rex.B
   14001afa1:	rex.RB
   14001afa2:	rex.X push rsi
   14001afa4:	push   rcx
   14001afa5:	rex.X jb 0x14001b01d
   14001afa8:	jae    0x14001b012
   14001afaa:	rex
   14001afab:	rex
   14001afac:	rex.WRX push rdi
   14001afae:	xor    al,0x50
   14001afb0:	outs   dx,BYTE PTR gs:[rsi]
   14001afb2:	push   rbx
   14001afb3:	je     0x14001b02e
   14001afb5:	ins    BYTE PTR es:[rdi],dx
   14001afb6:	gs rex push rcx
   14001afb9:	je     0x14001affb
   14001afbb:	rex push rdi
   14001afbd:	xor    al,0x50
   14001afbf:	outs   dx,BYTE PTR gs:[rsi]
   14001afc1:	rex.XB (bad) 
   14001afc3:	jo     0x14001b018
   14001afc5:	je     0x14001b040
   14001afc7:	ins    BYTE PTR es:[rdi],dx
   14001afc8:	rex xor eax,DWORD PTR gs:[rax+0x57]
   14001afcd:	xor    al,0x50
   14001afcf:	outs   dx,BYTE PTR gs:[rsi]
   14001afd1:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14001afd3:	imul   ebp,DWORD PTR [rsi+0x53],0x656c7974
   14001afda:	rex xor eax,DWORD PTR [rax+0x40]
   14001afde:	pop    rdx
   14001afdf:	add    BYTE PTR [rbp+0xa],ah
   14001afe2:	(bad)  
   14001afe3:	movsxd esi,DWORD PTR [rbp+0x62]
   14001afe6:	imul   esp,DWORD PTR [rbx+0x54],0x5051406f
   14001afed:	(bad)  
   14001afee:	imul   ebp,DWORD PTR [rsi+0x74],0x61507265
   14001aff5:	je     0x14001b05f
   14001aff7:	rex
   14001aff8:	rex push rcx
   14001affa:	rex.RB
   14001affb:	rex.B
   14001affc:	pop    r8
   14001affe:	rex.B
   14001afff:	rex.RB
   14001b000:	rex.X push rsi
   14001b002:	push   rcx
   14001b003:	push   rax
   14001b004:	outs   dx,DWORD PTR ds:[rsi]
   14001b005:	imul   ebp,DWORD PTR [rsi+0x74],0x30404046
   14001b00c:	xor    BYTE PTR [rax+0x5a],al
   14001b00f:	add    BYTE PTR [rdi+rcx*2+0x3f],dl
   14001b013:	ins    DWORD PTR es:[rdi],dx
   14001b014:	outs   dx,DWORD PTR ds:[rsi]
   14001b015:	jbe    0x14001b07c
   14001b017:	push   rsp
   14001b018:	outs   dx,DWORD PTR ds:[rsi]
   14001b019:	rex push rcx
   14001b01b:	push   rax
   14001b01c:	(bad)  
   14001b01d:	imul   ebp,DWORD PTR [rsi+0x74],0x61507265
   14001b024:	je     0x14001b08e
   14001b026:	rex
   14001b027:	rex push rcx
   14001b029:	rex.RB
   14001b02a:	rex.B
   14001b02b:	pop    r8
   14001b02d:	rex.B
   14001b02e:	rex.RB
   14001b02f:	rex.X push rsi
   14001b031:	push   rcx
   14001b032:	push   rax
   14001b033:	outs   dx,DWORD PTR ds:[rsi]
   14001b034:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b03b:	pop    rdx
   14001b03c:	add    BYTE PTR [rax],al
   14001b03e:	mov    ecx,0x303f3f01
   14001b043:	push   rcx
   14001b044:	push   rax
   14001b045:	(bad)  
   14001b046:	imul   ebp,DWORD PTR [rsi+0x74],0x61507265
   14001b04d:	je     0x14001b0b7
   14001b04f:	rex
   14001b050:	rex push rcx
   14001b052:	rex.RB
   14001b053:	rex.B
   14001b054:	rex.B
   14001b055:	rex pop rax
   14001b057:	pop    rdx
   14001b058:	add    BYTE PTR [rax],al
   14001b05a:	adc    eax,0x65733f56
   14001b05f:	je     0x14001b0b1
   14001b061:	outs   dx,BYTE PTR gs:[rsi]
   14001b063:	rex push rcx
   14001b065:	push   rax
   14001b066:	(bad)  
   14001b067:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001b06e:	push   rcx
   14001b06f:	rex.RB
   14001b070:	rex.B
   14001b071:	pop    r8
   14001b073:	rex.B
   14001b074:	rex.RB
   14001b075:	rex.X push rsi
   14001b077:	push   rcx
   14001b078:	push   rax
   14001b079:	outs   dx,BYTE PTR gs:[rsi]
   14001b07b:	rex
   14001b07c:	rex
   14001b07d:	rex pop rdx
   14001b07f:	add    BYTE PTR [rdx+0x65733f56],bh
   14001b085:	je     0x14001b0da
   14001b087:	je     0x14001b102
   14001b089:	ins    BYTE PTR es:[rdi],dx
   14001b08a:	gs rex push rcx
   14001b08d:	push   rax
   14001b08e:	outs   dx,BYTE PTR gs:[rsi]
   14001b090:	rex
   14001b091:	rex push rcx
   14001b093:	rex.RB
   14001b094:	rex.B
   14001b095:	pop    r8
   14001b097:	push   rdi
   14001b098:	xor    al,0x50
   14001b09a:	outs   dx,BYTE PTR gs:[rsi]
   14001b09c:	push   rbx
   14001b09d:	je     0x14001b118
   14001b09f:	ins    BYTE PTR es:[rdi],dx
   14001b0a0:	gs rex push rcx
   14001b0a3:	je     0x14001b0e5
   14001b0a5:	rex
   14001b0a6:	rex pop rdx
   14001b0a8:	add    BYTE PTR [rax],al
   14001b0aa:	jmp    0x14001b0af
   14001b0ac:	(bad)  
   14001b0ad:	(bad)  
   14001b0ae:	xor    DWORD PTR [rcx+0x50],edx
   14001b0b1:	outs   dx,BYTE PTR gs:[rsi]
   14001b0b3:	rex
   14001b0b4:	rex push rcx
   14001b0b6:	rex.RB
   14001b0b7:	rex.B
   14001b0b8:	rex.B
   14001b0b9:	rex pop rax
   14001b0bb:	pop    rdx
   14001b0bc:	add    BYTE PTR [rax],al
   14001b0be:	lock add al,0x3f
   14001b0c1:	(bad)  
   14001b0c2:	xor    al,0x51
   14001b0c4:	push   rax
   14001b0c5:	outs   dx,BYTE PTR gs:[rsi]
   14001b0c7:	rex
   14001b0c8:	rex push rcx
   14001b0ca:	rex.RB
   14001b0cb:	rex.B
   14001b0cc:	rex.B
   14001b0cd:	rex.B
   14001b0ce:	rex.RB
   14001b0cf:	push   r14
   14001b0d1:	xor    BYTE PTR [rax+0x41],al
   14001b0d4:	rex.RB
   14001b0d5:	rex.X push rsi
   14001b0d7:	xor    BYTE PTR [rax+0x40],al
   14001b0da:	pop    rdx
   14001b0db:	add    BYTE PTR [rdi+0x56],dl
   14001b0de:	(bad)  
   14001b0df:	jae    0x14001b146
   14001b0e1:	je     0x14001b135
   14001b0e3:	outs   dx,BYTE PTR gs:[rsi]
   14001b0e5:	fs gs jb 0x14001b131
   14001b0e9:	imul   ebp,DWORD PTR [rsi+0x74],0x61505140
   14001b0f0:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001b0f7:	push   rcx
   14001b0f8:	rex.RB
   14001b0f9:	rex.B
   14001b0fa:	pop    r8
   14001b0fc:	push   rdi
   14001b0fd:	xor    al,0x52
   14001b0ff:	outs   dx,BYTE PTR gs:[rsi]
   14001b101:	fs gs jb 0x14001b14d
   14001b105:	imul   ebp,DWORD PTR [rsi+0x74],0x5f403140
   14001b10c:	rex.WRX
   14001b10d:	rex pop rdx
   14001b10f:	add    BYTE PTR [rbx+0x72643f0c],dl
   14001b115:	(bad)  
   14001b116:	ja     0x14001b16a
   14001b118:	movsxd esi,DWORD PTR gs:[rbx+rsi*2+0x40]
   14001b11d:	push   rcx
   14001b11e:	push   rax
   14001b11f:	(bad)  
   14001b120:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001b127:	push   rcx
   14001b128:	rex.RB
   14001b129:	rex.B
   14001b12a:	pop    r8
   14001b12c:	push   rax
   14001b12d:	rex.RB
   14001b12e:	rex.X push rsi
   14001b130:	push   rcx
   14001b131:	push   rdx
   14001b132:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001b137:	rex.W
   14001b138:	rex pop rdx
   14001b13a:	add    BYTE PTR [rax],al
   14001b13c:	lea    ecx,[rip+0x6c69663f]        # 0x1ac6b1781
   14001b142:	ins    BYTE PTR es:[rdi],dx
   14001b143:	push   rdx
   14001b144:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001b149:	push   rax
   14001b14a:	(bad)  
   14001b14b:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001b152:	push   rcx
   14001b153:	rex.RB
   14001b154:	rex.B
   14001b155:	pop    r8
   14001b157:	rex.B
   14001b158:	rex.RB
   14001b159:	rex.X push rsi
   14001b15b:	push   rcx
   14001b15c:	push   rdx
   14001b15d:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001b162:	rex.B
   14001b163:	rex.RB
   14001b164:	rex.X push rsi
   14001b166:	push   rcx
   14001b167:	rex.X jb 0x14001b1df
   14001b16a:	jae    0x14001b1d4
   14001b16c:	rex
   14001b16d:	rex
   14001b16e:	rex pop rdx
   14001b170:	add    BYTE PTR [rax],al
   14001b172:	pop    rcx
   14001b173:	add    BYTE PTR [rdi],bh
   14001b175:	(bad)  
   14001b176:	xor    BYTE PTR [rcx+0x42],dl
   14001b179:	jb     0x14001b1f0
   14001b17b:	jae    0x14001b1e5
   14001b17d:	rex
   14001b17e:	rex push rcx
   14001b180:	rex.RB
   14001b181:	rex.B
   14001b182:	rex.B
   14001b183:	rex push rdi
   14001b185:	xor    al,0x47
   14001b187:	ins    BYTE PTR es:[rdi],dx
   14001b188:	outs   dx,DWORD PTR ds:[rsi]
   14001b189:	(bad)
   14001b18e:	ins    BYTE PTR es:[rdi],dx
   14001b18f:	outs   dx,DWORD PTR ds:[rsi]
   14001b190:	jb     0x14001b1d2
   14001b192:	push   rcx
   14001b193:	je     0x14001b1d5
   14001b195:	rex push rdi
   14001b197:	xor    al,0x42
   14001b199:	jb     0x14001b210
   14001b19b:	jae    0x14001b205
   14001b19d:	push   rbx
   14001b19e:	je     0x14001b219
   14001b1a0:	ins    BYTE PTR es:[rdi],dx
   14001b1a1:	xor    al,BYTE PTR gs:[rax+0x40]
   14001b1a6:	pop    rdx
   14001b1a7:	add    BYTE PTR [rax+0x65733f57],cl
   14001b1ad:	je     0x14001b206
   14001b1af:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x65505140
   14001b1b7:	outs   dx,BYTE PTR ds:[rsi]
   14001b1b8:	rex
   14001b1b9:	rex push rcx
   14001b1bb:	rex.RB
   14001b1bc:	rex.B
   14001b1bd:	pop    r8
   14001b1bf:	rex.W
   14001b1c0:	rex pop rdx
   14001b1c2:	add    BYTE PTR [rax],al
   14001b1c4:	(bad)  
   14001b1c5:	add    DWORD PTR [rdi],edi
   14001b1c7:	(bad)  
   14001b1c8:	xor    BYTE PTR [rcx+0x50],dl
   14001b1cb:	outs   dx,BYTE PTR gs:[rsi]
   14001b1cd:	rex
   14001b1ce:	rex push rcx
   14001b1d0:	rex.RB
   14001b1d1:	rex.B
   14001b1d2:	rex.B
   14001b1d3:	rex
   14001b1d4:	rex.B
   14001b1d5:	rex.RB
   14001b1d6:	rex.X push rsi
   14001b1d8:	push   rcx
   14001b1d9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b1db:	ins    BYTE PTR es:[rdi],dx
   14001b1dc:	outs   dx,DWORD PTR ds:[rsi]
   14001b1dd:	jb     0x14001b21f
   14001b1df:	rex
   14001b1e0:	rex pop rdx
   14001b1e2:	add    BYTE PTR [rax],al
   14001b1e4:	add    BYTE PTR fs:[rdi],bh
   14001b1e7:	(bad)  
   14001b1e8:	xor    BYTE PTR [rcx+0x43],dl
   14001b1eb:	outs   dx,DWORD PTR ds:[rsi]
   14001b1ec:	ins    BYTE PTR es:[rdi],dx
   14001b1ed:	outs   dx,DWORD PTR ds:[rsi]
   14001b1ee:	jb     0x14001b230
   14001b1f0:	rex push rcx
   14001b1f2:	rex.RB
   14001b1f3:	rex.B
   14001b1f4:	rex.B
   14001b1f5:	rex push rdi
   14001b1f7:	xor    al,0x47
   14001b1f9:	ins    BYTE PTR es:[rdi],dx
   14001b1fa:	outs   dx,DWORD PTR ds:[rsi]
   14001b1fb:	(bad)
   14001b200:	ins    BYTE PTR es:[rdi],dx
   14001b201:	outs   dx,DWORD PTR ds:[rsi]
   14001b202:	jb     0x14001b244
   14001b204:	push   rcx
   14001b205:	je     0x14001b247
   14001b207:	rex
   14001b208:	rex pop rdx
   14001b20a:	add    BYTE PTR [rax],al
   14001b20c:	mov    ch,0x1
   14001b20e:	(bad)  
   14001b20f:	(bad)  
   14001b210:	xor    BYTE PTR [rcx+0x50],dl
   14001b213:	(bad)  
   14001b214:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14001b21b:	push   rcx
   14001b21c:	rex.RB
   14001b21d:	rex.B
   14001b21e:	rex.B
   14001b21f:	rex push rax
   14001b221:	rex.RB
   14001b222:	push   r14
   14001b224:	push   rcx
   14001b225:	push   rax
   14001b226:	(bad)  
   14001b227:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   14001b22e:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b231:	rex
   14001b232:	rex pop rdx
   14001b234:	add    BYTE PTR [rax],al
   14001b236:	ficom  DWORD PTR [rdi+0x3f]
   14001b239:	jae    0x14001b2a3
   14001b23b:	outs   dx,DWORD PTR ds:[rsi]
   14001b23c:	ja     0x14001b27e
   14001b23e:	push   rcx
   14001b23f:	push   rdi
   14001b240:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
   14001b247:	push   rcx
   14001b248:	rex.RB
   14001b249:	rex.B
   14001b24a:	pop    r8
   14001b24c:	pop    rax
   14001b24d:	pop    rdx
   14001b24e:	add    BYTE PTR [rax],al
   14001b250:	push   rdx
   14001b251:	push   rdx
   14001b252:	(bad)  
   14001b253:	jb     0x14001b2b6
   14001b255:	imul   esi,DWORD PTR [rbx+0x65],0x69575140
   14001b25c:	outs   dx,BYTE PTR ds:[rsi]
   14001b25d:	outs   dx,DWORD PTR fs:[rsi]
   14001b25f:	ja     0x14001b2a1
   14001b261:	rex push rcx
   14001b263:	rex.RB
   14001b264:	rex.B
   14001b265:	pop    r8
   14001b267:	pop    rax
   14001b268:	pop    rdx
   14001b269:	add    BYTE PTR [rsi+rdx*2],dh
   14001b26c:	(bad)  
   14001b26d:	jae    0x14001b2d4
   14001b26f:	je     0x14001b2c1
   14001b271:	outs   dx,DWORD PTR ds:[rsi]
   14001b272:	jae    0x14001b2dd
   14001b274:	je     0x14001b2df
   14001b276:	outs   dx,DWORD PTR ds:[rsi]
   14001b277:	outs   dx,BYTE PTR ds:[rsi]
   14001b278:	rex push rcx
   14001b27a:	push   rdi
   14001b27b:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
   14001b282:	push   rcx
   14001b283:	rex.RB
   14001b284:	rex.B
   14001b285:	pop    r8
   14001b287:	rex.B
   14001b288:	rex.RB
   14001b289:	rex.X push rsi
   14001b28b:	push   rcx
   14001b28c:	push   rax
   14001b28d:	outs   dx,DWORD PTR ds:[rsi]
   14001b28e:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   14001b295:	add    BYTE PTR [rdx+0x6c633f09],bl
   14001b29b:	outs   dx,DWORD PTR ds:[rsi]
   14001b29c:	jae    0x14001b303
   14001b29e:	rex push rcx
   14001b2a0:	push   rdi
   14001b2a1:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
   14001b2a8:	push   rcx
   14001b2a9:	rex.RB
   14001b2aa:	rex.B
   14001b2ab:	pop    r15
   14001b2ad:	rex.WRX pop rax
   14001b2af:	pop    rdx
   14001b2b0:	add    BYTE PTR [rax],al
   14001b2b2:	out    0x54,al
   14001b2b4:	(bad)  
   14001b2b5:	jae    0x14001b31c
   14001b2b7:	je     0x14001b2ff
   14001b2b9:	ins    BYTE PTR es:[rdi],dx
   14001b2ba:	(bad)  
   14001b2bb:	addr32 jae 0x14001b2fe
   14001b2be:	push   rcx
   14001b2bf:	push   rdi
   14001b2c0:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
   14001b2c7:	push   rcx
   14001b2c8:	rex.RB
   14001b2c9:	rex.B
   14001b2ca:	pop    r8
   14001b2cc:	push   rsi
   14001b2cd:	(bad)  
   14001b2ce:	and    al,0x51
   14001b2d0:	rex.RX ins BYTE PTR es:[rdi],dx
   14001b2d2:	(bad)  
   14001b2d3:	addr32 jae 0x14001b316
   14001b2d6:	push   rdi
   14001b2d7:	xor    al,0x57
   14001b2d9:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   14001b2e0:	jo     0x14001b347
   14001b2e2:	rex push rcx
   14001b2e4:	je     0x14001b326
   14001b2e6:	rex
   14001b2e7:	rex
   14001b2e8:	rex
   14001b2e9:	rex pop rdx
   14001b2eb:	add    BYTE PTR [rdx+0x303f3f00],al
   14001b2f1:	push   rcx
   14001b2f2:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001b2f4:	jne    0x14001b358
   14001b2f6:	ins    BYTE PTR es:[rdi],dx
   14001b2f7:	gs push rsi
   14001b2f9:	(bad)  
   14001b2fa:	ins    BYTE PTR es:[rdi],dx
   14001b2fb:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b303:	push   rcx
   14001b304:	rex.RB
   14001b305:	rex.B
   14001b306:	rex.B
   14001b307:	rex push rax
   14001b309:	rex.RB
   14001b30a:	push   r14
   14001b30c:	push   rcx
   14001b30d:	rex.WRXB (bad) 
   14001b30f:	push   0x65
   14001b311:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b315:	rex pop rdx
   14001b317:	add    BYTE PTR [rdx+0x3],bh
   14001b31a:	(bad)  
   14001b31b:	(bad)  
   14001b31c:	xor    DWORD PTR [rcx+0x49],edx
   14001b31f:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b322:	rex
   14001b323:	rex push rcx
   14001b325:	rex.RB
   14001b326:	rex.B
   14001b327:	rex.B
   14001b328:	rex pop rax
   14001b32a:	pop    rdx
   14001b32b:	add    dl,cl
   14001b32d:	add    BYTE PTR [rdi],bh
   14001b32f:	(bad)  
   14001b330:	xor    BYTE PTR [rcx+0x49],dl
   14001b333:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b336:	rex
   14001b337:	rex push rcx
   14001b339:	rex.RB
   14001b33a:	rex.B
   14001b33b:	rex.B
   14001b33c:	rex pop rax
   14001b33e:	pop    rdx
   14001b33f:	add    BYTE PTR [rbx+0x656d3f4e],bh
   14001b345:	je     0x14001b3a8
   14001b347:	rex.WRXB (bad) 
   14001b349:	push   0x65
   14001b34b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001b34f:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001b351:	jne    0x14001b3b5
   14001b353:	ins    BYTE PTR es:[rdi],dx
   14001b354:	gs push rsi
   14001b356:	(bad)  
   14001b357:	ins    BYTE PTR es:[rdi],dx
   14001b358:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b360:	push   rbp
   14001b361:	rex.RB
   14001b362:	rex.X
   14001b363:	push   r8
   14001b365:	rex.RB
   14001b366:	rex.X push rbp
   14001b368:	push   rcx
   14001b369:	rex.WRB
   14001b36a:	gs je  0x14001b3ce
   14001b36d:	rex.WRXB (bad) 
   14001b36f:	push   0x65
   14001b371:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b375:	pop    rax
   14001b376:	pop    rdx
   14001b377:	add    BYTE PTR [rax+0x74713f51],dh
   14001b37d:	pop    rdi
   14001b37e:	ins    DWORD PTR es:[rdi],dx
   14001b37f:	gs je  0x14001b3e3
   14001b382:	movsxd esp,DWORD PTR [rcx+0x73]
   14001b385:	je     0x14001b3c7
   14001b387:	push   rcx
   14001b388:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001b38a:	jne    0x14001b3ee
   14001b38c:	ins    BYTE PTR es:[rdi],dx
   14001b38d:	gs push rsi
   14001b38f:	(bad)  
   14001b390:	ins    BYTE PTR es:[rdi],dx
   14001b391:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b399:	push   rbp
   14001b39a:	rex.RB
   14001b39b:	rex.B
   14001b39c:	push   r8
   14001b39e:	rex.RB
   14001b39f:	pop    r8
   14001b3a1:	push   rax
   14001b3a2:	rex.RB
   14001b3a3:	rex.X
   14001b3a4:	rex.R
   14001b3a5:	rex pop rdx
   14001b3a7:	add    BYTE PTR [rbp+0x51],ch
   14001b3aa:	(bad)  
   14001b3ab:	jno    0x14001b421
   14001b3ad:	pop    rdi
   14001b3ae:	ins    DWORD PTR es:[rdi],dx
   14001b3af:	gs je  0x14001b413
   14001b3b2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b3b5:	ins    BYTE PTR es:[rdi],dx
   14001b3b6:	rex push rcx
   14001b3b8:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001b3ba:	jne    0x14001b41e
   14001b3bc:	ins    BYTE PTR es:[rdi],dx
   14001b3bd:	gs push rsi
   14001b3bf:	(bad)  
   14001b3c0:	ins    BYTE PTR es:[rdi],dx
   14001b3c1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b3c9:	push   rbp
   14001b3ca:	rex.RB
   14001b3cb:	rex.B
   14001b3cc:	rex.B
   14001b3cd:	rex.W push rdi
   14001b3cf:	xor    al,0x43
   14001b3d1:	(bad)  
   14001b3d2:	ins    BYTE PTR es:[rdi],dx
   14001b3d3:	ins    BYTE PTR es:[rdi],dx
   14001b3d4:	rex push rcx
   14001b3d6:	rex.WRB
   14001b3d7:	gs je  0x14001b43b
   14001b3da:	rex.WRXB (bad) 
   14001b3dc:	push   0x65
   14001b3de:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b3e2:	rex.W push rax
   14001b3e4:	rex.RB
   14001b3e5:	push   r8
   14001b3e7:	rex.RB
   14001b3e8:	pop    r8
   14001b3ea:	rex pop rdx
   14001b3ec:	add    BYTE PTR [rax],al
   14001b3ee:	rex.WB pop r11
   14001b3f0:	(bad)  
   14001b3f1:	jbe    0x14001b454
   14001b3f3:	ins    BYTE PTR es:[rdi],dx
   14001b3f4:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x44514065
   14001b3fc:	outs   dx,DWORD PTR ds:[rsi]
   14001b3fd:	jne    0x14001b461
   14001b3ff:	ins    BYTE PTR es:[rdi],dx
   14001b400:	gs push rsi
   14001b402:	(bad)  
   14001b403:	ins    BYTE PTR es:[rdi],dx
   14001b404:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b40c:	push   rbp
   14001b40d:	rex.RB
   14001b40e:	rex.X
   14001b40f:	rex.B (bad) 
   14001b411:	push   r15
   14001b413:	xor    al,0x53
   14001b415:	je     0x14001b478
   14001b417:	je     0x14001b47e
   14001b419:	rex push rcx
   14001b41b:	push   rsi
   14001b41c:	(bad)  
   14001b41d:	ins    BYTE PTR es:[rdi],dx
   14001b41e:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b426:	rex.B
   14001b427:	rex.RB
   14001b428:	push   r14
   14001b42a:	push   rcx
   14001b42b:	push   rbx
   14001b42c:	je     0x14001b4a0
   14001b42e:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14001b435:	rex.B
   14001b436:	rex.W
   14001b437:	rex pop rdx
   14001b439:	add    ah,cl
   14001b43b:	or     eax,0x7869663f
   14001b440:	jne    0x14001b4b2
   14001b442:	rex push rcx
   14001b444:	push   rsi
   14001b445:	(bad)  
   14001b446:	ins    BYTE PTR es:[rdi],dx
   14001b447:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b44f:	push   rbp
   14001b450:	rex.RB
   14001b451:	rex.X
   14001b452:	pop    r8
   14001b454:	rex.B
   14001b455:	rex.RB
   14001b456:	push   r14
   14001b458:	push   rcx
   14001b459:	push   rbx
   14001b45a:	je     0x14001b4ce
   14001b45c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b463:	add    BYTE PTR [rdi+0x56],al
   14001b466:	(bad)  
   14001b467:	jae    0x14001b4ce
   14001b469:	je     0x14001b4bd
   14001b46b:	(bad)  
   14001b46c:	outs   dx,BYTE PTR ds:[rsi]
   14001b46d:	addr32 gs rex push rcx
   14001b471:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001b473:	jne    0x14001b4d7
   14001b475:	ins    BYTE PTR es:[rdi],dx
   14001b476:	gs push rsi
   14001b478:	(bad)  
   14001b479:	ins    BYTE PTR es:[rdi],dx
   14001b47a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b482:	push   rbp
   14001b483:	rex.RB
   14001b484:	rex.B
   14001b485:	pop    r8
   14001b487:	rex.WRX
   14001b488:	rex.WRX
   14001b489:	rex.W
   14001b48a:	rex pop rdx
   14001b48c:	add    BYTE PTR [rax],al
   14001b48e:	pop    rdx
   14001b48f:	add    edi,DWORD PTR [rdi]
   14001b491:	(bad)  
   14001b492:	xor    DWORD PTR [rcx+0x44],edx
   14001b495:	outs   dx,DWORD PTR ds:[rsi]
   14001b496:	jne    0x14001b4fa
   14001b498:	ins    BYTE PTR es:[rdi],dx
   14001b499:	gs push rsi
   14001b49b:	(bad)  
   14001b49c:	ins    BYTE PTR es:[rdi],dx
   14001b49d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001b4a5:	push   rbp
   14001b4a6:	rex.RB
   14001b4a7:	rex.B
   14001b4a8:	rex.B
   14001b4a9:	rex pop rax
   14001b4ab:	pop    rdx
   14001b4ac:	add    BYTE PTR [rax],al
   14001b4ae:	push   rcx
   14001b4af:	je     0x14001b4e6
   14001b4b1:	rex.RXB jne 0x14001b51d
   14001b4b4:	cs fs ins BYTE PTR es:[rdi],dx
   14001b4b7:	ins    BYTE PTR es:[rdi],dx
   14001b4b8:	add    BYTE PTR [rax],al
   14001b4ba:	mov    ch,0xd
   14001b4bc:	(bad)  
   14001b4bd:	jae    0x14001b524
   14001b4bf:	je     0x14001b504
   14001b4c1:	outs   dx,DWORD PTR ds:[rsi]
   14001b4c2:	outs   dx,BYTE PTR ds:[rsi]
   14001b4c3:	je     0x14001b52a
   14001b4c5:	js     0x14001b53b
   14001b4c7:	push   rax
   14001b4c8:	jb     0x14001b539
   14001b4ca:	jo     0x14001b531
   14001b4cc:	jb     0x14001b542
   14001b4ce:	jns    0x14001b510
   14001b4d0:	push   rcx
   14001b4d1:	push   rcx
   14001b4d2:	ins    DWORD PTR es:[rdi],dx
   14001b4d3:	ins    BYTE PTR es:[rdi],dx
   14001b4d4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b4d6:	outs   dx,BYTE PTR ds:[rsi]
   14001b4d7:	je     0x14001b53e
   14001b4d9:	js     0x14001b54f
   14001b4db:	rex
   14001b4dc:	rex push rcx
   14001b4de:	rex.RB
   14001b4df:	rex.B
   14001b4e0:	pop    r8
   14001b4e2:	rex.B
   14001b4e3:	rex.RB
   14001b4e4:	rex.X push rsi
   14001b4e6:	push   rcx
   14001b4e7:	push   rbx
   14001b4e8:	je     0x14001b55c
   14001b4ea:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001b4f1:	push   r14
   14001b4f3:	push   rcx
   14001b4f4:	rex.WRXB (bad) 
   14001b4f6:	push   0x65
   14001b4f8:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b4fc:	rex pop rdx
   14001b4fe:	add    BYTE PTR [rax],al
   14001b500:	push   rcx
   14001b501:	je     0x14001b538
   14001b503:	push   rcx
   14001b504:	ins    DWORD PTR es:[rdi],dx
   14001b505:	ins    BYTE PTR es:[rdi],dx
   14001b506:	cs fs ins BYTE PTR es:[rdi],dx
   14001b509:	ins    BYTE PTR es:[rdi],dx
   14001b50a:	add    BYTE PTR [rax],al
   14001b50c:	enter  0x3f06,0x61
   14001b510:	jo     0x14001b582
   14001b512:	outs   dx,BYTE PTR gs:[rsi]
   14001b514:	fs rex push rcx
   14001b517:	push   rbx
   14001b518:	je     0x14001b58c
   14001b51a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b521:	rex.B
   14001b522:	rex.B
   14001b523:	rex.B
   14001b524:	rex.RB
   14001b525:	push   r14
   14001b527:	xor    DWORD PTR [rax+0x41],eax
   14001b52a:	rex.RB
   14001b52b:	rex.X push rsi
   14001b52d:	xor    DWORD PTR [rax+0x40],eax
   14001b530:	pop    rdx
   14001b531:	add    BYTE PTR [rsi+0x303f3f01],cl
   14001b537:	push   rcx
   14001b538:	push   rbx
   14001b539:	je     0x14001b5ad
   14001b53b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b542:	rex.B
   14001b543:	rex.B
   14001b544:	rex
   14001b545:	rex.B
   14001b546:	rex.RB
   14001b547:	rex.X push rsi
   14001b549:	xor    BYTE PTR [rax+0x40],al
   14001b54c:	pop    rdx
   14001b54d:	add    BYTE PTR [rbp+0x5],dl
   14001b550:	(bad)  
   14001b551:	(bad)  
   14001b552:	pop    rcx
   14001b553:	push   rcx
   14001b554:	push   rbx
   14001b555:	je     0x14001b5c9
   14001b557:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b55e:	rex.B
   14001b55f:	rex.B
   14001b560:	rex.B
   14001b561:	rex.RB
   14001b562:	push   r14
   14001b564:	xor    BYTE PTR [rax+0x56],al
   14001b567:	push   rcx
   14001b568:	rex.XB push 0x40407261
   14001b56e:	rex pop rdx
   14001b570:	add    BYTE PTR [rax],al
   14001b572:	mov    ebx,DWORD PTR [rcx]
   14001b574:	(bad)  
   14001b575:	je     0x14001b5e9
   14001b577:	rex push rcx
   14001b579:	rex.WRB
   14001b57a:	gs je  0x14001b5de
   14001b57d:	rex.WRXB (bad) 
   14001b57f:	push   0x65
   14001b581:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b585:	push   rcx
   14001b586:	rex.RB
   14001b587:	rex.X
   14001b588:	rex.B (bad) 
   14001b58a:	push   r14
   14001b58c:	push   rcx
   14001b58d:	push   rbx
   14001b58e:	je     0x14001b602
   14001b590:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001b597:	rex.X
   14001b598:	xor    BYTE PTR [rax+0x40],r9b
   14001b59c:	pop    rdx
   14001b59d:	add    al,dl
   14001b59f:	add    bh,BYTE PTR [rdi]
   14001b5a1:	(bad)  
   14001b5a2:	xor    DWORD PTR [rcx+0x53],edx
   14001b5a5:	je     0x14001b619
   14001b5a7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001b5ae:	rex.B
   14001b5af:	rex.B
   14001b5b0:	rex pop rax
   14001b5b2:	pop    rdx
   14001b5b3:	add    al,dh
   14001b5b5:	sbb    DWORD PTR [rdi],edi
   14001b5b7:	je     0x14001b62b
   14001b5b9:	(bad)  
   14001b5ba:	outs   dx,BYTE PTR ds:[rsi]
   14001b5bb:	jae    0x14001b629
   14001b5bd:	(bad)  
   14001b5be:	je     0x14001b625
   14001b5c0:	rex push rcx
   14001b5c2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b5c4:	jb     0x14001b62b
   14001b5c6:	rex.B jo 0x14001b639
   14001b5c9:	ins    BYTE PTR es:[rdi],dx
   14001b5ca:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001b5d1:	rex
   14001b5d2:	rex push rbx
   14001b5d4:	rex.B (bad) 
   14001b5d6:	push   r14
   14001b5d8:	push   rcx
   14001b5d9:	push   rbx
   14001b5da:	je     0x14001b64e
   14001b5dc:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14001b5e3:	rex.X
   14001b5e4:	xor    BYTE PTR [rax],r14b
   14001b5e7:	rex.W
   14001b5e8:	rex pop rdx
   14001b5ea:	add    BYTE PTR [rax],al
   14001b5ec:	rex.W add dil,BYTE PTR [rdi]
   14001b5ef:	(bad)  
   14001b5f0:	xor    DWORD PTR [rdi],edi
   14001b5f2:	and    al,0x51
   14001b5f4:	push   rsi
   14001b5f5:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b5fa:	rex push rsi
   14001b5fc:	push   rcx
   14001b5fd:	push   rax
   14001b5fe:	outs   dx,DWORD PTR ds:[rsi]
   14001b5ff:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b606:	rex push rcx
   14001b608:	rex.RB
   14001b609:	rex.B
   14001b60a:	rex.B
   14001b60b:	rex pop rax
   14001b60d:	pop    rdx
   14001b60e:	add    BYTE PTR [rax],al
   14001b610:	add    al,0x3
   14001b612:	(bad)  
   14001b613:	(bad)  
   14001b614:	xor    al,0x3f
   14001b616:	and    al,0x51
   14001b618:	push   rsi
   14001b619:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b61e:	rex push rsi
   14001b620:	push   rcx
   14001b621:	push   rax
   14001b622:	outs   dx,DWORD PTR ds:[rsi]
   14001b623:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b62a:	rex push rcx
   14001b62c:	rex.RB
   14001b62d:	rex.B
   14001b62e:	rex.B
   14001b62f:	rex.B
   14001b630:	rex.RB
   14001b631:	push   r14
   14001b633:	xor    BYTE PTR [rax+0x41],al
   14001b636:	rex.RB
   14001b637:	rex.X push rsi
   14001b639:	xor    BYTE PTR [rax+0x40],al
   14001b63c:	pop    rdx
   14001b63d:	add    BYTE PTR [rsi+0xf],al
   14001b640:	(bad)  
   14001b641:	ins    BYTE PTR es:[rdi],dx
   14001b642:	outs   dx,BYTE PTR gs:[rsi]
   14001b644:	addr32 je 0x14001b6af
   14001b647:	rex push rcx
   14001b649:	imul   r13,QWORD PTR [rsi+0x65],0x51404046
   14001b651:	rex.RB
   14001b652:	rex.X
   14001b653:	rex.B
   14001b654:	rex.WRX pop rax
   14001b656:	pop    rdx
   14001b657:	add    dl,bh
   14001b659:	(bad)  
   14001b65a:	(bad)  
   14001b65b:	(bad)  
   14001b65c:	je     0x14001b69e
   14001b65e:	(bad)  
   14001b65f:	and    al,0x51
   14001b661:	push   rsi
   14001b662:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b667:	rex push rsi
   14001b669:	push   rcx
   14001b66a:	push   rax
   14001b66b:	outs   dx,DWORD PTR ds:[rsi]
   14001b66c:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b673:	rex push rcx
   14001b675:	rex.RB
   14001b676:	rex.X
   14001b677:	rex.B
   14001b678:	rex.B
   14001b679:	rex.RB
   14001b67a:	rex.X push rsi
   14001b67c:	push   rcx
   14001b67d:	push   rax
   14001b67e:	outs   dx,DWORD PTR ds:[rsi]
   14001b67f:	imul   ebp,DWORD PTR [rsi+0x74],0x48404046
   14001b686:	rex pop rdx
   14001b688:	add    BYTE PTR [rax],al
   14001b68a:	rcl    DWORD PTR [rsi],1
   14001b68c:	(bad)  
   14001b68d:	jae    0x14001b6f7
   14001b68f:	(bad)  
   14001b690:	jb     0x14001b6f7
   14001b692:	fs pop rdi
   14001b694:	outs   dx,BYTE PTR ds:[rsi]
   14001b695:	jne    0x14001b703
   14001b697:	ins    BYTE PTR es:[rdi],dx
   14001b698:	rex push rcx
   14001b69a:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001b6a2:	rex
   14001b6a3:	xor    dl,BYTE PTR [rbp+0x44]
   14001b6a7:	(bad)  
   14001b6a8:	je     0x14001b70b
   14001b6aa:	rex xor DWORD PTR [rax+0x42],eax
   14001b6ae:	add    BYTE PTR [rax],al
   14001b6b0:	iret   
   14001b6b1:	(bad)  
   14001b6b2:	(bad)  
   14001b6b3:	jae    0x14001b71d
   14001b6b5:	(bad)  
   14001b6b6:	jb     0x14001b71d
   14001b6b8:	fs pop rdi
   14001b6ba:	outs   dx,BYTE PTR ds:[rsi]
   14001b6bb:	jne    0x14001b729
   14001b6bd:	ins    BYTE PTR es:[rdi],dx
   14001b6be:	rex push rcx
   14001b6c0:	rex.W (bad) 
   14001b6c2:	jae    0x14001b72c
   14001b6c4:	rex.R (bad) 
   14001b6c6:	je     0x14001b729
   14001b6c8:	rex
   14001b6c9:	xor    dl,BYTE PTR [rbp+0x31]
   14001b6cd:	rex
   14001b6ce:	rex.X add sil,cl
   14001b6d1:	(bad)  
   14001b6d2:	(bad)  
   14001b6d3:	jae    0x14001b73d
   14001b6d5:	(bad)  
   14001b6d6:	jb     0x14001b73d
   14001b6d8:	fs pop rdi
   14001b6da:	outs   dx,BYTE PTR ds:[rsi]
   14001b6db:	jne    0x14001b749
   14001b6dd:	ins    BYTE PTR es:[rdi],dx
   14001b6de:	rex push rcx
   14001b6e0:	rex.B jb 0x14001b755
   14001b6e3:	(bad)  
   14001b6e4:	jns    0x14001b72a
   14001b6e6:	(bad)  
   14001b6e7:	je     0x14001b74a
   14001b6e9:	rex
   14001b6ea:	xor    dl,BYTE PTR [rcx+0x42]
   14001b6ee:	push   rbp
   14001b6ef:	xor    DWORD PTR [rax+0x42],eax
   14001b6f2:	add    BYTE PTR [rax],al
   14001b6f4:	adc    BYTE PTR [rdx],cl
   14001b6f6:	(bad)  
   14001b6f7:	fs gs (bad) 
   14001b6fa:	ins    BYTE PTR es:[rdi],dx
   14001b6fb:	ins    BYTE PTR es:[rdi],dx
   14001b6fc:	outs   dx,DWORD PTR ds:[rsi]
   14001b6fd:	movsxd esp,DWORD PTR [rcx+0x74]
   14001b700:	gs rex push rcx
   14001b703:	rex.B jb 0x14001b778
   14001b706:	(bad)  
   14001b707:	jns    0x14001b74d
   14001b709:	(bad)  
   14001b70a:	je     0x14001b76d
   14001b70c:	rex
   14001b70d:	rex push rbx
   14001b70f:	pop    r8
   14001b711:	push   rax
   14001b712:	rex.RB
   14001b713:	push   r13
   14001b715:	xor    DWORD PTR [rax+0x5f],eax
   14001b718:	rex.WXB xor QWORD PTR [r8+0x5a],rax
   14001b71c:	add    BYTE PTR [rax],al
   14001b71e:	(bad)  [rdx]
   14001b720:	(bad)  
   14001b721:	outs   dx,BYTE PTR gs:[rsi]
   14001b723:	fs rex (bad) 
   14001b726:	and    al,0x51
   14001b728:	push   rsi
   14001b729:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b72e:	rex push rsi
   14001b730:	push   rcx
   14001b731:	push   rax
   14001b732:	outs   dx,DWORD PTR ds:[rsi]
   14001b733:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b73a:	rex push rcx
   14001b73c:	rex.RB
   14001b73d:	rex.X
   14001b73e:	push   r8
   14001b740:	rex.RB
   14001b741:	rex.X push rsi
   14001b743:	push   rcx
   14001b744:	push   rax
   14001b745:	outs   dx,DWORD PTR ds:[rsi]
   14001b746:	imul   ebp,DWORD PTR [rsi+0x74],0x58404046
   14001b74d:	pop    rdx
   14001b74e:	add    BYTE PTR [rax],al
   14001b750:	cmp    BYTE PTR [rdi],al
   14001b752:	(bad)  
   14001b753:	(bad)  
   14001b754:	imul   ebp,DWORD PTR gs:[esi+0x40],0x5651243f
   14001b75d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b762:	rex push rsi
   14001b764:	push   rcx
   14001b765:	push   rax
   14001b766:	outs   dx,DWORD PTR ds:[rsi]
   14001b767:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b76e:	rex push rcx
   14001b770:	rex.RB
   14001b771:	rex.X
   14001b772:	push   r8
   14001b774:	rex.RB
   14001b775:	rex.X push rsi
   14001b777:	push   rcx
   14001b778:	push   rax
   14001b779:	outs   dx,DWORD PTR ds:[rsi]
   14001b77a:	imul   ebp,DWORD PTR [rsi+0x74],0x58404046
   14001b781:	pop    rdx
   14001b782:	add    BYTE PTR [rax],al
   14001b784:	(bad)  
   14001b785:	add    BYTE PTR [rdi],bh
   14001b787:	(bad)  
   14001b788:	xor    BYTE PTR [rdi],bh
   14001b78a:	and    al,0x51
   14001b78c:	push   rsi
   14001b78d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b792:	rex push rsi
   14001b794:	push   rcx
   14001b795:	push   rax
   14001b796:	outs   dx,DWORD PTR ds:[rsi]
   14001b797:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001b79e:	rex push rcx
   14001b7a0:	rex.RB
   14001b7a1:	rex.B
   14001b7a2:	rex.B
   14001b7a3:	rex
   14001b7a4:	rex.B
   14001b7a5:	rex.RB
   14001b7a6:	rex.X push rsi
   14001b7a8:	xor    BYTE PTR [rax+0x40],al
   14001b7ab:	pop    rdx
   14001b7ac:	add    BYTE PTR [rax],al
   14001b7ae:	xchg   edx,eax
   14001b7af:	adc    BYTE PTR [rdi],bh
   14001b7b1:	outs   dx,BYTE PTR ds:[rsi]
   14001b7b2:	gs js  0x14001b829
   14001b7b5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001b7b7:	fs gs rex push rcx
   14001b7bb:	rex.W (bad) 
   14001b7bd:	jae    0x14001b827
   14001b7bf:	rex.R (bad) 
   14001b7c1:	je     0x14001b824
   14001b7c3:	rex
   14001b7c4:	rex push rbx
   14001b7c6:	push   r8
   14001b7c8:	rex.RB
   14001b7c9:	push   r13
   14001b7cb:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001b7cd:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14001b7d3:	rex.RB
   14001b7d4:	push   r13
   14001b7d6:	xor    dh,BYTE PTR [rcx]
   14001b7d8:	rex
   14001b7d9:	rex pop rdx
   14001b7db:	add    BYTE PTR [rbp+0x2],bh
   14001b7de:	(bad)  
   14001b7df:	(bad)  
   14001b7e0:	xor    DWORD PTR [rcx+0x45],edx
   14001b7e3:	(bad)  
   14001b7e4:	jae    0x14001b84f
   14001b7e6:	outs   dx,BYTE PTR ds:[rsi]
   14001b7e7:	addr32 rex.XB jne 0x14001b85d
   14001b7eb:	jbe    0x14001b852
   14001b7ed:	rex
   14001b7ee:	rex push rcx
   14001b7f0:	rex.RB
   14001b7f1:	rex.B
   14001b7f2:	rex.B
   14001b7f3:	rex pop rax
   14001b7f5:	pop    rdx
   14001b7f6:	add    BYTE PTR [rax],al
   14001b7f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b7f9:	(bad)  
   14001b7fa:	(bad)  
   14001b7fb:	(bad)  
   14001b7fc:	ins    BYTE PTR es:[rdi],dx
   14001b7fd:	ins    BYTE PTR es:[rdi],dx
   14001b7fe:	outs   dx,DWORD PTR ds:[rsi]
   14001b7ff:	movsxd esp,DWORD PTR [rcx+0x74]
   14001b802:	gs rex push rcx
   14001b805:	rex.B jb 0x14001b87a
   14001b808:	(bad)  
   14001b809:	jns    0x14001b84f
   14001b80b:	(bad)  
   14001b80c:	je     0x14001b86f
   14001b80e:	rex
   14001b80f:	rex push rbx
   14001b811:	push   r8
   14001b813:	rex.RB
   14001b814:	push   r13
   14001b816:	xor    DWORD PTR [rax+0x5f],eax
   14001b819:	rex.WXB xor BYTE PTR [r8],sil
   14001b81c:	push   rsi
   14001b81d:	(bad)  
   14001b81e:	and    al,0x51
   14001b820:	rex.RX ins BYTE PTR es:[rdi],dx
   14001b822:	(bad)  
   14001b823:	addr32 jae 0x14001b866
   14001b826:	push   rdi
   14001b827:	xor    al,0x41
   14001b829:	ins    BYTE PTR es:[rdi],dx
   14001b82a:	ins    BYTE PTR es:[rdi],dx
   14001b82b:	outs   dx,DWORD PTR ds:[rsi]
   14001b82c:	movsxd esp,DWORD PTR [rcx+0x74]
   14001b82f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14001b836:	outs   dx,DWORD PTR ds:[rsi]
   14001b837:	outs   dx,BYTE PTR ds:[rsi]
   14001b838:	rex push rcx
   14001b83a:	rex.B jb 0x14001b8af
   14001b83d:	(bad)  
   14001b83e:	jns    0x14001b884
   14001b840:	(bad)  
   14001b841:	je     0x14001b8a4
   14001b843:	rex
   14001b844:	rex
   14001b845:	rex
   14001b846:	rex
   14001b847:	rex pop rdx
   14001b849:	add    BYTE PTR [rcx+0x303f3f00],dl
   14001b84f:	push   rcx
   14001b850:	rex.RB (bad) 
   14001b852:	jae    0x14001b8bd
   14001b854:	outs   dx,BYTE PTR ds:[rsi]
   14001b855:	addr32 rex.XB jne 0x14001b8cb
   14001b859:	jbe    0x14001b8c0
   14001b85b:	rex
   14001b85c:	rex push rcx
   14001b85e:	rex.RB
   14001b85f:	rex.B
   14001b860:	rex.B
   14001b861:	rex
   14001b862:	rex.B
   14001b863:	rex.RB
   14001b864:	rex.X push rsi
   14001b866:	xor    BYTE PTR [rax+0x40],al
   14001b869:	pop    rdx
   14001b86a:	add    BYTE PTR [rax],al
   14001b86c:	(bad)  
   14001b86d:	add    al,0x3f
   14001b86f:	(bad)  
   14001b870:	cmp    BYTE PTR [rax+0x59],al
   14001b873:	pop    r15
   14001b875:	rex.WRX
   14001b876:	rex.B
   14001b877:	rex.RB
   14001b878:	rex.X push rsi
   14001b87a:	push   rcx
   14001b87b:	push   rbx
   14001b87c:	je     0x14001b8f0
   14001b87e:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14001b885:	pop    rdx
   14001b886:	add    BYTE PTR [rax],al
   14001b888:	mov    BYTE PTR [rax],cl
   14001b88a:	(bad)  
   14001b88b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b88e:	outs   dx,BYTE PTR ds:[rsi]
   14001b88f:	movsxd esi,DWORD PTR gs:[rbx+rdx*2+0x6c]
   14001b894:	outs   dx,DWORD PTR ds:[rsi]
   14001b895:	je     0x14001b90a
   14001b897:	rex.X jns 0x14001b8e8
   14001b89a:	(bad)  
   14001b89b:	ins    DWORD PTR es:[rdi],dx
   14001b89c:	gs rex push rcx
   14001b89f:	rex.WRB
   14001b8a0:	gs je  0x14001b904
   14001b8a3:	rex.WRXB (bad) 
   14001b8a5:	push   0x65
   14001b8a7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b8ab:	push   rbx
   14001b8ac:	pop    r8
   14001b8ae:	push   rax
   14001b8af:	rex.RB
   14001b8b0:	push   r14
   14001b8b2:	push   rcx
   14001b8b3:	rex.WRXB (bad) 
   14001b8b5:	push   0x65
   14001b8b7:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b8bb:	rex pop rdx
   14001b8bd:	add    BYTE PTR [rdx],dl
   14001b8bf:	(bad)  
   14001b8c0:	(bad)  
   14001b8c1:	jae    0x14001b928
   14001b8c3:	je     0x14001b914
   14001b8c5:	(bad)  
   14001b8c6:	push   0x65
   14001b8c8:	movsxd esi,DWORD PTR [rsi+rcx*2+0x61]
   14001b8cc:	ins    DWORD PTR es:[rdi],dx
   14001b8cd:	gs rex push rcx
   14001b8d0:	rex.WRXB (bad) 
   14001b8d2:	push   0x65
   14001b8d4:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b8d8:	push   rcx
   14001b8d9:	rex.RB
   14001b8da:	rex.B
   14001b8db:	pop    r8
   14001b8dd:	rex.B
   14001b8de:	rex.RB
   14001b8df:	rex.X push rsi
   14001b8e1:	push   rcx
   14001b8e2:	push   rbx
   14001b8e3:	je     0x14001b957
   14001b8e5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14001b8ec:	add    BYTE PTR [rax],al
   14001b8ee:	pop    rax
   14001b8ef:	or     al,0x3f
   14001b8f1:	data16 jb 0x14001b963
   14001b8f4:	ins    DWORD PTR es:[rdi],dx
   14001b8f5:	push   rbp
   14001b8f6:	je     0x14001b95e
   14001b8f8:	cmp    BYTE PTR [rax+0x51],al
   14001b8fb:	push   rbx
   14001b8fc:	je     0x14001b970
   14001b8fe:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001b905:	(bad)  
   14001b906:	push   r14
   14001b908:	xor    DWORD PTR [rax+0x50],eax
   14001b90b:	rex.RB
   14001b90c:	rex.X
   14001b90d:	rex.R
   14001b90e:	rex.W
   14001b90f:	rex pop rdx
   14001b911:	add    dh,cl
   14001b913:	adc    BYTE PTR [rdi],bh
   14001b915:	outs   dx,DWORD PTR ds:[rsi]
   14001b916:	(bad)  
   14001b917:	push   0x65
   14001b919:	movsxd esi,DWORD PTR [rsi+rcx*2+0x61]
   14001b91d:	ins    DWORD PTR es:[rdi],dx
   14001b91e:	gs rex push rcx
   14001b921:	rex.WRXB (bad) 
   14001b923:	push   0x65
   14001b925:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b929:	push   rcx
   14001b92a:	rex.RB
   14001b92b:	rex.X
   14001b92c:	rex.B (bad) 
   14001b92e:	push   r14
   14001b930:	push   rcx
   14001b931:	push   rbx
   14001b932:	je     0x14001b9a6
   14001b934:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14001b93b:	add    BYTE PTR [rax+0xb],bl
   14001b93e:	(bad)  
   14001b93f:	gs jbe 0x14001b9a7
   14001b942:	outs   dx,BYTE PTR ds:[rsi]
   14001b943:	je     0x14001b985
   14001b945:	push   rcx
   14001b946:	rex.WRXB (bad) 
   14001b948:	push   0x65
   14001b94a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b94e:	push   rbp
   14001b94f:	rex.RB
   14001b950:	rex.B
   14001b951:	pop    r15
   14001b953:	rex.WRX push rax
   14001b955:	rex.RB
   14001b956:	push   r14
   14001b958:	push   rcx
   14001b959:	rex.RB jbe 0x14001b9c1
   14001b95c:	outs   dx,BYTE PTR ds:[rsi]
   14001b95d:	je     0x14001b99f
   14001b95f:	rex
   14001b960:	rex pop rdx
   14001b962:	add    BYTE PTR [rax],al
   14001b964:	push   0xb
   14001b966:	(bad)  
   14001b967:	gs jbe 0x14001b9cf
   14001b96a:	outs   dx,BYTE PTR ds:[rsi]
   14001b96b:	je     0x14001b9b3
   14001b96d:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x4f514072
   14001b975:	(bad)  
   14001b976:	push   0x65
   14001b978:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b97c:	push   rbp
   14001b97d:	rex.RB
   14001b97e:	rex.B
   14001b97f:	pop    r15
   14001b981:	rex.WRX push rax
   14001b983:	rex.RB
   14001b984:	push   r14
   14001b986:	xor    DWORD PTR [rax+0x50],eax
   14001b989:	rex.RB
   14001b98a:	push   r14
   14001b98c:	push   rcx
   14001b98d:	rex.RB jbe 0x14001b9f5
   14001b990:	outs   dx,BYTE PTR ds:[rsi]
   14001b991:	je     0x14001b9d3
   14001b993:	rex
   14001b994:	rex pop rdx
   14001b996:	add    BYTE PTR [rax],al
   14001b998:	rex.WB sbb BYTE PTR [r15],dil
   14001b99b:	je     0x14001ba06
   14001b99d:	ins    DWORD PTR es:[rdi],dx
   14001b99e:	gs jb  0x14001b9e6
   14001b9a1:	jbe    0x14001ba08
   14001b9a3:	outs   dx,BYTE PTR ds:[rsi]
   14001b9a4:	je     0x14001b9e6
   14001b9a6:	push   rcx
   14001b9a7:	rex.WRXB (bad) 
   14001b9a9:	push   0x65
   14001b9ab:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b9af:	rex.WRB
   14001b9b0:	rex.RB
   14001b9b1:	rex.B
   14001b9b2:	pop    r8
   14001b9b4:	push   rax
   14001b9b5:	rex.RB
   14001b9b6:	push   r14
   14001b9b8:	push   rcx
   14001b9b9:	push   rsp
   14001b9ba:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14001b9c1:	outs   dx,BYTE PTR ds:[rsi]
   14001b9c2:	je     0x14001ba04
   14001b9c4:	rex
   14001b9c5:	rex pop rdx
   14001b9c7:	add    BYTE PTR [rsi+0x9],ah
   14001b9ca:	(bad)  
   14001b9cb:	movsxd esi,DWORD PTR [rbp+0x73]
   14001b9ce:	je     0x14001ba3f
   14001b9d0:	ins    DWORD PTR es:[rdi],dx
   14001b9d1:	rex.RB jbe 0x14001ba39
   14001b9d4:	outs   dx,BYTE PTR ds:[rsi]
   14001b9d5:	je     0x14001ba17
   14001b9d7:	push   rcx
   14001b9d8:	rex.WRXB (bad) 
   14001b9da:	push   0x65
   14001b9dc:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001b9e0:	rex.WRB
   14001b9e1:	rex.RB
   14001b9e2:	rex.B
   14001b9e3:	pop    r8
   14001b9e5:	push   rax
   14001b9e6:	rex.RB
   14001b9e7:	push   r14
   14001b9e9:	push   rcx
   14001b9ea:	rex.RB jbe 0x14001ba52
   14001b9ed:	outs   dx,BYTE PTR ds:[rsi]
   14001b9ee:	je     0x14001ba30
   14001b9f0:	rex
   14001b9f1:	rex pop rdx
   14001b9f3:	add    BYTE PTR [rbp+0x6f633f08],al
   14001b9f9:	outs   dx,BYTE PTR ds:[rsi]
   14001b9fa:	outs   dx,BYTE PTR ds:[rsi]
   14001b9fb:	movsxd esi,DWORD PTR gs:[rsi+rcx*2+0x6f]
   14001ba00:	je     0x14001ba6b
   14001ba02:	data16 jns 0x14001ba45
   14001ba05:	push   rcx
   14001ba06:	rex.WRXB (bad) 
   14001ba08:	push   0x65
   14001ba0a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ba0e:	rex.WRB
   14001ba0f:	rex.RB
   14001ba10:	rex.B
   14001ba11:	pop    r8
   14001ba13:	rex.B
   14001ba14:	rex.RB
   14001ba15:	rex.X push rsi
   14001ba17:	push   rcx
   14001ba18:	rex.WRB
   14001ba19:	gs je  0x14001ba7d
   14001ba1c:	rex.WRB
   14001ba1d:	gs je  0x14001ba88
   14001ba20:	outs   dx,DWORD PTR ds:[rsi]
   14001ba21:	fs rex
   14001ba23:	rex
   14001ba24:	rex pop rdx
   14001ba26:	add    BYTE PTR [rax],al
   14001ba28:	jge    0x14001ba34
   14001ba2a:	(bad)  
   14001ba2b:	imul   esi,DWORD PTR fs:[rbx+0x63],0x656e6e6f
   14001ba33:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   14001ba37:	je     0x14001baa2
   14001ba39:	data16 jns 0x14001ba7c
   14001ba3c:	push   rcx
   14001ba3d:	rex.WRXB (bad) 
   14001ba3f:	push   0x65
   14001ba41:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ba45:	rex.WRB
   14001ba46:	rex.RB
   14001ba47:	rex.B
   14001ba48:	pop    r8
   14001ba4a:	rex.B
   14001ba4b:	rex.RB
   14001ba4c:	rex.X push rsi
   14001ba4e:	push   rcx
   14001ba4f:	rex.WRB
   14001ba50:	gs je  0x14001bab4
   14001ba53:	rex.WRB
   14001ba54:	gs je  0x14001babf
   14001ba57:	outs   dx,DWORD PTR ds:[rsi]
   14001ba58:	fs rex
   14001ba5a:	rex
   14001ba5b:	rex pop rdx
   14001ba5d:	add    bh,ah
   14001ba5f:	(bad)  
   14001ba60:	(bad)  
   14001ba61:	movsxd ebp,DWORD PTR [rax+0x69]
   14001ba64:	ins    BYTE PTR es:[rdi],dx
   14001ba65:	fs rex.RB jbe 0x14001bace
   14001ba69:	outs   dx,BYTE PTR ds:[rsi]
   14001ba6a:	je     0x14001baac
   14001ba6c:	push   rcx
   14001ba6d:	rex.WRXB (bad) 
   14001ba6f:	push   0x65
   14001ba71:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001ba75:	rex.WRB
   14001ba76:	rex.RB
   14001ba77:	rex.B
   14001ba78:	pop    r8
   14001ba7a:	push   rax
   14001ba7b:	rex.RB
   14001ba7c:	push   r14
   14001ba7e:	push   rcx
   14001ba7f:	rex.XB push 0x45646c69
   14001ba85:	jbe    0x14001baec
   14001ba87:	outs   dx,BYTE PTR ds:[rsi]
   14001ba88:	je     0x14001baca
   14001ba8a:	rex
   14001ba8b:	rex pop rdx
   14001ba8d:	add    BYTE PTR [rdi+rcx*1+0x6e616d3f],cl
   14001ba94:	push   0x61747461
   14001ba99:	outs   dx,BYTE PTR ds:[rsi]
   14001ba9a:	rex.WR
   14001ba9b:	outs   dx,BYTE PTR gs:[rsi]
   14001ba9d:	addr32 je 0x14001bb08
   14001baa0:	rex push rcx
   14001baa2:	push   rax
   14001baa3:	outs   dx,DWORD PTR ds:[rsi]
   14001baa4:	imul   ebp,DWORD PTR [rsi+0x74],0x51404046
   14001baab:	rex.RB
   14001baac:	rex.X
   14001baad:	rex.B
   14001baae:	rex.WRX pop rax
   14001bab0:	pop    rdx
   14001bab1:	add    BYTE PTR [rcx+0x69643f0a],cl
   14001bab7:	jae    0x14001bb29
   14001bab9:	outs   dx,DWORD PTR ds:[rsi]
   14001baba:	jae    0x14001bb21
   14001babc:	rex push rcx
   14001babe:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001bac6:	rex
   14001bac7:	rex push rbx
   14001bac9:	pop    r8
   14001bacb:	push   rax
   14001bacc:	rex.RB
   14001bacd:	push   r13
   14001bacf:	rex.R (bad) 
   14001bad1:	je     0x14001bb34
   14001bad3:	rex xor DWORD PTR [rax+0x40],eax
   14001bad7:	pop    rdx
   14001bad8:	add    BYTE PTR [rax],al
   14001bada:	test   eax,0x6c613f06
   14001badf:	ins    BYTE PTR es:[rdi],dx
   14001bae0:	outs   dx,DWORD PTR ds:[rsi]
   14001bae1:	movsxd esp,DWORD PTR [rcx+0x74]
   14001bae4:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14001bae7:	fs gs rex push rcx
   14001baeb:	rex.W (bad) 
   14001baed:	jae    0x14001bb57
   14001baef:	rex.R (bad) 
   14001baf1:	je     0x14001bb54
   14001baf3:	rex
   14001baf4:	rex push rcx
   14001baf6:	rex.RB
   14001baf7:	rex.B
   14001baf8:	push   r8
   14001bafa:	rex.RB
   14001bafb:	pop    r8
   14001bafd:	rex.W
   14001bafe:	rex pop rdx
   14001bb00:	add    BYTE PTR [rax],al
   14001bb02:	icebp  
   14001bb03:	(bad)  
   14001bb04:	(bad)  
   14001bb05:	movsxd ebp,DWORD PTR [rax+0x6f]
   14001bb08:	jo     0x14001bb4a
   14001bb0a:	push   rcx
   14001bb0b:	push   rbx
   14001bb0c:	je     0x14001bb80
   14001bb0e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001bb15:	rex.B
   14001bb16:	pop    r8
   14001bb18:	rex.W
   14001bb19:	rex pop rdx
   14001bb1b:	add    ah,al
   14001bb1d:	adc    BYTE PTR [rdi],bh
   14001bb1f:	outs   dx,BYTE PTR ds:[rsi]
   14001bb20:	jne    0x14001bb8f
   14001bb22:	(bad)  
   14001bb23:	gs jb  0x14001bb66
   14001bb26:	push   rcx
   14001bb27:	push   rbx
   14001bb28:	je     0x14001bb9c
   14001bb2a:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001bb31:	(bad)  
   14001bb32:	push   r14
   14001bb34:	xor    DWORD PTR [rax+0x4e],eax
   14001bb37:	rex.R
   14001bb38:	rex.W
   14001bb39:	rex pop rdx
   14001bb3b:	add    BYTE PTR [rdi+0x0],dl
   14001bb3e:	(bad)  
   14001bb3f:	(bad)  
   14001bb40:	xor    BYTE PTR [rcx+0x43],dl
   14001bb43:	push   0x40407261
   14001bb48:	push   rcx
   14001bb49:	rex.RB
   14001bb4a:	rex.B
   14001bb4b:	rex.B
   14001bb4c:	rex push rbp
   14001bb4e:	push   rcx
   14001bb4f:	rex.WR (bad) 
   14001bb51:	je     0x14001bbbc
   14001bb53:	outs   dx,BYTE PTR ds:[rsi]
   14001bb54:	xor    DWORD PTR [rbx+0x68],eax
   14001bb57:	(bad)  
   14001bb58:	jb     0x14001bb9a
   14001bb5a:	rex
   14001bb5b:	rex pop rdx
   14001bb5d:	add    BYTE PTR [rsi+0x303f3f01],dl
   14001bb63:	push   rcx
   14001bb64:	push   rbx
   14001bb65:	je     0x14001bbd9
   14001bb67:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001bb6e:	rex.B
   14001bb6f:	rex.B
   14001bb70:	rex push rsi
   14001bb72:	push   rcx
   14001bb73:	rex.WR (bad) 
   14001bb75:	je     0x14001bbe0
   14001bb77:	outs   dx,BYTE PTR ds:[rsi]
   14001bb78:	xor    DWORD PTR [rbx+0x74],edx
   14001bb7b:	jb     0x14001bbe6
   14001bb7d:	outs   dx,BYTE PTR ds:[rsi]
   14001bb7e:	addr32 rex
   14001bb80:	rex
   14001bb81:	rex pop rdx
   14001bb83:	add    BYTE PTR [rdx+0x18],ch
   14001bb86:	(bad)  
   14001bb87:	je     0x14001bbf8
   14001bb89:	rex.XB jne 0x14001bbee
   14001bb8c:	imul   esp,DWORD PTR [rbx+0x53],0x6e696c70
   14001bb93:	gs rex push rcx
   14001bb96:	rex.RB (bad) 
   14001bb98:	jae    0x14001bc03
   14001bb9a:	outs   dx,BYTE PTR ds:[rsi]
   14001bb9b:	addr32 rex.XB jne 0x14001bc11
   14001bb9f:	jbe    0x14001bc06
   14001bba1:	rex
   14001bba2:	rex push rcx
   14001bba4:	rex.RB
   14001bba5:	rex.X
   14001bba6:	rex.B (bad) 
   14001bba8:	push   r14
   14001bbaa:	(bad)  
   14001bbab:	and    al,0x51
   14001bbad:	push   rsi
   14001bbae:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bbb3:	rex push rsi
   14001bbb5:	push   rcx
   14001bbb6:	push   rax
   14001bbb7:	outs   dx,DWORD PTR ds:[rsi]
   14001bbb8:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bbbf:	rex pop rax
   14001bbc1:	pop    rdx
   14001bbc2:	add    BYTE PTR [rax],al
   14001bbc4:	add    edi,DWORD PTR ss:[rdi]
   14001bbc7:	(bad)  
   14001bbc8:	xor    al,0x51
   14001bbca:	rex.RB (bad) 
   14001bbcc:	jae    0x14001bc37
   14001bbce:	outs   dx,BYTE PTR ds:[rsi]
   14001bbcf:	addr32 rex.XB jne 0x14001bc45
   14001bbd3:	jbe    0x14001bc3a
   14001bbd5:	rex
   14001bbd6:	rex push rcx
   14001bbd8:	rex.RB
   14001bbd9:	rex.B
   14001bbda:	rex.B
   14001bbdb:	rex.B
   14001bbdc:	rex.RB
   14001bbdd:	push   r14
   14001bbdf:	xor    BYTE PTR [rax+0x41],al
   14001bbe2:	rex.RB
   14001bbe3:	rex.X push rsi
   14001bbe5:	xor    BYTE PTR [rax+0x40],al
   14001bbe8:	pop    rdx
   14001bbe9:	add    BYTE PTR [rsp+rax*1+0x3f],ch
   14001bbed:	(bad)  
   14001bbee:	cmp    BYTE PTR [rcx+0x45],dl
   14001bbf1:	(bad)  
   14001bbf2:	jae    0x14001bc5d
   14001bbf4:	outs   dx,BYTE PTR ds:[rsi]
   14001bbf5:	addr32 rex.XB jne 0x14001bc6b
   14001bbf9:	jbe    0x14001bc60
   14001bbfb:	rex
   14001bbfc:	rex push rcx
   14001bbfe:	rex.RB
   14001bbff:	rex.X
   14001bc00:	pop    r15
   14001bc02:	rex.WRX
   14001bc03:	rex.B
   14001bc04:	rex.RB
   14001bc05:	rex.X push rsi
   14001bc07:	xor    BYTE PTR [rax+0x40],al
   14001bc0a:	pop    rdx
   14001bc0b:	add    bl,ch
   14001bc0d:	adc    DWORD PTR [rdi],edi
   14001bc0f:	jno    0x14001bc59
   14001bc11:	(bad)  
   14001bc12:	jae    0x14001bc7c
   14001bc14:	rex
   14001bc15:	rex pop rcx
   14001bc17:	rex.B
   14001bc18:	rex.WB
   14001bc19:	rex.B
   14001bc1a:	rex.RB
   14001bc1b:	rex.X push rsi
   14001bc1d:	push   rcx
   14001bc1e:	push   rbx
   14001bc1f:	je     0x14001bc93
   14001bc21:	imul   ebp,DWORD PTR [rsi+0x67],0x40494040
   14001bc28:	pop    rdx
   14001bc29:	add    BYTE PTR [rdi],dl
   14001bc2b:	adc    BYTE PTR [rdi],bh
   14001bc2d:	ins    DWORD PTR es:[rdi],dx
   14001bc2e:	imul   esp,DWORD PTR [rax+rax*2+0x3f],0x65565124
   14001bc36:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14001bc3a:	rex push rsi
   14001bc3c:	push   rcx
   14001bc3d:	push   rax
   14001bc3e:	outs   dx,DWORD PTR ds:[rsi]
   14001bc3f:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bc46:	rex push rcx
   14001bc48:	rex.RB
   14001bc49:	rex.X
   14001bc4a:	rex.B (bad) 
   14001bc4c:	push   r14
   14001bc4e:	xor    DWORD PTR [rax+0x48],eax
   14001bc51:	rex.W
   14001bc52:	rex pop rdx
   14001bc54:	add    BYTE PTR [rax],al
   14001bc56:	push   rbx
   14001bc57:	or     bh,BYTE PTR [rdi]
   14001bc59:	fs gs je 0x14001bcbe
   14001bc5d:	movsxd ebp,DWORD PTR [rax+0x40]
   14001bc60:	push   rcx
   14001bc61:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001bc69:	rex
   14001bc6a:	rex push rcx
   14001bc6c:	rex.RB
   14001bc6d:	rex.B
   14001bc6e:	push   r8
   14001bc70:	rex.RB
   14001bc71:	push   r13
   14001bc73:	rex.R (bad) 
   14001bc75:	je     0x14001bcd8
   14001bc77:	rex xor DWORD PTR [rax+0x48],eax
   14001bc7b:	rex pop rdx
   14001bc7d:	add    BYTE PTR [rdx+0x303f3f00],dl
   14001bc83:	push   rcx
   14001bc84:	rex.RB (bad) 
   14001bc86:	jae    0x14001bcf1
   14001bc88:	outs   dx,BYTE PTR ds:[rsi]
   14001bc89:	addr32 rex.XB jne 0x14001bcff
   14001bc8d:	jbe    0x14001bcf4
   14001bc8f:	rex
   14001bc90:	rex push rcx
   14001bc92:	rex.RB
   14001bc93:	rex.B
   14001bc94:	rex.B
   14001bc95:	rex push rdi
   14001bc97:	xor    al,0x54
   14001bc99:	jns    0x14001bd0b
   14001bc9b:	xor    BYTE PTR gs:[rax+0x40],al
   14001bca0:	pop    rdx
   14001bca1:	add    BYTE PTR [rdx],dl
   14001bca3:	or     al,0x3f
   14001bca5:	data16 jb 0x14001bd0d
   14001bca8:	gs pop rdi
   14001bcaa:	push   0x65706c65
   14001bcaf:	jb     0x14001bcf1
   14001bcb1:	push   rcx
   14001bcb2:	rex.W (bad) 
   14001bcb4:	jae    0x14001bd1e
   14001bcb6:	rex.R (bad) 
   14001bcb8:	je     0x14001bd1b
   14001bcba:	rex
   14001bcbb:	rex push rcx
   14001bcbd:	rex.RB
   14001bcbe:	rex.B
   14001bcbf:	pop    r8
   14001bcc1:	push   rax
   14001bcc2:	ss pop r8
   14001bcc5:	push   rax
   14001bcc6:	rex.RB
   14001bcc7:	push   r13
   14001bcc9:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001bccb:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   14001bcd1:	pop    rdx
   14001bcd2:	rex pop rdx
   14001bcd4:	add    BYTE PTR [rax],al
   14001bcd6:	pop    rbx
   14001bcd7:	or     bh,BYTE PTR [rdi]
   14001bcd9:	fs gs je 0x14001bd3e
   14001bcdd:	movsxd ebp,DWORD PTR [rax+0x5f]
   14001bce0:	addr32 jb 0x14001bd52
   14001bce3:	ja     0x14001bd25
   14001bce5:	push   rcx
   14001bce6:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001bcee:	rex
   14001bcef:	rex push rcx
   14001bcf1:	rex.RB
   14001bcf2:	rex.B
   14001bcf3:	push   r8
   14001bcf5:	rex.RB
   14001bcf6:	push   r13
   14001bcf8:	rex.R (bad) 
   14001bcfa:	je     0x14001bd5d
   14001bcfc:	rex xor DWORD PTR [rax+0x50],eax
   14001bd00:	rex.RB
   14001bd01:	rex.B
   14001bd02:	rex.W
   14001bd03:	rex.W
   14001bd04:	rex pop rdx
   14001bd06:	add    BYTE PTR [rax],al
   14001bd08:	push   rsp
   14001bd09:	add    DWORD PTR [rdi],edi
   14001bd0b:	(bad)  
   14001bd0c:	xor    BYTE PTR [rcx+0x52],dl
   14001bd0f:	movsxd esi,DWORD PTR gs:[rsi+rax*2+0x40]
   14001bd14:	rex push rcx
   14001bd16:	rex.RB
   14001bd17:	rex.B
   14001bd18:	rex.B
   14001bd19:	rex
   14001bd1a:	rex.WRX
   14001bd1b:	rex.WRX
   14001bd1c:	rex.WRX
   14001bd1d:	rex.WRX
   14001bd1e:	rex pop rdx
   14001bd20:	add    BYTE PTR [rax],al
   14001bd22:	ficomp DWORD PTR [rax]
   14001bd24:	(bad)  
   14001bd25:	je     0x14001bd96
   14001bd27:	push   rax
   14001bd28:	outs   dx,DWORD PTR ds:[rsi]
   14001bd29:	imul   ebp,DWORD PTR [rsi+0x74],0x6f505140
   14001bd30:	imul   ebp,DWORD PTR [rsi+0x74],0x51404046
   14001bd37:	rex.RB
   14001bd38:	rex.X
   14001bd39:	rex.B (bad) 
   14001bd3b:	push   r14
   14001bd3d:	push   rcx
   14001bd3e:	push   rax
   14001bd3f:	outs   dx,DWORD PTR ds:[rsi]
   14001bd40:	imul   ebp,DWORD PTR [rsi+0x74],0x5a584040
   14001bd47:	add    BYTE PTR [rdi+0x1],cl
   14001bd4a:	(bad)  
   14001bd4b:	(bad)  
   14001bd4c:	xor    BYTE PTR [rcx+0x52],dl
   14001bd4f:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14001bd54:	push   rcx
   14001bd55:	rex.RB
   14001bd56:	rex.B
   14001bd57:	rex.B
   14001bd58:	rex
   14001bd59:	rex.W
   14001bd5a:	rex.W
   14001bd5b:	rex.W
   14001bd5c:	rex.W
   14001bd5d:	rex pop rdx
   14001bd5f:	add    BYTE PTR [rbx+0x6],bl
   14001bd62:	(bad)  
   14001bd63:	(bad)  
   14001bd64:	fs fs rex.XB jne 0x14001bdcb
   14001bd69:	imul   esp,DWORD PTR [rbx+0x42],0x65697a65
   14001bd70:	jb     0x14001bdc5
   14001bd72:	gs ins DWORD PTR es:[edi],dx
   14001bd75:	outs   dx,BYTE PTR gs:[rsi]
   14001bd77:	je     0x14001bdb9
   14001bd79:	push   rcx
   14001bd7a:	rex.RB (bad) 
   14001bd7c:	jae    0x14001bde7
   14001bd7e:	outs   dx,BYTE PTR ds:[rsi]
   14001bd7f:	addr32 rex.XB jne 0x14001bdf5
   14001bd83:	jbe    0x14001bdea
   14001bd85:	rex
   14001bd86:	rex push rcx
   14001bd88:	rex.RB
   14001bd89:	rex.B
   14001bd8a:	pop    r8
   14001bd8c:	rex.B
   14001bd8d:	rex.RB
   14001bd8e:	rex.X push rsi
   14001bd90:	push   rcx
   14001bd91:	push   rax
   14001bd92:	outs   dx,DWORD PTR ds:[rsi]
   14001bd93:	imul   ebp,DWORD PTR [rsi+0x74],0x30404046
   14001bd9a:	xor    BYTE PTR [rax+0x5a],al
   14001bd9d:	add    al,cl
   14001bd9f:	add    al,0x3f
   14001bda1:	(bad)  
   14001bda2:	rex.B (bad) 
   14001bda4:	and    al,0x51
   14001bda6:	push   rsi
   14001bda7:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bdac:	rex push rsi
   14001bdae:	push   rcx
   14001bdaf:	push   rax
   14001bdb0:	outs   dx,DWORD PTR ds:[rsi]
   14001bdb1:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bdb8:	rex push rcx
   14001bdba:	rex.RB
   14001bdbb:	rex.B
   14001bdbc:	rex.B
   14001bdbd:	rex.B
   14001bdbe:	rex.RB
   14001bdbf:	push   r14
   14001bdc1:	push   rcx
   14001bdc2:	push   rax
   14001bdc3:	outs   dx,DWORD PTR ds:[rsi]
   14001bdc4:	imul   ebp,DWORD PTR [rsi+0x74],0x48404046
   14001bdcb:	rex pop rdx
   14001bdcd:	add    BYTE PTR [rbx+0x616d3f0f],cl
   14001bdd3:	outs   dx,BYTE PTR ds:[rsi]
   14001bdd4:	push   0x61747461
   14001bdd9:	outs   dx,BYTE PTR ds:[rsi]
   14001bdda:	rex.WR
   14001bddb:	outs   dx,BYTE PTR gs:[rsi]
   14001bddd:	addr32 je 0x14001be48
   14001bde0:	rex push rcx
   14001bde2:	push   rax
   14001bde3:	outs   dx,DWORD PTR ds:[rsi]
   14001bde4:	imul   ebp,DWORD PTR [rsi+0x74],0x45514040
   14001bdeb:	rex.X
   14001bdec:	rex.B
   14001bded:	rex.W pop rax
   14001bdef:	pop    rdx
   14001bdf0:	add    BYTE PTR [rax],al
   14001bdf2:	mov    BYTE PTR [rsi],0x3f
   14001bdf5:	(bad)  
   14001bdf6:	jo     0x14001be68
   14001bdf8:	outs   dx,BYTE PTR gs:[rsi]
   14001bdfa:	fs rex push rcx
   14001bdfd:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001be05:	rex
   14001be06:	rex push rcx
   14001be08:	rex.RB
   14001be09:	rex.B
   14001be0a:	push   r8
   14001be0c:	rex.RB
   14001be0d:	push   r8
   14001be0f:	rex.RB
   14001be10:	pop    r8
   14001be12:	pop    rax
   14001be13:	pop    rdx
   14001be14:	add    BYTE PTR [rax],al
   14001be16:	pop    rsi
   14001be17:	or     bh,BYTE PTR [rdi]
   14001be19:	fs gs je 0x14001be7e
   14001be1d:	movsxd ebp,DWORD PTR [rax+0x5f]
   14001be20:	push   0x65706c65
   14001be25:	jb     0x14001be67
   14001be27:	push   rcx
   14001be28:	rex.W (bad) 
   14001be2a:	jae    0x14001be94
   14001be2c:	rex.R (bad) 
   14001be2e:	je     0x14001be91
   14001be30:	rex
   14001be31:	rex push rcx
   14001be33:	rex.RB
   14001be34:	rex.B
   14001be35:	push   r8
   14001be37:	rex.RB
   14001be38:	push   r13
   14001be3a:	xor    DWORD PTR [rax+0x50],eax
   14001be3d:	ss pop r8
   14001be40:	push   rax
   14001be41:	rex.RB
   14001be42:	push   r13
   14001be44:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001be46:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   14001be4c:	rex.RB
   14001be4d:	pop    r8
   14001be4f:	rex pop rdx
   14001be51:	push   rax
   14001be52:	ss pop r8
   14001be55:	xor    BYTE PTR [rax+0x5a],al
   14001be58:	rex.W
   14001be59:	rex.W
   14001be5a:	rex pop rdx
   14001be5c:	add    BYTE PTR [rax],al
   14001be5e:	je     0x14001be73
   14001be60:	(bad)  
   14001be61:	jb     0x14001bec8
   14001be63:	(bad)  
   14001be64:	ins    BYTE PTR es:[rdi],dx
   14001be65:	ins    BYTE PTR es:[rdi],dx
   14001be66:	outs   dx,DWORD PTR ds:[rsi]
   14001be67:	movsxd eax,DWORD PTR [rax+0x51]
   14001be6a:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001be72:	rex
   14001be73:	rex push rcx
   14001be75:	rex.RB
   14001be76:	rex.B
   14001be77:	pop    r8
   14001be79:	rex.W
   14001be7a:	rex pop rdx
   14001be7c:	add    BYTE PTR [rax],al
   14001be7e:	ficomp WORD PTR [rdx]
   14001be80:	(bad)  
   14001be81:	ja     0x14001beec
   14001be83:	ins    BYTE PTR es:[rdi],dx
   14001be84:	ins    BYTE PTR es:[rdi],dx
   14001be85:	rex.RXB jb 0x14001bef7
   14001be88:	ja     0x14001beca
   14001be8a:	push   rcx
   14001be8b:	rex.W (bad) 
   14001be8d:	jae    0x14001bef7
   14001be8f:	rex.R (bad) 
   14001be91:	je     0x14001bef4
   14001be93:	rex
   14001be94:	rex push rcx
   14001be96:	rex.RB
   14001be97:	rex.B
   14001be98:	pop    r15
   14001be9a:	rex.WRX pop rax
   14001be9c:	pop    rdx
   14001be9d:	add    BYTE PTR [rdi],dl
   14001be9f:	or     al,0x3f
   14001bea1:	data16 jb 0x14001bf13
   14001bea4:	ins    DWORD PTR es:[rdi],dx
   14001bea5:	rex.B jae 0x14001bf0b
   14001bea8:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   14001beaf:	gs jb  0x14001bef2
   14001beb2:	push   rcx
   14001beb3:	push   rbx
   14001beb4:	je     0x14001bf28
   14001beb6:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   14001bebd:	push   rax
   14001bebe:	rex.RB
   14001bebf:	push   r13
   14001bec1:	(bad)  
   14001bec2:	and    al,0x51
   14001bec4:	push   rsp
   14001bec5:	jns    0x14001bf37
   14001bec7:	gs fs rex.B jb 0x14001bf3e
   14001becc:	(bad)  
   14001becd:	jns    0x14001bf13
   14001becf:	(bad)  
   14001bed0:	je     0x14001bf33
   14001bed2:	rex
   14001bed3:	rex.RXB
   14001bed4:	rex
   14001bed5:	rex push rax
   14001bed7:	rex.RB
   14001bed8:	rex.X
   14001bed9:	rex.R
   14001beda:	rex.W
   14001bedb:	rex pop rdx
   14001bedd:	add    BYTE PTR [rbx+0x70613f06],bh
   14001bee3:	jo     0x14001bf4a
   14001bee5:	outs   dx,BYTE PTR ds:[rsi]
   14001bee6:	fs rex (bad) 
   14001bee9:	and    al,0x51
   14001beeb:	push   rsi
   14001beec:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bef1:	rex push rsi
   14001bef3:	push   rcx
   14001bef4:	push   rax
   14001bef5:	outs   dx,DWORD PTR ds:[rsi]
   14001bef6:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001befd:	rex push rcx
   14001beff:	rex.RB
   14001bf00:	rex.B
   14001bf01:	pop    r8
   14001bf03:	rex.B
   14001bf04:	rex.RB
   14001bf05:	rex.X push rsi
   14001bf07:	push   rcx
   14001bf08:	push   rax
   14001bf09:	outs   dx,DWORD PTR ds:[rsi]
   14001bf0a:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bf11:	pop    rdx
   14001bf12:	add    BYTE PTR [rax],al
   14001bf14:	or     DWORD PTR [rax],eax
   14001bf16:	(bad)  
   14001bf17:	(bad)  
   14001bf18:	xor    BYTE PTR [rdi],bh
   14001bf1a:	and    al,0x51
   14001bf1c:	push   rsi
   14001bf1d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bf22:	rex push rsi
   14001bf24:	push   rcx
   14001bf25:	push   rax
   14001bf26:	outs   dx,DWORD PTR ds:[rsi]
   14001bf27:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bf2e:	rex push rcx
   14001bf30:	rex.RB
   14001bf31:	rex.B
   14001bf32:	rex.B
   14001bf33:	rex pop rax
   14001bf35:	pop    rdx
   14001bf36:	add    BYTE PTR [rax],al
   14001bf38:	mov    esi,0x65723f13
   14001bf3d:	ins    DWORD PTR es:[rdi],dx
   14001bf3e:	outs   dx,DWORD PTR ds:[rsi]
   14001bf3f:	jbe    0x14001bfa6
   14001bf41:	rex (bad) 
   14001bf43:	and    al,0x51
   14001bf45:	push   rsi
   14001bf46:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bf4b:	rex push rsi
   14001bf4d:	push   rcx
   14001bf4e:	push   rax
   14001bf4f:	outs   dx,DWORD PTR ds:[rsi]
   14001bf50:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bf57:	rex push rcx
   14001bf59:	rex.RB
   14001bf5a:	rex.B
   14001bf5b:	pop    r8
   14001bf5d:	rex.W
   14001bf5e:	rex.W
   14001bf5f:	rex pop rdx
   14001bf61:	add    BYTE PTR [rbp+0xd],al
   14001bf64:	(bad)  
   14001bf65:	imul   ebp,DWORD PTR [rsi+0x73],0x40747265
   14001bf6c:	(bad)  
   14001bf6d:	and    al,0x51
   14001bf6f:	push   rsi
   14001bf70:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001bf75:	rex push rsi
   14001bf77:	push   rcx
   14001bf78:	push   rax
   14001bf79:	outs   dx,DWORD PTR ds:[rsi]
   14001bf7a:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bf81:	rex push rcx
   14001bf83:	rex.RB
   14001bf84:	rex.B
   14001bf85:	pop    r8
   14001bf87:	rex.W
   14001bf88:	rex.B
   14001bf89:	rex.RB
   14001bf8a:	rex.X push rsi
   14001bf8c:	push   rcx
   14001bf8d:	push   rax
   14001bf8e:	outs   dx,DWORD PTR ds:[rsi]
   14001bf8f:	imul   ebp,DWORD PTR [rsi+0x74],0x40404046
   14001bf96:	pop    rdx
   14001bf97:	add    BYTE PTR [rax+0x6f743f18],al
   14001bf9d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001bf9f:	jne    0x14001c003
   14001bfa1:	ins    BYTE PTR es:[rdi],dx
   14001bfa2:	gs rex push rcx
   14001bfa5:	push   rbx
   14001bfa6:	je     0x14001c01a
   14001bfa8:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001bfaf:	rex.X
   14001bfb0:	rex.B
   14001bfb1:	rex.WRX push rax
   14001bfb3:	rex.RB
   14001bfb4:	pop    r15
   14001bfb6:	rex.WRX
   14001bfb7:	rex pop rdx
   14001bfb9:	add    BYTE PTR [rdi],ch
   14001bfbb:	(bad)  
   14001bfbc:	(bad)  
   14001bfbd:	jae    0x14001c02f
   14001bfbf:	ins    BYTE PTR es:[rdi],dx
   14001bfc0:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   14001bfc8:	outs   dx,BYTE PTR ds:[rsi]
   14001bfc9:	addr32 rex
   14001bfcb:	rex push rcx
   14001bfcd:	rex.RB
   14001bfce:	rex.X
   14001bfcf:	rex.B (bad) 
   14001bfd1:	push   r14
   14001bfd3:	push   rcx
   14001bfd4:	push   rbx
   14001bfd5:	je     0x14001c049
   14001bfd7:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001bfde:	rex
   14001bfdf:	rex push rsi
   14001bfe1:	push   rcx
   14001bfe2:	rex.XB push 0x40407261
   14001bfe8:	push   rdi
   14001bfe9:	xor    al,0x53
   14001bfeb:	jo     0x14001c059
   14001bfed:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   14001bff5:	outs   dx,DWORD PTR ds:[rsi]
   14001bff6:	jb     0x14001c038
   14001bff8:	xor    DWORD PTR [rax+0x57],eax
   14001bffb:	xor    al,0x43
   14001bffd:	(bad)  
   14001bffe:	jae    0x14001c065
   14001c000:	push   rbx
   14001c001:	outs   dx,BYTE PTR gs:[rsi]
   14001c003:	jae    0x14001c06e
   14001c005:	je     0x14001c070
   14001c007:	jbe    0x14001c072
   14001c009:	je     0x14001c084
   14001c00b:	rex push rcx
   14001c00d:	je     0x14001c04f
   14001c00f:	rex
   14001c010:	rex pop rdx
   14001c012:	add    BYTE PTR [rax],al
   14001c014:	rcl    BYTE PTR [rbx],1
   14001c016:	(bad)  
   14001c017:	jb     0x14001c07e
   14001c019:	ins    DWORD PTR es:[rdi],dx
   14001c01a:	outs   dx,DWORD PTR ds:[rsi]
   14001c01b:	jbe    0x14001c082
   14001c01d:	rex push rcx
   14001c01f:	push   rbx
   14001c020:	je     0x14001c094
   14001c022:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c029:	rex.B
   14001c02a:	rex.B
   14001c02b:	rex.B
   14001c02c:	rex.RB
   14001c02d:	push   r14
   14001c02f:	xor    DWORD PTR [rax+0x48],eax
   14001c032:	rex.W
   14001c033:	rex pop rdx
   14001c035:	add    BYTE PTR [rip+0x6e653f0b],al        # 0x1ae66ff46
   14001c03b:	fs jae 0x14001c095
   14001c03e:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001c046:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c04d:	rex.X
   14001c04e:	pop    r15
   14001c050:	rex.WRX push rsi
   14001c052:	push   rcx
   14001c053:	rex.XB push 0x40407261
   14001c059:	push   rdi
   14001c05a:	xor    al,0x43
   14001c05c:	(bad)  
   14001c05d:	jae    0x14001c0c4
   14001c05f:	push   rbx
   14001c060:	outs   dx,BYTE PTR gs:[rsi]
   14001c062:	jae    0x14001c0cd
   14001c064:	je     0x14001c0cf
   14001c066:	jbe    0x14001c0d1
   14001c068:	je     0x14001c0e3
   14001c06a:	rex push rcx
   14001c06c:	je     0x14001c0ae
   14001c06e:	rex
   14001c06f:	rex pop rdx
   14001c071:	add    BYTE PTR [rcx+0x17],dh
   14001c074:	(bad)  
   14001c075:	jae    0x14001c0eb
   14001c077:	(bad)  
   14001c078:	jb     0x14001c0ee
   14001c07a:	jae    0x14001c0d3
   14001c07c:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001c084:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c08b:	rex.X
   14001c08c:	pop    r15
   14001c08e:	rex.WRX push rsi
   14001c090:	push   rcx
   14001c091:	rex.XB push 0x40407261
   14001c097:	push   rdi
   14001c098:	xor    al,0x43
   14001c09a:	(bad)  
   14001c09b:	jae    0x14001c102
   14001c09d:	push   rbx
   14001c09e:	outs   dx,BYTE PTR gs:[rsi]
   14001c0a0:	jae    0x14001c10b
   14001c0a2:	je     0x14001c10d
   14001c0a4:	jbe    0x14001c10f
   14001c0a6:	je     0x14001c121
   14001c0a8:	rex push rcx
   14001c0aa:	je     0x14001c0ec
   14001c0ac:	rex
   14001c0ad:	rex pop rdx
   14001c0af:	add    BYTE PTR [rcx],cl
   14001c0b1:	sbb    bh,BYTE PTR [rdi]
   14001c0b3:	je     0x14001c127
   14001c0b5:	imul   ebp,DWORD PTR [rbp+0x6d],0x51406465
   14001c0bc:	push   rbx
   14001c0bd:	je     0x14001c131
   14001c0bf:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c0c6:	rex.X
   14001c0c7:	rex.B (bad) 
   14001c0c9:	push   r14
   14001c0cb:	xor    DWORD PTR [rax+0x58],eax
   14001c0ce:	pop    rdx
   14001c0cf:	add    cl,ch
   14001c0d1:	add    bh,BYTE PTR [rdi]
   14001c0d3:	(bad)  
   14001c0d4:	xor    DWORD PTR [rcx+0x55],edx
   14001c0d7:	jb     0x14001c145
   14001c0d9:	rex
   14001c0da:	rex push rcx
   14001c0dc:	rex.RB
   14001c0dd:	rex.B
   14001c0de:	rex.B
   14001c0df:	rex pop rax
   14001c0e1:	pop    rdx
   14001c0e2:	add    BYTE PTR [rax],al
   14001c0e4:	fadd   DWORD PTR [rcx]
   14001c0e6:	(bad)  
   14001c0e7:	(bad)  
   14001c0e8:	xor    BYTE PTR [rcx+0x55],dl
   14001c0eb:	jb     0x14001c159
   14001c0ed:	rex
   14001c0ee:	rex push rcx
   14001c0f0:	rex.RB
   14001c0f1:	rex.B
   14001c0f2:	rex.B
   14001c0f3:	rex
   14001c0f4:	rex.B
   14001c0f5:	rex.RB
   14001c0f6:	rex.X push rsi
   14001c0f8:	push   rcx
   14001c0f9:	push   rbx
   14001c0fa:	je     0x14001c16e
   14001c0fc:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   14001c103:	push   rax
   14001c104:	(bad)  
   14001c105:	jb     0x14001c17a
   14001c107:	imul   ebp,DWORD PTR [rsi+0x67],0x65646f4d
   14001c10e:	xor    BYTE PTR [rax+0x40],al
   14001c112:	pop    rdx
   14001c113:	add    ch,ch
   14001c115:	(bad)  
   14001c116:	(bad)  
   14001c117:	(bad)  
   14001c118:	jb     0x14001c181
   14001c11a:	rex push rcx
   14001c11c:	push   rbx
   14001c11d:	je     0x14001c191
   14001c11f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c126:	rex.X
   14001c127:	rex.B (bad) 
   14001c129:	push   r14
   14001c12b:	xor    DWORD PTR [rax+0x4e],eax
   14001c12e:	rex.W
   14001c12f:	rex.R
   14001c130:	rex.W push rsi
   14001c132:	push   rcx
   14001c133:	rex.XB push 0x40407261
   14001c139:	rex pop rdx
   14001c13b:	add    BYTE PTR [rdx+0x2],cl
   14001c13e:	(bad)  
   14001c13f:	(bad)  
   14001c140:	xor    DWORD PTR [rbx+0x6f],eax
   14001c143:	outs   dx,BYTE PTR ds:[rsi]
   14001c144:	outs   dx,BYTE PTR ds:[rsi]
   14001c145:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c14a:	outs   dx,BYTE PTR ds:[rsi]
   14001c14b:	rex push rcx
   14001c14d:	rex.WRB
   14001c14e:	gs je  0x14001c1b2
   14001c151:	rex.WRXB (bad) 
   14001c153:	push   0x65
   14001c155:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c159:	push   rcx
   14001c15a:	rex.RB
   14001c15b:	rex.B
   14001c15c:	rex.B
   14001c15d:	rex pop rax
   14001c15f:	pop    rdx
   14001c160:	add    BYTE PTR [rax],al
   14001c162:	jg     0x14001c16c
   14001c164:	(bad)  
   14001c165:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001c168:	outs   dx,BYTE PTR ds:[rsi]
   14001c169:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14001c16e:	rex.WRXB (bad) 
   14001c170:	push   0x65
   14001c172:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c176:	push   rbx
   14001c177:	rex.B (bad) 
   14001c179:	push   r14
   14001c17b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c17d:	outs   dx,BYTE PTR ds:[rsi]
   14001c17e:	outs   dx,BYTE PTR ds:[rsi]
   14001c17f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c184:	outs   dx,BYTE PTR ds:[rsi]
   14001c185:	rex push rcx
   14001c187:	rex.WRB
   14001c188:	gs je  0x14001c1ec
   14001c18b:	rex.WRXB (bad) 
   14001c18d:	push   0x65
   14001c18f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c193:	push   rax
   14001c194:	rex.RB
   14001c195:	rex.X push rsi
   14001c197:	xor    DWORD PTR [rax+0x50],eax
   14001c19a:	rex.RB
   14001c19b:	rex.X
   14001c19c:	xor    BYTE PTR [rcx],r14b
   14001c19f:	push   rdi
   14001c1a0:	xor    al,0x43
   14001c1a2:	outs   dx,DWORD PTR ds:[rsi]
   14001c1a3:	outs   dx,BYTE PTR ds:[rsi]
   14001c1a4:	outs   dx,BYTE PTR ds:[rsi]
   14001c1a5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001c1aa:	outs   dx,BYTE PTR ds:[rsi]
   14001c1ab:	push   rsp
   14001c1ac:	jns    0x14001c21e
   14001c1ae:	gs rex push rcx
   14001c1b1:	je     0x14001c1f3
   14001c1b3:	rex
   14001c1b4:	rex pop rdx
   14001c1b6:	add    BYTE PTR [rax],al
   14001c1b8:	jmp    0x14001c1bc
   14001c1ba:	(bad)  
   14001c1bb:	(bad)  
   14001c1bc:	xor    DWORD PTR [rcx+0x56],edx
   14001c1bf:	(bad)  
   14001c1c0:	jb     0x14001c22b
   14001c1c2:	(bad)  
   14001c1c3:	outs   dx,BYTE PTR ds:[rsi]
   14001c1c4:	je     0x14001c206
   14001c1c6:	rex push rcx
   14001c1c8:	rex.RB
   14001c1c9:	rex.B
   14001c1ca:	rex.B
   14001c1cb:	rex pop rax
   14001c1cd:	pop    rdx
   14001c1ce:	add    BYTE PTR [rax],al
   14001c1d0:	(bad)  
   14001c1d1:	add    bh,BYTE PTR [rdi]
   14001c1d3:	(bad)  
   14001c1d4:	xor    BYTE PTR [rcx+0x56],dl
   14001c1d7:	(bad)  
   14001c1d8:	jb     0x14001c243
   14001c1da:	(bad)  
   14001c1db:	outs   dx,BYTE PTR ds:[rsi]
   14001c1dc:	je     0x14001c21e
   14001c1de:	rex push rcx
   14001c1e0:	rex.RB
   14001c1e1:	rex.B
   14001c1e2:	rex.B
   14001c1e3:	rex pop rax
   14001c1e5:	pop    rdx
   14001c1e6:	add    BYTE PTR [rax],al
   14001c1e8:	xchg   ebp,eax
   14001c1e9:	add    DWORD PTR [rdi],edi
   14001c1eb:	(bad)  
   14001c1ec:	xor    BYTE PTR [rcx+0x53],dl
   14001c1ef:	je     0x14001c263
   14001c1f1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001c1f8:	rex.B
   14001c1f9:	rex.B
   14001c1fa:	rex push rsi
   14001c1fc:	push   rcx
   14001c1fd:	rex.XB push 0x40407261
   14001c203:	rex pop rdx
   14001c205:	add    al,al
   14001c207:	adc    BYTE PTR [rdi],bh
   14001c209:	outs   dx,BYTE PTR ds:[rsi]
   14001c20a:	jne    0x14001c279
   14001c20c:	(bad)  
   14001c20d:	gs jb  0x14001c250
   14001c210:	push   rcx
   14001c211:	push   rbx
   14001c212:	je     0x14001c286
   14001c214:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14001c21b:	(bad)  
   14001c21c:	push   r14
   14001c21e:	xor    DWORD PTR [rax+0x48],eax
   14001c221:	rex.W
   14001c222:	rex pop rdx
   14001c224:	add    BYTE PTR [rax],al
   14001c226:	or     edx,DWORD PTR [rdx]
   14001c228:	(bad)  
   14001c229:	jno    0x14001c27d
   14001c22b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65527265
   14001c234:	jae    0x14001c2a5
   14001c236:	jne    0x14001c2aa
   14001c238:	movsxd esp,DWORD PTR [rbp+0x44]
   14001c23b:	(bad)  
   14001c23c:	je     0x14001c29f
   14001c23e:	rex
   14001c23f:	rex pop rcx
   14001c241:	pop    r15
   14001c243:	rex.WRX
   14001c244:	rex.W push rax
   14001c246:	rex.RB
   14001c247:	rex.X
   14001c248:	xor    BYTE PTR [r8],r14b
   14001c24b:	rex pop rdx
   14001c24d:	add    BYTE PTR [rsi],dl
   14001c24f:	adc    bh,BYTE PTR [rdi]
   14001c251:	jno    0x14001c2a8
   14001c253:	outs   dx,BYTE PTR ds:[rsi]
   14001c254:	jb     0x14001c2bb
   14001c256:	imul   esi,DWORD PTR [ebx+0x74],0x65527265
   14001c25e:	jae    0x14001c2cf
   14001c260:	jne    0x14001c2d4
   14001c262:	movsxd esp,DWORD PTR [rbp+0x44]
   14001c265:	(bad)  
   14001c266:	je     0x14001c2c9
   14001c268:	rex
   14001c269:	rex pop rcx
   14001c26b:	pop    r15
   14001c26d:	rex.WRX
   14001c26e:	rex.W push rax
   14001c270:	rex.RB
   14001c271:	rex.X
   14001c272:	xor    BYTE PTR [r8],r14b
   14001c275:	rex pop rdx
   14001c277:	add    BYTE PTR [rcx+0x6],cl
   14001c27a:	(bad)  
   14001c27b:	(bad)  
   14001c27c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14001c280:	(bad)  
   14001c281:	je     0x14001c2e8
   14001c283:	rex push rcx
   14001c285:	rex.WRB
   14001c286:	gs je  0x14001c2ea
   14001c289:	rex.WRXB (bad) 
   14001c28b:	push   0x65
   14001c28d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c291:	push   rbx
   14001c292:	pop    r8
   14001c294:	push   rax
   14001c295:	rex.RB
   14001c296:	push   r14
   14001c298:	push   rcx
   14001c299:	rex.WRXB (bad) 
   14001c29b:	push   0x65
   14001c29d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c2a1:	push   rax
   14001c2a2:	rex.RB
   14001c2a3:	rex.X push rbp
   14001c2a5:	xor    DWORD PTR [rax+0x48],eax
   14001c2a8:	push   rax
   14001c2a9:	rex.RB
   14001c2aa:	push   r8
   14001c2ac:	rex.RB
   14001c2ad:	pop    r8
   14001c2af:	rex pop rdx
   14001c2b1:	add    BYTE PTR [rbx+0x79643f0a],ch
   14001c2b7:	outs   dx,BYTE PTR ds:[rsi]
   14001c2b8:	(bad)  
   14001c2b9:	ins    DWORD PTR es:[rdi],dx
   14001c2ba:	imul   esp,DWORD PTR [rbx+0x4d],0x4f617465
   14001c2c1:	(bad)  
   14001c2c2:	push   0x65
   14001c2c4:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14001c2c8:	rex.WRXB (bad) 
   14001c2ca:	push   0x65
   14001c2cc:	movsxd esi,DWORD PTR [rsp+rax*2+0x61]
   14001c2d0:	je     0x14001c333
   14001c2d2:	rex
   14001c2d3:	rex push rcx
   14001c2d5:	rex.RB
   14001c2d6:	rex.X
   14001c2d7:	push   r8
   14001c2d9:	rex.RB
   14001c2da:	push   r13
   14001c2dc:	push   rcx
   14001c2dd:	rex.WRB
   14001c2de:	gs je  0x14001c342
   14001c2e1:	rex.WRXB (bad) 
   14001c2e3:	push   0x65
   14001c2e5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001c2e9:	pop    rax
   14001c2ea:	pop    rdx
   14001c2eb:	add    BYTE PTR [rcx+0x74],dl
   14001c2ee:	xor    eax,0x65726f43
   14001c2f3:	cs fs ins BYTE PTR es:[rdi],dx
   14001c2f6:	ins    BYTE PTR es:[rdi],dx
   14001c2f7:	add    BYTE PTR [rbx],dl
   14001c2f9:	add    BYTE PTR [rdi],bh
   14001c2fb:	(bad)  
   14001c2fc:	xor    eax,DWORD PTR [rax+0x59]
   14001c2ff:	pop    r8
   14001c301:	push   rax
   14001c302:	rex.RB
   14001c303:	pop    r8
   14001c305:	rex pop rdx
   14001c307:	add    BYTE PTR [rcx],dl
   14001c309:	add    BYTE PTR [rdi],bh
   14001c30b:	(bad)  
   14001c30c:	xor    al,BYTE PTR [rax+0x59]
   14001c30f:	push   r8
   14001c311:	rex.RB
   14001c312:	pop    r8
   14001c314:	pop    rdi
   14001c315:	rex.WXB
   14001c316:	rex pop rdx
   14001c318:	add    BYTE PTR [rax],al
   14001c31a:	hlt    
   14001c31b:	add    al,0x6d
   14001c31d:	gs ins DWORD PTR es:[rdi],dx
   14001c31f:	jae    0x14001c386
   14001c321:	je     0x14001c323
   14001c323:	add    al,dh
   14001c325:	add    al,0x6d
   14001c327:	gs ins DWORD PTR es:[rdi],dx
   14001c329:	movsxd esi,DWORD PTR [rax+0x79]
   14001c32c:	add    BYTE PTR [rax],al
   14001c32e:	rex.WRB push r11
   14001c330:	push   rsi
   14001c331:	rex.XB push r10
   14001c333:	cmp    DWORD PTR [rax],esi
   14001c335:	cs fs ins BYTE PTR es:[rdi],dx
   14001c338:	ins    BYTE PTR es:[rdi],dx
   14001c339:	add    BYTE PTR [rcx+0x0],bl
   14001c33c:	pop    rdi
   14001c33d:	pop    rdi
   14001c33e:	rex.XB pop r15
   14001c340:	jae    0x14001c3b2
   14001c342:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001c346:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001c34d:	ins    BYTE PTR es:[rdi],dx
   14001c34e:	gs jb  0x14001c351
   14001c351:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   14001c358:	outs   dx,DWORD PTR ds:[rsi]
   14001c359:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c35c:	test   DWORD PTR [rax],eax
   14001c35e:	pop    rdi
   14001c35f:	pop    rdi
   14001c360:	fs ins BYTE PTR es:[rdi],dx
   14001c362:	ins    BYTE PTR es:[rdi],dx
   14001c363:	outs   dx,DWORD PTR ds:[rsi]
   14001c364:	outs   dx,BYTE PTR ds:[rsi]
   14001c365:	gs js  0x14001c3d1
   14001c368:	je     0x14001c36a
   14001c36a:	(bad)  
   14001c36b:	add    DWORD PTR [rdi+0x65],ebx
   14001c36e:	outs   dx,BYTE PTR ds:[rsi]
   14001c36f:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001c372:	gs pop rdi
   14001c374:	jo     0x14001c3e5
   14001c376:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   14001c37d:	add    bl,BYTE PTR [rdi+0x6c]
   14001c380:	outs   dx,DWORD PTR ds:[rsi]
   14001c381:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c384:	in     al,0x2
   14001c386:	pop    rdi
   14001c387:	outs   dx,DWORD PTR ds:[rsi]
   14001c388:	outs   dx,BYTE PTR ds:[rsi]
   14001c389:	gs js  0x14001c3f5
   14001c38c:	je     0x14001c38e
   14001c38e:	sub    eax,0x65645f01
   14001c393:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001c396:	gs pop rdi
   14001c398:	jo     0x14001c409
   14001c39a:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   14001c3a1:	add    BYTE PTR [rdi+0x61],bl
   14001c3a4:	ins    DWORD PTR es:[rdi],dx
   14001c3a5:	jae    0x14001c40e
   14001c3a7:	pop    rdi
   14001c3a8:	gs js  0x14001c414
   14001c3ab:	je     0x14001c3ad
   14001c3ad:	add    BYTE PTR [rax+0x675f5f00],dl
   14001c3b3:	gs je  0x14001c423
   14001c3b6:	(bad)  
   14001c3b7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14001c3be:	push   rbp
   14001c3bf:	add    BYTE PTR [rdi+0x58],bl
   14001c3c2:	movsxd esi,DWORD PTR [rax+0x74]
   14001c3c5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   14001c3ce:	pop    rdi
   14001c3cf:	gs js  0x14001c43b
   14001c3d2:	je     0x14001c3d4
   14001c3d4:	in     al,dx
   14001c3d5:	add    DWORD PTR [rdi+0x69],ebx
   14001c3d8:	jae    0x14001c447
   14001c3da:	(bad)
   14001c3df:	add    BYTE PTR fs:[rax],al
   14001c3e2:	stc    
   14001c3e3:	add    BYTE PTR [rdi+0x63],bl
   14001c3e6:	gs js  0x14001c452
   14001c3e9:	je     0x14001c3eb
   14001c3eb:	add    BYTE PTR [rcx+0x69786504],dl
   14001c3f1:	je     0x14001c3f3
   14001c3f3:	add    al,bl
   14001c3f5:	add    BYTE PTR [rdi+0x61],bl
   14001c3f8:	movsxd ebp,DWORD PTR [rbp+0x64]
   14001c3fb:	ins    BYTE PTR es:[rdi],dx
   14001c3fc:	outs   dx,BYTE PTR ds:[rsi]
   14001c3fd:	add    dh,cl
   14001c3ff:	add    DWORD PTR [rdi+0x69],ebx
   14001c402:	outs   dx,BYTE PTR ds:[rsi]
   14001c403:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xcf006d72
   14001c40b:	add    DWORD PTR [rdi+0x69],ebx
   14001c40e:	outs   dx,BYTE PTR ds:[rsi]
   14001c40f:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   14001c417:	add    BYTE PTR [rcx],cl
   14001c419:	add    DWORD PTR [rdi+0x63],ebx
   14001c41c:	outs   dx,DWORD PTR ds:[rsi]
   14001c41d:	outs   dx,BYTE PTR ds:[rsi]
   14001c41e:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14001c424:	gs (bad) 
   14001c426:	fs ins BYTE PTR es:[rdi],dx
   14001c428:	outs   dx,DWORD PTR ds:[rsi]
   14001c429:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001c42c:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   14001c433:	gs je  0x14001c4ab
   14001c436:	jae    0x14001c49d
   14001c438:	jb     0x14001c4a7
   14001c43a:	(bad)  
   14001c43b:	je     0x14001c4a5
   14001c43d:	gs jb  0x14001c4b2
   14001c440:	add    BYTE PTR [rax],al
   14001c442:	or     BYTE PTR [rcx],al
   14001c444:	pop    rdi
   14001c445:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c448:	ins    DWORD PTR es:[rdi],dx
   14001c449:	outs   dx,DWORD PTR ds:[rsi]
   14001c44a:	fs add BYTE PTR gs:[rax],al
   14001c44e:	(bad)
   14001c453:	outs   dx,DWORD PTR ds:[rsi]
   14001c454:	fs add BYTE PTR gs:[rax],al
   14001c458:	mov    esp,0x735f5f00
   14001c45d:	gs je  0x14001c4bf
   14001c460:	(bad)  
   14001c461:	jo     0x14001c4d3
   14001c463:	pop    rdi
   14001c464:	je     0x14001c4df
   14001c466:	jo     0x14001c4cd
   14001c468:	add    BYTE PTR [rax],al
   14001c46a:	rex.XB add BYTE PTR [r15],dil
   14001c46d:	je     0x14001c4d4
   14001c46f:	jb     0x14001c4de
   14001c471:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14001c478:	pop    rcx
   14001c479:	pop    r8
   14001c47b:	pop    rax
   14001c47c:	pop    rdx
   14001c47d:	add    BYTE PTR [rax],bh
   14001c47f:	add    BYTE PTR [rdi],bh
   14001c481:	pop    rdi
   14001c482:	je     0x14001c4fd
   14001c484:	jo     0x14001c4eb
   14001c486:	pop    rdi
   14001c487:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14001c48e:	outs   dx,DWORD PTR ds:[rsi]
   14001c48f:	jb     0x14001c4f0
   14001c491:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14001c498:	ins    BYTE PTR es:[rdi],dx
   14001c499:	pop    rdi
   14001c49a:	ins    DWORD PTR es:[rdi],dx
   14001c49b:	gs je  0x14001c506
   14001c49e:	outs   dx,DWORD PTR ds:[rsi]
   14001c49f:	fs rex je 0x14001c51c
   14001c4a3:	jo     0x14001c50a
   14001c4a5:	pop    rdi
   14001c4a6:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14001c4ad:	rex.RB
   14001c4ae:	rex.B
   14001c4af:	pop    r8
   14001c4b1:	pop    rax
   14001c4b2:	pop    rdx
   14001c4b3:	add    al,al
   14001c4b5:	add    al,0x53
   14001c4b7:	ins    BYTE PTR es:[rdi],dx
   14001c4b8:	gs gs jo 0x14001c4bc
   14001c4bc:	imul   eax,DWORD PTR [rdx],0x53746547
   14001c4c2:	je     0x14001c525
   14001c4c4:	jb     0x14001c53a
   14001c4c6:	jne    0x14001c538
   14001c4c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c4ca:	outs   dx,WORD PTR ds:[rsi]
   14001c4cc:	add    BYTE PTR [r11+0x74655304],sil
   14001c4d3:	push   rbp
   14001c4d4:	outs   dx,BYTE PTR ds:[rsi]
   14001c4d5:	push   0x6c646e61
   14001c4da:	gs fs rex.RB js 0x14001c542
   14001c4df:	gs jo  0x14001c556
   14001c4e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001c4e9:	gs jb  0x14001c4ec
   14001c4ec:	test   eax,0x65755103
   14001c4f1:	jb     0x14001c56c
   14001c4f3:	push   rax
   14001c4f4:	gs jb  0x14001c55d
   14001c4f7:	outs   dx,DWORD PTR ds:[rsi]
   14001c4f8:	jb     0x14001c567
   14001c4fa:	(bad)  
   14001c4fb:	outs   dx,BYTE PTR ds:[rsi]
   14001c4fc:	movsxd esp,DWORD PTR [rbp+0x43]
   14001c4ff:	outs   dx,DWORD PTR ds:[rsi]
   14001c500:	jne    0x14001c570
   14001c502:	je     0x14001c569
   14001c504:	jb     0x14001c506
   14001c506:	(bad)  
   14001c507:	add    al,BYTE PTR [rdi+0x65]
   14001c50a:	je     0x14001c560
   14001c50c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001c513:	je     0x14001c515
   14001c515:	add    bl,cl
   14001c517:	add    DWORD PTR [rdi+0x65],eax
   14001c51a:	je     0x14001c55f
   14001c51c:	jne    0x14001c590
   14001c51e:	jb     0x14001c585
   14001c520:	outs   dx,BYTE PTR ds:[rsi]
   14001c521:	je     0x14001c577
   14001c523:	push   0x64616572
   14001c528:	rex.WB
   14001c529:	add    BYTE PTR fs:[rax],al
   14001c52c:	mov    DWORD PTR [rcx],0x43746547
   14001c532:	jne    0x14001c5a6
   14001c534:	jb     0x14001c59b
   14001c536:	outs   dx,BYTE PTR ds:[rsi]
   14001c537:	je     0x14001c589
   14001c539:	jb     0x14001c5aa
   14001c53b:	movsxd esp,DWORD PTR [rbp+0x73]
   14001c53e:	jae    0x14001c589
   14001c540:	add    BYTE PTR fs:[rax+0x74654702],al
   14001c547:	push   rbx
   14001c548:	jns    0x14001c5bd
   14001c54a:	je     0x14001c5b1
   14001c54c:	ins    DWORD PTR es:[rdi],dx
   14001c54d:	push   rsp
   14001c54e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001c555:	ins    BYTE PTR es:[rdi],dx
   14001c556:	gs push rsp
   14001c558:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14001c55f:	rex.WRX
   14001c560:	rex.RB
   14001c561:	xor    r14,QWORD PTR [rdx]
   14001c564:	cs fs ins BYTE PTR es:[rdi],dx
   14001c567:	ins    BYTE PTR es:[rdi],dx
   14001c568:	add    BYTE PTR [rax],al
   14001c56a:	(bad)  
   14001c56b:	add    BYTE PTR [rbx+0x6f],al
   14001c56e:	ins    DWORD PTR es:[rdi],dx
   14001c56f:	ins    DWORD PTR es:[rdi],dx
   14001c570:	(bad)  
   14001c571:	outs   dx,BYTE PTR ds:[rsi]
   14001c572:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14001c57b:	addr32 jbe 0x14001c5d5
   14001c57e:	add    BYTE PTR [rax],al
   14001c580:	push   rbx
   14001c581:	rex.W
   14001c582:	rex.RB
   14001c583:	rex.WR
   14001c584:	xor    r14,QWORD PTR [rdx]
   14001c587:	cs fs ins BYTE PTR es:[rdi],dx
   14001c58a:	ins    BYTE PTR es:[rdi],dx
   14001c58b:	add    BYTE PTR [rbx],ah
   14001c58d:	add    BYTE PTR [rdi],bh
   14001c58f:	(bad)  
   14001c590:	pop    rdi
   14001c591:	push   rsi
   14001c592:	rex pop rcx
   14001c594:	pop    r8
   14001c596:	push   rax
   14001c597:	rex.RB
   14001c598:	pop    r8
   14001c59a:	rex pop rdx
   14001c59c:	add    BYTE PTR [rax],al
   14001c59e:	and    BYTE PTR [rip+0x65646957],al        # 0x1a5662efb
   14001c5a4:	rex.XB push 0x6f547261
   14001c5aa:	rex.WRB jne 0x14001c619
   14001c5ad:	je     0x14001c618
   14001c5af:	rex.X jns 0x14001c626
   14001c5b2:	add    BYTE PTR gs:[rdx+0x3],cl
   14001c5b6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001c5b8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001c5bb:	rex.RX jb 0x14001c623
   14001c5be:	add    BYTE PTR gs:[rbp+0x74654701],cl
   14001c5c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c5c7:	ins    DWORD PTR es:[rdi],dx
   14001c5c8:	ins    DWORD PTR es:[rdi],dx
   14001c5c9:	(bad)  
   14001c5ca:	outs   dx,BYTE PTR ds:[rsi]
   14001c5cb:	fs
   14001c5cc:	rex.WR
   14001c5cd:	.byte 0x69
   14001c5ce:	outs   dx,BYTE PTR ds:[rsi]
   14001c5cf:	gs push rdi
	...

Disassembly of section .data:

000000014001d000 <.data>:
   14001d000:	(bad)  
   14001d001:	(bad)  
   14001d002:	add    BYTE PTR [rax+0x1],al
   14001d005:	add    BYTE PTR [rax],al
   14001d007:	add    BYTE PTR [rax-0x2b],ah
   14001d00a:	add    BYTE PTR [rax+0x1],al
   14001d00d:	add    BYTE PTR [rax],al
   14001d00f:	add    al,dl
   14001d011:	sbb    DWORD PTR [rcx],eax
   14001d013:	rex add DWORD PTR [rax],eax
	...
   14001d01e:	add    BYTE PTR [rax],al
   14001d020:	cs (bad) 
   14001d022:	push   r14
   14001d024:	push   rcx
   14001d025:	rex.RXB jb 0x14001d091
   14001d028:	fs rex.WR (bad) 
   14001d02b:	jns    0x14001d09c
   14001d02d:	jne    0x14001d0a3
   14001d02f:	rex
   14001d030:	add    BYTE PTR [rax],al
   14001d033:	add    BYTE PTR [rax],al
   14001d035:	add    BYTE PTR [rax],al
   14001d037:	add    al,dl
   14001d039:	sbb    DWORD PTR [rcx],eax
   14001d03b:	rex add DWORD PTR [rax],eax
	...
   14001d046:	add    BYTE PTR [rax],al
   14001d048:	cs (bad) 
   14001d04a:	push   r14
   14001d04c:	push   rcx
   14001d04d:	rex.WR (bad) 
   14001d04f:	jns    0x14001d0c0
   14001d051:	jne    0x14001d0c7
   14001d053:	rex
   14001d054:	add    BYTE PTR [rax],al
   14001d057:	add    al,dl
   14001d059:	sbb    DWORD PTR [rcx],eax
   14001d05b:	rex add DWORD PTR [rax],eax
	...
   14001d066:	add    BYTE PTR [rax],al
   14001d068:	cs (bad) 
   14001d06a:	push   r14
   14001d06c:	push   rcx
   14001d06d:	rex.WRXB (bad) 
   14001d06f:	push   0x65
   14001d071:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14001d075:	add    BYTE PTR [rax],al
   14001d077:	add    al,dl
   14001d079:	sbb    DWORD PTR [rcx],eax
   14001d07b:	rex add DWORD PTR [rax],eax
	...
   14001d086:	add    BYTE PTR [rax],al
   14001d088:	cs (bad) 
   14001d08a:	push   r14
   14001d08c:	push   rcx
   14001d08d:	rex.WR (bad) 
   14001d08f:	jns    0x14001d100
   14001d091:	jne    0x14001d107
   14001d093:	rex.WB je 0x14001d0fb
   14001d096:	ins    DWORD PTR es:[rdi],dx
   14001d097:	rex
   14001d098:	add    BYTE PTR [rax],al
   14001d09b:	add    BYTE PTR [rax],al
   14001d09d:	add    BYTE PTR [rax],al
   14001d09f:	add    al,dl
   14001d0a1:	sbb    DWORD PTR [rcx],eax
   14001d0a3:	rex add DWORD PTR [rax],eax
	...
   14001d0ae:	add    BYTE PTR [rax],al
   14001d0b0:	cs (bad) 
   14001d0b2:	push   r14
   14001d0b4:	push   rcx
   14001d0b5:	rex.WR (bad) 
   14001d0b7:	(bad)  
   14001d0b8:	gs ins BYTE PTR es:[rdi],dx
   14001d0ba:	rex
   14001d0bb:	add    BYTE PTR [rax],al
   14001d0be:	add    BYTE PTR [rax],al
   14001d0c0:	rcr    BYTE PTR [rcx],1
   14001d0c2:	add    DWORD PTR [rax+0x1],eax
	...
   14001d0cd:	add    BYTE PTR [rax],al
   14001d0cf:	add    BYTE PTR [rsi],ch
   14001d0d1:	(bad)  
   14001d0d2:	push   r14
   14001d0d4:	push   rcx
   14001d0d5:	rex.RX jb 0x14001d139
   14001d0d8:	ins    DWORD PTR es:[rdi],dx
   14001d0d9:	gs rex
   14001d0db:	add    BYTE PTR [rax],al
   14001d0de:	add    BYTE PTR [rax],al
   14001d0e0:	rcr    BYTE PTR [rcx],1
   14001d0e2:	add    DWORD PTR [rax+0x1],eax
	...
   14001d0ed:	add    BYTE PTR [rax],al
   14001d0ef:	add    BYTE PTR [rsi],ch
   14001d0f1:	(bad)  
   14001d0f2:	push   r14
   14001d0f4:	push   rcx
   14001d0f5:	push   rdi
   14001d0f6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   14001d0fe:	add    BYTE PTR [rax],al
   14001d100:	rcr    BYTE PTR [rcx],1
   14001d102:	add    DWORD PTR [rax+0x1],eax
	...
   14001d10d:	add    BYTE PTR [rax],al
   14001d10f:	add    BYTE PTR [rsi],ch
   14001d111:	(bad)  
   14001d112:	push   r14
   14001d114:	push   rcx
   14001d115:	push   rax
   14001d116:	(bad)  
   14001d117:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   14001d11e:	movsxd esp,DWORD PTR [rbp+0x40]
   14001d121:	add    BYTE PTR [rax],al
   14001d124:	add    BYTE PTR [rax],al
   14001d126:	add    BYTE PTR [rax],al
   14001d128:	rcr    BYTE PTR [rcx],1
   14001d12a:	add    DWORD PTR [rax+0x1],eax
	...
   14001d135:	add    BYTE PTR [rax],al
   14001d137:	add    BYTE PTR [rsi],ch
   14001d139:	(bad)  
   14001d13a:	push   r14
   14001d13c:	push   rcx
   14001d13d:	rex.W
   14001d13e:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d140:	js     0x14001d18e
   14001d142:	(bad)  
   14001d143:	jns    0x14001d1b4
   14001d145:	jne    0x14001d1bb
   14001d147:	rex
   14001d148:	add    BYTE PTR [rax],al
   14001d14b:	add    BYTE PTR [rax],al
   14001d14d:	add    BYTE PTR [rax],al
   14001d14f:	add    al,dl
   14001d151:	sbb    DWORD PTR [rcx],eax
   14001d153:	rex add DWORD PTR [rax],eax
	...
   14001d15e:	add    BYTE PTR [rax],al
   14001d160:	cs (bad) 
   14001d162:	push   r14
   14001d164:	push   rcx
   14001d165:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d167:	js     0x14001d1b5
   14001d169:	(bad)  
   14001d16a:	jns    0x14001d1db
   14001d16c:	jne    0x14001d1e2
   14001d16e:	rex
   14001d16f:	add    BYTE PTR [rax],al
   14001d172:	add    BYTE PTR [rax],al
   14001d174:	add    BYTE PTR [rax],al
   14001d176:	add    BYTE PTR [rax],al
   14001d178:	rcr    BYTE PTR [rcx],1
   14001d17a:	add    DWORD PTR [rax+0x1],eax
	...
   14001d185:	add    BYTE PTR [rax],al
   14001d187:	add    BYTE PTR [rsi],ch
   14001d189:	(bad)  
   14001d18a:	push   r14
   14001d18c:	push   rcx
   14001d18d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001d18f:	jne    0x14001d1f3
   14001d191:	ins    BYTE PTR es:[rdi],dx
   14001d192:	gs push rbx
   14001d194:	jo     0x14001d1ff
   14001d196:	outs   dx,BYTE PTR ds:[rsi]
   14001d197:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d199:	js     0x14001d1db
   14001d19b:	add    BYTE PTR [rax],al
   14001d19e:	add    BYTE PTR [rax],al
   14001d1a0:	rcr    BYTE PTR [rcx],1
   14001d1a2:	add    DWORD PTR [rax+0x1],eax
	...
   14001d1ad:	add    BYTE PTR [rax],al
   14001d1af:	add    BYTE PTR [rsi],ch
   14001d1b1:	(bad)  
   14001d1b2:	push   r14
   14001d1b4:	push   rcx
   14001d1b5:	(bad)
   14001d1bb:	movsxd esi,DWORD PTR [rbx+rdx*2+0x70]
   14001d1bf:	imul   ebp,DWORD PTR [rsi+0x42],0x4040786f
   14001d1c6:	add    BYTE PTR [rax],al
   14001d1c8:	rcr    BYTE PTR [rcx],1
   14001d1ca:	add    DWORD PTR [rax+0x1],eax
	...
   14001d1d5:	add    BYTE PTR [rax],al
   14001d1d7:	add    BYTE PTR [rsi],ch
   14001d1d9:	(bad)  
   14001d1da:	push   r14
   14001d1dc:	push   rcx
   14001d1dd:	rex.XB push 0x426b6365
   14001d1e3:	outs   dx,DWORD PTR ds:[rsi]
   14001d1e4:	js     0x14001d226
   14001d1e6:	add    al,dl
   14001d1e9:	sbb    DWORD PTR [rcx],eax
   14001d1eb:	rex add DWORD PTR [rax],eax
	...
   14001d1f6:	add    BYTE PTR [rax],al
   14001d1f8:	cs (bad) 
   14001d1fa:	push   r14
   14001d1fc:	push   rcx
   14001d1fd:	(bad)
   14001d203:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   14001d207:	je     0x14001d27d
   14001d209:	outs   dx,DWORD PTR ds:[rsi]
   14001d20a:	outs   dx,BYTE PTR ds:[rsi]
   14001d20b:	rex
   14001d20c:	add    BYTE PTR [rax],al
   14001d20f:	add    al,dl
   14001d211:	sbb    DWORD PTR [rcx],eax
   14001d213:	rex add DWORD PTR [rax],eax
	...
   14001d21e:	add    BYTE PTR [rax],al
   14001d220:	cs (bad) 
   14001d222:	push   r14
   14001d224:	push   rcx
   14001d225:	push   rbx
   14001d226:	jo     0x14001d289
   14001d228:	movsxd esp,DWORD PTR [rbp+0x72]
   14001d22b:	rex.WB je 0x14001d293
   14001d22e:	ins    DWORD PTR es:[rdi],dx
   14001d22f:	rex
   14001d230:	add    BYTE PTR [rax],al
   14001d233:	add    BYTE PTR [rax],al
   14001d235:	add    BYTE PTR [rax],al
   14001d237:	add    al,dl
   14001d239:	sbb    DWORD PTR [rcx],eax
   14001d23b:	rex add DWORD PTR [rax],eax
	...
   14001d246:	add    BYTE PTR [rax],al
   14001d248:	cs (bad) 
   14001d24a:	push   r14
   14001d24c:	push   rcx
   14001d24d:	push   rbx
   14001d24e:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001d251:	ins    BYTE PTR es:[rdi],dx
   14001d252:	ins    BYTE PTR es:[rdi],dx
   14001d253:	rex.B jb 0x14001d2bb
   14001d256:	(bad)  
   14001d257:	rex
   14001d258:	add    BYTE PTR [rax],al
   14001d25b:	add    BYTE PTR [rax],al
   14001d25d:	add    BYTE PTR [rax],al
   14001d25f:	add    al,dl
   14001d261:	sbb    DWORD PTR [rcx],eax
   14001d263:	rex add DWORD PTR [rax],eax
	...
   14001d26e:	add    BYTE PTR [rax],al
   14001d270:	cs (bad) 
   14001d272:	push   r14
   14001d274:	push   rcx
   14001d275:	(bad)
   14001d27b:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14001d27f:	jb     0x14001d2f0
   14001d281:	ins    BYTE PTR es:[rdi],dx
   14001d282:	ins    BYTE PTR es:[rdi],dx
   14001d283:	rex.B jb 0x14001d2eb
   14001d286:	(bad)  
   14001d287:	rex
   14001d288:	add    BYTE PTR [rax],al
   14001d28b:	add    BYTE PTR [rax],al
   14001d28d:	add    BYTE PTR [rax],al
   14001d28f:	add    al,dl
   14001d291:	sbb    DWORD PTR [rcx],eax
   14001d293:	rex add DWORD PTR [rax],eax
	...
   14001d29e:	add    BYTE PTR [rax],al
   14001d2a0:	cs (bad) 
   14001d2a2:	push   r14
   14001d2a4:	push   rcx
   14001d2a5:	push   rsi
   14001d2a6:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d2a8:	js     0x14001d2f6
   14001d2aa:	(bad)  
   14001d2ab:	jns    0x14001d31c
   14001d2ad:	jne    0x14001d323
   14001d2af:	rex
   14001d2b0:	add    BYTE PTR [rax],al
   14001d2b3:	add    BYTE PTR [rax],al
   14001d2b5:	add    BYTE PTR [rax],al
   14001d2b7:	add    al,dl
   14001d2b9:	sbb    DWORD PTR [rcx],eax
   14001d2bb:	rex add DWORD PTR [rax],eax
	...
   14001d2c6:	add    BYTE PTR [rax],al
   14001d2c8:	cs (bad) 
   14001d2ca:	push   r14
   14001d2cc:	push   rbx
   14001d2cd:	jo     0x14001d33b
   14001d2cf:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   14001d2d6:	outs   dx,DWORD PTR ds:[rsi]
   14001d2d7:	jb     0x14001d319
   14001d2d9:	add    BYTE PTR [rax],al
   14001d2dc:	add    BYTE PTR [rax],al
   14001d2de:	add    BYTE PTR [rax],al
   14001d2e0:	rcr    BYTE PTR [rcx],1
   14001d2e2:	add    DWORD PTR [rax+0x1],eax
	...
   14001d2ed:	add    BYTE PTR [rax],al
   14001d2ef:	add    BYTE PTR [rsi],ch
   14001d2f1:	(bad)  
   14001d2f2:	push   r14
   14001d2f4:	push   rcx
   14001d2f5:	rex.WRB
   14001d2f6:	outs   dx,BYTE PTR gs:[rsi]
   14001d2f8:	jne    0x14001d33a
   14001d2fa:	add    BYTE PTR [rax],al
   14001d2fd:	add    BYTE PTR [rax],al
   14001d2ff:	add    al,dl
   14001d301:	sbb    DWORD PTR [rcx],eax
   14001d303:	rex add DWORD PTR [rax],eax
	...
   14001d30e:	add    BYTE PTR [rax],al
   14001d310:	cs (bad) 
   14001d312:	push   r14
   14001d314:	push   rcx
   14001d315:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   14001d31a:	outs   dx,BYTE PTR ds:[rsi]
   14001d31b:	rex
   14001d31c:	add    BYTE PTR [rax],al
   14001d31f:	add    BYTE PTR [rax-0x2b],ah
   14001d322:	add    BYTE PTR [rax+0x1],al
   14001d325:	add    BYTE PTR [rax],al
   14001d327:	add    al,dl
   14001d329:	sbb    DWORD PTR [rcx],eax
   14001d32b:	rex add DWORD PTR [rax],eax
	...
   14001d336:	add    BYTE PTR [rax],al
   14001d338:	cs (bad) 
   14001d33a:	push   r14
   14001d33c:	push   rcx
   14001d33d:	push   rbx
   14001d33e:	jo     0x14001d3a9
   14001d340:	outs   dx,BYTE PTR ds:[rsi]
   14001d341:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d343:	js     0x14001d385
   14001d345:	add    BYTE PTR [rax],al
   14001d348:	rcr    BYTE PTR [rcx],1
   14001d34a:	add    DWORD PTR [rax+0x1],eax
	...
   14001d355:	add    BYTE PTR [rax],al
   14001d357:	add    BYTE PTR [rsi],ch
   14001d359:	(bad)  
   14001d35a:	push   r14
   14001d35c:	push   rcx
   14001d35d:	push   rax
   14001d35e:	ins    BYTE PTR es:[rdi],dx
   14001d35f:	(bad)  
   14001d360:	imul   ebp,DWORD PTR [rsi+0x54],0x45747865
   14001d367:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x0
   14001d370:	rcr    BYTE PTR [rcx],1
   14001d372:	add    DWORD PTR [rax+0x1],eax
	...
   14001d37d:	add    BYTE PTR [rax],al
   14001d37f:	add    BYTE PTR [rsi],ch
   14001d381:	(bad)  
   14001d382:	push   r14
   14001d384:	push   rcx
   14001d385:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001d387:	ins    DWORD PTR es:[rdi],dx
   14001d388:	(bad)  
   14001d389:	outs   dx,DWORD PTR ds:[rsi]
   14001d38a:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d38c:	js     0x14001d3ce
   14001d38e:	add    al,dl
   14001d391:	sbb    DWORD PTR [rcx],eax
   14001d393:	rex add DWORD PTR [rax],eax
	...
   14001d39e:	add    BYTE PTR [rax],al
   14001d3a0:	cs (bad) 
   14001d3a2:	push   r14
   14001d3a4:	push   rcx
   14001d3a5:	rex.RXB jb 0x14001d417
   14001d3a8:	jne    0x14001d41a
   14001d3aa:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d3ac:	js     0x14001d3ee
   14001d3ae:	add    al,dl
   14001d3b1:	sbb    DWORD PTR [rcx],eax
   14001d3b3:	rex add DWORD PTR [rax],eax
	...
   14001d3be:	add    BYTE PTR [rax],al
   14001d3c0:	cs (bad) 
   14001d3c2:	push   r14
   14001d3c4:	push   rcx
   14001d3c5:	push   rax
   14001d3c6:	jne    0x14001d43b
   14001d3c8:	push   0x74747542
   14001d3cd:	outs   dx,DWORD PTR ds:[rsi]
   14001d3ce:	outs   dx,BYTE PTR ds:[rsi]
   14001d3cf:	rex
   14001d3d0:	add    BYTE PTR [rax],al
   14001d3d3:	add    BYTE PTR [rax],al
   14001d3d5:	add    BYTE PTR [rax],al
   14001d3d7:	add    al,dl
   14001d3d9:	sbb    DWORD PTR [rcx],eax
   14001d3db:	rex add DWORD PTR [rax],eax
	...
   14001d3e6:	add    BYTE PTR [rax],al
   14001d3e8:	cs (bad) 
   14001d3ea:	push   r14
   14001d3ec:	push   rcx
   14001d3ed:	imul   r12d,DWORD PTR [rcx+0x6c],0x7542676f
   14001d3f5:	je     0x14001d46b
   14001d3f7:	outs   dx,DWORD PTR ds:[rsi]
   14001d3f8:	outs   dx,BYTE PTR ds:[rsi]
   14001d3f9:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001d3fb:	js     0x14001d43d
   14001d3fd:	add    BYTE PTR [rax],al
   14001d400:	rcr    BYTE PTR [rcx],1
   14001d402:	add    DWORD PTR [rax+0x1],eax
	...
   14001d40d:	add    BYTE PTR [rax],al
   14001d40f:	add    BYTE PTR [rsi],ch
   14001d411:	(bad)  
   14001d412:	push   r14
   14001d414:	push   rcx
   14001d415:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001d417:	jb     0x14001d486
   14001d419:	rex.WR (bad) 
   14001d41b:	jns    0x14001d48c
   14001d41d:	jne    0x14001d493
   14001d41f:	rex
   14001d420:	add    BYTE PTR [rax],al
   14001d423:	add    BYTE PTR [rax],al
   14001d425:	add    BYTE PTR [rax],al
   14001d427:	add    al,dl
   14001d429:	sbb    DWORD PTR [rcx],eax
   14001d42b:	rex add DWORD PTR [rax],eax
	...
   14001d436:	add    BYTE PTR [rax],al
   14001d438:	cs (bad) 
   14001d43a:	push   r14
   14001d43c:	push   rcx
   14001d43d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14001d445:	rex
   14001d446:	add    al,dl
   14001d449:	sbb    DWORD PTR [rcx],eax
   14001d44b:	rex add DWORD PTR [rax],eax
	...
   14001d456:	add    BYTE PTR [rax],al
   14001d458:	cs (bad) 
   14001d45a:	push   r14
   14001d45c:	rex.WRB (bad) 
   14001d45e:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001d465:	ja     0x14001d4a7
   14001d467:	add    BYTE PTR [rax],al
   14001d46a:	add    BYTE PTR [rax],al
   14001d46c:	add    BYTE PTR [rax],al
   14001d46e:	add    BYTE PTR [rax],al
   14001d470:	rcr    BYTE PTR [rcx],1
   14001d472:	add    DWORD PTR [rax+0x1],eax
	...
   14001d47d:	add    BYTE PTR [rax],al
   14001d47f:	add    BYTE PTR [rsi],ch
   14001d481:	(bad)  
   14001d482:	push   r14
   14001d484:	push   rcx
   14001d485:	rex.WRB (bad) 
   14001d487:	imul   ebp,DWORD PTR [rsi+0x57],0x6f646e69
   14001d48e:	ja     0x14001d4d0
   14001d490:	add    BYTE PTR [rax],al
   14001d493:	add    BYTE PTR [rax],al
   14001d495:	add    BYTE PTR [rax],al
   14001d497:	add    al,dl
   14001d499:	sbb    DWORD PTR [rcx],eax
   14001d49b:	rex add DWORD PTR [rax],eax
	...
   14001d4a6:	add    BYTE PTR [rax],al
   14001d4a8:	cs (bad) 
   14001d4aa:	push   r14
   14001d4ac:	push   rcx
   14001d4ad:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14001d4b5:	add    BYTE PTR [rax],al
   14001d4b7:	add    al,dl
   14001d4b9:	sbb    DWORD PTR [rcx],eax
   14001d4bb:	rex add DWORD PTR [rax],eax
	...
   14001d4c6:	add    BYTE PTR [rax],al
   14001d4c8:	cs (bad) 
   14001d4ca:	push   r14
   14001d4cc:	push   rcx
   14001d4cd:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001d4cf:	jne    0x14001d533
   14001d4d1:	ins    BYTE PTR es:[rdi],dx
   14001d4d2:	gs push rsi
   14001d4d4:	(bad)  
   14001d4d5:	ins    BYTE PTR es:[rdi],dx
   14001d4d6:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
   14001d4de:	add    BYTE PTR [rax],al
   14001d4e0:	rcr    BYTE PTR [rcx],1
   14001d4e2:	add    DWORD PTR [rax+0x1],eax
	...
   14001d4ed:	add    BYTE PTR [rax],al
   14001d4ef:	add    BYTE PTR [rsi],ch
   14001d4f1:	(bad)  
   14001d4f2:	push   r14
   14001d4f4:	push   rcx
   14001d4f5:	push   rsi
   14001d4f6:	(bad)  
   14001d4f7:	ins    BYTE PTR es:[rdi],dx
   14001d4f8:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4040726f
	...
   14001d508:	(bad)  
   14001d509:	(bad)  
   14001d50a:	add    BYTE PTR [rax+0x1],al
   14001d50d:	add    BYTE PTR [rax],al
   14001d50f:	add    al,dl
   14001d511:	sbb    DWORD PTR [rcx],eax
   14001d513:	rex add DWORD PTR [rax],eax
	...
   14001d51e:	add    BYTE PTR [rax],al
   14001d520:	cs (bad) 
   14001d522:	push   r14
   14001d524:	push   rbx
   14001d525:	gs ins DWORD PTR es:[edi],dx
   14001d528:	outs   dx,BYTE PTR gs:[rsi]
   14001d52a:	je     0x14001d57c
   14001d52c:	jb     0x14001d59d
   14001d52e:	jo     0x14001d595
   14001d530:	jb     0x14001d5a6
   14001d532:	imul   esp,DWORD PTR [rbp+0x73],0x60004040
   14001d539:	(bad)  
   14001d53a:	add    BYTE PTR [rax+0x1],al
	...
   14001d545:	add    BYTE PTR [rax],al
   14001d547:	add    BYTE PTR [rax],dh
   14001d549:	adc    eax,0x14001
   14001d54e:	add    BYTE PTR [rax],al
   14001d550:	jo     0x14001d568
   14001d552:	add    DWORD PTR [rax+0x1],eax
   14001d555:	add    BYTE PTR [rax],al
   14001d557:	add    BYTE PTR [rax-0x5d],ah
   14001d55a:	add    BYTE PTR [rax+0x1],al
	...
   14001d56d:	add    BYTE PTR [rax],al
   14001d56f:	add    BYTE PTR [rax-0x2b],ah
   14001d572:	add    BYTE PTR [rax+0x1],al
	...
   14001d57d:	add    BYTE PTR [rax],al
   14001d57f:	add    BYTE PTR [rax+0x17],ah
   14001d582:	add    DWORD PTR [rax+0x1],eax
   14001d585:	add    BYTE PTR [rax],al
   14001d587:	add    BYTE PTR [rax],dl
   14001d589:	sbb    BYTE PTR [rcx],al
   14001d58b:	rex add DWORD PTR [rax],eax
   14001d58e:	add    BYTE PTR [rax],al
   14001d590:	nop
   14001d591:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d592:	add    BYTE PTR [rax+0x1],al
	...
   14001d5a5:	add    BYTE PTR [rax],al
   14001d5a7:	add    BYTE PTR [rax-0x2b],ah
   14001d5aa:	add    BYTE PTR [rax+0x1],al
	...
   14001d5b5:	add    BYTE PTR [rax],al
   14001d5b7:	add    BYTE PTR [rax+0x1400118],dl
   14001d5bd:	add    BYTE PTR [rax],al
   14001d5bf:	add    BYTE PTR [rax+0x19],al
   14001d5c2:	add    DWORD PTR [rax+0x1],eax
   14001d5c5:	add    BYTE PTR [rax],al
   14001d5c7:	add    al,al
   14001d5c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d5ca:	add    BYTE PTR [rax+0x1],al
	...
   14001d5dd:	add    BYTE PTR [rax],al
   14001d5df:	add    BYTE PTR [rbp-0x68],dh
   14001d5e2:	add    BYTE PTR [rax],al
   14001d5e4:	add    BYTE PTR [rax],al
   14001d5e6:	add    BYTE PTR [rax],al
   14001d5e8:	rcr    BYTE PTR [rcx],1
   14001d5ea:	add    DWORD PTR [rax+0x1],eax
	...
   14001d5f5:	add    BYTE PTR [rax],al
   14001d5f7:	add    BYTE PTR [rsi],ch
   14001d5f9:	(bad)  
   14001d5fa:	push   r14
   14001d5fc:	je     0x14001d677
   14001d5fe:	jo     0x14001d665
   14001d600:	pop    rdi
   14001d601:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14001d608:	(bad)  
   14001d609:	(bad)  
   14001d60a:	(bad)  
   14001d60b:	(bad)  
   14001d60c:	(bad)  
   14001d60d:	(bad)  
   14001d60e:	(bad)  
   14001d60f:	(bad)  
   14001d610:	(bad)  
   14001d611:	(bad)  
   14001d612:	(bad)  
   14001d613:	inc    DWORD PTR [rcx]
   14001d615:	add    BYTE PTR [rax],al
   14001d617:	add    BYTE PTR [rdx],dh
   14001d619:	movabs ds:0x5dcd00002b992ddf,al
   14001d622:	and    dl,dl
   14001d624:	data16 (bad) 
   14001d626:	(bad)  
   14001d627:	jmp    QWORD PTR [rax-0x2b]
   14001d62a:	add    BYTE PTR [rax+0x1],al
   14001d62d:	add    BYTE PTR [rax],al
   14001d62f:	add    BYTE PTR [rax-0x2b],ah
   14001d632:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

000000014001e000 <.pdata>:
   14001e000:	add    BYTE PTR [rax],dl
   14001e002:	add    BYTE PTR [rax],al
   14001e004:	jge    0x14001e016
   14001e006:	add    BYTE PTR [rax],al
   14001e008:	fsubr  DWORD PTR [rdi]
   14001e00a:	add    DWORD PTR [rax],eax
   14001e00c:	adc    BYTE PTR [rax],0x0
   14001e00f:	add    dh,al
   14001e011:	adc    DWORD PTR [rax],eax
   14001e013:	add    ah,ah
   14001e015:	(bad)  
   14001e016:	add    DWORD PTR [rax],eax
   14001e018:	rcl    BYTE PTR [rcx],1
   14001e01a:	add    BYTE PTR [rax],al
   14001e01c:	repnz adc eax,DWORD PTR [rax]
   14001e01f:	add    al,dh
   14001e021:	(bad)  
   14001e022:	add    DWORD PTR [rax],eax
   14001e024:	and    BYTE PTR [rax+rax*1],dl
   14001e027:	add    BYTE PTR [rcx+0x14],ah
   14001e02a:	add    BYTE PTR [rax],al
   14001e02c:	cmp    al,0x30
   14001e02e:	add    DWORD PTR [rax],eax
   14001e030:	(bad)  
   14001e031:	adc    al,0x0
   14001e033:	add    BYTE PTR [rdi+0x18000015],dl
   14001e039:	xor    BYTE PTR [rcx],al
   14001e03b:	add    BYTE PTR [rdi-0x48ffffeb],dl
   14001e041:	adc    eax,0x30080000
   14001e046:	add    DWORD PTR [rax],eax
   14001e048:	xor    BYTE PTR [rsi],dl
   14001e04a:	add    BYTE PTR [rax],al
   14001e04c:	ja     0x14001e06b
   14001e04e:	add    BYTE PTR [rax],al
   14001e050:	pop    rax
   14001e051:	xor    BYTE PTR [rcx],al
   14001e053:	add    BYTE PTR [rax-0x4fffffe3],al
   14001e059:	sbb    eax,0x30700000
   14001e05e:	add    DWORD PTR [rax],eax
   14001e060:	mov    al,0x1d
   14001e062:	add    BYTE PTR [rax],al
   14001e064:	loopne 0x14001e083
   14001e066:	add    BYTE PTR [rax],al
   14001e068:	jo     0x14001e09a
   14001e06a:	add    DWORD PTR [rax],eax
   14001e06c:	loopne 0x14001e08b
   14001e06e:	add    BYTE PTR [rax],al
   14001e070:	adc    BYTE PTR [rsi],bl
   14001e072:	add    BYTE PTR [rax],al
   14001e074:	jo     0x14001e0a6
   14001e076:	add    DWORD PTR [rax],eax
   14001e078:	adc    BYTE PTR [rsi],bl
   14001e07a:	add    BYTE PTR [rax],al
   14001e07c:	rex (bad) 
   14001e07e:	add    BYTE PTR [rax],al
   14001e080:	jo     0x14001e0b2
   14001e082:	add    DWORD PTR [rax],eax
   14001e084:	rex (bad) 
   14001e086:	add    BYTE PTR [rax],al
   14001e088:	jo     0x14001e0a8
   14001e08a:	add    BYTE PTR [rax],al
   14001e08c:	jo     0x14001e0be
   14001e08e:	add    DWORD PTR [rax],eax
   14001e090:	jo     0x14001e0b0
   14001e092:	add    BYTE PTR [rax],al
   14001e094:	movabs al,ds:0xa00001307000001e
   14001e09d:	(bad)  
   14001e09e:	add    BYTE PTR [rax],al
   14001e0a0:	rcr    BYTE PTR [rsi],1
   14001e0a2:	add    BYTE PTR [rax],al
   14001e0a4:	jo     0x14001e0d6
   14001e0a6:	add    DWORD PTR [rax],eax
   14001e0a8:	xor    BYTE PTR [rdi],bl
   14001e0aa:	add    BYTE PTR [rax],al
   14001e0ac:	fwait
   14001e0ad:	(bad)  
   14001e0ae:	add    BYTE PTR [rax],al
   14001e0b0:	jo     0x14001e0e2
   14001e0b2:	add    DWORD PTR [rax],eax
   14001e0b4:	movabs al,ds:0x7c000020d300001f
   14001e0bd:	xor    BYTE PTR [rcx],al
   14001e0bf:	add    al,ah
   14001e0c1:	and    BYTE PTR [rax],al
   14001e0c3:	add    dl,bh
   14001e0c5:	and    BYTE PTR [rax],al
   14001e0c7:	add    BYTE PTR [rax-0x5fffed0],bh
   14001e0cd:	and    BYTE PTR [rax],al
   14001e0cf:	add    BYTE PTR [rcx],bh
   14001e0d1:	and    al,BYTE PTR [rax]
   14001e0d3:	add    BYTE PTR [rax+rsi*1+0x22390001],bl
   14001e0da:	add    BYTE PTR [rax],al
   14001e0dc:	(bad)  
   14001e0de:	add    BYTE PTR [rax],al
   14001e0e0:	mov    BYTE PTR [rax],dh
   14001e0e2:	add    DWORD PTR [rax],eax
   14001e0e4:	(bad)  
   14001e0e6:	add    BYTE PTR [rax],al
   14001e0e8:	jne    0x14001e10c
   14001e0ea:	add    BYTE PTR [rax],al
   14001e0ec:	mov    BYTE PTR [rax],dh
   14001e0ee:	add    DWORD PTR [rax],eax
   14001e0f0:	and    BYTE PTR [rdx],0x0
   14001e0f3:	add    dl,cl
   14001e0f5:	and    al,BYTE PTR [rax]
   14001e0f7:	add    ah,al
   14001e0f9:	xor    BYTE PTR [rcx],al
   14001e0fb:	add    al,dl
   14001e0fd:	and    al,BYTE PTR [rax]
   14001e0ff:	add    bh,dh
   14001e101:	and    al,BYTE PTR [rax]
   14001e103:	add    ah,dh
   14001e105:	xor    BYTE PTR [rcx],al
   14001e107:	add    bh,dh
   14001e109:	and    al,BYTE PTR [rax]
   14001e10b:	add    BYTE PTR [rcx+0x23],cl
   14001e10e:	add    BYTE PTR [rax],al
   14001e110:	loopne 0x14001e142
   14001e112:	add    DWORD PTR [rax],eax
   14001e114:	and    rax,QWORD PTR [r8]
   14001e117:	add    BYTE PTR [rbx+riz*1+0x0],bl
   14001e11b:	add    al,dl
   14001e11d:	xor    BYTE PTR [rcx],al
   14001e11f:	add    BYTE PTR [rax+0x23],ah
   14001e122:	add    BYTE PTR [rax],al
   14001e124:	mov    bl,0x25
   14001e126:	add    BYTE PTR [rax],al
   14001e128:	add    al,0x31
   14001e12a:	add    DWORD PTR [rax],eax
   14001e12c:	shl    BYTE PTR [rip+0x26860000],0x0        # 0x16687e133
   14001e133:	add    BYTE PTR [rax],bl
   14001e135:	xor    DWORD PTR [rcx],eax
   14001e137:	add    BYTE PTR [rax-0x4cffffda],dl
   14001e13d:	add    BYTE PTR es:[rax],al
   14001e140:	sub    BYTE PTR [rcx],dh
   14001e142:	add    DWORD PTR [rax],eax
   14001e144:	shl    BYTE PTR [rsi],0x0
   14001e147:	add    ch,bl
   14001e149:	add    BYTE PTR es:[rax],al
   14001e14c:	xor    DWORD PTR fs:[rcx],eax
   14001e14f:	add    ch,bl
   14001e151:	add    BYTE PTR es:[rax],al
   14001e154:	mov    ecx,0x40000027
   14001e159:	xor    DWORD PTR [rcx],eax
   14001e15b:	add    BYTE PTR [rcx-0x3dffffd9],bh
   14001e161:	(bad)  
   14001e162:	add    BYTE PTR [rax],al
   14001e164:	xor    BYTE PTR [rcx],dh
   14001e166:	add    DWORD PTR [rax],eax
   14001e168:	sub    BYTE PTR [rax],al
   14001e16b:	add    BYTE PTR [rcx+0x28],bh
   14001e16e:	add    BYTE PTR [rax],al
   14001e170:	cwde   
   14001e171:	xor    DWORD PTR [rcx],eax
   14001e173:	add    BYTE PTR [rcx+0x28],bh
   14001e176:	add    BYTE PTR [rax],al
   14001e178:	fsubr  DWORD PTR [rax]
   14001e17a:	add    BYTE PTR [rax],al
   14001e17c:	xor    BYTE PTR [rcx],0x1
   14001e17f:	add    al,bl
   14001e181:	sub    BYTE PTR [rax],al
   14001e183:	add    dh,ah
   14001e185:	sub    BYTE PTR [rax],al
   14001e187:	add    BYTE PTR [rax+0x31],dh
   14001e18a:	add    DWORD PTR [rax],eax
   14001e18c:	lock sub BYTE PTR [rax],al
   14001e18f:	add    BYTE PTR [rdx],ch
   14001e191:	sub    al,BYTE PTR [rax]
   14001e193:	add    BYTE PTR [rcx+rsi*1+0x2a300001],ah
   14001e19a:	add    BYTE PTR [rax],al
   14001e19c:	cmp    al,0x2a
   14001e19e:	add    BYTE PTR [rax],al
   14001e1a0:	or     al,0x32
   14001e1a2:	add    DWORD PTR [rax],eax
   14001e1a4:	cmp    al,0x2a
   14001e1a6:	add    BYTE PTR [rax],al
   14001e1a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e1a9:	sub    al,BYTE PTR [rax]
   14001e1ab:	add    al,bh
   14001e1ad:	xor    DWORD PTR [rcx],eax
   14001e1af:	add    BYTE PTR [rdi+0x5000002a],ah
   14001e1b5:	sub    eax,DWORD PTR [rax]
   14001e1b7:	add    ah,bl
   14001e1b9:	xor    DWORD PTR [rcx],eax
   14001e1bb:	add    BYTE PTR [rax+0x2b],dl
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	sub    eax,DWORD PTR fs:[rax]
   14001e1c3:	add    ah,cl
   14001e1c5:	xor    DWORD PTR [rcx],eax
   14001e1c7:	add    BYTE PTR [rbx+rbp*1+0x0],ah
   14001e1cb:	add    BYTE PTR [rcx-0x43ffffd5],bl
   14001e1d1:	xor    DWORD PTR [rcx],eax
   14001e1d3:	add    BYTE PTR [rax-0x61ffffd5],ah
   14001e1d9:	sub    al,0x0
   14001e1db:	add    BYTE PTR [rax],bl
   14001e1dd:	xor    al,BYTE PTR [rcx]
   14001e1df:	add    BYTE PTR [rax+0x700002c],ah
   14001e1e5:	add    BYTE PTR cs:[rax],al
   14001e1e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e1e9:	xor    DWORD PTR [rcx],eax
   14001e1eb:	add    BYTE PTR [rax],dl
   14001e1ed:	add    BYTE PTR cs:[rax],al
   14001e1f0:	lock add BYTE PTR cs:[rax],al
   14001e1f4:	xor    BYTE PTR [rax],bh
   14001e1f6:	add    DWORD PTR [rax],eax
   14001e1f8:	lock add BYTE PTR cs:[rax],al
   14001e1fc:	mov    cl,0x2f
   14001e1fe:	add    BYTE PTR [rax],al
   14001e200:	xor    BYTE PTR [rax],bh
   14001e202:	add    DWORD PTR [rax],eax
   14001e204:	shr    BYTE PTR [rdi],0x0
   14001e207:	add    dl,dl
   14001e209:	(bad)  
   14001e20a:	add    BYTE PTR [rax],al
   14001e20c:	test   BYTE PTR [rdx],dh
   14001e20e:	add    DWORD PTR [rax],eax
   14001e210:	shr    BYTE PTR [rdi],cl
   14001e212:	add    BYTE PTR [rax],al
   14001e214:	(bad)  
   14001e215:	cmp    al,BYTE PTR [rax]
   14001e217:	add    BYTE PTR [rax+0x32],dl
   14001e21a:	add    DWORD PTR [rax],eax
   14001e21c:	(bad)  
   14001e21d:	cmp    al,BYTE PTR [rax]
   14001e21f:	add    bl,al
   14001e221:	cmp    eax,DWORD PTR [rax]
   14001e223:	add    BYTE PTR [rdx+rsi*1],bh
   14001e226:	add    DWORD PTR [rax],eax
   14001e228:	ret    
   14001e229:	cmp    eax,DWORD PTR [rax]
   14001e22b:	add    bh,ch
   14001e22d:	cmp    eax,DWORD PTR [rax]
   14001e22f:	add    BYTE PTR [rdx+rsi*1],ch
   14001e232:	add    DWORD PTR [rax],eax
   14001e234:	lock cmp eax,DWORD PTR [rax]
   14001e237:	add    BYTE PTR [rip+0xffffffffe400003c],al        # 0x12401e279
   14001e23d:	xor    al,BYTE PTR [rcx]
   14001e23f:	add    BYTE PTR [rip+0x1900003c],al        # 0x15901e281
   14001e245:	cmp    al,0x0
   14001e247:	add    al,dl
   14001e249:	xor    al,BYTE PTR [rcx]
   14001e24b:	add    BYTE PTR [rcx],bl
   14001e24d:	cmp    al,0x0
   14001e24f:	add    BYTE PTR [rsi-0x47ffffc4],al
   14001e255:	xor    al,BYTE PTR [rcx]
   14001e257:	add    BYTE PTR [rsi-0x5dffffc4],al
   14001e25d:	cmp    al,0x0
   14001e25f:	add    BYTE PTR [rax-0x5dfffece],ch
   14001e265:	cmp    al,0x0
   14001e267:	add    BYTE PTR [rsi+0x3d],cl
   14001e26a:	add    BYTE PTR [rax],al
   14001e26c:	cwde   
   14001e26d:	xor    al,BYTE PTR [rcx]
   14001e26f:	add    BYTE PTR [rax+0x3d],dl
   14001e272:	add    BYTE PTR [rax],al
   14001e274:	pop    rsi
   14001e275:	cmp    eax,0x333c0000
   14001e27a:	add    DWORD PTR [rax],eax
   14001e27c:	pop    rsi
   14001e27d:	cmp    eax,0x3e140000
   14001e282:	add    BYTE PTR [rax],al
   14001e284:	sub    BYTE PTR [rbx],dh
   14001e286:	add    DWORD PTR [rax],eax
   14001e288:	adc    al,0x3e
   14001e28a:	add    BYTE PTR [rax],al
   14001e28c:	xor    al,0x3e
   14001e28e:	add    BYTE PTR [rax],al
   14001e290:	sbb    BYTE PTR [rbx],dh
   14001e292:	add    DWORD PTR [rax],eax
   14001e294:	xor    al,0x3e
   14001e296:	add    BYTE PTR [rax],al
   14001e298:	rex.RX
   14001e299:	add    BYTE PTR [rax],al
   14001e29c:	add    BYTE PTR [rbx],dh
   14001e29e:	add    DWORD PTR [rax],eax
   14001e2a0:	rex.RX
   14001e2a1:	add    BYTE PTR [rax],al
   14001e2a4:	push   rcx
   14001e2a5:	add    BYTE PTR [rax],al
   14001e2a8:	lock xor al,BYTE PTR [rcx]
   14001e2ab:	add    BYTE PTR [rax+0x40],ah
   14001e2ae:	add    BYTE PTR [rax],al
   14001e2b0:	(bad)  
   14001e2b1:	add    BYTE PTR [rax],al
   14001e2b4:	xor    rax,QWORD PTR [rcx]
   14001e2b7:	add    al,dl
   14001e2b9:	add    BYTE PTR [rax],al
   14001e2bc:	pushf  
   14001e2bd:	add    BYTE PTR [r8],al
   14001e2c0:	push   rsp
   14001e2c1:	xor    eax,DWORD PTR [rcx]
   14001e2c3:	add    BYTE PTR [rax-0x4effffbf],ah
   14001e2c9:	add    BYTE PTR [r8],al
   14001e2cc:	test   al,0x33
   14001e2ce:	add    DWORD PTR [rax],eax
   14001e2d0:	mov    cl,0x41
   14001e2d2:	add    BYTE PTR [rax],al
   14001e2d4:	(bad)
   14001e2d8:	xchg   esp,eax
   14001e2d9:	xor    eax,DWORD PTR [rcx]
   14001e2db:	add    ah,al
   14001e2dd:	add    BYTE PTR [r8],al
   14001e2e0:	mov    bl,0x42
   14001e2e2:	add    BYTE PTR [rax],al
   14001e2e4:	xor    BYTE PTR [rbx],0x1
   14001e2e7:	add    BYTE PTR [rbx-0x41ffffbe],dh
   14001e2ed:	rex.X add BYTE PTR [rax],al
   14001e2f0:	jo     0x14001e325
   14001e2f2:	add    DWORD PTR [rax],eax
   14001e2f4:	mov    esi,0xeb000042
   14001e2f9:	rex.X add BYTE PTR [rax],al
   14001e2fc:	(bad)  
   14001e2fd:	xor    eax,DWORD PTR [rcx]
   14001e2ff:	add    al,dh
   14001e301:	rex.X add BYTE PTR [rax],al
   14001e304:	rex.XB add BYTE PTR [r8d],al
   14001e308:	in     al,dx
   14001e309:	xor    eax,DWORD PTR [rcx]
   14001e30b:	add    BYTE PTR [rdi+0x43],ah
   14001e30e:	add    BYTE PTR [rax],al
   14001e310:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e311:	rex.XB add BYTE PTR [r8],al
   14001e314:	fdiv   DWORD PTR [rbx]
   14001e316:	add    DWORD PTR [rax],eax
   14001e318:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e319:	rex.XB add BYTE PTR [r8],al
   14001e31c:	stos   BYTE PTR es:[rdi],al
   14001e31d:	rex.XB add BYTE PTR [r8],al
   14001e320:	enter  0x133,0x0
   14001e324:	stos   BYTE PTR es:[rdi],al
   14001e325:	rex.XB add BYTE PTR [r8],al
   14001e328:	loope  0x14001e36d
   14001e32a:	add    BYTE PTR [rax],al
   14001e32c:	mov    ah,0x33
   14001e32e:	add    DWORD PTR [rax],eax
   14001e330:	loope  0x14001e375
   14001e332:	add    BYTE PTR [rax],al
   14001e334:	hlt    
   14001e335:	rex.XB add BYTE PTR [r8],al
   14001e338:	enter  0x133,0x0
   14001e33c:	add    BYTE PTR [rax+rax*1+0x0],al
   14001e340:	push   0x44
   14001e342:	add    BYTE PTR [rax],al
   14001e344:	sub    BYTE PTR [rcx],dh
   14001e346:	add    DWORD PTR [rax],eax
   14001e348:	jo     0x14001e38e
   14001e34a:	add    BYTE PTR [rax],al
   14001e34c:	xchg   ebx,eax
   14001e34d:	add    BYTE PTR [rax],r8b
   14001e350:	sub    BYTE PTR [rcx+rax*1],dh
   14001e353:	add    BYTE PTR [rbx+0x50000044],dl
   14001e359:	add    BYTE PTR [r8],r8b
   14001e35c:	or     al,0x34
   14001e35e:	add    DWORD PTR [rax],eax
   14001e360:	push   rax
   14001e361:	add    BYTE PTR [r8],r8b
   14001e364:	pop    rax
   14001e365:	add    BYTE PTR [r8],r8b
   14001e368:	cld    
   14001e369:	xor    eax,DWORD PTR [rcx]
   14001e36b:	add    BYTE PTR [rax+0x45],ah
   14001e36e:	add    BYTE PTR [rax],al
   14001e370:	stos   BYTE PTR es:[rdi],al
   14001e371:	add    BYTE PTR [r8],r8b
   14001e374:	pop    rsp
   14001e375:	xor    al,0x1
   14001e377:	add    BYTE PTR [rdx-0xaffffbb],ch
   14001e37d:	add    BYTE PTR [r8],r8b
   14001e380:	rex.R xor al,0x1
   14001e383:	add    ch,dh
   14001e385:	add    BYTE PTR [r8],r8b
   14001e388:	add    eax,DWORD PTR [rsi+0x0]
   14001e38b:	add    BYTE PTR [rsp+rsi*1],dh
   14001e38e:	add    DWORD PTR [rax],eax
   14001e390:	adc    BYTE PTR [rsi+0x0],al
   14001e393:	add    BYTE PTR [rip+0x24000046],bl        # 0x16401e3df
   14001e399:	xor    eax,0x461d0001
   14001e39e:	add    BYTE PTR [rax],al
   14001e3a0:	and    eax,0xc000046
   14001e3a5:	xor    eax,0x46250001
   14001e3aa:	add    BYTE PTR [rax],al
   14001e3ac:	rex.RX add BYTE PTR fs:[rax],r8b
   14001e3b0:	call   0x1a401e4e9
   14001e3b5:	rex.RX add BYTE PTR [rax],r8b
   14001e3b8:	icebp  
   14001e3b9:	rex.RXB add BYTE PTR [r8],r8b
   14001e3bc:	int3   
   14001e3bd:	xor    al,0x1
   14001e3bf:	add    cl,dh
   14001e3c1:	rex.RXB add BYTE PTR [r8],r8b
   14001e3c4:	fist   DWORD PTR [rax+0x0]
   14001e3c7:	add    BYTE PTR [rax-0x24fffecc],bh
   14001e3cd:	push   rax
   14001e3ce:	add    BYTE PTR [rax],al
   14001e3d0:	jo     0x14001e426
   14001e3d2:	add    BYTE PTR [rax],al
   14001e3d4:	pushf  
   14001e3d5:	xor    al,0x1
   14001e3d7:	add    BYTE PTR [rax+0x54],dh
   14001e3da:	add    BYTE PTR [rax],al
   14001e3dc:	pop    rbx
   14001e3dd:	push   rdi
   14001e3de:	add    BYTE PTR [rax],al
   14001e3e0:	jl     0x14001e416
   14001e3e2:	add    DWORD PTR [rax],eax
   14001e3e4:	pop    rbx
   14001e3e5:	push   rdi
   14001e3e6:	add    BYTE PTR [rax],al
   14001e3e8:	out    0x58,eax
   14001e3ea:	add    BYTE PTR [rax],al
   14001e3ec:	push   0xfffffffff0000134
   14001e3f1:	pop    rax
   14001e3f2:	add    BYTE PTR [rax],al
   14001e3f4:	xchg   edi,eax
   14001e3f5:	pop    rbp
   14001e3f6:	add    BYTE PTR [rax],al
   14001e3f8:	xor    al,0x35
   14001e3fa:	add    DWORD PTR [rax],eax
   14001e3fc:	movabs al,ds:0x7000005dd000005d
   14001e405:	xor    BYTE PTR [rcx],al
   14001e407:	add    al,dl
   14001e409:	pop    rbp
   14001e40a:	add    BYTE PTR [rax],al
   14001e40c:	add    BYTE PTR [rsi+0x0],bl
   14001e40f:	add    BYTE PTR [rax+0x30],dh
   14001e412:	add    DWORD PTR [rax],eax
   14001e414:	and    BYTE PTR [rsi+0x0],bl
   14001e417:	add    cl,al
   14001e419:	pop    rsi
   14001e41a:	add    BYTE PTR [rax],al
   14001e41c:	push   rax
   14001e41d:	xor    eax,0x5ed00001
   14001e422:	add    BYTE PTR [rax],al
   14001e424:	adc    BYTE PTR [rbx+0x0],ah
   14001e427:	add    BYTE PTR [rax+0x35],ah
   14001e42a:	add    DWORD PTR [rax],eax
   14001e42c:	adc    BYTE PTR [rbx+0x0],ah
   14001e42f:	add    BYTE PTR [rax+0x63],al
   14001e432:	add    BYTE PTR [rax],al
   14001e434:	jo     0x14001e466
   14001e436:	add    DWORD PTR [rax],eax
   14001e438:	rex movsxd eax,DWORD PTR [rax]
   14001e43b:	add    BYTE PTR [rax+0x63],dh
   14001e43e:	add    BYTE PTR [rax],al
   14001e440:	jo     0x14001e472
   14001e442:	add    DWORD PTR [rax],eax
   14001e444:	nop
   14001e445:	movsxd eax,DWORD PTR [rax]
   14001e447:	add    BYTE PTR [rcx+0x64],cl
   14001e44a:	add    BYTE PTR [rax],al
   14001e44c:	jo     0x14001e47e
   14001e44e:	add    DWORD PTR [rax],eax
   14001e450:	push   rax
   14001e451:	add    BYTE PTR fs:[rax],al
   14001e454:	jg     0x14001e4ba
   14001e456:	add    BYTE PTR [rax],al
   14001e458:	jo     0x14001e48a
   14001e45a:	add    DWORD PTR [rax],eax
   14001e45c:	and    BYTE PTR [rax+rax*1+0x0],0xb2
   14001e461:	add    BYTE PTR fs:[rax],al
   14001e464:	sub    BYTE PTR [rcx],dh
   14001e466:	add    DWORD PTR [rax],eax
   14001e468:	shl    BYTE PTR [rax+rax*1+0x0],0xe7
   14001e46d:	add    BYTE PTR fs:[rax],al
   14001e470:	lods   al,BYTE PTR ds:[rsi]
   14001e471:	xor    eax,0x64e70001
   14001e476:	add    BYTE PTR [rax],al
   14001e478:	movabs eax,ds:0xa100013588000066
   14001e481:	data16 add BYTE PTR [rax],al
   14001e484:	loop   0x14001e4ec
   14001e486:	add    BYTE PTR [rax],al
   14001e488:	js     0x14001e4bf
   14001e48a:	add    DWORD PTR [rax],eax
   14001e48c:	lock data16 add BYTE PTR [rax],al
   14001e490:	clc    
   14001e491:	push   0x35b80000
   14001e496:	add    DWORD PTR [rax],eax
   14001e498:	add    BYTE PTR [rcx+0x0],ch
   14001e49b:	add    BYTE PTR [rbp+0x69],al
   14001e49e:	add    BYTE PTR [rax],al
   14001e4a0:	cmp    BYTE PTR [rsi],dh
   14001e4a2:	add    DWORD PTR [rax],eax
   14001e4a4:	imul   r8d,DWORD PTR [r8],0x697d00
   14001e4ab:	add    BYTE PTR [rsi+rsi*1],ah
   14001e4ae:	add    DWORD PTR [rax],eax
   14001e4b0:	jge    0x14001e51b
   14001e4b2:	add    BYTE PTR [rax],al
   14001e4b4:	(bad)  
   14001e4b5:	imul   eax,DWORD PTR [rax],0x1360c00
   14001e4bb:	add    dl,ch
   14001e4bd:	imul   eax,DWORD PTR [rax],0x6a0b00
   14001e4c3:	add    ah,bh
   14001e4c5:	xor    eax,0x6a0b0001
   14001e4ca:	add    BYTE PTR [rax],al
   14001e4cc:	pop    rbx
   14001e4cd:	imul   eax,DWORD PTR [rax],0x0
   14001e4d0:	call   0x1a001e60a
   14001e4d5:	imul   eax,DWORD PTR [rax],0x0
   14001e4d8:	lahf   
   14001e4d9:	ins    BYTE PTR es:[rdi],dx
   14001e4da:	add    BYTE PTR [rax],al
   14001e4dc:	push   rax
   14001e4dd:	add    DWORD PTR ss:[rax],eax
   14001e4e0:	movabs al,ds:0x9400006d1200006c
   14001e4e9:	add    DWORD PTR ss:[rax],eax
   14001e4ec:	adc    ch,BYTE PTR [rbp+0x0]
   14001e4ef:	add    BYTE PTR [rsi+0x74],dl
   14001e4f2:	add    BYTE PTR [rax],al
   14001e4f4:	je     0x14001e52c
   14001e4f6:	add    DWORD PTR [rax],eax
   14001e4f8:	push   rsi
   14001e4f9:	je     0x14001e4fb
   14001e4fb:	add    BYTE PTR [rcx+0x74],ah
   14001e4fe:	add    BYTE PTR [rax],al
   14001e500:	fs add DWORD PTR ss:[rax],eax
   14001e504:	jo     0x14001e57a
   14001e506:	add    BYTE PTR [rax],al
   14001e508:	bnd jne 0x14001e50b
   14001e50b:	add    ah,ah
   14001e50d:	(bad)  
   14001e50e:	add    DWORD PTR [rax],eax
   14001e510:	add    BYTE PTR [rsi+0x0],dh
   14001e513:	add    BYTE PTR [rsi],dh
   14001e515:	js     0x14001e517
   14001e517:	add    ah,ah
   14001e519:	(bad)  
   14001e51a:	add    DWORD PTR [rax],eax
   14001e51c:	rex js 0x14001e51f
   14001e51f:	add    BYTE PTR [rbx-0x5fffff88],ch
   14001e525:	add    DWORD PTR ss:[rax],eax
   14001e528:	mov    al,0x78
   14001e52a:	add    BYTE PTR [rax],al
   14001e52c:	add    al,0x79
   14001e52e:	add    BYTE PTR [rax],al
   14001e530:	sub    BYTE PTR [rcx],dh
   14001e532:	add    DWORD PTR [rax],eax
   14001e534:	adc    BYTE PTR [rcx+0x0],bh
   14001e537:	add    BYTE PTR [rcx+rdi*2],ch
   14001e53a:	add    BYTE PTR [rax],al
   14001e53c:	sub    BYTE PTR [rcx],dh
   14001e53e:	add    DWORD PTR [rax],eax
   14001e540:	xor    BYTE PTR [rcx+0x0],bh
   14001e543:	add    BYTE PTR [rcx+rdi*2+0x0],cl
   14001e547:	add    BYTE PTR [rax],ch
   14001e549:	xor    DWORD PTR [rcx],eax
   14001e54b:	add    BYTE PTR [rax+0x79],ah
   14001e54e:	add    BYTE PTR [rax],al
   14001e550:	test   eax,0xac000081
   14001e555:	add    DWORD PTR ss:[rax],eax
   14001e558:	mov    al,0x81
   14001e55a:	add    BYTE PTR [rax],al
   14001e55c:	loopne 0x14001e4df
   14001e55e:	add    BYTE PTR [rax],al
   14001e560:	jo     0x14001e592
   14001e562:	add    DWORD PTR [rax],eax
   14001e564:	loopne 0x14001e4e7
   14001e566:	add    BYTE PTR [rax],al
   14001e568:	adc    BYTE PTR [rdx+0x30700000],al
   14001e56e:	add    DWORD PTR [rax],eax
   14001e570:	adc    BYTE PTR [rdx-0x7dc00000],al
   14001e576:	add    BYTE PTR [rax],al
   14001e578:	jo     0x14001e5aa
   14001e57a:	add    DWORD PTR [rax],eax
   14001e57c:	rex (bad) 
   14001e57e:	add    BYTE PTR [rax],al
   14001e580:	jo     0x14001e504
   14001e582:	add    BYTE PTR [rax],al
   14001e584:	jo     0x14001e5b6
   14001e586:	add    DWORD PTR [rax],eax
   14001e588:	jo     0x14001e50c
   14001e58a:	add    BYTE PTR [rax],al
   14001e58c:	movabs al,ds:0xf000013070000082
   14001e595:	(bad)  
   14001e596:	add    BYTE PTR [rax],al
   14001e598:	out    dx,eax
   14001e599:	add    DWORD PTR [rax],0x0
   14001e59c:	shl    BYTE PTR [rsi],0x1
   14001e59f:	add    al,dh
   14001e5a1:	add    DWORD PTR [rax],0x0
   14001e5a4:	add    eax,DWORD PTR [rax+rax*1+0x1371400]
   14001e5ab:	add    BYTE PTR [rbx],al
   14001e5ad:	test   BYTE PTR [rax],al
   14001e5af:	add    BYTE PTR [rbp-0x79],ah
   14001e5b2:	add    BYTE PTR [rax],al
   14001e5b4:	loopne 0x14001e5ec
   14001e5b6:	add    DWORD PTR [rax],eax
   14001e5b8:	xchg   DWORD PTR gs:[rax],eax
   14001e5bb:	add    BYTE PTR [rdi-0x79],ah
   14001e5be:	add    BYTE PTR [rax],al
   14001e5c0:	shl    BYTE PTR [rsi],1
   14001e5c2:	add    DWORD PTR [rax],eax
   14001e5c4:	jo     0x14001e54d
   14001e5c6:	add    BYTE PTR [rax],al
   14001e5c8:	rex.RX mov es,WORD PTR [rax]
   14001e5cb:	add    BYTE PTR [rax],ah
   14001e5cd:	(bad)  
   14001e5ce:	add    DWORD PTR [rax],eax
   14001e5d0:	push   rax
   14001e5d1:	mov    es,WORD PTR [rax]
   14001e5d3:	add    BYTE PTR [rax+0x7000008e],al
   14001e5d9:	xor    BYTE PTR [rcx],al
   14001e5db:	add    BYTE PTR [rax-0x4fffff72],al
   14001e5e1:	mov    es,WORD PTR [rax]
   14001e5e3:	add    BYTE PTR [rax+0x30],dh
   14001e5e6:	add    DWORD PTR [rax],eax
   14001e5e8:	mov    al,0x8e
   14001e5ea:	add    BYTE PTR [rax],al
   14001e5ec:	loopne 0x14001e57c
   14001e5ee:	add    BYTE PTR [rax],al
   14001e5f0:	jo     0x14001e622
   14001e5f2:	add    DWORD PTR [rax],eax
   14001e5f4:	adc    BYTE PTR [rdi-0x66210000],cl
   14001e5fa:	add    BYTE PTR [rax],al
   14001e5fc:	cmp    BYTE PTR [rdi],dh
   14001e5fe:	add    DWORD PTR [rax],eax
   14001e600:	loopne 0x14001e59b
   14001e602:	add    BYTE PTR [rax],al
   14001e604:	adc    BYTE PTR [rdx+0x30700000],bl
   14001e60a:	add    DWORD PTR [rax],eax
   14001e60c:	adc    BYTE PTR [rdx-0x65c00000],bl
   14001e612:	add    BYTE PTR [rax],al
   14001e614:	jo     0x14001e646
   14001e616:	add    DWORD PTR [rax],eax
   14001e618:	(bad)  
   14001e619:	(bad)  
   14001e61a:	add    BYTE PTR [rax],al
   14001e61c:	popf   
   14001e61d:	(bad)  
   14001e61e:	add    BYTE PTR [rax],al
   14001e620:	jo     0x14001e652
   14001e622:	add    DWORD PTR [rax],eax
   14001e624:	movabs al,ds:0x7800009ac000009a
   14001e62d:	(bad)  
   14001e62e:	add    DWORD PTR [rax],eax
   14001e630:	rcr    BYTE PTR [rdx-0x64e00000],0x0
   14001e637:	add    BYTE PTR [rdi+rsi*1+0x1],ah
   14001e63b:	add    BYTE PTR [rax],ah
   14001e63d:	fwait
   14001e63e:	add    BYTE PTR [rax],al
   14001e640:	es fwait
   14001e642:	add    BYTE PTR [rax],al
   14001e644:	push   rsp
   14001e645:	(bad)  
   14001e646:	add    DWORD PTR [rax],eax
   14001e648:	xor    BYTE PTR [rbx-0x64ad0000],bl
   14001e64e:	add    BYTE PTR [rax],al
   14001e650:	js     0x14001e689
   14001e652:	add    DWORD PTR [rax],eax
   14001e654:	push   rbx
   14001e655:	fwait
   14001e656:	add    BYTE PTR [rax],al
   14001e658:	mov    bh,0x9b
   14001e65a:	add    BYTE PTR [rax],al
   14001e65c:	nop
   14001e65d:	(bad)  
   14001e65e:	add    DWORD PTR [rax],eax
   14001e660:	mov    bh,0x9b
   14001e662:	add    BYTE PTR [rax],al
   14001e664:	mov    ebp,0x8000009b
   14001e669:	(bad)  
   14001e66a:	add    DWORD PTR [rax],eax
   14001e66c:	rcr    BYTE PTR [rbx-0x64150000],0x0
   14001e673:	add    al,dl
   14001e675:	(bad)  
   14001e676:	add    DWORD PTR [rax],eax
   14001e678:	jmp    0x14001e615
   14001e67a:	add    BYTE PTR [rax],al
   14001e67c:	popf   
   14001e67d:	pushf  
   14001e67e:	add    BYTE PTR [rax],al
   14001e680:	mov    ah,0x37
   14001e682:	add    DWORD PTR [rax],eax
   14001e684:	popf   
   14001e685:	pushf  
   14001e686:	add    BYTE PTR [rax],al
   14001e688:	movabs ds:0xb0000137a400009c,eax
   14001e691:	pushf  
   14001e692:	add    BYTE PTR [rax],al
   14001e694:	rex.B sahf 
   14001e696:	add    BYTE PTR [rax],al
   14001e698:	fdiv   DWORD PTR [rdi]
   14001e69a:	add    DWORD PTR [rax],eax
   14001e69c:	push   rax
   14001e69d:	sahf   
   14001e69e:	add    BYTE PTR [rax],al
   14001e6a0:	(bad)  
   14001e6a1:	movabs ds:0xa280000137e40000,al
   14001e6aa:	add    BYTE PTR [rax],al
   14001e6ac:	shl    BYTE PTR [rdx+0x30700000],0x1
   14001e6b3:	add    BYTE PTR [rax],dh
   14001e6b5:	movabs ds:0x38200000a35f0000,eax
   14001e6be:	add    DWORD PTR [rax],eax
   14001e6c0:	(bad)  
   14001e6c1:	movabs ds:0x38200000a4530000,eax
   14001e6ca:	add    DWORD PTR [rax],eax
   14001e6cc:	push   rbx
   14001e6cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e6ce:	add    BYTE PTR [rax],al
   14001e6d0:	lea    esp,[rax+rax*1+0x1380c00]
   14001e6d7:	add    BYTE PTR [rbp-0x57ffff5c],cl
   14001e6dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e6de:	add    BYTE PTR [rax],al
   14001e6e0:	cld    
   14001e6e1:	(bad)  
   14001e6e2:	add    DWORD PTR [rax],eax
   14001e6e4:	shl    BYTE PTR [rax+rax*1+0xa58600],1
   14001e6eb:	add    BYTE PTR [rax],dh
   14001e6ed:	cmp    BYTE PTR [rcx],al
   14001e6ef:	add    BYTE PTR [rax-0x43ffff5b],dl
   14001e6f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e6f6:	add    BYTE PTR [rax],al
   14001e6f8:	sub    BYTE PTR [rax],bh
   14001e6fa:	add    DWORD PTR [rax],eax
   14001e6fc:	adc    BYTE PTR [rsi-0x596e0000],ah
   14001e702:	add    BYTE PTR [rax],al
   14001e704:	xor    BYTE PTR [rax],bh
   14001e706:	add    DWORD PTR [rax],eax
   14001e708:	shl    BYTE PTR [rsi-0x590b0000],0x0
   14001e70f:	add    BYTE PTR [rax],ch
   14001e711:	cmp    BYTE PTR [rcx],al
   14001e713:	add    BYTE PTR [rax-0x59],dl
   14001e716:	add    BYTE PTR [rax],al
   14001e718:	frstor [rdi+0x38300000]
   14001e71e:	add    DWORD PTR [rax],eax
   14001e720:	sbb    BYTE PTR [rcx-0x4e7f0000],dh
   14001e726:	add    BYTE PTR [rax],al
   14001e728:	cmp    BYTE PTR [rcx],r8b
   14001e72b:	add    BYTE PTR [rcx+rsi*4-0x4dcc0000],al
   14001e732:	add    BYTE PTR [rax],al
   14001e734:	push   rsp
   14001e735:	cmp    BYTE PTR [rcx],al
   14001e737:	add    BYTE PTR [rdx+rsi*4],dh
   14001e73a:	add    BYTE PTR [rax],al
   14001e73c:	rex.WXB mov r10b,0x0
   14001e73f:	add    BYTE PTR [rax],ch
   14001e741:	cmp    BYTE PTR [rcx],al
   14001e743:	add    BYTE PTR [rdx+rsi*4+0x0],cl
   14001e747:	add    BYTE PTR [rcx+0x200000b2],dh
   14001e74d:	cmp    BYTE PTR [rcx],al
   14001e74f:	add    BYTE PTR [rdx+rsi*4-0x4b460000],dh
   14001e756:	add    BYTE PTR [rax],al
   14001e758:	je     0x14001e792
   14001e75a:	add    DWORD PTR [rax],eax
   14001e75c:	mov    esp,0xa10000b4
   14001e761:	mov    ch,0x0
   14001e763:	add    BYTE PTR [rax],ch
   14001e765:	cmp    BYTE PTR [rcx],al
   14001e767:	add    BYTE PTR [rbp+rsi*4-0x4a4a0000],ah
   14001e76e:	add    BYTE PTR [rax],al
   14001e770:	sub    BYTE PTR [rax],bh
   14001e772:	add    DWORD PTR [rax],eax
   14001e774:	mov    eax,0x30000b5
   14001e779:	mov    dh,0x0
   14001e77b:	add    BYTE PTR [rax+rdi*1-0x49fbffff],dh
   14001e782:	add    BYTE PTR [rax],al
   14001e784:	(bad)  
   14001e785:	mov    dh,0x0
   14001e787:	add    ah,bl
   14001e789:	cmp    BYTE PTR [rcx],al
   14001e78b:	add    BYTE PTR [rsi+rsi*4+0x0],bh
   14001e78f:	add    BYTE PTR [rbp+0x280000b6],bh
   14001e795:	cmp    BYTE PTR [rcx],al
   14001e797:	add    al,al
   14001e799:	mov    dh,0x0
   14001e79b:	add    al,bl
   14001e79d:	mov    dh,0x0
   14001e79f:	add    BYTE PTR [rax],ch
   14001e7a1:	cmp    BYTE PTR [rcx],al
   14001e7a3:	add    al,ah
   14001e7a5:	mov    dh,0x0
   14001e7a7:	add    BYTE PTR [rax],bl
   14001e7a9:	mov    bh,0x0
   14001e7ab:	add    BYTE PTR [rax+0x30],dh
   14001e7ae:	add    DWORD PTR [rax],eax
   14001e7b0:	sbb    BYTE PTR [rdi-0x48b00000],dh
   14001e7b6:	add    BYTE PTR [rax],al
   14001e7b8:	jo     0x14001e7ea
   14001e7ba:	add    DWORD PTR [rax],eax
   14001e7bc:	loopne 0x14001e775
   14001e7be:	add    BYTE PTR [rax],al
   14001e7c0:	and    DWORD PTR [rax+0x39040000],edi
   14001e7c6:	add    DWORD PTR [rax],eax
   14001e7c8:	xor    al,0xb8
   14001e7ca:	add    BYTE PTR [rax],al
   14001e7cc:	out    0xb8,eax
   14001e7ce:	add    BYTE PTR [rax],al
   14001e7d0:	and    al,0x39
   14001e7d2:	add    DWORD PTR [rax],eax
   14001e7d4:	add    BYTE PTR [rcx-0x46700000],bh
   14001e7da:	add    BYTE PTR [rax],al
   14001e7dc:	xor    BYTE PTR [rcx],bh
   14001e7de:	add    DWORD PTR [rax],eax
   14001e7e0:	nop
   14001e7e1:	mov    ecx,0xba030000
   14001e7e6:	add    BYTE PTR [rax],al
   14001e7e8:	ins    BYTE PTR es:[rdi],dx
   14001e7e9:	cmp    DWORD PTR [rcx],eax
   14001e7eb:	add    BYTE PTR [rbx],al
   14001e7ed:	mov    edx,0xba330000
   14001e7f2:	add    BYTE PTR [rax],al
   14001e7f4:	pop    rax
   14001e7f5:	cmp    DWORD PTR [rcx],eax
   14001e7f7:	add    BYTE PTR [rbx],dh
   14001e7f9:	mov    edx,0xba9e0000
   14001e7fe:	add    BYTE PTR [rax],al
   14001e800:	cmp    QWORD PTR [rcx],rax
   14001e803:	add    BYTE PTR [rax-0x36ffff46],dh
   14001e809:	mov    edx,0x38ac0000
   14001e80e:	add    DWORD PTR [rax],eax
   14001e810:	leave  
   14001e811:	mov    edx,0xbae50000
   14001e816:	add    BYTE PTR [rax],al
   14001e818:	lods   al,BYTE PTR ds:[rsi]
   14001e819:	cmp    BYTE PTR [rcx],al
   14001e81b:	add    ch,ah
   14001e81d:	mov    edx,0xbb240000
   14001e822:	add    BYTE PTR [rax],al
   14001e824:	lods   al,BYTE PTR ds:[rsi]
   14001e825:	cmp    BYTE PTR [rcx],al
   14001e827:	add    BYTE PTR [rbx+rdi*4],ah
   14001e82a:	add    BYTE PTR [rax],al
   14001e82c:	rex.WRX movabs rbx,0xbb50000138ac0000
   14001e836:	add    BYTE PTR [rax],al
   14001e838:	jno    0x14001e7f5
   14001e83a:	add    BYTE PTR [rax],al
   14001e83c:	lods   al,BYTE PTR ds:[rsi]
   14001e83d:	cmp    BYTE PTR [rcx],al
   14001e83f:	add    BYTE PTR [rax-0x4cffff45],al
   14001e845:	mov    ebx,0x38280000
   14001e84a:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

000000014001f000 <.rsrc>:
	...
   14001f008:	add    al,0x0
   14001f00a:	add    BYTE PTR [rax],al
   14001f00c:	add    BYTE PTR [rax],al
   14001f00e:	add    DWORD PTR [rax],eax
   14001f010:	sbb    BYTE PTR [rax],al
   14001f012:	add    BYTE PTR [rax],al
   14001f014:	sbb    BYTE PTR [rax],al
   14001f016:	add    BYTE PTR [rax+0x0],al
   14001f01c:	add    BYTE PTR [rax],al
   14001f01e:	add    BYTE PTR [rax],al
   14001f020:	add    al,0x0
   14001f022:	add    BYTE PTR [rax],al
   14001f024:	add    BYTE PTR [rax],al
   14001f026:	add    DWORD PTR [rax],eax
   14001f028:	add    DWORD PTR [rax],eax
   14001f02a:	add    BYTE PTR [rax],al
   14001f02c:	xor    BYTE PTR [rax],al
   14001f02e:	add    BYTE PTR [rax+0x0],al
   14001f034:	add    BYTE PTR [rax],al
   14001f036:	add    BYTE PTR [rax],al
   14001f038:	add    al,0x0
   14001f03a:	add    BYTE PTR [rax],al
   14001f03c:	add    BYTE PTR [rax],al
   14001f03e:	add    DWORD PTR [rax],eax
   14001f040:	or     DWORD PTR [rax+rax*1],eax
   14001f043:	add    BYTE PTR [rax+0x0],cl
   14001f046:	add    BYTE PTR [rax],al
   14001f048:	pop    rax
   14001f049:	lock add DWORD PTR [rax],eax
   14001f04c:	push   0x3
   14001f04e:	add    BYTE PTR [rax],al
   14001f050:	in     al,0x4
   14001f052:	add    BYTE PTR [rax],al
   14001f054:	add    BYTE PTR [rax],al
   14001f056:	add    BYTE PTR [rax],al
   14001f058:	cmp    al,0x61
   14001f05a:	jae    0x14001f0cf
   14001f05c:	gs ins DWORD PTR es:[rdi],dx
   14001f05e:	(bad)  
   14001f05f:	ins    BYTE PTR es:[rdi],dx
   14001f060:	jns    0x14001f082
   14001f062:	js     0x14001f0d1
   14001f064:	ins    BYTE PTR es:[rdi],dx
   14001f065:	outs   dx,BYTE PTR ds:[rsi]
   14001f066:	jae    0x14001f0a5
   14001f068:	and    dh,BYTE PTR [rbp+0x72]
   14001f06b:	outs   dx,BYTE PTR ds:[rsi]
   14001f06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001f06f:	push   0x73616d65
   14001f074:	sub    eax,0x7263696d
   14001f079:	outs   dx,DWORD PTR ds:[rsi]
   14001f07a:	jae    0x14001f0eb
   14001f07c:	data16 je 0x14001f0ac
   14001f07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001f082:	cmp    ah,BYTE PTR [rcx+0x73]
   14001f085:	ins    DWORD PTR es:[rdi],dx
   14001f086:	cs jbe 0x14001f0ba
   14001f089:	and    ah,BYTE PTR [rax]
   14001f08b:	ins    DWORD PTR es:[rdi],dx
   14001f08c:	(bad)  
   14001f08d:	outs   dx,BYTE PTR ds:[rsi]
   14001f08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001f095:	jb     0x14001f10a
   14001f097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001f09e:	xor    BYTE PTR [rdx],ah
   14001f0a0:	ds or  eax,0x3c20200a
   14001f0a6:	je     0x14001f11a
   14001f0a8:	jne    0x14001f11d
   14001f0aa:	je     0x14001f0f5
   14001f0ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f0ad:	outs   dx,WORD PTR ds:[rsi]
   14001f0af:	and    BYTE PTR [rax+0x6d],bh
   14001f0b2:	ins    BYTE PTR es:[rdi],dx
   14001f0b3:	outs   dx,BYTE PTR ds:[rsi]
   14001f0b4:	jae    0x14001f0f3
   14001f0b6:	and    dh,BYTE PTR [rbp+0x72]
   14001f0b9:	outs   dx,BYTE PTR ds:[rsi]
   14001f0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14001f0bd:	push   0x73616d65
   14001f0c2:	sub    eax,0x7263696d
   14001f0c7:	outs   dx,DWORD PTR ds:[rsi]
   14001f0c8:	jae    0x14001f139
   14001f0ca:	data16 je 0x14001f0fa
   14001f0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001f0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14001f0d3:	ins    DWORD PTR es:[rdi],dx
   14001f0d4:	cs jbe 0x14001f10a
   14001f0d7:	and    bh,BYTE PTR [rsi]
   14001f0d9:	or     eax,0x2020200a
   14001f0de:	and    BYTE PTR [rbx+rsi*2],bh
   14001f0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001f0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001f0ed:	and    BYTE PTR [rax],ah
   14001f0ef:	and    BYTE PTR [rax],ah
   14001f0f1:	cmp    al,0x72
   14001f0f3:	gs jno 0x14001f16b
   14001f0f6:	gs jae 0x14001f16d
   14001f0f9:	gs fs push rax
   14001f0fc:	jb     0x14001f167
   14001f0fe:	jbe    0x14001f169
   14001f100:	ins    BYTE PTR es:[rdi],dx
   14001f101:	gs addr32 gs jae 0x14001f144
   14001f106:	or     eax,0x2020200a
   14001f10b:	and    BYTE PTR [rax],ah
   14001f10d:	and    BYTE PTR [rax],ah
   14001f10f:	and    BYTE PTR [rdx+rsi*2],bh
   14001f112:	gs jno 0x14001f18a
   14001f115:	gs jae 0x14001f18c
   14001f118:	gs fs rex.RB js 0x14001f182
   14001f11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14001f120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001f127:	ins    BYTE PTR es:[rdi],dx
   14001f128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001f12c:	gs ins BYTE PTR es:[rdi],dx
   14001f12e:	cmp    eax,0x49736122
   14001f133:	outs   dx,BYTE PTR ds:[rsi]
   14001f134:	jbe    0x14001f1a5
   14001f136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001f13a:	and    BYTE PTR [rbp+0x69],dh
   14001f13d:	movsxd esp,DWORD PTR [r11+0x65]
   14001f141:	jae    0x14001f1b6
   14001f143:	cmp    eax,0x6c616622
   14001f148:	jae    0x14001f1af
   14001f14a:	and    bh,BYTE PTR [rsi]
   14001f14c:	cmp    al,0x2f
   14001f14e:	jb     0x14001f1b5
   14001f150:	jno    0x14001f1c7
   14001f152:	gs jae 0x14001f1c9
   14001f155:	gs fs rex.RB js 0x14001f1bf
   14001f15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001f15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001f164:	ins    BYTE PTR es:[rdi],dx
   14001f165:	ds or  eax,0x2020200a
   14001f16b:	and    BYTE PTR [rax],ah
   14001f16d:	and    BYTE PTR [rdi+rbp*1],bh
   14001f170:	jb     0x14001f1d7
   14001f172:	jno    0x14001f1e9
   14001f174:	gs jae 0x14001f1eb
   14001f177:	gs fs push rax
   14001f17a:	jb     0x14001f1e5
   14001f17c:	jbe    0x14001f1e7
   14001f17e:	ins    BYTE PTR es:[rdi],dx
   14001f17f:	gs addr32 gs jae 0x14001f1c2
   14001f184:	or     eax,0x2020200a
   14001f189:	and    BYTE PTR [rdi+rbp*1],bh
   14001f18c:	jae    0x14001f1f3
   14001f18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14001f191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001f199:	cmp    al,0x2f
   14001f19b:	je     0x14001f20f
   14001f19d:	jne    0x14001f212
   14001f19f:	je     0x14001f1ea
   14001f1a1:	outs   dx,BYTE PTR ds:[rsi]
   14001f1a2:	outs   dx,WORD PTR ds:[rsi]
   14001f1a4:	ds or  eax,0x3c20200a
   14001f1aa:	fs gs jo 0x14001f213
   14001f1ae:	outs   dx,BYTE PTR ds:[rsi]
   14001f1af:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f1b5:	or     eax,0x2020200a
   14001f1ba:	and    BYTE PTR [rsp+riz*2],bh
   14001f1bd:	gs jo  0x14001f225
   14001f1c0:	outs   dx,BYTE PTR ds:[rsi]
   14001f1c1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1c4:	je     0x14001f207
   14001f1c6:	jae    0x14001f23b
   14001f1c8:	gs ins DWORD PTR es:[rdi],dx
   14001f1ca:	(bad)  
   14001f1cb:	ins    BYTE PTR es:[rdi],dx
   14001f1cc:	jns    0x14001f20c
   14001f1ce:	or     eax,0x2020200a
   14001f1d3:	and    BYTE PTR [rax],ah
   14001f1d5:	and    BYTE PTR [rcx+riz*2],bh
   14001f1d8:	jae    0x14001f24d
   14001f1da:	gs ins DWORD PTR es:[rdi],dx
   14001f1dc:	(bad)  
   14001f1dd:	ins    BYTE PTR es:[rdi],dx
   14001f1de:	jns    0x14001f229
   14001f1e0:	fs outs dx,BYTE PTR gs:[rsi]
   14001f1e3:	je     0x14001f24e
   14001f1e5:	je     0x14001f260
   14001f1e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001f1eb:	gs cmp eax,0x6e697722
   14001f1f1:	xor    esi,DWORD PTR [rdx]
   14001f1f3:	and    ah,BYTE PTR [rax]
   14001f1f5:	outs   dx,BYTE PTR ds:[rsi]
   14001f1f6:	(bad)  
   14001f1f7:	ins    DWORD PTR es:[rdi],dx
   14001f1f8:	gs cmp eax,0x63694d22
   14001f1fe:	jb     0x14001f26f
   14001f200:	jae    0x14001f271
   14001f202:	data16 je 0x14001f233
   14001f205:	push   rdi
   14001f206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001f20d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001f20f:	ins    DWORD PTR es:[rdi],dx
   14001f210:	ins    DWORD PTR es:[rdi],dx
   14001f211:	outs   dx,DWORD PTR ds:[rsi]
   14001f212:	outs   dx,BYTE PTR ds:[rsi]
   14001f213:	sub    eax,0x746e6f43
   14001f218:	jb     0x14001f289
   14001f21a:	ins    BYTE PTR es:[rdi],dx
   14001f21b:	jae    0x14001f23f
   14001f21d:	and    BYTE PTR [rsi+0x65],dh
   14001f220:	jb     0x14001f295
   14001f222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14001f229:	xor    BYTE PTR [rsi],ch
   14001f22b:	xor    BYTE PTR [rsi],ch
   14001f22d:	xor    BYTE PTR [rdx],ah
   14001f22f:	and    BYTE PTR [rax+0x75],dh
   14001f232:	(bad)  
   14001f233:	ins    BYTE PTR es:[rdi],dx
   14001f234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001f23b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001f23f:	and    dh,BYTE PTR [rsi]
   14001f241:	xor    eax,0x36623539
   14001f246:	xor    al,0x31
   14001f248:	xor    al,0x34
   14001f24a:	movsxd esp,DWORD PTR [rbx+0x66]
   14001f24d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14001f251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14001f255:	addr32 jne 0x14001f2b9
   14001f258:	addr32 gs cmp eax,0x20222a22
   14001f25f:	jo     0x14001f2d3
   14001f261:	outs   dx,DWORD PTR ds:[rsi]
   14001f262:	movsxd esp,DWORD PTR [rbp+0x73]
   14001f265:	jae    0x14001f2d6
   14001f267:	jb     0x14001f2aa
   14001f269:	jb     0x14001f2ce
   14001f26b:	push   0x63657469
   14001f270:	je     0x14001f2e7
   14001f272:	jb     0x14001f2d9
   14001f274:	cmp    eax,0x3e222a22
   14001f279:	cmp    al,0x2f
   14001f27b:	(bad)  
   14001f27c:	jae    0x14001f2f1
   14001f27e:	gs ins DWORD PTR es:[rdi],dx
   14001f280:	(bad)  
   14001f281:	ins    BYTE PTR es:[rdi],dx
   14001f282:	jns    0x14001f2cd
   14001f284:	fs outs dx,BYTE PTR gs:[rsi]
   14001f287:	je     0x14001f2f2
   14001f289:	je     0x14001f304
   14001f28b:	ds or  eax,0x2020200a
   14001f291:	and    BYTE PTR [rdi+rbp*1],bh
   14001f294:	fs gs jo 0x14001f2fd
   14001f298:	outs   dx,BYTE PTR ds:[rsi]
   14001f299:	fs outs dx,BYTE PTR gs:[rsi]
   14001f29c:	je     0x14001f2df
   14001f29e:	jae    0x14001f313
   14001f2a0:	gs ins DWORD PTR es:[rdi],dx
   14001f2a2:	(bad)  
   14001f2a3:	ins    BYTE PTR es:[rdi],dx
   14001f2a4:	jns    0x14001f2e4
   14001f2a6:	or     eax,0x3c20200a
   14001f2ab:	(bad)  
   14001f2ac:	fs gs jo 0x14001f315
   14001f2b0:	outs   dx,BYTE PTR ds:[rsi]
   14001f2b1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f2b7:	or     eax,0x3c20200a
   14001f2bc:	fs gs jo 0x14001f325
   14001f2c0:	outs   dx,BYTE PTR ds:[rsi]
   14001f2c1:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f2c7:	or     eax,0x2020200a
   14001f2cc:	and    BYTE PTR [rsp+riz*2],bh
   14001f2cf:	gs jo  0x14001f337
   14001f2d2:	outs   dx,BYTE PTR ds:[rsi]
   14001f2d3:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2d6:	je     0x14001f319
   14001f2d8:	jae    0x14001f34d
   14001f2da:	gs ins DWORD PTR es:[rdi],dx
   14001f2dc:	(bad)  
   14001f2dd:	ins    BYTE PTR es:[rdi],dx
   14001f2de:	jns    0x14001f31e
   14001f2e0:	or     eax,0x2020200a
   14001f2e5:	and    BYTE PTR [rax],ah
   14001f2e7:	and    BYTE PTR [rcx+riz*2],bh
   14001f2ea:	jae    0x14001f35f
   14001f2ec:	gs ins DWORD PTR es:[rdi],dx
   14001f2ee:	(bad)  
   14001f2ef:	ins    BYTE PTR es:[rdi],dx
   14001f2f0:	jns    0x14001f33b
   14001f2f2:	fs outs dx,BYTE PTR gs:[rsi]
   14001f2f5:	je     0x14001f360
   14001f2f7:	je     0x14001f372
   14001f2f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001f2fd:	gs cmp eax,0x6e697722
   14001f303:	xor    esi,DWORD PTR [rdx]
   14001f305:	and    ah,BYTE PTR [rax]
   14001f307:	outs   dx,BYTE PTR ds:[rsi]
   14001f308:	(bad)  
   14001f309:	ins    DWORD PTR es:[rdi],dx
   14001f30a:	gs cmp eax,0x63694d22
   14001f310:	jb     0x14001f381
   14001f312:	jae    0x14001f383
   14001f314:	data16 je 0x14001f345
   14001f317:	push   rsi
   14001f318:	rex.XB cmp DWORD PTR [r8],esi
   14001f31b:	cs rex.XB push r10
   14001f31e:	push   rsp
   14001f31f:	and    ah,BYTE PTR [rax]
   14001f321:	jbe    0x14001f388
   14001f323:	jb     0x14001f398
   14001f325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14001f32c:	xor    BYTE PTR [rsi],ch
   14001f32e:	xor    dh,BYTE PTR [rcx]
   14001f330:	xor    BYTE PTR [rdx],dh
   14001f332:	xor    ch,BYTE PTR [rsi]
   14001f334:	cmp    BYTE PTR [rdx],ah
   14001f336:	and    BYTE PTR [rax+0x72],dh
   14001f339:	outs   dx,DWORD PTR ds:[rsi]
   14001f33a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001f33d:	jae    0x14001f3ae
   14001f33f:	jb     0x14001f382
   14001f341:	jb     0x14001f3a6
   14001f343:	push   0x63657469
   14001f348:	je     0x14001f3bf
   14001f34a:	jb     0x14001f3b1
   14001f34c:	cmp    eax,0x646d6122
   14001f351:	ss xor al,0x22
   14001f354:	and    BYTE PTR [rax+0x75],dh
   14001f357:	(bad)  
   14001f358:	ins    BYTE PTR es:[rdi],dx
   14001f359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001f360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001f364:	and    dh,BYTE PTR [rcx]
   14001f366:	movsxd di,DWORD PTR [rax]
   14001f369:	(bad)  
   14001f36b:	(bad)  
   14001f36c:	cmp    DWORD PTR [rcx+0x31],esp
   14001f36f:	xor    DWORD PTR gs:[rax],edi
   14001f372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   14001f376:	ds cmp al,0x2f
   14001f379:	(bad)  
   14001f37a:	jae    0x14001f3ef
   14001f37c:	gs ins DWORD PTR es:[rdi],dx
   14001f37e:	(bad)  
   14001f37f:	ins    BYTE PTR es:[rdi],dx
   14001f380:	jns    0x14001f3cb
   14001f382:	fs outs dx,BYTE PTR gs:[rsi]
   14001f385:	je     0x14001f3f0
   14001f387:	je     0x14001f402
   14001f389:	ds or  eax,0x2020200a
   14001f38f:	and    BYTE PTR [rdi+rbp*1],bh
   14001f392:	fs gs jo 0x14001f3fb
   14001f396:	outs   dx,BYTE PTR ds:[rsi]
   14001f397:	fs outs dx,BYTE PTR gs:[rsi]
   14001f39a:	je     0x14001f3dd
   14001f39c:	jae    0x14001f411
   14001f39e:	gs ins DWORD PTR es:[rdi],dx
   14001f3a0:	(bad)  
   14001f3a1:	ins    BYTE PTR es:[rdi],dx
   14001f3a2:	jns    0x14001f3e2
   14001f3a4:	or     eax,0x3c20200a
   14001f3a9:	(bad)  
   14001f3aa:	fs gs jo 0x14001f413
   14001f3ae:	outs   dx,BYTE PTR ds:[rsi]
   14001f3af:	fs outs dx,BYTE PTR gs:[rsi]
   14001f3b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001f3b5:	or     eax,0x612f3c0a
   14001f3ba:	jae    0x14001f42f
   14001f3bc:	gs ins DWORD PTR es:[rdi],dx
   14001f3be:	(bad)  
   14001f3bf:	ins    BYTE PTR es:[rdi],dx
   14001f3c0:	jns    0x14001f400
   14001f3c2:	push   rax
   14001f3c3:	rex.B

Disassembly of section .reloc:

0000000140020000 <.reloc>:
   140020000:	add    al,dl
   140020002:	add    BYTE PTR [rax],al
   140020004:	jo     0x140020008
   140020006:	add    BYTE PTR [rax],al
   140020008:	or     BYTE PTR [rbp-0x5ae75af0],ah
   14002000e:	and    BYTE PTR [rbp-0x5abf5ad8],ah
   140020014:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140020016:	adc    BYTE PTR [rsi-0x59df59e8],ah
   14002001c:	sub    BYTE PTR [rsi-0x59c759d0],ah
   140020022:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020024:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020026:	push   rax
   140020027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020028:	pop    rax
   140020029:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002002a:	(bad)  
   14002002b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002002c:	push   0x78a670a6
   140020031:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020032:	and    BYTE PTR [rsi-0x596f5978],0xa0
   140020039:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002003a:	test   al,0xa6
   14002003c:	mov    al,0xa6
   14002003e:	mov    eax,0xc8a6c0a6
   140020043:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020044:	shl    BYTE PTR [rsi-0x591f5928],1
   14002004a:	call   0x138a8f0f5
   14002004f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020050:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140020056:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14002005c:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140020062:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140020064:	push   rax
   140020065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020066:	pop    rax
   140020067:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020068:	(bad)  
   140020069:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002006a:	push   0x78a770a7
   14002006f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020070:	and    BYTE PTR [rdi-0x586f5878],0x98
   140020077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020078:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140020081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020082:	enter  0xd0a7,0xa7
   140020086:	fsub   DWORD PTR [rdi-0x58175820]
   14002008c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002008e:	clc    
   14002008f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020090:	add    BYTE PTR [rax-0x57ef57f8],ch
   140020096:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14002009c:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400200a2:	rex.W test al,0x50
   1400200a5:	test   al,0x58
   1400200a7:	test   al,0x60
   1400200a9:	test   al,0x90
   1400200ab:	test   al,0x98
   1400200ad:	test   al,0xa0
   1400200af:	test   al,0xa8
   1400200b1:	test   al,0xb0
   1400200b3:	test   al,0xb8
   1400200b5:	test   al,0xc0
   1400200b7:	test   al,0xc8
   1400200b9:	test   al,0xd0
   1400200bb:	test   al,0xd8
   1400200bd:	test   al,0xe0
   1400200bf:	test   al,0xe8
   1400200c1:	test   al,0xf0
   1400200c3:	test   al,0xf8
   1400200c5:	test   al,0x0
   1400200c7:	test   eax,0xa910a908
   1400200cc:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400200d2:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400200d8:	test   rax,0xffffffffa958a950
   1400200de:	(bad)  
   1400200df:	test   eax,0xa970a968
   1400200e4:	js     0x14002008f
   1400200e6:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400200ed:	test   eax,0xa9a8a9a0
   1400200f2:	mov    al,0xa9
   1400200f4:	mov    eax,0xc8a9c0a9
   1400200f9:	test   eax,0xa9d8a9d0
   1400200fe:	loopne 0x1400200a9
   140020100:	call   0x138abf1ae
   140020105:	test   eax,0xaa08aa00
   14002010a:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140020110:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140020116:	stos   BYTE PTR es:[rdi],al
   140020118:	rex.W stos BYTE PTR es:[rdi],al
   14002011a:	push   rax
   14002011b:	stos   BYTE PTR es:[rdi],al
   14002011c:	pop    rax
   14002011d:	stos   BYTE PTR es:[rdi],al
   14002011e:	(bad)  
   14002011f:	stos   BYTE PTR es:[rdi],al
   140020120:	push   0xffffffffa0aa70aa
   140020125:	stos   BYTE PTR es:[rdi],al
   140020126:	test   al,0xaa
   140020128:	mov    al,0xaa
   14002012a:	mov    eax,0xc8aac0aa
   14002012f:	stos   BYTE PTR es:[rdi],al
   140020130:	shr    BYTE PTR [rdx-0x551f5528],1
   140020136:	call   0x138acf1e5
   14002013b:	stos   BYTE PTR es:[rdi],al
   14002013c:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140020142:	sbb    BYTE PTR [rbx-0x54cf54e0],ch
   140020148:	cmp    BYTE PTR [rbx-0x54b754c0],ch
   14002014e:	push   rax
   14002014f:	stos   DWORD PTR es:[rdi],eax
   140020150:	pop    rax
   140020151:	stos   DWORD PTR es:[rdi],eax
   140020152:	(bad)  
   140020153:	stos   DWORD PTR es:[rdi],eax
   140020154:	push   0x78ab70ab
   140020159:	stos   DWORD PTR es:[rdi],eax
   14002015a:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140020161:	stos   DWORD PTR es:[rdi],eax
   140020162:	movabs al,ds:0xc8abc0abb0aba8ab
   14002016b:	stos   DWORD PTR es:[rdi],eax
   14002016c:	shr    BYTE PTR [rbx-0x541f5428],1
   140020172:	call   0x138adf222
   140020177:	stos   DWORD PTR es:[rdi],eax
   140020178:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14002017f:	lods   al,BYTE PTR ds:[rsi]
   140020180:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   140020187:	lods   al,BYTE PTR ds:[rsi]
   140020188:	lods   al,BYTE PTR ds:[rsi]
   14002018a:	rex.W lods al,BYTE PTR ds:[rsi]
   14002018c:	push   rax
   14002018d:	lods   al,BYTE PTR ds:[rsi]
   14002018e:	pop    rax
   14002018f:	lods   al,BYTE PTR ds:[rsi]
   140020190:	(bad)  
   140020191:	lods   al,BYTE PTR ds:[rsi]
   140020192:	push   0x78ac70ac
   140020197:	lods   al,BYTE PTR ds:[rsi]
   140020198:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400201a0:	movabs al,ds:0xc0acb8acb0aca8ac
   1400201a9:	lods   al,BYTE PTR ds:[rsi]
   1400201aa:	enter  0xd0ac,0xac
   1400201ae:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400201b5:	lods   al,BYTE PTR ds:[rsi]
   1400201b6:	clc    
   1400201b7:	lods   al,BYTE PTR ds:[rsi]
   1400201b8:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400201be:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400201c4:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400201ca:	lods   rax,QWORD PTR ds:[rsi]
   1400201cc:	push   rax
   1400201cd:	lods   eax,DWORD PTR ds:[rsi]
   1400201ce:	pop    rax
   1400201cf:	lods   eax,DWORD PTR ds:[rsi]
   1400201d0:	(bad)  
   1400201d1:	lods   eax,DWORD PTR ds:[rsi]
   1400201d2:	push   0xffffffff88ad80ad
   1400201d7:	lods   eax,DWORD PTR ds:[rsi]
   1400201d8:	nop
   1400201d9:	lods   eax,DWORD PTR ds:[rsi]
   1400201da:	cwde   
   1400201db:	lods   eax,DWORD PTR ds:[rsi]
   1400201dc:	movabs al,ds:0xc0adb8adb0ada8ad
   1400201e5:	lods   eax,DWORD PTR ds:[rsi]
   1400201e6:	enter  0xd0ad,0xad
   1400201ea:	fsubr  DWORD PTR [rbp-0x52175220]
   1400201f0:	lock lods eax,DWORD PTR ds:[rsi]
   1400201f2:	clc    
   1400201f3:	lods   eax,DWORD PTR ds:[rsi]
   1400201f4:	add    BYTE PTR [rsi-0x51ef51f8],ch
   1400201fa:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140020200:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   140020206:	rex.W scas al,BYTE PTR es:[rdi]
   140020208:	push   rax
   140020209:	scas   al,BYTE PTR es:[rdi]
   14002020a:	pop    rax
   14002020b:	scas   al,BYTE PTR es:[rdi]
   14002020c:	(bad)  
   14002020d:	scas   al,BYTE PTR es:[rdi]
   14002020e:	push   0x78ae70ae
   140020213:	scas   al,BYTE PTR es:[rdi]
   140020214:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14002021b:	scas   al,BYTE PTR es:[rdi]
   14002021c:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140020225:	scas   al,BYTE PTR es:[rdi]
   140020226:	enter  0xd0ae,0xae
   14002022a:	fsubr  DWORD PTR [rsi-0x51175120]
   140020230:	lock scas al,BYTE PTR es:[rdi]
   140020232:	clc    
   140020233:	scas   al,BYTE PTR es:[rdi]
   140020234:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14002023a:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140020240:	rex scas eax,DWORD PTR es:[rdi]
   140020242:	scas   rax,QWORD PTR es:[rdi]
   140020244:	push   rax
   140020245:	scas   eax,DWORD PTR es:[rdi]
   140020246:	pop    rax
   140020247:	scas   eax,DWORD PTR es:[rdi]
   140020248:	(bad)  
   140020249:	scas   eax,DWORD PTR es:[rdi]
   14002024a:	push   0x78af70af
   14002024f:	scas   eax,DWORD PTR es:[rdi]
   140020250:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140020257:	scas   eax,DWORD PTR es:[rdi]
   140020258:	movabs al,ds:0xc0afb8afb0afa8af
   140020261:	scas   eax,DWORD PTR es:[rdi]
   140020262:	shr    BYTE PTR [rdi-0x501f5028],1
   140020268:	call   0x138b1f31c
   14002026d:	scas   eax,DWORD PTR es:[rdi]
   14002026e:	add    BYTE PTR [rax],al
   140020270:	add    al,ah
   140020272:	add    BYTE PTR [rax],al
   140020274:	sbb    BYTE PTR [rbx],al
   140020276:	add    BYTE PTR [rax],al
   140020278:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14002027e:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   140020284:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   14002028a:	rex.W movabs al,ds:0xa290a288a280a050
   140020294:	cwde   
   140020295:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14002029e:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   1400202a5:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   1400202ae:	add    BYTE PTR [rbx-0x5ce75cf0],ah
   1400202b4:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   1400202ba:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   1400202c0:	push   rax
   1400202c1:	movabs ds:0xa370a368a360a358,eax
   1400202ca:	js     0x14002026f
   1400202cc:	and    BYTE PTR [rbx-0x5c6f5c78],0xa0
   1400202d3:	movabs ds:0xa3c0a3b8a3b0a3a8,eax
   1400202dc:	enter  0xd0a3,0xa3
   1400202e0:	fsub   DWORD PTR [rbx-0x5c175c20]
   1400202e6:	lock movabs ds:0xa410a408a400a3f8,eax
   1400202f0:	sbb    BYTE PTR [rax+riz*1+0x30a428a4],ah
   1400202f7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400202f8:	cmp    BYTE PTR [rax+rax*2+0x50a448a4],ah
   1400202ff:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020300:	pop    rax
   140020301:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020302:	(bad)  
   140020303:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020304:	push   0x78a470a4
   140020309:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002030a:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140020312:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14002031b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002031c:	enter  0xd0a4,0xa4
   140020320:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   140020327:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020328:	clc    
   140020329:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002032a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140020330:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140020336:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14002033c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002033e:	push   rax
   14002033f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020340:	pop    rax
   140020341:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020342:	(bad)  
   140020343:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020344:	push   0xffffffffb8a5b0a5
   140020349:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002034a:	shl    BYTE PTR [rbp-0x5a2f5a38],0xd8
   140020351:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020352:	loopne 0x1400202f9
   140020354:	call   0x138a7f3fe
   140020359:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002035a:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140020360:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140020366:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14002036c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002036e:	push   rax
   14002036f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020370:	pop    rax
   140020371:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020372:	(bad)  
   140020373:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020374:	push   0x78a670a6
   140020379:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002037a:	and    BYTE PTR [rsi-0x596f5978],0x98
   140020381:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020382:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14002038b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002038c:	enter  0xd0a6,0xa6
   140020390:	fsub   DWORD PTR [rsi-0x59175920]
   140020396:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020398:	clc    
   140020399:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002039a:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400203a0:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400203a6:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400203ac:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400203ae:	push   rax
   1400203af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203b0:	pop    rax
   1400203b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203b2:	(bad)  
   1400203b3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203b4:	push   0x78a770a7
   1400203b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203ba:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400203c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203c2:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400203cb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203cc:	enter  0xd0a7,0xa7
   1400203d0:	fsub   DWORD PTR [rdi-0x58175820]
   1400203d6:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203d8:	clc    
   1400203d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400203da:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400203e0:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400203e6:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400203ec:	rex.W test al,0x50
   1400203ef:	test   al,0x58
   1400203f1:	test   al,0x60
   1400203f3:	test   al,0x68
   1400203f5:	test   al,0x70
   1400203f7:	test   al,0x78
   1400203f9:	test   al,0x80
   1400203fb:	test   al,0x88
   1400203fd:	test   al,0x90
   1400203ff:	test   al,0x98
   140020401:	test   al,0xa0
   140020403:	test   al,0xa8
   140020405:	test   al,0xb0
   140020407:	test   al,0xb8
   140020409:	test   al,0xc0
   14002040b:	test   al,0xc8
   14002040d:	test   al,0xd0
   14002040f:	test   al,0xd8
   140020411:	test   al,0xe0
   140020413:	test   al,0xe8
   140020415:	test   al,0xf0
   140020417:	test   al,0xf8
   140020419:	test   al,0x0
   14002041b:	test   eax,0xa910a908
   140020420:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140020426:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14002042c:	test   rax,0xffffffffa958a950
   140020432:	(bad)  
   140020433:	test   eax,0xaa70a968
   140020438:	js     0x1400203e4
   14002043a:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140020441:	stos   BYTE PTR es:[rdi],al
   140020442:	movabs al,ds:0xc0aab8aab0aaa8aa
   14002044b:	stos   BYTE PTR es:[rdi],al
   14002044c:	enter  0xd0aa,0xaa
   140020450:	fsubr  DWORD PTR [rdx-0x55175520]
   140020456:	lock stos BYTE PTR es:[rdi],al
   140020458:	clc    
   140020459:	stos   BYTE PTR es:[rdi],al
   14002045a:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140020460:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140020466:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002046c:	stos   QWORD PTR es:[rdi],rax
   14002046e:	push   rax
   14002046f:	stos   DWORD PTR es:[rdi],eax
   140020470:	pop    rax
   140020471:	stos   DWORD PTR es:[rdi],eax
   140020472:	(bad)  
   140020473:	stos   DWORD PTR es:[rdi],eax
   140020474:	push   0x78ab70ab
   140020479:	stos   DWORD PTR es:[rdi],eax
   14002047a:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140020481:	stos   DWORD PTR es:[rdi],eax
   140020482:	movabs al,ds:0xc0abb8abb0aba8ab
   14002048b:	stos   DWORD PTR es:[rdi],eax
   14002048c:	enter  0xd0ab,0xab
   140020490:	fsubr  DWORD PTR [rbx-0x54175420]
   140020496:	lock stos DWORD PTR es:[rdi],eax
   140020498:	clc    
   140020499:	stos   DWORD PTR es:[rdi],eax
   14002049a:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400204a1:	lods   al,BYTE PTR ds:[rsi]
   1400204a2:	and    BYTE PTR [rax+rbp*1+0x50ac30ac],ch
   1400204a9:	lods   al,BYTE PTR ds:[rsi]
   1400204aa:	pop    rax
   1400204ab:	lods   al,BYTE PTR ds:[rsi]
   1400204ac:	(bad)  
   1400204ad:	lods   al,BYTE PTR ds:[rsi]
   1400204ae:	push   0x78ac70ac
   1400204b3:	lods   al,BYTE PTR ds:[rsi]
   1400204b4:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400204bc:	movabs al,ds:0xc0acb8acb0aca8ac
   1400204c5:	lods   al,BYTE PTR ds:[rsi]
   1400204c6:	enter  0xd0ac,0xac
   1400204ca:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400204d1:	lods   al,BYTE PTR ds:[rsi]
   1400204d2:	clc    
   1400204d3:	lods   al,BYTE PTR ds:[rsi]
   1400204d4:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400204da:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400204e0:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400204e6:	lods   rax,QWORD PTR ds:[rsi]
   1400204e8:	push   rax
   1400204e9:	lods   eax,DWORD PTR ds:[rsi]
   1400204ea:	pop    rax
   1400204eb:	lods   eax,DWORD PTR ds:[rsi]
   1400204ec:	(bad)  
   1400204ed:	lods   eax,DWORD PTR ds:[rsi]
   1400204ee:	push   0x78ad70ad
   1400204f3:	lods   eax,DWORD PTR ds:[rsi]
   1400204f4:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400204fb:	lods   eax,DWORD PTR ds:[rsi]
   1400204fc:	movabs al,ds:0xc0adb8adb0ada8ad
   140020505:	lods   eax,DWORD PTR ds:[rsi]
   140020506:	enter  0xd0ad,0xad
   14002050a:	fsubr  DWORD PTR [rbp-0x52175220]
   140020510:	lock lods eax,DWORD PTR ds:[rsi]
   140020512:	clc    
   140020513:	lods   eax,DWORD PTR ds:[rsi]
   140020514:	adc    BYTE PTR [rsi-0x51df51e8],ch
   14002051a:	sub    BYTE PTR [rsi-0x51c751d0],ch
   140020520:	scas   al,BYTE PTR es:[rdi]
   140020522:	rex.W scas al,BYTE PTR es:[rdi]
   140020524:	push   rax
   140020525:	scas   al,BYTE PTR es:[rdi]
   140020526:	pop    rax
   140020527:	scas   al,BYTE PTR es:[rdi]
   140020528:	(bad)  
   140020529:	scas   al,BYTE PTR es:[rdi]
   14002052a:	push   0x78ae70ae
   14002052f:	scas   al,BYTE PTR es:[rdi]
   140020530:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140020537:	scas   al,BYTE PTR es:[rdi]
   140020538:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140020541:	scas   al,BYTE PTR es:[rdi]
   140020542:	enter  0xd0ae,0xae
   140020546:	fsubr  DWORD PTR [rsi-0x51175120]
   14002054c:	lock scas al,BYTE PTR es:[rdi]
   14002054e:	clc    
   14002054f:	scas   al,BYTE PTR es:[rdi]
   140020550:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140020556:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14002055c:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140020562:	scas   rax,QWORD PTR es:[rdi]
   140020564:	push   rax
   140020565:	scas   eax,DWORD PTR es:[rdi]
   140020566:	pop    rax
   140020567:	scas   eax,DWORD PTR es:[rdi]
   140020568:	(bad)  
   140020569:	scas   eax,DWORD PTR es:[rdi]
   14002056a:	push   0x78af70af
   14002056f:	scas   eax,DWORD PTR es:[rdi]
   140020570:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140020577:	scas   eax,DWORD PTR es:[rdi]
   140020578:	movabs al,ds:0xc0afb8afb0afa8af
   140020581:	scas   eax,DWORD PTR es:[rdi]
   140020582:	enter  0xf0af,0xaf
   140020586:	clc    
   140020587:	scas   eax,DWORD PTR es:[rdi]
   140020588:	add    al,dh
   14002058a:	add    BYTE PTR [rax],al
   14002058c:	pop    rsp
   14002058d:	add    eax,DWORD PTR [rax]
   14002058f:	add    BYTE PTR [rax],al
   140020591:	movabs al,ds:0xa020a018a010a008
   14002059a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   1400205a0:	movabs al,ds:0xa060a058a050a048
   1400205aa:	push   0x78a070a0
   1400205af:	movabs al,ds:0xa098a090a088a080
   1400205b8:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400205c1:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   1400205ca:	call   0x138a2f66f
   1400205cf:	movabs al,ds:0xa118a110a108a100
   1400205d8:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400205de:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400205e4:	push   rax
   1400205e5:	movabs eax,ds:0xa170a168a160a158
   1400205ee:	js     0x140020591
   1400205f0:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400205f7:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140020600:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   140020607:	movabs eax,ds:0xa200a1f8a1f0a1e0
   140020610:	or     BYTE PTR [rdx-0x5de75df0],ah
   140020616:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   14002061c:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   140020622:	push   rax
   140020623:	movabs ds:0xa270a268a260a258,al
   14002062c:	js     0x1400205d0
   14002062e:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140020635:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14002063e:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   140020645:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   14002064e:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   140020654:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14002065a:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   140020660:	movabs ds:0xa368a360a358a350,rax
   14002066a:	jo     0x14002060f
   14002066c:	js     0x140020611
   14002066e:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140020675:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14002067e:	shl    BYTE PTR [rbx-0x5c2f5c38],0xb0
   140020685:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020686:	mov    eax,0xc8a4c0a4
   14002068b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002068c:	shl    BYTE PTR [rax+rbx*8-0x175b1f5c],1
   140020693:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020694:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020696:	clc    
   140020697:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020698:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14002069e:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   1400206a4:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   1400206aa:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400206ac:	push   rax
   1400206ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206ae:	pop    rax
   1400206af:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206b0:	(bad)  
   1400206b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206b2:	push   0x78a570a5
   1400206b7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206b8:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400206bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206c0:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400206c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206ca:	enter  0xd0a5,0xa5
   1400206ce:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400206d4:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206d6:	clc    
   1400206d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400206d8:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400206de:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400206e4:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400206ea:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400206ec:	push   rax
   1400206ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400206ee:	pop    rax
   1400206ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400206f0:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400206f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400206f8:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140020701:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020702:	enter  0xd0a6,0xa6
   140020706:	fsub   DWORD PTR [rsi-0x59175920]
   14002070c:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002070e:	clc    
   14002070f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020710:	add    BYTE PTR [rdi-0x58e758f0],ah
   140020716:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14002071c:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   140020722:	push   rax
   140020723:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020724:	pop    rax
   140020725:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020726:	(bad)  
   140020727:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020728:	push   0x78a770a7
   14002072d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002072e:	and    BYTE PTR [rdi-0x586f5878],0xc0
   140020735:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020736:	enter  0xd0a7,0xa7
   14002073a:	fsub   DWORD PTR [rdi-0x58175820]
   140020740:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020742:	clc    
   140020743:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020744:	add    BYTE PTR [rax-0x57ef57f8],ch
   14002074a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140020750:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140020756:	rex.W test al,0x50
   140020759:	test   al,0x58
   14002075b:	test   al,0x60
   14002075d:	test   al,0x68
   14002075f:	test   al,0x70
   140020761:	test   al,0x78
   140020763:	test   al,0x80
   140020765:	test   al,0x88
   140020767:	test   al,0x90
   140020769:	test   al,0x98
   14002076b:	test   al,0xa0
   14002076d:	test   al,0xa8
   14002076f:	test   al,0xb0
   140020771:	test   al,0xb8
   140020773:	test   al,0xc0
   140020775:	test   al,0xc8
   140020777:	test   al,0xd0
   140020779:	test   al,0xd8
   14002077b:	test   al,0xe0
   14002077d:	test   al,0xe8
   14002077f:	test   al,0xf0
   140020781:	test   al,0xf8
   140020783:	test   al,0x0
   140020785:	test   eax,0xa910a908
   14002078a:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140020790:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140020796:	test   rax,0xffffffffa958a950
   14002079c:	(bad)  
   14002079d:	test   eax,0xa9d0a968
   1400207a2:	fsubr  DWORD PTR [rcx-0x56175620]
   1400207a8:	lock test eax,0xaa00a9f8
   1400207ae:	or     BYTE PTR [rdx-0x55e755f0],ch
   1400207b4:	and    BYTE PTR [rdx-0x55cf55d8],ch
   1400207ba:	cmp    BYTE PTR [rdx-0x55af55c0],ch
   1400207c0:	pop    rax
   1400207c1:	stos   BYTE PTR es:[rdi],al
   1400207c2:	(bad)  
   1400207c3:	stos   BYTE PTR es:[rdi],al
   1400207c4:	push   0x78aa70aa
   1400207c9:	stos   BYTE PTR es:[rdi],al
   1400207ca:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400207d1:	stos   BYTE PTR es:[rdi],al
   1400207d2:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400207db:	stos   BYTE PTR es:[rdi],al
   1400207dc:	enter  0xd0aa,0xaa
   1400207e0:	fsubr  DWORD PTR [rdx-0x55175520]
   1400207e6:	lock stos BYTE PTR es:[rdi],al
   1400207e8:	clc    
   1400207e9:	stos   BYTE PTR es:[rdi],al
   1400207ea:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400207f0:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400207f6:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400207fc:	stos   QWORD PTR es:[rdi],rax
   1400207fe:	push   rax
   1400207ff:	stos   DWORD PTR es:[rdi],eax
   140020800:	pop    rax
   140020801:	stos   DWORD PTR es:[rdi],eax
   140020802:	(bad)  
   140020803:	stos   DWORD PTR es:[rdi],eax
   140020804:	push   0x78ab70ab
   140020809:	stos   DWORD PTR es:[rdi],eax
   14002080a:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140020811:	stos   DWORD PTR es:[rdi],eax
   140020812:	movabs al,ds:0xc0abb8abb0aba8ab
   14002081b:	stos   DWORD PTR es:[rdi],eax
   14002081c:	enter  0xd0ab,0xab
   140020820:	fsubr  DWORD PTR [rbx-0x54175420]
   140020826:	lock stos DWORD PTR es:[rdi],eax
   140020828:	clc    
   140020829:	stos   DWORD PTR es:[rdi],eax
   14002082a:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140020831:	lods   al,BYTE PTR ds:[rsi]
   140020832:	and    BYTE PTR [rax+riz*8-0xf531754],ch
   140020839:	lods   al,BYTE PTR ds:[rsi]
   14002083a:	clc    
   14002083b:	lods   al,BYTE PTR ds:[rsi]
   14002083c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140020842:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140020848:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14002084e:	lods   rax,QWORD PTR ds:[rsi]
   140020850:	push   rax
   140020851:	lods   eax,DWORD PTR ds:[rsi]
   140020852:	pop    rax
   140020853:	lods   eax,DWORD PTR ds:[rsi]
   140020854:	(bad)  
   140020855:	lods   eax,DWORD PTR ds:[rsi]
   140020856:	push   0x78ad70ad
   14002085b:	lods   eax,DWORD PTR ds:[rsi]
   14002085c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140020863:	lods   eax,DWORD PTR ds:[rsi]
   140020864:	movabs al,ds:0xc0adb8adb0ada8ad
   14002086d:	lods   eax,DWORD PTR ds:[rsi]
   14002086e:	enter  0xd0ad,0xad
   140020872:	fsubr  DWORD PTR [rbp-0x52175220]
   140020878:	lock lods eax,DWORD PTR ds:[rsi]
   14002087a:	clc    
   14002087b:	lods   eax,DWORD PTR ds:[rsi]
   14002087c:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140020882:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140020888:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14002088e:	rex.W scas al,BYTE PTR es:[rdi]
   140020890:	push   rax
   140020891:	scas   al,BYTE PTR es:[rdi]
   140020892:	pop    rax
   140020893:	scas   al,BYTE PTR es:[rdi]
   140020894:	(bad)  
   140020895:	scas   al,BYTE PTR es:[rdi]
   140020896:	push   0x78ae70ae
   14002089b:	scas   al,BYTE PTR es:[rdi]
   14002089c:	sub    BYTE PTR [rsi-0x516f5178],0x0
   1400208a3:	scas   eax,DWORD PTR es:[rdi]
   1400208a4:	or     BYTE PTR [rdi-0x50e750f0],ch
   1400208aa:	and    BYTE PTR [rdi-0x50cf50d8],ch
   1400208b0:	cmp    BYTE PTR [rdi-0x50b750c0],ch
   1400208b6:	push   rax
   1400208b7:	scas   eax,DWORD PTR es:[rdi]
   1400208b8:	pop    rax
   1400208b9:	scas   eax,DWORD PTR es:[rdi]
   1400208ba:	(bad)  
   1400208bb:	scas   eax,DWORD PTR es:[rdi]
   1400208bc:	push   0x78af70af
   1400208c1:	scas   eax,DWORD PTR es:[rdi]
   1400208c2:	sub    BYTE PTR [rdi-0x506f5078],0x98
   1400208c9:	scas   eax,DWORD PTR es:[rdi]
   1400208ca:	movabs al,ds:0xc0afb8afb0afa8af
   1400208d3:	scas   eax,DWORD PTR es:[rdi]
   1400208d4:	enter  0xd0af,0xaf
   1400208d8:	fsubr  DWORD PTR [rdi-0x50175020]
   1400208de:	lock scas eax,DWORD PTR es:[rdi]
   1400208e0:	clc    
   1400208e1:	scas   eax,DWORD PTR es:[rdi]
   1400208e2:	add    BYTE PTR [rax],al
   1400208e4:	add    BYTE PTR [rax],al
   1400208e6:	add    DWORD PTR [rax],eax
   1400208e8:	xor    al,0x0
   1400208ea:	add    BYTE PTR [rax],al
   1400208ec:	add    BYTE PTR [rax-0x5fef5ff8],ah
   1400208f2:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   1400208f8:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   1400208fe:	rex.W movabs al,ds:0xa068a060a058a050
   140020908:	jo     0x1400208aa
   14002090a:	js     0x1400208ac
   14002090c:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   140020913:	movabs al,ds:0x11000a0a8a0a0
   14002091c:	or     al,0x0
   14002091e:	add    BYTE PTR [rax],al
   140020920:	enter  0xd0a9,0xa9
   140020924:	add    al,dl
   140020926:	add    DWORD PTR [rax],eax
   140020928:	je     0x14002092a
   14002092a:	add    BYTE PTR [rax],al
   14002092c:	add    BYTE PTR [rax-0x5fef5ff8],ah
   140020932:	cmp    BYTE PTR [rax-0x5f875fa8],ah
   140020938:	movabs al,ds:0x28a100a0e0a0c0a0
   140020941:	movabs eax,ds:0xa1c8a1a0a178a150
   14002094a:	call   0x178a419f0
   14002094f:	movabs ds:0xa2e0a2b8a290a260,al
   140020958:	add    BYTE PTR [rbx-0x5cd75ce0],ah
   14002095e:	movabs ds:0xa3d8a3b0a390a370,rax
   140020968:	add    BYTE PTR [rax+rbp*1+0x70a448a4],ah
   14002096f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020970:	cwde   
   140020971:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020972:	mov    eax,0x8a4e0a4
   140020977:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020978:	adc    BYTE PTR [rbp-0x5ab75ac8],ah
   14002097e:	push   rax
   14002097f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020980:	pop    rax
   140020981:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020982:	jo     0x140020929
   140020984:	and    BYTE PTR [rbp-0x5a6f5a78],0xa8
   14002098b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002098c:	mov    eax,0xc8a5c0a5
   140020991:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020992:	call   0x170a8323c
   140020997:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
