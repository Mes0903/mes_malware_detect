
6bf6ce66b3cf86b96f4764a7908154290ca9f14915508da83d1676f14f54d097.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	lea    rcx,[rip+0x41775]        # 0x140042780
   14000100b:	xor    edx,edx
   14000100d:	call   QWORD PTR [rip+0x2e9cd]        # 0x14002f9e0
   140001013:	lea    rax,[rip+0x2ef6e]        # 0x14002ff88
   14000101a:	lea    rcx,[rip+0x2d59f]        # 0x14002e5c0
   140001021:	mov    QWORD PTR [rip+0x41758],rax        # 0x140042780
   140001028:	add    rsp,0x28
   14000102c:	jmp    0x14002ca88
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x2d5a9]        # 0x14002e5f0
   140001047:	jmp    0x14002ca88
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	lea    rcx,[rip+0x2d589]        # 0x14002e5e0
   140001057:	jmp    0x14002ca88
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x2d569]        # 0x14002e5d0
   140001067:	jmp    0x14002ca88
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	sub    rsp,0x28
   140001074:	lea    rdx,[rip+0x314d5]        # 0x140032550
   14000107b:	lea    rcx,[rip+0x4189e]        # 0x140042920
   140001082:	call   QWORD PTR [rip+0x2e600]        # 0x14002f688
   140001088:	lea    rcx,[rip+0x2d571]        # 0x14002e600
   14000108f:	add    rsp,0x28
   140001093:	jmp    0x14002ca88
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	call   0x14002b0c0
   1400010a9:	lea    rcx,[rip+0x2d560]        # 0x14002e610
   1400010b0:	add    rsp,0x28
   1400010b4:	jmp    0x14002ca88
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	lea    rcx,[rip+0x2d559]        # 0x14002e620
   1400010c7:	jmp    0x14002ca88
   1400010cc:	sub    rsp,0x28
   1400010d0:	lea    rcx,[rip+0x3cd49]        # 0x14003de20
   1400010d7:	call   0x14002d0c0
   1400010dc:	lea    rcx,[rip+0x2d551]        # 0x14002e634
   1400010e3:	add    rsp,0x28
   1400010e7:	jmp    0x14002ca88
   1400010ec:	sub    rsp,0x28
   1400010f0:	mov    edx,0xc00
   1400010f5:	xor    ecx,ecx
   1400010f7:	call   0x14002d19c
   1400010fc:	mov    BYTE PTR [rip+0x3cd82],al        # 0x14003de84
   140001102:	add    rsp,0x28
   140001106:	ret    
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	rex.W jmp QWORD PTR [rip+0x2e051]        # 0x14002f168
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    eax,DWORD PTR [rcx+0x8]
   140001123:	sub    eax,DWORD PTR [rcx]
   140001125:	ret    
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    eax,DWORD PTR [rcx+0xc]
   140001133:	sub    eax,DWORD PTR [rcx+0x4]
   140001136:	ret    
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	ret    0x0
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex.W jmp QWORD PTR [rip+0x2ea21]        # 0x14002fb78
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    eax,DWORD PTR [rcx+0x14c]
   140001166:	and    eax,0x1
   140001169:	ret    
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	mov    eax,DWORD PTR [rcx+0x14c]
   140001176:	and    eax,0x2
   140001179:	ret    
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	mov    eax,DWORD PTR [rcx+0x14c]
   140001186:	and    eax,0x4
   140001189:	ret    
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	mov    eax,DWORD PTR [rcx+0x14c]
   140001196:	and    eax,0x8
   140001199:	ret    
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    eax,DWORD PTR [rcx+0x14c]
   1400011a6:	and    eax,0x10
   1400011a9:	ret    
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    eax,DWORD PTR [rcx+0x14c]
   1400011b6:	and    eax,0x20
   1400011b9:	ret    
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	xor    eax,eax
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    eax,0x1388
   1400011d5:	ret    
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	rex push rbx
   1400011e2:	sub    rsp,0x20
   1400011e6:	lea    rax,[rip+0x2f09b]        # 0x140030288
   1400011ed:	mov    rbx,rcx
   1400011f0:	mov    QWORD PTR [rcx],rax
   1400011f3:	test   dl,0x1
   1400011f6:	je     0x1400011fe
   1400011f8:	call   QWORD PTR [rip+0x2e97a]        # 0x14002fb78
   1400011fe:	mov    rax,rbx
   140001201:	add    rsp,0x20
   140001205:	pop    rbx
   140001206:	ret    
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    DWORD PTR [rdx],r8d
   140001213:	mov    QWORD PTR [rdx+0x8],rcx
   140001217:	mov    rax,rdx
   14000121a:	ret    
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	rex push rbx
   140001222:	sub    rsp,0x30
   140001226:	mov    rax,QWORD PTR [rcx]
   140001229:	mov    rbx,r8
   14000122c:	mov    r8d,edx
   14000122f:	lea    rdx,[rsp+0x20]
   140001234:	call   QWORD PTR [rax+0x18]
   140001237:	mov    rcx,QWORD PTR [rbx+0x8]
   14000123b:	cmp    QWORD PTR [rax+0x8],rcx
   14000123f:	jne    0x14000124f
   140001241:	mov    ecx,DWORD PTR [rbx]
   140001243:	cmp    DWORD PTR [rax],ecx
   140001245:	jne    0x14000124f
   140001247:	mov    al,0x1
   140001249:	add    rsp,0x30
   14000124d:	pop    rbx
   14000124e:	ret    
   14000124f:	xor    al,al
   140001251:	add    rsp,0x30
   140001255:	pop    rbx
   140001256:	ret    
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001264:	jne    0x14000126e
   140001266:	cmp    DWORD PTR [rdx],r8d
   140001269:	jne    0x14000126e
   14000126b:	mov    al,0x1
   14000126d:	ret    
   14000126e:	xor    al,al
   140001270:	ret    
   140001271:	int3   
   140001272:	int3   
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	lea    rax,[rip+0x2ec41]        # 0x14002fec8
   140001287:	ret    
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    QWORD PTR [rsp+0x8],rbx
   140001295:	push   rdi
   140001296:	sub    rsp,0x30
   14000129a:	xor    ebx,ebx
   14000129c:	mov    ecx,r8d
   14000129f:	mov    rdi,rdx
   1400012a2:	mov    DWORD PTR [rsp+0x20],ebx
   1400012a6:	call   QWORD PTR [rip+0x2dff4]        # 0x14002f2a0
   1400012ac:	mov    QWORD PTR [rdi+0x18],0xf
   1400012b4:	test   rax,rax
   1400012b7:	mov    QWORD PTR [rdi+0x10],rbx
   1400012bb:	lea    rdx,[rip+0x2ec0e]        # 0x14002fed0
   1400012c2:	cmovne rdx,rax
   1400012c6:	mov    BYTE PTR [rdi],bl
   1400012c8:	cmp    BYTE PTR [rdx],bl
   1400012ca:	je     0x1400012d9
   1400012cc:	or     rbx,0xffffffffffffffff
   1400012d0:	inc    rbx
   1400012d3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400012d7:	jne    0x1400012d0
   1400012d9:	mov    r8,rbx
   1400012dc:	mov    rcx,rdi
   1400012df:	call   0x1400017f0
   1400012e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012e9:	mov    rax,rdi
   1400012ec:	add    rsp,0x30
   1400012f0:	pop    rdi
   1400012f1:	ret    
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	lea    rax,[rip+0x2ebd9]        # 0x14002fee0
   140001307:	ret    
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	rex push rbx
   140001312:	sub    rsp,0x30
   140001316:	xor    eax,eax
   140001318:	mov    rbx,rdx
   14000131b:	mov    DWORD PTR [rsp+0x20],eax
   14000131f:	cmp    r8d,0x1
   140001323:	jne    0x14000134f
   140001325:	mov    QWORD PTR [rdx+0x18],0xf
   14000132d:	mov    QWORD PTR [rdx+0x10],rax
   140001331:	mov    BYTE PTR [rdx],al
   140001333:	lea    rdx,[rip+0x2ebb6]        # 0x14002fef0
   14000133a:	lea    r8d,[rax+0x15]
   14000133e:	mov    rcx,rbx
   140001341:	call   0x1400017f0
   140001346:	mov    rax,rbx
   140001349:	add    rsp,0x30
   14000134d:	pop    rbx
   14000134e:	ret    
   14000134f:	call   0x140001290
   140001354:	mov    rax,rbx
   140001357:	add    rsp,0x30
   14000135b:	pop    rbx
   14000135c:	ret    
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	lea    rax,[rip+0x2eba1]        # 0x14002ff08
   140001367:	ret    
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	mov    QWORD PTR [rsp+0x8],rbx
   140001375:	push   rdi
   140001376:	sub    rsp,0x30
   14000137a:	xor    ebx,ebx
   14000137c:	mov    ecx,r8d
   14000137f:	mov    rdi,rdx
   140001382:	mov    DWORD PTR [rsp+0x20],ebx
   140001386:	call   QWORD PTR [rip+0x2df34]        # 0x14002f2c0
   14000138c:	mov    QWORD PTR [rdi+0x18],0xf
   140001394:	test   rax,rax
   140001397:	mov    QWORD PTR [rdi+0x10],rbx
   14000139b:	lea    rdx,[rip+0x2eb2e]        # 0x14002fed0
   1400013a2:	cmovne rdx,rax
   1400013a6:	mov    BYTE PTR [rdi],bl
   1400013a8:	cmp    BYTE PTR [rdx],bl
   1400013aa:	je     0x1400013b9
   1400013ac:	or     rbx,0xffffffffffffffff
   1400013b0:	inc    rbx
   1400013b3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400013b7:	jne    0x1400013b0
   1400013b9:	mov    r8,rbx
   1400013bc:	mov    rcx,rdi
   1400013bf:	call   0x1400017f0
   1400013c4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400013c9:	mov    rax,rdi
   1400013cc:	add    rsp,0x30
   1400013d0:	pop    rdi
   1400013d1:	ret    
   1400013d2:	int3   
   1400013d3:	int3   
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013e5:	push   rdi
   1400013e6:	sub    rsp,0x20
   1400013ea:	mov    ecx,r8d
   1400013ed:	mov    edi,r8d
   1400013f0:	mov    rbx,rdx
   1400013f3:	call   QWORD PTR [rip+0x2dea7]        # 0x14002f2a0
   1400013f9:	mov    DWORD PTR [rbx],edi
   1400013fb:	test   rax,rax
   1400013fe:	lea    rax,[rip+0x3bf23]        # 0x14003d328
   140001405:	jne    0x14000140e
   140001407:	lea    rax,[rip+0x3bf0a]        # 0x14003d318
   14000140e:	mov    QWORD PTR [rbx+0x8],rax
   140001412:	mov    rax,rbx
   140001415:	mov    rbx,QWORD PTR [rsp+0x30]
   14000141a:	add    rsp,0x20
   14000141e:	pop    rdi
   14000141f:	ret    
   140001420:	lea    rax,[rip+0x2ed91]        # 0x1400301b8
   140001427:	ret    
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x8],rbx
   140001435:	push   rdi
   140001436:	sub    rsp,0x20
   14000143a:	mov    ebx,edx
   14000143c:	mov    rdi,rcx
   14000143f:	call   QWORD PTR [rip+0x2e69b]        # 0x14002fae0
   140001445:	test   bl,0x1
   140001448:	je     0x140001453
   14000144a:	mov    rcx,rdi
   14000144d:	call   QWORD PTR [rip+0x2e725]        # 0x14002fb78
   140001453:	mov    rax,rdi
   140001456:	mov    rbx,QWORD PTR [rsp+0x30]
   14000145b:	add    rsp,0x20
   14000145f:	pop    rdi
   140001460:	ret    
   140001461:	int3   
   140001462:	int3   
   140001463:	int3   
   140001464:	int3   
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	rex push rbx
   140001472:	sub    rsp,0x160
   140001479:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140001482:	mov    rax,QWORD PTR [rip+0x3ab77]        # 0x14003c000
   140001489:	xor    rax,rsp
   14000148c:	mov    QWORD PTR [rsp+0x150],rax
   140001494:	mov    rbx,rcx
   140001497:	call   QWORD PTR [rip+0x2e503]        # 0x14002f9a0
   14000149d:	mov    r8d,0x104
   1400014a3:	lea    rdx,[rsp+0x40]
   1400014a8:	mov    rcx,QWORD PTR [rax+0x10]
   1400014ac:	call   QWORD PTR [rip+0x2ddde]        # 0x14002f290
   1400014b2:	lea    rcx,[rsp+0x40]
   1400014b7:	or     rax,0xffffffffffffffff
   1400014bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400014c0:	inc    rax
   1400014c3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400014c7:	jne    0x1400014c0
   1400014c9:	lea    rcx,[rsp+0x40]
   1400014ce:	add    rax,rcx
   1400014d1:	lea    rcx,[rsp+0x40]
   1400014d6:	cmp    rax,rcx
   1400014d9:	jbe    0x140001503
   1400014db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400014e0:	movzx  ecx,BYTE PTR [rax]
   1400014e3:	cmp    cl,0x5c
   1400014e6:	je     0x140001503
   1400014e8:	movsx  ecx,cl
   1400014eb:	cmp    ecx,0x2f2f
   1400014f1:	je     0x140001503
   1400014f3:	mov    BYTE PTR [rax],0x0
   1400014f6:	dec    rax
   1400014f9:	lea    rcx,[rsp+0x40]
   1400014fe:	cmp    rax,rcx
   140001501:	ja     0x1400014e0
   140001503:	lea    rcx,[rsp+0x40]
   140001508:	dec    rcx
   14000150b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001510:	lea    rcx,[rcx+0x1]
   140001514:	cmp    BYTE PTR [rcx],0x0
   140001517:	jne    0x140001510
   140001519:	movsd  xmm0,QWORD PTR [rip+0x2e9ef]        # 0x14002ff10
   140001521:	movsd  QWORD PTR [rcx],xmm0
   140001525:	movzx  eax,WORD PTR [rip+0x2e9ec]        # 0x14002ff18
   14000152c:	mov    WORD PTR [rcx+0x8],ax
   140001530:	movzx  eax,BYTE PTR [rip+0x2e9e3]        # 0x14002ff1a
   140001537:	mov    BYTE PTR [rcx+0xa],al
   14000153a:	mov    rax,QWORD PTR [rbx+0x40]
   14000153e:	mov    rbx,QWORD PTR [rax+0x40]
   140001542:	lea    rdx,[rsp+0x40]
   140001547:	lea    rcx,[rsp+0x20]
   14000154c:	call   QWORD PTR [rip+0x2e136]        # 0x14002f688
   140001552:	nop
   140001553:	lea    rcx,[rsp+0x28]
   140001558:	call   QWORD PTR [rip+0x2e132]        # 0x14002f690
   14000155e:	nop
   14000155f:	xor    r9d,r9d
   140001562:	xor    r8d,r8d
   140001565:	mov    rdx,QWORD PTR [rsp+0x20]
   14000156a:	mov    rcx,rbx
   14000156d:	call   0x14002c03c
   140001572:	nop
   140001573:	lea    rcx,[rsp+0x28]
   140001578:	call   QWORD PTR [rip+0x2e412]        # 0x14002f990
   14000157e:	nop
   14000157f:	lea    rcx,[rsp+0x20]
   140001584:	call   QWORD PTR [rip+0x2e406]        # 0x14002f990
   14000158a:	mov    rcx,QWORD PTR [rsp+0x150]
   140001592:	xor    rcx,rsp
   140001595:	call   0x14002c960
   14000159a:	add    rsp,0x160
   1400015a1:	pop    rbx
   1400015a2:	ret    
   1400015a3:	int3   
   1400015a4:	int3   
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	rex push rbx
   1400015b2:	sub    rsp,0x30
   1400015b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400015bf:	mov    rbx,rcx
   1400015c2:	mov    ecx,0x7298
   1400015c7:	call   QWORD PTR [rip+0x2e3cb]        # 0x14002f998
   1400015cd:	mov    QWORD PTR [rsp+0x40],rax
   1400015d2:	test   rax,rax
   1400015d5:	je     0x1400015e4
   1400015d7:	mov    rcx,rax
   1400015da:	call   0x140023b80
   1400015df:	mov    rcx,rax
   1400015e2:	jmp    0x1400015e6
   1400015e4:	xor    ecx,ecx
   1400015e6:	mov    QWORD PTR [rbx+0x178],rcx
   1400015ed:	mov    QWORD PTR [rbx+0x40],rcx
   1400015f1:	mov    rax,QWORD PTR [rcx]
   1400015f4:	xor    r9d,r9d
   1400015f7:	xor    edx,edx
   1400015f9:	mov    r8d,0x10480000
   1400015ff:	call   QWORD PTR [rax+0x2d0]
   140001605:	mov    eax,0x1
   14000160a:	add    rsp,0x30
   14000160e:	pop    rbx
   14000160f:	ret    
   140001610:	mov    QWORD PTR [rsp+0x10],rbx
   140001615:	push   rdi
   140001616:	sub    rsp,0x680
   14000161d:	mov    rax,QWORD PTR [rip+0x3a9dc]        # 0x14003c000
   140001624:	xor    rax,rsp
   140001627:	mov    QWORD PTR [rsp+0x670],rax
   14000162f:	mov    rbx,rcx
   140001632:	lea    rdx,[rsp+0x40]
   140001637:	xor    edi,edi
   140001639:	mov    r8d,0x104
   14000163f:	xor    ecx,ecx
   140001641:	mov    DWORD PTR [rsp+0x30],edi
   140001645:	call   QWORD PTR [rip+0x2db25]        # 0x14002f170
   14000164b:	lea    r8,[rsp+0x250]
   140001653:	lea    rdx,[rsp+0x460]
   14000165b:	lea    rcx,[rsp+0x40]
   140001660:	xor    r9d,r9d
   140001663:	mov    QWORD PTR [rsp+0x20],rdi
   140001668:	call   QWORD PTR [rip+0x2de0a]        # 0x14002f478
   14000166e:	lea    r8,[rsp+0x250]
   140001676:	lea    rdx,[rsp+0x460]
   14000167e:	lea    rcx,[rsp+0x40]
   140001683:	xor    r9d,r9d
   140001686:	mov    QWORD PTR [rsp+0x20],rdi
   14000168b:	call   QWORD PTR [rip+0x2ddff]        # 0x14002f490
   140001691:	lea    rcx,[rsp+0x40]
   140001696:	or     rax,0xffffffffffffffff
   14000169a:	nop    WORD PTR [rax+rax*1+0x0]
   1400016a0:	inc    rax
   1400016a3:	cmp    WORD PTR [rcx+rax*2],di
   1400016a7:	jne    0x1400016a0
   1400016a9:	test   rax,rax
   1400016ac:	je     0x1400016cb
   1400016ae:	cmp    WORD PTR [rsp+rax*2+0x3e],0x5c
   1400016b4:	jne    0x1400016cb
   1400016b6:	lea    rax,[rax*2-0x2]
   1400016be:	cmp    rax,0x208
   1400016c4:	jae    0x1400016fd
   1400016c6:	mov    WORD PTR [rsp+rax*1+0x40],di
   1400016cb:	lea    rdx,[rsp+0x40]
   1400016d0:	mov    rcx,rbx
   1400016d3:	call   QWORD PTR [rip+0x2e2af]        # 0x14002f988
   1400016d9:	mov    rax,rbx
   1400016dc:	mov    rcx,QWORD PTR [rsp+0x670]
   1400016e4:	xor    rcx,rsp
   1400016e7:	call   0x14002c960
   1400016ec:	mov    rbx,QWORD PTR [rsp+0x698]
   1400016f4:	add    rsp,0x680
   1400016fb:	pop    rdi
   1400016fc:	ret    
   1400016fd:	call   0x14002cbc8
   140001702:	int3   
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    QWORD PTR [rsp+0x8],rbx
   140001715:	mov    QWORD PTR [rsp+0x10],rbp
   14000171a:	mov    QWORD PTR [rsp+0x18],rsi
   14000171f:	push   rdi
   140001720:	sub    rsp,0x20
   140001724:	mov    rdi,QWORD PTR [rdx+0x10]
   140001728:	mov    rbp,r8
   14000172b:	mov    rsi,rdx
   14000172e:	mov    rbx,rcx
   140001731:	cmp    rdi,r8
   140001734:	jae    0x140001744
   140001736:	lea    rcx,[rip+0x2e7f3]        # 0x14002ff30
   14000173d:	call   QWORD PTR [rip+0x2db6d]        # 0x14002f2b0
   140001743:	int3   
   140001744:	sub    rdi,r8
   140001747:	cmp    r9,rdi
   14000174a:	cmovb  rdi,r9
   14000174e:	cmp    rcx,rdx
   140001751:	jne    0x140001787
   140001753:	lea    rax,[rdi+r8*1]
   140001757:	cmp    QWORD PTR [rcx+0x10],rax
   14000175b:	jae    0x14000176b
   14000175d:	lea    rcx,[rip+0x2e7cc]        # 0x14002ff30
   140001764:	call   QWORD PTR [rip+0x2db46]        # 0x14002f2b0
   14000176a:	int3   
   14000176b:	cmp    QWORD PTR [rcx+0x18],0x10
   140001770:	mov    QWORD PTR [rcx+0x10],rax
   140001774:	jb     0x140001779
   140001776:	mov    rcx,QWORD PTR [rcx]
   140001779:	mov    BYTE PTR [rcx+rax*1],0x0
   14000177d:	mov    rcx,rbx
   140001780:	call   0x1400018c0
   140001785:	jmp    0x1400017d4
   140001787:	mov    rdx,rdi
   14000178a:	call   0x140001970
   14000178f:	test   al,al
   140001791:	je     0x1400017d4
   140001793:	cmp    QWORD PTR [rsi+0x18],0x10
   140001798:	jb     0x14000179d
   14000179a:	mov    rsi,QWORD PTR [rsi]
   14000179d:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017a2:	jb     0x1400017a9
   1400017a4:	mov    rcx,QWORD PTR [rbx]
   1400017a7:	jmp    0x1400017ac
   1400017a9:	mov    rcx,rbx
   1400017ac:	test   rdi,rdi
   1400017af:	je     0x1400017bd
   1400017b1:	lea    rdx,[rsi+rbp*1]
   1400017b5:	mov    r8,rdi
   1400017b8:	call   0x14002d270
   1400017bd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017c2:	mov    QWORD PTR [rbx+0x10],rdi
   1400017c6:	jb     0x1400017cd
   1400017c8:	mov    rax,QWORD PTR [rbx]
   1400017cb:	jmp    0x1400017d0
   1400017cd:	mov    rax,rbx
   1400017d0:	mov    BYTE PTR [rax+rdi*1],0x0
   1400017d4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400017d9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400017de:	mov    rax,rbx
   1400017e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017e6:	add    rsp,0x20
   1400017ea:	pop    rdi
   1400017eb:	ret    
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400017fa:	push   rdi
   1400017fb:	sub    rsp,0x20
   1400017ff:	mov    rdi,r8
   140001802:	mov    rsi,rdx
   140001805:	mov    rbx,rcx
   140001808:	test   rdx,rdx
   14000180b:	je     0x140001867
   14000180d:	mov    rdx,QWORD PTR [rcx+0x18]
   140001811:	cmp    rdx,0x10
   140001815:	jb     0x14000181c
   140001817:	mov    rax,QWORD PTR [rcx]
   14000181a:	jmp    0x14000181f
   14000181c:	mov    rax,rcx
   14000181f:	cmp    rsi,rax
   140001822:	jb     0x140001867
   140001824:	cmp    rdx,0x10
   140001828:	jb     0x14000182d
   14000182a:	mov    rcx,QWORD PTR [rcx]
   14000182d:	add    rcx,QWORD PTR [rbx+0x10]
   140001831:	cmp    rcx,rsi
   140001834:	jbe    0x140001867
   140001836:	cmp    rdx,0x10
   14000183a:	jb     0x140001841
   14000183c:	mov    rax,QWORD PTR [rbx]
   14000183f:	jmp    0x140001844
   140001841:	mov    rax,rbx
   140001844:	sub    rsi,rax
   140001847:	mov    r9,r8
   14000184a:	mov    rdx,rbx
   14000184d:	mov    r8,rsi
   140001850:	mov    rcx,rbx
   140001853:	mov    rbx,QWORD PTR [rsp+0x30]
   140001858:	mov    rsi,QWORD PTR [rsp+0x38]
   14000185d:	add    rsp,0x20
   140001861:	pop    rdi
   140001862:	jmp    0x140001710
   140001867:	mov    rdx,r8
   14000186a:	mov    rcx,rbx
   14000186d:	call   0x140001970
   140001872:	test   al,al
   140001874:	je     0x1400018ac
   140001876:	cmp    QWORD PTR [rbx+0x18],0x10
   14000187b:	jb     0x140001882
   14000187d:	mov    rcx,QWORD PTR [rbx]
   140001880:	jmp    0x140001885
   140001882:	mov    rcx,rbx
   140001885:	test   rdi,rdi
   140001888:	je     0x140001895
   14000188a:	mov    r8,rdi
   14000188d:	mov    rdx,rsi
   140001890:	call   0x14002d270
   140001895:	cmp    QWORD PTR [rbx+0x18],0x10
   14000189a:	mov    QWORD PTR [rbx+0x10],rdi
   14000189e:	jb     0x1400018a5
   1400018a0:	mov    rax,QWORD PTR [rbx]
   1400018a3:	jmp    0x1400018a8
   1400018a5:	mov    rax,rbx
   1400018a8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400018ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400018b1:	mov    rax,rbx
   1400018b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018b9:	add    rsp,0x20
   1400018bd:	pop    rdi
   1400018be:	ret    
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018c5:	push   rdi
   1400018c6:	sub    rsp,0x20
   1400018ca:	mov    rdi,QWORD PTR [rcx+0x10]
   1400018ce:	mov    rbx,rcx
   1400018d1:	cmp    rdi,r8
   1400018d4:	ja     0x14000190d
   1400018d6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400018db:	mov    QWORD PTR [rcx+0x10],0x0
   1400018e3:	jb     0x1400018f9
   1400018e5:	mov    rax,QWORD PTR [rcx]
   1400018e8:	mov    BYTE PTR [rax],0x0
   1400018eb:	mov    rax,rcx
   1400018ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018f3:	add    rsp,0x20
   1400018f7:	pop    rdi
   1400018f8:	ret    
   1400018f9:	mov    rax,rcx
   1400018fc:	mov    BYTE PTR [rcx],0x0
   1400018ff:	mov    rax,rbx
   140001902:	mov    rbx,QWORD PTR [rsp+0x30]
   140001907:	add    rsp,0x20
   14000190b:	pop    rdi
   14000190c:	ret    
   14000190d:	test   r8,r8
   140001910:	je     0x140001955
   140001912:	cmp    QWORD PTR [rcx+0x18],0x10
   140001917:	jb     0x14000191c
   140001919:	mov    rcx,QWORD PTR [rcx]
   14000191c:	sub    rdi,r8
   14000191f:	je     0x14000192e
   140001921:	lea    rdx,[rcx+r8*1]
   140001925:	mov    r8,rdi
   140001928:	call   QWORD PTR [rip+0x2db5a]        # 0x14002f488
   14000192e:	cmp    QWORD PTR [rbx+0x18],0x10
   140001933:	mov    QWORD PTR [rbx+0x10],rdi
   140001937:	jb     0x14000194e
   140001939:	mov    rax,QWORD PTR [rbx]
   14000193c:	mov    BYTE PTR [rax+rdi*1],0x0
   140001940:	mov    rax,rbx
   140001943:	mov    rbx,QWORD PTR [rsp+0x30]
   140001948:	add    rsp,0x20
   14000194c:	pop    rdi
   14000194d:	ret    
   14000194e:	mov    rax,rbx
   140001951:	mov    BYTE PTR [rbx+rdi*1],0x0
   140001955:	mov    rax,rbx
   140001958:	mov    rbx,QWORD PTR [rsp+0x30]
   14000195d:	add    rsp,0x20
   140001961:	pop    rdi
   140001962:	ret    
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	rex push rbx
   140001972:	sub    rsp,0x20
   140001976:	mov    rbx,rdx
   140001979:	cmp    rdx,0xfffffffffffffffe
   14000197d:	jbe    0x14000198d
   14000197f:	lea    rcx,[rip+0x2e59a]        # 0x14002ff20
   140001986:	call   QWORD PTR [rip+0x2d92c]        # 0x14002f2b8
   14000198c:	int3   
   14000198d:	mov    rax,QWORD PTR [rcx+0x18]
   140001991:	mov    QWORD PTR [rsp+0x30],rdi
   140001996:	xor    edi,edi
   140001998:	cmp    rax,rdx
   14000199b:	jae    0x1400019b7
   14000199d:	mov    r8,QWORD PTR [rcx+0x10]
   1400019a1:	call   0x1400019e0
   1400019a6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400019ab:	test   rbx,rbx
   1400019ae:	setne  al
   1400019b1:	add    rsp,0x20
   1400019b5:	pop    rbx
   1400019b6:	ret    
   1400019b7:	test   rdx,rdx
   1400019ba:	jne    0x1400019cc
   1400019bc:	mov    QWORD PTR [rcx+0x10],rdi
   1400019c0:	cmp    rax,0x10
   1400019c4:	jb     0x1400019c9
   1400019c6:	mov    rcx,QWORD PTR [rcx]
   1400019c9:	mov    BYTE PTR [rcx],dil
   1400019cc:	mov    rdi,QWORD PTR [rsp+0x30]
   1400019d1:	test   rbx,rbx
   1400019d4:	setne  al
   1400019d7:	add    rsp,0x20
   1400019db:	pop    rbx
   1400019dc:	ret    
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	mov    QWORD PTR [rsp+0x18],r8
   1400019e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400019ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400019ef:	push   rbx
   1400019f0:	push   rsi
   1400019f1:	push   rdi
   1400019f2:	push   r14
   1400019f4:	sub    rsp,0x38
   1400019f8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a01:	mov    rsi,r8
   140001a04:	mov    rbx,rcx
   140001a07:	mov    rdi,rdx
   140001a0a:	or     rdi,0xf
   140001a0e:	cmp    rdi,0xfffffffffffffffe
   140001a12:	jbe    0x140001a19
   140001a14:	mov    rdi,rdx
   140001a17:	jmp    0x140001a4e
   140001a19:	mov    r8,QWORD PTR [rcx+0x18]
   140001a1d:	mov    rcx,r8
   140001a20:	shr    rcx,1
   140001a23:	movabs rax,0xaaaaaaaaaaaaaaab
   140001a2d:	mul    rdi
   140001a30:	shr    rdx,1
   140001a33:	cmp    rcx,rdx
   140001a36:	jbe    0x140001a4e
   140001a38:	mov    rdi,0xfffffffffffffffe
   140001a3f:	mov    rax,rdi
   140001a42:	sub    rax,rcx
   140001a45:	cmp    r8,rax
   140001a48:	ja     0x140001a4e
   140001a4a:	lea    rdi,[rcx+r8*1]
   140001a4e:	lea    rcx,[rdi+0x1]
   140001a52:	xor    r14d,r14d
   140001a55:	test   rcx,rcx
   140001a58:	je     0x140001a75
   140001a5a:	cmp    rcx,0xffffffffffffffff
   140001a5e:	ja     0x140001a6e
   140001a60:	call   QWORD PTR [rip+0x2df32]        # 0x14002f998
   140001a66:	mov    r14,rax
   140001a69:	test   rax,rax
   140001a6c:	jne    0x140001a75
   140001a6e:	call   QWORD PTR [rip+0x2d834]        # 0x14002f2a8
   140001a74:	nop
   140001a75:	jmp    0x140001a8b
   140001a77:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a7c:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a81:	mov    rdi,QWORD PTR [rsp+0x68]
   140001a86:	mov    r14,QWORD PTR [rsp+0x78]
   140001a8b:	test   rsi,rsi
   140001a8e:	je     0x140001aaf
   140001a90:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a95:	jb     0x140001a9c
   140001a97:	mov    rdx,QWORD PTR [rbx]
   140001a9a:	jmp    0x140001a9f
   140001a9c:	mov    rdx,rbx
   140001a9f:	test   rsi,rsi
   140001aa2:	je     0x140001aaf
   140001aa4:	mov    r8,rsi
   140001aa7:	mov    rcx,r14
   140001aaa:	call   0x14002d270
   140001aaf:	cmp    QWORD PTR [rbx+0x18],0x10
   140001ab4:	jb     0x140001abf
   140001ab6:	mov    rcx,QWORD PTR [rbx]
   140001ab9:	call   QWORD PTR [rip+0x2e0b9]        # 0x14002fb78
   140001abf:	mov    BYTE PTR [rbx],0x0
   140001ac2:	mov    QWORD PTR [rbx],r14
   140001ac5:	mov    QWORD PTR [rbx+0x18],rdi
   140001ac9:	mov    QWORD PTR [rbx+0x10],rsi
   140001acd:	cmp    rdi,0x10
   140001ad1:	jb     0x140001ad6
   140001ad3:	mov    rbx,r14
   140001ad6:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001ada:	add    rsp,0x38
   140001ade:	pop    r14
   140001ae0:	pop    rdi
   140001ae1:	pop    rsi
   140001ae2:	pop    rbx
   140001ae3:	ret    
   140001ae4:	int3   
   140001ae5:	int3   
   140001ae6:	int3   
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	rex push rbp
   140001af2:	push   rsi
   140001af3:	push   rdi
   140001af4:	push   r13
   140001af6:	push   r14
   140001af8:	sub    rsp,0x180
   140001aff:	mov    rax,QWORD PTR [rip+0x3a4fa]        # 0x14003c000
   140001b06:	xor    rax,rsp
   140001b09:	mov    QWORD PTR [rsp+0x160],rax
   140001b11:	mov    r9,QWORD PTR [rip+0x3b7e0]        # 0x14003d2f8
   140001b18:	xor    esi,esi
   140001b1a:	mov    ebp,0x11
   140001b1f:	mov    rdi,rdx
   140001b22:	mov    QWORD PTR [rsp+0x58],rdx
   140001b27:	mov    r13,rcx
   140001b2a:	mov    WORD PTR [rip+0x3d327],si        # 0x14003ee58
   140001b31:	mov    WORD PTR [rip+0x3c66c],si        # 0x14003e1a4
   140001b38:	mov    WORD PTR [rip+0x3d309],si        # 0x14003ee48
   140001b3f:	mov    WORD PTR [rip+0x3d31a],bp        # 0x14003ee60
   140001b46:	mov    WORD PTR [rip+0x3d303],si        # 0x14003ee50
   140001b4d:	lea    r8,[rip+0x2f7fc]        # 0x140031350
   140001b54:	lea    rdx,[rip+0x3c655]        # 0x14003e1b0
   140001b5b:	mov    al,0x43
   140001b5d:	lea    r14,[rip+0x2f69c]        # 0x140031200
   140001b64:	cmp    al,0x20
   140001b66:	jae    0x140001b72
   140001b68:	movzx  eax,al
   140001b6b:	movzx  ecx,WORD PTR [r14+rax*2]
   140001b70:	jmp    0x140001b87
   140001b72:	cmp    al,0x80
   140001b74:	jae    0x140001b7b
   140001b76:	movzx  ecx,al
   140001b79:	jmp    0x140001b87
   140001b7b:	movzx  eax,al
   140001b7e:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140001b87:	movzx  eax,BYTE PTR [r8+0x1]
   140001b8c:	inc    r8
   140001b8f:	mov    WORD PTR [rdx],cx
   140001b92:	add    rdx,0x2
   140001b96:	test   al,al
   140001b98:	jne    0x140001b64
   140001b9a:	mov    WORD PTR [rdx],si
   140001b9d:	lea    rdx,[rip+0x3c60c]        # 0x14003e1b0
   140001ba4:	xor    r8d,r8d
   140001ba7:	xor    ecx,ecx
   140001ba9:	call   QWORD PTR [rip+0x3fef9]        # 0x140041aa8
   140001baf:	test   ax,ax
   140001bb2:	je     0x140001bbe
   140001bb4:	mov    eax,0x6
   140001bb9:	jmp    0x140002068
   140001bbe:	mov    ecx,0x110
   140001bc3:	call   QWORD PTR [rip+0x2d84f]        # 0x14002f418
   140001bc9:	mov    QWORD PTR [rip+0x3e910],rax        # 0x1400404e0
   140001bd0:	test   rax,rax
   140001bd3:	jne    0x140001bdf
   140001bd5:	mov    eax,0x4
   140001bda:	jmp    0x140002068
   140001bdf:	mov    ecx,0x800
   140001be4:	mov    QWORD PTR [rsp+0x178],r12
   140001bec:	call   QWORD PTR [rip+0x2d826]        # 0x14002f418
   140001bf2:	mov    r12,rax
   140001bf5:	test   rax,rax
   140001bf8:	jne    0x140001c04
   140001bfa:	lea    eax,[r12+0x4]
   140001bff:	jmp    0x140002060
   140001c04:	mov    rdx,rdi
   140001c07:	call   0x140004720
   140001c0c:	mov    WORD PTR [rip+0x3e5c9],ax        # 0x1400401dc
   140001c13:	test   ax,ax
   140001c16:	jne    0x140002060
   140001c1c:	mov    rdx,r12
   140001c1f:	mov    QWORD PTR [rsp+0x1c0],rbx
   140001c27:	mov    DWORD PTR [r12],0x20
   140001c2f:	call   0x140004860
   140001c34:	mov    rcx,r13
   140001c37:	call   0x14000bb50
   140001c3c:	test   ax,ax
   140001c3f:	je     0x140001c5e
   140001c41:	cwde   
   140001c42:	cmp    eax,0xfffffffe
   140001c45:	je     0x140001f3c
   140001c4b:	cmp    eax,0xffffffff
   140001c4e:	jne    0x140002000
   140001c54:	mov    eax,0x1
   140001c59:	jmp    0x140002058
   140001c5e:	movzx  eax,WORD PTR [rip+0x3c35f]        # 0x14003dfc4
   140001c65:	mov    DWORD PTR [r13+0x0],esi
   140001c69:	mov    DWORD PTR [rip+0x3e395],esi        # 0x140040004
   140001c6f:	test   ax,ax
   140001c72:	je     0x140001dd3
   140001c78:	mov    rcx,QWORD PTR [rip+0x3e569]        # 0x1400401e8
   140001c7f:	lea    r9,[rip+0x509a]        # 0x140006d20
   140001c86:	movsx  rdx,ax
   140001c8a:	mov    r8d,0x10
   140001c90:	call   QWORD PTR [rip+0x2d7d2]        # 0x14002f468
   140001c96:	call   0x140002090
   140001c9b:	mov    rdi,QWORD PTR [rip+0x3e83e]        # 0x1400404e0
   140001ca2:	movzx  eax,WORD PTR [rdi+0x6c]
   140001ca6:	mov    r9,QWORD PTR [rip+0x3c45b]        # 0x14003e108
   140001cad:	movzx  edx,BYTE PTR [rdi+0x3d]
   140001cb1:	mov    WORD PTR [rsp+0x20],ax
   140001cb6:	call   0x140006540
   140001cbb:	mov    rax,QWORD PTR [rip+0x3e526]        # 0x1400401e8
   140001cc2:	mov    rcx,QWORD PTR [rax]
   140001cc5:	lea    rdx,[rsp+0x60]
   140001cca:	nop    WORD PTR [rax+rax*1+0x0]
   140001cd0:	movzx  eax,BYTE PTR [rcx]
   140001cd3:	test   al,al
   140001cd5:	jne    0x140001cdd
   140001cd7:	cmp    BYTE PTR [rcx+0x1],sil
   140001cdb:	je     0x140001cf0
   140001cdd:	mov    BYTE PTR [rdx],al
   140001cdf:	movzx  eax,BYTE PTR [rcx+0x1]
   140001ce3:	add    rdx,0x2
   140001ce7:	mov    BYTE PTR [rdx-0x1],al
   140001cea:	add    rcx,0x2
   140001cee:	jmp    0x140001cd0
   140001cf0:	movzx  eax,BYTE PTR [rcx]
   140001cf3:	mov    BYTE PTR [rdx],al
   140001cf5:	movzx  eax,BYTE PTR [rcx+0x1]
   140001cf9:	mov    ecx,esi
   140001cfb:	mov    BYTE PTR [rdx+0x1],al
   140001cfe:	lea    rax,[rsp+0x60]
   140001d03:	cmp    BYTE PTR [rax],sil
   140001d06:	jne    0x140001d0e
   140001d08:	cmp    BYTE PTR [rax+0x1],sil
   140001d0c:	je     0x140001d16
   140001d0e:	add    rax,0x2
   140001d12:	inc    ecx
   140001d14:	jmp    0x140001d03
   140001d16:	add    cx,cx
   140001d19:	movzx  ebx,si
   140001d1c:	cmp    si,cx
   140001d1f:	jge    0x140001d9f
   140001d21:	movzx  ebp,BYTE PTR [rdi+0x3d]
   140001d25:	mov    r14,QWORD PTR [rip+0x3c3dc]        # 0x14003e108
   140001d2c:	dec    cx
   140001d2f:	shr    cx,1
   140001d32:	mov    QWORD PTR [rsp+0x170],r15
   140001d3a:	movzx  r15d,WORD PTR [rip+0x3d10a]        # 0x14003ee4c
   140001d42:	inc    cx
   140001d45:	lea    rdi,[rsp+0x60]
   140001d4a:	movzx  esi,cx
   140001d4d:	nop    DWORD PTR [rax]
   140001d50:	movzx  eax,WORD PTR [rdi]
   140001d53:	lea    rcx,[rsp+0x50]
   140001d58:	mov    r9,r14
   140001d5b:	movzx  edx,bpl
   140001d5f:	mov    WORD PTR [rsp+0x20],r15w
   140001d65:	mov    WORD PTR [rsp+0x50],ax
   140001d6a:	call   0x140006c20
   140001d6f:	movzx  eax,WORD PTR [rsp+0x50]
   140001d74:	movsx  r9,bx
   140001d78:	inc    bx
   140001d7b:	lea    rdi,[rdi+0x2]
   140001d7f:	mov    WORD PTR [rsp+r9*1+0xe0],ax
   140001d88:	dec    rsi
   140001d8b:	jne    0x140001d50
   140001d8d:	mov    r15,QWORD PTR [rsp+0x170]
   140001d95:	lea    r14,[rip+0x2f464]        # 0x140031200
   140001d9c:	lea    ebp,[rsi+0x11]
   140001d9f:	lea    rcx,[rsp+0xe0]
   140001da7:	call   0x140006d50
   140001dac:	test   ax,ax
   140001daf:	jns    0x140001dc5
   140001db1:	cmp    ax,0xffff
   140001db5:	je     0x140002000
   140001dbb:	mov    eax,0x3
   140001dc0:	jmp    0x140002058
   140001dc5:	mov    rdi,QWORD PTR [rsp+0x58]
   140001dca:	mov    WORD PTR [rip+0x3e3df],ax        # 0x1400401b0
   140001dd1:	jmp    0x140001dda
   140001dd3:	mov    WORD PTR [rip+0x3e3d6],si        # 0x1400401b0
   140001dda:	mov    rdx,r13
   140001ddd:	mov    WORD PTR [rip+0x3d060],si        # 0x14003ee44
   140001de4:	mov    WORD PTR [rip+0x3d071],si        # 0x14003ee5c
   140001deb:	call   0x140002450
   140001df0:	test   ax,ax
   140001df3:	jns    0x140001e0e
   140001df5:	cwde   
   140001df6:	cmp    eax,0xfffffffc
   140001df9:	je     0x140001f96
   140001dff:	cmp    eax,0xffffffff
   140001e02:	je     0x140001dbb
   140001e04:	mov    eax,0x4
   140001e09:	jmp    0x140002058
   140001e0e:	mov    rcx,r12
   140001e11:	call   QWORD PTR [rip+0x2d669]        # 0x14002f480
   140001e17:	mov    rcx,QWORD PTR [rip+0x3e3ca]        # 0x1400401e8
   140001e1e:	test   rcx,rcx
   140001e21:	je     0x140001e30
   140001e23:	call   QWORD PTR [rip+0x2d657]        # 0x14002f480
   140001e29:	mov    QWORD PTR [rip+0x3e3b8],rsi        # 0x1400401e8
   140001e30:	mov    rcx,QWORD PTR [rip+0x3e3a9]        # 0x1400401e0
   140001e37:	test   rcx,rcx
   140001e3a:	je     0x140001e49
   140001e3c:	call   QWORD PTR [rip+0x2d63e]        # 0x14002f480
   140001e42:	mov    QWORD PTR [rip+0x3e397],rsi        # 0x1400401e0
   140001e49:	cmp    WORD PTR [rip+0x3c093],0x0        # 0x14003dee4
   140001e51:	je     0x140002010
   140001e57:	mov    r9,QWORD PTR [rip+0x3b49a]        # 0x14003d2f8
   140001e5e:	mov    eax,0x53
   140001e63:	mov    ebx,0x1
   140001e68:	mov    WORD PTR [rip+0x3cff1],ax        # 0x14003ee60
   140001e6f:	mov    WORD PTR [rip+0x3c32e],si        # 0x14003e1a4
   140001e76:	mov    WORD PTR [rip+0x3cfcb],bp        # 0x14003ee48
   140001e7d:	mov    al,0x43
   140001e7f:	mov    WORD PTR [rip+0x3cfd2],bx        # 0x14003ee58
   140001e86:	mov    WORD PTR [rip+0x3cfc3],bp        # 0x14003ee50
   140001e8d:	lea    r8,[rip+0x2f4cc]        # 0x140031360
   140001e94:	lea    rdx,[rip+0x3c315]        # 0x14003e1b0
   140001e9b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001ea0:	cmp    al,0x20
   140001ea2:	jae    0x140001eae
   140001ea4:	movzx  eax,al
   140001ea7:	movzx  ecx,WORD PTR [r14+rax*2]
   140001eac:	jmp    0x140001ec3
   140001eae:	cmp    al,0x80
   140001eb0:	jae    0x140001eb7
   140001eb2:	movzx  ecx,al
   140001eb5:	jmp    0x140001ec3
   140001eb7:	movzx  eax,al
   140001eba:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140001ec3:	movzx  eax,BYTE PTR [r8+0x1]
   140001ec8:	inc    r8
   140001ecb:	mov    WORD PTR [rdx],cx
   140001ece:	add    rdx,0x2
   140001ed2:	test   al,al
   140001ed4:	jne    0x140001ea0
   140001ed6:	mov    WORD PTR [rdx],si
   140001ed9:	lea    rdx,[rip+0x3c2d0]        # 0x14003e1b0
   140001ee0:	xor    r8d,r8d
   140001ee3:	mov    ecx,ebp
   140001ee5:	call   QWORD PTR [rip+0x3fbbd]        # 0x140041aa8
   140001eeb:	test   ax,ax
   140001eee:	jne    0x140001f96
   140001ef4:	lea    rcx,[rip+0x2f475]        # 0x140031370
   140001efb:	call   0x14001bc00
   140001f00:	cmp    DWORD PTR [rip+0x3c2a1],0x0        # 0x14003e1a8
   140001f07:	je     0x140001dbb
   140001f0d:	call   0x140013770
   140001f12:	test   ax,ax
   140001f15:	je     0x140001faa
   140001f1b:	cwde   
   140001f1c:	cmp    eax,0xfffffff9
   140001f1f:	je     0x140001fa0
   140001f21:	cmp    eax,0xfffffffc
   140001f24:	je     0x140001f46
   140001f26:	cmp    eax,0xfffffffe
   140001f29:	je     0x140001f3c
   140001f2b:	cmp    eax,0xffffffff
   140001f2e:	jne    0x140002000
   140001f34:	movzx  eax,bx
   140001f37:	jmp    0x140002058
   140001f3c:	mov    eax,0x2
   140001f41:	jmp    0x140002058
   140001f46:	mov    rcx,QWORD PTR [rip+0x3c19b]        # 0x14003e0e8
   140001f4d:	test   rcx,rcx
   140001f50:	je     0x140001f5f
   140001f52:	call   QWORD PTR [rip+0x2d528]        # 0x14002f480
   140001f58:	mov    QWORD PTR [rip+0x3c189],rsi        # 0x14003e0e8
   140001f5f:	mov    rcx,QWORD PTR [rip+0x3c18a]        # 0x14003e0f0
   140001f66:	test   rcx,rcx
   140001f69:	je     0x140001f78
   140001f6b:	call   QWORD PTR [rip+0x2d50f]        # 0x14002f480
   140001f71:	mov    QWORD PTR [rip+0x3c178],rsi        # 0x14003e0f0
   140001f78:	call   0x1400049e0
   140001f7d:	mov    rcx,QWORD PTR [rip+0x3e55c]        # 0x1400404e0
   140001f84:	test   rcx,rcx
   140001f87:	je     0x140001f96
   140001f89:	call   QWORD PTR [rip+0x2d4f1]        # 0x14002f480
   140001f8f:	mov    QWORD PTR [rip+0x3e54a],rsi        # 0x1400404e0
   140001f96:	mov    eax,0x6
   140001f9b:	jmp    0x140002058
   140001fa0:	mov    eax,0x7
   140001fa5:	jmp    0x140002058
   140001faa:	lea    rcx,[rip+0x2f3bf]        # 0x140031370
   140001fb1:	call   QWORD PTR [rip+0x2d4a9]        # 0x14002f460
   140001fb7:	mov    rcx,QWORD PTR [rip+0x3c12a]        # 0x14003e0e8
   140001fbe:	test   rcx,rcx
   140001fc1:	je     0x140001fd0
   140001fc3:	call   QWORD PTR [rip+0x2d4b7]        # 0x14002f480
   140001fc9:	mov    QWORD PTR [rip+0x3c118],rsi        # 0x14003e0e8
   140001fd0:	mov    rcx,QWORD PTR [rip+0x3c119]        # 0x14003e0f0
   140001fd7:	test   rcx,rcx
   140001fda:	je     0x140001fe9
   140001fdc:	call   QWORD PTR [rip+0x2d49e]        # 0x14002f480
   140001fe2:	mov    QWORD PTR [rip+0x3c107],rsi        # 0x14003e0f0
   140001fe9:	mov    rcx,rdi
   140001fec:	call   0x1400076e0
   140001ff1:	test   ax,ax
   140001ff4:	je     0x140002007
   140001ff6:	cmp    ax,0xffff
   140001ffa:	je     0x140001dbb
   140002000:	mov    eax,0x4
   140002005:	jmp    0x140002058
   140002007:	lea    rcx,[rip+0x2f372]        # 0x140031380
   14000200e:	jmp    0x140002031
   140002010:	lea    rcx,[rip+0x2f359]        # 0x140031370
   140002017:	call   QWORD PTR [rip+0x2d443]        # 0x14002f460
   14000201d:	lea    rcx,[rip+0x2f36c]        # 0x140031390
   140002024:	call   QWORD PTR [rip+0x2d436]        # 0x14002f460
   14000202a:	lea    rcx,[rip+0x2f36f]        # 0x1400313a0
   140002031:	call   QWORD PTR [rip+0x2d429]        # 0x14002f460
   140002037:	call   0x1400049e0
   14000203c:	mov    rcx,QWORD PTR [rip+0x3e49d]        # 0x1400404e0
   140002043:	test   rcx,rcx
   140002046:	je     0x140002055
   140002048:	call   QWORD PTR [rip+0x2d432]        # 0x14002f480
   14000204e:	mov    QWORD PTR [rip+0x3e48b],rsi        # 0x1400404e0
   140002055:	movzx  eax,si
   140002058:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140002060:	mov    r12,QWORD PTR [rsp+0x178]
   140002068:	mov    rcx,QWORD PTR [rsp+0x160]
   140002070:	xor    rcx,rsp
   140002073:	call   0x14002c960
   140002078:	add    rsp,0x180
   14000207f:	pop    r14
   140002081:	pop    r13
   140002083:	pop    rdi
   140002084:	pop    rsi
   140002085:	pop    rbp
   140002086:	ret    
   140002087:	int3   
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	mov    QWORD PTR [rsp+0x10],rbx
   140002095:	mov    QWORD PTR [rsp+0x18],rbp
   14000209a:	mov    QWORD PTR [rsp+0x20],rsi
   14000209f:	push   rdi
   1400020a0:	push   r12
   1400020a2:	push   r13
   1400020a4:	push   r14
   1400020a6:	push   r15
   1400020a8:	sub    rsp,0x20
   1400020ac:	xor    r10d,r10d
   1400020af:	cmp    r10w,WORD PTR [rip+0x3bf11]        # 0x14003dfc8
   1400020b7:	movzx  r12d,r10w
   1400020bb:	jge    0x140002420
   1400020c1:	movzx  r11d,WORD PTR [rip+0x3cd83]        # 0x14003ee4c
   1400020c9:	mov    r15,QWORD PTR [rip+0x3e410]        # 0x1400404e0
   1400020d0:	movzx  ebx,WORD PTR [rsp+0x50]
   1400020d5:	mov    r8,QWORD PTR [rip+0x3c02c]        # 0x14003e108
   1400020dc:	lea    r13d,[r11-0x1]
   1400020e0:	mov    rax,QWORD PTR [rip+0x3e0f9]        # 0x1400401e0
   1400020e7:	movsx  rsi,r12w
   1400020eb:	lea    rcx,[rip+0x3a1be]        # 0x14003c2b0
   1400020f2:	movzx  r9d,WORD PTR [rsi+rax*1]
   1400020f7:	lea    r14,[rsi+rax*1]
   1400020fb:	movzx  eax,BYTE PTR [rip+0x3a1ae]        # 0x14003c2b0
   140002102:	mov    WORD PTR [rsp+0x50],r9w
   140002108:	cmp    al,0xff
   14000210a:	je     0x140002121
   14000210c:	movzx  edx,BYTE PTR [rsp+0x51]
   140002111:	cmp    al,dl
   140002113:	je     0x140002121
   140002115:	movzx  eax,BYTE PTR [rcx+0x10]
   140002119:	add    rcx,0x10
   14000211d:	cmp    al,0xff
   14000211f:	jne    0x140002111
   140002121:	mov    rdx,QWORD PTR [rcx+0x8]
   140002125:	test   rdx,rdx
   140002128:	je     0x14000214a
   14000212a:	movzx  eax,BYTE PTR [rdx]
   14000212d:	cmp    r9b,al
   140002130:	jb     0x14000214a
   140002132:	sub    r9b,al
   140002135:	cmp    r9b,BYTE PTR [rdx+0x1]
   140002139:	ja     0x14000214a
   14000213b:	movzx  eax,r9b
   14000213f:	add    eax,0x2
   140002142:	cdqe   
   140002144:	movzx  ebp,BYTE PTR [rdx+rax*1]
   140002148:	jmp    0x14000214d
   14000214a:	mov    bpl,0xff
   14000214d:	xor    eax,eax
   14000214f:	movzx  r9d,r11w
   140002153:	movzx  edi,ax
   140002156:	cmp    ax,r11w
   14000215a:	jg     0x14000225e
   140002160:	movzx  r11d,bpl
   140002164:	nop    DWORD PTR [rax+0x0]
   140002168:	nop    DWORD PTR [rax+rax*1+0x0]
   140002170:	movsx  ecx,r10w
   140002174:	movsx  eax,r9w
   140002178:	add    eax,ecx
   14000217a:	cdq    
   14000217b:	sub    eax,edx
   14000217d:	sar    eax,1
   14000217f:	movsxd rbx,eax
   140002182:	movzx  eax,r11w
   140002186:	movsx  rcx,bx
   14000218a:	movzx  edx,BYTE PTR [r8+rcx*4+0x2]
   140002190:	sub    ax,dx
   140002193:	jns    0x14000219d
   140002195:	lea    r9d,[rbx-0x1]
   140002199:	xor    edi,edi
   14000219b:	jmp    0x1400021ab
   14000219d:	test   ax,ax
   1400021a0:	jle    0x1400021b6
   1400021a2:	lea    r10d,[rbx+0x1]
   1400021a6:	mov    edi,0x1
   1400021ab:	cmp    r10w,r9w
   1400021af:	jle    0x140002170
   1400021b1:	jmp    0x140002254
   1400021b6:	movsx  rcx,bx
   1400021ba:	movzx  eax,BYTE PTR [r8+rcx*4+0x2]
   1400021c0:	cmp    BYTE PTR [r8+rcx*4-0x2],al
   1400021c5:	jne    0x1400021e4
   1400021c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400021d0:	dec    bx
   1400021d3:	movsx  rcx,bx
   1400021d7:	movzx  eax,BYTE PTR [r8+rcx*4+0x2]
   1400021dd:	cmp    BYTE PTR [r8+rcx*4-0x2],al
   1400021e2:	je     0x1400021d0
   1400021e4:	movsx  rcx,bx
   1400021e8:	movzx  edx,bx
   1400021eb:	movzx  eax,BYTE PTR [r8+rcx*4+0x6]
   1400021f1:	cmp    BYTE PTR [r8+rcx*4+0x2],al
   1400021f6:	jne    0x140002214
   1400021f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002200:	inc    dx
   140002203:	movsx  rcx,dx
   140002207:	movzx  eax,BYTE PTR [r8+rcx*4+0x6]
   14000220d:	cmp    BYTE PTR [r8+rcx*4+0x2],al
   140002212:	je     0x140002200
   140002214:	movzx  r9d,bx
   140002218:	cmp    bx,dx
   14000221b:	jg     0x140002254
   14000221d:	movzx  r10d,BYTE PTR [r14]
   140002221:	lea    eax,[rsi+0x1]
   140002224:	movsxd r11,eax
   140002227:	add    r11,QWORD PTR [rip+0x3dfb2]        # 0x1400401e0
   14000222e:	xchg   ax,ax
   140002230:	movsx  rax,r9w
   140002234:	lea    rcx,[r8+rax*4]
   140002238:	cmp    BYTE PTR [rcx],r10b
   14000223b:	jne    0x14000224a
   14000223d:	movzx  eax,BYTE PTR [r11]
   140002241:	cmp    BYTE PTR [rcx+0x1],al
   140002244:	je     0x140002402
   14000224a:	inc    r9w
   14000224e:	cmp    r9w,dx
   140002252:	jle    0x140002230
   140002254:	test   di,di
   140002257:	je     0x14000225e
   140002259:	lea    edi,[rbx+0x1]
   14000225c:	jmp    0x140002261
   14000225e:	movzx  edi,bx
   140002261:	movzx  eax,WORD PTR [rip+0x3cbe4]        # 0x14003ee4c
   140002268:	mov    rcx,r8
   14000226b:	inc    r13w
   14000226f:	inc    ax
   140002272:	movsx  rsi,ax
   140002276:	mov    WORD PTR [rip+0x3cbcf],ax        # 0x14003ee4c
   14000227d:	lea    edx,[rsi*4+0x0]
   140002284:	call   QWORD PTR [rip+0x2d176]        # 0x14002f400
   14000228a:	mov    r9,rax
   14000228d:	mov    QWORD PTR [rip+0x3be74],rax        # 0x14003e108
   140002294:	test   rax,rax
   140002297:	je     0x140002441
   14000229d:	cmp    r13w,di
   1400022a1:	jle    0x140002311
   1400022a3:	movsx  r8,r13w
   1400022a7:	movzx  ecx,r13w
   1400022ab:	shl    r8,0x2
   1400022af:	sub    cx,di
   1400022b2:	movzx  r10d,cx
   1400022b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400022c0:	movzx  eax,BYTE PTR [r8+r9*1-0x4]
   1400022c6:	lea    r8,[r8-0x4]
   1400022ca:	mov    BYTE PTR [r8+r9*1+0x4],al
   1400022cf:	mov    rcx,QWORD PTR [rip+0x3be32]        # 0x14003e108
   1400022d6:	movzx  eax,BYTE PTR [r8+rcx*1+0x1]
   1400022dc:	mov    BYTE PTR [r8+rcx*1+0x5],al
   1400022e1:	mov    rcx,QWORD PTR [rip+0x3be20]        # 0x14003e108
   1400022e8:	movzx  eax,BYTE PTR [r8+rcx*1+0x2]
   1400022ee:	mov    BYTE PTR [r8+rcx*1+0x6],al
   1400022f3:	mov    rcx,QWORD PTR [rip+0x3be0e]        # 0x14003e108
   1400022fa:	movzx  eax,BYTE PTR [r8+rcx*1+0x3]
   140002300:	mov    BYTE PTR [r8+rcx*1+0x7],al
   140002305:	mov    r9,QWORD PTR [rip+0x3bdfc]        # 0x14003e108
   14000230c:	dec    r10
   14000230f:	jne    0x1400022c0
   140002311:	movsx  r8d,WORD PTR [rip+0x3cb33]        # 0x14003ee4c
   140002319:	movsx  rax,di
   14000231d:	lea    rdx,[rax*4+0x0]
   140002325:	movzx  eax,BYTE PTR [r14]
   140002329:	mov    BYTE PTR [rdx+r9*1],al
   14000232d:	mov    rax,QWORD PTR [rip+0x3bdd4]        # 0x14003e108
   140002334:	movzx  ecx,BYTE PTR [r14+0x1]
   140002339:	mov    BYTE PTR [rdx+rax*1+0x1],cl
   14000233d:	mov    rax,QWORD PTR [rip+0x3bdc4]        # 0x14003e108
   140002344:	lea    ecx,[r8-0x1]
   140002348:	mov    BYTE PTR [rdx+rax*1+0x2],bpl
   14000234d:	mov    rax,QWORD PTR [rip+0x3bdb4]        # 0x14003e108
   140002354:	lea    r9d,[r8-0x1]
   140002358:	mov    BYTE PTR [rdx+rax*1+0x3],cl
   14000235c:	xor    eax,eax
   14000235e:	movzx  edx,ax
   140002361:	test   r9d,r9d
   140002364:	jle    0x140002397
   140002366:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002370:	mov    rax,QWORD PTR [rip+0x3bd99]        # 0x14003e110
   140002377:	movsx  r8,dx
   14000237b:	add    r8,rax
   14000237e:	movzx  eax,BYTE PTR [r8]
   140002382:	cmp    al,dil
   140002385:	jb     0x14000238c
   140002387:	inc    al
   140002389:	mov    BYTE PTR [r8],al
   14000238c:	inc    dx
   14000238f:	movsx  eax,dx
   140002392:	cmp    eax,r9d
   140002395:	jl     0x140002370
   140002397:	mov    rcx,QWORD PTR [rip+0x3bd72]        # 0x14003e110
   14000239e:	mov    edx,esi
   1400023a0:	call   QWORD PTR [rip+0x2d05a]        # 0x14002f400
   1400023a6:	mov    QWORD PTR [rip+0x3bd63],rax        # 0x14003e110
   1400023ad:	test   rax,rax
   1400023b0:	je     0x140002441
   1400023b6:	xor    r10d,r10d
   1400023b9:	mov    BYTE PTR [rsi+rax*1-0x1],dil
   1400023be:	movzx  edx,r10w
   1400023c2:	cmp    r10w,WORD PTR [r15+0x8c]
   1400023ca:	jae    0x1400023f9
   1400023cc:	nop    DWORD PTR [rax+0x0]
   1400023d0:	mov    rax,QWORD PTR [rip+0x3bd11]        # 0x14003e0e8
   1400023d7:	movzx  r8d,dx
   1400023db:	add    r8,rax
   1400023de:	movzx  eax,BYTE PTR [r8]
   1400023e2:	cmp    al,dil
   1400023e5:	jb     0x1400023ec
   1400023e7:	inc    al
   1400023e9:	mov    BYTE PTR [r8],al
   1400023ec:	inc    dx
   1400023ef:	cmp    dx,WORD PTR [r15+0x8c]
   1400023f7:	jb     0x1400023d0
   1400023f9:	mov    r8,QWORD PTR [rip+0x3bd08]        # 0x14003e108
   140002400:	jmp    0x140002405
   140002402:	xor    r10d,r10d
   140002405:	movzx  r11d,WORD PTR [rip+0x3ca3f]        # 0x14003ee4c
   14000240d:	add    r12w,0x2
   140002412:	cmp    r12w,WORD PTR [rip+0x3bbae]        # 0x14003dfc8
   14000241a:	jl     0x1400020e0
   140002420:	movzx  eax,r10w
   140002424:	mov    rbx,QWORD PTR [rsp+0x58]
   140002429:	mov    rbp,QWORD PTR [rsp+0x60]
   14000242e:	mov    rsi,QWORD PTR [rsp+0x68]
   140002433:	add    rsp,0x20
   140002437:	pop    r15
   140002439:	pop    r14
   14000243b:	pop    r13
   14000243d:	pop    r12
   14000243f:	pop    rdi
   140002440:	ret    
   140002441:	mov    eax,0xfffffffd
   140002446:	jmp    0x140002424
   140002448:	int3   
   140002449:	int3   
   14000244a:	int3   
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	mov    rax,rsp
   140002453:	push   rbp
   140002454:	push   r12
   140002456:	push   r13
   140002458:	push   r14
   14000245a:	push   r15
   14000245c:	lea    rbp,[rax-0x438]
   140002463:	sub    rsp,0x510
   14000246a:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140002473:	mov    QWORD PTR [rax+0x8],rbx
   140002477:	mov    QWORD PTR [rax+0x18],rsi
   14000247b:	mov    QWORD PTR [rax+0x20],rdi
   14000247f:	mov    rax,QWORD PTR [rip+0x39b7a]        # 0x14003c000
   140002486:	xor    rax,rsp
   140002489:	mov    QWORD PTR [rbp+0x400],rax
   140002490:	mov    r13,rdx
   140002493:	mov    QWORD PTR [rsp+0x50],rdx
   140002498:	mov    rax,QWORD PTR [rip+0x3e041]        # 0x1400404e0
   14000249f:	mov    QWORD PTR [rsp+0x58],rax
   1400024a4:	mov    rdi,QWORD PTR [rip+0x3bc55]        # 0x14003e100
   1400024ab:	mov    QWORD PTR [rsp+0x68],rdi
   1400024b0:	xor    esi,esi
   1400024b2:	movzx  r15d,si
   1400024b6:	movzx  eax,si
   1400024b9:	mov    DWORD PTR [rsp+0x3c],eax
   1400024bd:	mov    ecx,esi
   1400024bf:	lea    r14,[rip+0xffffffffffffdb3a]        # 0x140000000
   1400024c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400024d0:	movzx  eax,BYTE PTR [rcx+r14*1+0x31370]
   1400024d9:	mov    BYTE PTR [rbp+rcx*1+0xc0],al
   1400024e0:	lea    rcx,[rcx+0x1]
   1400024e4:	test   al,al
   1400024e6:	jne    0x1400024d0
   1400024e8:	mov    ecx,0x10
   1400024ed:	call   QWORD PTR [rip+0x2d4a5]        # 0x14002f998
   1400024f3:	mov    rbx,rax
   1400024f6:	mov    QWORD PTR [rsp+0x48],rax
   1400024fb:	test   rax,rax
   1400024fe:	je     0x140002539
   140002500:	mov    WORD PTR [rax],si
   140002503:	mov    QWORD PTR [rax+0x8],rsi
   140002507:	lea    rcx,[rbp+0xc0]
   14000250e:	call   QWORD PTR [rip+0x2cd6c]        # 0x14002f280
   140002514:	test   eax,eax
   140002516:	jle    0x14000253c
   140002518:	inc    eax
   14000251a:	movsxd rcx,eax
   14000251d:	call   QWORD PTR [rip+0x2d475]        # 0x14002f998
   140002523:	mov    QWORD PTR [rbx+0x8],rax
   140002527:	lea    rdx,[rbp+0xc0]
   14000252e:	mov    rcx,rax
   140002531:	call   QWORD PTR [rip+0x2cd21]        # 0x14002f258
   140002537:	jmp    0x14000253c
   140002539:	mov    rbx,rsi
   14000253c:	mov    edx,0xa
   140002541:	mov    rcx,rbx
   140002544:	call   0x14002ab70
   140002549:	mov    r12,rax
   14000254c:	mov    QWORD PTR [rsp+0x48],rax
   140002551:	test   rax,rax
   140002554:	jne    0x14000255e
   140002556:	or     eax,0xffffffff
   140002559:	jmp    0x1400046ea
   14000255e:	test   rbx,rbx
   140002561:	je     0x14000257b
   140002563:	mov    rcx,QWORD PTR [rbx+0x8]
   140002567:	test   rcx,rcx
   14000256a:	je     0x140002572
   14000256c:	call   QWORD PTR [rip+0x2d606]        # 0x14002fb78
   140002572:	mov    rcx,rbx
   140002575:	call   QWORD PTR [rip+0x2d5fd]        # 0x14002fb78
   14000257b:	xor    ecx,ecx
   14000257d:	mov    WORD PTR [rip+0x3b960],cx        # 0x14003dee4
   140002584:	movzx  eax,WORD PTR [rip+0x3dc25]        # 0x1400401b0
   14000258b:	mov    WORD PTR [rsp+0x34],ax
   140002590:	mov    esi,0x106
   140002595:	lea    r9d,[rcx+0x1]
   140002599:	mov    rbx,QWORD PTR [rsp+0x58]
   14000259e:	cmp    ax,WORD PTR [rbx+0x80]
   1400025a5:	jge    0x140003bf9
   1400025ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400025b0:	mov    WORD PTR [rip+0x3dbfc],r9w        # 0x1400401b4
   1400025b8:	mov    WORD PTR [rip+0x3dc19],cx        # 0x1400401d8
   1400025bf:	movzx  r13d,cx
   1400025c3:	mov    DWORD PTR [rsp+0x30],r13d
   1400025c8:	mov    WORD PTR [rsp+0x38],cx
   1400025cd:	mov    WORD PTR [rip+0x3bb44],ax        # 0x14003e118
   1400025d4:	movsx  edx,ax
   1400025d7:	movzx  eax,WORD PTR [rbx+0x82]
   1400025de:	imul   edx,eax
   1400025e1:	add    edx,DWORD PTR [rbx+0x28]
   1400025e4:	mov    rcx,QWORD PTR [rip+0x3dbdd]        # 0x1400401c8
   1400025eb:	xor    r9d,r9d
   1400025ee:	xor    r8d,r8d
   1400025f1:	mov    rcx,QWORD PTR [rcx]
   1400025f4:	call   QWORD PTR [rip+0x2cc1e]        # 0x14002f218
   1400025fa:	mov    ebx,eax
   1400025fc:	inc    eax
   1400025fe:	test   eax,0xfffffffe
   140002603:	jne    0x140002635
   140002605:	call   QWORD PTR [rip+0x2cb55]        # 0x14002f160
   14000260b:	cmp    eax,0x58
   14000260e:	jae    0x14000261c
   140002610:	mov    eax,eax
   140002612:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   14000261a:	jmp    0x14000261e
   14000261c:	mov    ecx,esi
   14000261e:	mov    DWORD PTR [rip+0x40a94],ecx        # 0x1400430b8
   140002624:	mov    DWORD PTR [rip+0x40e9a],0x2        # 0x1400434c8
   14000262e:	mov    BYTE PTR [rip+0x40d8b],0x0        # 0x1400433c0
   140002635:	cmp    ebx,0xffffffff
   140002638:	je     0x140002556
   14000263e:	mov    rbx,QWORD PTR [rsp+0x58]
   140002643:	movzx  r8d,WORD PTR [rbx+0x82]
   14000264b:	mov    rcx,QWORD PTR [rip+0x3db76]        # 0x1400401c8
   140002652:	xor    edx,edx
   140002654:	mov    QWORD PTR [rsp+0x20],rdx
   140002659:	lea    r9,[rsp+0x60]
   14000265e:	mov    rdx,rdi
   140002661:	mov    rcx,QWORD PTR [rcx]
   140002664:	call   QWORD PTR [rip+0x2cb9e]        # 0x14002f208
   14000266a:	test   eax,eax
   14000266c:	jne    0x14000269e
   14000266e:	call   QWORD PTR [rip+0x2caec]        # 0x14002f160
   140002674:	cmp    eax,0x58
   140002677:	jae    0x140002685
   140002679:	mov    eax,eax
   14000267b:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140002683:	jmp    0x140002687
   140002685:	mov    ecx,esi
   140002687:	mov    DWORD PTR [rip+0x40a2b],ecx        # 0x1400430b8
   14000268d:	mov    DWORD PTR [rip+0x40e31],0x2        # 0x1400434c8
   140002697:	mov    BYTE PTR [rip+0x40d22],0x0        # 0x1400433c0
   14000269e:	movzx  eax,WORD PTR [rbx+0x82]
   1400026a5:	cmp    DWORD PTR [rsp+0x60],eax
   1400026a9:	jne    0x140002556
   1400026af:	movzx  esi,WORD PTR [rip+0x3db22]        # 0x1400401d8
   1400026b6:	add    eax,eax
   1400026b8:	mov    DWORD PTR [rsp+0x40],eax
   1400026bc:	movzx  r12d,WORD PTR [rip+0x3daf0]        # 0x1400401b4
   1400026c4:	mov    r14,QWORD PTR [rip+0x3db1d]        # 0x1400401e8
   1400026cb:	cmp    r12w,ax
   1400026cf:	jge    0x140003bae
   1400026d5:	mov    r9,QWORD PTR [rip+0x3ba34]        # 0x14003e110
   1400026dc:	nop    DWORD PTR [rax+0x0]
   1400026e0:	movzx  eax,r12w
   1400026e4:	sar    ax,1
   1400026e7:	movsx  ecx,r12w
   1400026eb:	and    ecx,0x80000001
   1400026f1:	jge    0x1400026fa
   1400026f3:	dec    ecx
   1400026f5:	or     ecx,0xfffffffe
   1400026f8:	inc    ecx
   1400026fa:	movsx  rax,ax
   1400026fe:	lea    r8,[rax+rdi*1]
   140002702:	movzx  edx,BYTE PTR [r8]
   140002706:	movzx  eax,dl
   140002709:	test   ecx,ecx
   14000270b:	jne    0x140002712
   14000270d:	shr    al,0x4
   140002710:	jmp    0x140002714
   140002712:	and    al,0xf
   140002714:	cmp    al,0xd
   140002716:	jae    0x140003ad2
   14000271c:	test   r13w,r13w
   140002720:	jne    0x140003adc
   140002726:	test   al,al
   140002728:	jne    0x140003ab7
   14000272e:	movsx  rax,si
   140002732:	cmp    rax,0x100
   140002738:	jae    0x140003be7
   14000273e:	mov    BYTE PTR [rbp+rax*1+0x160],r13b
   140002746:	mov    WORD PTR [rip+0x3d8bb],si        # 0x140040008
   14000274d:	lea    r9,[rsp+0x38]
   140002752:	movzx  r8d,r12w
   140002756:	mov    rdx,QWORD PTR [rip+0x3b9a3]        # 0x14003e100
   14000275d:	mov    rcx,rbx
   140002760:	call   0x140006f70
   140002765:	lea    r12d,[rax+0x1]
   140002769:	movzx  ecx,r12w
   14000276d:	sar    cx,1
   140002770:	movsx  eax,r12w
   140002774:	and    eax,0x80000001
   140002779:	jge    0x140002782
   14000277b:	dec    eax
   14000277d:	or     eax,0xfffffffe
   140002780:	inc    eax
   140002782:	test   eax,eax
   140002784:	movsx  rax,cx
   140002788:	movzx  ecx,BYTE PTR [rax+rdi*1]
   14000278c:	jne    0x140002793
   14000278e:	shr    cl,0x4
   140002791:	jmp    0x140002796
   140002793:	and    cl,0xf
   140002796:	movzx  esi,cl
   140002799:	lea    eax,[r12+0x1]
   14000279e:	mov    WORD PTR [rip+0x3da0f],ax        # 0x1400401b4
   1400027a5:	mov    WORD PTR [rip+0x3da2c],si        # 0x1400401d8
   1400027ac:	movzx  eax,WORD PTR [rsp+0x38]
   1400027b1:	mov    WORD PTR [rip+0x3da00],ax        # 0x1400401b8
   1400027b8:	mov    rcx,rbx
   1400027bb:	call   0x140006e60
   1400027c0:	cmp    ax,0x1
   1400027c4:	jne    0x140002556
   1400027ca:	lea    r8,[rbp+0x330]
   1400027d1:	lea    rdx,[rbp+0x160]
   1400027d8:	call   0x1400073e0
   1400027dd:	cmp    r15w,WORD PTR [rip+0x3b7df]        # 0x14003dfc4
   1400027e5:	jge    0x140003597
   1400027eb:	mov    r14,QWORD PTR [rip+0x3d9f6]        # 0x1400401e8
   1400027f2:	movsx  rdi,r15w
   1400027f6:	shl    rdi,0x4
   1400027fa:	mov    rdx,QWORD PTR [rdi+r14*1]
   1400027fe:	lea    rcx,[rbp+0x330]
   140002805:	call   0x140007550
   14000280a:	test   ax,ax
   14000280d:	js     0x14000357c
   140002813:	movzx  r8d,WORD PTR [rdi+r14*1+0x8]
   140002819:	mov    WORD PTR [rip+0x3dad9],r8w        # 0x1400402fa
   140002821:	mov    edx,0x3fff
   140002826:	mov    DWORD PTR [rip+0x3dad0],edx        # 0x1400402fc
   14000282c:	xor    ecx,ecx
   14000282e:	movzx  ebx,WORD PTR [rdi+r14*1+0xa]
   140002834:	mov    WORD PTR [rip+0x3dac5],bx        # 0x140040300
   14000283b:	mov    WORD PTR [rip+0x3dac0],cx        # 0x140040302
   140002842:	test   ax,ax
   140002845:	jle    0x140002e80
   14000284b:	mov    eax,0x1
   140002850:	mov    WORD PTR [rip+0x3b68d],ax        # 0x14003dee4
   140002857:	mov    rcx,QWORD PTR [rdi+r14*1]
   14000285b:	lea    rdx,[rbp-0x40]
   14000285f:	nop
   140002860:	movzx  eax,BYTE PTR [rcx]
   140002863:	test   al,al
   140002865:	jne    0x14000286c
   140002867:	cmp    BYTE PTR [rcx+0x1],al
   14000286a:	je     0x14000287f
   14000286c:	mov    BYTE PTR [rdx],al
   14000286e:	movzx  eax,BYTE PTR [rcx+0x1]
   140002872:	mov    BYTE PTR [rdx+0x1],al
   140002875:	add    rdx,0x2
   140002879:	add    rcx,0x2
   14000287d:	jmp    0x140002860
   14000287f:	movzx  eax,BYTE PTR [rcx]
   140002882:	mov    BYTE PTR [rdx],al
   140002884:	movzx  eax,BYTE PTR [rcx+0x1]
   140002888:	mov    BYTE PTR [rdx+0x1],al
   14000288b:	lea    rdx,[rip+0x39796]        # 0x14003c028
   140002892:	lea    rcx,[rbp-0x40]
   140002896:	cmp    BYTE PTR [rcx],0x0
   140002899:	jne    0x1400028a1
   14000289b:	cmp    BYTE PTR [rcx+0x1],0x0
   14000289f:	je     0x1400028a7
   1400028a1:	add    rcx,0x2
   1400028a5:	jmp    0x140002896
   1400028a7:	movzx  eax,BYTE PTR [rdx]
   1400028aa:	test   al,al
   1400028ac:	jne    0x1400028b3
   1400028ae:	cmp    BYTE PTR [rdx+0x1],al
   1400028b1:	je     0x1400028c6
   1400028b3:	mov    BYTE PTR [rcx],al
   1400028b5:	movzx  eax,BYTE PTR [rdx+0x1]
   1400028b9:	mov    BYTE PTR [rcx+0x1],al
   1400028bc:	add    rcx,0x2
   1400028c0:	add    rdx,0x2
   1400028c4:	jmp    0x1400028a7
   1400028c6:	mov    WORD PTR [rcx],0x0
   1400028cb:	lea    rdx,[rsp+0x78]
   1400028d0:	movzx  ecx,r8w
   1400028d4:	call   0x14002b170
   1400028d9:	lea    rdx,[rbp-0x70]
   1400028dd:	lea    r8,[rsp+0x78]
   1400028e2:	movzx  eax,BYTE PTR [rsp+0x78]
   1400028e7:	test   al,al
   1400028e9:	je     0x140002929
   1400028eb:	lea    r13,[rip+0xffffffffffffd70e]        # 0x140000000
   1400028f2:	cmp    al,0x7f
   1400028f4:	ja     0x1400028fb
   1400028f6:	movzx  ecx,al
   1400028f9:	jmp    0x140002912
   1400028fb:	cmp    al,0xfe
   1400028fd:	ja     0x14000290d
   1400028ff:	movzx  eax,al
   140002902:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   14000290b:	jmp    0x140002912
   14000290d:	mov    ecx,0x20
   140002912:	mov    WORD PTR [rdx],cx
   140002915:	add    rdx,0x2
   140002919:	inc    r8
   14000291c:	movzx  eax,BYTE PTR [r8]
   140002920:	test   al,al
   140002922:	jne    0x1400028f2
   140002924:	mov    r13d,DWORD PTR [rsp+0x30]
   140002929:	xor    r14d,r14d
   14000292c:	mov    WORD PTR [rdx],r14w
   140002930:	lea    rdx,[rbp-0x70]
   140002934:	lea    rcx,[rbp-0x40]
   140002938:	cmp    BYTE PTR [rcx],r14b
   14000293b:	jne    0x140002943
   14000293d:	cmp    BYTE PTR [rcx+0x1],r14b
   140002941:	je     0x140002950
   140002943:	add    rcx,0x2
   140002947:	jmp    0x140002938
   140002949:	nop    DWORD PTR [rax+0x0]
   140002950:	movzx  eax,BYTE PTR [rdx]
   140002953:	test   al,al
   140002955:	jne    0x14000295d
   140002957:	cmp    BYTE PTR [rdx+0x1],r14b
   14000295b:	je     0x140002970
   14000295d:	mov    BYTE PTR [rcx],al
   14000295f:	movzx  eax,BYTE PTR [rdx+0x1]
   140002963:	mov    BYTE PTR [rcx+0x1],al
   140002966:	add    rcx,0x2
   14000296a:	add    rdx,0x2
   14000296e:	jmp    0x140002950
   140002970:	mov    WORD PTR [rcx],r14w
   140002974:	lea    rdx,[rip+0x396ad]        # 0x14003c028
   14000297b:	lea    rcx,[rbp-0x40]
   14000297f:	nop
   140002980:	cmp    BYTE PTR [rcx],r14b
   140002983:	jne    0x14000298b
   140002985:	cmp    BYTE PTR [rcx+0x1],r14b
   140002989:	je     0x140002991
   14000298b:	add    rcx,0x2
   14000298f:	jmp    0x140002980
   140002991:	movzx  eax,BYTE PTR [rdx]
   140002994:	test   al,al
   140002996:	jne    0x14000299e
   140002998:	cmp    BYTE PTR [rdx+0x1],r14b
   14000299c:	je     0x1400029b1
   14000299e:	mov    BYTE PTR [rcx],al
   1400029a0:	movzx  eax,BYTE PTR [rdx+0x1]
   1400029a4:	mov    BYTE PTR [rcx+0x1],al
   1400029a7:	add    rcx,0x2
   1400029ab:	add    rdx,0x2
   1400029af:	jmp    0x140002991
   1400029b1:	mov    WORD PTR [rcx],r14w
   1400029b5:	mov    ecx,0x3fff
   1400029ba:	lea    rdx,[rsp+0x78]
   1400029bf:	call   0x14002b170
   1400029c4:	lea    rdx,[rbp-0x70]
   1400029c8:	lea    r8,[rsp+0x78]
   1400029cd:	movzx  eax,BYTE PTR [rsp+0x78]
   1400029d2:	test   al,al
   1400029d4:	je     0x140002a17
   1400029d6:	lea    r13,[rip+0xffffffffffffd623]        # 0x140000000
   1400029dd:	nop    DWORD PTR [rax]
   1400029e0:	cmp    al,0x7f
   1400029e2:	ja     0x1400029e9
   1400029e4:	movzx  ecx,al
   1400029e7:	jmp    0x140002a00
   1400029e9:	cmp    al,0xfe
   1400029eb:	ja     0x1400029fb
   1400029ed:	movzx  eax,al
   1400029f0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400029f9:	jmp    0x140002a00
   1400029fb:	mov    ecx,0x20
   140002a00:	mov    WORD PTR [rdx],cx
   140002a03:	add    rdx,0x2
   140002a07:	inc    r8
   140002a0a:	movzx  eax,BYTE PTR [r8]
   140002a0e:	test   al,al
   140002a10:	jne    0x1400029e0
   140002a12:	mov    r13d,DWORD PTR [rsp+0x30]
   140002a17:	mov    WORD PTR [rdx],r14w
   140002a1b:	lea    rdx,[rbp-0x70]
   140002a1f:	lea    rcx,[rbp-0x40]
   140002a23:	cmp    BYTE PTR [rcx],r14b
   140002a26:	jne    0x140002a2e
   140002a28:	cmp    BYTE PTR [rcx+0x1],r14b
   140002a2c:	je     0x140002a34
   140002a2e:	add    rcx,0x2
   140002a32:	jmp    0x140002a23
   140002a34:	movzx  eax,BYTE PTR [rdx]
   140002a37:	test   al,al
   140002a39:	jne    0x140002a41
   140002a3b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002a3f:	je     0x140002a54
   140002a41:	mov    BYTE PTR [rcx],al
   140002a43:	movzx  eax,BYTE PTR [rdx+0x1]
   140002a47:	mov    BYTE PTR [rcx+0x1],al
   140002a4a:	add    rcx,0x2
   140002a4e:	add    rdx,0x2
   140002a52:	jmp    0x140002a34
   140002a54:	mov    WORD PTR [rcx],r14w
   140002a58:	lea    rdx,[rip+0x395c9]        # 0x14003c028
   140002a5f:	lea    rcx,[rbp-0x40]
   140002a63:	cmp    BYTE PTR [rcx],r14b
   140002a66:	jne    0x140002a6e
   140002a68:	cmp    BYTE PTR [rcx+0x1],r14b
   140002a6c:	je     0x140002a74
   140002a6e:	add    rcx,0x2
   140002a72:	jmp    0x140002a63
   140002a74:	movzx  eax,BYTE PTR [rdx]
   140002a77:	test   al,al
   140002a79:	jne    0x140002a81
   140002a7b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002a7f:	je     0x140002a94
   140002a81:	mov    BYTE PTR [rcx],al
   140002a83:	movzx  eax,BYTE PTR [rdx+0x1]
   140002a87:	mov    BYTE PTR [rcx+0x1],al
   140002a8a:	add    rcx,0x2
   140002a8e:	add    rdx,0x2
   140002a92:	jmp    0x140002a74
   140002a94:	mov    WORD PTR [rcx],r14w
   140002a98:	xor    ecx,ecx
   140002a9a:	lea    rdx,[rsp+0x78]
   140002a9f:	call   0x14002b170
   140002aa4:	lea    rdx,[rbp-0x70]
   140002aa8:	lea    r8,[rsp+0x78]
   140002aad:	movzx  eax,BYTE PTR [rsp+0x78]
   140002ab2:	test   al,al
   140002ab4:	je     0x140002af7
   140002ab6:	lea    r13,[rip+0xffffffffffffd543]        # 0x140000000
   140002abd:	nop    DWORD PTR [rax]
   140002ac0:	cmp    al,0x7f
   140002ac2:	ja     0x140002ac9
   140002ac4:	movzx  ecx,al
   140002ac7:	jmp    0x140002ae0
   140002ac9:	cmp    al,0xfe
   140002acb:	ja     0x140002adb
   140002acd:	movzx  eax,al
   140002ad0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140002ad9:	jmp    0x140002ae0
   140002adb:	mov    ecx,0x20
   140002ae0:	mov    WORD PTR [rdx],cx
   140002ae3:	add    rdx,0x2
   140002ae7:	inc    r8
   140002aea:	movzx  eax,BYTE PTR [r8]
   140002aee:	test   al,al
   140002af0:	jne    0x140002ac0
   140002af2:	mov    r13d,DWORD PTR [rsp+0x30]
   140002af7:	mov    WORD PTR [rdx],r14w
   140002afb:	lea    rdx,[rbp-0x70]
   140002aff:	lea    rcx,[rbp-0x40]
   140002b03:	cmp    BYTE PTR [rcx],r14b
   140002b06:	jne    0x140002b0e
   140002b08:	cmp    BYTE PTR [rcx+0x1],r14b
   140002b0c:	je     0x140002b14
   140002b0e:	add    rcx,0x2
   140002b12:	jmp    0x140002b03
   140002b14:	movzx  eax,BYTE PTR [rdx]
   140002b17:	test   al,al
   140002b19:	jne    0x140002b21
   140002b1b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002b1f:	je     0x140002b34
   140002b21:	mov    BYTE PTR [rcx],al
   140002b23:	movzx  eax,BYTE PTR [rdx+0x1]
   140002b27:	mov    BYTE PTR [rcx+0x1],al
   140002b2a:	add    rcx,0x2
   140002b2e:	add    rdx,0x2
   140002b32:	jmp    0x140002b14
   140002b34:	mov    WORD PTR [rcx],r14w
   140002b38:	lea    rdx,[rip+0x394e9]        # 0x14003c028
   140002b3f:	lea    rcx,[rbp-0x40]
   140002b43:	cmp    BYTE PTR [rcx],r14b
   140002b46:	jne    0x140002b4e
   140002b48:	cmp    BYTE PTR [rcx+0x1],r14b
   140002b4c:	je     0x140002b54
   140002b4e:	add    rcx,0x2
   140002b52:	jmp    0x140002b43
   140002b54:	movzx  eax,BYTE PTR [rdx]
   140002b57:	test   al,al
   140002b59:	jne    0x140002b61
   140002b5b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002b5f:	je     0x140002b74
   140002b61:	mov    BYTE PTR [rcx],al
   140002b63:	movzx  eax,BYTE PTR [rdx+0x1]
   140002b67:	mov    BYTE PTR [rcx+0x1],al
   140002b6a:	add    rcx,0x2
   140002b6e:	add    rdx,0x2
   140002b72:	jmp    0x140002b54
   140002b74:	mov    WORD PTR [rcx],r14w
   140002b78:	lea    rdx,[rsp+0x78]
   140002b7d:	movzx  ecx,bx
   140002b80:	call   0x14002b170
   140002b85:	lea    rdx,[rbp-0x70]
   140002b89:	lea    r8,[rsp+0x78]
   140002b8e:	movzx  eax,BYTE PTR [rsp+0x78]
   140002b93:	test   al,al
   140002b95:	je     0x140002bd7
   140002b97:	lea    r13,[rip+0xffffffffffffd462]        # 0x140000000
   140002b9e:	xchg   ax,ax
   140002ba0:	cmp    al,0x7f
   140002ba2:	ja     0x140002ba9
   140002ba4:	movzx  ecx,al
   140002ba7:	jmp    0x140002bc0
   140002ba9:	cmp    al,0xfe
   140002bab:	ja     0x140002bbb
   140002bad:	movzx  eax,al
   140002bb0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140002bb9:	jmp    0x140002bc0
   140002bbb:	mov    ecx,0x20
   140002bc0:	mov    WORD PTR [rdx],cx
   140002bc3:	add    rdx,0x2
   140002bc7:	inc    r8
   140002bca:	movzx  eax,BYTE PTR [r8]
   140002bce:	test   al,al
   140002bd0:	jne    0x140002ba0
   140002bd2:	mov    r13d,DWORD PTR [rsp+0x30]
   140002bd7:	mov    WORD PTR [rdx],r14w
   140002bdb:	lea    rdx,[rbp-0x70]
   140002bdf:	lea    rcx,[rbp-0x40]
   140002be3:	cmp    BYTE PTR [rcx],r14b
   140002be6:	jne    0x140002bee
   140002be8:	cmp    BYTE PTR [rcx+0x1],r14b
   140002bec:	je     0x140002bf4
   140002bee:	add    rcx,0x2
   140002bf2:	jmp    0x140002be3
   140002bf4:	movzx  eax,BYTE PTR [rdx]
   140002bf7:	test   al,al
   140002bf9:	jne    0x140002c01
   140002bfb:	cmp    BYTE PTR [rdx+0x1],r14b
   140002bff:	je     0x140002c14
   140002c01:	mov    BYTE PTR [rcx],al
   140002c03:	movzx  eax,BYTE PTR [rdx+0x1]
   140002c07:	mov    BYTE PTR [rcx+0x1],al
   140002c0a:	add    rcx,0x2
   140002c0e:	add    rdx,0x2
   140002c12:	jmp    0x140002bf4
   140002c14:	mov    WORD PTR [rcx],r14w
   140002c18:	lea    rdx,[rip+0x39409]        # 0x14003c028
   140002c1f:	lea    rcx,[rbp-0x40]
   140002c23:	cmp    BYTE PTR [rcx],r14b
   140002c26:	jne    0x140002c2e
   140002c28:	cmp    BYTE PTR [rcx+0x1],r14b
   140002c2c:	je     0x140002c34
   140002c2e:	add    rcx,0x2
   140002c32:	jmp    0x140002c23
   140002c34:	movzx  eax,BYTE PTR [rdx]
   140002c37:	test   al,al
   140002c39:	jne    0x140002c41
   140002c3b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002c3f:	je     0x140002c54
   140002c41:	mov    BYTE PTR [rcx],al
   140002c43:	movzx  eax,BYTE PTR [rdx+0x1]
   140002c47:	mov    BYTE PTR [rcx+0x1],al
   140002c4a:	add    rcx,0x2
   140002c4e:	add    rdx,0x2
   140002c52:	jmp    0x140002c34
   140002c54:	mov    WORD PTR [rcx],r14w
   140002c58:	xor    ecx,ecx
   140002c5a:	lea    rdx,[rsp+0x78]
   140002c5f:	call   0x14002b170
   140002c64:	lea    rdx,[rbp-0x70]
   140002c68:	lea    r8,[rsp+0x78]
   140002c6d:	movzx  eax,BYTE PTR [rsp+0x78]
   140002c72:	test   al,al
   140002c74:	je     0x140002cb7
   140002c76:	lea    r13,[rip+0xffffffffffffd383]        # 0x140000000
   140002c7d:	nop    DWORD PTR [rax]
   140002c80:	cmp    al,0x7f
   140002c82:	ja     0x140002c89
   140002c84:	movzx  ecx,al
   140002c87:	jmp    0x140002ca0
   140002c89:	cmp    al,0xfe
   140002c8b:	ja     0x140002c9b
   140002c8d:	movzx  eax,al
   140002c90:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140002c99:	jmp    0x140002ca0
   140002c9b:	mov    ecx,0x20
   140002ca0:	mov    WORD PTR [rdx],cx
   140002ca3:	add    rdx,0x2
   140002ca7:	inc    r8
   140002caa:	movzx  eax,BYTE PTR [r8]
   140002cae:	test   al,al
   140002cb0:	jne    0x140002c80
   140002cb2:	mov    r13d,DWORD PTR [rsp+0x30]
   140002cb7:	mov    WORD PTR [rdx],r14w
   140002cbb:	lea    rdx,[rbp-0x70]
   140002cbf:	lea    rcx,[rbp-0x40]
   140002cc3:	cmp    BYTE PTR [rcx],r14b
   140002cc6:	jne    0x140002cce
   140002cc8:	cmp    BYTE PTR [rcx+0x1],r14b
   140002ccc:	je     0x140002cd4
   140002cce:	add    rcx,0x2
   140002cd2:	jmp    0x140002cc3
   140002cd4:	movzx  eax,BYTE PTR [rdx]
   140002cd7:	test   al,al
   140002cd9:	jne    0x140002ce1
   140002cdb:	cmp    BYTE PTR [rdx+0x1],r14b
   140002cdf:	je     0x140002cf4
   140002ce1:	mov    BYTE PTR [rcx],al
   140002ce3:	movzx  eax,BYTE PTR [rdx+0x1]
   140002ce7:	mov    BYTE PTR [rcx+0x1],al
   140002cea:	add    rcx,0x2
   140002cee:	add    rdx,0x2
   140002cf2:	jmp    0x140002cd4
   140002cf4:	mov    WORD PTR [rcx],r14w
   140002cf8:	lea    rdx,[rip+0x39321]        # 0x14003c020
   140002cff:	lea    rcx,[rbp-0x40]
   140002d03:	cmp    BYTE PTR [rcx],r14b
   140002d06:	jne    0x140002d0e
   140002d08:	cmp    BYTE PTR [rcx+0x1],r14b
   140002d0c:	je     0x140002d14
   140002d0e:	add    rcx,0x2
   140002d12:	jmp    0x140002d03
   140002d14:	movzx  eax,BYTE PTR [rdx]
   140002d17:	test   al,al
   140002d19:	jne    0x140002d21
   140002d1b:	cmp    BYTE PTR [rdx+0x1],r14b
   140002d1f:	je     0x140002d34
   140002d21:	mov    BYTE PTR [rcx],al
   140002d23:	movzx  eax,BYTE PTR [rdx+0x1]
   140002d27:	mov    BYTE PTR [rcx+0x1],al
   140002d2a:	add    rcx,0x2
   140002d2e:	add    rdx,0x2
   140002d32:	jmp    0x140002d14
   140002d34:	mov    WORD PTR [rcx],r14w
   140002d38:	lea    rax,[rbp-0x40]
   140002d3c:	mov    ebx,r14d
   140002d3f:	nop
   140002d40:	cmp    BYTE PTR [rax],r14b
   140002d43:	jne    0x140002d4b
   140002d45:	cmp    BYTE PTR [rax+0x1],r14b
   140002d49:	je     0x140002d53
   140002d4b:	add    rax,0x2
   140002d4f:	inc    ebx
   140002d51:	jmp    0x140002d40
   140002d53:	add    ebx,ebx
   140002d55:	mov    r8d,ebx
   140002d58:	lea    rdx,[rbp-0x40]
   140002d5c:	mov    rcx,QWORD PTR [rsp+0x48]
   140002d61:	call   0x14002a820
   140002d66:	cmp    eax,ebx
   140002d68:	jne    0x140002556
   140002d6e:	mov    r14,QWORD PTR [rip+0x3d473]        # 0x1400401e8
   140002d75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002d80:	mov    rcx,QWORD PTR [rdi+r14*1]
   140002d84:	lea    rdx,[rbp+0xe0]
   140002d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002d90:	movzx  eax,BYTE PTR [rcx]
   140002d93:	test   al,al
   140002d95:	jne    0x140002d9c
   140002d97:	cmp    BYTE PTR [rcx+0x1],al
   140002d9a:	je     0x140002daf
   140002d9c:	mov    BYTE PTR [rdx],al
   140002d9e:	movzx  eax,BYTE PTR [rcx+0x1]
   140002da2:	mov    BYTE PTR [rdx+0x1],al
   140002da5:	add    rdx,0x2
   140002da9:	add    rcx,0x2
   140002dad:	jmp    0x140002d90
   140002daf:	movzx  eax,BYTE PTR [rcx]
   140002db2:	mov    BYTE PTR [rdx],al
   140002db4:	movzx  eax,BYTE PTR [rcx+0x1]
   140002db8:	mov    BYTE PTR [rdx+0x1],al
   140002dbb:	inc    r15w
   140002dbf:	movzx  ecx,r15w
   140002dc3:	call   0x14001bdb0
   140002dc8:	test   ax,ax
   140002dcb:	je     0x140002e26
   140002dcd:	movzx  r8d,WORD PTR [rip+0x3c087]        # 0x14003ee5c
   140002dd5:	mov    WORD PTR [rip+0x3b3c7],r8w        # 0x14003e1a4
   140002ddd:	movzx  ecx,WORD PTR [rip+0x3c07c]        # 0x14003ee60
   140002de4:	imul   ecx,r8d
   140002de8:	mov    eax,0x51eb851f
   140002ded:	imul   ecx
   140002def:	mov    ecx,edx
   140002df1:	sar    ecx,0x5
   140002df4:	mov    eax,ecx
   140002df6:	shr    eax,0x1f
   140002df9:	add    ecx,eax
   140002dfb:	add    cx,WORD PTR [rip+0x3c046]        # 0x14003ee48
   140002e02:	mov    WORD PTR [rip+0x3c047],cx        # 0x14003ee50
   140002e09:	lea    rdx,[rip+0x3b3a0]        # 0x14003e1b0
   140002e10:	call   QWORD PTR [rip+0x3ec92]        # 0x140041aa8
   140002e16:	test   ax,ax
   140002e19:	jne    0x140003bdd
   140002e1f:	mov    r14,QWORD PTR [rip+0x3d3c2]        # 0x1400401e8
   140002e26:	cmp    r15w,WORD PTR [rip+0x3b196]        # 0x14003dfc4
   140002e2e:	jge    0x14000357c
   140002e34:	movsx  rdi,r15w
   140002e38:	shl    rdi,0x4
   140002e3c:	mov    rdx,QWORD PTR [rdi+r14*1]
   140002e40:	lea    rcx,[rbp+0xe0]
   140002e47:	call   0x140007550
   140002e4c:	test   ax,ax
   140002e4f:	jne    0x1400027f2
   140002e55:	movzx  eax,WORD PTR [rdi+r14*1+0x8]
   140002e5b:	cmp    WORD PTR [rip+0x3d498],ax        # 0x1400402fa
   140002e62:	jne    0x1400027f2
   140002e68:	movzx  eax,WORD PTR [rdi+r14*1+0xa]
   140002e6e:	cmp    WORD PTR [rip+0x3d48b],ax        # 0x140040300
   140002e75:	je     0x140002d80
   140002e7b:	jmp    0x1400027f2
   140002e80:	cmp    r8w,WORD PTR [rip+0x3d468]        # 0x1400402f0
   140002e88:	jne    0x140002f36
   140002e8e:	cmp    bx,WORD PTR [rip+0x3d461]        # 0x1400402f6
   140002e95:	jne    0x140002f36
   140002e9b:	mov    WORD PTR [rsp+0x20],bx
   140002ea0:	movzx  r9d,r8w
   140002ea4:	lea    rdx,[rbp+0x260]
   140002eab:	mov    rcx,QWORD PTR [rdi+r14*1]
   140002eaf:	call   0x14000ab90
   140002eb4:	lea    rax,[rbp+0x260]
   140002ebb:	xor    edx,edx
   140002ebd:	mov    r8d,edx
   140002ec0:	cmp    BYTE PTR [rax],dl
   140002ec2:	jne    0x140002ec9
   140002ec4:	cmp    BYTE PTR [rax+0x1],dl
   140002ec7:	je     0x140002ed2
   140002ec9:	add    rax,0x2
   140002ecd:	inc    r8d
   140002ed0:	jmp    0x140002ec0
   140002ed2:	inc    r8w
   140002ed6:	add    r8w,r8w
   140002eda:	mov    WORD PTR [rip+0x3bf72],r8w        # 0x14003ee54
   140002ee2:	lea    rcx,[rbp+0x260]
   140002ee9:	mov    r9d,DWORD PTR [rip+0x3d114]        # 0x140040004
   140002ef0:	mov    edx,r9d
   140002ef3:	add    rdx,QWORD PTR [rsp+0x50]
   140002ef8:	movzx  eax,BYTE PTR [rcx]
   140002efb:	test   al,al
   140002efd:	jne    0x140002f04
   140002eff:	cmp    BYTE PTR [rcx+0x1],al
   140002f02:	je     0x140002f17
   140002f04:	mov    BYTE PTR [rdx],al
   140002f06:	movzx  eax,BYTE PTR [rcx+0x1]
   140002f0a:	mov    BYTE PTR [rdx+0x1],al
   140002f0d:	add    rdx,0x2
   140002f11:	add    rcx,0x2
   140002f15:	jmp    0x140002ef8
   140002f17:	movzx  eax,BYTE PTR [rcx]
   140002f1a:	mov    BYTE PTR [rdx],al
   140002f1c:	movzx  eax,BYTE PTR [rcx+0x1]
   140002f20:	mov    BYTE PTR [rdx+0x1],al
   140002f23:	movsx  eax,r8w
   140002f27:	add    r9d,eax
   140002f2a:	mov    DWORD PTR [rip+0x3d0d3],r9d        # 0x140040004
   140002f31:	jmp    0x140003480
   140002f36:	mov    eax,0x1
   140002f3b:	mov    WORD PTR [rip+0x3afa2],ax        # 0x14003dee4
   140002f42:	cmp    dx,WORD PTR [rip+0x3d3a9]        # 0x1400402f2
   140002f49:	jne    0x140002f58
   140002f4b:	cmp    cx,WORD PTR [rip+0x3d3a2]        # 0x1400402f4
   140002f52:	jne    0x140002f58
   140002f54:	mov    DWORD PTR [rsp+0x3c],eax
   140002f58:	mov    rcx,QWORD PTR [rdi+r14*1]
   140002f5c:	lea    rdx,[rbp-0x40]
   140002f60:	movzx  eax,BYTE PTR [rcx]
   140002f63:	test   al,al
   140002f65:	jne    0x140002f6c
   140002f67:	cmp    BYTE PTR [rcx+0x1],al
   140002f6a:	je     0x140002f7f
   140002f6c:	mov    BYTE PTR [rdx],al
   140002f6e:	movzx  eax,BYTE PTR [rcx+0x1]
   140002f72:	mov    BYTE PTR [rdx+0x1],al
   140002f75:	add    rdx,0x2
   140002f79:	add    rcx,0x2
   140002f7d:	jmp    0x140002f60
   140002f7f:	movzx  eax,BYTE PTR [rcx]
   140002f82:	mov    BYTE PTR [rdx],al
   140002f84:	movzx  eax,BYTE PTR [rcx+0x1]
   140002f88:	mov    BYTE PTR [rdx+0x1],al
   140002f8b:	lea    rdx,[rip+0x39096]        # 0x14003c028
   140002f92:	lea    rcx,[rbp-0x40]
   140002f96:	cmp    BYTE PTR [rcx],0x0
   140002f99:	jne    0x140002fa1
   140002f9b:	cmp    BYTE PTR [rcx+0x1],0x0
   140002f9f:	je     0x140002fa7
   140002fa1:	add    rcx,0x2
   140002fa5:	jmp    0x140002f96
   140002fa7:	movzx  eax,BYTE PTR [rdx]
   140002faa:	test   al,al
   140002fac:	jne    0x140002fb3
   140002fae:	cmp    BYTE PTR [rdx+0x1],al
   140002fb1:	je     0x140002fc6
   140002fb3:	mov    BYTE PTR [rcx],al
   140002fb5:	movzx  eax,BYTE PTR [rdx+0x1]
   140002fb9:	mov    BYTE PTR [rcx+0x1],al
   140002fbc:	add    rcx,0x2
   140002fc0:	add    rdx,0x2
   140002fc4:	jmp    0x140002fa7
   140002fc6:	mov    WORD PTR [rcx],0x0
   140002fcb:	lea    rdx,[rsp+0x78]
   140002fd0:	movzx  ecx,r8w
   140002fd4:	call   0x14002b170
   140002fd9:	lea    rdx,[rbp-0x70]
   140002fdd:	lea    r8,[rsp+0x78]
   140002fe2:	movzx  eax,BYTE PTR [rsp+0x78]
   140002fe7:	test   al,al
   140002fe9:	je     0x140003029
   140002feb:	lea    r13,[rip+0xffffffffffffd00e]        # 0x140000000
   140002ff2:	cmp    al,0x7f
   140002ff4:	ja     0x140002ffb
   140002ff6:	movzx  ecx,al
   140002ff9:	jmp    0x140003012
   140002ffb:	cmp    al,0xfe
   140002ffd:	ja     0x14000300d
   140002fff:	movzx  eax,al
   140003002:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   14000300b:	jmp    0x140003012
   14000300d:	mov    ecx,0x20
   140003012:	mov    WORD PTR [rdx],cx
   140003015:	add    rdx,0x2
   140003019:	inc    r8
   14000301c:	movzx  eax,BYTE PTR [r8]
   140003020:	test   al,al
   140003022:	jne    0x140002ff2
   140003024:	mov    r13d,DWORD PTR [rsp+0x30]
   140003029:	xor    r14d,r14d
   14000302c:	mov    WORD PTR [rdx],r14w
   140003030:	lea    rdx,[rbp-0x70]
   140003034:	lea    rcx,[rbp-0x40]
   140003038:	cmp    BYTE PTR [rcx],r14b
   14000303b:	jne    0x140003043
   14000303d:	cmp    BYTE PTR [rcx+0x1],r14b
   140003041:	je     0x140003050
   140003043:	add    rcx,0x2
   140003047:	jmp    0x140003038
   140003049:	nop    DWORD PTR [rax+0x0]
   140003050:	movzx  eax,BYTE PTR [rdx]
   140003053:	test   al,al
   140003055:	jne    0x14000305d
   140003057:	cmp    BYTE PTR [rdx+0x1],r14b
   14000305b:	je     0x140003070
   14000305d:	mov    BYTE PTR [rcx],al
   14000305f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003063:	mov    BYTE PTR [rcx+0x1],al
   140003066:	add    rcx,0x2
   14000306a:	add    rdx,0x2
   14000306e:	jmp    0x140003050
   140003070:	mov    WORD PTR [rcx],r14w
   140003074:	lea    rdx,[rip+0x38fad]        # 0x14003c028
   14000307b:	lea    rcx,[rbp-0x40]
   14000307f:	nop
   140003080:	cmp    BYTE PTR [rcx],r14b
   140003083:	jne    0x14000308b
   140003085:	cmp    BYTE PTR [rcx+0x1],r14b
   140003089:	je     0x140003091
   14000308b:	add    rcx,0x2
   14000308f:	jmp    0x140003080
   140003091:	movzx  eax,BYTE PTR [rdx]
   140003094:	test   al,al
   140003096:	jne    0x14000309e
   140003098:	cmp    BYTE PTR [rdx+0x1],r14b
   14000309c:	je     0x1400030b1
   14000309e:	mov    BYTE PTR [rcx],al
   1400030a0:	movzx  eax,BYTE PTR [rdx+0x1]
   1400030a4:	mov    BYTE PTR [rcx+0x1],al
   1400030a7:	add    rcx,0x2
   1400030ab:	add    rdx,0x2
   1400030af:	jmp    0x140003091
   1400030b1:	mov    WORD PTR [rcx],r14w
   1400030b5:	mov    ecx,0x3fff
   1400030ba:	lea    rdx,[rsp+0x78]
   1400030bf:	call   0x14002b170
   1400030c4:	lea    rdx,[rbp-0x70]
   1400030c8:	lea    r8,[rsp+0x78]
   1400030cd:	movzx  eax,BYTE PTR [rsp+0x78]
   1400030d2:	test   al,al
   1400030d4:	je     0x140003117
   1400030d6:	lea    r13,[rip+0xffffffffffffcf23]        # 0x140000000
   1400030dd:	nop    DWORD PTR [rax]
   1400030e0:	cmp    al,0x7f
   1400030e2:	ja     0x1400030e9
   1400030e4:	movzx  ecx,al
   1400030e7:	jmp    0x140003100
   1400030e9:	cmp    al,0xfe
   1400030eb:	ja     0x1400030fb
   1400030ed:	movzx  eax,al
   1400030f0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400030f9:	jmp    0x140003100
   1400030fb:	mov    ecx,0x20
   140003100:	mov    WORD PTR [rdx],cx
   140003103:	add    rdx,0x2
   140003107:	inc    r8
   14000310a:	movzx  eax,BYTE PTR [r8]
   14000310e:	test   al,al
   140003110:	jne    0x1400030e0
   140003112:	mov    r13d,DWORD PTR [rsp+0x30]
   140003117:	mov    WORD PTR [rdx],r14w
   14000311b:	lea    rdx,[rbp-0x70]
   14000311f:	lea    rcx,[rbp-0x40]
   140003123:	cmp    BYTE PTR [rcx],r14b
   140003126:	jne    0x14000312e
   140003128:	cmp    BYTE PTR [rcx+0x1],r14b
   14000312c:	je     0x140003134
   14000312e:	add    rcx,0x2
   140003132:	jmp    0x140003123
   140003134:	movzx  eax,BYTE PTR [rdx]
   140003137:	test   al,al
   140003139:	jne    0x140003141
   14000313b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000313f:	je     0x140003154
   140003141:	mov    BYTE PTR [rcx],al
   140003143:	movzx  eax,BYTE PTR [rdx+0x1]
   140003147:	mov    BYTE PTR [rcx+0x1],al
   14000314a:	add    rcx,0x2
   14000314e:	add    rdx,0x2
   140003152:	jmp    0x140003134
   140003154:	mov    WORD PTR [rcx],r14w
   140003158:	lea    rdx,[rip+0x38ec9]        # 0x14003c028
   14000315f:	lea    rcx,[rbp-0x40]
   140003163:	cmp    BYTE PTR [rcx],r14b
   140003166:	jne    0x14000316e
   140003168:	cmp    BYTE PTR [rcx+0x1],r14b
   14000316c:	je     0x140003174
   14000316e:	add    rcx,0x2
   140003172:	jmp    0x140003163
   140003174:	movzx  eax,BYTE PTR [rdx]
   140003177:	test   al,al
   140003179:	jne    0x140003181
   14000317b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000317f:	je     0x140003194
   140003181:	mov    BYTE PTR [rcx],al
   140003183:	movzx  eax,BYTE PTR [rdx+0x1]
   140003187:	mov    BYTE PTR [rcx+0x1],al
   14000318a:	add    rcx,0x2
   14000318e:	add    rdx,0x2
   140003192:	jmp    0x140003174
   140003194:	mov    WORD PTR [rcx],r14w
   140003198:	xor    ecx,ecx
   14000319a:	lea    rdx,[rsp+0x78]
   14000319f:	call   0x14002b170
   1400031a4:	lea    rdx,[rbp-0x70]
   1400031a8:	lea    r8,[rsp+0x78]
   1400031ad:	movzx  eax,BYTE PTR [rsp+0x78]
   1400031b2:	test   al,al
   1400031b4:	je     0x1400031f7
   1400031b6:	lea    r13,[rip+0xffffffffffffce43]        # 0x140000000
   1400031bd:	nop    DWORD PTR [rax]
   1400031c0:	cmp    al,0x7f
   1400031c2:	ja     0x1400031c9
   1400031c4:	movzx  ecx,al
   1400031c7:	jmp    0x1400031e0
   1400031c9:	cmp    al,0xfe
   1400031cb:	ja     0x1400031db
   1400031cd:	movzx  eax,al
   1400031d0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400031d9:	jmp    0x1400031e0
   1400031db:	mov    ecx,0x20
   1400031e0:	mov    WORD PTR [rdx],cx
   1400031e3:	add    rdx,0x2
   1400031e7:	inc    r8
   1400031ea:	movzx  eax,BYTE PTR [r8]
   1400031ee:	test   al,al
   1400031f0:	jne    0x1400031c0
   1400031f2:	mov    r13d,DWORD PTR [rsp+0x30]
   1400031f7:	mov    WORD PTR [rdx],r14w
   1400031fb:	lea    rdx,[rbp-0x70]
   1400031ff:	lea    rcx,[rbp-0x40]
   140003203:	cmp    BYTE PTR [rcx],r14b
   140003206:	jne    0x14000320e
   140003208:	cmp    BYTE PTR [rcx+0x1],r14b
   14000320c:	je     0x140003214
   14000320e:	add    rcx,0x2
   140003212:	jmp    0x140003203
   140003214:	movzx  eax,BYTE PTR [rdx]
   140003217:	test   al,al
   140003219:	jne    0x140003221
   14000321b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000321f:	je     0x140003234
   140003221:	mov    BYTE PTR [rcx],al
   140003223:	movzx  eax,BYTE PTR [rdx+0x1]
   140003227:	mov    BYTE PTR [rcx+0x1],al
   14000322a:	add    rcx,0x2
   14000322e:	add    rdx,0x2
   140003232:	jmp    0x140003214
   140003234:	mov    WORD PTR [rcx],r14w
   140003238:	lea    rdx,[rip+0x38de9]        # 0x14003c028
   14000323f:	lea    rcx,[rbp-0x40]
   140003243:	cmp    BYTE PTR [rcx],r14b
   140003246:	jne    0x14000324e
   140003248:	cmp    BYTE PTR [rcx+0x1],r14b
   14000324c:	je     0x140003254
   14000324e:	add    rcx,0x2
   140003252:	jmp    0x140003243
   140003254:	movzx  eax,BYTE PTR [rdx]
   140003257:	test   al,al
   140003259:	jne    0x140003261
   14000325b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000325f:	je     0x140003274
   140003261:	mov    BYTE PTR [rcx],al
   140003263:	movzx  eax,BYTE PTR [rdx+0x1]
   140003267:	mov    BYTE PTR [rcx+0x1],al
   14000326a:	add    rcx,0x2
   14000326e:	add    rdx,0x2
   140003272:	jmp    0x140003254
   140003274:	mov    WORD PTR [rcx],r14w
   140003278:	lea    rdx,[rsp+0x78]
   14000327d:	movzx  ecx,bx
   140003280:	call   0x14002b170
   140003285:	lea    rdx,[rbp-0x70]
   140003289:	lea    r8,[rsp+0x78]
   14000328e:	movzx  eax,BYTE PTR [rsp+0x78]
   140003293:	test   al,al
   140003295:	je     0x1400032d7
   140003297:	lea    r13,[rip+0xffffffffffffcd62]        # 0x140000000
   14000329e:	xchg   ax,ax
   1400032a0:	cmp    al,0x7f
   1400032a2:	ja     0x1400032a9
   1400032a4:	movzx  ecx,al
   1400032a7:	jmp    0x1400032c0
   1400032a9:	cmp    al,0xfe
   1400032ab:	ja     0x1400032bb
   1400032ad:	movzx  eax,al
   1400032b0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400032b9:	jmp    0x1400032c0
   1400032bb:	mov    ecx,0x20
   1400032c0:	mov    WORD PTR [rdx],cx
   1400032c3:	add    rdx,0x2
   1400032c7:	inc    r8
   1400032ca:	movzx  eax,BYTE PTR [r8]
   1400032ce:	test   al,al
   1400032d0:	jne    0x1400032a0
   1400032d2:	mov    r13d,DWORD PTR [rsp+0x30]
   1400032d7:	mov    WORD PTR [rdx],r14w
   1400032db:	lea    rdx,[rbp-0x70]
   1400032df:	lea    rcx,[rbp-0x40]
   1400032e3:	cmp    BYTE PTR [rcx],r14b
   1400032e6:	jne    0x1400032ee
   1400032e8:	cmp    BYTE PTR [rcx+0x1],r14b
   1400032ec:	je     0x1400032f4
   1400032ee:	add    rcx,0x2
   1400032f2:	jmp    0x1400032e3
   1400032f4:	movzx  eax,BYTE PTR [rdx]
   1400032f7:	test   al,al
   1400032f9:	jne    0x140003301
   1400032fb:	cmp    BYTE PTR [rdx+0x1],r14b
   1400032ff:	je     0x140003314
   140003301:	mov    BYTE PTR [rcx],al
   140003303:	movzx  eax,BYTE PTR [rdx+0x1]
   140003307:	mov    BYTE PTR [rcx+0x1],al
   14000330a:	add    rcx,0x2
   14000330e:	add    rdx,0x2
   140003312:	jmp    0x1400032f4
   140003314:	mov    WORD PTR [rcx],r14w
   140003318:	lea    rdx,[rip+0x38d09]        # 0x14003c028
   14000331f:	lea    rcx,[rbp-0x40]
   140003323:	cmp    BYTE PTR [rcx],r14b
   140003326:	jne    0x14000332e
   140003328:	cmp    BYTE PTR [rcx+0x1],r14b
   14000332c:	je     0x140003334
   14000332e:	add    rcx,0x2
   140003332:	jmp    0x140003323
   140003334:	movzx  eax,BYTE PTR [rdx]
   140003337:	test   al,al
   140003339:	jne    0x140003341
   14000333b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000333f:	je     0x140003354
   140003341:	mov    BYTE PTR [rcx],al
   140003343:	movzx  eax,BYTE PTR [rdx+0x1]
   140003347:	mov    BYTE PTR [rcx+0x1],al
   14000334a:	add    rcx,0x2
   14000334e:	add    rdx,0x2
   140003352:	jmp    0x140003334
   140003354:	mov    WORD PTR [rcx],r14w
   140003358:	xor    ecx,ecx
   14000335a:	lea    rdx,[rsp+0x78]
   14000335f:	call   0x14002b170
   140003364:	lea    rdx,[rbp-0x70]
   140003368:	lea    r8,[rsp+0x78]
   14000336d:	movzx  eax,BYTE PTR [rsp+0x78]
   140003372:	test   al,al
   140003374:	je     0x1400033b7
   140003376:	lea    r13,[rip+0xffffffffffffcc83]        # 0x140000000
   14000337d:	nop    DWORD PTR [rax]
   140003380:	cmp    al,0x7f
   140003382:	ja     0x140003389
   140003384:	movzx  ecx,al
   140003387:	jmp    0x1400033a0
   140003389:	cmp    al,0xfe
   14000338b:	ja     0x14000339b
   14000338d:	movzx  eax,al
   140003390:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140003399:	jmp    0x1400033a0
   14000339b:	mov    ecx,0x20
   1400033a0:	mov    WORD PTR [rdx],cx
   1400033a3:	add    rdx,0x2
   1400033a7:	inc    r8
   1400033aa:	movzx  eax,BYTE PTR [r8]
   1400033ae:	test   al,al
   1400033b0:	jne    0x140003380
   1400033b2:	mov    r13d,DWORD PTR [rsp+0x30]
   1400033b7:	mov    WORD PTR [rdx],r14w
   1400033bb:	lea    rdx,[rbp-0x70]
   1400033bf:	lea    rcx,[rbp-0x40]
   1400033c3:	cmp    BYTE PTR [rcx],r14b
   1400033c6:	jne    0x1400033ce
   1400033c8:	cmp    BYTE PTR [rcx+0x1],r14b
   1400033cc:	je     0x1400033d4
   1400033ce:	add    rcx,0x2
   1400033d2:	jmp    0x1400033c3
   1400033d4:	movzx  eax,BYTE PTR [rdx]
   1400033d7:	test   al,al
   1400033d9:	jne    0x1400033e1
   1400033db:	cmp    BYTE PTR [rdx+0x1],r14b
   1400033df:	je     0x1400033f4
   1400033e1:	mov    BYTE PTR [rcx],al
   1400033e3:	movzx  eax,BYTE PTR [rdx+0x1]
   1400033e7:	mov    BYTE PTR [rcx+0x1],al
   1400033ea:	add    rcx,0x2
   1400033ee:	add    rdx,0x2
   1400033f2:	jmp    0x1400033d4
   1400033f4:	mov    WORD PTR [rcx],r14w
   1400033f8:	lea    rdx,[rip+0x38c21]        # 0x14003c020
   1400033ff:	lea    rcx,[rbp-0x40]
   140003403:	cmp    BYTE PTR [rcx],r14b
   140003406:	jne    0x14000340e
   140003408:	cmp    BYTE PTR [rcx+0x1],r14b
   14000340c:	je     0x140003414
   14000340e:	add    rcx,0x2
   140003412:	jmp    0x140003403
   140003414:	movzx  eax,BYTE PTR [rdx]
   140003417:	test   al,al
   140003419:	jne    0x140003421
   14000341b:	cmp    BYTE PTR [rdx+0x1],r14b
   14000341f:	je     0x140003434
   140003421:	mov    BYTE PTR [rcx],al
   140003423:	movzx  eax,BYTE PTR [rdx+0x1]
   140003427:	mov    BYTE PTR [rcx+0x1],al
   14000342a:	add    rcx,0x2
   14000342e:	add    rdx,0x2
   140003432:	jmp    0x140003414
   140003434:	mov    WORD PTR [rcx],r14w
   140003438:	lea    rax,[rbp-0x40]
   14000343c:	mov    ebx,r14d
   14000343f:	nop
   140003440:	cmp    BYTE PTR [rax],r14b
   140003443:	jne    0x14000344b
   140003445:	cmp    BYTE PTR [rax+0x1],r14b
   140003449:	je     0x140003453
   14000344b:	add    rax,0x2
   14000344f:	inc    ebx
   140003451:	jmp    0x140003440
   140003453:	add    ebx,ebx
   140003455:	mov    r8d,ebx
   140003458:	lea    rdx,[rbp-0x40]
   14000345c:	mov    rcx,QWORD PTR [rsp+0x48]
   140003461:	call   0x14002a820
   140003466:	cmp    eax,ebx
   140003468:	jne    0x140002556
   14000346e:	mov    r14,QWORD PTR [rip+0x3cd73]        # 0x1400401e8
   140003475:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003480:	mov    rax,QWORD PTR [rdi+r14*1]
   140003484:	lea    rdx,[rbp+0xe0]
   14000348b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003490:	movzx  ecx,BYTE PTR [rax]
   140003493:	test   cl,cl
   140003495:	jne    0x14000349c
   140003497:	cmp    BYTE PTR [rax+0x1],cl
   14000349a:	je     0x1400034af
   14000349c:	mov    BYTE PTR [rdx],cl
   14000349e:	movzx  ecx,BYTE PTR [rax+0x1]
   1400034a2:	mov    BYTE PTR [rdx+0x1],cl
   1400034a5:	add    rdx,0x2
   1400034a9:	add    rax,0x2
   1400034ad:	jmp    0x140003490
   1400034af:	movzx  ecx,BYTE PTR [rax]
   1400034b2:	mov    BYTE PTR [rdx],cl
   1400034b4:	movzx  ecx,BYTE PTR [rax+0x1]
   1400034b8:	mov    BYTE PTR [rdx+0x1],cl
   1400034bb:	inc    r15w
   1400034bf:	movzx  ecx,r15w
   1400034c3:	call   0x14001bdb0
   1400034c8:	test   ax,ax
   1400034cb:	je     0x140003526
   1400034cd:	movzx  r8d,WORD PTR [rip+0x3b987]        # 0x14003ee5c
   1400034d5:	mov    WORD PTR [rip+0x3acc7],r8w        # 0x14003e1a4
   1400034dd:	movzx  ecx,WORD PTR [rip+0x3b97c]        # 0x14003ee60
   1400034e4:	imul   ecx,r8d
   1400034e8:	mov    eax,0x51eb851f
   1400034ed:	imul   ecx
   1400034ef:	mov    ecx,edx
   1400034f1:	sar    ecx,0x5
   1400034f4:	mov    eax,ecx
   1400034f6:	shr    eax,0x1f
   1400034f9:	add    ecx,eax
   1400034fb:	add    cx,WORD PTR [rip+0x3b946]        # 0x14003ee48
   140003502:	mov    WORD PTR [rip+0x3b947],cx        # 0x14003ee50
   140003509:	lea    rdx,[rip+0x3aca0]        # 0x14003e1b0
   140003510:	call   QWORD PTR [rip+0x3e592]        # 0x140041aa8
   140003516:	test   ax,ax
   140003519:	jne    0x140003bdd
   14000351f:	mov    r14,QWORD PTR [rip+0x3ccc2]        # 0x1400401e8
   140003526:	cmp    r15w,WORD PTR [rip+0x3aa96]        # 0x14003dfc4
   14000352e:	jge    0x14000357c
   140003530:	movsx  rdi,r15w
   140003534:	shl    rdi,0x4
   140003538:	mov    rdx,QWORD PTR [rdi+r14*1]
   14000353c:	lea    rcx,[rbp+0xe0]
   140003543:	call   0x140007550
   140003548:	test   ax,ax
   14000354b:	jne    0x1400027f2
   140003551:	movzx  eax,WORD PTR [rdi+r14*1+0x8]
   140003557:	cmp    WORD PTR [rip+0x3cd9c],ax        # 0x1400402fa
   14000355e:	jne    0x1400027f2
   140003564:	movzx  eax,WORD PTR [rdi+r14*1+0xa]
   14000356a:	cmp    WORD PTR [rip+0x3cd8f],ax        # 0x140040300
   140003571:	je     0x140003480
   140003577:	jmp    0x1400027f2
   14000357c:	mov    eax,DWORD PTR [rsp+0x3c]
   140003580:	test   ax,ax
   140003583:	je     0x140003597
   140003585:	xor    eax,eax
   140003587:	mov    DWORD PTR [rsp+0x3c],eax
   14000358b:	mov    r9,QWORD PTR [rip+0x3ab7e]        # 0x14003e110
   140003592:	jmp    0x140003b82
   140003597:	lea    rcx,[rbp+0x330]
   14000359e:	lea    rdx,[rbp-0x40]
   1400035a2:	movzx  eax,BYTE PTR [rcx]
   1400035a5:	test   al,al
   1400035a7:	jne    0x1400035ae
   1400035a9:	cmp    BYTE PTR [rcx+0x1],al
   1400035ac:	je     0x1400035c1
   1400035ae:	mov    BYTE PTR [rdx],al
   1400035b0:	movzx  eax,BYTE PTR [rcx+0x1]
   1400035b4:	mov    BYTE PTR [rdx+0x1],al
   1400035b7:	add    rdx,0x2
   1400035bb:	add    rcx,0x2
   1400035bf:	jmp    0x1400035a2
   1400035c1:	movzx  eax,BYTE PTR [rcx]
   1400035c4:	mov    BYTE PTR [rdx],al
   1400035c6:	movzx  eax,BYTE PTR [rcx+0x1]
   1400035ca:	mov    BYTE PTR [rdx+0x1],al
   1400035cd:	lea    rdi,[rip+0x38a54]        # 0x14003c028
   1400035d4:	mov    rdx,rdi
   1400035d7:	lea    rcx,[rbp-0x40]
   1400035db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400035e0:	cmp    BYTE PTR [rcx],0x0
   1400035e3:	jne    0x1400035eb
   1400035e5:	cmp    BYTE PTR [rcx+0x1],0x0
   1400035e9:	je     0x1400035f1
   1400035eb:	add    rcx,0x2
   1400035ef:	jmp    0x1400035e0
   1400035f1:	movzx  eax,BYTE PTR [rdx]
   1400035f4:	test   al,al
   1400035f6:	jne    0x1400035fd
   1400035f8:	cmp    BYTE PTR [rdx+0x1],al
   1400035fb:	je     0x140003610
   1400035fd:	mov    BYTE PTR [rcx],al
   1400035ff:	movzx  eax,BYTE PTR [rdx+0x1]
   140003603:	mov    BYTE PTR [rcx+0x1],al
   140003606:	add    rcx,0x2
   14000360a:	add    rdx,0x2
   14000360e:	jmp    0x1400035f1
   140003610:	mov    WORD PTR [rcx],0x0
   140003615:	lea    rdx,[rsp+0x78]
   14000361a:	movzx  ecx,WORD PTR [rip+0x3cccf]        # 0x1400402f0
   140003621:	call   0x14002b170
   140003626:	lea    rdx,[rbp-0x70]
   14000362a:	lea    r8,[rsp+0x78]
   14000362f:	movzx  eax,BYTE PTR [rsp+0x78]
   140003634:	test   al,al
   140003636:	je     0x140003677
   140003638:	lea    r13,[rip+0xffffffffffffc9c1]        # 0x140000000
   14000363f:	nop
   140003640:	cmp    al,0x7f
   140003642:	ja     0x140003649
   140003644:	movzx  ecx,al
   140003647:	jmp    0x140003660
   140003649:	cmp    al,0xfe
   14000364b:	ja     0x14000365b
   14000364d:	movzx  eax,al
   140003650:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140003659:	jmp    0x140003660
   14000365b:	mov    ecx,0x20
   140003660:	mov    WORD PTR [rdx],cx
   140003663:	add    rdx,0x2
   140003667:	inc    r8
   14000366a:	movzx  eax,BYTE PTR [r8]
   14000366e:	test   al,al
   140003670:	jne    0x140003640
   140003672:	mov    r13d,DWORD PTR [rsp+0x30]
   140003677:	xor    ebx,ebx
   140003679:	mov    WORD PTR [rdx],bx
   14000367c:	lea    rdx,[rbp-0x70]
   140003680:	lea    rcx,[rbp-0x40]
   140003684:	cmp    BYTE PTR [rcx],bl
   140003686:	jne    0x14000368d
   140003688:	cmp    BYTE PTR [rcx+0x1],bl
   14000368b:	je     0x140003693
   14000368d:	add    rcx,0x2
   140003691:	jmp    0x140003684
   140003693:	movzx  eax,BYTE PTR [rdx]
   140003696:	test   al,al
   140003698:	jne    0x14000369f
   14000369a:	cmp    BYTE PTR [rdx+0x1],bl
   14000369d:	je     0x1400036b2
   14000369f:	mov    BYTE PTR [rcx],al
   1400036a1:	movzx  eax,BYTE PTR [rdx+0x1]
   1400036a5:	mov    BYTE PTR [rcx+0x1],al
   1400036a8:	add    rcx,0x2
   1400036ac:	add    rdx,0x2
   1400036b0:	jmp    0x140003693
   1400036b2:	mov    WORD PTR [rcx],bx
   1400036b5:	mov    rdx,rdi
   1400036b8:	lea    rcx,[rbp-0x40]
   1400036bc:	nop    DWORD PTR [rax+0x0]
   1400036c0:	cmp    BYTE PTR [rcx],bl
   1400036c2:	jne    0x1400036c9
   1400036c4:	cmp    BYTE PTR [rcx+0x1],bl
   1400036c7:	je     0x1400036d0
   1400036c9:	add    rcx,0x2
   1400036cd:	jmp    0x1400036c0
   1400036cf:	nop
   1400036d0:	movzx  eax,BYTE PTR [rdx]
   1400036d3:	test   al,al
   1400036d5:	jne    0x1400036dc
   1400036d7:	cmp    BYTE PTR [rdx+0x1],bl
   1400036da:	je     0x1400036ef
   1400036dc:	mov    BYTE PTR [rcx],al
   1400036de:	movzx  eax,BYTE PTR [rdx+0x1]
   1400036e2:	mov    BYTE PTR [rcx+0x1],al
   1400036e5:	add    rcx,0x2
   1400036e9:	add    rdx,0x2
   1400036ed:	jmp    0x1400036d0
   1400036ef:	mov    WORD PTR [rcx],bx
   1400036f2:	lea    rdx,[rsp+0x78]
   1400036f7:	movzx  ecx,WORD PTR [rip+0x3cbf4]        # 0x1400402f2
   1400036fe:	call   0x14002b170
   140003703:	lea    rdx,[rbp-0x70]
   140003707:	lea    r8,[rsp+0x78]
   14000370c:	movzx  eax,BYTE PTR [rsp+0x78]
   140003711:	test   al,al
   140003713:	je     0x140003757
   140003715:	lea    r13,[rip+0xffffffffffffc8e4]        # 0x140000000
   14000371c:	nop    DWORD PTR [rax+0x0]
   140003720:	cmp    al,0x7f
   140003722:	ja     0x140003729
   140003724:	movzx  ecx,al
   140003727:	jmp    0x140003740
   140003729:	cmp    al,0xfe
   14000372b:	ja     0x14000373b
   14000372d:	movzx  eax,al
   140003730:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140003739:	jmp    0x140003740
   14000373b:	mov    ecx,0x20
   140003740:	mov    WORD PTR [rdx],cx
   140003743:	add    rdx,0x2
   140003747:	inc    r8
   14000374a:	movzx  eax,BYTE PTR [r8]
   14000374e:	test   al,al
   140003750:	jne    0x140003720
   140003752:	mov    r13d,DWORD PTR [rsp+0x30]
   140003757:	mov    WORD PTR [rdx],bx
   14000375a:	lea    rdx,[rbp-0x70]
   14000375e:	lea    rcx,[rbp-0x40]
   140003762:	cmp    BYTE PTR [rcx],bl
   140003764:	jne    0x14000376b
   140003766:	cmp    BYTE PTR [rcx+0x1],bl
   140003769:	je     0x140003771
   14000376b:	add    rcx,0x2
   14000376f:	jmp    0x140003762
   140003771:	movzx  eax,BYTE PTR [rdx]
   140003774:	test   al,al
   140003776:	jne    0x14000377d
   140003778:	cmp    BYTE PTR [rdx+0x1],bl
   14000377b:	je     0x140003790
   14000377d:	mov    BYTE PTR [rcx],al
   14000377f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003783:	mov    BYTE PTR [rcx+0x1],al
   140003786:	add    rcx,0x2
   14000378a:	add    rdx,0x2
   14000378e:	jmp    0x140003771
   140003790:	mov    WORD PTR [rcx],bx
   140003793:	mov    rdx,rdi
   140003796:	lea    rcx,[rbp-0x40]
   14000379a:	nop    WORD PTR [rax+rax*1+0x0]
   1400037a0:	cmp    BYTE PTR [rcx],bl
   1400037a2:	jne    0x1400037a9
   1400037a4:	cmp    BYTE PTR [rcx+0x1],bl
   1400037a7:	je     0x1400037b0
   1400037a9:	add    rcx,0x2
   1400037ad:	jmp    0x1400037a0
   1400037af:	nop
   1400037b0:	movzx  eax,BYTE PTR [rdx]
   1400037b3:	test   al,al
   1400037b5:	jne    0x1400037bc
   1400037b7:	cmp    BYTE PTR [rdx+0x1],bl
   1400037ba:	je     0x1400037cf
   1400037bc:	mov    BYTE PTR [rcx],al
   1400037be:	movzx  eax,BYTE PTR [rdx+0x1]
   1400037c2:	mov    BYTE PTR [rcx+0x1],al
   1400037c5:	add    rcx,0x2
   1400037c9:	add    rdx,0x2
   1400037cd:	jmp    0x1400037b0
   1400037cf:	mov    WORD PTR [rcx],bx
   1400037d2:	lea    rdx,[rsp+0x78]
   1400037d7:	movzx  ecx,WORD PTR [rip+0x3cb16]        # 0x1400402f4
   1400037de:	call   0x14002b170
   1400037e3:	lea    rdx,[rbp-0x70]
   1400037e7:	lea    r8,[rsp+0x78]
   1400037ec:	movzx  eax,BYTE PTR [rsp+0x78]
   1400037f1:	test   al,al
   1400037f3:	je     0x140003837
   1400037f5:	lea    r13,[rip+0xffffffffffffc804]        # 0x140000000
   1400037fc:	nop    DWORD PTR [rax+0x0]
   140003800:	cmp    al,0x7f
   140003802:	ja     0x140003809
   140003804:	movzx  ecx,al
   140003807:	jmp    0x140003820
   140003809:	cmp    al,0xfe
   14000380b:	ja     0x14000381b
   14000380d:	movzx  eax,al
   140003810:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140003819:	jmp    0x140003820
   14000381b:	mov    ecx,0x20
   140003820:	mov    WORD PTR [rdx],cx
   140003823:	add    rdx,0x2
   140003827:	inc    r8
   14000382a:	movzx  eax,BYTE PTR [r8]
   14000382e:	test   al,al
   140003830:	jne    0x140003800
   140003832:	mov    r13d,DWORD PTR [rsp+0x30]
   140003837:	mov    WORD PTR [rdx],bx
   14000383a:	lea    rdx,[rbp-0x70]
   14000383e:	lea    rcx,[rbp-0x40]
   140003842:	cmp    BYTE PTR [rcx],bl
   140003844:	jne    0x14000384b
   140003846:	cmp    BYTE PTR [rcx+0x1],bl
   140003849:	je     0x140003851
   14000384b:	add    rcx,0x2
   14000384f:	jmp    0x140003842
   140003851:	movzx  eax,BYTE PTR [rdx]
   140003854:	test   al,al
   140003856:	jne    0x14000385d
   140003858:	cmp    BYTE PTR [rdx+0x1],bl
   14000385b:	je     0x140003870
   14000385d:	mov    BYTE PTR [rcx],al
   14000385f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003863:	mov    BYTE PTR [rcx+0x1],al
   140003866:	add    rcx,0x2
   14000386a:	add    rdx,0x2
   14000386e:	jmp    0x140003851
   140003870:	mov    WORD PTR [rcx],bx
   140003873:	mov    rdx,rdi
   140003876:	lea    rcx,[rbp-0x40]
   14000387a:	nop    WORD PTR [rax+rax*1+0x0]
   140003880:	cmp    BYTE PTR [rcx],bl
   140003882:	jne    0x140003889
   140003884:	cmp    BYTE PTR [rcx+0x1],bl
   140003887:	je     0x140003890
   140003889:	add    rcx,0x2
   14000388d:	jmp    0x140003880
   14000388f:	nop
   140003890:	movzx  eax,BYTE PTR [rdx]
   140003893:	test   al,al
   140003895:	jne    0x14000389c
   140003897:	cmp    BYTE PTR [rdx+0x1],bl
   14000389a:	je     0x1400038af
   14000389c:	mov    BYTE PTR [rcx],al
   14000389e:	movzx  eax,BYTE PTR [rdx+0x1]
   1400038a2:	mov    BYTE PTR [rcx+0x1],al
   1400038a5:	add    rcx,0x2
   1400038a9:	add    rdx,0x2
   1400038ad:	jmp    0x140003890
   1400038af:	mov    WORD PTR [rcx],bx
   1400038b2:	lea    rdx,[rsp+0x78]
   1400038b7:	movzx  ecx,WORD PTR [rip+0x3ca38]        # 0x1400402f6
   1400038be:	call   0x14002b170
   1400038c3:	lea    rdx,[rbp-0x70]
   1400038c7:	lea    r8,[rsp+0x78]
   1400038cc:	movzx  eax,BYTE PTR [rsp+0x78]
   1400038d1:	test   al,al
   1400038d3:	je     0x140003917
   1400038d5:	lea    r13,[rip+0xffffffffffffc724]        # 0x140000000
   1400038dc:	nop    DWORD PTR [rax+0x0]
   1400038e0:	cmp    al,0x7f
   1400038e2:	ja     0x1400038e9
   1400038e4:	movzx  ecx,al
   1400038e7:	jmp    0x140003900
   1400038e9:	cmp    al,0xfe
   1400038eb:	ja     0x1400038fb
   1400038ed:	movzx  eax,al
   1400038f0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400038f9:	jmp    0x140003900
   1400038fb:	mov    ecx,0x20
   140003900:	mov    WORD PTR [rdx],cx
   140003903:	add    rdx,0x2
   140003907:	inc    r8
   14000390a:	movzx  eax,BYTE PTR [r8]
   14000390e:	test   al,al
   140003910:	jne    0x1400038e0
   140003912:	mov    r13d,DWORD PTR [rsp+0x30]
   140003917:	mov    WORD PTR [rdx],bx
   14000391a:	lea    rdx,[rbp-0x70]
   14000391e:	lea    rcx,[rbp-0x40]
   140003922:	cmp    BYTE PTR [rcx],bl
   140003924:	jne    0x14000392b
   140003926:	cmp    BYTE PTR [rcx+0x1],bl
   140003929:	je     0x140003931
   14000392b:	add    rcx,0x2
   14000392f:	jmp    0x140003922
   140003931:	movzx  eax,BYTE PTR [rdx]
   140003934:	test   al,al
   140003936:	jne    0x14000393d
   140003938:	cmp    BYTE PTR [rdx+0x1],bl
   14000393b:	je     0x140003950
   14000393d:	mov    BYTE PTR [rcx],al
   14000393f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003943:	mov    BYTE PTR [rcx+0x1],al
   140003946:	add    rcx,0x2
   14000394a:	add    rdx,0x2
   14000394e:	jmp    0x140003931
   140003950:	mov    WORD PTR [rcx],bx
   140003953:	mov    rdx,rdi
   140003956:	lea    rcx,[rbp-0x40]
   14000395a:	nop    WORD PTR [rax+rax*1+0x0]
   140003960:	cmp    BYTE PTR [rcx],bl
   140003962:	jne    0x140003969
   140003964:	cmp    BYTE PTR [rcx+0x1],bl
   140003967:	je     0x140003970
   140003969:	add    rcx,0x2
   14000396d:	jmp    0x140003960
   14000396f:	nop
   140003970:	movzx  eax,BYTE PTR [rdx]
   140003973:	test   al,al
   140003975:	jne    0x14000397c
   140003977:	cmp    BYTE PTR [rdx+0x1],bl
   14000397a:	je     0x14000398f
   14000397c:	mov    BYTE PTR [rcx],al
   14000397e:	movzx  eax,BYTE PTR [rdx+0x1]
   140003982:	mov    BYTE PTR [rcx+0x1],al
   140003985:	add    rcx,0x2
   140003989:	add    rdx,0x2
   14000398d:	jmp    0x140003970
   14000398f:	mov    WORD PTR [rcx],bx
   140003992:	lea    rdx,[rsp+0x78]
   140003997:	movzx  ecx,WORD PTR [rip+0x3c95a]        # 0x1400402f8
   14000399e:	call   0x14002b170
   1400039a3:	lea    rdx,[rbp-0x70]
   1400039a7:	lea    r8,[rsp+0x78]
   1400039ac:	movzx  eax,BYTE PTR [rsp+0x78]
   1400039b1:	test   al,al
   1400039b3:	je     0x1400039f7
   1400039b5:	lea    r13,[rip+0xffffffffffffc644]        # 0x140000000
   1400039bc:	nop    DWORD PTR [rax+0x0]
   1400039c0:	cmp    al,0x7f
   1400039c2:	ja     0x1400039c9
   1400039c4:	movzx  ecx,al
   1400039c7:	jmp    0x1400039e0
   1400039c9:	cmp    al,0xfe
   1400039cb:	ja     0x1400039db
   1400039cd:	movzx  eax,al
   1400039d0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400039d9:	jmp    0x1400039e0
   1400039db:	mov    ecx,0x20
   1400039e0:	mov    WORD PTR [rdx],cx
   1400039e3:	add    rdx,0x2
   1400039e7:	inc    r8
   1400039ea:	movzx  eax,BYTE PTR [r8]
   1400039ee:	test   al,al
   1400039f0:	jne    0x1400039c0
   1400039f2:	mov    r13d,DWORD PTR [rsp+0x30]
   1400039f7:	mov    WORD PTR [rdx],bx
   1400039fa:	lea    rdx,[rbp-0x70]
   1400039fe:	lea    rcx,[rbp-0x40]
   140003a02:	cmp    BYTE PTR [rcx],bl
   140003a04:	jne    0x140003a0b
   140003a06:	cmp    BYTE PTR [rcx+0x1],bl
   140003a09:	je     0x140003a11
   140003a0b:	add    rcx,0x2
   140003a0f:	jmp    0x140003a02
   140003a11:	movzx  eax,BYTE PTR [rdx]
   140003a14:	test   al,al
   140003a16:	jne    0x140003a1d
   140003a18:	cmp    BYTE PTR [rdx+0x1],bl
   140003a1b:	je     0x140003a30
   140003a1d:	mov    BYTE PTR [rcx],al
   140003a1f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003a23:	mov    BYTE PTR [rcx+0x1],al
   140003a26:	add    rcx,0x2
   140003a2a:	add    rdx,0x2
   140003a2e:	jmp    0x140003a11
   140003a30:	mov    WORD PTR [rcx],bx
   140003a33:	lea    rdx,[rip+0x385e6]        # 0x14003c020
   140003a3a:	lea    rcx,[rbp-0x40]
   140003a3e:	xchg   ax,ax
   140003a40:	cmp    BYTE PTR [rcx],bl
   140003a42:	jne    0x140003a49
   140003a44:	cmp    BYTE PTR [rcx+0x1],bl
   140003a47:	je     0x140003a50
   140003a49:	add    rcx,0x2
   140003a4d:	jmp    0x140003a40
   140003a4f:	nop
   140003a50:	movzx  eax,BYTE PTR [rdx]
   140003a53:	test   al,al
   140003a55:	jne    0x140003a5c
   140003a57:	cmp    BYTE PTR [rdx+0x1],bl
   140003a5a:	je     0x140003a6f
   140003a5c:	mov    BYTE PTR [rcx],al
   140003a5e:	movzx  eax,BYTE PTR [rdx+0x1]
   140003a62:	mov    BYTE PTR [rcx+0x1],al
   140003a65:	add    rcx,0x2
   140003a69:	add    rdx,0x2
   140003a6d:	jmp    0x140003a50
   140003a6f:	mov    WORD PTR [rcx],bx
   140003a72:	lea    rax,[rbp-0x40]
   140003a76:	cmp    BYTE PTR [rax],0x0
   140003a79:	jne    0x140003a81
   140003a7b:	cmp    BYTE PTR [rax+0x1],0x0
   140003a7f:	je     0x140003a89
   140003a81:	add    rax,0x2
   140003a85:	inc    ebx
   140003a87:	jmp    0x140003a76
   140003a89:	add    ebx,ebx
   140003a8b:	mov    r8d,ebx
   140003a8e:	lea    rdx,[rbp-0x40]
   140003a92:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a97:	call   0x14002a820
   140003a9c:	cmp    eax,ebx
   140003a9e:	jne    0x140002556
   140003aa4:	mov    r9,QWORD PTR [rip+0x3a665]        # 0x14003e110
   140003aab:	mov    r14,QWORD PTR [rip+0x3c736]        # 0x1400401e8
   140003ab2:	jmp    0x140003b82
   140003ab7:	movzx  eax,al
   140003aba:	movsx  rcx,si
   140003abe:	movzx  eax,BYTE PTR [rax+r9*1]
   140003ac3:	mov    BYTE PTR [rbp+rcx*1+0x160],al
   140003aca:	inc    si
   140003acd:	jmp    0x140003b82
   140003ad2:	test   r13w,r13w
   140003ad6:	je     0x140003b79
   140003adc:	cmp    r13w,0xd
   140003ae1:	jne    0x140003b00
   140003ae3:	movzx  eax,al
   140003ae6:	add    ax,r13w
   140003aea:	movsx  rcx,ax
   140003aee:	movsx  rdx,si
   140003af2:	movzx  eax,BYTE PTR [rcx+r9*1]
   140003af7:	mov    BYTE PTR [rbp+rdx*1+0x160],al
   140003afe:	jmp    0x140003b6b
   140003b00:	cmp    r13w,0xe
   140003b05:	jne    0x140003b24
   140003b07:	movzx  eax,al
   140003b0a:	add    ax,0x1d
   140003b0e:	movsx  rcx,ax
   140003b12:	movsx  rdx,si
   140003b16:	movzx  eax,BYTE PTR [rcx+r9*1]
   140003b1b:	mov    BYTE PTR [rbp+rdx*1+0x160],al
   140003b22:	jmp    0x140003b6b
   140003b24:	cmp    r13w,0xf
   140003b29:	jne    0x140003b6e
   140003b2b:	test   ecx,ecx
   140003b2d:	je     0x140003b42
   140003b2f:	movzx  ecx,BYTE PTR [r8+0x1]
   140003b34:	shr    cl,0x4
   140003b37:	movzx  eax,dl
   140003b3a:	shl    al,0x4
   140003b3d:	movzx  edx,cl
   140003b40:	or     dl,al
   140003b42:	inc    r12w
   140003b46:	movzx  eax,dl
   140003b49:	add    ax,0x2d
   140003b4d:	mov    ecx,0xff
   140003b52:	cmp    ax,cx
   140003b55:	jge    0x140003b9d
   140003b57:	movsx  rax,ax
   140003b5b:	movsx  rcx,si
   140003b5f:	movzx  eax,BYTE PTR [rax+r9*1]
   140003b64:	mov    BYTE PTR [rbp+rcx*1+0x160],al
   140003b6b:	inc    si
   140003b6e:	xor    eax,eax
   140003b70:	mov    r13d,eax
   140003b73:	mov    DWORD PTR [rsp+0x30],eax
   140003b77:	jmp    0x140003b82
   140003b79:	movzx  r13d,al
   140003b7d:	mov    DWORD PTR [rsp+0x30],r13d
   140003b82:	inc    r12w
   140003b86:	mov    rdi,QWORD PTR [rsp+0x68]
   140003b8b:	mov    rbx,QWORD PTR [rsp+0x58]
   140003b90:	cmp    r12w,WORD PTR [rsp+0x40]
   140003b96:	jge    0x140003bae
   140003b98:	jmp    0x1400026e0
   140003b9d:	movzx  eax,WORD PTR [rbx+0x82]
   140003ba4:	add    ax,ax
   140003ba7:	mov    WORD PTR [rip+0x3c606],ax        # 0x1400401b4
   140003bae:	movzx  eax,WORD PTR [rsp+0x34]
   140003bb3:	inc    ax
   140003bb6:	mov    WORD PTR [rsp+0x34],ax
   140003bbb:	mov    r9d,0x1
   140003bc1:	cmp    ax,WORD PTR [rbx+0x80]
   140003bc8:	jge    0x140003bed
   140003bca:	mov    esi,0x106
   140003bcf:	lea    r14,[rip+0xffffffffffffc42a]        # 0x140000000
   140003bd6:	xor    ecx,ecx
   140003bd8:	jmp    0x1400025b0
   140003bdd:	mov    eax,0xfffffffc
   140003be2:	jmp    0x1400046ea
   140003be7:	call   0x14002cbc8
   140003bec:	int3   
   140003bed:	mov    r12,QWORD PTR [rsp+0x48]
   140003bf2:	mov    r13,QWORD PTR [rsp+0x50]
   140003bf7:	jmp    0x140003c00
   140003bf9:	mov    r14,QWORD PTR [rip+0x3c5e8]        # 0x1400401e8
   140003c00:	cmp    r15w,WORD PTR [rip+0x3a3bc]        # 0x14003dfc4
   140003c08:	jge    0x140004645
   140003c0e:	xchg   ax,ax
   140003c10:	movsx  rsi,r15w
   140003c14:	shl    rsi,0x4
   140003c18:	movzx  r8d,WORD PTR [rsi+r14*1+0x8]
   140003c1e:	mov    WORD PTR [rip+0x3c6d4],r8w        # 0x1400402fa
   140003c26:	mov    DWORD PTR [rip+0x3c6cc],0x3fff        # 0x1400402fc
   140003c30:	xor    ebx,ebx
   140003c32:	movzx  r11d,WORD PTR [rsi+r14*1+0xa]
   140003c38:	mov    WORD PTR [rip+0x3c6c0],r11w        # 0x140040300
   140003c40:	mov    WORD PTR [rip+0x3c6bb],bx        # 0x140040302
   140003c47:	mov    WORD PTR [rip+0x3a295],r9w        # 0x14003dee4
   140003c4f:	mov    rcx,QWORD PTR [rsi+r14*1]
   140003c53:	lea    rdx,[rbp-0x40]
   140003c57:	movzx  eax,BYTE PTR [rcx]
   140003c5a:	test   al,al
   140003c5c:	jne    0x140003c63
   140003c5e:	cmp    BYTE PTR [rcx+0x1],bl
   140003c61:	je     0x140003c76
   140003c63:	mov    BYTE PTR [rdx],al
   140003c65:	movzx  eax,BYTE PTR [rcx+0x1]
   140003c69:	mov    BYTE PTR [rdx+0x1],al
   140003c6c:	add    rdx,0x2
   140003c70:	add    rcx,0x2
   140003c74:	jmp    0x140003c57
   140003c76:	movzx  eax,BYTE PTR [rcx]
   140003c79:	mov    BYTE PTR [rdx],al
   140003c7b:	movzx  eax,BYTE PTR [rcx+0x1]
   140003c7f:	mov    BYTE PTR [rdx+0x1],al
   140003c82:	lea    rdi,[rip+0x3839f]        # 0x14003c028
   140003c89:	mov    rdx,rdi
   140003c8c:	lea    rcx,[rbp-0x40]
   140003c90:	cmp    BYTE PTR [rcx],bl
   140003c92:	jne    0x140003c99
   140003c94:	cmp    BYTE PTR [rcx+0x1],bl
   140003c97:	je     0x140003ca0
   140003c99:	add    rcx,0x2
   140003c9d:	jmp    0x140003c90
   140003c9f:	nop
   140003ca0:	movzx  eax,BYTE PTR [rdx]
   140003ca3:	test   al,al
   140003ca5:	jne    0x140003cac
   140003ca7:	cmp    BYTE PTR [rdx+0x1],bl
   140003caa:	je     0x140003cbf
   140003cac:	mov    BYTE PTR [rcx],al
   140003cae:	movzx  eax,BYTE PTR [rdx+0x1]
   140003cb2:	mov    BYTE PTR [rcx+0x1],al
   140003cb5:	add    rcx,0x2
   140003cb9:	add    rdx,0x2
   140003cbd:	jmp    0x140003ca0
   140003cbf:	mov    WORD PTR [rcx],bx
   140003cc2:	movzx  r9d,bx
   140003cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003cd0:	movzx  ecx,r8w
   140003cd4:	mov    eax,0x66666667
   140003cd9:	imul   ecx
   140003cdb:	mov    r8d,edx
   140003cde:	sar    r8d,0x2
   140003ce2:	mov    eax,r8d
   140003ce5:	shr    eax,0x1f
   140003ce8:	add    r8d,eax
   140003ceb:	lea    eax,[r8+r8*4]
   140003cef:	add    eax,eax
   140003cf1:	sub    ecx,eax
   140003cf3:	add    cl,0x30
   140003cf6:	movsx  rax,r9w
   140003cfa:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140003cfe:	inc    r9w
   140003d02:	test   r8w,r8w
   140003d06:	jne    0x140003cd0
   140003d08:	movsx  rax,r9w
   140003d0c:	mov    BYTE PTR [rsp+rax*1+0x78],bl
   140003d10:	movzx  r10d,bx
   140003d14:	mov    r9d,ebx
   140003d17:	lea    rcx,[rsp+0x78]
   140003d1c:	movzx  eax,BYTE PTR [rsp+0x78]
   140003d21:	test   al,al
   140003d23:	je     0x140003d2f
   140003d25:	inc    rcx
   140003d28:	inc    r9d
   140003d2b:	cmp    BYTE PTR [rcx],bl
   140003d2d:	jne    0x140003d25
   140003d2f:	dec    r9w
   140003d33:	cmp    bx,r9w
   140003d37:	jge    0x140003d77
   140003d39:	nop    DWORD PTR [rax+0x0]
   140003d40:	movsx  rax,r10w
   140003d44:	lea    rdx,[rsp+0x78]
   140003d49:	add    rdx,rax
   140003d4c:	movzx  r8d,BYTE PTR [rdx]
   140003d50:	movsx  rax,r9w
   140003d54:	lea    rcx,[rsp+0x78]
   140003d59:	add    rcx,rax
   140003d5c:	movzx  eax,BYTE PTR [rcx]
   140003d5f:	mov    BYTE PTR [rdx],al
   140003d61:	mov    BYTE PTR [rcx],r8b
   140003d64:	inc    r10w
   140003d68:	dec    r9w
   140003d6c:	cmp    r10w,r9w
   140003d70:	jl     0x140003d40
   140003d72:	movzx  eax,BYTE PTR [rsp+0x78]
   140003d77:	lea    rdx,[rbp-0x70]
   140003d7b:	lea    r8,[rsp+0x78]
   140003d80:	test   al,al
   140003d82:	je     0x140003dc7
   140003d84:	lea    r13,[rip+0xffffffffffffc275]        # 0x140000000
   140003d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003d90:	cmp    al,0x7f
   140003d92:	ja     0x140003d99
   140003d94:	movzx  ecx,al
   140003d97:	jmp    0x140003db0
   140003d99:	cmp    al,0xfe
   140003d9b:	ja     0x140003dab
   140003d9d:	movzx  eax,al
   140003da0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   140003da9:	jmp    0x140003db0
   140003dab:	mov    ecx,0x20
   140003db0:	mov    WORD PTR [rdx],cx
   140003db3:	add    rdx,0x2
   140003db7:	inc    r8
   140003dba:	movzx  eax,BYTE PTR [r8]
   140003dbe:	test   al,al
   140003dc0:	jne    0x140003d90
   140003dc2:	mov    r13,QWORD PTR [rsp+0x50]
   140003dc7:	mov    WORD PTR [rdx],bx
   140003dca:	lea    rdx,[rbp-0x70]
   140003dce:	lea    rcx,[rbp-0x40]
   140003dd2:	cmp    BYTE PTR [rcx],bl
   140003dd4:	jne    0x140003ddb
   140003dd6:	cmp    BYTE PTR [rcx+0x1],bl
   140003dd9:	je     0x140003de1
   140003ddb:	add    rcx,0x2
   140003ddf:	jmp    0x140003dd2
   140003de1:	movzx  eax,BYTE PTR [rdx]
   140003de4:	test   al,al
   140003de6:	jne    0x140003ded
   140003de8:	cmp    BYTE PTR [rdx+0x1],bl
   140003deb:	je     0x140003e00
   140003ded:	mov    BYTE PTR [rcx],al
   140003def:	movzx  eax,BYTE PTR [rdx+0x1]
   140003df3:	mov    BYTE PTR [rcx+0x1],al
   140003df6:	add    rcx,0x2
   140003dfa:	add    rdx,0x2
   140003dfe:	jmp    0x140003de1
   140003e00:	mov    WORD PTR [rcx],bx
   140003e03:	mov    rdx,rdi
   140003e06:	lea    rcx,[rbp-0x40]
   140003e0a:	nop    WORD PTR [rax+rax*1+0x0]
   140003e10:	cmp    BYTE PTR [rcx],bl
   140003e12:	jne    0x140003e19
   140003e14:	cmp    BYTE PTR [rcx+0x1],bl
   140003e17:	je     0x140003e20
   140003e19:	add    rcx,0x2
   140003e1d:	jmp    0x140003e10
   140003e1f:	nop
   140003e20:	movzx  eax,BYTE PTR [rdx]
   140003e23:	test   al,al
   140003e25:	jne    0x140003e2c
   140003e27:	cmp    BYTE PTR [rdx+0x1],bl
   140003e2a:	je     0x140003e3f
   140003e2c:	mov    BYTE PTR [rcx],al
   140003e2e:	movzx  eax,BYTE PTR [rdx+0x1]
   140003e32:	mov    BYTE PTR [rcx+0x1],al
   140003e35:	add    rcx,0x2
   140003e39:	add    rdx,0x2
   140003e3d:	jmp    0x140003e20
   140003e3f:	mov    WORD PTR [rcx],bx
   140003e42:	mov    edx,0x3fff
   140003e47:	movzx  r8d,bx
   140003e4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003e50:	movzx  ecx,dx
   140003e53:	mov    eax,0x66666667
   140003e58:	imul   ecx
   140003e5a:	sar    edx,0x2
   140003e5d:	mov    eax,edx
   140003e5f:	shr    eax,0x1f
   140003e62:	add    edx,eax
   140003e64:	lea    eax,[rdx+rdx*4]
   140003e67:	add    eax,eax
   140003e69:	sub    ecx,eax
   140003e6b:	add    cl,0x30
   140003e6e:	movsx  rax,r8w
   140003e72:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140003e76:	inc    r8w
   140003e7a:	test   dx,dx
   140003e7d:	jne    0x140003e50
   140003e7f:	movsx  rax,r8w
   140003e83:	mov    BYTE PTR [rsp+rax*1+0x78],bl
   140003e87:	movzx  r10d,bx
   140003e8b:	mov    r9d,ebx
   140003e8e:	lea    rcx,[rsp+0x78]
   140003e93:	movzx  eax,BYTE PTR [rsp+0x78]
   140003e98:	test   al,al
   140003e9a:	je     0x140003eaa
   140003e9c:	nop    DWORD PTR [rax+0x0]
   140003ea0:	inc    rcx
   140003ea3:	inc    r9d
   140003ea6:	cmp    BYTE PTR [rcx],bl
   140003ea8:	jne    0x140003ea0
   140003eaa:	dec    r9w
   140003eae:	cmp    bx,r9w
   140003eb2:	jge    0x140003ef7
   140003eb4:	nop    DWORD PTR [rax+0x0]
   140003eb8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ec0:	movsx  rax,r10w
   140003ec4:	lea    rdx,[rsp+0x78]
   140003ec9:	add    rdx,rax
   140003ecc:	movzx  r8d,BYTE PTR [rdx]
   140003ed0:	movsx  rax,r9w
   140003ed4:	lea    rcx,[rsp+0x78]
   140003ed9:	add    rcx,rax
   140003edc:	movzx  eax,BYTE PTR [rcx]
   140003edf:	mov    BYTE PTR [rdx],al
   140003ee1:	mov    BYTE PTR [rcx],r8b
   140003ee4:	inc    r10w
   140003ee8:	dec    r9w
   140003eec:	cmp    r10w,r9w
   140003ef0:	jl     0x140003ec0
   140003ef2:	movzx  eax,BYTE PTR [rsp+0x78]
   140003ef7:	lea    rdx,[rbp-0x70]
   140003efb:	lea    r8,[rsp+0x78]
   140003f00:	test   al,al
   140003f02:	je     0x140003f47
   140003f04:	lea    r12,[rip+0xffffffffffffc0f5]        # 0x140000000
   140003f0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003f10:	cmp    al,0x7f
   140003f12:	ja     0x140003f19
   140003f14:	movzx  ecx,al
   140003f17:	jmp    0x140003f30
   140003f19:	cmp    al,0xfe
   140003f1b:	ja     0x140003f2b
   140003f1d:	movzx  eax,al
   140003f20:	movzx  ecx,WORD PTR [r12+rax*2+0x30350]
   140003f29:	jmp    0x140003f30
   140003f2b:	mov    ecx,0x20
   140003f30:	mov    WORD PTR [rdx],cx
   140003f33:	add    rdx,0x2
   140003f37:	inc    r8
   140003f3a:	movzx  eax,BYTE PTR [r8]
   140003f3e:	test   al,al
   140003f40:	jne    0x140003f10
   140003f42:	mov    r12,QWORD PTR [rsp+0x48]
   140003f47:	mov    WORD PTR [rdx],bx
   140003f4a:	lea    rdx,[rbp-0x70]
   140003f4e:	lea    rcx,[rbp-0x40]
   140003f52:	cmp    BYTE PTR [rcx],bl
   140003f54:	jne    0x140003f5b
   140003f56:	cmp    BYTE PTR [rcx+0x1],bl
   140003f59:	je     0x140003f61
   140003f5b:	add    rcx,0x2
   140003f5f:	jmp    0x140003f52
   140003f61:	movzx  eax,BYTE PTR [rdx]
   140003f64:	test   al,al
   140003f66:	jne    0x140003f6d
   140003f68:	cmp    BYTE PTR [rdx+0x1],bl
   140003f6b:	je     0x140003f80
   140003f6d:	mov    BYTE PTR [rcx],al
   140003f6f:	movzx  eax,BYTE PTR [rdx+0x1]
   140003f73:	mov    BYTE PTR [rcx+0x1],al
   140003f76:	add    rcx,0x2
   140003f7a:	add    rdx,0x2
   140003f7e:	jmp    0x140003f61
   140003f80:	mov    WORD PTR [rcx],bx
   140003f83:	mov    rdx,rdi
   140003f86:	lea    rcx,[rbp-0x40]
   140003f8a:	nop    WORD PTR [rax+rax*1+0x0]
   140003f90:	cmp    BYTE PTR [rcx],bl
   140003f92:	jne    0x140003f99
   140003f94:	cmp    BYTE PTR [rcx+0x1],bl
   140003f97:	je     0x140003fa0
   140003f99:	add    rcx,0x2
   140003f9d:	jmp    0x140003f90
   140003f9f:	nop
   140003fa0:	movzx  eax,BYTE PTR [rdx]
   140003fa3:	test   al,al
   140003fa5:	jne    0x140003fac
   140003fa7:	cmp    BYTE PTR [rdx+0x1],bl
   140003faa:	je     0x140003fbf
   140003fac:	mov    BYTE PTR [rcx],al
   140003fae:	movzx  eax,BYTE PTR [rdx+0x1]
   140003fb2:	mov    BYTE PTR [rcx+0x1],al
   140003fb5:	add    rcx,0x2
   140003fb9:	add    rdx,0x2
   140003fbd:	jmp    0x140003fa0
   140003fbf:	mov    WORD PTR [rcx],bx
   140003fc2:	movzx  edx,bx
   140003fc5:	movzx  r8d,bx
   140003fc9:	nop    DWORD PTR [rax+0x0]
   140003fd0:	movzx  ecx,dx
   140003fd3:	mov    eax,0x66666667
   140003fd8:	imul   ecx
   140003fda:	sar    edx,0x2
   140003fdd:	mov    eax,edx
   140003fdf:	shr    eax,0x1f
   140003fe2:	add    edx,eax
   140003fe4:	lea    eax,[rdx+rdx*4]
   140003fe7:	add    eax,eax
   140003fe9:	sub    ecx,eax
   140003feb:	add    cl,0x30
   140003fee:	movsx  rax,r8w
   140003ff2:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140003ff6:	inc    r8w
   140003ffa:	test   dx,dx
   140003ffd:	jne    0x140003fd0
   140003fff:	movsx  rax,r8w
   140004003:	mov    BYTE PTR [rsp+rax*1+0x78],bl
   140004007:	movzx  r10d,bx
   14000400b:	mov    r9d,ebx
   14000400e:	lea    rcx,[rsp+0x78]
   140004013:	movzx  eax,BYTE PTR [rsp+0x78]
   140004018:	test   al,al
   14000401a:	je     0x14000402a
   14000401c:	nop    DWORD PTR [rax+0x0]
   140004020:	inc    rcx
   140004023:	inc    r9d
   140004026:	cmp    BYTE PTR [rcx],bl
   140004028:	jne    0x140004020
   14000402a:	dec    r9w
   14000402e:	cmp    bx,r9w
   140004032:	jge    0x140004077
   140004034:	nop    DWORD PTR [rax+0x0]
   140004038:	nop    DWORD PTR [rax+rax*1+0x0]
   140004040:	movsx  rax,r10w
   140004044:	lea    rdx,[rsp+0x78]
   140004049:	add    rdx,rax
   14000404c:	movzx  r8d,BYTE PTR [rdx]
   140004050:	movsx  rax,r9w
   140004054:	lea    rcx,[rsp+0x78]
   140004059:	add    rcx,rax
   14000405c:	movzx  eax,BYTE PTR [rcx]
   14000405f:	mov    BYTE PTR [rdx],al
   140004061:	mov    BYTE PTR [rcx],r8b
   140004064:	inc    r10w
   140004068:	dec    r9w
   14000406c:	cmp    r10w,r9w
   140004070:	jl     0x140004040
   140004072:	movzx  eax,BYTE PTR [rsp+0x78]
   140004077:	lea    rdx,[rbp-0x70]
   14000407b:	lea    r8,[rsp+0x78]
   140004080:	test   al,al
   140004082:	je     0x1400040c7
   140004084:	lea    r13,[rip+0xffffffffffffbf75]        # 0x140000000
   14000408b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004090:	cmp    al,0x7f
   140004092:	ja     0x140004099
   140004094:	movzx  ecx,al
   140004097:	jmp    0x1400040b0
   140004099:	cmp    al,0xfe
   14000409b:	ja     0x1400040ab
   14000409d:	movzx  eax,al
   1400040a0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400040a9:	jmp    0x1400040b0
   1400040ab:	mov    ecx,0x20
   1400040b0:	mov    WORD PTR [rdx],cx
   1400040b3:	add    rdx,0x2
   1400040b7:	inc    r8
   1400040ba:	movzx  eax,BYTE PTR [r8]
   1400040be:	test   al,al
   1400040c0:	jne    0x140004090
   1400040c2:	mov    r13,QWORD PTR [rsp+0x50]
   1400040c7:	mov    WORD PTR [rdx],bx
   1400040ca:	lea    rdx,[rbp-0x70]
   1400040ce:	lea    rcx,[rbp-0x40]
   1400040d2:	cmp    BYTE PTR [rcx],bl
   1400040d4:	jne    0x1400040db
   1400040d6:	cmp    BYTE PTR [rcx+0x1],bl
   1400040d9:	je     0x1400040e1
   1400040db:	add    rcx,0x2
   1400040df:	jmp    0x1400040d2
   1400040e1:	movzx  eax,BYTE PTR [rdx]
   1400040e4:	test   al,al
   1400040e6:	jne    0x1400040ed
   1400040e8:	cmp    BYTE PTR [rdx+0x1],bl
   1400040eb:	je     0x140004100
   1400040ed:	mov    BYTE PTR [rcx],al
   1400040ef:	movzx  eax,BYTE PTR [rdx+0x1]
   1400040f3:	mov    BYTE PTR [rcx+0x1],al
   1400040f6:	add    rcx,0x2
   1400040fa:	add    rdx,0x2
   1400040fe:	jmp    0x1400040e1
   140004100:	mov    WORD PTR [rcx],bx
   140004103:	mov    rdx,rdi
   140004106:	lea    rcx,[rbp-0x40]
   14000410a:	nop    WORD PTR [rax+rax*1+0x0]
   140004110:	cmp    BYTE PTR [rcx],bl
   140004112:	jne    0x140004119
   140004114:	cmp    BYTE PTR [rcx+0x1],bl
   140004117:	je     0x140004120
   140004119:	add    rcx,0x2
   14000411d:	jmp    0x140004110
   14000411f:	nop
   140004120:	movzx  eax,BYTE PTR [rdx]
   140004123:	test   al,al
   140004125:	jne    0x14000412c
   140004127:	cmp    BYTE PTR [rdx+0x1],bl
   14000412a:	je     0x14000413f
   14000412c:	mov    BYTE PTR [rcx],al
   14000412e:	movzx  eax,BYTE PTR [rdx+0x1]
   140004132:	mov    BYTE PTR [rcx+0x1],al
   140004135:	add    rcx,0x2
   140004139:	add    rdx,0x2
   14000413d:	jmp    0x140004120
   14000413f:	mov    WORD PTR [rcx],bx
   140004142:	movzx  r8d,bx
   140004146:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004150:	movzx  ecx,r11w
   140004154:	mov    eax,0x66666667
   140004159:	imul   ecx
   14000415b:	mov    r11d,edx
   14000415e:	sar    r11d,0x2
   140004162:	mov    eax,r11d
   140004165:	shr    eax,0x1f
   140004168:	add    r11d,eax
   14000416b:	lea    eax,[r11+r11*4]
   14000416f:	add    eax,eax
   140004171:	sub    ecx,eax
   140004173:	add    cl,0x30
   140004176:	movsx  rax,r8w
   14000417a:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   14000417e:	inc    r8w
   140004182:	test   r11w,r11w
   140004186:	jne    0x140004150
   140004188:	movsx  rax,r8w
   14000418c:	mov    BYTE PTR [rsp+rax*1+0x78],bl
   140004190:	movzx  r10d,bx
   140004194:	mov    r9d,ebx
   140004197:	lea    rcx,[rsp+0x78]
   14000419c:	movzx  eax,BYTE PTR [rsp+0x78]
   1400041a1:	test   al,al
   1400041a3:	je     0x1400041af
   1400041a5:	inc    rcx
   1400041a8:	inc    r9d
   1400041ab:	cmp    BYTE PTR [rcx],bl
   1400041ad:	jne    0x1400041a5
   1400041af:	dec    r9w
   1400041b3:	cmp    bx,r9w
   1400041b7:	jge    0x1400041f7
   1400041b9:	nop    DWORD PTR [rax+0x0]
   1400041c0:	movsx  rax,r10w
   1400041c4:	lea    rdx,[rsp+0x78]
   1400041c9:	add    rdx,rax
   1400041cc:	movzx  r8d,BYTE PTR [rdx]
   1400041d0:	movsx  rax,r9w
   1400041d4:	lea    rcx,[rsp+0x78]
   1400041d9:	add    rcx,rax
   1400041dc:	movzx  eax,BYTE PTR [rcx]
   1400041df:	mov    BYTE PTR [rdx],al
   1400041e1:	mov    BYTE PTR [rcx],r8b
   1400041e4:	inc    r10w
   1400041e8:	dec    r9w
   1400041ec:	cmp    r10w,r9w
   1400041f0:	jl     0x1400041c0
   1400041f2:	movzx  eax,BYTE PTR [rsp+0x78]
   1400041f7:	lea    rdx,[rbp-0x70]
   1400041fb:	lea    r8,[rsp+0x78]
   140004200:	test   al,al
   140004202:	je     0x140004247
   140004204:	lea    r12,[rip+0xffffffffffffbdf5]        # 0x140000000
   14000420b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004210:	cmp    al,0x7f
   140004212:	ja     0x140004219
   140004214:	movzx  ecx,al
   140004217:	jmp    0x140004230
   140004219:	cmp    al,0xfe
   14000421b:	ja     0x14000422b
   14000421d:	movzx  eax,al
   140004220:	movzx  ecx,WORD PTR [r12+rax*2+0x30350]
   140004229:	jmp    0x140004230
   14000422b:	mov    ecx,0x20
   140004230:	mov    WORD PTR [rdx],cx
   140004233:	add    rdx,0x2
   140004237:	inc    r8
   14000423a:	movzx  eax,BYTE PTR [r8]
   14000423e:	test   al,al
   140004240:	jne    0x140004210
   140004242:	mov    r12,QWORD PTR [rsp+0x48]
   140004247:	mov    WORD PTR [rdx],bx
   14000424a:	lea    rdx,[rbp-0x70]
   14000424e:	lea    rcx,[rbp-0x40]
   140004252:	cmp    BYTE PTR [rcx],bl
   140004254:	jne    0x14000425b
   140004256:	cmp    BYTE PTR [rcx+0x1],bl
   140004259:	je     0x140004261
   14000425b:	add    rcx,0x2
   14000425f:	jmp    0x140004252
   140004261:	movzx  eax,BYTE PTR [rdx]
   140004264:	test   al,al
   140004266:	jne    0x14000426d
   140004268:	cmp    BYTE PTR [rdx+0x1],bl
   14000426b:	je     0x140004280
   14000426d:	mov    BYTE PTR [rcx],al
   14000426f:	movzx  eax,BYTE PTR [rdx+0x1]
   140004273:	mov    BYTE PTR [rcx+0x1],al
   140004276:	add    rcx,0x2
   14000427a:	add    rdx,0x2
   14000427e:	jmp    0x140004261
   140004280:	mov    WORD PTR [rcx],bx
   140004283:	mov    rdx,rdi
   140004286:	lea    rcx,[rbp-0x40]
   14000428a:	nop    WORD PTR [rax+rax*1+0x0]
   140004290:	cmp    BYTE PTR [rcx],bl
   140004292:	jne    0x140004299
   140004294:	cmp    BYTE PTR [rcx+0x1],bl
   140004297:	je     0x1400042a0
   140004299:	add    rcx,0x2
   14000429d:	jmp    0x140004290
   14000429f:	nop
   1400042a0:	movzx  eax,BYTE PTR [rdx]
   1400042a3:	test   al,al
   1400042a5:	jne    0x1400042ac
   1400042a7:	cmp    BYTE PTR [rdx+0x1],bl
   1400042aa:	je     0x1400042bf
   1400042ac:	mov    BYTE PTR [rcx],al
   1400042ae:	movzx  eax,BYTE PTR [rdx+0x1]
   1400042b2:	mov    BYTE PTR [rcx+0x1],al
   1400042b5:	add    rcx,0x2
   1400042b9:	add    rdx,0x2
   1400042bd:	jmp    0x1400042a0
   1400042bf:	mov    WORD PTR [rcx],bx
   1400042c2:	movzx  edx,bx
   1400042c5:	movzx  r8d,bx
   1400042c9:	nop    DWORD PTR [rax+0x0]
   1400042d0:	movzx  ecx,dx
   1400042d3:	mov    eax,0x66666667
   1400042d8:	imul   ecx
   1400042da:	sar    edx,0x2
   1400042dd:	mov    eax,edx
   1400042df:	shr    eax,0x1f
   1400042e2:	add    edx,eax
   1400042e4:	lea    eax,[rdx+rdx*4]
   1400042e7:	add    eax,eax
   1400042e9:	sub    ecx,eax
   1400042eb:	add    cl,0x30
   1400042ee:	movsx  rax,r8w
   1400042f2:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   1400042f6:	inc    r8w
   1400042fa:	test   dx,dx
   1400042fd:	jne    0x1400042d0
   1400042ff:	movsx  rax,r8w
   140004303:	mov    BYTE PTR [rsp+rax*1+0x78],bl
   140004307:	movzx  r10d,bx
   14000430b:	mov    r9d,ebx
   14000430e:	lea    rcx,[rsp+0x78]
   140004313:	movzx  eax,BYTE PTR [rsp+0x78]
   140004318:	test   al,al
   14000431a:	je     0x14000432a
   14000431c:	nop    DWORD PTR [rax+0x0]
   140004320:	inc    rcx
   140004323:	inc    r9d
   140004326:	cmp    BYTE PTR [rcx],bl
   140004328:	jne    0x140004320
   14000432a:	dec    r9w
   14000432e:	cmp    bx,r9w
   140004332:	jge    0x140004377
   140004334:	nop    DWORD PTR [rax+0x0]
   140004338:	nop    DWORD PTR [rax+rax*1+0x0]
   140004340:	movsx  rax,r10w
   140004344:	lea    rdx,[rsp+0x78]
   140004349:	add    rdx,rax
   14000434c:	movzx  r8d,BYTE PTR [rdx]
   140004350:	movsx  rax,r9w
   140004354:	lea    rcx,[rsp+0x78]
   140004359:	add    rcx,rax
   14000435c:	movzx  eax,BYTE PTR [rcx]
   14000435f:	mov    BYTE PTR [rdx],al
   140004361:	mov    BYTE PTR [rcx],r8b
   140004364:	inc    r10w
   140004368:	dec    r9w
   14000436c:	cmp    r10w,r9w
   140004370:	jl     0x140004340
   140004372:	movzx  eax,BYTE PTR [rsp+0x78]
   140004377:	lea    rdx,[rbp-0x70]
   14000437b:	lea    r8,[rsp+0x78]
   140004380:	test   al,al
   140004382:	je     0x1400043c7
   140004384:	lea    r13,[rip+0xffffffffffffbc75]        # 0x140000000
   14000438b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004390:	cmp    al,0x7f
   140004392:	ja     0x140004399
   140004394:	movzx  ecx,al
   140004397:	jmp    0x1400043b0
   140004399:	cmp    al,0xfe
   14000439b:	ja     0x1400043ab
   14000439d:	movzx  eax,al
   1400043a0:	movzx  ecx,WORD PTR [r13+rax*2+0x30350]
   1400043a9:	jmp    0x1400043b0
   1400043ab:	mov    ecx,0x20
   1400043b0:	mov    WORD PTR [rdx],cx
   1400043b3:	add    rdx,0x2
   1400043b7:	inc    r8
   1400043ba:	movzx  eax,BYTE PTR [r8]
   1400043be:	test   al,al
   1400043c0:	jne    0x140004390
   1400043c2:	mov    r13,QWORD PTR [rsp+0x50]
   1400043c7:	mov    WORD PTR [rdx],bx
   1400043ca:	lea    rdx,[rbp-0x70]
   1400043ce:	lea    rcx,[rbp-0x40]
   1400043d2:	cmp    BYTE PTR [rcx],bl
   1400043d4:	jne    0x1400043db
   1400043d6:	cmp    BYTE PTR [rcx+0x1],bl
   1400043d9:	je     0x1400043e1
   1400043db:	add    rcx,0x2
   1400043df:	jmp    0x1400043d2
   1400043e1:	movzx  eax,BYTE PTR [rdx]
   1400043e4:	test   al,al
   1400043e6:	jne    0x1400043ed
   1400043e8:	cmp    BYTE PTR [rdx+0x1],bl
   1400043eb:	je     0x140004400
   1400043ed:	mov    BYTE PTR [rcx],al
   1400043ef:	movzx  eax,BYTE PTR [rdx+0x1]
   1400043f3:	mov    BYTE PTR [rcx+0x1],al
   1400043f6:	add    rcx,0x2
   1400043fa:	add    rdx,0x2
   1400043fe:	jmp    0x1400043e1
   140004400:	mov    WORD PTR [rcx],bx
   140004403:	lea    rdx,[rip+0x37c16]        # 0x14003c020
   14000440a:	lea    rcx,[rbp-0x40]
   14000440e:	xchg   ax,ax
   140004410:	cmp    BYTE PTR [rcx],bl
   140004412:	jne    0x140004419
   140004414:	cmp    BYTE PTR [rcx+0x1],bl
   140004417:	je     0x140004420
   140004419:	add    rcx,0x2
   14000441d:	jmp    0x140004410
   14000441f:	nop
   140004420:	movzx  eax,BYTE PTR [rdx]
   140004423:	test   al,al
   140004425:	jne    0x14000442c
   140004427:	cmp    BYTE PTR [rdx+0x1],bl
   14000442a:	je     0x14000443f
   14000442c:	mov    BYTE PTR [rcx],al
   14000442e:	movzx  eax,BYTE PTR [rdx+0x1]
   140004432:	mov    BYTE PTR [rcx+0x1],al
   140004435:	add    rcx,0x2
   140004439:	add    rdx,0x2
   14000443d:	jmp    0x140004420
   14000443f:	mov    WORD PTR [rcx],bx
   140004442:	lea    rax,[rbp-0x40]
   140004446:	mov    ecx,ebx
   140004448:	cmp    BYTE PTR [rax],bl
   14000444a:	jne    0x140004451
   14000444c:	cmp    BYTE PTR [rax+0x1],bl
   14000444f:	je     0x140004459
   140004451:	add    rax,0x2
   140004455:	inc    ecx
   140004457:	jmp    0x140004448
   140004459:	lea    edi,[rcx+rcx*1]
   14000445c:	mov    rcx,rbx
   14000445f:	movsxd rbx,edi
   140004462:	test   edi,edi
   140004464:	jle    0x14000447c
   140004466:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004470:	not    BYTE PTR [rbp+rcx*1-0x40]
   140004474:	inc    rcx
   140004477:	cmp    rcx,rbx
   14000447a:	jl     0x140004470
   14000447c:	xor    r14d,r14d
   14000447f:	mov    QWORD PTR [rsp+0x20],r14
   140004484:	lea    r9,[rsp+0x40]
   140004489:	mov    r8d,edi
   14000448c:	lea    rdx,[rbp-0x40]
   140004490:	mov    rcx,QWORD PTR [r12]
   140004494:	call   QWORD PTR [rip+0x2ad76]        # 0x14002f210
   14000449a:	test   eax,eax
   14000449c:	jne    0x1400044d7
   14000449e:	call   QWORD PTR [rip+0x2acbc]        # 0x14002f160
   1400044a4:	cmp    eax,0x58
   1400044a7:	jae    0x1400044bb
   1400044a9:	mov    eax,eax
   1400044ab:	lea    rcx,[rip+0xffffffffffffbb4e]        # 0x140000000
   1400044b2:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400044b9:	jmp    0x1400044c0
   1400044bb:	mov    ecx,0x106
   1400044c0:	mov    DWORD PTR [rip+0x3ebf2],ecx        # 0x1400430b8
   1400044c6:	mov    DWORD PTR [rip+0x3eff8],0x2        # 0x1400434c8
   1400044d0:	mov    BYTE PTR [rip+0x3eee9],r14b        # 0x1400433c0
   1400044d7:	mov    rcx,r14
   1400044da:	test   edi,edi
   1400044dc:	jle    0x1400044f3
   1400044de:	xchg   ax,ax
   1400044e0:	movzx  eax,BYTE PTR [rbp+rcx*1-0x40]
   1400044e5:	not    al
   1400044e7:	mov    BYTE PTR [rbp+rcx*1-0x40],al
   1400044eb:	inc    rcx
   1400044ee:	cmp    rcx,rbx
   1400044f1:	jl     0x1400044e0
   1400044f3:	cmp    DWORD PTR [rsp+0x40],edi
   1400044f7:	jne    0x140002556
   1400044fd:	movzx  edi,WORD PTR [rip+0x39ac0]        # 0x14003dfc4
   140004504:	mov    r14,QWORD PTR [rip+0x3bcdd]        # 0x1400401e8
   14000450b:	movzx  ebx,WORD PTR [rip+0x3a932]        # 0x14003ee44
   140004512:	nop    DWORD PTR [rax+0x0]
   140004516:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004520:	mov    rcx,QWORD PTR [rsi+r14*1]
   140004524:	lea    rdx,[rbp+0xe0]
   14000452b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004530:	movzx  eax,BYTE PTR [rcx]
   140004533:	test   al,al
   140004535:	jne    0x14000453c
   140004537:	cmp    BYTE PTR [rcx+0x1],al
   14000453a:	je     0x14000454f
   14000453c:	mov    BYTE PTR [rdx],al
   14000453e:	movzx  eax,BYTE PTR [rcx+0x1]
   140004542:	mov    BYTE PTR [rdx+0x1],al
   140004545:	add    rdx,0x2
   140004549:	add    rcx,0x2
   14000454d:	jmp    0x140004530
   14000454f:	movzx  eax,BYTE PTR [rcx]
   140004552:	mov    BYTE PTR [rdx],al
   140004554:	movzx  eax,BYTE PTR [rcx+0x1]
   140004558:	mov    BYTE PTR [rdx+0x1],al
   14000455b:	inc    r15w
   14000455f:	movsx  eax,r15w
   140004563:	imul   eax,eax,0x64
   140004566:	movsx  ecx,di
   140004569:	cdq    
   14000456a:	idiv   ecx
   14000456c:	mov    r8d,eax
   14000456f:	mov    WORD PTR [rip+0x3a8e6],ax        # 0x14003ee5c
   140004576:	movzx  edx,ax
   140004579:	movzx  eax,bx
   14000457c:	mov    ecx,edx
   14000457e:	sub    ecx,eax
   140004580:	cmp    ecx,0x1
   140004583:	jl     0x1400045ed
   140004585:	inc    bx
   140004588:	mov    WORD PTR [rip+0x3a8b5],bx        # 0x14003ee44
   14000458f:	mov    WORD PTR [rip+0x39c0d],r8w        # 0x14003e1a4
   140004597:	movzx  ecx,WORD PTR [rip+0x3a8c2]        # 0x14003ee60
   14000459e:	imul   ecx,edx
   1400045a1:	mov    eax,0x51eb851f
   1400045a6:	imul   ecx
   1400045a8:	mov    ecx,edx
   1400045aa:	sar    ecx,0x5
   1400045ad:	mov    eax,ecx
   1400045af:	shr    eax,0x1f
   1400045b2:	add    ecx,eax
   1400045b4:	add    cx,WORD PTR [rip+0x3a88d]        # 0x14003ee48
   1400045bb:	mov    WORD PTR [rip+0x3a88e],cx        # 0x14003ee50
   1400045c2:	lea    rdx,[rip+0x39be7]        # 0x14003e1b0
   1400045c9:	call   QWORD PTR [rip+0x3d4d9]        # 0x140041aa8
   1400045cf:	test   ax,ax
   1400045d2:	jne    0x140003bdd
   1400045d8:	movzx  edi,WORD PTR [rip+0x399e5]        # 0x14003dfc4
   1400045df:	mov    r14,QWORD PTR [rip+0x3bc02]        # 0x1400401e8
   1400045e6:	movzx  ebx,WORD PTR [rip+0x3a857]        # 0x14003ee44
   1400045ed:	cmp    r15w,di
   1400045f1:	jge    0x140004645
   1400045f3:	movsx  rsi,r15w
   1400045f7:	shl    rsi,0x4
   1400045fb:	mov    rdx,QWORD PTR [rsi+r14*1]
   1400045ff:	lea    rcx,[rbp+0xe0]
   140004606:	call   0x140007550
   14000460b:	test   ax,ax
   14000460e:	mov    r9d,0x1
   140004614:	jne    0x140003c10
   14000461a:	movzx  eax,WORD PTR [rsi+r14*1+0x8]
   140004620:	cmp    WORD PTR [rip+0x3bcd3],ax        # 0x1400402fa
   140004627:	jne    0x140003c10
   14000462d:	movzx  eax,WORD PTR [rsi+r14*1+0xa]
   140004633:	cmp    WORD PTR [rip+0x3bcc6],ax        # 0x140040300
   14000463a:	je     0x140004520
   140004640:	jmp    0x140003c10
   140004645:	mov    rcx,QWORD PTR [r12]
   140004649:	call   QWORD PTR [rip+0x2abb1]        # 0x14002f200
   14000464f:	test   eax,eax
   140004651:	je     0x14000466c
   140004653:	xor    ebx,ebx
   140004655:	mov    QWORD PTR [r12],rbx
   140004659:	mov    rcx,r12
   14000465c:	call   0x14002a950
   140004661:	mov    rcx,r12
   140004664:	call   QWORD PTR [rip+0x2b50e]        # 0x14002fb78
   14000466a:	jmp    0x1400046a7
   14000466c:	call   QWORD PTR [rip+0x2aaee]        # 0x14002f160
   140004672:	cmp    eax,0x58
   140004675:	jae    0x140004689
   140004677:	mov    eax,eax
   140004679:	lea    rcx,[rip+0xffffffffffffb980]        # 0x140000000
   140004680:	mov    eax,DWORD PTR [rcx+rax*4+0x310a0]
   140004687:	jmp    0x14000468e
   140004689:	mov    eax,0x106
   14000468e:	mov    DWORD PTR [rip+0x3ea24],eax        # 0x1400430b8
   140004694:	mov    DWORD PTR [rip+0x3ee2a],0x2        # 0x1400434c8
   14000469e:	mov    BYTE PTR [rip+0x3ed1b],0x0        # 0x1400433c0
   1400046a5:	xor    ebx,ebx
   1400046a7:	lea    rdx,[rip+0x3983a]        # 0x14003dee8
   1400046ae:	mov    r8d,DWORD PTR [rip+0x3b94f]        # 0x140040004
   1400046b5:	add    r8,r13
   1400046b8:	movzx  eax,BYTE PTR [rdx]
   1400046bb:	test   al,al
   1400046bd:	jne    0x1400046c4
   1400046bf:	cmp    BYTE PTR [rdx+0x1],al
   1400046c2:	je     0x1400046d9
   1400046c4:	mov    BYTE PTR [r8],al
   1400046c7:	movzx  eax,BYTE PTR [rdx+0x1]
   1400046cb:	mov    BYTE PTR [r8+0x1],al
   1400046cf:	add    r8,0x2
   1400046d3:	add    rdx,0x2
   1400046d7:	jmp    0x1400046b8
   1400046d9:	movzx  ecx,BYTE PTR [rdx]
   1400046dc:	mov    BYTE PTR [r8],cl
   1400046df:	movzx  ecx,BYTE PTR [rdx+0x1]
   1400046e3:	mov    BYTE PTR [r8+0x1],cl
   1400046e7:	movzx  eax,bx
   1400046ea:	mov    rcx,QWORD PTR [rbp+0x400]
   1400046f1:	xor    rcx,rsp
   1400046f4:	call   0x14002c960
   1400046f9:	lea    r11,[rsp+0x510]
   140004701:	mov    rbx,QWORD PTR [r11+0x30]
   140004705:	mov    rsi,QWORD PTR [r11+0x40]
   140004709:	mov    rdi,QWORD PTR [r11+0x48]
   14000470d:	mov    rsp,r11
   140004710:	pop    r15
   140004712:	pop    r14
   140004714:	pop    r13
   140004716:	pop    r12
   140004718:	pop    rbp
   140004719:	ret    
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	mov    QWORD PTR [rsp+0x8],rbx
   140004725:	mov    QWORD PTR [rsp+0x18],rsi
   14000472a:	push   rdi
   14000472b:	sub    rsp,0x50
   14000472f:	mov    rax,QWORD PTR [rip+0x378ca]        # 0x14003c000
   140004736:	xor    rax,rsp
   140004739:	mov    QWORD PTR [rsp+0x48],rax
   14000473e:	mov    rdi,QWORD PTR [rip+0x3bd9b]        # 0x1400404e0
   140004745:	mov    rbx,rdx
   140004748:	xor    r8d,r8d
   14000474b:	mov    rcx,rbx
   14000474e:	xor    edx,edx
   140004750:	call   0x14002ad10
   140004755:	mov    rcx,QWORD PTR [rbx]
   140004758:	xor    esi,esi
   14000475a:	lea    r8d,[rsi+0x10]
   14000475e:	lea    r9,[rsp+0x30]
   140004763:	lea    rdx,[rsp+0x38]
   140004768:	mov    QWORD PTR [rsp+0x20],rsi
   14000476d:	call   QWORD PTR [rip+0x2aa95]        # 0x14002f208
   140004773:	test   eax,eax
   140004775:	jne    0x1400047ac
   140004777:	call   QWORD PTR [rip+0x2a9e3]        # 0x14002f160
   14000477d:	cmp    eax,0x58
   140004780:	jae    0x140004790
   140004782:	lea    rcx,[rip+0x2c917]        # 0x1400310a0
   140004789:	mov    eax,eax
   14000478b:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000478e:	jmp    0x140004795
   140004790:	mov    ecx,0x106
   140004795:	mov    DWORD PTR [rip+0x3e91d],ecx        # 0x1400430b8
   14000479b:	mov    DWORD PTR [rip+0x3ed23],0x2        # 0x1400434c8
   1400047a5:	mov    BYTE PTR [rip+0x3ec14],sil        # 0x1400433c0
   1400047ac:	cmp    WORD PTR [rsp+0x30],0x10
   1400047b2:	jne    0x14000483e
   1400047b8:	cmp    BYTE PTR [rsp+0x38],0xff
   1400047bd:	mov    QWORD PTR [rip+0x3ba04],rbx        # 0x1400401c8
   1400047c4:	jne    0x14000483e
   1400047c6:	cmp    BYTE PTR [rsp+0x39],0x57
   1400047cb:	jne    0x14000483e
   1400047cd:	cmp    BYTE PTR [rsp+0x3a],0x50
   1400047d2:	jne    0x14000483e
   1400047d4:	cmp    BYTE PTR [rsp+0x3b],0x43
   1400047d9:	jne    0x14000483e
   1400047db:	cmp    BYTE PTR [rsp+0x40],0x1
   1400047e0:	jne    0x14000483e
   1400047e2:	cmp    BYTE PTR [rsp+0x41],0xb
   1400047e7:	jne    0x14000483e
   1400047e9:	cmp    BYTE PTR [rsp+0x42],0x3
   1400047ee:	jne    0x14000483e
   1400047f0:	cmp    BYTE PTR [rsp+0x43],sil
   1400047f5:	jne    0x14000483e
   1400047f7:	mov    rcx,rdi
   1400047fa:	mov    QWORD PTR [rip+0x3c6ff],rsi        # 0x140040f00
   140004801:	mov    BYTE PTR [rip+0x396df],sil        # 0x14003dee7
   140004808:	call   0x140004c90
   14000480d:	movzx  ebx,ax
   140004810:	test   ax,ax
   140004813:	je     0x140004839
   140004815:	mov    rcx,QWORD PTR [rip+0x3b9ac]        # 0x1400401c8
   14000481c:	call   0x14002a9e0
   140004821:	call   0x1400049e0
   140004826:	mov    QWORD PTR [rip+0x3c6d3],rsi        # 0x140040f00
   14000482d:	mov    BYTE PTR [rip+0x396b3],sil        # 0x14003dee7
   140004834:	movzx  eax,bx
   140004837:	jmp    0x140004843
   140004839:	movzx  eax,si
   14000483c:	jmp    0x140004843
   14000483e:	mov    eax,0x1
   140004843:	mov    rcx,QWORD PTR [rsp+0x48]
   140004848:	xor    rcx,rsp
   14000484b:	call   0x14002c960
   140004850:	mov    rbx,QWORD PTR [rsp+0x60]
   140004855:	mov    rsi,QWORD PTR [rsp+0x70]
   14000485a:	add    rsp,0x50
   14000485e:	pop    rdi
   14000485f:	ret    
   140004860:	mov    QWORD PTR [rsp+0x8],rcx
   140004865:	push   rbp
   140004866:	push   rdi
   140004867:	push   r15
   140004869:	sub    rsp,0x10
   14000486d:	xor    r15d,r15d
   140004870:	mov    rbp,rdx
   140004873:	mov    rax,rdx
   140004876:	mov    r11d,r15d
   140004879:	nop    DWORD PTR [rax+0x0]
   140004880:	cmp    BYTE PTR [rax],r15b
   140004883:	jne    0x14000488b
   140004885:	cmp    BYTE PTR [rax+0x1],r15b
   140004889:	je     0x140004894
   14000488b:	add    rax,0x2
   14000488f:	inc    r11d
   140004892:	jmp    0x140004880
   140004894:	inc    DWORD PTR [rip+0x39646]        # 0x14003dee0
   14000489a:	mov    QWORD PTR [rsp+0x38],rbx
   14000489f:	mov    QWORD PTR [rsp+0x40],rsi
   1400048a4:	mov    QWORD PTR [rsp+0x48],r12
   1400048a9:	add    r11w,r11w
   1400048ad:	mov    QWORD PTR [rsp+0x8],r13
   1400048b2:	mov    QWORD PTR [rsp],r14
   1400048b6:	movzx  edi,r15w
   1400048ba:	cmp    r15w,r11w
   1400048be:	jge    0x1400049ae
   1400048c4:	movzx  esi,BYTE PTR [rip+0x379e5]        # 0x14003c2b0
   1400048cb:	lea    r13,[rip+0x3997e]        # 0x14003e250
   1400048d2:	mov    r14d,0xff
   1400048d8:	lea    r12,[rip+0x379d1]        # 0x14003c2b0
   1400048df:	nop
   1400048e0:	movsx  rcx,di
   1400048e4:	movzx  r9d,r15w
   1400048e8:	mov    rax,r13
   1400048eb:	movzx  r8d,BYTE PTR [rcx+rbp*1]
   1400048f0:	lea    rbx,[rcx+rbp*1]
   1400048f4:	inc    ecx
   1400048f6:	movsxd rdx,ecx
   1400048f9:	lea    r10,[rdx+rbp*1]
   1400048fd:	nop    DWORD PTR [rax]
   140004900:	movzx  edx,BYTE PTR [rax]
   140004903:	cmp    dl,r8b
   140004906:	jne    0x140004915
   140004908:	movzx  ecx,BYTE PTR [r10]
   14000490c:	cmp    BYTE PTR [rax+0x1],cl
   14000490f:	je     0x140004997
   140004915:	test   dl,dl
   140004917:	je     0x140004929
   140004919:	inc    r9w
   14000491d:	add    rax,0xc
   140004921:	cmp    r9w,r14w
   140004925:	jl     0x140004900
   140004927:	jmp    0x14000499a
   140004929:	mov    BYTE PTR [rax],r8b
   14000492c:	movzx  ecx,BYTE PTR [rbx+0x1]
   140004930:	mov    rdx,r12
   140004933:	mov    BYTE PTR [rax+0x1],cl
   140004936:	movzx  r10d,WORD PTR [rax]
   14000493a:	mov    WORD PTR [rsp+0x30],r10w
   140004940:	cmp    sil,r14b
   140004943:	je     0x140004962
   140004945:	movzx  r8d,BYTE PTR [rsp+0x31]
   14000494b:	movzx  ecx,sil
   14000494f:	nop
   140004950:	cmp    cl,r8b
   140004953:	je     0x140004962
   140004955:	movzx  ecx,BYTE PTR [rdx+0x10]
   140004959:	add    rdx,0x10
   14000495d:	cmp    cl,r14b
   140004960:	jne    0x140004950
   140004962:	mov    r8,QWORD PTR [rdx+0x8]
   140004966:	test   r8,r8
   140004969:	je     0x140004990
   14000496b:	movzx  ecx,BYTE PTR [r8]
   14000496f:	cmp    r10b,cl
   140004972:	jb     0x140004990
   140004974:	sub    r10b,cl
   140004977:	cmp    r10b,BYTE PTR [r8+0x1]
   14000497b:	ja     0x140004990
   14000497d:	movzx  ecx,r10b
   140004981:	add    ecx,0x2
   140004984:	movsxd rcx,ecx
   140004987:	add    r8,rcx
   14000498a:	movzx  ecx,BYTE PTR [r8]
   14000498e:	jmp    0x140004994
   140004990:	movzx  ecx,r14b
   140004994:	mov    BYTE PTR [rax+0x8],cl
   140004997:	inc    DWORD PTR [rax+0x4]
   14000499a:	cmp    r9w,r14w
   14000499e:	je     0x1400049d4
   1400049a0:	add    di,0x2
   1400049a4:	cmp    di,r11w
   1400049a8:	jl     0x1400048e0
   1400049ae:	mov    eax,0x1
   1400049b3:	mov    r14,QWORD PTR [rsp]
   1400049b7:	mov    r13,QWORD PTR [rsp+0x8]
   1400049bc:	mov    r12,QWORD PTR [rsp+0x48]
   1400049c1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400049c6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400049cb:	add    rsp,0x10
   1400049cf:	pop    r15
   1400049d1:	pop    rdi
   1400049d2:	pop    rbp
   1400049d3:	ret    
   1400049d4:	movzx  eax,r15w
   1400049d8:	jmp    0x1400049b3
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	rex push rsi
   1400049e2:	sub    rsp,0x20
   1400049e6:	mov    rcx,QWORD PTR [rip+0x396fb]        # 0x14003e0e8
   1400049ed:	xor    esi,esi
   1400049ef:	test   rcx,rcx
   1400049f2:	je     0x140004a01
   1400049f4:	call   QWORD PTR [rip+0x2aa86]        # 0x14002f480
   1400049fa:	mov    QWORD PTR [rip+0x396e7],rsi        # 0x14003e0e8
   140004a01:	mov    rcx,QWORD PTR [rip+0x3cf60]        # 0x140041968
   140004a08:	test   rcx,rcx
   140004a0b:	je     0x140004a1a
   140004a0d:	call   QWORD PTR [rip+0x2aa6d]        # 0x14002f480
   140004a13:	mov    QWORD PTR [rip+0x3cf4e],rsi        # 0x140041968
   140004a1a:	mov    rcx,QWORD PTR [rip+0x396cf]        # 0x14003e0f0
   140004a21:	test   rcx,rcx
   140004a24:	je     0x140004a33
   140004a26:	call   QWORD PTR [rip+0x2aa54]        # 0x14002f480
   140004a2c:	mov    QWORD PTR [rip+0x396bd],rsi        # 0x14003e0f0
   140004a33:	mov    rcx,QWORD PTR [rip+0x3cfae]        # 0x1400419e8
   140004a3a:	test   rcx,rcx
   140004a3d:	je     0x140004a4c
   140004a3f:	call   QWORD PTR [rip+0x2aa3b]        # 0x14002f480
   140004a45:	mov    QWORD PTR [rip+0x3cf9c],rsi        # 0x1400419e8
   140004a4c:	mov    rcx,QWORD PTR [rip+0x3cf9d]        # 0x1400419f0
   140004a53:	test   rcx,rcx
   140004a56:	je     0x140004a65
   140004a58:	call   QWORD PTR [rip+0x2aa22]        # 0x14002f480
   140004a5e:	mov    QWORD PTR [rip+0x3cf8b],rsi        # 0x1400419f0
   140004a65:	mov    rcx,QWORD PTR [rip+0x39694]        # 0x14003e100
   140004a6c:	test   rcx,rcx
   140004a6f:	je     0x140004a7e
   140004a71:	call   QWORD PTR [rip+0x2aa09]        # 0x14002f480
   140004a77:	mov    QWORD PTR [rip+0x39682],rsi        # 0x14003e100
   140004a7e:	mov    rcx,QWORD PTR [rip+0x39683]        # 0x14003e108
   140004a85:	test   rcx,rcx
   140004a88:	je     0x140004a97
   140004a8a:	call   QWORD PTR [rip+0x2a9f0]        # 0x14002f480
   140004a90:	mov    QWORD PTR [rip+0x39671],rsi        # 0x14003e108
   140004a97:	mov    rcx,QWORD PTR [rip+0x39672]        # 0x14003e110
   140004a9e:	test   rcx,rcx
   140004aa1:	je     0x140004ab0
   140004aa3:	call   QWORD PTR [rip+0x2a9d7]        # 0x14002f480
   140004aa9:	mov    QWORD PTR [rip+0x39660],rsi        # 0x14003e110
   140004ab0:	mov    rcx,QWORD PTR [rip+0x3ce79]        # 0x140041930
   140004ab7:	test   rcx,rcx
   140004aba:	je     0x140004ac9
   140004abc:	call   QWORD PTR [rip+0x2a9be]        # 0x14002f480
   140004ac2:	mov    QWORD PTR [rip+0x3ce67],rsi        # 0x140041930
   140004ac9:	mov    rcx,QWORD PTR [rip+0x3ce58]        # 0x140041928
   140004ad0:	test   rcx,rcx
   140004ad3:	je     0x140004ae2
   140004ad5:	call   QWORD PTR [rip+0x2a9a5]        # 0x14002f480
   140004adb:	mov    QWORD PTR [rip+0x3ce46],rsi        # 0x140041928
   140004ae2:	mov    rcx,QWORD PTR [rip+0x3ceb7]        # 0x1400419a0
   140004ae9:	test   rcx,rcx
   140004aec:	je     0x140004afb
   140004aee:	call   QWORD PTR [rip+0x2a98c]        # 0x14002f480
   140004af4:	mov    QWORD PTR [rip+0x3cea5],rsi        # 0x1400419a0
   140004afb:	mov    rcx,QWORD PTR [rip+0x3ceae]        # 0x1400419b0
   140004b02:	test   rcx,rcx
   140004b05:	je     0x140004b14
   140004b07:	call   QWORD PTR [rip+0x2a973]        # 0x14002f480
   140004b0d:	mov    QWORD PTR [rip+0x3ce9c],rsi        # 0x1400419b0
   140004b14:	mov    rcx,QWORD PTR [rip+0x3de1d]        # 0x140042938
   140004b1b:	test   rcx,rcx
   140004b1e:	je     0x140004b2d
   140004b20:	call   QWORD PTR [rip+0x2a95a]        # 0x14002f480
   140004b26:	mov    QWORD PTR [rip+0x3de0b],rsi        # 0x140042938
   140004b2d:	mov    rcx,QWORD PTR [rip+0x3c3cc]        # 0x140040f00
   140004b34:	test   rcx,rcx
   140004b37:	je     0x140004b46
   140004b39:	call   QWORD PTR [rip+0x2a941]        # 0x14002f480
   140004b3f:	mov    QWORD PTR [rip+0x3c3ba],rsi        # 0x140040f00
   140004b46:	mov    rcx,QWORD PTR [rip+0x3b673]        # 0x1400401c0
   140004b4d:	test   rcx,rcx
   140004b50:	je     0x140004b5f
   140004b52:	call   QWORD PTR [rip+0x2a928]        # 0x14002f480
   140004b58:	mov    QWORD PTR [rip+0x3b661],rsi        # 0x1400401c0
   140004b5f:	mov    rcx,QWORD PTR [rip+0x3b66a]        # 0x1400401d0
   140004b66:	test   rcx,rcx
   140004b69:	je     0x140004b78
   140004b6b:	call   QWORD PTR [rip+0x2a90f]        # 0x14002f480
   140004b71:	mov    QWORD PTR [rip+0x3b658],rsi        # 0x1400401d0
   140004b78:	mov    rcx,QWORD PTR [rip+0x3bb71]        # 0x1400406f0
   140004b7f:	test   rcx,rcx
   140004b82:	je     0x140004b91
   140004b84:	call   QWORD PTR [rip+0x2a8f6]        # 0x14002f480
   140004b8a:	mov    QWORD PTR [rip+0x3bb5f],rsi        # 0x1400406f0
   140004b91:	mov    rcx,QWORD PTR [rip+0x3cf08]        # 0x140041aa0
   140004b98:	test   rcx,rcx
   140004b9b:	je     0x140004baa
   140004b9d:	call   QWORD PTR [rip+0x2a8dd]        # 0x14002f480
   140004ba3:	mov    QWORD PTR [rip+0x3cef6],rsi        # 0x140041aa0
   140004baa:	mov    rcx,QWORD PTR [rip+0x3cb67]        # 0x140041718
   140004bb1:	test   rcx,rcx
   140004bb4:	je     0x140004bc3
   140004bb6:	call   QWORD PTR [rip+0x2a8c4]        # 0x14002f480
   140004bbc:	mov    QWORD PTR [rip+0x3cb55],rsi        # 0x140041718
   140004bc3:	mov    rcx,QWORD PTR [rip+0x3cda6]        # 0x140041970
   140004bca:	test   rcx,rcx
   140004bcd:	je     0x140004bdc
   140004bcf:	call   QWORD PTR [rip+0x2a8ab]        # 0x14002f480
   140004bd5:	mov    QWORD PTR [rip+0x3cd94],rsi        # 0x140041970
   140004bdc:	mov    rcx,QWORD PTR [rip+0x3cd95]        # 0x140041978
   140004be3:	test   rcx,rcx
   140004be6:	je     0x140004bf5
   140004be8:	call   QWORD PTR [rip+0x2a892]        # 0x14002f480
   140004bee:	mov    QWORD PTR [rip+0x3cd83],rsi        # 0x140041978
   140004bf5:	mov    rcx,QWORD PTR [rip+0x3cd84]        # 0x140041980
   140004bfc:	test   rcx,rcx
   140004bff:	je     0x140004c0e
   140004c01:	call   QWORD PTR [rip+0x2a879]        # 0x14002f480
   140004c07:	mov    QWORD PTR [rip+0x3cd72],rsi        # 0x140041980
   140004c0e:	movzx  eax,WORD PTR [rip+0x3cdbf]        # 0x1400419d4
   140004c15:	mov    QWORD PTR [rsp+0x30],rbx
   140004c1a:	mov    QWORD PTR [rsp+0x38],rdi
   140004c1f:	cmp    si,ax
   140004c22:	jae    0x140004c4a
   140004c24:	lea    rbx,[rip+0x3bad5]        # 0x140040700
   140004c2b:	movzx  edi,ax
   140004c2e:	xchg   ax,ax
   140004c30:	mov    rcx,QWORD PTR [rbx]
   140004c33:	test   rcx,rcx
   140004c36:	je     0x140004c41
   140004c38:	call   QWORD PTR [rip+0x2a842]        # 0x14002f480
   140004c3e:	mov    QWORD PTR [rbx],rsi
   140004c41:	add    rbx,0x8
   140004c45:	dec    rdi
   140004c48:	jne    0x140004c30
   140004c4a:	movzx  eax,WORD PTR [rip+0x3cd7f]        # 0x1400419d0
   140004c51:	cmp    si,ax
   140004c54:	jae    0x140004c7a
   140004c56:	lea    rbx,[rip+0x3c2b3]        # 0x140040f10
   140004c5d:	movzx  edi,ax
   140004c60:	mov    rcx,QWORD PTR [rbx]
   140004c63:	test   rcx,rcx
   140004c66:	je     0x140004c71
   140004c68:	call   QWORD PTR [rip+0x2a812]        # 0x14002f480
   140004c6e:	mov    QWORD PTR [rbx],rsi
   140004c71:	add    rbx,0x8
   140004c75:	dec    rdi
   140004c78:	jne    0x140004c60
   140004c7a:	mov    rdi,QWORD PTR [rsp+0x38]
   140004c7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c84:	add    rsp,0x20
   140004c88:	pop    rsi
   140004c89:	ret    
   140004c8a:	int3   
   140004c8b:	int3   
   140004c8c:	int3   
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	mov    QWORD PTR [rsp+0x18],rbx
   140004c95:	mov    QWORD PTR [rsp+0x20],rsi
   140004c9a:	push   rbp
   140004c9b:	push   rdi
   140004c9c:	push   r13
   140004c9e:	push   r14
   140004ca0:	push   r15
   140004ca2:	lea    rbp,[rsp-0x37]
   140004ca7:	sub    rsp,0x90
   140004cae:	mov    rax,QWORD PTR [rip+0x3734b]        # 0x14003c000
   140004cb5:	xor    rax,rsp
   140004cb8:	mov    QWORD PTR [rbp+0x27],rax
   140004cbc:	mov    rsi,QWORD PTR [rip+0x3b505]        # 0x1400401c8
   140004cc3:	mov    rbx,rcx
   140004cc6:	xor    r8d,r8d
   140004cc9:	mov    rcx,rsi
   140004ccc:	xor    edx,edx
   140004cce:	call   0x14002ad10
   140004cd3:	mov    rcx,QWORD PTR [rsi]
   140004cd6:	mov    edi,0x10
   140004cdb:	lea    r9,[rbp-0x9]
   140004cdf:	lea    rdx,[rip+0x3ee4a]        # 0x140043b30
   140004ce6:	xor    r13d,r13d
   140004ce9:	mov    r8d,edi
   140004cec:	mov    QWORD PTR [rsp+0x20],r13
   140004cf1:	call   QWORD PTR [rip+0x2a511]        # 0x14002f208
   140004cf7:	lea    r14,[rip+0xffffffffffffb302]        # 0x140000000
   140004cfe:	mov    r15d,0x106
   140004d04:	test   eax,eax
   140004d06:	jne    0x140004d39
   140004d08:	call   QWORD PTR [rip+0x2a452]        # 0x14002f160
   140004d0e:	cmp    eax,0x58
   140004d11:	jae    0x140004d1f
   140004d13:	mov    eax,eax
   140004d15:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140004d1d:	jmp    0x140004d22
   140004d1f:	mov    ecx,r15d
   140004d22:	mov    DWORD PTR [rip+0x3e390],ecx        # 0x1400430b8
   140004d28:	mov    DWORD PTR [rip+0x3e796],0x2        # 0x1400434c8
   140004d32:	mov    BYTE PTR [rip+0x3e687],r13b        # 0x1400433c0
   140004d39:	cmp    DWORD PTR [rbp-0x9],edi
   140004d3c:	je     0x140004d48
   140004d3e:	mov    eax,0x1
   140004d43:	jmp    0x14000639a
   140004d48:	cmp    BYTE PTR [rip+0x3ede1],0xff        # 0x140043b30
   140004d4f:	jne    0x140004d3e
   140004d51:	movzx  eax,WORD PTR [rip+0x3edd9]        # 0x140043b31
   140004d58:	cmp    ax,WORD PTR [rip+0x2c64d]        # 0x1400313ac
   140004d5f:	jne    0x140004d3e
   140004d61:	movzx  eax,BYTE PTR [rip+0x3edcb]        # 0x140043b33
   140004d68:	cmp    al,BYTE PTR [rip+0x2c640]        # 0x1400313ae
   140004d6e:	jne    0x140004d3e
   140004d70:	cmp    BYTE PTR [rip+0x3edc2],0xb        # 0x140043b39
   140004d77:	jne    0x140004d3e
   140004d79:	cmp    BYTE PTR [rip+0x3edba],0x3        # 0x140043b3a
   140004d80:	jne    0x140004d3e
   140004d82:	cmp    BYTE PTR [rip+0x3edb2],r13b        # 0x140043b3b
   140004d89:	jne    0x140004d3e
   140004d8b:	lea    rdx,[rip+0x3ed9e]        # 0x140043b30
   140004d92:	mov    rcx,rbx
   140004d95:	sub    rdx,rbx
   140004d98:	nop    DWORD PTR [rax+rax*1+0x0]
   140004da0:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140004da4:	lea    rcx,[rcx+0x1]
   140004da8:	mov    BYTE PTR [rcx-0x1],al
   140004dab:	dec    rdi
   140004dae:	jne    0x140004da0
   140004db0:	mov    rcx,QWORD PTR [rsi]
   140004db3:	lea    r9,[rbp-0x9]
   140004db7:	lea    r8d,[rdi+0x2a]
   140004dbb:	lea    rdx,[rip+0x3ed6e]        # 0x140043b30
   140004dc2:	mov    QWORD PTR [rsp+0x20],r13
   140004dc7:	call   QWORD PTR [rip+0x2a43b]        # 0x14002f208
   140004dcd:	test   eax,eax
   140004dcf:	jne    0x140004e02
   140004dd1:	call   QWORD PTR [rip+0x2a389]        # 0x14002f160
   140004dd7:	cmp    eax,0x58
   140004dda:	jae    0x140004de8
   140004ddc:	mov    eax,eax
   140004dde:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140004de6:	jmp    0x140004deb
   140004de8:	mov    ecx,r15d
   140004deb:	mov    DWORD PTR [rip+0x3e2c7],ecx        # 0x1400430b8
   140004df1:	mov    DWORD PTR [rip+0x3e6cd],0x2        # 0x1400434c8
   140004dfb:	mov    BYTE PTR [rip+0x3e5be],r13b        # 0x1400433c0
   140004e02:	cmp    DWORD PTR [rbp-0x9],0x2a
   140004e06:	jne    0x140004d3e
   140004e0c:	movzx  eax,BYTE PTR [rip+0x3ed1d]        # 0x140043b30
   140004e13:	mov    BYTE PTR [rbx+0x10],al
   140004e16:	cmp    BYTE PTR [rbx+0x10],0x4d
   140004e1a:	movzx  eax,BYTE PTR [rip+0x3ed10]        # 0x140043b31
   140004e21:	mov    BYTE PTR [rbx+0x11],al
   140004e24:	je     0x140004e33
   140004e26:	cmp    BYTE PTR [rip+0x3ed04],0x53        # 0x140043b31
   140004e2d:	jne    0x140004d3e
   140004e33:	movzx  eax,BYTE PTR [rip+0x3ecf8]        # 0x140043b32
   140004e3a:	lea    r9,[rbp-0x9]
   140004e3e:	lea    rdx,[rip+0x3eceb]        # 0x140043b30
   140004e45:	mov    BYTE PTR [rbx+0x12],al
   140004e48:	movzx  eax,BYTE PTR [rip+0x3ece4]        # 0x140043b33
   140004e4f:	mov    r8d,0x3b
   140004e55:	mov    BYTE PTR [rbx+0x13],al
   140004e58:	movzx  eax,BYTE PTR [rip+0x3ecd5]        # 0x140043b34
   140004e5f:	mov    QWORD PTR [rsp+0x20],r13
   140004e64:	mov    BYTE PTR [rbx+0x14],al
   140004e67:	movzx  eax,BYTE PTR [rip+0x3ecc7]        # 0x140043b35
   140004e6e:	mov    BYTE PTR [rbx+0x15],al
   140004e71:	movzx  eax,BYTE PTR [rip+0x3ecbe]        # 0x140043b36
   140004e78:	mov    BYTE PTR [rbx+0x16],al
   140004e7b:	movzx  eax,BYTE PTR [rip+0x3ecb5]        # 0x140043b37
   140004e82:	mov    BYTE PTR [rbx+0x17],al
   140004e85:	movzx  eax,WORD PTR [rip+0x3ecac]        # 0x140043b38
   140004e8c:	mov    WORD PTR [rbx+0x18],ax
   140004e90:	mov    eax,DWORD PTR [rip+0x3eca4]        # 0x140043b3a
   140004e96:	mov    DWORD PTR [rbx+0x1c],eax
   140004e99:	mov    eax,DWORD PTR [rip+0x3ec9f]        # 0x140043b3e
   140004e9f:	mov    DWORD PTR [rbx+0x20],eax
   140004ea2:	mov    eax,DWORD PTR [rip+0x3ec9a]        # 0x140043b42
   140004ea8:	mov    DWORD PTR [rbx+0x24],eax
   140004eab:	mov    eax,DWORD PTR [rip+0x3ec95]        # 0x140043b46
   140004eb1:	mov    DWORD PTR [rbx+0x28],eax
   140004eb4:	mov    eax,DWORD PTR [rip+0x3ec90]        # 0x140043b4a
   140004eba:	mov    DWORD PTR [rbx+0x2c],eax
   140004ebd:	mov    eax,DWORD PTR [rip+0x3ec8b]        # 0x140043b4e
   140004ec3:	mov    DWORD PTR [rbx+0x30],eax
   140004ec6:	mov    eax,DWORD PTR [rip+0x3ec86]        # 0x140043b52
   140004ecc:	mov    DWORD PTR [rbx+0x34],eax
   140004ecf:	mov    eax,DWORD PTR [rip+0x3ec81]        # 0x140043b56
   140004ed5:	mov    DWORD PTR [rbx+0x38],eax
   140004ed8:	mov    rcx,QWORD PTR [rsi]
   140004edb:	call   QWORD PTR [rip+0x2a327]        # 0x14002f208
   140004ee1:	test   eax,eax
   140004ee3:	jne    0x140004f16
   140004ee5:	call   QWORD PTR [rip+0x2a275]        # 0x14002f160
   140004eeb:	cmp    eax,0x58
   140004eee:	jae    0x140004efc
   140004ef0:	mov    eax,eax
   140004ef2:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140004efa:	jmp    0x140004eff
   140004efc:	mov    ecx,r15d
   140004eff:	mov    DWORD PTR [rip+0x3e1b3],ecx        # 0x1400430b8
   140004f05:	mov    DWORD PTR [rip+0x3e5b9],0x2        # 0x1400434c8
   140004f0f:	mov    BYTE PTR [rip+0x3e4aa],r13b        # 0x1400433c0
   140004f16:	cmp    DWORD PTR [rbp-0x9],0x3b
   140004f1a:	jne    0x140004d3e
   140004f20:	movzx  eax,BYTE PTR [rip+0x3ec09]        # 0x140043b30
   140004f27:	mov    edx,DWORD PTR [rbx+0x20]
   140004f2a:	xor    r8d,r8d
   140004f2d:	mov    BYTE PTR [rbx+0x3c],al
   140004f30:	movzx  eax,BYTE PTR [rip+0x3ebfa]        # 0x140043b31
   140004f37:	mov    rcx,rsi
   140004f3a:	mov    BYTE PTR [rbx+0x3d],al
   140004f3d:	mov    eax,DWORD PTR [rip+0x3ebef]        # 0x140043b32
   140004f43:	mov    DWORD PTR [rbx+0x40],eax
   140004f46:	movzx  eax,WORD PTR [rip+0x3ebe9]        # 0x140043b36
   140004f4d:	mov    WORD PTR [rbx+0x44],ax
   140004f51:	mov    eax,DWORD PTR [rip+0x3ebe1]        # 0x140043b38
   140004f57:	mov    DWORD PTR [rbx+0x48],eax
   140004f5a:	movzx  eax,WORD PTR [rip+0x3ebdb]        # 0x140043b3c
   140004f61:	mov    WORD PTR [rbx+0x4c],ax
   140004f65:	movzx  eax,WORD PTR [rip+0x3ebd2]        # 0x140043b3e
   140004f6c:	mov    WORD PTR [rbx+0x4e],ax
   140004f70:	mov    eax,DWORD PTR [rip+0x3ebca]        # 0x140043b40
   140004f76:	mov    DWORD PTR [rbx+0x50],eax
   140004f79:	mov    eax,DWORD PTR [rip+0x3ebc5]        # 0x140043b44
   140004f7f:	mov    DWORD PTR [rbx+0x54],eax
   140004f82:	mov    eax,DWORD PTR [rip+0x3ebc0]        # 0x140043b48
   140004f88:	mov    DWORD PTR [rbx+0x58],eax
   140004f8b:	mov    eax,DWORD PTR [rip+0x3ebbb]        # 0x140043b4c
   140004f91:	mov    DWORD PTR [rbx+0x5c],eax
   140004f94:	mov    eax,DWORD PTR [rip+0x3ebb6]        # 0x140043b50
   140004f9a:	mov    DWORD PTR [rbx+0x60],eax
   140004f9d:	mov    eax,DWORD PTR [rip+0x3ebb1]        # 0x140043b54
   140004fa3:	mov    DWORD PTR [rbx+0x64],eax
   140004fa6:	mov    eax,DWORD PTR [rip+0x3ebac]        # 0x140043b58
   140004fac:	mov    DWORD PTR [rbx+0x68],eax
   140004faf:	movzx  eax,WORD PTR [rip+0x3eba6]        # 0x140043b5c
   140004fb6:	mov    WORD PTR [rbx+0x6c],ax
   140004fba:	movzx  eax,WORD PTR [rip+0x3eb9b]        # 0x140043b5c
   140004fc1:	mov    WORD PTR [rip+0x39e84],ax        # 0x14003ee4c
   140004fc8:	mov    eax,DWORD PTR [rip+0x3eb90]        # 0x140043b5e
   140004fce:	mov    DWORD PTR [rbx+0x70],eax
   140004fd1:	movzx  eax,WORD PTR [rip+0x3eb8a]        # 0x140043b62
   140004fd8:	mov    WORD PTR [rbx+0x74],ax
   140004fdc:	mov    eax,DWORD PTR [rip+0x3eb82]        # 0x140043b64
   140004fe2:	mov    DWORD PTR [rbx+0x78],eax
   140004fe5:	movzx  eax,WORD PTR [rip+0x3eb7c]        # 0x140043b68
   140004fec:	mov    WORD PTR [rbx+0x7c],ax
   140004ff0:	movzx  eax,BYTE PTR [rip+0x3eb73]        # 0x140043b6a
   140004ff7:	mov    BYTE PTR [rbx+0x7e],al
   140004ffa:	call   0x14002ad10
   140004fff:	cmp    WORD PTR [rbx+0x44],r13w
   140005004:	jbe    0x140005034
   140005006:	mov    edx,DWORD PTR [rbx+0x40]
   140005009:	xor    r8d,r8d
   14000500c:	mov    rcx,rsi
   14000500f:	call   0x14002ad10
   140005014:	movzx  r9d,WORD PTR [rbx+0x44]
   140005019:	mov    edx,DWORD PTR [rbx+0x40]
   14000501c:	lea    r8,[rip+0x390e5]        # 0x14003e108
   140005023:	mov    rcx,rsi
   140005026:	call   0x140006470
   14000502b:	test   ax,ax
   14000502e:	jne    0x14000639a
   140005034:	cmp    WORD PTR [rbx+0x4e],r13w
   140005039:	jbe    0x1400050ed
   14000503f:	mov    edx,DWORD PTR [rbx+0x48]
   140005042:	xor    r8d,r8d
   140005045:	mov    rcx,rsi
   140005048:	call   0x14002ad10
   14000504d:	movzx  r9d,WORD PTR [rbx+0x4e]
   140005052:	mov    edx,DWORD PTR [rbx+0x48]
   140005055:	lea    r8,[rip+0x3d8dc]        # 0x140042938
   14000505c:	shl    r9w,0x3
   140005061:	mov    rcx,rsi
   140005064:	call   0x140006470
   140005069:	test   ax,ax
   14000506c:	jne    0x14000639a
   140005072:	mov    rcx,QWORD PTR [rip+0x3d8bf]        # 0x140042938
   140005079:	movzx  edi,r13w
   14000507d:	mov    r8,rcx
   140005080:	mov    QWORD PTR [rip+0x3c689],rcx        # 0x140041710
   140005087:	cmp    r13w,WORD PTR [rbx+0x4e]
   14000508c:	jge    0x1400050ed
   14000508e:	xchg   ax,ax
   140005090:	movsx  rax,di
   140005094:	inc    di
   140005097:	lea    rdx,[rax*8+0x0]
   14000509f:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400050a3:	mov    WORD PTR [rdx+r8*1],ax
   1400050a8:	mov    rax,QWORD PTR [rip+0x3d889]        # 0x140042938
   1400050af:	movzx  ecx,WORD PTR [rdx+rax*1+0x2]
   1400050b4:	mov    WORD PTR [rdx+r8*1+0x2],cx
   1400050ba:	mov    rax,QWORD PTR [rip+0x3d877]        # 0x140042938
   1400050c1:	movzx  ecx,WORD PTR [rdx+rax*1+0x4]
   1400050c6:	mov    WORD PTR [rdx+r8*1+0x4],cx
   1400050cc:	mov    rax,QWORD PTR [rip+0x3d865]        # 0x140042938
   1400050d3:	movzx  ecx,WORD PTR [rdx+rax*1+0x6]
   1400050d8:	mov    WORD PTR [rdx+r8*1+0x6],cx
   1400050de:	cmp    di,WORD PTR [rbx+0x4e]
   1400050e2:	jge    0x1400050ed
   1400050e4:	mov    rcx,QWORD PTR [rip+0x3d84d]        # 0x140042938
   1400050eb:	jmp    0x140005090
   1400050ed:	movsx  rax,WORD PTR [rbx+0x4c]
   1400050f2:	mov    WORD PTR [rip+0x39d6b],ax        # 0x14003ee64
   1400050f9:	mov    rdi,rax
   1400050fc:	lea    eax,[rax+rax*4]
   1400050ff:	lea    ecx,[rax+rax*1]
   140005102:	call   QWORD PTR [rip+0x2a310]        # 0x14002f418
   140005108:	mov    QWORD PTR [rip+0x3c991],rax        # 0x140041aa0
   14000510f:	test   rax,rax
   140005112:	jne    0x14000511e
   140005114:	mov    eax,0x4
   140005119:	jmp    0x14000639a
   14000511e:	lea    ecx,[rdi*8+0x0]
   140005125:	call   QWORD PTR [rip+0x2a2ed]        # 0x14002f418
   14000512b:	mov    QWORD PTR [rip+0x3d7fe],rax        # 0x140042930
   140005132:	test   rax,rax
   140005135:	je     0x140005114
   140005137:	mov    edx,DWORD PTR [rbx+0x48]
   14000513a:	test   edx,edx
   14000513c:	je     0x140005150
   14000513e:	xor    r8d,r8d
   140005141:	mov    rcx,rsi
   140005144:	call   0x14002ad10
   140005149:	mov    rax,QWORD PTR [rip+0x3d7e0]        # 0x140042930
   140005150:	movzx  r8d,WORD PTR [rbx+0x4c]
   140005155:	mov    rcx,QWORD PTR [rsi]
   140005158:	lea    r9,[rbp-0x5]
   14000515c:	shl    r8d,0x3
   140005160:	mov    rdx,rax
   140005163:	mov    QWORD PTR [rsp+0x20],r13
   140005168:	call   QWORD PTR [rip+0x2a09a]        # 0x14002f208
   14000516e:	test   eax,eax
   140005170:	jne    0x14000517f
   140005172:	lea    rcx,[rbp-0x5]
   140005176:	call   0x14002acc0
   14000517b:	mov    ecx,eax
   14000517d:	jmp    0x140005182
   14000517f:	mov    ecx,DWORD PTR [rbp-0x5]
   140005182:	movzx  eax,WORD PTR [rbx+0x4c]
   140005186:	shl    eax,0x3
   140005189:	cmp    ecx,eax
   14000518b:	jne    0x140004d3e
   140005191:	movzx  eax,WORD PTR [rip+0x39ccc]        # 0x14003ee64
   140005198:	mov    rdx,QWORD PTR [rip+0x3c901]        # 0x140041aa0
   14000519f:	mov    rcx,QWORD PTR [rip+0x3d78a]        # 0x140042930
   1400051a6:	mov    QWORD PTR [rsp+0xc8],r12
   1400051ae:	mov    QWORD PTR [rip+0x38d53],rdx        # 0x14003df08
   1400051b5:	mov    r14d,0x1
   1400051bb:	cmp    r13w,ax
   1400051bf:	jge    0x140005209
   1400051c1:	lea    rdi,[rcx+0x4]
   1400051c5:	movzx  r8d,ax
   1400051c9:	nop    DWORD PTR [rax+0x0]
   1400051d0:	movzx  eax,WORD PTR [rdi-0x4]
   1400051d4:	add    rdx,0xa
   1400051d8:	lea    rdi,[rdi+0x8]
   1400051dc:	mov    WORD PTR [rdx-0x8],ax
   1400051e0:	movzx  eax,WORD PTR [rdi-0xa]
   1400051e4:	mov    WORD PTR [rdx-0xa],ax
   1400051e8:	movzx  eax,WORD PTR [rdi-0x8]
   1400051ec:	mov    WORD PTR [rdx-0x6],ax
   1400051f0:	movzx  eax,WORD PTR [rdi-0x6]
   1400051f4:	mov    WORD PTR [rdx-0x2],r14w
   1400051f9:	mov    WORD PTR [rdx-0x4],ax
   1400051fd:	dec    r8
   140005200:	jne    0x1400051d0
   140005202:	mov    QWORD PTR [rip+0x38cff],rdx        # 0x14003df08
   140005209:	call   QWORD PTR [rip+0x2a271]        # 0x14002f480
   14000520f:	mov    edi,DWORD PTR [rbx+0x5c]
   140005212:	mov    ecx,edi
   140005214:	mov    DWORD PTR [rip+0x38ce6],edi        # 0x14003df00
   14000521a:	call   QWORD PTR [rip+0x2a1f8]        # 0x14002f418
   140005220:	mov    QWORD PTR [rip+0x3c4f1],rax        # 0x140041718
   140005227:	test   rax,rax
   14000522a:	je     0x140005ca8
   140005230:	mov    ecx,edi
   140005232:	call   QWORD PTR [rip+0x2a1e0]        # 0x14002f418
   140005238:	mov    QWORD PTR [rip+0x3d6f1],rax        # 0x140042930
   14000523f:	test   rax,rax
   140005242:	je     0x140005ca8
   140005248:	mov    edx,DWORD PTR [rbx+0x58]
   14000524b:	test   edx,edx
   14000524d:	je     0x140005267
   14000524f:	xor    r8d,r8d
   140005252:	mov    rcx,rsi
   140005255:	call   0x14002ad10
   14000525a:	mov    rax,QWORD PTR [rip+0x3d6cf]        # 0x140042930
   140005261:	mov    edi,DWORD PTR [rip+0x38c99]        # 0x14003df00
   140005267:	mov    rcx,QWORD PTR [rsi]
   14000526a:	lea    r9,[rbp-0x5]
   14000526e:	mov    r8d,edi
   140005271:	mov    rdx,rax
   140005274:	mov    QWORD PTR [rsp+0x20],r13
   140005279:	call   QWORD PTR [rip+0x29f89]        # 0x14002f208
   14000527f:	test   eax,eax
   140005281:	jne    0x140005290
   140005283:	lea    rcx,[rbp-0x5]
   140005287:	call   0x14002acc0
   14000528c:	mov    ecx,eax
   14000528e:	jmp    0x140005293
   140005290:	mov    ecx,DWORD PTR [rbp-0x5]
   140005293:	mov    eax,DWORD PTR [rip+0x38c67]        # 0x14003df00
   140005299:	cmp    ecx,eax
   14000529b:	jne    0x1400054da
   1400052a1:	mov    rdx,QWORD PTR [rip+0x3c470]        # 0x140041718
   1400052a8:	mov    rcx,QWORD PTR [rip+0x3d681]        # 0x140042930
   1400052af:	shr    eax,0x3
   1400052b2:	mov    WORD PTR [rip+0x3c6a7],ax        # 0x140041960
   1400052b9:	mov    QWORD PTR [rip+0x3b228],rdx        # 0x1400404e8
   1400052c0:	cmp    r13w,ax
   1400052c4:	jge    0x1400052ef
   1400052c6:	mov    rdi,rcx
   1400052c9:	movzx  r8d,ax
   1400052cd:	nop    DWORD PTR [rax]
   1400052d0:	mov    eax,DWORD PTR [rdi]
   1400052d2:	add    rdx,0x8
   1400052d6:	add    rdi,0x8
   1400052da:	mov    DWORD PTR [rdx-0x8],eax
   1400052dd:	mov    eax,DWORD PTR [rdi-0x4]
   1400052e0:	mov    DWORD PTR [rdx-0x4],eax
   1400052e3:	dec    r8
   1400052e6:	jne    0x1400052d0
   1400052e8:	mov    QWORD PTR [rip+0x3b1f9],rdx        # 0x1400404e8
   1400052ef:	call   QWORD PTR [rip+0x2a18b]        # 0x14002f480
   1400052f5:	cmp    DWORD PTR [rbx+0x54],r13d
   1400052f9:	jbe    0x140005776
   1400052ff:	mov    edx,DWORD PTR [rbx+0x50]
   140005302:	xor    r8d,r8d
   140005305:	mov    rcx,rsi
   140005308:	call   0x14002ad10
   14000530d:	mov    rcx,QWORD PTR [rsi]
   140005310:	lea    r9,[rbp-0x9]
   140005314:	lea    rdx,[rbp-0x5]
   140005318:	mov    r8d,0x2
   14000531e:	mov    QWORD PTR [rsp+0x20],r13
   140005323:	call   QWORD PTR [rip+0x29edf]        # 0x14002f208
   140005329:	test   eax,eax
   14000532b:	jne    0x140005364
   14000532d:	call   QWORD PTR [rip+0x29e2d]        # 0x14002f160
   140005333:	cmp    eax,0x58
   140005336:	jae    0x14000534a
   140005338:	lea    rcx,[rip+0xffffffffffffacc1]        # 0x140000000
   14000533f:	mov    eax,eax
   140005341:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005348:	jmp    0x14000534d
   14000534a:	mov    ecx,r15d
   14000534d:	mov    DWORD PTR [rip+0x3dd65],ecx        # 0x1400430b8
   140005353:	mov    DWORD PTR [rip+0x3e16b],0x2        # 0x1400434c8
   14000535d:	mov    BYTE PTR [rip+0x3e05c],r13b        # 0x1400433c0
   140005364:	cmp    DWORD PTR [rbp-0x9],0x2
   140005368:	jne    0x1400054da
   14000536e:	movzx  edi,WORD PTR [rbp-0x5]
   140005372:	mov    ecx,edi
   140005374:	call   QWORD PTR [rip+0x2a09e]        # 0x14002f418
   14000537a:	mov    QWORD PTR [rip+0x3ae3f],rax        # 0x1400401c0
   140005381:	test   rax,rax
   140005384:	je     0x14000546b
   14000538a:	mov    rcx,QWORD PTR [rsi]
   14000538d:	movzx  r12d,di
   140005391:	lea    r9,[rbp-0x9]
   140005395:	mov    r8d,r12d
   140005398:	mov    rdx,rax
   14000539b:	mov    QWORD PTR [rsp+0x20],r13
   1400053a0:	call   QWORD PTR [rip+0x29e62]        # 0x14002f208
   1400053a6:	test   eax,eax
   1400053a8:	jne    0x1400053e1
   1400053aa:	call   QWORD PTR [rip+0x29db0]        # 0x14002f160
   1400053b0:	cmp    eax,0x58
   1400053b3:	jae    0x1400053c7
   1400053b5:	lea    rcx,[rip+0xffffffffffffac44]        # 0x140000000
   1400053bc:	mov    eax,eax
   1400053be:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400053c5:	jmp    0x1400053ca
   1400053c7:	mov    ecx,r15d
   1400053ca:	mov    DWORD PTR [rip+0x3dce8],ecx        # 0x1400430b8
   1400053d0:	mov    DWORD PTR [rip+0x3e0ee],0x2        # 0x1400434c8
   1400053da:	mov    BYTE PTR [rip+0x3dfdf],r13b        # 0x1400433c0
   1400053e1:	cmp    DWORD PTR [rbp-0x9],r12d
   1400053e5:	jne    0x1400054d6
   1400053eb:	mov    rcx,QWORD PTR [rsi]
   1400053ee:	lea    r9,[rbp-0x9]
   1400053f2:	lea    rdx,[rbp-0x5]
   1400053f6:	mov    r8d,0x2
   1400053fc:	mov    WORD PTR [rip+0x3c5d5],di        # 0x1400419d8
   140005403:	mov    QWORD PTR [rsp+0x20],r13
   140005408:	call   QWORD PTR [rip+0x29dfa]        # 0x14002f208
   14000540e:	test   eax,eax
   140005410:	jne    0x140005449
   140005412:	call   QWORD PTR [rip+0x29d48]        # 0x14002f160
   140005418:	cmp    eax,0x58
   14000541b:	jae    0x14000542f
   14000541d:	lea    rcx,[rip+0xffffffffffffabdc]        # 0x140000000
   140005424:	mov    eax,eax
   140005426:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000542d:	jmp    0x140005432
   14000542f:	mov    ecx,r15d
   140005432:	mov    DWORD PTR [rip+0x3dc80],ecx        # 0x1400430b8
   140005438:	mov    DWORD PTR [rip+0x3e086],0x2        # 0x1400434c8
   140005442:	mov    BYTE PTR [rip+0x3df77],r13b        # 0x1400433c0
   140005449:	cmp    DWORD PTR [rbp-0x9],0x2
   14000544d:	jne    0x1400054da
   140005453:	movzx  edi,WORD PTR [rbp-0x5]
   140005457:	mov    ecx,edi
   140005459:	call   QWORD PTR [rip+0x29fb9]        # 0x14002f418
   14000545f:	mov    QWORD PTR [rip+0x3ad6a],rax        # 0x1400401d0
   140005466:	test   rax,rax
   140005469:	jne    0x140005479
   14000546b:	mov    eax,0x4
   140005470:	movzx  r14d,ax
   140005474:	jmp    0x140006392
   140005479:	mov    rcx,QWORD PTR [rsi]
   14000547c:	movzx  r12d,di
   140005480:	lea    r9,[rbp-0x9]
   140005484:	mov    r8d,r12d
   140005487:	mov    rdx,rax
   14000548a:	mov    QWORD PTR [rsp+0x20],r13
   14000548f:	call   QWORD PTR [rip+0x29d73]        # 0x14002f208
   140005495:	test   eax,eax
   140005497:	jne    0x1400054d0
   140005499:	call   QWORD PTR [rip+0x29cc1]        # 0x14002f160
   14000549f:	cmp    eax,0x58
   1400054a2:	jae    0x1400054b6
   1400054a4:	lea    rcx,[rip+0xffffffffffffab55]        # 0x140000000
   1400054ab:	mov    eax,eax
   1400054ad:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400054b4:	jmp    0x1400054b9
   1400054b6:	mov    ecx,r15d
   1400054b9:	mov    DWORD PTR [rip+0x3dbf9],ecx        # 0x1400430b8
   1400054bf:	mov    DWORD PTR [rip+0x3dfff],0x2        # 0x1400434c8
   1400054c9:	mov    BYTE PTR [rip+0x3def0],r13b        # 0x1400433c0
   1400054d0:	cmp    DWORD PTR [rbp-0x9],r12d
   1400054d4:	je     0x1400054e3
   1400054d6:	movzx  eax,r14w
   1400054da:	movzx  eax,r14w
   1400054de:	jmp    0x140006392
   1400054e3:	mov    rcx,QWORD PTR [rsi]
   1400054e6:	lea    r9,[rbp-0x9]
   1400054ea:	lea    rdx,[rbp-0x5]
   1400054ee:	mov    r8d,0x2
   1400054f4:	mov    WORD PTR [rip+0x3c469],di        # 0x140041964
   1400054fb:	mov    QWORD PTR [rsp+0x20],r13
   140005500:	call   QWORD PTR [rip+0x29d02]        # 0x14002f208
   140005506:	test   eax,eax
   140005508:	jne    0x140005541
   14000550a:	call   QWORD PTR [rip+0x29c50]        # 0x14002f160
   140005510:	cmp    eax,0x58
   140005513:	jae    0x140005527
   140005515:	lea    rcx,[rip+0xffffffffffffaae4]        # 0x140000000
   14000551c:	mov    eax,eax
   14000551e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005525:	jmp    0x14000552a
   140005527:	mov    ecx,r15d
   14000552a:	mov    DWORD PTR [rip+0x3db88],ecx        # 0x1400430b8
   140005530:	mov    DWORD PTR [rip+0x3df8e],0x2        # 0x1400434c8
   14000553a:	mov    BYTE PTR [rip+0x3de7f],r13b        # 0x1400433c0
   140005541:	cmp    DWORD PTR [rbp-0x9],0x2
   140005545:	jne    0x1400054da
   140005547:	movzx  edi,WORD PTR [rbp-0x5]
   14000554b:	mov    ecx,edi
   14000554d:	mov    WORD PTR [rbp-0x5],di
   140005551:	call   QWORD PTR [rip+0x29ec1]        # 0x14002f418
   140005557:	mov    QWORD PTR [rip+0x3b192],rax        # 0x1400406f0
   14000555e:	test   rax,rax
   140005561:	je     0x140005ca8
   140005567:	mov    rcx,QWORD PTR [rsi]
   14000556a:	movzx  r12d,di
   14000556e:	lea    r9,[rbp-0x9]
   140005572:	mov    r8d,r12d
   140005575:	mov    rdx,rax
   140005578:	mov    QWORD PTR [rsp+0x20],r13
   14000557d:	call   QWORD PTR [rip+0x29c85]        # 0x14002f208
   140005583:	test   eax,eax
   140005585:	jne    0x1400055be
   140005587:	call   QWORD PTR [rip+0x29bd3]        # 0x14002f160
   14000558d:	cmp    eax,0x58
   140005590:	jae    0x1400055a4
   140005592:	lea    rcx,[rip+0xffffffffffffaa67]        # 0x140000000
   140005599:	mov    eax,eax
   14000559b:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400055a2:	jmp    0x1400055a7
   1400055a4:	mov    ecx,r15d
   1400055a7:	mov    DWORD PTR [rip+0x3db0b],ecx        # 0x1400430b8
   1400055ad:	mov    DWORD PTR [rip+0x3df11],0x2        # 0x1400434c8
   1400055b7:	mov    BYTE PTR [rip+0x3de02],r13b        # 0x1400433c0
   1400055be:	cmp    DWORD PTR [rbp-0x9],r12d
   1400055c2:	jne    0x1400054da
   1400055c8:	lea    rdx,[rbp-0x5]
   1400055cc:	mov    rcx,rsi
   1400055cf:	mov    WORD PTR [rip+0x3c34a],di        # 0x140041920
   1400055d6:	call   0x1400063d0
   1400055db:	test   ax,ax
   1400055de:	jne    0x140006392
   1400055e4:	movzx  r12d,WORD PTR [rbp-0x5]
   1400055e9:	mov    edi,0xffff
   1400055ee:	cmp    r12w,di
   1400055f2:	je     0x14000569d
   1400055f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140005600:	lea    rax,[rip+0xffffffffffffa9f9]        # 0x140000000
   140005607:	movsx  rdi,r13w
   14000560b:	movzx  ecx,r12w
   14000560f:	mov    WORD PTR [rax+rdi*2+0x404f0],r12w
   140005618:	call   QWORD PTR [rip+0x29dfa]        # 0x14002f418
   14000561e:	lea    rcx,[rip+0xffffffffffffa9db]        # 0x140000000
   140005625:	mov    QWORD PTR [rcx+rdi*8+0x40700],rax
   14000562d:	test   rax,rax
   140005630:	je     0x140005ca8
   140005636:	mov    rcx,QWORD PTR [rsi]
   140005639:	movsx  edi,r12w
   14000563d:	lea    r9,[rbp-0x9]
   140005641:	mov    r8d,edi
   140005644:	mov    rdx,rax
   140005647:	mov    QWORD PTR [rsp+0x20],0x0
   140005650:	call   QWORD PTR [rip+0x29bb2]        # 0x14002f208
   140005656:	test   eax,eax
   140005658:	jne    0x140005665
   14000565a:	lea    rcx,[rbp-0x9]
   14000565e:	call   0x14002acc0
   140005663:	jmp    0x140005668
   140005665:	mov    eax,DWORD PTR [rbp-0x9]
   140005668:	cmp    eax,edi
   14000566a:	jne    0x140005d26
   140005670:	lea    rdx,[rbp-0x5]
   140005674:	mov    rcx,rsi
   140005677:	call   0x1400063d0
   14000567c:	test   ax,ax
   14000567f:	jne    0x140006392
   140005685:	movzx  r12d,WORD PTR [rbp-0x5]
   14000568a:	mov    edi,0xffff
   14000568f:	inc    r13w
   140005693:	cmp    r12w,di
   140005697:	jne    0x140005600
   14000569d:	lea    rdx,[rbp-0x5]
   1400056a1:	mov    rcx,rsi
   1400056a4:	mov    WORD PTR [rip+0x3c328],r13w        # 0x1400419d4
   1400056ac:	call   0x1400063d0
   1400056b1:	test   ax,ax
   1400056b4:	jne    0x140006392
   1400056ba:	movzx  r12d,WORD PTR [rbp-0x5]
   1400056bf:	xor    eax,eax
   1400056c1:	movzx  r13d,ax
   1400056c5:	cmp    r12w,di
   1400056c9:	je     0x14000576b
   1400056cf:	nop
   1400056d0:	lea    rax,[rip+0xffffffffffffa929]        # 0x140000000
   1400056d7:	movsx  rdi,r13w
   1400056db:	movzx  ecx,r12w
   1400056df:	mov    WORD PTR [rax+rdi*2+0x41720],r12w
   1400056e8:	call   QWORD PTR [rip+0x29d2a]        # 0x14002f418
   1400056ee:	lea    rcx,[rip+0xffffffffffffa90b]        # 0x140000000
   1400056f5:	mov    QWORD PTR [rcx+rdi*8+0x40f10],rax
   1400056fd:	test   rax,rax
   140005700:	je     0x140005ca8
   140005706:	xor    ecx,ecx
   140005708:	movsx  edi,r12w
   14000570c:	lea    r9,[rbp-0x9]
   140005710:	mov    QWORD PTR [rsp+0x20],rcx
   140005715:	mov    rcx,QWORD PTR [rsi]
   140005718:	mov    r8d,edi
   14000571b:	mov    rdx,rax
   14000571e:	call   QWORD PTR [rip+0x29ae4]        # 0x14002f208
   140005724:	test   eax,eax
   140005726:	jne    0x140005733
   140005728:	lea    rcx,[rbp-0x9]
   14000572c:	call   0x14002acc0
   140005731:	jmp    0x140005736
   140005733:	mov    eax,DWORD PTR [rbp-0x9]
   140005736:	cmp    eax,edi
   140005738:	jne    0x140005d26
   14000573e:	lea    rdx,[rbp-0x5]
   140005742:	mov    rcx,rsi
   140005745:	call   0x1400063d0
   14000574a:	test   ax,ax
   14000574d:	jne    0x140006392
   140005753:	movzx  r12d,WORD PTR [rbp-0x5]
   140005758:	mov    eax,0xffff
   14000575d:	inc    r13w
   140005761:	cmp    r12w,ax
   140005765:	jne    0x1400056d0
   14000576b:	mov    WORD PTR [rip+0x3c25d],r13w        # 0x1400419d0
   140005773:	xor    r13d,r13d
   140005776:	cmp    WORD PTR [rbx+0x6c],0x0
   14000577b:	jbe    0x1400057ab
   14000577d:	mov    edx,DWORD PTR [rbx+0x68]
   140005780:	xor    r8d,r8d
   140005783:	mov    rcx,rsi
   140005786:	call   0x14002ad10
   14000578b:	movzx  r9d,WORD PTR [rbx+0x6c]
   140005790:	mov    edx,DWORD PTR [rbx+0x68]
   140005793:	lea    r8,[rip+0x38976]        # 0x14003e110
   14000579a:	mov    rcx,rsi
   14000579d:	call   0x140006470
   1400057a2:	test   ax,ax
   1400057a5:	jne    0x140006392
   1400057ab:	cmp    WORD PTR [rbx+0x74],0x0
   1400057b0:	jbe    0x1400057e0
   1400057b2:	mov    edx,DWORD PTR [rbx+0x70]
   1400057b5:	xor    r8d,r8d
   1400057b8:	mov    rcx,rsi
   1400057bb:	call   0x14002ad10
   1400057c0:	movzx  r9d,WORD PTR [rbx+0x74]
   1400057c5:	mov    edx,DWORD PTR [rbx+0x70]
   1400057c8:	lea    r8,[rip+0x3c161]        # 0x140041930
   1400057cf:	mov    rcx,rsi
   1400057d2:	call   0x140006470
   1400057d7:	test   ax,ax
   1400057da:	jne    0x140006392
   1400057e0:	cmp    WORD PTR [rbx+0x7c],0x0
   1400057e5:	jbe    0x140005815
   1400057e7:	mov    edx,DWORD PTR [rbx+0x78]
   1400057ea:	xor    r8d,r8d
   1400057ed:	mov    rcx,rsi
   1400057f0:	call   0x14002ad10
   1400057f5:	movzx  r9d,WORD PTR [rbx+0x7c]
   1400057fa:	mov    edx,DWORD PTR [rbx+0x78]
   1400057fd:	lea    r8,[rip+0x3c124]        # 0x140041928
   140005804:	mov    rcx,rsi
   140005807:	call   0x140006470
   14000580c:	test   ax,ax
   14000580f:	jne    0x140006392
   140005815:	mov    edx,DWORD PTR [rbx+0x24]
   140005818:	xor    r8d,r8d
   14000581b:	mov    rcx,rsi
   14000581e:	call   0x14002ad10
   140005823:	mov    rcx,QWORD PTR [rsi]
   140005826:	lea    r9,[rbp-0x9]
   14000582a:	lea    rdx,[rip+0x3e2ff]        # 0x140043b30
   140005831:	mov    r8d,0x24
   140005837:	mov    QWORD PTR [rsp+0x20],r13
   14000583c:	call   QWORD PTR [rip+0x299c6]        # 0x14002f208
   140005842:	test   eax,eax
   140005844:	jne    0x14000587d
   140005846:	call   QWORD PTR [rip+0x29914]        # 0x14002f160
   14000584c:	cmp    eax,0x58
   14000584f:	jae    0x140005863
   140005851:	lea    rcx,[rip+0xffffffffffffa7a8]        # 0x140000000
   140005858:	mov    eax,eax
   14000585a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005861:	jmp    0x140005866
   140005863:	mov    ecx,r15d
   140005866:	mov    DWORD PTR [rip+0x3d84c],ecx        # 0x1400430b8
   14000586c:	mov    DWORD PTR [rip+0x3dc52],0x2        # 0x1400434c8
   140005876:	mov    BYTE PTR [rip+0x3db43],0x0        # 0x1400433c0
   14000587d:	cmp    DWORD PTR [rbp-0x9],0x24
   140005881:	jne    0x140005d26
   140005887:	movzx  eax,WORD PTR [rip+0x3e2a2]        # 0x140043b30
   14000588e:	mov    WORD PTR [rbx+0x80],ax
   140005895:	movzx  eax,WORD PTR [rip+0x3e296]        # 0x140043b32
   14000589c:	mov    WORD PTR [rbx+0x82],ax
   1400058a3:	mov    eax,DWORD PTR [rip+0x3e28b]        # 0x140043b34
   1400058a9:	mov    DWORD PTR [rbx+0x84],eax
   1400058af:	mov    eax,DWORD PTR [rip+0x3e283]        # 0x140043b38
   1400058b5:	mov    DWORD PTR [rbx+0x88],eax
   1400058bb:	movzx  eax,WORD PTR [rip+0x3e27a]        # 0x140043b3c
   1400058c2:	mov    WORD PTR [rbx+0x8c],ax
   1400058c9:	mov    eax,DWORD PTR [rip+0x3e26f]        # 0x140043b3e
   1400058cf:	mov    DWORD PTR [rbx+0x90],eax
   1400058d5:	movzx  eax,WORD PTR [rip+0x3e266]        # 0x140043b42
   1400058dc:	mov    WORD PTR [rbx+0x94],ax
   1400058e3:	movzx  eax,WORD PTR [rip+0x3e25a]        # 0x140043b44
   1400058ea:	mov    WORD PTR [rbx+0x96],ax
   1400058f1:	mov    eax,DWORD PTR [rip+0x3e24f]        # 0x140043b46
   1400058f7:	mov    DWORD PTR [rbx+0x98],eax
   1400058fd:	movzx  eax,WORD PTR [rip+0x3e246]        # 0x140043b4a
   140005904:	mov    WORD PTR [rbx+0x9c],ax
   14000590b:	mov    eax,DWORD PTR [rip+0x3e23b]        # 0x140043b4c
   140005911:	mov    DWORD PTR [rbx+0xa0],eax
   140005917:	mov    eax,DWORD PTR [rip+0x3e233]        # 0x140043b50
   14000591d:	mov    DWORD PTR [rbx+0xa4],eax
   140005923:	movzx  eax,WORD PTR [rbx+0x96]
   14000592a:	mov    WORD PTR [rip+0x3c059],ax        # 0x14004198a
   140005931:	movzx  eax,WORD PTR [rbx+0x9c]
   140005938:	mov    WORD PTR [rip+0x3c04d],ax        # 0x14004198c
   14000593f:	movzx  eax,WORD PTR [rbx+0x94]
   140005946:	mov    WORD PTR [rip+0x3c03b],ax        # 0x140041988
   14000594d:	movzx  r9d,WORD PTR [rbx+0x80]
   140005955:	test   r9w,r9w
   140005959:	je     0x1400059b2
   14000595b:	mov    edx,DWORD PTR [rbx+0x84]
   140005961:	inc    r9w
   140005965:	lea    r8,[rip+0x38784]        # 0x14003e0f0
   14000596c:	add    r9w,r9w
   140005970:	mov    rcx,rsi
   140005973:	call   0x140006470
   140005978:	test   ax,ax
   14000597b:	jne    0x140006392
   140005981:	movzx  eax,WORD PTR [rbx+0x80]
   140005988:	movzx  ecx,r13w
   14000598c:	inc    ax
   14000598f:	cmp    r13w,ax
   140005993:	jge    0x1400059b2
   140005995:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400059a0:	movzx  eax,WORD PTR [rbx+0x80]
   1400059a7:	inc    cx
   1400059aa:	inc    ax
   1400059ad:	cmp    cx,ax
   1400059b0:	jl     0x1400059a0
   1400059b2:	cmp    WORD PTR [rbx+0x80],0x0
   1400059ba:	jbe    0x1400059e2
   1400059bc:	movzx  r9d,WORD PTR [rbx+0x8c]
   1400059c4:	mov    edx,DWORD PTR [rbx+0x88]
   1400059ca:	lea    r8,[rip+0x38717]        # 0x14003e0e8
   1400059d1:	mov    rcx,rsi
   1400059d4:	call   0x140006470
   1400059d9:	test   ax,ax
   1400059dc:	jne    0x140006392
   1400059e2:	movzx  r9d,WORD PTR [rbx+0x94]
   1400059ea:	test   r9w,r9w
   1400059ee:	je     0x140005a0e
   1400059f0:	mov    edx,DWORD PTR [rbx+0x90]
   1400059f6:	lea    r8,[rip+0x3bf6b]        # 0x140041968
   1400059fd:	mov    rcx,rsi
   140005a00:	call   0x140006470
   140005a05:	test   ax,ax
   140005a08:	jne    0x140006392
   140005a0e:	movzx  r9d,WORD PTR [rbx+0x9c]
   140005a16:	test   r9w,r9w
   140005a1a:	je     0x140005a3a
   140005a1c:	mov    edx,DWORD PTR [rbx+0x98]
   140005a22:	lea    r8,[rip+0x3bf47]        # 0x140041970
   140005a29:	mov    rcx,rsi
   140005a2c:	call   0x140006470
   140005a31:	test   ax,ax
   140005a34:	jne    0x140006392
   140005a3a:	movzx  r9d,WORD PTR [rbx+0x96]
   140005a42:	test   r9w,r9w
   140005a46:	je     0x140005a8c
   140005a48:	mov    edx,DWORD PTR [rbx+0xa0]
   140005a4e:	lea    r8,[rip+0x3bf23]        # 0x140041978
   140005a55:	add    r9w,r9w
   140005a59:	mov    rcx,rsi
   140005a5c:	call   0x140006470
   140005a61:	test   ax,ax
   140005a64:	jne    0x140006392
   140005a6a:	movzx  eax,r13w
   140005a6e:	cmp    r13w,WORD PTR [rbx+0x96]
   140005a76:	jge    0x140005a8c
   140005a78:	nop    DWORD PTR [rax+rax*1+0x0]
   140005a80:	inc    ax
   140005a83:	cmp    ax,WORD PTR [rbx+0x96]
   140005a8a:	jl     0x140005a80
   140005a8c:	movzx  r9d,WORD PTR [rbx+0x96]
   140005a94:	test   r9w,r9w
   140005a98:	je     0x140005adc
   140005a9a:	mov    edx,DWORD PTR [rbx+0xa4]
   140005aa0:	lea    r8,[rip+0x3bed9]        # 0x140041980
   140005aa7:	add    r9w,r9w
   140005aab:	mov    rcx,rsi
   140005aae:	call   0x140006470
   140005ab3:	test   ax,ax
   140005ab6:	jne    0x140006392
   140005abc:	movzx  eax,r13w
   140005ac0:	cmp    r13w,WORD PTR [rbx+0x96]
   140005ac8:	jge    0x140005adc
   140005aca:	nop    WORD PTR [rax+rax*1+0x0]
   140005ad0:	inc    ax
   140005ad3:	cmp    ax,WORD PTR [rbx+0x96]
   140005ada:	jl     0x140005ad0
   140005adc:	mov    edx,DWORD PTR [rbx+0x2c]
   140005adf:	xor    r8d,r8d
   140005ae2:	mov    rcx,rsi
   140005ae5:	call   0x14002ad10
   140005aea:	mov    rcx,QWORD PTR [rsi]
   140005aed:	lea    r9,[rbp-0x9]
   140005af1:	lea    rdx,[rip+0x3e038]        # 0x140043b30
   140005af8:	mov    r8d,0x25
   140005afe:	mov    QWORD PTR [rsp+0x20],r13
   140005b03:	call   QWORD PTR [rip+0x296ff]        # 0x14002f208
   140005b09:	test   eax,eax
   140005b0b:	jne    0x140005b44
   140005b0d:	call   QWORD PTR [rip+0x2964d]        # 0x14002f160
   140005b13:	cmp    eax,0x58
   140005b16:	jae    0x140005b2a
   140005b18:	lea    rcx,[rip+0xffffffffffffa4e1]        # 0x140000000
   140005b1f:	mov    eax,eax
   140005b21:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005b28:	jmp    0x140005b2d
   140005b2a:	mov    ecx,r15d
   140005b2d:	mov    DWORD PTR [rip+0x3d585],ecx        # 0x1400430b8
   140005b33:	mov    DWORD PTR [rip+0x3d98b],0x2        # 0x1400434c8
   140005b3d:	mov    BYTE PTR [rip+0x3d87c],0x0        # 0x1400433c0
   140005b44:	cmp    DWORD PTR [rbp-0x9],0x25
   140005b48:	jne    0x1400054da
   140005b4e:	movzx  eax,WORD PTR [rip+0x3dfdb]        # 0x140043b30
   140005b55:	lea    rdi,[rip+0x383b4]        # 0x14003df10
   140005b5c:	lea    rdx,[rip+0x3dfdc]        # 0x140043b3f
   140005b63:	mov    WORD PTR [rbx+0xa8],ax
   140005b6a:	movzx  eax,WORD PTR [rip+0x3dfc1]        # 0x140043b32
   140005b71:	mov    ecx,0x16
   140005b76:	mov    WORD PTR [rbx+0xaa],ax
   140005b7d:	mov    eax,DWORD PTR [rip+0x3dfb1]        # 0x140043b34
   140005b83:	sub    rdx,rdi
   140005b86:	mov    DWORD PTR [rbx+0xac],eax
   140005b8c:	movzx  eax,WORD PTR [rip+0x3dfa5]        # 0x140043b38
   140005b93:	mov    WORD PTR [rbx+0xb0],ax
   140005b9a:	mov    eax,DWORD PTR [rip+0x3df9a]        # 0x140043b3a
   140005ba0:	mov    WORD PTR [rip+0x3be1d],ax        # 0x1400419c4
   140005ba7:	mov    WORD PTR [rbx+0xb2],ax
   140005bae:	movzx  eax,WORD PTR [rip+0x3df87]        # 0x140043b3c
   140005bb5:	mov    WORD PTR [rip+0x3be0a],ax        # 0x1400419c6
   140005bbc:	mov    WORD PTR [rbx+0xb4],ax
   140005bc3:	mov    eax,DWORD PTR [rip+0x3df75]        # 0x140043b3e
   140005bc9:	mov    BYTE PTR [rip+0x3bdf9],al        # 0x1400419c8
   140005bcf:	mov    BYTE PTR [rbx+0xb6],al
   140005bd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005be0:	movzx  eax,BYTE PTR [rdi+rdx*1]
   140005be4:	inc    rdi
   140005be7:	dec    ecx
   140005be9:	mov    BYTE PTR [rdi-0x1],al
   140005bec:	test   al,al
   140005bee:	je     0x140005bf6
   140005bf0:	test   ecx,ecx
   140005bf2:	jne    0x140005be0
   140005bf4:	jmp    0x140005bfe
   140005bf6:	test   ecx,ecx
   140005bf8:	jle    0x140005bfe
   140005bfa:	xor    eax,eax
   140005bfc:	rep stos BYTE PTR es:[rdi],al
   140005bfe:	movzx  r9d,WORD PTR [rbx+0xa8]
   140005c06:	test   r9w,r9w
   140005c0a:	je     0x140005c64
   140005c0c:	mov    edx,DWORD PTR [rbx+0xac]
   140005c12:	inc    r9w
   140005c16:	lea    r8,[rip+0x3bd83]        # 0x1400419a0
   140005c1d:	add    r9w,r9w
   140005c21:	mov    rcx,rsi
   140005c24:	mov    WORD PTR [rip+0x3bcf8],r14w        # 0x140041924
   140005c2c:	call   0x140006470
   140005c31:	test   ax,ax
   140005c34:	jne    0x140006392
   140005c3a:	movzx  eax,WORD PTR [rbx+0xa8]
   140005c41:	movzx  ecx,r13w
   140005c45:	inc    ax
   140005c48:	cmp    r13w,ax
   140005c4c:	jge    0x140005c6c
   140005c4e:	xchg   ax,ax
   140005c50:	movzx  eax,WORD PTR [rbx+0xa8]
   140005c57:	inc    cx
   140005c5a:	inc    ax
   140005c5d:	cmp    cx,ax
   140005c60:	jl     0x140005c50
   140005c62:	jmp    0x140005c6c
   140005c64:	mov    WORD PTR [rip+0x3bcb8],r13w        # 0x140041924
   140005c6c:	movzx  ecx,WORD PTR [rbx+0x82]
   140005c73:	call   QWORD PTR [rip+0x2979f]        # 0x14002f418
   140005c79:	mov    QWORD PTR [rip+0x38480],rax        # 0x14003e100
   140005c80:	test   rax,rax
   140005c83:	je     0x140005ca8
   140005c85:	cmp    WORD PTR [rbx+0xa8],0x0
   140005c8d:	jbe    0x140005cb2
   140005c8f:	movzx  ecx,WORD PTR [rbx+0xaa]
   140005c96:	call   QWORD PTR [rip+0x2977c]        # 0x14002f418
   140005c9c:	mov    QWORD PTR [rip+0x3bd0d],rax        # 0x1400419b0
   140005ca3:	test   rax,rax
   140005ca6:	jne    0x140005cb2
   140005ca8:	mov    eax,0x4
   140005cad:	jmp    0x140006392
   140005cb2:	mov    edx,DWORD PTR [rbx+0x34]
   140005cb5:	xor    r8d,r8d
   140005cb8:	mov    rcx,rsi
   140005cbb:	call   0x14002ad10
   140005cc0:	cmp    BYTE PTR [rbx+0x7e],0x0
   140005cc4:	mov    rcx,QWORD PTR [rsi]
   140005cc7:	mov    QWORD PTR [rsp+0x20],r13
   140005ccc:	lea    r9,[rbp-0x9]
   140005cd0:	lea    rdx,[rip+0x3de59]        # 0x140043b30
   140005cd7:	jne    0x140005d30
   140005cd9:	mov    r8d,0x3c
   140005cdf:	call   QWORD PTR [rip+0x29523]        # 0x14002f208
   140005ce5:	test   eax,eax
   140005ce7:	jne    0x140005d20
   140005ce9:	call   QWORD PTR [rip+0x29471]        # 0x14002f160
   140005cef:	cmp    eax,0x58
   140005cf2:	jae    0x140005d06
   140005cf4:	lea    rcx,[rip+0xffffffffffffa305]        # 0x140000000
   140005cfb:	mov    eax,eax
   140005cfd:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005d04:	jmp    0x140005d09
   140005d06:	mov    ecx,r15d
   140005d09:	mov    DWORD PTR [rip+0x3d3a9],ecx        # 0x1400430b8
   140005d0f:	mov    DWORD PTR [rip+0x3d7af],0x2        # 0x1400434c8
   140005d19:	mov    BYTE PTR [rip+0x3d6a0],0x0        # 0x1400433c0
   140005d20:	cmp    DWORD PTR [rbp-0x9],0x3c
   140005d24:	je     0x140005d7d
   140005d26:	mov    eax,0x3
   140005d2b:	jmp    0x140006392
   140005d30:	mov    r8d,0x56
   140005d36:	call   QWORD PTR [rip+0x294cc]        # 0x14002f208
   140005d3c:	test   eax,eax
   140005d3e:	jne    0x140005d77
   140005d40:	call   QWORD PTR [rip+0x2941a]        # 0x14002f160
   140005d46:	cmp    eax,0x58
   140005d49:	jae    0x140005d5d
   140005d4b:	lea    rcx,[rip+0xffffffffffffa2ae]        # 0x140000000
   140005d52:	mov    eax,eax
   140005d54:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140005d5b:	jmp    0x140005d60
   140005d5d:	mov    ecx,r15d
   140005d60:	mov    DWORD PTR [rip+0x3d352],ecx        # 0x1400430b8
   140005d66:	mov    DWORD PTR [rip+0x3d758],0x2        # 0x1400434c8
   140005d70:	mov    BYTE PTR [rip+0x3d649],0x0        # 0x1400433c0
   140005d77:	cmp    DWORD PTR [rbp-0x9],0x56
   140005d7b:	jne    0x140005d26
   140005d7d:	movzx  eax,WORD PTR [rip+0x3ddac]        # 0x140043b30
   140005d84:	movzx  ecx,BYTE PTR [rbx+0x7e]
   140005d88:	mov    WORD PTR [rbx+0xb8],ax
   140005d8f:	movzx  eax,WORD PTR [rip+0x3dd9c]        # 0x140043b32
   140005d96:	mov    WORD PTR [rbx+0xba],ax
   140005d9d:	movzx  eax,WORD PTR [rip+0x3dd90]        # 0x140043b34
   140005da4:	mov    WORD PTR [rbx+0xbc],ax
   140005dab:	movzx  eax,WORD PTR [rip+0x3dd84]        # 0x140043b36
   140005db2:	mov    WORD PTR [rbx+0xbe],ax
   140005db9:	movzx  eax,WORD PTR [rip+0x3dd78]        # 0x140043b38
   140005dc0:	mov    WORD PTR [rbx+0xc0],ax
   140005dc7:	movzx  eax,WORD PTR [rip+0x3dd6c]        # 0x140043b3a
   140005dce:	mov    WORD PTR [rbx+0xc2],ax
   140005dd5:	movzx  eax,WORD PTR [rip+0x3dd60]        # 0x140043b3c
   140005ddc:	mov    WORD PTR [rbx+0xc4],ax
   140005de3:	movzx  eax,WORD PTR [rip+0x3dd54]        # 0x140043b3e
   140005dea:	mov    WORD PTR [rbx+0xc6],ax
   140005df1:	movzx  eax,WORD PTR [rip+0x3dd48]        # 0x140043b40
   140005df8:	mov    WORD PTR [rbx+0xc8],ax
   140005dff:	test   cl,cl
   140005e01:	jne    0x140005e1f
   140005e03:	mov    QWORD PTR [rbx+0xca],0x0
   140005e0e:	mov    WORD PTR [rbx+0xd2],r13w
   140005e16:	movzx  eax,WORD PTR [rip+0x3dd25]        # 0x140043b42
   140005e1d:	jmp    0x140005e6c
   140005e1f:	movzx  eax,WORD PTR [rip+0x3dd1c]        # 0x140043b42
   140005e26:	mov    WORD PTR [rbx+0xca],ax
   140005e2d:	movzx  eax,WORD PTR [rip+0x3dd10]        # 0x140043b44
   140005e34:	mov    WORD PTR [rbx+0xcc],ax
   140005e3b:	movzx  eax,WORD PTR [rip+0x3dd04]        # 0x140043b46
   140005e42:	mov    WORD PTR [rbx+0xce],ax
   140005e49:	movzx  eax,WORD PTR [rip+0x3dcf8]        # 0x140043b48
   140005e50:	mov    WORD PTR [rbx+0xd0],ax
   140005e57:	movzx  eax,WORD PTR [rip+0x3dcec]        # 0x140043b4a
   140005e5e:	mov    WORD PTR [rbx+0xd2],ax
   140005e65:	movzx  eax,WORD PTR [rip+0x3dce0]        # 0x140043b4c
   140005e6c:	mov    WORD PTR [rbx+0xd4],ax
   140005e73:	test   cl,cl
   140005e75:	jne    0x140005f08
   140005e7b:	mov    eax,DWORD PTR [rip+0x3dcc3]        # 0x140043b44
   140005e81:	mov    DWORD PTR [rbx+0xd8],eax
   140005e87:	mov    eax,DWORD PTR [rip+0x3dcbb]        # 0x140043b48
   140005e8d:	mov    DWORD PTR [rbx+0xdc],eax
   140005e93:	mov    eax,DWORD PTR [rip+0x3dcb3]        # 0x140043b4c
   140005e99:	mov    DWORD PTR [rbx+0xe0],eax
   140005e9f:	mov    eax,DWORD PTR [rip+0x3dcab]        # 0x140043b50
   140005ea5:	mov    DWORD PTR [rbx+0xe4],eax
   140005eab:	mov    eax,DWORD PTR [rip+0x3dca3]        # 0x140043b54
   140005eb1:	mov    DWORD PTR [rbx+0xe8],eax
   140005eb7:	mov    eax,DWORD PTR [rip+0x3dc9b]        # 0x140043b58
   140005ebd:	mov    DWORD PTR [rbx+0xec],eax
   140005ec3:	mov    eax,DWORD PTR [rip+0x3dc93]        # 0x140043b5c
   140005ec9:	mov    DWORD PTR [rbx+0xf0],eax
   140005ecf:	mov    eax,DWORD PTR [rip+0x3dc8b]        # 0x140043b60
   140005ed5:	mov    DWORD PTR [rbx+0xf4],eax
   140005edb:	mov    eax,DWORD PTR [rip+0x3dc83]        # 0x140043b64
   140005ee1:	mov    QWORD PTR [rbx+0xfc],0x0
   140005eec:	mov    DWORD PTR [rbx+0xf8],eax
   140005ef2:	mov    QWORD PTR [rbx+0x104],0x0
   140005efd:	mov    eax,DWORD PTR [rip+0x3dc65]        # 0x140043b68
   140005f03:	jmp    0x140005faa
   140005f08:	mov    eax,DWORD PTR [rip+0x3dc40]        # 0x140043b4e
   140005f0e:	mov    DWORD PTR [rbx+0xd8],eax
   140005f14:	mov    eax,DWORD PTR [rip+0x3dc38]        # 0x140043b52
   140005f1a:	mov    DWORD PTR [rbx+0xdc],eax
   140005f20:	mov    eax,DWORD PTR [rip+0x3dc30]        # 0x140043b56
   140005f26:	mov    DWORD PTR [rbx+0xe0],eax
   140005f2c:	mov    eax,DWORD PTR [rip+0x3dc28]        # 0x140043b5a
   140005f32:	mov    DWORD PTR [rbx+0xe4],eax
   140005f38:	mov    eax,DWORD PTR [rip+0x3dc20]        # 0x140043b5e
   140005f3e:	mov    DWORD PTR [rbx+0xe8],eax
   140005f44:	mov    eax,DWORD PTR [rip+0x3dc18]        # 0x140043b62
   140005f4a:	mov    DWORD PTR [rbx+0xec],eax
   140005f50:	mov    eax,DWORD PTR [rip+0x3dc10]        # 0x140043b66
   140005f56:	mov    DWORD PTR [rbx+0xf0],eax
   140005f5c:	mov    eax,DWORD PTR [rip+0x3dc08]        # 0x140043b6a
   140005f62:	mov    DWORD PTR [rbx+0xf4],eax
   140005f68:	mov    eax,DWORD PTR [rip+0x3dc00]        # 0x140043b6e
   140005f6e:	mov    DWORD PTR [rbx+0xf8],eax
   140005f74:	mov    eax,DWORD PTR [rip+0x3dbf8]        # 0x140043b72
   140005f7a:	mov    DWORD PTR [rbx+0xfc],eax
   140005f80:	mov    eax,DWORD PTR [rip+0x3dbf0]        # 0x140043b76
   140005f86:	mov    DWORD PTR [rbx+0x100],eax
   140005f8c:	mov    eax,DWORD PTR [rip+0x3dbe8]        # 0x140043b7a
   140005f92:	mov    DWORD PTR [rbx+0x104],eax
   140005f98:	mov    eax,DWORD PTR [rip+0x3dbe0]        # 0x140043b7e
   140005f9e:	mov    DWORD PTR [rbx+0x108],eax
   140005fa4:	mov    eax,DWORD PTR [rip+0x3dbd8]        # 0x140043b82
   140005faa:	mov    DWORD PTR [rbx+0x10c],eax
   140005fb0:	mov    rcx,r13
   140005fb3:	lea    r14,[rip+0xffffffffffffa046]        # 0x140000000
   140005fba:	nop    WORD PTR [rax+rax*1+0x0]
   140005fc0:	movzx  eax,BYTE PTR [rcx+r14*1+0x31390]
   140005fc9:	lea    rcx,[rcx+0x1]
   140005fcd:	mov    BYTE PTR [rbp+rcx*1+0x6],al
   140005fd1:	test   al,al
   140005fd3:	jne    0x140005fc0
   140005fd5:	lea    rcx,[rbp+0x7]
   140005fd9:	call   0x14002ae90
   140005fde:	mov    edx,0xa
   140005fe3:	mov    rcx,rax
   140005fe6:	mov    rdi,rax
   140005fe9:	call   0x14002ab70
   140005fee:	mov    QWORD PTR [rip+0x3b963],rax        # 0x140041958
   140005ff5:	test   rax,rax
   140005ff8:	je     0x140005d26
   140005ffe:	mov    rcx,rdi
   140006001:	call   0x14002af10
   140006006:	mov    edx,DWORD PTR [rbx+0x38]
   140006009:	xor    r8d,r8d
   14000600c:	mov    rcx,rsi
   14000600f:	call   0x14002ad10
   140006014:	mov    r12d,DWORD PTR [rbx+0x38]
   140006018:	cmp    r12d,DWORD PTR [rbx+0x28]
   14000601c:	jae    0x1400061cd
   140006022:	mov    edi,DWORD PTR [rbx+0x28]
   140006025:	mov    rcx,QWORD PTR [rsi]
   140006028:	mov    QWORD PTR [rsp+0x20],r13
   14000602d:	sub    edi,r12d
   140006030:	lea    rdx,[rip+0x3daf9]        # 0x140043b30
   140006037:	cmp    edi,0x100
   14000603d:	jbe    0x140006103
   140006043:	lea    r9,[rbp-0x9]
   140006047:	mov    r8d,0x100
   14000604d:	call   QWORD PTR [rip+0x291b5]        # 0x14002f208
   140006053:	test   eax,eax
   140006055:	jne    0x140006088
   140006057:	call   QWORD PTR [rip+0x29103]        # 0x14002f160
   14000605d:	cmp    eax,0x58
   140006060:	jae    0x14000606e
   140006062:	mov    eax,eax
   140006064:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   14000606c:	jmp    0x140006071
   14000606e:	mov    ecx,r15d
   140006071:	mov    DWORD PTR [rip+0x3d041],ecx        # 0x1400430b8
   140006077:	mov    DWORD PTR [rip+0x3d447],0x2        # 0x1400434c8
   140006081:	mov    BYTE PTR [rip+0x3d338],0x0        # 0x1400433c0
   140006088:	mov    r14d,DWORD PTR [rbp-0x9]
   14000608c:	cmp    r14d,0x100
   140006093:	jne    0x140006304
   140006099:	mov    rcx,QWORD PTR [rip+0x3b8b8]        # 0x140041958
   1400060a0:	lea    r9,[rbp-0x5]
   1400060a4:	lea    rdx,[rip+0x3da85]        # 0x140043b30
   1400060ab:	mov    rcx,QWORD PTR [rcx]
   1400060ae:	mov    r8d,r14d
   1400060b1:	mov    QWORD PTR [rsp+0x20],r13
   1400060b6:	call   QWORD PTR [rip+0x29154]        # 0x14002f210
   1400060bc:	test   eax,eax
   1400060be:	jne    0x1400060f7
   1400060c0:	call   QWORD PTR [rip+0x2909a]        # 0x14002f160
   1400060c6:	cmp    eax,0x58
   1400060c9:	jae    0x1400060dd
   1400060cb:	lea    rcx,[rip+0xffffffffffff9f2e]        # 0x140000000
   1400060d2:	mov    eax,eax
   1400060d4:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400060db:	jmp    0x1400060e0
   1400060dd:	mov    ecx,r15d
   1400060e0:	mov    DWORD PTR [rip+0x3cfd2],ecx        # 0x1400430b8
   1400060e6:	mov    DWORD PTR [rip+0x3d3d8],0x2        # 0x1400434c8
   1400060f0:	mov    BYTE PTR [rip+0x3d2c9],0x0        # 0x1400433c0
   1400060f7:	cmp    DWORD PTR [rbp-0x5],0x100
   1400060fe:	jmp    0x1400061b3
   140006103:	lea    r9,[rbp-0x1]
   140006107:	mov    r8d,edi
   14000610a:	call   QWORD PTR [rip+0x290f8]        # 0x14002f208
   140006110:	test   eax,eax
   140006112:	jne    0x140006145
   140006114:	call   QWORD PTR [rip+0x29046]        # 0x14002f160
   14000611a:	cmp    eax,0x58
   14000611d:	jae    0x14000612b
   14000611f:	mov    eax,eax
   140006121:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140006129:	jmp    0x14000612e
   14000612b:	mov    ecx,r15d
   14000612e:	mov    DWORD PTR [rip+0x3cf84],ecx        # 0x1400430b8
   140006134:	mov    DWORD PTR [rip+0x3d38a],0x2        # 0x1400434c8
   14000613e:	mov    BYTE PTR [rip+0x3d27b],0x0        # 0x1400433c0
   140006145:	mov    r14d,DWORD PTR [rbp-0x1]
   140006149:	cmp    r14d,edi
   14000614c:	jne    0x140006304
   140006152:	mov    rcx,QWORD PTR [rip+0x3b7ff]        # 0x140041958
   140006159:	lea    r9,[rbp+0x3]
   14000615d:	lea    rdx,[rip+0x3d9cc]        # 0x140043b30
   140006164:	mov    rcx,QWORD PTR [rcx]
   140006167:	mov    r8d,edi
   14000616a:	mov    QWORD PTR [rsp+0x20],r13
   14000616f:	call   QWORD PTR [rip+0x2909b]        # 0x14002f210
   140006175:	test   eax,eax
   140006177:	jne    0x1400061b0
   140006179:	call   QWORD PTR [rip+0x28fe1]        # 0x14002f160
   14000617f:	cmp    eax,0x58
   140006182:	jae    0x140006196
   140006184:	lea    rcx,[rip+0xffffffffffff9e75]        # 0x140000000
   14000618b:	mov    eax,eax
   14000618d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140006194:	jmp    0x140006199
   140006196:	mov    ecx,r15d
   140006199:	mov    DWORD PTR [rip+0x3cf19],ecx        # 0x1400430b8
   14000619f:	mov    DWORD PTR [rip+0x3d31f],0x2        # 0x1400434c8
   1400061a9:	mov    BYTE PTR [rip+0x3d210],0x0        # 0x1400433c0
   1400061b0:	cmp    DWORD PTR [rbp+0x3],edi
   1400061b3:	jne    0x140006304
   1400061b9:	add    r12d,r14d
   1400061bc:	lea    r14,[rip+0xffffffffffff9e3d]        # 0x140000000
   1400061c3:	cmp    r12d,DWORD PTR [rbx+0x28]
   1400061c7:	jb     0x140006022
   1400061cd:	mov    rcx,QWORD PTR [rip+0x3b784]        # 0x140041958
   1400061d4:	call   0x14002a9e0
   1400061d9:	mov    rcx,r13
   1400061dc:	nop    DWORD PTR [rax+0x0]
   1400061e0:	movzx  eax,BYTE PTR [rcx+r14*1+0x313a0]
   1400061e9:	lea    rcx,[rcx+0x1]
   1400061ed:	mov    BYTE PTR [rbp+rcx*1+0x6],al
   1400061f1:	test   al,al
   1400061f3:	jne    0x1400061e0
   1400061f5:	lea    rcx,[rbp+0x7]
   1400061f9:	call   0x14002ae90
   1400061fe:	mov    edx,0xa
   140006203:	mov    rcx,rax
   140006206:	mov    rdi,rax
   140006209:	call   0x14002ab70
   14000620e:	mov    QWORD PTR [rip+0x3a4e3],rax        # 0x1400406f8
   140006215:	test   rax,rax
   140006218:	je     0x140005d26
   14000621e:	mov    rcx,rdi
   140006221:	call   0x14002af10
   140006226:	mov    edx,DWORD PTR [rbx+0x30]
   140006229:	xor    r8d,r8d
   14000622c:	mov    rcx,rsi
   14000622f:	call   0x14002ad10
   140006234:	nop    DWORD PTR [rax+0x0]
   140006238:	nop    DWORD PTR [rax+rax*1+0x0]
   140006240:	mov    rcx,QWORD PTR [rsi]
   140006243:	lea    r9,[rbp+0x3]
   140006247:	lea    rdx,[rip+0x3d8e2]        # 0x140043b30
   14000624e:	mov    r8d,0x100
   140006254:	mov    QWORD PTR [rsp+0x20],r13
   140006259:	call   QWORD PTR [rip+0x28fa9]        # 0x14002f208
   14000625f:	test   eax,eax
   140006261:	jne    0x140006294
   140006263:	call   QWORD PTR [rip+0x28ef7]        # 0x14002f160
   140006269:	cmp    eax,0x58
   14000626c:	jae    0x14000627a
   14000626e:	mov    eax,eax
   140006270:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140006278:	jmp    0x14000627d
   14000627a:	mov    ecx,r15d
   14000627d:	mov    DWORD PTR [rip+0x3ce35],ecx        # 0x1400430b8
   140006283:	mov    DWORD PTR [rip+0x3d23b],0x2        # 0x1400434c8
   14000628d:	mov    BYTE PTR [rip+0x3d12c],0x0        # 0x1400433c0
   140006294:	mov    edi,DWORD PTR [rbp+0x3]
   140006297:	cmp    edi,0x100
   14000629d:	jne    0x14000630c
   14000629f:	mov    rcx,QWORD PTR [rip+0x3a452]        # 0x1400406f8
   1400062a6:	lea    r9,[rbp-0x1]
   1400062aa:	lea    rdx,[rip+0x3d87f]        # 0x140043b30
   1400062b1:	mov    rcx,QWORD PTR [rcx]
   1400062b4:	mov    r8d,edi
   1400062b7:	mov    QWORD PTR [rsp+0x20],r13
   1400062bc:	call   QWORD PTR [rip+0x28f4e]        # 0x14002f210
   1400062c2:	test   eax,eax
   1400062c4:	jne    0x1400062f7
   1400062c6:	call   QWORD PTR [rip+0x28e94]        # 0x14002f160
   1400062cc:	cmp    eax,0x58
   1400062cf:	jae    0x1400062dd
   1400062d1:	mov    eax,eax
   1400062d3:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   1400062db:	jmp    0x1400062e0
   1400062dd:	mov    ecx,r15d
   1400062e0:	mov    DWORD PTR [rip+0x3cdd2],ecx        # 0x1400430b8
   1400062e6:	mov    DWORD PTR [rip+0x3d1d8],0x2        # 0x1400434c8
   1400062f0:	mov    BYTE PTR [rip+0x3d0c9],0x0        # 0x1400433c0
   1400062f7:	cmp    DWORD PTR [rbp-0x1],0x100
   1400062fe:	je     0x140006240
   140006304:	or     eax,0xffffffff
   140006307:	jmp    0x140006392
   14000630c:	test   edi,edi
   14000630e:	jle    0x140006369
   140006310:	mov    rcx,QWORD PTR [rip+0x3a3e1]        # 0x1400406f8
   140006317:	lea    r9,[rbp-0x1]
   14000631b:	lea    rdx,[rip+0x3d80e]        # 0x140043b30
   140006322:	mov    rcx,QWORD PTR [rcx]
   140006325:	mov    r8d,edi
   140006328:	mov    QWORD PTR [rsp+0x20],r13
   14000632d:	call   QWORD PTR [rip+0x28edd]        # 0x14002f210
   140006333:	test   eax,eax
   140006335:	jne    0x140006364
   140006337:	call   QWORD PTR [rip+0x28e23]        # 0x14002f160
   14000633d:	cmp    eax,0x58
   140006340:	jae    0x14000634c
   140006342:	mov    eax,eax
   140006344:	mov    r15d,DWORD PTR [r14+rax*4+0x310a0]
   14000634c:	mov    DWORD PTR [rip+0x3cd65],r15d        # 0x1400430b8
   140006353:	mov    DWORD PTR [rip+0x3d16b],0x2        # 0x1400434c8
   14000635d:	mov    BYTE PTR [rip+0x3d05c],0x0        # 0x1400433c0
   140006364:	cmp    DWORD PTR [rbp-0x1],edi
   140006367:	jne    0x140006304
   140006369:	mov    rcx,QWORD PTR [rip+0x3a388]        # 0x1400406f8
   140006370:	call   0x14002a9e0
   140006375:	movzx  ecx,WORD PTR [rbx+0x6c]
   140006379:	mov    r9,QWORD PTR [rip+0x37d88]        # 0x14003e108
   140006380:	movzx  edx,BYTE PTR [rbx+0x3d]
   140006384:	mov    WORD PTR [rsp+0x20],cx
   140006389:	call   0x140006540
   14000638e:	movzx  eax,r13w
   140006392:	mov    r12,QWORD PTR [rsp+0xc8]
   14000639a:	mov    rcx,QWORD PTR [rbp+0x27]
   14000639e:	xor    rcx,rsp
   1400063a1:	call   0x14002c960
   1400063a6:	lea    r11,[rsp+0x90]
   1400063ae:	mov    rbx,QWORD PTR [r11+0x40]
   1400063b2:	mov    rsi,QWORD PTR [r11+0x48]
   1400063b6:	mov    rsp,r11
   1400063b9:	pop    r15
   1400063bb:	pop    r14
   1400063bd:	pop    r13
   1400063bf:	pop    rdi
   1400063c0:	pop    rbp
   1400063c1:	ret    
   1400063c2:	int3   
   1400063c3:	int3   
   1400063c4:	int3   
   1400063c5:	int3   
   1400063c6:	int3   
   1400063c7:	int3   
   1400063c8:	int3   
   1400063c9:	int3   
   1400063ca:	int3   
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400063d5:	push   rdi
   1400063d6:	sub    rsp,0x30
   1400063da:	mov    rcx,QWORD PTR [rcx]
   1400063dd:	xor    edi,edi
   1400063df:	mov    rbx,rdx
   1400063e2:	lea    r9,[rsp+0x50]
   1400063e7:	lea    rdx,[rsp+0x40]
   1400063ec:	lea    r8d,[rdi+0x2]
   1400063f0:	mov    QWORD PTR [rsp+0x20],rdi
   1400063f5:	call   QWORD PTR [rip+0x28e0d]        # 0x14002f208
   1400063fb:	test   eax,eax
   1400063fd:	jne    0x140006434
   1400063ff:	call   QWORD PTR [rip+0x28d5b]        # 0x14002f160
   140006405:	cmp    eax,0x58
   140006408:	jae    0x140006418
   14000640a:	lea    rcx,[rip+0x2ac8f]        # 0x1400310a0
   140006411:	mov    eax,eax
   140006413:	mov    ecx,DWORD PTR [rcx+rax*4]
   140006416:	jmp    0x14000641d
   140006418:	mov    ecx,0x106
   14000641d:	mov    DWORD PTR [rip+0x3cc95],ecx        # 0x1400430b8
   140006423:	mov    DWORD PTR [rip+0x3d09b],0x2        # 0x1400434c8
   14000642d:	mov    BYTE PTR [rip+0x3cf8c],dil        # 0x1400433c0
   140006434:	cmp    DWORD PTR [rsp+0x50],0x2
   140006439:	je     0x14000644b
   14000643b:	mov    eax,0x1
   140006440:	mov    rbx,QWORD PTR [rsp+0x48]
   140006445:	add    rsp,0x30
   140006449:	pop    rdi
   14000644a:	ret    
   14000644b:	movzx  ecx,WORD PTR [rsp+0x40]
   140006450:	movzx  eax,di
   140006453:	mov    WORD PTR [rbx],cx
   140006456:	mov    rbx,QWORD PTR [rsp+0x48]
   14000645b:	add    rsp,0x30
   14000645f:	pop    rdi
   140006460:	ret    
   140006461:	int3   
   140006462:	int3   
   140006463:	int3   
   140006464:	int3   
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	int3   
   14000646d:	int3   
   14000646e:	int3   
   14000646f:	int3   
   140006470:	mov    QWORD PTR [rsp+0x8],rbx
   140006475:	mov    QWORD PTR [rsp+0x10],rsi
   14000647a:	mov    QWORD PTR [rsp+0x18],rdi
   14000647f:	push   r14
   140006481:	sub    rsp,0x30
   140006485:	movzx  esi,r9w
   140006489:	mov    rdi,rcx
   14000648c:	mov    r14,r8
   14000648f:	mov    ecx,esi
   140006491:	mov    ebx,edx
   140006493:	call   QWORD PTR [rip+0x28f7f]        # 0x14002f418
   140006499:	mov    QWORD PTR [r14],rax
   14000649c:	test   rax,rax
   14000649f:	jne    0x1400064a8
   1400064a1:	mov    eax,0x4
   1400064a6:	jmp    0x140006520
   1400064a8:	test   ebx,ebx
   1400064aa:	je     0x1400064b9
   1400064ac:	xor    r8d,r8d
   1400064af:	mov    edx,ebx
   1400064b1:	mov    rcx,rdi
   1400064b4:	call   0x14002ad10
   1400064b9:	mov    rdx,QWORD PTR [r14]
   1400064bc:	mov    rcx,QWORD PTR [rdi]
   1400064bf:	movzx  ebx,si
   1400064c2:	lea    r9,[rsp+0x58]
   1400064c7:	xor    esi,esi
   1400064c9:	mov    r8d,ebx
   1400064cc:	mov    QWORD PTR [rsp+0x20],rsi
   1400064d1:	call   QWORD PTR [rip+0x28d31]        # 0x14002f208
   1400064d7:	test   eax,eax
   1400064d9:	jne    0x140006510
   1400064db:	call   QWORD PTR [rip+0x28c7f]        # 0x14002f160
   1400064e1:	cmp    eax,0x58
   1400064e4:	jae    0x1400064f4
   1400064e6:	lea    rcx,[rip+0x2abb3]        # 0x1400310a0
   1400064ed:	mov    eax,eax
   1400064ef:	mov    ecx,DWORD PTR [rcx+rax*4]
   1400064f2:	jmp    0x1400064f9
   1400064f4:	mov    ecx,0x106
   1400064f9:	mov    DWORD PTR [rip+0x3cbb9],ecx        # 0x1400430b8
   1400064ff:	mov    DWORD PTR [rip+0x3cfbf],0x2        # 0x1400434c8
   140006509:	mov    BYTE PTR [rip+0x3ceb0],sil        # 0x1400433c0
   140006510:	cmp    DWORD PTR [rsp+0x58],ebx
   140006514:	je     0x14000651d
   140006516:	mov    eax,0x1
   14000651b:	jmp    0x140006520
   14000651d:	movzx  eax,si
   140006520:	mov    rbx,QWORD PTR [rsp+0x40]
   140006525:	mov    rsi,QWORD PTR [rsp+0x48]
   14000652a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000652f:	add    rsp,0x30
   140006533:	pop    r14
   140006535:	ret    
   140006536:	int3   
   140006537:	int3   
   140006538:	int3   
   140006539:	int3   
   14000653a:	int3   
   14000653b:	int3   
   14000653c:	int3   
   14000653d:	int3   
   14000653e:	int3   
   14000653f:	int3   
   140006540:	mov    QWORD PTR [rsp+0x8],rbx
   140006545:	mov    QWORD PTR [rsp+0x10],rbp
   14000654a:	mov    QWORD PTR [rsp+0x18],rsi
   14000654f:	push   rdi
   140006550:	push   r12
   140006552:	push   r13
   140006554:	push   r14
   140006556:	push   r15
   140006558:	sub    rsp,0x20
   14000655c:	mov    r15,QWORD PTR [rip+0x39c5d]        # 0x1400401c0
   140006563:	mov    r14,QWORD PTR [rip+0x39c66]        # 0x1400401d0
   14000656a:	movzx  ebp,dl
   14000656d:	lea    r13,[rip+0x39b3c]        # 0x1400400b0
   140006574:	mov    r12d,0xff
   14000657a:	mov    r8d,0x100
   140006580:	mov    rcx,r13
   140006583:	mov    edx,r12d
   140006586:	mov    rdi,r9
   140006589:	call   0x14002ce12
   14000658e:	movzx  ebx,WORD PTR [rsp+0x70]
   140006593:	xor    esi,esi
   140006595:	movzx  r8d,si
   140006599:	cmp    si,bx
   14000659c:	jae    0x1400065bc
   14000659e:	mov    rcx,rdi
   1400065a1:	cmp    BYTE PTR [rcx+0x1],bpl
   1400065a5:	jne    0x1400065ae
   1400065a7:	movzx  eax,BYTE PTR [rcx]
   1400065aa:	mov    BYTE PTR [rax+r13*1],r8b
   1400065ae:	inc    r8w
   1400065b2:	add    rcx,0x4
   1400065b6:	cmp    r8w,bx
   1400065ba:	jb     0x1400065a1
   1400065bc:	lea    rax,[rip+0x39e1d]        # 0x1400403e0
   1400065c3:	xor    edx,edx
   1400065c5:	mov    r8d,0x100
   1400065cb:	mov    rcx,rax
   1400065ce:	call   0x14002ce12
   1400065d3:	movzx  ecx,WORD PTR [r14]
   1400065d7:	mov    r13d,0xffff
   1400065dd:	cmp    cx,r13w
   1400065e1:	je     0x140006617
   1400065e3:	movzx  edx,bpl
   1400065e7:	lea    r9,[rip+0x39df2]        # 0x1400403e0
   1400065ee:	xchg   ax,ax
   1400065f0:	movzx  eax,cx
   1400065f3:	shr    ax,0x8
   1400065f7:	cmp    ax,dx
   1400065fa:	jne    0x140006608
   1400065fc:	movzx  eax,BYTE PTR [r14+0x2]
   140006601:	movzx  ecx,cl
   140006604:	mov    BYTE PTR [rcx+r9*1],al
   140006608:	movzx  ecx,WORD PTR [r14+0x3]
   14000660d:	add    r14,0x3
   140006611:	cmp    cx,r13w
   140006615:	jne    0x1400065f0
   140006617:	lea    r14,[rip+0x39bd2]        # 0x1400401f0
   14000661e:	xor    edx,edx
   140006620:	mov    r8d,0x100
   140006626:	mov    rcx,r14
   140006629:	call   0x14002ce12
   14000662e:	movzx  ecx,WORD PTR [r15]
   140006632:	cmp    cx,r13w
   140006636:	je     0x140006663
   140006638:	movzx  edx,bpl
   14000663c:	nop    DWORD PTR [rax+0x0]
   140006640:	movzx  eax,cx
   140006643:	shr    ax,0x8
   140006647:	cmp    ax,dx
   14000664a:	jne    0x140006654
   14000664c:	movzx  eax,cl
   14000664f:	mov    BYTE PTR [rax+r14*1],0x1
   140006654:	movzx  ecx,WORD PTR [r15+0x2]
   140006659:	add    r15,0x2
   14000665d:	cmp    cx,r13w
   140006661:	jne    0x140006640
   140006663:	test   bpl,bpl
   140006666:	jne    0x140006671
   140006668:	movzx  eax,BYTE PTR [rip+0x39aab]        # 0x14004011a
   14000666f:	jmp    0x140006694
   140006671:	movzx  ecx,si
   140006674:	cmp    si,bx
   140006677:	jae    0x140006691
   140006679:	mov    edx,0x6a
   14000667e:	xchg   ax,ax
   140006680:	movzx  eax,cx
   140006683:	cmp    dx,WORD PTR [rdi+rax*4]
   140006687:	je     0x1400066a8
   140006689:	inc    cx
   14000668c:	cmp    cx,bx
   14000668f:	jb     0x140006680
   140006691:	mov    eax,r12d
   140006694:	mov    BYTE PTR [rip+0x3b29e],al        # 0x140041938
   14000669a:	test   bpl,bpl
   14000669d:	jne    0x1400066ad
   14000669f:	movzx  eax,BYTE PTR [rip+0x39a7d]        # 0x140040123
   1400066a6:	jmp    0x1400066d4
   1400066a8:	movzx  eax,cl
   1400066ab:	jmp    0x140006694
   1400066ad:	movzx  ecx,si
   1400066b0:	cmp    si,bx
   1400066b3:	jae    0x1400066d1
   1400066b5:	mov    edx,0x73
   1400066ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400066c0:	movzx  eax,cx
   1400066c3:	cmp    dx,WORD PTR [rdi+rax*4]
   1400066c7:	je     0x1400066e8
   1400066c9:	inc    cx
   1400066cc:	cmp    cx,bx
   1400066cf:	jb     0x1400066c0
   1400066d1:	mov    eax,r12d
   1400066d4:	mov    BYTE PTR [rip+0x3b25f],al        # 0x140041939
   1400066da:	test   bpl,bpl
   1400066dd:	jne    0x1400066ed
   1400066df:	movzx  eax,BYTE PTR [rip+0x39a42]        # 0x140040128
   1400066e6:	jmp    0x140006714
   1400066e8:	movzx  eax,cl
   1400066eb:	jmp    0x1400066d4
   1400066ed:	movzx  ecx,si
   1400066f0:	cmp    si,bx
   1400066f3:	jae    0x140006711
   1400066f5:	mov    edx,0x78
   1400066fa:	nop    WORD PTR [rax+rax*1+0x0]
   140006700:	movzx  eax,cx
   140006703:	cmp    dx,WORD PTR [rdi+rax*4]
   140006707:	je     0x140006728
   140006709:	inc    cx
   14000670c:	cmp    cx,bx
   14000670f:	jb     0x140006700
   140006711:	mov    eax,r12d
   140006714:	mov    BYTE PTR [rip+0x3b220],al        # 0x14004193a
   14000671a:	test   bpl,bpl
   14000671d:	jne    0x14000672d
   14000671f:	movzx  eax,BYTE PTR [rip+0x399eb]        # 0x140040111
   140006726:	jmp    0x140006754
   140006728:	movzx  eax,cl
   14000672b:	jmp    0x140006714
   14000672d:	movzx  ecx,si
   140006730:	cmp    si,bx
   140006733:	jae    0x140006751
   140006735:	mov    edx,0x61
   14000673a:	nop    WORD PTR [rax+rax*1+0x0]
   140006740:	movzx  eax,cx
   140006743:	cmp    dx,WORD PTR [rdi+rax*4]
   140006747:	je     0x140006771
   140006749:	inc    cx
   14000674c:	cmp    cx,bx
   14000674f:	jb     0x140006740
   140006751:	mov    eax,r12d
   140006754:	movzx  edx,BYTE PTR [rip+0x399ba]        # 0x140040115
   14000675b:	mov    BYTE PTR [rip+0x3b1da],al        # 0x14004193b
   140006761:	mov    r9d,0x65
   140006767:	test   bpl,bpl
   14000676a:	jne    0x140006776
   14000676c:	movzx  eax,dl
   14000676f:	jmp    0x140006795
   140006771:	movzx  eax,cl
   140006774:	jmp    0x140006754
   140006776:	movzx  ecx,si
   140006779:	cmp    si,bx
   14000677c:	jae    0x140006792
   14000677e:	xchg   ax,ax
   140006780:	movzx  eax,cx
   140006783:	cmp    r9w,WORD PTR [rdi+rax*4]
   140006788:	je     0x1400067a9
   14000678a:	inc    cx
   14000678d:	cmp    cx,bx
   140006790:	jb     0x140006780
   140006792:	mov    eax,r12d
   140006795:	mov    BYTE PTR [rip+0x3b1a1],al        # 0x14004193c
   14000679b:	test   bpl,bpl
   14000679e:	jne    0x1400067ae
   1400067a0:	movzx  eax,BYTE PTR [rip+0x39972]        # 0x140040119
   1400067a7:	jmp    0x1400067d5
   1400067a9:	movzx  eax,cl
   1400067ac:	jmp    0x140006795
   1400067ae:	movzx  ecx,si
   1400067b1:	cmp    si,bx
   1400067b4:	jae    0x1400067d2
   1400067b6:	mov    r8d,0x69
   1400067bc:	nop    DWORD PTR [rax+0x0]
   1400067c0:	movzx  eax,cx
   1400067c3:	cmp    r8w,WORD PTR [rdi+rax*4]
   1400067c8:	je     0x1400067e9
   1400067ca:	inc    cx
   1400067cd:	cmp    cx,bx
   1400067d0:	jb     0x1400067c0
   1400067d2:	mov    eax,r12d
   1400067d5:	mov    BYTE PTR [rip+0x3b162],al        # 0x14004193d
   1400067db:	test   bpl,bpl
   1400067de:	jne    0x1400067ee
   1400067e0:	movzx  eax,BYTE PTR [rip+0x39938]        # 0x14004011f
   1400067e7:	jmp    0x140006815
   1400067e9:	movzx  eax,cl
   1400067ec:	jmp    0x1400067d5
   1400067ee:	movzx  ecx,si
   1400067f1:	cmp    si,bx
   1400067f4:	jae    0x140006812
   1400067f6:	mov    r8d,0x6f
   1400067fc:	nop    DWORD PTR [rax+0x0]
   140006800:	movzx  eax,cx
   140006803:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006808:	je     0x140006829
   14000680a:	inc    cx
   14000680d:	cmp    cx,bx
   140006810:	jb     0x140006800
   140006812:	mov    eax,r12d
   140006815:	mov    BYTE PTR [rip+0x3b123],al        # 0x14004193e
   14000681b:	test   bpl,bpl
   14000681e:	jne    0x14000682e
   140006820:	movzx  eax,BYTE PTR [rip+0x398fe]        # 0x140040125
   140006827:	jmp    0x140006855
   140006829:	movzx  eax,cl
   14000682c:	jmp    0x140006815
   14000682e:	movzx  ecx,si
   140006831:	cmp    si,bx
   140006834:	jae    0x140006852
   140006836:	mov    r8d,0x75
   14000683c:	nop    DWORD PTR [rax+0x0]
   140006840:	movzx  eax,cx
   140006843:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006848:	je     0x14000686a
   14000684a:	inc    cx
   14000684d:	cmp    cx,bx
   140006850:	jb     0x140006840
   140006852:	mov    eax,r12d
   140006855:	mov    BYTE PTR [rip+0x3b0e4],al        # 0x14004193f
   14000685b:	cmp    bpl,0x1
   14000685f:	jne    0x14000686f
   140006861:	movzx  eax,BYTE PTR [rip+0x39963]        # 0x1400401cb
   140006868:	jmp    0x140006895
   14000686a:	movzx  eax,cl
   14000686d:	jmp    0x140006855
   14000686f:	movzx  ecx,si
   140006872:	cmp    si,bx
   140006875:	jae    0x140006892
   140006877:	mov    r8d,0x11b
   14000687d:	nop    DWORD PTR [rax]
   140006880:	movzx  eax,cx
   140006883:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006888:	je     0x1400068aa
   14000688a:	inc    cx
   14000688d:	cmp    cx,bx
   140006890:	jb     0x140006880
   140006892:	mov    eax,r12d
   140006895:	mov    BYTE PTR [rip+0x3b0a5],al        # 0x140041940
   14000689b:	cmp    bpl,0x1
   14000689f:	jne    0x1400068af
   1400068a1:	movzx  eax,BYTE PTR [rip+0x39931]        # 0x1400401d9
   1400068a8:	jmp    0x1400068d5
   1400068aa:	movzx  eax,cl
   1400068ad:	jmp    0x140006895
   1400068af:	movzx  ecx,si
   1400068b2:	cmp    si,bx
   1400068b5:	jae    0x1400068d2
   1400068b7:	mov    r8d,0x129
   1400068bd:	nop    DWORD PTR [rax]
   1400068c0:	movzx  eax,cx
   1400068c3:	cmp    r8w,WORD PTR [rdi+rax*4]
   1400068c8:	je     0x1400068ea
   1400068ca:	inc    cx
   1400068cd:	cmp    cx,bx
   1400068d0:	jb     0x1400068c0
   1400068d2:	mov    eax,r12d
   1400068d5:	mov    BYTE PTR [rip+0x3b066],al        # 0x140041941
   1400068db:	cmp    bpl,0x1
   1400068df:	jne    0x1400068ef
   1400068e1:	movzx  eax,BYTE PTR [rip+0x398f9]        # 0x1400401e1
   1400068e8:	jmp    0x140006915
   1400068ea:	movzx  eax,cl
   1400068ed:	jmp    0x1400068d5
   1400068ef:	movzx  ecx,si
   1400068f2:	cmp    si,bx
   1400068f5:	jae    0x140006912
   1400068f7:	mov    r8d,0x131
   1400068fd:	nop    DWORD PTR [rax]
   140006900:	movzx  eax,cx
   140006903:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006908:	je     0x14000692a
   14000690a:	inc    cx
   14000690d:	cmp    cx,bx
   140006910:	jb     0x140006900
   140006912:	mov    eax,r12d
   140006915:	mov    BYTE PTR [rip+0x3b027],al        # 0x140041942
   14000691b:	cmp    bpl,0x1
   14000691f:	jne    0x14000692f
   140006921:	movzx  eax,BYTE PTR [rip+0x398c3]        # 0x1400401eb
   140006928:	jmp    0x140006955
   14000692a:	movzx  eax,cl
   14000692d:	jmp    0x140006915
   14000692f:	movzx  ecx,si
   140006932:	cmp    si,bx
   140006935:	jae    0x140006952
   140006937:	mov    r8d,0x13b
   14000693d:	nop    DWORD PTR [rax]
   140006940:	movzx  eax,cx
   140006943:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006948:	je     0x14000696a
   14000694a:	inc    cx
   14000694d:	cmp    cx,bx
   140006950:	jb     0x140006940
   140006952:	mov    eax,r12d
   140006955:	mov    BYTE PTR [rip+0x3afe8],al        # 0x140041943
   14000695b:	cmp    bpl,0x1
   14000695f:	jne    0x14000696f
   140006961:	movzx  eax,BYTE PTR [rip+0x3988b]        # 0x1400401f3
   140006968:	jmp    0x140006995
   14000696a:	movzx  eax,cl
   14000696d:	jmp    0x140006955
   14000696f:	movzx  ecx,si
   140006972:	cmp    si,bx
   140006975:	jae    0x140006992
   140006977:	mov    r8d,0x143
   14000697d:	nop    DWORD PTR [rax]
   140006980:	movzx  eax,cx
   140006983:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006988:	je     0x1400069aa
   14000698a:	inc    cx
   14000698d:	cmp    cx,bx
   140006990:	jb     0x140006980
   140006992:	mov    eax,r12d
   140006995:	mov    BYTE PTR [rip+0x3afa9],al        # 0x140041944
   14000699b:	cmp    bpl,0x1
   14000699f:	jne    0x1400069af
   1400069a1:	movzx  eax,BYTE PTR [rip+0x39827]        # 0x1400401cf
   1400069a8:	jmp    0x1400069d5
   1400069aa:	movzx  eax,cl
   1400069ad:	jmp    0x140006995
   1400069af:	movzx  ecx,si
   1400069b2:	cmp    si,bx
   1400069b5:	jae    0x1400069d2
   1400069b7:	mov    r8d,0x11f
   1400069bd:	nop    DWORD PTR [rax]
   1400069c0:	movzx  eax,cx
   1400069c3:	cmp    r8w,WORD PTR [rdi+rax*4]
   1400069c8:	je     0x1400069ea
   1400069ca:	inc    cx
   1400069cd:	cmp    cx,bx
   1400069d0:	jb     0x1400069c0
   1400069d2:	mov    eax,r12d
   1400069d5:	mov    BYTE PTR [rip+0x3af6a],al        # 0x140041945
   1400069db:	cmp    bpl,0x1
   1400069df:	jne    0x1400069ef
   1400069e1:	movzx  eax,BYTE PTR [rip+0x397f5]        # 0x1400401dd
   1400069e8:	jmp    0x140006a15
   1400069ea:	movzx  eax,cl
   1400069ed:	jmp    0x1400069d5
   1400069ef:	movzx  ecx,si
   1400069f2:	cmp    si,bx
   1400069f5:	jae    0x140006a12
   1400069f7:	mov    r8d,0x12d
   1400069fd:	nop    DWORD PTR [rax]
   140006a00:	movzx  eax,cx
   140006a03:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006a08:	je     0x140006a2a
   140006a0a:	inc    cx
   140006a0d:	cmp    cx,bx
   140006a10:	jb     0x140006a00
   140006a12:	mov    eax,r12d
   140006a15:	mov    BYTE PTR [rip+0x3af2b],al        # 0x140041946
   140006a1b:	cmp    bpl,0x1
   140006a1f:	jne    0x140006a2f
   140006a21:	movzx  eax,BYTE PTR [rip+0x397bd]        # 0x1400401e5
   140006a28:	jmp    0x140006a55
   140006a2a:	movzx  eax,cl
   140006a2d:	jmp    0x140006a15
   140006a2f:	movzx  ecx,si
   140006a32:	cmp    si,bx
   140006a35:	jae    0x140006a52
   140006a37:	mov    r8d,0x135
   140006a3d:	nop    DWORD PTR [rax]
   140006a40:	movzx  eax,cx
   140006a43:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006a48:	je     0x140006a6a
   140006a4a:	inc    cx
   140006a4d:	cmp    cx,bx
   140006a50:	jb     0x140006a40
   140006a52:	mov    eax,r12d
   140006a55:	mov    BYTE PTR [rip+0x3aeec],al        # 0x140041947
   140006a5b:	cmp    bpl,0x1
   140006a5f:	jne    0x140006a6f
   140006a61:	movzx  eax,BYTE PTR [rip+0x39787]        # 0x1400401ef
   140006a68:	jmp    0x140006a95
   140006a6a:	movzx  eax,cl
   140006a6d:	jmp    0x140006a55
   140006a6f:	movzx  ecx,si
   140006a72:	cmp    si,bx
   140006a75:	jae    0x140006a92
   140006a77:	mov    r8d,0x13f
   140006a7d:	nop    DWORD PTR [rax]
   140006a80:	movzx  eax,cx
   140006a83:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006a88:	je     0x140006aaa
   140006a8a:	inc    cx
   140006a8d:	cmp    cx,bx
   140006a90:	jb     0x140006a80
   140006a92:	mov    eax,r12d
   140006a95:	mov    BYTE PTR [rip+0x3aead],al        # 0x140041948
   140006a9b:	cmp    bpl,0x1
   140006a9f:	jne    0x140006aaf
   140006aa1:	movzx  eax,BYTE PTR [rip+0x3974f]        # 0x1400401f7
   140006aa8:	jmp    0x140006ad5
   140006aaa:	movzx  eax,cl
   140006aad:	jmp    0x140006a95
   140006aaf:	movzx  ecx,si
   140006ab2:	cmp    si,bx
   140006ab5:	jae    0x140006ad2
   140006ab7:	mov    r8d,0x147
   140006abd:	nop    DWORD PTR [rax]
   140006ac0:	movzx  eax,cx
   140006ac3:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006ac8:	je     0x140006ae9
   140006aca:	inc    cx
   140006acd:	cmp    cx,bx
   140006ad0:	jb     0x140006ac0
   140006ad2:	mov    eax,r12d
   140006ad5:	mov    BYTE PTR [rip+0x3ae6e],al        # 0x140041949
   140006adb:	test   bpl,bpl
   140006ade:	jne    0x140006aee
   140006ae0:	movzx  eax,BYTE PTR [rip+0x395f4]        # 0x1400400db
   140006ae7:	jmp    0x140006b15
   140006ae9:	movzx  eax,cl
   140006aec:	jmp    0x140006ad5
   140006aee:	movzx  ecx,si
   140006af1:	cmp    si,bx
   140006af4:	jae    0x140006b12
   140006af6:	mov    r8d,0x2b
   140006afc:	nop    DWORD PTR [rax+0x0]
   140006b00:	movzx  eax,cx
   140006b03:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006b08:	je     0x140006b29
   140006b0a:	inc    cx
   140006b0d:	cmp    cx,bx
   140006b10:	jb     0x140006b00
   140006b12:	mov    eax,r12d
   140006b15:	mov    BYTE PTR [rip+0x3ae32],al        # 0x14004194d
   140006b1b:	test   bpl,bpl
   140006b1e:	jne    0x140006b2e
   140006b20:	movzx  eax,BYTE PTR [rip+0x395b7]        # 0x1400400de
   140006b27:	jmp    0x140006b55
   140006b29:	movzx  eax,cl
   140006b2c:	jmp    0x140006b15
   140006b2e:	movzx  ecx,si
   140006b31:	cmp    si,bx
   140006b34:	jae    0x140006b52
   140006b36:	mov    r8d,0x2e
   140006b3c:	nop    DWORD PTR [rax+0x0]
   140006b40:	movzx  eax,cx
   140006b43:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006b48:	je     0x140006b69
   140006b4a:	inc    cx
   140006b4d:	cmp    cx,bx
   140006b50:	jb     0x140006b40
   140006b52:	mov    eax,r12d
   140006b55:	mov    BYTE PTR [rip+0x3adf3],al        # 0x14004194e
   140006b5b:	test   bpl,bpl
   140006b5e:	jne    0x140006b6e
   140006b60:	movzx  eax,BYTE PTR [rip+0x395b0]        # 0x140040117
   140006b67:	jmp    0x140006b95
   140006b69:	movzx  eax,cl
   140006b6c:	jmp    0x140006b55
   140006b6e:	movzx  ecx,si
   140006b71:	cmp    si,bx
   140006b74:	jae    0x140006b92
   140006b76:	mov    r8d,0x67
   140006b7c:	nop    DWORD PTR [rax+0x0]
   140006b80:	movzx  eax,cx
   140006b83:	cmp    r8w,WORD PTR [rdi+rax*4]
   140006b88:	je     0x140006bb2
   140006b8a:	inc    cx
   140006b8d:	cmp    cx,bx
   140006b90:	jb     0x140006b80
   140006b92:	mov    eax,r12d
   140006b95:	mov    BYTE PTR [rip+0x3adb8],al        # 0x140041953
   140006b9b:	mov    BYTE PTR [rip+0x3adb0],al        # 0x140041951
   140006ba1:	mov    BYTE PTR [rip+0x3ada8],al        # 0x14004194f
   140006ba7:	test   bpl,bpl
   140006baa:	jne    0x140006bb7
   140006bac:	movzx  r12d,dl
   140006bb0:	jmp    0x140006bd8
   140006bb2:	movzx  eax,cl
   140006bb5:	jmp    0x140006b95
   140006bb7:	cmp    si,bx
   140006bba:	jae    0x140006bd8
   140006bbc:	nop    DWORD PTR [rax+0x0]
   140006bc0:	movzx  eax,si
   140006bc3:	cmp    r9w,WORD PTR [rdi+rax*4]
   140006bc8:	je     0x140006bd4
   140006bca:	inc    si
   140006bcd:	cmp    si,bx
   140006bd0:	jb     0x140006bc0
   140006bd2:	jmp    0x140006bd8
   140006bd4:	movzx  r12d,sil
   140006bd8:	mov    rbx,QWORD PTR [rsp+0x50]
   140006bdd:	mov    rbp,QWORD PTR [rsp+0x58]
   140006be2:	mov    rsi,QWORD PTR [rsp+0x60]
   140006be7:	mov    BYTE PTR [rip+0x3ad66],r12b        # 0x140041954
   140006bee:	mov    BYTE PTR [rip+0x3ad5b],r12b        # 0x140041950
   140006bf5:	mov    BYTE PTR [rip+0x3ad59],0x0        # 0x140041955
   140006bfc:	mov    BYTE PTR [rip+0x3ad4f],0x0        # 0x140041952
   140006c03:	add    rsp,0x20
   140006c07:	pop    r15
   140006c09:	pop    r14
   140006c0b:	pop    r13
   140006c0d:	pop    r12
   140006c0f:	pop    rdi
   140006c10:	ret    
   140006c11:	int3   
   140006c12:	int3   
   140006c13:	int3   
   140006c14:	int3   
   140006c15:	int3   
   140006c16:	int3   
   140006c17:	int3   
   140006c18:	int3   
   140006c19:	int3   
   140006c1a:	int3   
   140006c1b:	int3   
   140006c1c:	int3   
   140006c1d:	int3   
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	mov    QWORD PTR [rsp+0x8],rbx
   140006c25:	mov    QWORD PTR [rsp+0x10],rsi
   140006c2a:	mov    QWORD PTR [rsp+0x18],rdi
   140006c2f:	movzx  r8d,WORD PTR [rcx]
   140006c33:	mov    r10,rcx
   140006c36:	xor    eax,eax
   140006c38:	movzx  ecx,r8w
   140006c3c:	movzx  ebx,r8w
   140006c40:	movzx  edi,dl
   140006c43:	shr    cx,0x8
   140006c47:	shr    bx,0x8
   140006c4b:	movzx  r11d,ax
   140006c4f:	lea    rsi,[rip+0xffffffffffff93aa]        # 0x140000000
   140006c56:	cmp    cx,0xf
   140006c5a:	ja     0x140006c9f
   140006c5c:	mov    edx,0xff00
   140006c61:	test   dx,r8w
   140006c65:	jne    0x140006c7a
   140006c67:	lea    ecx,[r8-0x41]
   140006c6b:	cmp    cl,0x19
   140006c6e:	ja     0x140006c9f
   140006c70:	movzx  edx,r8w
   140006c74:	or     dx,0x20
   140006c78:	jmp    0x140006ca3
   140006c7a:	dec    cl
   140006c7c:	add    cl,cl
   140006c7e:	movzx  edx,cl
   140006c81:	cmp    r8b,BYTE PTR [rdx+rsi*1+0x31240]
   140006c89:	jb     0x140006c9f
   140006c8b:	cmp    r8b,BYTE PTR [rdx+rsi*1+0x31241]
   140006c93:	ja     0x140006c9f
   140006c95:	movzx  edx,r8w
   140006c99:	or     dx,0x1
   140006c9d:	jmp    0x140006ca3
   140006c9f:	movzx  edx,r8w
   140006ca3:	mov    WORD PTR [r10],dx
   140006ca7:	cmp    r8w,dx
   140006cab:	je     0x140006cb3
   140006cad:	mov    r11d,0x1
   140006cb3:	cmp    bl,dil
   140006cb6:	jne    0x140006cc5
   140006cb8:	movzx  eax,dx
   140006cbb:	movzx  eax,BYTE PTR [rax+rsi*1+0x400b0]
   140006cc3:	jmp    0x140006ce9
   140006cc5:	movzx  r8d,WORD PTR [rsp+0x28]
   140006ccb:	cmp    ax,r8w
   140006ccf:	jae    0x140006ce4
   140006cd1:	movzx  ecx,ax
   140006cd4:	cmp    dx,WORD PTR [r9+rcx*4]
   140006cd9:	je     0x140006d01
   140006cdb:	inc    ax
   140006cde:	cmp    ax,r8w
   140006ce2:	jb     0x140006cd1
   140006ce4:	mov    eax,0xff
   140006ce9:	mov    WORD PTR [r10],ax
   140006ced:	movzx  eax,r11w
   140006cf1:	mov    rbx,QWORD PTR [rsp+0x8]
   140006cf6:	mov    rsi,QWORD PTR [rsp+0x10]
   140006cfb:	mov    rdi,QWORD PTR [rsp+0x18]
   140006d00:	ret    
   140006d01:	mov    rbx,QWORD PTR [rsp+0x8]
   140006d06:	mov    rsi,QWORD PTR [rsp+0x10]
   140006d0b:	mov    rdi,QWORD PTR [rsp+0x18]
   140006d10:	movzx  ecx,al
   140006d13:	movzx  eax,r11w
   140006d17:	mov    WORD PTR [r10],cx
   140006d1b:	ret    
   140006d1c:	int3   
   140006d1d:	int3   
   140006d1e:	int3   
   140006d1f:	int3   
   140006d20:	sub    rsp,0x28
   140006d24:	mov    rdx,QWORD PTR [rdx]
   140006d27:	mov    rcx,QWORD PTR [rcx]
   140006d2a:	call   0x140007550
   140006d2f:	movzx  ecx,ax
   140006d32:	test   ax,ax
   140006d35:	jns    0x140006d3f
   140006d37:	or     eax,0xffffffff
   140006d3a:	add    rsp,0x28
   140006d3e:	ret    
   140006d3f:	xor    eax,eax
   140006d41:	test   cx,cx
   140006d44:	setg   al
   140006d47:	add    rsp,0x28
   140006d4b:	ret    
   140006d4c:	int3   
   140006d4d:	int3   
   140006d4e:	int3   
   140006d4f:	int3   
   140006d50:	rex push rsi
   140006d52:	push   rdi
   140006d53:	push   r15
   140006d55:	mov    rax,QWORD PTR [rip+0x39784]        # 0x1400404e0
   140006d5c:	xor    r15d,r15d
   140006d5f:	mov    rdi,rcx
   140006d62:	movzx  esi,WORD PTR [rax+0x80]
   140006d69:	movzx  r10d,r15w
   140006d6d:	movzx  r11d,si
   140006d71:	cmp    r15w,si
   140006d75:	jg     0x140006e40
   140006d7b:	mov    QWORD PTR [rsp+0x20],rbx
   140006d80:	mov    QWORD PTR [rsp+0x30],rbp
   140006d85:	mov    rbp,QWORD PTR [rip+0x3735c]        # 0x14003e0e8
   140006d8c:	mov    QWORD PTR [rsp+0x38],r14
   140006d91:	mov    r14,QWORD PTR [rip+0x37358]        # 0x14003e0f0
   140006d98:	nop    DWORD PTR [rax+rax*1+0x0]
   140006da0:	movsx  ecx,r10w
   140006da4:	movsx  eax,r11w
   140006da8:	add    eax,ecx
   140006daa:	cdq    
   140006dab:	sub    eax,edx
   140006dad:	sar    eax,1
   140006daf:	movsxd rbx,eax
   140006db2:	movsx  rcx,bx
   140006db6:	movzx  edx,WORD PTR [r14+rcx*2+0x2]
   140006dbc:	movsx  r8,WORD PTR [r14+rcx*2]
   140006dc1:	sub    dx,r8w
   140006dc5:	lea    rcx,[r8+rbp*1]
   140006dc9:	movsx  r9d,dx
   140006dcd:	mov    rdx,rdi
   140006dd0:	jne    0x140006dd7
   140006dd2:	mov    edx,r15d
   140006dd5:	jmp    0x140006dff
   140006dd7:	movzx  eax,BYTE PTR [rdi]
   140006dda:	cmp    al,BYTE PTR [rcx]
   140006ddc:	jne    0x140006df7
   140006dde:	xchg   ax,ax
   140006de0:	test   al,al
   140006de2:	je     0x140006dd2
   140006de4:	dec    r9d
   140006de7:	je     0x140006dd2
   140006de9:	movzx  eax,BYTE PTR [rdx+0x1]
   140006ded:	inc    rdx
   140006df0:	inc    rcx
   140006df3:	cmp    al,BYTE PTR [rcx]
   140006df5:	je     0x140006de0
   140006df7:	movzx  edx,BYTE PTR [rdx]
   140006dfa:	movzx  eax,BYTE PTR [rcx]
   140006dfd:	sub    edx,eax
   140006dff:	test   dx,dx
   140006e02:	jns    0x140006e0a
   140006e04:	lea    r11d,[rbx-0x1]
   140006e08:	jmp    0x140006e0e
   140006e0a:	lea    r10d,[rbx+0x1]
   140006e0e:	cmp    r10w,r11w
   140006e12:	jle    0x140006da0
   140006e14:	mov    r14,QWORD PTR [rsp+0x38]
   140006e19:	mov    rbp,QWORD PTR [rsp+0x30]
   140006e1e:	mov    rbx,QWORD PTR [rsp+0x20]
   140006e23:	test   r10w,r10w
   140006e27:	je     0x140006e45
   140006e29:	dec    r10w
   140006e2d:	cmp    r10w,si
   140006e31:	jne    0x140006e37
   140006e33:	lea    r10d,[rsi-0x1]
   140006e37:	movzx  eax,r10w
   140006e3b:	pop    r15
   140006e3d:	pop    rdi
   140006e3e:	pop    rsi
   140006e3f:	ret    
   140006e40:	movzx  edx,WORD PTR [rsp+0x28]
   140006e45:	test   dx,dx
   140006e48:	jns    0x140006e29
   140006e4a:	movzx  eax,r15w
   140006e4e:	pop    r15
   140006e50:	pop    rdi
   140006e51:	pop    rsi
   140006e52:	ret    
   140006e53:	int3   
   140006e54:	int3   
   140006e55:	int3   
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	int3   
   140006e59:	int3   
   140006e5a:	int3   
   140006e5b:	int3   
   140006e5c:	int3   
   140006e5d:	int3   
   140006e5e:	int3   
   140006e5f:	int3   
   140006e60:	mov    WORD PTR [rsp+0x10],dx
   140006e65:	sub    rsp,0x38
   140006e69:	movzx  eax,WORD PTR [rip+0x39348]        # 0x1400401b8
   140006e70:	mov    rdx,rcx
   140006e73:	cmp    ax,WORD PTR [rcx+0x4e]
   140006e77:	jae    0x140006eb8
   140006e79:	movzx  ecx,ax
   140006e7c:	mov    rax,QWORD PTR [rip+0x3a88d]        # 0x140041710
   140006e83:	lea    rdx,[rax+rcx*8]
   140006e87:	movzx  eax,WORD PTR [rax+rcx*8]
   140006e8b:	mov    WORD PTR [rip+0x3945e],ax        # 0x1400402f0
   140006e92:	movzx  eax,WORD PTR [rdx+0x2]
   140006e96:	mov    WORD PTR [rip+0x39455],ax        # 0x1400402f2
   140006e9d:	movzx  eax,WORD PTR [rdx+0x4]
   140006ea1:	mov    WORD PTR [rip+0x3944c],ax        # 0x1400402f4
   140006ea8:	movzx  eax,WORD PTR [rdx+0x6]
   140006eac:	mov    WORD PTR [rip+0x39443],ax        # 0x1400402f6
   140006eb3:	jmp    0x140006f54
   140006eb8:	cmp    ax,WORD PTR [rcx+0x4c]
   140006ebc:	jae    0x140006f54
   140006ec2:	movzx  ecx,ax
   140006ec5:	mov    eax,DWORD PTR [rdx+0x48]
   140006ec8:	xor    r8d,r8d
   140006ecb:	lea    edx,[rax+rcx*8]
   140006ece:	mov    rcx,QWORD PTR [rip+0x392f3]        # 0x1400401c8
   140006ed5:	call   0x14002ad10
   140006eda:	cmp    eax,0xffffffff
   140006edd:	jne    0x140006ee9
   140006edf:	mov    eax,0x3
   140006ee4:	add    rsp,0x38
   140006ee8:	ret    
   140006ee9:	mov    rcx,QWORD PTR [rip+0x392d8]        # 0x1400401c8
   140006ef0:	lea    r9,[rsp+0x48]
   140006ef5:	lea    rdx,[rip+0x393f4]        # 0x1400402f0
   140006efc:	mov    rcx,QWORD PTR [rcx]
   140006eff:	mov    r8d,0x8
   140006f05:	mov    QWORD PTR [rsp+0x20],0x0
   140006f0e:	call   QWORD PTR [rip+0x282f4]        # 0x14002f208
   140006f14:	test   eax,eax
   140006f16:	jne    0x140006f4d
   140006f18:	call   QWORD PTR [rip+0x28242]        # 0x14002f160
   140006f1e:	cmp    eax,0x58
   140006f21:	jae    0x140006f31
   140006f23:	lea    rcx,[rip+0x2a176]        # 0x1400310a0
   140006f2a:	mov    eax,eax
   140006f2c:	mov    ecx,DWORD PTR [rcx+rax*4]
   140006f2f:	jmp    0x140006f36
   140006f31:	mov    ecx,0x106
   140006f36:	mov    DWORD PTR [rip+0x3c17c],ecx        # 0x1400430b8
   140006f3c:	mov    DWORD PTR [rip+0x3c582],0x2        # 0x1400434c8
   140006f46:	mov    BYTE PTR [rip+0x3c473],0x0        # 0x1400433c0
   140006f4d:	cmp    DWORD PTR [rsp+0x48],0x8
   140006f52:	jne    0x140006edf
   140006f54:	movzx  eax,WORD PTR [rip+0x39261]        # 0x1400401bc
   140006f5b:	mov    WORD PTR [rip+0x39396],ax        # 0x1400402f8
   140006f62:	mov    eax,0x1
   140006f67:	add    rsp,0x38
   140006f6b:	ret    
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	mov    QWORD PTR [rsp+0x8],rbx
   140006f75:	mov    QWORD PTR [rsp+0x10],rdi
   140006f7a:	mov    r11,rdx
   140006f7d:	xor    ebx,ebx
   140006f7f:	movzx  edx,r8w
   140006f83:	movzx  eax,r8w
   140006f87:	shr    dx,1
   140006f8a:	mov    r10,r9
   140006f8d:	mov    rdi,rcx
   140006f90:	mov    WORD PTR [rip+0x39225],bx        # 0x1400401bc
   140006f97:	and    eax,0x80000001
   140006f9c:	jge    0x140006fa5
   140006f9e:	dec    eax
   140006fa0:	or     eax,0xfffffffe
   140006fa3:	inc    eax
   140006fa5:	test   eax,eax
   140006fa7:	movzx  eax,dx
   140006faa:	lea    r9,[rax+r11*1]
   140006fae:	jne    0x1400072cb
   140006fb4:	movzx  eax,BYTE PTR [r9]
   140006fb8:	test   al,0x8
   140006fba:	jne    0x140006fc1
   140006fbc:	mov    ebx,0x1
   140006fc1:	test   al,0x4
   140006fc3:	je     0x1400070e0
   140006fc9:	test   al,0x2
   140006fcb:	je     0x1400070be
   140006fd1:	test   al,0x1
   140006fd3:	je     0x1400070b2
   140006fd9:	movzx  eax,BYTE PTR [r9+0x2]
   140006fde:	movzx  edx,BYTE PTR [r9+0x1]
   140006fe3:	add    r8w,0x4
   140006fe8:	shr    al,0x4
   140006feb:	shl    dx,0x4
   140006fef:	movzx  ecx,al
   140006ff2:	or     dx,cx
   140006ff5:	mov    WORD PTR [r10],dx
   140006ff9:	cmp    dx,WORD PTR [rdi+0x4c]
   140006ffd:	jne    0x1400070ed
   140007003:	movzx  eax,BYTE PTR [r9+0x3]
   140007008:	movzx  edx,BYTE PTR [r9+0x2]
   14000700d:	shl    dx,0x8
   140007011:	or     dx,ax
   140007014:	movzx  eax,BYTE PTR [r9+0x4]
   140007019:	shl    dx,0x4
   14000701d:	shr    al,0x4
   140007020:	movzx  ecx,al
   140007023:	or     dx,cx
   140007026:	mov    WORD PTR [rip+0x392c3],dx        # 0x1400402f0
   14000702d:	movzx  eax,BYTE PTR [r9+0x5]
   140007032:	movzx  edx,BYTE PTR [r9+0x4]
   140007037:	shl    dx,0x8
   14000703b:	or     dx,ax
   14000703e:	movzx  eax,BYTE PTR [r9+0x6]
   140007043:	shl    dx,0x4
   140007047:	shr    al,0x4
   14000704a:	movzx  ecx,al
   14000704d:	or     dx,cx
   140007050:	mov    WORD PTR [rip+0x3929b],dx        # 0x1400402f2
   140007057:	movzx  eax,BYTE PTR [r9+0x6]
   14000705c:	movzx  edx,BYTE PTR [r9+0x7]
   140007061:	shl    ax,0x8
   140007065:	or     dx,ax
   140007068:	movzx  eax,BYTE PTR [r9+0x8]
   14000706d:	shl    dx,0x4
   140007071:	shr    al,0x4
   140007074:	movzx  ecx,al
   140007077:	or     dx,cx
   14000707a:	mov    WORD PTR [rip+0x39273],dx        # 0x1400402f4
   140007081:	movzx  eax,BYTE PTR [r9+0x9]
   140007086:	movzx  edx,BYTE PTR [r9+0x8]
   14000708b:	shl    dx,0x8
   14000708f:	or     dx,ax
   140007092:	movzx  eax,BYTE PTR [r9+0xa]
   140007097:	shr    al,0x4
   14000709a:	shl    dx,0x4
   14000709e:	movzx  ecx,al
   1400070a1:	or     dx,cx
   1400070a4:	add    r8w,0x10
   1400070a9:	mov    WORD PTR [rip+0x39246],dx        # 0x1400402f6
   1400070b0:	jmp    0x1400070ed
   1400070b2:	movzx  eax,BYTE PTR [r9+0x1]
   1400070b7:	add    r8w,0x3
   1400070bc:	jmp    0x1400070e9
   1400070be:	and    al,0x1
   1400070c0:	movzx  edx,al
   1400070c3:	movzx  eax,BYTE PTR [r9+0x1]
   1400070c8:	shr    al,0x4
   1400070cb:	shl    dx,0x4
   1400070cf:	movzx  ecx,al
   1400070d2:	or     dx,cx
   1400070d5:	add    r8w,0x2
   1400070da:	mov    WORD PTR [r10],dx
   1400070de:	jmp    0x1400070ed
   1400070e0:	and    al,0x3
   1400070e2:	inc    r8w
   1400070e6:	movzx  eax,al
   1400070e9:	mov    WORD PTR [r10],ax
   1400070ed:	test   bx,bx
   1400070f0:	je     0x1400073c7
   1400070f6:	inc    r8w
   1400070fa:	movzx  ecx,r8w
   1400070fe:	movzx  eax,r8w
   140007102:	shr    cx,1
   140007105:	and    eax,0x80000001
   14000710a:	jge    0x140007113
   14000710c:	dec    eax
   14000710e:	or     eax,0xfffffffe
   140007111:	inc    eax
   140007113:	test   eax,eax
   140007115:	movzx  eax,cx
   140007118:	lea    r10,[rax+r11*1]
   14000711c:	movzx  eax,BYTE PTR [rax+r11*1]
   140007121:	je     0x14000721d
   140007127:	test   al,0x8
   140007129:	je     0x1400073bb
   14000712f:	test   al,0x4
   140007131:	je     0x1400071ec
   140007137:	test   al,0x2
   140007139:	je     0x1400071c0
   14000713f:	and    al,0x1
   140007141:	mov    r9d,0x1fff
   140007147:	add    r8w,0x3
   14000714c:	movzx  edx,al
   14000714f:	movzx  eax,BYTE PTR [r10+0x1]
   140007154:	shl    dx,0x8
   140007158:	or     dx,ax
   14000715b:	movzx  eax,BYTE PTR [r10+0x2]
   140007160:	shr    al,0x4
   140007163:	shl    dx,0x4
   140007167:	movzx  ecx,al
   14000716a:	or     dx,cx
   14000716d:	mov    WORD PTR [rip+0x39048],dx        # 0x1400401bc
   140007174:	cmp    dx,r9w
   140007178:	jne    0x1400073c7
   14000717e:	movzx  eax,BYTE PTR [r10+0x2]
   140007183:	movzx  edx,BYTE PTR [r10+0x3]
   140007188:	shl    ax,0x8
   14000718c:	or     dx,ax
   14000718f:	movzx  eax,BYTE PTR [r10+0x4]
   140007194:	shr    al,0x4
   140007197:	shl    dx,0x4
   14000719b:	movzx  ecx,al
   14000719e:	or     dx,cx
   1400071a1:	add    dx,r9w
   1400071a5:	add    r8w,0x4
   1400071aa:	movzx  eax,r8w
   1400071ae:	mov    WORD PTR [rip+0x39007],dx        # 0x1400401bc
   1400071b5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400071ba:	mov    rdi,QWORD PTR [rsp+0x10]
   1400071bf:	ret    
   1400071c0:	and    al,0x1
   1400071c2:	movzx  ecx,al
   1400071c5:	movzx  eax,BYTE PTR [r10+0x1]
   1400071ca:	shl    cx,0x8
   1400071ce:	or     cx,ax
   1400071d1:	add    r8w,0x2
   1400071d6:	movzx  eax,r8w
   1400071da:	mov    WORD PTR [rip+0x38fdb],cx        # 0x1400401bc
   1400071e1:	mov    rbx,QWORD PTR [rsp+0x8]
   1400071e6:	mov    rdi,QWORD PTR [rsp+0x10]
   1400071eb:	ret    
   1400071ec:	and    al,0x3
   1400071ee:	movzx  edx,al
   1400071f1:	movzx  eax,BYTE PTR [r10+0x1]
   1400071f6:	shr    al,0x4
   1400071f9:	shl    dx,0x4
   1400071fd:	movzx  ecx,al
   140007200:	or     dx,cx
   140007203:	inc    r8w
   140007207:	movzx  eax,r8w
   14000720b:	mov    WORD PTR [rip+0x38faa],dx        # 0x1400401bc
   140007212:	mov    rbx,QWORD PTR [rsp+0x8]
   140007217:	mov    rdi,QWORD PTR [rsp+0x10]
   14000721c:	ret    
   14000721d:	test   al,al
   14000721f:	jns    0x1400073b8
   140007225:	test   al,0x40
   140007227:	je     0x1400072c0
   14000722d:	test   al,0x20
   14000722f:	je     0x14000728e
   140007231:	and    al,0x1f
   140007233:	mov    r9d,0x1fff
   140007239:	add    r8w,0x3
   14000723e:	movzx  ecx,al
   140007241:	movzx  eax,BYTE PTR [r10+0x1]
   140007246:	shl    cx,0x8
   14000724a:	or     cx,ax
   14000724d:	mov    WORD PTR [rip+0x38f68],cx        # 0x1400401bc
   140007254:	cmp    cx,r9w
   140007258:	jne    0x1400073c7
   14000725e:	movzx  eax,BYTE PTR [r10+0x3]
   140007263:	movzx  ecx,BYTE PTR [r10+0x2]
   140007268:	shl    cx,0x8
   14000726c:	or     cx,ax
   14000726f:	add    cx,r9w
   140007273:	add    r8w,0x4
   140007278:	movzx  eax,r8w
   14000727c:	mov    WORD PTR [rip+0x38f39],cx        # 0x1400401bc
   140007283:	mov    rbx,QWORD PTR [rsp+0x8]
   140007288:	mov    rdi,QWORD PTR [rsp+0x10]
   14000728d:	ret    
   14000728e:	and    al,0x1f
   140007290:	movzx  edx,al
   140007293:	movzx  eax,BYTE PTR [r10+0x1]
   140007298:	shr    al,0x4
   14000729b:	shl    dx,0x4
   14000729f:	movzx  ecx,al
   1400072a2:	or     dx,cx
   1400072a5:	add    r8w,0x2
   1400072aa:	movzx  eax,r8w
   1400072ae:	mov    WORD PTR [rip+0x38f07],dx        # 0x1400401bc
   1400072b5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400072ba:	mov    rdi,QWORD PTR [rsp+0x10]
   1400072bf:	ret    
   1400072c0:	and    al,0x3f
   1400072c2:	inc    r8w
   1400072c6:	jmp    0x1400073bd
   1400072cb:	movzx  eax,BYTE PTR [r9+0x1]
   1400072d0:	test   al,al
   1400072d2:	js     0x1400072d9
   1400072d4:	mov    ebx,0x1
   1400072d9:	test   al,0x40
   1400072db:	je     0x1400073b0
   1400072e1:	test   al,0x20
   1400072e3:	je     0x1400073a4
   1400072e9:	test   al,0x10
   1400072eb:	je     0x14000737f
   1400072f1:	and    al,0xf
   1400072f3:	add    r8w,0x4
   1400072f8:	movzx  ecx,al
   1400072fb:	movzx  eax,BYTE PTR [r9+0x2]
   140007300:	shl    cx,0x8
   140007304:	or     cx,ax
   140007307:	mov    WORD PTR [r10],cx
   14000730b:	cmp    cx,WORD PTR [rdi+0x4c]
   14000730f:	jne    0x1400070ed
   140007315:	movzx  ecx,BYTE PTR [r9+0x3]
   14000731a:	movzx  eax,BYTE PTR [r9+0x4]
   14000731f:	shl    cx,0x8
   140007323:	or     cx,ax
   140007326:	mov    WORD PTR [rip+0x38fc3],cx        # 0x1400402f0
   14000732d:	movzx  ecx,BYTE PTR [r9+0x5]
   140007332:	movzx  eax,BYTE PTR [r9+0x6]
   140007337:	shl    cx,0x8
   14000733b:	or     cx,ax
   14000733e:	mov    WORD PTR [rip+0x38fad],cx        # 0x1400402f2
   140007345:	movzx  ecx,BYTE PTR [r9+0x7]
   14000734a:	movzx  eax,BYTE PTR [r9+0x8]
   14000734f:	shl    cx,0x8
   140007353:	or     cx,ax
   140007356:	mov    WORD PTR [rip+0x38f97],cx        # 0x1400402f4
   14000735d:	movzx  ecx,BYTE PTR [r9+0x9]
   140007362:	movzx  eax,BYTE PTR [r9+0xa]
   140007367:	shl    cx,0x8
   14000736b:	or     cx,ax
   14000736e:	add    r8w,0x10
   140007373:	mov    WORD PTR [rip+0x38f7c],cx        # 0x1400402f6
   14000737a:	jmp    0x1400070ed
   14000737f:	and    al,0xf
   140007381:	movzx  edx,al
   140007384:	movzx  eax,BYTE PTR [r9+0x2]
   140007389:	shr    al,0x4
   14000738c:	shl    dx,0x4
   140007390:	movzx  ecx,al
   140007393:	or     dx,cx
   140007396:	add    r8w,0x3
   14000739b:	mov    WORD PTR [r10],dx
   14000739f:	jmp    0x1400070ed
   1400073a4:	and    al,0x1f
   1400073a6:	add    r8w,0x2
   1400073ab:	jmp    0x1400070e6
   1400073b0:	shr    al,0x4
   1400073b3:	jmp    0x1400070e0
   1400073b8:	shr    al,0x4
   1400073bb:	and    al,0x7
   1400073bd:	movzx  eax,al
   1400073c0:	mov    WORD PTR [rip+0x38df5],ax        # 0x1400401bc
   1400073c7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400073cc:	mov    rdi,QWORD PTR [rsp+0x10]
   1400073d1:	movzx  eax,r8w
   1400073d5:	ret    
   1400073d6:	int3   
   1400073d7:	int3   
   1400073d8:	int3   
   1400073d9:	int3   
   1400073da:	int3   
   1400073db:	int3   
   1400073dc:	int3   
   1400073dd:	int3   
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400073e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400073ea:	push   rsi
   1400073eb:	push   rdi
   1400073ec:	push   r12
   1400073ee:	push   r13
   1400073f0:	push   r14
   1400073f2:	sub    rsp,0x20
   1400073f6:	xor    ecx,ecx
   1400073f8:	mov    rdi,r8
   1400073fb:	mov    r13,rdx
   1400073fe:	mov    r14d,0xc8
   140007404:	mov    rax,rdx
   140007407:	movzx  r12d,cx
   14000740b:	mov    esi,ecx
   14000740d:	cmp    BYTE PTR [rdx],cl
   14000740f:	je     0x14000741b
   140007411:	lea    rax,[rax+0x1]
   140007415:	inc    esi
   140007417:	cmp    BYTE PTR [rax],cl
   140007419:	jne    0x140007411
   14000741b:	mov    QWORD PTR [rsp+0x50],r15
   140007420:	movzx  ebp,cx
   140007423:	movzx  ebx,cx
   140007426:	cmp    cx,si
   140007429:	jge    0x140007502
   14000742f:	mov    r8,QWORD PTR [rip+0x39aca]        # 0x140040f00
   140007436:	mov    edx,0x2b
   14000743b:	movsx  eax,r14w
   14000743f:	movsx  r15d,bx
   140007443:	mov    ecx,0x1
   140007448:	sub    eax,0x4
   14000744b:	cmp    r15d,eax
   14000744e:	jl     0x1400074ba
   140007450:	lea    r14d,[r14*4+0x0]
   140007458:	test   r12w,r12w
   14000745c:	jne    0x140007497
   14000745e:	mov    r12d,ecx
   140007461:	mov    ecx,r14d
   140007464:	call   QWORD PTR [rip+0x27fae]        # 0x14002f418
   14000746a:	mov    QWORD PTR [rip+0x39a8f],rax        # 0x140040f00
   140007471:	test   rax,rax
   140007474:	je     0x14000753f
   14000747a:	mov    r8d,r15d
   14000747d:	mov    rdx,rdi
   140007480:	mov    rcx,rax
   140007483:	call   QWORD PTR [rip+0x27fff]        # 0x14002f488
   140007489:	mov    r8,QWORD PTR [rip+0x39a70]        # 0x140040f00
   140007490:	mov    WORD PTR [rdi],0x0
   140007495:	jmp    0x1400074b2
   140007497:	mov    edx,r14d
   14000749a:	mov    rcx,r8
   14000749d:	call   QWORD PTR [rip+0x27f5d]        # 0x14002f400
   1400074a3:	mov    r8,rax
   1400074a6:	mov    QWORD PTR [rip+0x39a53],rax        # 0x140040f00
   1400074ad:	test   rax,rax
   1400074b0:	je     0x14000751f
   1400074b2:	mov    rdi,r8
   1400074b5:	mov    edx,0x2b
   1400074ba:	movsx  rax,bp
   1400074be:	movzx  ecx,BYTE PTR [rax+r13*1]
   1400074c3:	cmp    cl,BYTE PTR [rip+0x3a484]        # 0x14004194d
   1400074c9:	jne    0x1400074d5
   1400074cb:	movsx  rax,bx
   1400074cf:	mov    WORD PTR [rax+rdi*1],dx
   1400074d3:	jmp    0x1400074f0
   1400074d5:	mov    rax,QWORD PTR [rip+0x36c2c]        # 0x14003e108
   1400074dc:	movsx  rdx,bx
   1400074e0:	movzx  ecx,cl
   1400074e3:	movzx  ecx,WORD PTR [rax+rcx*4]
   1400074e7:	mov    WORD PTR [rdx+rdi*1],cx
   1400074eb:	mov    edx,0x2b
   1400074f0:	inc    bp
   1400074f3:	add    bx,0x2
   1400074f7:	cmp    bp,si
   1400074fa:	jl     0x14000743b
   140007500:	xor    ecx,ecx
   140007502:	movsx  rax,bx
   140007506:	add    bx,0x2
   14000750a:	mov    WORD PTR [rax+rdi*1],cx
   14000750e:	test   r12w,r12w
   140007512:	je     0x14000751f
   140007514:	movzx  r12d,bx
   140007518:	mov    WORD PTR [rip+0x399e9],bx        # 0x140040f08
   14000751f:	movzx  eax,r12w
   140007523:	mov    r15,QWORD PTR [rsp+0x50]
   140007528:	mov    rbx,QWORD PTR [rsp+0x58]
   14000752d:	mov    rbp,QWORD PTR [rsp+0x60]
   140007532:	add    rsp,0x20
   140007536:	pop    r14
   140007538:	pop    r13
   14000753a:	pop    r12
   14000753c:	pop    rdi
   14000753d:	pop    rsi
   14000753e:	ret    
   14000753f:	mov    eax,0x1
   140007544:	jmp    0x140007523
   140007546:	int3   
   140007547:	int3   
   140007548:	int3   
   140007549:	int3   
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	int3   
   14000754d:	int3   
   14000754e:	int3   
   14000754f:	int3   
   140007550:	mov    QWORD PTR [rsp+0x18],rbx
   140007555:	mov    QWORD PTR [rsp+0x20],rbp
   14000755a:	push   rsi
   14000755b:	push   rdi
   14000755c:	push   r12
   14000755e:	push   r14
   140007560:	push   r15
   140007562:	movzx  edi,BYTE PTR [rip+0x34d47]        # 0x14003c2b0
   140007569:	xor    r12d,r12d
   14000756c:	mov    rbp,rdx
   14000756f:	mov    r14,rcx
   140007572:	lea    r15,[rip+0x34d37]        # 0x14003c2b0
   140007579:	movzx  ebx,r12w
   14000757d:	nop    DWORD PTR [rax]
   140007580:	movzx  eax,bx
   140007583:	lea    r11,[rax+r14*1]
   140007587:	lea    r8,[rax+rbp*1]
   14000758b:	movzx  esi,BYTE PTR [r11]
   14000758f:	cmp    sil,BYTE PTR [r8]
   140007592:	jne    0x1400075a3
   140007594:	movzx  eax,BYTE PTR [r8+0x1]
   140007599:	cmp    BYTE PTR [r11+0x1],al
   14000759d:	je     0x140007686
   1400075a3:	movzx  r9d,WORD PTR [r11]
   1400075a7:	movzx  r10d,WORD PTR [r8]
   1400075ab:	mov    rcx,r15
   1400075ae:	mov    WORD PTR [rsp+0x30],r9w
   1400075b4:	mov    WORD PTR [rsp+0x38],r10w
   1400075ba:	cmp    dil,0xff
   1400075be:	je     0x1400075e0
   1400075c0:	movzx  edx,BYTE PTR [rsp+0x31]
   1400075c5:	movzx  eax,dil
   1400075c9:	nop    DWORD PTR [rax+0x0]
   1400075d0:	cmp    al,dl
   1400075d2:	je     0x1400075e0
   1400075d4:	movzx  eax,BYTE PTR [rcx+0x10]
   1400075d8:	add    rcx,0x10
   1400075dc:	cmp    al,0xff
   1400075de:	jne    0x1400075d0
   1400075e0:	mov    rdx,QWORD PTR [rcx+0x8]
   1400075e4:	test   rdx,rdx
   1400075e7:	je     0x14000760d
   1400075e9:	movzx  ecx,BYTE PTR [rdx]
   1400075ec:	cmp    r9b,cl
   1400075ef:	jb     0x14000760d
   1400075f1:	movzx  eax,r9b
   1400075f5:	sub    al,cl
   1400075f7:	cmp    al,BYTE PTR [rdx+0x1]
   1400075fa:	ja     0x14000760d
   1400075fc:	movzx  eax,al
   1400075ff:	add    eax,0x2
   140007602:	cdqe   
   140007604:	add    rdx,rax
   140007607:	movzx  r8d,BYTE PTR [rdx]
   14000760b:	jmp    0x140007610
   14000760d:	mov    r8b,0xff
   140007610:	mov    rcx,r15
   140007613:	cmp    dil,0xff
   140007617:	je     0x140007632
   140007619:	movzx  edx,BYTE PTR [rsp+0x39]
   14000761e:	movzx  eax,dil
   140007622:	cmp    al,dl
   140007624:	je     0x140007632
   140007626:	movzx  eax,BYTE PTR [rcx+0x10]
   14000762a:	add    rcx,0x10
   14000762e:	cmp    al,0xff
   140007630:	jne    0x140007622
   140007632:	mov    rdx,QWORD PTR [rcx+0x8]
   140007636:	test   rdx,rdx
   140007639:	je     0x14000765e
   14000763b:	movzx  ecx,BYTE PTR [rdx]
   14000763e:	cmp    r10b,cl
   140007641:	jb     0x14000765e
   140007643:	movzx  eax,r10b
   140007647:	sub    al,cl
   140007649:	cmp    al,BYTE PTR [rdx+0x1]
   14000764c:	ja     0x14000765e
   14000764e:	movzx  eax,al
   140007651:	add    eax,0x2
   140007654:	cdqe   
   140007656:	add    rdx,rax
   140007659:	movzx  eax,BYTE PTR [rdx]
   14000765c:	jmp    0x140007660
   14000765e:	mov    al,0xff
   140007660:	cmp    r8b,0xff
   140007664:	je     0x1400076a5
   140007666:	cmp    al,0xff
   140007668:	je     0x1400076a5
   14000766a:	movzx  eax,al
   14000766d:	movzx  ecx,r8b
   140007671:	sub    cx,ax
   140007674:	jne    0x1400076a0
   140007676:	cmp    r9w,r10w
   14000767a:	je     0x140007686
   14000767c:	movzx  ecx,r9w
   140007680:	sub    cx,r10w
   140007684:	jne    0x1400076a0
   140007686:	test   sil,sil
   140007689:	jne    0x140007691
   14000768b:	cmp    BYTE PTR [r11+0x1],r12b
   14000768f:	je     0x14000769a
   140007691:	add    bx,0x2
   140007695:	jmp    0x140007580
   14000769a:	movzx  eax,r12w
   14000769e:	jmp    0x1400076c6
   1400076a0:	movzx  eax,cx
   1400076a3:	jmp    0x1400076c6
   1400076a5:	cmp    r8b,al
   1400076a8:	jne    0x1400076b0
   1400076aa:	sub    r9w,r10w
   1400076ae:	jmp    0x1400076c2
   1400076b0:	cmp    r8b,0xff
   1400076b4:	jne    0x1400076bc
   1400076b6:	or     r9d,0xffffffff
   1400076ba:	jmp    0x1400076c2
   1400076bc:	mov    r9d,0x1
   1400076c2:	movzx  eax,r9w
   1400076c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400076cb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400076d0:	pop    r15
   1400076d2:	pop    r14
   1400076d4:	pop    r12
   1400076d6:	pop    rdi
   1400076d7:	pop    rsi
   1400076d8:	ret    
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	mov    rax,rsp
   1400076e3:	push   rbp
   1400076e4:	push   r12
   1400076e6:	push   r13
   1400076e8:	push   r14
   1400076ea:	push   r15
   1400076ec:	lea    rbp,[rax-0x5f]
   1400076f0:	sub    rsp,0xa0
   1400076f7:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   1400076ff:	mov    QWORD PTR [rax+0x10],rbx
   140007703:	mov    QWORD PTR [rax+0x18],rsi
   140007707:	mov    QWORD PTR [rax+0x20],rdi
   14000770b:	mov    rax,QWORD PTR [rip+0x348ee]        # 0x14003c000
   140007712:	xor    rax,rsp
   140007715:	mov    QWORD PTR [rbp+0x27],rax
   140007719:	mov    rbx,rcx
   14000771c:	mov    ecx,0x110
   140007721:	call   QWORD PTR [rip+0x27cf1]        # 0x14002f418
   140007727:	mov    rdi,rax
   14000772a:	mov    QWORD PTR [rbp-0x11],rax
   14000772e:	test   rax,rax
   140007731:	jne    0x14000773b
   140007733:	lea    eax,[rdi+0x4]
   140007736:	jmp    0x14000ab57
   14000773b:	xor    r8d,r8d
   14000773e:	xor    edx,edx
   140007740:	mov    rcx,rbx
   140007743:	call   0x14002ad10
   140007748:	xor    r12d,r12d
   14000774b:	mov    ecx,r12d
   14000774e:	lea    r14,[rip+0xffffffffffff88ab]        # 0x140000000
   140007755:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007760:	movzx  eax,BYTE PTR [rcx+r14*1+0x31380]
   140007769:	mov    BYTE PTR [rbp+rcx*1+0x7],al
   14000776d:	lea    rcx,[rcx+0x1]
   140007771:	test   al,al
   140007773:	jne    0x140007760
   140007775:	mov    ecx,0x10
   14000777a:	call   QWORD PTR [rip+0x28218]        # 0x14002f998
   140007780:	mov    rsi,rax
   140007783:	mov    QWORD PTR [rbp-0x21],rax
   140007787:	test   rax,rax
   14000778a:	je     0x1400077c0
   14000778c:	mov    WORD PTR [rax],r12w
   140007790:	mov    QWORD PTR [rax+0x8],r12
   140007794:	lea    rcx,[rbp+0x7]
   140007798:	call   QWORD PTR [rip+0x27ae2]        # 0x14002f280
   14000779e:	test   eax,eax
   1400077a0:	jle    0x1400077c3
   1400077a2:	inc    eax
   1400077a4:	movsxd rcx,eax
   1400077a7:	call   QWORD PTR [rip+0x281eb]        # 0x14002f998
   1400077ad:	mov    QWORD PTR [rsi+0x8],rax
   1400077b1:	lea    rdx,[rbp+0x7]
   1400077b5:	mov    rcx,rax
   1400077b8:	call   QWORD PTR [rip+0x27a9a]        # 0x14002f258
   1400077be:	jmp    0x1400077c3
   1400077c0:	mov    rsi,r12
   1400077c3:	mov    edx,0x1
   1400077c8:	mov    rcx,rsi
   1400077cb:	call   0x14002ab70
   1400077d0:	mov    r13,rax
   1400077d3:	mov    QWORD PTR [rbp-0x21],rax
   1400077d7:	test   rax,rax
   1400077da:	je     0x14000ab54
   1400077e0:	test   rsi,rsi
   1400077e3:	je     0x1400077fd
   1400077e5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400077e9:	test   rcx,rcx
   1400077ec:	je     0x1400077f4
   1400077ee:	call   QWORD PTR [rip+0x28384]        # 0x14002fb78
   1400077f4:	mov    rcx,rsi
   1400077f7:	call   QWORD PTR [rip+0x2837b]        # 0x14002fb78
   1400077fd:	mov    rcx,r12
   140007800:	lea    r14,[rip+0x29b89]        # 0x140031390
   140007807:	nop    WORD PTR [rax+rax*1+0x0]
   140007810:	movzx  eax,BYTE PTR [rcx+r14*1]
   140007815:	mov    BYTE PTR [rbp+rcx*1+0x7],al
   140007819:	lea    rcx,[rcx+0x1]
   14000781d:	test   al,al
   14000781f:	jne    0x140007810
   140007821:	mov    ecx,0x10
   140007826:	call   QWORD PTR [rip+0x2816c]        # 0x14002f998
   14000782c:	mov    rsi,rax
   14000782f:	mov    QWORD PTR [rbp-0x19],rax
   140007833:	test   rax,rax
   140007836:	je     0x14000786c
   140007838:	mov    WORD PTR [rax],r12w
   14000783c:	mov    QWORD PTR [rax+0x8],r12
   140007840:	lea    rcx,[rbp+0x7]
   140007844:	call   QWORD PTR [rip+0x27a36]        # 0x14002f280
   14000784a:	test   eax,eax
   14000784c:	jle    0x14000786f
   14000784e:	inc    eax
   140007850:	movsxd rcx,eax
   140007853:	call   QWORD PTR [rip+0x2813f]        # 0x14002f998
   140007859:	mov    QWORD PTR [rsi+0x8],rax
   14000785d:	lea    rdx,[rbp+0x7]
   140007861:	mov    rcx,rax
   140007864:	call   QWORD PTR [rip+0x279ee]        # 0x14002f258
   14000786a:	jmp    0x14000786f
   14000786c:	mov    rsi,r12
   14000786f:	mov    edx,0x1
   140007874:	mov    rcx,rsi
   140007877:	call   0x14002ab70
   14000787c:	mov    QWORD PTR [rip+0x3a0d5],rax        # 0x140041958
   140007883:	test   rax,rax
   140007886:	je     0x14000ab54
   14000788c:	test   rsi,rsi
   14000788f:	je     0x1400078a9
   140007891:	mov    rcx,QWORD PTR [rsi+0x8]
   140007895:	test   rcx,rcx
   140007898:	je     0x1400078a0
   14000789a:	call   QWORD PTR [rip+0x282d8]        # 0x14002fb78
   1400078a0:	mov    rcx,rsi
   1400078a3:	call   QWORD PTR [rip+0x282cf]        # 0x14002fb78
   1400078a9:	mov    rcx,r12
   1400078ac:	lea    r14,[rip+0x29aed]        # 0x1400313a0
   1400078b3:	nop    DWORD PTR [rax+0x0]
   1400078b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400078c0:	movzx  eax,BYTE PTR [rcx+r14*1]
   1400078c5:	mov    BYTE PTR [rbp+rcx*1+0x7],al
   1400078c9:	lea    rcx,[rcx+0x1]
   1400078cd:	test   al,al
   1400078cf:	jne    0x1400078c0
   1400078d1:	mov    ecx,0x10
   1400078d6:	call   QWORD PTR [rip+0x280bc]        # 0x14002f998
   1400078dc:	mov    rsi,rax
   1400078df:	mov    QWORD PTR [rbp-0x19],rax
   1400078e3:	test   rax,rax
   1400078e6:	je     0x14000791c
   1400078e8:	mov    WORD PTR [rax],r12w
   1400078ec:	mov    QWORD PTR [rax+0x8],r12
   1400078f0:	lea    rcx,[rbp+0x7]
   1400078f4:	call   QWORD PTR [rip+0x27986]        # 0x14002f280
   1400078fa:	test   eax,eax
   1400078fc:	jle    0x14000791f
   1400078fe:	inc    eax
   140007900:	movsxd rcx,eax
   140007903:	call   QWORD PTR [rip+0x2808f]        # 0x14002f998
   140007909:	mov    QWORD PTR [rsi+0x8],rax
   14000790d:	lea    rdx,[rbp+0x7]
   140007911:	mov    rcx,rax
   140007914:	call   QWORD PTR [rip+0x2793e]        # 0x14002f258
   14000791a:	jmp    0x14000791f
   14000791c:	mov    rsi,r12
   14000791f:	mov    edx,0x1
   140007924:	mov    rcx,rsi
   140007927:	call   0x14002ab70
   14000792c:	mov    QWORD PTR [rip+0x38dc5],rax        # 0x1400406f8
   140007933:	test   rax,rax
   140007936:	lea    r14,[rip+0xffffffffffff86c3]        # 0x140000000
   14000793d:	je     0x14000ab54
   140007943:	mov    rcx,rsi
   140007946:	call   0x14002af10
   14000794b:	mov    rcx,rdi
   14000794e:	mov    r8,QWORD PTR [rip+0x38b8b]        # 0x1400404e0
   140007955:	sub    r8,rdi
   140007958:	mov    edx,0x10
   14000795d:	nop    DWORD PTR [rax]
   140007960:	movzx  eax,BYTE PTR [r8+rcx*1]
   140007965:	mov    BYTE PTR [rcx],al
   140007967:	lea    rcx,[rcx+0x1]
   14000796b:	dec    rdx
   14000796e:	jne    0x140007960
   140007970:	xor    ecx,ecx
   140007972:	call   QWORD PTR [rip+0x27ae0]        # 0x14002f458
   140007978:	mov    ecx,eax
   14000797a:	shr    ecx,0x8
   14000797d:	and    cl,0xf0
   140007980:	mov    BYTE PTR [rdi+0xc],cl
   140007983:	and    al,0xf
   140007985:	mov    BYTE PTR [rdi+0xd],al
   140007988:	mov    QWORD PTR [rsp+0x20],r12
   14000798d:	lea    r9,[rbp-0x35]
   140007991:	mov    r8d,0x10
   140007997:	mov    rdx,rdi
   14000799a:	mov    rcx,QWORD PTR [rbx]
   14000799d:	call   QWORD PTR [rip+0x2786d]        # 0x14002f210
   1400079a3:	test   eax,eax
   1400079a5:	jne    0x1400079da
   1400079a7:	call   QWORD PTR [rip+0x277b3]        # 0x14002f160
   1400079ad:	cmp    eax,0x58
   1400079b0:	jae    0x1400079be
   1400079b2:	mov    eax,eax
   1400079b4:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   1400079bc:	jmp    0x1400079c3
   1400079be:	mov    ecx,0x106
   1400079c3:	mov    DWORD PTR [rip+0x3b6ef],ecx        # 0x1400430b8
   1400079c9:	mov    DWORD PTR [rip+0x3baf5],0x2        # 0x1400434c8
   1400079d3:	mov    BYTE PTR [rip+0x3b9e6],0x0        # 0x1400433c0
   1400079da:	cmp    DWORD PTR [rbp-0x35],0x10
   1400079de:	jne    0x14000ab54
   1400079e4:	lea    rcx,[rdi+0x10]
   1400079e8:	mov    r8,QWORD PTR [rip+0x38af1]        # 0x1400404e0
   1400079ef:	sub    r8,rdi
   1400079f2:	mov    edx,0x2
   1400079f7:	nop    WORD PTR [rax+rax*1+0x0]
   140007a00:	movzx  eax,BYTE PTR [rcx+r8*1]
   140007a05:	mov    BYTE PTR [rcx],al
   140007a07:	lea    rcx,[rcx+0x1]
   140007a0b:	dec    rdx
   140007a0e:	jne    0x140007a00
   140007a10:	mov    QWORD PTR [rsp+0x20],r12
   140007a15:	lea    r9,[rbp-0x35]
   140007a19:	lea    r8d,[rdx+0x2]
   140007a1d:	lea    rdx,[rdi+0x10]
   140007a21:	mov    rcx,QWORD PTR [rbx]
   140007a24:	call   QWORD PTR [rip+0x277e6]        # 0x14002f210
   140007a2a:	test   eax,eax
   140007a2c:	jne    0x140007a61
   140007a2e:	call   QWORD PTR [rip+0x2772c]        # 0x14002f160
   140007a34:	cmp    eax,0x58
   140007a37:	jae    0x140007a45
   140007a39:	mov    eax,eax
   140007a3b:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007a43:	jmp    0x140007a4a
   140007a45:	mov    ecx,0x106
   140007a4a:	mov    DWORD PTR [rip+0x3b668],ecx        # 0x1400430b8
   140007a50:	mov    DWORD PTR [rip+0x3ba6e],0x2        # 0x1400434c8
   140007a5a:	mov    BYTE PTR [rip+0x3b95f],0x0        # 0x1400433c0
   140007a61:	cmp    DWORD PTR [rbp-0x35],0x2
   140007a65:	jne    0x14000ab54
   140007a6b:	lea    rcx,[rdi+0x12]
   140007a6f:	mov    r8,QWORD PTR [rip+0x38a6a]        # 0x1400404e0
   140007a76:	sub    r8,rdi
   140007a79:	mov    edx,0x2
   140007a7e:	xchg   ax,ax
   140007a80:	movzx  eax,BYTE PTR [rcx+r8*1]
   140007a85:	mov    BYTE PTR [rcx],al
   140007a87:	lea    rcx,[rcx+0x1]
   140007a8b:	dec    rdx
   140007a8e:	jne    0x140007a80
   140007a90:	mov    QWORD PTR [rsp+0x20],r12
   140007a95:	lea    r9,[rbp-0x35]
   140007a99:	lea    r8d,[rdx+0x2]
   140007a9d:	lea    rdx,[rdi+0x12]
   140007aa1:	mov    rcx,QWORD PTR [rbx]
   140007aa4:	call   QWORD PTR [rip+0x27766]        # 0x14002f210
   140007aaa:	test   eax,eax
   140007aac:	jne    0x140007ae1
   140007aae:	call   QWORD PTR [rip+0x276ac]        # 0x14002f160
   140007ab4:	cmp    eax,0x58
   140007ab7:	jae    0x140007ac5
   140007ab9:	mov    eax,eax
   140007abb:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007ac3:	jmp    0x140007aca
   140007ac5:	mov    ecx,0x106
   140007aca:	mov    DWORD PTR [rip+0x3b5e8],ecx        # 0x1400430b8
   140007ad0:	mov    DWORD PTR [rip+0x3b9ee],0x2        # 0x1400434c8
   140007ada:	mov    BYTE PTR [rip+0x3b8df],0x0        # 0x1400433c0
   140007ae1:	cmp    DWORD PTR [rbp-0x35],0x2
   140007ae5:	jne    0x14000ab54
   140007aeb:	lea    rcx,[rdi+0x14]
   140007aef:	mov    r8,QWORD PTR [rip+0x389ea]        # 0x1400404e0
   140007af6:	sub    r8,rdi
   140007af9:	mov    r15d,0x4
   140007aff:	mov    edx,r15d
   140007b02:	nop    DWORD PTR [rax+0x0]
   140007b06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007b10:	movzx  eax,BYTE PTR [rcx+r8*1]
   140007b15:	mov    BYTE PTR [rcx],al
   140007b17:	lea    rcx,[rcx+0x1]
   140007b1b:	dec    rdx
   140007b1e:	jne    0x140007b10
   140007b20:	mov    QWORD PTR [rsp+0x20],r12
   140007b25:	lea    r9,[rbp-0x35]
   140007b29:	mov    r8d,r15d
   140007b2c:	lea    rdx,[rdi+0x14]
   140007b30:	mov    rcx,QWORD PTR [rbx]
   140007b33:	call   QWORD PTR [rip+0x276d7]        # 0x14002f210
   140007b39:	test   eax,eax
   140007b3b:	jne    0x140007b70
   140007b3d:	call   QWORD PTR [rip+0x2761d]        # 0x14002f160
   140007b43:	cmp    eax,0x58
   140007b46:	jae    0x140007b54
   140007b48:	mov    eax,eax
   140007b4a:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007b52:	jmp    0x140007b59
   140007b54:	mov    ecx,0x106
   140007b59:	mov    DWORD PTR [rip+0x3b559],ecx        # 0x1400430b8
   140007b5f:	mov    DWORD PTR [rip+0x3b95f],0x2        # 0x1400434c8
   140007b69:	mov    BYTE PTR [rip+0x3b850],0x0        # 0x1400433c0
   140007b70:	cmp    DWORD PTR [rbp-0x35],r15d
   140007b74:	jne    0x14000ab54
   140007b7a:	mov    eax,0x100
   140007b7f:	movzx  edx,WORD PTR [rip+0x372de]        # 0x14003ee64
   140007b86:	cmp    ax,dx
   140007b89:	jge    0x140007b97
   140007b8b:	movzx  edx,ax
   140007b8e:	mov    WORD PTR [rip+0x372d3],ax        # 0x14003ee68
   140007b95:	jmp    0x140007b9e
   140007b97:	mov    WORD PTR [rip+0x372ca],dx        # 0x14003ee68
   140007b9e:	add    dx,dx
   140007ba1:	add    dx,WORD PTR [rip+0x39e00]        # 0x1400419a8
   140007ba8:	add    dx,dx
   140007bab:	add    dx,WORD PTR [rip+0x39dd8]        # 0x14004198a
   140007bb2:	add    dx,WORD PTR [rip+0x39e3f]        # 0x1400419f8
   140007bb9:	mov    eax,0x48b
   140007bbe:	add    dx,ax
   140007bc1:	add    dx,dx
   140007bc4:	movzx  ecx,WORD PTR [rip+0x39dc1]        # 0x14004198c
   140007bcb:	movzx  eax,cx
   140007bce:	add    ax,ax
   140007bd1:	add    cx,ax
   140007bd4:	add    dx,cx
   140007bd7:	movzx  ecx,WORD PTR [rip+0x3726e]        # 0x14003ee4c
   140007bde:	movzx  eax,cx
   140007be1:	shl    ax,0x2
   140007be5:	add    cx,ax
   140007be8:	add    dx,cx
   140007beb:	add    dx,WORD PTR [rip+0x39d96]        # 0x140041988
   140007bf2:	add    dx,WORD PTR [rip+0x39dc9]        # 0x1400419c2
   140007bf9:	add    dx,WORD PTR [rip+0x39dfa]        # 0x1400419fa
   140007c00:	mov    WORD PTR [rdi+0x18],dx
   140007c04:	mov    WORD PTR [rbp-0x39],dx
   140007c08:	mov    QWORD PTR [rsp+0x20],r12
   140007c0d:	lea    r9,[rbp-0x35]
   140007c11:	mov    r8d,0x2
   140007c17:	lea    rdx,[rbp-0x39]
   140007c1b:	mov    rcx,QWORD PTR [rbx]
   140007c1e:	call   QWORD PTR [rip+0x275ec]        # 0x14002f210
   140007c24:	test   eax,eax
   140007c26:	jne    0x140007c5b
   140007c28:	call   QWORD PTR [rip+0x27532]        # 0x14002f160
   140007c2e:	cmp    eax,0x58
   140007c31:	jae    0x140007c3f
   140007c33:	mov    eax,eax
   140007c35:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007c3d:	jmp    0x140007c44
   140007c3f:	mov    ecx,0x106
   140007c44:	mov    DWORD PTR [rip+0x3b46e],ecx        # 0x1400430b8
   140007c4a:	mov    DWORD PTR [rip+0x3b874],0x2        # 0x1400434c8
   140007c54:	mov    BYTE PTR [rip+0x3b765],0x0        # 0x1400433c0
   140007c5b:	cmp    DWORD PTR [rbp-0x35],0x2
   140007c5f:	jne    0x14000ab54
   140007c65:	mov    DWORD PTR [rdi+0x20],r12d
   140007c69:	mov    DWORD PTR [rbp-0x31],r12d
   140007c6d:	movzx  esi,r12w
   140007c71:	nop    DWORD PTR [rax+0x0]
   140007c75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007c80:	mov    QWORD PTR [rsp+0x20],r12
   140007c85:	lea    r9,[rbp-0x35]
   140007c89:	mov    r8d,r15d
   140007c8c:	lea    rdx,[rbp-0x31]
   140007c90:	mov    rcx,QWORD PTR [rbx]
   140007c93:	call   QWORD PTR [rip+0x27577]        # 0x14002f210
   140007c99:	test   eax,eax
   140007c9b:	jne    0x140007cd0
   140007c9d:	call   QWORD PTR [rip+0x274bd]        # 0x14002f160
   140007ca3:	cmp    eax,0x58
   140007ca6:	jae    0x140007cb4
   140007ca8:	mov    eax,eax
   140007caa:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007cb2:	jmp    0x140007cb9
   140007cb4:	mov    ecx,0x106
   140007cb9:	mov    DWORD PTR [rip+0x3b3f9],ecx        # 0x1400430b8
   140007cbf:	mov    DWORD PTR [rip+0x3b7ff],0x2        # 0x1400434c8
   140007cc9:	mov    BYTE PTR [rip+0x3b6f0],0x0        # 0x1400433c0
   140007cd0:	cmp    DWORD PTR [rbp-0x35],r15d
   140007cd4:	jne    0x14000ab54
   140007cda:	inc    si
   140007cdd:	cmp    si,0x8
   140007ce1:	jl     0x140007c80
   140007ce3:	mov    r9d,0x1
   140007ce9:	xor    r8d,r8d
   140007cec:	xor    edx,edx
   140007cee:	mov    rcx,QWORD PTR [rbx]
   140007cf1:	call   QWORD PTR [rip+0x27521]        # 0x14002f218
   140007cf7:	mov    esi,eax
   140007cf9:	lea    ecx,[rax+0x1]
   140007cfc:	test   ecx,0xfffffffe
   140007d02:	jne    0x140007d37
   140007d04:	call   QWORD PTR [rip+0x27456]        # 0x14002f160
   140007d0a:	cmp    eax,0x58
   140007d0d:	jae    0x140007d1b
   140007d0f:	mov    ecx,eax
   140007d11:	mov    edx,DWORD PTR [r14+rcx*4+0x310a0]
   140007d19:	jmp    0x140007d20
   140007d1b:	mov    edx,0x106
   140007d20:	mov    DWORD PTR [rip+0x3b392],edx        # 0x1400430b8
   140007d26:	mov    DWORD PTR [rip+0x3b798],0x2        # 0x1400434c8
   140007d30:	mov    BYTE PTR [rip+0x3b689],0x0        # 0x1400433c0
   140007d37:	mov    DWORD PTR [rdi+0x1c],esi
   140007d3a:	lea    rdx,[rdi+0x3c]
   140007d3e:	mov    rax,QWORD PTR [rip+0x3879b]        # 0x1400404e0
   140007d45:	movzx  ecx,BYTE PTR [rax+0x3c]
   140007d49:	mov    BYTE PTR [rdx],cl
   140007d4b:	mov    QWORD PTR [rsp+0x20],r12
   140007d50:	lea    r9,[rbp-0x35]
   140007d54:	mov    r8d,0x1
   140007d5a:	mov    rcx,QWORD PTR [rbx]
   140007d5d:	call   QWORD PTR [rip+0x274ad]        # 0x14002f210
   140007d63:	test   eax,eax
   140007d65:	jne    0x140007d9a
   140007d67:	call   QWORD PTR [rip+0x273f3]        # 0x14002f160
   140007d6d:	cmp    eax,0x58
   140007d70:	jae    0x140007d7e
   140007d72:	mov    eax,eax
   140007d74:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007d7c:	jmp    0x140007d83
   140007d7e:	mov    ecx,0x106
   140007d83:	mov    DWORD PTR [rip+0x3b32f],ecx        # 0x1400430b8
   140007d89:	mov    DWORD PTR [rip+0x3b735],0x2        # 0x1400434c8
   140007d93:	mov    BYTE PTR [rip+0x3b626],0x0        # 0x1400433c0
   140007d9a:	cmp    DWORD PTR [rbp-0x35],0x1
   140007d9e:	jne    0x14000ab54
   140007da4:	lea    rdx,[rdi+0x3d]
   140007da8:	mov    rax,QWORD PTR [rip+0x38731]        # 0x1400404e0
   140007daf:	movzx  ecx,BYTE PTR [rax+0x3d]
   140007db3:	mov    BYTE PTR [rdx],cl
   140007db5:	mov    QWORD PTR [rsp+0x20],r12
   140007dba:	lea    r9,[rbp-0x35]
   140007dbe:	mov    r8d,0x1
   140007dc4:	mov    rcx,QWORD PTR [rbx]
   140007dc7:	call   QWORD PTR [rip+0x27443]        # 0x14002f210
   140007dcd:	test   eax,eax
   140007dcf:	jne    0x140007e04
   140007dd1:	call   QWORD PTR [rip+0x27389]        # 0x14002f160
   140007dd7:	cmp    eax,0x58
   140007dda:	jae    0x140007de8
   140007ddc:	mov    eax,eax
   140007dde:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007de6:	jmp    0x140007ded
   140007de8:	mov    ecx,0x106
   140007ded:	mov    DWORD PTR [rip+0x3b2c5],ecx        # 0x1400430b8
   140007df3:	mov    DWORD PTR [rip+0x3b6cb],0x2        # 0x1400434c8
   140007dfd:	mov    BYTE PTR [rip+0x3b5bc],0x0        # 0x1400433c0
   140007e04:	cmp    DWORD PTR [rbp-0x35],0x1
   140007e08:	jne    0x14000ab54
   140007e0e:	mov    QWORD PTR [rsp+0x20],r12
   140007e13:	lea    r9,[rbp-0x35]
   140007e17:	mov    r8d,r15d
   140007e1a:	lea    rdx,[rbp-0x31]
   140007e1e:	mov    rcx,QWORD PTR [rbx]
   140007e21:	call   QWORD PTR [rip+0x273e9]        # 0x14002f210
   140007e27:	test   eax,eax
   140007e29:	jne    0x140007e5e
   140007e2b:	call   QWORD PTR [rip+0x2732f]        # 0x14002f160
   140007e31:	cmp    eax,0x58
   140007e34:	jae    0x140007e42
   140007e36:	mov    eax,eax
   140007e38:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007e40:	jmp    0x140007e47
   140007e42:	mov    ecx,0x106
   140007e47:	mov    DWORD PTR [rip+0x3b26b],ecx        # 0x1400430b8
   140007e4d:	mov    DWORD PTR [rip+0x3b671],0x2        # 0x1400434c8
   140007e57:	mov    BYTE PTR [rip+0x3b562],0x0        # 0x1400433c0
   140007e5e:	cmp    DWORD PTR [rbp-0x35],r15d
   140007e62:	jne    0x14000ab54
   140007e68:	movzx  eax,WORD PTR [rip+0x36fdd]        # 0x14003ee4c
   140007e6f:	shl    ax,0x2
   140007e73:	mov    WORD PTR [rbp-0x39],ax
   140007e77:	mov    QWORD PTR [rsp+0x20],r12
   140007e7c:	lea    r9,[rbp-0x35]
   140007e80:	mov    r8d,0x2
   140007e86:	lea    rdx,[rbp-0x39]
   140007e8a:	mov    rcx,QWORD PTR [rbx]
   140007e8d:	call   QWORD PTR [rip+0x2737d]        # 0x14002f210
   140007e93:	test   eax,eax
   140007e95:	jne    0x140007eca
   140007e97:	call   QWORD PTR [rip+0x272c3]        # 0x14002f160
   140007e9d:	cmp    eax,0x58
   140007ea0:	jae    0x140007eae
   140007ea2:	mov    eax,eax
   140007ea4:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007eac:	jmp    0x140007eb3
   140007eae:	mov    ecx,0x106
   140007eb3:	mov    DWORD PTR [rip+0x3b1ff],ecx        # 0x1400430b8
   140007eb9:	mov    DWORD PTR [rip+0x3b605],0x2        # 0x1400434c8
   140007ec3:	mov    BYTE PTR [rip+0x3b4f6],0x0        # 0x1400433c0
   140007eca:	cmp    DWORD PTR [rbp-0x35],0x2
   140007ece:	jne    0x14000ab54
   140007ed4:	mov    QWORD PTR [rsp+0x20],r12
   140007ed9:	lea    r9,[rbp-0x35]
   140007edd:	mov    r8d,r15d
   140007ee0:	lea    rdx,[rbp-0x31]
   140007ee4:	mov    rcx,QWORD PTR [rbx]
   140007ee7:	call   QWORD PTR [rip+0x27323]        # 0x14002f210
   140007eed:	test   eax,eax
   140007eef:	jne    0x140007f24
   140007ef1:	call   QWORD PTR [rip+0x27269]        # 0x14002f160
   140007ef7:	cmp    eax,0x58
   140007efa:	jae    0x140007f08
   140007efc:	mov    eax,eax
   140007efe:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007f06:	jmp    0x140007f0d
   140007f08:	mov    ecx,0x106
   140007f0d:	mov    DWORD PTR [rip+0x3b1a5],ecx        # 0x1400430b8
   140007f13:	mov    DWORD PTR [rip+0x3b5ab],0x2        # 0x1400434c8
   140007f1d:	mov    BYTE PTR [rip+0x3b49c],0x0        # 0x1400433c0
   140007f24:	cmp    DWORD PTR [rbp-0x35],r15d
   140007f28:	jne    0x14000ab54
   140007f2e:	movzx  eax,WORD PTR [rip+0x36f2f]        # 0x14003ee64
   140007f35:	mov    WORD PTR [rbp-0x39],ax
   140007f39:	mov    QWORD PTR [rsp+0x20],r12
   140007f3e:	lea    r9,[rbp-0x35]
   140007f42:	mov    r8d,0x2
   140007f48:	lea    rdx,[rbp-0x39]
   140007f4c:	mov    rcx,QWORD PTR [rbx]
   140007f4f:	call   QWORD PTR [rip+0x272bb]        # 0x14002f210
   140007f55:	test   eax,eax
   140007f57:	jne    0x140007f8c
   140007f59:	call   QWORD PTR [rip+0x27201]        # 0x14002f160
   140007f5f:	cmp    eax,0x58
   140007f62:	jae    0x140007f70
   140007f64:	mov    eax,eax
   140007f66:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007f6e:	jmp    0x140007f75
   140007f70:	mov    ecx,0x106
   140007f75:	mov    DWORD PTR [rip+0x3b13d],ecx        # 0x1400430b8
   140007f7b:	mov    DWORD PTR [rip+0x3b543],0x2        # 0x1400434c8
   140007f85:	mov    BYTE PTR [rip+0x3b434],0x0        # 0x1400433c0
   140007f8c:	cmp    DWORD PTR [rbp-0x35],0x2
   140007f90:	jne    0x14000ab54
   140007f96:	movzx  eax,WORD PTR [rip+0x36ecb]        # 0x14003ee68
   140007f9d:	mov    WORD PTR [rbp-0x39],ax
   140007fa1:	mov    QWORD PTR [rsp+0x20],r12
   140007fa6:	lea    r9,[rbp-0x35]
   140007faa:	mov    r8d,0x2
   140007fb0:	lea    rdx,[rbp-0x39]
   140007fb4:	mov    rcx,QWORD PTR [rbx]
   140007fb7:	call   QWORD PTR [rip+0x27253]        # 0x14002f210
   140007fbd:	test   eax,eax
   140007fbf:	jne    0x140007ff4
   140007fc1:	call   QWORD PTR [rip+0x27199]        # 0x14002f160
   140007fc7:	cmp    eax,0x58
   140007fca:	jae    0x140007fd8
   140007fcc:	mov    eax,eax
   140007fce:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140007fd6:	jmp    0x140007fdd
   140007fd8:	mov    ecx,0x106
   140007fdd:	mov    DWORD PTR [rip+0x3b0d5],ecx        # 0x1400430b8
   140007fe3:	mov    DWORD PTR [rip+0x3b4db],0x2        # 0x1400434c8
   140007fed:	mov    BYTE PTR [rip+0x3b3cc],0x0        # 0x1400433c0
   140007ff4:	cmp    DWORD PTR [rbp-0x35],0x2
   140007ff8:	jne    0x14000ab54
   140007ffe:	movzx  esi,r12w
   140008002:	nop    DWORD PTR [rax+0x0]
   140008006:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008010:	mov    QWORD PTR [rsp+0x20],r12
   140008015:	lea    r9,[rbp-0x35]
   140008019:	mov    r8d,r15d
   14000801c:	lea    rdx,[rbp-0x31]
   140008020:	mov    rcx,QWORD PTR [rbx]
   140008023:	call   QWORD PTR [rip+0x271e7]        # 0x14002f210
   140008029:	test   eax,eax
   14000802b:	jne    0x140008060
   14000802d:	call   QWORD PTR [rip+0x2712d]        # 0x14002f160
   140008033:	cmp    eax,0x58
   140008036:	jae    0x140008044
   140008038:	mov    eax,eax
   14000803a:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140008042:	jmp    0x140008049
   140008044:	mov    ecx,0x106
   140008049:	mov    DWORD PTR [rip+0x3b069],ecx        # 0x1400430b8
   14000804f:	mov    DWORD PTR [rip+0x3b46f],0x2        # 0x1400434c8
   140008059:	mov    BYTE PTR [rip+0x3b360],0x0        # 0x1400433c0
   140008060:	cmp    DWORD PTR [rbp-0x35],r15d
   140008064:	jne    0x14000ab54
   14000806a:	inc    si
   14000806d:	cmp    si,0x7
   140008071:	jl     0x140008010
   140008073:	movzx  eax,WORD PTR [rip+0x36dd2]        # 0x14003ee4c
   14000807a:	mov    WORD PTR [rbp-0x39],ax
   14000807e:	mov    QWORD PTR [rsp+0x20],r12
   140008083:	lea    r9,[rbp-0x35]
   140008087:	mov    r8d,0x2
   14000808d:	lea    rdx,[rbp-0x39]
   140008091:	mov    rcx,QWORD PTR [rbx]
   140008094:	call   QWORD PTR [rip+0x27176]        # 0x14002f210
   14000809a:	test   eax,eax
   14000809c:	jne    0x1400080d1
   14000809e:	call   QWORD PTR [rip+0x270bc]        # 0x14002f160
   1400080a4:	cmp    eax,0x58
   1400080a7:	jae    0x1400080b5
   1400080a9:	mov    eax,eax
   1400080ab:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   1400080b3:	jmp    0x1400080ba
   1400080b5:	mov    ecx,0x106
   1400080ba:	mov    DWORD PTR [rip+0x3aff8],ecx        # 0x1400430b8
   1400080c0:	mov    DWORD PTR [rip+0x3b3fe],0x2        # 0x1400434c8
   1400080ca:	mov    BYTE PTR [rip+0x3b2ef],0x0        # 0x1400433c0
   1400080d1:	cmp    DWORD PTR [rbp-0x35],0x2
   1400080d5:	jne    0x14000ab54
   1400080db:	mov    QWORD PTR [rsp+0x20],r12
   1400080e0:	lea    r9,[rbp-0x35]
   1400080e4:	mov    r8d,r15d
   1400080e7:	lea    rdx,[rbp-0x31]
   1400080eb:	mov    rcx,QWORD PTR [rbx]
   1400080ee:	call   QWORD PTR [rip+0x2711c]        # 0x14002f210
   1400080f4:	test   eax,eax
   1400080f6:	jne    0x14000812b
   1400080f8:	call   QWORD PTR [rip+0x27062]        # 0x14002f160
   1400080fe:	cmp    eax,0x58
   140008101:	jae    0x14000810f
   140008103:	mov    eax,eax
   140008105:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   14000810d:	jmp    0x140008114
   14000810f:	mov    ecx,0x106
   140008114:	mov    DWORD PTR [rip+0x3af9e],ecx        # 0x1400430b8
   14000811a:	mov    DWORD PTR [rip+0x3b3a4],0x2        # 0x1400434c8
   140008124:	mov    BYTE PTR [rip+0x3b295],0x0        # 0x1400433c0
   14000812b:	cmp    DWORD PTR [rbp-0x35],r15d
   14000812f:	jne    0x14000ab54
   140008135:	mov    rax,QWORD PTR [rip+0x383a4]        # 0x1400404e0
   14000813c:	movzx  ecx,WORD PTR [rax+0x74]
   140008140:	mov    WORD PTR [rdi+0x74],cx
   140008144:	mov    WORD PTR [rbp-0x39],cx
   140008148:	mov    QWORD PTR [rsp+0x20],r12
   14000814d:	lea    r9,[rbp-0x35]
   140008151:	mov    r8d,0x2
   140008157:	lea    rdx,[rbp-0x39]
   14000815b:	mov    rcx,QWORD PTR [rbx]
   14000815e:	call   QWORD PTR [rip+0x270ac]        # 0x14002f210
   140008164:	test   eax,eax
   140008166:	jne    0x14000819b
   140008168:	call   QWORD PTR [rip+0x26ff2]        # 0x14002f160
   14000816e:	cmp    eax,0x58
   140008171:	jae    0x14000817f
   140008173:	mov    eax,eax
   140008175:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   14000817d:	jmp    0x140008184
   14000817f:	mov    ecx,0x106
   140008184:	mov    DWORD PTR [rip+0x3af2e],ecx        # 0x1400430b8
   14000818a:	mov    DWORD PTR [rip+0x3b334],0x2        # 0x1400434c8
   140008194:	mov    BYTE PTR [rip+0x3b225],0x0        # 0x1400433c0
   14000819b:	cmp    DWORD PTR [rbp-0x35],0x2
   14000819f:	jne    0x14000ab54
   1400081a5:	mov    QWORD PTR [rsp+0x20],r12
   1400081aa:	lea    r9,[rbp-0x35]
   1400081ae:	mov    r8d,r15d
   1400081b1:	lea    rdx,[rbp-0x31]
   1400081b5:	mov    rcx,QWORD PTR [rbx]
   1400081b8:	call   QWORD PTR [rip+0x27052]        # 0x14002f210
   1400081be:	test   eax,eax
   1400081c0:	jne    0x1400081f5
   1400081c2:	call   QWORD PTR [rip+0x26f98]        # 0x14002f160
   1400081c8:	cmp    eax,0x58
   1400081cb:	jae    0x1400081d9
   1400081cd:	mov    eax,eax
   1400081cf:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   1400081d7:	jmp    0x1400081de
   1400081d9:	mov    ecx,0x106
   1400081de:	mov    DWORD PTR [rip+0x3aed4],ecx        # 0x1400430b8
   1400081e4:	mov    DWORD PTR [rip+0x3b2da],0x2        # 0x1400434c8
   1400081ee:	mov    BYTE PTR [rip+0x3b1cb],0x0        # 0x1400433c0
   1400081f5:	cmp    DWORD PTR [rbp-0x35],r15d
   1400081f9:	jne    0x14000ab54
   1400081ff:	mov    rax,QWORD PTR [rip+0x382da]        # 0x1400404e0
   140008206:	movzx  ecx,WORD PTR [rax+0x7c]
   14000820a:	mov    WORD PTR [rdi+0x7c],cx
   14000820e:	mov    WORD PTR [rbp-0x39],cx
   140008212:	mov    QWORD PTR [rsp+0x20],r12
   140008217:	lea    r9,[rbp-0x35]
   14000821b:	mov    r8d,0x2
   140008221:	lea    rdx,[rbp-0x39]
   140008225:	mov    rcx,QWORD PTR [rbx]
   140008228:	call   QWORD PTR [rip+0x26fe2]        # 0x14002f210
   14000822e:	test   eax,eax
   140008230:	jne    0x140008265
   140008232:	call   QWORD PTR [rip+0x26f28]        # 0x14002f160
   140008238:	cmp    eax,0x58
   14000823b:	jae    0x140008249
   14000823d:	mov    eax,eax
   14000823f:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   140008247:	jmp    0x14000824e
   140008249:	mov    ecx,0x106
   14000824e:	mov    DWORD PTR [rip+0x3ae64],ecx        # 0x1400430b8
   140008254:	mov    DWORD PTR [rip+0x3b26a],0x2        # 0x1400434c8
   14000825e:	mov    BYTE PTR [rip+0x3b15b],0x0        # 0x1400433c0
   140008265:	cmp    DWORD PTR [rbp-0x35],0x2
   140008269:	jne    0x14000ab54
   14000826f:	lea    rdx,[rdi+0x7e]
   140008273:	mov    rax,QWORD PTR [rip+0x38266]        # 0x1400404e0
   14000827a:	movzx  ecx,BYTE PTR [rax+0x7e]
   14000827e:	mov    BYTE PTR [rdx],cl
   140008280:	mov    r8d,0x1
   140008286:	mov    rcx,rbx
   140008289:	call   0x14002ada0
   14000828e:	cmp    eax,0x1
   140008291:	jne    0x14000ab54
   140008297:	mov    QWORD PTR [rsp+0x20],r12
   14000829c:	lea    r9,[rbp-0x35]
   1400082a0:	mov    r8d,0x8f
   1400082a6:	lea    rdx,[rip+0x35c83]        # 0x14003df30
   1400082ad:	mov    rcx,QWORD PTR [rbx]
   1400082b0:	call   QWORD PTR [rip+0x26f5a]        # 0x14002f210
   1400082b6:	test   eax,eax
   1400082b8:	jne    0x1400082ed
   1400082ba:	call   QWORD PTR [rip+0x26ea0]        # 0x14002f160
   1400082c0:	cmp    eax,0x58
   1400082c3:	jae    0x1400082d1
   1400082c5:	mov    eax,eax
   1400082c7:	mov    ecx,DWORD PTR [r14+rax*4+0x310a0]
   1400082cf:	jmp    0x1400082d6
   1400082d1:	mov    ecx,0x106
   1400082d6:	mov    DWORD PTR [rip+0x3addc],ecx        # 0x1400430b8
   1400082dc:	mov    DWORD PTR [rip+0x3b1e2],0x2        # 0x1400434c8
   1400082e6:	mov    BYTE PTR [rip+0x3b0d3],0x0        # 0x1400433c0
   1400082ed:	cmp    DWORD PTR [rbp-0x35],0x8f
   1400082f4:	jne    0x14000ab54
   1400082fa:	xor    edx,edx
   1400082fc:	lea    r8d,[rdx+0x1]
   140008300:	mov    rcx,rbx
   140008303:	call   0x14002ad10
   140008308:	mov    DWORD PTR [rdi+0x20],eax
   14000830b:	xor    edx,edx
   14000830d:	lea    r8d,[rdx+0x1]
   140008311:	mov    rcx,rbx
   140008314:	call   0x14002ad10
   140008319:	mov    DWORD PTR [rdi+0x40],eax
   14000831c:	movsx  r8,WORD PTR [rip+0x36b28]        # 0x14003ee4c
   140008324:	shl    r8d,0x2
   140008328:	mov    rdx,QWORD PTR [rip+0x35dd9]        # 0x14003e108
   14000832f:	mov    rcx,rbx
   140008332:	call   0x14002ada0
   140008337:	movsx  rcx,WORD PTR [rip+0x36b0d]        # 0x14003ee4c
   14000833f:	shl    ecx,0x2
   140008342:	cmp    eax,ecx
   140008344:	jne    0x14000ab54
   14000834a:	xor    edx,edx
   14000834c:	lea    r8d,[rdx+0x1]
   140008350:	mov    rcx,rbx
   140008353:	call   0x14002ad10
   140008358:	mov    DWORD PTR [rdi+0x48],eax
   14000835b:	movzx  r14d,r12w
   14000835f:	cmp    r12w,WORD PTR [rip+0x36afd]        # 0x14003ee64
   140008367:	jge    0x140008521
   14000836d:	lea    r13,[rip+0xffffffffffff7c8c]        # 0x140000000
   140008374:	movsx  rax,r14w
   140008378:	lea    rcx,[rax+rax*4]
   14000837c:	lea    rsi,[rcx+rcx*1]
   140008380:	mov    rax,QWORD PTR [rip+0x39719]        # 0x140041aa0
   140008387:	movzx  ecx,WORD PTR [rsi+rax*1+0x2]
   14000838c:	mov    WORD PTR [rbp-0x39],cx
   140008390:	mov    QWORD PTR [rsp+0x20],r12
   140008395:	lea    r9,[rbp-0x35]
   140008399:	mov    r8d,0x2
   14000839f:	lea    rdx,[rbp-0x39]
   1400083a3:	mov    rcx,QWORD PTR [rbx]
   1400083a6:	call   QWORD PTR [rip+0x26e64]        # 0x14002f210
   1400083ac:	test   eax,eax
   1400083ae:	jne    0x1400083e3
   1400083b0:	call   QWORD PTR [rip+0x26daa]        # 0x14002f160
   1400083b6:	cmp    eax,0x58
   1400083b9:	jae    0x1400083c7
   1400083bb:	mov    eax,eax
   1400083bd:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   1400083c5:	jmp    0x1400083cc
   1400083c7:	mov    ecx,0x106
   1400083cc:	mov    DWORD PTR [rip+0x3ace6],ecx        # 0x1400430b8
   1400083d2:	mov    DWORD PTR [rip+0x3b0ec],0x2        # 0x1400434c8
   1400083dc:	mov    BYTE PTR [rip+0x3afdd],0x0        # 0x1400433c0
   1400083e3:	mov    rax,QWORD PTR [rip+0x396b6]        # 0x140041aa0
   1400083ea:	movzx  ecx,WORD PTR [rsi+rax*1]
   1400083ee:	mov    WORD PTR [rbp-0x39],cx
   1400083f2:	mov    QWORD PTR [rsp+0x20],r12
   1400083f7:	lea    r9,[rbp-0x9]
   1400083fb:	mov    r8d,0x2
   140008401:	lea    rdx,[rbp-0x39]
   140008405:	mov    rcx,QWORD PTR [rbx]
   140008408:	call   QWORD PTR [rip+0x26e02]        # 0x14002f210
   14000840e:	test   eax,eax
   140008410:	jne    0x140008445
   140008412:	call   QWORD PTR [rip+0x26d48]        # 0x14002f160
   140008418:	cmp    eax,0x58
   14000841b:	jae    0x140008429
   14000841d:	mov    eax,eax
   14000841f:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   140008427:	jmp    0x14000842e
   140008429:	mov    ecx,0x106
   14000842e:	mov    DWORD PTR [rip+0x3ac84],ecx        # 0x1400430b8
   140008434:	mov    DWORD PTR [rip+0x3b08a],0x2        # 0x1400434c8
   14000843e:	mov    BYTE PTR [rip+0x3af7b],0x0        # 0x1400433c0
   140008445:	mov    rax,QWORD PTR [rip+0x39654]        # 0x140041aa0
   14000844c:	movzx  ecx,WORD PTR [rsi+rax*1+0x4]
   140008451:	mov    WORD PTR [rbp-0x39],cx
   140008455:	mov    QWORD PTR [rsp+0x20],r12
   14000845a:	lea    r9,[rbp-0x29]
   14000845e:	mov    r8d,0x2
   140008464:	lea    rdx,[rbp-0x39]
   140008468:	mov    rcx,QWORD PTR [rbx]
   14000846b:	call   QWORD PTR [rip+0x26d9f]        # 0x14002f210
   140008471:	test   eax,eax
   140008473:	jne    0x1400084a8
   140008475:	call   QWORD PTR [rip+0x26ce5]        # 0x14002f160
   14000847b:	cmp    eax,0x58
   14000847e:	jae    0x14000848c
   140008480:	mov    eax,eax
   140008482:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   14000848a:	jmp    0x140008491
   14000848c:	mov    ecx,0x106
   140008491:	mov    DWORD PTR [rip+0x3ac21],ecx        # 0x1400430b8
   140008497:	mov    DWORD PTR [rip+0x3b027],0x2        # 0x1400434c8
   1400084a1:	mov    BYTE PTR [rip+0x3af18],0x0        # 0x1400433c0
   1400084a8:	mov    rax,QWORD PTR [rip+0x395f1]        # 0x140041aa0
   1400084af:	movzx  ecx,WORD PTR [rsi+rax*1+0x6]
   1400084b4:	mov    WORD PTR [rbp-0x39],cx
   1400084b8:	mov    QWORD PTR [rsp+0x20],r12
   1400084bd:	lea    r9,[rbp-0x19]
   1400084c1:	mov    r8d,0x2
   1400084c7:	lea    rdx,[rbp-0x39]
   1400084cb:	mov    rcx,QWORD PTR [rbx]
   1400084ce:	call   QWORD PTR [rip+0x26d3c]        # 0x14002f210
   1400084d4:	test   eax,eax
   1400084d6:	jne    0x14000850b
   1400084d8:	call   QWORD PTR [rip+0x26c82]        # 0x14002f160
   1400084de:	cmp    eax,0x58
   1400084e1:	jae    0x1400084ef
   1400084e3:	mov    eax,eax
   1400084e5:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   1400084ed:	jmp    0x1400084f4
   1400084ef:	mov    ecx,0x106
   1400084f4:	mov    DWORD PTR [rip+0x3abbe],ecx        # 0x1400430b8
   1400084fa:	mov    DWORD PTR [rip+0x3afc4],0x2        # 0x1400434c8
   140008504:	mov    BYTE PTR [rip+0x3aeb5],0x0        # 0x1400433c0
   14000850b:	inc    r14w
   14000850f:	cmp    r14w,WORD PTR [rip+0x3694d]        # 0x14003ee64
   140008517:	jl     0x140008374
   14000851d:	mov    r13,QWORD PTR [rbp-0x21]
   140008521:	xor    edx,edx
   140008523:	lea    r8d,[rdx+0x1]
   140008527:	mov    rcx,rbx
   14000852a:	call   0x14002ad10
   14000852f:	mov    DWORD PTR [rdi+0x58],eax
   140008532:	movsx  r12d,WORD PTR [rip+0x39426]        # 0x140041960
   14000853a:	mov    eax,r12d
   14000853d:	shl    eax,0x3
   140008540:	mov    DWORD PTR [rdi+0x5c],eax
   140008543:	xor    eax,eax
   140008545:	cmp    ax,r12w
   140008549:	jge    0x14000862e
   14000854f:	xor    r13d,r13d
   140008552:	mov    esi,r13d
   140008555:	movzx  r14d,r12w
   140008559:	lea    rdi,[rip+0xffffffffffff7aa0]        # 0x140000000
   140008560:	mov    rax,QWORD PTR [rip+0x391b1]        # 0x140041718
   140008567:	mov    ecx,DWORD PTR [rsi+rax*1]
   14000856a:	mov    DWORD PTR [rbp-0x31],ecx
   14000856d:	mov    QWORD PTR [rsp+0x20],r13
   140008572:	lea    r9,[rbp-0x19]
   140008576:	mov    r8d,r15d
   140008579:	lea    rdx,[rbp-0x31]
   14000857d:	mov    rcx,QWORD PTR [rbx]
   140008580:	call   QWORD PTR [rip+0x26c8a]        # 0x14002f210
   140008586:	test   eax,eax
   140008588:	jne    0x1400085bc
   14000858a:	call   QWORD PTR [rip+0x26bd0]        # 0x14002f160
   140008590:	cmp    eax,0x58
   140008593:	jae    0x1400085a0
   140008595:	mov    eax,eax
   140008597:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000859e:	jmp    0x1400085a5
   1400085a0:	mov    ecx,0x106
   1400085a5:	mov    DWORD PTR [rip+0x3ab0d],ecx        # 0x1400430b8
   1400085ab:	mov    DWORD PTR [rip+0x3af13],0x2        # 0x1400434c8
   1400085b5:	mov    BYTE PTR [rip+0x3ae04],r13b        # 0x1400433c0
   1400085bc:	mov    rax,QWORD PTR [rip+0x39155]        # 0x140041718
   1400085c3:	mov    ecx,DWORD PTR [rsi+rax*1+0x4]
   1400085c7:	mov    DWORD PTR [rbp-0x31],ecx
   1400085ca:	mov    QWORD PTR [rsp+0x20],r13
   1400085cf:	lea    r9,[rbp-0x29]
   1400085d3:	mov    r8d,r15d
   1400085d6:	lea    rdx,[rbp-0x31]
   1400085da:	mov    rcx,QWORD PTR [rbx]
   1400085dd:	call   QWORD PTR [rip+0x26c2d]        # 0x14002f210
   1400085e3:	test   eax,eax
   1400085e5:	jne    0x140008619
   1400085e7:	call   QWORD PTR [rip+0x26b73]        # 0x14002f160
   1400085ed:	cmp    eax,0x58
   1400085f0:	jae    0x1400085fd
   1400085f2:	mov    eax,eax
   1400085f4:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   1400085fb:	jmp    0x140008602
   1400085fd:	mov    ecx,0x106
   140008602:	mov    DWORD PTR [rip+0x3aab0],ecx        # 0x1400430b8
   140008608:	mov    DWORD PTR [rip+0x3aeb6],0x2        # 0x1400434c8
   140008612:	mov    BYTE PTR [rip+0x3ada7],r13b        # 0x1400433c0
   140008619:	add    rsi,0x8
   14000861d:	dec    r14
   140008620:	jne    0x140008560
   140008626:	mov    rdi,QWORD PTR [rbp-0x11]
   14000862a:	mov    r13,QWORD PTR [rbp-0x21]
   14000862e:	xor    edx,edx
   140008630:	lea    r8d,[rdx+0x1]
   140008634:	mov    rcx,rbx
   140008637:	call   0x14002ad10
   14000863c:	mov    DWORD PTR [rdi+0x60],eax
   14000863f:	mov    WORD PTR [rbp-0x39],r12w
   140008644:	xor    r12d,r12d
   140008647:	mov    QWORD PTR [rsp+0x20],r12
   14000864c:	lea    r9,[rbp-0x35]
   140008650:	lea    r8d,[r12+0x2]
   140008655:	lea    rdx,[rbp-0x39]
   140008659:	mov    rcx,QWORD PTR [rbx]
   14000865c:	call   QWORD PTR [rip+0x26bae]        # 0x14002f210
   140008662:	test   eax,eax
   140008664:	jne    0x14000869f
   140008666:	call   QWORD PTR [rip+0x26af4]        # 0x14002f160
   14000866c:	cmp    eax,0x58
   14000866f:	jae    0x140008683
   140008671:	mov    eax,eax
   140008673:	lea    rcx,[rip+0xffffffffffff7986]        # 0x140000000
   14000867a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008681:	jmp    0x140008688
   140008683:	mov    ecx,0x106
   140008688:	mov    DWORD PTR [rip+0x3aa2a],ecx        # 0x1400430b8
   14000868e:	mov    DWORD PTR [rip+0x3ae30],0x2        # 0x1400434c8
   140008698:	mov    BYTE PTR [rip+0x3ad21],r12b        # 0x1400433c0
   14000869f:	cmp    DWORD PTR [rbp-0x35],0x2
   1400086a3:	jne    0x14000ab54
   1400086a9:	xor    edx,edx
   1400086ab:	lea    r8d,[rdx+0x1]
   1400086af:	mov    rcx,rbx
   1400086b2:	call   0x14002ad10
   1400086b7:	mov    DWORD PTR [rdi+0x50],eax
   1400086ba:	mov    rax,QWORD PTR [rip+0x37e1f]        # 0x1400404e0
   1400086c1:	mov    ecx,DWORD PTR [rax+0x54]
   1400086c4:	mov    DWORD PTR [rdi+0x54],ecx
   1400086c7:	movzx  eax,WORD PTR [rip+0x3930a]        # 0x1400419d8
   1400086ce:	mov    WORD PTR [rbp-0x39],ax
   1400086d2:	mov    QWORD PTR [rsp+0x20],r12
   1400086d7:	lea    r9,[rbp-0x35]
   1400086db:	mov    r8d,0x2
   1400086e1:	lea    rdx,[rbp-0x39]
   1400086e5:	mov    rcx,QWORD PTR [rbx]
   1400086e8:	call   QWORD PTR [rip+0x26b22]        # 0x14002f210
   1400086ee:	test   eax,eax
   1400086f0:	jne    0x14000872b
   1400086f2:	call   QWORD PTR [rip+0x26a68]        # 0x14002f160
   1400086f8:	cmp    eax,0x58
   1400086fb:	jae    0x14000870f
   1400086fd:	mov    eax,eax
   1400086ff:	lea    rcx,[rip+0xffffffffffff78fa]        # 0x140000000
   140008706:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000870d:	jmp    0x140008714
   14000870f:	mov    ecx,0x106
   140008714:	mov    DWORD PTR [rip+0x3a99e],ecx        # 0x1400430b8
   14000871a:	mov    DWORD PTR [rip+0x3ada4],0x2        # 0x1400434c8
   140008724:	mov    BYTE PTR [rip+0x3ac95],r12b        # 0x1400433c0
   14000872b:	cmp    DWORD PTR [rbp-0x35],0x2
   14000872f:	jne    0x14000ab54
   140008735:	movzx  r8d,WORD PTR [rip+0x3929b]        # 0x1400419d8
   14000873d:	mov    rdx,QWORD PTR [rip+0x37a7c]        # 0x1400401c0
   140008744:	mov    rcx,rbx
   140008747:	call   0x14002ada0
   14000874c:	movsx  ecx,WORD PTR [rip+0x39285]        # 0x1400419d8
   140008753:	cmp    eax,ecx
   140008755:	jne    0x14000ab54
   14000875b:	movzx  eax,WORD PTR [rip+0x39202]        # 0x140041964
   140008762:	mov    WORD PTR [rbp-0x39],ax
   140008766:	mov    QWORD PTR [rsp+0x20],r12
   14000876b:	lea    r9,[rbp-0x35]
   14000876f:	mov    r8d,0x2
   140008775:	lea    rdx,[rbp-0x39]
   140008779:	mov    rcx,QWORD PTR [rbx]
   14000877c:	call   QWORD PTR [rip+0x26a8e]        # 0x14002f210
   140008782:	test   eax,eax
   140008784:	jne    0x1400087bf
   140008786:	call   QWORD PTR [rip+0x269d4]        # 0x14002f160
   14000878c:	cmp    eax,0x58
   14000878f:	jae    0x1400087a3
   140008791:	mov    eax,eax
   140008793:	lea    rcx,[rip+0xffffffffffff7866]        # 0x140000000
   14000879a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400087a1:	jmp    0x1400087a8
   1400087a3:	mov    ecx,0x106
   1400087a8:	mov    DWORD PTR [rip+0x3a90a],ecx        # 0x1400430b8
   1400087ae:	mov    DWORD PTR [rip+0x3ad10],0x2        # 0x1400434c8
   1400087b8:	mov    BYTE PTR [rip+0x3ac01],r12b        # 0x1400433c0
   1400087bf:	cmp    DWORD PTR [rbp-0x35],0x2
   1400087c3:	jne    0x14000ab54
   1400087c9:	movzx  r8d,WORD PTR [rip+0x39193]        # 0x140041964
   1400087d1:	mov    rdx,QWORD PTR [rip+0x379f8]        # 0x1400401d0
   1400087d8:	mov    rcx,rbx
   1400087db:	call   0x14002ada0
   1400087e0:	movsx  ecx,WORD PTR [rip+0x3917d]        # 0x140041964
   1400087e7:	cmp    eax,ecx
   1400087e9:	jne    0x14000ab54
   1400087ef:	movzx  eax,WORD PTR [rip+0x3912a]        # 0x140041920
   1400087f6:	mov    WORD PTR [rbp-0x39],ax
   1400087fa:	mov    QWORD PTR [rsp+0x20],r12
   1400087ff:	lea    r9,[rbp-0x35]
   140008803:	mov    r8d,0x2
   140008809:	lea    rdx,[rbp-0x39]
   14000880d:	mov    rcx,QWORD PTR [rbx]
   140008810:	call   QWORD PTR [rip+0x269fa]        # 0x14002f210
   140008816:	test   eax,eax
   140008818:	jne    0x140008853
   14000881a:	call   QWORD PTR [rip+0x26940]        # 0x14002f160
   140008820:	cmp    eax,0x58
   140008823:	jae    0x140008837
   140008825:	mov    eax,eax
   140008827:	lea    rcx,[rip+0xffffffffffff77d2]        # 0x140000000
   14000882e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008835:	jmp    0x14000883c
   140008837:	mov    ecx,0x106
   14000883c:	mov    DWORD PTR [rip+0x3a876],ecx        # 0x1400430b8
   140008842:	mov    DWORD PTR [rip+0x3ac7c],0x2        # 0x1400434c8
   14000884c:	mov    BYTE PTR [rip+0x3ab6d],r12b        # 0x1400433c0
   140008853:	cmp    DWORD PTR [rbp-0x35],0x2
   140008857:	jne    0x14000ab54
   14000885d:	movzx  r8d,WORD PTR [rip+0x390bb]        # 0x140041920
   140008865:	mov    rdx,QWORD PTR [rip+0x37e84]        # 0x1400406f0
   14000886c:	mov    rcx,rbx
   14000886f:	call   0x14002ada0
   140008874:	movsx  ecx,WORD PTR [rip+0x390a5]        # 0x140041920
   14000887b:	cmp    eax,ecx
   14000887d:	jne    0x14000ab54
   140008883:	movzx  esi,r12w
   140008887:	cmp    r12w,WORD PTR [rip+0x39145]        # 0x1400419d4
   14000888f:	jge    0x140008958
   140008895:	movsx  r14,si
   140008899:	lea    rax,[rip+0xffffffffffff7760]        # 0x140000000
   1400088a0:	movzx  eax,WORD PTR [rax+r14*2+0x404f0]
   1400088a9:	mov    WORD PTR [rbp-0x39],ax
   1400088ad:	mov    QWORD PTR [rsp+0x20],r12
   1400088b2:	lea    r9,[rbp-0x35]
   1400088b6:	mov    r8d,0x2
   1400088bc:	lea    rdx,[rbp-0x39]
   1400088c0:	mov    rcx,QWORD PTR [rbx]
   1400088c3:	call   QWORD PTR [rip+0x26947]        # 0x14002f210
   1400088c9:	test   eax,eax
   1400088cb:	jne    0x140008906
   1400088cd:	call   QWORD PTR [rip+0x2688d]        # 0x14002f160
   1400088d3:	cmp    eax,0x58
   1400088d6:	jae    0x1400088ea
   1400088d8:	mov    eax,eax
   1400088da:	lea    rcx,[rip+0xffffffffffff771f]        # 0x140000000
   1400088e1:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400088e8:	jmp    0x1400088ef
   1400088ea:	mov    ecx,0x106
   1400088ef:	mov    DWORD PTR [rip+0x3a7c3],ecx        # 0x1400430b8
   1400088f5:	mov    DWORD PTR [rip+0x3abc9],0x2        # 0x1400434c8
   1400088ff:	mov    BYTE PTR [rip+0x3aaba],r12b        # 0x1400433c0
   140008906:	cmp    DWORD PTR [rbp-0x35],0x2
   14000890a:	jne    0x14000ab54
   140008910:	lea    rax,[rip+0xffffffffffff76e9]        # 0x140000000
   140008917:	movzx  r8d,WORD PTR [rax+r14*2+0x404f0]
   140008920:	mov    rdx,QWORD PTR [rax+r14*8+0x40700]
   140008928:	mov    rcx,rbx
   14000892b:	call   0x14002ada0
   140008930:	lea    rcx,[rip+0xffffffffffff76c9]        # 0x140000000
   140008937:	movsx  ecx,WORD PTR [rcx+r14*2+0x404f0]
   140008940:	cmp    eax,ecx
   140008942:	jne    0x14000ab54
   140008948:	inc    si
   14000894b:	cmp    si,WORD PTR [rip+0x39082]        # 0x1400419d4
   140008952:	jl     0x140008895
   140008958:	mov    eax,0xffff
   14000895d:	mov    WORD PTR [rbp-0x39],ax
   140008961:	mov    QWORD PTR [rsp+0x20],r12
   140008966:	lea    r9,[rbp-0x35]
   14000896a:	mov    r8d,0x2
   140008970:	lea    rdx,[rbp-0x39]
   140008974:	mov    rcx,QWORD PTR [rbx]
   140008977:	call   QWORD PTR [rip+0x26893]        # 0x14002f210
   14000897d:	test   eax,eax
   14000897f:	jne    0x1400089ba
   140008981:	call   QWORD PTR [rip+0x267d9]        # 0x14002f160
   140008987:	cmp    eax,0x58
   14000898a:	jae    0x14000899e
   14000898c:	mov    eax,eax
   14000898e:	lea    rcx,[rip+0xffffffffffff766b]        # 0x140000000
   140008995:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000899c:	jmp    0x1400089a3
   14000899e:	mov    ecx,0x106
   1400089a3:	mov    DWORD PTR [rip+0x3a70f],ecx        # 0x1400430b8
   1400089a9:	mov    DWORD PTR [rip+0x3ab15],0x2        # 0x1400434c8
   1400089b3:	mov    BYTE PTR [rip+0x3aa06],r12b        # 0x1400433c0
   1400089ba:	cmp    DWORD PTR [rbp-0x35],0x2
   1400089be:	jne    0x14000ab54
   1400089c4:	movzx  esi,r12w
   1400089c8:	cmp    r12w,WORD PTR [rip+0x39000]        # 0x1400419d0
   1400089d0:	jge    0x140008aa3
   1400089d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400089e0:	movsx  r14,si
   1400089e4:	lea    rax,[rip+0xffffffffffff7615]        # 0x140000000
   1400089eb:	movzx  eax,WORD PTR [rax+r14*2+0x41720]
   1400089f4:	mov    WORD PTR [rbp-0x39],ax
   1400089f8:	mov    QWORD PTR [rsp+0x20],r12
   1400089fd:	lea    r9,[rbp-0x35]
   140008a01:	mov    r8d,0x2
   140008a07:	lea    rdx,[rbp-0x39]
   140008a0b:	mov    rcx,QWORD PTR [rbx]
   140008a0e:	call   QWORD PTR [rip+0x267fc]        # 0x14002f210
   140008a14:	test   eax,eax
   140008a16:	jne    0x140008a51
   140008a18:	call   QWORD PTR [rip+0x26742]        # 0x14002f160
   140008a1e:	cmp    eax,0x58
   140008a21:	jae    0x140008a35
   140008a23:	mov    eax,eax
   140008a25:	lea    rcx,[rip+0xffffffffffff75d4]        # 0x140000000
   140008a2c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008a33:	jmp    0x140008a3a
   140008a35:	mov    ecx,0x106
   140008a3a:	mov    DWORD PTR [rip+0x3a678],ecx        # 0x1400430b8
   140008a40:	mov    DWORD PTR [rip+0x3aa7e],0x2        # 0x1400434c8
   140008a4a:	mov    BYTE PTR [rip+0x3a96f],r12b        # 0x1400433c0
   140008a51:	cmp    DWORD PTR [rbp-0x35],0x2
   140008a55:	jne    0x14000ab54
   140008a5b:	lea    rax,[rip+0xffffffffffff759e]        # 0x140000000
   140008a62:	movzx  r8d,WORD PTR [rax+r14*2+0x41720]
   140008a6b:	mov    rdx,QWORD PTR [rax+r14*8+0x40f10]
   140008a73:	mov    rcx,rbx
   140008a76:	call   0x14002ada0
   140008a7b:	lea    rcx,[rip+0xffffffffffff757e]        # 0x140000000
   140008a82:	movsx  ecx,WORD PTR [rcx+r14*2+0x41720]
   140008a8b:	cmp    eax,ecx
   140008a8d:	jne    0x14000ab54
   140008a93:	inc    si
   140008a96:	cmp    si,WORD PTR [rip+0x38f33]        # 0x1400419d0
   140008a9d:	jl     0x1400089e0
   140008aa3:	mov    eax,0xffff
   140008aa8:	mov    WORD PTR [rbp-0x39],ax
   140008aac:	mov    QWORD PTR [rsp+0x20],r12
   140008ab1:	lea    r9,[rbp-0x35]
   140008ab5:	mov    r8d,0x2
   140008abb:	lea    rdx,[rbp-0x39]
   140008abf:	mov    rcx,QWORD PTR [rbx]
   140008ac2:	call   QWORD PTR [rip+0x26748]        # 0x14002f210
   140008ac8:	test   eax,eax
   140008aca:	jne    0x140008b05
   140008acc:	call   QWORD PTR [rip+0x2668e]        # 0x14002f160
   140008ad2:	cmp    eax,0x58
   140008ad5:	jae    0x140008ae9
   140008ad7:	mov    eax,eax
   140008ad9:	lea    rcx,[rip+0xffffffffffff7520]        # 0x140000000
   140008ae0:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008ae7:	jmp    0x140008aee
   140008ae9:	mov    ecx,0x106
   140008aee:	mov    DWORD PTR [rip+0x3a5c4],ecx        # 0x1400430b8
   140008af4:	mov    DWORD PTR [rip+0x3a9ca],0x2        # 0x1400434c8
   140008afe:	mov    BYTE PTR [rip+0x3a8bb],r12b        # 0x1400433c0
   140008b05:	cmp    DWORD PTR [rbp-0x35],0x2
   140008b09:	jne    0x14000ab54
   140008b0f:	xor    edx,edx
   140008b11:	lea    r8d,[rdx+0x1]
   140008b15:	mov    rcx,rbx
   140008b18:	call   0x14002ad10
   140008b1d:	mov    DWORD PTR [rdi+0x68],eax
   140008b20:	movsx  r8d,WORD PTR [rip+0x36324]        # 0x14003ee4c
   140008b28:	mov    rdx,QWORD PTR [rip+0x355e1]        # 0x14003e110
   140008b2f:	mov    rcx,rbx
   140008b32:	call   0x14002ada0
   140008b37:	movsx  ecx,WORD PTR [rip+0x3630e]        # 0x14003ee4c
   140008b3e:	cmp    eax,ecx
   140008b40:	jne    0x14000ab54
   140008b46:	mov    rax,QWORD PTR [rip+0x37993]        # 0x1400404e0
   140008b4d:	movzx  ecx,WORD PTR [rax+0x74]
   140008b51:	mov    WORD PTR [rdi+0x74],cx
   140008b55:	xor    edx,edx
   140008b57:	lea    r8d,[rdx+0x1]
   140008b5b:	mov    rcx,rbx
   140008b5e:	call   0x14002ad10
   140008b63:	mov    DWORD PTR [rdi+0x70],eax
   140008b66:	movzx  r8d,WORD PTR [rdi+0x74]
   140008b6b:	mov    rdx,QWORD PTR [rip+0x38dbe]        # 0x140041930
   140008b72:	mov    rcx,rbx
   140008b75:	call   0x14002ada0
   140008b7a:	movzx  ecx,WORD PTR [rdi+0x74]
   140008b7e:	cmp    eax,ecx
   140008b80:	jne    0x14000ab54
   140008b86:	mov    rax,QWORD PTR [rip+0x37953]        # 0x1400404e0
   140008b8d:	movzx  ecx,WORD PTR [rax+0x7c]
   140008b91:	mov    WORD PTR [rdi+0x7c],cx
   140008b95:	xor    edx,edx
   140008b97:	lea    r8d,[rdx+0x1]
   140008b9b:	mov    rcx,rbx
   140008b9e:	call   0x14002ad10
   140008ba3:	mov    DWORD PTR [rdi+0x78],eax
   140008ba6:	movzx  r8d,WORD PTR [rdi+0x7c]
   140008bab:	mov    rdx,QWORD PTR [rip+0x38d76]        # 0x140041928
   140008bb2:	mov    rcx,rbx
   140008bb5:	call   0x14002ada0
   140008bba:	movzx  ecx,WORD PTR [rdi+0x7c]
   140008bbe:	cmp    eax,ecx
   140008bc0:	jne    0x14000ab54
   140008bc6:	xor    edx,edx
   140008bc8:	lea    r8d,[rdx+0x1]
   140008bcc:	mov    rcx,rbx
   140008bcf:	call   0x14002ad10
   140008bd4:	mov    DWORD PTR [rdi+0x24],eax
   140008bd7:	movzx  eax,WORD PTR [rip+0x38e1a]        # 0x1400419f8
   140008bde:	mov    WORD PTR [rbp-0x39],ax
   140008be2:	mov    QWORD PTR [rsp+0x20],r12
   140008be7:	lea    r9,[rbp-0x35]
   140008beb:	mov    r8d,0x2
   140008bf1:	lea    rdx,[rbp-0x39]
   140008bf5:	mov    rcx,QWORD PTR [rbx]
   140008bf8:	call   QWORD PTR [rip+0x26612]        # 0x14002f210
   140008bfe:	test   eax,eax
   140008c00:	jne    0x140008c3b
   140008c02:	call   QWORD PTR [rip+0x26558]        # 0x14002f160
   140008c08:	cmp    eax,0x58
   140008c0b:	jae    0x140008c1f
   140008c0d:	mov    eax,eax
   140008c0f:	lea    rcx,[rip+0xffffffffffff73ea]        # 0x140000000
   140008c16:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008c1d:	jmp    0x140008c24
   140008c1f:	mov    ecx,0x106
   140008c24:	mov    DWORD PTR [rip+0x3a48e],ecx        # 0x1400430b8
   140008c2a:	mov    DWORD PTR [rip+0x3a894],0x2        # 0x1400434c8
   140008c34:	mov    BYTE PTR [rip+0x3a785],r12b        # 0x1400433c0
   140008c3b:	cmp    DWORD PTR [rbp-0x35],0x2
   140008c3f:	jne    0x14000ab54
   140008c45:	mov    r14d,0x200
   140008c4b:	mov    WORD PTR [rbp-0x39],r14w
   140008c50:	mov    QWORD PTR [rsp+0x20],r12
   140008c55:	lea    r9,[rbp-0x35]
   140008c59:	mov    r8d,0x2
   140008c5f:	lea    rdx,[rbp-0x39]
   140008c63:	mov    rcx,QWORD PTR [rbx]
   140008c66:	call   QWORD PTR [rip+0x265a4]        # 0x14002f210
   140008c6c:	test   eax,eax
   140008c6e:	jne    0x140008ca9
   140008c70:	call   QWORD PTR [rip+0x264ea]        # 0x14002f160
   140008c76:	cmp    eax,0x58
   140008c79:	jae    0x140008c8d
   140008c7b:	mov    eax,eax
   140008c7d:	lea    rcx,[rip+0xffffffffffff737c]        # 0x140000000
   140008c84:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008c8b:	jmp    0x140008c92
   140008c8d:	mov    ecx,0x106
   140008c92:	mov    DWORD PTR [rip+0x3a420],ecx        # 0x1400430b8
   140008c98:	mov    DWORD PTR [rip+0x3a826],0x2        # 0x1400434c8
   140008ca2:	mov    BYTE PTR [rip+0x3a717],r12b        # 0x1400433c0
   140008ca9:	cmp    DWORD PTR [rbp-0x35],0x2
   140008cad:	jne    0x14000ab54
   140008cb3:	mov    QWORD PTR [rsp+0x20],r12
   140008cb8:	lea    r9,[rbp-0x35]
   140008cbc:	mov    r8d,r15d
   140008cbf:	lea    rdx,[rbp-0x31]
   140008cc3:	mov    rcx,QWORD PTR [rbx]
   140008cc6:	call   QWORD PTR [rip+0x26544]        # 0x14002f210
   140008ccc:	test   eax,eax
   140008cce:	jne    0x140008d09
   140008cd0:	call   QWORD PTR [rip+0x2648a]        # 0x14002f160
   140008cd6:	cmp    eax,0x58
   140008cd9:	jae    0x140008ced
   140008cdb:	mov    eax,eax
   140008cdd:	lea    rcx,[rip+0xffffffffffff731c]        # 0x140000000
   140008ce4:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008ceb:	jmp    0x140008cf2
   140008ced:	mov    ecx,0x106
   140008cf2:	mov    DWORD PTR [rip+0x3a3c0],ecx        # 0x1400430b8
   140008cf8:	mov    DWORD PTR [rip+0x3a7c6],0x2        # 0x1400434c8
   140008d02:	mov    BYTE PTR [rip+0x3a6b7],r12b        # 0x1400433c0
   140008d09:	cmp    DWORD PTR [rbp-0x35],r15d
   140008d0d:	jne    0x14000ab54
   140008d13:	mov    QWORD PTR [rsp+0x20],r12
   140008d18:	lea    r9,[rbp-0x35]
   140008d1c:	mov    r8d,r15d
   140008d1f:	lea    rdx,[rbp-0x31]
   140008d23:	mov    rcx,QWORD PTR [rbx]
   140008d26:	call   QWORD PTR [rip+0x264e4]        # 0x14002f210
   140008d2c:	test   eax,eax
   140008d2e:	jne    0x140008d69
   140008d30:	call   QWORD PTR [rip+0x2642a]        # 0x14002f160
   140008d36:	cmp    eax,0x58
   140008d39:	jae    0x140008d4d
   140008d3b:	mov    eax,eax
   140008d3d:	lea    rcx,[rip+0xffffffffffff72bc]        # 0x140000000
   140008d44:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008d4b:	jmp    0x140008d52
   140008d4d:	mov    ecx,0x106
   140008d52:	mov    DWORD PTR [rip+0x3a360],ecx        # 0x1400430b8
   140008d58:	mov    DWORD PTR [rip+0x3a766],0x2        # 0x1400434c8
   140008d62:	mov    BYTE PTR [rip+0x3a657],r12b        # 0x1400433c0
   140008d69:	cmp    DWORD PTR [rbp-0x35],r15d
   140008d6d:	jne    0x14000ab54
   140008d73:	movzx  eax,WORD PTR [rip+0x38c80]        # 0x1400419fa
   140008d7a:	mov    WORD PTR [rbp-0x39],ax
   140008d7e:	mov    QWORD PTR [rsp+0x20],r12
   140008d83:	lea    r9,[rbp-0x35]
   140008d87:	mov    r8d,0x2
   140008d8d:	lea    rdx,[rbp-0x39]
   140008d91:	mov    rcx,QWORD PTR [rbx]
   140008d94:	call   QWORD PTR [rip+0x26476]        # 0x14002f210
   140008d9a:	test   eax,eax
   140008d9c:	jne    0x140008dd7
   140008d9e:	call   QWORD PTR [rip+0x263bc]        # 0x14002f160
   140008da4:	cmp    eax,0x58
   140008da7:	jae    0x140008dbb
   140008da9:	mov    eax,eax
   140008dab:	lea    rcx,[rip+0xffffffffffff724e]        # 0x140000000
   140008db2:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008db9:	jmp    0x140008dc0
   140008dbb:	mov    ecx,0x106
   140008dc0:	mov    DWORD PTR [rip+0x3a2f2],ecx        # 0x1400430b8
   140008dc6:	mov    DWORD PTR [rip+0x3a6f8],0x2        # 0x1400434c8
   140008dd0:	mov    BYTE PTR [rip+0x3a5e9],r12b        # 0x1400433c0
   140008dd7:	cmp    DWORD PTR [rbp-0x35],0x2
   140008ddb:	jne    0x14000ab54
   140008de1:	mov    QWORD PTR [rsp+0x20],r12
   140008de6:	lea    r9,[rbp-0x35]
   140008dea:	mov    r8d,r15d
   140008ded:	lea    rdx,[rbp-0x31]
   140008df1:	mov    rcx,QWORD PTR [rbx]
   140008df4:	call   QWORD PTR [rip+0x26416]        # 0x14002f210
   140008dfa:	test   eax,eax
   140008dfc:	jne    0x140008e37
   140008dfe:	call   QWORD PTR [rip+0x2635c]        # 0x14002f160
   140008e04:	cmp    eax,0x58
   140008e07:	jae    0x140008e1b
   140008e09:	mov    eax,eax
   140008e0b:	lea    rcx,[rip+0xffffffffffff71ee]        # 0x140000000
   140008e12:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008e19:	jmp    0x140008e20
   140008e1b:	mov    ecx,0x106
   140008e20:	mov    DWORD PTR [rip+0x3a292],ecx        # 0x1400430b8
   140008e26:	mov    DWORD PTR [rip+0x3a698],0x2        # 0x1400434c8
   140008e30:	mov    BYTE PTR [rip+0x3a589],r12b        # 0x1400433c0
   140008e37:	cmp    DWORD PTR [rbp-0x35],r15d
   140008e3b:	jne    0x14000ab54
   140008e41:	movzx  eax,WORD PTR [rip+0x38b40]        # 0x140041988
   140008e48:	mov    WORD PTR [rbp-0x39],ax
   140008e4c:	mov    QWORD PTR [rsp+0x20],r12
   140008e51:	lea    r9,[rbp-0x35]
   140008e55:	mov    r8d,0x2
   140008e5b:	lea    rdx,[rbp-0x39]
   140008e5f:	mov    rcx,QWORD PTR [rbx]
   140008e62:	call   QWORD PTR [rip+0x263a8]        # 0x14002f210
   140008e68:	test   eax,eax
   140008e6a:	jne    0x140008ea5
   140008e6c:	call   QWORD PTR [rip+0x262ee]        # 0x14002f160
   140008e72:	cmp    eax,0x58
   140008e75:	jae    0x140008e89
   140008e77:	mov    eax,eax
   140008e79:	lea    rcx,[rip+0xffffffffffff7180]        # 0x140000000
   140008e80:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008e87:	jmp    0x140008e8e
   140008e89:	mov    ecx,0x106
   140008e8e:	mov    DWORD PTR [rip+0x3a224],ecx        # 0x1400430b8
   140008e94:	mov    DWORD PTR [rip+0x3a62a],0x2        # 0x1400434c8
   140008e9e:	mov    BYTE PTR [rip+0x3a51b],r12b        # 0x1400433c0
   140008ea5:	cmp    DWORD PTR [rbp-0x35],0x2
   140008ea9:	jne    0x14000ab54
   140008eaf:	movzx  eax,WORD PTR [rip+0x38ad4]        # 0x14004198a
   140008eb6:	mov    WORD PTR [rbp-0x39],ax
   140008eba:	mov    QWORD PTR [rsp+0x20],r12
   140008ebf:	lea    r9,[rbp-0x35]
   140008ec3:	mov    r8d,0x2
   140008ec9:	lea    rdx,[rbp-0x39]
   140008ecd:	mov    rcx,QWORD PTR [rbx]
   140008ed0:	call   QWORD PTR [rip+0x2633a]        # 0x14002f210
   140008ed6:	test   eax,eax
   140008ed8:	jne    0x140008f13
   140008eda:	call   QWORD PTR [rip+0x26280]        # 0x14002f160
   140008ee0:	cmp    eax,0x58
   140008ee3:	jae    0x140008ef7
   140008ee5:	mov    eax,eax
   140008ee7:	lea    rcx,[rip+0xffffffffffff7112]        # 0x140000000
   140008eee:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008ef5:	jmp    0x140008efc
   140008ef7:	mov    ecx,0x106
   140008efc:	mov    DWORD PTR [rip+0x3a1b6],ecx        # 0x1400430b8
   140008f02:	mov    DWORD PTR [rip+0x3a5bc],0x2        # 0x1400434c8
   140008f0c:	mov    BYTE PTR [rip+0x3a4ad],r12b        # 0x1400433c0
   140008f13:	cmp    DWORD PTR [rbp-0x35],0x2
   140008f17:	jne    0x14000ab54
   140008f1d:	mov    QWORD PTR [rsp+0x20],r12
   140008f22:	lea    r9,[rbp-0x35]
   140008f26:	mov    r8d,r15d
   140008f29:	lea    rdx,[rbp-0x31]
   140008f2d:	mov    rcx,QWORD PTR [rbx]
   140008f30:	call   QWORD PTR [rip+0x262da]        # 0x14002f210
   140008f36:	test   eax,eax
   140008f38:	jne    0x140008f73
   140008f3a:	call   QWORD PTR [rip+0x26220]        # 0x14002f160
   140008f40:	cmp    eax,0x58
   140008f43:	jae    0x140008f57
   140008f45:	mov    eax,eax
   140008f47:	lea    rcx,[rip+0xffffffffffff70b2]        # 0x140000000
   140008f4e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008f55:	jmp    0x140008f5c
   140008f57:	mov    ecx,0x106
   140008f5c:	mov    DWORD PTR [rip+0x3a156],ecx        # 0x1400430b8
   140008f62:	mov    DWORD PTR [rip+0x3a55c],0x2        # 0x1400434c8
   140008f6c:	mov    BYTE PTR [rip+0x3a44d],r12b        # 0x1400433c0
   140008f73:	cmp    DWORD PTR [rbp-0x35],r15d
   140008f77:	jne    0x14000ab54
   140008f7d:	movzx  eax,WORD PTR [rip+0x38a08]        # 0x14004198c
   140008f84:	mov    WORD PTR [rbp-0x39],ax
   140008f88:	mov    QWORD PTR [rsp+0x20],r12
   140008f8d:	lea    r9,[rbp-0x35]
   140008f91:	mov    r8d,0x2
   140008f97:	lea    rdx,[rbp-0x39]
   140008f9b:	mov    rcx,QWORD PTR [rbx]
   140008f9e:	call   QWORD PTR [rip+0x2626c]        # 0x14002f210
   140008fa4:	test   eax,eax
   140008fa6:	jne    0x140008fe1
   140008fa8:	call   QWORD PTR [rip+0x261b2]        # 0x14002f160
   140008fae:	cmp    eax,0x58
   140008fb1:	jae    0x140008fc5
   140008fb3:	mov    eax,eax
   140008fb5:	lea    rcx,[rip+0xffffffffffff7044]        # 0x140000000
   140008fbc:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140008fc3:	jmp    0x140008fca
   140008fc5:	mov    ecx,0x106
   140008fca:	mov    DWORD PTR [rip+0x3a0e8],ecx        # 0x1400430b8
   140008fd0:	mov    DWORD PTR [rip+0x3a4ee],0x2        # 0x1400434c8
   140008fda:	mov    BYTE PTR [rip+0x3a3df],r12b        # 0x1400433c0
   140008fe1:	cmp    DWORD PTR [rbp-0x35],0x2
   140008fe5:	jne    0x14000ab54
   140008feb:	mov    QWORD PTR [rsp+0x20],r12
   140008ff0:	lea    r9,[rbp-0x35]
   140008ff4:	mov    r8d,r15d
   140008ff7:	lea    rdx,[rbp-0x31]
   140008ffb:	mov    rcx,QWORD PTR [rbx]
   140008ffe:	call   QWORD PTR [rip+0x2620c]        # 0x14002f210
   140009004:	test   eax,eax
   140009006:	jne    0x140009041
   140009008:	call   QWORD PTR [rip+0x26152]        # 0x14002f160
   14000900e:	cmp    eax,0x58
   140009011:	jae    0x140009025
   140009013:	mov    eax,eax
   140009015:	lea    rcx,[rip+0xffffffffffff6fe4]        # 0x140000000
   14000901c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009023:	jmp    0x14000902a
   140009025:	mov    ecx,0x106
   14000902a:	mov    DWORD PTR [rip+0x3a088],ecx        # 0x1400430b8
   140009030:	mov    DWORD PTR [rip+0x3a48e],0x2        # 0x1400434c8
   14000903a:	mov    BYTE PTR [rip+0x3a37f],r12b        # 0x1400433c0
   140009041:	cmp    DWORD PTR [rbp-0x35],r15d
   140009045:	jne    0x14000ab54
   14000904b:	mov    QWORD PTR [rsp+0x20],r12
   140009050:	lea    r9,[rbp-0x35]
   140009054:	mov    r8d,r15d
   140009057:	lea    rdx,[rbp-0x31]
   14000905b:	mov    rcx,QWORD PTR [rbx]
   14000905e:	call   QWORD PTR [rip+0x261ac]        # 0x14002f210
   140009064:	test   eax,eax
   140009066:	jne    0x1400090a1
   140009068:	call   QWORD PTR [rip+0x260f2]        # 0x14002f160
   14000906e:	cmp    eax,0x58
   140009071:	jae    0x140009085
   140009073:	mov    eax,eax
   140009075:	lea    rcx,[rip+0xffffffffffff6f84]        # 0x140000000
   14000907c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009083:	jmp    0x14000908a
   140009085:	mov    ecx,0x106
   14000908a:	mov    DWORD PTR [rip+0x3a028],ecx        # 0x1400430b8
   140009090:	mov    DWORD PTR [rip+0x3a42e],0x2        # 0x1400434c8
   14000909a:	mov    BYTE PTR [rip+0x3a31f],r12b        # 0x1400433c0
   1400090a1:	cmp    DWORD PTR [rbp-0x35],r15d
   1400090a5:	jne    0x14000ab54
   1400090ab:	xor    edx,edx
   1400090ad:	lea    r8d,[rdx+0x1]
   1400090b1:	mov    rcx,rbx
   1400090b4:	call   0x14002ad10
   1400090b9:	mov    DWORD PTR [rdi+0x84],eax
   1400090bf:	movzx  esi,r12w
   1400090c3:	movzx  eax,WORD PTR [rip+0x3892e]        # 0x1400419f8
   1400090ca:	inc    eax
   1400090cc:	test   eax,eax
   1400090ce:	jle    0x14000916c
   1400090d4:	nop    DWORD PTR [rax+0x0]
   1400090d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400090e0:	movzx  ecx,si
   1400090e3:	mov    rax,QWORD PTR [rip+0x38906]        # 0x1400419f0
   1400090ea:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400090ee:	mov    WORD PTR [rbp-0x39],cx
   1400090f2:	mov    QWORD PTR [rsp+0x20],r12
   1400090f7:	lea    r9,[rbp-0x35]
   1400090fb:	mov    r8d,0x2
   140009101:	lea    rdx,[rbp-0x39]
   140009105:	mov    rcx,QWORD PTR [rbx]
   140009108:	call   QWORD PTR [rip+0x26102]        # 0x14002f210
   14000910e:	test   eax,eax
   140009110:	jne    0x14000914b
   140009112:	call   QWORD PTR [rip+0x26048]        # 0x14002f160
   140009118:	cmp    eax,0x58
   14000911b:	jae    0x14000912f
   14000911d:	mov    eax,eax
   14000911f:	lea    rcx,[rip+0xffffffffffff6eda]        # 0x140000000
   140009126:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000912d:	jmp    0x140009134
   14000912f:	mov    ecx,0x106
   140009134:	mov    DWORD PTR [rip+0x39f7e],ecx        # 0x1400430b8
   14000913a:	mov    DWORD PTR [rip+0x3a384],0x2        # 0x1400434c8
   140009144:	mov    BYTE PTR [rip+0x3a275],r12b        # 0x1400433c0
   14000914b:	cmp    DWORD PTR [rbp-0x35],0x2
   14000914f:	jne    0x14000ab54
   140009155:	inc    si
   140009158:	movzx  ecx,WORD PTR [rip+0x38899]        # 0x1400419f8
   14000915f:	inc    ecx
   140009161:	movzx  eax,si
   140009164:	cmp    eax,ecx
   140009166:	jl     0x1400090e0
   14000916c:	xor    edx,edx
   14000916e:	lea    r8d,[rdx+0x1]
   140009172:	mov    rcx,rbx
   140009175:	call   0x14002ad10
   14000917a:	mov    DWORD PTR [rdi+0x88],eax
   140009180:	movzx  r8d,WORD PTR [rip+0x38872]        # 0x1400419fa
   140009188:	mov    rdx,QWORD PTR [rip+0x38859]        # 0x1400419e8
   14000918f:	mov    rcx,rbx
   140009192:	call   0x14002ada0
   140009197:	movzx  ecx,WORD PTR [rip+0x3885c]        # 0x1400419fa
   14000919e:	cmp    eax,ecx
   1400091a0:	jne    0x14000ab54
   1400091a6:	xor    edx,edx
   1400091a8:	lea    r8d,[rdx+0x1]
   1400091ac:	mov    rcx,rbx
   1400091af:	call   0x14002ad10
   1400091b4:	mov    DWORD PTR [rdi+0x90],eax
   1400091ba:	movzx  r8d,WORD PTR [rip+0x387c6]        # 0x140041988
   1400091c2:	mov    rdx,QWORD PTR [rip+0x3879f]        # 0x140041968
   1400091c9:	mov    rcx,rbx
   1400091cc:	call   0x14002ada0
   1400091d1:	movzx  ecx,WORD PTR [rip+0x387b0]        # 0x140041988
   1400091d8:	cmp    eax,ecx
   1400091da:	jne    0x14000ab54
   1400091e0:	xor    edx,edx
   1400091e2:	lea    r8d,[rdx+0x1]
   1400091e6:	mov    rcx,rbx
   1400091e9:	call   0x14002ad10
   1400091ee:	mov    DWORD PTR [rdi+0x98],eax
   1400091f4:	movsx  r8d,WORD PTR [rip+0x38790]        # 0x14004198c
   1400091fc:	mov    rdx,QWORD PTR [rip+0x3876d]        # 0x140041970
   140009203:	mov    rcx,rbx
   140009206:	call   0x14002ada0
   14000920b:	movsx  ecx,WORD PTR [rip+0x3877a]        # 0x14004198c
   140009212:	cmp    eax,ecx
   140009214:	jne    0x14000ab54
   14000921a:	xor    edx,edx
   14000921c:	lea    r8d,[rdx+0x1]
   140009220:	mov    rcx,rbx
   140009223:	call   0x14002ad10
   140009228:	mov    DWORD PTR [rdi+0xa0],eax
   14000922e:	movzx  esi,r12w
   140009232:	cmp    r12w,WORD PTR [rip+0x38750]        # 0x14004198a
   14000923a:	jge    0x1400092c6
   140009240:	movsx  rcx,si
   140009244:	mov    rax,QWORD PTR [rip+0x3872d]        # 0x140041978
   14000924b:	movzx  ecx,WORD PTR [rax+rcx*2]
   14000924f:	mov    WORD PTR [rbp-0x39],cx
   140009253:	mov    QWORD PTR [rsp+0x20],r12
   140009258:	lea    r9,[rbp-0x35]
   14000925c:	mov    r8d,0x2
   140009262:	lea    rdx,[rbp-0x39]
   140009266:	mov    rcx,QWORD PTR [rbx]
   140009269:	call   QWORD PTR [rip+0x25fa1]        # 0x14002f210
   14000926f:	test   eax,eax
   140009271:	jne    0x1400092ac
   140009273:	call   QWORD PTR [rip+0x25ee7]        # 0x14002f160
   140009279:	cmp    eax,0x58
   14000927c:	jae    0x140009290
   14000927e:	mov    eax,eax
   140009280:	lea    rcx,[rip+0xffffffffffff6d79]        # 0x140000000
   140009287:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000928e:	jmp    0x140009295
   140009290:	mov    ecx,0x106
   140009295:	mov    DWORD PTR [rip+0x39e1d],ecx        # 0x1400430b8
   14000929b:	mov    DWORD PTR [rip+0x3a223],0x2        # 0x1400434c8
   1400092a5:	mov    BYTE PTR [rip+0x3a114],r12b        # 0x1400433c0
   1400092ac:	cmp    DWORD PTR [rbp-0x35],0x2
   1400092b0:	jne    0x14000ab54
   1400092b6:	inc    si
   1400092b9:	cmp    si,WORD PTR [rip+0x386ca]        # 0x14004198a
   1400092c0:	jl     0x140009240
   1400092c6:	xor    edx,edx
   1400092c8:	lea    r8d,[rdx+0x1]
   1400092cc:	mov    rcx,rbx
   1400092cf:	call   0x14002ad10
   1400092d4:	mov    DWORD PTR [rdi+0xa4],eax
   1400092da:	movzx  esi,r12w
   1400092de:	cmp    r12w,WORD PTR [rip+0x386a4]        # 0x14004198a
   1400092e6:	jge    0x140009376
   1400092ec:	nop    DWORD PTR [rax+0x0]
   1400092f0:	movsx  rcx,si
   1400092f4:	mov    rax,QWORD PTR [rip+0x38685]        # 0x140041980
   1400092fb:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400092ff:	mov    WORD PTR [rbp-0x39],cx
   140009303:	mov    QWORD PTR [rsp+0x20],r12
   140009308:	lea    r9,[rbp-0x35]
   14000930c:	mov    r8d,0x2
   140009312:	lea    rdx,[rbp-0x39]
   140009316:	mov    rcx,QWORD PTR [rbx]
   140009319:	call   QWORD PTR [rip+0x25ef1]        # 0x14002f210
   14000931f:	test   eax,eax
   140009321:	jne    0x14000935c
   140009323:	call   QWORD PTR [rip+0x25e37]        # 0x14002f160
   140009329:	cmp    eax,0x58
   14000932c:	jae    0x140009340
   14000932e:	mov    eax,eax
   140009330:	lea    rcx,[rip+0xffffffffffff6cc9]        # 0x140000000
   140009337:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000933e:	jmp    0x140009345
   140009340:	mov    ecx,0x106
   140009345:	mov    DWORD PTR [rip+0x39d6d],ecx        # 0x1400430b8
   14000934b:	mov    DWORD PTR [rip+0x3a173],0x2        # 0x1400434c8
   140009355:	mov    BYTE PTR [rip+0x3a064],r12b        # 0x1400433c0
   14000935c:	cmp    DWORD PTR [rbp-0x35],0x2
   140009360:	jne    0x14000ab54
   140009366:	inc    si
   140009369:	cmp    si,WORD PTR [rip+0x3861a]        # 0x14004198a
   140009370:	jl     0x1400092f0
   140009376:	xor    edx,edx
   140009378:	mov    rcx,rbx
   14000937b:	cmp    WORD PTR [rip+0x385a1],r12w        # 0x140041924
   140009383:	je     0x1400097a8
   140009389:	lea    r8d,[rdx+0x1]
   14000938d:	call   0x14002ad10
   140009392:	mov    DWORD PTR [rdi+0x2c],eax
   140009395:	mov    rax,QWORD PTR [rip+0x37144]        # 0x1400404e0
   14000939c:	movzx  ecx,WORD PTR [rax+0xa8]
   1400093a3:	mov    WORD PTR [rbp-0x39],cx
   1400093a7:	mov    QWORD PTR [rsp+0x20],r12
   1400093ac:	lea    r9,[rbp-0x35]
   1400093b0:	mov    r8d,0x2
   1400093b6:	lea    rdx,[rbp-0x39]
   1400093ba:	mov    rcx,QWORD PTR [rbx]
   1400093bd:	call   QWORD PTR [rip+0x25e4d]        # 0x14002f210
   1400093c3:	test   eax,eax
   1400093c5:	jne    0x140009400
   1400093c7:	call   QWORD PTR [rip+0x25d93]        # 0x14002f160
   1400093cd:	cmp    eax,0x58
   1400093d0:	jae    0x1400093e4
   1400093d2:	mov    eax,eax
   1400093d4:	lea    rcx,[rip+0xffffffffffff6c25]        # 0x140000000
   1400093db:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400093e2:	jmp    0x1400093e9
   1400093e4:	mov    ecx,0x106
   1400093e9:	mov    DWORD PTR [rip+0x39cc9],ecx        # 0x1400430b8
   1400093ef:	mov    DWORD PTR [rip+0x3a0cf],0x2        # 0x1400434c8
   1400093f9:	mov    BYTE PTR [rip+0x39fc0],r12b        # 0x1400433c0
   140009400:	cmp    DWORD PTR [rbp-0x35],0x2
   140009404:	jne    0x14000ab54
   14000940a:	mov    rax,QWORD PTR [rip+0x370cf]        # 0x1400404e0
   140009411:	movzx  ecx,WORD PTR [rax+0xaa]
   140009418:	mov    WORD PTR [rbp-0x39],cx
   14000941c:	mov    QWORD PTR [rsp+0x20],r12
   140009421:	lea    r9,[rbp-0x35]
   140009425:	mov    r8d,0x2
   14000942b:	lea    rdx,[rbp-0x39]
   14000942f:	mov    rcx,QWORD PTR [rbx]
   140009432:	call   QWORD PTR [rip+0x25dd8]        # 0x14002f210
   140009438:	test   eax,eax
   14000943a:	jne    0x140009475
   14000943c:	call   QWORD PTR [rip+0x25d1e]        # 0x14002f160
   140009442:	cmp    eax,0x58
   140009445:	jae    0x140009459
   140009447:	mov    eax,eax
   140009449:	lea    rcx,[rip+0xffffffffffff6bb0]        # 0x140000000
   140009450:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009457:	jmp    0x14000945e
   140009459:	mov    ecx,0x106
   14000945e:	mov    DWORD PTR [rip+0x39c54],ecx        # 0x1400430b8
   140009464:	mov    DWORD PTR [rip+0x3a05a],0x2        # 0x1400434c8
   14000946e:	mov    BYTE PTR [rip+0x39f4b],r12b        # 0x1400433c0
   140009475:	cmp    DWORD PTR [rbp-0x35],0x2
   140009479:	jne    0x14000ab54
   14000947f:	mov    rax,QWORD PTR [rip+0x3705a]        # 0x1400404e0
   140009486:	mov    ecx,DWORD PTR [rax+0xac]
   14000948c:	mov    DWORD PTR [rbp-0x31],ecx
   14000948f:	mov    QWORD PTR [rsp+0x20],r12
   140009494:	lea    r9,[rbp-0x35]
   140009498:	mov    r8d,r15d
   14000949b:	lea    rdx,[rbp-0x31]
   14000949f:	mov    rcx,QWORD PTR [rbx]
   1400094a2:	call   QWORD PTR [rip+0x25d68]        # 0x14002f210
   1400094a8:	test   eax,eax
   1400094aa:	jne    0x1400094e5
   1400094ac:	call   QWORD PTR [rip+0x25cae]        # 0x14002f160
   1400094b2:	cmp    eax,0x58
   1400094b5:	jae    0x1400094c9
   1400094b7:	mov    eax,eax
   1400094b9:	lea    rcx,[rip+0xffffffffffff6b40]        # 0x140000000
   1400094c0:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400094c7:	jmp    0x1400094ce
   1400094c9:	mov    ecx,0x106
   1400094ce:	mov    DWORD PTR [rip+0x39be4],ecx        # 0x1400430b8
   1400094d4:	mov    DWORD PTR [rip+0x39fea],0x2        # 0x1400434c8
   1400094de:	mov    BYTE PTR [rip+0x39edb],r12b        # 0x1400433c0
   1400094e5:	cmp    DWORD PTR [rbp-0x35],r15d
   1400094e9:	jne    0x14000ab54
   1400094ef:	mov    rax,QWORD PTR [rip+0x36fea]        # 0x1400404e0
   1400094f6:	movzx  ecx,WORD PTR [rax+0xb0]
   1400094fd:	mov    WORD PTR [rbp-0x39],cx
   140009501:	mov    QWORD PTR [rsp+0x20],r12
   140009506:	lea    r9,[rbp-0x35]
   14000950a:	mov    r8d,0x2
   140009510:	lea    rdx,[rbp-0x39]
   140009514:	mov    rcx,QWORD PTR [rbx]
   140009517:	call   QWORD PTR [rip+0x25cf3]        # 0x14002f210
   14000951d:	test   eax,eax
   14000951f:	jne    0x14000955a
   140009521:	call   QWORD PTR [rip+0x25c39]        # 0x14002f160
   140009527:	cmp    eax,0x58
   14000952a:	jae    0x14000953e
   14000952c:	mov    eax,eax
   14000952e:	lea    rcx,[rip+0xffffffffffff6acb]        # 0x140000000
   140009535:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000953c:	jmp    0x140009543
   14000953e:	mov    ecx,0x106
   140009543:	mov    DWORD PTR [rip+0x39b6f],ecx        # 0x1400430b8
   140009549:	mov    DWORD PTR [rip+0x39f75],0x2        # 0x1400434c8
   140009553:	mov    BYTE PTR [rip+0x39e66],r12b        # 0x1400433c0
   14000955a:	cmp    DWORD PTR [rbp-0x35],0x2
   14000955e:	jne    0x14000ab54
   140009564:	mov    rax,QWORD PTR [rip+0x36f75]        # 0x1400404e0
   14000956b:	movzx  ecx,WORD PTR [rax+0xb2]
   140009572:	mov    WORD PTR [rbp-0x39],cx
   140009576:	mov    QWORD PTR [rsp+0x20],r12
   14000957b:	lea    r9,[rbp-0x35]
   14000957f:	mov    r8d,0x2
   140009585:	lea    rdx,[rbp-0x39]
   140009589:	mov    rcx,QWORD PTR [rbx]
   14000958c:	call   QWORD PTR [rip+0x25c7e]        # 0x14002f210
   140009592:	test   eax,eax
   140009594:	jne    0x1400095cf
   140009596:	call   QWORD PTR [rip+0x25bc4]        # 0x14002f160
   14000959c:	cmp    eax,0x58
   14000959f:	jae    0x1400095b3
   1400095a1:	mov    eax,eax
   1400095a3:	lea    rcx,[rip+0xffffffffffff6a56]        # 0x140000000
   1400095aa:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400095b1:	jmp    0x1400095b8
   1400095b3:	mov    ecx,0x106
   1400095b8:	mov    DWORD PTR [rip+0x39afa],ecx        # 0x1400430b8
   1400095be:	mov    DWORD PTR [rip+0x39f00],0x2        # 0x1400434c8
   1400095c8:	mov    BYTE PTR [rip+0x39df1],r12b        # 0x1400433c0
   1400095cf:	cmp    DWORD PTR [rbp-0x35],0x2
   1400095d3:	jne    0x14000ab54
   1400095d9:	mov    rax,QWORD PTR [rip+0x36f00]        # 0x1400404e0
   1400095e0:	movzx  ecx,WORD PTR [rax+0xb4]
   1400095e7:	mov    WORD PTR [rbp-0x39],cx
   1400095eb:	mov    QWORD PTR [rsp+0x20],r12
   1400095f0:	lea    r9,[rbp-0x35]
   1400095f4:	mov    r8d,0x2
   1400095fa:	lea    rdx,[rbp-0x39]
   1400095fe:	mov    rcx,QWORD PTR [rbx]
   140009601:	call   QWORD PTR [rip+0x25c09]        # 0x14002f210
   140009607:	test   eax,eax
   140009609:	jne    0x140009644
   14000960b:	call   QWORD PTR [rip+0x25b4f]        # 0x14002f160
   140009611:	cmp    eax,0x58
   140009614:	jae    0x140009628
   140009616:	mov    eax,eax
   140009618:	lea    rcx,[rip+0xffffffffffff69e1]        # 0x140000000
   14000961f:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009626:	jmp    0x14000962d
   140009628:	mov    ecx,0x106
   14000962d:	mov    DWORD PTR [rip+0x39a85],ecx        # 0x1400430b8
   140009633:	mov    DWORD PTR [rip+0x39e8b],0x2        # 0x1400434c8
   14000963d:	mov    BYTE PTR [rip+0x39d7c],r12b        # 0x1400433c0
   140009644:	cmp    DWORD PTR [rbp-0x35],0x2
   140009648:	jne    0x14000ab54
   14000964e:	mov    rdx,QWORD PTR [rip+0x36e8b]        # 0x1400404e0
   140009655:	add    rdx,0xb6
   14000965c:	mov    r8d,0x1
   140009662:	mov    rcx,rbx
   140009665:	call   0x14002ada0
   14000966a:	cmp    eax,0x1
   14000966d:	jne    0x14000ab54
   140009673:	mov    QWORD PTR [rsp+0x20],r12
   140009678:	lea    r9,[rbp-0x35]
   14000967c:	lea    r8d,[rax+0x15]
   140009680:	lea    rdx,[rip+0x34889]        # 0x14003df10
   140009687:	mov    rcx,QWORD PTR [rbx]
   14000968a:	call   QWORD PTR [rip+0x25b80]        # 0x14002f210
   140009690:	test   eax,eax
   140009692:	jne    0x1400096cd
   140009694:	call   QWORD PTR [rip+0x25ac6]        # 0x14002f160
   14000969a:	cmp    eax,0x58
   14000969d:	jae    0x1400096b1
   14000969f:	mov    eax,eax
   1400096a1:	lea    rcx,[rip+0xffffffffffff6958]        # 0x140000000
   1400096a8:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400096af:	jmp    0x1400096b6
   1400096b1:	mov    ecx,0x106
   1400096b6:	mov    DWORD PTR [rip+0x399fc],ecx        # 0x1400430b8
   1400096bc:	mov    DWORD PTR [rip+0x39e02],0x2        # 0x1400434c8
   1400096c6:	mov    BYTE PTR [rip+0x39cf3],r12b        # 0x1400433c0
   1400096cd:	cmp    DWORD PTR [rbp-0x35],0x16
   1400096d1:	jne    0x14000ab54
   1400096d7:	xor    edx,edx
   1400096d9:	lea    r8d,[rdx+0x1]
   1400096dd:	mov    rcx,rbx
   1400096e0:	call   0x14002ad10
   1400096e5:	mov    DWORD PTR [rdi+0xac],eax
   1400096eb:	movzx  esi,r12w
   1400096ef:	mov    rax,QWORD PTR [rip+0x36dea]        # 0x1400404e0
   1400096f6:	movzx  ecx,WORD PTR [rax+0xa8]
   1400096fd:	inc    cx
   140009700:	cmp    r12w,cx
   140009704:	jge    0x140009ac6
   14000970a:	nop    WORD PTR [rax+rax*1+0x0]
   140009710:	movsx  rcx,si
   140009714:	mov    rax,QWORD PTR [rip+0x38285]        # 0x1400419a0
   14000971b:	movzx  ecx,WORD PTR [rax+rcx*2]
   14000971f:	mov    WORD PTR [rbp-0x39],cx
   140009723:	mov    QWORD PTR [rsp+0x20],r12
   140009728:	lea    r9,[rbp-0x35]
   14000972c:	mov    r8d,0x2
   140009732:	lea    rdx,[rbp-0x39]
   140009736:	mov    rcx,QWORD PTR [rbx]
   140009739:	call   QWORD PTR [rip+0x25ad1]        # 0x14002f210
   14000973f:	test   eax,eax
   140009741:	jne    0x14000977c
   140009743:	call   QWORD PTR [rip+0x25a17]        # 0x14002f160
   140009749:	cmp    eax,0x58
   14000974c:	jae    0x140009760
   14000974e:	mov    eax,eax
   140009750:	lea    rcx,[rip+0xffffffffffff68a9]        # 0x140000000
   140009757:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000975e:	jmp    0x140009765
   140009760:	mov    ecx,0x106
   140009765:	mov    DWORD PTR [rip+0x3994d],ecx        # 0x1400430b8
   14000976b:	mov    DWORD PTR [rip+0x39d53],0x2        # 0x1400434c8
   140009775:	mov    BYTE PTR [rip+0x39c44],r12b        # 0x1400433c0
   14000977c:	cmp    DWORD PTR [rbp-0x35],0x2
   140009780:	jne    0x14000ab54
   140009786:	inc    si
   140009789:	mov    rax,QWORD PTR [rip+0x36d50]        # 0x1400404e0
   140009790:	movzx  ecx,WORD PTR [rax+0xa8]
   140009797:	inc    cx
   14000979a:	cmp    si,cx
   14000979d:	jl     0x140009710
   1400097a3:	jmp    0x140009ac6
   1400097a8:	mov    esi,0x1
   1400097ad:	mov    r8d,esi
   1400097b0:	call   0x14002ad10
   1400097b5:	mov    DWORD PTR [rdi+0x2c],eax
   1400097b8:	mov    WORD PTR [rbp-0x39],r12w
   1400097bd:	mov    QWORD PTR [rsp+0x20],r12
   1400097c2:	lea    r9,[rbp-0x35]
   1400097c6:	lea    r8d,[rsi+0x1]
   1400097ca:	lea    rdx,[rbp-0x39]
   1400097ce:	mov    rcx,QWORD PTR [rbx]
   1400097d1:	call   QWORD PTR [rip+0x25a39]        # 0x14002f210
   1400097d7:	test   eax,eax
   1400097d9:	jne    0x140009814
   1400097db:	call   QWORD PTR [rip+0x2597f]        # 0x14002f160
   1400097e1:	cmp    eax,0x58
   1400097e4:	jae    0x1400097f8
   1400097e6:	mov    eax,eax
   1400097e8:	lea    rcx,[rip+0xffffffffffff6811]        # 0x140000000
   1400097ef:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400097f6:	jmp    0x1400097fd
   1400097f8:	mov    ecx,0x106
   1400097fd:	mov    DWORD PTR [rip+0x398b5],ecx        # 0x1400430b8
   140009803:	mov    DWORD PTR [rip+0x39cbb],0x2        # 0x1400434c8
   14000980d:	mov    BYTE PTR [rip+0x39bac],r12b        # 0x1400433c0
   140009814:	cmp    DWORD PTR [rbp-0x35],0x2
   140009818:	jne    0x14000ab54
   14000981e:	mov    WORD PTR [rbp-0x39],r12w
   140009823:	mov    QWORD PTR [rsp+0x20],r12
   140009828:	lea    r9,[rbp-0x35]
   14000982c:	mov    r8d,0x2
   140009832:	lea    rdx,[rbp-0x39]
   140009836:	mov    rcx,QWORD PTR [rbx]
   140009839:	call   QWORD PTR [rip+0x259d1]        # 0x14002f210
   14000983f:	test   eax,eax
   140009841:	jne    0x14000987c
   140009843:	call   QWORD PTR [rip+0x25917]        # 0x14002f160
   140009849:	cmp    eax,0x58
   14000984c:	jae    0x140009860
   14000984e:	mov    eax,eax
   140009850:	lea    rcx,[rip+0xffffffffffff67a9]        # 0x140000000
   140009857:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000985e:	jmp    0x140009865
   140009860:	mov    ecx,0x106
   140009865:	mov    DWORD PTR [rip+0x3984d],ecx        # 0x1400430b8
   14000986b:	mov    DWORD PTR [rip+0x39c53],0x2        # 0x1400434c8
   140009875:	mov    BYTE PTR [rip+0x39b44],r12b        # 0x1400433c0
   14000987c:	cmp    DWORD PTR [rbp-0x35],0x2
   140009880:	jne    0x14000ab54
   140009886:	mov    DWORD PTR [rbp-0x31],r12d
   14000988a:	mov    QWORD PTR [rsp+0x20],r12
   14000988f:	lea    r9,[rbp-0x35]
   140009893:	mov    r8d,r15d
   140009896:	lea    rdx,[rbp-0x31]
   14000989a:	mov    rcx,QWORD PTR [rbx]
   14000989d:	call   QWORD PTR [rip+0x2596d]        # 0x14002f210
   1400098a3:	test   eax,eax
   1400098a5:	jne    0x1400098e0
   1400098a7:	call   QWORD PTR [rip+0x258b3]        # 0x14002f160
   1400098ad:	cmp    eax,0x58
   1400098b0:	jae    0x1400098c4
   1400098b2:	mov    eax,eax
   1400098b4:	lea    rcx,[rip+0xffffffffffff6745]        # 0x140000000
   1400098bb:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400098c2:	jmp    0x1400098c9
   1400098c4:	mov    ecx,0x106
   1400098c9:	mov    DWORD PTR [rip+0x397e9],ecx        # 0x1400430b8
   1400098cf:	mov    DWORD PTR [rip+0x39bef],0x2        # 0x1400434c8
   1400098d9:	mov    BYTE PTR [rip+0x39ae0],r12b        # 0x1400433c0
   1400098e0:	cmp    DWORD PTR [rbp-0x35],r15d
   1400098e4:	jne    0x14000ab54
   1400098ea:	mov    WORD PTR [rbp-0x39],r12w
   1400098ef:	mov    QWORD PTR [rsp+0x20],r12
   1400098f4:	lea    r9,[rbp-0x35]
   1400098f8:	mov    r8d,0x2
   1400098fe:	lea    rdx,[rbp-0x39]
   140009902:	mov    rcx,QWORD PTR [rbx]
   140009905:	call   QWORD PTR [rip+0x25905]        # 0x14002f210
   14000990b:	test   eax,eax
   14000990d:	jne    0x140009948
   14000990f:	call   QWORD PTR [rip+0x2584b]        # 0x14002f160
   140009915:	cmp    eax,0x58
   140009918:	jae    0x14000992c
   14000991a:	mov    eax,eax
   14000991c:	lea    rcx,[rip+0xffffffffffff66dd]        # 0x140000000
   140009923:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000992a:	jmp    0x140009931
   14000992c:	mov    ecx,0x106
   140009931:	mov    DWORD PTR [rip+0x39781],ecx        # 0x1400430b8
   140009937:	mov    DWORD PTR [rip+0x39b87],0x2        # 0x1400434c8
   140009941:	mov    BYTE PTR [rip+0x39a78],r12b        # 0x1400433c0
   140009948:	cmp    DWORD PTR [rbp-0x35],0x2
   14000994c:	jne    0x14000ab54
   140009952:	mov    WORD PTR [rbp-0x39],si
   140009956:	mov    QWORD PTR [rsp+0x20],r12
   14000995b:	lea    r9,[rbp-0x35]
   14000995f:	mov    r8d,0x2
   140009965:	lea    rdx,[rbp-0x39]
   140009969:	mov    rcx,QWORD PTR [rbx]
   14000996c:	call   QWORD PTR [rip+0x2589e]        # 0x14002f210
   140009972:	test   eax,eax
   140009974:	jne    0x1400099af
   140009976:	call   QWORD PTR [rip+0x257e4]        # 0x14002f160
   14000997c:	cmp    eax,0x58
   14000997f:	jae    0x140009993
   140009981:	mov    eax,eax
   140009983:	lea    rcx,[rip+0xffffffffffff6676]        # 0x140000000
   14000998a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009991:	jmp    0x140009998
   140009993:	mov    ecx,0x106
   140009998:	mov    DWORD PTR [rip+0x3971a],ecx        # 0x1400430b8
   14000999e:	mov    DWORD PTR [rip+0x39b20],0x2        # 0x1400434c8
   1400099a8:	mov    BYTE PTR [rip+0x39a11],r12b        # 0x1400433c0
   1400099af:	cmp    DWORD PTR [rbp-0x35],0x2
   1400099b3:	jne    0x14000ab54
   1400099b9:	mov    QWORD PTR [rsp+0x20],r12
   1400099be:	lea    r9,[rbp-0x35]
   1400099c2:	mov    r8d,0x2
   1400099c8:	lea    rdx,[rbp-0x39]
   1400099cc:	mov    rcx,QWORD PTR [rbx]
   1400099cf:	call   QWORD PTR [rip+0x2583b]        # 0x14002f210
   1400099d5:	test   eax,eax
   1400099d7:	jne    0x140009a12
   1400099d9:	call   QWORD PTR [rip+0x25781]        # 0x14002f160
   1400099df:	cmp    eax,0x58
   1400099e2:	jae    0x1400099f6
   1400099e4:	mov    eax,eax
   1400099e6:	lea    rcx,[rip+0xffffffffffff6613]        # 0x140000000
   1400099ed:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400099f4:	jmp    0x1400099fb
   1400099f6:	mov    ecx,0x106
   1400099fb:	mov    DWORD PTR [rip+0x396b7],ecx        # 0x1400430b8
   140009a01:	mov    DWORD PTR [rip+0x39abd],0x2        # 0x1400434c8
   140009a0b:	mov    BYTE PTR [rip+0x399ae],r12b        # 0x1400433c0
   140009a12:	cmp    DWORD PTR [rbp-0x35],0x2
   140009a16:	jne    0x14000ab54
   140009a1c:	mov    WORD PTR [rbp-0x39],r12w
   140009a21:	mov    r8d,esi
   140009a24:	lea    rdx,[rip+0x37f9d]        # 0x1400419c8
   140009a2b:	mov    rcx,rbx
   140009a2e:	call   0x14002ada0
   140009a33:	cmp    eax,esi
   140009a35:	jne    0x14000ab54
   140009a3b:	mov    QWORD PTR [rsp+0x20],r12
   140009a40:	lea    r9,[rbp-0x35]
   140009a44:	mov    r8d,0x16
   140009a4a:	lea    rdx,[rip+0x344bf]        # 0x14003df10
   140009a51:	mov    rcx,QWORD PTR [rbx]
   140009a54:	call   QWORD PTR [rip+0x257b6]        # 0x14002f210
   140009a5a:	test   eax,eax
   140009a5c:	jne    0x140009a97
   140009a5e:	call   QWORD PTR [rip+0x256fc]        # 0x14002f160
   140009a64:	cmp    eax,0x58
   140009a67:	jae    0x140009a7b
   140009a69:	mov    eax,eax
   140009a6b:	lea    rcx,[rip+0xffffffffffff658e]        # 0x140000000
   140009a72:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009a79:	jmp    0x140009a80
   140009a7b:	mov    ecx,0x106
   140009a80:	mov    DWORD PTR [rip+0x39632],ecx        # 0x1400430b8
   140009a86:	mov    DWORD PTR [rip+0x39a38],0x2        # 0x1400434c8
   140009a90:	mov    BYTE PTR [rip+0x39929],r12b        # 0x1400433c0
   140009a97:	cmp    DWORD PTR [rbp-0x35],0x16
   140009a9b:	jne    0x14000ab54
   140009aa1:	mov    r8d,esi
   140009aa4:	xor    edx,edx
   140009aa6:	mov    rcx,rbx
   140009aa9:	call   0x14002ad10
   140009aae:	mov    DWORD PTR [rdi+0xac],eax
   140009ab4:	mov    r8d,esi
   140009ab7:	xor    edx,edx
   140009ab9:	mov    rcx,rbx
   140009abc:	call   0x14002ad10
   140009ac1:	mov    DWORD PTR [rdi+0x30],eax
   140009ac4:	jmp    0x140009acb
   140009ac6:	mov    esi,0x1
   140009acb:	mov    r8d,esi
   140009ace:	xor    edx,edx
   140009ad0:	mov    rcx,rbx
   140009ad3:	call   0x14002ad10
   140009ad8:	mov    DWORD PTR [rdi+0x34],eax
   140009adb:	mov    rax,QWORD PTR [rip+0x369fe]        # 0x1400404e0
   140009ae2:	movzx  ecx,WORD PTR [rax+0xb8]
   140009ae9:	mov    WORD PTR [rbp-0x39],cx
   140009aed:	mov    QWORD PTR [rsp+0x20],r12
   140009af2:	lea    r9,[rbp-0x35]
   140009af6:	mov    r8d,0x2
   140009afc:	lea    rdx,[rbp-0x39]
   140009b00:	mov    rcx,QWORD PTR [rbx]
   140009b03:	call   QWORD PTR [rip+0x25707]        # 0x14002f210
   140009b09:	test   eax,eax
   140009b0b:	jne    0x140009b46
   140009b0d:	call   QWORD PTR [rip+0x2564d]        # 0x14002f160
   140009b13:	cmp    eax,0x58
   140009b16:	jae    0x140009b2a
   140009b18:	mov    eax,eax
   140009b1a:	lea    rcx,[rip+0xffffffffffff64df]        # 0x140000000
   140009b21:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009b28:	jmp    0x140009b2f
   140009b2a:	mov    ecx,0x106
   140009b2f:	mov    DWORD PTR [rip+0x39583],ecx        # 0x1400430b8
   140009b35:	mov    DWORD PTR [rip+0x39989],0x2        # 0x1400434c8
   140009b3f:	mov    BYTE PTR [rip+0x3987a],r12b        # 0x1400433c0
   140009b46:	cmp    DWORD PTR [rbp-0x35],0x2
   140009b4a:	jne    0x14000ab54
   140009b50:	mov    rax,QWORD PTR [rip+0x36989]        # 0x1400404e0
   140009b57:	movzx  ecx,WORD PTR [rax+0xba]
   140009b5e:	mov    WORD PTR [rbp-0x39],cx
   140009b62:	mov    QWORD PTR [rsp+0x20],r12
   140009b67:	lea    r9,[rbp-0x35]
   140009b6b:	mov    r8d,0x2
   140009b71:	lea    rdx,[rbp-0x39]
   140009b75:	mov    rcx,QWORD PTR [rbx]
   140009b78:	call   QWORD PTR [rip+0x25692]        # 0x14002f210
   140009b7e:	test   eax,eax
   140009b80:	jne    0x140009bbb
   140009b82:	call   QWORD PTR [rip+0x255d8]        # 0x14002f160
   140009b88:	cmp    eax,0x58
   140009b8b:	jae    0x140009b9f
   140009b8d:	mov    eax,eax
   140009b8f:	lea    rcx,[rip+0xffffffffffff646a]        # 0x140000000
   140009b96:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009b9d:	jmp    0x140009ba4
   140009b9f:	mov    ecx,0x106
   140009ba4:	mov    DWORD PTR [rip+0x3950e],ecx        # 0x1400430b8
   140009baa:	mov    DWORD PTR [rip+0x39914],0x2        # 0x1400434c8
   140009bb4:	mov    BYTE PTR [rip+0x39805],r12b        # 0x1400433c0
   140009bbb:	cmp    DWORD PTR [rbp-0x35],0x2
   140009bbf:	jne    0x14000ab54
   140009bc5:	mov    rax,QWORD PTR [rip+0x36914]        # 0x1400404e0
   140009bcc:	movzx  ecx,WORD PTR [rax+0xbc]
   140009bd3:	mov    WORD PTR [rbp-0x39],cx
   140009bd7:	mov    QWORD PTR [rsp+0x20],r12
   140009bdc:	lea    r9,[rbp-0x35]
   140009be0:	mov    r8d,0x2
   140009be6:	lea    rdx,[rbp-0x39]
   140009bea:	mov    rcx,QWORD PTR [rbx]
   140009bed:	call   QWORD PTR [rip+0x2561d]        # 0x14002f210
   140009bf3:	test   eax,eax
   140009bf5:	jne    0x140009c30
   140009bf7:	call   QWORD PTR [rip+0x25563]        # 0x14002f160
   140009bfd:	cmp    eax,0x58
   140009c00:	jae    0x140009c14
   140009c02:	mov    eax,eax
   140009c04:	lea    rcx,[rip+0xffffffffffff63f5]        # 0x140000000
   140009c0b:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009c12:	jmp    0x140009c19
   140009c14:	mov    ecx,0x106
   140009c19:	mov    DWORD PTR [rip+0x39499],ecx        # 0x1400430b8
   140009c1f:	mov    DWORD PTR [rip+0x3989f],0x2        # 0x1400434c8
   140009c29:	mov    BYTE PTR [rip+0x39790],r12b        # 0x1400433c0
   140009c30:	cmp    DWORD PTR [rbp-0x35],0x2
   140009c34:	jne    0x14000ab54
   140009c3a:	mov    rax,QWORD PTR [rip+0x3689f]        # 0x1400404e0
   140009c41:	movzx  ecx,WORD PTR [rax+0xbe]
   140009c48:	mov    WORD PTR [rbp-0x39],cx
   140009c4c:	mov    QWORD PTR [rsp+0x20],r12
   140009c51:	lea    r9,[rbp-0x35]
   140009c55:	mov    r8d,0x2
   140009c5b:	lea    rdx,[rbp-0x39]
   140009c5f:	mov    rcx,QWORD PTR [rbx]
   140009c62:	call   QWORD PTR [rip+0x255a8]        # 0x14002f210
   140009c68:	test   eax,eax
   140009c6a:	jne    0x140009ca5
   140009c6c:	call   QWORD PTR [rip+0x254ee]        # 0x14002f160
   140009c72:	cmp    eax,0x58
   140009c75:	jae    0x140009c89
   140009c77:	mov    eax,eax
   140009c79:	lea    rcx,[rip+0xffffffffffff6380]        # 0x140000000
   140009c80:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009c87:	jmp    0x140009c8e
   140009c89:	mov    ecx,0x106
   140009c8e:	mov    DWORD PTR [rip+0x39424],ecx        # 0x1400430b8
   140009c94:	mov    DWORD PTR [rip+0x3982a],0x2        # 0x1400434c8
   140009c9e:	mov    BYTE PTR [rip+0x3971b],r12b        # 0x1400433c0
   140009ca5:	cmp    DWORD PTR [rbp-0x35],0x2
   140009ca9:	jne    0x14000ab54
   140009caf:	mov    rax,QWORD PTR [rip+0x3682a]        # 0x1400404e0
   140009cb6:	movzx  ecx,WORD PTR [rax+0xc0]
   140009cbd:	mov    WORD PTR [rbp-0x39],cx
   140009cc1:	mov    QWORD PTR [rsp+0x20],r12
   140009cc6:	lea    r9,[rbp-0x35]
   140009cca:	mov    r8d,0x2
   140009cd0:	lea    rdx,[rbp-0x39]
   140009cd4:	mov    rcx,QWORD PTR [rbx]
   140009cd7:	call   QWORD PTR [rip+0x25533]        # 0x14002f210
   140009cdd:	test   eax,eax
   140009cdf:	jne    0x140009d1a
   140009ce1:	call   QWORD PTR [rip+0x25479]        # 0x14002f160
   140009ce7:	cmp    eax,0x58
   140009cea:	jae    0x140009cfe
   140009cec:	mov    eax,eax
   140009cee:	lea    rcx,[rip+0xffffffffffff630b]        # 0x140000000
   140009cf5:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009cfc:	jmp    0x140009d03
   140009cfe:	mov    ecx,0x106
   140009d03:	mov    DWORD PTR [rip+0x393af],ecx        # 0x1400430b8
   140009d09:	mov    DWORD PTR [rip+0x397b5],0x2        # 0x1400434c8
   140009d13:	mov    BYTE PTR [rip+0x396a6],r12b        # 0x1400433c0
   140009d1a:	cmp    DWORD PTR [rbp-0x35],0x2
   140009d1e:	jne    0x14000ab54
   140009d24:	mov    rax,QWORD PTR [rip+0x367b5]        # 0x1400404e0
   140009d2b:	movzx  ecx,WORD PTR [rax+0xc2]
   140009d32:	mov    WORD PTR [rbp-0x39],cx
   140009d36:	mov    QWORD PTR [rsp+0x20],r12
   140009d3b:	lea    r9,[rbp-0x35]
   140009d3f:	mov    r8d,0x2
   140009d45:	lea    rdx,[rbp-0x39]
   140009d49:	mov    rcx,QWORD PTR [rbx]
   140009d4c:	call   QWORD PTR [rip+0x254be]        # 0x14002f210
   140009d52:	test   eax,eax
   140009d54:	jne    0x140009d8f
   140009d56:	call   QWORD PTR [rip+0x25404]        # 0x14002f160
   140009d5c:	cmp    eax,0x58
   140009d5f:	jae    0x140009d73
   140009d61:	mov    eax,eax
   140009d63:	lea    rcx,[rip+0xffffffffffff6296]        # 0x140000000
   140009d6a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009d71:	jmp    0x140009d78
   140009d73:	mov    ecx,0x106
   140009d78:	mov    DWORD PTR [rip+0x3933a],ecx        # 0x1400430b8
   140009d7e:	mov    DWORD PTR [rip+0x39740],0x2        # 0x1400434c8
   140009d88:	mov    BYTE PTR [rip+0x39631],r12b        # 0x1400433c0
   140009d8f:	cmp    DWORD PTR [rbp-0x35],0x2
   140009d93:	jne    0x14000ab54
   140009d99:	mov    rax,QWORD PTR [rip+0x36740]        # 0x1400404e0
   140009da0:	movzx  ecx,WORD PTR [rax+0xc4]
   140009da7:	mov    WORD PTR [rbp-0x39],cx
   140009dab:	mov    QWORD PTR [rsp+0x20],r12
   140009db0:	lea    r9,[rbp-0x35]
   140009db4:	mov    r8d,0x2
   140009dba:	lea    rdx,[rbp-0x39]
   140009dbe:	mov    rcx,QWORD PTR [rbx]
   140009dc1:	call   QWORD PTR [rip+0x25449]        # 0x14002f210
   140009dc7:	test   eax,eax
   140009dc9:	jne    0x140009e04
   140009dcb:	call   QWORD PTR [rip+0x2538f]        # 0x14002f160
   140009dd1:	cmp    eax,0x58
   140009dd4:	jae    0x140009de8
   140009dd6:	mov    eax,eax
   140009dd8:	lea    rcx,[rip+0xffffffffffff6221]        # 0x140000000
   140009ddf:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140009de6:	jmp    0x140009ded
   140009de8:	mov    ecx,0x106
   140009ded:	mov    DWORD PTR [rip+0x392c5],ecx        # 0x1400430b8
   140009df3:	mov    DWORD PTR [rip+0x396cb],0x2        # 0x1400434c8
   140009dfd:	mov    BYTE PTR [rip+0x395bc],r12b        # 0x1400433c0
   140009e04:	cmp    DWORD PTR [rbp-0x35],0x2
   140009e08:	jne    0x14000ab54
   140009e0e:	mov    rax,QWORD PTR [rip+0x366cb]        # 0x1400404e0
   140009e15:	movzx  ecx,WORD PTR [rax+0xc6]
   140009e1c:	mov    WORD PTR [rbp-0x39],cx
   140009e20:	mov    r8d,0x2
   140009e26:	lea    rdx,[rbp-0x39]
   140009e2a:	mov    rcx,rbx
   140009e2d:	call   0x14002ada0
   140009e32:	cmp    eax,0x2
   140009e35:	jne    0x14000ab54
   140009e3b:	mov    rax,QWORD PTR [rip+0x3669e]        # 0x1400404e0
   140009e42:	movzx  ecx,WORD PTR [rax+0xc8]
   140009e49:	mov    WORD PTR [rbp-0x39],cx
   140009e4d:	mov    r8d,0x2
   140009e53:	lea    rdx,[rbp-0x39]
   140009e57:	mov    rcx,rbx
   140009e5a:	call   0x14002ada0
   140009e5f:	cmp    eax,0x2
   140009e62:	jne    0x14000ab54
   140009e68:	mov    rax,QWORD PTR [rip+0x36671]        # 0x1400404e0
   140009e6f:	cmp    BYTE PTR [rax+0x7e],0x1
   140009e73:	jne    0x140009f5a
   140009e79:	movzx  eax,WORD PTR [rax+0xca]
   140009e80:	mov    WORD PTR [rbp-0x39],ax
   140009e84:	mov    r8d,0x2
   140009e8a:	lea    rdx,[rbp-0x39]
   140009e8e:	mov    rcx,rbx
   140009e91:	call   0x14002ada0
   140009e96:	cmp    eax,0x2
   140009e99:	jne    0x14000ab54
   140009e9f:	mov    rax,QWORD PTR [rip+0x3663a]        # 0x1400404e0
   140009ea6:	movzx  ecx,WORD PTR [rax+0xcc]
   140009ead:	mov    WORD PTR [rbp-0x39],cx
   140009eb1:	mov    r8d,0x2
   140009eb7:	lea    rdx,[rbp-0x39]
   140009ebb:	mov    rcx,rbx
   140009ebe:	call   0x14002ada0
   140009ec3:	cmp    eax,0x2
   140009ec6:	jne    0x14000ab54
   140009ecc:	mov    rax,QWORD PTR [rip+0x3660d]        # 0x1400404e0
   140009ed3:	movzx  ecx,WORD PTR [rax+0xce]
   140009eda:	mov    WORD PTR [rbp-0x39],cx
   140009ede:	mov    r8d,0x2
   140009ee4:	lea    rdx,[rbp-0x39]
   140009ee8:	mov    rcx,rbx
   140009eeb:	call   0x14002ada0
   140009ef0:	cmp    eax,0x2
   140009ef3:	jne    0x14000ab54
   140009ef9:	mov    rax,QWORD PTR [rip+0x365e0]        # 0x1400404e0
   140009f00:	movzx  ecx,WORD PTR [rax+0xd0]
   140009f07:	mov    WORD PTR [rbp-0x39],cx
   140009f0b:	mov    r8d,0x2
   140009f11:	lea    rdx,[rbp-0x39]
   140009f15:	mov    rcx,rbx
   140009f18:	call   0x14002ada0
   140009f1d:	cmp    eax,0x2
   140009f20:	jne    0x14000ab54
   140009f26:	mov    rax,QWORD PTR [rip+0x365b3]        # 0x1400404e0
   140009f2d:	movzx  ecx,WORD PTR [rax+0xd2]
   140009f34:	mov    WORD PTR [rbp-0x39],cx
   140009f38:	mov    r8d,0x2
   140009f3e:	lea    rdx,[rbp-0x39]
   140009f42:	mov    rcx,rbx
   140009f45:	call   0x14002ada0
   140009f4a:	cmp    eax,0x2
   140009f4d:	jne    0x14000ab54
   140009f53:	mov    rax,QWORD PTR [rip+0x36586]        # 0x1400404e0
   140009f5a:	movzx  eax,WORD PTR [rax+0xd4]
   140009f61:	mov    WORD PTR [rbp-0x39],ax
   140009f65:	mov    r8d,0x2
   140009f6b:	lea    rdx,[rbp-0x39]
   140009f6f:	mov    rcx,rbx
   140009f72:	call   0x14002ada0
   140009f77:	cmp    eax,0x2
   140009f7a:	jne    0x14000ab54
   140009f80:	mov    rdx,QWORD PTR [rip+0x36559]        # 0x1400404e0
   140009f87:	mov    ecx,DWORD PTR [rdx+0x34]
   140009f8a:	mov    r8d,DWORD PTR [rdi+0x34]
   140009f8e:	cmp    ecx,r8d
   140009f91:	jae    0x14000a077
   140009f97:	sub    r8d,ecx
   140009f9a:	mov    ecx,DWORD PTR [rdx+0xd8]
   140009fa0:	add    ecx,r8d
   140009fa3:	mov    DWORD PTR [rdi+0xd8],ecx
   140009fa9:	mov    ecx,DWORD PTR [rdx+0xdc]
   140009faf:	add    ecx,r8d
   140009fb2:	mov    DWORD PTR [rdi+0xdc],ecx
   140009fb8:	mov    ecx,DWORD PTR [rdx+0xe0]
   140009fbe:	add    ecx,r8d
   140009fc1:	mov    DWORD PTR [rdi+0xe0],ecx
   140009fc7:	mov    ecx,DWORD PTR [rdx+0xe4]
   140009fcd:	add    ecx,r8d
   140009fd0:	mov    DWORD PTR [rdi+0xe4],ecx
   140009fd6:	mov    ecx,DWORD PTR [rdx+0xe8]
   140009fdc:	add    ecx,r8d
   140009fdf:	mov    DWORD PTR [rdi+0xe8],ecx
   140009fe5:	mov    ecx,DWORD PTR [rdx+0xec]
   140009feb:	add    ecx,r8d
   140009fee:	mov    DWORD PTR [rdi+0xec],ecx
   140009ff4:	mov    ecx,DWORD PTR [rdx+0xf0]
   140009ffa:	add    ecx,r8d
   140009ffd:	mov    DWORD PTR [rdi+0xf0],ecx
   14000a003:	mov    ecx,DWORD PTR [rdx+0xf4]
   14000a009:	add    ecx,r8d
   14000a00c:	mov    DWORD PTR [rdi+0xf4],ecx
   14000a012:	mov    ecx,DWORD PTR [rdx+0xf8]
   14000a018:	add    ecx,r8d
   14000a01b:	mov    DWORD PTR [rdi+0xf8],ecx
   14000a021:	cmp    BYTE PTR [rdx+0x7e],0x1
   14000a025:	jne    0x14000a063
   14000a027:	mov    ecx,DWORD PTR [rdx+0xfc]
   14000a02d:	add    ecx,r8d
   14000a030:	mov    DWORD PTR [rdi+0xfc],ecx
   14000a036:	mov    ecx,DWORD PTR [rdx+0x100]
   14000a03c:	add    ecx,r8d
   14000a03f:	mov    DWORD PTR [rdi+0x100],ecx
   14000a045:	mov    ecx,DWORD PTR [rdx+0x104]
   14000a04b:	add    ecx,r8d
   14000a04e:	mov    DWORD PTR [rdi+0x104],ecx
   14000a054:	mov    ecx,DWORD PTR [rdx+0x108]
   14000a05a:	add    ecx,r8d
   14000a05d:	mov    DWORD PTR [rdi+0x108],ecx
   14000a063:	mov    ecx,DWORD PTR [rdx+0x10c]
   14000a069:	add    ecx,r8d
   14000a06c:	mov    DWORD PTR [rdi+0x10c],ecx
   14000a072:	jmp    0x14000a1f1
   14000a077:	mov    eax,DWORD PTR [rdx+0xd8]
   14000a07d:	jbe    0x14000a149
   14000a083:	sub    ecx,r8d
   14000a086:	sub    eax,ecx
   14000a088:	mov    DWORD PTR [rdi+0xd8],eax
   14000a08e:	mov    eax,DWORD PTR [rdx+0xdc]
   14000a094:	sub    eax,ecx
   14000a096:	mov    DWORD PTR [rdi+0xdc],eax
   14000a09c:	mov    eax,DWORD PTR [rdx+0xe0]
   14000a0a2:	sub    eax,ecx
   14000a0a4:	mov    DWORD PTR [rdi+0xe0],eax
   14000a0aa:	mov    eax,DWORD PTR [rdx+0xe4]
   14000a0b0:	sub    eax,ecx
   14000a0b2:	mov    DWORD PTR [rdi+0xe4],eax
   14000a0b8:	mov    eax,DWORD PTR [rdx+0xe8]
   14000a0be:	sub    eax,ecx
   14000a0c0:	mov    DWORD PTR [rdi+0xe8],eax
   14000a0c6:	mov    eax,DWORD PTR [rdx+0xec]
   14000a0cc:	sub    eax,ecx
   14000a0ce:	mov    DWORD PTR [rdi+0xec],eax
   14000a0d4:	mov    eax,DWORD PTR [rdx+0xf0]
   14000a0da:	sub    eax,ecx
   14000a0dc:	mov    DWORD PTR [rdi+0xf0],eax
   14000a0e2:	mov    eax,DWORD PTR [rdx+0xf4]
   14000a0e8:	sub    eax,ecx
   14000a0ea:	mov    DWORD PTR [rdi+0xf4],eax
   14000a0f0:	mov    eax,DWORD PTR [rdx+0xf8]
   14000a0f6:	sub    eax,ecx
   14000a0f8:	mov    DWORD PTR [rdi+0xf8],eax
   14000a0fe:	cmp    BYTE PTR [rdx+0x7e],0x1
   14000a102:	jne    0x14000a13c
   14000a104:	mov    eax,DWORD PTR [rdx+0xfc]
   14000a10a:	sub    eax,ecx
   14000a10c:	mov    DWORD PTR [rdi+0xfc],eax
   14000a112:	mov    eax,DWORD PTR [rdx+0x100]
   14000a118:	sub    eax,ecx
   14000a11a:	mov    DWORD PTR [rdi+0x100],eax
   14000a120:	mov    eax,DWORD PTR [rdx+0x104]
   14000a126:	sub    eax,ecx
   14000a128:	mov    DWORD PTR [rdi+0x104],eax
   14000a12e:	mov    eax,DWORD PTR [rdx+0x108]
   14000a134:	sub    eax,ecx
   14000a136:	mov    DWORD PTR [rdi+0x108],eax
   14000a13c:	mov    eax,DWORD PTR [rdx+0x10c]
   14000a142:	sub    eax,ecx
   14000a144:	jmp    0x14000a1eb
   14000a149:	mov    DWORD PTR [rdi+0xd8],eax
   14000a14f:	mov    eax,DWORD PTR [rdx+0xdc]
   14000a155:	mov    DWORD PTR [rdi+0xdc],eax
   14000a15b:	mov    eax,DWORD PTR [rdx+0xe0]
   14000a161:	mov    DWORD PTR [rdi+0xe0],eax
   14000a167:	mov    eax,DWORD PTR [rdx+0xe4]
   14000a16d:	mov    DWORD PTR [rdi+0xe4],eax
   14000a173:	mov    eax,DWORD PTR [rdx+0xe8]
   14000a179:	mov    DWORD PTR [rdi+0xe8],eax
   14000a17f:	mov    eax,DWORD PTR [rdx+0xec]
   14000a185:	mov    DWORD PTR [rdi+0xec],eax
   14000a18b:	mov    eax,DWORD PTR [rdx+0xf0]
   14000a191:	mov    DWORD PTR [rdi+0xf0],eax
   14000a197:	mov    eax,DWORD PTR [rdx+0xf4]
   14000a19d:	mov    DWORD PTR [rdi+0xf4],eax
   14000a1a3:	mov    eax,DWORD PTR [rdx+0xf8]
   14000a1a9:	mov    DWORD PTR [rdi+0xf8],eax
   14000a1af:	cmp    BYTE PTR [rdx+0x7e],0x1
   14000a1b3:	jne    0x14000a1e5
   14000a1b5:	mov    eax,DWORD PTR [rdx+0xfc]
   14000a1bb:	mov    DWORD PTR [rdi+0xfc],eax
   14000a1c1:	mov    eax,DWORD PTR [rdx+0x100]
   14000a1c7:	mov    DWORD PTR [rdi+0x100],eax
   14000a1cd:	mov    eax,DWORD PTR [rdx+0x104]
   14000a1d3:	mov    DWORD PTR [rdi+0x104],eax
   14000a1d9:	mov    eax,DWORD PTR [rdx+0x108]
   14000a1df:	mov    DWORD PTR [rdi+0x108],eax
   14000a1e5:	mov    eax,DWORD PTR [rdx+0x10c]
   14000a1eb:	mov    DWORD PTR [rdi+0x10c],eax
   14000a1f1:	mov    eax,DWORD PTR [rdi+0xd8]
   14000a1f7:	mov    DWORD PTR [rbp-0x31],eax
   14000a1fa:	mov    r8d,r15d
   14000a1fd:	lea    rdx,[rbp-0x31]
   14000a201:	mov    rcx,rbx
   14000a204:	call   0x14002ada0
   14000a209:	cmp    eax,r15d
   14000a20c:	jne    0x14000ab54
   14000a212:	mov    eax,DWORD PTR [rdi+0xdc]
   14000a218:	mov    DWORD PTR [rbp-0x31],eax
   14000a21b:	mov    r8d,r15d
   14000a21e:	lea    rdx,[rbp-0x31]
   14000a222:	mov    rcx,rbx
   14000a225:	call   0x14002ada0
   14000a22a:	cmp    eax,r15d
   14000a22d:	jne    0x14000ab54
   14000a233:	mov    eax,DWORD PTR [rdi+0xe0]
   14000a239:	mov    DWORD PTR [rbp-0x31],eax
   14000a23c:	mov    r8d,r15d
   14000a23f:	lea    rdx,[rbp-0x31]
   14000a243:	mov    rcx,rbx
   14000a246:	call   0x14002ada0
   14000a24b:	cmp    eax,r15d
   14000a24e:	jne    0x14000ab54
   14000a254:	mov    eax,DWORD PTR [rdi+0xe4]
   14000a25a:	mov    DWORD PTR [rbp-0x31],eax
   14000a25d:	mov    r8d,r15d
   14000a260:	lea    rdx,[rbp-0x31]
   14000a264:	mov    rcx,rbx
   14000a267:	call   0x14002ada0
   14000a26c:	cmp    eax,r15d
   14000a26f:	jne    0x14000ab54
   14000a275:	mov    eax,DWORD PTR [rdi+0xe8]
   14000a27b:	mov    DWORD PTR [rbp-0x31],eax
   14000a27e:	mov    r8d,r15d
   14000a281:	lea    rdx,[rbp-0x31]
   14000a285:	mov    rcx,rbx
   14000a288:	call   0x14002ada0
   14000a28d:	cmp    eax,r15d
   14000a290:	jne    0x14000ab54
   14000a296:	mov    eax,DWORD PTR [rdi+0xec]
   14000a29c:	mov    DWORD PTR [rbp-0x31],eax
   14000a29f:	mov    r8d,r15d
   14000a2a2:	lea    rdx,[rbp-0x31]
   14000a2a6:	mov    rcx,rbx
   14000a2a9:	call   0x14002ada0
   14000a2ae:	cmp    eax,r15d
   14000a2b1:	jne    0x14000ab54
   14000a2b7:	mov    eax,DWORD PTR [rdi+0xf0]
   14000a2bd:	mov    DWORD PTR [rbp-0x31],eax
   14000a2c0:	mov    r8d,r15d
   14000a2c3:	lea    rdx,[rbp-0x31]
   14000a2c7:	mov    rcx,rbx
   14000a2ca:	call   0x14002ada0
   14000a2cf:	cmp    eax,r15d
   14000a2d2:	jne    0x14000ab54
   14000a2d8:	mov    eax,DWORD PTR [rdi+0xf4]
   14000a2de:	mov    DWORD PTR [rbp-0x31],eax
   14000a2e1:	mov    r8d,r15d
   14000a2e4:	lea    rdx,[rbp-0x31]
   14000a2e8:	mov    rcx,rbx
   14000a2eb:	call   0x14002ada0
   14000a2f0:	cmp    eax,r15d
   14000a2f3:	jne    0x14000ab54
   14000a2f9:	mov    eax,DWORD PTR [rdi+0xf8]
   14000a2ff:	mov    DWORD PTR [rbp-0x31],eax
   14000a302:	mov    r8d,r15d
   14000a305:	lea    rdx,[rbp-0x31]
   14000a309:	mov    rcx,rbx
   14000a30c:	call   0x14002ada0
   14000a311:	cmp    eax,r15d
   14000a314:	jne    0x14000ab54
   14000a31a:	mov    rax,QWORD PTR [rip+0x361bf]        # 0x1400404e0
   14000a321:	cmp    BYTE PTR [rax+0x7e],0x1
   14000a325:	jne    0x14000a3af
   14000a32b:	mov    eax,DWORD PTR [rdi+0xfc]
   14000a331:	mov    DWORD PTR [rbp-0x31],eax
   14000a334:	mov    r8d,r15d
   14000a337:	lea    rdx,[rbp-0x31]
   14000a33b:	mov    rcx,rbx
   14000a33e:	call   0x14002ada0
   14000a343:	cmp    eax,r15d
   14000a346:	jne    0x14000ab54
   14000a34c:	mov    eax,DWORD PTR [rdi+0x100]
   14000a352:	mov    DWORD PTR [rbp-0x31],eax
   14000a355:	mov    r8d,r15d
   14000a358:	lea    rdx,[rbp-0x31]
   14000a35c:	mov    rcx,rbx
   14000a35f:	call   0x14002ada0
   14000a364:	cmp    eax,r15d
   14000a367:	jne    0x14000ab54
   14000a36d:	mov    eax,DWORD PTR [rdi+0x104]
   14000a373:	mov    DWORD PTR [rbp-0x31],eax
   14000a376:	mov    r8d,r15d
   14000a379:	lea    rdx,[rbp-0x31]
   14000a37d:	mov    rcx,rbx
   14000a380:	call   0x14002ada0
   14000a385:	cmp    eax,r15d
   14000a388:	jne    0x14000ab54
   14000a38e:	mov    eax,DWORD PTR [rdi+0x108]
   14000a394:	mov    DWORD PTR [rbp-0x31],eax
   14000a397:	mov    r8d,r15d
   14000a39a:	lea    rdx,[rbp-0x31]
   14000a39e:	mov    rcx,rbx
   14000a3a1:	call   0x14002ada0
   14000a3a6:	cmp    eax,r15d
   14000a3a9:	jne    0x14000ab54
   14000a3af:	mov    eax,DWORD PTR [rdi+0x10c]
   14000a3b5:	mov    DWORD PTR [rbp-0x31],eax
   14000a3b8:	mov    r8d,r15d
   14000a3bb:	lea    rdx,[rbp-0x31]
   14000a3bf:	mov    rcx,rbx
   14000a3c2:	call   0x14002ada0
   14000a3c7:	cmp    eax,r15d
   14000a3ca:	jne    0x14000ab54
   14000a3d0:	mov    r8d,esi
   14000a3d3:	xor    edx,edx
   14000a3d5:	mov    rcx,rbx
   14000a3d8:	call   0x14002ad10
   14000a3dd:	mov    DWORD PTR [rdi+0x38],eax
   14000a3e0:	mov    rcx,QWORD PTR [rip+0x37571]        # 0x140041958
   14000a3e7:	mov    QWORD PTR [rsp+0x20],r12
   14000a3ec:	lea    r9,[rbp-0x35]
   14000a3f0:	mov    r8d,0x100
   14000a3f6:	lea    rdx,[rip+0x39833]        # 0x140043c30
   14000a3fd:	mov    rcx,QWORD PTR [rcx]
   14000a400:	call   QWORD PTR [rip+0x24e02]        # 0x14002f208
   14000a406:	test   eax,eax
   14000a408:	jne    0x14000a443
   14000a40a:	call   QWORD PTR [rip+0x24d50]        # 0x14002f160
   14000a410:	cmp    eax,0x58
   14000a413:	jae    0x14000a427
   14000a415:	mov    eax,eax
   14000a417:	lea    rcx,[rip+0xffffffffffff5be2]        # 0x140000000
   14000a41e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000a425:	jmp    0x14000a42c
   14000a427:	mov    ecx,0x106
   14000a42c:	mov    DWORD PTR [rip+0x38c86],ecx        # 0x1400430b8
   14000a432:	mov    DWORD PTR [rip+0x3908c],0x2        # 0x1400434c8
   14000a43c:	mov    BYTE PTR [rip+0x38f7d],r12b        # 0x1400433c0
   14000a443:	mov    esi,DWORD PTR [rbp-0x35]
   14000a446:	mov    eax,0x100
   14000a44b:	cmp    esi,eax
   14000a44d:	jne    0x14000a471
   14000a44f:	mov    r8d,eax
   14000a452:	lea    rdx,[rip+0x397d7]        # 0x140043c30
   14000a459:	mov    rcx,rbx
   14000a45c:	call   0x14002ada0
   14000a461:	cmp    eax,0x100
   14000a466:	je     0x14000a3e0
   14000a46c:	jmp    0x14000ab54
   14000a471:	test   esi,esi
   14000a473:	jle    0x14000a48f
   14000a475:	mov    r8d,esi
   14000a478:	lea    rdx,[rip+0x397b1]        # 0x140043c30
   14000a47f:	mov    rcx,rbx
   14000a482:	call   0x14002ada0
   14000a487:	cmp    eax,esi
   14000a489:	jne    0x14000ab54
   14000a48f:	mov    rcx,QWORD PTR [rip+0x374c2]        # 0x140041958
   14000a496:	call   0x14002a9e0
   14000a49b:	mov    QWORD PTR [rip+0x374b6],r12        # 0x140041958
   14000a4a2:	lea    rcx,[rip+0x26ee7]        # 0x140031390
   14000a4a9:	call   QWORD PTR [rip+0x24fb1]        # 0x14002f460
   14000a4af:	mov    esi,0x1
   14000a4b4:	mov    r8d,esi
   14000a4b7:	xor    edx,edx
   14000a4b9:	mov    rcx,rbx
   14000a4bc:	call   0x14002ad10
   14000a4c1:	mov    DWORD PTR [rdi+0x28],eax
   14000a4c4:	mov    BYTE PTR [rbp-0x2d],r12b
   14000a4c8:	movzx  eax,WORD PTR [rdi+0x28]
   14000a4cc:	mov    ecx,0x1ff
   14000a4d1:	and    ax,cx
   14000a4d4:	je     0x14000a502
   14000a4d6:	sub    r14w,ax
   14000a4da:	je     0x14000a502
   14000a4dc:	nop    DWORD PTR [rax+0x0]
   14000a4e0:	mov    r8d,esi
   14000a4e3:	lea    rdx,[rbp-0x2d]
   14000a4e7:	mov    rcx,rbx
   14000a4ea:	call   0x14002ada0
   14000a4ef:	cmp    eax,esi
   14000a4f1:	jne    0x14000ab54
   14000a4f7:	mov    eax,0xffff
   14000a4fc:	add    r14w,ax
   14000a500:	jne    0x14000a4e0
   14000a502:	movzx  ecx,WORD PTR [rip+0x374ef]        # 0x1400419f8
   14000a509:	mov    WORD PTR [rdi+0x80],cx
   14000a510:	mov    rax,QWORD PTR [rip+0x35fc9]        # 0x1400404e0
   14000a517:	movsx  rdx,WORD PTR [rax+0x82]
   14000a51f:	mov    WORD PTR [rdi+0x82],dx
   14000a526:	mov    WORD PTR [rip+0x339d7],cx        # 0x14003df04
   14000a52d:	mov    WORD PTR [rip+0x339f4],dx        # 0x14003df28
   14000a534:	mov    ecx,edx
   14000a536:	call   QWORD PTR [rip+0x24edc]        # 0x14002f418
   14000a53c:	mov    r14,rax
   14000a53f:	test   rax,rax
   14000a542:	jne    0x14000a54d
   14000a544:	lea    eax,[r14-0x2]
   14000a548:	jmp    0x14000ab57
   14000a54d:	mov    r8d,esi
   14000a550:	xor    edx,edx
   14000a552:	mov    rcx,rbx
   14000a555:	call   0x14002ad10
   14000a55a:	mov    DWORD PTR [rdi+0x28],eax
   14000a55d:	movzx  esi,r12w
   14000a561:	cmp    r12w,WORD PTR [rip+0x3399b]        # 0x14003df04
   14000a569:	jae    0x14000a5e3
   14000a56b:	movzx  edx,WORD PTR [rip+0x339b6]        # 0x14003df28
   14000a572:	nop    DWORD PTR [rax+0x0]
   14000a576:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a580:	movsx  r8d,dx
   14000a584:	mov    QWORD PTR [rsp+0x20],r12
   14000a589:	lea    r9,[rbp-0x35]
   14000a58d:	mov    rdx,r14
   14000a590:	mov    rcx,QWORD PTR [r13+0x0]
   14000a594:	call   QWORD PTR [rip+0x24c6e]        # 0x14002f208
   14000a59a:	test   eax,eax
   14000a59c:	jne    0x14000a5a9
   14000a59e:	lea    rcx,[rbp-0x35]
   14000a5a2:	call   0x14002acc0
   14000a5a7:	jmp    0x14000a5ac
   14000a5a9:	mov    eax,DWORD PTR [rbp-0x35]
   14000a5ac:	movsx  r8d,WORD PTR [rip+0x33974]        # 0x14003df28
   14000a5b4:	cmp    eax,r8d
   14000a5b7:	jne    0x14000ab54
   14000a5bd:	mov    rdx,r14
   14000a5c0:	mov    rcx,rbx
   14000a5c3:	call   0x14002ada0
   14000a5c8:	movsx  edx,WORD PTR [rip+0x33959]        # 0x14003df28
   14000a5cf:	cmp    eax,edx
   14000a5d1:	jne    0x14000ab54
   14000a5d7:	inc    si
   14000a5da:	cmp    si,WORD PTR [rip+0x33923]        # 0x14003df04
   14000a5e1:	jb     0x14000a580
   14000a5e3:	mov    rcx,r14
   14000a5e6:	call   QWORD PTR [rip+0x24e94]        # 0x14002f480
   14000a5ec:	cmp    WORD PTR [rip+0x37330],r12w        # 0x140041924
   14000a5f4:	je     0x14000a6d4
   14000a5fa:	mov    r14d,0x1
   14000a600:	mov    r8d,r14d
   14000a603:	xor    edx,edx
   14000a605:	mov    rcx,rbx
   14000a608:	call   0x14002ad10
   14000a60d:	mov    DWORD PTR [rdi+0x30],eax
   14000a610:	mov    rcx,QWORD PTR [rip+0x360e1]        # 0x1400406f8
   14000a617:	mov    QWORD PTR [rsp+0x20],r12
   14000a61c:	lea    r9,[rbp-0x35]
   14000a620:	mov    r8d,0x100
   14000a626:	lea    rdx,[rip+0x39603]        # 0x140043c30
   14000a62d:	mov    rcx,QWORD PTR [rcx]
   14000a630:	call   QWORD PTR [rip+0x24bd2]        # 0x14002f208
   14000a636:	test   eax,eax
   14000a638:	jne    0x14000a673
   14000a63a:	call   QWORD PTR [rip+0x24b20]        # 0x14002f160
   14000a640:	cmp    eax,0x58
   14000a643:	jae    0x14000a657
   14000a645:	mov    eax,eax
   14000a647:	lea    rcx,[rip+0xffffffffffff59b2]        # 0x140000000
   14000a64e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000a655:	jmp    0x14000a65c
   14000a657:	mov    ecx,0x106
   14000a65c:	mov    DWORD PTR [rip+0x38a56],ecx        # 0x1400430b8
   14000a662:	mov    DWORD PTR [rip+0x38e5c],0x2        # 0x1400434c8
   14000a66c:	mov    BYTE PTR [rip+0x38d4d],r12b        # 0x1400433c0
   14000a673:	mov    esi,DWORD PTR [rbp-0x35]
   14000a676:	mov    eax,0x100
   14000a67b:	cmp    esi,eax
   14000a67d:	jne    0x14000a6a1
   14000a67f:	mov    r8d,eax
   14000a682:	lea    rdx,[rip+0x395a7]        # 0x140043c30
   14000a689:	mov    rcx,rbx
   14000a68c:	call   0x14002ada0
   14000a691:	cmp    eax,0x100
   14000a696:	je     0x14000a610
   14000a69c:	jmp    0x14000ab54
   14000a6a1:	test   esi,esi
   14000a6a3:	jle    0x14000a6bf
   14000a6a5:	mov    r8d,esi
   14000a6a8:	lea    rdx,[rip+0x39581]        # 0x140043c30
   14000a6af:	mov    rcx,rbx
   14000a6b2:	call   0x14002ada0
   14000a6b7:	cmp    eax,esi
   14000a6b9:	jne    0x14000ab54
   14000a6bf:	mov    rcx,QWORD PTR [rip+0x36032]        # 0x1400406f8
   14000a6c6:	call   0x14002a9e0
   14000a6cb:	mov    QWORD PTR [rip+0x36026],r12        # 0x1400406f8
   14000a6d2:	jmp    0x14000a6f2
   14000a6d4:	mov    rcx,QWORD PTR [rip+0x3601d]        # 0x1400406f8
   14000a6db:	test   rcx,rcx
   14000a6de:	je     0x14000a6ec
   14000a6e0:	call   0x14002a9e0
   14000a6e5:	mov    QWORD PTR [rip+0x3600c],r12        # 0x1400406f8
   14000a6ec:	mov    r14d,0x1
   14000a6f2:	lea    rcx,[rip+0x26ca7]        # 0x1400313a0
   14000a6f9:	call   QWORD PTR [rip+0x24d61]        # 0x14002f460
   14000a6ff:	xor    r8d,r8d
   14000a702:	lea    edx,[r8+0x1a]
   14000a706:	mov    rcx,rbx
   14000a709:	call   0x14002ad10
   14000a70e:	cmp    eax,0xffffffff
   14000a711:	je     0x14000ab54
   14000a717:	mov    eax,DWORD PTR [rdi+0x1c]
   14000a71a:	mov    DWORD PTR [rbp-0x31],eax
   14000a71d:	mov    r8d,r15d
   14000a720:	lea    rdx,[rbp-0x31]
   14000a724:	mov    rcx,rbx
   14000a727:	call   0x14002ada0
   14000a72c:	cmp    eax,r15d
   14000a72f:	jne    0x14000ab54
   14000a735:	mov    eax,DWORD PTR [rdi+0x20]
   14000a738:	mov    DWORD PTR [rbp-0x31],eax
   14000a73b:	mov    r8d,r15d
   14000a73e:	lea    rdx,[rbp-0x31]
   14000a742:	mov    rcx,rbx
   14000a745:	call   0x14002ada0
   14000a74a:	cmp    eax,r15d
   14000a74d:	jne    0x14000ab54
   14000a753:	mov    eax,DWORD PTR [rdi+0x24]
   14000a756:	mov    DWORD PTR [rbp-0x31],eax
   14000a759:	mov    r8d,r15d
   14000a75c:	lea    rdx,[rbp-0x31]
   14000a760:	mov    rcx,rbx
   14000a763:	call   0x14002ada0
   14000a768:	cmp    eax,r15d
   14000a76b:	jne    0x14000ab54
   14000a771:	mov    eax,DWORD PTR [rdi+0x28]
   14000a774:	mov    DWORD PTR [rbp-0x31],eax
   14000a777:	mov    r8d,r15d
   14000a77a:	lea    rdx,[rbp-0x31]
   14000a77e:	mov    rcx,rbx
   14000a781:	call   0x14002ada0
   14000a786:	cmp    eax,r15d
   14000a789:	jne    0x14000ab54
   14000a78f:	mov    eax,DWORD PTR [rdi+0x2c]
   14000a792:	mov    DWORD PTR [rbp-0x31],eax
   14000a795:	mov    r8d,r15d
   14000a798:	lea    rdx,[rbp-0x31]
   14000a79c:	mov    rcx,rbx
   14000a79f:	call   0x14002ada0
   14000a7a4:	cmp    eax,r15d
   14000a7a7:	jne    0x14000ab54
   14000a7ad:	mov    eax,DWORD PTR [rdi+0x30]
   14000a7b0:	mov    DWORD PTR [rbp-0x31],eax
   14000a7b3:	mov    r8d,r15d
   14000a7b6:	lea    rdx,[rbp-0x31]
   14000a7ba:	mov    rcx,rbx
   14000a7bd:	call   0x14002ada0
   14000a7c2:	cmp    eax,r15d
   14000a7c5:	jne    0x14000ab54
   14000a7cb:	mov    eax,DWORD PTR [rdi+0x34]
   14000a7ce:	mov    DWORD PTR [rbp-0x31],eax
   14000a7d1:	mov    r8d,r15d
   14000a7d4:	lea    rdx,[rbp-0x31]
   14000a7d8:	mov    rcx,rbx
   14000a7db:	call   0x14002ada0
   14000a7e0:	cmp    eax,r15d
   14000a7e3:	jne    0x14000ab54
   14000a7e9:	mov    eax,DWORD PTR [rdi+0x38]
   14000a7ec:	mov    DWORD PTR [rbp-0x31],eax
   14000a7ef:	mov    r8d,r15d
   14000a7f2:	lea    rdx,[rbp-0x31]
   14000a7f6:	mov    rcx,rbx
   14000a7f9:	call   0x14002ada0
   14000a7fe:	cmp    eax,r15d
   14000a801:	jne    0x14000ab54
   14000a807:	mov    r8d,r14d
   14000a80a:	mov    edx,0x2
   14000a80f:	mov    rcx,rbx
   14000a812:	call   0x14002ad10
   14000a817:	cmp    eax,0xffffffff
   14000a81a:	je     0x14000ab54
   14000a820:	mov    eax,DWORD PTR [rdi+0x40]
   14000a823:	mov    DWORD PTR [rbp-0x31],eax
   14000a826:	mov    r8d,r15d
   14000a829:	lea    rdx,[rbp-0x31]
   14000a82d:	mov    rcx,rbx
   14000a830:	call   0x14002ada0
   14000a835:	cmp    eax,r15d
   14000a838:	jne    0x14000ab54
   14000a83e:	mov    r8d,r14d
   14000a841:	mov    edx,0x2
   14000a846:	mov    rcx,rbx
   14000a849:	call   0x14002ad10
   14000a84e:	cmp    eax,0xffffffff
   14000a851:	je     0x14000ab54
   14000a857:	mov    eax,DWORD PTR [rdi+0x48]
   14000a85a:	mov    DWORD PTR [rbp-0x31],eax
   14000a85d:	mov    r8d,r15d
   14000a860:	lea    rdx,[rbp-0x31]
   14000a864:	mov    rcx,rbx
   14000a867:	call   0x14002ada0
   14000a86c:	cmp    eax,r15d
   14000a86f:	jne    0x14000ab54
   14000a875:	mov    r8d,r14d
   14000a878:	mov    edx,r15d
   14000a87b:	mov    rcx,rbx
   14000a87e:	call   0x14002ad10
   14000a883:	cmp    eax,0xffffffff
   14000a886:	je     0x14000ab54
   14000a88c:	mov    eax,DWORD PTR [rdi+0x50]
   14000a88f:	mov    DWORD PTR [rbp-0x31],eax
   14000a892:	mov    r8d,r15d
   14000a895:	lea    rdx,[rbp-0x31]
   14000a899:	mov    rcx,rbx
   14000a89c:	call   0x14002ada0
   14000a8a1:	cmp    eax,r15d
   14000a8a4:	jne    0x14000ab54
   14000a8aa:	mov    eax,DWORD PTR [rdi+0x54]
   14000a8ad:	mov    DWORD PTR [rbp-0x31],eax
   14000a8b0:	mov    r8d,r15d
   14000a8b3:	lea    rdx,[rbp-0x31]
   14000a8b7:	mov    rcx,rbx
   14000a8ba:	call   0x14002ada0
   14000a8bf:	cmp    eax,r15d
   14000a8c2:	jne    0x14000ab54
   14000a8c8:	mov    eax,DWORD PTR [rdi+0x58]
   14000a8cb:	mov    DWORD PTR [rbp-0x31],eax
   14000a8ce:	mov    r8d,r15d
   14000a8d1:	lea    rdx,[rbp-0x31]
   14000a8d5:	mov    rcx,rbx
   14000a8d8:	call   0x14002ada0
   14000a8dd:	cmp    eax,r15d
   14000a8e0:	jne    0x14000ab54
   14000a8e6:	mov    eax,DWORD PTR [rdi+0x5c]
   14000a8e9:	mov    DWORD PTR [rbp-0x31],eax
   14000a8ec:	mov    r8d,r15d
   14000a8ef:	lea    rdx,[rbp-0x31]
   14000a8f3:	mov    rcx,rbx
   14000a8f6:	call   0x14002ada0
   14000a8fb:	cmp    eax,r15d
   14000a8fe:	jne    0x14000ab54
   14000a904:	mov    eax,DWORD PTR [rdi+0x60]
   14000a907:	mov    DWORD PTR [rbp-0x31],eax
   14000a90a:	mov    r8d,r15d
   14000a90d:	lea    rdx,[rbp-0x31]
   14000a911:	mov    rcx,rbx
   14000a914:	call   0x14002ada0
   14000a919:	cmp    eax,r15d
   14000a91c:	jne    0x14000ab54
   14000a922:	mov    r8d,r14d
   14000a925:	mov    edx,r15d
   14000a928:	mov    rcx,rbx
   14000a92b:	call   0x14002ad10
   14000a930:	cmp    eax,0xffffffff
   14000a933:	je     0x14000ab54
   14000a939:	mov    eax,DWORD PTR [rdi+0x68]
   14000a93c:	mov    DWORD PTR [rbp-0x31],eax
   14000a93f:	mov    r8d,r15d
   14000a942:	lea    rdx,[rbp-0x31]
   14000a946:	mov    rcx,rbx
   14000a949:	call   0x14002ada0
   14000a94e:	cmp    eax,r15d
   14000a951:	jne    0x14000ab54
   14000a957:	mov    r8d,r14d
   14000a95a:	mov    edx,0x2
   14000a95f:	mov    rcx,rbx
   14000a962:	call   0x14002ad10
   14000a967:	cmp    eax,0xffffffff
   14000a96a:	je     0x14000ab54
   14000a970:	mov    eax,DWORD PTR [rdi+0x70]
   14000a973:	mov    DWORD PTR [rbp-0x31],eax
   14000a976:	mov    r8d,r15d
   14000a979:	lea    rdx,[rbp-0x31]
   14000a97d:	mov    rcx,rbx
   14000a980:	call   0x14002ada0
   14000a985:	cmp    eax,r15d
   14000a988:	jne    0x14000ab54
   14000a98e:	mov    r8d,r14d
   14000a991:	mov    edx,0x2
   14000a996:	mov    rcx,rbx
   14000a999:	call   0x14002ad10
   14000a99e:	cmp    eax,0xffffffff
   14000a9a1:	je     0x14000ab54
   14000a9a7:	mov    eax,DWORD PTR [rdi+0x78]
   14000a9aa:	mov    DWORD PTR [rbp-0x31],eax
   14000a9ad:	mov    r8d,r15d
   14000a9b0:	lea    rdx,[rbp-0x31]
   14000a9b4:	mov    rcx,rbx
   14000a9b7:	call   0x14002ada0
   14000a9bc:	cmp    eax,r15d
   14000a9bf:	jne    0x14000ab54
   14000a9c5:	xor    r8d,r8d
   14000a9c8:	mov    edx,DWORD PTR [rdi+0x24]
   14000a9cb:	mov    rcx,rbx
   14000a9ce:	call   0x14002ad10
   14000a9d3:	cmp    eax,0xffffffff
   14000a9d6:	je     0x14000ab54
   14000a9dc:	mov    r8d,r14d
   14000a9df:	mov    edx,r15d
   14000a9e2:	mov    rcx,rbx
   14000a9e5:	call   0x14002ad10
   14000a9ea:	cmp    eax,0xffffffff
   14000a9ed:	je     0x14000ab54
   14000a9f3:	mov    eax,DWORD PTR [rdi+0x84]
   14000a9f9:	mov    DWORD PTR [rbp-0x31],eax
   14000a9fc:	mov    r8d,r15d
   14000a9ff:	lea    rdx,[rbp-0x31]
   14000aa03:	mov    rcx,rbx
   14000aa06:	call   0x14002ada0
   14000aa0b:	cmp    eax,r15d
   14000aa0e:	jne    0x14000ab54
   14000aa14:	mov    eax,DWORD PTR [rdi+0x88]
   14000aa1a:	mov    DWORD PTR [rbp-0x31],eax
   14000aa1d:	mov    r8d,r15d
   14000aa20:	lea    rdx,[rbp-0x31]
   14000aa24:	mov    rcx,rbx
   14000aa27:	call   0x14002ada0
   14000aa2c:	cmp    eax,r15d
   14000aa2f:	jne    0x14000ab54
   14000aa35:	mov    r8d,r14d
   14000aa38:	mov    edx,0x2
   14000aa3d:	mov    rcx,rbx
   14000aa40:	call   0x14002ad10
   14000aa45:	cmp    eax,0xffffffff
   14000aa48:	je     0x14000ab54
   14000aa4e:	mov    eax,DWORD PTR [rdi+0x90]
   14000aa54:	mov    DWORD PTR [rbp-0x31],eax
   14000aa57:	mov    r8d,r15d
   14000aa5a:	lea    rdx,[rbp-0x31]
   14000aa5e:	mov    rcx,rbx
   14000aa61:	call   0x14002ada0
   14000aa66:	cmp    eax,r15d
   14000aa69:	jne    0x14000ab54
   14000aa6f:	mov    r8d,r14d
   14000aa72:	mov    edx,r15d
   14000aa75:	mov    rcx,rbx
   14000aa78:	call   0x14002ad10
   14000aa7d:	cmp    eax,0xffffffff
   14000aa80:	je     0x14000ab54
   14000aa86:	mov    eax,DWORD PTR [rdi+0x98]
   14000aa8c:	mov    DWORD PTR [rbp-0x31],eax
   14000aa8f:	mov    r8d,r15d
   14000aa92:	lea    rdx,[rbp-0x31]
   14000aa96:	mov    rcx,rbx
   14000aa99:	call   0x14002ada0
   14000aa9e:	cmp    eax,r15d
   14000aaa1:	jne    0x14000ab54
   14000aaa7:	mov    r8d,r14d
   14000aaaa:	mov    edx,0x2
   14000aaaf:	mov    rcx,rbx
   14000aab2:	call   0x14002ad10
   14000aab7:	cmp    eax,0xffffffff
   14000aaba:	je     0x14000ab54
   14000aac0:	mov    eax,DWORD PTR [rdi+0xa0]
   14000aac6:	mov    DWORD PTR [rbp-0x31],eax
   14000aac9:	mov    r8d,r15d
   14000aacc:	lea    rdx,[rbp-0x31]
   14000aad0:	mov    rcx,rbx
   14000aad3:	call   0x14002ada0
   14000aad8:	cmp    eax,r15d
   14000aadb:	jne    0x14000ab54
   14000aadd:	mov    eax,DWORD PTR [rdi+0xa4]
   14000aae3:	mov    DWORD PTR [rbp-0x31],eax
   14000aae6:	mov    r8d,r15d
   14000aae9:	lea    rdx,[rbp-0x31]
   14000aaed:	mov    rcx,rbx
   14000aaf0:	call   0x14002ada0
   14000aaf5:	cmp    eax,r15d
   14000aaf8:	jne    0x14000ab54
   14000aafa:	xor    r8d,r8d
   14000aafd:	mov    edx,DWORD PTR [rdi+0x2c]
   14000ab00:	mov    rcx,rbx
   14000ab03:	call   0x14002ad10
   14000ab08:	cmp    eax,0xffffffff
   14000ab0b:	je     0x14000ab54
   14000ab0d:	mov    r8d,r14d
   14000ab10:	mov    edx,r15d
   14000ab13:	mov    rcx,rbx
   14000ab16:	call   0x14002ad10
   14000ab1b:	cmp    eax,0xffffffff
   14000ab1e:	je     0x14000ab54
   14000ab20:	mov    eax,DWORD PTR [rdi+0xac]
   14000ab26:	mov    DWORD PTR [rbp-0x31],eax
   14000ab29:	mov    r8d,r15d
   14000ab2c:	lea    rdx,[rbp-0x31]
   14000ab30:	mov    rcx,rbx
   14000ab33:	call   0x14002ada0
   14000ab38:	cmp    eax,r15d
   14000ab3b:	jne    0x14000ab54
   14000ab3d:	mov    rcx,rdi
   14000ab40:	call   QWORD PTR [rip+0x2493a]        # 0x14002f480
   14000ab46:	mov    rcx,r13
   14000ab49:	call   0x14002a9e0
   14000ab4e:	movzx  eax,r12w
   14000ab52:	jmp    0x14000ab57
   14000ab54:	or     eax,0xffffffff
   14000ab57:	mov    rcx,QWORD PTR [rbp+0x27]
   14000ab5b:	xor    rcx,rsp
   14000ab5e:	call   0x14002c960
   14000ab63:	lea    r11,[rsp+0xa0]
   14000ab6b:	mov    rbx,QWORD PTR [r11+0x38]
   14000ab6f:	mov    rsi,QWORD PTR [r11+0x40]
   14000ab73:	mov    rdi,QWORD PTR [r11+0x48]
   14000ab77:	mov    rsp,r11
   14000ab7a:	pop    r15
   14000ab7c:	pop    r14
   14000ab7e:	pop    r13
   14000ab80:	pop    r12
   14000ab82:	pop    rbp
   14000ab83:	ret    
   14000ab84:	int3   
   14000ab85:	int3   
   14000ab86:	int3   
   14000ab87:	int3   
   14000ab88:	int3   
   14000ab89:	int3   
   14000ab8a:	int3   
   14000ab8b:	int3   
   14000ab8c:	int3   
   14000ab8d:	int3   
   14000ab8e:	int3   
   14000ab8f:	int3   
   14000ab90:	mov    QWORD PTR [rsp+0x10],rbx
   14000ab95:	mov    QWORD PTR [rsp+0x18],rbp
   14000ab9a:	mov    QWORD PTR [rsp+0x20],rsi
   14000ab9f:	push   rdi
   14000aba0:	push   r13
   14000aba2:	push   r14
   14000aba4:	sub    rsp,0x20
   14000aba8:	mov    eax,0x3fff
   14000abad:	xor    r13d,r13d
   14000abb0:	mov    rbp,rdx
   14000abb3:	and    r9w,ax
   14000abb7:	mov    r14,rcx
   14000abba:	lea    eax,[r13+0x1]
   14000abbe:	movsx  r8d,r9w
   14000abc2:	je     0x14000ac0d
   14000abc4:	dec    r8d
   14000abc7:	je     0x14000ac02
   14000abc9:	dec    r8d
   14000abcc:	je     0x14000abef
   14000abce:	mov    rax,QWORD PTR [rip+0x36b43]        # 0x140041718
   14000abd5:	movsx  rcx,r9w
   14000abd9:	mov    edi,DWORD PTR [rax+rcx*8-0x18]
   14000abdd:	mov    esi,DWORD PTR [rax+rcx*8-0x14]
   14000abe1:	mov    DWORD PTR [rip+0x33311],edi        # 0x14003def8
   14000abe7:	mov    DWORD PTR [rip+0x3330f],esi        # 0x14003defc
   14000abed:	jmp    0x14000ac1a
   14000abef:	or     edi,0xffffffff
   14000abf2:	mov    DWORD PTR [rip+0x33300],edi        # 0x14003def8
   14000abf8:	mov    esi,edi
   14000abfa:	mov    DWORD PTR [rip+0x332fc],edi        # 0x14003defc
   14000ac00:	jmp    0x14000ac1a
   14000ac02:	mov    edi,eax
   14000ac04:	mov    QWORD PTR [rip+0x332ed],rax        # 0x14003def8
   14000ac0b:	jmp    0x14000ac17
   14000ac0d:	mov    edi,r13d
   14000ac10:	mov    QWORD PTR [rip+0x332e1],r13        # 0x14003def8
   14000ac17:	mov    esi,r13d
   14000ac1a:	movzx  ecx,WORD PTR [rsp+0x60]
   14000ac1f:	call   0x14000ae20
   14000ac24:	mov    r9,r14
   14000ac27:	mov    ebx,r13d
   14000ac2a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ac30:	cmp    BYTE PTR [r9],r13b
   14000ac33:	jne    0x14000ac3b
   14000ac35:	cmp    BYTE PTR [r9+0x1],r13b
   14000ac39:	je     0x14000ac43
   14000ac3b:	add    r9,0x2
   14000ac3f:	inc    ebx
   14000ac41:	jmp    0x14000ac30
   14000ac43:	add    bx,bx
   14000ac46:	mov    QWORD PTR [rsp+0x40],r15
   14000ac4b:	movzx  r11d,r13w
   14000ac4f:	movzx  r9d,r13w
   14000ac53:	movzx  r10d,r13w
   14000ac57:	cmp    r13w,bx
   14000ac5b:	jge    0x14000adcd
   14000ac61:	mov    rcx,QWORD PTR [rip+0x33288]        # 0x14003def0
   14000ac68:	mov    r15d,DWORD PTR [rip+0x33285]        # 0x14003def4
   14000ac6f:	mov    edx,0xc4
   14000ac74:	cmp    r9w,dx
   14000ac78:	jge    0x14000ae16
   14000ac7e:	movsx  rax,r11w
   14000ac82:	movzx  r8d,WORD PTR [rax+r14*1]
   14000ac87:	movsx  eax,r11w
   14000ac8b:	cdq    
   14000ac8c:	sub    eax,edx
   14000ac8e:	mov    edx,0x1
   14000ac93:	sar    eax,1
   14000ac95:	cmp    r11w,0x40
   14000ac9a:	jge    0x14000ace3
   14000ac9c:	cmp    ax,0x20
   14000aca0:	jle    0x14000aca7
   14000aca2:	mov    edx,r13d
   14000aca5:	jmp    0x14000acb7
   14000aca7:	cmp    r13w,ax
   14000acab:	jge    0x14000acb7
   14000acad:	movzx  eax,ax
   14000acb0:	add    edx,edx
   14000acb2:	dec    rax
   14000acb5:	jne    0x14000acb0
   14000acb7:	test   edx,edi
   14000acb9:	je     0x14000ad2f
   14000acbb:	movzx  eax,r8w
   14000acbf:	shr    ax,0x8
   14000acc3:	cmp    ax,0xf
   14000acc7:	ja     0x14000ad2f
   14000acc9:	mov    edx,0xff00
   14000acce:	test   dx,r8w
   14000acd2:	jne    0x14000ad0b
   14000acd4:	lea    eax,[r8-0x61]
   14000acd8:	cmp    al,0x19
   14000acda:	ja     0x14000ad2f
   14000acdc:	mov    eax,0xdf
   14000ace1:	jmp    0x14000ad2b
   14000ace3:	sub    ax,0x20
   14000ace7:	cmp    ax,0x20
   14000aceb:	jle    0x14000acf4
   14000aced:	mov    edx,r13d
   14000acf0:	test   edx,esi
   14000acf2:	jmp    0x14000acb9
   14000acf4:	cmp    r13w,ax
   14000acf8:	jge    0x14000ad07
   14000acfa:	movzx  eax,ax
   14000acfd:	nop    DWORD PTR [rax]
   14000ad00:	add    edx,edx
   14000ad02:	dec    rax
   14000ad05:	jne    0x14000ad00
   14000ad07:	test   edx,esi
   14000ad09:	jmp    0x14000acb9
   14000ad0b:	dec    al
   14000ad0d:	add    al,al
   14000ad0f:	movzx  edx,al
   14000ad12:	lea    rax,[rip+0x26527]        # 0x140031240
   14000ad19:	cmp    r8b,BYTE PTR [rdx+rax*1]
   14000ad1d:	jb     0x14000ad2f
   14000ad1f:	cmp    r8b,BYTE PTR [rdx+rax*1+0x1]
   14000ad24:	ja     0x14000ad2f
   14000ad26:	mov    eax,0xfffe
   14000ad2b:	and    r8w,ax
   14000ad2f:	movsx  eax,r10w
   14000ad33:	cdq    
   14000ad34:	sub    eax,edx
   14000ad36:	mov    edx,0x1
   14000ad3b:	sar    eax,1
   14000ad3d:	cmp    r10w,0x40
   14000ad42:	jge    0x14000ad6b
   14000ad44:	cmp    ax,0x20
   14000ad48:	jle    0x14000ad51
   14000ad4a:	mov    edx,r13d
   14000ad4d:	test   edx,ecx
   14000ad4f:	jmp    0x14000ad8d
   14000ad51:	cmp    r13w,ax
   14000ad55:	jge    0x14000ad67
   14000ad57:	movzx  eax,ax
   14000ad5a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ad60:	add    edx,edx
   14000ad62:	dec    rax
   14000ad65:	jne    0x14000ad60
   14000ad67:	test   edx,ecx
   14000ad69:	jmp    0x14000ad8d
   14000ad6b:	sub    ax,0x20
   14000ad6f:	cmp    ax,0x20
   14000ad73:	jle    0x14000ad7a
   14000ad75:	mov    edx,r13d
   14000ad78:	jmp    0x14000ad8a
   14000ad7a:	cmp    r13w,ax
   14000ad7e:	jge    0x14000ad8a
   14000ad80:	movzx  eax,ax
   14000ad83:	add    edx,edx
   14000ad85:	dec    rax
   14000ad88:	jne    0x14000ad83
   14000ad8a:	test   edx,r15d
   14000ad8d:	je     0x14000ada6
   14000ad8f:	movsx  rax,r9w
   14000ad93:	mov    edx,0x5f
   14000ad98:	add    r9w,0x2
   14000ad9d:	mov    WORD PTR [rax+rbp*1],dx
   14000ada1:	add    r10w,0x2
   14000ada6:	movsx  rax,r9w
   14000adaa:	add    r11w,0x2
   14000adaf:	add    r10w,0x2
   14000adb4:	add    r9w,0x2
   14000adb9:	mov    edx,0xc4
   14000adbe:	mov    WORD PTR [rax+rbp*1],r8w
   14000adc3:	cmp    r11w,bx
   14000adc7:	jl     0x14000ac74
   14000adcd:	mov    ecx,0x8000
   14000add2:	test   WORD PTR [rsp+0x60],cx
   14000add7:	je     0x14000adeb
   14000add9:	movsx  rcx,r9w
   14000addd:	mov    edx,0x2e
   14000ade2:	add    r9w,0x2
   14000ade7:	mov    WORD PTR [rcx+rbp*1],dx
   14000adeb:	movsx  rcx,r9w
   14000adef:	movzx  eax,r13w
   14000adf3:	mov    WORD PTR [rcx+rbp*1],r13w
   14000adf8:	mov    r15,QWORD PTR [rsp+0x40]
   14000adfd:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ae02:	mov    rbp,QWORD PTR [rsp+0x50]
   14000ae07:	mov    rsi,QWORD PTR [rsp+0x58]
   14000ae0c:	add    rsp,0x20
   14000ae10:	pop    r14
   14000ae12:	pop    r13
   14000ae14:	pop    rdi
   14000ae15:	ret    
   14000ae16:	mov    eax,0x1
   14000ae1b:	jmp    0x14000adf8
   14000ae1d:	int3   
   14000ae1e:	int3   
   14000ae1f:	int3   
   14000ae20:	cmp    cx,0x40
   14000ae24:	jge    0x14000ae91
   14000ae26:	xor    eax,eax
   14000ae28:	cmp    cx,0x20
   14000ae2c:	jge    0x14000ae5c
   14000ae2e:	test   cx,cx
   14000ae31:	je     0x14000ae54
   14000ae33:	lea    edx,[rax+0x1]
   14000ae36:	cmp    ax,cx
   14000ae39:	jge    0x14000ae47
   14000ae3b:	movzx  r8d,cx
   14000ae3f:	nop
   14000ae40:	add    edx,edx
   14000ae42:	dec    r8
   14000ae45:	jne    0x14000ae40
   14000ae47:	mov    DWORD PTR [rip+0x330a3],edx        # 0x14003def0
   14000ae4d:	mov    DWORD PTR [rip+0x330a1],eax        # 0x14003def4
   14000ae53:	ret    
   14000ae54:	mov    QWORD PTR [rip+0x33095],rax        # 0x14003def0
   14000ae5b:	ret    
   14000ae5c:	sub    cx,0x20
   14000ae60:	mov    DWORD PTR [rip+0x3308a],eax        # 0x14003def0
   14000ae66:	mov    edx,0x1
   14000ae6b:	cmp    cx,0x20
   14000ae6f:	jle    0x14000ae7a
   14000ae71:	mov    edx,eax
   14000ae73:	mov    DWORD PTR [rip+0x3307b],eax        # 0x14003def4
   14000ae79:	ret    
   14000ae7a:	cmp    ax,cx
   14000ae7d:	jge    0x14000ae8a
   14000ae7f:	movzx  r8d,cx
   14000ae83:	add    edx,edx
   14000ae85:	dec    r8
   14000ae88:	jne    0x14000ae83
   14000ae8a:	mov    DWORD PTR [rip+0x33064],edx        # 0x14003def4
   14000ae90:	ret    
   14000ae91:	mov    rax,QWORD PTR [rip+0x36880]        # 0x140041718
   14000ae98:	movsx  rcx,cx
   14000ae9c:	lea    rdx,[rax+rcx*8]
   14000aea0:	mov    eax,DWORD PTR [rdx-0x200]
   14000aea6:	mov    DWORD PTR [rip+0x33044],eax        # 0x14003def0
   14000aeac:	mov    eax,DWORD PTR [rdx-0x1fc]
   14000aeb2:	mov    DWORD PTR [rip+0x3303c],eax        # 0x14003def4
   14000aeb8:	xor    eax,eax
   14000aeba:	ret    
   14000aebb:	int3   
   14000aebc:	int3   
   14000aebd:	int3   
   14000aebe:	int3   
   14000aebf:	int3   
   14000aec0:	rex push rbp
   14000aec2:	push   rsi
   14000aec3:	push   r12
   14000aec5:	push   r14
   14000aec7:	lea    rbp,[rsp-0x3f]
   14000aecc:	sub    rsp,0x98
   14000aed3:	mov    rax,QWORD PTR [rip+0x31126]        # 0x14003c000
   14000aeda:	xor    rax,rsp
   14000aedd:	mov    QWORD PTR [rbp+0x17],rax
   14000aee1:	mov    r14,rcx
   14000aee4:	mov    eax,0x20
   14000aee9:	xor    r12d,r12d
   14000aeec:	mov    ecx,0x100
   14000aef1:	mov    rsi,rdx
   14000aef4:	mov    WORD PTR [rip+0x330c5],ax        # 0x14003dfc0
   14000aefb:	mov    WORD PTR [rip+0x33f69],r12w        # 0x14003ee6c
   14000af03:	call   QWORD PTR [rip+0x2450f]        # 0x14002f418
   14000af09:	mov    QWORD PTR [rip+0x33f60],rax        # 0x14003ee70
   14000af10:	test   rax,rax
   14000af13:	jne    0x14000af1f
   14000af15:	lea    eax,[r12-0x3]
   14000af1a:	jmp    0x14000b6c1
   14000af1f:	mov    QWORD PTR [rsp+0xd0],rbx
   14000af27:	mov    QWORD PTR [rsp+0x90],rdi
   14000af2f:	lea    rcx,[rip+0x37a0a]        # 0x140042940
   14000af36:	mov    edx,0x100
   14000af3b:	mov    r8,r14
   14000af3e:	mov    QWORD PTR [rsp+0x88],r13
   14000af46:	mov    QWORD PTR [rsp+0x80],r15
   14000af4e:	call   0x14002a640
   14000af53:	test   ax,ax
   14000af56:	jle    0x14000b69d
   14000af5c:	lea    r15,[rip+0x3306d]        # 0x14003dfd0
   14000af63:	lea    r13,[rip+0x330e6]        # 0x14003e050
   14000af6a:	nop    WORD PTR [rax+rax*1+0x0]
   14000af70:	mov    rcx,QWORD PTR [r14]
   14000af73:	mov    ebx,DWORD PTR [rip+0x3322f]        # 0x14003e1a8
   14000af79:	mov    r9d,0x1
   14000af7f:	xor    r8d,r8d
   14000af82:	xor    edx,edx
   14000af84:	call   QWORD PTR [rip+0x2428e]        # 0x14002f218
   14000af8a:	mov    edi,eax
   14000af8c:	inc    eax
   14000af8e:	test   eax,0xfffffffe
   14000af93:	jne    0x14000afca
   14000af95:	call   QWORD PTR [rip+0x241c5]        # 0x14002f160
   14000af9b:	cmp    eax,0x58
   14000af9e:	jae    0x14000afae
   14000afa0:	mov    ecx,eax
   14000afa2:	lea    rax,[rip+0x260f7]        # 0x1400310a0
   14000afa9:	mov    edx,DWORD PTR [rax+rcx*4]
   14000afac:	jmp    0x14000afb3
   14000afae:	mov    edx,0x106
   14000afb3:	mov    DWORD PTR [rip+0x380ff],edx        # 0x1400430b8
   14000afb9:	mov    DWORD PTR [rip+0x38505],0x2        # 0x1400434c8
   14000afc3:	mov    BYTE PTR [rip+0x383f6],r12b        # 0x1400433c0
   14000afca:	test   ebx,ebx
   14000afcc:	je     0x14000afe1
   14000afce:	imul   eax,edi,0x64
   14000afd1:	xor    edx,edx
   14000afd3:	div    ebx
   14000afd5:	mov    r8d,eax
   14000afd8:	mov    WORD PTR [rip+0x33e7d],ax        # 0x14003ee5c
   14000afdf:	jmp    0x14000afe9
   14000afe1:	movzx  r8d,WORD PTR [rip+0x33e73]        # 0x14003ee5c
   14000afe9:	movzx  edx,WORD PTR [rip+0x33e54]        # 0x14003ee44
   14000aff0:	movzx  r9d,r8w
   14000aff4:	mov    ecx,r9d
   14000aff7:	sub    ecx,edx
   14000aff9:	cmp    ecx,0x1
   14000affc:	jl     0x14000b052
   14000affe:	movzx  ecx,WORD PTR [rip+0x33e5b]        # 0x14003ee60
   14000b005:	inc    dx
   14000b008:	mov    eax,0x51eb851f
   14000b00d:	mov    WORD PTR [rip+0x33e30],dx        # 0x14003ee44
   14000b014:	mov    WORD PTR [rip+0x33188],r8w        # 0x14003e1a4
   14000b01c:	imul   ecx,r9d
   14000b020:	imul   ecx
   14000b022:	mov    ecx,edx
   14000b024:	lea    rdx,[rip+0x33185]        # 0x14003e1b0
   14000b02b:	sar    ecx,0x5
   14000b02e:	mov    eax,ecx
   14000b030:	shr    eax,0x1f
   14000b033:	add    ecx,eax
   14000b035:	add    cx,WORD PTR [rip+0x33e0c]        # 0x14003ee48
   14000b03c:	mov    WORD PTR [rip+0x33e0d],cx        # 0x14003ee50
   14000b043:	call   QWORD PTR [rip+0x36a5f]        # 0x140041aa8
   14000b049:	test   ax,ax
   14000b04c:	jne    0x14000b6db
   14000b052:	cmp    WORD PTR [rip+0x378e6],0x1a        # 0x140042940
   14000b05a:	je     0x14000b680
   14000b060:	mov    rdx,r15
   14000b063:	call   0x14000b6f0
   14000b068:	test   ax,ax
   14000b06b:	js     0x14000b6e9
   14000b071:	mov    rcx,r15
   14000b074:	mov    WORD PTR [rip+0x3305b],ax        # 0x14003e0d6
   14000b07b:	call   0x14000b880
   14000b080:	test   ax,ax
   14000b083:	js     0x14000b6e9
   14000b089:	mov    WORD PTR [rip+0x33040],ax        # 0x14003e0d0
   14000b090:	mov    DWORD PTR [rip+0x33038],0x3fff        # 0x14003e0d2
   14000b09a:	mov    ecx,r12d
   14000b09d:	mov    rax,r15
   14000b0a0:	cmp    BYTE PTR [rax],r12b
   14000b0a3:	jne    0x14000b0ab
   14000b0a5:	cmp    BYTE PTR [rax+0x1],r12b
   14000b0a9:	je     0x14000b0b3
   14000b0ab:	add    rax,0x2
   14000b0af:	inc    ecx
   14000b0b1:	jmp    0x14000b0a0
   14000b0b3:	add    cx,cx
   14000b0b6:	mov    edx,0x8000
   14000b0bb:	movsx  rax,cx
   14000b0bf:	cmp    BYTE PTR [rax+r15*1-0x2],0x21
   14000b0c5:	jne    0x14000b0df
   14000b0c7:	cmp    BYTE PTR [rax+r15*1-0x1],r12b
   14000b0cc:	jne    0x14000b0df
   14000b0ce:	mov    WORD PTR [rax+r15*1-0x2],r12w
   14000b0d4:	add    cx,0xfffe
   14000b0d8:	or     WORD PTR [rip+0x32ff1],dx        # 0x14003e0d0
   14000b0df:	movsx  rax,cx
   14000b0e3:	cmp    BYTE PTR [rax+r15*1-0x2],0x3f
   14000b0e9:	jne    0x14000b108
   14000b0eb:	cmp    BYTE PTR [rax+r15*1-0x1],r12b
   14000b0f0:	jne    0x14000b108
   14000b0f2:	mov    WORD PTR [rax+r15*1-0x2],r12w
   14000b0f8:	mov    eax,0x4000
   14000b0fd:	add    cx,0xfffe
   14000b101:	or     WORD PTR [rip+0x32fca],ax        # 0x14003e0d2
   14000b108:	movsx  rax,cx
   14000b10c:	cmp    BYTE PTR [rax+r15*1-0x2],0x2e
   14000b112:	jne    0x14000b12c
   14000b114:	cmp    BYTE PTR [rax+r15*1-0x1],r12b
   14000b119:	jne    0x14000b12c
   14000b11b:	mov    WORD PTR [rax+r15*1-0x2],r12w
   14000b121:	add    cx,0xfffe
   14000b125:	or     WORD PTR [rip+0x32faa],dx        # 0x14003e0d6
   14000b12c:	movsx  rdi,cx
   14000b130:	mov    rcx,r12
   14000b133:	mov    rbx,rdi
   14000b136:	test   edi,edi
   14000b138:	jle    0x14000b14c
   14000b13a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b140:	not    BYTE PTR [rcx+r15*1]
   14000b144:	inc    rcx
   14000b147:	cmp    rcx,rbx
   14000b14a:	jl     0x14000b140
   14000b14c:	mov    rcx,QWORD PTR [rsi]
   14000b14f:	lea    r9,[rbp-0x21]
   14000b153:	mov    r8d,edi
   14000b156:	mov    rdx,r15
   14000b159:	mov    QWORD PTR [rsp+0x20],r12
   14000b15e:	call   QWORD PTR [rip+0x240ac]        # 0x14002f210
   14000b164:	test   eax,eax
   14000b166:	jne    0x14000b19d
   14000b168:	call   QWORD PTR [rip+0x23ff2]        # 0x14002f160
   14000b16e:	cmp    eax,0x58
   14000b171:	jae    0x14000b181
   14000b173:	lea    rcx,[rip+0x25f26]        # 0x1400310a0
   14000b17a:	mov    eax,eax
   14000b17c:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000b17f:	jmp    0x14000b186
   14000b181:	mov    ecx,0x106
   14000b186:	mov    DWORD PTR [rip+0x37f2c],ecx        # 0x1400430b8
   14000b18c:	mov    DWORD PTR [rip+0x38332],0x2        # 0x1400434c8
   14000b196:	mov    BYTE PTR [rip+0x38223],r12b        # 0x1400433c0
   14000b19d:	mov    rcx,r12
   14000b1a0:	test   edi,edi
   14000b1a2:	jle    0x14000b1c4
   14000b1a4:	nop    DWORD PTR [rax+0x0]
   14000b1a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b1b0:	movzx  eax,BYTE PTR [rcx+r15*1]
   14000b1b5:	inc    rcx
   14000b1b8:	not    al
   14000b1ba:	mov    BYTE PTR [rcx+r15*1-0x1],al
   14000b1bf:	cmp    rcx,rbx
   14000b1c2:	jl     0x14000b1b0
   14000b1c4:	cmp    DWORD PTR [rbp-0x21],edi
   14000b1c7:	jne    0x14000b6e2
   14000b1cd:	lea    rbx,[rip+0x30e58]        # 0x14003c02c
   14000b1d4:	mov    rdx,r13
   14000b1d7:	mov    rcx,rbx
   14000b1da:	nop    WORD PTR [rax+rax*1+0x0]
   14000b1e0:	movzx  eax,BYTE PTR [rcx]
   14000b1e3:	test   al,al
   14000b1e5:	jne    0x14000b1ed
   14000b1e7:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b1eb:	je     0x14000b200
   14000b1ed:	mov    BYTE PTR [rdx],al
   14000b1ef:	movzx  eax,BYTE PTR [rcx+0x1]
   14000b1f3:	add    rdx,0x2
   14000b1f7:	mov    BYTE PTR [rdx-0x1],al
   14000b1fa:	add    rcx,0x2
   14000b1fe:	jmp    0x14000b1e0
   14000b200:	movzx  eax,BYTE PTR [rcx]
   14000b203:	mov    BYTE PTR [rdx],al
   14000b205:	movzx  eax,BYTE PTR [rcx+0x1]
   14000b209:	lea    rcx,[rbp-0x9]
   14000b20d:	mov    BYTE PTR [rdx+0x1],al
   14000b210:	movzx  r8d,WORD PTR [rip+0x32eb8]        # 0x14003e0d0
   14000b218:	lea    rdx,[rip+0x295a5]        # 0x1400347c4
   14000b21f:	call   QWORD PTR [rip+0x2422b]        # 0x14002f450
   14000b225:	movsxd r9,eax
   14000b228:	cmp    r12w,r9w
   14000b22c:	jge    0x14000b256
   14000b22e:	lea    rdx,[rbp-0x9]
   14000b232:	lea    rcx,[rbp-0x18]
   14000b236:	movzx  r8d,r9w
   14000b23a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b240:	movzx  eax,BYTE PTR [rdx]
   14000b243:	mov    BYTE PTR [rcx],r12b
   14000b246:	lea    rcx,[rcx+0x2]
   14000b24a:	mov    BYTE PTR [rcx-0x3],al
   14000b24d:	lea    rdx,[rdx+0x1]
   14000b251:	dec    r8
   14000b254:	jne    0x14000b240
   14000b256:	movsx  rax,r9w
   14000b25a:	lea    rdx,[rbp-0x19]
   14000b25e:	mov    rcx,r13
   14000b261:	mov    WORD PTR [rbp+rax*2-0x19],r12w
   14000b267:	cmp    BYTE PTR [rcx],r12b
   14000b26a:	jne    0x14000b272
   14000b26c:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b270:	je     0x14000b278
   14000b272:	add    rcx,0x2
   14000b276:	jmp    0x14000b267
   14000b278:	movzx  eax,BYTE PTR [rdx]
   14000b27b:	test   al,al
   14000b27d:	jne    0x14000b285
   14000b27f:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b283:	je     0x14000b298
   14000b285:	mov    BYTE PTR [rcx],al
   14000b287:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b28b:	add    rcx,0x2
   14000b28f:	mov    BYTE PTR [rcx-0x1],al
   14000b292:	add    rdx,0x2
   14000b296:	jmp    0x14000b278
   14000b298:	mov    WORD PTR [rcx],r12w
   14000b29c:	mov    rdx,rbx
   14000b29f:	mov    rcx,r13
   14000b2a2:	cmp    BYTE PTR [rcx],r12b
   14000b2a5:	jne    0x14000b2ad
   14000b2a7:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b2ab:	je     0x14000b2b3
   14000b2ad:	add    rcx,0x2
   14000b2b1:	jmp    0x14000b2a2
   14000b2b3:	movzx  eax,BYTE PTR [rdx]
   14000b2b6:	test   al,al
   14000b2b8:	jne    0x14000b2c0
   14000b2ba:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b2be:	je     0x14000b2d3
   14000b2c0:	mov    BYTE PTR [rcx],al
   14000b2c2:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b2c6:	add    rcx,0x2
   14000b2ca:	mov    BYTE PTR [rcx-0x1],al
   14000b2cd:	add    rdx,0x2
   14000b2d1:	jmp    0x14000b2b3
   14000b2d3:	mov    WORD PTR [rcx],r12w
   14000b2d7:	movzx  r8d,WORD PTR [rip+0x32df3]        # 0x14003e0d2
   14000b2df:	lea    rdx,[rip+0x294de]        # 0x1400347c4
   14000b2e6:	lea    rcx,[rbp+0xf]
   14000b2ea:	call   QWORD PTR [rip+0x24160]        # 0x14002f450
   14000b2f0:	movsxd r9,eax
   14000b2f3:	cmp    r12w,r9w
   14000b2f7:	jge    0x14000b326
   14000b2f9:	lea    rdx,[rbp+0xf]
   14000b2fd:	lea    rcx,[rbp-0x18]
   14000b301:	movzx  r8d,r9w
   14000b305:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b310:	movzx  eax,BYTE PTR [rdx]
   14000b313:	mov    BYTE PTR [rcx],r12b
   14000b316:	lea    rcx,[rcx+0x2]
   14000b31a:	mov    BYTE PTR [rcx-0x3],al
   14000b31d:	lea    rdx,[rdx+0x1]
   14000b321:	dec    r8
   14000b324:	jne    0x14000b310
   14000b326:	movsx  rax,r9w
   14000b32a:	lea    rdx,[rbp-0x19]
   14000b32e:	mov    rcx,r13
   14000b331:	mov    WORD PTR [rbp+rax*2-0x19],r12w
   14000b337:	cmp    BYTE PTR [rcx],r12b
   14000b33a:	jne    0x14000b342
   14000b33c:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b340:	je     0x14000b348
   14000b342:	add    rcx,0x2
   14000b346:	jmp    0x14000b337
   14000b348:	movzx  eax,BYTE PTR [rdx]
   14000b34b:	test   al,al
   14000b34d:	jne    0x14000b355
   14000b34f:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b353:	je     0x14000b368
   14000b355:	mov    BYTE PTR [rcx],al
   14000b357:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b35b:	add    rcx,0x2
   14000b35f:	mov    BYTE PTR [rcx-0x1],al
   14000b362:	add    rdx,0x2
   14000b366:	jmp    0x14000b348
   14000b368:	mov    WORD PTR [rcx],r12w
   14000b36c:	mov    rdx,rbx
   14000b36f:	mov    rcx,r13
   14000b372:	cmp    BYTE PTR [rcx],r12b
   14000b375:	jne    0x14000b37d
   14000b377:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b37b:	je     0x14000b383
   14000b37d:	add    rcx,0x2
   14000b381:	jmp    0x14000b372
   14000b383:	movzx  eax,BYTE PTR [rdx]
   14000b386:	test   al,al
   14000b388:	jne    0x14000b390
   14000b38a:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b38e:	je     0x14000b3a3
   14000b390:	mov    BYTE PTR [rcx],al
   14000b392:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b396:	add    rcx,0x2
   14000b39a:	mov    BYTE PTR [rcx-0x1],al
   14000b39d:	add    rdx,0x2
   14000b3a1:	jmp    0x14000b383
   14000b3a3:	mov    WORD PTR [rcx],r12w
   14000b3a7:	movzx  r8d,WORD PTR [rip+0x32d25]        # 0x14003e0d4
   14000b3af:	lea    rdx,[rip+0x2940e]        # 0x1400347c4
   14000b3b6:	lea    rcx,[rbp+0x7]
   14000b3ba:	call   QWORD PTR [rip+0x24090]        # 0x14002f450
   14000b3c0:	movsxd r9,eax
   14000b3c3:	cmp    r12w,r9w
   14000b3c7:	jge    0x14000b3f6
   14000b3c9:	lea    rdx,[rbp+0x7]
   14000b3cd:	lea    rcx,[rbp-0x18]
   14000b3d1:	movzx  r8d,r9w
   14000b3d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b3e0:	movzx  eax,BYTE PTR [rdx]
   14000b3e3:	mov    BYTE PTR [rcx],r12b
   14000b3e6:	lea    rcx,[rcx+0x2]
   14000b3ea:	mov    BYTE PTR [rcx-0x3],al
   14000b3ed:	lea    rdx,[rdx+0x1]
   14000b3f1:	dec    r8
   14000b3f4:	jne    0x14000b3e0
   14000b3f6:	movsx  rax,r9w
   14000b3fa:	lea    rdx,[rbp-0x19]
   14000b3fe:	mov    rcx,r13
   14000b401:	mov    WORD PTR [rbp+rax*2-0x19],r12w
   14000b407:	cmp    BYTE PTR [rcx],r12b
   14000b40a:	jne    0x14000b412
   14000b40c:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b410:	je     0x14000b418
   14000b412:	add    rcx,0x2
   14000b416:	jmp    0x14000b407
   14000b418:	movzx  eax,BYTE PTR [rdx]
   14000b41b:	test   al,al
   14000b41d:	jne    0x14000b425
   14000b41f:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b423:	je     0x14000b438
   14000b425:	mov    BYTE PTR [rcx],al
   14000b427:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b42b:	add    rcx,0x2
   14000b42f:	mov    BYTE PTR [rcx-0x1],al
   14000b432:	add    rdx,0x2
   14000b436:	jmp    0x14000b418
   14000b438:	mov    WORD PTR [rcx],r12w
   14000b43c:	mov    rdx,rbx
   14000b43f:	mov    rcx,r13
   14000b442:	cmp    BYTE PTR [rcx],r12b
   14000b445:	jne    0x14000b44d
   14000b447:	cmp    BYTE PTR [rcx+0x1],r12b
   14000b44b:	je     0x14000b453
   14000b44d:	add    rcx,0x2
   14000b451:	jmp    0x14000b442
   14000b453:	movzx  eax,BYTE PTR [rdx]
   14000b456:	test   al,al
   14000b458:	jne    0x14000b460
   14000b45a:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b45e:	je     0x14000b473
   14000b460:	mov    BYTE PTR [rcx],al
   14000b462:	movzx  eax,BYTE PTR [rdx+0x1]
   14000b466:	add    rcx,0x2
   14000b46a:	mov    BYTE PTR [rcx-0x1],al
   14000b46d:	add    rdx,0x2
   14000b471:	jmp    0x14000b453
   14000b473:	mov    WORD PTR [rcx],r12w
   14000b477:	movzx  r8d,WORD PTR [rip+0x32c57]        # 0x14003e0d6
   14000b47f:	lea    rdx,[rip+0x2933e]        # 0x1400347c4
   14000b486:	lea    rcx,[rbp-0x1]
   14000b48a:	call   QWORD PTR [rip+0x23fc0]        # 0x14002f450
   14000b490:	movsxd r9,eax
   14000b493:	cmp    r12w,r9w
   14000b497:	jge    0x14000b4c6
   14000b499:	lea    rdx,[rbp-0x1]
   14000b49d:	lea    rcx,[rbp-0x18]
   14000b4a1:	movzx  r8d,r9w
   14000b4a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b4b0:	movzx  eax,BYTE PTR [rdx]
   14000b4b3:	mov    BYTE PTR [rcx],r12b
   14000b4b6:	add    rcx,0x2
   14000b4ba:	mov    BYTE PTR [rcx-0x3],al
   14000b4bd:	lea    rdx,[rdx+0x1]
   14000b4c1:	dec    r8
   14000b4c4:	jne    0x14000b4b0
   14000b4c6:	movsx  rax,r9w
   14000b4ca:	lea    rdx,[rbp-0x19]
   14000b4ce:	mov    WORD PTR [rbp+rax*2-0x19],r12w
   14000b4d4:	mov    rax,r13
   14000b4d7:	cmp    BYTE PTR [rax],r12b
   14000b4da:	jne    0x14000b4e2
   14000b4dc:	cmp    BYTE PTR [rax+0x1],r12b
   14000b4e0:	je     0x14000b4e8
   14000b4e2:	add    rax,0x2
   14000b4e6:	jmp    0x14000b4d7
   14000b4e8:	movzx  ecx,BYTE PTR [rdx]
   14000b4eb:	test   cl,cl
   14000b4ed:	jne    0x14000b4f5
   14000b4ef:	cmp    BYTE PTR [rdx+0x1],r12b
   14000b4f3:	je     0x14000b508
   14000b4f5:	mov    BYTE PTR [rax],cl
   14000b4f7:	movzx  ecx,BYTE PTR [rdx+0x1]
   14000b4fb:	add    rax,0x2
   14000b4ff:	mov    BYTE PTR [rax-0x1],cl
   14000b502:	add    rdx,0x2
   14000b506:	jmp    0x14000b4e8
   14000b508:	mov    WORD PTR [rax],r12w
   14000b50c:	mov    ecx,r12d
   14000b50f:	mov    rax,r13
   14000b512:	cmp    BYTE PTR [rax],r12b
   14000b515:	jne    0x14000b51d
   14000b517:	cmp    BYTE PTR [rax+0x1],r12b
   14000b51b:	je     0x14000b525
   14000b51d:	add    rax,0x2
   14000b521:	inc    ecx
   14000b523:	jmp    0x14000b512
   14000b525:	add    cx,cx
   14000b528:	movsx  rdi,cx
   14000b52c:	mov    rcx,r12
   14000b52f:	mov    rbx,rdi
   14000b532:	test   edi,edi
   14000b534:	jle    0x14000b550
   14000b536:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b540:	not    BYTE PTR [rcx+r15*1+0x80]
   14000b548:	inc    rcx
   14000b54b:	cmp    rcx,rbx
   14000b54e:	jl     0x14000b540
   14000b550:	mov    rcx,QWORD PTR [rsi]
   14000b553:	lea    r9,[rbp-0x29]
   14000b557:	mov    r8d,edi
   14000b55a:	mov    rdx,r13
   14000b55d:	mov    QWORD PTR [rsp+0x20],r12
   14000b562:	call   QWORD PTR [rip+0x23ca8]        # 0x14002f210
   14000b568:	test   eax,eax
   14000b56a:	jne    0x14000b5a1
   14000b56c:	call   QWORD PTR [rip+0x23bee]        # 0x14002f160
   14000b572:	cmp    eax,0x58
   14000b575:	jae    0x14000b585
   14000b577:	lea    rcx,[rip+0x25b22]        # 0x1400310a0
   14000b57e:	mov    eax,eax
   14000b580:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000b583:	jmp    0x14000b58a
   14000b585:	mov    ecx,0x106
   14000b58a:	mov    DWORD PTR [rip+0x37b28],ecx        # 0x1400430b8
   14000b590:	mov    DWORD PTR [rip+0x37f2e],0x2        # 0x1400434c8
   14000b59a:	mov    BYTE PTR [rip+0x37e1f],r12b        # 0x1400433c0
   14000b5a1:	mov    rcx,r12
   14000b5a4:	test   edi,edi
   14000b5a6:	jle    0x14000b5c0
   14000b5a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b5b0:	not    BYTE PTR [rcx+r15*1+0x80]
   14000b5b8:	inc    rcx
   14000b5bb:	cmp    rcx,rbx
   14000b5be:	jl     0x14000b5b0
   14000b5c0:	cmp    DWORD PTR [rbp-0x29],edi
   14000b5c3:	jne    0x14000b6e2
   14000b5c9:	lea    rdx,[rip+0x30a60]        # 0x14003c030
   14000b5d0:	mov    ecx,r12d
   14000b5d3:	mov    rax,rdx
   14000b5d6:	cmp    BYTE PTR [rax],r12b
   14000b5d9:	jne    0x14000b5e1
   14000b5db:	cmp    BYTE PTR [rax+0x1],r12b
   14000b5df:	je     0x14000b5e9
   14000b5e1:	add    rax,0x2
   14000b5e5:	inc    ecx
   14000b5e7:	jmp    0x14000b5d6
   14000b5e9:	add    cx,cx
   14000b5ec:	movsx  rdi,cx
   14000b5f0:	mov    rcx,r12
   14000b5f3:	mov    rbx,rdi
   14000b5f6:	test   edi,edi
   14000b5f8:	jle    0x14000b60b
   14000b5fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000b600:	not    BYTE PTR [rcx+rdx*1]
   14000b603:	inc    rcx
   14000b606:	cmp    rcx,rbx
   14000b609:	jl     0x14000b600
   14000b60b:	mov    rcx,QWORD PTR [rsi]
   14000b60e:	lea    r9,[rbp-0x25]
   14000b612:	mov    r8d,edi
   14000b615:	mov    QWORD PTR [rsp+0x20],r12
   14000b61a:	call   QWORD PTR [rip+0x23bf0]        # 0x14002f210
   14000b620:	test   eax,eax
   14000b622:	jne    0x14000b659
   14000b624:	call   QWORD PTR [rip+0x23b36]        # 0x14002f160
   14000b62a:	cmp    eax,0x58
   14000b62d:	jae    0x14000b63d
   14000b62f:	lea    rcx,[rip+0x25a6a]        # 0x1400310a0
   14000b636:	mov    eax,eax
   14000b638:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000b63b:	jmp    0x14000b642
   14000b63d:	mov    ecx,0x106
   14000b642:	mov    DWORD PTR [rip+0x37a70],ecx        # 0x1400430b8
   14000b648:	mov    DWORD PTR [rip+0x37e76],0x2        # 0x1400434c8
   14000b652:	mov    BYTE PTR [rip+0x37d67],r12b        # 0x1400433c0
   14000b659:	mov    rcx,r12
   14000b65c:	test   edi,edi
   14000b65e:	jle    0x14000b67b
   14000b660:	lea    rdx,[rip+0x309c9]        # 0x14003c030
   14000b667:	nop    WORD PTR [rax+rax*1+0x0]
   14000b670:	not    BYTE PTR [rcx+rdx*1]
   14000b673:	inc    rcx
   14000b676:	cmp    rcx,rbx
   14000b679:	jl     0x14000b670
   14000b67b:	cmp    DWORD PTR [rbp-0x25],edi
   14000b67e:	jne    0x14000b6e2
   14000b680:	lea    rcx,[rip+0x372b9]        # 0x140042940
   14000b687:	mov    edx,0x100
   14000b68c:	mov    r8,r14
   14000b68f:	call   0x14002a640
   14000b694:	test   ax,ax
   14000b697:	jg     0x14000af70
   14000b69d:	movzx  eax,r12w
   14000b6a1:	mov    r13,QWORD PTR [rsp+0x88]
   14000b6a9:	mov    rdi,QWORD PTR [rsp+0x90]
   14000b6b1:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000b6b9:	mov    r15,QWORD PTR [rsp+0x80]
   14000b6c1:	mov    rcx,QWORD PTR [rbp+0x17]
   14000b6c5:	xor    rcx,rsp
   14000b6c8:	call   0x14002c960
   14000b6cd:	add    rsp,0x98
   14000b6d4:	pop    r14
   14000b6d6:	pop    r12
   14000b6d8:	pop    rsi
   14000b6d9:	pop    rbp
   14000b6da:	ret    
   14000b6db:	mov    eax,0xfffffffc
   14000b6e0:	jmp    0x14000b6a1
   14000b6e2:	mov    eax,0xfffffffe
   14000b6e7:	jmp    0x14000b6a1
   14000b6e9:	mov    eax,0xfffffffd
   14000b6ee:	jmp    0x14000b6a1
   14000b6f0:	mov    QWORD PTR [rsp+0x8],rcx
   14000b6f5:	push   rsi
   14000b6f6:	push   r14
   14000b6f8:	sub    rsp,0x28
   14000b6fc:	movzx  eax,WORD PTR [rip+0x3723d]        # 0x140042940
   14000b703:	xor    r14d,r14d
   14000b706:	mov    QWORD PTR [rsp+0x48],rbx
   14000b70b:	mov    QWORD PTR [rsp+0x50],rbp
   14000b710:	mov    ebx,r14d
   14000b713:	mov    QWORD PTR [rsp+0x58],rdi
   14000b718:	mov    rbp,rdx
   14000b71b:	movzx  edi,r14w
   14000b71f:	movzx  r9d,r14w
   14000b723:	movzx  esi,r14w
   14000b727:	movzx  r10d,r14w
   14000b72b:	mov    r11d,r14d
   14000b72e:	mov    DWORD PTR [rsp+0x44],r14d
   14000b733:	mov    DWORD PTR [rsp+0x40],ebx
   14000b737:	cmp    ax,0xd
   14000b73b:	je     0x14000b827
   14000b741:	mov    QWORD PTR [rsp+0x20],r15
   14000b746:	lea    r15,[rip+0x371f3]        # 0x140042940
   14000b74d:	mov    r8d,r14d
   14000b750:	mov    rdx,r15
   14000b753:	cmp    ax,0x5f
   14000b757:	jne    0x14000b7e5
   14000b75d:	test   r10w,r10w
   14000b761:	jne    0x14000b76d
   14000b763:	movsx  eax,di
   14000b766:	cdq    
   14000b767:	sub    eax,edx
   14000b769:	sar    eax,1
   14000b76b:	mov    esi,eax
   14000b76d:	movsx  eax,r9w
   14000b771:	cdq    
   14000b772:	sub    eax,edx
   14000b774:	sar    eax,1
   14000b776:	cmp    r9w,0x40
   14000b77b:	jge    0x14000b7af
   14000b77d:	mov    ecx,eax
   14000b77f:	mov    eax,0x1
   14000b784:	cmp    cx,0x20
   14000b788:	jle    0x14000b795
   14000b78a:	mov    eax,r14d
   14000b78d:	or     ebx,eax
   14000b78f:	inc    r10w
   14000b793:	jmp    0x14000b7ff
   14000b795:	cmp    r14w,cx
   14000b799:	jge    0x14000b7a7
   14000b79b:	movzx  ecx,cx
   14000b79e:	xchg   ax,ax
   14000b7a0:	add    eax,eax
   14000b7a2:	dec    rcx
   14000b7a5:	jne    0x14000b7a0
   14000b7a7:	or     ebx,eax
   14000b7a9:	inc    r10w
   14000b7ad:	jmp    0x14000b7ff
   14000b7af:	mov    ecx,eax
   14000b7b1:	mov    eax,0x1
   14000b7b6:	sub    cx,0x20
   14000b7ba:	cmp    cx,0x20
   14000b7be:	jle    0x14000b7cc
   14000b7c0:	mov    eax,r14d
   14000b7c3:	or     r11d,eax
   14000b7c6:	inc    r10w
   14000b7ca:	jmp    0x14000b7ff
   14000b7cc:	cmp    r14w,cx
   14000b7d0:	jge    0x14000b7dc
   14000b7d2:	movzx  ecx,cx
   14000b7d5:	add    eax,eax
   14000b7d7:	dec    rcx
   14000b7da:	jne    0x14000b7d5
   14000b7dc:	or     r11d,eax
   14000b7df:	inc    r10w
   14000b7e3:	jmp    0x14000b7ff
   14000b7e5:	movsx  rax,di
   14000b7e9:	add    di,0x2
   14000b7ed:	lea    rcx,[rax+rbp*1]
   14000b7f1:	movzx  eax,BYTE PTR [rdx]
   14000b7f4:	mov    BYTE PTR [rcx],al
   14000b7f6:	movzx  eax,BYTE PTR [r8+r15*1+0x1]
   14000b7fc:	mov    BYTE PTR [rcx+0x1],al
   14000b7ff:	add    r9w,0x2
   14000b804:	movsx  r8,r9w
   14000b808:	lea    rdx,[r8+r15*1]
   14000b80c:	movzx  eax,WORD PTR [rdx]
   14000b80f:	cmp    ax,0xd
   14000b813:	jne    0x14000b753
   14000b819:	mov    r15,QWORD PTR [rsp+0x20]
   14000b81e:	mov    DWORD PTR [rsp+0x44],r11d
   14000b823:	mov    DWORD PTR [rsp+0x40],ebx
   14000b827:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b82c:	movsx  rcx,di
   14000b830:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b835:	mov    WORD PTR [rcx+rbp*1],r14w
   14000b83a:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b83f:	test   r10w,r10w
   14000b843:	jne    0x14000b851
   14000b845:	movzx  eax,r14w
   14000b849:	add    rsp,0x28
   14000b84d:	pop    r14
   14000b84f:	pop    rsi
   14000b850:	ret    
   14000b851:	cmp    r10w,0x1
   14000b856:	jne    0x14000b863
   14000b858:	movzx  eax,si
   14000b85b:	add    rsp,0x28
   14000b85f:	pop    r14
   14000b861:	pop    rsi
   14000b862:	ret    
   14000b863:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b868:	call   0x14000baa0
   14000b86d:	test   ax,ax
   14000b870:	js     0x14000b876
   14000b872:	cwde   
   14000b873:	add    eax,0x40
   14000b876:	add    rsp,0x28
   14000b87a:	pop    r14
   14000b87c:	pop    rsi
   14000b87d:	ret    
   14000b87e:	int3   
   14000b87f:	int3   
   14000b880:	rex push rbx
   14000b882:	push   rbp
   14000b883:	push   r13
   14000b885:	push   r15
   14000b887:	sub    rsp,0x28
   14000b88b:	movzx  eax,WORD PTR [rcx]
   14000b88e:	xor    r15d,r15d
   14000b891:	mov    QWORD PTR [rsp+0x58],rsi
   14000b896:	mov    QWORD PTR [rsp+0x60],rdi
   14000b89b:	mov    QWORD PTR [rsp+0x20],r14
   14000b8a0:	movzx  r10d,r15w
   14000b8a4:	mov    r14,rcx
   14000b8a7:	movzx  ebp,r15w
   14000b8ab:	movzx  ebx,r15w
   14000b8af:	mov    edi,r15d
   14000b8b2:	mov    QWORD PTR [rsp+0x50],r15
   14000b8b7:	mov    esi,r15d
   14000b8ba:	lea    r13d,[r15+0x1]
   14000b8be:	test   ax,ax
   14000b8c1:	je     0x14000ba19
   14000b8c7:	mov    QWORD PTR [rsp+0x68],r12
   14000b8cc:	mov    r11,rcx
   14000b8cf:	mov    ecx,0xff00
   14000b8d4:	lea    r12,[rip+0x25965]        # 0x140031240
   14000b8db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b8e0:	movzx  r8d,ax
   14000b8e4:	shr    r8w,0x8
   14000b8e9:	cmp    r8w,0xf
   14000b8ee:	ja     0x14000b9f1
   14000b8f4:	movzx  r9d,ax
   14000b8f8:	and    r9w,cx
   14000b8fc:	jne    0x14000b90b
   14000b8fe:	lea    ecx,[rax-0x41]
   14000b901:	cmp    cl,0x19
   14000b904:	jbe    0x14000b94c
   14000b906:	jmp    0x14000b9ec
   14000b90b:	lea    ecx,[r8-0x1]
   14000b90f:	add    cl,cl
   14000b911:	movzx  edx,cl
   14000b914:	cmp    al,BYTE PTR [rdx+r12*1]
   14000b918:	jb     0x14000b9ec
   14000b91e:	cmp    al,BYTE PTR [rdx+r12*1+0x1]
   14000b923:	ja     0x14000b9ec
   14000b929:	movzx  edx,al
   14000b92c:	and    edx,0x80000001
   14000b932:	jge    0x14000b93b
   14000b934:	dec    edx
   14000b936:	or     edx,0xfffffffe
   14000b939:	inc    edx
   14000b93b:	test   edx,edx
   14000b93d:	mov    ecx,r15d
   14000b940:	sete   cl
   14000b943:	test   cx,cx
   14000b946:	je     0x14000b9ec
   14000b94c:	test   r9w,r9w
   14000b950:	jne    0x14000b960
   14000b952:	lea    ecx,[rax-0x41]
   14000b955:	cmp    cl,0x19
   14000b958:	ja     0x14000b97b
   14000b95a:	or     ax,0x20
   14000b95e:	jmp    0x14000b97b
   14000b960:	dec    r8b
   14000b963:	add    r8b,r8b
   14000b966:	movzx  ecx,r8b
   14000b96a:	cmp    al,BYTE PTR [rcx+r12*1]
   14000b96e:	jb     0x14000b97b
   14000b970:	cmp    al,BYTE PTR [rcx+r12*1+0x1]
   14000b975:	ja     0x14000b97b
   14000b977:	or     ax,r13w
   14000b97b:	mov    WORD PTR [r11],ax
   14000b97f:	test   bx,bx
   14000b982:	jne    0x14000b98f
   14000b984:	movsx  eax,r10w
   14000b988:	cdq    
   14000b989:	sub    eax,edx
   14000b98b:	sar    eax,1
   14000b98d:	mov    ebp,eax
   14000b98f:	movsx  eax,r10w
   14000b993:	mov    ecx,r13d
   14000b996:	cdq    
   14000b997:	sub    eax,edx
   14000b999:	sar    eax,1
   14000b99b:	cmp    r10w,0x40
   14000b9a0:	jge    0x14000b9c3
   14000b9a2:	cmp    ax,0x20
   14000b9a6:	jle    0x14000b9af
   14000b9a8:	mov    ecx,r15d
   14000b9ab:	or     esi,ecx
   14000b9ad:	jmp    0x14000b9e9
   14000b9af:	cmp    r15w,ax
   14000b9b3:	jge    0x14000b9bf
   14000b9b5:	movzx  eax,ax
   14000b9b8:	add    ecx,ecx
   14000b9ba:	dec    rax
   14000b9bd:	jne    0x14000b9b8
   14000b9bf:	or     esi,ecx
   14000b9c1:	jmp    0x14000b9e9
   14000b9c3:	sub    ax,0x20
   14000b9c7:	cmp    ax,0x20
   14000b9cb:	jle    0x14000b9d2
   14000b9cd:	mov    ecx,r15d
   14000b9d0:	jmp    0x14000b9e7
   14000b9d2:	cmp    r15w,ax
   14000b9d6:	jge    0x14000b9e7
   14000b9d8:	movzx  eax,ax
   14000b9db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b9e0:	add    ecx,ecx
   14000b9e2:	dec    rax
   14000b9e5:	jne    0x14000b9e0
   14000b9e7:	or     edi,ecx
   14000b9e9:	inc    bx
   14000b9ec:	mov    ecx,0xff00
   14000b9f1:	add    r10w,0x2
   14000b9f6:	movsx  rax,r10w
   14000b9fa:	lea    r11,[rax+r14*1]
   14000b9fe:	movzx  eax,WORD PTR [rax+r14*1]
   14000ba03:	test   ax,ax
   14000ba06:	jne    0x14000b8e0
   14000ba0c:	mov    r12,QWORD PTR [rsp+0x68]
   14000ba11:	mov    DWORD PTR [rsp+0x54],edi
   14000ba15:	mov    DWORD PTR [rsp+0x50],esi
   14000ba19:	mov    rdi,QWORD PTR [rsp+0x60]
   14000ba1e:	mov    rsi,QWORD PTR [rsp+0x58]
   14000ba23:	movsx  rcx,r10w
   14000ba27:	mov    WORD PTR [rcx+r14*1],r15w
   14000ba2c:	mov    r14,QWORD PTR [rsp+0x20]
   14000ba31:	test   bx,bx
   14000ba34:	jne    0x14000ba45
   14000ba36:	movzx  eax,r15w
   14000ba3a:	add    rsp,0x28
   14000ba3e:	pop    r15
   14000ba40:	pop    r13
   14000ba42:	pop    rbp
   14000ba43:	pop    rbx
   14000ba44:	ret    
   14000ba45:	cmp    bx,r13w
   14000ba49:	jne    0x14000ba5f
   14000ba4b:	test   bp,bp
   14000ba4e:	jne    0x14000ba5f
   14000ba50:	movzx  eax,r13w
   14000ba54:	add    rsp,0x28
   14000ba58:	pop    r15
   14000ba5a:	pop    r13
   14000ba5c:	pop    rbp
   14000ba5d:	pop    rbx
   14000ba5e:	ret    
   14000ba5f:	movsx  eax,r10w
   14000ba63:	movsx  ecx,bx
   14000ba66:	cdq    
   14000ba67:	sub    eax,edx
   14000ba69:	sar    eax,1
   14000ba6b:	cmp    ecx,eax
   14000ba6d:	jne    0x14000ba7f
   14000ba6f:	mov    eax,0x2
   14000ba74:	add    rsp,0x28
   14000ba78:	pop    r15
   14000ba7a:	pop    r13
   14000ba7c:	pop    rbp
   14000ba7d:	pop    rbx
   14000ba7e:	ret    
   14000ba7f:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ba84:	call   0x14000baa0
   14000ba89:	test   ax,ax
   14000ba8c:	js     0x14000ba92
   14000ba8e:	cwde   
   14000ba8f:	add    eax,0x3
   14000ba92:	add    rsp,0x28
   14000ba96:	pop    r15
   14000ba98:	pop    r13
   14000ba9a:	pop    rbp
   14000ba9b:	pop    rbx
   14000ba9c:	ret    
   14000ba9d:	int3   
   14000ba9e:	int3   
   14000ba9f:	int3   
   14000baa0:	mov    QWORD PTR [rsp+0x8],rcx
   14000baa5:	push   rbx
   14000baa6:	sub    rsp,0x20
   14000baaa:	movzx  ebx,WORD PTR [rip+0x333bb]        # 0x14003ee6c
   14000bab1:	mov    r8,QWORD PTR [rip+0x333b8]        # 0x14003ee70
   14000bab8:	xor    edx,edx
   14000baba:	cmp    dx,bx
   14000babd:	jae    0x14000badc
   14000babf:	mov    r9d,DWORD PTR [rsp+0x34]
   14000bac4:	movzx  eax,dx
   14000bac7:	cmp    ecx,DWORD PTR [r8+rax*8]
   14000bacb:	jne    0x14000bad4
   14000bacd:	cmp    r9d,DWORD PTR [r8+rax*8+0x4]
   14000bad2:	je     0x14000bb31
   14000bad4:	inc    dx
   14000bad7:	cmp    dx,bx
   14000bada:	jb     0x14000bac4
   14000badc:	movzx  eax,bx
   14000badf:	inc    bx
   14000bae2:	lea    rdx,[r8+rax*8]
   14000bae6:	mov    WORD PTR [rip+0x3337f],bx        # 0x14003ee6c
   14000baed:	mov    DWORD PTR [rdx],ecx
   14000baef:	mov    eax,DWORD PTR [rsp+0x34]
   14000baf3:	mov    DWORD PTR [rdx+0x4],eax
   14000baf6:	movzx  eax,WORD PTR [rip+0x324c3]        # 0x14003dfc0
   14000bafd:	cmp    bx,ax
   14000bb00:	jb     0x14000bb3a
   14000bb02:	add    ax,0x20
   14000bb06:	mov    rcx,r8
   14000bb09:	movzx  edx,ax
   14000bb0c:	mov    WORD PTR [rip+0x324ad],ax        # 0x14003dfc0
   14000bb13:	shl    edx,0x3
   14000bb16:	call   QWORD PTR [rip+0x238e4]        # 0x14002f400
   14000bb1c:	mov    QWORD PTR [rip+0x3334d],rax        # 0x14003ee70
   14000bb23:	test   rax,rax
   14000bb26:	jne    0x14000bb3a
   14000bb28:	or     eax,0xffffffff
   14000bb2b:	add    rsp,0x20
   14000bb2f:	pop    rbx
   14000bb30:	ret    
   14000bb31:	movzx  eax,dx
   14000bb34:	add    rsp,0x20
   14000bb38:	pop    rbx
   14000bb39:	ret    
   14000bb3a:	movzx  eax,bx
   14000bb3d:	dec    eax
   14000bb3f:	add    rsp,0x20
   14000bb43:	pop    rbx
   14000bb44:	ret    
   14000bb45:	int3   
   14000bb46:	int3   
   14000bb47:	int3   
   14000bb48:	int3   
   14000bb49:	int3   
   14000bb4a:	int3   
   14000bb4b:	int3   
   14000bb4c:	int3   
   14000bb4d:	int3   
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	rex push rbx
   14000bb52:	push   rsi
   14000bb53:	push   rdi
   14000bb54:	push   r12
   14000bb56:	sub    rsp,0x28
   14000bb5a:	movzx  eax,WORD PTR [rip+0x35dff]        # 0x140041960
   14000bb61:	mov    esi,0x2800
   14000bb66:	mov    r12,rcx
   14000bb69:	mov    edi,0x258
   14000bb6e:	mov    ecx,esi
   14000bb70:	mov    WORD PTR [rip+0x32629],ax        # 0x14003e1a0
   14000bb77:	mov    WORD PTR [rip+0x32566],si        # 0x14003e0e4
   14000bb7e:	mov    WORD PTR [rip+0x32557],di        # 0x14003e0dc
   14000bb85:	call   QWORD PTR [rip+0x2388d]        # 0x14002f418
   14000bb8b:	mov    rbx,rax
   14000bb8e:	mov    QWORD PTR [rip+0x3464b],rax        # 0x1400401e0
   14000bb95:	test   rax,rax
   14000bb98:	jne    0x14000bba9
   14000bb9a:	mov    eax,0xfffffffd
   14000bb9f:	add    rsp,0x28
   14000bba3:	pop    r12
   14000bba5:	pop    rdi
   14000bba6:	pop    rsi
   14000bba7:	pop    rbx
   14000bba8:	ret    
   14000bba9:	mov    ecx,0x2580
   14000bbae:	call   QWORD PTR [rip+0x23864]        # 0x14002f418
   14000bbb4:	mov    QWORD PTR [rip+0x3462d],rax        # 0x1400401e8
   14000bbbb:	test   rax,rax
   14000bbbe:	je     0x14000bb9a
   14000bbc0:	mov    QWORD PTR [rsp+0x58],r13
   14000bbc5:	xor    r13d,r13d
   14000bbc8:	mov    rcx,rdi
   14000bbcb:	mov    QWORD PTR [rsp+0x20],r15
   14000bbd0:	add    rax,0xa
   14000bbd4:	mov    WORD PTR [rip+0x323e8],r13w        # 0x14003dfc4
   14000bbdc:	mov    WORD PTR [rip+0x323e4],r13w        # 0x14003dfc8
   14000bbe4:	nop    DWORD PTR [rax+0x0]
   14000bbe8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bbf0:	mov    QWORD PTR [rax-0xa],r13
   14000bbf4:	mov    DWORD PTR [rax-0x2],r13d
   14000bbf8:	lea    rax,[rax+0x10]
   14000bbfc:	dec    rcx
   14000bbff:	jne    0x14000bbf0
   14000bc01:	mov    eax,0xa0
   14000bc06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bc10:	mov    QWORD PTR [rbx],r13
   14000bc13:	mov    QWORD PTR [rbx+0x8],r13
   14000bc17:	mov    QWORD PTR [rbx+0x10],r13
   14000bc1b:	lea    rbx,[rbx+0x40]
   14000bc1f:	mov    QWORD PTR [rbx-0x28],r13
   14000bc23:	mov    QWORD PTR [rbx-0x20],r13
   14000bc27:	mov    QWORD PTR [rbx-0x18],r13
   14000bc2b:	mov    QWORD PTR [rbx-0x10],r13
   14000bc2f:	mov    QWORD PTR [rbx-0x8],r13
   14000bc33:	dec    rax
   14000bc36:	jne    0x14000bc10
   14000bc38:	mov    QWORD PTR [rsp+0x50],rbp
   14000bc3d:	mov    DWORD PTR [rip+0x3249d],esi        # 0x14003e0e0
   14000bc43:	mov    DWORD PTR [rip+0x3248f],edi        # 0x14003e0d8
   14000bc49:	mov    QWORD PTR [rsp+0x60],r14
   14000bc4e:	mov    r15d,r13d
   14000bc51:	lea    r8,[rip+0x324c8]        # 0x14003e120
   14000bc58:	mov    eax,r15d
   14000bc5b:	mov    esi,0x8000
   14000bc60:	lea    rdi,[rip+0x32369]        # 0x14003dfd0
   14000bc67:	mov    r9d,0x80
   14000bc6d:	mov    rdx,r8
   14000bc70:	add    rax,r12
   14000bc73:	movzx  ecx,BYTE PTR [rax]
   14000bc76:	test   cl,cl
   14000bc78:	jne    0x14000bc80
   14000bc7a:	cmp    BYTE PTR [rax+0x1],r13b
   14000bc7e:	je     0x14000bc93
   14000bc80:	mov    BYTE PTR [rdx],cl
   14000bc82:	movzx  ecx,BYTE PTR [rax+0x1]
   14000bc86:	add    rdx,0x2
   14000bc8a:	mov    BYTE PTR [rdx-0x1],cl
   14000bc8d:	add    rax,0x2
   14000bc91:	jmp    0x14000bc73
   14000bc93:	movzx  ecx,BYTE PTR [rax]
   14000bc96:	mov    ebx,r13d
   14000bc99:	mov    BYTE PTR [rdx],cl
   14000bc9b:	movzx  ecx,BYTE PTR [rax+0x1]
   14000bc9f:	mov    rax,r8
   14000bca2:	mov    BYTE PTR [rdx+0x1],cl
   14000bca5:	cmp    BYTE PTR [rax],r13b
   14000bca8:	jne    0x14000bcb0
   14000bcaa:	cmp    BYTE PTR [rax+0x1],r13b
   14000bcae:	je     0x14000bcb8
   14000bcb0:	add    rax,0x2
   14000bcb4:	inc    ebx
   14000bcb6:	jmp    0x14000bca5
   14000bcb8:	add    bx,bx
   14000bcbb:	je     0x14000beb4
   14000bcc1:	cmp    bx,r9w
   14000bcc5:	jg     0x14000bead
   14000bccb:	movsx  ebp,bx
   14000bcce:	add    r15d,0x2
   14000bcd2:	mov    rdx,rdi
   14000bcd5:	mov    rcx,r8
   14000bcd8:	add    r15d,ebp
   14000bcdb:	call   0x14000c550
   14000bce0:	test   ax,ax
   14000bce3:	js     0x14000bead
   14000bce9:	mov    rcx,rdi
   14000bcec:	mov    WORD PTR [rip+0x323e3],ax        # 0x14003e0d6
   14000bcf3:	call   0x14000c6b0
   14000bcf8:	test   ax,ax
   14000bcfb:	js     0x14000bead
   14000bd01:	mov    WORD PTR [rip+0x323c8],ax        # 0x14003e0d0
   14000bd08:	mov    ecx,r13d
   14000bd0b:	mov    rax,rdi
   14000bd0e:	xchg   ax,ax
   14000bd10:	cmp    BYTE PTR [rax],r13b
   14000bd13:	jne    0x14000bd1b
   14000bd15:	cmp    BYTE PTR [rax+0x1],r13b
   14000bd19:	je     0x14000bd23
   14000bd1b:	add    rax,0x2
   14000bd1f:	inc    ecx
   14000bd21:	jmp    0x14000bd10
   14000bd23:	add    cx,cx
   14000bd26:	movsx  rax,cx
   14000bd2a:	cmp    BYTE PTR [rax+rdi*1-0x2],0x2e
   14000bd2f:	jne    0x14000bd49
   14000bd31:	cmp    BYTE PTR [rax+rdi*1-0x1],r13b
   14000bd36:	jne    0x14000bd49
   14000bd38:	mov    WORD PTR [rax+rdi*1-0x2],r13w
   14000bd3e:	add    cx,0xfffe
   14000bd42:	or     WORD PTR [rip+0x3238d],si        # 0x14003e0d6
   14000bd49:	movzx  esi,WORD PTR [rip+0x32274]        # 0x14003dfc4
   14000bd50:	movsx  rax,cx
   14000bd54:	inc    si
   14000bd57:	mov    WORD PTR [rax+rdi*1],r13w
   14000bd5c:	movzx  edi,WORD PTR [rip+0x32379]        # 0x14003e0dc
   14000bd63:	mov    WORD PTR [rip+0x3225a],si        # 0x14003dfc4
   14000bd6a:	cmp    si,di
   14000bd6d:	jl     0x14000bdbf
   14000bd6f:	movsx  ecx,di
   14000bd72:	mov    eax,0x66666667
   14000bd77:	imul   ecx
   14000bd79:	mov    rcx,QWORD PTR [rip+0x34468]        # 0x1400401e8
   14000bd80:	sar    edx,0x2
   14000bd83:	mov    eax,edx
   14000bd85:	shr    eax,0x1f
   14000bd88:	add    edx,eax
   14000bd8a:	add    di,dx
   14000bd8d:	movsx  rdx,di
   14000bd91:	mov    WORD PTR [rip+0x32344],di        # 0x14003e0dc
   14000bd98:	shl    edx,0x4
   14000bd9b:	call   QWORD PTR [rip+0x2365f]        # 0x14002f400
   14000bda1:	mov    r14,rax
   14000bda4:	mov    QWORD PTR [rip+0x3443d],rax        # 0x1400401e8
   14000bdab:	test   rax,rax
   14000bdae:	je     0x14000bead
   14000bdb4:	movsx  ecx,di
   14000bdb7:	mov    DWORD PTR [rip+0x3231b],ecx        # 0x14003e0d8
   14000bdbd:	jmp    0x14000bdc6
   14000bdbf:	mov    r14,QWORD PTR [rip+0x34422]        # 0x1400401e8
   14000bdc6:	movsx  r8d,WORD PTR [rip+0x32316]        # 0x14003e0e4
   14000bdce:	movsx  edi,WORD PTR [rip+0x321f3]        # 0x14003dfc8
   14000bdd5:	lea    ecx,[rdi+0x2]
   14000bdd8:	mov    edx,r8d
   14000bddb:	add    ecx,ebp
   14000bddd:	cmp    ecx,r8d
   14000bde0:	jl     0x14000be2d
   14000bde2:	mov    rcx,QWORD PTR [rip+0x343f7]        # 0x1400401e0
   14000bde9:	mov    eax,0x66666667
   14000bdee:	imul   edx
   14000bdf0:	sar    edx,0x2
   14000bdf3:	mov    eax,edx
   14000bdf5:	shr    eax,0x1f
   14000bdf8:	add    edx,eax
   14000bdfa:	add    r8w,dx
   14000bdfe:	movsx  ebp,r8w
   14000be02:	mov    WORD PTR [rip+0x322da],r8w        # 0x14003e0e4
   14000be0a:	mov    edx,ebp
   14000be0c:	call   QWORD PTR [rip+0x235ee]        # 0x14002f400
   14000be12:	mov    rdx,rax
   14000be15:	mov    QWORD PTR [rip+0x343c4],rax        # 0x1400401e0
   14000be1c:	test   rax,rax
   14000be1f:	je     0x14000bead
   14000be25:	mov    DWORD PTR [rip+0x322b5],ebp        # 0x14003e0e0
   14000be2b:	jmp    0x14000be34
   14000be2d:	mov    rdx,QWORD PTR [rip+0x343ac]        # 0x1400401e0
   14000be34:	movsx  rax,di
   14000be38:	lea    rcx,[rip+0x32191]        # 0x14003dfd0
   14000be3f:	lea    r8,[rax+rdx*1]
   14000be43:	mov    rdx,r8
   14000be46:	movzx  eax,BYTE PTR [rcx]
   14000be49:	test   al,al
   14000be4b:	jne    0x14000be53
   14000be4d:	cmp    BYTE PTR [rcx+0x1],r13b
   14000be51:	je     0x14000be66
   14000be53:	mov    BYTE PTR [rdx],al
   14000be55:	movzx  eax,BYTE PTR [rcx+0x1]
   14000be59:	add    rdx,0x2
   14000be5d:	mov    BYTE PTR [rdx-0x1],al
   14000be60:	add    rcx,0x2
   14000be64:	jmp    0x14000be46
   14000be66:	movzx  eax,BYTE PTR [rcx]
   14000be69:	add    bx,0x2
   14000be6d:	mov    BYTE PTR [rdx],al
   14000be6f:	movzx  eax,BYTE PTR [rcx+0x1]
   14000be73:	lea    rcx,[r14-0x10]
   14000be77:	mov    BYTE PTR [rdx+0x1],al
   14000be7a:	movsx  rax,si
   14000be7e:	shl    rax,0x4
   14000be82:	add    rcx,rax
   14000be85:	add    di,bx
   14000be88:	mov    QWORD PTR [rcx],r8
   14000be8b:	movzx  eax,WORD PTR [rip+0x3223e]        # 0x14003e0d0
   14000be92:	mov    WORD PTR [rip+0x3212f],di        # 0x14003dfc8
   14000be99:	mov    WORD PTR [rcx+0x8],ax
   14000be9d:	movzx  eax,WORD PTR [rip+0x32232]        # 0x14003e0d6
   14000bea4:	mov    WORD PTR [rcx+0xa],ax
   14000bea8:	jmp    0x14000bc51
   14000bead:	mov    eax,0xfffffffd
   14000beb2:	jmp    0x14000beb8
   14000beb4:	movzx  eax,r13w
   14000beb8:	mov    r14,QWORD PTR [rsp+0x60]
   14000bebd:	mov    rbp,QWORD PTR [rsp+0x50]
   14000bec2:	mov    r13,QWORD PTR [rsp+0x58]
   14000bec7:	mov    r15,QWORD PTR [rsp+0x20]
   14000becc:	add    rsp,0x28
   14000bed0:	pop    r12
   14000bed2:	pop    rdi
   14000bed3:	pop    rsi
   14000bed4:	pop    rbx
   14000bed5:	ret    
   14000bed6:	int3   
   14000bed7:	int3   
   14000bed8:	int3   
   14000bed9:	int3   
   14000beda:	int3   
   14000bedb:	int3   
   14000bedc:	int3   
   14000bedd:	int3   
   14000bede:	int3   
   14000bedf:	int3   
   14000bee0:	mov    QWORD PTR [rsp+0x18],rbx
   14000bee5:	push   rbp
   14000bee6:	push   rsi
   14000bee7:	push   rdi
   14000bee8:	push   r12
   14000beea:	push   r13
   14000beec:	push   r14
   14000beee:	push   r15
   14000bef0:	sub    rsp,0x70
   14000bef4:	mov    rax,QWORD PTR [rip+0x30105]        # 0x14003c000
   14000befb:	xor    rax,rsp
   14000befe:	mov    QWORD PTR [rsp+0x60],rax
   14000bf03:	movzx  eax,WORD PTR [rip+0x35a56]        # 0x140041960
   14000bf0a:	mov    r15,rcx
   14000bf0d:	mov    r8,rcx
   14000bf10:	mov    r14,rdx
   14000bf13:	lea    rcx,[rip+0x36aa6]        # 0x1400429c0
   14000bf1a:	mov    edx,0x80
   14000bf1f:	mov    WORD PTR [rip+0x3227a],ax        # 0x14003e1a0
   14000bf26:	call   0x14002a640
   14000bf2b:	xor    r12d,r12d
   14000bf2e:	movzx  ebx,ax
   14000bf31:	test   ax,ax
   14000bf34:	jle    0x14000c502
   14000bf3a:	lea    rbp,[rip+0x36aff]        # 0x140042a40
   14000bf41:	lea    r13,[rip+0x300f0]        # 0x14003c038
   14000bf48:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bf50:	mov    rcx,QWORD PTR [r15]
   14000bf53:	mov    edi,DWORD PTR [rip+0x3224f]        # 0x14003e1a8
   14000bf59:	mov    r9d,0x1
   14000bf5f:	xor    r8d,r8d
   14000bf62:	xor    edx,edx
   14000bf64:	call   QWORD PTR [rip+0x232ae]        # 0x14002f218
   14000bf6a:	mov    esi,eax
   14000bf6c:	lea    ecx,[rax+0x1]
   14000bf6f:	test   ecx,0xfffffffe
   14000bf75:	jne    0x14000bfac
   14000bf77:	call   QWORD PTR [rip+0x231e3]        # 0x14002f160
   14000bf7d:	cmp    eax,0x58
   14000bf80:	jae    0x14000bf90
   14000bf82:	mov    ecx,eax
   14000bf84:	lea    rax,[rip+0x25115]        # 0x1400310a0
   14000bf8b:	mov    edx,DWORD PTR [rax+rcx*4]
   14000bf8e:	jmp    0x14000bf95
   14000bf90:	mov    edx,0x106
   14000bf95:	mov    DWORD PTR [rip+0x3711d],edx        # 0x1400430b8
   14000bf9b:	mov    DWORD PTR [rip+0x37523],0x2        # 0x1400434c8
   14000bfa5:	mov    BYTE PTR [rip+0x37414],r12b        # 0x1400433c0
   14000bfac:	test   edi,edi
   14000bfae:	je     0x14000bfc3
   14000bfb0:	imul   eax,esi,0x64
   14000bfb3:	xor    edx,edx
   14000bfb5:	div    edi
   14000bfb7:	mov    r8d,eax
   14000bfba:	mov    WORD PTR [rip+0x32e9b],ax        # 0x14003ee5c
   14000bfc1:	jmp    0x14000bfcb
   14000bfc3:	movzx  r8d,WORD PTR [rip+0x32e91]        # 0x14003ee5c
   14000bfcb:	movzx  edx,WORD PTR [rip+0x32e72]        # 0x14003ee44
   14000bfd2:	movzx  r9d,r8w
   14000bfd6:	mov    ecx,r9d
   14000bfd9:	mov    eax,edx
   14000bfdb:	sub    ecx,edx
   14000bfdd:	cmp    ecx,0x1
   14000bfe0:	jl     0x14000c036
   14000bfe2:	movzx  ecx,WORD PTR [rip+0x32e77]        # 0x14003ee60
   14000bfe9:	inc    dx
   14000bfec:	mov    eax,0x51eb851f
   14000bff1:	mov    WORD PTR [rip+0x32e4c],dx        # 0x14003ee44
   14000bff8:	mov    WORD PTR [rip+0x321a4],r8w        # 0x14003e1a4
   14000c000:	imul   ecx,r9d
   14000c004:	imul   ecx
   14000c006:	mov    ecx,edx
   14000c008:	lea    rdx,[rip+0x321a1]        # 0x14003e1b0
   14000c00f:	sar    ecx,0x5
   14000c012:	mov    eax,ecx
   14000c014:	shr    eax,0x1f
   14000c017:	add    ecx,eax
   14000c019:	add    cx,WORD PTR [rip+0x32e28]        # 0x14003ee48
   14000c020:	mov    WORD PTR [rip+0x32e29],cx        # 0x14003ee50
   14000c027:	call   QWORD PTR [rip+0x35a7b]        # 0x140041aa8
   14000c02d:	test   ax,ax
   14000c030:	jne    0x14000c52b
   14000c036:	movzx  eax,WORD PTR [rip+0x36983]        # 0x1400429c0
   14000c03d:	cmp    ax,0x1a
   14000c041:	je     0x14000c4e2
   14000c047:	cmp    bx,0x4
   14000c04b:	jne    0x14000c061
   14000c04d:	cmp    ax,0xd
   14000c051:	jne    0x14000c061
   14000c053:	cmp    WORD PTR [rip+0x36967],0xa        # 0x1400429c2
   14000c05b:	je     0x14000c4e2
   14000c061:	add    bx,0xfffc
   14000c065:	movsx  rax,bx
   14000c069:	cmp    rax,0x80
   14000c06f:	jae    0x14000c546
   14000c075:	lea    r8,[rip+0x36944]        # 0x1400429c0
   14000c07c:	mov    BYTE PTR [rax+r8*1],r12b
   14000c080:	movsx  eax,bx
   14000c083:	inc    eax
   14000c085:	movsxd rcx,eax
   14000c088:	cmp    rcx,0x80
   14000c08f:	jae    0x14000c540
   14000c095:	mov    BYTE PTR [rcx+r8*1],r12b
   14000c099:	mov    rdx,rbp
   14000c09c:	mov    rcx,r8
   14000c09f:	call   0x14000c550
   14000c0a4:	test   ax,ax
   14000c0a7:	js     0x14000c539
   14000c0ad:	mov    rcx,rbp
   14000c0b0:	mov    WORD PTR [rip+0x36a8f],ax        # 0x140042b46
   14000c0b7:	call   0x14000c6b0
   14000c0bc:	test   ax,ax
   14000c0bf:	js     0x14000c539
   14000c0c5:	mov    WORD PTR [rip+0x36a74],ax        # 0x140042b40
   14000c0cc:	mov    ecx,r12d
   14000c0cf:	mov    rax,rbp
   14000c0d2:	cmp    BYTE PTR [rax],r12b
   14000c0d5:	jne    0x14000c0dd
   14000c0d7:	cmp    BYTE PTR [rax+0x1],r12b
   14000c0db:	je     0x14000c0e5
   14000c0dd:	add    rax,0x2
   14000c0e1:	inc    ecx
   14000c0e3:	jmp    0x14000c0d2
   14000c0e5:	add    cx,cx
   14000c0e8:	movsx  rax,cx
   14000c0ec:	cmp    BYTE PTR [rax+rbp*1-0x2],0x2e
   14000c0f1:	jne    0x14000c110
   14000c0f3:	cmp    BYTE PTR [rax+rbp*1-0x1],r12b
   14000c0f8:	jne    0x14000c110
   14000c0fa:	mov    WORD PTR [rax+rbp*1-0x2],r12w
   14000c100:	mov    eax,0x8000
   14000c105:	add    cx,0xfffe
   14000c109:	or     WORD PTR [rip+0x36a36],ax        # 0x140042b46
   14000c110:	movsx  rdi,cx
   14000c114:	movsx  rax,cx
   14000c118:	mov    rcx,r12
   14000c11b:	mov    WORD PTR [rax+rbp*1],r12w
   14000c120:	mov    rbx,rdi
   14000c123:	test   edi,edi
   14000c125:	jle    0x14000c13b
   14000c127:	nop    WORD PTR [rax+rax*1+0x0]
   14000c130:	not    BYTE PTR [rcx+rbp*1]
   14000c133:	inc    rcx
   14000c136:	cmp    rcx,rbx
   14000c139:	jl     0x14000c130
   14000c13b:	mov    rcx,QWORD PTR [r14]
   14000c13e:	lea    r9,[rsp+0x34]
   14000c143:	mov    r8d,edi
   14000c146:	mov    rdx,rbp
   14000c149:	mov    QWORD PTR [rsp+0x20],r12
   14000c14e:	call   QWORD PTR [rip+0x230bc]        # 0x14002f210
   14000c154:	test   eax,eax
   14000c156:	jne    0x14000c18d
   14000c158:	call   QWORD PTR [rip+0x23002]        # 0x14002f160
   14000c15e:	cmp    eax,0x58
   14000c161:	jae    0x14000c171
   14000c163:	lea    rcx,[rip+0x24f36]        # 0x1400310a0
   14000c16a:	mov    eax,eax
   14000c16c:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000c16f:	jmp    0x14000c176
   14000c171:	mov    ecx,0x106
   14000c176:	mov    DWORD PTR [rip+0x36f3c],ecx        # 0x1400430b8
   14000c17c:	mov    DWORD PTR [rip+0x37342],0x2        # 0x1400434c8
   14000c186:	mov    BYTE PTR [rip+0x37233],r12b        # 0x1400433c0
   14000c18d:	mov    rcx,r12
   14000c190:	test   edi,edi
   14000c192:	jle    0x14000c1b2
   14000c194:	nop    DWORD PTR [rax+0x0]
   14000c198:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c1a0:	movzx  eax,BYTE PTR [rcx+rbp*1]
   14000c1a4:	inc    rcx
   14000c1a7:	not    al
   14000c1a9:	mov    BYTE PTR [rcx+rbp*1-0x1],al
   14000c1ad:	cmp    rcx,rbx
   14000c1b0:	jl     0x14000c1a0
   14000c1b2:	cmp    DWORD PTR [rsp+0x34],edi
   14000c1b6:	jne    0x14000c532
   14000c1bc:	lea    rbx,[rip+0x2fe7d]        # 0x14003c040
   14000c1c3:	lea    rsi,[rip+0x368f6]        # 0x140042ac0
   14000c1ca:	mov    rcx,rbx
   14000c1cd:	mov    rdx,rsi
   14000c1d0:	movzx  eax,BYTE PTR [rcx]
   14000c1d3:	test   al,al
   14000c1d5:	jne    0x14000c1dd
   14000c1d7:	cmp    BYTE PTR [rcx+0x1],r12b
   14000c1db:	je     0x14000c1f0
   14000c1dd:	mov    BYTE PTR [rdx],al
   14000c1df:	movzx  eax,BYTE PTR [rcx+0x1]
   14000c1e3:	add    rdx,0x2
   14000c1e7:	mov    BYTE PTR [rdx-0x1],al
   14000c1ea:	add    rcx,0x2
   14000c1ee:	jmp    0x14000c1d0
   14000c1f0:	movzx  eax,BYTE PTR [rcx]
   14000c1f3:	mov    BYTE PTR [rdx],al
   14000c1f5:	movzx  eax,BYTE PTR [rcx+0x1]
   14000c1f9:	lea    rcx,[rsp+0x50]
   14000c1fe:	mov    BYTE PTR [rdx+0x1],al
   14000c201:	movzx  r8d,WORD PTR [rip+0x36937]        # 0x140042b40
   14000c209:	lea    rdx,[rip+0x285b4]        # 0x1400347c4
   14000c210:	call   QWORD PTR [rip+0x2323a]        # 0x14002f450
   14000c216:	cmp    r12w,ax
   14000c21a:	jge    0x14000c247
   14000c21c:	lea    r8,[rsp+0x50]
   14000c221:	lea    rdx,[rsp+0x41]
   14000c226:	movzx  r9d,ax
   14000c22a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c230:	movzx  ecx,BYTE PTR [r8]
   14000c234:	mov    BYTE PTR [rdx],r12b
   14000c237:	lea    rdx,[rdx+0x2]
   14000c23b:	mov    BYTE PTR [rdx-0x3],cl
   14000c23e:	lea    r8,[r8+0x1]
   14000c242:	dec    r9
   14000c245:	jne    0x14000c230
   14000c247:	movsx  rax,ax
   14000c24b:	lea    rdx,[rsp+0x40]
   14000c250:	mov    rcx,rsi
   14000c253:	mov    WORD PTR [rsp+rax*2+0x40],r12w
   14000c259:	nop    DWORD PTR [rax+0x0]
   14000c260:	cmp    BYTE PTR [rcx],r12b
   14000c263:	jne    0x14000c26b
   14000c265:	cmp    BYTE PTR [rcx+0x1],r12b
   14000c269:	je     0x14000c271
   14000c26b:	add    rcx,0x2
   14000c26f:	jmp    0x14000c260
   14000c271:	movzx  eax,BYTE PTR [rdx]
   14000c274:	test   al,al
   14000c276:	jne    0x14000c27e
   14000c278:	cmp    BYTE PTR [rdx+0x1],r12b
   14000c27c:	je     0x14000c291
   14000c27e:	mov    BYTE PTR [rcx],al
   14000c280:	movzx  eax,BYTE PTR [rdx+0x1]
   14000c284:	add    rcx,0x2
   14000c288:	mov    BYTE PTR [rcx-0x1],al
   14000c28b:	add    rdx,0x2
   14000c28f:	jmp    0x14000c271
   14000c291:	mov    WORD PTR [rcx],r12w
   14000c295:	mov    rdx,rbx
   14000c298:	mov    rcx,rsi
   14000c29b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c2a0:	cmp    BYTE PTR [rcx],r12b
   14000c2a3:	jne    0x14000c2ab
   14000c2a5:	cmp    BYTE PTR [rcx+0x1],r12b
   14000c2a9:	je     0x14000c2b1
   14000c2ab:	add    rcx,0x2
   14000c2af:	jmp    0x14000c2a0
   14000c2b1:	movzx  eax,BYTE PTR [rdx]
   14000c2b4:	test   al,al
   14000c2b6:	jne    0x14000c2be
   14000c2b8:	cmp    BYTE PTR [rdx+0x1],r12b
   14000c2bc:	je     0x14000c2d1
   14000c2be:	mov    BYTE PTR [rcx],al
   14000c2c0:	movzx  eax,BYTE PTR [rdx+0x1]
   14000c2c4:	add    rcx,0x2
   14000c2c8:	mov    BYTE PTR [rcx-0x1],al
   14000c2cb:	add    rdx,0x2
   14000c2cf:	jmp    0x14000c2b1
   14000c2d1:	mov    WORD PTR [rcx],r12w
   14000c2d5:	movzx  r8d,WORD PTR [rip+0x36869]        # 0x140042b46
   14000c2dd:	lea    rdx,[rip+0x284e0]        # 0x1400347c4
   14000c2e4:	lea    rcx,[rsp+0x58]
   14000c2e9:	call   QWORD PTR [rip+0x23161]        # 0x14002f450
   14000c2ef:	cmp    r12w,ax
   14000c2f3:	jge    0x14000c327
   14000c2f5:	lea    r8,[rsp+0x58]
   14000c2fa:	lea    rdx,[rsp+0x41]
   14000c2ff:	movzx  r9d,ax
   14000c303:	nop    DWORD PTR [rax+0x0]
   14000c307:	nop    WORD PTR [rax+rax*1+0x0]
   14000c310:	movzx  ecx,BYTE PTR [r8]
   14000c314:	mov    BYTE PTR [rdx],r12b
   14000c317:	lea    rdx,[rdx+0x2]
   14000c31b:	mov    BYTE PTR [rdx-0x3],cl
   14000c31e:	lea    r8,[r8+0x1]
   14000c322:	dec    r9
   14000c325:	jne    0x14000c310
   14000c327:	movsx  rax,ax
   14000c32b:	lea    rdx,[rsp+0x40]
   14000c330:	mov    WORD PTR [rsp+rax*2+0x40],r12w
   14000c336:	mov    rax,rsi
   14000c339:	nop    DWORD PTR [rax+0x0]
   14000c340:	cmp    BYTE PTR [rax],r12b
   14000c343:	jne    0x14000c34b
   14000c345:	cmp    BYTE PTR [rax+0x1],r12b
   14000c349:	je     0x14000c351
   14000c34b:	add    rax,0x2
   14000c34f:	jmp    0x14000c340
   14000c351:	movzx  ecx,BYTE PTR [rdx]
   14000c354:	test   cl,cl
   14000c356:	jne    0x14000c35e
   14000c358:	cmp    BYTE PTR [rdx+0x1],r12b
   14000c35c:	je     0x14000c371
   14000c35e:	mov    BYTE PTR [rax],cl
   14000c360:	movzx  ecx,BYTE PTR [rdx+0x1]
   14000c364:	add    rax,0x2
   14000c368:	mov    BYTE PTR [rax-0x1],cl
   14000c36b:	add    rdx,0x2
   14000c36f:	jmp    0x14000c351
   14000c371:	mov    WORD PTR [rax],r12w
   14000c375:	mov    ecx,r12d
   14000c378:	mov    rax,rsi
   14000c37b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c380:	cmp    BYTE PTR [rax],r12b
   14000c383:	jne    0x14000c38b
   14000c385:	cmp    BYTE PTR [rax+0x1],r12b
   14000c389:	je     0x14000c393
   14000c38b:	add    rax,0x2
   14000c38f:	inc    ecx
   14000c391:	jmp    0x14000c380
   14000c393:	add    cx,cx
   14000c396:	movsx  rdi,cx
   14000c39a:	mov    rcx,r12
   14000c39d:	mov    rbx,rdi
   14000c3a0:	test   edi,edi
   14000c3a2:	jle    0x14000c3bf
   14000c3a4:	nop    DWORD PTR [rax+0x0]
   14000c3a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c3b0:	not    BYTE PTR [rcx+rbp*1+0x80]
   14000c3b7:	inc    rcx
   14000c3ba:	cmp    rcx,rbx
   14000c3bd:	jl     0x14000c3b0
   14000c3bf:	mov    rcx,QWORD PTR [r14]
   14000c3c2:	lea    r9,[rsp+0x38]
   14000c3c7:	mov    r8d,edi
   14000c3ca:	mov    rdx,rsi
   14000c3cd:	mov    QWORD PTR [rsp+0x20],r12
   14000c3d2:	call   QWORD PTR [rip+0x22e38]        # 0x14002f210
   14000c3d8:	test   eax,eax
   14000c3da:	jne    0x14000c411
   14000c3dc:	call   QWORD PTR [rip+0x22d7e]        # 0x14002f160
   14000c3e2:	cmp    eax,0x58
   14000c3e5:	jae    0x14000c3f5
   14000c3e7:	lea    rcx,[rip+0x24cb2]        # 0x1400310a0
   14000c3ee:	mov    eax,eax
   14000c3f0:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000c3f3:	jmp    0x14000c3fa
   14000c3f5:	mov    ecx,0x106
   14000c3fa:	mov    DWORD PTR [rip+0x36cb8],ecx        # 0x1400430b8
   14000c400:	mov    DWORD PTR [rip+0x370be],0x2        # 0x1400434c8
   14000c40a:	mov    BYTE PTR [rip+0x36faf],r12b        # 0x1400433c0
   14000c411:	mov    rcx,r12
   14000c414:	test   edi,edi
   14000c416:	jle    0x14000c42f
   14000c418:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c420:	not    BYTE PTR [rcx+rbp*1+0x80]
   14000c427:	inc    rcx
   14000c42a:	cmp    rcx,rbx
   14000c42d:	jl     0x14000c420
   14000c42f:	cmp    DWORD PTR [rsp+0x38],edi
   14000c433:	jne    0x14000c532
   14000c439:	mov    rax,r13
   14000c43c:	mov    ecx,r12d
   14000c43f:	nop
   14000c440:	cmp    BYTE PTR [rax],r12b
   14000c443:	jne    0x14000c44b
   14000c445:	cmp    BYTE PTR [rax+0x1],r12b
   14000c449:	je     0x14000c453
   14000c44b:	add    rax,0x2
   14000c44f:	inc    ecx
   14000c451:	jmp    0x14000c440
   14000c453:	add    cx,cx
   14000c456:	movsx  rdi,cx
   14000c45a:	mov    rcx,r12
   14000c45d:	mov    rbx,rdi
   14000c460:	test   edi,edi
   14000c462:	jle    0x14000c470
   14000c464:	not    BYTE PTR [rcx+r13*1]
   14000c468:	inc    rcx
   14000c46b:	cmp    rcx,rbx
   14000c46e:	jl     0x14000c464
   14000c470:	mov    rcx,QWORD PTR [r14]
   14000c473:	lea    r9,[rsp+0x30]
   14000c478:	mov    r8d,edi
   14000c47b:	mov    rdx,r13
   14000c47e:	mov    QWORD PTR [rsp+0x20],r12
   14000c483:	call   QWORD PTR [rip+0x22d87]        # 0x14002f210
   14000c489:	test   eax,eax
   14000c48b:	jne    0x14000c4c2
   14000c48d:	call   QWORD PTR [rip+0x22ccd]        # 0x14002f160
   14000c493:	cmp    eax,0x58
   14000c496:	jae    0x14000c4a6
   14000c498:	lea    rcx,[rip+0x24c01]        # 0x1400310a0
   14000c49f:	mov    eax,eax
   14000c4a1:	mov    ecx,DWORD PTR [rcx+rax*4]
   14000c4a4:	jmp    0x14000c4ab
   14000c4a6:	mov    ecx,0x106
   14000c4ab:	mov    DWORD PTR [rip+0x36c07],ecx        # 0x1400430b8
   14000c4b1:	mov    DWORD PTR [rip+0x3700d],0x2        # 0x1400434c8
   14000c4bb:	mov    BYTE PTR [rip+0x36efe],r12b        # 0x1400433c0
   14000c4c2:	mov    rcx,r12
   14000c4c5:	test   edi,edi
   14000c4c7:	jle    0x14000c4dc
   14000c4c9:	nop    DWORD PTR [rax+0x0]
   14000c4d0:	not    BYTE PTR [rcx+r13*1]
   14000c4d4:	inc    rcx
   14000c4d7:	cmp    rcx,rbx
   14000c4da:	jl     0x14000c4d0
   14000c4dc:	cmp    DWORD PTR [rsp+0x30],edi
   14000c4e0:	jne    0x14000c532
   14000c4e2:	lea    rcx,[rip+0x364d7]        # 0x1400429c0
   14000c4e9:	mov    edx,0x80
   14000c4ee:	mov    r8,r15
   14000c4f1:	call   0x14002a640
   14000c4f6:	movzx  ebx,ax
   14000c4f9:	test   ax,ax
   14000c4fc:	jg     0x14000bf50
   14000c502:	movzx  eax,r12w
   14000c506:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c50b:	xor    rcx,rsp
   14000c50e:	call   0x14002c960
   14000c513:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000c51b:	add    rsp,0x70
   14000c51f:	pop    r15
   14000c521:	pop    r14
   14000c523:	pop    r13
   14000c525:	pop    r12
   14000c527:	pop    rdi
   14000c528:	pop    rsi
   14000c529:	pop    rbp
   14000c52a:	ret    
   14000c52b:	mov    eax,0xfffffffc
   14000c530:	jmp    0x14000c506
   14000c532:	mov    eax,0xfffffffe
   14000c537:	jmp    0x14000c506
   14000c539:	mov    eax,0xfffffffd
   14000c53e:	jmp    0x14000c506
   14000c540:	call   0x14002cbc8
   14000c545:	int3   
   14000c546:	call   0x14002cbc8
   14000c54b:	int3   
   14000c54c:	int3   
   14000c54d:	int3   
   14000c54e:	int3   
   14000c54f:	int3   
   14000c550:	mov    QWORD PTR [rsp+0x10],rbx
   14000c555:	mov    QWORD PTR [rsp+0x18],rbp
   14000c55a:	push   rsi
   14000c55b:	push   rdi
   14000c55c:	push   r14
   14000c55e:	sub    rsp,0x20
   14000c562:	movzx  eax,WORD PTR [rcx]
   14000c565:	xor    r14d,r14d
   14000c568:	mov    rbp,rdx
   14000c56b:	mov    rsi,rcx
   14000c56e:	movzx  ebx,r14w
   14000c572:	movzx  r8d,r14w
   14000c576:	movzx  edi,r14w
   14000c57a:	movzx  r9d,r14w
   14000c57e:	mov    r10d,r14d
   14000c581:	mov    QWORD PTR [rsp+0x40],r14
   14000c586:	mov    r11d,r14d
   14000c589:	test   ax,ax
   14000c58c:	je     0x14000c65a
   14000c592:	mov    rdx,rcx
   14000c595:	cmp    ax,0x5f
   14000c599:	jne    0x14000c620
   14000c59f:	test   r9w,r9w
   14000c5a3:	jne    0x14000c5af
   14000c5a5:	movsx  eax,bx
   14000c5a8:	cdq    
   14000c5a9:	sub    eax,edx
   14000c5ab:	sar    eax,1
   14000c5ad:	mov    edi,eax
   14000c5af:	movsx  eax,r8w
   14000c5b3:	mov    ecx,0x1
   14000c5b8:	cdq    
   14000c5b9:	sub    eax,edx
   14000c5bb:	sar    eax,1
   14000c5bd:	cmp    r8w,0x40
   14000c5c2:	jge    0x14000c5f0
   14000c5c4:	cmp    ax,0x20
   14000c5c8:	jle    0x14000c5d6
   14000c5ca:	mov    ecx,r14d
   14000c5cd:	or     r11d,ecx
   14000c5d0:	inc    r9w
   14000c5d4:	jmp    0x14000c636
   14000c5d6:	cmp    r14w,ax
   14000c5da:	jge    0x14000c5e7
   14000c5dc:	movzx  eax,ax
   14000c5df:	nop
   14000c5e0:	add    ecx,ecx
   14000c5e2:	dec    rax
   14000c5e5:	jne    0x14000c5e0
   14000c5e7:	or     r11d,ecx
   14000c5ea:	inc    r9w
   14000c5ee:	jmp    0x14000c636
   14000c5f0:	sub    ax,0x20
   14000c5f4:	cmp    ax,0x20
   14000c5f8:	jle    0x14000c606
   14000c5fa:	mov    ecx,r14d
   14000c5fd:	or     r10d,ecx
   14000c600:	inc    r9w
   14000c604:	jmp    0x14000c636
   14000c606:	cmp    r14w,ax
   14000c60a:	jge    0x14000c617
   14000c60c:	movzx  eax,ax
   14000c60f:	nop
   14000c610:	add    ecx,ecx
   14000c612:	dec    rax
   14000c615:	jne    0x14000c610
   14000c617:	or     r10d,ecx
   14000c61a:	inc    r9w
   14000c61e:	jmp    0x14000c636
   14000c620:	movzx  eax,BYTE PTR [rdx]
   14000c623:	movsx  rcx,bx
   14000c627:	add    bx,0x2
   14000c62b:	mov    BYTE PTR [rcx+rbp*1],al
   14000c62e:	movzx  eax,BYTE PTR [rdx+0x1]
   14000c632:	mov    BYTE PTR [rcx+rbp*1+0x1],al
   14000c636:	add    r8w,0x2
   14000c63b:	movsx  rax,r8w
   14000c63f:	lea    rdx,[rax+rsi*1]
   14000c643:	movzx  eax,WORD PTR [rax+rsi*1]
   14000c647:	test   ax,ax
   14000c64a:	jne    0x14000c595
   14000c650:	mov    DWORD PTR [rsp+0x44],r10d
   14000c655:	mov    DWORD PTR [rsp+0x40],r11d
   14000c65a:	movsx  rcx,bx
   14000c65e:	mov    WORD PTR [rcx+rbp*1],r14w
   14000c663:	test   r9w,r9w
   14000c667:	jne    0x14000c66f
   14000c669:	movzx  eax,r14w
   14000c66d:	jmp    0x14000c68e
   14000c66f:	cmp    r9w,0x1
   14000c674:	jne    0x14000c67b
   14000c676:	movzx  eax,di
   14000c679:	jmp    0x14000c68e
   14000c67b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c680:	call   0x14000c8d0
   14000c685:	test   ax,ax
   14000c688:	js     0x14000c68e
   14000c68a:	cwde   
   14000c68b:	add    eax,0x40
   14000c68e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c693:	mov    rbp,QWORD PTR [rsp+0x50]
   14000c698:	add    rsp,0x20
   14000c69c:	pop    r14
   14000c69e:	pop    rdi
   14000c69f:	pop    rsi
   14000c6a0:	ret    
   14000c6a1:	int3   
   14000c6a2:	int3   
   14000c6a3:	int3   
   14000c6a4:	int3   
   14000c6a5:	int3   
   14000c6a6:	int3   
   14000c6a7:	int3   
   14000c6a8:	int3   
   14000c6a9:	int3   
   14000c6aa:	int3   
   14000c6ab:	int3   
   14000c6ac:	int3   
   14000c6ad:	int3   
   14000c6ae:	int3   
   14000c6af:	int3   
   14000c6b0:	rex push rbx
   14000c6b2:	push   rbp
   14000c6b3:	push   r13
   14000c6b5:	push   r15
   14000c6b7:	sub    rsp,0x28
   14000c6bb:	movzx  eax,WORD PTR [rcx]
   14000c6be:	xor    r15d,r15d
   14000c6c1:	mov    QWORD PTR [rsp+0x58],rsi
   14000c6c6:	mov    QWORD PTR [rsp+0x60],rdi
   14000c6cb:	mov    QWORD PTR [rsp+0x20],r14
   14000c6d0:	movzx  r10d,r15w
   14000c6d4:	mov    r14,rcx
   14000c6d7:	movzx  ebp,r15w
   14000c6db:	movzx  ebx,r15w
   14000c6df:	mov    edi,r15d
   14000c6e2:	mov    QWORD PTR [rsp+0x50],r15
   14000c6e7:	mov    esi,r15d
   14000c6ea:	lea    r13d,[r15+0x1]
   14000c6ee:	test   ax,ax
   14000c6f1:	je     0x14000c849
   14000c6f7:	mov    QWORD PTR [rsp+0x68],r12
   14000c6fc:	mov    r11,rcx
   14000c6ff:	mov    ecx,0xff00
   14000c704:	lea    r12,[rip+0x24b35]        # 0x140031240
   14000c70b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c710:	movzx  r8d,ax
   14000c714:	shr    r8w,0x8
   14000c719:	cmp    r8w,0xf
   14000c71e:	ja     0x14000c821
   14000c724:	movzx  r9d,ax
   14000c728:	and    r9w,cx
   14000c72c:	jne    0x14000c73b
   14000c72e:	lea    ecx,[rax-0x41]
   14000c731:	cmp    cl,0x19
   14000c734:	jbe    0x14000c77c
   14000c736:	jmp    0x14000c81c
   14000c73b:	lea    ecx,[r8-0x1]
   14000c73f:	add    cl,cl
   14000c741:	movzx  edx,cl
   14000c744:	cmp    al,BYTE PTR [rdx+r12*1]
   14000c748:	jb     0x14000c81c
   14000c74e:	cmp    al,BYTE PTR [rdx+r12*1+0x1]
   14000c753:	ja     0x14000c81c
   14000c759:	movzx  edx,al
   14000c75c:	and    edx,0x80000001
   14000c762:	jge    0x14000c76b
   14000c764:	dec    edx
   14000c766:	or     edx,0xfffffffe
   14000c769:	inc    edx
   14000c76b:	test   edx,edx
   14000c76d:	mov    ecx,r15d
   14000c770:	sete   cl
   14000c773:	test   cx,cx
   14000c776:	je     0x14000c81c
   14000c77c:	test   r9w,r9w
   14000c780:	jne    0x14000c790
   14000c782:	lea    ecx,[rax-0x41]
   14000c785:	cmp    cl,0x19
   14000c788:	ja     0x14000c7ab
   14000c78a:	or     ax,0x20
   14000c78e:	jmp    0x14000c7ab
   14000c790:	dec    r8b
   14000c793:	add    r8b,r8b
   14000c796:	movzx  ecx,r8b
   14000c79a:	cmp    al,BYTE PTR [rcx+r12*1]
   14000c79e:	jb     0x14000c7ab
   14000c7a0:	cmp    al,BYTE PTR [rcx+r12*1+0x1]
   14000c7a5:	ja     0x14000c7ab
   14000c7a7:	or     ax,r13w
   14000c7ab:	mov    WORD PTR [r11],ax
   14000c7af:	test   bx,bx
   14000c7b2:	jne    0x14000c7bf
   14000c7b4:	movsx  eax,r10w
   14000c7b8:	cdq    
   14000c7b9:	sub    eax,edx
   14000c7bb:	sar    eax,1
   14000c7bd:	mov    ebp,eax
   14000c7bf:	movsx  eax,r10w
   14000c7c3:	mov    ecx,r13d
   14000c7c6:	cdq    
   14000c7c7:	sub    eax,edx
   14000c7c9:	sar    eax,1
   14000c7cb:	cmp    r10w,0x40
   14000c7d0:	jge    0x14000c7f3
   14000c7d2:	cmp    ax,0x20
   14000c7d6:	jle    0x14000c7df
   14000c7d8:	mov    ecx,r15d
   14000c7db:	or     esi,ecx
   14000c7dd:	jmp    0x14000c819
   14000c7df:	cmp    r15w,ax
   14000c7e3:	jge    0x14000c7ef
   14000c7e5:	movzx  eax,ax
   14000c7e8:	add    ecx,ecx
   14000c7ea:	dec    rax
   14000c7ed:	jne    0x14000c7e8
   14000c7ef:	or     esi,ecx
   14000c7f1:	jmp    0x14000c819
   14000c7f3:	sub    ax,0x20
   14000c7f7:	cmp    ax,0x20
   14000c7fb:	jle    0x14000c802
   14000c7fd:	mov    ecx,r15d
   14000c800:	jmp    0x14000c817
   14000c802:	cmp    r15w,ax
   14000c806:	jge    0x14000c817
   14000c808:	movzx  eax,ax
   14000c80b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c810:	add    ecx,ecx
   14000c812:	dec    rax
   14000c815:	jne    0x14000c810
   14000c817:	or     edi,ecx
   14000c819:	inc    bx
   14000c81c:	mov    ecx,0xff00
   14000c821:	add    r10w,0x2
   14000c826:	movsx  rax,r10w
   14000c82a:	lea    r11,[rax+r14*1]
   14000c82e:	movzx  eax,WORD PTR [rax+r14*1]
   14000c833:	test   ax,ax
   14000c836:	jne    0x14000c710
   14000c83c:	mov    r12,QWORD PTR [rsp+0x68]
   14000c841:	mov    DWORD PTR [rsp+0x54],edi
   14000c845:	mov    DWORD PTR [rsp+0x50],esi
   14000c849:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c84e:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c853:	movsx  rcx,r10w
   14000c857:	mov    WORD PTR [rcx+r14*1],r15w
   14000c85c:	mov    r14,QWORD PTR [rsp+0x20]
   14000c861:	test   bx,bx
   14000c864:	jne    0x14000c875
   14000c866:	movzx  eax,r15w
   14000c86a:	add    rsp,0x28
   14000c86e:	pop    r15
   14000c870:	pop    r13
   14000c872:	pop    rbp
   14000c873:	pop    rbx
   14000c874:	ret    
   14000c875:	cmp    bx,r13w
   14000c879:	jne    0x14000c88f
   14000c87b:	test   bp,bp
   14000c87e:	jne    0x14000c88f
   14000c880:	movzx  eax,r13w
   14000c884:	add    rsp,0x28
   14000c888:	pop    r15
   14000c88a:	pop    r13
   14000c88c:	pop    rbp
   14000c88d:	pop    rbx
   14000c88e:	ret    
   14000c88f:	movsx  eax,r10w
   14000c893:	movsx  ecx,bx
   14000c896:	cdq    
   14000c897:	sub    eax,edx
   14000c899:	sar    eax,1
   14000c89b:	cmp    ecx,eax
   14000c89d:	jne    0x14000c8af
   14000c89f:	mov    eax,0x2
   14000c8a4:	add    rsp,0x28
   14000c8a8:	pop    r15
   14000c8aa:	pop    r13
   14000c8ac:	pop    rbp
   14000c8ad:	pop    rbx
   14000c8ae:	ret    
   14000c8af:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c8b4:	call   0x14000c8d0
   14000c8b9:	test   ax,ax
   14000c8bc:	js     0x14000c8c2
   14000c8be:	cwde   
   14000c8bf:	add    eax,0x3
   14000c8c2:	add    rsp,0x28
   14000c8c6:	pop    r15
   14000c8c8:	pop    r13
   14000c8ca:	pop    rbp
   14000c8cb:	pop    rbx
   14000c8cc:	ret    
   14000c8cd:	int3   
   14000c8ce:	int3   
   14000c8cf:	int3   
   14000c8d0:	mov    QWORD PTR [rsp+0x10],rbx
   14000c8d5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c8da:	push   rdi
   14000c8db:	sub    rsp,0x20
   14000c8df:	mov    r8,QWORD PTR [rip+0x34e32]        # 0x140041718
   14000c8e6:	movzx  edi,WORD PTR [rip+0x35073]        # 0x140041960
   14000c8ed:	mov    rbx,rcx
   14000c8f0:	xor    ecx,ecx
   14000c8f2:	mov    rax,r8
   14000c8f5:	mov    QWORD PTR [rip+0x33bec],rax        # 0x1400404e8
   14000c8fc:	cmp    cx,di
   14000c8ff:	jge    0x14000c921
   14000c901:	mov    edx,DWORD PTR [rsp+0x34]
   14000c905:	cmp    ebx,DWORD PTR [rax]
   14000c907:	jne    0x14000c90e
   14000c909:	cmp    edx,DWORD PTR [rax+0x4]
   14000c90c:	je     0x14000c96f
   14000c90e:	add    rax,0x8
   14000c912:	inc    cx
   14000c915:	mov    QWORD PTR [rip+0x33bcc],rax        # 0x1400404e8
   14000c91c:	cmp    cx,di
   14000c91f:	jl     0x14000c905
   14000c921:	movzx  eax,WORD PTR [rip+0x31878]        # 0x14003e1a0
   14000c928:	inc    di
   14000c92b:	mov    WORD PTR [rip+0x3502e],di        # 0x140041960
   14000c932:	cmp    di,ax
   14000c935:	jl     0x14000c97d
   14000c937:	add    ax,0x20
   14000c93b:	mov    rcx,r8
   14000c93e:	movsx  rdx,ax
   14000c942:	mov    WORD PTR [rip+0x31857],ax        # 0x14003e1a0
   14000c949:	shl    edx,0x3
   14000c94c:	call   QWORD PTR [rip+0x22aae]        # 0x14002f400
   14000c952:	mov    r8,rax
   14000c955:	mov    QWORD PTR [rip+0x34dbc],rax        # 0x140041718
   14000c95c:	test   rax,rax
   14000c95f:	jne    0x14000c97d
   14000c961:	or     eax,0xffffffff
   14000c964:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c969:	add    rsp,0x20
   14000c96d:	pop    rdi
   14000c96e:	ret    
   14000c96f:	movzx  eax,cx
   14000c972:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c977:	add    rsp,0x20
   14000c97b:	pop    rdi
   14000c97c:	ret    
   14000c97d:	movsx  rax,di
   14000c981:	mov    QWORD PTR [rip+0x33b60],r8        # 0x1400404e8
   14000c988:	lea    rcx,[r8+rax*8]
   14000c98c:	mov    DWORD PTR [rcx-0x8],ebx
   14000c98f:	mov    eax,DWORD PTR [rsp+0x34]
   14000c993:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c998:	mov    DWORD PTR [rcx-0x4],eax
   14000c99b:	movsx  eax,di
   14000c99e:	dec    eax
   14000c9a0:	add    rsp,0x20
   14000c9a4:	pop    rdi
   14000c9a5:	ret    
   14000c9a6:	int3   
   14000c9a7:	int3   
   14000c9a8:	int3   
   14000c9a9:	int3   
   14000c9aa:	int3   
   14000c9ab:	int3   
   14000c9ac:	int3   
   14000c9ad:	int3   
   14000c9ae:	int3   
   14000c9af:	int3   
   14000c9b0:	rex push rbp
   14000c9b2:	push   rsi
   14000c9b3:	push   rdi
   14000c9b4:	push   r12
   14000c9b6:	push   r13
   14000c9b8:	push   r14
   14000c9ba:	push   r15
   14000c9bc:	lea    rbp,[rsp-0x27]
   14000c9c1:	sub    rsp,0xd0
   14000c9c8:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   14000c9d0:	mov    QWORD PTR [rsp+0x120],rbx
   14000c9d8:	mov    rax,QWORD PTR [rip+0x2f621]        # 0x14003c000
   14000c9df:	xor    rax,rsp
   14000c9e2:	mov    QWORD PTR [rbp+0x17],rax
   14000c9e6:	mov    QWORD PTR [rbp-0x61],rdx
   14000c9ea:	mov    rsi,rcx
   14000c9ed:	mov    eax,0x20
   14000c9f2:	mov    DWORD PTR [rbp-0x11],0x80020
   14000c9f9:	lea    ecx,[rax-0x2]
   14000c9fc:	mov    DWORD PTR [rbp-0xd],0x1e001e
   14000ca03:	xor    r12d,r12d
   14000ca06:	mov    WORD PTR [rip+0x3244a],r12w        # 0x14003ee58
   14000ca0e:	mov    WORD PTR [rip+0x3178e],r12w        # 0x14003e1a4
   14000ca16:	mov    WORD PTR [rip+0x3242a],r12w        # 0x14003ee48
   14000ca1e:	mov    WORD PTR [rip+0x3243b],ax        # 0x14003ee60
   14000ca25:	mov    WORD PTR [rip+0x32423],r12w        # 0x14003ee50
   14000ca2d:	lea    r8,[rip+0x2491c]        # 0x140031350
   14000ca34:	lea    rdx,[rip+0x31775]        # 0x14003e1b0
   14000ca3b:	mov    al,0x43
   14000ca3d:	lea    r13,[rip+0xffffffffffff35bc]        # 0x140000000
   14000ca44:	mov    r9,QWORD PTR [rip+0x308ad]        # 0x14003d2f8
   14000ca4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ca50:	cmp    al,0x20
   14000ca52:	jae    0x14000ca62
   14000ca54:	movzx  eax,al
   14000ca57:	movzx  ecx,WORD PTR [r13+rax*2+0x31200]
   14000ca60:	jmp    0x14000ca77
   14000ca62:	cmp    al,0x80
   14000ca64:	jae    0x14000ca6b
   14000ca66:	movzx  ecx,al
   14000ca69:	jmp    0x14000ca77
   14000ca6b:	movzx  eax,al
   14000ca6e:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   14000ca77:	mov    WORD PTR [rdx],cx
   14000ca7a:	add    rdx,0x2
   14000ca7e:	inc    r8
   14000ca81:	movzx  eax,BYTE PTR [r8]
   14000ca85:	test   al,al
   14000ca87:	jne    0x14000ca50
   14000ca89:	mov    WORD PTR [rdx],r12w
   14000ca8d:	xor    r8d,r8d
   14000ca90:	xor    ecx,ecx
   14000ca92:	lea    rdx,[rip+0x31717]        # 0x14003e1b0
   14000ca99:	call   QWORD PTR [rip+0x35009]        # 0x140041aa8
   14000ca9f:	test   ax,ax
   14000caa2:	mov    r13d,0x8
   14000caa8:	je     0x14000cab4
   14000caaa:	mov    eax,0x6
   14000caaf:	jmp    0x14000d66f
   14000cab4:	mov    rcx,r12
   14000cab7:	lea    r15,[rip+0x248f2]        # 0x1400313b0
   14000cabe:	xchg   ax,ax
   14000cac0:	movzx  eax,BYTE PTR [rcx+r15*1]
   14000cac5:	mov    BYTE PTR [rbp+rcx*1-0x9],al
   14000cac9:	lea    rcx,[rcx+0x1]
   14000cacd:	test   al,al
   14000cacf:	jne    0x14000cac0
   14000cad1:	mov    ecx,0x10
   14000cad6:	call   QWORD PTR [rip+0x22ebc]        # 0x14002f998
   14000cadc:	mov    rbx,rax
   14000cadf:	mov    QWORD PTR [rbp-0x69],rax
   14000cae3:	test   rax,rax
   14000cae6:	je     0x14000cb1c
   14000cae8:	mov    WORD PTR [rax],r12w
   14000caec:	mov    QWORD PTR [rax+0x8],r12
   14000caf0:	lea    rcx,[rbp-0x9]
   14000caf4:	call   QWORD PTR [rip+0x22786]        # 0x14002f280
   14000cafa:	test   eax,eax
   14000cafc:	jle    0x14000cb1f
   14000cafe:	inc    eax
   14000cb00:	movsxd rcx,eax
   14000cb03:	call   QWORD PTR [rip+0x22e8f]        # 0x14002f998
   14000cb09:	mov    QWORD PTR [rbx+0x8],rax
   14000cb0d:	lea    rdx,[rbp-0x9]
   14000cb11:	mov    rcx,rax
   14000cb14:	call   QWORD PTR [rip+0x2273e]        # 0x14002f258
   14000cb1a:	jmp    0x14000cb1f
   14000cb1c:	mov    rbx,r12
   14000cb1f:	mov    edx,0xa
   14000cb24:	mov    rcx,rbx
   14000cb27:	call   0x14002ab70
   14000cb2c:	mov    rdi,rax
   14000cb2f:	test   rax,rax
   14000cb32:	jne    0x14000cb3e
   14000cb34:	mov    eax,0x2
   14000cb39:	jmp    0x14000d66f
   14000cb3e:	test   rbx,rbx
   14000cb41:	je     0x14000cb5b
   14000cb43:	mov    rcx,QWORD PTR [rbx+0x8]
   14000cb47:	test   rcx,rcx
   14000cb4a:	je     0x14000cb52
   14000cb4c:	call   QWORD PTR [rip+0x23026]        # 0x14002fb78
   14000cb52:	mov    rcx,rbx
   14000cb55:	call   QWORD PTR [rip+0x2301d]        # 0x14002fb78
   14000cb5b:	xor    edx,edx
   14000cb5d:	mov    rcx,QWORD PTR [rsi]
   14000cb60:	call   QWORD PTR [rip+0x226ba]        # 0x14002f220
   14000cb66:	mov    DWORD PTR [rip+0x3163c],eax        # 0x14003e1a8
   14000cb6c:	xor    r9d,r9d
   14000cb6f:	xor    r8d,r8d
   14000cb72:	xor    edx,edx
   14000cb74:	mov    rcx,QWORD PTR [rsi]
   14000cb77:	call   QWORD PTR [rip+0x2269b]        # 0x14002f218
   14000cb7d:	mov    ebx,eax
   14000cb7f:	lea    ecx,[rax+0x1]
   14000cb82:	mov    r14d,0x2
   14000cb88:	test   ecx,0xfffffffe
   14000cb8e:	jne    0x14000cbc6
   14000cb90:	call   QWORD PTR [rip+0x225ca]        # 0x14002f160
   14000cb96:	cmp    eax,0x58
   14000cb99:	jae    0x14000cbad
   14000cb9b:	mov    ecx,eax
   14000cb9d:	lea    rax,[rip+0xffffffffffff345c]        # 0x140000000
   14000cba4:	mov    edx,DWORD PTR [rax+rcx*4+0x310a0]
   14000cbab:	jmp    0x14000cbb2
   14000cbad:	mov    edx,0x106
   14000cbb2:	mov    DWORD PTR [rip+0x36500],edx        # 0x1400430b8
   14000cbb8:	mov    DWORD PTR [rip+0x36909],r14d        # 0x1400434c8
   14000cbbf:	mov    BYTE PTR [rip+0x367fa],0x0        # 0x1400433c0
   14000cbc6:	cmp    ebx,0xffffffff
   14000cbc9:	jne    0x14000cbd5
   14000cbcb:	mov    eax,0x1
   14000cbd0:	jmp    0x14000d66f
   14000cbd5:	mov    WORD PTR [rip+0x32267],r12w        # 0x14003ee44
   14000cbdd:	mov    WORD PTR [rip+0x32277],r12w        # 0x14003ee5c
   14000cbe5:	cmp    DWORD PTR [rip+0x315bc],0x0        # 0x14003e1a8
   14000cbec:	jne    0x14000cbf8
   14000cbee:	mov    eax,0x3
   14000cbf3:	jmp    0x14000d66f
   14000cbf8:	mov    rdx,rdi
   14000cbfb:	mov    rcx,rsi
   14000cbfe:	call   0x14000aec0
   14000cc03:	test   ax,ax
   14000cc06:	je     0x14000cc2f
   14000cc08:	cwde   
   14000cc09:	cmp    eax,0xfffffffc
   14000cc0c:	je     0x14000caaa
   14000cc12:	cmp    eax,0xfffffffe
   14000cc15:	je     0x14000cc26
   14000cc17:	cmp    eax,0xffffffff
   14000cc1a:	je     0x14000cbcb
   14000cc1c:	mov    eax,0x4
   14000cc21:	jmp    0x14000d66f
   14000cc26:	movzx  eax,r14w
   14000cc2a:	jmp    0x14000d66f
   14000cc2f:	mov    rcx,rdi
   14000cc32:	call   0x14002a9e0
   14000cc37:	mov    edi,0x1
   14000cc3c:	mov    WORD PTR [rip+0x32215],di        # 0x14003ee58
   14000cc43:	mov    WORD PTR [rip+0x31559],r12w        # 0x14003e1a4
   14000cc4b:	mov    r10d,0x20
   14000cc51:	mov    WORD PTR [rip+0x321ef],r10w        # 0x14003ee48
   14000cc59:	mov    WORD PTR [rip+0x321ff],r13w        # 0x14003ee60
   14000cc61:	mov    WORD PTR [rip+0x321e7],r10w        # 0x14003ee50
   14000cc69:	lea    r8,[rip+0x24750]        # 0x1400313c0
   14000cc70:	lea    rsi,[rip+0x31539]        # 0x14003e1b0
   14000cc77:	mov    rdx,rsi
   14000cc7a:	mov    al,0x53
   14000cc7c:	mov    r9,QWORD PTR [rip+0x30675]        # 0x14003d2f8
   14000cc83:	lea    r15,[rip+0xffffffffffff3376]        # 0x140000000
   14000cc8a:	nop    WORD PTR [rax+rax*1+0x0]
   14000cc90:	cmp    al,r10b
   14000cc93:	jae    0x14000cca3
   14000cc95:	movzx  eax,al
   14000cc98:	movzx  ecx,WORD PTR [r15+rax*2+0x31200]
   14000cca1:	jmp    0x14000ccb8
   14000cca3:	cmp    al,0x80
   14000cca5:	jae    0x14000ccac
   14000cca7:	movzx  ecx,al
   14000ccaa:	jmp    0x14000ccb8
   14000ccac:	movzx  eax,al
   14000ccaf:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   14000ccb8:	mov    WORD PTR [rdx],cx
   14000ccbb:	add    rdx,r14
   14000ccbe:	inc    r8
   14000ccc1:	movzx  eax,BYTE PTR [r8]
   14000ccc5:	test   al,al
   14000ccc7:	jne    0x14000cc90
   14000ccc9:	mov    WORD PTR [rdx],r12w
   14000cccd:	xor    r8d,r8d
   14000ccd0:	mov    ecx,r10d
   14000ccd3:	mov    rdx,rsi
   14000ccd6:	call   QWORD PTR [rip+0x34dcc]        # 0x140041aa8
   14000ccdc:	test   ax,ax
   14000ccdf:	lea    r15,[rip+0x246ca]        # 0x1400313b0
   14000cce6:	jne    0x14000caaa
   14000ccec:	lea    rax,[rbp-0x39]
   14000ccf0:	mov    QWORD PTR [rsp+0x28],rax
   14000ccf5:	lea    rax,[rbp-0x51]
   14000ccf9:	mov    QWORD PTR [rsp+0x20],rax
   14000ccfe:	lea    r9,[rbp-0x6d]
   14000cd02:	lea    rbx,[rip+0x246bf]        # 0x1400313c8
   14000cd09:	mov    rdx,rbx
   14000cd0c:	mov    rcx,r15
   14000cd0f:	call   0x140029e30
   14000cd14:	test   eax,eax
   14000cd16:	jne    0x14000cbee
   14000cd1c:	mov    rcx,r15
   14000cd1f:	call   0x14001bc00
   14000cd24:	cmp    DWORD PTR [rip+0x3147d],0x0        # 0x14003e1a8
   14000cd2b:	je     0x14000cbee
   14000cd31:	mov    WORD PTR [rip+0x32a5c],di        # 0x14003f794
   14000cd38:	lea    r8,[rbp-0x39]
   14000cd3c:	mov    edx,DWORD PTR [rbp-0x6d]
   14000cd3f:	lea    rcx,[rbp-0x51]
   14000cd43:	call   0x140028fd0
   14000cd48:	test   eax,eax
   14000cd4a:	je     0x14000cd5f
   14000cd4c:	cmp    WORD PTR [rip+0x32a40],0xffff        # 0x14003f794
   14000cd54:	jne    0x14000cbee
   14000cd5a:	jmp    0x14000caaa
   14000cd5f:	mov    WORD PTR [rip+0x32a2d],r12w        # 0x14003f794
   14000cd67:	mov    rcx,r15
   14000cd6a:	call   QWORD PTR [rip+0x226f0]        # 0x14002f460
   14000cd70:	mov    WORD PTR [rip+0x320e0],r14w        # 0x14003ee58
   14000cd78:	mov    WORD PTR [rip+0x31424],r12w        # 0x14003e1a4
   14000cd80:	movzx  r9d,r12w
   14000cd84:	lea    rax,[rbp-0x11]
   14000cd88:	mov    rcx,r14
   14000cd8b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cd90:	add    r9w,WORD PTR [rax]
   14000cd94:	lea    rax,[rax+0x2]
   14000cd98:	dec    rcx
   14000cd9b:	jne    0x14000cd90
   14000cd9d:	mov    WORD PTR [rip+0x320a3],r9w        # 0x14003ee48
   14000cda5:	mov    eax,0x1e
   14000cdaa:	mov    WORD PTR [rip+0x320af],ax        # 0x14003ee60
   14000cdb1:	mov    WORD PTR [rip+0x32097],r9w        # 0x14003ee50
   14000cdb9:	lea    r8,[rip+0x24620]        # 0x1400313e0
   14000cdc0:	mov    rdx,rsi
   14000cdc3:	mov    al,0x43
   14000cdc5:	mov    r10,QWORD PTR [rip+0x3052c]        # 0x14003d2f8
   14000cdcc:	lea    r11,[rip+0xffffffffffff322d]        # 0x140000000
   14000cdd3:	cmp    al,0x20
   14000cdd5:	jae    0x14000cde5
   14000cdd7:	movzx  eax,al
   14000cdda:	movzx  ecx,WORD PTR [r11+rax*2+0x31200]
   14000cde3:	jmp    0x14000cdfa
   14000cde5:	cmp    al,0x80
   14000cde7:	jae    0x14000cdee
   14000cde9:	movzx  ecx,al
   14000cdec:	jmp    0x14000cdfa
   14000cdee:	movzx  eax,al
   14000cdf1:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   14000cdfa:	mov    WORD PTR [rdx],cx
   14000cdfd:	add    rdx,r14
   14000ce00:	inc    r8
   14000ce03:	movzx  eax,BYTE PTR [r8]
   14000ce07:	test   al,al
   14000ce09:	jne    0x14000cdd3
   14000ce0b:	mov    WORD PTR [rdx],r12w
   14000ce0f:	xor    r8d,r8d
   14000ce12:	mov    rdx,rsi
   14000ce15:	movzx  ecx,r9w
   14000ce19:	call   QWORD PTR [rip+0x34c89]        # 0x140041aa8
   14000ce1f:	test   ax,ax
   14000ce22:	jne    0x14000caaa
   14000ce28:	mov    rdx,r12
   14000ce2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ce30:	movzx  eax,BYTE PTR [rdx+rbx*1]
   14000ce34:	mov    BYTE PTR [rbp+rdx*1-0x9],al
   14000ce38:	lea    rdx,[rdx+0x1]
   14000ce3c:	test   al,al
   14000ce3e:	jne    0x14000ce30
   14000ce40:	mov    ecx,0x10
   14000ce45:	call   QWORD PTR [rip+0x22b4d]        # 0x14002f998
   14000ce4b:	mov    rbx,rax
   14000ce4e:	mov    QWORD PTR [rbp-0x69],rax
   14000ce52:	test   rax,rax
   14000ce55:	je     0x14000ce8b
   14000ce57:	mov    WORD PTR [rax],r12w
   14000ce5b:	mov    QWORD PTR [rax+0x8],r12
   14000ce5f:	lea    rcx,[rbp-0x9]
   14000ce63:	call   QWORD PTR [rip+0x22417]        # 0x14002f280
   14000ce69:	test   eax,eax
   14000ce6b:	jle    0x14000ce8e
   14000ce6d:	inc    eax
   14000ce6f:	movsxd rcx,eax
   14000ce72:	call   QWORD PTR [rip+0x22b20]        # 0x14002f998
   14000ce78:	mov    QWORD PTR [rbx+0x8],rax
   14000ce7c:	lea    rdx,[rbp-0x9]
   14000ce80:	mov    rcx,rax
   14000ce83:	call   QWORD PTR [rip+0x223cf]        # 0x14002f258
   14000ce89:	jmp    0x14000ce8e
   14000ce8b:	mov    rbx,r12
   14000ce8e:	mov    edx,edi
   14000ce90:	mov    rcx,rbx
   14000ce93:	call   0x14002ab70
   14000ce98:	mov    rsi,rax
   14000ce9b:	test   rax,rax
   14000ce9e:	jne    0x14000cea8
   14000cea0:	movzx  eax,di
   14000cea3:	jmp    0x14000d66f
   14000cea8:	mov    rcx,rbx
   14000ceab:	call   0x14002af10
   14000ceb0:	lea    rdx,[rip+0x24541]        # 0x1400313f8
   14000ceb7:	lea    rcx,[rip+0x24542]        # 0x140031400
   14000cebe:	call   QWORD PTR [rip+0x2257c]        # 0x14002f440
   14000cec4:	mov    r15,rax
   14000cec7:	test   rax,rax
   14000ceca:	je     0x14000cc26
   14000ced0:	mov    ecx,0x800
   14000ced5:	call   QWORD PTR [rip+0x2253d]        # 0x14002f418
   14000cedb:	mov    rdi,rax
   14000cede:	test   rax,rax
   14000cee1:	je     0x14000cc1c
   14000cee7:	mov    ecx,0x800
   14000ceec:	call   QWORD PTR [rip+0x22526]        # 0x14002f418
   14000cef2:	mov    rbx,rax
   14000cef5:	test   rax,rax
   14000cef8:	je     0x14000cc1c
   14000cefe:	mov    r14,rax
   14000cf01:	mov    ecx,0xfde8
   14000cf06:	call   QWORD PTR [rip+0x2250c]        # 0x14002f418
   14000cf0c:	mov    r13,rax
   14000cf0f:	test   rax,rax
   14000cf12:	je     0x14000cc1c
   14000cf18:	mov    ecx,0x1964
   14000cf1d:	mov    WORD PTR [rip+0x31f40],cx        # 0x14003ee64
   14000cf24:	add    rax,0x4
   14000cf28:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cf30:	mov    QWORD PTR [rax-0x4],r12
   14000cf34:	mov    WORD PTR [rax+0x4],r12w
   14000cf39:	lea    rax,[rax+0xa]
   14000cf3d:	dec    rcx
   14000cf40:	jne    0x14000cf30
   14000cf42:	mov    eax,0x20
   14000cf47:	mov    WORD PTR [rbx],ax
   14000cf4a:	lea    r12,[rbx+0x2]
   14000cf4e:	xor    eax,eax
   14000cf50:	mov    WORD PTR [r12],ax
   14000cf55:	mov    rdx,rbx
   14000cf58:	call   0x140004860
   14000cf5d:	xor    edx,edx
   14000cf5f:	mov    rcx,QWORD PTR [rsi]
   14000cf62:	call   QWORD PTR [rip+0x222b8]        # 0x14002f220
   14000cf68:	mov    DWORD PTR [rip+0x3123a],eax        # 0x14003e1a8
   14000cf6e:	xor    ecx,ecx
   14000cf70:	mov    WORD PTR [rip+0x31ecd],cx        # 0x14003ee44
   14000cf77:	mov    WORD PTR [rip+0x31ede],cx        # 0x14003ee5c
   14000cf7e:	test   eax,eax
   14000cf80:	je     0x14000cbee
   14000cf86:	mov    r8,rsi
   14000cf89:	mov    edx,0x800
   14000cf8e:	mov    rcx,rdi
   14000cf91:	call   0x14002a640
   14000cf96:	mov    rcx,rsi
   14000cf99:	test   ax,ax
   14000cf9c:	jle    0x14000d209
   14000cfa2:	call   0x14001bd30
   14000cfa7:	test   ax,ax
   14000cfaa:	je     0x14000d000
   14000cfac:	movzx  r8d,WORD PTR [rip+0x31ea8]        # 0x14003ee5c
   14000cfb4:	mov    WORD PTR [rip+0x311e8],r8w        # 0x14003e1a4
   14000cfbc:	mov    ecx,r8d
   14000cfbf:	movzx  eax,WORD PTR [rip+0x31e9a]        # 0x14003ee60
   14000cfc6:	imul   ecx,eax
   14000cfc9:	mov    eax,0x51eb851f
   14000cfce:	imul   ecx
   14000cfd0:	mov    ecx,edx
   14000cfd2:	sar    ecx,0x5
   14000cfd5:	mov    eax,ecx
   14000cfd7:	shr    eax,0x1f
   14000cfda:	add    ecx,eax
   14000cfdc:	add    cx,WORD PTR [rip+0x31e65]        # 0x14003ee48
   14000cfe3:	mov    WORD PTR [rip+0x31e66],cx        # 0x14003ee50
   14000cfea:	lea    rdx,[rip+0x311bf]        # 0x14003e1b0
   14000cff1:	call   QWORD PTR [rip+0x34ab1]        # 0x140041aa8
   14000cff7:	test   ax,ax
   14000cffa:	jne    0x14000caaa
   14000d000:	mov    DWORD PTR [rbx],0x20
   14000d006:	xor    r11d,r11d
   14000d009:	mov    rdx,r14
   14000d00c:	mov    rcx,rdi
   14000d00f:	call   0x14002af40
   14000d014:	mov    rbx,rax
   14000d017:	test   rax,rax
   14000d01a:	je     0x14000cc1c
   14000d020:	movzx  ecx,r11w
   14000d024:	mov    r8,rax
   14000d027:	sub    r8,rdi
   14000d02a:	lea    r9,[rip+0x31e4f]        # 0x14003ee80
   14000d031:	test   r8,r8
   14000d034:	jle    0x14000d054
   14000d036:	mov    edx,r11d
   14000d039:	nop    DWORD PTR [rax+0x0]
   14000d040:	movzx  eax,BYTE PTR [rdx+rdi*1]
   14000d044:	mov    BYTE PTR [rdx+r9*1],al
   14000d048:	inc    cx
   14000d04b:	movsx  rdx,cx
   14000d04f:	cmp    rdx,r8
   14000d052:	jl     0x14000d040
   14000d054:	movsx  rax,cx
   14000d058:	cmp    rax,0x800
   14000d05e:	jae    0x14000d203
   14000d064:	mov    BYTE PTR [rax+r9*1],r11b
   14000d068:	lea    eax,[rcx+0x1]
   14000d06b:	movsx  rax,ax
   14000d06f:	cmp    rax,0x800
   14000d075:	jae    0x14000d1fd
   14000d07b:	mov    BYTE PTR [rax+r9*1],r11b
   14000d07f:	lea    rdx,[rbp-0x71]
   14000d083:	mov    rcx,rbx
   14000d086:	call   0x14002a440
   14000d08b:	test   ax,ax
   14000d08e:	je     0x14000d1e0
   14000d094:	movsx  rax,ax
   14000d098:	add    rbx,rax
   14000d09b:	lea    rdx,[rbp-0x79]
   14000d09f:	mov    rcx,rbx
   14000d0a2:	call   0x14002a440
   14000d0a7:	test   ax,ax
   14000d0aa:	je     0x14000cc1c
   14000d0b0:	movsx  rax,ax
   14000d0b4:	add    rbx,rax
   14000d0b7:	lea    rdx,[rbp-0x75]
   14000d0bb:	mov    rcx,rbx
   14000d0be:	call   0x14002a440
   14000d0c3:	test   ax,ax
   14000d0c6:	je     0x14000cc1c
   14000d0cc:	movsx  rcx,ax
   14000d0d0:	add    rcx,rbx
   14000d0d3:	lea    rdx,[rbp-0x6d]
   14000d0d7:	call   0x14002a440
   14000d0dc:	test   ax,ax
   14000d0df:	je     0x14000cc1c
   14000d0e5:	movzx  eax,WORD PTR [rbp-0x71]
   14000d0e9:	mov    WORD PTR [rbp-0x67],ax
   14000d0ed:	movzx  eax,WORD PTR [rbp-0x79]
   14000d0f1:	mov    WORD PTR [rbp-0x69],ax
   14000d0f5:	movzx  eax,WORD PTR [rbp-0x75]
   14000d0f9:	mov    WORD PTR [rbp-0x65],ax
   14000d0fd:	movzx  eax,WORD PTR [rbp-0x6d]
   14000d101:	mov    WORD PTR [rbp-0x63],ax
   14000d105:	mov    r8,r15
   14000d108:	mov    rdx,r13
   14000d10b:	mov    rcx,QWORD PTR [rbp-0x69]
   14000d10f:	call   0x14000d770
   14000d114:	test   ax,ax
   14000d117:	jne    0x14000cb34
   14000d11d:	xor    ebx,ebx
   14000d11f:	movzx  edx,bx
   14000d122:	movzx  eax,BYTE PTR [rip+0x31d57]        # 0x14003ee80
   14000d129:	lea    r8,[rip+0x31d50]        # 0x14003ee80
   14000d130:	cmp    BYTE PTR [rip+0x326ca],al        # 0x14003f800
   14000d136:	jne    0x14000d16d
   14000d138:	mov    ecx,ebx
   14000d13a:	lea    r9,[rip+0x326bf]        # 0x14003f800
   14000d141:	movzx  eax,BYTE PTR [rcx+r8*1+0x1]
   14000d147:	cmp    BYTE PTR [rcx+r9*1+0x1],al
   14000d14c:	jne    0x14000d16d
   14000d14e:	cmp    BYTE PTR [rcx+r9*1],bl
   14000d152:	jne    0x14000d15a
   14000d154:	cmp    BYTE PTR [rcx+r8*1],bl
   14000d158:	je     0x14000d16d
   14000d15a:	add    rcx,0x2
   14000d15e:	add    dx,0x2
   14000d162:	movzx  eax,BYTE PTR [rcx+r8*1]
   14000d167:	cmp    BYTE PTR [rcx+r9*1],al
   14000d16b:	je     0x14000d141
   14000d16d:	movzx  edx,dx
   14000d170:	add    rdx,r8
   14000d173:	call   0x140004860
   14000d178:	lea    rax,[rip+0x31d01]        # 0x14003ee80
   14000d17f:	lea    rcx,[rip+0x3267a]        # 0x14003f800
   14000d186:	mov    rdx,rcx
   14000d189:	nop    DWORD PTR [rax+0x0]
   14000d190:	movzx  ecx,BYTE PTR [rax]
   14000d193:	test   cl,cl
   14000d195:	jne    0x14000d19c
   14000d197:	cmp    BYTE PTR [rax+0x1],bl
   14000d19a:	je     0x14000d1af
   14000d19c:	mov    BYTE PTR [rdx],cl
   14000d19e:	movzx  ecx,BYTE PTR [rax+0x1]
   14000d1a2:	mov    BYTE PTR [rdx+0x1],cl
   14000d1a5:	add    rdx,0x2
   14000d1a9:	add    rax,0x2
   14000d1ad:	jmp    0x14000d190
   14000d1af:	movzx  ecx,BYTE PTR [rax]
   14000d1b2:	mov    BYTE PTR [rdx],cl
   14000d1b4:	movzx  ecx,BYTE PTR [rax+0x1]
   14000d1b8:	mov    BYTE PTR [rdx+0x1],cl
   14000d1bb:	mov    rcx,rdi
   14000d1be:	call   0x14002af90
   14000d1c3:	mov    WORD PTR [rip+0x31c8a],ax        # 0x14003ee54
   14000d1ca:	mov    eax,0x20
   14000d1cf:	mov    WORD PTR [r14],ax
   14000d1d3:	mov    WORD PTR [r12],bx
   14000d1d8:	mov    rbx,r14
   14000d1db:	jmp    0x14000cf86
   14000d1e0:	movzx  eax,BYTE PTR [rbx]
   14000d1e3:	sub    al,0x30
   14000d1e5:	cmp    al,0x9
   14000d1e7:	ja     0x14000d1f3
   14000d1e9:	cmp    BYTE PTR [rbx+0x1],0x0
   14000d1ed:	je     0x14000cc1c
   14000d1f3:	mov    eax,0x7
   14000d1f8:	jmp    0x14000d66f
   14000d1fd:	call   0x14002cbc8
   14000d202:	int3   
   14000d203:	call   0x14002cbc8
   14000d208:	int3   
   14000d209:	call   0x14002a9e0
   14000d20e:	mov    rdx,r15
   14000d211:	mov    rcx,r13
   14000d214:	call   0x140010710
   14000d219:	test   ax,ax
   14000d21c:	je     0x14000d228
   14000d21e:	mov    eax,0x5
   14000d223:	jmp    0x14000d66f
   14000d228:	mov    DWORD PTR [rbx],0x2d007c
   14000d22e:	mov    DWORD PTR [rbx+0x4],0x20
   14000d235:	xor    r12d,r12d
   14000d238:	mov    rdx,r14
   14000d23b:	call   0x140004860
   14000d240:	lea    r9,[rip+0x489]        # 0x14000d6d0
   14000d247:	mov    edx,0xff
   14000d24c:	lea    r8d,[r12+0xc]
   14000d251:	lea    rbx,[rip+0x30ff8]        # 0x14003e250
   14000d258:	mov    rcx,rbx
   14000d25b:	call   QWORD PTR [rip+0x22207]        # 0x14002f468
   14000d261:	movzx  r10d,r12w
   14000d265:	cmp    DWORD PTR [rip+0x30fe8],r12d        # 0x14003e254
   14000d26c:	je     0x14000d283
   14000d26e:	xchg   ax,ax
   14000d270:	inc    r10w
   14000d274:	movsx  rax,r10w
   14000d278:	lea    rcx,[rax+rax*2]
   14000d27c:	cmp    DWORD PTR [rbx+rcx*4+0x4],r12d
   14000d281:	jne    0x14000d270
   14000d283:	movsx  rax,r10w
   14000d287:	lea    rcx,[rax+rax*2]
   14000d28b:	lea    r9,[rcx*4+0x0]
   14000d293:	mov    eax,DWORD PTR [rip+0x30c47]        # 0x14003dee0
   14000d299:	mov    DWORD PTR [r9+rbx*1+0x4],eax
   14000d29e:	mov    WORD PTR [r9+rbx*1],r12w
   14000d2a3:	movzx  ecx,r12w
   14000d2a7:	call   0x14002afb0
   14000d2ac:	mov    BYTE PTR [r9+rbx*1+0x8],al
   14000d2b1:	inc    r10w
   14000d2b5:	movsx  rax,r10w
   14000d2b9:	lea    rcx,[rax+rax*2]
   14000d2bd:	mov    r15d,0x1
   14000d2c3:	mov    DWORD PTR [rbx+rcx*4+0x4],r15d
   14000d2c8:	mov    WORD PTR [rbx+rcx*4],r12w
   14000d2cd:	mov    BYTE PTR [rbx+rcx*4+0x8],r15b
   14000d2d2:	inc    r10w
   14000d2d6:	mov    WORD PTR [rip+0x31b6e],r10w        # 0x14003ee4c
   14000d2de:	movsx  rdx,r10w
   14000d2e2:	lea    r9,[rip+0x3b7]        # 0x14000d6a0
   14000d2e9:	lea    r8d,[r15+0xb]
   14000d2ed:	mov    rcx,rbx
   14000d2f0:	call   QWORD PTR [rip+0x22172]        # 0x14002f468
   14000d2f6:	movsx  rbx,WORD PTR [rip+0x31b4e]        # 0x14003ee4c
   14000d2fe:	mov    rsi,rbx
   14000d301:	lea    ecx,[rbx*4+0x0]
   14000d308:	call   QWORD PTR [rip+0x2210a]        # 0x14002f418
   14000d30e:	mov    rcx,rax
   14000d311:	mov    QWORD PTR [rip+0x30df0],rax        # 0x14003e108
   14000d318:	test   rax,rax
   14000d31b:	je     0x14000cc1c
   14000d321:	lea    r9,[rip+0x32498]        # 0x14003f7c0
   14000d328:	cmp    r12w,bx
   14000d32c:	jge    0x14000d392
   14000d32e:	mov    rdx,r12
   14000d331:	lea    r8,[rip+0x30f19]        # 0x14003e251
   14000d338:	movzx  r10d,bx
   14000d33c:	nop    DWORD PTR [rax+0x0]
   14000d340:	movzx  eax,BYTE PTR [r8-0x1]
   14000d345:	mov    BYTE PTR [rdx+rcx*1],al
   14000d348:	movzx  ecx,BYTE PTR [r8]
   14000d34c:	mov    rax,QWORD PTR [rip+0x30db5]        # 0x14003e108
   14000d353:	mov    BYTE PTR [rdx+rax*1+0x1],cl
   14000d357:	movzx  ecx,BYTE PTR [r8+0x7]
   14000d35c:	mov    rax,QWORD PTR [rip+0x30da5]        # 0x14003e108
   14000d363:	mov    BYTE PTR [rdx+rax*1+0x2],cl
   14000d367:	mov    rax,QWORD PTR [rip+0x30d9a]        # 0x14003e108
   14000d36e:	mov    BYTE PTR [rdx+rax*1+0x3],r12b
   14000d373:	movzx  eax,BYTE PTR [r8]
   14000d377:	inc    WORD PTR [r9+rax*2]
   14000d37c:	lea    rdx,[rdx+0x4]
   14000d380:	lea    r8,[r8+0xc]
   14000d384:	dec    r10
   14000d387:	je     0x14000d392
   14000d389:	mov    rcx,QWORD PTR [rip+0x30d78]        # 0x14003e108
   14000d390:	jmp    0x14000d340
   14000d392:	movzx  r10d,r12w
   14000d396:	mov    BYTE PTR [rip+0x30b49],r10b        # 0x14003dee6
   14000d39d:	movzx  eax,r12w
   14000d3a1:	movzx  ecx,WORD PTR [r9]
   14000d3a5:	cmp    cx,r10w
   14000d3a9:	jbe    0x14000d3b5
   14000d3ab:	movzx  r10d,cx
   14000d3af:	mov    BYTE PTR [rip+0x30b31],al        # 0x14003dee6
   14000d3b5:	inc    ax
   14000d3b8:	add    r9,0x2
   14000d3bc:	cmp    ax,0x10
   14000d3c0:	jl     0x14000d3a1
   14000d3c2:	lea    r9,[rip+0x307]        # 0x14000d6d0
   14000d3c9:	mov    r8d,0xc
   14000d3cf:	mov    rdx,rsi
   14000d3d2:	lea    rsi,[rip+0x30e77]        # 0x14003e250
   14000d3d9:	mov    rcx,rsi
   14000d3dc:	call   QWORD PTR [rip+0x22086]        # 0x14002f468
   14000d3e2:	movsx  rbx,WORD PTR [rip+0x31a62]        # 0x14003ee4c
   14000d3ea:	mov    ecx,ebx
   14000d3ec:	call   QWORD PTR [rip+0x22026]        # 0x14002f418
   14000d3f2:	mov    QWORD PTR [rip+0x30d17],rax        # 0x14003e110
   14000d3f9:	test   rax,rax
   14000d3fc:	je     0x14000cc1c
   14000d402:	movzx  r9d,r12w
   14000d406:	cmp    r12w,bx
   14000d40a:	jge    0x14000d475
   14000d40c:	nop    DWORD PTR [rax+0x0]
   14000d410:	movzx  ecx,r12w
   14000d414:	movsx  r11,r9w
   14000d418:	lea    rax,[r11+r11*2]
   14000d41c:	lea    r8,[rax*4+0x0]
   14000d424:	movzx  r10d,BYTE PTR [r8+rsi*1]
   14000d429:	mov    rdx,QWORD PTR [rip+0x30cd8]        # 0x14003e108
   14000d430:	movsx  rax,cx
   14000d434:	cmp    r10b,BYTE PTR [rdx+rax*4]
   14000d438:	jne    0x14000d446
   14000d43a:	movzx  eax,BYTE PTR [rdx+rax*4+0x1]
   14000d43f:	cmp    BYTE PTR [r8+rsi*1+0x1],al
   14000d444:	je     0x14000d44e
   14000d446:	inc    cx
   14000d449:	cmp    cx,bx
   14000d44c:	jl     0x14000d430
   14000d44e:	cmp    cx,bx
   14000d451:	je     0x14000cc1c
   14000d457:	movsx  rax,cx
   14000d45b:	mov    BYTE PTR [rdx+rax*4+0x3],r9b
   14000d460:	mov    rax,QWORD PTR [rip+0x30ca9]        # 0x14003e110
   14000d467:	mov    BYTE PTR [r11+rax*1],cl
   14000d46b:	inc    r9w
   14000d46f:	cmp    r9w,bx
   14000d473:	jl     0x14000d410
   14000d475:	mov    rcx,rdi
   14000d478:	call   QWORD PTR [rip+0x22002]        # 0x14002f480
   14000d47e:	test   r14,r14
   14000d481:	je     0x14000d48f
   14000d483:	mov    rcx,r14
   14000d486:	call   QWORD PTR [rip+0x21ff4]        # 0x14002f480
   14000d48c:	mov    r14,r12
   14000d48f:	mov    ebx,0x3
   14000d494:	mov    WORD PTR [rip+0x319bd],bx        # 0x14003ee58
   14000d49b:	mov    WORD PTR [rip+0x30d01],r12w        # 0x14003e1a4
   14000d4a3:	movzx  r9d,r12w
   14000d4a7:	lea    rax,[rbp-0x11]
   14000d4ab:	mov    ecx,ebx
   14000d4ad:	nop    DWORD PTR [rax]
   14000d4b0:	add    r9w,WORD PTR [rax]
   14000d4b4:	lea    rax,[rax+0x2]
   14000d4b8:	dec    rcx
   14000d4bb:	jne    0x14000d4b0
   14000d4bd:	mov    WORD PTR [rip+0x31983],r9w        # 0x14003ee48
   14000d4c5:	mov    eax,0x1e
   14000d4ca:	mov    WORD PTR [rip+0x3198f],ax        # 0x14003ee60
   14000d4d1:	mov    WORD PTR [rip+0x31977],r9w        # 0x14003ee50
   14000d4d9:	lea    r8,[rip+0x23e80]        # 0x140031360
   14000d4e0:	lea    rdx,[rip+0x30cc9]        # 0x14003e1b0
   14000d4e7:	mov    al,0x43
   14000d4e9:	mov    r10,QWORD PTR [rip+0x2fe08]        # 0x14003d2f8
   14000d4f0:	lea    r12,[rip+0xffffffffffff2b09]        # 0x140000000
   14000d4f7:	cmp    al,0x20
   14000d4f9:	jae    0x14000d509
   14000d4fb:	movzx  eax,al
   14000d4fe:	movzx  ecx,WORD PTR [r12+rax*2+0x31200]
   14000d507:	jmp    0x14000d51e
   14000d509:	cmp    al,0x80
   14000d50b:	jae    0x14000d512
   14000d50d:	movzx  ecx,al
   14000d510:	jmp    0x14000d51e
   14000d512:	movzx  eax,al
   14000d515:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   14000d51e:	mov    WORD PTR [rdx],cx
   14000d521:	add    rdx,0x2
   14000d525:	inc    r8
   14000d528:	movzx  eax,BYTE PTR [r8]
   14000d52c:	test   al,al
   14000d52e:	jne    0x14000d4f7
   14000d530:	xor    r12d,r12d
   14000d533:	mov    WORD PTR [rdx],r12w
   14000d537:	xor    r8d,r8d
   14000d53a:	lea    rdx,[rip+0x30c6f]        # 0x14003e1b0
   14000d541:	movzx  ecx,r9w
   14000d545:	call   QWORD PTR [rip+0x3455d]        # 0x140041aa8
   14000d54b:	test   ax,ax
   14000d54e:	jne    0x14000caaa
   14000d554:	lea    rcx,[rip+0x23e6d]        # 0x1400313c8
   14000d55b:	call   0x14001bc00
   14000d560:	cmp    DWORD PTR [rip+0x30c41],r12d        # 0x14003e1a8
   14000d567:	jne    0x14000d571
   14000d569:	movzx  eax,bx
   14000d56c:	jmp    0x14000d66f
   14000d571:	mov    rdx,r13
   14000d574:	call   0x1400121f0
   14000d579:	test   ax,ax
   14000d57c:	je     0x14000d5ac
   14000d57e:	cwde   
   14000d57f:	cmp    eax,0xfffffff9
   14000d582:	je     0x14000d1f3
   14000d588:	cmp    eax,0xfffffffc
   14000d58b:	je     0x14000caaa
   14000d591:	cmp    eax,0xfffffffe
   14000d594:	je     0x14000cb34
   14000d59a:	cmp    eax,0xffffffff
   14000d59d:	jne    0x14000cc1c
   14000d5a3:	movzx  eax,r15w
   14000d5a7:	jmp    0x14000d66f
   14000d5ac:	lea    rcx,[rip+0x23e15]        # 0x1400313c8
   14000d5b3:	call   QWORD PTR [rip+0x21ea7]        # 0x14002f460
   14000d5b9:	mov    r9,r13
   14000d5bc:	mov    r8,QWORD PTR [rbp-0x61]
   14000d5c0:	call   0x14000d990
   14000d5c5:	test   ax,ax
   14000d5c8:	js     0x14000d569
   14000d5ca:	lea    rcx,[rip+0x23daf]        # 0x140031380
   14000d5d1:	call   QWORD PTR [rip+0x21e89]        # 0x14002f460
   14000d5d7:	mov    rcx,QWORD PTR [rip+0x31892]        # 0x14003ee70
   14000d5de:	test   rcx,rcx
   14000d5e1:	je     0x14000d5f0
   14000d5e3:	call   QWORD PTR [rip+0x21e97]        # 0x14002f480
   14000d5e9:	mov    QWORD PTR [rip+0x31880],r12        # 0x14003ee70
   14000d5f0:	mov    rcx,QWORD PTR [rip+0x30af1]        # 0x14003e0e8
   14000d5f7:	test   rcx,rcx
   14000d5fa:	je     0x14000d609
   14000d5fc:	call   QWORD PTR [rip+0x21e7e]        # 0x14002f480
   14000d602:	mov    QWORD PTR [rip+0x30adf],r12        # 0x14003e0e8
   14000d609:	mov    rcx,QWORD PTR [rip+0x30ae0]        # 0x14003e0f0
   14000d610:	test   rcx,rcx
   14000d613:	je     0x14000d622
   14000d615:	call   QWORD PTR [rip+0x21e65]        # 0x14002f480
   14000d61b:	mov    QWORD PTR [rip+0x30ace],r12        # 0x14003e0f0
   14000d622:	test   r14,r14
   14000d625:	je     0x14000d630
   14000d627:	mov    rcx,r14
   14000d62a:	call   QWORD PTR [rip+0x21e50]        # 0x14002f480
   14000d630:	mov    rcx,QWORD PTR [rip+0x30ad1]        # 0x14003e108
   14000d637:	test   rcx,rcx
   14000d63a:	je     0x14000d649
   14000d63c:	call   QWORD PTR [rip+0x21e3e]        # 0x14002f480
   14000d642:	mov    QWORD PTR [rip+0x30abf],r12        # 0x14003e108
   14000d649:	mov    rcx,QWORD PTR [rip+0x30ac0]        # 0x14003e110
   14000d650:	test   rcx,rcx
   14000d653:	je     0x14000d662
   14000d655:	call   QWORD PTR [rip+0x21e25]        # 0x14002f480
   14000d65b:	mov    QWORD PTR [rip+0x30aae],r12        # 0x14003e110
   14000d662:	mov    rcx,r13
   14000d665:	call   QWORD PTR [rip+0x21e15]        # 0x14002f480
   14000d66b:	movzx  eax,r12w
   14000d66f:	mov    rcx,QWORD PTR [rbp+0x17]
   14000d673:	xor    rcx,rsp
   14000d676:	call   0x14002c960
   14000d67b:	mov    rbx,QWORD PTR [rsp+0x120]
   14000d683:	add    rsp,0xd0
   14000d68a:	pop    r15
   14000d68c:	pop    r14
   14000d68e:	pop    r13
   14000d690:	pop    r12
   14000d692:	pop    rdi
   14000d693:	pop    rsi
   14000d694:	pop    rbp
   14000d695:	ret    
   14000d696:	int3   
   14000d697:	int3   
   14000d698:	int3   
   14000d699:	int3   
   14000d69a:	int3   
   14000d69b:	int3   
   14000d69c:	int3   
   14000d69d:	int3   
   14000d69e:	int3   
   14000d69f:	int3   
   14000d6a0:	movzx  eax,BYTE PTR [rcx+0x8]
   14000d6a4:	movzx  r8d,BYTE PTR [rdx+0x8]
   14000d6a9:	cmp    al,r8b
   14000d6ac:	jae    0x14000d6b2
   14000d6ae:	or     eax,0xffffffff
   14000d6b1:	ret    
   14000d6b2:	jbe    0x14000d6ba
   14000d6b4:	mov    eax,0x1
   14000d6b9:	ret    
   14000d6ba:	movzx  eax,WORD PTR [rcx]
   14000d6bd:	movzx  ecx,WORD PTR [rdx]
   14000d6c0:	sub    eax,ecx
   14000d6c2:	ret    
   14000d6c3:	int3   
   14000d6c4:	int3   
   14000d6c5:	int3   
   14000d6c6:	int3   
   14000d6c7:	int3   
   14000d6c8:	int3   
   14000d6c9:	int3   
   14000d6ca:	int3   
   14000d6cb:	int3   
   14000d6cc:	int3   
   14000d6cd:	int3   
   14000d6ce:	int3   
   14000d6cf:	int3   
   14000d6d0:	mov    eax,DWORD PTR [rcx+0x4]
   14000d6d3:	mov    r8d,DWORD PTR [rdx+0x4]
   14000d6d7:	cmp    eax,r8d
   14000d6da:	jae    0x14000d6e2
   14000d6dc:	mov    eax,0x1
   14000d6e1:	ret    
   14000d6e2:	jbe    0x14000d6e8
   14000d6e4:	or     eax,0xffffffff
   14000d6e7:	ret    
   14000d6e8:	movzx  eax,WORD PTR [rcx]
   14000d6eb:	movzx  ecx,WORD PTR [rdx]
   14000d6ee:	sub    eax,ecx
   14000d6f0:	ret    
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	int3   
   14000d6f5:	int3   
   14000d6f6:	int3   
   14000d6f7:	int3   
   14000d6f8:	int3   
   14000d6f9:	int3   
   14000d6fa:	int3   
   14000d6fb:	int3   
   14000d6fc:	int3   
   14000d6fd:	int3   
   14000d6fe:	int3   
   14000d6ff:	int3   
   14000d700:	movzx  eax,WORD PTR [rcx+0x8]
   14000d704:	movzx  ecx,WORD PTR [rdx+0x8]
   14000d708:	cmp    cx,ax
   14000d70b:	jbe    0x14000d713
   14000d70d:	mov    eax,0x1
   14000d712:	ret    
   14000d713:	sbb    eax,eax
   14000d715:	ret    
   14000d716:	int3   
   14000d717:	int3   
   14000d718:	int3   
   14000d719:	int3   
   14000d71a:	int3   
   14000d71b:	int3   
   14000d71c:	int3   
   14000d71d:	int3   
   14000d71e:	int3   
   14000d71f:	int3   
   14000d720:	movzx  r8d,WORD PTR [rip+0x31724]        # 0x14003ee4c
   14000d728:	xor    edx,edx
   14000d72a:	mov    WORD PTR [rsp+0x8],cx
   14000d72f:	cmp    dx,r8w
   14000d733:	jge    0x14000d75c
   14000d735:	movzx  r9d,BYTE PTR [rsp+0x9]
   14000d73b:	mov    r10,QWORD PTR [rip+0x309c6]        # 0x14003e108
   14000d742:	movsx  rax,dx
   14000d746:	cmp    BYTE PTR [r10+rax*4],cl
   14000d74a:	jne    0x14000d753
   14000d74c:	cmp    BYTE PTR [r10+rax*4+0x1],r9b
   14000d751:	je     0x14000d760
   14000d753:	inc    dx
   14000d756:	cmp    dx,r8w
   14000d75a:	jl     0x14000d742
   14000d75c:	or     eax,0xffffffff
   14000d75f:	ret    
   14000d760:	movzx  eax,dx
   14000d763:	ret    
   14000d764:	int3   
   14000d765:	int3   
   14000d766:	int3   
   14000d767:	int3   
   14000d768:	int3   
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	rex push rbx
   14000d772:	push   rbp
   14000d773:	push   r12
   14000d775:	push   r13
   14000d777:	push   r14
   14000d779:	push   r15
   14000d77b:	sub    rsp,0x98
   14000d782:	mov    rax,QWORD PTR [rip+0x2e877]        # 0x14003c000
   14000d789:	xor    rax,rsp
   14000d78c:	mov    QWORD PTR [rsp+0x80],rax
   14000d794:	mov    QWORD PTR [rsp+0x40],rcx
   14000d799:	movzx  ebp,WORD PTR [rsp+0x46]
   14000d79e:	movzx  r15d,WORD PTR [rsp+0x44]
   14000d7a4:	movzx  r12d,WORD PTR [rsp+0x42]
   14000d7aa:	mov    r14,rdx
   14000d7ad:	mov    rax,rdx
   14000d7b0:	movzx  edx,WORD PTR [rip+0x316ad]        # 0x14003ee64
   14000d7b7:	mov    r13,r8
   14000d7ba:	xor    r8d,r8d
   14000d7bd:	mov    rbx,rcx
   14000d7c0:	movzx  r9d,r8w
   14000d7c4:	cmp    r8w,dx
   14000d7c8:	jge    0x14000d823
   14000d7ca:	nop    WORD PTR [rax+rax*1+0x0]
   14000d7d0:	movzx  ecx,WORD PTR [rax]
   14000d7d3:	cmp    bx,cx
   14000d7d6:	jne    0x14000d7f0
   14000d7d8:	cmp    r12w,WORD PTR [rax+0x2]
   14000d7dd:	jne    0x14000d7f0
   14000d7df:	cmp    r15w,WORD PTR [rax+0x4]
   14000d7e4:	jne    0x14000d7f0
   14000d7e6:	cmp    bp,WORD PTR [rax+0x6]
   14000d7ea:	je     0x14000d93b
   14000d7f0:	test   cx,cx
   14000d7f3:	jne    0x14000d815
   14000d7f5:	cmp    WORD PTR [rax+0x2],r8w
   14000d7fa:	jne    0x14000d815
   14000d7fc:	cmp    WORD PTR [rax+0x4],r8w
   14000d801:	jne    0x14000d815
   14000d803:	cmp    WORD PTR [rax+0x6],r8w
   14000d808:	jne    0x14000d815
   14000d80a:	cmp    WORD PTR [rax+0x8],r8w
   14000d80f:	je     0x14000d965
   14000d815:	inc    r9w
   14000d819:	add    rax,0xa
   14000d81d:	cmp    r9w,dx
   14000d821:	jl     0x14000d7d0
   14000d823:	mov    QWORD PTR [rsp+0xe8],rsi
   14000d82b:	mov    QWORD PTR [rsp+0x90],rdi
   14000d833:	movzx  esi,r8w
   14000d837:	cmp    r8w,dx
   14000d83b:	jge    0x14000d8e6
   14000d841:	lea    rdi,[r14+0x4]
   14000d845:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d850:	movzx  ecx,WORD PTR [rdi]
   14000d853:	movzx  edx,WORD PTR [rdi-0x2]
   14000d857:	movzx  eax,WORD PTR [rdi+0x2]
   14000d85b:	movzx  r9d,WORD PTR [rdi-0x4]
   14000d860:	movzx  r8d,WORD PTR [rdi+0x4]
   14000d865:	mov    DWORD PTR [rsp+0x30],eax
   14000d869:	mov    DWORD PTR [rsp+0x28],ecx
   14000d86d:	mov    DWORD PTR [rsp+0x20],edx
   14000d871:	lea    rdx,[rip+0x23b98]        # 0x140031410
   14000d878:	lea    rcx,[rsp+0x48]
   14000d87d:	call   QWORD PTR [rip+0x21bcd]        # 0x14002f450
   14000d883:	test   eax,eax
   14000d885:	js     0x14000d97c
   14000d88b:	xor    eax,eax
   14000d88d:	movzx  ecx,ax
   14000d890:	movsx  rax,cx
   14000d894:	lea    rdx,[rsp+0x48]
   14000d899:	add    rdx,rax
   14000d89c:	movzx  eax,BYTE PTR [rdx]
   14000d89f:	test   al,al
   14000d8a1:	je     0x14000d8b0
   14000d8a3:	inc    cx
   14000d8a6:	not    al
   14000d8a8:	mov    BYTE PTR [rdx],al
   14000d8aa:	cmp    cx,0x32
   14000d8ae:	jl     0x14000d890
   14000d8b0:	lea    rdx,[rsp+0x48]
   14000d8b5:	mov    rcx,r13
   14000d8b8:	call   QWORD PTR [rip+0x21b7a]        # 0x14002f438
   14000d8be:	test   eax,eax
   14000d8c0:	js     0x14000d97c
   14000d8c6:	xor    r8d,r8d
   14000d8c9:	inc    si
   14000d8cc:	add    rdi,0xa
   14000d8d0:	cmp    si,WORD PTR [rip+0x3158d]        # 0x14003ee64
   14000d8d7:	mov    QWORD PTR [rdi-0xe],r8
   14000d8db:	mov    WORD PTR [rdi-0x6],r8w
   14000d8e0:	jl     0x14000d850
   14000d8e6:	inc    WORD PTR [rip+0x31f03]        # 0x14003f7f0
   14000d8ed:	inc    WORD PTR [r14+0x8]
   14000d8f2:	mov    WORD PTR [r14],bx
   14000d8f6:	mov    WORD PTR [r14+0x2],r12w
   14000d8fb:	mov    WORD PTR [r14+0x4],r15w
   14000d900:	mov    WORD PTR [r14+0x6],bp
   14000d905:	movzx  eax,r8w
   14000d909:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000d911:	mov    rdi,QWORD PTR [rsp+0x90]
   14000d919:	mov    rcx,QWORD PTR [rsp+0x80]
   14000d921:	xor    rcx,rsp
   14000d924:	call   0x14002c960
   14000d929:	add    rsp,0x98
   14000d930:	pop    r15
   14000d932:	pop    r14
   14000d934:	pop    r13
   14000d936:	pop    r12
   14000d938:	pop    rbp
   14000d939:	pop    rbx
   14000d93a:	ret    
   14000d93b:	movzx  ecx,WORD PTR [rax+0x8]
   14000d93f:	mov    r8d,0xffff
   14000d945:	cmp    cx,r8w
   14000d949:	jae    0x14000d952
   14000d94b:	inc    cx
   14000d94e:	mov    WORD PTR [rax+0x8],cx
   14000d952:	xor    r8d,r8d
   14000d955:	cmp    r9w,dx
   14000d959:	jge    0x14000d823
   14000d95f:	movzx  eax,r8w
   14000d963:	jmp    0x14000d919
   14000d965:	inc    WORD PTR [rax+0x8]
   14000d969:	mov    WORD PTR [rax],bx
   14000d96c:	mov    WORD PTR [rax+0x2],r12w
   14000d971:	mov    WORD PTR [rax+0x4],r15w
   14000d976:	mov    WORD PTR [rax+0x6],bp
   14000d97a:	jmp    0x14000d955
   14000d97c:	mov    eax,0x1
   14000d981:	jmp    0x14000d909
   14000d983:	int3   
   14000d984:	int3   
   14000d985:	int3   
   14000d986:	int3   
   14000d987:	int3   
   14000d988:	int3   
   14000d989:	int3   
   14000d98a:	int3   
   14000d98b:	int3   
   14000d98c:	int3   
   14000d98d:	int3   
   14000d98e:	int3   
   14000d98f:	int3   
   14000d990:	rex push rbp
   14000d992:	push   rsi
   14000d993:	push   rdi
   14000d994:	push   r12
   14000d996:	push   r13
   14000d998:	push   r14
   14000d99a:	push   r15
   14000d99c:	lea    rbp,[rsp-0x80]
   14000d9a1:	sub    rsp,0x180
   14000d9a8:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000d9b1:	mov    QWORD PTR [rsp+0x1c0],rbx
   14000d9b9:	mov    rax,QWORD PTR [rip+0x2e640]        # 0x14003c000
   14000d9c0:	xor    rax,rsp
   14000d9c3:	mov    QWORD PTR [rbp+0x70],rax
   14000d9c7:	mov    r15,r9
   14000d9ca:	mov    rbx,r8
   14000d9cd:	mov    r12,QWORD PTR [rip+0x3149c]        # 0x14003ee70
   14000d9d4:	mov    QWORD PTR [rsp+0x58],r12
   14000d9d9:	xor    r14d,r14d
   14000d9dc:	mov    WORD PTR [rip+0x31dbc],r14w        # 0x14003f7a0
   14000d9e4:	mov    WORD PTR [rip+0x31df4],r14w        # 0x14003f7e0
   14000d9ec:	mov    WORD PTR [rip+0x31db0],r14w        # 0x14003f7a4
   14000d9f4:	mov    WORD PTR [rip+0x31df8],r14w        # 0x14003f7f4
   14000d9fc:	mov    WORD PTR [rip+0x31de4],r14w        # 0x14003f7e8
   14000da04:	mov    WORD PTR [rip+0x3146c],r14w        # 0x14003ee78
   14000da0c:	mov    WORD PTR [rip+0x31d84],r14w        # 0x14003f798
   14000da14:	mov    WORD PTR [rip+0x31d74],r14w        # 0x14003f790
   14000da1c:	mov    WORD PTR [rip+0x31d78],r14w        # 0x14003f79c
   14000da24:	mov    BYTE PTR [rsp+0x40],0x1
   14000da29:	mov    ecx,r14d
   14000da2c:	lea    r14,[rip+0xffffffffffff25cd]        # 0x140000000
   14000da33:	movzx  eax,BYTE PTR [rcx+r14*1+0x31380]
   14000da3c:	mov    BYTE PTR [rsp+rcx*1+0x70],al
   14000da40:	lea    rcx,[rcx+0x1]
   14000da44:	test   al,al
   14000da46:	jne    0x14000da33
   14000da48:	mov    ecx,0x10
   14000da4d:	call   QWORD PTR [rip+0x21f45]        # 0x14002f998
   14000da53:	mov    rdi,rax
   14000da56:	mov    QWORD PTR [rsp+0x50],rax
   14000da5b:	test   rax,rax
   14000da5e:	mov    r14d,0x0
   14000da64:	je     0x14000da9c
   14000da66:	mov    WORD PTR [rax],r14w
   14000da6a:	mov    QWORD PTR [rax+0x8],r14
   14000da6e:	lea    rcx,[rsp+0x70]
   14000da73:	call   QWORD PTR [rip+0x21807]        # 0x14002f280
   14000da79:	test   eax,eax
   14000da7b:	jle    0x14000da9f
   14000da7d:	inc    eax
   14000da7f:	movsxd rcx,eax
   14000da82:	call   QWORD PTR [rip+0x21f10]        # 0x14002f998
   14000da88:	mov    QWORD PTR [rdi+0x8],rax
   14000da8c:	lea    rdx,[rsp+0x70]
   14000da91:	mov    rcx,rax
   14000da94:	call   QWORD PTR [rip+0x217be]        # 0x14002f258
   14000da9a:	jmp    0x14000da9f
   14000da9c:	mov    rdi,r14
   14000da9f:	mov    edx,0x1
   14000daa4:	mov    rcx,rdi
   14000daa7:	call   0x14002ab70
   14000daac:	mov    r13,rax
   14000daaf:	mov    QWORD PTR [rsp+0x50],rax
   14000dab4:	test   rax,rax
   14000dab7:	je     0x1400106d8
   14000dabd:	test   rdi,rdi
   14000dac0:	je     0x14000dada
   14000dac2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000dac6:	test   rcx,rcx
   14000dac9:	je     0x14000dad1
   14000dacb:	call   QWORD PTR [rip+0x220a7]        # 0x14002fb78
   14000dad1:	mov    rcx,rdi
   14000dad4:	call   QWORD PTR [rip+0x2209e]        # 0x14002fb78
   14000dada:	xor    ecx,ecx
   14000dadc:	call   QWORD PTR [rip+0x21976]        # 0x14002f458
   14000dae2:	mov    rcx,rax
   14000dae5:	shr    eax,0x8
   14000dae8:	and    al,0xf0
   14000daea:	mov    BYTE PTR [rip+0x2e82c],al        # 0x14003c31c
   14000daf0:	and    cl,0xf
   14000daf3:	mov    BYTE PTR [rip+0x2e824],cl        # 0x14003c31d
   14000daf9:	movaps xmm0,XMMWORD PTR [rip+0x2e810]        # 0x14003c310
   14000db00:	movups XMMWORD PTR [rip+0x31b79],xmm0        # 0x14003f680
   14000db07:	mov    QWORD PTR [rsp+0x20],r14
   14000db0c:	lea    r9,[rsp+0x3c]
   14000db11:	mov    r8d,0x10
   14000db17:	lea    rdx,[rip+0x31b62]        # 0x14003f680
   14000db1e:	mov    rcx,QWORD PTR [rbx]
   14000db21:	call   QWORD PTR [rip+0x216e9]        # 0x14002f210
   14000db27:	mov    esi,0x106
   14000db2c:	test   eax,eax
   14000db2e:	jne    0x14000db68
   14000db30:	call   QWORD PTR [rip+0x2162a]        # 0x14002f160
   14000db36:	lea    rdi,[rip+0xffffffffffff24c3]        # 0x140000000
   14000db3d:	cmp    eax,0x58
   14000db40:	jae    0x14000db4d
   14000db42:	mov    eax,eax
   14000db44:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000db4b:	jmp    0x14000db4f
   14000db4d:	mov    ecx,esi
   14000db4f:	mov    DWORD PTR [rip+0x35563],ecx        # 0x1400430b8
   14000db55:	mov    DWORD PTR [rip+0x35969],0x2        # 0x1400434c8
   14000db5f:	mov    BYTE PTR [rip+0x3585a],0x0        # 0x1400433c0
   14000db66:	jmp    0x14000db6f
   14000db68:	lea    rdi,[rip+0xffffffffffff2491]        # 0x140000000
   14000db6f:	cmp    DWORD PTR [rsp+0x3c],0x10
   14000db74:	jne    0x1400106d8
   14000db7a:	mov    QWORD PTR [rsp+0x20],r14
   14000db7f:	lea    r9,[rsp+0x3c]
   14000db84:	mov    r8d,0x2
   14000db8a:	lea    rdx,[rip+0x2e4b3]        # 0x14003c044
   14000db91:	mov    rcx,QWORD PTR [rbx]
   14000db94:	call   QWORD PTR [rip+0x21676]        # 0x14002f210
   14000db9a:	test   eax,eax
   14000db9c:	jne    0x14000dbcd
   14000db9e:	call   QWORD PTR [rip+0x215bc]        # 0x14002f160
   14000dba4:	cmp    eax,0x58
   14000dba7:	jae    0x14000dbb4
   14000dba9:	mov    eax,eax
   14000dbab:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000dbb2:	jmp    0x14000dbb6
   14000dbb4:	mov    ecx,esi
   14000dbb6:	mov    DWORD PTR [rip+0x354fc],ecx        # 0x1400430b8
   14000dbbc:	mov    DWORD PTR [rip+0x35902],0x2        # 0x1400434c8
   14000dbc6:	mov    BYTE PTR [rip+0x357f3],0x0        # 0x1400433c0
   14000dbcd:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000dbd2:	jne    0x1400106d8
   14000dbd8:	mov    WORD PTR [rip+0x31c03],0x3030        # 0x14003f7e4
   14000dbe1:	mov    QWORD PTR [rsp+0x20],r14
   14000dbe6:	lea    r9,[rsp+0x3c]
   14000dbeb:	mov    r8d,0x2
   14000dbf1:	lea    rdx,[rip+0x31bec]        # 0x14003f7e4
   14000dbf8:	mov    rcx,QWORD PTR [rbx]
   14000dbfb:	call   QWORD PTR [rip+0x2160f]        # 0x14002f210
   14000dc01:	test   eax,eax
   14000dc03:	jne    0x14000dc34
   14000dc05:	call   QWORD PTR [rip+0x21555]        # 0x14002f160
   14000dc0b:	cmp    eax,0x58
   14000dc0e:	jae    0x14000dc1b
   14000dc10:	mov    eax,eax
   14000dc12:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000dc19:	jmp    0x14000dc1d
   14000dc1b:	mov    ecx,esi
   14000dc1d:	mov    DWORD PTR [rip+0x35495],ecx        # 0x1400430b8
   14000dc23:	mov    DWORD PTR [rip+0x3589b],0x2        # 0x1400434c8
   14000dc2d:	mov    BYTE PTR [rip+0x3578c],0x0        # 0x1400433c0
   14000dc34:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000dc39:	jne    0x1400106d8
   14000dc3f:	movzx  r8d,r14w
   14000dc43:	movzx  r9d,BYTE PTR [rip+0x31b99]        # 0x14003f7e4
   14000dc4b:	lea    r10,[rip+0xffffffffffff23ae]        # 0x140000000
   14000dc52:	nop    DWORD PTR [rax+0x0]
   14000dc56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000dc60:	mov    edi,0x2
   14000dc65:	lea    rdx,[rip+0x31b78]        # 0x14003f7e4
   14000dc6c:	movsx  rax,r8w
   14000dc70:	lea    rcx,[rax+rax*2]
   14000dc74:	lea    rax,[r10+0x3c138]
   14000dc7b:	lea    rax,[rax+rcx*2]
   14000dc7f:	movzx  ecx,BYTE PTR [rax]
   14000dc82:	lea    r11,[rip+0x31b63]        # 0x14003f7ec
   14000dc89:	cmp    cl,r9b
   14000dc8c:	jne    0x14000dca5
   14000dc8e:	xchg   ax,ax
   14000dc90:	test   cl,cl
   14000dc92:	je     0x14000dcbc
   14000dc94:	dec    edi
   14000dc96:	je     0x14000dcbc
   14000dc98:	inc    rax
   14000dc9b:	inc    rdx
   14000dc9e:	movzx  ecx,BYTE PTR [rax]
   14000dca1:	cmp    cl,BYTE PTR [rdx]
   14000dca3:	je     0x14000dc90
   14000dca5:	movzx  ecx,BYTE PTR [rax]
   14000dca8:	movzx  eax,BYTE PTR [rdx]
   14000dcab:	cmp    ecx,eax
   14000dcad:	je     0x14000dcbc
   14000dcaf:	inc    r8w
   14000dcb3:	cmp    r8w,0x2
   14000dcb8:	jge    0x14000dcc3
   14000dcba:	jmp    0x14000dc60
   14000dcbc:	cmp    r8w,0x2
   14000dcc1:	jl     0x14000dccd
   14000dcc3:	xor    eax,eax
   14000dcc5:	mov    DWORD PTR [rip+0x31b21],eax        # 0x14003f7ec
   14000dccb:	jmp    0x14000dd10
   14000dccd:	mov    edx,0x4
   14000dcd2:	mov    rdi,r11
   14000dcd5:	movsx  rax,r8w
   14000dcd9:	lea    rcx,[rax+rax*2]
   14000dcdd:	add    rcx,rcx
   14000dce0:	sub    rcx,r11
   14000dce3:	lea    r8,[r10+0x3c13a]
   14000dcea:	add    r8,rcx
   14000dced:	nop    DWORD PTR [rax]
   14000dcf0:	dec    edx
   14000dcf2:	movzx  eax,BYTE PTR [r8+rdi*1]
   14000dcf7:	mov    BYTE PTR [rdi],al
   14000dcf9:	inc    rdi
   14000dcfc:	test   al,al
   14000dcfe:	je     0x14000dd06
   14000dd00:	test   edx,edx
   14000dd02:	jne    0x14000dcf0
   14000dd04:	jmp    0x14000dd10
   14000dd06:	test   edx,edx
   14000dd08:	jle    0x14000dd10
   14000dd0a:	mov    ecx,edx
   14000dd0c:	xor    eax,eax
   14000dd0e:	rep stos BYTE PTR es:[rdi],al
   14000dd10:	mov    QWORD PTR [rsp+0x20],r14
   14000dd15:	lea    r9,[rsp+0x3c]
   14000dd1a:	mov    r8d,0x4
   14000dd20:	mov    rdx,r11
   14000dd23:	mov    rcx,QWORD PTR [rbx]
   14000dd26:	call   QWORD PTR [rip+0x214e4]        # 0x14002f210
   14000dd2c:	test   eax,eax
   14000dd2e:	jne    0x14000dd68
   14000dd30:	call   QWORD PTR [rip+0x2142a]        # 0x14002f160
   14000dd36:	lea    rdi,[rip+0xffffffffffff22c3]        # 0x140000000
   14000dd3d:	cmp    eax,0x58
   14000dd40:	jae    0x14000dd4d
   14000dd42:	mov    eax,eax
   14000dd44:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000dd4b:	jmp    0x14000dd4f
   14000dd4d:	mov    ecx,esi
   14000dd4f:	mov    DWORD PTR [rip+0x35363],ecx        # 0x1400430b8
   14000dd55:	mov    DWORD PTR [rip+0x35769],0x2        # 0x1400434c8
   14000dd5f:	mov    BYTE PTR [rip+0x3565a],0x0        # 0x1400433c0
   14000dd66:	jmp    0x14000dd6f
   14000dd68:	lea    rdi,[rip+0xffffffffffff2291]        # 0x140000000
   14000dd6f:	cmp    DWORD PTR [rsp+0x3c],0x4
   14000dd74:	jne    0x1400106d8
   14000dd7a:	mov    edx,0x100
   14000dd7f:	movzx  eax,WORD PTR [rip+0x310de]        # 0x14003ee64
   14000dd86:	cmp    dx,ax
   14000dd89:	jge    0x14000dd94
   14000dd8b:	mov    WORD PTR [rip+0x310d6],dx        # 0x14003ee68
   14000dd92:	jmp    0x14000dd9e
   14000dd94:	movzx  edx,ax
   14000dd97:	mov    WORD PTR [rip+0x310ca],ax        # 0x14003ee68
   14000dd9e:	shl    dx,0x2
   14000dda2:	add    dx,WORD PTR [rip+0x3034f]        # 0x14003e0f8
   14000dda9:	mov    eax,0x48b
   14000ddae:	add    dx,ax
   14000ddb1:	add    dx,dx
   14000ddb4:	movzx  ecx,WORD PTR [rip+0x31091]        # 0x14003ee4c
   14000ddbb:	movzx  eax,cx
   14000ddbe:	shl    ax,0x2
   14000ddc2:	add    cx,ax
   14000ddc5:	add    dx,cx
   14000ddc8:	add    dx,WORD PTR [rip+0x3032b]        # 0x14003e0fa
   14000ddcf:	mov    WORD PTR [rip+0x318c2],dx        # 0x14003f698
   14000ddd6:	mov    WORD PTR [rsp+0x30],dx
   14000dddb:	mov    QWORD PTR [rsp+0x20],r14
   14000dde0:	lea    r9,[rsp+0x3c]
   14000dde5:	mov    r8d,0x2
   14000ddeb:	lea    rdx,[rsp+0x30]
   14000ddf0:	mov    rcx,QWORD PTR [rbx]
   14000ddf3:	call   QWORD PTR [rip+0x21417]        # 0x14002f210
   14000ddf9:	test   eax,eax
   14000ddfb:	jne    0x14000de2c
   14000ddfd:	call   QWORD PTR [rip+0x2135d]        # 0x14002f160
   14000de03:	cmp    eax,0x58
   14000de06:	jae    0x14000de13
   14000de08:	mov    eax,eax
   14000de0a:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   14000de11:	jmp    0x14000de15
   14000de13:	mov    ecx,esi
   14000de15:	mov    DWORD PTR [rip+0x3529d],ecx        # 0x1400430b8
   14000de1b:	mov    DWORD PTR [rip+0x356a3],0x2        # 0x1400434c8
   14000de25:	mov    BYTE PTR [rip+0x35594],0x0        # 0x1400433c0
   14000de2c:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000de31:	jne    0x1400106d8
   14000de37:	mov    DWORD PTR [rip+0x31862],r14d        # 0x14003f6a0
   14000de3e:	mov    DWORD PTR [rsp+0x38],r14d
   14000de43:	movzx  edi,r14w
   14000de47:	nop    WORD PTR [rax+rax*1+0x0]
   14000de50:	mov    QWORD PTR [rsp+0x20],r14
   14000de55:	lea    r9,[rsp+0x3c]
   14000de5a:	mov    r8d,0x4
   14000de60:	lea    rdx,[rsp+0x38]
   14000de65:	mov    rcx,QWORD PTR [rbx]
   14000de68:	call   QWORD PTR [rip+0x213a2]        # 0x14002f210
   14000de6e:	test   eax,eax
   14000de70:	jne    0x14000dea8
   14000de72:	call   QWORD PTR [rip+0x212e8]        # 0x14002f160
   14000de78:	cmp    eax,0x58
   14000de7b:	jae    0x14000de8f
   14000de7d:	mov    eax,eax
   14000de7f:	lea    rcx,[rip+0xffffffffffff217a]        # 0x140000000
   14000de86:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000de8d:	jmp    0x14000de91
   14000de8f:	mov    ecx,esi
   14000de91:	mov    DWORD PTR [rip+0x35221],ecx        # 0x1400430b8
   14000de97:	mov    DWORD PTR [rip+0x35627],0x2        # 0x1400434c8
   14000dea1:	mov    BYTE PTR [rip+0x35518],0x0        # 0x1400433c0
   14000dea8:	cmp    DWORD PTR [rsp+0x3c],0x4
   14000dead:	jne    0x1400106d8
   14000deb3:	inc    di
   14000deb6:	cmp    di,0x8
   14000deba:	jl     0x14000de50
   14000debc:	mov    r9d,0x1
   14000dec2:	xor    r8d,r8d
   14000dec5:	xor    edx,edx
   14000dec7:	mov    rcx,QWORD PTR [rbx]
   14000deca:	call   QWORD PTR [rip+0x21348]        # 0x14002f218
   14000ded0:	mov    edi,eax
   14000ded2:	inc    eax
   14000ded4:	test   eax,0xfffffffe
   14000ded9:	jne    0x14000df11
   14000dedb:	call   QWORD PTR [rip+0x2127f]        # 0x14002f160
   14000dee1:	cmp    eax,0x58
   14000dee4:	jae    0x14000def8
   14000dee6:	mov    eax,eax
   14000dee8:	lea    rcx,[rip+0xffffffffffff2111]        # 0x140000000
   14000deef:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000def6:	jmp    0x14000defa
   14000def8:	mov    ecx,esi
   14000defa:	mov    DWORD PTR [rip+0x351b8],ecx        # 0x1400430b8
   14000df00:	mov    DWORD PTR [rip+0x355be],0x2        # 0x1400434c8
   14000df0a:	mov    BYTE PTR [rip+0x354af],0x0        # 0x1400433c0
   14000df11:	mov    DWORD PTR [rip+0x31785],edi        # 0x14003f69c
   14000df17:	mov    QWORD PTR [rsp+0x20],r14
   14000df1c:	lea    r9,[rsp+0x3c]
   14000df21:	mov    r8d,0x1
   14000df27:	lea    rdx,[rsp+0x40]
   14000df2c:	mov    rcx,QWORD PTR [rbx]
   14000df2f:	call   QWORD PTR [rip+0x212db]        # 0x14002f210
   14000df35:	test   eax,eax
   14000df37:	jne    0x14000df6f
   14000df39:	call   QWORD PTR [rip+0x21221]        # 0x14002f160
   14000df3f:	cmp    eax,0x58
   14000df42:	jae    0x14000df56
   14000df44:	mov    eax,eax
   14000df46:	lea    rcx,[rip+0xffffffffffff20b3]        # 0x140000000
   14000df4d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000df54:	jmp    0x14000df58
   14000df56:	mov    ecx,esi
   14000df58:	mov    DWORD PTR [rip+0x3515a],ecx        # 0x1400430b8
   14000df5e:	mov    DWORD PTR [rip+0x35560],0x2        # 0x1400434c8
   14000df68:	mov    BYTE PTR [rip+0x35451],0x0        # 0x1400433c0
   14000df6f:	cmp    DWORD PTR [rsp+0x3c],0x1
   14000df74:	jne    0x1400106d8
   14000df7a:	mov    QWORD PTR [rsp+0x20],r14
   14000df7f:	lea    r9,[rsp+0x3c]
   14000df84:	mov    r8d,0x1
   14000df8a:	lea    rdx,[rip+0x2ff55]        # 0x14003dee6
   14000df91:	mov    rcx,QWORD PTR [rbx]
   14000df94:	call   QWORD PTR [rip+0x21276]        # 0x14002f210
   14000df9a:	test   eax,eax
   14000df9c:	jne    0x14000dfd4
   14000df9e:	call   QWORD PTR [rip+0x211bc]        # 0x14002f160
   14000dfa4:	cmp    eax,0x58
   14000dfa7:	jae    0x14000dfbb
   14000dfa9:	mov    eax,eax
   14000dfab:	lea    rcx,[rip+0xffffffffffff204e]        # 0x140000000
   14000dfb2:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000dfb9:	jmp    0x14000dfbd
   14000dfbb:	mov    ecx,esi
   14000dfbd:	mov    DWORD PTR [rip+0x350f5],ecx        # 0x1400430b8
   14000dfc3:	mov    DWORD PTR [rip+0x354fb],0x2        # 0x1400434c8
   14000dfcd:	mov    BYTE PTR [rip+0x353ec],0x0        # 0x1400433c0
   14000dfd4:	cmp    DWORD PTR [rsp+0x3c],0x1
   14000dfd9:	jne    0x1400106d8
   14000dfdf:	mov    QWORD PTR [rsp+0x20],r14
   14000dfe4:	lea    r9,[rsp+0x3c]
   14000dfe9:	mov    r8d,0x4
   14000dfef:	lea    rdx,[rsp+0x38]
   14000dff4:	mov    rcx,QWORD PTR [rbx]
   14000dff7:	call   QWORD PTR [rip+0x21213]        # 0x14002f210
   14000dffd:	test   eax,eax
   14000dfff:	jne    0x14000e037
   14000e001:	call   QWORD PTR [rip+0x21159]        # 0x14002f160
   14000e007:	cmp    eax,0x58
   14000e00a:	jae    0x14000e01e
   14000e00c:	mov    eax,eax
   14000e00e:	lea    rcx,[rip+0xffffffffffff1feb]        # 0x140000000
   14000e015:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e01c:	jmp    0x14000e020
   14000e01e:	mov    ecx,esi
   14000e020:	mov    DWORD PTR [rip+0x35092],ecx        # 0x1400430b8
   14000e026:	mov    DWORD PTR [rip+0x35498],0x2        # 0x1400434c8
   14000e030:	mov    BYTE PTR [rip+0x35389],0x0        # 0x1400433c0
   14000e037:	cmp    DWORD PTR [rsp+0x3c],0x4
   14000e03c:	jne    0x1400106d8
   14000e042:	movzx  eax,WORD PTR [rip+0x30e03]        # 0x14003ee4c
   14000e049:	shl    ax,0x2
   14000e04d:	mov    WORD PTR [rsp+0x30],ax
   14000e052:	mov    QWORD PTR [rsp+0x20],r14
   14000e057:	lea    r9,[rsp+0x3c]
   14000e05c:	mov    r8d,0x2
   14000e062:	lea    rdx,[rsp+0x30]
   14000e067:	mov    rcx,QWORD PTR [rbx]
   14000e06a:	call   QWORD PTR [rip+0x211a0]        # 0x14002f210
   14000e070:	test   eax,eax
   14000e072:	jne    0x14000e0aa
   14000e074:	call   QWORD PTR [rip+0x210e6]        # 0x14002f160
   14000e07a:	cmp    eax,0x58
   14000e07d:	jae    0x14000e091
   14000e07f:	mov    eax,eax
   14000e081:	lea    rcx,[rip+0xffffffffffff1f78]        # 0x140000000
   14000e088:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e08f:	jmp    0x14000e093
   14000e091:	mov    ecx,esi
   14000e093:	mov    DWORD PTR [rip+0x3501f],ecx        # 0x1400430b8
   14000e099:	mov    DWORD PTR [rip+0x35425],0x2        # 0x1400434c8
   14000e0a3:	mov    BYTE PTR [rip+0x35316],0x0        # 0x1400433c0
   14000e0aa:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e0af:	jne    0x1400106d8
   14000e0b5:	mov    QWORD PTR [rsp+0x20],r14
   14000e0ba:	lea    r9,[rsp+0x3c]
   14000e0bf:	mov    r8d,0x4
   14000e0c5:	lea    rdx,[rsp+0x38]
   14000e0ca:	mov    rcx,QWORD PTR [rbx]
   14000e0cd:	call   QWORD PTR [rip+0x2113d]        # 0x14002f210
   14000e0d3:	test   eax,eax
   14000e0d5:	jne    0x14000e10d
   14000e0d7:	call   QWORD PTR [rip+0x21083]        # 0x14002f160
   14000e0dd:	cmp    eax,0x58
   14000e0e0:	jae    0x14000e0f4
   14000e0e2:	mov    eax,eax
   14000e0e4:	lea    rcx,[rip+0xffffffffffff1f15]        # 0x140000000
   14000e0eb:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e0f2:	jmp    0x14000e0f6
   14000e0f4:	mov    ecx,esi
   14000e0f6:	mov    DWORD PTR [rip+0x34fbc],ecx        # 0x1400430b8
   14000e0fc:	mov    DWORD PTR [rip+0x353c2],0x2        # 0x1400434c8
   14000e106:	mov    BYTE PTR [rip+0x352b3],0x0        # 0x1400433c0
   14000e10d:	cmp    DWORD PTR [rsp+0x3c],0x4
   14000e112:	jne    0x1400106d8
   14000e118:	movzx  eax,WORD PTR [rip+0x30d45]        # 0x14003ee64
   14000e11f:	mov    WORD PTR [rsp+0x30],ax
   14000e124:	mov    QWORD PTR [rsp+0x20],r14
   14000e129:	lea    r9,[rsp+0x3c]
   14000e12e:	mov    r8d,0x2
   14000e134:	lea    rdx,[rsp+0x30]
   14000e139:	mov    rcx,QWORD PTR [rbx]
   14000e13c:	call   QWORD PTR [rip+0x210ce]        # 0x14002f210
   14000e142:	test   eax,eax
   14000e144:	jne    0x14000e17c
   14000e146:	call   QWORD PTR [rip+0x21014]        # 0x14002f160
   14000e14c:	cmp    eax,0x58
   14000e14f:	jae    0x14000e163
   14000e151:	mov    eax,eax
   14000e153:	lea    rcx,[rip+0xffffffffffff1ea6]        # 0x140000000
   14000e15a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e161:	jmp    0x14000e165
   14000e163:	mov    ecx,esi
   14000e165:	mov    DWORD PTR [rip+0x34f4d],ecx        # 0x1400430b8
   14000e16b:	mov    DWORD PTR [rip+0x35353],0x2        # 0x1400434c8
   14000e175:	mov    BYTE PTR [rip+0x35244],0x0        # 0x1400433c0
   14000e17c:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e181:	jne    0x1400106d8
   14000e187:	movzx  eax,WORD PTR [rip+0x30cda]        # 0x14003ee68
   14000e18e:	mov    WORD PTR [rsp+0x30],ax
   14000e193:	mov    QWORD PTR [rsp+0x20],r14
   14000e198:	lea    r9,[rsp+0x3c]
   14000e19d:	mov    r8d,0x2
   14000e1a3:	lea    rdx,[rsp+0x30]
   14000e1a8:	mov    rcx,QWORD PTR [rbx]
   14000e1ab:	call   QWORD PTR [rip+0x2105f]        # 0x14002f210
   14000e1b1:	test   eax,eax
   14000e1b3:	jne    0x14000e1eb
   14000e1b5:	call   QWORD PTR [rip+0x20fa5]        # 0x14002f160
   14000e1bb:	cmp    eax,0x58
   14000e1be:	jae    0x14000e1d2
   14000e1c0:	mov    eax,eax
   14000e1c2:	lea    rcx,[rip+0xffffffffffff1e37]        # 0x140000000
   14000e1c9:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e1d0:	jmp    0x14000e1d4
   14000e1d2:	mov    ecx,esi
   14000e1d4:	mov    DWORD PTR [rip+0x34ede],ecx        # 0x1400430b8
   14000e1da:	mov    DWORD PTR [rip+0x352e4],0x2        # 0x1400434c8
   14000e1e4:	mov    BYTE PTR [rip+0x351d5],0x0        # 0x1400433c0
   14000e1eb:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e1f0:	jne    0x1400106d8
   14000e1f6:	movzx  edi,r14w
   14000e1fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000e200:	mov    QWORD PTR [rsp+0x20],r14
   14000e205:	lea    r9,[rsp+0x3c]
   14000e20a:	mov    r8d,0x4
   14000e210:	lea    rdx,[rsp+0x38]
   14000e215:	mov    rcx,QWORD PTR [rbx]
   14000e218:	call   QWORD PTR [rip+0x20ff2]        # 0x14002f210
   14000e21e:	test   eax,eax
   14000e220:	jne    0x14000e258
   14000e222:	call   QWORD PTR [rip+0x20f38]        # 0x14002f160
   14000e228:	cmp    eax,0x58
   14000e22b:	jae    0x14000e23f
   14000e22d:	mov    eax,eax
   14000e22f:	lea    rcx,[rip+0xffffffffffff1dca]        # 0x140000000
   14000e236:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e23d:	jmp    0x14000e241
   14000e23f:	mov    ecx,esi
   14000e241:	mov    DWORD PTR [rip+0x34e71],ecx        # 0x1400430b8
   14000e247:	mov    DWORD PTR [rip+0x35277],0x2        # 0x1400434c8
   14000e251:	mov    BYTE PTR [rip+0x35168],0x0        # 0x1400433c0
   14000e258:	cmp    DWORD PTR [rsp+0x3c],0x4
   14000e25d:	jne    0x1400106d8
   14000e263:	inc    di
   14000e266:	cmp    di,0x7
   14000e26a:	jl     0x14000e200
   14000e26c:	movzx  eax,WORD PTR [rip+0x30bd9]        # 0x14003ee4c
   14000e273:	mov    WORD PTR [rsp+0x30],ax
   14000e278:	mov    QWORD PTR [rsp+0x20],r14
   14000e27d:	lea    r9,[rsp+0x3c]
   14000e282:	mov    r8d,0x2
   14000e288:	lea    rdx,[rsp+0x30]
   14000e28d:	mov    rcx,QWORD PTR [rbx]
   14000e290:	call   QWORD PTR [rip+0x20f7a]        # 0x14002f210
   14000e296:	test   eax,eax
   14000e298:	jne    0x14000e2d0
   14000e29a:	call   QWORD PTR [rip+0x20ec0]        # 0x14002f160
   14000e2a0:	cmp    eax,0x58
   14000e2a3:	jae    0x14000e2b7
   14000e2a5:	mov    eax,eax
   14000e2a7:	lea    rcx,[rip+0xffffffffffff1d52]        # 0x140000000
   14000e2ae:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e2b5:	jmp    0x14000e2b9
   14000e2b7:	mov    ecx,esi
   14000e2b9:	mov    DWORD PTR [rip+0x34df9],ecx        # 0x1400430b8
   14000e2bf:	mov    DWORD PTR [rip+0x351ff],0x2        # 0x1400434c8
   14000e2c9:	mov    BYTE PTR [rip+0x350f0],0x0        # 0x1400433c0
   14000e2d0:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e2d5:	jne    0x1400106d8
   14000e2db:	mov    QWORD PTR [rsp+0x20],r14
   14000e2e0:	lea    r9,[rsp+0x3c]
   14000e2e5:	mov    r8d,0x9c
   14000e2eb:	lea    rdx,[rip+0x31d1e]        # 0x140040010
   14000e2f2:	mov    rcx,QWORD PTR [rbx]
   14000e2f5:	call   QWORD PTR [rip+0x20f15]        # 0x14002f210
   14000e2fb:	test   eax,eax
   14000e2fd:	jne    0x14000e335
   14000e2ff:	call   QWORD PTR [rip+0x20e5b]        # 0x14002f160
   14000e305:	cmp    eax,0x58
   14000e308:	jae    0x14000e31c
   14000e30a:	mov    eax,eax
   14000e30c:	lea    rcx,[rip+0xffffffffffff1ced]        # 0x140000000
   14000e313:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e31a:	jmp    0x14000e31e
   14000e31c:	mov    ecx,esi
   14000e31e:	mov    DWORD PTR [rip+0x34d94],ecx        # 0x1400430b8
   14000e324:	mov    DWORD PTR [rip+0x3519a],0x2        # 0x1400434c8
   14000e32e:	mov    BYTE PTR [rip+0x3508b],0x0        # 0x1400433c0
   14000e335:	cmp    DWORD PTR [rsp+0x3c],0x9c
   14000e33d:	jne    0x1400106d8
   14000e343:	xor    edx,edx
   14000e345:	lea    r8d,[rdx+0x1]
   14000e349:	mov    rcx,rbx
   14000e34c:	call   0x14002ad10
   14000e351:	mov    DWORD PTR [rip+0x31349],eax        # 0x14003f6a0
   14000e357:	xor    edx,edx
   14000e359:	lea    r8d,[rdx+0x1]
   14000e35d:	mov    rcx,rbx
   14000e360:	call   0x14002ad10
   14000e365:	mov    DWORD PTR [rip+0x31355],eax        # 0x14003f6c0
   14000e36b:	movsx  r8,WORD PTR [rip+0x30ad9]        # 0x14003ee4c
   14000e373:	shl    r8d,0x2
   14000e377:	mov    rdx,QWORD PTR [rip+0x2fd8a]        # 0x14003e108
   14000e37e:	mov    rcx,rbx
   14000e381:	call   0x14002ada0
   14000e386:	mov    ecx,eax
   14000e388:	movsx  rax,WORD PTR [rip+0x30abc]        # 0x14003ee4c
   14000e390:	shl    eax,0x2
   14000e393:	cmp    ecx,eax
   14000e395:	jne    0x1400106d8
   14000e39b:	xor    edx,edx
   14000e39d:	lea    r8d,[rdx+0x1]
   14000e3a1:	mov    rcx,rbx
   14000e3a4:	call   0x14002ad10
   14000e3a9:	mov    DWORD PTR [rip+0x31319],eax        # 0x14003f6c8
   14000e3af:	xor    ecx,ecx
   14000e3b1:	cmp    cx,WORD PTR [rip+0x30aac]        # 0x14003ee64
   14000e3b8:	jge    0x14000e563
   14000e3be:	xor    r13d,r13d
   14000e3c1:	lea    r12,[rip+0xffffffffffff1c38]        # 0x140000000
   14000e3c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e3d0:	movsx  rax,r14w
   14000e3d4:	lea    rcx,[rax+rax*4]
   14000e3d8:	lea    rdi,[r15+rcx*2]
   14000e3dc:	movzx  eax,WORD PTR [rdi+0x2]
   14000e3e0:	mov    WORD PTR [rsp+0x30],ax
   14000e3e5:	mov    QWORD PTR [rsp+0x20],r13
   14000e3ea:	lea    r9,[rsp+0x34]
   14000e3ef:	mov    r8d,0x2
   14000e3f5:	lea    rdx,[rsp+0x30]
   14000e3fa:	mov    rcx,QWORD PTR [rbx]
   14000e3fd:	call   QWORD PTR [rip+0x20e0d]        # 0x14002f210
   14000e403:	test   eax,eax
   14000e405:	jne    0x14000e437
   14000e407:	call   QWORD PTR [rip+0x20d53]        # 0x14002f160
   14000e40d:	cmp    eax,0x58
   14000e410:	jae    0x14000e41e
   14000e412:	mov    eax,eax
   14000e414:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   14000e41c:	jmp    0x14000e420
   14000e41e:	mov    ecx,esi
   14000e420:	mov    DWORD PTR [rip+0x34c92],ecx        # 0x1400430b8
   14000e426:	mov    DWORD PTR [rip+0x35098],0x2        # 0x1400434c8
   14000e430:	mov    BYTE PTR [rip+0x34f89],r13b        # 0x1400433c0
   14000e437:	movzx  eax,WORD PTR [rdi]
   14000e43a:	mov    WORD PTR [rsp+0x30],ax
   14000e43f:	mov    QWORD PTR [rsp+0x20],r13
   14000e444:	lea    r9,[rsp+0x44]
   14000e449:	mov    r8d,0x2
   14000e44f:	lea    rdx,[rsp+0x30]
   14000e454:	mov    rcx,QWORD PTR [rbx]
   14000e457:	call   QWORD PTR [rip+0x20db3]        # 0x14002f210
   14000e45d:	test   eax,eax
   14000e45f:	jne    0x14000e491
   14000e461:	call   QWORD PTR [rip+0x20cf9]        # 0x14002f160
   14000e467:	cmp    eax,0x58
   14000e46a:	jae    0x14000e478
   14000e46c:	mov    eax,eax
   14000e46e:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   14000e476:	jmp    0x14000e47a
   14000e478:	mov    ecx,esi
   14000e47a:	mov    DWORD PTR [rip+0x34c38],ecx        # 0x1400430b8
   14000e480:	mov    DWORD PTR [rip+0x3503e],0x2        # 0x1400434c8
   14000e48a:	mov    BYTE PTR [rip+0x34f2f],r13b        # 0x1400433c0
   14000e491:	movzx  eax,WORD PTR [rdi+0x4]
   14000e495:	mov    WORD PTR [rsp+0x30],ax
   14000e49a:	mov    QWORD PTR [rsp+0x20],r13
   14000e49f:	lea    r9,[rsp+0x48]
   14000e4a4:	mov    r8d,0x2
   14000e4aa:	lea    rdx,[rsp+0x30]
   14000e4af:	mov    rcx,QWORD PTR [rbx]
   14000e4b2:	call   QWORD PTR [rip+0x20d58]        # 0x14002f210
   14000e4b8:	test   eax,eax
   14000e4ba:	jne    0x14000e4ec
   14000e4bc:	call   QWORD PTR [rip+0x20c9e]        # 0x14002f160
   14000e4c2:	cmp    eax,0x58
   14000e4c5:	jae    0x14000e4d3
   14000e4c7:	mov    eax,eax
   14000e4c9:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   14000e4d1:	jmp    0x14000e4d5
   14000e4d3:	mov    ecx,esi
   14000e4d5:	mov    DWORD PTR [rip+0x34bdd],ecx        # 0x1400430b8
   14000e4db:	mov    DWORD PTR [rip+0x34fe3],0x2        # 0x1400434c8
   14000e4e5:	mov    BYTE PTR [rip+0x34ed4],r13b        # 0x1400433c0
   14000e4ec:	movzx  eax,WORD PTR [rdi+0x6]
   14000e4f0:	mov    WORD PTR [rsp+0x30],ax
   14000e4f5:	mov    QWORD PTR [rsp+0x20],r13
   14000e4fa:	lea    r9,[rsp+0x3c]
   14000e4ff:	mov    r8d,0x2
   14000e505:	lea    rdx,[rsp+0x30]
   14000e50a:	mov    rcx,QWORD PTR [rbx]
   14000e50d:	call   QWORD PTR [rip+0x20cfd]        # 0x14002f210
   14000e513:	test   eax,eax
   14000e515:	jne    0x14000e547
   14000e517:	call   QWORD PTR [rip+0x20c43]        # 0x14002f160
   14000e51d:	cmp    eax,0x58
   14000e520:	jae    0x14000e52e
   14000e522:	mov    eax,eax
   14000e524:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   14000e52c:	jmp    0x14000e530
   14000e52e:	mov    ecx,esi
   14000e530:	mov    DWORD PTR [rip+0x34b82],ecx        # 0x1400430b8
   14000e536:	mov    DWORD PTR [rip+0x34f88],0x2        # 0x1400434c8
   14000e540:	mov    BYTE PTR [rip+0x34e79],r13b        # 0x1400433c0
   14000e547:	inc    r14w
   14000e54b:	cmp    r14w,WORD PTR [rip+0x30911]        # 0x14003ee64
   14000e553:	jl     0x14000e3d0
   14000e559:	mov    r12,QWORD PTR [rsp+0x58]
   14000e55e:	mov    r13,QWORD PTR [rsp+0x50]
   14000e563:	xor    edx,edx
   14000e565:	lea    r8d,[rdx+0x1]
   14000e569:	mov    rcx,rbx
   14000e56c:	call   0x14002ad10
   14000e571:	mov    DWORD PTR [rip+0x31161],eax        # 0x14003f6d8
   14000e577:	movzx  ecx,WORD PTR [rip+0x308ee]        # 0x14003ee6c
   14000e57e:	mov    eax,ecx
   14000e580:	shl    eax,0x3
   14000e583:	mov    DWORD PTR [rip+0x31153],eax        # 0x14003f6dc
   14000e589:	xor    r15d,r15d
   14000e58c:	movzx  edi,r15w
   14000e590:	cmp    r15w,cx
   14000e594:	jae    0x14000e671
   14000e59a:	lea    r13,[rip+0xffffffffffff1a5f]        # 0x140000000
   14000e5a1:	movsx  rax,di
   14000e5a5:	lea    r14,[r12+rax*8]
   14000e5a9:	mov    eax,DWORD PTR [r14]
   14000e5ac:	mov    DWORD PTR [rsp+0x38],eax
   14000e5b0:	mov    QWORD PTR [rsp+0x20],r15
   14000e5b5:	lea    r9,[rsp+0x34]
   14000e5ba:	mov    r8d,0x4
   14000e5c0:	lea    rdx,[rsp+0x38]
   14000e5c5:	mov    rcx,QWORD PTR [rbx]
   14000e5c8:	call   QWORD PTR [rip+0x20c42]        # 0x14002f210
   14000e5ce:	test   eax,eax
   14000e5d0:	jne    0x14000e602
   14000e5d2:	call   QWORD PTR [rip+0x20b88]        # 0x14002f160
   14000e5d8:	cmp    eax,0x58
   14000e5db:	jae    0x14000e5e9
   14000e5dd:	mov    eax,eax
   14000e5df:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   14000e5e7:	jmp    0x14000e5eb
   14000e5e9:	mov    ecx,esi
   14000e5eb:	mov    DWORD PTR [rip+0x34ac7],ecx        # 0x1400430b8
   14000e5f1:	mov    DWORD PTR [rip+0x34ecd],0x2        # 0x1400434c8
   14000e5fb:	mov    BYTE PTR [rip+0x34dbe],r15b        # 0x1400433c0
   14000e602:	mov    eax,DWORD PTR [r14+0x4]
   14000e606:	mov    DWORD PTR [rsp+0x38],eax
   14000e60a:	mov    QWORD PTR [rsp+0x20],r15
   14000e60f:	lea    r9,[rsp+0x44]
   14000e614:	mov    r8d,0x4
   14000e61a:	lea    rdx,[rsp+0x38]
   14000e61f:	mov    rcx,QWORD PTR [rbx]
   14000e622:	call   QWORD PTR [rip+0x20be8]        # 0x14002f210
   14000e628:	test   eax,eax
   14000e62a:	jne    0x14000e65c
   14000e62c:	call   QWORD PTR [rip+0x20b2e]        # 0x14002f160
   14000e632:	cmp    eax,0x58
   14000e635:	jae    0x14000e643
   14000e637:	mov    eax,eax
   14000e639:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   14000e641:	jmp    0x14000e645
   14000e643:	mov    ecx,esi
   14000e645:	mov    DWORD PTR [rip+0x34a6d],ecx        # 0x1400430b8
   14000e64b:	mov    DWORD PTR [rip+0x34e73],0x2        # 0x1400434c8
   14000e655:	mov    BYTE PTR [rip+0x34d64],r15b        # 0x1400433c0
   14000e65c:	inc    di
   14000e65f:	cmp    di,WORD PTR [rip+0x30806]        # 0x14003ee6c
   14000e666:	jb     0x14000e5a1
   14000e66c:	mov    r13,QWORD PTR [rsp+0x50]
   14000e671:	xor    r12d,r12d
   14000e674:	mov    WORD PTR [rsp+0x30],r12w
   14000e67a:	xor    edx,edx
   14000e67c:	lea    r8d,[r12+0x1]
   14000e681:	mov    rcx,rbx
   14000e684:	call   0x14002ad10
   14000e689:	mov    DWORD PTR [rip+0x31051],eax        # 0x14003f6e0
   14000e68f:	mov    QWORD PTR [rsp+0x20],r12
   14000e694:	lea    r9,[rsp+0x3c]
   14000e699:	lea    r8d,[r12+0x2]
   14000e69e:	lea    rdx,[rsp+0x30]
   14000e6a3:	mov    rcx,QWORD PTR [rbx]
   14000e6a6:	call   QWORD PTR [rip+0x20b64]        # 0x14002f210
   14000e6ac:	test   eax,eax
   14000e6ae:	jne    0x14000e6e6
   14000e6b0:	call   QWORD PTR [rip+0x20aaa]        # 0x14002f160
   14000e6b6:	cmp    eax,0x58
   14000e6b9:	jae    0x14000e6cd
   14000e6bb:	mov    eax,eax
   14000e6bd:	lea    rcx,[rip+0xffffffffffff193c]        # 0x140000000
   14000e6c4:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e6cb:	jmp    0x14000e6cf
   14000e6cd:	mov    ecx,esi
   14000e6cf:	mov    DWORD PTR [rip+0x349e3],ecx        # 0x1400430b8
   14000e6d5:	mov    DWORD PTR [rip+0x34de9],0x2        # 0x1400434c8
   14000e6df:	mov    BYTE PTR [rip+0x34cda],r12b        # 0x1400433c0
   14000e6e6:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e6eb:	jne    0x1400106d8
   14000e6f1:	xor    edx,edx
   14000e6f3:	lea    r8d,[rdx+0x1]
   14000e6f7:	mov    rcx,rbx
   14000e6fa:	call   0x14002ad10
   14000e6ff:	mov    DWORD PTR [rip+0x30fcb],eax        # 0x14003f6d0
   14000e705:	mov    DWORD PTR [rip+0x30fc8],r12d        # 0x14003f6d4
   14000e70c:	mov    r14,r12
   14000e70f:	lea    rdi,[rip+0x21d32]        # 0x140030448
   14000e716:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e720:	movzx  eax,WORD PTR [rdi]
   14000e723:	mov    WORD PTR [rsp+0x30],ax
   14000e728:	mov    QWORD PTR [rsp+0x20],r12
   14000e72d:	lea    r9,[rsp+0x3c]
   14000e732:	mov    r8d,0x2
   14000e738:	lea    rdx,[rsp+0x30]
   14000e73d:	mov    rcx,QWORD PTR [rbx]
   14000e740:	call   QWORD PTR [rip+0x20aca]        # 0x14002f210
   14000e746:	test   eax,eax
   14000e748:	jne    0x14000e780
   14000e74a:	call   QWORD PTR [rip+0x20a10]        # 0x14002f160
   14000e750:	cmp    eax,0x58
   14000e753:	jae    0x14000e767
   14000e755:	mov    eax,eax
   14000e757:	lea    rcx,[rip+0xffffffffffff18a2]        # 0x140000000
   14000e75e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e765:	jmp    0x14000e769
   14000e767:	mov    ecx,esi
   14000e769:	mov    DWORD PTR [rip+0x34949],ecx        # 0x1400430b8
   14000e76f:	mov    DWORD PTR [rip+0x34d4f],0x2        # 0x1400434c8
   14000e779:	mov    BYTE PTR [rip+0x34c40],r12b        # 0x1400433c0
   14000e780:	cmp    DWORD PTR [rsp+0x3c],0x2
   14000e785:	jne    0x1400106d8
   14000e78b:	add    DWORD PTR [rip+0x30f42],0x2        # 0x14003f6d4
   14000e792:	movzx  r8d,WORD PTR [rdi]
   14000e796:	mov    QWORD PTR [rsp+0x20],r12
   14000e79b:	lea    r9,[rsp+0x48]
   14000e7a0:	lea    rax,[rip+0xffffffffffff1859]        # 0x140000000
   14000e7a7:	mov    rdx,QWORD PTR [rax+r14*8+0x30590]
   14000e7af:	mov    rcx,QWORD PTR [rbx]
   14000e7b2:	call   QWORD PTR [rip+0x20a58]        # 0x14002f210
   14000e7b8:	test   eax,eax
   14000e7ba:	jne    0x14000e7f2
   14000e7bc:	call   QWORD PTR [rip+0x2099e]        # 0x14002f160
   14000e7c2:	cmp    eax,0x58
   14000e7c5:	jae    0x14000e7d9
   14000e7c7:	mov    eax,eax
   14000e7c9:	lea    rcx,[rip+0xffffffffffff1830]        # 0x140000000
   14000e7d0:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e7d7:	jmp    0x14000e7db
   14000e7d9:	mov    ecx,esi
   14000e7db:	mov    DWORD PTR [rip+0x348d7],ecx        # 0x1400430b8
   14000e7e1:	mov    DWORD PTR [rip+0x34cdd],0x2        # 0x1400434c8
   14000e7eb:	mov    BYTE PTR [rip+0x34bce],r12b        # 0x1400433c0
   14000e7f2:	movzx  eax,WORD PTR [rdi]
   14000e7f5:	mov    ecx,DWORD PTR [rsp+0x48]
   14000e7f9:	cmp    ecx,eax
   14000e7fb:	jne    0x1400106d8
   14000e801:	add    DWORD PTR [rip+0x30ecd],ecx        # 0x14003f6d4
   14000e807:	inc    r15w
   14000e80b:	movsx  r14,r15w
   14000e80f:	lea    rax,[rip+0x21c32]        # 0x140030448
   14000e816:	lea    rdi,[rax+r14*2]
   14000e81a:	cmp    WORD PTR [rdi],r12w
   14000e81e:	jne    0x14000e720
   14000e824:	movzx  edi,r12w
   14000e828:	mov    WORD PTR [rsp+0x3c],r12w
   14000e82e:	mov    eax,0xffff
   14000e833:	cmp    QWORD PTR [rip+0x21d26],r12        # 0x140030560
   14000e83a:	je     0x14000ea35
   14000e840:	mov    r13,r12
   14000e843:	lea    r14,[rip+0x21d16]        # 0x140030560
   14000e84a:	mov    r12,r14
   14000e84d:	nop    DWORD PTR [rax]
   14000e850:	xor    edx,edx
   14000e852:	movzx  r15d,dx
   14000e856:	mov    rcx,QWORD PTR [r12]
   14000e85a:	cmp    WORD PTR [rcx],dx
   14000e85d:	je     0x14000e995
   14000e863:	mov    r14d,edx
   14000e866:	mov    edi,edx
   14000e868:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e870:	movzx  eax,WORD PTR [rdi+rcx*1]
   14000e874:	mov    WORD PTR [rsp+0x30],ax
   14000e879:	mov    QWORD PTR [rsp+0x20],rdx
   14000e87e:	lea    r9,[rsp+0x48]
   14000e883:	mov    r8d,0x2
   14000e889:	lea    rdx,[rsp+0x30]
   14000e88e:	mov    rcx,QWORD PTR [rbx]
   14000e891:	call   QWORD PTR [rip+0x20979]        # 0x14002f210
   14000e897:	test   eax,eax
   14000e899:	jne    0x14000e8d1
   14000e89b:	call   QWORD PTR [rip+0x208bf]        # 0x14002f160
   14000e8a1:	cmp    eax,0x58
   14000e8a4:	jae    0x14000e8b8
   14000e8a6:	mov    eax,eax
   14000e8a8:	lea    rcx,[rip+0xffffffffffff1751]        # 0x140000000
   14000e8af:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e8b6:	jmp    0x14000e8ba
   14000e8b8:	mov    ecx,esi
   14000e8ba:	mov    DWORD PTR [rip+0x347f8],ecx        # 0x1400430b8
   14000e8c0:	mov    DWORD PTR [rip+0x34bfe],0x2        # 0x1400434c8
   14000e8ca:	mov    BYTE PTR [rip+0x34aef],0x0        # 0x1400433c0
   14000e8d1:	cmp    DWORD PTR [rsp+0x48],0x2
   14000e8d6:	jne    0x1400106d8
   14000e8dc:	add    DWORD PTR [rip+0x30df1],0x2        # 0x14003f6d4
   14000e8e3:	mov    rax,QWORD PTR [r12]
   14000e8e7:	movzx  r8d,WORD PTR [rdi+rax*1]
   14000e8ec:	lea    rax,[rip+0xffffffffffff170d]        # 0x140000000
   14000e8f3:	mov    rax,QWORD PTR [r13+rax*1+0x305c0]
   14000e8fb:	xor    ecx,ecx
   14000e8fd:	mov    QWORD PTR [rsp+0x20],rcx
   14000e902:	lea    r9,[rsp+0x44]
   14000e907:	mov    rdx,QWORD PTR [rax+r14*8]
   14000e90b:	mov    rcx,QWORD PTR [rbx]
   14000e90e:	call   QWORD PTR [rip+0x208fc]        # 0x14002f210
   14000e914:	test   eax,eax
   14000e916:	jne    0x14000e94e
   14000e918:	call   QWORD PTR [rip+0x20842]        # 0x14002f160
   14000e91e:	cmp    eax,0x58
   14000e921:	jae    0x14000e935
   14000e923:	mov    eax,eax
   14000e925:	lea    rcx,[rip+0xffffffffffff16d4]        # 0x140000000
   14000e92c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e933:	jmp    0x14000e937
   14000e935:	mov    ecx,esi
   14000e937:	mov    DWORD PTR [rip+0x3477b],ecx        # 0x1400430b8
   14000e93d:	mov    DWORD PTR [rip+0x34b81],0x2        # 0x1400434c8
   14000e947:	mov    BYTE PTR [rip+0x34a72],0x0        # 0x1400433c0
   14000e94e:	mov    rcx,QWORD PTR [r12]
   14000e952:	movzx  eax,WORD PTR [rdi+rcx*1]
   14000e956:	mov    edx,DWORD PTR [rsp+0x44]
   14000e95a:	cmp    edx,eax
   14000e95c:	jne    0x1400106d8
   14000e962:	add    DWORD PTR [rip+0x30d6c],edx        # 0x14003f6d4
   14000e968:	inc    r15w
   14000e96c:	movsx  r14,r15w
   14000e970:	lea    rdi,[r14+r14*1]
   14000e974:	cmp    WORD PTR [rdi+rcx*1],0x0
   14000e979:	mov    edx,0x0
   14000e97e:	jne    0x14000e870
   14000e984:	movzx  edi,WORD PTR [rsp+0x3c]
   14000e989:	lea    r14,[rip+0x21bd0]        # 0x140030560
   14000e990:	mov    eax,0xffff
   14000e995:	mov    WORD PTR [rsp+0x30],ax
   14000e99a:	mov    QWORD PTR [rsp+0x20],rdx
   14000e99f:	lea    r9,[rsp+0x34]
   14000e9a4:	mov    r8d,0x2
   14000e9aa:	lea    rdx,[rsp+0x30]
   14000e9af:	mov    rcx,QWORD PTR [rbx]
   14000e9b2:	call   QWORD PTR [rip+0x20858]        # 0x14002f210
   14000e9b8:	test   eax,eax
   14000e9ba:	jne    0x14000e9f2
   14000e9bc:	call   QWORD PTR [rip+0x2079e]        # 0x14002f160
   14000e9c2:	cmp    eax,0x58
   14000e9c5:	jae    0x14000e9d9
   14000e9c7:	mov    eax,eax
   14000e9c9:	lea    rcx,[rip+0xffffffffffff1630]        # 0x140000000
   14000e9d0:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000e9d7:	jmp    0x14000e9db
   14000e9d9:	mov    ecx,esi
   14000e9db:	mov    DWORD PTR [rip+0x346d7],ecx        # 0x1400430b8
   14000e9e1:	mov    DWORD PTR [rip+0x34add],0x2        # 0x1400434c8
   14000e9eb:	mov    BYTE PTR [rip+0x349ce],0x0        # 0x1400433c0
   14000e9f2:	cmp    DWORD PTR [rsp+0x34],0x2
   14000e9f7:	jne    0x1400106d8
   14000e9fd:	add    DWORD PTR [rip+0x30cd0],0x2        # 0x14003f6d4
   14000ea04:	inc    di
   14000ea07:	mov    WORD PTR [rsp+0x3c],di
   14000ea0c:	movsx  rax,di
   14000ea10:	lea    r13,[rax*8+0x0]
   14000ea18:	lea    r12,[r14+r13*1]
   14000ea1c:	cmp    QWORD PTR [r12],0x0
   14000ea21:	je     0x14000ea2d
   14000ea23:	mov    eax,0xffff
   14000ea28:	jmp    0x14000e850
   14000ea2d:	mov    r13,QWORD PTR [rsp+0x50]
   14000ea32:	xor    r12d,r12d
   14000ea35:	mov    r15d,0x1
   14000ea3b:	mov    r9d,r15d
   14000ea3e:	xor    r8d,r8d
   14000ea41:	xor    edx,edx
   14000ea43:	mov    rcx,QWORD PTR [rbx]
   14000ea46:	call   QWORD PTR [rip+0x207cc]        # 0x14002f218
   14000ea4c:	mov    edi,eax
   14000ea4e:	inc    eax
   14000ea50:	test   eax,0xfffffffe
   14000ea55:	jne    0x14000ea8d
   14000ea57:	call   QWORD PTR [rip+0x20703]        # 0x14002f160
   14000ea5d:	cmp    eax,0x58
   14000ea60:	jae    0x14000ea74
   14000ea62:	mov    eax,eax
   14000ea64:	lea    rcx,[rip+0xffffffffffff1595]        # 0x140000000
   14000ea6b:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ea72:	jmp    0x14000ea76
   14000ea74:	mov    ecx,esi
   14000ea76:	mov    DWORD PTR [rip+0x3463c],ecx        # 0x1400430b8
   14000ea7c:	mov    DWORD PTR [rip+0x34a42],0x2        # 0x1400434c8
   14000ea86:	mov    BYTE PTR [rip+0x34933],0x0        # 0x1400433c0
   14000ea8d:	mov    DWORD PTR [rip+0x30c55],edi        # 0x14003f6e8
   14000ea93:	movsx  r8d,WORD PTR [rip+0x303b1]        # 0x14003ee4c
   14000ea9b:	mov    QWORD PTR [rsp+0x20],r12
   14000eaa0:	lea    r9,[rsp+0x34]
   14000eaa5:	mov    rdx,QWORD PTR [rip+0x2f664]        # 0x14003e110
   14000eaac:	mov    rcx,QWORD PTR [rbx]
   14000eaaf:	call   QWORD PTR [rip+0x2075b]        # 0x14002f210
   14000eab5:	test   eax,eax
   14000eab7:	jne    0x14000eaef
   14000eab9:	call   QWORD PTR [rip+0x206a1]        # 0x14002f160
   14000eabf:	cmp    eax,0x58
   14000eac2:	jae    0x14000ead6
   14000eac4:	mov    eax,eax
   14000eac6:	lea    rcx,[rip+0xffffffffffff1533]        # 0x140000000
   14000eacd:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ead4:	jmp    0x14000ead8
   14000ead6:	mov    ecx,esi
   14000ead8:	mov    DWORD PTR [rip+0x345da],ecx        # 0x1400430b8
   14000eade:	mov    DWORD PTR [rip+0x349e0],0x2        # 0x1400434c8
   14000eae8:	mov    BYTE PTR [rip+0x348d1],0x0        # 0x1400433c0
   14000eaef:	movsx  eax,WORD PTR [rip+0x30356]        # 0x14003ee4c
   14000eaf6:	cmp    DWORD PTR [rsp+0x34],eax
   14000eafa:	jne    0x1400106d8
   14000eb00:	mov    r9d,r15d
   14000eb03:	xor    r8d,r8d
   14000eb06:	xor    edx,edx
   14000eb08:	mov    rcx,QWORD PTR [rbx]
   14000eb0b:	call   QWORD PTR [rip+0x20707]        # 0x14002f218
   14000eb11:	mov    edi,eax
   14000eb13:	inc    eax
   14000eb15:	test   eax,0xfffffffe
   14000eb1a:	jne    0x14000eb52
   14000eb1c:	call   QWORD PTR [rip+0x2063e]        # 0x14002f160
   14000eb22:	cmp    eax,0x58
   14000eb25:	jae    0x14000eb39
   14000eb27:	mov    eax,eax
   14000eb29:	lea    rcx,[rip+0xffffffffffff14d0]        # 0x140000000
   14000eb30:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000eb37:	jmp    0x14000eb3b
   14000eb39:	mov    ecx,esi
   14000eb3b:	mov    DWORD PTR [rip+0x34577],ecx        # 0x1400430b8
   14000eb41:	mov    DWORD PTR [rip+0x3497d],0x2        # 0x1400434c8
   14000eb4b:	mov    BYTE PTR [rip+0x3486e],0x0        # 0x1400433c0
   14000eb52:	mov    DWORD PTR [rip+0x30b4c],edi        # 0x14003f6a4
   14000eb58:	movzx  eax,WORD PTR [rip+0x2f599]        # 0x14003e0f8
   14000eb5f:	mov    WORD PTR [rsp+0x30],ax
   14000eb64:	mov    QWORD PTR [rsp+0x20],r12
   14000eb69:	lea    r9,[rsp+0x34]
   14000eb6e:	mov    r8d,0x2
   14000eb74:	lea    rdx,[rsp+0x30]
   14000eb79:	mov    rcx,QWORD PTR [rbx]
   14000eb7c:	call   QWORD PTR [rip+0x2068e]        # 0x14002f210
   14000eb82:	test   eax,eax
   14000eb84:	jne    0x14000ebbc
   14000eb86:	call   QWORD PTR [rip+0x205d4]        # 0x14002f160
   14000eb8c:	cmp    eax,0x58
   14000eb8f:	jae    0x14000eba3
   14000eb91:	mov    eax,eax
   14000eb93:	lea    rcx,[rip+0xffffffffffff1466]        # 0x140000000
   14000eb9a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000eba1:	jmp    0x14000eba5
   14000eba3:	mov    ecx,esi
   14000eba5:	mov    DWORD PTR [rip+0x3450d],ecx        # 0x1400430b8
   14000ebab:	mov    DWORD PTR [rip+0x34913],0x2        # 0x1400434c8
   14000ebb5:	mov    BYTE PTR [rip+0x34804],0x0        # 0x1400433c0
   14000ebbc:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ebc1:	jne    0x1400106d8
   14000ebc7:	mov    r14d,0x200
   14000ebcd:	mov    WORD PTR [rsp+0x30],r14w
   14000ebd3:	mov    QWORD PTR [rsp+0x20],r12
   14000ebd8:	lea    r9,[rsp+0x34]
   14000ebdd:	mov    r8d,0x2
   14000ebe3:	lea    rdx,[rsp+0x30]
   14000ebe8:	mov    rcx,QWORD PTR [rbx]
   14000ebeb:	call   QWORD PTR [rip+0x2061f]        # 0x14002f210
   14000ebf1:	test   eax,eax
   14000ebf3:	jne    0x14000ec2b
   14000ebf5:	call   QWORD PTR [rip+0x20565]        # 0x14002f160
   14000ebfb:	cmp    eax,0x58
   14000ebfe:	jae    0x14000ec12
   14000ec00:	mov    eax,eax
   14000ec02:	lea    rcx,[rip+0xffffffffffff13f7]        # 0x140000000
   14000ec09:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ec10:	jmp    0x14000ec14
   14000ec12:	mov    ecx,esi
   14000ec14:	mov    DWORD PTR [rip+0x3449e],ecx        # 0x1400430b8
   14000ec1a:	mov    DWORD PTR [rip+0x348a4],0x2        # 0x1400434c8
   14000ec24:	mov    BYTE PTR [rip+0x34795],0x0        # 0x1400433c0
   14000ec2b:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ec30:	jne    0x1400106d8
   14000ec36:	mov    QWORD PTR [rsp+0x20],r12
   14000ec3b:	lea    r9,[rsp+0x34]
   14000ec40:	mov    r8d,0x4
   14000ec46:	lea    rdx,[rsp+0x38]
   14000ec4b:	mov    rcx,QWORD PTR [rbx]
   14000ec4e:	call   QWORD PTR [rip+0x205bc]        # 0x14002f210
   14000ec54:	test   eax,eax
   14000ec56:	jne    0x14000ec8e
   14000ec58:	call   QWORD PTR [rip+0x20502]        # 0x14002f160
   14000ec5e:	cmp    eax,0x58
   14000ec61:	jae    0x14000ec75
   14000ec63:	mov    eax,eax
   14000ec65:	lea    rcx,[rip+0xffffffffffff1394]        # 0x140000000
   14000ec6c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ec73:	jmp    0x14000ec77
   14000ec75:	mov    ecx,esi
   14000ec77:	mov    DWORD PTR [rip+0x3443b],ecx        # 0x1400430b8
   14000ec7d:	mov    DWORD PTR [rip+0x34841],0x2        # 0x1400434c8
   14000ec87:	mov    BYTE PTR [rip+0x34732],0x0        # 0x1400433c0
   14000ec8e:	cmp    DWORD PTR [rsp+0x34],0x4
   14000ec93:	jne    0x1400106d8
   14000ec99:	mov    QWORD PTR [rsp+0x20],r12
   14000ec9e:	lea    r9,[rsp+0x34]
   14000eca3:	mov    r8d,0x4
   14000eca9:	lea    rdx,[rsp+0x38]
   14000ecae:	mov    rcx,QWORD PTR [rbx]
   14000ecb1:	call   QWORD PTR [rip+0x20559]        # 0x14002f210
   14000ecb7:	test   eax,eax
   14000ecb9:	jne    0x14000ecf1
   14000ecbb:	call   QWORD PTR [rip+0x2049f]        # 0x14002f160
   14000ecc1:	cmp    eax,0x58
   14000ecc4:	jae    0x14000ecd8
   14000ecc6:	mov    eax,eax
   14000ecc8:	lea    rcx,[rip+0xffffffffffff1331]        # 0x140000000
   14000eccf:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ecd6:	jmp    0x14000ecda
   14000ecd8:	mov    ecx,esi
   14000ecda:	mov    DWORD PTR [rip+0x343d8],ecx        # 0x1400430b8
   14000ece0:	mov    DWORD PTR [rip+0x347de],0x2        # 0x1400434c8
   14000ecea:	mov    BYTE PTR [rip+0x346cf],0x0        # 0x1400433c0
   14000ecf1:	cmp    DWORD PTR [rsp+0x34],0x4
   14000ecf6:	jne    0x1400106d8
   14000ecfc:	movzx  eax,WORD PTR [rip+0x2f3f7]        # 0x14003e0fa
   14000ed03:	mov    WORD PTR [rsp+0x30],ax
   14000ed08:	mov    QWORD PTR [rsp+0x20],r12
   14000ed0d:	lea    r9,[rsp+0x34]
   14000ed12:	mov    r8d,0x2
   14000ed18:	lea    rdx,[rsp+0x30]
   14000ed1d:	mov    rcx,QWORD PTR [rbx]
   14000ed20:	call   QWORD PTR [rip+0x204ea]        # 0x14002f210
   14000ed26:	test   eax,eax
   14000ed28:	jne    0x14000ed60
   14000ed2a:	call   QWORD PTR [rip+0x20430]        # 0x14002f160
   14000ed30:	cmp    eax,0x58
   14000ed33:	jae    0x14000ed47
   14000ed35:	mov    eax,eax
   14000ed37:	lea    rcx,[rip+0xffffffffffff12c2]        # 0x140000000
   14000ed3e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ed45:	jmp    0x14000ed49
   14000ed47:	mov    ecx,esi
   14000ed49:	mov    DWORD PTR [rip+0x34369],ecx        # 0x1400430b8
   14000ed4f:	mov    DWORD PTR [rip+0x3476f],0x2        # 0x1400434c8
   14000ed59:	mov    BYTE PTR [rip+0x34660],0x0        # 0x1400433c0
   14000ed60:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ed65:	jne    0x1400106d8
   14000ed6b:	mov    QWORD PTR [rsp+0x20],r12
   14000ed70:	lea    r9,[rsp+0x34]
   14000ed75:	mov    r8d,0x4
   14000ed7b:	lea    rdx,[rsp+0x38]
   14000ed80:	mov    rcx,QWORD PTR [rbx]
   14000ed83:	call   QWORD PTR [rip+0x20487]        # 0x14002f210
   14000ed89:	test   eax,eax
   14000ed8b:	jne    0x14000edc3
   14000ed8d:	call   QWORD PTR [rip+0x203cd]        # 0x14002f160
   14000ed93:	cmp    eax,0x58
   14000ed96:	jae    0x14000edaa
   14000ed98:	mov    eax,eax
   14000ed9a:	lea    rcx,[rip+0xffffffffffff125f]        # 0x140000000
   14000eda1:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000eda8:	jmp    0x14000edac
   14000edaa:	mov    ecx,esi
   14000edac:	mov    DWORD PTR [rip+0x34306],ecx        # 0x1400430b8
   14000edb2:	mov    DWORD PTR [rip+0x3470c],0x2        # 0x1400434c8
   14000edbc:	mov    BYTE PTR [rip+0x345fd],0x0        # 0x1400433c0
   14000edc3:	cmp    DWORD PTR [rsp+0x34],0x4
   14000edc8:	jne    0x1400106d8
   14000edce:	mov    WORD PTR [rsp+0x30],r12w
   14000edd4:	mov    QWORD PTR [rsp+0x20],r12
   14000edd9:	lea    r9,[rsp+0x34]
   14000edde:	mov    r8d,0x2
   14000ede4:	lea    rdx,[rsp+0x30]
   14000ede9:	mov    rcx,QWORD PTR [rbx]
   14000edec:	call   QWORD PTR [rip+0x2041e]        # 0x14002f210
   14000edf2:	test   eax,eax
   14000edf4:	jne    0x14000ee2c
   14000edf6:	call   QWORD PTR [rip+0x20364]        # 0x14002f160
   14000edfc:	cmp    eax,0x58
   14000edff:	jae    0x14000ee13
   14000ee01:	mov    eax,eax
   14000ee03:	lea    rcx,[rip+0xffffffffffff11f6]        # 0x140000000
   14000ee0a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ee11:	jmp    0x14000ee15
   14000ee13:	mov    ecx,esi
   14000ee15:	mov    DWORD PTR [rip+0x3429d],ecx        # 0x1400430b8
   14000ee1b:	mov    DWORD PTR [rip+0x346a3],0x2        # 0x1400434c8
   14000ee25:	mov    BYTE PTR [rip+0x34594],0x0        # 0x1400433c0
   14000ee2c:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ee31:	jne    0x1400106d8
   14000ee37:	mov    WORD PTR [rsp+0x30],r12w
   14000ee3d:	mov    QWORD PTR [rsp+0x20],r12
   14000ee42:	lea    r9,[rsp+0x34]
   14000ee47:	mov    r8d,0x2
   14000ee4d:	lea    rdx,[rsp+0x30]
   14000ee52:	mov    rcx,QWORD PTR [rbx]
   14000ee55:	call   QWORD PTR [rip+0x203b5]        # 0x14002f210
   14000ee5b:	test   eax,eax
   14000ee5d:	jne    0x14000ee95
   14000ee5f:	call   QWORD PTR [rip+0x202fb]        # 0x14002f160
   14000ee65:	cmp    eax,0x58
   14000ee68:	jae    0x14000ee7c
   14000ee6a:	mov    eax,eax
   14000ee6c:	lea    rcx,[rip+0xffffffffffff118d]        # 0x140000000
   14000ee73:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ee7a:	jmp    0x14000ee7e
   14000ee7c:	mov    ecx,esi
   14000ee7e:	mov    DWORD PTR [rip+0x34234],ecx        # 0x1400430b8
   14000ee84:	mov    DWORD PTR [rip+0x3463a],0x2        # 0x1400434c8
   14000ee8e:	mov    BYTE PTR [rip+0x3452b],0x0        # 0x1400433c0
   14000ee95:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ee9a:	jne    0x1400106d8
   14000eea0:	mov    DWORD PTR [rsp+0x38],r12d
   14000eea5:	mov    QWORD PTR [rsp+0x20],r12
   14000eeaa:	lea    r9,[rsp+0x34]
   14000eeaf:	mov    r8d,0x4
   14000eeb5:	lea    rdx,[rsp+0x38]
   14000eeba:	mov    rcx,QWORD PTR [rbx]
   14000eebd:	call   QWORD PTR [rip+0x2034d]        # 0x14002f210
   14000eec3:	test   eax,eax
   14000eec5:	jne    0x14000eefd
   14000eec7:	call   QWORD PTR [rip+0x20293]        # 0x14002f160
   14000eecd:	cmp    eax,0x58
   14000eed0:	jae    0x14000eee4
   14000eed2:	mov    eax,eax
   14000eed4:	lea    rcx,[rip+0xffffffffffff1125]        # 0x140000000
   14000eedb:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000eee2:	jmp    0x14000eee6
   14000eee4:	mov    ecx,esi
   14000eee6:	mov    DWORD PTR [rip+0x341cc],ecx        # 0x1400430b8
   14000eeec:	mov    DWORD PTR [rip+0x345d2],0x2        # 0x1400434c8
   14000eef6:	mov    BYTE PTR [rip+0x344c3],0x0        # 0x1400433c0
   14000eefd:	cmp    DWORD PTR [rsp+0x34],0x4
   14000ef02:	jne    0x1400106d8
   14000ef08:	mov    WORD PTR [rsp+0x30],r12w
   14000ef0e:	mov    QWORD PTR [rsp+0x20],r12
   14000ef13:	lea    r9,[rsp+0x34]
   14000ef18:	mov    r8d,0x2
   14000ef1e:	lea    rdx,[rsp+0x30]
   14000ef23:	mov    rcx,QWORD PTR [rbx]
   14000ef26:	call   QWORD PTR [rip+0x202e4]        # 0x14002f210
   14000ef2c:	test   eax,eax
   14000ef2e:	jne    0x14000ef66
   14000ef30:	call   QWORD PTR [rip+0x2022a]        # 0x14002f160
   14000ef36:	cmp    eax,0x58
   14000ef39:	jae    0x14000ef4d
   14000ef3b:	mov    eax,eax
   14000ef3d:	lea    rcx,[rip+0xffffffffffff10bc]        # 0x140000000
   14000ef44:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ef4b:	jmp    0x14000ef4f
   14000ef4d:	mov    ecx,esi
   14000ef4f:	mov    DWORD PTR [rip+0x34163],ecx        # 0x1400430b8
   14000ef55:	mov    DWORD PTR [rip+0x34569],0x2        # 0x1400434c8
   14000ef5f:	mov    BYTE PTR [rip+0x3445a],0x0        # 0x1400433c0
   14000ef66:	cmp    DWORD PTR [rsp+0x34],0x2
   14000ef6b:	jne    0x1400106d8
   14000ef71:	mov    DWORD PTR [rsp+0x38],r12d
   14000ef76:	mov    QWORD PTR [rsp+0x20],r12
   14000ef7b:	lea    r9,[rsp+0x34]
   14000ef80:	mov    r8d,0x4
   14000ef86:	lea    rdx,[rsp+0x38]
   14000ef8b:	mov    rcx,QWORD PTR [rbx]
   14000ef8e:	call   QWORD PTR [rip+0x2027c]        # 0x14002f210
   14000ef94:	test   eax,eax
   14000ef96:	jne    0x14000efce
   14000ef98:	call   QWORD PTR [rip+0x201c2]        # 0x14002f160
   14000ef9e:	cmp    eax,0x58
   14000efa1:	jae    0x14000efb5
   14000efa3:	mov    eax,eax
   14000efa5:	lea    rcx,[rip+0xffffffffffff1054]        # 0x140000000
   14000efac:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000efb3:	jmp    0x14000efb7
   14000efb5:	mov    ecx,esi
   14000efb7:	mov    DWORD PTR [rip+0x340fb],ecx        # 0x1400430b8
   14000efbd:	mov    DWORD PTR [rip+0x34501],0x2        # 0x1400434c8
   14000efc7:	mov    BYTE PTR [rip+0x343f2],0x0        # 0x1400433c0
   14000efce:	cmp    DWORD PTR [rsp+0x34],0x4
   14000efd3:	jne    0x1400106d8
   14000efd9:	mov    QWORD PTR [rsp+0x20],r12
   14000efde:	lea    r9,[rsp+0x34]
   14000efe3:	mov    r8d,0x4
   14000efe9:	lea    rdx,[rsp+0x38]
   14000efee:	mov    rcx,QWORD PTR [rbx]
   14000eff1:	call   QWORD PTR [rip+0x20219]        # 0x14002f210
   14000eff7:	test   eax,eax
   14000eff9:	jne    0x14000f031
   14000effb:	call   QWORD PTR [rip+0x2015f]        # 0x14002f160
   14000f001:	cmp    eax,0x58
   14000f004:	jae    0x14000f018
   14000f006:	mov    eax,eax
   14000f008:	lea    rcx,[rip+0xffffffffffff0ff1]        # 0x140000000
   14000f00f:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f016:	jmp    0x14000f01a
   14000f018:	mov    ecx,esi
   14000f01a:	mov    DWORD PTR [rip+0x34098],ecx        # 0x1400430b8
   14000f020:	mov    DWORD PTR [rip+0x3449e],0x2        # 0x1400434c8
   14000f02a:	mov    BYTE PTR [rip+0x3438f],0x0        # 0x1400433c0
   14000f031:	cmp    DWORD PTR [rsp+0x34],0x4
   14000f036:	jne    0x1400106d8
   14000f03c:	mov    r8d,r15d
   14000f03f:	xor    edx,edx
   14000f041:	mov    rcx,rbx
   14000f044:	call   0x14002ad10
   14000f049:	mov    DWORD PTR [rip+0x306b5],eax        # 0x14003f704
   14000f04f:	movzx  edi,r12w
   14000f053:	movzx  eax,WORD PTR [rip+0x2f09e]        # 0x14003e0f8
   14000f05a:	inc    eax
   14000f05c:	test   eax,eax
   14000f05e:	jle    0x14000f0fd
   14000f064:	nop    DWORD PTR [rax+0x0]
   14000f068:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f070:	movzx  ecx,di
   14000f073:	mov    rax,QWORD PTR [rip+0x2f076]        # 0x14003e0f0
   14000f07a:	movzx  ecx,WORD PTR [rax+rcx*2]
   14000f07e:	mov    WORD PTR [rsp+0x30],cx
   14000f083:	mov    QWORD PTR [rsp+0x20],r12
   14000f088:	lea    r9,[rsp+0x34]
   14000f08d:	mov    r8d,0x2
   14000f093:	lea    rdx,[rsp+0x30]
   14000f098:	mov    rcx,QWORD PTR [rbx]
   14000f09b:	call   QWORD PTR [rip+0x2016f]        # 0x14002f210
   14000f0a1:	test   eax,eax
   14000f0a3:	jne    0x14000f0db
   14000f0a5:	call   QWORD PTR [rip+0x200b5]        # 0x14002f160
   14000f0ab:	cmp    eax,0x58
   14000f0ae:	jae    0x14000f0c2
   14000f0b0:	mov    eax,eax
   14000f0b2:	lea    rcx,[rip+0xffffffffffff0f47]        # 0x140000000
   14000f0b9:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f0c0:	jmp    0x14000f0c4
   14000f0c2:	mov    ecx,esi
   14000f0c4:	mov    DWORD PTR [rip+0x33fee],ecx        # 0x1400430b8
   14000f0ca:	mov    DWORD PTR [rip+0x343f4],0x2        # 0x1400434c8
   14000f0d4:	mov    BYTE PTR [rip+0x342e5],0x0        # 0x1400433c0
   14000f0db:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f0e0:	jne    0x1400106d8
   14000f0e6:	inc    di
   14000f0e9:	movzx  ecx,WORD PTR [rip+0x2f008]        # 0x14003e0f8
   14000f0f0:	inc    ecx
   14000f0f2:	movzx  eax,di
   14000f0f5:	cmp    eax,ecx
   14000f0f7:	jl     0x14000f070
   14000f0fd:	mov    r8d,r15d
   14000f100:	xor    edx,edx
   14000f102:	mov    rcx,rbx
   14000f105:	call   0x14002ad10
   14000f10a:	mov    DWORD PTR [rip+0x305f8],eax        # 0x14003f708
   14000f110:	movzx  r8d,WORD PTR [rip+0x2efe2]        # 0x14003e0fa
   14000f118:	mov    rdx,QWORD PTR [rip+0x2efc9]        # 0x14003e0e8
   14000f11f:	mov    rcx,rbx
   14000f122:	call   0x14002ada0
   14000f127:	mov    ecx,eax
   14000f129:	movzx  eax,WORD PTR [rip+0x2efca]        # 0x14003e0fa
   14000f130:	cmp    ecx,eax
   14000f132:	jne    0x1400106d8
   14000f138:	mov    r8d,r15d
   14000f13b:	xor    edx,edx
   14000f13d:	mov    rcx,rbx
   14000f140:	call   0x14002ad10
   14000f145:	mov    DWORD PTR [rip+0x305c5],eax        # 0x14003f710
   14000f14b:	mov    r8d,r15d
   14000f14e:	xor    edx,edx
   14000f150:	mov    rcx,rbx
   14000f153:	call   0x14002ad10
   14000f158:	mov    DWORD PTR [rip+0x305ba],eax        # 0x14003f718
   14000f15e:	mov    r8d,r15d
   14000f161:	xor    edx,edx
   14000f163:	mov    rcx,rbx
   14000f166:	call   0x14002ad10
   14000f16b:	mov    DWORD PTR [rip+0x305af],eax        # 0x14003f720
   14000f171:	mov    r8d,r15d
   14000f174:	xor    edx,edx
   14000f176:	mov    rcx,rbx
   14000f179:	call   0x14002ad10
   14000f17e:	mov    DWORD PTR [rip+0x305a0],eax        # 0x14003f724
   14000f184:	mov    r8d,r15d
   14000f187:	xor    edx,edx
   14000f189:	mov    rcx,rbx
   14000f18c:	call   0x14002ad10
   14000f191:	mov    DWORD PTR [rip+0x30515],eax        # 0x14003f6ac
   14000f197:	mov    WORD PTR [rsp+0x30],r12w
   14000f19d:	mov    QWORD PTR [rsp+0x20],r12
   14000f1a2:	lea    r9,[rsp+0x34]
   14000f1a7:	mov    r8d,0x2
   14000f1ad:	lea    rdx,[rsp+0x30]
   14000f1b2:	mov    rcx,QWORD PTR [rbx]
   14000f1b5:	call   QWORD PTR [rip+0x20055]        # 0x14002f210
   14000f1bb:	test   eax,eax
   14000f1bd:	jne    0x14000f1f5
   14000f1bf:	call   QWORD PTR [rip+0x1ff9b]        # 0x14002f160
   14000f1c5:	cmp    eax,0x58
   14000f1c8:	jae    0x14000f1dc
   14000f1ca:	mov    eax,eax
   14000f1cc:	lea    rcx,[rip+0xffffffffffff0e2d]        # 0x140000000
   14000f1d3:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f1da:	jmp    0x14000f1de
   14000f1dc:	mov    ecx,esi
   14000f1de:	mov    DWORD PTR [rip+0x33ed4],ecx        # 0x1400430b8
   14000f1e4:	mov    DWORD PTR [rip+0x342da],0x2        # 0x1400434c8
   14000f1ee:	mov    BYTE PTR [rip+0x341cb],0x0        # 0x1400433c0
   14000f1f5:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f1fa:	jne    0x1400106d8
   14000f200:	mov    WORD PTR [rsp+0x30],r12w
   14000f206:	mov    QWORD PTR [rsp+0x20],r12
   14000f20b:	lea    r9,[rsp+0x34]
   14000f210:	mov    r8d,0x2
   14000f216:	lea    rdx,[rsp+0x30]
   14000f21b:	mov    rcx,QWORD PTR [rbx]
   14000f21e:	call   QWORD PTR [rip+0x1ffec]        # 0x14002f210
   14000f224:	test   eax,eax
   14000f226:	jne    0x14000f25e
   14000f228:	call   QWORD PTR [rip+0x1ff32]        # 0x14002f160
   14000f22e:	cmp    eax,0x58
   14000f231:	jae    0x14000f245
   14000f233:	mov    eax,eax
   14000f235:	lea    rcx,[rip+0xffffffffffff0dc4]        # 0x140000000
   14000f23c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f243:	jmp    0x14000f247
   14000f245:	mov    ecx,esi
   14000f247:	mov    DWORD PTR [rip+0x33e6b],ecx        # 0x1400430b8
   14000f24d:	mov    DWORD PTR [rip+0x34271],0x2        # 0x1400434c8
   14000f257:	mov    BYTE PTR [rip+0x34162],0x0        # 0x1400433c0
   14000f25e:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f263:	jne    0x1400106d8
   14000f269:	mov    DWORD PTR [rsp+0x38],r12d
   14000f26e:	mov    QWORD PTR [rsp+0x20],r12
   14000f273:	lea    r9,[rsp+0x34]
   14000f278:	mov    r8d,0x4
   14000f27e:	lea    rdx,[rsp+0x38]
   14000f283:	mov    rcx,QWORD PTR [rbx]
   14000f286:	call   QWORD PTR [rip+0x1ff84]        # 0x14002f210
   14000f28c:	test   eax,eax
   14000f28e:	jne    0x14000f2c6
   14000f290:	call   QWORD PTR [rip+0x1feca]        # 0x14002f160
   14000f296:	cmp    eax,0x58
   14000f299:	jae    0x14000f2ad
   14000f29b:	mov    eax,eax
   14000f29d:	lea    rcx,[rip+0xffffffffffff0d5c]        # 0x140000000
   14000f2a4:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f2ab:	jmp    0x14000f2af
   14000f2ad:	mov    ecx,esi
   14000f2af:	mov    DWORD PTR [rip+0x33e03],ecx        # 0x1400430b8
   14000f2b5:	mov    DWORD PTR [rip+0x34209],0x2        # 0x1400434c8
   14000f2bf:	mov    BYTE PTR [rip+0x340fa],0x0        # 0x1400433c0
   14000f2c6:	cmp    DWORD PTR [rsp+0x34],0x4
   14000f2cb:	jne    0x1400106d8
   14000f2d1:	mov    WORD PTR [rsp+0x30],r12w
   14000f2d7:	mov    QWORD PTR [rsp+0x20],r12
   14000f2dc:	lea    r9,[rsp+0x34]
   14000f2e1:	mov    r8d,0x2
   14000f2e7:	lea    rdx,[rsp+0x30]
   14000f2ec:	mov    rcx,QWORD PTR [rbx]
   14000f2ef:	call   QWORD PTR [rip+0x1ff1b]        # 0x14002f210
   14000f2f5:	test   eax,eax
   14000f2f7:	jne    0x14000f32f
   14000f2f9:	call   QWORD PTR [rip+0x1fe61]        # 0x14002f160
   14000f2ff:	cmp    eax,0x58
   14000f302:	jae    0x14000f316
   14000f304:	mov    eax,eax
   14000f306:	lea    rcx,[rip+0xffffffffffff0cf3]        # 0x140000000
   14000f30d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f314:	jmp    0x14000f318
   14000f316:	mov    ecx,esi
   14000f318:	mov    DWORD PTR [rip+0x33d9a],ecx        # 0x1400430b8
   14000f31e:	mov    DWORD PTR [rip+0x341a0],0x2        # 0x1400434c8
   14000f328:	mov    BYTE PTR [rip+0x34091],0x0        # 0x1400433c0
   14000f32f:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f334:	jne    0x1400106d8
   14000f33a:	mov    WORD PTR [rsp+0x30],r15w
   14000f340:	mov    QWORD PTR [rsp+0x20],r12
   14000f345:	lea    r9,[rsp+0x34]
   14000f34a:	mov    r8d,0x2
   14000f350:	lea    rdx,[rsp+0x30]
   14000f355:	mov    rcx,QWORD PTR [rbx]
   14000f358:	call   QWORD PTR [rip+0x1feb2]        # 0x14002f210
   14000f35e:	test   eax,eax
   14000f360:	jne    0x14000f398
   14000f362:	call   QWORD PTR [rip+0x1fdf8]        # 0x14002f160
   14000f368:	cmp    eax,0x58
   14000f36b:	jae    0x14000f37f
   14000f36d:	mov    eax,eax
   14000f36f:	lea    rcx,[rip+0xffffffffffff0c8a]        # 0x140000000
   14000f376:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f37d:	jmp    0x14000f381
   14000f37f:	mov    ecx,esi
   14000f381:	mov    DWORD PTR [rip+0x33d31],ecx        # 0x1400430b8
   14000f387:	mov    DWORD PTR [rip+0x34137],0x2        # 0x1400434c8
   14000f391:	mov    BYTE PTR [rip+0x34028],0x0        # 0x1400433c0
   14000f398:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f39d:	jne    0x1400106d8
   14000f3a3:	mov    QWORD PTR [rsp+0x20],r12
   14000f3a8:	lea    r9,[rsp+0x34]
   14000f3ad:	mov    r8d,0x2
   14000f3b3:	lea    rdx,[rsp+0x30]
   14000f3b8:	mov    rcx,QWORD PTR [rbx]
   14000f3bb:	call   QWORD PTR [rip+0x1fe4f]        # 0x14002f210
   14000f3c1:	test   eax,eax
   14000f3c3:	jne    0x14000f3fb
   14000f3c5:	call   QWORD PTR [rip+0x1fd95]        # 0x14002f160
   14000f3cb:	cmp    eax,0x58
   14000f3ce:	jae    0x14000f3e2
   14000f3d0:	mov    eax,eax
   14000f3d2:	lea    rcx,[rip+0xffffffffffff0c27]        # 0x140000000
   14000f3d9:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f3e0:	jmp    0x14000f3e4
   14000f3e2:	mov    ecx,esi
   14000f3e4:	mov    DWORD PTR [rip+0x33cce],ecx        # 0x1400430b8
   14000f3ea:	mov    DWORD PTR [rip+0x340d4],0x2        # 0x1400434c8
   14000f3f4:	mov    BYTE PTR [rip+0x33fc5],0x0        # 0x1400433c0
   14000f3fb:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f400:	jne    0x1400106d8
   14000f406:	mov    WORD PTR [rsp+0x30],r12w
   14000f40c:	mov    BYTE PTR [rsp+0x41],0x31
   14000f411:	mov    QWORD PTR [rsp+0x20],r12
   14000f416:	lea    r9,[rsp+0x34]
   14000f41b:	mov    r8d,r15d
   14000f41e:	lea    rdx,[rsp+0x41]
   14000f423:	mov    rcx,QWORD PTR [rbx]
   14000f426:	call   QWORD PTR [rip+0x1fde4]        # 0x14002f210
   14000f42c:	test   eax,eax
   14000f42e:	jne    0x14000f466
   14000f430:	call   QWORD PTR [rip+0x1fd2a]        # 0x14002f160
   14000f436:	cmp    eax,0x58
   14000f439:	jae    0x14000f44d
   14000f43b:	mov    eax,eax
   14000f43d:	lea    rcx,[rip+0xffffffffffff0bbc]        # 0x140000000
   14000f444:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f44b:	jmp    0x14000f44f
   14000f44d:	mov    ecx,esi
   14000f44f:	mov    DWORD PTR [rip+0x33c63],ecx        # 0x1400430b8
   14000f455:	mov    DWORD PTR [rip+0x34069],0x2        # 0x1400434c8
   14000f45f:	mov    BYTE PTR [rip+0x33f5a],0x0        # 0x1400433c0
   14000f466:	cmp    DWORD PTR [rsp+0x34],r15d
   14000f46b:	jne    0x1400106d8
   14000f471:	mov    QWORD PTR [rsp+0x20],r12
   14000f476:	lea    r9,[rsp+0x34]
   14000f47b:	mov    r8d,0x16
   14000f481:	lea    rdx,[rip+0x30320]        # 0x14003f7a8
   14000f488:	mov    rcx,QWORD PTR [rbx]
   14000f48b:	call   QWORD PTR [rip+0x1fd7f]        # 0x14002f210
   14000f491:	test   eax,eax
   14000f493:	jne    0x14000f4cb
   14000f495:	call   QWORD PTR [rip+0x1fcc5]        # 0x14002f160
   14000f49b:	cmp    eax,0x58
   14000f49e:	jae    0x14000f4b2
   14000f4a0:	mov    eax,eax
   14000f4a2:	lea    rcx,[rip+0xffffffffffff0b57]        # 0x140000000
   14000f4a9:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f4b0:	jmp    0x14000f4b4
   14000f4b2:	mov    ecx,esi
   14000f4b4:	mov    DWORD PTR [rip+0x33bfe],ecx        # 0x1400430b8
   14000f4ba:	mov    DWORD PTR [rip+0x34004],0x2        # 0x1400434c8
   14000f4c4:	mov    BYTE PTR [rip+0x33ef5],0x0        # 0x1400433c0
   14000f4cb:	cmp    DWORD PTR [rsp+0x34],0x16
   14000f4d0:	jne    0x1400106d8
   14000f4d6:	mov    r8d,r15d
   14000f4d9:	xor    edx,edx
   14000f4db:	mov    rcx,rbx
   14000f4de:	call   0x14002ad10
   14000f4e3:	mov    DWORD PTR [rip+0x30243],eax        # 0x14003f72c
   14000f4e9:	mov    r8d,r15d
   14000f4ec:	xor    edx,edx
   14000f4ee:	mov    rcx,rbx
   14000f4f1:	call   0x14002ad10
   14000f4f6:	mov    DWORD PTR [rip+0x301b4],eax        # 0x14003f6b0
   14000f4fc:	mov    r8d,r15d
   14000f4ff:	xor    edx,edx
   14000f501:	mov    rcx,rbx
   14000f504:	call   0x14002ad10
   14000f509:	mov    DWORD PTR [rip+0x301a5],eax        # 0x14003f6b4
   14000f50f:	movzx  eax,WORD PTR [rip+0x30286]        # 0x14003f79c
   14000f516:	mov    WORD PTR [rip+0x3021b],ax        # 0x14003f738
   14000f51d:	mov    WORD PTR [rsp+0x30],ax
   14000f522:	mov    QWORD PTR [rsp+0x20],r12
   14000f527:	lea    r9,[rsp+0x34]
   14000f52c:	mov    r8d,0x2
   14000f532:	lea    rdx,[rsp+0x30]
   14000f537:	mov    rcx,QWORD PTR [rbx]
   14000f53a:	call   QWORD PTR [rip+0x1fcd0]        # 0x14002f210
   14000f540:	test   eax,eax
   14000f542:	jne    0x14000f57a
   14000f544:	call   QWORD PTR [rip+0x1fc16]        # 0x14002f160
   14000f54a:	cmp    eax,0x58
   14000f54d:	jae    0x14000f561
   14000f54f:	mov    eax,eax
   14000f551:	lea    rcx,[rip+0xffffffffffff0aa8]        # 0x140000000
   14000f558:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f55f:	jmp    0x14000f563
   14000f561:	mov    ecx,esi
   14000f563:	mov    DWORD PTR [rip+0x33b4f],ecx        # 0x1400430b8
   14000f569:	mov    DWORD PTR [rip+0x33f55],0x2        # 0x1400434c8
   14000f573:	mov    BYTE PTR [rip+0x33e46],0x0        # 0x1400433c0
   14000f57a:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f57f:	jne    0x1400106d8
   14000f585:	movzx  eax,WORD PTR [rip+0x30204]        # 0x14003f790
   14000f58c:	mov    WORD PTR [rip+0x301a7],ax        # 0x14003f73a
   14000f593:	mov    WORD PTR [rsp+0x30],ax
   14000f598:	mov    QWORD PTR [rsp+0x20],r12
   14000f59d:	lea    r9,[rsp+0x34]
   14000f5a2:	mov    r8d,0x2
   14000f5a8:	lea    rdx,[rsp+0x30]
   14000f5ad:	mov    rcx,QWORD PTR [rbx]
   14000f5b0:	call   QWORD PTR [rip+0x1fc5a]        # 0x14002f210
   14000f5b6:	test   eax,eax
   14000f5b8:	jne    0x14000f5f0
   14000f5ba:	call   QWORD PTR [rip+0x1fba0]        # 0x14002f160
   14000f5c0:	cmp    eax,0x58
   14000f5c3:	jae    0x14000f5d7
   14000f5c5:	mov    eax,eax
   14000f5c7:	lea    rcx,[rip+0xffffffffffff0a32]        # 0x140000000
   14000f5ce:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f5d5:	jmp    0x14000f5d9
   14000f5d7:	mov    ecx,esi
   14000f5d9:	mov    DWORD PTR [rip+0x33ad9],ecx        # 0x1400430b8
   14000f5df:	mov    DWORD PTR [rip+0x33edf],0x2        # 0x1400434c8
   14000f5e9:	mov    BYTE PTR [rip+0x33dd0],0x0        # 0x1400433c0
   14000f5f0:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f5f5:	jne    0x1400106d8
   14000f5fb:	movzx  eax,WORD PTR [rip+0x30196]        # 0x14003f798
   14000f602:	mov    WORD PTR [rip+0x30133],ax        # 0x14003f73c
   14000f609:	mov    WORD PTR [rsp+0x30],ax
   14000f60e:	mov    QWORD PTR [rsp+0x20],r12
   14000f613:	lea    r9,[rsp+0x34]
   14000f618:	mov    r8d,0x2
   14000f61e:	lea    rdx,[rsp+0x30]
   14000f623:	mov    rcx,QWORD PTR [rbx]
   14000f626:	call   QWORD PTR [rip+0x1fbe4]        # 0x14002f210
   14000f62c:	test   eax,eax
   14000f62e:	jne    0x14000f666
   14000f630:	call   QWORD PTR [rip+0x1fb2a]        # 0x14002f160
   14000f636:	cmp    eax,0x58
   14000f639:	jae    0x14000f64d
   14000f63b:	mov    eax,eax
   14000f63d:	lea    rcx,[rip+0xffffffffffff09bc]        # 0x140000000
   14000f644:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f64b:	jmp    0x14000f64f
   14000f64d:	mov    ecx,esi
   14000f64f:	mov    DWORD PTR [rip+0x33a63],ecx        # 0x1400430b8
   14000f655:	mov    DWORD PTR [rip+0x33e69],0x2        # 0x1400434c8
   14000f65f:	mov    BYTE PTR [rip+0x33d5a],0x0        # 0x1400433c0
   14000f666:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f66b:	jne    0x1400106d8
   14000f671:	movzx  eax,WORD PTR [rip+0x2f800]        # 0x14003ee78
   14000f678:	mov    WORD PTR [rip+0x300bf],ax        # 0x14003f73e
   14000f67f:	mov    WORD PTR [rsp+0x30],ax
   14000f684:	mov    QWORD PTR [rsp+0x20],r12
   14000f689:	lea    r9,[rsp+0x34]
   14000f68e:	mov    r8d,0x2
   14000f694:	lea    rdx,[rsp+0x30]
   14000f699:	mov    rcx,QWORD PTR [rbx]
   14000f69c:	call   QWORD PTR [rip+0x1fb6e]        # 0x14002f210
   14000f6a2:	test   eax,eax
   14000f6a4:	jne    0x14000f6dc
   14000f6a6:	call   QWORD PTR [rip+0x1fab4]        # 0x14002f160
   14000f6ac:	cmp    eax,0x58
   14000f6af:	jae    0x14000f6c3
   14000f6b1:	mov    eax,eax
   14000f6b3:	lea    rcx,[rip+0xffffffffffff0946]        # 0x140000000
   14000f6ba:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f6c1:	jmp    0x14000f6c5
   14000f6c3:	mov    ecx,esi
   14000f6c5:	mov    DWORD PTR [rip+0x339ed],ecx        # 0x1400430b8
   14000f6cb:	mov    DWORD PTR [rip+0x33df3],0x2        # 0x1400434c8
   14000f6d5:	mov    BYTE PTR [rip+0x33ce4],0x0        # 0x1400433c0
   14000f6dc:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f6e1:	jne    0x1400106d8
   14000f6e7:	movzx  eax,WORD PTR [rip+0x300fa]        # 0x14003f7e8
   14000f6ee:	mov    WORD PTR [rip+0x3004b],ax        # 0x14003f740
   14000f6f5:	mov    WORD PTR [rsp+0x30],ax
   14000f6fa:	mov    QWORD PTR [rsp+0x20],r12
   14000f6ff:	lea    r9,[rsp+0x34]
   14000f704:	mov    r8d,0x2
   14000f70a:	lea    rdx,[rsp+0x30]
   14000f70f:	mov    rcx,QWORD PTR [rbx]
   14000f712:	call   QWORD PTR [rip+0x1faf8]        # 0x14002f210
   14000f718:	test   eax,eax
   14000f71a:	jne    0x14000f752
   14000f71c:	call   QWORD PTR [rip+0x1fa3e]        # 0x14002f160
   14000f722:	cmp    eax,0x58
   14000f725:	jae    0x14000f739
   14000f727:	mov    eax,eax
   14000f729:	lea    rcx,[rip+0xffffffffffff08d0]        # 0x140000000
   14000f730:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f737:	jmp    0x14000f73b
   14000f739:	mov    ecx,esi
   14000f73b:	mov    DWORD PTR [rip+0x33977],ecx        # 0x1400430b8
   14000f741:	mov    DWORD PTR [rip+0x33d7d],0x2        # 0x1400434c8
   14000f74b:	mov    BYTE PTR [rip+0x33c6e],0x0        # 0x1400433c0
   14000f752:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f757:	jne    0x1400106d8
   14000f75d:	movzx  eax,WORD PTR [rip+0x30090]        # 0x14003f7f4
   14000f764:	mov    WORD PTR [rip+0x2ffd7],ax        # 0x14003f742
   14000f76b:	mov    WORD PTR [rsp+0x30],ax
   14000f770:	mov    QWORD PTR [rsp+0x20],r12
   14000f775:	lea    r9,[rsp+0x34]
   14000f77a:	mov    r8d,0x2
   14000f780:	lea    rdx,[rsp+0x30]
   14000f785:	mov    rcx,QWORD PTR [rbx]
   14000f788:	call   QWORD PTR [rip+0x1fa82]        # 0x14002f210
   14000f78e:	test   eax,eax
   14000f790:	jne    0x14000f7c8
   14000f792:	call   QWORD PTR [rip+0x1f9c8]        # 0x14002f160
   14000f798:	cmp    eax,0x58
   14000f79b:	jae    0x14000f7af
   14000f79d:	mov    eax,eax
   14000f79f:	lea    rcx,[rip+0xffffffffffff085a]        # 0x140000000
   14000f7a6:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f7ad:	jmp    0x14000f7b1
   14000f7af:	mov    ecx,esi
   14000f7b1:	mov    DWORD PTR [rip+0x33901],ecx        # 0x1400430b8
   14000f7b7:	mov    DWORD PTR [rip+0x33d07],0x2        # 0x1400434c8
   14000f7c1:	mov    BYTE PTR [rip+0x33bf8],0x0        # 0x1400433c0
   14000f7c8:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f7cd:	jne    0x1400106d8
   14000f7d3:	movzx  eax,WORD PTR [rip+0x2ffca]        # 0x14003f7a4
   14000f7da:	test   ax,ax
   14000f7dd:	je     0x14000f7eb
   14000f7df:	inc    ax
   14000f7e2:	mov    WORD PTR [rip+0x2ff5b],ax        # 0x14003f744
   14000f7e9:	jmp    0x14000f7f2
   14000f7eb:	movzx  eax,WORD PTR [rip+0x2ff52]        # 0x14003f744
   14000f7f2:	mov    WORD PTR [rsp+0x30],ax
   14000f7f7:	mov    QWORD PTR [rsp+0x20],r12
   14000f7fc:	lea    r9,[rsp+0x34]
   14000f801:	mov    r8d,0x2
   14000f807:	lea    rdx,[rsp+0x30]
   14000f80c:	mov    rcx,QWORD PTR [rbx]
   14000f80f:	call   QWORD PTR [rip+0x1f9fb]        # 0x14002f210
   14000f815:	test   eax,eax
   14000f817:	jne    0x14000f84f
   14000f819:	call   QWORD PTR [rip+0x1f941]        # 0x14002f160
   14000f81f:	cmp    eax,0x58
   14000f822:	jae    0x14000f836
   14000f824:	mov    eax,eax
   14000f826:	lea    rcx,[rip+0xffffffffffff07d3]        # 0x140000000
   14000f82d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f834:	jmp    0x14000f838
   14000f836:	mov    ecx,esi
   14000f838:	mov    DWORD PTR [rip+0x3387a],ecx        # 0x1400430b8
   14000f83e:	mov    DWORD PTR [rip+0x33c80],0x2        # 0x1400434c8
   14000f848:	mov    BYTE PTR [rip+0x33b71],0x0        # 0x1400433c0
   14000f84f:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f854:	jne    0x1400106d8
   14000f85a:	movzx  eax,WORD PTR [rip+0x2ff7f]        # 0x14003f7e0
   14000f861:	mov    WORD PTR [rip+0x2fede],ax        # 0x14003f746
   14000f868:	mov    WORD PTR [rsp+0x30],ax
   14000f86d:	mov    QWORD PTR [rsp+0x20],r12
   14000f872:	lea    r9,[rsp+0x34]
   14000f877:	mov    r8d,0x2
   14000f87d:	lea    rdx,[rsp+0x30]
   14000f882:	mov    rcx,QWORD PTR [rbx]
   14000f885:	call   QWORD PTR [rip+0x1f985]        # 0x14002f210
   14000f88b:	test   eax,eax
   14000f88d:	jne    0x14000f8c5
   14000f88f:	call   QWORD PTR [rip+0x1f8cb]        # 0x14002f160
   14000f895:	cmp    eax,0x58
   14000f898:	jae    0x14000f8ac
   14000f89a:	mov    eax,eax
   14000f89c:	lea    rcx,[rip+0xffffffffffff075d]        # 0x140000000
   14000f8a3:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f8aa:	jmp    0x14000f8ae
   14000f8ac:	mov    ecx,esi
   14000f8ae:	mov    DWORD PTR [rip+0x33804],ecx        # 0x1400430b8
   14000f8b4:	mov    DWORD PTR [rip+0x33c0a],0x2        # 0x1400434c8
   14000f8be:	mov    BYTE PTR [rip+0x33afb],0x0        # 0x1400433c0
   14000f8c5:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f8ca:	jne    0x1400106d8
   14000f8d0:	movzx  eax,WORD PTR [rip+0x2fec9]        # 0x14003f7a0
   14000f8d7:	mov    WORD PTR [rip+0x2fe6a],ax        # 0x14003f748
   14000f8de:	mov    WORD PTR [rsp+0x30],ax
   14000f8e3:	mov    QWORD PTR [rsp+0x20],r12
   14000f8e8:	lea    r9,[rsp+0x34]
   14000f8ed:	mov    r8d,0x2
   14000f8f3:	lea    rdx,[rsp+0x30]
   14000f8f8:	mov    rcx,QWORD PTR [rbx]
   14000f8fb:	call   QWORD PTR [rip+0x1f90f]        # 0x14002f210
   14000f901:	test   eax,eax
   14000f903:	jne    0x14000f93b
   14000f905:	call   QWORD PTR [rip+0x1f855]        # 0x14002f160
   14000f90b:	cmp    eax,0x58
   14000f90e:	jae    0x14000f922
   14000f910:	mov    eax,eax
   14000f912:	lea    rcx,[rip+0xffffffffffff06e7]        # 0x140000000
   14000f919:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f920:	jmp    0x14000f924
   14000f922:	mov    ecx,esi
   14000f924:	mov    DWORD PTR [rip+0x3378e],ecx        # 0x1400430b8
   14000f92a:	mov    DWORD PTR [rip+0x33b94],0x2        # 0x1400434c8
   14000f934:	mov    BYTE PTR [rip+0x33a85],0x0        # 0x1400433c0
   14000f93b:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f940:	jne    0x1400106d8
   14000f946:	mov    WORD PTR [rip+0x2fe06],r12w        # 0x14003f754
   14000f94e:	mov    WORD PTR [rsp+0x30],r12w
   14000f954:	mov    QWORD PTR [rsp+0x20],r12
   14000f959:	lea    r9,[rsp+0x34]
   14000f95e:	mov    r8d,0x2
   14000f964:	lea    rdx,[rsp+0x30]
   14000f969:	mov    rcx,QWORD PTR [rbx]
   14000f96c:	call   QWORD PTR [rip+0x1f89e]        # 0x14002f210
   14000f972:	test   eax,eax
   14000f974:	jne    0x14000f9ac
   14000f976:	call   QWORD PTR [rip+0x1f7e4]        # 0x14002f160
   14000f97c:	cmp    eax,0x58
   14000f97f:	jae    0x14000f993
   14000f981:	mov    eax,eax
   14000f983:	lea    rcx,[rip+0xffffffffffff0676]        # 0x140000000
   14000f98a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f991:	jmp    0x14000f995
   14000f993:	mov    ecx,esi
   14000f995:	mov    DWORD PTR [rip+0x3371d],ecx        # 0x1400430b8
   14000f99b:	mov    DWORD PTR [rip+0x33b23],0x2        # 0x1400434c8
   14000f9a5:	mov    BYTE PTR [rip+0x33a14],0x0        # 0x1400433c0
   14000f9ac:	cmp    DWORD PTR [rsp+0x34],0x2
   14000f9b1:	jne    0x1400106d8
   14000f9b7:	mov    DWORD PTR [rsp+0x38],r12d
   14000f9bc:	movzx  edi,r12w
   14000f9c0:	mov    QWORD PTR [rsp+0x20],r12
   14000f9c5:	lea    r9,[rsp+0x34]
   14000f9ca:	mov    r8d,0x4
   14000f9d0:	lea    rdx,[rsp+0x38]
   14000f9d5:	mov    rcx,QWORD PTR [rbx]
   14000f9d8:	call   QWORD PTR [rip+0x1f832]        # 0x14002f210
   14000f9de:	test   eax,eax
   14000f9e0:	jne    0x14000fa18
   14000f9e2:	call   QWORD PTR [rip+0x1f778]        # 0x14002f160
   14000f9e8:	cmp    eax,0x58
   14000f9eb:	jae    0x14000f9ff
   14000f9ed:	mov    eax,eax
   14000f9ef:	lea    rcx,[rip+0xffffffffffff060a]        # 0x140000000
   14000f9f6:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000f9fd:	jmp    0x14000fa01
   14000f9ff:	mov    ecx,esi
   14000fa01:	mov    DWORD PTR [rip+0x336b1],ecx        # 0x1400430b8
   14000fa07:	mov    DWORD PTR [rip+0x33ab7],0x2        # 0x1400434c8
   14000fa11:	mov    BYTE PTR [rip+0x339a8],0x0        # 0x1400433c0
   14000fa18:	cmp    DWORD PTR [rsp+0x34],0x4
   14000fa1d:	jne    0x1400106d8
   14000fa23:	inc    di
   14000fa26:	cmp    di,0xa
   14000fa2a:	jl     0x14000f9c0
   14000fa2c:	mov    r8d,r15d
   14000fa2f:	xor    edx,edx
   14000fa31:	mov    rcx,rbx
   14000fa34:	call   0x14002ad10
   14000fa39:	mov    DWORD PTR [rip+0x2fc79],eax        # 0x14003f6b8
   14000fa3f:	mov    r8d,r15d
   14000fa42:	xor    edx,edx
   14000fa44:	mov    rcx,rbx
   14000fa47:	call   0x14002ad10
   14000fa4c:	mov    DWORD PTR [rip+0x2fd06],eax        # 0x14003f758
   14000fa52:	mov    r8d,r15d
   14000fa55:	xor    edx,edx
   14000fa57:	mov    rcx,rbx
   14000fa5a:	call   0x14002ad10
   14000fa5f:	mov    DWORD PTR [rip+0x2fcf7],eax        # 0x14003f75c
   14000fa65:	mov    r8d,r15d
   14000fa68:	xor    edx,edx
   14000fa6a:	mov    rcx,rbx
   14000fa6d:	call   0x14002ad10
   14000fa72:	mov    DWORD PTR [rip+0x2fcf0],eax        # 0x14003f768
   14000fa78:	mov    r8d,r15d
   14000fa7b:	xor    edx,edx
   14000fa7d:	mov    rcx,rbx
   14000fa80:	call   0x14002ad10
   14000fa85:	mov    DWORD PTR [rip+0x2fcd5],eax        # 0x14003f760
   14000fa8b:	mov    r8d,r15d
   14000fa8e:	xor    edx,edx
   14000fa90:	mov    rcx,rbx
   14000fa93:	call   0x14002ad10
   14000fa98:	mov    DWORD PTR [rip+0x2fcc6],eax        # 0x14003f764
   14000fa9e:	mov    r8d,r15d
   14000faa1:	xor    edx,edx
   14000faa3:	mov    rcx,rbx
   14000faa6:	call   0x14002ad10
   14000faab:	mov    DWORD PTR [rip+0x2fcbb],eax        # 0x14003f76c
   14000fab1:	mov    r8d,r15d
   14000fab4:	xor    edx,edx
   14000fab6:	mov    rcx,rbx
   14000fab9:	call   0x14002ad10
   14000fabe:	mov    DWORD PTR [rip+0x2fcac],eax        # 0x14003f770
   14000fac4:	movzx  r8d,WORD PTR [rip+0x2fc78]        # 0x14003f744
   14000facc:	mov    rdx,QWORD PTR [rip+0x2fd25]        # 0x14003f7f8
   14000fad3:	mov    rcx,rbx
   14000fad6:	call   0x14002ada0
   14000fadb:	mov    ecx,eax
   14000fadd:	movzx  eax,WORD PTR [rip+0x2fc60]        # 0x14003f744
   14000fae4:	cmp    ecx,eax
   14000fae6:	jne    0x1400106d8
   14000faec:	mov    r8d,r15d
   14000faef:	xor    edx,edx
   14000faf1:	mov    rcx,rbx
   14000faf4:	call   0x14002ad10
   14000faf9:	mov    DWORD PTR [rip+0x2fc75],eax        # 0x14003f774
   14000faff:	mov    r8d,r15d
   14000fb02:	xor    edx,edx
   14000fb04:	mov    rcx,rbx
   14000fb07:	call   0x14002ad10
   14000fb0c:	mov    DWORD PTR [rip+0x2fc66],eax        # 0x14003f778
   14000fb12:	mov    r8d,r15d
   14000fb15:	xor    edx,edx
   14000fb17:	mov    rcx,rbx
   14000fb1a:	call   0x14002ad10
   14000fb1f:	mov    DWORD PTR [rip+0x2fc67],eax        # 0x14003f78c
   14000fb25:	mov    ecx,0x2d
   14000fb2a:	call   0x14000d720
   14000fb2f:	mov    BYTE PTR [rip+0x304cb],al        # 0x140040000
   14000fb35:	mov    ecx,0x7c
   14000fb3a:	call   0x14000d720
   14000fb3f:	mov    BYTE PTR [rip+0x304bc],al        # 0x140040001
   14000fb45:	mov    ecx,0x20
   14000fb4a:	call   0x14000d720
   14000fb4f:	mov    BYTE PTR [rip+0x304ad],al        # 0x140040002
   14000fb55:	xor    ecx,ecx
   14000fb57:	call   0x14000d720
   14000fb5c:	mov    BYTE PTR [rip+0x304a1],al        # 0x140040003
   14000fb62:	lea    r8d,[rcx+0x4]
   14000fb66:	lea    rdx,[rip+0x30493]        # 0x140040000
   14000fb6d:	mov    rcx,rbx
   14000fb70:	call   0x14002ada0
   14000fb75:	cmp    eax,0x4
   14000fb78:	jne    0x1400106d8
   14000fb7e:	mov    WORD PTR [rsp+0x30],r12w
   14000fb84:	mov    QWORD PTR [rsp+0x20],r12
   14000fb89:	lea    r9,[rsp+0x34]
   14000fb8e:	lea    r8d,[rax-0x2]
   14000fb92:	lea    rdx,[rsp+0x30]
   14000fb97:	mov    rcx,QWORD PTR [rbx]
   14000fb9a:	call   QWORD PTR [rip+0x1f670]        # 0x14002f210
   14000fba0:	test   eax,eax
   14000fba2:	jne    0x14000fbda
   14000fba4:	call   QWORD PTR [rip+0x1f5b6]        # 0x14002f160
   14000fbaa:	cmp    eax,0x58
   14000fbad:	jae    0x14000fbc1
   14000fbaf:	mov    eax,eax
   14000fbb1:	lea    rcx,[rip+0xffffffffffff0448]        # 0x140000000
   14000fbb8:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fbbf:	jmp    0x14000fbc3
   14000fbc1:	mov    ecx,esi
   14000fbc3:	mov    DWORD PTR [rip+0x334ef],ecx        # 0x1400430b8
   14000fbc9:	mov    DWORD PTR [rip+0x338f5],0x2        # 0x1400434c8
   14000fbd3:	mov    BYTE PTR [rip+0x337e6],0x0        # 0x1400433c0
   14000fbda:	cmp    DWORD PTR [rsp+0x34],0x2
   14000fbdf:	jne    0x1400106d8
   14000fbe5:	mov    WORD PTR [rsp+0x30],r12w
   14000fbeb:	mov    QWORD PTR [rsp+0x20],r12
   14000fbf0:	lea    r9,[rsp+0x34]
   14000fbf5:	mov    r8d,0x2
   14000fbfb:	lea    rdx,[rsp+0x30]
   14000fc00:	mov    rcx,QWORD PTR [rbx]
   14000fc03:	call   QWORD PTR [rip+0x1f607]        # 0x14002f210
   14000fc09:	test   eax,eax
   14000fc0b:	jne    0x14000fc43
   14000fc0d:	call   QWORD PTR [rip+0x1f54d]        # 0x14002f160
   14000fc13:	cmp    eax,0x58
   14000fc16:	jae    0x14000fc2a
   14000fc18:	mov    eax,eax
   14000fc1a:	lea    rcx,[rip+0xffffffffffff03df]        # 0x140000000
   14000fc21:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fc28:	jmp    0x14000fc2c
   14000fc2a:	mov    ecx,esi
   14000fc2c:	mov    DWORD PTR [rip+0x33486],ecx        # 0x1400430b8
   14000fc32:	mov    DWORD PTR [rip+0x3388c],0x2        # 0x1400434c8
   14000fc3c:	mov    BYTE PTR [rip+0x3377d],0x0        # 0x1400433c0
   14000fc43:	cmp    DWORD PTR [rsp+0x34],0x2
   14000fc48:	jne    0x1400106d8
   14000fc4e:	mov    r8d,r15d
   14000fc51:	xor    edx,edx
   14000fc53:	mov    rcx,rbx
   14000fc56:	call   0x14002ad10
   14000fc5b:	mov    DWORD PTR [rip+0x2fa47],eax        # 0x14003f6a8
   14000fc61:	mov    ecx,0x1ff
   14000fc66:	and    ax,cx
   14000fc69:	je     0x14000fc98
   14000fc6b:	mov    edi,r14d
   14000fc6e:	sub    di,ax
   14000fc71:	je     0x14000fc98
   14000fc73:	mov    r8d,r15d
   14000fc76:	lea    rdx,[rip+0x2e269]        # 0x14003dee6
   14000fc7d:	mov    rcx,rbx
   14000fc80:	call   0x14002ada0
   14000fc85:	cmp    eax,r15d
   14000fc88:	jne    0x1400106d8
   14000fc8e:	mov    eax,0xffff
   14000fc93:	add    di,ax
   14000fc96:	jne    0x14000fc73
   14000fc98:	mov    r8d,r15d
   14000fc9b:	xor    edx,edx
   14000fc9d:	mov    rcx,rbx
   14000fca0:	call   0x14002ad10
   14000fca5:	mov    DWORD PTR [rip+0x2f9fd],eax        # 0x14003f6a8
   14000fcab:	movzx  edi,r12w
   14000fcaf:	cmp    r12w,WORD PTR [rip+0x2e441]        # 0x14003e0f8
   14000fcb7:	jae    0x14000fd95
   14000fcbd:	nop    DWORD PTR [rax]
   14000fcc0:	mov    QWORD PTR [rsp+0x20],r12
   14000fcc5:	lea    r9,[rsp+0x34]
   14000fcca:	mov    r8d,r14d
   14000fccd:	lea    rdx,[rip+0x32e7c]        # 0x140042b50
   14000fcd4:	mov    rcx,QWORD PTR [r13+0x0]
   14000fcd8:	call   QWORD PTR [rip+0x1f52a]        # 0x14002f208
   14000fcde:	test   eax,eax
   14000fce0:	jne    0x14000fd18
   14000fce2:	call   QWORD PTR [rip+0x1f478]        # 0x14002f160
   14000fce8:	cmp    eax,0x58
   14000fceb:	jae    0x14000fcff
   14000fced:	mov    eax,eax
   14000fcef:	lea    rcx,[rip+0xffffffffffff030a]        # 0x140000000
   14000fcf6:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fcfd:	jmp    0x14000fd01
   14000fcff:	mov    ecx,esi
   14000fd01:	mov    DWORD PTR [rip+0x333b1],ecx        # 0x1400430b8
   14000fd07:	mov    DWORD PTR [rip+0x337b7],0x2        # 0x1400434c8
   14000fd11:	mov    BYTE PTR [rip+0x336a8],0x0        # 0x1400433c0
   14000fd18:	cmp    DWORD PTR [rsp+0x34],r14d
   14000fd1d:	jne    0x1400106d8
   14000fd23:	mov    QWORD PTR [rsp+0x20],r12
   14000fd28:	lea    r9,[rsp+0x44]
   14000fd2d:	mov    r8d,r14d
   14000fd30:	lea    rdx,[rip+0x32e19]        # 0x140042b50
   14000fd37:	mov    rcx,QWORD PTR [rbx]
   14000fd3a:	call   QWORD PTR [rip+0x1f4d0]        # 0x14002f210
   14000fd40:	test   eax,eax
   14000fd42:	jne    0x14000fd7a
   14000fd44:	call   QWORD PTR [rip+0x1f416]        # 0x14002f160
   14000fd4a:	cmp    eax,0x58
   14000fd4d:	jae    0x14000fd61
   14000fd4f:	mov    eax,eax
   14000fd51:	lea    rcx,[rip+0xffffffffffff02a8]        # 0x140000000
   14000fd58:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fd5f:	jmp    0x14000fd63
   14000fd61:	mov    ecx,esi
   14000fd63:	mov    DWORD PTR [rip+0x3334f],ecx        # 0x1400430b8
   14000fd69:	mov    DWORD PTR [rip+0x33755],0x2        # 0x1400434c8
   14000fd73:	mov    BYTE PTR [rip+0x33646],0x0        # 0x1400433c0
   14000fd7a:	cmp    DWORD PTR [rsp+0x44],r14d
   14000fd7f:	jne    0x1400106d8
   14000fd85:	inc    di
   14000fd88:	cmp    di,WORD PTR [rip+0x2e369]        # 0x14003e0f8
   14000fd8f:	jb     0x14000fcc0
   14000fd95:	xor    r8d,r8d
   14000fd98:	lea    edx,[r8+0x1a]
   14000fd9c:	mov    rcx,rbx
   14000fd9f:	call   0x14002ad10
   14000fda4:	cmp    eax,0xffffffff
   14000fda7:	je     0x1400106d8
   14000fdad:	mov    eax,DWORD PTR [rip+0x2f8e9]        # 0x14003f69c
   14000fdb3:	mov    DWORD PTR [rsp+0x38],eax
   14000fdb7:	mov    QWORD PTR [rsp+0x20],r12
   14000fdbc:	lea    r9,[rsp+0x34]
   14000fdc1:	mov    r8d,0x4
   14000fdc7:	lea    rdx,[rsp+0x38]
   14000fdcc:	mov    rcx,QWORD PTR [rbx]
   14000fdcf:	call   QWORD PTR [rip+0x1f43b]        # 0x14002f210
   14000fdd5:	test   eax,eax
   14000fdd7:	jne    0x14000fe0f
   14000fdd9:	call   QWORD PTR [rip+0x1f381]        # 0x14002f160
   14000fddf:	cmp    eax,0x58
   14000fde2:	jae    0x14000fdf6
   14000fde4:	mov    eax,eax
   14000fde6:	lea    rcx,[rip+0xffffffffffff0213]        # 0x140000000
   14000fded:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fdf4:	jmp    0x14000fdf8
   14000fdf6:	mov    ecx,esi
   14000fdf8:	mov    DWORD PTR [rip+0x332ba],ecx        # 0x1400430b8
   14000fdfe:	mov    DWORD PTR [rip+0x336c0],0x2        # 0x1400434c8
   14000fe08:	mov    BYTE PTR [rip+0x335b1],0x0        # 0x1400433c0
   14000fe0f:	cmp    DWORD PTR [rsp+0x34],0x4
   14000fe14:	jne    0x1400106d8
   14000fe1a:	mov    eax,DWORD PTR [rip+0x2f880]        # 0x14003f6a0
   14000fe20:	mov    DWORD PTR [rsp+0x38],eax
   14000fe24:	mov    QWORD PTR [rsp+0x20],r12
   14000fe29:	lea    r9,[rsp+0x34]
   14000fe2e:	mov    r8d,0x4
   14000fe34:	lea    rdx,[rsp+0x38]
   14000fe39:	mov    rcx,QWORD PTR [rbx]
   14000fe3c:	call   QWORD PTR [rip+0x1f3ce]        # 0x14002f210
   14000fe42:	test   eax,eax
   14000fe44:	jne    0x14000fe7c
   14000fe46:	call   QWORD PTR [rip+0x1f314]        # 0x14002f160
   14000fe4c:	cmp    eax,0x58
   14000fe4f:	jae    0x14000fe63
   14000fe51:	mov    eax,eax
   14000fe53:	lea    rcx,[rip+0xffffffffffff01a6]        # 0x140000000
   14000fe5a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fe61:	jmp    0x14000fe65
   14000fe63:	mov    ecx,esi
   14000fe65:	mov    DWORD PTR [rip+0x3324d],ecx        # 0x1400430b8
   14000fe6b:	mov    DWORD PTR [rip+0x33653],0x2        # 0x1400434c8
   14000fe75:	mov    BYTE PTR [rip+0x33544],0x0        # 0x1400433c0
   14000fe7c:	cmp    DWORD PTR [rsp+0x34],0x4
   14000fe81:	jne    0x1400106d8
   14000fe87:	mov    eax,DWORD PTR [rip+0x2f817]        # 0x14003f6a4
   14000fe8d:	mov    DWORD PTR [rsp+0x38],eax
   14000fe91:	mov    QWORD PTR [rsp+0x20],r12
   14000fe96:	lea    r9,[rsp+0x34]
   14000fe9b:	mov    r8d,0x4
   14000fea1:	lea    rdx,[rsp+0x38]
   14000fea6:	mov    rcx,QWORD PTR [rbx]
   14000fea9:	call   QWORD PTR [rip+0x1f361]        # 0x14002f210
   14000feaf:	test   eax,eax
   14000feb1:	jne    0x14000fee9
   14000feb3:	call   QWORD PTR [rip+0x1f2a7]        # 0x14002f160
   14000feb9:	cmp    eax,0x58
   14000febc:	jae    0x14000fed0
   14000febe:	mov    eax,eax
   14000fec0:	lea    rcx,[rip+0xffffffffffff0139]        # 0x140000000
   14000fec7:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000fece:	jmp    0x14000fed2
   14000fed0:	mov    ecx,esi
   14000fed2:	mov    DWORD PTR [rip+0x331e0],ecx        # 0x1400430b8
   14000fed8:	mov    DWORD PTR [rip+0x335e6],0x2        # 0x1400434c8
   14000fee2:	mov    BYTE PTR [rip+0x334d7],0x0        # 0x1400433c0
   14000fee9:	cmp    DWORD PTR [rsp+0x34],0x4
   14000feee:	jne    0x1400106d8
   14000fef4:	mov    eax,DWORD PTR [rip+0x2f7ae]        # 0x14003f6a8
   14000fefa:	mov    DWORD PTR [rsp+0x38],eax
   14000fefe:	mov    QWORD PTR [rsp+0x20],r12
   14000ff03:	lea    r9,[rsp+0x34]
   14000ff08:	mov    r8d,0x4
   14000ff0e:	lea    rdx,[rsp+0x38]
   14000ff13:	mov    rcx,QWORD PTR [rbx]
   14000ff16:	call   QWORD PTR [rip+0x1f2f4]        # 0x14002f210
   14000ff1c:	test   eax,eax
   14000ff1e:	jne    0x14000ff56
   14000ff20:	call   QWORD PTR [rip+0x1f23a]        # 0x14002f160
   14000ff26:	cmp    eax,0x58
   14000ff29:	jae    0x14000ff3d
   14000ff2b:	mov    eax,eax
   14000ff2d:	lea    rcx,[rip+0xffffffffffff00cc]        # 0x140000000
   14000ff34:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ff3b:	jmp    0x14000ff3f
   14000ff3d:	mov    ecx,esi
   14000ff3f:	mov    DWORD PTR [rip+0x33173],ecx        # 0x1400430b8
   14000ff45:	mov    DWORD PTR [rip+0x33579],0x2        # 0x1400434c8
   14000ff4f:	mov    BYTE PTR [rip+0x3346a],0x0        # 0x1400433c0
   14000ff56:	cmp    DWORD PTR [rsp+0x34],0x4
   14000ff5b:	jne    0x1400106d8
   14000ff61:	mov    eax,DWORD PTR [rip+0x2f745]        # 0x14003f6ac
   14000ff67:	mov    DWORD PTR [rsp+0x38],eax
   14000ff6b:	mov    QWORD PTR [rsp+0x20],r12
   14000ff70:	lea    r9,[rsp+0x34]
   14000ff75:	mov    r8d,0x4
   14000ff7b:	lea    rdx,[rsp+0x38]
   14000ff80:	mov    rcx,QWORD PTR [rbx]
   14000ff83:	call   QWORD PTR [rip+0x1f287]        # 0x14002f210
   14000ff89:	test   eax,eax
   14000ff8b:	jne    0x14000ffc3
   14000ff8d:	call   QWORD PTR [rip+0x1f1cd]        # 0x14002f160
   14000ff93:	cmp    eax,0x58
   14000ff96:	jae    0x14000ffaa
   14000ff98:	mov    eax,eax
   14000ff9a:	lea    rcx,[rip+0xffffffffffff005f]        # 0x140000000
   14000ffa1:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14000ffa8:	jmp    0x14000ffac
   14000ffaa:	mov    ecx,esi
   14000ffac:	mov    DWORD PTR [rip+0x33106],ecx        # 0x1400430b8
   14000ffb2:	mov    DWORD PTR [rip+0x3350c],0x2        # 0x1400434c8
   14000ffbc:	mov    BYTE PTR [rip+0x333fd],0x0        # 0x1400433c0
   14000ffc3:	cmp    DWORD PTR [rsp+0x34],0x4
   14000ffc8:	jne    0x1400106d8
   14000ffce:	mov    eax,DWORD PTR [rip+0x2f6dc]        # 0x14003f6b0
   14000ffd4:	mov    DWORD PTR [rsp+0x38],eax
   14000ffd8:	mov    QWORD PTR [rsp+0x20],r12
   14000ffdd:	lea    r9,[rsp+0x34]
   14000ffe2:	mov    r8d,0x4
   14000ffe8:	lea    rdx,[rsp+0x38]
   14000ffed:	mov    rcx,QWORD PTR [rbx]
   14000fff0:	call   QWORD PTR [rip+0x1f21a]        # 0x14002f210
   14000fff6:	test   eax,eax
   14000fff8:	jne    0x140010030
   14000fffa:	call   QWORD PTR [rip+0x1f160]        # 0x14002f160
   140010000:	cmp    eax,0x58
   140010003:	jae    0x140010017
   140010005:	mov    eax,eax
   140010007:	lea    rcx,[rip+0xfffffffffffefff2]        # 0x140000000
   14001000e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140010015:	jmp    0x140010019
   140010017:	mov    ecx,esi
   140010019:	mov    DWORD PTR [rip+0x33099],ecx        # 0x1400430b8
   14001001f:	mov    DWORD PTR [rip+0x3349f],0x2        # 0x1400434c8
   140010029:	mov    BYTE PTR [rip+0x33390],0x0        # 0x1400433c0
   140010030:	cmp    DWORD PTR [rsp+0x34],0x4
   140010035:	jne    0x1400106d8
   14001003b:	mov    eax,DWORD PTR [rip+0x2f673]        # 0x14003f6b4
   140010041:	mov    DWORD PTR [rsp+0x38],eax
   140010045:	mov    QWORD PTR [rsp+0x20],r12
   14001004a:	lea    r9,[rsp+0x34]
   14001004f:	mov    r8d,0x4
   140010055:	lea    rdx,[rsp+0x38]
   14001005a:	mov    rcx,QWORD PTR [rbx]
   14001005d:	call   QWORD PTR [rip+0x1f1ad]        # 0x14002f210
   140010063:	test   eax,eax
   140010065:	jne    0x14001009d
   140010067:	call   QWORD PTR [rip+0x1f0f3]        # 0x14002f160
   14001006d:	cmp    eax,0x58
   140010070:	jae    0x140010084
   140010072:	mov    eax,eax
   140010074:	lea    rcx,[rip+0xfffffffffffeff85]        # 0x140000000
   14001007b:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140010082:	jmp    0x140010086
   140010084:	mov    ecx,esi
   140010086:	mov    DWORD PTR [rip+0x3302c],ecx        # 0x1400430b8
   14001008c:	mov    DWORD PTR [rip+0x33432],0x2        # 0x1400434c8
   140010096:	mov    BYTE PTR [rip+0x33323],0x0        # 0x1400433c0
   14001009d:	cmp    DWORD PTR [rsp+0x34],0x4
   1400100a2:	jne    0x1400106d8
   1400100a8:	mov    eax,DWORD PTR [rip+0x2f60a]        # 0x14003f6b8
   1400100ae:	mov    DWORD PTR [rsp+0x38],eax
   1400100b2:	mov    QWORD PTR [rsp+0x20],r12
   1400100b7:	lea    r9,[rsp+0x34]
   1400100bc:	mov    r8d,0x4
   1400100c2:	lea    rdx,[rsp+0x38]
   1400100c7:	mov    rcx,QWORD PTR [rbx]
   1400100ca:	call   QWORD PTR [rip+0x1f140]        # 0x14002f210
   1400100d0:	test   eax,eax
   1400100d2:	jne    0x14001010a
   1400100d4:	call   QWORD PTR [rip+0x1f086]        # 0x14002f160
   1400100da:	cmp    eax,0x58
   1400100dd:	jae    0x1400100f1
   1400100df:	mov    eax,eax
   1400100e1:	lea    rcx,[rip+0xfffffffffffeff18]        # 0x140000000
   1400100e8:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400100ef:	jmp    0x1400100f3
   1400100f1:	mov    ecx,esi
   1400100f3:	mov    DWORD PTR [rip+0x32fbf],ecx        # 0x1400430b8
   1400100f9:	mov    DWORD PTR [rip+0x333c5],0x2        # 0x1400434c8
   140010103:	mov    BYTE PTR [rip+0x332b6],0x0        # 0x1400433c0
   14001010a:	cmp    DWORD PTR [rsp+0x34],0x4
   14001010f:	jne    0x1400106d8
   140010115:	mov    r8d,r15d
   140010118:	mov    edx,0x2
   14001011d:	mov    rcx,rbx
   140010120:	call   0x14002ad10
   140010125:	cmp    eax,0xffffffff
   140010128:	je     0x1400106d8
   14001012e:	mov    eax,DWORD PTR [rip+0x2f58c]        # 0x14003f6c0
   140010134:	mov    DWORD PTR [rsp+0x38],eax
   140010138:	mov    QWORD PTR [rsp+0x20],r12
   14001013d:	lea    r9,[rsp+0x34]
   140010142:	mov    r8d,0x4
   140010148:	lea    rdx,[rsp+0x38]
   14001014d:	mov    rcx,QWORD PTR [rbx]
   140010150:	call   QWORD PTR [rip+0x1f0ba]        # 0x14002f210
   140010156:	test   eax,eax
   140010158:	jne    0x140010190
   14001015a:	call   QWORD PTR [rip+0x1f000]        # 0x14002f160
   140010160:	cmp    eax,0x58
   140010163:	jae    0x140010177
   140010165:	mov    eax,eax
   140010167:	lea    rcx,[rip+0xfffffffffffefe92]        # 0x140000000
   14001016e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140010175:	jmp    0x140010179
   140010177:	mov    ecx,esi
   140010179:	mov    DWORD PTR [rip+0x32f39],ecx        # 0x1400430b8
   14001017f:	mov    DWORD PTR [rip+0x3333f],0x2        # 0x1400434c8
   140010189:	mov    BYTE PTR [rip+0x33230],0x0        # 0x1400433c0
   140010190:	cmp    DWORD PTR [rsp+0x34],0x4
   140010195:	jne    0x1400106d8
   14001019b:	mov    r8d,r15d
   14001019e:	mov    edx,0x2
   1400101a3:	mov    rcx,rbx
   1400101a6:	call   0x14002ad10
   1400101ab:	cmp    eax,0xffffffff
   1400101ae:	je     0x1400106d8
   1400101b4:	mov    eax,DWORD PTR [rip+0x2f50e]        # 0x14003f6c8
   1400101ba:	mov    DWORD PTR [rsp+0x38],eax
   1400101be:	mov    QWORD PTR [rsp+0x20],r12
   1400101c3:	lea    r9,[rsp+0x34]
   1400101c8:	mov    r8d,0x4
   1400101ce:	lea    rdx,[rsp+0x38]
   1400101d3:	mov    rcx,QWORD PTR [rbx]
   1400101d6:	call   QWORD PTR [rip+0x1f034]        # 0x14002f210
   1400101dc:	test   eax,eax
   1400101de:	jne    0x140010216
   1400101e0:	call   QWORD PTR [rip+0x1ef7a]        # 0x14002f160
   1400101e6:	cmp    eax,0x58
   1400101e9:	jae    0x1400101fd
   1400101eb:	mov    eax,eax
   1400101ed:	lea    rcx,[rip+0xfffffffffffefe0c]        # 0x140000000
   1400101f4:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400101fb:	jmp    0x1400101ff
   1400101fd:	mov    ecx,esi
   1400101ff:	mov    DWORD PTR [rip+0x32eb3],ecx        # 0x1400430b8
   140010205:	mov    DWORD PTR [rip+0x332b9],0x2        # 0x1400434c8
   14001020f:	mov    BYTE PTR [rip+0x331aa],0x0        # 0x1400433c0
   140010216:	cmp    DWORD PTR [rsp+0x34],0x4
   14001021b:	jne    0x1400106d8
   140010221:	mov    r8d,r15d
   140010224:	mov    edx,0x4
   140010229:	mov    rcx,rbx
   14001022c:	call   0x14002ad10
   140010231:	cmp    eax,0xffffffff
   140010234:	je     0x1400106d8
   14001023a:	mov    eax,DWORD PTR [rip+0x2f490]        # 0x14003f6d0
   140010240:	mov    DWORD PTR [rsp+0x38],eax
   140010244:	mov    QWORD PTR [rsp+0x20],r12
   140010249:	lea    r9,[rsp+0x34]
   14001024e:	mov    r8d,0x4
   140010254:	lea    rdx,[rsp+0x38]
   140010259:	mov    rcx,QWORD PTR [rbx]
   14001025c:	call   QWORD PTR [rip+0x1efae]        # 0x14002f210
   140010262:	test   eax,eax
   140010264:	jne    0x140010298
   140010266:	call   QWORD PTR [rip+0x1eef4]        # 0x14002f160
   14001026c:	cmp    eax,0x58
   14001026f:	jae    0x140010281
   140010271:	mov    eax,eax
   140010273:	lea    rcx,[rip+0xfffffffffffefd86]        # 0x140000000
   14001027a:	mov    esi,DWORD PTR [rcx+rax*4+0x310a0]
   140010281:	mov    DWORD PTR [rip+0x32e31],esi        # 0x1400430b8
   140010287:	mov    DWORD PTR [rip+0x33237],0x2        # 0x1400434c8
   140010291:	mov    BYTE PTR [rip+0x33128],0x0        # 0x1400433c0
   140010298:	cmp    DWORD PTR [rsp+0x34],0x4
   14001029d:	jne    0x1400106d8
   1400102a3:	mov    eax,DWORD PTR [rip+0x2f42b]        # 0x14003f6d4
   1400102a9:	mov    DWORD PTR [rsp+0x38],eax
   1400102ad:	mov    r8d,0x4
   1400102b3:	lea    rdx,[rsp+0x38]
   1400102b8:	mov    rcx,rbx
   1400102bb:	call   0x14002ada0
   1400102c0:	cmp    eax,0x4
   1400102c3:	jne    0x1400106d8
   1400102c9:	mov    eax,DWORD PTR [rip+0x2f409]        # 0x14003f6d8
   1400102cf:	mov    DWORD PTR [rsp+0x38],eax
   1400102d3:	mov    r8d,0x4
   1400102d9:	lea    rdx,[rsp+0x38]
   1400102de:	mov    rcx,rbx
   1400102e1:	call   0x14002ada0
   1400102e6:	cmp    eax,0x4
   1400102e9:	jne    0x1400106d8
   1400102ef:	mov    eax,DWORD PTR [rip+0x2f3e7]        # 0x14003f6dc
   1400102f5:	mov    DWORD PTR [rsp+0x38],eax
   1400102f9:	mov    r8d,0x4
   1400102ff:	lea    rdx,[rsp+0x38]
   140010304:	mov    rcx,rbx
   140010307:	call   0x14002ada0
   14001030c:	cmp    eax,0x4
   14001030f:	jne    0x1400106d8
   140010315:	mov    eax,DWORD PTR [rip+0x2f3c5]        # 0x14003f6e0
   14001031b:	mov    DWORD PTR [rsp+0x38],eax
   14001031f:	mov    r8d,0x4
   140010325:	lea    rdx,[rsp+0x38]
   14001032a:	mov    rcx,rbx
   14001032d:	call   0x14002ada0
   140010332:	cmp    eax,0x4
   140010335:	jne    0x1400106d8
   14001033b:	mov    r8d,r15d
   14001033e:	mov    edx,eax
   140010340:	mov    rcx,rbx
   140010343:	call   0x14002ad10
   140010348:	cmp    eax,0xffffffff
   14001034b:	je     0x1400106d8
   140010351:	mov    eax,DWORD PTR [rip+0x2f391]        # 0x14003f6e8
   140010357:	mov    DWORD PTR [rsp+0x38],eax
   14001035b:	mov    r8d,0x4
   140010361:	lea    rdx,[rsp+0x38]
   140010366:	mov    rcx,rbx
   140010369:	call   0x14002ada0
   14001036e:	cmp    eax,0x4
   140010371:	jne    0x1400106d8
   140010377:	xor    r8d,r8d
   14001037a:	mov    edx,DWORD PTR [rip+0x2f324]        # 0x14003f6a4
   140010380:	mov    rcx,rbx
   140010383:	call   0x14002ad10
   140010388:	cmp    eax,0xffffffff
   14001038b:	je     0x1400106d8
   140010391:	mov    r8d,r15d
   140010394:	mov    edx,0x4
   140010399:	mov    rcx,rbx
   14001039c:	call   0x14002ad10
   1400103a1:	cmp    eax,0xffffffff
   1400103a4:	je     0x1400106d8
   1400103aa:	mov    eax,DWORD PTR [rip+0x2f354]        # 0x14003f704
   1400103b0:	mov    DWORD PTR [rsp+0x38],eax
   1400103b4:	mov    r8d,0x4
   1400103ba:	lea    rdx,[rsp+0x38]
   1400103bf:	mov    rcx,rbx
   1400103c2:	call   0x14002ada0
   1400103c7:	cmp    eax,0x4
   1400103ca:	jne    0x1400106d8
   1400103d0:	mov    eax,DWORD PTR [rip+0x2f332]        # 0x14003f708
   1400103d6:	mov    DWORD PTR [rsp+0x38],eax
   1400103da:	mov    r8d,0x4
   1400103e0:	lea    rdx,[rsp+0x38]
   1400103e5:	mov    rcx,rbx
   1400103e8:	call   0x14002ada0
   1400103ed:	cmp    eax,0x4
   1400103f0:	jne    0x1400106d8
   1400103f6:	mov    r8d,r15d
   1400103f9:	lea    edx,[rax-0x2]
   1400103fc:	mov    rcx,rbx
   1400103ff:	call   0x14002ad10
   140010404:	cmp    eax,0xffffffff
   140010407:	je     0x1400106d8
   14001040d:	mov    eax,DWORD PTR [rip+0x2f2fd]        # 0x14003f710
   140010413:	mov    DWORD PTR [rsp+0x38],eax
   140010417:	mov    r8d,0x4
   14001041d:	lea    rdx,[rsp+0x38]
   140010422:	mov    rcx,rbx
   140010425:	call   0x14002ada0
   14001042a:	cmp    eax,0x4
   14001042d:	jne    0x1400106d8
   140010433:	mov    r8d,r15d
   140010436:	mov    edx,eax
   140010438:	mov    rcx,rbx
   14001043b:	call   0x14002ad10
   140010440:	cmp    eax,0xffffffff
   140010443:	je     0x1400106d8
   140010449:	mov    eax,DWORD PTR [rip+0x2f2c9]        # 0x14003f718
   14001044f:	mov    DWORD PTR [rsp+0x38],eax
   140010453:	mov    r8d,0x4
   140010459:	lea    rdx,[rsp+0x38]
   14001045e:	mov    rcx,rbx
   140010461:	call   0x14002ada0
   140010466:	cmp    eax,0x4
   140010469:	jne    0x1400106d8
   14001046f:	mov    r8d,r15d
   140010472:	lea    edx,[rax-0x2]
   140010475:	mov    rcx,rbx
   140010478:	call   0x14002ad10
   14001047d:	cmp    eax,0xffffffff
   140010480:	je     0x1400106d8
   140010486:	mov    eax,DWORD PTR [rip+0x2f294]        # 0x14003f720
   14001048c:	mov    DWORD PTR [rsp+0x38],eax
   140010490:	mov    r8d,0x4
   140010496:	lea    rdx,[rsp+0x38]
   14001049b:	mov    rcx,rbx
   14001049e:	call   0x14002ada0
   1400104a3:	cmp    eax,0x4
   1400104a6:	jne    0x1400106d8
   1400104ac:	mov    eax,DWORD PTR [rip+0x2f272]        # 0x14003f724
   1400104b2:	mov    DWORD PTR [rsp+0x38],eax
   1400104b6:	mov    r8d,0x4
   1400104bc:	lea    rdx,[rsp+0x38]
   1400104c1:	mov    rcx,rbx
   1400104c4:	call   0x14002ada0
   1400104c9:	cmp    eax,0x4
   1400104cc:	jne    0x1400106d8
   1400104d2:	xor    r8d,r8d
   1400104d5:	mov    edx,DWORD PTR [rip+0x2f1d1]        # 0x14003f6ac
   1400104db:	mov    rcx,rbx
   1400104de:	call   0x14002ad10
   1400104e3:	cmp    eax,0xffffffff
   1400104e6:	je     0x1400106d8
   1400104ec:	mov    r8d,r15d
   1400104ef:	mov    edx,0x4
   1400104f4:	mov    rcx,rbx
   1400104f7:	call   0x14002ad10
   1400104fc:	cmp    eax,0xffffffff
   1400104ff:	je     0x1400106d8
   140010505:	mov    eax,DWORD PTR [rip+0x2f221]        # 0x14003f72c
   14001050b:	mov    DWORD PTR [rsp+0x38],eax
   14001050f:	mov    r8d,0x4
   140010515:	lea    rdx,[rsp+0x38]
   14001051a:	mov    rcx,rbx
   14001051d:	call   0x14002ada0
   140010522:	cmp    eax,0x4
   140010525:	jne    0x1400106d8
   14001052b:	xor    r8d,r8d
   14001052e:	mov    edx,DWORD PTR [rip+0x2f180]        # 0x14003f6b4
   140010534:	mov    rcx,rbx
   140010537:	call   0x14002ad10
   14001053c:	cmp    eax,0xffffffff
   14001053f:	je     0x1400106d8
   140010545:	mov    r8d,r15d
   140010548:	mov    edx,0x14
   14001054d:	mov    rcx,rbx
   140010550:	call   0x14002ad10
   140010555:	cmp    eax,0xffffffff
   140010558:	je     0x1400106d8
   14001055e:	mov    eax,DWORD PTR [rip+0x2f1f4]        # 0x14003f758
   140010564:	mov    DWORD PTR [rsp+0x38],eax
   140010568:	mov    r8d,0x4
   14001056e:	lea    rdx,[rsp+0x38]
   140010573:	mov    rcx,rbx
   140010576:	call   0x14002ada0
   14001057b:	cmp    eax,0x4
   14001057e:	jne    0x1400106d8
   140010584:	mov    eax,DWORD PTR [rip+0x2f1d2]        # 0x14003f75c
   14001058a:	mov    DWORD PTR [rsp+0x38],eax
   14001058e:	mov    r8d,0x4
   140010594:	lea    rdx,[rsp+0x38]
   140010599:	mov    rcx,rbx
   14001059c:	call   0x14002ada0
   1400105a1:	cmp    eax,0x4
   1400105a4:	jne    0x1400106d8
   1400105aa:	mov    eax,DWORD PTR [rip+0x2f1b0]        # 0x14003f760
   1400105b0:	mov    DWORD PTR [rsp+0x38],eax
   1400105b4:	mov    r8d,0x4
   1400105ba:	lea    rdx,[rsp+0x38]
   1400105bf:	mov    rcx,rbx
   1400105c2:	call   0x14002ada0
   1400105c7:	cmp    eax,0x4
   1400105ca:	jne    0x1400106d8
   1400105d0:	mov    eax,DWORD PTR [rip+0x2f18e]        # 0x14003f764
   1400105d6:	mov    DWORD PTR [rsp+0x38],eax
   1400105da:	mov    r8d,0x4
   1400105e0:	lea    rdx,[rsp+0x38]
   1400105e5:	mov    rcx,rbx
   1400105e8:	call   0x14002ada0
   1400105ed:	cmp    eax,0x4
   1400105f0:	jne    0x1400106d8
   1400105f6:	mov    eax,DWORD PTR [rip+0x2f16c]        # 0x14003f768
   1400105fc:	mov    DWORD PTR [rsp+0x38],eax
   140010600:	mov    r8d,0x4
   140010606:	lea    rdx,[rsp+0x38]
   14001060b:	mov    rcx,rbx
   14001060e:	call   0x14002ada0
   140010613:	cmp    eax,0x4
   140010616:	jne    0x1400106d8
   14001061c:	mov    eax,DWORD PTR [rip+0x2f14a]        # 0x14003f76c
   140010622:	mov    DWORD PTR [rsp+0x38],eax
   140010626:	mov    r8d,0x4
   14001062c:	lea    rdx,[rsp+0x38]
   140010631:	mov    rcx,rbx
   140010634:	call   0x14002ada0
   140010639:	cmp    eax,0x4
   14001063c:	jne    0x1400106d8
   140010642:	mov    eax,DWORD PTR [rip+0x2f128]        # 0x14003f770
   140010648:	mov    DWORD PTR [rsp+0x38],eax
   14001064c:	mov    r8d,0x4
   140010652:	lea    rdx,[rsp+0x38]
   140010657:	mov    rcx,rbx
   14001065a:	call   0x14002ada0
   14001065f:	cmp    eax,0x4
   140010662:	jne    0x1400106d8
   140010664:	mov    eax,DWORD PTR [rip+0x2f10a]        # 0x14003f774
   14001066a:	mov    DWORD PTR [rsp+0x38],eax
   14001066e:	mov    r8d,0x4
   140010674:	lea    rdx,[rsp+0x38]
   140010679:	mov    rcx,rbx
   14001067c:	call   0x14002ada0
   140010681:	cmp    eax,0x4
   140010684:	jne    0x1400106d8
   140010686:	mov    eax,DWORD PTR [rip+0x2f0ec]        # 0x14003f778
   14001068c:	mov    DWORD PTR [rsp+0x38],eax
   140010690:	mov    r8d,0x4
   140010696:	lea    rdx,[rsp+0x38]
   14001069b:	mov    rcx,rbx
   14001069e:	call   0x14002ada0
   1400106a3:	cmp    eax,0x4
   1400106a6:	jne    0x1400106d8
   1400106a8:	mov    eax,DWORD PTR [rip+0x2f0de]        # 0x14003f78c
   1400106ae:	mov    DWORD PTR [rsp+0x38],eax
   1400106b2:	mov    r8d,0x4
   1400106b8:	lea    rdx,[rsp+0x38]
   1400106bd:	mov    rcx,rbx
   1400106c0:	call   0x14002ada0
   1400106c5:	cmp    eax,0x4
   1400106c8:	jne    0x1400106d8
   1400106ca:	mov    rcx,r13
   1400106cd:	call   0x14002a9e0
   1400106d2:	movzx  eax,r12w
   1400106d6:	jmp    0x1400106db
   1400106d8:	or     eax,0xffffffff
   1400106db:	mov    rcx,QWORD PTR [rbp+0x70]
   1400106df:	xor    rcx,rsp
   1400106e2:	call   0x14002c960
   1400106e7:	mov    rbx,QWORD PTR [rsp+0x1c0]
   1400106ef:	add    rsp,0x180
   1400106f6:	pop    r15
   1400106f8:	pop    r14
   1400106fa:	pop    r13
   1400106fc:	pop    r12
   1400106fe:	pop    rdi
   1400106ff:	pop    rsi
   140010700:	pop    rbp
   140010701:	ret    
   140010702:	int3   
   140010703:	int3   
   140010704:	int3   
   140010705:	int3   
   140010706:	int3   
   140010707:	int3   
   140010708:	int3   
   140010709:	int3   
   14001070a:	int3   
   14001070b:	int3   
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	rex push rbp
   140010712:	push   rsi
   140010713:	push   rdi
   140010714:	push   r12
   140010716:	push   r13
   140010718:	push   r14
   14001071a:	push   r15
   14001071c:	lea    rbp,[rsp-0x10]
   140010721:	sub    rsp,0x110
   140010728:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140010731:	mov    QWORD PTR [rsp+0x160],rbx
   140010739:	mov    rax,QWORD PTR [rip+0x2b8c0]        # 0x14003c000
   140010740:	xor    rax,rsp
   140010743:	mov    QWORD PTR [rbp+0x8],rax
   140010747:	mov    r14,rdx
   14001074a:	mov    r15,rcx
   14001074d:	cmp    WORD PTR [rip+0x2f09b],0x0        # 0x14003f7f0
   140010755:	jne    0x1400107b2
   140010757:	movsx  rdx,WORD PTR [rip+0x2e705]        # 0x14003ee64
   14001075f:	lea    r9,[rip+0xffffffffffffcf9a]        # 0x14000d700
   140010766:	mov    r8d,0xa
   14001076c:	call   QWORD PTR [rip+0x1ecf6]        # 0x14002f468
   140010772:	xor    esi,esi
   140010774:	movzx  r8d,si
   140010778:	cmp    WORD PTR [r15+0x8],0x1
   14001077e:	jbe    0x140010795
   140010780:	inc    r8w
   140010784:	movsx  rax,r8w
   140010788:	lea    rdx,[rax+rax*4]
   14001078c:	cmp    WORD PTR [r15+rdx*2+0x8],0x1
   140010793:	ja     0x140010780
   140010795:	mov    WORD PTR [rip+0x2e6c7],r8w        # 0x14003ee64
   14001079d:	mov    rcx,r14
   1400107a0:	call   QWORD PTR [rip+0x1ec8a]        # 0x14002f430
   1400107a6:	lea    rcx,[rip+0x20c53]        # 0x140031400
   1400107ad:	jmp    0x140010af5
   1400107b2:	xor    esi,esi
   1400107b4:	movzx  edi,si
   1400107b7:	cmp    si,WORD PTR [rip+0x2e6a6]        # 0x14003ee64
   1400107be:	jge    0x140010888
   1400107c4:	lea    rbx,[rcx+0x4]
   1400107c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400107d0:	movzx  r8d,WORD PTR [rbx-0x4]
   1400107d5:	test   r8w,r8w
   1400107d9:	jne    0x1400107f6
   1400107db:	cmp    WORD PTR [rbx-0x2],si
   1400107df:	jne    0x1400107f6
   1400107e1:	cmp    WORD PTR [rbx],si
   1400107e4:	jne    0x1400107f6
   1400107e6:	cmp    WORD PTR [rbx+0x2],si
   1400107ea:	jne    0x1400107f6
   1400107ec:	cmp    WORD PTR [rbx+0x4],si
   1400107f0:	je     0x140010875
   1400107f6:	movzx  eax,WORD PTR [rbx+0x2]
   1400107fa:	movzx  ecx,WORD PTR [rbx]
   1400107fd:	movzx  edx,WORD PTR [rbx-0x2]
   140010801:	movzx  r9d,r8w
   140010805:	movzx  r8d,WORD PTR [rbx+0x4]
   14001080a:	mov    DWORD PTR [rsp+0x30],eax
   14001080e:	mov    DWORD PTR [rsp+0x28],ecx
   140010812:	mov    DWORD PTR [rsp+0x20],edx
   140010816:	lea    rdx,[rip+0x20bf3]        # 0x140031410
   14001081d:	lea    rcx,[rbp-0x30]
   140010821:	call   QWORD PTR [rip+0x1ec29]        # 0x14002f450
   140010827:	test   eax,eax
   140010829:	js     0x14001087e
   14001082b:	movzx  ecx,si
   14001082e:	xchg   ax,ax
   140010830:	movsx  rax,cx
   140010834:	lea    rdx,[rbp-0x30]
   140010838:	add    rdx,rax
   14001083b:	movzx  eax,BYTE PTR [rdx]
   14001083e:	test   al,al
   140010840:	je     0x14001084f
   140010842:	not    al
   140010844:	mov    BYTE PTR [rdx],al
   140010846:	inc    cx
   140010849:	cmp    cx,0x32
   14001084d:	jl     0x140010830
   14001084f:	lea    rdx,[rbp-0x30]
   140010853:	mov    rcx,r14
   140010856:	call   QWORD PTR [rip+0x1ebdc]        # 0x14002f438
   14001085c:	test   eax,eax
   14001085e:	js     0x14001087e
   140010860:	add    rbx,0xa
   140010864:	inc    di
   140010867:	cmp    di,WORD PTR [rip+0x2e5f6]        # 0x14003ee64
   14001086e:	jge    0x140010888
   140010870:	jmp    0x1400107d0
   140010875:	mov    WORD PTR [rip+0x2e5e8],di        # 0x14003ee64
   14001087c:	jmp    0x140010888
   14001087e:	mov    eax,0x1
   140010883:	jmp    0x140010b13
   140010888:	mov    rcx,r14
   14001088b:	call   QWORD PTR [rip+0x1eb9f]        # 0x14002f430
   140010891:	lea    rax,[rsp+0x68]
   140010896:	mov    QWORD PTR [rsp+0x28],rax
   14001089b:	lea    rax,[rsp+0x48]
   1400108a0:	mov    QWORD PTR [rsp+0x20],rax
   1400108a5:	lea    r9,[rsp+0x40]
   1400108aa:	call   0x14002a1d0
   1400108af:	test   eax,eax
   1400108b1:	jne    0x14001087e
   1400108b3:	lea    r8,[rsp+0x68]
   1400108b8:	mov    edx,DWORD PTR [rsp+0x40]
   1400108bc:	lea    rcx,[rsp+0x48]
   1400108c1:	call   0x140028fd0
   1400108c6:	test   eax,eax
   1400108c8:	jne    0x14001087e
   1400108ca:	lea    rcx,[rip+0x20b2f]        # 0x140031400
   1400108d1:	call   QWORD PTR [rip+0x1eb89]        # 0x14002f460
   1400108d7:	lea    rax,[rsp+0x68]
   1400108dc:	mov    QWORD PTR [rsp+0x28],rax
   1400108e1:	lea    rax,[rsp+0x48]
   1400108e6:	mov    QWORD PTR [rsp+0x20],rax
   1400108eb:	lea    r9,[rsp+0x40]
   1400108f0:	call   0x14002a000
   1400108f5:	test   eax,eax
   1400108f7:	jne    0x14001087e
   1400108f9:	lea    r8,[rsp+0x68]
   1400108fe:	mov    edx,DWORD PTR [rsp+0x40]
   140010902:	lea    rcx,[rsp+0x48]
   140010907:	call   0x140028fd0
   14001090c:	test   eax,eax
   14001090e:	jne    0x14001087e
   140010914:	lea    rcx,[rip+0x20b15]        # 0x140031430
   14001091b:	call   QWORD PTR [rip+0x1eb3f]        # 0x14002f460
   140010921:	lea    rcx,[rip+0x20ad8]        # 0x140031400
   140010928:	call   QWORD PTR [rip+0x1eb32]        # 0x14002f460
   14001092e:	mov    WORD PTR [rip+0x2e52f],si        # 0x14003ee64
   140010935:	mov    rcx,rsi
   140010938:	lea    r13,[rip+0x20b01]        # 0x140031440
   14001093f:	nop
   140010940:	movzx  eax,BYTE PTR [rcx+r13*1]
   140010945:	mov    BYTE PTR [rbp+rcx*1-0x50],al
   140010949:	lea    rcx,[rcx+0x1]
   14001094d:	test   al,al
   14001094f:	jne    0x140010940
   140010951:	mov    ecx,0x10
   140010956:	call   QWORD PTR [rip+0x1f03c]        # 0x14002f998
   14001095c:	mov    rdi,rax
   14001095f:	mov    QWORD PTR [rsp+0x40],rax
   140010964:	test   rax,rax
   140010967:	je     0x14001099c
   140010969:	mov    WORD PTR [rax],si
   14001096c:	mov    QWORD PTR [rax+0x8],rsi
   140010970:	lea    rcx,[rbp-0x50]
   140010974:	call   QWORD PTR [rip+0x1e906]        # 0x14002f280
   14001097a:	test   eax,eax
   14001097c:	jle    0x14001099f
   14001097e:	inc    eax
   140010980:	movsxd rcx,eax
   140010983:	call   QWORD PTR [rip+0x1f00f]        # 0x14002f998
   140010989:	mov    QWORD PTR [rdi+0x8],rax
   14001098d:	lea    rdx,[rbp-0x50]
   140010991:	mov    rcx,rax
   140010994:	call   QWORD PTR [rip+0x1e8be]        # 0x14002f258
   14001099a:	jmp    0x14001099f
   14001099c:	mov    rdi,rsi
   14001099f:	mov    ebx,0x1
   1400109a4:	mov    edx,ebx
   1400109a6:	mov    rcx,rdi
   1400109a9:	call   0x14002ab70
   1400109ae:	mov    r12,rax
   1400109b1:	test   rax,rax
   1400109b4:	jne    0x1400109be
   1400109b6:	movzx  eax,bx
   1400109b9:	jmp    0x140010b13
   1400109be:	test   rdi,rdi
   1400109c1:	je     0x1400109db
   1400109c3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400109c7:	test   rcx,rcx
   1400109ca:	je     0x1400109d2
   1400109cc:	call   QWORD PTR [rip+0x1f1a6]        # 0x14002fb78
   1400109d2:	mov    rcx,rdi
   1400109d5:	call   QWORD PTR [rip+0x1f19d]        # 0x14002fb78
   1400109db:	movzx  r14d,si
   1400109df:	cmp    si,WORD PTR [rip+0x2e47e]        # 0x14003ee64
   1400109e6:	jge    0x140010aea
   1400109ec:	lea    rdi,[r15+0x4]
   1400109f0:	lea    r15,[rip+0x206a9]        # 0x1400310a0
   1400109f7:	nop    WORD PTR [rax+rax*1+0x0]
   140010a00:	mov    QWORD PTR [rsp+0x20],rsi
   140010a05:	lea    r9,[rsp+0x40]
   140010a0a:	mov    r8d,0x1a
   140010a10:	lea    rdx,[rbp-0x70]
   140010a14:	mov    rcx,QWORD PTR [r12]
   140010a18:	call   QWORD PTR [rip+0x1e7ea]        # 0x14002f208
   140010a1e:	test   eax,eax
   140010a20:	jne    0x140010a51
   140010a22:	call   QWORD PTR [rip+0x1e738]        # 0x14002f160
   140010a28:	cmp    eax,0x58
   140010a2b:	jae    0x140010a35
   140010a2d:	mov    eax,eax
   140010a2f:	mov    ecx,DWORD PTR [r15+rax*4]
   140010a33:	jmp    0x140010a3a
   140010a35:	mov    ecx,0x106
   140010a3a:	mov    DWORD PTR [rip+0x32678],ecx        # 0x1400430b8
   140010a40:	mov    DWORD PTR [rip+0x32a7e],0x2        # 0x1400434c8
   140010a4a:	mov    BYTE PTR [rip+0x3296f],0x0        # 0x1400433c0
   140010a51:	mov    rcx,rsi
   140010a54:	nop    DWORD PTR [rax+0x0]
   140010a58:	nop    DWORD PTR [rax+rax*1+0x0]
   140010a60:	not    BYTE PTR [rbp+rcx*1-0x70]
   140010a64:	movzx  eax,BYTE PTR [rbp+rcx*1-0x6f]
   140010a69:	not    al
   140010a6b:	mov    BYTE PTR [rbp+rcx*1-0x6f],al
   140010a6f:	add    rcx,0x2
   140010a73:	cmp    rcx,0x1a
   140010a77:	jl     0x140010a60
   140010a79:	cmp    DWORD PTR [rsp+0x40],0x1a
   140010a7e:	jne    0x1400109b6
   140010a84:	lea    rax,[rdi+0x2]
   140010a88:	lea    rcx,[rdi-0x2]
   140010a8c:	lea    r9,[rdi-0x4]
   140010a90:	mov    QWORD PTR [rsp+0x30],rax
   140010a95:	mov    QWORD PTR [rsp+0x28],rdi
   140010a9a:	mov    QWORD PTR [rsp+0x20],rcx
   140010a9f:	lea    r8,[rdi+0x4]
   140010aa3:	lea    rdx,[rip+0x20966]        # 0x140031410
   140010aaa:	lea    rcx,[rbp-0x70]
   140010aae:	call   QWORD PTR [rip+0x1e994]        # 0x14002f448
   140010ab4:	cmp    eax,0x5
   140010ab7:	jne    0x1400109b6
   140010abd:	cmp    WORD PTR [rdi+0x4],bx
   140010ac1:	je     0x140010ae2
   140010ac3:	add    rdi,0xa
   140010ac7:	inc    r14w
   140010acb:	cmp    r14w,WORD PTR [rip+0x2e391]        # 0x14003ee64
   140010ad3:	lea    r15,[rip+0x205c6]        # 0x1400310a0
   140010ada:	jl     0x140010a00
   140010ae0:	jmp    0x140010aea
   140010ae2:	mov    WORD PTR [rip+0x2e37a],r14w        # 0x14003ee64
   140010aea:	mov    rcx,r12
   140010aed:	call   0x14002a9e0
   140010af2:	mov    rcx,r13
   140010af5:	call   QWORD PTR [rip+0x1e965]        # 0x14002f460
   140010afb:	mov    eax,0xfa0
   140010b00:	cmp    WORD PTR [rip+0x2e35d],ax        # 0x14003ee64
   140010b07:	jle    0x140010b10
   140010b09:	mov    WORD PTR [rip+0x2e354],ax        # 0x14003ee64
   140010b10:	movzx  eax,si
   140010b13:	mov    rcx,QWORD PTR [rbp+0x8]
   140010b17:	xor    rcx,rsp
   140010b1a:	call   0x14002c960
   140010b1f:	mov    rbx,QWORD PTR [rsp+0x160]
   140010b27:	add    rsp,0x110
   140010b2e:	pop    r15
   140010b30:	pop    r14
   140010b32:	pop    r13
   140010b34:	pop    r12
   140010b36:	pop    rdi
   140010b37:	pop    rsi
   140010b38:	pop    rbp
   140010b39:	ret    
   140010b3a:	int3   
   140010b3b:	int3   
   140010b3c:	int3   
   140010b3d:	int3   
   140010b3e:	int3   
   140010b3f:	int3   
   140010b40:	rex push rbp
   140010b42:	push   rdi
   140010b43:	push   r12
   140010b45:	push   r13
   140010b47:	push   r15
   140010b49:	sub    rsp,0x150
   140010b50:	mov    rax,QWORD PTR [rip+0x2b4a9]        # 0x14003c000
   140010b57:	xor    rax,rsp
   140010b5a:	mov    QWORD PTR [rsp+0x130],rax
   140010b62:	mov    r9,QWORD PTR [rip+0x2c78f]        # 0x14003d2f8
   140010b69:	xor    r12d,r12d
   140010b6c:	mov    edi,0x11
   140010b71:	mov    rbp,rdx
   140010b74:	mov    QWORD PTR [rsp+0x20],rdx
   140010b79:	mov    r15,rcx
   140010b7c:	mov    WORD PTR [rip+0x2e2d4],r12w        # 0x14003ee58
   140010b84:	mov    WORD PTR [rip+0x2d618],r12w        # 0x14003e1a4
   140010b8c:	mov    WORD PTR [rip+0x2e2b4],r12w        # 0x14003ee48
   140010b94:	mov    WORD PTR [rip+0x2e2c5],di        # 0x14003ee60
   140010b9b:	mov    WORD PTR [rip+0x2e2ad],r12w        # 0x14003ee50
   140010ba3:	lea    r8,[rip+0x207a6]        # 0x140031350
   140010baa:	lea    rdx,[rip+0x2d5ff]        # 0x14003e1b0
   140010bb1:	mov    al,0x43
   140010bb3:	lea    r13,[rip+0xfffffffffffef446]        # 0x140000000
   140010bba:	nop    WORD PTR [rax+rax*1+0x0]
   140010bc0:	cmp    al,0x20
   140010bc2:	jae    0x140010bd2
   140010bc4:	movzx  eax,al
   140010bc7:	movzx  ecx,WORD PTR [r13+rax*2+0x31200]
   140010bd0:	jmp    0x140010be7
   140010bd2:	cmp    al,0x80
   140010bd4:	jae    0x140010bdb
   140010bd6:	movzx  ecx,al
   140010bd9:	jmp    0x140010be7
   140010bdb:	movzx  eax,al
   140010bde:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140010be7:	movzx  eax,BYTE PTR [r8+0x1]
   140010bec:	inc    r8
   140010bef:	mov    WORD PTR [rdx],cx
   140010bf2:	add    rdx,0x2
   140010bf6:	test   al,al
   140010bf8:	jne    0x140010bc0
   140010bfa:	mov    WORD PTR [rdx],r12w
   140010bfe:	lea    rdx,[rip+0x2d5ab]        # 0x14003e1b0
   140010c05:	xor    r8d,r8d
   140010c08:	xor    ecx,ecx
   140010c0a:	call   QWORD PTR [rip+0x30e98]        # 0x140041aa8
   140010c10:	test   ax,ax
   140010c13:	je     0x140010c1f
   140010c15:	mov    eax,0x6
   140010c1a:	jmp    0x140011101
   140010c1f:	mov    ecx,0x110
   140010c24:	call   QWORD PTR [rip+0x1e7ee]        # 0x14002f418
   140010c2a:	mov    QWORD PTR [rip+0x2f8af],rax        # 0x1400404e0
   140010c31:	test   rax,rax
   140010c34:	jne    0x140010c40
   140010c36:	mov    eax,0x4
   140010c3b:	jmp    0x140011101
   140010c40:	mov    ecx,0x800
   140010c45:	mov    QWORD PTR [rsp+0x140],r14
   140010c4d:	call   QWORD PTR [rip+0x1e7c5]        # 0x14002f418
   140010c53:	mov    r14,rax
   140010c56:	test   rax,rax
   140010c59:	jne    0x140010c64
   140010c5b:	lea    eax,[r14+0x4]
   140010c5f:	jmp    0x1400110f9
   140010c64:	mov    rdx,rbp
   140010c67:	mov    QWORD PTR [rsp+0x190],rbx
   140010c6f:	call   0x140004720
   140010c74:	mov    rdx,r14
   140010c77:	mov    DWORD PTR [r14],0x20
   140010c7e:	mov    WORD PTR [rip+0x2f557],ax        # 0x1400401dc
   140010c85:	call   0x140004860
   140010c8a:	mov    rcx,r15
   140010c8d:	call   0x14000bb50
   140010c92:	test   ax,ax
   140010c95:	je     0x140010cb4
   140010c97:	cwde   
   140010c98:	cmp    eax,0xfffffffe
   140010c9b:	je     0x140010fd4
   140010ca1:	cmp    eax,0xffffffff
   140010ca4:	jne    0x140011098
   140010caa:	mov    eax,0x1
   140010caf:	jmp    0x1400110f1
   140010cb4:	movzx  eax,WORD PTR [rip+0x2d309]        # 0x14003dfc4
   140010cbb:	mov    DWORD PTR [r15],r12d
   140010cbe:	mov    DWORD PTR [rip+0x2f33f],r12d        # 0x140040004
   140010cc5:	test   ax,ax
   140010cc8:	je     0x140010e6b
   140010cce:	mov    rcx,QWORD PTR [rip+0x2f513]        # 0x1400401e8
   140010cd5:	lea    r9,[rip+0xffffffffffff6044]        # 0x140006d20
   140010cdc:	movsx  rdx,ax
   140010ce0:	mov    r8d,0x10
   140010ce6:	call   QWORD PTR [rip+0x1e77c]        # 0x14002f468
   140010cec:	mov    rax,QWORD PTR [rip+0x2f4f5]        # 0x1400401e8
   140010cf3:	lea    rdx,[rsp+0x30]
   140010cf8:	mov    rcx,QWORD PTR [rax]
   140010cfb:	nop    DWORD PTR [rax+rax*1+0x0]
   140010d00:	movzx  eax,BYTE PTR [rcx]
   140010d03:	test   al,al
   140010d05:	jne    0x140010d0d
   140010d07:	cmp    BYTE PTR [rcx+0x1],r12b
   140010d0b:	je     0x140010d20
   140010d0d:	mov    BYTE PTR [rdx],al
   140010d0f:	movzx  eax,BYTE PTR [rcx+0x1]
   140010d13:	add    rdx,0x2
   140010d17:	mov    BYTE PTR [rdx-0x1],al
   140010d1a:	add    rcx,0x2
   140010d1e:	jmp    0x140010d00
   140010d20:	movzx  eax,BYTE PTR [rcx]
   140010d23:	mov    BYTE PTR [rdx],al
   140010d25:	movzx  eax,BYTE PTR [rcx+0x1]
   140010d29:	mov    ecx,r12d
   140010d2c:	mov    BYTE PTR [rdx+0x1],al
   140010d2f:	lea    rax,[rsp+0x30]
   140010d34:	cmp    BYTE PTR [rax],r12b
   140010d37:	jne    0x140010d3f
   140010d39:	cmp    BYTE PTR [rax+0x1],r12b
   140010d3d:	je     0x140010d47
   140010d3f:	add    rax,0x2
   140010d43:	inc    ecx
   140010d45:	jmp    0x140010d34
   140010d47:	add    cx,cx
   140010d4a:	movzx  r11d,r12w
   140010d4e:	cmp    r12w,cx
   140010d52:	jge    0x140010e37
   140010d58:	mov    rax,QWORD PTR [rip+0x2f781]        # 0x1400404e0
   140010d5f:	movzx  r9d,WORD PTR [rip+0x2e0e5]        # 0x14003ee4c
   140010d67:	mov    r10,QWORD PTR [rip+0x2d39a]        # 0x14003e108
   140010d6e:	dec    cx
   140010d71:	mov    QWORD PTR [rsp+0x148],rsi
   140010d79:	movzx  esi,BYTE PTR [rax+0x3d]
   140010d7d:	shr    cx,1
   140010d80:	lea    rbx,[rsp+0x30]
   140010d85:	mov    ebp,0xff00
   140010d8a:	inc    cx
   140010d8d:	movzx  edi,cx
   140010d90:	movzx  edx,WORD PTR [rbx]
   140010d93:	movzx  ecx,dx
   140010d96:	shr    cx,0x8
   140010d9a:	cmp    cx,0xf
   140010d9e:	ja     0x140010dd3
   140010da0:	test   bp,dx
   140010da3:	jne    0x140010db2
   140010da5:	lea    eax,[rdx-0x41]
   140010da8:	cmp    al,0x19
   140010daa:	ja     0x140010dd3
   140010dac:	or     dx,0x20
   140010db0:	jmp    0x140010dd3
   140010db2:	lea    eax,[rcx-0x1]
   140010db5:	add    al,al
   140010db7:	movzx  r8d,al
   140010dbb:	cmp    dl,BYTE PTR [r8+r13*1+0x31240]
   140010dc3:	jb     0x140010dd3
   140010dc5:	cmp    dl,BYTE PTR [r8+r13*1+0x31241]
   140010dcd:	ja     0x140010dd3
   140010dcf:	or     dx,0x1
   140010dd3:	cmp    cl,sil
   140010dd6:	jne    0x140010de6
   140010dd8:	movzx  eax,dx
   140010ddb:	movzx  ecx,BYTE PTR [rax+r13*1+0x400b0]
   140010de4:	jmp    0x140010e08
   140010de6:	movzx  ecx,r12w
   140010dea:	cmp    r12w,r9w
   140010dee:	jae    0x140010e03
   140010df0:	movzx  eax,cx
   140010df3:	cmp    dx,WORD PTR [r10+rax*4]
   140010df8:	je     0x140010e5d
   140010dfa:	inc    cx
   140010dfd:	cmp    cx,r9w
   140010e01:	jb     0x140010df0
   140010e03:	mov    ecx,0xff
   140010e08:	movsx  rax,r11w
   140010e0c:	add    rbx,0x2
   140010e10:	inc    r11w
   140010e14:	mov    WORD PTR [rsp+rax*1+0xb0],cx
   140010e1c:	dec    rdi
   140010e1f:	jne    0x140010d90
   140010e25:	mov    rbp,QWORD PTR [rsp+0x20]
   140010e2a:	mov    rsi,QWORD PTR [rsp+0x148]
   140010e32:	mov    edi,0x11
   140010e37:	lea    rcx,[rsp+0xb0]
   140010e3f:	call   0x140006d50
   140010e44:	test   ax,ax
   140010e47:	jns    0x140010e62
   140010e49:	cmp    ax,0xffff
   140010e4d:	je     0x140011098
   140010e53:	mov    eax,0x3
   140010e58:	jmp    0x1400110f1
   140010e5d:	movzx  ecx,cl
   140010e60:	jmp    0x140010e08
   140010e62:	mov    WORD PTR [rip+0x2f347],ax        # 0x1400401b0
   140010e69:	jmp    0x140010e73
   140010e6b:	mov    WORD PTR [rip+0x2f33d],r12w        # 0x1400401b0
   140010e73:	mov    rdx,r15
   140010e76:	mov    WORD PTR [rip+0x2dfc6],r12w        # 0x14003ee44
   140010e7e:	mov    WORD PTR [rip+0x2dfd6],r12w        # 0x14003ee5c
   140010e86:	call   0x140011130
   140010e8b:	test   ax,ax
   140010e8e:	jns    0x140010ea9
   140010e90:	cwde   
   140010e91:	cmp    eax,0xfffffffc
   140010e94:	je     0x14001102e
   140010e9a:	cmp    eax,0xffffffff
   140010e9d:	je     0x140010e53
   140010e9f:	mov    eax,0x4
   140010ea4:	jmp    0x1400110f1
   140010ea9:	mov    rcx,r14
   140010eac:	call   QWORD PTR [rip+0x1e5ce]        # 0x14002f480
   140010eb2:	mov    rcx,QWORD PTR [rip+0x2f32f]        # 0x1400401e8
   140010eb9:	test   rcx,rcx
   140010ebc:	je     0x140010ecb
   140010ebe:	call   QWORD PTR [rip+0x1e5bc]        # 0x14002f480
   140010ec4:	mov    QWORD PTR [rip+0x2f31d],r12        # 0x1400401e8
   140010ecb:	mov    rcx,QWORD PTR [rip+0x2f30e]        # 0x1400401e0
   140010ed2:	test   rcx,rcx
   140010ed5:	je     0x140010ee4
   140010ed7:	call   QWORD PTR [rip+0x1e5a3]        # 0x14002f480
   140010edd:	mov    QWORD PTR [rip+0x2f2fc],r12        # 0x1400401e0
   140010ee4:	cmp    WORD PTR [rip+0x30af0],r12w        # 0x1400419dc
   140010eec:	je     0x1400110a8
   140010ef2:	mov    r9,QWORD PTR [rip+0x2c3ff]        # 0x14003d2f8
   140010ef9:	mov    eax,0x53
   140010efe:	mov    ebx,0x1
   140010f03:	mov    WORD PTR [rip+0x2df56],ax        # 0x14003ee60
   140010f0a:	mov    WORD PTR [rip+0x2d292],r12w        # 0x14003e1a4
   140010f12:	mov    WORD PTR [rip+0x2df2f],di        # 0x14003ee48
   140010f19:	mov    al,0x43
   140010f1b:	mov    WORD PTR [rip+0x2df36],bx        # 0x14003ee58
   140010f22:	mov    WORD PTR [rip+0x2df27],di        # 0x14003ee50
   140010f29:	lea    r8,[rip+0x20430]        # 0x140031360
   140010f30:	lea    rdx,[rip+0x2d279]        # 0x14003e1b0
   140010f37:	cmp    al,0x20
   140010f39:	jae    0x140010f49
   140010f3b:	movzx  eax,al
   140010f3e:	movzx  ecx,WORD PTR [r13+rax*2+0x31200]
   140010f47:	jmp    0x140010f5e
   140010f49:	cmp    al,0x80
   140010f4b:	jae    0x140010f52
   140010f4d:	movzx  ecx,al
   140010f50:	jmp    0x140010f5e
   140010f52:	movzx  eax,al
   140010f55:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140010f5e:	movzx  eax,BYTE PTR [r8+0x1]
   140010f63:	inc    r8
   140010f66:	mov    WORD PTR [rdx],cx
   140010f69:	add    rdx,0x2
   140010f6d:	test   al,al
   140010f6f:	jne    0x140010f37
   140010f71:	mov    WORD PTR [rdx],r12w
   140010f75:	lea    rdx,[rip+0x2d234]        # 0x14003e1b0
   140010f7c:	xor    r8d,r8d
   140010f7f:	mov    ecx,edi
   140010f81:	call   QWORD PTR [rip+0x30b21]        # 0x140041aa8
   140010f87:	test   ax,ax
   140010f8a:	jne    0x140010fde
   140010f8c:	lea    rcx,[rip+0x203dd]        # 0x140031370
   140010f93:	call   0x14001bc00
   140010f98:	cmp    DWORD PTR [rip+0x2d209],r12d        # 0x14003e1a8
   140010f9f:	je     0x140010e53
   140010fa5:	call   0x140013770
   140010faa:	test   ax,ax
   140010fad:	je     0x140011042
   140010fb3:	cwde   
   140010fb4:	cmp    eax,0xfffffff9
   140010fb7:	je     0x140011038
   140010fb9:	cmp    eax,0xfffffffc
   140010fbc:	je     0x140010fde
   140010fbe:	cmp    eax,0xfffffffe
   140010fc1:	je     0x140010fd4
   140010fc3:	cmp    eax,0xffffffff
   140010fc6:	jne    0x140011098
   140010fcc:	movzx  eax,bx
   140010fcf:	jmp    0x1400110f1
   140010fd4:	mov    eax,0x2
   140010fd9:	jmp    0x1400110f1
   140010fde:	mov    rcx,QWORD PTR [rip+0x2d103]        # 0x14003e0e8
   140010fe5:	test   rcx,rcx
   140010fe8:	je     0x140010ff7
   140010fea:	call   QWORD PTR [rip+0x1e490]        # 0x14002f480
   140010ff0:	mov    QWORD PTR [rip+0x2d0f1],r12        # 0x14003e0e8
   140010ff7:	mov    rcx,QWORD PTR [rip+0x2d0f2]        # 0x14003e0f0
   140010ffe:	test   rcx,rcx
   140011001:	je     0x140011010
   140011003:	call   QWORD PTR [rip+0x1e477]        # 0x14002f480
   140011009:	mov    QWORD PTR [rip+0x2d0e0],r12        # 0x14003e0f0
   140011010:	call   0x1400049e0
   140011015:	mov    rcx,QWORD PTR [rip+0x2f4c4]        # 0x1400404e0
   14001101c:	test   rcx,rcx
   14001101f:	je     0x14001102e
   140011021:	call   QWORD PTR [rip+0x1e459]        # 0x14002f480
   140011027:	mov    QWORD PTR [rip+0x2f4b2],r12        # 0x1400404e0
   14001102e:	mov    eax,0x6
   140011033:	jmp    0x1400110f1
   140011038:	mov    eax,0x7
   14001103d:	jmp    0x1400110f1
   140011042:	lea    rcx,[rip+0x20327]        # 0x140031370
   140011049:	call   QWORD PTR [rip+0x1e411]        # 0x14002f460
   14001104f:	mov    rcx,QWORD PTR [rip+0x2d092]        # 0x14003e0e8
   140011056:	test   rcx,rcx
   140011059:	je     0x140011068
   14001105b:	call   QWORD PTR [rip+0x1e41f]        # 0x14002f480
   140011061:	mov    QWORD PTR [rip+0x2d080],r12        # 0x14003e0e8
   140011068:	mov    rcx,QWORD PTR [rip+0x2d081]        # 0x14003e0f0
   14001106f:	test   rcx,rcx
   140011072:	je     0x140011081
   140011074:	call   QWORD PTR [rip+0x1e406]        # 0x14002f480
   14001107a:	mov    QWORD PTR [rip+0x2d06f],r12        # 0x14003e0f0
   140011081:	mov    rcx,rbp
   140011084:	call   0x1400076e0
   140011089:	test   ax,ax
   14001108c:	je     0x14001109f
   14001108e:	cmp    ax,0xffff
   140011092:	je     0x140010e53
   140011098:	mov    eax,0x4
   14001109d:	jmp    0x1400110f1
   14001109f:	lea    rcx,[rip+0x202da]        # 0x140031380
   1400110a6:	jmp    0x1400110c9
   1400110a8:	lea    rcx,[rip+0x202c1]        # 0x140031370
   1400110af:	call   QWORD PTR [rip+0x1e3ab]        # 0x14002f460
   1400110b5:	lea    rcx,[rip+0x202d4]        # 0x140031390
   1400110bc:	call   QWORD PTR [rip+0x1e39e]        # 0x14002f460
   1400110c2:	lea    rcx,[rip+0x202d7]        # 0x1400313a0
   1400110c9:	call   QWORD PTR [rip+0x1e391]        # 0x14002f460
   1400110cf:	call   0x1400049e0
   1400110d4:	mov    rcx,QWORD PTR [rip+0x2f405]        # 0x1400404e0
   1400110db:	test   rcx,rcx
   1400110de:	je     0x1400110ed
   1400110e0:	call   QWORD PTR [rip+0x1e39a]        # 0x14002f480
   1400110e6:	mov    QWORD PTR [rip+0x2f3f3],r12        # 0x1400404e0
   1400110ed:	movzx  eax,r12w
   1400110f1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400110f9:	mov    r14,QWORD PTR [rsp+0x140]
   140011101:	mov    rcx,QWORD PTR [rsp+0x130]
   140011109:	xor    rcx,rsp
   14001110c:	call   0x14002c960
   140011111:	add    rsp,0x150
   140011118:	pop    r15
   14001111a:	pop    r13
   14001111c:	pop    r12
   14001111e:	pop    rdi
   14001111f:	pop    rbp
   140011120:	ret    
   140011121:	int3   
   140011122:	int3   
   140011123:	int3   
   140011124:	int3   
   140011125:	int3   
   140011126:	int3   
   140011127:	int3   
   140011128:	int3   
   140011129:	int3   
   14001112a:	int3   
   14001112b:	int3   
   14001112c:	int3   
   14001112d:	int3   
   14001112e:	int3   
   14001112f:	int3   
   140011130:	mov    rax,rsp
   140011133:	push   rbp
   140011134:	push   r12
   140011136:	push   r13
   140011138:	push   r14
   14001113a:	push   r15
   14001113c:	lea    rbp,[rax-0x3b8]
   140011143:	sub    rsp,0x490
   14001114a:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140011153:	mov    QWORD PTR [rax+0x8],rbx
   140011157:	mov    QWORD PTR [rax+0x18],rsi
   14001115b:	mov    QWORD PTR [rax+0x20],rdi
   14001115f:	mov    rax,QWORD PTR [rip+0x2ae9a]        # 0x14003c000
   140011166:	xor    rax,rsp
   140011169:	mov    QWORD PTR [rbp+0x380],rax
   140011170:	mov    rdi,rdx
   140011173:	mov    QWORD PTR [rsp+0x50],rdx
   140011178:	mov    rax,QWORD PTR [rip+0x2f361]        # 0x1400404e0
   14001117f:	mov    QWORD PTR [rsp+0x40],rax
   140011184:	mov    rsi,QWORD PTR [rip+0x2cf75]        # 0x14003e100
   14001118b:	mov    QWORD PTR [rsp+0x68],rsi
   140011190:	xor    r13d,r13d
   140011193:	movzx  r14d,r13w
   140011197:	movzx  eax,r13w
   14001119b:	mov    DWORD PTR [rsp+0x38],eax
   14001119f:	mov    ecx,r13d
   1400111a2:	lea    r13,[rip+0xfffffffffffeee57]        # 0x140000000
   1400111a9:	nop    DWORD PTR [rax+0x0]
   1400111b0:	movzx  eax,BYTE PTR [rcx+r13*1+0x31370]
   1400111b9:	mov    BYTE PTR [rbp+rcx*1-0x48],al
   1400111bd:	lea    rcx,[rcx+0x1]
   1400111c1:	test   al,al
   1400111c3:	jne    0x1400111b0
   1400111c5:	mov    ecx,0x10
   1400111ca:	call   QWORD PTR [rip+0x1e7c8]        # 0x14002f998
   1400111d0:	mov    rbx,rax
   1400111d3:	mov    QWORD PTR [rsp+0x60],rax
   1400111d8:	test   rax,rax
   1400111db:	mov    r13d,0x0
   1400111e1:	je     0x140011217
   1400111e3:	mov    WORD PTR [rax],r13w
   1400111e7:	mov    QWORD PTR [rax+0x8],r13
   1400111eb:	lea    rcx,[rbp-0x48]
   1400111ef:	call   QWORD PTR [rip+0x1e08b]        # 0x14002f280
   1400111f5:	test   eax,eax
   1400111f7:	jle    0x14001121a
   1400111f9:	inc    eax
   1400111fb:	movsxd rcx,eax
   1400111fe:	call   QWORD PTR [rip+0x1e794]        # 0x14002f998
   140011204:	mov    QWORD PTR [rbx+0x8],rax
   140011208:	lea    rdx,[rbp-0x48]
   14001120c:	mov    rcx,rax
   14001120f:	call   QWORD PTR [rip+0x1e043]        # 0x14002f258
   140011215:	jmp    0x14001121a
   140011217:	mov    rbx,r13
   14001121a:	mov    edx,0xa
   14001121f:	mov    rcx,rbx
   140011222:	call   0x14002ab70
   140011227:	mov    r12,rax
   14001122a:	mov    QWORD PTR [rsp+0x60],rax
   14001122f:	test   rax,rax
   140011232:	jne    0x14001123c
   140011234:	or     eax,0xffffffff
   140011237:	jmp    0x1400121b5
   14001123c:	test   rbx,rbx
   14001123f:	je     0x140011259
   140011241:	mov    rcx,QWORD PTR [rbx+0x8]
   140011245:	test   rcx,rcx
   140011248:	je     0x140011250
   14001124a:	call   QWORD PTR [rip+0x1e928]        # 0x14002fb78
   140011250:	mov    rcx,rbx
   140011253:	call   QWORD PTR [rip+0x1e91f]        # 0x14002fb78
   140011259:	mov    WORD PTR [rip+0x3077b],r13w        # 0x1400419dc
   140011261:	movzx  eax,WORD PTR [rip+0x2ef48]        # 0x1400401b0
   140011268:	mov    WORD PTR [rsp+0x30],ax
   14001126d:	mov    r15d,0x106
   140011273:	mov    rbx,QWORD PTR [rsp+0x40]
   140011278:	cmp    ax,WORD PTR [rbx+0x80]
   14001127f:	jge    0x140012118
   140011285:	xor    edi,edi
   140011287:	mov    ecx,0x1
   14001128c:	mov    WORD PTR [rip+0x2ef21],cx        # 0x1400401b4
   140011293:	mov    WORD PTR [rip+0x2ef3e],di        # 0x1400401d8
   14001129a:	movzx  r13d,di
   14001129e:	mov    WORD PTR [rsp+0x34],di
   1400112a3:	mov    WORD PTR [rip+0x2ce6e],ax        # 0x14003e118
   1400112aa:	movsx  edx,ax
   1400112ad:	movzx  eax,WORD PTR [rbx+0x82]
   1400112b4:	imul   edx,eax
   1400112b7:	add    edx,DWORD PTR [rbx+0x28]
   1400112ba:	mov    rcx,QWORD PTR [rip+0x2ef07]        # 0x1400401c8
   1400112c1:	xor    r9d,r9d
   1400112c4:	xor    r8d,r8d
   1400112c7:	mov    rcx,QWORD PTR [rcx]
   1400112ca:	call   QWORD PTR [rip+0x1df48]        # 0x14002f218
   1400112d0:	mov    ebx,eax
   1400112d2:	inc    eax
   1400112d4:	test   eax,0xfffffffe
   1400112d9:	jne    0x140011312
   1400112db:	call   QWORD PTR [rip+0x1de7f]        # 0x14002f160
   1400112e1:	cmp    eax,0x58
   1400112e4:	jae    0x1400112f8
   1400112e6:	mov    eax,eax
   1400112e8:	lea    rcx,[rip+0xfffffffffffeed11]        # 0x140000000
   1400112ef:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400112f6:	jmp    0x1400112fb
   1400112f8:	mov    ecx,r15d
   1400112fb:	mov    DWORD PTR [rip+0x31db7],ecx        # 0x1400430b8
   140011301:	mov    DWORD PTR [rip+0x321bd],0x2        # 0x1400434c8
   14001130b:	mov    BYTE PTR [rip+0x320ae],0x0        # 0x1400433c0
   140011312:	cmp    ebx,0xffffffff
   140011315:	je     0x140011234
   14001131b:	mov    rbx,QWORD PTR [rsp+0x40]
   140011320:	movzx  r8d,WORD PTR [rbx+0x82]
   140011328:	mov    rcx,QWORD PTR [rip+0x2ee99]        # 0x1400401c8
   14001132f:	mov    QWORD PTR [rsp+0x20],rdi
   140011334:	lea    r9,[rsp+0x4c]
   140011339:	mov    rdx,rsi
   14001133c:	mov    rcx,QWORD PTR [rcx]
   14001133f:	call   QWORD PTR [rip+0x1dec3]        # 0x14002f208
   140011345:	test   eax,eax
   140011347:	jne    0x140011380
   140011349:	call   QWORD PTR [rip+0x1de11]        # 0x14002f160
   14001134f:	cmp    eax,0x58
   140011352:	jae    0x140011366
   140011354:	mov    eax,eax
   140011356:	lea    rcx,[rip+0xfffffffffffeeca3]        # 0x140000000
   14001135d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140011364:	jmp    0x140011369
   140011366:	mov    ecx,r15d
   140011369:	mov    DWORD PTR [rip+0x31d49],ecx        # 0x1400430b8
   14001136f:	mov    DWORD PTR [rip+0x3214f],0x2        # 0x1400434c8
   140011379:	mov    BYTE PTR [rip+0x32040],0x0        # 0x1400433c0
   140011380:	movzx  eax,WORD PTR [rbx+0x82]
   140011387:	cmp    DWORD PTR [rsp+0x4c],eax
   14001138b:	jne    0x140011234
   140011391:	movzx  r15d,WORD PTR [rip+0x2ee3f]        # 0x1400401d8
   140011399:	add    eax,eax
   14001139b:	mov    DWORD PTR [rsp+0x58],eax
   14001139f:	movzx  r12d,WORD PTR [rip+0x2ee0d]        # 0x1400401b4
   1400113a7:	cmp    r12w,ax
   1400113ab:	jge    0x1400120da
   1400113b1:	mov    r9,QWORD PTR [rip+0x2cd58]        # 0x14003e110
   1400113b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400113c0:	movzx  eax,r12w
   1400113c4:	sar    ax,1
   1400113c7:	movsx  ecx,r12w
   1400113cb:	and    ecx,0x80000001
   1400113d1:	jge    0x1400113da
   1400113d3:	dec    ecx
   1400113d5:	or     ecx,0xfffffffe
   1400113d8:	inc    ecx
   1400113da:	movsx  rax,ax
   1400113de:	lea    r8,[rax+rsi*1]
   1400113e2:	movzx  edx,BYTE PTR [r8]
   1400113e6:	movzx  eax,dl
   1400113e9:	test   ecx,ecx
   1400113eb:	jne    0x1400113f2
   1400113ed:	shr    al,0x4
   1400113f0:	jmp    0x1400113f4
   1400113f2:	and    al,0xf
   1400113f4:	cmp    al,0xd
   1400113f6:	jae    0x14001203e
   1400113fc:	test   r13w,r13w
   140011400:	jne    0x140012044
   140011406:	test   al,al
   140011408:	jne    0x140012025
   14001140e:	movsx  rax,r15w
   140011412:	cmp    rax,0x100
   140011418:	jae    0x140012105
   14001141e:	mov    BYTE PTR [rbp+rax*1+0x1b0],r13b
   140011426:	mov    WORD PTR [rip+0x2ebda],r15w        # 0x140040008
   14001142e:	lea    r9,[rsp+0x34]
   140011433:	movzx  r8d,r12w
   140011437:	mov    rdx,QWORD PTR [rip+0x2ccc2]        # 0x14003e100
   14001143e:	mov    rcx,rbx
   140011441:	call   0x140006f70
   140011446:	lea    r12d,[rax+0x1]
   14001144a:	movzx  ecx,r12w
   14001144e:	sar    cx,1
   140011451:	movsx  eax,r12w
   140011455:	and    eax,0x80000001
   14001145a:	jge    0x140011463
   14001145c:	dec    eax
   14001145e:	or     eax,0xfffffffe
   140011461:	inc    eax
   140011463:	test   eax,eax
   140011465:	movsx  rax,cx
   140011469:	movzx  ecx,BYTE PTR [rax+rsi*1]
   14001146d:	jne    0x140011474
   14001146f:	shr    cl,0x4
   140011472:	jmp    0x140011477
   140011474:	and    cl,0xf
   140011477:	movzx  r15d,cl
   14001147b:	lea    eax,[r12+0x1]
   140011480:	mov    WORD PTR [rip+0x2ed2d],ax        # 0x1400401b4
   140011487:	mov    WORD PTR [rip+0x2ed49],r15w        # 0x1400401d8
   14001148f:	movzx  eax,WORD PTR [rsp+0x34]
   140011494:	mov    WORD PTR [rip+0x2ed1d],ax        # 0x1400401b8
   14001149b:	mov    rcx,rbx
   14001149e:	call   0x140006e60
   1400114a3:	cmp    ax,0x1
   1400114a7:	jne    0x140011234
   1400114ad:	lea    r8,[rbp+0x2b0]
   1400114b4:	lea    rdx,[rbp+0x1b0]
   1400114bb:	call   0x1400073e0
   1400114c0:	movzx  esi,WORD PTR [rip+0x2cafd]        # 0x14003dfc4
   1400114c7:	cmp    r14w,si
   1400114cb:	jge    0x140011744
   1400114d1:	mov    edi,DWORD PTR [rip+0x2eb2d]        # 0x140040004
   1400114d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400114e0:	movsx  rbx,r14w
   1400114e4:	shl    rbx,0x4
   1400114e8:	add    rbx,QWORD PTR [rip+0x2ecf9]        # 0x1400401e8
   1400114ef:	mov    rdx,QWORD PTR [rbx]
   1400114f2:	lea    rcx,[rbp+0x2b0]
   1400114f9:	call   0x140007550
   1400114fe:	movzx  ecx,ax
   140011501:	test   ax,ax
   140011504:	js     0x14001171c
   14001150a:	movzx  r9d,WORD PTR [rbx+0x8]
   14001150f:	mov    WORD PTR [rip+0x2ede3],r9w        # 0x1400402fa
   140011517:	mov    r8d,0x3fff
   14001151d:	mov    DWORD PTR [rip+0x2edd8],r8d        # 0x1400402fc
   140011524:	xor    edx,edx
   140011526:	movzx  eax,WORD PTR [rbx+0xa]
   14001152a:	mov    WORD PTR [rip+0x2edcf],ax        # 0x140040300
   140011531:	mov    WORD PTR [rip+0x2edca],dx        # 0x140040302
   140011538:	test   cx,cx
   14001153b:	jle    0x1400115c1
   140011541:	mov    WORD PTR [rsp+0x20],ax
   140011546:	lea    rdx,[rbp+0xe0]
   14001154d:	mov    rcx,QWORD PTR [rbx]
   140011550:	call   0x14000ab90
   140011555:	lea    rax,[rbp+0xe0]
   14001155c:	xor    ecx,ecx
   14001155e:	mov    r8d,ecx
   140011561:	cmp    BYTE PTR [rax],cl
   140011563:	jne    0x14001156a
   140011565:	cmp    BYTE PTR [rax+0x1],cl
   140011568:	je     0x140011573
   14001156a:	add    rax,0x2
   14001156e:	inc    r8d
   140011571:	jmp    0x140011561
   140011573:	inc    r8w
   140011577:	add    r8w,r8w
   14001157b:	mov    WORD PTR [rip+0x2d8d1],r8w        # 0x14003ee54
   140011583:	lea    rcx,[rbp+0xe0]
   14001158a:	mov    edx,edi
   14001158c:	add    rdx,QWORD PTR [rsp+0x50]
   140011591:	movzx  eax,BYTE PTR [rcx]
   140011594:	test   al,al
   140011596:	jne    0x14001159d
   140011598:	cmp    BYTE PTR [rcx+0x1],al
   14001159b:	je     0x1400115b0
   14001159d:	mov    BYTE PTR [rdx],al
   14001159f:	movzx  eax,BYTE PTR [rcx+0x1]
   1400115a3:	mov    BYTE PTR [rdx+0x1],al
   1400115a6:	add    rdx,0x2
   1400115aa:	add    rcx,0x2
   1400115ae:	jmp    0x140011591
   1400115b0:	movzx  eax,BYTE PTR [rcx]
   1400115b3:	mov    BYTE PTR [rdx],al
   1400115b5:	movzx  eax,BYTE PTR [rcx+0x1]
   1400115b9:	mov    BYTE PTR [rdx+0x1],al
   1400115bc:	jmp    0x14001167b
   1400115c1:	cmp    r9w,WORD PTR [rip+0x2ed27]        # 0x1400402f0
   1400115c9:	jne    0x1400115fc
   1400115cb:	cmp    ax,WORD PTR [rip+0x2ed24]        # 0x1400402f6
   1400115d2:	jne    0x1400115fc
   1400115d4:	cmp    r8w,WORD PTR [rip+0x2ed16]        # 0x1400402f2
   1400115dc:	jne    0x1400115fc
   1400115de:	cmp    dx,WORD PTR [rip+0x2ed0f]        # 0x1400402f4
   1400115e5:	jne    0x1400115fc
   1400115e7:	mov    eax,0x1
   1400115ec:	mov    WORD PTR [rip+0x303e9],ax        # 0x1400419dc
   1400115f3:	mov    DWORD PTR [rsp+0x38],eax
   1400115f7:	jmp    0x140011687
   1400115fc:	mov    WORD PTR [rsp+0x20],ax
   140011601:	lea    rdx,[rbp+0xe0]
   140011608:	mov    rcx,QWORD PTR [rbx]
   14001160b:	call   0x14000ab90
   140011610:	lea    rax,[rbp+0xe0]
   140011617:	xor    ecx,ecx
   140011619:	mov    r8d,ecx
   14001161c:	nop    DWORD PTR [rax+0x0]
   140011620:	cmp    BYTE PTR [rax],cl
   140011622:	jne    0x140011629
   140011624:	cmp    BYTE PTR [rax+0x1],cl
   140011627:	je     0x140011632
   140011629:	add    rax,0x2
   14001162d:	inc    r8d
   140011630:	jmp    0x140011620
   140011632:	inc    r8w
   140011636:	add    r8w,r8w
   14001163a:	mov    WORD PTR [rip+0x2d812],r8w        # 0x14003ee54
   140011642:	lea    rax,[rbp+0xe0]
   140011649:	mov    edx,edi
   14001164b:	add    rdx,QWORD PTR [rsp+0x50]
   140011650:	movzx  ecx,BYTE PTR [rax]
   140011653:	test   cl,cl
   140011655:	jne    0x14001165c
   140011657:	cmp    BYTE PTR [rax+0x1],cl
   14001165a:	je     0x14001166f
   14001165c:	mov    BYTE PTR [rdx],cl
   14001165e:	movzx  ecx,BYTE PTR [rax+0x1]
   140011662:	mov    BYTE PTR [rdx+0x1],cl
   140011665:	add    rdx,0x2
   140011669:	add    rax,0x2
   14001166d:	jmp    0x140011650
   14001166f:	movzx  ecx,BYTE PTR [rax]
   140011672:	mov    BYTE PTR [rdx],cl
   140011674:	movzx  ecx,BYTE PTR [rax+0x1]
   140011678:	mov    BYTE PTR [rdx+0x1],cl
   14001167b:	movsx  eax,r8w
   14001167f:	add    edi,eax
   140011681:	mov    DWORD PTR [rip+0x2e97d],edi        # 0x140040004
   140011687:	inc    r14w
   14001168b:	movsx  eax,r14w
   14001168f:	imul   eax,eax,0x64
   140011692:	cdq    
   140011693:	movsx  ecx,si
   140011696:	idiv   ecx
   140011698:	mov    r8d,eax
   14001169b:	mov    WORD PTR [rip+0x2d7ba],ax        # 0x14003ee5c
   1400116a2:	movzx  edx,ax
   1400116a5:	movzx  eax,WORD PTR [rip+0x2d798]        # 0x14003ee44
   1400116ac:	mov    ecx,edx
   1400116ae:	sub    ecx,eax
   1400116b0:	cmp    ecx,0x1
   1400116b3:	jl     0x140011712
   1400116b5:	movzx  ecx,WORD PTR [rip+0x2d7a4]        # 0x14003ee60
   1400116bc:	mov    eax,0x51eb851f
   1400116c1:	imul   ecx,edx
   1400116c4:	imul   ecx
   1400116c6:	mov    ecx,edx
   1400116c8:	sar    ecx,0x5
   1400116cb:	mov    eax,ecx
   1400116cd:	shr    eax,0x1f
   1400116d0:	add    ecx,eax
   1400116d2:	add    cx,WORD PTR [rip+0x2d76f]        # 0x14003ee48
   1400116d9:	inc    WORD PTR [rip+0x2d764]        # 0x14003ee44
   1400116e0:	mov    WORD PTR [rip+0x2cabc],r8w        # 0x14003e1a4
   1400116e8:	mov    WORD PTR [rip+0x2d761],cx        # 0x14003ee50
   1400116ef:	lea    rdx,[rip+0x2caba]        # 0x14003e1b0
   1400116f6:	call   QWORD PTR [rip+0x303ac]        # 0x140041aa8
   1400116fc:	test   ax,ax
   1400116ff:	jne    0x1400120fb
   140011705:	mov    edi,DWORD PTR [rip+0x2e8f9]        # 0x140040004
   14001170b:	movzx  esi,WORD PTR [rip+0x2c8b2]        # 0x14003dfc4
   140011712:	cmp    r14w,si
   140011716:	jl     0x1400114e0
   14001171c:	mov    eax,DWORD PTR [rsp+0x38]
   140011720:	test   ax,ax
   140011723:	je     0x140011744
   140011725:	xor    edi,edi
   140011727:	movzx  eax,di
   14001172a:	mov    DWORD PTR [rsp+0x38],eax
   14001172e:	mov    r9,QWORD PTR [rip+0x2c9db]        # 0x14003e110
   140011735:	mov    rsi,QWORD PTR [rsp+0x68]
   14001173a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001173f:	jmp    0x1400120b8
   140011744:	lea    rcx,[rbp+0x2b0]
   14001174b:	lea    rdx,[rbp-0x20]
   14001174f:	nop
   140011750:	movzx  eax,BYTE PTR [rcx]
   140011753:	test   al,al
   140011755:	jne    0x14001175c
   140011757:	cmp    BYTE PTR [rcx+0x1],al
   14001175a:	je     0x14001176f
   14001175c:	mov    BYTE PTR [rdx],al
   14001175e:	movzx  eax,BYTE PTR [rcx+0x1]
   140011762:	mov    BYTE PTR [rdx+0x1],al
   140011765:	add    rdx,0x2
   140011769:	add    rcx,0x2
   14001176d:	jmp    0x140011750
   14001176f:	movzx  eax,BYTE PTR [rcx]
   140011772:	mov    BYTE PTR [rdx],al
   140011774:	movzx  eax,BYTE PTR [rcx+0x1]
   140011778:	mov    BYTE PTR [rdx+0x1],al
   14001177b:	lea    r11,[rip+0x2a9c2]        # 0x14003c144
   140011782:	mov    rdx,r11
   140011785:	lea    rcx,[rbp-0x20]
   140011789:	nop    DWORD PTR [rax+0x0]
   140011790:	cmp    BYTE PTR [rcx],0x0
   140011793:	jne    0x14001179b
   140011795:	cmp    BYTE PTR [rcx+0x1],0x0
   140011799:	je     0x1400117a1
   14001179b:	add    rcx,0x2
   14001179f:	jmp    0x140011790
   1400117a1:	movzx  eax,BYTE PTR [rdx]
   1400117a4:	test   al,al
   1400117a6:	jne    0x1400117ad
   1400117a8:	cmp    BYTE PTR [rdx+0x1],al
   1400117ab:	je     0x1400117c0
   1400117ad:	mov    BYTE PTR [rcx],al
   1400117af:	movzx  eax,BYTE PTR [rdx+0x1]
   1400117b3:	mov    BYTE PTR [rcx+0x1],al
   1400117b6:	add    rcx,0x2
   1400117ba:	add    rdx,0x2
   1400117be:	jmp    0x1400117a1
   1400117c0:	mov    WORD PTR [rcx],0x0
   1400117c5:	movzx  edx,WORD PTR [rip+0x2eb24]        # 0x1400402f0
   1400117cc:	xor    esi,esi
   1400117ce:	movzx  r8d,si
   1400117d2:	nop    DWORD PTR [rax+0x0]
   1400117d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400117e0:	movzx  ecx,dx
   1400117e3:	mov    eax,0x66666667
   1400117e8:	imul   ecx
   1400117ea:	sar    edx,0x2
   1400117ed:	mov    eax,edx
   1400117ef:	shr    eax,0x1f
   1400117f2:	add    edx,eax
   1400117f4:	lea    eax,[rdx+rdx*4]
   1400117f7:	add    eax,eax
   1400117f9:	sub    ecx,eax
   1400117fb:	add    cl,0x30
   1400117fe:	movsx  rax,r8w
   140011802:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140011806:	inc    r8w
   14001180a:	test   dx,dx
   14001180d:	jne    0x1400117e0
   14001180f:	movsx  rax,r8w
   140011813:	mov    BYTE PTR [rsp+rax*1+0x78],sil
   140011818:	movzx  r10d,si
   14001181c:	mov    r9d,esi
   14001181f:	lea    rcx,[rsp+0x78]
   140011824:	movzx  eax,BYTE PTR [rsp+0x78]
   140011829:	test   al,al
   14001182b:	je     0x14001183b
   14001182d:	nop    DWORD PTR [rax]
   140011830:	inc    rcx
   140011833:	inc    r9d
   140011836:	cmp    BYTE PTR [rcx],sil
   140011839:	jne    0x140011830
   14001183b:	dec    r9w
   14001183f:	cmp    si,r9w
   140011843:	jge    0x140011887
   140011845:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011850:	movsx  rax,r10w
   140011854:	lea    rdx,[rsp+0x78]
   140011859:	add    rdx,rax
   14001185c:	movzx  r8d,BYTE PTR [rdx]
   140011860:	movsx  rax,r9w
   140011864:	lea    rcx,[rsp+0x78]
   140011869:	add    rcx,rax
   14001186c:	movzx  eax,BYTE PTR [rcx]
   14001186f:	mov    BYTE PTR [rdx],al
   140011871:	mov    BYTE PTR [rcx],r8b
   140011874:	inc    r10w
   140011878:	dec    r9w
   14001187c:	cmp    r10w,r9w
   140011880:	jl     0x140011850
   140011882:	movzx  eax,BYTE PTR [rsp+0x78]
   140011887:	lea    rdx,[rbp-0x70]
   14001188b:	lea    r8,[rsp+0x78]
   140011890:	test   al,al
   140011892:	je     0x1400118d3
   140011894:	lea    rsi,[rip+0xfffffffffffee765]        # 0x140000000
   14001189b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400118a0:	cmp    al,0x7f
   1400118a2:	ja     0x1400118a9
   1400118a4:	movzx  ecx,al
   1400118a7:	jmp    0x1400118bf
   1400118a9:	cmp    al,0xfe
   1400118ab:	ja     0x1400118ba
   1400118ad:	movzx  eax,al
   1400118b0:	movzx  ecx,WORD PTR [rsi+rax*2+0x30350]
   1400118b8:	jmp    0x1400118bf
   1400118ba:	mov    ecx,0x20
   1400118bf:	mov    WORD PTR [rdx],cx
   1400118c2:	add    rdx,0x2
   1400118c6:	inc    r8
   1400118c9:	movzx  eax,BYTE PTR [r8]
   1400118cd:	test   al,al
   1400118cf:	jne    0x1400118a0
   1400118d1:	xor    esi,esi
   1400118d3:	mov    WORD PTR [rdx],si
   1400118d6:	lea    rdx,[rbp-0x70]
   1400118da:	lea    rcx,[rbp-0x20]
   1400118de:	xchg   ax,ax
   1400118e0:	cmp    BYTE PTR [rcx],0x0
   1400118e3:	jne    0x1400118eb
   1400118e5:	cmp    BYTE PTR [rcx+0x1],0x0
   1400118e9:	je     0x1400118f1
   1400118eb:	add    rcx,0x2
   1400118ef:	jmp    0x1400118e0
   1400118f1:	movzx  eax,BYTE PTR [rdx]
   1400118f4:	test   al,al
   1400118f6:	jne    0x1400118fd
   1400118f8:	cmp    BYTE PTR [rdx+0x1],al
   1400118fb:	je     0x140011910
   1400118fd:	mov    BYTE PTR [rcx],al
   1400118ff:	movzx  eax,BYTE PTR [rdx+0x1]
   140011903:	mov    BYTE PTR [rcx+0x1],al
   140011906:	add    rcx,0x2
   14001190a:	add    rdx,0x2
   14001190e:	jmp    0x1400118f1
   140011910:	mov    WORD PTR [rcx],0x0
   140011915:	mov    rdx,r11
   140011918:	lea    rcx,[rbp-0x20]
   14001191c:	nop    DWORD PTR [rax+0x0]
   140011920:	cmp    BYTE PTR [rcx],0x0
   140011923:	jne    0x14001192b
   140011925:	cmp    BYTE PTR [rcx+0x1],0x0
   140011929:	je     0x140011931
   14001192b:	add    rcx,0x2
   14001192f:	jmp    0x140011920
   140011931:	movzx  eax,BYTE PTR [rdx]
   140011934:	test   al,al
   140011936:	jne    0x14001193d
   140011938:	cmp    BYTE PTR [rdx+0x1],al
   14001193b:	je     0x140011950
   14001193d:	mov    BYTE PTR [rcx],al
   14001193f:	movzx  eax,BYTE PTR [rdx+0x1]
   140011943:	mov    BYTE PTR [rcx+0x1],al
   140011946:	add    rcx,0x2
   14001194a:	add    rdx,0x2
   14001194e:	jmp    0x140011931
   140011950:	mov    WORD PTR [rcx],0x0
   140011955:	movzx  edx,WORD PTR [rip+0x2e996]        # 0x1400402f2
   14001195c:	movzx  r8d,si
   140011960:	movzx  ecx,dx
   140011963:	mov    eax,0x66666667
   140011968:	imul   ecx
   14001196a:	sar    edx,0x2
   14001196d:	mov    eax,edx
   14001196f:	shr    eax,0x1f
   140011972:	add    edx,eax
   140011974:	lea    eax,[rdx+rdx*4]
   140011977:	add    eax,eax
   140011979:	sub    ecx,eax
   14001197b:	add    cl,0x30
   14001197e:	movsx  rax,r8w
   140011982:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140011986:	inc    r8w
   14001198a:	test   dx,dx
   14001198d:	jne    0x140011960
   14001198f:	movsx  rax,r8w
   140011993:	mov    BYTE PTR [rsp+rax*1+0x78],dl
   140011997:	movzx  r10d,si
   14001199b:	mov    r9d,esi
   14001199e:	lea    rcx,[rsp+0x78]
   1400119a3:	movzx  eax,BYTE PTR [rsp+0x78]
   1400119a8:	test   al,al
   1400119aa:	je     0x1400119bb
   1400119ac:	nop    DWORD PTR [rax+0x0]
   1400119b0:	inc    rcx
   1400119b3:	inc    r9d
   1400119b6:	cmp    BYTE PTR [rcx],0x0
   1400119b9:	jne    0x1400119b0
   1400119bb:	dec    r9w
   1400119bf:	cmp    si,r9w
   1400119c3:	jge    0x140011a07
   1400119c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400119d0:	movsx  rax,r10w
   1400119d4:	lea    rdx,[rsp+0x78]
   1400119d9:	add    rdx,rax
   1400119dc:	movzx  r8d,BYTE PTR [rdx]
   1400119e0:	movsx  rax,r9w
   1400119e4:	lea    rcx,[rsp+0x78]
   1400119e9:	add    rcx,rax
   1400119ec:	movzx  eax,BYTE PTR [rcx]
   1400119ef:	mov    BYTE PTR [rdx],al
   1400119f1:	mov    BYTE PTR [rcx],r8b
   1400119f4:	inc    r10w
   1400119f8:	dec    r9w
   1400119fc:	cmp    r10w,r9w
   140011a00:	jl     0x1400119d0
   140011a02:	movzx  eax,BYTE PTR [rsp+0x78]
   140011a07:	lea    rdx,[rbp-0x70]
   140011a0b:	lea    r8,[rsp+0x78]
   140011a10:	test   al,al
   140011a12:	je     0x140011a53
   140011a14:	lea    rsi,[rip+0xfffffffffffee5e5]        # 0x140000000
   140011a1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011a20:	cmp    al,0x7f
   140011a22:	ja     0x140011a29
   140011a24:	movzx  ecx,al
   140011a27:	jmp    0x140011a3f
   140011a29:	cmp    al,0xfe
   140011a2b:	ja     0x140011a3a
   140011a2d:	movzx  eax,al
   140011a30:	movzx  ecx,WORD PTR [rsi+rax*2+0x30350]
   140011a38:	jmp    0x140011a3f
   140011a3a:	mov    ecx,0x20
   140011a3f:	mov    WORD PTR [rdx],cx
   140011a42:	add    rdx,0x2
   140011a46:	inc    r8
   140011a49:	movzx  eax,BYTE PTR [r8]
   140011a4d:	test   al,al
   140011a4f:	jne    0x140011a20
   140011a51:	xor    esi,esi
   140011a53:	mov    WORD PTR [rdx],si
   140011a56:	lea    rdx,[rbp-0x70]
   140011a5a:	lea    rcx,[rbp-0x20]
   140011a5e:	xchg   ax,ax
   140011a60:	cmp    BYTE PTR [rcx],0x0
   140011a63:	jne    0x140011a6b
   140011a65:	cmp    BYTE PTR [rcx+0x1],0x0
   140011a69:	je     0x140011a71
   140011a6b:	add    rcx,0x2
   140011a6f:	jmp    0x140011a60
   140011a71:	movzx  eax,BYTE PTR [rdx]
   140011a74:	test   al,al
   140011a76:	jne    0x140011a7d
   140011a78:	cmp    BYTE PTR [rdx+0x1],al
   140011a7b:	je     0x140011a90
   140011a7d:	mov    BYTE PTR [rcx],al
   140011a7f:	movzx  eax,BYTE PTR [rdx+0x1]
   140011a83:	mov    BYTE PTR [rcx+0x1],al
   140011a86:	add    rcx,0x2
   140011a8a:	add    rdx,0x2
   140011a8e:	jmp    0x140011a71
   140011a90:	mov    WORD PTR [rcx],0x0
   140011a95:	mov    rdx,r11
   140011a98:	lea    rcx,[rbp-0x20]
   140011a9c:	nop    DWORD PTR [rax+0x0]
   140011aa0:	cmp    BYTE PTR [rcx],0x0
   140011aa3:	jne    0x140011aab
   140011aa5:	cmp    BYTE PTR [rcx+0x1],0x0
   140011aa9:	je     0x140011ab1
   140011aab:	add    rcx,0x2
   140011aaf:	jmp    0x140011aa0
   140011ab1:	movzx  eax,BYTE PTR [rdx]
   140011ab4:	test   al,al
   140011ab6:	jne    0x140011abd
   140011ab8:	cmp    BYTE PTR [rdx+0x1],al
   140011abb:	je     0x140011ad0
   140011abd:	mov    BYTE PTR [rcx],al
   140011abf:	movzx  eax,BYTE PTR [rdx+0x1]
   140011ac3:	mov    BYTE PTR [rcx+0x1],al
   140011ac6:	add    rcx,0x2
   140011aca:	add    rdx,0x2
   140011ace:	jmp    0x140011ab1
   140011ad0:	mov    WORD PTR [rcx],0x0
   140011ad5:	movzx  edx,WORD PTR [rip+0x2e818]        # 0x1400402f4
   140011adc:	movzx  r8d,si
   140011ae0:	movzx  ecx,dx
   140011ae3:	mov    eax,0x66666667
   140011ae8:	imul   ecx
   140011aea:	sar    edx,0x2
   140011aed:	mov    eax,edx
   140011aef:	shr    eax,0x1f
   140011af2:	add    edx,eax
   140011af4:	lea    eax,[rdx+rdx*4]
   140011af7:	add    eax,eax
   140011af9:	sub    ecx,eax
   140011afb:	add    cl,0x30
   140011afe:	movsx  rax,r8w
   140011b02:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140011b06:	inc    r8w
   140011b0a:	test   dx,dx
   140011b0d:	jne    0x140011ae0
   140011b0f:	movsx  rax,r8w
   140011b13:	mov    BYTE PTR [rsp+rax*1+0x78],dl
   140011b17:	movzx  r10d,si
   140011b1b:	mov    r9d,esi
   140011b1e:	lea    rcx,[rsp+0x78]
   140011b23:	movzx  eax,BYTE PTR [rsp+0x78]
   140011b28:	test   al,al
   140011b2a:	je     0x140011b3b
   140011b2c:	nop    DWORD PTR [rax+0x0]
   140011b30:	inc    rcx
   140011b33:	inc    r9d
   140011b36:	cmp    BYTE PTR [rcx],0x0
   140011b39:	jne    0x140011b30
   140011b3b:	dec    r9w
   140011b3f:	cmp    si,r9w
   140011b43:	jge    0x140011b87
   140011b45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011b50:	movsx  rax,r10w
   140011b54:	lea    rdx,[rsp+0x78]
   140011b59:	add    rdx,rax
   140011b5c:	movzx  r8d,BYTE PTR [rdx]
   140011b60:	movsx  rax,r9w
   140011b64:	lea    rcx,[rsp+0x78]
   140011b69:	add    rcx,rax
   140011b6c:	movzx  eax,BYTE PTR [rcx]
   140011b6f:	mov    BYTE PTR [rdx],al
   140011b71:	mov    BYTE PTR [rcx],r8b
   140011b74:	inc    r10w
   140011b78:	dec    r9w
   140011b7c:	cmp    r10w,r9w
   140011b80:	jl     0x140011b50
   140011b82:	movzx  eax,BYTE PTR [rsp+0x78]
   140011b87:	lea    rdx,[rbp-0x70]
   140011b8b:	lea    r8,[rsp+0x78]
   140011b90:	test   al,al
   140011b92:	je     0x140011bd3
   140011b94:	lea    rsi,[rip+0xfffffffffffee465]        # 0x140000000
   140011b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011ba0:	cmp    al,0x7f
   140011ba2:	ja     0x140011ba9
   140011ba4:	movzx  ecx,al
   140011ba7:	jmp    0x140011bbf
   140011ba9:	cmp    al,0xfe
   140011bab:	ja     0x140011bba
   140011bad:	movzx  eax,al
   140011bb0:	movzx  ecx,WORD PTR [rsi+rax*2+0x30350]
   140011bb8:	jmp    0x140011bbf
   140011bba:	mov    ecx,0x20
   140011bbf:	mov    WORD PTR [rdx],cx
   140011bc2:	add    rdx,0x2
   140011bc6:	inc    r8
   140011bc9:	movzx  eax,BYTE PTR [r8]
   140011bcd:	test   al,al
   140011bcf:	jne    0x140011ba0
   140011bd1:	xor    esi,esi
   140011bd3:	mov    WORD PTR [rdx],si
   140011bd6:	lea    rdx,[rbp-0x70]
   140011bda:	lea    rcx,[rbp-0x20]
   140011bde:	xchg   ax,ax
   140011be0:	cmp    BYTE PTR [rcx],0x0
   140011be3:	jne    0x140011beb
   140011be5:	cmp    BYTE PTR [rcx+0x1],0x0
   140011be9:	je     0x140011bf1
   140011beb:	add    rcx,0x2
   140011bef:	jmp    0x140011be0
   140011bf1:	movzx  eax,BYTE PTR [rdx]
   140011bf4:	test   al,al
   140011bf6:	jne    0x140011bfd
   140011bf8:	cmp    BYTE PTR [rdx+0x1],al
   140011bfb:	je     0x140011c10
   140011bfd:	mov    BYTE PTR [rcx],al
   140011bff:	movzx  eax,BYTE PTR [rdx+0x1]
   140011c03:	mov    BYTE PTR [rcx+0x1],al
   140011c06:	add    rcx,0x2
   140011c0a:	add    rdx,0x2
   140011c0e:	jmp    0x140011bf1
   140011c10:	mov    WORD PTR [rcx],0x0
   140011c15:	mov    rdx,r11
   140011c18:	lea    rcx,[rbp-0x20]
   140011c1c:	nop    DWORD PTR [rax+0x0]
   140011c20:	cmp    BYTE PTR [rcx],0x0
   140011c23:	jne    0x140011c2b
   140011c25:	cmp    BYTE PTR [rcx+0x1],0x0
   140011c29:	je     0x140011c31
   140011c2b:	add    rcx,0x2
   140011c2f:	jmp    0x140011c20
   140011c31:	movzx  eax,BYTE PTR [rdx]
   140011c34:	test   al,al
   140011c36:	jne    0x140011c3d
   140011c38:	cmp    BYTE PTR [rdx+0x1],al
   140011c3b:	je     0x140011c50
   140011c3d:	mov    BYTE PTR [rcx],al
   140011c3f:	movzx  eax,BYTE PTR [rdx+0x1]
   140011c43:	mov    BYTE PTR [rcx+0x1],al
   140011c46:	add    rcx,0x2
   140011c4a:	add    rdx,0x2
   140011c4e:	jmp    0x140011c31
   140011c50:	mov    WORD PTR [rcx],0x0
   140011c55:	movzx  edx,WORD PTR [rip+0x2e69a]        # 0x1400402f6
   140011c5c:	movzx  r8d,si
   140011c60:	movzx  ecx,dx
   140011c63:	mov    eax,0x66666667
   140011c68:	imul   ecx
   140011c6a:	sar    edx,0x2
   140011c6d:	mov    eax,edx
   140011c6f:	shr    eax,0x1f
   140011c72:	add    edx,eax
   140011c74:	lea    eax,[rdx+rdx*4]
   140011c77:	add    eax,eax
   140011c79:	sub    ecx,eax
   140011c7b:	add    cl,0x30
   140011c7e:	movsx  rax,r8w
   140011c82:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140011c86:	inc    r8w
   140011c8a:	test   dx,dx
   140011c8d:	jne    0x140011c60
   140011c8f:	movsx  rax,r8w
   140011c93:	mov    BYTE PTR [rsp+rax*1+0x78],dl
   140011c97:	movzx  r10d,si
   140011c9b:	mov    r9d,esi
   140011c9e:	lea    rcx,[rsp+0x78]
   140011ca3:	movzx  eax,BYTE PTR [rsp+0x78]
   140011ca8:	test   al,al
   140011caa:	je     0x140011cbb
   140011cac:	nop    DWORD PTR [rax+0x0]
   140011cb0:	inc    rcx
   140011cb3:	inc    r9d
   140011cb6:	cmp    BYTE PTR [rcx],0x0
   140011cb9:	jne    0x140011cb0
   140011cbb:	dec    r9w
   140011cbf:	cmp    si,r9w
   140011cc3:	jge    0x140011d07
   140011cc5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011cd0:	movsx  rax,r10w
   140011cd4:	lea    rdx,[rsp+0x78]
   140011cd9:	add    rdx,rax
   140011cdc:	movzx  r8d,BYTE PTR [rdx]
   140011ce0:	movsx  rax,r9w
   140011ce4:	lea    rcx,[rsp+0x78]
   140011ce9:	add    rcx,rax
   140011cec:	movzx  eax,BYTE PTR [rcx]
   140011cef:	mov    BYTE PTR [rdx],al
   140011cf1:	mov    BYTE PTR [rcx],r8b
   140011cf4:	inc    r10w
   140011cf8:	dec    r9w
   140011cfc:	cmp    r10w,r9w
   140011d00:	jl     0x140011cd0
   140011d02:	movzx  eax,BYTE PTR [rsp+0x78]
   140011d07:	lea    rdx,[rbp-0x70]
   140011d0b:	lea    r8,[rsp+0x78]
   140011d10:	test   al,al
   140011d12:	je     0x140011d53
   140011d14:	lea    rsi,[rip+0xfffffffffffee2e5]        # 0x140000000
   140011d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011d20:	cmp    al,0x7f
   140011d22:	ja     0x140011d29
   140011d24:	movzx  ecx,al
   140011d27:	jmp    0x140011d3f
   140011d29:	cmp    al,0xfe
   140011d2b:	ja     0x140011d3a
   140011d2d:	movzx  eax,al
   140011d30:	movzx  ecx,WORD PTR [rsi+rax*2+0x30350]
   140011d38:	jmp    0x140011d3f
   140011d3a:	mov    ecx,0x20
   140011d3f:	mov    WORD PTR [rdx],cx
   140011d42:	add    rdx,0x2
   140011d46:	inc    r8
   140011d49:	movzx  eax,BYTE PTR [r8]
   140011d4d:	test   al,al
   140011d4f:	jne    0x140011d20
   140011d51:	xor    esi,esi
   140011d53:	mov    WORD PTR [rdx],si
   140011d56:	lea    rdx,[rbp-0x70]
   140011d5a:	lea    rcx,[rbp-0x20]
   140011d5e:	xchg   ax,ax
   140011d60:	cmp    BYTE PTR [rcx],0x0
   140011d63:	jne    0x140011d6b
   140011d65:	cmp    BYTE PTR [rcx+0x1],0x0
   140011d69:	je     0x140011d71
   140011d6b:	add    rcx,0x2
   140011d6f:	jmp    0x140011d60
   140011d71:	movzx  eax,BYTE PTR [rdx]
   140011d74:	test   al,al
   140011d76:	jne    0x140011d7d
   140011d78:	cmp    BYTE PTR [rdx+0x1],al
   140011d7b:	je     0x140011d90
   140011d7d:	mov    BYTE PTR [rcx],al
   140011d7f:	movzx  eax,BYTE PTR [rdx+0x1]
   140011d83:	mov    BYTE PTR [rcx+0x1],al
   140011d86:	add    rcx,0x2
   140011d8a:	add    rdx,0x2
   140011d8e:	jmp    0x140011d71
   140011d90:	mov    WORD PTR [rcx],0x0
   140011d95:	mov    rdx,r11
   140011d98:	lea    rcx,[rbp-0x20]
   140011d9c:	nop    DWORD PTR [rax+0x0]
   140011da0:	cmp    BYTE PTR [rcx],0x0
   140011da3:	jne    0x140011dab
   140011da5:	cmp    BYTE PTR [rcx+0x1],0x0
   140011da9:	je     0x140011db1
   140011dab:	add    rcx,0x2
   140011daf:	jmp    0x140011da0
   140011db1:	movzx  eax,BYTE PTR [rdx]
   140011db4:	test   al,al
   140011db6:	jne    0x140011dbd
   140011db8:	cmp    BYTE PTR [rdx+0x1],al
   140011dbb:	je     0x140011dd0
   140011dbd:	mov    BYTE PTR [rcx],al
   140011dbf:	movzx  eax,BYTE PTR [rdx+0x1]
   140011dc3:	mov    BYTE PTR [rcx+0x1],al
   140011dc6:	add    rcx,0x2
   140011dca:	add    rdx,0x2
   140011dce:	jmp    0x140011db1
   140011dd0:	mov    WORD PTR [rcx],0x0
   140011dd5:	movzx  edx,WORD PTR [rip+0x2e51c]        # 0x1400402f8
   140011ddc:	movzx  r8d,si
   140011de0:	movzx  ecx,dx
   140011de3:	mov    eax,0x66666667
   140011de8:	imul   ecx
   140011dea:	sar    edx,0x2
   140011ded:	mov    eax,edx
   140011def:	shr    eax,0x1f
   140011df2:	add    edx,eax
   140011df4:	lea    eax,[rdx+rdx*4]
   140011df7:	add    eax,eax
   140011df9:	sub    ecx,eax
   140011dfb:	add    cl,0x30
   140011dfe:	movsx  rax,r8w
   140011e02:	mov    BYTE PTR [rsp+rax*1+0x78],cl
   140011e06:	inc    r8w
   140011e0a:	test   dx,dx
   140011e0d:	jne    0x140011de0
   140011e0f:	movsx  rax,r8w
   140011e13:	mov    BYTE PTR [rsp+rax*1+0x78],dl
   140011e17:	movzx  r10d,si
   140011e1b:	mov    r9d,esi
   140011e1e:	lea    rcx,[rsp+0x78]
   140011e23:	movzx  eax,BYTE PTR [rsp+0x78]
   140011e28:	test   al,al
   140011e2a:	je     0x140011e3b
   140011e2c:	nop    DWORD PTR [rax+0x0]
   140011e30:	inc    rcx
   140011e33:	inc    r9d
   140011e36:	cmp    BYTE PTR [rcx],0x0
   140011e39:	jne    0x140011e30
   140011e3b:	dec    r9w
   140011e3f:	cmp    si,r9w
   140011e43:	jge    0x140011e87
   140011e45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011e50:	movsx  rax,r10w
   140011e54:	lea    rdx,[rsp+0x78]
   140011e59:	add    rdx,rax
   140011e5c:	movzx  r8d,BYTE PTR [rdx]
   140011e60:	movsx  rax,r9w
   140011e64:	lea    rcx,[rsp+0x78]
   140011e69:	add    rcx,rax
   140011e6c:	movzx  eax,BYTE PTR [rcx]
   140011e6f:	mov    BYTE PTR [rdx],al
   140011e71:	mov    BYTE PTR [rcx],r8b
   140011e74:	inc    r10w
   140011e78:	dec    r9w
   140011e7c:	cmp    r10w,r9w
   140011e80:	jl     0x140011e50
   140011e82:	movzx  eax,BYTE PTR [rsp+0x78]
   140011e87:	lea    rdx,[rbp-0x70]
   140011e8b:	lea    r8,[rsp+0x78]
   140011e90:	test   al,al
   140011e92:	je     0x140011ed3
   140011e94:	lea    rsi,[rip+0xfffffffffffee165]        # 0x140000000
   140011e9b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011ea0:	cmp    al,0x7f
   140011ea2:	ja     0x140011ea9
   140011ea4:	movzx  ecx,al
   140011ea7:	jmp    0x140011ebf
   140011ea9:	cmp    al,0xfe
   140011eab:	ja     0x140011eba
   140011ead:	movzx  eax,al
   140011eb0:	movzx  ecx,WORD PTR [rsi+rax*2+0x30350]
   140011eb8:	jmp    0x140011ebf
   140011eba:	mov    ecx,0x20
   140011ebf:	mov    WORD PTR [rdx],cx
   140011ec2:	add    rdx,0x2
   140011ec6:	inc    r8
   140011ec9:	movzx  eax,BYTE PTR [r8]
   140011ecd:	test   al,al
   140011ecf:	jne    0x140011ea0
   140011ed1:	xor    esi,esi
   140011ed3:	mov    WORD PTR [rdx],si
   140011ed6:	lea    rdx,[rbp-0x70]
   140011eda:	lea    rcx,[rbp-0x20]
   140011ede:	xchg   ax,ax
   140011ee0:	cmp    BYTE PTR [rcx],0x0
   140011ee3:	jne    0x140011eeb
   140011ee5:	cmp    BYTE PTR [rcx+0x1],0x0
   140011ee9:	je     0x140011ef1
   140011eeb:	add    rcx,0x2
   140011eef:	jmp    0x140011ee0
   140011ef1:	movzx  eax,BYTE PTR [rdx]
   140011ef4:	test   al,al
   140011ef6:	jne    0x140011efd
   140011ef8:	cmp    BYTE PTR [rdx+0x1],al
   140011efb:	je     0x140011f10
   140011efd:	mov    BYTE PTR [rcx],al
   140011eff:	movzx  eax,BYTE PTR [rdx+0x1]
   140011f03:	mov    BYTE PTR [rcx+0x1],al
   140011f06:	add    rcx,0x2
   140011f0a:	add    rdx,0x2
   140011f0e:	jmp    0x140011ef1
   140011f10:	mov    WORD PTR [rcx],0x0
   140011f15:	lea    rdx,[rip+0x2a16c]        # 0x14003c088
   140011f1c:	lea    rcx,[rbp-0x20]
   140011f20:	cmp    BYTE PTR [rcx],0x0
   140011f23:	jne    0x140011f2b
   140011f25:	cmp    BYTE PTR [rcx+0x1],0x0
   140011f29:	je     0x140011f31
   140011f2b:	add    rcx,0x2
   140011f2f:	jmp    0x140011f20
   140011f31:	movzx  eax,BYTE PTR [rdx]
   140011f34:	test   al,al
   140011f36:	jne    0x140011f3d
   140011f38:	cmp    BYTE PTR [rdx+0x1],al
   140011f3b:	je     0x140011f50
   140011f3d:	mov    BYTE PTR [rcx],al
   140011f3f:	movzx  eax,BYTE PTR [rdx+0x1]
   140011f43:	mov    BYTE PTR [rcx+0x1],al
   140011f46:	add    rcx,0x2
   140011f4a:	add    rdx,0x2
   140011f4e:	jmp    0x140011f31
   140011f50:	mov    WORD PTR [rcx],0x0
   140011f55:	lea    rax,[rbp-0x20]
   140011f59:	mov    ecx,esi
   140011f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011f60:	cmp    BYTE PTR [rax],0x0
   140011f63:	jne    0x140011f6b
   140011f65:	cmp    BYTE PTR [rax+0x1],0x0
   140011f69:	je     0x140011f73
   140011f6b:	add    rax,0x2
   140011f6f:	inc    ecx
   140011f71:	jmp    0x140011f60
   140011f73:	lea    edi,[rcx+rcx*1]
   140011f76:	mov    rcx,rsi
   140011f79:	movsxd rbx,edi
   140011f7c:	test   edi,edi
   140011f7e:	jle    0x140011f8c
   140011f80:	not    BYTE PTR [rbp+rcx*1-0x20]
   140011f84:	inc    rcx
   140011f87:	cmp    rcx,rbx
   140011f8a:	jl     0x140011f80
   140011f8c:	mov    QWORD PTR [rsp+0x20],rsi
   140011f91:	lea    r9,[rsp+0x48]
   140011f96:	mov    r8d,edi
   140011f99:	lea    rdx,[rbp-0x20]
   140011f9d:	mov    rax,QWORD PTR [rsp+0x60]
   140011fa2:	mov    rcx,QWORD PTR [rax]
   140011fa5:	call   QWORD PTR [rip+0x1d265]        # 0x14002f210
   140011fab:	test   eax,eax
   140011fad:	jne    0x140011fe8
   140011faf:	call   QWORD PTR [rip+0x1d1ab]        # 0x14002f160
   140011fb5:	cmp    eax,0x58
   140011fb8:	jae    0x140011fcc
   140011fba:	mov    eax,eax
   140011fbc:	lea    rcx,[rip+0xfffffffffffee03d]        # 0x140000000
   140011fc3:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140011fca:	jmp    0x140011fd1
   140011fcc:	mov    ecx,0x106
   140011fd1:	mov    DWORD PTR [rip+0x310e1],ecx        # 0x1400430b8
   140011fd7:	mov    DWORD PTR [rip+0x314e7],0x2        # 0x1400434c8
   140011fe1:	mov    BYTE PTR [rip+0x313d8],0x0        # 0x1400433c0
   140011fe8:	mov    rcx,rsi
   140011feb:	test   edi,edi
   140011fed:	jle    0x140012003
   140011fef:	nop
   140011ff0:	movzx  eax,BYTE PTR [rbp+rcx*1-0x20]
   140011ff5:	not    al
   140011ff7:	mov    BYTE PTR [rbp+rcx*1-0x20],al
   140011ffb:	inc    rcx
   140011ffe:	cmp    rcx,rbx
   140012001:	jl     0x140011ff0
   140012003:	cmp    DWORD PTR [rsp+0x48],edi
   140012007:	jne    0x140011234
   14001200d:	mov    r9,QWORD PTR [rip+0x2c0fc]        # 0x14003e110
   140012014:	mov    rsi,QWORD PTR [rsp+0x68]
   140012019:	mov    rbx,QWORD PTR [rsp+0x40]
   14001201e:	xor    edi,edi
   140012020:	jmp    0x1400120b8
   140012025:	movsx  rdx,r15w
   140012029:	movzx  eax,al
   14001202c:	movzx  ecx,BYTE PTR [rax+r9*1]
   140012031:	mov    BYTE PTR [rbp+rdx*1+0x1b0],cl
   140012038:	inc    r15w
   14001203c:	jmp    0x1400120b8
   14001203e:	test   r13w,r13w
   140012042:	je     0x1400120b4
   140012044:	cmp    r13w,0xd
   140012049:	jne    0x140012054
   14001204b:	movzx  eax,al
   14001204e:	add    ax,r13w
   140012052:	jmp    0x140012097
   140012054:	cmp    r13w,0xe
   140012059:	jne    0x140012064
   14001205b:	movzx  eax,al
   14001205e:	add    ax,0x1d
   140012062:	jmp    0x140012097
   140012064:	cmp    r13w,0xf
   140012069:	jne    0x1400120af
   14001206b:	test   ecx,ecx
   14001206d:	je     0x140012082
   14001206f:	movzx  ecx,BYTE PTR [r8+0x1]
   140012074:	shr    cl,0x4
   140012077:	movzx  eax,dl
   14001207a:	shl    al,0x4
   14001207d:	movzx  edx,cl
   140012080:	or     dl,al
   140012082:	inc    r12w
   140012086:	movzx  eax,dl
   140012089:	add    ax,0x2d
   14001208d:	mov    ecx,0xff
   140012092:	cmp    ax,cx
   140012095:	jge    0x1400120c9
   140012097:	movsx  rax,ax
   14001209b:	movsx  rdx,r15w
   14001209f:	movzx  ecx,BYTE PTR [rax+r9*1]
   1400120a4:	mov    BYTE PTR [rbp+rdx*1+0x1b0],cl
   1400120ab:	inc    r15w
   1400120af:	mov    r13d,edi
   1400120b2:	jmp    0x1400120b8
   1400120b4:	movzx  r13d,al
   1400120b8:	inc    r12w
   1400120bc:	cmp    r12w,WORD PTR [rsp+0x58]
   1400120c2:	jge    0x1400120da
   1400120c4:	jmp    0x1400113c0
   1400120c9:	movzx  eax,WORD PTR [rbx+0x82]
   1400120d0:	add    ax,ax
   1400120d3:	mov    WORD PTR [rip+0x2e0da],ax        # 0x1400401b4
   1400120da:	movzx  eax,WORD PTR [rsp+0x30]
   1400120df:	inc    ax
   1400120e2:	mov    WORD PTR [rsp+0x30],ax
   1400120e7:	mov    r15d,0x106
   1400120ed:	cmp    ax,WORD PTR [rbx+0x80]
   1400120f4:	jge    0x14001210b
   1400120f6:	jmp    0x140011287
   1400120fb:	mov    eax,0xfffffffc
   140012100:	jmp    0x1400121b5
   140012105:	call   0x14002cbc8
   14001210a:	int3   
   14001210b:	mov    rdi,QWORD PTR [rsp+0x50]
   140012110:	mov    r12,QWORD PTR [rsp+0x60]
   140012115:	xor    r13d,r13d
   140012118:	mov    rcx,QWORD PTR [r12]
   14001211c:	call   QWORD PTR [rip+0x1d0de]        # 0x14002f200
   140012122:	test   eax,eax
   140012124:	je     0x14001213d
   140012126:	mov    QWORD PTR [r12],r13
   14001212a:	mov    rcx,r12
   14001212d:	call   0x14002a950
   140012132:	mov    rcx,r12
   140012135:	call   QWORD PTR [rip+0x1da3d]        # 0x14002fb78
   14001213b:	jmp    0x140012171
   14001213d:	call   QWORD PTR [rip+0x1d01d]        # 0x14002f160
   140012143:	cmp    eax,0x58
   140012146:	jae    0x140012159
   140012148:	mov    eax,eax
   14001214a:	lea    rcx,[rip+0xfffffffffffedeaf]        # 0x140000000
   140012151:	mov    r15d,DWORD PTR [rcx+rax*4+0x310a0]
   140012159:	mov    DWORD PTR [rip+0x30f58],r15d        # 0x1400430b8
   140012160:	mov    DWORD PTR [rip+0x3135e],0x2        # 0x1400434c8
   14001216a:	mov    BYTE PTR [rip+0x3124f],0x0        # 0x1400433c0
   140012171:	lea    rdx,[rip+0x2f868]        # 0x1400419e0
   140012178:	mov    r8d,DWORD PTR [rip+0x2de85]        # 0x140040004
   14001217f:	add    r8,rdi
   140012182:	movzx  eax,BYTE PTR [rdx]
   140012185:	test   al,al
   140012187:	jne    0x14001218e
   140012189:	cmp    BYTE PTR [rdx+0x1],al
   14001218c:	je     0x1400121a3
   14001218e:	mov    BYTE PTR [r8],al
   140012191:	movzx  eax,BYTE PTR [rdx+0x1]
   140012195:	mov    BYTE PTR [r8+0x1],al
   140012199:	add    r8,0x2
   14001219d:	add    rdx,0x2
   1400121a1:	jmp    0x140012182
   1400121a3:	movzx  ecx,BYTE PTR [rdx]
   1400121a6:	mov    BYTE PTR [r8],cl
   1400121a9:	movzx  ecx,BYTE PTR [rdx+0x1]
   1400121ad:	mov    BYTE PTR [r8+0x1],cl
   1400121b1:	movzx  eax,r13w
   1400121b5:	mov    rcx,QWORD PTR [rbp+0x380]
   1400121bc:	xor    rcx,rsp
   1400121bf:	call   0x14002c960
   1400121c4:	lea    r11,[rsp+0x490]
   1400121cc:	mov    rbx,QWORD PTR [r11+0x30]
   1400121d0:	mov    rsi,QWORD PTR [r11+0x40]
   1400121d4:	mov    rdi,QWORD PTR [r11+0x48]
   1400121d8:	mov    rsp,r11
   1400121db:	pop    r15
   1400121dd:	pop    r14
   1400121df:	pop    r13
   1400121e1:	pop    r12
   1400121e3:	pop    rbp
   1400121e4:	ret    
   1400121e5:	int3   
   1400121e6:	int3   
   1400121e7:	int3   
   1400121e8:	int3   
   1400121e9:	int3   
   1400121ea:	int3   
   1400121eb:	int3   
   1400121ec:	int3   
   1400121ed:	int3   
   1400121ee:	int3   
   1400121ef:	int3   
   1400121f0:	mov    rax,rsp
   1400121f3:	push   rdi
   1400121f4:	push   r12
   1400121f6:	push   r13
   1400121f8:	push   r14
   1400121fa:	push   r15
   1400121fc:	sub    rsp,0xb0
   140012203:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14001220b:	mov    QWORD PTR [rax+0x8],rbx
   14001220f:	mov    QWORD PTR [rax+0x10],rbp
   140012213:	mov    QWORD PTR [rax+0x18],rsi
   140012217:	mov    rax,QWORD PTR [rip+0x29de2]        # 0x14003c000
   14001221e:	xor    rax,rsp
   140012221:	mov    QWORD PTR [rsp+0xa0],rax
   140012229:	mov    QWORD PTR [rsp+0x70],rdx
   14001222e:	xor    ebp,ebp
   140012230:	mov    WORD PTR [rip+0x30b35],bp        # 0x140042d6c
   140012237:	mov    WORD PTR [rip+0x30b26],bp        # 0x140042d64
   14001223e:	mov    WORD PTR [rip+0x30b23],bp        # 0x140042d68
   140012245:	mov    WORD PTR [rip+0x30b28],bp        # 0x140042d74
   14001224c:	mov    DWORD PTR [rip+0x30b06],ebp        # 0x140042d58
   140012252:	mov    WORD PTR [rsp+0x48],bp
   140012257:	mov    WORD PTR [rip+0x30e22],bp        # 0x140043080
   14001225e:	mov    WORD PTR [rip+0x30b0b],bp        # 0x140042d70
   140012265:	mov    WORD PTR [rip+0x30af0],bp        # 0x140042d5c
   14001226c:	mov    WORD PTR [rip+0x30add],bp        # 0x140042d50
   140012273:	mov    WORD PTR [rip+0x30ae6],bp        # 0x140042d60
   14001227a:	mov    WORD PTR [rip+0x30d7f],bp        # 0x140043000
   140012281:	mov    ebx,0x1
   140012286:	mov    WORD PTR [rsp+0x44],bx
   14001228b:	mov    ecx,ebp
   14001228d:	lea    rsi,[rip+0xfffffffffffedd6c]        # 0x140000000
   140012294:	nop    DWORD PTR [rax+0x0]
   140012298:	nop    DWORD PTR [rax+rax*1+0x0]
   1400122a0:	movzx  eax,BYTE PTR [rcx+rsi*1+0x313c8]
   1400122a8:	mov    BYTE PTR [rsp+rcx*1+0x80],al
   1400122af:	lea    rcx,[rcx+0x1]
   1400122b3:	test   al,al
   1400122b5:	jne    0x1400122a0
   1400122b7:	mov    ecx,0x10
   1400122bc:	call   QWORD PTR [rip+0x1d6d6]        # 0x14002f998
   1400122c2:	mov    rdi,rax
   1400122c5:	mov    QWORD PTR [rsp+0x60],rax
   1400122ca:	test   rax,rax
   1400122cd:	je     0x14001230a
   1400122cf:	mov    WORD PTR [rax],bp
   1400122d2:	mov    QWORD PTR [rax+0x8],rbp
   1400122d6:	lea    rcx,[rsp+0x80]
   1400122de:	call   QWORD PTR [rip+0x1cf9c]        # 0x14002f280
   1400122e4:	test   eax,eax
   1400122e6:	jle    0x14001230d
   1400122e8:	inc    eax
   1400122ea:	movsxd rcx,eax
   1400122ed:	call   QWORD PTR [rip+0x1d6a5]        # 0x14002f998
   1400122f3:	mov    QWORD PTR [rdi+0x8],rax
   1400122f7:	lea    rdx,[rsp+0x80]
   1400122ff:	mov    rcx,rax
   140012302:	call   QWORD PTR [rip+0x1cf50]        # 0x14002f258
   140012308:	jmp    0x14001230d
   14001230a:	mov    rdi,rbp
   14001230d:	mov    edx,ebx
   14001230f:	mov    rcx,rdi
   140012312:	call   0x14002ab70
   140012317:	mov    r12,rax
   14001231a:	test   rax,rax
   14001231d:	jne    0x140012327
   14001231f:	or     eax,0xffffffff
   140012322:	jmp    0x140012de6
   140012327:	test   rdi,rdi
   14001232a:	je     0x140012344
   14001232c:	mov    rcx,QWORD PTR [rdi+0x8]
   140012330:	test   rcx,rcx
   140012333:	je     0x14001233b
   140012335:	call   QWORD PTR [rip+0x1d83d]        # 0x14002fb78
   14001233b:	mov    rcx,rdi
   14001233e:	call   QWORD PTR [rip+0x1d834]        # 0x14002fb78
   140012344:	mov    rdx,rbp
   140012347:	nop    WORD PTR [rax+rax*1+0x0]
   140012350:	movzx  eax,BYTE PTR [rdx+rsi*1+0x31380]
   140012358:	mov    BYTE PTR [rsp+rdx*1+0x80],al
   14001235f:	lea    rdx,[rdx+0x1]
   140012363:	test   al,al
   140012365:	jne    0x140012350
   140012367:	mov    ecx,0x10
   14001236c:	call   QWORD PTR [rip+0x1d626]        # 0x14002f998
   140012372:	mov    rdi,rax
   140012375:	mov    QWORD PTR [rsp+0x60],rax
   14001237a:	test   rax,rax
   14001237d:	je     0x1400123ba
   14001237f:	mov    WORD PTR [rax],bp
   140012382:	mov    QWORD PTR [rax+0x8],rbp
   140012386:	lea    rcx,[rsp+0x80]
   14001238e:	call   QWORD PTR [rip+0x1ceec]        # 0x14002f280
   140012394:	test   eax,eax
   140012396:	jle    0x1400123bd
   140012398:	inc    eax
   14001239a:	movsxd rcx,eax
   14001239d:	call   QWORD PTR [rip+0x1d5f5]        # 0x14002f998
   1400123a3:	mov    QWORD PTR [rdi+0x8],rax
   1400123a7:	lea    rdx,[rsp+0x80]
   1400123af:	mov    rcx,rax
   1400123b2:	call   QWORD PTR [rip+0x1cea0]        # 0x14002f258
   1400123b8:	jmp    0x1400123bd
   1400123ba:	mov    rdi,rbp
   1400123bd:	mov    edx,0xa
   1400123c2:	mov    rcx,rdi
   1400123c5:	call   0x14002ab70
   1400123ca:	mov    rsi,rax
   1400123cd:	mov    QWORD PTR [rsp+0x60],rax
   1400123d2:	test   rax,rax
   1400123d5:	je     0x140012d9d
   1400123db:	mov    rcx,rdi
   1400123de:	call   0x14002af10
   1400123e3:	mov    ebx,0x2710
   1400123e8:	mov    QWORD PTR [rsp+0x68],rbx
   1400123ed:	mov    r15d,0x4b0
   1400123f3:	mov    ecx,ebx
   1400123f5:	call   QWORD PTR [rip+0x1d01d]        # 0x14002f418
   1400123fb:	mov    QWORD PTR [rip+0x2bce6],rax        # 0x14003e0e8
   140012402:	test   rax,rax
   140012405:	jne    0x140012411
   140012407:	mov    eax,0xfffffffd
   14001240c:	jmp    0x140012de6
   140012411:	mov    r13d,0x960
   140012417:	mov    ecx,r13d
   14001241a:	call   QWORD PTR [rip+0x1cff8]        # 0x14002f418
   140012420:	mov    rdi,rax
   140012423:	mov    QWORD PTR [rip+0x2bcc6],rax        # 0x14003e0f0
   14001242a:	test   rax,rax
   14001242d:	je     0x140012407
   14001242f:	mov    ecx,0x4
   140012434:	call   QWORD PTR [rip+0x1cfde]        # 0x14002f418
   14001243a:	mov    r14,rax
   14001243d:	test   rax,rax
   140012440:	je     0x140012407
   140012442:	mov    WORD PTR [rip+0x2bcaf],bp        # 0x14003e0f8
   140012449:	mov    rax,rbp
   14001244c:	mov    rcx,r15
   14001244f:	nop
   140012450:	mov    WORD PTR [rax+rdi*1],bp
   140012454:	lea    rax,[rax+0x2]
   140012458:	dec    rcx
   14001245b:	je     0x140012466
   14001245d:	mov    rdi,QWORD PTR [rip+0x2bc8c]        # 0x14003e0f0
   140012464:	jmp    0x140012450
   140012466:	mov    rax,QWORD PTR [rip+0x2bc7b]        # 0x14003e0e8
   14001246d:	mov    BYTE PTR [rax],0x0
   140012470:	mov    ecx,0x1
   140012475:	mov    edx,0x270f
   14001247a:	nop    WORD PTR [rax+rax*1+0x0]
   140012480:	mov    rax,QWORD PTR [rip+0x2bc61]        # 0x14003e0e8
   140012487:	mov    BYTE PTR [rcx+rax*1],0x0
   14001248b:	lea    rcx,[rcx+0x1]
   14001248f:	dec    rdx
   140012492:	jne    0x140012480
   140012494:	mov    WORD PTR [rsp+0x46],bx
   140012499:	mov    edx,0x800
   14001249e:	mov    r8,r12
   1400124a1:	lea    rcx,[rip+0x31888]        # 0x140043d30
   1400124a8:	call   0x14002a640
   1400124ad:	movzx  ebp,WORD PTR [rsp+0x40]
   1400124b2:	xor    edi,edi
   1400124b4:	test   ax,ax
   1400124b7:	jle    0x140012dc3
   1400124bd:	mov    ebx,0x106
   1400124c2:	mov    rcx,r12
   1400124c5:	call   0x14001bd30
   1400124ca:	test   ax,ax
   1400124cd:	je     0x140012521
   1400124cf:	movzx  r8d,WORD PTR [rip+0x2c985]        # 0x14003ee5c
   1400124d7:	mov    WORD PTR [rip+0x2bcc5],r8w        # 0x14003e1a4
   1400124df:	movzx  ecx,WORD PTR [rip+0x2c97a]        # 0x14003ee60
   1400124e6:	imul   ecx,r8d
   1400124ea:	mov    eax,0x51eb851f
   1400124ef:	imul   ecx
   1400124f1:	mov    ecx,edx
   1400124f3:	sar    ecx,0x5
   1400124f6:	mov    eax,ecx
   1400124f8:	shr    eax,0x1f
   1400124fb:	add    ecx,eax
   1400124fd:	add    cx,WORD PTR [rip+0x2c944]        # 0x14003ee48
   140012504:	mov    WORD PTR [rip+0x2c945],cx        # 0x14003ee50
   14001250b:	lea    rdx,[rip+0x2bc9e]        # 0x14003e1b0
   140012512:	call   QWORD PTR [rip+0x2f590]        # 0x140041aa8
   140012518:	test   ax,ax
   14001251b:	jne    0x140012b2a
   140012521:	inc    WORD PTR [rip+0x30840]        # 0x140042d68
   140012528:	lea    r9,[rip+0x31801]        # 0x140043d30
   14001252f:	mov    rax,r9
   140012532:	mov    ecx,edi
   140012534:	cmp    BYTE PTR [rax],0x0
   140012537:	jne    0x14001253f
   140012539:	cmp    BYTE PTR [rax+0x1],0x0
   14001253d:	je     0x140012547
   14001253f:	add    rax,0x2
   140012543:	inc    ecx
   140012545:	jmp    0x140012534
   140012547:	add    cx,cx
   14001254a:	mov    WORD PTR [rip+0x2c903],cx        # 0x14003ee54
   140012551:	mov    DWORD PTR [r14],0x20
   140012558:	mov    rax,r9
   14001255b:	mov    rdx,r14
   14001255e:	movzx  ecx,BYTE PTR [rip+0x317cb]        # 0x140043d30
   140012565:	or     cl,BYTE PTR [rip+0x317c6]        # 0x140043d31
   14001256b:	je     0x140012407
   140012571:	movzx  r8d,WORD PTR [r14]
   140012575:	cmp    WORD PTR [rax],r8w
   140012579:	jne    0x14001259b
   14001257b:	mov    rdi,rax
   14001257e:	xchg   ax,ax
   140012580:	lea    rdx,[rdx+0x2]
   140012584:	movzx  ecx,WORD PTR [rdx]
   140012587:	test   cx,cx
   14001258a:	je     0x1400125ad
   14001258c:	add    rax,0x2
   140012590:	cmp    WORD PTR [rax],cx
   140012593:	je     0x140012580
   140012595:	mov    rax,rdi
   140012598:	mov    rdx,r14
   14001259b:	add    rax,0x2
   14001259f:	movzx  ecx,BYTE PTR [rax+0x1]
   1400125a3:	or     cl,BYTE PTR [rax]
   1400125a5:	je     0x140012407
   1400125ab:	jmp    0x140012575
   1400125ad:	test   rdi,rdi
   1400125b0:	je     0x140012407
   1400125b6:	mov    rax,r9
   1400125b9:	xor    ecx,ecx
   1400125bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400125c0:	cmp    BYTE PTR [rax],0x0
   1400125c3:	jne    0x1400125cb
   1400125c5:	cmp    BYTE PTR [rax+0x1],0x0
   1400125c9:	je     0x1400125d3
   1400125cb:	add    rax,0x2
   1400125cf:	inc    ecx
   1400125d1:	jmp    0x1400125c0
   1400125d3:	add    cx,cx
   1400125d6:	add    WORD PTR [rip+0x30787],cx        # 0x140042d64
   1400125dd:	mov    WORD PTR [rdi],0x0
   1400125e2:	add    rdi,0x2
   1400125e6:	lea    rdx,[rsp+0x50]
   1400125eb:	mov    rcx,rdi
   1400125ee:	call   0x14002a550
   1400125f3:	test   ax,ax
   1400125f6:	je     0x140012da4
   1400125fc:	movzx  eax,ax
   1400125ff:	add    rdi,rax
   140012602:	lea    rdx,[rsp+0x54]
   140012607:	mov    rcx,rdi
   14001260a:	call   0x14002a550
   14001260f:	test   ax,ax
   140012612:	je     0x140012407
   140012618:	movzx  eax,ax
   14001261b:	add    rdi,rax
   14001261e:	lea    rdx,[rsp+0x58]
   140012623:	mov    rcx,rdi
   140012626:	call   0x14002a550
   14001262b:	test   ax,ax
   14001262e:	je     0x140012407
   140012634:	movzx  ecx,ax
   140012637:	add    rcx,rdi
   14001263a:	lea    rdx,[rsp+0x40]
   14001263f:	call   0x14002a550
   140012644:	test   ax,ax
   140012647:	je     0x140012407
   14001264d:	xor    eax,eax
   14001264f:	movzx  edx,ax
   140012652:	movzx  r9d,WORD PTR [rsp+0x50]
   140012658:	movzx  edi,WORD PTR [rsp+0x54]
   14001265d:	movzx  r8d,WORD PTR [rsp+0x58]
   140012663:	movzx  r10d,WORD PTR [rsp+0x40]
   140012669:	movzx  ecx,WORD PTR [rip+0x2c7f4]        # 0x14003ee64
   140012670:	cmp    ax,cx
   140012673:	jge    0x1400126a6
   140012675:	mov    rax,QWORD PTR [rsp+0x70]
   14001267a:	add    rax,0x4
   14001267e:	xchg   ax,ax
   140012680:	cmp    WORD PTR [rax-0x4],di
   140012684:	jne    0x14001269a
   140012686:	cmp    WORD PTR [rax-0x2],r9w
   14001268b:	jne    0x14001269a
   14001268d:	cmp    WORD PTR [rax],r8w
   140012691:	jne    0x14001269a
   140012693:	cmp    WORD PTR [rax+0x2],r10w
   140012698:	je     0x1400126a6
   14001269a:	add    rax,0xa
   14001269e:	inc    dx
   1400126a1:	cmp    dx,cx
   1400126a4:	jl     0x140012680
   1400126a6:	mov    WORD PTR [rsp+0x30],r8w
   1400126ac:	mov    WORD PTR [rsp+0x28],di
   1400126b1:	mov    WORD PTR [rsp+0x20],r10w
   1400126b7:	call   0x140012ed0
   1400126bc:	test   ax,ax
   1400126bf:	jne    0x140012407
   1400126c5:	movsx  r8d,WORD PTR [rip+0x306ab]        # 0x140042d78
   1400126cd:	mov    ecx,0x1fe
   1400126d2:	sub    ecx,r8d
   1400126d5:	movsxd r9,DWORD PTR [rip+0x3067c]        # 0x140042d58
   1400126dc:	cmp    r9d,ecx
   1400126df:	jge    0x140012700
   1400126e1:	inc    r8w
   1400126e5:	lea    rcx,[rip+0x30714]        # 0x140042e00
   1400126ec:	add    rcx,r9
   1400126ef:	call   0x1400134f0
   1400126f4:	mov    esi,0x1
   1400126f9:	xor    edi,edi
   1400126fb:	jmp    0x140012abe
   140012700:	movzx  ecx,WORD PTR [rip+0x3066d]        # 0x140042d74
   140012707:	cmp    cx,WORD PTR [rip+0x3065a]        # 0x140042d68
   14001270e:	cmovl  cx,WORD PTR [rip+0x30652]        # 0x140042d68
   140012716:	mov    WORD PTR [rip+0x30657],cx        # 0x140042d74
   14001271d:	xor    ebp,ebp
   14001271f:	mov    WORD PTR [rip+0x30642],bp        # 0x140042d68
   140012726:	movzx  ecx,WORD PTR [rip+0x3063f]        # 0x140042d6c
   14001272d:	cmp    cx,WORD PTR [rip+0x30630]        # 0x140042d64
   140012734:	cmovl  cx,WORD PTR [rip+0x30628]        # 0x140042d64
   14001273c:	mov    WORD PTR [rip+0x30629],cx        # 0x140042d6c
   140012743:	mov    WORD PTR [rip+0x3061a],bp        # 0x140042d64
   14001274a:	movzx  ecx,WORD PTR [rip+0x3060f]        # 0x140042d60
   140012751:	lea    r10,[rip+0x306a8]        # 0x140042e00
   140012758:	movzx  edx,WORD PTR [rip+0x305f1]        # 0x140042d50
   14001275f:	cmp    WORD PTR [rip+0x303e2],bp        # 0x140042b48
   140012766:	je     0x14001278d
   140012768:	or     BYTE PTR [r9+r10*1],0xf
   14001276d:	inc    r9d
   140012770:	mov    DWORD PTR [rip+0x305e1],r9d        # 0x140042d58
   140012777:	test   cx,cx
   14001277a:	je     0x140012786
   14001277c:	inc    dx
   14001277f:	mov    WORD PTR [rip+0x305ca],dx        # 0x140042d50
   140012786:	mov    WORD PTR [rip+0x303bb],bp        # 0x140042b48
   14001278d:	test   cx,cx
   140012790:	je     0x1400127d4
   140012792:	cmp    WORD PTR [rip+0x308e7],bp        # 0x140043080
   140012799:	je     0x1400127be
   14001279b:	movsx  eax,WORD PTR [rip+0x305ba]        # 0x140042d5c
   1400127a2:	mov    ecx,0x1
   1400127a7:	sub    ecx,eax
   1400127a9:	movsx  eax,dx
   1400127ac:	sub    ecx,eax
   1400127ae:	add    r9d,ecx
   1400127b1:	movsxd rax,r9d
   1400127b4:	or     BYTE PTR [rax+r10*1],0xf
   1400127b9:	inc    r9d
   1400127bc:	jmp    0x1400127cd
   1400127be:	movsx  ecx,WORD PTR [rip+0x30597]        # 0x140042d5c
   1400127c5:	movsx  eax,dx
   1400127c8:	add    ecx,eax
   1400127ca:	sub    r9d,ecx
   1400127cd:	mov    DWORD PTR [rip+0x30584],r9d        # 0x140042d58
   1400127d4:	cmp    r9d,0x200
   1400127db:	jge    0x1400127fe
   1400127dd:	movsxd rdi,r9d
   1400127e0:	add    rdi,r10
   1400127e3:	mov    edx,0x200
   1400127e8:	sub    edx,r9d
   1400127eb:	mov    eax,0xff
   1400127f0:	mov    ecx,edx
   1400127f2:	rep stos BYTE PTR es:[rdi],al
   1400127f4:	add    r9d,edx
   1400127f7:	mov    DWORD PTR [rip+0x3055a],r9d        # 0x140042d58
   1400127fe:	mov    QWORD PTR [rsp+0x20],rbp
   140012803:	lea    r9,[rsp+0x4c]
   140012808:	mov    r8d,0x200
   14001280e:	mov    rdx,r10
   140012811:	mov    rcx,QWORD PTR [rsi]
   140012814:	call   QWORD PTR [rip+0x1c9f6]        # 0x14002f210
   14001281a:	test   eax,eax
   14001281c:	jne    0x140012854
   14001281e:	call   QWORD PTR [rip+0x1c93c]        # 0x14002f160
   140012824:	cmp    eax,0x58
   140012827:	jae    0x14001283b
   140012829:	mov    eax,eax
   14001282b:	lea    rcx,[rip+0xfffffffffffed7ce]        # 0x140000000
   140012832:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140012839:	jmp    0x14001283d
   14001283b:	mov    ecx,ebx
   14001283d:	mov    DWORD PTR [rip+0x30875],ecx        # 0x1400430b8
   140012843:	mov    DWORD PTR [rip+0x30c7b],0x2        # 0x1400434c8
   14001284d:	mov    BYTE PTR [rip+0x30b6c],bpl        # 0x1400433c0
   140012854:	cmp    DWORD PTR [rsp+0x4c],0x200
   14001285c:	jne    0x140012d9d
   140012862:	mov    esi,ebp
   140012864:	movzx  edi,WORD PTR [rip+0x2b88d]        # 0x14003e0f8
   14001286b:	inc    di
   14001286e:	mov    WORD PTR [rip+0x2b883],di        # 0x14003e0f8
   140012875:	cmp    di,r15w
   140012879:	jb     0x1400128ef
   14001287b:	movzx  ecx,r13w
   14001287f:	mov    eax,0x66666667
   140012884:	imul   ecx
   140012886:	sar    edx,0x2
   140012889:	mov    eax,edx
   14001288b:	shr    eax,0x1f
   14001288e:	add    edx,eax
   140012890:	add    dx,r13w
   140012894:	mov    eax,0x7d00
   140012899:	cmp    dx,ax
   14001289c:	ja     0x140012b34
   1400128a2:	movzx  edx,dx
   1400128a5:	mov    rcx,QWORD PTR [rip+0x2b844]        # 0x14003e0f0
   1400128ac:	call   QWORD PTR [rip+0x1cb4e]        # 0x14002f400
   1400128b2:	mov    r8,rax
   1400128b5:	mov    QWORD PTR [rip+0x2b834],rax        # 0x14003e0f0
   1400128bc:	test   rax,rax
   1400128bf:	je     0x140012407
   1400128c5:	movzx  ecx,r15w
   1400128c9:	mov    eax,0x66666667
   1400128ce:	imul   ecx
   1400128d0:	sar    edx,0x2
   1400128d3:	mov    eax,edx
   1400128d5:	shr    eax,0x1f
   1400128d8:	add    edx,eax
   1400128da:	add    r15w,dx
   1400128de:	movzx  eax,r15w
   1400128e2:	lea    r13d,[rax+rax*1]
   1400128e6:	movzx  edi,WORD PTR [rip+0x2b80b]        # 0x14003e0f8
   1400128ed:	jmp    0x1400128f6
   1400128ef:	mov    r8,QWORD PTR [rip+0x2b7fa]        # 0x14003e0f0
   1400128f6:	movzx  edx,bp
   1400128f9:	movzx  eax,BYTE PTR [rip+0x31430]        # 0x140043d30
   140012900:	cmp    BYTE PTR [rip+0x306fa],al        # 0x140043000
   140012906:	jne    0x14001294c
   140012908:	mov    rcx,rbp
   14001290b:	lea    r9,[rip+0x3141e]        # 0x140043d30
   140012912:	lea    r10,[rip+0x306e7]        # 0x140043000
   140012919:	nop    DWORD PTR [rax+0x0]
   140012920:	movzx  eax,BYTE PTR [rcx+r9*1+0x1]
   140012926:	cmp    BYTE PTR [rcx+r10*1+0x1],al
   14001292b:	jne    0x14001294c
   14001292d:	cmp    BYTE PTR [rcx+r10*1],sil
   140012931:	jne    0x140012939
   140012933:	cmp    BYTE PTR [rcx+r9*1],sil
   140012937:	je     0x14001294c
   140012939:	add    rcx,0x2
   14001293d:	add    dx,0x2
   140012941:	movzx  eax,BYTE PTR [rcx+r9*1]
   140012946:	cmp    BYTE PTR [rcx+r10*1],al
   14001294a:	je     0x140012920
   14001294c:	movsx  eax,dx
   14001294f:	cdq    
   140012950:	sub    eax,edx
   140012952:	sar    eax,1
   140012954:	mov    ebx,eax
   140012956:	inc    bx
   140012959:	movzx  ecx,di
   14001295c:	movzx  eax,WORD PTR [r8+rcx*2-0x2]
   140012962:	add    ax,WORD PTR [rsp+0x44]
   140012967:	mov    WORD PTR [r8+rcx*2],ax
   14001296c:	movzx  ecx,WORD PTR [rip+0x2b785]        # 0x14003e0f8
   140012973:	mov    rdx,QWORD PTR [rip+0x2b776]        # 0x14003e0f0
   14001297a:	movzx  ebp,WORD PTR [rdx+rcx*2]
   14001297e:	add    bp,bx
   140012981:	cmp    bp,WORD PTR [rsp+0x68]
   140012986:	jbe    0x140012a0f
   14001298c:	movzx  edi,WORD PTR [rsp+0x46]
   140012991:	mov    eax,0x66666667
   140012996:	imul   edi
   140012998:	sar    edx,0x2
   14001299b:	mov    eax,edx
   14001299d:	shr    eax,0x1f
   1400129a0:	add    edx,eax
   1400129a2:	add    dx,di
   1400129a5:	mov    eax,0x7d00
   1400129aa:	cmp    dx,ax
   1400129ad:	ja     0x140012b34
   1400129b3:	movzx  edx,dx
   1400129b6:	mov    rcx,QWORD PTR [rip+0x2b72b]        # 0x14003e0e8
   1400129bd:	call   QWORD PTR [rip+0x1ca3d]        # 0x14002f400
   1400129c3:	mov    rdi,rax
   1400129c6:	mov    QWORD PTR [rip+0x2b71b],rax        # 0x14003e0e8
   1400129cd:	test   rax,rax
   1400129d0:	je     0x140012407
   1400129d6:	mov    r8,QWORD PTR [rsp+0x68]
   1400129db:	movzx  ecx,r8w
   1400129df:	mov    eax,0x66666667
   1400129e4:	imul   ecx
   1400129e6:	sar    edx,0x2
   1400129e9:	mov    eax,edx
   1400129eb:	shr    eax,0x1f
   1400129ee:	add    edx,eax
   1400129f0:	add    r8w,dx
   1400129f4:	mov    QWORD PTR [rsp+0x68],r8
   1400129f9:	mov    WORD PTR [rsp+0x46],r8w
   1400129ff:	movzx  ecx,WORD PTR [rip+0x2b6f2]        # 0x14003e0f8
   140012a06:	mov    rdx,QWORD PTR [rip+0x2b6e3]        # 0x14003e0f0
   140012a0d:	jmp    0x140012a16
   140012a0f:	mov    rdi,QWORD PTR [rip+0x2b6d2]        # 0x14003e0e8
   140012a16:	movzx  eax,cx
   140012a19:	movsx  rcx,WORD PTR [rdx+rax*2]
   140012a1e:	add    rcx,rdi
   140012a21:	movzx  r8d,bx
   140012a25:	call   0x1400136d0
   140012a2a:	test   ax,ax
   140012a2d:	je     0x140012407
   140012a33:	movzx  ecx,WORD PTR [rip+0x2b6be]        # 0x14003e0f8
   140012a3a:	mov    rax,QWORD PTR [rip+0x2b6af]        # 0x14003e0f0
   140012a41:	movzx  edx,WORD PTR [rax+rcx*2]
   140012a45:	sub    dx,WORD PTR [rax+rcx*2-0x2]
   140012a4a:	movzx  eax,WORD PTR [rsp+0x48]
   140012a4f:	cmp    ax,dx
   140012a52:	cmovb  ax,dx
   140012a56:	mov    WORD PTR [rsp+0x48],ax
   140012a5b:	mov    WORD PTR [rsp+0x44],bx
   140012a60:	xor    edi,edi
   140012a62:	mov    DWORD PTR [rip+0x302f0],edi        # 0x140042d58
   140012a68:	lea    r8d,[rdi+0x1]
   140012a6c:	mov    rcx,r12
   140012a6f:	cmp    WORD PTR [rip+0x302ea],si        # 0x140042d60
   140012a76:	movsx  edx,WORD PTR [rip+0x302f3]        # 0x140042d70
   140012a7d:	jne    0x140012a86
   140012a7f:	movsx  edx,WORD PTR [rip+0x2c3ce]        # 0x14003ee54
   140012a86:	neg    edx
   140012a88:	call   0x14002ad10
   140012a8d:	cmp    eax,0xffffffff
   140012a90:	je     0x14001231f
   140012a96:	mov    WORD PTR [rip+0x302d3],di        # 0x140042d70
   140012a9d:	mov    WORD PTR [rip+0x302bc],di        # 0x140042d60
   140012aa4:	mov    WORD PTR [rip+0x305d5],di        # 0x140043080
   140012aab:	mov    WORD PTR [rip+0x3029e],di        # 0x140042d50
   140012ab2:	mov    WORD PTR [rip+0x31277],si        # 0x140043d30
   140012ab9:	mov    ebx,0x106
   140012abe:	lea    r9,[rip+0x3126b]        # 0x140043d30
   140012ac5:	mov    rcx,r9
   140012ac8:	lea    rax,[rip+0x30531]        # 0x140043000
   140012acf:	mov    rdx,rax
   140012ad2:	movzx  eax,BYTE PTR [rcx]
   140012ad5:	test   al,al
   140012ad7:	jne    0x140012ade
   140012ad9:	cmp    BYTE PTR [rcx+0x1],al
   140012adc:	je     0x140012af1
   140012ade:	mov    BYTE PTR [rdx],al
   140012ae0:	movzx  eax,BYTE PTR [rcx+0x1]
   140012ae4:	mov    BYTE PTR [rdx+0x1],al
   140012ae7:	add    rdx,0x2
   140012aeb:	add    rcx,0x2
   140012aef:	jmp    0x140012ad2
   140012af1:	movzx  eax,BYTE PTR [rcx]
   140012af4:	mov    BYTE PTR [rdx],al
   140012af6:	movzx  eax,BYTE PTR [rcx+0x1]
   140012afa:	mov    BYTE PTR [rdx+0x1],al
   140012afd:	mov    WORD PTR [rip+0x30274],di        # 0x140042d78
   140012b04:	mov    WORD PTR [rip+0x30249],di        # 0x140042d54
   140012b0b:	mov    edx,0x800
   140012b10:	mov    r8,r12
   140012b13:	mov    rcx,r9
   140012b16:	call   0x14002a640
   140012b1b:	test   ax,ax
   140012b1e:	jle    0x140012b3e
   140012b20:	mov    rsi,QWORD PTR [rsp+0x60]
   140012b25:	jmp    0x1400124c2
   140012b2a:	mov    eax,0xfffffffc
   140012b2f:	jmp    0x140012de6
   140012b34:	mov    eax,0xfffffffb
   140012b39:	jmp    0x140012de6
   140012b3e:	test   si,si
   140012b41:	je     0x140012dbe
   140012b47:	movzx  r9d,WORD PTR [rip+0x2b5a9]        # 0x14003e0f8
   140012b4f:	inc    r9w
   140012b53:	mov    WORD PTR [rip+0x2b59d],r9w        # 0x14003e0f8
   140012b5b:	cmp    r9w,r15w
   140012b5f:	mov    r15d,0x7d00
   140012b65:	jb     0x140012bb3
   140012b67:	movzx  ecx,r13w
   140012b6b:	mov    eax,0x66666667
   140012b70:	imul   ecx
   140012b72:	sar    edx,0x2
   140012b75:	mov    eax,edx
   140012b77:	shr    eax,0x1f
   140012b7a:	add    edx,eax
   140012b7c:	add    dx,r13w
   140012b80:	cmp    dx,r15w
   140012b84:	ja     0x140012b34
   140012b86:	movzx  edx,dx
   140012b89:	mov    rcx,QWORD PTR [rip+0x2b560]        # 0x14003e0f0
   140012b90:	call   QWORD PTR [rip+0x1c86a]        # 0x14002f400
   140012b96:	mov    r10,rax
   140012b99:	mov    QWORD PTR [rip+0x2b550],rax        # 0x14003e0f0
   140012ba0:	test   rax,rax
   140012ba3:	je     0x140012407
   140012ba9:	movzx  r9d,WORD PTR [rip+0x2b547]        # 0x14003e0f8
   140012bb1:	jmp    0x140012bba
   140012bb3:	mov    r10,QWORD PTR [rip+0x2b536]        # 0x14003e0f0
   140012bba:	lea    rsi,[rip+0x3023f]        # 0x140042e00
   140012bc1:	cmp    WORD PTR [rip+0x2ff7f],0x0        # 0x140042b48
   140012bc9:	je     0x140012bfb
   140012bcb:	movsxd r8,DWORD PTR [rip+0x30186]        # 0x140042d58
   140012bd2:	or     BYTE PTR [r8+rsi*1],0xf
   140012bd7:	inc    r8d
   140012bda:	mov    DWORD PTR [rip+0x30177],r8d        # 0x140042d58
   140012be1:	cmp    WORD PTR [rip+0x30177],0x0        # 0x140042d60
   140012be9:	je     0x140012bf2
   140012beb:	inc    WORD PTR [rip+0x3015e]        # 0x140042d50
   140012bf2:	mov    WORD PTR [rip+0x2ff4f],di        # 0x140042b48
   140012bf9:	jmp    0x140012c02
   140012bfb:	mov    r8d,DWORD PTR [rip+0x30156]        # 0x140042d58
   140012c02:	cmp    r8d,0x200
   140012c09:	jge    0x140012c2e
   140012c0b:	movsxd rdi,r8d
   140012c0e:	add    rdi,rsi
   140012c11:	mov    edx,0x200
   140012c16:	sub    edx,r8d
   140012c19:	mov    eax,0xff
   140012c1e:	mov    ecx,edx
   140012c20:	rep stos BYTE PTR es:[rdi],al
   140012c22:	add    r8d,edx
   140012c25:	mov    DWORD PTR [rip+0x3012c],r8d        # 0x140042d58
   140012c2c:	xor    edi,edi
   140012c2e:	movzx  edx,di
   140012c31:	movzx  eax,BYTE PTR [rip+0x310f8]        # 0x140043d30
   140012c38:	cmp    BYTE PTR [rip+0x303c2],al        # 0x140043000
   140012c3e:	jne    0x140012c7c
   140012c40:	mov    rcx,rdi
   140012c43:	lea    rdi,[rip+0x310e6]        # 0x140043d30
   140012c4a:	lea    r8,[rip+0x303af]        # 0x140043000
   140012c51:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1]
   140012c56:	cmp    BYTE PTR [rcx+r8*1+0x1],al
   140012c5b:	jne    0x140012c7c
   140012c5d:	cmp    BYTE PTR [rcx+r8*1],0x0
   140012c62:	jne    0x140012c6a
   140012c64:	cmp    BYTE PTR [rcx+rdi*1],0x0
   140012c68:	je     0x140012c7c
   140012c6a:	add    rcx,0x2
   140012c6e:	add    dx,0x2
   140012c72:	movzx  eax,BYTE PTR [rcx+rdi*1]
   140012c76:	cmp    BYTE PTR [rcx+r8*1],al
   140012c7a:	je     0x140012c51
   140012c7c:	movsx  eax,dx
   140012c7f:	cdq    
   140012c80:	sub    eax,edx
   140012c82:	sar    eax,1
   140012c84:	mov    ebx,eax
   140012c86:	inc    bx
   140012c89:	movzx  ecx,r9w
   140012c8d:	movzx  eax,WORD PTR [r10+rcx*2-0x2]
   140012c93:	add    ax,WORD PTR [rsp+0x44]
   140012c98:	mov    WORD PTR [r10+rcx*2],ax
   140012c9d:	movzx  ecx,WORD PTR [rip+0x2b454]        # 0x14003e0f8
   140012ca4:	mov    rdi,QWORD PTR [rip+0x2b445]        # 0x14003e0f0
   140012cab:	movzx  ebp,WORD PTR [rdi+rcx*2]
   140012caf:	add    bp,bx
   140012cb2:	cmp    bp,WORD PTR [rsp+0x68]
   140012cb7:	jbe    0x140012d0f
   140012cb9:	movzx  edi,WORD PTR [rsp+0x46]
   140012cbe:	mov    eax,0x66666667
   140012cc3:	imul   edi
   140012cc5:	sar    edx,0x2
   140012cc8:	mov    eax,edx
   140012cca:	shr    eax,0x1f
   140012ccd:	add    edx,eax
   140012ccf:	add    dx,di
   140012cd2:	cmp    dx,r15w
   140012cd6:	ja     0x140012b34
   140012cdc:	movzx  edx,dx
   140012cdf:	mov    rcx,QWORD PTR [rip+0x2b402]        # 0x14003e0e8
   140012ce6:	call   QWORD PTR [rip+0x1c714]        # 0x14002f400
   140012cec:	mov    rdx,rax
   140012cef:	mov    QWORD PTR [rip+0x2b3f2],rax        # 0x14003e0e8
   140012cf6:	test   rax,rax
   140012cf9:	je     0x140012407
   140012cff:	movzx  ecx,WORD PTR [rip+0x2b3f2]        # 0x14003e0f8
   140012d06:	mov    rdi,QWORD PTR [rip+0x2b3e3]        # 0x14003e0f0
   140012d0d:	jmp    0x140012d16
   140012d0f:	mov    rdx,QWORD PTR [rip+0x2b3d2]        # 0x14003e0e8
   140012d16:	movzx  eax,cx
   140012d19:	movsx  rcx,WORD PTR [rdi+rax*2]
   140012d1e:	add    rcx,rdx
   140012d21:	movzx  r8d,bx
   140012d25:	call   0x1400136d0
   140012d2a:	test   ax,ax
   140012d2d:	je     0x140012407
   140012d33:	xor    edi,edi
   140012d35:	mov    QWORD PTR [rsp+0x20],rdi
   140012d3a:	lea    r9,[rsp+0x4c]
   140012d3f:	mov    r8d,0x200
   140012d45:	mov    rdx,rsi
   140012d48:	mov    rsi,QWORD PTR [rsp+0x60]
   140012d4d:	mov    rcx,QWORD PTR [rsi]
   140012d50:	call   QWORD PTR [rip+0x1c4ba]        # 0x14002f210
   140012d56:	test   eax,eax
   140012d58:	jne    0x140012d93
   140012d5a:	call   QWORD PTR [rip+0x1c400]        # 0x14002f160
   140012d60:	cmp    eax,0x58
   140012d63:	jae    0x140012d77
   140012d65:	mov    eax,eax
   140012d67:	lea    rcx,[rip+0xfffffffffffed292]        # 0x140000000
   140012d6e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140012d75:	jmp    0x140012d7c
   140012d77:	mov    ecx,0x106
   140012d7c:	mov    DWORD PTR [rip+0x30336],ecx        # 0x1400430b8
   140012d82:	mov    DWORD PTR [rip+0x3073c],0x2        # 0x1400434c8
   140012d8c:	mov    BYTE PTR [rip+0x3062d],dil        # 0x1400433c0
   140012d93:	cmp    DWORD PTR [rsp+0x4c],0x200
   140012d9b:	je     0x140012dc3
   140012d9d:	mov    eax,0xfffffffe
   140012da2:	jmp    0x140012de6
   140012da4:	movzx  eax,BYTE PTR [rdi]
   140012da7:	sub    al,0x30
   140012da9:	cmp    al,0x9
   140012dab:	ja     0x140012db7
   140012dad:	cmp    BYTE PTR [rdi+0x1],0x0
   140012db1:	je     0x140012407
   140012db7:	mov    eax,0xfffffff9
   140012dbc:	jmp    0x140012de6
   140012dbe:	mov    rsi,QWORD PTR [rsp+0x60]
   140012dc3:	mov    WORD PTR [rip+0x2b330],bp        # 0x14003e0fa
   140012dca:	mov    rcx,r14
   140012dcd:	call   QWORD PTR [rip+0x1c6ad]        # 0x14002f480
   140012dd3:	mov    rcx,r12
   140012dd6:	call   0x14002a9e0
   140012ddb:	mov    rcx,rsi
   140012dde:	call   0x14002a9e0
   140012de3:	movzx  eax,di
   140012de6:	mov    rcx,QWORD PTR [rsp+0xa0]
   140012dee:	xor    rcx,rsp
   140012df1:	call   0x14002c960
   140012df6:	lea    r11,[rsp+0xb0]
   140012dfe:	mov    rbx,QWORD PTR [r11+0x30]
   140012e02:	mov    rbp,QWORD PTR [r11+0x38]
   140012e06:	mov    rsi,QWORD PTR [r11+0x40]
   140012e0a:	mov    rsp,r11
   140012e0d:	pop    r15
   140012e0f:	pop    r14
   140012e11:	pop    r13
   140012e13:	pop    r12
   140012e15:	pop    rdi
   140012e16:	ret    
   140012e17:	int3   
   140012e18:	int3   
   140012e19:	int3   
   140012e1a:	int3   
   140012e1b:	int3   
   140012e1c:	int3   
   140012e1d:	int3   
   140012e1e:	int3   
   140012e1f:	int3   
   140012e20:	movzx  eax,BYTE PTR [rip+0x30f09]        # 0x140043d30
   140012e27:	xor    r9d,r9d
   140012e2a:	cmp    BYTE PTR [rip+0x301d0],al        # 0x140043000
   140012e30:	movzx  edx,r9w
   140012e34:	jne    0x140012e82
   140012e36:	mov    ecx,r9d
   140012e39:	lea    r8,[rip+0xfffffffffffed1c0]        # 0x140000000
   140012e40:	movzx  eax,BYTE PTR [rcx+r8*1+0x43d31]
   140012e49:	cmp    BYTE PTR [rcx+r8*1+0x43001],al
   140012e51:	jne    0x140012e82
   140012e53:	cmp    BYTE PTR [rcx+r8*1+0x43000],r9b
   140012e5b:	jne    0x140012e67
   140012e5d:	cmp    BYTE PTR [rcx+r8*1+0x43d30],r9b
   140012e65:	je     0x140012eb2
   140012e67:	movzx  eax,BYTE PTR [rcx+r8*1+0x43d32]
   140012e70:	add    rcx,0x2
   140012e74:	add    dx,0x2
   140012e78:	cmp    BYTE PTR [rcx+r8*1+0x43000],al
   140012e80:	je     0x140012e40
   140012e82:	movzx  eax,WORD PTR [rip+0x2bfcb]        # 0x14003ee54
   140012e89:	mov    WORD PTR [rip+0x2fecf],r9w        # 0x140042d60
   140012e91:	mov    WORD PTR [rip+0x2feb7],r9w        # 0x140042d50
   140012e99:	mov    WORD PTR [rip+0x2fed0],ax        # 0x140042d70
   140012ea0:	movzx  eax,WORD PTR [rip+0x2fca1]        # 0x140042b48
   140012ea7:	mov    WORD PTR [rip+0x301d2],ax        # 0x140043080
   140012eae:	movzx  eax,dx
   140012eb1:	ret    
   140012eb2:	movzx  ecx,WORD PTR [rip+0x2bf9b]        # 0x14003ee54
   140012eb9:	mov    eax,0x1
   140012ebe:	add    WORD PTR [rip+0x2feab],cx        # 0x140042d70
   140012ec5:	mov    WORD PTR [rip+0x2fe94],ax        # 0x140042d60
   140012ecc:	movzx  eax,dx
   140012ecf:	ret    
   140012ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140012ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140012eda:	mov    QWORD PTR [rsp+0x18],rsi
   140012edf:	push   rdi
   140012ee0:	push   r12
   140012ee2:	push   r13
   140012ee4:	push   r14
   140012ee6:	push   r15
   140012ee8:	sub    rsp,0x20
   140012eec:	xor    r11d,r11d
   140012eef:	movzx  r12d,r9w
   140012ef3:	movzx  r10d,dx
   140012ef7:	movzx  r14d,r11w
   140012efb:	movzx  esi,r11w
   140012eff:	call   0x140012e20
   140012f04:	movsx  ebx,ax
   140012f07:	mov    eax,ebx
   140012f09:	cdq    
   140012f0a:	sub    eax,edx
   140012f0c:	sar    eax,1
   140012f0e:	cmp    eax,0xf
   140012f11:	jle    0x140012f18
   140012f13:	mov    ebx,0x1e
   140012f18:	movsx  rcx,WORD PTR [rip+0x2fe58]        # 0x140042d78
   140012f20:	movsx  eax,bx
   140012f23:	lea    r13,[rip+0x2fe56]        # 0x140042d80
   140012f2a:	cdq    
   140012f2b:	mov    edi,0x1
   140012f30:	mov    r15d,r11d
   140012f33:	sub    eax,edx
   140012f35:	lea    rdx,[rip+0x30df4]        # 0x140043d30
   140012f3c:	movzx  ebp,di
   140012f3f:	sar    eax,1
   140012f41:	shl    al,0x4
   140012f44:	mov    BYTE PTR [rcx+r13*1],al
   140012f48:	mov    rax,rdx
   140012f4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012f50:	cmp    BYTE PTR [rax],r11b
   140012f53:	jne    0x140012f5b
   140012f55:	cmp    BYTE PTR [rax+0x1],r11b
   140012f59:	je     0x140012f64
   140012f5b:	add    rax,0x2
   140012f5f:	inc    r15d
   140012f62:	jmp    0x140012f50
   140012f64:	add    r15w,r15w
   140012f68:	cmp    bx,r15w
   140012f6c:	jge    0x140013134
   140012f72:	mov    rdi,QWORD PTR [rip+0x2b18f]        # 0x14003e108
   140012f79:	nop    DWORD PTR [rax+0x0]
   140012f80:	movsx  rax,bx
   140012f84:	movzx  r8d,r11w
   140012f88:	mov    r13d,0xff
   140012f8e:	movzx  r9d,BYTE PTR [rax+rdx*1]
   140012f93:	inc    eax
   140012f95:	movsxd rdx,eax
   140012f98:	lea    rax,[rip+0x30d91]        # 0x140043d30
   140012f9f:	add    rdx,rax
   140012fa2:	movsx  rax,r8w
   140012fa6:	cmp    r9b,BYTE PTR [rdi+rax*4]
   140012faa:	jne    0x140012fb5
   140012fac:	movzx  eax,BYTE PTR [rdi+rax*4+0x1]
   140012fb1:	cmp    BYTE PTR [rdx],al
   140012fb3:	je     0x140012fbf
   140012fb5:	inc    r8w
   140012fb9:	cmp    r8w,r13w
   140012fbd:	jl     0x140012fa2
   140012fbf:	cmp    r8w,r13w
   140012fc3:	lea    r13,[rip+0x2fdb6]        # 0x140042d80
   140012fca:	je     0x14001319a
   140012fd0:	movsx  rax,r8w
   140012fd4:	movzx  edx,BYTE PTR [rdi+rax*4+0x3]
   140012fd9:	cmp    dl,0xd
   140012fdc:	jae    0x14001302e
   140012fde:	movzx  r9d,dl
   140012fe2:	movsx  eax,r14w
   140012fe6:	inc    bp
   140012fe9:	lea    edx,[rax+rax*2]
   140012fec:	movsx  eax,si
   140012fef:	lea    r8d,[rdx+rax*2]
   140012ff3:	movsx  edx,bp
   140012ff6:	dec    edx
   140012ff8:	add    edx,r8d
   140012ffb:	and    edx,0x80000001
   140013001:	jge    0x14001300a
   140013003:	dec    edx
   140013005:	or     edx,0xfffffffe
   140013008:	inc    edx
   14001300a:	movsx  rax,cx
   14001300e:	test   edx,edx
   140013010:	jne    0x14001301b
   140013012:	shl    r9b,0x4
   140013016:	jmp    0x140013116
   14001301b:	or     BYTE PTR [rax+r13*1],r9b
   14001301f:	inc    cx
   140013022:	mov    WORD PTR [rip+0x2fd4f],cx        # 0x140042d78
   140013029:	jmp    0x14001311a
   14001302e:	cmp    dl,0x2d
   140013031:	jae    0x1400130a4
   140013033:	inc    si
   140013036:	movzx  r9d,dl
   14001303a:	cmp    dl,0x1d
   14001303d:	jae    0x14001304b
   14001303f:	sub    r9w,0xd
   140013044:	mov    eax,0xd0
   140013049:	jmp    0x140013055
   14001304b:	sub    r9w,0x1d
   140013050:	mov    eax,0xe0
   140013055:	or     r9w,ax
   140013059:	movsx  eax,r14w
   14001305d:	lea    edx,[rax+rax*2]
   140013060:	movsx  eax,si
   140013063:	lea    r8d,[rdx+rax*2]
   140013067:	movsx  edx,bp
   14001306a:	add    edx,0xfffffffe
   14001306d:	add    edx,r8d
   140013070:	and    edx,0x80000001
   140013076:	jge    0x14001307f
   140013078:	dec    edx
   14001307a:	or     edx,0xfffffffe
   14001307d:	inc    edx
   14001307f:	test   edx,edx
   140013081:	je     0x140013108
   140013087:	movzx  eax,r9w
   14001308b:	movsx  rdx,cx
   14001308f:	inc    cx
   140013092:	sar    ax,0x4
   140013096:	or     BYTE PTR [rdx+r13*1],al
   14001309a:	shl    r9b,0x4
   14001309e:	movsx  rax,cx
   1400130a2:	jmp    0x14001310f
   1400130a4:	cmp    dl,0xd2
   1400130a7:	jae    0x14001311a
   1400130a9:	movzx  r9d,dl
   1400130ad:	inc    r14w
   1400130b1:	movsx  eax,r14w
   1400130b5:	sub    r9w,0x2d
   1400130ba:	lea    edx,[rax+rax*2]
   1400130bd:	movsx  eax,si
   1400130c0:	lea    r8d,[rdx+rax*2]
   1400130c4:	movsx  edx,bp
   1400130c7:	add    edx,0xfffffffd
   1400130ca:	add    edx,r8d
   1400130cd:	and    edx,0x80000001
   1400130d3:	jge    0x1400130dc
   1400130d5:	dec    edx
   1400130d7:	or     edx,0xfffffffe
   1400130da:	inc    edx
   1400130dc:	movsx  rax,cx
   1400130e0:	test   edx,edx
   1400130e2:	jne    0x140013100
   1400130e4:	movzx  edx,r9w
   1400130e8:	inc    cx
   1400130eb:	sar    dx,0x4
   1400130ef:	or     dl,0xf0
   1400130f2:	shl    r9b,0x4
   1400130f6:	mov    BYTE PTR [rax+r13*1],dl
   1400130fa:	movsx  rax,cx
   1400130fe:	jmp    0x14001310f
   140013100:	or     BYTE PTR [rax+r13*1],0xf
   140013105:	inc    cx
   140013108:	movsx  rax,cx
   14001310c:	inc    cx
   14001310f:	mov    WORD PTR [rip+0x2fc62],cx        # 0x140042d78
   140013116:	mov    BYTE PTR [rax+r13*1],r9b
   14001311a:	add    bx,0x2
   14001311e:	lea    rdx,[rip+0x30c0b]        # 0x140043d30
   140013125:	cmp    bx,r15w
   140013129:	jl     0x140012f80
   14001312f:	mov    edi,0x1
   140013134:	movsx  eax,r14w
   140013138:	lea    edx,[rax+rax*2]
   14001313b:	movsx  eax,si
   14001313e:	lea    r8d,[rdx+rax*2]
   140013142:	movsx  eax,bp
   140013145:	add    r8d,eax
   140013148:	and    r8d,0x80000001
   14001314f:	jge    0x14001315b
   140013151:	dec    r8d
   140013154:	or     r8d,0xfffffffe
   140013158:	inc    r8d
   14001315b:	test   r8d,r8d
   14001315e:	jne    0x14001337b
   140013164:	movsx  r8,cx
   140013168:	cmp    r8,0x80
   14001316f:	jae    0x1400134db
   140013175:	mov    BYTE PTR [r8+r13*1],r11b
   140013179:	or     BYTE PTR [r8+r13*1],0x8
   14001317e:	movzx  edx,BYTE PTR [r8+r13*1]
   140013183:	cmp    r10w,0x4
   140013188:	jge    0x1400131c3
   14001318a:	and    r10b,0xf
   14001318e:	or     r10b,dl
   140013191:	mov    BYTE PTR [r8+r13*1],r10b
   140013195:	jmp    0x1400134b2
   14001319a:	lea    rcx,[rip+0x30b8f]        # 0x140043d30
   1400131a1:	movsx  rax,r11w
   1400131a5:	cmp    BYTE PTR [rax+rcx*1],0x0
   1400131a9:	jne    0x1400131b2
   1400131ab:	cmp    BYTE PTR [rax+rcx*1+0x1],0x0
   1400131b0:	je     0x1400131b9
   1400131b2:	add    r11w,0x2
   1400131b7:	jmp    0x1400131a1
   1400131b9:	mov    eax,0xfffffffd
   1400131be:	jmp    0x1400134be
   1400131c3:	cmp    r10w,0x20
   1400131c8:	jge    0x1400131fd
   1400131ca:	movzx  eax,r10b
   1400131ce:	sar    al,0x4
   1400131d1:	and    al,0xb
   1400131d3:	or     al,dl
   1400131d5:	or     al,0x4
   1400131d7:	mov    BYTE PTR [r8+r13*1],al
   1400131db:	inc    cx
   1400131de:	shl    r10b,0x4
   1400131e2:	mov    WORD PTR [rip+0x2fb6b],di        # 0x140042d54
   1400131e9:	movsx  rax,cx
   1400131ed:	mov    WORD PTR [rip+0x2fb84],cx        # 0x140042d78
   1400131f4:	mov    BYTE PTR [rax+r13*1],r10b
   1400131f8:	jmp    0x1400134ba
   1400131fd:	mov    eax,0x100
   140013202:	cmp    r10w,ax
   140013206:	jge    0x14001322a
   140013208:	movzx  eax,r10w
   14001320c:	sar    ax,0x8
   140013210:	and    al,0x9
   140013212:	or     al,dl
   140013214:	or     al,0x6
   140013216:	inc    cx
   140013219:	mov    BYTE PTR [r8+r13*1],al
   14001321d:	movsx  rax,cx
   140013221:	mov    BYTE PTR [rax+r13*1],r10b
   140013225:	jmp    0x1400134ab
   14001322a:	movzx  r9d,WORD PTR [rip+0x2bc32]        # 0x14003ee64
   140013232:	inc    cx
   140013235:	cmp    r10w,r9w
   140013239:	jge    0x140013262
   14001323b:	movzx  eax,r10w
   14001323f:	sar    ax,0xc
   140013243:	and    al,0x8
   140013245:	or     al,dl
   140013247:	movzx  edx,r10w
   14001324b:	or     al,0x7
   14001324d:	sar    dx,0x4
   140013251:	mov    BYTE PTR [r8+r13*1],al
   140013255:	movsx  rax,cx
   140013259:	mov    BYTE PTR [rax+r13*1],dl
   14001325d:	jmp    0x1400131db
   140013262:	movzx  eax,r9w
   140013266:	mov    WORD PTR [rip+0x2fae7],di        # 0x140042d54
   14001326d:	sar    ax,0xc
   140013271:	and    al,0x8
   140013273:	or     al,dl
   140013275:	movzx  edx,r9w
   140013279:	shl    r9b,0x4
   14001327d:	sar    dx,0x4
   140013281:	or     al,0x7
   140013283:	mov    BYTE PTR [r8+r13*1],al
   140013287:	movzx  r8d,WORD PTR [rsp+0x78]
   14001328d:	movsx  rax,cx
   140013291:	mov    BYTE PTR [rax+r13*1],dl
   140013295:	inc    cx
   140013298:	movzx  edx,r12w
   14001329c:	shr    dx,0xc
   1400132a0:	movsx  rax,cx
   1400132a4:	inc    cx
   1400132a7:	and    dl,0xf
   1400132aa:	or     dl,r9b
   1400132ad:	movzx  r9d,WORD PTR [rsp+0x80]
   1400132b6:	mov    BYTE PTR [rax+r13*1],dl
   1400132ba:	movsx  rax,cx
   1400132be:	inc    cx
   1400132c1:	movzx  edx,r12w
   1400132c5:	shl    r12b,0x4
   1400132c9:	shr    dx,0x4
   1400132cd:	mov    BYTE PTR [rax+r13*1],dl
   1400132d1:	movsx  rax,cx
   1400132d5:	inc    cx
   1400132d8:	movzx  edx,r8w
   1400132dc:	shr    dx,0xc
   1400132e0:	and    dl,0xf
   1400132e3:	or     dl,r12b
   1400132e6:	mov    BYTE PTR [rax+r13*1],dl
   1400132ea:	movsx  rax,cx
   1400132ee:	inc    cx
   1400132f1:	movzx  edx,r8w
   1400132f5:	shl    r8b,0x4
   1400132f9:	shr    dx,0x4
   1400132fd:	mov    BYTE PTR [rax+r13*1],dl
   140013301:	movsx  rax,cx
   140013305:	inc    cx
   140013308:	movzx  edx,r9w
   14001330c:	shr    dx,0xc
   140013310:	and    dl,0xf
   140013313:	or     dl,r8b
   140013316:	movzx  r8d,WORD PTR [rsp+0x70]
   14001331c:	mov    BYTE PTR [rax+r13*1],dl
   140013320:	movsx  rax,cx
   140013324:	inc    cx
   140013327:	movzx  edx,r9w
   14001332b:	shl    r9b,0x4
   14001332f:	shr    dx,0x4
   140013333:	mov    BYTE PTR [rax+r13*1],dl
   140013337:	movsx  rax,cx
   14001333b:	inc    cx
   14001333e:	movzx  edx,r8w
   140013342:	shr    dx,0xc
   140013346:	and    dl,0xf
   140013349:	or     dl,r9b
   14001334c:	mov    BYTE PTR [rax+r13*1],dl
   140013350:	movsx  rax,cx
   140013354:	inc    cx
   140013357:	movzx  edx,r8w
   14001335b:	mov    WORD PTR [rip+0x2fa16],cx        # 0x140042d78
   140013362:	shr    dx,0x4
   140013366:	shl    r8b,0x4
   14001336a:	mov    BYTE PTR [rax+r13*1],dl
   14001336e:	movsx  rax,cx
   140013372:	mov    BYTE PTR [rax+r13*1],r8b
   140013376:	jmp    0x1400134ba
   14001337b:	inc    cx
   14001337e:	movsx  rax,cx
   140013382:	mov    WORD PTR [rip+0x2f9ef],cx        # 0x140042d78
   140013389:	lea    rdx,[rax+r13*1]
   14001338d:	mov    BYTE PTR [rdx],0x80
   140013390:	cmp    r10w,0x4
   140013395:	jge    0x1400133ae
   140013397:	or     r10b,0xf8
   14001339b:	mov    WORD PTR [rip+0x2f9b2],di        # 0x140042d54
   1400133a2:	shl    r10b,0x4
   1400133a6:	mov    BYTE PTR [rdx],r10b
   1400133a9:	jmp    0x1400134ba
   1400133ae:	cmp    r10w,0x20
   1400133b3:	jge    0x1400133c1
   1400133b5:	or     r10b,0xc0
   1400133b9:	mov    BYTE PTR [rdx],r10b
   1400133bc:	jmp    0x1400134b2
   1400133c1:	mov    eax,0x100
   1400133c6:	cmp    r10w,ax
   1400133ca:	jge    0x1400133dd
   1400133cc:	movzx  eax,r10w
   1400133d0:	sar    ax,0x4
   1400133d4:	or     al,0xe0
   1400133d6:	mov    BYTE PTR [rdx],al
   1400133d8:	jmp    0x1400131db
   1400133dd:	movzx  r8d,WORD PTR [rip+0x2ba7f]        # 0x14003ee64
   1400133e5:	cmp    r10w,r8w
   1400133e9:	jge    0x140013407
   1400133eb:	movzx  eax,r10w
   1400133ef:	sar    ax,0x8
   1400133f3:	or     al,0xf0
   1400133f5:	inc    cx
   1400133f8:	mov    BYTE PTR [rdx],al
   1400133fa:	movsx  rax,cx
   1400133fe:	mov    BYTE PTR [rax+r13*1],r10b
   140013402:	jmp    0x1400134ab
   140013407:	movzx  eax,BYTE PTR [rip+0x2ba57]        # 0x14003ee65
   14001340e:	movzx  r9d,WORD PTR [rsp+0x70]
   140013414:	inc    cx
   140013417:	or     al,0xf0
   140013419:	mov    BYTE PTR [rdx],al
   14001341b:	movsx  rax,cx
   14001341f:	inc    cx
   140013422:	mov    BYTE PTR [rax+r13*1],r8b
   140013426:	movzx  r8d,WORD PTR [rsp+0x78]
   14001342c:	movsx  rax,cx
   140013430:	inc    cx
   140013433:	movzx  edx,r12w
   140013437:	shr    dx,0x8
   14001343b:	mov    BYTE PTR [rax+r13*1],dl
   14001343f:	movsx  rax,cx
   140013443:	inc    cx
   140013446:	mov    BYTE PTR [rax+r13*1],r12b
   14001344a:	movsx  rax,cx
   14001344e:	movzx  edx,r8w
   140013452:	shr    dx,0x8
   140013456:	inc    cx
   140013459:	mov    BYTE PTR [rax+r13*1],dl
   14001345d:	movsx  rax,cx
   140013461:	inc    cx
   140013464:	mov    BYTE PTR [rax+r13*1],r8b
   140013468:	movzx  r8d,WORD PTR [rsp+0x80]
   140013471:	movsx  rax,cx
   140013475:	movzx  edx,r8w
   140013479:	inc    cx
   14001347c:	shr    dx,0x8
   140013480:	mov    BYTE PTR [rax+r13*1],dl
   140013484:	movsx  rax,cx
   140013488:	inc    cx
   14001348b:	mov    BYTE PTR [rax+r13*1],r8b
   14001348f:	movsx  rdx,cx
   140013493:	movzx  r8d,r9w
   140013497:	shr    r8w,0x8
   14001349c:	inc    cx
   14001349f:	mov    BYTE PTR [rdx+r13*1],r8b
   1400134a3:	movsx  rdx,cx
   1400134a7:	mov    BYTE PTR [rdx+r13*1],r9b
   1400134ab:	mov    WORD PTR [rip+0x2f8c6],cx        # 0x140042d78
   1400134b2:	mov    WORD PTR [rip+0x2f89a],r11w        # 0x140042d54
   1400134ba:	movzx  eax,r11w
   1400134be:	mov    rbx,QWORD PTR [rsp+0x50]
   1400134c3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400134c8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400134cd:	add    rsp,0x20
   1400134d1:	pop    r15
   1400134d3:	pop    r14
   1400134d5:	pop    r13
   1400134d7:	pop    r12
   1400134d9:	pop    rdi
   1400134da:	ret    
   1400134db:	call   0x14002cbc8
   1400134e0:	int3   
   1400134e1:	int3   
   1400134e2:	int3   
   1400134e3:	int3   
   1400134e4:	int3   
   1400134e5:	int3   
   1400134e6:	int3   
   1400134e7:	int3   
   1400134e8:	int3   
   1400134e9:	int3   
   1400134ea:	int3   
   1400134eb:	int3   
   1400134ec:	int3   
   1400134ed:	int3   
   1400134ee:	int3   
   1400134ef:	int3   
   1400134f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400134f5:	mov    QWORD PTR [rsp+0x10],rdi
   1400134fa:	xor    ebx,ebx
   1400134fc:	mov    r11,rcx
   1400134ff:	cmp    WORD PTR [rip+0x2f642],bx        # 0x140042b48
   140013506:	lea    edi,[rbx+0x1]
   140013509:	movzx  r9d,bx
   14001350d:	movzx  edx,bx
   140013510:	je     0x1400135e8
   140013516:	movsx  r8d,r8w
   14001351a:	add    r8d,r8d
   14001351d:	test   r8d,r8d
   140013520:	jle    0x140013592
   140013522:	mov    eax,ebx
   140013524:	lea    r10,[rip+0x2f855]        # 0x140042d80
   14001352b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013530:	movzx  ecx,dx
   140013533:	inc    dx
   140013536:	movzx  r9d,dx
   14001353a:	sar    cx,1
   14001353d:	sar    r9w,1
   140013541:	and    eax,0x80000001
   140013546:	jge    0x14001354f
   140013548:	dec    eax
   14001354a:	or     eax,0xfffffffe
   14001354d:	inc    eax
   14001354f:	test   eax,eax
   140013551:	movsx  rax,cx
   140013555:	movzx  ecx,BYTE PTR [rax+r10*1]
   14001355a:	jne    0x140013561
   14001355c:	shr    cl,0x4
   14001355f:	jmp    0x140013564
   140013561:	and    cl,0xf
   140013564:	movsx  eax,dx
   140013567:	and    eax,0x80000001
   14001356c:	jge    0x140013575
   14001356e:	dec    eax
   140013570:	or     eax,0xfffffffe
   140013573:	inc    eax
   140013575:	test   eax,eax
   140013577:	movsx  rax,r9w
   14001357b:	jne    0x140013586
   14001357d:	shl    cl,0x4
   140013580:	mov    BYTE PTR [rax+r11*1],cl
   140013584:	jmp    0x14001358a
   140013586:	or     BYTE PTR [rax+r11*1],cl
   14001358a:	movsx  eax,dx
   14001358d:	cmp    eax,r8d
   140013590:	jl     0x140013530
   140013592:	cmp    WORD PTR [rip+0x2f7bb],bx        # 0x140042d54
   140013599:	je     0x1400135a9
   14001359b:	mov    WORD PTR [rip+0x2f5a6],bx        # 0x140042b48
   1400135a2:	mov    WORD PTR [rip+0x2f7ab],bx        # 0x140042d54
   1400135a9:	movsx  eax,r9w
   1400135ad:	add    DWORD PTR [rip+0x2f7a5],eax        # 0x140042d58
   1400135b3:	cmp    WORD PTR [rip+0x2f7a6],bx        # 0x140042d60
   1400135ba:	je     0x1400135d2
   1400135bc:	add    WORD PTR [rip+0x2f78c],r9w        # 0x140042d50
   1400135c4:	movzx  eax,di
   1400135c7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400135cc:	mov    rdi,QWORD PTR [rsp+0x10]
   1400135d1:	ret    
   1400135d2:	mov    WORD PTR [rip+0x2f782],r9w        # 0x140042d5c
   1400135da:	movzx  eax,di
   1400135dd:	mov    rbx,QWORD PTR [rsp+0x8]
   1400135e2:	mov    rdi,QWORD PTR [rsp+0x10]
   1400135e7:	ret    
   1400135e8:	movsx  r9d,r8w
   1400135ec:	movzx  r8d,bx
   1400135f0:	add    r9d,r9d
   1400135f3:	test   r9d,r9d
   1400135f6:	jle    0x140013649
   1400135f8:	mov    eax,ebx
   1400135fa:	lea    r10,[rip+0x2f77f]        # 0x140042d80
   140013601:	movzx  edx,r8w
   140013605:	sar    dx,1
   140013608:	and    eax,0x80000001
   14001360d:	jge    0x140013616
   14001360f:	dec    eax
   140013611:	or     eax,0xfffffffe
   140013614:	inc    eax
   140013616:	test   eax,eax
   140013618:	jne    0x14001362b
   14001361a:	movsx  rcx,dx
   14001361e:	movzx  eax,BYTE PTR [rcx+r10*1]
   140013623:	and    al,0xf0
   140013625:	mov    BYTE PTR [rcx+r11*1],al
   140013629:	jmp    0x14001363c
   14001362b:	movsx  rax,dx
   14001362f:	lea    rcx,[rax+r11*1]
   140013633:	movzx  eax,BYTE PTR [rax+r10*1]
   140013638:	and    al,0xf
   14001363a:	or     BYTE PTR [rcx],al
   14001363c:	inc    r8w
   140013640:	movsx  eax,r8w
   140013644:	cmp    eax,r9d
   140013647:	jl     0x140013601
   140013649:	cmp    WORD PTR [rip+0x2f704],bx        # 0x140042d54
   140013650:	je     0x140013687
   140013652:	movsx  eax,dx
   140013655:	mov    WORD PTR [rip+0x2f4ec],di        # 0x140042b48
   14001365c:	mov    WORD PTR [rip+0x2f6f1],bx        # 0x140042d54
   140013663:	add    DWORD PTR [rip+0x2f6ef],eax        # 0x140042d58
   140013669:	cmp    WORD PTR [rip+0x2f6f0],bx        # 0x140042d60
   140013670:	je     0x1400136bb
   140013672:	add    WORD PTR [rip+0x2f6d7],dx        # 0x140042d50
   140013679:	movzx  eax,di
   14001367c:	mov    rbx,QWORD PTR [rsp+0x8]
   140013681:	mov    rdi,QWORD PTR [rsp+0x10]
   140013686:	ret    
   140013687:	mov    eax,DWORD PTR [rip+0x2f6cb]        # 0x140042d58
   14001368d:	movsx  ecx,dx
   140013690:	inc    dx
   140013693:	inc    eax
   140013695:	add    ecx,eax
   140013697:	cmp    WORD PTR [rip+0x2f6c2],bx        # 0x140042d60
   14001369e:	mov    DWORD PTR [rip+0x2f6b4],ecx        # 0x140042d58
   1400136a4:	je     0x1400136bb
   1400136a6:	add    WORD PTR [rip+0x2f6a3],dx        # 0x140042d50
   1400136ad:	movzx  eax,di
   1400136b0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400136b5:	mov    rdi,QWORD PTR [rsp+0x10]
   1400136ba:	ret    
   1400136bb:	mov    rbx,QWORD PTR [rsp+0x8]
   1400136c0:	movzx  eax,di
   1400136c3:	mov    rdi,QWORD PTR [rsp+0x10]
   1400136c8:	mov    WORD PTR [rip+0x2f68d],dx        # 0x140042d5c
   1400136cf:	ret    
   1400136d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400136d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400136da:	mov    QWORD PTR [rsp+0x18],rsi
   1400136df:	mov    QWORD PTR [rsp+0x20],rdi
   1400136e4:	movzx  r10d,WORD PTR [rip+0x2b760]        # 0x14003ee4c
   1400136ec:	xor    ebp,ebp
   1400136ee:	movzx  esi,r8w
   1400136f2:	mov    rbx,rcx
   1400136f5:	lea    r9,[rip+0x30634]        # 0x140043d30
   1400136fc:	movzx  edi,bp
   1400136ff:	cmp    bp,r8w
   140013703:	jae    0x140013756
   140013705:	movzx  eax,bp
   140013708:	cmp    bp,r10w
   14001370c:	jge    0x140013740
   14001370e:	movzx  r8d,BYTE PTR [r9]
   140013712:	mov    r11,QWORD PTR [rip+0x2a9ef]        # 0x14003e108
   140013719:	nop    DWORD PTR [rax+0x0]
   140013720:	movsx  rcx,ax
   140013724:	lea    rdx,[r11+rcx*4]
   140013728:	cmp    BYTE PTR [rdx],r8b
   14001372b:	jne    0x140013737
   14001372d:	movzx  ecx,BYTE PTR [r9+0x1]
   140013732:	cmp    BYTE PTR [rdx+0x1],cl
   140013735:	je     0x140013745
   140013737:	inc    ax
   14001373a:	cmp    ax,r10w
   14001373e:	jl     0x140013720
   140013740:	movzx  eax,bp
   140013743:	jmp    0x14001375b
   140013745:	inc    di
   140013748:	mov    BYTE PTR [rbx],al
   14001374a:	inc    rbx
   14001374d:	add    r9,0x2
   140013751:	cmp    di,si
   140013754:	jb     0x140013705
   140013756:	mov    eax,0x1
   14001375b:	mov    rbx,QWORD PTR [rsp+0x8]
   140013760:	mov    rbp,QWORD PTR [rsp+0x10]
   140013765:	mov    rsi,QWORD PTR [rsp+0x18]
   14001376a:	mov    rdi,QWORD PTR [rsp+0x20]
   14001376f:	ret    
   140013770:	mov    rax,rsp
   140013773:	push   rbp
   140013774:	push   r12
   140013776:	push   r13
   140013778:	push   r14
   14001377a:	push   r15
   14001377c:	lea    rbp,[rax-0x5f]
   140013780:	sub    rsp,0xc0
   140013787:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   14001378f:	mov    QWORD PTR [rax+0x8],rbx
   140013793:	mov    QWORD PTR [rax+0x10],rsi
   140013797:	mov    QWORD PTR [rax+0x18],rdi
   14001379b:	mov    rax,QWORD PTR [rip+0x2885e]        # 0x14003c000
   1400137a2:	xor    rax,rsp
   1400137a5:	mov    QWORD PTR [rbp+0x2f],rax
   1400137a9:	mov    rax,QWORD PTR [rip+0x2e2f0]        # 0x140041aa0
   1400137b0:	mov    QWORD PTR [rbp-0x1],rax
   1400137b4:	xor    esi,esi
   1400137b6:	mov    WORD PTR [rip+0x2f8e7],si        # 0x1400430a4
   1400137bd:	mov    WORD PTR [rip+0x2f8d8],si        # 0x14004309c
   1400137c4:	mov    WORD PTR [rip+0x2f8e1],si        # 0x1400430ac
   1400137cb:	mov    DWORD PTR [rip+0x2f8bf],esi        # 0x140043090
   1400137d1:	mov    WORD PTR [rbp-0x47],si
   1400137d5:	mov    WORD PTR [rip+0x2f8d8],si        # 0x1400430b4
   1400137dc:	mov    WORD PTR [rip+0x2f8c5],si        # 0x1400430a8
   1400137e3:	mov    WORD PTR [rip+0x2f8aa],si        # 0x140043094
   1400137ea:	mov    WORD PTR [rip+0x2f897],si        # 0x140043088
   1400137f1:	mov    WORD PTR [rip+0x2f8a0],si        # 0x140043098
   1400137f8:	mov    WORD PTR [rip+0x2f8a1],si        # 0x1400430a0
   1400137ff:	mov    WORD PTR [rip+0x2fb3a],si        # 0x140043340
   140013806:	mov    ecx,esi
   140013808:	lea    rbx,[rip+0xfffffffffffec7f1]        # 0x140000000
   14001380f:	nop
   140013810:	movzx  eax,BYTE PTR [rcx+rbx*1+0x31370]
   140013818:	mov    BYTE PTR [rbp+rcx*1+0xf],al
   14001381c:	lea    rcx,[rcx+0x1]
   140013820:	test   al,al
   140013822:	jne    0x140013810
   140013824:	mov    ecx,0x10
   140013829:	call   QWORD PTR [rip+0x1c169]        # 0x14002f998
   14001382f:	mov    rdi,rax
   140013832:	mov    QWORD PTR [rbp-0x9],rax
   140013836:	test   rax,rax
   140013839:	je     0x14001386e
   14001383b:	mov    WORD PTR [rax],si
   14001383e:	mov    QWORD PTR [rax+0x8],rsi
   140013842:	lea    rcx,[rbp+0xf]
   140013846:	call   QWORD PTR [rip+0x1ba34]        # 0x14002f280
   14001384c:	test   eax,eax
   14001384e:	jle    0x140013871
   140013850:	inc    eax
   140013852:	movsxd rcx,eax
   140013855:	call   QWORD PTR [rip+0x1c13d]        # 0x14002f998
   14001385b:	mov    QWORD PTR [rdi+0x8],rax
   14001385f:	lea    rdx,[rbp+0xf]
   140013863:	mov    rcx,rax
   140013866:	call   QWORD PTR [rip+0x1b9ec]        # 0x14002f258
   14001386c:	jmp    0x140013871
   14001386e:	mov    rdi,rsi
   140013871:	mov    edx,0x1
   140013876:	mov    rcx,rdi
   140013879:	call   0x14002ab70
   14001387e:	mov    QWORD PTR [rbp-0x9],rax
   140013882:	test   rax,rax
   140013885:	jne    0x14001388f
   140013887:	or     eax,0xffffffff
   14001388a:	jmp    0x1400149ba
   14001388f:	test   rdi,rdi
   140013892:	je     0x1400138ac
   140013894:	mov    rcx,QWORD PTR [rdi+0x8]
   140013898:	test   rcx,rcx
   14001389b:	je     0x1400138a3
   14001389d:	call   QWORD PTR [rip+0x1c2d5]        # 0x14002fb78
   1400138a3:	mov    rcx,rdi
   1400138a6:	call   QWORD PTR [rip+0x1c2cc]        # 0x14002fb78
   1400138ac:	mov    rdx,rsi
   1400138af:	nop
   1400138b0:	movzx  eax,BYTE PTR [rdx+rbx*1+0x31380]
   1400138b8:	mov    BYTE PTR [rbp+rdx*1+0xf],al
   1400138bc:	lea    rdx,[rdx+0x1]
   1400138c0:	test   al,al
   1400138c2:	jne    0x1400138b0
   1400138c4:	mov    ecx,0x10
   1400138c9:	call   QWORD PTR [rip+0x1c0c9]        # 0x14002f998
   1400138cf:	mov    rdi,rax
   1400138d2:	mov    QWORD PTR [rbp-0x11],rax
   1400138d6:	test   rax,rax
   1400138d9:	je     0x14001390e
   1400138db:	mov    WORD PTR [rax],si
   1400138de:	mov    QWORD PTR [rax+0x8],rsi
   1400138e2:	lea    rcx,[rbp+0xf]
   1400138e6:	call   QWORD PTR [rip+0x1b994]        # 0x14002f280
   1400138ec:	test   eax,eax
   1400138ee:	jle    0x140013911
   1400138f0:	inc    eax
   1400138f2:	movsxd rcx,eax
   1400138f5:	call   QWORD PTR [rip+0x1c09d]        # 0x14002f998
   1400138fb:	mov    QWORD PTR [rdi+0x8],rax
   1400138ff:	lea    rdx,[rbp+0xf]
   140013903:	mov    rcx,rax
   140013906:	call   QWORD PTR [rip+0x1b94c]        # 0x14002f258
   14001390c:	jmp    0x140013911
   14001390e:	mov    rdi,rsi
   140013911:	mov    edx,0xa
   140013916:	mov    rcx,rdi
   140013919:	call   0x14002ab70
   14001391e:	mov    r13,rax
   140013921:	mov    QWORD PTR [rbp-0x29],rax
   140013925:	test   rax,rax
   140013928:	je     0x140014781
   14001392e:	mov    rcx,rdi
   140013931:	call   0x14002af10
   140013936:	mov    r12d,0x2710
   14001393c:	mov    QWORD PTR [rbp-0x19],r12
   140013940:	mov    r14d,0x4b0
   140013946:	mov    QWORD PTR [rbp-0x11],r14
   14001394a:	mov    ecx,r12d
   14001394d:	call   QWORD PTR [rip+0x1bac5]        # 0x14002f418
   140013953:	mov    rbx,rax
   140013956:	mov    QWORD PTR [rip+0x2e08b],rax        # 0x1400419e8
   14001395d:	test   rax,rax
   140013960:	je     0x1400148a2
   140013966:	mov    edi,0x960
   14001396b:	mov    QWORD PTR [rbp-0x21],rdi
   14001396f:	mov    ecx,edi
   140013971:	call   QWORD PTR [rip+0x1baa1]        # 0x14002f418
   140013977:	mov    r8,rax
   14001397a:	mov    QWORD PTR [rip+0x2e06f],rax        # 0x1400419f0
   140013981:	test   rax,rax
   140013984:	je     0x1400148a2
   14001398a:	mov    WORD PTR [rip+0x2e067],si        # 0x1400419f8
   140013991:	movsx  rax,si
   140013995:	mov    rdi,r8
   140013998:	mov    ecx,r14d
   14001399b:	rep stos WORD PTR es:[rdi],ax
   14001399e:	mov    BYTE PTR [rbx],0x0
   1400139a1:	lea    rax,[rbx+0x1]
   1400139a5:	mov    ecx,0x9c
   1400139aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400139b0:	mov    QWORD PTR [rax],rsi
   1400139b3:	mov    QWORD PTR [rax+0x8],rsi
   1400139b7:	mov    QWORD PTR [rax+0x10],rsi
   1400139bb:	lea    rax,[rax+0x40]
   1400139bf:	mov    QWORD PTR [rax-0x28],rsi
   1400139c3:	mov    QWORD PTR [rax-0x20],rsi
   1400139c7:	mov    QWORD PTR [rax-0x18],rsi
   1400139cb:	mov    QWORD PTR [rax-0x10],rsi
   1400139cf:	mov    QWORD PTR [rax-0x8],rsi
   1400139d3:	dec    rcx
   1400139d6:	jne    0x1400139b0
   1400139d8:	mov    QWORD PTR [rax],rsi
   1400139db:	mov    DWORD PTR [rax+0x8],esi
   1400139de:	mov    WORD PTR [rax+0xc],si
   1400139e2:	mov    BYTE PTR [rax+0xe],sil
   1400139e6:	movzx  r9d,r12w
   1400139ea:	mov    WORD PTR [rbp-0x49],r12w
   1400139ef:	movzx  edi,si
   1400139f2:	mov    r15d,0x106
   1400139f8:	mov    r10d,0x7d00
   1400139fe:	movzx  esi,WORD PTR [rip+0x2c7ab]        # 0x1400401b0
   140013a05:	xor    eax,eax
   140013a07:	cmp    ax,si
   140013a0a:	jae    0x140013c4a
   140013a10:	mov    WORD PTR [rip+0x2e001],di        # 0x140041a18
   140013a17:	mov    rcx,QWORD PTR [rip+0x2cac2]        # 0x1400404e0
   140013a1e:	movzx  edx,WORD PTR [rcx+0x82]
   140013a25:	movsx  eax,di
   140013a28:	imul   edx,eax
   140013a2b:	add    edx,DWORD PTR [rcx+0x28]
   140013a2e:	mov    DWORD PTR [rip+0x2f65c],edx        # 0x140043090
   140013a34:	mov    rcx,QWORD PTR [rip+0x2c78d]        # 0x1400401c8
   140013a3b:	xor    r9d,r9d
   140013a3e:	xor    r8d,r8d
   140013a41:	mov    rcx,QWORD PTR [rcx]
   140013a44:	call   QWORD PTR [rip+0x1b7ce]        # 0x14002f218
   140013a4a:	mov    ebx,eax
   140013a4c:	lea    ecx,[rax+0x1]
   140013a4f:	test   ecx,0xfffffffe
   140013a55:	jne    0x140013a8e
   140013a57:	call   QWORD PTR [rip+0x1b703]        # 0x14002f160
   140013a5d:	cmp    eax,0x58
   140013a60:	jae    0x140013a74
   140013a62:	mov    ecx,eax
   140013a64:	lea    rax,[rip+0xfffffffffffec595]        # 0x140000000
   140013a6b:	mov    edx,DWORD PTR [rax+rcx*4+0x310a0]
   140013a72:	jmp    0x140013a77
   140013a74:	mov    edx,r15d
   140013a77:	mov    DWORD PTR [rip+0x2f63b],edx        # 0x1400430b8
   140013a7d:	mov    DWORD PTR [rip+0x2fa41],0x2        # 0x1400434c8
   140013a87:	mov    BYTE PTR [rip+0x2f932],0x0        # 0x1400433c0
   140013a8e:	cmp    ebx,0xffffffff
   140013a91:	je     0x140013887
   140013a97:	mov    rax,QWORD PTR [rip+0x2ca42]        # 0x1400404e0
   140013a9e:	movzx  ecx,WORD PTR [rax+0x82]
   140013aa5:	mov    esi,0x200
   140013aaa:	cmp    cx,si
   140013aad:	ja     0x140013887
   140013ab3:	movzx  r8d,cx
   140013ab7:	mov    rcx,QWORD PTR [rip+0x2c70a]        # 0x1400401c8
   140013abe:	xor    ebx,ebx
   140013ac0:	mov    QWORD PTR [rsp+0x20],rbx
   140013ac5:	lea    r9,[rbp-0x41]
   140013ac9:	lea    rdx,[rip+0x2f670]        # 0x140043140
   140013ad0:	mov    rcx,QWORD PTR [rcx]
   140013ad3:	call   QWORD PTR [rip+0x1b72f]        # 0x14002f208
   140013ad9:	test   eax,eax
   140013adb:	jne    0x140013b13
   140013add:	call   QWORD PTR [rip+0x1b67d]        # 0x14002f160
   140013ae3:	cmp    eax,0x58
   140013ae6:	jae    0x140013afa
   140013ae8:	mov    eax,eax
   140013aea:	lea    rcx,[rip+0xfffffffffffec50f]        # 0x140000000
   140013af1:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140013af8:	jmp    0x140013afd
   140013afa:	mov    ecx,r15d
   140013afd:	mov    DWORD PTR [rip+0x2f5b5],ecx        # 0x1400430b8
   140013b03:	mov    DWORD PTR [rip+0x2f9bb],0x2        # 0x1400434c8
   140013b0d:	mov    BYTE PTR [rip+0x2f8ad],bl        # 0x1400433c0
   140013b13:	mov    rax,QWORD PTR [rip+0x2c9c6]        # 0x1400404e0
   140013b1a:	movzx  ecx,WORD PTR [rax+0x82]
   140013b21:	cmp    DWORD PTR [rbp-0x41],ecx
   140013b24:	jne    0x140013887
   140013b2a:	mov    QWORD PTR [rsp+0x20],rbx
   140013b2f:	lea    r9,[rbp-0x2d]
   140013b33:	mov    r8d,esi
   140013b36:	lea    rdx,[rip+0x2f603]        # 0x140043140
   140013b3d:	mov    rcx,QWORD PTR [r13+0x0]
   140013b41:	call   QWORD PTR [rip+0x1b6c9]        # 0x14002f210
   140013b47:	test   eax,eax
   140013b49:	jne    0x140013b81
   140013b4b:	call   QWORD PTR [rip+0x1b60f]        # 0x14002f160
   140013b51:	cmp    eax,0x58
   140013b54:	jae    0x140013b68
   140013b56:	mov    eax,eax
   140013b58:	lea    rcx,[rip+0xfffffffffffec4a1]        # 0x140000000
   140013b5f:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140013b66:	jmp    0x140013b6b
   140013b68:	mov    ecx,r15d
   140013b6b:	mov    DWORD PTR [rip+0x2f547],ecx        # 0x1400430b8
   140013b71:	mov    DWORD PTR [rip+0x2f94d],0x2        # 0x1400434c8
   140013b7b:	mov    BYTE PTR [rip+0x2f83f],bl        # 0x1400433c0
   140013b81:	cmp    DWORD PTR [rbp-0x2d],esi
   140013b84:	jne    0x140014781
   140013b8a:	cmp    di,r14w
   140013b8e:	jb     0x140013c08
   140013b90:	mov    r8,QWORD PTR [rbp-0x21]
   140013b94:	movzx  ecx,r8w
   140013b98:	mov    eax,0x66666667
   140013b9d:	imul   ecx
   140013b9f:	sar    edx,0x2
   140013ba2:	mov    eax,edx
   140013ba4:	shr    eax,0x1f
   140013ba7:	add    edx,eax
   140013ba9:	add    dx,r8w
   140013bad:	mov    eax,0x7d00
   140013bb2:	cmp    dx,ax
   140013bb5:	ja     0x14001452c
   140013bbb:	movzx  edx,dx
   140013bbe:	mov    rcx,QWORD PTR [rip+0x2de2b]        # 0x1400419f0
   140013bc5:	call   QWORD PTR [rip+0x1b835]        # 0x14002f400
   140013bcb:	mov    r8,rax
   140013bce:	mov    QWORD PTR [rip+0x2de1b],rax        # 0x1400419f0
   140013bd5:	test   rax,rax
   140013bd8:	je     0x1400148a2
   140013bde:	movzx  ecx,r14w
   140013be2:	mov    eax,0x66666667
   140013be7:	imul   ecx
   140013be9:	sar    edx,0x2
   140013bec:	mov    eax,edx
   140013bee:	shr    eax,0x1f
   140013bf1:	add    edx,eax
   140013bf3:	add    r14w,dx
   140013bf7:	mov    QWORD PTR [rbp-0x11],r14
   140013bfb:	movzx  eax,r14w
   140013bff:	add    ax,ax
   140013c02:	mov    WORD PTR [rbp-0x21],ax
   140013c06:	jmp    0x140013c0f
   140013c08:	mov    r8,QWORD PTR [rip+0x2dde1]        # 0x1400419f0
   140013c0f:	movzx  eax,di
   140013c12:	lea    rdx,[rax+rax*1]
   140013c16:	mov    rax,QWORD PTR [rip+0x2a4d3]        # 0x14003e0f0
   140013c1d:	movzx  ecx,WORD PTR [rdx+rax*1]
   140013c21:	mov    WORD PTR [rdx+r8*1],cx
   140013c26:	inc    di
   140013c29:	movzx  esi,WORD PTR [rip+0x2c580]        # 0x1400401b0
   140013c30:	cmp    di,si
   140013c33:	jb     0x140013a10
   140013c39:	mov    rbx,QWORD PTR [rip+0x2dda8]        # 0x1400419e8
   140013c40:	movzx  r9d,r12w
   140013c44:	mov    r10d,0x7d00
   140013c4a:	movzx  eax,di
   140013c4d:	lea    rdx,[rax+rax*1]
   140013c51:	mov    rax,QWORD PTR [rip+0x2a498]        # 0x14003e0f0
   140013c58:	movzx  ecx,WORD PTR [rdx+rax*1]
   140013c5c:	mov    WORD PTR [rdx+r8*1],cx
   140013c61:	xor    r13d,r13d
   140013c64:	movzx  edi,r13w
   140013c68:	movsx  rax,si
   140013c6c:	lea    r14,[rax*2+0x2]
   140013c74:	mov    rcx,QWORD PTR [rip+0x2a475]        # 0x14003e0f0
   140013c7b:	cmp    r13w,WORD PTR [r14+rcx*1]
   140013c80:	jae    0x140013d21
   140013c86:	cmp    di,r12w
   140013c8a:	jb     0x140013cf4
   140013c8c:	movzx  ecx,r9w
   140013c90:	mov    eax,0x66666667
   140013c95:	imul   ecx
   140013c97:	sar    edx,0x2
   140013c9a:	mov    eax,edx
   140013c9c:	shr    eax,0x1f
   140013c9f:	add    edx,eax
   140013ca1:	add    dx,r9w
   140013ca5:	cmp    dx,r10w
   140013ca9:	ja     0x14001452c
   140013caf:	movzx  edx,dx
   140013cb2:	mov    rcx,rbx
   140013cb5:	call   QWORD PTR [rip+0x1b745]        # 0x14002f400
   140013cbb:	mov    rbx,rax
   140013cbe:	mov    QWORD PTR [rip+0x2dd23],rax        # 0x1400419e8
   140013cc5:	test   rax,rax
   140013cc8:	je     0x1400148a2
   140013cce:	movzx  ecx,r12w
   140013cd2:	mov    eax,0x66666667
   140013cd7:	imul   ecx
   140013cd9:	sar    edx,0x2
   140013cdc:	mov    eax,edx
   140013cde:	shr    eax,0x1f
   140013ce1:	add    edx,eax
   140013ce3:	add    r12w,dx
   140013ce7:	mov    QWORD PTR [rbp-0x19],r12
   140013ceb:	movzx  r9d,r12w
   140013cef:	mov    WORD PTR [rbp-0x49],r12w
   140013cf4:	movzx  edx,di
   140013cf7:	mov    rax,QWORD PTR [rip+0x2a3ea]        # 0x14003e0e8
   140013cfe:	movzx  ecx,BYTE PTR [rdx+rax*1]
   140013d02:	mov    BYTE PTR [rdx+rbx*1],cl
   140013d05:	inc    di
   140013d08:	mov    rcx,QWORD PTR [rip+0x2a3e1]        # 0x14003e0f0
   140013d0f:	cmp    di,WORD PTR [r14+rcx*1]
   140013d14:	jae    0x140013d21
   140013d16:	mov    r10d,0x7d00
   140013d1c:	jmp    0x140013c86
   140013d21:	mov    DWORD PTR [rip+0x2f368],r13d        # 0x140043090
   140013d28:	mov    WORD PTR [rip+0x2dcc9],si        # 0x1400419f8
   140013d2f:	movzx  eax,si
   140013d32:	movzx  r14d,WORD PTR [rcx+rax*2+0x2]
   140013d38:	sub    r14w,WORD PTR [rcx+rax*2]
   140013d3d:	mov    WORD PTR [rbp-0x45],r14w
   140013d42:	mov    ecx,0x4
   140013d47:	call   QWORD PTR [rip+0x1b6cb]        # 0x14002f418
   140013d4d:	mov    r13,rax
   140013d50:	test   rax,rax
   140013d53:	je     0x1400148a2
   140013d59:	mov    edx,0x800
   140013d5e:	mov    rsi,QWORD PTR [rbp-0x9]
   140013d62:	mov    r8,rsi
   140013d65:	lea    rcx,[rip+0x307c4]        # 0x140044530
   140013d6c:	call   0x14002a640
   140013d71:	movzx  r12d,WORD PTR [rbp-0x41]
   140013d76:	test   ax,ax
   140013d79:	jle    0x1400148ac
   140013d7f:	nop
   140013d80:	mov    edi,DWORD PTR [rip+0x2a422]        # 0x14003e1a8
   140013d86:	mov    r9d,0x1
   140013d8c:	xor    r8d,r8d
   140013d8f:	xor    edx,edx
   140013d91:	mov    rcx,QWORD PTR [rsi]
   140013d94:	call   QWORD PTR [rip+0x1b47e]        # 0x14002f218
   140013d9a:	mov    ebx,eax
   140013d9c:	lea    ecx,[rax+0x1]
   140013d9f:	test   ecx,0xfffffffe
   140013da5:	jne    0x140013dde
   140013da7:	call   QWORD PTR [rip+0x1b3b3]        # 0x14002f160
   140013dad:	cmp    eax,0x58
   140013db0:	jae    0x140013dc4
   140013db2:	mov    ecx,eax
   140013db4:	lea    rax,[rip+0xfffffffffffec245]        # 0x140000000
   140013dbb:	mov    edx,DWORD PTR [rax+rcx*4+0x310a0]
   140013dc2:	jmp    0x140013dc7
   140013dc4:	mov    edx,r15d
   140013dc7:	mov    DWORD PTR [rip+0x2f2eb],edx        # 0x1400430b8
   140013dcd:	mov    DWORD PTR [rip+0x2f6f1],0x2        # 0x1400434c8
   140013dd7:	mov    BYTE PTR [rip+0x2f5e2],0x0        # 0x1400433c0
   140013dde:	test   edi,edi
   140013de0:	je     0x140013df4
   140013de2:	imul   eax,ebx,0x64
   140013de5:	xor    edx,edx
   140013de7:	div    edi
   140013de9:	mov    edi,eax
   140013deb:	mov    WORD PTR [rip+0x2b06a],ax        # 0x14003ee5c
   140013df2:	jmp    0x140013dfb
   140013df4:	movzx  edi,WORD PTR [rip+0x2b061]        # 0x14003ee5c
   140013dfb:	movzx  r8d,di
   140013dff:	movzx  edx,WORD PTR [rip+0x2b03e]        # 0x14003ee44
   140013e06:	mov    ecx,r8d
   140013e09:	sub    ecx,edx
   140013e0b:	cmp    ecx,0x1
   140013e0e:	jl     0x140013e67
   140013e10:	inc    dx
   140013e13:	mov    WORD PTR [rip+0x2b02a],dx        # 0x14003ee44
   140013e1a:	mov    WORD PTR [rip+0x2a383],di        # 0x14003e1a4
   140013e21:	movzx  ecx,WORD PTR [rip+0x2b038]        # 0x14003ee60
   140013e28:	imul   ecx,r8d
   140013e2c:	mov    eax,0x51eb851f
   140013e31:	imul   ecx
   140013e33:	mov    ecx,edx
   140013e35:	sar    ecx,0x5
   140013e38:	mov    eax,ecx
   140013e3a:	shr    eax,0x1f
   140013e3d:	add    ecx,eax
   140013e3f:	add    cx,WORD PTR [rip+0x2b002]        # 0x14003ee48
   140013e46:	mov    WORD PTR [rip+0x2b003],cx        # 0x14003ee50
   140013e4d:	movzx  r8d,di
   140013e51:	lea    rdx,[rip+0x2a358]        # 0x14003e1b0
   140013e58:	call   QWORD PTR [rip+0x2dc4a]        # 0x140041aa8
   140013e5e:	test   ax,ax
   140013e61:	jne    0x140014460
   140013e67:	inc    WORD PTR [rip+0x2f232]        # 0x1400430a0
   140013e6e:	lea    r9,[rip+0x306bb]        # 0x140044530
   140013e75:	mov    rax,r9
   140013e78:	xor    ebx,ebx
   140013e7a:	mov    ecx,ebx
   140013e7c:	nop    DWORD PTR [rax+0x0]
   140013e80:	cmp    BYTE PTR [rax],bl
   140013e82:	jne    0x140013e89
   140013e84:	cmp    BYTE PTR [rax+0x1],bl
   140013e87:	je     0x140013e91
   140013e89:	add    rax,0x2
   140013e8d:	inc    ecx
   140013e8f:	jmp    0x140013e80
   140013e91:	add    cx,cx
   140013e94:	mov    WORD PTR [rip+0x2afb9],cx        # 0x14003ee54
   140013e9b:	mov    DWORD PTR [r13+0x0],0x20
   140013ea3:	mov    rax,r9
   140013ea6:	mov    rdx,r13
   140013ea9:	movzx  ecx,BYTE PTR [rip+0x30680]        # 0x140044530
   140013eb0:	or     cl,BYTE PTR [rip+0x3067b]        # 0x140044531
   140013eb6:	je     0x1400147a7
   140013ebc:	movzx  r8d,WORD PTR [r13+0x0]
   140013ec1:	cmp    WORD PTR [rax],r8w
   140013ec5:	jne    0x140013eeb
   140013ec7:	mov    rdi,rax
   140013eca:	nop    WORD PTR [rax+rax*1+0x0]
   140013ed0:	lea    rdx,[rdx+0x2]
   140013ed4:	movzx  ecx,WORD PTR [rdx]
   140013ed7:	test   cx,cx
   140013eda:	je     0x140013efd
   140013edc:	add    rax,0x2
   140013ee0:	cmp    WORD PTR [rax],cx
   140013ee3:	je     0x140013ed0
   140013ee5:	mov    rax,rdi
   140013ee8:	mov    rdx,r13
   140013eeb:	add    rax,0x2
   140013eef:	movzx  ecx,BYTE PTR [rax+0x1]
   140013ef3:	or     cl,BYTE PTR [rax]
   140013ef5:	je     0x1400147a7
   140013efb:	jmp    0x140013ec1
   140013efd:	test   rdi,rdi
   140013f00:	je     0x1400147a7
   140013f06:	mov    rax,r9
   140013f09:	mov    ecx,ebx
   140013f0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013f10:	cmp    BYTE PTR [rax],bl
   140013f12:	jne    0x140013f19
   140013f14:	cmp    BYTE PTR [rax+0x1],bl
   140013f17:	je     0x140013f21
   140013f19:	add    rax,0x2
   140013f1d:	inc    ecx
   140013f1f:	jmp    0x140013f10
   140013f21:	add    cx,cx
   140013f24:	add    WORD PTR [rip+0x2f171],cx        # 0x14004309c
   140013f2b:	mov    WORD PTR [rdi],bx
   140013f2e:	add    rdi,0x2
   140013f32:	lea    rdx,[rbp-0x39]
   140013f36:	mov    rcx,rdi
   140013f39:	call   0x14002a550
   140013f3e:	test   ax,ax
   140013f41:	je     0x14001478b
   140013f47:	movzx  eax,ax
   140013f4a:	add    rdi,rax
   140013f4d:	lea    rdx,[rbp-0x31]
   140013f51:	mov    rcx,rdi
   140013f54:	call   0x14002a550
   140013f59:	test   ax,ax
   140013f5c:	je     0x1400148a2
   140013f62:	movzx  eax,ax
   140013f65:	add    rdi,rax
   140013f68:	lea    rdx,[rbp-0x35]
   140013f6c:	mov    rcx,rdi
   140013f6f:	call   0x14002a550
   140013f74:	test   ax,ax
   140013f77:	je     0x1400148a2
   140013f7d:	movzx  eax,ax
   140013f80:	add    rdi,rax
   140013f83:	lea    rdx,[rbp-0x2d]
   140013f87:	mov    rcx,rdi
   140013f8a:	call   0x14002a550
   140013f8f:	test   ax,ax
   140013f92:	je     0x1400148a2
   140013f98:	movzx  ecx,ax
   140013f9b:	add    rcx,rdi
   140013f9e:	lea    rdx,[rbp-0x41]
   140013fa2:	call   0x14002a550
   140013fa7:	test   ax,ax
   140013faa:	je     0x1400148a2
   140013fb0:	movzx  edx,bx
   140013fb3:	movzx  r9d,WORD PTR [rbp-0x39]
   140013fb8:	movzx  ecx,WORD PTR [rbp-0x31]
   140013fbc:	movzx  edi,WORD PTR [rbp-0x35]
   140013fc0:	movzx  r10d,WORD PTR [rbp-0x2d]
   140013fc5:	movzx  r8d,WORD PTR [rip+0x2ae97]        # 0x14003ee64
   140013fcd:	cmp    bx,r8w
   140013fd1:	jge    0x140014006
   140013fd3:	mov    rax,QWORD PTR [rbp-0x1]
   140013fd7:	add    rax,0x4
   140013fdb:	nop    DWORD PTR [rax+rax*1+0x0]
   140013fe0:	cmp    WORD PTR [rax-0x4],cx
   140013fe4:	jne    0x140013ff9
   140013fe6:	cmp    WORD PTR [rax-0x2],r9w
   140013feb:	jne    0x140013ff9
   140013fed:	cmp    WORD PTR [rax],di
   140013ff0:	jne    0x140013ff9
   140013ff2:	cmp    WORD PTR [rax+0x2],r10w
   140013ff7:	je     0x140014006
   140013ff9:	add    rax,0xa
   140013ffd:	inc    dx
   140014000:	cmp    dx,r8w
   140014004:	jl     0x140013fe0
   140014006:	movzx  r8d,WORD PTR [rbp-0x41]
   14001400b:	mov    WORD PTR [rsp+0x30],di
   140014010:	mov    WORD PTR [rsp+0x28],cx
   140014015:	mov    WORD PTR [rsp+0x20],r10w
   14001401b:	test   r8w,r8w
   14001401f:	jne    0x140014024
   140014021:	xor    r8d,r8d
   140014024:	call   0x140014aa0
   140014029:	test   ax,ax
   14001402c:	jne    0x1400148a2
   140014032:	movsx  r8d,WORD PTR [rip+0x2f076]        # 0x1400430b0
   14001403a:	mov    ecx,0x1fe
   14001403f:	sub    ecx,r8d
   140014042:	movsxd r9,DWORD PTR [rip+0x2f047]        # 0x140043090
   140014049:	cmp    r9d,ecx
   14001404c:	jge    0x14001406c
   14001404e:	inc    r8w
   140014052:	lea    rcx,[rip+0x2f0e7]        # 0x140043140
   140014059:	add    rcx,r9
   14001405c:	call   0x140015320
   140014061:	mov    r15d,0x1
   140014067:	jmp    0x1400143ef
   14001406c:	movzx  ecx,WORD PTR [rip+0x2f039]        # 0x1400430ac
   140014073:	cmp    cx,WORD PTR [rip+0x2f026]        # 0x1400430a0
   14001407a:	cmovl  cx,WORD PTR [rip+0x2f01e]        # 0x1400430a0
   140014082:	mov    WORD PTR [rip+0x2f023],cx        # 0x1400430ac
   140014089:	mov    WORD PTR [rip+0x2f010],bx        # 0x1400430a0
   140014090:	movzx  ecx,WORD PTR [rip+0x2f00d]        # 0x1400430a4
   140014097:	cmp    cx,WORD PTR [rip+0x2effe]        # 0x14004309c
   14001409e:	cmovl  cx,WORD PTR [rip+0x2eff6]        # 0x14004309c
   1400140a6:	mov    WORD PTR [rip+0x2eff7],cx        # 0x1400430a4
   1400140ad:	mov    WORD PTR [rip+0x2efe8],bx        # 0x14004309c
   1400140b4:	movzx  ecx,WORD PTR [rip+0x2efdd]        # 0x140043098
   1400140bb:	lea    r10,[rip+0x2f07e]        # 0x140043140
   1400140c2:	movzx  edx,WORD PTR [rip+0x2efbf]        # 0x140043088
   1400140c9:	cmp    WORD PTR [rip+0x2efb4],bx        # 0x140043084
   1400140d0:	je     0x1400140f7
   1400140d2:	or     BYTE PTR [r9+r10*1],0xf
   1400140d7:	inc    r9d
   1400140da:	mov    DWORD PTR [rip+0x2efaf],r9d        # 0x140043090
   1400140e1:	test   cx,cx
   1400140e4:	je     0x1400140f0
   1400140e6:	inc    dx
   1400140e9:	mov    WORD PTR [rip+0x2ef98],dx        # 0x140043088
   1400140f0:	mov    WORD PTR [rip+0x2ef8d],bx        # 0x140043084
   1400140f7:	test   cx,cx
   1400140fa:	je     0x14001413e
   1400140fc:	cmp    WORD PTR [rip+0x2efb1],bx        # 0x1400430b4
   140014103:	je     0x140014128
   140014105:	movsx  eax,WORD PTR [rip+0x2ef88]        # 0x140043094
   14001410c:	mov    ecx,0x1
   140014111:	sub    ecx,eax
   140014113:	movsx  eax,dx
   140014116:	sub    ecx,eax
   140014118:	add    r9d,ecx
   14001411b:	movsxd rax,r9d
   14001411e:	or     BYTE PTR [rax+r10*1],0xf
   140014123:	inc    r9d
   140014126:	jmp    0x140014137
   140014128:	movsx  ecx,WORD PTR [rip+0x2ef65]        # 0x140043094
   14001412f:	movsx  eax,dx
   140014132:	add    ecx,eax
   140014134:	sub    r9d,ecx
   140014137:	mov    DWORD PTR [rip+0x2ef52],r9d        # 0x140043090
   14001413e:	mov    esi,0x200
   140014143:	cmp    r9d,esi
   140014146:	jge    0x140014166
   140014148:	movsxd rdi,r9d
   14001414b:	add    rdi,r10
   14001414e:	mov    edx,esi
   140014150:	sub    edx,r9d
   140014153:	mov    eax,0xff
   140014158:	mov    ecx,edx
   14001415a:	rep stos BYTE PTR es:[rdi],al
   14001415c:	add    r9d,edx
   14001415f:	mov    DWORD PTR [rip+0x2ef2a],r9d        # 0x140043090
   140014166:	mov    QWORD PTR [rsp+0x20],rbx
   14001416b:	lea    r9,[rbp-0x3d]
   14001416f:	mov    r8d,esi
   140014172:	mov    rdx,r10
   140014175:	mov    rax,QWORD PTR [rbp-0x29]
   140014179:	mov    rcx,QWORD PTR [rax]
   14001417c:	call   QWORD PTR [rip+0x1b08e]        # 0x14002f210
   140014182:	test   eax,eax
   140014184:	jne    0x1400141bc
   140014186:	call   QWORD PTR [rip+0x1afd4]        # 0x14002f160
   14001418c:	cmp    eax,0x58
   14001418f:	jae    0x1400141a3
   140014191:	mov    eax,eax
   140014193:	lea    rcx,[rip+0xfffffffffffebe66]        # 0x140000000
   14001419a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400141a1:	jmp    0x1400141a6
   1400141a3:	mov    ecx,r15d
   1400141a6:	mov    DWORD PTR [rip+0x2ef0c],ecx        # 0x1400430b8
   1400141ac:	mov    DWORD PTR [rip+0x2f312],0x2        # 0x1400434c8
   1400141b6:	mov    BYTE PTR [rip+0x2f204],bl        # 0x1400433c0
   1400141bc:	cmp    DWORD PTR [rbp-0x3d],esi
   1400141bf:	jne    0x140014781
   1400141c5:	mov    r15d,ebx
   1400141c8:	movzx  edi,WORD PTR [rip+0x2d829]        # 0x1400419f8
   1400141cf:	inc    di
   1400141d2:	mov    WORD PTR [rip+0x2d81f],di        # 0x1400419f8
   1400141d9:	mov    rbx,QWORD PTR [rbp-0x11]
   1400141dd:	cmp    di,bx
   1400141e0:	jb     0x140014257
   1400141e2:	mov    r8,QWORD PTR [rbp-0x21]
   1400141e6:	movzx  ecx,r8w
   1400141ea:	mov    eax,0x66666667
   1400141ef:	imul   ecx
   1400141f1:	sar    edx,0x2
   1400141f4:	mov    eax,edx
   1400141f6:	shr    eax,0x1f
   1400141f9:	add    edx,eax
   1400141fb:	add    dx,r8w
   1400141ff:	mov    eax,0x7d00
   140014204:	cmp    dx,ax
   140014207:	ja     0x14001452c
   14001420d:	movzx  edx,dx
   140014210:	mov    rcx,QWORD PTR [rip+0x2d7d9]        # 0x1400419f0
   140014217:	call   QWORD PTR [rip+0x1b1e3]        # 0x14002f400
   14001421d:	mov    r8,rax
   140014220:	mov    QWORD PTR [rip+0x2d7c9],rax        # 0x1400419f0
   140014227:	test   rax,rax
   14001422a:	je     0x1400148a2
   140014230:	movzx  ecx,bx
   140014233:	mov    eax,0x66666667
   140014238:	imul   ecx
   14001423a:	sar    edx,0x2
   14001423d:	mov    ecx,edx
   14001423f:	shr    ecx,0x1f
   140014242:	add    edx,ecx
   140014244:	add    bx,dx
   140014247:	mov    QWORD PTR [rbp-0x11],rbx
   14001424b:	movzx  eax,bx
   14001424e:	add    ax,ax
   140014251:	mov    WORD PTR [rbp-0x21],ax
   140014255:	jmp    0x14001425e
   140014257:	mov    r8,QWORD PTR [rip+0x2d792]        # 0x1400419f0
   14001425e:	xor    ecx,ecx
   140014260:	movzx  edx,cx
   140014263:	movzx  eax,BYTE PTR [rip+0x302c6]        # 0x140044530
   14001426a:	cmp    BYTE PTR [rip+0x2f0d0],al        # 0x140043340
   140014270:	jne    0x1400142ac
   140014272:	lea    r9,[rip+0x302b7]        # 0x140044530
   140014279:	lea    r10,[rip+0x2f0c0]        # 0x140043340
   140014280:	movzx  eax,BYTE PTR [rcx+r9*1+0x1]
   140014286:	cmp    BYTE PTR [rcx+r10*1+0x1],al
   14001428b:	jne    0x1400142ac
   14001428d:	cmp    BYTE PTR [rcx+r10*1],r15b
   140014291:	jne    0x140014299
   140014293:	cmp    BYTE PTR [rcx+r9*1],r15b
   140014297:	je     0x1400142ac
   140014299:	add    rcx,0x2
   14001429d:	add    dx,0x2
   1400142a1:	movzx  eax,BYTE PTR [rcx+r9*1]
   1400142a6:	cmp    BYTE PTR [rcx+r10*1],al
   1400142aa:	je     0x140014280
   1400142ac:	movsx  eax,dx
   1400142af:	cdq    
   1400142b0:	sub    eax,edx
   1400142b2:	sar    eax,1
   1400142b4:	mov    ebx,eax
   1400142b6:	inc    bx
   1400142b9:	movzx  ecx,di
   1400142bc:	lea    r14,[rcx-0x1]
   1400142c0:	lea    r14,[r8+r14*2]
   1400142c4:	movzx  r12d,WORD PTR [rbp-0x45]
   1400142c9:	add    r12w,WORD PTR [r14]
   1400142cd:	lea    rsi,[r8+rcx*2]
   1400142d1:	mov    WORD PTR [rsi],r12w
   1400142d5:	add    r12w,bx
   1400142d9:	cmp    r12w,WORD PTR [rbp-0x19]
   1400142de:	jbe    0x140014354
   1400142e0:	movzx  r8d,WORD PTR [rbp-0x49]
   1400142e5:	mov    eax,0x66666667
   1400142ea:	imul   r8d
   1400142ed:	sar    edx,0x2
   1400142f0:	mov    eax,edx
   1400142f2:	shr    eax,0x1f
   1400142f5:	add    edx,eax
   1400142f7:	add    dx,r8w
   1400142fb:	mov    eax,0x7d00
   140014300:	cmp    dx,ax
   140014303:	ja     0x14001452c
   140014309:	movzx  edx,dx
   14001430c:	mov    rcx,QWORD PTR [rip+0x2d6d5]        # 0x1400419e8
   140014313:	call   QWORD PTR [rip+0x1b0e7]        # 0x14002f400
   140014319:	mov    rdi,rax
   14001431c:	mov    QWORD PTR [rip+0x2d6c5],rax        # 0x1400419e8
   140014323:	test   rax,rax
   140014326:	je     0x1400148a2
   14001432c:	mov    r8,QWORD PTR [rbp-0x19]
   140014330:	movzx  ecx,r8w
   140014334:	mov    eax,0x66666667
   140014339:	imul   ecx
   14001433b:	sar    edx,0x2
   14001433e:	mov    ecx,edx
   140014340:	shr    ecx,0x1f
   140014343:	add    edx,ecx
   140014345:	add    r8w,dx
   140014349:	mov    QWORD PTR [rbp-0x19],r8
   14001434d:	mov    WORD PTR [rbp-0x49],r8w
   140014352:	jmp    0x14001435b
   140014354:	mov    rdi,QWORD PTR [rip+0x2d68d]        # 0x1400419e8
   14001435b:	movsx  rcx,WORD PTR [rsi]
   14001435f:	add    rcx,rdi
   140014362:	movzx  r8d,bx
   140014366:	call   0x140015500
   14001436b:	test   ax,ax
   14001436e:	je     0x1400148a2
   140014374:	movzx  eax,WORD PTR [rsi]
   140014377:	sub    ax,WORD PTR [r14]
   14001437b:	movzx  ecx,WORD PTR [rbp-0x47]
   14001437f:	cmp    cx,ax
   140014382:	cmovb  cx,ax
   140014386:	mov    WORD PTR [rbp-0x47],cx
   14001438a:	movzx  r14d,bx
   14001438e:	mov    WORD PTR [rbp-0x45],bx
   140014392:	xor    ebx,ebx
   140014394:	mov    DWORD PTR [rip+0x2ecf6],ebx        # 0x140043090
   14001439a:	lea    r8d,[rbx+0x1]
   14001439e:	mov    rsi,QWORD PTR [rbp-0x9]
   1400143a2:	mov    rcx,rsi
   1400143a5:	cmp    WORD PTR [rip+0x2ecec],bx        # 0x140043098
   1400143ac:	movsx  edx,WORD PTR [rip+0x2ecf5]        # 0x1400430a8
   1400143b3:	jne    0x1400143bc
   1400143b5:	movsx  edx,WORD PTR [rip+0x2aa98]        # 0x14003ee54
   1400143bc:	neg    edx
   1400143be:	call   0x14002ad10
   1400143c3:	cmp    eax,0xffffffff
   1400143c6:	je     0x140013887
   1400143cc:	mov    WORD PTR [rip+0x2ecd5],bx        # 0x1400430a8
   1400143d3:	mov    WORD PTR [rip+0x2ecbe],bx        # 0x140043098
   1400143da:	mov    WORD PTR [rip+0x2ecd3],bx        # 0x1400430b4
   1400143e1:	mov    WORD PTR [rip+0x2eca0],bx        # 0x140043088
   1400143e8:	mov    WORD PTR [rip+0x30141],bx        # 0x140044530
   1400143ef:	lea    rdi,[rip+0x3013a]        # 0x140044530
   1400143f6:	mov    rcx,rdi
   1400143f9:	lea    rax,[rip+0x2ef40]        # 0x140043340
   140014400:	mov    rdx,rax
   140014403:	movzx  eax,BYTE PTR [rcx]
   140014406:	test   al,al
   140014408:	jne    0x14001440f
   14001440a:	cmp    BYTE PTR [rcx+0x1],al
   14001440d:	je     0x140014422
   14001440f:	mov    BYTE PTR [rdx],al
   140014411:	movzx  eax,BYTE PTR [rcx+0x1]
   140014415:	mov    BYTE PTR [rdx+0x1],al
   140014418:	add    rdx,0x2
   14001441c:	add    rcx,0x2
   140014420:	jmp    0x140014403
   140014422:	movzx  eax,BYTE PTR [rcx]
   140014425:	mov    BYTE PTR [rdx],al
   140014427:	movzx  eax,BYTE PTR [rcx+0x1]
   14001442b:	mov    BYTE PTR [rdx+0x1],al
   14001442e:	mov    WORD PTR [rip+0x2ec7b],bx        # 0x1400430b0
   140014435:	mov    WORD PTR [rip+0x2ec50],bx        # 0x14004308c
   14001443c:	mov    edx,0x800
   140014441:	mov    r8,rsi
   140014444:	mov    rcx,rdi
   140014447:	call   0x14002a640
   14001444c:	test   ax,ax
   14001444f:	jle    0x140014536
   140014455:	mov    r15d,0x106
   14001445b:	jmp    0x140013d80
   140014460:	test   r13,r13
   140014463:	je     0x14001446e
   140014465:	mov    rcx,r13
   140014468:	call   QWORD PTR [rip+0x1b012]        # 0x14002f480
   14001446e:	call   0x1400049e0
   140014473:	mov    rcx,QWORD PTR [rsi]
   140014476:	call   QWORD PTR [rip+0x1ad84]        # 0x14002f200
   14001447c:	test   eax,eax
   14001447e:	je     0x140014498
   140014480:	xor    ebx,ebx
   140014482:	mov    QWORD PTR [rsi],rbx
   140014485:	mov    rcx,rsi
   140014488:	call   0x14002a950
   14001448d:	mov    rcx,rsi
   140014490:	call   QWORD PTR [rip+0x1b6e2]        # 0x14002fb78
   140014496:	jmp    0x1400144d1
   140014498:	call   QWORD PTR [rip+0x1acc2]        # 0x14002f160
   14001449e:	cmp    eax,0x58
   1400144a1:	jae    0x1400144b5
   1400144a3:	mov    eax,eax
   1400144a5:	lea    rcx,[rip+0xfffffffffffebb54]        # 0x140000000
   1400144ac:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400144b3:	jmp    0x1400144b8
   1400144b5:	mov    ecx,r15d
   1400144b8:	mov    DWORD PTR [rip+0x2ebfa],ecx        # 0x1400430b8
   1400144be:	mov    DWORD PTR [rip+0x2f000],0x2        # 0x1400434c8
   1400144c8:	mov    BYTE PTR [rip+0x2eef1],0x0        # 0x1400433c0
   1400144cf:	xor    ebx,ebx
   1400144d1:	mov    rdi,QWORD PTR [rbp-0x29]
   1400144d5:	mov    rcx,QWORD PTR [rdi]
   1400144d8:	call   QWORD PTR [rip+0x1ad22]        # 0x14002f200
   1400144de:	test   eax,eax
   1400144e0:	je     0x1400144f8
   1400144e2:	mov    QWORD PTR [rdi],rbx
   1400144e5:	mov    rcx,rdi
   1400144e8:	call   0x14002a950
   1400144ed:	mov    rcx,rdi
   1400144f0:	call   QWORD PTR [rip+0x1b682]        # 0x14002fb78
   1400144f6:	jmp    0x14001452c
   1400144f8:	call   QWORD PTR [rip+0x1ac62]        # 0x14002f160
   1400144fe:	cmp    eax,0x58
   140014501:	jae    0x140014514
   140014503:	mov    eax,eax
   140014505:	lea    rcx,[rip+0xfffffffffffebaf4]        # 0x140000000
   14001450c:	mov    r15d,DWORD PTR [rcx+rax*4+0x310a0]
   140014514:	mov    DWORD PTR [rip+0x2eb9d],r15d        # 0x1400430b8
   14001451b:	mov    DWORD PTR [rip+0x2efa3],0x2        # 0x1400434c8
   140014525:	mov    BYTE PTR [rip+0x2ee94],0x0        # 0x1400433c0
   14001452c:	mov    eax,0xfffffffc
   140014531:	jmp    0x1400149ba
   140014536:	test   r15w,r15w
   14001453a:	je     0x1400148b5
   140014540:	movzx  ebx,WORD PTR [rip+0x2d4b1]        # 0x1400419f8
   140014547:	inc    bx
   14001454a:	mov    WORD PTR [rip+0x2d4a7],bx        # 0x1400419f8
   140014551:	cmp    bx,WORD PTR [rbp-0x11]
   140014555:	jb     0x1400145a4
   140014557:	mov    rdi,QWORD PTR [rbp-0x21]
   14001455b:	movzx  ecx,di
   14001455e:	mov    eax,0x66666667
   140014563:	imul   ecx
   140014565:	sar    edx,0x2
   140014568:	mov    eax,edx
   14001456a:	shr    eax,0x1f
   14001456d:	add    edx,eax
   14001456f:	add    dx,di
   140014572:	mov    eax,0x7d00
   140014577:	cmp    dx,ax
   14001457a:	ja     0x14001452c
   14001457c:	movzx  edx,dx
   14001457f:	mov    rcx,QWORD PTR [rip+0x2d46a]        # 0x1400419f0
   140014586:	call   QWORD PTR [rip+0x1ae74]        # 0x14002f400
   14001458c:	mov    r9,rax
   14001458f:	mov    QWORD PTR [rip+0x2d45a],rax        # 0x1400419f0
   140014596:	test   rax,rax
   140014599:	jne    0x1400145ab
   14001459b:	lea    eax,[r9-0x3]
   14001459f:	jmp    0x1400149ba
   1400145a4:	mov    r9,QWORD PTR [rip+0x2d445]        # 0x1400419f0
   1400145ab:	lea    rcx,[rip+0x2eb8e]        # 0x140043140
   1400145b2:	cmp    WORD PTR [rip+0x2eaca],0x0        # 0x140043084
   1400145ba:	je     0x1400145f0
   1400145bc:	movsxd r8,DWORD PTR [rip+0x2eacd]        # 0x140043090
   1400145c3:	or     BYTE PTR [r8+rcx*1],0xf
   1400145c8:	inc    r8d
   1400145cb:	mov    DWORD PTR [rip+0x2eabe],r8d        # 0x140043090
   1400145d2:	cmp    WORD PTR [rip+0x2eabe],0x0        # 0x140043098
   1400145da:	je     0x1400145e3
   1400145dc:	inc    WORD PTR [rip+0x2eaa5]        # 0x140043088
   1400145e3:	xor    r10d,r10d
   1400145e6:	mov    WORD PTR [rip+0x2ea96],r10w        # 0x140043084
   1400145ee:	jmp    0x1400145fa
   1400145f0:	mov    r8d,DWORD PTR [rip+0x2ea99]        # 0x140043090
   1400145f7:	xor    r10d,r10d
   1400145fa:	mov    r15d,0x200
   140014600:	cmp    r8d,r15d
   140014603:	jge    0x140014624
   140014605:	movsxd rdi,r8d
   140014608:	add    rdi,rcx
   14001460b:	mov    ecx,r15d
   14001460e:	sub    ecx,r8d
   140014611:	mov    edx,ecx
   140014613:	mov    eax,0xff
   140014618:	rep stos BYTE PTR es:[rdi],al
   14001461a:	add    r8d,edx
   14001461d:	mov    DWORD PTR [rip+0x2ea6c],r8d        # 0x140043090
   140014624:	movzx  edx,r10w
   140014628:	movzx  eax,BYTE PTR [rip+0x2ff01]        # 0x140044530
   14001462f:	cmp    BYTE PTR [rip+0x2ed0b],al        # 0x140043340
   140014635:	jne    0x14001467b
   140014637:	mov    rcx,r10
   14001463a:	lea    rdi,[rip+0x2feef]        # 0x140044530
   140014641:	lea    r8,[rip+0x2ecf8]        # 0x140043340
   140014648:	nop    DWORD PTR [rax+rax*1+0x0]
   140014650:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1]
   140014655:	cmp    BYTE PTR [rcx+r8*1+0x1],al
   14001465a:	jne    0x14001467b
   14001465c:	cmp    BYTE PTR [rcx+r8*1],0x0
   140014661:	jne    0x140014669
   140014663:	cmp    BYTE PTR [rcx+rdi*1],0x0
   140014667:	je     0x14001467b
   140014669:	add    rcx,0x2
   14001466d:	add    dx,0x2
   140014671:	movzx  eax,BYTE PTR [rcx+rdi*1]
   140014675:	cmp    BYTE PTR [rcx+r8*1],al
   140014679:	je     0x140014650
   14001467b:	movsx  eax,dx
   14001467e:	cdq    
   14001467f:	sub    eax,edx
   140014681:	sar    eax,1
   140014683:	mov    edi,eax
   140014685:	inc    di
   140014688:	movzx  ecx,bx
   14001468b:	movzx  r12d,WORD PTR [r9+rcx*2-0x2]
   140014691:	add    r12w,r14w
   140014695:	lea    rbx,[r9+rcx*2]
   140014699:	mov    WORD PTR [rbx],r12w
   14001469d:	add    r12w,di
   1400146a1:	cmp    r12w,WORD PTR [rbp-0x19]
   1400146a6:	jbe    0x1400146f7
   1400146a8:	movzx  r8d,WORD PTR [rbp-0x49]
   1400146ad:	mov    eax,0x66666667
   1400146b2:	imul   r8d
   1400146b5:	sar    edx,0x2
   1400146b8:	mov    eax,edx
   1400146ba:	shr    eax,0x1f
   1400146bd:	add    edx,eax
   1400146bf:	add    dx,r8w
   1400146c3:	mov    eax,0x7d00
   1400146c8:	cmp    dx,ax
   1400146cb:	ja     0x14001452c
   1400146d1:	movzx  edx,dx
   1400146d4:	mov    rcx,QWORD PTR [rip+0x2d30d]        # 0x1400419e8
   1400146db:	call   QWORD PTR [rip+0x1ad1f]        # 0x14002f400
   1400146e1:	mov    QWORD PTR [rip+0x2d300],rax        # 0x1400419e8
   1400146e8:	test   rax,rax
   1400146eb:	jne    0x1400146fe
   1400146ed:	mov    eax,0xfffffffd
   1400146f2:	jmp    0x1400149ba
   1400146f7:	mov    rax,QWORD PTR [rip+0x2d2ea]        # 0x1400419e8
   1400146fe:	movsx  rcx,WORD PTR [rbx]
   140014702:	add    rcx,rax
   140014705:	movzx  r8d,di
   140014709:	call   0x140015500
   14001470e:	test   ax,ax
   140014711:	je     0x1400148a2
   140014717:	xor    r14d,r14d
   14001471a:	mov    QWORD PTR [rsp+0x20],r14
   14001471f:	lea    r9,[rbp-0x3d]
   140014723:	mov    r8d,r15d
   140014726:	lea    rdx,[rip+0x2ea13]        # 0x140043140
   14001472d:	mov    rbx,QWORD PTR [rbp-0x29]
   140014731:	mov    rcx,QWORD PTR [rbx]
   140014734:	call   QWORD PTR [rip+0x1aad6]        # 0x14002f210
   14001473a:	test   eax,eax
   14001473c:	jne    0x140014777
   14001473e:	call   QWORD PTR [rip+0x1aa1c]        # 0x14002f160
   140014744:	cmp    eax,0x58
   140014747:	jae    0x14001475b
   140014749:	mov    eax,eax
   14001474b:	lea    rcx,[rip+0xfffffffffffeb8ae]        # 0x140000000
   140014752:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140014759:	jmp    0x140014760
   14001475b:	mov    ecx,0x106
   140014760:	mov    DWORD PTR [rip+0x2e952],ecx        # 0x1400430b8
   140014766:	mov    DWORD PTR [rip+0x2ed58],0x2        # 0x1400434c8
   140014770:	mov    BYTE PTR [rip+0x2ec49],r14b        # 0x1400433c0
   140014777:	cmp    DWORD PTR [rbp-0x3d],r15d
   14001477b:	je     0x1400148bc
   140014781:	mov    eax,0xfffffffe
   140014786:	jmp    0x1400149ba
   14001478b:	movzx  eax,BYTE PTR [rdi]
   14001478e:	sub    al,0x30
   140014790:	cmp    al,0x9
   140014792:	ja     0x14001479d
   140014794:	cmp    BYTE PTR [rdi+0x1],bl
   140014797:	je     0x1400148a2
   14001479d:	mov    eax,0xfffffff9
   1400147a2:	jmp    0x1400149ba
   1400147a7:	test   r13,r13
   1400147aa:	je     0x1400147b5
   1400147ac:	mov    rcx,r13
   1400147af:	call   QWORD PTR [rip+0x1accb]        # 0x14002f480
   1400147b5:	call   0x1400049e0
   1400147ba:	mov    rcx,QWORD PTR [rsi]
   1400147bd:	call   QWORD PTR [rip+0x1aa3d]        # 0x14002f200
   1400147c3:	test   eax,eax
   1400147c5:	je     0x1400147f6
   1400147c7:	mov    QWORD PTR [rsi],rbx
   1400147ca:	mov    rdi,QWORD PTR [rsi+0x8]
   1400147ce:	test   rdi,rdi
   1400147d1:	je     0x1400147eb
   1400147d3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400147d7:	test   rcx,rcx
   1400147da:	je     0x1400147e2
   1400147dc:	call   QWORD PTR [rip+0x1b396]        # 0x14002fb78
   1400147e2:	mov    rcx,rdi
   1400147e5:	call   QWORD PTR [rip+0x1b38d]        # 0x14002fb78
   1400147eb:	mov    rcx,rsi
   1400147ee:	call   QWORD PTR [rip+0x1b384]        # 0x14002fb78
   1400147f4:	jmp    0x14001482c
   1400147f6:	call   QWORD PTR [rip+0x1a964]        # 0x14002f160
   1400147fc:	cmp    eax,0x58
   1400147ff:	jae    0x140014813
   140014801:	mov    eax,eax
   140014803:	lea    rcx,[rip+0xfffffffffffeb7f6]        # 0x140000000
   14001480a:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140014811:	jmp    0x140014816
   140014813:	mov    ecx,r15d
   140014816:	mov    DWORD PTR [rip+0x2e89c],ecx        # 0x1400430b8
   14001481c:	mov    DWORD PTR [rip+0x2eca2],0x2        # 0x1400434c8
   140014826:	mov    BYTE PTR [rip+0x2eb94],bl        # 0x1400433c0
   14001482c:	mov    rbx,QWORD PTR [rbp-0x29]
   140014830:	mov    rcx,QWORD PTR [rbx]
   140014833:	call   QWORD PTR [rip+0x1a9c7]        # 0x14002f200
   140014839:	test   eax,eax
   14001483b:	je     0x14001486e
   14001483d:	xor    eax,eax
   14001483f:	mov    QWORD PTR [rbx],rax
   140014842:	mov    rdi,QWORD PTR [rbx+0x8]
   140014846:	test   rdi,rdi
   140014849:	je     0x140014863
   14001484b:	mov    rcx,QWORD PTR [rdi+0x8]
   14001484f:	test   rcx,rcx
   140014852:	je     0x14001485a
   140014854:	call   QWORD PTR [rip+0x1b31e]        # 0x14002fb78
   14001485a:	mov    rcx,rdi
   14001485d:	call   QWORD PTR [rip+0x1b315]        # 0x14002fb78
   140014863:	mov    rcx,rbx
   140014866:	call   QWORD PTR [rip+0x1b30c]        # 0x14002fb78
   14001486c:	jmp    0x1400148a2
   14001486e:	call   QWORD PTR [rip+0x1a8ec]        # 0x14002f160
   140014874:	cmp    eax,0x58
   140014877:	jae    0x14001488a
   140014879:	mov    eax,eax
   14001487b:	lea    rcx,[rip+0xfffffffffffeb77e]        # 0x140000000
   140014882:	mov    r15d,DWORD PTR [rcx+rax*4+0x310a0]
   14001488a:	mov    DWORD PTR [rip+0x2e827],r15d        # 0x1400430b8
   140014891:	mov    DWORD PTR [rip+0x2ec2d],0x2        # 0x1400434c8
   14001489b:	mov    BYTE PTR [rip+0x2eb1e],0x0        # 0x1400433c0
   1400148a2:	mov    eax,0xfffffffd
   1400148a7:	jmp    0x1400149ba
   1400148ac:	mov    rbx,QWORD PTR [rbp-0x29]
   1400148b0:	xor    r14d,r14d
   1400148b3:	jmp    0x1400148c2
   1400148b5:	mov    rbx,QWORD PTR [rbp-0x29]
   1400148b9:	xor    r14d,r14d
   1400148bc:	mov    r15d,0x106
   1400148c2:	mov    WORD PTR [rip+0x2d130],r12w        # 0x1400419fa
   1400148ca:	mov    rcx,r13
   1400148cd:	call   QWORD PTR [rip+0x1abad]        # 0x14002f480
   1400148d3:	mov    rcx,QWORD PTR [rsi]
   1400148d6:	call   QWORD PTR [rip+0x1a924]        # 0x14002f200
   1400148dc:	test   eax,eax
   1400148de:	je     0x14001490f
   1400148e0:	mov    QWORD PTR [rsi],r14
   1400148e3:	mov    rdi,QWORD PTR [rsi+0x8]
   1400148e7:	test   rdi,rdi
   1400148ea:	je     0x140014904
   1400148ec:	mov    rcx,QWORD PTR [rdi+0x8]
   1400148f0:	test   rcx,rcx
   1400148f3:	je     0x1400148fb
   1400148f5:	call   QWORD PTR [rip+0x1b27d]        # 0x14002fb78
   1400148fb:	mov    rcx,rdi
   1400148fe:	call   QWORD PTR [rip+0x1b274]        # 0x14002fb78
   140014904:	mov    rcx,rsi
   140014907:	call   QWORD PTR [rip+0x1b26b]        # 0x14002fb78
   14001490d:	jmp    0x140014946
   14001490f:	call   QWORD PTR [rip+0x1a84b]        # 0x14002f160
   140014915:	cmp    eax,0x58
   140014918:	jae    0x14001492c
   14001491a:	mov    eax,eax
   14001491c:	lea    rcx,[rip+0xfffffffffffeb6dd]        # 0x140000000
   140014923:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14001492a:	jmp    0x14001492f
   14001492c:	mov    ecx,r15d
   14001492f:	mov    DWORD PTR [rip+0x2e783],ecx        # 0x1400430b8
   140014935:	mov    DWORD PTR [rip+0x2eb89],0x2        # 0x1400434c8
   14001493f:	mov    BYTE PTR [rip+0x2ea7a],0x0        # 0x1400433c0
   140014946:	mov    rcx,QWORD PTR [rbx]
   140014949:	call   QWORD PTR [rip+0x1a8b1]        # 0x14002f200
   14001494f:	test   eax,eax
   140014951:	je     0x140014982
   140014953:	mov    QWORD PTR [rbx],r14
   140014956:	mov    rdi,QWORD PTR [rbx+0x8]
   14001495a:	test   rdi,rdi
   14001495d:	je     0x140014977
   14001495f:	mov    rcx,QWORD PTR [rdi+0x8]
   140014963:	test   rcx,rcx
   140014966:	je     0x14001496e
   140014968:	call   QWORD PTR [rip+0x1b20a]        # 0x14002fb78
   14001496e:	mov    rcx,rdi
   140014971:	call   QWORD PTR [rip+0x1b201]        # 0x14002fb78
   140014977:	mov    rcx,rbx
   14001497a:	call   QWORD PTR [rip+0x1b1f8]        # 0x14002fb78
   140014980:	jmp    0x1400149b6
   140014982:	call   QWORD PTR [rip+0x1a7d8]        # 0x14002f160
   140014988:	cmp    eax,0x58
   14001498b:	jae    0x14001499e
   14001498d:	mov    eax,eax
   14001498f:	lea    rcx,[rip+0xfffffffffffeb66a]        # 0x140000000
   140014996:	mov    r15d,DWORD PTR [rcx+rax*4+0x310a0]
   14001499e:	mov    DWORD PTR [rip+0x2e713],r15d        # 0x1400430b8
   1400149a5:	mov    DWORD PTR [rip+0x2eb19],0x2        # 0x1400434c8
   1400149af:	mov    BYTE PTR [rip+0x2ea0a],0x0        # 0x1400433c0
   1400149b6:	movzx  eax,r14w
   1400149ba:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400149be:	xor    rcx,rsp
   1400149c1:	call   0x14002c960
   1400149c6:	lea    r11,[rsp+0xc0]
   1400149ce:	mov    rbx,QWORD PTR [r11+0x30]
   1400149d2:	mov    rsi,QWORD PTR [r11+0x38]
   1400149d6:	mov    rdi,QWORD PTR [r11+0x40]
   1400149da:	mov    rsp,r11
   1400149dd:	pop    r15
   1400149df:	pop    r14
   1400149e1:	pop    r13
   1400149e3:	pop    r12
   1400149e5:	pop    rbp
   1400149e6:	ret    
   1400149e7:	int3   
   1400149e8:	int3   
   1400149e9:	int3   
   1400149ea:	int3   
   1400149eb:	int3   
   1400149ec:	int3   
   1400149ed:	int3   
   1400149ee:	int3   
   1400149ef:	int3   
   1400149f0:	movzx  eax,BYTE PTR [rip+0x2fb39]        # 0x140044530
   1400149f7:	xor    r9d,r9d
   1400149fa:	cmp    BYTE PTR [rip+0x2e940],al        # 0x140043340
   140014a00:	movzx  edx,r9w
   140014a04:	jne    0x140014a52
   140014a06:	mov    ecx,r9d
   140014a09:	lea    r8,[rip+0xfffffffffffeb5f0]        # 0x140000000
   140014a10:	movzx  eax,BYTE PTR [rcx+r8*1+0x44531]
   140014a19:	cmp    BYTE PTR [rcx+r8*1+0x43341],al
   140014a21:	jne    0x140014a52
   140014a23:	cmp    BYTE PTR [rcx+r8*1+0x43340],r9b
   140014a2b:	jne    0x140014a37
   140014a2d:	cmp    BYTE PTR [rcx+r8*1+0x44530],r9b
   140014a35:	je     0x140014a82
   140014a37:	movzx  eax,BYTE PTR [rcx+r8*1+0x44532]
   140014a40:	add    rcx,0x2
   140014a44:	add    dx,0x2
   140014a48:	cmp    BYTE PTR [rcx+r8*1+0x43340],al
   140014a50:	je     0x140014a10
   140014a52:	movzx  eax,WORD PTR [rip+0x2a3fb]        # 0x14003ee54
   140014a59:	mov    WORD PTR [rip+0x2e637],r9w        # 0x140043098
   140014a61:	mov    WORD PTR [rip+0x2e61f],r9w        # 0x140043088
   140014a69:	mov    WORD PTR [rip+0x2e638],ax        # 0x1400430a8
   140014a70:	movzx  eax,WORD PTR [rip+0x2e60d]        # 0x140043084
   140014a77:	mov    WORD PTR [rip+0x2e636],ax        # 0x1400430b4
   140014a7e:	movzx  eax,dx
   140014a81:	ret    
   140014a82:	movzx  ecx,WORD PTR [rip+0x2a3cb]        # 0x14003ee54
   140014a89:	mov    eax,0x1
   140014a8e:	add    WORD PTR [rip+0x2e613],cx        # 0x1400430a8
   140014a95:	mov    WORD PTR [rip+0x2e5fc],ax        # 0x140043098
   140014a9c:	movzx  eax,dx
   140014a9f:	ret    
   140014aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140014aa5:	mov    QWORD PTR [rsp+0x10],rbp
   140014aaa:	mov    QWORD PTR [rsp+0x18],rsi
   140014aaf:	mov    WORD PTR [rsp+0x20],r9w
   140014ab5:	push   rdi
   140014ab6:	push   r12
   140014ab8:	push   r13
   140014aba:	push   r14
   140014abc:	push   r15
   140014abe:	sub    rsp,0x20
   140014ac2:	xor    ebx,ebx
   140014ac4:	movzx  r13d,r9w
   140014ac8:	movzx  r10d,r8w
   140014acc:	movzx  r15d,bx
   140014ad0:	movzx  ebp,bx
   140014ad3:	movzx  r11d,dx
   140014ad7:	call   0x1400149f0
   140014adc:	movsx  edi,ax
   140014adf:	mov    eax,edi
   140014ae1:	cdq    
   140014ae2:	sub    eax,edx
   140014ae4:	sar    eax,1
   140014ae6:	cmp    eax,0xf
   140014ae9:	jle    0x140014af0
   140014aeb:	mov    edi,0x1e
   140014af0:	movsx  rcx,WORD PTR [rip+0x2e5b8]        # 0x1400430b0
   140014af8:	movsx  eax,di
   140014afb:	lea    rsi,[rip+0x2e5be]        # 0x1400430c0
   140014b02:	cdq    
   140014b03:	mov    r9d,0x1
   140014b09:	mov    r12d,ebx
   140014b0c:	sub    eax,edx
   140014b0e:	lea    rdx,[rip+0x2fa1b]        # 0x140044530
   140014b15:	movzx  r14d,r9w
   140014b19:	sar    eax,1
   140014b1b:	shl    al,0x4
   140014b1e:	mov    BYTE PTR [rcx+rsi*1],al
   140014b21:	mov    rax,rdx
   140014b24:	cmp    BYTE PTR [rax],bl
   140014b26:	jne    0x140014b2d
   140014b28:	cmp    BYTE PTR [rax+0x1],bl
   140014b2b:	je     0x140014b36
   140014b2d:	add    rax,0x2
   140014b31:	inc    r12d
   140014b34:	jmp    0x140014b24
   140014b36:	add    r12w,r12w
   140014b3a:	cmp    di,r12w
   140014b3e:	jge    0x140014d41
   140014b44:	mov    rsi,QWORD PTR [rip+0x295bd]        # 0x14003e108
   140014b4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140014b50:	movsx  rax,di
   140014b54:	movzx  r8d,bx
   140014b58:	mov    r13d,0xff
   140014b5e:	movzx  r9d,BYTE PTR [rax+rdx*1]
   140014b63:	inc    eax
   140014b65:	movsxd rdx,eax
   140014b68:	lea    rax,[rip+0x2f9c1]        # 0x140044530
   140014b6f:	add    rdx,rax
   140014b72:	movsx  rax,r8w
   140014b76:	cmp    r9b,BYTE PTR [rsi+rax*4]
   140014b7a:	jne    0x140014b85
   140014b7c:	movzx  eax,BYTE PTR [rsi+rax*4+0x1]
   140014b81:	cmp    BYTE PTR [rdx],al
   140014b83:	je     0x140014b8f
   140014b85:	inc    r8w
   140014b89:	cmp    r8w,r13w
   140014b8d:	jl     0x140014b72
   140014b8f:	cmp    r8w,r13w
   140014b93:	movzx  r13d,WORD PTR [rsp+0x68]
   140014b99:	je     0x140014da5
   140014b9f:	movsx  rax,r8w
   140014ba3:	movzx  edx,BYTE PTR [rsi+rax*4+0x3]
   140014ba8:	cmp    dl,0xd
   140014bab:	jae    0x140014c07
   140014bad:	movzx  r9d,dl
   140014bb1:	movsx  eax,r15w
   140014bb5:	inc    r14w
   140014bb9:	lea    edx,[rax+rax*2]
   140014bbc:	movsx  eax,bp
   140014bbf:	lea    r8d,[rdx+rax*2]
   140014bc3:	movsx  edx,r14w
   140014bc7:	dec    edx
   140014bc9:	add    edx,r8d
   140014bcc:	and    edx,0x80000001
   140014bd2:	jge    0x140014bdb
   140014bd4:	dec    edx
   140014bd6:	or     edx,0xfffffffe
   140014bd9:	inc    edx
   140014bdb:	movsx  rax,cx
   140014bdf:	test   edx,edx
   140014be1:	jne    0x140014bf7
   140014be3:	lea    rdx,[rip+0x2e4d6]        # 0x1400430c0
   140014bea:	shl    r9b,0x4
   140014bee:	mov    BYTE PTR [rax+rdx*1],r9b
   140014bf2:	jmp    0x140014d1f
   140014bf7:	lea    r8,[rip+0x2e4c2]        # 0x1400430c0
   140014bfe:	or     BYTE PTR [rax+r8*1],r9b
   140014c02:	jmp    0x140014d15
   140014c07:	cmp    dl,0x2d
   140014c0a:	jae    0x140014c9d
   140014c10:	inc    bp
   140014c13:	movzx  r9d,dl
   140014c17:	cmp    dl,0x1d
   140014c1a:	jae    0x140014c28
   140014c1c:	sub    r9w,0xd
   140014c21:	mov    eax,0xd0
   140014c26:	jmp    0x140014c32
   140014c28:	sub    r9w,0x1d
   140014c2d:	mov    eax,0xe0
   140014c32:	or     r9w,ax
   140014c36:	movsx  eax,r15w
   140014c3a:	lea    edx,[rax+rax*2]
   140014c3d:	movsx  eax,bp
   140014c40:	lea    r8d,[rdx+rax*2]
   140014c44:	movsx  edx,r14w
   140014c48:	add    edx,0xfffffffe
   140014c4b:	add    edx,r8d
   140014c4e:	and    edx,0x80000001
   140014c54:	jge    0x140014c5d
   140014c56:	dec    edx
   140014c58:	or     edx,0xfffffffe
   140014c5b:	inc    edx
   140014c5d:	test   edx,edx
   140014c5f:	jne    0x140014c75
   140014c61:	lea    rdx,[rip+0x2e458]        # 0x1400430c0
   140014c68:	movsx  rax,cx
   140014c6c:	mov    BYTE PTR [rax+rdx*1],r9b
   140014c70:	jmp    0x140014d15
   140014c75:	movzx  eax,r9w
   140014c79:	lea    r8,[rip+0x2e440]        # 0x1400430c0
   140014c80:	movsx  rdx,cx
   140014c84:	sar    ax,0x4
   140014c88:	inc    cx
   140014c8b:	or     BYTE PTR [rdx+r8*1],al
   140014c8f:	movsx  rax,cx
   140014c93:	shl    r9b,0x4
   140014c97:	mov    BYTE PTR [rax+r8*1],r9b
   140014c9b:	jmp    0x140014d18
   140014c9d:	cmp    dl,0xd2
   140014ca0:	jae    0x140014d1f
   140014ca2:	movzx  r9d,dl
   140014ca6:	inc    r15w
   140014caa:	movsx  eax,r15w
   140014cae:	sub    r9w,0x2d
   140014cb3:	lea    edx,[rax+rax*2]
   140014cb6:	movsx  eax,bp
   140014cb9:	lea    r8d,[rdx+rax*2]
   140014cbd:	movsx  edx,r14w
   140014cc1:	add    edx,0xfffffffd
   140014cc4:	add    edx,r8d
   140014cc7:	and    edx,0x80000001
   140014ccd:	jge    0x140014cd6
   140014ccf:	dec    edx
   140014cd1:	or     edx,0xfffffffe
   140014cd4:	inc    edx
   140014cd6:	movsx  rax,cx
   140014cda:	lea    r8,[rip+0x2e3df]        # 0x1400430c0
   140014ce1:	test   edx,edx
   140014ce3:	jne    0x140014d05
   140014ce5:	movzx  edx,r9w
   140014ce9:	inc    cx
   140014cec:	sar    dx,0x4
   140014cf0:	or     dl,0xf0
   140014cf3:	shl    r9b,0x4
   140014cf7:	mov    BYTE PTR [rax+r8*1],dl
   140014cfb:	movsx  rax,cx
   140014cff:	mov    BYTE PTR [rax+r8*1],r9b
   140014d03:	jmp    0x140014d18
   140014d05:	or     BYTE PTR [rax+r8*1],0xf
   140014d0a:	inc    cx
   140014d0d:	movsx  rax,cx
   140014d11:	mov    BYTE PTR [rax+r8*1],r9b
   140014d15:	inc    cx
   140014d18:	mov    WORD PTR [rip+0x2e391],cx        # 0x1400430b0
   140014d1f:	add    di,0x2
   140014d23:	lea    rdx,[rip+0x2f806]        # 0x140044530
   140014d2a:	cmp    di,r12w
   140014d2e:	jl     0x140014b50
   140014d34:	lea    rsi,[rip+0x2e385]        # 0x1400430c0
   140014d3b:	mov    r9d,0x1
   140014d41:	movsx  eax,r15w
   140014d45:	lea    edx,[rax+rax*2]
   140014d48:	movsx  eax,bp
   140014d4b:	lea    r8d,[rdx+rax*2]
   140014d4f:	movsx  eax,r14w
   140014d53:	add    r8d,eax
   140014d56:	and    r8d,0x80000001
   140014d5d:	jge    0x140014d69
   140014d5f:	dec    r8d
   140014d62:	or     r8d,0xfffffffe
   140014d66:	inc    r8d
   140014d69:	test   r8d,r8d
   140014d6c:	jne    0x140014f87
   140014d72:	movsx  rax,cx
   140014d76:	cmp    rax,0x80
   140014d7c:	jae    0x140015307
   140014d82:	mov    BYTE PTR [rax+rsi*1],bl
   140014d85:	lea    rdx,[rax+rsi*1]
   140014d89:	test   r10w,r10w
   140014d8d:	jne    0x140014d92
   140014d8f:	or     BYTE PTR [rdx],0x8
   140014d92:	cmp    r11w,0x4
   140014d97:	jge    0x140014de9
   140014d99:	and    r11b,0xf
   140014d9d:	or     BYTE PTR [rdx],r11b
   140014da0:	jmp    0x140015101
   140014da5:	lea    rcx,[rip+0x2f784]        # 0x140044530
   140014dac:	nop    DWORD PTR [rax+0x0]
   140014db0:	movsx  rax,bx
   140014db4:	cmp    BYTE PTR [rax+rcx*1],0x0
   140014db8:	jne    0x140014dc1
   140014dba:	cmp    BYTE PTR [rax+rcx*1+0x1],0x0
   140014dbf:	je     0x140014dc7
   140014dc1:	add    bx,0x2
   140014dc5:	jmp    0x140014db0
   140014dc7:	mov    eax,0xfffffffd
   140014dcc:	mov    rbx,QWORD PTR [rsp+0x50]
   140014dd1:	mov    rbp,QWORD PTR [rsp+0x58]
   140014dd6:	mov    rsi,QWORD PTR [rsp+0x60]
   140014ddb:	add    rsp,0x20
   140014ddf:	pop    r15
   140014de1:	pop    r14
   140014de3:	pop    r13
   140014de5:	pop    r12
   140014de7:	pop    rdi
   140014de8:	ret    
   140014de9:	cmp    r11w,0x20
   140014dee:	jge    0x140014e0f
   140014df0:	movzx  eax,r11b
   140014df4:	inc    cx
   140014df7:	sar    al,0x4
   140014dfa:	and    al,0xb
   140014dfc:	or     al,0x4
   140014dfe:	or     BYTE PTR [rdx],al
   140014e00:	movsx  rdx,cx
   140014e04:	mov    eax,r9d
   140014e07:	add    rdx,rsi
   140014e0a:	jmp    0x14001500f
   140014e0f:	mov    eax,0x100
   140014e14:	cmp    r11w,ax
   140014e18:	jge    0x140014e3b
   140014e1a:	movzx  eax,r11w
   140014e1e:	sar    ax,0x8
   140014e22:	and    al,0x9
   140014e24:	or     al,0x6
   140014e26:	or     BYTE PTR [rdx],al
   140014e28:	inc    cx
   140014e2b:	movsx  rax,cx
   140014e2f:	lea    rdx,[rax+rsi*1]
   140014e33:	mov    BYTE PTR [rdx],r11b
   140014e36:	jmp    0x1400150fa
   140014e3b:	movzx  r8d,WORD PTR [rip+0x2a021]        # 0x14003ee64
   140014e43:	inc    cx
   140014e46:	cmp    r11w,r8w
   140014e4a:	jge    0x140014e6e
   140014e4c:	movzx  eax,r11w
   140014e50:	sar    ax,0xc
   140014e54:	and    al,0x8
   140014e56:	or     al,0x7
   140014e58:	or     BYTE PTR [rdx],al
   140014e5a:	movzx  edx,r11w
   140014e5e:	movsx  rax,cx
   140014e62:	sar    dx,0x4
   140014e66:	mov    BYTE PTR [rax+rsi*1],dl
   140014e69:	jmp    0x140015000
   140014e6e:	movzx  r9d,WORD PTR [rsp+0x80]
   140014e77:	movzx  eax,r8w
   140014e7b:	sar    ax,0xc
   140014e7f:	and    al,0x8
   140014e81:	or     al,0x7
   140014e83:	or     BYTE PTR [rdx],al
   140014e85:	movsx  rax,cx
   140014e89:	inc    cx
   140014e8c:	movzx  edx,r8w
   140014e90:	shl    r8b,0x4
   140014e94:	sar    dx,0x4
   140014e98:	mov    BYTE PTR [rax+rsi*1],dl
   140014e9b:	movsx  rax,cx
   140014e9f:	inc    cx
   140014ea2:	movzx  edx,r13w
   140014ea6:	shr    dx,0xc
   140014eaa:	and    dl,0xf
   140014ead:	or     dl,r8b
   140014eb0:	movzx  r8d,WORD PTR [rsp+0x78]
   140014eb6:	mov    BYTE PTR [rax+rsi*1],dl
   140014eb9:	movsx  rax,cx
   140014ebd:	inc    cx
   140014ec0:	movzx  edx,r13w
   140014ec4:	shl    r13b,0x4
   140014ec8:	shr    dx,0x4
   140014ecc:	mov    BYTE PTR [rax+rsi*1],dl
   140014ecf:	movsx  rax,cx
   140014ed3:	inc    cx
   140014ed6:	movzx  edx,r8w
   140014eda:	shr    dx,0xc
   140014ede:	and    dl,0xf
   140014ee1:	or     dl,r13b
   140014ee4:	mov    BYTE PTR [rax+rsi*1],dl
   140014ee7:	movsx  rax,cx
   140014eeb:	inc    cx
   140014eee:	movzx  edx,r8w
   140014ef2:	shl    r8b,0x4
   140014ef6:	shr    dx,0x4
   140014efa:	mov    BYTE PTR [rax+rsi*1],dl
   140014efd:	movsx  rax,cx
   140014f01:	inc    cx
   140014f04:	movzx  edx,r9w
   140014f08:	shr    dx,0xc
   140014f0c:	and    dl,0xf
   140014f0f:	or     dl,r8b
   140014f12:	movzx  r8d,WORD PTR [rsp+0x70]
   140014f18:	mov    BYTE PTR [rax+rsi*1],dl
   140014f1b:	movsx  rax,cx
   140014f1f:	movzx  edx,r9w
   140014f23:	shr    dx,0x4
   140014f27:	inc    cx
   140014f2a:	shl    r9b,0x4
   140014f2e:	mov    BYTE PTR [rax+rsi*1],dl
   140014f31:	movsx  rax,cx
   140014f35:	movzx  edx,r8w
   140014f39:	shr    dx,0xc
   140014f3d:	inc    cx
   140014f40:	and    dl,0xf
   140014f43:	or     dl,r9b
   140014f46:	mov    r9d,0x1
   140014f4c:	mov    BYTE PTR [rax+rsi*1],dl
   140014f4f:	movzx  edx,r8w
   140014f53:	movsx  rax,cx
   140014f57:	shr    dx,0x4
   140014f5b:	inc    cx
   140014f5e:	shl    r8b,0x4
   140014f62:	mov    BYTE PTR [rax+rsi*1],dl
   140014f65:	movsx  rax,cx
   140014f69:	mov    WORD PTR [rip+0x2e140],cx        # 0x1400430b0
   140014f70:	lea    rdx,[rax+rsi*1]
   140014f74:	movzx  eax,r9w
   140014f78:	mov    BYTE PTR [rdx],r8b
   140014f7b:	mov    WORD PTR [rip+0x2e10a],ax        # 0x14004308c
   140014f82:	jmp    0x14001510b
   140014f87:	inc    cx
   140014f8a:	mov    WORD PTR [rip+0x2e11f],cx        # 0x1400430b0
   140014f91:	movsx  rdx,cx
   140014f95:	test   r10w,r10w
   140014f99:	jne    0x140014fa1
   140014f9b:	mov    BYTE PTR [rdx+rsi*1],0x80
   140014f9f:	jmp    0x140014fb1
   140014fa1:	cmp    rdx,0x80
   140014fa8:	jae    0x14001530d
   140014fae:	mov    BYTE PTR [rdx+rsi*1],bl
   140014fb1:	cmp    r11w,0x4
   140014fb6:	jge    0x140014fd2
   140014fb8:	add    rdx,rsi
   140014fbb:	shl    r11b,0x4
   140014fbf:	movzx  eax,r9w
   140014fc3:	or     BYTE PTR [rdx],r11b
   140014fc6:	mov    WORD PTR [rip+0x2e0bf],ax        # 0x14004308c
   140014fcd:	jmp    0x14001510b
   140014fd2:	cmp    r11w,0x20
   140014fd7:	jge    0x140014fe8
   140014fd9:	add    rdx,rsi
   140014fdc:	or     r11b,0x40
   140014fe0:	or     BYTE PTR [rdx],r11b
   140014fe3:	jmp    0x140015101
   140014fe8:	mov    eax,0x100
   140014fed:	cmp    r11w,ax
   140014ff1:	jge    0x140015029
   140014ff3:	movzx  eax,r11w
   140014ff7:	sar    ax,0x4
   140014ffb:	or     al,0x60
   140014ffd:	or     BYTE PTR [rdx+rsi*1],al
   140015000:	inc    cx
   140015003:	movsx  rax,cx
   140015007:	lea    rdx,[rax+rsi*1]
   14001500b:	movzx  eax,r9w
   14001500f:	shl    r11b,0x4
   140015013:	mov    WORD PTR [rip+0x2e096],cx        # 0x1400430b0
   14001501a:	mov    WORD PTR [rip+0x2e06b],ax        # 0x14004308c
   140015021:	mov    BYTE PTR [rdx],r11b
   140015024:	jmp    0x14001510b
   140015029:	movzx  r8d,WORD PTR [rip+0x29e33]        # 0x14003ee64
   140015031:	cmp    r11w,r8w
   140015035:	jge    0x140015057
   140015037:	movzx  eax,r11w
   14001503b:	sar    ax,0x8
   14001503f:	or     al,0x70
   140015041:	or     BYTE PTR [rdx+rsi*1],al
   140015044:	inc    cx
   140015047:	movsx  rax,cx
   14001504b:	lea    rdx,[rax+rsi*1]
   14001504f:	mov    BYTE PTR [rdx],r11b
   140015052:	jmp    0x1400150fa
   140015057:	movzx  eax,BYTE PTR [rip+0x29e07]        # 0x14003ee65
   14001505e:	inc    cx
   140015061:	or     al,0x70
   140015063:	or     BYTE PTR [rdx+rsi*1],al
   140015066:	movsx  rax,cx
   14001506a:	inc    cx
   14001506d:	mov    BYTE PTR [rax+rsi*1],r8b
   140015071:	movzx  r8d,WORD PTR [rsp+0x78]
   140015077:	movsx  rax,cx
   14001507b:	inc    cx
   14001507e:	movzx  edx,r13w
   140015082:	shr    dx,0x8
   140015086:	mov    BYTE PTR [rax+rsi*1],dl
   140015089:	movsx  rax,cx
   14001508d:	inc    cx
   140015090:	mov    BYTE PTR [rax+rsi*1],r13b
   140015094:	movsx  rax,cx
   140015098:	inc    cx
   14001509b:	movzx  edx,r8w
   14001509f:	shr    dx,0x8
   1400150a3:	mov    BYTE PTR [rax+rsi*1],dl
   1400150a6:	movsx  rax,cx
   1400150aa:	inc    cx
   1400150ad:	mov    BYTE PTR [rax+rsi*1],r8b
   1400150b1:	movzx  r8d,WORD PTR [rsp+0x80]
   1400150ba:	movsx  rax,cx
   1400150be:	movzx  edx,r8w
   1400150c2:	inc    cx
   1400150c5:	shr    dx,0x8
   1400150c9:	mov    BYTE PTR [rax+rsi*1],dl
   1400150cc:	movsx  rax,cx
   1400150d0:	inc    cx
   1400150d3:	mov    BYTE PTR [rax+rsi*1],r8b
   1400150d7:	movzx  r8d,WORD PTR [rsp+0x70]
   1400150dd:	movsx  rax,cx
   1400150e1:	movzx  edx,r8w
   1400150e5:	shr    dx,0x8
   1400150e9:	inc    cx
   1400150ec:	mov    BYTE PTR [rax+rsi*1],dl
   1400150ef:	movsx  rax,cx
   1400150f3:	lea    rdx,[rax+rsi*1]
   1400150f7:	mov    BYTE PTR [rdx],r8b
   1400150fa:	mov    WORD PTR [rip+0x2dfaf],cx        # 0x1400430b0
   140015101:	movzx  eax,bx
   140015104:	mov    WORD PTR [rip+0x2df81],bx        # 0x14004308c
   14001510b:	test   r10w,r10w
   14001510f:	je     0x1400152ff
   140015115:	test   ax,ax
   140015118:	jne    0x140015200
   14001511e:	cmp    r10w,0x8
   140015123:	jl     0x14001516e
   140015125:	inc    cx
   140015128:	cmp    r10w,0x40
   14001512d:	jge    0x140015151
   14001512f:	movsx  rax,cx
   140015133:	or     r10b,0x80
   140015137:	mov    WORD PTR [rip+0x2df4e],bx        # 0x14004308c
   14001513e:	mov    BYTE PTR [rax+rsi*1],r10b
   140015142:	movzx  eax,bx
   140015145:	mov    WORD PTR [rip+0x2df64],cx        # 0x1400430b0
   14001514c:	jmp    0x140014dcc
   140015151:	mov    eax,0x200
   140015156:	cmp    r10w,ax
   14001515a:	jge    0x140015182
   14001515c:	movzx  edx,r10w
   140015160:	sar    dx,0x4
   140015164:	or     dl,0xc0
   140015167:	movsx  rax,cx
   14001516b:	mov    BYTE PTR [rax+rsi*1],dl
   14001516e:	inc    cx
   140015171:	shl    r10b,0x4
   140015175:	movsx  rax,cx
   140015179:	mov    BYTE PTR [rax+rsi*1],r10b
   14001517d:	jmp    0x1400152f0
   140015182:	mov    r8d,0x1fff
   140015188:	mov    WORD PTR [rip+0x2defd],bx        # 0x14004308c
   14001518f:	movsx  rax,cx
   140015193:	cmp    r10w,r8w
   140015197:	jge    0x1400151c1
   140015199:	movzx  edx,r10w
   14001519d:	sar    dx,0x8
   1400151a1:	or     dl,0xe0
   1400151a4:	inc    cx
   1400151a7:	mov    BYTE PTR [rax+rsi*1],dl
   1400151aa:	movsx  rax,cx
   1400151ae:	mov    WORD PTR [rip+0x2defb],cx        # 0x1400430b0
   1400151b5:	mov    BYTE PTR [rax+rsi*1],r10b
   1400151b9:	movzx  eax,bx
   1400151bc:	jmp    0x140014dcc
   1400151c1:	mov    BYTE PTR [rax+rsi*1],0xff
   1400151c5:	inc    cx
   1400151c8:	sub    r10w,r8w
   1400151cc:	movsx  rax,cx
   1400151d0:	inc    cx
   1400151d3:	movzx  edx,r10w
   1400151d7:	mov    BYTE PTR [rax+rsi*1],0xff
   1400151db:	movsx  rax,cx
   1400151df:	sar    dx,0x8
   1400151e3:	mov    BYTE PTR [rax+rsi*1],dl
   1400151e6:	inc    cx
   1400151e9:	movsx  rax,cx
   1400151ed:	mov    WORD PTR [rip+0x2debc],cx        # 0x1400430b0
   1400151f4:	mov    BYTE PTR [rax+rsi*1],r10b
   1400151f8:	movzx  eax,bx
   1400151fb:	jmp    0x140014dcc
   140015200:	cmp    r10w,0x8
   140015205:	jge    0x14001521d
   140015207:	and    r10b,0xf
   14001520b:	mov    WORD PTR [rip+0x2de7a],bx        # 0x14004308c
   140015212:	movzx  eax,bx
   140015215:	or     BYTE PTR [rdx],r10b
   140015218:	jmp    0x140014dcc
   14001521d:	cmp    r10w,0x40
   140015222:	jge    0x140015245
   140015224:	movzx  eax,r10b
   140015228:	inc    cx
   14001522b:	sar    al,0x4
   14001522e:	and    al,0x7
   140015230:	or     al,0x8
   140015232:	or     BYTE PTR [rdx],al
   140015234:	movsx  rax,cx
   140015238:	shl    r10b,0x4
   14001523c:	mov    BYTE PTR [rax+rsi*1],r10b
   140015240:	jmp    0x1400152f0
   140015245:	mov    eax,0x200
   14001524a:	cmp    r10w,ax
   14001524e:	jge    0x14001527f
   140015250:	movzx  eax,r10w
   140015254:	mov    WORD PTR [rip+0x2de31],bx        # 0x14004308c
   14001525b:	sar    ax,0x8
   14001525f:	and    al,0x3
   140015261:	or     al,0xc
   140015263:	or     BYTE PTR [rdx],al
   140015265:	inc    cx
   140015268:	movsx  rax,cx
   14001526c:	mov    WORD PTR [rip+0x2de3d],cx        # 0x1400430b0
   140015273:	mov    BYTE PTR [rax+rsi*1],r10b
   140015277:	movzx  eax,bx
   14001527a:	jmp    0x140014dcc
   14001527f:	mov    r8d,0x1fff
   140015285:	inc    cx
   140015288:	cmp    r10w,r8w
   14001528c:	jge    0x1400152a9
   14001528e:	movzx  eax,r10w
   140015292:	sar    ax,0xc
   140015296:	and    al,0x1
   140015298:	or     al,0xe
   14001529a:	or     BYTE PTR [rdx],al
   14001529c:	movzx  edx,r10w
   1400152a0:	sar    dx,0x4
   1400152a4:	jmp    0x140015167
   1400152a9:	or     BYTE PTR [rdx],0xf
   1400152ac:	movsx  rax,cx
   1400152b0:	sub    r10w,r8w
   1400152b4:	inc    cx
   1400152b7:	mov    BYTE PTR [rax+rsi*1],0xff
   1400152bb:	movzx  edx,r10w
   1400152bf:	sar    dx,0xc
   1400152c3:	movsx  rax,cx
   1400152c7:	inc    cx
   1400152ca:	or     dl,0xf0
   1400152cd:	movzx  r8d,r10w
   1400152d1:	mov    BYTE PTR [rax+rsi*1],dl
   1400152d4:	movsx  rdx,cx
   1400152d8:	sar    r8w,0x4
   1400152dd:	inc    cx
   1400152e0:	mov    BYTE PTR [rdx+rsi*1],r8b
   1400152e4:	shl    r10b,0x4
   1400152e8:	movsx  rdx,cx
   1400152ec:	mov    BYTE PTR [rdx+rsi*1],r10b
   1400152f0:	mov    WORD PTR [rip+0x2dd94],r9w        # 0x14004308c
   1400152f8:	mov    WORD PTR [rip+0x2ddb1],cx        # 0x1400430b0
   1400152ff:	movzx  eax,bx
   140015302:	jmp    0x140014dcc
   140015307:	call   0x14002cbc8
   14001530c:	int3   
   14001530d:	call   0x14002cbc8
   140015312:	int3   
   140015313:	int3   
   140015314:	int3   
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	int3   
   140015319:	int3   
   14001531a:	int3   
   14001531b:	int3   
   14001531c:	int3   
   14001531d:	int3   
   14001531e:	int3   
   14001531f:	int3   
   140015320:	mov    QWORD PTR [rsp+0x8],rbx
   140015325:	mov    QWORD PTR [rsp+0x10],rdi
   14001532a:	xor    ebx,ebx
   14001532c:	mov    r11,rcx
   14001532f:	cmp    WORD PTR [rip+0x2dd4e],bx        # 0x140043084
   140015336:	lea    edi,[rbx+0x1]
   140015339:	movzx  r9d,bx
   14001533d:	movzx  edx,bx
   140015340:	je     0x140015418
   140015346:	movsx  r8d,r8w
   14001534a:	add    r8d,r8d
   14001534d:	test   r8d,r8d
   140015350:	jle    0x1400153c2
   140015352:	mov    eax,ebx
   140015354:	lea    r10,[rip+0x2dd65]        # 0x1400430c0
   14001535b:	nop    DWORD PTR [rax+rax*1+0x0]
   140015360:	movzx  ecx,dx
   140015363:	inc    dx
   140015366:	movzx  r9d,dx
   14001536a:	sar    cx,1
   14001536d:	sar    r9w,1
   140015371:	and    eax,0x80000001
   140015376:	jge    0x14001537f
   140015378:	dec    eax
   14001537a:	or     eax,0xfffffffe
   14001537d:	inc    eax
   14001537f:	test   eax,eax
   140015381:	movsx  rax,cx
   140015385:	movzx  ecx,BYTE PTR [rax+r10*1]
   14001538a:	jne    0x140015391
   14001538c:	shr    cl,0x4
   14001538f:	jmp    0x140015394
   140015391:	and    cl,0xf
   140015394:	movsx  eax,dx
   140015397:	and    eax,0x80000001
   14001539c:	jge    0x1400153a5
   14001539e:	dec    eax
   1400153a0:	or     eax,0xfffffffe
   1400153a3:	inc    eax
   1400153a5:	test   eax,eax
   1400153a7:	movsx  rax,r9w
   1400153ab:	jne    0x1400153b6
   1400153ad:	shl    cl,0x4
   1400153b0:	mov    BYTE PTR [rax+r11*1],cl
   1400153b4:	jmp    0x1400153ba
   1400153b6:	or     BYTE PTR [rax+r11*1],cl
   1400153ba:	movsx  eax,dx
   1400153bd:	cmp    eax,r8d
   1400153c0:	jl     0x140015360
   1400153c2:	cmp    WORD PTR [rip+0x2dcc3],bx        # 0x14004308c
   1400153c9:	je     0x1400153d9
   1400153cb:	mov    WORD PTR [rip+0x2dcb2],bx        # 0x140043084
   1400153d2:	mov    WORD PTR [rip+0x2dcb3],bx        # 0x14004308c
   1400153d9:	movsx  eax,r9w
   1400153dd:	add    DWORD PTR [rip+0x2dcad],eax        # 0x140043090
   1400153e3:	cmp    WORD PTR [rip+0x2dcae],bx        # 0x140043098
   1400153ea:	je     0x140015402
   1400153ec:	add    WORD PTR [rip+0x2dc94],r9w        # 0x140043088
   1400153f4:	movzx  eax,di
   1400153f7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400153fc:	mov    rdi,QWORD PTR [rsp+0x10]
   140015401:	ret    
   140015402:	mov    WORD PTR [rip+0x2dc8a],r9w        # 0x140043094
   14001540a:	movzx  eax,di
   14001540d:	mov    rbx,QWORD PTR [rsp+0x8]
   140015412:	mov    rdi,QWORD PTR [rsp+0x10]
   140015417:	ret    
   140015418:	movsx  r9d,r8w
   14001541c:	movzx  r8d,bx
   140015420:	add    r9d,r9d
   140015423:	test   r9d,r9d
   140015426:	jle    0x140015479
   140015428:	mov    eax,ebx
   14001542a:	lea    r10,[rip+0x2dc8f]        # 0x1400430c0
   140015431:	movzx  edx,r8w
   140015435:	sar    dx,1
   140015438:	and    eax,0x80000001
   14001543d:	jge    0x140015446
   14001543f:	dec    eax
   140015441:	or     eax,0xfffffffe
   140015444:	inc    eax
   140015446:	test   eax,eax
   140015448:	jne    0x14001545b
   14001544a:	movsx  rcx,dx
   14001544e:	movzx  eax,BYTE PTR [rcx+r10*1]
   140015453:	and    al,0xf0
   140015455:	mov    BYTE PTR [rcx+r11*1],al
   140015459:	jmp    0x14001546c
   14001545b:	movsx  rax,dx
   14001545f:	lea    rcx,[rax+r11*1]
   140015463:	movzx  eax,BYTE PTR [rax+r10*1]
   140015468:	and    al,0xf
   14001546a:	or     BYTE PTR [rcx],al
   14001546c:	inc    r8w
   140015470:	movsx  eax,r8w
   140015474:	cmp    eax,r9d
   140015477:	jl     0x140015431
   140015479:	cmp    WORD PTR [rip+0x2dc0c],bx        # 0x14004308c
   140015480:	je     0x1400154b7
   140015482:	movsx  eax,dx
   140015485:	mov    WORD PTR [rip+0x2dbf8],di        # 0x140043084
   14001548c:	mov    WORD PTR [rip+0x2dbf9],bx        # 0x14004308c
   140015493:	add    DWORD PTR [rip+0x2dbf7],eax        # 0x140043090
   140015499:	cmp    WORD PTR [rip+0x2dbf8],bx        # 0x140043098
   1400154a0:	je     0x1400154eb
   1400154a2:	add    WORD PTR [rip+0x2dbdf],dx        # 0x140043088
   1400154a9:	movzx  eax,di
   1400154ac:	mov    rbx,QWORD PTR [rsp+0x8]
   1400154b1:	mov    rdi,QWORD PTR [rsp+0x10]
   1400154b6:	ret    
   1400154b7:	mov    eax,DWORD PTR [rip+0x2dbd3]        # 0x140043090
   1400154bd:	movsx  ecx,dx
   1400154c0:	inc    dx
   1400154c3:	inc    eax
   1400154c5:	add    ecx,eax
   1400154c7:	cmp    WORD PTR [rip+0x2dbca],bx        # 0x140043098
   1400154ce:	mov    DWORD PTR [rip+0x2dbbc],ecx        # 0x140043090
   1400154d4:	je     0x1400154eb
   1400154d6:	add    WORD PTR [rip+0x2dbab],dx        # 0x140043088
   1400154dd:	movzx  eax,di
   1400154e0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400154e5:	mov    rdi,QWORD PTR [rsp+0x10]
   1400154ea:	ret    
   1400154eb:	mov    rbx,QWORD PTR [rsp+0x8]
   1400154f0:	movzx  eax,di
   1400154f3:	mov    rdi,QWORD PTR [rsp+0x10]
   1400154f8:	mov    WORD PTR [rip+0x2db95],dx        # 0x140043094
   1400154ff:	ret    
   140015500:	mov    QWORD PTR [rsp+0x8],rbx
   140015505:	mov    QWORD PTR [rsp+0x10],rbp
   14001550a:	mov    QWORD PTR [rsp+0x18],rsi
   14001550f:	mov    QWORD PTR [rsp+0x20],rdi
   140015514:	movzx  r10d,WORD PTR [rip+0x29930]        # 0x14003ee4c
   14001551c:	xor    ebp,ebp
   14001551e:	movzx  esi,r8w
   140015522:	mov    rbx,rcx
   140015525:	lea    r9,[rip+0x2f004]        # 0x140044530
   14001552c:	movzx  edi,bp
   14001552f:	cmp    bp,r8w
   140015533:	jae    0x140015586
   140015535:	movzx  eax,bp
   140015538:	cmp    bp,r10w
   14001553c:	jge    0x140015570
   14001553e:	movzx  r8d,BYTE PTR [r9]
   140015542:	mov    r11,QWORD PTR [rip+0x28bbf]        # 0x14003e108
   140015549:	nop    DWORD PTR [rax+0x0]
   140015550:	movsx  rcx,ax
   140015554:	lea    rdx,[r11+rcx*4]
   140015558:	cmp    BYTE PTR [rdx],r8b
   14001555b:	jne    0x140015567
   14001555d:	movzx  ecx,BYTE PTR [r9+0x1]
   140015562:	cmp    BYTE PTR [rdx+0x1],cl
   140015565:	je     0x140015575
   140015567:	inc    ax
   14001556a:	cmp    ax,r10w
   14001556e:	jl     0x140015550
   140015570:	movzx  eax,bp
   140015573:	jmp    0x14001558b
   140015575:	inc    di
   140015578:	mov    BYTE PTR [rbx],al
   14001557a:	inc    rbx
   14001557d:	add    r9,0x2
   140015581:	cmp    di,si
   140015584:	jb     0x140015535
   140015586:	mov    eax,0x1
   14001558b:	mov    rbx,QWORD PTR [rsp+0x8]
   140015590:	mov    rbp,QWORD PTR [rsp+0x10]
   140015595:	mov    rsi,QWORD PTR [rsp+0x18]
   14001559a:	mov    rdi,QWORD PTR [rsp+0x20]
   14001559f:	ret    
   1400155a0:	rex push rbp
   1400155a2:	push   rsi
   1400155a3:	push   rdi
   1400155a4:	push   r12
   1400155a6:	push   r13
   1400155a8:	push   r14
   1400155aa:	push   r15
   1400155ac:	lea    rbp,[rsp-0x60]
   1400155b1:	sub    rsp,0x160
   1400155b8:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   1400155c1:	mov    QWORD PTR [rsp+0x1b8],rbx
   1400155c9:	mov    rax,QWORD PTR [rip+0x26a30]        # 0x14003c000
   1400155d0:	xor    rax,rsp
   1400155d3:	mov    QWORD PTR [rbp+0x50],rax
   1400155d7:	mov    rsi,r8
   1400155da:	mov    QWORD PTR [rsp+0x40],r8
   1400155df:	mov    rbx,rdx
   1400155e2:	mov    QWORD PTR [rsp+0x50],rdx
   1400155e7:	mov    r12,rcx
   1400155ea:	mov    QWORD PTR [rsp+0x38],rcx
   1400155ef:	mov    ecx,0xf
   1400155f4:	mov    DWORD PTR [rbp-0x60],0x4000f
   1400155fb:	lea    r14d,[rcx-0xb]
   1400155ff:	mov    DWORD PTR [rbp-0x5c],0x100009
   140015606:	lea    edi,[rcx+0x1]
   140015609:	mov    eax,0x38
   14001560e:	mov    WORD PTR [rbp-0x58],ax
   140015612:	mov    DWORD PTR [rip+0x2c3c8],0x800        # 0x1400419e4
   14001561c:	xor    r13d,r13d
   14001561f:	mov    WORD PTR [rip+0x29831],r13w        # 0x14003ee58
   140015627:	mov    WORD PTR [rip+0x28b75],r13w        # 0x14003e1a4
   14001562f:	mov    WORD PTR [rip+0x29811],r13w        # 0x14003ee48
   140015637:	mov    WORD PTR [rip+0x29822],cx        # 0x14003ee60
   14001563e:	mov    WORD PTR [rip+0x2980a],r13w        # 0x14003ee50
   140015646:	lea    r8,[rip+0x1bd03]        # 0x140031350
   14001564d:	lea    rdx,[rip+0x28b5c]        # 0x14003e1b0
   140015654:	mov    al,0x43
   140015656:	lea    r13,[rip+0x1bba3]        # 0x140031200
   14001565d:	mov    r9,QWORD PTR [rip+0x27c94]        # 0x14003d2f8
   140015664:	cmp    al,0x20
   140015666:	jae    0x140015673
   140015668:	movzx  eax,al
   14001566b:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   140015671:	jmp    0x140015688
   140015673:	cmp    al,0x80
   140015675:	jae    0x14001567c
   140015677:	movzx  ecx,al
   14001567a:	jmp    0x140015688
   14001567c:	movzx  eax,al
   14001567f:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140015688:	mov    WORD PTR [rdx],cx
   14001568b:	add    rdx,0x2
   14001568f:	inc    r8
   140015692:	movzx  eax,BYTE PTR [r8]
   140015696:	test   al,al
   140015698:	jne    0x140015664
   14001569a:	xor    r13d,r13d
   14001569d:	mov    WORD PTR [rdx],r13w
   1400156a1:	xor    r8d,r8d
   1400156a4:	xor    ecx,ecx
   1400156a6:	lea    rdx,[rip+0x28b03]        # 0x14003e1b0
   1400156ad:	call   QWORD PTR [rip+0x2c3f5]        # 0x140041aa8
   1400156b3:	test   ax,ax
   1400156b6:	je     0x1400156c2
   1400156b8:	mov    eax,0x6
   1400156bd:	jmp    0x140015db8
   1400156c2:	mov    ecx,0x110
   1400156c7:	call   QWORD PTR [rip+0x19d4b]        # 0x14002f418
   1400156cd:	mov    QWORD PTR [rip+0x2ae0c],rax        # 0x1400404e0
   1400156d4:	test   rax,rax
   1400156d7:	jne    0x1400156e2
   1400156d9:	movzx  eax,r14w
   1400156dd:	jmp    0x140015db8
   1400156e2:	mov    ecx,DWORD PTR [rip+0x2c2fc]        # 0x1400419e4
   1400156e8:	call   QWORD PTR [rip+0x19d2a]        # 0x14002f418
   1400156ee:	mov    r15,rax
   1400156f1:	mov    QWORD PTR [rsp+0x48],rax
   1400156f6:	test   rax,rax
   1400156f9:	je     0x1400156d9
   1400156fb:	mov    rdx,rbx
   1400156fe:	call   0x140004720
   140015703:	mov    WORD PTR [rip+0x2aad2],ax        # 0x1400401dc
   14001570a:	mov    DWORD PTR [r15],0x20
   140015711:	mov    rdx,r15
   140015714:	call   0x140004860
   140015719:	mov    rcx,r13
   14001571c:	lea    r13,[rip+0x1bd35]        # 0x140031458
   140015723:	nop    DWORD PTR [rax+0x0]
   140015727:	nop    WORD PTR [rax+rax*1+0x0]
   140015730:	movzx  eax,BYTE PTR [rcx+r13*1]
   140015735:	mov    BYTE PTR [rbp+rcx*1-0x50],al
   140015739:	lea    rcx,[rcx+0x1]
   14001573d:	test   al,al
   14001573f:	jne    0x140015730
   140015741:	mov    rcx,rdi
   140015744:	call   QWORD PTR [rip+0x1a24e]        # 0x14002f998
   14001574a:	mov    rbx,rax
   14001574d:	mov    QWORD PTR [rsp+0x30],rax
   140015752:	test   rax,rax
   140015755:	mov    r13d,0x0
   14001575b:	je     0x140015791
   14001575d:	mov    WORD PTR [rax],r13w
   140015761:	mov    QWORD PTR [rax+0x8],r13
   140015765:	lea    rcx,[rbp-0x50]
   140015769:	call   QWORD PTR [rip+0x19b11]        # 0x14002f280
   14001576f:	test   eax,eax
   140015771:	jle    0x140015794
   140015773:	inc    eax
   140015775:	movsxd rcx,eax
   140015778:	call   QWORD PTR [rip+0x1a21a]        # 0x14002f998
   14001577e:	mov    QWORD PTR [rbx+0x8],rax
   140015782:	lea    rdx,[rbp-0x50]
   140015786:	mov    rcx,rax
   140015789:	call   QWORD PTR [rip+0x19ac9]        # 0x14002f258
   14001578f:	jmp    0x140015794
   140015791:	mov    rbx,r13
   140015794:	mov    edx,0xa
   140015799:	mov    rcx,rbx
   14001579c:	call   0x14002ab70
   1400157a1:	mov    rdi,rax
   1400157a4:	test   rax,rax
   1400157a7:	jne    0x1400157b3
   1400157a9:	mov    eax,0x2
   1400157ae:	jmp    0x140015db8
   1400157b3:	test   rbx,rbx
   1400157b6:	je     0x1400157d0
   1400157b8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400157bc:	test   rcx,rcx
   1400157bf:	je     0x1400157c7
   1400157c1:	call   QWORD PTR [rip+0x1a3b1]        # 0x14002fb78
   1400157c7:	mov    rcx,rbx
   1400157ca:	call   QWORD PTR [rip+0x1a3a8]        # 0x14002fb78
   1400157d0:	xor    edx,edx
   1400157d2:	mov    rcx,QWORD PTR [r12]
   1400157d6:	call   QWORD PTR [rip+0x19a44]        # 0x14002f220
   1400157dc:	mov    DWORD PTR [rip+0x289c6],eax        # 0x14003e1a8
   1400157e2:	xor    r8d,r8d
   1400157e5:	xor    edx,edx
   1400157e7:	mov    rcx,r12
   1400157ea:	call   0x14002ad10
   1400157ef:	cmp    eax,0xffffffff
   1400157f2:	jne    0x1400157fe
   1400157f4:	mov    eax,0x1
   1400157f9:	jmp    0x140015db8
   1400157fe:	mov    WORD PTR [rip+0x2963e],r13w        # 0x14003ee44
   140015806:	mov    WORD PTR [rip+0x2964e],r13w        # 0x14003ee5c
   14001580e:	cmp    DWORD PTR [rip+0x28993],0x0        # 0x14003e1a8
   140015815:	jne    0x140015821
   140015817:	mov    eax,0x3
   14001581c:	jmp    0x140015db8
   140015821:	mov    rdx,rdi
   140015824:	mov    rcx,r12
   140015827:	call   0x14000bee0
   14001582c:	test   ax,ax
   14001582f:	je     0x14001584e
   140015831:	cwde   
   140015832:	cmp    eax,0xfffffffc
   140015835:	je     0x1400156b8
   14001583b:	cmp    eax,0xfffffffe
   14001583e:	je     0x1400157a9
   140015844:	cmp    eax,0xffffffff
   140015847:	je     0x1400157f4
   140015849:	jmp    0x1400156d9
   14001584e:	mov    rcx,rdi
   140015851:	call   0x14002a9e0
   140015856:	mov    DWORD PTR [rsi],r13d
   140015859:	mov    r14d,0x1
   14001585f:	mov    WORD PTR [rip+0x295f1],r14w        # 0x14003ee58
   140015867:	mov    WORD PTR [rip+0x28935],r13w        # 0x14003e1a4
   14001586f:	mov    r10d,0xf
   140015875:	mov    WORD PTR [rip+0x295cb],r10w        # 0x14003ee48
   14001587d:	mov    eax,0x4
   140015882:	mov    WORD PTR [rip+0x295d7],ax        # 0x14003ee60
   140015889:	mov    WORD PTR [rip+0x295bf],r10w        # 0x14003ee50
   140015891:	lea    r8,[rip+0x1bb28]        # 0x1400313c0
   140015898:	lea    rbx,[rip+0x28911]        # 0x14003e1b0
   14001589f:	mov    rdx,rbx
   1400158a2:	mov    al,0x53
   1400158a4:	mov    r9,QWORD PTR [rip+0x27a4d]        # 0x14003d2f8
   1400158ab:	lea    r13,[rip+0x1b94e]        # 0x140031200
   1400158b2:	cmp    al,0x20
   1400158b4:	jae    0x1400158c1
   1400158b6:	movzx  eax,al
   1400158b9:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   1400158bf:	jmp    0x1400158d6
   1400158c1:	cmp    al,0x80
   1400158c3:	jae    0x1400158ca
   1400158c5:	movzx  ecx,al
   1400158c8:	jmp    0x1400158d6
   1400158ca:	movzx  eax,al
   1400158cd:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   1400158d6:	mov    WORD PTR [rdx],cx
   1400158d9:	add    rdx,0x2
   1400158dd:	inc    r8
   1400158e0:	movzx  eax,BYTE PTR [r8]
   1400158e4:	test   al,al
   1400158e6:	jne    0x1400158b2
   1400158e8:	xor    r13d,r13d
   1400158eb:	mov    WORD PTR [rdx],r13w
   1400158ef:	xor    r8d,r8d
   1400158f2:	mov    ecx,r10d
   1400158f5:	mov    rdx,rbx
   1400158f8:	call   QWORD PTR [rip+0x2c1aa]        # 0x140041aa8
   1400158fe:	test   ax,ax
   140015901:	jne    0x1400156b8
   140015907:	lea    rax,[rsp+0x78]
   14001590c:	mov    QWORD PTR [rsp+0x28],rax
   140015911:	lea    rax,[rsp+0x60]
   140015916:	mov    QWORD PTR [rsp+0x20],rax
   14001591b:	lea    r9,[rsp+0x30]
   140015920:	lea    rdx,[rip+0x1bb41]        # 0x140031468
   140015927:	lea    rcx,[rip+0x1bb2a]        # 0x140031458
   14001592e:	call   0x140029e30
   140015933:	test   eax,eax
   140015935:	jne    0x140015817
   14001593b:	lea    rcx,[rip+0x1bb16]        # 0x140031458
   140015942:	call   0x14001bc00
   140015947:	cmp    DWORD PTR [rip+0x2885a],r13d        # 0x14003e1a8
   14001594e:	je     0x140015817
   140015954:	mov    WORD PTR [rip+0x29e38],r14w        # 0x14003f794
   14001595c:	lea    r8,[rsp+0x78]
   140015961:	mov    edx,DWORD PTR [rsp+0x30]
   140015965:	lea    rcx,[rsp+0x60]
   14001596a:	call   0x140028fd0
   14001596f:	test   eax,eax
   140015971:	je     0x140015986
   140015973:	cmp    WORD PTR [rip+0x29e19],0xffff        # 0x14003f794
   14001597b:	jne    0x140015817
   140015981:	jmp    0x1400156b8
   140015986:	mov    WORD PTR [rip+0x29e06],r13w        # 0x14003f794
   14001598e:	lea    rcx,[rip+0x1bac3]        # 0x140031458
   140015995:	call   QWORD PTR [rip+0x19ac5]        # 0x14002f460
   14001599b:	mov    r13d,0x2
   1400159a1:	mov    WORD PTR [rip+0x294af],r13w        # 0x14003ee58
   1400159a9:	xor    esi,esi
   1400159ab:	mov    WORD PTR [rip+0x287f2],si        # 0x14003e1a4
   1400159b2:	movzx  r9d,si
   1400159b6:	lea    rax,[rbp-0x60]
   1400159ba:	mov    ecx,r13d
   1400159bd:	nop    DWORD PTR [rax]
   1400159c0:	add    r9w,WORD PTR [rax]
   1400159c4:	lea    rax,[rax+0x2]
   1400159c8:	dec    rcx
   1400159cb:	jne    0x1400159c0
   1400159cd:	mov    WORD PTR [rip+0x29473],r9w        # 0x14003ee48
   1400159d5:	mov    eax,0x9
   1400159da:	mov    WORD PTR [rip+0x2947f],ax        # 0x14003ee60
   1400159e1:	mov    WORD PTR [rip+0x29467],r9w        # 0x14003ee50
   1400159e9:	lea    r8,[rip+0x1ba88]        # 0x140031478
   1400159f0:	mov    rdx,rbx
   1400159f3:	mov    al,0x45
   1400159f5:	mov    r10,QWORD PTR [rip+0x278fc]        # 0x14003d2f8
   1400159fc:	lea    r11,[rip+0x1b7fd]        # 0x140031200
   140015a03:	cmp    al,0x20
   140015a05:	jae    0x140015a11
   140015a07:	movzx  eax,al
   140015a0a:	movzx  ecx,WORD PTR [r11+rax*2]
   140015a0f:	jmp    0x140015a26
   140015a11:	cmp    al,0x80
   140015a13:	jae    0x140015a1a
   140015a15:	movzx  ecx,al
   140015a18:	jmp    0x140015a26
   140015a1a:	movzx  eax,al
   140015a1d:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   140015a26:	mov    WORD PTR [rdx],cx
   140015a29:	add    rdx,r13
   140015a2c:	inc    r8
   140015a2f:	movzx  eax,BYTE PTR [r8]
   140015a33:	test   al,al
   140015a35:	jne    0x140015a03
   140015a37:	mov    WORD PTR [rdx],si
   140015a3a:	xor    r8d,r8d
   140015a3d:	mov    rdx,rbx
   140015a40:	movzx  ecx,r9w
   140015a44:	call   QWORD PTR [rip+0x2c05e]        # 0x140041aa8
   140015a4a:	test   ax,ax
   140015a4d:	jne    0x1400156b8
   140015a53:	lea    rdi,[rip+0x2bfc6]        # 0x140041a20
   140015a5a:	mov    rax,rdi
   140015a5d:	mov    ecx,esi
   140015a5f:	nop
   140015a60:	cmp    BYTE PTR [rax],sil
   140015a63:	jne    0x140015a6b
   140015a65:	cmp    BYTE PTR [rax+0x1],sil
   140015a69:	je     0x140015a72
   140015a6b:	add    rax,r13
   140015a6e:	inc    ecx
   140015a70:	jmp    0x140015a60
   140015a72:	add    cx,cx
   140015a75:	movzx  ebx,si
   140015a78:	cmp    si,cx
   140015a7b:	jge    0x140015af8
   140015a7d:	mov    rax,QWORD PTR [rip+0x2aa5c]        # 0x1400404e0
   140015a84:	movzx  r14d,BYTE PTR [rax+0x3d]
   140015a89:	dec    cx
   140015a8c:	shr    cx,1
   140015a8f:	inc    cx
   140015a92:	movzx  esi,cx
   140015a95:	movzx  r15d,WORD PTR [rip+0x293af]        # 0x14003ee4c
   140015a9d:	mov    r12,QWORD PTR [rip+0x28664]        # 0x14003e108
   140015aa4:	nop    DWORD PTR [rax+0x0]
   140015aa8:	nop    DWORD PTR [rax+rax*1+0x0]
   140015ab0:	movzx  eax,WORD PTR [rdi]
   140015ab3:	mov    WORD PTR [rsp+0x30],ax
   140015ab8:	mov    WORD PTR [rsp+0x20],r15w
   140015abe:	mov    r9,r12
   140015ac1:	movzx  edx,r14b
   140015ac5:	lea    rcx,[rsp+0x30]
   140015aca:	call   0x140006c20
   140015acf:	movsx  r9,bx
   140015ad3:	movzx  eax,WORD PTR [rsp+0x30]
   140015ad8:	mov    WORD PTR [rbp+r9*1-0x30],ax
   140015ade:	lea    rdi,[rdi+0x2]
   140015ae2:	inc    bx
   140015ae5:	dec    rsi
   140015ae8:	jne    0x140015ab0
   140015aea:	lea    r14d,[rsi+0x1]
   140015aee:	mov    r15,QWORD PTR [rsp+0x48]
   140015af3:	mov    r12,QWORD PTR [rsp+0x38]
   140015af8:	lea    rcx,[rbp-0x30]
   140015afc:	call   0x140006d50
   140015b01:	test   ax,ax
   140015b04:	jns    0x140015b15
   140015b06:	cmp    ax,0xffff
   140015b0a:	je     0x140015ceb
   140015b10:	jmp    0x140015817
   140015b15:	mov    WORD PTR [rip+0x2a694],ax        # 0x1400401b0
   140015b1c:	mov    rcx,rsi
   140015b1f:	lea    rdx,[rip+0x1b942]        # 0x140031468
   140015b26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015b30:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140015b34:	mov    BYTE PTR [rbp+rcx*1-0x50],al
   140015b38:	lea    rcx,[rcx+0x1]
   140015b3c:	test   al,al
   140015b3e:	jne    0x140015b30
   140015b40:	lea    rcx,[rbp-0x50]
   140015b44:	call   0x14002ae90
   140015b49:	mov    rsi,rax
   140015b4c:	mov    ebx,0x3
   140015b51:	mov    edx,ebx
   140015b53:	mov    rcx,rax
   140015b56:	call   0x14002ab70
   140015b5b:	mov    rdi,rax
   140015b5e:	test   rax,rax
   140015b61:	jne    0x140015b6b
   140015b63:	or     eax,0xffffffff
   140015b66:	jmp    0x140015db8
   140015b6b:	mov    rcx,rsi
   140015b6e:	call   0x14002af10
   140015b73:	xor    edx,edx
   140015b75:	mov    rcx,QWORD PTR [rdi]
   140015b78:	call   QWORD PTR [rip+0x196a2]        # 0x14002f220
   140015b7e:	mov    DWORD PTR [rip+0x28624],eax        # 0x14003e1a8
   140015b84:	xor    esi,esi
   140015b86:	mov    WORD PTR [rip+0x292b7],si        # 0x14003ee44
   140015b8d:	mov    WORD PTR [rip+0x292c8],si        # 0x14003ee5c
   140015b94:	test   eax,eax
   140015b96:	jne    0x140015ba0
   140015b98:	movzx  eax,bx
   140015b9b:	jmp    0x140015db8
   140015ba0:	mov    r9,r12
   140015ba3:	mov    r8,QWORD PTR [rsp+0x40]
   140015ba8:	mov    rdx,rdi
   140015bab:	call   0x140015de0
   140015bb0:	test   ax,ax
   140015bb3:	jns    0x140015bc9
   140015bb5:	cwde   
   140015bb6:	cmp    eax,0xfffffffc
   140015bb9:	je     0x1400156b8
   140015bbf:	cmp    eax,0xffffffff
   140015bc2:	je     0x140015b98
   140015bc4:	jmp    0x140015ceb
   140015bc9:	mov    rcx,r15
   140015bcc:	call   QWORD PTR [rip+0x198ae]        # 0x14002f480
   140015bd2:	mov    rcx,rdi
   140015bd5:	call   0x14002a9e0
   140015bda:	lea    rax,[rip+0x1b887]        # 0x140031468
   140015be1:	mov    rcx,rax
   140015be4:	call   QWORD PTR [rip+0x19876]        # 0x14002f460
   140015bea:	cmp    WORD PTR [rip+0x2bdeb],si        # 0x1400419dc
   140015bf1:	je     0x140015d70
   140015bf7:	mov    WORD PTR [rip+0x2925a],bx        # 0x14003ee58
   140015bfe:	mov    WORD PTR [rip+0x2859f],si        # 0x14003e1a4
   140015c05:	movzx  r9d,si
   140015c09:	lea    rax,[rbp-0x60]
   140015c0d:	mov    rcx,rbx
   140015c10:	add    r9w,WORD PTR [rax]
   140015c14:	lea    rax,[rax+0x2]
   140015c18:	dec    rcx
   140015c1b:	jne    0x140015c10
   140015c1d:	mov    WORD PTR [rip+0x29223],r9w        # 0x14003ee48
   140015c25:	mov    eax,0x10
   140015c2a:	mov    WORD PTR [rip+0x2922f],ax        # 0x14003ee60
   140015c31:	mov    WORD PTR [rip+0x29217],r9w        # 0x14003ee50
   140015c39:	lea    r8,[rip+0x1b720]        # 0x140031360
   140015c40:	lea    rdx,[rip+0x28569]        # 0x14003e1b0
   140015c47:	mov    al,0x43
   140015c49:	mov    r10,QWORD PTR [rip+0x276a8]        # 0x14003d2f8
   140015c50:	lea    rsi,[rip+0x1b5a9]        # 0x140031200
   140015c57:	cmp    al,0x20
   140015c59:	jae    0x140015c64
   140015c5b:	movzx  eax,al
   140015c5e:	movzx  ecx,WORD PTR [rsi+rax*2]
   140015c62:	jmp    0x140015c79
   140015c64:	cmp    al,0x80
   140015c66:	jae    0x140015c6d
   140015c68:	movzx  ecx,al
   140015c6b:	jmp    0x140015c79
   140015c6d:	movzx  eax,al
   140015c70:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   140015c79:	mov    WORD PTR [rdx],cx
   140015c7c:	add    rdx,r13
   140015c7f:	inc    r8
   140015c82:	movzx  eax,BYTE PTR [r8]
   140015c86:	test   al,al
   140015c88:	jne    0x140015c57
   140015c8a:	xor    esi,esi
   140015c8c:	mov    WORD PTR [rdx],si
   140015c8f:	xor    r8d,r8d
   140015c92:	lea    rdx,[rip+0x28517]        # 0x14003e1b0
   140015c99:	movzx  ecx,r9w
   140015c9d:	call   QWORD PTR [rip+0x2be05]        # 0x140041aa8
   140015ca3:	test   ax,ax
   140015ca6:	jne    0x1400156b8
   140015cac:	lea    rcx,[rip+0x1b6bd]        # 0x140031370
   140015cb3:	call   0x14001bc00
   140015cb8:	cmp    DWORD PTR [rip+0x284ea],esi        # 0x14003e1a8
   140015cbe:	je     0x140015b98
   140015cc4:	call   0x140013770
   140015cc9:	test   ax,ax
   140015ccc:	je     0x140015d08
   140015cce:	cwde   
   140015ccf:	cmp    eax,0xfffffff9
   140015cd2:	je     0x140015cfe
   140015cd4:	cmp    eax,0xfffffffc
   140015cd7:	je     0x1400156b8
   140015cdd:	cmp    eax,0xfffffffe
   140015ce0:	je     0x140015cf5
   140015ce2:	cmp    eax,0xffffffff
   140015ce5:	je     0x1400156d9
   140015ceb:	mov    eax,0x4
   140015cf0:	jmp    0x140015db8
   140015cf5:	movzx  eax,r13w
   140015cf9:	jmp    0x140015db8
   140015cfe:	mov    eax,0x7
   140015d03:	jmp    0x140015db8
   140015d08:	lea    rcx,[rip+0x1b661]        # 0x140031370
   140015d0f:	call   QWORD PTR [rip+0x1974b]        # 0x14002f460
   140015d15:	mov    rcx,QWORD PTR [rip+0x283cc]        # 0x14003e0e8
   140015d1c:	test   rcx,rcx
   140015d1f:	je     0x140015d2e
   140015d21:	call   QWORD PTR [rip+0x19759]        # 0x14002f480
   140015d27:	mov    QWORD PTR [rip+0x283ba],rsi        # 0x14003e0e8
   140015d2e:	mov    rcx,QWORD PTR [rip+0x283bb]        # 0x14003e0f0
   140015d35:	test   rcx,rcx
   140015d38:	je     0x140015d47
   140015d3a:	call   QWORD PTR [rip+0x19740]        # 0x14002f480
   140015d40:	mov    QWORD PTR [rip+0x283a9],rsi        # 0x14003e0f0
   140015d47:	mov    rcx,QWORD PTR [rsp+0x50]
   140015d4c:	call   0x1400076e0
   140015d51:	test   ax,ax
   140015d54:	je     0x140015d67
   140015d56:	cmp    ax,0xffff
   140015d5a:	je     0x140015b98
   140015d60:	mov    eax,0x4
   140015d65:	jmp    0x140015db8
   140015d67:	lea    rcx,[rip+0x1b612]        # 0x140031380
   140015d6e:	jmp    0x140015d91
   140015d70:	lea    rcx,[rip+0x1b5f9]        # 0x140031370
   140015d77:	call   QWORD PTR [rip+0x196e3]        # 0x14002f460
   140015d7d:	lea    rcx,[rip+0x1b60c]        # 0x140031390
   140015d84:	call   QWORD PTR [rip+0x196d6]        # 0x14002f460
   140015d8a:	lea    rcx,[rip+0x1b60f]        # 0x1400313a0
   140015d91:	call   QWORD PTR [rip+0x196c9]        # 0x14002f460
   140015d97:	call   0x1400049e0
   140015d9c:	mov    rcx,QWORD PTR [rip+0x2a73d]        # 0x1400404e0
   140015da3:	test   rcx,rcx
   140015da6:	je     0x140015db5
   140015da8:	call   QWORD PTR [rip+0x196d2]        # 0x14002f480
   140015dae:	mov    QWORD PTR [rip+0x2a72b],rsi        # 0x1400404e0
   140015db5:	movzx  eax,si
   140015db8:	mov    rcx,QWORD PTR [rbp+0x50]
   140015dbc:	xor    rcx,rsp
   140015dbf:	call   0x14002c960
   140015dc4:	mov    rbx,QWORD PTR [rsp+0x1b8]
   140015dcc:	add    rsp,0x160
   140015dd3:	pop    r15
   140015dd5:	pop    r14
   140015dd7:	pop    r13
   140015dd9:	pop    r12
   140015ddb:	pop    rdi
   140015ddc:	pop    rsi
   140015ddd:	pop    rbp
   140015dde:	ret    
   140015ddf:	int3   
   140015de0:	rex push rbp
   140015de2:	push   rsi
   140015de3:	push   rdi
   140015de4:	push   r12
   140015de6:	push   r13
   140015de8:	push   r14
   140015dea:	push   r15
   140015dec:	lea    rbp,[rsp-0x27]
   140015df1:	sub    rsp,0xe0
   140015df8:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140015e00:	mov    QWORD PTR [rsp+0x120],rbx
   140015e08:	mov    rax,QWORD PTR [rip+0x261f1]        # 0x14003c000
   140015e0f:	xor    rax,rsp
   140015e12:	mov    QWORD PTR [rbp+0x17],rax
   140015e16:	mov    QWORD PTR [rbp-0x21],r9
   140015e1a:	mov    rdi,r8
   140015e1d:	mov    QWORD PTR [rbp-0x29],r8
   140015e21:	mov    QWORD PTR [rbp-0x19],rdx
   140015e25:	mov    rax,QWORD PTR [rip+0x2a6b4]        # 0x1400404e0
   140015e2c:	mov    QWORD PTR [rbp-0x69],rax
   140015e30:	mov    rax,QWORD PTR [rip+0x282c9]        # 0x14003e100
   140015e37:	mov    QWORD PTR [rip+0x2fada],rax        # 0x140045918
   140015e3e:	xor    r15d,r15d
   140015e41:	movzx  eax,r15w
   140015e45:	mov    DWORD PTR [rbp-0x6d],eax
   140015e48:	lea    esi,[r15+0x1]
   140015e4c:	mov    ebx,DWORD PTR [rip+0x2bb92]        # 0x1400419e4
   140015e52:	mov    ecx,ebx
   140015e54:	call   QWORD PTR [rip+0x195be]        # 0x14002f418
   140015e5a:	mov    r13,rax
   140015e5d:	test   rax,rax
   140015e60:	jne    0x140015e6c
   140015e62:	mov    eax,0x4
   140015e67:	jmp    0x1400171fa
   140015e6c:	mov    rcx,rbx
   140015e6f:	call   QWORD PTR [rip+0x195a3]        # 0x14002f418
   140015e75:	mov    r14,rax
   140015e78:	mov    QWORD PTR [rbp-0x41],rax
   140015e7c:	test   rax,rax
   140015e7f:	je     0x140015e62
   140015e81:	mov    r12,rax
   140015e84:	mov    rcx,r15
   140015e87:	lea    r15,[rip+0xfffffffffffea172]        # 0x140000000
   140015e8e:	xchg   ax,ax
   140015e90:	movzx  eax,BYTE PTR [rcx+r15*1+0x31370]
   140015e99:	mov    BYTE PTR [rbp+rcx*1-0x9],al
   140015e9d:	lea    rcx,[rcx+0x1]
   140015ea1:	test   al,al
   140015ea3:	jne    0x140015e90
   140015ea5:	mov    ecx,0x10
   140015eaa:	call   QWORD PTR [rip+0x19ae8]        # 0x14002f998
   140015eb0:	mov    rbx,rax
   140015eb3:	mov    QWORD PTR [rbp-0x51],rax
   140015eb7:	test   rax,rax
   140015eba:	mov    r15d,0x0
   140015ec0:	je     0x140015ef6
   140015ec2:	mov    WORD PTR [rax],r15w
   140015ec6:	mov    QWORD PTR [rax+0x8],r15
   140015eca:	lea    rcx,[rbp-0x9]
   140015ece:	call   QWORD PTR [rip+0x193ac]        # 0x14002f280
   140015ed4:	test   eax,eax
   140015ed6:	jle    0x140015ef9
   140015ed8:	inc    eax
   140015eda:	movsxd rcx,eax
   140015edd:	call   QWORD PTR [rip+0x19ab5]        # 0x14002f998
   140015ee3:	mov    QWORD PTR [rbx+0x8],rax
   140015ee7:	lea    rdx,[rbp-0x9]
   140015eeb:	mov    rcx,rax
   140015eee:	call   QWORD PTR [rip+0x19364]        # 0x14002f258
   140015ef4:	jmp    0x140015ef9
   140015ef6:	mov    rbx,r15
   140015ef9:	mov    edx,0xa
   140015efe:	mov    rcx,rbx
   140015f01:	call   0x14002ab70
   140015f06:	mov    QWORD PTR [rbp-0x51],rax
   140015f0a:	test   rax,rax
   140015f0d:	jne    0x140015f17
   140015f0f:	or     eax,0xffffffff
   140015f12:	jmp    0x1400171fa
   140015f17:	test   rbx,rbx
   140015f1a:	je     0x140015f34
   140015f1c:	mov    rcx,QWORD PTR [rbx+0x8]
   140015f20:	test   rcx,rcx
   140015f23:	je     0x140015f2b
   140015f25:	call   QWORD PTR [rip+0x19c4d]        # 0x14002fb78
   140015f2b:	mov    rcx,rbx
   140015f2e:	call   QWORD PTR [rip+0x19c44]        # 0x14002fb78
   140015f34:	mov    rdx,r15
   140015f37:	lea    r15,[rip+0x1b54a]        # 0x140031488
   140015f3e:	xchg   ax,ax
   140015f40:	movzx  eax,BYTE PTR [rdx+r15*1]
   140015f45:	mov    BYTE PTR [rbp+rdx*1-0x9],al
   140015f49:	lea    rdx,[rdx+0x1]
   140015f4d:	test   al,al
   140015f4f:	jne    0x140015f40
   140015f51:	mov    ecx,0x10
   140015f56:	call   QWORD PTR [rip+0x19a3c]        # 0x14002f998
   140015f5c:	mov    rbx,rax
   140015f5f:	mov    QWORD PTR [rbp-0x61],rax
   140015f63:	test   rax,rax
   140015f66:	mov    r15d,0x0
   140015f6c:	je     0x140015fa2
   140015f6e:	mov    WORD PTR [rax],r15w
   140015f72:	mov    QWORD PTR [rax+0x8],r15
   140015f76:	lea    rcx,[rbp-0x9]
   140015f7a:	call   QWORD PTR [rip+0x19300]        # 0x14002f280
   140015f80:	test   eax,eax
   140015f82:	jle    0x140015fa5
   140015f84:	inc    eax
   140015f86:	movsxd rcx,eax
   140015f89:	call   QWORD PTR [rip+0x19a09]        # 0x14002f998
   140015f8f:	mov    QWORD PTR [rbx+0x8],rax
   140015f93:	lea    rdx,[rbp-0x9]
   140015f97:	mov    rcx,rax
   140015f9a:	call   QWORD PTR [rip+0x192b8]        # 0x14002f258
   140015fa0:	jmp    0x140015fa5
   140015fa2:	mov    rbx,r15
   140015fa5:	mov    edx,0xb
   140015faa:	mov    rcx,rbx
   140015fad:	call   0x14002ab70
   140015fb2:	mov    r15,rax
   140015fb5:	mov    QWORD PTR [rbp-0x61],rax
   140015fb9:	test   rax,rax
   140015fbc:	je     0x140015f0f
   140015fc2:	mov    rcx,rbx
   140015fc5:	call   0x14002af10
   140015fca:	xor    edx,edx
   140015fcc:	mov    WORD PTR [rip+0x2ba09],dx        # 0x1400419dc
   140015fd3:	movzx  eax,WORD PTR [rip+0x2a1d6]        # 0x1400401b0
   140015fda:	mov    WORD PTR [rbp-0x71],ax
   140015fde:	mov    rbx,QWORD PTR [rbp-0x69]
   140015fe2:	cmp    ax,WORD PTR [rbx+0x80]
   140015fe9:	jge    0x140017144
   140015fef:	movzx  r14d,WORD PTR [rsp+0x30]
   140015ff5:	movzx  r15d,WORD PTR [rbp-0x75]
   140015ffa:	nop    WORD PTR [rax+rax*1+0x0]
   140016000:	mov    ecx,0x1
   140016005:	mov    WORD PTR [rip+0x2a1a8],cx        # 0x1400401b4
   14001600c:	mov    WORD PTR [rip+0x2a1c5],dx        # 0x1400401d8
   140016013:	mov    WORD PTR [rsp+0x34],dx
   140016018:	mov    WORD PTR [rbp-0x7d],dx
   14001601c:	mov    WORD PTR [rip+0x280f5],ax        # 0x14003e118
   140016023:	movsx  edx,ax
   140016026:	movzx  eax,WORD PTR [rbx+0x82]
   14001602d:	imul   edx,eax
   140016030:	add    edx,DWORD PTR [rbx+0x28]
   140016033:	xor    r8d,r8d
   140016036:	mov    rcx,QWORD PTR [rip+0x2a18b]        # 0x1400401c8
   14001603d:	call   0x14002ad10
   140016042:	cmp    eax,0xffffffff
   140016045:	je     0x140015f0f
   14001604b:	movzx  r8d,WORD PTR [rbx+0x82]
   140016053:	mov    rcx,QWORD PTR [rip+0x2a16e]        # 0x1400401c8
   14001605a:	xor    eax,eax
   14001605c:	mov    QWORD PTR [rsp+0x20],rax
   140016061:	lea    r9,[rbp-0x39]
   140016065:	mov    rdx,QWORD PTR [rip+0x2f8ac]        # 0x140045918
   14001606c:	mov    rcx,QWORD PTR [rcx]
   14001606f:	call   QWORD PTR [rip+0x19193]        # 0x14002f208
   140016075:	test   eax,eax
   140016077:	jne    0x1400160b2
   140016079:	call   QWORD PTR [rip+0x190e1]        # 0x14002f160
   14001607f:	cmp    eax,0x58
   140016082:	jae    0x140016096
   140016084:	mov    eax,eax
   140016086:	lea    rcx,[rip+0xfffffffffffe9f73]        # 0x140000000
   14001608d:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140016094:	jmp    0x14001609b
   140016096:	mov    ecx,0x106
   14001609b:	mov    DWORD PTR [rip+0x2d017],ecx        # 0x1400430b8
   1400160a1:	mov    DWORD PTR [rip+0x2d41d],0x2        # 0x1400434c8
   1400160ab:	mov    BYTE PTR [rip+0x2d30e],0x0        # 0x1400433c0
   1400160b2:	movzx  eax,WORD PTR [rbx+0x82]
   1400160b9:	cmp    DWORD PTR [rbp-0x39],eax
   1400160bc:	jne    0x140015f0f
   1400160c2:	movzx  r10d,WORD PTR [rip+0x2a10e]        # 0x1400401d8
   1400160ca:	add    eax,eax
   1400160cc:	mov    DWORD PTR [rbp-0x31],eax
   1400160cf:	movzx  r11d,WORD PTR [rip+0x2a0dd]        # 0x1400401b4
   1400160d7:	cmp    r11w,ax
   1400160db:	jge    0x1400170e8
   1400160e1:	mov    rbx,QWORD PTR [rip+0x2f830]        # 0x140045918
   1400160e8:	mov    r9,QWORD PTR [rip+0x28021]        # 0x14003e110
   1400160ef:	nop
   1400160f0:	movzx  eax,r11w
   1400160f4:	sar    ax,1
   1400160f7:	movsx  ecx,r11w
   1400160fb:	and    ecx,0x80000001
   140016101:	jge    0x14001610a
   140016103:	dec    ecx
   140016105:	or     ecx,0xfffffffe
   140016108:	inc    ecx
   14001610a:	movsx  rax,ax
   14001610e:	lea    r8,[rax+rbx*1]
   140016112:	movzx  edx,BYTE PTR [r8]
   140016116:	movzx  eax,dl
   140016119:	test   ecx,ecx
   14001611b:	jne    0x140016122
   14001611d:	shr    al,0x4
   140016120:	jmp    0x140016124
   140016122:	and    al,0xf
   140016124:	cmp    al,0xd
   140016126:	jae    0x14001701e
   14001612c:	cmp    WORD PTR [rsp+0x34],0x0
   140016132:	jne    0x14001702a
   140016138:	test   al,al
   14001613a:	jne    0x140016fff
   140016140:	movsx  rax,r10w
   140016144:	cmp    rax,0x100
   14001614a:	jae    0x140017136
   140016150:	lea    rcx,[rip+0x2f6a9]        # 0x140045800
   140016157:	mov    BYTE PTR [rax+rcx*1],0x0
   14001615b:	mov    WORD PTR [rip+0x29ea5],r10w        # 0x140040008
   140016163:	lea    r9,[rbp-0x7d]
   140016167:	movzx  r8d,r11w
   14001616b:	mov    rdx,QWORD PTR [rip+0x27f8e]        # 0x14003e100
   140016172:	mov    rcx,QWORD PTR [rbp-0x69]
   140016176:	call   0x140006f70
   14001617b:	lea    r8d,[rax+0x1]
   14001617f:	mov    WORD PTR [rsp+0x38],r8w
   140016185:	movzx  ecx,r8w
   140016189:	sar    cx,1
   14001618c:	movsx  eax,r8w
   140016190:	and    eax,0x80000001
   140016195:	jge    0x14001619e
   140016197:	dec    eax
   140016199:	or     eax,0xfffffffe
   14001619c:	inc    eax
   14001619e:	test   eax,eax
   1400161a0:	movsx  rax,cx
   1400161a4:	movzx  ecx,BYTE PTR [rax+rbx*1]
   1400161a8:	jne    0x1400161af
   1400161aa:	shr    cl,0x4
   1400161ad:	jmp    0x1400161b2
   1400161af:	and    cl,0xf
   1400161b2:	movzx  edx,cl
   1400161b5:	mov    WORD PTR [rbp-0x79],dx
   1400161b9:	lea    eax,[r8+0x1]
   1400161bd:	mov    WORD PTR [rip+0x29ff0],ax        # 0x1400401b4
   1400161c4:	mov    WORD PTR [rip+0x2a00d],dx        # 0x1400401d8
   1400161cb:	movzx  eax,WORD PTR [rbp-0x7d]
   1400161cf:	mov    WORD PTR [rip+0x29fe2],ax        # 0x1400401b8
   1400161d6:	mov    rcx,QWORD PTR [rbp-0x69]
   1400161da:	call   0x140006e60
   1400161df:	cmp    ax,0x1
   1400161e3:	jne    0x140015f0f
   1400161e9:	lea    r8,[rip+0x2f540]        # 0x140045730
   1400161f0:	lea    rdx,[rip+0x2f609]        # 0x140045800
   1400161f7:	call   0x1400073e0
   1400161fc:	nop    DWORD PTR [rax+0x0]
   140016200:	test   si,si
   140016203:	je     0x14001639b
   140016209:	mov    rbx,QWORD PTR [rbp-0x19]
   14001620d:	mov    r8,rbx
   140016210:	movzx  edx,WORD PTR [rip+0x2b7cd]        # 0x1400419e4
   140016217:	mov    rcx,r13
   14001621a:	call   0x14002a640
   14001621f:	test   ax,ax
   140016222:	jle    0x14001668a
   140016228:	mov    rcx,rbx
   14001622b:	call   0x14001bd30
   140016230:	test   ax,ax
   140016233:	je     0x140016287
   140016235:	movzx  r8d,WORD PTR [rip+0x28c1f]        # 0x14003ee5c
   14001623d:	mov    WORD PTR [rip+0x27f5f],r8w        # 0x14003e1a4
   140016245:	movzx  ecx,WORD PTR [rip+0x28c14]        # 0x14003ee60
   14001624c:	imul   ecx,r8d
   140016250:	mov    eax,0x51eb851f
   140016255:	imul   ecx
   140016257:	mov    ecx,edx
   140016259:	sar    ecx,0x5
   14001625c:	mov    eax,ecx
   14001625e:	shr    eax,0x1f
   140016261:	add    ecx,eax
   140016263:	add    cx,WORD PTR [rip+0x28bde]        # 0x14003ee48
   14001626a:	mov    WORD PTR [rip+0x28bdf],cx        # 0x14003ee50
   140016271:	lea    rdx,[rip+0x27f38]        # 0x14003e1b0
   140016278:	call   QWORD PTR [rip+0x2b82a]        # 0x140041aa8
   14001627e:	test   ax,ax
   140016281:	jne    0x140017103
   140016287:	mov    rax,QWORD PTR [rbp-0x41]
   14001628b:	mov    ecx,0x20
   140016290:	mov    DWORD PTR [rax],ecx
   140016292:	xor    r9d,r9d
   140016295:	mov    QWORD PTR [rbp-0x41],r12
   140016299:	mov    rax,r13
   14001629c:	mov    rdx,r12
   14001629f:	movzx  ecx,BYTE PTR [r13+0x1]
   1400162a4:	or     cl,BYTE PTR [r13+0x0]
   1400162a8:	je     0x140015e62
   1400162ae:	movzx  r8d,WORD PTR [r12]
   1400162b3:	cmp    WORD PTR [rax],r8w
   1400162b7:	jne    0x1400162db
   1400162b9:	mov    rbx,rax
   1400162bc:	nop    DWORD PTR [rax+0x0]
   1400162c0:	lea    rdx,[rdx+0x2]
   1400162c4:	movzx  ecx,WORD PTR [rdx]
   1400162c7:	test   cx,cx
   1400162ca:	je     0x1400162ed
   1400162cc:	add    rax,0x2
   1400162d0:	cmp    WORD PTR [rax],cx
   1400162d3:	je     0x1400162c0
   1400162d5:	mov    rax,rbx
   1400162d8:	mov    rdx,r12
   1400162db:	add    rax,0x2
   1400162df:	movzx  ecx,BYTE PTR [rax+0x1]
   1400162e3:	or     cl,BYTE PTR [rax]
   1400162e5:	je     0x140015e62
   1400162eb:	jmp    0x1400162b3
   1400162ed:	test   rbx,rbx
   1400162f0:	je     0x140015e62
   1400162f6:	movzx  ecx,r9w
   1400162fa:	mov    r8,rbx
   1400162fd:	sub    r8,r13
   140016300:	test   r8,r8
   140016303:	jle    0x140016327
   140016305:	mov    rdx,r9
   140016308:	lea    r9,[rip+0x2eb21]        # 0x140044e30
   14001630f:	nop
   140016310:	movzx  eax,BYTE PTR [rdx+r13*1]
   140016315:	mov    BYTE PTR [rdx+r9*1],al
   140016319:	inc    cx
   14001631c:	movsx  rdx,cx
   140016320:	cmp    rdx,r8
   140016323:	jl     0x140016310
   140016325:	jmp    0x14001632e
   140016327:	lea    r9,[rip+0x2eb02]        # 0x140044e30
   14001632e:	movsx  rax,cx
   140016332:	cmp    rax,0x800
   140016338:	jae    0x140017130
   14001633e:	mov    BYTE PTR [rax+r9*1],0x0
   140016343:	lea    eax,[rcx+0x1]
   140016346:	movsx  rax,ax
   14001634a:	cmp    rax,0x800
   140016350:	jae    0x14001712a
   140016356:	mov    BYTE PTR [rax+r9*1],0x0
   14001635b:	lea    rdx,[rsp+0x30]
   140016360:	mov    rcx,rbx
   140016363:	call   0x14002a440
   140016368:	test   ax,ax
   14001636b:	je     0x14001710d
   140016371:	movsx  rcx,ax
   140016375:	add    rcx,rbx
   140016378:	lea    rdx,[rbp-0x75]
   14001637c:	call   0x14002a440
   140016381:	test   ax,ax
   140016384:	je     0x140015e62
   14001638a:	xor    ebx,ebx
   14001638c:	mov    esi,ebx
   14001638e:	movzx  r14d,WORD PTR [rsp+0x30]
   140016394:	movzx  r15d,WORD PTR [rbp-0x75]
   140016399:	jmp    0x14001639d
   14001639b:	xor    ebx,ebx
   14001639d:	lea    rdx,[rip+0x2ea8c]        # 0x140044e30
   1400163a4:	lea    rcx,[rip+0x2f385]        # 0x140045730
   1400163ab:	call   0x140007550
   1400163b0:	test   ax,ax
   1400163b3:	js     0x14001668a
   1400163b9:	mov    WORD PTR [rip+0x29f39],r14w        # 0x1400402fa
   1400163c1:	mov    ecx,0x3fff
   1400163c6:	mov    DWORD PTR [rip+0x29f30],ecx        # 0x1400402fc
   1400163cc:	mov    WORD PTR [rip+0x29f2c],r15w        # 0x140040300
   1400163d4:	mov    WORD PTR [rip+0x29f27],bx        # 0x140040302
   1400163db:	jle    0x140016517
   1400163e1:	mov    WORD PTR [rsp+0x20],r15w
   1400163e7:	movzx  r9d,r14w
   1400163eb:	lea    rsi,[rip+0x2f26e]        # 0x140045660
   1400163f2:	mov    rdx,rsi
   1400163f5:	lea    rax,[rip+0x2ea34]        # 0x140044e30
   1400163fc:	mov    rcx,rax
   1400163ff:	call   0x14000ab90
   140016404:	lea    rdx,[rip+0x25e99]        # 0x14003c2a4
   14001640b:	mov    rcx,rsi
   14001640e:	xchg   ax,ax
   140016410:	cmp    BYTE PTR [rcx],0x0
   140016413:	jne    0x14001641b
   140016415:	cmp    BYTE PTR [rcx+0x1],0x0
   140016419:	je     0x140016421
   14001641b:	add    rcx,0x2
   14001641f:	jmp    0x140016410
   140016421:	movzx  eax,BYTE PTR [rdx]
   140016424:	test   al,al
   140016426:	jne    0x14001642d
   140016428:	cmp    BYTE PTR [rdx+0x1],al
   14001642b:	je     0x140016440
   14001642d:	mov    BYTE PTR [rcx],al
   14001642f:	movzx  eax,BYTE PTR [rdx+0x1]
   140016433:	mov    BYTE PTR [rcx+0x1],al
   140016436:	add    rcx,0x2
   14001643a:	add    rdx,0x2
   14001643e:	jmp    0x140016421
   140016440:	mov    WORD PTR [rcx],0x0
   140016445:	mov    rax,rsi
   140016448:	mov    ecx,ebx
   14001644a:	nop    WORD PTR [rax+rax*1+0x0]
   140016450:	cmp    BYTE PTR [rax],0x0
   140016453:	jne    0x14001645b
   140016455:	cmp    BYTE PTR [rax+0x1],0x0
   140016459:	je     0x140016463
   14001645b:	add    rax,0x2
   14001645f:	inc    ecx
   140016461:	jmp    0x140016450
   140016463:	add    cx,cx
   140016466:	mov    WORD PTR [rip+0x289e7],cx        # 0x14003ee54
   14001646d:	movsx  r8,cx
   140016471:	mov    rcx,rbx
   140016474:	mov    rbx,r8
   140016477:	test   r8d,r8d
   14001647a:	jle    0x14001648b
   14001647c:	nop    DWORD PTR [rax+0x0]
   140016480:	not    BYTE PTR [rcx+rsi*1]
   140016483:	inc    rcx
   140016486:	cmp    rcx,rbx
   140016489:	jl     0x140016480
   14001648b:	xor    eax,eax
   14001648d:	mov    QWORD PTR [rsp+0x20],rax
   140016492:	lea    r9,[rbp-0x35]
   140016496:	mov    rdx,rsi
   140016499:	mov    rax,QWORD PTR [rbp-0x61]
   14001649d:	mov    rcx,QWORD PTR [rax]
   1400164a0:	call   QWORD PTR [rip+0x18d6a]        # 0x14002f210
   1400164a6:	test   eax,eax
   1400164a8:	jne    0x1400164e3
   1400164aa:	call   QWORD PTR [rip+0x18cb0]        # 0x14002f160
   1400164b0:	cmp    eax,0x58
   1400164b3:	jae    0x1400164c7
   1400164b5:	mov    eax,eax
   1400164b7:	lea    rcx,[rip+0xfffffffffffe9b42]        # 0x140000000
   1400164be:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400164c5:	jmp    0x1400164cc
   1400164c7:	mov    ecx,0x106
   1400164cc:	mov    DWORD PTR [rip+0x2cbe6],ecx        # 0x1400430b8
   1400164d2:	mov    DWORD PTR [rip+0x2cfec],0x2        # 0x1400434c8
   1400164dc:	mov    BYTE PTR [rip+0x2cedd],0x0        # 0x1400433c0
   1400164e3:	xor    eax,eax
   1400164e5:	mov    ecx,eax
   1400164e7:	test   rbx,rbx
   1400164ea:	jle    0x1400164fb
   1400164ec:	nop    DWORD PTR [rax+0x0]
   1400164f0:	not    BYTE PTR [rcx+rsi*1]
   1400164f3:	inc    rcx
   1400164f6:	cmp    rcx,rbx
   1400164f9:	jl     0x1400164f0
   1400164fb:	movsx  eax,WORD PTR [rip+0x28952]        # 0x14003ee54
   140016502:	cmp    DWORD PTR [rbp-0x35],eax
   140016505:	jne    0x140015f0f
   14001650b:	inc    DWORD PTR [rdi]
   14001650d:	mov    esi,0x1
   140016512:	jmp    0x140016200
   140016517:	cmp    r14w,WORD PTR [rip+0x29dd1]        # 0x1400402f0
   14001651f:	jne    0x140016551
   140016521:	cmp    r15w,WORD PTR [rip+0x29dcd]        # 0x1400402f6
   140016529:	jne    0x140016551
   14001652b:	cmp    cx,WORD PTR [rip+0x29dc0]        # 0x1400402f2
   140016532:	jne    0x140016551
   140016534:	cmp    bx,WORD PTR [rip+0x29db9]        # 0x1400402f4
   14001653b:	jne    0x140016551
   14001653d:	mov    eax,0x1
   140016542:	mov    WORD PTR [rip+0x2b493],ax        # 0x1400419dc
   140016549:	mov    DWORD PTR [rbp-0x6d],eax
   14001654c:	jmp    0x140016682
   140016551:	mov    WORD PTR [rsp+0x20],r15w
   140016557:	movzx  r9d,r14w
   14001655b:	lea    rsi,[rip+0x2f0fe]        # 0x140045660
   140016562:	mov    rdx,rsi
   140016565:	lea    rax,[rip+0x2e8c4]        # 0x140044e30
   14001656c:	mov    rcx,rax
   14001656f:	call   0x14000ab90
   140016574:	lea    rdx,[rip+0x25d29]        # 0x14003c2a4
   14001657b:	mov    rcx,rsi
   14001657e:	xchg   ax,ax
   140016580:	cmp    BYTE PTR [rcx],0x0
   140016583:	jne    0x14001658b
   140016585:	cmp    BYTE PTR [rcx+0x1],0x0
   140016589:	je     0x140016591
   14001658b:	add    rcx,0x2
   14001658f:	jmp    0x140016580
   140016591:	movzx  eax,BYTE PTR [rdx]
   140016594:	test   al,al
   140016596:	jne    0x14001659d
   140016598:	cmp    BYTE PTR [rdx+0x1],al
   14001659b:	je     0x1400165b0
   14001659d:	mov    BYTE PTR [rcx],al
   14001659f:	movzx  eax,BYTE PTR [rdx+0x1]
   1400165a3:	mov    BYTE PTR [rcx+0x1],al
   1400165a6:	add    rcx,0x2
   1400165aa:	add    rdx,0x2
   1400165ae:	jmp    0x140016591
   1400165b0:	mov    WORD PTR [rcx],0x0
   1400165b5:	mov    rax,rsi
   1400165b8:	mov    ecx,ebx
   1400165ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400165c0:	cmp    BYTE PTR [rax],0x0
   1400165c3:	jne    0x1400165cb
   1400165c5:	cmp    BYTE PTR [rax+0x1],0x0
   1400165c9:	je     0x1400165d3
   1400165cb:	add    rax,0x2
   1400165cf:	inc    ecx
   1400165d1:	jmp    0x1400165c0
   1400165d3:	add    cx,cx
   1400165d6:	mov    WORD PTR [rip+0x28877],cx        # 0x14003ee54
   1400165dd:	movsx  r8,cx
   1400165e1:	mov    rcx,rbx
   1400165e4:	mov    rbx,r8
   1400165e7:	test   r8d,r8d
   1400165ea:	jle    0x1400165fb
   1400165ec:	nop    DWORD PTR [rax+0x0]
   1400165f0:	not    BYTE PTR [rcx+rsi*1]
   1400165f3:	inc    rcx
   1400165f6:	cmp    rcx,rbx
   1400165f9:	jl     0x1400165f0
   1400165fb:	xor    eax,eax
   1400165fd:	mov    QWORD PTR [rsp+0x20],rax
   140016602:	lea    r9,[rbp-0x59]
   140016606:	mov    rdx,rsi
   140016609:	mov    rax,QWORD PTR [rbp-0x61]
   14001660d:	mov    rcx,QWORD PTR [rax]
   140016610:	call   QWORD PTR [rip+0x18bfa]        # 0x14002f210
   140016616:	test   eax,eax
   140016618:	jne    0x140016653
   14001661a:	call   QWORD PTR [rip+0x18b40]        # 0x14002f160
   140016620:	cmp    eax,0x58
   140016623:	jae    0x140016637
   140016625:	mov    eax,eax
   140016627:	lea    rcx,[rip+0xfffffffffffe99d2]        # 0x140000000
   14001662e:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140016635:	jmp    0x14001663c
   140016637:	mov    ecx,0x106
   14001663c:	mov    DWORD PTR [rip+0x2ca76],ecx        # 0x1400430b8
   140016642:	mov    DWORD PTR [rip+0x2ce7c],0x2        # 0x1400434c8
   14001664c:	mov    BYTE PTR [rip+0x2cd6d],0x0        # 0x1400433c0
   140016653:	xor    eax,eax
   140016655:	mov    ecx,eax
   140016657:	test   rbx,rbx
   14001665a:	jle    0x14001666b
   14001665c:	nop    DWORD PTR [rax+0x0]
   140016660:	not    BYTE PTR [rcx+rsi*1]
   140016663:	inc    rcx
   140016666:	cmp    rcx,rbx
   140016669:	jl     0x140016660
   14001666b:	movsx  eax,WORD PTR [rip+0x287e2]        # 0x14003ee54
   140016672:	cmp    DWORD PTR [rbp-0x59],eax
   140016675:	jne    0x140015f0f
   14001667b:	inc    DWORD PTR [rdi]
   14001667d:	mov    eax,0x1
   140016682:	movzx  esi,ax
   140016685:	jmp    0x140016200
   14001668a:	mov    eax,DWORD PTR [rbp-0x6d]
   14001668d:	test   ax,ax
   140016690:	jne    0x140016fdc
   140016696:	lea    rcx,[rip+0x2f093]        # 0x140045730
   14001669d:	lea    rdi,[rip+0x2e68c]        # 0x140044d30
   1400166a4:	mov    rdx,rdi
   1400166a7:	movzx  eax,BYTE PTR [rcx]
   1400166aa:	test   al,al
   1400166ac:	jne    0x1400166b3
   1400166ae:	cmp    BYTE PTR [rcx+0x1],al
   1400166b1:	je     0x1400166c6
   1400166b3:	mov    BYTE PTR [rdx],al
   1400166b5:	movzx  eax,BYTE PTR [rcx+0x1]
   1400166b9:	mov    BYTE PTR [rdx+0x1],al
   1400166bc:	add    rdx,0x2
   1400166c0:	add    rcx,0x2
   1400166c4:	jmp    0x1400166a7
   1400166c6:	movzx  eax,BYTE PTR [rcx]
   1400166c9:	mov    BYTE PTR [rdx],al
   1400166cb:	movzx  eax,BYTE PTR [rcx+0x1]
   1400166cf:	mov    BYTE PTR [rdx+0x1],al
   1400166d2:	lea    rdx,[rip+0x25a6f]        # 0x14003c148
   1400166d9:	mov    rcx,rdi
   1400166dc:	nop    DWORD PTR [rax+0x0]
   1400166e0:	cmp    BYTE PTR [rcx],0x0
   1400166e3:	jne    0x1400166eb
   1400166e5:	cmp    BYTE PTR [rcx+0x1],0x0
   1400166e9:	je     0x1400166f1
   1400166eb:	add    rcx,0x2
   1400166ef:	jmp    0x1400166e0
   1400166f1:	movzx  eax,BYTE PTR [rdx]
   1400166f4:	test   al,al
   1400166f6:	jne    0x1400166fd
   1400166f8:	cmp    BYTE PTR [rdx+0x1],al
   1400166fb:	je     0x140016710
   1400166fd:	mov    BYTE PTR [rcx],al
   1400166ff:	movzx  eax,BYTE PTR [rdx+0x1]
   140016703:	mov    BYTE PTR [rcx+0x1],al
   140016706:	add    rcx,0x2
   14001670a:	add    rdx,0x2
   14001670e:	jmp    0x1400166f1
   140016710:	mov    WORD PTR [rcx],0x0
   140016715:	movzx  edx,WORD PTR [rip+0x29bd4]        # 0x1400402f0
   14001671c:	xor    r11d,r11d
   14001671f:	movzx  r8d,r11w
   140016723:	lea    rbx,[rip+0x2f1d6]        # 0x140045900
   14001672a:	nop    WORD PTR [rax+rax*1+0x0]
   140016730:	movzx  ecx,dx
   140016733:	mov    eax,0x66666667
   140016738:	imul   ecx
   14001673a:	sar    edx,0x2
   14001673d:	mov    eax,edx
   14001673f:	shr    eax,0x1f
   140016742:	add    edx,eax
   140016744:	lea    eax,[rdx+rdx*4]
   140016747:	add    eax,eax
   140016749:	sub    ecx,eax
   14001674b:	add    cl,0x30
   14001674e:	movsx  rax,r8w
   140016752:	mov    BYTE PTR [rax+rbx*1],cl
   140016755:	inc    r8w
   140016759:	test   dx,dx
   14001675c:	jne    0x140016730
   14001675e:	movsx  rax,r8w
   140016762:	mov    BYTE PTR [rax+rbx*1],r11b
   140016766:	movzx  r10d,r11w
   14001676a:	mov    r9d,r11d
   14001676d:	mov    rcx,rbx
   140016770:	movzx  eax,BYTE PTR [rip+0x2f189]        # 0x140045900
   140016777:	test   al,al
   140016779:	je     0x14001678b
   14001677b:	nop    DWORD PTR [rax+rax*1+0x0]
   140016780:	inc    rcx
   140016783:	inc    r9d
   140016786:	cmp    BYTE PTR [rcx],r11b
   140016789:	jne    0x140016780
   14001678b:	dec    r9w
   14001678f:	cmp    r11w,r9w
   140016793:	jge    0x1400167cf
   140016795:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400167a0:	movsx  rdx,r10w
   1400167a4:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   1400167a9:	movsx  rax,r9w
   1400167ad:	lea    rcx,[rax+rbx*1]
   1400167b1:	movzx  eax,BYTE PTR [rcx]
   1400167b4:	mov    BYTE PTR [rdx+rbx*1],al
   1400167b7:	mov    BYTE PTR [rcx],r8b
   1400167ba:	inc    r10w
   1400167be:	dec    r9w
   1400167c2:	cmp    r10w,r9w
   1400167c6:	jl     0x1400167a0
   1400167c8:	movzx  eax,BYTE PTR [rip+0x2f131]        # 0x140045900
   1400167cf:	lea    r9,[rip+0x2ee5a]        # 0x140045630
   1400167d6:	mov    rdx,r9
   1400167d9:	mov    r8,rbx
   1400167dc:	test   al,al
   1400167de:	je     0x140016829
   1400167e0:	lea    rbx,[rip+0xfffffffffffe9819]        # 0x140000000
   1400167e7:	mov    r11d,0x20
   1400167ed:	nop    DWORD PTR [rax]
   1400167f0:	cmp    al,0x7f
   1400167f2:	ja     0x1400167f9
   1400167f4:	movzx  ecx,al
   1400167f7:	jmp    0x14001680d
   1400167f9:	cmp    al,0xfe
   1400167fb:	ja     0x14001680a
   1400167fd:	movzx  eax,al
   140016800:	movzx  ecx,WORD PTR [rbx+rax*2+0x30350]
   140016808:	jmp    0x14001680d
   14001680a:	mov    ecx,r11d
   14001680d:	mov    WORD PTR [rdx],cx
   140016810:	add    rdx,0x2
   140016814:	inc    r8
   140016817:	movzx  eax,BYTE PTR [r8]
   14001681b:	test   al,al
   14001681d:	jne    0x1400167f0
   14001681f:	xor    r11d,r11d
   140016822:	lea    rbx,[rip+0x2f0d7]        # 0x140045900
   140016829:	mov    WORD PTR [rdx],r11w
   14001682d:	mov    rdx,r9
   140016830:	mov    rcx,rdi
   140016833:	cmp    BYTE PTR [rcx],0x0
   140016836:	jne    0x14001683e
   140016838:	cmp    BYTE PTR [rcx+0x1],0x0
   14001683c:	je     0x140016844
   14001683e:	add    rcx,0x2
   140016842:	jmp    0x140016833
   140016844:	movzx  eax,BYTE PTR [rdx]
   140016847:	test   al,al
   140016849:	jne    0x140016850
   14001684b:	cmp    BYTE PTR [rdx+0x1],al
   14001684e:	je     0x140016863
   140016850:	mov    BYTE PTR [rcx],al
   140016852:	movzx  eax,BYTE PTR [rdx+0x1]
   140016856:	mov    BYTE PTR [rcx+0x1],al
   140016859:	add    rcx,0x2
   14001685d:	add    rdx,0x2
   140016861:	jmp    0x140016844
   140016863:	mov    WORD PTR [rcx],0x0
   140016868:	lea    rdx,[rip+0x258d9]        # 0x14003c148
   14001686f:	mov    rcx,rdi
   140016872:	cmp    BYTE PTR [rcx],0x0
   140016875:	jne    0x14001687d
   140016877:	cmp    BYTE PTR [rcx+0x1],0x0
   14001687b:	je     0x140016883
   14001687d:	add    rcx,0x2
   140016881:	jmp    0x140016872
   140016883:	movzx  eax,BYTE PTR [rdx]
   140016886:	test   al,al
   140016888:	jne    0x14001688f
   14001688a:	cmp    BYTE PTR [rdx+0x1],al
   14001688d:	je     0x1400168a2
   14001688f:	mov    BYTE PTR [rcx],al
   140016891:	movzx  eax,BYTE PTR [rdx+0x1]
   140016895:	mov    BYTE PTR [rcx+0x1],al
   140016898:	add    rcx,0x2
   14001689c:	add    rdx,0x2
   1400168a0:	jmp    0x140016883
   1400168a2:	mov    WORD PTR [rcx],0x0
   1400168a7:	movzx  edx,WORD PTR [rip+0x29a44]        # 0x1400402f2
   1400168ae:	movzx  r8d,r11w
   1400168b2:	nop    DWORD PTR [rax+0x0]
   1400168b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400168c0:	movzx  ecx,dx
   1400168c3:	mov    eax,0x66666667
   1400168c8:	imul   ecx
   1400168ca:	sar    edx,0x2
   1400168cd:	mov    eax,edx
   1400168cf:	shr    eax,0x1f
   1400168d2:	add    edx,eax
   1400168d4:	lea    eax,[rdx+rdx*4]
   1400168d7:	add    eax,eax
   1400168d9:	sub    ecx,eax
   1400168db:	add    cl,0x30
   1400168de:	movsx  rax,r8w
   1400168e2:	mov    BYTE PTR [rax+rbx*1],cl
   1400168e5:	inc    r8w
   1400168e9:	test   dx,dx
   1400168ec:	jne    0x1400168c0
   1400168ee:	movsx  rax,r8w
   1400168f2:	mov    BYTE PTR [rax+rbx*1],dl
   1400168f5:	movzx  r10d,r11w
   1400168f9:	mov    r9d,r11d
   1400168fc:	mov    rcx,rbx
   1400168ff:	movzx  eax,BYTE PTR [rip+0x2effa]        # 0x140045900
   140016906:	test   al,al
   140016908:	je     0x14001691b
   14001690a:	nop    WORD PTR [rax+rax*1+0x0]
   140016910:	inc    rcx
   140016913:	inc    r9d
   140016916:	cmp    BYTE PTR [rcx],0x0
   140016919:	jne    0x140016910
   14001691b:	dec    r9w
   14001691f:	cmp    r11w,r9w
   140016923:	jge    0x14001695f
   140016925:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016930:	movsx  rdx,r10w
   140016934:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   140016939:	movsx  rax,r9w
   14001693d:	lea    rcx,[rax+rbx*1]
   140016941:	movzx  eax,BYTE PTR [rcx]
   140016944:	mov    BYTE PTR [rdx+rbx*1],al
   140016947:	mov    BYTE PTR [rcx],r8b
   14001694a:	inc    r10w
   14001694e:	dec    r9w
   140016952:	cmp    r10w,r9w
   140016956:	jl     0x140016930
   140016958:	movzx  eax,BYTE PTR [rip+0x2efa1]        # 0x140045900
   14001695f:	lea    r9,[rip+0x2ecca]        # 0x140045630
   140016966:	mov    rdx,r9
   140016969:	mov    r8,rbx
   14001696c:	test   al,al
   14001696e:	je     0x1400169b9
   140016970:	lea    rbx,[rip+0xfffffffffffe9689]        # 0x140000000
   140016977:	mov    r11d,0x20
   14001697d:	nop    DWORD PTR [rax]
   140016980:	cmp    al,0x7f
   140016982:	ja     0x140016989
   140016984:	movzx  ecx,al
   140016987:	jmp    0x14001699d
   140016989:	cmp    al,0xfe
   14001698b:	ja     0x14001699a
   14001698d:	movzx  eax,al
   140016990:	movzx  ecx,WORD PTR [rbx+rax*2+0x30350]
   140016998:	jmp    0x14001699d
   14001699a:	mov    ecx,r11d
   14001699d:	mov    WORD PTR [rdx],cx
   1400169a0:	add    rdx,0x2
   1400169a4:	inc    r8
   1400169a7:	movzx  eax,BYTE PTR [r8]
   1400169ab:	test   al,al
   1400169ad:	jne    0x140016980
   1400169af:	xor    r11d,r11d
   1400169b2:	lea    rbx,[rip+0x2ef47]        # 0x140045900
   1400169b9:	mov    WORD PTR [rdx],r11w
   1400169bd:	mov    rdx,r9
   1400169c0:	mov    rcx,rdi
   1400169c3:	cmp    BYTE PTR [rcx],0x0
   1400169c6:	jne    0x1400169ce
   1400169c8:	cmp    BYTE PTR [rcx+0x1],0x0
   1400169cc:	je     0x1400169d4
   1400169ce:	add    rcx,0x2
   1400169d2:	jmp    0x1400169c3
   1400169d4:	movzx  eax,BYTE PTR [rdx]
   1400169d7:	test   al,al
   1400169d9:	jne    0x1400169e0
   1400169db:	cmp    BYTE PTR [rdx+0x1],al
   1400169de:	je     0x1400169f3
   1400169e0:	mov    BYTE PTR [rcx],al
   1400169e2:	movzx  eax,BYTE PTR [rdx+0x1]
   1400169e6:	mov    BYTE PTR [rcx+0x1],al
   1400169e9:	add    rcx,0x2
   1400169ed:	add    rdx,0x2
   1400169f1:	jmp    0x1400169d4
   1400169f3:	mov    WORD PTR [rcx],0x0
   1400169f8:	lea    rdx,[rip+0x25749]        # 0x14003c148
   1400169ff:	mov    rcx,rdi
   140016a02:	cmp    BYTE PTR [rcx],0x0
   140016a05:	jne    0x140016a0d
   140016a07:	cmp    BYTE PTR [rcx+0x1],0x0
   140016a0b:	je     0x140016a13
   140016a0d:	add    rcx,0x2
   140016a11:	jmp    0x140016a02
   140016a13:	movzx  eax,BYTE PTR [rdx]
   140016a16:	test   al,al
   140016a18:	jne    0x140016a1f
   140016a1a:	cmp    BYTE PTR [rdx+0x1],al
   140016a1d:	je     0x140016a32
   140016a1f:	mov    BYTE PTR [rcx],al
   140016a21:	movzx  eax,BYTE PTR [rdx+0x1]
   140016a25:	mov    BYTE PTR [rcx+0x1],al
   140016a28:	add    rcx,0x2
   140016a2c:	add    rdx,0x2
   140016a30:	jmp    0x140016a13
   140016a32:	mov    WORD PTR [rcx],0x0
   140016a37:	movzx  edx,WORD PTR [rip+0x298b6]        # 0x1400402f4
   140016a3e:	movzx  r8d,r11w
   140016a42:	nop    DWORD PTR [rax+0x0]
   140016a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016a50:	movzx  ecx,dx
   140016a53:	mov    eax,0x66666667
   140016a58:	imul   ecx
   140016a5a:	sar    edx,0x2
   140016a5d:	mov    eax,edx
   140016a5f:	shr    eax,0x1f
   140016a62:	add    edx,eax
   140016a64:	lea    eax,[rdx+rdx*4]
   140016a67:	add    eax,eax
   140016a69:	sub    ecx,eax
   140016a6b:	add    cl,0x30
   140016a6e:	movsx  rax,r8w
   140016a72:	mov    BYTE PTR [rax+rbx*1],cl
   140016a75:	inc    r8w
   140016a79:	test   dx,dx
   140016a7c:	jne    0x140016a50
   140016a7e:	movsx  rax,r8w
   140016a82:	mov    BYTE PTR [rax+rbx*1],dl
   140016a85:	movzx  r10d,r11w
   140016a89:	mov    r9d,r11d
   140016a8c:	mov    rcx,rbx
   140016a8f:	movzx  eax,BYTE PTR [rip+0x2ee6a]        # 0x140045900
   140016a96:	test   al,al
   140016a98:	je     0x140016aab
   140016a9a:	nop    WORD PTR [rax+rax*1+0x0]
   140016aa0:	inc    rcx
   140016aa3:	inc    r9d
   140016aa6:	cmp    BYTE PTR [rcx],0x0
   140016aa9:	jne    0x140016aa0
   140016aab:	dec    r9w
   140016aaf:	cmp    r11w,r9w
   140016ab3:	jge    0x140016aef
   140016ab5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016ac0:	movsx  rdx,r10w
   140016ac4:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   140016ac9:	movsx  rax,r9w
   140016acd:	lea    rcx,[rax+rbx*1]
   140016ad1:	movzx  eax,BYTE PTR [rcx]
   140016ad4:	mov    BYTE PTR [rdx+rbx*1],al
   140016ad7:	mov    BYTE PTR [rcx],r8b
   140016ada:	inc    r10w
   140016ade:	dec    r9w
   140016ae2:	cmp    r10w,r9w
   140016ae6:	jl     0x140016ac0
   140016ae8:	movzx  eax,BYTE PTR [rip+0x2ee11]        # 0x140045900
   140016aef:	lea    r9,[rip+0x2eb3a]        # 0x140045630
   140016af6:	mov    rdx,r9
   140016af9:	mov    r8,rbx
   140016afc:	test   al,al
   140016afe:	je     0x140016b49
   140016b00:	lea    rbx,[rip+0xfffffffffffe94f9]        # 0x140000000
   140016b07:	mov    r11d,0x20
   140016b0d:	nop    DWORD PTR [rax]
   140016b10:	cmp    al,0x7f
   140016b12:	ja     0x140016b19
   140016b14:	movzx  ecx,al
   140016b17:	jmp    0x140016b2d
   140016b19:	cmp    al,0xfe
   140016b1b:	ja     0x140016b2a
   140016b1d:	movzx  eax,al
   140016b20:	movzx  ecx,WORD PTR [rbx+rax*2+0x30350]
   140016b28:	jmp    0x140016b2d
   140016b2a:	mov    ecx,r11d
   140016b2d:	mov    WORD PTR [rdx],cx
   140016b30:	add    rdx,0x2
   140016b34:	inc    r8
   140016b37:	movzx  eax,BYTE PTR [r8]
   140016b3b:	test   al,al
   140016b3d:	jne    0x140016b10
   140016b3f:	xor    r11d,r11d
   140016b42:	lea    rbx,[rip+0x2edb7]        # 0x140045900
   140016b49:	mov    WORD PTR [rdx],r11w
   140016b4d:	mov    rdx,r9
   140016b50:	mov    rcx,rdi
   140016b53:	cmp    BYTE PTR [rcx],0x0
   140016b56:	jne    0x140016b5e
   140016b58:	cmp    BYTE PTR [rcx+0x1],0x0
   140016b5c:	je     0x140016b64
   140016b5e:	add    rcx,0x2
   140016b62:	jmp    0x140016b53
   140016b64:	movzx  eax,BYTE PTR [rdx]
   140016b67:	test   al,al
   140016b69:	jne    0x140016b70
   140016b6b:	cmp    BYTE PTR [rdx+0x1],al
   140016b6e:	je     0x140016b83
   140016b70:	mov    BYTE PTR [rcx],al
   140016b72:	movzx  eax,BYTE PTR [rdx+0x1]
   140016b76:	mov    BYTE PTR [rcx+0x1],al
   140016b79:	add    rcx,0x2
   140016b7d:	add    rdx,0x2
   140016b81:	jmp    0x140016b64
   140016b83:	mov    WORD PTR [rcx],0x0
   140016b88:	lea    rdx,[rip+0x255b9]        # 0x14003c148
   140016b8f:	mov    rcx,rdi
   140016b92:	cmp    BYTE PTR [rcx],0x0
   140016b95:	jne    0x140016b9d
   140016b97:	cmp    BYTE PTR [rcx+0x1],0x0
   140016b9b:	je     0x140016ba3
   140016b9d:	add    rcx,0x2
   140016ba1:	jmp    0x140016b92
   140016ba3:	movzx  eax,BYTE PTR [rdx]
   140016ba6:	test   al,al
   140016ba8:	jne    0x140016baf
   140016baa:	cmp    BYTE PTR [rdx+0x1],al
   140016bad:	je     0x140016bc2
   140016baf:	mov    BYTE PTR [rcx],al
   140016bb1:	movzx  eax,BYTE PTR [rdx+0x1]
   140016bb5:	mov    BYTE PTR [rcx+0x1],al
   140016bb8:	add    rcx,0x2
   140016bbc:	add    rdx,0x2
   140016bc0:	jmp    0x140016ba3
   140016bc2:	mov    WORD PTR [rcx],0x0
   140016bc7:	movzx  edx,WORD PTR [rip+0x29728]        # 0x1400402f6
   140016bce:	movzx  r8d,r11w
   140016bd2:	nop    DWORD PTR [rax+0x0]
   140016bd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016be0:	movzx  ecx,dx
   140016be3:	mov    eax,0x66666667
   140016be8:	imul   ecx
   140016bea:	sar    edx,0x2
   140016bed:	mov    eax,edx
   140016bef:	shr    eax,0x1f
   140016bf2:	add    edx,eax
   140016bf4:	lea    eax,[rdx+rdx*4]
   140016bf7:	add    eax,eax
   140016bf9:	sub    ecx,eax
   140016bfb:	add    cl,0x30
   140016bfe:	movsx  rax,r8w
   140016c02:	mov    BYTE PTR [rax+rbx*1],cl
   140016c05:	inc    r8w
   140016c09:	test   dx,dx
   140016c0c:	jne    0x140016be0
   140016c0e:	movsx  rax,r8w
   140016c12:	mov    BYTE PTR [rax+rbx*1],dl
   140016c15:	movzx  r10d,r11w
   140016c19:	mov    r9d,r11d
   140016c1c:	mov    rcx,rbx
   140016c1f:	movzx  eax,BYTE PTR [rip+0x2ecda]        # 0x140045900
   140016c26:	test   al,al
   140016c28:	je     0x140016c3b
   140016c2a:	nop    WORD PTR [rax+rax*1+0x0]
   140016c30:	inc    rcx
   140016c33:	inc    r9d
   140016c36:	cmp    BYTE PTR [rcx],0x0
   140016c39:	jne    0x140016c30
   140016c3b:	dec    r9w
   140016c3f:	cmp    r11w,r9w
   140016c43:	jge    0x140016c7f
   140016c45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016c50:	movsx  rdx,r10w
   140016c54:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   140016c59:	movsx  rax,r9w
   140016c5d:	lea    rcx,[rax+rbx*1]
   140016c61:	movzx  eax,BYTE PTR [rcx]
   140016c64:	mov    BYTE PTR [rdx+rbx*1],al
   140016c67:	mov    BYTE PTR [rcx],r8b
   140016c6a:	inc    r10w
   140016c6e:	dec    r9w
   140016c72:	cmp    r10w,r9w
   140016c76:	jl     0x140016c50
   140016c78:	movzx  eax,BYTE PTR [rip+0x2ec81]        # 0x140045900
   140016c7f:	lea    r9,[rip+0x2e9aa]        # 0x140045630
   140016c86:	mov    rdx,r9
   140016c89:	mov    r8,rbx
   140016c8c:	test   al,al
   140016c8e:	je     0x140016cd9
   140016c90:	lea    rbx,[rip+0xfffffffffffe9369]        # 0x140000000
   140016c97:	mov    r11d,0x20
   140016c9d:	nop    DWORD PTR [rax]
   140016ca0:	cmp    al,0x7f
   140016ca2:	ja     0x140016ca9
   140016ca4:	movzx  ecx,al
   140016ca7:	jmp    0x140016cbd
   140016ca9:	cmp    al,0xfe
   140016cab:	ja     0x140016cba
   140016cad:	movzx  eax,al
   140016cb0:	movzx  ecx,WORD PTR [rbx+rax*2+0x30350]
   140016cb8:	jmp    0x140016cbd
   140016cba:	mov    ecx,r11d
   140016cbd:	mov    WORD PTR [rdx],cx
   140016cc0:	add    rdx,0x2
   140016cc4:	inc    r8
   140016cc7:	movzx  eax,BYTE PTR [r8]
   140016ccb:	test   al,al
   140016ccd:	jne    0x140016ca0
   140016ccf:	xor    r11d,r11d
   140016cd2:	lea    rbx,[rip+0x2ec27]        # 0x140045900
   140016cd9:	mov    WORD PTR [rdx],r11w
   140016cdd:	mov    rdx,r9
   140016ce0:	mov    rcx,rdi
   140016ce3:	cmp    BYTE PTR [rcx],0x0
   140016ce6:	jne    0x140016cee
   140016ce8:	cmp    BYTE PTR [rcx+0x1],0x0
   140016cec:	je     0x140016cf4
   140016cee:	add    rcx,0x2
   140016cf2:	jmp    0x140016ce3
   140016cf4:	movzx  eax,BYTE PTR [rdx]
   140016cf7:	test   al,al
   140016cf9:	jne    0x140016d00
   140016cfb:	cmp    BYTE PTR [rdx+0x1],al
   140016cfe:	je     0x140016d13
   140016d00:	mov    BYTE PTR [rcx],al
   140016d02:	movzx  eax,BYTE PTR [rdx+0x1]
   140016d06:	mov    BYTE PTR [rcx+0x1],al
   140016d09:	add    rcx,0x2
   140016d0d:	add    rdx,0x2
   140016d11:	jmp    0x140016cf4
   140016d13:	mov    WORD PTR [rcx],0x0
   140016d18:	lea    rdx,[rip+0x25429]        # 0x14003c148
   140016d1f:	mov    rcx,rdi
   140016d22:	cmp    BYTE PTR [rcx],0x0
   140016d25:	jne    0x140016d2d
   140016d27:	cmp    BYTE PTR [rcx+0x1],0x0
   140016d2b:	je     0x140016d33
   140016d2d:	add    rcx,0x2
   140016d31:	jmp    0x140016d22
   140016d33:	movzx  eax,BYTE PTR [rdx]
   140016d36:	test   al,al
   140016d38:	jne    0x140016d3f
   140016d3a:	cmp    BYTE PTR [rdx+0x1],al
   140016d3d:	je     0x140016d52
   140016d3f:	mov    BYTE PTR [rcx],al
   140016d41:	movzx  eax,BYTE PTR [rdx+0x1]
   140016d45:	mov    BYTE PTR [rcx+0x1],al
   140016d48:	add    rcx,0x2
   140016d4c:	add    rdx,0x2
   140016d50:	jmp    0x140016d33
   140016d52:	mov    WORD PTR [rcx],0x0
   140016d57:	movzx  edx,WORD PTR [rip+0x2959a]        # 0x1400402f8
   140016d5e:	movzx  r8d,r11w
   140016d62:	nop    DWORD PTR [rax+0x0]
   140016d66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016d70:	movzx  ecx,dx
   140016d73:	mov    eax,0x66666667
   140016d78:	imul   ecx
   140016d7a:	sar    edx,0x2
   140016d7d:	mov    eax,edx
   140016d7f:	shr    eax,0x1f
   140016d82:	add    edx,eax
   140016d84:	lea    eax,[rdx+rdx*4]
   140016d87:	add    eax,eax
   140016d89:	sub    ecx,eax
   140016d8b:	add    cl,0x30
   140016d8e:	movsx  rax,r8w
   140016d92:	mov    BYTE PTR [rax+rbx*1],cl
   140016d95:	inc    r8w
   140016d99:	test   dx,dx
   140016d9c:	jne    0x140016d70
   140016d9e:	movsx  rax,r8w
   140016da2:	mov    BYTE PTR [rax+rbx*1],dl
   140016da5:	movzx  r10d,r11w
   140016da9:	mov    r9d,r11d
   140016dac:	mov    rcx,rbx
   140016daf:	movzx  eax,BYTE PTR [rip+0x2eb4a]        # 0x140045900
   140016db6:	test   al,al
   140016db8:	je     0x140016dcb
   140016dba:	nop    WORD PTR [rax+rax*1+0x0]
   140016dc0:	inc    rcx
   140016dc3:	inc    r9d
   140016dc6:	cmp    BYTE PTR [rcx],0x0
   140016dc9:	jne    0x140016dc0
   140016dcb:	dec    r9w
   140016dcf:	cmp    r11w,r9w
   140016dd3:	jge    0x140016e0f
   140016dd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016de0:	movsx  rdx,r10w
   140016de4:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   140016de9:	movsx  rax,r9w
   140016ded:	lea    rcx,[rax+rbx*1]
   140016df1:	movzx  eax,BYTE PTR [rcx]
   140016df4:	mov    BYTE PTR [rdx+rbx*1],al
   140016df7:	mov    BYTE PTR [rcx],r8b
   140016dfa:	inc    r10w
   140016dfe:	dec    r9w
   140016e02:	cmp    r10w,r9w
   140016e06:	jl     0x140016de0
   140016e08:	movzx  eax,BYTE PTR [rip+0x2eaf1]        # 0x140045900
   140016e0f:	lea    r9,[rip+0x2e81a]        # 0x140045630
   140016e16:	mov    rdx,r9
   140016e19:	mov    r8,rbx
   140016e1c:	test   al,al
   140016e1e:	je     0x140016e69
   140016e20:	lea    r11,[rip+0xfffffffffffe91d9]        # 0x140000000
   140016e27:	mov    r14d,0x20
   140016e2d:	nop    DWORD PTR [rax]
   140016e30:	cmp    al,0x7f
   140016e32:	ja     0x140016e39
   140016e34:	movzx  ecx,al
   140016e37:	jmp    0x140016e4e
   140016e39:	cmp    al,0xfe
   140016e3b:	ja     0x140016e4b
   140016e3d:	movzx  eax,al
   140016e40:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   140016e49:	jmp    0x140016e4e
   140016e4b:	mov    ecx,r14d
   140016e4e:	mov    WORD PTR [rdx],cx
   140016e51:	add    rdx,0x2
   140016e55:	inc    r8
   140016e58:	movzx  eax,BYTE PTR [r8]
   140016e5c:	test   al,al
   140016e5e:	jne    0x140016e30
   140016e60:	movzx  r14d,WORD PTR [rsp+0x30]
   140016e66:	xor    r11d,r11d
   140016e69:	mov    WORD PTR [rdx],r11w
   140016e6d:	mov    rdx,r9
   140016e70:	mov    rcx,rdi
   140016e73:	cmp    BYTE PTR [rcx],0x0
   140016e76:	jne    0x140016e7e
   140016e78:	cmp    BYTE PTR [rcx+0x1],0x0
   140016e7c:	je     0x140016e84
   140016e7e:	add    rcx,0x2
   140016e82:	jmp    0x140016e73
   140016e84:	movzx  eax,BYTE PTR [rdx]
   140016e87:	test   al,al
   140016e89:	jne    0x140016e90
   140016e8b:	cmp    BYTE PTR [rdx+0x1],al
   140016e8e:	je     0x140016ea3
   140016e90:	mov    BYTE PTR [rcx],al
   140016e92:	movzx  eax,BYTE PTR [rdx+0x1]
   140016e96:	mov    BYTE PTR [rcx+0x1],al
   140016e99:	add    rcx,0x2
   140016e9d:	add    rdx,0x2
   140016ea1:	jmp    0x140016e84
   140016ea3:	mov    WORD PTR [rcx],0x0
   140016ea8:	lea    rdx,[rip+0x253f5]        # 0x14003c2a4
   140016eaf:	mov    rcx,rdi
   140016eb2:	cmp    BYTE PTR [rcx],0x0
   140016eb5:	jne    0x140016ebd
   140016eb7:	cmp    BYTE PTR [rcx+0x1],0x0
   140016ebb:	je     0x140016ec3
   140016ebd:	add    rcx,0x2
   140016ec1:	jmp    0x140016eb2
   140016ec3:	movzx  eax,BYTE PTR [rdx]
   140016ec6:	test   al,al
   140016ec8:	jne    0x140016ecf
   140016eca:	cmp    BYTE PTR [rdx+0x1],al
   140016ecd:	je     0x140016ee2
   140016ecf:	mov    BYTE PTR [rcx],al
   140016ed1:	movzx  eax,BYTE PTR [rdx+0x1]
   140016ed5:	mov    BYTE PTR [rcx+0x1],al
   140016ed8:	add    rcx,0x2
   140016edc:	add    rdx,0x2
   140016ee0:	jmp    0x140016ec3
   140016ee2:	mov    WORD PTR [rcx],0x0
   140016ee7:	mov    rax,rdi
   140016eea:	mov    ecx,r11d
   140016eed:	nop    DWORD PTR [rax]
   140016ef0:	cmp    BYTE PTR [rax],0x0
   140016ef3:	jne    0x140016efb
   140016ef5:	cmp    BYTE PTR [rax+0x1],0x0
   140016ef9:	je     0x140016f03
   140016efb:	add    rax,0x2
   140016eff:	inc    ecx
   140016f01:	jmp    0x140016ef0
   140016f03:	lea    edi,[rcx+rcx*1]
   140016f06:	mov    rcx,r11
   140016f09:	movsxd rbx,edi
   140016f0c:	lea    r10,[rip+0x2de1d]        # 0x140044d30
   140016f13:	test   edi,edi
   140016f15:	jle    0x140016f2c
   140016f17:	nop    WORD PTR [rax+rax*1+0x0]
   140016f20:	not    BYTE PTR [rcx+r10*1]
   140016f24:	inc    rcx
   140016f27:	cmp    rcx,rbx
   140016f2a:	jl     0x140016f20
   140016f2c:	mov    QWORD PTR [rsp+0x20],r11
   140016f31:	lea    r9,[rbp-0x49]
   140016f35:	mov    r8d,edi
   140016f38:	mov    rdx,r10
   140016f3b:	mov    rax,QWORD PTR [rbp-0x51]
   140016f3f:	mov    rcx,QWORD PTR [rax]
   140016f42:	call   QWORD PTR [rip+0x182c8]        # 0x14002f210
   140016f48:	test   eax,eax
   140016f4a:	jne    0x140016f85
   140016f4c:	call   QWORD PTR [rip+0x1820e]        # 0x14002f160
   140016f52:	cmp    eax,0x58
   140016f55:	jae    0x140016f69
   140016f57:	mov    eax,eax
   140016f59:	lea    rcx,[rip+0xfffffffffffe90a0]        # 0x140000000
   140016f60:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140016f67:	jmp    0x140016f6e
   140016f69:	mov    ecx,0x106
   140016f6e:	mov    DWORD PTR [rip+0x2c144],ecx        # 0x1400430b8
   140016f74:	mov    DWORD PTR [rip+0x2c54a],0x2        # 0x1400434c8
   140016f7e:	mov    BYTE PTR [rip+0x2c43b],0x0        # 0x1400433c0
   140016f85:	xor    eax,eax
   140016f87:	mov    ecx,eax
   140016f89:	test   edi,edi
   140016f8b:	jle    0x140016fb1
   140016f8d:	lea    rdx,[rip+0x2dd9c]        # 0x140044d30
   140016f94:	nop    DWORD PTR [rax+0x0]
   140016f98:	nop    DWORD PTR [rax+rax*1+0x0]
   140016fa0:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140016fa4:	not    al
   140016fa6:	mov    BYTE PTR [rcx+rdx*1],al
   140016fa9:	inc    rcx
   140016fac:	cmp    rcx,rbx
   140016faf:	jl     0x140016fa0
   140016fb1:	cmp    DWORD PTR [rbp-0x49],edi
   140016fb4:	jne    0x140015f0f
   140016fba:	mov    rbx,QWORD PTR [rip+0x2e957]        # 0x140045918
   140016fc1:	mov    r9,QWORD PTR [rip+0x27148]        # 0x14003e110
   140016fc8:	mov    rdi,QWORD PTR [rbp-0x29]
   140016fcc:	movzx  r10d,WORD PTR [rbp-0x79]
   140016fd1:	movzx  r11d,WORD PTR [rsp+0x38]
   140016fd7:	jmp    0x1400170bd
   140016fdc:	xor    eax,eax
   140016fde:	mov    DWORD PTR [rbp-0x6d],eax
   140016fe1:	mov    rbx,QWORD PTR [rip+0x2e930]        # 0x140045918
   140016fe8:	mov    r9,QWORD PTR [rip+0x27121]        # 0x14003e110
   140016fef:	movzx  r10d,WORD PTR [rbp-0x79]
   140016ff4:	movzx  r11d,WORD PTR [rsp+0x38]
   140016ffa:	jmp    0x1400170bd
   140016fff:	movsx  rcx,r10w
   140017003:	movzx  eax,al
   140017006:	movzx  eax,BYTE PTR [rax+r9*1]
   14001700b:	lea    rdx,[rip+0x2e7ee]        # 0x140045800
   140017012:	mov    BYTE PTR [rcx+rdx*1],al
   140017015:	inc    r10w
   140017019:	jmp    0x1400170bd
   14001701e:	cmp    WORD PTR [rsp+0x34],0x0
   140017024:	je     0x1400170b6
   14001702a:	cmp    WORD PTR [rsp+0x34],0xd
   140017030:	jne    0x140017052
   140017032:	movzx  eax,al
   140017035:	add    ax,0xd
   140017039:	movsx  rdx,r10w
   14001703d:	movsx  rcx,ax
   140017041:	movzx  eax,BYTE PTR [rcx+r9*1]
   140017046:	lea    rcx,[rip+0x2e7b3]        # 0x140045800
   14001704d:	mov    BYTE PTR [rdx+rcx*1],al
   140017050:	jmp    0x1400170ae
   140017052:	cmp    WORD PTR [rsp+0x34],0xe
   140017058:	jne    0x140017063
   14001705a:	movzx  eax,al
   14001705d:	add    ax,0x1d
   140017061:	jmp    0x140017039
   140017063:	cmp    WORD PTR [rsp+0x34],0xf
   140017069:	jne    0x1400170b2
   14001706b:	test   ecx,ecx
   14001706d:	je     0x140017082
   14001706f:	movzx  ecx,BYTE PTR [r8+0x1]
   140017074:	shr    cl,0x4
   140017077:	movzx  eax,dl
   14001707a:	shl    al,0x4
   14001707d:	movzx  edx,cl
   140017080:	or     dl,al
   140017082:	inc    r11w
   140017086:	movzx  eax,dl
   140017089:	add    ax,0x2d
   14001708d:	mov    ecx,0xff
   140017092:	cmp    ax,cx
   140017095:	jge    0x1400170cd
   140017097:	movsx  rcx,r10w
   14001709b:	movsx  rax,ax
   14001709f:	movzx  eax,BYTE PTR [rax+r9*1]
   1400170a4:	lea    rdx,[rip+0x2e755]        # 0x140045800
   1400170ab:	mov    BYTE PTR [rcx+rdx*1],al
   1400170ae:	inc    r10w
   1400170b2:	xor    eax,eax
   1400170b4:	jmp    0x1400170b9
   1400170b6:	movzx  eax,al
   1400170b9:	mov    DWORD PTR [rsp+0x34],eax
   1400170bd:	inc    r11w
   1400170c1:	cmp    r11w,WORD PTR [rbp-0x31]
   1400170c6:	jge    0x1400170e4
   1400170c8:	jmp    0x1400160f0
   1400170cd:	mov    rbx,QWORD PTR [rbp-0x69]
   1400170d1:	movzx  eax,WORD PTR [rbx+0x82]
   1400170d8:	add    ax,ax
   1400170db:	mov    WORD PTR [rip+0x290d2],ax        # 0x1400401b4
   1400170e2:	jmp    0x1400170e8
   1400170e4:	mov    rbx,QWORD PTR [rbp-0x69]
   1400170e8:	movzx  eax,WORD PTR [rbp-0x71]
   1400170ec:	inc    ax
   1400170ef:	mov    WORD PTR [rbp-0x71],ax
   1400170f3:	cmp    ax,WORD PTR [rbx+0x80]
   1400170fa:	jge    0x14001713c
   1400170fc:	xor    edx,edx
   1400170fe:	jmp    0x140016000
   140017103:	mov    eax,0xfffffffc
   140017108:	jmp    0x1400171fa
   14001710d:	movzx  eax,BYTE PTR [rbx]
   140017110:	sub    al,0x30
   140017112:	cmp    al,0x9
   140017114:	ja     0x140017120
   140017116:	cmp    BYTE PTR [rbx+0x1],0x0
   14001711a:	je     0x140015e62
   140017120:	mov    eax,0x7
   140017125:	jmp    0x1400171fa
   14001712a:	call   0x14002cbc8
   14001712f:	int3   
   140017130:	call   0x14002cbc8
   140017135:	int3   
   140017136:	call   0x14002cbc8
   14001713b:	int3   
   14001713c:	mov    r14,QWORD PTR [rbp-0x41]
   140017140:	mov    r15,QWORD PTR [rbp-0x61]
   140017144:	mov    rcx,QWORD PTR [rbp-0x51]
   140017148:	call   0x14002a9e0
   14001714d:	xor    r8d,r8d
   140017150:	xor    edx,edx
   140017152:	mov    r12,QWORD PTR [rbp-0x21]
   140017156:	mov    rcx,r12
   140017159:	call   0x14002ad10
   14001715e:	cmp    eax,0xffffffff
   140017161:	jne    0x14001716d
   140017163:	mov    eax,0x3
   140017168:	jmp    0x1400171fa
   14001716d:	xor    r8d,r8d
   140017170:	xor    edx,edx
   140017172:	mov    rcx,r15
   140017175:	call   0x14002ad10
   14001717a:	cmp    eax,0xffffffff
   14001717d:	je     0x140017163
   14001717f:	xor    ebx,ebx
   140017181:	mov    edi,ebx
   140017183:	mov    rsi,QWORD PTR [rbp-0x29]
   140017187:	cmp    DWORD PTR [rsi],ebx
   140017189:	jbe    0x1400171cb
   14001718b:	nop    DWORD PTR [rax+rax*1+0x0]
   140017190:	mov    r8,r15
   140017193:	movzx  edx,WORD PTR [rip+0x2a84a]        # 0x1400419e4
   14001719a:	mov    rcx,r13
   14001719d:	call   0x14002a640
   1400171a2:	test   ax,ax
   1400171a5:	jle    0x1400171c9
   1400171a7:	mov    rcx,r13
   1400171aa:	call   0x14002af90
   1400171af:	mov    ebx,eax
   1400171b1:	mov    r8d,eax
   1400171b4:	mov    rdx,r13
   1400171b7:	mov    rcx,r12
   1400171ba:	call   0x14002a820
   1400171bf:	cmp    eax,ebx
   1400171c1:	jne    0x140017163
   1400171c3:	inc    edi
   1400171c5:	cmp    edi,DWORD PTR [rsi]
   1400171c7:	jb     0x140017190
   1400171c9:	xor    ebx,ebx
   1400171cb:	mov    rcx,r15
   1400171ce:	call   0x14002a9e0
   1400171d3:	lea    rcx,[rip+0x1a2ae]        # 0x140031488
   1400171da:	call   QWORD PTR [rip+0x18280]        # 0x14002f460
   1400171e0:	mov    rcx,r13
   1400171e3:	call   QWORD PTR [rip+0x18297]        # 0x14002f480
   1400171e9:	test   r14,r14
   1400171ec:	je     0x1400171f7
   1400171ee:	mov    rcx,r14
   1400171f1:	call   QWORD PTR [rip+0x18289]        # 0x14002f480
   1400171f7:	movzx  eax,bx
   1400171fa:	mov    rcx,QWORD PTR [rbp+0x17]
   1400171fe:	xor    rcx,rsp
   140017201:	call   0x14002c960
   140017206:	mov    rbx,QWORD PTR [rsp+0x120]
   14001720e:	add    rsp,0xe0
   140017215:	pop    r15
   140017217:	pop    r14
   140017219:	pop    r13
   14001721b:	pop    r12
   14001721d:	pop    rdi
   14001721e:	pop    rsi
   14001721f:	pop    rbp
   140017220:	ret    
   140017221:	int3   
   140017222:	int3   
   140017223:	int3   
   140017224:	int3   
   140017225:	int3   
   140017226:	int3   
   140017227:	int3   
   140017228:	int3   
   140017229:	int3   
   14001722a:	int3   
   14001722b:	int3   
   14001722c:	int3   
   14001722d:	int3   
   14001722e:	int3   
   14001722f:	int3   
   140017230:	rex push rbx
   140017232:	sub    rsp,0x20
   140017236:	mov    rbx,rcx
   140017239:	lea    r8,[rcx+0x3d0]
   140017240:	mov    rax,rdx
   140017243:	mov    r9d,0x2
   140017249:	nop    DWORD PTR [rax+0x0]
   140017250:	movups xmm0,XMMWORD PTR [rax]
   140017253:	lea    r8,[r8+0x80]
   14001725a:	lea    rax,[rax+0x80]
   140017261:	movups XMMWORD PTR [r8-0x80],xmm0
   140017266:	movups xmm1,XMMWORD PTR [rax-0x70]
   14001726a:	movups XMMWORD PTR [r8-0x70],xmm1
   14001726f:	movups xmm0,XMMWORD PTR [rax-0x60]
   140017273:	movups XMMWORD PTR [r8-0x60],xmm0
   140017278:	movups xmm1,XMMWORD PTR [rax-0x50]
   14001727c:	movups XMMWORD PTR [r8-0x50],xmm1
   140017281:	movups xmm0,XMMWORD PTR [rax-0x40]
   140017285:	movups XMMWORD PTR [r8-0x40],xmm0
   14001728a:	movups xmm1,XMMWORD PTR [rax-0x30]
   14001728e:	movups XMMWORD PTR [r8-0x30],xmm1
   140017293:	movups xmm0,XMMWORD PTR [rax-0x20]
   140017297:	movups XMMWORD PTR [r8-0x20],xmm0
   14001729c:	movups xmm1,XMMWORD PTR [rax-0x10]
   1400172a0:	movups XMMWORD PTR [r8-0x10],xmm1
   1400172a5:	dec    r9
   1400172a8:	jne    0x140017250
   1400172aa:	movups xmm0,XMMWORD PTR [rax]
   1400172ad:	movups XMMWORD PTR [r8],xmm0
   1400172b1:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400172b5:	movups XMMWORD PTR [r8+0x10],xmm1
   1400172ba:	mov    rcx,QWORD PTR [rax+0x20]
   1400172be:	mov    QWORD PTR [r8+0x20],rcx
   1400172c2:	mov    ecx,DWORD PTR [rax+0x28]
   1400172c5:	mov    rax,QWORD PTR [rbx+0x10]
   1400172c9:	mov    DWORD PTR [r8+0x28],ecx
   1400172cd:	mov    ecx,0x9
   1400172d2:	mov    WORD PTR [rax],cx
   1400172d5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400172d9:	mov    rax,QWORD PTR [rbx+0x148]
   1400172e0:	mov    QWORD PTR [rcx+0x8],rax
   1400172e4:	mov    rax,QWORD PTR [rbx+0x10]
   1400172e8:	xor    ecx,ecx
   1400172ea:	mov    QWORD PTR [rax+0x18],rdx
   1400172ee:	mov    rax,QWORD PTR [rbx+0x10]
   1400172f2:	mov    WORD PTR [rax+0x20],cx
   1400172f6:	mov    rax,QWORD PTR [rbx+0x10]
   1400172fa:	mov    WORD PTR [rax+0x22],cx
   1400172fe:	mov    rax,QWORD PTR [rbx+0x10]
   140017302:	lea    rcx,[rbx+0x174]
   140017309:	mov    QWORD PTR [rax+0x28],rcx
   14001730d:	mov    rax,QWORD PTR [rbx+0x10]
   140017311:	mov    ecx,0x12c
   140017316:	mov    WORD PTR [rax+0x30],cx
   14001731a:	mov    rcx,QWORD PTR [rbx+0x10]
   14001731e:	call   QWORD PTR [rbx+0x8]
   140017321:	mov    rcx,QWORD PTR [rbx+0x10]
   140017325:	movzx  eax,WORD PTR [rcx+0x2]
   140017329:	mov    WORD PTR [rbx+0x3cc],ax
   140017330:	movzx  eax,WORD PTR [rcx]
   140017333:	mov    WORD PTR [rbx+0x150],ax
   14001733a:	add    rsp,0x20
   14001733e:	pop    rbx
   14001733f:	ret    
   140017340:	sub    rsp,0x298
   140017347:	mov    rax,QWORD PTR [rip+0x24cb2]        # 0x14003c000
   14001734e:	xor    rax,rsp
   140017351:	mov    QWORD PTR [rsp+0x280],rax
   140017359:	movzx  eax,BYTE PTR [rdx]
   14001735c:	mov    r10,rcx
   14001735f:	lea    r8,[rsp+0x20]
   140017364:	test   al,al
   140017366:	je     0x1400173ab
   140017368:	mov    r9,QWORD PTR [rip+0x25f89]        # 0x14003d2f8
   14001736f:	lea    r11,[rip+0x19e8a]        # 0x140031200
   140017376:	cmp    al,0x20
   140017378:	jae    0x140017384
   14001737a:	movzx  ecx,al
   14001737d:	movzx  eax,WORD PTR [r11+rcx*2]
   140017382:	jmp    0x140017399
   140017384:	cmp    al,0x80
   140017386:	jae    0x14001738d
   140017388:	movzx  eax,al
   14001738b:	jmp    0x140017399
   14001738d:	movzx  ecx,al
   140017390:	movzx  eax,WORD PTR [r9+rcx*2-0x100]
   140017399:	inc    rdx
   14001739c:	mov    WORD PTR [r8],ax
   1400173a0:	add    r8,0x2
   1400173a4:	movzx  eax,BYTE PTR [rdx]
   1400173a7:	test   al,al
   1400173a9:	jne    0x140017376
   1400173ab:	xor    eax,eax
   1400173ad:	lea    rdx,[rsp+0x20]
   1400173b2:	mov    rcx,r10
   1400173b5:	mov    WORD PTR [r8],ax
   1400173b9:	call   0x140017230
   1400173be:	mov    rcx,QWORD PTR [rsp+0x280]
   1400173c6:	xor    rcx,rsp
   1400173c9:	call   0x14002c960
   1400173ce:	add    rsp,0x298
   1400173d5:	ret    
   1400173d6:	int3   
   1400173d7:	int3   
   1400173d8:	int3   
   1400173d9:	int3   
   1400173da:	int3   
   1400173db:	int3   
   1400173dc:	int3   
   1400173dd:	int3   
   1400173de:	int3   
   1400173df:	int3   
   1400173e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400173e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400173ea:	push   rsi
   1400173eb:	push   rdi
   1400173ec:	push   r13
   1400173ee:	push   r14
   1400173f0:	push   r15
   1400173f2:	sub    rsp,0x290
   1400173f9:	mov    rax,QWORD PTR [rip+0x24c00]        # 0x14003c000
   140017400:	xor    rax,rsp
   140017403:	mov    QWORD PTR [rsp+0x280],rax
   14001740b:	xor    edi,edi
   14001740d:	lea    r14,[rcx+0x174]
   140017414:	lea    rbx,[rcx+0x3d0]
   14001741b:	movzx  eax,BYTE PTR [r14]
   14001741f:	mov    r13,rcx
   140017422:	lea    rsi,[rsp+0x20]
   140017427:	mov    rbp,rbx
   14001742a:	mov    r15d,edi
   14001742d:	test   al,al
   14001742f:	je     0x1400174ab
   140017431:	movzx  eax,al
   140017434:	mov    rdx,rbp
   140017437:	mov    rcx,rsi
   14001743a:	sub    eax,r15d
   14001743d:	movsxd r8,eax
   140017440:	call   0x14002d270
   140017445:	movzx  eax,BYTE PTR [r14]
   140017449:	lea    r14,[r14+0x2]
   14001744d:	sub    eax,r15d
   140017450:	movsxd rcx,eax
   140017453:	add    rsi,rcx
   140017456:	add    rbp,rcx
   140017459:	mov    WORD PTR [rsi],0x5f
   14001745e:	movzx  r15d,BYTE PTR [r14-0x2]
   140017463:	movzx  eax,BYTE PTR [r14]
   140017467:	add    rsi,0x2
   14001746b:	test   al,al
   14001746d:	jne    0x140017431
   14001746f:	nop
   140017470:	cmp    BYTE PTR [rbx],0x0
   140017473:	jne    0x14001747b
   140017475:	cmp    BYTE PTR [rbx+0x1],0x0
   140017479:	je     0x140017483
   14001747b:	add    rbx,0x2
   14001747f:	inc    edi
   140017481:	jmp    0x140017470
   140017483:	lea    r8d,[rdi*4+0x0]
   14001748b:	mov    rdx,rbp
   14001748e:	mov    rcx,rsi
   140017491:	sub    r8d,r15d
   140017494:	add    r8d,0x2
   140017498:	call   0x14002d270
   14001749d:	lea    rdx,[rsp+0x20]
   1400174a2:	lea    rcx,[r13+0x628]
   1400174a9:	jmp    0x1400174b5
   1400174ab:	mov    rdx,rbx
   1400174ae:	add    rcx,0x628
   1400174b5:	mov    r8,QWORD PTR [rip+0x25e3c]        # 0x14003d2f8
   1400174bc:	call   0x14002b010
   1400174c1:	lea    rax,[r13+0x628]
   1400174c8:	mov    rcx,QWORD PTR [rsp+0x280]
   1400174d0:	xor    rcx,rsp
   1400174d3:	call   0x14002c960
   1400174d8:	lea    r11,[rsp+0x290]
   1400174e0:	mov    rbx,QWORD PTR [r11+0x38]
   1400174e4:	mov    rbp,QWORD PTR [r11+0x40]
   1400174e8:	mov    rsp,r11
   1400174eb:	pop    r15
   1400174ed:	pop    r14
   1400174ef:	pop    r13
   1400174f1:	pop    rdi
   1400174f2:	pop    rsi
   1400174f3:	ret    
   1400174f4:	int3   
   1400174f5:	int3   
   1400174f6:	int3   
   1400174f7:	int3   
   1400174f8:	int3   
   1400174f9:	int3   
   1400174fa:	int3   
   1400174fb:	int3   
   1400174fc:	int3   
   1400174fd:	int3   
   1400174fe:	int3   
   1400174ff:	int3   
   140017500:	mov    QWORD PTR [rsp+0x10],rbx
   140017505:	push   rbp
   140017506:	push   rsi
   140017507:	push   rdi
   140017508:	sub    rsp,0x170
   14001750f:	mov    rax,QWORD PTR [rip+0x24aea]        # 0x14003c000
   140017516:	xor    rax,rsp
   140017519:	mov    QWORD PTR [rsp+0x160],rax
   140017521:	movzx  edi,dx
   140017524:	mov    rsi,rcx
   140017527:	test   r9,r9
   14001752a:	je     0x14001761c
   140017530:	mov    edx,0x1
   140017535:	mov    rcx,r9
   140017538:	call   0x14002ab70
   14001753d:	mov    rbx,rax
   140017540:	test   rax,rax
   140017543:	jne    0x14001754d
   140017545:	lea    eax,[rbx+0x9]
   140017548:	jmp    0x140017646
   14001754d:	mov    rcx,QWORD PTR [rax]
   140017550:	lea    r9,[rsp+0x34]
   140017555:	lea    rdx,[rsp+0x38]
   14001755a:	mov    r8d,0x12
   140017560:	mov    QWORD PTR [rsp+0x20],0x0
   140017569:	call   QWORD PTR [rip+0x17c99]        # 0x14002f208
   14001756f:	mov    ebp,0x2
   140017574:	test   eax,eax
   140017576:	jne    0x1400175a9
   140017578:	call   QWORD PTR [rip+0x17be2]        # 0x14002f160
   14001757e:	cmp    eax,0x58
   140017581:	jae    0x140017591
   140017583:	lea    rcx,[rip+0x19b16]        # 0x1400310a0
   14001758a:	mov    eax,eax
   14001758c:	mov    ecx,DWORD PTR [rcx+rax*4]
   14001758f:	jmp    0x140017596
   140017591:	mov    ecx,0x106
   140017596:	mov    DWORD PTR [rip+0x2bb1c],ecx        # 0x1400430b8
   14001759c:	mov    DWORD PTR [rip+0x2bf26],ebp        # 0x1400434c8
   1400175a2:	mov    BYTE PTR [rip+0x2be17],0x0        # 0x1400433c0
   1400175a9:	mov    rcx,rbx
   1400175ac:	call   0x14002a9e0
   1400175b1:	cmp    DWORD PTR [rsp+0x34],0x12
   1400175b6:	je     0x1400175c0
   1400175b8:	movzx  eax,bp
   1400175bb:	jmp    0x140017646
   1400175c0:	cmp    BYTE PTR [rsp+0x40],0x1
   1400175c5:	jne    0x140017669
   1400175cb:	cmp    BYTE PTR [rsp+0x41],0xb
   1400175d0:	jne    0x140017669
   1400175d6:	movzx  eax,WORD PTR [rsp+0x48]
   1400175db:	mov    ecx,0x534d
   1400175e0:	cmp    ax,cx
   1400175e3:	je     0x14001761c
   1400175e5:	lea    r8,[rsp+0x30]
   1400175ea:	lea    rdx,[rip+0x19ea7]        # 0x140031498
   1400175f1:	lea    rcx,[rsp+0x50]
   1400175f6:	mov    WORD PTR [rsp+0x30],ax
   1400175fb:	mov    BYTE PTR [rsp+0x32],0x0
   140017600:	call   QWORD PTR [rip+0x17f12]        # 0x14002f518
   140017606:	lea    rdx,[rsp+0x50]
   14001760b:	movzx  r8d,di
   14001760f:	mov    rcx,rsi
   140017612:	call   0x1400178a0
   140017617:	test   ax,ax
   14001761a:	je     0x140017646
   14001761c:	lea    r8,[rip+0x19e85]        # 0x1400314a8
   140017623:	lea    rdx,[rip+0x19e8a]        # 0x1400314b4
   14001762a:	lea    rcx,[rsp+0x50]
   14001762f:	call   QWORD PTR [rip+0x17ee3]        # 0x14002f518
   140017635:	lea    rdx,[rsp+0x50]
   14001763a:	movzx  r8d,di
   14001763e:	mov    rcx,rsi
   140017641:	call   0x1400178a0
   140017646:	mov    rcx,QWORD PTR [rsp+0x160]
   14001764e:	xor    rcx,rsp
   140017651:	call   0x14002c960
   140017656:	mov    rbx,QWORD PTR [rsp+0x198]
   14001765e:	add    rsp,0x170
   140017665:	pop    rdi
   140017666:	pop    rsi
   140017667:	pop    rbp
   140017668:	ret    
   140017669:	mov    eax,0x14
   14001766e:	jmp    0x140017646
   140017670:	mov    rax,rsp
   140017673:	push   rsi
   140017674:	push   rdi
   140017675:	push   r14
   140017677:	sub    rsp,0x1a0
   14001767e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140017687:	mov    QWORD PTR [rax+0x10],rbx
   14001768b:	mov    QWORD PTR [rax+0x20],rbp
   14001768f:	mov    rax,QWORD PTR [rip+0x2496a]        # 0x14003c000
   140017696:	xor    rax,rsp
   140017699:	mov    QWORD PTR [rsp+0x190],rax
   1400176a1:	mov    rbp,rcx
   1400176a4:	xor    r14d,r14d
   1400176a7:	test   r8,r8
   1400176aa:	je     0x1400176b2
   1400176ac:	mov    rdx,QWORD PTR [r8+0x8]
   1400176b0:	jmp    0x1400176b5
   1400176b2:	mov    rdx,r14
   1400176b5:	lea    rcx,[rsp+0x60]
   1400176ba:	call   QWORD PTR [rip+0x17b98]        # 0x14002f258
   1400176c0:	mov    ecx,0x10
   1400176c5:	call   QWORD PTR [rip+0x182cd]        # 0x14002f998
   1400176cb:	mov    rbx,rax
   1400176ce:	mov    QWORD PTR [rsp+0x30],rax
   1400176d3:	test   rax,rax
   1400176d6:	je     0x14001770e
   1400176d8:	mov    WORD PTR [rax],r14w
   1400176dc:	mov    QWORD PTR [rax+0x8],r14
   1400176e0:	lea    rcx,[rsp+0x60]
   1400176e5:	call   QWORD PTR [rip+0x17b95]        # 0x14002f280
   1400176eb:	test   eax,eax
   1400176ed:	jle    0x140017711
   1400176ef:	inc    eax
   1400176f1:	movsxd rcx,eax
   1400176f4:	call   QWORD PTR [rip+0x1829e]        # 0x14002f998
   1400176fa:	mov    QWORD PTR [rbx+0x8],rax
   1400176fe:	lea    rdx,[rsp+0x60]
   140017703:	mov    rcx,rax
   140017706:	call   QWORD PTR [rip+0x17b4c]        # 0x14002f258
   14001770c:	jmp    0x140017711
   14001770e:	mov    rbx,r14
   140017711:	mov    edx,0x1
   140017716:	mov    rcx,rbx
   140017719:	call   0x14002ab70
   14001771e:	mov    rdi,rax
   140017721:	test   rax,rax
   140017724:	jne    0x140017737
   140017726:	mov    eax,0x9
   14001772b:	mov    WORD PTR [rbp+0x150],ax
   140017732:	jmp    0x140017877
   140017737:	mov    QWORD PTR [rsp+0x20],r14
   14001773c:	lea    r9,[rsp+0x30]
   140017741:	mov    r8d,0x12
   140017747:	lea    rdx,[rsp+0x40]
   14001774c:	mov    rcx,QWORD PTR [rax]
   14001774f:	call   QWORD PTR [rip+0x17ab3]        # 0x14002f208
   140017755:	mov    esi,0x2
   14001775a:	test   eax,eax
   14001775c:	jne    0x14001778f
   14001775e:	call   QWORD PTR [rip+0x179fc]        # 0x14002f160
   140017764:	cmp    eax,0x58
   140017767:	jae    0x140017777
   140017769:	mov    eax,eax
   14001776b:	lea    rcx,[rip+0x1992e]        # 0x1400310a0
   140017772:	mov    ecx,DWORD PTR [rcx+rax*4]
   140017775:	jmp    0x14001777c
   140017777:	mov    ecx,0x106
   14001777c:	mov    DWORD PTR [rip+0x2b936],ecx        # 0x1400430b8
   140017782:	mov    DWORD PTR [rip+0x2bd40],esi        # 0x1400434c8
   140017788:	mov    BYTE PTR [rip+0x2bc31],0x0        # 0x1400433c0
   14001778f:	cmp    DWORD PTR [rsp+0x30],0x12
   140017794:	je     0x1400177a5
   140017796:	mov    WORD PTR [rbp+0x150],si
   14001779d:	movzx  eax,si
   1400177a0:	jmp    0x140017877
   1400177a5:	mov    rcx,rdi
   1400177a8:	call   0x14002a9e0
   1400177ad:	test   rbx,rbx
   1400177b0:	je     0x1400177ca
   1400177b2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400177b6:	test   rcx,rcx
   1400177b9:	je     0x1400177c1
   1400177bb:	call   QWORD PTR [rip+0x183b7]        # 0x14002fb78
   1400177c1:	mov    rcx,rbx
   1400177c4:	call   QWORD PTR [rip+0x183ae]        # 0x14002fb78
   1400177ca:	cmp    BYTE PTR [rsp+0x50],0x57
   1400177cf:	jne    0x1400177dc
   1400177d1:	cmp    BYTE PTR [rsp+0x51],0x50
   1400177d6:	je     0x140017867
   1400177dc:	mov    edi,r14d
   1400177df:	lea    rax,[rsp+0x60]
   1400177e4:	cmp    BYTE PTR [rsp+0x60],dil
   1400177e9:	je     0x1400177fb
   1400177eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400177f0:	lea    rax,[rax+0x1]
   1400177f4:	inc    edi
   1400177f6:	cmp    BYTE PTR [rax],0x0
   1400177f9:	jne    0x1400177f0
   1400177fb:	movzx  eax,di
   1400177fe:	lea    rsi,[rsp+0x60]
   140017803:	add    rsi,rax
   140017806:	lea    rbx,[rsi-0xa]
   14001780a:	cmp    rbx,rsi
   14001780d:	jae    0x140017828
   14001780f:	nop
   140017810:	movzx  ecx,BYTE PTR [rbx]
   140017813:	call   QWORD PTR [rip+0x17c07]        # 0x14002f420
   140017819:	test   eax,eax
   14001781b:	je     0x140017820
   14001781d:	add    BYTE PTR [rbx],0xe0
   140017820:	inc    rbx
   140017823:	cmp    rbx,rsi
   140017826:	jb     0x140017810
   140017828:	movzx  eax,di
   14001782b:	sub    eax,0xa
   14001782e:	movsxd rcx,eax
   140017831:	lea    rax,[rsp+0x60]
   140017836:	add    rcx,rax
   140017839:	mov    r8d,0x4
   14001783f:	lea    rdx,[rip+0x19c72]        # 0x1400314b8
   140017846:	call   QWORD PTR [rip+0x17bdc]        # 0x14002f428
   14001784c:	mov    edx,0x5053
   140017851:	xor    r9d,r9d
   140017854:	mov    rcx,rbp
   140017857:	call   0x140017500
   14001785c:	test   ax,ax
   14001785f:	jne    0x140017867
   140017861:	movzx  eax,r14w
   140017865:	jmp    0x140017877
   140017867:	xor    r9d,r9d
   14001786a:	mov    edx,0x5053
   14001786f:	mov    rcx,rbp
   140017872:	call   0x140017500
   140017877:	mov    rcx,QWORD PTR [rsp+0x190]
   14001787f:	xor    rcx,rsp
   140017882:	call   0x14002c960
   140017887:	lea    r11,[rsp+0x1a0]
   14001788f:	mov    rbx,QWORD PTR [r11+0x28]
   140017893:	mov    rbp,QWORD PTR [r11+0x38]
   140017897:	mov    rsp,r11
   14001789a:	pop    r14
   14001789c:	pop    rdi
   14001789d:	pop    rsi
   14001789e:	ret    
   14001789f:	int3   
   1400178a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400178a5:	mov    QWORD PTR [rsp+0x20],rsi
   1400178aa:	push   rdi
   1400178ab:	sub    rsp,0x160
   1400178b2:	mov    rax,QWORD PTR [rip+0x24747]        # 0x14003c000
   1400178b9:	xor    rax,rsp
   1400178bc:	mov    QWORD PTR [rsp+0x150],rax
   1400178c4:	mov    rbx,rcx
   1400178c7:	mov    ecx,0x48
   1400178cc:	movzx  edi,r8w
   1400178d0:	mov    rsi,rdx
   1400178d3:	call   QWORD PTR [rip+0x17b3f]        # 0x14002f418
   1400178d9:	mov    QWORD PTR [rbx+0x10],rax
   1400178dd:	test   rax,rax
   1400178e0:	jne    0x1400178f3
   1400178e2:	mov    eax,0xb
   1400178e7:	mov    WORD PTR [rbx+0x150],ax
   1400178ee:	jmp    0x1400179bf
   1400178f3:	cmp    BYTE PTR [rbx+0x18],0x0
   1400178f7:	lea    r8,[rbx+0x18]
   1400178fb:	lea    rcx,[rsp+0x20]
   140017900:	je     0x140017914
   140017902:	lea    rdx,[rip+0x19bb3]        # 0x1400314bc
   140017909:	mov    r9,rsi
   14001790c:	call   QWORD PTR [rip+0x17b3e]        # 0x14002f450
   140017912:	jmp    0x14001791d
   140017914:	mov    rdx,rsi
   140017917:	call   QWORD PTR [rip+0x1793b]        # 0x14002f258
   14001791d:	lea    rcx,[rsp+0x20]
   140017922:	call   QWORD PTR [rip+0x17938]        # 0x14002f260
   140017928:	mov    QWORD PTR [rbx],rax
   14001792b:	test   rax,rax
   14001792e:	jne    0x140017944
   140017930:	call   QWORD PTR [rip+0x1782a]        # 0x14002f160
   140017936:	mov    eax,0x1f
   14001793b:	mov    WORD PTR [rbx+0x150],ax
   140017942:	jmp    0x1400179bf
   140017944:	xor    esi,esi
   140017946:	mov    ecx,0x5948
   14001794b:	mov    QWORD PTR [rbx+0x8],rsi
   14001794f:	cmp    di,cx
   140017952:	jne    0x14001795d
   140017954:	lea    rdx,[rip+0x19b6d]        # 0x1400314c8
   14001795b:	jmp    0x140017981
   14001795d:	mov    ecx,0x4343
   140017962:	cmp    di,cx
   140017965:	jne    0x140017970
   140017967:	lea    rdx,[rip+0x19b6a]        # 0x1400314d8
   14001796e:	jmp    0x140017981
   140017970:	mov    ecx,0x5053
   140017975:	cmp    di,cx
   140017978:	jne    0x14001798e
   14001797a:	lea    rdx,[rip+0x19b67]        # 0x1400314e8
   140017981:	mov    rcx,rax
   140017984:	call   QWORD PTR [rip+0x178de]        # 0x14002f268
   14001798a:	mov    QWORD PTR [rbx+0x8],rax
   14001798e:	cmp    QWORD PTR [rbx+0x8],rsi
   140017992:	jne    0x1400179b5
   140017994:	mov    rcx,QWORD PTR [rbx]
   140017997:	call   QWORD PTR [rip+0x178d3]        # 0x14002f270
   14001799d:	mov    rcx,QWORD PTR [rbx+0x10]
   1400179a1:	call   QWORD PTR [rip+0x17ad9]        # 0x14002f480
   1400179a7:	mov    eax,0x1f
   1400179ac:	mov    WORD PTR [rbx+0x150],ax
   1400179b3:	jmp    0x1400179bf
   1400179b5:	mov    WORD PTR [rbx+0x150],si
   1400179bc:	movzx  eax,si
   1400179bf:	mov    rcx,QWORD PTR [rsp+0x150]
   1400179c7:	xor    rcx,rsp
   1400179ca:	call   0x14002c960
   1400179cf:	lea    r11,[rsp+0x160]
   1400179d7:	mov    rbx,QWORD PTR [r11+0x20]
   1400179db:	mov    rsi,QWORD PTR [r11+0x28]
   1400179df:	mov    rsp,r11
   1400179e2:	pop    rdi
   1400179e3:	ret    
   1400179e4:	int3   
   1400179e5:	int3   
   1400179e6:	int3   
   1400179e7:	int3   
   1400179e8:	int3   
   1400179e9:	int3   
   1400179ea:	int3   
   1400179eb:	int3   
   1400179ec:	int3   
   1400179ed:	int3   
   1400179ee:	int3   
   1400179ef:	int3   
   1400179f0:	rex push rbx
   1400179f2:	sub    rsp,0x20
   1400179f6:	mov    rbx,rcx
   1400179f9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400179fd:	call   QWORD PTR [rip+0x17a7d]        # 0x14002f480
   140017a03:	mov    rcx,QWORD PTR [rbx]
   140017a06:	call   QWORD PTR [rip+0x17864]        # 0x14002f270
   140017a0c:	xor    eax,eax
   140017a0e:	mov    WORD PTR [rbx+0x150],ax
   140017a15:	add    rsp,0x20
   140017a19:	pop    rbx
   140017a1a:	ret    
   140017a1b:	int3   
   140017a1c:	int3   
   140017a1d:	int3   
   140017a1e:	int3   
   140017a1f:	int3   
   140017a20:	mov    QWORD PTR [rsp+0x8],rbx
   140017a25:	push   rdi
   140017a26:	sub    rsp,0x20
   140017a2a:	mov    rax,QWORD PTR [rcx+0x10]
   140017a2e:	mov    rbx,rcx
   140017a31:	xor    ecx,ecx
   140017a33:	mov    WORD PTR [rax],cx
   140017a36:	mov    rcx,QWORD PTR [rbx+0x10]
   140017a3a:	call   QWORD PTR [rbx+0x8]
   140017a3d:	mov    rdi,QWORD PTR [rbx+0x10]
   140017a41:	movzx  edx,WORD PTR [rdi+0x2]
   140017a45:	mov    WORD PTR [rbx+0x152],dx
   140017a4c:	movzx  eax,WORD PTR [rdi+0x4]
   140017a50:	mov    ecx,edx
   140017a52:	mov    WORD PTR [rbx+0x154],ax
   140017a59:	movzx  eax,WORD PTR [rdi+0x6]
   140017a5d:	mov    WORD PTR [rbx+0x156],ax
   140017a64:	movzx  eax,WORD PTR [rdi+0x8]
   140017a68:	mov    WORD PTR [rbx+0x158],ax
   140017a6f:	mov    eax,DWORD PTR [rdi+0xc]
   140017a72:	mov    DWORD PTR [rbx+0x15c],eax
   140017a78:	movzx  eax,WORD PTR [rdi+0x10]
   140017a7c:	mov    WORD PTR [rbx+0x160],ax
   140017a83:	call   QWORD PTR [rip+0x1798f]        # 0x14002f418
   140017a89:	mov    QWORD PTR [rbx+0x148],rax
   140017a90:	test   rax,rax
   140017a93:	jne    0x140017aac
   140017a95:	mov    eax,0xb
   140017a9a:	mov    WORD PTR [rbx+0x150],ax
   140017aa1:	mov    rbx,QWORD PTR [rsp+0x30]
   140017aa6:	add    rsp,0x20
   140017aaa:	pop    rdi
   140017aab:	ret    
   140017aac:	movzx  eax,WORD PTR [rdi]
   140017aaf:	mov    WORD PTR [rbx+0x150],ax
   140017ab6:	mov    rbx,QWORD PTR [rsp+0x30]
   140017abb:	add    rsp,0x20
   140017abf:	pop    rdi
   140017ac0:	ret    
   140017ac1:	int3   
   140017ac2:	int3   
   140017ac3:	int3   
   140017ac4:	int3   
   140017ac5:	int3   
   140017ac6:	int3   
   140017ac7:	int3   
   140017ac8:	int3   
   140017ac9:	int3   
   140017aca:	int3   
   140017acb:	int3   
   140017acc:	int3   
   140017acd:	int3   
   140017ace:	int3   
   140017acf:	int3   
   140017ad0:	mov    QWORD PTR [rsp+0x18],r8
   140017ad5:	push   rsi
   140017ad6:	push   rdi
   140017ad7:	push   r14
   140017ad9:	sub    rsp,0x30
   140017add:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017ae6:	mov    QWORD PTR [rsp+0x50],rbx
   140017aeb:	mov    QWORD PTR [rsp+0x58],rbp
   140017af0:	mov    rbx,r9
   140017af3:	mov    rbp,rcx
   140017af6:	xor    r14d,r14d
   140017af9:	cmp    BYTE PTR [rcx+0x18],r14b
   140017afd:	je     0x140017b0d
   140017aff:	add    rcx,0x18
   140017b03:	call   0x14002ae90
   140017b08:	mov    rsi,rax
   140017b0b:	jmp    0x140017b41
   140017b0d:	mov    ecx,0x10
   140017b12:	call   QWORD PTR [rip+0x17e80]        # 0x14002f998
   140017b18:	mov    rsi,rax
   140017b1b:	mov    QWORD PTR [rsp+0x60],rax
   140017b20:	test   rax,rax
   140017b23:	je     0x140017b3e
   140017b25:	mov    WORD PTR [rax],r14w
   140017b29:	mov    QWORD PTR [rax+0x8],r14
   140017b2d:	mov    ecx,0x12e
   140017b32:	call   QWORD PTR [rip+0x17e60]        # 0x14002f998
   140017b38:	mov    QWORD PTR [rsi+0x8],rax
   140017b3c:	jmp    0x140017b41
   140017b3e:	mov    rsi,r14
   140017b41:	cmp    BYTE PTR [rbp+0x18],0x0
   140017b45:	je     0x140017b55
   140017b47:	lea    rcx,[rbp+0x18]
   140017b4b:	call   0x14002ae90
   140017b50:	mov    rdi,rax
   140017b53:	jmp    0x140017b89
   140017b55:	mov    ecx,0x10
   140017b5a:	call   QWORD PTR [rip+0x17e38]        # 0x14002f998
   140017b60:	mov    rdi,rax
   140017b63:	mov    QWORD PTR [rsp+0x60],rax
   140017b68:	test   rax,rax
   140017b6b:	je     0x140017b86
   140017b6d:	mov    WORD PTR [rax],r14w
   140017b71:	mov    QWORD PTR [rax+0x8],r14
   140017b75:	mov    ecx,0x12e
   140017b7a:	call   QWORD PTR [rip+0x17e18]        # 0x14002f998
   140017b80:	mov    QWORD PTR [rdi+0x8],rax
   140017b84:	jmp    0x140017b89
   140017b86:	mov    rdi,r14
   140017b89:	test   rbx,rbx
   140017b8c:	jne    0x140017bc0
   140017b8e:	lea    ecx,[rbx+0x10]
   140017b91:	call   QWORD PTR [rip+0x17e01]        # 0x14002f998
   140017b97:	mov    rbx,rax
   140017b9a:	mov    QWORD PTR [rsp+0x60],rax
   140017b9f:	test   rax,rax
   140017ba2:	je     0x140017bbd
   140017ba4:	mov    WORD PTR [rax],r14w
   140017ba8:	mov    QWORD PTR [rax+0x8],r14
   140017bac:	mov    ecx,0x12e
   140017bb1:	call   QWORD PTR [rip+0x17de1]        # 0x14002f998
   140017bb7:	mov    QWORD PTR [rbx+0x8],rax
   140017bbb:	jmp    0x140017bc0
   140017bbd:	mov    rbx,r14
   140017bc0:	mov    rax,QWORD PTR [rbp+0x10]
   140017bc4:	mov    ecx,0x1
   140017bc9:	mov    WORD PTR [rax],cx
   140017bcc:	mov    rcx,QWORD PTR [rbp+0x10]
   140017bd0:	mov    rax,QWORD PTR [rbp+0x148]
   140017bd7:	mov    QWORD PTR [rcx+0x8],rax
   140017bdb:	mov    rax,QWORD PTR [rbp+0x10]
   140017bdf:	mov    QWORD PTR [rax+0x18],rsi
   140017be3:	mov    rax,QWORD PTR [rbp+0x10]
   140017be7:	mov    QWORD PTR [rax+0x20],rdi
   140017beb:	mov    rax,QWORD PTR [rbp+0x10]
   140017bef:	mov    QWORD PTR [rax+0x28],rbx
   140017bf3:	mov    rcx,QWORD PTR [rbp+0x10]
   140017bf7:	movzx  eax,WORD PTR [rsp+0x70]
   140017bfc:	mov    WORD PTR [rcx+0x30],ax
   140017c00:	mov    rcx,QWORD PTR [rbp+0x10]
   140017c04:	movzx  eax,WORD PTR [rsp+0x78]
   140017c09:	mov    WORD PTR [rcx+0x32],ax
   140017c0d:	mov    rax,QWORD PTR [rbp+0x10]
   140017c11:	mov    WORD PTR [rax+0x34],r14w
   140017c16:	mov    rcx,QWORD PTR [rbp+0x10]
   140017c1a:	call   QWORD PTR [rbp+0x8]
   140017c1d:	mov    rcx,QWORD PTR [rbp+0x10]
   140017c21:	mov    rax,QWORD PTR [rcx+0x8]
   140017c25:	mov    QWORD PTR [rbp+0x168],rax
   140017c2c:	mov    eax,DWORD PTR [rcx+0x14]
   140017c2f:	mov    DWORD PTR [rbp+0x170],eax
   140017c35:	test   rsi,rsi
   140017c38:	je     0x140017c52
   140017c3a:	mov    rcx,QWORD PTR [rsi+0x8]
   140017c3e:	test   rcx,rcx
   140017c41:	je     0x140017c49
   140017c43:	call   QWORD PTR [rip+0x17f2f]        # 0x14002fb78
   140017c49:	mov    rcx,rsi
   140017c4c:	call   QWORD PTR [rip+0x17f26]        # 0x14002fb78
   140017c52:	test   rdi,rdi
   140017c55:	je     0x140017c6f
   140017c57:	mov    rcx,QWORD PTR [rdi+0x8]
   140017c5b:	test   rcx,rcx
   140017c5e:	je     0x140017c66
   140017c60:	call   QWORD PTR [rip+0x17f12]        # 0x14002fb78
   140017c66:	mov    rcx,rdi
   140017c69:	call   QWORD PTR [rip+0x17f09]        # 0x14002fb78
   140017c6f:	test   rbx,rbx
   140017c72:	je     0x140017c8c
   140017c74:	mov    rcx,QWORD PTR [rbx+0x8]
   140017c78:	test   rcx,rcx
   140017c7b:	je     0x140017c83
   140017c7d:	call   QWORD PTR [rip+0x17ef5]        # 0x14002fb78
   140017c83:	mov    rcx,rbx
   140017c86:	call   QWORD PTR [rip+0x17eec]        # 0x14002fb78
   140017c8c:	mov    rax,QWORD PTR [rbp+0x10]
   140017c90:	movzx  eax,WORD PTR [rax]
   140017c93:	mov    WORD PTR [rbp+0x150],ax
   140017c9a:	mov    rbx,QWORD PTR [rsp+0x50]
   140017c9f:	mov    rbp,QWORD PTR [rsp+0x58]
   140017ca4:	add    rsp,0x30
   140017ca8:	pop    r14
   140017caa:	pop    rdi
   140017cab:	pop    rsi
   140017cac:	ret    
   140017cad:	int3   
   140017cae:	int3   
   140017caf:	int3   
   140017cb0:	rex push rbx
   140017cb2:	sub    rsp,0x20
   140017cb6:	mov    rax,QWORD PTR [rcx+0x10]
   140017cba:	mov    rbx,rcx
   140017cbd:	mov    ecx,0x3
   140017cc2:	mov    WORD PTR [rax],cx
   140017cc5:	mov    rdx,QWORD PTR [rbx+0x10]
   140017cc9:	mov    rax,QWORD PTR [rbx+0x148]
   140017cd0:	mov    QWORD PTR [rdx+0x8],rax
   140017cd4:	mov    rcx,QWORD PTR [rbx+0x10]
   140017cd8:	call   QWORD PTR [rbx+0x8]
   140017cdb:	mov    rcx,QWORD PTR [rbx+0x148]
   140017ce2:	call   QWORD PTR [rip+0x17798]        # 0x14002f480
   140017ce8:	mov    rax,QWORD PTR [rbx+0x10]
   140017cec:	movzx  eax,WORD PTR [rax]
   140017cef:	mov    WORD PTR [rbx+0x150],ax
   140017cf6:	add    rsp,0x20
   140017cfa:	pop    rbx
   140017cfb:	ret    
   140017cfc:	int3   
   140017cfd:	int3   
   140017cfe:	int3   
   140017cff:	int3   
   140017d00:	rex push rbp
   140017d02:	push   rsi
   140017d03:	push   rdi
   140017d04:	push   r12
   140017d06:	push   r13
   140017d08:	push   r14
   140017d0a:	push   r15
   140017d0c:	lea    rbp,[rsp-0x80]
   140017d11:	sub    rsp,0x180
   140017d18:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140017d21:	mov    QWORD PTR [rsp+0x1d8],rbx
   140017d29:	mov    rax,QWORD PTR [rip+0x242d0]        # 0x14003c000
   140017d30:	xor    rax,rsp
   140017d33:	mov    QWORD PTR [rbp+0x70],rax
   140017d37:	mov    r13,r8
   140017d3a:	mov    QWORD PTR [rsp+0x60],r8
   140017d3f:	mov    rdi,rdx
   140017d42:	mov    QWORD PTR [rsp+0x68],rdx
   140017d47:	mov    r12,rcx
   140017d4a:	mov    QWORD PTR [rsp+0x58],rcx
   140017d4f:	mov    eax,0xf
   140017d54:	mov    DWORD PTR [rbp-0x48],0x4000f
   140017d5b:	mov    DWORD PTR [rbp-0x44],0x100009
   140017d62:	mov    ecx,0x38
   140017d67:	mov    WORD PTR [rbp-0x40],cx
   140017d6b:	mov    DWORD PTR [rip+0x29c6f],0x800        # 0x1400419e4
   140017d75:	xor    esi,esi
   140017d77:	mov    WORD PTR [rip+0x270da],si        # 0x14003ee58
   140017d7e:	mov    WORD PTR [rip+0x2641f],si        # 0x14003e1a4
   140017d85:	mov    WORD PTR [rip+0x270bc],si        # 0x14003ee48
   140017d8c:	mov    WORD PTR [rip+0x270cd],ax        # 0x14003ee60
   140017d93:	mov    WORD PTR [rip+0x270b6],si        # 0x14003ee50
   140017d9a:	lea    r8,[rip+0x195af]        # 0x140031350
   140017da1:	lea    rdx,[rip+0x26408]        # 0x14003e1b0
   140017da8:	mov    al,0x43
   140017daa:	lea    r15,[rip+0x1944f]        # 0x140031200
   140017db1:	mov    r9,QWORD PTR [rip+0x25540]        # 0x14003d2f8
   140017db8:	cmp    al,0x20
   140017dba:	jae    0x140017dc6
   140017dbc:	movzx  eax,al
   140017dbf:	movzx  ecx,WORD PTR [r15+rax*2]
   140017dc4:	jmp    0x140017ddb
   140017dc6:	cmp    al,0x80
   140017dc8:	jae    0x140017dcf
   140017dca:	movzx  ecx,al
   140017dcd:	jmp    0x140017ddb
   140017dcf:	movzx  eax,al
   140017dd2:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140017ddb:	mov    WORD PTR [rdx],cx
   140017dde:	add    rdx,0x2
   140017de2:	inc    r8
   140017de5:	movzx  eax,BYTE PTR [r8]
   140017de9:	test   al,al
   140017deb:	jne    0x140017db8
   140017ded:	mov    WORD PTR [rdx],si
   140017df0:	xor    r8d,r8d
   140017df3:	xor    ecx,ecx
   140017df5:	lea    rdx,[rip+0x263b4]        # 0x14003e1b0
   140017dfc:	call   QWORD PTR [rip+0x29ca6]        # 0x140041aa8
   140017e02:	test   ax,ax
   140017e05:	mov    r15d,0x4
   140017e0b:	je     0x140017e17
   140017e0d:	mov    eax,0x6
   140017e12:	jmp    0x140018653
   140017e17:	mov    ecx,0x110
   140017e1c:	call   QWORD PTR [rip+0x175f6]        # 0x14002f418
   140017e22:	mov    QWORD PTR [rip+0x286b7],rax        # 0x1400404e0
   140017e29:	test   rax,rax
   140017e2c:	jne    0x140017e37
   140017e2e:	movzx  eax,r15w
   140017e32:	jmp    0x140018653
   140017e37:	mov    ecx,DWORD PTR [rip+0x29ba7]        # 0x1400419e4
   140017e3d:	call   QWORD PTR [rip+0x175d5]        # 0x14002f418
   140017e43:	mov    rbx,rax
   140017e46:	test   rax,rax
   140017e49:	je     0x140017e2e
   140017e4b:	mov    rdx,rdi
   140017e4e:	call   0x140004720
   140017e53:	mov    WORD PTR [rip+0x28382],ax        # 0x1400401dc
   140017e5a:	mov    eax,0x20
   140017e5f:	mov    DWORD PTR [rbx],eax
   140017e61:	mov    rdx,rbx
   140017e64:	call   0x140004860
   140017e69:	mov    rcx,rbx
   140017e6c:	call   QWORD PTR [rip+0x1760e]        # 0x14002f480
   140017e72:	cmp    QWORD PTR [rip+0x2626f],rsi        # 0x14003e0e8
   140017e79:	je     0x140017e2e
   140017e7b:	cmp    QWORD PTR [rip+0x2626e],rsi        # 0x14003e0f0
   140017e82:	je     0x140017e2e
   140017e84:	mov    rcx,rsi
   140017e87:	lea    r14,[rip+0x195ca]        # 0x140031458
   140017e8e:	xchg   ax,ax
   140017e90:	movzx  eax,BYTE PTR [rcx+r14*1]
   140017e95:	mov    BYTE PTR [rbp+rcx*1-0x38],al
   140017e99:	lea    rcx,[rcx+0x1]
   140017e9d:	test   al,al
   140017e9f:	jne    0x140017e90
   140017ea1:	mov    ecx,0x10
   140017ea6:	call   QWORD PTR [rip+0x17aec]        # 0x14002f998
   140017eac:	mov    rbx,rax
   140017eaf:	mov    QWORD PTR [rsp+0x50],rax
   140017eb4:	test   rax,rax
   140017eb7:	je     0x140017eec
   140017eb9:	mov    WORD PTR [rax],si
   140017ebc:	mov    QWORD PTR [rax+0x8],rsi
   140017ec0:	lea    rcx,[rbp-0x38]
   140017ec4:	call   QWORD PTR [rip+0x173b6]        # 0x14002f280
   140017eca:	test   eax,eax
   140017ecc:	jle    0x140017eef
   140017ece:	inc    eax
   140017ed0:	movsxd rcx,eax
   140017ed3:	call   QWORD PTR [rip+0x17abf]        # 0x14002f998
   140017ed9:	mov    QWORD PTR [rbx+0x8],rax
   140017edd:	lea    rdx,[rbp-0x38]
   140017ee1:	mov    rcx,rax
   140017ee4:	call   QWORD PTR [rip+0x1736e]        # 0x14002f258
   140017eea:	jmp    0x140017eef
   140017eec:	mov    rbx,rsi
   140017eef:	mov    edx,0xa
   140017ef4:	mov    rcx,rbx
   140017ef7:	call   0x14002ab70
   140017efc:	mov    rdi,rax
   140017eff:	test   rax,rax
   140017f02:	jne    0x140017f0e
   140017f04:	mov    eax,0x2
   140017f09:	jmp    0x140018653
   140017f0e:	test   rbx,rbx
   140017f11:	je     0x140017f2b
   140017f13:	mov    rcx,QWORD PTR [rbx+0x8]
   140017f17:	test   rcx,rcx
   140017f1a:	je     0x140017f22
   140017f1c:	call   QWORD PTR [rip+0x17c56]        # 0x14002fb78
   140017f22:	mov    rcx,rbx
   140017f25:	call   QWORD PTR [rip+0x17c4d]        # 0x14002fb78
   140017f2b:	xor    edx,edx
   140017f2d:	mov    rcx,QWORD PTR [r12]
   140017f31:	call   QWORD PTR [rip+0x172e9]        # 0x14002f220
   140017f37:	mov    DWORD PTR [rip+0x2626b],eax        # 0x14003e1a8
   140017f3d:	xor    r8d,r8d
   140017f40:	xor    edx,edx
   140017f42:	mov    rcx,r12
   140017f45:	call   0x14002ad10
   140017f4a:	cmp    eax,0xffffffff
   140017f4d:	jne    0x140017f59
   140017f4f:	mov    eax,0x1
   140017f54:	jmp    0x140018653
   140017f59:	mov    WORD PTR [rip+0x26ee4],si        # 0x14003ee44
   140017f60:	mov    WORD PTR [rip+0x26ef5],si        # 0x14003ee5c
   140017f67:	cmp    DWORD PTR [rip+0x2623a],0x0        # 0x14003e1a8
   140017f6e:	jne    0x140017f7a
   140017f70:	mov    eax,0x3
   140017f75:	jmp    0x140018653
   140017f7a:	mov    rdx,rdi
   140017f7d:	mov    rcx,r12
   140017f80:	call   0x14000bee0
   140017f85:	test   ax,ax
   140017f88:	je     0x140017fa7
   140017f8a:	cwde   
   140017f8b:	cmp    eax,0xfffffffc
   140017f8e:	je     0x140017e0d
   140017f94:	cmp    eax,0xfffffffe
   140017f97:	je     0x140017f04
   140017f9d:	cmp    eax,0xffffffff
   140017fa0:	je     0x140017f4f
   140017fa2:	jmp    0x140017e2e
   140017fa7:	mov    rcx,rdi
   140017faa:	call   0x14002a9e0
   140017faf:	mov    DWORD PTR [r13+0x0],esi
   140017fb3:	mov    r15d,0x1
   140017fb9:	mov    WORD PTR [rip+0x26e97],r15w        # 0x14003ee58
   140017fc1:	mov    WORD PTR [rip+0x261dc],si        # 0x14003e1a4
   140017fc8:	mov    r10d,0xf
   140017fce:	mov    WORD PTR [rip+0x26e72],r10w        # 0x14003ee48
   140017fd6:	mov    eax,0x4
   140017fdb:	mov    WORD PTR [rip+0x26e7e],ax        # 0x14003ee60
   140017fe2:	mov    WORD PTR [rip+0x26e66],r10w        # 0x14003ee50
   140017fea:	lea    r8,[rip+0x193cf]        # 0x1400313c0
   140017ff1:	lea    rdi,[rip+0x261b8]        # 0x14003e1b0
   140017ff8:	mov    rdx,rdi
   140017ffb:	mov    al,0x53
   140017ffd:	mov    r9,QWORD PTR [rip+0x252f4]        # 0x14003d2f8
   140018004:	lea    r14,[rip+0x191f5]        # 0x140031200
   14001800b:	nop    DWORD PTR [rax+rax*1+0x0]
   140018010:	cmp    al,0x20
   140018012:	jae    0x14001801e
   140018014:	movzx  eax,al
   140018017:	movzx  ecx,WORD PTR [r14+rax*2]
   14001801c:	jmp    0x140018033
   14001801e:	cmp    al,0x80
   140018020:	jae    0x140018027
   140018022:	movzx  ecx,al
   140018025:	jmp    0x140018033
   140018027:	movzx  eax,al
   14001802a:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140018033:	mov    WORD PTR [rdx],cx
   140018036:	add    rdx,0x2
   14001803a:	inc    r8
   14001803d:	movzx  eax,BYTE PTR [r8]
   140018041:	test   al,al
   140018043:	jne    0x140018010
   140018045:	mov    WORD PTR [rdx],si
   140018048:	xor    r8d,r8d
   14001804b:	mov    ecx,r10d
   14001804e:	mov    rdx,rdi
   140018051:	call   QWORD PTR [rip+0x29a51]        # 0x140041aa8
   140018057:	test   ax,ax
   14001805a:	lea    r14,[rip+0x193f7]        # 0x140031458
   140018061:	jne    0x140017e0d
   140018067:	lea    rax,[rbp-0x70]
   14001806b:	mov    QWORD PTR [rsp+0x28],rax
   140018070:	lea    rax,[rsp+0x78]
   140018075:	mov    QWORD PTR [rsp+0x20],rax
   14001807a:	lea    r9,[rsp+0x50]
   14001807f:	lea    rbx,[rip+0x193e2]        # 0x140031468
   140018086:	mov    rdx,rbx
   140018089:	mov    rcx,r14
   14001808c:	call   0x140029e30
   140018091:	test   eax,eax
   140018093:	jne    0x140017f70
   140018099:	mov    rcx,r14
   14001809c:	call   0x14001bc00
   1400180a1:	cmp    DWORD PTR [rip+0x26100],0x0        # 0x14003e1a8
   1400180a8:	je     0x140017f70
   1400180ae:	mov    WORD PTR [rip+0x276de],r15w        # 0x14003f794
   1400180b6:	lea    r8,[rbp-0x70]
   1400180ba:	mov    edx,DWORD PTR [rsp+0x50]
   1400180be:	lea    rcx,[rsp+0x78]
   1400180c3:	call   0x140028fd0
   1400180c8:	test   eax,eax
   1400180ca:	je     0x1400180df
   1400180cc:	cmp    WORD PTR [rip+0x276c0],0xffff        # 0x14003f794
   1400180d4:	jne    0x140017f70
   1400180da:	jmp    0x140017e0d
   1400180df:	mov    WORD PTR [rip+0x276ae],si        # 0x14003f794
   1400180e6:	mov    rcx,r14
   1400180e9:	call   QWORD PTR [rip+0x17371]        # 0x14002f460
   1400180ef:	mov    r14d,0x2
   1400180f5:	mov    WORD PTR [rip+0x26d5b],r14w        # 0x14003ee58
   1400180fd:	mov    WORD PTR [rip+0x260a0],si        # 0x14003e1a4
   140018104:	movzx  r9d,si
   140018108:	lea    rax,[rbp-0x48]
   14001810c:	mov    ecx,r14d
   14001810f:	nop
   140018110:	add    r9w,WORD PTR [rax]
   140018114:	lea    rax,[rax+0x2]
   140018118:	dec    rcx
   14001811b:	jne    0x140018110
   14001811d:	mov    WORD PTR [rip+0x26d23],r9w        # 0x14003ee48
   140018125:	mov    eax,0x9
   14001812a:	mov    WORD PTR [rip+0x26d2f],ax        # 0x14003ee60
   140018131:	mov    WORD PTR [rip+0x26d17],r9w        # 0x14003ee50
   140018139:	lea    r8,[rip+0x192a0]        # 0x1400313e0
   140018140:	mov    rdx,rdi
   140018143:	mov    al,0x43
   140018145:	mov    r10,QWORD PTR [rip+0x251ac]        # 0x14003d2f8
   14001814c:	lea    r11,[rip+0x190ad]        # 0x140031200
   140018153:	cmp    al,0x20
   140018155:	jae    0x140018161
   140018157:	movzx  eax,al
   14001815a:	movzx  ecx,WORD PTR [r11+rax*2]
   14001815f:	jmp    0x140018176
   140018161:	cmp    al,0x80
   140018163:	jae    0x14001816a
   140018165:	movzx  ecx,al
   140018168:	jmp    0x140018176
   14001816a:	movzx  eax,al
   14001816d:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   140018176:	mov    WORD PTR [rdx],cx
   140018179:	add    rdx,r14
   14001817c:	inc    r8
   14001817f:	movzx  eax,BYTE PTR [r8]
   140018183:	test   al,al
   140018185:	jne    0x140018153
   140018187:	mov    WORD PTR [rdx],si
   14001818a:	xor    r8d,r8d
   14001818d:	mov    rdx,rdi
   140018190:	movzx  ecx,r9w
   140018194:	call   QWORD PTR [rip+0x2990e]        # 0x140041aa8
   14001819a:	test   ax,ax
   14001819d:	jne    0x140017e0d
   1400181a3:	mov    rcx,rsi
   1400181a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400181b0:	movzx  eax,BYTE PTR [rcx+rbx*1]
   1400181b4:	mov    BYTE PTR [rbp+rcx*1-0x38],al
   1400181b8:	lea    rcx,[rcx+0x1]
   1400181bc:	test   al,al
   1400181be:	jne    0x1400181b0
   1400181c0:	lea    rcx,[rbp-0x38]
   1400181c4:	call   0x14002ae90
   1400181c9:	mov    rdi,rax
   1400181cc:	mov    edx,r15d
   1400181cf:	mov    rcx,rax
   1400181d2:	call   0x14002ab70
   1400181d7:	mov    rbx,rax
   1400181da:	test   rax,rax
   1400181dd:	jne    0x1400181e7
   1400181df:	or     eax,0xffffffff
   1400181e2:	jmp    0x140018653
   1400181e7:	mov    rcx,rdi
   1400181ea:	call   0x14002af10
   1400181ef:	xor    edx,edx
   1400181f1:	mov    rcx,QWORD PTR [rbx]
   1400181f4:	call   QWORD PTR [rip+0x17026]        # 0x14002f220
   1400181fa:	mov    DWORD PTR [rip+0x25fa8],eax        # 0x14003e1a8
   140018200:	mov    WORD PTR [rip+0x26c3d],si        # 0x14003ee44
   140018207:	mov    WORD PTR [rip+0x26c4e],si        # 0x14003ee5c
   14001820e:	test   eax,eax
   140018210:	je     0x140017f70
   140018216:	mov    rcx,rbx
   140018219:	call   0x140018680
   14001821e:	test   ax,ax
   140018221:	jns    0x140018240
   140018223:	cwde   
   140018224:	cmp    eax,0xfffffffc
   140018227:	je     0x140017e0d
   14001822d:	cmp    eax,0xffffffff
   140018230:	jne    0x140017f70
   140018236:	mov    eax,0x4
   14001823b:	jmp    0x140018653
   140018240:	mov    rcx,rbx
   140018243:	call   0x14002a9e0
   140018248:	mov    rcx,QWORD PTR [rip+0x28291]        # 0x1400404e0
   14001824f:	movzx  eax,WORD PTR [rcx+0x6c]
   140018253:	mov    WORD PTR [rsp+0x20],ax
   140018258:	mov    r9,QWORD PTR [rip+0x25ea9]        # 0x14003e108
   14001825f:	movzx  edx,BYTE PTR [rcx+0x3d]
   140018263:	call   0x140006540
   140018268:	mov    ebx,0x3
   14001826d:	mov    WORD PTR [rip+0x26be4],bx        # 0x14003ee58
   140018274:	mov    WORD PTR [rip+0x25f29],si        # 0x14003e1a4
   14001827b:	movzx  r9d,si
   14001827f:	lea    rax,[rbp-0x48]
   140018283:	mov    ecx,ebx
   140018285:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018290:	add    r9w,WORD PTR [rax]
   140018294:	lea    rax,[rax+0x2]
   140018298:	dec    rcx
   14001829b:	jne    0x140018290
   14001829d:	mov    WORD PTR [rip+0x26ba3],r9w        # 0x14003ee48
   1400182a5:	mov    eax,0x10
   1400182aa:	mov    WORD PTR [rip+0x26baf],ax        # 0x14003ee60
   1400182b1:	mov    WORD PTR [rip+0x26b97],r9w        # 0x14003ee50
   1400182b9:	lea    r8,[rip+0x19238]        # 0x1400314f8
   1400182c0:	lea    rdx,[rip+0x25ee9]        # 0x14003e1b0
   1400182c7:	mov    al,0x4d
   1400182c9:	mov    r10,QWORD PTR [rip+0x25028]        # 0x14003d2f8
   1400182d0:	lea    r12,[rip+0x18f29]        # 0x140031200
   1400182d7:	cmp    al,0x20
   1400182d9:	jae    0x1400182e5
   1400182db:	movzx  eax,al
   1400182de:	movzx  ecx,WORD PTR [r12+rax*2]
   1400182e3:	jmp    0x1400182fa
   1400182e5:	cmp    al,0x80
   1400182e7:	jae    0x1400182ee
   1400182e9:	movzx  ecx,al
   1400182ec:	jmp    0x1400182fa
   1400182ee:	movzx  eax,al
   1400182f1:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   1400182fa:	mov    WORD PTR [rdx],cx
   1400182fd:	add    rdx,r14
   140018300:	inc    r8
   140018303:	movzx  eax,BYTE PTR [r8]
   140018307:	test   al,al
   140018309:	jne    0x1400182d7
   14001830b:	mov    WORD PTR [rdx],si
   14001830e:	xor    r8d,r8d
   140018311:	lea    rdx,[rip+0x25e98]        # 0x14003e1b0
   140018318:	movzx  ecx,r9w
   14001831c:	call   QWORD PTR [rip+0x29786]        # 0x140041aa8
   140018322:	test   ax,ax
   140018325:	mov    r12,QWORD PTR [rsp+0x58]
   14001832a:	jne    0x140017e0d
   140018330:	lea    rsi,[rip+0x296e9]        # 0x140041a20
   140018337:	mov    rax,rsi
   14001833a:	xor    edx,edx
   14001833c:	mov    ecx,edx
   14001833e:	xchg   ax,ax
   140018340:	cmp    BYTE PTR [rax],dl
   140018342:	jne    0x140018349
   140018344:	cmp    BYTE PTR [rax+0x1],dl
   140018347:	je     0x140018350
   140018349:	add    rax,r14
   14001834c:	inc    ecx
   14001834e:	jmp    0x140018340
   140018350:	add    cx,cx
   140018353:	movzx  edi,dx
   140018356:	cmp    dx,cx
   140018359:	jge    0x1400183de
   14001835f:	mov    rax,QWORD PTR [rip+0x2817a]        # 0x1400404e0
   140018366:	movzx  r15d,BYTE PTR [rax+0x3d]
   14001836b:	dec    cx
   14001836e:	shr    cx,1
   140018371:	inc    cx
   140018374:	movzx  r14d,cx
   140018378:	mov    r12,QWORD PTR [rip+0x25d89]        # 0x14003e108
   14001837f:	movzx  r13d,WORD PTR [rip+0x26ac5]        # 0x14003ee4c
   140018387:	nop    WORD PTR [rax+rax*1+0x0]
   140018390:	movzx  eax,WORD PTR [rsi]
   140018393:	mov    WORD PTR [rsp+0x50],ax
   140018398:	mov    WORD PTR [rsp+0x20],r13w
   14001839e:	mov    r9,r12
   1400183a1:	movzx  edx,r15b
   1400183a5:	lea    rcx,[rsp+0x50]
   1400183aa:	call   0x140006c20
   1400183af:	movsx  r9,di
   1400183b3:	movzx  eax,WORD PTR [rsp+0x50]
   1400183b8:	mov    WORD PTR [rbp+r9*1-0x10],ax
   1400183be:	lea    rsi,[rsi+0x2]
   1400183c2:	inc    di
   1400183c5:	dec    r14
   1400183c8:	jne    0x140018390
   1400183ca:	mov    r14d,0x2
   1400183d0:	lea    r15d,[r14-0x1]
   1400183d4:	mov    r12,QWORD PTR [rsp+0x58]
   1400183d9:	mov    r13,QWORD PTR [rsp+0x60]
   1400183de:	lea    rcx,[rbp-0x10]
   1400183e2:	call   0x140006d50
   1400183e7:	test   ax,ax
   1400183ea:	jns    0x1400183fe
   1400183ec:	cmp    ax,0xffff
   1400183f0:	je     0x140018236
   1400183f6:	movzx  eax,bx
   1400183f9:	jmp    0x140018653
   1400183fe:	mov    WORD PTR [rip+0x27dab],ax        # 0x1400401b0
   140018405:	xor    ecx,ecx
   140018407:	lea    rdx,[rip+0x1905a]        # 0x140031468
   14001840e:	xchg   ax,ax
   140018410:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140018414:	mov    BYTE PTR [rbp+rcx*1-0x38],al
   140018418:	lea    rcx,[rcx+0x1]
   14001841c:	test   al,al
   14001841e:	jne    0x140018410
   140018420:	lea    rcx,[rbp-0x38]
   140018424:	call   0x14002ae90
   140018429:	mov    rsi,rax
   14001842c:	mov    edx,ebx
   14001842e:	mov    rcx,rax
   140018431:	call   0x14002ab70
   140018436:	mov    rdi,rax
   140018439:	test   rax,rax
   14001843c:	je     0x1400181df
   140018442:	mov    rcx,rsi
   140018445:	call   0x14002af10
   14001844a:	xor    edx,edx
   14001844c:	mov    rcx,QWORD PTR [rdi]
   14001844f:	call   QWORD PTR [rip+0x16dcb]        # 0x14002f220
   140018455:	mov    DWORD PTR [rip+0x25d4d],eax        # 0x14003e1a8
   14001845b:	xor    esi,esi
   14001845d:	mov    WORD PTR [rip+0x269e0],si        # 0x14003ee44
   140018464:	mov    WORD PTR [rip+0x269f1],si        # 0x14003ee5c
   14001846b:	test   eax,eax
   14001846d:	je     0x1400183f6
   14001846f:	mov    r9,r12
   140018472:	mov    r8,r13
   140018475:	mov    rdx,rdi
   140018478:	call   0x140018cc0
   14001847d:	test   ax,ax
   140018480:	jns    0x14001849a
   140018482:	cwde   
   140018483:	cmp    eax,0xfffffffc
   140018486:	je     0x140017e0d
   14001848c:	cmp    eax,0xffffffff
   14001848f:	je     0x1400183f6
   140018495:	jmp    0x140018236
   14001849a:	mov    rcx,rdi
   14001849d:	call   0x14002a9e0
   1400184a2:	lea    rax,[rip+0x18fbf]        # 0x140031468
   1400184a9:	mov    rcx,rax
   1400184ac:	call   QWORD PTR [rip+0x16fae]        # 0x14002f460
   1400184b2:	cmp    WORD PTR [rip+0x25a2b],si        # 0x14003dee4
   1400184b9:	je     0x14001860b
   1400184bf:	mov    edi,0x4
   1400184c4:	mov    WORD PTR [rip+0x2698d],di        # 0x14003ee58
   1400184cb:	mov    WORD PTR [rip+0x25cd2],si        # 0x14003e1a4
   1400184d2:	movzx  r9d,si
   1400184d6:	lea    rax,[rbp-0x48]
   1400184da:	mov    ecx,edi
   1400184dc:	nop    DWORD PTR [rax+0x0]
   1400184e0:	add    r9w,WORD PTR [rax]
   1400184e4:	lea    rax,[rax+0x2]
   1400184e8:	dec    rcx
   1400184eb:	jne    0x1400184e0
   1400184ed:	mov    WORD PTR [rip+0x26953],r9w        # 0x14003ee48
   1400184f5:	mov    eax,0x38
   1400184fa:	mov    WORD PTR [rip+0x2695f],ax        # 0x14003ee60
   140018501:	mov    WORD PTR [rip+0x26947],r9w        # 0x14003ee50
   140018509:	lea    r8,[rip+0x18e50]        # 0x140031360
   140018510:	lea    rdx,[rip+0x25c99]        # 0x14003e1b0
   140018517:	mov    al,0x43
   140018519:	mov    r10,QWORD PTR [rip+0x24dd8]        # 0x14003d2f8
   140018520:	lea    rdi,[rip+0x18cd9]        # 0x140031200
   140018527:	cmp    al,0x20
   140018529:	jae    0x140018534
   14001852b:	movzx  eax,al
   14001852e:	movzx  ecx,WORD PTR [rdi+rax*2]
   140018532:	jmp    0x140018549
   140018534:	cmp    al,0x80
   140018536:	jae    0x14001853d
   140018538:	movzx  ecx,al
   14001853b:	jmp    0x140018549
   14001853d:	movzx  eax,al
   140018540:	movzx  ecx,WORD PTR [r10+rax*2-0x100]
   140018549:	mov    WORD PTR [rdx],cx
   14001854c:	add    rdx,0x2
   140018550:	inc    r8
   140018553:	movzx  eax,BYTE PTR [r8]
   140018557:	test   al,al
   140018559:	jne    0x140018527
   14001855b:	mov    WORD PTR [rdx],si
   14001855e:	xor    r8d,r8d
   140018561:	lea    rdx,[rip+0x25c48]        # 0x14003e1b0
   140018568:	movzx  ecx,r9w
   14001856c:	call   QWORD PTR [rip+0x29536]        # 0x140041aa8
   140018572:	test   ax,ax
   140018575:	mov    edi,0x4
   14001857a:	jne    0x140017e0d
   140018580:	lea    rcx,[rip+0x18de9]        # 0x140031370
   140018587:	call   0x14001bc00
   14001858c:	cmp    DWORD PTR [rip+0x25c16],esi        # 0x14003e1a8
   140018592:	je     0x1400183f6
   140018598:	call   0x140013770
   14001859d:	test   ax,ax
   1400185a0:	je     0x1400185d7
   1400185a2:	cwde   
   1400185a3:	cmp    eax,0xfffffff9
   1400185a6:	je     0x1400185d0
   1400185a8:	cmp    eax,0xfffffffc
   1400185ab:	je     0x140017e0d
   1400185b1:	cmp    eax,0xfffffffe
   1400185b4:	je     0x1400185c7
   1400185b6:	cmp    eax,0xffffffff
   1400185b9:	je     0x140017e2e
   1400185bf:	movzx  eax,di
   1400185c2:	jmp    0x140018653
   1400185c7:	movzx  eax,r14w
   1400185cb:	jmp    0x140018653
   1400185d0:	mov    eax,0x7
   1400185d5:	jmp    0x140018653
   1400185d7:	lea    rcx,[rip+0x18d92]        # 0x140031370
   1400185de:	call   QWORD PTR [rip+0x16e7c]        # 0x14002f460
   1400185e4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400185e9:	call   0x1400076e0
   1400185ee:	test   ax,ax
   1400185f1:	je     0x140018602
   1400185f3:	cmp    ax,0xffff
   1400185f7:	je     0x1400183f6
   1400185fd:	movzx  eax,di
   140018600:	jmp    0x140018653
   140018602:	lea    rcx,[rip+0x18d77]        # 0x140031380
   140018609:	jmp    0x14001862c
   14001860b:	lea    rcx,[rip+0x18d5e]        # 0x140031370
   140018612:	call   QWORD PTR [rip+0x16e48]        # 0x14002f460
   140018618:	lea    rcx,[rip+0x18d71]        # 0x140031390
   14001861f:	call   QWORD PTR [rip+0x16e3b]        # 0x14002f460
   140018625:	lea    rcx,[rip+0x18d74]        # 0x1400313a0
   14001862c:	call   QWORD PTR [rip+0x16e2e]        # 0x14002f460
   140018632:	call   0x1400049e0
   140018637:	mov    rcx,QWORD PTR [rip+0x27ea2]        # 0x1400404e0
   14001863e:	test   rcx,rcx
   140018641:	je     0x140018650
   140018643:	call   QWORD PTR [rip+0x16e37]        # 0x14002f480
   140018649:	mov    QWORD PTR [rip+0x27e90],rsi        # 0x1400404e0
   140018650:	movzx  eax,si
   140018653:	mov    rcx,QWORD PTR [rbp+0x70]
   140018657:	xor    rcx,rsp
   14001865a:	call   0x14002c960
   14001865f:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140018667:	add    rsp,0x180
   14001866e:	pop    r15
   140018670:	pop    r14
   140018672:	pop    r13
   140018674:	pop    r12
   140018676:	pop    rdi
   140018677:	pop    rsi
   140018678:	pop    rbp
   140018679:	ret    
   14001867a:	int3   
   14001867b:	int3   
   14001867c:	int3   
   14001867d:	int3   
   14001867e:	int3   
   14001867f:	int3   
   140018680:	rex push rbx
   140018682:	push   rbp
   140018683:	push   rsi
   140018684:	push   rdi
   140018685:	push   r15
   140018687:	sub    rsp,0x860
   14001868e:	mov    rax,QWORD PTR [rip+0x2396b]        # 0x14003c000
   140018695:	xor    rax,rsp
   140018698:	mov    QWORD PTR [rsp+0x850],rax
   1400186a0:	mov    edi,DWORD PTR [rip+0x2933e]        # 0x1400419e4
   1400186a6:	mov    r15,rcx
   1400186a9:	mov    QWORD PTR [rsp+0x38],rcx
   1400186ae:	mov    ebp,0x1
   1400186b3:	mov    ecx,edi
   1400186b5:	mov    DWORD PTR [rsp+0x24],ebp
   1400186b9:	call   QWORD PTR [rip+0x16d59]        # 0x14002f418
   1400186bf:	mov    rsi,rax
   1400186c2:	mov    QWORD PTR [rsp+0x40],rax
   1400186c7:	test   rax,rax
   1400186ca:	jne    0x1400186d4
   1400186cc:	lea    eax,[rbp+0x3]
   1400186cf:	jmp    0x140018c8e
   1400186d4:	mov    rcx,rdi
   1400186d7:	mov    QWORD PTR [rsp+0x8a8],r14
   1400186df:	call   QWORD PTR [rip+0x16d33]        # 0x14002f418
   1400186e5:	mov    rcx,rsi
   1400186e8:	mov    r14,rax
   1400186eb:	test   rax,rax
   1400186ee:	jne    0x1400186ff
   1400186f0:	call   QWORD PTR [rip+0x16d8a]        # 0x14002f480
   1400186f6:	lea    eax,[r14+0x4]
   1400186fa:	jmp    0x140018c86
   1400186ff:	mov    r8,r15
   140018702:	movzx  edx,di
   140018705:	mov    QWORD PTR [rsp+0x898],r12
   14001870d:	mov    QWORD PTR [rsp+0x8a0],r13
   140018715:	mov    rbx,rax
   140018718:	mov    QWORD PTR [rsp+0x28],rax
   14001871d:	call   0x14002a640
   140018722:	test   ax,ax
   140018725:	jle    0x140018c62
   14001872b:	movzx  edi,WORD PTR [rsp+0x20]
   140018730:	mov    r12d,0x20
   140018736:	mov    rcx,r15
   140018739:	call   0x14001bd30
   14001873e:	test   ax,ax
   140018741:	je     0x140018795
   140018743:	movzx  r8d,WORD PTR [rip+0x26711]        # 0x14003ee5c
   14001874b:	movzx  ecx,WORD PTR [rip+0x2670e]        # 0x14003ee60
   140018752:	mov    eax,0x51eb851f
   140018757:	mov    WORD PTR [rip+0x25a45],r8w        # 0x14003e1a4
   14001875f:	imul   ecx,r8d
   140018763:	imul   ecx
   140018765:	mov    ecx,edx
   140018767:	lea    rdx,[rip+0x25a42]        # 0x14003e1b0
   14001876e:	sar    ecx,0x5
   140018771:	mov    eax,ecx
   140018773:	shr    eax,0x1f
   140018776:	add    ecx,eax
   140018778:	add    cx,WORD PTR [rip+0x266c9]        # 0x14003ee48
   14001877f:	mov    WORD PTR [rip+0x266ca],cx        # 0x14003ee50
   140018786:	call   QWORD PTR [rip+0x2931c]        # 0x140041aa8
   14001878c:	test   ax,ax
   14001878f:	jne    0x140018c4b
   140018795:	mov    DWORD PTR [r14],0x20
   14001879c:	movzx  ecx,BYTE PTR [rsi+0x1]
   1400187a0:	xor    r11d,r11d
   1400187a3:	or     cl,BYTE PTR [rsi]
   1400187a5:	mov    r14,rbx
   1400187a8:	mov    QWORD PTR [rsp+0x30],rbx
   1400187ad:	mov    rax,rsi
   1400187b0:	mov    rdx,rbx
   1400187b3:	je     0x1400187f8
   1400187b5:	movzx  r9d,WORD PTR [rbx]
   1400187b9:	nop    DWORD PTR [rax+0x0]
   1400187c0:	cmp    WORD PTR [rax],r9w
   1400187c4:	jne    0x1400187ec
   1400187c6:	mov    r8,rax
   1400187c9:	nop    DWORD PTR [rax+0x0]
   1400187d0:	movzx  ecx,WORD PTR [rdx+0x2]
   1400187d4:	add    rdx,0x2
   1400187d8:	test   cx,cx
   1400187db:	je     0x140018814
   1400187dd:	add    rax,0x2
   1400187e1:	cmp    WORD PTR [rax],cx
   1400187e4:	je     0x1400187d0
   1400187e6:	mov    rax,r8
   1400187e9:	mov    rdx,rbx
   1400187ec:	movzx  ecx,BYTE PTR [rax+0x3]
   1400187f0:	add    rax,0x2
   1400187f4:	or     cl,BYTE PTR [rax]
   1400187f6:	jne    0x1400187c0
   1400187f8:	mov    rcx,rbx
   1400187fb:	call   QWORD PTR [rip+0x16c7f]        # 0x14002f480
   140018801:	mov    rcx,rsi
   140018804:	call   QWORD PTR [rip+0x16c76]        # 0x14002f480
   14001880a:	mov    eax,0x4
   14001880f:	jmp    0x140018c76
   140018814:	test   r8,r8
   140018817:	je     0x1400187f8
   140018819:	sub    r8,rsi
   14001881c:	movzx  r15d,r11w
   140018820:	test   r8,r8
   140018823:	jle    0x140018845
   140018825:	mov    rcx,r11
   140018828:	nop    DWORD PTR [rax+rax*1+0x0]
   140018830:	movzx  eax,BYTE PTR [rcx+rsi*1]
   140018834:	inc    r15w
   140018838:	mov    BYTE PTR [rsp+rcx*1+0x50],al
   14001883c:	movsx  rcx,r15w
   140018840:	cmp    rcx,r8
   140018843:	jl     0x140018830
   140018845:	movsx  rax,r15w
   140018849:	inc    r15w
   14001884d:	cmp    rax,0x800
   140018853:	jae    0x140018cb2
   140018859:	mov    BYTE PTR [rsp+rax*1+0x50],r11b
   14001885e:	movsx  rax,r15w
   140018862:	inc    r15w
   140018866:	cmp    rax,0x800
   14001886c:	jae    0x140018cac
   140018872:	mov    BYTE PTR [rsp+rax*1+0x50],r11b
   140018877:	test   bp,bp
   14001887a:	je     0x1400188b9
   14001887c:	lea    rcx,[rsp+0x50]
   140018881:	lea    rdx,[rip+0x29198]        # 0x140041a20
   140018888:	movzx  eax,BYTE PTR [rcx]
   14001888b:	test   al,al
   14001888d:	jne    0x140018895
   14001888f:	cmp    BYTE PTR [rcx+0x1],r11b
   140018893:	je     0x1400188a8
   140018895:	mov    BYTE PTR [rdx],al
   140018897:	movzx  eax,BYTE PTR [rcx+0x1]
   14001889b:	add    rdx,0x2
   14001889f:	mov    BYTE PTR [rdx-0x1],al
   1400188a2:	add    rcx,0x2
   1400188a6:	jmp    0x140018888
   1400188a8:	movzx  eax,BYTE PTR [rcx]
   1400188ab:	mov    DWORD PTR [rsp+0x24],r11d
   1400188b0:	mov    BYTE PTR [rdx],al
   1400188b2:	movzx  eax,BYTE PTR [rcx+0x1]
   1400188b6:	mov    BYTE PTR [rdx+0x1],al
   1400188b9:	movzx  r13d,r11w
   1400188bd:	cmp    r11w,r15w
   1400188c1:	jge    0x140018c26
   1400188c7:	movzx  r10d,WORD PTR [rip+0x2657d]        # 0x14003ee4c
   1400188cf:	mov    r12,QWORD PTR [rip+0x27c0a]        # 0x1400404e0
   1400188d6:	mov    r8,QWORD PTR [rip+0x2582b]        # 0x14003e108
   1400188dd:	lea    esi,[r10-0x1]
   1400188e1:	movzx  eax,BYTE PTR [rip+0x239c8]        # 0x14003c2b0
   1400188e8:	movsx  r14,r13w
   1400188ec:	lea    rcx,[rip+0x239bd]        # 0x14003c2b0
   1400188f3:	movzx  r9d,WORD PTR [rsp+r14*1+0x50]
   1400188f9:	mov    WORD PTR [rsp+0x20],r9w
   1400188ff:	cmp    al,0xff
   140018901:	je     0x140018918
   140018903:	movzx  edx,BYTE PTR [rsp+0x21]
   140018908:	cmp    al,dl
   14001890a:	je     0x140018918
   14001890c:	movzx  eax,BYTE PTR [rcx+0x10]
   140018910:	add    rcx,0x10
   140018914:	cmp    al,0xff
   140018916:	jne    0x140018908
   140018918:	mov    rdx,QWORD PTR [rcx+0x8]
   14001891c:	test   rdx,rdx
   14001891f:	je     0x140018941
   140018921:	movzx  eax,BYTE PTR [rdx]
   140018924:	cmp    r9b,al
   140018927:	jb     0x140018941
   140018929:	sub    r9b,al
   14001892c:	cmp    r9b,BYTE PTR [rdx+0x1]
   140018930:	ja     0x140018941
   140018932:	movzx  eax,r9b
   140018936:	add    eax,0x2
   140018939:	cdqe   
   14001893b:	movzx  ebp,BYTE PTR [rdx+rax*1]
   14001893f:	jmp    0x140018944
   140018941:	mov    bpl,0xff
   140018944:	movzx  r9d,r11w
   140018948:	movzx  ebx,r11w
   14001894c:	cmp    r11w,r10w
   140018950:	jg     0x140018a50
   140018956:	movzx  r11d,bpl
   14001895a:	nop    WORD PTR [rax+rax*1+0x0]
   140018960:	movsx  ecx,r9w
   140018964:	movsx  eax,r10w
   140018968:	add    eax,ecx
   14001896a:	cdq    
   14001896b:	sub    eax,edx
   14001896d:	sar    eax,1
   14001896f:	movsxd rdi,eax
   140018972:	movsx  rcx,di
   140018976:	movzx  edx,BYTE PTR [r8+rcx*4+0x2]
   14001897c:	movzx  ecx,r11w
   140018980:	sub    cx,dx
   140018983:	jns    0x14001898d
   140018985:	lea    r10d,[rdi-0x1]
   140018989:	xor    ebx,ebx
   14001898b:	jmp    0x14001899b
   14001898d:	test   cx,cx
   140018990:	jle    0x1400189a6
   140018992:	lea    r9d,[rdi+0x1]
   140018996:	mov    ebx,0x1
   14001899b:	cmp    r9w,r10w
   14001899f:	jle    0x140018960
   1400189a1:	jmp    0x140018a46
   1400189a6:	movsx  rcx,di
   1400189aa:	movzx  eax,BYTE PTR [r8+rcx*4+0x2]
   1400189b0:	cmp    BYTE PTR [r8+rcx*4-0x2],al
   1400189b5:	jne    0x1400189d4
   1400189b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400189c0:	dec    di
   1400189c3:	movsx  rcx,di
   1400189c7:	movzx  eax,BYTE PTR [r8+rcx*4+0x2]
   1400189cd:	cmp    BYTE PTR [r8+rcx*4-0x2],al
   1400189d2:	je     0x1400189c0
   1400189d4:	movsx  rcx,di
   1400189d8:	movzx  edx,di
   1400189db:	movzx  eax,BYTE PTR [r8+rcx*4+0x6]
   1400189e1:	cmp    BYTE PTR [r8+rcx*4+0x2],al
   1400189e6:	jne    0x140018a04
   1400189e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400189f0:	inc    dx
   1400189f3:	movsx  rcx,dx
   1400189f7:	movzx  eax,BYTE PTR [r8+rcx*4+0x6]
   1400189fd:	cmp    BYTE PTR [r8+rcx*4+0x2],al
   140018a02:	je     0x1400189f0
   140018a04:	movzx  r9d,di
   140018a08:	cmp    di,dx
   140018a0b:	jg     0x140018a46
   140018a0d:	movzx  r10d,BYTE PTR [rsp+r14*1+0x50]
   140018a13:	lea    eax,[r14+0x1]
   140018a17:	lea    r11,[rsp+0x50]
   140018a1c:	movsxd rcx,eax
   140018a1f:	add    r11,rcx
   140018a22:	movsx  rax,r9w
   140018a26:	lea    rcx,[r8+rax*4]
   140018a2a:	cmp    BYTE PTR [rcx],r10b
   140018a2d:	jne    0x140018a3c
   140018a2f:	movzx  eax,BYTE PTR [r11]
   140018a33:	cmp    BYTE PTR [rcx+0x1],al
   140018a36:	je     0x140018bf7
   140018a3c:	inc    r9w
   140018a40:	cmp    r9w,dx
   140018a44:	jle    0x140018a22
   140018a46:	test   bx,bx
   140018a49:	je     0x140018a50
   140018a4b:	lea    ebx,[rdi+0x1]
   140018a4e:	jmp    0x140018a53
   140018a50:	movzx  ebx,di
   140018a53:	movzx  eax,WORD PTR [rip+0x263f2]        # 0x14003ee4c
   140018a5a:	inc    si
   140018a5d:	mov    rcx,r8
   140018a60:	inc    ax
   140018a63:	mov    WORD PTR [rsp+0x20],si
   140018a68:	movsx  rsi,ax
   140018a6c:	mov    WORD PTR [rip+0x263d9],ax        # 0x14003ee4c
   140018a73:	lea    edx,[rsi*4+0x0]
   140018a7a:	call   QWORD PTR [rip+0x16980]        # 0x14002f400
   140018a80:	mov    r9,rax
   140018a83:	mov    QWORD PTR [rip+0x2567e],rax        # 0x14003e108
   140018a8a:	test   rax,rax
   140018a8d:	je     0x140018c5b
   140018a93:	movzx  ecx,WORD PTR [rsp+0x20]
   140018a98:	cmp    cx,bx
   140018a9b:	jle    0x140018b01
   140018a9d:	movsx  r8,cx
   140018aa1:	shl    r8,0x2
   140018aa5:	sub    cx,bx
   140018aa8:	movzx  r10d,cx
   140018aac:	nop    DWORD PTR [rax+0x0]
   140018ab0:	movzx  eax,BYTE PTR [r8+r9*1-0x4]
   140018ab6:	lea    r8,[r8-0x4]
   140018aba:	mov    BYTE PTR [r8+r9*1+0x4],al
   140018abf:	mov    rcx,QWORD PTR [rip+0x25642]        # 0x14003e108
   140018ac6:	movzx  eax,BYTE PTR [r8+rcx*1+0x1]
   140018acc:	mov    BYTE PTR [r8+rcx*1+0x5],al
   140018ad1:	mov    rcx,QWORD PTR [rip+0x25630]        # 0x14003e108
   140018ad8:	movzx  eax,BYTE PTR [r8+rcx*1+0x2]
   140018ade:	mov    BYTE PTR [r8+rcx*1+0x6],al
   140018ae3:	mov    rcx,QWORD PTR [rip+0x2561e]        # 0x14003e108
   140018aea:	movzx  eax,BYTE PTR [r8+rcx*1+0x3]
   140018af0:	mov    BYTE PTR [r8+rcx*1+0x7],al
   140018af5:	mov    r9,QWORD PTR [rip+0x2560c]        # 0x14003e108
   140018afc:	dec    r10
   140018aff:	jne    0x140018ab0
   140018b01:	movzx  ecx,BYTE PTR [rsp+r14*1+0x51]
   140018b07:	movsx  r8d,WORD PTR [rip+0x2633d]        # 0x14003ee4c
   140018b0f:	movsx  rax,bx
   140018b13:	lea    rdx,[rax*4+0x0]
   140018b1b:	movzx  eax,BYTE PTR [rsp+r14*1+0x50]
   140018b21:	mov    BYTE PTR [rdx+r9*1],al
   140018b25:	mov    rax,QWORD PTR [rip+0x255dc]        # 0x14003e108
   140018b2c:	lea    r9d,[r8-0x1]
   140018b30:	mov    BYTE PTR [rdx+rax*1+0x1],cl
   140018b34:	mov    rax,QWORD PTR [rip+0x255cd]        # 0x14003e108
   140018b3b:	lea    ecx,[r8-0x1]
   140018b3f:	mov    BYTE PTR [rdx+rax*1+0x2],bpl
   140018b44:	mov    rax,QWORD PTR [rip+0x255bd]        # 0x14003e108
   140018b4b:	mov    BYTE PTR [rdx+rax*1+0x3],cl
   140018b4f:	xor    eax,eax
   140018b51:	movzx  edx,ax
   140018b54:	test   r9d,r9d
   140018b57:	jle    0x140018b86
   140018b59:	nop    DWORD PTR [rax+0x0]
   140018b60:	mov    rax,QWORD PTR [rip+0x255a9]        # 0x14003e110
   140018b67:	movsx  r8,dx
   140018b6b:	add    r8,rax
   140018b6e:	movzx  eax,BYTE PTR [r8]
   140018b72:	cmp    al,bl
   140018b74:	jb     0x140018b7b
   140018b76:	inc    al
   140018b78:	mov    BYTE PTR [r8],al
   140018b7b:	inc    dx
   140018b7e:	movsx  eax,dx
   140018b81:	cmp    eax,r9d
   140018b84:	jl     0x140018b60
   140018b86:	mov    rcx,QWORD PTR [rip+0x25583]        # 0x14003e110
   140018b8d:	mov    edx,esi
   140018b8f:	call   QWORD PTR [rip+0x1686b]        # 0x14002f400
   140018b95:	mov    QWORD PTR [rip+0x25574],rax        # 0x14003e110
   140018b9c:	test   rax,rax
   140018b9f:	je     0x140018c5b
   140018ba5:	xor    r11d,r11d
   140018ba8:	mov    BYTE PTR [rsi+rax*1-0x1],bl
   140018bac:	movzx  edx,r11w
   140018bb0:	cmp    r11w,WORD PTR [r12+0x8c]
   140018bb9:	jae    0x140018be9
   140018bbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140018bc0:	mov    rax,QWORD PTR [rip+0x25521]        # 0x14003e0e8
   140018bc7:	movzx  r8d,dx
   140018bcb:	add    r8,rax
   140018bce:	movzx  eax,BYTE PTR [r8]
   140018bd2:	cmp    al,bl
   140018bd4:	jb     0x140018bdb
   140018bd6:	inc    al
   140018bd8:	mov    BYTE PTR [r8],al
   140018bdb:	inc    dx
   140018bde:	cmp    dx,WORD PTR [r12+0x8c]
   140018be7:	jb     0x140018bc0
   140018be9:	mov    r8,QWORD PTR [rip+0x25518]        # 0x14003e108
   140018bf0:	movzx  esi,WORD PTR [rsp+0x20]
   140018bf5:	jmp    0x140018bfa
   140018bf7:	xor    r11d,r11d
   140018bfa:	movzx  r10d,WORD PTR [rip+0x2624a]        # 0x14003ee4c
   140018c02:	add    r13w,0x2
   140018c07:	cmp    r13w,r15w
   140018c0b:	jl     0x1400188e1
   140018c11:	mov    rsi,QWORD PTR [rsp+0x40]
   140018c16:	mov    rbx,QWORD PTR [rsp+0x28]
   140018c1b:	mov    r14,QWORD PTR [rsp+0x30]
   140018c20:	mov    r12d,0x20
   140018c26:	mov    r15,QWORD PTR [rsp+0x38]
   140018c2b:	movzx  edx,WORD PTR [rip+0x28db2]        # 0x1400419e4
   140018c32:	mov    rcx,rsi
   140018c35:	mov    r8,r15
   140018c38:	call   0x14002a640
   140018c3d:	test   ax,ax
   140018c40:	jle    0x140018c62
   140018c42:	mov    ebp,DWORD PTR [rsp+0x24]
   140018c46:	jmp    0x140018736
   140018c4b:	mov    rcx,r14
   140018c4e:	call   QWORD PTR [rip+0x1682c]        # 0x14002f480
   140018c54:	mov    eax,0xfffffffc
   140018c59:	jmp    0x140018c76
   140018c5b:	mov    eax,0xfffffffd
   140018c60:	jmp    0x140018c76
   140018c62:	mov    rcx,r14
   140018c65:	call   QWORD PTR [rip+0x16815]        # 0x14002f480
   140018c6b:	mov    rcx,rsi
   140018c6e:	call   QWORD PTR [rip+0x1680c]        # 0x14002f480
   140018c74:	xor    eax,eax
   140018c76:	mov    r13,QWORD PTR [rsp+0x8a0]
   140018c7e:	mov    r12,QWORD PTR [rsp+0x898]
   140018c86:	mov    r14,QWORD PTR [rsp+0x8a8]
   140018c8e:	mov    rcx,QWORD PTR [rsp+0x850]
   140018c96:	xor    rcx,rsp
   140018c99:	call   0x14002c960
   140018c9e:	add    rsp,0x860
   140018ca5:	pop    r15
   140018ca7:	pop    rdi
   140018ca8:	pop    rsi
   140018ca9:	pop    rbp
   140018caa:	pop    rbx
   140018cab:	ret    
   140018cac:	call   0x14002cbc8
   140018cb1:	int3   
   140018cb2:	call   0x14002cbc8
   140018cb7:	int3   
   140018cb8:	int3   
   140018cb9:	int3   
   140018cba:	int3   
   140018cbb:	int3   
   140018cbc:	int3   
   140018cbd:	int3   
   140018cbe:	int3   
   140018cbf:	int3   
   140018cc0:	rex push rbp
   140018cc2:	push   rsi
   140018cc3:	push   rdi
   140018cc4:	push   r12
   140018cc6:	push   r13
   140018cc8:	push   r14
   140018cca:	push   r15
   140018ccc:	lea    rbp,[rsp-0x27]
   140018cd1:	sub    rsp,0xe0
   140018cd8:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140018ce0:	mov    QWORD PTR [rsp+0x120],rbx
   140018ce8:	mov    rax,QWORD PTR [rip+0x23311]        # 0x14003c000
   140018cef:	xor    rax,rsp
   140018cf2:	mov    QWORD PTR [rbp+0x1f],rax
   140018cf6:	mov    QWORD PTR [rbp-0x11],r9
   140018cfa:	mov    QWORD PTR [rbp-0x19],r8
   140018cfe:	mov    QWORD PTR [rbp-0x21],rdx
   140018d02:	mov    rcx,QWORD PTR [rip+0x277d7]        # 0x1400404e0
   140018d09:	mov    QWORD PTR [rbp-0x61],rcx
   140018d0d:	mov    rax,QWORD PTR [rip+0x253ec]        # 0x14003e100
   140018d14:	mov    QWORD PTR [rip+0x2cc05],rax        # 0x140045920
   140018d1b:	xor    r14d,r14d
   140018d1e:	movzx  eax,r14w
   140018d22:	mov    DWORD PTR [rbp-0x69],eax
   140018d25:	mov    eax,0x1
   140018d2a:	movzx  esi,ax
   140018d2d:	movzx  eax,r14w
   140018d31:	mov    DWORD PTR [rbp-0x59],eax
   140018d34:	mov    ebx,DWORD PTR [rip+0x28caa]        # 0x1400419e4
   140018d3a:	mov    ecx,ebx
   140018d3c:	call   QWORD PTR [rip+0x166d6]        # 0x14002f418
   140018d42:	mov    r13,rax
   140018d45:	test   rax,rax
   140018d48:	jne    0x140018d54
   140018d4a:	mov    eax,0x4
   140018d4f:	jmp    0x14001bbca
   140018d54:	mov    rcx,rbx
   140018d57:	call   QWORD PTR [rip+0x166bb]        # 0x14002f418
   140018d5d:	mov    QWORD PTR [rbp-0x71],rax
   140018d61:	test   rax,rax
   140018d64:	je     0x140018d4a
   140018d66:	mov    r12,rax
   140018d69:	mov    QWORD PTR [rbp-0x31],rax
   140018d6d:	mov    rcx,r14
   140018d70:	lea    rdi,[rip+0xfffffffffffe7289]        # 0x140000000
   140018d77:	nop    WORD PTR [rax+rax*1+0x0]
   140018d80:	movzx  eax,BYTE PTR [rcx+rdi*1+0x31370]
   140018d88:	mov    BYTE PTR [rbp+rcx*1-0x1],al
   140018d8c:	lea    rcx,[rcx+0x1]
   140018d90:	test   al,al
   140018d92:	jne    0x140018d80
   140018d94:	mov    ecx,0x10
   140018d99:	call   QWORD PTR [rip+0x16bf9]        # 0x14002f998
   140018d9f:	mov    rbx,rax
   140018da2:	mov    QWORD PTR [rbp-0x49],rax
   140018da6:	test   rax,rax
   140018da9:	je     0x140018ddf
   140018dab:	mov    WORD PTR [rax],r14w
   140018daf:	mov    QWORD PTR [rax+0x8],r14
   140018db3:	lea    rcx,[rbp-0x1]
   140018db7:	call   QWORD PTR [rip+0x164c3]        # 0x14002f280
   140018dbd:	test   eax,eax
   140018dbf:	jle    0x140018de2
   140018dc1:	inc    eax
   140018dc3:	movsxd rcx,eax
   140018dc6:	call   QWORD PTR [rip+0x16bcc]        # 0x14002f998
   140018dcc:	mov    QWORD PTR [rbx+0x8],rax
   140018dd0:	lea    rdx,[rbp-0x1]
   140018dd4:	mov    rcx,rax
   140018dd7:	call   QWORD PTR [rip+0x1647b]        # 0x14002f258
   140018ddd:	jmp    0x140018de2
   140018ddf:	mov    rbx,r14
   140018de2:	mov    edx,0xa
   140018de7:	mov    rcx,rbx
   140018dea:	call   0x14002ab70
   140018def:	mov    QWORD PTR [rbp-0x51],rax
   140018df3:	test   rax,rax
   140018df6:	je     0x14001bbc7
   140018dfc:	test   rbx,rbx
   140018dff:	je     0x140018e19
   140018e01:	mov    rcx,QWORD PTR [rbx+0x8]
   140018e05:	test   rcx,rcx
   140018e08:	je     0x140018e10
   140018e0a:	call   QWORD PTR [rip+0x16d68]        # 0x14002fb78
   140018e10:	mov    rcx,rbx
   140018e13:	call   QWORD PTR [rip+0x16d5f]        # 0x14002fb78
   140018e19:	mov    rdx,r14
   140018e1c:	lea    rdi,[rip+0x18665]        # 0x140031488
   140018e23:	nop    DWORD PTR [rax+0x0]
   140018e27:	nop    WORD PTR [rax+rax*1+0x0]
   140018e30:	movzx  eax,BYTE PTR [rdx+rdi*1]
   140018e34:	mov    BYTE PTR [rbp+rdx*1-0x1],al
   140018e38:	lea    rdx,[rdx+0x1]
   140018e3c:	test   al,al
   140018e3e:	jne    0x140018e30
   140018e40:	mov    ecx,0x10
   140018e45:	call   QWORD PTR [rip+0x16b4d]        # 0x14002f998
   140018e4b:	mov    rbx,rax
   140018e4e:	mov    QWORD PTR [rbp-0x49],rax
   140018e52:	test   rax,rax
   140018e55:	je     0x140018e8b
   140018e57:	mov    WORD PTR [rax],r14w
   140018e5b:	mov    QWORD PTR [rax+0x8],r14
   140018e5f:	lea    rcx,[rbp-0x1]
   140018e63:	call   QWORD PTR [rip+0x16417]        # 0x14002f280
   140018e69:	test   eax,eax
   140018e6b:	jle    0x140018e8e
   140018e6d:	inc    eax
   140018e6f:	movsxd rcx,eax
   140018e72:	call   QWORD PTR [rip+0x16b20]        # 0x14002f998
   140018e78:	mov    QWORD PTR [rbx+0x8],rax
   140018e7c:	lea    rdx,[rbp-0x1]
   140018e80:	mov    rcx,rax
   140018e83:	call   QWORD PTR [rip+0x163cf]        # 0x14002f258
   140018e89:	jmp    0x140018e8e
   140018e8b:	mov    rbx,r14
   140018e8e:	mov    edx,0xb
   140018e93:	mov    rcx,rbx
   140018e96:	call   0x14002ab70
   140018e9b:	mov    QWORD PTR [rbp-0x49],rax
   140018e9f:	test   rax,rax
   140018ea2:	mov    rdi,QWORD PTR [rbp-0x71]
   140018ea6:	je     0x14001bbc7
   140018eac:	mov    rcx,rbx
   140018eaf:	call   0x14002af10
   140018eb4:	xor    ebx,ebx
   140018eb6:	mov    WORD PTR [rip+0x25027],bx        # 0x14003dee4
   140018ebd:	movzx  ecx,WORD PTR [rip+0x272ec]        # 0x1400401b0
   140018ec4:	mov    WORD PTR [rbp-0x7f],cx
   140018ec8:	mov    r11,QWORD PTR [rbp-0x61]
   140018ecc:	movzx  r14d,WORD PTR [rsp+0x30]
   140018ed2:	movzx  r15d,WORD PTR [rsp+0x34]
   140018ed8:	cmp    cx,WORD PTR [r11+0x80]
   140018ee0:	jge    0x14001b040
   140018ee6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018ef0:	mov    eax,0x1
   140018ef5:	mov    WORD PTR [rip+0x272b8],ax        # 0x1400401b4
   140018efc:	mov    WORD PTR [rip+0x272d5],bx        # 0x1400401d8
   140018f03:	movzx  eax,bx
   140018f06:	mov    DWORD PTR [rbp-0x79],eax
   140018f09:	mov    WORD PTR [rbp-0x7d],bx
   140018f0d:	mov    WORD PTR [rip+0x25204],cx        # 0x14003e118
   140018f14:	movsx  edx,cx
   140018f17:	movzx  eax,WORD PTR [r11+0x82]
   140018f1f:	imul   edx,eax
   140018f22:	add    edx,DWORD PTR [r11+0x28]
   140018f26:	xor    r8d,r8d
   140018f29:	mov    rcx,QWORD PTR [rip+0x27298]        # 0x1400401c8
   140018f30:	call   0x14002ad10
   140018f35:	cmp    eax,0xffffffff
   140018f38:	je     0x14001bbc7
   140018f3e:	mov    rcx,QWORD PTR [rbp-0x61]
   140018f42:	movzx  r8d,WORD PTR [rcx+0x82]
   140018f4a:	mov    rcx,QWORD PTR [rip+0x27277]        # 0x1400401c8
   140018f51:	mov    QWORD PTR [rsp+0x20],rbx
   140018f56:	lea    r9,[rbp-0x29]
   140018f5a:	mov    rdx,QWORD PTR [rip+0x2c9bf]        # 0x140045920
   140018f61:	mov    rcx,QWORD PTR [rcx]
   140018f64:	call   QWORD PTR [rip+0x1629e]        # 0x14002f208
   140018f6a:	test   eax,eax
   140018f6c:	jne    0x140018fa7
   140018f6e:	call   QWORD PTR [rip+0x161ec]        # 0x14002f160
   140018f74:	cmp    eax,0x58
   140018f77:	jae    0x140018f8b
   140018f79:	mov    eax,eax
   140018f7b:	lea    rcx,[rip+0xfffffffffffe707e]        # 0x140000000
   140018f82:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140018f89:	jmp    0x140018f90
   140018f8b:	mov    ecx,0x106
   140018f90:	mov    DWORD PTR [rip+0x2a122],ecx        # 0x1400430b8
   140018f96:	mov    DWORD PTR [rip+0x2a528],0x2        # 0x1400434c8
   140018fa0:	mov    BYTE PTR [rip+0x2a419],0x0        # 0x1400433c0
   140018fa7:	mov    r11,QWORD PTR [rbp-0x61]
   140018fab:	movzx  eax,WORD PTR [r11+0x82]
   140018fb3:	cmp    DWORD PTR [rbp-0x29],eax
   140018fb6:	jne    0x14001bbc7
   140018fbc:	movzx  r12d,WORD PTR [rip+0x27214]        # 0x1400401d8
   140018fc4:	add    eax,eax
   140018fc6:	mov    DWORD PTR [rbp-0x65],eax
   140018fc9:	movzx  edi,WORD PTR [rip+0x271e4]        # 0x1400401b4
   140018fd0:	cmp    di,ax
   140018fd3:	jge    0x14001afd6
   140018fd9:	mov    rbx,QWORD PTR [rip+0x2c940]        # 0x140045920
   140018fe0:	mov    r9,QWORD PTR [rip+0x25129]        # 0x14003e110
   140018fe7:	nop    WORD PTR [rax+rax*1+0x0]
   140018ff0:	movzx  eax,di
   140018ff3:	sar    ax,1
   140018ff6:	movsx  ecx,di
   140018ff9:	and    ecx,0x80000001
   140018fff:	jge    0x140019008
   140019001:	dec    ecx
   140019003:	or     ecx,0xfffffffe
   140019006:	inc    ecx
   140019008:	movsx  rax,ax
   14001900c:	lea    r8,[rax+rbx*1]
   140019010:	movzx  edx,BYTE PTR [r8]
   140019014:	movzx  eax,dl
   140019017:	test   ecx,ecx
   140019019:	jne    0x140019020
   14001901b:	shr    al,0x4
   14001901e:	jmp    0x140019022
   140019020:	and    al,0xf
   140019022:	mov    r10d,DWORD PTR [rbp-0x79]
   140019026:	cmp    al,0xd
   140019028:	jae    0x14001af1c
   14001902e:	test   r10w,r10w
   140019032:	jne    0x14001af26
   140019038:	test   al,al
   14001903a:	jne    0x14001aefd
   140019040:	movsx  rax,r12w
   140019044:	cmp    rax,0x100
   14001904a:	jae    0x14001b023
   140019050:	lea    rcx,[rip+0x2d1f9]        # 0x140046250
   140019057:	mov    BYTE PTR [rax+rcx*1],r10b
   14001905b:	mov    WORD PTR [rip+0x26fa5],r12w        # 0x140040008
   140019063:	lea    r9,[rbp-0x7d]
   140019067:	movzx  r8d,di
   14001906b:	mov    rdx,QWORD PTR [rip+0x2508e]        # 0x14003e100
   140019072:	mov    rcx,r11
   140019075:	call   0x140006f70
   14001907a:	lea    edi,[rax+0x1]
   14001907d:	mov    WORD PTR [rsp+0x38],di
   140019082:	movzx  ecx,di
   140019085:	sar    cx,1
   140019088:	movsx  eax,di
   14001908b:	and    eax,0x80000001
   140019090:	jge    0x140019099
   140019092:	dec    eax
   140019094:	or     eax,0xfffffffe
   140019097:	inc    eax
   140019099:	test   eax,eax
   14001909b:	movsx  rax,cx
   14001909f:	movzx  ecx,BYTE PTR [rax+rbx*1]
   1400190a3:	jne    0x1400190aa
   1400190a5:	shr    cl,0x4
   1400190a8:	jmp    0x1400190ad
   1400190aa:	and    cl,0xf
   1400190ad:	movzx  r12d,cl
   1400190b1:	lea    eax,[rdi+0x1]
   1400190b4:	mov    WORD PTR [rip+0x270f9],ax        # 0x1400401b4
   1400190bb:	mov    WORD PTR [rip+0x27115],r12w        # 0x1400401d8
   1400190c3:	movzx  eax,WORD PTR [rbp-0x7d]
   1400190c7:	mov    WORD PTR [rip+0x270ea],ax        # 0x1400401b8
   1400190ce:	mov    rcx,QWORD PTR [rbp-0x61]
   1400190d2:	call   0x140006e60
   1400190d7:	cmp    ax,0x1
   1400190db:	jne    0x14001bbc7
   1400190e1:	lea    r8,[rip+0x2d368]        # 0x140046450
   1400190e8:	lea    rdx,[rip+0x2d161]        # 0x140046250
   1400190ef:	call   0x1400073e0
   1400190f4:	mov    edi,0x1
   1400190f9:	nop    DWORD PTR [rax+0x0]
   140019100:	test   si,si
   140019103:	je     0x14001928e
   140019109:	mov    rbx,QWORD PTR [rbp-0x21]
   14001910d:	mov    r8,rbx
   140019110:	movzx  edx,WORD PTR [rip+0x288cd]        # 0x1400419e4
   140019117:	mov    rcx,r13
   14001911a:	call   0x14002a640
   14001911f:	test   ax,ax
   140019122:	jle    0x14001a601
   140019128:	mov    rcx,rbx
   14001912b:	call   0x14001bd30
   140019130:	test   ax,ax
   140019133:	je     0x140019187
   140019135:	movzx  r8d,WORD PTR [rip+0x25d1f]        # 0x14003ee5c
   14001913d:	mov    WORD PTR [rip+0x2505f],r8w        # 0x14003e1a4
   140019145:	movzx  ecx,WORD PTR [rip+0x25d14]        # 0x14003ee60
   14001914c:	imul   ecx,r8d
   140019150:	mov    eax,0x51eb851f
   140019155:	imul   ecx
   140019157:	mov    ecx,edx
   140019159:	sar    ecx,0x5
   14001915c:	mov    eax,ecx
   14001915e:	shr    eax,0x1f
   140019161:	add    ecx,eax
   140019163:	add    cx,WORD PTR [rip+0x25cde]        # 0x14003ee48
   14001916a:	mov    WORD PTR [rip+0x25cdf],cx        # 0x14003ee50
   140019171:	lea    rdx,[rip+0x25038]        # 0x14003e1b0
   140019178:	call   QWORD PTR [rip+0x2892a]        # 0x140041aa8
   14001917e:	test   ax,ax
   140019181:	jne    0x14001aff0
   140019187:	mov    rax,QWORD PTR [rbp-0x71]
   14001918b:	mov    ecx,0x20
   140019190:	mov    DWORD PTR [rax],ecx
   140019192:	xor    edi,edi
   140019194:	mov    r9,QWORD PTR [rbp-0x31]
   140019198:	mov    QWORD PTR [rbp-0x71],r9
   14001919c:	mov    rax,r13
   14001919f:	mov    rdx,r9
   1400191a2:	movzx  ecx,BYTE PTR [r13+0x1]
   1400191a7:	or     cl,BYTE PTR [r13+0x0]
   1400191ab:	je     0x140018d4a
   1400191b1:	movzx  r8d,WORD PTR [r9]
   1400191b5:	cmp    WORD PTR [rax],r8w
   1400191b9:	jne    0x1400191db
   1400191bb:	mov    rbx,rax
   1400191be:	xchg   ax,ax
   1400191c0:	lea    rdx,[rdx+0x2]
   1400191c4:	movzx  ecx,WORD PTR [rdx]
   1400191c7:	test   cx,cx
   1400191ca:	je     0x1400191ed
   1400191cc:	add    rax,0x2
   1400191d0:	cmp    WORD PTR [rax],cx
   1400191d3:	je     0x1400191c0
   1400191d5:	mov    rax,rbx
   1400191d8:	mov    rdx,r9
   1400191db:	add    rax,0x2
   1400191df:	movzx  ecx,BYTE PTR [rax+0x1]
   1400191e3:	or     cl,BYTE PTR [rax]
   1400191e5:	je     0x140018d4a
   1400191eb:	jmp    0x1400191b5
   1400191ed:	test   rbx,rbx
   1400191f0:	je     0x140018d4a
   1400191f6:	movzx  ecx,di
   1400191f9:	mov    r8,rbx
   1400191fc:	sub    r8,r13
   1400191ff:	lea    r9,[rip+0x2c84a]        # 0x140045a50
   140019206:	test   r8,r8
   140019209:	jle    0x140019225
   14001920b:	mov    rdx,rdi
   14001920e:	xchg   ax,ax
   140019210:	movzx  eax,BYTE PTR [rdx+r13*1]
   140019215:	mov    BYTE PTR [rdx+r9*1],al
   140019219:	inc    cx
   14001921c:	movsx  rdx,cx
   140019220:	cmp    rdx,r8
   140019223:	jl     0x140019210
   140019225:	movsx  rax,cx
   140019229:	cmp    rax,0x800
   14001922f:	jae    0x14001b01d
   140019235:	mov    BYTE PTR [rax+r9*1],dil
   140019239:	lea    eax,[rcx+0x1]
   14001923c:	movsx  rax,ax
   140019240:	cmp    rax,0x800
   140019246:	jae    0x14001b017
   14001924c:	mov    BYTE PTR [rax+r9*1],dil
   140019250:	lea    rdx,[rsp+0x30]
   140019255:	mov    rcx,rbx
   140019258:	call   0x14002a440
   14001925d:	test   ax,ax
   140019260:	je     0x14001affa
   140019266:	movsx  rcx,ax
   14001926a:	add    rcx,rbx
   14001926d:	lea    rdx,[rsp+0x34]
   140019272:	call   0x14002a440
   140019277:	test   ax,ax
   14001927a:	je     0x140018d4a
   140019280:	mov    esi,edi
   140019282:	movzx  r14d,WORD PTR [rsp+0x30]
   140019288:	movzx  r15d,WORD PTR [rsp+0x34]
   14001928e:	lea    rbx,[rip+0x2c7bb]        # 0x140045a50
   140019295:	mov    rdx,rbx
   140019298:	lea    rcx,[rip+0x2d1b1]        # 0x140046450
   14001929f:	call   0x140007550
   1400192a4:	test   ax,ax
   1400192a7:	js     0x14001a604
   1400192ad:	mov    WORD PTR [rip+0x27045],r14w        # 0x1400402fa
   1400192b5:	mov    ecx,0x3fff
   1400192ba:	mov    DWORD PTR [rip+0x2703c],ecx        # 0x1400402fc
   1400192c0:	xor    esi,esi
   1400192c2:	mov    WORD PTR [rip+0x27036],r15w        # 0x140040300
   1400192ca:	mov    WORD PTR [rip+0x27031],si        # 0x140040302
   1400192d1:	test   ax,ax
   1400192d4:	jle    0x140019bc1
   1400192da:	mov    eax,0x1
   1400192df:	mov    WORD PTR [rip+0x24bfe],ax        # 0x14003dee4
   1400192e6:	mov    rcx,rbx
   1400192e9:	lea    rbx,[rip+0x2d060]        # 0x140046350
   1400192f0:	mov    rdx,rbx
   1400192f3:	movzx  eax,BYTE PTR [rcx]
   1400192f6:	test   al,al
   1400192f8:	jne    0x140019300
   1400192fa:	cmp    BYTE PTR [rcx+0x1],sil
   1400192fe:	je     0x140019313
   140019300:	mov    BYTE PTR [rdx],al
   140019302:	movzx  eax,BYTE PTR [rcx+0x1]
   140019306:	mov    BYTE PTR [rdx+0x1],al
   140019309:	add    rdx,0x2
   14001930d:	add    rcx,0x2
   140019311:	jmp    0x1400192f3
   140019313:	movzx  eax,BYTE PTR [rcx]
   140019316:	mov    BYTE PTR [rdx],al
   140019318:	movzx  eax,BYTE PTR [rcx+0x1]
   14001931c:	mov    BYTE PTR [rdx+0x1],al
   14001931f:	lea    rdx,[rip+0x23002]        # 0x14003c328
   140019326:	mov    rcx,rbx
   140019329:	nop    DWORD PTR [rax+0x0]
   140019330:	cmp    BYTE PTR [rcx],sil
   140019333:	jne    0x14001933b
   140019335:	cmp    BYTE PTR [rcx+0x1],sil
   140019339:	je     0x140019341
   14001933b:	add    rcx,0x2
   14001933f:	jmp    0x140019330
   140019341:	movzx  eax,BYTE PTR [rdx]
   140019344:	test   al,al
   140019346:	jne    0x14001934e
   140019348:	cmp    BYTE PTR [rdx+0x1],sil
   14001934c:	je     0x140019361
   14001934e:	mov    BYTE PTR [rcx],al
   140019350:	movzx  eax,BYTE PTR [rdx+0x1]
   140019354:	mov    BYTE PTR [rcx+0x1],al
   140019357:	add    rcx,0x2
   14001935b:	add    rdx,0x2
   14001935f:	jmp    0x140019341
   140019361:	mov    WORD PTR [rcx],si
   140019364:	movzx  edx,r14w
   140019368:	movzx  r8d,si
   14001936c:	lea    r11,[rip+0x2c68d]        # 0x140045a00
   140019373:	nop    DWORD PTR [rax+0x0]
   140019377:	nop    WORD PTR [rax+rax*1+0x0]
   140019380:	movzx  ecx,dx
   140019383:	mov    eax,0x66666667
   140019388:	imul   ecx
   14001938a:	sar    edx,0x2
   14001938d:	mov    eax,edx
   14001938f:	shr    eax,0x1f
   140019392:	add    edx,eax
   140019394:	lea    eax,[rdx+rdx*4]
   140019397:	add    eax,eax
   140019399:	sub    ecx,eax
   14001939b:	add    cl,0x30
   14001939e:	movsx  rax,r8w
   1400193a2:	mov    BYTE PTR [rax+r11*1],cl
   1400193a6:	inc    r8w
   1400193aa:	test   dx,dx
   1400193ad:	jne    0x140019380
   1400193af:	movsx  rax,r8w
   1400193b3:	mov    BYTE PTR [rax+r11*1],sil
   1400193b7:	movzx  r10d,si
   1400193bb:	mov    r9d,esi
   1400193be:	mov    rcx,r11
   1400193c1:	movzx  eax,BYTE PTR [rip+0x2c638]        # 0x140045a00
   1400193c8:	test   al,al
   1400193ca:	je     0x1400193db
   1400193cc:	nop    DWORD PTR [rax+0x0]
   1400193d0:	inc    rcx
   1400193d3:	inc    r9d
   1400193d6:	cmp    BYTE PTR [rcx],sil
   1400193d9:	jne    0x1400193d0
   1400193db:	dec    r9w
   1400193df:	cmp    si,r9w
   1400193e3:	jge    0x140019420
   1400193e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400193f0:	movsx  rdx,r10w
   1400193f4:	movzx  r8d,BYTE PTR [rdx+r11*1]
   1400193f9:	movsx  rax,r9w
   1400193fd:	lea    rcx,[rax+r11*1]
   140019401:	movzx  eax,BYTE PTR [rcx]
   140019404:	mov    BYTE PTR [rdx+r11*1],al
   140019408:	mov    BYTE PTR [rcx],r8b
   14001940b:	inc    r10w
   14001940f:	dec    r9w
   140019413:	cmp    r10w,r9w
   140019417:	jl     0x1400193f0
   140019419:	movzx  eax,BYTE PTR [rip+0x2c5e0]        # 0x140045a00
   140019420:	lea    rdi,[rip+0x2c5f9]        # 0x140045a20
   140019427:	mov    rdx,rdi
   14001942a:	mov    r8,r11
   14001942d:	test   al,al
   14001942f:	je     0x14001947d
   140019431:	mov    ebx,0x20
   140019436:	lea    r11,[rip+0xfffffffffffe6bc3]        # 0x140000000
   14001943d:	nop    DWORD PTR [rax]
   140019440:	cmp    al,0x7f
   140019442:	ja     0x140019449
   140019444:	movzx  ecx,al
   140019447:	jmp    0x14001945d
   140019449:	cmp    al,0xfe
   14001944b:	ja     0x14001945b
   14001944d:	movzx  eax,al
   140019450:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   140019459:	jmp    0x14001945d
   14001945b:	mov    ecx,ebx
   14001945d:	mov    WORD PTR [rdx],cx
   140019460:	add    rdx,0x2
   140019464:	inc    r8
   140019467:	movzx  eax,BYTE PTR [r8]
   14001946b:	test   al,al
   14001946d:	jne    0x140019440
   14001946f:	lea    r11,[rip+0x2c58a]        # 0x140045a00
   140019476:	lea    rbx,[rip+0x2ced3]        # 0x140046350
   14001947d:	mov    WORD PTR [rdx],si
   140019480:	mov    rdx,rdi
   140019483:	mov    rcx,rbx
   140019486:	cmp    BYTE PTR [rcx],sil
   140019489:	jne    0x140019491
   14001948b:	cmp    BYTE PTR [rcx+0x1],sil
   14001948f:	je     0x140019497
   140019491:	add    rcx,0x2
   140019495:	jmp    0x140019486
   140019497:	movzx  eax,BYTE PTR [rdx]
   14001949a:	test   al,al
   14001949c:	jne    0x1400194a4
   14001949e:	cmp    BYTE PTR [rdx+0x1],sil
   1400194a2:	je     0x1400194b7
   1400194a4:	mov    BYTE PTR [rcx],al
   1400194a6:	movzx  eax,BYTE PTR [rdx+0x1]
   1400194aa:	mov    BYTE PTR [rcx+0x1],al
   1400194ad:	add    rcx,0x2
   1400194b1:	add    rdx,0x2
   1400194b5:	jmp    0x140019497
   1400194b7:	mov    WORD PTR [rcx],si
   1400194ba:	lea    rdx,[rip+0x22e67]        # 0x14003c328
   1400194c1:	mov    rcx,rbx
   1400194c4:	cmp    BYTE PTR [rcx],sil
   1400194c7:	jne    0x1400194cf
   1400194c9:	cmp    BYTE PTR [rcx+0x1],sil
   1400194cd:	je     0x1400194d5
   1400194cf:	add    rcx,0x2
   1400194d3:	jmp    0x1400194c4
   1400194d5:	movzx  eax,BYTE PTR [rdx]
   1400194d8:	test   al,al
   1400194da:	jne    0x1400194e2
   1400194dc:	cmp    BYTE PTR [rdx+0x1],sil
   1400194e0:	je     0x1400194f5
   1400194e2:	mov    BYTE PTR [rcx],al
   1400194e4:	movzx  eax,BYTE PTR [rdx+0x1]
   1400194e8:	mov    BYTE PTR [rcx+0x1],al
   1400194eb:	add    rcx,0x2
   1400194ef:	add    rdx,0x2
   1400194f3:	jmp    0x1400194d5
   1400194f5:	mov    WORD PTR [rcx],si
   1400194f8:	mov    edx,0x3fff
   1400194fd:	movzx  r8d,si
   140019501:	movzx  ecx,dx
   140019504:	mov    eax,0x66666667
   140019509:	imul   ecx
   14001950b:	sar    edx,0x2
   14001950e:	mov    eax,edx
   140019510:	shr    eax,0x1f
   140019513:	add    edx,eax
   140019515:	lea    eax,[rdx+rdx*4]
   140019518:	add    eax,eax
   14001951a:	sub    ecx,eax
   14001951c:	add    cl,0x30
   14001951f:	movsx  rax,r8w
   140019523:	mov    BYTE PTR [rax+r11*1],cl
   140019527:	inc    r8w
   14001952b:	test   dx,dx
   14001952e:	jne    0x140019501
   140019530:	movsx  rax,r8w
   140019534:	mov    BYTE PTR [rax+r11*1],sil
   140019538:	movzx  r10d,si
   14001953c:	mov    r9d,esi
   14001953f:	mov    rcx,r11
   140019542:	movzx  eax,BYTE PTR [rip+0x2c4b7]        # 0x140045a00
   140019549:	test   al,al
   14001954b:	je     0x14001955b
   14001954d:	nop    DWORD PTR [rax]
   140019550:	inc    rcx
   140019553:	inc    r9d
   140019556:	cmp    BYTE PTR [rcx],sil
   140019559:	jne    0x140019550
   14001955b:	dec    r9w
   14001955f:	cmp    si,r9w
   140019563:	jge    0x1400195a0
   140019565:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019570:	movsx  rdx,r10w
   140019574:	movzx  r8d,BYTE PTR [rdx+r11*1]
   140019579:	movsx  rax,r9w
   14001957d:	lea    rcx,[rax+r11*1]
   140019581:	movzx  eax,BYTE PTR [rcx]
   140019584:	mov    BYTE PTR [rdx+r11*1],al
   140019588:	mov    BYTE PTR [rcx],r8b
   14001958b:	inc    r10w
   14001958f:	dec    r9w
   140019593:	cmp    r10w,r9w
   140019597:	jl     0x140019570
   140019599:	movzx  eax,BYTE PTR [rip+0x2c460]        # 0x140045a00
   1400195a0:	mov    rdx,rdi
   1400195a3:	mov    r8,r11
   1400195a6:	test   al,al
   1400195a8:	je     0x1400195f3
   1400195aa:	mov    ebx,0x20
   1400195af:	lea    r11,[rip+0xfffffffffffe6a4a]        # 0x140000000
   1400195b6:	cmp    al,0x7f
   1400195b8:	ja     0x1400195bf
   1400195ba:	movzx  ecx,al
   1400195bd:	jmp    0x1400195d3
   1400195bf:	cmp    al,0xfe
   1400195c1:	ja     0x1400195d1
   1400195c3:	movzx  eax,al
   1400195c6:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   1400195cf:	jmp    0x1400195d3
   1400195d1:	mov    ecx,ebx
   1400195d3:	mov    WORD PTR [rdx],cx
   1400195d6:	add    rdx,0x2
   1400195da:	inc    r8
   1400195dd:	movzx  eax,BYTE PTR [r8]
   1400195e1:	test   al,al
   1400195e3:	jne    0x1400195b6
   1400195e5:	lea    r11,[rip+0x2c414]        # 0x140045a00
   1400195ec:	lea    rbx,[rip+0x2cd5d]        # 0x140046350
   1400195f3:	mov    WORD PTR [rdx],si
   1400195f6:	mov    rdx,rdi
   1400195f9:	mov    rcx,rbx
   1400195fc:	nop    DWORD PTR [rax+0x0]
   140019600:	cmp    BYTE PTR [rcx],sil
   140019603:	jne    0x14001960b
   140019605:	cmp    BYTE PTR [rcx+0x1],sil
   140019609:	je     0x140019611
   14001960b:	add    rcx,0x2
   14001960f:	jmp    0x140019600
   140019611:	movzx  eax,BYTE PTR [rdx]
   140019614:	test   al,al
   140019616:	jne    0x14001961e
   140019618:	cmp    BYTE PTR [rdx+0x1],sil
   14001961c:	je     0x140019631
   14001961e:	mov    BYTE PTR [rcx],al
   140019620:	movzx  eax,BYTE PTR [rdx+0x1]
   140019624:	mov    BYTE PTR [rcx+0x1],al
   140019627:	add    rcx,0x2
   14001962b:	add    rdx,0x2
   14001962f:	jmp    0x140019611
   140019631:	mov    WORD PTR [rcx],si
   140019634:	lea    rdx,[rip+0x22ced]        # 0x14003c328
   14001963b:	mov    rcx,rbx
   14001963e:	xchg   ax,ax
   140019640:	cmp    BYTE PTR [rcx],sil
   140019643:	jne    0x14001964b
   140019645:	cmp    BYTE PTR [rcx+0x1],sil
   140019649:	je     0x140019651
   14001964b:	add    rcx,0x2
   14001964f:	jmp    0x140019640
   140019651:	movzx  eax,BYTE PTR [rdx]
   140019654:	test   al,al
   140019656:	jne    0x14001965e
   140019658:	cmp    BYTE PTR [rdx+0x1],sil
   14001965c:	je     0x140019671
   14001965e:	mov    BYTE PTR [rcx],al
   140019660:	movzx  eax,BYTE PTR [rdx+0x1]
   140019664:	mov    BYTE PTR [rcx+0x1],al
   140019667:	add    rcx,0x2
   14001966b:	add    rdx,0x2
   14001966f:	jmp    0x140019651
   140019671:	mov    WORD PTR [rcx],si
   140019674:	movzx  edx,si
   140019677:	movzx  r8d,si
   14001967b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019680:	movzx  ecx,dx
   140019683:	mov    eax,0x66666667
   140019688:	imul   ecx
   14001968a:	sar    edx,0x2
   14001968d:	mov    eax,edx
   14001968f:	shr    eax,0x1f
   140019692:	add    edx,eax
   140019694:	lea    eax,[rdx+rdx*4]
   140019697:	add    eax,eax
   140019699:	sub    ecx,eax
   14001969b:	add    cl,0x30
   14001969e:	movsx  rax,r8w
   1400196a2:	mov    BYTE PTR [rax+r11*1],cl
   1400196a6:	inc    r8w
   1400196aa:	test   dx,dx
   1400196ad:	jne    0x140019680
   1400196af:	movsx  rax,r8w
   1400196b3:	mov    BYTE PTR [rax+r11*1],sil
   1400196b7:	movzx  r10d,si
   1400196bb:	mov    r9d,esi
   1400196be:	mov    rcx,r11
   1400196c1:	movzx  eax,BYTE PTR [rip+0x2c338]        # 0x140045a00
   1400196c8:	test   al,al
   1400196ca:	je     0x1400196db
   1400196cc:	nop    DWORD PTR [rax+0x0]
   1400196d0:	inc    rcx
   1400196d3:	inc    r9d
   1400196d6:	cmp    BYTE PTR [rcx],sil
   1400196d9:	jne    0x1400196d0
   1400196db:	dec    r9w
   1400196df:	cmp    si,r9w
   1400196e3:	jge    0x140019720
   1400196e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400196f0:	movsx  rdx,r10w
   1400196f4:	movzx  r8d,BYTE PTR [rdx+r11*1]
   1400196f9:	movsx  rax,r9w
   1400196fd:	lea    rcx,[rax+r11*1]
   140019701:	movzx  eax,BYTE PTR [rcx]
   140019704:	mov    BYTE PTR [rdx+r11*1],al
   140019708:	mov    BYTE PTR [rcx],r8b
   14001970b:	inc    r10w
   14001970f:	dec    r9w
   140019713:	cmp    r10w,r9w
   140019717:	jl     0x1400196f0
   140019719:	movzx  eax,BYTE PTR [rip+0x2c2e0]        # 0x140045a00
   140019720:	mov    rdx,rdi
   140019723:	mov    r8,r11
   140019726:	test   al,al
   140019728:	je     0x140019773
   14001972a:	mov    ebx,0x20
   14001972f:	lea    r11,[rip+0xfffffffffffe68ca]        # 0x140000000
   140019736:	cmp    al,0x7f
   140019738:	ja     0x14001973f
   14001973a:	movzx  ecx,al
   14001973d:	jmp    0x140019753
   14001973f:	cmp    al,0xfe
   140019741:	ja     0x140019751
   140019743:	movzx  eax,al
   140019746:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001974f:	jmp    0x140019753
   140019751:	mov    ecx,ebx
   140019753:	mov    WORD PTR [rdx],cx
   140019756:	add    rdx,0x2
   14001975a:	inc    r8
   14001975d:	movzx  eax,BYTE PTR [r8]
   140019761:	test   al,al
   140019763:	jne    0x140019736
   140019765:	lea    r11,[rip+0x2c294]        # 0x140045a00
   14001976c:	lea    rbx,[rip+0x2cbdd]        # 0x140046350
   140019773:	mov    WORD PTR [rdx],si
   140019776:	mov    rdx,rdi
   140019779:	mov    rcx,rbx
   14001977c:	nop    DWORD PTR [rax+0x0]
   140019780:	cmp    BYTE PTR [rcx],sil
   140019783:	jne    0x14001978b
   140019785:	cmp    BYTE PTR [rcx+0x1],sil
   140019789:	je     0x140019791
   14001978b:	add    rcx,0x2
   14001978f:	jmp    0x140019780
   140019791:	movzx  eax,BYTE PTR [rdx]
   140019794:	test   al,al
   140019796:	jne    0x14001979e
   140019798:	cmp    BYTE PTR [rdx+0x1],sil
   14001979c:	je     0x1400197b1
   14001979e:	mov    BYTE PTR [rcx],al
   1400197a0:	movzx  eax,BYTE PTR [rdx+0x1]
   1400197a4:	mov    BYTE PTR [rcx+0x1],al
   1400197a7:	add    rcx,0x2
   1400197ab:	add    rdx,0x2
   1400197af:	jmp    0x140019791
   1400197b1:	mov    WORD PTR [rcx],si
   1400197b4:	lea    rdx,[rip+0x22b6d]        # 0x14003c328
   1400197bb:	mov    rcx,rbx
   1400197be:	xchg   ax,ax
   1400197c0:	cmp    BYTE PTR [rcx],sil
   1400197c3:	jne    0x1400197cb
   1400197c5:	cmp    BYTE PTR [rcx+0x1],sil
   1400197c9:	je     0x1400197d1
   1400197cb:	add    rcx,0x2
   1400197cf:	jmp    0x1400197c0
   1400197d1:	movzx  eax,BYTE PTR [rdx]
   1400197d4:	test   al,al
   1400197d6:	jne    0x1400197de
   1400197d8:	cmp    BYTE PTR [rdx+0x1],sil
   1400197dc:	je     0x1400197f1
   1400197de:	mov    BYTE PTR [rcx],al
   1400197e0:	movzx  eax,BYTE PTR [rdx+0x1]
   1400197e4:	mov    BYTE PTR [rcx+0x1],al
   1400197e7:	add    rcx,0x2
   1400197eb:	add    rdx,0x2
   1400197ef:	jmp    0x1400197d1
   1400197f1:	mov    WORD PTR [rcx],si
   1400197f4:	movzx  edx,r15w
   1400197f8:	movzx  r8d,si
   1400197fc:	nop    DWORD PTR [rax+0x0]
   140019800:	movzx  ecx,dx
   140019803:	mov    eax,0x66666667
   140019808:	imul   ecx
   14001980a:	sar    edx,0x2
   14001980d:	mov    eax,edx
   14001980f:	shr    eax,0x1f
   140019812:	add    edx,eax
   140019814:	lea    eax,[rdx+rdx*4]
   140019817:	add    eax,eax
   140019819:	sub    ecx,eax
   14001981b:	add    cl,0x30
   14001981e:	movsx  rax,r8w
   140019822:	mov    BYTE PTR [rax+r11*1],cl
   140019826:	inc    r8w
   14001982a:	test   dx,dx
   14001982d:	jne    0x140019800
   14001982f:	movsx  rax,r8w
   140019833:	mov    BYTE PTR [rax+r11*1],sil
   140019837:	movzx  r10d,si
   14001983b:	mov    r9d,esi
   14001983e:	mov    rcx,r11
   140019841:	movzx  eax,BYTE PTR [rip+0x2c1b8]        # 0x140045a00
   140019848:	test   al,al
   14001984a:	je     0x14001985b
   14001984c:	nop    DWORD PTR [rax+0x0]
   140019850:	inc    rcx
   140019853:	inc    r9d
   140019856:	cmp    BYTE PTR [rcx],sil
   140019859:	jne    0x140019850
   14001985b:	dec    r9w
   14001985f:	cmp    si,r9w
   140019863:	jge    0x1400198a0
   140019865:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019870:	movsx  rdx,r10w
   140019874:	movzx  r8d,BYTE PTR [rdx+r11*1]
   140019879:	movsx  rax,r9w
   14001987d:	lea    rcx,[rax+r11*1]
   140019881:	movzx  eax,BYTE PTR [rcx]
   140019884:	mov    BYTE PTR [rdx+r11*1],al
   140019888:	mov    BYTE PTR [rcx],r8b
   14001988b:	inc    r10w
   14001988f:	dec    r9w
   140019893:	cmp    r10w,r9w
   140019897:	jl     0x140019870
   140019899:	movzx  eax,BYTE PTR [rip+0x2c160]        # 0x140045a00
   1400198a0:	mov    rdx,rdi
   1400198a3:	mov    r8,r11
   1400198a6:	test   al,al
   1400198a8:	je     0x1400198f3
   1400198aa:	mov    ebx,0x20
   1400198af:	lea    r11,[rip+0xfffffffffffe674a]        # 0x140000000
   1400198b6:	cmp    al,0x7f
   1400198b8:	ja     0x1400198bf
   1400198ba:	movzx  ecx,al
   1400198bd:	jmp    0x1400198d3
   1400198bf:	cmp    al,0xfe
   1400198c1:	ja     0x1400198d1
   1400198c3:	movzx  eax,al
   1400198c6:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   1400198cf:	jmp    0x1400198d3
   1400198d1:	mov    ecx,ebx
   1400198d3:	mov    WORD PTR [rdx],cx
   1400198d6:	add    rdx,0x2
   1400198da:	inc    r8
   1400198dd:	movzx  eax,BYTE PTR [r8]
   1400198e1:	test   al,al
   1400198e3:	jne    0x1400198b6
   1400198e5:	lea    r11,[rip+0x2c114]        # 0x140045a00
   1400198ec:	lea    rbx,[rip+0x2ca5d]        # 0x140046350
   1400198f3:	mov    WORD PTR [rdx],si
   1400198f6:	mov    rdx,rdi
   1400198f9:	mov    rcx,rbx
   1400198fc:	nop    DWORD PTR [rax+0x0]
   140019900:	cmp    BYTE PTR [rcx],sil
   140019903:	jne    0x14001990b
   140019905:	cmp    BYTE PTR [rcx+0x1],sil
   140019909:	je     0x140019911
   14001990b:	add    rcx,0x2
   14001990f:	jmp    0x140019900
   140019911:	movzx  eax,BYTE PTR [rdx]
   140019914:	test   al,al
   140019916:	jne    0x14001991e
   140019918:	cmp    BYTE PTR [rdx+0x1],sil
   14001991c:	je     0x140019931
   14001991e:	mov    BYTE PTR [rcx],al
   140019920:	movzx  eax,BYTE PTR [rdx+0x1]
   140019924:	mov    BYTE PTR [rcx+0x1],al
   140019927:	add    rcx,0x2
   14001992b:	add    rdx,0x2
   14001992f:	jmp    0x140019911
   140019931:	mov    WORD PTR [rcx],si
   140019934:	lea    rdx,[rip+0x229ed]        # 0x14003c328
   14001993b:	mov    rcx,rbx
   14001993e:	xchg   ax,ax
   140019940:	cmp    BYTE PTR [rcx],sil
   140019943:	jne    0x14001994b
   140019945:	cmp    BYTE PTR [rcx+0x1],sil
   140019949:	je     0x140019951
   14001994b:	add    rcx,0x2
   14001994f:	jmp    0x140019940
   140019951:	movzx  eax,BYTE PTR [rdx]
   140019954:	test   al,al
   140019956:	jne    0x14001995e
   140019958:	cmp    BYTE PTR [rdx+0x1],sil
   14001995c:	je     0x140019971
   14001995e:	mov    BYTE PTR [rcx],al
   140019960:	movzx  eax,BYTE PTR [rdx+0x1]
   140019964:	mov    BYTE PTR [rcx+0x1],al
   140019967:	add    rcx,0x2
   14001996b:	add    rdx,0x2
   14001996f:	jmp    0x140019951
   140019971:	mov    WORD PTR [rcx],si
   140019974:	movzx  edx,si
   140019977:	movzx  r8d,si
   14001997b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019980:	movzx  ecx,dx
   140019983:	mov    eax,0x66666667
   140019988:	imul   ecx
   14001998a:	sar    edx,0x2
   14001998d:	mov    eax,edx
   14001998f:	shr    eax,0x1f
   140019992:	add    edx,eax
   140019994:	lea    eax,[rdx+rdx*4]
   140019997:	add    eax,eax
   140019999:	sub    ecx,eax
   14001999b:	add    cl,0x30
   14001999e:	movsx  rax,r8w
   1400199a2:	mov    BYTE PTR [rax+r11*1],cl
   1400199a6:	inc    r8w
   1400199aa:	test   dx,dx
   1400199ad:	jne    0x140019980
   1400199af:	movsx  rax,r8w
   1400199b3:	mov    BYTE PTR [rax+r11*1],sil
   1400199b7:	movzx  r10d,si
   1400199bb:	mov    r9d,esi
   1400199be:	mov    rcx,r11
   1400199c1:	movzx  eax,BYTE PTR [rip+0x2c038]        # 0x140045a00
   1400199c8:	test   al,al
   1400199ca:	je     0x1400199db
   1400199cc:	nop    DWORD PTR [rax+0x0]
   1400199d0:	inc    rcx
   1400199d3:	inc    r9d
   1400199d6:	cmp    BYTE PTR [rcx],sil
   1400199d9:	jne    0x1400199d0
   1400199db:	dec    r9w
   1400199df:	cmp    si,r9w
   1400199e3:	jge    0x140019a20
   1400199e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400199f0:	movsx  rdx,r10w
   1400199f4:	movzx  r8d,BYTE PTR [rdx+r11*1]
   1400199f9:	movsx  rax,r9w
   1400199fd:	lea    rcx,[rax+r11*1]
   140019a01:	movzx  eax,BYTE PTR [rcx]
   140019a04:	mov    BYTE PTR [rdx+r11*1],al
   140019a08:	mov    BYTE PTR [rcx],r8b
   140019a0b:	inc    r10w
   140019a0f:	dec    r9w
   140019a13:	cmp    r10w,r9w
   140019a17:	jl     0x1400199f0
   140019a19:	movzx  eax,BYTE PTR [rip+0x2bfe0]        # 0x140045a00
   140019a20:	mov    rdx,rdi
   140019a23:	mov    r8,r11
   140019a26:	test   al,al
   140019a28:	je     0x140019a72
   140019a2a:	mov    ebx,0x20
   140019a2f:	lea    r14,[rip+0xfffffffffffe65ca]        # 0x140000000
   140019a36:	cmp    al,0x7f
   140019a38:	ja     0x140019a3f
   140019a3a:	movzx  ecx,al
   140019a3d:	jmp    0x140019a53
   140019a3f:	cmp    al,0xfe
   140019a41:	ja     0x140019a51
   140019a43:	movzx  eax,al
   140019a46:	movzx  ecx,WORD PTR [r14+rax*2+0x30350]
   140019a4f:	jmp    0x140019a53
   140019a51:	mov    ecx,ebx
   140019a53:	mov    WORD PTR [rdx],cx
   140019a56:	add    rdx,0x2
   140019a5a:	inc    r8
   140019a5d:	movzx  eax,BYTE PTR [r8]
   140019a61:	test   al,al
   140019a63:	jne    0x140019a36
   140019a65:	movzx  r14d,WORD PTR [rsp+0x30]
   140019a6b:	lea    rbx,[rip+0x2c8de]        # 0x140046350
   140019a72:	mov    WORD PTR [rdx],si
   140019a75:	mov    rdx,rdi
   140019a78:	mov    rcx,rbx
   140019a7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019a80:	cmp    BYTE PTR [rcx],sil
   140019a83:	jne    0x140019a8b
   140019a85:	cmp    BYTE PTR [rcx+0x1],sil
   140019a89:	je     0x140019a91
   140019a8b:	add    rcx,0x2
   140019a8f:	jmp    0x140019a80
   140019a91:	movzx  eax,BYTE PTR [rdx]
   140019a94:	test   al,al
   140019a96:	jne    0x140019a9e
   140019a98:	cmp    BYTE PTR [rdx+0x1],sil
   140019a9c:	je     0x140019ab1
   140019a9e:	mov    BYTE PTR [rcx],al
   140019aa0:	movzx  eax,BYTE PTR [rdx+0x1]
   140019aa4:	mov    BYTE PTR [rcx+0x1],al
   140019aa7:	add    rcx,0x2
   140019aab:	add    rdx,0x2
   140019aaf:	jmp    0x140019a91
   140019ab1:	mov    WORD PTR [rcx],si
   140019ab4:	lea    rdx,[rip+0x22865]        # 0x14003c320
   140019abb:	mov    rcx,rbx
   140019abe:	xchg   ax,ax
   140019ac0:	cmp    BYTE PTR [rcx],sil
   140019ac3:	jne    0x140019acb
   140019ac5:	cmp    BYTE PTR [rcx+0x1],sil
   140019ac9:	je     0x140019ad1
   140019acb:	add    rcx,0x2
   140019acf:	jmp    0x140019ac0
   140019ad1:	movzx  eax,BYTE PTR [rdx]
   140019ad4:	test   al,al
   140019ad6:	jne    0x140019ade
   140019ad8:	cmp    BYTE PTR [rdx+0x1],sil
   140019adc:	je     0x140019af1
   140019ade:	mov    BYTE PTR [rcx],al
   140019ae0:	movzx  eax,BYTE PTR [rdx+0x1]
   140019ae4:	mov    BYTE PTR [rcx+0x1],al
   140019ae7:	add    rcx,0x2
   140019aeb:	add    rdx,0x2
   140019aef:	jmp    0x140019ad1
   140019af1:	mov    WORD PTR [rcx],si
   140019af4:	mov    rax,rbx
   140019af7:	mov    ecx,esi
   140019af9:	nop    DWORD PTR [rax+0x0]
   140019b00:	cmp    BYTE PTR [rax],sil
   140019b03:	jne    0x140019b0b
   140019b05:	cmp    BYTE PTR [rax+0x1],sil
   140019b09:	je     0x140019b13
   140019b0b:	add    rax,0x2
   140019b0f:	inc    ecx
   140019b11:	jmp    0x140019b00
   140019b13:	lea    edi,[rcx+rcx*1]
   140019b16:	mov    rcx,rsi
   140019b19:	movsxd rbx,edi
   140019b1c:	lea    rdx,[rip+0x2c82d]        # 0x140046350
   140019b23:	test   edi,edi
   140019b25:	jle    0x140019b3b
   140019b27:	nop    WORD PTR [rax+rax*1+0x0]
   140019b30:	not    BYTE PTR [rcx+rdx*1]
   140019b33:	inc    rcx
   140019b36:	cmp    rcx,rbx
   140019b39:	jl     0x140019b30
   140019b3b:	mov    QWORD PTR [rsp+0x20],rsi
   140019b40:	lea    r9,[rbp-0x39]
   140019b44:	mov    r8d,edi
   140019b47:	mov    rax,QWORD PTR [rbp-0x51]
   140019b4b:	mov    rcx,QWORD PTR [rax]
   140019b4e:	call   QWORD PTR [rip+0x156bc]        # 0x14002f210
   140019b54:	test   eax,eax
   140019b56:	jne    0x140019b91
   140019b58:	call   QWORD PTR [rip+0x15602]        # 0x14002f160
   140019b5e:	cmp    eax,0x58
   140019b61:	jae    0x140019b75
   140019b63:	mov    eax,eax
   140019b65:	lea    rcx,[rip+0xfffffffffffe6494]        # 0x140000000
   140019b6c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140019b73:	jmp    0x140019b7a
   140019b75:	mov    ecx,0x106
   140019b7a:	mov    DWORD PTR [rip+0x29538],ecx        # 0x1400430b8
   140019b80:	mov    DWORD PTR [rip+0x2993e],0x2        # 0x1400434c8
   140019b8a:	mov    BYTE PTR [rip+0x2982f],sil        # 0x1400433c0
   140019b91:	mov    rcx,rsi
   140019b94:	test   edi,edi
   140019b96:	jle    0x140019bab
   140019b98:	lea    rdx,[rip+0x2c7b1]        # 0x140046350
   140019b9f:	nop
   140019ba0:	not    BYTE PTR [rcx+rdx*1]
   140019ba3:	inc    rcx
   140019ba6:	cmp    rcx,rbx
   140019ba9:	jl     0x140019ba0
   140019bab:	cmp    DWORD PTR [rbp-0x39],edi
   140019bae:	jne    0x14001bbc7
   140019bb4:	mov    edi,0x1
   140019bb9:	movzx  esi,di
   140019bbc:	jmp    0x140019100
   140019bc1:	cmp    r14w,WORD PTR [rip+0x26727]        # 0x1400402f0
   140019bc9:	jne    0x140019d06
   140019bcf:	cmp    r15w,WORD PTR [rip+0x2671f]        # 0x1400402f6
   140019bd7:	jne    0x140019d06
   140019bdd:	mov    WORD PTR [rsp+0x20],r15w
   140019be3:	movzx  r9d,r14w
   140019be7:	lea    rdi,[rip+0x2bd42]        # 0x140045930
   140019bee:	mov    rdx,rdi
   140019bf1:	mov    rcx,rbx
   140019bf4:	call   0x14000ab90
   140019bf9:	lea    rdx,[rip+0x22720]        # 0x14003c320
   140019c00:	mov    rcx,rdi
   140019c03:	cmp    BYTE PTR [rcx],sil
   140019c06:	jne    0x140019c0e
   140019c08:	cmp    BYTE PTR [rcx+0x1],sil
   140019c0c:	je     0x140019c14
   140019c0e:	add    rcx,0x2
   140019c12:	jmp    0x140019c03
   140019c14:	movzx  eax,BYTE PTR [rdx]
   140019c17:	test   al,al
   140019c19:	jne    0x140019c21
   140019c1b:	cmp    BYTE PTR [rdx+0x1],sil
   140019c1f:	je     0x140019c34
   140019c21:	mov    BYTE PTR [rcx],al
   140019c23:	movzx  eax,BYTE PTR [rdx+0x1]
   140019c27:	mov    BYTE PTR [rcx+0x1],al
   140019c2a:	add    rcx,0x2
   140019c2e:	add    rdx,0x2
   140019c32:	jmp    0x140019c14
   140019c34:	mov    WORD PTR [rcx],si
   140019c37:	mov    rax,rdi
   140019c3a:	mov    ecx,esi
   140019c3c:	nop    DWORD PTR [rax+0x0]
   140019c40:	cmp    BYTE PTR [rax],sil
   140019c43:	jne    0x140019c4b
   140019c45:	cmp    BYTE PTR [rax+0x1],sil
   140019c49:	je     0x140019c53
   140019c4b:	add    rax,0x2
   140019c4f:	inc    ecx
   140019c51:	jmp    0x140019c40
   140019c53:	add    cx,cx
   140019c56:	mov    WORD PTR [rip+0x251f7],cx        # 0x14003ee54
   140019c5d:	movsx  r8,cx
   140019c61:	mov    rcx,rsi
   140019c64:	mov    rbx,r8
   140019c67:	test   r8d,r8d
   140019c6a:	jle    0x140019c7b
   140019c6c:	nop    DWORD PTR [rax+0x0]
   140019c70:	not    BYTE PTR [rcx+rdi*1]
   140019c73:	inc    rcx
   140019c76:	cmp    rcx,rbx
   140019c79:	jl     0x140019c70
   140019c7b:	mov    QWORD PTR [rsp+0x20],rsi
   140019c80:	lea    r9,[rbp-0x25]
   140019c84:	mov    rdx,rdi
   140019c87:	mov    rax,QWORD PTR [rbp-0x49]
   140019c8b:	mov    rcx,QWORD PTR [rax]
   140019c8e:	call   QWORD PTR [rip+0x1557c]        # 0x14002f210
   140019c94:	test   eax,eax
   140019c96:	jne    0x140019cd1
   140019c98:	call   QWORD PTR [rip+0x154c2]        # 0x14002f160
   140019c9e:	cmp    eax,0x58
   140019ca1:	jae    0x140019cb5
   140019ca3:	mov    eax,eax
   140019ca5:	lea    rcx,[rip+0xfffffffffffe6354]        # 0x140000000
   140019cac:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   140019cb3:	jmp    0x140019cba
   140019cb5:	mov    ecx,0x106
   140019cba:	mov    DWORD PTR [rip+0x293f8],ecx        # 0x1400430b8
   140019cc0:	mov    DWORD PTR [rip+0x297fe],0x2        # 0x1400434c8
   140019cca:	mov    BYTE PTR [rip+0x296ef],sil        # 0x1400433c0
   140019cd1:	mov    rcx,rsi
   140019cd4:	test   rbx,rbx
   140019cd7:	jle    0x140019ceb
   140019cd9:	nop    DWORD PTR [rax+0x0]
   140019ce0:	not    BYTE PTR [rcx+rdi*1]
   140019ce3:	inc    rcx
   140019ce6:	cmp    rcx,rbx
   140019ce9:	jl     0x140019ce0
   140019ceb:	movsx  eax,WORD PTR [rip+0x25162]        # 0x14003ee54
   140019cf2:	cmp    DWORD PTR [rbp-0x25],eax
   140019cf5:	jne    0x14001bbc7
   140019cfb:	mov    rax,QWORD PTR [rbp-0x19]
   140019cff:	inc    DWORD PTR [rax]
   140019d01:	jmp    0x14001a5f4
   140019d06:	mov    eax,0x1
   140019d0b:	mov    WORD PTR [rip+0x241d2],ax        # 0x14003dee4
   140019d12:	cmp    cx,WORD PTR [rip+0x265d9]        # 0x1400402f2
   140019d19:	jne    0x140019d27
   140019d1b:	cmp    si,WORD PTR [rip+0x265d2]        # 0x1400402f4
   140019d22:	jne    0x140019d27
   140019d24:	mov    DWORD PTR [rbp-0x69],eax
   140019d27:	mov    rcx,rbx
   140019d2a:	lea    rbx,[rip+0x2c61f]        # 0x140046350
   140019d31:	mov    rdx,rbx
   140019d34:	movzx  eax,BYTE PTR [rcx]
   140019d37:	test   al,al
   140019d39:	jne    0x140019d41
   140019d3b:	cmp    BYTE PTR [rcx+0x1],sil
   140019d3f:	je     0x140019d54
   140019d41:	mov    BYTE PTR [rdx],al
   140019d43:	movzx  eax,BYTE PTR [rcx+0x1]
   140019d47:	mov    BYTE PTR [rdx+0x1],al
   140019d4a:	add    rdx,0x2
   140019d4e:	add    rcx,0x2
   140019d52:	jmp    0x140019d34
   140019d54:	movzx  eax,BYTE PTR [rcx]
   140019d57:	mov    BYTE PTR [rdx],al
   140019d59:	movzx  eax,BYTE PTR [rcx+0x1]
   140019d5d:	mov    BYTE PTR [rdx+0x1],al
   140019d60:	lea    rdx,[rip+0x225c1]        # 0x14003c328
   140019d67:	mov    rcx,rbx
   140019d6a:	nop    WORD PTR [rax+rax*1+0x0]
   140019d70:	cmp    BYTE PTR [rcx],sil
   140019d73:	jne    0x140019d7b
   140019d75:	cmp    BYTE PTR [rcx+0x1],sil
   140019d79:	je     0x140019d81
   140019d7b:	add    rcx,0x2
   140019d7f:	jmp    0x140019d70
   140019d81:	movzx  eax,BYTE PTR [rdx]
   140019d84:	test   al,al
   140019d86:	jne    0x140019d8e
   140019d88:	cmp    BYTE PTR [rdx+0x1],sil
   140019d8c:	je     0x140019da1
   140019d8e:	mov    BYTE PTR [rcx],al
   140019d90:	movzx  eax,BYTE PTR [rdx+0x1]
   140019d94:	mov    BYTE PTR [rcx+0x1],al
   140019d97:	add    rcx,0x2
   140019d9b:	add    rdx,0x2
   140019d9f:	jmp    0x140019d81
   140019da1:	mov    WORD PTR [rcx],si
   140019da4:	movzx  edx,r14w
   140019da8:	movzx  r8d,si
   140019dac:	lea    r11,[rip+0x2bc4d]        # 0x140045a00
   140019db3:	nop    DWORD PTR [rax+0x0]
   140019db7:	nop    WORD PTR [rax+rax*1+0x0]
   140019dc0:	movzx  ecx,dx
   140019dc3:	mov    eax,0x66666667
   140019dc8:	imul   ecx
   140019dca:	sar    edx,0x2
   140019dcd:	mov    eax,edx
   140019dcf:	shr    eax,0x1f
   140019dd2:	add    edx,eax
   140019dd4:	lea    eax,[rdx+rdx*4]
   140019dd7:	add    eax,eax
   140019dd9:	sub    ecx,eax
   140019ddb:	add    cl,0x30
   140019dde:	movsx  rax,r8w
   140019de2:	mov    BYTE PTR [rax+r11*1],cl
   140019de6:	inc    r8w
   140019dea:	test   dx,dx
   140019ded:	jne    0x140019dc0
   140019def:	movsx  rax,r8w
   140019df3:	mov    BYTE PTR [rax+r11*1],sil
   140019df7:	movzx  r10d,si
   140019dfb:	mov    r9d,esi
   140019dfe:	mov    rcx,r11
   140019e01:	movzx  eax,BYTE PTR [rip+0x2bbf8]        # 0x140045a00
   140019e08:	test   al,al
   140019e0a:	je     0x140019e1b
   140019e0c:	nop    DWORD PTR [rax+0x0]
   140019e10:	inc    rcx
   140019e13:	inc    r9d
   140019e16:	cmp    BYTE PTR [rcx],sil
   140019e19:	jne    0x140019e10
   140019e1b:	dec    r9w
   140019e1f:	cmp    si,r9w
   140019e23:	jge    0x140019e60
   140019e25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019e30:	movsx  rdx,r10w
   140019e34:	movzx  r8d,BYTE PTR [rdx+r11*1]
   140019e39:	movsx  rax,r9w
   140019e3d:	lea    rcx,[rax+r11*1]
   140019e41:	movzx  eax,BYTE PTR [rcx]
   140019e44:	mov    BYTE PTR [rdx+r11*1],al
   140019e48:	mov    BYTE PTR [rcx],r8b
   140019e4b:	inc    r10w
   140019e4f:	dec    r9w
   140019e53:	cmp    r10w,r9w
   140019e57:	jl     0x140019e30
   140019e59:	movzx  eax,BYTE PTR [rip+0x2bba0]        # 0x140045a00
   140019e60:	lea    rdi,[rip+0x2bbb9]        # 0x140045a20
   140019e67:	mov    rdx,rdi
   140019e6a:	mov    r8,r11
   140019e6d:	test   al,al
   140019e6f:	je     0x140019ebd
   140019e71:	mov    ebx,0x20
   140019e76:	lea    r11,[rip+0xfffffffffffe6183]        # 0x140000000
   140019e7d:	nop    DWORD PTR [rax]
   140019e80:	cmp    al,0x7f
   140019e82:	ja     0x140019e89
   140019e84:	movzx  ecx,al
   140019e87:	jmp    0x140019e9d
   140019e89:	cmp    al,0xfe
   140019e8b:	ja     0x140019e9b
   140019e8d:	movzx  eax,al
   140019e90:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   140019e99:	jmp    0x140019e9d
   140019e9b:	mov    ecx,ebx
   140019e9d:	mov    WORD PTR [rdx],cx
   140019ea0:	add    rdx,0x2
   140019ea4:	inc    r8
   140019ea7:	movzx  eax,BYTE PTR [r8]
   140019eab:	test   al,al
   140019ead:	jne    0x140019e80
   140019eaf:	lea    r11,[rip+0x2bb4a]        # 0x140045a00
   140019eb6:	lea    rbx,[rip+0x2c493]        # 0x140046350
   140019ebd:	mov    WORD PTR [rdx],si
   140019ec0:	mov    rdx,rdi
   140019ec3:	mov    rcx,rbx
   140019ec6:	cmp    BYTE PTR [rcx],sil
   140019ec9:	jne    0x140019ed1
   140019ecb:	cmp    BYTE PTR [rcx+0x1],sil
   140019ecf:	je     0x140019ed7
   140019ed1:	add    rcx,0x2
   140019ed5:	jmp    0x140019ec6
   140019ed7:	movzx  eax,BYTE PTR [rdx]
   140019eda:	test   al,al
   140019edc:	jne    0x140019ee4
   140019ede:	cmp    BYTE PTR [rdx+0x1],sil
   140019ee2:	je     0x140019ef7
   140019ee4:	mov    BYTE PTR [rcx],al
   140019ee6:	movzx  eax,BYTE PTR [rdx+0x1]
   140019eea:	mov    BYTE PTR [rcx+0x1],al
   140019eed:	add    rcx,0x2
   140019ef1:	add    rdx,0x2
   140019ef5:	jmp    0x140019ed7
   140019ef7:	mov    WORD PTR [rcx],si
   140019efa:	lea    rdx,[rip+0x22427]        # 0x14003c328
   140019f01:	mov    rcx,rbx
   140019f04:	cmp    BYTE PTR [rcx],sil
   140019f07:	jne    0x140019f0f
   140019f09:	cmp    BYTE PTR [rcx+0x1],sil
   140019f0d:	je     0x140019f15
   140019f0f:	add    rcx,0x2
   140019f13:	jmp    0x140019f04
   140019f15:	movzx  eax,BYTE PTR [rdx]
   140019f18:	test   al,al
   140019f1a:	jne    0x140019f22
   140019f1c:	cmp    BYTE PTR [rdx+0x1],sil
   140019f20:	je     0x140019f35
   140019f22:	mov    BYTE PTR [rcx],al
   140019f24:	movzx  eax,BYTE PTR [rdx+0x1]
   140019f28:	mov    BYTE PTR [rcx+0x1],al
   140019f2b:	add    rcx,0x2
   140019f2f:	add    rdx,0x2
   140019f33:	jmp    0x140019f15
   140019f35:	mov    WORD PTR [rcx],si
   140019f38:	mov    edx,0x3fff
   140019f3d:	movzx  r8d,si
   140019f41:	movzx  ecx,dx
   140019f44:	mov    eax,0x66666667
   140019f49:	imul   ecx
   140019f4b:	sar    edx,0x2
   140019f4e:	mov    eax,edx
   140019f50:	shr    eax,0x1f
   140019f53:	add    edx,eax
   140019f55:	lea    eax,[rdx+rdx*4]
   140019f58:	add    eax,eax
   140019f5a:	sub    ecx,eax
   140019f5c:	add    cl,0x30
   140019f5f:	movsx  rax,r8w
   140019f63:	mov    BYTE PTR [rax+r11*1],cl
   140019f67:	inc    r8w
   140019f6b:	test   dx,dx
   140019f6e:	jne    0x140019f41
   140019f70:	movsx  rax,r8w
   140019f74:	mov    BYTE PTR [rax+r11*1],sil
   140019f78:	movzx  r10d,si
   140019f7c:	mov    r9d,esi
   140019f7f:	mov    rcx,r11
   140019f82:	movzx  eax,BYTE PTR [rip+0x2ba77]        # 0x140045a00
   140019f89:	test   al,al
   140019f8b:	je     0x140019f9b
   140019f8d:	nop    DWORD PTR [rax]
   140019f90:	inc    rcx
   140019f93:	inc    r9d
   140019f96:	cmp    BYTE PTR [rcx],sil
   140019f99:	jne    0x140019f90
   140019f9b:	dec    r9w
   140019f9f:	cmp    si,r9w
   140019fa3:	jge    0x140019fe0
   140019fa5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019fb0:	movsx  rdx,r10w
   140019fb4:	movzx  r8d,BYTE PTR [rdx+r11*1]
   140019fb9:	movsx  rax,r9w
   140019fbd:	lea    rcx,[rax+r11*1]
   140019fc1:	movzx  eax,BYTE PTR [rcx]
   140019fc4:	mov    BYTE PTR [rdx+r11*1],al
   140019fc8:	mov    BYTE PTR [rcx],r8b
   140019fcb:	inc    r10w
   140019fcf:	dec    r9w
   140019fd3:	cmp    r10w,r9w
   140019fd7:	jl     0x140019fb0
   140019fd9:	movzx  eax,BYTE PTR [rip+0x2ba20]        # 0x140045a00
   140019fe0:	mov    rdx,rdi
   140019fe3:	mov    r8,r11
   140019fe6:	test   al,al
   140019fe8:	je     0x14001a033
   140019fea:	mov    ebx,0x20
   140019fef:	lea    r11,[rip+0xfffffffffffe600a]        # 0x140000000
   140019ff6:	cmp    al,0x7f
   140019ff8:	ja     0x140019fff
   140019ffa:	movzx  ecx,al
   140019ffd:	jmp    0x14001a013
   140019fff:	cmp    al,0xfe
   14001a001:	ja     0x14001a011
   14001a003:	movzx  eax,al
   14001a006:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001a00f:	jmp    0x14001a013
   14001a011:	mov    ecx,ebx
   14001a013:	mov    WORD PTR [rdx],cx
   14001a016:	add    rdx,0x2
   14001a01a:	inc    r8
   14001a01d:	movzx  eax,BYTE PTR [r8]
   14001a021:	test   al,al
   14001a023:	jne    0x140019ff6
   14001a025:	lea    r11,[rip+0x2b9d4]        # 0x140045a00
   14001a02c:	lea    rbx,[rip+0x2c31d]        # 0x140046350
   14001a033:	mov    WORD PTR [rdx],si
   14001a036:	mov    rdx,rdi
   14001a039:	mov    rcx,rbx
   14001a03c:	nop    DWORD PTR [rax+0x0]
   14001a040:	cmp    BYTE PTR [rcx],sil
   14001a043:	jne    0x14001a04b
   14001a045:	cmp    BYTE PTR [rcx+0x1],sil
   14001a049:	je     0x14001a051
   14001a04b:	add    rcx,0x2
   14001a04f:	jmp    0x14001a040
   14001a051:	movzx  eax,BYTE PTR [rdx]
   14001a054:	test   al,al
   14001a056:	jne    0x14001a05e
   14001a058:	cmp    BYTE PTR [rdx+0x1],sil
   14001a05c:	je     0x14001a071
   14001a05e:	mov    BYTE PTR [rcx],al
   14001a060:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a064:	mov    BYTE PTR [rcx+0x1],al
   14001a067:	add    rcx,0x2
   14001a06b:	add    rdx,0x2
   14001a06f:	jmp    0x14001a051
   14001a071:	mov    WORD PTR [rcx],si
   14001a074:	lea    rdx,[rip+0x222ad]        # 0x14003c328
   14001a07b:	mov    rcx,rbx
   14001a07e:	xchg   ax,ax
   14001a080:	cmp    BYTE PTR [rcx],sil
   14001a083:	jne    0x14001a08b
   14001a085:	cmp    BYTE PTR [rcx+0x1],sil
   14001a089:	je     0x14001a091
   14001a08b:	add    rcx,0x2
   14001a08f:	jmp    0x14001a080
   14001a091:	movzx  eax,BYTE PTR [rdx]
   14001a094:	test   al,al
   14001a096:	jne    0x14001a09e
   14001a098:	cmp    BYTE PTR [rdx+0x1],sil
   14001a09c:	je     0x14001a0b1
   14001a09e:	mov    BYTE PTR [rcx],al
   14001a0a0:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a0a4:	mov    BYTE PTR [rcx+0x1],al
   14001a0a7:	add    rcx,0x2
   14001a0ab:	add    rdx,0x2
   14001a0af:	jmp    0x14001a091
   14001a0b1:	mov    WORD PTR [rcx],si
   14001a0b4:	movzx  edx,si
   14001a0b7:	movzx  r8d,si
   14001a0bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a0c0:	movzx  ecx,dx
   14001a0c3:	mov    eax,0x66666667
   14001a0c8:	imul   ecx
   14001a0ca:	sar    edx,0x2
   14001a0cd:	mov    eax,edx
   14001a0cf:	shr    eax,0x1f
   14001a0d2:	add    edx,eax
   14001a0d4:	lea    eax,[rdx+rdx*4]
   14001a0d7:	add    eax,eax
   14001a0d9:	sub    ecx,eax
   14001a0db:	add    cl,0x30
   14001a0de:	movsx  rax,r8w
   14001a0e2:	mov    BYTE PTR [rax+r11*1],cl
   14001a0e6:	inc    r8w
   14001a0ea:	test   dx,dx
   14001a0ed:	jne    0x14001a0c0
   14001a0ef:	movsx  rax,r8w
   14001a0f3:	mov    BYTE PTR [rax+r11*1],sil
   14001a0f7:	movzx  r10d,si
   14001a0fb:	mov    r9d,esi
   14001a0fe:	mov    rcx,r11
   14001a101:	movzx  eax,BYTE PTR [rip+0x2b8f8]        # 0x140045a00
   14001a108:	test   al,al
   14001a10a:	je     0x14001a11b
   14001a10c:	nop    DWORD PTR [rax+0x0]
   14001a110:	inc    rcx
   14001a113:	inc    r9d
   14001a116:	cmp    BYTE PTR [rcx],sil
   14001a119:	jne    0x14001a110
   14001a11b:	dec    r9w
   14001a11f:	cmp    si,r9w
   14001a123:	jge    0x14001a160
   14001a125:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001a130:	movsx  rdx,r10w
   14001a134:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001a139:	movsx  rax,r9w
   14001a13d:	lea    rcx,[rax+r11*1]
   14001a141:	movzx  eax,BYTE PTR [rcx]
   14001a144:	mov    BYTE PTR [rdx+r11*1],al
   14001a148:	mov    BYTE PTR [rcx],r8b
   14001a14b:	inc    r10w
   14001a14f:	dec    r9w
   14001a153:	cmp    r10w,r9w
   14001a157:	jl     0x14001a130
   14001a159:	movzx  eax,BYTE PTR [rip+0x2b8a0]        # 0x140045a00
   14001a160:	mov    rdx,rdi
   14001a163:	mov    r8,r11
   14001a166:	test   al,al
   14001a168:	je     0x14001a1b3
   14001a16a:	mov    ebx,0x20
   14001a16f:	lea    r11,[rip+0xfffffffffffe5e8a]        # 0x140000000
   14001a176:	cmp    al,0x7f
   14001a178:	ja     0x14001a17f
   14001a17a:	movzx  ecx,al
   14001a17d:	jmp    0x14001a193
   14001a17f:	cmp    al,0xfe
   14001a181:	ja     0x14001a191
   14001a183:	movzx  eax,al
   14001a186:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001a18f:	jmp    0x14001a193
   14001a191:	mov    ecx,ebx
   14001a193:	mov    WORD PTR [rdx],cx
   14001a196:	add    rdx,0x2
   14001a19a:	inc    r8
   14001a19d:	movzx  eax,BYTE PTR [r8]
   14001a1a1:	test   al,al
   14001a1a3:	jne    0x14001a176
   14001a1a5:	lea    r11,[rip+0x2b854]        # 0x140045a00
   14001a1ac:	lea    rbx,[rip+0x2c19d]        # 0x140046350
   14001a1b3:	mov    WORD PTR [rdx],si
   14001a1b6:	mov    rdx,rdi
   14001a1b9:	mov    rcx,rbx
   14001a1bc:	nop    DWORD PTR [rax+0x0]
   14001a1c0:	cmp    BYTE PTR [rcx],sil
   14001a1c3:	jne    0x14001a1cb
   14001a1c5:	cmp    BYTE PTR [rcx+0x1],sil
   14001a1c9:	je     0x14001a1d1
   14001a1cb:	add    rcx,0x2
   14001a1cf:	jmp    0x14001a1c0
   14001a1d1:	movzx  eax,BYTE PTR [rdx]
   14001a1d4:	test   al,al
   14001a1d6:	jne    0x14001a1de
   14001a1d8:	cmp    BYTE PTR [rdx+0x1],sil
   14001a1dc:	je     0x14001a1f1
   14001a1de:	mov    BYTE PTR [rcx],al
   14001a1e0:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a1e4:	mov    BYTE PTR [rcx+0x1],al
   14001a1e7:	add    rcx,0x2
   14001a1eb:	add    rdx,0x2
   14001a1ef:	jmp    0x14001a1d1
   14001a1f1:	mov    WORD PTR [rcx],si
   14001a1f4:	lea    rdx,[rip+0x2212d]        # 0x14003c328
   14001a1fb:	mov    rcx,rbx
   14001a1fe:	xchg   ax,ax
   14001a200:	cmp    BYTE PTR [rcx],sil
   14001a203:	jne    0x14001a20b
   14001a205:	cmp    BYTE PTR [rcx+0x1],sil
   14001a209:	je     0x14001a211
   14001a20b:	add    rcx,0x2
   14001a20f:	jmp    0x14001a200
   14001a211:	movzx  eax,BYTE PTR [rdx]
   14001a214:	test   al,al
   14001a216:	jne    0x14001a21e
   14001a218:	cmp    BYTE PTR [rdx+0x1],sil
   14001a21c:	je     0x14001a231
   14001a21e:	mov    BYTE PTR [rcx],al
   14001a220:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a224:	mov    BYTE PTR [rcx+0x1],al
   14001a227:	add    rcx,0x2
   14001a22b:	add    rdx,0x2
   14001a22f:	jmp    0x14001a211
   14001a231:	mov    WORD PTR [rcx],si
   14001a234:	movzx  edx,r15w
   14001a238:	movzx  r8d,si
   14001a23c:	nop    DWORD PTR [rax+0x0]
   14001a240:	movzx  ecx,dx
   14001a243:	mov    eax,0x66666667
   14001a248:	imul   ecx
   14001a24a:	sar    edx,0x2
   14001a24d:	mov    eax,edx
   14001a24f:	shr    eax,0x1f
   14001a252:	add    edx,eax
   14001a254:	lea    eax,[rdx+rdx*4]
   14001a257:	add    eax,eax
   14001a259:	sub    ecx,eax
   14001a25b:	add    cl,0x30
   14001a25e:	movsx  rax,r8w
   14001a262:	mov    BYTE PTR [rax+r11*1],cl
   14001a266:	inc    r8w
   14001a26a:	test   dx,dx
   14001a26d:	jne    0x14001a240
   14001a26f:	movsx  rax,r8w
   14001a273:	mov    BYTE PTR [rax+r11*1],sil
   14001a277:	movzx  r10d,si
   14001a27b:	mov    r9d,esi
   14001a27e:	mov    rcx,r11
   14001a281:	movzx  eax,BYTE PTR [rip+0x2b778]        # 0x140045a00
   14001a288:	test   al,al
   14001a28a:	je     0x14001a29b
   14001a28c:	nop    DWORD PTR [rax+0x0]
   14001a290:	inc    rcx
   14001a293:	inc    r9d
   14001a296:	cmp    BYTE PTR [rcx],sil
   14001a299:	jne    0x14001a290
   14001a29b:	dec    r9w
   14001a29f:	cmp    si,r9w
   14001a2a3:	jge    0x14001a2e0
   14001a2a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001a2b0:	movsx  rdx,r10w
   14001a2b4:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001a2b9:	movsx  rax,r9w
   14001a2bd:	lea    rcx,[rax+r11*1]
   14001a2c1:	movzx  eax,BYTE PTR [rcx]
   14001a2c4:	mov    BYTE PTR [rdx+r11*1],al
   14001a2c8:	mov    BYTE PTR [rcx],r8b
   14001a2cb:	inc    r10w
   14001a2cf:	dec    r9w
   14001a2d3:	cmp    r10w,r9w
   14001a2d7:	jl     0x14001a2b0
   14001a2d9:	movzx  eax,BYTE PTR [rip+0x2b720]        # 0x140045a00
   14001a2e0:	mov    rdx,rdi
   14001a2e3:	mov    r8,r11
   14001a2e6:	test   al,al
   14001a2e8:	je     0x14001a333
   14001a2ea:	mov    ebx,0x20
   14001a2ef:	lea    r11,[rip+0xfffffffffffe5d0a]        # 0x140000000
   14001a2f6:	cmp    al,0x7f
   14001a2f8:	ja     0x14001a2ff
   14001a2fa:	movzx  ecx,al
   14001a2fd:	jmp    0x14001a313
   14001a2ff:	cmp    al,0xfe
   14001a301:	ja     0x14001a311
   14001a303:	movzx  eax,al
   14001a306:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001a30f:	jmp    0x14001a313
   14001a311:	mov    ecx,ebx
   14001a313:	mov    WORD PTR [rdx],cx
   14001a316:	add    rdx,0x2
   14001a31a:	inc    r8
   14001a31d:	movzx  eax,BYTE PTR [r8]
   14001a321:	test   al,al
   14001a323:	jne    0x14001a2f6
   14001a325:	lea    r11,[rip+0x2b6d4]        # 0x140045a00
   14001a32c:	lea    rbx,[rip+0x2c01d]        # 0x140046350
   14001a333:	mov    WORD PTR [rdx],si
   14001a336:	mov    rdx,rdi
   14001a339:	mov    rcx,rbx
   14001a33c:	nop    DWORD PTR [rax+0x0]
   14001a340:	cmp    BYTE PTR [rcx],sil
   14001a343:	jne    0x14001a34b
   14001a345:	cmp    BYTE PTR [rcx+0x1],sil
   14001a349:	je     0x14001a351
   14001a34b:	add    rcx,0x2
   14001a34f:	jmp    0x14001a340
   14001a351:	movzx  eax,BYTE PTR [rdx]
   14001a354:	test   al,al
   14001a356:	jne    0x14001a35e
   14001a358:	cmp    BYTE PTR [rdx+0x1],sil
   14001a35c:	je     0x14001a371
   14001a35e:	mov    BYTE PTR [rcx],al
   14001a360:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a364:	mov    BYTE PTR [rcx+0x1],al
   14001a367:	add    rcx,0x2
   14001a36b:	add    rdx,0x2
   14001a36f:	jmp    0x14001a351
   14001a371:	mov    WORD PTR [rcx],si
   14001a374:	lea    rdx,[rip+0x21fad]        # 0x14003c328
   14001a37b:	mov    rcx,rbx
   14001a37e:	xchg   ax,ax
   14001a380:	cmp    BYTE PTR [rcx],sil
   14001a383:	jne    0x14001a38b
   14001a385:	cmp    BYTE PTR [rcx+0x1],sil
   14001a389:	je     0x14001a391
   14001a38b:	add    rcx,0x2
   14001a38f:	jmp    0x14001a380
   14001a391:	movzx  eax,BYTE PTR [rdx]
   14001a394:	test   al,al
   14001a396:	jne    0x14001a39e
   14001a398:	cmp    BYTE PTR [rdx+0x1],sil
   14001a39c:	je     0x14001a3b1
   14001a39e:	mov    BYTE PTR [rcx],al
   14001a3a0:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a3a4:	mov    BYTE PTR [rcx+0x1],al
   14001a3a7:	add    rcx,0x2
   14001a3ab:	add    rdx,0x2
   14001a3af:	jmp    0x14001a391
   14001a3b1:	mov    WORD PTR [rcx],si
   14001a3b4:	movzx  edx,si
   14001a3b7:	movzx  r8d,si
   14001a3bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a3c0:	movzx  ecx,dx
   14001a3c3:	mov    eax,0x66666667
   14001a3c8:	imul   ecx
   14001a3ca:	sar    edx,0x2
   14001a3cd:	mov    eax,edx
   14001a3cf:	shr    eax,0x1f
   14001a3d2:	add    edx,eax
   14001a3d4:	lea    eax,[rdx+rdx*4]
   14001a3d7:	add    eax,eax
   14001a3d9:	sub    ecx,eax
   14001a3db:	add    cl,0x30
   14001a3de:	movsx  rax,r8w
   14001a3e2:	mov    BYTE PTR [rax+r11*1],cl
   14001a3e6:	inc    r8w
   14001a3ea:	test   dx,dx
   14001a3ed:	jne    0x14001a3c0
   14001a3ef:	movsx  rax,r8w
   14001a3f3:	mov    BYTE PTR [rax+r11*1],sil
   14001a3f7:	movzx  r10d,si
   14001a3fb:	mov    r9d,esi
   14001a3fe:	mov    rcx,r11
   14001a401:	movzx  eax,BYTE PTR [rip+0x2b5f8]        # 0x140045a00
   14001a408:	test   al,al
   14001a40a:	je     0x14001a41b
   14001a40c:	nop    DWORD PTR [rax+0x0]
   14001a410:	inc    rcx
   14001a413:	inc    r9d
   14001a416:	cmp    BYTE PTR [rcx],sil
   14001a419:	jne    0x14001a410
   14001a41b:	dec    r9w
   14001a41f:	cmp    si,r9w
   14001a423:	jge    0x14001a460
   14001a425:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001a430:	movsx  rdx,r10w
   14001a434:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001a439:	movsx  rax,r9w
   14001a43d:	lea    rcx,[rax+r11*1]
   14001a441:	movzx  eax,BYTE PTR [rcx]
   14001a444:	mov    BYTE PTR [rdx+r11*1],al
   14001a448:	mov    BYTE PTR [rcx],r8b
   14001a44b:	inc    r10w
   14001a44f:	dec    r9w
   14001a453:	cmp    r10w,r9w
   14001a457:	jl     0x14001a430
   14001a459:	movzx  eax,BYTE PTR [rip+0x2b5a0]        # 0x140045a00
   14001a460:	mov    rdx,rdi
   14001a463:	mov    r8,r11
   14001a466:	test   al,al
   14001a468:	je     0x14001a4b2
   14001a46a:	mov    ebx,0x20
   14001a46f:	lea    r14,[rip+0xfffffffffffe5b8a]        # 0x140000000
   14001a476:	cmp    al,0x7f
   14001a478:	ja     0x14001a47f
   14001a47a:	movzx  ecx,al
   14001a47d:	jmp    0x14001a493
   14001a47f:	cmp    al,0xfe
   14001a481:	ja     0x14001a491
   14001a483:	movzx  eax,al
   14001a486:	movzx  ecx,WORD PTR [r14+rax*2+0x30350]
   14001a48f:	jmp    0x14001a493
   14001a491:	mov    ecx,ebx
   14001a493:	mov    WORD PTR [rdx],cx
   14001a496:	add    rdx,0x2
   14001a49a:	inc    r8
   14001a49d:	movzx  eax,BYTE PTR [r8]
   14001a4a1:	test   al,al
   14001a4a3:	jne    0x14001a476
   14001a4a5:	movzx  r14d,WORD PTR [rsp+0x30]
   14001a4ab:	lea    rbx,[rip+0x2be9e]        # 0x140046350
   14001a4b2:	mov    WORD PTR [rdx],si
   14001a4b5:	mov    rdx,rdi
   14001a4b8:	mov    rcx,rbx
   14001a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a4c0:	cmp    BYTE PTR [rcx],sil
   14001a4c3:	jne    0x14001a4cb
   14001a4c5:	cmp    BYTE PTR [rcx+0x1],sil
   14001a4c9:	je     0x14001a4d1
   14001a4cb:	add    rcx,0x2
   14001a4cf:	jmp    0x14001a4c0
   14001a4d1:	movzx  eax,BYTE PTR [rdx]
   14001a4d4:	test   al,al
   14001a4d6:	jne    0x14001a4de
   14001a4d8:	cmp    BYTE PTR [rdx+0x1],sil
   14001a4dc:	je     0x14001a4f1
   14001a4de:	mov    BYTE PTR [rcx],al
   14001a4e0:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a4e4:	mov    BYTE PTR [rcx+0x1],al
   14001a4e7:	add    rcx,0x2
   14001a4eb:	add    rdx,0x2
   14001a4ef:	jmp    0x14001a4d1
   14001a4f1:	mov    WORD PTR [rcx],si
   14001a4f4:	lea    rdx,[rip+0x21e25]        # 0x14003c320
   14001a4fb:	mov    rcx,rbx
   14001a4fe:	xchg   ax,ax
   14001a500:	cmp    BYTE PTR [rcx],sil
   14001a503:	jne    0x14001a50b
   14001a505:	cmp    BYTE PTR [rcx+0x1],sil
   14001a509:	je     0x14001a511
   14001a50b:	add    rcx,0x2
   14001a50f:	jmp    0x14001a500
   14001a511:	movzx  eax,BYTE PTR [rdx]
   14001a514:	test   al,al
   14001a516:	jne    0x14001a51e
   14001a518:	cmp    BYTE PTR [rdx+0x1],sil
   14001a51c:	je     0x14001a531
   14001a51e:	mov    BYTE PTR [rcx],al
   14001a520:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a524:	mov    BYTE PTR [rcx+0x1],al
   14001a527:	add    rcx,0x2
   14001a52b:	add    rdx,0x2
   14001a52f:	jmp    0x14001a511
   14001a531:	mov    WORD PTR [rcx],si
   14001a534:	mov    rax,rbx
   14001a537:	mov    ecx,esi
   14001a539:	nop    DWORD PTR [rax+0x0]
   14001a540:	cmp    BYTE PTR [rax],sil
   14001a543:	jne    0x14001a54b
   14001a545:	cmp    BYTE PTR [rax+0x1],sil
   14001a549:	je     0x14001a553
   14001a54b:	add    rax,0x2
   14001a54f:	inc    ecx
   14001a551:	jmp    0x14001a540
   14001a553:	lea    edi,[rcx+rcx*1]
   14001a556:	mov    rcx,rsi
   14001a559:	movsxd rbx,edi
   14001a55c:	lea    rdx,[rip+0x2bded]        # 0x140046350
   14001a563:	test   edi,edi
   14001a565:	jle    0x14001a57b
   14001a567:	nop    WORD PTR [rax+rax*1+0x0]
   14001a570:	not    BYTE PTR [rcx+rdx*1]
   14001a573:	inc    rcx
   14001a576:	cmp    rcx,rbx
   14001a579:	jl     0x14001a570
   14001a57b:	mov    QWORD PTR [rsp+0x20],rsi
   14001a580:	lea    r9,[rbp-0x41]
   14001a584:	mov    r8d,edi
   14001a587:	mov    rax,QWORD PTR [rbp-0x51]
   14001a58b:	mov    rcx,QWORD PTR [rax]
   14001a58e:	call   QWORD PTR [rip+0x14c7c]        # 0x14002f210
   14001a594:	test   eax,eax
   14001a596:	jne    0x14001a5d1
   14001a598:	call   QWORD PTR [rip+0x14bc2]        # 0x14002f160
   14001a59e:	cmp    eax,0x58
   14001a5a1:	jae    0x14001a5b5
   14001a5a3:	mov    eax,eax
   14001a5a5:	lea    rcx,[rip+0xfffffffffffe5a54]        # 0x140000000
   14001a5ac:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14001a5b3:	jmp    0x14001a5ba
   14001a5b5:	mov    ecx,0x106
   14001a5ba:	mov    DWORD PTR [rip+0x28af8],ecx        # 0x1400430b8
   14001a5c0:	mov    DWORD PTR [rip+0x28efe],0x2        # 0x1400434c8
   14001a5ca:	mov    BYTE PTR [rip+0x28def],sil        # 0x1400433c0
   14001a5d1:	mov    rcx,rsi
   14001a5d4:	test   edi,edi
   14001a5d6:	jle    0x14001a5eb
   14001a5d8:	lea    rdx,[rip+0x2bd71]        # 0x140046350
   14001a5df:	nop
   14001a5e0:	not    BYTE PTR [rcx+rdx*1]
   14001a5e3:	inc    rcx
   14001a5e6:	cmp    rcx,rbx
   14001a5e9:	jl     0x14001a5e0
   14001a5eb:	cmp    DWORD PTR [rbp-0x41],edi
   14001a5ee:	jne    0x14001bbc7
   14001a5f4:	mov    edi,0x1
   14001a5f9:	movzx  esi,di
   14001a5fc:	jmp    0x140019100
   14001a601:	mov    DWORD PTR [rbp-0x59],edi
   14001a604:	mov    eax,DWORD PTR [rbp-0x69]
   14001a607:	test   ax,ax
   14001a60a:	jne    0x14001aedc
   14001a610:	lea    rcx,[rip+0x2be39]        # 0x140046450
   14001a617:	lea    rdi,[rip+0x2bd32]        # 0x140046350
   14001a61e:	mov    rdx,rdi
   14001a621:	movzx  eax,BYTE PTR [rcx]
   14001a624:	test   al,al
   14001a626:	jne    0x14001a62d
   14001a628:	cmp    BYTE PTR [rcx+0x1],al
   14001a62b:	je     0x14001a640
   14001a62d:	mov    BYTE PTR [rdx],al
   14001a62f:	movzx  eax,BYTE PTR [rcx+0x1]
   14001a633:	mov    BYTE PTR [rdx+0x1],al
   14001a636:	add    rdx,0x2
   14001a63a:	add    rcx,0x2
   14001a63e:	jmp    0x14001a621
   14001a640:	movzx  eax,BYTE PTR [rcx]
   14001a643:	mov    BYTE PTR [rdx],al
   14001a645:	movzx  eax,BYTE PTR [rcx+0x1]
   14001a649:	mov    BYTE PTR [rdx+0x1],al
   14001a64c:	lea    rdx,[rip+0x21cd5]        # 0x14003c328
   14001a653:	mov    rcx,rdi
   14001a656:	cmp    BYTE PTR [rcx],0x0
   14001a659:	jne    0x14001a661
   14001a65b:	cmp    BYTE PTR [rcx+0x1],0x0
   14001a65f:	je     0x14001a667
   14001a661:	add    rcx,0x2
   14001a665:	jmp    0x14001a656
   14001a667:	movzx  eax,BYTE PTR [rdx]
   14001a66a:	test   al,al
   14001a66c:	jne    0x14001a673
   14001a66e:	cmp    BYTE PTR [rdx+0x1],al
   14001a671:	je     0x14001a686
   14001a673:	mov    BYTE PTR [rcx],al
   14001a675:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a679:	mov    BYTE PTR [rcx+0x1],al
   14001a67c:	add    rcx,0x2
   14001a680:	add    rdx,0x2
   14001a684:	jmp    0x14001a667
   14001a686:	mov    WORD PTR [rcx],0x0
   14001a68b:	movzx  edx,WORD PTR [rip+0x25c5e]        # 0x1400402f0
   14001a692:	xor    ebx,ebx
   14001a694:	movzx  r8d,bx
   14001a698:	lea    r11,[rip+0x2b361]        # 0x140045a00
   14001a69f:	nop
   14001a6a0:	movzx  ecx,dx
   14001a6a3:	mov    eax,0x66666667
   14001a6a8:	imul   ecx
   14001a6aa:	sar    edx,0x2
   14001a6ad:	mov    eax,edx
   14001a6af:	shr    eax,0x1f
   14001a6b2:	add    edx,eax
   14001a6b4:	lea    eax,[rdx+rdx*4]
   14001a6b7:	add    eax,eax
   14001a6b9:	sub    ecx,eax
   14001a6bb:	add    cl,0x30
   14001a6be:	movsx  rax,r8w
   14001a6c2:	mov    BYTE PTR [rax+r11*1],cl
   14001a6c6:	inc    r8w
   14001a6ca:	test   dx,dx
   14001a6cd:	jne    0x14001a6a0
   14001a6cf:	movsx  rax,r8w
   14001a6d3:	mov    BYTE PTR [rax+r11*1],bl
   14001a6d7:	movzx  r10d,bx
   14001a6db:	mov    r9d,ebx
   14001a6de:	mov    rcx,r11
   14001a6e1:	movzx  eax,BYTE PTR [rip+0x2b318]        # 0x140045a00
   14001a6e8:	test   al,al
   14001a6ea:	je     0x14001a6fa
   14001a6ec:	nop    DWORD PTR [rax+0x0]
   14001a6f0:	inc    rcx
   14001a6f3:	inc    r9d
   14001a6f6:	cmp    BYTE PTR [rcx],bl
   14001a6f8:	jne    0x14001a6f0
   14001a6fa:	dec    r9w
   14001a6fe:	cmp    bx,r9w
   14001a702:	jge    0x14001a740
   14001a704:	nop    DWORD PTR [rax+0x0]
   14001a708:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a710:	movsx  rdx,r10w
   14001a714:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001a719:	movsx  rax,r9w
   14001a71d:	lea    rcx,[rax+r11*1]
   14001a721:	movzx  eax,BYTE PTR [rcx]
   14001a724:	mov    BYTE PTR [rdx+r11*1],al
   14001a728:	mov    BYTE PTR [rcx],r8b
   14001a72b:	inc    r10w
   14001a72f:	dec    r9w
   14001a733:	cmp    r10w,r9w
   14001a737:	jl     0x14001a710
   14001a739:	movzx  eax,BYTE PTR [rip+0x2b2c0]        # 0x140045a00
   14001a740:	lea    r9,[rip+0x2b2d9]        # 0x140045a20
   14001a747:	mov    rdx,r9
   14001a74a:	mov    r8,r11
   14001a74d:	test   al,al
   14001a74f:	je     0x14001a79d
   14001a751:	mov    edi,0x20
   14001a756:	lea    r11,[rip+0xfffffffffffe58a3]        # 0x140000000
   14001a75d:	nop    DWORD PTR [rax]
   14001a760:	cmp    al,0x7f
   14001a762:	ja     0x14001a769
   14001a764:	movzx  ecx,al
   14001a767:	jmp    0x14001a77d
   14001a769:	cmp    al,0xfe
   14001a76b:	ja     0x14001a77b
   14001a76d:	movzx  eax,al
   14001a770:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001a779:	jmp    0x14001a77d
   14001a77b:	mov    ecx,edi
   14001a77d:	mov    WORD PTR [rdx],cx
   14001a780:	add    rdx,0x2
   14001a784:	inc    r8
   14001a787:	movzx  eax,BYTE PTR [r8]
   14001a78b:	test   al,al
   14001a78d:	jne    0x14001a760
   14001a78f:	lea    r11,[rip+0x2b26a]        # 0x140045a00
   14001a796:	lea    rdi,[rip+0x2bbb3]        # 0x140046350
   14001a79d:	mov    WORD PTR [rdx],bx
   14001a7a0:	mov    rdx,r9
   14001a7a3:	mov    rcx,rdi
   14001a7a6:	cmp    BYTE PTR [rcx],bl
   14001a7a8:	jne    0x14001a7af
   14001a7aa:	cmp    BYTE PTR [rcx+0x1],bl
   14001a7ad:	je     0x14001a7b5
   14001a7af:	add    rcx,0x2
   14001a7b3:	jmp    0x14001a7a6
   14001a7b5:	movzx  eax,BYTE PTR [rdx]
   14001a7b8:	test   al,al
   14001a7ba:	jne    0x14001a7c1
   14001a7bc:	cmp    BYTE PTR [rdx+0x1],bl
   14001a7bf:	je     0x14001a7d4
   14001a7c1:	mov    BYTE PTR [rcx],al
   14001a7c3:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a7c7:	mov    BYTE PTR [rcx+0x1],al
   14001a7ca:	add    rcx,0x2
   14001a7ce:	add    rdx,0x2
   14001a7d2:	jmp    0x14001a7b5
   14001a7d4:	mov    WORD PTR [rcx],bx
   14001a7d7:	lea    rdx,[rip+0x21b4a]        # 0x14003c328
   14001a7de:	mov    rcx,rdi
   14001a7e1:	cmp    BYTE PTR [rcx],bl
   14001a7e3:	jne    0x14001a7ea
   14001a7e5:	cmp    BYTE PTR [rcx+0x1],bl
   14001a7e8:	je     0x14001a7f0
   14001a7ea:	add    rcx,0x2
   14001a7ee:	jmp    0x14001a7e1
   14001a7f0:	movzx  eax,BYTE PTR [rdx]
   14001a7f3:	test   al,al
   14001a7f5:	jne    0x14001a7fc
   14001a7f7:	cmp    BYTE PTR [rdx+0x1],bl
   14001a7fa:	je     0x14001a80f
   14001a7fc:	mov    BYTE PTR [rcx],al
   14001a7fe:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a802:	mov    BYTE PTR [rcx+0x1],al
   14001a805:	add    rcx,0x2
   14001a809:	add    rdx,0x2
   14001a80d:	jmp    0x14001a7f0
   14001a80f:	mov    WORD PTR [rcx],bx
   14001a812:	movzx  edx,WORD PTR [rip+0x25ad9]        # 0x1400402f2
   14001a819:	movzx  r8d,bx
   14001a81d:	nop    DWORD PTR [rax]
   14001a820:	movzx  ecx,dx
   14001a823:	mov    eax,0x66666667
   14001a828:	imul   ecx
   14001a82a:	sar    edx,0x2
   14001a82d:	mov    eax,edx
   14001a82f:	shr    eax,0x1f
   14001a832:	add    edx,eax
   14001a834:	lea    eax,[rdx+rdx*4]
   14001a837:	add    eax,eax
   14001a839:	sub    ecx,eax
   14001a83b:	add    cl,0x30
   14001a83e:	movsx  rax,r8w
   14001a842:	mov    BYTE PTR [rax+r11*1],cl
   14001a846:	inc    r8w
   14001a84a:	test   dx,dx
   14001a84d:	jne    0x14001a820
   14001a84f:	movsx  rax,r8w
   14001a853:	mov    BYTE PTR [rax+r11*1],bl
   14001a857:	movzx  r10d,bx
   14001a85b:	mov    r9d,ebx
   14001a85e:	mov    rcx,r11
   14001a861:	movzx  eax,BYTE PTR [rip+0x2b198]        # 0x140045a00
   14001a868:	test   al,al
   14001a86a:	je     0x14001a87a
   14001a86c:	nop    DWORD PTR [rax+0x0]
   14001a870:	inc    rcx
   14001a873:	inc    r9d
   14001a876:	cmp    BYTE PTR [rcx],bl
   14001a878:	jne    0x14001a870
   14001a87a:	dec    r9w
   14001a87e:	cmp    bx,r9w
   14001a882:	jge    0x14001a8c0
   14001a884:	nop    DWORD PTR [rax+0x0]
   14001a888:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a890:	movsx  rdx,r10w
   14001a894:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001a899:	movsx  rax,r9w
   14001a89d:	lea    rcx,[rax+r11*1]
   14001a8a1:	movzx  eax,BYTE PTR [rcx]
   14001a8a4:	mov    BYTE PTR [rdx+r11*1],al
   14001a8a8:	mov    BYTE PTR [rcx],r8b
   14001a8ab:	inc    r10w
   14001a8af:	dec    r9w
   14001a8b3:	cmp    r10w,r9w
   14001a8b7:	jl     0x14001a890
   14001a8b9:	movzx  eax,BYTE PTR [rip+0x2b140]        # 0x140045a00
   14001a8c0:	lea    r9,[rip+0x2b159]        # 0x140045a20
   14001a8c7:	mov    rdx,r9
   14001a8ca:	mov    r8,r11
   14001a8cd:	test   al,al
   14001a8cf:	je     0x14001a91d
   14001a8d1:	mov    edi,0x20
   14001a8d6:	lea    r11,[rip+0xfffffffffffe5723]        # 0x140000000
   14001a8dd:	nop    DWORD PTR [rax]
   14001a8e0:	cmp    al,0x7f
   14001a8e2:	ja     0x14001a8e9
   14001a8e4:	movzx  ecx,al
   14001a8e7:	jmp    0x14001a8fd
   14001a8e9:	cmp    al,0xfe
   14001a8eb:	ja     0x14001a8fb
   14001a8ed:	movzx  eax,al
   14001a8f0:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001a8f9:	jmp    0x14001a8fd
   14001a8fb:	mov    ecx,edi
   14001a8fd:	mov    WORD PTR [rdx],cx
   14001a900:	add    rdx,0x2
   14001a904:	inc    r8
   14001a907:	movzx  eax,BYTE PTR [r8]
   14001a90b:	test   al,al
   14001a90d:	jne    0x14001a8e0
   14001a90f:	lea    r11,[rip+0x2b0ea]        # 0x140045a00
   14001a916:	lea    rdi,[rip+0x2ba33]        # 0x140046350
   14001a91d:	mov    WORD PTR [rdx],bx
   14001a920:	mov    rdx,r9
   14001a923:	mov    rcx,rdi
   14001a926:	cmp    BYTE PTR [rcx],bl
   14001a928:	jne    0x14001a92f
   14001a92a:	cmp    BYTE PTR [rcx+0x1],bl
   14001a92d:	je     0x14001a935
   14001a92f:	add    rcx,0x2
   14001a933:	jmp    0x14001a926
   14001a935:	movzx  eax,BYTE PTR [rdx]
   14001a938:	test   al,al
   14001a93a:	jne    0x14001a941
   14001a93c:	cmp    BYTE PTR [rdx+0x1],bl
   14001a93f:	je     0x14001a954
   14001a941:	mov    BYTE PTR [rcx],al
   14001a943:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a947:	mov    BYTE PTR [rcx+0x1],al
   14001a94a:	add    rcx,0x2
   14001a94e:	add    rdx,0x2
   14001a952:	jmp    0x14001a935
   14001a954:	mov    WORD PTR [rcx],bx
   14001a957:	lea    rdx,[rip+0x219ca]        # 0x14003c328
   14001a95e:	mov    rcx,rdi
   14001a961:	cmp    BYTE PTR [rcx],bl
   14001a963:	jne    0x14001a96a
   14001a965:	cmp    BYTE PTR [rcx+0x1],bl
   14001a968:	je     0x14001a970
   14001a96a:	add    rcx,0x2
   14001a96e:	jmp    0x14001a961
   14001a970:	movzx  eax,BYTE PTR [rdx]
   14001a973:	test   al,al
   14001a975:	jne    0x14001a97c
   14001a977:	cmp    BYTE PTR [rdx+0x1],bl
   14001a97a:	je     0x14001a98f
   14001a97c:	mov    BYTE PTR [rcx],al
   14001a97e:	movzx  eax,BYTE PTR [rdx+0x1]
   14001a982:	mov    BYTE PTR [rcx+0x1],al
   14001a985:	add    rcx,0x2
   14001a989:	add    rdx,0x2
   14001a98d:	jmp    0x14001a970
   14001a98f:	mov    WORD PTR [rcx],bx
   14001a992:	movzx  edx,WORD PTR [rip+0x2595b]        # 0x1400402f4
   14001a999:	movzx  r8d,bx
   14001a99d:	nop    DWORD PTR [rax]
   14001a9a0:	movzx  ecx,dx
   14001a9a3:	mov    eax,0x66666667
   14001a9a8:	imul   ecx
   14001a9aa:	sar    edx,0x2
   14001a9ad:	mov    eax,edx
   14001a9af:	shr    eax,0x1f
   14001a9b2:	add    edx,eax
   14001a9b4:	lea    eax,[rdx+rdx*4]
   14001a9b7:	add    eax,eax
   14001a9b9:	sub    ecx,eax
   14001a9bb:	add    cl,0x30
   14001a9be:	movsx  rax,r8w
   14001a9c2:	mov    BYTE PTR [rax+r11*1],cl
   14001a9c6:	inc    r8w
   14001a9ca:	test   dx,dx
   14001a9cd:	jne    0x14001a9a0
   14001a9cf:	movsx  rax,r8w
   14001a9d3:	mov    BYTE PTR [rax+r11*1],bl
   14001a9d7:	movzx  r10d,bx
   14001a9db:	mov    r9d,ebx
   14001a9de:	mov    rcx,r11
   14001a9e1:	movzx  eax,BYTE PTR [rip+0x2b018]        # 0x140045a00
   14001a9e8:	test   al,al
   14001a9ea:	je     0x14001a9fa
   14001a9ec:	nop    DWORD PTR [rax+0x0]
   14001a9f0:	inc    rcx
   14001a9f3:	inc    r9d
   14001a9f6:	cmp    BYTE PTR [rcx],bl
   14001a9f8:	jne    0x14001a9f0
   14001a9fa:	dec    r9w
   14001a9fe:	cmp    bx,r9w
   14001aa02:	jge    0x14001aa40
   14001aa04:	nop    DWORD PTR [rax+0x0]
   14001aa08:	nop    DWORD PTR [rax+rax*1+0x0]
   14001aa10:	movsx  rdx,r10w
   14001aa14:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001aa19:	movsx  rax,r9w
   14001aa1d:	lea    rcx,[rax+r11*1]
   14001aa21:	movzx  eax,BYTE PTR [rcx]
   14001aa24:	mov    BYTE PTR [rdx+r11*1],al
   14001aa28:	mov    BYTE PTR [rcx],r8b
   14001aa2b:	inc    r10w
   14001aa2f:	dec    r9w
   14001aa33:	cmp    r10w,r9w
   14001aa37:	jl     0x14001aa10
   14001aa39:	movzx  eax,BYTE PTR [rip+0x2afc0]        # 0x140045a00
   14001aa40:	lea    r9,[rip+0x2afd9]        # 0x140045a20
   14001aa47:	mov    rdx,r9
   14001aa4a:	mov    r8,r11
   14001aa4d:	test   al,al
   14001aa4f:	je     0x14001aa9d
   14001aa51:	mov    edi,0x20
   14001aa56:	lea    r11,[rip+0xfffffffffffe55a3]        # 0x140000000
   14001aa5d:	nop    DWORD PTR [rax]
   14001aa60:	cmp    al,0x7f
   14001aa62:	ja     0x14001aa69
   14001aa64:	movzx  ecx,al
   14001aa67:	jmp    0x14001aa7d
   14001aa69:	cmp    al,0xfe
   14001aa6b:	ja     0x14001aa7b
   14001aa6d:	movzx  eax,al
   14001aa70:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001aa79:	jmp    0x14001aa7d
   14001aa7b:	mov    ecx,edi
   14001aa7d:	mov    WORD PTR [rdx],cx
   14001aa80:	add    rdx,0x2
   14001aa84:	inc    r8
   14001aa87:	movzx  eax,BYTE PTR [r8]
   14001aa8b:	test   al,al
   14001aa8d:	jne    0x14001aa60
   14001aa8f:	lea    r11,[rip+0x2af6a]        # 0x140045a00
   14001aa96:	lea    rdi,[rip+0x2b8b3]        # 0x140046350
   14001aa9d:	mov    WORD PTR [rdx],bx
   14001aaa0:	mov    rdx,r9
   14001aaa3:	mov    rcx,rdi
   14001aaa6:	cmp    BYTE PTR [rcx],bl
   14001aaa8:	jne    0x14001aaaf
   14001aaaa:	cmp    BYTE PTR [rcx+0x1],bl
   14001aaad:	je     0x14001aab5
   14001aaaf:	add    rcx,0x2
   14001aab3:	jmp    0x14001aaa6
   14001aab5:	movzx  eax,BYTE PTR [rdx]
   14001aab8:	test   al,al
   14001aaba:	jne    0x14001aac1
   14001aabc:	cmp    BYTE PTR [rdx+0x1],bl
   14001aabf:	je     0x14001aad4
   14001aac1:	mov    BYTE PTR [rcx],al
   14001aac3:	movzx  eax,BYTE PTR [rdx+0x1]
   14001aac7:	mov    BYTE PTR [rcx+0x1],al
   14001aaca:	add    rcx,0x2
   14001aace:	add    rdx,0x2
   14001aad2:	jmp    0x14001aab5
   14001aad4:	mov    WORD PTR [rcx],bx
   14001aad7:	lea    rdx,[rip+0x2184a]        # 0x14003c328
   14001aade:	mov    rcx,rdi
   14001aae1:	cmp    BYTE PTR [rcx],bl
   14001aae3:	jne    0x14001aaea
   14001aae5:	cmp    BYTE PTR [rcx+0x1],bl
   14001aae8:	je     0x14001aaf0
   14001aaea:	add    rcx,0x2
   14001aaee:	jmp    0x14001aae1
   14001aaf0:	movzx  eax,BYTE PTR [rdx]
   14001aaf3:	test   al,al
   14001aaf5:	jne    0x14001aafc
   14001aaf7:	cmp    BYTE PTR [rdx+0x1],bl
   14001aafa:	je     0x14001ab0f
   14001aafc:	mov    BYTE PTR [rcx],al
   14001aafe:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ab02:	mov    BYTE PTR [rcx+0x1],al
   14001ab05:	add    rcx,0x2
   14001ab09:	add    rdx,0x2
   14001ab0d:	jmp    0x14001aaf0
   14001ab0f:	mov    WORD PTR [rcx],bx
   14001ab12:	movzx  edx,WORD PTR [rip+0x257dd]        # 0x1400402f6
   14001ab19:	movzx  r8d,bx
   14001ab1d:	nop    DWORD PTR [rax]
   14001ab20:	movzx  ecx,dx
   14001ab23:	mov    eax,0x66666667
   14001ab28:	imul   ecx
   14001ab2a:	sar    edx,0x2
   14001ab2d:	mov    eax,edx
   14001ab2f:	shr    eax,0x1f
   14001ab32:	add    edx,eax
   14001ab34:	lea    eax,[rdx+rdx*4]
   14001ab37:	add    eax,eax
   14001ab39:	sub    ecx,eax
   14001ab3b:	add    cl,0x30
   14001ab3e:	movsx  rax,r8w
   14001ab42:	mov    BYTE PTR [rax+r11*1],cl
   14001ab46:	inc    r8w
   14001ab4a:	test   dx,dx
   14001ab4d:	jne    0x14001ab20
   14001ab4f:	movsx  rax,r8w
   14001ab53:	mov    BYTE PTR [rax+r11*1],bl
   14001ab57:	movzx  r10d,bx
   14001ab5b:	mov    r9d,ebx
   14001ab5e:	mov    rcx,r11
   14001ab61:	movzx  eax,BYTE PTR [rip+0x2ae98]        # 0x140045a00
   14001ab68:	test   al,al
   14001ab6a:	je     0x14001ab7a
   14001ab6c:	nop    DWORD PTR [rax+0x0]
   14001ab70:	inc    rcx
   14001ab73:	inc    r9d
   14001ab76:	cmp    BYTE PTR [rcx],bl
   14001ab78:	jne    0x14001ab70
   14001ab7a:	dec    r9w
   14001ab7e:	cmp    bx,r9w
   14001ab82:	jge    0x14001abc0
   14001ab84:	nop    DWORD PTR [rax+0x0]
   14001ab88:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ab90:	movsx  rdx,r10w
   14001ab94:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001ab99:	movsx  rax,r9w
   14001ab9d:	lea    rcx,[rax+r11*1]
   14001aba1:	movzx  eax,BYTE PTR [rcx]
   14001aba4:	mov    BYTE PTR [rdx+r11*1],al
   14001aba8:	mov    BYTE PTR [rcx],r8b
   14001abab:	inc    r10w
   14001abaf:	dec    r9w
   14001abb3:	cmp    r10w,r9w
   14001abb7:	jl     0x14001ab90
   14001abb9:	movzx  eax,BYTE PTR [rip+0x2ae40]        # 0x140045a00
   14001abc0:	lea    r9,[rip+0x2ae59]        # 0x140045a20
   14001abc7:	mov    rdx,r9
   14001abca:	mov    r8,r11
   14001abcd:	test   al,al
   14001abcf:	je     0x14001ac1d
   14001abd1:	mov    edi,0x20
   14001abd6:	lea    r11,[rip+0xfffffffffffe5423]        # 0x140000000
   14001abdd:	nop    DWORD PTR [rax]
   14001abe0:	cmp    al,0x7f
   14001abe2:	ja     0x14001abe9
   14001abe4:	movzx  ecx,al
   14001abe7:	jmp    0x14001abfd
   14001abe9:	cmp    al,0xfe
   14001abeb:	ja     0x14001abfb
   14001abed:	movzx  eax,al
   14001abf0:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001abf9:	jmp    0x14001abfd
   14001abfb:	mov    ecx,edi
   14001abfd:	mov    WORD PTR [rdx],cx
   14001ac00:	add    rdx,0x2
   14001ac04:	inc    r8
   14001ac07:	movzx  eax,BYTE PTR [r8]
   14001ac0b:	test   al,al
   14001ac0d:	jne    0x14001abe0
   14001ac0f:	lea    r11,[rip+0x2adea]        # 0x140045a00
   14001ac16:	lea    rdi,[rip+0x2b733]        # 0x140046350
   14001ac1d:	mov    WORD PTR [rdx],bx
   14001ac20:	mov    rdx,r9
   14001ac23:	mov    rcx,rdi
   14001ac26:	cmp    BYTE PTR [rcx],bl
   14001ac28:	jne    0x14001ac2f
   14001ac2a:	cmp    BYTE PTR [rcx+0x1],bl
   14001ac2d:	je     0x14001ac35
   14001ac2f:	add    rcx,0x2
   14001ac33:	jmp    0x14001ac26
   14001ac35:	movzx  eax,BYTE PTR [rdx]
   14001ac38:	test   al,al
   14001ac3a:	jne    0x14001ac41
   14001ac3c:	cmp    BYTE PTR [rdx+0x1],bl
   14001ac3f:	je     0x14001ac54
   14001ac41:	mov    BYTE PTR [rcx],al
   14001ac43:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ac47:	mov    BYTE PTR [rcx+0x1],al
   14001ac4a:	add    rcx,0x2
   14001ac4e:	add    rdx,0x2
   14001ac52:	jmp    0x14001ac35
   14001ac54:	mov    WORD PTR [rcx],bx
   14001ac57:	lea    rdx,[rip+0x216ca]        # 0x14003c328
   14001ac5e:	mov    rcx,rdi
   14001ac61:	cmp    BYTE PTR [rcx],bl
   14001ac63:	jne    0x14001ac6a
   14001ac65:	cmp    BYTE PTR [rcx+0x1],bl
   14001ac68:	je     0x14001ac70
   14001ac6a:	add    rcx,0x2
   14001ac6e:	jmp    0x14001ac61
   14001ac70:	movzx  eax,BYTE PTR [rdx]
   14001ac73:	test   al,al
   14001ac75:	jne    0x14001ac7c
   14001ac77:	cmp    BYTE PTR [rdx+0x1],bl
   14001ac7a:	je     0x14001ac8f
   14001ac7c:	mov    BYTE PTR [rcx],al
   14001ac7e:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ac82:	mov    BYTE PTR [rcx+0x1],al
   14001ac85:	add    rcx,0x2
   14001ac89:	add    rdx,0x2
   14001ac8d:	jmp    0x14001ac70
   14001ac8f:	mov    WORD PTR [rcx],bx
   14001ac92:	movzx  edx,WORD PTR [rip+0x2565f]        # 0x1400402f8
   14001ac99:	movzx  r8d,bx
   14001ac9d:	nop    DWORD PTR [rax]
   14001aca0:	movzx  ecx,dx
   14001aca3:	mov    eax,0x66666667
   14001aca8:	imul   ecx
   14001acaa:	sar    edx,0x2
   14001acad:	mov    eax,edx
   14001acaf:	shr    eax,0x1f
   14001acb2:	add    edx,eax
   14001acb4:	lea    eax,[rdx+rdx*4]
   14001acb7:	add    eax,eax
   14001acb9:	sub    ecx,eax
   14001acbb:	add    cl,0x30
   14001acbe:	movsx  rax,r8w
   14001acc2:	mov    BYTE PTR [rax+r11*1],cl
   14001acc6:	inc    r8w
   14001acca:	test   dx,dx
   14001accd:	jne    0x14001aca0
   14001accf:	movsx  rax,r8w
   14001acd3:	mov    BYTE PTR [rax+r11*1],bl
   14001acd7:	movzx  r10d,bx
   14001acdb:	mov    r9d,ebx
   14001acde:	mov    rcx,r11
   14001ace1:	movzx  eax,BYTE PTR [rip+0x2ad18]        # 0x140045a00
   14001ace8:	test   al,al
   14001acea:	je     0x14001acfa
   14001acec:	nop    DWORD PTR [rax+0x0]
   14001acf0:	inc    rcx
   14001acf3:	inc    r9d
   14001acf6:	cmp    BYTE PTR [rcx],bl
   14001acf8:	jne    0x14001acf0
   14001acfa:	dec    r9w
   14001acfe:	cmp    bx,r9w
   14001ad02:	jge    0x14001ad40
   14001ad04:	nop    DWORD PTR [rax+0x0]
   14001ad08:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ad10:	movsx  rdx,r10w
   14001ad14:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001ad19:	movsx  rax,r9w
   14001ad1d:	lea    rcx,[rax+r11*1]
   14001ad21:	movzx  eax,BYTE PTR [rcx]
   14001ad24:	mov    BYTE PTR [rdx+r11*1],al
   14001ad28:	mov    BYTE PTR [rcx],r8b
   14001ad2b:	inc    r10w
   14001ad2f:	dec    r9w
   14001ad33:	cmp    r10w,r9w
   14001ad37:	jl     0x14001ad10
   14001ad39:	movzx  eax,BYTE PTR [rip+0x2acc0]        # 0x140045a00
   14001ad40:	lea    r9,[rip+0x2acd9]        # 0x140045a20
   14001ad47:	mov    rdx,r9
   14001ad4a:	mov    r8,r11
   14001ad4d:	test   al,al
   14001ad4f:	je     0x14001ad9c
   14001ad51:	mov    edi,0x20
   14001ad56:	lea    r14,[rip+0xfffffffffffe52a3]        # 0x140000000
   14001ad5d:	nop    DWORD PTR [rax]
   14001ad60:	cmp    al,0x7f
   14001ad62:	ja     0x14001ad69
   14001ad64:	movzx  ecx,al
   14001ad67:	jmp    0x14001ad7d
   14001ad69:	cmp    al,0xfe
   14001ad6b:	ja     0x14001ad7b
   14001ad6d:	movzx  eax,al
   14001ad70:	movzx  ecx,WORD PTR [r14+rax*2+0x30350]
   14001ad79:	jmp    0x14001ad7d
   14001ad7b:	mov    ecx,edi
   14001ad7d:	mov    WORD PTR [rdx],cx
   14001ad80:	add    rdx,0x2
   14001ad84:	inc    r8
   14001ad87:	movzx  eax,BYTE PTR [r8]
   14001ad8b:	test   al,al
   14001ad8d:	jne    0x14001ad60
   14001ad8f:	movzx  r14d,WORD PTR [rsp+0x30]
   14001ad95:	lea    rdi,[rip+0x2b5b4]        # 0x140046350
   14001ad9c:	mov    WORD PTR [rdx],bx
   14001ad9f:	mov    rdx,r9
   14001ada2:	mov    rcx,rdi
   14001ada5:	cmp    BYTE PTR [rcx],bl
   14001ada7:	jne    0x14001adae
   14001ada9:	cmp    BYTE PTR [rcx+0x1],bl
   14001adac:	je     0x14001adb4
   14001adae:	add    rcx,0x2
   14001adb2:	jmp    0x14001ada5
   14001adb4:	movzx  eax,BYTE PTR [rdx]
   14001adb7:	test   al,al
   14001adb9:	jne    0x14001adc0
   14001adbb:	cmp    BYTE PTR [rdx+0x1],bl
   14001adbe:	je     0x14001add3
   14001adc0:	mov    BYTE PTR [rcx],al
   14001adc2:	movzx  eax,BYTE PTR [rdx+0x1]
   14001adc6:	mov    BYTE PTR [rcx+0x1],al
   14001adc9:	add    rcx,0x2
   14001adcd:	add    rdx,0x2
   14001add1:	jmp    0x14001adb4
   14001add3:	mov    WORD PTR [rcx],bx
   14001add6:	lea    rdx,[rip+0x21543]        # 0x14003c320
   14001addd:	mov    rcx,rdi
   14001ade0:	cmp    BYTE PTR [rcx],bl
   14001ade2:	jne    0x14001ade9
   14001ade4:	cmp    BYTE PTR [rcx+0x1],bl
   14001ade7:	je     0x14001adf0
   14001ade9:	add    rcx,0x2
   14001aded:	jmp    0x14001ade0
   14001adef:	nop
   14001adf0:	movzx  eax,BYTE PTR [rdx]
   14001adf3:	test   al,al
   14001adf5:	jne    0x14001adfc
   14001adf7:	cmp    BYTE PTR [rdx+0x1],bl
   14001adfa:	je     0x14001ae0f
   14001adfc:	mov    BYTE PTR [rcx],al
   14001adfe:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ae02:	mov    BYTE PTR [rcx+0x1],al
   14001ae05:	add    rcx,0x2
   14001ae09:	add    rdx,0x2
   14001ae0d:	jmp    0x14001adf0
   14001ae0f:	mov    WORD PTR [rcx],bx
   14001ae12:	mov    rax,rdi
   14001ae15:	mov    ecx,ebx
   14001ae17:	cmp    BYTE PTR [rax],bl
   14001ae19:	jne    0x14001ae20
   14001ae1b:	cmp    BYTE PTR [rax+0x1],bl
   14001ae1e:	je     0x14001ae28
   14001ae20:	add    rax,0x2
   14001ae24:	inc    ecx
   14001ae26:	jmp    0x14001ae17
   14001ae28:	lea    edi,[rcx+rcx*1]
   14001ae2b:	mov    rcx,rbx
   14001ae2e:	movsxd rbx,edi
   14001ae31:	lea    rdx,[rip+0x2b518]        # 0x140046350
   14001ae38:	test   edi,edi
   14001ae3a:	jle    0x14001ae4b
   14001ae3c:	nop    DWORD PTR [rax+0x0]
   14001ae40:	not    BYTE PTR [rcx+rdx*1]
   14001ae43:	inc    rcx
   14001ae46:	cmp    rcx,rbx
   14001ae49:	jl     0x14001ae40
   14001ae4b:	mov    QWORD PTR [rsp+0x20],0x0
   14001ae54:	lea    r9,[rbp-0x3d]
   14001ae58:	mov    r8d,edi
   14001ae5b:	mov    rax,QWORD PTR [rbp-0x51]
   14001ae5f:	mov    rcx,QWORD PTR [rax]
   14001ae62:	call   QWORD PTR [rip+0x143a8]        # 0x14002f210
   14001ae68:	test   eax,eax
   14001ae6a:	jne    0x14001aea5
   14001ae6c:	call   QWORD PTR [rip+0x142ee]        # 0x14002f160
   14001ae72:	cmp    eax,0x58
   14001ae75:	jae    0x14001ae89
   14001ae77:	mov    eax,eax
   14001ae79:	lea    rcx,[rip+0xfffffffffffe5180]        # 0x140000000
   14001ae80:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14001ae87:	jmp    0x14001ae8e
   14001ae89:	mov    ecx,0x106
   14001ae8e:	mov    DWORD PTR [rip+0x28224],ecx        # 0x1400430b8
   14001ae94:	mov    DWORD PTR [rip+0x2862a],0x2        # 0x1400434c8
   14001ae9e:	mov    BYTE PTR [rip+0x2851b],0x0        # 0x1400433c0
   14001aea5:	xor    ecx,ecx
   14001aea7:	test   edi,edi
   14001aea9:	jle    0x14001aed1
   14001aeab:	lea    rdx,[rip+0x2b49e]        # 0x140046350
   14001aeb2:	nop    DWORD PTR [rax+0x0]
   14001aeb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001aec0:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14001aec4:	not    al
   14001aec6:	mov    BYTE PTR [rcx+rdx*1],al
   14001aec9:	inc    rcx
   14001aecc:	cmp    rcx,rbx
   14001aecf:	jl     0x14001aec0
   14001aed1:	cmp    DWORD PTR [rbp-0x3d],edi
   14001aed4:	jne    0x14001bbc7
   14001aeda:	jmp    0x14001aee1
   14001aedc:	xor    eax,eax
   14001aede:	mov    DWORD PTR [rbp-0x69],eax
   14001aee1:	mov    rbx,QWORD PTR [rip+0x2aa38]        # 0x140045920
   14001aee8:	mov    r9,QWORD PTR [rip+0x23221]        # 0x14003e110
   14001aeef:	movzx  edi,WORD PTR [rsp+0x38]
   14001aef4:	mov    r11,QWORD PTR [rbp-0x61]
   14001aef8:	jmp    0x14001afb4
   14001aefd:	movzx  eax,al
   14001af00:	movsx  rcx,r12w
   14001af04:	movzx  eax,BYTE PTR [rax+r9*1]
   14001af09:	lea    rdx,[rip+0x2b340]        # 0x140046250
   14001af10:	mov    BYTE PTR [rcx+rdx*1],al
   14001af13:	inc    r12w
   14001af17:	jmp    0x14001afb4
   14001af1c:	test   r10w,r10w
   14001af20:	je     0x14001afae
   14001af26:	cmp    r10w,0xd
   14001af2b:	jne    0x14001af4d
   14001af2d:	movzx  eax,al
   14001af30:	add    ax,r10w
   14001af34:	movsx  rcx,ax
   14001af38:	movsx  rdx,r12w
   14001af3c:	movzx  eax,BYTE PTR [rcx+r9*1]
   14001af41:	lea    rcx,[rip+0x2b308]        # 0x140046250
   14001af48:	mov    BYTE PTR [rdx+rcx*1],al
   14001af4b:	jmp    0x14001afa6
   14001af4d:	cmp    r10w,0xe
   14001af52:	jne    0x14001af5d
   14001af54:	movzx  eax,al
   14001af57:	add    ax,0x1d
   14001af5b:	jmp    0x14001af34
   14001af5d:	cmp    r10w,0xf
   14001af62:	jne    0x14001afaa
   14001af64:	test   ecx,ecx
   14001af66:	je     0x14001af7b
   14001af68:	movzx  ecx,BYTE PTR [r8+0x1]
   14001af6d:	shr    cl,0x4
   14001af70:	movzx  eax,dl
   14001af73:	shl    al,0x4
   14001af76:	movzx  edx,cl
   14001af79:	or     dl,al
   14001af7b:	inc    di
   14001af7e:	movzx  eax,dl
   14001af81:	add    ax,0x2d
   14001af85:	mov    ecx,0xff
   14001af8a:	cmp    ax,cx
   14001af8d:	jge    0x14001afc2
   14001af8f:	movsx  rax,ax
   14001af93:	movsx  rcx,r12w
   14001af97:	movzx  eax,BYTE PTR [rax+r9*1]
   14001af9c:	lea    rdx,[rip+0x2b2ad]        # 0x140046250
   14001afa3:	mov    BYTE PTR [rcx+rdx*1],al
   14001afa6:	inc    r12w
   14001afaa:	xor    eax,eax
   14001afac:	jmp    0x14001afb1
   14001afae:	movzx  eax,al
   14001afb1:	mov    DWORD PTR [rbp-0x79],eax
   14001afb4:	inc    di
   14001afb7:	cmp    di,WORD PTR [rbp-0x65]
   14001afbb:	jge    0x14001afd4
   14001afbd:	jmp    0x140018ff0
   14001afc2:	movzx  eax,WORD PTR [r11+0x82]
   14001afca:	add    ax,ax
   14001afcd:	mov    WORD PTR [rip+0x251e0],ax        # 0x1400401b4
   14001afd4:	xor    ebx,ebx
   14001afd6:	movzx  ecx,WORD PTR [rbp-0x7f]
   14001afda:	inc    cx
   14001afdd:	mov    WORD PTR [rbp-0x7f],cx
   14001afe1:	cmp    cx,WORD PTR [r11+0x80]
   14001afe9:	jge    0x14001b029
   14001afeb:	jmp    0x140018ef0
   14001aff0:	mov    eax,0xfffffffc
   14001aff5:	jmp    0x14001bbca
   14001affa:	movzx  eax,BYTE PTR [rbx]
   14001affd:	sub    al,0x30
   14001afff:	cmp    al,0x9
   14001b001:	ja     0x14001b00d
   14001b003:	cmp    BYTE PTR [rbx+0x1],dil
   14001b007:	je     0x140018d4a
   14001b00d:	mov    eax,0x7
   14001b012:	jmp    0x14001bbca
   14001b017:	call   0x14002cbc8
   14001b01c:	int3   
   14001b01d:	call   0x14002cbc8
   14001b022:	int3   
   14001b023:	call   0x14002cbc8
   14001b028:	int3   
   14001b029:	mov    eax,DWORD PTR [rbp-0x59]
   14001b02c:	test   ax,ax
   14001b02f:	jne    0x14001bb06
   14001b035:	mov    r12,QWORD PTR [rbp-0x31]
   14001b039:	mov    rdi,QWORD PTR [rbp-0x71]
   14001b03d:	nop    DWORD PTR [rax]
   14001b040:	test   si,si
   14001b043:	je     0x14001b1ce
   14001b049:	mov    rbx,QWORD PTR [rbp-0x21]
   14001b04d:	mov    r8,rbx
   14001b050:	movzx  edx,WORD PTR [rip+0x2698d]        # 0x1400419e4
   14001b057:	mov    rcx,r13
   14001b05a:	call   0x14002a640
   14001b05f:	test   ax,ax
   14001b062:	jle    0x14001bb06
   14001b068:	mov    rcx,rbx
   14001b06b:	call   0x14001bd30
   14001b070:	test   ax,ax
   14001b073:	je     0x14001b0c7
   14001b075:	movzx  r8d,WORD PTR [rip+0x23ddf]        # 0x14003ee5c
   14001b07d:	mov    WORD PTR [rip+0x2311f],r8w        # 0x14003e1a4
   14001b085:	movzx  ecx,WORD PTR [rip+0x23dd4]        # 0x14003ee60
   14001b08c:	imul   ecx,r8d
   14001b090:	mov    eax,0x51eb851f
   14001b095:	imul   ecx
   14001b097:	mov    ecx,edx
   14001b099:	sar    ecx,0x5
   14001b09c:	mov    eax,ecx
   14001b09e:	shr    eax,0x1f
   14001b0a1:	add    ecx,eax
   14001b0a3:	add    cx,WORD PTR [rip+0x23d9e]        # 0x14003ee48
   14001b0aa:	mov    WORD PTR [rip+0x23d9f],cx        # 0x14003ee50
   14001b0b1:	lea    rdx,[rip+0x230f8]        # 0x14003e1b0
   14001b0b8:	call   QWORD PTR [rip+0x269ea]        # 0x140041aa8
   14001b0be:	test   ax,ax
   14001b0c1:	jne    0x14001aff0
   14001b0c7:	mov    eax,0x20
   14001b0cc:	mov    DWORD PTR [rdi],eax
   14001b0ce:	xor    esi,esi
   14001b0d0:	mov    QWORD PTR [rbp-0x71],r12
   14001b0d4:	mov    rcx,r13
   14001b0d7:	mov    rdx,r12
   14001b0da:	movzx  eax,BYTE PTR [r13+0x1]
   14001b0df:	or     al,BYTE PTR [r13+0x0]
   14001b0e3:	je     0x140018d4a
   14001b0e9:	movzx  r8d,WORD PTR [r12]
   14001b0ee:	xchg   ax,ax
   14001b0f0:	cmp    WORD PTR [rcx],r8w
   14001b0f4:	jne    0x14001b11b
   14001b0f6:	mov    rbx,rcx
   14001b0f9:	nop    DWORD PTR [rax+0x0]
   14001b100:	lea    rdx,[rdx+0x2]
   14001b104:	movzx  eax,WORD PTR [rdx]
   14001b107:	test   ax,ax
   14001b10a:	je     0x14001b12d
   14001b10c:	add    rcx,0x2
   14001b110:	cmp    WORD PTR [rcx],ax
   14001b113:	je     0x14001b100
   14001b115:	mov    rcx,rbx
   14001b118:	mov    rdx,r12
   14001b11b:	add    rcx,0x2
   14001b11f:	movzx  eax,BYTE PTR [rcx+0x1]
   14001b123:	or     al,BYTE PTR [rcx]
   14001b125:	je     0x140018d4a
   14001b12b:	jmp    0x14001b0f0
   14001b12d:	test   rbx,rbx
   14001b130:	je     0x140018d4a
   14001b136:	movzx  ecx,si
   14001b139:	mov    r8,rbx
   14001b13c:	sub    r8,r13
   14001b13f:	lea    r9,[rip+0x2a90a]        # 0x140045a50
   14001b146:	test   r8,r8
   14001b149:	jle    0x14001b165
   14001b14b:	mov    rdx,rsi
   14001b14e:	xchg   ax,ax
   14001b150:	movzx  eax,BYTE PTR [rdx+r13*1]
   14001b155:	mov    BYTE PTR [rdx+r9*1],al
   14001b159:	inc    cx
   14001b15c:	movsx  rdx,cx
   14001b160:	cmp    rdx,r8
   14001b163:	jl     0x14001b150
   14001b165:	movsx  rax,cx
   14001b169:	cmp    rax,0x800
   14001b16f:	jae    0x14001bb00
   14001b175:	mov    BYTE PTR [rax+r9*1],sil
   14001b179:	lea    eax,[rcx+0x1]
   14001b17c:	movsx  rax,ax
   14001b180:	cmp    rax,0x800
   14001b186:	jae    0x14001bafa
   14001b18c:	mov    BYTE PTR [rax+r9*1],sil
   14001b190:	lea    rdx,[rsp+0x30]
   14001b195:	mov    rcx,rbx
   14001b198:	call   0x14002a440
   14001b19d:	test   ax,ax
   14001b1a0:	je     0x14001bade
   14001b1a6:	movsx  rcx,ax
   14001b1aa:	add    rcx,rbx
   14001b1ad:	lea    rdx,[rsp+0x34]
   14001b1b2:	call   0x14002a440
   14001b1b7:	test   ax,ax
   14001b1ba:	je     0x140018d4a
   14001b1c0:	movzx  r14d,WORD PTR [rsp+0x30]
   14001b1c6:	movzx  r15d,WORD PTR [rsp+0x34]
   14001b1cc:	jmp    0x14001b1d0
   14001b1ce:	xor    esi,esi
   14001b1d0:	mov    WORD PTR [rip+0x25122],r14w        # 0x1400402fa
   14001b1d8:	mov    DWORD PTR [rip+0x2511a],0x3fff        # 0x1400402fc
   14001b1e2:	mov    WORD PTR [rip+0x25116],r15w        # 0x140040300
   14001b1ea:	mov    WORD PTR [rip+0x25111],si        # 0x140040302
   14001b1f1:	lea    rax,[rip+0x2a858]        # 0x140045a50
   14001b1f8:	mov    rcx,rax
   14001b1fb:	lea    rbx,[rip+0x2b14e]        # 0x140046350
   14001b202:	mov    rdx,rbx
   14001b205:	movzx  eax,BYTE PTR [rcx]
   14001b208:	test   al,al
   14001b20a:	jne    0x14001b211
   14001b20c:	cmp    BYTE PTR [rcx+0x1],al
   14001b20f:	je     0x14001b224
   14001b211:	mov    BYTE PTR [rdx],al
   14001b213:	movzx  eax,BYTE PTR [rcx+0x1]
   14001b217:	mov    BYTE PTR [rdx+0x1],al
   14001b21a:	add    rdx,0x2
   14001b21e:	add    rcx,0x2
   14001b222:	jmp    0x14001b205
   14001b224:	movzx  eax,BYTE PTR [rcx]
   14001b227:	mov    BYTE PTR [rdx],al
   14001b229:	movzx  eax,BYTE PTR [rcx+0x1]
   14001b22d:	mov    BYTE PTR [rdx+0x1],al
   14001b230:	lea    rdx,[rip+0x210f1]        # 0x14003c328
   14001b237:	mov    rcx,rbx
   14001b23a:	nop    WORD PTR [rax+rax*1+0x0]
   14001b240:	cmp    BYTE PTR [rcx],0x0
   14001b243:	jne    0x14001b24b
   14001b245:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b249:	je     0x14001b251
   14001b24b:	add    rcx,0x2
   14001b24f:	jmp    0x14001b240
   14001b251:	movzx  eax,BYTE PTR [rdx]
   14001b254:	test   al,al
   14001b256:	jne    0x14001b25d
   14001b258:	cmp    BYTE PTR [rdx+0x1],al
   14001b25b:	je     0x14001b270
   14001b25d:	mov    BYTE PTR [rcx],al
   14001b25f:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b263:	mov    BYTE PTR [rcx+0x1],al
   14001b266:	add    rcx,0x2
   14001b26a:	add    rdx,0x2
   14001b26e:	jmp    0x14001b251
   14001b270:	mov    WORD PTR [rcx],0x0
   14001b275:	movzx  edx,r14w
   14001b279:	movzx  r8d,si
   14001b27d:	lea    r11,[rip+0x2a77c]        # 0x140045a00
   14001b284:	nop    DWORD PTR [rax+0x0]
   14001b288:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b290:	movzx  ecx,dx
   14001b293:	mov    eax,0x66666667
   14001b298:	imul   ecx
   14001b29a:	sar    edx,0x2
   14001b29d:	mov    eax,edx
   14001b29f:	shr    eax,0x1f
   14001b2a2:	add    edx,eax
   14001b2a4:	lea    eax,[rdx+rdx*4]
   14001b2a7:	add    eax,eax
   14001b2a9:	sub    ecx,eax
   14001b2ab:	add    cl,0x30
   14001b2ae:	movsx  rax,r8w
   14001b2b2:	mov    BYTE PTR [rax+r11*1],cl
   14001b2b6:	inc    r8w
   14001b2ba:	test   dx,dx
   14001b2bd:	jne    0x14001b290
   14001b2bf:	movsx  rax,r8w
   14001b2c3:	mov    BYTE PTR [rax+r11*1],dl
   14001b2c7:	movzx  r10d,si
   14001b2cb:	mov    r9d,esi
   14001b2ce:	mov    rcx,r11
   14001b2d1:	movzx  eax,BYTE PTR [rip+0x2a728]        # 0x140045a00
   14001b2d8:	test   al,al
   14001b2da:	je     0x14001b2eb
   14001b2dc:	nop    DWORD PTR [rax+0x0]
   14001b2e0:	inc    rcx
   14001b2e3:	inc    r9d
   14001b2e6:	cmp    BYTE PTR [rcx],0x0
   14001b2e9:	jne    0x14001b2e0
   14001b2eb:	dec    r9w
   14001b2ef:	cmp    si,r9w
   14001b2f3:	jge    0x14001b330
   14001b2f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b300:	movsx  rdx,r10w
   14001b304:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001b309:	movsx  rax,r9w
   14001b30d:	lea    rcx,[rax+r11*1]
   14001b311:	movzx  eax,BYTE PTR [rcx]
   14001b314:	mov    BYTE PTR [rdx+r11*1],al
   14001b318:	mov    BYTE PTR [rcx],r8b
   14001b31b:	inc    r10w
   14001b31f:	dec    r9w
   14001b323:	cmp    r10w,r9w
   14001b327:	jl     0x14001b300
   14001b329:	movzx  eax,BYTE PTR [rip+0x2a6d0]        # 0x140045a00
   14001b330:	lea    rdi,[rip+0x2a6e9]        # 0x140045a20
   14001b337:	mov    rdx,rdi
   14001b33a:	mov    r8,r11
   14001b33d:	test   al,al
   14001b33f:	je     0x14001b38d
   14001b341:	mov    ebx,0x20
   14001b346:	lea    r11,[rip+0xfffffffffffe4cb3]        # 0x140000000
   14001b34d:	nop    DWORD PTR [rax]
   14001b350:	cmp    al,0x7f
   14001b352:	ja     0x14001b359
   14001b354:	movzx  ecx,al
   14001b357:	jmp    0x14001b36d
   14001b359:	cmp    al,0xfe
   14001b35b:	ja     0x14001b36b
   14001b35d:	movzx  eax,al
   14001b360:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001b369:	jmp    0x14001b36d
   14001b36b:	mov    ecx,ebx
   14001b36d:	mov    WORD PTR [rdx],cx
   14001b370:	add    rdx,0x2
   14001b374:	inc    r8
   14001b377:	movzx  eax,BYTE PTR [r8]
   14001b37b:	test   al,al
   14001b37d:	jne    0x14001b350
   14001b37f:	lea    r11,[rip+0x2a67a]        # 0x140045a00
   14001b386:	lea    rbx,[rip+0x2afc3]        # 0x140046350
   14001b38d:	mov    WORD PTR [rdx],si
   14001b390:	mov    rdx,rdi
   14001b393:	mov    rcx,rbx
   14001b396:	cmp    BYTE PTR [rcx],0x0
   14001b399:	jne    0x14001b3a1
   14001b39b:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b39f:	je     0x14001b3a7
   14001b3a1:	add    rcx,0x2
   14001b3a5:	jmp    0x14001b396
   14001b3a7:	movzx  eax,BYTE PTR [rdx]
   14001b3aa:	test   al,al
   14001b3ac:	jne    0x14001b3b3
   14001b3ae:	cmp    BYTE PTR [rdx+0x1],al
   14001b3b1:	je     0x14001b3c6
   14001b3b3:	mov    BYTE PTR [rcx],al
   14001b3b5:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b3b9:	mov    BYTE PTR [rcx+0x1],al
   14001b3bc:	add    rcx,0x2
   14001b3c0:	add    rdx,0x2
   14001b3c4:	jmp    0x14001b3a7
   14001b3c6:	mov    WORD PTR [rcx],0x0
   14001b3cb:	lea    rdx,[rip+0x20f56]        # 0x14003c328
   14001b3d2:	mov    rcx,rbx
   14001b3d5:	cmp    BYTE PTR [rcx],0x0
   14001b3d8:	jne    0x14001b3e0
   14001b3da:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b3de:	je     0x14001b3e6
   14001b3e0:	add    rcx,0x2
   14001b3e4:	jmp    0x14001b3d5
   14001b3e6:	movzx  eax,BYTE PTR [rdx]
   14001b3e9:	test   al,al
   14001b3eb:	jne    0x14001b3f2
   14001b3ed:	cmp    BYTE PTR [rdx+0x1],al
   14001b3f0:	je     0x14001b405
   14001b3f2:	mov    BYTE PTR [rcx],al
   14001b3f4:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b3f8:	mov    BYTE PTR [rcx+0x1],al
   14001b3fb:	add    rcx,0x2
   14001b3ff:	add    rdx,0x2
   14001b403:	jmp    0x14001b3e6
   14001b405:	mov    WORD PTR [rcx],0x0
   14001b40a:	mov    edx,0x3fff
   14001b40f:	movzx  r8d,si
   14001b413:	nop    DWORD PTR [rax+0x0]
   14001b417:	nop    WORD PTR [rax+rax*1+0x0]
   14001b420:	movzx  ecx,dx
   14001b423:	mov    eax,0x66666667
   14001b428:	imul   ecx
   14001b42a:	sar    edx,0x2
   14001b42d:	mov    eax,edx
   14001b42f:	shr    eax,0x1f
   14001b432:	add    edx,eax
   14001b434:	lea    eax,[rdx+rdx*4]
   14001b437:	add    eax,eax
   14001b439:	sub    ecx,eax
   14001b43b:	add    cl,0x30
   14001b43e:	movsx  rax,r8w
   14001b442:	mov    BYTE PTR [rax+r11*1],cl
   14001b446:	inc    r8w
   14001b44a:	test   dx,dx
   14001b44d:	jne    0x14001b420
   14001b44f:	movsx  rax,r8w
   14001b453:	mov    BYTE PTR [rax+r11*1],dl
   14001b457:	movzx  r10d,si
   14001b45b:	mov    r9d,esi
   14001b45e:	mov    rcx,r11
   14001b461:	movzx  eax,BYTE PTR [rip+0x2a598]        # 0x140045a00
   14001b468:	test   al,al
   14001b46a:	je     0x14001b47b
   14001b46c:	nop    DWORD PTR [rax+0x0]
   14001b470:	inc    rcx
   14001b473:	inc    r9d
   14001b476:	cmp    BYTE PTR [rcx],0x0
   14001b479:	jne    0x14001b470
   14001b47b:	dec    r9w
   14001b47f:	cmp    si,r9w
   14001b483:	jge    0x14001b4c0
   14001b485:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b490:	movsx  rdx,r10w
   14001b494:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001b499:	movsx  rax,r9w
   14001b49d:	lea    rcx,[rax+r11*1]
   14001b4a1:	movzx  eax,BYTE PTR [rcx]
   14001b4a4:	mov    BYTE PTR [rdx+r11*1],al
   14001b4a8:	mov    BYTE PTR [rcx],r8b
   14001b4ab:	inc    r10w
   14001b4af:	dec    r9w
   14001b4b3:	cmp    r10w,r9w
   14001b4b7:	jl     0x14001b490
   14001b4b9:	movzx  eax,BYTE PTR [rip+0x2a540]        # 0x140045a00
   14001b4c0:	mov    rdx,rdi
   14001b4c3:	mov    r8,r11
   14001b4c6:	test   al,al
   14001b4c8:	je     0x14001b513
   14001b4ca:	mov    ebx,0x20
   14001b4cf:	lea    r11,[rip+0xfffffffffffe4b2a]        # 0x140000000
   14001b4d6:	cmp    al,0x7f
   14001b4d8:	ja     0x14001b4df
   14001b4da:	movzx  ecx,al
   14001b4dd:	jmp    0x14001b4f3
   14001b4df:	cmp    al,0xfe
   14001b4e1:	ja     0x14001b4f1
   14001b4e3:	movzx  eax,al
   14001b4e6:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001b4ef:	jmp    0x14001b4f3
   14001b4f1:	mov    ecx,ebx
   14001b4f3:	mov    WORD PTR [rdx],cx
   14001b4f6:	add    rdx,0x2
   14001b4fa:	inc    r8
   14001b4fd:	movzx  eax,BYTE PTR [r8]
   14001b501:	test   al,al
   14001b503:	jne    0x14001b4d6
   14001b505:	lea    r11,[rip+0x2a4f4]        # 0x140045a00
   14001b50c:	lea    rbx,[rip+0x2ae3d]        # 0x140046350
   14001b513:	mov    WORD PTR [rdx],si
   14001b516:	mov    rdx,rdi
   14001b519:	mov    rcx,rbx
   14001b51c:	nop    DWORD PTR [rax+0x0]
   14001b520:	cmp    BYTE PTR [rcx],0x0
   14001b523:	jne    0x14001b52b
   14001b525:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b529:	je     0x14001b531
   14001b52b:	add    rcx,0x2
   14001b52f:	jmp    0x14001b520
   14001b531:	movzx  eax,BYTE PTR [rdx]
   14001b534:	test   al,al
   14001b536:	jne    0x14001b53d
   14001b538:	cmp    BYTE PTR [rdx+0x1],al
   14001b53b:	je     0x14001b550
   14001b53d:	mov    BYTE PTR [rcx],al
   14001b53f:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b543:	mov    BYTE PTR [rcx+0x1],al
   14001b546:	add    rcx,0x2
   14001b54a:	add    rdx,0x2
   14001b54e:	jmp    0x14001b531
   14001b550:	mov    WORD PTR [rcx],0x0
   14001b555:	lea    rdx,[rip+0x20dcc]        # 0x14003c328
   14001b55c:	mov    rcx,rbx
   14001b55f:	nop
   14001b560:	cmp    BYTE PTR [rcx],0x0
   14001b563:	jne    0x14001b56b
   14001b565:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b569:	je     0x14001b571
   14001b56b:	add    rcx,0x2
   14001b56f:	jmp    0x14001b560
   14001b571:	movzx  eax,BYTE PTR [rdx]
   14001b574:	test   al,al
   14001b576:	jne    0x14001b57d
   14001b578:	cmp    BYTE PTR [rdx+0x1],al
   14001b57b:	je     0x14001b590
   14001b57d:	mov    BYTE PTR [rcx],al
   14001b57f:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b583:	mov    BYTE PTR [rcx+0x1],al
   14001b586:	add    rcx,0x2
   14001b58a:	add    rdx,0x2
   14001b58e:	jmp    0x14001b571
   14001b590:	mov    WORD PTR [rcx],0x0
   14001b595:	movzx  edx,si
   14001b598:	movzx  r8d,si
   14001b59c:	nop    DWORD PTR [rax+0x0]
   14001b5a0:	movzx  ecx,dx
   14001b5a3:	mov    eax,0x66666667
   14001b5a8:	imul   ecx
   14001b5aa:	sar    edx,0x2
   14001b5ad:	mov    eax,edx
   14001b5af:	shr    eax,0x1f
   14001b5b2:	add    edx,eax
   14001b5b4:	lea    eax,[rdx+rdx*4]
   14001b5b7:	add    eax,eax
   14001b5b9:	sub    ecx,eax
   14001b5bb:	add    cl,0x30
   14001b5be:	movsx  rax,r8w
   14001b5c2:	mov    BYTE PTR [rax+r11*1],cl
   14001b5c6:	inc    r8w
   14001b5ca:	test   dx,dx
   14001b5cd:	jne    0x14001b5a0
   14001b5cf:	movsx  rax,r8w
   14001b5d3:	mov    BYTE PTR [rax+r11*1],dl
   14001b5d7:	movzx  r10d,si
   14001b5db:	mov    r9d,esi
   14001b5de:	mov    rcx,r11
   14001b5e1:	movzx  eax,BYTE PTR [rip+0x2a418]        # 0x140045a00
   14001b5e8:	test   al,al
   14001b5ea:	je     0x14001b5fb
   14001b5ec:	nop    DWORD PTR [rax+0x0]
   14001b5f0:	inc    rcx
   14001b5f3:	inc    r9d
   14001b5f6:	cmp    BYTE PTR [rcx],0x0
   14001b5f9:	jne    0x14001b5f0
   14001b5fb:	dec    r9w
   14001b5ff:	cmp    si,r9w
   14001b603:	jge    0x14001b640
   14001b605:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b610:	movsx  rdx,r10w
   14001b614:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001b619:	movsx  rax,r9w
   14001b61d:	lea    rcx,[rax+r11*1]
   14001b621:	movzx  eax,BYTE PTR [rcx]
   14001b624:	mov    BYTE PTR [rdx+r11*1],al
   14001b628:	mov    BYTE PTR [rcx],r8b
   14001b62b:	inc    r10w
   14001b62f:	dec    r9w
   14001b633:	cmp    r10w,r9w
   14001b637:	jl     0x14001b610
   14001b639:	movzx  eax,BYTE PTR [rip+0x2a3c0]        # 0x140045a00
   14001b640:	mov    rdx,rdi
   14001b643:	mov    r8,r11
   14001b646:	test   al,al
   14001b648:	je     0x14001b693
   14001b64a:	mov    ebx,0x20
   14001b64f:	lea    r11,[rip+0xfffffffffffe49aa]        # 0x140000000
   14001b656:	cmp    al,0x7f
   14001b658:	ja     0x14001b65f
   14001b65a:	movzx  ecx,al
   14001b65d:	jmp    0x14001b673
   14001b65f:	cmp    al,0xfe
   14001b661:	ja     0x14001b671
   14001b663:	movzx  eax,al
   14001b666:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001b66f:	jmp    0x14001b673
   14001b671:	mov    ecx,ebx
   14001b673:	mov    WORD PTR [rdx],cx
   14001b676:	add    rdx,0x2
   14001b67a:	inc    r8
   14001b67d:	movzx  eax,BYTE PTR [r8]
   14001b681:	test   al,al
   14001b683:	jne    0x14001b656
   14001b685:	lea    r11,[rip+0x2a374]        # 0x140045a00
   14001b68c:	lea    rbx,[rip+0x2acbd]        # 0x140046350
   14001b693:	mov    WORD PTR [rdx],si
   14001b696:	mov    rdx,rdi
   14001b699:	mov    rcx,rbx
   14001b69c:	nop    DWORD PTR [rax+0x0]
   14001b6a0:	cmp    BYTE PTR [rcx],0x0
   14001b6a3:	jne    0x14001b6ab
   14001b6a5:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b6a9:	je     0x14001b6b1
   14001b6ab:	add    rcx,0x2
   14001b6af:	jmp    0x14001b6a0
   14001b6b1:	movzx  eax,BYTE PTR [rdx]
   14001b6b4:	test   al,al
   14001b6b6:	jne    0x14001b6bd
   14001b6b8:	cmp    BYTE PTR [rdx+0x1],al
   14001b6bb:	je     0x14001b6d0
   14001b6bd:	mov    BYTE PTR [rcx],al
   14001b6bf:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b6c3:	mov    BYTE PTR [rcx+0x1],al
   14001b6c6:	add    rcx,0x2
   14001b6ca:	add    rdx,0x2
   14001b6ce:	jmp    0x14001b6b1
   14001b6d0:	mov    WORD PTR [rcx],0x0
   14001b6d5:	lea    rdx,[rip+0x20c4c]        # 0x14003c328
   14001b6dc:	mov    rcx,rbx
   14001b6df:	nop
   14001b6e0:	cmp    BYTE PTR [rcx],0x0
   14001b6e3:	jne    0x14001b6eb
   14001b6e5:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b6e9:	je     0x14001b6f1
   14001b6eb:	add    rcx,0x2
   14001b6ef:	jmp    0x14001b6e0
   14001b6f1:	movzx  eax,BYTE PTR [rdx]
   14001b6f4:	test   al,al
   14001b6f6:	jne    0x14001b6fd
   14001b6f8:	cmp    BYTE PTR [rdx+0x1],al
   14001b6fb:	je     0x14001b710
   14001b6fd:	mov    BYTE PTR [rcx],al
   14001b6ff:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b703:	mov    BYTE PTR [rcx+0x1],al
   14001b706:	add    rcx,0x2
   14001b70a:	add    rdx,0x2
   14001b70e:	jmp    0x14001b6f1
   14001b710:	mov    WORD PTR [rcx],0x0
   14001b715:	movzx  edx,r15w
   14001b719:	movzx  r8d,si
   14001b71d:	nop    DWORD PTR [rax]
   14001b720:	movzx  ecx,dx
   14001b723:	mov    eax,0x66666667
   14001b728:	imul   ecx
   14001b72a:	sar    edx,0x2
   14001b72d:	mov    eax,edx
   14001b72f:	shr    eax,0x1f
   14001b732:	add    edx,eax
   14001b734:	lea    eax,[rdx+rdx*4]
   14001b737:	add    eax,eax
   14001b739:	sub    ecx,eax
   14001b73b:	add    cl,0x30
   14001b73e:	movsx  rax,r8w
   14001b742:	mov    BYTE PTR [rax+r11*1],cl
   14001b746:	inc    r8w
   14001b74a:	test   dx,dx
   14001b74d:	jne    0x14001b720
   14001b74f:	movsx  rax,r8w
   14001b753:	mov    BYTE PTR [rax+r11*1],dl
   14001b757:	movzx  r10d,si
   14001b75b:	mov    r9d,esi
   14001b75e:	mov    rcx,r11
   14001b761:	movzx  eax,BYTE PTR [rip+0x2a298]        # 0x140045a00
   14001b768:	test   al,al
   14001b76a:	je     0x14001b77b
   14001b76c:	nop    DWORD PTR [rax+0x0]
   14001b770:	inc    rcx
   14001b773:	inc    r9d
   14001b776:	cmp    BYTE PTR [rcx],0x0
   14001b779:	jne    0x14001b770
   14001b77b:	dec    r9w
   14001b77f:	cmp    si,r9w
   14001b783:	jge    0x14001b7c0
   14001b785:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b790:	movsx  rdx,r10w
   14001b794:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001b799:	movsx  rax,r9w
   14001b79d:	lea    rcx,[rax+r11*1]
   14001b7a1:	movzx  eax,BYTE PTR [rcx]
   14001b7a4:	mov    BYTE PTR [rdx+r11*1],al
   14001b7a8:	mov    BYTE PTR [rcx],r8b
   14001b7ab:	inc    r10w
   14001b7af:	dec    r9w
   14001b7b3:	cmp    r10w,r9w
   14001b7b7:	jl     0x14001b790
   14001b7b9:	movzx  eax,BYTE PTR [rip+0x2a240]        # 0x140045a00
   14001b7c0:	mov    rdx,rdi
   14001b7c3:	mov    r8,r11
   14001b7c6:	test   al,al
   14001b7c8:	je     0x14001b813
   14001b7ca:	mov    ebx,0x20
   14001b7cf:	lea    r11,[rip+0xfffffffffffe482a]        # 0x140000000
   14001b7d6:	cmp    al,0x7f
   14001b7d8:	ja     0x14001b7df
   14001b7da:	movzx  ecx,al
   14001b7dd:	jmp    0x14001b7f3
   14001b7df:	cmp    al,0xfe
   14001b7e1:	ja     0x14001b7f1
   14001b7e3:	movzx  eax,al
   14001b7e6:	movzx  ecx,WORD PTR [r11+rax*2+0x30350]
   14001b7ef:	jmp    0x14001b7f3
   14001b7f1:	mov    ecx,ebx
   14001b7f3:	mov    WORD PTR [rdx],cx
   14001b7f6:	add    rdx,0x2
   14001b7fa:	inc    r8
   14001b7fd:	movzx  eax,BYTE PTR [r8]
   14001b801:	test   al,al
   14001b803:	jne    0x14001b7d6
   14001b805:	lea    r11,[rip+0x2a1f4]        # 0x140045a00
   14001b80c:	lea    rbx,[rip+0x2ab3d]        # 0x140046350
   14001b813:	mov    WORD PTR [rdx],si
   14001b816:	mov    rdx,rdi
   14001b819:	mov    rcx,rbx
   14001b81c:	nop    DWORD PTR [rax+0x0]
   14001b820:	cmp    BYTE PTR [rcx],0x0
   14001b823:	jne    0x14001b82b
   14001b825:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b829:	je     0x14001b831
   14001b82b:	add    rcx,0x2
   14001b82f:	jmp    0x14001b820
   14001b831:	movzx  eax,BYTE PTR [rdx]
   14001b834:	test   al,al
   14001b836:	jne    0x14001b83d
   14001b838:	cmp    BYTE PTR [rdx+0x1],al
   14001b83b:	je     0x14001b850
   14001b83d:	mov    BYTE PTR [rcx],al
   14001b83f:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b843:	mov    BYTE PTR [rcx+0x1],al
   14001b846:	add    rcx,0x2
   14001b84a:	add    rdx,0x2
   14001b84e:	jmp    0x14001b831
   14001b850:	mov    WORD PTR [rcx],0x0
   14001b855:	lea    rdx,[rip+0x20acc]        # 0x14003c328
   14001b85c:	mov    rcx,rbx
   14001b85f:	nop
   14001b860:	cmp    BYTE PTR [rcx],0x0
   14001b863:	jne    0x14001b86b
   14001b865:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b869:	je     0x14001b871
   14001b86b:	add    rcx,0x2
   14001b86f:	jmp    0x14001b860
   14001b871:	movzx  eax,BYTE PTR [rdx]
   14001b874:	test   al,al
   14001b876:	jne    0x14001b87d
   14001b878:	cmp    BYTE PTR [rdx+0x1],al
   14001b87b:	je     0x14001b890
   14001b87d:	mov    BYTE PTR [rcx],al
   14001b87f:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b883:	mov    BYTE PTR [rcx+0x1],al
   14001b886:	add    rcx,0x2
   14001b88a:	add    rdx,0x2
   14001b88e:	jmp    0x14001b871
   14001b890:	mov    WORD PTR [rcx],0x0
   14001b895:	movzx  edx,si
   14001b898:	movzx  r8d,si
   14001b89c:	nop    DWORD PTR [rax+0x0]
   14001b8a0:	movzx  ecx,dx
   14001b8a3:	mov    eax,0x66666667
   14001b8a8:	imul   ecx
   14001b8aa:	sar    edx,0x2
   14001b8ad:	mov    eax,edx
   14001b8af:	shr    eax,0x1f
   14001b8b2:	add    edx,eax
   14001b8b4:	lea    eax,[rdx+rdx*4]
   14001b8b7:	add    eax,eax
   14001b8b9:	sub    ecx,eax
   14001b8bb:	add    cl,0x30
   14001b8be:	movsx  rax,r8w
   14001b8c2:	mov    BYTE PTR [rax+r11*1],cl
   14001b8c6:	inc    r8w
   14001b8ca:	test   dx,dx
   14001b8cd:	jne    0x14001b8a0
   14001b8cf:	movsx  rax,r8w
   14001b8d3:	mov    BYTE PTR [rax+r11*1],dl
   14001b8d7:	movzx  r10d,si
   14001b8db:	mov    r9d,esi
   14001b8de:	mov    rcx,r11
   14001b8e1:	movzx  eax,BYTE PTR [rip+0x2a118]        # 0x140045a00
   14001b8e8:	test   al,al
   14001b8ea:	je     0x14001b8fb
   14001b8ec:	nop    DWORD PTR [rax+0x0]
   14001b8f0:	inc    rcx
   14001b8f3:	inc    r9d
   14001b8f6:	cmp    BYTE PTR [rcx],0x0
   14001b8f9:	jne    0x14001b8f0
   14001b8fb:	dec    r9w
   14001b8ff:	cmp    si,r9w
   14001b903:	jge    0x14001b940
   14001b905:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b910:	movsx  rdx,r10w
   14001b914:	movzx  r8d,BYTE PTR [rdx+r11*1]
   14001b919:	movsx  rax,r9w
   14001b91d:	lea    rcx,[rax+r11*1]
   14001b921:	movzx  eax,BYTE PTR [rcx]
   14001b924:	mov    BYTE PTR [rdx+r11*1],al
   14001b928:	mov    BYTE PTR [rcx],r8b
   14001b92b:	inc    r10w
   14001b92f:	dec    r9w
   14001b933:	cmp    r10w,r9w
   14001b937:	jl     0x14001b910
   14001b939:	movzx  eax,BYTE PTR [rip+0x2a0c0]        # 0x140045a00
   14001b940:	mov    rdx,rdi
   14001b943:	mov    r8,r11
   14001b946:	test   al,al
   14001b948:	je     0x14001b990
   14001b94a:	mov    ebx,0x20
   14001b94f:	lea    r12,[rip+0xfffffffffffe46aa]        # 0x140000000
   14001b956:	cmp    al,0x7f
   14001b958:	ja     0x14001b95f
   14001b95a:	movzx  ecx,al
   14001b95d:	jmp    0x14001b973
   14001b95f:	cmp    al,0xfe
   14001b961:	ja     0x14001b971
   14001b963:	movzx  eax,al
   14001b966:	movzx  ecx,WORD PTR [r12+rax*2+0x30350]
   14001b96f:	jmp    0x14001b973
   14001b971:	mov    ecx,ebx
   14001b973:	mov    WORD PTR [rdx],cx
   14001b976:	add    rdx,0x2
   14001b97a:	inc    r8
   14001b97d:	movzx  eax,BYTE PTR [r8]
   14001b981:	test   al,al
   14001b983:	jne    0x14001b956
   14001b985:	mov    r12,QWORD PTR [rbp-0x31]
   14001b989:	lea    rbx,[rip+0x2a9c0]        # 0x140046350
   14001b990:	mov    WORD PTR [rdx],si
   14001b993:	mov    rdx,rdi
   14001b996:	mov    rcx,rbx
   14001b999:	nop    DWORD PTR [rax+0x0]
   14001b9a0:	cmp    BYTE PTR [rcx],0x0
   14001b9a3:	jne    0x14001b9ab
   14001b9a5:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b9a9:	je     0x14001b9b1
   14001b9ab:	add    rcx,0x2
   14001b9af:	jmp    0x14001b9a0
   14001b9b1:	movzx  eax,BYTE PTR [rdx]
   14001b9b4:	test   al,al
   14001b9b6:	jne    0x14001b9bd
   14001b9b8:	cmp    BYTE PTR [rdx+0x1],al
   14001b9bb:	je     0x14001b9d0
   14001b9bd:	mov    BYTE PTR [rcx],al
   14001b9bf:	movzx  eax,BYTE PTR [rdx+0x1]
   14001b9c3:	mov    BYTE PTR [rcx+0x1],al
   14001b9c6:	add    rcx,0x2
   14001b9ca:	add    rdx,0x2
   14001b9ce:	jmp    0x14001b9b1
   14001b9d0:	mov    WORD PTR [rcx],0x0
   14001b9d5:	lea    rdx,[rip+0x20944]        # 0x14003c320
   14001b9dc:	mov    rcx,rbx
   14001b9df:	nop
   14001b9e0:	cmp    BYTE PTR [rcx],0x0
   14001b9e3:	jne    0x14001b9eb
   14001b9e5:	cmp    BYTE PTR [rcx+0x1],0x0
   14001b9e9:	je     0x14001b9f1
   14001b9eb:	add    rcx,0x2
   14001b9ef:	jmp    0x14001b9e0
   14001b9f1:	movzx  eax,BYTE PTR [rdx]
   14001b9f4:	test   al,al
   14001b9f6:	jne    0x14001b9fd
   14001b9f8:	cmp    BYTE PTR [rdx+0x1],al
   14001b9fb:	je     0x14001ba10
   14001b9fd:	mov    BYTE PTR [rcx],al
   14001b9ff:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ba03:	mov    BYTE PTR [rcx+0x1],al
   14001ba06:	add    rcx,0x2
   14001ba0a:	add    rdx,0x2
   14001ba0e:	jmp    0x14001b9f1
   14001ba10:	mov    WORD PTR [rcx],0x0
   14001ba15:	mov    rax,rbx
   14001ba18:	mov    ecx,esi
   14001ba1a:	nop    WORD PTR [rax+rax*1+0x0]
   14001ba20:	cmp    BYTE PTR [rax],0x0
   14001ba23:	jne    0x14001ba2b
   14001ba25:	cmp    BYTE PTR [rax+0x1],0x0
   14001ba29:	je     0x14001ba33
   14001ba2b:	add    rax,0x2
   14001ba2f:	inc    ecx
   14001ba31:	jmp    0x14001ba20
   14001ba33:	lea    edi,[rcx+rcx*1]
   14001ba36:	mov    rcx,rsi
   14001ba39:	movsxd rbx,edi
   14001ba3c:	lea    rdx,[rip+0x2a90d]        # 0x140046350
   14001ba43:	test   edi,edi
   14001ba45:	jle    0x14001ba5b
   14001ba47:	nop    WORD PTR [rax+rax*1+0x0]
   14001ba50:	not    BYTE PTR [rcx+rdx*1]
   14001ba53:	inc    rcx
   14001ba56:	cmp    rcx,rbx
   14001ba59:	jl     0x14001ba50
   14001ba5b:	mov    QWORD PTR [rsp+0x20],rsi
   14001ba60:	lea    r9,[rbp-0x65]
   14001ba64:	mov    r8d,edi
   14001ba67:	mov    rax,QWORD PTR [rbp-0x51]
   14001ba6b:	mov    rcx,QWORD PTR [rax]
   14001ba6e:	call   QWORD PTR [rip+0x1379c]        # 0x14002f210
   14001ba74:	test   eax,eax
   14001ba76:	jne    0x14001bab1
   14001ba78:	call   QWORD PTR [rip+0x136e2]        # 0x14002f160
   14001ba7e:	cmp    eax,0x58
   14001ba81:	jae    0x14001ba95
   14001ba83:	mov    eax,eax
   14001ba85:	lea    rcx,[rip+0xfffffffffffe4574]        # 0x140000000
   14001ba8c:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14001ba93:	jmp    0x14001ba9a
   14001ba95:	mov    ecx,0x106
   14001ba9a:	mov    DWORD PTR [rip+0x27618],ecx        # 0x1400430b8
   14001baa0:	mov    DWORD PTR [rip+0x27a1e],0x2        # 0x1400434c8
   14001baaa:	mov    BYTE PTR [rip+0x2790f],0x0        # 0x1400433c0
   14001bab1:	mov    rcx,rsi
   14001bab4:	test   edi,edi
   14001bab6:	jle    0x14001bacb
   14001bab8:	lea    rdx,[rip+0x2a891]        # 0x140046350
   14001babf:	nop
   14001bac0:	not    BYTE PTR [rcx+rdx*1]
   14001bac3:	inc    rcx
   14001bac6:	cmp    rcx,rbx
   14001bac9:	jl     0x14001bac0
   14001bacb:	cmp    DWORD PTR [rbp-0x65],edi
   14001bace:	jne    0x14001bbc7
   14001bad4:	mov    esi,0x1
   14001bad9:	jmp    0x14001b039
   14001bade:	movzx  eax,BYTE PTR [rbx]
   14001bae1:	sub    al,0x30
   14001bae3:	cmp    al,0x9
   14001bae5:	ja     0x14001b00d
   14001baeb:	cmp    BYTE PTR [rbx+0x1],sil
   14001baef:	jne    0x14001b00d
   14001baf5:	jmp    0x140018d4a
   14001bafa:	call   0x14002cbc8
   14001baff:	int3   
   14001bb00:	call   0x14002cbc8
   14001bb05:	int3   
   14001bb06:	mov    rcx,QWORD PTR [rbp-0x51]
   14001bb0a:	call   0x14002a9e0
   14001bb0f:	xor    r8d,r8d
   14001bb12:	xor    edx,edx
   14001bb14:	mov    r15,QWORD PTR [rbp-0x11]
   14001bb18:	mov    rcx,r15
   14001bb1b:	call   0x14002ad10
   14001bb20:	cmp    eax,0xffffffff
   14001bb23:	jne    0x14001bb2f
   14001bb25:	mov    eax,0x3
   14001bb2a:	jmp    0x14001bbca
   14001bb2f:	xor    r8d,r8d
   14001bb32:	xor    edx,edx
   14001bb34:	mov    r14,QWORD PTR [rbp-0x49]
   14001bb38:	mov    rcx,r14
   14001bb3b:	call   0x14002ad10
   14001bb40:	cmp    eax,0xffffffff
   14001bb43:	je     0x14001bb25
   14001bb45:	xor    r12d,r12d
   14001bb48:	mov    edi,r12d
   14001bb4b:	mov    rsi,QWORD PTR [rbp-0x19]
   14001bb4f:	cmp    DWORD PTR [rsi],r12d
   14001bb52:	jbe    0x14001bb99
   14001bb54:	nop    DWORD PTR [rax+0x0]
   14001bb58:	nop    DWORD PTR [rax+rax*1+0x0]
   14001bb60:	mov    r8,r14
   14001bb63:	movzx  edx,WORD PTR [rip+0x25e7a]        # 0x1400419e4
   14001bb6a:	mov    rcx,r13
   14001bb6d:	call   0x14002a640
   14001bb72:	test   ax,ax
   14001bb75:	jle    0x14001bb99
   14001bb77:	mov    rcx,r13
   14001bb7a:	call   0x14002af90
   14001bb7f:	mov    ebx,eax
   14001bb81:	mov    r8d,eax
   14001bb84:	mov    rdx,r13
   14001bb87:	mov    rcx,r15
   14001bb8a:	call   0x14002a820
   14001bb8f:	cmp    eax,ebx
   14001bb91:	jne    0x14001bb25
   14001bb93:	inc    edi
   14001bb95:	cmp    edi,DWORD PTR [rsi]
   14001bb97:	jb     0x14001bb60
   14001bb99:	mov    rcx,r14
   14001bb9c:	call   0x14002a9e0
   14001bba1:	lea    rcx,[rip+0x158e0]        # 0x140031488
   14001bba8:	call   QWORD PTR [rip+0x138b2]        # 0x14002f460
   14001bbae:	mov    rcx,QWORD PTR [rbp-0x71]
   14001bbb2:	call   QWORD PTR [rip+0x138c8]        # 0x14002f480
   14001bbb8:	mov    rcx,r13
   14001bbbb:	call   QWORD PTR [rip+0x138bf]        # 0x14002f480
   14001bbc1:	movzx  eax,r12w
   14001bbc5:	jmp    0x14001bbca
   14001bbc7:	or     eax,0xffffffff
   14001bbca:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001bbce:	xor    rcx,rsp
   14001bbd1:	call   0x14002c960
   14001bbd6:	mov    rbx,QWORD PTR [rsp+0x120]
   14001bbde:	add    rsp,0xe0
   14001bbe5:	pop    r15
   14001bbe7:	pop    r14
   14001bbe9:	pop    r13
   14001bbeb:	pop    r12
   14001bbed:	pop    rdi
   14001bbee:	pop    rsi
   14001bbef:	pop    rbp
   14001bbf0:	ret    
   14001bbf1:	int3   
   14001bbf2:	int3   
   14001bbf3:	int3   
   14001bbf4:	int3   
   14001bbf5:	int3   
   14001bbf6:	int3   
   14001bbf7:	int3   
   14001bbf8:	int3   
   14001bbf9:	int3   
   14001bbfa:	int3   
   14001bbfb:	int3   
   14001bbfc:	int3   
   14001bbfd:	int3   
   14001bbfe:	int3   
   14001bbff:	int3   
   14001bc00:	rex push rdi
   14001bc02:	sub    rsp,0x60
   14001bc06:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001bc0f:	mov    QWORD PTR [rsp+0x70],rbx
   14001bc14:	mov    QWORD PTR [rsp+0x78],rsi
   14001bc19:	mov    rax,QWORD PTR [rip+0x203e0]        # 0x14003c000
   14001bc20:	xor    rax,rsp
   14001bc23:	mov    QWORD PTR [rsp+0x50],rax
   14001bc28:	lea    rdx,[rsp+0x30]
   14001bc2d:	lea    rax,[rsp+0x30]
   14001bc32:	sub    rcx,rax
   14001bc35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001bc40:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14001bc44:	mov    BYTE PTR [rdx],al
   14001bc46:	lea    rdx,[rdx+0x1]
   14001bc4a:	test   al,al
   14001bc4c:	jne    0x14001bc40
   14001bc4e:	mov    ecx,0x10
   14001bc53:	call   QWORD PTR [rip+0x13d3f]        # 0x14002f998
   14001bc59:	mov    rbx,rax
   14001bc5c:	mov    QWORD PTR [rsp+0x20],rax
   14001bc61:	xor    edi,edi
   14001bc63:	test   rax,rax
   14001bc66:	je     0x14001bc9d
   14001bc68:	mov    WORD PTR [rax],di
   14001bc6b:	mov    QWORD PTR [rax+0x8],rdi
   14001bc6f:	lea    rcx,[rsp+0x30]
   14001bc74:	call   QWORD PTR [rip+0x13606]        # 0x14002f280
   14001bc7a:	test   eax,eax
   14001bc7c:	jle    0x14001bca0
   14001bc7e:	inc    eax
   14001bc80:	movsxd rcx,eax
   14001bc83:	call   QWORD PTR [rip+0x13d0f]        # 0x14002f998
   14001bc89:	mov    QWORD PTR [rbx+0x8],rax
   14001bc8d:	lea    rdx,[rsp+0x30]
   14001bc92:	mov    rcx,rax
   14001bc95:	call   QWORD PTR [rip+0x135bd]        # 0x14002f258
   14001bc9b:	jmp    0x14001bca0
   14001bc9d:	mov    rbx,rdi
   14001bca0:	mov    edx,0x1
   14001bca5:	mov    rcx,rbx
   14001bca8:	call   0x14002ab70
   14001bcad:	mov    rsi,rax
   14001bcb0:	test   rax,rax
   14001bcb3:	jne    0x14001bccb
   14001bcb5:	mov    DWORD PTR [rip+0x224ed],edi        # 0x14003e1a8
   14001bcbb:	mov    WORD PTR [rip+0x23182],di        # 0x14003ee44
   14001bcc2:	mov    WORD PTR [rip+0x23193],di        # 0x14003ee5c
   14001bcc9:	jmp    0x14001bd0f
   14001bccb:	test   rbx,rbx
   14001bcce:	je     0x14001bce8
   14001bcd0:	mov    rcx,QWORD PTR [rbx+0x8]
   14001bcd4:	test   rcx,rcx
   14001bcd7:	je     0x14001bcdf
   14001bcd9:	call   QWORD PTR [rip+0x13e99]        # 0x14002fb78
   14001bcdf:	mov    rcx,rbx
   14001bce2:	call   QWORD PTR [rip+0x13e90]        # 0x14002fb78
   14001bce8:	xor    edx,edx
   14001bcea:	mov    rcx,QWORD PTR [rsi]
   14001bced:	call   QWORD PTR [rip+0x1352d]        # 0x14002f220
   14001bcf3:	mov    DWORD PTR [rip+0x224af],eax        # 0x14003e1a8
   14001bcf9:	mov    WORD PTR [rip+0x23144],di        # 0x14003ee44
   14001bd00:	mov    WORD PTR [rip+0x23155],di        # 0x14003ee5c
   14001bd07:	mov    rcx,rsi
   14001bd0a:	call   0x14002a9e0
   14001bd0f:	mov    rcx,QWORD PTR [rsp+0x50]
   14001bd14:	xor    rcx,rsp
   14001bd17:	call   0x14002c960
   14001bd1c:	mov    rbx,QWORD PTR [rsp+0x70]
   14001bd21:	mov    rsi,QWORD PTR [rsp+0x78]
   14001bd26:	add    rsp,0x60
   14001bd2a:	pop    rdi
   14001bd2b:	ret    
   14001bd2c:	int3   
   14001bd2d:	int3   
   14001bd2e:	int3   
   14001bd2f:	int3   
   14001bd30:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd35:	push   rdi
   14001bd36:	sub    rsp,0x20
   14001bd3a:	mov    ebx,DWORD PTR [rip+0x22468]        # 0x14003e1a8
   14001bd40:	mov    edi,0x1
   14001bd45:	xor    edx,edx
   14001bd47:	mov    r8d,edi
   14001bd4a:	call   0x14002ad10
   14001bd4f:	test   ebx,ebx
   14001bd51:	je     0x14001bd63
   14001bd53:	imul   eax,eax,0x64
   14001bd56:	xor    edx,edx
   14001bd58:	div    ebx
   14001bd5a:	mov    WORD PTR [rip+0x230fb],ax        # 0x14003ee5c
   14001bd61:	jmp    0x14001bd6a
   14001bd63:	movzx  eax,WORD PTR [rip+0x230f2]        # 0x14003ee5c
   14001bd6a:	movzx  r8d,WORD PTR [rip+0x230d2]        # 0x14003ee44
   14001bd72:	movzx  edx,ax
   14001bd75:	sub    edx,r8d
   14001bd78:	cmp    edx,edi
   14001bd7a:	jl     0x14001bd96
   14001bd7c:	inc    r8w
   14001bd80:	movzx  eax,di
   14001bd83:	mov    WORD PTR [rip+0x230b9],r8w        # 0x14003ee44
   14001bd8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd90:	add    rsp,0x20
   14001bd94:	pop    rdi
   14001bd95:	ret    
   14001bd96:	xor    eax,eax
   14001bd98:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd9d:	add    rsp,0x20
   14001bda1:	pop    rdi
   14001bda2:	ret    
   14001bda3:	int3   
   14001bda4:	int3   
   14001bda5:	int3   
   14001bda6:	int3   
   14001bda7:	int3   
   14001bda8:	int3   
   14001bda9:	int3   
   14001bdaa:	int3   
   14001bdab:	int3   
   14001bdac:	int3   
   14001bdad:	int3   
   14001bdae:	int3   
   14001bdaf:	int3   
   14001bdb0:	movsx  eax,cx
   14001bdb3:	movsx  ecx,WORD PTR [rip+0x2220a]        # 0x14003dfc4
   14001bdba:	imul   eax,eax,0x64
   14001bdbd:	cdq    
   14001bdbe:	idiv   ecx
   14001bdc0:	movzx  edx,WORD PTR [rip+0x2307d]        # 0x14003ee44
   14001bdc7:	mov    WORD PTR [rip+0x2308e],ax        # 0x14003ee5c
   14001bdce:	movzx  eax,ax
   14001bdd1:	sub    eax,edx
   14001bdd3:	cmp    eax,0x1
   14001bdd6:	jl     0x14001bde8
   14001bdd8:	inc    dx
   14001bddb:	mov    eax,0x1
   14001bde0:	mov    WORD PTR [rip+0x2305d],dx        # 0x14003ee44
   14001bde7:	ret    
   14001bde8:	xor    eax,eax
   14001bdea:	ret    
   14001bdeb:	int3   
   14001bdec:	int3   
   14001bded:	int3   
   14001bdee:	int3   
   14001bdef:	int3   
   14001bdf0:	rex push rdi
   14001bdf2:	sub    rsp,0x30
   14001bdf6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001bdff:	mov    QWORD PTR [rsp+0x40],rbx
   14001be04:	mov    rbx,r8
   14001be07:	mov    rdi,rcx
   14001be0a:	lea    rcx,[rsp+0x58]
   14001be0f:	call   QWORD PTR [rip+0x13b5b]        # 0x14002f970
   14001be15:	nop
   14001be16:	mov    edx,0x66
   14001be1b:	lea    rcx,[rsp+0x58]
   14001be20:	call   QWORD PTR [rip+0x13b5a]        # 0x14002f980
   14001be26:	mov    edx,0x5053
   14001be2b:	mov    r9,rbx
   14001be2e:	mov    rcx,rdi
   14001be31:	call   0x140017500
   14001be36:	test   ax,ax
   14001be39:	jne    0x14001be3f
   14001be3b:	xor    ebx,ebx
   14001be3d:	jmp    0x14001be57
   14001be3f:	mov    r8d,0x5053
   14001be45:	lea    rdx,[rip+0x156b4]        # 0x140031500
   14001be4c:	mov    rcx,rdi
   14001be4f:	call   0x1400178a0
   14001be54:	movzx  ebx,ax
   14001be57:	lea    rcx,[rsp+0x58]
   14001be5c:	call   QWORD PTR [rip+0x13b16]        # 0x14002f978
   14001be62:	movzx  eax,bx
   14001be65:	mov    rbx,QWORD PTR [rsp+0x40]
   14001be6a:	add    rsp,0x30
   14001be6e:	pop    rdi
   14001be6f:	ret    
   14001be70:	mov    rax,rsp
   14001be73:	push   rdi
   14001be74:	sub    rsp,0x190
   14001be7b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001be84:	mov    QWORD PTR [rax+0x10],rbx
   14001be88:	mov    QWORD PTR [rax+0x18],rsi
   14001be8c:	mov    rax,QWORD PTR [rip+0x2016d]        # 0x14003c000
   14001be93:	xor    rax,rsp
   14001be96:	mov    QWORD PTR [rsp+0x180],rax
   14001be9e:	movzx  esi,dx
   14001bea1:	mov    rdi,rcx
   14001bea4:	lea    rdx,[rcx+0x3d2]
   14001beab:	lea    rcx,[rsp+0x50]
   14001beb0:	call   QWORD PTR [rip+0x133a2]        # 0x14002f258
   14001beb6:	cmp    BYTE PTR [rdi+0x3d2],0x0
   14001bebd:	je     0x14001bf13
   14001bebf:	mov    ecx,0x10
   14001bec4:	call   QWORD PTR [rip+0x13ace]        # 0x14002f998
   14001beca:	mov    rbx,rax
   14001becd:	mov    QWORD PTR [rsp+0x40],rax
   14001bed2:	test   rax,rax
   14001bed5:	je     0x14001bf0e
   14001bed7:	xor    eax,eax
   14001bed9:	mov    WORD PTR [rbx],ax
   14001bedc:	mov    QWORD PTR [rbx+0x8],rax
   14001bee0:	lea    rcx,[rsp+0x50]
   14001bee5:	call   QWORD PTR [rip+0x13395]        # 0x14002f280
   14001beeb:	test   eax,eax
   14001beed:	jle    0x14001bf11
   14001beef:	inc    eax
   14001bef1:	movsxd rcx,eax
   14001bef4:	call   QWORD PTR [rip+0x13a9e]        # 0x14002f998
   14001befa:	mov    QWORD PTR [rbx+0x8],rax
   14001befe:	lea    rdx,[rsp+0x50]
   14001bf03:	mov    rcx,rax
   14001bf06:	call   QWORD PTR [rip+0x1334c]        # 0x14002f258
   14001bf0c:	jmp    0x14001bf11
   14001bf0e:	mov    rbx,rax
   14001bf11:	jmp    0x14001bf17
   14001bf13:	xor    eax,eax
   14001bf15:	mov    ebx,eax
   14001bf17:	mov    eax,0x1000
   14001bf1c:	mov    WORD PTR [rsp+0x28],ax
   14001bf21:	mov    WORD PTR [rsp+0x20],si
   14001bf26:	mov    r9,rbx
   14001bf29:	mov    rcx,rdi
   14001bf2c:	call   0x140017ad0
   14001bf31:	mov    rcx,QWORD PTR [rsp+0x180]
   14001bf39:	xor    rcx,rsp
   14001bf3c:	call   0x14002c960
   14001bf41:	lea    r11,[rsp+0x190]
   14001bf49:	mov    rbx,QWORD PTR [r11+0x18]
   14001bf4d:	mov    rsi,QWORD PTR [r11+0x20]
   14001bf51:	mov    rsp,r11
   14001bf54:	pop    rdi
   14001bf55:	ret    
   14001bf56:	int3   
   14001bf57:	int3   
   14001bf58:	int3   
   14001bf59:	int3   
   14001bf5a:	int3   
   14001bf5b:	int3   
   14001bf5c:	int3   
   14001bf5d:	int3   
   14001bf5e:	int3   
   14001bf5f:	int3   
   14001bf60:	mov    QWORD PTR [rsp+0x10],rbx
   14001bf65:	mov    QWORD PTR [rsp+0x18],rsi
   14001bf6a:	push   rdi
   14001bf6b:	sub    rsp,0x4f0
   14001bf72:	mov    rax,QWORD PTR [rip+0x20087]        # 0x14003c000
   14001bf79:	xor    rax,rsp
   14001bf7c:	mov    QWORD PTR [rsp+0x4e0],rax
   14001bf84:	movzx  eax,BYTE PTR [rdx]
   14001bf87:	mov    rsi,r9
   14001bf8a:	movzx  r10d,r8w
   14001bf8e:	mov    rdi,rcx
   14001bf91:	lea    r9,[rsp+0x20]
   14001bf96:	test   al,al
   14001bf98:	je     0x14001bfdd
   14001bf9a:	mov    r8,QWORD PTR [rip+0x21357]        # 0x14003d2f8
   14001bfa1:	lea    r11,[rip+0x15258]        # 0x140031200
   14001bfa8:	cmp    al,0x20
   14001bfaa:	jae    0x14001bfb6
   14001bfac:	movzx  ecx,al
   14001bfaf:	movzx  eax,WORD PTR [r11+rcx*2]
   14001bfb4:	jmp    0x14001bfcb
   14001bfb6:	cmp    al,0x80
   14001bfb8:	jae    0x14001bfbf
   14001bfba:	movzx  eax,al
   14001bfbd:	jmp    0x14001bfcb
   14001bfbf:	movzx  ecx,al
   14001bfc2:	movzx  eax,WORD PTR [r8+rcx*2-0x100]
   14001bfcb:	inc    rdx
   14001bfce:	mov    WORD PTR [r9],ax
   14001bfd2:	add    r9,0x2
   14001bfd6:	movzx  eax,BYTE PTR [rdx]
   14001bfd9:	test   al,al
   14001bfdb:	jne    0x14001bfa8
   14001bfdd:	xor    r8d,r8d
   14001bfe0:	lea    rax,[rsp+0x20]
   14001bfe5:	mov    WORD PTR [r9],r8w
   14001bfe9:	mov    edx,r8d
   14001bfec:	nop    DWORD PTR [rax+0x0]
   14001bff0:	cmp    BYTE PTR [rax],r8b
   14001bff3:	jne    0x14001bffb
   14001bff5:	cmp    BYTE PTR [rax+0x1],r8b
   14001bff9:	je     0x14001c003
   14001bffb:	add    rax,0x2
   14001bfff:	inc    edx
   14001c001:	jmp    0x14001bff0
   14001c003:	mov    rax,QWORD PTR [rdi+0x10]
   14001c007:	mov    ecx,0x5
   14001c00c:	add    dx,dx
   14001c00f:	mov    WORD PTR [rax],cx
   14001c012:	mov    rcx,QWORD PTR [rdi+0x10]
   14001c016:	mov    rax,QWORD PTR [rdi+0x148]
   14001c01d:	mov    QWORD PTR [rcx+0x8],rax
   14001c021:	mov    rax,QWORD PTR [rdi+0x10]
   14001c025:	lea    rcx,[rsp+0x20]
   14001c02a:	mov    QWORD PTR [rax+0x18],rcx
   14001c02e:	mov    rax,QWORD PTR [rdi+0x10]
   14001c032:	lea    rcx,[rsp+0x280]
   14001c03a:	mov    WORD PTR [rax+0x20],r8w
   14001c03f:	mov    rax,QWORD PTR [rdi+0x10]
   14001c043:	mov    r8d,0x12c
   14001c049:	mov    WORD PTR [rax+0x22],r8w
   14001c04e:	mov    rax,QWORD PTR [rdi+0x10]
   14001c052:	mov    WORD PTR [rax+0x24],r10w
   14001c057:	mov    rax,QWORD PTR [rdi+0x10]
   14001c05b:	mov    WORD PTR [rax+0x32],dx
   14001c05f:	mov    rax,QWORD PTR [rdi+0x10]
   14001c063:	mov    QWORD PTR [rax+0x28],rcx
   14001c067:	mov    rax,QWORD PTR [rdi+0x10]
   14001c06b:	mov    WORD PTR [rax+0x30],r8w
   14001c070:	mov    rcx,QWORD PTR [rdi+0x10]
   14001c074:	call   QWORD PTR [rdi+0x8]
   14001c077:	mov    rdx,QWORD PTR [rdi+0x10]
   14001c07b:	movzx  ebx,WORD PTR [rdx]
   14001c07e:	mov    WORD PTR [rdi+0x150],bx
   14001c085:	movzx  edx,WORD PTR [rdx+0x2]
   14001c089:	mov    WORD PTR [rdi+0x3cc],dx
   14001c090:	test   bx,bx
   14001c093:	jne    0x14001c0ac
   14001c095:	mov    r8,QWORD PTR [rip+0x2125c]        # 0x14003d2f8
   14001c09c:	lea    rdx,[rsp+0x280]
   14001c0a4:	mov    rcx,rsi
   14001c0a7:	call   0x14002b010
   14001c0ac:	movzx  eax,bx
   14001c0af:	mov    rcx,QWORD PTR [rsp+0x4e0]
   14001c0b7:	xor    rcx,rsp
   14001c0ba:	call   0x14002c960
   14001c0bf:	lea    r11,[rsp+0x4f0]
   14001c0c7:	mov    rbx,QWORD PTR [r11+0x18]
   14001c0cb:	mov    rsi,QWORD PTR [r11+0x20]
   14001c0cf:	mov    rsp,r11
   14001c0d2:	pop    rdi
   14001c0d3:	ret    
   14001c0d4:	int3   
   14001c0d5:	int3   
   14001c0d6:	int3   
   14001c0d7:	int3   
   14001c0d8:	int3   
   14001c0d9:	int3   
   14001c0da:	int3   
   14001c0db:	int3   
   14001c0dc:	int3   
   14001c0dd:	int3   
   14001c0de:	int3   
   14001c0df:	int3   
   14001c0e0:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c0e4:	xor    edx,edx
   14001c0e6:	rex.W jmp QWORD PTR [rip+0x1341b]        # 0x14002f508
   14001c0ed:	int3   
   14001c0ee:	int3   
   14001c0ef:	int3   
   14001c0f0:	mov    rcx,QWORD PTR [rcx+0x40]
   14001c0f4:	mov    edx,0x1
   14001c0f9:	rex.W jmp QWORD PTR [rip+0x13408]        # 0x14002f508
   14001c100:	movzx  edx,dx
   14001c103:	rex.W jmp QWORD PTR [rip+0x137a6]        # 0x14002f8b0
   14001c10a:	int3   
   14001c10b:	int3   
   14001c10c:	int3   
   14001c10d:	int3   
   14001c10e:	int3   
   14001c10f:	int3   
   14001c110:	mov    QWORD PTR [rsp+0x8],rbx
   14001c115:	push   rdi
   14001c116:	sub    rsp,0x20
   14001c11a:	mov    ebx,edx
   14001c11c:	mov    rdi,rcx
   14001c11f:	call   QWORD PTR [rip+0x1377b]        # 0x14002f8a0
   14001c125:	test   bl,0x1
   14001c128:	je     0x14001c133
   14001c12a:	mov    rcx,rdi
   14001c12d:	call   QWORD PTR [rip+0x13a45]        # 0x14002fb78
   14001c133:	mov    rax,rdi
   14001c136:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c13b:	add    rsp,0x20
   14001c13f:	pop    rdi
   14001c140:	ret    
   14001c141:	int3   
   14001c142:	int3   
   14001c143:	int3   
   14001c144:	int3   
   14001c145:	int3   
   14001c146:	int3   
   14001c147:	int3   
   14001c148:	int3   
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	int3   
   14001c14d:	int3   
   14001c14e:	int3   
   14001c14f:	int3   
   14001c150:	mov    QWORD PTR [rsp+0x8],rbx
   14001c155:	push   rdi
   14001c156:	sub    rsp,0x20
   14001c15a:	mov    ebx,edx
   14001c15c:	mov    rdi,rcx
   14001c15f:	call   QWORD PTR [rip+0x137c3]        # 0x14002f928
   14001c165:	test   bl,0x1
   14001c168:	je     0x14001c173
   14001c16a:	mov    rcx,rdi
   14001c16d:	call   QWORD PTR [rip+0x13a05]        # 0x14002fb78
   14001c173:	mov    rax,rdi
   14001c176:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c17b:	add    rsp,0x20
   14001c17f:	pop    rdi
   14001c180:	ret    
   14001c181:	int3   
   14001c182:	int3   
   14001c183:	int3   
   14001c184:	int3   
   14001c185:	int3   
   14001c186:	int3   
   14001c187:	int3   
   14001c188:	int3   
   14001c189:	int3   
   14001c18a:	int3   
   14001c18b:	int3   
   14001c18c:	int3   
   14001c18d:	int3   
   14001c18e:	int3   
   14001c18f:	int3   
   14001c190:	mov    QWORD PTR [rsp+0x8],rbx
   14001c195:	push   rdi
   14001c196:	sub    rsp,0x20
   14001c19a:	mov    ebx,edx
   14001c19c:	mov    rdi,rcx
   14001c19f:	call   QWORD PTR [rip+0x136ab]        # 0x14002f850
   14001c1a5:	test   bl,0x1
   14001c1a8:	je     0x14001c1b3
   14001c1aa:	mov    rcx,rdi
   14001c1ad:	call   QWORD PTR [rip+0x139c5]        # 0x14002fb78
   14001c1b3:	mov    rax,rdi
   14001c1b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1bb:	add    rsp,0x20
   14001c1bf:	pop    rdi
   14001c1c0:	ret    
   14001c1c1:	int3   
   14001c1c2:	int3   
   14001c1c3:	int3   
   14001c1c4:	int3   
   14001c1c5:	int3   
   14001c1c6:	int3   
   14001c1c7:	int3   
   14001c1c8:	int3   
   14001c1c9:	int3   
   14001c1ca:	int3   
   14001c1cb:	int3   
   14001c1cc:	int3   
   14001c1cd:	int3   
   14001c1ce:	int3   
   14001c1cf:	int3   
   14001c1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1d5:	push   rdi
   14001c1d6:	sub    rsp,0x20
   14001c1da:	mov    ebx,edx
   14001c1dc:	mov    rdi,rcx
   14001c1df:	call   QWORD PTR [rip+0x1375b]        # 0x14002f940
   14001c1e5:	test   bl,0x1
   14001c1e8:	je     0x14001c1f3
   14001c1ea:	mov    rcx,rdi
   14001c1ed:	call   QWORD PTR [rip+0x13985]        # 0x14002fb78
   14001c1f3:	mov    rax,rdi
   14001c1f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1fb:	add    rsp,0x20
   14001c1ff:	pop    rdi
   14001c200:	ret    
   14001c201:	int3   
   14001c202:	int3   
   14001c203:	int3   
   14001c204:	int3   
   14001c205:	int3   
   14001c206:	int3   
   14001c207:	int3   
   14001c208:	int3   
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	int3   
   14001c20d:	int3   
   14001c20e:	int3   
   14001c20f:	int3   
   14001c210:	mov    QWORD PTR [rsp+0x8],rbx
   14001c215:	push   rdi
   14001c216:	sub    rsp,0x20
   14001c21a:	mov    ebx,edx
   14001c21c:	mov    rdi,rcx
   14001c21f:	call   QWORD PTR [rip+0x13653]        # 0x14002f878
   14001c225:	test   bl,0x1
   14001c228:	je     0x14001c233
   14001c22a:	mov    rcx,rdi
   14001c22d:	call   QWORD PTR [rip+0x13945]        # 0x14002fb78
   14001c233:	mov    rax,rdi
   14001c236:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c23b:	add    rsp,0x20
   14001c23f:	pop    rdi
   14001c240:	ret    
   14001c241:	int3   
   14001c242:	int3   
   14001c243:	int3   
   14001c244:	int3   
   14001c245:	int3   
   14001c246:	int3   
   14001c247:	int3   
   14001c248:	int3   
   14001c249:	int3   
   14001c24a:	int3   
   14001c24b:	int3   
   14001c24c:	int3   
   14001c24d:	int3   
   14001c24e:	int3   
   14001c24f:	int3   
   14001c250:	sub    rsp,0x38
   14001c254:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c25d:	mov    ecx,0x1c30
   14001c262:	call   QWORD PTR [rip+0x13730]        # 0x14002f998
   14001c268:	mov    QWORD PTR [rsp+0x40],rax
   14001c26d:	test   rax,rax
   14001c270:	je     0x14001c27d
   14001c272:	mov    rcx,rax
   14001c275:	call   0x14001c2b0
   14001c27a:	nop
   14001c27b:	jmp    0x14001c27f
   14001c27d:	xor    eax,eax
   14001c27f:	add    rsp,0x38
   14001c283:	ret    
   14001c284:	int3   
   14001c285:	int3   
   14001c286:	int3   
   14001c287:	int3   
   14001c288:	int3   
   14001c289:	int3   
   14001c28a:	int3   
   14001c28b:	int3   
   14001c28c:	int3   
   14001c28d:	int3   
   14001c28e:	int3   
   14001c28f:	int3   
   14001c290:	rex.W jmp QWORD PTR [rip+0x12e39]        # 0x14002f0d0
   14001c297:	int3   
   14001c298:	int3   
   14001c299:	int3   
   14001c29a:	int3   
   14001c29b:	int3   
   14001c29c:	int3   
   14001c29d:	int3   
   14001c29e:	int3   
   14001c29f:	int3   
   14001c2a0:	lea    rax,[rip+0x15fa1]        # 0x140032248
   14001c2a7:	ret    
   14001c2a8:	int3   
   14001c2a9:	int3   
   14001c2aa:	int3   
   14001c2ab:	int3   
   14001c2ac:	int3   
   14001c2ad:	int3   
   14001c2ae:	int3   
   14001c2af:	int3   
   14001c2b0:	mov    QWORD PTR [rsp+0x8],rcx
   14001c2b5:	push   rsi
   14001c2b6:	push   rdi
   14001c2b7:	push   r12
   14001c2b9:	push   r14
   14001c2bb:	push   r15
   14001c2bd:	sub    rsp,0x30
   14001c2c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c2ca:	mov    QWORD PTR [rsp+0x68],rbx
   14001c2cf:	mov    QWORD PTR [rsp+0x70],rbp
   14001c2d4:	mov    rdi,rcx
   14001c2d7:	mov    r9d,0x68
   14001c2dd:	xor    r8d,r8d
   14001c2e0:	lea    edx,[r9+0x64]
   14001c2e4:	call   QWORD PTR [rip+0x12dde]        # 0x14002f0c8
   14001c2ea:	nop
   14001c2eb:	lea    rax,[rip+0x15226]        # 0x140031518
   14001c2f2:	mov    QWORD PTR [rdi],rax
   14001c2f5:	lea    rcx,[rdi+0x160]
   14001c2fc:	call   QWORD PTR [rip+0x13376]        # 0x14002f678
   14001c302:	lea    r12,[rip+0x15c5f]        # 0x140031f68
   14001c309:	mov    QWORD PTR [rdi+0x160],r12
   14001c310:	lea    rcx,[rdi+0x238]
   14001c317:	call   QWORD PTR [rip+0x1335b]        # 0x14002f678
   14001c31d:	mov    QWORD PTR [rdi+0x238],r12
   14001c324:	lea    rcx,[rdi+0x310]
   14001c32b:	call   QWORD PTR [rip+0x13347]        # 0x14002f678
   14001c331:	mov    QWORD PTR [rdi+0x310],r12
   14001c338:	lea    rcx,[rdi+0x3e8]
   14001c33f:	call   QWORD PTR [rip+0x13333]        # 0x14002f678
   14001c345:	mov    QWORD PTR [rdi+0x3e8],r12
   14001c34c:	lea    rcx,[rdi+0x4c0]
   14001c353:	call   QWORD PTR [rip+0x1331f]        # 0x14002f678
   14001c359:	lea    r15,[rip+0x15920]        # 0x140031c80
   14001c360:	mov    QWORD PTR [rdi+0x4c0],r15
   14001c367:	lea    rcx,[rdi+0x598]
   14001c36e:	call   QWORD PTR [rip+0x13304]        # 0x14002f678
   14001c374:	lea    rbp,[rip+0x15f05]        # 0x140032280
   14001c37b:	mov    QWORD PTR [rdi+0x598],rbp
   14001c382:	lea    rcx,[rdi+0x670]
   14001c389:	call   QWORD PTR [rip+0x132e9]        # 0x14002f678
   14001c38f:	lea    r14,[rip+0x161fa]        # 0x140032590
   14001c396:	mov    QWORD PTR [rdi+0x670],r14
   14001c39d:	lea    rcx,[rdi+0x748]
   14001c3a4:	call   QWORD PTR [rip+0x132ce]        # 0x14002f678
   14001c3aa:	lea    rsi,[rip+0x155e7]        # 0x140031998
   14001c3b1:	mov    QWORD PTR [rdi+0x748],rsi
   14001c3b8:	lea    rcx,[rdi+0x820]
   14001c3bf:	call   QWORD PTR [rip+0x132b3]        # 0x14002f678
   14001c3c5:	mov    QWORD PTR [rdi+0x820],r15
   14001c3cc:	lea    rcx,[rdi+0x8f8]
   14001c3d3:	call   QWORD PTR [rip+0x1329f]        # 0x14002f678
   14001c3d9:	mov    QWORD PTR [rdi+0x8f8],rsi
   14001c3e0:	lea    rcx,[rdi+0x9d0]
   14001c3e7:	call   QWORD PTR [rip+0x1328b]        # 0x14002f678
   14001c3ed:	mov    QWORD PTR [rdi+0x9d0],r15
   14001c3f4:	lea    rcx,[rdi+0xaa8]
   14001c3fb:	call   QWORD PTR [rip+0x13277]        # 0x14002f678
   14001c401:	mov    QWORD PTR [rdi+0xaa8],r15
   14001c408:	lea    rcx,[rdi+0xb80]
   14001c40f:	call   QWORD PTR [rip+0x13263]        # 0x14002f678
   14001c415:	mov    QWORD PTR [rdi+0xb80],rbp
   14001c41c:	lea    rcx,[rdi+0xc58]
   14001c423:	call   QWORD PTR [rip+0x1324f]        # 0x14002f678
   14001c429:	mov    QWORD PTR [rdi+0xc58],r12
   14001c430:	lea    rcx,[rdi+0xd30]
   14001c437:	call   QWORD PTR [rip+0x1323b]        # 0x14002f678
   14001c43d:	mov    QWORD PTR [rdi+0xd30],r15
   14001c444:	lea    rcx,[rdi+0xe08]
   14001c44b:	call   QWORD PTR [rip+0x13227]        # 0x14002f678
   14001c451:	mov    QWORD PTR [rdi+0xe08],r14
   14001c458:	lea    rcx,[rdi+0xee0]
   14001c45f:	call   QWORD PTR [rip+0x13213]        # 0x14002f678
   14001c465:	mov    QWORD PTR [rdi+0xee0],r12
   14001c46c:	mov    BYTE PTR [rdi+0xfd0],0x0
   14001c473:	mov    BYTE PTR [rdi+0x14e0],0x0
   14001c47a:	mov    rcx,rdi
   14001c47d:	call   QWORD PTR [rip+0x134e5]        # 0x14002f968
   14001c483:	nop
   14001c484:	mov    rax,rdi
   14001c487:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c48c:	mov    rbp,QWORD PTR [rsp+0x70]
   14001c491:	add    rsp,0x30
   14001c495:	pop    r15
   14001c497:	pop    r14
   14001c499:	pop    r12
   14001c49b:	pop    rdi
   14001c49c:	pop    rsi
   14001c49d:	ret    
   14001c49e:	int3   
   14001c49f:	int3   
   14001c4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c4a5:	push   rdi
   14001c4a6:	sub    rsp,0x20
   14001c4aa:	mov    ebx,edx
   14001c4ac:	mov    rdi,rcx
   14001c4af:	call   0x14001c4d0
   14001c4b4:	test   bl,0x1
   14001c4b7:	je     0x14001c4c2
   14001c4b9:	mov    rcx,rdi
   14001c4bc:	call   QWORD PTR [rip+0x136b6]        # 0x14002fb78
   14001c4c2:	mov    rax,rdi
   14001c4c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c4ca:	add    rsp,0x20
   14001c4ce:	pop    rdi
   14001c4cf:	ret    
   14001c4d0:	mov    QWORD PTR [rsp+0x8],rcx
   14001c4d5:	push   rbx
   14001c4d6:	sub    rsp,0x30
   14001c4da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c4e3:	mov    rbx,rcx
   14001c4e6:	lea    rax,[rip+0x1502b]        # 0x140031518
   14001c4ed:	mov    QWORD PTR [rcx],rax
   14001c4f0:	add    rcx,0xee0
   14001c4f7:	call   QWORD PTR [rip+0x1342b]        # 0x14002f928
   14001c4fd:	nop
   14001c4fe:	lea    rcx,[rbx+0xe08]
   14001c505:	call   QWORD PTR [rip+0x13345]        # 0x14002f850
   14001c50b:	nop
   14001c50c:	lea    rcx,[rbx+0xd30]
   14001c513:	call   QWORD PTR [rip+0x13387]        # 0x14002f8a0
   14001c519:	nop
   14001c51a:	lea    rcx,[rbx+0xc58]
   14001c521:	call   QWORD PTR [rip+0x13401]        # 0x14002f928
   14001c527:	nop
   14001c528:	lea    rcx,[rbx+0xb80]
   14001c52f:	call   QWORD PTR [rip+0x1340b]        # 0x14002f940
   14001c535:	nop
   14001c536:	lea    rcx,[rbx+0xaa8]
   14001c53d:	call   QWORD PTR [rip+0x1335d]        # 0x14002f8a0
   14001c543:	nop
   14001c544:	lea    rcx,[rbx+0x9d0]
   14001c54b:	call   QWORD PTR [rip+0x1334f]        # 0x14002f8a0
   14001c551:	nop
   14001c552:	lea    rcx,[rbx+0x8f8]
   14001c559:	call   QWORD PTR [rip+0x13319]        # 0x14002f878
   14001c55f:	nop
   14001c560:	lea    rcx,[rbx+0x820]
   14001c567:	call   QWORD PTR [rip+0x13333]        # 0x14002f8a0
   14001c56d:	nop
   14001c56e:	lea    rcx,[rbx+0x748]
   14001c575:	call   QWORD PTR [rip+0x132fd]        # 0x14002f878
   14001c57b:	nop
   14001c57c:	lea    rcx,[rbx+0x670]
   14001c583:	call   QWORD PTR [rip+0x132c7]        # 0x14002f850
   14001c589:	nop
   14001c58a:	lea    rcx,[rbx+0x598]
   14001c591:	call   QWORD PTR [rip+0x133a9]        # 0x14002f940
   14001c597:	nop
   14001c598:	lea    rcx,[rbx+0x4c0]
   14001c59f:	call   QWORD PTR [rip+0x132fb]        # 0x14002f8a0
   14001c5a5:	nop
   14001c5a6:	lea    rcx,[rbx+0x3e8]
   14001c5ad:	call   QWORD PTR [rip+0x13375]        # 0x14002f928
   14001c5b3:	nop
   14001c5b4:	lea    rcx,[rbx+0x310]
   14001c5bb:	call   QWORD PTR [rip+0x13367]        # 0x14002f928
   14001c5c1:	nop
   14001c5c2:	lea    rcx,[rbx+0x238]
   14001c5c9:	call   QWORD PTR [rip+0x13359]        # 0x14002f928
   14001c5cf:	nop
   14001c5d0:	lea    rcx,[rbx+0x160]
   14001c5d7:	call   QWORD PTR [rip+0x1334b]        # 0x14002f928
   14001c5dd:	nop
   14001c5de:	mov    rcx,rbx
   14001c5e1:	add    rsp,0x30
   14001c5e5:	pop    rbx
   14001c5e6:	rex.W jmp QWORD PTR [rip+0x12ad3]        # 0x14002f0c0
   14001c5ed:	int3   
   14001c5ee:	int3   
   14001c5ef:	int3   
   14001c5f0:	test   rcx,rcx
   14001c5f3:	je     0x14001c601
   14001c5f5:	mov    rax,QWORD PTR [rcx]
   14001c5f8:	mov    edx,0x1
   14001c5fd:	rex.W jmp QWORD PTR [rax+0x8]
   14001c601:	ret    
   14001c602:	int3   
   14001c603:	int3   
   14001c604:	int3   
   14001c605:	int3   
   14001c606:	int3   
   14001c607:	int3   
   14001c608:	int3   
   14001c609:	int3   
   14001c60a:	int3   
   14001c60b:	int3   
   14001c60c:	int3   
   14001c60d:	int3   
   14001c60e:	int3   
   14001c60f:	int3   
   14001c610:	mov    QWORD PTR [rsp+0x8],rbx
   14001c615:	push   rdi
   14001c616:	sub    rsp,0x20
   14001c61a:	mov    rdi,rdx
   14001c61d:	lea    r8,[rcx+0x160]
   14001c624:	mov    rbx,rcx
   14001c627:	mov    rcx,rdi
   14001c62a:	mov    edx,0x1
   14001c62f:	call   QWORD PTR [rip+0x132d3]        # 0x14002f908
   14001c635:	lea    r8,[rbx+0x238]
   14001c63c:	mov    edx,0x417
   14001c641:	mov    rcx,rdi
   14001c644:	call   QWORD PTR [rip+0x132be]        # 0x14002f908
   14001c64a:	lea    r8,[rbx+0x310]
   14001c651:	mov    edx,0x413
   14001c656:	mov    rcx,rdi
   14001c659:	call   QWORD PTR [rip+0x132a9]        # 0x14002f908
   14001c65f:	lea    r8,[rbx+0x3e8]
   14001c666:	mov    edx,0x2
   14001c66b:	mov    rcx,rdi
   14001c66e:	call   QWORD PTR [rip+0x13294]        # 0x14002f908
   14001c674:	lea    r8,[rbx+0x4c0]
   14001c67b:	mov    edx,0x40e
   14001c680:	mov    rcx,rdi
   14001c683:	call   QWORD PTR [rip+0x1327f]        # 0x14002f908
   14001c689:	lea    r8,[rbx+0x598]
   14001c690:	mov    edx,0x404
   14001c695:	mov    rcx,rdi
   14001c698:	call   QWORD PTR [rip+0x1326a]        # 0x14002f908
   14001c69e:	lea    r8,[rbx+0x670]
   14001c6a5:	mov    edx,0x40d
   14001c6aa:	mov    rcx,rdi
   14001c6ad:	call   QWORD PTR [rip+0x13255]        # 0x14002f908
   14001c6b3:	lea    r8,[rbx+0x748]
   14001c6ba:	mov    edx,0x3f5
   14001c6bf:	mov    rcx,rdi
   14001c6c2:	call   QWORD PTR [rip+0x13240]        # 0x14002f908
   14001c6c8:	lea    r8,[rbx+0x820]
   14001c6cf:	mov    edx,0x3f7
   14001c6d4:	mov    rcx,rdi
   14001c6d7:	call   QWORD PTR [rip+0x1322b]        # 0x14002f908
   14001c6dd:	lea    r8,[rbx+0x8f8]
   14001c6e4:	mov    edx,0x3f0
   14001c6e9:	mov    rcx,rdi
   14001c6ec:	call   QWORD PTR [rip+0x13216]        # 0x14002f908
   14001c6f2:	lea    r8,[rbx+0x9d0]
   14001c6f9:	mov    edx,0x3f6
   14001c6fe:	mov    rcx,rdi
   14001c701:	call   QWORD PTR [rip+0x13201]        # 0x14002f908
   14001c707:	lea    r8,[rbx+0xaa8]
   14001c70e:	mov    edx,0x3f9
   14001c713:	mov    rcx,rdi
   14001c716:	call   QWORD PTR [rip+0x131ec]        # 0x14002f908
   14001c71c:	lea    r8,[rbx+0xb80]
   14001c723:	mov    edx,0x3fd
   14001c728:	mov    rcx,rdi
   14001c72b:	call   QWORD PTR [rip+0x131d7]        # 0x14002f908
   14001c731:	lea    r8,[rbx+0xc58]
   14001c738:	mov    edx,0x3fe
   14001c73d:	mov    rcx,rdi
   14001c740:	call   QWORD PTR [rip+0x131c2]        # 0x14002f908
   14001c746:	lea    r8,[rbx+0xd30]
   14001c74d:	mov    edx,0x405
   14001c752:	mov    rcx,rdi
   14001c755:	call   QWORD PTR [rip+0x131ad]        # 0x14002f908
   14001c75b:	lea    r8,[rbx+0xe08]
   14001c762:	mov    edx,0x3ec
   14001c767:	mov    rcx,rdi
   14001c76a:	call   QWORD PTR [rip+0x13198]        # 0x14002f908
   14001c770:	lea    r8,[rbx+0xee0]
   14001c777:	mov    edx,0xe146
   14001c77c:	mov    rcx,rdi
   14001c77f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c784:	add    rsp,0x20
   14001c788:	pop    rdi
   14001c789:	rex.W jmp QWORD PTR [rip+0x13178]        # 0x14002f908
   14001c790:	lea    rax,[rip+0x15de1]        # 0x140032578
   14001c797:	ret    
   14001c798:	int3   
   14001c799:	int3   
   14001c79a:	int3   
   14001c79b:	int3   
   14001c79c:	int3   
   14001c79d:	int3   
   14001c79e:	int3   
   14001c79f:	int3   
   14001c7a0:	rex push rdi
   14001c7a2:	sub    rsp,0x30
   14001c7a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c7af:	mov    QWORD PTR [rsp+0x50],rbx
   14001c7b4:	mov    rdi,rcx
   14001c7b7:	call   QWORD PTR [rip+0x13113]        # 0x14002f8d0
   14001c7bd:	lea    rcx,[rdi+0x820]
   14001c7c4:	xor    edx,edx
   14001c7c6:	call   QWORD PTR [rip+0x12e3c]        # 0x14002f608
   14001c7cc:	lea    rcx,[rdi+0x9d0]
   14001c7d3:	xor    edx,edx
   14001c7d5:	call   QWORD PTR [rip+0x12e2d]        # 0x14002f608
   14001c7db:	lea    rcx,[rdi+0x238]
   14001c7e2:	xor    edx,edx
   14001c7e4:	call   QWORD PTR [rip+0x12e1e]        # 0x14002f608
   14001c7ea:	lea    rcx,[rdi+0x3e8]
   14001c7f1:	xor    edx,edx
   14001c7f3:	call   QWORD PTR [rip+0x12e0f]        # 0x14002f608
   14001c7f9:	lea    rcx,[rdi+0x160]
   14001c800:	xor    edx,edx
   14001c802:	call   QWORD PTR [rip+0x12e00]        # 0x14002f608
   14001c808:	lea    rcx,[rdi+0x598]
   14001c80f:	xor    edx,edx
   14001c811:	call   QWORD PTR [rip+0x12df1]        # 0x14002f608
   14001c817:	lea    rcx,[rdi+0x4c0]
   14001c81e:	xor    edx,edx
   14001c820:	call   QWORD PTR [rip+0x12de2]        # 0x14002f608
   14001c826:	lea    rcx,[rdi+0x670]
   14001c82d:	xor    edx,edx
   14001c82f:	call   QWORD PTR [rip+0x12dd3]        # 0x14002f608
   14001c835:	lea    rcx,[rdi+0x310]
   14001c83c:	xor    edx,edx
   14001c83e:	call   QWORD PTR [rip+0x12dc4]        # 0x14002f608
   14001c844:	lea    rcx,[rdi+0xd30]
   14001c84b:	xor    edx,edx
   14001c84d:	call   QWORD PTR [rip+0x12db5]        # 0x14002f608
   14001c853:	lea    rcx,[rdi+0xe08]
   14001c85a:	xor    edx,edx
   14001c85c:	call   QWORD PTR [rip+0x12da6]        # 0x14002f608
   14001c862:	lea    rcx,[rsp+0x48]
   14001c867:	call   0x140001610
   14001c86c:	nop
   14001c86d:	mov    rdx,QWORD PTR [rax]
   14001c870:	lea    rcx,[rsp+0x40]
   14001c875:	call   QWORD PTR [rip+0x12e1d]        # 0x14002f698
   14001c87b:	nop
   14001c87c:	lea    rcx,[rsp+0x48]
   14001c881:	call   QWORD PTR [rip+0x13109]        # 0x14002f990
   14001c887:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c88c:	lea    rcx,[rdi+0xfd0]
   14001c893:	mov    rdx,rbx
   14001c896:	call   QWORD PTR [rip+0x129bc]        # 0x14002f258
   14001c89c:	lea    rcx,[rdi+0x14e0]
   14001c8a3:	mov    rdx,rbx
   14001c8a6:	call   QWORD PTR [rip+0x129ac]        # 0x14002f258
   14001c8ac:	xor    eax,eax
   14001c8ae:	mov    QWORD PTR [rdi+0x1c24],rax
   14001c8b5:	mov    DWORD PTR [rdi+0x158],eax
   14001c8bb:	mov    DWORD PTR [rdi+0x1c2c],eax
   14001c8c1:	lea    rcx,[rsp+0x40]
   14001c8c6:	call   QWORD PTR [rip+0x130ac]        # 0x14002f978
   14001c8cc:	xor    eax,eax
   14001c8ce:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c8d3:	add    rsp,0x30
   14001c8d7:	pop    rdi
   14001c8d8:	ret    
   14001c8d9:	int3   
   14001c8da:	int3   
   14001c8db:	int3   
   14001c8dc:	int3   
   14001c8dd:	int3   
   14001c8de:	int3   
   14001c8df:	int3   
   14001c8e0:	rex push rdi
   14001c8e2:	sub    rsp,0x6e0
   14001c8e9:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001c8f2:	mov    QWORD PTR [rsp+0x6f8],rbx
   14001c8fa:	mov    rax,QWORD PTR [rip+0x1f6ff]        # 0x14003c000
   14001c901:	xor    rax,rsp
   14001c904:	mov    QWORD PTR [rsp+0x6d0],rax
   14001c90c:	mov    rdi,rcx
   14001c90f:	lea    rcx,[rsp+0x50]
   14001c914:	call   QWORD PTR [rip+0x12d76]        # 0x14002f690
   14001c91a:	nop
   14001c91b:	mov    edx,0xe72f
   14001c920:	lea    rcx,[rsp+0x50]
   14001c925:	call   QWORD PTR [rip+0x12d55]        # 0x14002f680
   14001c92b:	xor    eax,eax
   14001c92d:	mov    WORD PTR [rsp+0x470],ax
   14001c935:	mov    DWORD PTR [rsp+0x40],0x1
   14001c93d:	mov    DWORD PTR [rsp+0x38],eax
   14001c941:	mov    QWORD PTR [rsp+0x30],rdi
   14001c946:	mov    rax,QWORD PTR [rsp+0x50]
   14001c94b:	mov    QWORD PTR [rsp+0x28],rax
   14001c950:	mov    DWORD PTR [rsp+0x20],0x6
   14001c958:	lea    r9,[rsp+0x470]
   14001c960:	xor    r8d,r8d
   14001c963:	lea    edx,[r8+0x1]
   14001c967:	lea    rcx,[rsp+0x70]
   14001c96c:	call   QWORD PTR [rip+0x12fde]        # 0x14002f950
   14001c972:	nop
   14001c973:	lea    rcx,[rsp+0x58]
   14001c978:	call   0x140023e50
   14001c97d:	nop
   14001c97e:	mov    rbx,QWORD PTR [rax]
   14001c981:	lea    rcx,[rsp+0x70]
   14001c986:	call   QWORD PTR [rip+0x12fbc]        # 0x14002f948
   14001c98c:	mov    QWORD PTR [rax+0x50],rbx
   14001c990:	lea    rcx,[rsp+0x58]
   14001c995:	call   QWORD PTR [rip+0x12ff5]        # 0x14002f990
   14001c99b:	lea    rcx,[rsp+0x70]
   14001c9a0:	call   QWORD PTR [rip+0x12fba]        # 0x14002f960
   14001c9a6:	cmp    rax,0x1
   14001c9aa:	jne    0x14001c9d1
   14001c9ac:	lea    rcx,[rsp+0x70]
   14001c9b1:	call   QWORD PTR [rip+0x12f91]        # 0x14002f948
   14001c9b7:	lea    rcx,[rdi+0xb80]
   14001c9be:	mov    rdx,QWORD PTR [rax+0x30]
   14001c9c2:	call   QWORD PTR [rip+0x12c70]        # 0x14002f638
   14001c9c8:	lea    rcx,[rdi+0x598]
   14001c9cf:	jmp    0x14001c9d8
   14001c9d1:	lea    rcx,[rdi+0xb80]
   14001c9d8:	call   QWORD PTR [rip+0x12c22]        # 0x14002f600
   14001c9de:	nop
   14001c9df:	lea    rcx,[rsp+0x70]
   14001c9e4:	call   QWORD PTR [rip+0x12f6e]        # 0x14002f958
   14001c9ea:	nop
   14001c9eb:	lea    rcx,[rsp+0x50]
   14001c9f0:	call   QWORD PTR [rip+0x12f9a]        # 0x14002f990
   14001c9f6:	mov    rcx,QWORD PTR [rsp+0x6d0]
   14001c9fe:	xor    rcx,rsp
   14001ca01:	call   0x14002c960
   14001ca06:	mov    rbx,QWORD PTR [rsp+0x6f8]
   14001ca0e:	add    rsp,0x6e0
   14001ca15:	pop    rdi
   14001ca16:	ret    
   14001ca17:	int3   
   14001ca18:	int3   
   14001ca19:	int3   
   14001ca1a:	int3   
   14001ca1b:	int3   
   14001ca1c:	int3   
   14001ca1d:	int3   
   14001ca1e:	int3   
   14001ca1f:	int3   
   14001ca20:	mov    rax,rsp
   14001ca23:	push   rbp
   14001ca24:	push   r12
   14001ca26:	push   r13
   14001ca28:	push   r14
   14001ca2a:	push   r15
   14001ca2c:	lea    rbp,[rax-0x918]
   14001ca33:	sub    rsp,0x9f0
   14001ca3a:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001ca43:	mov    QWORD PTR [rax+0x10],rbx
   14001ca47:	mov    QWORD PTR [rax+0x18],rsi
   14001ca4b:	mov    QWORD PTR [rax+0x20],rdi
   14001ca4f:	mov    rax,QWORD PTR [rip+0x1f5aa]        # 0x14003c000
   14001ca56:	xor    rax,rsp
   14001ca59:	mov    QWORD PTR [rbp+0x8e0],rax
   14001ca60:	mov    rsi,rcx
   14001ca63:	cmp    DWORD PTR [rcx+0x1c28],0x0
   14001ca6a:	je     0x14001cb91
   14001ca70:	cmp    DWORD PTR [rcx+0x1c2c],0x1
   14001ca77:	jne    0x14001caae
   14001ca79:	xor    r9d,r9d
   14001ca7c:	xor    r8d,r8d
   14001ca7f:	mov    edx,0x188
   14001ca84:	mov    rcx,QWORD PTR [rcx+0xe48]
   14001ca8b:	call   QWORD PTR [rip+0x12a6f]        # 0x14002f500
   14001ca91:	mov    r8d,eax
   14001ca94:	xor    r9d,r9d
   14001ca97:	mov    edx,0x182
   14001ca9c:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001caa3:	call   QWORD PTR [rip+0x12a57]        # 0x14002f500
   14001caa9:	jmp    0x14001d108
   14001caae:	mov    r8d,0x12a
   14001cab4:	lea    rdx,[rbp+0x1c0]
   14001cabb:	add    rcx,0x598
   14001cac2:	call   QWORD PTR [rip+0x12b68]        # 0x14002f630
   14001cac8:	cmp    WORD PTR [rbp+0x1c0],0x0
   14001cad0:	je     0x14001d108
   14001cad6:	lea    r9,[rbp+0x1c0]
   14001cadd:	or     rbx,0xffffffffffffffff
   14001cae1:	mov    r8,rbx
   14001cae4:	mov    edx,0x1a2
   14001cae9:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001caf0:	call   QWORD PTR [rip+0x12a0a]        # 0x14002f500
   14001caf6:	cmp    eax,ebx
   14001caf8:	jne    0x14001d108
   14001cafe:	lea    r9,[rbp+0x1c0]
   14001cb05:	mov    r8,rbx
   14001cb08:	mov    edx,0x1a2
   14001cb0d:	mov    rcx,QWORD PTR [rsi+0x6b0]
   14001cb14:	call   QWORD PTR [rip+0x129e6]        # 0x14002f500
   14001cb1a:	cmp    eax,ebx
   14001cb1c:	jne    0x14001d108
   14001cb22:	lea    r9,[rbp+0x1c0]
   14001cb29:	xor    r8d,r8d
   14001cb2c:	mov    edx,0x180
   14001cb31:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001cb38:	call   QWORD PTR [rip+0x129c2]        # 0x14002f500
   14001cb3e:	xor    r9d,r9d
   14001cb41:	xor    r8d,r8d
   14001cb44:	mov    edx,0x18b
   14001cb49:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001cb50:	call   QWORD PTR [rip+0x129aa]        # 0x14002f500
   14001cb56:	dec    eax
   14001cb58:	movsxd r8,eax
   14001cb5b:	xor    r9d,r9d
   14001cb5e:	mov    edx,0x186
   14001cb63:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001cb6a:	call   QWORD PTR [rip+0x12990]        # 0x14002f500
   14001cb70:	xor    edx,edx
   14001cb72:	lea    rcx,[rsi+0x598]
   14001cb79:	call   QWORD PTR [rip+0x12ab9]        # 0x14002f638
   14001cb7f:	lea    rcx,[rsi+0x598]
   14001cb86:	call   QWORD PTR [rip+0x12a74]        # 0x14002f600
   14001cb8c:	jmp    0x14001d108
   14001cb91:	movsd  xmm0,QWORD PTR [rip+0x159c7]        # 0x140032560
   14001cb99:	movsd  QWORD PTR [rbp+0x90],xmm0
   14001cba1:	movzx  eax,WORD PTR [rip+0x159c0]        # 0x140032568
   14001cba8:	mov    WORD PTR [rbp+0x98],ax
   14001cbaf:	movzx  eax,BYTE PTR [rip+0x159b4]        # 0x14003256a
   14001cbb6:	mov    BYTE PTR [rbp+0x9a],al
   14001cbbc:	xor    edx,edx
   14001cbbe:	mov    r8d,0x121
   14001cbc4:	lea    rcx,[rbp+0x9b]
   14001cbcb:	call   0x14002ce12
   14001cbd0:	lea    rcx,[rsp+0x48]
   14001cbd5:	call   QWORD PTR [rip+0x12d95]        # 0x14002f970
   14001cbdb:	nop
   14001cbdc:	mov    edx,0x66
   14001cbe1:	lea    rcx,[rsp+0x48]
   14001cbe6:	call   QWORD PTR [rip+0x12d94]        # 0x14002f980
   14001cbec:	lea    r13,[rsi+0xb80]
   14001cbf3:	mov    r8d,0x12a
   14001cbf9:	lea    rdx,[rbp+0x680]
   14001cc00:	mov    rcx,r13
   14001cc03:	call   QWORD PTR [rip+0x12a27]        # 0x14002f630
   14001cc09:	lea    rdx,[rbp+0x680]
   14001cc10:	lea    rcx,[rsp+0x50]
   14001cc15:	call   QWORD PTR [rip+0x12a7d]        # 0x14002f698
   14001cc1b:	nop
   14001cc1c:	mov    rdi,QWORD PTR [rsp+0x50]
   14001cc21:	mov    rcx,rdi
   14001cc24:	call   0x14002ae90
   14001cc29:	mov    r15,rax
   14001cc2c:	mov    edx,0x3
   14001cc31:	mov    rcx,rax
   14001cc34:	call   0x14002ab70
   14001cc39:	test   rax,rax
   14001cc3c:	jne    0x14001cccb
   14001cc42:	mov    rdi,QWORD PTR [rsi+0x40]
   14001cc46:	lea    edx,[rax-0x6]
   14001cc49:	mov    rcx,rdi
   14001cc4c:	call   QWORD PTR [rip+0x1288e]        # 0x14002f4e0
   14001cc52:	mov    rbx,rax
   14001cc55:	mov    r9d,0x12c
   14001cc5b:	lea    r8,[rsp+0x60]
   14001cc60:	mov    edx,0x80
   14001cc65:	mov    rcx,rax
   14001cc68:	call   QWORD PTR [rip+0x1286a]        # 0x14002f4d8
   14001cc6e:	mov    r9d,0x12c
   14001cc74:	lea    r8,[rbp+0x1c0]
   14001cc7b:	mov    edx,0xe720
   14001cc80:	mov    rcx,rbx
   14001cc83:	call   QWORD PTR [rip+0x1284f]        # 0x14002f4d8
   14001cc89:	mov    r9d,0x10
   14001cc8f:	lea    r8,[rsp+0x60]
   14001cc94:	lea    rdx,[rbp+0x1c0]
   14001cc9b:	mov    rcx,rdi
   14001cc9e:	call   QWORD PTR [rip+0x12844]        # 0x14002f4e8
   14001cca4:	cmp    DWORD PTR [rip+0x24f49],0x0        # 0x140041bf4
   14001ccab:	je     0x14001d0f1
   14001ccb1:	cmp    DWORD PTR [rip+0x24f38],0x0        # 0x140041bf0
   14001ccb8:	jne    0x14001d0f1
   14001ccbe:	xor    ecx,ecx
   14001ccc0:	call   QWORD PTR [rip+0x1280a]        # 0x14002f4d0
   14001ccc6:	jmp    0x14001d0f1
   14001cccb:	mov    rcx,rax
   14001ccce:	call   0x14002a9e0
   14001ccd3:	or     rbx,0xffffffffffffffff
   14001ccd7:	inc    rbx
   14001ccda:	cmp    BYTE PTR [rdi+rbx*1],0x0
   14001ccde:	jne    0x14001ccd7
   14001cce0:	lea    rdx,[rdi-0x6]
   14001cce4:	add    rdx,rbx
   14001cce7:	lea    rcx,[rsp+0x60]
   14001ccec:	lea    rax,[rsp+0x60]
   14001ccf1:	sub    rdx,rax
   14001ccf4:	nop    DWORD PTR [rax+0x0]
   14001ccf8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cd00:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14001cd04:	mov    BYTE PTR [rcx],al
   14001cd06:	inc    rcx
   14001cd09:	test   al,al
   14001cd0b:	jne    0x14001cd00
   14001cd0d:	mov    BYTE PTR [rsp+0x62],al
   14001cd11:	lea    rax,[rip+0x1ffa0]        # 0x14003ccb8
   14001cd18:	movzx  ebx,WORD PTR [rsp+0x60]
   14001cd1d:	movzx  ecx,WORD PTR [rip+0x1ff94]        # 0x14003ccb8
   14001cd24:	test   cx,cx
   14001cd27:	je     0x14001cd47
   14001cd29:	nop    DWORD PTR [rax+0x0]
   14001cd30:	cmp    bx,cx
   14001cd33:	je     0x14001cd43
   14001cd35:	add    rax,0x4
   14001cd39:	movzx  ecx,WORD PTR [rax]
   14001cd3c:	test   cx,cx
   14001cd3f:	jne    0x14001cd30
   14001cd41:	jmp    0x14001cd47
   14001cd43:	movzx  ebx,WORD PTR [rax+0x2]
   14001cd47:	lea    rcx,[rip+0x15802]        # 0x140032550
   14001cd4e:	call   QWORD PTR [rip+0x1252c]        # 0x14002f280
   14001cd54:	movsxd rcx,eax
   14001cd57:	mov    WORD PTR [rbp+rcx*1+0x94],bx
   14001cd5f:	lea    rdx,[rsi+0xfd0]
   14001cd66:	lea    rcx,[rbp+0x550]
   14001cd6d:	call   QWORD PTR [rip+0x124e5]        # 0x14002f258
   14001cd73:	lea    rcx,[rbp+0x420]
   14001cd7a:	cmp    BYTE PTR [rbp+0x550],0x0
   14001cd81:	je     0x14001cda0
   14001cd83:	lea    r9,[rbp+0x90]
   14001cd8a:	lea    r8,[rbp+0x550]
   14001cd91:	lea    rdx,[rip+0x14724]        # 0x1400314bc
   14001cd98:	call   QWORD PTR [rip+0x126b2]        # 0x14002f450
   14001cd9e:	jmp    0x14001cdad
   14001cda0:	lea    rdx,[rbp+0x90]
   14001cda7:	call   QWORD PTR [rip+0x124ab]        # 0x14002f258
   14001cdad:	lea    rcx,[rsi+0x138a]
   14001cdb4:	mov    rdx,rdi
   14001cdb7:	call   QWORD PTR [rip+0x1249b]        # 0x14002f258
   14001cdbd:	lea    rdx,[rip+0x157a8]        # 0x14003256c
   14001cdc4:	lea    rcx,[rbp+0x420]
   14001cdcb:	call   QWORD PTR [rip+0x1266f]        # 0x14002f440
   14001cdd1:	mov    r12,rax
   14001cdd4:	test   rax,rax
   14001cdd7:	jne    0x14001cde4
   14001cdd9:	mov    rax,QWORD PTR [rsp+0x48]
   14001cdde:	movzx  r14d,WORD PTR [rax]
   14001cde2:	jmp    0x14001ce48
   14001cde4:	xor    r13d,r13d
   14001cde7:	mov    edi,r13d
   14001cdea:	lea    rbx,[rsp+0x60]
   14001cdef:	nop
   14001cdf0:	mov    ecx,r13d
   14001cdf3:	lea    rax,[rsp+0x60]
   14001cdf8:	cmp    BYTE PTR [rsp+0x60],cl
   14001cdfc:	je     0x14001ce0b
   14001cdfe:	xchg   ax,ax
   14001ce00:	lea    rax,[rax+0x1]
   14001ce04:	inc    ecx
   14001ce06:	cmp    BYTE PTR [rax],r13b
   14001ce09:	jne    0x14001ce00
   14001ce0b:	cmp    edi,ecx
   14001ce0d:	jge    0x14001ce32
   14001ce0f:	movzx  r14d,BYTE PTR [rbx]
   14001ce13:	mov    ecx,r14d
   14001ce16:	call   QWORD PTR [rip+0x12604]        # 0x14002f420
   14001ce1c:	test   eax,eax
   14001ce1e:	je     0x14001ce2b
   14001ce20:	mov    ecx,r14d
   14001ce23:	call   QWORD PTR [rip+0x125e7]        # 0x14002f410
   14001ce29:	mov    BYTE PTR [rbx],al
   14001ce2b:	inc    edi
   14001ce2d:	inc    rbx
   14001ce30:	jmp    0x14001cdf0
   14001ce32:	movzx  r14d,WORD PTR [rsp+0x60]
   14001ce38:	mov    rcx,r12
   14001ce3b:	call   QWORD PTR [rip+0x125ef]        # 0x14002f430
   14001ce41:	lea    r13,[rsi+0xb80]
   14001ce48:	lea    rcx,[rsp+0x40]
   14001ce4d:	call   QWORD PTR [rip+0x12b1d]        # 0x14002f970
   14001ce53:	nop
   14001ce54:	mov    edx,0x66
   14001ce59:	lea    rcx,[rsp+0x40]
   14001ce5e:	call   QWORD PTR [rip+0x12b1c]        # 0x14002f980
   14001ce64:	mov    edx,0x5948
   14001ce69:	mov    r9,r15
   14001ce6c:	lea    rcx,[rsi+0x14c8]
   14001ce73:	call   0x140017500
   14001ce78:	test   ax,ax
   14001ce7b:	jne    0x14001ce8a
   14001ce7d:	lea    rcx,[rsp+0x40]
   14001ce82:	call   QWORD PTR [rip+0x12af0]        # 0x14002f978
   14001ce88:	jmp    0x14001ceb1
   14001ce8a:	mov    edx,0x5948
   14001ce8f:	xor    r9d,r9d
   14001ce92:	lea    rcx,[rsi+0x14c8]
   14001ce99:	call   0x140017500
   14001ce9e:	movzx  ebx,ax
   14001cea1:	lea    rcx,[rsp+0x40]
   14001cea6:	call   QWORD PTR [rip+0x12acc]        # 0x14002f978
   14001ceac:	test   bx,bx
   14001ceaf:	jne    0x14001ceef
   14001ceb1:	lea    rcx,[rsi+0x14c8]
   14001ceb8:	call   0x140017a20
   14001cebd:	xor    ebx,ebx
   14001cebf:	test   ax,ax
   14001cec2:	jne    0x14001cef1
   14001cec4:	mov    WORD PTR [rsp+0x28],bx
   14001cec9:	mov    WORD PTR [rsp+0x20],r14w
   14001cecf:	xor    r9d,r9d
   14001ced2:	lea    rcx,[rsi+0x14c8]
   14001ced9:	call   0x140017ad0
   14001cede:	test   ax,ax
   14001cee1:	jne    0x14001cef1
   14001cee3:	mov    DWORD PTR [rsi+0x1c20],0x1
   14001ceed:	jmp    0x14001cef7
   14001ceef:	xor    ebx,ebx
   14001cef1:	mov    DWORD PTR [rsi+0x1c20],ebx
   14001cef7:	mov    r8,r15
   14001cefa:	lea    rcx,[rsi+0xfb8]
   14001cf01:	call   0x14001bdf0
   14001cf06:	test   ax,ax
   14001cf09:	jne    0x14001d048
   14001cf0f:	lea    rcx,[rsi+0xfb8]
   14001cf16:	call   0x140017a20
   14001cf1b:	test   ax,ax
   14001cf1e:	jne    0x14001d048
   14001cf24:	movzx  edx,r14w
   14001cf28:	lea    rcx,[rsi+0xfb8]
   14001cf2f:	call   0x14001be70
   14001cf34:	test   ax,ax
   14001cf37:	jne    0x14001d048
   14001cf3d:	mov    edx,0x1
   14001cf42:	lea    rcx,[rsi+0x598]
   14001cf49:	call   QWORD PTR [rip+0x126b9]        # 0x14002f608
   14001cf4f:	lea    rcx,[rsi+0x670]
   14001cf56:	mov    edx,0x1
   14001cf5b:	call   QWORD PTR [rip+0x126a7]        # 0x14002f608
   14001cf61:	lea    rcx,[rsi+0x4c0]
   14001cf68:	mov    edx,0x1
   14001cf6d:	call   QWORD PTR [rip+0x12695]        # 0x14002f608
   14001cf73:	lea    rcx,[rsi+0xe08]
   14001cf7a:	mov    edx,0x1
   14001cf7f:	call   QWORD PTR [rip+0x12683]        # 0x14002f608
   14001cf85:	lea    rcx,[rsi+0xd30]
   14001cf8c:	mov    edx,0x1
   14001cf91:	call   QWORD PTR [rip+0x12671]        # 0x14002f608
   14001cf97:	lea    rcx,[rsi+0x3e8]
   14001cf9e:	mov    edx,0x1
   14001cfa3:	call   QWORD PTR [rip+0x1265f]        # 0x14002f608
   14001cfa9:	lea    rcx,[rsi+0x310]
   14001cfb0:	mov    edx,0x1
   14001cfb5:	call   QWORD PTR [rip+0x1264d]        # 0x14002f608
   14001cfbb:	xor    edx,edx
   14001cfbd:	mov    rcx,r13
   14001cfc0:	call   QWORD PTR [rip+0x12642]        # 0x14002f608
   14001cfc6:	lea    rcx,[rsi+0xaa8]
   14001cfcd:	xor    edx,edx
   14001cfcf:	call   QWORD PTR [rip+0x12633]        # 0x14002f608
   14001cfd5:	lea    rcx,[rsi+0xc58]
   14001cfdc:	xor    edx,edx
   14001cfde:	call   QWORD PTR [rip+0x12624]        # 0x14002f608
   14001cfe4:	lea    rcx,[rsp+0x40]
   14001cfe9:	call   QWORD PTR [rip+0x126a1]        # 0x14002f690
   14001cfef:	nop
   14001cff0:	mov    edx,0xe724
   14001cff5:	lea    rcx,[rsp+0x40]
   14001cffa:	call   QWORD PTR [rip+0x12680]        # 0x14002f680
   14001d000:	mov    rdx,QWORD PTR [rsp+0x40]
   14001d005:	lea    rcx,[rsi+0x160]
   14001d00c:	call   QWORD PTR [rip+0x12626]        # 0x14002f638
   14001d012:	xor    edx,edx
   14001d014:	lea    rcx,[rsi+0x160]
   14001d01b:	call   QWORD PTR [rip+0x125e7]        # 0x14002f608
   14001d021:	lea    rcx,[rsi+0x598]
   14001d028:	call   QWORD PTR [rip+0x125d2]        # 0x14002f600
   14001d02e:	mov    DWORD PTR [rsi+0x1c28],0x1
   14001d038:	lea    rcx,[rsp+0x40]
   14001d03d:	call   QWORD PTR [rip+0x1294d]        # 0x14002f990
   14001d043:	jmp    0x14001d0d3
   14001d048:	mov    rdi,QWORD PTR [rsi+0x40]
   14001d04c:	mov    edx,0xfffffffa
   14001d051:	mov    rcx,rdi
   14001d054:	call   QWORD PTR [rip+0x12486]        # 0x14002f4e0
   14001d05a:	mov    rbx,rax
   14001d05d:	mov    r9d,0x12c
   14001d063:	lea    r8,[rbp+0x1c0]
   14001d06a:	mov    edx,0x80
   14001d06f:	mov    rcx,rax
   14001d072:	call   QWORD PTR [rip+0x12460]        # 0x14002f4d8
   14001d078:	mov    r9d,0x12c
   14001d07e:	lea    r8,[rsp+0x60]
   14001d083:	mov    edx,0xe720
   14001d088:	mov    rcx,rbx
   14001d08b:	call   QWORD PTR [rip+0x12447]        # 0x14002f4d8
   14001d091:	mov    r9d,0x10
   14001d097:	lea    r8,[rbp+0x1c0]
   14001d09e:	lea    rdx,[rsp+0x60]
   14001d0a3:	mov    rcx,rdi
   14001d0a6:	call   QWORD PTR [rip+0x1243c]        # 0x14002f4e8
   14001d0ac:	cmp    DWORD PTR [rip+0x24b41],0x0        # 0x140041bf4
   14001d0b3:	je     0x14001d0c6
   14001d0b5:	cmp    DWORD PTR [rip+0x24b34],0x0        # 0x140041bf0
   14001d0bc:	jne    0x14001d0c6
   14001d0be:	xor    ecx,ecx
   14001d0c0:	call   QWORD PTR [rip+0x1240a]        # 0x14002f4d0
   14001d0c6:	lea    rcx,[rsi+0x598]
   14001d0cd:	call   QWORD PTR [rip+0x1252d]        # 0x14002f600
   14001d0d3:	test   r15,r15
   14001d0d6:	je     0x14001d0f1
   14001d0d8:	mov    rcx,QWORD PTR [r15+0x8]
   14001d0dc:	test   rcx,rcx
   14001d0df:	je     0x14001d0e7
   14001d0e1:	call   QWORD PTR [rip+0x12a91]        # 0x14002fb78
   14001d0e7:	mov    rcx,r15
   14001d0ea:	call   QWORD PTR [rip+0x12a88]        # 0x14002fb78
   14001d0f0:	nop
   14001d0f1:	lea    rcx,[rsp+0x50]
   14001d0f6:	call   QWORD PTR [rip+0x1287c]        # 0x14002f978
   14001d0fc:	nop
   14001d0fd:	lea    rcx,[rsp+0x48]
   14001d102:	call   QWORD PTR [rip+0x12870]        # 0x14002f978
   14001d108:	mov    rcx,QWORD PTR [rbp+0x8e0]
   14001d10f:	xor    rcx,rsp
   14001d112:	call   0x14002c960
   14001d117:	lea    r11,[rsp+0x9f0]
   14001d11f:	mov    rbx,QWORD PTR [r11+0x38]
   14001d123:	mov    rsi,QWORD PTR [r11+0x40]
   14001d127:	mov    rdi,QWORD PTR [r11+0x48]
   14001d12b:	mov    rsp,r11
   14001d12e:	pop    r15
   14001d130:	pop    r14
   14001d132:	pop    r13
   14001d134:	pop    r12
   14001d136:	pop    rbp
   14001d137:	ret    
   14001d138:	int3   
   14001d139:	int3   
   14001d13a:	int3   
   14001d13b:	int3   
   14001d13c:	int3   
   14001d13d:	int3   
   14001d13e:	int3   
   14001d13f:	int3   
   14001d140:	mov    rax,rsp
   14001d143:	push   rbp
   14001d144:	push   r12
   14001d146:	push   r13
   14001d148:	push   r14
   14001d14a:	push   r15
   14001d14c:	lea    rbp,[rax-0x578]
   14001d153:	sub    rsp,0x650
   14001d15a:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001d163:	mov    QWORD PTR [rax+0x10],rbx
   14001d167:	mov    QWORD PTR [rax+0x18],rsi
   14001d16b:	mov    QWORD PTR [rax+0x20],rdi
   14001d16f:	mov    rax,QWORD PTR [rip+0x1ee8a]        # 0x14003c000
   14001d176:	xor    rax,rsp
   14001d179:	mov    QWORD PTR [rbp+0x540],rax
   14001d180:	mov    rsi,rcx
   14001d183:	lea    rax,[rip+0xfe6]        # 0x14001e170
   14001d18a:	mov    QWORD PTR [rip+0x24917],rax        # 0x140041aa8
   14001d191:	add    rcx,0x160
   14001d198:	xor    edx,edx
   14001d19a:	call   QWORD PTR [rip+0x12468]        # 0x14002f608
   14001d1a0:	lea    rcx,[rsi+0x598]
   14001d1a7:	xor    edx,edx
   14001d1a9:	call   QWORD PTR [rip+0x12459]        # 0x14002f608
   14001d1af:	lea    rcx,[rsi+0x670]
   14001d1b6:	xor    edx,edx
   14001d1b8:	call   QWORD PTR [rip+0x1244a]        # 0x14002f608
   14001d1be:	lea    rcx,[rsi+0x4c0]
   14001d1c5:	xor    edx,edx
   14001d1c7:	call   QWORD PTR [rip+0x1243b]        # 0x14002f608
   14001d1cd:	lea    r13,[rsi+0xe08]
   14001d1d4:	xor    edx,edx
   14001d1d6:	mov    rcx,r13
   14001d1d9:	call   QWORD PTR [rip+0x12429]        # 0x14002f608
   14001d1df:	lea    rcx,[rsi+0xd30]
   14001d1e6:	xor    edx,edx
   14001d1e8:	call   QWORD PTR [rip+0x1241a]        # 0x14002f608
   14001d1ee:	lea    rcx,[rsi+0x3e8]
   14001d1f5:	mov    edx,0x1
   14001d1fa:	call   QWORD PTR [rip+0x12408]        # 0x14002f608
   14001d200:	lea    rcx,[rsi+0xee0]
   14001d207:	xor    edx,edx
   14001d209:	call   QWORD PTR [rip+0x123f9]        # 0x14002f608
   14001d20f:	lea    rcx,[rsi+0x310]
   14001d216:	xor    edx,edx
   14001d218:	call   QWORD PTR [rip+0x123ea]        # 0x14002f608
   14001d21e:	lea    rcx,[rsi+0x9d0]
   14001d225:	mov    edx,0x1
   14001d22a:	call   QWORD PTR [rip+0x123d8]        # 0x14002f608
   14001d230:	lea    rcx,[rsi+0x238]
   14001d237:	mov    edx,0x1
   14001d23c:	call   QWORD PTR [rip+0x123c6]        # 0x14002f608
   14001d242:	lea    rcx,[rsi+0x820]
   14001d249:	mov    edx,0x1
   14001d24e:	call   QWORD PTR [rip+0x123b4]        # 0x14002f608
   14001d254:	lea    rcx,[rsi+0xb80]
   14001d25b:	mov    r8d,0x12a
   14001d261:	lea    rdx,[rbp+0x2e0]
   14001d268:	call   QWORD PTR [rip+0x123c2]        # 0x14002f630
   14001d26e:	lea    rdx,[rbp+0x2e0]
   14001d275:	lea    rcx,[rsp+0x30]
   14001d27a:	call   QWORD PTR [rip+0x12418]        # 0x14002f698
   14001d280:	nop
   14001d281:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d286:	call   0x14002ae90
   14001d28b:	mov    r14,rax
   14001d28e:	mov    QWORD PTR [rsp+0x38],rax
   14001d293:	xor    r9d,r9d
   14001d296:	xor    r8d,r8d
   14001d299:	mov    edx,0x18b
   14001d29e:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001d2a5:	call   QWORD PTR [rip+0x12255]        # 0x14002f500
   14001d2ab:	mov    rbx,rax
   14001d2ae:	mov    r15d,0x12c
   14001d2b4:	imul   bx,r15w
   14001d2b9:	test   bx,bx
   14001d2bc:	jne    0x14001d368
   14001d2c2:	mov    rdi,QWORD PTR [rsi+0x40]
   14001d2c6:	mov    edx,0xfffffffa
   14001d2cb:	mov    rcx,rdi
   14001d2ce:	call   QWORD PTR [rip+0x1220c]        # 0x14002f4e0
   14001d2d4:	mov    rbx,rax
   14001d2d7:	mov    r9d,r15d
   14001d2da:	lea    r8,[rsp+0x50]
   14001d2df:	mov    edx,0x80
   14001d2e4:	mov    rcx,rax
   14001d2e7:	call   QWORD PTR [rip+0x121eb]        # 0x14002f4d8
   14001d2ed:	mov    r9d,r15d
   14001d2f0:	lea    r8,[rbp+0x80]
   14001d2f7:	mov    edx,0xe721
   14001d2fc:	mov    rcx,rbx
   14001d2ff:	call   QWORD PTR [rip+0x121d3]        # 0x14002f4d8
   14001d305:	mov    r9d,0x10
   14001d30b:	lea    r8,[rsp+0x50]
   14001d310:	lea    rdx,[rbp+0x80]
   14001d317:	mov    rcx,rdi
   14001d31a:	call   QWORD PTR [rip+0x121c8]        # 0x14002f4e8
   14001d320:	cmp    DWORD PTR [rip+0x248cd],0x0        # 0x140041bf4
   14001d327:	je     0x14001d33a
   14001d329:	cmp    DWORD PTR [rip+0x248c0],0x0        # 0x140041bf0
   14001d330:	jne    0x14001d33a
   14001d332:	xor    ecx,ecx
   14001d334:	call   QWORD PTR [rip+0x12196]        # 0x14002f4d0
   14001d33a:	mov    rcx,rsi
   14001d33d:	call   0x14001d770
   14001d342:	test   r14,r14
   14001d345:	je     0x14001d72a
   14001d34b:	mov    rcx,QWORD PTR [r14+0x8]
   14001d34f:	test   rcx,rcx
   14001d352:	je     0x14001d35a
   14001d354:	call   QWORD PTR [rip+0x1281e]        # 0x14002fb78
   14001d35a:	mov    rcx,r14
   14001d35d:	call   QWORD PTR [rip+0x12815]        # 0x14002fb78
   14001d363:	jmp    0x14001d72a
   14001d368:	mov    edx,0x3
   14001d36d:	mov    rcx,r14
   14001d370:	call   0x14002ab70
   14001d375:	mov    QWORD PTR [rsp+0x28],rax
   14001d37a:	test   rax,rax
   14001d37d:	jne    0x14001d427
   14001d383:	mov    rdi,QWORD PTR [rsi+0x40]
   14001d387:	lea    edx,[rax-0x6]
   14001d38a:	mov    rcx,rdi
   14001d38d:	call   QWORD PTR [rip+0x1214d]        # 0x14002f4e0
   14001d393:	mov    rbx,rax
   14001d396:	mov    r9d,r15d
   14001d399:	lea    r8,[rbp+0x80]
   14001d3a0:	mov    edx,0x80
   14001d3a5:	mov    rcx,rax
   14001d3a8:	call   QWORD PTR [rip+0x1212a]        # 0x14002f4d8
   14001d3ae:	mov    r9d,r15d
   14001d3b1:	lea    r8,[rsp+0x50]
   14001d3b6:	mov    edx,0xe720
   14001d3bb:	mov    rcx,rbx
   14001d3be:	call   QWORD PTR [rip+0x12114]        # 0x14002f4d8
   14001d3c4:	mov    r9d,0x10
   14001d3ca:	lea    r8,[rbp+0x80]
   14001d3d1:	lea    rdx,[rsp+0x50]
   14001d3d6:	mov    rcx,rdi
   14001d3d9:	call   QWORD PTR [rip+0x12109]        # 0x14002f4e8
   14001d3df:	cmp    DWORD PTR [rip+0x2480e],0x0        # 0x140041bf4
   14001d3e6:	je     0x14001d3f9
   14001d3e8:	cmp    DWORD PTR [rip+0x24801],0x0        # 0x140041bf0
   14001d3ef:	jne    0x14001d3f9
   14001d3f1:	xor    ecx,ecx
   14001d3f3:	call   QWORD PTR [rip+0x120d7]        # 0x14002f4d0
   14001d3f9:	mov    rcx,rsi
   14001d3fc:	call   0x14001d770
   14001d401:	test   r14,r14
   14001d404:	je     0x14001d72a
   14001d40a:	mov    rcx,QWORD PTR [r14+0x8]
   14001d40e:	test   rcx,rcx
   14001d411:	je     0x14001d419
   14001d413:	call   QWORD PTR [rip+0x1275f]        # 0x14002fb78
   14001d419:	mov    rcx,r14
   14001d41c:	call   QWORD PTR [rip+0x12756]        # 0x14002fb78
   14001d422:	jmp    0x14001d72a
   14001d427:	movzx  ecx,bx
   14001d42a:	call   QWORD PTR [rip+0x11fe8]        # 0x14002f418
   14001d430:	mov    rdi,rax
   14001d433:	test   rax,rax
   14001d436:	jne    0x14001d4e0
   14001d43c:	mov    rdi,QWORD PTR [rsi+0x40]
   14001d440:	lea    edx,[rax-0x6]
   14001d443:	mov    rcx,rdi
   14001d446:	call   QWORD PTR [rip+0x12094]        # 0x14002f4e0
   14001d44c:	mov    rbx,rax
   14001d44f:	mov    r9d,r15d
   14001d452:	lea    r8,[rbp+0x80]
   14001d459:	mov    edx,0x80
   14001d45e:	mov    rcx,rax
   14001d461:	call   QWORD PTR [rip+0x12071]        # 0x14002f4d8
   14001d467:	mov    r9d,r15d
   14001d46a:	lea    r8,[rsp+0x50]
   14001d46f:	mov    edx,0xe71c
   14001d474:	mov    rcx,rbx
   14001d477:	call   QWORD PTR [rip+0x1205b]        # 0x14002f4d8
   14001d47d:	mov    r9d,0x10
   14001d483:	lea    r8,[rbp+0x80]
   14001d48a:	lea    rdx,[rsp+0x50]
   14001d48f:	mov    rcx,rdi
   14001d492:	call   QWORD PTR [rip+0x12050]        # 0x14002f4e8
   14001d498:	cmp    DWORD PTR [rip+0x24755],0x0        # 0x140041bf4
   14001d49f:	je     0x14001d4b2
   14001d4a1:	cmp    DWORD PTR [rip+0x24748],0x0        # 0x140041bf0
   14001d4a8:	jne    0x14001d4b2
   14001d4aa:	xor    ecx,ecx
   14001d4ac:	call   QWORD PTR [rip+0x1201e]        # 0x14002f4d0
   14001d4b2:	mov    rcx,rsi
   14001d4b5:	call   0x14001d770
   14001d4ba:	test   r14,r14
   14001d4bd:	je     0x14001d72a
   14001d4c3:	mov    rcx,QWORD PTR [r14+0x8]
   14001d4c7:	test   rcx,rcx
   14001d4ca:	je     0x14001d4d2
   14001d4cc:	call   QWORD PTR [rip+0x126a6]        # 0x14002fb78
   14001d4d2:	mov    rcx,r14
   14001d4d5:	call   QWORD PTR [rip+0x1269d]        # 0x14002fb78
   14001d4db:	jmp    0x14001d72a
   14001d4e0:	mov    r15,rax
   14001d4e3:	xor    ebx,ebx
   14001d4e5:	movzx  r12d,bx
   14001d4e9:	xor    r9d,r9d
   14001d4ec:	xor    r8d,r8d
   14001d4ef:	mov    edx,0x18b
   14001d4f4:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001d4fb:	call   QWORD PTR [rip+0x11fff]        # 0x14002f500
   14001d501:	test   eax,eax
   14001d503:	jle    0x14001d646
   14001d509:	xor    r14d,r14d
   14001d50c:	nop    DWORD PTR [rax+0x0]
   14001d510:	lea    rcx,[rsp+0x20]
   14001d515:	call   QWORD PTR [rip+0x12175]        # 0x14002f690
   14001d51b:	nop
   14001d51c:	lea    r8,[rsp+0x20]
   14001d521:	mov    edx,ebx
   14001d523:	mov    rcx,r13
   14001d526:	call   QWORD PTR [rip+0x122ec]        # 0x14002f818
   14001d52c:	mov    rdx,QWORD PTR [rsp+0x20]
   14001d531:	lea    rcx,[rsp+0x40]
   14001d536:	call   QWORD PTR [rip+0x1215c]        # 0x14002f698
   14001d53c:	mov    r8,QWORD PTR [rax]
   14001d53f:	lea    rdx,[rbp+0x80]
   14001d546:	movzx  eax,BYTE PTR [r8]
   14001d54a:	test   al,al
   14001d54c:	je     0x14001d59d
   14001d54e:	mov    r9,QWORD PTR [rip+0x1fda3]        # 0x14003d2f8
   14001d555:	lea    r13,[rip+0x13ca4]        # 0x140031200
   14001d55c:	nop    DWORD PTR [rax+0x0]
   14001d560:	cmp    al,0x20
   14001d562:	jae    0x14001d56f
   14001d564:	movzx  eax,al
   14001d567:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   14001d56d:	jmp    0x14001d584
   14001d56f:	cmp    al,0x80
   14001d571:	jae    0x14001d578
   14001d573:	movzx  ecx,al
   14001d576:	jmp    0x14001d584
   14001d578:	movzx  eax,al
   14001d57b:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   14001d584:	mov    WORD PTR [rdx],cx
   14001d587:	add    rdx,0x2
   14001d58b:	inc    r8
   14001d58e:	movzx  eax,BYTE PTR [r8]
   14001d592:	test   al,al
   14001d594:	jne    0x14001d560
   14001d596:	lea    r13,[rsi+0xe08]
   14001d59d:	mov    WORD PTR [rdx],r14w
   14001d5a1:	lea    rcx,[rsp+0x40]
   14001d5a6:	call   QWORD PTR [rip+0x123cc]        # 0x14002f978
   14001d5ac:	lea    rax,[rbp+0x80]
   14001d5b3:	mov    rdx,r15
   14001d5b6:	movzx  ecx,BYTE PTR [rax]
   14001d5b9:	test   cl,cl
   14001d5bb:	jne    0x14001d5c2
   14001d5bd:	cmp    BYTE PTR [rax+0x1],cl
   14001d5c0:	je     0x14001d5d5
   14001d5c2:	mov    BYTE PTR [rdx],cl
   14001d5c4:	movzx  ecx,BYTE PTR [rax+0x1]
   14001d5c8:	mov    BYTE PTR [rdx+0x1],cl
   14001d5cb:	add    rdx,0x2
   14001d5cf:	add    rax,0x2
   14001d5d3:	jmp    0x14001d5b6
   14001d5d5:	movzx  ecx,BYTE PTR [rax]
   14001d5d8:	mov    BYTE PTR [rdx],cl
   14001d5da:	movzx  ecx,BYTE PTR [rax+0x1]
   14001d5de:	mov    BYTE PTR [rdx+0x1],cl
   14001d5e1:	lea    rax,[rbp+0x80]
   14001d5e8:	mov    ecx,r14d
   14001d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d5f0:	cmp    BYTE PTR [rax],0x0
   14001d5f3:	jne    0x14001d5fb
   14001d5f5:	cmp    BYTE PTR [rax+0x1],0x0
   14001d5f9:	je     0x14001d603
   14001d5fb:	add    rax,0x2
   14001d5ff:	inc    ecx
   14001d601:	jmp    0x14001d5f0
   14001d603:	add    ecx,ecx
   14001d605:	add    rcx,0x2
   14001d609:	add    r15,rcx
   14001d60c:	lea    rcx,[rsp+0x20]
   14001d611:	call   QWORD PTR [rip+0x12379]        # 0x14002f990
   14001d617:	inc    r12w
   14001d61b:	movzx  ebx,r12w
   14001d61f:	xor    r9d,r9d
   14001d622:	xor    r8d,r8d
   14001d625:	mov    edx,0x18b
   14001d62a:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001d631:	call   QWORD PTR [rip+0x11ec9]        # 0x14002f500
   14001d637:	cmp    ebx,eax
   14001d639:	jl     0x14001d510
   14001d63f:	mov    r14,QWORD PTR [rsp+0x38]
   14001d644:	xor    ebx,ebx
   14001d646:	mov    WORD PTR [r15],bx
   14001d64a:	mov    DWORD PTR [rsi+0x1c24],0x1
   14001d654:	mov    DWORD PTR [rsi+0x158],ebx
   14001d65a:	mov    rax,rdi
   14001d65d:	mov    ecx,ebx
   14001d65f:	nop
   14001d660:	cmp    BYTE PTR [rax],0x0
   14001d663:	jne    0x14001d66b
   14001d665:	cmp    BYTE PTR [rax+0x1],0x0
   14001d669:	je     0x14001d673
   14001d66b:	add    rax,0x2
   14001d66f:	inc    ecx
   14001d671:	jmp    0x14001d660
   14001d673:	lea    eax,[rcx+rcx*1]
   14001d676:	mov    ecx,0x2
   14001d67b:	movsxd rdx,eax
   14001d67e:	cmp    rcx,rdx
   14001d681:	jge    0x14001d6ab
   14001d683:	movzx  eax,WORD PTR [rcx+rdi*1]
   14001d687:	sub    ax,0x30
   14001d68b:	cmp    ax,0x9
   14001d68f:	ja     0x14001d699
   14001d691:	cmp    WORD PTR [rcx+rdi*1-0x2],0x20
   14001d697:	je     0x14001d69f
   14001d699:	add    rcx,0x2
   14001d69d:	jmp    0x14001d67e
   14001d69f:	mov    ebx,0x7
   14001d6a4:	mov    r15,QWORD PTR [rsp+0x28]
   14001d6a9:	jmp    0x14001d6ca
   14001d6ab:	inc    DWORD PTR [rip+0x2453f]        # 0x140041bf0
   14001d6b1:	mov    r15,QWORD PTR [rsp+0x28]
   14001d6b6:	mov    rdx,r15
   14001d6b9:	mov    rcx,rdi
   14001d6bc:	call   0x140001af0
   14001d6c1:	movzx  ebx,ax
   14001d6c4:	dec    DWORD PTR [rip+0x24526]        # 0x140041bf0
   14001d6ca:	movzx  edx,bx
   14001d6cd:	mov    rcx,QWORD PTR [rsi+0x40]
   14001d6d1:	call   0x140021b80
   14001d6d6:	mov    rcx,rdi
   14001d6d9:	call   QWORD PTR [rip+0x11da1]        # 0x14002f480
   14001d6df:	mov    rcx,r15
   14001d6e2:	call   0x14002a9e0
   14001d6e7:	test   bx,bx
   14001d6ea:	je     0x14001d6f6
   14001d6ec:	mov    rcx,rsi
   14001d6ef:	call   0x14001d770
   14001d6f4:	jmp    0x14001d72a
   14001d6f6:	mov    DWORD PTR [rsi+0x1c24],0x0
   14001d700:	test   r14,r14
   14001d703:	je     0x14001d71d
   14001d705:	mov    rcx,QWORD PTR [r14+0x8]
   14001d709:	test   rcx,rcx
   14001d70c:	je     0x14001d714
   14001d70e:	call   QWORD PTR [rip+0x12464]        # 0x14002fb78
   14001d714:	mov    rcx,r14
   14001d717:	call   QWORD PTR [rip+0x1245b]        # 0x14002fb78
   14001d71d:	mov    rax,QWORD PTR [rsi]
   14001d720:	mov    rcx,rsi
   14001d723:	call   QWORD PTR [rax+0x310]
   14001d729:	nop
   14001d72a:	lea    rcx,[rsp+0x30]
   14001d72f:	call   QWORD PTR [rip+0x12243]        # 0x14002f978
   14001d735:	mov    rcx,QWORD PTR [rbp+0x540]
   14001d73c:	xor    rcx,rsp
   14001d73f:	call   0x14002c960
   14001d744:	lea    r11,[rsp+0x650]
   14001d74c:	mov    rbx,QWORD PTR [r11+0x38]
   14001d750:	mov    rsi,QWORD PTR [r11+0x40]
   14001d754:	mov    rdi,QWORD PTR [r11+0x48]
   14001d758:	mov    rsp,r11
   14001d75b:	pop    r15
   14001d75d:	pop    r14
   14001d75f:	pop    r13
   14001d761:	pop    r12
   14001d763:	pop    rbp
   14001d764:	ret    
   14001d765:	int3   
   14001d766:	int3   
   14001d767:	int3   
   14001d768:	int3   
   14001d769:	int3   
   14001d76a:	int3   
   14001d76b:	int3   
   14001d76c:	int3   
   14001d76d:	int3   
   14001d76e:	int3   
   14001d76f:	int3   
   14001d770:	rex push rdi
   14001d772:	sub    rsp,0x30
   14001d776:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d77f:	mov    QWORD PTR [rsp+0x48],rbx
   14001d784:	mov    QWORD PTR [rsp+0x50],rsi
   14001d789:	mov    rsi,rcx
   14001d78c:	mov    DWORD PTR [rcx+0x1c24],0x0
   14001d796:	mov    edx,0x1
   14001d79b:	add    rcx,0x598
   14001d7a2:	call   QWORD PTR [rip+0x11e60]        # 0x14002f608
   14001d7a8:	lea    rcx,[rsi+0x670]
   14001d7af:	mov    edx,0x1
   14001d7b4:	call   QWORD PTR [rip+0x11e4e]        # 0x14002f608
   14001d7ba:	lea    rcx,[rsi+0x4c0]
   14001d7c1:	mov    edx,0x1
   14001d7c6:	call   QWORD PTR [rip+0x11e3c]        # 0x14002f608
   14001d7cc:	lea    rcx,[rsi+0xe08]
   14001d7d3:	mov    edx,0x1
   14001d7d8:	call   QWORD PTR [rip+0x11e2a]        # 0x14002f608
   14001d7de:	lea    rcx,[rsi+0xd30]
   14001d7e5:	mov    edx,0x1
   14001d7ea:	call   QWORD PTR [rip+0x11e18]        # 0x14002f608
   14001d7f0:	lea    rcx,[rsi+0x3e8]
   14001d7f7:	mov    edx,0x1
   14001d7fc:	call   QWORD PTR [rip+0x11e06]        # 0x14002f608
   14001d802:	lea    rcx,[rsi+0x310]
   14001d809:	mov    edx,0x1
   14001d80e:	call   QWORD PTR [rip+0x11df4]        # 0x14002f608
   14001d814:	lea    rcx,[rsi+0xb80]
   14001d81b:	xor    edx,edx
   14001d81d:	call   QWORD PTR [rip+0x11de5]        # 0x14002f608
   14001d823:	lea    rcx,[rsi+0xaa8]
   14001d82a:	xor    edx,edx
   14001d82c:	call   QWORD PTR [rip+0x11dd6]        # 0x14002f608
   14001d832:	lea    rcx,[rsi+0xc58]
   14001d839:	xor    edx,edx
   14001d83b:	call   QWORD PTR [rip+0x11dc7]        # 0x14002f608
   14001d841:	lea    rcx,[rsp+0x40]
   14001d846:	call   QWORD PTR [rip+0x11e44]        # 0x14002f690
   14001d84c:	nop
   14001d84d:	mov    edx,0xe724
   14001d852:	lea    rcx,[rsp+0x40]
   14001d857:	call   QWORD PTR [rip+0x11e23]        # 0x14002f680
   14001d85d:	mov    rdx,QWORD PTR [rsp+0x40]
   14001d862:	lea    rcx,[rsi+0x160]
   14001d869:	call   QWORD PTR [rip+0x11dc9]        # 0x14002f638
   14001d86f:	xor    edx,edx
   14001d871:	lea    rcx,[rsi+0x160]
   14001d878:	call   QWORD PTR [rip+0x11d8a]        # 0x14002f608
   14001d87e:	lea    rcx,[rsi+0x598]
   14001d885:	call   QWORD PTR [rip+0x11d75]        # 0x14002f600
   14001d88b:	lea    rcx,[rsi+0x820]
   14001d892:	xor    edx,edx
   14001d894:	call   QWORD PTR [rip+0x11d6e]        # 0x14002f608
   14001d89a:	lea    rcx,[rsi+0x9d0]
   14001d8a1:	xor    edx,edx
   14001d8a3:	call   QWORD PTR [rip+0x11d5f]        # 0x14002f608
   14001d8a9:	lea    rcx,[rsi+0x238]
   14001d8b0:	xor    edx,edx
   14001d8b2:	call   QWORD PTR [rip+0x11d50]        # 0x14002f608
   14001d8b8:	mov    DWORD PTR [rsi+0x1c28],0x1
   14001d8c2:	xor    r9d,r9d
   14001d8c5:	xor    r8d,r8d
   14001d8c8:	mov    edx,0x402
   14001d8cd:	mov    rcx,QWORD PTR [rsi+0x938]
   14001d8d4:	call   QWORD PTR [rip+0x11c26]        # 0x14002f500
   14001d8da:	xor    r9d,r9d
   14001d8dd:	xor    r8d,r8d
   14001d8e0:	mov    edx,0x402
   14001d8e5:	mov    rcx,QWORD PTR [rsi+0x788]
   14001d8ec:	call   QWORD PTR [rip+0x11c0e]        # 0x14002f500
   14001d8f2:	nop
   14001d8f3:	lea    rcx,[rsp+0x40]
   14001d8f8:	call   QWORD PTR [rip+0x12092]        # 0x14002f990
   14001d8fe:	mov    rbx,QWORD PTR [rsp+0x48]
   14001d903:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d908:	add    rsp,0x30
   14001d90c:	pop    rdi
   14001d90d:	ret    
   14001d90e:	int3   
   14001d90f:	int3   
   14001d910:	rex push rdi
   14001d912:	sub    rsp,0x30
   14001d916:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d91f:	mov    QWORD PTR [rsp+0x48],rbx
   14001d924:	mov    QWORD PTR [rsp+0x50],rbp
   14001d929:	mov    QWORD PTR [rsp+0x58],rsi
   14001d92e:	mov    rdi,rcx
   14001d931:	cmp    DWORD PTR [rcx+0x1c24],0x0
   14001d938:	je     0x14001d949
   14001d93a:	mov    DWORD PTR [rcx+0x158],0x1
   14001d944:	jmp    0x14001db84
   14001d949:	lea    rsi,[rcx+0x3e8]
   14001d950:	xor    ebp,ebp
   14001d952:	test   rsi,rsi
   14001d955:	je     0x14001db71
   14001d95b:	cmp    QWORD PTR [rsi+0x40],rbp
   14001d95f:	je     0x14001db71
   14001d965:	mov    rcx,rsi
   14001d968:	call   QWORD PTR [rip+0x11ca2]        # 0x14002f610
   14001d96e:	test   eax,eax
   14001d970:	je     0x14001db71
   14001d976:	xor    edx,edx
   14001d978:	lea    rcx,[rdi+0x598]
   14001d97f:	call   QWORD PTR [rip+0x11cb3]        # 0x14002f638
   14001d985:	xor    r9d,r9d
   14001d988:	xor    r8d,r8d
   14001d98b:	mov    edx,0x184
   14001d990:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14001d997:	call   QWORD PTR [rip+0x11b63]        # 0x14002f500
   14001d99d:	xor    r9d,r9d
   14001d9a0:	xor    r8d,r8d
   14001d9a3:	mov    edx,0x184
   14001d9a8:	mov    rcx,QWORD PTR [rdi+0xe48]
   14001d9af:	call   QWORD PTR [rip+0x11b4b]        # 0x14002f500
   14001d9b5:	lea    rcx,[rdi+0x820]
   14001d9bc:	xor    edx,edx
   14001d9be:	call   QWORD PTR [rip+0x11c44]        # 0x14002f608
   14001d9c4:	lea    rcx,[rdi+0x9d0]
   14001d9cb:	xor    edx,edx
   14001d9cd:	call   QWORD PTR [rip+0x11c35]        # 0x14002f608
   14001d9d3:	lea    rcx,[rdi+0x238]
   14001d9da:	xor    edx,edx
   14001d9dc:	call   QWORD PTR [rip+0x11c26]        # 0x14002f608
   14001d9e2:	lea    rcx,[rsp+0x40]
   14001d9e7:	call   QWORD PTR [rip+0x11ca3]        # 0x14002f690
   14001d9ed:	nop
   14001d9ee:	mov    edx,0xe717
   14001d9f3:	lea    rcx,[rsp+0x40]
   14001d9f8:	call   QWORD PTR [rip+0x11c82]        # 0x14002f680
   14001d9fe:	mov    rdx,QWORD PTR [rsp+0x40]
   14001da03:	mov    rcx,rsi
   14001da06:	call   QWORD PTR [rip+0x11c2c]        # 0x14002f638
   14001da0c:	xor    edx,edx
   14001da0e:	mov    rcx,rsi
   14001da11:	call   QWORD PTR [rip+0x11bf1]        # 0x14002f608
   14001da17:	xor    edx,edx
   14001da19:	lea    rcx,[rdi+0x598]
   14001da20:	call   QWORD PTR [rip+0x11be2]        # 0x14002f608
   14001da26:	lea    rcx,[rdi+0x4c0]
   14001da2d:	xor    edx,edx
   14001da2f:	call   QWORD PTR [rip+0x11bd3]        # 0x14002f608
   14001da35:	lea    rcx,[rdi+0x670]
   14001da3c:	xor    edx,edx
   14001da3e:	call   QWORD PTR [rip+0x11bc4]        # 0x14002f608
   14001da44:	lea    rcx,[rdi+0x310]
   14001da4b:	xor    edx,edx
   14001da4d:	call   QWORD PTR [rip+0x11bb5]        # 0x14002f608
   14001da53:	lea    rcx,[rdi+0xd30]
   14001da5a:	xor    edx,edx
   14001da5c:	call   QWORD PTR [rip+0x11ba6]        # 0x14002f608
   14001da62:	lea    rcx,[rdi+0xe08]
   14001da69:	xor    edx,edx
   14001da6b:	call   QWORD PTR [rip+0x11b97]        # 0x14002f608
   14001da71:	lea    rcx,[rdi+0xb80]
   14001da78:	lea    edx,[rbp+0x1]
   14001da7b:	call   QWORD PTR [rip+0x11b87]        # 0x14002f608
   14001da81:	lea    rcx,[rdi+0xaa8]
   14001da88:	lea    edx,[rbp+0x1]
   14001da8b:	call   QWORD PTR [rip+0x11b77]        # 0x14002f608
   14001da91:	lea    rcx,[rdi+0xc58]
   14001da98:	lea    edx,[rbp+0x1]
   14001da9b:	call   QWORD PTR [rip+0x11b67]        # 0x14002f608
   14001daa1:	lea    rcx,[rdi+0xee0]
   14001daa8:	lea    edx,[rbp+0x1]
   14001daab:	call   QWORD PTR [rip+0x11b57]        # 0x14002f608
   14001dab1:	mov    edx,0xe723
   14001dab6:	lea    rcx,[rsp+0x40]
   14001dabb:	call   QWORD PTR [rip+0x11bbf]        # 0x14002f680
   14001dac1:	mov    rdx,QWORD PTR [rsp+0x40]
   14001dac6:	lea    rcx,[rdi+0x160]
   14001dacd:	call   QWORD PTR [rip+0x11b65]        # 0x14002f638
   14001dad3:	lea    edx,[rbp+0x1]
   14001dad6:	lea    rcx,[rdi+0x160]
   14001dadd:	call   QWORD PTR [rip+0x11b25]        # 0x14002f608
   14001dae3:	xor    r9d,r9d
   14001dae6:	xor    r8d,r8d
   14001dae9:	mov    edx,0x402
   14001daee:	mov    rcx,QWORD PTR [rdi+0x938]
   14001daf5:	call   QWORD PTR [rip+0x11a05]        # 0x14002f500
   14001dafb:	xor    r9d,r9d
   14001dafe:	xor    r8d,r8d
   14001db01:	mov    edx,0x402
   14001db06:	mov    rcx,QWORD PTR [rdi+0x788]
   14001db0d:	call   QWORD PTR [rip+0x119ed]        # 0x14002f500
   14001db13:	lea    rcx,[rdi+0xfb8]
   14001db1a:	call   0x140017cb0
   14001db1f:	mov    rcx,QWORD PTR [rdi+0xfc8]
   14001db26:	call   QWORD PTR [rip+0x11954]        # 0x14002f480
   14001db2c:	mov    rcx,QWORD PTR [rdi+0xfb8]
   14001db33:	call   QWORD PTR [rip+0x11737]        # 0x14002f270
   14001db39:	mov    WORD PTR [rdi+0x1108],bp
   14001db40:	cmp    DWORD PTR [rdi+0x1c20],ebp
   14001db46:	je     0x14001db66
   14001db48:	lea    rcx,[rdi+0x14c8]
   14001db4f:	call   0x140017cb0
   14001db54:	lea    rcx,[rdi+0x14c8]
   14001db5b:	call   0x1400179f0
   14001db60:	mov    DWORD PTR [rdi+0x1c20],ebp
   14001db66:	lea    rcx,[rsp+0x40]
   14001db6b:	call   QWORD PTR [rip+0x11e1f]        # 0x14002f990
   14001db71:	mov    DWORD PTR [rdi+0x1c28],ebp
   14001db77:	lea    rcx,[rdi+0xb80]
   14001db7e:	call   QWORD PTR [rip+0x11a7c]        # 0x14002f600
   14001db84:	mov    rbx,QWORD PTR [rsp+0x48]
   14001db89:	mov    rbp,QWORD PTR [rsp+0x50]
   14001db8e:	mov    rsi,QWORD PTR [rsp+0x58]
   14001db93:	add    rsp,0x30
   14001db97:	pop    rdi
   14001db98:	ret    
   14001db99:	int3   
   14001db9a:	int3   
   14001db9b:	int3   
   14001db9c:	int3   
   14001db9d:	int3   
   14001db9e:	int3   
   14001db9f:	int3   
   14001dba0:	rex push rbx
   14001dba2:	sub    rsp,0x290
   14001dba9:	mov    rax,QWORD PTR [rip+0x1e450]        # 0x14003c000
   14001dbb0:	xor    rax,rsp
   14001dbb3:	mov    QWORD PTR [rsp+0x280],rax
   14001dbbb:	mov    rbx,rcx
   14001dbbe:	lea    rdx,[rsp+0x20]
   14001dbc3:	mov    r8d,0x12a
   14001dbc9:	add    rcx,0xb80
   14001dbd0:	call   QWORD PTR [rip+0x11a5a]        # 0x14002f630
   14001dbd6:	cmp    WORD PTR [rsp+0x20],0x0
   14001dbdc:	lea    rcx,[rbx+0x160]
   14001dbe3:	jne    0x14001dbe9
   14001dbe5:	xor    edx,edx
   14001dbe7:	jmp    0x14001dbee
   14001dbe9:	mov    edx,0x1
   14001dbee:	call   QWORD PTR [rip+0x11a14]        # 0x14002f608
   14001dbf4:	mov    rcx,QWORD PTR [rsp+0x280]
   14001dbfc:	xor    rcx,rsp
   14001dbff:	call   0x14002c960
   14001dc04:	add    rsp,0x290
   14001dc0b:	pop    rbx
   14001dc0c:	ret    
   14001dc0d:	int3   
   14001dc0e:	int3   
   14001dc0f:	int3   
   14001dc10:	mov    rax,rsp
   14001dc13:	push   rbp
   14001dc14:	push   r12
   14001dc16:	push   r13
   14001dc18:	push   r14
   14001dc1a:	push   r15
   14001dc1c:	lea    rbp,[rax-0x568]
   14001dc23:	sub    rsp,0x640
   14001dc2a:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001dc33:	mov    QWORD PTR [rax+0x10],rbx
   14001dc37:	mov    QWORD PTR [rax+0x18],rsi
   14001dc3b:	mov    QWORD PTR [rax+0x20],rdi
   14001dc3f:	mov    rax,QWORD PTR [rip+0x1e3ba]        # 0x14003c000
   14001dc46:	xor    rax,rsp
   14001dc49:	mov    QWORD PTR [rbp+0x530],rax
   14001dc50:	mov    rdi,rcx
   14001dc53:	xor    eax,eax
   14001dc55:	movzx  esi,ax
   14001dc58:	lea    r15,[rcx+0x598]
   14001dc5f:	mov    QWORD PTR [rsp+0x30],r15
   14001dc64:	mov    r8d,0x12a
   14001dc6a:	lea    rdx,[rbp+0x2d0]
   14001dc71:	mov    rcx,r15
   14001dc74:	call   QWORD PTR [rip+0x119b6]        # 0x14002f630
   14001dc7a:	xor    r9d,r9d
   14001dc7d:	xor    r8d,r8d
   14001dc80:	mov    edx,0x184
   14001dc85:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14001dc8c:	call   QWORD PTR [rip+0x1186e]        # 0x14002f500
   14001dc92:	lea    rcx,[rdi+0x160]
   14001dc99:	cmp    WORD PTR [rbp+0x2d0],si
   14001dca0:	jne    0x14001dcaf
   14001dca2:	xor    edx,edx
   14001dca4:	call   QWORD PTR [rip+0x1195e]        # 0x14002f608
   14001dcaa:	jmp    0x14001dfb1
   14001dcaf:	mov    edx,0x1
   14001dcb4:	call   QWORD PTR [rip+0x1194e]        # 0x14002f608
   14001dcba:	lea    rdx,[rip+0x148af]        # 0x140032570
   14001dcc1:	lea    rcx,[rbp+0x2d0]
   14001dcc8:	call   QWORD PTR [rip+0x11582]        # 0x14002f250
   14001dcce:	lea    rdx,[rbp+0x2d0]
   14001dcd5:	lea    rcx,[rsp+0x20]
   14001dcda:	call   QWORD PTR [rip+0x119b8]        # 0x14002f698
   14001dce0:	nop
   14001dce1:	lea    r14,[rdi+0xfb8]
   14001dce8:	mov    r8d,0x882
   14001dcee:	lea    r9,[rsp+0x40]
   14001dcf3:	mov    rdx,QWORD PTR [rax]
   14001dcf6:	mov    rcx,r14
   14001dcf9:	call   0x14001bf60
   14001dcfe:	test   ax,ax
   14001dd01:	sete   bl
   14001dd04:	lea    rcx,[rsp+0x20]
   14001dd09:	call   QWORD PTR [rip+0x11c69]        # 0x14002f978
   14001dd0f:	test   bl,bl
   14001dd11:	je     0x14001dfa8
   14001dd17:	cmp    DWORD PTR [rdi+0x1c20],0x0
   14001dd1e:	je     0x14001dd50
   14001dd20:	lea    rdx,[rsp+0x40]
   14001dd25:	lea    rcx,[rdi+0x14c8]
   14001dd2c:	call   0x140017340
   14001dd31:	test   ax,ax
   14001dd34:	jne    0x14001dd50
   14001dd36:	lea    rcx,[rdi+0x14c8]
   14001dd3d:	call   0x1400173e0
   14001dd42:	mov    rdx,rax
   14001dd45:	lea    rcx,[rsp+0x40]
   14001dd4a:	call   QWORD PTR [rip+0x11508]        # 0x14002f258
   14001dd50:	cmp    BYTE PTR [rsp+0x40],0x0
   14001dd55:	je     0x14001dd8a
   14001dd57:	lea    rdx,[rsp+0x40]
   14001dd5c:	lea    rcx,[rsp+0x20]
   14001dd61:	call   QWORD PTR [rip+0x11921]        # 0x14002f688
   14001dd67:	mov    r9,QWORD PTR [rax]
   14001dd6a:	xor    r8d,r8d
   14001dd6d:	mov    edx,0x180
   14001dd72:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14001dd79:	call   QWORD PTR [rip+0x11781]        # 0x14002f500
   14001dd7f:	lea    rcx,[rsp+0x20]
   14001dd84:	call   QWORD PTR [rip+0x11c06]        # 0x14002f990
   14001dd8a:	mov    ebx,0x700
   14001dd8f:	mov    r12d,0x80
   14001dd95:	lea    r13,[rip+0x13464]        # 0x140031200
   14001dd9c:	xor    r15d,r15d
   14001dd9f:	mov    edx,0x12c
   14001dda4:	mov    ecx,0x6
   14001dda9:	nop    DWORD PTR [rax+0x0]
   14001ddb0:	mov    rax,QWORD PTR [r14+0x10]
   14001ddb4:	mov    WORD PTR [rax],cx
   14001ddb7:	mov    rcx,QWORD PTR [r14+0x10]
   14001ddbb:	mov    rax,QWORD PTR [r14+0x148]
   14001ddc2:	mov    QWORD PTR [rcx+0x8],rax
   14001ddc6:	mov    rax,QWORD PTR [r14+0x10]
   14001ddca:	lea    rcx,[rbp+0x70]
   14001ddce:	mov    QWORD PTR [rax+0x18],rcx
   14001ddd2:	mov    rax,QWORD PTR [r14+0x10]
   14001ddd6:	mov    WORD PTR [rax+0x20],dx
   14001ddda:	mov    rcx,QWORD PTR [r14+0x10]
   14001ddde:	call   QWORD PTR [r14+0x8]
   14001dde2:	mov    rax,QWORD PTR [r14+0x10]
   14001dde6:	movzx  r11d,WORD PTR [rax]
   14001ddea:	mov    WORD PTR [r14+0x150],r11w
   14001ddf2:	movzx  eax,WORD PTR [rax+0x2]
   14001ddf6:	mov    WORD PTR [r14+0x3cc],ax
   14001ddfe:	lea    r10,[rbp+0x70]
   14001de02:	lea    r8,[rsp+0x40]
   14001de07:	movzx  edx,WORD PTR [rbp+0x70]
   14001de0b:	mov    r9,QWORD PTR [rip+0x1f4e6]        # 0x14003d2f8
   14001de12:	test   dx,dx
   14001de15:	je     0x14001de70
   14001de17:	cmp    dx,r12w
   14001de1b:	jb     0x14001de5d
   14001de1d:	mov    eax,r15d
   14001de20:	cmp    dx,WORD PTR [r9]
   14001de24:	je     0x14001de57
   14001de26:	cmp    eax,r12d
   14001de29:	jge    0x14001de3c
   14001de2b:	inc    eax
   14001de2d:	movsxd rcx,eax
   14001de30:	cmp    dx,WORD PTR [r9+rcx*2]
   14001de35:	jne    0x14001de26
   14001de37:	cmp    eax,r12d
   14001de3a:	jl     0x14001de57
   14001de3c:	lea    eax,[rbx+rdx*1]
   14001de3f:	cmp    ax,0x1f
   14001de43:	ja     0x14001de53
   14001de45:	movzx  eax,dx
   14001de48:	movzx  edx,BYTE PTR [r13+rax*2-0x1f200]
   14001de51:	jmp    0x14001de5d
   14001de53:	xor    dl,dl
   14001de55:	jmp    0x14001de5d
   14001de57:	add    al,r12b
   14001de5a:	movzx  edx,al
   14001de5d:	mov    BYTE PTR [r8],dl
   14001de60:	inc    r8
   14001de63:	add    r10,0x2
   14001de67:	movzx  edx,WORD PTR [r10]
   14001de6b:	test   dx,dx
   14001de6e:	jne    0x14001de17
   14001de70:	mov    BYTE PTR [r8],r15b
   14001de73:	test   r11w,r11w
   14001de77:	jne    0x14001dfa3
   14001de7d:	cmp    si,0x2
   14001de81:	jae    0x14001dfa3
   14001de87:	inc    si
   14001de8a:	cmp    DWORD PTR [rdi+0x1c20],r15d
   14001de91:	je     0x14001df0f
   14001de93:	lea    r8,[rsp+0x40]
   14001de98:	lea    rdx,[rbp+0x70]
   14001de9c:	movzx  eax,BYTE PTR [rsp+0x40]
   14001dea1:	test   al,al
   14001dea3:	je     0x14001dedc
   14001dea5:	cmp    al,0x20
   14001dea7:	jae    0x14001deb4
   14001dea9:	movzx  eax,al
   14001deac:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   14001deb2:	jmp    0x14001deca
   14001deb4:	cmp    al,r12b
   14001deb7:	jae    0x14001debe
   14001deb9:	movzx  ecx,al
   14001debc:	jmp    0x14001deca
   14001debe:	movzx  eax,al
   14001dec1:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   14001deca:	mov    WORD PTR [rdx],cx
   14001decd:	add    rdx,0x2
   14001ded1:	inc    r8
   14001ded4:	movzx  eax,BYTE PTR [r8]
   14001ded8:	test   al,al
   14001deda:	jne    0x14001dea5
   14001dedc:	mov    WORD PTR [rdx],r15w
   14001dee0:	lea    rdx,[rbp+0x70]
   14001dee4:	lea    rcx,[rdi+0x14c8]
   14001deeb:	call   0x140017230
   14001def0:	test   ax,ax
   14001def3:	jne    0x14001df0f
   14001def5:	lea    rcx,[rdi+0x14c8]
   14001defc:	call   0x1400173e0
   14001df01:	mov    rdx,rax
   14001df04:	lea    rcx,[rsp+0x40]
   14001df09:	call   QWORD PTR [rip+0x11349]        # 0x14002f258
   14001df0f:	lea    rdx,[rsp+0x40]
   14001df14:	lea    rcx,[rsp+0x20]
   14001df19:	call   QWORD PTR [rip+0x11769]        # 0x14002f688
   14001df1f:	mov    r9,QWORD PTR [rax]
   14001df22:	or     r8,0xffffffffffffffff
   14001df26:	mov    edx,0x1a2
   14001df2b:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14001df32:	call   QWORD PTR [rip+0x115c8]        # 0x14002f500
   14001df38:	cmp    eax,0xffffffff
   14001df3b:	sete   bl
   14001df3e:	lea    rcx,[rsp+0x20]
   14001df43:	call   QWORD PTR [rip+0x11a47]        # 0x14002f990
   14001df49:	test   bl,bl
   14001df4b:	mov    ebx,0x700
   14001df50:	mov    ecx,0x6
   14001df55:	mov    edx,0x12c
   14001df5a:	je     0x14001ddb0
   14001df60:	cmp    BYTE PTR [rsp+0x40],r15b
   14001df65:	je     0x14001ddb0
   14001df6b:	lea    rdx,[rsp+0x40]
   14001df70:	lea    rcx,[rsp+0x28]
   14001df75:	call   QWORD PTR [rip+0x1170d]        # 0x14002f688
   14001df7b:	mov    r9,QWORD PTR [rax]
   14001df7e:	xor    r8d,r8d
   14001df81:	mov    edx,0x180
   14001df86:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14001df8d:	call   QWORD PTR [rip+0x1156d]        # 0x14002f500
   14001df93:	lea    rcx,[rsp+0x28]
   14001df98:	call   QWORD PTR [rip+0x119f2]        # 0x14002f990
   14001df9e:	jmp    0x14001dd9f
   14001dfa3:	mov    r15,QWORD PTR [rsp+0x30]
   14001dfa8:	mov    rcx,r15
   14001dfab:	call   QWORD PTR [rip+0x1164f]        # 0x14002f600
   14001dfb1:	mov    rcx,QWORD PTR [rbp+0x530]
   14001dfb8:	xor    rcx,rsp
   14001dfbb:	call   0x14002c960
   14001dfc0:	lea    r11,[rsp+0x640]
   14001dfc8:	mov    rbx,QWORD PTR [r11+0x38]
   14001dfcc:	mov    rsi,QWORD PTR [r11+0x40]
   14001dfd0:	mov    rdi,QWORD PTR [r11+0x48]
   14001dfd4:	mov    rsp,r11
   14001dfd7:	pop    r15
   14001dfd9:	pop    r14
   14001dfdb:	pop    r13
   14001dfdd:	pop    r12
   14001dfdf:	pop    rbp
   14001dfe0:	ret    
   14001dfe1:	int3   
   14001dfe2:	int3   
   14001dfe3:	int3   
   14001dfe4:	int3   
   14001dfe5:	int3   
   14001dfe6:	int3   
   14001dfe7:	int3   
   14001dfe8:	int3   
   14001dfe9:	int3   
   14001dfea:	int3   
   14001dfeb:	int3   
   14001dfec:	int3   
   14001dfed:	int3   
   14001dfee:	int3   
   14001dfef:	int3   
   14001dff0:	rex push rbx
   14001dff2:	sub    rsp,0x20
   14001dff6:	mov    rbx,rcx
   14001dff9:	mov    rcx,QWORD PTR [rcx+0xe48]
   14001e000:	xor    r9d,r9d
   14001e003:	xor    r8d,r8d
   14001e006:	mov    edx,0x188
   14001e00b:	call   QWORD PTR [rip+0x114ef]        # 0x14002f500
   14001e011:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e018:	xor    r9d,r9d
   14001e01b:	mov    r8d,eax
   14001e01e:	mov    edx,0x182
   14001e023:	add    rsp,0x20
   14001e027:	pop    rbx
   14001e028:	rex.W jmp QWORD PTR [rip+0x114d1]        # 0x14002f500
   14001e02f:	int3   
   14001e030:	rex push rbx
   14001e032:	sub    rsp,0x30
   14001e036:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e03f:	mov    DWORD PTR [rcx+0x1c2c],0x1
   14001e049:	lea    rbx,[rcx+0x160]
   14001e050:	mov    edx,0x1
   14001e055:	mov    rcx,rbx
   14001e058:	call   QWORD PTR [rip+0x115aa]        # 0x14002f608
   14001e05e:	lea    rcx,[rsp+0x40]
   14001e063:	call   QWORD PTR [rip+0x11627]        # 0x14002f690
   14001e069:	nop
   14001e06a:	mov    edx,0xe725
   14001e06f:	lea    rcx,[rsp+0x40]
   14001e074:	call   QWORD PTR [rip+0x11606]        # 0x14002f680
   14001e07a:	mov    rdx,QWORD PTR [rsp+0x40]
   14001e07f:	mov    rcx,rbx
   14001e082:	call   QWORD PTR [rip+0x115b0]        # 0x14002f638
   14001e088:	nop
   14001e089:	lea    rcx,[rsp+0x40]
   14001e08e:	call   QWORD PTR [rip+0x118fc]        # 0x14002f990
   14001e094:	add    rsp,0x30
   14001e098:	pop    rbx
   14001e099:	ret    
   14001e09a:	int3   
   14001e09b:	int3   
   14001e09c:	int3   
   14001e09d:	int3   
   14001e09e:	int3   
   14001e09f:	int3   
   14001e0a0:	rex push rdi
   14001e0a2:	sub    rsp,0x2a0
   14001e0a9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001e0b2:	mov    QWORD PTR [rsp+0x2b8],rbx
   14001e0ba:	mov    rax,QWORD PTR [rip+0x1df3f]        # 0x14003c000
   14001e0c1:	xor    rax,rsp
   14001e0c4:	mov    QWORD PTR [rsp+0x290],rax
   14001e0cc:	mov    rbx,rcx
   14001e0cf:	mov    DWORD PTR [rcx+0x1c2c],0x0
   14001e0d9:	lea    rcx,[rsp+0x20]
   14001e0de:	call   QWORD PTR [rip+0x115ac]        # 0x14002f690
   14001e0e4:	nop
   14001e0e5:	mov    edx,0xe724
   14001e0ea:	lea    rcx,[rsp+0x20]
   14001e0ef:	call   QWORD PTR [rip+0x1158b]        # 0x14002f680
   14001e0f5:	mov    rdx,QWORD PTR [rsp+0x20]
   14001e0fa:	lea    rcx,[rbx+0x160]
   14001e101:	call   QWORD PTR [rip+0x11531]        # 0x14002f638
   14001e107:	lea    rcx,[rbx+0x598]
   14001e10e:	mov    r8d,0x12a
   14001e114:	lea    rdx,[rsp+0x30]
   14001e119:	call   QWORD PTR [rip+0x11511]        # 0x14002f630
   14001e11f:	lea    rcx,[rbx+0x160]
   14001e126:	cmp    WORD PTR [rsp+0x30],0x0
   14001e12c:	jne    0x14001e132
   14001e12e:	xor    edx,edx
   14001e130:	jmp    0x14001e137
   14001e132:	mov    edx,0x1
   14001e137:	call   QWORD PTR [rip+0x114cb]        # 0x14002f608
   14001e13d:	nop
   14001e13e:	lea    rcx,[rsp+0x20]
   14001e143:	call   QWORD PTR [rip+0x11847]        # 0x14002f990
   14001e149:	mov    rcx,QWORD PTR [rsp+0x290]
   14001e151:	xor    rcx,rsp
   14001e154:	call   0x14002c960
   14001e159:	mov    rbx,QWORD PTR [rsp+0x2b8]
   14001e161:	add    rsp,0x2a0
   14001e168:	pop    rdi
   14001e169:	ret    
   14001e16a:	int3   
   14001e16b:	int3   
   14001e16c:	int3   
   14001e16d:	int3   
   14001e16e:	int3   
   14001e16f:	int3   
   14001e170:	rex push rbp
   14001e172:	push   rsi
   14001e173:	push   rdi
   14001e174:	sub    rsp,0x1b0
   14001e17b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001e184:	mov    QWORD PTR [rsp+0x1e8],rbx
   14001e18c:	mov    rax,QWORD PTR [rip+0x1de6d]        # 0x14003c000
   14001e193:	xor    rax,rsp
   14001e196:	mov    QWORD PTR [rsp+0x1a0],rax
   14001e19e:	movzx  esi,r8w
   14001e1a2:	movzx  edi,cx
   14001e1a5:	mov    r8,QWORD PTR [rip+0x1f14c]        # 0x14003d2f8
   14001e1ac:	lea    rcx,[rsp+0x70]
   14001e1b1:	call   0x14002b010
   14001e1b6:	call   QWORD PTR [rip+0x116c4]        # 0x14002f880
   14001e1bc:	xor    ebp,ebp
   14001e1be:	test   rax,rax
   14001e1c1:	je     0x14001e1d4
   14001e1c3:	mov    rdx,QWORD PTR [rax]
   14001e1c6:	mov    rcx,rax
   14001e1c9:	call   QWORD PTR [rdx+0xf8]
   14001e1cf:	mov    rbx,rax
   14001e1d2:	jmp    0x14001e1d7
   14001e1d4:	mov    rbx,rbp
   14001e1d7:	movzx  r8d,si
   14001e1db:	xor    r9d,r9d
   14001e1de:	mov    edx,0x402
   14001e1e3:	mov    rcx,QWORD PTR [rbx+0x2b20]
   14001e1ea:	call   QWORD PTR [rip+0x11310]        # 0x14002f500
   14001e1f0:	lea    rdx,[rsp+0x70]
   14001e1f5:	lea    rcx,[rsp+0x30]
   14001e1fa:	call   QWORD PTR [rip+0x11488]        # 0x14002f688
   14001e200:	nop
   14001e201:	lea    rcx,[rbx+0x2bb8]
   14001e208:	mov    rdx,QWORD PTR [rax]
   14001e20b:	call   QWORD PTR [rip+0x11427]        # 0x14002f638
   14001e211:	nop
   14001e212:	lea    rcx,[rsp+0x30]
   14001e217:	call   QWORD PTR [rip+0x11773]        # 0x14002f990
   14001e21d:	movzx  r8d,di
   14001e221:	xor    r9d,r9d
   14001e224:	mov    edx,0x402
   14001e229:	mov    rcx,QWORD PTR [rbx+0x2970]
   14001e230:	call   QWORD PTR [rip+0x112ca]        # 0x14002f500
   14001e236:	mov    edi,0x1
   14001e23b:	mov    DWORD PTR [rsp+0x20],edi
   14001e23f:	xor    r9d,r9d
   14001e242:	xor    r8d,r8d
   14001e245:	xor    edx,edx
   14001e247:	lea    rcx,[rsp+0x40]
   14001e24c:	call   QWORD PTR [rip+0x112a6]        # 0x14002f4f8
   14001e252:	test   eax,eax
   14001e254:	je     0x14001e291
   14001e256:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001e260:	lea    rcx,[rsp+0x40]
   14001e265:	call   QWORD PTR [rip+0x11285]        # 0x14002f4f0
   14001e26b:	lea    rcx,[rsp+0x40]
   14001e270:	call   QWORD PTR [rip+0x1129a]        # 0x14002f510
   14001e276:	mov    DWORD PTR [rsp+0x20],edi
   14001e27a:	xor    r9d,r9d
   14001e27d:	xor    r8d,r8d
   14001e280:	xor    edx,edx
   14001e282:	lea    rcx,[rsp+0x40]
   14001e287:	call   QWORD PTR [rip+0x1126b]        # 0x14002f4f8
   14001e28d:	test   eax,eax
   14001e28f:	jne    0x14001e260
   14001e291:	cmp    DWORD PTR [rbx+0x2340],0x0
   14001e298:	jne    0x14001e2a6
   14001e29a:	cmp    DWORD PTR [rip+0x23953],0x0        # 0x140041bf4
   14001e2a1:	movzx  eax,bp
   14001e2a4:	je     0x14001e2a9
   14001e2a6:	movzx  eax,di
   14001e2a9:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14001e2b1:	xor    rcx,rsp
   14001e2b4:	call   0x14002c960
   14001e2b9:	mov    rbx,QWORD PTR [rsp+0x1e8]
   14001e2c1:	add    rsp,0x1b0
   14001e2c8:	pop    rdi
   14001e2c9:	pop    rsi
   14001e2ca:	pop    rbp
   14001e2cb:	ret    
   14001e2cc:	int3   
   14001e2cd:	int3   
   14001e2ce:	int3   
   14001e2cf:	int3   
   14001e2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e2d5:	push   rdi
   14001e2d6:	sub    rsp,0x20
   14001e2da:	mov    ebx,edx
   14001e2dc:	mov    rdi,rcx
   14001e2df:	call   QWORD PTR [rip+0x113c3]        # 0x14002f6a8
   14001e2e5:	test   bl,0x1
   14001e2e8:	je     0x14001e2f3
   14001e2ea:	mov    rcx,rdi
   14001e2ed:	call   QWORD PTR [rip+0x11885]        # 0x14002fb78
   14001e2f3:	mov    rax,rdi
   14001e2f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e2fb:	add    rsp,0x20
   14001e2ff:	pop    rdi
   14001e300:	ret    
   14001e301:	int3   
   14001e302:	int3   
   14001e303:	int3   
   14001e304:	int3   
   14001e305:	int3   
   14001e306:	int3   
   14001e307:	int3   
   14001e308:	int3   
   14001e309:	int3   
   14001e30a:	int3   
   14001e30b:	int3   
   14001e30c:	int3   
   14001e30d:	int3   
   14001e30e:	int3   
   14001e30f:	int3   
   14001e310:	sub    rsp,0x38
   14001e314:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e31d:	mov    ecx,0xef0
   14001e322:	call   QWORD PTR [rip+0x11670]        # 0x14002f998
   14001e328:	mov    QWORD PTR [rsp+0x40],rax
   14001e32d:	test   rax,rax
   14001e330:	je     0x14001e33d
   14001e332:	mov    rcx,rax
   14001e335:	call   0x14001e360
   14001e33a:	nop
   14001e33b:	jmp    0x14001e33f
   14001e33d:	xor    eax,eax
   14001e33f:	add    rsp,0x38
   14001e343:	ret    
   14001e344:	int3   
   14001e345:	int3   
   14001e346:	int3   
   14001e347:	int3   
   14001e348:	int3   
   14001e349:	int3   
   14001e34a:	int3   
   14001e34b:	int3   
   14001e34c:	int3   
   14001e34d:	int3   
   14001e34e:	int3   
   14001e34f:	int3   
   14001e350:	lea    rax,[rip+0x14d79]        # 0x1400330d0
   14001e357:	ret    
   14001e358:	int3   
   14001e359:	int3   
   14001e35a:	int3   
   14001e35b:	int3   
   14001e35c:	int3   
   14001e35d:	int3   
   14001e35e:	int3   
   14001e35f:	int3   
   14001e360:	mov    QWORD PTR [rsp+0x8],rcx
   14001e365:	push   rdi
   14001e366:	sub    rsp,0x30
   14001e36a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e373:	mov    QWORD PTR [rsp+0x48],rbx
   14001e378:	mov    QWORD PTR [rsp+0x50],rbp
   14001e37d:	mov    QWORD PTR [rsp+0x58],rsi
   14001e382:	mov    rdi,rcx
   14001e385:	mov    r9d,0x68
   14001e38b:	xor    r8d,r8d
   14001e38e:	lea    edx,[r9+0x60]
   14001e392:	call   QWORD PTR [rip+0x10d30]        # 0x14002f0c8
   14001e398:	nop
   14001e399:	lea    rax,[rip+0x14600]        # 0x1400329a0
   14001e3a0:	mov    QWORD PTR [rdi],rax
   14001e3a3:	lea    rcx,[rdi+0x160]
   14001e3aa:	call   QWORD PTR [rip+0x112c8]        # 0x14002f678
   14001e3b0:	lea    rbp,[rip+0x13bb1]        # 0x140031f68
   14001e3b7:	mov    QWORD PTR [rdi+0x160],rbp
   14001e3be:	lea    rcx,[rdi+0x238]
   14001e3c5:	call   QWORD PTR [rip+0x112ad]        # 0x14002f678
   14001e3cb:	lea    rsi,[rip+0x135c6]        # 0x140031998
   14001e3d2:	mov    QWORD PTR [rdi+0x238],rsi
   14001e3d9:	lea    rcx,[rdi+0x310]
   14001e3e0:	call   QWORD PTR [rip+0x11292]        # 0x14002f678
   14001e3e6:	mov    QWORD PTR [rdi+0x310],rsi
   14001e3ed:	lea    rcx,[rdi+0x3e8]
   14001e3f4:	call   QWORD PTR [rip+0x1127e]        # 0x14002f678
   14001e3fa:	mov    QWORD PTR [rdi+0x3e8],rbp
   14001e401:	lea    rcx,[rdi+0x4c0]
   14001e408:	call   QWORD PTR [rip+0x1126a]        # 0x14002f678
   14001e40e:	lea    rsi,[rip+0x1386b]        # 0x140031c80
   14001e415:	mov    QWORD PTR [rdi+0x4c0],rsi
   14001e41c:	lea    rcx,[rdi+0x598]
   14001e423:	call   QWORD PTR [rip+0x1124f]        # 0x14002f678
   14001e429:	mov    QWORD PTR [rdi+0x598],rsi
   14001e430:	lea    rcx,[rdi+0x670]
   14001e437:	call   QWORD PTR [rip+0x1123b]        # 0x14002f678
   14001e43d:	mov    QWORD PTR [rdi+0x670],rsi
   14001e444:	lea    rcx,[rdi+0x748]
   14001e44b:	call   QWORD PTR [rip+0x11227]        # 0x14002f678
   14001e451:	mov    QWORD PTR [rdi+0x748],rbp
   14001e458:	lea    rcx,[rdi+0x820]
   14001e45f:	call   QWORD PTR [rip+0x11213]        # 0x14002f678
   14001e465:	mov    QWORD PTR [rdi+0x820],rbp
   14001e46c:	lea    rcx,[rdi+0x8f8]
   14001e473:	call   QWORD PTR [rip+0x111ff]        # 0x14002f678
   14001e479:	mov    QWORD PTR [rdi+0x8f8],rsi
   14001e480:	lea    rcx,[rdi+0x9d0]
   14001e487:	call   QWORD PTR [rip+0x111eb]        # 0x14002f678
   14001e48d:	mov    QWORD PTR [rdi+0x9d0],rsi
   14001e494:	lea    rcx,[rdi+0xaa8]
   14001e49b:	call   QWORD PTR [rip+0x111d7]        # 0x14002f678
   14001e4a1:	mov    QWORD PTR [rdi+0xaa8],rbp
   14001e4a8:	lea    rcx,[rdi+0xb80]
   14001e4af:	call   QWORD PTR [rip+0x111c3]        # 0x14002f678
   14001e4b5:	mov    QWORD PTR [rdi+0xb80],rbp
   14001e4bc:	lea    rcx,[rdi+0xc58]
   14001e4c3:	call   QWORD PTR [rip+0x111af]        # 0x14002f678
   14001e4c9:	lea    rsi,[rip+0x13db0]        # 0x140032280
   14001e4d0:	mov    QWORD PTR [rdi+0xc58],rsi
   14001e4d7:	lea    rcx,[rdi+0xd30]
   14001e4de:	call   QWORD PTR [rip+0x11194]        # 0x14002f678
   14001e4e4:	mov    QWORD PTR [rdi+0xd30],rsi
   14001e4eb:	lea    rcx,[rdi+0xe08]
   14001e4f2:	call   QWORD PTR [rip+0x11180]        # 0x14002f678
   14001e4f8:	lea    rax,[rip+0x14819]        # 0x140032d18
   14001e4ff:	mov    QWORD PTR [rdi+0xe08],rax
   14001e506:	mov    rcx,rdi
   14001e509:	call   QWORD PTR [rip+0x11459]        # 0x14002f968
   14001e50f:	nop
   14001e510:	mov    rax,rdi
   14001e513:	mov    rbx,QWORD PTR [rsp+0x48]
   14001e518:	mov    rbp,QWORD PTR [rsp+0x50]
   14001e51d:	mov    rsi,QWORD PTR [rsp+0x58]
   14001e522:	add    rsp,0x30
   14001e526:	pop    rdi
   14001e527:	ret    
   14001e528:	int3   
   14001e529:	int3   
   14001e52a:	int3   
   14001e52b:	int3   
   14001e52c:	int3   
   14001e52d:	int3   
   14001e52e:	int3   
   14001e52f:	int3   
   14001e530:	mov    QWORD PTR [rsp+0x8],rbx
   14001e535:	push   rdi
   14001e536:	sub    rsp,0x20
   14001e53a:	mov    ebx,edx
   14001e53c:	mov    rdi,rcx
   14001e53f:	call   0x14001e560
   14001e544:	test   bl,0x1
   14001e547:	je     0x14001e552
   14001e549:	mov    rcx,rdi
   14001e54c:	call   QWORD PTR [rip+0x11626]        # 0x14002fb78
   14001e552:	mov    rax,rdi
   14001e555:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e55a:	add    rsp,0x20
   14001e55e:	pop    rdi
   14001e55f:	ret    
   14001e560:	mov    QWORD PTR [rsp+0x8],rcx
   14001e565:	push   rbx
   14001e566:	sub    rsp,0x30
   14001e56a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e573:	mov    rbx,rcx
   14001e576:	lea    rax,[rip+0x14423]        # 0x1400329a0
   14001e57d:	mov    QWORD PTR [rcx],rax
   14001e580:	add    rcx,0xe08
   14001e587:	call   QWORD PTR [rip+0x1111b]        # 0x14002f6a8
   14001e58d:	nop
   14001e58e:	lea    rcx,[rbx+0xd30]
   14001e595:	call   QWORD PTR [rip+0x113a5]        # 0x14002f940
   14001e59b:	nop
   14001e59c:	lea    rcx,[rbx+0xc58]
   14001e5a3:	call   QWORD PTR [rip+0x11397]        # 0x14002f940
   14001e5a9:	nop
   14001e5aa:	lea    rcx,[rbx+0xb80]
   14001e5b1:	call   QWORD PTR [rip+0x11371]        # 0x14002f928
   14001e5b7:	nop
   14001e5b8:	lea    rcx,[rbx+0xaa8]
   14001e5bf:	call   QWORD PTR [rip+0x11363]        # 0x14002f928
   14001e5c5:	nop
   14001e5c6:	lea    rcx,[rbx+0x9d0]
   14001e5cd:	call   QWORD PTR [rip+0x112cd]        # 0x14002f8a0
   14001e5d3:	nop
   14001e5d4:	lea    rcx,[rbx+0x8f8]
   14001e5db:	call   QWORD PTR [rip+0x112bf]        # 0x14002f8a0
   14001e5e1:	nop
   14001e5e2:	lea    rcx,[rbx+0x820]
   14001e5e9:	call   QWORD PTR [rip+0x11339]        # 0x14002f928
   14001e5ef:	nop
   14001e5f0:	lea    rcx,[rbx+0x748]
   14001e5f7:	call   QWORD PTR [rip+0x1132b]        # 0x14002f928
   14001e5fd:	nop
   14001e5fe:	lea    rcx,[rbx+0x670]
   14001e605:	call   QWORD PTR [rip+0x11295]        # 0x14002f8a0
   14001e60b:	nop
   14001e60c:	lea    rcx,[rbx+0x598]
   14001e613:	call   QWORD PTR [rip+0x11287]        # 0x14002f8a0
   14001e619:	nop
   14001e61a:	lea    rcx,[rbx+0x4c0]
   14001e621:	call   QWORD PTR [rip+0x11279]        # 0x14002f8a0
   14001e627:	nop
   14001e628:	lea    rcx,[rbx+0x3e8]
   14001e62f:	call   QWORD PTR [rip+0x112f3]        # 0x14002f928
   14001e635:	nop
   14001e636:	lea    rcx,[rbx+0x310]
   14001e63d:	call   QWORD PTR [rip+0x11235]        # 0x14002f878
   14001e643:	nop
   14001e644:	lea    rcx,[rbx+0x238]
   14001e64b:	call   QWORD PTR [rip+0x11227]        # 0x14002f878
   14001e651:	nop
   14001e652:	lea    rcx,[rbx+0x160]
   14001e659:	call   QWORD PTR [rip+0x112c9]        # 0x14002f928
   14001e65f:	nop
   14001e660:	mov    rcx,rbx
   14001e663:	add    rsp,0x30
   14001e667:	pop    rbx
   14001e668:	rex.W jmp QWORD PTR [rip+0x10a51]        # 0x14002f0c0
   14001e66f:	int3   
   14001e670:	mov    QWORD PTR [rsp+0x8],rbx
   14001e675:	push   rdi
   14001e676:	sub    rsp,0x20
   14001e67a:	mov    rdi,rdx
   14001e67d:	lea    r8,[rcx+0x160]
   14001e684:	mov    rbx,rcx
   14001e687:	mov    rcx,rdi
   14001e68a:	mov    edx,0x417
   14001e68f:	call   QWORD PTR [rip+0x11273]        # 0x14002f908
   14001e695:	lea    r8,[rbx+0x238]
   14001e69c:	mov    edx,0x3f5
   14001e6a1:	mov    rcx,rdi
   14001e6a4:	call   QWORD PTR [rip+0x1125e]        # 0x14002f908
   14001e6aa:	lea    r8,[rbx+0x310]
   14001e6b1:	mov    edx,0x3f0
   14001e6b6:	mov    rcx,rdi
   14001e6b9:	call   QWORD PTR [rip+0x11249]        # 0x14002f908
   14001e6bf:	lea    r8,[rbx+0x3e8]
   14001e6c6:	mov    edx,0xe146
   14001e6cb:	mov    rcx,rdi
   14001e6ce:	call   QWORD PTR [rip+0x11234]        # 0x14002f908
   14001e6d4:	lea    r8,[rbx+0x4c0]
   14001e6db:	mov    edx,0x3f8
   14001e6e0:	mov    rcx,rdi
   14001e6e3:	call   QWORD PTR [rip+0x1121f]        # 0x14002f908
   14001e6e9:	lea    r8,[rbx+0x598]
   14001e6f0:	mov    edx,0x3fa
   14001e6f5:	mov    rcx,rdi
   14001e6f8:	call   QWORD PTR [rip+0x1120a]        # 0x14002f908
   14001e6fe:	lea    r8,[rbx+0x670]
   14001e705:	mov    edx,0x3f9
   14001e70a:	mov    rcx,rdi
   14001e70d:	call   QWORD PTR [rip+0x111f5]        # 0x14002f908
   14001e713:	lea    r8,[rbx+0x748]
   14001e71a:	mov    edx,0x3f4
   14001e71f:	mov    rcx,rdi
   14001e722:	call   QWORD PTR [rip+0x111e0]        # 0x14002f908
   14001e728:	lea    r8,[rbx+0x820]
   14001e72f:	mov    edx,0x3f2
   14001e734:	mov    rcx,rdi
   14001e737:	call   QWORD PTR [rip+0x111cb]        # 0x14002f908
   14001e73d:	lea    r8,[rbx+0x8f8]
   14001e744:	mov    edx,0x3f6
   14001e749:	mov    rcx,rdi
   14001e74c:	call   QWORD PTR [rip+0x111b6]        # 0x14002f908
   14001e752:	lea    r8,[rbx+0x9d0]
   14001e759:	mov    edx,0x3f7
   14001e75e:	mov    rcx,rdi
   14001e761:	call   QWORD PTR [rip+0x111a1]        # 0x14002f908
   14001e767:	lea    r8,[rbx+0xaa8]
   14001e76e:	mov    edx,0x2
   14001e773:	mov    rcx,rdi
   14001e776:	call   QWORD PTR [rip+0x1118c]        # 0x14002f908
   14001e77c:	lea    r8,[rbx+0xb80]
   14001e783:	mov    edx,0x1
   14001e788:	mov    rcx,rdi
   14001e78b:	call   QWORD PTR [rip+0x11177]        # 0x14002f908
   14001e791:	lea    r8,[rbx+0xc58]
   14001e798:	mov    edx,0x3f3
   14001e79d:	mov    rcx,rdi
   14001e7a0:	call   QWORD PTR [rip+0x11162]        # 0x14002f908
   14001e7a6:	lea    r8,[rbx+0xd30]
   14001e7ad:	mov    edx,0x3f1
   14001e7b2:	mov    rcx,rdi
   14001e7b5:	call   QWORD PTR [rip+0x1114d]        # 0x14002f908
   14001e7bb:	lea    r8,[rbx+0xe08]
   14001e7c2:	mov    edx,0x3ef
   14001e7c7:	mov    rcx,rdi
   14001e7ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e7cf:	add    rsp,0x20
   14001e7d3:	pop    rdi
   14001e7d4:	rex.W jmp QWORD PTR [rip+0x1112d]        # 0x14002f908
   14001e7db:	int3   
   14001e7dc:	int3   
   14001e7dd:	int3   
   14001e7de:	int3   
   14001e7df:	int3   
   14001e7e0:	lea    rax,[rip+0x141a1]        # 0x140032988
   14001e7e7:	ret    
   14001e7e8:	int3   
   14001e7e9:	int3   
   14001e7ea:	int3   
   14001e7eb:	int3   
   14001e7ec:	int3   
   14001e7ed:	int3   
   14001e7ee:	int3   
   14001e7ef:	int3   
   14001e7f0:	rex push rbx
   14001e7f2:	sub    rsp,0x30
   14001e7f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001e7ff:	mov    rbx,rcx
   14001e802:	call   QWORD PTR [rip+0x110c8]        # 0x14002f8d0
   14001e808:	lea    rcx,[rsp+0x40]
   14001e80d:	call   QWORD PTR [rip+0x10e7d]        # 0x14002f690
   14001e813:	nop
   14001e814:	mov    edx,0xe706
   14001e819:	lea    rcx,[rsp+0x40]
   14001e81e:	call   QWORD PTR [rip+0x10e5c]        # 0x14002f680
   14001e824:	mov    r9,QWORD PTR [rsp+0x40]
   14001e829:	xor    r8d,r8d
   14001e82c:	mov    edx,0x143
   14001e831:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e838:	call   QWORD PTR [rip+0x10cc2]        # 0x14002f500
   14001e83e:	mov    edx,0xe707
   14001e843:	lea    rcx,[rsp+0x40]
   14001e848:	call   QWORD PTR [rip+0x10e32]        # 0x14002f680
   14001e84e:	mov    r9,QWORD PTR [rsp+0x40]
   14001e853:	xor    r8d,r8d
   14001e856:	mov    edx,0x143
   14001e85b:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e862:	call   QWORD PTR [rip+0x10c98]        # 0x14002f500
   14001e868:	mov    edx,0xe708
   14001e86d:	lea    rcx,[rsp+0x40]
   14001e872:	call   QWORD PTR [rip+0x10e08]        # 0x14002f680
   14001e878:	mov    r9,QWORD PTR [rsp+0x40]
   14001e87d:	xor    r8d,r8d
   14001e880:	mov    edx,0x143
   14001e885:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e88c:	call   QWORD PTR [rip+0x10c6e]        # 0x14002f500
   14001e892:	mov    edx,0xe709
   14001e897:	lea    rcx,[rsp+0x40]
   14001e89c:	call   QWORD PTR [rip+0x10dde]        # 0x14002f680
   14001e8a2:	mov    r9,QWORD PTR [rsp+0x40]
   14001e8a7:	xor    r8d,r8d
   14001e8aa:	mov    edx,0x143
   14001e8af:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e8b6:	call   QWORD PTR [rip+0x10c44]        # 0x14002f500
   14001e8bc:	mov    edx,0xe70a
   14001e8c1:	lea    rcx,[rsp+0x40]
   14001e8c6:	call   QWORD PTR [rip+0x10db4]        # 0x14002f680
   14001e8cc:	mov    r9,QWORD PTR [rsp+0x40]
   14001e8d1:	xor    r8d,r8d
   14001e8d4:	mov    edx,0x143
   14001e8d9:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e8e0:	call   QWORD PTR [rip+0x10c1a]        # 0x14002f500
   14001e8e6:	mov    edx,0xe70b
   14001e8eb:	lea    rcx,[rsp+0x40]
   14001e8f0:	call   QWORD PTR [rip+0x10d8a]        # 0x14002f680
   14001e8f6:	mov    r9,QWORD PTR [rsp+0x40]
   14001e8fb:	xor    r8d,r8d
   14001e8fe:	mov    edx,0x143
   14001e903:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e90a:	call   QWORD PTR [rip+0x10bf0]        # 0x14002f500
   14001e910:	mov    edx,0xe70c
   14001e915:	lea    rcx,[rsp+0x40]
   14001e91a:	call   QWORD PTR [rip+0x10d60]        # 0x14002f680
   14001e920:	mov    r9,QWORD PTR [rsp+0x40]
   14001e925:	xor    r8d,r8d
   14001e928:	mov    edx,0x143
   14001e92d:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e934:	call   QWORD PTR [rip+0x10bc6]        # 0x14002f500
   14001e93a:	mov    edx,0xe70d
   14001e93f:	lea    rcx,[rsp+0x40]
   14001e944:	call   QWORD PTR [rip+0x10d36]        # 0x14002f680
   14001e94a:	mov    r9,QWORD PTR [rsp+0x40]
   14001e94f:	xor    r8d,r8d
   14001e952:	mov    edx,0x143
   14001e957:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e95e:	call   QWORD PTR [rip+0x10b9c]        # 0x14002f500
   14001e964:	mov    edx,0xe70e
   14001e969:	lea    rcx,[rsp+0x40]
   14001e96e:	call   QWORD PTR [rip+0x10d0c]        # 0x14002f680
   14001e974:	mov    r9,QWORD PTR [rsp+0x40]
   14001e979:	xor    r8d,r8d
   14001e97c:	mov    edx,0x143
   14001e981:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e988:	call   QWORD PTR [rip+0x10b72]        # 0x14002f500
   14001e98e:	xor    r9d,r9d
   14001e991:	mov    edx,0x14e
   14001e996:	lea    r8d,[r9+0x1]
   14001e99a:	mov    rcx,QWORD PTR [rbx+0xe48]
   14001e9a1:	call   QWORD PTR [rip+0x10b59]        # 0x14002f500
   14001e9a7:	lea    rcx,[rbx+0xb80]
   14001e9ae:	xor    edx,edx
   14001e9b0:	call   QWORD PTR [rip+0x10c52]        # 0x14002f608
   14001e9b6:	lea    rcx,[rbx+0x9d0]
   14001e9bd:	xor    edx,edx
   14001e9bf:	call   QWORD PTR [rip+0x10c43]        # 0x14002f608
   14001e9c5:	lea    rcx,[rbx+0x8f8]
   14001e9cc:	xor    edx,edx
   14001e9ce:	call   QWORD PTR [rip+0x10c34]        # 0x14002f608
   14001e9d4:	lea    rcx,[rbx+0x160]
   14001e9db:	xor    edx,edx
   14001e9dd:	call   QWORD PTR [rip+0x10c25]        # 0x14002f608
   14001e9e3:	lea    rcx,[rbx+0xaa8]
   14001e9ea:	xor    edx,edx
   14001e9ec:	call   QWORD PTR [rip+0x10c16]        # 0x14002f608
   14001e9f2:	xor    eax,eax
   14001e9f4:	mov    QWORD PTR [rbx+0xee4],rax
   14001e9fb:	mov    DWORD PTR [rbx+0x158],eax
   14001ea01:	lea    rcx,[rsp+0x40]
   14001ea06:	call   QWORD PTR [rip+0x10f84]        # 0x14002f990
   14001ea0c:	xor    eax,eax
   14001ea0e:	add    rsp,0x30
   14001ea12:	pop    rbx
   14001ea13:	ret    
   14001ea14:	int3   
   14001ea15:	int3   
   14001ea16:	int3   
   14001ea17:	int3   
   14001ea18:	int3   
   14001ea19:	int3   
   14001ea1a:	int3   
   14001ea1b:	int3   
   14001ea1c:	int3   
   14001ea1d:	int3   
   14001ea1e:	int3   
   14001ea1f:	int3   
   14001ea20:	rex push rdi
   14001ea22:	sub    rsp,0x6e0
   14001ea29:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001ea32:	mov    QWORD PTR [rsp+0x6f8],rbx
   14001ea3a:	mov    rax,QWORD PTR [rip+0x1d5bf]        # 0x14003c000
   14001ea41:	xor    rax,rsp
   14001ea44:	mov    QWORD PTR [rsp+0x6d0],rax
   14001ea4c:	mov    rbx,rcx
   14001ea4f:	lea    rcx,[rsp+0x50]
   14001ea54:	call   QWORD PTR [rip+0x10c36]        # 0x14002f690
   14001ea5a:	nop
   14001ea5b:	mov    edx,0xe714
   14001ea60:	lea    rcx,[rsp+0x50]
   14001ea65:	call   QWORD PTR [rip+0x10c15]        # 0x14002f680
   14001ea6b:	lea    rdi,[rbx+0xd30]
   14001ea72:	mov    r8d,0x12a
   14001ea78:	lea    rdx,[rsp+0x470]
   14001ea80:	mov    rcx,rdi
   14001ea83:	call   QWORD PTR [rip+0x10ba7]        # 0x14002f630
   14001ea89:	mov    DWORD PTR [rsp+0x40],0x1
   14001ea91:	mov    DWORD PTR [rsp+0x38],0x0
   14001ea99:	mov    QWORD PTR [rsp+0x30],rbx
   14001ea9e:	mov    rax,QWORD PTR [rsp+0x50]
   14001eaa3:	mov    QWORD PTR [rsp+0x28],rax
   14001eaa8:	mov    DWORD PTR [rsp+0x20],0x6
   14001eab0:	lea    r9,[rsp+0x470]
   14001eab8:	xor    r8d,r8d
   14001eabb:	lea    edx,[r8+0x1]
   14001eabf:	lea    rcx,[rsp+0x70]
   14001eac4:	call   QWORD PTR [rip+0x10e86]        # 0x14002f950
   14001eaca:	nop
   14001eacb:	lea    rcx,[rsp+0x58]
   14001ead0:	call   0x140023e50
   14001ead5:	nop
   14001ead6:	mov    rbx,QWORD PTR [rax]
   14001ead9:	lea    rcx,[rsp+0x70]
   14001eade:	call   QWORD PTR [rip+0x10e64]        # 0x14002f948
   14001eae4:	mov    QWORD PTR [rax+0x50],rbx
   14001eae8:	lea    rcx,[rsp+0x58]
   14001eaed:	call   QWORD PTR [rip+0x10e9d]        # 0x14002f990
   14001eaf3:	lea    rcx,[rsp+0x70]
   14001eaf8:	call   QWORD PTR [rip+0x10e62]        # 0x14002f960
   14001eafe:	cmp    rax,0x1
   14001eb02:	jne    0x14001eb1e
   14001eb04:	lea    rcx,[rsp+0x70]
   14001eb09:	call   QWORD PTR [rip+0x10e39]        # 0x14002f948
   14001eb0f:	mov    rdx,QWORD PTR [rax+0x30]
   14001eb13:	mov    rcx,rdi
   14001eb16:	call   QWORD PTR [rip+0x10b1c]        # 0x14002f638
   14001eb1c:	jmp    0x14001eb28
   14001eb1e:	mov    rcx,rdi
   14001eb21:	call   QWORD PTR [rip+0x10ad9]        # 0x14002f600
   14001eb27:	nop
   14001eb28:	lea    rcx,[rsp+0x70]
   14001eb2d:	call   QWORD PTR [rip+0x10e25]        # 0x14002f958
   14001eb33:	nop
   14001eb34:	lea    rcx,[rsp+0x50]
   14001eb39:	call   QWORD PTR [rip+0x10e51]        # 0x14002f990
   14001eb3f:	mov    rcx,QWORD PTR [rsp+0x6d0]
   14001eb47:	xor    rcx,rsp
   14001eb4a:	call   0x14002c960
   14001eb4f:	mov    rbx,QWORD PTR [rsp+0x6f8]
   14001eb57:	add    rsp,0x6e0
   14001eb5e:	pop    rdi
   14001eb5f:	ret    
   14001eb60:	rex push rdi
   14001eb62:	sub    rsp,0x6e0
   14001eb69:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001eb72:	mov    QWORD PTR [rsp+0x6f8],rbx
   14001eb7a:	mov    rax,QWORD PTR [rip+0x1d47f]        # 0x14003c000
   14001eb81:	xor    rax,rsp
   14001eb84:	mov    QWORD PTR [rsp+0x6d0],rax
   14001eb8c:	mov    rbx,rcx
   14001eb8f:	lea    rcx,[rsp+0x50]
   14001eb94:	call   QWORD PTR [rip+0x10af6]        # 0x14002f690
   14001eb9a:	nop
   14001eb9b:	mov    edx,0xe713
   14001eba0:	lea    rcx,[rsp+0x50]
   14001eba5:	call   QWORD PTR [rip+0x10ad5]        # 0x14002f680
   14001ebab:	lea    rdi,[rbx+0xc58]
   14001ebb2:	mov    r8d,0x12a
   14001ebb8:	lea    rdx,[rsp+0x470]
   14001ebc0:	mov    rcx,rdi
   14001ebc3:	call   QWORD PTR [rip+0x10a67]        # 0x14002f630
   14001ebc9:	mov    DWORD PTR [rsp+0x40],0x1
   14001ebd1:	mov    DWORD PTR [rsp+0x38],0x0
   14001ebd9:	mov    QWORD PTR [rsp+0x30],rbx
   14001ebde:	mov    rax,QWORD PTR [rsp+0x50]
   14001ebe3:	mov    QWORD PTR [rsp+0x28],rax
   14001ebe8:	mov    DWORD PTR [rsp+0x20],0x6
   14001ebf0:	lea    r9,[rsp+0x470]
   14001ebf8:	xor    r8d,r8d
   14001ebfb:	lea    edx,[r8+0x1]
   14001ebff:	lea    rcx,[rsp+0x70]
   14001ec04:	call   QWORD PTR [rip+0x10d46]        # 0x14002f950
   14001ec0a:	nop
   14001ec0b:	lea    rcx,[rsp+0x58]
   14001ec10:	call   0x140023e50
   14001ec15:	nop
   14001ec16:	mov    rbx,QWORD PTR [rax]
   14001ec19:	lea    rcx,[rsp+0x70]
   14001ec1e:	call   QWORD PTR [rip+0x10d24]        # 0x14002f948
   14001ec24:	mov    QWORD PTR [rax+0x50],rbx
   14001ec28:	lea    rcx,[rsp+0x58]
   14001ec2d:	call   QWORD PTR [rip+0x10d5d]        # 0x14002f990
   14001ec33:	lea    rcx,[rsp+0x70]
   14001ec38:	call   QWORD PTR [rip+0x10d22]        # 0x14002f960
   14001ec3e:	cmp    rax,0x1
   14001ec42:	jne    0x14001ec5e
   14001ec44:	lea    rcx,[rsp+0x70]
   14001ec49:	call   QWORD PTR [rip+0x10cf9]        # 0x14002f948
   14001ec4f:	mov    rdx,QWORD PTR [rax+0x30]
   14001ec53:	mov    rcx,rdi
   14001ec56:	call   QWORD PTR [rip+0x109dc]        # 0x14002f638
   14001ec5c:	jmp    0x14001ec68
   14001ec5e:	mov    rcx,rdi
   14001ec61:	call   QWORD PTR [rip+0x10999]        # 0x14002f600
   14001ec67:	nop
   14001ec68:	lea    rcx,[rsp+0x70]
   14001ec6d:	call   QWORD PTR [rip+0x10ce5]        # 0x14002f958
   14001ec73:	nop
   14001ec74:	lea    rcx,[rsp+0x50]
   14001ec79:	call   QWORD PTR [rip+0x10d11]        # 0x14002f990
   14001ec7f:	mov    rcx,QWORD PTR [rsp+0x6d0]
   14001ec87:	xor    rcx,rsp
   14001ec8a:	call   0x14002c960
   14001ec8f:	mov    rbx,QWORD PTR [rsp+0x6f8]
   14001ec97:	add    rsp,0x6e0
   14001ec9e:	pop    rdi
   14001ec9f:	ret    
   14001eca0:	jmp    0x14001ecb0
   14001eca5:	int3   
   14001eca6:	int3   
   14001eca7:	int3   
   14001eca8:	int3   
   14001eca9:	int3   
   14001ecaa:	int3   
   14001ecab:	int3   
   14001ecac:	int3   
   14001ecad:	int3   
   14001ecae:	int3   
   14001ecaf:	int3   
   14001ecb0:	mov    rax,rsp
   14001ecb3:	push   rbp
   14001ecb4:	push   r12
   14001ecb6:	push   r13
   14001ecb8:	push   r14
   14001ecba:	push   r15
   14001ecbc:	lea    rbp,[rax-0x6b8]
   14001ecc3:	sub    rsp,0x790
   14001ecca:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001ecd3:	mov    QWORD PTR [rax+0x10],rbx
   14001ecd7:	mov    QWORD PTR [rax+0x18],rsi
   14001ecdb:	mov    QWORD PTR [rax+0x20],rdi
   14001ecdf:	mov    rax,QWORD PTR [rip+0x1d31a]        # 0x14003c000
   14001ece6:	xor    rax,rsp
   14001ece9:	mov    QWORD PTR [rbp+0x680],rax
   14001ecf0:	mov    rsi,rcx
   14001ecf3:	lea    rax,[rip+0xb46]        # 0x14001f840
   14001ecfa:	mov    QWORD PTR [rip+0x22da7],rax        # 0x140041aa8
   14001ed01:	add    rcx,0x9d0
   14001ed08:	mov    edx,0x1
   14001ed0d:	call   QWORD PTR [rip+0x108f5]        # 0x14002f608
   14001ed13:	lea    rcx,[rsi+0x8f8]
   14001ed1a:	mov    edx,0x1
   14001ed1f:	call   QWORD PTR [rip+0x108e3]        # 0x14002f608
   14001ed25:	lea    rcx,[rsi+0x160]
   14001ed2c:	mov    edx,0x1
   14001ed31:	call   QWORD PTR [rip+0x108d1]        # 0x14002f608
   14001ed37:	lea    rcx,[rsi+0xaa8]
   14001ed3e:	mov    edx,0x1
   14001ed43:	call   QWORD PTR [rip+0x108bf]        # 0x14002f608
   14001ed49:	lea    rcx,[rsi+0x820]
   14001ed50:	xor    edx,edx
   14001ed52:	call   QWORD PTR [rip+0x108b0]        # 0x14002f608
   14001ed58:	lea    rcx,[rsi+0x748]
   14001ed5f:	xor    edx,edx
   14001ed61:	call   QWORD PTR [rip+0x108a1]        # 0x14002f608
   14001ed67:	xor    edx,edx
   14001ed69:	lea    rcx,[rsi+0xd30]
   14001ed70:	call   QWORD PTR [rip+0x10892]        # 0x14002f608
   14001ed76:	xor    edx,edx
   14001ed78:	lea    rcx,[rsi+0xc58]
   14001ed7f:	call   QWORD PTR [rip+0x10883]        # 0x14002f608
   14001ed85:	lea    rcx,[rsi+0xb80]
   14001ed8c:	xor    edx,edx
   14001ed8e:	call   QWORD PTR [rip+0x10874]        # 0x14002f608
   14001ed94:	lea    rcx,[rsi+0x598]
   14001ed9b:	xor    edx,edx
   14001ed9d:	call   QWORD PTR [rip+0x10865]        # 0x14002f608
   14001eda3:	lea    rcx,[rsi+0x4c0]
   14001edaa:	xor    edx,edx
   14001edac:	call   QWORD PTR [rip+0x10856]        # 0x14002f608
   14001edb2:	lea    rcx,[rsi+0x670]
   14001edb9:	xor    edx,edx
   14001edbb:	call   QWORD PTR [rip+0x10847]        # 0x14002f608
   14001edc1:	lea    rcx,[rsi+0xe08]
   14001edc8:	xor    edx,edx
   14001edca:	call   QWORD PTR [rip+0x10838]        # 0x14002f608
   14001edd0:	lea    rcx,[rsi+0x3e8]
   14001edd7:	xor    edx,edx
   14001edd9:	call   QWORD PTR [rip+0x10829]        # 0x14002f608
   14001eddf:	lea    rcx,[rsp+0x38]
   14001ede4:	call   QWORD PTR [rip+0x108a6]        # 0x14002f690
   14001edea:	nop
   14001edeb:	mov    edx,0x12c
   14001edf0:	lea    rcx,[rsp+0x38]
   14001edf5:	call   QWORD PTR [rip+0x108f5]        # 0x14002f6f0
   14001edfb:	mov    rdx,rax
   14001edfe:	mov    r8d,0x12a
   14001ee04:	lea    rcx,[rsi+0xd30]
   14001ee0b:	call   QWORD PTR [rip+0x1081f]        # 0x14002f630
   14001ee11:	or     edx,0xffffffff
   14001ee14:	lea    rcx,[rsp+0x38]
   14001ee19:	call   QWORD PTR [rip+0x108c9]        # 0x14002f6e8
   14001ee1f:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ee24:	lea    rcx,[rsp+0x40]
   14001ee29:	call   QWORD PTR [rip+0x10869]        # 0x14002f698
   14001ee2f:	mov    rdx,QWORD PTR [rax]
   14001ee32:	lea    rcx,[rbp+0x1c0]
   14001ee39:	call   QWORD PTR [rip+0x10419]        # 0x14002f258
   14001ee3f:	lea    rcx,[rsp+0x40]
   14001ee44:	call   QWORD PTR [rip+0x10b2e]        # 0x14002f978
   14001ee4a:	cmp    BYTE PTR [rbp+0x1c0],0x0
   14001ee51:	jne    0x14001eead
   14001ee53:	mov    rdi,QWORD PTR [rsi+0x40]
   14001ee57:	mov    edx,0xfffffffa
   14001ee5c:	mov    rcx,rdi
   14001ee5f:	call   QWORD PTR [rip+0x1067b]        # 0x14002f4e0
   14001ee65:	mov    rbx,rax
   14001ee68:	mov    r9d,0x12c
   14001ee6e:	lea    r8,[rsp+0x60]
   14001ee73:	mov    edx,0x80
   14001ee78:	mov    rcx,rax
   14001ee7b:	call   QWORD PTR [rip+0x10657]        # 0x14002f4d8
   14001ee81:	mov    r9d,0x12c
   14001ee87:	lea    r8,[rbp+0x90]
   14001ee8e:	mov    edx,0xe726
   14001ee93:	mov    rcx,rbx
   14001ee96:	call   QWORD PTR [rip+0x1063c]        # 0x14002f4d8
   14001ee9c:	lea    r8,[rsp+0x60]
   14001eea1:	lea    rdx,[rbp+0x90]
   14001eea8:	jmp    0x14001ef6e
   14001eead:	mov    edx,0x12c
   14001eeb2:	lea    rcx,[rsp+0x38]
   14001eeb7:	call   QWORD PTR [rip+0x10833]        # 0x14002f6f0
   14001eebd:	mov    rdx,rax
   14001eec0:	mov    r8d,0x12a
   14001eec6:	lea    rcx,[rsi+0xc58]
   14001eecd:	call   QWORD PTR [rip+0x1075d]        # 0x14002f630
   14001eed3:	or     edx,0xffffffff
   14001eed6:	lea    rcx,[rsp+0x38]
   14001eedb:	call   QWORD PTR [rip+0x10807]        # 0x14002f6e8
   14001eee1:	mov    rdx,QWORD PTR [rsp+0x38]
   14001eee6:	lea    rcx,[rsp+0x40]
   14001eeeb:	call   QWORD PTR [rip+0x107a7]        # 0x14002f698
   14001eef1:	mov    rdx,QWORD PTR [rax]
   14001eef4:	lea    rcx,[rbp+0x2f0]
   14001eefb:	call   QWORD PTR [rip+0x10357]        # 0x14002f258
   14001ef01:	lea    rcx,[rsp+0x40]
   14001ef06:	call   QWORD PTR [rip+0x10a6c]        # 0x14002f978
   14001ef0c:	cmp    BYTE PTR [rbp+0x2f0],0x0
   14001ef13:	jne    0x14001efa4
   14001ef19:	mov    rdi,QWORD PTR [rsi+0x40]
   14001ef1d:	mov    edx,0xfffffffa
   14001ef22:	mov    rcx,rdi
   14001ef25:	call   QWORD PTR [rip+0x105b5]        # 0x14002f4e0
   14001ef2b:	mov    rbx,rax
   14001ef2e:	mov    r9d,0x12c
   14001ef34:	lea    r8,[rbp+0x90]
   14001ef3b:	mov    edx,0x80
   14001ef40:	mov    rcx,rax
   14001ef43:	call   QWORD PTR [rip+0x1058f]        # 0x14002f4d8
   14001ef49:	mov    r9d,0x12c
   14001ef4f:	lea    r8,[rsp+0x60]
   14001ef54:	mov    edx,0xe729
   14001ef59:	mov    rcx,rbx
   14001ef5c:	call   QWORD PTR [rip+0x10576]        # 0x14002f4d8
   14001ef62:	lea    r8,[rbp+0x90]
   14001ef69:	lea    rdx,[rsp+0x60]
   14001ef6e:	mov    r9d,0x10
   14001ef74:	mov    rcx,rdi
   14001ef77:	call   QWORD PTR [rip+0x1056b]        # 0x14002f4e8
   14001ef7d:	cmp    DWORD PTR [rip+0x22c70],0x0        # 0x140041bf4
   14001ef84:	je     0x14001f1ad
   14001ef8a:	cmp    DWORD PTR [rip+0x22c5f],0x0        # 0x140041bf0
   14001ef91:	jne    0x14001f1ad
   14001ef97:	xor    ecx,ecx
   14001ef99:	call   QWORD PTR [rip+0x10531]        # 0x14002f4d0
   14001ef9f:	jmp    0x14001f1ad
   14001efa4:	xor    ebx,ebx
   14001efa6:	mov    QWORD PTR [rsp+0x30],rbx
   14001efab:	lea    ecx,[rbx+0x10]
   14001efae:	call   QWORD PTR [rip+0x109e4]        # 0x14002f998
   14001efb4:	mov    r13,rax
   14001efb7:	mov    QWORD PTR [rsp+0x48],rax
   14001efbc:	test   rax,rax
   14001efbf:	je     0x14001effa
   14001efc1:	mov    WORD PTR [rax],bx
   14001efc4:	mov    QWORD PTR [rax+0x8],rbx
   14001efc8:	lea    rcx,[rbp+0x1c0]
   14001efcf:	call   QWORD PTR [rip+0x102ab]        # 0x14002f280
   14001efd5:	test   eax,eax
   14001efd7:	jle    0x14001effd
   14001efd9:	inc    eax
   14001efdb:	movsxd rcx,eax
   14001efde:	call   QWORD PTR [rip+0x109b4]        # 0x14002f998
   14001efe4:	mov    QWORD PTR [r13+0x8],rax
   14001efe8:	lea    rdx,[rbp+0x1c0]
   14001efef:	mov    rcx,rax
   14001eff2:	call   QWORD PTR [rip+0x10260]        # 0x14002f258
   14001eff8:	jmp    0x14001effd
   14001effa:	mov    r13,rbx
   14001effd:	mov    edx,0x1
   14001f002:	mov    rcx,r13
   14001f005:	call   0x14002ab70
   14001f00a:	mov    r15,rax
   14001f00d:	test   rax,rax
   14001f010:	jne    0x14001f01e
   14001f012:	lea    rdx,[rip+0x138af]        # 0x1400328c8
   14001f019:	jmp    0x14001f197
   14001f01e:	mov    ecx,0x10
   14001f023:	call   QWORD PTR [rip+0x1096f]        # 0x14002f998
   14001f029:	mov    r12,rax
   14001f02c:	mov    QWORD PTR [rsp+0x48],rax
   14001f031:	test   rax,rax
   14001f034:	je     0x14001f070
   14001f036:	mov    WORD PTR [rax],bx
   14001f039:	mov    QWORD PTR [rax+0x8],rbx
   14001f03d:	lea    rcx,[rbp+0x2f0]
   14001f044:	call   QWORD PTR [rip+0x10236]        # 0x14002f280
   14001f04a:	test   eax,eax
   14001f04c:	jle    0x14001f073
   14001f04e:	inc    eax
   14001f050:	movsxd rcx,eax
   14001f053:	call   QWORD PTR [rip+0x1093f]        # 0x14002f998
   14001f059:	mov    QWORD PTR [r12+0x8],rax
   14001f05e:	lea    rdx,[rbp+0x2f0]
   14001f065:	mov    rcx,rax
   14001f068:	call   QWORD PTR [rip+0x101ea]        # 0x14002f258
   14001f06e:	jmp    0x14001f073
   14001f070:	mov    r12,rbx
   14001f073:	mov    edx,0x1
   14001f078:	mov    rcx,r12
   14001f07b:	call   0x14002ab70
   14001f080:	test   rax,rax
   14001f083:	je     0x14001f11c
   14001f089:	mov    rcx,rax
   14001f08c:	call   0x14002a9e0
   14001f091:	mov    rdi,QWORD PTR [rsi+0x40]
   14001f095:	mov    edx,0xfffffffa
   14001f09a:	mov    rcx,rdi
   14001f09d:	call   QWORD PTR [rip+0x1043d]        # 0x14002f4e0
   14001f0a3:	mov    rbx,rax
   14001f0a6:	mov    r9d,0x12c
   14001f0ac:	lea    r8,[rbp+0x90]
   14001f0b3:	mov    edx,0x80
   14001f0b8:	mov    rcx,rax
   14001f0bb:	call   QWORD PTR [rip+0x10417]        # 0x14002f4d8
   14001f0c1:	mov    r9d,0x12c
   14001f0c7:	lea    r8,[rsp+0x60]
   14001f0cc:	mov    edx,0xe72c
   14001f0d1:	mov    rcx,rbx
   14001f0d4:	call   QWORD PTR [rip+0x103fe]        # 0x14002f4d8
   14001f0da:	mov    r9d,0x14
   14001f0e0:	lea    r8,[rbp+0x90]
   14001f0e7:	lea    rdx,[rsp+0x60]
   14001f0ec:	mov    rcx,rdi
   14001f0ef:	call   QWORD PTR [rip+0x103f3]        # 0x14002f4e8
   14001f0f5:	mov    ebx,eax
   14001f0f7:	cmp    DWORD PTR [rip+0x22af6],0x0        # 0x140041bf4
   14001f0fe:	je     0x14001f111
   14001f100:	cmp    DWORD PTR [rip+0x22ae9],0x0        # 0x140041bf0
   14001f107:	jne    0x14001f111
   14001f109:	xor    ecx,ecx
   14001f10b:	call   QWORD PTR [rip+0x103bf]        # 0x14002f4d0
   14001f111:	cmp    ebx,0x7
   14001f114:	je     0x14001f1ad
   14001f11a:	xor    ebx,ebx
   14001f11c:	mov    edx,0xb
   14001f121:	mov    rcx,r12
   14001f124:	call   0x14002ab70
   14001f129:	mov    rdi,rax
   14001f12c:	test   rax,rax
   14001f12f:	jne    0x14001f13a
   14001f131:	lea    rdx,[rip+0x137c8]        # 0x140032900
   14001f138:	jmp    0x14001f197
   14001f13a:	lea    rdx,[rbp+0x420]
   14001f141:	mov    ecx,0x12c
   14001f146:	call   QWORD PTR [rip+0x100f4]        # 0x14002f240
   14001f14c:	lea    r9,[rbp+0x550]
   14001f153:	xor    r8d,r8d
   14001f156:	lea    rdx,[rip+0x137eb]        # 0x140032948
   14001f15d:	lea    rcx,[rbp+0x420]
   14001f164:	call   QWORD PTR [rip+0x100de]        # 0x14002f248
   14001f16a:	lea    rcx,[rbp+0x550]
   14001f171:	call   0x14002ae90
   14001f176:	mov    QWORD PTR [rsp+0x48],rax
   14001f17b:	mov    edx,0xb
   14001f180:	mov    rcx,rax
   14001f183:	call   0x14002ab70
   14001f188:	mov    r14,rax
   14001f18b:	test   rax,rax
   14001f18e:	jne    0x14001f1be
   14001f190:	lea    rdx,[rip+0x137b9]        # 0x140032950
   14001f197:	mov    r9d,0x40
   14001f19d:	lea    r8,[rip+0x13704]        # 0x1400328a8
   14001f1a4:	mov    rcx,rsi
   14001f1a7:	call   QWORD PTR [rip+0x10533]        # 0x14002f6e0
   14001f1ad:	mov    rax,QWORD PTR [rsi]
   14001f1b0:	mov    rcx,rsi
   14001f1b3:	call   QWORD PTR [rax+0x310]
   14001f1b9:	jmp    0x14001f665
   14001f1be:	mov    DWORD PTR [rsi+0xee4],0x1
   14001f1c8:	mov    DWORD PTR [rsi+0x158],ebx
   14001f1ce:	inc    DWORD PTR [rip+0x22a1c]        # 0x140041bf0
   14001f1d4:	xor    r9d,r9d
   14001f1d7:	xor    r8d,r8d
   14001f1da:	mov    edx,0x147
   14001f1df:	mov    rcx,QWORD PTR [rsi+0xe48]
   14001f1e6:	call   QWORD PTR [rip+0x10314]        # 0x14002f500
   14001f1ec:	cmp    eax,0x8
   14001f1ef:	ja     0x14001f665
   14001f1f5:	cdqe   
   14001f1f7:	lea    rcx,[rip+0xfffffffffffe0e02]        # 0x140000000
   14001f1fe:	mov    eax,DWORD PTR [rcx+rax*4+0x1f6a0]
   14001f205:	add    rax,rcx
   14001f208:	jmp    rax
   14001f20a:	mov    r8,r14
   14001f20d:	lea    rcx,[rbp+0x1c0]
   14001f214:	call   0x140024590
   14001f219:	movzx  ebx,ax
   14001f21c:	test   ebx,ebx
   14001f21e:	jne    0x14001f4ce
   14001f224:	mov    rdx,rdi
   14001f227:	mov    rcx,r14
   14001f22a:	call   0x14000c9b0
   14001f22f:	movzx  ebx,ax
   14001f232:	jmp    0x14001f4ce
   14001f237:	mov    rcx,rdi
   14001f23a:	call   0x140027680
   14001f23f:	test   eax,eax
   14001f241:	jle    0x14001f262
   14001f243:	mov    rdx,rdi
   14001f246:	lea    rcx,[rbp+0x1c0]
   14001f24d:	call   0x140024bf0
   14001f252:	movzx  ebx,ax
   14001f255:	mov    rcx,rdi
   14001f258:	call   0x140027770
   14001f25d:	jmp    0x14001f4ce
   14001f262:	mov    ebx,0x6a
   14001f267:	jmp    0x14001f4ce
   14001f26c:	mov    edx,0x1
   14001f271:	mov    r8,r14
   14001f274:	mov    rcx,r15
   14001f277:	call   0x140025180
   14001f27c:	jmp    0x14001f219
   14001f27e:	mov    edx,0x2
   14001f283:	mov    r8,r14
   14001f286:	mov    rcx,r15
   14001f289:	call   0x140025180
   14001f28e:	jmp    0x14001f219
   14001f290:	mov    edx,0x4
   14001f295:	mov    r8,r14
   14001f298:	mov    rcx,r15
   14001f29b:	call   0x140025180
   14001f2a0:	jmp    0x14001f219
   14001f2a5:	mov    rdx,rdi
   14001f2a8:	mov    rcx,r15
   14001f2ab:	call   0x140024430
   14001f2b0:	jmp    0x14001f22f
   14001f2b5:	mov    rdx,rdi
   14001f2b8:	mov    rcx,r15
   14001f2bb:	call   0x140024430
   14001f2c0:	movzx  ebx,ax
   14001f2c3:	test   ebx,ebx
   14001f2c5:	jne    0x14001f4ce
   14001f2cb:	mov    rcx,rdi
   14001f2ce:	call   0x14002a9e0
   14001f2d3:	xor    ecx,ecx
   14001f2d5:	mov    edi,ecx
   14001f2d7:	lea    r9d,[rbx+0x3]
   14001f2db:	lea    rax,[rsp+0x30]
   14001f2e0:	mov    QWORD PTR [rsp+0x28],rax
   14001f2e5:	mov    QWORD PTR [rsp+0x20],rcx
   14001f2ea:	xor    r8d,r8d
   14001f2ed:	xor    edx,edx
   14001f2ef:	mov    rcx,r12
   14001f2f2:	call   QWORD PTR [rip+0x109e8]        # 0x14002fce0
   14001f2f8:	cmp    eax,0x10b
   14001f2fd:	jne    0x14001f318
   14001f2ff:	xor    r8d,r8d
   14001f302:	xor    edx,edx
   14001f304:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f309:	call   QWORD PTR [rip+0x109d9]        # 0x14002fce8
   14001f30f:	neg    eax
   14001f311:	sbb    ebx,ebx
   14001f313:	and    ebx,0x6b
   14001f316:	jmp    0x14001f31d
   14001f318:	mov    ebx,0x6b
   14001f31d:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f322:	call   QWORD PTR [rip+0x109a8]        # 0x14002fcd0
   14001f328:	jmp    0x14001f4ce
   14001f32d:	mov    edx,0x9
   14001f332:	mov    r8,r14
   14001f335:	mov    rcx,r15
   14001f338:	call   0x140025180
   14001f33d:	movzx  ebx,ax
   14001f340:	test   ebx,ebx
   14001f342:	jne    0x14001f4ce
   14001f348:	mov    rcx,rdi
   14001f34b:	call   0x14002a9e0
   14001f350:	xor    ecx,ecx
   14001f352:	mov    edi,ecx
   14001f354:	lea    r9d,[rbx+0x3]
   14001f358:	lea    rax,[rsp+0x30]
   14001f35d:	mov    QWORD PTR [rsp+0x28],rax
   14001f362:	mov    QWORD PTR [rsp+0x20],rcx
   14001f367:	xor    r8d,r8d
   14001f36a:	xor    edx,edx
   14001f36c:	mov    rcx,r12
   14001f36f:	call   QWORD PTR [rip+0x10963]        # 0x14002fcd8
   14001f375:	test   eax,eax
   14001f377:	jne    0x14001f318
   14001f379:	xor    edx,edx
   14001f37b:	mov    rcx,QWORD PTR [r14]
   14001f37e:	call   QWORD PTR [rip+0xfe9c]        # 0x14002f220
   14001f384:	mov    ebx,eax
   14001f386:	xor    r8d,r8d
   14001f389:	xor    edx,edx
   14001f38b:	mov    rcx,r14
   14001f38e:	call   0x14002ad10
   14001f393:	mov    ecx,ebx
   14001f395:	call   QWORD PTR [rip+0x1007d]        # 0x14002f418
   14001f39b:	mov    r10,rax
   14001f39e:	mov    QWORD PTR [rsp+0x50],rax
   14001f3a3:	test   rax,rax
   14001f3a6:	jne    0x14001f3b4
   14001f3a8:	lea    eax,[rdi+0x4]
   14001f3ab:	mov    edx,DWORD PTR [rsp+0x40]
   14001f3af:	jmp    0x14001f430
   14001f3b4:	xor    ecx,ecx
   14001f3b6:	mov    QWORD PTR [rsp+0x20],rcx
   14001f3bb:	lea    r9,[rsp+0x40]
   14001f3c0:	mov    r8d,ebx
   14001f3c3:	mov    rdx,rax
   14001f3c6:	mov    rcx,QWORD PTR [r14]
   14001f3c9:	call   QWORD PTR [rip+0xfe39]        # 0x14002f208
   14001f3cf:	test   eax,eax
   14001f3d1:	jne    0x14001f40c
   14001f3d3:	call   QWORD PTR [rip+0xfd87]        # 0x14002f160
   14001f3d9:	cmp    eax,0x58
   14001f3dc:	jae    0x14001f3f0
   14001f3de:	mov    eax,eax
   14001f3e0:	lea    rcx,[rip+0xfffffffffffe0c19]        # 0x140000000
   14001f3e7:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   14001f3ee:	jmp    0x14001f3f5
   14001f3f0:	mov    ecx,0x106
   14001f3f5:	mov    DWORD PTR [rip+0x23cbd],ecx        # 0x1400430b8
   14001f3fb:	mov    DWORD PTR [rip+0x240c3],0x2        # 0x1400434c8
   14001f405:	mov    BYTE PTR [rip+0x23fb4],dil        # 0x1400433c0
   14001f40c:	mov    edx,DWORD PTR [rsp+0x40]
   14001f410:	mov    r10,QWORD PTR [rsp+0x50]
   14001f415:	mov    rcx,r10
   14001f418:	cmp    WORD PTR [r10],di
   14001f41c:	je     0x14001f42e
   14001f41e:	xchg   ax,ax
   14001f420:	not    BYTE PTR [rcx]
   14001f422:	not    BYTE PTR [rcx+0x1]
   14001f425:	lea    rcx,[rcx+0x2]
   14001f429:	cmp    WORD PTR [rcx],di
   14001f42c:	jne    0x14001f420
   14001f42e:	xor    eax,eax
   14001f430:	movzx  ebx,ax
   14001f433:	test   ebx,ebx
   14001f435:	jne    0x14001f31d
   14001f43b:	mov    r8,QWORD PTR [rsp+0x30]
   14001f440:	mov    rcx,r10
   14001f443:	call   0x1400230a0
   14001f448:	xor    ecx,ecx
   14001f44a:	mov    ebx,0x6b
   14001f44f:	test   eax,eax
   14001f451:	cmove  ecx,ebx
   14001f454:	mov    ebx,ecx
   14001f456:	jmp    0x14001f31d
   14001f45b:	mov    rcx,r15
   14001f45e:	call   0x14002a9e0
   14001f463:	mov    r15,rbx
   14001f466:	mov    r9d,0x1
   14001f46c:	lea    rax,[rsp+0x30]
   14001f471:	mov    QWORD PTR [rsp+0x28],rax
   14001f476:	mov    QWORD PTR [rsp+0x20],rbx
   14001f47b:	xor    r8d,r8d
   14001f47e:	xor    edx,edx
   14001f480:	mov    rcx,r13
   14001f483:	call   QWORD PTR [rip+0x10857]        # 0x14002fce0
   14001f489:	mov    ebx,eax
   14001f48b:	test   eax,eax
   14001f48d:	jne    0x14001f4c9
   14001f48f:	mov    rcx,rdi
   14001f492:	call   0x140027680
   14001f497:	test   eax,eax
   14001f499:	jle    0x14001f4b4
   14001f49b:	mov    rdx,rdi
   14001f49e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f4a3:	call   0x1400232e0
   14001f4a8:	mov    ebx,0x6b
   14001f4ad:	test   eax,eax
   14001f4af:	cmovne eax,ebx
   14001f4b2:	mov    ebx,eax
   14001f4b4:	mov    rcx,rdi
   14001f4b7:	call   0x140027770
   14001f4bc:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f4c1:	call   QWORD PTR [rip+0x10809]        # 0x14002fcd0
   14001f4c7:	jmp    0x14001f4ce
   14001f4c9:	mov    ebx,0x6b
   14001f4ce:	dec    DWORD PTR [rip+0x2271c]        # 0x140041bf0
   14001f4d4:	mov    ecx,0x64
   14001f4d9:	mov    r8d,ecx
   14001f4dc:	lea    rdx,[rip+0x1349d]        # 0x140032980
   14001f4e3:	call   0x14001f840
   14001f4e8:	mov    rcx,r14
   14001f4eb:	call   0x14002a9e0
   14001f4f0:	test   rdi,rdi
   14001f4f3:	je     0x14001f4fd
   14001f4f5:	mov    rcx,rdi
   14001f4f8:	call   0x14002a9e0
   14001f4fd:	test   r15,r15
   14001f500:	je     0x14001f50a
   14001f502:	mov    rcx,r15
   14001f505:	call   0x14002a9e0
   14001f50a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f50f:	mov    rcx,QWORD PTR [rdi+0x8]
   14001f513:	call   QWORD PTR [rip+0xfcdf]        # 0x14002f1f8
   14001f519:	mov    rcx,rdi
   14001f51c:	call   0x14002af10
   14001f521:	mov    rcx,r13
   14001f524:	call   0x14002af10
   14001f529:	mov    rcx,r12
   14001f52c:	call   0x14002af10
   14001f531:	mov    edx,ebx
   14001f533:	mov    rcx,QWORD PTR [rsi+0x40]
   14001f537:	call   0x140021b80
   14001f53c:	xor    eax,eax
   14001f53e:	mov    DWORD PTR [rsi+0xee4],eax
   14001f544:	xor    edx,edx
   14001f546:	lea    rcx,[rsi+0x9d0]
   14001f54d:	call   QWORD PTR [rip+0x100b5]        # 0x14002f608
   14001f553:	xor    edx,edx
   14001f555:	lea    rcx,[rsi+0x8f8]
   14001f55c:	call   QWORD PTR [rip+0x100a6]        # 0x14002f608
   14001f562:	xor    edx,edx
   14001f564:	lea    rcx,[rsi+0x160]
   14001f56b:	call   QWORD PTR [rip+0x10097]        # 0x14002f608
   14001f571:	xor    edx,edx
   14001f573:	lea    rcx,[rsi+0xaa8]
   14001f57a:	call   QWORD PTR [rip+0x10088]        # 0x14002f608
   14001f580:	mov    edx,0x1
   14001f585:	lea    rcx,[rsi+0x820]
   14001f58c:	call   QWORD PTR [rip+0x10076]        # 0x14002f608
   14001f592:	mov    edx,0x1
   14001f597:	lea    rcx,[rsi+0x748]
   14001f59e:	call   QWORD PTR [rip+0x10064]        # 0x14002f608
   14001f5a4:	mov    edx,0x1
   14001f5a9:	lea    rcx,[rsi+0xd30]
   14001f5b0:	call   QWORD PTR [rip+0x10052]        # 0x14002f608
   14001f5b6:	mov    edx,0x1
   14001f5bb:	lea    rcx,[rsi+0xc58]
   14001f5c2:	call   QWORD PTR [rip+0x10040]        # 0x14002f608
   14001f5c8:	mov    edx,0x1
   14001f5cd:	lea    rcx,[rsi+0xb80]
   14001f5d4:	call   QWORD PTR [rip+0x1002e]        # 0x14002f608
   14001f5da:	mov    edx,0x1
   14001f5df:	lea    rcx,[rsi+0x598]
   14001f5e6:	call   QWORD PTR [rip+0x1001c]        # 0x14002f608
   14001f5ec:	mov    edx,0x1
   14001f5f1:	lea    rcx,[rsi+0x4c0]
   14001f5f8:	call   QWORD PTR [rip+0x1000a]        # 0x14002f608
   14001f5fe:	mov    edx,0x1
   14001f603:	lea    rcx,[rsi+0x670]
   14001f60a:	call   QWORD PTR [rip+0xfff8]        # 0x14002f608
   14001f610:	mov    edx,0x1
   14001f615:	lea    rcx,[rsi+0xe08]
   14001f61c:	call   QWORD PTR [rip+0xffe6]        # 0x14002f608
   14001f622:	mov    edx,0x1
   14001f627:	lea    rcx,[rsi+0x3e8]
   14001f62e:	call   QWORD PTR [rip+0xffd4]        # 0x14002f608
   14001f634:	xor    r9d,r9d
   14001f637:	xor    r8d,r8d
   14001f63a:	mov    edx,0x402
   14001f63f:	mov    rcx,QWORD PTR [rsi+0x350]
   14001f646:	call   QWORD PTR [rip+0xfeb4]        # 0x14002f500
   14001f64c:	xor    r9d,r9d
   14001f64f:	xor    r8d,r8d
   14001f652:	mov    edx,0x402
   14001f657:	mov    rcx,QWORD PTR [rsi+0x278]
   14001f65e:	call   QWORD PTR [rip+0xfe9c]        # 0x14002f500
   14001f664:	nop
   14001f665:	lea    rcx,[rsp+0x38]
   14001f66a:	call   QWORD PTR [rip+0x10320]        # 0x14002f990
   14001f670:	mov    rcx,QWORD PTR [rbp+0x680]
   14001f677:	xor    rcx,rsp
   14001f67a:	call   0x14002c960
   14001f67f:	lea    r11,[rsp+0x790]
   14001f687:	mov    rbx,QWORD PTR [r11+0x38]
   14001f68b:	mov    rsi,QWORD PTR [r11+0x40]
   14001f68f:	mov    rdi,QWORD PTR [r11+0x48]
   14001f693:	mov    rsp,r11
   14001f696:	pop    r15
   14001f698:	pop    r14
   14001f69a:	pop    r13
   14001f69c:	pop    r12
   14001f69e:	pop    rbp
   14001f69f:	ret    
   14001f6a0:	or     dh,dl
   14001f6a2:	add    DWORD PTR [rax],eax
   14001f6a4:	(bad)  
   14001f6a5:	repnz add DWORD PTR [rax],eax
   14001f6a8:	ins    BYTE PTR es:[rdi],dx
   14001f6a9:	repnz add DWORD PTR [rax],eax
   14001f6ac:	jle    0x14001f6a0
   14001f6ae:	add    DWORD PTR [rax],eax
   14001f6b0:	nop
   14001f6b1:	repnz add DWORD PTR [rax],eax
   14001f6b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f6b5:	repnz add DWORD PTR [rax],eax
   14001f6b8:	mov    ch,0xf2
   14001f6ba:	add    DWORD PTR [rax],eax
   14001f6bc:	sub    eax,0x5b0001f3
   14001f6c1:	hlt    
   14001f6c2:	add    DWORD PTR [rax],eax
   14001f6c4:	int3   
   14001f6c5:	int3   
   14001f6c6:	int3   
   14001f6c7:	int3   
   14001f6c8:	int3   
   14001f6c9:	int3   
   14001f6ca:	int3   
   14001f6cb:	int3   
   14001f6cc:	int3   
   14001f6cd:	int3   
   14001f6ce:	int3   
   14001f6cf:	int3   
   14001f6d0:	rex push rbx
   14001f6d2:	sub    rsp,0x20
   14001f6d6:	cmp    DWORD PTR [rcx+0xee4],0x0
   14001f6dd:	mov    rbx,rcx
   14001f6e0:	je     0x14001f6f2
   14001f6e2:	mov    DWORD PTR [rcx+0x158],0x1
   14001f6ec:	add    rsp,0x20
   14001f6f0:	pop    rbx
   14001f6f1:	ret    
   14001f6f2:	add    rcx,0xaa8
   14001f6f9:	mov    QWORD PTR [rsp+0x30],rdi
   14001f6fe:	call   QWORD PTR [rip+0xff0c]        # 0x14002f610
   14001f704:	cmp    eax,0x1
   14001f707:	jne    0x14001f82d
   14001f70d:	lea    rcx,[rbx+0x9d0]
   14001f714:	xor    edx,edx
   14001f716:	call   QWORD PTR [rip+0xfeec]        # 0x14002f608
   14001f71c:	lea    rcx,[rbx+0x8f8]
   14001f723:	xor    edx,edx
   14001f725:	call   QWORD PTR [rip+0xfedd]        # 0x14002f608
   14001f72b:	lea    rcx,[rbx+0x160]
   14001f732:	xor    edx,edx
   14001f734:	call   QWORD PTR [rip+0xfece]        # 0x14002f608
   14001f73a:	lea    rcx,[rbx+0xaa8]
   14001f741:	xor    edx,edx
   14001f743:	call   QWORD PTR [rip+0xfebf]        # 0x14002f608
   14001f749:	lea    rcx,[rbx+0x820]
   14001f750:	mov    edx,0x1
   14001f755:	call   QWORD PTR [rip+0xfead]        # 0x14002f608
   14001f75b:	lea    rcx,[rbx+0x748]
   14001f762:	mov    edx,0x1
   14001f767:	call   QWORD PTR [rip+0xfe9b]        # 0x14002f608
   14001f76d:	lea    rcx,[rbx+0xd30]
   14001f774:	mov    edx,0x1
   14001f779:	call   QWORD PTR [rip+0xfe89]        # 0x14002f608
   14001f77f:	lea    rcx,[rbx+0xc58]
   14001f786:	mov    edx,0x1
   14001f78b:	call   QWORD PTR [rip+0xfe77]        # 0x14002f608
   14001f791:	lea    rcx,[rbx+0xb80]
   14001f798:	mov    edx,0x1
   14001f79d:	call   QWORD PTR [rip+0xfe65]        # 0x14002f608
   14001f7a3:	lea    rcx,[rbx+0x598]
   14001f7aa:	mov    edx,0x1
   14001f7af:	call   QWORD PTR [rip+0xfe53]        # 0x14002f608
   14001f7b5:	lea    rcx,[rbx+0x4c0]
   14001f7bc:	mov    edx,0x1
   14001f7c1:	call   QWORD PTR [rip+0xfe41]        # 0x14002f608
   14001f7c7:	lea    rcx,[rbx+0x670]
   14001f7ce:	mov    edx,0x1
   14001f7d3:	call   QWORD PTR [rip+0xfe2f]        # 0x14002f608
   14001f7d9:	lea    rcx,[rbx+0xe08]
   14001f7e0:	mov    edx,0x1
   14001f7e5:	call   QWORD PTR [rip+0xfe1d]        # 0x14002f608
   14001f7eb:	lea    rcx,[rbx+0x3e8]
   14001f7f2:	mov    edx,0x1
   14001f7f7:	call   QWORD PTR [rip+0xfe0b]        # 0x14002f608
   14001f7fd:	mov    rcx,QWORD PTR [rbx+0x350]
   14001f804:	xor    r9d,r9d
   14001f807:	xor    r8d,r8d
   14001f80a:	mov    edx,0x402
   14001f80f:	call   QWORD PTR [rip+0xfceb]        # 0x14002f500
   14001f815:	mov    rcx,QWORD PTR [rbx+0x278]
   14001f81c:	xor    r9d,r9d
   14001f81f:	xor    r8d,r8d
   14001f822:	mov    edx,0x402
   14001f827:	call   QWORD PTR [rip+0xfcd3]        # 0x14002f500
   14001f82d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001f832:	add    rsp,0x20
   14001f836:	pop    rbx
   14001f837:	ret    
   14001f838:	int3   
   14001f839:	int3   
   14001f83a:	int3   
   14001f83b:	int3   
   14001f83c:	int3   
   14001f83d:	int3   
   14001f83e:	int3   
   14001f83f:	int3   
   14001f840:	rex push rbp
   14001f842:	push   rsi
   14001f843:	push   rdi
   14001f844:	sub    rsp,0x1b0
   14001f84b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001f854:	mov    QWORD PTR [rsp+0x1e8],rbx
   14001f85c:	mov    rax,QWORD PTR [rip+0x1c79d]        # 0x14003c000
   14001f863:	xor    rax,rsp
   14001f866:	mov    QWORD PTR [rsp+0x1a0],rax
   14001f86e:	movzx  esi,r8w
   14001f872:	movzx  edi,cx
   14001f875:	mov    r8,QWORD PTR [rip+0x1da7c]        # 0x14003d2f8
   14001f87c:	lea    rcx,[rsp+0x70]
   14001f881:	call   0x14002b010
   14001f886:	call   QWORD PTR [rip+0xfff4]        # 0x14002f880
   14001f88c:	xor    ebp,ebp
   14001f88e:	test   rax,rax
   14001f891:	je     0x14001f8a4
   14001f893:	mov    rdx,QWORD PTR [rax]
   14001f896:	mov    rcx,rax
   14001f899:	call   QWORD PTR [rdx+0xf8]
   14001f89f:	mov    rbx,rax
   14001f8a2:	jmp    0x14001f8a7
   14001f8a4:	mov    rbx,rbp
   14001f8a7:	movzx  r8d,si
   14001f8ab:	xor    r9d,r9d
   14001f8ae:	mov    edx,0x402
   14001f8b3:	mov    rcx,QWORD PTR [rbx+0x758]
   14001f8ba:	call   QWORD PTR [rip+0xfc40]        # 0x14002f500
   14001f8c0:	lea    rdx,[rsp+0x70]
   14001f8c5:	lea    rcx,[rsp+0x30]
   14001f8ca:	call   QWORD PTR [rip+0xfdb8]        # 0x14002f688
   14001f8d0:	nop
   14001f8d1:	lea    rcx,[rbx+0xd00]
   14001f8d8:	mov    rdx,QWORD PTR [rax]
   14001f8db:	call   QWORD PTR [rip+0xfd57]        # 0x14002f638
   14001f8e1:	nop
   14001f8e2:	lea    rcx,[rsp+0x30]
   14001f8e7:	call   QWORD PTR [rip+0x100a3]        # 0x14002f990
   14001f8ed:	movzx  r8d,di
   14001f8f1:	xor    r9d,r9d
   14001f8f4:	mov    edx,0x402
   14001f8f9:	mov    rcx,QWORD PTR [rbx+0x680]
   14001f900:	call   QWORD PTR [rip+0xfbfa]        # 0x14002f500
   14001f906:	mov    edi,0x1
   14001f90b:	mov    DWORD PTR [rsp+0x20],edi
   14001f90f:	xor    r9d,r9d
   14001f912:	xor    r8d,r8d
   14001f915:	xor    edx,edx
   14001f917:	lea    rcx,[rsp+0x40]
   14001f91c:	call   QWORD PTR [rip+0xfbd6]        # 0x14002f4f8
   14001f922:	test   eax,eax
   14001f924:	je     0x14001f961
   14001f926:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001f930:	lea    rcx,[rsp+0x40]
   14001f935:	call   QWORD PTR [rip+0xfbb5]        # 0x14002f4f0
   14001f93b:	lea    rcx,[rsp+0x40]
   14001f940:	call   QWORD PTR [rip+0xfbca]        # 0x14002f510
   14001f946:	mov    DWORD PTR [rsp+0x20],edi
   14001f94a:	xor    r9d,r9d
   14001f94d:	xor    r8d,r8d
   14001f950:	xor    edx,edx
   14001f952:	lea    rcx,[rsp+0x40]
   14001f957:	call   QWORD PTR [rip+0xfb9b]        # 0x14002f4f8
   14001f95d:	test   eax,eax
   14001f95f:	jne    0x14001f930
   14001f961:	cmp    DWORD PTR [rbx+0x560],0x0
   14001f968:	jne    0x14001f976
   14001f96a:	cmp    DWORD PTR [rip+0x22283],0x0        # 0x140041bf4
   14001f971:	movzx  eax,bp
   14001f974:	je     0x14001f979
   14001f976:	movzx  eax,di
   14001f979:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14001f981:	xor    rcx,rsp
   14001f984:	call   0x14002c960
   14001f989:	mov    rbx,QWORD PTR [rsp+0x1e8]
   14001f991:	add    rsp,0x1b0
   14001f998:	pop    rdi
   14001f999:	pop    rsi
   14001f99a:	pop    rbp
   14001f99b:	ret    
   14001f99c:	int3   
   14001f99d:	int3   
   14001f99e:	int3   
   14001f99f:	int3   
   14001f9a0:	rex push rbx
   14001f9a2:	sub    rsp,0x4f0
   14001f9a9:	mov    rax,QWORD PTR [rip+0x1c650]        # 0x14003c000
   14001f9b0:	xor    rax,rsp
   14001f9b3:	mov    QWORD PTR [rsp+0x4e0],rax
   14001f9bb:	mov    rbx,rcx
   14001f9be:	lea    rdx,[rsp+0x20]
   14001f9c3:	mov    r8d,0x12a
   14001f9c9:	add    rcx,0xd30
   14001f9d0:	call   QWORD PTR [rip+0xfc5a]        # 0x14002f630
   14001f9d6:	lea    rcx,[rbx+0xc58]
   14001f9dd:	lea    rdx,[rsp+0x280]
   14001f9e5:	mov    r8d,0x12a
   14001f9eb:	call   QWORD PTR [rip+0xfc3f]        # 0x14002f630
   14001f9f1:	cmp    WORD PTR [rsp+0x20],0x0
   14001f9f7:	je     0x14001fa0b
   14001f9f9:	cmp    WORD PTR [rsp+0x280],0x0
   14001fa02:	je     0x14001fa0b
   14001fa04:	mov    edx,0x1
   14001fa09:	jmp    0x14001fa0d
   14001fa0b:	xor    edx,edx
   14001fa0d:	lea    rcx,[rbx+0xb80]
   14001fa14:	call   QWORD PTR [rip+0xfbee]        # 0x14002f608
   14001fa1a:	mov    rcx,QWORD PTR [rsp+0x4e0]
   14001fa22:	xor    rcx,rsp
   14001fa25:	call   0x14002c960
   14001fa2a:	add    rsp,0x4f0
   14001fa31:	pop    rbx
   14001fa32:	ret    
   14001fa33:	int3   
   14001fa34:	int3   
   14001fa35:	int3   
   14001fa36:	int3   
   14001fa37:	int3   
   14001fa38:	int3   
   14001fa39:	int3   
   14001fa3a:	int3   
   14001fa3b:	int3   
   14001fa3c:	int3   
   14001fa3d:	int3   
   14001fa3e:	int3   
   14001fa3f:	int3   
   14001fa40:	sub    rsp,0x38
   14001fa44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fa4d:	mov    ecx,0x1c30
   14001fa52:	call   QWORD PTR [rip+0xff40]        # 0x14002f998
   14001fa58:	mov    QWORD PTR [rsp+0x40],rax
   14001fa5d:	test   rax,rax
   14001fa60:	je     0x14001fa6d
   14001fa62:	mov    rcx,rax
   14001fa65:	call   0x14001fa90
   14001fa6a:	nop
   14001fa6b:	jmp    0x14001fa6f
   14001fa6d:	xor    eax,eax
   14001fa6f:	add    rsp,0x38
   14001fa73:	ret    
   14001fa74:	int3   
   14001fa75:	int3   
   14001fa76:	int3   
   14001fa77:	int3   
   14001fa78:	int3   
   14001fa79:	int3   
   14001fa7a:	int3   
   14001fa7b:	int3   
   14001fa7c:	int3   
   14001fa7d:	int3   
   14001fa7e:	int3   
   14001fa7f:	int3   
   14001fa80:	lea    rax,[rip+0x13b49]        # 0x1400335d0
   14001fa87:	ret    
   14001fa88:	int3   
   14001fa89:	int3   
   14001fa8a:	int3   
   14001fa8b:	int3   
   14001fa8c:	int3   
   14001fa8d:	int3   
   14001fa8e:	int3   
   14001fa8f:	int3   
   14001fa90:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa95:	push   rsi
   14001fa96:	push   rdi
   14001fa97:	push   r12
   14001fa99:	push   r14
   14001fa9b:	push   r15
   14001fa9d:	sub    rsp,0x30
   14001faa1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001faaa:	mov    QWORD PTR [rsp+0x68],rbx
   14001faaf:	mov    QWORD PTR [rsp+0x70],rbp
   14001fab4:	mov    rdi,rcx
   14001fab7:	mov    r9d,0x68
   14001fabd:	xor    r8d,r8d
   14001fac0:	lea    edx,[r9+0x65]
   14001fac4:	call   QWORD PTR [rip+0xf5fe]        # 0x14002f0c8
   14001faca:	nop
   14001facb:	lea    rax,[rip+0x1364e]        # 0x140033120
   14001fad2:	mov    QWORD PTR [rdi],rax
   14001fad5:	lea    rcx,[rdi+0x160]
   14001fadc:	call   QWORD PTR [rip+0xfb96]        # 0x14002f678
   14001fae2:	lea    r12,[rip+0x1247f]        # 0x140031f68
   14001fae9:	mov    QWORD PTR [rdi+0x160],r12
   14001faf0:	lea    rcx,[rdi+0x238]
   14001faf7:	call   QWORD PTR [rip+0xfb7b]        # 0x14002f678
   14001fafd:	mov    QWORD PTR [rdi+0x238],r12
   14001fb04:	lea    rcx,[rdi+0x310]
   14001fb0b:	call   QWORD PTR [rip+0xfb67]        # 0x14002f678
   14001fb11:	mov    QWORD PTR [rdi+0x310],r12
   14001fb18:	lea    rcx,[rdi+0x3e8]
   14001fb1f:	call   QWORD PTR [rip+0xfb53]        # 0x14002f678
   14001fb25:	mov    QWORD PTR [rdi+0x3e8],r12
   14001fb2c:	lea    rcx,[rdi+0x4c0]
   14001fb33:	call   QWORD PTR [rip+0xfb3f]        # 0x14002f678
   14001fb39:	lea    r15,[rip+0x12140]        # 0x140031c80
   14001fb40:	mov    QWORD PTR [rdi+0x4c0],r15
   14001fb47:	lea    rcx,[rdi+0x598]
   14001fb4e:	call   QWORD PTR [rip+0xfb24]        # 0x14002f678
   14001fb54:	lea    rbp,[rip+0x12725]        # 0x140032280
   14001fb5b:	mov    QWORD PTR [rdi+0x598],rbp
   14001fb62:	lea    rcx,[rdi+0x670]
   14001fb69:	call   QWORD PTR [rip+0xfb09]        # 0x14002f678
   14001fb6f:	lea    r14,[rip+0x12a1a]        # 0x140032590
   14001fb76:	mov    QWORD PTR [rdi+0x670],r14
   14001fb7d:	lea    rcx,[rdi+0x748]
   14001fb84:	call   QWORD PTR [rip+0xfaee]        # 0x14002f678
   14001fb8a:	lea    rsi,[rip+0x11e07]        # 0x140031998
   14001fb91:	mov    QWORD PTR [rdi+0x748],rsi
   14001fb98:	lea    rcx,[rdi+0x820]
   14001fb9f:	call   QWORD PTR [rip+0xfad3]        # 0x14002f678
   14001fba5:	mov    QWORD PTR [rdi+0x820],r15
   14001fbac:	lea    rcx,[rdi+0x8f8]
   14001fbb3:	call   QWORD PTR [rip+0xfabf]        # 0x14002f678
   14001fbb9:	mov    QWORD PTR [rdi+0x8f8],rsi
   14001fbc0:	lea    rcx,[rdi+0x9d0]
   14001fbc7:	call   QWORD PTR [rip+0xfaab]        # 0x14002f678
   14001fbcd:	mov    QWORD PTR [rdi+0x9d0],r15
   14001fbd4:	lea    rcx,[rdi+0xaa8]
   14001fbdb:	call   QWORD PTR [rip+0xfa97]        # 0x14002f678
   14001fbe1:	mov    QWORD PTR [rdi+0xaa8],r15
   14001fbe8:	lea    rcx,[rdi+0xb80]
   14001fbef:	call   QWORD PTR [rip+0xfa83]        # 0x14002f678
   14001fbf5:	mov    QWORD PTR [rdi+0xb80],rbp
   14001fbfc:	lea    rcx,[rdi+0xc58]
   14001fc03:	call   QWORD PTR [rip+0xfa6f]        # 0x14002f678
   14001fc09:	mov    QWORD PTR [rdi+0xc58],r15
   14001fc10:	lea    rcx,[rdi+0xd30]
   14001fc17:	call   QWORD PTR [rip+0xfa5b]        # 0x14002f678
   14001fc1d:	mov    QWORD PTR [rdi+0xd30],r14
   14001fc24:	lea    rcx,[rdi+0xe08]
   14001fc2b:	call   QWORD PTR [rip+0xfa47]        # 0x14002f678
   14001fc31:	mov    QWORD PTR [rdi+0xe08],r12
   14001fc38:	lea    rcx,[rdi+0xee0]
   14001fc3f:	call   QWORD PTR [rip+0xfa33]        # 0x14002f678
   14001fc45:	mov    QWORD PTR [rdi+0xee0],r12
   14001fc4c:	mov    BYTE PTR [rdi+0xfd0],0x0
   14001fc53:	mov    BYTE PTR [rdi+0x14e0],0x0
   14001fc5a:	mov    rcx,rdi
   14001fc5d:	call   QWORD PTR [rip+0xfd05]        # 0x14002f968
   14001fc63:	nop
   14001fc64:	mov    rax,rdi
   14001fc67:	mov    rbx,QWORD PTR [rsp+0x68]
   14001fc6c:	mov    rbp,QWORD PTR [rsp+0x70]
   14001fc71:	add    rsp,0x30
   14001fc75:	pop    r15
   14001fc77:	pop    r14
   14001fc79:	pop    r12
   14001fc7b:	pop    rdi
   14001fc7c:	pop    rsi
   14001fc7d:	ret    
   14001fc7e:	int3   
   14001fc7f:	int3   
   14001fc80:	mov    QWORD PTR [rsp+0x8],rbx
   14001fc85:	push   rdi
   14001fc86:	sub    rsp,0x20
   14001fc8a:	mov    ebx,edx
   14001fc8c:	mov    rdi,rcx
   14001fc8f:	call   0x14001fcb0
   14001fc94:	test   bl,0x1
   14001fc97:	je     0x14001fca2
   14001fc99:	mov    rcx,rdi
   14001fc9c:	call   QWORD PTR [rip+0xfed6]        # 0x14002fb78
   14001fca2:	mov    rax,rdi
   14001fca5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fcaa:	add    rsp,0x20
   14001fcae:	pop    rdi
   14001fcaf:	ret    
   14001fcb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001fcb5:	push   rbx
   14001fcb6:	sub    rsp,0x30
   14001fcba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fcc3:	mov    rbx,rcx
   14001fcc6:	lea    rax,[rip+0x13453]        # 0x140033120
   14001fccd:	mov    QWORD PTR [rcx],rax
   14001fcd0:	add    rcx,0xee0
   14001fcd7:	call   QWORD PTR [rip+0xfc4b]        # 0x14002f928
   14001fcdd:	nop
   14001fcde:	lea    rcx,[rbx+0xe08]
   14001fce5:	call   QWORD PTR [rip+0xfc3d]        # 0x14002f928
   14001fceb:	nop
   14001fcec:	lea    rcx,[rbx+0xd30]
   14001fcf3:	call   QWORD PTR [rip+0xfb57]        # 0x14002f850
   14001fcf9:	nop
   14001fcfa:	lea    rcx,[rbx+0xc58]
   14001fd01:	call   QWORD PTR [rip+0xfb99]        # 0x14002f8a0
   14001fd07:	nop
   14001fd08:	lea    rcx,[rbx+0xb80]
   14001fd0f:	call   QWORD PTR [rip+0xfc2b]        # 0x14002f940
   14001fd15:	nop
   14001fd16:	lea    rcx,[rbx+0xaa8]
   14001fd1d:	call   QWORD PTR [rip+0xfb7d]        # 0x14002f8a0
   14001fd23:	nop
   14001fd24:	lea    rcx,[rbx+0x9d0]
   14001fd2b:	call   QWORD PTR [rip+0xfb6f]        # 0x14002f8a0
   14001fd31:	nop
   14001fd32:	lea    rcx,[rbx+0x8f8]
   14001fd39:	call   QWORD PTR [rip+0xfb39]        # 0x14002f878
   14001fd3f:	nop
   14001fd40:	lea    rcx,[rbx+0x820]
   14001fd47:	call   QWORD PTR [rip+0xfb53]        # 0x14002f8a0
   14001fd4d:	nop
   14001fd4e:	lea    rcx,[rbx+0x748]
   14001fd55:	call   QWORD PTR [rip+0xfb1d]        # 0x14002f878
   14001fd5b:	nop
   14001fd5c:	lea    rcx,[rbx+0x670]
   14001fd63:	call   QWORD PTR [rip+0xfae7]        # 0x14002f850
   14001fd69:	nop
   14001fd6a:	lea    rcx,[rbx+0x598]
   14001fd71:	call   QWORD PTR [rip+0xfbc9]        # 0x14002f940
   14001fd77:	nop
   14001fd78:	lea    rcx,[rbx+0x4c0]
   14001fd7f:	call   QWORD PTR [rip+0xfb1b]        # 0x14002f8a0
   14001fd85:	nop
   14001fd86:	lea    rcx,[rbx+0x3e8]
   14001fd8d:	call   QWORD PTR [rip+0xfb95]        # 0x14002f928
   14001fd93:	nop
   14001fd94:	lea    rcx,[rbx+0x310]
   14001fd9b:	call   QWORD PTR [rip+0xfb87]        # 0x14002f928
   14001fda1:	nop
   14001fda2:	lea    rcx,[rbx+0x238]
   14001fda9:	call   QWORD PTR [rip+0xfb79]        # 0x14002f928
   14001fdaf:	nop
   14001fdb0:	lea    rcx,[rbx+0x160]
   14001fdb7:	call   QWORD PTR [rip+0xfb6b]        # 0x14002f928
   14001fdbd:	nop
   14001fdbe:	mov    rcx,rbx
   14001fdc1:	add    rsp,0x30
   14001fdc5:	pop    rbx
   14001fdc6:	rex.W jmp QWORD PTR [rip+0xf2f3]        # 0x14002f0c0
   14001fdcd:	int3   
   14001fdce:	int3   
   14001fdcf:	int3   
   14001fdd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001fdd5:	push   rdi
   14001fdd6:	sub    rsp,0x20
   14001fdda:	mov    rdi,rdx
   14001fddd:	lea    r8,[rcx+0x160]
   14001fde4:	mov    rbx,rcx
   14001fde7:	mov    rcx,rdi
   14001fdea:	mov    edx,0x1
   14001fdef:	call   QWORD PTR [rip+0xfb13]        # 0x14002f908
   14001fdf5:	lea    r8,[rbx+0x238]
   14001fdfc:	mov    edx,0x417
   14001fe01:	mov    rcx,rdi
   14001fe04:	call   QWORD PTR [rip+0xfafe]        # 0x14002f908
   14001fe0a:	lea    r8,[rbx+0x310]
   14001fe11:	mov    edx,0x413
   14001fe16:	mov    rcx,rdi
   14001fe19:	call   QWORD PTR [rip+0xfae9]        # 0x14002f908
   14001fe1f:	lea    r8,[rbx+0x3e8]
   14001fe26:	mov    edx,0x2
   14001fe2b:	mov    rcx,rdi
   14001fe2e:	call   QWORD PTR [rip+0xfad4]        # 0x14002f908
   14001fe34:	lea    r8,[rbx+0x4c0]
   14001fe3b:	mov    edx,0x404
   14001fe40:	mov    rcx,rdi
   14001fe43:	call   QWORD PTR [rip+0xfabf]        # 0x14002f908
   14001fe49:	lea    r8,[rbx+0x598]
   14001fe50:	mov    edx,0x405
   14001fe55:	mov    rcx,rdi
   14001fe58:	call   QWORD PTR [rip+0xfaaa]        # 0x14002f908
   14001fe5e:	lea    r8,[rbx+0x670]
   14001fe65:	mov    edx,0x409
   14001fe6a:	mov    rcx,rdi
   14001fe6d:	call   QWORD PTR [rip+0xfa95]        # 0x14002f908
   14001fe73:	lea    r8,[rbx+0x748]
   14001fe7a:	mov    edx,0x3f5
   14001fe7f:	mov    rcx,rdi
   14001fe82:	call   QWORD PTR [rip+0xfa80]        # 0x14002f908
   14001fe88:	lea    r8,[rbx+0x820]
   14001fe8f:	mov    edx,0x3f7
   14001fe94:	mov    rcx,rdi
   14001fe97:	call   QWORD PTR [rip+0xfa6b]        # 0x14002f908
   14001fe9d:	lea    r8,[rbx+0x8f8]
   14001fea4:	mov    edx,0x3f0
   14001fea9:	mov    rcx,rdi
   14001feac:	call   QWORD PTR [rip+0xfa56]        # 0x14002f908
   14001feb2:	lea    r8,[rbx+0x9d0]
   14001feb9:	mov    edx,0x3f6
   14001febe:	mov    rcx,rdi
   14001fec1:	call   QWORD PTR [rip+0xfa41]        # 0x14002f908
   14001fec7:	lea    r8,[rbx+0xaa8]
   14001fece:	mov    edx,0x3f9
   14001fed3:	mov    rcx,rdi
   14001fed6:	call   QWORD PTR [rip+0xfa2c]        # 0x14002f908
   14001fedc:	lea    r8,[rbx+0xb80]
   14001fee3:	mov    edx,0x3fd
   14001fee8:	mov    rcx,rdi
   14001feeb:	call   QWORD PTR [rip+0xfa17]        # 0x14002f908
   14001fef1:	lea    r8,[rbx+0xc58]
   14001fef8:	mov    edx,0x40b
   14001fefd:	mov    rcx,rdi
   14001ff00:	call   QWORD PTR [rip+0xfa02]        # 0x14002f908
   14001ff06:	lea    r8,[rbx+0xd30]
   14001ff0d:	mov    edx,0x40a
   14001ff12:	mov    rcx,rdi
   14001ff15:	call   QWORD PTR [rip+0xf9ed]        # 0x14002f908
   14001ff1b:	lea    r8,[rbx+0xe08]
   14001ff22:	mov    edx,0x3fe
   14001ff27:	mov    rcx,rdi
   14001ff2a:	call   QWORD PTR [rip+0xf9d8]        # 0x14002f908
   14001ff30:	lea    r8,[rbx+0xee0]
   14001ff37:	mov    edx,0xe146
   14001ff3c:	mov    rcx,rdi
   14001ff3f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ff44:	add    rsp,0x20
   14001ff48:	pop    rdi
   14001ff49:	rex.W jmp QWORD PTR [rip+0xf9b8]        # 0x14002f908
   14001ff50:	lea    rax,[rip+0x131b1]        # 0x140033108
   14001ff57:	ret    
   14001ff58:	int3   
   14001ff59:	int3   
   14001ff5a:	int3   
   14001ff5b:	int3   
   14001ff5c:	int3   
   14001ff5d:	int3   
   14001ff5e:	int3   
   14001ff5f:	int3   
   14001ff60:	rex push rdi
   14001ff62:	sub    rsp,0x30
   14001ff66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ff6f:	mov    QWORD PTR [rsp+0x50],rbx
   14001ff74:	mov    rdi,rcx
   14001ff77:	call   QWORD PTR [rip+0xf953]        # 0x14002f8d0
   14001ff7d:	lea    rcx,[rdi+0x820]
   14001ff84:	xor    edx,edx
   14001ff86:	call   QWORD PTR [rip+0xf67c]        # 0x14002f608
   14001ff8c:	lea    rcx,[rdi+0x9d0]
   14001ff93:	xor    edx,edx
   14001ff95:	call   QWORD PTR [rip+0xf66d]        # 0x14002f608
   14001ff9b:	lea    rcx,[rdi+0x238]
   14001ffa2:	xor    edx,edx
   14001ffa4:	call   QWORD PTR [rip+0xf65e]        # 0x14002f608
   14001ffaa:	lea    rcx,[rdi+0x3e8]
   14001ffb1:	xor    edx,edx
   14001ffb3:	call   QWORD PTR [rip+0xf64f]        # 0x14002f608
   14001ffb9:	lea    rcx,[rdi+0x160]
   14001ffc0:	xor    edx,edx
   14001ffc2:	call   QWORD PTR [rip+0xf640]        # 0x14002f608
   14001ffc8:	lea    rcx,[rdi+0x598]
   14001ffcf:	xor    edx,edx
   14001ffd1:	call   QWORD PTR [rip+0xf631]        # 0x14002f608
   14001ffd7:	lea    rcx,[rdi+0x4c0]
   14001ffde:	xor    edx,edx
   14001ffe0:	call   QWORD PTR [rip+0xf622]        # 0x14002f608
   14001ffe6:	lea    rcx,[rdi+0x670]
   14001ffed:	xor    edx,edx
   14001ffef:	call   QWORD PTR [rip+0xf613]        # 0x14002f608
   14001fff5:	lea    rcx,[rdi+0x310]
   14001fffc:	xor    edx,edx
   14001fffe:	call   QWORD PTR [rip+0xf604]        # 0x14002f608
   140020004:	lea    rcx,[rdi+0xc58]
   14002000b:	xor    edx,edx
   14002000d:	call   QWORD PTR [rip+0xf5f5]        # 0x14002f608
   140020013:	lea    rcx,[rdi+0xd30]
   14002001a:	xor    edx,edx
   14002001c:	call   QWORD PTR [rip+0xf5e6]        # 0x14002f608
   140020022:	lea    rcx,[rsp+0x48]
   140020027:	call   0x140001610
   14002002c:	nop
   14002002d:	mov    rdx,QWORD PTR [rax]
   140020030:	lea    rcx,[rsp+0x40]
   140020035:	call   QWORD PTR [rip+0xf65d]        # 0x14002f698
   14002003b:	nop
   14002003c:	lea    rcx,[rsp+0x48]
   140020041:	call   QWORD PTR [rip+0xf949]        # 0x14002f990
   140020047:	mov    rbx,QWORD PTR [rsp+0x40]
   14002004c:	lea    rcx,[rdi+0xfd0]
   140020053:	mov    rdx,rbx
   140020056:	call   QWORD PTR [rip+0xf1fc]        # 0x14002f258
   14002005c:	lea    rcx,[rdi+0x14e0]
   140020063:	mov    rdx,rbx
   140020066:	call   QWORD PTR [rip+0xf1ec]        # 0x14002f258
   14002006c:	xor    eax,eax
   14002006e:	mov    QWORD PTR [rdi+0x1c24],rax
   140020075:	mov    QWORD PTR [rdi+0x158],rax
   14002007c:	lea    rcx,[rsp+0x40]
   140020081:	call   QWORD PTR [rip+0xf8f1]        # 0x14002f978
   140020087:	xor    eax,eax
   140020089:	mov    rbx,QWORD PTR [rsp+0x50]
   14002008e:	add    rsp,0x30
   140020092:	pop    rdi
   140020093:	ret    
   140020094:	int3   
   140020095:	int3   
   140020096:	int3   
   140020097:	int3   
   140020098:	int3   
   140020099:	int3   
   14002009a:	int3   
   14002009b:	int3   
   14002009c:	int3   
   14002009d:	int3   
   14002009e:	int3   
   14002009f:	int3   
   1400200a0:	mov    rax,rsp
   1400200a3:	push   rdi
   1400200a4:	sub    rsp,0x6e0
   1400200ab:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400200b4:	mov    QWORD PTR [rax+0x10],rbx
   1400200b8:	mov    QWORD PTR [rax+0x18],rsi
   1400200bc:	mov    rax,QWORD PTR [rip+0x1bf3d]        # 0x14003c000
   1400200c3:	xor    rax,rsp
   1400200c6:	mov    QWORD PTR [rsp+0x6d0],rax
   1400200ce:	mov    rsi,rcx
   1400200d1:	lea    rcx,[rsp+0x50]
   1400200d6:	call   QWORD PTR [rip+0xf5b4]        # 0x14002f690
   1400200dc:	nop
   1400200dd:	mov    edx,0xe72f
   1400200e2:	lea    rcx,[rsp+0x50]
   1400200e7:	call   QWORD PTR [rip+0xf593]        # 0x14002f680
   1400200ed:	mov    r8d,0x12a
   1400200f3:	lea    rdx,[rsp+0x470]
   1400200fb:	lea    rcx,[rsi+0xb80]
   140020102:	call   QWORD PTR [rip+0xf528]        # 0x14002f630
   140020108:	mov    DWORD PTR [rsp+0x40],0x1
   140020110:	mov    DWORD PTR [rsp+0x38],0x0
   140020118:	mov    QWORD PTR [rsp+0x30],rsi
   14002011d:	mov    rax,QWORD PTR [rsp+0x50]
   140020122:	mov    QWORD PTR [rsp+0x28],rax
   140020127:	mov    DWORD PTR [rsp+0x20],0x6
   14002012f:	lea    r9,[rsp+0x470]
   140020137:	xor    r8d,r8d
   14002013a:	lea    edx,[r8+0x1]
   14002013e:	lea    rcx,[rsp+0x70]
   140020143:	call   QWORD PTR [rip+0xf807]        # 0x14002f950
   140020149:	nop
   14002014a:	lea    rcx,[rsp+0x58]
   14002014f:	call   0x140023e50
   140020154:	nop
   140020155:	mov    rbx,QWORD PTR [rax]
   140020158:	lea    rcx,[rsp+0x70]
   14002015d:	call   QWORD PTR [rip+0xf7e5]        # 0x14002f948
   140020163:	mov    QWORD PTR [rax+0x50],rbx
   140020167:	lea    rcx,[rsp+0x58]
   14002016c:	call   QWORD PTR [rip+0xf81e]        # 0x14002f990
   140020172:	lea    rcx,[rsp+0x70]
   140020177:	call   QWORD PTR [rip+0xf7e3]        # 0x14002f960
   14002017d:	cmp    rax,0x1
   140020181:	jne    0x1400201a8
   140020183:	lea    rcx,[rsp+0x70]
   140020188:	call   QWORD PTR [rip+0xf7ba]        # 0x14002f948
   14002018e:	mov    rdx,QWORD PTR [rax+0x30]
   140020192:	lea    rcx,[rsi+0xb80]
   140020199:	call   QWORD PTR [rip+0xf499]        # 0x14002f638
   14002019f:	lea    rcx,[rsi+0x4c0]
   1400201a6:	jmp    0x1400201af
   1400201a8:	lea    rcx,[rsi+0xb80]
   1400201af:	call   QWORD PTR [rip+0xf44b]        # 0x14002f600
   1400201b5:	nop
   1400201b6:	lea    rcx,[rsp+0x70]
   1400201bb:	call   QWORD PTR [rip+0xf797]        # 0x14002f958
   1400201c1:	nop
   1400201c2:	lea    rcx,[rsp+0x50]
   1400201c7:	call   QWORD PTR [rip+0xf7c3]        # 0x14002f990
   1400201cd:	mov    rcx,QWORD PTR [rsp+0x6d0]
   1400201d5:	xor    rcx,rsp
   1400201d8:	call   0x14002c960
   1400201dd:	lea    r11,[rsp+0x6e0]
   1400201e5:	mov    rbx,QWORD PTR [r11+0x18]
   1400201e9:	mov    rsi,QWORD PTR [r11+0x20]
   1400201ed:	mov    rsp,r11
   1400201f0:	pop    rdi
   1400201f1:	ret    
   1400201f2:	int3   
   1400201f3:	int3   
   1400201f4:	int3   
   1400201f5:	int3   
   1400201f6:	int3   
   1400201f7:	int3   
   1400201f8:	int3   
   1400201f9:	int3   
   1400201fa:	int3   
   1400201fb:	int3   
   1400201fc:	int3   
   1400201fd:	int3   
   1400201fe:	int3   
   1400201ff:	int3   
   140020200:	mov    rax,rsp
   140020203:	push   rbp
   140020204:	push   r12
   140020206:	push   r13
   140020208:	push   r14
   14002020a:	push   r15
   14002020c:	lea    rbp,[rax-0x918]
   140020213:	sub    rsp,0x9f0
   14002021a:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140020223:	mov    QWORD PTR [rax+0x10],rbx
   140020227:	mov    QWORD PTR [rax+0x18],rsi
   14002022b:	mov    QWORD PTR [rax+0x20],rdi
   14002022f:	mov    rax,QWORD PTR [rip+0x1bdca]        # 0x14003c000
   140020236:	xor    rax,rsp
   140020239:	mov    QWORD PTR [rbp+0x8e0],rax
   140020240:	mov    rdi,rcx
   140020243:	cmp    DWORD PTR [rcx+0x1c28],0x0
   14002024a:	je     0x1400203c7
   140020250:	xor    r9d,r9d
   140020253:	xor    r8d,r8d
   140020256:	mov    edx,0x188
   14002025b:	cmp    DWORD PTR [rcx+0x15c],0x1
   140020262:	jne    0x1400202de
   140020264:	mov    rcx,QWORD PTR [rcx+0xd70]
   14002026b:	call   QWORD PTR [rip+0xf28f]        # 0x14002f500
   140020271:	movsxd r8,eax
   140020274:	lea    r9,[rbp+0x1c0]
   14002027b:	mov    edx,0x189
   140020280:	mov    rcx,QWORD PTR [rdi+0xd70]
   140020287:	call   QWORD PTR [rip+0xf273]        # 0x14002f500
   14002028d:	xor    r9d,r9d
   140020290:	xor    r8d,r8d
   140020293:	mov    edx,0x188
   140020298:	mov    rcx,QWORD PTR [rdi+0xd70]
   14002029f:	call   QWORD PTR [rip+0xf25b]        # 0x14002f500
   1400202a5:	mov    r8d,eax
   1400202a8:	xor    r9d,r9d
   1400202ab:	mov    edx,0x182
   1400202b0:	mov    rcx,QWORD PTR [rdi+0xd70]
   1400202b7:	call   QWORD PTR [rip+0xf243]        # 0x14002f500
   1400202bd:	lea    r9,[rbp+0x1c0]
   1400202c4:	xor    r8d,r8d
   1400202c7:	mov    edx,0x180
   1400202cc:	mov    rcx,QWORD PTR [rdi+0x6b0]
   1400202d3:	call   QWORD PTR [rip+0xf227]        # 0x14002f500
   1400202d9:	jmp    0x140020948
   1400202de:	mov    rcx,QWORD PTR [rcx+0x6b0]
   1400202e5:	call   QWORD PTR [rip+0xf215]        # 0x14002f500
   1400202eb:	cmp    eax,0xffffffff
   1400202ee:	je     0x140020948
   1400202f4:	movsxd r8,eax
   1400202f7:	lea    r9,[rbp+0x1c0]
   1400202fe:	mov    edx,0x189
   140020303:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14002030a:	call   QWORD PTR [rip+0xf1f0]        # 0x14002f500
   140020310:	cmp    WORD PTR [rbp+0x1c0],0x0
   140020318:	je     0x140020948
   14002031e:	lea    r9,[rbp+0x1c0]
   140020325:	or     r8,0xffffffffffffffff
   140020329:	mov    edx,0x1a2
   14002032e:	mov    rcx,QWORD PTR [rdi+0xd70]
   140020335:	call   QWORD PTR [rip+0xf1c5]        # 0x14002f500
   14002033b:	cmp    eax,0xffffffff
   14002033e:	jne    0x140020948
   140020344:	xor    r9d,r9d
   140020347:	xor    r8d,r8d
   14002034a:	mov    edx,0x188
   14002034f:	mov    rcx,QWORD PTR [rdi+0x6b0]
   140020356:	call   QWORD PTR [rip+0xf1a4]        # 0x14002f500
   14002035c:	mov    r8d,eax
   14002035f:	xor    r9d,r9d
   140020362:	mov    edx,0x182
   140020367:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14002036e:	call   QWORD PTR [rip+0xf18c]        # 0x14002f500
   140020374:	lea    r9,[rbp+0x1c0]
   14002037b:	xor    r8d,r8d
   14002037e:	mov    edx,0x180
   140020383:	mov    rcx,QWORD PTR [rdi+0xd70]
   14002038a:	call   QWORD PTR [rip+0xf170]        # 0x14002f500
   140020390:	xor    r9d,r9d
   140020393:	xor    r8d,r8d
   140020396:	mov    edx,0x18b
   14002039b:	mov    rcx,QWORD PTR [rdi+0xd70]
   1400203a2:	call   QWORD PTR [rip+0xf158]        # 0x14002f500
   1400203a8:	dec    eax
   1400203aa:	movsxd r8,eax
   1400203ad:	xor    r9d,r9d
   1400203b0:	mov    edx,0x186
   1400203b5:	mov    rcx,QWORD PTR [rdi+0xd70]
   1400203bc:	call   QWORD PTR [rip+0xf13e]        # 0x14002f500
   1400203c2:	jmp    0x140020948
   1400203c7:	movsd  xmm0,QWORD PTR [rip+0x12191]        # 0x140032560
   1400203cf:	movsd  QWORD PTR [rbp+0x90],xmm0
   1400203d7:	movzx  eax,WORD PTR [rip+0x1218a]        # 0x140032568
   1400203de:	mov    WORD PTR [rbp+0x98],ax
   1400203e5:	movzx  eax,BYTE PTR [rip+0x1217e]        # 0x14003256a
   1400203ec:	mov    BYTE PTR [rbp+0x9a],al
   1400203f2:	xor    edx,edx
   1400203f4:	mov    r8d,0x121
   1400203fa:	lea    rcx,[rbp+0x9b]
   140020401:	call   0x14002ce12
   140020406:	lea    rcx,[rsp+0x48]
   14002040b:	call   QWORD PTR [rip+0xf27f]        # 0x14002f690
   140020411:	nop
   140020412:	mov    edx,0x66
   140020417:	lea    rcx,[rsp+0x48]
   14002041c:	call   QWORD PTR [rip+0xf25e]        # 0x14002f680
   140020422:	lea    r13,[rdi+0xb80]
   140020429:	mov    r8d,0x12a
   14002042f:	lea    rdx,[rbp+0x680]
   140020436:	mov    rcx,r13
   140020439:	call   QWORD PTR [rip+0xf1f1]        # 0x14002f630
   14002043f:	lea    rdx,[rbp+0x680]
   140020446:	lea    rcx,[rsp+0x50]
   14002044b:	call   QWORD PTR [rip+0xf247]        # 0x14002f698
   140020451:	nop
   140020452:	mov    rsi,QWORD PTR [rsp+0x50]
   140020457:	mov    rcx,rsi
   14002045a:	call   0x14002ae90
   14002045f:	mov    r15,rax
   140020462:	mov    edx,0x3
   140020467:	mov    rcx,rax
   14002046a:	call   0x14002ab70
   14002046f:	test   rax,rax
   140020472:	jne    0x140020501
   140020478:	mov    rdi,QWORD PTR [rdi+0x40]
   14002047c:	lea    edx,[rax-0x6]
   14002047f:	mov    rcx,rdi
   140020482:	call   QWORD PTR [rip+0xf058]        # 0x14002f4e0
   140020488:	mov    rbx,rax
   14002048b:	mov    r9d,0x12c
   140020491:	lea    r8,[rsp+0x60]
   140020496:	mov    edx,0x80
   14002049b:	mov    rcx,rax
   14002049e:	call   QWORD PTR [rip+0xf034]        # 0x14002f4d8
   1400204a4:	mov    r9d,0x12c
   1400204aa:	lea    r8,[rbp+0x1c0]
   1400204b1:	mov    edx,0xe720
   1400204b6:	mov    rcx,rbx
   1400204b9:	call   QWORD PTR [rip+0xf019]        # 0x14002f4d8
   1400204bf:	mov    r9d,0x10
   1400204c5:	lea    r8,[rsp+0x60]
   1400204ca:	lea    rdx,[rbp+0x1c0]
   1400204d1:	mov    rcx,rdi
   1400204d4:	call   QWORD PTR [rip+0xf00e]        # 0x14002f4e8
   1400204da:	cmp    DWORD PTR [rip+0x21713],0x0        # 0x140041bf4
   1400204e1:	je     0x140020931
   1400204e7:	cmp    DWORD PTR [rip+0x21702],0x0        # 0x140041bf0
   1400204ee:	jne    0x140020931
   1400204f4:	xor    ecx,ecx
   1400204f6:	call   QWORD PTR [rip+0xefd4]        # 0x14002f4d0
   1400204fc:	jmp    0x140020931
   140020501:	mov    rcx,rax
   140020504:	call   0x14002a9e0
   140020509:	or     rax,0xffffffffffffffff
   14002050d:	nop    DWORD PTR [rax]
   140020510:	inc    rax
   140020513:	cmp    BYTE PTR [rsi+rax*1],0x0
   140020517:	jne    0x140020510
   140020519:	lea    rdx,[rsi-0x6]
   14002051d:	add    rdx,rax
   140020520:	lea    rcx,[rsp+0x60]
   140020525:	lea    rax,[rsp+0x60]
   14002052a:	sub    rdx,rax
   14002052d:	nop    DWORD PTR [rax]
   140020530:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140020534:	mov    BYTE PTR [rcx],al
   140020536:	inc    rcx
   140020539:	test   al,al
   14002053b:	jne    0x140020530
   14002053d:	mov    BYTE PTR [rsp+0x62],al
   140020541:	lea    rax,[rip+0x1c770]        # 0x14003ccb8
   140020548:	movzx  ebx,WORD PTR [rsp+0x60]
   14002054d:	movzx  ecx,WORD PTR [rip+0x1c764]        # 0x14003ccb8
   140020554:	test   cx,cx
   140020557:	je     0x140020577
   140020559:	nop    DWORD PTR [rax+0x0]
   140020560:	cmp    bx,cx
   140020563:	je     0x140020573
   140020565:	add    rax,0x4
   140020569:	movzx  ecx,WORD PTR [rax]
   14002056c:	test   cx,cx
   14002056f:	jne    0x140020560
   140020571:	jmp    0x140020577
   140020573:	movzx  ebx,WORD PTR [rax+0x2]
   140020577:	lea    rcx,[rip+0x11fd2]        # 0x140032550
   14002057e:	call   QWORD PTR [rip+0xecfc]        # 0x14002f280
   140020584:	movsxd rcx,eax
   140020587:	mov    WORD PTR [rbp+rcx*1+0x94],bx
   14002058f:	lea    rdx,[rdi+0xfd0]
   140020596:	lea    rcx,[rbp+0x550]
   14002059d:	call   QWORD PTR [rip+0xecb5]        # 0x14002f258
   1400205a3:	lea    rcx,[rbp+0x420]
   1400205aa:	cmp    BYTE PTR [rbp+0x550],0x0
   1400205b1:	je     0x1400205d0
   1400205b3:	lea    r9,[rbp+0x90]
   1400205ba:	lea    r8,[rbp+0x550]
   1400205c1:	lea    rdx,[rip+0x10ef4]        # 0x1400314bc
   1400205c8:	call   QWORD PTR [rip+0xee82]        # 0x14002f450
   1400205ce:	jmp    0x1400205dd
   1400205d0:	lea    rdx,[rbp+0x90]
   1400205d7:	call   QWORD PTR [rip+0xec7b]        # 0x14002f258
   1400205dd:	lea    rcx,[rdi+0x138a]
   1400205e4:	mov    rdx,rsi
   1400205e7:	call   QWORD PTR [rip+0xec6b]        # 0x14002f258
   1400205ed:	lea    rdx,[rip+0x11f78]        # 0x14003256c
   1400205f4:	lea    rcx,[rbp+0x420]
   1400205fb:	call   QWORD PTR [rip+0xee3f]        # 0x14002f440
   140020601:	mov    r12,rax
   140020604:	test   rax,rax
   140020607:	jne    0x14002062d
   140020609:	mov    rdx,QWORD PTR [rsp+0x48]
   14002060e:	lea    rcx,[rsp+0x40]
   140020613:	call   QWORD PTR [rip+0xf07f]        # 0x14002f698
   140020619:	mov    rcx,QWORD PTR [rax]
   14002061c:	movzx  r14d,WORD PTR [rcx]
   140020620:	lea    rcx,[rsp+0x40]
   140020625:	call   QWORD PTR [rip+0xf34d]        # 0x14002f978
   14002062b:	jmp    0x140020698
   14002062d:	xor    r13d,r13d
   140020630:	mov    esi,r13d
   140020633:	lea    rbx,[rsp+0x60]
   140020638:	nop    DWORD PTR [rax+rax*1+0x0]
   140020640:	mov    ecx,r13d
   140020643:	lea    rax,[rsp+0x60]
   140020648:	cmp    BYTE PTR [rsp+0x60],cl
   14002064c:	je     0x14002065b
   14002064e:	xchg   ax,ax
   140020650:	lea    rax,[rax+0x1]
   140020654:	inc    ecx
   140020656:	cmp    BYTE PTR [rax],r13b
   140020659:	jne    0x140020650
   14002065b:	cmp    esi,ecx
   14002065d:	jge    0x140020682
   14002065f:	movzx  r14d,BYTE PTR [rbx]
   140020663:	mov    ecx,r14d
   140020666:	call   QWORD PTR [rip+0xedb4]        # 0x14002f420
   14002066c:	test   eax,eax
   14002066e:	je     0x14002067b
   140020670:	mov    ecx,r14d
   140020673:	call   QWORD PTR [rip+0xed97]        # 0x14002f410
   140020679:	mov    BYTE PTR [rbx],al
   14002067b:	inc    esi
   14002067d:	inc    rbx
   140020680:	jmp    0x140020640
   140020682:	movzx  r14d,WORD PTR [rsp+0x60]
   140020688:	mov    rcx,r12
   14002068b:	call   QWORD PTR [rip+0xed9f]        # 0x14002f430
   140020691:	lea    r13,[rdi+0xb80]
   140020698:	lea    rcx,[rsp+0x40]
   14002069d:	call   QWORD PTR [rip+0xf2cd]        # 0x14002f970
   1400206a3:	nop
   1400206a4:	mov    edx,0x66
   1400206a9:	lea    rcx,[rsp+0x40]
   1400206ae:	call   QWORD PTR [rip+0xf2cc]        # 0x14002f980
   1400206b4:	mov    edx,0x5948
   1400206b9:	mov    r9,r15
   1400206bc:	lea    rcx,[rdi+0x14c8]
   1400206c3:	call   0x140017500
   1400206c8:	test   ax,ax
   1400206cb:	jne    0x1400206da
   1400206cd:	lea    rcx,[rsp+0x40]
   1400206d2:	call   QWORD PTR [rip+0xf2a0]        # 0x14002f978
   1400206d8:	jmp    0x140020701
   1400206da:	mov    edx,0x5948
   1400206df:	xor    r9d,r9d
   1400206e2:	lea    rcx,[rdi+0x14c8]
   1400206e9:	call   0x140017500
   1400206ee:	movzx  ebx,ax
   1400206f1:	lea    rcx,[rsp+0x40]
   1400206f6:	call   QWORD PTR [rip+0xf27c]        # 0x14002f978
   1400206fc:	test   bx,bx
   1400206ff:	jne    0x14002073f
   140020701:	lea    rcx,[rdi+0x14c8]
   140020708:	call   0x140017a20
   14002070d:	xor    ebx,ebx
   14002070f:	test   ax,ax
   140020712:	jne    0x140020741
   140020714:	mov    WORD PTR [rsp+0x28],bx
   140020719:	mov    WORD PTR [rsp+0x20],r14w
   14002071f:	xor    r9d,r9d
   140020722:	lea    rcx,[rdi+0x14c8]
   140020729:	call   0x140017ad0
   14002072e:	test   ax,ax
   140020731:	jne    0x140020741
   140020733:	mov    DWORD PTR [rdi+0x1c20],0x1
   14002073d:	jmp    0x140020747
   14002073f:	xor    ebx,ebx
   140020741:	mov    DWORD PTR [rdi+0x1c20],ebx
   140020747:	mov    r8,r15
   14002074a:	lea    rcx,[rdi+0xfb8]
   140020751:	call   0x14001bdf0
   140020756:	test   ax,ax
   140020759:	jne    0x140020895
   14002075f:	lea    rcx,[rdi+0xfb8]
   140020766:	call   0x140017a20
   14002076b:	test   ax,ax
   14002076e:	jne    0x140020895
   140020774:	movzx  edx,r14w
   140020778:	lea    rcx,[rdi+0xfb8]
   14002077f:	call   0x14001be70
   140020784:	test   ax,ax
   140020787:	jne    0x140020895
   14002078d:	lea    rcx,[rdi+0x3e8]
   140020794:	mov    edx,0x1
   140020799:	call   QWORD PTR [rip+0xee69]        # 0x14002f608
   14002079f:	lea    rcx,[rsp+0x40]
   1400207a4:	call   QWORD PTR [rip+0xeee6]        # 0x14002f690
   1400207aa:	nop
   1400207ab:	mov    edx,0xe725
   1400207b0:	lea    rcx,[rsp+0x40]
   1400207b5:	call   QWORD PTR [rip+0xeec5]        # 0x14002f680
   1400207bb:	mov    rdx,QWORD PTR [rsp+0x40]
   1400207c0:	lea    rcx,[rdi+0x160]
   1400207c7:	call   QWORD PTR [rip+0xee6b]        # 0x14002f638
   1400207cd:	xor    edx,edx
   1400207cf:	lea    rcx,[rdi+0x160]
   1400207d6:	call   QWORD PTR [rip+0xee2c]        # 0x14002f608
   1400207dc:	lea    rcx,[rdi+0x4c0]
   1400207e3:	mov    edx,0x1
   1400207e8:	call   QWORD PTR [rip+0xee1a]        # 0x14002f608
   1400207ee:	mov    edx,0x1
   1400207f3:	lea    rcx,[rdi+0x598]
   1400207fa:	call   QWORD PTR [rip+0xee08]        # 0x14002f608
   140020800:	lea    rcx,[rdi+0x670]
   140020807:	mov    edx,0x1
   14002080c:	call   QWORD PTR [rip+0xedf6]        # 0x14002f608
   140020812:	lea    rcx,[rdi+0xc58]
   140020819:	mov    edx,0x1
   14002081e:	call   QWORD PTR [rip+0xede4]        # 0x14002f608
   140020824:	lea    rcx,[rdi+0xd30]
   14002082b:	mov    edx,0x1
   140020830:	call   QWORD PTR [rip+0xedd2]        # 0x14002f608
   140020836:	lea    rcx,[rdi+0x310]
   14002083d:	mov    edx,0x1
   140020842:	call   QWORD PTR [rip+0xedc0]        # 0x14002f608
   140020848:	lea    rcx,[rdi+0xee0]
   14002084f:	xor    edx,edx
   140020851:	call   QWORD PTR [rip+0xedb1]        # 0x14002f608
   140020857:	xor    edx,edx
   140020859:	mov    rcx,r13
   14002085c:	call   QWORD PTR [rip+0xeda6]        # 0x14002f608
   140020862:	lea    rcx,[rdi+0xe08]
   140020869:	xor    edx,edx
   14002086b:	call   QWORD PTR [rip+0xed97]        # 0x14002f608
   140020871:	lea    rcx,[rdi+0x598]
   140020878:	call   QWORD PTR [rip+0xed82]        # 0x14002f600
   14002087e:	mov    DWORD PTR [rdi+0x1c28],0x1
   140020888:	lea    rcx,[rsp+0x40]
   14002088d:	call   QWORD PTR [rip+0xf0fd]        # 0x14002f990
   140020893:	jmp    0x140020913
   140020895:	mov    rdi,QWORD PTR [rdi+0x40]
   140020899:	mov    edx,0xfffffffa
   14002089e:	mov    rcx,rdi
   1400208a1:	call   QWORD PTR [rip+0xec39]        # 0x14002f4e0
   1400208a7:	mov    rbx,rax
   1400208aa:	mov    r9d,0x12c
   1400208b0:	lea    r8,[rbp+0x1c0]
   1400208b7:	mov    edx,0x80
   1400208bc:	mov    rcx,rax
   1400208bf:	call   QWORD PTR [rip+0xec13]        # 0x14002f4d8
   1400208c5:	mov    r9d,0x12c
   1400208cb:	lea    r8,[rsp+0x60]
   1400208d0:	mov    edx,0xe720
   1400208d5:	mov    rcx,rbx
   1400208d8:	call   QWORD PTR [rip+0xebfa]        # 0x14002f4d8
   1400208de:	mov    r9d,0x10
   1400208e4:	lea    r8,[rbp+0x1c0]
   1400208eb:	lea    rdx,[rsp+0x60]
   1400208f0:	mov    rcx,rdi
   1400208f3:	call   QWORD PTR [rip+0xebef]        # 0x14002f4e8
   1400208f9:	cmp    DWORD PTR [rip+0x212f4],0x0        # 0x140041bf4
   140020900:	je     0x140020913
   140020902:	cmp    DWORD PTR [rip+0x212e7],0x0        # 0x140041bf0
   140020909:	jne    0x140020913
   14002090b:	xor    ecx,ecx
   14002090d:	call   QWORD PTR [rip+0xebbd]        # 0x14002f4d0
   140020913:	test   r15,r15
   140020916:	je     0x140020931
   140020918:	mov    rcx,QWORD PTR [r15+0x8]
   14002091c:	test   rcx,rcx
   14002091f:	je     0x140020927
   140020921:	call   QWORD PTR [rip+0xf251]        # 0x14002fb78
   140020927:	mov    rcx,r15
   14002092a:	call   QWORD PTR [rip+0xf248]        # 0x14002fb78
   140020930:	nop
   140020931:	lea    rcx,[rsp+0x50]
   140020936:	call   QWORD PTR [rip+0xf03c]        # 0x14002f978
   14002093c:	nop
   14002093d:	lea    rcx,[rsp+0x48]
   140020942:	call   QWORD PTR [rip+0xf048]        # 0x14002f990
   140020948:	mov    rcx,QWORD PTR [rbp+0x8e0]
   14002094f:	xor    rcx,rsp
   140020952:	call   0x14002c960
   140020957:	lea    r11,[rsp+0x9f0]
   14002095f:	mov    rbx,QWORD PTR [r11+0x38]
   140020963:	mov    rsi,QWORD PTR [r11+0x40]
   140020967:	mov    rdi,QWORD PTR [r11+0x48]
   14002096b:	mov    rsp,r11
   14002096e:	pop    r15
   140020970:	pop    r14
   140020972:	pop    r13
   140020974:	pop    r12
   140020976:	pop    rbp
   140020977:	ret    
   140020978:	int3   
   140020979:	int3   
   14002097a:	int3   
   14002097b:	int3   
   14002097c:	int3   
   14002097d:	int3   
   14002097e:	int3   
   14002097f:	int3   
   140020980:	mov    rax,rsp
   140020983:	push   rbp
   140020984:	push   r12
   140020986:	push   r13
   140020988:	push   r14
   14002098a:	push   r15
   14002098c:	lea    rbp,[rax-0x578]
   140020993:	sub    rsp,0x650
   14002099a:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400209a3:	mov    QWORD PTR [rax+0x10],rbx
   1400209a7:	mov    QWORD PTR [rax+0x18],rsi
   1400209ab:	mov    QWORD PTR [rax+0x20],rdi
   1400209af:	mov    rax,QWORD PTR [rip+0x1b64a]        # 0x14003c000
   1400209b6:	xor    rax,rsp
   1400209b9:	mov    QWORD PTR [rbp+0x540],rax
   1400209c0:	mov    rsi,rcx
   1400209c3:	lea    rax,[rip+0x1056]        # 0x140021a20
   1400209ca:	mov    QWORD PTR [rip+0x210d7],rax        # 0x140041aa8
   1400209d1:	add    rcx,0x820
   1400209d8:	mov    edx,0x1
   1400209dd:	call   QWORD PTR [rip+0xec25]        # 0x14002f608
   1400209e3:	lea    rcx,[rsi+0x9d0]
   1400209ea:	mov    edx,0x1
   1400209ef:	call   QWORD PTR [rip+0xec13]        # 0x14002f608
   1400209f5:	lea    rcx,[rsi+0x238]
   1400209fc:	mov    edx,0x1
   140020a01:	call   QWORD PTR [rip+0xec01]        # 0x14002f608
   140020a07:	lea    rcx,[rsi+0x3e8]
   140020a0e:	mov    edx,0x1
   140020a13:	call   QWORD PTR [rip+0xebef]        # 0x14002f608
   140020a19:	lea    rcx,[rsi+0x160]
   140020a20:	xor    edx,edx
   140020a22:	call   QWORD PTR [rip+0xebe0]        # 0x14002f608
   140020a28:	lea    rcx,[rsi+0x4c0]
   140020a2f:	xor    edx,edx
   140020a31:	call   QWORD PTR [rip+0xebd1]        # 0x14002f608
   140020a37:	lea    rcx,[rsi+0x598]
   140020a3e:	xor    edx,edx
   140020a40:	call   QWORD PTR [rip+0xebc2]        # 0x14002f608
   140020a46:	lea    rcx,[rsi+0x670]
   140020a4d:	xor    edx,edx
   140020a4f:	call   QWORD PTR [rip+0xebb3]        # 0x14002f608
   140020a55:	lea    rcx,[rsi+0x310]
   140020a5c:	xor    edx,edx
   140020a5e:	call   QWORD PTR [rip+0xeba4]        # 0x14002f608
   140020a64:	lea    rcx,[rsi+0xc58]
   140020a6b:	xor    edx,edx
   140020a6d:	call   QWORD PTR [rip+0xeb95]        # 0x14002f608
   140020a73:	lea    rcx,[rsi+0xd30]
   140020a7a:	xor    edx,edx
   140020a7c:	call   QWORD PTR [rip+0xeb86]        # 0x14002f608
   140020a82:	lea    rcx,[rsi+0xee0]
   140020a89:	xor    edx,edx
   140020a8b:	call   QWORD PTR [rip+0xeb77]        # 0x14002f608
   140020a91:	lea    rcx,[rsi+0xb80]
   140020a98:	mov    r8d,0x12a
   140020a9e:	lea    rdx,[rbp+0x2e0]
   140020aa5:	call   QWORD PTR [rip+0xeb85]        # 0x14002f630
   140020aab:	lea    rdx,[rbp+0x2e0]
   140020ab2:	lea    rcx,[rsp+0x40]
   140020ab7:	call   QWORD PTR [rip+0xebdb]        # 0x14002f698
   140020abd:	nop
   140020abe:	mov    rcx,QWORD PTR [rax]
   140020ac1:	call   0x14002ae90
   140020ac6:	mov    r14,rax
   140020ac9:	mov    QWORD PTR [rsp+0x30],rax
   140020ace:	lea    rcx,[rsp+0x40]
   140020ad3:	call   QWORD PTR [rip+0xee9f]        # 0x14002f978
   140020ad9:	xor    r9d,r9d
   140020adc:	xor    r8d,r8d
   140020adf:	mov    edx,0x18b
   140020ae4:	mov    rcx,QWORD PTR [rsi+0xd70]
   140020aeb:	call   QWORD PTR [rip+0xea0f]        # 0x14002f500
   140020af1:	mov    rbx,rax
   140020af4:	mov    r15d,0x12c
   140020afa:	imul   bx,r15w
   140020aff:	test   bx,bx
   140020b02:	jne    0x140020bae
   140020b08:	mov    rdi,QWORD PTR [rsi+0x40]
   140020b0c:	mov    edx,0xfffffffa
   140020b11:	mov    rcx,rdi
   140020b14:	call   QWORD PTR [rip+0xe9c6]        # 0x14002f4e0
   140020b1a:	mov    rbx,rax
   140020b1d:	mov    r9d,r15d
   140020b20:	lea    r8,[rsp+0x50]
   140020b25:	mov    edx,0x80
   140020b2a:	mov    rcx,rax
   140020b2d:	call   QWORD PTR [rip+0xe9a5]        # 0x14002f4d8
   140020b33:	mov    r9d,r15d
   140020b36:	lea    r8,[rbp+0x80]
   140020b3d:	mov    edx,0xe721
   140020b42:	mov    rcx,rbx
   140020b45:	call   QWORD PTR [rip+0xe98d]        # 0x14002f4d8
   140020b4b:	mov    r9d,0x10
   140020b51:	lea    r8,[rsp+0x50]
   140020b56:	lea    rdx,[rbp+0x80]
   140020b5d:	mov    rcx,rdi
   140020b60:	call   QWORD PTR [rip+0xe982]        # 0x14002f4e8
   140020b66:	cmp    DWORD PTR [rip+0x21087],0x0        # 0x140041bf4
   140020b6d:	je     0x140020b80
   140020b6f:	cmp    DWORD PTR [rip+0x2107a],0x0        # 0x140041bf0
   140020b76:	jne    0x140020b80
   140020b78:	xor    ecx,ecx
   140020b7a:	call   QWORD PTR [rip+0xe950]        # 0x14002f4d0
   140020b80:	mov    rcx,rsi
   140020b83:	call   0x140020f60
   140020b88:	test   r14,r14
   140020b8b:	je     0x140020f23
   140020b91:	mov    rcx,QWORD PTR [r14+0x8]
   140020b95:	test   rcx,rcx
   140020b98:	je     0x140020ba0
   140020b9a:	call   QWORD PTR [rip+0xefd8]        # 0x14002fb78
   140020ba0:	mov    rcx,r14
   140020ba3:	call   QWORD PTR [rip+0xefcf]        # 0x14002fb78
   140020ba9:	jmp    0x140020f23
   140020bae:	mov    edx,0x3
   140020bb3:	mov    rcx,r14
   140020bb6:	call   0x14002ab70
   140020bbb:	mov    r13,rax
   140020bbe:	mov    QWORD PTR [rsp+0x28],rax
   140020bc3:	test   rax,rax
   140020bc6:	jne    0x140020c6e
   140020bcc:	mov    rdi,QWORD PTR [rsi+0x40]
   140020bd0:	lea    edx,[rax-0x6]
   140020bd3:	mov    rcx,rdi
   140020bd6:	call   QWORD PTR [rip+0xe904]        # 0x14002f4e0
   140020bdc:	mov    rbx,rax
   140020bdf:	mov    r9d,r15d
   140020be2:	lea    r8,[rbp+0x80]
   140020be9:	mov    edx,0x80
   140020bee:	mov    rcx,rax
   140020bf1:	call   QWORD PTR [rip+0xe8e1]        # 0x14002f4d8
   140020bf7:	mov    r9d,r15d
   140020bfa:	lea    r8,[rsp+0x50]
   140020bff:	mov    edx,0xe720
   140020c04:	mov    rcx,rbx
   140020c07:	call   QWORD PTR [rip+0xe8cb]        # 0x14002f4d8
   140020c0d:	lea    r9d,[r13+0x10]
   140020c11:	lea    r8,[rbp+0x80]
   140020c18:	lea    rdx,[rsp+0x50]
   140020c1d:	mov    rcx,rdi
   140020c20:	call   QWORD PTR [rip+0xe8c2]        # 0x14002f4e8
   140020c26:	cmp    DWORD PTR [rip+0x20fc7],r13d        # 0x140041bf4
   140020c2d:	je     0x140020c40
   140020c2f:	cmp    DWORD PTR [rip+0x20fba],r13d        # 0x140041bf0
   140020c36:	jne    0x140020c40
   140020c38:	xor    ecx,ecx
   140020c3a:	call   QWORD PTR [rip+0xe890]        # 0x14002f4d0
   140020c40:	mov    rcx,rsi
   140020c43:	call   0x140020f60
   140020c48:	test   r14,r14
   140020c4b:	je     0x140020f23
   140020c51:	mov    rcx,QWORD PTR [r14+0x8]
   140020c55:	test   rcx,rcx
   140020c58:	je     0x140020c60
   140020c5a:	call   QWORD PTR [rip+0xef18]        # 0x14002fb78
   140020c60:	mov    rcx,r14
   140020c63:	call   QWORD PTR [rip+0xef0f]        # 0x14002fb78
   140020c69:	jmp    0x140020f23
   140020c6e:	movzx  ecx,bx
   140020c71:	call   QWORD PTR [rip+0xe7a1]        # 0x14002f418
   140020c77:	mov    r12,rax
   140020c7a:	test   rax,rax
   140020c7d:	jne    0x140020d26
   140020c83:	mov    rdi,QWORD PTR [rsi+0x40]
   140020c87:	lea    edx,[rax-0x6]
   140020c8a:	mov    rcx,rdi
   140020c8d:	call   QWORD PTR [rip+0xe84d]        # 0x14002f4e0
   140020c93:	mov    rbx,rax
   140020c96:	mov    r9d,r15d
   140020c99:	lea    r8,[rbp+0x80]
   140020ca0:	mov    edx,0x80
   140020ca5:	mov    rcx,rax
   140020ca8:	call   QWORD PTR [rip+0xe82a]        # 0x14002f4d8
   140020cae:	mov    r9d,r15d
   140020cb1:	lea    r8,[rsp+0x50]
   140020cb6:	mov    edx,0xe71c
   140020cbb:	mov    rcx,rbx
   140020cbe:	call   QWORD PTR [rip+0xe814]        # 0x14002f4d8
   140020cc4:	lea    r9d,[r12+0x10]
   140020cc9:	lea    r8,[rbp+0x80]
   140020cd0:	lea    rdx,[rsp+0x50]
   140020cd5:	mov    rcx,rdi
   140020cd8:	call   QWORD PTR [rip+0xe80a]        # 0x14002f4e8
   140020cde:	cmp    DWORD PTR [rip+0x20f0f],r12d        # 0x140041bf4
   140020ce5:	je     0x140020cf8
   140020ce7:	cmp    DWORD PTR [rip+0x20f02],r12d        # 0x140041bf0
   140020cee:	jne    0x140020cf8
   140020cf0:	xor    ecx,ecx
   140020cf2:	call   QWORD PTR [rip+0xe7d8]        # 0x14002f4d0
   140020cf8:	mov    rcx,rsi
   140020cfb:	call   0x140020f60
   140020d00:	test   r14,r14
   140020d03:	je     0x140020f23
   140020d09:	mov    rcx,QWORD PTR [r14+0x8]
   140020d0d:	test   rcx,rcx
   140020d10:	je     0x140020d18
   140020d12:	call   QWORD PTR [rip+0xee60]        # 0x14002fb78
   140020d18:	mov    rcx,r14
   140020d1b:	call   QWORD PTR [rip+0xee57]        # 0x14002fb78
   140020d21:	jmp    0x140020f23
   140020d26:	mov    rdi,rax
   140020d29:	xor    ebx,ebx
   140020d2b:	movzx  r15d,bx
   140020d2f:	xor    r9d,r9d
   140020d32:	xor    r8d,r8d
   140020d35:	mov    edx,0x18b
   140020d3a:	mov    rcx,QWORD PTR [rsi+0xd70]
   140020d41:	call   QWORD PTR [rip+0xe7b9]        # 0x14002f500
   140020d47:	test   eax,eax
   140020d49:	jle    0x140020e9b
   140020d4f:	xor    r13d,r13d
   140020d52:	lea    r14,[rsi+0xd30]
   140020d59:	nop    DWORD PTR [rax+0x0]
   140020d60:	lea    rcx,[rsp+0x20]
   140020d65:	call   QWORD PTR [rip+0xe925]        # 0x14002f690
   140020d6b:	nop
   140020d6c:	lea    r8,[rsp+0x20]
   140020d71:	mov    edx,ebx
   140020d73:	mov    rcx,r14
   140020d76:	call   QWORD PTR [rip+0xea9c]        # 0x14002f818
   140020d7c:	lea    rdx,[rbp+0x2e0]
   140020d83:	lea    rcx,[rsp+0x38]
   140020d88:	call   QWORD PTR [rip+0xe90a]        # 0x14002f698
   140020d8e:	mov    r8,QWORD PTR [rax]
   140020d91:	lea    rdx,[rbp+0x80]
   140020d98:	movzx  eax,BYTE PTR [r8]
   140020d9c:	test   al,al
   140020d9e:	je     0x140020dec
   140020da0:	mov    r9,QWORD PTR [rip+0x1c551]        # 0x14003d2f8
   140020da7:	lea    r14,[rip+0x10452]        # 0x140031200
   140020dae:	xchg   ax,ax
   140020db0:	cmp    al,0x20
   140020db2:	jae    0x140020dbe
   140020db4:	movzx  eax,al
   140020db7:	movzx  ecx,WORD PTR [r14+rax*2]
   140020dbc:	jmp    0x140020dd3
   140020dbe:	cmp    al,0x80
   140020dc0:	jae    0x140020dc7
   140020dc2:	movzx  ecx,al
   140020dc5:	jmp    0x140020dd3
   140020dc7:	movzx  eax,al
   140020dca:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140020dd3:	mov    WORD PTR [rdx],cx
   140020dd6:	add    rdx,0x2
   140020dda:	inc    r8
   140020ddd:	movzx  eax,BYTE PTR [r8]
   140020de1:	test   al,al
   140020de3:	jne    0x140020db0
   140020de5:	lea    r14,[rsi+0xd30]
   140020dec:	mov    WORD PTR [rdx],r13w
   140020df0:	lea    rcx,[rsp+0x38]
   140020df5:	call   QWORD PTR [rip+0xeb7d]        # 0x14002f978
   140020dfb:	lea    rax,[rbp+0x80]
   140020e02:	mov    rdx,rdi
   140020e05:	movzx  ecx,BYTE PTR [rax]
   140020e08:	test   cl,cl
   140020e0a:	jne    0x140020e11
   140020e0c:	cmp    BYTE PTR [rax+0x1],cl
   140020e0f:	je     0x140020e24
   140020e11:	mov    BYTE PTR [rdx],cl
   140020e13:	movzx  ecx,BYTE PTR [rax+0x1]
   140020e17:	mov    BYTE PTR [rdx+0x1],cl
   140020e1a:	add    rdx,0x2
   140020e1e:	add    rax,0x2
   140020e22:	jmp    0x140020e05
   140020e24:	movzx  ecx,BYTE PTR [rax]
   140020e27:	mov    BYTE PTR [rdx],cl
   140020e29:	movzx  ecx,BYTE PTR [rax+0x1]
   140020e2d:	mov    BYTE PTR [rdx+0x1],cl
   140020e30:	lea    rax,[rbp+0x80]
   140020e37:	mov    ecx,r13d
   140020e3a:	nop    WORD PTR [rax+rax*1+0x0]
   140020e40:	cmp    BYTE PTR [rax],0x0
   140020e43:	jne    0x140020e4b
   140020e45:	cmp    BYTE PTR [rax+0x1],0x0
   140020e49:	je     0x140020e53
   140020e4b:	add    rax,0x2
   140020e4f:	inc    ecx
   140020e51:	jmp    0x140020e40
   140020e53:	add    ecx,ecx
   140020e55:	add    rcx,0x2
   140020e59:	add    rdi,rcx
   140020e5c:	lea    rcx,[rsp+0x20]
   140020e61:	call   QWORD PTR [rip+0xeb29]        # 0x14002f990
   140020e67:	inc    r15w
   140020e6b:	movzx  ebx,r15w
   140020e6f:	xor    r9d,r9d
   140020e72:	xor    r8d,r8d
   140020e75:	mov    edx,0x18b
   140020e7a:	mov    rcx,QWORD PTR [rsi+0xd70]
   140020e81:	call   QWORD PTR [rip+0xe679]        # 0x14002f500
   140020e87:	cmp    ebx,eax
   140020e89:	jl     0x140020d60
   140020e8f:	mov    r14,QWORD PTR [rsp+0x30]
   140020e94:	mov    r13,QWORD PTR [rsp+0x28]
   140020e99:	xor    ebx,ebx
   140020e9b:	mov    WORD PTR [rdi],bx
   140020e9e:	mov    DWORD PTR [rsi+0x158],ebx
   140020ea4:	mov    DWORD PTR [rsi+0x1c24],0x1
   140020eae:	inc    DWORD PTR [rip+0x20d3c]        # 0x140041bf0
   140020eb4:	mov    rdx,r13
   140020eb7:	mov    rcx,r12
   140020eba:	call   0x140010b40
   140020ebf:	movzx  ebx,ax
   140020ec2:	dec    DWORD PTR [rip+0x20d28]        # 0x140041bf0
   140020ec8:	mov    edx,ebx
   140020eca:	mov    rcx,QWORD PTR [rsi+0x40]
   140020ece:	call   0x140021b80
   140020ed3:	mov    rcx,r12
   140020ed6:	call   QWORD PTR [rip+0xe5a4]        # 0x14002f480
   140020edc:	mov    rcx,r13
   140020edf:	call   0x14002a9e0
   140020ee4:	test   r14,r14
   140020ee7:	je     0x140020f01
   140020ee9:	mov    rcx,QWORD PTR [r14+0x8]
   140020eed:	test   rcx,rcx
   140020ef0:	je     0x140020ef8
   140020ef2:	call   QWORD PTR [rip+0xec80]        # 0x14002fb78
   140020ef8:	mov    rcx,r14
   140020efb:	call   QWORD PTR [rip+0xec77]        # 0x14002fb78
   140020f01:	mov    rcx,rsi
   140020f04:	test   bx,bx
   140020f07:	je     0x140020f10
   140020f09:	call   0x140020f60
   140020f0e:	jmp    0x140020f23
   140020f10:	mov    DWORD PTR [rsi+0x1c24],0x0
   140020f1a:	mov    rax,QWORD PTR [rsi]
   140020f1d:	call   QWORD PTR [rax+0x310]
   140020f23:	mov    rcx,QWORD PTR [rbp+0x540]
   140020f2a:	xor    rcx,rsp
   140020f2d:	call   0x14002c960
   140020f32:	lea    r11,[rsp+0x650]
   140020f3a:	mov    rbx,QWORD PTR [r11+0x38]
   140020f3e:	mov    rsi,QWORD PTR [r11+0x40]
   140020f42:	mov    rdi,QWORD PTR [r11+0x48]
   140020f46:	mov    rsp,r11
   140020f49:	pop    r15
   140020f4b:	pop    r14
   140020f4d:	pop    r13
   140020f4f:	pop    r12
   140020f51:	pop    rbp
   140020f52:	ret    
   140020f53:	int3   
   140020f54:	int3   
   140020f55:	int3   
   140020f56:	int3   
   140020f57:	int3   
   140020f58:	int3   
   140020f59:	int3   
   140020f5a:	int3   
   140020f5b:	int3   
   140020f5c:	int3   
   140020f5d:	int3   
   140020f5e:	int3   
   140020f5f:	int3   
   140020f60:	rex push rsi
   140020f62:	push   rdi
   140020f63:	push   r14
   140020f65:	sub    rsp,0x30
   140020f69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020f72:	mov    QWORD PTR [rsp+0x58],rbx
   140020f77:	mov    QWORD PTR [rsp+0x60],rbp
   140020f7c:	mov    r14,rcx
   140020f7f:	mov    DWORD PTR [rcx+0x1c24],0x0
   140020f89:	add    rcx,0x3e8
   140020f90:	mov    edx,0x1
   140020f95:	call   QWORD PTR [rip+0xe66d]        # 0x14002f608
   140020f9b:	lea    rcx,[rsp+0x50]
   140020fa0:	call   QWORD PTR [rip+0xe6ea]        # 0x14002f690
   140020fa6:	nop
   140020fa7:	mov    edx,0xe725
   140020fac:	lea    rcx,[rsp+0x50]
   140020fb1:	call   QWORD PTR [rip+0xe6c9]        # 0x14002f680
   140020fb7:	mov    rdx,QWORD PTR [rsp+0x50]
   140020fbc:	lea    rcx,[r14+0x160]
   140020fc3:	call   QWORD PTR [rip+0xe66f]        # 0x14002f638
   140020fc9:	xor    edx,edx
   140020fcb:	lea    rcx,[r14+0x160]
   140020fd2:	call   QWORD PTR [rip+0xe630]        # 0x14002f608
   140020fd8:	lea    rcx,[r14+0x4c0]
   140020fdf:	mov    edx,0x1
   140020fe4:	call   QWORD PTR [rip+0xe61e]        # 0x14002f608
   140020fea:	mov    edx,0x1
   140020fef:	lea    rcx,[r14+0x670]
   140020ff6:	call   QWORD PTR [rip+0xe60c]        # 0x14002f608
   140020ffc:	lea    rcx,[r14+0xc58]
   140021003:	mov    edx,0x1
   140021008:	call   QWORD PTR [rip+0xe5fa]        # 0x14002f608
   14002100e:	lea    rcx,[r14+0xd30]
   140021015:	mov    edx,0x1
   14002101a:	call   QWORD PTR [rip+0xe5e8]        # 0x14002f608
   140021020:	xor    edx,edx
   140021022:	lea    rcx,[r14+0x310]
   140021029:	call   QWORD PTR [rip+0xe5d9]        # 0x14002f608
   14002102f:	xor    edx,edx
   140021031:	lea    rcx,[r14+0xee0]
   140021038:	call   QWORD PTR [rip+0xe5ca]        # 0x14002f608
   14002103e:	lea    rcx,[r14+0xb80]
   140021045:	xor    edx,edx
   140021047:	call   QWORD PTR [rip+0xe5bb]        # 0x14002f608
   14002104d:	lea    rcx,[r14+0xe08]
   140021054:	xor    edx,edx
   140021056:	call   QWORD PTR [rip+0xe5ac]        # 0x14002f608
   14002105c:	lea    rcx,[r14+0x820]
   140021063:	xor    edx,edx
   140021065:	call   QWORD PTR [rip+0xe59d]        # 0x14002f608
   14002106b:	lea    rcx,[r14+0x9d0]
   140021072:	xor    edx,edx
   140021074:	call   QWORD PTR [rip+0xe58e]        # 0x14002f608
   14002107a:	lea    rcx,[r14+0x238]
   140021081:	xor    edx,edx
   140021083:	call   QWORD PTR [rip+0xe57f]        # 0x14002f608
   140021089:	mov    DWORD PTR [r14+0x1c28],0x1
   140021094:	mov    edx,0x1
   140021099:	lea    rcx,[r14+0x160]
   1400210a0:	call   QWORD PTR [rip+0xe562]        # 0x14002f608
   1400210a6:	mov    edx,0x1
   1400210ab:	lea    rcx,[r14+0x310]
   1400210b2:	call   QWORD PTR [rip+0xe550]        # 0x14002f608
   1400210b8:	mov    edx,0x1
   1400210bd:	lea    rcx,[r14+0xee0]
   1400210c4:	call   QWORD PTR [rip+0xe53e]        # 0x14002f608
   1400210ca:	lea    rcx,[r14+0x670]
   1400210d1:	call   QWORD PTR [rip+0xe529]        # 0x14002f600
   1400210d7:	xor    r9d,r9d
   1400210da:	xor    r8d,r8d
   1400210dd:	mov    edx,0x402
   1400210e2:	mov    rcx,QWORD PTR [r14+0x938]
   1400210e9:	call   QWORD PTR [rip+0xe411]        # 0x14002f500
   1400210ef:	xor    r9d,r9d
   1400210f2:	xor    r8d,r8d
   1400210f5:	mov    edx,0x402
   1400210fa:	mov    rcx,QWORD PTR [r14+0x788]
   140021101:	call   QWORD PTR [rip+0xe3f9]        # 0x14002f500
   140021107:	nop
   140021108:	lea    rcx,[rsp+0x50]
   14002110d:	call   QWORD PTR [rip+0xe87d]        # 0x14002f990
   140021113:	mov    rbx,QWORD PTR [rsp+0x58]
   140021118:	mov    rbp,QWORD PTR [rsp+0x60]
   14002111d:	add    rsp,0x30
   140021121:	pop    r14
   140021123:	pop    rdi
   140021124:	pop    rsi
   140021125:	ret    
   140021126:	int3   
   140021127:	int3   
   140021128:	int3   
   140021129:	int3   
   14002112a:	int3   
   14002112b:	int3   
   14002112c:	int3   
   14002112d:	int3   
   14002112e:	int3   
   14002112f:	int3   
   140021130:	rex push rdi
   140021132:	sub    rsp,0x30
   140021136:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002113f:	mov    QWORD PTR [rsp+0x48],rbx
   140021144:	mov    QWORD PTR [rsp+0x50],rbp
   140021149:	mov    QWORD PTR [rsp+0x58],rsi
   14002114e:	mov    rsi,rcx
   140021151:	cmp    DWORD PTR [rcx+0x1c24],0x0
   140021158:	je     0x140021169
   14002115a:	mov    DWORD PTR [rcx+0x158],0x1
   140021164:	jmp    0x1400213d8
   140021169:	add    rcx,0x3e8
   140021170:	call   QWORD PTR [rip+0xe49a]        # 0x14002f610
   140021176:	xor    ebp,ebp
   140021178:	cmp    eax,0x1
   14002117b:	jne    0x1400213c5
   140021181:	xor    edx,edx
   140021183:	lea    rcx,[rsi+0x598]
   14002118a:	call   QWORD PTR [rip+0xe4a8]        # 0x14002f638
   140021190:	xor    r9d,r9d
   140021193:	xor    r8d,r8d
   140021196:	mov    edx,0x184
   14002119b:	mov    rcx,QWORD PTR [rsi+0x6b0]
   1400211a2:	call   QWORD PTR [rip+0xe358]        # 0x14002f500
   1400211a8:	xor    r9d,r9d
   1400211ab:	xor    r8d,r8d
   1400211ae:	mov    edx,0x184
   1400211b3:	mov    rcx,QWORD PTR [rsi+0xd70]
   1400211ba:	call   QWORD PTR [rip+0xe340]        # 0x14002f500
   1400211c0:	lea    rcx,[rsp+0x40]
   1400211c5:	call   QWORD PTR [rip+0xe4c5]        # 0x14002f690
   1400211cb:	nop
   1400211cc:	lea    rcx,[rsi+0x820]
   1400211d3:	xor    edx,edx
   1400211d5:	call   QWORD PTR [rip+0xe42d]        # 0x14002f608
   1400211db:	lea    rcx,[rsi+0x9d0]
   1400211e2:	xor    edx,edx
   1400211e4:	call   QWORD PTR [rip+0xe41e]        # 0x14002f608
   1400211ea:	lea    rcx,[rsi+0x238]
   1400211f1:	xor    edx,edx
   1400211f3:	call   QWORD PTR [rip+0xe40f]        # 0x14002f608
   1400211f9:	mov    edx,0xe717
   1400211fe:	lea    rcx,[rsp+0x40]
   140021203:	call   QWORD PTR [rip+0xe477]        # 0x14002f680
   140021209:	mov    rdx,QWORD PTR [rsp+0x40]
   14002120e:	lea    rcx,[rsi+0x3e8]
   140021215:	call   QWORD PTR [rip+0xe41d]        # 0x14002f638
   14002121b:	xor    edx,edx
   14002121d:	lea    rcx,[rsi+0x3e8]
   140021224:	call   QWORD PTR [rip+0xe3de]        # 0x14002f608
   14002122a:	mov    edx,0xe723
   14002122f:	lea    rcx,[rsp+0x40]
   140021234:	call   QWORD PTR [rip+0xe446]        # 0x14002f680
   14002123a:	mov    rdx,QWORD PTR [rsp+0x40]
   14002123f:	lea    rcx,[rsi+0x160]
   140021246:	call   QWORD PTR [rip+0xe3ec]        # 0x14002f638
   14002124c:	lea    edx,[rbp+0x1]
   14002124f:	lea    rcx,[rsi+0x160]
   140021256:	call   QWORD PTR [rip+0xe3ac]        # 0x14002f608
   14002125c:	lea    rcx,[rsi+0x4c0]
   140021263:	xor    edx,edx
   140021265:	call   QWORD PTR [rip+0xe39d]        # 0x14002f608
   14002126b:	xor    edx,edx
   14002126d:	lea    rcx,[rsi+0x598]
   140021274:	call   QWORD PTR [rip+0xe38e]        # 0x14002f608
   14002127a:	lea    rcx,[rsi+0x670]
   140021281:	xor    edx,edx
   140021283:	call   QWORD PTR [rip+0xe37f]        # 0x14002f608
   140021289:	lea    rcx,[rsi+0x310]
   140021290:	xor    edx,edx
   140021292:	call   QWORD PTR [rip+0xe370]        # 0x14002f608
   140021298:	lea    rcx,[rsi+0xc58]
   14002129f:	xor    edx,edx
   1400212a1:	call   QWORD PTR [rip+0xe361]        # 0x14002f608
   1400212a7:	lea    rcx,[rsi+0xd30]
   1400212ae:	xor    edx,edx
   1400212b0:	call   QWORD PTR [rip+0xe352]        # 0x14002f608
   1400212b6:	lea    rcx,[rsi+0xee0]
   1400212bd:	lea    edx,[rbp+0x1]
   1400212c0:	call   QWORD PTR [rip+0xe342]        # 0x14002f608
   1400212c6:	lea    rcx,[rsi+0xb80]
   1400212cd:	lea    edx,[rbp+0x1]
   1400212d0:	call   QWORD PTR [rip+0xe332]        # 0x14002f608
   1400212d6:	lea    rcx,[rsi+0xe08]
   1400212dd:	lea    edx,[rbp+0x1]
   1400212e0:	call   QWORD PTR [rip+0xe322]        # 0x14002f608
   1400212e6:	xor    r9d,r9d
   1400212e9:	xor    r8d,r8d
   1400212ec:	mov    edx,0x402
   1400212f1:	mov    rcx,QWORD PTR [rsi+0x938]
   1400212f8:	call   QWORD PTR [rip+0xe202]        # 0x14002f500
   1400212fe:	xor    r9d,r9d
   140021301:	xor    r8d,r8d
   140021304:	mov    edx,0x402
   140021309:	mov    rcx,QWORD PTR [rsi+0x788]
   140021310:	call   QWORD PTR [rip+0xe1ea]        # 0x14002f500
   140021316:	mov    rax,QWORD PTR [rsi+0xfc8]
   14002131d:	mov    ecx,0x3
   140021322:	mov    WORD PTR [rax],cx
   140021325:	mov    rcx,QWORD PTR [rsi+0xfc8]
   14002132c:	mov    rax,QWORD PTR [rsi+0x1100]
   140021333:	mov    QWORD PTR [rcx+0x8],rax
   140021337:	mov    rcx,QWORD PTR [rsi+0xfc8]
   14002133e:	call   QWORD PTR [rsi+0xfc0]
   140021344:	mov    rcx,QWORD PTR [rsi+0x1100]
   14002134b:	call   QWORD PTR [rip+0xe12f]        # 0x14002f480
   140021351:	mov    rax,QWORD PTR [rsi+0xfc8]
   140021358:	movzx  ecx,WORD PTR [rax]
   14002135b:	mov    WORD PTR [rsi+0x1108],cx
   140021362:	mov    rcx,rax
   140021365:	call   QWORD PTR [rip+0xe115]        # 0x14002f480
   14002136b:	mov    rcx,QWORD PTR [rsi+0xfb8]
   140021372:	call   QWORD PTR [rip+0xdef8]        # 0x14002f270
   140021378:	mov    WORD PTR [rsi+0x1108],bp
   14002137f:	cmp    DWORD PTR [rsi+0x1c20],ebp
   140021385:	je     0x1400213ba
   140021387:	lea    rcx,[rsi+0x14c8]
   14002138e:	call   0x140017cb0
   140021393:	mov    rcx,QWORD PTR [rsi+0x14d8]
   14002139a:	call   QWORD PTR [rip+0xe0e0]        # 0x14002f480
   1400213a0:	mov    rcx,QWORD PTR [rsi+0x14c8]
   1400213a7:	call   QWORD PTR [rip+0xdec3]        # 0x14002f270
   1400213ad:	mov    WORD PTR [rsi+0x1618],bp
   1400213b4:	mov    DWORD PTR [rsi+0x1c20],ebp
   1400213ba:	lea    rcx,[rsp+0x40]
   1400213bf:	call   QWORD PTR [rip+0xe5cb]        # 0x14002f990
   1400213c5:	mov    DWORD PTR [rsi+0x1c28],ebp
   1400213cb:	lea    rcx,[rsi+0xb80]
   1400213d2:	call   QWORD PTR [rip+0xe228]        # 0x14002f600
   1400213d8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400213dd:	mov    rbp,QWORD PTR [rsp+0x50]
   1400213e2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400213e7:	add    rsp,0x30
   1400213eb:	pop    rdi
   1400213ec:	ret    
   1400213ed:	int3   
   1400213ee:	int3   
   1400213ef:	int3   
   1400213f0:	rex push rbx
   1400213f2:	sub    rsp,0x20
   1400213f6:	mov    rbx,rcx
   1400213f9:	mov    rcx,QWORD PTR [rcx+0x6b0]
   140021400:	xor    r9d,r9d
   140021403:	xor    r8d,r8d
   140021406:	mov    edx,0x188
   14002140b:	call   QWORD PTR [rip+0xe0ef]        # 0x14002f500
   140021411:	lea    rcx,[rbx+0x160]
   140021418:	cmp    eax,0xffffffff
   14002141b:	jne    0x14002142b
   14002141d:	xor    edx,edx
   14002141f:	add    rsp,0x20
   140021423:	pop    rbx
   140021424:	rex.W jmp QWORD PTR [rip+0xe1dd]        # 0x14002f608
   14002142b:	mov    edx,0x1
   140021430:	add    rsp,0x20
   140021434:	pop    rbx
   140021435:	rex.W jmp QWORD PTR [rip+0xe1cc]        # 0x14002f608
   14002143c:	int3   
   14002143d:	int3   
   14002143e:	int3   
   14002143f:	int3   
   140021440:	mov    rax,rsp
   140021443:	push   rbp
   140021444:	push   r12
   140021446:	push   r13
   140021448:	push   r14
   14002144a:	push   r15
   14002144c:	lea    rbp,[rax-0x568]
   140021453:	sub    rsp,0x640
   14002145a:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140021463:	mov    QWORD PTR [rax+0x10],rbx
   140021467:	mov    QWORD PTR [rax+0x18],rsi
   14002146b:	mov    QWORD PTR [rax+0x20],rdi
   14002146f:	mov    rax,QWORD PTR [rip+0x1ab8a]        # 0x14003c000
   140021476:	xor    rax,rsp
   140021479:	mov    QWORD PTR [rbp+0x530],rax
   140021480:	mov    rdi,rcx
   140021483:	xor    eax,eax
   140021485:	movzx  esi,ax
   140021488:	lea    r15,[rcx+0x598]
   14002148f:	mov    QWORD PTR [rsp+0x30],r15
   140021494:	mov    r8d,0x12a
   14002149a:	lea    rdx,[rbp+0x2d0]
   1400214a1:	mov    rcx,r15
   1400214a4:	call   QWORD PTR [rip+0xe186]        # 0x14002f630
   1400214aa:	xor    r9d,r9d
   1400214ad:	xor    r8d,r8d
   1400214b0:	mov    edx,0x184
   1400214b5:	mov    rcx,QWORD PTR [rdi+0x6b0]
   1400214bc:	call   QWORD PTR [rip+0xe03e]        # 0x14002f500
   1400214c2:	lea    rcx,[rdi+0x160]
   1400214c9:	cmp    WORD PTR [rbp+0x2d0],si
   1400214d0:	jne    0x1400214df
   1400214d2:	xor    edx,edx
   1400214d4:	call   QWORD PTR [rip+0xe12e]        # 0x14002f608
   1400214da:	jmp    0x1400217ec
   1400214df:	mov    edx,0x1
   1400214e4:	call   QWORD PTR [rip+0xe11e]        # 0x14002f608
   1400214ea:	lea    rdx,[rip+0x1107f]        # 0x140032570
   1400214f1:	lea    rcx,[rbp+0x2d0]
   1400214f8:	call   QWORD PTR [rip+0xdd52]        # 0x14002f250
   1400214fe:	lea    rdx,[rbp+0x2d0]
   140021505:	lea    rcx,[rsp+0x20]
   14002150a:	call   QWORD PTR [rip+0xe188]        # 0x14002f698
   140021510:	nop
   140021511:	lea    r14,[rdi+0xfb8]
   140021518:	mov    r8d,0x882
   14002151e:	lea    r9,[rsp+0x40]
   140021523:	mov    rdx,QWORD PTR [rax]
   140021526:	mov    rcx,r14
   140021529:	call   0x14001bf60
   14002152e:	test   ax,ax
   140021531:	sete   bl
   140021534:	lea    rcx,[rsp+0x20]
   140021539:	call   QWORD PTR [rip+0xe439]        # 0x14002f978
   14002153f:	test   bl,bl
   140021541:	je     0x1400217e3
   140021547:	cmp    DWORD PTR [rdi+0x1c20],0x0
   14002154e:	je     0x140021580
   140021550:	lea    rdx,[rsp+0x40]
   140021555:	lea    rcx,[rdi+0x14c8]
   14002155c:	call   0x140017340
   140021561:	test   ax,ax
   140021564:	jne    0x140021580
   140021566:	lea    rcx,[rdi+0x14c8]
   14002156d:	call   0x1400173e0
   140021572:	mov    rdx,rax
   140021575:	lea    rcx,[rsp+0x40]
   14002157a:	call   QWORD PTR [rip+0xdcd8]        # 0x14002f258
   140021580:	cmp    BYTE PTR [rsp+0x40],0x0
   140021585:	je     0x1400215ba
   140021587:	lea    rdx,[rsp+0x40]
   14002158c:	lea    rcx,[rsp+0x20]
   140021591:	call   QWORD PTR [rip+0xe0f1]        # 0x14002f688
   140021597:	mov    r9,QWORD PTR [rax]
   14002159a:	xor    r8d,r8d
   14002159d:	mov    edx,0x180
   1400215a2:	mov    rcx,QWORD PTR [rdi+0x6b0]
   1400215a9:	call   QWORD PTR [rip+0xdf51]        # 0x14002f500
   1400215af:	lea    rcx,[rsp+0x20]
   1400215b4:	call   QWORD PTR [rip+0xe3d6]        # 0x14002f990
   1400215ba:	mov    ebx,0x700
   1400215bf:	mov    r12d,0x80
   1400215c5:	lea    r13,[rip+0xfc34]        # 0x140031200
   1400215cc:	xor    r15d,r15d
   1400215cf:	mov    edx,0x12c
   1400215d4:	mov    ecx,0x6
   1400215d9:	nop    DWORD PTR [rax+0x0]
   1400215e0:	mov    rax,QWORD PTR [r14+0x10]
   1400215e4:	mov    WORD PTR [rax],cx
   1400215e7:	mov    rcx,QWORD PTR [r14+0x10]
   1400215eb:	mov    rax,QWORD PTR [r14+0x148]
   1400215f2:	mov    QWORD PTR [rcx+0x8],rax
   1400215f6:	mov    rax,QWORD PTR [r14+0x10]
   1400215fa:	lea    rcx,[rbp+0x70]
   1400215fe:	mov    QWORD PTR [rax+0x18],rcx
   140021602:	mov    rax,QWORD PTR [r14+0x10]
   140021606:	mov    WORD PTR [rax+0x20],dx
   14002160a:	mov    rcx,QWORD PTR [r14+0x10]
   14002160e:	call   QWORD PTR [r14+0x8]
   140021612:	mov    rax,QWORD PTR [r14+0x10]
   140021616:	movzx  r11d,WORD PTR [rax]
   14002161a:	mov    WORD PTR [r14+0x150],r11w
   140021622:	movzx  eax,WORD PTR [rax+0x2]
   140021626:	mov    WORD PTR [r14+0x3cc],ax
   14002162e:	lea    r10,[rbp+0x70]
   140021632:	lea    r8,[rsp+0x40]
   140021637:	movzx  edx,WORD PTR [rbp+0x70]
   14002163b:	mov    r9,QWORD PTR [rip+0x1bcb6]        # 0x14003d2f8
   140021642:	test   dx,dx
   140021645:	je     0x1400216a0
   140021647:	cmp    dx,r12w
   14002164b:	jb     0x14002168d
   14002164d:	mov    eax,r15d
   140021650:	cmp    dx,WORD PTR [r9]
   140021654:	je     0x140021687
   140021656:	cmp    eax,r12d
   140021659:	jge    0x14002166c
   14002165b:	inc    eax
   14002165d:	movsxd rcx,eax
   140021660:	cmp    dx,WORD PTR [r9+rcx*2]
   140021665:	jne    0x140021656
   140021667:	cmp    eax,r12d
   14002166a:	jl     0x140021687
   14002166c:	lea    eax,[rbx+rdx*1]
   14002166f:	cmp    ax,0x1f
   140021673:	ja     0x140021683
   140021675:	movzx  eax,dx
   140021678:	movzx  edx,BYTE PTR [r13+rax*2-0x1f200]
   140021681:	jmp    0x14002168d
   140021683:	xor    dl,dl
   140021685:	jmp    0x14002168d
   140021687:	lea    edx,[rax+0x80]
   14002168d:	mov    BYTE PTR [r8],dl
   140021690:	inc    r8
   140021693:	add    r10,0x2
   140021697:	movzx  edx,WORD PTR [r10]
   14002169b:	test   dx,dx
   14002169e:	jne    0x140021647
   1400216a0:	mov    BYTE PTR [r8],r15b
   1400216a3:	test   r11w,r11w
   1400216a7:	jne    0x1400217de
   1400216ad:	mov    eax,0x1f4
   1400216b2:	cmp    si,ax
   1400216b5:	jae    0x1400217de
   1400216bb:	inc    si
   1400216be:	cmp    DWORD PTR [rdi+0x1c20],r15d
   1400216c5:	je     0x14002174a
   1400216cb:	lea    r8,[rsp+0x40]
   1400216d0:	lea    rdx,[rbp+0x70]
   1400216d4:	movzx  eax,BYTE PTR [rsp+0x40]
   1400216d9:	test   al,al
   1400216db:	je     0x140021717
   1400216dd:	nop    DWORD PTR [rax]
   1400216e0:	cmp    al,0x20
   1400216e2:	jae    0x1400216ef
   1400216e4:	movzx  eax,al
   1400216e7:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   1400216ed:	jmp    0x140021705
   1400216ef:	cmp    al,r12b
   1400216f2:	jae    0x1400216f9
   1400216f4:	movzx  ecx,al
   1400216f7:	jmp    0x140021705
   1400216f9:	movzx  eax,al
   1400216fc:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140021705:	mov    WORD PTR [rdx],cx
   140021708:	add    rdx,0x2
   14002170c:	inc    r8
   14002170f:	movzx  eax,BYTE PTR [r8]
   140021713:	test   al,al
   140021715:	jne    0x1400216e0
   140021717:	mov    WORD PTR [rdx],r15w
   14002171b:	lea    rdx,[rbp+0x70]
   14002171f:	lea    rcx,[rdi+0x14c8]
   140021726:	call   0x140017230
   14002172b:	test   ax,ax
   14002172e:	jne    0x14002174a
   140021730:	lea    rcx,[rdi+0x14c8]
   140021737:	call   0x1400173e0
   14002173c:	mov    rdx,rax
   14002173f:	lea    rcx,[rsp+0x40]
   140021744:	call   QWORD PTR [rip+0xdb0e]        # 0x14002f258
   14002174a:	lea    rdx,[rsp+0x40]
   14002174f:	lea    rcx,[rsp+0x20]
   140021754:	call   QWORD PTR [rip+0xdf2e]        # 0x14002f688
   14002175a:	mov    r9,QWORD PTR [rax]
   14002175d:	or     r8,0xffffffffffffffff
   140021761:	mov    edx,0x1a2
   140021766:	mov    rcx,QWORD PTR [rdi+0x6b0]
   14002176d:	call   QWORD PTR [rip+0xdd8d]        # 0x14002f500
   140021773:	cmp    eax,0xffffffff
   140021776:	sete   bl
   140021779:	lea    rcx,[rsp+0x20]
   14002177e:	call   QWORD PTR [rip+0xe20c]        # 0x14002f990
   140021784:	test   bl,bl
   140021786:	mov    ebx,0x700
   14002178b:	mov    ecx,0x6
   140021790:	mov    edx,0x12c
   140021795:	je     0x1400215e0
   14002179b:	cmp    BYTE PTR [rsp+0x40],r15b
   1400217a0:	je     0x1400215e0
   1400217a6:	lea    rdx,[rsp+0x40]
   1400217ab:	lea    rcx,[rsp+0x28]
   1400217b0:	call   QWORD PTR [rip+0xded2]        # 0x14002f688
   1400217b6:	mov    r9,QWORD PTR [rax]
   1400217b9:	xor    r8d,r8d
   1400217bc:	mov    edx,0x180
   1400217c1:	mov    rcx,QWORD PTR [rdi+0x6b0]
   1400217c8:	call   QWORD PTR [rip+0xdd32]        # 0x14002f500
   1400217ce:	lea    rcx,[rsp+0x28]
   1400217d3:	call   QWORD PTR [rip+0xe1b7]        # 0x14002f990
   1400217d9:	jmp    0x1400215cf
   1400217de:	mov    r15,QWORD PTR [rsp+0x30]
   1400217e3:	mov    rcx,r15
   1400217e6:	call   QWORD PTR [rip+0xde14]        # 0x14002f600
   1400217ec:	mov    rcx,QWORD PTR [rbp+0x530]
   1400217f3:	xor    rcx,rsp
   1400217f6:	call   0x14002c960
   1400217fb:	lea    r11,[rsp+0x640]
   140021803:	mov    rbx,QWORD PTR [r11+0x38]
   140021807:	mov    rsi,QWORD PTR [r11+0x40]
   14002180b:	mov    rdi,QWORD PTR [r11+0x48]
   14002180f:	mov    rsp,r11
   140021812:	pop    r15
   140021814:	pop    r14
   140021816:	pop    r13
   140021818:	pop    r12
   14002181a:	pop    rbp
   14002181b:	ret    
   14002181c:	int3   
   14002181d:	int3   
   14002181e:	int3   
   14002181f:	int3   
   140021820:	rex push rbx
   140021822:	sub    rsp,0x290
   140021829:	mov    rax,QWORD PTR [rip+0x1a7d0]        # 0x14003c000
   140021830:	xor    rax,rsp
   140021833:	mov    QWORD PTR [rsp+0x280],rax
   14002183b:	mov    rbx,rcx
   14002183e:	mov    rcx,QWORD PTR [rcx+0xd70]
   140021845:	xor    r9d,r9d
   140021848:	xor    r8d,r8d
   14002184b:	mov    edx,0x188
   140021850:	call   QWORD PTR [rip+0xdcaa]        # 0x14002f500
   140021856:	mov    rcx,QWORD PTR [rbx+0xd70]
   14002185d:	lea    r9,[rsp+0x20]
   140021862:	movsxd r8,eax
   140021865:	mov    edx,0x189
   14002186a:	call   QWORD PTR [rip+0xdc90]        # 0x14002f500
   140021870:	mov    rcx,QWORD PTR [rbx+0xd70]
   140021877:	xor    r9d,r9d
   14002187a:	xor    r8d,r8d
   14002187d:	mov    edx,0x188
   140021882:	call   QWORD PTR [rip+0xdc78]        # 0x14002f500
   140021888:	mov    rcx,QWORD PTR [rbx+0xd70]
   14002188f:	xor    r9d,r9d
   140021892:	mov    r8d,eax
   140021895:	mov    edx,0x182
   14002189a:	call   QWORD PTR [rip+0xdc60]        # 0x14002f500
   1400218a0:	mov    rcx,QWORD PTR [rbx+0x6b0]
   1400218a7:	lea    r9,[rsp+0x20]
   1400218ac:	xor    r8d,r8d
   1400218af:	mov    edx,0x180
   1400218b4:	call   QWORD PTR [rip+0xdc46]        # 0x14002f500
   1400218ba:	mov    rcx,QWORD PTR [rsp+0x280]
   1400218c2:	xor    rcx,rsp
   1400218c5:	call   0x14002c960
   1400218ca:	add    rsp,0x290
   1400218d1:	pop    rbx
   1400218d2:	ret    
   1400218d3:	int3   
   1400218d4:	int3   
   1400218d5:	int3   
   1400218d6:	int3   
   1400218d7:	int3   
   1400218d8:	int3   
   1400218d9:	int3   
   1400218da:	int3   
   1400218db:	int3   
   1400218dc:	int3   
   1400218dd:	int3   
   1400218de:	int3   
   1400218df:	int3   
   1400218e0:	rex push rbx
   1400218e2:	sub    rsp,0x290
   1400218e9:	mov    rax,QWORD PTR [rip+0x1a710]        # 0x14003c000
   1400218f0:	xor    rax,rsp
   1400218f3:	mov    QWORD PTR [rsp+0x280],rax
   1400218fb:	mov    rbx,rcx
   1400218fe:	mov    rcx,QWORD PTR [rcx+0x6b0]
   140021905:	xor    r9d,r9d
   140021908:	xor    r8d,r8d
   14002190b:	mov    edx,0x188
   140021910:	call   QWORD PTR [rip+0xdbea]        # 0x14002f500
   140021916:	cmp    eax,0xffffffff
   140021919:	je     0x1400219e1
   14002191f:	mov    rcx,QWORD PTR [rbx+0x6b0]
   140021926:	lea    r9,[rsp+0x20]
   14002192b:	movsxd r8,eax
   14002192e:	mov    edx,0x189
   140021933:	call   QWORD PTR [rip+0xdbc7]        # 0x14002f500
   140021939:	cmp    WORD PTR [rsp+0x20],0x0
   14002193f:	je     0x1400219e1
   140021945:	mov    rcx,QWORD PTR [rbx+0xd70]
   14002194c:	lea    r9,[rsp+0x20]
   140021951:	or     r8,0xffffffffffffffff
   140021955:	mov    edx,0x1a2
   14002195a:	call   QWORD PTR [rip+0xdba0]        # 0x14002f500
   140021960:	cmp    eax,0xffffffff
   140021963:	jne    0x1400219e1
   140021965:	mov    rcx,QWORD PTR [rbx+0x6b0]
   14002196c:	xor    r9d,r9d
   14002196f:	xor    r8d,r8d
   140021972:	mov    edx,0x188
   140021977:	call   QWORD PTR [rip+0xdb83]        # 0x14002f500
   14002197d:	mov    rcx,QWORD PTR [rbx+0x6b0]
   140021984:	xor    r9d,r9d
   140021987:	mov    r8d,eax
   14002198a:	mov    edx,0x182
   14002198f:	call   QWORD PTR [rip+0xdb6b]        # 0x14002f500
   140021995:	mov    rcx,QWORD PTR [rbx+0xd70]
   14002199c:	lea    r9,[rsp+0x20]
   1400219a1:	xor    r8d,r8d
   1400219a4:	mov    edx,0x180
   1400219a9:	call   QWORD PTR [rip+0xdb51]        # 0x14002f500
   1400219af:	mov    rcx,QWORD PTR [rbx+0xd70]
   1400219b6:	xor    r9d,r9d
   1400219b9:	xor    r8d,r8d
   1400219bc:	mov    edx,0x18b
   1400219c1:	call   QWORD PTR [rip+0xdb39]        # 0x14002f500
   1400219c7:	mov    rcx,QWORD PTR [rbx+0xd70]
   1400219ce:	xor    r9d,r9d
   1400219d1:	dec    eax
   1400219d3:	mov    edx,0x186
   1400219d8:	movsxd r8,eax
   1400219db:	call   QWORD PTR [rip+0xdb1f]        # 0x14002f500
   1400219e1:	mov    rcx,QWORD PTR [rsp+0x280]
   1400219e9:	xor    rcx,rsp
   1400219ec:	call   0x14002c960
   1400219f1:	add    rsp,0x290
   1400219f8:	pop    rbx
   1400219f9:	ret    
   1400219fa:	int3   
   1400219fb:	int3   
   1400219fc:	int3   
   1400219fd:	int3   
   1400219fe:	int3   
   1400219ff:	int3   
   140021a00:	mov    DWORD PTR [rcx+0x15c],0x0
   140021a0a:	ret    
   140021a0b:	int3   
   140021a0c:	int3   
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	mov    DWORD PTR [rcx+0x15c],0x1
   140021a1a:	ret    
   140021a1b:	int3   
   140021a1c:	int3   
   140021a1d:	int3   
   140021a1e:	int3   
   140021a1f:	int3   
   140021a20:	rex push rbp
   140021a22:	push   rsi
   140021a23:	push   rdi
   140021a24:	sub    rsp,0x1b0
   140021a2b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140021a34:	mov    QWORD PTR [rsp+0x1e8],rbx
   140021a3c:	mov    rax,QWORD PTR [rip+0x1a5bd]        # 0x14003c000
   140021a43:	xor    rax,rsp
   140021a46:	mov    QWORD PTR [rsp+0x1a0],rax
   140021a4e:	movzx  esi,r8w
   140021a52:	movzx  edi,cx
   140021a55:	mov    r8,QWORD PTR [rip+0x1b89c]        # 0x14003d2f8
   140021a5c:	lea    rcx,[rsp+0x70]
   140021a61:	call   0x14002b010
   140021a66:	call   QWORD PTR [rip+0xde14]        # 0x14002f880
   140021a6c:	xor    ebp,ebp
   140021a6e:	test   rax,rax
   140021a71:	je     0x140021a84
   140021a73:	mov    rdx,QWORD PTR [rax]
   140021a76:	mov    rcx,rax
   140021a79:	call   QWORD PTR [rdx+0xf8]
   140021a7f:	mov    rbx,rax
   140021a82:	jmp    0x140021a87
   140021a84:	mov    rbx,rbp
   140021a87:	movzx  r8d,si
   140021a8b:	xor    r9d,r9d
   140021a8e:	mov    edx,0x402
   140021a93:	mov    rcx,QWORD PTR [rbx+0x4750]
   140021a9a:	call   QWORD PTR [rip+0xda60]        # 0x14002f500
   140021aa0:	lea    rdx,[rsp+0x70]
   140021aa5:	lea    rcx,[rsp+0x30]
   140021aaa:	call   QWORD PTR [rip+0xdbd8]        # 0x14002f688
   140021ab0:	nop
   140021ab1:	lea    rcx,[rbx+0x47e8]
   140021ab8:	mov    rdx,QWORD PTR [rax]
   140021abb:	call   QWORD PTR [rip+0xdb77]        # 0x14002f638
   140021ac1:	nop
   140021ac2:	lea    rcx,[rsp+0x30]
   140021ac7:	call   QWORD PTR [rip+0xdec3]        # 0x14002f990
   140021acd:	movzx  r8d,di
   140021ad1:	xor    r9d,r9d
   140021ad4:	mov    edx,0x402
   140021ad9:	mov    rcx,QWORD PTR [rbx+0x45a0]
   140021ae0:	call   QWORD PTR [rip+0xda1a]        # 0x14002f500
   140021ae6:	mov    edi,0x1
   140021aeb:	mov    DWORD PTR [rsp+0x20],edi
   140021aef:	xor    r9d,r9d
   140021af2:	xor    r8d,r8d
   140021af5:	xor    edx,edx
   140021af7:	lea    rcx,[rsp+0x40]
   140021afc:	call   QWORD PTR [rip+0xd9f6]        # 0x14002f4f8
   140021b02:	test   eax,eax
   140021b04:	je     0x140021b41
   140021b06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021b10:	lea    rcx,[rsp+0x40]
   140021b15:	call   QWORD PTR [rip+0xd9d5]        # 0x14002f4f0
   140021b1b:	lea    rcx,[rsp+0x40]
   140021b20:	call   QWORD PTR [rip+0xd9ea]        # 0x14002f510
   140021b26:	mov    DWORD PTR [rsp+0x20],edi
   140021b2a:	xor    r9d,r9d
   140021b2d:	xor    r8d,r8d
   140021b30:	xor    edx,edx
   140021b32:	lea    rcx,[rsp+0x40]
   140021b37:	call   QWORD PTR [rip+0xd9bb]        # 0x14002f4f8
   140021b3d:	test   eax,eax
   140021b3f:	jne    0x140021b10
   140021b41:	cmp    DWORD PTR [rbx+0x3f70],0x0
   140021b48:	jne    0x140021b56
   140021b4a:	cmp    DWORD PTR [rip+0x200a3],0x0        # 0x140041bf4
   140021b51:	movzx  eax,bp
   140021b54:	je     0x140021b59
   140021b56:	movzx  eax,di
   140021b59:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140021b61:	xor    rcx,rsp
   140021b64:	call   0x14002c960
   140021b69:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140021b71:	add    rsp,0x1b0
   140021b78:	pop    rdi
   140021b79:	pop    rsi
   140021b7a:	pop    rbp
   140021b7b:	ret    
   140021b7c:	int3   
   140021b7d:	int3   
   140021b7e:	int3   
   140021b7f:	int3   
   140021b80:	mov    QWORD PTR [rsp+0x10],rbx
   140021b85:	mov    QWORD PTR [rsp+0x18],rsi
   140021b8a:	push   rdi
   140021b8b:	sub    rsp,0x290
   140021b92:	mov    rax,QWORD PTR [rip+0x1a467]        # 0x14003c000
   140021b99:	xor    rax,rsp
   140021b9c:	mov    QWORD PTR [rsp+0x280],rax
   140021ba4:	mov    ebx,edx
   140021ba6:	mov    edx,0xfffffffa
   140021bab:	mov    rdi,rcx
   140021bae:	call   QWORD PTR [rip+0xd92c]        # 0x14002f4e0
   140021bb4:	lea    r8,[rsp+0x20]
   140021bb9:	mov    r9d,0x12c
   140021bbf:	mov    rcx,rax
   140021bc2:	mov    edx,0x80
   140021bc7:	mov    rsi,rax
   140021bca:	call   QWORD PTR [rip+0xd908]        # 0x14002f4d8
   140021bd0:	cmp    ebx,0x65
   140021bd3:	ja     0x140021c4e
   140021bd5:	je     0x140021c47
   140021bd7:	cmp    ebx,0x64
   140021bda:	ja     0x140021c98
   140021be0:	lea    rdx,[rip+0xfffffffffffde419]        # 0x140000000
   140021be7:	movzx  eax,BYTE PTR [rdx+rbx*1+0x21d58]
   140021bef:	mov    ecx,DWORD PTR [rdx+rax*4+0x21d34]
   140021bf6:	add    rcx,rdx
   140021bf9:	jmp    rcx
   140021bfb:	mov    ecx,0xe71a
   140021c00:	mov    ebx,0x40
   140021c05:	jmp    0x140021cbc
   140021c0a:	mov    ecx,0xe72d
   140021c0f:	jmp    0x140021cb7
   140021c14:	mov    ecx,0xe71b
   140021c19:	jmp    0x140021cb7
   140021c1e:	mov    ecx,0xe71c
   140021c23:	jmp    0x140021cb7
   140021c28:	mov    ecx,0xe71f
   140021c2d:	jmp    0x140021cb7
   140021c32:	mov    ecx,0xe71e
   140021c37:	jmp    0x140021cb7
   140021c39:	mov    ecx,0xe720
   140021c3e:	jmp    0x140021cb7
   140021c40:	mov    ecx,0xe72e
   140021c45:	jmp    0x140021cb7
   140021c47:	mov    ecx,0xe721
   140021c4c:	jmp    0x140021cb7
   140021c4e:	cmp    ebx,0x6a
   140021c51:	ja     0x140021c89
   140021c53:	je     0x140021c82
   140021c55:	sub    ebx,0x66
   140021c58:	je     0x140021c7b
   140021c5a:	dec    ebx
   140021c5c:	je     0x140021c74
   140021c5e:	dec    ebx
   140021c60:	je     0x140021c6d
   140021c62:	dec    ebx
   140021c64:	jne    0x140021c98
   140021c66:	mov    ecx,0xe729
   140021c6b:	jmp    0x140021cb7
   140021c6d:	mov    ecx,0xe728
   140021c72:	jmp    0x140021cb7
   140021c74:	mov    ecx,0xe727
   140021c79:	jmp    0x140021cb7
   140021c7b:	mov    ecx,0xe726
   140021c80:	jmp    0x140021cb7
   140021c82:	mov    ecx,0xe72a
   140021c87:	jmp    0x140021cb7
   140021c89:	cmp    ebx,0x6b
   140021c8c:	je     0x140021cb2
   140021c8e:	cmp    ebx,0x6c
   140021c91:	je     0x140021ca6
   140021c93:	cmp    ebx,0xffffffff
   140021c96:	je     0x140021c9f
   140021c98:	mov    ecx,0xe719
   140021c9d:	jmp    0x140021cb7
   140021c9f:	mov    ecx,0xe71d
   140021ca4:	jmp    0x140021cb7
   140021ca6:	mov    ecx,0xe72c
   140021cab:	mov    ebx,0x14
   140021cb0:	jmp    0x140021cbc
   140021cb2:	mov    ecx,0xe72b
   140021cb7:	mov    ebx,0x10
   140021cbc:	movzx  edx,cx
   140021cbf:	lea    r8,[rsp+0x150]
   140021cc7:	mov    r9d,0x12c
   140021ccd:	mov    rcx,rsi
   140021cd0:	call   QWORD PTR [rip+0xd802]        # 0x14002f4d8
   140021cd6:	lea    r8,[rsp+0x20]
   140021cdb:	lea    rdx,[rsp+0x150]
   140021ce3:	movzx  r9d,bx
   140021ce7:	mov    rcx,rdi
   140021cea:	call   QWORD PTR [rip+0xd7f8]        # 0x14002f4e8
   140021cf0:	cmp    DWORD PTR [rip+0x1fefd],0x0        # 0x140041bf4
   140021cf7:	mov    ebx,eax
   140021cf9:	je     0x140021d0e
   140021cfb:	cmp    DWORD PTR [rip+0x1feee],0x0        # 0x140041bf0
   140021d02:	jne    0x140021d0e
   140021d04:	xor    ecx,ecx
   140021d06:	call   QWORD PTR [rip+0xd7c4]        # 0x14002f4d0
   140021d0c:	mov    eax,ebx
   140021d0e:	mov    rcx,QWORD PTR [rsp+0x280]
   140021d16:	xor    rcx,rsp
   140021d19:	call   0x14002c960
   140021d1e:	lea    r11,[rsp+0x290]
   140021d26:	mov    rbx,QWORD PTR [r11+0x18]
   140021d2a:	mov    rsi,QWORD PTR [r11+0x20]
   140021d2e:	mov    rsp,r11
   140021d31:	pop    rdi
   140021d32:	ret    
   140021d33:	nop
   140021d34:	sti    
   140021d35:	sbb    eax,DWORD PTR [rdx]
   140021d37:	add    BYTE PTR [rsp+rbx*1],dl
   140021d3a:	add    al,BYTE PTR [rax]
   140021d3c:	(bad)  
   140021d3d:	sbb    al,0x2
   140021d3f:	add    BYTE PTR [rax],ch
   140021d41:	sbb    al,0x2
   140021d43:	add    BYTE PTR [rdx],dh
   140021d45:	sbb    al,0x2
   140021d47:	add    BYTE PTR [rdx],cl
   140021d49:	sbb    al,0x2
   140021d4b:	add    BYTE PTR [rax+0x1c],al
   140021d4e:	add    al,BYTE PTR [rax]
   140021d50:	cmp    DWORD PTR [rdx+rax*1],ebx
   140021d53:	add    BYTE PTR [rax+0x21c],bl
   140021d59:	add    DWORD PTR [rcx],eax
   140021d5b:	add    DWORD PTR [rdx],eax
   140021d5d:	add    eax,DWORD PTR [rax*1+0x8080806]
   140021d64:	or     BYTE PTR [rax],cl
   140021d66:	or     BYTE PTR [rax],cl
   140021d68:	or     BYTE PTR [rax],cl
   140021d6a:	or     BYTE PTR [rax],cl
   140021d6c:	or     BYTE PTR [rax],cl
   140021d6e:	or     BYTE PTR [rax],cl
   140021d70:	or     BYTE PTR [rax],cl
   140021d72:	or     BYTE PTR [rax],cl
   140021d74:	or     BYTE PTR [rax],cl
   140021d76:	or     BYTE PTR [rax],cl
   140021d78:	or     BYTE PTR [rax],cl
   140021d7a:	or     BYTE PTR [rax],cl
   140021d7c:	or     BYTE PTR [rax],cl
   140021d7e:	or     BYTE PTR [rax],cl
   140021d80:	or     BYTE PTR [rax],cl
   140021d82:	or     BYTE PTR [rax],cl
   140021d84:	or     BYTE PTR [rax],cl
   140021d86:	or     BYTE PTR [rax],cl
   140021d88:	or     BYTE PTR [rax],cl
   140021d8a:	or     BYTE PTR [rax],cl
   140021d8c:	or     BYTE PTR [rax],cl
   140021d8e:	or     BYTE PTR [rax],cl
   140021d90:	or     BYTE PTR [rax],cl
   140021d92:	or     BYTE PTR [rax],cl
   140021d94:	or     BYTE PTR [rax],cl
   140021d96:	or     BYTE PTR [rax],cl
   140021d98:	or     BYTE PTR [rax],cl
   140021d9a:	or     BYTE PTR [rax],cl
   140021d9c:	or     BYTE PTR [rax],cl
   140021d9e:	or     BYTE PTR [rax],cl
   140021da0:	or     BYTE PTR [rax],cl
   140021da2:	or     BYTE PTR [rax],cl
   140021da4:	or     BYTE PTR [rax],cl
   140021da6:	or     BYTE PTR [rax],cl
   140021da8:	or     BYTE PTR [rax],cl
   140021daa:	or     BYTE PTR [rax],cl
   140021dac:	or     BYTE PTR [rax],cl
   140021dae:	or     BYTE PTR [rax],cl
   140021db0:	or     BYTE PTR [rax],cl
   140021db2:	or     BYTE PTR [rax],cl
   140021db4:	or     BYTE PTR [rax],cl
   140021db6:	or     BYTE PTR [rax],cl
   140021db8:	or     BYTE PTR [rax],cl
   140021dba:	or     BYTE PTR [rax],cl
   140021dbc:	(bad)  
   140021dbd:	int3   
   140021dbe:	int3   
   140021dbf:	int3   
   140021dc0:	sub    rsp,0x38
   140021dc4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021dcd:	mov    ecx,0xef0
   140021dd2:	call   QWORD PTR [rip+0xdbc0]        # 0x14002f998
   140021dd8:	mov    QWORD PTR [rsp+0x40],rax
   140021ddd:	test   rax,rax
   140021de0:	je     0x140021ded
   140021de2:	mov    rcx,rax
   140021de5:	call   0x140021e10
   140021dea:	nop
   140021deb:	jmp    0x140021def
   140021ded:	xor    eax,eax
   140021def:	add    rsp,0x38
   140021df3:	ret    
   140021df4:	int3   
   140021df5:	int3   
   140021df6:	int3   
   140021df7:	int3   
   140021df8:	int3   
   140021df9:	int3   
   140021dfa:	int3   
   140021dfb:	int3   
   140021dfc:	int3   
   140021dfd:	int3   
   140021dfe:	int3   
   140021dff:	int3   
   140021e00:	lea    rax,[rip+0x117f9]        # 0x140033600
   140021e07:	ret    
   140021e08:	int3   
   140021e09:	int3   
   140021e0a:	int3   
   140021e0b:	int3   
   140021e0c:	int3   
   140021e0d:	int3   
   140021e0e:	int3   
   140021e0f:	int3   
   140021e10:	mov    QWORD PTR [rsp+0x8],rcx
   140021e15:	push   rdi
   140021e16:	sub    rsp,0x30
   140021e1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021e23:	mov    QWORD PTR [rsp+0x48],rbx
   140021e28:	mov    QWORD PTR [rsp+0x50],rbp
   140021e2d:	mov    QWORD PTR [rsp+0x58],rsi
   140021e32:	mov    rdi,rcx
   140021e35:	mov    r9d,0x68
   140021e3b:	xor    r8d,r8d
   140021e3e:	lea    edx,[r9+0x61]
   140021e42:	call   QWORD PTR [rip+0xd280]        # 0x14002f0c8
   140021e48:	nop
   140021e49:	lea    rax,[rip+0x117e8]        # 0x140033638
   140021e50:	mov    QWORD PTR [rdi],rax
   140021e53:	lea    rcx,[rdi+0x160]
   140021e5a:	call   QWORD PTR [rip+0xd818]        # 0x14002f678
   140021e60:	lea    rbp,[rip+0x10101]        # 0x140031f68
   140021e67:	mov    QWORD PTR [rdi+0x160],rbp
   140021e6e:	lea    rcx,[rdi+0x238]
   140021e75:	call   QWORD PTR [rip+0xd7fd]        # 0x14002f678
   140021e7b:	lea    rsi,[rip+0xfb16]        # 0x140031998
   140021e82:	mov    QWORD PTR [rdi+0x238],rsi
   140021e89:	lea    rcx,[rdi+0x310]
   140021e90:	call   QWORD PTR [rip+0xd7e2]        # 0x14002f678
   140021e96:	mov    QWORD PTR [rdi+0x310],rsi
   140021e9d:	lea    rcx,[rdi+0x3e8]
   140021ea4:	call   QWORD PTR [rip+0xd7ce]        # 0x14002f678
   140021eaa:	mov    QWORD PTR [rdi+0x3e8],rbp
   140021eb1:	lea    rcx,[rdi+0x4c0]
   140021eb8:	call   QWORD PTR [rip+0xd7ba]        # 0x14002f678
   140021ebe:	mov    QWORD PTR [rdi+0x4c0],rbp
   140021ec5:	lea    rcx,[rdi+0x598]
   140021ecc:	call   QWORD PTR [rip+0xd7a6]        # 0x14002f678
   140021ed2:	lea    rsi,[rip+0xfda7]        # 0x140031c80
   140021ed9:	mov    QWORD PTR [rdi+0x598],rsi
   140021ee0:	lea    rcx,[rdi+0x670]
   140021ee7:	call   QWORD PTR [rip+0xd78b]        # 0x14002f678
   140021eed:	mov    QWORD PTR [rdi+0x670],rsi
   140021ef4:	lea    rcx,[rdi+0x748]
   140021efb:	call   QWORD PTR [rip+0xd777]        # 0x14002f678
   140021f01:	mov    QWORD PTR [rdi+0x748],rsi
   140021f08:	lea    rcx,[rdi+0x820]
   140021f0f:	call   QWORD PTR [rip+0xd763]        # 0x14002f678
   140021f15:	mov    QWORD PTR [rdi+0x820],rsi
   140021f1c:	lea    rcx,[rdi+0x8f8]
   140021f23:	call   QWORD PTR [rip+0xd74f]        # 0x14002f678
   140021f29:	mov    QWORD PTR [rdi+0x8f8],rsi
   140021f30:	lea    rcx,[rdi+0x9d0]
   140021f37:	call   QWORD PTR [rip+0xd73b]        # 0x14002f678
   140021f3d:	mov    QWORD PTR [rdi+0x9d0],rbp
   140021f44:	lea    rcx,[rdi+0xaa8]
   140021f4b:	call   QWORD PTR [rip+0xd727]        # 0x14002f678
   140021f51:	mov    QWORD PTR [rdi+0xaa8],rbp
   140021f58:	lea    rcx,[rdi+0xb80]
   140021f5f:	call   QWORD PTR [rip+0xd713]        # 0x14002f678
   140021f65:	mov    QWORD PTR [rdi+0xb80],rbp
   140021f6c:	lea    rcx,[rdi+0xc58]
   140021f73:	call   QWORD PTR [rip+0xd6ff]        # 0x14002f678
   140021f79:	lea    rsi,[rip+0x10300]        # 0x140032280
   140021f80:	mov    QWORD PTR [rdi+0xc58],rsi
   140021f87:	lea    rcx,[rdi+0xd30]
   140021f8e:	call   QWORD PTR [rip+0xd6e4]        # 0x14002f678
   140021f94:	mov    QWORD PTR [rdi+0xd30],rsi
   140021f9b:	lea    rcx,[rdi+0xe08]
   140021fa2:	call   QWORD PTR [rip+0xd6d0]        # 0x14002f678
   140021fa8:	lea    rax,[rip+0x10d69]        # 0x140032d18
   140021faf:	mov    QWORD PTR [rdi+0xe08],rax
   140021fb6:	mov    rcx,rdi
   140021fb9:	call   QWORD PTR [rip+0xd9a9]        # 0x14002f968
   140021fbf:	nop
   140021fc0:	mov    rax,rdi
   140021fc3:	mov    rbx,QWORD PTR [rsp+0x48]
   140021fc8:	mov    rbp,QWORD PTR [rsp+0x50]
   140021fcd:	mov    rsi,QWORD PTR [rsp+0x58]
   140021fd2:	add    rsp,0x30
   140021fd6:	pop    rdi
   140021fd7:	ret    
   140021fd8:	int3   
   140021fd9:	int3   
   140021fda:	int3   
   140021fdb:	int3   
   140021fdc:	int3   
   140021fdd:	int3   
   140021fde:	int3   
   140021fdf:	int3   
   140021fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140021fe5:	push   rdi
   140021fe6:	sub    rsp,0x20
   140021fea:	mov    ebx,edx
   140021fec:	mov    rdi,rcx
   140021fef:	call   0x140022010
   140021ff4:	test   bl,0x1
   140021ff7:	je     0x140022002
   140021ff9:	mov    rcx,rdi
   140021ffc:	call   QWORD PTR [rip+0xdb76]        # 0x14002fb78
   140022002:	mov    rax,rdi
   140022005:	mov    rbx,QWORD PTR [rsp+0x30]
   14002200a:	add    rsp,0x20
   14002200e:	pop    rdi
   14002200f:	ret    
   140022010:	mov    QWORD PTR [rsp+0x8],rcx
   140022015:	push   rbx
   140022016:	sub    rsp,0x30
   14002201a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022023:	mov    rbx,rcx
   140022026:	lea    rax,[rip+0x1160b]        # 0x140033638
   14002202d:	mov    QWORD PTR [rcx],rax
   140022030:	add    rcx,0xe08
   140022037:	call   QWORD PTR [rip+0xd66b]        # 0x14002f6a8
   14002203d:	nop
   14002203e:	lea    rcx,[rbx+0xd30]
   140022045:	call   QWORD PTR [rip+0xd8f5]        # 0x14002f940
   14002204b:	nop
   14002204c:	lea    rcx,[rbx+0xc58]
   140022053:	call   QWORD PTR [rip+0xd8e7]        # 0x14002f940
   140022059:	nop
   14002205a:	lea    rcx,[rbx+0xb80]
   140022061:	call   QWORD PTR [rip+0xd8c1]        # 0x14002f928
   140022067:	nop
   140022068:	lea    rcx,[rbx+0xaa8]
   14002206f:	call   QWORD PTR [rip+0xd8b3]        # 0x14002f928
   140022075:	nop
   140022076:	lea    rcx,[rbx+0x9d0]
   14002207d:	call   QWORD PTR [rip+0xd8a5]        # 0x14002f928
   140022083:	nop
   140022084:	lea    rcx,[rbx+0x8f8]
   14002208b:	call   QWORD PTR [rip+0xd80f]        # 0x14002f8a0
   140022091:	nop
   140022092:	lea    rcx,[rbx+0x820]
   140022099:	call   QWORD PTR [rip+0xd801]        # 0x14002f8a0
   14002209f:	nop
   1400220a0:	lea    rcx,[rbx+0x748]
   1400220a7:	call   QWORD PTR [rip+0xd7f3]        # 0x14002f8a0
   1400220ad:	nop
   1400220ae:	lea    rcx,[rbx+0x670]
   1400220b5:	call   QWORD PTR [rip+0xd7e5]        # 0x14002f8a0
   1400220bb:	nop
   1400220bc:	lea    rcx,[rbx+0x598]
   1400220c3:	call   QWORD PTR [rip+0xd7d7]        # 0x14002f8a0
   1400220c9:	nop
   1400220ca:	lea    rcx,[rbx+0x4c0]
   1400220d1:	call   QWORD PTR [rip+0xd851]        # 0x14002f928
   1400220d7:	nop
   1400220d8:	lea    rcx,[rbx+0x3e8]
   1400220df:	call   QWORD PTR [rip+0xd843]        # 0x14002f928
   1400220e5:	nop
   1400220e6:	lea    rcx,[rbx+0x310]
   1400220ed:	call   QWORD PTR [rip+0xd785]        # 0x14002f878
   1400220f3:	nop
   1400220f4:	lea    rcx,[rbx+0x238]
   1400220fb:	call   QWORD PTR [rip+0xd777]        # 0x14002f878
   140022101:	nop
   140022102:	lea    rcx,[rbx+0x160]
   140022109:	call   QWORD PTR [rip+0xd819]        # 0x14002f928
   14002210f:	nop
   140022110:	mov    rcx,rbx
   140022113:	add    rsp,0x30
   140022117:	pop    rbx
   140022118:	rex.W jmp QWORD PTR [rip+0xcfa1]        # 0x14002f0c0
   14002211f:	int3   
   140022120:	mov    QWORD PTR [rsp+0x8],rbx
   140022125:	push   rdi
   140022126:	sub    rsp,0x20
   14002212a:	mov    rdi,rdx
   14002212d:	lea    r8,[rcx+0x160]
   140022134:	mov    rbx,rcx
   140022137:	mov    rcx,rdi
   14002213a:	mov    edx,0x417
   14002213f:	call   QWORD PTR [rip+0xd7c3]        # 0x14002f908
   140022145:	lea    r8,[rbx+0x238]
   14002214c:	mov    edx,0x3f5
   140022151:	mov    rcx,rdi
   140022154:	call   QWORD PTR [rip+0xd7ae]        # 0x14002f908
   14002215a:	lea    r8,[rbx+0x310]
   140022161:	mov    edx,0x3f0
   140022166:	mov    rcx,rdi
   140022169:	call   QWORD PTR [rip+0xd799]        # 0x14002f908
   14002216f:	lea    r8,[rbx+0x3e8]
   140022176:	mov    edx,0x1
   14002217b:	mov    rcx,rdi
   14002217e:	call   QWORD PTR [rip+0xd784]        # 0x14002f908
   140022184:	lea    r8,[rbx+0x4c0]
   14002218b:	mov    edx,0x2
   140022190:	mov    rcx,rdi
   140022193:	call   QWORD PTR [rip+0xd76f]        # 0x14002f908
   140022199:	lea    r8,[rbx+0x598]
   1400221a0:	mov    edx,0x3fa
   1400221a5:	mov    rcx,rdi
   1400221a8:	call   QWORD PTR [rip+0xd75a]        # 0x14002f908
   1400221ae:	lea    r8,[rbx+0x670]
   1400221b5:	mov    edx,0x3f7
   1400221ba:	mov    rcx,rdi
   1400221bd:	call   QWORD PTR [rip+0xd745]        # 0x14002f908
   1400221c3:	lea    r8,[rbx+0x748]
   1400221ca:	mov    edx,0x3f6
   1400221cf:	mov    rcx,rdi
   1400221d2:	call   QWORD PTR [rip+0xd730]        # 0x14002f908
   1400221d8:	lea    r8,[rbx+0x820]
   1400221df:	mov    edx,0x3f9
   1400221e4:	mov    rcx,rdi
   1400221e7:	call   QWORD PTR [rip+0xd71b]        # 0x14002f908
   1400221ed:	lea    r8,[rbx+0x8f8]
   1400221f4:	mov    edx,0x3f8
   1400221f9:	mov    rcx,rdi
   1400221fc:	call   QWORD PTR [rip+0xd706]        # 0x14002f908
   140022202:	lea    r8,[rbx+0x9d0]
   140022209:	mov    edx,0x3f4
   14002220e:	mov    rcx,rdi
   140022211:	call   QWORD PTR [rip+0xd6f1]        # 0x14002f908
   140022217:	lea    r8,[rbx+0xaa8]
   14002221e:	mov    edx,0x3f2
   140022223:	mov    rcx,rdi
   140022226:	call   QWORD PTR [rip+0xd6dc]        # 0x14002f908
   14002222c:	lea    r8,[rbx+0xb80]
   140022233:	mov    edx,0xe146
   140022238:	mov    rcx,rdi
   14002223b:	call   QWORD PTR [rip+0xd6c7]        # 0x14002f908
   140022241:	lea    r8,[rbx+0xc58]
   140022248:	mov    edx,0x3f3
   14002224d:	mov    rcx,rdi
   140022250:	call   QWORD PTR [rip+0xd6b2]        # 0x14002f908
   140022256:	lea    r8,[rbx+0xd30]
   14002225d:	mov    edx,0x3f1
   140022262:	mov    rcx,rdi
   140022265:	call   QWORD PTR [rip+0xd69d]        # 0x14002f908
   14002226b:	lea    r8,[rbx+0xe08]
   140022272:	mov    edx,0x3ef
   140022277:	mov    rcx,rdi
   14002227a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002227f:	add    rsp,0x20
   140022283:	pop    rdi
   140022284:	rex.W jmp QWORD PTR [rip+0xd67d]        # 0x14002f908
   14002228b:	int3   
   14002228c:	int3   
   14002228d:	int3   
   14002228e:	int3   
   14002228f:	int3   
   140022290:	lea    rax,[rip+0x11711]        # 0x1400339a8
   140022297:	ret    
   140022298:	int3   
   140022299:	int3   
   14002229a:	int3   
   14002229b:	int3   
   14002229c:	int3   
   14002229d:	int3   
   14002229e:	int3   
   14002229f:	int3   
   1400222a0:	rex push rbx
   1400222a2:	sub    rsp,0x30
   1400222a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400222af:	mov    rbx,rcx
   1400222b2:	call   QWORD PTR [rip+0xd618]        # 0x14002f8d0
   1400222b8:	lea    rcx,[rsp+0x40]
   1400222bd:	call   QWORD PTR [rip+0xd3cd]        # 0x14002f690
   1400222c3:	nop
   1400222c4:	mov    edx,0xe70f
   1400222c9:	lea    rcx,[rsp+0x40]
   1400222ce:	call   QWORD PTR [rip+0xd3ac]        # 0x14002f680
   1400222d4:	mov    r9,QWORD PTR [rsp+0x40]
   1400222d9:	xor    r8d,r8d
   1400222dc:	mov    edx,0x143
   1400222e1:	mov    rcx,QWORD PTR [rbx+0xe48]
   1400222e8:	call   QWORD PTR [rip+0xd212]        # 0x14002f500
   1400222ee:	mov    edx,0xe710
   1400222f3:	lea    rcx,[rsp+0x40]
   1400222f8:	call   QWORD PTR [rip+0xd382]        # 0x14002f680
   1400222fe:	mov    r9,QWORD PTR [rsp+0x40]
   140022303:	xor    r8d,r8d
   140022306:	mov    edx,0x143
   14002230b:	mov    rcx,QWORD PTR [rbx+0xe48]
   140022312:	call   QWORD PTR [rip+0xd1e8]        # 0x14002f500
   140022318:	mov    edx,0xe711
   14002231d:	lea    rcx,[rsp+0x40]
   140022322:	call   QWORD PTR [rip+0xd358]        # 0x14002f680
   140022328:	mov    r9,QWORD PTR [rsp+0x40]
   14002232d:	xor    r8d,r8d
   140022330:	mov    edx,0x143
   140022335:	mov    rcx,QWORD PTR [rbx+0xe48]
   14002233c:	call   QWORD PTR [rip+0xd1be]        # 0x14002f500
   140022342:	mov    edx,0xe712
   140022347:	lea    rcx,[rsp+0x40]
   14002234c:	call   QWORD PTR [rip+0xd32e]        # 0x14002f680
   140022352:	mov    r9,QWORD PTR [rsp+0x40]
   140022357:	xor    r8d,r8d
   14002235a:	mov    edx,0x143
   14002235f:	mov    rcx,QWORD PTR [rbx+0xe48]
   140022366:	call   QWORD PTR [rip+0xd194]        # 0x14002f500
   14002236c:	xor    r9d,r9d
   14002236f:	mov    edx,0x14e
   140022374:	lea    r8d,[r9+0x1]
   140022378:	mov    rcx,QWORD PTR [rbx+0xe48]
   14002237f:	call   QWORD PTR [rip+0xd17b]        # 0x14002f500
   140022385:	mov    edx,0x3fb
   14002238a:	mov    r9d,0x3fc
   140022390:	mov    r8d,r9d
   140022393:	mov    rcx,rbx
   140022396:	call   QWORD PTR [rip+0xd364]        # 0x14002f700
   14002239c:	lea    rcx,[rbx+0x3e8]
   1400223a3:	xor    edx,edx
   1400223a5:	call   QWORD PTR [rip+0xd25d]        # 0x14002f608
   1400223ab:	lea    rcx,[rbx+0x670]
   1400223b2:	xor    edx,edx
   1400223b4:	call   QWORD PTR [rip+0xd24e]        # 0x14002f608
   1400223ba:	lea    rcx,[rbx+0x748]
   1400223c1:	xor    edx,edx
   1400223c3:	call   QWORD PTR [rip+0xd23f]        # 0x14002f608
   1400223c9:	lea    rcx,[rbx+0x160]
   1400223d0:	xor    edx,edx
   1400223d2:	call   QWORD PTR [rip+0xd230]        # 0x14002f608
   1400223d8:	lea    rcx,[rbx+0x4c0]
   1400223df:	xor    edx,edx
   1400223e1:	call   QWORD PTR [rip+0xd221]        # 0x14002f608
   1400223e7:	xor    eax,eax
   1400223e9:	mov    QWORD PTR [rbx+0xee4],rax
   1400223f0:	mov    DWORD PTR [rbx+0x158],eax
   1400223f6:	lea    rcx,[rsp+0x40]
   1400223fb:	call   QWORD PTR [rip+0xd58f]        # 0x14002f990
   140022401:	xor    eax,eax
   140022403:	add    rsp,0x30
   140022407:	pop    rbx
   140022408:	ret    
   140022409:	int3   
   14002240a:	int3   
   14002240b:	int3   
   14002240c:	int3   
   14002240d:	int3   
   14002240e:	int3   
   14002240f:	int3   
   140022410:	rex push rdi
   140022412:	sub    rsp,0x6e0
   140022419:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140022422:	mov    QWORD PTR [rsp+0x6f8],rbx
   14002242a:	mov    rax,QWORD PTR [rip+0x19bcf]        # 0x14003c000
   140022431:	xor    rax,rsp
   140022434:	mov    QWORD PTR [rsp+0x6d0],rax
   14002243c:	mov    rbx,rcx
   14002243f:	lea    rcx,[rsp+0x50]
   140022444:	call   QWORD PTR [rip+0xd246]        # 0x14002f690
   14002244a:	nop
   14002244b:	mov    edx,0xe715
   140022450:	lea    rcx,[rsp+0x50]
   140022455:	call   QWORD PTR [rip+0xd225]        # 0x14002f680
   14002245b:	lea    rdi,[rbx+0xc58]
   140022462:	mov    r8d,0x12a
   140022468:	lea    rdx,[rsp+0x470]
   140022470:	mov    rcx,rdi
   140022473:	call   QWORD PTR [rip+0xd1b7]        # 0x14002f630
   140022479:	mov    DWORD PTR [rsp+0x40],0x1
   140022481:	mov    DWORD PTR [rsp+0x38],0x0
   140022489:	mov    QWORD PTR [rsp+0x30],rbx
   14002248e:	mov    rax,QWORD PTR [rsp+0x50]
   140022493:	mov    QWORD PTR [rsp+0x28],rax
   140022498:	mov    DWORD PTR [rsp+0x20],0x6
   1400224a0:	lea    r9,[rsp+0x470]
   1400224a8:	xor    r8d,r8d
   1400224ab:	lea    edx,[r8+0x1]
   1400224af:	lea    rcx,[rsp+0x70]
   1400224b4:	call   QWORD PTR [rip+0xd496]        # 0x14002f950
   1400224ba:	nop
   1400224bb:	lea    rcx,[rsp+0x58]
   1400224c0:	call   0x140023e50
   1400224c5:	nop
   1400224c6:	mov    rbx,QWORD PTR [rax]
   1400224c9:	lea    rcx,[rsp+0x70]
   1400224ce:	call   QWORD PTR [rip+0xd474]        # 0x14002f948
   1400224d4:	mov    QWORD PTR [rax+0x50],rbx
   1400224d8:	lea    rcx,[rsp+0x58]
   1400224dd:	call   QWORD PTR [rip+0xd4ad]        # 0x14002f990
   1400224e3:	lea    rcx,[rsp+0x70]
   1400224e8:	call   QWORD PTR [rip+0xd472]        # 0x14002f960
   1400224ee:	cmp    rax,0x1
   1400224f2:	jne    0x14002250e
   1400224f4:	lea    rcx,[rsp+0x70]
   1400224f9:	call   QWORD PTR [rip+0xd449]        # 0x14002f948
   1400224ff:	mov    rdx,QWORD PTR [rax+0x30]
   140022503:	mov    rcx,rdi
   140022506:	call   QWORD PTR [rip+0xd12c]        # 0x14002f638
   14002250c:	jmp    0x140022518
   14002250e:	mov    rcx,rdi
   140022511:	call   QWORD PTR [rip+0xd0e9]        # 0x14002f600
   140022517:	nop
   140022518:	lea    rcx,[rsp+0x70]
   14002251d:	call   QWORD PTR [rip+0xd435]        # 0x14002f958
   140022523:	nop
   140022524:	lea    rcx,[rsp+0x50]
   140022529:	call   QWORD PTR [rip+0xd461]        # 0x14002f990
   14002252f:	mov    rcx,QWORD PTR [rsp+0x6d0]
   140022537:	xor    rcx,rsp
   14002253a:	call   0x14002c960
   14002253f:	mov    rbx,QWORD PTR [rsp+0x6f8]
   140022547:	add    rsp,0x6e0
   14002254e:	pop    rdi
   14002254f:	ret    
   140022550:	jmp    0x140022560
   140022555:	int3   
   140022556:	int3   
   140022557:	int3   
   140022558:	int3   
   140022559:	int3   
   14002255a:	int3   
   14002255b:	int3   
   14002255c:	int3   
   14002255d:	int3   
   14002255e:	int3   
   14002255f:	int3   
   140022560:	mov    rax,rsp
   140022563:	push   rbp
   140022564:	push   r12
   140022566:	push   r13
   140022568:	push   r14
   14002256a:	push   r15
   14002256c:	lea    rbp,[rax-0x6a8]
   140022573:	sub    rsp,0x780
   14002257a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140022583:	mov    QWORD PTR [rax+0x10],rbx
   140022587:	mov    QWORD PTR [rax+0x18],rsi
   14002258b:	mov    QWORD PTR [rax+0x20],rdi
   14002258f:	mov    rax,QWORD PTR [rip+0x19a6a]        # 0x14003c000
   140022596:	xor    rax,rsp
   140022599:	mov    QWORD PTR [rbp+0x670],rax
   1400225a0:	mov    rsi,rcx
   1400225a3:	lea    rax,[rip+0x8f6]        # 0x140022ea0
   1400225aa:	mov    QWORD PTR [rip+0x1f4f7],rax        # 0x140041aa8
   1400225b1:	add    rcx,0x670
   1400225b8:	mov    edx,0x1
   1400225bd:	call   QWORD PTR [rip+0xd045]        # 0x14002f608
   1400225c3:	lea    rcx,[rsi+0x748]
   1400225ca:	mov    edx,0x1
   1400225cf:	call   QWORD PTR [rip+0xd033]        # 0x14002f608
   1400225d5:	lea    rcx,[rsi+0x160]
   1400225dc:	mov    edx,0x1
   1400225e1:	call   QWORD PTR [rip+0xd021]        # 0x14002f608
   1400225e7:	lea    rcx,[rsi+0x4c0]
   1400225ee:	mov    edx,0x1
   1400225f3:	call   QWORD PTR [rip+0xd00f]        # 0x14002f608
   1400225f9:	lea    rcx,[rsi+0xaa8]
   140022600:	xor    edx,edx
   140022602:	call   QWORD PTR [rip+0xd000]        # 0x14002f608
   140022608:	lea    rcx,[rsi+0x9d0]
   14002260f:	xor    edx,edx
   140022611:	call   QWORD PTR [rip+0xcff1]        # 0x14002f608
   140022617:	xor    edx,edx
   140022619:	lea    rcx,[rsi+0xd30]
   140022620:	call   QWORD PTR [rip+0xcfe2]        # 0x14002f608
   140022626:	xor    edx,edx
   140022628:	lea    rcx,[rsi+0xc58]
   14002262f:	call   QWORD PTR [rip+0xcfd3]        # 0x14002f608
   140022635:	lea    rcx,[rsi+0x3e8]
   14002263c:	xor    edx,edx
   14002263e:	call   QWORD PTR [rip+0xcfc4]        # 0x14002f608
   140022644:	lea    rcx,[rsi+0x598]
   14002264b:	xor    edx,edx
   14002264d:	call   QWORD PTR [rip+0xcfb5]        # 0x14002f608
   140022653:	lea    rcx,[rsi+0x8f8]
   14002265a:	xor    edx,edx
   14002265c:	call   QWORD PTR [rip+0xcfa6]        # 0x14002f608
   140022662:	lea    rcx,[rsi+0x820]
   140022669:	xor    edx,edx
   14002266b:	call   QWORD PTR [rip+0xcf97]        # 0x14002f608
   140022671:	lea    rcx,[rsi+0xe08]
   140022678:	xor    edx,edx
   14002267a:	call   QWORD PTR [rip+0xcf88]        # 0x14002f608
   140022680:	lea    rcx,[rsi+0xb80]
   140022687:	xor    edx,edx
   140022689:	call   QWORD PTR [rip+0xcf79]        # 0x14002f608
   14002268f:	mov    edx,0x3fc
   140022694:	mov    rcx,rsi
   140022697:	call   QWORD PTR [rip+0xd06b]        # 0x14002f708
   14002269d:	mov    rcx,rax
   1400226a0:	xor    edx,edx
   1400226a2:	call   QWORD PTR [rip+0xcf60]        # 0x14002f608
   1400226a8:	mov    edx,0x3fb
   1400226ad:	mov    rcx,rsi
   1400226b0:	call   QWORD PTR [rip+0xd052]        # 0x14002f708
   1400226b6:	mov    rcx,rax
   1400226b9:	xor    edx,edx
   1400226bb:	call   QWORD PTR [rip+0xcf47]        # 0x14002f608
   1400226c1:	lea    rcx,[rsp+0x28]
   1400226c6:	call   QWORD PTR [rip+0xcfc4]        # 0x14002f690
   1400226cc:	nop
   1400226cd:	mov    edx,0x12c
   1400226d2:	lea    rcx,[rsp+0x28]
   1400226d7:	call   QWORD PTR [rip+0xd013]        # 0x14002f6f0
   1400226dd:	mov    rdx,rax
   1400226e0:	mov    r8d,0x12a
   1400226e6:	lea    rcx,[rsi+0xd30]
   1400226ed:	call   QWORD PTR [rip+0xcf3d]        # 0x14002f630
   1400226f3:	or     edx,0xffffffff
   1400226f6:	lea    rcx,[rsp+0x28]
   1400226fb:	call   QWORD PTR [rip+0xcfe7]        # 0x14002f6e8
   140022701:	mov    rdx,QWORD PTR [rsp+0x28]
   140022706:	lea    rcx,[rsp+0x20]
   14002270b:	call   QWORD PTR [rip+0xcf87]        # 0x14002f698
   140022711:	mov    rdx,QWORD PTR [rax]
   140022714:	lea    rcx,[rsp+0x50]
   140022719:	call   QWORD PTR [rip+0xcb39]        # 0x14002f258
   14002271f:	lea    rcx,[rsp+0x20]
   140022724:	call   QWORD PTR [rip+0xd24e]        # 0x14002f978
   14002272a:	cmp    BYTE PTR [rsp+0x50],0x0
   14002272f:	jne    0x14002278f
   140022731:	mov    rdi,QWORD PTR [rsi+0x40]
   140022735:	mov    edx,0xfffffffa
   14002273a:	mov    rcx,rdi
   14002273d:	call   QWORD PTR [rip+0xcd9d]        # 0x14002f4e0
   140022743:	mov    rbx,rax
   140022746:	mov    r9d,0x12c
   14002274c:	lea    r8,[rbp+0x2e0]
   140022753:	mov    edx,0x80
   140022758:	mov    rcx,rax
   14002275b:	call   QWORD PTR [rip+0xcd77]        # 0x14002f4d8
   140022761:	mov    r9d,0x12c
   140022767:	lea    r8,[rbp+0x80]
   14002276e:	mov    edx,0xe726
   140022773:	mov    rcx,rbx
   140022776:	call   QWORD PTR [rip+0xcd5c]        # 0x14002f4d8
   14002277c:	lea    r8,[rbp+0x2e0]
   140022783:	lea    rdx,[rbp+0x80]
   14002278a:	jmp    0x140022854
   14002278f:	mov    edx,0x12c
   140022794:	lea    rcx,[rsp+0x28]
   140022799:	call   QWORD PTR [rip+0xcf51]        # 0x14002f6f0
   14002279f:	mov    rdx,rax
   1400227a2:	mov    r8d,0x12a
   1400227a8:	lea    rcx,[rsi+0xc58]
   1400227af:	call   QWORD PTR [rip+0xce7b]        # 0x14002f630
   1400227b5:	or     edx,0xffffffff
   1400227b8:	lea    rcx,[rsp+0x28]
   1400227bd:	call   QWORD PTR [rip+0xcf25]        # 0x14002f6e8
   1400227c3:	mov    rdx,QWORD PTR [rsp+0x28]
   1400227c8:	lea    rcx,[rsp+0x20]
   1400227cd:	call   QWORD PTR [rip+0xcec5]        # 0x14002f698
   1400227d3:	mov    rdx,QWORD PTR [rax]
   1400227d6:	lea    rcx,[rbp+0x1b0]
   1400227dd:	call   QWORD PTR [rip+0xca75]        # 0x14002f258
   1400227e3:	lea    rcx,[rsp+0x20]
   1400227e8:	call   QWORD PTR [rip+0xd18a]        # 0x14002f978
   1400227ee:	cmp    BYTE PTR [rbp+0x1b0],0x0
   1400227f5:	jne    0x14002288a
   1400227fb:	mov    rdi,QWORD PTR [rsi+0x40]
   1400227ff:	mov    edx,0xfffffffa
   140022804:	mov    rcx,rdi
   140022807:	call   QWORD PTR [rip+0xccd3]        # 0x14002f4e0
   14002280d:	mov    rbx,rax
   140022810:	mov    r9d,0x12c
   140022816:	lea    r8,[rbp+0x80]
   14002281d:	mov    edx,0x80
   140022822:	mov    rcx,rax
   140022825:	call   QWORD PTR [rip+0xccad]        # 0x14002f4d8
   14002282b:	mov    r9d,0x12c
   140022831:	lea    r8,[rbp+0x2e0]
   140022838:	mov    edx,0xe729
   14002283d:	mov    rcx,rbx
   140022840:	call   QWORD PTR [rip+0xcc92]        # 0x14002f4d8
   140022846:	lea    r8,[rbp+0x80]
   14002284d:	lea    rdx,[rbp+0x2e0]
   140022854:	mov    r9d,0x10
   14002285a:	mov    rcx,rdi
   14002285d:	call   QWORD PTR [rip+0xcc85]        # 0x14002f4e8
   140022863:	cmp    DWORD PTR [rip+0x1f38a],0x0        # 0x140041bf4
   14002286a:	je     0x1400229e4
   140022870:	cmp    DWORD PTR [rip+0x1f379],0x0        # 0x140041bf0
   140022877:	jne    0x1400229e4
   14002287d:	xor    ecx,ecx
   14002287f:	call   QWORD PTR [rip+0xcc4b]        # 0x14002f4d0
   140022885:	jmp    0x1400229e4
   14002288a:	mov    ecx,0x10
   14002288f:	call   QWORD PTR [rip+0xd103]        # 0x14002f998
   140022895:	mov    r14,rax
   140022898:	mov    QWORD PTR [rsp+0x38],rax
   14002289d:	xor    ebx,ebx
   14002289f:	test   rax,rax
   1400228a2:	je     0x1400228d9
   1400228a4:	mov    WORD PTR [rax],bx
   1400228a7:	mov    QWORD PTR [rax+0x8],rbx
   1400228ab:	lea    rcx,[rsp+0x50]
   1400228b0:	call   QWORD PTR [rip+0xc9ca]        # 0x14002f280
   1400228b6:	test   eax,eax
   1400228b8:	jle    0x1400228dc
   1400228ba:	inc    eax
   1400228bc:	movsxd rcx,eax
   1400228bf:	call   QWORD PTR [rip+0xd0d3]        # 0x14002f998
   1400228c5:	mov    QWORD PTR [r14+0x8],rax
   1400228c9:	lea    rdx,[rsp+0x50]
   1400228ce:	mov    rcx,rax
   1400228d1:	call   QWORD PTR [rip+0xc981]        # 0x14002f258
   1400228d7:	jmp    0x1400228dc
   1400228d9:	mov    r14,rbx
   1400228dc:	mov    edx,0x1
   1400228e1:	mov    rcx,r14
   1400228e4:	call   0x14002ab70
   1400228e9:	mov    r13,rax
   1400228ec:	test   rax,rax
   1400228ef:	jne    0x1400228fd
   1400228f1:	lea    rdx,[rip+0xffd0]        # 0x1400328c8
   1400228f8:	jmp    0x1400229ce
   1400228fd:	mov    ecx,0x10
   140022902:	call   QWORD PTR [rip+0xd090]        # 0x14002f998
   140022908:	mov    rdi,rax
   14002290b:	mov    QWORD PTR [rsp+0x38],rax
   140022910:	test   rax,rax
   140022913:	je     0x14002294e
   140022915:	mov    WORD PTR [rax],bx
   140022918:	mov    QWORD PTR [rax+0x8],rbx
   14002291c:	lea    rcx,[rbp+0x1b0]
   140022923:	call   QWORD PTR [rip+0xc957]        # 0x14002f280
   140022929:	test   eax,eax
   14002292b:	jle    0x140022951
   14002292d:	inc    eax
   14002292f:	movsxd rcx,eax
   140022932:	call   QWORD PTR [rip+0xd060]        # 0x14002f998
   140022938:	mov    QWORD PTR [rdi+0x8],rax
   14002293c:	lea    rdx,[rbp+0x1b0]
   140022943:	mov    rcx,rax
   140022946:	call   QWORD PTR [rip+0xc90c]        # 0x14002f258
   14002294c:	jmp    0x140022951
   14002294e:	mov    rdi,rbx
   140022951:	mov    edx,0x3
   140022956:	mov    rcx,rdi
   140022959:	call   0x14002ab70
   14002295e:	mov    QWORD PTR [rsp+0x20],rax
   140022963:	test   rax,rax
   140022966:	jne    0x140022971
   140022968:	lea    rdx,[rip+0x11061]        # 0x1400339d0
   14002296f:	jmp    0x1400229ce
   140022971:	lea    rdx,[rbp+0x410]
   140022978:	mov    ecx,0x12c
   14002297d:	call   QWORD PTR [rip+0xc8bd]        # 0x14002f240
   140022983:	lea    r9,[rbp+0x540]
   14002298a:	xor    r8d,r8d
   14002298d:	lea    rdx,[rip+0xffb4]        # 0x140032948
   140022994:	lea    rcx,[rbp+0x410]
   14002299b:	call   QWORD PTR [rip+0xc8a7]        # 0x14002f248
   1400229a1:	lea    rcx,[rbp+0x540]
   1400229a8:	call   0x14002ae90
   1400229ad:	mov    QWORD PTR [rsp+0x38],rax
   1400229b2:	mov    edx,0xb
   1400229b7:	mov    rcx,rax
   1400229ba:	call   0x14002ab70
   1400229bf:	mov    r15,rax
   1400229c2:	test   rax,rax
   1400229c5:	jne    0x1400229f5
   1400229c7:	lea    rdx,[rip+0x1104a]        # 0x140033a18
   1400229ce:	mov    r9d,0x40
   1400229d4:	lea    r8,[rip+0xfecd]        # 0x1400328a8
   1400229db:	mov    rcx,rsi
   1400229de:	call   QWORD PTR [rip+0xccfc]        # 0x14002f6e0
   1400229e4:	mov    rax,QWORD PTR [rsi]
   1400229e7:	mov    rcx,rsi
   1400229ea:	call   QWORD PTR [rax+0x310]
   1400229f0:	jmp    0x140022c78
   1400229f5:	mov    DWORD PTR [rsi+0xee4],0x1
   1400229ff:	mov    DWORD PTR [rsi+0x158],ebx
   140022a05:	inc    DWORD PTR [rip+0x1f1e5]        # 0x140041bf0
   140022a0b:	xor    r9d,r9d
   140022a0e:	xor    r8d,r8d
   140022a11:	mov    edx,0x147
   140022a16:	mov    rcx,QWORD PTR [rsi+0xe48]
   140022a1d:	call   QWORD PTR [rip+0xcadd]        # 0x14002f500
   140022a23:	test   eax,eax
   140022a25:	je     0x140022a6b
   140022a27:	dec    eax
   140022a29:	je     0x140022a59
   140022a2b:	dec    eax
   140022a2d:	je     0x140022a47
   140022a2f:	dec    eax
   140022a31:	jne    0x140022c78
   140022a37:	lea    edx,[rax+0x4]
   140022a3a:	mov    r8,r15
   140022a3d:	mov    rcx,r13
   140022a40:	call   0x140025180
   140022a45:	jmp    0x140022a78
   140022a47:	mov    edx,0x2
   140022a4c:	mov    r8,r15
   140022a4f:	mov    rcx,r13
   140022a52:	call   0x140025180
   140022a57:	jmp    0x140022a78
   140022a59:	mov    edx,0x1
   140022a5e:	mov    r8,r15
   140022a61:	mov    rcx,r13
   140022a64:	call   0x140025180
   140022a69:	jmp    0x140022a78
   140022a6b:	mov    r8,r15
   140022a6e:	lea    rcx,[rsp+0x50]
   140022a73:	call   0x140024590
   140022a78:	movzx  r12d,ax
   140022a7c:	dec    DWORD PTR [rip+0x1f16e]        # 0x140041bf0
   140022a82:	test   ax,ax
   140022a85:	jne    0x140022ab7
   140022a87:	mov    edx,0x3fc
   140022a8c:	mov    rcx,rsi
   140022a8f:	call   QWORD PTR [rip+0xcc63]        # 0x14002f6f8
   140022a95:	lea    r8,[rsp+0x30]
   140022a9a:	mov    rdx,QWORD PTR [rsp+0x20]
   140022a9f:	mov    rcx,r15
   140022aa2:	cmp    eax,0x1
   140022aa5:	jne    0x140022aae
   140022aa7:	call   0x140017d00
   140022aac:	jmp    0x140022ab3
   140022aae:	call   0x1400155a0
   140022ab3:	movzx  r12d,ax
   140022ab7:	mov    ecx,0x64
   140022abc:	mov    r8d,ecx
   140022abf:	lea    rdx,[rip+0xfeba]        # 0x140032980
   140022ac6:	call   0x140022ea0
   140022acb:	mov    rcx,r15
   140022ace:	call   0x14002a9e0
   140022ad3:	mov    rcx,QWORD PTR [rsp+0x20]
   140022ad8:	call   0x14002a9e0
   140022add:	mov    rcx,r13
   140022ae0:	call   0x14002a9e0
   140022ae5:	mov    r15,QWORD PTR [rsp+0x38]
   140022aea:	mov    rcx,QWORD PTR [r15+0x8]
   140022aee:	call   QWORD PTR [rip+0xc704]        # 0x14002f1f8
   140022af4:	mov    rcx,r15
   140022af7:	call   0x14002af10
   140022afc:	mov    rcx,r14
   140022aff:	call   0x14002af10
   140022b04:	mov    rcx,rdi
   140022b07:	call   0x14002af10
   140022b0c:	movzx  edx,r12w
   140022b10:	mov    rcx,QWORD PTR [rsi+0x40]
   140022b14:	call   0x140021b80
   140022b19:	mov    DWORD PTR [rsi+0xee4],ebx
   140022b1f:	xor    edx,edx
   140022b21:	lea    rcx,[rsi+0x670]
   140022b28:	call   QWORD PTR [rip+0xcada]        # 0x14002f608
   140022b2e:	xor    edx,edx
   140022b30:	lea    rcx,[rsi+0x748]
   140022b37:	call   QWORD PTR [rip+0xcacb]        # 0x14002f608
   140022b3d:	xor    edx,edx
   140022b3f:	lea    rcx,[rsi+0x160]
   140022b46:	call   QWORD PTR [rip+0xcabc]        # 0x14002f608
   140022b4c:	xor    edx,edx
   140022b4e:	lea    rcx,[rsi+0x4c0]
   140022b55:	call   QWORD PTR [rip+0xcaad]        # 0x14002f608
   140022b5b:	mov    edx,0x1
   140022b60:	lea    rcx,[rsi+0xaa8]
   140022b67:	call   QWORD PTR [rip+0xca9b]        # 0x14002f608
   140022b6d:	mov    edx,0x1
   140022b72:	lea    rcx,[rsi+0x9d0]
   140022b79:	call   QWORD PTR [rip+0xca89]        # 0x14002f608
   140022b7f:	mov    edx,0x1
   140022b84:	lea    rcx,[rsi+0xd30]
   140022b8b:	call   QWORD PTR [rip+0xca77]        # 0x14002f608
   140022b91:	mov    edx,0x1
   140022b96:	lea    rcx,[rsi+0xc58]
   140022b9d:	call   QWORD PTR [rip+0xca65]        # 0x14002f608
   140022ba3:	mov    edx,0x1
   140022ba8:	lea    rcx,[rsi+0x3e8]
   140022baf:	call   QWORD PTR [rip+0xca53]        # 0x14002f608
   140022bb5:	mov    edx,0x1
   140022bba:	lea    rcx,[rsi+0x598]
   140022bc1:	call   QWORD PTR [rip+0xca41]        # 0x14002f608
   140022bc7:	mov    edx,0x1
   140022bcc:	lea    rcx,[rsi+0x8f8]
   140022bd3:	call   QWORD PTR [rip+0xca2f]        # 0x14002f608
   140022bd9:	mov    edx,0x1
   140022bde:	lea    rcx,[rsi+0x820]
   140022be5:	call   QWORD PTR [rip+0xca1d]        # 0x14002f608
   140022beb:	mov    edx,0x1
   140022bf0:	lea    rcx,[rsi+0xe08]
   140022bf7:	call   QWORD PTR [rip+0xca0b]        # 0x14002f608
   140022bfd:	mov    edx,0x1
   140022c02:	lea    rcx,[rsi+0xb80]
   140022c09:	call   QWORD PTR [rip+0xc9f9]        # 0x14002f608
   140022c0f:	mov    edx,0x3fc
   140022c14:	mov    rcx,rsi
   140022c17:	call   QWORD PTR [rip+0xcaeb]        # 0x14002f708
   140022c1d:	mov    rcx,rax
   140022c20:	mov    edx,0x1
   140022c25:	call   QWORD PTR [rip+0xc9dd]        # 0x14002f608
   140022c2b:	mov    edx,0x3fb
   140022c30:	mov    rcx,rsi
   140022c33:	call   QWORD PTR [rip+0xcacf]        # 0x14002f708
   140022c39:	mov    rcx,rax
   140022c3c:	mov    edx,0x1
   140022c41:	call   QWORD PTR [rip+0xc9c1]        # 0x14002f608
   140022c47:	xor    r9d,r9d
   140022c4a:	xor    r8d,r8d
   140022c4d:	mov    edx,0x402
   140022c52:	mov    rcx,QWORD PTR [rsi+0x350]
   140022c59:	call   QWORD PTR [rip+0xc8a1]        # 0x14002f500
   140022c5f:	xor    r9d,r9d
   140022c62:	xor    r8d,r8d
   140022c65:	mov    edx,0x402
   140022c6a:	mov    rcx,QWORD PTR [rsi+0x278]
   140022c71:	call   QWORD PTR [rip+0xc889]        # 0x14002f500
   140022c77:	nop
   140022c78:	lea    rcx,[rsp+0x28]
   140022c7d:	call   QWORD PTR [rip+0xcd0d]        # 0x14002f990
   140022c83:	mov    rcx,QWORD PTR [rbp+0x670]
   140022c8a:	xor    rcx,rsp
   140022c8d:	call   0x14002c960
   140022c92:	lea    r11,[rsp+0x780]
   140022c9a:	mov    rbx,QWORD PTR [r11+0x38]
   140022c9e:	mov    rsi,QWORD PTR [r11+0x40]
   140022ca2:	mov    rdi,QWORD PTR [r11+0x48]
   140022ca6:	mov    rsp,r11
   140022ca9:	pop    r15
   140022cab:	pop    r14
   140022cad:	pop    r13
   140022caf:	pop    r12
   140022cb1:	pop    rbp
   140022cb2:	ret    
   140022cb3:	int3   
   140022cb4:	int3   
   140022cb5:	int3   
   140022cb6:	int3   
   140022cb7:	int3   
   140022cb8:	int3   
   140022cb9:	int3   
   140022cba:	int3   
   140022cbb:	int3   
   140022cbc:	int3   
   140022cbd:	int3   
   140022cbe:	int3   
   140022cbf:	int3   
   140022cc0:	rex push rbx
   140022cc2:	sub    rsp,0x20
   140022cc6:	cmp    DWORD PTR [rcx+0xee4],0x0
   140022ccd:	mov    rbx,rcx
   140022cd0:	je     0x140022ce2
   140022cd2:	mov    DWORD PTR [rcx+0x158],0x1
   140022cdc:	add    rsp,0x20
   140022ce0:	pop    rbx
   140022ce1:	ret    
   140022ce2:	add    rcx,0x4c0
   140022ce9:	mov    QWORD PTR [rsp+0x30],rdi
   140022cee:	call   QWORD PTR [rip+0xc91c]        # 0x14002f610
   140022cf4:	cmp    eax,0x1
   140022cf7:	jne    0x140022e55
   140022cfd:	lea    rcx,[rbx+0x670]
   140022d04:	xor    edx,edx
   140022d06:	call   QWORD PTR [rip+0xc8fc]        # 0x14002f608
   140022d0c:	lea    rcx,[rbx+0x748]
   140022d13:	xor    edx,edx
   140022d15:	call   QWORD PTR [rip+0xc8ed]        # 0x14002f608
   140022d1b:	lea    rcx,[rbx+0x160]
   140022d22:	xor    edx,edx
   140022d24:	call   QWORD PTR [rip+0xc8de]        # 0x14002f608
   140022d2a:	lea    rcx,[rbx+0x4c0]
   140022d31:	xor    edx,edx
   140022d33:	call   QWORD PTR [rip+0xc8cf]        # 0x14002f608
   140022d39:	lea    rcx,[rbx+0xaa8]
   140022d40:	mov    edx,0x1
   140022d45:	call   QWORD PTR [rip+0xc8bd]        # 0x14002f608
   140022d4b:	lea    rcx,[rbx+0x9d0]
   140022d52:	mov    edx,0x1
   140022d57:	call   QWORD PTR [rip+0xc8ab]        # 0x14002f608
   140022d5d:	lea    rcx,[rbx+0xd30]
   140022d64:	mov    edx,0x1
   140022d69:	call   QWORD PTR [rip+0xc899]        # 0x14002f608
   140022d6f:	lea    rcx,[rbx+0xc58]
   140022d76:	mov    edx,0x1
   140022d7b:	call   QWORD PTR [rip+0xc887]        # 0x14002f608
   140022d81:	lea    rcx,[rbx+0x3e8]
   140022d88:	mov    edx,0x1
   140022d8d:	call   QWORD PTR [rip+0xc875]        # 0x14002f608
   140022d93:	lea    rcx,[rbx+0x598]
   140022d9a:	mov    edx,0x1
   140022d9f:	call   QWORD PTR [rip+0xc863]        # 0x14002f608
   140022da5:	lea    rcx,[rbx+0x8f8]
   140022dac:	mov    edx,0x1
   140022db1:	call   QWORD PTR [rip+0xc851]        # 0x14002f608
   140022db7:	lea    rcx,[rbx+0x820]
   140022dbe:	mov    edx,0x1
   140022dc3:	call   QWORD PTR [rip+0xc83f]        # 0x14002f608
   140022dc9:	lea    rcx,[rbx+0xe08]
   140022dd0:	mov    edx,0x1
   140022dd5:	call   QWORD PTR [rip+0xc82d]        # 0x14002f608
   140022ddb:	lea    rcx,[rbx+0xb80]
   140022de2:	mov    edx,0x1
   140022de7:	call   QWORD PTR [rip+0xc81b]        # 0x14002f608
   140022ded:	mov    edx,0x3fc
   140022df2:	mov    rcx,rbx
   140022df5:	call   QWORD PTR [rip+0xc90d]        # 0x14002f708
   140022dfb:	mov    edx,0x1
   140022e00:	mov    rcx,rax
   140022e03:	call   QWORD PTR [rip+0xc7ff]        # 0x14002f608
   140022e09:	mov    edx,0x3fb
   140022e0e:	mov    rcx,rbx
   140022e11:	call   QWORD PTR [rip+0xc8f1]        # 0x14002f708
   140022e17:	mov    edx,0x1
   140022e1c:	mov    rcx,rax
   140022e1f:	call   QWORD PTR [rip+0xc7e3]        # 0x14002f608
   140022e25:	mov    rcx,QWORD PTR [rbx+0x350]
   140022e2c:	xor    r9d,r9d
   140022e2f:	xor    r8d,r8d
   140022e32:	mov    edx,0x402
   140022e37:	call   QWORD PTR [rip+0xc6c3]        # 0x14002f500
   140022e3d:	mov    rcx,QWORD PTR [rbx+0x278]
   140022e44:	xor    r9d,r9d
   140022e47:	xor    r8d,r8d
   140022e4a:	mov    edx,0x402
   140022e4f:	call   QWORD PTR [rip+0xc6ab]        # 0x14002f500
   140022e55:	mov    rdi,QWORD PTR [rsp+0x30]
   140022e5a:	add    rsp,0x20
   140022e5e:	pop    rbx
   140022e5f:	ret    
   140022e60:	mov    r9d,0x3fc
   140022e66:	mov    edx,0x3fb
   140022e6b:	mov    r8d,r9d
   140022e6e:	rex.W jmp QWORD PTR [rip+0xc88b]        # 0x14002f700
   140022e75:	int3   
   140022e76:	int3   
   140022e77:	int3   
   140022e78:	int3   
   140022e79:	int3   
   140022e7a:	int3   
   140022e7b:	int3   
   140022e7c:	int3   
   140022e7d:	int3   
   140022e7e:	int3   
   140022e7f:	int3   
   140022e80:	mov    edx,0x3fb
   140022e85:	mov    r9d,edx
   140022e88:	lea    r8d,[rdx+0x1]
   140022e8c:	rex.W jmp QWORD PTR [rip+0xc86d]        # 0x14002f700
   140022e93:	int3   
   140022e94:	int3   
   140022e95:	int3   
   140022e96:	int3   
   140022e97:	int3   
   140022e98:	int3   
   140022e99:	int3   
   140022e9a:	int3   
   140022e9b:	int3   
   140022e9c:	int3   
   140022e9d:	int3   
   140022e9e:	int3   
   140022e9f:	int3   
   140022ea0:	rex push rbp
   140022ea2:	push   rsi
   140022ea3:	push   rdi
   140022ea4:	sub    rsp,0x1b0
   140022eab:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140022eb4:	mov    QWORD PTR [rsp+0x1e8],rbx
   140022ebc:	mov    rax,QWORD PTR [rip+0x1913d]        # 0x14003c000
   140022ec3:	xor    rax,rsp
   140022ec6:	mov    QWORD PTR [rsp+0x1a0],rax
   140022ece:	movzx  esi,r8w
   140022ed2:	movzx  edi,cx
   140022ed5:	mov    r8,QWORD PTR [rip+0x1a41c]        # 0x14003d2f8
   140022edc:	lea    rcx,[rsp+0x70]
   140022ee1:	call   0x14002b010
   140022ee6:	call   QWORD PTR [rip+0xc994]        # 0x14002f880
   140022eec:	xor    ebp,ebp
   140022eee:	test   rax,rax
   140022ef1:	je     0x140022f04
   140022ef3:	mov    rdx,QWORD PTR [rax]
   140022ef6:	mov    rcx,rax
   140022ef9:	call   QWORD PTR [rdx+0xf8]
   140022eff:	mov    rbx,rax
   140022f02:	jmp    0x140022f07
   140022f04:	mov    rbx,rbp
   140022f07:	movzx  r8d,si
   140022f0b:	xor    r9d,r9d
   140022f0e:	mov    edx,0x402
   140022f13:	mov    rcx,QWORD PTR [rbx+0x1648]
   140022f1a:	call   QWORD PTR [rip+0xc5e0]        # 0x14002f500
   140022f20:	lea    rdx,[rsp+0x70]
   140022f25:	lea    rcx,[rsp+0x30]
   140022f2a:	call   QWORD PTR [rip+0xc758]        # 0x14002f688
   140022f30:	nop
   140022f31:	lea    rcx,[rbx+0x1a40]
   140022f38:	mov    rdx,QWORD PTR [rax]
   140022f3b:	call   QWORD PTR [rip+0xc6f7]        # 0x14002f638
   140022f41:	nop
   140022f42:	lea    rcx,[rsp+0x30]
   140022f47:	call   QWORD PTR [rip+0xca43]        # 0x14002f990
   140022f4d:	movzx  r8d,di
   140022f51:	xor    r9d,r9d
   140022f54:	mov    edx,0x402
   140022f59:	mov    rcx,QWORD PTR [rbx+0x1570]
   140022f60:	call   QWORD PTR [rip+0xc59a]        # 0x14002f500
   140022f66:	mov    edi,0x1
   140022f6b:	mov    DWORD PTR [rsp+0x20],edi
   140022f6f:	xor    r9d,r9d
   140022f72:	xor    r8d,r8d
   140022f75:	xor    edx,edx
   140022f77:	lea    rcx,[rsp+0x40]
   140022f7c:	call   QWORD PTR [rip+0xc576]        # 0x14002f4f8
   140022f82:	test   eax,eax
   140022f84:	je     0x140022fc1
   140022f86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022f90:	lea    rcx,[rsp+0x40]
   140022f95:	call   QWORD PTR [rip+0xc555]        # 0x14002f4f0
   140022f9b:	lea    rcx,[rsp+0x40]
   140022fa0:	call   QWORD PTR [rip+0xc56a]        # 0x14002f510
   140022fa6:	mov    DWORD PTR [rsp+0x20],edi
   140022faa:	xor    r9d,r9d
   140022fad:	xor    r8d,r8d
   140022fb0:	xor    edx,edx
   140022fb2:	lea    rcx,[rsp+0x40]
   140022fb7:	call   QWORD PTR [rip+0xc53b]        # 0x14002f4f8
   140022fbd:	test   eax,eax
   140022fbf:	jne    0x140022f90
   140022fc1:	cmp    DWORD PTR [rbx+0x1450],0x0
   140022fc8:	jne    0x140022fd6
   140022fca:	cmp    DWORD PTR [rip+0x1ec23],0x0        # 0x140041bf4
   140022fd1:	movzx  eax,bp
   140022fd4:	je     0x140022fd9
   140022fd6:	movzx  eax,di
   140022fd9:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140022fe1:	xor    rcx,rsp
   140022fe4:	call   0x14002c960
   140022fe9:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140022ff1:	add    rsp,0x1b0
   140022ff8:	pop    rdi
   140022ff9:	pop    rsi
   140022ffa:	pop    rbp
   140022ffb:	ret    
   140022ffc:	int3   
   140022ffd:	int3   
   140022ffe:	int3   
   140022fff:	int3   
   140023000:	rex push rbx
   140023002:	sub    rsp,0x4f0
   140023009:	mov    rax,QWORD PTR [rip+0x18ff0]        # 0x14003c000
   140023010:	xor    rax,rsp
   140023013:	mov    QWORD PTR [rsp+0x4e0],rax
   14002301b:	mov    rbx,rcx
   14002301e:	lea    rdx,[rsp+0x20]
   140023023:	mov    r8d,0x12a
   140023029:	add    rcx,0xd30
   140023030:	call   QWORD PTR [rip+0xc5fa]        # 0x14002f630
   140023036:	lea    rcx,[rbx+0xc58]
   14002303d:	lea    rdx,[rsp+0x280]
   140023045:	mov    r8d,0x12a
   14002304b:	call   QWORD PTR [rip+0xc5df]        # 0x14002f630
   140023051:	cmp    WORD PTR [rsp+0x20],0x0
   140023057:	je     0x14002306b
   140023059:	cmp    WORD PTR [rsp+0x280],0x0
   140023062:	je     0x14002306b
   140023064:	mov    edx,0x1
   140023069:	jmp    0x14002306d
   14002306b:	xor    edx,edx
   14002306d:	lea    rcx,[rbx+0x3e8]
   140023074:	call   QWORD PTR [rip+0xc58e]        # 0x14002f608
   14002307a:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140023082:	xor    rcx,rsp
   140023085:	call   0x14002c960
   14002308a:	add    rsp,0x4f0
   140023091:	pop    rbx
   140023092:	ret    
   140023093:	int3   
   140023094:	int3   
   140023095:	int3   
   140023096:	int3   
   140023097:	int3   
   140023098:	int3   
   140023099:	int3   
   14002309a:	int3   
   14002309b:	int3   
   14002309c:	int3   
   14002309d:	int3   
   14002309e:	int3   
   14002309f:	int3   
   1400230a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400230a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400230aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400230af:	push   rdi
   1400230b0:	push   r12
   1400230b2:	push   r13
   1400230b4:	push   r14
   1400230b6:	push   r15
   1400230b8:	sub    rsp,0xc50
   1400230bf:	mov    rax,QWORD PTR [rip+0x18f3a]        # 0x14003c000
   1400230c6:	xor    rax,rsp
   1400230c9:	mov    QWORD PTR [rsp+0xc40],rax
   1400230d1:	xor    r13d,r13d
   1400230d4:	mov    r15,r8
   1400230d7:	mov    edi,edx
   1400230d9:	mov    rbp,rcx
   1400230dc:	lea    r14d,[r13+0xa]
   1400230e0:	mov    esi,r13d
   1400230e3:	test   edx,edx
   1400230e5:	jle    0x1400232a0
   1400230eb:	mov    r12d,0xcc
   1400230f1:	inc    r14w
   1400230f5:	cmp    r14w,0x64
   1400230fa:	jbe    0x140023100
   1400230fc:	movzx  r14d,r13w
   140023100:	lea    rdx,[rip+0x10a49]        # 0x140033b50
   140023107:	xor    ecx,ecx
   140023109:	movzx  r8d,r14w
   14002310d:	call   QWORD PTR [rip+0x1e995]        # 0x140041aa8
   140023113:	test   ax,ax
   140023116:	jne    0x1400232d8
   14002311c:	lea    ebx,[rsi+0x2]
   14002311f:	movsxd rax,esi
   140023122:	lea    rdx,[rsp+0x40]
   140023127:	movzx  ecx,WORD PTR [rax+rbp*1]
   14002312b:	mov    WORD PTR [rsp+0x40],r13w
   140023131:	cmp    ebx,edi
   140023133:	jg     0x1400232a0
   140023139:	cmp    cx,0x5c
   14002313d:	jne    0x140023153
   14002313f:	movsxd rax,ebx
   140023142:	add    ebx,0x2
   140023145:	movzx  ecx,WORD PTR [rax+rbp*1]
   140023149:	cmp    cx,0x5c
   14002314d:	jne    0x1400232a0
   140023153:	cmp    cx,r12w
   140023157:	je     0x14002317c
   140023159:	movsxd r8,ebx
   14002315c:	add    r8,rbp
   14002315f:	nop
   140023160:	mov    WORD PTR [rdx],cx
   140023163:	add    rdx,0x2
   140023167:	cmp    ebx,edi
   140023169:	jg     0x14002317c
   14002316b:	movzx  ecx,WORD PTR [r8]
   14002316f:	add    ebx,0x2
   140023172:	add    r8,0x2
   140023176:	cmp    cx,r12w
   14002317a:	jne    0x140023160
   14002317c:	sub    ebx,esi
   14002317e:	mov    WORD PTR [rdx],r13w
   140023182:	test   ebx,ebx
   140023184:	jle    0x1400232a0
   14002318a:	lea    rax,[rsp+0x40]
   14002318f:	mov    ecx,r13d
   140023192:	cmp    BYTE PTR [rax],r13b
   140023195:	jne    0x14002319d
   140023197:	cmp    BYTE PTR [rax+0x1],r13b
   14002319b:	je     0x1400231a5
   14002319d:	add    rax,0x2
   1400231a1:	inc    ecx
   1400231a3:	jmp    0x140023192
   1400231a5:	lea    eax,[rcx+rcx*1]
   1400231a8:	test   eax,eax
   1400231aa:	je     0x140023296
   1400231b0:	lea    rax,[rsp+0x30]
   1400231b5:	lea    r8d,[rbx+rsi*1]
   1400231b9:	lea    r9,[rsp+0x840]
   1400231c1:	mov    edx,edi
   1400231c3:	mov    rcx,rbp
   1400231c6:	mov    QWORD PTR [rsp+0x20],rax
   1400231cb:	call   0x140023770
   1400231d0:	mov    r11d,eax
   1400231d3:	cmp    eax,0xffffffff
   1400231d6:	je     0x1400232a0
   1400231dc:	lea    r10d,[rax+rbx*1]
   1400231e0:	lea    r8,[rsp+0x440]
   1400231e8:	mov    WORD PTR [rsp+0x440],r13w
   1400231f1:	add    r10d,esi
   1400231f4:	movsxd rcx,r10d
   1400231f7:	lea    eax,[r10+0x2]
   1400231fb:	cmp    WORD PTR [rcx+rbp*1],0x5c
   140023200:	je     0x140023207
   140023202:	mov    eax,r13d
   140023205:	jmp    0x14002325c
   140023207:	cmp    eax,edi
   140023209:	jg     0x140023254
   14002320b:	movsxd rcx,eax
   14002320e:	add    eax,0x2
   140023211:	cmp    WORD PTR [rcx+rbp*1],0x23
   140023216:	je     0x14002321d
   140023218:	mov    eax,r13d
   14002321b:	jmp    0x14002325c
   14002321d:	movsxd rcx,eax
   140023220:	add    eax,0x2
   140023223:	movzx  edx,WORD PTR [rcx+rbp*1]
   140023227:	cmp    dx,r12w
   14002322b:	je     0x140023250
   14002322d:	movsxd r9,eax
   140023230:	add    r9,rbp
   140023233:	mov    WORD PTR [r8],dx
   140023237:	add    r8,0x2
   14002323b:	cmp    eax,edi
   14002323d:	jg     0x140023250
   14002323f:	movzx  edx,WORD PTR [r9]
   140023243:	add    eax,0x2
   140023246:	add    r9,0x2
   14002324a:	cmp    dx,r12w
   14002324e:	jne    0x140023233
   140023250:	mov    WORD PTR [r8],r13w
   140023254:	sub    eax,r10d
   140023257:	cmp    eax,0xffffffff
   14002325a:	je     0x1400232a0
   14002325c:	lea    ecx,[rax+r11*1]
   140023260:	add    ebx,ecx
   140023262:	cmp    ebx,0x400
   140023268:	jg     0x1400232a0
   14002326a:	movzx  edx,BYTE PTR [rsp+0x30]
   14002326f:	lea    rax,[rsp+0x840]
   140023277:	lea    r9,[rsp+0x440]
   14002327f:	lea    r8,[rsp+0x40]
   140023284:	mov    rcx,r15
   140023287:	mov    QWORD PTR [rsp+0x20],rax
   14002328c:	call   0x1400238e0
   140023291:	test   ax,ax
   140023294:	jne    0x1400232a0
   140023296:	add    esi,ebx
   140023298:	cmp    esi,edi
   14002329a:	jl     0x1400230f1
   1400232a0:	cmp    edi,esi
   1400232a2:	cmovb  esi,edi
   1400232a5:	mov    eax,esi
   1400232a7:	mov    rcx,QWORD PTR [rsp+0xc40]
   1400232af:	xor    rcx,rsp
   1400232b2:	call   0x14002c960
   1400232b7:	lea    r11,[rsp+0xc50]
   1400232bf:	mov    rbx,QWORD PTR [r11+0x30]
   1400232c3:	mov    rbp,QWORD PTR [r11+0x38]
   1400232c7:	mov    rsi,QWORD PTR [r11+0x48]
   1400232cb:	mov    rsp,r11
   1400232ce:	pop    r15
   1400232d0:	pop    r14
   1400232d2:	pop    r13
   1400232d4:	pop    r12
   1400232d6:	pop    rdi
   1400232d7:	ret    
   1400232d8:	mov    eax,0x6
   1400232dd:	jmp    0x1400232a7
   1400232df:	int3   
   1400232e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400232e5:	push   rbp
   1400232e6:	push   rsi
   1400232e7:	push   rdi
   1400232e8:	push   r12
   1400232ea:	push   r13
   1400232ec:	push   r14
   1400232ee:	push   r15
   1400232f0:	lea    rbp,[rsp-0x850]
   1400232f8:	sub    rsp,0x950
   1400232ff:	mov    rax,QWORD PTR [rip+0x18cfa]        # 0x14003c000
   140023306:	xor    rax,rsp
   140023309:	mov    QWORD PTR [rbp+0x840],rax
   140023310:	mov    r13,rdx
   140023313:	mov    r15,rcx
   140023316:	mov    dil,0x1
   140023319:	mov    r12d,0xa
   14002331f:	xor    r14d,r14d
   140023322:	inc    r12w
   140023326:	cmp    r12w,0x64
   14002332b:	jbe    0x140023331
   14002332d:	movzx  r12d,r14w
   140023331:	lea    rdx,[rip+0x10818]        # 0x140033b50
   140023338:	xor    ecx,ecx
   14002333a:	movzx  r8d,r12w
   14002333e:	call   QWORD PTR [rip+0x1e764]        # 0x140041aa8
   140023344:	test   ax,ax
   140023347:	jne    0x140023738
   14002334d:	lea    r9,[rsp+0x30]
   140023352:	lea    r8,[rbp+0x40]
   140023356:	movzx  edx,dil
   14002335a:	mov    rcx,r15
   14002335d:	mov    esi,r14d
   140023360:	lea    rbx,[rbp+0x440]
   140023367:	call   QWORD PTR [rip+0xc943]        # 0x14002fcb0
   14002336d:	mov    ecx,0x406
   140023372:	cmp    ax,cx
   140023375:	je     0x140023734
   14002337b:	movzx  ecx,BYTE PTR [rsp+0x30]
   140023380:	dec    ecx
   140023382:	je     0x140023570
   140023388:	dec    ecx
   14002338a:	je     0x1400233ef
   14002338c:	test   dil,dil
   14002338f:	jne    0x1400233a4
   140023391:	mov    BYTE PTR [rbp+0x440],0xcc
   140023398:	lea    rbx,[rbp+0x441]
   14002339f:	mov    esi,0x1
   1400233a4:	movzx  eax,WORD PTR [rbp+0x40]
   1400233a8:	lea    rcx,[rbp+0x40]
   1400233ac:	movzx  edx,r14w
   1400233b0:	test   ax,ax
   1400233b3:	je     0x1400233e0
   1400233b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400233c0:	mov    BYTE PTR [rbx],0xf0
   1400233c3:	mov    WORD PTR [rbx+0x1],ax
   1400233c7:	movzx  eax,WORD PTR [rcx+0x2]
   1400233cb:	lea    rcx,[rcx+0x2]
   1400233cf:	mov    BYTE PTR [rbx+0x3],0xf0
   1400233d3:	add    rbx,0x4
   1400233d7:	add    dx,0x4
   1400233db:	test   ax,ax
   1400233de:	jne    0x1400233c0
   1400233e0:	movzx  eax,dx
   1400233e3:	mov    WORD PTR [rbx],0x0
   1400233e8:	add    esi,eax
   1400233ea:	jmp    0x1400236d1
   1400233ef:	movzx  ecx,WORD PTR [rbp+0x40]
   1400233f3:	mov    BYTE PTR [rbp+0x440],0xcc
   1400233fa:	lea    rax,[rbp+0x441]
   140023401:	lea    rdx,[rbp+0x40]
   140023405:	movzx  r8d,r14w
   140023409:	test   cx,cx
   14002340c:	je     0x140023431
   14002340e:	xchg   ax,ax
   140023410:	mov    BYTE PTR [rax],0xf0
   140023413:	mov    WORD PTR [rax+0x1],cx
   140023417:	movzx  ecx,WORD PTR [rdx+0x2]
   14002341b:	lea    rdx,[rdx+0x2]
   14002341f:	mov    BYTE PTR [rax+0x3],0xf0
   140023423:	add    rax,0x4
   140023427:	add    r8w,0x4
   14002342c:	test   cx,cx
   14002342f:	jne    0x140023410
   140023431:	mov    WORD PTR [rax],0x0
   140023436:	movzx  eax,r8w
   14002343a:	lea    rdi,[rbp+0x441]
   140023441:	lea    esi,[rax+0x1]
   140023444:	mov    bl,0x1
   140023446:	add    rdi,rax
   140023449:	nop    DWORD PTR [rax+0x0]
   140023450:	lea    rdx,[rsp+0x40]
   140023455:	movzx  r8d,bl
   140023459:	mov    rcx,r15
   14002345c:	call   QWORD PTR [rip+0xc866]        # 0x14002fcc8
   140023462:	movzx  ecx,WORD PTR [rsp+0x40]
   140023467:	mov    r14d,eax
   14002346a:	mov    eax,0x3fe
   14002346f:	cmp    cx,ax
   140023472:	jb     0x140023476
   140023474:	mov    ecx,eax
   140023476:	movzx  ebx,cx
   140023479:	lea    rdx,[rsp+0x42]
   14002347e:	lea    rcx,[rbp+0x40]
   140023482:	mov    r8d,ebx
   140023485:	call   QWORD PTR [rip+0xbffd]        # 0x14002f488
   14002348b:	xor    eax,eax
   14002348d:	mov    WORD PTR [rbp+rbx*1+0x40],ax
   140023492:	mov    eax,0x406
   140023497:	cmp    r14d,eax
   14002349a:	je     0x1400236ce
   1400234a0:	movzx  ecx,WORD PTR [rbp+0x40]
   1400234a4:	mov    WORD PTR [rdi],0x5ccc
   1400234a9:	xor    r14d,r14d
   1400234ac:	mov    BYTE PTR [rdi+0x2],0x7c
   1400234b0:	add    rdi,0x3
   1400234b4:	xor    bl,bl
   1400234b6:	add    esi,0x3
   1400234b9:	lea    rdx,[rbp+0x40]
   1400234bd:	movzx  r8d,r14w
   1400234c1:	mov    rax,rdi
   1400234c4:	test   cx,cx
   1400234c7:	je     0x1400234f1
   1400234c9:	nop    DWORD PTR [rax+0x0]
   1400234d0:	mov    BYTE PTR [rax],0xf0
   1400234d3:	mov    WORD PTR [rax+0x1],cx
   1400234d7:	movzx  ecx,WORD PTR [rdx+0x2]
   1400234db:	lea    rdx,[rdx+0x2]
   1400234df:	mov    BYTE PTR [rax+0x3],0xf0
   1400234e3:	add    rax,0x4
   1400234e7:	add    r8w,0x4
   1400234ec:	test   cx,cx
   1400234ef:	jne    0x1400234d0
   1400234f1:	mov    WORD PTR [rax],r14w
   1400234f5:	movzx  eax,r8w
   1400234f9:	lea    rdx,[rbp+0x40]
   1400234fd:	mov    rcx,r15
   140023500:	add    esi,eax
   140023502:	add    rdi,rax
   140023505:	call   QWORD PTR [rip+0xc7ad]        # 0x14002fcb8
   14002350b:	test   eax,eax
   14002350d:	jne    0x140023450
   140023513:	movzx  ecx,WORD PTR [rbp+0x40]
   140023517:	mov    WORD PTR [rdi],0x5ccc
   14002351c:	mov    BYTE PTR [rdi+0x2],0x23
   140023520:	add    rdi,0x3
   140023524:	add    esi,0x3
   140023527:	lea    rdx,[rbp+0x40]
   14002352b:	mov    rax,rdi
   14002352e:	movzx  r8d,r14w
   140023532:	test   cx,cx
   140023535:	je     0x140023561
   140023537:	nop    WORD PTR [rax+rax*1+0x0]
   140023540:	mov    BYTE PTR [rax],0xf0
   140023543:	mov    WORD PTR [rax+0x1],cx
   140023547:	movzx  ecx,WORD PTR [rdx+0x2]
   14002354b:	lea    rdx,[rdx+0x2]
   14002354f:	mov    BYTE PTR [rax+0x3],0xf0
   140023553:	add    rax,0x4
   140023557:	add    r8w,0x4
   14002355c:	test   cx,cx
   14002355f:	jne    0x140023540
   140023561:	mov    WORD PTR [rax],r14w
   140023565:	movzx  eax,r8w
   140023569:	add    esi,eax
   14002356b:	jmp    0x140023446
   140023570:	movzx  ecx,WORD PTR [rbp+0x40]
   140023574:	mov    BYTE PTR [rbp+0x440],0xcc
   14002357b:	lea    rax,[rbp+0x441]
   140023582:	lea    rdx,[rbp+0x40]
   140023586:	movzx  r8d,r14w
   14002358a:	test   cx,cx
   14002358d:	je     0x1400235b1
   14002358f:	nop
   140023590:	mov    BYTE PTR [rax],0xf0
   140023593:	mov    WORD PTR [rax+0x1],cx
   140023597:	movzx  ecx,WORD PTR [rdx+0x2]
   14002359b:	lea    rdx,[rdx+0x2]
   14002359f:	mov    BYTE PTR [rax+0x3],0xf0
   1400235a3:	add    rax,0x4
   1400235a7:	add    r8w,0x4
   1400235ac:	test   cx,cx
   1400235af:	jne    0x140023590
   1400235b1:	movzx  ecx,r8w
   1400235b5:	mov    WORD PTR [rax],0x0
   1400235ba:	lea    rdi,[rbp+0x441]
   1400235c1:	add    rdi,rcx
   1400235c4:	mov    eax,ecx
   1400235c6:	lea    esi,[rcx+0x4]
   1400235c9:	mov    WORD PTR [rdi],0x5ccc
   1400235ce:	mov    BYTE PTR [rdi+0x2],0x3d
   1400235d2:	lea    rdx,[rsp+0x40]
   1400235d7:	mov    r8d,0x1
   1400235dd:	mov    rcx,r15
   1400235e0:	add    rdi,0x3
   1400235e4:	call   QWORD PTR [rip+0xc6de]        # 0x14002fcc8
   1400235ea:	movzx  eax,WORD PTR [rsp+0x40]
   1400235ef:	mov    ecx,0x3fe
   1400235f4:	cmp    ax,cx
   1400235f7:	jb     0x1400235fb
   1400235f9:	mov    eax,ecx
   1400235fb:	movzx  ebx,ax
   1400235fe:	lea    rdx,[rsp+0x42]
   140023603:	lea    rcx,[rbp+0x40]
   140023607:	mov    r8d,ebx
   14002360a:	call   QWORD PTR [rip+0xbe78]        # 0x14002f488
   140023610:	xor    eax,eax
   140023612:	lea    rcx,[rbp+0x40]
   140023616:	mov    WORD PTR [rbp+rbx*1+0x40],ax
   14002361b:	movzx  edx,WORD PTR [rbp+0x40]
   14002361f:	movzx  r8d,r14w
   140023623:	mov    rax,rdi
   140023626:	test   dx,dx
   140023629:	je     0x140023651
   14002362b:	nop    DWORD PTR [rax+rax*1+0x0]
   140023630:	mov    BYTE PTR [rax],0xf0
   140023633:	mov    WORD PTR [rax+0x1],dx
   140023637:	movzx  edx,WORD PTR [rcx+0x2]
   14002363b:	lea    rcx,[rcx+0x2]
   14002363f:	mov    BYTE PTR [rax+0x3],0xf0
   140023643:	add    rax,0x4
   140023647:	add    r8w,0x4
   14002364c:	test   dx,dx
   14002364f:	jne    0x140023630
   140023651:	mov    WORD PTR [rax],0x0
   140023656:	movzx  eax,r8w
   14002365a:	lea    rdx,[rbp+0x40]
   14002365e:	mov    rcx,r15
   140023661:	add    esi,eax
   140023663:	add    rdi,rax
   140023666:	call   QWORD PTR [rip+0xc64c]        # 0x14002fcb8
   14002366c:	test   eax,eax
   14002366e:	jne    0x1400236d1
   140023670:	movzx  ecx,WORD PTR [rbp+0x40]
   140023674:	mov    WORD PTR [rdi],0x5ccc
   140023679:	add    rdi,0x2
   14002367d:	add    esi,0x3
   140023680:	lea    rdx,[rbp+0x40]
   140023684:	movzx  r8d,r14w
   140023688:	mov    BYTE PTR [rdi],0x23
   14002368b:	lea    rax,[rdi+0x1]
   14002368f:	test   cx,cx
   140023692:	je     0x1400236c1
   140023694:	nop    DWORD PTR [rax+0x0]
   140023698:	nop    DWORD PTR [rax+rax*1+0x0]
   1400236a0:	mov    BYTE PTR [rax],0xf0
   1400236a3:	mov    WORD PTR [rax+0x1],cx
   1400236a7:	movzx  ecx,WORD PTR [rdx+0x2]
   1400236ab:	lea    rdx,[rdx+0x2]
   1400236af:	mov    BYTE PTR [rax+0x3],0xf0
   1400236b3:	add    rax,0x4
   1400236b7:	add    r8w,0x4
   1400236bc:	test   cx,cx
   1400236bf:	jne    0x1400236a0
   1400236c1:	mov    WORD PTR [rax],0x0
   1400236c6:	movzx  eax,r8w
   1400236ca:	add    esi,eax
   1400236cc:	jmp    0x1400236d1
   1400236ce:	xor    r14d,r14d
   1400236d1:	mov    rcx,QWORD PTR [r13+0x0]
   1400236d5:	lea    r9,[rsp+0x34]
   1400236da:	lea    rdx,[rbp+0x440]
   1400236e1:	mov    r8d,esi
   1400236e4:	xor    dil,dil
   1400236e7:	mov    QWORD PTR [rsp+0x20],r14
   1400236ec:	call   QWORD PTR [rip+0xbb1e]        # 0x14002f210
   1400236f2:	test   eax,eax
   1400236f4:	jne    0x140023322
   1400236fa:	call   QWORD PTR [rip+0xba60]        # 0x14002f160
   140023700:	cmp    eax,0x58
   140023703:	jae    0x140023713
   140023705:	lea    rcx,[rip+0xd994]        # 0x1400310a0
   14002370c:	mov    eax,eax
   14002370e:	mov    ecx,DWORD PTR [rcx+rax*4]
   140023711:	jmp    0x140023718
   140023713:	mov    ecx,0x106
   140023718:	mov    DWORD PTR [rip+0x1f99a],ecx        # 0x1400430b8
   14002371e:	mov    DWORD PTR [rip+0x1fda0],0x2        # 0x1400434c8
   140023728:	mov    BYTE PTR [rip+0x1fc91],0x0        # 0x1400433c0
   14002372f:	jmp    0x140023322
   140023734:	xor    eax,eax
   140023736:	jmp    0x14002373d
   140023738:	mov    eax,0x6
   14002373d:	mov    rcx,QWORD PTR [rbp+0x840]
   140023744:	xor    rcx,rsp
   140023747:	call   0x14002c960
   14002374c:	mov    rbx,QWORD PTR [rsp+0x9a0]
   140023754:	add    rsp,0x950
   14002375b:	pop    r15
   14002375d:	pop    r14
   14002375f:	pop    r13
   140023761:	pop    r12
   140023763:	pop    rdi
   140023764:	pop    rsi
   140023765:	pop    rbp
   140023766:	ret    
   140023767:	int3   
   140023768:	int3   
   140023769:	int3   
   14002376a:	int3   
   14002376b:	int3   
   14002376c:	int3   
   14002376d:	int3   
   14002376e:	int3   
   14002376f:	int3   
   140023770:	mov    QWORD PTR [rsp+0x8],rbx
   140023775:	mov    QWORD PTR [rsp+0x10],rsi
   14002377a:	mov    QWORD PTR [rsp+0x18],rdi
   14002377f:	mov    rbx,QWORD PTR [rsp+0x28]
   140023784:	xor    esi,esi
   140023786:	movsxd rdi,r8d
   140023789:	lea    r10d,[rdi+0x2]
   14002378d:	mov    r11,rcx
   140023790:	mov    WORD PTR [r9],si
   140023794:	movzx  ecx,WORD PTR [rdi+rcx*1]
   140023798:	mov    WORD PTR [rbx],si
   14002379b:	cmp    r10d,edx
   14002379e:	jle    0x1400237b2
   1400237a0:	xor    eax,eax
   1400237a2:	mov    rbx,QWORD PTR [rsp+0x8]
   1400237a7:	mov    rsi,QWORD PTR [rsp+0x10]
   1400237ac:	mov    rdi,QWORD PTR [rsp+0x18]
   1400237b1:	ret    
   1400237b2:	cmp    cx,0x5c
   1400237b6:	jne    0x1400237a0
   1400237b8:	movsxd rax,r10d
   1400237bb:	add    r10d,0x2
   1400237bf:	movsxd rdx,edx
   1400237c2:	movzx  ecx,WORD PTR [rax+r11*1]
   1400237c7:	cmp    ecx,0x3d
   1400237ca:	je     0x140023878
   1400237d0:	cmp    ecx,0x7c
   1400237d3:	jne    0x1400237a0
   1400237d5:	mov    eax,0x2
   1400237da:	mov    r8d,0xcc
   1400237e0:	mov    WORD PTR [rbx],ax
   1400237e3:	movsxd rax,r10d
   1400237e6:	add    r10d,0x2
   1400237ea:	movzx  ecx,WORD PTR [rax+r11*1]
   1400237ef:	movsxd rax,r10d
   1400237f2:	cmp    cx,r8w
   1400237f6:	je     0x140023818
   1400237f8:	cmp    rax,rdx
   1400237fb:	jg     0x140023859
   1400237fd:	mov    WORD PTR [r9],cx
   140023801:	movzx  ecx,WORD PTR [rax+r11*1]
   140023806:	add    r9,0x2
   14002380a:	add    r10d,0x2
   14002380e:	add    rax,0x2
   140023812:	cmp    cx,r8w
   140023816:	jne    0x1400237f8
   140023818:	cmp    WORD PTR [rax+r11*1],0x5c
   14002381e:	jne    0x140023859
   140023820:	add    rax,0x2
   140023824:	add    r10d,0x2
   140023828:	cmp    rax,rdx
   14002382b:	jg     0x140023859
   14002382d:	cmp    WORD PTR [rax+r11*1],0x7c
   140023833:	jne    0x14002385e
   140023835:	add    rax,0x2
   140023839:	add    r10d,0x2
   14002383d:	cmp    rax,rdx
   140023840:	jg     0x140023859
   140023842:	mov    WORD PTR [r9],si
   140023846:	movzx  ecx,WORD PTR [rax+r11*1]
   14002384b:	add    r9,0x2
   14002384f:	add    r10d,0x2
   140023853:	add    rax,0x2
   140023857:	jmp    0x1400237f2
   140023859:	mov    DWORD PTR [r9],esi
   14002385c:	jmp    0x1400238c8
   14002385e:	sub    r10d,edi
   140023861:	mov    DWORD PTR [r9],esi
   140023864:	lea    eax,[r10-0x2]
   140023868:	mov    rbx,QWORD PTR [rsp+0x8]
   14002386d:	mov    rsi,QWORD PTR [rsp+0x10]
   140023872:	mov    rdi,QWORD PTR [rsp+0x18]
   140023877:	ret    
   140023878:	mov    eax,0x1
   14002387d:	mov    r8d,0xcc
   140023883:	mov    WORD PTR [rbx],ax
   140023886:	movsxd rax,r10d
   140023889:	add    r10d,0x2
   14002388d:	movzx  ecx,WORD PTR [rax+r11*1]
   140023892:	cmp    cx,r8w
   140023896:	je     0x1400238c4
   140023898:	movsxd rax,r10d
   14002389b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400238a0:	cmp    rax,rdx
   1400238a3:	jg     0x1400237a0
   1400238a9:	mov    WORD PTR [r9],cx
   1400238ad:	movzx  ecx,WORD PTR [rax+r11*1]
   1400238b2:	add    r9,0x2
   1400238b6:	add    r10d,0x2
   1400238ba:	add    rax,0x2
   1400238be:	cmp    cx,r8w
   1400238c2:	jne    0x1400238a0
   1400238c4:	mov    WORD PTR [r9],si
   1400238c8:	mov    rbx,QWORD PTR [rsp+0x8]
   1400238cd:	mov    rsi,QWORD PTR [rsp+0x10]
   1400238d2:	sub    r10d,edi
   1400238d5:	mov    rdi,QWORD PTR [rsp+0x18]
   1400238da:	mov    eax,r10d
   1400238dd:	ret    
   1400238de:	int3   
   1400238df:	int3   
   1400238e0:	rex push rbx
   1400238e2:	push   rbp
   1400238e3:	push   rsi
   1400238e4:	push   rdi
   1400238e5:	push   r12
   1400238e7:	push   r14
   1400238e9:	push   r15
   1400238eb:	sub    rsp,0x240
   1400238f2:	mov    rax,QWORD PTR [rip+0x18707]        # 0x14003c000
   1400238f9:	xor    rax,rsp
   1400238fc:	mov    QWORD PTR [rsp+0x230],rax
   140023904:	mov    rsi,QWORD PTR [rsp+0x2a0]
   14002390c:	movzx  r14d,dl
   140023910:	mov    r15,rcx
   140023913:	mov    r12,r8
   140023916:	lea    rbp,[rsp+0x130]
   14002391e:	mov    ecx,r14d
   140023921:	test   dl,dl
   140023923:	je     0x140023a95
   140023929:	dec    ecx
   14002392b:	je     0x140023a49
   140023931:	dec    ecx
   140023933:	je     0x14002393f
   140023935:	mov    eax,0x401
   14002393a:	jmp    0x140023ab1
   14002393f:	xor    ebx,ebx
   140023941:	test   r9,r9
   140023944:	je     0x140023985
   140023946:	mov    rax,r9
   140023949:	mov    edi,ebx
   14002394b:	nop    DWORD PTR [rax+rax*1+0x0]
   140023950:	cmp    BYTE PTR [rax],bl
   140023952:	jne    0x140023959
   140023954:	cmp    BYTE PTR [rax+0x1],bl
   140023957:	je     0x140023961
   140023959:	add    rax,0x2
   14002395d:	inc    edi
   14002395f:	jmp    0x140023950
   140023961:	add    di,di
   140023964:	je     0x140023985
   140023966:	lea    rcx,[rsp+0x132]
   14002396e:	movzx  r8d,di
   140023972:	mov    rdx,r9
   140023975:	call   QWORD PTR [rip+0xbb0d]        # 0x14002f488
   14002397b:	mov    WORD PTR [rsp+0x130],di
   140023983:	jmp    0x140023990
   140023985:	mov    rbp,rbx
   140023988:	nop    DWORD PTR [rax+rax*1+0x0]
   140023990:	movzx  eax,bx
   140023993:	cmp    WORD PTR [rax+rsi*1],0x0
   140023998:	jne    0x1400239a2
   14002399a:	cmp    WORD PTR [rax+rsi*1+0x2],0x0
   1400239a0:	je     0x1400239a8
   1400239a2:	add    bx,0x2
   1400239a6:	jmp    0x140023990
   1400239a8:	lea    rcx,[rsp+0x32]
   1400239ad:	movzx  r8d,bx
   1400239b1:	mov    rdx,rsi
   1400239b4:	call   QWORD PTR [rip+0xbace]        # 0x14002f488
   1400239ba:	add    bx,0x2
   1400239be:	movzx  eax,bx
   1400239c1:	inc    eax
   1400239c3:	movsxd rcx,eax
   1400239c6:	cmp    rcx,0x100
   1400239cd:	jae    0x140023ad3
   1400239d3:	movzx  eax,bx
   1400239d6:	lea    rdi,[rsp+0x30]
   1400239db:	mov    BYTE PTR [rsp+rcx*1+0x30],0x0
   1400239e0:	add    rdi,rax
   1400239e3:	lea    rax,[rsp+0x30]
   1400239e8:	lea    r11,[rsp+0x30]
   1400239ed:	mov    BYTE PTR [rdi],0x0
   1400239f0:	cmp    rax,rdi
   1400239f3:	jae    0x140023a32
   1400239f5:	mov    edx,0x2
   1400239fa:	nop    WORD PTR [rax+rax*1+0x0]
   140023a00:	cmp    WORD PTR [r11+0x2],0x0
   140023a06:	movzx  eax,dx
   140023a09:	je     0x140023a1e
   140023a0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140023a10:	add    ax,dx
   140023a13:	movzx  ecx,ax
   140023a16:	cmp    WORD PTR [rcx+r11*1],0x0
   140023a1c:	jne    0x140023a10
   140023a1e:	lea    r10d,[rax-0x2]
   140023a22:	mov    WORD PTR [r11],r10w
   140023a26:	movzx  r10d,ax
   140023a2a:	add    r11,r10
   140023a2d:	cmp    r11,rdi
   140023a30:	jb     0x140023a00
   140023a32:	lea    rax,[rsp+0x30]
   140023a37:	mov    WORD PTR [rsp+0x28],bx
   140023a3c:	mov    r9,rbp
   140023a3f:	mov    QWORD PTR [rsp+0x20],rax
   140023a44:	mov    r8,r12
   140023a47:	jmp    0x140023aa4
   140023a49:	mov    rax,rsi
   140023a4c:	xor    ebx,ebx
   140023a4e:	xchg   ax,ax
   140023a50:	cmp    BYTE PTR [rax],0x0
   140023a53:	jne    0x140023a5b
   140023a55:	cmp    BYTE PTR [rax+0x1],0x0
   140023a59:	je     0x140023a63
   140023a5b:	add    rax,0x2
   140023a5f:	inc    ebx
   140023a61:	jmp    0x140023a50
   140023a63:	add    bx,bx
   140023a66:	lea    rcx,[rsp+0x32]
   140023a6b:	mov    rdx,rsi
   140023a6e:	movzx  r8d,bx
   140023a72:	call   QWORD PTR [rip+0xba10]        # 0x14002f488
   140023a78:	mov    WORD PTR [rsp+0x30],bx
   140023a7d:	lea    rax,[rsp+0x30]
   140023a82:	add    bx,0x2
   140023a86:	mov    r8,r12
   140023a89:	mov    WORD PTR [rsp+0x28],bx
   140023a8e:	mov    QWORD PTR [rsp+0x20],rax
   140023a93:	jmp    0x140023aa1
   140023a95:	xor    ebx,ebx
   140023a97:	mov    WORD PTR [rsp+0x28],bx
   140023a9c:	mov    QWORD PTR [rsp+0x20],rbx
   140023aa1:	xor    r9d,r9d
   140023aa4:	movzx  edx,r14b
   140023aa8:	mov    rcx,r15
   140023aab:	call   QWORD PTR [rip+0xc20f]        # 0x14002fcc0
   140023ab1:	mov    rcx,QWORD PTR [rsp+0x230]
   140023ab9:	xor    rcx,rsp
   140023abc:	call   0x14002c960
   140023ac1:	add    rsp,0x240
   140023ac8:	pop    r15
   140023aca:	pop    r14
   140023acc:	pop    r12
   140023ace:	pop    rdi
   140023acf:	pop    rsi
   140023ad0:	pop    rbp
   140023ad1:	pop    rbx
   140023ad2:	ret    
   140023ad3:	call   0x14002cbc8
   140023ad8:	int3   
   140023ad9:	int3   
   140023ada:	int3   
   140023adb:	int3   
   140023adc:	int3   
   140023add:	int3   
   140023ade:	int3   
   140023adf:	int3   
   140023ae0:	rex push rbx
   140023ae2:	sub    rsp,0x20
   140023ae6:	mov    rbx,rcx
   140023ae9:	call   QWORD PTR [rip+0xbde1]        # 0x14002f8d0
   140023aef:	xor    edx,edx
   140023af1:	mov    rcx,rbx
   140023af4:	call   QWORD PTR [rip+0xbc96]        # 0x14002f790
   140023afa:	mov    eax,0x1
   140023aff:	add    rsp,0x20
   140023b03:	pop    rbx
   140023b04:	ret    
   140023b05:	int3   
   140023b06:	int3   
   140023b07:	int3   
   140023b08:	int3   
   140023b09:	int3   
   140023b0a:	int3   
   140023b0b:	int3   
   140023b0c:	int3   
   140023b0d:	int3   
   140023b0e:	int3   
   140023b0f:	int3   
   140023b10:	mov    QWORD PTR [rsp+0x8],rbx
   140023b15:	push   rdi
   140023b16:	sub    rsp,0x20
   140023b1a:	mov    ebx,edx
   140023b1c:	mov    rdi,rcx
   140023b1f:	call   QWORD PTR [rip+0xb61b]        # 0x14002f140
   140023b25:	test   bl,0x1
   140023b28:	je     0x140023b33
   140023b2a:	mov    rcx,rdi
   140023b2d:	call   QWORD PTR [rip+0xc045]        # 0x14002fb78
   140023b33:	mov    rax,rdi
   140023b36:	mov    rbx,QWORD PTR [rsp+0x30]
   140023b3b:	add    rsp,0x20
   140023b3f:	pop    rdi
   140023b40:	ret    
   140023b41:	int3   
   140023b42:	int3   
   140023b43:	int3   
   140023b44:	int3   
   140023b45:	int3   
   140023b46:	int3   
   140023b47:	int3   
   140023b48:	int3   
   140023b49:	int3   
   140023b4a:	int3   
   140023b4b:	int3   
   140023b4c:	int3   
   140023b4d:	int3   
   140023b4e:	int3   
   140023b4f:	int3   
   140023b50:	rex.W jmp QWORD PTR [rip+0xb5e9]        # 0x14002f140
   140023b57:	int3   
   140023b58:	int3   
   140023b59:	int3   
   140023b5a:	int3   
   140023b5b:	int3   
   140023b5c:	int3   
   140023b5d:	int3   
   140023b5e:	int3   
   140023b5f:	int3   
   140023b60:	rex.W jmp QWORD PTR [rip+0xb519]        # 0x14002f080
   140023b67:	int3   
   140023b68:	int3   
   140023b69:	int3   
   140023b6a:	int3   
   140023b6b:	int3   
   140023b6c:	int3   
   140023b6d:	int3   
   140023b6e:	int3   
   140023b6f:	int3   
   140023b70:	lea    rax,[rip+0x10711]        # 0x140034288
   140023b77:	ret    
   140023b78:	int3   
   140023b79:	int3   
   140023b7a:	int3   
   140023b7b:	int3   
   140023b7c:	int3   
   140023b7d:	int3   
   140023b7e:	int3   
   140023b7f:	int3   
   140023b80:	mov    QWORD PTR [rsp+0x8],rcx
   140023b85:	push   rdi
   140023b86:	push   r14
   140023b88:	push   r15
   140023b8a:	sub    rsp,0x30
   140023b8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023b97:	mov    QWORD PTR [rsp+0x58],rbx
   140023b9c:	mov    QWORD PTR [rsp+0x60],rbp
   140023ba1:	mov    QWORD PTR [rsp+0x68],rsi
   140023ba6:	mov    r15,rcx
   140023ba9:	xor    r9d,r9d
   140023bac:	xor    r8d,r8d
   140023baf:	mov    edx,0x80
   140023bb4:	call   QWORD PTR [rip+0xb4be]        # 0x14002f078
   140023bba:	nop
   140023bbb:	lea    rax,[rip+0x10046]        # 0x140033c08
   140023bc2:	mov    QWORD PTR [r15],rax
   140023bc5:	lea    rax,[rip+0x10694]        # 0x140034260
   140023bcc:	mov    QWORD PTR [r15+0x178],rax
   140023bd3:	lea    rcx,[r15+0x408]
   140023bda:	call   0x14001e360
   140023bdf:	nop
   140023be0:	lea    rcx,[r15+0x12f8]
   140023be7:	call   0x140021e10
   140023bec:	nop
   140023bed:	lea    rcx,[r15+0x21e8]
   140023bf4:	call   0x14001c2b0
   140023bf9:	nop
   140023bfa:	lea    rcx,[r15+0x3e18]
   140023c01:	call   0x14001fa90
   140023c06:	nop
   140023c07:	lea    rcx,[r15+0x5a48]
   140023c0e:	call   0x140025ff0
   140023c13:	nop
   140023c14:	mov    rcx,r15
   140023c17:	call   QWORD PTR [rip+0xbd4b]        # 0x14002f968
   140023c1d:	call   QWORD PTR [rip+0xbd7d]        # 0x14002f9a0
   140023c23:	mov    edx,0xe
   140023c28:	lea    ecx,[rdx+0x72]
   140023c2b:	call   QWORD PTR [rip+0xbb4f]        # 0x14002f780
   140023c31:	mov    rcx,rax
   140023c34:	mov    edx,0x80
   140023c39:	call   QWORD PTR [rip+0xb879]        # 0x14002f4b8
   140023c3f:	mov    QWORD PTR [r15+0x7160],rax
   140023c46:	lea    rdx,[r15+0x21e8]
   140023c4d:	mov    rcx,r15
   140023c50:	call   QWORD PTR [rip+0xb41a]        # 0x14002f070
   140023c56:	lea    rdx,[r15+0x408]
   140023c5d:	mov    rcx,r15
   140023c60:	call   QWORD PTR [rip+0xb40a]        # 0x14002f070
   140023c66:	lea    rdx,[r15+0x3e18]
   140023c6d:	mov    rcx,r15
   140023c70:	call   QWORD PTR [rip+0xb3fa]        # 0x14002f070
   140023c76:	lea    rdx,[r15+0x12f8]
   140023c7d:	mov    rcx,r15
   140023c80:	call   QWORD PTR [rip+0xb3ea]        # 0x14002f070
   140023c86:	lea    rdx,[r15+0x5a48]
   140023c8d:	mov    rcx,r15
   140023c90:	call   QWORD PTR [rip+0xb3da]        # 0x14002f070
   140023c96:	nop
   140023c97:	mov    rax,r15
   140023c9a:	mov    rbx,QWORD PTR [rsp+0x58]
   140023c9f:	mov    rbp,QWORD PTR [rsp+0x60]
   140023ca4:	mov    rsi,QWORD PTR [rsp+0x68]
   140023ca9:	add    rsp,0x30
   140023cad:	pop    r15
   140023caf:	pop    r14
   140023cb1:	pop    rdi
   140023cb2:	ret    
   140023cb3:	int3   
   140023cb4:	int3   
   140023cb5:	int3   
   140023cb6:	int3   
   140023cb7:	int3   
   140023cb8:	int3   
   140023cb9:	int3   
   140023cba:	int3   
   140023cbb:	int3   
   140023cbc:	int3   
   140023cbd:	int3   
   140023cbe:	int3   
   140023cbf:	int3   
   140023cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140023cc5:	push   rdi
   140023cc6:	sub    rsp,0x20
   140023cca:	mov    ebx,edx
   140023ccc:	mov    rdi,rcx
   140023ccf:	call   0x140023cf0
   140023cd4:	test   bl,0x1
   140023cd7:	je     0x140023ce2
   140023cd9:	mov    rcx,rdi
   140023cdc:	call   QWORD PTR [rip+0xbe96]        # 0x14002fb78
   140023ce2:	mov    rax,rdi
   140023ce5:	mov    rbx,QWORD PTR [rsp+0x30]
   140023cea:	add    rsp,0x20
   140023cee:	pop    rdi
   140023cef:	ret    
   140023cf0:	mov    QWORD PTR [rsp+0x8],rcx
   140023cf5:	push   rbx
   140023cf6:	sub    rsp,0x30
   140023cfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023d03:	mov    rbx,rcx
   140023d06:	lea    rax,[rip+0xfefb]        # 0x140033c08
   140023d0d:	mov    QWORD PTR [rcx],rax
   140023d10:	lea    rax,[rip+0x10549]        # 0x140034260
   140023d17:	mov    QWORD PTR [rcx+0x178],rax
   140023d1e:	add    rcx,0x5a48
   140023d25:	call   0x140026190
   140023d2a:	nop
   140023d2b:	lea    rcx,[rbx+0x3e18]
   140023d32:	call   0x14001fcb0
   140023d37:	nop
   140023d38:	lea    rcx,[rbx+0x21e8]
   140023d3f:	call   0x14001c4d0
   140023d44:	nop
   140023d45:	lea    rcx,[rbx+0x12f8]
   140023d4c:	call   0x140022010
   140023d51:	nop
   140023d52:	lea    rcx,[rbx+0x408]
   140023d59:	call   0x14001e560
   140023d5e:	nop
   140023d5f:	mov    rcx,rbx
   140023d62:	add    rsp,0x30
   140023d66:	pop    rbx
   140023d67:	rex.W jmp QWORD PTR [rip+0xb31a]        # 0x14002f088
   140023d6e:	int3   
   140023d6f:	int3   
   140023d70:	mov    eax,DWORD PTR [rip+0x227a2]        # 0x140046518
   140023d76:	test   al,0x1
   140023d78:	jne    0x140023d9f
   140023d7a:	or     eax,0x1
   140023d7d:	mov    DWORD PTR [rip+0x22795],eax        # 0x140046518
   140023d83:	mov    rax,QWORD PTR [rip+0xb306]        # 0x14002f090
   140023d8a:	mov    QWORD PTR [rip+0x1f73f],rax        # 0x1400434d0
   140023d91:	lea    rax,[rip+0xfdc8]        # 0x140033b60
   140023d98:	mov    QWORD PTR [rip+0x1f739],rax        # 0x1400434d8
   140023d9f:	lea    rax,[rip+0x1f72a]        # 0x1400434d0
   140023da6:	ret    
   140023da7:	int3   
   140023da8:	int3   
   140023da9:	int3   
   140023daa:	int3   
   140023dab:	int3   
   140023dac:	int3   
   140023dad:	int3   
   140023dae:	int3   
   140023daf:	int3   
   140023db0:	mov    rax,QWORD PTR [rcx+0x7160]
   140023db7:	ret    
   140023db8:	int3   
   140023db9:	int3   
   140023dba:	int3   
   140023dbb:	int3   
   140023dbc:	int3   
   140023dbd:	int3   
   140023dbe:	int3   
   140023dbf:	int3   
   140023dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140023dc5:	mov    QWORD PTR [rsp+0x10],rsi
   140023dca:	push   rdi
   140023dcb:	sub    rsp,0x20
   140023dcf:	mov    rdi,rcx
   140023dd2:	mov    DWORD PTR [rip+0x1de18],0x1        # 0x140041bf4
   140023ddc:	xor    esi,esi
   140023dde:	call   QWORD PTR [rip+0xb964]        # 0x14002f748
   140023de4:	test   eax,eax
   140023de6:	jle    0x140023e29
   140023de8:	mov    ebx,esi
   140023dea:	nop    WORD PTR [rax+rax*1+0x0]
   140023df0:	test   rbx,rbx
   140023df3:	js     0x140023e49
   140023df5:	cmp    rbx,QWORD PTR [rdi+0x148]
   140023dfc:	jge    0x140023e49
   140023dfe:	mov    rax,QWORD PTR [rdi+0x140]
   140023e05:	mov    rcx,QWORD PTR [rax+rbx*8]
   140023e09:	test   rcx,rcx
   140023e0c:	je     0x140023e42
   140023e0e:	mov    rax,QWORD PTR [rcx]
   140023e11:	call   QWORD PTR [rax+0x310]
   140023e17:	mov    rcx,rdi
   140023e1a:	inc    esi
   140023e1c:	inc    rbx
   140023e1f:	call   QWORD PTR [rip+0xb923]        # 0x14002f748
   140023e25:	cmp    esi,eax
   140023e27:	jl     0x140023df0
   140023e29:	mov    rcx,rdi
   140023e2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e31:	mov    rsi,QWORD PTR [rsp+0x38]
   140023e36:	add    rsp,0x20
   140023e3a:	pop    rdi
   140023e3b:	rex.W jmp QWORD PTR [rip+0xb226]        # 0x14002f068
   140023e42:	call   QWORD PTR [rip+0xb950]        # 0x14002f798
   140023e48:	int3   
   140023e49:	call   QWORD PTR [rip+0xb949]        # 0x14002f798
   140023e4f:	int3   
   140023e50:	rex push rbx
   140023e52:	sub    rsp,0x30
   140023e56:	lea    rdx,[rip+0x1eac3]        # 0x140042920
   140023e5d:	mov    rbx,rcx
   140023e60:	mov    DWORD PTR [rsp+0x20],0x0
   140023e68:	call   QWORD PTR [rip+0xb952]        # 0x14002f7c0
   140023e6e:	mov    rax,rbx
   140023e71:	add    rsp,0x30
   140023e75:	pop    rbx
   140023e76:	ret    
   140023e77:	int3   
   140023e78:	int3   
   140023e79:	int3   
   140023e7a:	int3   
   140023e7b:	int3   
   140023e7c:	int3   
   140023e7d:	int3   
   140023e7e:	int3   
   140023e7f:	int3   
   140023e80:	mov    rax,rsp
   140023e83:	push   rbp
   140023e84:	push   r14
   140023e86:	push   r15
   140023e88:	lea    rbp,[rax-0x6b8]
   140023e8f:	sub    rsp,0x7a0
   140023e96:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140023e9f:	mov    QWORD PTR [rax+0x8],rbx
   140023ea3:	mov    QWORD PTR [rax+0x10],rsi
   140023ea7:	mov    QWORD PTR [rax+0x18],rdi
   140023eab:	mov    QWORD PTR [rax+0x20],r12
   140023eaf:	mov    rax,QWORD PTR [rip+0x1814a]        # 0x14003c000
   140023eb6:	xor    rax,rsp
   140023eb9:	mov    QWORD PTR [rbp+0x690],rax
   140023ec0:	xor    r14d,r14d
   140023ec3:	call   QWORD PTR [rip+0xbddf]        # 0x14002fca8
   140023ec9:	test   ax,ax
   140023ecc:	je     0x140024194
   140023ed2:	movzx  edx,ax
   140023ed5:	call   0x14002bb80
   140023eda:	mov    r15,rax
   140023edd:	lea    r8,[rsp+0x48]
   140023ee2:	mov    rcx,rax
   140023ee5:	call   0x14002b9f0
   140023eea:	mov    rdi,rax
   140023eed:	test   rax,rax
   140023ef0:	je     0x140024186
   140023ef6:	mov    BYTE PTR [rsp+0x70],r14b
   140023efb:	mov    r12d,0x1
   140023f01:	mov    ebx,r12d
   140023f04:	lea    rsi,[rip+0x1f6f5]        # 0x140043600
   140023f0b:	cmp    BYTE PTR [rip+0x1f6ee],r14b        # 0x140043600
   140023f12:	jne    0x140023f8b
   140023f14:	mov    rcx,QWORD PTR [rip+0x1e855]        # 0x140042770
   140023f1b:	test   rcx,rcx
   140023f1e:	jne    0x140023f53
   140023f20:	mov    ecx,0x438
   140023f25:	call   QWORD PTR [rip+0xba6d]        # 0x14002f998
   140023f2b:	test   rax,rax
   140023f2e:	je     0x140023f3d
   140023f30:	mov    rcx,rax
   140023f33:	call   0x14002b540
   140023f38:	mov    rcx,rax
   140023f3b:	jmp    0x140023f40
   140023f3d:	mov    rcx,r14
   140023f40:	test   rcx,rcx
   140023f43:	je     0x140023f4e
   140023f45:	mov    QWORD PTR [rip+0x1e824],rcx        # 0x140042770
   140023f4c:	jmp    0x140023f53
   140023f4e:	mov    ebx,r14d
   140023f51:	jmp    0x140023f8b
   140023f53:	mov    rax,QWORD PTR [rcx]
   140023f56:	call   QWORD PTR [rax+0x30]
   140023f59:	mov    r8,rax
   140023f5c:	mov    QWORD PTR [rsp+0x38],r14
   140023f61:	mov    QWORD PTR [rsp+0x30],r14
   140023f66:	mov    DWORD PTR [rsp+0x28],0x104
   140023f6e:	mov    QWORD PTR [rsp+0x20],rsi
   140023f73:	or     r9d,0xffffffff
   140023f77:	xor    edx,edx
   140023f79:	xor    ecx,ecx
   140023f7b:	call   QWORD PTR [rip+0xb25f]        # 0x14002f1e0
   140023f81:	mov    rcx,rsi
   140023f84:	call   0x14002b2b0
   140023f89:	mov    ebx,eax
   140023f8b:	mov    r8,rsi
   140023f8e:	mov    edx,0x104
   140023f93:	lea    rcx,[rsp+0x70]
   140023f98:	call   QWORD PTR [rip+0xb45a]        # 0x14002f3f8
   140023f9e:	cmp    ebx,r12d
   140023fa1:	jne    0x140024186
   140023fa7:	mov    WORD PTR [rbp+0x280],r14w
   140023faf:	mov    WORD PTR [rbp+0x80],r14w
   140023fb7:	mov    rdx,QWORD PTR [rdi+0x8]
   140023fbb:	lea    rcx,[rsp+0x50]
   140023fc0:	call   QWORD PTR [rip+0xb6c2]        # 0x14002f688
   140023fc6:	nop
   140023fc7:	lea    rax,[rbp+0x280]
   140023fce:	mov    QWORD PTR [rsp+0x20],rax
   140023fd3:	lea    r9,[rbp+0x80]
   140023fda:	xor    r8d,r8d
   140023fdd:	xor    edx,edx
   140023fdf:	mov    rcx,QWORD PTR [rsp+0x50]
   140023fe4:	call   QWORD PTR [rip+0xb48e]        # 0x14002f478
   140023fea:	lea    rdx,[rsp+0x70]
   140023fef:	lea    rcx,[rsp+0x40]
   140023ff4:	call   QWORD PTR [rip+0xb68e]        # 0x14002f688
   140023ffa:	nop
   140023ffb:	lea    rcx,[rsp+0x50]
   140024000:	call   QWORD PTR [rip+0xb79a]        # 0x14002f7a0
   140024006:	lea    rcx,[rsp+0x40]
   14002400b:	call   QWORD PTR [rip+0xb78f]        # 0x14002f7a0
   140024011:	lea    rdx,[rsp+0x40]
   140024016:	lea    rcx,[rip+0x1e903]        # 0x140042920
   14002401d:	call   QWORD PTR [rip+0xb795]        # 0x14002f7b8
   140024023:	xor    r8d,r8d
   140024026:	mov    rdx,QWORD PTR [rsp+0x40]
   14002402b:	lea    rcx,[rsp+0x50]
   140024030:	call   QWORD PTR [rip+0xb772]        # 0x14002f7a8
   140024036:	test   eax,eax
   140024038:	jne    0x140024042
   14002403a:	mov    r14d,r12d
   14002403d:	jmp    0x14002416f
   140024042:	lea    rdx,[rbp+0x80]
   140024049:	lea    rcx,[rsp+0x40]
   14002404e:	call   QWORD PTR [rip+0xb75c]        # 0x14002f7b0
   140024054:	lea    rdx,[rbp+0x280]
   14002405b:	lea    rcx,[rsp+0x40]
   140024060:	call   QWORD PTR [rip+0xb74a]        # 0x14002f7b0
   140024066:	mov    rdx,QWORD PTR [rdi+0x8]
   14002406a:	lea    rcx,[rsp+0x48]
   14002406f:	call   QWORD PTR [rip+0xb613]        # 0x14002f688
   140024075:	mov    r8d,r12d
   140024078:	mov    rdx,QWORD PTR [rsp+0x40]
   14002407d:	mov    rcx,QWORD PTR [rax]
   140024080:	call   QWORD PTR [rip+0xb1b2]        # 0x14002f238
   140024086:	lea    rcx,[rsp+0x48]
   14002408b:	call   QWORD PTR [rip+0xb8ff]        # 0x14002f990
   140024091:	mov    WORD PTR [rbp+0x480],r14w
   140024099:	mov    QWORD PTR [rsp+0x58],r14
   14002409e:	lea    rdx,[rip+0xcd03]        # 0x140030da8
   1400240a5:	lea    rcx,[rsp+0x48]
   1400240aa:	call   QWORD PTR [rip+0xb5d8]        # 0x14002f688
   1400240b0:	xor    r8d,r8d
   1400240b3:	mov    rdx,QWORD PTR [rax]
   1400240b6:	lea    rcx,[rbp+0x480]
   1400240bd:	call   QWORD PTR [rip+0xb3ed]        # 0x14002f4b0
   1400240c3:	lea    rcx,[rsp+0x48]
   1400240c8:	call   QWORD PTR [rip+0xb8c2]        # 0x14002f990
   1400240ce:	lea    rax,[rsp+0x58]
   1400240d3:	mov    QWORD PTR [rsp+0x20],rax
   1400240d8:	mov    r9d,0x2
   1400240de:	xor    r8d,r8d
   1400240e1:	lea    rdx,[rbp+0x480]
   1400240e8:	mov    rcx,r15
   1400240eb:	call   QWORD PTR [rip+0xaf27]        # 0x14002f018
   1400240f1:	test   eax,eax
   1400240f3:	jne    0x14002416f
   1400240f5:	mov    rax,QWORD PTR [rsp+0x40]
   1400240fa:	mov    edi,DWORD PTR [rax-0x10]
   1400240fd:	inc    edi
   1400240ff:	lea    rdx,[rip+0xcf92]        # 0x140031098
   140024106:	lea    rcx,[rsp+0x48]
   14002410b:	call   QWORD PTR [rip+0xb577]        # 0x14002f688
   140024111:	nop
   140024112:	mov    rsi,QWORD PTR [rax]
   140024115:	lea    ebx,[rdi+rdi*1]
   140024118:	mov    edx,edi
   14002411a:	lea    rcx,[rsp+0x40]
   14002411f:	call   QWORD PTR [rip+0xb5cb]        # 0x14002f6f0
   140024125:	mov    DWORD PTR [rsp+0x28],ebx
   140024129:	mov    QWORD PTR [rsp+0x20],rax
   14002412e:	mov    r9d,r12d
   140024131:	xor    r8d,r8d
   140024134:	mov    rdx,rsi
   140024137:	mov    rcx,QWORD PTR [rsp+0x58]
   14002413c:	call   QWORD PTR [rip+0xaee6]        # 0x14002f028
   140024142:	mov    ebx,eax
   140024144:	lea    rcx,[rsp+0x48]
   140024149:	call   QWORD PTR [rip+0xb841]        # 0x14002f990
   14002414f:	or     edx,0xffffffff
   140024152:	lea    rcx,[rsp+0x40]
   140024157:	call   QWORD PTR [rip+0xb58b]        # 0x14002f6e8
   14002415d:	test   ebx,ebx
   14002415f:	cmove  r14d,r12d
   140024163:	mov    rcx,QWORD PTR [rsp+0x58]
   140024168:	call   QWORD PTR [rip+0xaeb2]        # 0x14002f020
   14002416e:	nop
   14002416f:	lea    rcx,[rsp+0x40]
   140024174:	call   QWORD PTR [rip+0xb816]        # 0x14002f990
   14002417a:	nop
   14002417b:	lea    rcx,[rsp+0x50]
   140024180:	call   QWORD PTR [rip+0xb80a]        # 0x14002f990
   140024186:	test   r15,r15
   140024189:	je     0x140024194
   14002418b:	mov    rcx,r15
   14002418e:	call   QWORD PTR [rip+0xae8c]        # 0x14002f020
   140024194:	mov    eax,r14d
   140024197:	mov    rcx,QWORD PTR [rbp+0x690]
   14002419e:	xor    rcx,rsp
   1400241a1:	call   0x14002c960
   1400241a6:	lea    r11,[rsp+0x7a0]
   1400241ae:	mov    rbx,QWORD PTR [r11+0x20]
   1400241b2:	mov    rsi,QWORD PTR [r11+0x28]
   1400241b6:	mov    rdi,QWORD PTR [r11+0x30]
   1400241ba:	mov    r12,QWORD PTR [r11+0x38]
   1400241be:	mov    rsp,r11
   1400241c1:	pop    r15
   1400241c3:	pop    r14
   1400241c5:	pop    rbp
   1400241c6:	ret    
   1400241c7:	int3   
   1400241c8:	int3   
   1400241c9:	int3   
   1400241ca:	int3   
   1400241cb:	int3   
   1400241cc:	int3   
   1400241cd:	int3   
   1400241ce:	int3   
   1400241cf:	int3   
   1400241d0:	rex push rbx
   1400241d2:	sub    rsp,0x30
   1400241d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400241df:	mov    rbx,rcx
   1400241e2:	call   QWORD PTR [rip+0xb5a0]        # 0x14002f788
   1400241e8:	cmp    eax,0xffffffff
   1400241eb:	jne    0x1400241f4
   1400241ed:	or     eax,eax
   1400241ef:	jmp    0x1400242a3
   1400241f4:	call   0x140023e80
   1400241f9:	lea    rdx,[rbx+0x7168]
   140024200:	mov    ecx,0x12c
   140024205:	call   QWORD PTR [rip+0xb025]        # 0x14002f230
   14002420b:	mov    r8,QWORD PTR [rbx+0x7160]
   140024212:	mov    edx,0xfffffff2
   140024217:	mov    rcx,QWORD PTR [rbx+0x40]
   14002421b:	call   QWORD PTR [rip+0xb29f]        # 0x14002f4c0
   140024221:	xor    edx,edx
   140024223:	mov    rcx,rbx
   140024226:	call   QWORD PTR [rip+0xb564]        # 0x14002f790
   14002422c:	xor    edx,edx
   14002422e:	mov    rcx,QWORD PTR [rbx+0x40]
   140024232:	call   QWORD PTR [rip+0xb270]        # 0x14002f4a8
   140024238:	mov    rcx,rax
   14002423b:	call   QWORD PTR [rip+0xb537]        # 0x14002f778
   140024241:	mov    rbx,rax
   140024244:	lea    rcx,[rsp+0x50]
   140024249:	call   QWORD PTR [rip+0xb441]        # 0x14002f690
   14002424f:	nop
   140024250:	mov    edx,0x65
   140024255:	lea    rcx,[rsp+0x50]
   14002425a:	call   QWORD PTR [rip+0xb420]        # 0x14002f680
   140024260:	mov    rcx,QWORD PTR [rsp+0x50]
   140024265:	cmp    DWORD PTR [rcx-0x10],0x0
   140024269:	je     0x140024296
   14002426b:	xor    r9d,r9d
   14002426e:	xor    r8d,r8d
   140024271:	mov    edx,0x800
   140024276:	mov    rcx,QWORD PTR [rbx+0x8]
   14002427a:	call   QWORD PTR [rip+0xb248]        # 0x14002f4c8
   140024280:	mov    r9,QWORD PTR [rsp+0x50]
   140024285:	xor    edx,edx
   140024287:	lea    r8d,[rdx+0x10]
   14002428b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002428f:	call   QWORD PTR [rip+0xb233]        # 0x14002f4c8
   140024295:	nop
   140024296:	lea    rcx,[rsp+0x50]
   14002429b:	call   QWORD PTR [rip+0xb6ef]        # 0x14002f990
   1400242a1:	xor    eax,eax
   1400242a3:	add    rsp,0x30
   1400242a7:	pop    rbx
   1400242a8:	ret    
   1400242a9:	int3   
   1400242aa:	int3   
   1400242ab:	int3   
   1400242ac:	int3   
   1400242ad:	int3   
   1400242ae:	int3   
   1400242af:	int3   
   1400242b0:	sub    rsp,0x188
   1400242b7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400242c0:	mov    eax,edx
   1400242c2:	and    eax,0xfff0
   1400242c7:	cmp    eax,0x10
   1400242ca:	jne    0x140024302
   1400242cc:	xor    r8d,r8d
   1400242cf:	lea    edx,[rax+0x54]
   1400242d2:	lea    rcx,[rsp+0x30]
   1400242d7:	call   QWORD PTR [rip+0xae6b]        # 0x14002f148
   1400242dd:	lea    rax,[rip+0xfc34]        # 0x140033f18
   1400242e4:	mov    QWORD PTR [rsp+0x30],rax
   1400242e9:	lea    rcx,[rsp+0x30]
   1400242ee:	call   QWORD PTR [rip+0xae14]        # 0x14002f108
   1400242f4:	nop
   1400242f5:	lea    rcx,[rsp+0x30]
   1400242fa:	call   QWORD PTR [rip+0xae40]        # 0x14002f140
   140024300:	jmp    0x140024308
   140024302:	call   QWORD PTR [rip+0xb408]        # 0x14002f710
   140024308:	add    rsp,0x188
   14002430f:	ret    
   140024310:	mov    QWORD PTR [rsp+0x8],rbx
   140024315:	push   rdi
   140024316:	sub    rsp,0x20
   14002431a:	mov    rbx,rcx
   14002431d:	call   QWORD PTR [rip+0xb40d]        # 0x14002f730
   140024323:	mov    edx,0x1
   140024328:	mov    rcx,rbx
   14002432b:	mov    edi,eax
   14002432d:	call   QWORD PTR [rip+0xb3d5]        # 0x14002f708
   140024333:	mov    rcx,rax
   140024336:	mov    rdx,QWORD PTR [rax]
   140024339:	call   QWORD PTR [rdx+0xd0]
   14002433f:	mov    edx,0x2
   140024344:	mov    rcx,rbx
   140024347:	call   QWORD PTR [rip+0xb3bb]        # 0x14002f708
   14002434d:	mov    rcx,rax
   140024350:	mov    rdx,QWORD PTR [rax]
   140024353:	call   QWORD PTR [rdx+0xd0]
   140024359:	mov    edx,0x9
   14002435e:	mov    rcx,rbx
   140024361:	call   QWORD PTR [rip+0xb3a1]        # 0x14002f708
   140024367:	mov    rcx,rax
   14002436a:	mov    rdx,QWORD PTR [rax]
   14002436d:	call   QWORD PTR [rdx+0xd0]
   140024373:	mov    rbx,QWORD PTR [rsp+0x30]
   140024378:	mov    eax,edi
   14002437a:	add    rsp,0x20
   14002437e:	pop    rdi
   14002437f:	ret    
   140024380:	rex push rbx
   140024382:	sub    rsp,0x20
   140024386:	movzx  r9d,dx
   14002438a:	mov    rbx,rcx
   14002438d:	dec    r9d
   140024390:	je     0x1400243b7
   140024392:	dec    r9d
   140024395:	je     0x1400243a3
   140024397:	add    rsp,0x20
   14002439b:	pop    rbx
   14002439c:	rex.W jmp QWORD PTR [rip+0xb385]        # 0x14002f728
   1400243a3:	call   QWORD PTR [rip+0xb397]        # 0x14002f740
   1400243a9:	mov    rcx,rax
   1400243ac:	mov    rdx,QWORD PTR [rax]
   1400243af:	call   QWORD PTR [rdx+0x310]
   1400243b5:	jmp    0x1400243c9
   1400243b7:	call   QWORD PTR [rip+0xb383]        # 0x14002f740
   1400243bd:	mov    rcx,rax
   1400243c0:	mov    rdx,QWORD PTR [rax]
   1400243c3:	call   QWORD PTR [rdx+0x308]
   1400243c9:	mov    rcx,rbx
   1400243cc:	call   QWORD PTR [rip+0xb36e]        # 0x14002f740
   1400243d2:	mov    rcx,rax
   1400243d5:	call   QWORD PTR [rip+0xb225]        # 0x14002f600
   1400243db:	mov    eax,0x1
   1400243e0:	add    rsp,0x20
   1400243e4:	pop    rbx
   1400243e5:	ret    
   1400243e6:	int3   
   1400243e7:	int3   
   1400243e8:	int3   
   1400243e9:	int3   
   1400243ea:	int3   
   1400243eb:	int3   
   1400243ec:	int3   
   1400243ed:	int3   
   1400243ee:	int3   
   1400243ef:	int3   
   1400243f0:	rex push rbx
   1400243f2:	sub    rsp,0x20
   1400243f6:	mov    rbx,rcx
   1400243f9:	call   QWORD PTR [rip+0xb7e9]        # 0x14002fbe8
   1400243ff:	test   rbx,rbx
   140024402:	je     0x140024418
   140024404:	mov    rax,QWORD PTR [rbx]
   140024407:	mov    edx,0x1
   14002440c:	mov    rcx,rbx
   14002440f:	add    rsp,0x20
   140024413:	pop    rbx
   140024414:	rex.W jmp QWORD PTR [rax+0x8]
   140024418:	add    rsp,0x20
   14002441c:	pop    rbx
   14002441d:	ret    
   14002441e:	int3   
   14002441f:	int3   
   140024420:	sub    rcx,0x178
   140024427:	jmp    0x140023cc0
   14002442c:	int3   
   14002442d:	int3   
   14002442e:	int3   
   14002442f:	int3   
   140024430:	rex push rsi
   140024432:	push   rdi
   140024433:	sub    rsp,0x458
   14002443a:	mov    rax,QWORD PTR [rip+0x17bbf]        # 0x14003c000
   140024441:	xor    rax,rsp
   140024444:	mov    QWORD PTR [rsp+0x440],rax
   14002444c:	mov    rdi,rcx
   14002444f:	xor    ecx,ecx
   140024451:	mov    rsi,rdx
   140024454:	lea    r8d,[rcx+0x32]
   140024458:	lea    rdx,[rip+0xf6f1]        # 0x140033b50
   14002445f:	call   QWORD PTR [rip+0x1d643]        # 0x140041aa8
   140024465:	test   ax,ax
   140024468:	je     0x140024474
   14002446a:	mov    eax,0x6
   14002446f:	jmp    0x14002456a
   140024474:	mov    QWORD PTR [rsp+0x480],rbx
   14002447c:	mov    QWORD PTR [rsp+0x488],rbp
   140024484:	mov    QWORD PTR [rsp+0x450],r14
   14002448c:	lea    r14,[rip+0xcc0d]        # 0x1400310a0
   140024493:	xor    ebp,ebp
   140024495:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400244a0:	mov    rcx,QWORD PTR [rdi]
   1400244a3:	lea    r9,[rsp+0x30]
   1400244a8:	lea    rdx,[rsp+0x40]
   1400244ad:	mov    r8d,0x400
   1400244b3:	mov    QWORD PTR [rsp+0x20],rbp
   1400244b8:	call   QWORD PTR [rip+0xad4a]        # 0x14002f208
   1400244be:	test   eax,eax
   1400244c0:	jne    0x1400244f1
   1400244c2:	call   QWORD PTR [rip+0xac98]        # 0x14002f160
   1400244c8:	cmp    eax,0x58
   1400244cb:	jae    0x1400244d5
   1400244cd:	mov    eax,eax
   1400244cf:	mov    ecx,DWORD PTR [r14+rax*4]
   1400244d3:	jmp    0x1400244da
   1400244d5:	mov    ecx,0x106
   1400244da:	mov    DWORD PTR [rip+0x1ebd8],ecx        # 0x1400430b8
   1400244e0:	mov    DWORD PTR [rip+0x1efde],0x2        # 0x1400434c8
   1400244ea:	mov    BYTE PTR [rip+0x1eecf],bpl        # 0x1400433c0
   1400244f1:	mov    ebx,DWORD PTR [rsp+0x30]
   1400244f5:	mov    rcx,QWORD PTR [rsi]
   1400244f8:	lea    r9,[rsp+0x34]
   1400244fd:	lea    rdx,[rsp+0x40]
   140024502:	mov    r8d,ebx
   140024505:	mov    QWORD PTR [rsp+0x20],rbp
   14002450a:	call   QWORD PTR [rip+0xad00]        # 0x14002f210
   140024510:	test   eax,eax
   140024512:	jne    0x140024543
   140024514:	call   QWORD PTR [rip+0xac46]        # 0x14002f160
   14002451a:	cmp    eax,0x58
   14002451d:	jae    0x140024527
   14002451f:	mov    eax,eax
   140024521:	mov    ecx,DWORD PTR [r14+rax*4]
   140024525:	jmp    0x14002452c
   140024527:	mov    ecx,0x106
   14002452c:	mov    DWORD PTR [rip+0x1eb86],ecx        # 0x1400430b8
   140024532:	mov    DWORD PTR [rip+0x1ef8c],0x2        # 0x1400434c8
   14002453c:	mov    BYTE PTR [rip+0x1ee7d],bpl        # 0x1400433c0
   140024543:	cmp    ebx,0x400
   140024549:	je     0x1400244a0
   14002454f:	mov    r14,QWORD PTR [rsp+0x450]
   140024557:	mov    rbx,QWORD PTR [rsp+0x480]
   14002455f:	movzx  eax,bp
   140024562:	mov    rbp,QWORD PTR [rsp+0x488]
   14002456a:	mov    rcx,QWORD PTR [rsp+0x440]
   140024572:	xor    rcx,rsp
   140024575:	call   0x14002c960
   14002457a:	add    rsp,0x458
   140024581:	pop    rdi
   140024582:	pop    rsi
   140024583:	ret    
   140024584:	int3   
   140024585:	int3   
   140024586:	int3   
   140024587:	int3   
   140024588:	int3   
   140024589:	int3   
   14002458a:	int3   
   14002458b:	int3   
   14002458c:	int3   
   14002458d:	int3   
   14002458e:	int3   
   14002458f:	int3   
   140024590:	rex push rbp
   140024592:	push   rbx
   140024593:	push   rdi
   140024594:	push   r12
   140024596:	push   r14
   140024598:	lea    rbp,[rsp-0x980]
   1400245a0:	sub    rsp,0xa80
   1400245a7:	mov    rax,QWORD PTR [rip+0x17a52]        # 0x14003c000
   1400245ae:	xor    rax,rsp
   1400245b1:	mov    QWORD PTR [rbp+0x960],rax
   1400245b8:	xor    r12d,r12d
   1400245bb:	mov    rbx,rcx
   1400245be:	mov    rdx,rcx
   1400245c1:	lea    rcx,[rbp+0x312]
   1400245c8:	mov    r14,r8
   1400245cb:	mov    DWORD PTR [rbp+0x450],0xa000d
   1400245d5:	mov    WORD PTR [rbp+0x454],r12w
   1400245dd:	mov    DWORD PTR [rsp+0x30],0xcc
   1400245e5:	mov    BYTE PTR [rsp+0x58],r12b
   1400245ea:	lea    edi,[r12+0xa]
   1400245ef:	call   QWORD PTR [rip+0xac63]        # 0x14002f258
   1400245f5:	mov    rcx,rbx
   1400245f8:	call   0x14002ae90
   1400245fd:	lea    rcx,[rsp+0x40]
   140024602:	mov    r8,rax
   140024605:	mov    rbx,rax
   140024608:	call   0x140017670
   14002460d:	mov    WORD PTR [rbp+0x90],ax
   140024614:	test   rbx,rbx
   140024617:	je     0x140024638
   140024619:	mov    rcx,QWORD PTR [rbx+0x8]
   14002461d:	test   rcx,rcx
   140024620:	je     0x140024628
   140024622:	call   QWORD PTR [rip+0xb550]        # 0x14002fb78
   140024628:	mov    rcx,rbx
   14002462b:	call   QWORD PTR [rip+0xb547]        # 0x14002fb78
   140024631:	movzx  eax,WORD PTR [rbp+0x90]
   140024638:	mov    QWORD PTR [rsp+0xab8],rsi
   140024640:	mov    QWORD PTR [rsp+0xa78],r13
   140024648:	mov    QWORD PTR [rsp+0xa70],r15
   140024650:	test   ax,ax
   140024653:	jne    0x140024bad
   140024659:	lea    rcx,[rsp+0x40]
   14002465e:	call   0x140017a20
   140024663:	test   ax,ax
   140024666:	jne    0x140024bad
   14002466c:	lea    rcx,[rsp+0x40]
   140024671:	mov    edx,0x5858
   140024676:	call   0x14001be70
   14002467b:	test   ax,ax
   14002467e:	jne    0x140024bad
   140024684:	mov    rcx,r12
   140024687:	lea    r13,[rip+0xfffffffffffdb972]        # 0x140000000
   14002468e:	xchg   ax,ax
   140024690:	movzx  eax,BYTE PTR [rcx+r13*1+0x342b8]
   140024699:	inc    rcx
   14002469c:	mov    BYTE PTR [rbp+rcx*1+0x65f],al
   1400246a3:	test   al,al
   1400246a5:	jne    0x140024690
   1400246a7:	movzx  eax,BYTE PTR [rbp+0x660]
   1400246ae:	lea    r8,[rbp+0x660]
   1400246b5:	lea    rdx,[rbp+0x760]
   1400246bc:	test   al,al
   1400246be:	je     0x140024701
   1400246c0:	mov    r9,QWORD PTR [rip+0x18c31]        # 0x14003d2f8
   1400246c7:	cmp    al,0x20
   1400246c9:	jae    0x1400246d9
   1400246cb:	movzx  eax,al
   1400246ce:	movzx  ecx,WORD PTR [r13+rax*2+0x31200]
   1400246d7:	jmp    0x1400246ee
   1400246d9:	cmp    al,0x80
   1400246db:	jae    0x1400246e2
   1400246dd:	movzx  ecx,al
   1400246e0:	jmp    0x1400246ee
   1400246e2:	movzx  eax,al
   1400246e5:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   1400246ee:	movzx  eax,BYTE PTR [r8+0x1]
   1400246f3:	inc    r8
   1400246f6:	mov    WORD PTR [rdx],cx
   1400246f9:	add    rdx,0x2
   1400246fd:	test   al,al
   1400246ff:	jne    0x1400246c7
   140024701:	mov    WORD PTR [rdx],r12w
   140024705:	lea    rax,[rbp+0x760]
   14002470c:	mov    edx,r12d
   14002470f:	nop
   140024710:	cmp    BYTE PTR [rax],r12b
   140024713:	jne    0x14002471b
   140024715:	cmp    BYTE PTR [rax+0x1],r12b
   140024719:	je     0x140024723
   14002471b:	add    rax,0x2
   14002471f:	inc    edx
   140024721:	jmp    0x140024710
   140024723:	mov    rax,QWORD PTR [rsp+0x50]
   140024728:	mov    ecx,0x5
   14002472d:	mov    r8d,0x100
   140024733:	mov    WORD PTR [rax],cx
   140024736:	mov    rcx,QWORD PTR [rsp+0x50]
   14002473b:	mov    rax,QWORD PTR [rbp+0x88]
   140024742:	mov    QWORD PTR [rcx+0x8],rax
   140024746:	mov    rax,QWORD PTR [rsp+0x50]
   14002474b:	lea    rcx,[rbp+0x760]
   140024752:	mov    QWORD PTR [rax+0x18],rcx
   140024756:	mov    rax,QWORD PTR [rsp+0x50]
   14002475b:	mov    ecx,0x802
   140024760:	mov    WORD PTR [rax+0x20],r12w
   140024765:	mov    rax,QWORD PTR [rsp+0x50]
   14002476a:	add    dx,dx
   14002476d:	mov    WORD PTR [rax+0x22],r8w
   140024772:	mov    rax,QWORD PTR [rsp+0x50]
   140024777:	mov    WORD PTR [rax+0x24],cx
   14002477b:	mov    rax,QWORD PTR [rsp+0x50]
   140024780:	lea    rcx,[rbp+0x460]
   140024787:	mov    WORD PTR [rax+0x32],dx
   14002478b:	mov    rax,QWORD PTR [rsp+0x50]
   140024790:	mov    QWORD PTR [rax+0x28],rcx
   140024794:	mov    rax,QWORD PTR [rsp+0x50]
   140024799:	mov    WORD PTR [rax+0x30],r8w
   14002479e:	mov    rcx,QWORD PTR [rsp+0x50]
   1400247a3:	call   QWORD PTR [rsp+0x48]
   1400247a7:	mov    rdx,QWORD PTR [rsp+0x50]
   1400247ac:	movzx  ecx,WORD PTR [rdx]
   1400247af:	mov    WORD PTR [rbp+0x90],cx
   1400247b6:	movzx  eax,WORD PTR [rdx+0x2]
   1400247ba:	mov    WORD PTR [rbp+0x30c],ax
   1400247c1:	test   cx,cx
   1400247c4:	jne    0x140024b59
   1400247ca:	lea    rdx,[rbp+0x450]
   1400247d1:	lea    rcx,[rbp+0x460]
   1400247d8:	cmp    BYTE PTR [rcx],r12b
   1400247db:	jne    0x1400247e3
   1400247dd:	cmp    BYTE PTR [rcx+0x1],r12b
   1400247e1:	je     0x1400247f0
   1400247e3:	add    rcx,0x2
   1400247e7:	jmp    0x1400247d8
   1400247e9:	nop    DWORD PTR [rax+0x0]
   1400247f0:	movzx  eax,BYTE PTR [rdx]
   1400247f3:	lea    rdx,[rdx+0x2]
   1400247f7:	add    rcx,0x2
   1400247fb:	mov    BYTE PTR [rcx-0x2],al
   1400247fe:	movzx  eax,BYTE PTR [rdx-0x1]
   140024802:	mov    BYTE PTR [rcx-0x1],al
   140024805:	cmp    BYTE PTR [rdx],r12b
   140024808:	jne    0x1400247f0
   14002480a:	cmp    BYTE PTR [rdx+0x1],r12b
   14002480e:	jne    0x1400247f0
   140024810:	mov    WORD PTR [rcx],r12w
   140024814:	lea    rax,[rbp+0x460]
   14002481b:	mov    edx,r12d
   14002481e:	xchg   ax,ax
   140024820:	cmp    BYTE PTR [rax],r12b
   140024823:	jne    0x14002482b
   140024825:	cmp    BYTE PTR [rax+0x1],r12b
   140024829:	je     0x140024833
   14002482b:	add    rax,0x2
   14002482f:	inc    edx
   140024831:	jmp    0x140024820
   140024833:	movzx  ecx,WORD PTR [rbp+0x460]
   14002483a:	add    dx,dx
   14002483d:	lea    rax,[rbp+0x460]
   140024844:	mov    r15d,0x5f
   14002484a:	test   cx,cx
   14002484d:	je     0x14002486e
   14002484f:	nop
   140024850:	cmp    cx,0x2d
   140024854:	jne    0x14002485a
   140024856:	mov    WORD PTR [rax],r15w
   14002485a:	movzx  ecx,WORD PTR [rax+0x2]
   14002485e:	add    rax,0x2
   140024862:	test   cx,cx
   140024865:	jne    0x140024850
   140024867:	movzx  ecx,WORD PTR [rbp+0x460]
   14002486e:	movzx  esi,r12w
   140024872:	and    si,0x10
   140024876:	je     0x14002487e
   140024878:	add    dx,0x2
   14002487c:	jmp    0x1400248a2
   14002487e:	lea    rax,[rbp+0x460]
   140024885:	test   cx,cx
   140024888:	je     0x1400248a2
   14002488a:	nop    WORD PTR [rax+rax*1+0x0]
   140024890:	xor    BYTE PTR [rax],0xff
   140024893:	xor    BYTE PTR [rax+0x1],0xff
   140024897:	cmp    WORD PTR [rax+0x2],r12w
   14002489c:	lea    rax,[rax+0x2]
   1400248a0:	jne    0x140024890
   1400248a2:	mov    rcx,QWORD PTR [r14]
   1400248a5:	movzx  r8d,dx
   1400248a9:	lea    r9,[rsp+0x34]
   1400248ae:	lea    rdx,[rbp+0x460]
   1400248b5:	mov    QWORD PTR [rsp+0x20],r12
   1400248ba:	call   QWORD PTR [rip+0xa950]        # 0x14002f210
   1400248c0:	test   eax,eax
   1400248c2:	jne    0x1400248f7
   1400248c4:	call   QWORD PTR [rip+0xa896]        # 0x14002f160
   1400248ca:	cmp    eax,0x58
   1400248cd:	jae    0x1400248db
   1400248cf:	mov    eax,eax
   1400248d1:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   1400248d9:	jmp    0x1400248e0
   1400248db:	mov    ecx,0x106
   1400248e0:	mov    DWORD PTR [rip+0x1e7d2],ecx        # 0x1400430b8
   1400248e6:	mov    DWORD PTR [rip+0x1ebd8],0x2        # 0x1400434c8
   1400248f0:	mov    BYTE PTR [rip+0x1eac9],r12b        # 0x1400433c0
   1400248f7:	mov    rax,QWORD PTR [rsp+0x50]
   1400248fc:	mov    ebx,0x6
   140024901:	mov    WORD PTR [rax],bx
   140024904:	mov    rcx,QWORD PTR [rsp+0x50]
   140024909:	mov    rax,QWORD PTR [rbp+0x88]
   140024910:	mov    QWORD PTR [rcx+0x8],rax
   140024914:	mov    rax,QWORD PTR [rsp+0x50]
   140024919:	lea    rcx,[rbp+0x460]
   140024920:	mov    QWORD PTR [rax+0x18],rcx
   140024924:	mov    rax,QWORD PTR [rsp+0x50]
   140024929:	mov    ecx,0x100
   14002492e:	mov    WORD PTR [rax+0x20],cx
   140024932:	mov    rcx,QWORD PTR [rsp+0x50]
   140024937:	call   QWORD PTR [rsp+0x48]
   14002493b:	mov    rdx,QWORD PTR [rsp+0x50]
   140024940:	movzx  ecx,WORD PTR [rdx]
   140024943:	mov    WORD PTR [rbp+0x90],cx
   14002494a:	movzx  eax,WORD PTR [rdx+0x2]
   14002494e:	mov    WORD PTR [rbp+0x30c],ax
   140024955:	test   cx,cx
   140024958:	jne    0x140024b59
   14002495e:	xchg   ax,ax
   140024960:	inc    di
   140024963:	cmp    di,0x64
   140024967:	jbe    0x14002496d
   140024969:	movzx  edi,r12w
   14002496d:	lea    rdx,[rip+0xf1dc]        # 0x140033b50
   140024974:	xor    ecx,ecx
   140024976:	movzx  r8d,di
   14002497a:	call   QWORD PTR [rip+0x1d128]        # 0x140041aa8
   140024980:	test   ax,ax
   140024983:	jne    0x140024bb2
   140024989:	test   r12b,0x8
   14002498d:	jne    0x1400249d7
   14002498f:	lea    rdx,[rbp+0x450]
   140024996:	lea    rcx,[rbp+0x460]
   14002499d:	nop    DWORD PTR [rax]
   1400249a0:	cmp    BYTE PTR [rcx],r12b
   1400249a3:	jne    0x1400249ab
   1400249a5:	cmp    BYTE PTR [rcx+0x1],r12b
   1400249a9:	je     0x1400249b1
   1400249ab:	add    rcx,0x2
   1400249af:	jmp    0x1400249a0
   1400249b1:	movzx  eax,BYTE PTR [rdx]
   1400249b4:	test   al,al
   1400249b6:	jne    0x1400249be
   1400249b8:	cmp    BYTE PTR [rdx+0x1],r12b
   1400249bc:	je     0x1400249d1
   1400249be:	mov    BYTE PTR [rcx],al
   1400249c0:	movzx  eax,BYTE PTR [rdx+0x1]
   1400249c4:	add    rcx,0x2
   1400249c8:	mov    BYTE PTR [rcx-0x1],al
   1400249cb:	add    rdx,0x2
   1400249cf:	jmp    0x1400249b1
   1400249d1:	mov    WORD PTR [rcx],r12w
   1400249d5:	jmp    0x140024a18
   1400249d7:	lea    rdx,[rsp+0x30]
   1400249dc:	lea    rax,[rbp+0x460]
   1400249e3:	cmp    BYTE PTR [rax],r12b
   1400249e6:	jne    0x1400249ee
   1400249e8:	cmp    BYTE PTR [rax+0x1],r12b
   1400249ec:	je     0x1400249f4
   1400249ee:	add    rax,0x2
   1400249f2:	jmp    0x1400249e3
   1400249f4:	movzx  ecx,BYTE PTR [rdx]
   1400249f7:	test   cl,cl
   1400249f9:	jne    0x140024a01
   1400249fb:	cmp    BYTE PTR [rdx+0x1],r12b
   1400249ff:	je     0x140024a14
   140024a01:	mov    BYTE PTR [rax],cl
   140024a03:	movzx  ecx,BYTE PTR [rdx+0x1]
   140024a07:	add    rax,0x2
   140024a0b:	mov    BYTE PTR [rax-0x1],cl
   140024a0e:	add    rdx,0x2
   140024a12:	jmp    0x1400249f4
   140024a14:	mov    WORD PTR [rax],r12w
   140024a18:	lea    rax,[rbp+0x460]
   140024a1f:	mov    edx,r12d
   140024a22:	cmp    BYTE PTR [rax],r12b
   140024a25:	jne    0x140024a2d
   140024a27:	cmp    BYTE PTR [rax+0x1],r12b
   140024a2b:	je     0x140024a35
   140024a2d:	add    rax,0x2
   140024a31:	inc    edx
   140024a33:	jmp    0x140024a22
   140024a35:	movzx  ecx,WORD PTR [rbp+0x460]
   140024a3c:	add    dx,dx
   140024a3f:	lea    rax,[rbp+0x460]
   140024a46:	test   cx,cx
   140024a49:	je     0x140024a6e
   140024a4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140024a50:	cmp    cx,0x2d
   140024a54:	jne    0x140024a5a
   140024a56:	mov    WORD PTR [rax],r15w
   140024a5a:	movzx  ecx,WORD PTR [rax+0x2]
   140024a5e:	add    rax,0x2
   140024a62:	test   cx,cx
   140024a65:	jne    0x140024a50
   140024a67:	movzx  ecx,WORD PTR [rbp+0x460]
   140024a6e:	test   si,si
   140024a71:	je     0x140024a79
   140024a73:	add    dx,0x2
   140024a77:	jmp    0x140024aa2
   140024a79:	lea    rax,[rbp+0x460]
   140024a80:	test   cx,cx
   140024a83:	je     0x140024aa2
   140024a85:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140024a90:	xor    BYTE PTR [rax],0xff
   140024a93:	xor    BYTE PTR [rax+0x1],0xff
   140024a97:	cmp    WORD PTR [rax+0x2],r12w
   140024a9c:	lea    rax,[rax+0x2]
   140024aa0:	jne    0x140024a90
   140024aa2:	mov    rcx,QWORD PTR [r14]
   140024aa5:	movzx  r8d,dx
   140024aa9:	lea    r9,[rsp+0x34]
   140024aae:	lea    rdx,[rbp+0x460]
   140024ab5:	mov    QWORD PTR [rsp+0x20],r12
   140024aba:	call   QWORD PTR [rip+0xa750]        # 0x14002f210
   140024ac0:	test   eax,eax
   140024ac2:	jne    0x140024af7
   140024ac4:	call   QWORD PTR [rip+0xa696]        # 0x14002f160
   140024aca:	cmp    eax,0x58
   140024acd:	jae    0x140024adb
   140024acf:	mov    eax,eax
   140024ad1:	mov    ecx,DWORD PTR [r13+rax*4+0x310a0]
   140024ad9:	jmp    0x140024ae0
   140024adb:	mov    ecx,0x106
   140024ae0:	mov    DWORD PTR [rip+0x1e5d2],ecx        # 0x1400430b8
   140024ae6:	mov    DWORD PTR [rip+0x1e9d8],0x2        # 0x1400434c8
   140024af0:	mov    BYTE PTR [rip+0x1e8c9],r12b        # 0x1400433c0
   140024af7:	mov    rax,QWORD PTR [rsp+0x50]
   140024afc:	mov    WORD PTR [rax],bx
   140024aff:	mov    rcx,QWORD PTR [rsp+0x50]
   140024b04:	mov    rax,QWORD PTR [rbp+0x88]
   140024b0b:	mov    QWORD PTR [rcx+0x8],rax
   140024b0f:	mov    rax,QWORD PTR [rsp+0x50]
   140024b14:	lea    rcx,[rbp+0x460]
   140024b1b:	mov    QWORD PTR [rax+0x18],rcx
   140024b1f:	mov    rax,QWORD PTR [rsp+0x50]
   140024b24:	mov    ecx,0x100
   140024b29:	mov    WORD PTR [rax+0x20],cx
   140024b2d:	mov    rcx,QWORD PTR [rsp+0x50]
   140024b32:	call   QWORD PTR [rsp+0x48]
   140024b36:	mov    rdx,QWORD PTR [rsp+0x50]
   140024b3b:	movzx  ecx,WORD PTR [rdx]
   140024b3e:	mov    WORD PTR [rbp+0x90],cx
   140024b45:	movzx  eax,WORD PTR [rdx+0x2]
   140024b49:	mov    WORD PTR [rbp+0x30c],ax
   140024b50:	test   cx,cx
   140024b53:	je     0x140024960
   140024b59:	mov    eax,0x3
   140024b5e:	mov    WORD PTR [rdx],ax
   140024b61:	mov    rcx,QWORD PTR [rbp+0x88]
   140024b68:	mov    rdx,QWORD PTR [rsp+0x50]
   140024b6d:	mov    QWORD PTR [rdx+0x8],rcx
   140024b71:	mov    rcx,QWORD PTR [rsp+0x50]
   140024b76:	call   QWORD PTR [rsp+0x48]
   140024b7a:	mov    rcx,QWORD PTR [rbp+0x88]
   140024b81:	call   QWORD PTR [rip+0xa8f9]        # 0x14002f480
   140024b87:	mov    rcx,QWORD PTR [rsp+0x50]
   140024b8c:	movzx  edx,WORD PTR [rcx]
   140024b8f:	mov    WORD PTR [rbp+0x90],dx
   140024b96:	call   QWORD PTR [rip+0xa8e4]        # 0x14002f480
   140024b9c:	mov    rcx,QWORD PTR [rsp+0x40]
   140024ba1:	call   QWORD PTR [rip+0xa6c9]        # 0x14002f270
   140024ba7:	movzx  eax,r12w
   140024bab:	jmp    0x140024bb5
   140024bad:	mov    ebx,0x64
   140024bb2:	movzx  eax,bx
   140024bb5:	mov    r15,QWORD PTR [rsp+0xa70]
   140024bbd:	mov    r13,QWORD PTR [rsp+0xa78]
   140024bc5:	mov    rsi,QWORD PTR [rsp+0xab8]
   140024bcd:	mov    rcx,QWORD PTR [rbp+0x960]
   140024bd4:	xor    rcx,rsp
   140024bd7:	call   0x14002c960
   140024bdc:	add    rsp,0xa80
   140024be3:	pop    r14
   140024be5:	pop    r12
   140024be7:	pop    rdi
   140024be8:	pop    rbx
   140024be9:	pop    rbp
   140024bea:	ret    
   140024beb:	int3   
   140024bec:	int3   
   140024bed:	int3   
   140024bee:	int3   
   140024bef:	int3   
   140024bf0:	rex push rbp
   140024bf2:	push   rbx
   140024bf3:	push   rsi
   140024bf4:	lea    rbp,[rsp-0xb80]
   140024bfc:	sub    rsp,0xc80
   140024c03:	mov    rax,QWORD PTR [rip+0x173f6]        # 0x14003c000
   140024c0a:	xor    rax,rsp
   140024c0d:	mov    QWORD PTR [rbp+0xb50],rax
   140024c14:	mov    rsi,rdx
   140024c17:	mov    rbx,rcx
   140024c1a:	mov    rdx,rcx
   140024c1d:	lea    rcx,[rbp+0x312]
   140024c24:	mov    BYTE PTR [rsp+0x58],0x0
   140024c29:	call   QWORD PTR [rip+0xa629]        # 0x14002f258
   140024c2f:	mov    rcx,rbx
   140024c32:	call   0x14002ae90
   140024c37:	lea    rcx,[rsp+0x40]
   140024c3c:	mov    r8,rax
   140024c3f:	mov    rbx,rax
   140024c42:	call   0x140017670
   140024c47:	mov    WORD PTR [rbp+0x90],ax
   140024c4e:	test   rbx,rbx
   140024c51:	je     0x140024c72
   140024c53:	mov    rcx,QWORD PTR [rbx+0x8]
   140024c57:	test   rcx,rcx
   140024c5a:	je     0x140024c62
   140024c5c:	call   QWORD PTR [rip+0xaf16]        # 0x14002fb78
   140024c62:	mov    rcx,rbx
   140024c65:	call   QWORD PTR [rip+0xaf0d]        # 0x14002fb78
   140024c6b:	movzx  eax,WORD PTR [rbp+0x90]
   140024c72:	mov    QWORD PTR [rsp+0xcb0],rdi
   140024c7a:	mov    QWORD PTR [rsp+0xc78],r12
   140024c82:	mov    QWORD PTR [rsp+0xc70],r13
   140024c8a:	mov    QWORD PTR [rsp+0xc68],r14
   140024c92:	mov    QWORD PTR [rsp+0xc60],r15
   140024c9a:	test   ax,ax
   140024c9d:	jne    0x140025136
   140024ca3:	lea    rcx,[rsp+0x40]
   140024ca8:	call   0x140017a20
   140024cad:	test   ax,ax
   140024cb0:	jne    0x140025136
   140024cb6:	lea    rcx,[rsp+0x40]
   140024cbb:	mov    edx,0x5858
   140024cc0:	call   0x14001be70
   140024cc5:	test   ax,ax
   140024cc8:	jne    0x140025136
   140024cce:	xor    r15d,r15d
   140024cd1:	mov    ebx,0xa
   140024cd6:	lea    r12,[rip+0xfffffffffffdb323]        # 0x140000000
   140024cdd:	mov    ecx,r15d
   140024ce0:	movzx  eax,BYTE PTR [rcx+r12*1+0x342b8]
   140024ce9:	inc    rcx
   140024cec:	mov    BYTE PTR [rbp+rcx*1+0x64f],al
   140024cf3:	test   al,al
   140024cf5:	jne    0x140024ce0
   140024cf7:	movzx  eax,BYTE PTR [rbp+0x650]
   140024cfe:	lea    r8,[rbp+0x650]
   140024d05:	lea    rdx,[rbp+0x950]
   140024d0c:	test   al,al
   140024d0e:	je     0x140024d51
   140024d10:	mov    r9,QWORD PTR [rip+0x185e1]        # 0x14003d2f8
   140024d17:	cmp    al,0x20
   140024d19:	jae    0x140024d29
   140024d1b:	movzx  eax,al
   140024d1e:	movzx  ecx,WORD PTR [r12+rax*2+0x31200]
   140024d27:	jmp    0x140024d3e
   140024d29:	cmp    al,0x80
   140024d2b:	jae    0x140024d32
   140024d2d:	movzx  ecx,al
   140024d30:	jmp    0x140024d3e
   140024d32:	movzx  eax,al
   140024d35:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140024d3e:	movzx  eax,BYTE PTR [r8+0x1]
   140024d43:	inc    r8
   140024d46:	mov    WORD PTR [rdx],cx
   140024d49:	add    rdx,0x2
   140024d4d:	test   al,al
   140024d4f:	jne    0x140024d17
   140024d51:	mov    WORD PTR [rdx],r15w
   140024d55:	lea    rax,[rbp+0x950]
   140024d5c:	mov    edx,r15d
   140024d5f:	nop
   140024d60:	cmp    BYTE PTR [rax],r15b
   140024d63:	jne    0x140024d6b
   140024d65:	cmp    BYTE PTR [rax+0x1],r15b
   140024d69:	je     0x140024d73
   140024d6b:	add    rax,0x2
   140024d6f:	inc    edx
   140024d71:	jmp    0x140024d60
   140024d73:	mov    rax,QWORD PTR [rsp+0x50]
   140024d78:	mov    ecx,0x5
   140024d7d:	mov    r8d,0x100
   140024d83:	mov    WORD PTR [rax],cx
   140024d86:	mov    rcx,QWORD PTR [rsp+0x50]
   140024d8b:	mov    rax,QWORD PTR [rbp+0x88]
   140024d92:	mov    QWORD PTR [rcx+0x8],rax
   140024d96:	mov    rax,QWORD PTR [rsp+0x50]
   140024d9b:	lea    rcx,[rbp+0x950]
   140024da2:	mov    QWORD PTR [rax+0x18],rcx
   140024da6:	mov    rax,QWORD PTR [rsp+0x50]
   140024dab:	mov    ecx,0x80c
   140024db0:	mov    WORD PTR [rax+0x20],r15w
   140024db5:	mov    rax,QWORD PTR [rsp+0x50]
   140024dba:	add    dx,dx
   140024dbd:	mov    WORD PTR [rax+0x22],r8w
   140024dc2:	mov    rax,QWORD PTR [rsp+0x50]
   140024dc7:	mov    WORD PTR [rax+0x24],cx
   140024dcb:	mov    rax,QWORD PTR [rsp+0x50]
   140024dd0:	lea    rcx,[rbp+0x450]
   140024dd7:	mov    WORD PTR [rax+0x32],dx
   140024ddb:	mov    rax,QWORD PTR [rsp+0x50]
   140024de0:	mov    QWORD PTR [rax+0x28],rcx
   140024de4:	mov    rax,QWORD PTR [rsp+0x50]
   140024de9:	mov    WORD PTR [rax+0x30],r8w
   140024dee:	mov    rcx,QWORD PTR [rsp+0x50]
   140024df3:	call   QWORD PTR [rsp+0x48]
   140024df7:	mov    rdx,QWORD PTR [rsp+0x50]
   140024dfc:	movzx  ecx,WORD PTR [rdx]
   140024dff:	mov    WORD PTR [rbp+0x90],cx
   140024e06:	movzx  eax,WORD PTR [rdx+0x2]
   140024e0a:	mov    WORD PTR [rbp+0x30c],ax
   140024e11:	test   cx,cx
   140024e14:	jne    0x1400250e2
   140024e1a:	movzx  edx,WORD PTR [rbp+0x450]
   140024e21:	lea    rax,[rbp+0x450]
   140024e28:	mov    r14d,0x5f
   140024e2e:	test   dx,dx
   140024e31:	je     0x140024e51
   140024e33:	cmp    dx,0x2d
   140024e37:	jne    0x140024e3d
   140024e39:	mov    WORD PTR [rax],r14w
   140024e3d:	movzx  edx,WORD PTR [rax+0x2]
   140024e41:	add    rax,0x2
   140024e45:	test   dx,dx
   140024e48:	jne    0x140024e33
   140024e4a:	movzx  edx,WORD PTR [rbp+0x450]
   140024e51:	lea    r9,[rbp+0x450]
   140024e58:	lea    rcx,[rbp+0x750]
   140024e5f:	movzx  r8d,r15w
   140024e63:	test   dx,dx
   140024e66:	je     0x140024eab
   140024e68:	nop    DWORD PTR [rax+rax*1+0x0]
   140024e70:	movzx  eax,dx
   140024e73:	shr    ax,0x8
   140024e77:	test   al,al
   140024e79:	je     0x140024e91
   140024e7b:	mov    BYTE PTR [rcx],0xf0
   140024e7e:	mov    WORD PTR [rcx+0x1],dx
   140024e82:	mov    BYTE PTR [rcx+0x3],0xf0
   140024e86:	add    rcx,0x4
   140024e8a:	add    r8w,0x4
   140024e8f:	jmp    0x140024e9d
   140024e91:	mov    WORD PTR [rcx],dx
   140024e94:	add    rcx,0x2
   140024e98:	add    r8w,0x2
   140024e9d:	movzx  edx,WORD PTR [r9+0x2]
   140024ea2:	add    r9,0x2
   140024ea6:	test   dx,dx
   140024ea9:	jne    0x140024e70
   140024eab:	mov    DWORD PTR [rcx],0xcc
   140024eb1:	mov    rcx,QWORD PTR [rsi]
   140024eb4:	add    r8w,0x2
   140024eb9:	lea    r9,[rsp+0x30]
   140024ebe:	lea    rdx,[rbp+0x750]
   140024ec5:	movzx  r8d,r8w
   140024ec9:	mov    QWORD PTR [rsp+0x20],r15
   140024ece:	call   QWORD PTR [rip+0xa33c]        # 0x14002f210
   140024ed4:	test   eax,eax
   140024ed6:	jne    0x140024f0b
   140024ed8:	call   QWORD PTR [rip+0xa282]        # 0x14002f160
   140024ede:	cmp    eax,0x58
   140024ee1:	jae    0x140024eef
   140024ee3:	mov    eax,eax
   140024ee5:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   140024eed:	jmp    0x140024ef4
   140024eef:	mov    ecx,0x106
   140024ef4:	mov    DWORD PTR [rip+0x1e1be],ecx        # 0x1400430b8
   140024efa:	mov    DWORD PTR [rip+0x1e5c4],0x2        # 0x1400434c8
   140024f04:	mov    BYTE PTR [rip+0x1e4b5],r15b        # 0x1400433c0
   140024f0b:	mov    rax,QWORD PTR [rsp+0x50]
   140024f10:	mov    edi,0x6
   140024f15:	mov    WORD PTR [rax],di
   140024f18:	mov    rcx,QWORD PTR [rsp+0x50]
   140024f1d:	mov    rax,QWORD PTR [rbp+0x88]
   140024f24:	mov    QWORD PTR [rcx+0x8],rax
   140024f28:	mov    rax,QWORD PTR [rsp+0x50]
   140024f2d:	lea    rcx,[rbp+0x450]
   140024f34:	mov    QWORD PTR [rax+0x18],rcx
   140024f38:	mov    rax,QWORD PTR [rsp+0x50]
   140024f3d:	mov    ecx,0x100
   140024f42:	mov    WORD PTR [rax+0x20],cx
   140024f46:	mov    rcx,QWORD PTR [rsp+0x50]
   140024f4b:	call   QWORD PTR [rsp+0x48]
   140024f4f:	mov    rdx,QWORD PTR [rsp+0x50]
   140024f54:	movzx  ecx,WORD PTR [rdx]
   140024f57:	mov    WORD PTR [rbp+0x90],cx
   140024f5e:	movzx  eax,WORD PTR [rdx+0x2]
   140024f62:	mov    WORD PTR [rbp+0x30c],ax
   140024f69:	test   cx,cx
   140024f6c:	jne    0x1400250e2
   140024f72:	inc    bx
   140024f75:	cmp    bx,0x64
   140024f79:	jbe    0x140024f7f
   140024f7b:	movzx  ebx,r15w
   140024f7f:	lea    rdx,[rip+0xebca]        # 0x140033b50
   140024f86:	xor    ecx,ecx
   140024f88:	movzx  r8d,bx
   140024f8c:	call   QWORD PTR [rip+0x1cb16]        # 0x140041aa8
   140024f92:	test   ax,ax
   140024f95:	jne    0x14002513b
   140024f9b:	movzx  edx,WORD PTR [rbp+0x450]
   140024fa2:	lea    rax,[rbp+0x450]
   140024fa9:	test   dx,dx
   140024fac:	je     0x140024fce
   140024fae:	xchg   ax,ax
   140024fb0:	cmp    dx,0x2d
   140024fb4:	jne    0x140024fba
   140024fb6:	mov    WORD PTR [rax],r14w
   140024fba:	movzx  edx,WORD PTR [rax+0x2]
   140024fbe:	add    rax,0x2
   140024fc2:	test   dx,dx
   140024fc5:	jne    0x140024fb0
   140024fc7:	movzx  edx,WORD PTR [rbp+0x450]
   140024fce:	lea    r9,[rbp+0x450]
   140024fd5:	lea    rax,[rbp+0x750]
   140024fdc:	movzx  r8d,r15w
   140024fe0:	test   dx,dx
   140024fe3:	je     0x140025020
   140024fe5:	movzx  ecx,dx
   140024fe8:	shr    cx,0x8
   140024fec:	test   cl,cl
   140024fee:	je     0x140025006
   140024ff0:	mov    BYTE PTR [rax],0xf0
   140024ff3:	mov    WORD PTR [rax+0x1],dx
   140024ff7:	mov    BYTE PTR [rax+0x3],0xf0
   140024ffb:	add    rax,0x4
   140024fff:	add    r8w,0x4
   140025004:	jmp    0x140025012
   140025006:	mov    WORD PTR [rax],dx
   140025009:	add    rax,0x2
   14002500d:	add    r8w,0x2
   140025012:	movzx  edx,WORD PTR [r9+0x2]
   140025017:	add    r9,0x2
   14002501b:	test   dx,dx
   14002501e:	jne    0x140024fe5
   140025020:	mov    rcx,QWORD PTR [rsi]
   140025023:	add    r8w,0x2
   140025028:	lea    r9,[rsp+0x30]
   14002502d:	lea    rdx,[rbp+0x750]
   140025034:	movzx  r8d,r8w
   140025038:	mov    DWORD PTR [rax],0xcc
   14002503e:	mov    QWORD PTR [rsp+0x20],r15
   140025043:	call   QWORD PTR [rip+0xa1c7]        # 0x14002f210
   140025049:	test   eax,eax
   14002504b:	jne    0x140025080
   14002504d:	call   QWORD PTR [rip+0xa10d]        # 0x14002f160
   140025053:	cmp    eax,0x58
   140025056:	jae    0x140025064
   140025058:	mov    eax,eax
   14002505a:	mov    ecx,DWORD PTR [r12+rax*4+0x310a0]
   140025062:	jmp    0x140025069
   140025064:	mov    ecx,0x106
   140025069:	mov    DWORD PTR [rip+0x1e049],ecx        # 0x1400430b8
   14002506f:	mov    DWORD PTR [rip+0x1e44f],0x2        # 0x1400434c8
   140025079:	mov    BYTE PTR [rip+0x1e340],r15b        # 0x1400433c0
   140025080:	mov    rax,QWORD PTR [rsp+0x50]
   140025085:	mov    WORD PTR [rax],di
   140025088:	mov    rcx,QWORD PTR [rsp+0x50]
   14002508d:	mov    rax,QWORD PTR [rbp+0x88]
   140025094:	mov    QWORD PTR [rcx+0x8],rax
   140025098:	mov    rax,QWORD PTR [rsp+0x50]
   14002509d:	lea    rcx,[rbp+0x450]
   1400250a4:	mov    QWORD PTR [rax+0x18],rcx
   1400250a8:	mov    rax,QWORD PTR [rsp+0x50]
   1400250ad:	mov    ecx,0x100
   1400250b2:	mov    WORD PTR [rax+0x20],cx
   1400250b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400250bb:	call   QWORD PTR [rsp+0x48]
   1400250bf:	mov    rdx,QWORD PTR [rsp+0x50]
   1400250c4:	movzx  ecx,WORD PTR [rdx]
   1400250c7:	mov    WORD PTR [rbp+0x90],cx
   1400250ce:	movzx  eax,WORD PTR [rdx+0x2]
   1400250d2:	mov    WORD PTR [rbp+0x30c],ax
   1400250d9:	test   cx,cx
   1400250dc:	je     0x140024f72
   1400250e2:	mov    eax,0x3
   1400250e7:	mov    WORD PTR [rdx],ax
   1400250ea:	mov    rcx,QWORD PTR [rbp+0x88]
   1400250f1:	mov    rdx,QWORD PTR [rsp+0x50]
   1400250f6:	mov    QWORD PTR [rdx+0x8],rcx
   1400250fa:	mov    rcx,QWORD PTR [rsp+0x50]
   1400250ff:	call   QWORD PTR [rsp+0x48]
   140025103:	mov    rcx,QWORD PTR [rbp+0x88]
   14002510a:	call   QWORD PTR [rip+0xa370]        # 0x14002f480
   140025110:	mov    rcx,QWORD PTR [rsp+0x50]
   140025115:	movzx  edx,WORD PTR [rcx]
   140025118:	mov    WORD PTR [rbp+0x90],dx
   14002511f:	call   QWORD PTR [rip+0xa35b]        # 0x14002f480
   140025125:	mov    rcx,QWORD PTR [rsp+0x40]
   14002512a:	call   QWORD PTR [rip+0xa140]        # 0x14002f270
   140025130:	movzx  eax,r15w
   140025134:	jmp    0x14002513e
   140025136:	mov    edi,0x64
   14002513b:	movzx  eax,di
   14002513e:	mov    r15,QWORD PTR [rsp+0xc60]
   140025146:	mov    r14,QWORD PTR [rsp+0xc68]
   14002514e:	mov    r13,QWORD PTR [rsp+0xc70]
   140025156:	mov    r12,QWORD PTR [rsp+0xc78]
   14002515e:	mov    rdi,QWORD PTR [rsp+0xcb0]
   140025166:	mov    rcx,QWORD PTR [rbp+0xb50]
   14002516d:	xor    rcx,rsp
   140025170:	call   0x14002c960
   140025175:	add    rsp,0xc80
   14002517c:	pop    rsi
   14002517d:	pop    rbx
   14002517e:	pop    rbp
   14002517f:	ret    
   140025180:	rex push rbp
   140025182:	push   rsi
   140025183:	push   r14
   140025185:	sub    rsp,0x470
   14002518c:	mov    rax,QWORD PTR [rip+0x16e6d]        # 0x14003c000
   140025193:	xor    rax,rsp
   140025196:	mov    QWORD PTR [rsp+0x440],rax
   14002519e:	mov    r14,r8
   1400251a1:	movzx  esi,dx
   1400251a4:	mov    rbp,rcx
   1400251a7:	call   0x140025310
   1400251ac:	test   ax,ax
   1400251af:	je     0x1400251bb
   1400251b1:	mov    eax,0x64
   1400251b6:	jmp    0x1400252ec
   1400251bb:	mov    QWORD PTR [rsp+0x468],rbx
   1400251c3:	mov    QWORD PTR [rsp+0x458],r12
   1400251cb:	mov    QWORD PTR [rsp+0x450],r15
   1400251d3:	xor    r15d,r15d
   1400251d6:	mov    QWORD PTR [rsp+0x460],rdi
   1400251de:	mov    ebx,0xa
   1400251e3:	lea    r12,[rip+0xbeb6]        # 0x1400310a0
   1400251ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400251f0:	inc    bx
   1400251f3:	cmp    bx,0x64
   1400251f7:	jbe    0x1400251fd
   1400251f9:	movzx  ebx,r15w
   1400251fd:	lea    rdx,[rip+0xe94c]        # 0x140033b50
   140025204:	xor    ecx,ecx
   140025206:	movzx  r8d,bx
   14002520a:	call   QWORD PTR [rip+0x1c898]        # 0x140041aa8
   140025210:	test   ax,ax
   140025213:	jne    0x1400252c7
   140025219:	lea    rcx,[rsp+0x40]
   14002521e:	xor    edx,edx
   140025220:	mov    r8d,0x400
   140025226:	call   0x14002ce12
   14002522b:	lea    r8,[rsp+0x40]
   140025230:	movzx  edx,si
   140025233:	mov    rcx,rbp
   140025236:	call   0x1400255e0
   14002523b:	mov    edi,eax
   14002523d:	test   sil,0x10
   140025241:	jne    0x140025260
   140025243:	lea    rcx,[rsp+0x40]
   140025248:	cmp    WORD PTR [rsp+0x40],r15w
   14002524e:	je     0x140025260
   140025250:	not    BYTE PTR [rcx]
   140025252:	not    BYTE PTR [rcx+0x1]
   140025255:	cmp    WORD PTR [rcx+0x2],r15w
   14002525a:	lea    rcx,[rcx+0x2]
   14002525e:	jne    0x140025250
   140025260:	mov    rcx,QWORD PTR [r14]
   140025263:	lea    r9,[rsp+0x30]
   140025268:	lea    rdx,[rsp+0x40]
   14002526d:	mov    r8d,eax
   140025270:	mov    QWORD PTR [rsp+0x20],r15
   140025275:	call   QWORD PTR [rip+0x9f95]        # 0x14002f210
   14002527b:	test   eax,eax
   14002527d:	jne    0x1400252ae
   14002527f:	call   QWORD PTR [rip+0x9edb]        # 0x14002f160
   140025285:	cmp    eax,0x58
   140025288:	jae    0x140025292
   14002528a:	mov    eax,eax
   14002528c:	mov    ecx,DWORD PTR [r12+rax*4]
   140025290:	jmp    0x140025297
   140025292:	mov    ecx,0x106
   140025297:	mov    DWORD PTR [rip+0x1de1b],ecx        # 0x1400430b8
   14002529d:	mov    DWORD PTR [rip+0x1e221],0x2        # 0x1400434c8
   1400252a7:	mov    BYTE PTR [rip+0x1e112],r15b        # 0x1400433c0
   1400252ae:	cmp    edi,0x4
   1400252b1:	jg     0x1400251f0
   1400252b7:	cmp    edi,0xffffffff
   1400252ba:	jne    0x1400252c1
   1400252bc:	lea    eax,[rdi+0x65]
   1400252bf:	jmp    0x1400252cc
   1400252c1:	movzx  eax,r15w
   1400252c5:	jmp    0x1400252cc
   1400252c7:	mov    eax,0x6
   1400252cc:	mov    rdi,QWORD PTR [rsp+0x460]
   1400252d4:	mov    r12,QWORD PTR [rsp+0x458]
   1400252dc:	mov    rbx,QWORD PTR [rsp+0x468]
   1400252e4:	mov    r15,QWORD PTR [rsp+0x450]
   1400252ec:	mov    rcx,QWORD PTR [rsp+0x440]
   1400252f4:	xor    rcx,rsp
   1400252f7:	call   0x14002c960
   1400252fc:	add    rsp,0x470
   140025303:	pop    r14
   140025305:	pop    rsi
   140025306:	pop    rbp
   140025307:	ret    
   140025308:	int3   
   140025309:	int3   
   14002530a:	int3   
   14002530b:	int3   
   14002530c:	int3   
   14002530d:	int3   
   14002530e:	int3   
   14002530f:	int3   
   140025310:	rex push rbp
   140025312:	push   r14
   140025314:	push   r15
   140025316:	mov    rbp,rsp
   140025319:	sub    rsp,0x70
   14002531d:	mov    rax,QWORD PTR [rip+0x16cdc]        # 0x14003c000
   140025324:	xor    rax,rsp
   140025327:	mov    QWORD PTR [rbp-0x18],rax
   14002532b:	xor    r14d,r14d
   14002532e:	mov    r15,rcx
   140025331:	test   dl,0x1
   140025334:	jne    0x14002533f
   140025336:	movzx  eax,r14w
   14002533a:	jmp    0x1400255b4
   14002533f:	mov    rcx,QWORD PTR [rcx]
   140025342:	xor    eax,eax
   140025344:	lea    r9,[rbp-0x40]
   140025348:	lea    rdx,[rbp-0x38]
   14002534c:	lea    r8d,[rax+0x10]
   140025350:	mov    QWORD PTR [rsp+0x98],rbx
   140025358:	mov    QWORD PTR [rbp-0x38],rax
   14002535c:	mov    QWORD PTR [rbp-0x30],rax
   140025360:	mov    QWORD PTR [rsp+0x20],r14
   140025365:	call   QWORD PTR [rip+0x9e9d]        # 0x14002f208
   14002536b:	lea    rbx,[rip+0xbd2e]        # 0x1400310a0
   140025372:	test   eax,eax
   140025374:	jne    0x1400253a4
   140025376:	call   QWORD PTR [rip+0x9de4]        # 0x14002f160
   14002537c:	cmp    eax,0x58
   14002537f:	jae    0x140025388
   140025381:	mov    eax,eax
   140025383:	mov    ecx,DWORD PTR [rbx+rax*4]
   140025386:	jmp    0x14002538d
   140025388:	mov    ecx,0x106
   14002538d:	mov    DWORD PTR [rip+0x1dd25],ecx        # 0x1400430b8
   140025393:	mov    DWORD PTR [rip+0x1e12b],0x2        # 0x1400434c8
   14002539d:	mov    BYTE PTR [rip+0x1e01c],r14b        # 0x1400433c0
   1400253a4:	cmp    DWORD PTR [rbp-0x40],0x10
   1400253a8:	jne    0x1400255cf
   1400253ae:	cmp    BYTE PTR [rbp-0x38],0xff
   1400253b2:	jne    0x1400255cf
   1400253b8:	cmp    BYTE PTR [rbp-0x37],0x57
   1400253bc:	jne    0x1400255cf
   1400253c2:	cmp    BYTE PTR [rbp-0x36],0x50
   1400253c6:	jne    0x1400255cf
   1400253cc:	cmp    BYTE PTR [rbp-0x35],0x43
   1400253d0:	jne    0x1400255cf
   1400253d6:	movzx  edx,WORD PTR [rbp-0x2a]
   1400253da:	mov    QWORD PTR [rsp+0xa0],rsi
   1400253e2:	mov    QWORD PTR [rsp+0xa8],rdi
   1400253ea:	mov    QWORD PTR [rsp+0x68],r12
   1400253ef:	mov    QWORD PTR [rsp+0x60],r13
   1400253f4:	mov    r13d,DWORD PTR [rbp-0x34]
   1400253f8:	test   edx,edx
   1400253fa:	je     0x140025580
   140025400:	xor    r8d,r8d
   140025403:	mov    rcx,r15
   140025406:	call   0x14002ad10
   14002540b:	mov    rcx,QWORD PTR [r15]
   14002540e:	lea    r9,[rbp-0x40]
   140025412:	lea    rdx,[rbp-0x28]
   140025416:	mov    r8d,0xe
   14002541c:	mov    QWORD PTR [rsp+0x20],r14
   140025421:	call   QWORD PTR [rip+0x9de1]        # 0x14002f208
   140025427:	test   eax,eax
   140025429:	jne    0x140025459
   14002542b:	call   QWORD PTR [rip+0x9d2f]        # 0x14002f160
   140025431:	cmp    eax,0x58
   140025434:	jae    0x14002543d
   140025436:	mov    eax,eax
   140025438:	mov    ecx,DWORD PTR [rbx+rax*4]
   14002543b:	jmp    0x140025442
   14002543d:	mov    ecx,0x106
   140025442:	mov    DWORD PTR [rip+0x1dc70],ecx        # 0x1400430b8
   140025448:	mov    DWORD PTR [rip+0x1e076],0x2        # 0x1400434c8
   140025452:	mov    BYTE PTR [rip+0x1df67],r14b        # 0x1400433c0
   140025459:	cmp    BYTE PTR [rbp-0x40],0xe
   14002545d:	jne    0x1400255ca
   140025463:	movzx  r12d,WORD PTR [rbp-0x26]
   140025468:	mov    esi,0x1
   14002546d:	cmp    si,r12w
   140025471:	ja     0x140025580
   140025477:	nop    WORD PTR [rax+rax*1+0x0]
   140025480:	mov    rcx,QWORD PTR [r15]
   140025483:	lea    r9,[rbp-0x3c]
   140025487:	lea    rdx,[rbp-0x28]
   14002548b:	mov    r8d,0xe
   140025491:	mov    QWORD PTR [rsp+0x20],r14
   140025496:	call   QWORD PTR [rip+0x9d6c]        # 0x14002f208
   14002549c:	test   eax,eax
   14002549e:	jne    0x1400254ce
   1400254a0:	call   QWORD PTR [rip+0x9cba]        # 0x14002f160
   1400254a6:	cmp    eax,0x58
   1400254a9:	jae    0x1400254b2
   1400254ab:	mov    eax,eax
   1400254ad:	mov    ecx,DWORD PTR [rbx+rax*4]
   1400254b0:	jmp    0x1400254b7
   1400254b2:	mov    ecx,0x106
   1400254b7:	mov    DWORD PTR [rip+0x1dbfb],ecx        # 0x1400430b8
   1400254bd:	mov    DWORD PTR [rip+0x1e001],0x2        # 0x1400434c8
   1400254c7:	mov    BYTE PTR [rip+0x1def2],r14b        # 0x1400433c0
   1400254ce:	cmp    BYTE PTR [rbp-0x3c],0xe
   1400254d2:	jne    0x1400255ca
   1400254d8:	cmp    BYTE PTR [rbp-0x27],0x6
   1400254dc:	jne    0x140025573
   1400254e2:	mov    edx,DWORD PTR [rbp-0x1e]
   1400254e5:	mov    ebx,DWORD PTR [rbp-0x22]
   1400254e8:	xor    r8d,r8d
   1400254eb:	mov    rcx,r15
   1400254ee:	call   0x14002ad10
   1400254f3:	lea    ecx,[rbx+0x1]
   1400254f6:	call   QWORD PTR [rip+0x9f1c]        # 0x14002f418
   1400254fc:	mov    rdi,rax
   1400254ff:	test   rax,rax
   140025502:	je     0x1400255ca
   140025508:	mov    rcx,QWORD PTR [r15]
   14002550b:	lea    r9,[rbp-0x40]
   14002550f:	mov    r8d,ebx
   140025512:	mov    rdx,rax
   140025515:	mov    QWORD PTR [rsp+0x20],r14
   14002551a:	call   QWORD PTR [rip+0x9ce8]        # 0x14002f208
   140025520:	test   eax,eax
   140025522:	jne    0x14002552f
   140025524:	lea    rcx,[rbp-0x40]
   140025528:	call   0x14002acc0
   14002552d:	jmp    0x140025532
   14002552f:	mov    eax,DWORD PTR [rbp-0x40]
   140025532:	movzx  eax,ax
   140025535:	cmp    eax,ebx
   140025537:	jne    0x1400255ca
   14002553d:	movzx  ecx,WORD PTR [rdi+0x5]
   140025541:	sub    ebx,ecx
   140025543:	mov    eax,ecx
   140025545:	cmp    ebx,0xfe
   14002554b:	jne    0x140025563
   14002554d:	movzx  edx,cx
   140025550:	lea    rcx,[rip+0x1765b]        # 0x14003cbb2
   140025557:	mov    r8d,ebx
   14002555a:	add    rdx,rdi
   14002555d:	call   QWORD PTR [rip+0x9f25]        # 0x14002f488
   140025563:	mov    rcx,rdi
   140025566:	call   QWORD PTR [rip+0x9f14]        # 0x14002f480
   14002556c:	lea    rbx,[rip+0xbb2d]        # 0x1400310a0
   140025573:	inc    si
   140025576:	cmp    si,r12w
   14002557a:	jbe    0x140025480
   140025580:	xor    r8d,r8d
   140025583:	mov    edx,r13d
   140025586:	mov    rcx,r15
   140025589:	call   0x14002ad10
   14002558e:	movzx  eax,r14w
   140025592:	mov    r12,QWORD PTR [rsp+0x68]
   140025597:	mov    rdi,QWORD PTR [rsp+0xa8]
   14002559f:	mov    rsi,QWORD PTR [rsp+0xa0]
   1400255a7:	mov    r13,QWORD PTR [rsp+0x60]
   1400255ac:	mov    rbx,QWORD PTR [rsp+0x98]
   1400255b4:	mov    rcx,QWORD PTR [rbp-0x18]
   1400255b8:	xor    rcx,rsp
   1400255bb:	call   0x14002c960
   1400255c0:	add    rsp,0x70
   1400255c4:	pop    r15
   1400255c6:	pop    r14
   1400255c8:	pop    rbp
   1400255c9:	ret    
   1400255ca:	or     eax,0xffffffff
   1400255cd:	jmp    0x140025592
   1400255cf:	or     eax,0xffffffff
   1400255d2:	jmp    0x1400255ac
   1400255d4:	int3   
   1400255d5:	int3   
   1400255d6:	int3   
   1400255d7:	int3   
   1400255d8:	int3   
   1400255d9:	int3   
   1400255da:	int3   
   1400255db:	int3   
   1400255dc:	int3   
   1400255dd:	int3   
   1400255de:	int3   
   1400255df:	int3   
   1400255e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400255e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400255ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400255ef:	mov    WORD PTR [rsp+0x20],r9w
   1400255f5:	push   rdi
   1400255f6:	push   r12
   1400255f8:	push   r13
   1400255fa:	push   r14
   1400255fc:	push   r15
   1400255fe:	sub    rsp,0x20
   140025602:	mov    r14,r8
   140025605:	movzx  edi,dx
   140025608:	mov    rbp,rcx
   14002560b:	xor    edx,edx
   14002560d:	mov    r8d,0x3fe
   140025613:	mov    rcx,r14
   140025616:	call   0x14002ce12
   14002561b:	xor    r12d,r12d
   14002561e:	mov    rbx,r14
   140025621:	lea    rsi,[r14+0x3fa]
   140025628:	mov    r15d,0xcc
   14002562e:	lea    r13d,[r12+0xa]
   140025633:	nop    DWORD PTR [rax+0x0]
   140025637:	nop    WORD PTR [rax+rax*1+0x0]
   140025640:	lea    r8,[rsp+0x68]
   140025645:	movzx  edx,di
   140025648:	mov    rcx,rbp
   14002564b:	call   0x140025730
   140025650:	movsx  ecx,ax
   140025653:	cmp    ecx,0xffffffff
   140025656:	je     0x140025704
   14002565c:	test   ecx,ecx
   14002565e:	jne    0x1400256c5
   140025660:	movzx  eax,WORD PTR [rsp+0x68]
   140025665:	cmp    ax,r15w
   140025669:	jne    0x140025675
   14002566b:	cmp    r15w,WORD PTR [rip+0x1de6d]        # 0x1400434e0
   140025673:	je     0x140025640
   140025675:	mov    WORD PTR [rip+0x1de64],ax        # 0x1400434e0
   14002567c:	cmp    ax,r15w
   140025680:	jne    0x1400256b2
   140025682:	test   dil,0x8
   140025686:	je     0x14002568e
   140025688:	mov    WORD PTR [rbx],r15w
   14002568c:	jmp    0x1400256b5
   14002568e:	test   dil,0x10
   140025692:	je     0x1400256a0
   140025694:	mov    WORD PTR [rsp+0x68],r12w
   14002569a:	mov    WORD PTR [rbx],r12w
   14002569e:	jmp    0x1400256b5
   1400256a0:	mov    DWORD PTR [rbx],0xa000d
   1400256a6:	add    rbx,0x4
   1400256aa:	mov    WORD PTR [rsp+0x68],r13w
   1400256b0:	jmp    0x1400256b9
   1400256b2:	mov    WORD PTR [rbx],ax
   1400256b5:	add    rbx,0x2
   1400256b9:	cmp    rbx,rsi
   1400256bc:	jbe    0x140025640
   1400256be:	sub    rbx,r14
   1400256c1:	mov    eax,ebx
   1400256c3:	jmp    0x140025707
   1400256c5:	cmp    ecx,0x1
   1400256c8:	jne    0x140025704
   1400256ca:	test   dil,0x8
   1400256ce:	je     0x1400256df
   1400256d0:	mov    WORD PTR [rbx],r15w
   1400256d4:	add    rbx,0x2
   1400256d8:	sub    rbx,r14
   1400256db:	mov    eax,ebx
   1400256dd:	jmp    0x140025707
   1400256df:	test   dil,0x10
   1400256e3:	je     0x1400256f3
   1400256e5:	mov    DWORD PTR [rbx],r12d
   1400256e8:	add    rbx,0x4
   1400256ec:	sub    rbx,r14
   1400256ef:	mov    eax,ebx
   1400256f1:	jmp    0x140025707
   1400256f3:	mov    DWORD PTR [rbx],0xa000d
   1400256f9:	add    rbx,0x4
   1400256fd:	sub    rbx,r14
   140025700:	mov    eax,ebx
   140025702:	jmp    0x140025707
   140025704:	or     eax,0xffffffff
   140025707:	mov    rbx,QWORD PTR [rsp+0x50]
   14002570c:	mov    rbp,QWORD PTR [rsp+0x58]
   140025711:	mov    rsi,QWORD PTR [rsp+0x60]
   140025716:	add    rsp,0x20
   14002571a:	pop    r15
   14002571c:	pop    r14
   14002571e:	pop    r13
   140025720:	pop    r12
   140025722:	pop    rdi
   140025723:	ret    
   140025724:	int3   
   140025725:	int3   
   140025726:	int3   
   140025727:	int3   
   140025728:	int3   
   140025729:	int3   
   14002572a:	int3   
   14002572b:	int3   
   14002572c:	int3   
   14002572d:	int3   
   14002572e:	int3   
   14002572f:	int3   
   140025730:	mov    QWORD PTR [rsp+0x8],rbx
   140025735:	mov    QWORD PTR [rsp+0x10],rsi
   14002573a:	mov    QWORD PTR [rsp+0x18],rdi
   14002573f:	push   rbp
   140025740:	push   r12
   140025742:	push   r13
   140025744:	push   r14
   140025746:	push   r15
   140025748:	mov    rbp,rsp
   14002574b:	sub    rsp,0x40
   14002574f:	movzx  r14d,WORD PTR [rbp+0x48]
   140025754:	mov    r15,r8
   140025757:	movzx  r12d,dx
   14002575b:	mov    rbx,rcx
   14002575e:	mov    r13d,0x106
   140025764:	mov    esi,0x1
   140025769:	xor    r8d,r8d
   14002576c:	nop    DWORD PTR [rax+0x0]
   140025770:	mov    rcx,QWORD PTR [rbx]
   140025773:	mov    QWORD PTR [rsp+0x20],r8
   140025778:	lea    r9,[rbp-0x10]
   14002577c:	lea    rdx,[rbp+0x48]
   140025780:	mov    r8d,esi
   140025783:	call   QWORD PTR [rip+0x9a7f]        # 0x14002f208
   140025789:	test   eax,eax
   14002578b:	jne    0x1400257c4
   14002578d:	call   QWORD PTR [rip+0x99cd]        # 0x14002f160
   140025793:	cmp    eax,0x58
   140025796:	jae    0x1400257aa
   140025798:	lea    rcx,[rip+0xfffffffffffda861]        # 0x140000000
   14002579f:	mov    eax,eax
   1400257a1:	mov    ecx,DWORD PTR [rcx+rax*4+0x310a0]
   1400257a8:	jmp    0x1400257ad
   1400257aa:	mov    ecx,r13d
   1400257ad:	mov    DWORD PTR [rip+0x1d905],ecx        # 0x1400430b8
   1400257b3:	mov    DWORD PTR [rip+0x1dd0b],0x2        # 0x1400434c8
   1400257bd:	mov    BYTE PTR [rip+0x1dbfc],0x0        # 0x1400433c0
   1400257c4:	mov    ecx,DWORD PTR [rbp-0x10]
   1400257c7:	test   ecx,ecx
   1400257c9:	je     0x140025ba5
   1400257cf:	dec    ecx
   1400257d1:	jne    0x140025ba0
   1400257d7:	movzx  ecx,BYTE PTR [rbp+0x48]
   1400257db:	mov    r8d,0x0
   1400257e1:	test   cl,cl
   1400257e3:	je     0x140025770
   1400257e5:	test   r12b,0x4
   1400257e9:	jne    0x140025b4a
   1400257ef:	test   r12b,0x2
   1400257f3:	jne    0x140025af4
   1400257f9:	test   r12b,0x1
   1400257fd:	je     0x140025ba0
   140025803:	cmp    cl,0x80
   140025806:	jb     0x140025ad4
   14002580c:	cmp    cl,0xf0
   14002580f:	je     0x140025a2b
   140025815:	cmp    cl,0xd0
   140025818:	jae    0x14002584e
   14002581a:	movzx  edx,cl
   14002581d:	add    edx,0xffffff80
   140025820:	cmp    edx,0x4f
   140025823:	ja     0x140025770
   140025829:	lea    rcx,[rbp+0x48]
   14002582d:	call   0x140025c70
   140025832:	cmp    ax,0x1
   140025836:	je     0x140025769
   14002583c:	movzx  eax,BYTE PTR [rbp+0x48]
   140025840:	xor    edi,edi
   140025842:	mov    WORD PTR [r15],ax
   140025846:	movzx  eax,di
   140025849:	jmp    0x140025ba8
   14002584e:	cmp    cl,0xf1
   140025851:	jne    0x14002595f
   140025857:	lea    rdx,[rbp+0x48]
   14002585b:	mov    rcx,rbx
   14002585e:	call   0x140025bd0
   140025863:	test   ax,ax
   140025866:	jne    0x140025ba8
   14002586c:	mov    rcx,rbx
   14002586f:	cmp    BYTE PTR [rbp+0x48],al
   140025872:	je     0x140025886
   140025874:	mov    r8d,esi
   140025877:	mov    edx,0x3
   14002587c:	call   0x14002ad10
   140025881:	jmp    0x140025769
   140025886:	lea    rdx,[rbp+0x48]
   14002588a:	call   0x140025bd0
   14002588f:	test   ax,ax
   140025892:	jne    0x140025ba8
   140025898:	movzx  edi,BYTE PTR [rbp+0x48]
   14002589c:	lea    rdx,[rbp+0x48]
   1400258a0:	mov    rcx,rbx
   1400258a3:	call   0x140025bd0
   1400258a8:	test   ax,ax
   1400258ab:	jne    0x140025ba8
   1400258b1:	movzx  eax,BYTE PTR [rbp+0x48]
   1400258b5:	mov    edx,0x100
   1400258ba:	mov    r8d,esi
   1400258bd:	mov    rcx,rbx
   1400258c0:	imul   ax,dx
   1400258c4:	mov    edx,esi
   1400258c6:	add    di,ax
   1400258c9:	call   0x14002ad10
   1400258ce:	xchg   ax,ax
   1400258d0:	mov    rcx,rbx
   1400258d3:	call   0x140025eb0
   1400258d8:	test   ax,ax
   1400258db:	jne    0x140025ba8
   1400258e1:	lea    rdx,[rbp+0x48]
   1400258e5:	mov    rcx,rbx
   1400258e8:	call   0x140025bd0
   1400258ed:	test   ax,ax
   1400258f0:	jne    0x140025ba8
   1400258f6:	cmp    BYTE PTR [rbp+0x48],0x1
   1400258fa:	mov    rcx,rbx
   1400258fd:	je     0x140025906
   1400258ff:	mov    edx,0x3
   140025904:	jmp    0x140025948
   140025906:	lea    rdx,[rbp+0x48]
   14002590a:	call   0x140025bd0
   14002590f:	test   ax,ax
   140025912:	jne    0x140025ba8
   140025918:	movzx  r14d,BYTE PTR [rbp+0x48]
   14002591d:	lea    rdx,[rbp+0x48]
   140025921:	mov    rcx,rbx
   140025924:	call   0x140025bd0
   140025929:	test   ax,ax
   14002592c:	jne    0x140025ba8
   140025932:	movzx  eax,BYTE PTR [rbp+0x48]
   140025936:	mov    ecx,0x100
   14002593b:	mov    edx,esi
   14002593d:	imul   ax,cx
   140025941:	mov    rcx,rbx
   140025944:	add    r14w,ax
   140025948:	mov    r8d,esi
   14002594b:	call   0x14002ad10
   140025950:	cmp    r14w,di
   140025954:	jne    0x1400258d0
   14002595a:	jmp    0x140025769
   14002595f:	cmp    cl,0xd0
   140025962:	jne    0x140025a1b
   140025968:	lea    rdx,[rbp+0x48]
   14002596c:	mov    rcx,rbx
   14002596f:	call   0x140025bd0
   140025974:	test   ax,ax
   140025977:	jne    0x140025ba8
   14002597d:	mov    eax,0xd0
   140025982:	sub    al,BYTE PTR [rbp+0x48]
   140025985:	movzx  edx,al
   140025988:	mov    BYTE PTR [rbp+0x48],al
   14002598b:	add    edx,0xffffff80
   14002598e:	cmp    edx,0x4f
   140025991:	ja     0x1400259a3
   140025993:	lea    rcx,[rbp+0x48]
   140025997:	call   0x140025c70
   14002599c:	movzx  esi,ax
   14002599f:	movzx  eax,BYTE PTR [rbp+0x48]
   1400259a3:	movzx  eax,al
   1400259a6:	lea    rdx,[rbp+0x48]
   1400259aa:	mov    rcx,rbx
   1400259ad:	mov    WORD PTR [r15],ax
   1400259b1:	call   0x140025bd0
   1400259b6:	test   ax,ax
   1400259b9:	jne    0x140025ba8
   1400259bf:	movzx  edi,BYTE PTR [rbp+0x48]
   1400259c3:	lea    rdx,[rbp+0x48]
   1400259c7:	mov    rcx,rbx
   1400259ca:	call   0x140025bd0
   1400259cf:	test   ax,ax
   1400259d2:	jne    0x140025ba8
   1400259d8:	movzx  eax,BYTE PTR [rbp+0x48]
   1400259dc:	mov    ecx,0x100
   1400259e1:	imul   ax,cx
   1400259e5:	add    di,ax
   1400259e8:	movsx  eax,di
   1400259eb:	sub    eax,0x4
   1400259ee:	test   eax,eax
   1400259f0:	jle    0x140025a07
   1400259f2:	sub    di,0x4
   1400259f6:	mov    r8d,0x1
   1400259fc:	mov    rcx,rbx
   1400259ff:	movzx  edx,di
   140025a02:	call   0x14002ad10
   140025a07:	cmp    si,0x1
   140025a0b:	je     0x140025764
   140025a11:	xor    edi,edi
   140025a13:	movzx  eax,di
   140025a16:	jmp    0x140025ba8
   140025a1b:	movzx  edx,cl
   140025a1e:	mov    rcx,rbx
   140025a21:	call   0x140025d10
   140025a26:	jmp    0x140025769
   140025a2b:	mov    rcx,QWORD PTR [rbx]
   140025a2e:	lea    r9,[rbp-0x10]
   140025a32:	lea    rdx,[rbp+0x48]
   140025a36:	xor    edi,edi
   140025a38:	mov    r8d,esi
   140025a3b:	mov    QWORD PTR [rsp+0x20],rdi
   140025a40:	call   QWORD PTR [rip+0x97c2]        # 0x14002f208
   140025a46:	test   eax,eax
   140025a48:	jne    0x140025a7e
   140025a4a:	call   QWORD PTR [rip+0x9710]        # 0x14002f160
   140025a50:	cmp    eax,0x58
   140025a53:	jae    0x140025a66
   140025a55:	lea    rcx,[rip+0xfffffffffffda5a4]        # 0x140000000
   140025a5c:	mov    eax,eax
   140025a5e:	mov    r13d,DWORD PTR [rcx+rax*4+0x310a0]
   140025a66:	mov    DWORD PTR [rip+0x1d64b],r13d        # 0x1400430b8
   140025a6d:	mov    DWORD PTR [rip+0x1da51],0x2        # 0x1400434c8
   140025a77:	mov    BYTE PTR [rip+0x1d942],dil        # 0x1400433c0
   140025a7e:	mov    ecx,DWORD PTR [rbp-0x10]
   140025a81:	test   ecx,ecx
   140025a83:	je     0x140025ba5
   140025a89:	dec    ecx
   140025a8b:	jne    0x140025ba0
   140025a91:	movzx  eax,BYTE PTR [rbp+0x48]
   140025a95:	lea    rdx,[rbp+0x48]
   140025a99:	mov    rcx,rbx
   140025a9c:	mov    WORD PTR [r15],ax
   140025aa0:	call   0x140025bd0
   140025aa5:	test   ax,ax
   140025aa8:	jne    0x140025ba8
   140025aae:	movzx  eax,BYTE PTR [rbp+0x48]
   140025ab2:	mov    ecx,0x100
   140025ab7:	mov    r8d,esi
   140025aba:	mov    edx,esi
   140025abc:	imul   ax,cx
   140025ac0:	add    WORD PTR [r15],ax
   140025ac4:	mov    rcx,rbx
   140025ac7:	call   0x14002ad10
   140025acc:	movzx  eax,di
   140025acf:	jmp    0x140025ba8
   140025ad4:	movzx  eax,cl
   140025ad7:	lea    rcx,[rip+0xfffffffffffda522]        # 0x140000000
   140025ade:	xor    edi,edi
   140025ae0:	movzx  eax,WORD PTR [rcx+rax*2+0x3cbb0]
   140025ae8:	mov    WORD PTR [r15],ax
   140025aec:	movzx  eax,di
   140025aef:	jmp    0x140025ba8
   140025af4:	cmp    cl,0x9
   140025af7:	je     0x140025b90
   140025afd:	lea    eax,[rcx-0xa]
   140025b00:	test   al,0xfc
   140025b02:	jne    0x140025b1c
   140025b04:	cmp    cl,0xb
   140025b07:	je     0x140025b1c
   140025b09:	mov    eax,0xcc
   140025b0e:	xor    edi,edi
   140025b10:	mov    WORD PTR [r15],ax
   140025b14:	movzx  eax,di
   140025b17:	jmp    0x140025ba8
   140025b1c:	movzx  eax,cl
   140025b1f:	cmp    cl,0x80
   140025b22:	jb     0x140025b95
   140025b24:	mov    edx,0x100
   140025b29:	cmp    eax,edx
   140025b2b:	jg     0x140025b90
   140025b2d:	movzx  eax,cl
   140025b30:	lea    rcx,[rip+0xfffffffffffda4c9]        # 0x140000000
   140025b37:	xor    edi,edi
   140025b39:	movzx  eax,WORD PTR [rcx+rax*2+0x30cc0]
   140025b41:	mov    WORD PTR [r15],ax
   140025b45:	movzx  eax,di
   140025b48:	jmp    0x140025ba8
   140025b4a:	cmp    cl,0x9
   140025b4d:	je     0x140025b90
   140025b4f:	lea    eax,[rcx-0xa]
   140025b52:	test   al,0xfc
   140025b54:	jne    0x140025b5b
   140025b56:	cmp    cl,0xb
   140025b59:	jne    0x140025b09
   140025b5b:	cmp    cl,0x80
   140025b5e:	jae    0x140025b6e
   140025b60:	movzx  eax,cl
   140025b63:	xor    edi,edi
   140025b65:	mov    WORD PTR [r15],ax
   140025b69:	movzx  eax,di
   140025b6c:	jmp    0x140025ba8
   140025b6e:	cmp    cl,0xa8
   140025b71:	ja     0x140025b90
   140025b73:	movzx  eax,cl
   140025b76:	lea    rcx,[rip+0xfffffffffffda483]        # 0x140000000
   140025b7d:	xor    edi,edi
   140025b7f:	movzx  eax,WORD PTR [rcx+rax*2+0x30c50]
   140025b87:	mov    WORD PTR [r15],ax
   140025b8b:	movzx  eax,di
   140025b8e:	jmp    0x140025ba8
   140025b90:	mov    eax,0x20
   140025b95:	xor    edi,edi
   140025b97:	mov    WORD PTR [r15],ax
   140025b9b:	movzx  eax,di
   140025b9e:	jmp    0x140025ba8
   140025ba0:	or     eax,0xffffffff
   140025ba3:	jmp    0x140025ba8
   140025ba5:	movzx  eax,si
   140025ba8:	mov    rbx,QWORD PTR [rsp+0x70]
   140025bad:	mov    rsi,QWORD PTR [rsp+0x78]
   140025bb2:	mov    rdi,QWORD PTR [rsp+0x80]
   140025bba:	add    rsp,0x40
   140025bbe:	pop    r15
   140025bc0:	pop    r14
   140025bc2:	pop    r13
   140025bc4:	pop    r12
   140025bc6:	pop    rbp
   140025bc7:	ret    
   140025bc8:	int3   
   140025bc9:	int3   
   140025bca:	int3   
   140025bcb:	int3   
   140025bcc:	int3   
   140025bcd:	int3   
   140025bce:	int3   
   140025bcf:	int3   
   140025bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140025bd5:	push   rdi
   140025bd6:	sub    rsp,0x30
   140025bda:	mov    rcx,QWORD PTR [rcx]
   140025bdd:	mov    ebx,0x1
   140025be2:	lea    r9,[rsp+0x40]
   140025be7:	xor    edi,edi
   140025be9:	mov    r8d,ebx
   140025bec:	mov    QWORD PTR [rsp+0x20],rdi
   140025bf1:	call   QWORD PTR [rip+0x9611]        # 0x14002f208
   140025bf7:	test   eax,eax
   140025bf9:	jne    0x140025c30
   140025bfb:	call   QWORD PTR [rip+0x955f]        # 0x14002f160
   140025c01:	cmp    eax,0x58
   140025c04:	jae    0x140025c14
   140025c06:	lea    rcx,[rip+0xb493]        # 0x1400310a0
   140025c0d:	mov    eax,eax
   140025c0f:	mov    ecx,DWORD PTR [rcx+rax*4]
   140025c12:	jmp    0x140025c19
   140025c14:	mov    ecx,0x106
   140025c19:	mov    DWORD PTR [rip+0x1d499],ecx        # 0x1400430b8
   140025c1f:	mov    DWORD PTR [rip+0x1d89f],0x2        # 0x1400434c8
   140025c29:	mov    BYTE PTR [rip+0x1d790],dil        # 0x1400433c0
   140025c30:	mov    ecx,DWORD PTR [rsp+0x40]
   140025c34:	test   ecx,ecx
   140025c36:	je     0x140025c58
   140025c38:	dec    ecx
   140025c3a:	je     0x140025c4a
   140025c3c:	or     eax,0xffffffff
   140025c3f:	mov    rbx,QWORD PTR [rsp+0x48]
   140025c44:	add    rsp,0x30
   140025c48:	pop    rdi
   140025c49:	ret    
   140025c4a:	movzx  eax,di
   140025c4d:	mov    rbx,QWORD PTR [rsp+0x48]
   140025c52:	add    rsp,0x30
   140025c56:	pop    rdi
   140025c57:	ret    
   140025c58:	movzx  eax,bx
   140025c5b:	mov    rbx,QWORD PTR [rsp+0x48]
   140025c60:	add    rsp,0x30
   140025c64:	pop    rdi
   140025c65:	ret    
   140025c66:	int3   
   140025c67:	int3   
   140025c68:	int3   
   140025c69:	int3   
   140025c6a:	int3   
   140025c6b:	int3   
   140025c6c:	int3   
   140025c6d:	int3   
   140025c6e:	int3   
   140025c6f:	int3   
   140025c70:	lea    r8,[rip+0xfffffffffffda389]        # 0x140000000
   140025c77:	movsxd rax,edx
   140025c7a:	movzx  eax,BYTE PTR [r8+rax*1+0x25cb8]
   140025c83:	mov    edx,DWORD PTR [r8+rax*4+0x25ca8]
   140025c8b:	add    rdx,r8
   140025c8e:	jmp    rdx
   140025c90:	mov    BYTE PTR [rcx],0x20
   140025c93:	xor    eax,eax
   140025c95:	ret    
   140025c96:	mov    BYTE PTR [rcx],0x2d
   140025c99:	xor    eax,eax
   140025c9b:	ret    
   140025c9c:	mov    BYTE PTR [rcx],0xcc
   140025c9f:	xor    eax,eax
   140025ca1:	ret    
   140025ca2:	mov    eax,0x1
   140025ca7:	ret    
   140025ca8:	nop
   140025ca9:	pop    rsp
   140025caa:	add    al,BYTE PTR [rax]
   140025cac:	xchg   esi,eax
   140025cad:	pop    rsp
   140025cae:	add    al,BYTE PTR [rax]
   140025cb0:	pushf  
   140025cb1:	pop    rsp
   140025cb2:	add    al,BYTE PTR [rax]
   140025cb4:	movabs ds:0x10303000000025c,al
   140025cbd:	add    eax,DWORD PTR [rbx]
   140025cbf:	add    al,BYTE PTR [rbx]
   140025cc1:	add    eax,DWORD PTR [rbx]
   140025cc3:	add    eax,DWORD PTR [rbx]
   140025cc5:	add    eax,DWORD PTR [rbx]
   140025cc7:	add    eax,DWORD PTR [rbx]
   140025cc9:	add    eax,DWORD PTR [rbx]
   140025ccb:	add    eax,DWORD PTR [rbx]
   140025ccd:	add    eax,DWORD PTR [rbx]
   140025ccf:	add    eax,DWORD PTR [rbx]
   140025cd1:	add    eax,DWORD PTR [rbx]
   140025cd3:	add    eax,DWORD PTR [rbx]
   140025cd5:	add    eax,DWORD PTR [rbx]
   140025cd7:	add    eax,DWORD PTR [rbx]
   140025cd9:	add    eax,DWORD PTR [rbx]
   140025cdb:	add    eax,DWORD PTR [rbx]
   140025cdd:	add    eax,DWORD PTR [rbx]
   140025cdf:	add    eax,DWORD PTR [rbx]
   140025ce1:	add    eax,DWORD PTR [rbx]
   140025ce3:	add    eax,DWORD PTR [rbx]
   140025ce5:	add    eax,DWORD PTR [rbx]
   140025ce7:	add    eax,DWORD PTR [rbx]
   140025ce9:	add    eax,DWORD PTR [rbx]
   140025ceb:	add    eax,DWORD PTR [rbx]
   140025ced:	add    eax,DWORD PTR [rbx]
   140025cef:	add    eax,DWORD PTR [rbx]
   140025cf1:	add    eax,DWORD PTR [rbx]
   140025cf3:	add    eax,DWORD PTR [rbx]
   140025cf5:	add    eax,DWORD PTR [rbx]
   140025cf7:	add    eax,DWORD PTR [rbx]
   140025cf9:	add    eax,DWORD PTR [rbx]
   140025cfb:	add    eax,DWORD PTR [rbx]
   140025cfd:	add    eax,DWORD PTR [rbx]
   140025cff:	add    al,BYTE PTR [rbx]
   140025d01:	add    eax,DWORD PTR [rdx]
   140025d03:	add    al,BYTE PTR [rdx]
   140025d05:	add    eax,DWORD PTR [rbx]
   140025d07:	add    ah,cl
   140025d09:	int3   
   140025d0a:	int3   
   140025d0b:	int3   
   140025d0c:	int3   
   140025d0d:	int3   
   140025d0e:	int3   
   140025d0f:	int3   
   140025d10:	mov    QWORD PTR [rsp+0x8],rbx
   140025d15:	push   rbp
   140025d16:	push   rsi
   140025d17:	push   rdi
   140025d18:	push   r14
   140025d1a:	push   r15
   140025d1c:	sub    rsp,0x30
   140025d20:	mov    eax,0xf0
   140025d25:	xor    r15d,r15d
   140025d28:	mov    rsi,rcx
   140025d2b:	cmp    dx,ax
   140025d2e:	jae    0x140025e55
   140025d34:	mov    ebx,0x1
   140025d39:	mov    r8d,ebx
   140025d3c:	mov    edx,ebx
   140025d3e:	call   0x14002ad10
   140025d43:	mov    rcx,QWORD PTR [rsi]
   140025d46:	lea    r9,[rsp+0x70]
   140025d4b:	lea    rdx,[rsp+0x68]
   140025d50:	mov    r8d,ebx
   140025d53:	mov    QWORD PTR [rsp+0x20],r15
   140025d58:	call   QWORD PTR [rip+0x94aa]        # 0x14002f208
   140025d5e:	lea    rdi,[rip+0xfffffffffffda29b]        # 0x140000000
   140025d65:	mov    ebp,0x106
   140025d6a:	test   eax,eax
   140025d6c:	jne    0x140025d9d
   140025d6e:	call   QWORD PTR [rip+0x93ec]        # 0x14002f160
   140025d74:	cmp    eax,0x58
   140025d77:	jae    0x140025d84
   140025d79:	mov    eax,eax
   140025d7b:	mov    ecx,DWORD PTR [rdi+rax*4+0x310a0]
   140025d82:	jmp    0x140025d86
   140025d84:	mov    ecx,ebp
   140025d86:	mov    DWORD PTR [rip+0x1d32c],ecx        # 0x1400430b8
   140025d8c:	mov    DWORD PTR [rip+0x1d732],0x2        # 0x1400434c8
   140025d96:	mov    BYTE PTR [rip+0x1d623],r15b        # 0x1400433c0
   140025d9d:	mov    ecx,DWORD PTR [rsp+0x70]
   140025da1:	test   ecx,ecx
   140025da3:	je     0x140025e3e
   140025da9:	dec    ecx
   140025dab:	je     0x140025dc4
   140025dad:	or     ecx,0xffffffff
   140025db0:	movzx  eax,cx
   140025db3:	mov    rbx,QWORD PTR [rsp+0x60]
   140025db8:	add    rsp,0x30
   140025dbc:	pop    r15
   140025dbe:	pop    r14
   140025dc0:	pop    rdi
   140025dc1:	pop    rsi
   140025dc2:	pop    rbp
   140025dc3:	ret    
   140025dc4:	mov    rcx,QWORD PTR [rsi]
   140025dc7:	movzx  r14d,BYTE PTR [rsp+0x68]
   140025dcd:	lea    r9,[rsp+0x70]
   140025dd2:	lea    rdx,[rsp+0x68]
   140025dd7:	mov    r8d,ebx
   140025dda:	mov    QWORD PTR [rsp+0x20],r15
   140025ddf:	call   QWORD PTR [rip+0x9423]        # 0x14002f208
   140025de5:	test   eax,eax
   140025de7:	jne    0x140025e14
   140025de9:	call   QWORD PTR [rip+0x9371]        # 0x14002f160
   140025def:	cmp    eax,0x58
   140025df2:	jae    0x140025dfd
   140025df4:	mov    eax,eax
   140025df6:	mov    ebp,DWORD PTR [rdi+rax*4+0x310a0]
   140025dfd:	mov    DWORD PTR [rip+0x1d2b5],ebp        # 0x1400430b8
   140025e03:	mov    DWORD PTR [rip+0x1d6bb],0x2        # 0x1400434c8
   140025e0d:	mov    BYTE PTR [rip+0x1d5ac],r15b        # 0x1400433c0
   140025e14:	mov    ecx,DWORD PTR [rsp+0x70]
   140025e18:	test   ecx,ecx
   140025e1a:	je     0x140025e3e
   140025e1c:	dec    ecx
   140025e1e:	jne    0x140025dad
   140025e20:	movzx  eax,BYTE PTR [rsp+0x68]
   140025e25:	mov    ecx,0x100
   140025e2a:	mov    r8d,ebx
   140025e2d:	imul   ax,cx
   140025e31:	sub    ax,0x4
   140025e35:	add    ax,r14w
   140025e39:	movzx  edx,ax
   140025e3c:	jmp    0x140025e8e
   140025e3e:	movzx  ecx,bx
   140025e41:	movzx  eax,cx
   140025e44:	mov    rbx,QWORD PTR [rsp+0x60]
   140025e49:	add    rsp,0x30
   140025e4d:	pop    r15
   140025e4f:	pop    r14
   140025e51:	pop    rdi
   140025e52:	pop    rsi
   140025e53:	pop    rbp
   140025e54:	ret    
   140025e55:	mov    eax,0xf5
   140025e5a:	or     ecx,0xffffffff
   140025e5d:	cmp    dx,ax
   140025e60:	ja     0x140025e76
   140025e62:	lea    rdi,[rip+0xfffffffffffda197]        # 0x140000000
   140025e69:	movzx  eax,dx
   140025e6c:	movzx  edx,BYTE PTR [rax+rdi*1+0x3046a]
   140025e74:	jmp    0x140025e78
   140025e76:	mov    edx,ecx
   140025e78:	movsx  eax,dx
   140025e7b:	cmp    eax,0xffff
   140025e80:	je     0x140025e41
   140025e82:	dec    dx
   140025e85:	mov    r8d,0x1
   140025e8b:	movzx  edx,dx
   140025e8e:	mov    rcx,rsi
   140025e91:	call   0x14002ad10
   140025e96:	mov    rbx,QWORD PTR [rsp+0x60]
   140025e9b:	movzx  eax,r15w
   140025e9f:	add    rsp,0x30
   140025ea3:	pop    r15
   140025ea5:	pop    r14
   140025ea7:	pop    rdi
   140025ea8:	pop    rsi
   140025ea9:	pop    rbp
   140025eaa:	ret    
   140025eab:	int3   
   140025eac:	int3   
   140025ead:	int3   
   140025eae:	int3   
   140025eaf:	int3   
   140025eb0:	mov    QWORD PTR [rsp+0x18],rbx
   140025eb5:	mov    WORD PTR [rsp+0x10],dx
   140025eba:	push   rsi
   140025ebb:	push   rdi
   140025ebc:	push   r14
   140025ebe:	sub    rsp,0x30
   140025ec2:	mov    rbx,rcx
   140025ec5:	xor    edi,edi
   140025ec7:	mov    esi,0x1
   140025ecc:	lea    r14,[rip+0xb1cd]        # 0x1400310a0
   140025ed3:	nop    DWORD PTR [rax+0x0]
   140025ed7:	nop    WORD PTR [rax+rax*1+0x0]
   140025ee0:	mov    rcx,QWORD PTR [rbx]
   140025ee3:	lea    r9,[rsp+0x50]
   140025ee8:	lea    rdx,[rsp+0x58]
   140025eed:	mov    r8d,esi
   140025ef0:	mov    QWORD PTR [rsp+0x20],rdi
   140025ef5:	call   QWORD PTR [rip+0x930d]        # 0x14002f208
   140025efb:	test   eax,eax
   140025efd:	jne    0x140025f2e
   140025eff:	call   QWORD PTR [rip+0x925b]        # 0x14002f160
   140025f05:	cmp    eax,0x58
   140025f08:	jae    0x140025f12
   140025f0a:	mov    eax,eax
   140025f0c:	mov    ecx,DWORD PTR [r14+rax*4]
   140025f10:	jmp    0x140025f17
   140025f12:	mov    ecx,0x106
   140025f17:	mov    DWORD PTR [rip+0x1d19b],ecx        # 0x1400430b8
   140025f1d:	mov    DWORD PTR [rip+0x1d5a1],0x2        # 0x1400434c8
   140025f27:	mov    BYTE PTR [rip+0x1d492],dil        # 0x1400433c0
   140025f2e:	mov    ecx,DWORD PTR [rsp+0x50]
   140025f32:	test   ecx,ecx
   140025f34:	je     0x140025f87
   140025f36:	dec    ecx
   140025f38:	jne    0x140025f76
   140025f3a:	movzx  eax,BYTE PTR [rsp+0x58]
   140025f3f:	cmp    al,0xf1
   140025f41:	je     0x140025f65
   140025f43:	cmp    al,0xd0
   140025f45:	jb     0x140025ee0
   140025f47:	movzx  edx,al
   140025f4a:	mov    rcx,rbx
   140025f4d:	call   0x140025d10
   140025f52:	test   ax,ax
   140025f55:	je     0x140025ee0
   140025f57:	mov    rbx,QWORD PTR [rsp+0x60]
   140025f5c:	add    rsp,0x30
   140025f60:	pop    r14
   140025f62:	pop    rdi
   140025f63:	pop    rsi
   140025f64:	ret    
   140025f65:	movzx  eax,di
   140025f68:	mov    rbx,QWORD PTR [rsp+0x60]
   140025f6d:	add    rsp,0x30
   140025f71:	pop    r14
   140025f73:	pop    rdi
   140025f74:	pop    rsi
   140025f75:	ret    
   140025f76:	or     eax,0xffffffff
   140025f79:	mov    rbx,QWORD PTR [rsp+0x60]
   140025f7e:	add    rsp,0x30
   140025f82:	pop    r14
   140025f84:	pop    rdi
   140025f85:	pop    rsi
   140025f86:	ret    
   140025f87:	movzx  eax,si
   140025f8a:	mov    rbx,QWORD PTR [rsp+0x60]
   140025f8f:	add    rsp,0x30
   140025f93:	pop    r14
   140025f95:	pop    rdi
   140025f96:	pop    rsi
   140025f97:	ret    
   140025f98:	int3   
   140025f99:	int3   
   140025f9a:	int3   
   140025f9b:	int3   
   140025f9c:	int3   
   140025f9d:	int3   
   140025f9e:	int3   
   140025f9f:	int3   
   140025fa0:	sub    rsp,0x38
   140025fa4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140025fad:	mov    ecx,0x1718
   140025fb2:	call   QWORD PTR [rip+0x99e0]        # 0x14002f998
   140025fb8:	mov    QWORD PTR [rsp+0x40],rax
   140025fbd:	test   rax,rax
   140025fc0:	je     0x140025fcd
   140025fc2:	mov    rcx,rax
   140025fc5:	call   0x140025ff0
   140025fca:	nop
   140025fcb:	jmp    0x140025fcf
   140025fcd:	xor    eax,eax
   140025fcf:	add    rsp,0x38
   140025fd3:	ret    
   140025fd4:	int3   
   140025fd5:	int3   
   140025fd6:	int3   
   140025fd7:	int3   
   140025fd8:	int3   
   140025fd9:	int3   
   140025fda:	int3   
   140025fdb:	int3   
   140025fdc:	int3   
   140025fdd:	int3   
   140025fde:	int3   
   140025fdf:	int3   
   140025fe0:	lea    rax,[rip+0xe6e9]        # 0x1400346d0
   140025fe7:	ret    
   140025fe8:	int3   
   140025fe9:	int3   
   140025fea:	int3   
   140025feb:	int3   
   140025fec:	int3   
   140025fed:	int3   
   140025fee:	int3   
   140025fef:	int3   
   140025ff0:	mov    QWORD PTR [rsp+0x8],rcx
   140025ff5:	push   rsi
   140025ff6:	push   rdi
   140025ff7:	push   r14
   140025ff9:	sub    rsp,0x30
   140025ffd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026006:	mov    QWORD PTR [rsp+0x58],rbx
   14002600b:	mov    QWORD PTR [rsp+0x60],rbp
   140026010:	mov    rdi,rcx
   140026013:	mov    r9d,0x68
   140026019:	xor    r8d,r8d
   14002601c:	lea    edx,[r9+0x63]
   140026020:	call   QWORD PTR [rip+0x90a2]        # 0x14002f0c8
   140026026:	nop
   140026027:	lea    rax,[rip+0xe332]        # 0x140034360
   14002602e:	mov    QWORD PTR [rdi],rax
   140026031:	lea    rcx,[rdi+0x158]
   140026038:	call   QWORD PTR [rip+0x963a]        # 0x14002f678
   14002603e:	lea    r14,[rip+0xbf23]        # 0x140031f68
   140026045:	mov    QWORD PTR [rdi+0x158],r14
   14002604c:	lea    rcx,[rdi+0x230]
   140026053:	call   QWORD PTR [rip+0x961f]        # 0x14002f678
   140026059:	mov    QWORD PTR [rdi+0x230],r14
   140026060:	lea    rcx,[rdi+0x308]
   140026067:	call   QWORD PTR [rip+0x960b]        # 0x14002f678
   14002606d:	lea    rsi,[rip+0xc20c]        # 0x140032280
   140026074:	mov    QWORD PTR [rdi+0x308],rsi
   14002607b:	lea    rcx,[rdi+0x3e0]
   140026082:	call   QWORD PTR [rip+0x95f0]        # 0x14002f678
   140026088:	lea    rbp,[rip+0xbbf1]        # 0x140031c80
   14002608f:	mov    QWORD PTR [rdi+0x3e0],rbp
   140026096:	lea    rcx,[rdi+0x4b8]
   14002609d:	call   QWORD PTR [rip+0x95d5]        # 0x14002f678
   1400260a3:	mov    QWORD PTR [rdi+0x4b8],rbp
   1400260aa:	lea    rcx,[rdi+0x590]
   1400260b1:	call   QWORD PTR [rip+0x95c1]        # 0x14002f678
   1400260b7:	mov    QWORD PTR [rdi+0x590],r14
   1400260be:	lea    rcx,[rdi+0x668]
   1400260c5:	call   QWORD PTR [rip+0x95ad]        # 0x14002f678
   1400260cb:	mov    QWORD PTR [rdi+0x668],r14
   1400260d2:	lea    rcx,[rdi+0x740]
   1400260d9:	call   QWORD PTR [rip+0x9599]        # 0x14002f678
   1400260df:	mov    QWORD PTR [rdi+0x740],rsi
   1400260e6:	lea    rcx,[rdi+0x818]
   1400260ed:	call   QWORD PTR [rip+0x9585]        # 0x14002f678
   1400260f3:	mov    QWORD PTR [rdi+0x818],r14
   1400260fa:	lea    rcx,[rdi+0x8f0]
   140026101:	call   QWORD PTR [rip+0x9571]        # 0x14002f678
   140026107:	mov    QWORD PTR [rdi+0x8f0],rbp
   14002610e:	lea    rcx,[rdi+0x9c8]
   140026115:	call   QWORD PTR [rip+0x955d]        # 0x14002f678
   14002611b:	lea    rax,[rip+0xc46e]        # 0x140032590
   140026122:	mov    QWORD PTR [rdi+0x9c8],rax
   140026129:	mov    BYTE PTR [rdi+0xab8],0x0
   140026130:	mov    BYTE PTR [rdi+0xfc8],0x0
   140026137:	mov    rcx,rdi
   14002613a:	call   QWORD PTR [rip+0x9828]        # 0x14002f968
   140026140:	nop
   140026141:	mov    rax,rdi
   140026144:	mov    rbx,QWORD PTR [rsp+0x58]
   140026149:	mov    rbp,QWORD PTR [rsp+0x60]
   14002614e:	add    rsp,0x30
   140026152:	pop    r14
   140026154:	pop    rdi
   140026155:	pop    rsi
   140026156:	ret    
   140026157:	int3   
   140026158:	int3   
   140026159:	int3   
   14002615a:	int3   
   14002615b:	int3   
   14002615c:	int3   
   14002615d:	int3   
   14002615e:	int3   
   14002615f:	int3   
   140026160:	mov    QWORD PTR [rsp+0x8],rbx
   140026165:	push   rdi
   140026166:	sub    rsp,0x20
   14002616a:	mov    ebx,edx
   14002616c:	mov    rdi,rcx
   14002616f:	call   0x140026190
   140026174:	test   bl,0x1
   140026177:	je     0x140026182
   140026179:	mov    rcx,rdi
   14002617c:	call   QWORD PTR [rip+0x99f6]        # 0x14002fb78
   140026182:	mov    rax,rdi
   140026185:	mov    rbx,QWORD PTR [rsp+0x30]
   14002618a:	add    rsp,0x20
   14002618e:	pop    rdi
   14002618f:	ret    
   140026190:	mov    QWORD PTR [rsp+0x8],rcx
   140026195:	push   rbx
   140026196:	sub    rsp,0x30
   14002619a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400261a3:	mov    rbx,rcx
   1400261a6:	lea    rax,[rip+0xe1b3]        # 0x140034360
   1400261ad:	mov    QWORD PTR [rcx],rax
   1400261b0:	add    rcx,0x9c8
   1400261b7:	call   QWORD PTR [rip+0x9693]        # 0x14002f850
   1400261bd:	nop
   1400261be:	lea    rcx,[rbx+0x8f0]
   1400261c5:	call   QWORD PTR [rip+0x96d5]        # 0x14002f8a0
   1400261cb:	nop
   1400261cc:	lea    rcx,[rbx+0x818]
   1400261d3:	call   QWORD PTR [rip+0x974f]        # 0x14002f928
   1400261d9:	nop
   1400261da:	lea    rcx,[rbx+0x740]
   1400261e1:	call   QWORD PTR [rip+0x9759]        # 0x14002f940
   1400261e7:	nop
   1400261e8:	lea    rcx,[rbx+0x668]
   1400261ef:	call   QWORD PTR [rip+0x9733]        # 0x14002f928
   1400261f5:	nop
   1400261f6:	lea    rcx,[rbx+0x590]
   1400261fd:	call   QWORD PTR [rip+0x9725]        # 0x14002f928
   140026203:	nop
   140026204:	lea    rcx,[rbx+0x4b8]
   14002620b:	call   QWORD PTR [rip+0x968f]        # 0x14002f8a0
   140026211:	nop
   140026212:	lea    rcx,[rbx+0x3e0]
   140026219:	call   QWORD PTR [rip+0x9681]        # 0x14002f8a0
   14002621f:	nop
   140026220:	lea    rcx,[rbx+0x308]
   140026227:	call   QWORD PTR [rip+0x9713]        # 0x14002f940
   14002622d:	nop
   14002622e:	lea    rcx,[rbx+0x230]
   140026235:	call   QWORD PTR [rip+0x96ed]        # 0x14002f928
   14002623b:	nop
   14002623c:	lea    rcx,[rbx+0x158]
   140026243:	call   QWORD PTR [rip+0x96df]        # 0x14002f928
   140026249:	nop
   14002624a:	mov    rcx,rbx
   14002624d:	add    rsp,0x30
   140026251:	pop    rbx
   140026252:	rex.W jmp QWORD PTR [rip+0x8e67]        # 0x14002f0c0
   140026259:	int3   
   14002625a:	int3   
   14002625b:	int3   
   14002625c:	int3   
   14002625d:	int3   
   14002625e:	int3   
   14002625f:	int3   
   140026260:	mov    QWORD PTR [rsp+0x8],rbx
   140026265:	push   rdi
   140026266:	sub    rsp,0x20
   14002626a:	mov    rdi,rdx
   14002626d:	lea    r8,[rcx+0x158]
   140026274:	mov    rbx,rcx
   140026277:	mov    rcx,rdi
   14002627a:	mov    edx,0x3ef
   14002627f:	call   QWORD PTR [rip+0x9683]        # 0x14002f908
   140026285:	lea    r8,[rbx+0x230]
   14002628c:	mov    edx,0x2
   140026291:	mov    rcx,rdi
   140026294:	call   QWORD PTR [rip+0x966e]        # 0x14002f908
   14002629a:	lea    r8,[rbx+0x308]
   1400262a1:	mov    edx,0x3ed
   1400262a6:	mov    rcx,rdi
   1400262a9:	call   QWORD PTR [rip+0x9659]        # 0x14002f908
   1400262af:	lea    r8,[rbx+0x3e0]
   1400262b6:	mov    edx,0x405
   1400262bb:	mov    rcx,rdi
   1400262be:	call   QWORD PTR [rip+0x9644]        # 0x14002f908
   1400262c4:	lea    r8,[rbx+0x4b8]
   1400262cb:	mov    edx,0x404
   1400262d0:	mov    rcx,rdi
   1400262d3:	call   QWORD PTR [rip+0x962f]        # 0x14002f908
   1400262d9:	lea    r8,[rbx+0x590]
   1400262e0:	mov    edx,0xe146
   1400262e5:	mov    rcx,rdi
   1400262e8:	call   QWORD PTR [rip+0x961a]        # 0x14002f908
   1400262ee:	lea    r8,[rbx+0x668]
   1400262f5:	mov    edx,0x3fe
   1400262fa:	mov    rcx,rdi
   1400262fd:	call   QWORD PTR [rip+0x9605]        # 0x14002f908
   140026303:	lea    r8,[rbx+0x740]
   14002630a:	mov    edx,0x3fd
   14002630f:	mov    rcx,rdi
   140026312:	call   QWORD PTR [rip+0x95f0]        # 0x14002f908
   140026318:	lea    r8,[rbx+0x818]
   14002631f:	mov    edx,0x3ee
   140026324:	mov    rcx,rdi
   140026327:	call   QWORD PTR [rip+0x95db]        # 0x14002f908
   14002632d:	lea    r8,[rbx+0x8f0]
   140026334:	mov    edx,0x3f9
   140026339:	mov    rcx,rdi
   14002633c:	call   QWORD PTR [rip+0x95c6]        # 0x14002f908
   140026342:	lea    r8,[rbx+0x9c8]
   140026349:	mov    edx,0x3eb
   14002634e:	mov    rcx,rdi
   140026351:	mov    rbx,QWORD PTR [rsp+0x30]
   140026356:	add    rsp,0x20
   14002635a:	pop    rdi
   14002635b:	rex.W jmp QWORD PTR [rip+0x95a6]        # 0x14002f908
   140026362:	int3   
   140026363:	int3   
   140026364:	int3   
   140026365:	int3   
   140026366:	int3   
   140026367:	int3   
   140026368:	int3   
   140026369:	int3   
   14002636a:	int3   
   14002636b:	int3   
   14002636c:	int3   
   14002636d:	int3   
   14002636e:	int3   
   14002636f:	int3   
   140026370:	lea    rax,[rip+0xdf49]        # 0x1400342c0
   140026377:	ret    
   140026378:	int3   
   140026379:	int3   
   14002637a:	int3   
   14002637b:	int3   
   14002637c:	int3   
   14002637d:	int3   
   14002637e:	int3   
   14002637f:	int3   
   140026380:	rex push rdi
   140026382:	sub    rsp,0x30
   140026386:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002638f:	mov    QWORD PTR [rsp+0x50],rbx
   140026394:	mov    rdi,rcx
   140026397:	call   QWORD PTR [rip+0x9533]        # 0x14002f8d0
   14002639d:	lea    rcx,[rdi+0x818]
   1400263a4:	xor    edx,edx
   1400263a6:	call   QWORD PTR [rip+0x925c]        # 0x14002f608
   1400263ac:	lea    rcx,[rdi+0x308]
   1400263b3:	xor    edx,edx
   1400263b5:	call   QWORD PTR [rip+0x924d]        # 0x14002f608
   1400263bb:	lea    rcx,[rdi+0x4b8]
   1400263c2:	xor    edx,edx
   1400263c4:	call   QWORD PTR [rip+0x923e]        # 0x14002f608
   1400263ca:	lea    rcx,[rdi+0x9c8]
   1400263d1:	xor    edx,edx
   1400263d3:	call   QWORD PTR [rip+0x922f]        # 0x14002f608
   1400263d9:	lea    rcx,[rdi+0x3e0]
   1400263e0:	xor    edx,edx
   1400263e2:	call   QWORD PTR [rip+0x9220]        # 0x14002f608
   1400263e8:	lea    rcx,[rdi+0x230]
   1400263ef:	xor    edx,edx
   1400263f1:	call   QWORD PTR [rip+0x9211]        # 0x14002f608
   1400263f7:	lea    rcx,[rdi+0x158]
   1400263fe:	xor    edx,edx
   140026400:	call   QWORD PTR [rip+0x9202]        # 0x14002f608
   140026406:	lea    rcx,[rsp+0x48]
   14002640b:	call   0x140001610
   140026410:	nop
   140026411:	mov    rdx,QWORD PTR [rax]
   140026414:	lea    rcx,[rsp+0x40]
   140026419:	call   QWORD PTR [rip+0x9279]        # 0x14002f698
   14002641f:	nop
   140026420:	lea    rcx,[rsp+0x48]
   140026425:	call   QWORD PTR [rip+0x9565]        # 0x14002f990
   14002642b:	mov    rbx,QWORD PTR [rsp+0x40]
   140026430:	lea    rcx,[rdi+0xab8]
   140026437:	mov    rdx,rbx
   14002643a:	call   QWORD PTR [rip+0x8e18]        # 0x14002f258
   140026440:	lea    rcx,[rdi+0xfc8]
   140026447:	mov    rdx,rbx
   14002644a:	call   QWORD PTR [rip+0x8e08]        # 0x14002f258
   140026450:	xor    eax,eax
   140026452:	mov    QWORD PTR [rdi+0x170c],rax
   140026459:	lea    rcx,[rsp+0x40]
   14002645e:	call   QWORD PTR [rip+0x9514]        # 0x14002f978
   140026464:	xor    eax,eax
   140026466:	mov    rbx,QWORD PTR [rsp+0x50]
   14002646b:	add    rsp,0x30
   14002646f:	pop    rdi
   140026470:	ret    
   140026471:	int3   
   140026472:	int3   
   140026473:	int3   
   140026474:	int3   
   140026475:	int3   
   140026476:	int3   
   140026477:	int3   
   140026478:	int3   
   140026479:	int3   
   14002647a:	int3   
   14002647b:	int3   
   14002647c:	int3   
   14002647d:	int3   
   14002647e:	int3   
   14002647f:	int3   
   140026480:	mov    rax,rsp
   140026483:	push   rbp
   140026484:	push   r12
   140026486:	push   r13
   140026488:	push   r14
   14002648a:	push   r15
   14002648c:	lea    rbp,[rax-0x448]
   140026493:	sub    rsp,0x520
   14002649a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400264a3:	mov    QWORD PTR [rax+0x10],rbx
   1400264a7:	mov    QWORD PTR [rax+0x18],rsi
   1400264ab:	mov    QWORD PTR [rax+0x20],rdi
   1400264af:	mov    rax,QWORD PTR [rip+0x15b4a]        # 0x14003c000
   1400264b6:	xor    rax,rsp
   1400264b9:	mov    QWORD PTR [rbp+0x410],rax
   1400264c0:	mov    rdi,rcx
   1400264c3:	xor    ebx,ebx
   1400264c5:	movzx  esi,bx
   1400264c8:	lea    rcx,[rsp+0x28]
   1400264cd:	call   QWORD PTR [rip+0x91bd]        # 0x14002f690
   1400264d3:	nop
   1400264d4:	lea    r15,[rdi+0x308]
   1400264db:	mov    QWORD PTR [rsp+0x30],r15
   1400264e0:	mov    edx,0x12c
   1400264e5:	lea    rcx,[rsp+0x28]
   1400264ea:	call   QWORD PTR [rip+0x9200]        # 0x14002f6f0
   1400264f0:	mov    rdx,rax
   1400264f3:	mov    r8d,0x12a
   1400264f9:	mov    rcx,r15
   1400264fc:	call   QWORD PTR [rip+0x912e]        # 0x14002f630
   140026502:	or     edx,0xffffffff
   140026505:	lea    rcx,[rsp+0x28]
   14002650a:	call   QWORD PTR [rip+0x91d8]        # 0x14002f6e8
   140026510:	xor    r9d,r9d
   140026513:	xor    r8d,r8d
   140026516:	mov    edx,0x184
   14002651b:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026522:	call   QWORD PTR [rip+0x8fd8]        # 0x14002f500
   140026528:	mov    rdx,QWORD PTR [rsp+0x28]
   14002652d:	lea    rcx,[rsp+0x20]
   140026532:	call   QWORD PTR [rip+0x9160]        # 0x14002f698
   140026538:	mov    rdx,QWORD PTR [rax]
   14002653b:	lea    rcx,[rbp+0x80]
   140026542:	call   QWORD PTR [rip+0x8d10]        # 0x14002f258
   140026548:	lea    rcx,[rsp+0x20]
   14002654d:	call   QWORD PTR [rip+0x9425]        # 0x14002f978
   140026553:	lea    rdx,[rip+0xdd5e]        # 0x1400342b8
   14002655a:	lea    rcx,[rbp+0x80]
   140026561:	call   QWORD PTR [rip+0x8d11]        # 0x14002f278
   140026567:	lea    r14,[rdi+0xaa0]
   14002656e:	mov    r8d,0x802
   140026574:	lea    r9,[rsp+0x50]
   140026579:	lea    rdx,[rbp+0x80]
   140026580:	mov    rcx,r14
   140026583:	call   0x14001bf60
   140026588:	test   ax,ax
   14002658b:	jne    0x14002683a
   140026591:	cmp    DWORD PTR [rdi+0x1708],ebx
   140026597:	je     0x1400265cb
   140026599:	lea    rdx,[rsp+0x50]
   14002659e:	lea    rcx,[rdi+0xfb0]
   1400265a5:	call   0x140017340
   1400265aa:	test   ax,ax
   1400265ad:	jne    0x1400265c9
   1400265af:	lea    rcx,[rdi+0xfb0]
   1400265b6:	call   0x1400173e0
   1400265bb:	mov    rdx,rax
   1400265be:	lea    rcx,[rsp+0x50]
   1400265c3:	call   QWORD PTR [rip+0x8c8f]        # 0x14002f258
   1400265c9:	xor    ebx,ebx
   1400265cb:	cmp    BYTE PTR [rsp+0x50],0x0
   1400265d0:	je     0x140026605
   1400265d2:	lea    rdx,[rsp+0x50]
   1400265d7:	lea    rcx,[rsp+0x20]
   1400265dc:	call   QWORD PTR [rip+0x90a6]        # 0x14002f688
   1400265e2:	mov    r9,QWORD PTR [rax]
   1400265e5:	xor    r8d,r8d
   1400265e8:	mov    edx,0x180
   1400265ed:	mov    rcx,QWORD PTR [rdi+0xa08]
   1400265f4:	call   QWORD PTR [rip+0x8f06]        # 0x14002f500
   1400265fa:	lea    rcx,[rsp+0x20]
   1400265ff:	call   QWORD PTR [rip+0x938b]        # 0x14002f990
   140026605:	mov    r15d,0x6
   14002660b:	lea    r12d,[r15+0x7a]
   14002660f:	lea    r13,[rip+0xabea]        # 0x140031200
   140026616:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026620:	mov    rax,QWORD PTR [r14+0x10]
   140026624:	mov    WORD PTR [rax],r15w
   140026628:	mov    rcx,QWORD PTR [r14+0x10]
   14002662c:	mov    rax,QWORD PTR [r14+0x148]
   140026633:	mov    QWORD PTR [rcx+0x8],rax
   140026637:	mov    rax,QWORD PTR [r14+0x10]
   14002663b:	lea    rcx,[rbp+0x1b0]
   140026642:	mov    QWORD PTR [rax+0x18],rcx
   140026646:	mov    rax,QWORD PTR [r14+0x10]
   14002664a:	mov    ecx,0x12c
   14002664f:	mov    WORD PTR [rax+0x20],cx
   140026653:	mov    rcx,QWORD PTR [r14+0x10]
   140026657:	call   QWORD PTR [r14+0x8]
   14002665b:	mov    rax,QWORD PTR [r14+0x10]
   14002665f:	movzx  r11d,WORD PTR [rax]
   140026663:	mov    WORD PTR [r14+0x150],r11w
   14002666b:	movzx  eax,WORD PTR [rax+0x2]
   14002666f:	mov    WORD PTR [r14+0x3cc],ax
   140026677:	lea    r10,[rbp+0x1b0]
   14002667e:	lea    r9,[rsp+0x50]
   140026683:	movzx  edx,WORD PTR [rbp+0x1b0]
   14002668a:	mov    r8,QWORD PTR [rip+0x16c67]        # 0x14003d2f8
   140026691:	test   dx,dx
   140026694:	je     0x140026702
   140026696:	mov    r14d,0x700
   14002669c:	nop    DWORD PTR [rax+0x0]
   1400266a0:	cmp    dx,r12w
   1400266a4:	jb     0x1400266e8
   1400266a6:	mov    eax,ebx
   1400266a8:	cmp    dx,WORD PTR [r8]
   1400266ac:	je     0x1400266e2
   1400266ae:	xchg   ax,ax
   1400266b0:	cmp    eax,r12d
   1400266b3:	jge    0x1400266c6
   1400266b5:	inc    eax
   1400266b7:	movsxd rcx,eax
   1400266ba:	cmp    dx,WORD PTR [r8+rcx*2]
   1400266bf:	jne    0x1400266b0
   1400266c1:	cmp    eax,r12d
   1400266c4:	jl     0x1400266e2
   1400266c6:	lea    eax,[r14+rdx*1]
   1400266ca:	cmp    ax,0x1f
   1400266ce:	ja     0x1400266de
   1400266d0:	movzx  eax,dx
   1400266d3:	movzx  edx,BYTE PTR [r13+rax*2-0x1f200]
   1400266dc:	jmp    0x1400266e8
   1400266de:	xor    dl,dl
   1400266e0:	jmp    0x1400266e8
   1400266e2:	add    al,r12b
   1400266e5:	movzx  edx,al
   1400266e8:	mov    BYTE PTR [r9],dl
   1400266eb:	inc    r9
   1400266ee:	add    r10,0x2
   1400266f2:	movzx  edx,WORD PTR [r10]
   1400266f6:	test   dx,dx
   1400266f9:	jne    0x1400266a0
   1400266fb:	lea    r14,[rdi+0xaa0]
   140026702:	mov    BYTE PTR [r9],0x0
   140026706:	test   r11w,r11w
   14002670a:	jne    0x140026835
   140026710:	cmp    si,0x8
   140026714:	jae    0x140026835
   14002671a:	inc    si
   14002671d:	cmp    DWORD PTR [rdi+0x1708],0x0
   140026724:	je     0x1400267ac
   14002672a:	lea    r9,[rsp+0x50]
   14002672f:	lea    rdx,[rbp+0x1b0]
   140026736:	movzx  eax,BYTE PTR [rsp+0x50]
   14002673b:	test   al,al
   14002673d:	je     0x140026777
   14002673f:	nop
   140026740:	cmp    al,0x20
   140026742:	jae    0x14002674f
   140026744:	movzx  eax,al
   140026747:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   14002674d:	jmp    0x140026765
   14002674f:	cmp    al,r12b
   140026752:	jae    0x140026759
   140026754:	movzx  ecx,al
   140026757:	jmp    0x140026765
   140026759:	movzx  eax,al
   14002675c:	movzx  ecx,WORD PTR [r8+rax*2-0x100]
   140026765:	mov    WORD PTR [rdx],cx
   140026768:	add    rdx,0x2
   14002676c:	inc    r9
   14002676f:	movzx  eax,BYTE PTR [r9]
   140026773:	test   al,al
   140026775:	jne    0x140026740
   140026777:	mov    WORD PTR [rdx],bx
   14002677a:	lea    rdx,[rbp+0x1b0]
   140026781:	lea    rcx,[rdi+0xfb0]
   140026788:	call   0x140017230
   14002678d:	test   ax,ax
   140026790:	jne    0x1400267ac
   140026792:	lea    rcx,[rdi+0xfb0]
   140026799:	call   0x1400173e0
   14002679e:	mov    rdx,rax
   1400267a1:	lea    rcx,[rsp+0x50]
   1400267a6:	call   QWORD PTR [rip+0x8aac]        # 0x14002f258
   1400267ac:	lea    rdx,[rsp+0x50]
   1400267b1:	lea    rcx,[rsp+0x20]
   1400267b6:	call   QWORD PTR [rip+0x8ecc]        # 0x14002f688
   1400267bc:	mov    r9,QWORD PTR [rax]
   1400267bf:	or     r8,0xffffffffffffffff
   1400267c3:	mov    edx,0x1a2
   1400267c8:	mov    rcx,QWORD PTR [rdi+0xa08]
   1400267cf:	call   QWORD PTR [rip+0x8d2b]        # 0x14002f500
   1400267d5:	cmp    eax,0xffffffff
   1400267d8:	sete   bl
   1400267db:	lea    rcx,[rsp+0x20]
   1400267e0:	call   QWORD PTR [rip+0x91aa]        # 0x14002f990
   1400267e6:	test   bl,bl
   1400267e8:	mov    ebx,0x0
   1400267ed:	je     0x140026620
   1400267f3:	cmp    BYTE PTR [rsp+0x50],bl
   1400267f7:	je     0x140026620
   1400267fd:	lea    rdx,[rsp+0x50]
   140026802:	lea    rcx,[rsp+0x38]
   140026807:	call   QWORD PTR [rip+0x8e7b]        # 0x14002f688
   14002680d:	mov    r9,QWORD PTR [rax]
   140026810:	xor    r8d,r8d
   140026813:	mov    edx,0x180
   140026818:	mov    rcx,QWORD PTR [rdi+0xa08]
   14002681f:	call   QWORD PTR [rip+0x8cdb]        # 0x14002f500
   140026825:	lea    rcx,[rsp+0x38]
   14002682a:	call   QWORD PTR [rip+0x9160]        # 0x14002f990
   140026830:	jmp    0x140026620
   140026835:	mov    r15,QWORD PTR [rsp+0x30]
   14002683a:	mov    rcx,r15
   14002683d:	call   QWORD PTR [rip+0x8dbd]        # 0x14002f600
   140026843:	nop
   140026844:	lea    rcx,[rsp+0x28]
   140026849:	call   QWORD PTR [rip+0x9141]        # 0x14002f990
   14002684f:	mov    rcx,QWORD PTR [rbp+0x410]
   140026856:	xor    rcx,rsp
   140026859:	call   0x14002c960
   14002685e:	lea    r11,[rsp+0x520]
   140026866:	mov    rbx,QWORD PTR [r11+0x38]
   14002686a:	mov    rsi,QWORD PTR [r11+0x40]
   14002686e:	mov    rdi,QWORD PTR [r11+0x48]
   140026872:	mov    rsp,r11
   140026875:	pop    r15
   140026877:	pop    r14
   140026879:	pop    r13
   14002687b:	pop    r12
   14002687d:	pop    rbp
   14002687e:	ret    
   14002687f:	int3   
   140026880:	mov    rax,rsp
   140026883:	push   rbp
   140026884:	push   r12
   140026886:	push   r13
   140026888:	push   r14
   14002688a:	push   r15
   14002688c:	lea    rbp,[rax-0x478]
   140026893:	sub    rsp,0x550
   14002689a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400268a3:	mov    QWORD PTR [rax+0x10],rbx
   1400268a7:	mov    QWORD PTR [rax+0x18],rsi
   1400268ab:	mov    QWORD PTR [rax+0x20],rdi
   1400268af:	mov    rax,QWORD PTR [rip+0x1574a]        # 0x14003c000
   1400268b6:	xor    rax,rsp
   1400268b9:	mov    QWORD PTR [rbp+0x440],rax
   1400268c0:	mov    rdi,rcx
   1400268c3:	mov    ebx,0x1
   1400268c8:	movzx  r14d,bx
   1400268cc:	lea    rcx,[rsp+0x38]
   1400268d1:	call   QWORD PTR [rip+0x8db9]        # 0x14002f690
   1400268d7:	nop
   1400268d8:	lea    r13,[rdi+0x308]
   1400268df:	mov    edx,0x12c
   1400268e4:	lea    rcx,[rsp+0x38]
   1400268e9:	call   QWORD PTR [rip+0x8e01]        # 0x14002f6f0
   1400268ef:	mov    rdx,rax
   1400268f2:	mov    r8d,0x12a
   1400268f8:	mov    rcx,r13
   1400268fb:	call   QWORD PTR [rip+0x8d2f]        # 0x14002f630
   140026901:	or     edx,0xffffffff
   140026904:	lea    rcx,[rsp+0x38]
   140026909:	call   QWORD PTR [rip+0x8dd9]        # 0x14002f6e8
   14002690f:	xor    r9d,r9d
   140026912:	xor    r8d,r8d
   140026915:	mov    edx,0x184
   14002691a:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026921:	call   QWORD PTR [rip+0x8bd9]        # 0x14002f500
   140026927:	mov    rdx,QWORD PTR [rsp+0x38]
   14002692c:	lea    rcx,[rsp+0x30]
   140026931:	call   QWORD PTR [rip+0x8d61]        # 0x14002f698
   140026937:	mov    rdx,QWORD PTR [rax]
   14002693a:	lea    rcx,[rbp+0xb0]
   140026941:	call   QWORD PTR [rip+0x8911]        # 0x14002f258
   140026947:	lea    rcx,[rsp+0x30]
   14002694c:	call   QWORD PTR [rip+0x9026]        # 0x14002f978
   140026952:	lea    rdx,[rip+0xd95f]        # 0x1400342b8
   140026959:	lea    rcx,[rbp+0xb0]
   140026960:	call   QWORD PTR [rip+0x8912]        # 0x14002f278
   140026966:	lea    r15,[rdi+0xaa0]
   14002696d:	mov    r8d,0x802
   140026973:	lea    r9,[rbp-0x80]
   140026977:	lea    rdx,[rbp+0xb0]
   14002697e:	mov    rcx,r15
   140026981:	call   0x14001bf60
   140026986:	test   ax,ax
   140026989:	jne    0x140026d3c
   14002698f:	lea    r12,[rdi+0x230]
   140026996:	lea    rdx,[rip+0xd94b]        # 0x1400342e8
   14002699d:	mov    rcx,r12
   1400269a0:	call   QWORD PTR [rip+0x8c92]        # 0x14002f638
   1400269a6:	lea    rcx,[rdi+0x818]
   1400269ad:	xor    edx,edx
   1400269af:	call   QWORD PTR [rip+0x8c53]        # 0x14002f608
   1400269b5:	lea    rcx,[rdi+0x590]
   1400269bc:	xor    edx,edx
   1400269be:	call   QWORD PTR [rip+0x8c44]        # 0x14002f608
   1400269c4:	cmp    DWORD PTR [rdi+0x1708],0x0
   1400269cb:	je     0x1400269fb
   1400269cd:	lea    rdx,[rbp-0x80]
   1400269d1:	lea    rcx,[rdi+0xfb0]
   1400269d8:	call   0x140017340
   1400269dd:	test   ax,ax
   1400269e0:	jne    0x1400269fb
   1400269e2:	lea    rcx,[rdi+0xfb0]
   1400269e9:	call   0x1400173e0
   1400269ee:	mov    rdx,rax
   1400269f1:	lea    rcx,[rbp-0x80]
   1400269f5:	call   QWORD PTR [rip+0x885d]        # 0x14002f258
   1400269fb:	cmp    BYTE PTR [rbp-0x80],0x0
   1400269ff:	je     0x140026a38
   140026a01:	lea    rdx,[rbp-0x80]
   140026a05:	lea    rcx,[rsp+0x30]
   140026a0a:	call   QWORD PTR [rip+0x8c78]        # 0x14002f688
   140026a10:	mov    r9,QWORD PTR [rax]
   140026a13:	xor    r8d,r8d
   140026a16:	mov    edx,0x180
   140026a1b:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026a22:	call   QWORD PTR [rip+0x8ad8]        # 0x14002f500
   140026a28:	movsxd rsi,eax
   140026a2b:	lea    rcx,[rsp+0x30]
   140026a30:	call   QWORD PTR [rip+0x8f5a]        # 0x14002f990
   140026a36:	jmp    0x140026a3d
   140026a38:	mov    rsi,QWORD PTR [rsp+0x30]
   140026a3d:	mov    QWORD PTR [rdi+0x170c],0x1
   140026a48:	inc    DWORD PTR [rip+0x1b1a2]        # 0x140041bf0
   140026a4e:	mov    ebx,0x80
   140026a53:	mov    ecx,0x6
   140026a58:	mov    rax,QWORD PTR [r15+0x10]
   140026a5c:	mov    WORD PTR [rax],cx
   140026a5f:	mov    rcx,QWORD PTR [r15+0x10]
   140026a63:	mov    rax,QWORD PTR [r15+0x148]
   140026a6a:	mov    QWORD PTR [rcx+0x8],rax
   140026a6e:	mov    rax,QWORD PTR [r15+0x10]
   140026a72:	lea    rcx,[rbp+0x1e0]
   140026a79:	mov    QWORD PTR [rax+0x18],rcx
   140026a7d:	mov    rax,QWORD PTR [r15+0x10]
   140026a81:	mov    ecx,0x12c
   140026a86:	mov    WORD PTR [rax+0x20],cx
   140026a8a:	mov    rcx,QWORD PTR [r15+0x10]
   140026a8e:	call   QWORD PTR [r15+0x8]
   140026a92:	mov    rax,QWORD PTR [r15+0x10]
   140026a96:	movzx  r11d,WORD PTR [rax]
   140026a9a:	mov    WORD PTR [r15+0x150],r11w
   140026aa2:	movzx  eax,WORD PTR [rax+0x2]
   140026aa6:	mov    WORD PTR [r15+0x3cc],ax
   140026aae:	lea    r10,[rbp+0x1e0]
   140026ab5:	lea    r8,[rbp-0x80]
   140026ab9:	movzx  edx,WORD PTR [rbp+0x1e0]
   140026ac0:	mov    r9,QWORD PTR [rip+0x16831]        # 0x14003d2f8
   140026ac7:	test   dx,dx
   140026aca:	je     0x140026b4d
   140026ad0:	lea    r12,[rip+0xa729]        # 0x140031200
   140026ad7:	xor    r13d,r13d
   140026ada:	mov    r15d,0x700
   140026ae0:	cmp    dx,bx
   140026ae3:	jb     0x140026b25
   140026ae5:	mov    eax,r13d
   140026ae8:	cmp    dx,WORD PTR [r9]
   140026aec:	je     0x140026b20
   140026aee:	xchg   ax,ax
   140026af0:	cmp    eax,ebx
   140026af2:	jge    0x140026b04
   140026af4:	inc    eax
   140026af6:	movsxd rcx,eax
   140026af9:	cmp    dx,WORD PTR [r9+rcx*2]
   140026afe:	jne    0x140026af0
   140026b00:	cmp    eax,ebx
   140026b02:	jl     0x140026b20
   140026b04:	lea    eax,[r15+rdx*1]
   140026b08:	cmp    ax,0x1f
   140026b0c:	ja     0x140026b1c
   140026b0e:	movzx  eax,dx
   140026b11:	movzx  edx,BYTE PTR [r12+rax*2-0x1f200]
   140026b1a:	jmp    0x140026b25
   140026b1c:	xor    dl,dl
   140026b1e:	jmp    0x140026b25
   140026b20:	add    al,0x80
   140026b22:	movzx  edx,al
   140026b25:	mov    BYTE PTR [r8],dl
   140026b28:	inc    r8
   140026b2b:	add    r10,0x2
   140026b2f:	movzx  edx,WORD PTR [r10]
   140026b33:	test   dx,dx
   140026b36:	jne    0x140026ae0
   140026b38:	lea    r15,[rdi+0xaa0]
   140026b3f:	lea    r12,[rdi+0x230]
   140026b46:	lea    r13,[rdi+0x308]
   140026b4d:	mov    BYTE PTR [r8],0x0
   140026b51:	test   r11w,r11w
   140026b55:	jne    0x140026d01
   140026b5b:	cmp    DWORD PTR [rdi+0x1710],0x1
   140026b62:	je     0x140026d01
   140026b68:	cmp    DWORD PTR [rip+0x1b085],0x1        # 0x140041bf4
   140026b6f:	je     0x140026d01
   140026b75:	cmp    DWORD PTR [rdi+0x1708],0x0
   140026b7c:	je     0x140026c18
   140026b82:	lea    r8,[rbp-0x80]
   140026b86:	lea    rdx,[rbp+0x1e0]
   140026b8d:	movzx  eax,BYTE PTR [rbp-0x80]
   140026b91:	test   al,al
   140026b93:	je     0x140026bdd
   140026b95:	lea    r13,[rip+0xa664]        # 0x140031200
   140026b9c:	nop    DWORD PTR [rax+0x0]
   140026ba0:	cmp    al,0x20
   140026ba2:	jae    0x140026baf
   140026ba4:	movzx  eax,al
   140026ba7:	movzx  ecx,WORD PTR [r13+rax*2+0x0]
   140026bad:	jmp    0x140026bc4
   140026baf:	cmp    al,0x80
   140026bb1:	jae    0x140026bb8
   140026bb3:	movzx  ecx,al
   140026bb6:	jmp    0x140026bc4
   140026bb8:	movzx  eax,al
   140026bbb:	movzx  ecx,WORD PTR [r9+rax*2-0x100]
   140026bc4:	mov    WORD PTR [rdx],cx
   140026bc7:	add    rdx,0x2
   140026bcb:	inc    r8
   140026bce:	movzx  eax,BYTE PTR [r8]
   140026bd2:	test   al,al
   140026bd4:	jne    0x140026ba0
   140026bd6:	lea    r13,[rdi+0x308]
   140026bdd:	xor    eax,eax
   140026bdf:	mov    WORD PTR [rdx],ax
   140026be2:	lea    rdx,[rbp+0x1e0]
   140026be9:	lea    rcx,[rdi+0xfb0]
   140026bf0:	call   0x140017230
   140026bf5:	test   ax,ax
   140026bf8:	jne    0x140026c13
   140026bfa:	lea    rcx,[rdi+0xfb0]
   140026c01:	call   0x1400173e0
   140026c06:	mov    rdx,rax
   140026c09:	lea    rcx,[rbp-0x80]
   140026c0d:	call   QWORD PTR [rip+0x8645]        # 0x14002f258
   140026c13:	mov    ebx,0x80
   140026c18:	cmp    BYTE PTR [rbp-0x80],0x0
   140026c1c:	je     0x140026c53
   140026c1e:	lea    rdx,[rbp-0x80]
   140026c22:	lea    rcx,[rsp+0x30]
   140026c27:	call   QWORD PTR [rip+0x8a5b]        # 0x14002f688
   140026c2d:	mov    r9,QWORD PTR [rax]
   140026c30:	xor    r8d,r8d
   140026c33:	mov    edx,0x180
   140026c38:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026c3f:	call   QWORD PTR [rip+0x88bb]        # 0x14002f500
   140026c45:	movsxd rsi,eax
   140026c48:	lea    rcx,[rsp+0x30]
   140026c4d:	call   QWORD PTR [rip+0x8d3d]        # 0x14002f990
   140026c53:	cmp    rsi,0xffffffffffffffff
   140026c57:	je     0x140026ce4
   140026c5d:	cmp    rsi,0xfffffffffffffffe
   140026c61:	je     0x140026ce4
   140026c67:	movzx  r8d,r14w
   140026c6b:	xor    r9d,r9d
   140026c6e:	mov    edx,0x186
   140026c73:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026c7a:	call   QWORD PTR [rip+0x8880]        # 0x14002f500
   140026c80:	inc    r14w
   140026c84:	mov    DWORD PTR [rsp+0x20],0x1
   140026c8c:	xor    r9d,r9d
   140026c8f:	xor    r8d,r8d
   140026c92:	xor    edx,edx
   140026c94:	lea    rcx,[rsp+0x48]
   140026c99:	call   QWORD PTR [rip+0x8859]        # 0x14002f4f8
   140026c9f:	test   eax,eax
   140026ca1:	je     0x140026cd8
   140026ca3:	lea    rcx,[rsp+0x48]
   140026ca8:	call   QWORD PTR [rip+0x8842]        # 0x14002f4f0
   140026cae:	lea    rcx,[rsp+0x48]
   140026cb3:	call   QWORD PTR [rip+0x8857]        # 0x14002f510
   140026cb9:	mov    DWORD PTR [rsp+0x20],0x1
   140026cc1:	xor    r9d,r9d
   140026cc4:	xor    r8d,r8d
   140026cc7:	xor    edx,edx
   140026cc9:	lea    rcx,[rsp+0x48]
   140026cce:	call   QWORD PTR [rip+0x8824]        # 0x14002f4f8
   140026cd4:	test   eax,eax
   140026cd6:	jne    0x140026ca3
   140026cd8:	cmp    r14w,0x64
   140026cdd:	ja     0x140026d01
   140026cdf:	jmp    0x140026a53
   140026ce4:	mov    r9d,0x40
   140026cea:	lea    r8,[rip+0xbbb7]        # 0x1400328a8
   140026cf1:	lea    rdx,[rip+0xd608]        # 0x140034300
   140026cf8:	mov    rcx,rdi
   140026cfb:	call   QWORD PTR [rip+0x89df]        # 0x14002f6e0
   140026d01:	dec    DWORD PTR [rip+0x1aee9]        # 0x140041bf0
   140026d07:	xor    r9d,r9d
   140026d0a:	xor    r8d,r8d
   140026d0d:	mov    edx,0x186
   140026d12:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026d19:	call   QWORD PTR [rip+0x87e1]        # 0x14002f500
   140026d1f:	lea    rdx,[rip+0xd622]        # 0x140034348
   140026d26:	mov    rcx,r12
   140026d29:	call   QWORD PTR [rip+0x8909]        # 0x14002f638
   140026d2f:	xor    eax,eax
   140026d31:	mov    DWORD PTR [rdi+0x170c],eax
   140026d37:	mov    ebx,0x1
   140026d3c:	lea    rcx,[rdi+0x818]
   140026d43:	mov    edx,ebx
   140026d45:	call   QWORD PTR [rip+0x88bd]        # 0x14002f608
   140026d4b:	lea    rcx,[rdi+0x590]
   140026d52:	mov    edx,ebx
   140026d54:	call   QWORD PTR [rip+0x88ae]        # 0x14002f608
   140026d5a:	mov    rcx,r13
   140026d5d:	call   QWORD PTR [rip+0x889d]        # 0x14002f600
   140026d63:	nop
   140026d64:	lea    rcx,[rsp+0x38]
   140026d69:	call   QWORD PTR [rip+0x8c21]        # 0x14002f990
   140026d6f:	mov    rcx,QWORD PTR [rbp+0x440]
   140026d76:	xor    rcx,rsp
   140026d79:	call   0x14002c960
   140026d7e:	lea    r11,[rsp+0x550]
   140026d86:	mov    rbx,QWORD PTR [r11+0x38]
   140026d8a:	mov    rsi,QWORD PTR [r11+0x40]
   140026d8e:	mov    rdi,QWORD PTR [r11+0x48]
   140026d92:	mov    rsp,r11
   140026d95:	pop    r15
   140026d97:	pop    r14
   140026d99:	pop    r13
   140026d9b:	pop    r12
   140026d9d:	pop    rbp
   140026d9e:	ret    
   140026d9f:	int3   
   140026da0:	mov    rax,rsp
   140026da3:	push   rdi
   140026da4:	sub    rsp,0x6e0
   140026dab:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140026db4:	mov    QWORD PTR [rax+0x10],rbx
   140026db8:	mov    QWORD PTR [rax+0x18],rsi
   140026dbc:	mov    rax,QWORD PTR [rip+0x1523d]        # 0x14003c000
   140026dc3:	xor    rax,rsp
   140026dc6:	mov    QWORD PTR [rsp+0x6d0],rax
   140026dce:	mov    rsi,rcx
   140026dd1:	lea    rcx,[rsp+0x50]
   140026dd6:	call   QWORD PTR [rip+0x88b4]        # 0x14002f690
   140026ddc:	nop
   140026ddd:	mov    edx,0xe716
   140026de2:	lea    rcx,[rsp+0x50]
   140026de7:	call   QWORD PTR [rip+0x8893]        # 0x14002f680
   140026ded:	mov    r8d,0x12a
   140026df3:	lea    rdx,[rsp+0x470]
   140026dfb:	lea    rcx,[rsi+0x740]
   140026e02:	call   QWORD PTR [rip+0x8828]        # 0x14002f630
   140026e08:	mov    DWORD PTR [rsp+0x40],0x1
   140026e10:	mov    DWORD PTR [rsp+0x38],0x0
   140026e18:	mov    QWORD PTR [rsp+0x30],rsi
   140026e1d:	mov    rax,QWORD PTR [rsp+0x50]
   140026e22:	mov    QWORD PTR [rsp+0x28],rax
   140026e27:	mov    DWORD PTR [rsp+0x20],0x6
   140026e2f:	lea    r9,[rsp+0x470]
   140026e37:	xor    r8d,r8d
   140026e3a:	lea    edx,[r8+0x1]
   140026e3e:	lea    rcx,[rsp+0x70]
   140026e43:	call   QWORD PTR [rip+0x8b07]        # 0x14002f950
   140026e49:	nop
   140026e4a:	lea    rcx,[rsp+0x58]
   140026e4f:	call   0x140023e50
   140026e54:	nop
   140026e55:	mov    rbx,QWORD PTR [rax]
   140026e58:	lea    rcx,[rsp+0x70]
   140026e5d:	call   QWORD PTR [rip+0x8ae5]        # 0x14002f948
   140026e63:	mov    QWORD PTR [rax+0x50],rbx
   140026e67:	lea    rcx,[rsp+0x58]
   140026e6c:	call   QWORD PTR [rip+0x8b1e]        # 0x14002f990
   140026e72:	lea    rcx,[rsp+0x70]
   140026e77:	call   QWORD PTR [rip+0x8ae3]        # 0x14002f960
   140026e7d:	cmp    rax,0x1
   140026e81:	jne    0x140026ea8
   140026e83:	lea    rcx,[rsp+0x70]
   140026e88:	call   QWORD PTR [rip+0x8aba]        # 0x14002f948
   140026e8e:	mov    rdx,QWORD PTR [rax+0x30]
   140026e92:	lea    rcx,[rsi+0x740]
   140026e99:	call   QWORD PTR [rip+0x8799]        # 0x14002f638
   140026e9f:	lea    rcx,[rsi+0x308]
   140026ea6:	jmp    0x140026eaf
   140026ea8:	lea    rcx,[rsi+0x740]
   140026eaf:	call   QWORD PTR [rip+0x874b]        # 0x14002f600
   140026eb5:	nop
   140026eb6:	lea    rcx,[rsp+0x70]
   140026ebb:	call   QWORD PTR [rip+0x8a97]        # 0x14002f958
   140026ec1:	nop
   140026ec2:	lea    rcx,[rsp+0x50]
   140026ec7:	call   QWORD PTR [rip+0x8ac3]        # 0x14002f990
   140026ecd:	mov    rcx,QWORD PTR [rsp+0x6d0]
   140026ed5:	xor    rcx,rsp
   140026ed8:	call   0x14002c960
   140026edd:	lea    r11,[rsp+0x6e0]
   140026ee5:	mov    rbx,QWORD PTR [r11+0x18]
   140026ee9:	mov    rsi,QWORD PTR [r11+0x20]
   140026eed:	mov    rsp,r11
   140026ef0:	pop    rdi
   140026ef1:	ret    
   140026ef2:	int3   
   140026ef3:	int3   
   140026ef4:	int3   
   140026ef5:	int3   
   140026ef6:	int3   
   140026ef7:	int3   
   140026ef8:	int3   
   140026ef9:	int3   
   140026efa:	int3   
   140026efb:	int3   
   140026efc:	int3   
   140026efd:	int3   
   140026efe:	int3   
   140026eff:	int3   
   140026f00:	rex push rdi
   140026f02:	sub    rsp,0x20
   140026f06:	cmp    DWORD PTR [rcx+0x170c],0x0
   140026f0d:	mov    rdi,rcx
   140026f10:	je     0x140026f22
   140026f12:	mov    DWORD PTR [rcx+0x1710],0x1
   140026f1c:	add    rsp,0x20
   140026f20:	pop    rdi
   140026f21:	ret    
   140026f22:	add    rcx,0x230
   140026f29:	mov    QWORD PTR [rsp+0x38],rsi
   140026f2e:	call   QWORD PTR [rip+0x86dc]        # 0x14002f610
   140026f34:	cmp    eax,0x1
   140026f37:	jne    0x1400270bf
   140026f3d:	lea    rcx,[rdi+0x818]
   140026f44:	xor    edx,edx
   140026f46:	mov    QWORD PTR [rsp+0x30],rbx
   140026f4b:	call   QWORD PTR [rip+0x86b7]        # 0x14002f608
   140026f51:	lea    rcx,[rdi+0x308]
   140026f58:	xor    edx,edx
   140026f5a:	call   QWORD PTR [rip+0x86a8]        # 0x14002f608
   140026f60:	lea    rcx,[rdi+0x4b8]
   140026f67:	xor    edx,edx
   140026f69:	call   QWORD PTR [rip+0x8699]        # 0x14002f608
   140026f6f:	lea    rcx,[rdi+0x9c8]
   140026f76:	xor    edx,edx
   140026f78:	call   QWORD PTR [rip+0x868a]        # 0x14002f608
   140026f7e:	lea    rcx,[rdi+0x3e0]
   140026f85:	xor    edx,edx
   140026f87:	call   QWORD PTR [rip+0x867b]        # 0x14002f608
   140026f8d:	lea    rcx,[rdi+0x230]
   140026f94:	xor    edx,edx
   140026f96:	call   QWORD PTR [rip+0x866c]        # 0x14002f608
   140026f9c:	lea    rcx,[rdi+0x158]
   140026fa3:	mov    edx,0x1
   140026fa8:	call   QWORD PTR [rip+0x865a]        # 0x14002f608
   140026fae:	lea    rcx,[rdi+0x740]
   140026fb5:	mov    edx,0x1
   140026fba:	call   QWORD PTR [rip+0x8648]        # 0x14002f608
   140026fc0:	lea    rcx,[rdi+0x8f0]
   140026fc7:	mov    edx,0x1
   140026fcc:	call   QWORD PTR [rip+0x8636]        # 0x14002f608
   140026fd2:	lea    rcx,[rdi+0x668]
   140026fd9:	mov    edx,0x1
   140026fde:	call   QWORD PTR [rip+0x8624]        # 0x14002f608
   140026fe4:	lea    rdx,[rip+0xd2e5]        # 0x1400342d0
   140026feb:	lea    rcx,[rdi+0x308]
   140026ff2:	call   QWORD PTR [rip+0x8640]        # 0x14002f638
   140026ff8:	mov    rcx,QWORD PTR [rdi+0xa08]
   140026fff:	xor    r9d,r9d
   140027002:	xor    r8d,r8d
   140027005:	mov    edx,0x184
   14002700a:	call   QWORD PTR [rip+0x84f0]        # 0x14002f500
   140027010:	mov    rax,QWORD PTR [rdi+0xab0]
   140027017:	mov    ecx,0x3
   14002701c:	mov    WORD PTR [rax],cx
   14002701f:	mov    rcx,QWORD PTR [rdi+0xab0]
   140027026:	mov    rax,QWORD PTR [rdi+0xbe8]
   14002702d:	mov    QWORD PTR [rcx+0x8],rax
   140027031:	mov    rcx,QWORD PTR [rdi+0xab0]
   140027038:	call   QWORD PTR [rdi+0xaa8]
   14002703e:	mov    rcx,QWORD PTR [rdi+0xbe8]
   140027045:	call   QWORD PTR [rip+0x8435]        # 0x14002f480
   14002704b:	mov    rax,QWORD PTR [rdi+0xab0]
   140027052:	movzx  ecx,WORD PTR [rax]
   140027055:	mov    WORD PTR [rdi+0xbf0],cx
   14002705c:	mov    rcx,rax
   14002705f:	call   QWORD PTR [rip+0x841b]        # 0x14002f480
   140027065:	mov    rcx,QWORD PTR [rdi+0xaa0]
   14002706c:	call   QWORD PTR [rip+0x81fe]        # 0x14002f270
   140027072:	xor    esi,esi
   140027074:	mov    WORD PTR [rdi+0xbf0],si
   14002707b:	cmp    DWORD PTR [rdi+0x1708],esi
   140027081:	je     0x1400270ba
   140027083:	lea    rcx,[rdi+0xfb0]
   14002708a:	call   0x140017cb0
   14002708f:	mov    rcx,QWORD PTR [rdi+0xfc0]
   140027096:	call   QWORD PTR [rip+0x83e4]        # 0x14002f480
   14002709c:	mov    rcx,QWORD PTR [rdi+0xfb0]
   1400270a3:	call   QWORD PTR [rip+0x81c7]        # 0x14002f270
   1400270a9:	mov    WORD PTR [rdi+0x1100],si
   1400270b0:	mov    DWORD PTR [rdi+0x1708],0x1
   1400270ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400270bf:	lea    rcx,[rdi+0x740]
   1400270c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400270cb:	add    rsp,0x20
   1400270cf:	pop    rdi
   1400270d0:	rex.W jmp QWORD PTR [rip+0x8529]        # 0x14002f600
   1400270d7:	int3   
   1400270d8:	int3   
   1400270d9:	int3   
   1400270da:	int3   
   1400270db:	int3   
   1400270dc:	int3   
   1400270dd:	int3   
   1400270de:	int3   
   1400270df:	int3   
   1400270e0:	jmp    0x1400270f0
   1400270e5:	int3   
   1400270e6:	int3   
   1400270e7:	int3   
   1400270e8:	int3   
   1400270e9:	int3   
   1400270ea:	int3   
   1400270eb:	int3   
   1400270ec:	int3   
   1400270ed:	int3   
   1400270ee:	int3   
   1400270ef:	int3   
   1400270f0:	mov    rax,rsp
   1400270f3:	push   rbp
   1400270f4:	push   r12
   1400270f6:	push   r13
   1400270f8:	push   r14
   1400270fa:	push   r15
   1400270fc:	lea    rbp,[rax-0x588]
   140027103:	sub    rsp,0x660
   14002710a:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140027113:	mov    QWORD PTR [rax+0x10],rbx
   140027117:	mov    QWORD PTR [rax+0x18],rsi
   14002711b:	mov    QWORD PTR [rax+0x20],rdi
   14002711f:	mov    rax,QWORD PTR [rip+0x14eda]        # 0x14003c000
   140027126:	xor    rax,rsp
   140027129:	mov    QWORD PTR [rbp+0x550],rax
   140027130:	mov    r14,rcx
   140027133:	movsd  xmm0,QWORD PTR [rip+0xb425]        # 0x140032560
   14002713b:	movsd  QWORD PTR [rbp+0x90],xmm0
   140027143:	movzx  eax,WORD PTR [rip+0xb41e]        # 0x140032568
   14002714a:	mov    WORD PTR [rbp+0x98],ax
   140027151:	movzx  eax,BYTE PTR [rip+0xb412]        # 0x14003256a
   140027158:	mov    BYTE PTR [rbp+0x9a],al
   14002715e:	xor    edx,edx
   140027160:	mov    r8d,0x121
   140027166:	lea    rcx,[rbp+0x9b]
   14002716d:	call   0x14002ce12
   140027172:	lea    rcx,[rsp+0x50]
   140027177:	call   QWORD PTR [rip+0x87f3]        # 0x14002f970
   14002717d:	nop
   14002717e:	mov    edx,0x66
   140027183:	lea    rcx,[rsp+0x50]
   140027188:	call   QWORD PTR [rip+0x87f2]        # 0x14002f980
   14002718e:	lea    rcx,[rsp+0x48]
   140027193:	call   QWORD PTR [rip+0x84f7]        # 0x14002f690
   140027199:	nop
   14002719a:	lea    r13,[r14+0x740]
   1400271a1:	mov    edx,0x12c
   1400271a6:	lea    rcx,[rsp+0x48]
   1400271ab:	call   QWORD PTR [rip+0x853f]        # 0x14002f6f0
   1400271b1:	mov    rdx,rax
   1400271b4:	mov    r8d,0x12a
   1400271ba:	mov    rcx,r13
   1400271bd:	call   QWORD PTR [rip+0x846d]        # 0x14002f630
   1400271c3:	or     rbx,0xffffffffffffffff
   1400271c7:	mov    edx,ebx
   1400271c9:	lea    rcx,[rsp+0x48]
   1400271ce:	call   QWORD PTR [rip+0x8514]        # 0x14002f6e8
   1400271d4:	mov    rdx,QWORD PTR [rsp+0x48]
   1400271d9:	lea    rcx,[rsp+0x40]
   1400271de:	call   QWORD PTR [rip+0x84b4]        # 0x14002f698
   1400271e4:	mov    rdx,QWORD PTR [rax]
   1400271e7:	lea    rcx,[rbp+0x1c0]
   1400271ee:	call   QWORD PTR [rip+0x8064]        # 0x14002f258
   1400271f4:	lea    rcx,[rsp+0x40]
   1400271f9:	call   QWORD PTR [rip+0x8779]        # 0x14002f978
   1400271ff:	lea    rax,[rbp+0x1c0]
   140027206:	inc    rbx
   140027209:	cmp    BYTE PTR [rax+rbx*1],0x0
   14002720d:	jne    0x140027206
   14002720f:	lea    rax,[rbp+0x1c0]
   140027216:	sub    rax,0x6
   14002721a:	add    rbx,rax
   14002721d:	lea    rcx,[rsp+0x60]
   140027222:	lea    rax,[rsp+0x60]
   140027227:	sub    rbx,rax
   14002722a:	nop    WORD PTR [rax+rax*1+0x0]
   140027230:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140027234:	mov    BYTE PTR [rcx],al
   140027236:	inc    rcx
   140027239:	test   al,al
   14002723b:	jne    0x140027230
   14002723d:	mov    BYTE PTR [rsp+0x62],al
   140027241:	lea    rax,[rip+0x15a70]        # 0x14003ccb8
   140027248:	movzx  ebx,WORD PTR [rsp+0x60]
   14002724d:	movzx  ecx,WORD PTR [rip+0x15a64]        # 0x14003ccb8
   140027254:	test   cx,cx
   140027257:	je     0x140027277
   140027259:	nop    DWORD PTR [rax+0x0]
   140027260:	cmp    bx,cx
   140027263:	je     0x140027273
   140027265:	add    rax,0x4
   140027269:	movzx  ecx,WORD PTR [rax]
   14002726c:	test   cx,cx
   14002726f:	jne    0x140027260
   140027271:	jmp    0x140027277
   140027273:	movzx  ebx,WORD PTR [rax+0x2]
   140027277:	lea    rcx,[rip+0xb2d2]        # 0x140032550
   14002727e:	call   QWORD PTR [rip+0x7ffc]        # 0x14002f280
   140027284:	movsxd rcx,eax
   140027287:	mov    WORD PTR [rbp+rcx*1+0x94],bx
   14002728f:	lea    rdx,[r14+0xab8]
   140027296:	lea    rcx,[rbp+0x2f0]
   14002729d:	call   QWORD PTR [rip+0x7fb5]        # 0x14002f258
   1400272a3:	lea    rcx,[rbp+0x420]
   1400272aa:	cmp    BYTE PTR [rbp+0x2f0],0x0
   1400272b1:	je     0x1400272d0
   1400272b3:	lea    r9,[rbp+0x90]
   1400272ba:	lea    r8,[rbp+0x2f0]
   1400272c1:	lea    rdx,[rip+0xa1f4]        # 0x1400314bc
   1400272c8:	call   QWORD PTR [rip+0x8182]        # 0x14002f450
   1400272ce:	jmp    0x1400272dd
   1400272d0:	lea    rdx,[rbp+0x90]
   1400272d7:	call   QWORD PTR [rip+0x7f7b]        # 0x14002f258
   1400272dd:	lea    rcx,[r14+0xe72]
   1400272e4:	lea    rdx,[rbp+0x1c0]
   1400272eb:	call   QWORD PTR [rip+0x7f67]        # 0x14002f258
   1400272f1:	lea    rdx,[rip+0xb274]        # 0x14003256c
   1400272f8:	lea    rcx,[rbp+0x420]
   1400272ff:	call   QWORD PTR [rip+0x813b]        # 0x14002f440
   140027305:	mov    r12,rax
   140027308:	xor    ebx,ebx
   14002730a:	test   rax,rax
   14002730d:	jne    0x14002731a
   14002730f:	mov    rax,QWORD PTR [rsp+0x50]
   140027314:	movzx  r15d,WORD PTR [rax]
   140027318:	jmp    0x140027387
   14002731a:	xor    r13d,r13d
   14002731d:	mov    edi,r13d
   140027320:	lea    rbx,[rsp+0x60]
   140027325:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027330:	mov    ecx,r13d
   140027333:	lea    rax,[rsp+0x60]
   140027338:	cmp    BYTE PTR [rsp+0x60],cl
   14002733c:	je     0x14002734b
   14002733e:	xchg   ax,ax
   140027340:	lea    rax,[rax+0x1]
   140027344:	inc    ecx
   140027346:	cmp    BYTE PTR [rax],r13b
   140027349:	jne    0x140027340
   14002734b:	cmp    edi,ecx
   14002734d:	jge    0x14002736f
   14002734f:	movzx  esi,BYTE PTR [rbx]
   140027352:	mov    ecx,esi
   140027354:	call   QWORD PTR [rip+0x80c6]        # 0x14002f420
   14002735a:	test   eax,eax
   14002735c:	je     0x140027368
   14002735e:	mov    ecx,esi
   140027360:	call   QWORD PTR [rip+0x80aa]        # 0x14002f410
   140027366:	mov    BYTE PTR [rbx],al
   140027368:	inc    edi
   14002736a:	inc    rbx
   14002736d:	jmp    0x140027330
   14002736f:	movzx  r15d,WORD PTR [rsp+0x60]
   140027375:	mov    rcx,r12
   140027378:	call   QWORD PTR [rip+0x80b2]        # 0x14002f430
   14002737e:	lea    r13,[r14+0x740]
   140027385:	xor    ebx,ebx
   140027387:	mov    ecx,0x10
   14002738c:	call   QWORD PTR [rip+0x8606]        # 0x14002f998
   140027392:	mov    rdi,rax
   140027395:	mov    QWORD PTR [rsp+0x40],rax
   14002739a:	test   rax,rax
   14002739d:	je     0x1400273d8
   14002739f:	mov    WORD PTR [rax],bx
   1400273a2:	mov    QWORD PTR [rax+0x8],rbx
   1400273a6:	lea    rcx,[rbp+0x1c0]
   1400273ad:	call   QWORD PTR [rip+0x7ecd]        # 0x14002f280
   1400273b3:	test   eax,eax
   1400273b5:	jle    0x1400273db
   1400273b7:	inc    eax
   1400273b9:	movsxd rcx,eax
   1400273bc:	call   QWORD PTR [rip+0x85d6]        # 0x14002f998
   1400273c2:	mov    QWORD PTR [rdi+0x8],rax
   1400273c6:	lea    rdx,[rbp+0x1c0]
   1400273cd:	mov    rcx,rax
   1400273d0:	call   QWORD PTR [rip+0x7e82]        # 0x14002f258
   1400273d6:	jmp    0x1400273db
   1400273d8:	mov    rdi,rbx
   1400273db:	lea    rcx,[rsp+0x40]
   1400273e0:	call   QWORD PTR [rip+0x858a]        # 0x14002f970
   1400273e6:	nop
   1400273e7:	mov    edx,0x66
   1400273ec:	lea    rcx,[rsp+0x40]
   1400273f1:	call   QWORD PTR [rip+0x8589]        # 0x14002f980
   1400273f7:	mov    edx,0x5948
   1400273fc:	mov    r9,rdi
   1400273ff:	lea    rcx,[r14+0xfb0]
   140027406:	call   0x140017500
   14002740b:	test   ax,ax
   14002740e:	jne    0x14002741d
   140027410:	lea    rcx,[rsp+0x40]
   140027415:	call   QWORD PTR [rip+0x855d]        # 0x14002f978
   14002741b:	jmp    0x140027446
   14002741d:	mov    edx,0x5948
   140027422:	xor    r9d,r9d
   140027425:	lea    rcx,[r14+0xfb0]
   14002742c:	call   0x140017500
   140027431:	movzx  ebx,ax
   140027434:	lea    rcx,[rsp+0x40]
   140027439:	call   QWORD PTR [rip+0x8539]        # 0x14002f978
   14002743f:	test   bx,bx
   140027442:	jne    0x140027483
   140027444:	xor    ebx,ebx
   140027446:	lea    rcx,[r14+0xfb0]
   14002744d:	call   0x140017a20
   140027452:	test   ax,ax
   140027455:	jne    0x140027483
   140027457:	mov    WORD PTR [rsp+0x28],bx
   14002745c:	mov    WORD PTR [rsp+0x20],r15w
   140027462:	xor    r9d,r9d
   140027465:	lea    rcx,[r14+0xfb0]
   14002746c:	call   0x140017ad0
   140027471:	test   ax,ax
   140027474:	jne    0x140027483
   140027476:	mov    DWORD PTR [r14+0x1708],0x1
   140027481:	jmp    0x14002748e
   140027483:	mov    DWORD PTR [r14+0x1708],0x0
   14002748e:	mov    r8,rdi
   140027491:	lea    rcx,[r14+0xaa0]
   140027498:	call   0x14001bdf0
   14002749d:	test   ax,ax
   1400274a0:	jne    0x14002757a
   1400274a6:	lea    rcx,[r14+0xaa0]
   1400274ad:	call   0x140017a20
   1400274b2:	test   ax,ax
   1400274b5:	jne    0x14002757a
   1400274bb:	movzx  edx,r15w
   1400274bf:	lea    rcx,[r14+0xaa0]
   1400274c6:	call   0x14001be70
   1400274cb:	test   ax,ax
   1400274ce:	jne    0x14002757a
   1400274d4:	lea    rcx,[r14+0x818]
   1400274db:	mov    edx,0x1
   1400274e0:	call   QWORD PTR [rip+0x8122]        # 0x14002f608
   1400274e6:	mov    edx,0x1
   1400274eb:	lea    rcx,[r14+0x308]
   1400274f2:	call   QWORD PTR [rip+0x8110]        # 0x14002f608
   1400274f8:	lea    rcx,[r14+0x4b8]
   1400274ff:	mov    edx,0x1
   140027504:	call   QWORD PTR [rip+0x80fe]        # 0x14002f608
   14002750a:	lea    rcx,[r14+0x9c8]
   140027511:	mov    edx,0x1
   140027516:	call   QWORD PTR [rip+0x80ec]        # 0x14002f608
   14002751c:	lea    rcx,[r14+0x3e0]
   140027523:	mov    edx,0x1
   140027528:	call   QWORD PTR [rip+0x80da]        # 0x14002f608
   14002752e:	lea    rcx,[r14+0x230]
   140027535:	mov    edx,0x1
   14002753a:	call   QWORD PTR [rip+0x80c8]        # 0x14002f608
   140027540:	xor    edx,edx
   140027542:	mov    rcx,r13
   140027545:	call   QWORD PTR [rip+0x80bd]        # 0x14002f608
   14002754b:	lea    rcx,[r14+0x8f0]
   140027552:	xor    edx,edx
   140027554:	call   QWORD PTR [rip+0x80ae]        # 0x14002f608
   14002755a:	lea    rcx,[r14+0x668]
   140027561:	xor    edx,edx
   140027563:	call   QWORD PTR [rip+0x809f]        # 0x14002f608
   140027569:	lea    rcx,[r14+0x158]
   140027570:	xor    edx,edx
   140027572:	call   QWORD PTR [rip+0x8090]        # 0x14002f608
   140027578:	jmp    0x140027597
   14002757a:	mov    r9d,0x10
   140027580:	lea    r8,[rip+0xb321]        # 0x1400328a8
   140027587:	lea    rdx,[rip+0xb33a]        # 0x1400328c8
   14002758e:	mov    rcx,r14
   140027591:	call   QWORD PTR [rip+0x8149]        # 0x14002f6e0
   140027597:	lea    rcx,[r14+0x308]
   14002759e:	call   QWORD PTR [rip+0x805c]        # 0x14002f600
   1400275a4:	test   rdi,rdi
   1400275a7:	je     0x1400275c2
   1400275a9:	mov    rcx,QWORD PTR [rdi+0x8]
   1400275ad:	test   rcx,rcx
   1400275b0:	je     0x1400275b8
   1400275b2:	call   QWORD PTR [rip+0x85c0]        # 0x14002fb78
   1400275b8:	mov    rcx,rdi
   1400275bb:	call   QWORD PTR [rip+0x85b7]        # 0x14002fb78
   1400275c1:	nop
   1400275c2:	lea    rcx,[rsp+0x48]
   1400275c7:	call   QWORD PTR [rip+0x83c3]        # 0x14002f990
   1400275cd:	nop
   1400275ce:	lea    rcx,[rsp+0x50]
   1400275d3:	call   QWORD PTR [rip+0x839f]        # 0x14002f978
   1400275d9:	mov    rcx,QWORD PTR [rbp+0x550]
   1400275e0:	xor    rcx,rsp
   1400275e3:	call   0x14002c960
   1400275e8:	lea    r11,[rsp+0x660]
   1400275f0:	mov    rbx,QWORD PTR [r11+0x38]
   1400275f4:	mov    rsi,QWORD PTR [r11+0x40]
   1400275f8:	mov    rdi,QWORD PTR [r11+0x48]
   1400275fc:	mov    rsp,r11
   1400275ff:	pop    r15
   140027601:	pop    r14
   140027603:	pop    r13
   140027605:	pop    r12
   140027607:	pop    rbp
   140027608:	ret    
   140027609:	int3   
   14002760a:	int3   
   14002760b:	int3   
   14002760c:	int3   
   14002760d:	int3   
   14002760e:	int3   
   14002760f:	int3   
   140027610:	rex push rbx
   140027612:	sub    rsp,0x290
   140027619:	mov    rax,QWORD PTR [rip+0x149e0]        # 0x14003c000
   140027620:	xor    rax,rsp
   140027623:	mov    QWORD PTR [rsp+0x280],rax
   14002762b:	mov    rbx,rcx
   14002762e:	lea    rdx,[rsp+0x20]
   140027633:	mov    r8d,0x12a
   140027639:	add    rcx,0x740
   140027640:	call   QWORD PTR [rip+0x7fea]        # 0x14002f630
   140027646:	cmp    WORD PTR [rsp+0x20],0x0
   14002764c:	lea    rcx,[rbx+0x158]
   140027653:	jne    0x140027659
   140027655:	xor    edx,edx
   140027657:	jmp    0x14002765e
   140027659:	mov    edx,0x1
   14002765e:	call   QWORD PTR [rip+0x7fa4]        # 0x14002f608
   140027664:	mov    rcx,QWORD PTR [rsp+0x280]
   14002766c:	xor    rcx,rsp
   14002766f:	call   0x14002c960
   140027674:	add    rsp,0x290
   14002767b:	pop    rbx
   14002767c:	ret    
   14002767d:	int3   
   14002767e:	int3   
   14002767f:	int3   
   140027680:	mov    QWORD PTR [rsp+0x10],rbx
   140027685:	push   rdi
   140027686:	sub    rsp,0x250
   14002768d:	mov    rax,QWORD PTR [rip+0x1496c]        # 0x14003c000
   140027694:	xor    rax,rsp
   140027697:	mov    QWORD PTR [rsp+0x240],rax
   14002769f:	mov    rbx,rcx
   1400276a2:	lea    rcx,[rsp+0x40]
   1400276a7:	xor    edx,edx
   1400276a9:	mov    r8d,0x200
   1400276af:	call   0x14002ce12
   1400276b4:	mov    rcx,QWORD PTR [rbx]
   1400276b7:	xor    eax,eax
   1400276b9:	lea    r9,[rsp+0x30]
   1400276be:	lea    rdx,[rsp+0x40]
   1400276c3:	mov    r8d,0x200
   1400276c9:	mov    DWORD PTR [rsp+0x40],0x435057ff
   1400276d1:	mov    DWORD PTR [rsp+0x44],0x200
   1400276d9:	mov    WORD PTR [rsp+0x48],0xa01
   1400276e0:	mov    DWORD PTR [rsp+0x4a],0x2
   1400276e8:	mov    WORD PTR [rsp+0x4e],ax
   1400276ed:	mov    QWORD PTR [rsp+0x50],0x20002
   1400276f6:	lea    edi,[rax+0x2]
   1400276f9:	mov    WORD PTR [rsp+0x58],ax
   1400276fe:	mov    QWORD PTR [rsp+0x20],rax
   140027703:	call   QWORD PTR [rip+0x7b07]        # 0x14002f210
   140027709:	test   eax,eax
   14002770b:	jne    0x14002773e
   14002770d:	call   QWORD PTR [rip+0x7a4d]        # 0x14002f160
   140027713:	cmp    eax,0x58
   140027716:	jae    0x140027726
   140027718:	lea    rcx,[rip+0x9981]        # 0x1400310a0
   14002771f:	mov    eax,eax
   140027721:	mov    ecx,DWORD PTR [rcx+rax*4]
   140027724:	jmp    0x14002772b
   140027726:	mov    ecx,0x106
   14002772b:	mov    DWORD PTR [rip+0x1b987],ecx        # 0x1400430b8
   140027731:	mov    DWORD PTR [rip+0x1bd91],edi        # 0x1400434c8
   140027737:	mov    BYTE PTR [rip+0x1bc82],0x0        # 0x1400433c0
   14002773e:	mov    eax,DWORD PTR [rsp+0x30]
   140027742:	mov    rcx,QWORD PTR [rsp+0x240]
   14002774a:	xor    rcx,rsp
   14002774d:	call   0x14002c960
   140027752:	mov    rbx,QWORD PTR [rsp+0x268]
   14002775a:	add    rsp,0x250
   140027761:	pop    rdi
   140027762:	ret    
   140027763:	int3   
   140027764:	int3   
   140027765:	int3   
   140027766:	int3   
   140027767:	int3   
   140027768:	int3   
   140027769:	int3   
   14002776a:	int3   
   14002776b:	int3   
   14002776c:	int3   
   14002776d:	int3   
   14002776e:	int3   
   14002776f:	int3   
   140027770:	mov    QWORD PTR [rsp+0x10],rbx
   140027775:	mov    QWORD PTR [rsp+0x18],rsi
   14002777a:	push   rdi
   14002777b:	sub    rsp,0x250
   140027782:	mov    rax,QWORD PTR [rip+0x14877]        # 0x14003c000
   140027789:	xor    rax,rsp
   14002778c:	mov    QWORD PTR [rsp+0x240],rax
   140027794:	xor    r8d,r8d
   140027797:	xor    edx,edx
   140027799:	mov    rdi,rcx
   14002779c:	call   0x14002ad10
   1400277a1:	mov    rcx,QWORD PTR [rdi]
   1400277a4:	lea    r9,[rsp+0x30]
   1400277a9:	lea    rdx,[rsp+0x40]
   1400277ae:	mov    r8d,0x200
   1400277b4:	mov    QWORD PTR [rsp+0x20],0x0
   1400277bd:	call   QWORD PTR [rip+0x7a45]        # 0x14002f208
   1400277c3:	lea    rsi,[rip+0x98d6]        # 0x1400310a0
   1400277ca:	mov    ebx,0x106
   1400277cf:	test   eax,eax
   1400277d1:	jne    0x1400277fe
   1400277d3:	call   QWORD PTR [rip+0x7987]        # 0x14002f160
   1400277d9:	cmp    eax,0x58
   1400277dc:	jae    0x1400277e5
   1400277de:	mov    eax,eax
   1400277e0:	mov    ecx,DWORD PTR [rsi+rax*4]
   1400277e3:	jmp    0x1400277e7
   1400277e5:	mov    ecx,ebx
   1400277e7:	mov    DWORD PTR [rip+0x1b8cb],ecx        # 0x1400430b8
   1400277ed:	mov    DWORD PTR [rip+0x1bcd1],0x2        # 0x1400434c8
   1400277f7:	mov    BYTE PTR [rip+0x1bbc2],0x0        # 0x1400433c0
   1400277fe:	cmp    DWORD PTR [rsp+0x30],0x200
   140027806:	je     0x14002780f
   140027808:	mov    eax,0x6a
   14002780d:	jmp    0x14002788d
   14002780f:	xor    edx,edx
   140027811:	mov    rcx,rdi
   140027814:	lea    r8d,[rdx+0x2]
   140027818:	call   0x14002ad10
   14002781d:	xor    edx,edx
   14002781f:	mov    rcx,rdi
   140027822:	lea    r8d,[rdx+0x1]
   140027826:	call   0x14002ad10
   14002782b:	xor    r8d,r8d
   14002782e:	xor    edx,edx
   140027830:	mov    rcx,rdi
   140027833:	mov    DWORD PTR [rsp+0x54],eax
   140027837:	call   0x14002ad10
   14002783c:	mov    rcx,QWORD PTR [rdi]
   14002783f:	lea    r9,[rsp+0x30]
   140027844:	lea    rdx,[rsp+0x40]
   140027849:	mov    r8d,0x200
   14002784f:	mov    QWORD PTR [rsp+0x20],0x0
   140027858:	call   QWORD PTR [rip+0x79b2]        # 0x14002f210
   14002785e:	test   eax,eax
   140027860:	jne    0x140027889
   140027862:	call   QWORD PTR [rip+0x78f8]        # 0x14002f160
   140027868:	cmp    eax,0x58
   14002786b:	jae    0x140027872
   14002786d:	mov    eax,eax
   14002786f:	mov    ebx,DWORD PTR [rsi+rax*4]
   140027872:	mov    DWORD PTR [rip+0x1b840],ebx        # 0x1400430b8
   140027878:	mov    DWORD PTR [rip+0x1bc46],0x2        # 0x1400434c8
   140027882:	mov    BYTE PTR [rip+0x1bb37],0x0        # 0x1400433c0
   140027889:	mov    eax,DWORD PTR [rsp+0x30]
   14002788d:	mov    rcx,QWORD PTR [rsp+0x240]
   140027895:	xor    rcx,rsp
   140027898:	call   0x14002c960
   14002789d:	lea    r11,[rsp+0x250]
   1400278a5:	mov    rbx,QWORD PTR [r11+0x18]
   1400278a9:	mov    rsi,QWORD PTR [r11+0x20]
   1400278ad:	mov    rsp,r11
   1400278b0:	pop    rdi
   1400278b1:	ret    
   1400278b2:	int3   
   1400278b3:	int3   
   1400278b4:	int3   
   1400278b5:	int3   
   1400278b6:	int3   
   1400278b7:	int3   
   1400278b8:	int3   
   1400278b9:	int3   
   1400278ba:	int3   
   1400278bb:	int3   
   1400278bc:	int3   
   1400278bd:	int3   
   1400278be:	int3   
   1400278bf:	int3   
   1400278c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400278c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400278ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400278cf:	push   rdi
   1400278d0:	push   r14
   1400278d2:	push   r15
   1400278d4:	sub    rsp,0x20
   1400278d8:	movzx  ebp,WORD PTR [rdx]
   1400278db:	movzx  r10d,WORD PTR [rip+0x1a3b5]        # 0x140041c98
   1400278e3:	mov    r15,r8
   1400278e6:	lea    r9,[r10+0x8]
   1400278ea:	mov    rsi,rdx
   1400278ed:	mov    rdi,rcx
   1400278f0:	add    r9,rbp
   1400278f3:	mov    r14d,ebp
   1400278f6:	cmp    r9,0xf000
   1400278fd:	jb     0x140027961
   1400278ff:	mov    rdx,QWORD PTR [rip+0x1ad0a]        # 0x140042610
   140027906:	movzx  r8d,r10w
   14002790a:	call   0x14002a820
   14002790f:	movzx  ecx,WORD PTR [rip+0x1a382]        # 0x140041c98
   140027916:	cmp    eax,ecx
   140027918:	jne    0x14002795a
   14002791a:	xor    r10d,r10d
   14002791d:	lea    rax,[rbp+0x8]
   140027921:	mov    WORD PTR [rip+0x1a36f],r10w        # 0x140041c98
   140027929:	cmp    rax,0xf000
   14002792f:	jb     0x140027961
   140027931:	lea    r8d,[r10+0x8]
   140027935:	mov    rdx,rsi
   140027938:	mov    rcx,rdi
   14002793b:	call   0x14002a820
   140027940:	cmp    eax,0x8
   140027943:	jne    0x14002795a
   140027945:	movzx  ebx,bp
   140027948:	mov    rdx,r15
   14002794b:	mov    rcx,rdi
   14002794e:	mov    r8d,ebx
   140027951:	call   0x14002a820
   140027956:	cmp    eax,ebx
   140027958:	je     0x1400279d2
   14002795a:	mov    eax,0x4
   14002795f:	jmp    0x1400279d4
   140027961:	mov    rax,QWORD PTR [rsi]
   140027964:	movzx  ebx,r10w
   140027968:	mov    r8d,0x8
   14002796e:	add    rbx,QWORD PTR [rip+0x1ac9b]        # 0x140042610
   140027975:	mov    rdx,rsi
   140027978:	mov    rcx,rbx
   14002797b:	mov    QWORD PTR [rbx],rax
   14002797e:	call   QWORD PTR [rip+0x7b04]        # 0x14002f488
   140027984:	movzx  eax,WORD PTR [rip+0x1a30d]        # 0x140041c98
   14002798b:	movzx  r8d,WORD PTR [rsi]
   14002798f:	add    ax,0x8
   140027993:	mov    rdx,r15
   140027996:	movzx  ecx,ax
   140027999:	mov    WORD PTR [rip+0x1a2f8],ax        # 0x140041c98
   1400279a0:	add    rcx,QWORD PTR [rip+0x1ac69]        # 0x140042610
   1400279a7:	call   QWORD PTR [rip+0x7adb]        # 0x14002f488
   1400279ad:	movzx  eax,WORD PTR [rsi]
   1400279b0:	lea    rcx,[rbx+0x8]
   1400279b4:	add    WORD PTR [rip+0x1a2dd],ax        # 0x140041c98
   1400279bb:	mov    r8,r14
   1400279be:	mov    rdx,r15
   1400279c1:	call   QWORD PTR [rip+0x7ac1]        # 0x14002f488
   1400279c7:	add    bp,0x8
   1400279cb:	add    WORD PTR [rip+0x1a2c6],bp        # 0x140041c98
   1400279d2:	xor    eax,eax
   1400279d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400279d9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400279de:	mov    rsi,QWORD PTR [rsp+0x50]
   1400279e3:	add    rsp,0x20
   1400279e7:	pop    r15
   1400279e9:	pop    r14
   1400279eb:	pop    rdi
   1400279ec:	ret    
   1400279ed:	int3   
   1400279ee:	int3   
   1400279ef:	int3   
   1400279f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400279f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400279fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400279ff:	mov    QWORD PTR [rsp+0x20],rdi
   140027a04:	push   r14
   140027a06:	sub    rsp,0x20
   140027a0a:	movzx  r9d,WORD PTR [rip+0x1a286]        # 0x140041c98
   140027a12:	movzx  ebx,r8w
   140027a16:	mov    ebp,0xf000
   140027a1b:	lea    eax,[rbx+r9*1]
   140027a1f:	mov    rdi,rdx
   140027a22:	mov    rsi,rcx
   140027a25:	mov    r8d,r9d
   140027a28:	mov    r14d,ebx
   140027a2b:	cmp    eax,ebp
   140027a2d:	jl     0x140027a6c
   140027a2f:	mov    rdx,QWORD PTR [rip+0x1abda]        # 0x140042610
   140027a36:	call   0x14002a820
   140027a3b:	movzx  ecx,WORD PTR [rip+0x1a256]        # 0x140041c98
   140027a42:	xor    r9d,r9d
   140027a45:	cmp    eax,ecx
   140027a47:	je     0x140027a4f
   140027a49:	movzx  eax,r9w
   140027a4d:	jmp    0x140027a8e
   140027a4f:	mov    WORD PTR [rip+0x1a241],r9w        # 0x140041c98
   140027a57:	cmp    bx,bp
   140027a5a:	jb     0x140027a6c
   140027a5c:	mov    r8d,r14d
   140027a5f:	mov    rdx,rdi
   140027a62:	mov    rcx,rsi
   140027a65:	call   0x14002a820
   140027a6a:	jmp    0x140027a8e
   140027a6c:	movzx  ecx,r9w
   140027a70:	movzx  r8d,bx
   140027a74:	mov    rdx,rdi
   140027a77:	add    rcx,QWORD PTR [rip+0x1ab92]        # 0x140042610
   140027a7e:	call   QWORD PTR [rip+0x7a04]        # 0x14002f488
   140027a84:	add    WORD PTR [rip+0x1a20d],bx        # 0x140041c98
   140027a8b:	movzx  eax,bx
   140027a8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027a93:	mov    rbp,QWORD PTR [rsp+0x38]
   140027a98:	mov    rsi,QWORD PTR [rsp+0x40]
   140027a9d:	mov    rdi,QWORD PTR [rsp+0x48]
   140027aa2:	add    rsp,0x20
   140027aa6:	pop    r14
   140027aa8:	ret    
   140027aa9:	int3   
   140027aaa:	int3   
   140027aab:	int3   
   140027aac:	int3   
   140027aad:	int3   
   140027aae:	int3   
   140027aaf:	int3   
   140027ab0:	rex push rdi
   140027ab2:	sub    rsp,0x30
   140027ab6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027abf:	mov    QWORD PTR [rsp+0x48],rbx
   140027ac4:	lea    rdi,[rip+0x1aba5]        # 0x140042670
   140027acb:	mov    rdx,rdi
   140027ace:	sub    rcx,rdi
   140027ad1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140027ad5:	mov    BYTE PTR [rdx],al
   140027ad7:	lea    rdx,[rdx+0x1]
   140027adb:	test   al,al
   140027add:	jne    0x140027ad1
   140027adf:	mov    ecx,0x10
   140027ae4:	call   QWORD PTR [rip+0x7eae]        # 0x14002f998
   140027aea:	mov    rbx,rax
   140027aed:	mov    QWORD PTR [rsp+0x40],rax
   140027af2:	test   rax,rax
   140027af5:	je     0x140027b2a
   140027af7:	xor    eax,eax
   140027af9:	mov    WORD PTR [rbx],ax
   140027afc:	mov    QWORD PTR [rbx+0x8],rax
   140027b00:	mov    rcx,rdi
   140027b03:	call   QWORD PTR [rip+0x7777]        # 0x14002f280
   140027b09:	test   eax,eax
   140027b0b:	jle    0x140027b2d
   140027b0d:	inc    eax
   140027b0f:	movsxd rcx,eax
   140027b12:	call   QWORD PTR [rip+0x7e80]        # 0x14002f998
   140027b18:	mov    QWORD PTR [rbx+0x8],rax
   140027b1c:	mov    rdx,rdi
   140027b1f:	mov    rcx,rax
   140027b22:	call   QWORD PTR [rip+0x7730]        # 0x14002f258
   140027b28:	jmp    0x140027b2d
   140027b2a:	mov    rbx,rax
   140027b2d:	mov    edx,0xb
   140027b32:	mov    rcx,rbx
   140027b35:	call   0x14002ab70
   140027b3a:	mov    rdi,rax
   140027b3d:	test   rbx,rbx
   140027b40:	je     0x140027b5d
   140027b42:	mov    rcx,QWORD PTR [rbx+0x8]
   140027b46:	test   rcx,rcx
   140027b49:	je     0x140027b51
   140027b4b:	call   QWORD PTR [rip+0x8027]        # 0x14002fb78
   140027b51:	mov    rcx,rbx
   140027b54:	call   QWORD PTR [rip+0x801e]        # 0x14002fb78
   140027b5a:	mov    rax,rdi
   140027b5d:	mov    rbx,QWORD PTR [rsp+0x48]
   140027b62:	add    rsp,0x30
   140027b66:	pop    rdi
   140027b67:	ret    
   140027b68:	int3   
   140027b69:	int3   
   140027b6a:	int3   
   140027b6b:	int3   
   140027b6c:	int3   
   140027b6d:	int3   
   140027b6e:	int3   
   140027b6f:	int3   
   140027b70:	mov    QWORD PTR [rsp+0x8],rbx
   140027b75:	push   rdi
   140027b76:	sub    rsp,0x20
   140027b7a:	mov    rbx,rcx
   140027b7d:	mov    rcx,QWORD PTR [rcx+0x30]
   140027b81:	xor    edi,edi
   140027b83:	test   rcx,rcx
   140027b86:	je     0x140027b92
   140027b88:	call   QWORD PTR [rip+0x78f2]        # 0x14002f480
   140027b8e:	mov    QWORD PTR [rbx+0x30],rdi
   140027b92:	mov    rcx,QWORD PTR [rbx+0x28]
   140027b96:	test   rcx,rcx
   140027b99:	je     0x140027ba5
   140027b9b:	call   QWORD PTR [rip+0x78df]        # 0x14002f480
   140027ba1:	mov    QWORD PTR [rbx+0x28],rdi
   140027ba5:	mov    rcx,QWORD PTR [rbx+0x48]
   140027ba9:	test   rcx,rcx
   140027bac:	je     0x140027bb8
   140027bae:	call   QWORD PTR [rip+0x78cc]        # 0x14002f480
   140027bb4:	mov    QWORD PTR [rbx+0x48],rdi
   140027bb8:	mov    rcx,QWORD PTR [rbx+0x40]
   140027bbc:	test   rcx,rcx
   140027bbf:	je     0x140027bcb
   140027bc1:	call   QWORD PTR [rip+0x78b9]        # 0x14002f480
   140027bc7:	mov    QWORD PTR [rbx+0x40],rdi
   140027bcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140027bd0:	add    rsp,0x20
   140027bd4:	pop    rdi
   140027bd5:	ret    
   140027bd6:	int3   
   140027bd7:	int3   
   140027bd8:	int3   
   140027bd9:	int3   
   140027bda:	int3   
   140027bdb:	int3   
   140027bdc:	int3   
   140027bdd:	int3   
   140027bde:	int3   
   140027bdf:	int3   
   140027be0:	rex push rsi
   140027be2:	push   rdi
   140027be3:	push   r12
   140027be5:	push   r14
   140027be7:	push   r15
   140027be9:	sub    rsp,0x30
   140027bed:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027bf6:	mov    QWORD PTR [rsp+0x60],rbx
   140027bfb:	mov    QWORD PTR [rsp+0x68],rbp
   140027c00:	mov    rsi,rdx
   140027c03:	mov    r14,rcx
   140027c06:	xor    ebp,ebp
   140027c08:	movzx  edi,bp
   140027c0b:	cmp    bp,WORD PTR [rip+0x1aa18]        # 0x14004262a
   140027c12:	jae    0x140027c86
   140027c14:	nop    DWORD PTR [rax+0x0]
   140027c18:	nop    DWORD PTR [rax+rax*1+0x0]
   140027c20:	movzx  eax,di
   140027c23:	imul   rbx,rax,0x58
   140027c27:	add    rbx,QWORD PTR [rip+0x1aa0a]        # 0x140042638
   140027c2e:	mov    rcx,QWORD PTR [rbx+0x30]
   140027c32:	test   rcx,rcx
   140027c35:	je     0x140027c41
   140027c37:	call   QWORD PTR [rip+0x7843]        # 0x14002f480
   140027c3d:	mov    QWORD PTR [rbx+0x30],rbp
   140027c41:	mov    rcx,QWORD PTR [rbx+0x28]
   140027c45:	test   rcx,rcx
   140027c48:	je     0x140027c54
   140027c4a:	call   QWORD PTR [rip+0x7830]        # 0x14002f480
   140027c50:	mov    QWORD PTR [rbx+0x28],rbp
   140027c54:	mov    rcx,QWORD PTR [rbx+0x48]
   140027c58:	test   rcx,rcx
   140027c5b:	je     0x140027c67
   140027c5d:	call   QWORD PTR [rip+0x781d]        # 0x14002f480
   140027c63:	mov    QWORD PTR [rbx+0x48],rbp
   140027c67:	mov    rcx,QWORD PTR [rbx+0x40]
   140027c6b:	test   rcx,rcx
   140027c6e:	je     0x140027c7a
   140027c70:	call   QWORD PTR [rip+0x780a]        # 0x14002f480
   140027c76:	mov    QWORD PTR [rbx+0x40],rbp
   140027c7a:	inc    di
   140027c7d:	cmp    di,WORD PTR [rip+0x1a9a6]        # 0x14004262a
   140027c84:	jb     0x140027c20
   140027c86:	mov    rcx,QWORD PTR [rip+0x1a9ab]        # 0x140042638
   140027c8d:	call   QWORD PTR [rip+0x77ed]        # 0x14002f480
   140027c93:	lea    r12,[rip+0x9406]        # 0x1400310a0
   140027c9a:	mov    edi,0x106
   140027c9f:	mov    rbx,QWORD PTR [rip+0x1a972]        # 0x140042618
   140027ca6:	test   rbx,rbx
   140027ca9:	je     0x140027cfa
   140027cab:	mov    rcx,QWORD PTR [rbx]
   140027cae:	call   QWORD PTR [rip+0x754c]        # 0x14002f200
   140027cb4:	test   eax,eax
   140027cb6:	je     0x140027cce
   140027cb8:	mov    QWORD PTR [rbx],rbp
   140027cbb:	mov    rcx,rbx
   140027cbe:	call   0x14002a950
   140027cc3:	mov    rcx,rbx
   140027cc6:	call   QWORD PTR [rip+0x7eac]        # 0x14002fb78
   140027ccc:	jmp    0x140027cfa
   140027cce:	call   QWORD PTR [rip+0x748c]        # 0x14002f160
   140027cd4:	cmp    eax,0x58
   140027cd7:	jae    0x140027ce1
   140027cd9:	mov    eax,eax
   140027cdb:	mov    ecx,DWORD PTR [r12+rax*4]
   140027cdf:	jmp    0x140027ce3
   140027ce1:	mov    ecx,edi
   140027ce3:	mov    DWORD PTR [rip+0x1b3cf],ecx        # 0x1400430b8
   140027ce9:	mov    DWORD PTR [rip+0x1b7d5],0x2        # 0x1400434c8
   140027cf3:	mov    BYTE PTR [rip+0x1b6c6],bpl        # 0x1400433c0
   140027cfa:	lea    r15,[rip+0x1a96f]        # 0x140042670
   140027d01:	test   r14,r14
   140027d04:	je     0x140027d8d
   140027d0a:	mov    rcx,r15
   140027d0d:	sub    r14,r15
   140027d10:	movzx  eax,BYTE PTR [r14+rcx*1]
   140027d15:	mov    BYTE PTR [rcx],al
   140027d17:	lea    rcx,[rcx+0x1]
   140027d1b:	test   al,al
   140027d1d:	jne    0x140027d10
   140027d1f:	mov    ecx,0x10
   140027d24:	call   QWORD PTR [rip+0x7c6e]        # 0x14002f998
   140027d2a:	mov    rbx,rax
   140027d2d:	mov    QWORD PTR [rsp+0x70],rax
   140027d32:	test   rax,rax
   140027d35:	je     0x140027d68
   140027d37:	mov    WORD PTR [rax],bp
   140027d3a:	mov    QWORD PTR [rax+0x8],rbp
   140027d3e:	mov    rcx,r15
   140027d41:	call   QWORD PTR [rip+0x7539]        # 0x14002f280
   140027d47:	test   eax,eax
   140027d49:	jle    0x140027d6b
   140027d4b:	inc    eax
   140027d4d:	movsxd rcx,eax
   140027d50:	call   QWORD PTR [rip+0x7c42]        # 0x14002f998
   140027d56:	mov    QWORD PTR [rbx+0x8],rax
   140027d5a:	mov    rdx,r15
   140027d5d:	mov    rcx,rax
   140027d60:	call   QWORD PTR [rip+0x74f2]        # 0x14002f258
   140027d66:	jmp    0x140027d6b
   140027d68:	mov    rbx,rbp
   140027d6b:	mov    rcx,QWORD PTR [rbx+0x8]
   140027d6f:	call   QWORD PTR [rip+0x7483]        # 0x14002f1f8
   140027d75:	mov    rcx,QWORD PTR [rbx+0x8]
   140027d79:	test   rcx,rcx
   140027d7c:	je     0x140027d84
   140027d7e:	call   QWORD PTR [rip+0x7df4]        # 0x14002fb78
   140027d84:	mov    rcx,rbx
   140027d87:	call   QWORD PTR [rip+0x7deb]        # 0x14002fb78
   140027d8d:	mov    rbx,QWORD PTR [rip+0x1a88c]        # 0x140042620
   140027d94:	test   rbx,rbx
   140027d97:	je     0x140027de4
   140027d99:	mov    rcx,QWORD PTR [rbx]
   140027d9c:	call   QWORD PTR [rip+0x745e]        # 0x14002f200
   140027da2:	test   eax,eax
   140027da4:	je     0x140027dbc
   140027da6:	mov    QWORD PTR [rbx],rbp
   140027da9:	mov    rcx,rbx
   140027dac:	call   0x14002a950
   140027db1:	mov    rcx,rbx
   140027db4:	call   QWORD PTR [rip+0x7dbe]        # 0x14002fb78
   140027dba:	jmp    0x140027de4
   140027dbc:	call   QWORD PTR [rip+0x739e]        # 0x14002f160
   140027dc2:	cmp    eax,0x58
   140027dc5:	jae    0x140027dcd
   140027dc7:	mov    eax,eax
   140027dc9:	mov    edi,DWORD PTR [r12+rax*4]
   140027dcd:	mov    DWORD PTR [rip+0x1b2e5],edi        # 0x1400430b8
   140027dd3:	mov    DWORD PTR [rip+0x1b6eb],0x2        # 0x1400434c8
   140027ddd:	mov    BYTE PTR [rip+0x1b5dc],0x0        # 0x1400433c0
   140027de4:	test   rsi,rsi
   140027de7:	je     0x140027e7c
   140027ded:	mov    rdx,r15
   140027df0:	sub    rsi,r15
   140027df3:	nop    DWORD PTR [rax+0x0]
   140027df7:	nop    WORD PTR [rax+rax*1+0x0]
   140027e00:	movzx  eax,BYTE PTR [rsi+rdx*1]
   140027e04:	mov    BYTE PTR [rdx],al
   140027e06:	lea    rdx,[rdx+0x1]
   140027e0a:	test   al,al
   140027e0c:	jne    0x140027e00
   140027e0e:	mov    ecx,0x10
   140027e13:	call   QWORD PTR [rip+0x7b7f]        # 0x14002f998
   140027e19:	mov    rbx,rax
   140027e1c:	mov    QWORD PTR [rsp+0x70],rax
   140027e21:	test   rax,rax
   140027e24:	je     0x140027e57
   140027e26:	mov    WORD PTR [rax],bp
   140027e29:	mov    QWORD PTR [rax+0x8],rbp
   140027e2d:	mov    rcx,r15
   140027e30:	call   QWORD PTR [rip+0x744a]        # 0x14002f280
   140027e36:	test   eax,eax
   140027e38:	jle    0x140027e5a
   140027e3a:	inc    eax
   140027e3c:	movsxd rcx,eax
   140027e3f:	call   QWORD PTR [rip+0x7b53]        # 0x14002f998
   140027e45:	mov    QWORD PTR [rbx+0x8],rax
   140027e49:	mov    rdx,r15
   140027e4c:	mov    rcx,rax
   140027e4f:	call   QWORD PTR [rip+0x7403]        # 0x14002f258
   140027e55:	jmp    0x140027e5a
   140027e57:	mov    rbx,rbp
   140027e5a:	mov    rcx,QWORD PTR [rbx+0x8]
   140027e5e:	call   QWORD PTR [rip+0x7394]        # 0x14002f1f8
   140027e64:	mov    rcx,QWORD PTR [rbx+0x8]
   140027e68:	test   rcx,rcx
   140027e6b:	je     0x140027e73
   140027e6d:	call   QWORD PTR [rip+0x7d05]        # 0x14002fb78
   140027e73:	mov    rcx,rbx
   140027e76:	call   QWORD PTR [rip+0x7cfc]        # 0x14002fb78
   140027e7c:	mov    rcx,QWORD PTR [rip+0x1a7ad]        # 0x140042630
   140027e83:	test   rcx,rcx
   140027e86:	je     0x140027e8e
   140027e88:	call   QWORD PTR [rip+0x75f2]        # 0x14002f480
   140027e8e:	mov    rbx,QWORD PTR [rsp+0x60]
   140027e93:	mov    rbp,QWORD PTR [rsp+0x68]
   140027e98:	add    rsp,0x30
   140027e9c:	pop    r15
   140027e9e:	pop    r14
   140027ea0:	pop    r12
   140027ea2:	pop    rdi
   140027ea3:	pop    rsi
   140027ea4:	ret    
   140027ea5:	int3   
   140027ea6:	int3   
   140027ea7:	int3   
   140027ea8:	int3   
   140027ea9:	int3   
   140027eaa:	int3   
   140027eab:	int3   
   140027eac:	int3   
   140027ead:	int3   
   140027eae:	int3   
   140027eaf:	int3   
   140027eb0:	mov    r11,rsp
   140027eb3:	push   rbx
   140027eb4:	push   rbp
   140027eb5:	push   rsi
   140027eb6:	push   rdi
   140027eb7:	push   r14
   140027eb9:	push   r15
   140027ebb:	sub    rsp,0x88
   140027ec2:	mov    rax,QWORD PTR [rip+0x14137]        # 0x14003c000
   140027ec9:	xor    rax,rsp
   140027ecc:	mov    QWORD PTR [rsp+0x70],rax
   140027ed1:	mov    rdi,QWORD PTR [rsp+0xe0]
   140027ed9:	mov    rbx,QWORD PTR [rsp+0xe8]
   140027ee1:	mov    r15,rdx
   140027ee4:	xor    edx,edx
   140027ee6:	movzx  esi,r8w
   140027eea:	mov    WORD PTR [rsp+0x34],r8w
   140027ef0:	mov    r8d,0x1
   140027ef6:	mov    WORD PTR [rsp+0x60],dx
   140027efb:	mov    QWORD PTR [rsp+0x50],rdi
   140027f00:	mov    QWORD PTR [rsp+0x40],rbx
   140027f05:	movzx  ebp,r9w
   140027f09:	mov    WORD PTR [rsp+0x30],r9w
   140027f0f:	mov    QWORD PTR [rsp+0x48],rcx
   140027f14:	mov    WORD PTR [r15+0x2a],dx
   140027f19:	movzx  eax,dx
   140027f1c:	mov    DWORD PTR [r11-0x50],r8d
   140027f20:	movzx  r14d,dx
   140027f24:	mov    WORD PTR [rsp+0x32],dx
   140027f29:	cmp    dx,r9w
   140027f2d:	jae    0x14002817b
   140027f33:	mov    QWORD PTR [r11+0x20],r12
   140027f37:	mov    QWORD PTR [r11-0x38],r13
   140027f3b:	mov    ebx,0xfe00
   140027f40:	mov    r13d,0x1ff
   140027f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027f50:	movzx  edx,ax
   140027f53:	movzx  r8d,si
   140027f57:	lea    r9,[rsp+0x64]
   140027f5c:	add    rdx,QWORD PTR [r15+0x8]
   140027f60:	sub    r8w,ax
   140027f64:	lea    rax,[rsp+0x38]
   140027f69:	mov    QWORD PTR [rsp+0x20],rax
   140027f6e:	call   QWORD PTR [rip+0x1a6dc]        # 0x140042650
   140027f74:	test   eax,eax
   140027f76:	je     0x14002810b
   140027f7c:	movzx  eax,WORD PTR [rsp+0x64]
   140027f81:	cmp    ax,WORD PTR [rdi]
   140027f84:	jbe    0x140027f89
   140027f86:	mov    WORD PTR [rdi],ax
   140027f89:	movzx  r14d,WORD PTR [r15+0x2a]
   140027f8e:	movzx  r12d,r14w
   140027f92:	and    r12w,bx
   140027f96:	and    r14w,r13w
   140027f9a:	mov    r13,QWORD PTR [r15+0x20]
   140027f9e:	jne    0x140027fcd
   140027fa0:	movsd  xmm0,QWORD PTR [rsp+0x60]
   140027fa6:	movzx  eax,r12w
   140027faa:	lea    rcx,[rax+rax*2]
   140027fae:	movsd  QWORD PTR [r13+rcx*4+0x0],xmm0
   140027fb5:	mov    eax,DWORD PTR [rsp+0x68]
   140027fb9:	mov    DWORD PTR [r13+rcx*4+0x8],eax
   140027fbe:	inc    WORD PTR [r15+0x2a]
   140027fc3:	mov    eax,0x1
   140027fc8:	jmp    0x1400280ee
   140027fcd:	mov    r9,QWORD PTR [r15+0x8]
   140027fd1:	xor    eax,eax
   140027fd3:	lea    ebx,[r14-0x1]
   140027fd7:	movzx  edi,ax
   140027fda:	movzx  ecx,r12w
   140027fde:	mov    QWORD PTR [rsp+0x58],r9
   140027fe3:	nop    DWORD PTR [rax+0x0]
   140027fe7:	nop    WORD PTR [rax+rax*1+0x0]
   140027ff0:	movzx  r8d,WORD PTR [rsp+0x60]
   140027ff6:	movzx  eax,di
   140027ff9:	movzx  esi,bx
   140027ffc:	add    esi,eax
   140027ffe:	add    r8,r9
   140028001:	sar    esi,1
   140028003:	movzx  eax,si
   140028006:	add    eax,ecx
   140028008:	cdqe   
   14002800a:	lea    rcx,[rax+rax*2]
   14002800e:	lea    rbp,[rcx*4+0x0]
   140028016:	mov    rcx,QWORD PTR [rsp+0x48]
   14002801b:	add    rbp,r13
   14002801e:	movzx  edx,WORD PTR [rbp+0x0]
   140028022:	add    rdx,r9
   140028025:	call   QWORD PTR [rip+0x1a62d]        # 0x140042658
   14002802b:	test   ax,ax
   14002802e:	je     0x1400280d5
   140028034:	jle    0x140028040
   140028036:	test   si,si
   140028039:	je     0x140028051
   14002803b:	lea    ebx,[rsi-0x1]
   14002803e:	jmp    0x140028043
   140028040:	lea    edi,[rsi+0x1]
   140028043:	mov    r9,QWORD PTR [rsp+0x58]
   140028048:	movzx  ecx,r12w
   14002804c:	cmp    di,bx
   14002804f:	jbe    0x140027ff0
   140028051:	cmp    di,r14w
   140028055:	jae    0x14002809f
   140028057:	movzx  ecx,di
   14002805a:	movzx  eax,r14w
   14002805e:	movzx  r9d,r12w
   140028062:	sub    eax,ecx
   140028064:	add    r9d,ecx
   140028067:	cdqe   
   140028069:	lea    r8,[rax+rax*2]
   14002806d:	movsxd rax,r9d
   140028070:	lea    rcx,[rax+rax*2]
   140028074:	lea    eax,[r9+0x1]
   140028078:	shl    r8,0x2
   14002807c:	lea    rdx,[rcx*4+0x0]
   140028084:	movsxd rcx,eax
   140028087:	lea    rax,[rcx+rcx*2]
   14002808b:	add    rdx,r13
   14002808e:	lea    rcx,[rax*4+0x0]
   140028096:	add    rcx,r13
   140028099:	call   QWORD PTR [rip+0x73e9]        # 0x14002f488
   14002809f:	movsd  xmm0,QWORD PTR [rsp+0x60]
   1400280a5:	movzx  eax,r12w
   1400280a9:	movzx  ecx,di
   1400280ac:	add    rcx,rax
   1400280af:	lea    rax,[rcx+rcx*2]
   1400280b3:	lea    rcx,[rax*4+0x0]
   1400280bb:	add    rcx,r13
   1400280be:	movsd  QWORD PTR [rcx],xmm0
   1400280c2:	mov    eax,DWORD PTR [rsp+0x68]
   1400280c6:	mov    DWORD PTR [rcx+0x8],eax
   1400280c9:	inc    WORD PTR [r15+0x2a]
   1400280ce:	mov    eax,0x1
   1400280d3:	jmp    0x1400280da
   1400280d5:	inc    DWORD PTR [rbp+0x8]
   1400280d8:	xor    eax,eax
   1400280da:	movzx  ebp,WORD PTR [rsp+0x30]
   1400280df:	movzx  esi,WORD PTR [rsp+0x34]
   1400280e4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400280e9:	mov    ebx,0xfe00
   1400280ee:	movzx  r14d,WORD PTR [rsp+0x32]
   1400280f4:	movzx  ecx,WORD PTR [rsp+0x38]
   1400280f9:	mov    r13d,0x1ff
   1400280ff:	add    r14w,ax
   140028103:	mov    WORD PTR [rsp+0x32],r14w
   140028109:	jmp    0x140028115
   14002810b:	movzx  ecx,WORD PTR [rsp+0x38]
   140028110:	test   cx,cx
   140028113:	je     0x14002816d
   140028115:	movzx  eax,WORD PTR [rsp+0x60]
   14002811a:	add    ax,cx
   14002811d:	mov    WORD PTR [rsp+0x60],ax
   140028122:	cmp    ax,si
   140028125:	jae    0x140028136
   140028127:	mov    rcx,QWORD PTR [rsp+0x48]
   14002812c:	cmp    r14w,bp
   140028130:	jb     0x140027f50
   140028136:	movzx  ecx,ax
   140028139:	mov    rax,QWORD PTR [rsp+0x40]
   14002813e:	add    DWORD PTR [rax],ecx
   140028140:	mov    r12,QWORD PTR [rsp+0xd8]
   140028148:	mov    r13,QWORD PTR [rsp+0x80]
   140028150:	mov    rcx,QWORD PTR [rsp+0x70]
   140028155:	xor    rcx,rsp
   140028158:	call   0x14002c960
   14002815d:	add    rsp,0x88
   140028164:	pop    r15
   140028166:	pop    r14
   140028168:	pop    rdi
   140028169:	pop    rsi
   14002816a:	pop    rbp
   14002816b:	pop    rbx
   14002816c:	ret    
   14002816d:	mov    rbx,QWORD PTR [rsp+0x40]
   140028172:	movzx  ecx,WORD PTR [rsp+0x60]
   140028177:	add    DWORD PTR [rbx],ecx
   140028179:	jmp    0x140028140
   14002817b:	movzx  ecx,ax
   14002817e:	add    DWORD PTR [rbx],ecx
   140028180:	jmp    0x140028150
   140028182:	int3   
   140028183:	int3   
   140028184:	int3   
   140028185:	int3   
   140028186:	int3   
   140028187:	int3   
   140028188:	int3   
   140028189:	int3   
   14002818a:	int3   
   14002818b:	int3   
   14002818c:	int3   
   14002818d:	int3   
   14002818e:	int3   
   14002818f:	int3   
   140028190:	mov    QWORD PTR [rsp+0x8],rbx
   140028195:	movzx  r8d,WORD PTR [rip+0x1a467]        # 0x140042604
   14002819d:	movzx  r10d,cx
   1400281a1:	mov    ebx,0x200
   1400281a6:	imul   r9,r10,0x58
   1400281aa:	add    r9,QWORD PTR [rip+0x1a487]        # 0x140042638
   1400281b1:	inc    DWORD PTR [r9+0x10]
   1400281b5:	cmp    r10w,WORD PTR [rip+0x1a483]        # 0x140042640
   1400281bd:	jne    0x1400281ed
   1400281bf:	mov    r11,QWORD PTR [rip+0x1a472]        # 0x140042638
   1400281c6:	movzx  eax,r8w
   1400281ca:	imul   rcx,rax,0x58
   1400281ce:	movzx  eax,WORD PTR [r9+0x10]
   1400281d3:	movzx  edx,WORD PTR [rcx+r11*1+0x52]
   1400281d9:	dec    edx
   1400281db:	and    edx,0x1ff
   1400281e1:	cmp    eax,edx
   1400281e3:	jle    0x1400281fa
   1400281e5:	xor    eax,eax
   1400281e7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400281ec:	ret    
   1400281ed:	cmp    DWORD PTR [r9+0x10],ebx
   1400281f1:	jge    0x1400281e5
   1400281f3:	mov    r11,QWORD PTR [rip+0x1a43e]        # 0x140042638
   1400281fa:	imul   r10w,bx
   1400281ff:	mov    rbx,QWORD PTR [rsp+0x8]
   140028204:	movzx  eax,r8w
   140028208:	add    r10w,WORD PTR [r9+0x10]
   14002820d:	imul   r8,rax,0x58
   140028211:	movzx  eax,r10w
   140028215:	lea    rcx,[rax+rax*2]
   140028219:	mov    rax,QWORD PTR [r8+r11*1+0x48]
   14002821e:	lea    rdx,[rax+rcx*4]
   140028222:	lea    rax,[rdx+0x4]
   140028226:	mov    QWORD PTR [r9+0x18],rax
   14002822a:	mov    rax,QWORD PTR [rip+0x1a407]        # 0x140042638
   140028231:	movzx  ecx,WORD PTR [rdx]
   140028234:	add    rcx,QWORD PTR [r8+rax*1+0x30]
   140028239:	mov    eax,0x1
   14002823e:	mov    QWORD PTR [r9+0x20],rcx
   140028242:	ret    
   140028243:	int3   
   140028244:	int3   
   140028245:	int3   
   140028246:	int3   
   140028247:	int3   
   140028248:	int3   
   140028249:	int3   
   14002824a:	int3   
   14002824b:	int3   
   14002824c:	int3   
   14002824d:	int3   
   14002824e:	int3   
   14002824f:	int3   
   140028250:	mov    QWORD PTR [rsp+0x8],rbx
   140028255:	mov    QWORD PTR [rsp+0x10],rbp
   14002825a:	mov    QWORD PTR [rsp+0x18],rsi
   14002825f:	mov    QWORD PTR [rsp+0x20],rdi
   140028264:	push   r12
   140028266:	push   r14
   140028268:	push   r15
   14002826a:	sub    rsp,0x20
   14002826e:	mov    rdi,r8
   140028271:	mov    r8,QWORD PTR [r8+0x10]
   140028275:	mov    rsi,rdx
   140028278:	mov    rdx,QWORD PTR [rdx+0x10]
   14002827c:	movzx  ebx,r9w
   140028280:	mov    r14,rcx
   140028283:	call   QWORD PTR [rip+0x1a3cf]        # 0x140042658
   140028289:	mov    r15,QWORD PTR [rsp+0x60]
   14002828e:	mov    WORD PTR [r15],ax
   140028292:	test   ax,ax
   140028295:	jne    0x140028376
   14002829b:	movzx  eax,bx
   14002829e:	mov    r12d,0x200
   1400282a4:	imul   rbp,rax,0x58
   1400282a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400282b0:	mov    rax,QWORD PTR [rdi+0x8]
   1400282b4:	mov    rdx,QWORD PTR [rsi+0x8]
   1400282b8:	movzx  r9d,WORD PTR [rip+0x1a344]        # 0x140042604
   1400282c0:	mov    ecx,DWORD PTR [rax+0x4]
   1400282c3:	add    DWORD PTR [rdx+0x4],ecx
   1400282c6:	mov    rax,QWORD PTR [rip+0x1a36b]        # 0x140042638
   1400282cd:	inc    DWORD PTR [rax+rbp*1+0x10]
   1400282d1:	cmp    bx,WORD PTR [rip+0x1a368]        # 0x140042640
   1400282d8:	jne    0x140028307
   1400282da:	mov    r10,QWORD PTR [rip+0x1a357]        # 0x140042638
   1400282e1:	movzx  ecx,r9w
   1400282e5:	imul   rdx,rcx,0x58
   1400282e9:	movzx  ecx,WORD PTR [rax+rbp*1+0x10]
   1400282ee:	movzx  r8d,WORD PTR [rdx+r10*1+0x52]
   1400282f4:	dec    r8d
   1400282f7:	and    r8d,0x1ff
   1400282fe:	cmp    ecx,r8d
   140028301:	jle    0x140028315
   140028303:	xor    eax,eax
   140028305:	jmp    0x14002837b
   140028307:	cmp    DWORD PTR [rax+rbp*1+0x10],r12d
   14002830c:	jge    0x140028303
   14002830e:	mov    r10,QWORD PTR [rip+0x1a323]        # 0x140042638
   140028315:	movzx  ecx,r9w
   140028319:	imul   r9,rcx,0x58
   14002831d:	movzx  ecx,bx
   140028320:	imul   cx,r12w
   140028325:	add    cx,WORD PTR [rax+rbp*1+0x10]
   14002832a:	movzx  ecx,cx
   14002832d:	lea    rdx,[rcx+rcx*2]
   140028331:	mov    rcx,QWORD PTR [r9+r10*1+0x48]
   140028336:	lea    r8,[rcx+rdx*4]
   14002833a:	lea    rcx,[r8+0x4]
   14002833e:	mov    QWORD PTR [rax+rbp*1+0x18],rcx
   140028343:	mov    rcx,QWORD PTR [rip+0x1a2ee]        # 0x140042638
   14002834a:	movzx  edx,WORD PTR [r8]
   14002834e:	add    rdx,QWORD PTR [r9+rcx*1+0x30]
   140028353:	mov    rcx,r14
   140028356:	mov    QWORD PTR [rax+rbp*1+0x20],rdx
   14002835b:	mov    r8,QWORD PTR [rdi+0x10]
   14002835f:	mov    rdx,QWORD PTR [rsi+0x10]
   140028363:	call   QWORD PTR [rip+0x1a2ef]        # 0x140042658
   140028369:	mov    WORD PTR [r15],ax
   14002836d:	test   ax,ax
   140028370:	je     0x1400282b0
   140028376:	mov    eax,0x1
   14002837b:	mov    rbx,QWORD PTR [rsp+0x40]
   140028380:	mov    rbp,QWORD PTR [rsp+0x48]
   140028385:	mov    rsi,QWORD PTR [rsp+0x50]
   14002838a:	mov    rdi,QWORD PTR [rsp+0x58]
   14002838f:	add    rsp,0x20
   140028393:	pop    r15
   140028395:	pop    r14
   140028397:	pop    r12
   140028399:	ret    
   14002839a:	int3   
   14002839b:	int3   
   14002839c:	int3   
   14002839d:	int3   
   14002839e:	int3   
   14002839f:	int3   
   1400283a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400283a5:	mov    QWORD PTR [rsp+0x20],r9
   1400283aa:	mov    DWORD PTR [rsp+0x18],r8d
   1400283af:	push   rbp
   1400283b0:	push   rsi
   1400283b1:	push   rdi
   1400283b2:	push   r12
   1400283b4:	push   r13
   1400283b6:	push   r14
   1400283b8:	push   r15
   1400283ba:	sub    rsp,0x30
   1400283be:	movzx  r15d,WORD PTR [rdx+0x52]
   1400283c3:	mov    r12,rcx
   1400283c6:	xor    ecx,ecx
   1400283c8:	dec    r15d
   1400283cb:	mov    r13,r9
   1400283ce:	mov    edi,r8d
   1400283d1:	sar    r15d,0x9
   1400283d5:	movzx  ebx,cx
   1400283d8:	movzx  esi,cx
   1400283db:	mov    WORD PTR [rip+0x1a25d],r15w        # 0x140042640
   1400283e3:	inc    r15w
   1400283e7:	lea    rax,[rip+0x198b2]        # 0x140041ca0
   1400283ee:	cmp    cx,r15w
   1400283f2:	jae    0x1400284b0
   1400283f8:	mov    ebp,ecx
   1400283fa:	mov    r14,rax
   1400283fd:	lea    r13,[rip+0x1989c]        # 0x140041ca0
   140028404:	mov    rax,QWORD PTR [rip+0x1a22d]        # 0x140042638
   14002840b:	movzx  ecx,si
   14002840e:	mov    DWORD PTR [rax+rbp*1+0x10],0xffffffff
   140028416:	call   0x140028190
   14002841b:	xor    eax,eax
   14002841d:	movzx  edi,ax
   140028420:	cmp    ax,bx
   140028423:	je     0x140028480
   140028425:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140028430:	mov    rdx,QWORD PTR [rip+0x1a201]        # 0x140042638
   140028437:	movzx  eax,di
   14002843a:	movzx  r9d,si
   14002843e:	movzx  eax,WORD PTR [r13+rax*2+0x0]
   140028444:	lea    r8,[rdx+0x10]
   140028448:	add    rdx,0x10
   14002844c:	add    r8,rbp
   14002844f:	imul   rcx,rax,0x58
   140028453:	lea    rax,[rsp+0x78]
   140028458:	add    rdx,rcx
   14002845b:	mov    rcx,r12
   14002845e:	mov    QWORD PTR [rsp+0x20],rax
   140028463:	call   0x140028250
   140028468:	test   eax,eax
   14002846a:	je     0x140028478
   14002846c:	cmp    WORD PTR [rsp+0x78],0x0
   140028472:	jg     0x140028508
   140028478:	inc    di
   14002847b:	cmp    di,bx
   14002847e:	jne    0x140028430
   140028480:	movzx  eax,bx
   140028483:	mov    WORD PTR [r13+rax*2+0x0],si
   140028489:	inc    si
   14002848c:	inc    bx
   14002848f:	add    rbp,0x58
   140028493:	add    r14,0x2
   140028497:	cmp    si,r15w
   14002849b:	jb     0x140028404
   1400284a1:	mov    r13,QWORD PTR [rsp+0x88]
   1400284a9:	mov    edi,DWORD PTR [rsp+0x80]
   1400284b0:	test   bx,bx
   1400284b3:	je     0x140028646
   1400284b9:	mov    esi,0x1
   1400284be:	mov    ebp,0xffff
   1400284c3:	lea    r15,[rip+0x197d6]        # 0x140041ca0
   1400284ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400284d0:	movzx  eax,WORD PTR [rip+0x197c9]        # 0x140041ca0
   1400284d7:	imul   r14,rax,0x58
   1400284db:	add    r14,QWORD PTR [rip+0x1a156]        # 0x140042638
   1400284e2:	test   edi,edi
   1400284e4:	je     0x140028539
   1400284e6:	mov    r8,QWORD PTR [r14+0x20]
   1400284ea:	mov    rdx,QWORD PTR [r14+0x18]
   1400284ee:	mov    rcx,QWORD PTR [rip+0x1a123]        # 0x140042618
   1400284f5:	call   0x1400278c0
   1400284fa:	mov    DWORD PTR [r13+0x0],eax
   1400284fe:	test   eax,eax
   140028500:	jne    0x140028646
   140028506:	jmp    0x14002855a
   140028508:	cmp    si,di
   14002850b:	jbe    0x140028531
   14002850d:	movzx  eax,si
   140028510:	mov    rcx,r14
   140028513:	sub    ax,di
   140028516:	movzx  edx,ax
   140028519:	nop    DWORD PTR [rax+0x0]
   140028520:	movzx  eax,WORD PTR [rcx-0x2]
   140028524:	lea    rcx,[rcx-0x2]
   140028528:	mov    WORD PTR [rcx+0x2],ax
   14002852c:	dec    rdx
   14002852f:	jne    0x140028520
   140028531:	movzx  eax,di
   140028534:	jmp    0x140028483
   140028539:	mov    rax,QWORD PTR [r14+0x18]
   14002853d:	mov    rdx,QWORD PTR [r14+0x20]
   140028541:	mov    rcx,r12
   140028544:	mov    r9d,DWORD PTR [rax+0x4]
   140028548:	movzx  r8d,WORD PTR [rax]
   14002854c:	call   QWORD PTR [rip+0x1a10e]        # 0x140042660
   140028552:	test   eax,eax
   140028554:	je     0x14002863e
   14002855a:	movzx  ecx,WORD PTR [rip+0x1973f]        # 0x140041ca0
   140028561:	call   0x140028190
   140028566:	test   ax,ax
   140028569:	jne    0x140028588
   14002856b:	cmp    si,bx
   14002856e:	jae    0x140028583
   140028570:	lea    eax,[rbx-0x1]
   140028573:	lea    rsi,[rip+0x19728]        # 0x140041ca2
   14002857a:	mov    rdi,r15
   14002857d:	movzx  ecx,ax
   140028580:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   140028583:	add    bx,bp
   140028586:	jmp    0x140028601
   140028588:	movzx  edi,WORD PTR [rip+0x19711]        # 0x140041ca0
   14002858f:	movzx  ebp,si
   140028592:	cmp    si,bx
   140028595:	je     0x1400285f3
   140028597:	nop    WORD PTR [rax+rax*1+0x0]
   1400285a0:	mov    rdx,QWORD PTR [rip+0x1a091]        # 0x140042638
   1400285a7:	movzx  esi,bp
   1400285aa:	lea    r8,[r14+0x10]
   1400285ae:	movzx  eax,WORD PTR [r15+rsi*2]
   1400285b3:	add    rdx,0x10
   1400285b7:	movzx  r9d,di
   1400285bb:	imul   rcx,rax,0x58
   1400285bf:	lea    rax,[rsp+0x78]
   1400285c4:	add    rdx,rcx
   1400285c7:	mov    rcx,r12
   1400285ca:	mov    QWORD PTR [rsp+0x20],rax
   1400285cf:	call   0x140028250
   1400285d4:	test   eax,eax
   1400285d6:	je     0x140028618
   1400285d8:	cmp    WORD PTR [rsp+0x78],0x0
   1400285de:	jg     0x1400285f3
   1400285e0:	movzx  eax,WORD PTR [r15+rsi*2]
   1400285e5:	inc    bp
   1400285e8:	mov    WORD PTR [r15+rsi*2-0x2],ax
   1400285ee:	cmp    bp,bx
   1400285f1:	jne    0x1400285a0
   1400285f3:	movzx  eax,bp
   1400285f6:	mov    ebp,0xffff
   1400285fb:	mov    WORD PTR [r15+rax*2-0x2],di
   140028601:	mov    edi,DWORD PTR [rsp+0x80]
   140028608:	mov    esi,0x1
   14002860d:	test   bx,bx
   140028610:	jne    0x1400284d0
   140028616:	jmp    0x140028646
   140028618:	cmp    bp,bx
   14002861b:	jae    0x140028634
   14002861d:	movzx  eax,bp
   140028620:	lea    rsi,[r15+rax*2]
   140028624:	movzx  eax,bx
   140028627:	sub    ax,bp
   14002862a:	lea    rdi,[rsi-0x2]
   14002862e:	movzx  ecx,ax
   140028631:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   140028634:	mov    ebp,0xffff
   140028639:	add    bx,bp
   14002863c:	jmp    0x140028601
   14002863e:	mov    DWORD PTR [r13+0x0],0x4
   140028646:	mov    rbx,QWORD PTR [rsp+0x70]
   14002864b:	add    rsp,0x30
   14002864f:	pop    r15
   140028651:	pop    r14
   140028653:	pop    r13
   140028655:	pop    r12
   140028657:	pop    rdi
   140028658:	pop    rsi
   140028659:	pop    rbp
   14002865a:	ret    
   14002865b:	int3   
   14002865c:	int3   
   14002865d:	int3   
   14002865e:	int3   
   14002865f:	int3   
   140028660:	mov    QWORD PTR [rsp+0x8],rbx
   140028665:	mov    QWORD PTR [rsp+0x10],rbp
   14002866a:	mov    QWORD PTR [rsp+0x18],rsi
   14002866f:	push   rdi
   140028670:	sub    rsp,0x20
   140028674:	mov    rbx,r9
   140028677:	mov    esi,r8d
   14002867a:	mov    rdi,rdx
   14002867d:	mov    rbp,rcx
   140028680:	test   r8d,r8d
   140028683:	je     0x1400286a9
   140028685:	mov    rax,QWORD PTR [rip+0x19f8c]        # 0x140042618
   14002868c:	mov    QWORD PTR [rdx],rax
   14002868f:	mov    rcx,QWORD PTR [rip+0x19f82]        # 0x140042618
   140028696:	xor    edx,edx
   140028698:	lea    r8d,[rdx+0x1]
   14002869c:	call   0x14002ad10
   1400286a1:	mov    DWORD PTR [rdi+0x8],eax
   1400286a4:	cmp    eax,0xffffffff
   1400286a7:	je     0x140028711
   1400286a9:	mov    r9,rbx
   1400286ac:	mov    r8d,esi
   1400286af:	mov    rdx,rdi
   1400286b2:	mov    rcx,rbp
   1400286b5:	call   0x1400283a0
   1400286ba:	test   esi,esi
   1400286bc:	je     0x140028717
   1400286be:	cmp    DWORD PTR [rbx],0x0
   1400286c1:	jne    0x140028717
   1400286c3:	movzx  r8d,WORD PTR [rip+0x195cd]        # 0x140041c98
   1400286cb:	mov    rdx,QWORD PTR [rip+0x19f3e]        # 0x140042610
   1400286d2:	mov    rcx,QWORD PTR [rdi]
   1400286d5:	call   0x14002a820
   1400286da:	movzx  ecx,WORD PTR [rip+0x195b7]        # 0x140041c98
   1400286e1:	cmp    eax,ecx
   1400286e3:	je     0x1400286ec
   1400286e5:	mov    eax,0x4
   1400286ea:	jmp    0x1400286f5
   1400286ec:	xor    eax,eax
   1400286ee:	mov    WORD PTR [rip+0x195a3],ax        # 0x140041c98
   1400286f5:	mov    DWORD PTR [rbx],eax
   1400286f7:	test   eax,eax
   1400286f9:	jne    0x140028717
   1400286fb:	mov    rcx,QWORD PTR [rdi]
   1400286fe:	lea    r8d,[rax+0x1]
   140028702:	xor    edx,edx
   140028704:	call   0x14002ad10
   140028709:	mov    DWORD PTR [rdi+0xc],eax
   14002870c:	cmp    eax,0xffffffff
   14002870f:	jne    0x140028717
   140028711:	mov    DWORD PTR [rbx],0x3
   140028717:	mov    rbx,QWORD PTR [rsp+0x30]
   14002871c:	mov    rbp,QWORD PTR [rsp+0x38]
   140028721:	mov    rsi,QWORD PTR [rsp+0x40]
   140028726:	add    rsp,0x20
   14002872a:	pop    rdi
   14002872b:	ret    
   14002872c:	int3   
   14002872d:	int3   
   14002872e:	int3   
   14002872f:	int3   
   140028730:	mov    QWORD PTR [rsp+0x8],rbx
   140028735:	push   rbp
   140028736:	push   rsi
   140028737:	push   rdi
   140028738:	push   r12
   14002873a:	push   r13
   14002873c:	push   r14
   14002873e:	push   r15
   140028740:	sub    rsp,0x20
   140028744:	movzx  esi,WORD PTR [rsp+0x80]
   14002874c:	xor    eax,eax
   14002874e:	movzx  r12d,r9w
   140028752:	movzx  edi,dx
   140028755:	lea    r15d,[r8+0x1]
   140028759:	mov    r13d,eax
   14002875c:	mov    DWORD PTR [rsp+0x78],eax
   140028760:	mov    ebx,eax
   140028762:	movzx  eax,r12w
   140028766:	mov    WORD PTR [rsp+0x70],ax
   14002876b:	cmp    r12w,si
   14002876f:	jae    0x14002896c
   140028775:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140028780:	movzx  eax,ax
   140028783:	imul   rbp,rax,0x58
   140028787:	mov    rax,QWORD PTR [rip+0x19eaa]        # 0x140042638
   14002878e:	add    rbp,rax
   140028791:	cmp    QWORD PTR [rbp+0x30],0x0
   140028796:	jne    0x14002893d
   14002879c:	mov    ecx,DWORD PTR [rbp+0xc]
   14002879f:	movzx  eax,di
   1400287a2:	sub    ecx,DWORD PTR [rbp+0x8]
   1400287a5:	cmp    eax,ecx
   1400287a7:	jae    0x1400287af
   1400287a9:	movzx  r14d,di
   1400287ad:	jmp    0x1400287b9
   1400287af:	movzx  r14d,WORD PTR [rbp+0xc]
   1400287b4:	sub    r14w,WORD PTR [rbp+0x8]
   1400287b9:	movzx  ecx,r14w
   1400287bd:	mov    edx,0x10
   1400287c2:	call   QWORD PTR [rip+0x6c38]        # 0x14002f400
   1400287c8:	mov    QWORD PTR [rbp+0x30],rax
   1400287cc:	test   rax,rax
   1400287cf:	jne    0x140028922
   1400287d5:	dec    si
   1400287d8:	add    r13d,r13d
   1400287db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400287e0:	mov    rcx,QWORD PTR [rbp+0x30]
   1400287e4:	test   rcx,rcx
   1400287e7:	je     0x1400287f7
   1400287e9:	call   QWORD PTR [rip+0x6c91]        # 0x14002f480
   1400287ef:	xor    ebx,ebx
   1400287f1:	mov    QWORD PTR [rbp+0x30],rbx
   1400287f5:	jmp    0x1400287f9
   1400287f7:	xor    ebx,ebx
   1400287f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400287fd:	test   rcx,rcx
   140028800:	je     0x14002880c
   140028802:	call   QWORD PTR [rip+0x6c78]        # 0x14002f480
   140028808:	mov    QWORD PTR [rbp+0x28],rbx
   14002880c:	mov    rcx,QWORD PTR [rbp+0x48]
   140028810:	test   rcx,rcx
   140028813:	je     0x14002881f
   140028815:	call   QWORD PTR [rip+0x6c65]        # 0x14002f480
   14002881b:	mov    QWORD PTR [rbp+0x48],rbx
   14002881f:	mov    rcx,QWORD PTR [rbp+0x40]
   140028823:	test   rcx,rcx
   140028826:	je     0x140028832
   140028828:	call   QWORD PTR [rip+0x6c52]        # 0x14002f480
   14002882e:	mov    QWORD PTR [rbp+0x40],rbx
   140028832:	mov    r8,QWORD PTR [rip+0x19dff]        # 0x140042638
   140028839:	nop    DWORD PTR [rax+0x0]
   140028840:	movzx  ecx,r12w
   140028844:	cmp    r12w,si
   140028848:	jae    0x14002886f
   14002884a:	nop    WORD PTR [rax+rax*1+0x0]
   140028850:	movzx  eax,cx
   140028853:	imul   rbx,rax,0x58
   140028857:	add    rbx,r8
   14002885a:	cmp    QWORD PTR [rbx+0x30],0x0
   14002885f:	je     0x140028867
   140028861:	cmp    WORD PTR [rbx+0x38],di
   140028865:	ja     0x1400288cb
   140028867:	inc    cx
   14002886a:	cmp    cx,si
   14002886d:	jb     0x140028850
   14002886f:	cmp    di,r15w
   140028873:	je     0x14002895e
   140028879:	movzx  eax,WORD PTR [rsp+0x80]
   140028881:	cmp    r13d,eax
   140028884:	jae    0x14002889a
   140028886:	movzx  ecx,di
   140028889:	mov    eax,0xcccccccd
   14002888e:	shl    ecx,0x3
   140028891:	mul    ecx
   140028893:	mov    edi,edx
   140028895:	shr    edi,0x3
   140028898:	jmp    0x1400288ad
   14002889a:	movzx  eax,di
   14002889d:	lea    ecx,[rax+rax*8]
   1400288a0:	mov    eax,0xcccccccd
   1400288a5:	mul    ecx
   1400288a7:	shr    edx,0x3
   1400288aa:	movzx  edi,dx
   1400288ad:	cmp    di,r15w
   1400288b1:	cmovb  di,r15w
   1400288b6:	cmp    r14w,di
   1400288ba:	movzx  eax,di
   1400288bd:	cmovb  ax,r14w
   1400288c2:	movzx  r14d,ax
   1400288c6:	jmp    0x140028840
   1400288cb:	mov    QWORD PTR [rbx+0x30],0x0
   1400288d3:	mov    rcx,QWORD PTR [rbx+0x28]
   1400288d7:	call   QWORD PTR [rip+0x6ba3]        # 0x14002f480
   1400288dd:	movzx  ecx,di
   1400288e0:	call   QWORD PTR [rip+0x6b32]        # 0x14002f418
   1400288e6:	dec    DWORD PTR [rsp+0x78]
   1400288ea:	movzx  ecx,r14w
   1400288ee:	mov    QWORD PTR [rbx+0x30],rax
   1400288f2:	mov    WORD PTR [rbx+0x38],di
   1400288f6:	mov    ebx,0x1
   1400288fb:	lea    edx,[rbx+0xf]
   1400288fe:	add    r13d,0xfffffffe
   140028902:	call   QWORD PTR [rip+0x6af8]        # 0x14002f400
   140028908:	mov    QWORD PTR [rbp+0x30],rax
   14002890c:	test   rax,rax
   14002890f:	je     0x1400287e0
   140028915:	movzx  esi,WORD PTR [rsp+0x80]
   14002891d:	mov    r13d,DWORD PTR [rsp+0x78]
   140028922:	inc    r13d
   140028925:	xor    eax,eax
   140028927:	mov    WORD PTR [rbp+0x38],r14w
   14002892c:	mov    WORD PTR [rbp+0x52],ax
   140028930:	mov    rax,QWORD PTR [rbp+0x30]
   140028934:	mov    DWORD PTR [rsp+0x78],r13d
   140028939:	mov    QWORD PTR [rbp+0x20],rax
   14002893d:	movzx  eax,WORD PTR [rsp+0x70]
   140028942:	inc    ax
   140028945:	mov    WORD PTR [rsp+0x70],ax
   14002894a:	cmp    ax,si
   14002894d:	jb     0x140028780
   140028953:	test   ebx,ebx
   140028955:	je     0x14002896c
   140028957:	xor    eax,eax
   140028959:	jmp    0x140028760
   14002895e:	mov    rax,QWORD PTR [rsp+0x88]
   140028966:	mov    DWORD PTR [rax],0x5
   14002896c:	mov    rbx,QWORD PTR [rsp+0x60]
   140028971:	add    rsp,0x20
   140028975:	pop    r15
   140028977:	pop    r14
   140028979:	pop    r13
   14002897b:	pop    r12
   14002897d:	pop    rdi
   14002897e:	pop    rsi
   14002897f:	pop    rbp
   140028980:	ret    
   140028981:	int3   
   140028982:	int3   
   140028983:	int3   
   140028984:	int3   
   140028985:	int3   
   140028986:	int3   
   140028987:	int3   
   140028988:	int3   
   140028989:	int3   
   14002898a:	int3   
   14002898b:	int3   
   14002898c:	int3   
   14002898d:	int3   
   14002898e:	int3   
   14002898f:	int3   
   140028990:	mov    QWORD PTR [rsp+0x8],rbx
   140028995:	mov    QWORD PTR [rsp+0x10],rsi
   14002899a:	push   rdi
   14002899b:	sub    rsp,0x20
   14002899f:	movzx  eax,cx
   1400289a2:	mov    rsi,rdx
   1400289a5:	imul   rdi,rax,0x58
   1400289a9:	add    rdi,QWORD PTR [rip+0x19c88]        # 0x140042638
   1400289b0:	movzx  r9d,WORD PTR [rdi+0x52]
   1400289b5:	mov    r8,QWORD PTR [rdi+0x30]
   1400289b9:	lea    rcx,[r9+r8*1]
   1400289bd:	movzx  eax,r9w
   1400289c1:	mov    QWORD PTR [rdi+0x18],rcx
   1400289c5:	test   r9w,r9w
   1400289c9:	je     0x1400289e7
   1400289cb:	movzx  edx,WORD PTR [rdi+0x38]
   1400289cf:	add    ax,0x8
   1400289d3:	cmp    ax,dx
   1400289d6:	jae    0x1400289e7
   1400289d8:	movzx  ecx,WORD PTR [rcx]
   1400289db:	movzx  eax,ax
   1400289de:	add    ecx,eax
   1400289e0:	movzx  eax,dx
   1400289e3:	cmp    ecx,eax
   1400289e5:	jl     0x140028a57
   1400289e7:	add    DWORD PTR [rdi+0x8],r9d
   1400289eb:	mov    eax,DWORD PTR [rdi+0xc]
   1400289ee:	mov    edx,DWORD PTR [rdi+0x8]
   1400289f1:	movzx  ebx,WORD PTR [rdi+0x38]
   1400289f5:	sub    eax,edx
   1400289f7:	cmp    ebx,eax
   1400289f9:	jb     0x140028a02
   1400289fb:	movzx  ebx,WORD PTR [rdi+0xc]
   1400289ff:	sub    bx,dx
   140028a02:	test   bx,bx
   140028a05:	je     0x140028a21
   140028a07:	mov    rcx,QWORD PTR [rdi]
   140028a0a:	xor    r8d,r8d
   140028a0d:	mov    WORD PTR [rdi+0x38],bx
   140028a11:	call   0x14002ad10
   140028a16:	cmp    eax,0xffffffff
   140028a19:	jne    0x140028a33
   140028a1b:	mov    DWORD PTR [rsi],0x3
   140028a21:	xor    eax,eax
   140028a23:	mov    rbx,QWORD PTR [rsp+0x30]
   140028a28:	mov    rsi,QWORD PTR [rsp+0x38]
   140028a2d:	add    rsp,0x20
   140028a31:	pop    rdi
   140028a32:	ret    
   140028a33:	mov    rdx,QWORD PTR [rdi+0x30]
   140028a37:	mov    rcx,QWORD PTR [rdi]
   140028a3a:	movzx  ebx,bx
   140028a3d:	mov    r8d,ebx
   140028a40:	call   0x14002a8c0
   140028a45:	cmp    eax,ebx
   140028a47:	jne    0x140028a1b
   140028a49:	mov    r8,QWORD PTR [rdi+0x30]
   140028a4d:	xor    eax,eax
   140028a4f:	mov    QWORD PTR [rdi+0x18],r8
   140028a53:	mov    WORD PTR [rdi+0x52],ax
   140028a57:	add    WORD PTR [rdi+0x52],0x8
   140028a5c:	movzx  edx,WORD PTR [rdi+0x52]
   140028a60:	mov    rbx,QWORD PTR [rsp+0x30]
   140028a65:	mov    rsi,QWORD PTR [rsp+0x38]
   140028a6a:	lea    rax,[r8+rdx*1]
   140028a6e:	mov    QWORD PTR [rdi+0x20],rax
   140028a72:	mov    rax,QWORD PTR [rdi+0x18]
   140028a76:	movzx  ecx,WORD PTR [rax]
   140028a79:	mov    eax,0x1
   140028a7e:	add    cx,dx
   140028a81:	mov    WORD PTR [rdi+0x52],cx
   140028a85:	add    rsp,0x20
   140028a89:	pop    rdi
   140028a8a:	ret    
   140028a8b:	int3   
   140028a8c:	int3   
   140028a8d:	int3   
   140028a8e:	int3   
   140028a8f:	int3   
   140028a90:	mov    QWORD PTR [rsp+0x8],rbx
   140028a95:	mov    QWORD PTR [rsp+0x10],rbp
   140028a9a:	mov    QWORD PTR [rsp+0x18],rsi
   140028a9f:	push   rdi
   140028aa0:	push   r12
   140028aa2:	push   r13
   140028aa4:	push   r14
   140028aa6:	push   r15
   140028aa8:	sub    rsp,0x20
   140028aac:	mov    rbp,r8
   140028aaf:	mov    r8,QWORD PTR [r8+0x10]
   140028ab3:	mov    r14,rdx
   140028ab6:	mov    rdx,QWORD PTR [rdx+0x10]
   140028aba:	mov    r15,r9
   140028abd:	mov    r12,rcx
   140028ac0:	call   QWORD PTR [rip+0x19b92]        # 0x140042658
   140028ac6:	mov    r13,QWORD PTR [rsp+0x78]
   140028acb:	mov    WORD PTR [r13+0x0],ax
   140028ad0:	test   ax,ax
   140028ad3:	jne    0x140028c42
   140028ad9:	movzx  eax,WORD PTR [rsp+0x70]
   140028ade:	imul   rsi,rax,0x58
   140028ae2:	mov    QWORD PTR [rsp+0x78],rsi
   140028ae7:	nop    WORD PTR [rax+rax*1+0x0]
   140028af0:	mov    rax,QWORD PTR [rbp+0x8]
   140028af4:	mov    rdx,QWORD PTR [r14+0x8]
   140028af8:	mov    ecx,DWORD PTR [rax+0x4]
   140028afb:	add    DWORD PTR [rdx+0x4],ecx
   140028afe:	mov    rbx,QWORD PTR [rip+0x19b33]        # 0x140042638
   140028b05:	movzx  r9d,WORD PTR [rsi+rbx*1+0x52]
   140028b0b:	mov    r8,QWORD PTR [rsi+rbx*1+0x30]
   140028b10:	lea    r10,[r9+r8*1]
   140028b14:	movzx  eax,r9w
   140028b18:	mov    QWORD PTR [rsi+rbx*1+0x18],r10
   140028b1d:	test   r9w,r9w
   140028b21:	je     0x140028b45
   140028b23:	movzx  edx,WORD PTR [rsi+rbx*1+0x38]
   140028b28:	add    ax,0x8
   140028b2c:	cmp    ax,dx
   140028b2f:	jae    0x140028b45
   140028b31:	movzx  ecx,ax
   140028b34:	movzx  eax,WORD PTR [r10]
   140028b38:	add    ecx,eax
   140028b3a:	movzx  eax,dx
   140028b3d:	cmp    ecx,eax
   140028b3f:	jl     0x140028bff
   140028b45:	add    DWORD PTR [rsi+rbx*1+0x8],r9d
   140028b4a:	mov    eax,DWORD PTR [rsi+rbx*1+0xc]
   140028b4e:	mov    edx,DWORD PTR [rsi+rbx*1+0x8]
   140028b52:	movzx  edi,WORD PTR [rsi+rbx*1+0x38]
   140028b57:	sub    eax,edx
   140028b59:	cmp    edi,eax
   140028b5b:	jb     0x140028b65
   140028b5d:	movzx  edi,WORD PTR [rsi+rbx*1+0xc]
   140028b62:	sub    di,dx
   140028b65:	test   di,di
   140028b68:	je     0x140028c6b
   140028b6e:	mov    rcx,QWORD PTR [rsi+rbx*1]
   140028b72:	mov    WORD PTR [rsi+rbx*1+0x38],di
   140028b77:	xor    r9d,r9d
   140028b7a:	mov    rcx,QWORD PTR [rcx]
   140028b7d:	xor    r8d,r8d
   140028b80:	call   QWORD PTR [rip+0x6692]        # 0x14002f218
   140028b86:	mov    esi,eax
   140028b88:	lea    ecx,[rax+0x1]
   140028b8b:	test   ecx,0xfffffffe
   140028b91:	jne    0x140028bc8
   140028b93:	call   QWORD PTR [rip+0x65c7]        # 0x14002f160
   140028b99:	cmp    eax,0x58
   140028b9c:	jae    0x140028bac
   140028b9e:	mov    ecx,eax
   140028ba0:	lea    rax,[rip+0x84f9]        # 0x1400310a0
   140028ba7:	mov    edx,DWORD PTR [rax+rcx*4]
   140028baa:	jmp    0x140028bb1
   140028bac:	mov    edx,0x106
   140028bb1:	mov    DWORD PTR [rip+0x1a501],edx        # 0x1400430b8
   140028bb7:	mov    DWORD PTR [rip+0x1a907],0x2        # 0x1400434c8
   140028bc1:	mov    BYTE PTR [rip+0x1a7f8],0x0        # 0x1400433c0
   140028bc8:	cmp    esi,0xffffffff
   140028bcb:	je     0x140028c64
   140028bd1:	mov    rsi,QWORD PTR [rsp+0x78]
   140028bd6:	movzx  edi,di
   140028bd9:	mov    rdx,QWORD PTR [rsi+rbx*1+0x30]
   140028bde:	mov    rcx,QWORD PTR [rsi+rbx*1]
   140028be2:	mov    r8d,edi
   140028be5:	call   0x14002a8c0
   140028bea:	cmp    eax,edi
   140028bec:	jne    0x140028c64
   140028bee:	mov    r8,QWORD PTR [rsi+rbx*1+0x30]
   140028bf3:	xor    eax,eax
   140028bf5:	mov    QWORD PTR [rsi+rbx*1+0x18],r8
   140028bfa:	mov    WORD PTR [rsi+rbx*1+0x52],ax
   140028bff:	add    WORD PTR [rsi+rbx*1+0x52],0x8
   140028c05:	movzx  edx,WORD PTR [rsi+rbx*1+0x52]
   140028c0a:	lea    rax,[r8+rdx*1]
   140028c0e:	mov    QWORD PTR [rsi+rbx*1+0x20],rax
   140028c13:	mov    rax,QWORD PTR [rsi+rbx*1+0x18]
   140028c18:	movzx  ecx,WORD PTR [rax]
   140028c1b:	add    cx,dx
   140028c1e:	mov    WORD PTR [rsi+rbx*1+0x52],cx
   140028c23:	mov    r8,QWORD PTR [rbp+0x10]
   140028c27:	mov    rdx,QWORD PTR [r14+0x10]
   140028c2b:	mov    rcx,r12
   140028c2e:	call   QWORD PTR [rip+0x19a24]        # 0x140042658
   140028c34:	mov    WORD PTR [r13+0x0],ax
   140028c39:	test   ax,ax
   140028c3c:	je     0x140028af0
   140028c42:	mov    eax,0x1
   140028c47:	mov    rbx,QWORD PTR [rsp+0x50]
   140028c4c:	mov    rbp,QWORD PTR [rsp+0x58]
   140028c51:	mov    rsi,QWORD PTR [rsp+0x60]
   140028c56:	add    rsp,0x20
   140028c5a:	pop    r15
   140028c5c:	pop    r14
   140028c5e:	pop    r13
   140028c60:	pop    r12
   140028c62:	pop    rdi
   140028c63:	ret    
   140028c64:	mov    DWORD PTR [r15],0x3
   140028c6b:	xor    eax,eax
   140028c6d:	jmp    0x140028c47
   140028c6f:	int3   
   140028c70:	mov    WORD PTR [rsp+0x18],r8w
   140028c76:	mov    DWORD PTR [rsp+0x10],edx
   140028c7a:	mov    QWORD PTR [rsp+0x8],rcx
   140028c7f:	push   rbx
   140028c80:	push   rbp
   140028c81:	push   rsi
   140028c82:	push   rdi
   140028c83:	push   r12
   140028c85:	push   r13
   140028c87:	push   r14
   140028c89:	push   r15
   140028c8b:	sub    rsp,0x48
   140028c8f:	mov    r14,QWORD PTR [rsp+0xb0]
   140028c97:	xor    r15d,r15d
   140028c9a:	movzx  edi,r8w
   140028c9e:	movzx  r13d,r9w
   140028ca2:	movzx  ebx,r15w
   140028ca6:	movzx  esi,r15w
   140028caa:	sub    r13d,edi
   140028cad:	mov    DWORD PTR [rsp+0x30],edi
   140028cb1:	test   r13d,r13d
   140028cb4:	jle    0x140028f6f
   140028cba:	movzx  eax,di
   140028cbd:	nop    DWORD PTR [rax]
   140028cc0:	movzx  r12d,si
   140028cc4:	lea    ebp,[rdi+rsi*1]
   140028cc7:	mov    rdx,r14
   140028cca:	add    rax,r12
   140028ccd:	imul   rcx,rax,0x58
   140028cd1:	mov    rax,QWORD PTR [rip+0x19960]        # 0x140042638
   140028cd8:	mov    DWORD PTR [rcx+rax*1+0x10],0xffffffff
   140028ce0:	movzx  ecx,bp
   140028ce3:	call   0x140028990
   140028ce8:	cmp    DWORD PTR [r14],0x0
   140028cec:	jne    0x140028fbb
   140028cf2:	movzx  edi,r15w
   140028cf6:	cmp    r15w,si
   140028cfa:	je     0x140028dac
   140028d00:	movzx  eax,si
   140028d03:	add    eax,DWORD PTR [rsp+0x30]
   140028d07:	cdqe   
   140028d09:	imul   r15,rax,0x58
   140028d0d:	add    r15,0x10
   140028d11:	mov    rdx,QWORD PTR [rip+0x19920]        # 0x140042638
   140028d18:	lea    rcx,[rip+0x18f81]        # 0x140041ca0
   140028d1f:	movzx  eax,di
   140028d22:	movzx  eax,WORD PTR [rcx+rax*2]
   140028d26:	lea    r8,[r15+rdx*1]
   140028d2a:	add    rdx,0x10
   140028d2e:	mov    r9,r14
   140028d31:	imul   rcx,rax,0x58
   140028d35:	add    rdx,rcx
   140028d38:	mov    rcx,QWORD PTR [rsp+0x90]
   140028d40:	lea    rax,[rsp+0xa8]
   140028d48:	mov    QWORD PTR [rsp+0x28],rax
   140028d4d:	mov    WORD PTR [rsp+0x20],bp
   140028d52:	call   0x140028a90
   140028d57:	test   eax,eax
   140028d59:	je     0x140028d96
   140028d5b:	cmp    WORD PTR [rsp+0xa8],0x0
   140028d64:	jle    0x140028da0
   140028d66:	cmp    si,di
   140028d69:	jbe    0x140028d91
   140028d6b:	lea    rax,[rip+0x18f2e]        # 0x140041ca0
   140028d72:	lea    rcx,[rax+r12*2]
   140028d76:	movzx  eax,si
   140028d79:	sub    ax,di
   140028d7c:	movzx  edx,ax
   140028d7f:	nop
   140028d80:	movzx  eax,WORD PTR [rcx-0x2]
   140028d84:	lea    rcx,[rcx-0x2]
   140028d88:	mov    WORD PTR [rcx+0x2],ax
   140028d8c:	dec    rdx
   140028d8f:	jne    0x140028d80
   140028d91:	movzx  eax,di
   140028d94:	jmp    0x140028daf
   140028d96:	cmp    DWORD PTR [r14],0x0
   140028d9a:	jne    0x140028fbb
   140028da0:	inc    di
   140028da3:	cmp    di,si
   140028da6:	jne    0x140028d11
   140028dac:	movzx  eax,bx
   140028daf:	movzx  edi,WORD PTR [rsp+0xa0]
   140028db7:	inc    si
   140028dba:	lea    rcx,[rip+0x18edf]        # 0x140041ca0
   140028dc1:	mov    WORD PTR [rcx+rax*2],bp
   140028dc5:	movzx  eax,si
   140028dc8:	inc    bx
   140028dcb:	cmp    eax,r13d
   140028dce:	mov    eax,edi
   140028dd0:	mov    r15d,0x0
   140028dd6:	jl     0x140028cc0
   140028ddc:	mov    r13d,DWORD PTR [rsp+0x98]
   140028de4:	test   bx,bx
   140028de7:	je     0x140028f77
   140028ded:	lea    ebp,[r15+0x1]
   140028df1:	movzx  eax,WORD PTR [rip+0x18ea8]        # 0x140041ca0
   140028df8:	imul   r15,rax,0x58
   140028dfc:	add    r15,QWORD PTR [rip+0x19835]        # 0x140042638
   140028e03:	test   r13d,r13d
   140028e06:	je     0x140028e31
   140028e08:	mov    r8,QWORD PTR [r15+0x20]
   140028e0c:	mov    rdx,QWORD PTR [r15+0x18]
   140028e10:	mov    rcx,QWORD PTR [rip+0x19809]        # 0x140042620
   140028e17:	call   0x1400278c0
   140028e1c:	mov    DWORD PTR [r14],eax
   140028e1f:	test   eax,eax
   140028e21:	jne    0x140028fbb
   140028e27:	mov    r12,QWORD PTR [rsp+0x90]
   140028e2f:	jmp    0x140028e5a
   140028e31:	mov    rax,QWORD PTR [r15+0x18]
   140028e35:	mov    r12,QWORD PTR [rsp+0x90]
   140028e3d:	mov    rdx,QWORD PTR [r15+0x20]
   140028e41:	mov    r9d,DWORD PTR [rax+0x4]
   140028e45:	movzx  r8d,WORD PTR [rax]
   140028e49:	mov    rcx,r12
   140028e4c:	call   QWORD PTR [rip+0x1980e]        # 0x140042660
   140028e52:	test   eax,eax
   140028e54:	je     0x140028f66
   140028e5a:	movzx  ecx,WORD PTR [rip+0x18e3f]        # 0x140041ca0
   140028e61:	mov    rdx,r14
   140028e64:	call   0x140028990
   140028e69:	test   ax,ax
   140028e6c:	jne    0x140028e97
   140028e6e:	cmp    bp,bx
   140028e71:	jae    0x140028e8a
   140028e73:	lea    eax,[rbx-0x1]
   140028e76:	lea    rdi,[rip+0x18e23]        # 0x140041ca0
   140028e7d:	lea    rsi,[rip+0x18e1e]        # 0x140041ca2
   140028e84:	movzx  ecx,ax
   140028e87:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   140028e8a:	mov    eax,0xffff
   140028e8f:	add    bx,ax
   140028e92:	jmp    0x140028f19
   140028e97:	movzx  edi,WORD PTR [rip+0x18e02]        # 0x140041ca0
   140028e9e:	movzx  esi,bp
   140028ea1:	lea    rcx,[rip+0x18df8]        # 0x140041ca0
   140028ea8:	cmp    bp,bx
   140028eab:	je     0x140028f11
   140028ead:	nop    DWORD PTR [rax]
   140028eb0:	mov    rdx,QWORD PTR [rip+0x19781]        # 0x140042638
   140028eb7:	movzx  ebp,si
   140028eba:	lea    r8,[r15+0x10]
   140028ebe:	movzx  eax,WORD PTR [rcx+rbp*2]
   140028ec2:	add    rdx,0x10
   140028ec6:	mov    r9,r14
   140028ec9:	imul   rcx,rax,0x58
   140028ecd:	lea    rax,[rsp+0xa8]
   140028ed5:	add    rdx,rcx
   140028ed8:	mov    QWORD PTR [rsp+0x28],rax
   140028edd:	mov    rcx,r12
   140028ee0:	mov    WORD PTR [rsp+0x20],di
   140028ee5:	call   0x140028a90
   140028eea:	test   eax,eax
   140028eec:	je     0x140028f2c
   140028eee:	cmp    WORD PTR [rsp+0xa8],0x0
   140028ef7:	lea    rcx,[rip+0x18da2]        # 0x140041ca0
   140028efe:	jg     0x140028f11
   140028f00:	movzx  eax,WORD PTR [rcx+rbp*2]
   140028f04:	inc    si
   140028f07:	mov    WORD PTR [rcx+rbp*2-0x2],ax
   140028f0c:	cmp    si,bx
   140028f0f:	jne    0x140028eb0
   140028f11:	movzx  eax,si
   140028f14:	mov    WORD PTR [rcx+rax*2-0x2],di
   140028f19:	mov    ebp,0x1
   140028f1e:	test   bx,bx
   140028f21:	jne    0x140028df1
   140028f27:	xor    r15d,r15d
   140028f2a:	jmp    0x140028f77
   140028f2c:	cmp    DWORD PTR [r14],0x0
   140028f30:	jne    0x140028fbb
   140028f36:	cmp    si,bx
   140028f39:	jae    0x140028f5c
   140028f3b:	movzx  eax,si
   140028f3e:	lea    rcx,[rip+0x18d5b]        # 0x140041ca0
   140028f45:	lea    rdx,[rcx+rax*2]
   140028f49:	movzx  eax,bx
   140028f4c:	sub    ax,si
   140028f4f:	lea    rdi,[rdx-0x2]
   140028f53:	mov    rsi,rdx
   140028f56:	movzx  ecx,ax
   140028f59:	rep movs WORD PTR es:[rdi],WORD PTR ds:[rsi]
   140028f5c:	mov    eax,0xffff
   140028f61:	add    bx,ax
   140028f64:	jmp    0x140028f19
   140028f66:	mov    DWORD PTR [r14],0x4
   140028f6d:	jmp    0x140028fbb
   140028f6f:	mov    r13d,DWORD PTR [rsp+0x98]
   140028f77:	test   r13d,r13d
   140028f7a:	je     0x140028fbb
   140028f7c:	cmp    DWORD PTR [r14],0x0
   140028f80:	jne    0x140028fbb
   140028f82:	movzx  r8d,WORD PTR [rip+0x18d0e]        # 0x140041c98
   140028f8a:	mov    rdx,QWORD PTR [rip+0x1967f]        # 0x140042610
   140028f91:	mov    rcx,QWORD PTR [rip+0x19688]        # 0x140042620
   140028f98:	call   0x14002a820
   140028f9d:	movzx  ecx,WORD PTR [rip+0x18cf4]        # 0x140041c98
   140028fa4:	cmp    eax,ecx
   140028fa6:	je     0x140028fb0
   140028fa8:	mov    r15d,0x4
   140028fae:	jmp    0x140028fb8
   140028fb0:	mov    WORD PTR [rip+0x18ce0],r15w        # 0x140041c98
   140028fb8:	mov    DWORD PTR [r14],r15d
   140028fbb:	add    rsp,0x48
   140028fbf:	pop    r15
   140028fc1:	pop    r14
   140028fc3:	pop    r13
   140028fc5:	pop    r12
   140028fc7:	pop    rdi
   140028fc8:	pop    rsi
   140028fc9:	pop    rbp
   140028fca:	pop    rbx
   140028fcb:	ret    
   140028fcc:	int3   
   140028fcd:	int3   
   140028fce:	int3   
   140028fcf:	int3   
   140028fd0:	mov    rax,rsp
   140028fd3:	mov    QWORD PTR [rax+0x18],r8
   140028fd7:	mov    QWORD PTR [rax+0x8],rcx
   140028fdb:	push   rbp
   140028fdc:	push   rbx
   140028fdd:	push   rdi
   140028fde:	lea    rbp,[rax-0x5f]
   140028fe2:	sub    rsp,0x90
   140028fe9:	movups xmm0,XMMWORD PTR [r8]
   140028fed:	movups xmm1,XMMWORD PTR [r8+0x10]
   140028ff2:	mov    QWORD PTR [rax-0x20],rsi
   140028ff6:	mov    QWORD PTR [rax-0x28],r12
   140028ffa:	mov    QWORD PTR [rax-0x30],r13
   140028ffe:	xor    r13d,r13d
   140029001:	mov    QWORD PTR [rax-0x38],r14
   140029005:	mov    esi,edx
   140029007:	mov    QWORD PTR [rax-0x40],r15
   14002900b:	movups XMMWORD PTR [rip+0x19636],xmm0        # 0x140042648
   140029012:	movsd  xmm0,QWORD PTR [r8+0x20]
   140029018:	movups XMMWORD PTR [rip+0x19639],xmm1        # 0x140042658
   14002901f:	mov    r15,rcx
   140029022:	lea    rdx,[rip+0xb797]        # 0x1400347c0
   140029029:	xor    ecx,ecx
   14002902b:	mov    QWORD PTR [rbp-0x1],r13
   14002902f:	mov    DWORD PTR [rbp-0x15],r13d
   140029033:	mov    DWORD PTR [rbp-0x9],r13d
   140029037:	movsd  QWORD PTR [rip+0x19629],xmm0        # 0x140042668
   14002903f:	xorps  xmm0,xmm0
   140029042:	movdqu XMMWORD PTR [rip+0x195ce],xmm0        # 0x140042618
   14002904a:	mov    r12d,r13d
   14002904d:	mov    DWORD PTR [rbp-0xd],r13d
   140029051:	call   QWORD PTR [rip+0x63b1]        # 0x14002f408
   140029057:	mov    QWORD PTR [rbp+0x7],rax
   14002905b:	test   rax,rax
   14002905e:	je     0x1400290a5
   140029060:	mov    rcx,rax
   140029063:	call   0x140027ab0
   140029068:	mov    QWORD PTR [rip+0x195a9],rax        # 0x140042618
   14002906f:	test   rax,rax
   140029072:	je     0x1400290a5
   140029074:	lea    rdx,[rip+0xb745]        # 0x1400347c0
   14002907b:	xor    ecx,ecx
   14002907d:	call   QWORD PTR [rip+0x6385]        # 0x14002f408
   140029083:	mov    QWORD PTR [rbp-0x1],rax
   140029087:	test   rax,rax
   14002908a:	je     0x1400290a5
   14002908c:	mov    rcx,rax
   14002908f:	call   0x140027ab0
   140029094:	mov    QWORD PTR [rip+0x19585],rax        # 0x140042620
   14002909b:	test   rax,rax
   14002909e:	je     0x1400290a5
   1400290a0:	mov    edi,DWORD PTR [rbp-0x15]
   1400290a3:	jmp    0x1400290ad
   1400290a5:	mov    edi,0xa
   1400290aa:	mov    DWORD PTR [rbp-0x15],edi
   1400290ad:	movzx  ebx,r13w
   1400290b1:	mov    ecx,0x19c80
   1400290b6:	mov    WORD PTR [rip+0x1956a],r13w        # 0x140042628
   1400290be:	mov    WORD PTR [rip+0x19565],bx        # 0x14004262a
   1400290c5:	call   QWORD PTR [rip+0x634d]        # 0x14002f418
   1400290cb:	mov    QWORD PTR [rip+0x19566],rax        # 0x140042638
   1400290d2:	test   rax,rax
   1400290d5:	jne    0x1400290e4
   1400290d7:	mov    eax,0x5
   1400290dc:	mov    DWORD PTR [rbp-0x15],eax
   1400290df:	jmp    0x14002961e
   1400290e4:	test   edi,edi
   1400290e6:	jne    0x14002961e
   1400290ec:	mov    ecx,0xf000
   1400290f1:	mov    WORD PTR [rip+0x18b9f],r13w        # 0x140041c98
   1400290f9:	mov    QWORD PTR [rip+0x19508],r13        # 0x140042608
   140029100:	call   QWORD PTR [rip+0x6312]        # 0x14002f418
   140029106:	mov    ecx,0x5
   14002910b:	test   rax,rax
   14002910e:	mov    QWORD PTR [rip+0x194fb],rax        # 0x140042610
   140029115:	cmove  edi,ecx
   140029118:	inc    esi
   14002911a:	xor    edx,edx
   14002911c:	lea    r14d,[rsi+0x4]
   140029120:	mov    DWORD PTR [rbp-0x15],edi
   140029123:	mov    edi,0xff00
   140029128:	mov    WORD PTR [rbp+0x7f],dx
   14002912c:	mov    DWORD PTR [rbp+0x6f],esi
   14002912f:	mov    DWORD PTR [rbp-0x11],r14d
   140029133:	cmp    r14d,edi
   140029136:	jbe    0x140029146
   140029138:	mov    eax,0x1
   14002913d:	mov    r14d,edi
   140029140:	mov    DWORD PTR [rbp-0x11],edi
   140029143:	mov    DWORD PTR [rbp-0x9],eax
   140029146:	mov    r13d,0x14
   14002914c:	mov    r8d,0x2a80
   140029152:	movzx  eax,bx
   140029155:	mov    WORD PTR [rip+0x194a8],bx        # 0x140042604
   14002915c:	cmp    bx,r13w
   140029160:	jae    0x140029361
   140029166:	lea    ecx,[rsi-0x1]
   140029169:	mov    DWORD PTR [rbp-0x5],ecx
   14002916c:	nop    DWORD PTR [rax+0x0]
   140029170:	cmp    ecx,r12d
   140029173:	je     0x140029355
   140029179:	cmp    DWORD PTR [rbp-0x15],0x0
   14002917d:	jne    0x14002961a
   140029183:	inc    bx
   140029186:	movzx  eax,ax
   140029189:	mov    WORD PTR [rip+0x1949a],bx        # 0x14004262a
   140029190:	imul   rbx,rax,0x58
   140029194:	add    rbx,QWORD PTR [rip+0x1949d]        # 0x140042638
   14002919b:	mov    WORD PTR [rbx+0x38],r14w
   1400291a0:	cmp    r14w,r8w
   1400291a4:	jae    0x1400291ac
   1400291a6:	movzx  esi,r14w
   1400291aa:	jmp    0x1400291af
   1400291ac:	mov    esi,r8d
   1400291af:	movzx  eax,si
   1400291b2:	movzx  ecx,r14w
   1400291b6:	mov    QWORD PTR [rbx+0x28],rdx
   1400291ba:	add    ax,ax
   1400291bd:	mov    QWORD PTR [rbx+0x40],rdx
   1400291c1:	mov    QWORD PTR [rbx+0x48],rdx
   1400291c5:	lea    edi,[rax+rsi*1]
   1400291c8:	shl    di,0x2
   1400291cc:	mov    WORD PTR [rbx+0x50],di
   1400291d0:	call   QWORD PTR [rip+0x6242]        # 0x14002f418
   1400291d6:	mov    r14,rax
   1400291d9:	mov    QWORD PTR [rbx+0x30],rax
   1400291dd:	test   rax,rax
   1400291e0:	je     0x1400296bd
   1400291e6:	movzx  ecx,di
   1400291e9:	call   QWORD PTR [rip+0x6229]        # 0x14002f418
   1400291ef:	mov    QWORD PTR [rbx+0x48],rax
   1400291f3:	test   rax,rax
   1400291f6:	je     0x1400296a6
   1400291fc:	cmp    DWORD PTR [rbp-0x15],0x0
   140029200:	jne    0x14002961a
   140029206:	movzx  r8d,WORD PTR [rbp-0x11]
   14002920b:	mov    rdi,QWORD PTR [rbp+0x67]
   14002920f:	lea    rax,[rbp-0x19]
   140029213:	mov    QWORD PTR [rsp+0x20],rax
   140029218:	mov    rax,QWORD PTR [rbp+0x77]
   14002921c:	sub    r8w,0x4
   140029221:	mov    r9d,r12d
   140029224:	mov    rdx,r14
   140029227:	mov    rcx,rdi
   14002922a:	call   QWORD PTR [rax]
   14002922c:	test   eax,eax
   14002922e:	jne    0x140029239
   140029230:	mov    DWORD PTR [rbp-0x15],0x3
   140029237:	jmp    0x14002929a
   140029239:	movzx  r8d,WORD PTR [rbp-0x19]
   14002923e:	test   r8w,r8w
   140029242:	je     0x1400292e5
   140029248:	lea    rax,[rbp-0xd]
   14002924c:	lea    rdx,[rbx+0x28]
   140029250:	movzx  r9d,si
   140029254:	mov    QWORD PTR [rsp+0x28],rax
   140029259:	lea    rax,[rbp+0x7f]
   14002925d:	mov    rcx,rdi
   140029260:	mov    QWORD PTR [rsp+0x20],rax
   140029265:	call   0x140027eb0
   14002926a:	cmp    WORD PTR [rbx+0x52],0x0
   14002926f:	je     0x1400295ff
   140029275:	mov    esi,DWORD PTR [rbp-0x9]
   140029278:	lea    r9,[rbp-0x15]
   14002927c:	mov    rdx,rbx
   14002927f:	mov    r8d,esi
   140029282:	mov    rcx,rdi
   140029285:	call   0x140028660
   14002928a:	mov    rcx,rbx
   14002928d:	call   0x140027b70
   140029292:	test   esi,esi
   140029294:	je     0x1400292d0
   140029296:	mov    r12d,DWORD PTR [rbp-0xd]
   14002929a:	movzx  eax,WORD PTR [rip+0x19363]        # 0x140042604
   1400292a1:	movzx  ebx,WORD PTR [rip+0x19382]        # 0x14004262a
   1400292a8:	inc    ax
   1400292ab:	mov    WORD PTR [rip+0x19352],ax        # 0x140042604
   1400292b2:	cmp    ax,r13w
   1400292b6:	jae    0x140029355
   1400292bc:	mov    ecx,DWORD PTR [rbp-0x5]
   1400292bf:	mov    r14d,DWORD PTR [rbp-0x11]
   1400292c3:	xor    edx,edx
   1400292c5:	mov    r8d,0x2a80
   1400292cb:	jmp    0x140029170
   1400292d0:	mov    esi,DWORD PTR [rbp+0x6f]
   1400292d3:	movzx  ebx,WORD PTR [rip+0x19350]        # 0x14004262a
   1400292da:	mov    r12d,esi
   1400292dd:	mov    DWORD PTR [rbp-0xd],esi
   1400292e0:	jmp    0x140029358
   1400292e5:	mov    rcx,QWORD PTR [rbx+0x30]
   1400292e9:	test   rcx,rcx
   1400292ec:	je     0x1400292fc
   1400292ee:	call   QWORD PTR [rip+0x618c]        # 0x14002f480
   1400292f4:	xor    edi,edi
   1400292f6:	mov    QWORD PTR [rbx+0x30],rdi
   1400292fa:	jmp    0x1400292fe
   1400292fc:	xor    edi,edi
   1400292fe:	mov    rcx,QWORD PTR [rbx+0x28]
   140029302:	test   rcx,rcx
   140029305:	je     0x140029311
   140029307:	call   QWORD PTR [rip+0x6173]        # 0x14002f480
   14002930d:	mov    QWORD PTR [rbx+0x28],rdi
   140029311:	mov    rcx,QWORD PTR [rbx+0x48]
   140029315:	test   rcx,rcx
   140029318:	je     0x140029324
   14002931a:	call   QWORD PTR [rip+0x6160]        # 0x14002f480
   140029320:	mov    QWORD PTR [rbx+0x48],rdi
   140029324:	mov    rcx,QWORD PTR [rbx+0x40]
   140029328:	test   rcx,rcx
   14002932b:	je     0x140029337
   14002932d:	call   QWORD PTR [rip+0x614d]        # 0x14002f480
   140029333:	mov    QWORD PTR [rbx+0x40],rdi
   140029337:	movzx  ebx,WORD PTR [rip+0x192ec]        # 0x14004262a
   14002933e:	mov    r12d,DWORD PTR [rbp-0x5]
   140029342:	mov    eax,0xffff
   140029347:	add    bx,ax
   14002934a:	mov    DWORD PTR [rbp-0xd],r12d
   14002934e:	mov    WORD PTR [rip+0x192d5],bx        # 0x14004262a
   140029355:	mov    esi,DWORD PTR [rbp+0x6f]
   140029358:	mov    r15,QWORD PTR [rbp+0x67]
   14002935c:	mov    edi,0xff00
   140029361:	cmp    DWORD PTR [rbp-0x15],0x0
   140029365:	jne    0x14002961e
   14002936b:	mov    r14d,DWORD PTR [rbp-0x11]
   14002936f:	lea    eax,[rsi-0x1]
   140029372:	cmp    eax,r12d
   140029375:	jbe    0x14002970f
   14002937b:	movzx  r9d,WORD PTR [rip+0x192a5]        # 0x140042628
   140029383:	movzx  r8d,WORD PTR [rbp+0x7f]
   140029388:	mov    eax,edi
   14002938a:	lea    rcx,[rbp-0x15]
   14002938e:	cmp    r14d,edi
   140029391:	cmovb  ax,r14w
   140029396:	mov    QWORD PTR [rsp+0x28],rcx
   14002939b:	mov    WORD PTR [rsp+0x20],bx
   1400293a0:	movzx  edx,ax
   1400293a3:	call   0x140028730
   1400293a8:	cmp    DWORD PTR [rbp-0x15],0x0
   1400293ac:	jne    0x1400295e8
   1400293b2:	mov    rcx,QWORD PTR [rip+0x19267]        # 0x140042620
   1400293b9:	mov    r9d,0x1
   1400293bf:	xor    r8d,r8d
   1400293c2:	mov    rcx,QWORD PTR [rcx]
   1400293c5:	xor    edx,edx
   1400293c7:	call   QWORD PTR [rip+0x5e4b]        # 0x14002f218
   1400293cd:	mov    esi,eax
   1400293cf:	lea    ecx,[rax+0x1]
   1400293d2:	test   ecx,0xfffffffe
   1400293d8:	jne    0x14002940f
   1400293da:	call   QWORD PTR [rip+0x5d80]        # 0x14002f160
   1400293e0:	cmp    eax,0x58
   1400293e3:	jae    0x1400293f3
   1400293e5:	mov    ecx,eax
   1400293e7:	lea    rax,[rip+0x7cb2]        # 0x1400310a0
   1400293ee:	mov    edx,DWORD PTR [rax+rcx*4]
   1400293f1:	jmp    0x1400293f8
   1400293f3:	mov    edx,0x106
   1400293f8:	mov    DWORD PTR [rip+0x19cba],edx        # 0x1400430b8
   1400293fe:	mov    DWORD PTR [rip+0x1a0c0],0x2        # 0x1400434c8
   140029408:	mov    BYTE PTR [rip+0x19fb1],0x0        # 0x1400433c0
   14002940f:	movzx  eax,WORD PTR [rip+0x19212]        # 0x140042628
   140029416:	movzx  r9d,WORD PTR [rip+0x1920c]        # 0x14004262a
   14002941e:	mov    edx,0x1
   140029423:	movzx  r8d,ax
   140029427:	inc    ax
   14002942a:	mov    rcx,r15
   14002942d:	mov    WORD PTR [rip+0x191f4],ax        # 0x140042628
   140029434:	lea    rax,[rbp-0x15]
   140029438:	mov    QWORD PTR [rsp+0x20],rax
   14002943d:	call   0x140028c70
   140029442:	xor    r13d,r13d
   140029445:	cmp    r13w,WORD PTR [rip+0x191dd]        # 0x14004262a
   14002944d:	movzx  edi,r13w
   140029451:	jae    0x1400294c6
   140029453:	nop    DWORD PTR [rax+0x0]
   140029457:	nop    WORD PTR [rax+rax*1+0x0]
   140029460:	movzx  eax,di
   140029463:	imul   rbx,rax,0x58
   140029467:	add    rbx,QWORD PTR [rip+0x191ca]        # 0x140042638
   14002946e:	mov    rcx,QWORD PTR [rbx+0x30]
   140029472:	test   rcx,rcx
   140029475:	je     0x140029481
   140029477:	call   QWORD PTR [rip+0x6003]        # 0x14002f480
   14002947d:	mov    QWORD PTR [rbx+0x30],r13
   140029481:	mov    rcx,QWORD PTR [rbx+0x28]
   140029485:	test   rcx,rcx
   140029488:	je     0x140029494
   14002948a:	call   QWORD PTR [rip+0x5ff0]        # 0x14002f480
   140029490:	mov    QWORD PTR [rbx+0x28],r13
   140029494:	mov    rcx,QWORD PTR [rbx+0x48]
   140029498:	test   rcx,rcx
   14002949b:	je     0x1400294a7
   14002949d:	call   QWORD PTR [rip+0x5fdd]        # 0x14002f480
   1400294a3:	mov    QWORD PTR [rbx+0x48],r13
   1400294a7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400294ab:	test   rcx,rcx
   1400294ae:	je     0x1400294ba
   1400294b0:	call   QWORD PTR [rip+0x5fca]        # 0x14002f480
   1400294b6:	mov    QWORD PTR [rbx+0x40],r13
   1400294ba:	inc    di
   1400294bd:	cmp    di,WORD PTR [rip+0x19166]        # 0x14004262a
   1400294c4:	jb     0x140029460
   1400294c6:	movzx  eax,WORD PTR [rip+0x1915b]        # 0x140042628
   1400294cd:	mov    r9d,0x1
   1400294d3:	xor    r8d,r8d
   1400294d6:	dec    eax
   1400294d8:	xor    edx,edx
   1400294da:	cdqe   
   1400294dc:	imul   rbx,rax,0x58
   1400294e0:	mov    rax,QWORD PTR [rip+0x19139]        # 0x140042620
   1400294e7:	add    rbx,QWORD PTR [rip+0x1914a]        # 0x140042638
   1400294ee:	mov    QWORD PTR [rbx],rax
   1400294f1:	mov    DWORD PTR [rbx+0x8],esi
   1400294f4:	mov    rcx,QWORD PTR [rip+0x19125]        # 0x140042620
   1400294fb:	mov    rcx,QWORD PTR [rcx]
   1400294fe:	call   QWORD PTR [rip+0x5d14]        # 0x14002f218
   140029504:	mov    edi,eax
   140029506:	lea    ecx,[rax+0x1]
   140029509:	test   ecx,0xfffffffe
   14002950f:	jne    0x140029546
   140029511:	call   QWORD PTR [rip+0x5c49]        # 0x14002f160
   140029517:	cmp    eax,0x58
   14002951a:	jae    0x14002952a
   14002951c:	mov    ecx,eax
   14002951e:	lea    rax,[rip+0x7b7b]        # 0x1400310a0
   140029525:	mov    edx,DWORD PTR [rax+rcx*4]
   140029528:	jmp    0x14002952f
   14002952a:	mov    edx,0x106
   14002952f:	mov    DWORD PTR [rip+0x19b83],edx        # 0x1400430b8
   140029535:	mov    DWORD PTR [rip+0x19f89],0x2        # 0x1400434c8
   14002953f:	mov    BYTE PTR [rip+0x19e7a],r13b        # 0x1400433c0
   140029546:	mov    DWORD PTR [rbx+0xc],edi
   140029549:	movzx  eax,WORD PTR [rip+0x190d8]        # 0x140042628
   140029550:	mov    rcx,QWORD PTR [rip+0x190c1]        # 0x140042618
   140029557:	mov    WORD PTR [rip+0x190cc],ax        # 0x14004262a
   14002955e:	mov    rcx,QWORD PTR [rcx]
   140029561:	xor    r9d,r9d
   140029564:	xor    r8d,r8d
   140029567:	xor    edx,edx
   140029569:	call   QWORD PTR [rip+0x5ca9]        # 0x14002f218
   14002956f:	inc    eax
   140029571:	test   eax,0xfffffffe
   140029576:	jne    0x1400295ad
   140029578:	call   QWORD PTR [rip+0x5be2]        # 0x14002f160
   14002957e:	cmp    eax,0x58
   140029581:	jae    0x140029591
   140029583:	lea    rcx,[rip+0x7b16]        # 0x1400310a0
   14002958a:	mov    eax,eax
   14002958c:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002958f:	jmp    0x140029596
   140029591:	mov    ecx,0x106
   140029596:	mov    DWORD PTR [rip+0x19b1c],ecx        # 0x1400430b8
   14002959c:	mov    DWORD PTR [rip+0x19f22],0x2        # 0x1400434c8
   1400295a6:	mov    BYTE PTR [rip+0x19e13],r13b        # 0x1400433c0
   1400295ad:	movzx  ebx,WORD PTR [rip+0x19076]        # 0x14004262a
   1400295b4:	mov    ecx,0x4b0
   1400295b9:	lea    eax,[rbx+0x14]
   1400295bc:	movzx  r13d,ax
   1400295c0:	cmp    ax,cx
   1400295c3:	jbe    0x1400295c9
   1400295c5:	movzx  r13d,cx
   1400295c9:	cmp    DWORD PTR [rbp-0x15],0x0
   1400295cd:	mov    esi,DWORD PTR [rbp+0x6f]
   1400295d0:	mov    edi,0xff00
   1400295d5:	mov    edx,0x0
   1400295da:	mov    r8d,0x2a80
   1400295e0:	je     0x140029152
   1400295e6:	jmp    0x1400295ef
   1400295e8:	movzx  ebx,WORD PTR [rip+0x1903b]        # 0x14004262a
   1400295ef:	cmp    esi,r12d
   1400295f2:	je     0x140029705
   1400295f8:	xor    edx,edx
   1400295fa:	jmp    0x14002914c
   1400295ff:	mov    rcx,rbx
   140029602:	call   0x140027b70
   140029607:	mov    eax,0xffff
   14002960c:	mov    DWORD PTR [rbp-0x15],0xb
   140029613:	add    WORD PTR [rip+0x19010],ax        # 0x14004262a
   14002961a:	mov    r15,QWORD PTR [rbp+0x67]
   14002961e:	mov    rbx,QWORD PTR [rbp-0x1]
   140029622:	mov    rdi,QWORD PTR [rbp+0x7]
   140029626:	mov    rdx,rbx
   140029629:	mov    rcx,rdi
   14002962c:	call   0x140027be0
   140029631:	mov    rax,QWORD PTR [rbp+0x77]
   140029635:	movzx  edx,WORD PTR [rbp+0x7f]
   140029639:	lea    r8,[rbp-0x15]
   14002963d:	mov    rcx,r15
   140029640:	call   QWORD PTR [rax+0x20]
   140029643:	mov    rcx,QWORD PTR [rip+0x18fbe]        # 0x140042608
   14002964a:	mov    r15,QWORD PTR [rsp+0x68]
   14002964f:	mov    r14,QWORD PTR [rsp+0x70]
   140029654:	mov    r13,QWORD PTR [rsp+0x78]
   140029659:	mov    r12,QWORD PTR [rsp+0x80]
   140029661:	mov    rsi,QWORD PTR [rsp+0x88]
   140029669:	test   rcx,rcx
   14002966c:	je     0x140029674
   14002966e:	call   QWORD PTR [rip+0x5e0c]        # 0x14002f480
   140029674:	mov    rcx,QWORD PTR [rip+0x18f95]        # 0x140042610
   14002967b:	test   rcx,rcx
   14002967e:	je     0x140029686
   140029680:	call   QWORD PTR [rip+0x5dfa]        # 0x14002f480
   140029686:	mov    rcx,rdi
   140029689:	call   QWORD PTR [rip+0x5df1]        # 0x14002f480
   14002968f:	mov    rcx,rbx
   140029692:	call   QWORD PTR [rip+0x5de8]        # 0x14002f480
   140029698:	mov    eax,DWORD PTR [rbp-0x15]
   14002969b:	add    rsp,0x90
   1400296a2:	pop    rdi
   1400296a3:	pop    rbx
   1400296a4:	pop    rbp
   1400296a5:	ret    
   1400296a6:	test   r14,r14
   1400296a9:	je     0x1400296bd
   1400296ab:	mov    rcx,r14
   1400296ae:	call   QWORD PTR [rip+0x5dcc]        # 0x14002f480
   1400296b4:	xor    r13d,r13d
   1400296b7:	mov    QWORD PTR [rbx+0x30],r13
   1400296bb:	jmp    0x1400296c0
   1400296bd:	xor    r13d,r13d
   1400296c0:	mov    rcx,QWORD PTR [rbx+0x28]
   1400296c4:	test   rcx,rcx
   1400296c7:	je     0x1400296d3
   1400296c9:	call   QWORD PTR [rip+0x5db1]        # 0x14002f480
   1400296cf:	mov    QWORD PTR [rbx+0x28],r13
   1400296d3:	mov    rcx,QWORD PTR [rbx+0x48]
   1400296d7:	test   rcx,rcx
   1400296da:	je     0x1400296e6
   1400296dc:	call   QWORD PTR [rip+0x5d9e]        # 0x14002f480
   1400296e2:	mov    QWORD PTR [rbx+0x48],r13
   1400296e6:	mov    rcx,QWORD PTR [rbx+0x40]
   1400296ea:	test   rcx,rcx
   1400296ed:	je     0x1400296f9
   1400296ef:	call   QWORD PTR [rip+0x5d8b]        # 0x14002f480
   1400296f5:	mov    QWORD PTR [rbx+0x40],r13
   1400296f9:	mov    DWORD PTR [rbp-0x15],0x5
   140029700:	jmp    0x14002961a
   140029705:	cmp    DWORD PTR [rbp-0x15],0x0
   140029709:	jne    0x14002961e
   14002970f:	mov    eax,DWORD PTR [rbp-0x9]
   140029712:	test   eax,eax
   140029714:	je     0x14002961e
   14002971a:	movzx  r8d,WORD PTR [rbp+0x7f]
   14002971f:	xor    r9d,r9d
   140029722:	lea    rax,[rbp-0x15]
   140029726:	mov    QWORD PTR [rsp+0x28],rax
   14002972b:	cmp    r14d,edi
   14002972e:	mov    WORD PTR [rsp+0x20],bx
   140029733:	cmovb  di,r14w
   140029738:	movzx  edx,di
   14002973b:	call   0x140028730
   140029740:	cmp    DWORD PTR [rbp-0x15],0x0
   140029744:	jne    0x14002961e
   14002974a:	movzx  r9d,WORD PTR [rip+0x18ed8]        # 0x14004262a
   140029752:	lea    rax,[rbp-0x15]
   140029756:	xor    r8d,r8d
   140029759:	xor    edx,edx
   14002975b:	mov    rcx,r15
   14002975e:	mov    QWORD PTR [rsp+0x20],rax
   140029763:	call   0x140028c70
   140029768:	jmp    0x14002961e
   14002976d:	int3   
   14002976e:	int3   
   14002976f:	int3   
   140029770:	mov    QWORD PTR [rsp+0x8],rbx
   140029775:	mov    QWORD PTR [rsp+0x10],rsi
   14002977a:	push   rdi
   14002977b:	sub    rsp,0x20
   14002977f:	mov    rbx,rcx
   140029782:	mov    rcx,QWORD PTR [rcx+0x8]
   140029786:	movzx  edi,r8w
   14002978a:	mov    rsi,rdx
   14002978d:	xor    r8d,r8d
   140029790:	mov    edx,r9d
   140029793:	call   0x14002ad10
   140029798:	test   eax,eax
   14002979a:	js     0x14002980c
   14002979c:	cmp    WORD PTR [rip+0x15ff0],0x0        # 0x14003f794
   1400297a4:	je     0x14002981e
   1400297a6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400297aa:	call   0x14001bd30
   1400297af:	test   ax,ax
   1400297b2:	je     0x14002981e
   1400297b4:	movzx  r8d,WORD PTR [rip+0x156a0]        # 0x14003ee5c
   1400297bc:	movzx  ecx,WORD PTR [rip+0x1569d]        # 0x14003ee60
   1400297c3:	mov    eax,0x51eb851f
   1400297c8:	mov    WORD PTR [rip+0x149d4],r8w        # 0x14003e1a4
   1400297d0:	imul   ecx,r8d
   1400297d4:	imul   ecx
   1400297d6:	mov    ecx,edx
   1400297d8:	lea    rdx,[rip+0x149d1]        # 0x14003e1b0
   1400297df:	sar    ecx,0x5
   1400297e2:	mov    eax,ecx
   1400297e4:	shr    eax,0x1f
   1400297e7:	add    ecx,eax
   1400297e9:	add    cx,WORD PTR [rip+0x15658]        # 0x14003ee48
   1400297f0:	mov    WORD PTR [rip+0x15659],cx        # 0x14003ee50
   1400297f7:	call   QWORD PTR [rip+0x182ab]        # 0x140041aa8
   1400297fd:	test   ax,ax
   140029800:	je     0x14002981e
   140029802:	or     eax,0xffffffff
   140029805:	mov    WORD PTR [rip+0x15f88],ax        # 0x14003f794
   14002980c:	xor    eax,eax
   14002980e:	mov    rbx,QWORD PTR [rsp+0x30]
   140029813:	mov    rsi,QWORD PTR [rsp+0x38]
   140029818:	add    rsp,0x20
   14002981c:	pop    rdi
   14002981d:	ret    
   14002981e:	mov    rcx,QWORD PTR [rbx+0x8]
   140029822:	movzx  r8d,di
   140029826:	mov    rdx,rsi
   140029829:	call   0x14002a8c0
   14002982e:	mov    rcx,QWORD PTR [rsp+0x50]
   140029833:	mov    WORD PTR [rcx],ax
   140029836:	mov    edx,eax
   140029838:	test   ax,ax
   14002983b:	je     0x14002980c
   14002983d:	mov    rsi,QWORD PTR [rsp+0x38]
   140029842:	xor    eax,eax
   140029844:	cmp    dx,di
   140029847:	setne  al
   14002984a:	mov    DWORD PTR [rbx+0x4],eax
   14002984d:	mov    rbx,QWORD PTR [rsp+0x30]
   140029852:	mov    eax,0x1
   140029857:	add    rsp,0x20
   14002985b:	pop    rdi
   14002985c:	ret    
   14002985d:	int3   
   14002985e:	int3   
   14002985f:	int3   
   140029860:	mov    QWORD PTR [rsp+0x8],rbx
   140029865:	mov    QWORD PTR [rsp+0x10],rsi
   14002986a:	mov    QWORD PTR [rsp+0x18],rdi
   14002986f:	xor    esi,esi
   140029871:	movzx  ebx,r8w
   140029875:	mov    rdi,rcx
   140029878:	mov    r10d,esi
   14002987b:	mov    r11d,esi
   14002987e:	movzx  eax,si
   140029881:	test   rbx,rbx
   140029884:	je     0x1400298ba
   140029886:	mov    r8d,esi
   140029889:	nop    DWORD PTR [rax+0x0]
   140029890:	movzx  ecx,WORD PTR [r8+rdx*1]
   140029895:	cmp    cx,0xa
   140029899:	jne    0x1400298df
   14002989b:	mov    r10d,0x1
   1400298a1:	test   r11d,r11d
   1400298a4:	je     0x1400298ab
   1400298a6:	test   r10d,r10d
   1400298a9:	jne    0x1400298ed
   1400298ab:	inc    ax
   1400298ae:	movzx  r8d,ax
   1400298b2:	add    r8,r8
   1400298b5:	cmp    r8,rbx
   1400298b8:	jb     0x140029890
   1400298ba:	mov    rcx,QWORD PTR [rsp+0x28]
   1400298bf:	mov    WORD PTR [rcx],si
   1400298c2:	cmp    DWORD PTR [rdi+0x4],esi
   1400298c5:	je     0x1400298cd
   1400298c7:	add    ax,ax
   1400298ca:	mov    WORD PTR [rcx],ax
   1400298cd:	xor    eax,eax
   1400298cf:	mov    rbx,QWORD PTR [rsp+0x8]
   1400298d4:	mov    rsi,QWORD PTR [rsp+0x10]
   1400298d9:	mov    rdi,QWORD PTR [rsp+0x18]
   1400298de:	ret    
   1400298df:	cmp    cx,0xd
   1400298e3:	jne    0x1400298a1
   1400298e5:	mov    r11d,0x1
   1400298eb:	jmp    0x1400298a6
   1400298ed:	mov    rbx,QWORD PTR [rsp+0x8]
   1400298f2:	mov    rdi,QWORD PTR [rsp+0x18]
   1400298f7:	movzx  ecx,ax
   1400298fa:	mov    WORD PTR [rdx+rcx*2-0x2],si
   1400298ff:	mov    rcx,QWORD PTR [rsp+0x28]
   140029904:	mov    rsi,QWORD PTR [rsp+0x10]
   140029909:	add    ax,ax
   14002990c:	mov    WORD PTR [r9],ax
   140029910:	add    ax,0x2
   140029914:	mov    WORD PTR [rcx],ax
   140029917:	mov    eax,0x1
   14002991c:	ret    
   14002991d:	int3   
   14002991e:	int3   
   14002991f:	int3   
   140029920:	mov    QWORD PTR [rsp+0x8],rbx
   140029925:	mov    QWORD PTR [rsp+0x10],rsi
   14002992a:	mov    QWORD PTR [rsp+0x18],rdi
   14002992f:	xor    ebx,ebx
   140029931:	mov    rdi,rdx
   140029934:	mov    rsi,rcx
   140029937:	mov    r10d,ebx
   14002993a:	mov    r11d,ebx
   14002993d:	movzx  eax,bx
   140029940:	cmp    bx,r8w
   140029944:	jae    0x140029975
   140029946:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029950:	movzx  ecx,ax
   140029953:	movzx  edx,BYTE PTR [rcx+rdi*1]
   140029957:	cmp    dl,0xa
   14002995a:	jne    0x140029999
   14002995c:	mov    r10d,0x1
   140029962:	test   r11d,r11d
   140029965:	je     0x14002996c
   140029967:	test   r10d,r10d
   14002996a:	jne    0x1400299a6
   14002996c:	inc    ax
   14002996f:	cmp    ax,r8w
   140029973:	jb     0x140029950
   140029975:	mov    rcx,QWORD PTR [rsp+0x28]
   14002997a:	mov    WORD PTR [rcx],bx
   14002997d:	cmp    DWORD PTR [rsi+0x4],ebx
   140029980:	cmovne bx,ax
   140029984:	xor    eax,eax
   140029986:	mov    WORD PTR [rcx],bx
   140029989:	mov    rbx,QWORD PTR [rsp+0x8]
   14002998e:	mov    rsi,QWORD PTR [rsp+0x10]
   140029993:	mov    rdi,QWORD PTR [rsp+0x18]
   140029998:	ret    
   140029999:	cmp    dl,0xd
   14002999c:	jne    0x140029962
   14002999e:	mov    r11d,0x1
   1400299a4:	jmp    0x140029967
   1400299a6:	mov    rsi,QWORD PTR [rsp+0x10]
   1400299ab:	movzx  ecx,ax
   1400299ae:	mov    BYTE PTR [rcx+rdi*1-0x1],bl
   1400299b2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400299b7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400299bc:	mov    rdi,QWORD PTR [rsp+0x18]
   1400299c1:	mov    WORD PTR [r9],ax
   1400299c5:	inc    ax
   1400299c8:	mov    WORD PTR [rcx],ax
   1400299cb:	mov    eax,0x1
   1400299d0:	ret    
   1400299d1:	int3   
   1400299d2:	int3   
   1400299d3:	int3   
   1400299d4:	int3   
   1400299d5:	int3   
   1400299d6:	int3   
   1400299d7:	int3   
   1400299d8:	int3   
   1400299d9:	int3   
   1400299da:	int3   
   1400299db:	int3   
   1400299dc:	int3   
   1400299dd:	int3   
   1400299de:	int3   
   1400299df:	int3   
   1400299e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400299e5:	push   rdi
   1400299e6:	sub    rsp,0x20
   1400299ea:	mov    rdi,rcx
   1400299ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400299f1:	mov    ebx,0xfffe
   1400299f6:	add    ebx,r8d
   1400299f9:	movzx  r8d,bx
   1400299fd:	call   0x1400279f0
   140029a02:	cmp    ax,bx
   140029a05:	jne    0x140029a33
   140029a07:	mov    rcx,QWORD PTR [rdi+0x10]
   140029a0b:	lea    rdx,[rip+0x12982]        # 0x14003c394
   140029a12:	mov    r8d,0x4
   140029a18:	call   0x1400279f0
   140029a1d:	cmp    ax,0x4
   140029a21:	jne    0x140029a33
   140029a23:	mov    eax,0x1
   140029a28:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a2d:	add    rsp,0x20
   140029a31:	pop    rdi
   140029a32:	ret    
   140029a33:	xor    eax,eax
   140029a35:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a3a:	add    rsp,0x20
   140029a3e:	pop    rdi
   140029a3f:	ret    
   140029a40:	mov    QWORD PTR [rsp+0x8],rbx
   140029a45:	push   rdi
   140029a46:	sub    rsp,0x20
   140029a4a:	mov    rdi,rcx
   140029a4d:	mov    rcx,QWORD PTR [rcx+0x10]
   140029a51:	mov    ebx,0xffff
   140029a56:	add    ebx,r8d
   140029a59:	movzx  r8d,bx
   140029a5d:	call   0x1400279f0
   140029a62:	cmp    ax,bx
   140029a65:	jne    0x140029a93
   140029a67:	mov    rcx,QWORD PTR [rdi+0x10]
   140029a6b:	lea    rdx,[rip+0x129ba]        # 0x14003c42c
   140029a72:	mov    r8d,0x2
   140029a78:	call   0x1400279f0
   140029a7d:	cmp    ax,0x2
   140029a81:	jne    0x140029a93
   140029a83:	mov    eax,0x1
   140029a88:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a8d:	add    rsp,0x20
   140029a91:	pop    rdi
   140029a92:	ret    
   140029a93:	xor    eax,eax
   140029a95:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a9a:	add    rsp,0x20
   140029a9e:	pop    rdi
   140029a9f:	ret    
   140029aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140029aa5:	push   rdi
   140029aa6:	sub    rsp,0x20
   140029aaa:	cmp    DWORD PTR [r8],0x0
   140029aae:	mov    rdi,r8
   140029ab1:	mov    rbx,rcx
   140029ab4:	jne    0x140029aeb
   140029ab6:	movzx  r8d,WORD PTR [rip+0x181da]        # 0x140041c98
   140029abe:	mov    rdx,QWORD PTR [rip+0x18b4b]        # 0x140042610
   140029ac5:	mov    rcx,QWORD PTR [rcx+0x10]
   140029ac9:	call   0x14002a820
   140029ace:	movzx  edx,WORD PTR [rip+0x181c3]        # 0x140041c98
   140029ad5:	cmp    eax,edx
   140029ad7:	je     0x140029ae0
   140029ad9:	mov    eax,0x4
   140029ade:	jmp    0x140029ae9
   140029ae0:	xor    eax,eax
   140029ae2:	mov    WORD PTR [rip+0x181af],ax        # 0x140041c98
   140029ae9:	mov    DWORD PTR [rdi],eax
   140029aeb:	mov    rcx,QWORD PTR [rbx+0x8]
   140029aef:	test   rcx,rcx
   140029af2:	je     0x140029af9
   140029af4:	call   0x14002a9e0
   140029af9:	mov    rcx,QWORD PTR [rbx+0x10]
   140029afd:	test   rcx,rcx
   140029b00:	je     0x140029b07
   140029b02:	call   0x14002a9e0
   140029b07:	mov    rbx,QWORD PTR [rsp+0x30]
   140029b0c:	add    rsp,0x20
   140029b10:	pop    rdi
   140029b11:	ret    
   140029b12:	int3   
   140029b13:	int3   
   140029b14:	int3   
   140029b15:	int3   
   140029b16:	int3   
   140029b17:	int3   
   140029b18:	int3   
   140029b19:	int3   
   140029b1a:	int3   
   140029b1b:	int3   
   140029b1c:	int3   
   140029b1d:	int3   
   140029b1e:	int3   
   140029b1f:	int3   
   140029b20:	mov    QWORD PTR [rsp+0x8],rbx
   140029b25:	mov    QWORD PTR [rsp+0x20],rbp
   140029b2a:	push   rsi
   140029b2b:	push   rdi
   140029b2c:	push   r12
   140029b2e:	push   r13
   140029b30:	push   r14
   140029b32:	push   r15
   140029b34:	movzx  edi,BYTE PTR [rip+0x12775]        # 0x14003c2b0
   140029b3b:	xor    r13d,r13d
   140029b3e:	mov    rbp,r8
   140029b41:	mov    r14,rdx
   140029b44:	mov    r15,rcx
   140029b47:	lea    r12,[rip+0x12762]        # 0x14003c2b0
   140029b4e:	movzx  ebx,r13w
   140029b52:	nop    DWORD PTR [rax+0x0]
   140029b56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029b60:	movzx  eax,bx
   140029b63:	lea    r11,[rax+r14*1]
   140029b67:	lea    r9,[rax+rbp*1]
   140029b6b:	movzx  esi,BYTE PTR [r11]
   140029b6f:	cmp    sil,BYTE PTR [r9]
   140029b72:	jne    0x140029b83
   140029b74:	movzx  eax,BYTE PTR [r9+0x1]
   140029b79:	cmp    BYTE PTR [r11+0x1],al
   140029b7d:	je     0x140029c66
   140029b83:	movzx  r8d,WORD PTR [r11]
   140029b87:	movzx  r10d,WORD PTR [r9]
   140029b8b:	mov    rcx,r12
   140029b8e:	mov    WORD PTR [rsp+0x40],r8w
   140029b94:	mov    WORD PTR [rsp+0x48],r10w
   140029b9a:	cmp    dil,0xff
   140029b9e:	je     0x140029bc0
   140029ba0:	movzx  edx,BYTE PTR [rsp+0x41]
   140029ba5:	movzx  eax,dil
   140029ba9:	nop    DWORD PTR [rax+0x0]
   140029bb0:	cmp    al,dl
   140029bb2:	je     0x140029bc0
   140029bb4:	movzx  eax,BYTE PTR [rcx+0x10]
   140029bb8:	add    rcx,0x10
   140029bbc:	cmp    al,0xff
   140029bbe:	jne    0x140029bb0
   140029bc0:	mov    rdx,QWORD PTR [rcx+0x8]
   140029bc4:	test   rdx,rdx
   140029bc7:	je     0x140029bed
   140029bc9:	movzx  ecx,BYTE PTR [rdx]
   140029bcc:	cmp    r8b,cl
   140029bcf:	jb     0x140029bed
   140029bd1:	movzx  eax,r8b
   140029bd5:	sub    al,cl
   140029bd7:	cmp    al,BYTE PTR [rdx+0x1]
   140029bda:	ja     0x140029bed
   140029bdc:	movzx  eax,al
   140029bdf:	add    eax,0x2
   140029be2:	cdqe   
   140029be4:	add    rdx,rax
   140029be7:	movzx  r9d,BYTE PTR [rdx]
   140029beb:	jmp    0x140029bf0
   140029bed:	mov    r9b,0xff
   140029bf0:	mov    rcx,r12
   140029bf3:	cmp    dil,0xff
   140029bf7:	je     0x140029c12
   140029bf9:	movzx  edx,BYTE PTR [rsp+0x49]
   140029bfe:	movzx  eax,dil
   140029c02:	cmp    al,dl
   140029c04:	je     0x140029c12
   140029c06:	movzx  eax,BYTE PTR [rcx+0x10]
   140029c0a:	add    rcx,0x10
   140029c0e:	cmp    al,0xff
   140029c10:	jne    0x140029c02
   140029c12:	mov    rdx,QWORD PTR [rcx+0x8]
   140029c16:	test   rdx,rdx
   140029c19:	je     0x140029c3e
   140029c1b:	movzx  ecx,BYTE PTR [rdx]
   140029c1e:	cmp    r10b,cl
   140029c21:	jb     0x140029c3e
   140029c23:	movzx  eax,r10b
   140029c27:	sub    al,cl
   140029c29:	cmp    al,BYTE PTR [rdx+0x1]
   140029c2c:	ja     0x140029c3e
   140029c2e:	movzx  eax,al
   140029c31:	add    eax,0x2
   140029c34:	cdqe   
   140029c36:	add    rdx,rax
   140029c39:	movzx  eax,BYTE PTR [rdx]
   140029c3c:	jmp    0x140029c40
   140029c3e:	mov    al,0xff
   140029c40:	cmp    r9b,0xff
   140029c44:	je     0x140029c8f
   140029c46:	cmp    al,0xff
   140029c48:	je     0x140029c8f
   140029c4a:	movzx  eax,al
   140029c4d:	movzx  ecx,r9b
   140029c51:	sub    cx,ax
   140029c54:	jne    0x140029c80
   140029c56:	cmp    r8w,r10w
   140029c5a:	je     0x140029c66
   140029c5c:	movzx  ecx,r8w
   140029c60:	sub    cx,r10w
   140029c64:	jne    0x140029c80
   140029c66:	test   sil,sil
   140029c69:	jne    0x140029c71
   140029c6b:	cmp    BYTE PTR [r11+0x1],r13b
   140029c6f:	je     0x140029c7a
   140029c71:	add    bx,0x2
   140029c75:	jmp    0x140029b60
   140029c7a:	movzx  eax,r13w
   140029c7e:	jmp    0x140029cbd
   140029c80:	cmp    DWORD PTR [r15],r13d
   140029c83:	je     0x140029c8a
   140029c85:	movzx  eax,cx
   140029c88:	jmp    0x140029cbd
   140029c8a:	movsx  eax,cx
   140029c8d:	jmp    0x140029cbb
   140029c8f:	cmp    r9b,al
   140029c92:	jne    0x140029c9a
   140029c94:	sub    r8w,r10w
   140029c98:	jmp    0x140029cac
   140029c9a:	cmp    r9b,0xff
   140029c9e:	jne    0x140029ca6
   140029ca0:	or     r8d,0xffffffff
   140029ca4:	jmp    0x140029cac
   140029ca6:	mov    r8d,0x1
   140029cac:	cmp    DWORD PTR [r15],r13d
   140029caf:	je     0x140029cb7
   140029cb1:	movzx  eax,r8w
   140029cb5:	jmp    0x140029cbd
   140029cb7:	movsx  eax,r8w
   140029cbb:	neg    eax
   140029cbd:	mov    rbx,QWORD PTR [rsp+0x38]
   140029cc2:	mov    rbp,QWORD PTR [rsp+0x50]
   140029cc7:	pop    r15
   140029cc9:	pop    r14
   140029ccb:	pop    r13
   140029ccd:	pop    r12
   140029ccf:	pop    rdi
   140029cd0:	pop    rsi
   140029cd1:	ret    
   140029cd2:	int3   
   140029cd3:	int3   
   140029cd4:	int3   
   140029cd5:	int3   
   140029cd6:	int3   
   140029cd7:	int3   
   140029cd8:	int3   
   140029cd9:	int3   
   140029cda:	int3   
   140029cdb:	int3   
   140029cdc:	int3   
   140029cdd:	int3   
   140029cde:	int3   
   140029cdf:	int3   
   140029ce0:	cmp    DWORD PTR [rcx],0x0
   140029ce3:	movzx  eax,BYTE PTR [rdx]
   140029ce6:	je     0x140029d16
   140029ce8:	cmp    al,BYTE PTR [r8]
   140029ceb:	jne    0x140029d03
   140029ced:	nop    DWORD PTR [rax]
   140029cf0:	test   al,al
   140029cf2:	je     0x140029d10
   140029cf4:	movzx  eax,BYTE PTR [rdx+0x1]
   140029cf8:	inc    rdx
   140029cfb:	inc    r8
   140029cfe:	cmp    al,BYTE PTR [r8]
   140029d01:	je     0x140029cf0
   140029d03:	movzx  edx,BYTE PTR [rdx]
   140029d06:	movzx  ecx,BYTE PTR [r8]
   140029d0a:	sub    edx,ecx
   140029d0c:	movzx  eax,dx
   140029d0f:	ret    
   140029d10:	xor    edx,edx
   140029d12:	movzx  eax,dx
   140029d15:	ret    
   140029d16:	cmp    al,BYTE PTR [r8]
   140029d19:	jne    0x140029d33
   140029d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140029d20:	test   al,al
   140029d22:	je     0x140029d42
   140029d24:	movzx  eax,BYTE PTR [rdx+0x1]
   140029d28:	inc    rdx
   140029d2b:	inc    r8
   140029d2e:	cmp    al,BYTE PTR [r8]
   140029d31:	je     0x140029d20
   140029d33:	movzx  edx,BYTE PTR [rdx]
   140029d36:	movzx  eax,BYTE PTR [r8]
   140029d3a:	sub    edx,eax
   140029d3c:	neg    edx
   140029d3e:	movzx  eax,dx
   140029d41:	ret    
   140029d42:	xor    edx,edx
   140029d44:	neg    edx
   140029d46:	movzx  eax,dx
   140029d49:	ret    
   140029d4a:	int3   
   140029d4b:	int3   
   140029d4c:	int3   
   140029d4d:	int3   
   140029d4e:	int3   
   140029d4f:	int3   
   140029d50:	mov    QWORD PTR [rsp+0x10],rbx
   140029d55:	mov    QWORD PTR [rsp+0x18],rsi
   140029d5a:	push   rdi
   140029d5b:	sub    rsp,0x20
   140029d5f:	cmp    DWORD PTR [rcx],0x0
   140029d62:	mov    rsi,r8
   140029d65:	mov    rdi,rdx
   140029d68:	lea    rcx,[rdx+0x5]
   140029d6c:	lea    rax,[r8+0x5]
   140029d70:	je     0x140029da3
   140029d72:	movzx  r9d,BYTE PTR [rcx]
   140029d76:	cmp    r9b,BYTE PTR [rax]
   140029d79:	jne    0x140029d95
   140029d7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140029d80:	test   r9b,r9b
   140029d83:	je     0x140029d9f
   140029d85:	movzx  r9d,BYTE PTR [rcx+0x1]
   140029d8a:	inc    rcx
   140029d8d:	inc    rax
   140029d90:	cmp    r9b,BYTE PTR [rax]
   140029d93:	je     0x140029d80
   140029d95:	movzx  eax,BYTE PTR [rax]
   140029d98:	movzx  ebx,BYTE PTR [rcx]
   140029d9b:	sub    ebx,eax
   140029d9d:	jmp    0x140029dcc
   140029d9f:	xor    ebx,ebx
   140029da1:	jmp    0x140029dd0
   140029da3:	movzx  edx,BYTE PTR [rcx]
   140029da6:	cmp    dl,BYTE PTR [rax]
   140029da8:	jne    0x140029dc2
   140029daa:	nop    WORD PTR [rax+rax*1+0x0]
   140029db0:	test   dl,dl
   140029db2:	je     0x140029e21
   140029db4:	movzx  edx,BYTE PTR [rcx+0x1]
   140029db8:	inc    rcx
   140029dbb:	inc    rax
   140029dbe:	cmp    dl,BYTE PTR [rax]
   140029dc0:	je     0x140029db0
   140029dc2:	movzx  ebx,BYTE PTR [rcx]
   140029dc5:	movzx  eax,BYTE PTR [rax]
   140029dc8:	sub    ebx,eax
   140029dca:	neg    ebx
   140029dcc:	test   ebx,ebx
   140029dce:	jne    0x140029e0e
   140029dd0:	lea    r8,[rsp+0x48]
   140029dd5:	lea    rdx,[rip+0x7670]        # 0x14003144c
   140029ddc:	mov    rcx,rdi
   140029ddf:	call   QWORD PTR [rip+0x5663]        # 0x14002f448
   140029de5:	lea    r8,[rsp+0x30]
   140029dea:	lea    rdx,[rip+0x765b]        # 0x14003144c
   140029df1:	mov    rcx,rsi
   140029df4:	call   QWORD PTR [rip+0x564e]        # 0x14002f448
   140029dfa:	movzx  edx,WORD PTR [rsp+0x30]
   140029dff:	movzx  ecx,WORD PTR [rsp+0x48]
   140029e04:	add    edx,ecx
   140029e06:	mov    rcx,rdi
   140029e09:	call   0x14002a3a0
   140029e0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140029e13:	movzx  eax,bx
   140029e16:	mov    rbx,QWORD PTR [rsp+0x38]
   140029e1b:	add    rsp,0x20
   140029e1f:	pop    rdi
   140029e20:	ret    
   140029e21:	xor    ebx,ebx
   140029e23:	jmp    0x140029dca
   140029e25:	int3   
   140029e26:	int3   
   140029e27:	int3   
   140029e28:	int3   
   140029e29:	int3   
   140029e2a:	int3   
   140029e2b:	int3   
   140029e2c:	int3   
   140029e2d:	int3   
   140029e2e:	int3   
   140029e2f:	int3   
   140029e30:	rex push rdi
   140029e32:	push   r14
   140029e34:	push   r15
   140029e36:	sub    rsp,0x30
   140029e3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029e43:	mov    QWORD PTR [rsp+0x50],rbx
   140029e48:	mov    QWORD PTR [rsp+0x58],rbp
   140029e4d:	mov    QWORD PTR [rsp+0x60],rsi
   140029e52:	mov    r15,r9
   140029e55:	mov    rsi,rdx
   140029e58:	mov    r14,QWORD PTR [rsp+0x70]
   140029e5d:	mov    DWORD PTR [r14],0x1
   140029e64:	xor    edi,edi
   140029e66:	mov    QWORD PTR [r14+0x8],rdi
   140029e6a:	mov    QWORD PTR [r14+0x10],rdi
   140029e6e:	lea    rbp,[rip+0x187fb]        # 0x140042670
   140029e75:	mov    r8,rbp
   140029e78:	sub    rcx,rbp
   140029e7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140029e80:	movzx  eax,BYTE PTR [rcx+r8*1]
   140029e85:	mov    BYTE PTR [r8],al
   140029e88:	lea    r8,[r8+0x1]
   140029e8c:	test   al,al
   140029e8e:	jne    0x140029e80
   140029e90:	mov    ecx,0x10
   140029e95:	call   QWORD PTR [rip+0x5afd]        # 0x14002f998
   140029e9b:	mov    rbx,rax
   140029e9e:	mov    QWORD PTR [rsp+0x70],rax
   140029ea3:	test   rax,rax
   140029ea6:	je     0x140029ed9
   140029ea8:	mov    WORD PTR [rax],di
   140029eab:	mov    QWORD PTR [rax+0x8],rdi
   140029eaf:	mov    rcx,rbp
   140029eb2:	call   QWORD PTR [rip+0x53c8]        # 0x14002f280
   140029eb8:	test   eax,eax
   140029eba:	jle    0x140029edc
   140029ebc:	inc    eax
   140029ebe:	movsxd rcx,eax
   140029ec1:	call   QWORD PTR [rip+0x5ad1]        # 0x14002f998
   140029ec7:	mov    QWORD PTR [rbx+0x8],rax
   140029ecb:	mov    rdx,rbp
   140029ece:	mov    rcx,rax
   140029ed1:	call   QWORD PTR [rip+0x5381]        # 0x14002f258
   140029ed7:	jmp    0x140029edc
   140029ed9:	mov    rbx,rdi
   140029edc:	mov    edx,0x1
   140029ee1:	mov    rcx,rbx
   140029ee4:	call   0x14002ab70
   140029ee9:	mov    QWORD PTR [r14+0x8],rax
   140029eed:	test   rax,rax
   140029ef0:	je     0x140029f5f
   140029ef2:	xor    edx,edx
   140029ef4:	mov    rcx,QWORD PTR [rax]
   140029ef7:	call   QWORD PTR [rip+0x5323]        # 0x14002f220
   140029efd:	mov    DWORD PTR [r15],eax
   140029f00:	cmp    eax,0xffffffff
   140029f03:	je     0x140029f5f
   140029f05:	test   rbx,rbx
   140029f08:	je     0x140029f22
   140029f0a:	mov    rcx,QWORD PTR [rbx+0x8]
   140029f0e:	test   rcx,rcx
   140029f11:	je     0x140029f19
   140029f13:	call   QWORD PTR [rip+0x5c5f]        # 0x14002fb78
   140029f19:	mov    rcx,rbx
   140029f1c:	call   QWORD PTR [rip+0x5c56]        # 0x14002fb78
   140029f22:	mov    rdx,rbp
   140029f25:	sub    rsi,rbp
   140029f28:	nop    DWORD PTR [rax+rax*1+0x0]
   140029f30:	movzx  eax,BYTE PTR [rsi+rdx*1]
   140029f34:	mov    BYTE PTR [rdx],al
   140029f36:	lea    rdx,[rdx+0x1]
   140029f3a:	test   al,al
   140029f3c:	jne    0x140029f30
   140029f3e:	mov    rcx,rbp
   140029f41:	call   0x14002ae90
   140029f46:	mov    rbx,rax
   140029f49:	mov    edx,0xa
   140029f4e:	mov    rcx,rax
   140029f51:	call   0x14002ab70
   140029f56:	mov    QWORD PTR [r14+0x10],rax
   140029f5a:	test   rax,rax
   140029f5d:	jne    0x140029f64
   140029f5f:	mov    edi,0x2
   140029f64:	test   rbx,rbx
   140029f67:	je     0x140029f81
   140029f69:	mov    rcx,QWORD PTR [rbx+0x8]
   140029f6d:	test   rcx,rcx
   140029f70:	je     0x140029f78
   140029f72:	call   QWORD PTR [rip+0x5c00]        # 0x14002fb78
   140029f78:	mov    rcx,rbx
   140029f7b:	call   QWORD PTR [rip+0x5bf7]        # 0x14002fb78
   140029f81:	test   edi,edi
   140029f83:	je     0x140029fa3
   140029f85:	mov    rcx,QWORD PTR [r14+0x8]
   140029f89:	test   rcx,rcx
   140029f8c:	je     0x140029f93
   140029f8e:	call   0x14002a9e0
   140029f93:	mov    rcx,QWORD PTR [r14+0x10]
   140029f97:	test   rcx,rcx
   140029f9a:	je     0x140029fde
   140029f9c:	call   0x14002a9e0
   140029fa1:	jmp    0x140029fde
   140029fa3:	lea    rcx,[rip+0xfffffffffffff7c6]        # 0x140029770
   140029faa:	mov    rax,QWORD PTR [rsp+0x78]
   140029faf:	mov    QWORD PTR [rax],rcx
   140029fb2:	lea    rcx,[rip+0xfffffffffffff8a7]        # 0x140029860
   140029fb9:	mov    QWORD PTR [rax+0x8],rcx
   140029fbd:	lea    rcx,[rip+0xfffffffffffffb5c]        # 0x140029b20
   140029fc4:	mov    QWORD PTR [rax+0x10],rcx
   140029fc8:	lea    rcx,[rip+0xfffffffffffffa11]        # 0x1400299e0
   140029fcf:	mov    QWORD PTR [rax+0x18],rcx
   140029fd3:	lea    rcx,[rip+0xfffffffffffffac6]        # 0x140029aa0
   140029fda:	mov    QWORD PTR [rax+0x20],rcx
   140029fde:	mov    eax,edi
   140029fe0:	mov    rbx,QWORD PTR [rsp+0x50]
   140029fe5:	mov    rbp,QWORD PTR [rsp+0x58]
   140029fea:	mov    rsi,QWORD PTR [rsp+0x60]
   140029fef:	add    rsp,0x30
   140029ff3:	pop    r15
   140029ff5:	pop    r14
   140029ff7:	pop    rdi
   140029ff8:	ret    
   140029ff9:	int3   
   140029ffa:	int3   
   140029ffb:	int3   
   140029ffc:	int3   
   140029ffd:	int3   
   140029ffe:	int3   
   140029fff:	int3   
   14002a000:	mov    QWORD PTR [rsp+0x10],rdx
   14002a005:	push   rdi
   14002a006:	push   r14
   14002a008:	push   r15
   14002a00a:	sub    rsp,0x30
   14002a00e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a017:	mov    QWORD PTR [rsp+0x50],rbx
   14002a01c:	mov    QWORD PTR [rsp+0x60],rbp
   14002a021:	mov    QWORD PTR [rsp+0x68],rsi
   14002a026:	mov    r14,r9
   14002a029:	xor    edi,edi
   14002a02b:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a030:	mov    DWORD PTR [rsi],edi
   14002a032:	mov    QWORD PTR [rsi+0x8],rdi
   14002a036:	mov    QWORD PTR [rsi+0x10],rdi
   14002a03a:	mov    ecx,edi
   14002a03c:	lea    r15,[rip+0xfffffffffffd5fbd]        # 0x140000000
   14002a043:	lea    rbp,[rip+0x18626]        # 0x140042670
   14002a04a:	nop    WORD PTR [rax+rax*1+0x0]
   14002a050:	movzx  eax,BYTE PTR [rcx+r15*1+0x31430]
   14002a059:	mov    BYTE PTR [rcx+rbp*1],al
   14002a05c:	lea    rcx,[rcx+0x1]
   14002a060:	test   al,al
   14002a062:	jne    0x14002a050
   14002a064:	mov    ecx,0x10
   14002a069:	call   QWORD PTR [rip+0x5929]        # 0x14002f998
   14002a06f:	mov    rbx,rax
   14002a072:	mov    QWORD PTR [rsp+0x58],rax
   14002a077:	test   rax,rax
   14002a07a:	je     0x14002a0ad
   14002a07c:	mov    WORD PTR [rax],di
   14002a07f:	mov    QWORD PTR [rax+0x8],rdi
   14002a083:	mov    rcx,rbp
   14002a086:	call   QWORD PTR [rip+0x51f4]        # 0x14002f280
   14002a08c:	test   eax,eax
   14002a08e:	jle    0x14002a0b0
   14002a090:	inc    eax
   14002a092:	movsxd rcx,eax
   14002a095:	call   QWORD PTR [rip+0x58fd]        # 0x14002f998
   14002a09b:	mov    QWORD PTR [rbx+0x8],rax
   14002a09f:	mov    rdx,rbp
   14002a0a2:	mov    rcx,rax
   14002a0a5:	call   QWORD PTR [rip+0x51ad]        # 0x14002f258
   14002a0ab:	jmp    0x14002a0b0
   14002a0ad:	mov    rbx,rdi
   14002a0b0:	mov    edx,0x1
   14002a0b5:	mov    rcx,rbx
   14002a0b8:	call   0x14002ab70
   14002a0bd:	mov    QWORD PTR [rsi+0x8],rax
   14002a0c1:	test   rax,rax
   14002a0c4:	je     0x14002a135
   14002a0c6:	xor    edx,edx
   14002a0c8:	mov    rcx,QWORD PTR [rax]
   14002a0cb:	call   QWORD PTR [rip+0x514f]        # 0x14002f220
   14002a0d1:	mov    DWORD PTR [r14],eax
   14002a0d4:	cmp    eax,0xffffffff
   14002a0d7:	je     0x14002a135
   14002a0d9:	test   rbx,rbx
   14002a0dc:	je     0x14002a0f6
   14002a0de:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a0e2:	test   rcx,rcx
   14002a0e5:	je     0x14002a0ed
   14002a0e7:	call   QWORD PTR [rip+0x5a8b]        # 0x14002fb78
   14002a0ed:	mov    rcx,rbx
   14002a0f0:	call   QWORD PTR [rip+0x5a82]        # 0x14002fb78
   14002a0f6:	mov    rdx,rdi
   14002a0f9:	nop    DWORD PTR [rax+0x0]
   14002a100:	movzx  eax,BYTE PTR [rdx+r15*1+0x31440]
   14002a109:	mov    BYTE PTR [rdx+rbp*1],al
   14002a10c:	lea    rdx,[rdx+0x1]
   14002a110:	test   al,al
   14002a112:	jne    0x14002a100
   14002a114:	mov    rcx,rbp
   14002a117:	call   0x14002ae90
   14002a11c:	mov    rbx,rax
   14002a11f:	mov    edx,0xa
   14002a124:	mov    rcx,rax
   14002a127:	call   0x14002ab70
   14002a12c:	mov    QWORD PTR [rsi+0x10],rax
   14002a130:	test   rax,rax
   14002a133:	jne    0x14002a13a
   14002a135:	mov    edi,0x2
   14002a13a:	test   rbx,rbx
   14002a13d:	je     0x14002a157
   14002a13f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a143:	test   rcx,rcx
   14002a146:	je     0x14002a14e
   14002a148:	call   QWORD PTR [rip+0x5a2a]        # 0x14002fb78
   14002a14e:	mov    rcx,rbx
   14002a151:	call   QWORD PTR [rip+0x5a21]        # 0x14002fb78
   14002a157:	test   edi,edi
   14002a159:	je     0x14002a179
   14002a15b:	mov    rcx,QWORD PTR [rsi+0x8]
   14002a15f:	test   rcx,rcx
   14002a162:	je     0x14002a169
   14002a164:	call   0x14002a9e0
   14002a169:	mov    rcx,QWORD PTR [rsi+0x10]
   14002a16d:	test   rcx,rcx
   14002a170:	je     0x14002a1b4
   14002a172:	call   0x14002a9e0
   14002a177:	jmp    0x14002a1b4
   14002a179:	lea    rcx,[rip+0xfffffffffffff5f0]        # 0x140029770
   14002a180:	mov    rax,QWORD PTR [rsp+0x78]
   14002a185:	mov    QWORD PTR [rax],rcx
   14002a188:	lea    rcx,[rip+0xfffffffffffff791]        # 0x140029920
   14002a18f:	mov    QWORD PTR [rax+0x8],rcx
   14002a193:	lea    rcx,[rip+0xfffffffffffffb46]        # 0x140029ce0
   14002a19a:	mov    QWORD PTR [rax+0x10],rcx
   14002a19e:	lea    rcx,[rip+0xfffffffffffff89b]        # 0x140029a40
   14002a1a5:	mov    QWORD PTR [rax+0x18],rcx
   14002a1a9:	lea    rcx,[rip+0xfffffffffffff8f0]        # 0x140029aa0
   14002a1b0:	mov    QWORD PTR [rax+0x20],rcx
   14002a1b4:	mov    eax,edi
   14002a1b6:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a1bb:	mov    rbp,QWORD PTR [rsp+0x60]
   14002a1c0:	mov    rsi,QWORD PTR [rsp+0x68]
   14002a1c5:	add    rsp,0x30
   14002a1c9:	pop    r15
   14002a1cb:	pop    r14
   14002a1cd:	pop    rdi
   14002a1ce:	ret    
   14002a1cf:	int3   
   14002a1d0:	mov    QWORD PTR [rsp+0x10],rdx
   14002a1d5:	push   rdi
   14002a1d6:	push   r14
   14002a1d8:	push   r15
   14002a1da:	sub    rsp,0x30
   14002a1de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a1e7:	mov    QWORD PTR [rsp+0x50],rbx
   14002a1ec:	mov    QWORD PTR [rsp+0x60],rbp
   14002a1f1:	mov    QWORD PTR [rsp+0x68],rsi
   14002a1f6:	mov    r14,r9
   14002a1f9:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a1fe:	mov    DWORD PTR [rsi],0x1
   14002a204:	xor    edi,edi
   14002a206:	mov    QWORD PTR [rsi+0x8],rdi
   14002a20a:	mov    QWORD PTR [rsi+0x10],rdi
   14002a20e:	mov    ecx,edi
   14002a210:	lea    r15,[rip+0xfffffffffffd5de9]        # 0x140000000
   14002a217:	lea    rbp,[rip+0x18452]        # 0x140042670
   14002a21e:	xchg   ax,ax
   14002a220:	movzx  eax,BYTE PTR [rcx+r15*1+0x31400]
   14002a229:	mov    BYTE PTR [rcx+rbp*1],al
   14002a22c:	lea    rcx,[rcx+0x1]
   14002a230:	test   al,al
   14002a232:	jne    0x14002a220
   14002a234:	mov    ecx,0x10
   14002a239:	call   QWORD PTR [rip+0x5759]        # 0x14002f998
   14002a23f:	mov    rbx,rax
   14002a242:	mov    QWORD PTR [rsp+0x58],rax
   14002a247:	test   rax,rax
   14002a24a:	je     0x14002a27d
   14002a24c:	mov    WORD PTR [rax],di
   14002a24f:	mov    QWORD PTR [rax+0x8],rdi
   14002a253:	mov    rcx,rbp
   14002a256:	call   QWORD PTR [rip+0x5024]        # 0x14002f280
   14002a25c:	test   eax,eax
   14002a25e:	jle    0x14002a280
   14002a260:	inc    eax
   14002a262:	movsxd rcx,eax
   14002a265:	call   QWORD PTR [rip+0x572d]        # 0x14002f998
   14002a26b:	mov    QWORD PTR [rbx+0x8],rax
   14002a26f:	mov    rdx,rbp
   14002a272:	mov    rcx,rax
   14002a275:	call   QWORD PTR [rip+0x4fdd]        # 0x14002f258
   14002a27b:	jmp    0x14002a280
   14002a27d:	mov    rbx,rdi
   14002a280:	mov    edx,0x1
   14002a285:	mov    rcx,rbx
   14002a288:	call   0x14002ab70
   14002a28d:	mov    QWORD PTR [rsi+0x8],rax
   14002a291:	test   rax,rax
   14002a294:	je     0x14002a305
   14002a296:	xor    edx,edx
   14002a298:	mov    rcx,QWORD PTR [rax]
   14002a29b:	call   QWORD PTR [rip+0x4f7f]        # 0x14002f220
   14002a2a1:	mov    DWORD PTR [r14],eax
   14002a2a4:	cmp    eax,0xffffffff
   14002a2a7:	je     0x14002a305
   14002a2a9:	test   rbx,rbx
   14002a2ac:	je     0x14002a2c6
   14002a2ae:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a2b2:	test   rcx,rcx
   14002a2b5:	je     0x14002a2bd
   14002a2b7:	call   QWORD PTR [rip+0x58bb]        # 0x14002fb78
   14002a2bd:	mov    rcx,rbx
   14002a2c0:	call   QWORD PTR [rip+0x58b2]        # 0x14002fb78
   14002a2c6:	mov    rdx,rdi
   14002a2c9:	nop    DWORD PTR [rax+0x0]
   14002a2d0:	movzx  eax,BYTE PTR [rdx+r15*1+0x31430]
   14002a2d9:	mov    BYTE PTR [rdx+rbp*1],al
   14002a2dc:	lea    rdx,[rdx+0x1]
   14002a2e0:	test   al,al
   14002a2e2:	jne    0x14002a2d0
   14002a2e4:	mov    rcx,rbp
   14002a2e7:	call   0x14002ae90
   14002a2ec:	mov    rbx,rax
   14002a2ef:	mov    edx,0xa
   14002a2f4:	mov    rcx,rax
   14002a2f7:	call   0x14002ab70
   14002a2fc:	mov    QWORD PTR [rsi+0x10],rax
   14002a300:	test   rax,rax
   14002a303:	jne    0x14002a30a
   14002a305:	mov    edi,0x2
   14002a30a:	test   rbx,rbx
   14002a30d:	je     0x14002a327
   14002a30f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a313:	test   rcx,rcx
   14002a316:	je     0x14002a31e
   14002a318:	call   QWORD PTR [rip+0x585a]        # 0x14002fb78
   14002a31e:	mov    rcx,rbx
   14002a321:	call   QWORD PTR [rip+0x5851]        # 0x14002fb78
   14002a327:	test   edi,edi
   14002a329:	je     0x14002a349
   14002a32b:	mov    rcx,QWORD PTR [rsi+0x8]
   14002a32f:	test   rcx,rcx
   14002a332:	je     0x14002a339
   14002a334:	call   0x14002a9e0
   14002a339:	mov    rcx,QWORD PTR [rsi+0x10]
   14002a33d:	test   rcx,rcx
   14002a340:	je     0x14002a384
   14002a342:	call   0x14002a9e0
   14002a347:	jmp    0x14002a384
   14002a349:	lea    rcx,[rip+0xfffffffffffff420]        # 0x140029770
   14002a350:	mov    rax,QWORD PTR [rsp+0x78]
   14002a355:	mov    QWORD PTR [rax],rcx
   14002a358:	lea    rcx,[rip+0xfffffffffffff5c1]        # 0x140029920
   14002a35f:	mov    QWORD PTR [rax+0x8],rcx
   14002a363:	lea    rcx,[rip+0xfffffffffffff9e6]        # 0x140029d50
   14002a36a:	mov    QWORD PTR [rax+0x10],rcx
   14002a36e:	lea    rcx,[rip+0xfffffffffffff6cb]        # 0x140029a40
   14002a375:	mov    QWORD PTR [rax+0x18],rcx
   14002a379:	lea    rcx,[rip+0xfffffffffffff720]        # 0x140029aa0
   14002a380:	mov    QWORD PTR [rax+0x20],rcx
   14002a384:	mov    eax,edi
   14002a386:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a38b:	mov    rbp,QWORD PTR [rsp+0x60]
   14002a390:	mov    rsi,QWORD PTR [rsp+0x68]
   14002a395:	add    rsp,0x30
   14002a399:	pop    r15
   14002a39b:	pop    r14
   14002a39d:	pop    rdi
   14002a39e:	ret    
   14002a39f:	int3   
   14002a3a0:	rex push rdi
   14002a3a2:	sub    rsp,0x30
   14002a3a6:	mov    rax,QWORD PTR [rip+0x11c53]        # 0x14003c000
   14002a3ad:	xor    rax,rsp
   14002a3b0:	mov    QWORD PTR [rsp+0x28],rax
   14002a3b5:	mov    eax,0xffff
   14002a3ba:	mov    rdi,rcx
   14002a3bd:	cmp    edx,eax
   14002a3bf:	ja     0x14002a3c4
   14002a3c1:	movzx  eax,dx
   14002a3c4:	lea    rdx,[rip+0x7081]        # 0x14003144c
   14002a3cb:	lea    rcx,[rsp+0x20]
   14002a3d0:	movzx  r8d,ax
   14002a3d4:	call   QWORD PTR [rip+0x5076]        # 0x14002f450
   14002a3da:	lea    rdx,[rsp+0x20]
   14002a3df:	mov    ecx,0x4
   14002a3e4:	sub    rdx,rdi
   14002a3e7:	nop    WORD PTR [rax+rax*1+0x0]
   14002a3f0:	movzx  eax,BYTE PTR [rdx+rdi*1]
   14002a3f4:	inc    rdi
   14002a3f7:	dec    ecx
   14002a3f9:	mov    BYTE PTR [rdi-0x1],al
   14002a3fc:	test   al,al
   14002a3fe:	je     0x14002a417
   14002a400:	test   ecx,ecx
   14002a402:	jne    0x14002a3f0
   14002a404:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a409:	xor    rcx,rsp
   14002a40c:	call   0x14002c960
   14002a411:	add    rsp,0x30
   14002a415:	pop    rdi
   14002a416:	ret    
   14002a417:	test   ecx,ecx
   14002a419:	jle    0x14002a41f
   14002a41b:	xor    eax,eax
   14002a41d:	rep stos BYTE PTR es:[rdi],al
   14002a41f:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a424:	xor    rcx,rsp
   14002a427:	call   0x14002c960
   14002a42c:	add    rsp,0x30
   14002a430:	pop    rdi
   14002a431:	ret    
   14002a432:	int3   
   14002a433:	int3   
   14002a434:	int3   
   14002a435:	int3   
   14002a436:	int3   
   14002a437:	int3   
   14002a438:	int3   
   14002a439:	int3   
   14002a43a:	int3   
   14002a43b:	int3   
   14002a43c:	int3   
   14002a43d:	int3   
   14002a43e:	int3   
   14002a43f:	int3   
   14002a440:	mov    QWORD PTR [rsp+0x8],rbx
   14002a445:	mov    QWORD PTR [rsp+0x10],rbp
   14002a44a:	mov    QWORD PTR [rsp+0x18],rsi
   14002a44f:	mov    QWORD PTR [rsp+0x20],rdi
   14002a454:	push   r14
   14002a456:	movzx  r9d,BYTE PTR [rcx+0x1]
   14002a45b:	movzx  r8d,BYTE PTR [rcx]
   14002a45f:	xor    ebp,ebp
   14002a461:	test   r9b,r9b
   14002a464:	mov    rsi,rdx
   14002a467:	mov    edx,ebp
   14002a469:	setne  dl
   14002a46c:	test   r8b,r8b
   14002a46f:	mov    r14,rcx
   14002a472:	mov    rax,rcx
   14002a475:	mov    ecx,ebp
   14002a477:	setne  cl
   14002a47a:	or     edx,ecx
   14002a47c:	movzx  r10d,bp
   14002a480:	movzx  r11d,bp
   14002a484:	movzx  edi,bp
   14002a487:	movzx  ebx,bp
   14002a48a:	je     0x14002a532
   14002a490:	test   r11w,r11w
   14002a494:	jne    0x14002a4bf
   14002a496:	cmp    r8b,0x20
   14002a49a:	jne    0x14002a4a3
   14002a49c:	test   r9b,r9b
   14002a49f:	jne    0x14002a4b7
   14002a4a1:	jmp    0x14002a4f6
   14002a4a3:	cmp    r8b,0x2d
   14002a4a7:	jne    0x14002a4b7
   14002a4a9:	test   r9b,r9b
   14002a4ac:	jne    0x14002a4b7
   14002a4ae:	mov    ebx,0x1
   14002a4b3:	add    rax,0x2
   14002a4b7:	mov    r11d,0x1
   14002a4bd:	jmp    0x14002a4fa
   14002a4bf:	cmp    r11w,0x1
   14002a4c4:	jne    0x14002a4fa
   14002a4c6:	lea    ecx,[r8-0x30]
   14002a4ca:	cmp    cl,0x9
   14002a4cd:	ja     0x14002a51b
   14002a4cf:	test   r9b,r9b
   14002a4d2:	jne    0x14002a51b
   14002a4d4:	movzx  ecx,r10w
   14002a4d8:	mov    edi,0x1
   14002a4dd:	shl    cx,0x2
   14002a4e1:	add    r10w,cx
   14002a4e5:	movzx  ecx,r8b
   14002a4e9:	add    r10w,r10w
   14002a4ed:	sub    r10w,0x30
   14002a4f2:	add    r10w,cx
   14002a4f6:	add    rax,0x2
   14002a4fa:	movzx  r9d,BYTE PTR [rax+0x1]
   14002a4ff:	movzx  r8d,BYTE PTR [rax]
   14002a503:	mov    edx,ebp
   14002a505:	test   r9b,r9b
   14002a508:	mov    ecx,ebp
   14002a50a:	setne  dl
   14002a50d:	test   r8b,r8b
   14002a510:	setne  cl
   14002a513:	or     edx,ecx
   14002a515:	jne    0x14002a490
   14002a51b:	test   di,di
   14002a51e:	je     0x14002a532
   14002a520:	test   bx,bx
   14002a523:	je     0x14002a529
   14002a525:	neg    r10w
   14002a529:	mov    WORD PTR [rsi],r10w
   14002a52d:	sub    rax,r14
   14002a530:	jmp    0x14002a535
   14002a532:	movzx  eax,bp
   14002a535:	mov    rbx,QWORD PTR [rsp+0x10]
   14002a53a:	mov    rbp,QWORD PTR [rsp+0x18]
   14002a53f:	mov    rsi,QWORD PTR [rsp+0x20]
   14002a544:	mov    rdi,QWORD PTR [rsp+0x28]
   14002a549:	pop    r14
   14002a54b:	ret    
   14002a54c:	int3   
   14002a54d:	int3   
   14002a54e:	int3   
   14002a54f:	int3   
   14002a550:	mov    QWORD PTR [rsp+0x8],rbx
   14002a555:	mov    QWORD PTR [rsp+0x10],rbp
   14002a55a:	mov    QWORD PTR [rsp+0x18],rsi
   14002a55f:	mov    QWORD PTR [rsp+0x20],rdi
   14002a564:	push   r14
   14002a566:	movzx  r10d,BYTE PTR [rcx+0x1]
   14002a56b:	movzx  r9d,BYTE PTR [rcx]
   14002a56f:	xor    ebp,ebp
   14002a571:	test   r10b,r10b
   14002a574:	mov    r8d,ebp
   14002a577:	mov    rsi,rcx
   14002a57a:	setne  r8b
   14002a57e:	test   r9b,r9b
   14002a581:	mov    rax,rcx
   14002a584:	mov    ecx,ebp
   14002a586:	setne  cl
   14002a589:	mov    r14,rdx
   14002a58c:	or     r8d,ecx
   14002a58f:	movzx  r11d,bp
   14002a593:	movzx  ebx,bp
   14002a596:	movzx  edi,bp
   14002a599:	je     0x14002a61c
   14002a59f:	nop
   14002a5a0:	test   bx,bx
   14002a5a3:	jne    0x14002a5b7
   14002a5a5:	cmp    r9b,0x20
   14002a5a9:	jne    0x14002a5b0
   14002a5ab:	test   r10b,r10b
   14002a5ae:	je     0x14002a5ed
   14002a5b0:	mov    ebx,0x1
   14002a5b5:	jmp    0x14002a5f1
   14002a5b7:	cmp    bx,0x1
   14002a5bb:	jne    0x14002a5f1
   14002a5bd:	lea    ecx,[r9-0x30]
   14002a5c1:	cmp    cl,0x9
   14002a5c4:	ja     0x14002a60e
   14002a5c6:	test   r10b,r10b
   14002a5c9:	jne    0x14002a60e
   14002a5cb:	movzx  ecx,r11w
   14002a5cf:	mov    edi,0x1
   14002a5d4:	shl    cx,0x2
   14002a5d8:	add    r11w,cx
   14002a5dc:	movzx  ecx,r9b
   14002a5e0:	add    r11w,r11w
   14002a5e4:	sub    r11w,0x30
   14002a5e9:	add    r11w,cx
   14002a5ed:	add    rax,0x2
   14002a5f1:	movzx  r10d,BYTE PTR [rax+0x1]
   14002a5f6:	movzx  r9d,BYTE PTR [rax]
   14002a5fa:	mov    edx,ebp
   14002a5fc:	test   r10b,r10b
   14002a5ff:	mov    ecx,ebp
   14002a601:	setne  dl
   14002a604:	test   r9b,r9b
   14002a607:	setne  cl
   14002a60a:	or     edx,ecx
   14002a60c:	jne    0x14002a5a0
   14002a60e:	test   di,di
   14002a611:	je     0x14002a61c
   14002a613:	mov    WORD PTR [r14],r11w
   14002a617:	sub    rax,rsi
   14002a61a:	jmp    0x14002a61f
   14002a61c:	movzx  eax,bp
   14002a61f:	mov    rbx,QWORD PTR [rsp+0x10]
   14002a624:	mov    rbp,QWORD PTR [rsp+0x18]
   14002a629:	mov    rsi,QWORD PTR [rsp+0x20]
   14002a62e:	mov    rdi,QWORD PTR [rsp+0x28]
   14002a633:	pop    r14
   14002a635:	ret    
   14002a636:	int3   
   14002a637:	int3   
   14002a638:	int3   
   14002a639:	int3   
   14002a63a:	int3   
   14002a63b:	int3   
   14002a63c:	int3   
   14002a63d:	int3   
   14002a63e:	int3   
   14002a63f:	int3   
   14002a640:	rex push rbx
   14002a642:	push   rbp
   14002a643:	push   rsi
   14002a644:	push   r14
   14002a646:	sub    rsp,0x48
   14002a64a:	xor    esi,esi
   14002a64c:	mov    r14,r8
   14002a64f:	movzx  ebp,dx
   14002a652:	mov    rbx,rcx
   14002a655:	test   r8,r8
   14002a658:	jne    0x14002a667
   14002a65a:	movzx  eax,si
   14002a65d:	add    rsp,0x48
   14002a661:	pop    r14
   14002a663:	pop    rsi
   14002a664:	pop    rbp
   14002a665:	pop    rbx
   14002a666:	ret    
   14002a667:	mov    QWORD PTR [rsp+0x70],rdi
   14002a66c:	mov    QWORD PTR [rsp+0x78],r12
   14002a671:	mov    QWORD PTR [rsp+0x40],r15
   14002a676:	movzx  edi,si
   14002a679:	cmp    si,bp
   14002a67c:	jge    0x14002a7b8
   14002a682:	lea    r15,[rip+0x6a17]        # 0x1400310a0
   14002a689:	mov    r12d,0xd
   14002a68f:	nop
   14002a690:	mov    rcx,QWORD PTR [r14]
   14002a693:	lea    r9,[rsp+0x88]
   14002a69b:	lea    rdx,[rsp+0x80]
   14002a6a3:	mov    r8d,0x2
   14002a6a9:	mov    QWORD PTR [rsp+0x20],rsi
   14002a6ae:	call   QWORD PTR [rip+0x4b54]        # 0x14002f208
   14002a6b4:	test   eax,eax
   14002a6b6:	jne    0x14002a6e7
   14002a6b8:	call   QWORD PTR [rip+0x4aa2]        # 0x14002f160
   14002a6be:	cmp    eax,0x58
   14002a6c1:	jae    0x14002a6cb
   14002a6c3:	mov    eax,eax
   14002a6c5:	mov    ecx,DWORD PTR [r15+rax*4]
   14002a6c9:	jmp    0x14002a6d0
   14002a6cb:	mov    ecx,0x106
   14002a6d0:	mov    DWORD PTR [rip+0x189e2],ecx        # 0x1400430b8
   14002a6d6:	mov    DWORD PTR [rip+0x18de8],0x2        # 0x1400434c8
   14002a6e0:	mov    BYTE PTR [rip+0x18cd9],sil        # 0x1400433c0
   14002a6e7:	mov    eax,DWORD PTR [rsp+0x88]
   14002a6ee:	not    BYTE PTR [rsp+0x80]
   14002a6f5:	not    BYTE PTR [rsp+0x81]
   14002a6fc:	cmp    ax,0x2
   14002a700:	jne    0x14002a800
   14002a706:	movzx  eax,WORD PTR [rsp+0x80]
   14002a70e:	cmp    ax,r12w
   14002a712:	jne    0x14002a7a4
   14002a718:	mov    WORD PTR [rbx],r12w
   14002a71c:	mov    rcx,QWORD PTR [r14]
   14002a71f:	lea    r9,[rsp+0x30]
   14002a724:	lea    rdx,[rsp+0x80]
   14002a72c:	mov    r8d,0x2
   14002a732:	mov    QWORD PTR [rsp+0x20],rsi
   14002a737:	call   QWORD PTR [rip+0x4acb]        # 0x14002f208
   14002a73d:	test   eax,eax
   14002a73f:	jne    0x14002a770
   14002a741:	call   QWORD PTR [rip+0x4a19]        # 0x14002f160
   14002a747:	cmp    eax,0x58
   14002a74a:	jae    0x14002a754
   14002a74c:	mov    eax,eax
   14002a74e:	mov    ecx,DWORD PTR [r15+rax*4]
   14002a752:	jmp    0x14002a759
   14002a754:	mov    ecx,0x106
   14002a759:	mov    DWORD PTR [rip+0x18959],ecx        # 0x1400430b8
   14002a75f:	mov    DWORD PTR [rip+0x18d5f],0x2        # 0x1400434c8
   14002a769:	mov    BYTE PTR [rip+0x18c50],sil        # 0x1400433c0
   14002a770:	mov    eax,DWORD PTR [rsp+0x30]
   14002a774:	not    BYTE PTR [rsp+0x80]
   14002a77b:	not    BYTE PTR [rsp+0x81]
   14002a782:	cmp    ax,0x2
   14002a786:	jne    0x14002a7e1
   14002a788:	movzx  eax,WORD PTR [rsp+0x80]
   14002a790:	cmp    ax,0xa
   14002a794:	je     0x14002a7d4
   14002a796:	mov    WORD PTR [rbx+0x2],ax
   14002a79a:	add    rbx,0x4
   14002a79e:	add    di,0x2
   14002a7a2:	jmp    0x14002a7ab
   14002a7a4:	mov    WORD PTR [rbx],ax
   14002a7a7:	add    rbx,0x2
   14002a7ab:	add    di,0x2
   14002a7af:	cmp    di,bp
   14002a7b2:	jl     0x14002a690
   14002a7b8:	movzx  eax,si
   14002a7bb:	mov    r12,QWORD PTR [rsp+0x78]
   14002a7c0:	mov    rdi,QWORD PTR [rsp+0x70]
   14002a7c5:	mov    r15,QWORD PTR [rsp+0x40]
   14002a7ca:	add    rsp,0x48
   14002a7ce:	pop    r14
   14002a7d0:	pop    rsi
   14002a7d1:	pop    rbp
   14002a7d2:	pop    rbx
   14002a7d3:	ret    
   14002a7d4:	mov    eax,0xa
   14002a7d9:	mov    DWORD PTR [rbx+0x2],eax
   14002a7dc:	lea    eax,[rdi+0x4]
   14002a7df:	jmp    0x14002a7bb
   14002a7e1:	test   ax,ax
   14002a7e4:	jne    0x14002a7bb
   14002a7e6:	test   di,di
   14002a7e9:	je     0x14002a7bb
   14002a7eb:	mov    DWORD PTR [rbx+0x2],0xa000d
   14002a7f2:	mov    eax,0xa
   14002a7f7:	mov    WORD PTR [rbx+0x6],si
   14002a7fb:	lea    eax,[rdi+0x4]
   14002a7fe:	jmp    0x14002a7bb
   14002a800:	test   ax,ax
   14002a803:	jne    0x14002a7bb
   14002a805:	test   di,di
   14002a808:	je     0x14002a7bb
   14002a80a:	mov    DWORD PTR [rbx],0xa000d
   14002a810:	mov    eax,0xa
   14002a815:	mov    WORD PTR [rbx+0x4],si
   14002a819:	lea    eax,[rdi+0x4]
   14002a81c:	jmp    0x14002a7bb
   14002a81e:	int3   
   14002a81f:	int3   
   14002a820:	mov    QWORD PTR [rsp+0x8],rbx
   14002a825:	push   rdi
   14002a826:	sub    rsp,0x30
   14002a82a:	mov    rbx,rdx
   14002a82d:	movsxd rdi,r8d
   14002a830:	test   r8d,r8d
   14002a833:	jle    0x14002a84b
   14002a835:	mov    r9,rdi
   14002a838:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a840:	not    BYTE PTR [rdx]
   14002a842:	lea    rdx,[rdx+0x1]
   14002a846:	dec    r9
   14002a849:	jne    0x14002a840
   14002a84b:	mov    rcx,QWORD PTR [rcx]
   14002a84e:	lea    r9,[rsp+0x50]
   14002a853:	mov    rdx,rbx
   14002a856:	mov    QWORD PTR [rsp+0x20],0x0
   14002a85f:	call   QWORD PTR [rip+0x49ab]        # 0x14002f210
   14002a865:	test   eax,eax
   14002a867:	jne    0x14002a89e
   14002a869:	call   QWORD PTR [rip+0x48f1]        # 0x14002f160
   14002a86f:	cmp    eax,0x58
   14002a872:	jae    0x14002a882
   14002a874:	lea    rcx,[rip+0x6825]        # 0x1400310a0
   14002a87b:	mov    eax,eax
   14002a87d:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002a880:	jmp    0x14002a887
   14002a882:	mov    ecx,0x106
   14002a887:	mov    DWORD PTR [rip+0x1882b],ecx        # 0x1400430b8
   14002a88d:	mov    DWORD PTR [rip+0x18c31],0x2        # 0x1400434c8
   14002a897:	mov    BYTE PTR [rip+0x18b22],0x0        # 0x1400433c0
   14002a89e:	test   rdi,rdi
   14002a8a1:	jle    0x14002a8ae
   14002a8a3:	not    BYTE PTR [rbx]
   14002a8a5:	lea    rbx,[rbx+0x1]
   14002a8a9:	dec    rdi
   14002a8ac:	jne    0x14002a8a3
   14002a8ae:	mov    eax,DWORD PTR [rsp+0x50]
   14002a8b2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a8b7:	add    rsp,0x30
   14002a8bb:	pop    rdi
   14002a8bc:	ret    
   14002a8bd:	int3   
   14002a8be:	int3   
   14002a8bf:	int3   
   14002a8c0:	mov    QWORD PTR [rsp+0x10],rbx
   14002a8c5:	push   rdi
   14002a8c6:	sub    rsp,0x30
   14002a8ca:	mov    rcx,QWORD PTR [rcx]
   14002a8cd:	movsxd rdi,r8d
   14002a8d0:	lea    r9,[rsp+0x40]
   14002a8d5:	mov    r8d,edi
   14002a8d8:	mov    rbx,rdx
   14002a8db:	mov    QWORD PTR [rsp+0x20],0x0
   14002a8e4:	call   QWORD PTR [rip+0x491e]        # 0x14002f208
   14002a8ea:	test   eax,eax
   14002a8ec:	jne    0x14002a923
   14002a8ee:	call   QWORD PTR [rip+0x486c]        # 0x14002f160
   14002a8f4:	cmp    eax,0x58
   14002a8f7:	jae    0x14002a907
   14002a8f9:	lea    rcx,[rip+0x67a0]        # 0x1400310a0
   14002a900:	mov    eax,eax
   14002a902:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002a905:	jmp    0x14002a90c
   14002a907:	mov    ecx,0x106
   14002a90c:	mov    DWORD PTR [rip+0x187a6],ecx        # 0x1400430b8
   14002a912:	mov    DWORD PTR [rip+0x18bac],0x2        # 0x1400434c8
   14002a91c:	mov    BYTE PTR [rip+0x18a9d],0x0        # 0x1400433c0
   14002a923:	mov    rcx,rdi
   14002a926:	test   edi,edi
   14002a928:	jle    0x14002a93b
   14002a92a:	nop    WORD PTR [rax+rax*1+0x0]
   14002a930:	not    BYTE PTR [rbx]
   14002a932:	lea    rbx,[rbx+0x1]
   14002a936:	dec    rcx
   14002a939:	jne    0x14002a930
   14002a93b:	mov    eax,DWORD PTR [rsp+0x40]
   14002a93f:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a944:	add    rsp,0x30
   14002a948:	pop    rdi
   14002a949:	ret    
   14002a94a:	int3   
   14002a94b:	int3   
   14002a94c:	int3   
   14002a94d:	int3   
   14002a94e:	int3   
   14002a94f:	int3   
   14002a950:	rex push rbx
   14002a952:	sub    rsp,0x20
   14002a956:	mov    rbx,rcx
   14002a959:	mov    rcx,QWORD PTR [rcx]
   14002a95c:	lea    rax,[rcx-0x1]
   14002a960:	cmp    rax,0xfffffffffffffffd
   14002a964:	ja     0x14002a9a5
   14002a966:	call   QWORD PTR [rip+0x4894]        # 0x14002f200
   14002a96c:	test   eax,eax
   14002a96e:	jne    0x14002a9a5
   14002a970:	call   QWORD PTR [rip+0x47ea]        # 0x14002f160
   14002a976:	cmp    eax,0x58
   14002a979:	jae    0x14002a989
   14002a97b:	lea    rcx,[rip+0x671e]        # 0x1400310a0
   14002a982:	mov    eax,eax
   14002a984:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002a987:	jmp    0x14002a98e
   14002a989:	mov    ecx,0x106
   14002a98e:	mov    DWORD PTR [rip+0x18724],ecx        # 0x1400430b8
   14002a994:	mov    DWORD PTR [rip+0x18b2a],0x2        # 0x1400434c8
   14002a99e:	mov    BYTE PTR [rip+0x18a1b],0x0        # 0x1400433c0
   14002a9a5:	mov    rbx,QWORD PTR [rbx+0x8]
   14002a9a9:	test   rbx,rbx
   14002a9ac:	je     0x14002a9cc
   14002a9ae:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a9b2:	test   rcx,rcx
   14002a9b5:	je     0x14002a9bd
   14002a9b7:	call   QWORD PTR [rip+0x51bb]        # 0x14002fb78
   14002a9bd:	mov    rcx,rbx
   14002a9c0:	add    rsp,0x20
   14002a9c4:	pop    rbx
   14002a9c5:	rex.W jmp QWORD PTR [rip+0x51ac]        # 0x14002fb78
   14002a9cc:	add    rsp,0x20
   14002a9d0:	pop    rbx
   14002a9d1:	ret    
   14002a9d2:	int3   
   14002a9d3:	int3   
   14002a9d4:	int3   
   14002a9d5:	int3   
   14002a9d6:	int3   
   14002a9d7:	int3   
   14002a9d8:	int3   
   14002a9d9:	int3   
   14002a9da:	int3   
   14002a9db:	int3   
   14002a9dc:	int3   
   14002a9dd:	int3   
   14002a9de:	int3   
   14002a9df:	int3   
   14002a9e0:	rex push rbx
   14002a9e2:	sub    rsp,0x20
   14002a9e6:	mov    rbx,rcx
   14002a9e9:	mov    rcx,QWORD PTR [rcx]
   14002a9ec:	call   QWORD PTR [rip+0x480e]        # 0x14002f200
   14002a9f2:	test   eax,eax
   14002a9f4:	je     0x14002aa16
   14002a9f6:	mov    rcx,rbx
   14002a9f9:	mov    QWORD PTR [rbx],0x0
   14002aa00:	call   0x14002a950
   14002aa05:	mov    rcx,rbx
   14002aa08:	call   QWORD PTR [rip+0x516a]        # 0x14002fb78
   14002aa0e:	xor    eax,eax
   14002aa10:	add    rsp,0x20
   14002aa14:	pop    rbx
   14002aa15:	ret    
   14002aa16:	call   QWORD PTR [rip+0x4744]        # 0x14002f160
   14002aa1c:	cmp    eax,0x58
   14002aa1f:	jae    0x14002aa2f
   14002aa21:	lea    rcx,[rip+0x6678]        # 0x1400310a0
   14002aa28:	mov    eax,eax
   14002aa2a:	mov    eax,DWORD PTR [rcx+rax*4]
   14002aa2d:	jmp    0x14002aa34
   14002aa2f:	mov    eax,0x106
   14002aa34:	mov    DWORD PTR [rip+0x1867e],eax        # 0x1400430b8
   14002aa3a:	mov    DWORD PTR [rip+0x18a84],0x2        # 0x1400434c8
   14002aa44:	mov    BYTE PTR [rip+0x18975],0x0        # 0x1400433c0
   14002aa4b:	add    rsp,0x20
   14002aa4f:	pop    rbx
   14002aa50:	ret    
   14002aa51:	int3   
   14002aa52:	int3   
   14002aa53:	int3   
   14002aa54:	int3   
   14002aa55:	int3   
   14002aa56:	int3   
   14002aa57:	int3   
   14002aa58:	int3   
   14002aa59:	int3   
   14002aa5a:	int3   
   14002aa5b:	int3   
   14002aa5c:	int3   
   14002aa5d:	int3   
   14002aa5e:	int3   
   14002aa5f:	int3   
   14002aa60:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa65:	push   rdi
   14002aa66:	sub    rsp,0x40
   14002aa6a:	mov    r10d,0x3
   14002aa70:	bt     edx,0xb
   14002aa74:	jb     0x14002aa80
   14002aa76:	lea    r9d,[r10+0x7d]
   14002aa7a:	bt     edx,0x9
   14002aa7e:	jae    0x14002aa86
   14002aa80:	mov    r9d,0x4000100
   14002aa86:	mov    eax,edx
   14002aa88:	mov    edi,0x2
   14002aa8d:	and    eax,0x6000000
   14002aa92:	cmp    eax,0x6000000
   14002aa97:	jne    0x14002aa9e
   14002aa99:	xor    r8d,r8d
   14002aa9c:	jmp    0x14002aaba
   14002aa9e:	bt     edx,0x19
   14002aaa2:	jae    0x14002aaa9
   14002aaa4:	mov    r8d,edi
   14002aaa7:	jmp    0x14002aaba
   14002aaa9:	mov    r8d,edx
   14002aaac:	shr    r8d,0x19
   14002aab0:	not    r8d
   14002aab3:	and    r8d,edi
   14002aab6:	or     r8d,0x1
   14002aaba:	mov    eax,edx
   14002aabc:	mov    ebx,0x80000000
   14002aac1:	and    eax,r10d
   14002aac4:	cmp    al,r10b
   14002aac7:	jne    0x14002aad0
   14002aac9:	mov    eax,0xc0000000
   14002aace:	jmp    0x14002aae6
   14002aad0:	test   dil,dl
   14002aad3:	je     0x14002aadc
   14002aad5:	mov    eax,0x40000000
   14002aada:	jmp    0x14002aae6
   14002aadc:	mov    eax,DWORD PTR [rsp+0x58]
   14002aae0:	test   dl,0x1
   14002aae3:	cmovne eax,ebx
   14002aae6:	bt     edx,0xa
   14002aaea:	mov    r11d,0x5
   14002aaf0:	cmovb  r10d,r11d
   14002aaf4:	test   dl,0x8
   14002aaf7:	cmovne r10d,edi
   14002aafb:	bt     edx,0xd
   14002aaff:	jae    0x14002ab04
   14002ab01:	or     r9d,ebx
   14002ab04:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ab08:	mov    QWORD PTR [rsp+0x30],0x0
   14002ab11:	mov    DWORD PTR [rsp+0x28],r9d
   14002ab16:	xor    r9d,r9d
   14002ab19:	mov    edx,eax
   14002ab1b:	mov    DWORD PTR [rsp+0x20],r10d
   14002ab20:	call   QWORD PTR [rip+0x4702]        # 0x14002f228
   14002ab26:	mov    rbx,rax
   14002ab29:	cmp    rax,0xffffffffffffffff
   14002ab2d:	jne    0x14002ab63
   14002ab2f:	call   QWORD PTR [rip+0x462b]        # 0x14002f160
   14002ab35:	cmp    eax,0x58
   14002ab38:	jae    0x14002ab48
   14002ab3a:	mov    ecx,eax
   14002ab3c:	lea    rax,[rip+0x655d]        # 0x1400310a0
   14002ab43:	mov    eax,DWORD PTR [rax+rcx*4]
   14002ab46:	jmp    0x14002ab4d
   14002ab48:	mov    eax,0x106
   14002ab4d:	mov    DWORD PTR [rip+0x18565],eax        # 0x1400430b8
   14002ab53:	mov    DWORD PTR [rip+0x1896f],edi        # 0x1400434c8
   14002ab59:	mov    BYTE PTR [rip+0x18860],0x0        # 0x1400433c0
   14002ab60:	mov    rax,rbx
   14002ab63:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ab68:	add    rsp,0x40
   14002ab6c:	pop    rdi
   14002ab6d:	ret    
   14002ab6e:	int3   
   14002ab6f:	int3   
   14002ab70:	rex push rbp
   14002ab72:	push   rdi
   14002ab73:	push   r14
   14002ab75:	sub    rsp,0x360
   14002ab7c:	mov    rax,QWORD PTR [rip+0x1147d]        # 0x14003c000
   14002ab83:	xor    rax,rsp
   14002ab86:	mov    QWORD PTR [rsp+0x350],rax
   14002ab8e:	mov    rbp,rcx
   14002ab91:	mov    ecx,0x10
   14002ab96:	mov    r14d,edx
   14002ab99:	call   QWORD PTR [rip+0x4df9]        # 0x14002f998
   14002ab9f:	mov    rdi,rax
   14002aba2:	test   rax,rax
   14002aba5:	je     0x14002ac9d
   14002abab:	mov    QWORD PTR [rsp+0x390],rbx
   14002abb3:	xor    ebx,ebx
   14002abb5:	mov    QWORD PTR [rsp+0x398],rsi
   14002abbd:	mov    QWORD PTR [rax],rbx
   14002abc0:	mov    QWORD PTR [rax+0x8],rbx
   14002abc4:	test   rbp,rbp
   14002abc7:	je     0x14002abd3
   14002abc9:	mov    rcx,rbp
   14002abcc:	call   0x14002ae00
   14002abd1:	jmp    0x14002ac41
   14002abd3:	lea    rdx,[rsp+0x130]
   14002abdb:	mov    ecx,0x104
   14002abe0:	call   QWORD PTR [rip+0x465a]        # 0x14002f240
   14002abe6:	lea    ecx,[rax-0x1]
   14002abe9:	cmp    ecx,0x102
   14002abef:	ja     0x14002ac6a
   14002abf1:	add    eax,0xc
   14002abf4:	cmp    eax,0x104
   14002abf9:	jae    0x14002ac6a
   14002abfb:	lea    r9,[rsp+0x20]
   14002ac00:	lea    rdx,[rip+0x68b1]        # 0x1400314b8
   14002ac07:	lea    rcx,[rsp+0x130]
   14002ac0f:	xor    r8d,r8d
   14002ac12:	call   QWORD PTR [rip+0x4630]        # 0x14002f248
   14002ac18:	test   eax,eax
   14002ac1a:	je     0x14002ac6a
   14002ac1c:	nop    DWORD PTR [rax+0x0]
   14002ac20:	movzx  eax,BYTE PTR [rsp+rbx*1+0x20]
   14002ac25:	lea    rbx,[rbx+0x1]
   14002ac29:	mov    BYTE PTR [rsp+rbx*1+0x23f],al
   14002ac30:	test   al,al
   14002ac32:	jne    0x14002ac20
   14002ac34:	lea    rcx,[rsp+0x240]
   14002ac3c:	call   0x14002ae90
   14002ac41:	mov    edx,r14d
   14002ac44:	mov    rcx,rax
   14002ac47:	mov    QWORD PTR [rdi+0x8],rax
   14002ac4b:	call   0x14002aa60
   14002ac50:	mov    QWORD PTR [rdi],rax
   14002ac53:	cmp    rax,0xffffffffffffffff
   14002ac57:	jne    0x14002ac98
   14002ac59:	mov    rcx,rdi
   14002ac5c:	call   0x14002a950
   14002ac61:	mov    rcx,rdi
   14002ac64:	call   QWORD PTR [rip+0x4f0e]        # 0x14002fb78
   14002ac6a:	xor    eax,eax
   14002ac6c:	mov    rbx,QWORD PTR [rsp+0x390]
   14002ac74:	mov    rsi,QWORD PTR [rsp+0x398]
   14002ac7c:	mov    rcx,QWORD PTR [rsp+0x350]
   14002ac84:	xor    rcx,rsp
   14002ac87:	call   0x14002c960
   14002ac8c:	add    rsp,0x360
   14002ac93:	pop    r14
   14002ac95:	pop    rdi
   14002ac96:	pop    rbp
   14002ac97:	ret    
   14002ac98:	mov    rax,rdi
   14002ac9b:	jmp    0x14002ac6c
   14002ac9d:	mov    DWORD PTR [rip+0x18411],0x2        # 0x1400430b8
   14002aca7:	mov    DWORD PTR [rip+0x18817],0x2        # 0x1400434c8
   14002acb1:	mov    BYTE PTR [rip+0x18708],0x0        # 0x1400433c0
   14002acb8:	xor    eax,eax
   14002acba:	jmp    0x14002ac7c
   14002acbc:	int3   
   14002acbd:	int3   
   14002acbe:	int3   
   14002acbf:	int3   
   14002acc0:	rex push rbx
   14002acc2:	sub    rsp,0x20
   14002acc6:	mov    rbx,rcx
   14002acc9:	call   QWORD PTR [rip+0x4491]        # 0x14002f160
   14002accf:	cmp    eax,0x58
   14002acd2:	jae    0x14002ace2
   14002acd4:	lea    rcx,[rip+0x63c5]        # 0x1400310a0
   14002acdb:	mov    eax,eax
   14002acdd:	mov    edx,DWORD PTR [rcx+rax*4]
   14002ace0:	jmp    0x14002ace7
   14002ace2:	mov    edx,0x106
   14002ace7:	mov    eax,DWORD PTR [rbx]
   14002ace9:	mov    DWORD PTR [rip+0x183c9],edx        # 0x1400430b8
   14002acef:	mov    DWORD PTR [rip+0x187cf],0x2        # 0x1400434c8
   14002acf9:	mov    BYTE PTR [rip+0x186c0],0x0        # 0x1400433c0
   14002ad00:	add    rsp,0x20
   14002ad04:	pop    rbx
   14002ad05:	ret    
   14002ad06:	int3   
   14002ad07:	int3   
   14002ad08:	int3   
   14002ad09:	int3   
   14002ad0a:	int3   
   14002ad0b:	int3   
   14002ad0c:	int3   
   14002ad0d:	int3   
   14002ad0e:	int3   
   14002ad0f:	int3   
   14002ad10:	rex push rbx
   14002ad12:	sub    rsp,0x20
   14002ad16:	movzx  r9d,r8w
   14002ad1a:	test   r9d,r9d
   14002ad1d:	je     0x14002ad40
   14002ad1f:	dec    r9d
   14002ad22:	je     0x14002ad38
   14002ad24:	dec    r9d
   14002ad27:	jne    0x14002ad31
   14002ad29:	mov    r9d,0x2
   14002ad2f:	jmp    0x14002ad43
   14002ad31:	mov    r9d,DWORD PTR [rsp+0x40]
   14002ad36:	jmp    0x14002ad43
   14002ad38:	mov    r9d,0x1
   14002ad3e:	jmp    0x14002ad43
   14002ad40:	xor    r9d,r9d
   14002ad43:	mov    rcx,QWORD PTR [rcx]
   14002ad46:	xor    r8d,r8d
   14002ad49:	call   QWORD PTR [rip+0x44c9]        # 0x14002f218
   14002ad4f:	mov    ebx,eax
   14002ad51:	lea    ecx,[rax+0x1]
   14002ad54:	test   ecx,0xfffffffe
   14002ad5a:	jne    0x14002ad93
   14002ad5c:	call   QWORD PTR [rip+0x43fe]        # 0x14002f160
   14002ad62:	cmp    eax,0x58
   14002ad65:	jae    0x14002ad75
   14002ad67:	mov    ecx,eax
   14002ad69:	lea    rax,[rip+0x6330]        # 0x1400310a0
   14002ad70:	mov    edx,DWORD PTR [rax+rcx*4]
   14002ad73:	jmp    0x14002ad7a
   14002ad75:	mov    edx,0x106
   14002ad7a:	mov    DWORD PTR [rip+0x18338],edx        # 0x1400430b8
   14002ad80:	mov    DWORD PTR [rip+0x1873e],0x2        # 0x1400434c8
   14002ad8a:	mov    BYTE PTR [rip+0x1862f],0x0        # 0x1400433c0
   14002ad91:	mov    eax,ebx
   14002ad93:	add    rsp,0x20
   14002ad97:	pop    rbx
   14002ad98:	ret    
   14002ad99:	int3   
   14002ad9a:	int3   
   14002ad9b:	int3   
   14002ad9c:	int3   
   14002ad9d:	int3   
   14002ad9e:	int3   
   14002ad9f:	int3   
   14002ada0:	sub    rsp,0x38
   14002ada4:	mov    rcx,QWORD PTR [rcx]
   14002ada7:	lea    r9,[rsp+0x40]
   14002adac:	mov    QWORD PTR [rsp+0x20],0x0
   14002adb5:	call   QWORD PTR [rip+0x4455]        # 0x14002f210
   14002adbb:	test   eax,eax
   14002adbd:	jne    0x14002adf4
   14002adbf:	call   QWORD PTR [rip+0x439b]        # 0x14002f160
   14002adc5:	cmp    eax,0x58
   14002adc8:	jae    0x14002add8
   14002adca:	lea    rcx,[rip+0x62cf]        # 0x1400310a0
   14002add1:	mov    eax,eax
   14002add3:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002add6:	jmp    0x14002addd
   14002add8:	mov    ecx,0x106
   14002addd:	mov    DWORD PTR [rip+0x182d5],ecx        # 0x1400430b8
   14002ade3:	mov    DWORD PTR [rip+0x186db],0x2        # 0x1400434c8
   14002aded:	mov    BYTE PTR [rip+0x185cc],0x0        # 0x1400433c0
   14002adf4:	mov    eax,DWORD PTR [rsp+0x40]
   14002adf8:	add    rsp,0x38
   14002adfc:	ret    
   14002adfd:	int3   
   14002adfe:	int3   
   14002adff:	int3   
   14002ae00:	rex push rdi
   14002ae02:	sub    rsp,0x30
   14002ae06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ae0f:	mov    QWORD PTR [rsp+0x48],rbx
   14002ae14:	mov    rdi,rcx
   14002ae17:	test   rcx,rcx
   14002ae1a:	jne    0x14002ae20
   14002ae1c:	xor    eax,eax
   14002ae1e:	jmp    0x14002ae7e
   14002ae20:	mov    ecx,0x10
   14002ae25:	call   QWORD PTR [rip+0x4b6d]        # 0x14002f998
   14002ae2b:	mov    rbx,rax
   14002ae2e:	mov    QWORD PTR [rsp+0x40],rax
   14002ae33:	test   rax,rax
   14002ae36:	je     0x14002ae79
   14002ae38:	movzx  eax,WORD PTR [rdi]
   14002ae3b:	mov    WORD PTR [rbx],ax
   14002ae3e:	mov    rcx,QWORD PTR [rdi+0x8]
   14002ae42:	test   rcx,rcx
   14002ae45:	je     0x14002ae6f
   14002ae47:	call   QWORD PTR [rip+0x4433]        # 0x14002f280
   14002ae4d:	test   eax,eax
   14002ae4f:	jle    0x14002ae6f
   14002ae51:	inc    eax
   14002ae53:	movsxd rcx,eax
   14002ae56:	call   QWORD PTR [rip+0x4b3c]        # 0x14002f998
   14002ae5c:	mov    QWORD PTR [rbx+0x8],rax
   14002ae60:	mov    rdx,QWORD PTR [rdi+0x8]
   14002ae64:	mov    rcx,rax
   14002ae67:	call   QWORD PTR [rip+0x43eb]        # 0x14002f258
   14002ae6d:	jmp    0x14002ae7b
   14002ae6f:	mov    QWORD PTR [rbx+0x8],0x0
   14002ae77:	jmp    0x14002ae7b
   14002ae79:	xor    ebx,ebx
   14002ae7b:	mov    rax,rbx
   14002ae7e:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ae83:	add    rsp,0x30
   14002ae87:	pop    rdi
   14002ae88:	ret    
   14002ae89:	int3   
   14002ae8a:	int3   
   14002ae8b:	int3   
   14002ae8c:	int3   
   14002ae8d:	int3   
   14002ae8e:	int3   
   14002ae8f:	int3   
   14002ae90:	rex push rdi
   14002ae92:	sub    rsp,0x30
   14002ae96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ae9f:	mov    QWORD PTR [rsp+0x48],rbx
   14002aea4:	mov    rdi,rcx
   14002aea7:	test   rcx,rcx
   14002aeaa:	jne    0x14002aeb0
   14002aeac:	xor    eax,eax
   14002aeae:	jmp    0x14002af01
   14002aeb0:	mov    ecx,0x10
   14002aeb5:	call   QWORD PTR [rip+0x4add]        # 0x14002f998
   14002aebb:	mov    rbx,rax
   14002aebe:	mov    QWORD PTR [rsp+0x40],rax
   14002aec3:	test   rax,rax
   14002aec6:	je     0x14002aefb
   14002aec8:	xor    eax,eax
   14002aeca:	mov    WORD PTR [rbx],ax
   14002aecd:	mov    QWORD PTR [rbx+0x8],rax
   14002aed1:	mov    rcx,rdi
   14002aed4:	call   QWORD PTR [rip+0x43a6]        # 0x14002f280
   14002aeda:	test   eax,eax
   14002aedc:	jle    0x14002aefe
   14002aede:	inc    eax
   14002aee0:	movsxd rcx,eax
   14002aee3:	call   QWORD PTR [rip+0x4aaf]        # 0x14002f998
   14002aee9:	mov    QWORD PTR [rbx+0x8],rax
   14002aeed:	mov    rdx,rdi
   14002aef0:	mov    rcx,rax
   14002aef3:	call   QWORD PTR [rip+0x435f]        # 0x14002f258
   14002aef9:	jmp    0x14002aefe
   14002aefb:	mov    rbx,rax
   14002aefe:	mov    rax,rbx
   14002af01:	mov    rbx,QWORD PTR [rsp+0x48]
   14002af06:	add    rsp,0x30
   14002af0a:	pop    rdi
   14002af0b:	ret    
   14002af0c:	int3   
   14002af0d:	int3   
   14002af0e:	int3   
   14002af0f:	int3   
   14002af10:	test   rcx,rcx
   14002af13:	je     0x14002af3a
   14002af15:	push   rbx
   14002af16:	sub    rsp,0x20
   14002af1a:	mov    rbx,rcx
   14002af1d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002af21:	test   rcx,rcx
   14002af24:	je     0x14002af2c
   14002af26:	call   QWORD PTR [rip+0x4c4c]        # 0x14002fb78
   14002af2c:	mov    rcx,rbx
   14002af2f:	call   QWORD PTR [rip+0x4c43]        # 0x14002fb78
   14002af35:	add    rsp,0x20
   14002af39:	pop    rbx
   14002af3a:	ret    
   14002af3b:	int3   
   14002af3c:	int3   
   14002af3d:	int3   
   14002af3e:	int3   
   14002af3f:	int3   
   14002af40:	movzx  eax,BYTE PTR [rcx+0x1]
   14002af44:	mov    r9,rdx
   14002af47:	mov    r8,rdx
   14002af4a:	or     al,BYTE PTR [rcx]
   14002af4c:	je     0x14002af89
   14002af4e:	movzx  r10d,WORD PTR [rdx]
   14002af52:	cmp    WORD PTR [rcx],r10w
   14002af56:	jne    0x14002af7d
   14002af58:	mov    rdx,rcx
   14002af5b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002af60:	movzx  eax,WORD PTR [r8+0x2]
   14002af65:	lea    r8,[r8+0x2]
   14002af69:	test   ax,ax
   14002af6c:	je     0x14002af8c
   14002af6e:	add    rcx,0x2
   14002af72:	cmp    WORD PTR [rcx],ax
   14002af75:	je     0x14002af60
   14002af77:	mov    rcx,rdx
   14002af7a:	mov    r8,r9
   14002af7d:	movzx  eax,BYTE PTR [rcx+0x3]
   14002af81:	add    rcx,0x2
   14002af85:	or     al,BYTE PTR [rcx]
   14002af87:	jne    0x14002af52
   14002af89:	xor    eax,eax
   14002af8b:	ret    
   14002af8c:	mov    rax,rdx
   14002af8f:	ret    
   14002af90:	xor    eax,eax
   14002af92:	cmp    BYTE PTR [rcx],0x0
   14002af95:	jne    0x14002af9d
   14002af97:	cmp    BYTE PTR [rcx+0x1],0x0
   14002af9b:	je     0x14002afa5
   14002af9d:	add    rcx,0x2
   14002afa1:	inc    eax
   14002afa3:	jmp    0x14002af92
   14002afa5:	add    eax,eax
   14002afa7:	ret    
   14002afa8:	int3   
   14002afa9:	int3   
   14002afaa:	int3   
   14002afab:	int3   
   14002afac:	int3   
   14002afad:	int3   
   14002afae:	int3   
   14002afaf:	int3   
   14002afb0:	movzx  eax,BYTE PTR [rip+0x112f9]        # 0x14003c2b0
   14002afb7:	mov    WORD PTR [rsp+0x8],cx
   14002afbc:	lea    rdx,[rip+0x112ed]        # 0x14003c2b0
   14002afc3:	cmp    al,0xff
   14002afc5:	je     0x14002afe1
   14002afc7:	movzx  r8d,BYTE PTR [rsp+0x9]
   14002afcd:	nop    DWORD PTR [rax]
   14002afd0:	cmp    al,r8b
   14002afd3:	je     0x14002afe1
   14002afd5:	movzx  eax,BYTE PTR [rdx+0x10]
   14002afd9:	add    rdx,0x10
   14002afdd:	cmp    al,0xff
   14002afdf:	jne    0x14002afd0
   14002afe1:	mov    rax,QWORD PTR [rdx+0x8]
   14002afe5:	test   rax,rax
   14002afe8:	je     0x14002b008
   14002afea:	movzx  edx,BYTE PTR [rax]
   14002afed:	cmp    cl,dl
   14002afef:	jb     0x14002b008
   14002aff1:	sub    cl,dl
   14002aff3:	cmp    cl,BYTE PTR [rax+0x1]
   14002aff6:	ja     0x14002b008
   14002aff8:	movzx  ecx,cl
   14002affb:	add    ecx,0x2
   14002affe:	movsxd rcx,ecx
   14002b001:	add    rax,rcx
   14002b004:	movzx  eax,BYTE PTR [rax]
   14002b007:	ret    
   14002b008:	mov    al,0xff
   14002b00a:	ret    
   14002b00b:	int3   
   14002b00c:	int3   
   14002b00d:	int3   
   14002b00e:	int3   
   14002b00f:	int3   
   14002b010:	sub    rsp,0x8
   14002b014:	movzx  r9d,WORD PTR [rdx]
   14002b018:	mov    r10,rcx
   14002b01b:	mov    r11,rcx
   14002b01e:	test   r9w,r9w
   14002b022:	je     0x14002b0b0
   14002b028:	mov    QWORD PTR [rsp+0x10],rbx
   14002b02d:	mov    QWORD PTR [rsp+0x18],rsi
   14002b032:	mov    QWORD PTR [rsp],rdi
   14002b036:	mov    edi,0x700
   14002b03b:	mov    ebx,0x80
   14002b040:	lea    rsi,[rip+0x61b9]        # 0x140031200
   14002b047:	cmp    r9w,bx
   14002b04b:	jb     0x14002b08e
   14002b04d:	xor    eax,eax
   14002b04f:	cmp    r9w,WORD PTR [r8]
   14002b053:	je     0x14002b087
   14002b055:	cmp    eax,ebx
   14002b057:	jge    0x14002b069
   14002b059:	inc    eax
   14002b05b:	movsxd rcx,eax
   14002b05e:	cmp    r9w,WORD PTR [r8+rcx*2]
   14002b063:	jne    0x14002b055
   14002b065:	cmp    eax,ebx
   14002b067:	jl     0x14002b087
   14002b069:	lea    eax,[rdi+r9*1]
   14002b06d:	cmp    ax,0x1f
   14002b071:	ja     0x14002b082
   14002b073:	movzx  eax,r9w
   14002b077:	movzx  r9d,BYTE PTR [rsi+rax*2-0x1f200]
   14002b080:	jmp    0x14002b08e
   14002b082:	xor    r9b,r9b
   14002b085:	jmp    0x14002b08e
   14002b087:	lea    r9d,[rax+0x80]
   14002b08e:	add    rdx,0x2
   14002b092:	mov    BYTE PTR [r10],r9b
   14002b095:	inc    r10
   14002b098:	movzx  r9d,WORD PTR [rdx]
   14002b09c:	test   r9w,r9w
   14002b0a0:	jne    0x14002b047
   14002b0a2:	mov    rdi,QWORD PTR [rsp]
   14002b0a6:	mov    rsi,QWORD PTR [rsp+0x18]
   14002b0ab:	mov    rbx,QWORD PTR [rsp+0x10]
   14002b0b0:	mov    BYTE PTR [r10],0x0
   14002b0b4:	sub    r10,r11
   14002b0b7:	mov    eax,r10d
   14002b0ba:	add    rsp,0x8
   14002b0be:	ret    
   14002b0bf:	int3   
   14002b0c0:	sub    rsp,0x28
   14002b0c4:	call   QWORD PTR [rip+0x4126]        # 0x14002f1f0
   14002b0ca:	mov    DWORD PTR [rip+0x12220],eax        # 0x14003d2f0
   14002b0d0:	call   QWORD PTR [rip+0x4112]        # 0x14002f1e8
   14002b0d6:	mov    r11d,DWORD PTR [rip+0x12213]        # 0x14003d2f0
   14002b0dd:	lea    rcx,[rip+0x61ec]        # 0x1400312d0
   14002b0e4:	mov    edx,0x1b5
   14002b0e9:	mov    DWORD PTR [rip+0x12205],eax        # 0x14003d2f4
   14002b0ef:	mov    r8,rcx
   14002b0f2:	mov    r9d,edx
   14002b0f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b100:	lea    r10,[rip+0x11be9]        # 0x14003ccf0
   14002b107:	cmp    r11d,r9d
   14002b10a:	je     0x14002b11e
   14002b10c:	mov    r9d,DWORD PTR [r8+0x10]
   14002b110:	add    r8,0x10
   14002b114:	test   r9d,r9d
   14002b117:	jne    0x14002b100
   14002b119:	mov    r8,r10
   14002b11c:	jmp    0x14002b122
   14002b11e:	mov    r8,QWORD PTR [r8+0x8]
   14002b122:	mov    QWORD PTR [rip+0x121cf],r8        # 0x14003d2f8
   14002b129:	nop    DWORD PTR [rax+0x0]
   14002b130:	cmp    eax,edx
   14002b132:	je     0x14002b141
   14002b134:	mov    edx,DWORD PTR [rcx+0x10]
   14002b137:	add    rcx,0x10
   14002b13b:	test   edx,edx
   14002b13d:	jne    0x14002b130
   14002b13f:	jmp    0x14002b145
   14002b141:	mov    r10,QWORD PTR [rcx+0x8]
   14002b145:	cmp    DWORD PTR [rip+0x121c4],0x0        # 0x14003d310
   14002b14c:	mov    QWORD PTR [rip+0x121ad],r10        # 0x14003d300
   14002b153:	cmovne r10,r8
   14002b157:	mov    QWORD PTR [rip+0x121aa],r10        # 0x14003d308
   14002b15e:	add    rsp,0x28
   14002b162:	ret    
   14002b163:	int3   
   14002b164:	int3   
   14002b165:	int3   
   14002b166:	int3   
   14002b167:	int3   
   14002b168:	int3   
   14002b169:	int3   
   14002b16a:	int3   
   14002b16b:	int3   
   14002b16c:	int3   
   14002b16d:	int3   
   14002b16e:	int3   
   14002b16f:	int3   
   14002b170:	xor    r10d,r10d
   14002b173:	mov    r11,rdx
   14002b176:	movzx  edx,cx
   14002b179:	movzx  r8d,r10w
   14002b17d:	nop    DWORD PTR [rax]
   14002b180:	movzx  ecx,dx
   14002b183:	mov    eax,0x66666667
   14002b188:	imul   ecx
   14002b18a:	sar    edx,0x2
   14002b18d:	mov    eax,edx
   14002b18f:	shr    eax,0x1f
   14002b192:	add    edx,eax
   14002b194:	lea    eax,[rdx+rdx*4]
   14002b197:	add    eax,eax
   14002b199:	sub    ecx,eax
   14002b19b:	movsx  rax,r8w
   14002b19f:	inc    r8w
   14002b1a3:	add    cl,0x30
   14002b1a6:	mov    BYTE PTR [rax+r11*1],cl
   14002b1aa:	test   dx,dx
   14002b1ad:	jne    0x14002b180
   14002b1af:	movsx  rax,r8w
   14002b1b3:	mov    rcx,r11
   14002b1b6:	mov    BYTE PTR [rax+r11*1],r10b
   14002b1ba:	mov    eax,r10d
   14002b1bd:	cmp    BYTE PTR [r11],al
   14002b1c0:	je     0x14002b1cd
   14002b1c2:	lea    rcx,[rcx+0x1]
   14002b1c6:	inc    eax
   14002b1c8:	cmp    BYTE PTR [rcx],r10b
   14002b1cb:	jne    0x14002b1c2
   14002b1cd:	dec    ax
   14002b1d0:	cmp    r10w,ax
   14002b1d4:	jge    0x14002b207
   14002b1d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b1e0:	movsx  rdx,ax
   14002b1e4:	movsx  r8,r10w
   14002b1e8:	inc    r10w
   14002b1ec:	movzx  ecx,BYTE PTR [rdx+r11*1]
   14002b1f1:	movzx  r9d,BYTE PTR [r8+r11*1]
   14002b1f6:	dec    ax
   14002b1f9:	mov    BYTE PTR [r8+r11*1],cl
   14002b1fd:	mov    BYTE PTR [rdx+r11*1],r9b
   14002b201:	cmp    r10w,ax
   14002b205:	jl     0x14002b1e0
   14002b207:	ret    
   14002b208:	int3   
   14002b209:	int3   
   14002b20a:	int3   
   14002b20b:	int3   
   14002b20c:	int3   
   14002b20d:	int3   
   14002b20e:	int3   
   14002b20f:	int3   
   14002b210:	rex push rbx
   14002b212:	sub    rsp,0x40
   14002b216:	cmp    BYTE PTR [rip+0x182d3],0x0        # 0x1400434f0
   14002b21d:	jne    0x14002b297
   14002b21f:	mov    rcx,QWORD PTR [rip+0x1754a]        # 0x140042770
   14002b226:	xor    ebx,ebx
   14002b228:	test   rcx,rcx
   14002b22b:	jne    0x14002b259
   14002b22d:	mov    ecx,0x438
   14002b232:	call   QWORD PTR [rip+0x4760]        # 0x14002f998
   14002b238:	test   rax,rax
   14002b23b:	je     0x14002b24a
   14002b23d:	mov    rcx,rax
   14002b240:	call   0x14002b540
   14002b245:	mov    rcx,rax
   14002b248:	jmp    0x14002b24d
   14002b24a:	mov    rcx,rbx
   14002b24d:	test   rcx,rcx
   14002b250:	je     0x14002b297
   14002b252:	mov    QWORD PTR [rip+0x17517],rcx        # 0x140042770
   14002b259:	mov    rax,QWORD PTR [rcx]
   14002b25c:	call   QWORD PTR [rax+0x18]
   14002b25f:	mov    QWORD PTR [rsp+0x38],rbx
   14002b264:	mov    QWORD PTR [rsp+0x30],rbx
   14002b269:	lea    rbx,[rip+0x18280]        # 0x1400434f0
   14002b270:	or     r9d,0xffffffff
   14002b274:	xor    edx,edx
   14002b276:	mov    r8,rax
   14002b279:	xor    ecx,ecx
   14002b27b:	mov    DWORD PTR [rsp+0x28],0x104
   14002b283:	mov    QWORD PTR [rsp+0x20],rbx
   14002b288:	call   QWORD PTR [rip+0x3f52]        # 0x14002f1e0
   14002b28e:	mov    rax,rbx
   14002b291:	add    rsp,0x40
   14002b295:	pop    rbx
   14002b296:	ret    
   14002b297:	lea    rax,[rip+0x18252]        # 0x1400434f0
   14002b29e:	add    rsp,0x40
   14002b2a2:	pop    rbx
   14002b2a3:	ret    
   14002b2a4:	int3   
   14002b2a5:	int3   
   14002b2a6:	int3   
   14002b2a7:	int3   
   14002b2a8:	int3   
   14002b2a9:	int3   
   14002b2aa:	int3   
   14002b2ab:	int3   
   14002b2ac:	int3   
   14002b2ad:	int3   
   14002b2ae:	int3   
   14002b2af:	int3   
   14002b2b0:	rex push rbx
   14002b2b2:	sub    rsp,0x20
   14002b2b6:	cmp    BYTE PTR [rcx],0x0
   14002b2b9:	mov    rbx,rcx
   14002b2bc:	je     0x14002b428
   14002b2c2:	call   QWORD PTR [rip+0x3f10]        # 0x14002f1d8
   14002b2c8:	xor    ecx,ecx
   14002b2ca:	cmp    eax,0xffffffff
   14002b2cd:	setne  cl
   14002b2d0:	test   ecx,ecx
   14002b2d2:	jne    0x14002b420
   14002b2d8:	mov    QWORD PTR [rsp+0x30],rbp
   14002b2dd:	mov    QWORD PTR [rsp+0x38],rsi
   14002b2e2:	mov    QWORD PTR [rsp+0x40],rdi
   14002b2e7:	mov    QWORD PTR [rsp+0x48],r14
   14002b2ec:	or     rcx,0xffffffffffffffff
   14002b2f0:	cmp    BYTE PTR [rbx+rcx*1+0x1],0x0
   14002b2f5:	lea    rcx,[rcx+0x1]
   14002b2f9:	jne    0x14002b2f0
   14002b2fb:	movzx  eax,WORD PTR [rip+0x94c6]        # 0x1400347c8
   14002b302:	xor    r14d,r14d
   14002b305:	cmp    BYTE PTR [rcx+rbx*1-0x1],al
   14002b309:	sete   r14b
   14002b30d:	test   r14d,r14d
   14002b310:	je     0x14002b32b
   14002b312:	or     rax,0xffffffffffffffff
   14002b316:	inc    rax
   14002b319:	cmp    BYTE PTR [rbx+rax*1],0x0
   14002b31d:	jne    0x14002b316
   14002b31f:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14002b324:	movzx  eax,WORD PTR [rip+0x949d]        # 0x1400347c8
   14002b32b:	movsx  edx,al
   14002b32e:	mov    rcx,rbx
   14002b331:	call   QWORD PTR [rip+0x40b9]        # 0x14002f3f0
   14002b337:	or     rbp,0xffffffffffffffff
   14002b33b:	mov    rdi,rax
   14002b33e:	xchg   ax,ax
   14002b340:	inc    rbp
   14002b343:	cmp    BYTE PTR [rbx+rbp*1],0x0
   14002b347:	jne    0x14002b340
   14002b349:	mov    rcx,rbx
   14002b34c:	add    rbp,rbx
   14002b34f:	call   QWORD PTR [rip+0x3e83]        # 0x14002f1d8
   14002b355:	cmp    eax,0xffffffff
   14002b358:	jne    0x14002b384
   14002b35a:	nop    WORD PTR [rax+rax*1+0x0]
   14002b360:	movsx  edx,BYTE PTR [rip+0x9461]        # 0x1400347c8
   14002b367:	mov    rcx,rbx
   14002b36a:	call   QWORD PTR [rip+0x4080]        # 0x14002f3f0
   14002b370:	mov    rcx,rbx
   14002b373:	mov    BYTE PTR [rax],0x0
   14002b376:	mov    rdi,rax
   14002b379:	call   QWORD PTR [rip+0x3e59]        # 0x14002f1d8
   14002b37f:	cmp    eax,0xffffffff
   14002b382:	je     0x14002b360
   14002b384:	mov    esi,0x1
   14002b389:	cmp    rdi,rbp
   14002b38c:	je     0x14002b3e5
   14002b38e:	xchg   ax,ax
   14002b390:	test   esi,esi
   14002b392:	je     0x14002b404
   14002b394:	movzx  eax,BYTE PTR [rip+0x942d]        # 0x1400347c8
   14002b39b:	xor    edx,edx
   14002b39d:	mov    rcx,rbx
   14002b3a0:	mov    BYTE PTR [rdi],al
   14002b3a2:	call   QWORD PTR [rip+0x3e28]        # 0x14002f1d0
   14002b3a8:	test   eax,eax
   14002b3aa:	jne    0x14002b3bd
   14002b3ac:	call   QWORD PTR [rip+0x3dae]        # 0x14002f160
   14002b3b2:	cmp    eax,0xb7
   14002b3b7:	je     0x14002b3bd
   14002b3b9:	xor    eax,eax
   14002b3bb:	jmp    0x14002b3c2
   14002b3bd:	mov    eax,0x1
   14002b3c2:	and    esi,eax
   14002b3c4:	or     rdi,0xffffffffffffffff
   14002b3c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002b3d0:	inc    rdi
   14002b3d3:	cmp    BYTE PTR [rbx+rdi*1],0x0
   14002b3d7:	jne    0x14002b3d0
   14002b3d9:	add    rdi,rbx
   14002b3dc:	cmp    rdi,rbp
   14002b3df:	jne    0x14002b390
   14002b3e1:	test   esi,esi
   14002b3e3:	je     0x14002b404
   14002b3e5:	test   r14d,r14d
   14002b3e8:	je     0x14002b404
   14002b3ea:	dec    rbx
   14002b3ed:	nop    DWORD PTR [rax]
   14002b3f0:	cmp    BYTE PTR [rbx+0x1],0x0
   14002b3f4:	lea    rbx,[rbx+0x1]
   14002b3f8:	jne    0x14002b3f0
   14002b3fa:	movzx  eax,WORD PTR [rip+0x93c7]        # 0x1400347c8
   14002b401:	mov    WORD PTR [rbx],ax
   14002b404:	mov    rdi,QWORD PTR [rsp+0x40]
   14002b409:	mov    rbp,QWORD PTR [rsp+0x30]
   14002b40e:	mov    r14,QWORD PTR [rsp+0x48]
   14002b413:	mov    eax,esi
   14002b415:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b41a:	add    rsp,0x20
   14002b41e:	pop    rbx
   14002b41f:	ret    
   14002b420:	mov    eax,ecx
   14002b422:	add    rsp,0x20
   14002b426:	pop    rbx
   14002b427:	ret    
   14002b428:	xor    eax,eax
   14002b42a:	add    rsp,0x20
   14002b42e:	pop    rbx
   14002b42f:	ret    
   14002b430:	rex push rbx
   14002b432:	sub    rsp,0xab0
   14002b439:	mov    rax,QWORD PTR [rip+0x10bc0]        # 0x14003c000
   14002b440:	xor    rax,rsp
   14002b443:	mov    QWORD PTR [rsp+0xaa0],rax
   14002b44b:	lea    rcx,[rsp+0x50]
   14002b450:	xor    edx,edx
   14002b452:	mov    r8d,0x208
   14002b458:	call   0x14002ce12
   14002b45d:	lea    rdx,[rsp+0x50]
   14002b462:	lea    rcx,[rip+0xfffffffffffd4b97]        # 0x140000000
   14002b469:	mov    r8d,0x104
   14002b46f:	call   QWORD PTR [rip+0x3cfb]        # 0x14002f170
   14002b475:	mov    ebx,eax
   14002b477:	test   eax,eax
   14002b479:	je     0x14002b51f
   14002b47f:	mov    QWORD PTR [rsp+0x40],0x104
   14002b488:	lea    rax,[rsp+0x680]
   14002b490:	lea    r9,[rsp+0x260]
   14002b498:	mov    QWORD PTR [rsp+0x38],rax
   14002b49d:	lea    rax,[rsp+0x890]
   14002b4a5:	mov    QWORD PTR [rsp+0x30],0x104
   14002b4ae:	mov    QWORD PTR [rsp+0x28],rax
   14002b4b3:	lea    rdx,[rsp+0x470]
   14002b4bb:	lea    rcx,[rsp+0x50]
   14002b4c0:	mov    r8d,0x104
   14002b4c6:	mov    QWORD PTR [rsp+0x20],0x104
   14002b4cf:	call   QWORD PTR [rip+0x3f13]        # 0x14002f3e8
   14002b4d5:	lea    rcx,[rip+0x1b044]        # 0x140046520
   14002b4dc:	xor    edx,edx
   14002b4de:	mov    r8d,0x208
   14002b4e4:	call   0x14002ce12
   14002b4e9:	lea    r8,[rsp+0x470]
   14002b4f1:	lea    rcx,[rip+0x1b028]        # 0x140046520
   14002b4f8:	mov    edx,0x104
   14002b4fd:	call   QWORD PTR [rip+0x3ed5]        # 0x14002f3d8
   14002b503:	lea    r8,[rsp+0x260]
   14002b50b:	lea    rcx,[rip+0x1b00e]        # 0x140046520
   14002b512:	mov    edx,0x104
   14002b517:	call   QWORD PTR [rip+0x3ec3]        # 0x14002f3e0
   14002b51d:	mov    eax,ebx
   14002b51f:	mov    rcx,QWORD PTR [rsp+0xaa0]
   14002b527:	xor    rcx,rsp
   14002b52a:	call   0x14002c960
   14002b52f:	add    rsp,0xab0
   14002b536:	pop    rbx
   14002b537:	ret    
   14002b538:	int3   
   14002b539:	int3   
   14002b53a:	int3   
   14002b53b:	int3   
   14002b53c:	int3   
   14002b53d:	int3   
   14002b53e:	int3   
   14002b53f:	int3   
   14002b540:	mov    QWORD PTR [rsp+0x8],rbx
   14002b545:	mov    QWORD PTR [rsp+0x10],rsi
   14002b54a:	push   rdi
   14002b54b:	sub    rsp,0x20
   14002b54f:	lea    rax,[rip+0x9312]        # 0x140034868
   14002b556:	mov    rdi,rcx
   14002b559:	mov    QWORD PTR [rcx],rax
   14002b55c:	call   0x14002b430
   14002b561:	xor    esi,esi
   14002b563:	lea    r8,[rip+0x1afb6]        # 0x140046520
   14002b56a:	lea    rcx,[rdi+0x18]
   14002b56e:	mov    edx,0x104
   14002b573:	mov    QWORD PTR [rdi+0x8],rsi
   14002b577:	mov    QWORD PTR [rdi+0x10],rsi
   14002b57b:	call   QWORD PTR [rip+0x3e57]        # 0x14002f3d8
   14002b581:	lea    r8,[rip+0x9258]        # 0x1400347e0
   14002b588:	lea    rcx,[rdi+0x18]
   14002b58c:	mov    edx,0x104
   14002b591:	call   QWORD PTR [rip+0x3e49]        # 0x14002f3e0
   14002b597:	call   0x14002b430
   14002b59c:	lea    r8,[rip+0x1af7d]        # 0x140046520
   14002b5a3:	lea    rcx,[rdi+0x230]
   14002b5aa:	mov    edx,0x104
   14002b5af:	mov    QWORD PTR [rdi+0x220],rsi
   14002b5b6:	mov    QWORD PTR [rdi+0x228],rsi
   14002b5bd:	call   QWORD PTR [rip+0x3e15]        # 0x14002f3d8
   14002b5c3:	lea    r8,[rip+0x923e]        # 0x140034808
   14002b5ca:	lea    rcx,[rdi+0x230]
   14002b5d1:	mov    edx,0x104
   14002b5d6:	call   QWORD PTR [rip+0x3e04]        # 0x14002f3e0
   14002b5dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b5e1:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b5e6:	mov    rax,rdi
   14002b5e9:	add    rsp,0x20
   14002b5ed:	pop    rdi
   14002b5ee:	ret    
   14002b5ef:	int3   
   14002b5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b5f5:	push   rdi
   14002b5f6:	sub    rsp,0x20
   14002b5fa:	lea    rax,[rip+0x9267]        # 0x140034868
   14002b601:	mov    rbx,rcx
   14002b604:	mov    edi,edx
   14002b606:	mov    QWORD PTR [rcx],rax
   14002b609:	mov    rcx,QWORD PTR [rcx+0x220]
   14002b610:	test   rcx,rcx
   14002b613:	je     0x14002b61b
   14002b615:	call   QWORD PTR [rip+0x3c55]        # 0x14002f270
   14002b61b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b61f:	test   rcx,rcx
   14002b622:	je     0x14002b62a
   14002b624:	call   QWORD PTR [rip+0x3c46]        # 0x14002f270
   14002b62a:	test   dil,0x1
   14002b62e:	je     0x14002b639
   14002b630:	mov    rcx,rbx
   14002b633:	call   QWORD PTR [rip+0x453f]        # 0x14002fb78
   14002b639:	mov    rax,rbx
   14002b63c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b641:	add    rsp,0x20
   14002b645:	pop    rdi
   14002b646:	ret    
   14002b647:	int3   
   14002b648:	int3   
   14002b649:	int3   
   14002b64a:	int3   
   14002b64b:	int3   
   14002b64c:	int3   
   14002b64d:	int3   
   14002b64e:	int3   
   14002b64f:	int3   
   14002b650:	mov    QWORD PTR [rip+0x17115],0x0        # 0x140042770
   14002b65b:	test   rcx,rcx
   14002b65e:	je     0x14002b66c
   14002b660:	mov    rax,QWORD PTR [rcx]
   14002b663:	mov    edx,0x1
   14002b668:	rex.W jmp QWORD PTR [rax+0x38]
   14002b66c:	ret    
   14002b66d:	int3   
   14002b66e:	int3   
   14002b66f:	int3   
   14002b670:	mov    rcx,QWORD PTR [rdx]
   14002b673:	sub    rcx,QWORD PTR [r8]
   14002b676:	jne    0x14002b680
   14002b678:	mov    rcx,QWORD PTR [rdx+0x8]
   14002b67c:	sub    rcx,QWORD PTR [r8+0x8]
   14002b680:	test   rcx,rcx
   14002b683:	sete   al
   14002b686:	ret    
   14002b687:	int3   
   14002b688:	int3   
   14002b689:	int3   
   14002b68a:	int3   
   14002b68b:	int3   
   14002b68c:	int3   
   14002b68d:	int3   
   14002b68e:	int3   
   14002b68f:	int3   
   14002b690:	mov    QWORD PTR [rsp+0x8],rbx
   14002b695:	push   rdi
   14002b696:	sub    rsp,0x20
   14002b69a:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b69f:	mov    rdi,rdx
   14002b6a2:	mov    rbx,rcx
   14002b6a5:	jne    0x14002b6ba
   14002b6a7:	add    rcx,0x18
   14002b6ab:	call   QWORD PTR [rip+0x3b17]        # 0x14002f1c8
   14002b6b1:	mov    QWORD PTR [rbx+0x8],rax
   14002b6b5:	test   rax,rax
   14002b6b8:	je     0x14002b706
   14002b6ba:	cmp    QWORD PTR [rbx+0x10],0x0
   14002b6bf:	jne    0x14002b6dd
   14002b6c1:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b6c5:	lea    rdx,[rip+0x9104]        # 0x1400347d0
   14002b6cc:	call   QWORD PTR [rip+0x3b96]        # 0x14002f268
   14002b6d2:	test   rax,rax
   14002b6d5:	je     0x14002b6dd
   14002b6d7:	call   rax
   14002b6d9:	mov    QWORD PTR [rbx+0x10],rax
   14002b6dd:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b6e1:	test   rcx,rcx
   14002b6e4:	setne  al
   14002b6e7:	test   al,al
   14002b6e9:	je     0x14002b706
   14002b6eb:	mov    rax,QWORD PTR [rcx]
   14002b6ee:	mov    r9,QWORD PTR [rsp+0x58]
   14002b6f3:	mov    r8,QWORD PTR [rsp+0x50]
   14002b6f8:	mov    rdx,rdi
   14002b6fb:	call   QWORD PTR [rax+0x8]
   14002b6fe:	test   eax,eax
   14002b700:	jns    0x14002b788
   14002b706:	cmp    QWORD PTR [rbx+0x220],0x0
   14002b70e:	jne    0x14002b729
   14002b710:	lea    rcx,[rbx+0x230]
   14002b717:	call   QWORD PTR [rip+0x3aab]        # 0x14002f1c8
   14002b71d:	mov    QWORD PTR [rbx+0x220],rax
   14002b724:	test   rax,rax
   14002b727:	je     0x14002b783
   14002b729:	cmp    QWORD PTR [rbx+0x228],0x0
   14002b731:	jne    0x14002b755
   14002b733:	mov    rcx,QWORD PTR [rbx+0x220]
   14002b73a:	lea    rdx,[rip+0x90b7]        # 0x1400347f8
   14002b741:	call   QWORD PTR [rip+0x3b21]        # 0x14002f268
   14002b747:	test   rax,rax
   14002b74a:	je     0x14002b755
   14002b74c:	call   rax
   14002b74e:	mov    QWORD PTR [rbx+0x228],rax
   14002b755:	mov    rcx,QWORD PTR [rbx+0x228]
   14002b75c:	test   rcx,rcx
   14002b75f:	setne  al
   14002b762:	test   al,al
   14002b764:	je     0x14002b783
   14002b766:	mov    rax,QWORD PTR [rcx]
   14002b769:	mov    r9,QWORD PTR [rsp+0x58]
   14002b76e:	mov    r8,QWORD PTR [rsp+0x50]
   14002b773:	mov    rdx,rdi
   14002b776:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b77b:	add    rsp,0x20
   14002b77f:	pop    rdi
   14002b780:	rex.W jmp QWORD PTR [rax]
   14002b783:	mov    eax,0x80040111
   14002b788:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b78d:	add    rsp,0x20
   14002b791:	pop    rdi
   14002b792:	ret    
   14002b793:	int3   
   14002b794:	int3   
   14002b795:	int3   
   14002b796:	int3   
   14002b797:	int3   
   14002b798:	int3   
   14002b799:	int3   
   14002b79a:	int3   
   14002b79b:	int3   
   14002b79c:	int3   
   14002b79d:	int3   
   14002b79e:	int3   
   14002b79f:	int3   
   14002b7a0:	rex push rbx
   14002b7a2:	sub    rsp,0x20
   14002b7a6:	cmp    WORD PTR [rip+0x17f62],0x0        # 0x140043710
   14002b7ae:	mov    rbx,rcx
   14002b7b1:	jne    0x14002b839
   14002b7b7:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b7bc:	jne    0x14002b7d1
   14002b7be:	add    rcx,0x18
   14002b7c2:	call   QWORD PTR [rip+0x3a00]        # 0x14002f1c8
   14002b7c8:	mov    QWORD PTR [rbx+0x8],rax
   14002b7cc:	test   rax,rax
   14002b7cf:	je     0x14002b7f4
   14002b7d1:	cmp    QWORD PTR [rbx+0x10],0x0
   14002b7d6:	jne    0x14002b7f4
   14002b7d8:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b7dc:	lea    rdx,[rip+0x8fed]        # 0x1400347d0
   14002b7e3:	call   QWORD PTR [rip+0x3a7f]        # 0x14002f268
   14002b7e9:	test   rax,rax
   14002b7ec:	je     0x14002b7f4
   14002b7ee:	call   rax
   14002b7f0:	mov    QWORD PTR [rbx+0x10],rax
   14002b7f4:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b7f8:	test   rcx,rcx
   14002b7fb:	je     0x14002b839
   14002b7fd:	mov    rax,QWORD PTR [rcx]
   14002b800:	call   QWORD PTR [rax+0x10]
   14002b803:	lea    rbx,[rip+0x17f06]        # 0x140043710
   14002b80a:	mov    edx,0x104
   14002b80f:	mov    r8,rax
   14002b812:	mov    rcx,rbx
   14002b815:	call   QWORD PTR [rip+0x3bbd]        # 0x14002f3d8
   14002b81b:	lea    r8,[rip+0x901e]        # 0x140034840
   14002b822:	mov    edx,0x104
   14002b827:	mov    rcx,rbx
   14002b82a:	call   QWORD PTR [rip+0x3bb0]        # 0x14002f3e0
   14002b830:	mov    rax,rbx
   14002b833:	add    rsp,0x20
   14002b837:	pop    rbx
   14002b838:	ret    
   14002b839:	lea    rax,[rip+0x17ed0]        # 0x140043710
   14002b840:	add    rsp,0x20
   14002b844:	pop    rbx
   14002b845:	ret    
   14002b846:	int3   
   14002b847:	int3   
   14002b848:	int3   
   14002b849:	int3   
   14002b84a:	int3   
   14002b84b:	int3   
   14002b84c:	int3   
   14002b84d:	int3   
   14002b84e:	int3   
   14002b84f:	int3   
   14002b850:	rex push rbx
   14002b852:	sub    rsp,0x20
   14002b856:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b85b:	mov    rbx,rcx
   14002b85e:	jne    0x14002b873
   14002b860:	add    rcx,0x18
   14002b864:	call   QWORD PTR [rip+0x395e]        # 0x14002f1c8
   14002b86a:	mov    QWORD PTR [rbx+0x8],rax
   14002b86e:	test   rax,rax
   14002b871:	je     0x14002b896
   14002b873:	cmp    QWORD PTR [rbx+0x10],0x0
   14002b878:	jne    0x14002b896
   14002b87a:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b87e:	lea    rdx,[rip+0x8f4b]        # 0x1400347d0
   14002b885:	call   QWORD PTR [rip+0x39dd]        # 0x14002f268
   14002b88b:	test   rax,rax
   14002b88e:	je     0x14002b896
   14002b890:	call   rax
   14002b892:	mov    QWORD PTR [rbx+0x10],rax
   14002b896:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b89a:	test   rcx,rcx
   14002b89d:	je     0x14002b8ab
   14002b89f:	mov    rax,QWORD PTR [rcx]
   14002b8a2:	add    rsp,0x20
   14002b8a6:	pop    rbx
   14002b8a7:	rex.W jmp QWORD PTR [rax+0x18]
   14002b8ab:	lea    rax,[rip+0x8a1e]        # 0x1400342d0
   14002b8b2:	add    rsp,0x20
   14002b8b6:	pop    rbx
   14002b8b7:	ret    
   14002b8b8:	int3   
   14002b8b9:	int3   
   14002b8ba:	int3   
   14002b8bb:	int3   
   14002b8bc:	int3   
   14002b8bd:	int3   
   14002b8be:	int3   
   14002b8bf:	int3   
   14002b8c0:	rex push rbx
   14002b8c2:	sub    rsp,0x20
   14002b8c6:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b8cb:	mov    rbx,rcx
   14002b8ce:	jne    0x14002b8e3
   14002b8d0:	add    rcx,0x18
   14002b8d4:	call   QWORD PTR [rip+0x38ee]        # 0x14002f1c8
   14002b8da:	mov    QWORD PTR [rbx+0x8],rax
   14002b8de:	test   rax,rax
   14002b8e1:	je     0x14002b906
   14002b8e3:	cmp    QWORD PTR [rbx+0x10],0x0
   14002b8e8:	jne    0x14002b906
   14002b8ea:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b8ee:	lea    rdx,[rip+0x8edb]        # 0x1400347d0
   14002b8f5:	call   QWORD PTR [rip+0x396d]        # 0x14002f268
   14002b8fb:	test   rax,rax
   14002b8fe:	je     0x14002b906
   14002b900:	call   rax
   14002b902:	mov    QWORD PTR [rbx+0x10],rax
   14002b906:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b90a:	test   rcx,rcx
   14002b90d:	je     0x14002b91b
   14002b90f:	mov    rax,QWORD PTR [rcx]
   14002b912:	add    rsp,0x20
   14002b916:	pop    rbx
   14002b917:	rex.W jmp QWORD PTR [rax+0x20]
   14002b91b:	lea    rax,[rip+0x89ae]        # 0x1400342d0
   14002b922:	add    rsp,0x20
   14002b926:	pop    rbx
   14002b927:	ret    
   14002b928:	int3   
   14002b929:	int3   
   14002b92a:	int3   
   14002b92b:	int3   
   14002b92c:	int3   
   14002b92d:	int3   
   14002b92e:	int3   
   14002b92f:	int3   
   14002b930:	rex push rbx
   14002b932:	sub    rsp,0x20
   14002b936:	cmp    WORD PTR [rip+0x17fe2],0x0        # 0x140043920
   14002b93e:	mov    rbx,rcx
   14002b941:	jne    0x14002b9c9
   14002b947:	cmp    QWORD PTR [rcx+0x8],0x0
   14002b94c:	jne    0x14002b961
   14002b94e:	add    rcx,0x18
   14002b952:	call   QWORD PTR [rip+0x3870]        # 0x14002f1c8
   14002b958:	mov    QWORD PTR [rbx+0x8],rax
   14002b95c:	test   rax,rax
   14002b95f:	je     0x14002b984
   14002b961:	cmp    QWORD PTR [rbx+0x10],0x0
   14002b966:	jne    0x14002b984
   14002b968:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b96c:	lea    rdx,[rip+0x8e5d]        # 0x1400347d0
   14002b973:	call   QWORD PTR [rip+0x38ef]        # 0x14002f268
   14002b979:	test   rax,rax
   14002b97c:	je     0x14002b984
   14002b97e:	call   rax
   14002b980:	mov    QWORD PTR [rbx+0x10],rax
   14002b984:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b988:	test   rcx,rcx
   14002b98b:	je     0x14002b9c9
   14002b98d:	mov    rax,QWORD PTR [rcx]
   14002b990:	call   QWORD PTR [rax+0x28]
   14002b993:	lea    rbx,[rip+0x17f86]        # 0x140043920
   14002b99a:	mov    edx,0x104
   14002b99f:	mov    r8,rax
   14002b9a2:	mov    rcx,rbx
   14002b9a5:	call   QWORD PTR [rip+0x3a2d]        # 0x14002f3d8
   14002b9ab:	lea    r8,[rip+0x8e6e]        # 0x140034820
   14002b9b2:	mov    edx,0x104
   14002b9b7:	mov    rcx,rbx
   14002b9ba:	call   QWORD PTR [rip+0x3a20]        # 0x14002f3e0
   14002b9c0:	mov    rax,rbx
   14002b9c3:	add    rsp,0x20
   14002b9c7:	pop    rbx
   14002b9c8:	ret    
   14002b9c9:	lea    rax,[rip+0x17f50]        # 0x140043920
   14002b9d0:	add    rsp,0x20
   14002b9d4:	pop    rbx
   14002b9d5:	ret    
   14002b9d6:	int3   
   14002b9d7:	int3   
   14002b9d8:	int3   
   14002b9d9:	int3   
   14002b9da:	int3   
   14002b9db:	int3   
   14002b9dc:	int3   
   14002b9dd:	int3   
   14002b9de:	int3   
   14002b9df:	int3   
   14002b9e0:	mov    rax,QWORD PTR [rdx]
   14002b9e3:	mov    QWORD PTR [rcx],rax
   14002b9e6:	mov    rax,rcx
   14002b9e9:	ret    
   14002b9ea:	int3   
   14002b9eb:	int3   
   14002b9ec:	int3   
   14002b9ed:	int3   
   14002b9ee:	int3   
   14002b9ef:	int3   
   14002b9f0:	mov    r11,rsp
   14002b9f3:	push   rdi
   14002b9f4:	sub    rsp,0x290
   14002b9fb:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14002ba04:	mov    QWORD PTR [r11+0x10],rbx
   14002ba08:	mov    QWORD PTR [r11+0x20],rsi
   14002ba0c:	mov    rax,QWORD PTR [rip+0x105ed]        # 0x14003c000
   14002ba13:	xor    rax,rsp
   14002ba16:	mov    QWORD PTR [rsp+0x280],rax
   14002ba1e:	mov    rdi,r8
   14002ba21:	mov    rbx,rcx
   14002ba24:	xor    r8d,r8d
   14002ba27:	lea    rdx,[rip+0x537a]        # 0x140030da8
   14002ba2e:	lea    rcx,[r11-0x128]
   14002ba35:	call   QWORD PTR [rip+0x3add]        # 0x14002f518
   14002ba3b:	lea    rax,[rsp+0x38]
   14002ba40:	mov    QWORD PTR [rsp+0x20],rax
   14002ba45:	mov    r9d,0x20019
   14002ba4b:	xor    r8d,r8d
   14002ba4e:	lea    rdx,[rsp+0x170]
   14002ba56:	mov    rcx,rbx
   14002ba59:	call   QWORD PTR [rip+0x35a9]        # 0x14002f008
   14002ba5f:	test   eax,eax
   14002ba61:	jne    0x14002baa8
   14002ba63:	mov    DWORD PTR [rsp+0x30],0x104
   14002ba6b:	lea    rax,[rsp+0x30]
   14002ba70:	mov    QWORD PTR [rsp+0x28],rax
   14002ba75:	lea    rax,[rsp+0x60]
   14002ba7a:	mov    QWORD PTR [rsp+0x20],rax
   14002ba7f:	lea    r9,[rsp+0x44]
   14002ba84:	xor    r8d,r8d
   14002ba87:	lea    rdx,[rip+0x560a]        # 0x140031098
   14002ba8e:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ba93:	call   QWORD PTR [rip+0x3577]        # 0x14002f010
   14002ba99:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ba9e:	test   eax,eax
   14002baa0:	je     0x14002baaf
   14002baa2:	call   QWORD PTR [rip+0x3578]        # 0x14002f020
   14002baa8:	xor    eax,eax
   14002baaa:	jmp    0x14002bb57
   14002baaf:	mov    DWORD PTR [rsp+0x30],0x4
   14002bab7:	lea    rax,[rsp+0x30]
   14002babc:	mov    QWORD PTR [rsp+0x28],rax
   14002bac1:	lea    rax,[rsp+0x40]
   14002bac6:	mov    QWORD PTR [rsp+0x20],rax
   14002bacb:	lea    r9,[rsp+0x44]
   14002bad0:	xor    r8d,r8d
   14002bad3:	lea    rdx,[rip+0x52de]        # 0x140030db8
   14002bada:	call   QWORD PTR [rip+0x3530]        # 0x14002f010
   14002bae0:	xor    esi,esi
   14002bae2:	test   eax,eax
   14002bae4:	jne    0x14002baf3
   14002bae6:	mov    eax,esi
   14002bae8:	cmp    DWORD PTR [rsp+0x40],eax
   14002baec:	setne  al
   14002baef:	mov    DWORD PTR [rdi],eax
   14002baf1:	jmp    0x14002baf9
   14002baf3:	mov    DWORD PTR [rdi],0x1
   14002baf9:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bafe:	call   QWORD PTR [rip+0x351c]        # 0x14002f020
   14002bb04:	mov    ecx,0x10
   14002bb09:	call   QWORD PTR [rip+0x3e89]        # 0x14002f998
   14002bb0f:	mov    rbx,rax
   14002bb12:	mov    QWORD PTR [rsp+0x50],rax
   14002bb17:	test   rax,rax
   14002bb1a:	je     0x14002bb51
   14002bb1c:	mov    WORD PTR [rax],si
   14002bb1f:	mov    QWORD PTR [rax+0x8],rsi
   14002bb23:	lea    rcx,[rsp+0x60]
   14002bb28:	call   QWORD PTR [rip+0x3752]        # 0x14002f280
   14002bb2e:	test   eax,eax
   14002bb30:	jle    0x14002bb54
   14002bb32:	inc    eax
   14002bb34:	movsxd rcx,eax
   14002bb37:	call   QWORD PTR [rip+0x3e5b]        # 0x14002f998
   14002bb3d:	mov    QWORD PTR [rbx+0x8],rax
   14002bb41:	lea    rdx,[rsp+0x60]
   14002bb46:	mov    rcx,rax
   14002bb49:	call   QWORD PTR [rip+0x3709]        # 0x14002f258
   14002bb4f:	jmp    0x14002bb54
   14002bb51:	mov    rbx,rsi
   14002bb54:	mov    rax,rbx
   14002bb57:	mov    rcx,QWORD PTR [rsp+0x280]
   14002bb5f:	xor    rcx,rsp
   14002bb62:	call   0x14002c960
   14002bb67:	lea    r11,[rsp+0x290]
   14002bb6f:	mov    rbx,QWORD PTR [r11+0x18]
   14002bb73:	mov    rsi,QWORD PTR [r11+0x28]
   14002bb77:	mov    rsp,r11
   14002bb7a:	pop    rdi
   14002bb7b:	ret    
   14002bb7c:	int3   
   14002bb7d:	int3   
   14002bb7e:	int3   
   14002bb7f:	int3   
   14002bb80:	rex push rbx
   14002bb82:	sub    rsp,0x180
   14002bb89:	mov    rax,QWORD PTR [rip+0x10470]        # 0x14003c000
   14002bb90:	xor    rax,rsp
   14002bb93:	mov    QWORD PTR [rsp+0x170],rax
   14002bb9b:	movzx  ebx,dx
   14002bb9e:	call   0x14002b210
   14002bba3:	lea    r8,[rsp+0x60]
   14002bba8:	sub    r8,rax
   14002bbab:	nop    DWORD PTR [rax+rax*1+0x0]
   14002bbb0:	movzx  ecx,BYTE PTR [rax]
   14002bbb3:	lea    rax,[rax+0x1]
   14002bbb7:	mov    BYTE PTR [r8+rax*1-0x1],cl
   14002bbbc:	test   cl,cl
   14002bbbe:	jne    0x14002bbb0
   14002bbc0:	lea    rax,[rsp+0x60]
   14002bbc5:	dec    rax
   14002bbc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002bbd0:	cmp    BYTE PTR [rax+0x1],0x0
   14002bbd4:	lea    rax,[rax+0x1]
   14002bbd8:	jne    0x14002bbd0
   14002bbda:	lea    r8,[rip+0x49c7]        # 0x1400305a8
   14002bbe1:	xor    edx,edx
   14002bbe3:	nop    DWORD PTR [rax+0x0]
   14002bbe7:	nop    WORD PTR [rax+rax*1+0x0]
   14002bbf0:	movzx  ecx,BYTE PTR [r8+rdx*1]
   14002bbf5:	lea    rdx,[rdx+0x1]
   14002bbf9:	mov    BYTE PTR [rax+rdx*1-0x1],cl
   14002bbfd:	test   cl,cl
   14002bbff:	jne    0x14002bbf0
   14002bc01:	lea    rdx,[rip+0x8ca0]        # 0x1400348a8
   14002bc08:	lea    rcx,[rsp+0x60]
   14002bc0d:	call   QWORD PTR [rip+0x37bd]        # 0x14002f3d0
   14002bc13:	lea    rdx,[rsp+0x60]
   14002bc18:	xor    r9d,r9d
   14002bc1b:	mov    WORD PTR [rax],bx
   14002bc1e:	lea    rax,[rsp+0x58]
   14002bc23:	xor    r8d,r8d
   14002bc26:	mov    QWORD PTR [rsp+0x40],rax
   14002bc2b:	lea    rax,[rsp+0x50]
   14002bc30:	mov    rcx,0xffffffff80000001
   14002bc37:	mov    QWORD PTR [rsp+0x38],rax
   14002bc3c:	xor    eax,eax
   14002bc3e:	mov    QWORD PTR [rsp+0x30],rax
   14002bc43:	mov    DWORD PTR [rsp+0x28],0x2001f
   14002bc4b:	mov    DWORD PTR [rsp+0x20],eax
   14002bc4f:	call   QWORD PTR [rip+0x33e3]        # 0x14002f038
   14002bc55:	test   eax,eax
   14002bc57:	je     0x14002bc5d
   14002bc59:	xor    eax,eax
   14002bc5b:	jmp    0x14002bc6c
   14002bc5d:	mov    rcx,QWORD PTR [rsp+0x50]
   14002bc62:	call   0x14002bc90
   14002bc67:	mov    rax,QWORD PTR [rsp+0x50]
   14002bc6c:	mov    rcx,QWORD PTR [rsp+0x170]
   14002bc74:	xor    rcx,rsp
   14002bc77:	call   0x14002c960
   14002bc7c:	add    rsp,0x180
   14002bc83:	pop    rbx
   14002bc84:	ret    
   14002bc85:	int3   
   14002bc86:	int3   
   14002bc87:	int3   
   14002bc88:	int3   
   14002bc89:	int3   
   14002bc8a:	int3   
   14002bc8b:	int3   
   14002bc8c:	int3   
   14002bc8d:	int3   
   14002bc8e:	int3   
   14002bc8f:	int3   
   14002bc90:	mov    QWORD PTR [rsp+0x18],rbx
   14002bc95:	push   rbp
   14002bc96:	push   rsi
   14002bc97:	push   rdi
   14002bc98:	lea    rbp,[rsp-0x90]
   14002bca0:	sub    rsp,0x190
   14002bca7:	mov    rax,QWORD PTR [rip+0x10352]        # 0x14003c000
   14002bcae:	xor    rax,rsp
   14002bcb1:	mov    QWORD PTR [rbp+0x80],rax
   14002bcb8:	mov    rsi,rcx
   14002bcbb:	lea    rdx,[rip+0x50e6]        # 0x140030da8
   14002bcc2:	lea    rcx,[rsp+0x50]
   14002bcc7:	xor    edi,edi
   14002bcc9:	xor    r8d,r8d
   14002bccc:	mov    DWORD PTR [rsp+0x30],0x104
   14002bcd4:	mov    ebx,edi
   14002bcd6:	call   QWORD PTR [rip+0x383c]        # 0x14002f518
   14002bcdc:	lea    rax,[rsp+0x38]
   14002bce1:	lea    rdx,[rsp+0x50]
   14002bce6:	mov    r9d,0x20019
   14002bcec:	xor    r8d,r8d
   14002bcef:	mov    rcx,rsi
   14002bcf2:	mov    QWORD PTR [rsp+0x20],rax
   14002bcf7:	call   QWORD PTR [rip+0x330b]        # 0x14002f008
   14002bcfd:	test   eax,eax
   14002bcff:	jne    0x14002bebb
   14002bd05:	mov    QWORD PTR [rsp+0x1b8],r14
   14002bd0d:	lea    r14d,[rdi+0x1]
   14002bd11:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bd16:	lea    rax,[rsp+0x30]
   14002bd1b:	lea    r9,[rsp+0x48]
   14002bd20:	mov    QWORD PTR [rsp+0x28],rax
   14002bd25:	lea    rax,[rsp+0x70]
   14002bd2a:	lea    rdx,[rip+0x5367]        # 0x140031098
   14002bd31:	xor    r8d,r8d
   14002bd34:	mov    QWORD PTR [rsp+0x20],rax
   14002bd39:	call   QWORD PTR [rip+0x32d1]        # 0x14002f010
   14002bd3f:	test   eax,eax
   14002bd41:	jne    0x14002be60
   14002bd47:	lea    rcx,[rsp+0x70]
   14002bd4c:	call   QWORD PTR [rip+0x3486]        # 0x14002f1d8
   14002bd52:	cmp    eax,0xffffffff
   14002bd55:	je     0x14002be60
   14002bd5b:	cmp    edi,ebx
   14002bd5d:	jne    0x14002bd66
   14002bd5f:	inc    ebx
   14002bd61:	jmp    0x14002be60
   14002bd66:	lea    rdx,[rip+0x503b]        # 0x140030da8
   14002bd6d:	lea    rcx,[rsp+0x50]
   14002bd72:	mov    r8d,ebx
   14002bd75:	call   QWORD PTR [rip+0x379d]        # 0x14002f518
   14002bd7b:	lea    rax,[rsp+0x40]
   14002bd80:	lea    rdx,[rsp+0x50]
   14002bd85:	mov    r9d,0x20006
   14002bd8b:	xor    r8d,r8d
   14002bd8e:	mov    rcx,rsi
   14002bd91:	mov    QWORD PTR [rsp+0x20],rax
   14002bd96:	call   QWORD PTR [rip+0x326c]        # 0x14002f008
   14002bd9c:	test   eax,eax
   14002bd9e:	jne    0x14002be60
   14002bda4:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bda9:	lea    rax,[rsp+0x30]
   14002bdae:	lea    r9,[rsp+0x48]
   14002bdb3:	mov    QWORD PTR [rsp+0x28],rax
   14002bdb8:	lea    rax,[rsp+0x34]
   14002bdbd:	lea    rdx,[rip+0x4ff4]        # 0x140030db8
   14002bdc4:	xor    r8d,r8d
   14002bdc7:	mov    DWORD PTR [rsp+0x30],0x4
   14002bdcf:	mov    QWORD PTR [rsp+0x20],rax
   14002bdd4:	call   QWORD PTR [rip+0x3236]        # 0x14002f010
   14002bdda:	mov    ecx,DWORD PTR [rsp+0x34]
   14002bdde:	test   eax,eax
   14002bde0:	cmovne ecx,r14d
   14002bde4:	or     rax,0xffffffffffffffff
   14002bde8:	mov    DWORD PTR [rsp+0x34],ecx
   14002bdec:	lea    rcx,[rsp+0x70]
   14002bdf1:	inc    rax
   14002bdf4:	cmp    BYTE PTR [rcx+rax*1],0x0
   14002bdf8:	jne    0x14002bdf1
   14002bdfa:	mov    rcx,QWORD PTR [rsp+0x40]
   14002bdff:	inc    eax
   14002be01:	lea    rdx,[rip+0x5290]        # 0x140031098
   14002be08:	mov    DWORD PTR [rsp+0x28],eax
   14002be0c:	lea    rax,[rsp+0x70]
   14002be11:	mov    r9d,r14d
   14002be14:	xor    r8d,r8d
   14002be17:	mov    QWORD PTR [rsp+0x20],rax
   14002be1c:	call   QWORD PTR [rip+0x320e]        # 0x14002f030
   14002be22:	test   eax,eax
   14002be24:	jne    0x14002be55
   14002be26:	mov    rcx,QWORD PTR [rsp+0x40]
   14002be2b:	lea    rax,[rsp+0x34]
   14002be30:	lea    rdx,[rip+0x4f81]        # 0x140030db8
   14002be37:	mov    r9d,0x3
   14002be3d:	xor    r8d,r8d
   14002be40:	mov    DWORD PTR [rsp+0x28],0x4
   14002be48:	mov    QWORD PTR [rsp+0x20],rax
   14002be4d:	call   QWORD PTR [rip+0x31dd]        # 0x14002f030
   14002be53:	inc    ebx
   14002be55:	mov    rcx,QWORD PTR [rsp+0x40]
   14002be5a:	call   QWORD PTR [rip+0x31c0]        # 0x14002f020
   14002be60:	mov    rcx,QWORD PTR [rsp+0x38]
   14002be65:	call   QWORD PTR [rip+0x31b5]        # 0x14002f020
   14002be6b:	inc    edi
   14002be6d:	lea    rdx,[rip+0x4f34]        # 0x140030da8
   14002be74:	lea    rcx,[rsp+0x50]
   14002be79:	mov    r8d,edi
   14002be7c:	mov    DWORD PTR [rsp+0x30],0x104
   14002be84:	call   QWORD PTR [rip+0x368e]        # 0x14002f518
   14002be8a:	lea    rax,[rsp+0x38]
   14002be8f:	lea    rdx,[rsp+0x50]
   14002be94:	mov    r9d,0x20019
   14002be9a:	xor    r8d,r8d
   14002be9d:	mov    rcx,rsi
   14002bea0:	mov    QWORD PTR [rsp+0x20],rax
   14002bea5:	call   QWORD PTR [rip+0x315d]        # 0x14002f008
   14002beab:	test   eax,eax
   14002bead:	je     0x14002bd11
   14002beb3:	mov    r14,QWORD PTR [rsp+0x1b8]
   14002bebb:	cmp    ebx,edi
   14002bebd:	jge    0x14002bee9
   14002bebf:	nop
   14002bec0:	lea    rdx,[rip+0x4ee1]        # 0x140030da8
   14002bec7:	lea    rcx,[rsp+0x50]
   14002becc:	mov    r8d,ebx
   14002becf:	call   QWORD PTR [rip+0x3643]        # 0x14002f518
   14002bed5:	lea    rdx,[rsp+0x50]
   14002beda:	mov    rcx,rsi
   14002bedd:	call   QWORD PTR [rip+0x311d]        # 0x14002f000
   14002bee3:	inc    ebx
   14002bee5:	cmp    ebx,edi
   14002bee7:	jl     0x14002bec0
   14002bee9:	mov    rcx,QWORD PTR [rbp+0x80]
   14002bef0:	xor    rcx,rsp
   14002bef3:	call   0x14002c960
   14002bef8:	mov    rbx,QWORD PTR [rsp+0x1c0]
   14002bf00:	add    rsp,0x190
   14002bf07:	pop    rdi
   14002bf08:	pop    rsi
   14002bf09:	pop    rbp
   14002bf0a:	ret    
   14002bf0b:	int3   
   14002bf0c:	mov    rax,rsp
   14002bf0f:	mov    QWORD PTR [rax+0x10],rbx
   14002bf13:	mov    QWORD PTR [rax+0x18],rsi
   14002bf17:	mov    QWORD PTR [rax+0x20],rdi
   14002bf1b:	push   rbp
   14002bf1c:	lea    rbp,[rax-0x68]
   14002bf20:	sub    rsp,0x160
   14002bf27:	mov    rax,QWORD PTR [rip+0x100d2]        # 0x14003c000
   14002bf2e:	xor    rax,rsp
   14002bf31:	mov    QWORD PTR [rbp+0x50],rax
   14002bf35:	lea    rax,[rsp+0x38]
   14002bf3a:	mov    rdi,rcx
   14002bf3d:	lea    rdx,[rip+0x3e74]        # 0x14002fdb8
   14002bf44:	mov    r9d,0x20019
   14002bf4a:	xor    r8d,r8d
   14002bf4d:	mov    rcx,0xffffffff80000000
   14002bf54:	mov    QWORD PTR [rsp+0x20],rax
   14002bf59:	xor    ebx,ebx
   14002bf5b:	call   QWORD PTR [rip+0x30a7]        # 0x14002f008
   14002bf61:	test   eax,eax
   14002bf63:	jne    0x14002c013
   14002bf69:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bf6e:	lea    rax,[rsp+0x34]
   14002bf73:	lea    r9,[rsp+0x30]
   14002bf78:	mov    QWORD PTR [rsp+0x28],rax
   14002bf7d:	lea    rax,[rsp+0x40]
   14002bf82:	mov    esi,0x104
   14002bf87:	xor    r8d,r8d
   14002bf8a:	xor    edx,edx
   14002bf8c:	mov    DWORD PTR [rsp+0x30],0x1
   14002bf94:	mov    QWORD PTR [rsp+0x20],rax
   14002bf99:	mov    DWORD PTR [rsp+0x34],esi
   14002bf9d:	call   QWORD PTR [rip+0x306d]        # 0x14002f010
   14002bfa3:	test   eax,eax
   14002bfa5:	jne    0x14002c004
   14002bfa7:	cmp    DWORD PTR [rsp+0x30],0x2
   14002bfac:	mov    BYTE PTR [rbp+0x43],bl
   14002bfaf:	lea    rcx,[rsp+0x40]
   14002bfb4:	jne    0x14002bfce
   14002bfb6:	mov    r8d,esi
   14002bfb9:	mov    rdx,rdi
   14002bfbc:	call   QWORD PTR [rip+0x31f6]        # 0x14002f1b8
   14002bfc2:	dec    eax
   14002bfc4:	cmp    eax,0x103
   14002bfc9:	setbe  bl
   14002bfcc:	jmp    0x14002c004
   14002bfce:	mov    edx,ebx
   14002bfd0:	sub    rcx,rdi
   14002bfd3:	lea    rax,[rsi+0x7ffffefa]
   14002bfda:	test   rax,rax
   14002bfdd:	je     0x14002bff0
   14002bfdf:	mov    al,BYTE PTR [rcx+rdi*1]
   14002bfe2:	test   al,al
   14002bfe4:	je     0x14002bff0
   14002bfe6:	mov    BYTE PTR [rdi],al
   14002bfe8:	inc    rdi
   14002bfeb:	dec    rsi
   14002bfee:	jne    0x14002bfd3
   14002bff0:	test   rsi,rsi
   14002bff3:	jne    0x14002bffd
   14002bff5:	dec    rdi
   14002bff8:	mov    edx,0x8007007a
   14002bffd:	test   edx,edx
   14002bfff:	mov    BYTE PTR [rdi],bl
   14002c001:	setns  bl
   14002c004:	mov    rcx,QWORD PTR [rsp+0x38]
   14002c009:	call   QWORD PTR [rip+0x3011]        # 0x14002f020
   14002c00f:	mov    eax,ebx
   14002c011:	jmp    0x14002c015
   14002c013:	xor    eax,eax
   14002c015:	mov    rcx,QWORD PTR [rbp+0x50]
   14002c019:	xor    rcx,rsp
   14002c01c:	call   0x14002c960
   14002c021:	lea    r11,[rsp+0x160]
   14002c029:	mov    rbx,QWORD PTR [r11+0x18]
   14002c02d:	mov    rsi,QWORD PTR [r11+0x20]
   14002c031:	mov    rdi,QWORD PTR [r11+0x28]
   14002c035:	mov    rsp,r11
   14002c038:	pop    rbp
   14002c039:	ret    
   14002c03a:	int3   
   14002c03b:	int3   
   14002c03c:	rex push rbx
   14002c03e:	push   rbp
   14002c03f:	push   rsi
   14002c040:	push   rdi
   14002c041:	sub    rsp,0x148
   14002c048:	mov    rax,QWORD PTR [rip+0xffb1]        # 0x14003c000
   14002c04f:	xor    rax,rsp
   14002c052:	mov    QWORD PTR [rsp+0x130],rax
   14002c05a:	mov    rax,QWORD PTR [rip+0x117f7]        # 0x14003d858
   14002c061:	mov    rbp,r9
   14002c064:	mov    esi,r8d
   14002c067:	mov    rdi,rdx
   14002c06a:	mov    rbx,rcx
   14002c06d:	test   rax,rax
   14002c070:	jne    0x14002c0d9
   14002c072:	cmp    DWORD PTR [rip+0x117d8],eax        # 0x14003d850
   14002c078:	jne    0x14002c0d9
   14002c07a:	lea    rcx,[rsp+0x20]
   14002c07f:	call   0x14002bf0c
   14002c084:	test   eax,eax
   14002c086:	je     0x14002c0a1
   14002c088:	lea    rcx,[rsp+0x20]
   14002c08d:	xor    r8d,r8d
   14002c090:	xor    edx,edx
   14002c092:	call   QWORD PTR [rip+0x3128]        # 0x14002f1c0
   14002c098:	mov    QWORD PTR [rip+0x117b9],rax        # 0x14003d858
   14002c09f:	jmp    0x14002c0a8
   14002c0a1:	mov    rax,QWORD PTR [rip+0x117b0]        # 0x14003d858
   14002c0a8:	test   rax,rax
   14002c0ab:	jne    0x14002c0d9
   14002c0ad:	lea    rcx,[rip+0x3d44]        # 0x14002fdf8
   14002c0b4:	xor    r8d,r8d
   14002c0b7:	xor    edx,edx
   14002c0b9:	call   QWORD PTR [rip+0x3101]        # 0x14002f1c0
   14002c0bf:	mov    QWORD PTR [rip+0x11792],rax        # 0x14003d858
   14002c0c6:	test   rax,rax
   14002c0c9:	jne    0x14002c0d9
   14002c0cb:	mov    DWORD PTR [rip+0x1177b],0x1        # 0x14003d850
   14002c0d5:	xor    eax,eax
   14002c0d7:	jmp    0x14002c110
   14002c0d9:	mov    r10,QWORD PTR [rip+0x11768]        # 0x14003d848
   14002c0e0:	test   r10,r10
   14002c0e3:	jne    0x14002c101
   14002c0e5:	lea    edx,[r10+0xf]
   14002c0e9:	mov    rcx,rax
   14002c0ec:	call   QWORD PTR [rip+0x3176]        # 0x14002f268
   14002c0f2:	mov    r10,rax
   14002c0f5:	mov    QWORD PTR [rip+0x1174c],rax        # 0x14003d848
   14002c0fc:	test   rax,rax
   14002c0ff:	je     0x14002c0cb
   14002c101:	mov    r9,rbp
   14002c104:	mov    r8d,esi
   14002c107:	mov    rdx,rdi
   14002c10a:	mov    rcx,rbx
   14002c10d:	call   r10
   14002c110:	mov    rcx,QWORD PTR [rsp+0x130]
   14002c118:	xor    rcx,rsp
   14002c11b:	call   0x14002c960
   14002c120:	add    rsp,0x148
   14002c127:	pop    rdi
   14002c128:	pop    rsi
   14002c129:	pop    rbp
   14002c12a:	pop    rbx
   14002c12b:	ret    
   14002c12c:	jmp    QWORD PTR [rip+0x2f7e]        # 0x14002f0b0
   14002c132:	jmp    QWORD PTR [rip+0x2f80]        # 0x14002f0b8
   14002c138:	jmp    QWORD PTR [rip+0x2f9a]        # 0x14002f0d8
   14002c13e:	jmp    QWORD PTR [rip+0x2f9c]        # 0x14002f0e0
   14002c144:	jmp    QWORD PTR [rip+0x2f9e]        # 0x14002f0e8
   14002c14a:	jmp    QWORD PTR [rip+0x2fa0]        # 0x14002f0f0
   14002c150:	jmp    QWORD PTR [rip+0x2fa2]        # 0x14002f0f8
   14002c156:	jmp    QWORD PTR [rip+0x2fa4]        # 0x14002f100
   14002c15c:	jmp    QWORD PTR [rip+0x2fa6]        # 0x14002f108
   14002c162:	jmp    QWORD PTR [rip+0x2fa8]        # 0x14002f110
   14002c168:	jmp    QWORD PTR [rip+0x2faa]        # 0x14002f118
   14002c16e:	jmp    QWORD PTR [rip+0x2fac]        # 0x14002f120
   14002c174:	jmp    QWORD PTR [rip+0x2fae]        # 0x14002f128
   14002c17a:	jmp    QWORD PTR [rip+0x2fb0]        # 0x14002f130
   14002c180:	jmp    QWORD PTR [rip+0x2fb2]        # 0x14002f138
   14002c186:	jmp    QWORD PTR [rip+0x2ed4]        # 0x14002f060
   14002c18c:	jmp    QWORD PTR [rip+0x2f16]        # 0x14002f0a8
   14002c192:	jmp    QWORD PTR [rip+0x2eb8]        # 0x14002f050
   14002c198:	jmp    QWORD PTR [rip+0x2eaa]        # 0x14002f048
   14002c19e:	jmp    QWORD PTR [rip+0x2eb4]        # 0x14002f058
   14002c1a4:	jmp    QWORD PTR [rip+0x2eee]        # 0x14002f098
   14002c1aa:	jmp    QWORD PTR [rip+0x2ef0]        # 0x14002f0a0
   14002c1b0:	jmp    QWORD PTR [rip+0x39c2]        # 0x14002fb78
   14002c1b6:	jmp    QWORD PTR [rip+0x39b4]        # 0x14002fb70
   14002c1bc:	jmp    QWORD PTR [rip+0x39a6]        # 0x14002fb68
   14002c1c2:	jmp    QWORD PTR [rip+0x3998]        # 0x14002fb60
   14002c1c8:	jmp    QWORD PTR [rip+0x398a]        # 0x14002fb58
   14002c1ce:	jmp    QWORD PTR [rip+0x397c]        # 0x14002fb50
   14002c1d4:	jmp    QWORD PTR [rip+0x396e]        # 0x14002fb48
   14002c1da:	jmp    QWORD PTR [rip+0x3960]        # 0x14002fb40
   14002c1e0:	jmp    QWORD PTR [rip+0x3952]        # 0x14002fb38
   14002c1e6:	jmp    QWORD PTR [rip+0x3944]        # 0x14002fb30
   14002c1ec:	jmp    QWORD PTR [rip+0x3936]        # 0x14002fb28
   14002c1f2:	jmp    QWORD PTR [rip+0x3928]        # 0x14002fb20
   14002c1f8:	jmp    QWORD PTR [rip+0x391a]        # 0x14002fb18
   14002c1fe:	jmp    QWORD PTR [rip+0x390c]        # 0x14002fb10
   14002c204:	jmp    QWORD PTR [rip+0x38fe]        # 0x14002fb08
   14002c20a:	jmp    QWORD PTR [rip+0x38f0]        # 0x14002fb00
   14002c210:	jmp    QWORD PTR [rip+0x38e2]        # 0x14002faf8
   14002c216:	jmp    QWORD PTR [rip+0x38d4]        # 0x14002faf0
   14002c21c:	jmp    QWORD PTR [rip+0x38c6]        # 0x14002fae8
   14002c222:	jmp    QWORD PTR [rip+0x38b0]        # 0x14002fad8
   14002c228:	jmp    QWORD PTR [rip+0x38a2]        # 0x14002fad0
   14002c22e:	jmp    QWORD PTR [rip+0x3894]        # 0x14002fac8
   14002c234:	jmp    QWORD PTR [rip+0x3886]        # 0x14002fac0
   14002c23a:	jmp    QWORD PTR [rip+0x3878]        # 0x14002fab8
   14002c240:	jmp    QWORD PTR [rip+0x386a]        # 0x14002fab0
   14002c246:	jmp    QWORD PTR [rip+0x385c]        # 0x14002faa8
   14002c24c:	jmp    QWORD PTR [rip+0x384e]        # 0x14002faa0
   14002c252:	jmp    QWORD PTR [rip+0x3840]        # 0x14002fa98
   14002c258:	jmp    QWORD PTR [rip+0x3832]        # 0x14002fa90
   14002c25e:	jmp    QWORD PTR [rip+0x3824]        # 0x14002fa88
   14002c264:	jmp    QWORD PTR [rip+0x3816]        # 0x14002fa80
   14002c26a:	jmp    QWORD PTR [rip+0x3808]        # 0x14002fa78
   14002c270:	jmp    QWORD PTR [rip+0x37fa]        # 0x14002fa70
   14002c276:	jmp    QWORD PTR [rip+0x37ec]        # 0x14002fa68
   14002c27c:	jmp    QWORD PTR [rip+0x37de]        # 0x14002fa60
   14002c282:	jmp    QWORD PTR [rip+0x37d0]        # 0x14002fa58
   14002c288:	jmp    QWORD PTR [rip+0x37c2]        # 0x14002fa50
   14002c28e:	jmp    QWORD PTR [rip+0x37b4]        # 0x14002fa48
   14002c294:	jmp    QWORD PTR [rip+0x37a6]        # 0x14002fa40
   14002c29a:	jmp    QWORD PTR [rip+0x3798]        # 0x14002fa38
   14002c2a0:	jmp    QWORD PTR [rip+0x378a]        # 0x14002fa30
   14002c2a6:	jmp    QWORD PTR [rip+0x377c]        # 0x14002fa28
   14002c2ac:	jmp    QWORD PTR [rip+0x376e]        # 0x14002fa20
   14002c2b2:	jmp    QWORD PTR [rip+0x3760]        # 0x14002fa18
   14002c2b8:	jmp    QWORD PTR [rip+0x3752]        # 0x14002fa10
   14002c2be:	jmp    QWORD PTR [rip+0x3744]        # 0x14002fa08
   14002c2c4:	jmp    QWORD PTR [rip+0x3736]        # 0x14002fa00
   14002c2ca:	jmp    QWORD PTR [rip+0x3728]        # 0x14002f9f8
   14002c2d0:	jmp    QWORD PTR [rip+0x371a]        # 0x14002f9f0
   14002c2d6:	jmp    QWORD PTR [rip+0x370c]        # 0x14002f9e8
   14002c2dc:	jmp    QWORD PTR [rip+0x36f6]        # 0x14002f9d8
   14002c2e2:	jmp    QWORD PTR [rip+0x36e8]        # 0x14002f9d0
   14002c2e8:	jmp    QWORD PTR [rip+0x36da]        # 0x14002f9c8
   14002c2ee:	jmp    QWORD PTR [rip+0x36cc]        # 0x14002f9c0
   14002c2f4:	jmp    QWORD PTR [rip+0x36be]        # 0x14002f9b8
   14002c2fa:	jmp    QWORD PTR [rip+0x36b0]        # 0x14002f9b0
   14002c300:	jmp    QWORD PTR [rip+0x36a2]        # 0x14002f9a8
   14002c306:	jmp    QWORD PTR [rip+0x3694]        # 0x14002f9a0
   14002c30c:	jmp    QWORD PTR [rip+0x3626]        # 0x14002f938
   14002c312:	jmp    QWORD PTR [rip+0x3618]        # 0x14002f930
   14002c318:	jmp    QWORD PTR [rip+0x3602]        # 0x14002f920
   14002c31e:	jmp    QWORD PTR [rip+0x35f4]        # 0x14002f918
   14002c324:	jmp    QWORD PTR [rip+0x35e6]        # 0x14002f910
   14002c32a:	jmp    QWORD PTR [rip+0x35d0]        # 0x14002f900
   14002c330:	jmp    QWORD PTR [rip+0x35c2]        # 0x14002f8f8
   14002c336:	jmp    QWORD PTR [rip+0x35b4]        # 0x14002f8f0
   14002c33c:	jmp    QWORD PTR [rip+0x35a6]        # 0x14002f8e8
   14002c342:	jmp    QWORD PTR [rip+0x3598]        # 0x14002f8e0
   14002c348:	jmp    QWORD PTR [rip+0x358a]        # 0x14002f8d8
   14002c34e:	jmp    QWORD PTR [rip+0x3574]        # 0x14002f8c8
   14002c354:	jmp    QWORD PTR [rip+0x3566]        # 0x14002f8c0
   14002c35a:	jmp    QWORD PTR [rip+0x3558]        # 0x14002f8b8
   14002c360:	jmp    QWORD PTR [rip+0x354a]        # 0x14002f8b0
   14002c366:	jmp    QWORD PTR [rip+0x353c]        # 0x14002f8a8
   14002c36c:	jmp    QWORD PTR [rip+0x3526]        # 0x14002f898
   14002c372:	jmp    QWORD PTR [rip+0x3518]        # 0x14002f890
   14002c378:	jmp    QWORD PTR [rip+0x350a]        # 0x14002f888
   14002c37e:	jmp    QWORD PTR [rip+0x34ec]        # 0x14002f870
   14002c384:	jmp    QWORD PTR [rip+0x34de]        # 0x14002f868
   14002c38a:	jmp    QWORD PTR [rip+0x34d0]        # 0x14002f860
   14002c390:	jmp    QWORD PTR [rip+0x34c2]        # 0x14002f858
   14002c396:	jmp    QWORD PTR [rip+0x34ac]        # 0x14002f848
   14002c39c:	jmp    QWORD PTR [rip+0x349e]        # 0x14002f840
   14002c3a2:	jmp    QWORD PTR [rip+0x3490]        # 0x14002f838
   14002c3a8:	jmp    QWORD PTR [rip+0x38d2]        # 0x14002fc80
   14002c3ae:	jmp    QWORD PTR [rip+0x3474]        # 0x14002f828
   14002c3b4:	jmp    QWORD PTR [rip+0x3466]        # 0x14002f820
   14002c3ba:	jmp    QWORD PTR [rip+0x3450]        # 0x14002f810
   14002c3c0:	jmp    QWORD PTR [rip+0x3442]        # 0x14002f808
   14002c3c6:	jmp    QWORD PTR [rip+0x3434]        # 0x14002f800
   14002c3cc:	jmp    QWORD PTR [rip+0x3426]        # 0x14002f7f8
   14002c3d2:	jmp    QWORD PTR [rip+0x3418]        # 0x14002f7f0
   14002c3d8:	jmp    QWORD PTR [rip+0x340a]        # 0x14002f7e8
   14002c3de:	jmp    QWORD PTR [rip+0x33fc]        # 0x14002f7e0
   14002c3e4:	jmp    QWORD PTR [rip+0x33ee]        # 0x14002f7d8
   14002c3ea:	jmp    QWORD PTR [rip+0x33e0]        # 0x14002f7d0
   14002c3f0:	jmp    QWORD PTR [rip+0x33d2]        # 0x14002f7c8
   14002c3f6:	jmp    QWORD PTR [rip+0x31bc]        # 0x14002f5b8
   14002c3fc:	jmp    QWORD PTR [rip+0x3886]        # 0x14002fc88
   14002c402:	jmp    QWORD PTR [rip+0x3868]        # 0x14002fc70
   14002c408:	jmp    QWORD PTR [rip+0x386a]        # 0x14002fc78
   14002c40e:	jmp    QWORD PTR [rip+0x376c]        # 0x14002fb80
   14002c414:	jmp    QWORD PTR [rip+0x3846]        # 0x14002fc60
   14002c41a:	jmp    QWORD PTR [rip+0x3848]        # 0x14002fc68
   14002c420:	jmp    QWORD PTR [rip+0x3832]        # 0x14002fc58
   14002c426:	jmp    QWORD PTR [rip+0x3824]        # 0x14002fc50
   14002c42c:	jmp    QWORD PTR [rip+0x3816]        # 0x14002fc48
   14002c432:	jmp    QWORD PTR [rip+0x3808]        # 0x14002fc40
   14002c438:	jmp    QWORD PTR [rip+0x37fa]        # 0x14002fc38
   14002c43e:	jmp    QWORD PTR [rip+0x37ec]        # 0x14002fc30
   14002c444:	jmp    QWORD PTR [rip+0x37de]        # 0x14002fc28
   14002c44a:	jmp    QWORD PTR [rip+0x37d0]        # 0x14002fc20
   14002c450:	jmp    QWORD PTR [rip+0x37c2]        # 0x14002fc18
   14002c456:	jmp    QWORD PTR [rip+0x37b4]        # 0x14002fc10
   14002c45c:	jmp    QWORD PTR [rip+0x37a6]        # 0x14002fc08
   14002c462:	jmp    QWORD PTR [rip+0x3798]        # 0x14002fc00
   14002c468:	jmp    QWORD PTR [rip+0x378a]        # 0x14002fbf8
   14002c46e:	jmp    QWORD PTR [rip+0x377c]        # 0x14002fbf0
   14002c474:	jmp    QWORD PTR [rip+0x376e]        # 0x14002fbe8
   14002c47a:	jmp    QWORD PTR [rip+0x3760]        # 0x14002fbe0
   14002c480:	jmp    QWORD PTR [rip+0x3752]        # 0x14002fbd8
   14002c486:	jmp    QWORD PTR [rip+0x3744]        # 0x14002fbd0
   14002c48c:	jmp    QWORD PTR [rip+0x3736]        # 0x14002fbc8
   14002c492:	jmp    QWORD PTR [rip+0x3728]        # 0x14002fbc0
   14002c498:	jmp    QWORD PTR [rip+0x371a]        # 0x14002fbb8
   14002c49e:	jmp    QWORD PTR [rip+0x370c]        # 0x14002fbb0
   14002c4a4:	jmp    QWORD PTR [rip+0x36fe]        # 0x14002fba8
   14002c4aa:	jmp    QWORD PTR [rip+0x36f0]        # 0x14002fba0
   14002c4b0:	jmp    QWORD PTR [rip+0x36e2]        # 0x14002fb98
   14002c4b6:	jmp    QWORD PTR [rip+0x36d4]        # 0x14002fb90
   14002c4bc:	jmp    QWORD PTR [rip+0x36c6]        # 0x14002fb88
   14002c4c2:	jmp    QWORD PTR [rip+0x3368]        # 0x14002f830
   14002c4c8:	jmp    QWORD PTR [rip+0x305a]        # 0x14002f528
   14002c4ce:	jmp    QWORD PTR [rip+0x305c]        # 0x14002f530
   14002c4d4:	jmp    QWORD PTR [rip+0x305e]        # 0x14002f538
   14002c4da:	jmp    QWORD PTR [rip+0x3060]        # 0x14002f540
   14002c4e0:	jmp    QWORD PTR [rip+0x3062]        # 0x14002f548
   14002c4e6:	jmp    QWORD PTR [rip+0x3064]        # 0x14002f550
   14002c4ec:	jmp    QWORD PTR [rip+0x3066]        # 0x14002f558
   14002c4f2:	jmp    QWORD PTR [rip+0x3068]        # 0x14002f560
   14002c4f8:	jmp    QWORD PTR [rip+0x306a]        # 0x14002f568
   14002c4fe:	jmp    QWORD PTR [rip+0x306c]        # 0x14002f570
   14002c504:	jmp    QWORD PTR [rip+0x306e]        # 0x14002f578
   14002c50a:	jmp    QWORD PTR [rip+0x3070]        # 0x14002f580
   14002c510:	jmp    QWORD PTR [rip+0x3072]        # 0x14002f588
   14002c516:	jmp    QWORD PTR [rip+0x3074]        # 0x14002f590
   14002c51c:	jmp    QWORD PTR [rip+0x3076]        # 0x14002f598
   14002c522:	jmp    QWORD PTR [rip+0x3078]        # 0x14002f5a0
   14002c528:	jmp    QWORD PTR [rip+0x307a]        # 0x14002f5a8
   14002c52e:	jmp    QWORD PTR [rip+0x307c]        # 0x14002f5b0
   14002c534:	jmp    QWORD PTR [rip+0x375e]        # 0x14002fc98
   14002c53a:	jmp    QWORD PTR [rip+0x3080]        # 0x14002f5c0
   14002c540:	jmp    QWORD PTR [rip+0x3082]        # 0x14002f5c8
   14002c546:	jmp    QWORD PTR [rip+0x3084]        # 0x14002f5d0
   14002c54c:	jmp    QWORD PTR [rip+0x3086]        # 0x14002f5d8
   14002c552:	jmp    QWORD PTR [rip+0x3088]        # 0x14002f5e0
   14002c558:	jmp    QWORD PTR [rip+0x308a]        # 0x14002f5e8
   14002c55e:	jmp    QWORD PTR [rip+0x308c]        # 0x14002f5f0
   14002c564:	jmp    QWORD PTR [rip+0x308e]        # 0x14002f5f8
   14002c56a:	jmp    QWORD PTR [rip+0x30a8]        # 0x14002f618
   14002c570:	jmp    QWORD PTR [rip+0x30aa]        # 0x14002f620
   14002c576:	jmp    QWORD PTR [rip+0x30ac]        # 0x14002f628
   14002c57c:	jmp    QWORD PTR [rip+0x30be]        # 0x14002f640
   14002c582:	jmp    QWORD PTR [rip+0x30c0]        # 0x14002f648
   14002c588:	jmp    QWORD PTR [rip+0x30c2]        # 0x14002f650
   14002c58e:	jmp    QWORD PTR [rip+0x30c4]        # 0x14002f658
   14002c594:	jmp    QWORD PTR [rip+0x30c6]        # 0x14002f660
   14002c59a:	jmp    QWORD PTR [rip+0x30c8]        # 0x14002f668
   14002c5a0:	jmp    QWORD PTR [rip+0x30ca]        # 0x14002f670
   14002c5a6:	jmp    QWORD PTR [rip+0x30f4]        # 0x14002f6a0
   14002c5ac:	jmp    QWORD PTR [rip+0x30fe]        # 0x14002f6b0
   14002c5b2:	jmp    QWORD PTR [rip+0x3100]        # 0x14002f6b8
   14002c5b8:	jmp    QWORD PTR [rip+0x3102]        # 0x14002f6c0
   14002c5be:	jmp    QWORD PTR [rip+0x3104]        # 0x14002f6c8
   14002c5c4:	jmp    QWORD PTR [rip+0x3106]        # 0x14002f6d0
   14002c5ca:	jmp    QWORD PTR [rip+0x3108]        # 0x14002f6d8
   14002c5d0:	jmp    QWORD PTR [rip+0x3142]        # 0x14002f718
   14002c5d6:	jmp    QWORD PTR [rip+0x3144]        # 0x14002f720
   14002c5dc:	jmp    QWORD PTR [rip+0x3156]        # 0x14002f738
   14002c5e2:	jmp    QWORD PTR [rip+0x3168]        # 0x14002f750
   14002c5e8:	jmp    QWORD PTR [rip+0x316a]        # 0x14002f758
   14002c5ee:	jmp    QWORD PTR [rip+0x316c]        # 0x14002f760
   14002c5f4:	jmp    QWORD PTR [rip+0x316e]        # 0x14002f768
   14002c5fa:	jmp    QWORD PTR [rip+0x3170]        # 0x14002f770
   14002c600:	sub    rsp,0x28
   14002c604:	mov    eax,0x5a4d
   14002c609:	cmp    WORD PTR [rip+0xfffffffffffd39f0],ax        # 0x140000000
   14002c610:	je     0x14002c616
   14002c612:	xor    ecx,ecx
   14002c614:	jmp    0x14002c64e
   14002c616:	movsxd rax,DWORD PTR [rip+0xfffffffffffd3a1f]        # 0x14000003c
   14002c61d:	lea    rcx,[rip+0xfffffffffffd39dc]        # 0x140000000
   14002c624:	add    rax,rcx
   14002c627:	cmp    DWORD PTR [rax],0x4550
   14002c62d:	jne    0x14002c612
   14002c62f:	mov    ecx,0x20b
   14002c634:	cmp    WORD PTR [rax+0x18],cx
   14002c638:	jne    0x14002c612
   14002c63a:	xor    ecx,ecx
   14002c63c:	cmp    DWORD PTR [rax+0x84],0xe
   14002c643:	jbe    0x14002c64e
   14002c645:	cmp    DWORD PTR [rax+0xf8],ecx
   14002c64b:	setne  cl
   14002c64e:	mov    DWORD PTR [rip+0x1121c],ecx        # 0x14003d870
   14002c654:	mov    ecx,0x2
   14002c659:	call   QWORD PTR [rip+0x2d39]        # 0x14002f398
   14002c65f:	or     rcx,0xffffffffffffffff
   14002c663:	call   QWORD PTR [rip+0x2b47]        # 0x14002f1b0
   14002c669:	mov    rcx,QWORD PTR [rip+0x2ce0]        # 0x14002f350
   14002c670:	mov    QWORD PTR [rip+0x1a0c1],rax        # 0x140046738
   14002c677:	mov    QWORD PTR [rip+0x1a0c2],rax        # 0x140046740
   14002c67e:	mov    eax,DWORD PTR [rip+0x1178c]        # 0x14003de10
   14002c684:	mov    DWORD PTR [rcx],eax
   14002c686:	mov    rdx,QWORD PTR [rip+0x2cbb]        # 0x14002f348
   14002c68d:	mov    eax,DWORD PTR [rip+0x11771]        # 0x14003de04
   14002c693:	mov    DWORD PTR [rdx],eax
   14002c695:	call   0x14002cffc
   14002c69a:	call   0x1400011c0
   14002c69f:	cmp    DWORD PTR [rip+0xf96a],0x0        # 0x14003c010
   14002c6a6:	jne    0x14002c6b5
   14002c6a8:	lea    rcx,[rip+0xfffffffffffd4b11]        # 0x1400011c0
   14002c6af:	call   QWORD PTR [rip+0x2cbb]        # 0x14002f370
   14002c6b5:	cmp    DWORD PTR [rip+0xf958],0xffffffff        # 0x14003c014
   14002c6bc:	jne    0x14002c6c7
   14002c6be:	or     ecx,0xffffffff
   14002c6c1:	call   QWORD PTR [rip+0x2cb1]        # 0x14002f378
   14002c6c7:	xor    eax,eax
   14002c6c9:	add    rsp,0x28
   14002c6cd:	ret    
   14002c6ce:	int3   
   14002c6cf:	int3   
   14002c6d0:	sub    rsp,0x38
   14002c6d4:	lea    rcx,[rip+0x959]        # 0x14002d034
   14002c6db:	call   0x14002ca88
   14002c6e0:	mov    eax,DWORD PTR [rip+0x11726]        # 0x14003de0c
   14002c6e6:	mov    r9d,DWORD PTR [rip+0x1171b]        # 0x14003de08
   14002c6ed:	mov    DWORD PTR [rip+0x11199],eax        # 0x14003d88c
   14002c6f3:	lea    rax,[rip+0x11192]        # 0x14003d88c
   14002c6fa:	lea    r8,[rip+0x1117f]        # 0x14003d880
   14002c701:	lea    rdx,[rip+0x11170]        # 0x14003d878
   14002c708:	lea    rcx,[rip+0x11165]        # 0x14003d874
   14002c70f:	mov    QWORD PTR [rsp+0x20],rax
   14002c714:	call   QWORD PTR [rip+0x2c86]        # 0x14002f3a0
   14002c71a:	mov    DWORD PTR [rip+0x11168],eax        # 0x14003d888
   14002c720:	test   eax,eax
   14002c722:	jns    0x14002c72e
   14002c724:	mov    ecx,0x8
   14002c729:	call   0x14002ce76
   14002c72e:	add    rsp,0x38
   14002c732:	ret    
   14002c733:	int3   
   14002c734:	mov    rax,rsp
   14002c737:	mov    QWORD PTR [rax+0x8],rbx
   14002c73b:	mov    QWORD PTR [rax+0x10],rsi
   14002c73f:	mov    QWORD PTR [rax+0x18],rdi
   14002c743:	mov    QWORD PTR [rax+0x20],r14
   14002c747:	push   r15
   14002c749:	sub    rsp,0x30
   14002c74d:	xor    r15d,r15d
   14002c750:	mov    QWORD PTR [rax-0x10],r15
   14002c754:	mov    DWORD PTR [rax-0x18],r15d
   14002c758:	call   QWORD PTR [rip+0x2c52]        # 0x14002f3b0
   14002c75e:	movzx  r14d,ax
   14002c762:	mov    rcx,QWORD PTR gs:0x30
   14002c76b:	mov    rdx,QWORD PTR [rcx+0x8]
   14002c76f:	mov    esi,r15d
   14002c772:	xor    eax,eax
   14002c774:	lock cmpxchg QWORD PTR [rip+0x19fab],rdx        # 0x140046728
   14002c77d:	je     0x14002c78f
   14002c77f:	cmp    rax,rdx
   14002c782:	jne    0x14002c78d
   14002c784:	mov    ebx,0x1
   14002c789:	mov    esi,ebx
   14002c78b:	jmp    0x14002c794
   14002c78d:	jmp    0x14002c772
   14002c78f:	mov    ebx,0x1
   14002c794:	mov    eax,DWORD PTR [rip+0x19f96]        # 0x140046730
   14002c79a:	cmp    eax,ebx
   14002c79c:	jne    0x14002c7ac
   14002c79e:	mov    edi,0x1f
   14002c7a3:	mov    ecx,edi
   14002c7a5:	call   0x14002ce76
   14002c7aa:	jmp    0x14002c7e8
   14002c7ac:	mov    eax,DWORD PTR [rip+0x19f7e]        # 0x140046730
   14002c7b2:	test   eax,eax
   14002c7b4:	jne    0x14002c7dd
   14002c7b6:	mov    DWORD PTR [rip+0x19f74],ebx        # 0x140046730
   14002c7bc:	lea    rdx,[rip+0x35b5]        # 0x14002fd78
   14002c7c3:	lea    rcx,[rip+0x358e]        # 0x14002fd58
   14002c7ca:	call   0x14002d06c
   14002c7cf:	test   eax,eax
   14002c7d1:	je     0x14002c7e3
   14002c7d3:	mov    eax,0xff
   14002c7d8:	jmp    0x14002c913
   14002c7dd:	mov    DWORD PTR [rip+0x11085],ebx        # 0x14003d868
   14002c7e3:	mov    edi,0x1f
   14002c7e8:	mov    eax,DWORD PTR [rip+0x19f42]        # 0x140046730
   14002c7ee:	cmp    eax,ebx
   14002c7f0:	jne    0x14002c80f
   14002c7f2:	lea    rdx,[rip+0x3557]        # 0x14002fd50
   14002c7f9:	lea    rcx,[rip+0x34f8]        # 0x14002fcf8
   14002c800:	call   0x14002d072
   14002c805:	mov    DWORD PTR [rip+0x19f21],0x2        # 0x140046730
   14002c80f:	test   esi,esi
   14002c811:	jne    0x14002c81d
   14002c813:	mov    rax,r15
   14002c816:	xchg   QWORD PTR [rip+0x19f0b],rax        # 0x140046728
   14002c81d:	cmp    QWORD PTR [rip+0x19f24],r15        # 0x140046748
   14002c824:	je     0x14002c848
   14002c826:	lea    rcx,[rip+0x19f1b]        # 0x140046748
   14002c82d:	call   0x14002ced0
   14002c832:	test   eax,eax
   14002c834:	je     0x14002c848
   14002c836:	xor    r8d,r8d
   14002c839:	lea    edx,[r8+0x2]
   14002c83d:	xor    ecx,ecx
   14002c83f:	mov    rax,QWORD PTR [rip+0x19f02]        # 0x140046748
   14002c846:	call   rax
   14002c848:	mov    rax,QWORD PTR [rip+0x2b09]        # 0x14002f358
   14002c84f:	mov    rcx,QWORD PTR [rax]
   14002c852:	mov    QWORD PTR [rsp+0x28],rcx
   14002c857:	mov    edx,DWORD PTR [rsp+0x20]
   14002c85b:	cmp    WORD PTR [rcx],0x20
   14002c85f:	ja     0x14002c8c4
   14002c861:	cmp    WORD PTR [rcx],r15w
   14002c865:	je     0x14002c86b
   14002c867:	test   edx,edx
   14002c869:	jne    0x14002c8c4
   14002c86b:	movzx  eax,WORD PTR [rcx]
   14002c86e:	sub    ax,bx
   14002c871:	cmp    ax,di
   14002c874:	ja     0x14002c881
   14002c876:	add    rcx,0x2
   14002c87a:	mov    QWORD PTR [rsp+0x28],rcx
   14002c87f:	jmp    0x14002c86b
   14002c881:	movzx  r9d,r14w
   14002c885:	mov    r8,rcx
   14002c888:	xor    edx,edx
   14002c88a:	lea    rcx,[rip+0xfffffffffffd376f]        # 0x140000000
   14002c891:	call   0x14002d1c8
   14002c896:	mov    DWORD PTR [rip+0x10fd0],eax        # 0x14003d86c
   14002c89c:	cmp    DWORD PTR [rip+0x10fcd],r15d        # 0x14003d870
   14002c8a3:	jne    0x14002c8ad
   14002c8a5:	mov    ecx,eax
   14002c8a7:	call   QWORD PTR [rip+0x2ae3]        # 0x14002f390
   14002c8ad:	cmp    DWORD PTR [rip+0x10fb4],r15d        # 0x14003d868
   14002c8b4:	jne    0x14002c8c2
   14002c8b6:	call   QWORD PTR [rip+0x2ac4]        # 0x14002f380
   14002c8bc:	mov    eax,DWORD PTR [rip+0x10faa]        # 0x14003d86c
   14002c8c2:	jmp    0x14002c913
   14002c8c4:	cmp    WORD PTR [rcx],0x22
   14002c8c8:	jne    0x14002c8d8
   14002c8ca:	mov    eax,r15d
   14002c8cd:	test   edx,edx
   14002c8cf:	sete   al
   14002c8d2:	mov    edx,eax
   14002c8d4:	mov    DWORD PTR [rsp+0x20],eax
   14002c8d8:	add    rcx,0x2
   14002c8dc:	mov    QWORD PTR [rsp+0x28],rcx
   14002c8e1:	jmp    0x14002c85b
   14002c8e6:	mov    DWORD PTR [rip+0x10f80],eax        # 0x14003d86c
   14002c8ec:	cmp    DWORD PTR [rip+0x10f7d],0x0        # 0x14003d870
   14002c8f3:	jne    0x14002c8fe
   14002c8f5:	mov    ecx,eax
   14002c8f7:	call   QWORD PTR [rip+0x2a8b]        # 0x14002f388
   14002c8fd:	int3   
   14002c8fe:	cmp    DWORD PTR [rip+0x10f63],0x0        # 0x14003d868
   14002c905:	jne    0x14002c913
   14002c907:	call   QWORD PTR [rip+0x2a73]        # 0x14002f380
   14002c90d:	mov    eax,DWORD PTR [rip+0x10f59]        # 0x14003d86c
   14002c913:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c918:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c91d:	mov    rdi,QWORD PTR [rsp+0x50]
   14002c922:	mov    r14,QWORD PTR [rsp+0x58]
   14002c927:	add    rsp,0x30
   14002c92b:	pop    r15
   14002c92d:	ret    
   14002c92e:	int3   
   14002c92f:	int3   
   14002c930:	sub    rsp,0x28
   14002c934:	call   0x14002cf50
   14002c939:	add    rsp,0x28
   14002c93d:	jmp    0x14002c734
   14002c942:	int3   
   14002c943:	int3   
   14002c944:	int3   
   14002c945:	int3   
   14002c946:	int3   
   14002c947:	int3   
   14002c948:	int3   
   14002c949:	int3   
   14002c94a:	int3   
   14002c94b:	int3   
   14002c94c:	int3   
   14002c94d:	int3   
   14002c94e:	int3   
   14002c94f:	int3   
   14002c950:	int3   
   14002c951:	int3   
   14002c952:	int3   
   14002c953:	int3   
   14002c954:	int3   
   14002c955:	int3   
   14002c956:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002c960:	cmp    rcx,QWORD PTR [rip+0xf699]        # 0x14003c000
   14002c967:	jne    0x14002c97a
   14002c969:	rol    rcx,0x10
   14002c96d:	test   cx,0xffff
   14002c972:	jne    0x14002c976
   14002c974:	repz ret 
   14002c976:	ror    rcx,0x10
   14002c97a:	jmp    0x14002caf4
   14002c97f:	int3   
   14002c980:	jmp    QWORD PTR [rip+0x2afa]        # 0x14002f480
   14002c986:	int3   
   14002c987:	int3   
   14002c988:	rex push rbx
   14002c98a:	sub    rsp,0x20
   14002c98e:	cmp    QWORD PTR [rip+0x19daa],0x0        # 0x140046740
   14002c996:	jne    0x14002c9ce
   14002c998:	mov    edx,0x8
   14002c99d:	lea    ecx,[rdx+0x18]
   14002c9a0:	call   QWORD PTR [rip+0x298a]        # 0x14002f330
   14002c9a6:	mov    rcx,rax
   14002c9a9:	mov    rbx,rax
   14002c9ac:	call   QWORD PTR [rip+0x27fe]        # 0x14002f1b0
   14002c9b2:	mov    QWORD PTR [rip+0x19d87],rax        # 0x140046740
   14002c9b9:	mov    QWORD PTR [rip+0x19d78],rax        # 0x140046738
   14002c9c0:	test   rbx,rbx
   14002c9c3:	jne    0x14002c9ca
   14002c9c5:	lea    eax,[rbx+0x18]
   14002c9c8:	jmp    0x14002c9d0
   14002c9ca:	and    QWORD PTR [rbx],0x0
   14002c9ce:	xor    eax,eax
   14002c9d0:	add    rsp,0x20
   14002c9d4:	pop    rbx
   14002c9d5:	ret    
   14002c9d6:	int3   
   14002c9d7:	int3   
   14002c9d8:	rex push rbx
   14002c9da:	sub    rsp,0x20
   14002c9de:	mov    rbx,rcx
   14002c9e1:	mov    rcx,QWORD PTR [rip+0x19d58]        # 0x140046740
   14002c9e8:	call   QWORD PTR [rip+0x276a]        # 0x14002f158
   14002c9ee:	mov    QWORD PTR [rsp+0x38],rax
   14002c9f3:	cmp    rax,0xffffffffffffffff
   14002c9f7:	jne    0x14002ca04
   14002c9f9:	mov    rcx,rbx
   14002c9fc:	call   QWORD PTR [rip+0x291e]        # 0x14002f320
   14002ca02:	jmp    0x14002ca82
   14002ca04:	mov    ecx,0x8
   14002ca09:	call   0x14002d078
   14002ca0e:	nop
   14002ca0f:	mov    rcx,QWORD PTR [rip+0x19d2a]        # 0x140046740
   14002ca16:	call   QWORD PTR [rip+0x273c]        # 0x14002f158
   14002ca1c:	mov    QWORD PTR [rsp+0x38],rax
   14002ca21:	mov    rcx,QWORD PTR [rip+0x19d10]        # 0x140046738
   14002ca28:	call   QWORD PTR [rip+0x272a]        # 0x14002f158
   14002ca2e:	mov    QWORD PTR [rsp+0x40],rax
   14002ca33:	mov    rcx,rbx
   14002ca36:	call   QWORD PTR [rip+0x2774]        # 0x14002f1b0
   14002ca3c:	mov    rcx,rax
   14002ca3f:	lea    r8,[rsp+0x40]
   14002ca44:	lea    rdx,[rsp+0x38]
   14002ca49:	call   0x14002d084
   14002ca4e:	mov    rbx,rax
   14002ca51:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ca56:	call   QWORD PTR [rip+0x2754]        # 0x14002f1b0
   14002ca5c:	mov    QWORD PTR [rip+0x19cdd],rax        # 0x140046740
   14002ca63:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ca68:	call   QWORD PTR [rip+0x2742]        # 0x14002f1b0
   14002ca6e:	mov    QWORD PTR [rip+0x19cc3],rax        # 0x140046738
   14002ca75:	mov    ecx,0x8
   14002ca7a:	call   0x14002d07e
   14002ca7f:	mov    rax,rbx
   14002ca82:	add    rsp,0x20
   14002ca86:	pop    rbx
   14002ca87:	ret    
   14002ca88:	sub    rsp,0x28
   14002ca8c:	call   0x14002c9d8
   14002ca91:	neg    rax
   14002ca94:	sbb    eax,eax
   14002ca96:	neg    eax
   14002ca98:	dec    eax
   14002ca9a:	add    rsp,0x28
   14002ca9e:	ret    
   14002ca9f:	int3   
   14002caa0:	jmp    QWORD PTR [rip+0x29ca]        # 0x14002f470
   14002caa6:	int3   
   14002caa7:	int3   
   14002caa8:	rex push rbx
   14002caaa:	sub    rsp,0x20
   14002caae:	mov    rbx,rcx
   14002cab1:	call   QWORD PTR [rip+0x26f1]        # 0x14002f1a8
   14002cab7:	mov    ecx,0x1
   14002cabc:	mov    DWORD PTR [rip+0x1133e],eax        # 0x14003de00
   14002cac2:	call   0x14002d08a
   14002cac7:	mov    rcx,rbx
   14002caca:	call   0x14002d090
   14002cacf:	cmp    DWORD PTR [rip+0x1132a],0x0        # 0x14003de00
   14002cad6:	jne    0x14002cae2
   14002cad8:	mov    ecx,0x1
   14002cadd:	call   0x14002d08a
   14002cae2:	mov    ecx,0xc0000409
   14002cae7:	add    rsp,0x20
   14002caeb:	pop    rbx
   14002caec:	jmp    0x14002d096
   14002caf1:	int3   
   14002caf2:	int3   
   14002caf3:	int3   
   14002caf4:	mov    QWORD PTR [rsp+0x8],rcx
   14002caf9:	sub    rsp,0x38
   14002cafd:	mov    ecx,0x17
   14002cb02:	call   0x14002d0ba
   14002cb07:	test   eax,eax
   14002cb09:	je     0x14002cb12
   14002cb0b:	mov    ecx,0x2
   14002cb10:	int    0x29
   14002cb12:	lea    rcx,[rip+0x10e17]        # 0x14003d930
   14002cb19:	call   0x14002d0a2
   14002cb1e:	mov    rax,QWORD PTR [rsp+0x38]
   14002cb23:	mov    QWORD PTR [rip+0x10efe],rax        # 0x14003da28
   14002cb2a:	lea    rax,[rsp+0x38]
   14002cb2f:	add    rax,0x8
   14002cb33:	mov    QWORD PTR [rip+0x10e8e],rax        # 0x14003d9c8
   14002cb3a:	mov    rax,QWORD PTR [rip+0x10ee7]        # 0x14003da28
   14002cb41:	mov    QWORD PTR [rip+0x10d58],rax        # 0x14003d8a0
   14002cb48:	mov    rax,QWORD PTR [rsp+0x40]
   14002cb4d:	mov    QWORD PTR [rip+0x10e5c],rax        # 0x14003d9b0
   14002cb54:	mov    DWORD PTR [rip+0x10d32],0xc0000409        # 0x14003d890
   14002cb5e:	mov    DWORD PTR [rip+0x10d2c],0x1        # 0x14003d894
   14002cb68:	mov    DWORD PTR [rip+0x10d36],0x1        # 0x14003d8a8
   14002cb72:	mov    eax,0x8
   14002cb77:	imul   rax,rax,0x0
   14002cb7b:	lea    rcx,[rip+0x10d2e]        # 0x14003d8b0
   14002cb82:	mov    QWORD PTR [rcx+rax*1],0x2
   14002cb8a:	mov    eax,0x8
   14002cb8f:	imul   rax,rax,0x0
   14002cb93:	mov    rcx,QWORD PTR [rip+0xf466]        # 0x14003c000
   14002cb9a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14002cb9f:	mov    eax,0x8
   14002cba4:	imul   rax,rax,0x1
   14002cba8:	mov    rcx,QWORD PTR [rip+0xf459]        # 0x14003c008
   14002cbaf:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14002cbb4:	lea    rcx,[rip+0x324d]        # 0x14002fe08
   14002cbbb:	call   0x14002caa8
   14002cbc0:	add    rsp,0x38
   14002cbc4:	ret    
   14002cbc5:	int3   
   14002cbc6:	int3   
   14002cbc7:	int3   
   14002cbc8:	sub    rsp,0x28
   14002cbcc:	mov    ecx,0x8
   14002cbd1:	call   0x14002cbdc
   14002cbd6:	add    rsp,0x28
   14002cbda:	ret    
   14002cbdb:	int3   
   14002cbdc:	mov    DWORD PTR [rsp+0x8],ecx
   14002cbe0:	sub    rsp,0x28
   14002cbe4:	mov    ecx,0x17
   14002cbe9:	call   0x14002d0ba
   14002cbee:	test   eax,eax
   14002cbf0:	je     0x14002cbfa
   14002cbf2:	mov    eax,DWORD PTR [rsp+0x30]
   14002cbf6:	mov    ecx,eax
   14002cbf8:	int    0x29
   14002cbfa:	lea    rcx,[rip+0x10d2f]        # 0x14003d930
   14002cc01:	call   0x14002d09c
   14002cc06:	mov    rax,QWORD PTR [rsp+0x28]
   14002cc0b:	mov    QWORD PTR [rip+0x10e16],rax        # 0x14003da28
   14002cc12:	lea    rax,[rsp+0x28]
   14002cc17:	add    rax,0x8
   14002cc1b:	mov    QWORD PTR [rip+0x10da6],rax        # 0x14003d9c8
   14002cc22:	mov    rax,QWORD PTR [rip+0x10dff]        # 0x14003da28
   14002cc29:	mov    QWORD PTR [rip+0x10c70],rax        # 0x14003d8a0
   14002cc30:	mov    DWORD PTR [rip+0x10c56],0xc0000409        # 0x14003d890
   14002cc3a:	mov    DWORD PTR [rip+0x10c50],0x1        # 0x14003d894
   14002cc44:	mov    DWORD PTR [rip+0x10c5a],0x1        # 0x14003d8a8
   14002cc4e:	mov    eax,0x8
   14002cc53:	imul   rax,rax,0x0
   14002cc57:	lea    rcx,[rip+0x10c52]        # 0x14003d8b0
   14002cc5e:	mov    edx,DWORD PTR [rsp+0x30]
   14002cc62:	mov    QWORD PTR [rcx+rax*1],rdx
   14002cc66:	lea    rcx,[rip+0x319b]        # 0x14002fe08
   14002cc6d:	call   0x14002caa8
   14002cc72:	add    rsp,0x28
   14002cc76:	ret    
   14002cc77:	int3   
   14002cc78:	mov    QWORD PTR [rsp+0x8],rbx
   14002cc7d:	mov    QWORD PTR [rsp+0x10],rsi
   14002cc82:	push   rdi
   14002cc83:	sub    rsp,0x20
   14002cc87:	mov    esi,edx
   14002cc89:	mov    rbx,rcx
   14002cc8c:	test   dl,0x2
   14002cc8f:	je     0x14002ccbc
   14002cc91:	lea    rdi,[rcx-0x8]
   14002cc95:	lea    r9,[rip+0x418]        # 0x14002d0b4
   14002cc9c:	mov    edx,0x18
   14002cca1:	mov    r8d,DWORD PTR [rdi]
   14002cca4:	call   0x14002cd68
   14002cca9:	test   sil,0x1
   14002ccad:	je     0x14002ccb7
   14002ccaf:	mov    rcx,rdi
   14002ccb2:	call   0x14002c1b0
   14002ccb7:	mov    rax,rdi
   14002ccba:	jmp    0x14002ccd2
   14002ccbc:	call   0x14002d0b4
   14002ccc1:	test   sil,0x1
   14002ccc5:	je     0x14002cccf
   14002ccc7:	mov    rcx,rbx
   14002ccca:	call   0x14002c1b0
   14002cccf:	mov    rax,rbx
   14002ccd2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ccd7:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ccdc:	add    rsp,0x20
   14002cce0:	pop    rdi
   14002cce1:	ret    
   14002cce2:	int3   
   14002cce3:	int3   
   14002cce4:	sub    rsp,0x28
   14002cce8:	mov    r8,QWORD PTR [r9+0x38]
   14002ccec:	mov    rcx,rdx
   14002ccef:	mov    rdx,r9
   14002ccf2:	call   0x14002cd04
   14002ccf7:	mov    eax,0x1
   14002ccfc:	add    rsp,0x28
   14002cd00:	ret    
   14002cd01:	int3   
   14002cd02:	int3   
   14002cd03:	int3   
   14002cd04:	rex push rbx
   14002cd06:	sub    rsp,0x20
   14002cd0a:	mov    r11d,DWORD PTR [r8]
   14002cd0d:	mov    rbx,rdx
   14002cd10:	mov    r9,rcx
   14002cd13:	and    r11d,0xfffffff8
   14002cd17:	test   BYTE PTR [r8],0x4
   14002cd1b:	mov    r10,rcx
   14002cd1e:	je     0x14002cd33
   14002cd20:	mov    eax,DWORD PTR [r8+0x8]
   14002cd24:	movsxd r10,DWORD PTR [r8+0x4]
   14002cd28:	neg    eax
   14002cd2a:	add    r10,rcx
   14002cd2d:	movsxd rcx,eax
   14002cd30:	and    r10,rcx
   14002cd33:	movsxd rax,r11d
   14002cd36:	mov    rdx,QWORD PTR [rax+r10*1]
   14002cd3a:	mov    rax,QWORD PTR [rbx+0x10]
   14002cd3e:	mov    ecx,DWORD PTR [rax+0x8]
   14002cd41:	add    rcx,QWORD PTR [rbx+0x8]
   14002cd45:	test   BYTE PTR [rcx+0x3],0xf
   14002cd49:	je     0x14002cd57
   14002cd4b:	movzx  eax,BYTE PTR [rcx+0x3]
   14002cd4f:	and    eax,0xfffffff0
   14002cd52:	cdqe   
   14002cd54:	add    r9,rax
   14002cd57:	xor    r9,rdx
   14002cd5a:	mov    rcx,r9
   14002cd5d:	add    rsp,0x20
   14002cd61:	pop    rbx
   14002cd62:	jmp    0x14002c960
   14002cd67:	int3   
   14002cd68:	mov    rax,rsp
   14002cd6b:	mov    QWORD PTR [rax+0x20],r9
   14002cd6f:	mov    DWORD PTR [rax+0x18],r8d
   14002cd73:	mov    QWORD PTR [rax+0x10],rdx
   14002cd77:	push   rbx
   14002cd78:	push   rsi
   14002cd79:	push   rdi
   14002cd7a:	push   r14
   14002cd7c:	sub    rsp,0x38
   14002cd80:	mov    r14,r9
   14002cd83:	movsxd rdi,r8d
   14002cd86:	mov    rsi,rdx
   14002cd89:	and    DWORD PTR [rax-0x38],0x0
   14002cd8d:	mov    rbx,rdi
   14002cd90:	imul   rbx,rdx
   14002cd94:	add    rbx,rcx
   14002cd97:	mov    QWORD PTR [rax+0x8],rbx
   14002cd9b:	dec    edi
   14002cd9d:	mov    DWORD PTR [rsp+0x70],edi
   14002cda1:	js     0x14002cdb3
   14002cda3:	sub    rbx,rsi
   14002cda6:	mov    QWORD PTR [rsp+0x60],rbx
   14002cdab:	mov    rcx,rbx
   14002cdae:	call   r14
   14002cdb1:	jmp    0x14002cd9b
   14002cdb3:	mov    DWORD PTR [rsp+0x20],0x1
   14002cdbb:	add    rsp,0x38
   14002cdbf:	pop    r14
   14002cdc1:	pop    rdi
   14002cdc2:	pop    rsi
   14002cdc3:	pop    rbx
   14002cdc4:	ret    
   14002cdc5:	int3   
   14002cdc6:	int3   
   14002cdc7:	int3   
   14002cdc8:	mov    QWORD PTR [rsp+0x10],rbx
   14002cdcd:	mov    DWORD PTR [rsp+0x18],r8d
   14002cdd2:	mov    QWORD PTR [rsp+0x8],rcx
   14002cdd7:	push   rsi
   14002cdd8:	push   rdi
   14002cdd9:	push   r14
   14002cddb:	sub    rsp,0x40
   14002cddf:	mov    rsi,r9
   14002cde2:	mov    edi,r8d
   14002cde5:	mov    r14,rdx
   14002cde8:	mov    rbx,rcx
   14002cdeb:	dec    edi
   14002cded:	mov    DWORD PTR [rsp+0x70],edi
   14002cdf1:	js     0x14002ce02
   14002cdf3:	sub    rbx,r14
   14002cdf6:	mov    QWORD PTR [rsp+0x60],rbx
   14002cdfb:	mov    rcx,rbx
   14002cdfe:	call   rsi
   14002ce00:	jmp    0x14002cdeb
   14002ce02:	jmp    0x14002ce04
   14002ce04:	mov    rbx,QWORD PTR [rsp+0x68]
   14002ce09:	add    rsp,0x40
   14002ce0d:	pop    r14
   14002ce0f:	pop    rdi
   14002ce10:	pop    rsi
   14002ce11:	ret    
   14002ce12:	jmp    QWORD PTR [rip+0x25b0]        # 0x14002f3c8
   14002ce18:	jmp    QWORD PTR [rip+0x25a2]        # 0x14002f3c0
   14002ce1e:	int3   
   14002ce1f:	int3   
   14002ce20:	sub    rsp,0x28
   14002ce24:	mov    rax,QWORD PTR [rcx]
   14002ce27:	cmp    DWORD PTR [rax],0xe06d7363
   14002ce2d:	jne    0x14002ce4b
   14002ce2f:	cmp    DWORD PTR [rax+0x18],0x4
   14002ce33:	jne    0x14002ce4b
   14002ce35:	mov    ecx,DWORD PTR [rax+0x20]
   14002ce38:	lea    eax,[rcx-0x19930520]
   14002ce3e:	cmp    eax,0x2
   14002ce41:	jbe    0x14002ce52
   14002ce43:	cmp    ecx,0x1994000
   14002ce49:	je     0x14002ce52
   14002ce4b:	xor    eax,eax
   14002ce4d:	add    rsp,0x28
   14002ce51:	ret    
   14002ce52:	call   0x14002d0a8
   14002ce57:	int3   
   14002ce58:	sub    rsp,0x28
   14002ce5c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14002ce20
   14002ce63:	call   0x14002d0ae
   14002ce68:	xor    eax,eax
   14002ce6a:	add    rsp,0x28
   14002ce6e:	ret    
   14002ce6f:	int3   
   14002ce70:	jmp    QWORD PTR [rip+0x2542]        # 0x14002f3b8
   14002ce76:	jmp    QWORD PTR [rip+0x252c]        # 0x14002f3a8
   14002ce7c:	int3   
   14002ce7d:	int3   
   14002ce7e:	int3   
   14002ce7f:	int3   
   14002ce80:	movsxd r8,DWORD PTR [rcx+0x3c]
   14002ce84:	xor    r9d,r9d
   14002ce87:	mov    r10,rdx
   14002ce8a:	add    r8,rcx
   14002ce8d:	movzx  eax,WORD PTR [r8+0x14]
   14002ce92:	movzx  r11d,WORD PTR [r8+0x6]
   14002ce97:	add    rax,0x18
   14002ce9b:	add    rax,r8
   14002ce9e:	test   r11d,r11d
   14002cea1:	je     0x14002cec1
   14002cea3:	mov    edx,DWORD PTR [rax+0xc]
   14002cea6:	cmp    r10,rdx
   14002cea9:	jb     0x14002ceb5
   14002ceab:	mov    ecx,DWORD PTR [rax+0x8]
   14002ceae:	add    ecx,edx
   14002ceb0:	cmp    r10,rcx
   14002ceb3:	jb     0x14002cec3
   14002ceb5:	inc    r9d
   14002ceb8:	add    rax,0x28
   14002cebc:	cmp    r9d,r11d
   14002cebf:	jb     0x14002cea3
   14002cec1:	xor    eax,eax
   14002cec3:	ret    
   14002cec4:	int3   
   14002cec5:	int3   
   14002cec6:	int3   
   14002cec7:	int3   
   14002cec8:	int3   
   14002cec9:	int3   
   14002ceca:	int3   
   14002cecb:	int3   
   14002cecc:	int3   
   14002cecd:	int3   
   14002cece:	int3   
   14002cecf:	int3   
   14002ced0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ced5:	push   rdi
   14002ced6:	sub    rsp,0x20
   14002ceda:	mov    rbx,rcx
   14002cedd:	lea    rdi,[rip+0xfffffffffffd311c]        # 0x140000000
   14002cee4:	mov    rcx,rdi
   14002cee7:	call   0x14002cf20
   14002ceec:	test   eax,eax
   14002ceee:	je     0x14002cf12
   14002cef0:	sub    rbx,rdi
   14002cef3:	mov    rdx,rbx
   14002cef6:	mov    rcx,rdi
   14002cef9:	call   0x14002ce80
   14002cefe:	test   rax,rax
   14002cf01:	je     0x14002cf12
   14002cf03:	mov    eax,DWORD PTR [rax+0x24]
   14002cf06:	shr    eax,0x1f
   14002cf09:	not    eax
   14002cf0b:	and    eax,0x1
   14002cf0e:	jmp    0x14002cf12
   14002cf10:	xor    eax,eax
   14002cf12:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cf17:	add    rsp,0x20
   14002cf1b:	pop    rdi
   14002cf1c:	ret    
   14002cf1d:	int3   
   14002cf1e:	int3   
   14002cf1f:	int3   
   14002cf20:	mov    rax,rcx
   14002cf23:	mov    ecx,0x5a4d
   14002cf28:	cmp    WORD PTR [rax],cx
   14002cf2b:	je     0x14002cf30
   14002cf2d:	xor    eax,eax
   14002cf2f:	ret    
   14002cf30:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002cf34:	add    rcx,rax
   14002cf37:	xor    eax,eax
   14002cf39:	cmp    DWORD PTR [rcx],0x4550
   14002cf3f:	jne    0x14002cf4d
   14002cf41:	mov    edx,0x20b
   14002cf46:	cmp    WORD PTR [rcx+0x18],dx
   14002cf4a:	sete   al
   14002cf4d:	ret    
   14002cf4e:	int3   
   14002cf4f:	int3   
   14002cf50:	mov    QWORD PTR [rsp+0x20],rbx
   14002cf55:	push   rbp
   14002cf56:	mov    rbp,rsp
   14002cf59:	sub    rsp,0x20
   14002cf5d:	mov    rax,QWORD PTR [rip+0xf09c]        # 0x14003c000
   14002cf64:	and    QWORD PTR [rbp+0x18],0x0
   14002cf69:	movabs rbx,0x2b992ddfa232
   14002cf73:	cmp    rax,rbx
   14002cf76:	jne    0x14002cfe7
   14002cf78:	lea    rcx,[rbp+0x18]
   14002cf7c:	call   QWORD PTR [rip+0x21fe]        # 0x14002f180
   14002cf82:	mov    rax,QWORD PTR [rbp+0x18]
   14002cf86:	mov    QWORD PTR [rbp+0x10],rax
   14002cf8a:	call   QWORD PTR [rip+0x21f8]        # 0x14002f188
   14002cf90:	mov    eax,eax
   14002cf92:	xor    QWORD PTR [rbp+0x10],rax
   14002cf96:	call   QWORD PTR [rip+0x21f4]        # 0x14002f190
   14002cf9c:	lea    rcx,[rbp+0x20]
   14002cfa0:	mov    eax,eax
   14002cfa2:	xor    QWORD PTR [rbp+0x10],rax
   14002cfa6:	call   QWORD PTR [rip+0x21ec]        # 0x14002f198
   14002cfac:	mov    eax,DWORD PTR [rbp+0x20]
   14002cfaf:	shl    rax,0x20
   14002cfb3:	lea    rcx,[rbp+0x10]
   14002cfb7:	xor    rax,QWORD PTR [rbp+0x20]
   14002cfbb:	xor    rax,QWORD PTR [rbp+0x10]
   14002cfbf:	xor    rax,rcx
   14002cfc2:	movabs rcx,0xffffffffffff
   14002cfcc:	and    rax,rcx
   14002cfcf:	movabs rcx,0x2b992ddfa233
   14002cfd9:	cmp    rax,rbx
   14002cfdc:	cmove  rax,rcx
   14002cfe0:	mov    QWORD PTR [rip+0xf019],rax        # 0x14003c000
   14002cfe7:	mov    rbx,QWORD PTR [rsp+0x48]
   14002cfec:	not    rax
   14002cfef:	mov    QWORD PTR [rip+0xf012],rax        # 0x14003c008
   14002cff6:	add    rsp,0x20
   14002cffa:	pop    rbp
   14002cffb:	ret    
   14002cffc:	mov    QWORD PTR [rsp+0x8],rbx
   14002d001:	push   rdi
   14002d002:	sub    rsp,0x20
   14002d006:	lea    rbx,[rip+0x9a0b]        # 0x140036a18
   14002d00d:	lea    rdi,[rip+0x9a04]        # 0x140036a18
   14002d014:	jmp    0x14002d024
   14002d016:	mov    rax,QWORD PTR [rbx]
   14002d019:	test   rax,rax
   14002d01c:	je     0x14002d020
   14002d01e:	call   rax
   14002d020:	add    rbx,0x8
   14002d024:	cmp    rbx,rdi
   14002d027:	jb     0x14002d016
   14002d029:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d02e:	add    rsp,0x20
   14002d032:	pop    rdi
   14002d033:	ret    
   14002d034:	mov    QWORD PTR [rsp+0x8],rbx
   14002d039:	push   rdi
   14002d03a:	sub    rsp,0x20
   14002d03e:	lea    rbx,[rip+0x99e3]        # 0x140036a28
   14002d045:	lea    rdi,[rip+0x99dc]        # 0x140036a28
   14002d04c:	jmp    0x14002d05c
   14002d04e:	mov    rax,QWORD PTR [rbx]
   14002d051:	test   rax,rax
   14002d054:	je     0x14002d058
   14002d056:	call   rax
   14002d058:	add    rbx,0x8
   14002d05c:	cmp    rbx,rdi
   14002d05f:	jb     0x14002d04e
   14002d061:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d066:	add    rsp,0x20
   14002d06a:	pop    rdi
   14002d06b:	ret    
   14002d06c:	jmp    QWORD PTR [rip+0x22f6]        # 0x14002f368
   14002d072:	jmp    QWORD PTR [rip+0x22e8]        # 0x14002f360
   14002d078:	jmp    QWORD PTR [rip+0x22c2]        # 0x14002f340
   14002d07e:	jmp    QWORD PTR [rip+0x22b4]        # 0x14002f338
   14002d084:	jmp    QWORD PTR [rip+0x229e]        # 0x14002f328
   14002d08a:	jmp    QWORD PTR [rip+0x2288]        # 0x14002f318
   14002d090:	jmp    QWORD PTR [rip+0x227a]        # 0x14002f310
   14002d096:	jmp    QWORD PTR [rip+0x226c]        # 0x14002f308
   14002d09c:	jmp    QWORD PTR [rip+0x225e]        # 0x14002f300
   14002d0a2:	jmp    QWORD PTR [rip+0x2250]        # 0x14002f2f8
   14002d0a8:	jmp    QWORD PTR [rip+0x2242]        # 0x14002f2f0
   14002d0ae:	jmp    QWORD PTR [rip+0x2234]        # 0x14002f2e8
   14002d0b4:	jmp    QWORD PTR [rip+0x2226]        # 0x14002f2e0
   14002d0ba:	jmp    QWORD PTR [rip+0x20e0]        # 0x14002f1a0
   14002d0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d0c5:	push   rdi
   14002d0c6:	sub    rsp,0x20
   14002d0ca:	xor    edx,edx
   14002d0cc:	mov    rdi,rcx
   14002d0cf:	lea    r8d,[rdx+0x28]
   14002d0d3:	add    rcx,r8
   14002d0d6:	call   0x14002ce12
   14002d0db:	and    QWORD PTR [rdi+0x50],0x0
   14002d0e0:	and    DWORD PTR [rdi+0x58],0x0
   14002d0e4:	and    DWORD PTR [rdi+0x5c],0x0
   14002d0e8:	lea    rax,[rip+0xfffffffffffd2f11]        # 0x140000000
   14002d0ef:	lea    rcx,[rdi+0x28]
   14002d0f3:	mov    QWORD PTR [rdi+0x10],rax
   14002d0f7:	mov    QWORD PTR [rdi+0x8],rax
   14002d0fb:	lea    rax,[rip+0x2d26]        # 0x14002fe28
   14002d102:	xor    r8d,r8d
   14002d105:	xor    edx,edx
   14002d107:	mov    DWORD PTR [rdi],0x60
   14002d10d:	mov    QWORD PTR [rdi+0x20],rax
   14002d111:	mov    DWORD PTR [rdi+0x18],0xc00
   14002d118:	call   0x140001110
   14002d11d:	test   eax,eax
   14002d11f:	jne    0x14002d157
   14002d121:	call   QWORD PTR [rip+0x2039]        # 0x14002f160
   14002d127:	movzx  ecx,ax
   14002d12a:	or     ecx,0x80070000
   14002d130:	test   eax,eax
   14002d132:	cmovle ecx,eax
   14002d135:	test   ecx,ecx
   14002d137:	jns    0x14002d157
   14002d139:	call   QWORD PTR [rip+0x2069]        # 0x14002f1a8
   14002d13f:	test   eax,eax
   14002d141:	je     0x14002d150
   14002d143:	lea    rcx,[rip+0x2cf6]        # 0x14002fe40
   14002d14a:	call   QWORD PTR [rip+0x2028]        # 0x14002f178
   14002d150:	mov    BYTE PTR [rip+0x16375],0x1        # 0x1400434cc
   14002d157:	mov    rax,rdi
   14002d15a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d15f:	add    rsp,0x20
   14002d163:	pop    rdi
   14002d164:	ret    
   14002d165:	int3   
   14002d166:	int3   
   14002d167:	int3   
   14002d168:	rex push rbx
   14002d16a:	sub    rsp,0x20
   14002d16e:	mov    rbx,rcx
   14002d171:	add    rcx,0x28
   14002d175:	call   QWORD PTR [rip+0x210d]        # 0x14002f288
   14002d17b:	mov    rcx,QWORD PTR [rbx+0x50]
   14002d17f:	test   rcx,rcx
   14002d182:	je     0x14002d18e
   14002d184:	call   0x14002c980
   14002d189:	and    QWORD PTR [rbx+0x50],0x0
   14002d18e:	and    DWORD PTR [rbx+0x58],0x0
   14002d192:	and    DWORD PTR [rbx+0x5c],0x0
   14002d196:	add    rsp,0x20
   14002d19a:	pop    rbx
   14002d19b:	ret    
   14002d19c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d1a1:	push   rdi
   14002d1a2:	sub    rsp,0x20
   14002d1a6:	mov    edi,edx
   14002d1a8:	mov    ebx,ecx
   14002d1aa:	call   0x14002c306
   14002d1af:	mov    BYTE PTR [rax+0x28],bl
   14002d1b2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d1b7:	mov    DWORD PTR [rax+0x78],edi
   14002d1ba:	mov    eax,0x1
   14002d1bf:	add    rsp,0x20
   14002d1c3:	pop    rdi
   14002d1c4:	ret    
   14002d1c5:	int3   
   14002d1c6:	int3   
   14002d1c7:	int3   
   14002d1c8:	jmp    0x14002d1ce
   14002d1cd:	int3   
   14002d1ce:	jmp    QWORD PTR [rip+0x2abc]        # 0x14002fc90
   14002d1d4:	jmp    QWORD PTR [rip+0x20f6]        # 0x14002f2d0
   14002d1da:	jmp    QWORD PTR [rip+0x20f8]        # 0x14002f2d8
   14002d1e0:	mov    rax,rsp
   14002d1e3:	mov    QWORD PTR [rax+0x8],rbx
   14002d1e7:	mov    QWORD PTR [rax+0x10],rbp
   14002d1eb:	mov    QWORD PTR [rax+0x18],rsi
   14002d1ef:	mov    QWORD PTR [rax+0x20],rdi
   14002d1f3:	push   r14
   14002d1f5:	sub    rsp,0x20
   14002d1f9:	mov    rbx,QWORD PTR [r9+0x38]
   14002d1fd:	mov    rsi,rdx
   14002d200:	mov    r14,r8
   14002d203:	mov    rbp,rcx
   14002d206:	lea    r8,[rbx+0x4]
   14002d20a:	mov    rdx,r9
   14002d20d:	mov    rcx,rsi
   14002d210:	mov    rdi,r9
   14002d213:	call   0x14002cd04
   14002d218:	mov    r11d,DWORD PTR [rbx+0x4]
   14002d21c:	mov    r10d,DWORD PTR [rbp+0x4]
   14002d220:	mov    eax,r11d
   14002d223:	and    r11d,0x2
   14002d227:	mov    r8d,0x1
   14002d22d:	and    eax,r8d
   14002d230:	and    r10b,0x66
   14002d234:	cmove  r11d,eax
   14002d238:	test   r11d,r11d
   14002d23b:	je     0x14002d251
   14002d23d:	mov    r9,rdi
   14002d240:	mov    r8,r14
   14002d243:	mov    rdx,rsi
   14002d246:	mov    rcx,rbp
   14002d249:	call   0x14002d1da
   14002d24e:	mov    r8d,eax
   14002d251:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d256:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d25b:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d260:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d265:	mov    eax,r8d
   14002d268:	add    rsp,0x20
   14002d26c:	pop    r14
   14002d26e:	ret    
   14002d26f:	int3   
   14002d270:	jmp    QWORD PTR [rip+0x2222]        # 0x14002f498
   14002d276:	int3   
   14002d277:	int3   
   14002d278:	int3   
   14002d279:	int3   
   14002d27a:	int3   
   14002d27b:	int3   
   14002d27c:	int3   
   14002d27d:	int3   
   14002d27e:	int3   
   14002d27f:	int3   
   14002d280:	lea    rcx,[rdx+0x20]
   14002d287:	rex.W jmp QWORD PTR [rip+0x2702]        # 0x14002f990
   14002d28e:	lea    rcx,[rdx+0x28]
   14002d295:	rex.W jmp QWORD PTR [rip+0x26f4]        # 0x14002f990
   14002d29c:	int3   
   14002d29d:	int3   
   14002d29e:	int3   
   14002d29f:	int3   
   14002d2a0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d2a7:	jmp    0x140001150
   14002d2ac:	int3   
   14002d2ad:	int3   
   14002d2ae:	int3   
   14002d2af:	int3   
   14002d2b0:	mov    QWORD PTR [rsp+0x10],rdx
   14002d2b5:	push   rbp
   14002d2b6:	sub    rsp,0x20
   14002d2ba:	mov    rbp,rdx
   14002d2bd:	mov    rcx,QWORD PTR [rbp+0x68]
   14002d2c1:	mov    QWORD PTR [rbp+0x68],rcx
   14002d2c5:	xor    eax,eax
   14002d2c7:	inc    rcx
   14002d2ca:	je     0x14002d2e3
   14002d2cc:	cmp    rcx,0xffffffffffffffff
   14002d2d0:	ja     0x14002d2dd
   14002d2d2:	call   QWORD PTR [rip+0x26c0]        # 0x14002f998
   14002d2d8:	test   rax,rax
   14002d2db:	jne    0x14002d2e3
   14002d2dd:	call   QWORD PTR [rip+0x1fc5]        # 0x14002f2a8
   14002d2e3:	mov    QWORD PTR [rbp+0x78],rax
   14002d2e7:	lea    rax,[rip+0xfffffffffffd4789]        # 0x140001a77
   14002d2ee:	add    rsp,0x20
   14002d2f2:	pop    rbp
   14002d2f3:	ret    
   14002d2f4:	int3   
   14002d2f5:	mov    QWORD PTR [rsp+0x10],rdx
   14002d2fa:	push   rbx
   14002d2fb:	push   rbp
   14002d2fc:	sub    rsp,0x28
   14002d300:	mov    rbp,rdx
   14002d303:	mov    rbx,QWORD PTR [rbp+0x60]
   14002d307:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d30c:	jb     0x14002d317
   14002d30e:	mov    rcx,QWORD PTR [rbx]
   14002d311:	call   QWORD PTR [rip+0x2861]        # 0x14002fb78
   14002d317:	mov    QWORD PTR [rbx+0x18],0xf
   14002d31f:	mov    QWORD PTR [rbx+0x10],0x0
   14002d327:	mov    BYTE PTR [rbx],0x0
   14002d32a:	xor    edx,edx
   14002d32c:	xor    ecx,ecx
   14002d32e:	call   0x14002d1d4
   14002d333:	nop
   14002d334:	int3   
   14002d335:	int3   
   14002d336:	int3   
   14002d337:	int3   
   14002d338:	int3   
   14002d339:	int3   
   14002d33a:	int3   
   14002d33b:	int3   
   14002d33c:	int3   
   14002d33d:	int3   
   14002d33e:	int3   
   14002d33f:	int3   
   14002d340:	mov    rcx,QWORD PTR [rdx+0x48]
   14002d347:	rex.W jmp QWORD PTR [rip+0x282a]        # 0x14002fb78
   14002d34e:	int3   
   14002d34f:	int3   
   14002d350:	mov    rcx,QWORD PTR [rdx+0x48]
   14002d357:	rex.W jmp QWORD PTR [rip+0x281a]        # 0x14002fb78
   14002d35e:	mov    rcx,QWORD PTR [rdx+0x50]
   14002d365:	rex.W jmp QWORD PTR [rip+0x280c]        # 0x14002fb78
   14002d36c:	mov    rcx,QWORD PTR [rdx+0x50]
   14002d373:	rex.W jmp QWORD PTR [rip+0x27fe]        # 0x14002fb78
   14002d37a:	int3   
   14002d37b:	int3   
   14002d37c:	int3   
   14002d37d:	int3   
   14002d37e:	int3   
   14002d37f:	int3   
   14002d380:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d387:	rex.W jmp QWORD PTR [rip+0x27ea]        # 0x14002fb78
   14002d38e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d395:	rex.W jmp QWORD PTR [rip+0x27dc]        # 0x14002fb78
   14002d39c:	int3   
   14002d39d:	int3   
   14002d39e:	int3   
   14002d39f:	int3   
   14002d3a0:	mov    rcx,QWORD PTR [rdx+0x50]
   14002d3a7:	rex.W jmp QWORD PTR [rip+0x27ca]        # 0x14002fb78
   14002d3ae:	int3   
   14002d3af:	int3   
   14002d3b0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d3b7:	rex.W jmp QWORD PTR [rip+0x27ba]        # 0x14002fb78
   14002d3be:	int3   
   14002d3bf:	int3   
   14002d3c0:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d3c7:	rex.W jmp QWORD PTR [rip+0x27aa]        # 0x14002fb78
   14002d3ce:	int3   
   14002d3cf:	int3   
   14002d3d0:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d3d7:	rex.W jmp QWORD PTR [rip+0x279a]        # 0x14002fb78
   14002d3de:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d3e5:	rex.W jmp QWORD PTR [rip+0x278c]        # 0x14002fb78
   14002d3ec:	int3   
   14002d3ed:	int3   
   14002d3ee:	int3   
   14002d3ef:	int3   
   14002d3f0:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d3f7:	rex.W jmp QWORD PTR [rip+0x277a]        # 0x14002fb78
   14002d3fe:	mov    rcx,QWORD PTR [rdx+0x78]
   14002d405:	rex.W jmp QWORD PTR [rip+0x276c]        # 0x14002fb78
   14002d40c:	int3   
   14002d40d:	int3   
   14002d40e:	int3   
   14002d40f:	int3   
   14002d410:	mov    rcx,QWORD PTR [rdx+0x30]
   14002d417:	rex.W jmp QWORD PTR [rip+0x275a]        # 0x14002fb78
   14002d41e:	int3   
   14002d41f:	int3   
   14002d420:	mov    rcx,QWORD PTR [rdx+0x68]
   14002d427:	rex.W jmp QWORD PTR [rip+0x274a]        # 0x14002fb78
   14002d42e:	mov    rcx,QWORD PTR [rdx+0x58]
   14002d435:	rex.W jmp QWORD PTR [rip+0x273c]        # 0x14002fb78
   14002d43c:	int3   
   14002d43d:	int3   
   14002d43e:	int3   
   14002d43f:	int3   
   14002d440:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d447:	rex.W jmp QWORD PTR [rip+0x272a]        # 0x14002fb78
   14002d44e:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d455:	rex.W jmp QWORD PTR [rip+0x271c]        # 0x14002fb78
   14002d45c:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d463:	rex.W jmp QWORD PTR [rip+0x270e]        # 0x14002fb78
   14002d46a:	int3   
   14002d46b:	int3   
   14002d46c:	int3   
   14002d46d:	int3   
   14002d46e:	int3   
   14002d46f:	int3   
   14002d470:	mov    rcx,QWORD PTR [rdx+0x70]
   14002d477:	rex.W jmp QWORD PTR [rip+0x26fa]        # 0x14002fb78
   14002d47e:	mov    rcx,QWORD PTR [rdx+0x70]
   14002d485:	rex.W jmp QWORD PTR [rip+0x26ec]        # 0x14002fb78
   14002d48c:	int3   
   14002d48d:	int3   
   14002d48e:	int3   
   14002d48f:	int3   
   14002d490:	mov    rcx,QWORD PTR [rdx+0x20]
   14002d497:	rex.W jmp QWORD PTR [rip+0x26da]        # 0x14002fb78
   14002d49e:	int3   
   14002d49f:	int3   
   14002d4a0:	lea    rcx,[rdx+0x58]
   14002d4a7:	rex.W jmp QWORD PTR [rip+0x24ca]        # 0x14002f978
   14002d4ae:	int3   
   14002d4af:	int3   
   14002d4b0:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d4b7:	rex.W jmp QWORD PTR [rip+0x1c02]        # 0x14002f0c0
   14002d4be:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d4c5:	add    rcx,0x160
   14002d4cc:	rex.W jmp QWORD PTR [rip+0x2455]        # 0x14002f928
   14002d4d3:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d4da:	add    rcx,0x238
   14002d4e1:	rex.W jmp QWORD PTR [rip+0x2440]        # 0x14002f928
   14002d4e8:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d4ef:	add    rcx,0x310
   14002d4f6:	rex.W jmp QWORD PTR [rip+0x242b]        # 0x14002f928
   14002d4fd:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d504:	add    rcx,0x3e8
   14002d50b:	rex.W jmp QWORD PTR [rip+0x2416]        # 0x14002f928
   14002d512:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d519:	add    rcx,0x4c0
   14002d520:	rex.W jmp QWORD PTR [rip+0x2379]        # 0x14002f8a0
   14002d527:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d52e:	add    rcx,0x598
   14002d535:	rex.W jmp QWORD PTR [rip+0x2404]        # 0x14002f940
   14002d53c:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d543:	add    rcx,0x670
   14002d54a:	rex.W jmp QWORD PTR [rip+0x22ff]        # 0x14002f850
   14002d551:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d558:	add    rcx,0x748
   14002d55f:	rex.W jmp QWORD PTR [rip+0x2312]        # 0x14002f878
   14002d566:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d56d:	add    rcx,0x820
   14002d574:	rex.W jmp QWORD PTR [rip+0x2325]        # 0x14002f8a0
   14002d57b:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d582:	add    rcx,0x8f8
   14002d589:	rex.W jmp QWORD PTR [rip+0x22e8]        # 0x14002f878
   14002d590:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d597:	add    rcx,0x9d0
   14002d59e:	rex.W jmp QWORD PTR [rip+0x22fb]        # 0x14002f8a0
   14002d5a5:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d5ac:	add    rcx,0xaa8
   14002d5b3:	rex.W jmp QWORD PTR [rip+0x22e6]        # 0x14002f8a0
   14002d5ba:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d5c1:	add    rcx,0xb80
   14002d5c8:	rex.W jmp QWORD PTR [rip+0x2371]        # 0x14002f940
   14002d5cf:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d5d6:	add    rcx,0xc58
   14002d5dd:	rex.W jmp QWORD PTR [rip+0x2344]        # 0x14002f928
   14002d5e4:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d5eb:	add    rcx,0xd30
   14002d5f2:	rex.W jmp QWORD PTR [rip+0x22a7]        # 0x14002f8a0
   14002d5f9:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d600:	add    rcx,0xe08
   14002d607:	rex.W jmp QWORD PTR [rip+0x2242]        # 0x14002f850
   14002d60e:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d615:	add    rcx,0xee0
   14002d61c:	rex.W jmp QWORD PTR [rip+0x2305]        # 0x14002f928
   14002d623:	int3   
   14002d624:	int3   
   14002d625:	int3   
   14002d626:	int3   
   14002d627:	int3   
   14002d628:	int3   
   14002d629:	int3   
   14002d62a:	int3   
   14002d62b:	int3   
   14002d62c:	int3   
   14002d62d:	int3   
   14002d62e:	int3   
   14002d62f:	int3   
   14002d630:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d637:	rex.W jmp QWORD PTR [rip+0x1a82]        # 0x14002f0c0
   14002d63e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d645:	add    rcx,0x160
   14002d64c:	rex.W jmp QWORD PTR [rip+0x22d5]        # 0x14002f928
   14002d653:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d65a:	add    rcx,0x238
   14002d661:	rex.W jmp QWORD PTR [rip+0x22c0]        # 0x14002f928
   14002d668:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d66f:	add    rcx,0x310
   14002d676:	rex.W jmp QWORD PTR [rip+0x22ab]        # 0x14002f928
   14002d67d:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d684:	add    rcx,0x3e8
   14002d68b:	rex.W jmp QWORD PTR [rip+0x2296]        # 0x14002f928
   14002d692:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d699:	add    rcx,0x4c0
   14002d6a0:	rex.W jmp QWORD PTR [rip+0x21f9]        # 0x14002f8a0
   14002d6a7:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d6ae:	add    rcx,0x598
   14002d6b5:	rex.W jmp QWORD PTR [rip+0x2284]        # 0x14002f940
   14002d6bc:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d6c3:	add    rcx,0x670
   14002d6ca:	rex.W jmp QWORD PTR [rip+0x217f]        # 0x14002f850
   14002d6d1:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d6d8:	add    rcx,0x748
   14002d6df:	rex.W jmp QWORD PTR [rip+0x2192]        # 0x14002f878
   14002d6e6:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d6ed:	add    rcx,0x820
   14002d6f4:	rex.W jmp QWORD PTR [rip+0x21a5]        # 0x14002f8a0
   14002d6fb:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d702:	add    rcx,0x8f8
   14002d709:	rex.W jmp QWORD PTR [rip+0x2168]        # 0x14002f878
   14002d710:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d717:	add    rcx,0x9d0
   14002d71e:	rex.W jmp QWORD PTR [rip+0x217b]        # 0x14002f8a0
   14002d725:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d72c:	add    rcx,0xaa8
   14002d733:	rex.W jmp QWORD PTR [rip+0x2166]        # 0x14002f8a0
   14002d73a:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d741:	add    rcx,0xb80
   14002d748:	rex.W jmp QWORD PTR [rip+0x21f1]        # 0x14002f940
   14002d74f:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d756:	add    rcx,0xc58
   14002d75d:	rex.W jmp QWORD PTR [rip+0x21c4]        # 0x14002f928
   14002d764:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d76b:	add    rcx,0xd30
   14002d772:	rex.W jmp QWORD PTR [rip+0x2127]        # 0x14002f8a0
   14002d779:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d780:	add    rcx,0xe08
   14002d787:	rex.W jmp QWORD PTR [rip+0x20c2]        # 0x14002f850
   14002d78e:	int3   
   14002d78f:	int3   
   14002d790:	lea    rcx,[rdx+0x48]
   14002d797:	rex.W jmp QWORD PTR [rip+0x21f2]        # 0x14002f990
   14002d79e:	int3   
   14002d79f:	int3   
   14002d7a0:	lea    rcx,[rdx+0x50]
   14002d7a7:	rex.W jmp QWORD PTR [rip+0x21e2]        # 0x14002f990
   14002d7ae:	lea    rcx,[rdx+0x70]
   14002d7b5:	rex.W jmp QWORD PTR [rip+0x219c]        # 0x14002f958
   14002d7bc:	lea    rcx,[rdx+0x58]
   14002d7c3:	rex.W jmp QWORD PTR [rip+0x21c6]        # 0x14002f990
   14002d7ca:	int3   
   14002d7cb:	int3   
   14002d7cc:	int3   
   14002d7cd:	int3   
   14002d7ce:	int3   
   14002d7cf:	int3   
   14002d7d0:	lea    rcx,[rdx+0x48]
   14002d7d7:	rex.W jmp QWORD PTR [rip+0x219a]        # 0x14002f978
   14002d7de:	lea    rcx,[rdx+0x50]
   14002d7e5:	rex.W jmp QWORD PTR [rip+0x218c]        # 0x14002f978
   14002d7ec:	lea    rcx,[rdx+0x40]
   14002d7f3:	rex.W jmp QWORD PTR [rip+0x217e]        # 0x14002f978
   14002d7fa:	lea    rcx,[rdx+0x40]
   14002d801:	rex.W jmp QWORD PTR [rip+0x2188]        # 0x14002f990
   14002d808:	int3   
   14002d809:	int3   
   14002d80a:	int3   
   14002d80b:	int3   
   14002d80c:	int3   
   14002d80d:	int3   
   14002d80e:	int3   
   14002d80f:	int3   
   14002d810:	lea    rcx,[rdx+0x30]
   14002d817:	rex.W jmp QWORD PTR [rip+0x215a]        # 0x14002f978
   14002d81e:	lea    rcx,[rdx+0x20]
   14002d825:	rex.W jmp QWORD PTR [rip+0x2164]        # 0x14002f990
   14002d82c:	int3   
   14002d82d:	int3   
   14002d82e:	int3   
   14002d82f:	int3   
   14002d830:	lea    rcx,[rdx+0x40]
   14002d837:	rex.W jmp QWORD PTR [rip+0x2152]        # 0x14002f990
   14002d83e:	int3   
   14002d83f:	int3   
   14002d840:	lea    rcx,[rdx+0x20]
   14002d847:	rex.W jmp QWORD PTR [rip+0x212a]        # 0x14002f978
   14002d84e:	int3   
   14002d84f:	int3   
   14002d850:	lea    rcx,[rdx+0x20]
   14002d857:	rex.W jmp QWORD PTR [rip+0x2132]        # 0x14002f990
   14002d85e:	int3   
   14002d85f:	int3   
   14002d860:	lea    rcx,[rdx+0x30]
   14002d867:	rex.W jmp QWORD PTR [rip+0x2122]        # 0x14002f990
   14002d86e:	int3   
   14002d86f:	int3   
   14002d870:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d877:	rex.W jmp QWORD PTR [rip+0x1842]        # 0x14002f0c0
   14002d87e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d885:	add    rcx,0x160
   14002d88c:	rex.W jmp QWORD PTR [rip+0x2095]        # 0x14002f928
   14002d893:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d89a:	add    rcx,0x238
   14002d8a1:	rex.W jmp QWORD PTR [rip+0x1fd0]        # 0x14002f878
   14002d8a8:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d8af:	add    rcx,0x310
   14002d8b6:	rex.W jmp QWORD PTR [rip+0x1fbb]        # 0x14002f878
   14002d8bd:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d8c4:	add    rcx,0x3e8
   14002d8cb:	rex.W jmp QWORD PTR [rip+0x2056]        # 0x14002f928
   14002d8d2:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d8d9:	add    rcx,0x4c0
   14002d8e0:	rex.W jmp QWORD PTR [rip+0x1fb9]        # 0x14002f8a0
   14002d8e7:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d8ee:	add    rcx,0x598
   14002d8f5:	rex.W jmp QWORD PTR [rip+0x1fa4]        # 0x14002f8a0
   14002d8fc:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d903:	add    rcx,0x670
   14002d90a:	rex.W jmp QWORD PTR [rip+0x1f8f]        # 0x14002f8a0
   14002d911:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d918:	add    rcx,0x748
   14002d91f:	rex.W jmp QWORD PTR [rip+0x2002]        # 0x14002f928
   14002d926:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d92d:	add    rcx,0x820
   14002d934:	rex.W jmp QWORD PTR [rip+0x1fed]        # 0x14002f928
   14002d93b:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d942:	add    rcx,0x8f8
   14002d949:	rex.W jmp QWORD PTR [rip+0x1f50]        # 0x14002f8a0
   14002d950:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d957:	add    rcx,0x9d0
   14002d95e:	rex.W jmp QWORD PTR [rip+0x1f3b]        # 0x14002f8a0
   14002d965:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d96c:	add    rcx,0xaa8
   14002d973:	rex.W jmp QWORD PTR [rip+0x1fae]        # 0x14002f928
   14002d97a:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d981:	add    rcx,0xb80
   14002d988:	rex.W jmp QWORD PTR [rip+0x1f99]        # 0x14002f928
   14002d98f:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d996:	add    rcx,0xc58
   14002d99d:	rex.W jmp QWORD PTR [rip+0x1f9c]        # 0x14002f940
   14002d9a4:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d9ab:	add    rcx,0xd30
   14002d9b2:	rex.W jmp QWORD PTR [rip+0x1f87]        # 0x14002f940
   14002d9b9:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d9c0:	add    rcx,0xe08
   14002d9c7:	rex.W jmp QWORD PTR [rip+0x1cda]        # 0x14002f6a8
   14002d9ce:	int3   
   14002d9cf:	int3   
   14002d9d0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d9d7:	rex.W jmp QWORD PTR [rip+0x16e2]        # 0x14002f0c0
   14002d9de:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d9e5:	add    rcx,0x160
   14002d9ec:	rex.W jmp QWORD PTR [rip+0x1f35]        # 0x14002f928
   14002d9f3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d9fa:	add    rcx,0x238
   14002da01:	rex.W jmp QWORD PTR [rip+0x1e70]        # 0x14002f878
   14002da08:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da0f:	add    rcx,0x310
   14002da16:	rex.W jmp QWORD PTR [rip+0x1e5b]        # 0x14002f878
   14002da1d:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da24:	add    rcx,0x3e8
   14002da2b:	rex.W jmp QWORD PTR [rip+0x1ef6]        # 0x14002f928
   14002da32:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da39:	add    rcx,0x4c0
   14002da40:	rex.W jmp QWORD PTR [rip+0x1e59]        # 0x14002f8a0
   14002da47:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da4e:	add    rcx,0x598
   14002da55:	rex.W jmp QWORD PTR [rip+0x1e44]        # 0x14002f8a0
   14002da5c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da63:	add    rcx,0x670
   14002da6a:	rex.W jmp QWORD PTR [rip+0x1e2f]        # 0x14002f8a0
   14002da71:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da78:	add    rcx,0x748
   14002da7f:	rex.W jmp QWORD PTR [rip+0x1ea2]        # 0x14002f928
   14002da86:	mov    rcx,QWORD PTR [rdx+0x40]
   14002da8d:	add    rcx,0x820
   14002da94:	rex.W jmp QWORD PTR [rip+0x1e8d]        # 0x14002f928
   14002da9b:	mov    rcx,QWORD PTR [rdx+0x40]
   14002daa2:	add    rcx,0x8f8
   14002daa9:	rex.W jmp QWORD PTR [rip+0x1df0]        # 0x14002f8a0
   14002dab0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dab7:	add    rcx,0x9d0
   14002dabe:	rex.W jmp QWORD PTR [rip+0x1ddb]        # 0x14002f8a0
   14002dac5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dacc:	add    rcx,0xaa8
   14002dad3:	rex.W jmp QWORD PTR [rip+0x1e4e]        # 0x14002f928
   14002dada:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dae1:	add    rcx,0xb80
   14002dae8:	rex.W jmp QWORD PTR [rip+0x1e39]        # 0x14002f928
   14002daef:	mov    rcx,QWORD PTR [rdx+0x40]
   14002daf6:	add    rcx,0xc58
   14002dafd:	rex.W jmp QWORD PTR [rip+0x1e3c]        # 0x14002f940
   14002db04:	mov    rcx,QWORD PTR [rdx+0x40]
   14002db0b:	add    rcx,0xd30
   14002db12:	rex.W jmp QWORD PTR [rip+0x1e27]        # 0x14002f940
   14002db19:	int3   
   14002db1a:	int3   
   14002db1b:	int3   
   14002db1c:	int3   
   14002db1d:	int3   
   14002db1e:	int3   
   14002db1f:	int3   
   14002db20:	lea    rcx,[rdx+0x38]
   14002db27:	rex.W jmp QWORD PTR [rip+0x1e62]        # 0x14002f990
   14002db2e:	mov    rcx,QWORD PTR [rdx+0x48]
   14002db35:	rex.W jmp QWORD PTR [rip+0x203c]        # 0x14002fb78
   14002db3c:	mov    rcx,QWORD PTR [rdx+0x48]
   14002db43:	rex.W jmp QWORD PTR [rip+0x202e]        # 0x14002fb78
   14002db4a:	int3   
   14002db4b:	int3   
   14002db4c:	int3   
   14002db4d:	int3   
   14002db4e:	int3   
   14002db4f:	int3   
   14002db50:	mov    rcx,QWORD PTR [rdx+0x60]
   14002db57:	rex.W jmp QWORD PTR [rip+0x1562]        # 0x14002f0c0
   14002db5e:	mov    rcx,QWORD PTR [rdx+0x60]
   14002db65:	add    rcx,0x160
   14002db6c:	rex.W jmp QWORD PTR [rip+0x1db5]        # 0x14002f928
   14002db73:	mov    rcx,QWORD PTR [rdx+0x60]
   14002db7a:	add    rcx,0x238
   14002db81:	rex.W jmp QWORD PTR [rip+0x1da0]        # 0x14002f928
   14002db88:	mov    rcx,QWORD PTR [rdx+0x60]
   14002db8f:	add    rcx,0x310
   14002db96:	rex.W jmp QWORD PTR [rip+0x1d8b]        # 0x14002f928
   14002db9d:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dba4:	add    rcx,0x3e8
   14002dbab:	rex.W jmp QWORD PTR [rip+0x1d76]        # 0x14002f928
   14002dbb2:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dbb9:	add    rcx,0x4c0
   14002dbc0:	rex.W jmp QWORD PTR [rip+0x1cd9]        # 0x14002f8a0
   14002dbc7:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dbce:	add    rcx,0x598
   14002dbd5:	rex.W jmp QWORD PTR [rip+0x1d64]        # 0x14002f940
   14002dbdc:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dbe3:	add    rcx,0x670
   14002dbea:	rex.W jmp QWORD PTR [rip+0x1c5f]        # 0x14002f850
   14002dbf1:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dbf8:	add    rcx,0x748
   14002dbff:	rex.W jmp QWORD PTR [rip+0x1c72]        # 0x14002f878
   14002dc06:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc0d:	add    rcx,0x820
   14002dc14:	rex.W jmp QWORD PTR [rip+0x1c85]        # 0x14002f8a0
   14002dc1b:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc22:	add    rcx,0x8f8
   14002dc29:	rex.W jmp QWORD PTR [rip+0x1c48]        # 0x14002f878
   14002dc30:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc37:	add    rcx,0x9d0
   14002dc3e:	rex.W jmp QWORD PTR [rip+0x1c5b]        # 0x14002f8a0
   14002dc45:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc4c:	add    rcx,0xaa8
   14002dc53:	rex.W jmp QWORD PTR [rip+0x1c46]        # 0x14002f8a0
   14002dc5a:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc61:	add    rcx,0xb80
   14002dc68:	rex.W jmp QWORD PTR [rip+0x1cd1]        # 0x14002f940
   14002dc6f:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc76:	add    rcx,0xc58
   14002dc7d:	rex.W jmp QWORD PTR [rip+0x1c1c]        # 0x14002f8a0
   14002dc84:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dc8b:	add    rcx,0xd30
   14002dc92:	rex.W jmp QWORD PTR [rip+0x1bb7]        # 0x14002f850
   14002dc99:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dca0:	add    rcx,0xe08
   14002dca7:	rex.W jmp QWORD PTR [rip+0x1c7a]        # 0x14002f928
   14002dcae:	mov    rcx,QWORD PTR [rdx+0x60]
   14002dcb5:	add    rcx,0xee0
   14002dcbc:	rex.W jmp QWORD PTR [rip+0x1c65]        # 0x14002f928
   14002dcc3:	int3   
   14002dcc4:	int3   
   14002dcc5:	int3   
   14002dcc6:	int3   
   14002dcc7:	int3   
   14002dcc8:	int3   
   14002dcc9:	int3   
   14002dcca:	int3   
   14002dccb:	int3   
   14002dccc:	int3   
   14002dccd:	int3   
   14002dcce:	int3   
   14002dccf:	int3   
   14002dcd0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dcd7:	rex.W jmp QWORD PTR [rip+0x13e2]        # 0x14002f0c0
   14002dcde:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dce5:	add    rcx,0x160
   14002dcec:	rex.W jmp QWORD PTR [rip+0x1c35]        # 0x14002f928
   14002dcf3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dcfa:	add    rcx,0x238
   14002dd01:	rex.W jmp QWORD PTR [rip+0x1c20]        # 0x14002f928
   14002dd08:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd0f:	add    rcx,0x310
   14002dd16:	rex.W jmp QWORD PTR [rip+0x1c0b]        # 0x14002f928
   14002dd1d:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd24:	add    rcx,0x3e8
   14002dd2b:	rex.W jmp QWORD PTR [rip+0x1bf6]        # 0x14002f928
   14002dd32:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd39:	add    rcx,0x4c0
   14002dd40:	rex.W jmp QWORD PTR [rip+0x1b59]        # 0x14002f8a0
   14002dd47:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd4e:	add    rcx,0x598
   14002dd55:	rex.W jmp QWORD PTR [rip+0x1be4]        # 0x14002f940
   14002dd5c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd63:	add    rcx,0x670
   14002dd6a:	rex.W jmp QWORD PTR [rip+0x1adf]        # 0x14002f850
   14002dd71:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd78:	add    rcx,0x748
   14002dd7f:	rex.W jmp QWORD PTR [rip+0x1af2]        # 0x14002f878
   14002dd86:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dd8d:	add    rcx,0x820
   14002dd94:	rex.W jmp QWORD PTR [rip+0x1b05]        # 0x14002f8a0
   14002dd9b:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dda2:	add    rcx,0x8f8
   14002dda9:	rex.W jmp QWORD PTR [rip+0x1ac8]        # 0x14002f878
   14002ddb0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ddb7:	add    rcx,0x9d0
   14002ddbe:	rex.W jmp QWORD PTR [rip+0x1adb]        # 0x14002f8a0
   14002ddc5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ddcc:	add    rcx,0xaa8
   14002ddd3:	rex.W jmp QWORD PTR [rip+0x1ac6]        # 0x14002f8a0
   14002ddda:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dde1:	add    rcx,0xb80
   14002dde8:	rex.W jmp QWORD PTR [rip+0x1b51]        # 0x14002f940
   14002ddef:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ddf6:	add    rcx,0xc58
   14002ddfd:	rex.W jmp QWORD PTR [rip+0x1a9c]        # 0x14002f8a0
   14002de04:	mov    rcx,QWORD PTR [rdx+0x40]
   14002de0b:	add    rcx,0xd30
   14002de12:	rex.W jmp QWORD PTR [rip+0x1a37]        # 0x14002f850
   14002de19:	mov    rcx,QWORD PTR [rdx+0x40]
   14002de20:	add    rcx,0xe08
   14002de27:	rex.W jmp QWORD PTR [rip+0x1afa]        # 0x14002f928
   14002de2e:	int3   
   14002de2f:	int3   
   14002de30:	lea    rcx,[rdx+0x48]
   14002de37:	rex.W jmp QWORD PTR [rip+0x1b52]        # 0x14002f990
   14002de3e:	lea    rcx,[rdx+0x50]
   14002de45:	rex.W jmp QWORD PTR [rip+0x1b2c]        # 0x14002f978
   14002de4c:	lea    rcx,[rdx+0x40]
   14002de53:	rex.W jmp QWORD PTR [rip+0x1b1e]        # 0x14002f978
   14002de5a:	lea    rcx,[rdx+0x40]
   14002de61:	rex.W jmp QWORD PTR [rip+0x1b28]        # 0x14002f990
   14002de68:	int3   
   14002de69:	int3   
   14002de6a:	int3   
   14002de6b:	int3   
   14002de6c:	int3   
   14002de6d:	int3   
   14002de6e:	int3   
   14002de6f:	int3   
   14002de70:	lea    rcx,[rdx+0x40]
   14002de77:	rex.W jmp QWORD PTR [rip+0x1afa]        # 0x14002f978
   14002de7e:	lea    rcx,[rdx+0x20]
   14002de85:	rex.W jmp QWORD PTR [rip+0x1b04]        # 0x14002f990
   14002de8c:	int3   
   14002de8d:	int3   
   14002de8e:	int3   
   14002de8f:	int3   
   14002de90:	lea    rcx,[rdx+0x50]
   14002de97:	rex.W jmp QWORD PTR [rip+0x1af2]        # 0x14002f990
   14002de9e:	int3   
   14002de9f:	int3   
   14002dea0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dea7:	rex.W jmp QWORD PTR [rip+0x1212]        # 0x14002f0c0
   14002deae:	mov    rcx,QWORD PTR [rdx+0x40]
   14002deb5:	add    rcx,0x160
   14002debc:	rex.W jmp QWORD PTR [rip+0x1a65]        # 0x14002f928
   14002dec3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002deca:	add    rcx,0x238
   14002ded1:	rex.W jmp QWORD PTR [rip+0x19a0]        # 0x14002f878
   14002ded8:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dedf:	add    rcx,0x310
   14002dee6:	rex.W jmp QWORD PTR [rip+0x198b]        # 0x14002f878
   14002deed:	mov    rcx,QWORD PTR [rdx+0x40]
   14002def4:	add    rcx,0x3e8
   14002defb:	rex.W jmp QWORD PTR [rip+0x1a26]        # 0x14002f928
   14002df02:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df09:	add    rcx,0x4c0
   14002df10:	rex.W jmp QWORD PTR [rip+0x1a11]        # 0x14002f928
   14002df17:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df1e:	add    rcx,0x598
   14002df25:	rex.W jmp QWORD PTR [rip+0x1974]        # 0x14002f8a0
   14002df2c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df33:	add    rcx,0x670
   14002df3a:	rex.W jmp QWORD PTR [rip+0x195f]        # 0x14002f8a0
   14002df41:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df48:	add    rcx,0x748
   14002df4f:	rex.W jmp QWORD PTR [rip+0x194a]        # 0x14002f8a0
   14002df56:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df5d:	add    rcx,0x820
   14002df64:	rex.W jmp QWORD PTR [rip+0x1935]        # 0x14002f8a0
   14002df6b:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df72:	add    rcx,0x8f8
   14002df79:	rex.W jmp QWORD PTR [rip+0x1920]        # 0x14002f8a0
   14002df80:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df87:	add    rcx,0x9d0
   14002df8e:	rex.W jmp QWORD PTR [rip+0x1993]        # 0x14002f928
   14002df95:	mov    rcx,QWORD PTR [rdx+0x40]
   14002df9c:	add    rcx,0xaa8
   14002dfa3:	rex.W jmp QWORD PTR [rip+0x197e]        # 0x14002f928
   14002dfaa:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dfb1:	add    rcx,0xb80
   14002dfb8:	rex.W jmp QWORD PTR [rip+0x1969]        # 0x14002f928
   14002dfbf:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dfc6:	add    rcx,0xc58
   14002dfcd:	rex.W jmp QWORD PTR [rip+0x196c]        # 0x14002f940
   14002dfd4:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dfdb:	add    rcx,0xd30
   14002dfe2:	rex.W jmp QWORD PTR [rip+0x1957]        # 0x14002f940
   14002dfe9:	mov    rcx,QWORD PTR [rdx+0x40]
   14002dff0:	add    rcx,0xe08
   14002dff7:	rex.W jmp QWORD PTR [rip+0x16aa]        # 0x14002f6a8
   14002dffe:	int3   
   14002dfff:	int3   
   14002e000:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e007:	rex.W jmp QWORD PTR [rip+0x10b2]        # 0x14002f0c0
   14002e00e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e015:	add    rcx,0x160
   14002e01c:	rex.W jmp QWORD PTR [rip+0x1905]        # 0x14002f928
   14002e023:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e02a:	add    rcx,0x238
   14002e031:	rex.W jmp QWORD PTR [rip+0x1840]        # 0x14002f878
   14002e038:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e03f:	add    rcx,0x310
   14002e046:	rex.W jmp QWORD PTR [rip+0x182b]        # 0x14002f878
   14002e04d:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e054:	add    rcx,0x3e8
   14002e05b:	rex.W jmp QWORD PTR [rip+0x18c6]        # 0x14002f928
   14002e062:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e069:	add    rcx,0x4c0
   14002e070:	rex.W jmp QWORD PTR [rip+0x18b1]        # 0x14002f928
   14002e077:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e07e:	add    rcx,0x598
   14002e085:	rex.W jmp QWORD PTR [rip+0x1814]        # 0x14002f8a0
   14002e08c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e093:	add    rcx,0x670
   14002e09a:	rex.W jmp QWORD PTR [rip+0x17ff]        # 0x14002f8a0
   14002e0a1:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e0a8:	add    rcx,0x748
   14002e0af:	rex.W jmp QWORD PTR [rip+0x17ea]        # 0x14002f8a0
   14002e0b6:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e0bd:	add    rcx,0x820
   14002e0c4:	rex.W jmp QWORD PTR [rip+0x17d5]        # 0x14002f8a0
   14002e0cb:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e0d2:	add    rcx,0x8f8
   14002e0d9:	rex.W jmp QWORD PTR [rip+0x17c0]        # 0x14002f8a0
   14002e0e0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e0e7:	add    rcx,0x9d0
   14002e0ee:	rex.W jmp QWORD PTR [rip+0x1833]        # 0x14002f928
   14002e0f5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e0fc:	add    rcx,0xaa8
   14002e103:	rex.W jmp QWORD PTR [rip+0x181e]        # 0x14002f928
   14002e10a:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e111:	add    rcx,0xb80
   14002e118:	rex.W jmp QWORD PTR [rip+0x1809]        # 0x14002f928
   14002e11f:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e126:	add    rcx,0xc58
   14002e12d:	rex.W jmp QWORD PTR [rip+0x180c]        # 0x14002f940
   14002e134:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e13b:	add    rcx,0xd30
   14002e142:	rex.W jmp QWORD PTR [rip+0x17f7]        # 0x14002f940
   14002e149:	int3   
   14002e14a:	int3   
   14002e14b:	int3   
   14002e14c:	int3   
   14002e14d:	int3   
   14002e14e:	int3   
   14002e14f:	int3   
   14002e150:	lea    rcx,[rdx+0x28]
   14002e157:	rex.W jmp QWORD PTR [rip+0x1832]        # 0x14002f990
   14002e15e:	mov    rcx,QWORD PTR [rdx+0x38]
   14002e165:	rex.W jmp QWORD PTR [rip+0x1a0c]        # 0x14002fb78
   14002e16c:	mov    rcx,QWORD PTR [rdx+0x38]
   14002e173:	rex.W jmp QWORD PTR [rip+0x19fe]        # 0x14002fb78
   14002e17a:	int3   
   14002e17b:	int3   
   14002e17c:	int3   
   14002e17d:	int3   
   14002e17e:	int3   
   14002e17f:	int3   
   14002e180:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e187:	rex.W jmp QWORD PTR [rip+0xefa]        # 0x14002f088
   14002e18e:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e195:	add    rcx,0x408
   14002e19c:	jmp    0x14001e560
   14002e1a1:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e1a8:	add    rcx,0x12f8
   14002e1af:	jmp    0x140022010
   14002e1b4:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e1bb:	add    rcx,0x21e8
   14002e1c2:	jmp    0x14001c4d0
   14002e1c7:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e1ce:	add    rcx,0x3e18
   14002e1d5:	jmp    0x14001fcb0
   14002e1da:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e1e1:	add    rcx,0x5a48
   14002e1e8:	jmp    0x140026190
   14002e1ed:	int3   
   14002e1ee:	int3   
   14002e1ef:	int3   
   14002e1f0:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e1f7:	rex.W jmp QWORD PTR [rip+0xe8a]        # 0x14002f088
   14002e1fe:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e205:	add    rcx,0x408
   14002e20c:	jmp    0x14001e560
   14002e211:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e218:	add    rcx,0x12f8
   14002e21f:	jmp    0x140022010
   14002e224:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e22b:	add    rcx,0x21e8
   14002e232:	jmp    0x14001c4d0
   14002e237:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e23e:	add    rcx,0x3e18
   14002e245:	jmp    0x14001fcb0
   14002e24a:	int3   
   14002e24b:	int3   
   14002e24c:	int3   
   14002e24d:	int3   
   14002e24e:	int3   
   14002e24f:	int3   
   14002e250:	lea    rcx,[rdx+0x50]
   14002e257:	rex.W jmp QWORD PTR [rip+0x1732]        # 0x14002f990
   14002e25e:	lea    rcx,[rdx+0x40]
   14002e265:	rex.W jmp QWORD PTR [rip+0x1724]        # 0x14002f990
   14002e26c:	lea    rcx,[rdx+0x48]
   14002e273:	rex.W jmp QWORD PTR [rip+0x1716]        # 0x14002f990
   14002e27a:	int3   
   14002e27b:	int3   
   14002e27c:	int3   
   14002e27d:	int3   
   14002e27e:	int3   
   14002e27f:	int3   
   14002e280:	lea    rcx,[rdx+0x30]
   14002e287:	jmp    0x140023b50
   14002e28c:	int3   
   14002e28d:	int3   
   14002e28e:	int3   
   14002e28f:	int3   
   14002e290:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e297:	rex.W jmp QWORD PTR [rip+0xe22]        # 0x14002f0c0
   14002e29e:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e2a5:	add    rcx,0x158
   14002e2ac:	rex.W jmp QWORD PTR [rip+0x1675]        # 0x14002f928
   14002e2b3:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e2ba:	add    rcx,0x230
   14002e2c1:	rex.W jmp QWORD PTR [rip+0x1660]        # 0x14002f928
   14002e2c8:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e2cf:	add    rcx,0x308
   14002e2d6:	rex.W jmp QWORD PTR [rip+0x1663]        # 0x14002f940
   14002e2dd:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e2e4:	add    rcx,0x3e0
   14002e2eb:	rex.W jmp QWORD PTR [rip+0x15ae]        # 0x14002f8a0
   14002e2f2:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e2f9:	add    rcx,0x4b8
   14002e300:	rex.W jmp QWORD PTR [rip+0x1599]        # 0x14002f8a0
   14002e307:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e30e:	add    rcx,0x590
   14002e315:	rex.W jmp QWORD PTR [rip+0x160c]        # 0x14002f928
   14002e31c:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e323:	add    rcx,0x668
   14002e32a:	rex.W jmp QWORD PTR [rip+0x15f7]        # 0x14002f928
   14002e331:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e338:	add    rcx,0x740
   14002e33f:	rex.W jmp QWORD PTR [rip+0x15fa]        # 0x14002f940
   14002e346:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e34d:	add    rcx,0x818
   14002e354:	rex.W jmp QWORD PTR [rip+0x15cd]        # 0x14002f928
   14002e35b:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e362:	add    rcx,0x8f0
   14002e369:	rex.W jmp QWORD PTR [rip+0x1530]        # 0x14002f8a0
   14002e370:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e377:	add    rcx,0x9c8
   14002e37e:	rex.W jmp QWORD PTR [rip+0x14cb]        # 0x14002f850
   14002e385:	int3   
   14002e386:	int3   
   14002e387:	int3   
   14002e388:	int3   
   14002e389:	int3   
   14002e38a:	int3   
   14002e38b:	int3   
   14002e38c:	int3   
   14002e38d:	int3   
   14002e38e:	int3   
   14002e38f:	int3   
   14002e390:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e397:	rex.W jmp QWORD PTR [rip+0xd22]        # 0x14002f0c0
   14002e39e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e3a5:	add    rcx,0x158
   14002e3ac:	rex.W jmp QWORD PTR [rip+0x1575]        # 0x14002f928
   14002e3b3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e3ba:	add    rcx,0x230
   14002e3c1:	rex.W jmp QWORD PTR [rip+0x1560]        # 0x14002f928
   14002e3c8:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e3cf:	add    rcx,0x308
   14002e3d6:	rex.W jmp QWORD PTR [rip+0x1563]        # 0x14002f940
   14002e3dd:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e3e4:	add    rcx,0x3e0
   14002e3eb:	rex.W jmp QWORD PTR [rip+0x14ae]        # 0x14002f8a0
   14002e3f2:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e3f9:	add    rcx,0x4b8
   14002e400:	rex.W jmp QWORD PTR [rip+0x1499]        # 0x14002f8a0
   14002e407:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e40e:	add    rcx,0x590
   14002e415:	rex.W jmp QWORD PTR [rip+0x150c]        # 0x14002f928
   14002e41c:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e423:	add    rcx,0x668
   14002e42a:	rex.W jmp QWORD PTR [rip+0x14f7]        # 0x14002f928
   14002e431:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e438:	add    rcx,0x740
   14002e43f:	rex.W jmp QWORD PTR [rip+0x14fa]        # 0x14002f940
   14002e446:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e44d:	add    rcx,0x818
   14002e454:	rex.W jmp QWORD PTR [rip+0x14cd]        # 0x14002f928
   14002e45b:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e462:	add    rcx,0x8f0
   14002e469:	rex.W jmp QWORD PTR [rip+0x1430]        # 0x14002f8a0
   14002e470:	lea    rcx,[rdx+0x28]
   14002e477:	rex.W jmp QWORD PTR [rip+0x1512]        # 0x14002f990
   14002e47e:	int3   
   14002e47f:	int3   
   14002e480:	lea    rcx,[rdx+0x38]
   14002e487:	rex.W jmp QWORD PTR [rip+0x1502]        # 0x14002f990
   14002e48e:	int3   
   14002e48f:	int3   
   14002e490:	lea    rcx,[rdx+0x50]
   14002e497:	rex.W jmp QWORD PTR [rip+0x14da]        # 0x14002f978
   14002e49e:	lea    rcx,[rdx+0x48]
   14002e4a5:	rex.W jmp QWORD PTR [rip+0x14e4]        # 0x14002f990
   14002e4ac:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e4b3:	rex.W jmp QWORD PTR [rip+0x16be]        # 0x14002fb78
   14002e4ba:	lea    rcx,[rdx+0x40]
   14002e4c1:	rex.W jmp QWORD PTR [rip+0x14b0]        # 0x14002f978
   14002e4c8:	int3   
   14002e4c9:	int3   
   14002e4ca:	int3   
   14002e4cb:	int3   
   14002e4cc:	int3   
   14002e4cd:	int3   
   14002e4ce:	int3   
   14002e4cf:	int3   
   14002e4d0:	mov    rcx,QWORD PTR [rdx+0x70]
   14002e4d7:	rex.W jmp QWORD PTR [rip+0x169a]        # 0x14002fb78
   14002e4de:	int3   
   14002e4df:	int3   
   14002e4e0:	mov    rcx,QWORD PTR [rdx+0x58]
   14002e4e7:	rex.W jmp QWORD PTR [rip+0x168a]        # 0x14002fb78
   14002e4ee:	rex push rbp
   14002e4f0:	sub    rsp,0x20
   14002e4f4:	mov    rbp,rdx
   14002e4f7:	mov    rax,QWORD PTR [rcx]
   14002e4fa:	mov    rdx,rcx
   14002e4fd:	mov    ecx,DWORD PTR [rax]
   14002e4ff:	call   0x14002ce70
   14002e504:	nop
   14002e505:	add    rsp,0x20
   14002e509:	pop    rbp
   14002e50a:	ret    
   14002e50b:	int3   
   14002e50c:	rex push rbp
   14002e50e:	sub    rsp,0x20
   14002e512:	mov    rbp,rdx
   14002e515:	mov    ecx,0x8
   14002e51a:	call   0x14002d07e
   14002e51f:	nop
   14002e520:	add    rsp,0x20
   14002e524:	pop    rbp
   14002e525:	ret    
   14002e526:	int3   
   14002e527:	rex push rbp
   14002e529:	sub    rsp,0x20
   14002e52d:	mov    rbp,rdx
   14002e530:	cmp    DWORD PTR [rbp+0x20],0x0
   14002e534:	jne    0x14002e54c
   14002e536:	mov    r9,QWORD PTR [rbp+0x78]
   14002e53a:	mov    r8d,DWORD PTR [rbp+0x70]
   14002e53e:	mov    rdx,QWORD PTR [rbp+0x68]
   14002e542:	mov    rcx,QWORD PTR [rbp+0x60]
   14002e546:	call   0x14002cdc8
   14002e54b:	nop
   14002e54c:	add    rsp,0x20
   14002e550:	pop    rbp
   14002e551:	ret    
   14002e552:	int3   
   14002e553:	rex push rbp
   14002e555:	sub    rsp,0x20
   14002e559:	mov    rbp,rdx
   14002e55c:	mov    QWORD PTR [rbp+0x38],rcx
   14002e560:	mov    QWORD PTR [rbp+0x28],rcx
   14002e564:	mov    rax,QWORD PTR [rbp+0x28]
   14002e568:	mov    rcx,QWORD PTR [rax]
   14002e56b:	mov    QWORD PTR [rbp+0x30],rcx
   14002e56f:	mov    rax,QWORD PTR [rbp+0x30]
   14002e573:	cmp    DWORD PTR [rax],0xe06d7363
   14002e579:	je     0x14002e587
   14002e57b:	mov    DWORD PTR [rbp+0x20],0x0
   14002e582:	mov    eax,DWORD PTR [rbp+0x20]
   14002e585:	jmp    0x14002e58d
   14002e587:	call   0x14002d0a8
   14002e58c:	nop
   14002e58d:	add    rsp,0x20
   14002e591:	pop    rbp
   14002e592:	ret    
   14002e593:	int3   
   14002e594:	int3   
   14002e595:	int3   
   14002e596:	int3   
   14002e597:	int3   
   14002e598:	int3   
   14002e599:	int3   
   14002e59a:	int3   
   14002e59b:	int3   
   14002e59c:	int3   
   14002e59d:	int3   
   14002e59e:	int3   
   14002e59f:	int3   
   14002e5a0:	rex push rbp
   14002e5a2:	sub    rsp,0x20
   14002e5a6:	mov    rbp,rdx
   14002e5a9:	mov    rax,QWORD PTR [rcx]
   14002e5ac:	xor    ecx,ecx
   14002e5ae:	cmp    DWORD PTR [rax],0xc0000005
   14002e5b4:	sete   cl
   14002e5b7:	mov    eax,ecx
   14002e5b9:	add    rsp,0x20
   14002e5bd:	pop    rbp
   14002e5be:	ret    
   14002e5bf:	int3   
   14002e5c0:	lea    rcx,[rip+0x141b9]        # 0x140042780
   14002e5c7:	rex.W jmp QWORD PTR [rip+0x1512]        # 0x14002fae0
   14002e5ce:	int3   
   14002e5cf:	int3   
   14002e5d0:	lea    rax,[rip+0x1cb1]        # 0x140030288
   14002e5d7:	mov    QWORD PTR [rip+0xed3a],rax        # 0x14003d318
   14002e5de:	ret    
   14002e5df:	int3   
   14002e5e0:	lea    rax,[rip+0x1ca1]        # 0x140030288
   14002e5e7:	mov    QWORD PTR [rip+0xed32],rax        # 0x14003d320
   14002e5ee:	ret    
   14002e5ef:	int3   
   14002e5f0:	lea    rax,[rip+0x1c91]        # 0x140030288
   14002e5f7:	mov    QWORD PTR [rip+0xed2a],rax        # 0x14003d328
   14002e5fe:	ret    
   14002e5ff:	int3   
   14002e600:	lea    rcx,[rip+0x14319]        # 0x140042920
   14002e607:	rex.W jmp QWORD PTR [rip+0x1382]        # 0x14002f990
   14002e60e:	int3   
   14002e60f:	int3   
   14002e610:	ret    0x0
   14002e613:	int3   
   14002e614:	int3   
   14002e615:	int3   
   14002e616:	int3   
   14002e617:	int3   
   14002e618:	int3   
   14002e619:	int3   
   14002e61a:	int3   
   14002e61b:	int3   
   14002e61c:	int3   
   14002e61d:	int3   
   14002e61e:	int3   
   14002e61f:	int3   
   14002e620:	mov    rcx,QWORD PTR [rip+0x14149]        # 0x140042770
   14002e627:	test   rcx,rcx
   14002e62a:	je     0x14002e633
   14002e62c:	mov    rax,QWORD PTR [rcx]
   14002e62f:	rex.W jmp QWORD PTR [rax+0x10]
   14002e633:	ret    
   14002e634:	lea    rcx,[rip+0xf7e5]        # 0x14003de20
   14002e63b:	jmp    0x14002d168

Disassembly of section .rdata:

000000014002f000 <.rdata>:
   14002f000:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f001:	mov    ch,0x3
   14002f003:	add    BYTE PTR [rax],al
   14002f005:	add    BYTE PTR [rax],al
   14002f007:	add    dh,al
   14002f009:	mov    ch,0x3
   14002f00b:	add    BYTE PTR [rax],al
   14002f00d:	add    BYTE PTR [rax],al
   14002f00f:	add    BYTE PTR [rax+0x3b5],dl
   14002f015:	add    BYTE PTR [rax],al
   14002f017:	add    BYTE PTR [rsi-0x4b],cl
   14002f01a:	add    eax,DWORD PTR [rax]
   14002f01c:	add    BYTE PTR [rax],al
   14002f01e:	add    BYTE PTR [rax],al
   14002f020:	pop    rsi
   14002f021:	mov    ch,0x3
   14002f023:	add    BYTE PTR [rax],al
   14002f025:	add    BYTE PTR [rax],al
   14002f027:	add    BYTE PTR [rbp+rsi*4+0x3],ch
   14002f02b:	add    BYTE PTR [rax],al
   14002f02d:	add    BYTE PTR [rax],al
   14002f02f:	add    BYTE PTR [rsi-0x4b],bh
   14002f032:	add    eax,DWORD PTR [rax]
   14002f034:	add    BYTE PTR [rax],al
   14002f036:	add    BYTE PTR [rax],al
   14002f038:	mov    ah,0xb5
   14002f03a:	add    eax,DWORD PTR [rax]
	...
   14002f048:	shr    BYTE PTR [rbx+rax*1+0x0],0x0
   14002f050:	mov    WORD PTR [rbx+rax*1+0x0],gs
   14002f057:	add    dl,dh
   14002f059:	lods   al,BYTE PTR ds:[rsi]
   14002f05a:	add    eax,DWORD PTR [rax]
   14002f05c:	add    BYTE PTR [rax],al
   14002f05e:	add    BYTE PTR [rax],al
   14002f060:	(bad)  
   14002f061:	lods   al,BYTE PTR ds:[rsi]
   14002f062:	add    eax,DWORD PTR [rax]
   14002f064:	add    BYTE PTR [rax],al
   14002f066:	add    BYTE PTR [rax],al
   14002f068:	in     al,dx
   14002f069:	stos   DWORD PTR es:[rdi],eax
   14002f06a:	add    eax,DWORD PTR [rax]
   14002f06c:	add    BYTE PTR [rax],al
   14002f06e:	add    BYTE PTR [rax],al
   14002f070:	mov    al,0xab
   14002f072:	add    eax,DWORD PTR [rax]
   14002f074:	add    BYTE PTR [rax],al
   14002f076:	add    BYTE PTR [rax],al
   14002f078:	and    al,0xad
   14002f07a:	add    eax,DWORD PTR [rax]
   14002f07c:	add    BYTE PTR [rax],al
   14002f07e:	add    BYTE PTR [rax],al
   14002f080:	push   rsp
   14002f081:	lods   eax,DWORD PTR ds:[rsi]
   14002f082:	add    eax,DWORD PTR [rax]
   14002f084:	add    BYTE PTR [rax],al
   14002f086:	add    BYTE PTR [rax],al
   14002f088:	xchg   edx,eax
   14002f089:	lods   eax,DWORD PTR ds:[rsi]
   14002f08a:	add    eax,DWORD PTR [rax]
   14002f08c:	add    BYTE PTR [rax],al
   14002f08e:	add    BYTE PTR [rax],al
   14002f090:	jo     0x14002f03d
   14002f092:	add    eax,DWORD PTR [rax]
   14002f094:	add    BYTE PTR [rax],al
   14002f096:	add    BYTE PTR [rax],al
   14002f098:	mov    dh,0xad
   14002f09a:	add    eax,DWORD PTR [rax]
   14002f09c:	add    BYTE PTR [rax],al
   14002f09e:	add    BYTE PTR [rax],al
   14002f0a0:	call   0x14002f452
   14002f0a5:	add    BYTE PTR [rax],al
   14002f0a7:	add    BYTE PTR [rax-0x54],bl
   14002f0aa:	add    eax,DWORD PTR [rax]
   14002f0ac:	add    BYTE PTR [rax],al
   14002f0ae:	add    BYTE PTR [rax],al
   14002f0b0:	xchg   esi,eax
   14002f0b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f0b2:	add    eax,DWORD PTR [rax]
   14002f0b4:	add    BYTE PTR [rax],al
   14002f0b6:	add    BYTE PTR [rax],al
   14002f0b8:	enter  0x3a7,0x0
   14002f0bc:	add    BYTE PTR [rax],al
   14002f0be:	add    BYTE PTR [rax],al
   14002f0c0:	hlt    
   14002f0c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f0c2:	add    eax,DWORD PTR [rax]
   14002f0c4:	add    BYTE PTR [rax],al
   14002f0c6:	add    BYTE PTR [rax],al
   14002f0c8:	(bad)  
   14002f0c9:	test   al,0x3
   14002f0cb:	add    BYTE PTR [rax],al
   14002f0cd:	add    BYTE PTR [rax],al
   14002f0cf:	add    BYTE PTR [rax+rbp*4],bh
   14002f0d2:	add    eax,DWORD PTR [rax]
   14002f0d4:	add    BYTE PTR [rax],al
   14002f0d6:	add    BYTE PTR [rax],al
   14002f0d8:	jp     0x14002f082
   14002f0da:	add    eax,DWORD PTR [rax]
   14002f0dc:	add    BYTE PTR [rax],al
   14002f0de:	add    BYTE PTR [rax],al
   14002f0e0:	mov    dl,0xa8
   14002f0e2:	add    eax,DWORD PTR [rax]
   14002f0e4:	add    BYTE PTR [rax],al
   14002f0e6:	add    BYTE PTR [rax],al
   14002f0e8:	in     al,dx
   14002f0e9:	test   al,0x3
   14002f0eb:	add    BYTE PTR [rax],al
   14002f0ed:	add    BYTE PTR [rax],al
   14002f0ef:	add    BYTE PTR [rcx+rbp*4],ah
   14002f0f2:	add    eax,DWORD PTR [rax]
   14002f0f4:	add    BYTE PTR [rax],al
   14002f0f6:	add    BYTE PTR [rax],al
   14002f0f8:	rex.WR test rax,0x3
   14002f0fe:	add    BYTE PTR [rax],al
   14002f100:	js     0x14002f0ab
   14002f102:	add    eax,DWORD PTR [rax]
   14002f104:	add    BYTE PTR [rax],al
   14002f106:	add    BYTE PTR [rax],al
   14002f108:	lods   al,BYTE PTR ds:[rsi]
   14002f109:	test   eax,0x3
   14002f10e:	add    BYTE PTR [rax],al
   14002f110:	shr    BYTE PTR [rcx+0x3],1
   14002f116:	add    BYTE PTR [rax],al
   14002f118:	sbb    BYTE PTR [rdx+0x3],ch
   14002f11e:	add    BYTE PTR [rax],al
   14002f120:	push   rax
   14002f121:	stos   BYTE PTR es:[rdi],al
   14002f122:	add    eax,DWORD PTR [rax]
   14002f124:	add    BYTE PTR [rax],al
   14002f126:	add    BYTE PTR [rax],al
   14002f128:	sub    BYTE PTR [rdx+0x3],0x0
   14002f12f:	add    dl,al
   14002f131:	stos   BYTE PTR es:[rdi],al
   14002f132:	add    eax,DWORD PTR [rax]
   14002f134:	add    BYTE PTR [rax],al
   14002f136:	add    BYTE PTR [rax],al
   14002f138:	out    dx,al
   14002f139:	stos   BYTE PTR es:[rdi],al
   14002f13a:	add    eax,DWORD PTR [rax]
   14002f13c:	add    BYTE PTR [rax],al
   14002f13e:	add    BYTE PTR [rax],al
   14002f140:	sub    al,0xab
   14002f142:	add    eax,DWORD PTR [rax]
   14002f144:	add    BYTE PTR [rax],al
   14002f146:	add    BYTE PTR [rax],al
   14002f148:	stos   QWORD PTR es:[rdi],rax
   14002f14a:	add    eax,DWORD PTR [rax]
	...
   14002f158:	enter  0x3b1,0x0
   14002f15c:	add    BYTE PTR [rax],al
   14002f15e:	add    BYTE PTR [rax],al
   14002f160:	mov    eax,0x3b1
   14002f165:	add    BYTE PTR [rax],al
   14002f167:	add    BYTE PTR [rdx+0x3b1],bl
   14002f16d:	add    BYTE PTR [rax],al
   14002f16f:	add    BYTE PTR [rcx+rsi*4+0x3],al
   14002f176:	add    BYTE PTR [rax],al
   14002f178:	nop
   14002f179:	mov    dh,0x3
   14002f17b:	add    BYTE PTR [rax],al
   14002f17d:	add    BYTE PTR [rax],al
   14002f17f:	add    BYTE PTR [rdx],ch
   14002f181:	mov    ah,0x3
   14002f183:	add    BYTE PTR [rax],al
   14002f185:	add    BYTE PTR [rax],al
   14002f187:	add    BYTE PTR [rsp+rsi*4],dl
   14002f18a:	add    eax,DWORD PTR [rax]
   14002f18c:	add    BYTE PTR [rax],al
   14002f18e:	add    BYTE PTR [rax],al
   14002f190:	(bad)  
   14002f191:	mov    bl,0x3
   14002f193:	add    BYTE PTR [rax],al
   14002f195:	add    BYTE PTR [rax],al
   14002f197:	add    ah,ah
   14002f199:	mov    bl,0x3
   14002f19b:	add    BYTE PTR [rax],al
   14002f19d:	add    BYTE PTR [rax],al
   14002f19f:	add    al,cl
   14002f1a1:	mov    bl,0x3
   14002f1a3:	add    BYTE PTR [rax],al
   14002f1a5:	add    BYTE PTR [rax],al
   14002f1a7:	add    BYTE PTR [rbx+rsi*4+0x3],dh
   14002f1ae:	add    BYTE PTR [rax],al
   14002f1b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f1b1:	mov    bl,0x3
   14002f1b3:	add    BYTE PTR [rax],al
   14002f1b5:	add    BYTE PTR [rax],al
   14002f1b7:	add    BYTE PTR [rax+0x3b3],cl
   14002f1bd:	add    BYTE PTR [rax],al
   14002f1bf:	add    BYTE PTR [rsi-0x4d],dh
   14002f1c2:	add    eax,DWORD PTR [rax]
   14002f1c4:	add    BYTE PTR [rax],al
   14002f1c6:	add    BYTE PTR [rax],al
   14002f1c8:	data16 mov bl,0x3
   14002f1cb:	add    BYTE PTR [rax],al
   14002f1cd:	add    BYTE PTR [rax],al
   14002f1cf:	add    BYTE PTR [rdx-0x4d],dl
   14002f1d2:	add    eax,DWORD PTR [rax]
   14002f1d4:	add    BYTE PTR [rax],al
   14002f1d6:	add    BYTE PTR [rax],al
   14002f1d8:	cmp    al,0xb3
   14002f1da:	add    eax,DWORD PTR [rax]
   14002f1dc:	add    BYTE PTR [rax],al
   14002f1de:	add    BYTE PTR [rax],al
   14002f1e0:	es mov bl,0x3
   14002f1e3:	add    BYTE PTR [rax],al
   14002f1e5:	add    BYTE PTR [rax],al
   14002f1e7:	add    BYTE PTR [rdx],bl
   14002f1e9:	mov    bl,0x3
   14002f1eb:	add    BYTE PTR [rax],al
   14002f1ed:	add    BYTE PTR [rax],al
   14002f1ef:	add    BYTE PTR [rax],dl
   14002f1f1:	mov    bl,0x3
   14002f1f3:	add    BYTE PTR [rax],al
   14002f1f5:	add    BYTE PTR [rax],al
   14002f1f7:	add    BYTE PTR [rdx],al
   14002f1f9:	mov    bl,0x3
   14002f1fb:	add    BYTE PTR [rax],al
   14002f1fd:	add    BYTE PTR [rax],al
   14002f1ff:	add    ah,dh
   14002f201:	mov    dl,0x3
   14002f203:	add    BYTE PTR [rax],al
   14002f205:	add    BYTE PTR [rax],al
   14002f207:	add    al,ch
   14002f209:	mov    dl,0x3
   14002f20b:	add    BYTE PTR [rax],al
   14002f20d:	add    BYTE PTR [rax],al
   14002f20f:	add    ah,bl
   14002f211:	mov    dl,0x3
   14002f213:	add    BYTE PTR [rax],al
   14002f215:	add    BYTE PTR [rax],al
   14002f217:	add    dl,cl
   14002f219:	mov    dl,0x3
   14002f21b:	add    BYTE PTR [rax],al
   14002f21d:	add    BYTE PTR [rax],al
   14002f21f:	add    BYTE PTR [rdx+rsi*4+0x3],bh
   14002f226:	add    BYTE PTR [rax],al
   14002f228:	scas   al,BYTE PTR es:[rdi]
   14002f229:	mov    dl,0x3
   14002f22b:	add    BYTE PTR [rax],al
   14002f22d:	add    BYTE PTR [rax],al
   14002f22f:	add    BYTE PTR [rsi+0x3b2],dl
   14002f235:	add    BYTE PTR [rax],al
   14002f237:	add    BYTE PTR [rdx+0x3b2],cl
   14002f23d:	add    BYTE PTR [rax],al
   14002f23f:	add    BYTE PTR [rdx-0x4e],bh
   14002f242:	add    eax,DWORD PTR [rax]
   14002f244:	add    BYTE PTR [rax],al
   14002f246:	add    BYTE PTR [rax],al
   14002f248:	data16 mov dl,0x3
   14002f24b:	add    BYTE PTR [rax],al
   14002f24d:	add    BYTE PTR [rax],al
   14002f24f:	add    BYTE PTR [rdx-0x4e],bl
   14002f252:	add    eax,DWORD PTR [rax]
   14002f254:	add    BYTE PTR [rax],al
   14002f256:	add    BYTE PTR [rax],al
   14002f258:	rex.WRX mov dl,0x3
   14002f25b:	add    BYTE PTR [rax],al
   14002f25d:	add    BYTE PTR [rax],al
   14002f25f:	add    BYTE PTR [rsi],bh
   14002f261:	mov    dl,0x3
   14002f263:	add    BYTE PTR [rax],al
   14002f265:	add    BYTE PTR [rax],al
   14002f267:	add    BYTE PTR [rdx+rsi*4],ch
   14002f26a:	add    eax,DWORD PTR [rax]
   14002f26c:	add    BYTE PTR [rax],al
   14002f26e:	add    BYTE PTR [rax],al
   14002f270:	(bad)  
   14002f271:	mov    dl,0x3
   14002f273:	add    BYTE PTR [rax],al
   14002f275:	add    BYTE PTR [rax],al
   14002f277:	add    BYTE PTR [rdx],dl
   14002f279:	mov    dl,0x3
   14002f27b:	add    BYTE PTR [rax],al
   14002f27d:	add    BYTE PTR [rax],al
   14002f27f:	add    BYTE PTR [rsi],al
   14002f281:	mov    dl,0x3
   14002f283:	add    BYTE PTR [rax],al
   14002f285:	add    BYTE PTR [rax],al
   14002f287:	add    dh,ch
   14002f289:	mov    cl,0x3
   14002f28b:	add    BYTE PTR [rax],al
   14002f28d:	add    BYTE PTR [rax],al
   14002f28f:	add    al,bl
   14002f291:	mov    cl,0x3
	...
   14002f29f:	add    BYTE PTR [rsi+rsi*4],al
   14002f2a2:	add    eax,DWORD PTR [rax]
   14002f2a4:	add    BYTE PTR [rax],al
   14002f2a6:	add    BYTE PTR [rax],al
   14002f2a8:	and    al,0xb6
   14002f2aa:	add    eax,DWORD PTR [rax]
   14002f2ac:	add    BYTE PTR [rax],al
   14002f2ae:	add    BYTE PTR [rax],al
   14002f2b0:	ds mov dh,0x3
   14002f2b3:	add    BYTE PTR [rax],al
   14002f2b5:	add    BYTE PTR [rax],al
   14002f2b7:	add    BYTE PTR [rax-0x4a],ah
   14002f2ba:	add    eax,DWORD PTR [rax]
   14002f2bc:	add    BYTE PTR [rax],al
   14002f2be:	add    BYTE PTR [rax],al
   14002f2c0:	in     al,0xb5
   14002f2c2:	add    eax,DWORD PTR [rax]
	...
   14002f2d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002f2d1:	mov    dh,0x3
   14002f2d3:	add    BYTE PTR [rax],al
   14002f2d5:	add    BYTE PTR [rax],al
   14002f2d7:	add    BYTE PTR [rsi+rsi*4+0x3],bh
   14002f2de:	add    BYTE PTR [rax],al
   14002f2e0:	rex.WRX mov cl,0x3
   14002f2e3:	add    BYTE PTR [rax],al
   14002f2e5:	add    BYTE PTR [rax],al
   14002f2e7:	add    BYTE PTR [rdx],ch
   14002f2e9:	mov    cl,0x3
   14002f2eb:	add    BYTE PTR [rax],al
   14002f2ed:	add    BYTE PTR [rax],al
   14002f2ef:	add    BYTE PTR [rsi],dl
   14002f2f1:	mov    cl,0x3
   14002f2f3:	add    BYTE PTR [rax],al
   14002f2f5:	add    BYTE PTR [rax],al
   14002f2f7:	add    al,bh
   14002f2f9:	mov    al,0x3
   14002f2fb:	add    BYTE PTR [rax],al
   14002f2fd:	add    BYTE PTR [rax],al
   14002f2ff:	add    dl,bl
   14002f301:	mov    al,0x3
   14002f303:	add    BYTE PTR [rax],al
   14002f305:	add    BYTE PTR [rax],al
   14002f307:	add    dl,al
   14002f309:	mov    al,0x3
   14002f30b:	add    BYTE PTR [rax],al
   14002f30d:	add    BYTE PTR [rax],al
   14002f30f:	add    BYTE PTR [rax+0x3b0],ch
   14002f315:	add    BYTE PTR [rax],al
   14002f317:	add    BYTE PTR [rdx+0x3b0],dl
   14002f31d:	add    BYTE PTR [rax],al
   14002f31f:	add    BYTE PTR [rax+0x3b0],cl
   14002f325:	add    BYTE PTR [rax],al
   14002f327:	add    BYTE PTR [rdx-0x50],bh
   14002f32a:	add    eax,DWORD PTR [rax]
   14002f32c:	add    BYTE PTR [rax],al
   14002f32e:	add    BYTE PTR [rax],al
   14002f330:	ins    BYTE PTR es:[rdi],dx
   14002f331:	mov    al,0x3
   14002f333:	add    BYTE PTR [rax],al
   14002f335:	add    BYTE PTR [rax],al
   14002f337:	add    BYTE PTR [rdx-0x50],ah
   14002f33a:	add    eax,DWORD PTR [rax]
   14002f33c:	add    BYTE PTR [rax],al
   14002f33e:	add    BYTE PTR [rax],al
   14002f340:	pop    rdx
   14002f341:	mov    al,0x3
   14002f343:	add    BYTE PTR [rax],al
   14002f345:	add    BYTE PTR [rax],al
   14002f347:	add    BYTE PTR [rax-0x50],al
   14002f34a:	add    eax,DWORD PTR [rax]
   14002f34c:	add    BYTE PTR [rax],al
   14002f34e:	add    BYTE PTR [rax],al
   14002f350:	ss mov al,0x3
   14002f353:	add    BYTE PTR [rax],al
   14002f355:	add    BYTE PTR [rax],al
   14002f357:	add    BYTE PTR [rax+rsi*4],ch
   14002f35a:	add    eax,DWORD PTR [rax]
   14002f35c:	add    BYTE PTR [rax],al
   14002f35e:	add    BYTE PTR [rax],al
   14002f360:	and    BYTE PTR [rax+0x3],dh
   14002f366:	add    BYTE PTR [rax],al
   14002f368:	adc    dh,BYTE PTR [rax+0x3]
   14002f36e:	add    BYTE PTR [rax],al
   14002f370:	(bad)  
   14002f371:	scas   eax,DWORD PTR es:[rdi]
   14002f372:	add    eax,DWORD PTR [rax]
   14002f374:	add    BYTE PTR [rax],al
   14002f376:	add    BYTE PTR [rax],al
   14002f378:	call   0x14002f72c
   14002f37d:	add    BYTE PTR [rax],al
   14002f37f:	add    dh,bl
   14002f381:	scas   eax,DWORD PTR es:[rdi]
   14002f382:	add    eax,DWORD PTR [rax]
   14002f384:	add    BYTE PTR [rax],al
   14002f386:	add    BYTE PTR [rax],al
   14002f388:	(bad)  
   14002f389:	scas   eax,DWORD PTR es:[rdi]
   14002f38a:	add    eax,DWORD PTR [rax]
   14002f38c:	add    BYTE PTR [rax],al
   14002f38e:	add    BYTE PTR [rax],al
   14002f390:	(bad)  
   14002f391:	scas   eax,DWORD PTR es:[rdi]
   14002f392:	add    eax,DWORD PTR [rax]
   14002f394:	add    BYTE PTR [rax],al
   14002f396:	add    BYTE PTR [rax],al
   14002f398:	mov    esp,0x3af
   14002f39d:	add    BYTE PTR [rax],al
   14002f39f:	add    BYTE PTR [rdx+0x3af],ch
   14002f3a5:	add    BYTE PTR [rax],al
   14002f3a7:	add    BYTE PTR [rdi+rbp*4+0x3],bl
   14002f3ae:	add    BYTE PTR [rax],al
   14002f3b0:	(bad)  
   14002f3b1:	scas   eax,DWORD PTR es:[rdi]
   14002f3b2:	add    eax,DWORD PTR [rax]
   14002f3b4:	add    BYTE PTR [rax],al
   14002f3b6:	add    BYTE PTR [rax],al
   14002f3b8:	je     0x14002f369
   14002f3ba:	add    eax,DWORD PTR [rax]
   14002f3bc:	add    BYTE PTR [rax],al
   14002f3be:	add    BYTE PTR [rax],al
   14002f3c0:	pop    rsp
   14002f3c1:	scas   eax,DWORD PTR es:[rdi]
   14002f3c2:	add    eax,DWORD PTR [rax]
   14002f3c4:	add    BYTE PTR [rax],al
   14002f3c6:	add    BYTE PTR [rax],al
   14002f3c8:	push   rdx
   14002f3c9:	scas   eax,DWORD PTR es:[rdi]
   14002f3ca:	add    eax,DWORD PTR [rax]
   14002f3cc:	add    BYTE PTR [rax],al
   14002f3ce:	add    BYTE PTR [rax],al
   14002f3d0:	scas   rax,QWORD PTR es:[rdi]
   14002f3d2:	add    eax,DWORD PTR [rax]
   14002f3d4:	add    BYTE PTR [rax],al
   14002f3d6:	add    BYTE PTR [rax],al
   14002f3d8:	cmp    al,0xaf
   14002f3da:	add    eax,DWORD PTR [rax]
   14002f3dc:	add    BYTE PTR [rax],al
   14002f3de:	add    BYTE PTR [rax],al
   14002f3e0:	xor    BYTE PTR [rdi+0x3],ch
   14002f3e6:	add    BYTE PTR [rax],al
   14002f3e8:	and    BYTE PTR [rdi+0x3],ch
   14002f3ee:	add    BYTE PTR [rax],al
   14002f3f0:	(bad)  
   14002f3f1:	scas   eax,DWORD PTR es:[rdi]
   14002f3f2:	add    eax,DWORD PTR [rax]
   14002f3f4:	add    BYTE PTR [rax],al
   14002f3f6:	add    BYTE PTR [rax],al
   14002f3f8:	or     ch,BYTE PTR [rdi+0x3]
   14002f3fe:	add    BYTE PTR [rax],al
   14002f400:	add    BYTE PTR [rdi+0x3],ch
   14002f406:	add    BYTE PTR [rax],al
   14002f408:	hlt    
   14002f409:	scas   al,BYTE PTR es:[rdi]
   14002f40a:	add    eax,DWORD PTR [rax]
   14002f40c:	add    BYTE PTR [rax],al
   14002f40e:	add    BYTE PTR [rax],al
   14002f410:	(bad)  
   14002f411:	scas   al,BYTE PTR es:[rdi]
   14002f412:	add    eax,DWORD PTR [rax]
   14002f414:	add    BYTE PTR [rax],al
   14002f416:	add    BYTE PTR [rax],al
   14002f418:	loopne 0x14002f3c8
   14002f41a:	add    eax,DWORD PTR [rax]
   14002f41c:	add    BYTE PTR [rax],al
   14002f41e:	add    BYTE PTR [rax],al
   14002f420:	(bad)  
   14002f421:	scas   al,BYTE PTR es:[rdi]
   14002f422:	add    eax,DWORD PTR [rax]
   14002f424:	add    BYTE PTR [rax],al
   14002f426:	add    BYTE PTR [rax],al
   14002f428:	retf   0x3ae
   14002f42b:	add    BYTE PTR [rax],al
   14002f42d:	add    BYTE PTR [rax],al
   14002f42f:	add    al,al
   14002f431:	scas   al,BYTE PTR es:[rdi]
   14002f432:	add    eax,DWORD PTR [rax]
   14002f434:	add    BYTE PTR [rax],al
   14002f436:	add    BYTE PTR [rax],al
   14002f438:	mov    dh,0xae
   14002f43a:	add    eax,DWORD PTR [rax]
   14002f43c:	add    BYTE PTR [rax],al
   14002f43e:	add    BYTE PTR [rax],al
   14002f440:	scas   al,BYTE PTR es:[rdi]
   14002f441:	scas   al,BYTE PTR es:[rdi]
   14002f442:	add    eax,DWORD PTR [rax]
   14002f444:	add    BYTE PTR [rax],al
   14002f446:	add    BYTE PTR [rax],al
   14002f448:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f449:	scas   al,BYTE PTR es:[rdi]
   14002f44a:	add    eax,DWORD PTR [rax]
   14002f44c:	add    BYTE PTR [rax],al
   14002f44e:	add    BYTE PTR [rax],al
   14002f450:	(bad)  
   14002f451:	scas   al,BYTE PTR es:[rdi]
   14002f452:	add    eax,DWORD PTR [rax]
   14002f454:	add    BYTE PTR [rax],al
   14002f456:	add    BYTE PTR [rax],al
   14002f458:	nop
   14002f459:	scas   al,BYTE PTR es:[rdi]
   14002f45a:	add    eax,DWORD PTR [rax]
   14002f45c:	add    BYTE PTR [rax],al
   14002f45e:	add    BYTE PTR [rax],al
   14002f460:	xchg   BYTE PTR [rsi+0x3],ch
   14002f466:	add    BYTE PTR [rax],al
   14002f468:	jle    0x14002f418
   14002f46a:	add    eax,DWORD PTR [rax]
   14002f46c:	add    BYTE PTR [rax],al
   14002f46e:	add    BYTE PTR [rax],al
   14002f470:	jb     0x14002f420
   14002f472:	add    eax,DWORD PTR [rax]
   14002f474:	add    BYTE PTR [rax],al
   14002f476:	add    BYTE PTR [rax],al
   14002f478:	fs scas al,BYTE PTR es:[rdi]
   14002f47a:	add    eax,DWORD PTR [rax]
   14002f47c:	add    BYTE PTR [rax],al
   14002f47e:	add    BYTE PTR [rax],al
   14002f480:	pop    rsp
   14002f481:	scas   al,BYTE PTR es:[rdi]
   14002f482:	add    eax,DWORD PTR [rax]
   14002f484:	add    BYTE PTR [rax],al
   14002f486:	add    BYTE PTR [rax],al
   14002f488:	push   rdx
   14002f489:	scas   al,BYTE PTR es:[rdi]
   14002f48a:	add    eax,DWORD PTR [rax]
   14002f48c:	add    BYTE PTR [rax],al
   14002f48e:	add    BYTE PTR [rax],al
   14002f490:	rex.R scas al,BYTE PTR es:[rdi]
   14002f492:	add    eax,DWORD PTR [rax]
   14002f494:	add    BYTE PTR [rax],al
   14002f496:	add    BYTE PTR [rax],al
   14002f498:	shl    BYTE PTR [rsi+0x3],cl
	...
   14002f4a6:	add    BYTE PTR [rax],al
   14002f4a8:	xor    dh,BYTE PTR [rbp+0x3]
   14002f4ae:	add    BYTE PTR [rax],al
   14002f4b0:	es mov ch,0x3
   14002f4b3:	add    BYTE PTR [rax],al
   14002f4b5:	add    BYTE PTR [rax],al
   14002f4b7:	add    BYTE PTR [rdx],bl
   14002f4b9:	mov    ch,0x3
   14002f4bb:	add    BYTE PTR [rax],al
   14002f4bd:	add    BYTE PTR [rax],al
   14002f4bf:	add    BYTE PTR [rsi],al
   14002f4c1:	mov    ch,0x3
   14002f4c3:	add    BYTE PTR [rax],al
   14002f4c5:	add    BYTE PTR [rax],al
   14002f4c7:	add    al,bh
   14002f4c9:	mov    ah,0x3
   14002f4cb:	add    BYTE PTR [rax],al
   14002f4cd:	add    BYTE PTR [rax],al
   14002f4cf:	add    dh,ah
   14002f4d1:	mov    ah,0x3
   14002f4d3:	add    BYTE PTR [rax],al
   14002f4d5:	add    BYTE PTR [rax],al
   14002f4d7:	add    al,bl
   14002f4d9:	mov    ah,0x3
   14002f4db:	add    BYTE PTR [rax],al
   14002f4dd:	add    BYTE PTR [rax],al
   14002f4df:	add    ah,al
   14002f4e1:	mov    ah,0x3
   14002f4e3:	add    BYTE PTR [rax],al
   14002f4e5:	add    BYTE PTR [rax],al
   14002f4e7:	add    BYTE PTR [rsi+0x3b4],dh
   14002f4ed:	add    BYTE PTR [rax],al
   14002f4ef:	add    BYTE PTR [rdx+0x3b4],ah
   14002f4f5:	add    BYTE PTR [rax],al
   14002f4f7:	add    BYTE PTR [rdx+0x3b4],dl
   14002f4fd:	add    BYTE PTR [rax],al
   14002f4ff:	add    BYTE PTR [rdx+0x3b4],al
   14002f505:	add    BYTE PTR [rax],al
   14002f507:	add    BYTE PTR [rdx-0x4c],dh
   14002f50a:	add    eax,DWORD PTR [rax]
   14002f50c:	add    BYTE PTR [rax],al
   14002f50e:	add    BYTE PTR [rax],al
   14002f510:	pop    rsi
   14002f511:	mov    ah,0x3
   14002f513:	add    BYTE PTR [rax],al
   14002f515:	add    BYTE PTR [rax],al
   14002f517:	add    BYTE PTR [rdx-0x4c],dl
   14002f51a:	add    eax,DWORD PTR [rax]
	...
   14002f528:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002f529:	(bad)  
   14002f52a:	add    BYTE PTR [rax],al
   14002f52c:	add    BYTE PTR [rax],al
   14002f52e:	add    BYTE PTR [rax+0x6ad],al
   14002f534:	add    BYTE PTR [rax],al
   14002f536:	add    BYTE PTR [rax+0x6a9],al
   14002f53c:	add    BYTE PTR [rax],al
   14002f53e:	add    BYTE PTR [rax+0x6b2],al
   14002f544:	add    BYTE PTR [rax],al
   14002f546:	add    BYTE PTR [rax+0x126e],al
   14002f54c:	add    BYTE PTR [rax],al
   14002f54e:	add    BYTE PTR [rax+0x1297],al
   14002f554:	add    BYTE PTR [rax],al
   14002f556:	add    BYTE PTR [rax+0x1276],al
   14002f55c:	add    BYTE PTR [rax],al
   14002f55e:	add    BYTE PTR [rax+0x1282],al
   14002f564:	add    BYTE PTR [rax],al
   14002f566:	add    BYTE PTR [rax+0x127e],al
   14002f56c:	add    BYTE PTR [rax],al
   14002f56e:	add    BYTE PTR [rax+0x127a],al
   14002f574:	add    BYTE PTR [rax],al
   14002f576:	add    BYTE PTR [rax+0x129f],al
   14002f57c:	add    BYTE PTR [rax],al
   14002f57e:	add    BYTE PTR [rax+0x1293],al
   14002f584:	add    BYTE PTR [rax],al
   14002f586:	add    BYTE PTR [rax+0x1272],al
   14002f58c:	add    BYTE PTR [rax],al
   14002f58e:	add    BYTE PTR [rax+0x12a3],al
   14002f594:	add    BYTE PTR [rax],al
   14002f596:	add    BYTE PTR [rax+0x1288],al
   14002f59c:	add    BYTE PTR [rax],al
   14002f59e:	add    BYTE PTR [rax+0x1262],al
   14002f5a4:	add    BYTE PTR [rax],al
   14002f5a6:	add    BYTE PTR [rax+0x1269],al
   14002f5ac:	add    BYTE PTR [rax],al
   14002f5ae:	add    BYTE PTR [rax+0x128c],al
   14002f5b4:	add    BYTE PTR [rax],al
   14002f5b6:	add    BYTE PTR [rax+0x29f2],al
   14002f5bc:	add    BYTE PTR [rax],al
   14002f5be:	add    BYTE PTR [rax+0x156c],al
   14002f5c4:	add    BYTE PTR [rax],al
   14002f5c6:	add    BYTE PTR [rax+0x2431],al
   14002f5cc:	add    BYTE PTR [rax],al
   14002f5ce:	add    BYTE PTR [rax+0x10d4],al
   14002f5d4:	add    BYTE PTR [rax],al
   14002f5d6:	add    BYTE PTR [rax+0xb6d],al
   14002f5dc:	add    BYTE PTR [rax],al
   14002f5de:	add    BYTE PTR [rax+0x36f5],al
   14002f5e4:	add    BYTE PTR [rax],al
   14002f5e6:	add    BYTE PTR [rax+0x1d6f],al
   14002f5ec:	add    BYTE PTR [rax],al
   14002f5ee:	add    BYTE PTR [rax+0x36fb],al
   14002f5f4:	add    BYTE PTR [rax],al
   14002f5f6:	add    BYTE PTR [rax+0x197f],al
   14002f5fc:	add    BYTE PTR [rax],al
   14002f5fe:	add    BYTE PTR [rax+0x3302],al
   14002f604:	add    BYTE PTR [rax],al
   14002f606:	add    BYTE PTR [rax+0x10c3],al
   14002f60c:	add    BYTE PTR [rax],al
   14002f60e:	add    BYTE PTR [rax+0x1ef5],al
   14002f614:	add    BYTE PTR [rax],al
   14002f616:	add    BYTE PTR [rax+0x2c10],al
   14002f61c:	add    BYTE PTR [rax],al
   14002f61e:	add    BYTE PTR [rax+0x339d],al
   14002f624:	add    BYTE PTR [rax],al
   14002f626:	add    BYTE PTR [rax+0x15f9],al
   14002f62c:	add    BYTE PTR [rax],al
   14002f62e:	add    BYTE PTR [rax+0x1d09],al
   14002f634:	add    BYTE PTR [rax],al
   14002f636:	add    BYTE PTR [rax+0x353a],al
   14002f63c:	add    BYTE PTR [rax],al
   14002f63e:	add    BYTE PTR [rax+0xa1b],al
   14002f644:	add    BYTE PTR [rax],al
   14002f646:	add    BYTE PTR [rax+0x2da0],al
   14002f64c:	add    BYTE PTR [rax],al
   14002f64e:	add    BYTE PTR [rax+0xeb9],al
   14002f654:	add    BYTE PTR [rax],al
   14002f656:	add    BYTE PTR [rax+0xca5],al
   14002f65c:	add    BYTE PTR [rax],al
   14002f65e:	add    BYTE PTR [rax+0xca4],al
   14002f664:	add    BYTE PTR [rax],al
   14002f666:	add    BYTE PTR [rax+0xc3a],al
   14002f66c:	add    BYTE PTR [rax],al
   14002f66e:	add    BYTE PTR [rax+0x2dcc],al
   14002f674:	add    BYTE PTR [rax],al
   14002f676:	add    BYTE PTR [rax+0x3db],al
   14002f67c:	add    BYTE PTR [rax],al
   14002f67e:	add    BYTE PTR [rax+0x1f6b],al
   14002f684:	add    BYTE PTR [rax],al
   14002f686:	add    BYTE PTR [rax+0x122],al
   14002f68c:	add    BYTE PTR [rax],al
   14002f68e:	add    BYTE PTR [rax+0x128],al
   14002f694:	add    BYTE PTR [rax],al
   14002f696:	add    BYTE PTR [rax+0x132],al
   14002f69c:	add    BYTE PTR [rax],al
   14002f69e:	add    BYTE PTR [rax+0x21fc],al
   14002f6a4:	add    BYTE PTR [rax],al
   14002f6a6:	add    BYTE PTR [rax+0x41e],al
   14002f6ac:	add    BYTE PTR [rax],al
   14002f6ae:	add    BYTE PTR [rax+0xe77],al
   14002f6b4:	add    BYTE PTR [rax],al
   14002f6b6:	add    BYTE PTR [rax+0xb30],al
   14002f6bc:	add    BYTE PTR [rax],al
   14002f6be:	add    BYTE PTR [rax+0x2081],al
   14002f6c4:	add    BYTE PTR [rax],al
   14002f6c6:	add    BYTE PTR [rax+0xfc6],al
   14002f6cc:	add    BYTE PTR [rax],al
   14002f6ce:	add    BYTE PTR [rax+0xbc8],al
   14002f6d4:	add    BYTE PTR [rax],al
   14002f6d6:	add    BYTE PTR [rax+0x1810],al
   14002f6dc:	add    BYTE PTR [rax],al
   14002f6de:	add    BYTE PTR [rax+0x208b],al
   14002f6e4:	add    BYTE PTR [rax],al
   14002f6e6:	add    BYTE PTR [rax+0x2f4e],al
   14002f6ec:	add    BYTE PTR [rax],al
   14002f6ee:	add    BYTE PTR [rax+0x12f7],al
   14002f6f4:	add    BYTE PTR [rax],al
   14002f6f6:	add    BYTE PTR [rax+0x1e54],al
   14002f6fc:	add    BYTE PTR [rax],al
   14002f6fe:	add    BYTE PTR [rax+0xa71],al
   14002f704:	add    BYTE PTR [rax],al
   14002f706:	add    BYTE PTR [rax+0x1418],al
   14002f70c:	add    BYTE PTR [rax],al
   14002f70e:	add    BYTE PTR [rax+0x2bc4],al
   14002f714:	add    BYTE PTR [rax],al
   14002f716:	add    BYTE PTR [rax+0x225d],al
   14002f71c:	add    BYTE PTR [rax],al
   14002f71e:	add    BYTE PTR [rax+0xb6c],al
   14002f724:	add    BYTE PTR [rax],al
   14002f726:	add    BYTE PTR [rax+0x2279],al
   14002f72c:	add    BYTE PTR [rax],al
   14002f72e:	add    BYTE PTR [rax+0x2756],al
   14002f734:	add    BYTE PTR [rax],al
   14002f736:	add    BYTE PTR [rax+0xf54],al
   14002f73c:	add    BYTE PTR [rax],al
   14002f73e:	add    BYTE PTR [rax+0x12b1],al
   14002f744:	add    BYTE PTR [rax],al
   14002f746:	add    BYTE PTR [rax+0x172b],al
   14002f74c:	add    BYTE PTR [rax],al
   14002f74e:	add    BYTE PTR [rax+0xc1f],al
   14002f754:	add    BYTE PTR [rax],al
   14002f756:	add    BYTE PTR [rax+0x2dd0],al
   14002f75c:	add    BYTE PTR [rax],al
   14002f75e:	add    BYTE PTR [rax+0x21a4],al
   14002f764:	add    BYTE PTR [rax],al
   14002f766:	add    BYTE PTR [rax+0x2958],al
   14002f76c:	add    BYTE PTR [rax],al
   14002f76e:	add    BYTE PTR [rax+0x182b],al
   14002f774:	add    BYTE PTR [rax],al
   14002f776:	add    BYTE PTR [rax+0x1249],al
   14002f77c:	add    BYTE PTR [rax],al
   14002f77e:	add    BYTE PTR [rax+0x861],al
   14002f784:	add    BYTE PTR [rax],al
   14002f786:	add    BYTE PTR [rax+0xe56],al
   14002f78c:	add    BYTE PTR [rax],al
   14002f78e:	add    BYTE PTR [rax+0xa54],al
   14002f794:	add    BYTE PTR [rax],al
   14002f796:	add    BYTE PTR [rax+0x8fe],al
   14002f79c:	add    BYTE PTR [rax],al
   14002f79e:	add    BYTE PTR [rax+0x2063],al
   14002f7a4:	add    BYTE PTR [rax],al
   14002f7a6:	add    BYTE PTR [rax+0x1173],al
   14002f7ac:	add    BYTE PTR [rax],al
   14002f7ae:	add    BYTE PTR [rax+0x681],al
   14002f7b4:	add    BYTE PTR [rax],al
   14002f7b6:	add    BYTE PTR [rax+0x5d8],al
   14002f7bc:	add    BYTE PTR [rax],al
   14002f7be:	add    BYTE PTR [rax+0x118],al
   14002f7c4:	add    BYTE PTR [rax],al
   14002f7c6:	add    BYTE PTR [rax+0x2ce7],al
   14002f7cc:	add    BYTE PTR [rax],al
   14002f7ce:	add    BYTE PTR [rax+0x2cea],al
   14002f7d4:	add    BYTE PTR [rax],al
   14002f7d6:	add    BYTE PTR [rax+0x2ce8],al
   14002f7dc:	add    BYTE PTR [rax],al
   14002f7de:	add    BYTE PTR [rax+0x2ce9],al
   14002f7e4:	add    BYTE PTR [rax],al
   14002f7e6:	add    BYTE PTR [rax+0x1761],al
   14002f7ec:	add    BYTE PTR [rax],al
   14002f7ee:	add    BYTE PTR [rax+0x2949],al
   14002f7f4:	add    BYTE PTR [rax],al
   14002f7f6:	add    BYTE PTR [rax+0x2dfc],al
   14002f7fc:	add    BYTE PTR [rax],al
   14002f7fe:	add    BYTE PTR [rax+0x1c56],al
   14002f804:	add    BYTE PTR [rax],al
   14002f806:	add    BYTE PTR [rax+0x1864],al
   14002f80c:	add    BYTE PTR [rax],al
   14002f80e:	add    BYTE PTR [rax+0xbee],al
   14002f814:	add    BYTE PTR [rax],al
   14002f816:	add    BYTE PTR [rax+0x1a0d],al
   14002f81c:	add    BYTE PTR [rax],al
   14002f81e:	add    BYTE PTR [rax+0xfc8],al
   14002f824:	add    BYTE PTR [rax],al
   14002f826:	add    BYTE PTR [rax+0x2082],al
   14002f82c:	add    BYTE PTR [rax],al
   14002f82e:	add    BYTE PTR [rax+0x699],al
   14002f834:	add    BYTE PTR [rax],al
   14002f836:	add    BYTE PTR [rax+0xe79],al
   14002f83c:	add    BYTE PTR [rax],al
   14002f83e:	add    BYTE PTR [rax+0x36e4],al
   14002f844:	add    BYTE PTR [rax],al
   14002f846:	add    BYTE PTR [rax+0xa57],al
   14002f84c:	add    BYTE PTR [rax],al
   14002f84e:	add    BYTE PTR [rax+0x482],al
   14002f854:	add    BYTE PTR [rax],al
   14002f856:	add    BYTE PTR [rax+0x21ff],al
   14002f85c:	add    BYTE PTR [rax],al
   14002f85e:	add    BYTE PTR [rax+0x1937],al
   14002f864:	add    BYTE PTR [rax],al
   14002f866:	add    BYTE PTR [rax+0xc1e],al
   14002f86c:	add    BYTE PTR [rax],al
   14002f86e:	add    BYTE PTR [rax+0xc98],al
   14002f874:	add    BYTE PTR [rax],al
   14002f876:	add    BYTE PTR [rax+0x562],al
   14002f87c:	add    BYTE PTR [rax],al
   14002f87e:	add    BYTE PTR [rax+0x884],al
   14002f884:	add    BYTE PTR [rax],al
   14002f886:	add    BYTE PTR [rax+0x1958],al
   14002f88c:	add    BYTE PTR [rax],al
   14002f88e:	add    BYTE PTR [rax+0xc32],al
   14002f894:	add    BYTE PTR [rax],al
   14002f896:	add    BYTE PTR [rax+0xfd4],al
   14002f89c:	add    BYTE PTR [rax],al
   14002f89e:	add    BYTE PTR [rax+0x58b],al
   14002f8a4:	add    BYTE PTR [rax],al
   14002f8a6:	add    BYTE PTR [rax+0x2203],al
   14002f8ac:	add    BYTE PTR [rax],al
   14002f8ae:	add    BYTE PTR [rax+0xbd5],al
   14002f8b4:	add    BYTE PTR [rax],al
   14002f8b6:	add    BYTE PTR [rax+0xcc1],al
   14002f8bc:	add    BYTE PTR [rax],al
   14002f8be:	add    BYTE PTR [rax+0xcc2],al
   14002f8c4:	add    BYTE PTR [rax],al
   14002f8c6:	add    BYTE PTR [rax+0xf44],al
   14002f8cc:	add    BYTE PTR [rax],al
   14002f8ce:	add    BYTE PTR [rax+0x273c],al
   14002f8d4:	add    BYTE PTR [rax],al
   14002f8d6:	add    BYTE PTR [rax+0x2ace],al
   14002f8dc:	add    BYTE PTR [rax],al
   14002f8de:	add    BYTE PTR [rax+0x224e],al
   14002f8e4:	add    BYTE PTR [rax],al
   14002f8e6:	add    BYTE PTR [rax+0xa5f],al
   14002f8ec:	add    BYTE PTR [rax],al
   14002f8ee:	add    BYTE PTR [rax+0x33c8],al
   14002f8f4:	add    BYTE PTR [rax],al
   14002f8f6:	add    BYTE PTR [rax+0x170e],al
   14002f8fc:	add    BYTE PTR [rax],al
   14002f8fe:	add    BYTE PTR [rax+0x2da7],al
   14002f904:	add    BYTE PTR [rax],al
   14002f906:	add    BYTE PTR [rax+0xde4],al
   14002f90c:	add    BYTE PTR [rax],al
   14002f90e:	add    BYTE PTR [rax+0x1809],al
   14002f914:	add    BYTE PTR [rax],al
   14002f916:	add    BYTE PTR [rax+0xbc6],al
   14002f91c:	add    BYTE PTR [rax],al
   14002f91e:	add    BYTE PTR [rax+0xfc3],al
   14002f924:	add    BYTE PTR [rax],al
   14002f926:	add    BYTE PTR [rax+0x41a],al
   14002f92c:	add    BYTE PTR [rax],al
   14002f92e:	add    BYTE PTR [rax+0x21fa],al
   14002f934:	add    BYTE PTR [rax],al
   14002f936:	add    BYTE PTR [rax+0x183d],al
   14002f93c:	add    BYTE PTR [rax],al
   14002f93e:	add    BYTE PTR [rax+0x454],al
   14002f944:	add    BYTE PTR [rax],al
   14002f946:	add    BYTE PTR [rax+0x1714],al
   14002f94c:	add    BYTE PTR [rax],al
   14002f94e:	add    BYTE PTR [rax+0x1e9],al
   14002f954:	add    BYTE PTR [rax],al
   14002f956:	add    BYTE PTR [rax+0x45e],al
   14002f95c:	add    BYTE PTR [rax],al
   14002f95e:	add    BYTE PTR [rax+0xf45],al
   14002f964:	add    BYTE PTR [rax],al
   14002f966:	add    BYTE PTR [rax+0x104f],al
   14002f96c:	add    BYTE PTR [rax],al
   14002f96e:	add    BYTE PTR [rax+0x13c],al
   14002f974:	add    BYTE PTR [rax],al
   14002f976:	add    BYTE PTR [rax+0x407],al
   14002f97c:	add    BYTE PTR [rax],al
   14002f97e:	add    BYTE PTR [rax+0x1f6e],al
   14002f984:	add    BYTE PTR [rax],al
   14002f986:	add    BYTE PTR [rax+0x11e],al
   14002f98c:	add    BYTE PTR [rax],al
   14002f98e:	add    BYTE PTR [rax+0x406],al
   14002f994:	add    BYTE PTR [rax],al
   14002f996:	add    BYTE PTR [rax+0x5cc],al
   14002f99c:	add    BYTE PTR [rax],al
   14002f99e:	add    BYTE PTR [rax+0x87a],al
   14002f9a4:	add    BYTE PTR [rax],al
   14002f9a6:	add    BYTE PTR [rax+0x2dff],al
   14002f9ac:	add    BYTE PTR [rax],al
   14002f9ae:	add    BYTE PTR [rax+0x2e1f],al
   14002f9b4:	add    BYTE PTR [rax],al
   14002f9b6:	add    BYTE PTR [rax+0x1e7a],al
   14002f9bc:	add    BYTE PTR [rax],al
   14002f9be:	add    BYTE PTR [rax+0x2e13],al
   14002f9c4:	add    BYTE PTR [rax],al
   14002f9c6:	add    BYTE PTR [rax+0x15e8],al
   14002f9cc:	add    BYTE PTR [rax],al
   14002f9ce:	add    BYTE PTR [rax+0xe68],al
   14002f9d4:	add    BYTE PTR [rax],al
   14002f9d6:	add    BYTE PTR [rax+0x196f],al
   14002f9dc:	add    BYTE PTR [rax],al
   14002f9de:	add    BYTE PTR [rax+0x3d4],al
   14002f9e4:	add    BYTE PTR [rax],al
   14002f9e6:	add    BYTE PTR [rax+0x1788],al
   14002f9ec:	add    BYTE PTR [rax],al
   14002f9ee:	add    BYTE PTR [rax+0x3743],al
   14002f9f4:	add    BYTE PTR [rax],al
   14002f9f6:	add    BYTE PTR [rax+0x1789],al
   14002f9fc:	add    BYTE PTR [rax],al
   14002f9fe:	add    BYTE PTR [rax+0x3744],al
   14002fa04:	add    BYTE PTR [rax],al
   14002fa06:	add    BYTE PTR [rax+0x1787],al
   14002fa0c:	add    BYTE PTR [rax],al
   14002fa0e:	add    BYTE PTR [rax+0x3742],al
   14002fa14:	add    BYTE PTR [rax],al
   14002fa16:	add    BYTE PTR [rax+0x1db3],al
   14002fa1c:	add    BYTE PTR [rax],al
   14002fa1e:	add    BYTE PTR [rax+0x2f32],al
   14002fa24:	add    BYTE PTR [rax],al
   14002fa26:	add    BYTE PTR [rax+0x367b],al
   14002fa2c:	add    BYTE PTR [rax],al
   14002fa2e:	add    BYTE PTR [rax+0x2d13],al
   14002fa34:	add    BYTE PTR [rax],al
   14002fa36:	add    BYTE PTR [rax+0x2d12],al
   14002fa3c:	add    BYTE PTR [rax],al
   14002fa3e:	add    BYTE PTR [rax+0x7b1],al
   14002fa44:	add    BYTE PTR [rax],al
   14002fa46:	add    BYTE PTR [rax+0x1d80],al
   14002fa4c:	add    BYTE PTR [rax],al
   14002fa4e:	add    BYTE PTR [rax+0x30cf],al
   14002fa54:	add    BYTE PTR [rax],al
   14002fa56:	add    BYTE PTR [rax+0xf42],al
   14002fa5c:	add    BYTE PTR [rax],al
   14002fa5e:	add    BYTE PTR [rax+0xf80],al
   14002fa64:	add    BYTE PTR [rax],al
   14002fa66:	add    BYTE PTR [rax+0x230a],al
   14002fa6c:	add    BYTE PTR [rax],al
   14002fa6e:	add    BYTE PTR [rax+0x36fa],al
   14002fa74:	add    BYTE PTR [rax],al
   14002fa76:	add    BYTE PTR [rax+0x1d6e],al
   14002fa7c:	add    BYTE PTR [rax],al
   14002fa7e:	add    BYTE PTR [rax+0x36f4],al
   14002fa84:	add    BYTE PTR [rax],al
   14002fa86:	add    BYTE PTR [rax+0x2f3d],al
   14002fa8c:	add    BYTE PTR [rax],al
   14002fa8e:	add    BYTE PTR [rax+0x2f3c],al
   14002fa94:	add    BYTE PTR [rax],al
   14002fa96:	add    BYTE PTR [rax+0x95d],al
   14002fa9c:	add    BYTE PTR [rax],al
   14002fa9e:	add    BYTE PTR [rax+0x13df],al
   14002faa4:	add    BYTE PTR [rax],al
   14002faa6:	add    BYTE PTR [rax+0x1ee1],al
   14002faac:	add    BYTE PTR [rax],al
   14002faae:	add    BYTE PTR [rax+0x1131],al
   14002fab4:	add    BYTE PTR [rax],al
   14002fab6:	add    BYTE PTR [rax+0x307e],al
   14002fabc:	add    BYTE PTR [rax],al
   14002fabe:	add    BYTE PTR [rax+0x30bc],al
   14002fac4:	add    BYTE PTR [rax],al
   14002fac6:	add    BYTE PTR [rax+0x2715],al
   14002facc:	add    BYTE PTR [rax],al
   14002face:	add    BYTE PTR [rax+0x2e1b],al
   14002fad4:	add    BYTE PTR [rax],al
   14002fad6:	add    BYTE PTR [rax+0x1f1e],al
   14002fadc:	add    BYTE PTR [rax],al
   14002fade:	add    BYTE PTR [rax+0x5a5],al
   14002fae4:	add    BYTE PTR [rax],al
   14002fae6:	add    BYTE PTR [rax+0x1c71],al
   14002faec:	add    BYTE PTR [rax],al
   14002faee:	add    BYTE PTR [rax+0x1f71],al
   14002faf4:	add    BYTE PTR [rax],al
   14002faf6:	add    BYTE PTR [rax+0x224d],al
   14002fafc:	add    BYTE PTR [rax],al
   14002fafe:	add    BYTE PTR [rax+0x265e],al
   14002fb04:	add    BYTE PTR [rax],al
   14002fb06:	add    BYTE PTR [rax+0x1e7c],al
   14002fb0c:	add    BYTE PTR [rax],al
   14002fb0e:	add    BYTE PTR [rax+0x140b],al
   14002fb14:	add    BYTE PTR [rax],al
   14002fb16:	add    BYTE PTR [rax+0x1ca9],al
   14002fb1c:	add    BYTE PTR [rax],al
   14002fb1e:	add    BYTE PTR [rax+0x1cb3],al
   14002fb24:	add    BYTE PTR [rax],al
   14002fb26:	add    BYTE PTR [rax+0x1cb2],al
   14002fb2c:	add    BYTE PTR [rax],al
   14002fb2e:	add    BYTE PTR [rax+0x136a],al
   14002fb34:	add    BYTE PTR [rax],al
   14002fb36:	add    BYTE PTR [rax+0x140d],al
   14002fb3c:	add    BYTE PTR [rax],al
   14002fb3e:	add    BYTE PTR [rax+0x137e],al
   14002fb44:	add    BYTE PTR [rax],al
   14002fb46:	add    BYTE PTR [rax+0x1552],al
   14002fb4c:	add    BYTE PTR [rax],al
   14002fb4e:	add    BYTE PTR [rax+0x147b],al
   14002fb54:	add    BYTE PTR [rax],al
   14002fb56:	add    BYTE PTR [rax+0x22da],al
   14002fb5c:	add    BYTE PTR [rax],al
   14002fb5e:	add    BYTE PTR [rax+0x154f],al
   14002fb64:	add    BYTE PTR [rax],al
   14002fb66:	add    BYTE PTR [rax+0x1493],al
   14002fb6c:	add    BYTE PTR [rax],al
   14002fb6e:	add    BYTE PTR [rax+0x137b],al
   14002fb74:	add    BYTE PTR [rax],al
   14002fb76:	add    BYTE PTR [rax+0x5ce],al
   14002fb7c:	add    BYTE PTR [rax],al
   14002fb7e:	add    BYTE PTR [rax+0x16ba],al
   14002fb84:	add    BYTE PTR [rax],al
   14002fb86:	add    BYTE PTR [rax+0x2e25],al
   14002fb8c:	add    BYTE PTR [rax],al
   14002fb8e:	add    BYTE PTR [rax+0x2e27],al
   14002fb94:	add    BYTE PTR [rax],al
   14002fb96:	add    BYTE PTR [rax+0x343c],al
   14002fb9c:	add    BYTE PTR [rax],al
   14002fb9e:	add    BYTE PTR [rax+0xc3b],al
   14002fba4:	add    BYTE PTR [rax],al
   14002fba6:	add    BYTE PTR [rax+0x227c],al
   14002fbac:	add    BYTE PTR [rax],al
   14002fbae:	add    BYTE PTR [rax+0x294b],al
   14002fbb4:	add    BYTE PTR [rax],al
   14002fbb6:	add    BYTE PTR [rax+0x19e1],al
   14002fbbc:	add    BYTE PTR [rax],al
   14002fbbe:	add    BYTE PTR [rax+0x2e00],al
   14002fbc4:	add    BYTE PTR [rax],al
   14002fbc6:	add    BYTE PTR [rax+0x2159],al
   14002fbcc:	add    BYTE PTR [rax],al
   14002fbce:	add    BYTE PTR [rax+0x36f3],al
   14002fbd4:	add    BYTE PTR [rax],al
   14002fbd6:	add    BYTE PTR [rax+0x2ceb],al
   14002fbdc:	add    BYTE PTR [rax],al
   14002fbde:	add    BYTE PTR [rax+0xe5b],al
   14002fbe4:	add    BYTE PTR [rax],al
   14002fbe6:	add    BYTE PTR [rax+0x2d7d],al
   14002fbec:	add    BYTE PTR [rax],al
   14002fbee:	add    BYTE PTR [rax+0x2207],al
   14002fbf4:	add    BYTE PTR [rax],al
   14002fbf6:	add    BYTE PTR [rax+0x2c19],al
   14002fbfc:	add    BYTE PTR [rax],al
   14002fbfe:	add    BYTE PTR [rax+0x2c18],al
   14002fc04:	add    BYTE PTR [rax],al
   14002fc06:	add    BYTE PTR [rax+0x14eb],al
   14002fc0c:	add    BYTE PTR [rax],al
   14002fc0e:	add    BYTE PTR [rax+0x2684],al
   14002fc14:	add    BYTE PTR [rax],al
   14002fc16:	add    BYTE PTR [rax+0x2680],al
   14002fc1c:	add    BYTE PTR [rax],al
   14002fc1e:	add    BYTE PTR [rax+0x2682],al
   14002fc24:	add    BYTE PTR [rax],al
   14002fc26:	add    BYTE PTR [rax+0x2683],al
   14002fc2c:	add    BYTE PTR [rax],al
   14002fc2e:	add    BYTE PTR [rax+0x2681],al
   14002fc34:	add    BYTE PTR [rax],al
   14002fc36:	add    BYTE PTR [rax+0xa60],al
   14002fc3c:	add    BYTE PTR [rax],al
   14002fc3e:	add    BYTE PTR [rax+0x1e73],al
   14002fc44:	add    BYTE PTR [rax],al
   14002fc46:	add    BYTE PTR [rax+0x2663],al
   14002fc4c:	add    BYTE PTR [rax],al
   14002fc4e:	add    BYTE PTR [rax+0xc5f],al
   14002fc54:	add    BYTE PTR [rax],al
   14002fc56:	add    BYTE PTR [rax+0xc62],al
   14002fc5c:	add    BYTE PTR [rax],al
   14002fc5e:	add    BYTE PTR [rax+0x1710],al
   14002fc64:	add    BYTE PTR [rax],al
   14002fc66:	add    BYTE PTR [rax+0x33cc],al
   14002fc6c:	add    BYTE PTR [rax],al
   14002fc6e:	add    BYTE PTR [rax+0x2a34],al
   14002fc74:	add    BYTE PTR [rax],al
   14002fc76:	add    BYTE PTR [rax+0x2165],al
   14002fc7c:	add    BYTE PTR [rax],al
   14002fc7e:	add    BYTE PTR [rax+0xb31],al
   14002fc84:	add    BYTE PTR [rax],al
   14002fc86:	add    BYTE PTR [rax+0x279d],al
   14002fc8c:	add    BYTE PTR [rax],al
   14002fc8e:	add    BYTE PTR [rax+0x918],al
   14002fc94:	add    BYTE PTR [rax],al
   14002fc96:	add    BYTE PTR [rax+0x10dc],al
   14002fc9c:	add    BYTE PTR [rax],al
   14002fc9e:	add    BYTE PTR [rax+0x0],al
   14002fca4:	add    BYTE PTR [rax],al
   14002fca6:	add    BYTE PTR [rax],al
   14002fca8:	je     0x14002fc51
   14002fcaa:	add    eax,DWORD PTR [rax]
   14002fcac:	add    BYTE PTR [rax],al
   14002fcae:	add    BYTE PTR [rax],al
   14002fcb0:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14002fcb2:	add    eax,DWORD PTR [rax]
   14002fcb4:	add    BYTE PTR [rax],al
   14002fcb6:	add    BYTE PTR [rax],al
   14002fcb8:	push   rsp
   14002fcb9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002fcba:	add    eax,DWORD PTR [rax]
   14002fcbc:	add    BYTE PTR [rax],al
   14002fcbe:	add    BYTE PTR [rax],al
   14002fcc0:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002fcc2:	add    eax,DWORD PTR [rax]
   14002fcc4:	add    BYTE PTR [rax],al
   14002fcc6:	add    BYTE PTR [rax],al
   14002fcc8:	xor    BYTE PTR [rdi+0x3],ah
   14002fcce:	add    BYTE PTR [rax],al
   14002fcd0:	and    al,0xa7
   14002fcd2:	add    eax,DWORD PTR [rax]
   14002fcd4:	add    BYTE PTR [rax],al
   14002fcd6:	add    BYTE PTR [rax],al
   14002fcd8:	adc    ah,BYTE PTR [rdi+0x3]
   14002fcde:	add    BYTE PTR [rax],al
   14002fce0:	add    ah,BYTE PTR [rdi+0x3]
   14002fce6:	add    BYTE PTR [rax],al
   14002fce8:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002fcea:	add    eax,DWORD PTR [rax]
	...
   14002fd00:	rol    dh,1
   14002fd02:	add    al,BYTE PTR [rax+0x1]
   14002fd05:	add    BYTE PTR [rax],al
   14002fd07:	add    ah,cl
   14002fd09:	adc    BYTE PTR [rax],al
   14002fd0b:	rex add DWORD PTR [rax],eax
   14002fd0e:	add    BYTE PTR [rax],al
   14002fd10:	in     al,dx
   14002fd11:	adc    BYTE PTR [rax],al
   14002fd13:	rex add DWORD PTR [rax],eax
   14002fd16:	add    BYTE PTR [rax],al
   14002fd18:	add    BYTE PTR [rax],dl
   14002fd1a:	add    BYTE PTR [rax+0x1],al
   14002fd1d:	add    BYTE PTR [rax],al
   14002fd1f:	add    BYTE PTR [rax+0x10],al
   14002fd22:	add    BYTE PTR [rax+0x1],al
   14002fd25:	add    BYTE PTR [rax],al
   14002fd27:	add    BYTE PTR [rax+0x10],dl
   14002fd2a:	add    BYTE PTR [rax+0x1],al
   14002fd2d:	add    BYTE PTR [rax],al
   14002fd2f:	add    BYTE PTR [rax+0x10],ah
   14002fd32:	add    BYTE PTR [rax+0x1],al
   14002fd35:	add    BYTE PTR [rax],al
   14002fd37:	add    BYTE PTR [rax+0x10],dh
   14002fd3a:	add    BYTE PTR [rax+0x1],al
   14002fd3d:	add    BYTE PTR [rax],al
   14002fd3f:	add    BYTE PTR [rax+0x1400010],ah
   14002fd45:	add    BYTE PTR [rax],al
   14002fd47:	add    al,al
   14002fd49:	adc    BYTE PTR [rax],al
   14002fd4b:	rex add DWORD PTR [rax],eax
	...
   14002fd5e:	add    BYTE PTR [rax],al
   14002fd60:	add    dh,al
   14002fd62:	add    al,BYTE PTR [rax+0x1]
   14002fd65:	add    BYTE PTR [rax],al
   14002fd67:	add    BYTE PTR [rax+0x14002c9],cl
   14002fd6d:	add    BYTE PTR [rax],al
   14002fd6f:	add    BYTE PTR [rax-0x32],bl
   14002fd72:	add    al,BYTE PTR [rax+0x1]
	...
   14002fd81:	add    BYTE PTR [rax],al
   14002fd83:	add    ch,bh
   14002fd85:	int3   
   14002fd86:	and    edx,DWORD PTR [rbx+0x0]
   14002fd89:	add    BYTE PTR [rax],al
   14002fd8b:	add    BYTE PTR [rdx],al
   14002fd8d:	add    BYTE PTR [rax],al
   14002fd8f:	add    BYTE PTR [rbp+0x0],dl
   14002fd92:	add    BYTE PTR [rax],al
   14002fd94:	and    BYTE PTR [rax+0x3],bl
   14002fd97:	add    BYTE PTR [rax],ah
   14002fd99:	add    r8d,DWORD PTR [rax]
   14002fd9c:	add    BYTE PTR [rax],al
   14002fd9e:	add    BYTE PTR [rax],al
   14002fda0:	std    
   14002fda1:	int3   
   14002fda2:	and    edx,DWORD PTR [rbx+0x0]
   14002fda5:	add    BYTE PTR [rax],al
   14002fda7:	add    BYTE PTR [rax+rax*1],cl
   14002fdaa:	add    BYTE PTR [rax],al
   14002fdac:	adc    al,0x0
   14002fdae:	add    BYTE PTR [rax],al
   14002fdb0:	js     0x14002fe0a
   14002fdb2:	add    eax,DWORD PTR [rax]
   14002fdb4:	js     0x14002fdfa
   14002fdb6:	add    eax,DWORD PTR [rax]
   14002fdb8:	rex.XB
   14002fdb9:	rex.WR push rbx
   14002fdbb:	rex.WB
   14002fdbc:	rex.R pop rsp
   14002fdbe:	jnp    0x14002fe01
   14002fdc0:	rex.R
   14002fdc1:	rex.X cmp BYTE PTR [rax],dil
   14002fdc4:	xor    BYTE PTR [rcx+0x36],al
   14002fdc7:	sub    eax,0x46463844
   14002fdcc:	sub    eax,0x46433131
   14002fdd1:	sub    eax,0x37373339
   14002fdd6:	sub    eax,0x41413030
   14002fddb:	xor    BYTE PTR [rax],dh
   14002fddd:	xor    eax,DWORD PTR [rdx+0x37]
   14002fde0:	xor    DWORD PTR [r9],esi
   14002fde3:	jge    0x14002fe41
   14002fde5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002fde7:	jo     0x14002fe5b
   14002fde9:	outs   dx,DWORD PTR ds:[rsi]
   14002fdea:	movsxd edx,DWORD PTR [rbx+0x65]
   14002fded:	jb     0x14002fe65
   14002fdef:	gs jb  0x14002fe25
   14002fdf2:	xor    al,BYTE PTR [rax]
   14002fdf4:	add    BYTE PTR [rax],al
   14002fdf6:	add    BYTE PTR [rax],al
   14002fdf8:	push   0x72746368
   14002fdfd:	ins    BYTE PTR es:[rdi],dx
   14002fdfe:	outs   dx,DWORD PTR cs:[rsi]
   14002fe00:	movsxd edi,DWORD PTR [rax+0x0]
   14002fe03:	add    BYTE PTR [rax],al
   14002fe05:	add    BYTE PTR [rax],al
   14002fe07:	add    BYTE PTR [rax+0x14003d8],dl
   14002fe0d:	add    BYTE PTR [rax],al
   14002fe0f:	add    BYTE PTR [rax],dh
   14002fe11:	fld    DWORD PTR [rbx]
   14002fe13:	rex add DWORD PTR [rax],eax
   14002fe16:	add    BYTE PTR [rax],al
   14002fe18:	nop
   14002fe19:	pop    rax
   14002fe1a:	add    eax,DWORD PTR [rax+0x1]
   14002fe1d:	add    BYTE PTR [rax],al
   14002fe1f:	add    BYTE PTR [rax-0x34],bh
   14002fe22:	add    al,BYTE PTR [rax+0x1]
   14002fe25:	add    BYTE PTR [rax],al
   14002fe27:	add    BYTE PTR [rax],ch
   14002fe29:	sub    BYTE PTR [rcx-0x2d],cl
   14002fe2c:	cmp    BYTE PTR [rcx-0x2c],al
   14002fe2f:	rex.WRXB mov r11b,0xec
   14002fe32:	fistp  DWORD PTR [rcx-0x7951a1ed]
	...
   14002fe40:	add    BYTE PTR [r10+0x0],r10b
   14002fe44:	push   rdx
   14002fe45:	add    BYTE PTR [rdi+0x0],cl
   14002fe48:	push   rdx
   14002fe49:	add    BYTE PTR [rax],ah
   14002fe4b:	add    BYTE PTR [rdx],bh
   14002fe4d:	add    BYTE PTR [rax],ah
   14002fe4f:	add    BYTE PTR [rbp+0x0],dl
   14002fe52:	outs   dx,BYTE PTR ds:[rsi]
   14002fe53:	add    BYTE PTR [rcx+0x0],ah
   14002fe56:	(bad)  
   14002fe57:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002fe5b:	add    BYTE PTR [rax],ah
   14002fe5d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002fe61:	add    BYTE PTR [rax],ah
   14002fe63:	add    BYTE PTR [rcx+0x0],ch
   14002fe66:	outs   dx,BYTE PTR ds:[rsi]
   14002fe67:	add    BYTE PTR [rcx+0x0],ch
   14002fe6a:	je     0x14002fe6c
   14002fe6c:	imul   eax,DWORD PTR [rax],0x6c0061
   14002fe72:	imul   eax,DWORD PTR [rax],0x65007a
   14002fe78:	and    BYTE PTR [rax],al
   14002fe7a:	movsxd eax,DWORD PTR [rax]
   14002fe7c:	jb     0x14002fe7e
   14002fe7e:	imul   eax,DWORD PTR [rax],0x690074
   14002fe84:	movsxd eax,DWORD PTR [rax]
   14002fe86:	(bad)  
   14002fe87:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002fe8b:	add    BYTE PTR [rbx+0x0],dh
   14002fe8e:	add    BYTE PTR gs:[rbx+0x0],ah
   14002fe92:	je     0x14002fe94
   14002fe94:	imul   eax,DWORD PTR [rax],0x6e006f
   14002fe9a:	and    BYTE PTR [rax],al
   14002fe9c:	imul   eax,DWORD PTR [rax],0x20006e
   14002fea2:	rex.XB add BYTE PTR [r9+0x0],al
   14002fea6:	je     0x14002fea8
   14002fea8:	ins    BYTE PTR es:[rdi],dx
   14002fea9:	add    BYTE PTR [rdx+0x0],al
   14002feac:	(bad)  
   14002fead:	add    BYTE PTR [rbx+0x0],dh
   14002feb0:	add    BYTE PTR gs:[rbp+0x0],cl
   14002feb4:	outs   dx,DWORD PTR ds:[rsi]
   14002feb5:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002feb9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002febd:	add    BYTE PTR [rdx],cl
	...
   14002fec7:	add    BYTE PTR [rdi+0x65],ah
   14002feca:	outs   dx,BYTE PTR ds:[rsi]
   14002fecb:	gs jb  0x14002ff37
   14002fece:	movsxd eax,DWORD PTR [rax]
   14002fed0:	jne    0x14002ff40
   14002fed2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002fed6:	outs   dx,BYTE PTR ds:[rsi]
   14002fed7:	and    BYTE PTR [rbp+0x72],ah
   14002feda:	jb     0x14002ff4b
   14002fedc:	jb     0x14002fede
   14002fede:	add    BYTE PTR [rax],al
   14002fee0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14002fee7:	ins    DWORD PTR es:[rdi],dx
	...
   14002fef0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14002fef7:	ins    DWORD PTR es:[rdi],dx
   14002fef8:	and    BYTE PTR [rbx+0x74],dh
   14002fefb:	jb     0x14002ff62
   14002fefd:	(bad)  
   14002fefe:	ins    DWORD PTR es:[rdi],dx
   14002feff:	and    BYTE PTR [rbp+0x72],ah
   14002ff02:	jb     0x14002ff73
   14002ff04:	jb     0x14002ff06
   14002ff06:	add    BYTE PTR [rax],al
   14002ff08:	jae    0x14002ff83
   14002ff0a:	jae    0x14002ff80
   14002ff0c:	gs ins DWORD PTR es:[rdi],dx
   14002ff0e:	add    BYTE PTR [rax],al
   14002ff10:	push   rdi
   14002ff11:	push   rsp
   14002ff12:	push   rbx
   14002ff13:	push   rax
   14002ff14:	push   rbp
   14002ff15:	push   rsp
   14002ff16:	cs rex.XB
   14002ff18:	rex.W
   14002ff19:	rex.WRB add BYTE PTR [r8],r8b
   14002ff1c:	add    BYTE PTR [rax],al
   14002ff1e:	add    BYTE PTR [rax],al
   14002ff20:	jae    0x14002ff96
   14002ff22:	jb     0x14002ff8d
   14002ff24:	outs   dx,BYTE PTR ds:[rsi]
   14002ff25:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14002ff2a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14002ff2e:	add    BYTE PTR [ecx+0x6e],ch
   14002ff32:	jbe    0x14002ff95
   14002ff34:	ins    BYTE PTR es:[rdi],dx
   14002ff35:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14002ff3d:	and    BYTE PTR [eax+0x6f],dh
   14002ff41:	jae    0x14002ffac
   14002ff43:	je     0x14002ffae
   14002ff45:	outs   dx,DWORD PTR ds:[rsi]
   14002ff46:	outs   dx,BYTE PTR ds:[rsi]
   14002ff47:	add    BYTE PTR [rax],dh
   14002ff49:	pop    rdx
   14002ff4a:	add    eax,DWORD PTR [rax+0x1]
   14002ff4d:	add    BYTE PTR [rax],al
   14002ff4f:	add    al,ah
   14002ff51:	adc    DWORD PTR [rax],eax
   14002ff53:	rex add DWORD PTR [rax],eax
   14002ff56:	add    BYTE PTR [rax],al
   14002ff58:	adc    BYTE PTR [rdx],0x0
   14002ff5b:	rex add DWORD PTR [rax],eax
   14002ff5e:	add    BYTE PTR [rax],al
   14002ff60:	nop
   14002ff61:	adc    al,BYTE PTR [rax]
   14002ff63:	rex add DWORD PTR [rax],eax
   14002ff66:	add    BYTE PTR [rax],al
   14002ff68:	adc    BYTE PTR [rdx],dl
   14002ff6a:	add    BYTE PTR [rax+0x1],al
   14002ff6d:	add    BYTE PTR [rax],al
   14002ff6f:	add    BYTE PTR [rax+0x12],ah
   14002ff72:	add    BYTE PTR [rax+0x1],al
   14002ff75:	add    BYTE PTR [rax],al
   14002ff77:	add    BYTE PTR [rax],ah
   14002ff79:	adc    al,BYTE PTR [rax]
   14002ff7b:	rex add DWORD PTR [rax],eax
   14002ff7e:	add    BYTE PTR [rax],al
   14002ff80:	call   0x1414302de
   14002ff85:	add    BYTE PTR [rax],al
   14002ff87:	add    ah,bl
   14002ff89:	ret    0x4002
   14002ff8c:	add    DWORD PTR [rax],eax
   14002ff8e:	add    BYTE PTR [rax],al
   14002ff90:	xor    BYTE PTR [rax+rax*1],dl
   14002ff93:	rex add DWORD PTR [rax],eax
   14002ff96:	add    BYTE PTR [rax],al
   14002ff98:	rex adc DWORD PTR [rax],eax
   14002ff9b:	rex add DWORD PTR [rax],eax
   14002ff9e:	add    BYTE PTR [rax],al
   14002ffa0:	rex adc DWORD PTR [rax],eax
   14002ffa3:	rex add DWORD PTR [rax],eax
   14002ffa6:	add    BYTE PTR [rax],al
   14002ffa8:	rex adc DWORD PTR [rax],eax
   14002ffab:	rex add DWORD PTR [rax],eax
   14002ffae:	add    BYTE PTR [rax],al
   14002ffb0:	adc    dl,al
   14002ffb2:	add    al,BYTE PTR [rax+0x1]
   14002ffb5:	add    BYTE PTR [rax],al
   14002ffb7:	add    BYTE PTR [rdx],cl
   14002ffb9:	ret    0x4002
   14002ffbc:	add    DWORD PTR [rax],eax
   14002ffbe:	add    BYTE PTR [rax],al
   14002ffc0:	add    al,0xc2
   14002ffc2:	add    al,BYTE PTR [rax+0x1]
   14002ffc5:	add    BYTE PTR [rax],al
   14002ffc7:	add    dh,bh
   14002ffc9:	rol    DWORD PTR [rdx],0x40
   14002ffcc:	add    DWORD PTR [rax],eax
   14002ffce:	add    BYTE PTR [rax],al
   14002ffd0:	clc    
   14002ffd1:	rol    DWORD PTR [rdx],0x40
   14002ffd4:	add    DWORD PTR [rax],eax
   14002ffd6:	add    BYTE PTR [rax],al
   14002ffd8:	repnz rol DWORD PTR [rdx],0x40
   14002ffdc:	add    DWORD PTR [rax],eax
   14002ffde:	add    BYTE PTR [rax],al
   14002ffe0:	in     al,dx
   14002ffe1:	rol    DWORD PTR [rdx],0x40
   14002ffe4:	add    DWORD PTR [rax],eax
   14002ffe6:	add    BYTE PTR [rax],al
   14002ffe8:	and    BYTE PTR [rax+rax*1],dl
   14002ffeb:	rex add DWORD PTR [rax],eax
   14002ffee:	add    BYTE PTR [rax],al
   14002fff0:	out    0xc1,al
   14002fff2:	add    al,BYTE PTR [rax+0x1]
   14002fff5:	add    BYTE PTR [rax],al
   14002fff7:	add    al,ah
   14002fff9:	rol    DWORD PTR [rdx],0x40
   14002fffc:	add    DWORD PTR [rax],eax
   14002fffe:	add    BYTE PTR [rax],al
   140030000:	fcmovb st,st(1)
   140030002:	add    al,BYTE PTR [rax+0x1]
   140030005:	add    BYTE PTR [rax],al
   140030007:	add    ah,dl
   140030009:	rol    DWORD PTR [rdx],0x40
   14003000c:	add    DWORD PTR [rax],eax
   14003000e:	add    BYTE PTR [rax],al
   140030010:	(bad)  
   140030011:	rol    DWORD PTR [rdx],0x40
   140030014:	add    DWORD PTR [rax],eax
   140030016:	add    BYTE PTR [rax],al
   140030018:	enter  0x2c1,0x40
   14003001c:	add    DWORD PTR [rax],eax
   14003001e:	add    BYTE PTR [rax],al
   140030020:	ret    0x2c1
   140030023:	rex add DWORD PTR [rax],eax
   140030026:	add    BYTE PTR [rax],al
   140030028:	mov    esp,0x14002c1
   14003002d:	add    BYTE PTR [rax],al
   14003002f:	add    BYTE PTR [rsi+0x14002c1],dh
   140030035:	add    BYTE PTR [rax],al
   140030037:	add    BYTE PTR [rax+0x1400015],dh
   14003003d:	add    BYTE PTR [rax],al
   14003003f:	add    BYTE PTR [rdx+rax*8],dh
   140030042:	add    al,BYTE PTR [rax+0x1]
   140030045:	add    BYTE PTR [rax],al
   140030047:	add    BYTE PTR [rax],al
   140030049:	ret    
   14003004a:	add    al,BYTE PTR [rax+0x1]
   14003004d:	add    BYTE PTR [rax],al
   14003004f:	add    dl,bh
   140030051:	ret    0x4002
   140030054:	add    DWORD PTR [rax],eax
   140030056:	add    BYTE PTR [rax],al
   140030058:	cs ret 0x4002
   14003005c:	add    DWORD PTR [rax],eax
   14003005e:	add    BYTE PTR [rax],al
   140030060:	hlt    
   140030061:	ret    0x4002
   140030064:	add    DWORD PTR [rax],eax
   140030066:	add    BYTE PTR [rax],al
   140030068:	rex ret 0x4002
   14003006c:	add    DWORD PTR [rax],eax
   14003006e:	add    BYTE PTR [rax],al
   140030070:	sub    dl,al
   140030072:	add    al,BYTE PTR [rax+0x1]
   140030075:	add    BYTE PTR [rax],al
   140030077:	add    dh,ch
   140030079:	ret    0x4002
   14003007c:	add    DWORD PTR [rax],eax
   14003007e:	add    BYTE PTR [rax],al
   140030080:	call   0x141430347
   140030085:	add    BYTE PTR [rax],al
   140030087:	add    dl,ah
   140030089:	ret    0x4002
   14003008c:	add    DWORD PTR [rax],eax
   14003008e:	add    BYTE PTR [rax],al
   140030090:	(bad)  
   140030091:	ret    0x4002
   140030094:	add    DWORD PTR [rax],eax
   140030096:	add    BYTE PTR [rax],al
   140030098:	rol    dl,1
   14003009a:	add    al,BYTE PTR [rax+0x1]
   14003009d:	add    BYTE PTR [rax],al
   14003009f:	add    dl,cl
   1400300a1:	ret    0x4002
   1400300a4:	add    DWORD PTR [rax],eax
   1400300a6:	add    BYTE PTR [rax],al
   1400300a8:	(bad)
   1400300ac:	add    DWORD PTR [rax],eax
   1400300ae:	add    BYTE PTR [rax],al
   1400300b0:	mov    esi,0x14002c2
   1400300b5:	add    BYTE PTR [rax],al
   1400300b7:	add    BYTE PTR [rax+0x14002c2],bh
   1400300bd:	add    BYTE PTR [rax],al
   1400300bf:	add    BYTE PTR [rdx+0x14002c2],dh
   1400300c5:	add    BYTE PTR [rax],al
   1400300c7:	add    BYTE PTR [rdx+rax*8+0x14002],ch
   1400300ce:	add    BYTE PTR [rax],al
   1400300d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400300d1:	ret    0x4002
   1400300d4:	add    DWORD PTR [rax],eax
   1400300d6:	add    BYTE PTR [rax],al
   1400300d8:	movabs al,ds:0x9a000000014002c2
   1400300e1:	ret    0x4002
   1400300e4:	add    DWORD PTR [rax],eax
   1400300e6:	add    BYTE PTR [rax],al
   1400300e8:	xchg   esp,eax
   1400300e9:	ret    0x4002
   1400300ec:	add    DWORD PTR [rax],eax
   1400300ee:	add    BYTE PTR [rax],al
   1400300f0:	mov    es,edx
   1400300f2:	add    al,BYTE PTR [rax+0x1]
   1400300f5:	add    BYTE PTR [rax],al
   1400300f7:	add    BYTE PTR [rax+0x14002c2],cl
   1400300fd:	add    BYTE PTR [rax],al
   1400300ff:	add    BYTE PTR [rdx+0x14002c2],al
   140030105:	add    BYTE PTR [rax],al
   140030107:	add    BYTE PTR [rdx+rax*8+0x2],bh
   14003010b:	rex add DWORD PTR [rax],eax
   14003010e:	add    BYTE PTR [rax],al
   140030110:	jbe    0x1400300d4
   140030112:	add    al,BYTE PTR [rax+0x1]
   140030115:	add    BYTE PTR [rax],al
   140030117:	add    BYTE PTR [rax-0x3e],dh
   14003011a:	add    al,BYTE PTR [rax+0x1]
   14003011d:	add    BYTE PTR [rax],al
   14003011f:	add    BYTE PTR [rdx-0x3e],ch
   140030122:	add    al,BYTE PTR [rax+0x1]
   140030125:	add    BYTE PTR [rax],al
   140030127:	add    BYTE PTR [rdx+rax*8+0x2],ah
   14003012b:	rex add DWORD PTR [rax],eax
   14003012e:	add    BYTE PTR [rax],al
   140030130:	pop    rsi
   140030131:	ret    0x4002
   140030134:	add    DWORD PTR [rax],eax
   140030136:	add    BYTE PTR [rax],al
   140030138:	pop    rax
   140030139:	ret    0x4002
   14003013c:	add    DWORD PTR [rax],eax
   14003013e:	add    BYTE PTR [rax],al
   140030140:	push   rdx
   140030141:	ret    0x4002
   140030144:	add    DWORD PTR [rax],eax
   140030146:	add    BYTE PTR [rax],al
   140030148:	(bad)  
   140030149:	adc    DWORD PTR [rax],eax
   14003014b:	rex add DWORD PTR [rax],eax
   14003014e:	add    BYTE PTR [rax],al
   140030150:	jo     0x140030163
   140030152:	add    BYTE PTR [rax+0x1],al
   140030155:	add    BYTE PTR [rax],al
   140030157:	add    BYTE PTR [rax+0x1400011],al
   14003015d:	add    BYTE PTR [rax],al
   14003015f:	add    BYTE PTR [rax+0x1400011],dl
   140030165:	add    BYTE PTR [rax],al
   140030167:	add    BYTE PTR [rax+0x1400011],ah
   14003016d:	add    BYTE PTR [rax],al
   14003016f:	add    BYTE PTR [rax+0x1400011],dh
   140030175:	add    BYTE PTR [rax],al
   140030177:	add    al,al
   140030179:	adc    DWORD PTR [rax],eax
   14003017b:	rex add DWORD PTR [rax],eax
   14003017e:	add    BYTE PTR [rax],al
   140030180:	rcl    BYTE PTR [rcx],0x0
   140030183:	rex add DWORD PTR [rax],eax
   140030186:	add    BYTE PTR [rax],al
   140030188:	rcl    BYTE PTR [rcx],1
   14003018a:	add    BYTE PTR [rax+0x1],al
   14003018d:	add    BYTE PTR [rax],al
   14003018f:	add    BYTE PTR [rdx+rax*8+0x2],cl
   140030193:	rex add DWORD PTR [rax],eax
   140030196:	add    BYTE PTR [rax],al
   140030198:	rex.RX ret 0x4002
   14003019c:	add    DWORD PTR [rax],eax
   14003019e:	add    BYTE PTR [rax],al
   1400301a0:	cmp    al,dl
   1400301a2:	add    al,BYTE PTR [rax+0x1]
   1400301a5:	add    BYTE PTR [rax],al
   1400301a7:	add    BYTE PTR [rdx],ah
   1400301a9:	ret    0x4002
   1400301ac:	add    DWORD PTR [rax],eax
   1400301ae:	add    BYTE PTR [rax],al
   1400301b0:	(bad)  
   1400301b1:	ret    0x4002
   1400301b4:	add    DWORD PTR [rax],eax
   1400301b6:	add    BYTE PTR [rax],al
   1400301b8:	sbb    al,0xc2
   1400301ba:	add    al,BYTE PTR [rax+0x1]
   1400301bd:	add    BYTE PTR [rax],al
   1400301bf:	add    al,dl
   1400301c1:	add    DWORD PTR [rbx],eax
   1400301c3:	rex add DWORD PTR [rax],eax
	...
   1400301ce:	add    BYTE PTR [rax],al
   1400301d0:	adc    DWORD PTR [rcx],eax
   1400301d2:	add    BYTE PTR [rax],al
   1400301d4:	add    BYTE PTR [rax],al
   1400301d6:	add    BYTE PTR [rax],al
   1400301d8:	rex.RX loope 0x1400301db
   1400301db:	add    BYTE PTR [rsi-0x1f],al
   1400301de:	add    BYTE PTR [rax],al
   1400301e0:	cmp    al,BYTE PTR [rax]
   1400301e2:	add    BYTE PTR [rax],al
   1400301e4:	add    BYTE PTR [rax],al
   1400301e6:	add    BYTE PTR [rax],al
   1400301e8:	jo     0x1400301fe
   1400301ea:	add    BYTE PTR [rax+0x1],al
	...
   14003020d:	add    BYTE PTR [rax],al
   14003020f:	add    BYTE PTR [rax+0x5c],bl
   140030212:	add    eax,DWORD PTR [rax+0x1]
   140030215:	add    BYTE PTR [rax],al
   140030217:	add    al,ah
   140030219:	adc    DWORD PTR [rax],eax
   14003021b:	rex add DWORD PTR [rax],eax
   14003021e:	add    BYTE PTR [rax],al
   140030220:	(bad)  
   140030221:	adc    eax,DWORD PTR [rax]
   140030223:	rex add DWORD PTR [rax],eax
   140030226:	add    BYTE PTR [rax],al
   140030228:	jo     0x14003023d
   14003022a:	add    BYTE PTR [rax+0x1],al
   14003022d:	add    BYTE PTR [rax],al
   14003022f:	add    al,ah
   140030231:	adc    eax,DWORD PTR [rax]
   140030233:	rex add DWORD PTR [rax],eax
   140030236:	add    BYTE PTR [rax],al
   140030238:	(bad)  
   140030239:	adc    al,BYTE PTR [rax]
   14003023b:	rex add DWORD PTR [rax],eax
   14003023e:	add    BYTE PTR [rax],al
   140030240:	and    BYTE PTR [rdx],dl
   140030242:	add    BYTE PTR [rax+0x1],al
   140030245:	add    BYTE PTR [rax],al
   140030247:	add    al,dl
   140030249:	pop    rdx
   14003024a:	add    eax,DWORD PTR [rax+0x1]
   14003024d:	add    BYTE PTR [rax],al
   14003024f:	add    al,ah
   140030251:	adc    DWORD PTR [rax],eax
   140030253:	rex add DWORD PTR [rax],eax
   140030256:	add    BYTE PTR [rax],al
   140030258:	add    BYTE PTR [rbx],dl
   14003025a:	add    BYTE PTR [rax+0x1],al
   14003025d:	add    BYTE PTR [rax],al
   14003025f:	add    BYTE PTR [rax],dl
   140030261:	adc    eax,DWORD PTR [rax]
   140030263:	rex add DWORD PTR [rax],eax
   140030266:	add    BYTE PTR [rax],al
   140030268:	adc    BYTE PTR [rdx],dl
   14003026a:	add    BYTE PTR [rax+0x1],al
   14003026d:	add    BYTE PTR [rax],al
   14003026f:	add    BYTE PTR [rax+0x12],ah
   140030272:	add    BYTE PTR [rax+0x1],al
   140030275:	add    BYTE PTR [rax],al
   140030277:	add    BYTE PTR [rax],ah
   140030279:	adc    al,BYTE PTR [rax]
   14003027b:	rex add DWORD PTR [rax],eax
   14003027e:	add    BYTE PTR [rax],al
   140030280:	test   al,0x5a
   140030282:	add    eax,DWORD PTR [rax+0x1]
   140030285:	add    BYTE PTR [rax],al
   140030287:	add    al,ah
   140030289:	adc    DWORD PTR [rax],eax
   14003028b:	rex add DWORD PTR [rax],eax
   14003028e:	add    BYTE PTR [rax],al
   140030290:	movabs al,ds:0xa0000000014002ca
   140030299:	retf   0x4002
   14003029c:	add    DWORD PTR [rax],eax
   14003029e:	add    BYTE PTR [rax],al
   1400302a0:	adc    BYTE PTR [rdx],dl
   1400302a2:	add    BYTE PTR [rax+0x1],al
   1400302a5:	add    BYTE PTR [rax],al
   1400302a7:	add    BYTE PTR [rax+0x12],ah
   1400302aa:	add    BYTE PTR [rax+0x1],al
   1400302ad:	add    BYTE PTR [rax],al
   1400302af:	add    BYTE PTR [rax],ah
   1400302b1:	adc    al,BYTE PTR [rax]
   1400302b3:	rex add DWORD PTR [rax],eax
	...
   1400302c2:	add    BYTE PTR [rax],al
   1400302c4:	add    al,0x0
   1400302c6:	add    BYTE PTR [rax],al
   1400302c8:	or     BYTE PTR [rax],al
   1400302ca:	add    BYTE PTR [rax],al
   1400302cc:	or     al,0x0
   1400302ce:	add    BYTE PTR [rax],al
   1400302d0:	and    BYTE PTR [rcx],dl
   1400302d2:	add    BYTE PTR [rax+0x1],al
   1400302d5:	add    BYTE PTR [rax],al
   1400302d7:	add    BYTE PTR [rax],dh
   1400302d9:	adc    DWORD PTR [rax],eax
   1400302db:	rex add DWORD PTR [rax],eax
   1400302de:	add    BYTE PTR [rax],al
   1400302e0:	add    al,0x0
   1400302e2:	add    BYTE PTR [rax],al
   1400302e4:	or     BYTE PTR [rax],al
   1400302e6:	add    BYTE PTR [rax],al
   1400302e8:	or     al,0x0
   1400302ea:	add    BYTE PTR [rax],al
   1400302ec:	add    BYTE PTR [rax],al
   1400302ee:	add    BYTE PTR [rax],al
   1400302f0:	xor    BYTE PTR [rcx],dl
   1400302f2:	add    BYTE PTR [rax+0x1],al
   1400302f5:	add    BYTE PTR [rax],al
   1400302f7:	add    BYTE PTR [rax],ah
   1400302f9:	adc    DWORD PTR [rax],eax
   1400302fb:	rex add DWORD PTR [rax],eax
   1400302fe:	add    BYTE PTR [rax],al
   140030300:	or     BYTE PTR [rax],al
   140030302:	add    BYTE PTR [rax],al
   140030304:	or     al,0x0
   140030306:	add    BYTE PTR [rax],al
   140030308:	add    BYTE PTR [rax],al
   14003030a:	add    BYTE PTR [rax],al
   14003030c:	add    al,0x0
   14003030e:	add    BYTE PTR [rax],al
   140030310:	and    BYTE PTR [rcx],dl
   140030312:	add    BYTE PTR [rax+0x1],al
   140030315:	add    BYTE PTR [rax],al
   140030317:	add    BYTE PTR [rax],dh
   140030319:	adc    DWORD PTR [rax],eax
   14003031b:	rex add DWORD PTR [rax],eax
   14003031e:	add    BYTE PTR [rax],al
   140030320:	or     al,0x0
   140030322:	add    BYTE PTR [rax],al
   140030324:	add    BYTE PTR [rax],al
   140030326:	add    BYTE PTR [rax],al
   140030328:	add    al,0x0
   14003032a:	add    BYTE PTR [rax],al
   14003032c:	or     BYTE PTR [rax],al
   14003032e:	add    BYTE PTR [rax],al
   140030330:	xor    BYTE PTR [rcx],dl
   140030332:	add    BYTE PTR [rax+0x1],al
   140030335:	add    BYTE PTR [rax],al
   140030337:	add    BYTE PTR [rax],ah
   140030339:	adc    DWORD PTR [rax],eax
   14003033b:	rex add DWORD PTR [rax],eax
   14003033e:	add    BYTE PTR [rax],al
   140030340:	or     BYTE PTR [rax],al
   140030342:	add    BYTE PTR [rax],al
   140030344:	add    al,0x0
   140030346:	add    BYTE PTR [rax],al
   140030348:	add    BYTE PTR [rax],al
   14003034a:	add    BYTE PTR [rax],al
   14003034c:	or     al,0x0
   14003034e:	add    BYTE PTR [rax],al
   140030350:	and    BYTE PTR [rcx],dl
   140030352:	add    BYTE PTR [rax+0x1],al
   140030355:	add    BYTE PTR [rax],al
   140030357:	add    BYTE PTR [rax],dh
   140030359:	adc    DWORD PTR [rax],eax
   14003035b:	rex add DWORD PTR [rax],eax
   14003035e:	add    BYTE PTR [rax],al
   140030360:	or     al,0x0
   140030362:	add    BYTE PTR [rax],al
   140030364:	or     BYTE PTR [rax],al
   140030366:	add    BYTE PTR [rax],al
   140030368:	add    al,0x0
   14003036a:	add    BYTE PTR [rax],al
   14003036c:	add    BYTE PTR [rax],al
   14003036e:	add    BYTE PTR [rax],al
   140030370:	xor    BYTE PTR [rcx],dl
   140030372:	add    BYTE PTR [rax+0x1],al
   140030375:	add    BYTE PTR [rax],al
   140030377:	add    BYTE PTR [rax],ah
   140030379:	adc    DWORD PTR [rax],eax
   14003037b:	rex add DWORD PTR [rax],eax
   14003037e:	add    BYTE PTR [rax],al
   140030380:	add    BYTE PTR [rax],al
   140030382:	add    BYTE PTR [rax],al
   140030384:	or     al,0x0
   140030386:	add    BYTE PTR [rax],al
   140030388:	or     BYTE PTR [rax],al
   14003038a:	add    BYTE PTR [rax],al
   14003038c:	add    al,0x0
   14003038e:	add    BYTE PTR [rax],al
   140030390:	and    BYTE PTR [rcx],dl
   140030392:	add    BYTE PTR [rax+0x1],al
   140030395:	add    BYTE PTR [rax],al
   140030397:	add    BYTE PTR [rax],dh
   140030399:	adc    DWORD PTR [rax],eax
   14003039b:	rex add DWORD PTR [rax],eax
   14003039e:	add    BYTE PTR [rax],al
   1400303a0:	add    al,0x0
   1400303a2:	add    BYTE PTR [rax],al
   1400303a4:	add    BYTE PTR [rax],al
   1400303a6:	add    BYTE PTR [rax],al
   1400303a8:	or     al,0x0
   1400303aa:	add    BYTE PTR [rax],al
   1400303ac:	or     BYTE PTR [rax],al
   1400303ae:	add    BYTE PTR [rax],al
   1400303b0:	xor    BYTE PTR [rcx],dl
   1400303b2:	add    BYTE PTR [rax+0x1],al
   1400303b5:	add    BYTE PTR [rax],al
   1400303b7:	add    BYTE PTR [rax],ah
   1400303b9:	adc    DWORD PTR [rax],eax
   1400303bb:	rex add DWORD PTR [rax],eax
   1400303be:	add    BYTE PTR [rax],al
   1400303c0:	or     BYTE PTR [rax],al
   1400303c2:	add    BYTE PTR [rax],al
   1400303c4:	or     al,0x0
   1400303c6:	add    BYTE PTR [rax],al
   1400303c8:	add    BYTE PTR [rax],al
   1400303ca:	add    BYTE PTR [rax],al
   1400303cc:	add    al,0x0
   1400303ce:	add    BYTE PTR [rax],al
   1400303d0:	and    BYTE PTR [rcx],dl
   1400303d2:	add    BYTE PTR [rax+0x1],al
   1400303d5:	add    BYTE PTR [rax],al
   1400303d7:	add    BYTE PTR [rax],dh
   1400303d9:	adc    DWORD PTR [rax],eax
   1400303db:	rex add DWORD PTR [rax],eax
   1400303de:	add    BYTE PTR [rax],al
   1400303e0:	or     al,0x0
   1400303e2:	add    BYTE PTR [rax],al
   1400303e4:	add    BYTE PTR [rax],al
   1400303e6:	add    BYTE PTR [rax],al
   1400303e8:	add    al,0x0
   1400303ea:	add    BYTE PTR [rax],al
   1400303ec:	or     BYTE PTR [rax],al
   1400303ee:	add    BYTE PTR [rax],al
   1400303f0:	xor    BYTE PTR [rcx],dl
   1400303f2:	add    BYTE PTR [rax+0x1],al
   1400303f5:	add    BYTE PTR [rax],al
   1400303f7:	add    BYTE PTR [rax],ah
   1400303f9:	adc    DWORD PTR [rax],eax
   1400303fb:	rex add DWORD PTR [rax],eax
   1400303fe:	add    BYTE PTR [rax],al
   140030400:	add    BYTE PTR [rax],al
   140030402:	add    BYTE PTR [rax],al
   140030404:	add    al,0x0
   140030406:	add    BYTE PTR [rax],al
   140030408:	or     BYTE PTR [rax],al
   14003040a:	add    BYTE PTR [rax],al
   14003040c:	or     al,0x0
   14003040e:	add    BYTE PTR [rax],al
   140030410:	and    BYTE PTR [rcx],dl
   140030412:	add    BYTE PTR [rax+0x1],al
   140030415:	add    BYTE PTR [rax],al
   140030417:	add    BYTE PTR [rax],dh
   140030419:	adc    DWORD PTR [rax],eax
   14003041b:	rex add DWORD PTR [rax],eax
   14003041e:	add    BYTE PTR [rax],al
   140030420:	add    al,0x0
   140030422:	add    BYTE PTR [rax],al
   140030424:	or     BYTE PTR [rax],al
   140030426:	add    BYTE PTR [rax],al
   140030428:	or     al,0x0
   14003042a:	add    BYTE PTR [rax],al
   14003042c:	add    BYTE PTR [rax],al
   14003042e:	add    BYTE PTR [rax],al
   140030430:	xor    BYTE PTR [rcx],dl
   140030432:	add    BYTE PTR [rax+0x1],al
   140030435:	add    BYTE PTR [rax],al
   140030437:	add    BYTE PTR [rax],ah
   140030439:	adc    DWORD PTR [rax],eax
   14003043b:	rex add DWORD PTR [rax],eax
   14003043e:	add    BYTE PTR [rax],al
   140030440:	(bad)  
   140030441:	inc    DWORD PTR [rax]
   140030443:	add    BYTE PTR [rax],al
   140030445:	add    al,BYTE PTR [rax]
   140030447:	add    BYTE PTR [rdx+0x0],bh
   14003044a:	fld    QWORD PTR [rax]
   14003044c:	pop    rdx
   14003044d:	add    BYTE PTR [rax],al
   14003044f:	add    BYTE PTR [rsi],ah
   140030451:	add    DWORD PTR [rdi+0x1],eax
   140030454:	sub    DWORD PTR [rcx],eax
   140030456:	sbb    eax,0x21011f01
   14003045b:	add    DWORD PTR [rbx],esp
   14003045d:	add    DWORD PTR [rdi],esp
   14003045f:	add    DWORD PTR [rbx],ebp
   140030461:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x175043368
   140030467:	add    DWORD PTR [rbx],esi
   140030469:	add    DWORD PTR [rdi],esi
   14003046b:	add    DWORD PTR [rsi],ebx
   14003046d:	add    DWORD PTR [rdx],esp
   14003046f:	add    DWORD PTR [rax],ebp
   140030471:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d042878
   140030477:	add    DWORD PTR [rdi],edi
   140030479:	add    DWORD PTR [rcx+0x1],eax
   14003047c:	add    DWORD PTR [r9+0x1],r9d
   140030480:	rex.WXB add QWORD PTR [r14],rdi
   140030483:	add    DWORD PTR [rsi+0x1],eax
   140030486:	adc    eax,DWORD PTR [rbx+rcx*1]
   140030489:	add    al,0xc
   14003048b:	add    al,0xd
   14003048d:	add    al,0xe
   14003048f:	add    al,0x1b
   140030491:	add    DWORD PTR [rcx],esi
   140030493:	add    DWORD PTR [rbx],edi
   140030495:	add    DWORD PTR [rbx+0x1],eax
   140030498:	cmp    DWORD PTR [rcx],eax
   14003049a:	cmp    BYTE PTR [rcx],al
   14003049c:	(bad)  
   14003049e:	adc    BYTE PTR [rax+rcx*1],al
   1400304a1:	add    al,0x10
   1400304a3:	add    eax,0x4110614
   1400304a8:	adc    al,BYTE PTR [rdi+rax*1]
   1400304ab:	add    al,0x9
   1400304ad:	add    al,0xa
   1400304af:	add    al,0x0
   1400304b1:	add    eax,DWORD PTR [rcx]
   1400304b3:	add    eax,DWORD PTR [rdx]
   1400304b5:	add    ecx,DWORD PTR [rcx]
   1400304b7:	add    edx,DWORD PTR [rax]
   1400304b9:	add    ebp,DWORD PTR [rax]
   1400304bb:	add    ebp,DWORD PTR [rbx+rax*1]
   1400304be:	and    eax,DWORD PTR [rbx]
   1400304c0:	(bad)  
   1400304c1:	add    ebx,DWORD PTR [rbx]
   1400304c3:	add    edx,DWORD PTR [rbx+rax*1]
   1400304c6:	(bad)  
   1400304c7:	add    edx,DWORD PTR [rdi]
   1400304c9:	add    esp,DWORD PTR [rbx+rax*1]
   1400304cc:	and    BYTE PTR [rbx],al
   1400304ce:	or     eax,DWORD PTR [rbx]
   1400304d0:	or     eax,0xf031103
   1400304d5:	add    ecx,DWORD PTR [rsi]
   1400304d7:	add    ecx,DWORD PTR [rax]
   1400304d9:	add    edx,DWORD PTR [rdx]
   1400304db:	add    esp,DWORD PTR [rsi]
   1400304dd:	add    ebp,DWORD PTR [rdx]
   1400304df:	add    ebx,DWORD PTR [rax]
   1400304e1:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a0620ea
   1400304e7:	add    ebx,DWORD PTR [rcx]
   1400304e9:	add    edx,DWORD PTR [rbx]
   1400304eb:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x1690631f4
   1400304f1:	add    ebp,DWORD PTR [rbx]
   1400304f3:	add    esp,DWORD PTR [rdi]
   1400304f5:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e0625fe
   1400304fb:	add    esp,DWORD PTR [rdx]
   1400304fd:	add    ebp,DWORD PTR [rsi]
   1400304ff:	add    ebp,DWORD PTR [rdi]
   140030501:	add    ecx,DWORD PTR [rbx+rax*1]
   140030504:	or     al,BYTE PTR [rbx]
   140030506:	add    eax,DWORD PTR [rbx]
   140030508:	(bad)  
   140030509:	add    eax,DWORD PTR [rbx+rax*1]
   14003050c:	(bad)  
   14003050d:	add    eax,DWORD PTR [rip+0x17080103]        # 0x1570b0616
   140030513:	add    DWORD PTR [rsi],eax
   140030515:	or     BYTE PTR [rcx],ah
   140030517:	or     BYTE PTR [rax+rcx*1],ah
   14003051a:	and    eax,0x29081908
   14003051f:	or     BYTE PTR [rax+rcx*1],ch
   140030522:	adc    BYTE PTR [rax],cl
   140030524:	xor    cl,BYTE PTR [rax]
   140030526:	or     DWORD PTR [rax],ecx
   140030528:	adc    eax,DWORD PTR [rsi]
   14003052a:	push   rcx
   14003052b:	add    DWORD PTR [rbx],ecx
   14003052d:	or     BYTE PTR [rax],dl
   14003052f:	(bad)  
   140030530:	(bad)  
   140030531:	(bad)  
   140030532:	add    DWORD PTR [rsi],eax
   140030534:	add    eax,DWORD PTR [rsi]
   140030536:	add    al,BYTE PTR [rsi]
   140030538:	add    BYTE PTR [rdi],al
   14003053a:	add    DWORD PTR [rdi],eax
   14003053c:	or     BYTE PTR [rsi],al
   14003053e:	or     eax,0x1f062406
   140030543:	(bad)  
   140030544:	and    BYTE PTR [rsi],al
   140030546:	add    al,0x7
   140030548:	adc    eax,0x2041404
   14003054d:	add    al,0x0
   14003054f:	add    bh,bh
   140030551:	inc    DWORD PTR [rax]
   140030553:	add    BYTE PTR [rax],al
   140030555:	add    al,BYTE PTR [rax]
   140030557:	add    al,dh
   140030559:	cmc    
   14003055a:	add    al,0x5
   14003055c:	add    eax,DWORD PTR [rbx]
   14003055e:	add    eax,DWORD PTR [rbx]
   140030560:	cwde   
   140030561:	ret    
   140030562:	add    eax,DWORD PTR [rax+0x1]
   140030565:	add    BYTE PTR [rax],al
   140030567:	add    BYTE PTR [rax],dl
   140030569:	mov    BYTE PTR [rbx],0x40
   14003056c:	add    DWORD PTR [rax],eax
	...
   140030576:	add    BYTE PTR [rax],al
   140030578:	push   rbp
   140030579:	jae    0x1400305e0
   14003057b:	jb     0x14003059d
   14003057d:	push   rdi
   14003057e:	outs   dx,DWORD PTR ds:[rsi]
   14003057f:	jb     0x1400305e5
   140030581:	and    BYTE PTR [rcx+rbp*2+0x73],cl
   140030585:	je     0x1400305fa
   140030587:	pop    rsp
   140030588:	and    eax,0x73
   14003058d:	add    BYTE PTR [rax],al
   14003058f:	add    al,dl
   140030591:	mov    DWORD PTR [rbx],0x140
   140030597:	add    BYTE PTR [rax],dl
   140030599:	leave  
   14003059a:	add    eax,DWORD PTR [rax+0x1]
   14003059d:	add    BYTE PTR [rax],al
   14003059f:	add    al,dl
   1400305a1:	ret    
   1400305a2:	add    eax,DWORD PTR [rax+0x1]
   1400305a5:	add    BYTE PTR [rax],al
   1400305a7:	add    BYTE PTR [rbp+rcx*2+0x61],bl
   1400305ab:	imul   ebp,DWORD PTR [rsi+0x20],0x64726f57
   1400305b2:	and    BYTE PTR [rcx+rbp*2+0x73],cl
   1400305b6:	je     0x14003062b
   1400305b8:	pop    rsp
   1400305b9:	and    eax,0x73
   1400305be:	add    BYTE PTR [rax],al
   1400305c0:	mov    al,0xc4
   1400305c2:	add    eax,DWORD PTR [rax+0x1]
   1400305c5:	add    BYTE PTR [rax],al
   1400305c7:	add    BYTE PTR [rax-0x3b],ah
   1400305ca:	add    eax,DWORD PTR [rax+0x1]
   1400305cd:	add    BYTE PTR [rax],al
   1400305cf:	add    BYTE PTR [rax],al
   1400305d1:	add    BYTE PTR [rax],al
   1400305d3:	add    BYTE PTR [rax+rax*1],al
   1400305d6:	add    BYTE PTR [rax],al
   1400305d8:	or     BYTE PTR [rax],al
   1400305da:	add    BYTE PTR [rax],al
   1400305dc:	or     al,0x0
   1400305de:	add    BYTE PTR [rax],al
   1400305e0:	and    BYTE PTR [rcx],dl
   1400305e2:	add    BYTE PTR [rax+0x1],al
   1400305e5:	add    BYTE PTR [rax],al
   1400305e7:	add    BYTE PTR [rax],dh
   1400305e9:	adc    DWORD PTR [rax],eax
   1400305eb:	rex add DWORD PTR [rax],eax
   1400305ee:	add    BYTE PTR [rax],al
   1400305f0:	add    al,0x0
   1400305f2:	add    BYTE PTR [rax],al
   1400305f4:	or     BYTE PTR [rax],al
   1400305f6:	add    BYTE PTR [rax],al
   1400305f8:	or     al,0x0
   1400305fa:	add    BYTE PTR [rax],al
   1400305fc:	add    BYTE PTR [rax],al
   1400305fe:	add    BYTE PTR [rax],al
   140030600:	xor    BYTE PTR [rcx],dl
   140030602:	add    BYTE PTR [rax+0x1],al
   140030605:	add    BYTE PTR [rax],al
   140030607:	add    BYTE PTR [rax],ah
   140030609:	adc    DWORD PTR [rax],eax
   14003060b:	rex add DWORD PTR [rax],eax
   14003060e:	add    BYTE PTR [rax],al
   140030610:	or     BYTE PTR [rax],al
   140030612:	add    BYTE PTR [rax],al
   140030614:	or     al,0x0
   140030616:	add    BYTE PTR [rax],al
   140030618:	add    BYTE PTR [rax],al
   14003061a:	add    BYTE PTR [rax],al
   14003061c:	add    al,0x0
   14003061e:	add    BYTE PTR [rax],al
   140030620:	and    BYTE PTR [rcx],dl
   140030622:	add    BYTE PTR [rax+0x1],al
   140030625:	add    BYTE PTR [rax],al
   140030627:	add    BYTE PTR [rax],dh
   140030629:	adc    DWORD PTR [rax],eax
   14003062b:	rex add DWORD PTR [rax],eax
   14003062e:	add    BYTE PTR [rax],al
   140030630:	or     al,0x0
   140030632:	add    BYTE PTR [rax],al
   140030634:	add    BYTE PTR [rax],al
   140030636:	add    BYTE PTR [rax],al
   140030638:	add    al,0x0
   14003063a:	add    BYTE PTR [rax],al
   14003063c:	or     BYTE PTR [rax],al
   14003063e:	add    BYTE PTR [rax],al
   140030640:	xor    BYTE PTR [rcx],dl
   140030642:	add    BYTE PTR [rax+0x1],al
   140030645:	add    BYTE PTR [rax],al
   140030647:	add    BYTE PTR [rax],ah
   140030649:	adc    DWORD PTR [rax],eax
   14003064b:	rex add DWORD PTR [rax],eax
   14003064e:	add    BYTE PTR [rax],al
   140030650:	or     BYTE PTR [rax],al
   140030652:	add    BYTE PTR [rax],al
   140030654:	add    al,0x0
   140030656:	add    BYTE PTR [rax],al
   140030658:	add    BYTE PTR [rax],al
   14003065a:	add    BYTE PTR [rax],al
   14003065c:	or     al,0x0
   14003065e:	add    BYTE PTR [rax],al
   140030660:	and    BYTE PTR [rcx],dl
   140030662:	add    BYTE PTR [rax+0x1],al
   140030665:	add    BYTE PTR [rax],al
   140030667:	add    BYTE PTR [rax],dh
   140030669:	adc    DWORD PTR [rax],eax
   14003066b:	rex add DWORD PTR [rax],eax
   14003066e:	add    BYTE PTR [rax],al
   140030670:	or     al,0x0
   140030672:	add    BYTE PTR [rax],al
   140030674:	or     BYTE PTR [rax],al
   140030676:	add    BYTE PTR [rax],al
   140030678:	add    al,0x0
   14003067a:	add    BYTE PTR [rax],al
   14003067c:	add    BYTE PTR [rax],al
   14003067e:	add    BYTE PTR [rax],al
   140030680:	xor    BYTE PTR [rcx],dl
   140030682:	add    BYTE PTR [rax+0x1],al
   140030685:	add    BYTE PTR [rax],al
   140030687:	add    BYTE PTR [rax],ah
   140030689:	adc    DWORD PTR [rax],eax
   14003068b:	rex add DWORD PTR [rax],eax
   14003068e:	add    BYTE PTR [rax],al
   140030690:	add    BYTE PTR [rax],al
   140030692:	add    BYTE PTR [rax],al
   140030694:	or     al,0x0
   140030696:	add    BYTE PTR [rax],al
   140030698:	or     BYTE PTR [rax],al
   14003069a:	add    BYTE PTR [rax],al
   14003069c:	add    al,0x0
   14003069e:	add    BYTE PTR [rax],al
   1400306a0:	and    BYTE PTR [rcx],dl
   1400306a2:	add    BYTE PTR [rax+0x1],al
   1400306a5:	add    BYTE PTR [rax],al
   1400306a7:	add    BYTE PTR [rax],dh
   1400306a9:	adc    DWORD PTR [rax],eax
   1400306ab:	rex add DWORD PTR [rax],eax
   1400306ae:	add    BYTE PTR [rax],al
   1400306b0:	add    al,0x0
   1400306b2:	add    BYTE PTR [rax],al
   1400306b4:	add    BYTE PTR [rax],al
   1400306b6:	add    BYTE PTR [rax],al
   1400306b8:	or     al,0x0
   1400306ba:	add    BYTE PTR [rax],al
   1400306bc:	or     BYTE PTR [rax],al
   1400306be:	add    BYTE PTR [rax],al
   1400306c0:	xor    BYTE PTR [rcx],dl
   1400306c2:	add    BYTE PTR [rax+0x1],al
   1400306c5:	add    BYTE PTR [rax],al
   1400306c7:	add    BYTE PTR [rax],ah
   1400306c9:	adc    DWORD PTR [rax],eax
   1400306cb:	rex add DWORD PTR [rax],eax
   1400306ce:	add    BYTE PTR [rax],al
   1400306d0:	or     BYTE PTR [rax],al
   1400306d2:	add    BYTE PTR [rax],al
   1400306d4:	or     al,0x0
   1400306d6:	add    BYTE PTR [rax],al
   1400306d8:	add    BYTE PTR [rax],al
   1400306da:	add    BYTE PTR [rax],al
   1400306dc:	add    al,0x0
   1400306de:	add    BYTE PTR [rax],al
   1400306e0:	and    BYTE PTR [rcx],dl
   1400306e2:	add    BYTE PTR [rax+0x1],al
   1400306e5:	add    BYTE PTR [rax],al
   1400306e7:	add    BYTE PTR [rax],dh
   1400306e9:	adc    DWORD PTR [rax],eax
   1400306eb:	rex add DWORD PTR [rax],eax
   1400306ee:	add    BYTE PTR [rax],al
   1400306f0:	or     al,0x0
   1400306f2:	add    BYTE PTR [rax],al
   1400306f4:	add    BYTE PTR [rax],al
   1400306f6:	add    BYTE PTR [rax],al
   1400306f8:	add    al,0x0
   1400306fa:	add    BYTE PTR [rax],al
   1400306fc:	or     BYTE PTR [rax],al
   1400306fe:	add    BYTE PTR [rax],al
   140030700:	xor    BYTE PTR [rcx],dl
   140030702:	add    BYTE PTR [rax+0x1],al
   140030705:	add    BYTE PTR [rax],al
   140030707:	add    BYTE PTR [rax],ah
   140030709:	adc    DWORD PTR [rax],eax
   14003070b:	rex add DWORD PTR [rax],eax
   14003070e:	add    BYTE PTR [rax],al
   140030710:	add    BYTE PTR [rax],al
   140030712:	add    BYTE PTR [rax],al
   140030714:	add    al,0x0
   140030716:	add    BYTE PTR [rax],al
   140030718:	or     BYTE PTR [rax],al
   14003071a:	add    BYTE PTR [rax],al
   14003071c:	or     al,0x0
   14003071e:	add    BYTE PTR [rax],al
   140030720:	and    BYTE PTR [rcx],dl
   140030722:	add    BYTE PTR [rax+0x1],al
   140030725:	add    BYTE PTR [rax],al
   140030727:	add    BYTE PTR [rax],dh
   140030729:	adc    DWORD PTR [rax],eax
   14003072b:	rex add DWORD PTR [rax],eax
   14003072e:	add    BYTE PTR [rax],al
   140030730:	add    al,0x0
   140030732:	add    BYTE PTR [rax],al
   140030734:	or     BYTE PTR [rax],al
   140030736:	add    BYTE PTR [rax],al
   140030738:	or     al,0x0
   14003073a:	add    BYTE PTR [rax],al
   14003073c:	add    BYTE PTR [rax],al
   14003073e:	add    BYTE PTR [rax],al
   140030740:	xor    BYTE PTR [rcx],dl
   140030742:	add    BYTE PTR [rax+0x1],al
   140030745:	add    BYTE PTR [rax],al
   140030747:	add    BYTE PTR [rax],ah
   140030749:	adc    DWORD PTR [rax],eax
   14003074b:	rex add DWORD PTR [rax],eax
   14003074e:	add    BYTE PTR [rax],al
   140030750:	add    BYTE PTR [rax],al
   140030752:	add    BYTE PTR [rax],al
   140030754:	add    al,0x0
   140030756:	add    BYTE PTR [rax],al
   140030758:	or     BYTE PTR [rax],al
   14003075a:	add    BYTE PTR [rax],al
   14003075c:	or     al,0x0
   14003075e:	add    BYTE PTR [rax],al
   140030760:	and    BYTE PTR [rcx],dl
   140030762:	add    BYTE PTR [rax+0x1],al
   140030765:	add    BYTE PTR [rax],al
   140030767:	add    BYTE PTR [rax],dh
   140030769:	adc    DWORD PTR [rax],eax
   14003076b:	rex add DWORD PTR [rax],eax
   14003076e:	add    BYTE PTR [rax],al
   140030770:	add    al,0x0
   140030772:	add    BYTE PTR [rax],al
   140030774:	or     BYTE PTR [rax],al
   140030776:	add    BYTE PTR [rax],al
   140030778:	or     al,0x0
   14003077a:	add    BYTE PTR [rax],al
   14003077c:	add    BYTE PTR [rax],al
   14003077e:	add    BYTE PTR [rax],al
   140030780:	xor    BYTE PTR [rcx],dl
   140030782:	add    BYTE PTR [rax+0x1],al
   140030785:	add    BYTE PTR [rax],al
   140030787:	add    BYTE PTR [rax],ah
   140030789:	adc    DWORD PTR [rax],eax
   14003078b:	rex add DWORD PTR [rax],eax
   14003078e:	add    BYTE PTR [rax],al
   140030790:	or     BYTE PTR [rax],al
   140030792:	add    BYTE PTR [rax],al
   140030794:	or     al,0x0
   140030796:	add    BYTE PTR [rax],al
   140030798:	add    BYTE PTR [rax],al
   14003079a:	add    BYTE PTR [rax],al
   14003079c:	add    al,0x0
   14003079e:	add    BYTE PTR [rax],al
   1400307a0:	and    BYTE PTR [rcx],dl
   1400307a2:	add    BYTE PTR [rax+0x1],al
   1400307a5:	add    BYTE PTR [rax],al
   1400307a7:	add    BYTE PTR [rax],dh
   1400307a9:	adc    DWORD PTR [rax],eax
   1400307ab:	rex add DWORD PTR [rax],eax
   1400307ae:	add    BYTE PTR [rax],al
   1400307b0:	or     al,0x0
   1400307b2:	add    BYTE PTR [rax],al
   1400307b4:	add    BYTE PTR [rax],al
   1400307b6:	add    BYTE PTR [rax],al
   1400307b8:	add    al,0x0
   1400307ba:	add    BYTE PTR [rax],al
   1400307bc:	or     BYTE PTR [rax],al
   1400307be:	add    BYTE PTR [rax],al
   1400307c0:	xor    BYTE PTR [rcx],dl
   1400307c2:	add    BYTE PTR [rax+0x1],al
   1400307c5:	add    BYTE PTR [rax],al
   1400307c7:	add    BYTE PTR [rax],ah
   1400307c9:	adc    DWORD PTR [rax],eax
   1400307cb:	rex add DWORD PTR [rax],eax
   1400307ce:	add    BYTE PTR [rax],al
   1400307d0:	or     BYTE PTR [rax],al
   1400307d2:	add    BYTE PTR [rax],al
   1400307d4:	add    al,0x0
   1400307d6:	add    BYTE PTR [rax],al
   1400307d8:	add    BYTE PTR [rax],al
   1400307da:	add    BYTE PTR [rax],al
   1400307dc:	or     al,0x0
   1400307de:	add    BYTE PTR [rax],al
   1400307e0:	and    BYTE PTR [rcx],dl
   1400307e2:	add    BYTE PTR [rax+0x1],al
   1400307e5:	add    BYTE PTR [rax],al
   1400307e7:	add    BYTE PTR [rax],dh
   1400307e9:	adc    DWORD PTR [rax],eax
   1400307eb:	rex add DWORD PTR [rax],eax
   1400307ee:	add    BYTE PTR [rax],al
   1400307f0:	or     al,0x0
   1400307f2:	add    BYTE PTR [rax],al
   1400307f4:	or     BYTE PTR [rax],al
   1400307f6:	add    BYTE PTR [rax],al
   1400307f8:	add    al,0x0
   1400307fa:	add    BYTE PTR [rax],al
   1400307fc:	add    BYTE PTR [rax],al
   1400307fe:	add    BYTE PTR [rax],al
   140030800:	xor    BYTE PTR [rcx],dl
   140030802:	add    BYTE PTR [rax+0x1],al
   140030805:	add    BYTE PTR [rax],al
   140030807:	add    BYTE PTR [rax],ah
   140030809:	adc    DWORD PTR [rax],eax
   14003080b:	rex add DWORD PTR [rax],eax
   14003080e:	add    BYTE PTR [rax],al
   140030810:	add    BYTE PTR [rax],al
   140030812:	add    BYTE PTR [rax],al
   140030814:	or     al,0x0
   140030816:	add    BYTE PTR [rax],al
   140030818:	or     BYTE PTR [rax],al
   14003081a:	add    BYTE PTR [rax],al
   14003081c:	add    al,0x0
   14003081e:	add    BYTE PTR [rax],al
   140030820:	and    BYTE PTR [rcx],dl
   140030822:	add    BYTE PTR [rax+0x1],al
   140030825:	add    BYTE PTR [rax],al
   140030827:	add    BYTE PTR [rax],dh
   140030829:	adc    DWORD PTR [rax],eax
   14003082b:	rex add DWORD PTR [rax],eax
   14003082e:	add    BYTE PTR [rax],al
   140030830:	add    al,0x0
   140030832:	add    BYTE PTR [rax],al
   140030834:	add    BYTE PTR [rax],al
   140030836:	add    BYTE PTR [rax],al
   140030838:	or     al,0x0
   14003083a:	add    BYTE PTR [rax],al
   14003083c:	or     BYTE PTR [rax],al
   14003083e:	add    BYTE PTR [rax],al
   140030840:	xor    BYTE PTR [rcx],dl
   140030842:	add    BYTE PTR [rax+0x1],al
   140030845:	add    BYTE PTR [rax],al
   140030847:	add    BYTE PTR [rax],ah
   140030849:	adc    DWORD PTR [rax],eax
   14003084b:	rex add DWORD PTR [rax],eax
   14003084e:	add    BYTE PTR [rax],al
   140030850:	or     BYTE PTR [rax],al
   140030852:	add    BYTE PTR [rax],al
   140030854:	or     al,0x0
   140030856:	add    BYTE PTR [rax],al
   140030858:	add    BYTE PTR [rax],al
   14003085a:	add    BYTE PTR [rax],al
   14003085c:	add    al,0x0
   14003085e:	add    BYTE PTR [rax],al
   140030860:	and    BYTE PTR [rcx],dl
   140030862:	add    BYTE PTR [rax+0x1],al
   140030865:	add    BYTE PTR [rax],al
   140030867:	add    BYTE PTR [rax],dh
   140030869:	adc    DWORD PTR [rax],eax
   14003086b:	rex add DWORD PTR [rax],eax
   14003086e:	add    BYTE PTR [rax],al
   140030870:	or     al,0x0
   140030872:	add    BYTE PTR [rax],al
   140030874:	add    BYTE PTR [rax],al
   140030876:	add    BYTE PTR [rax],al
   140030878:	add    al,0x0
   14003087a:	add    BYTE PTR [rax],al
   14003087c:	or     BYTE PTR [rax],al
   14003087e:	add    BYTE PTR [rax],al
   140030880:	xor    BYTE PTR [rcx],dl
   140030882:	add    BYTE PTR [rax+0x1],al
   140030885:	add    BYTE PTR [rax],al
   140030887:	add    BYTE PTR [rax],ah
   140030889:	adc    DWORD PTR [rax],eax
   14003088b:	rex add DWORD PTR [rax],eax
   14003088e:	add    BYTE PTR [rax],al
   140030890:	add    BYTE PTR [rax],al
   140030892:	add    BYTE PTR [rax],al
   140030894:	add    al,0x0
   140030896:	add    BYTE PTR [rax],al
   140030898:	or     BYTE PTR [rax],al
   14003089a:	add    BYTE PTR [rax],al
   14003089c:	or     al,0x0
   14003089e:	add    BYTE PTR [rax],al
   1400308a0:	and    BYTE PTR [rcx],dl
   1400308a2:	add    BYTE PTR [rax+0x1],al
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rax],dh
   1400308a9:	adc    DWORD PTR [rax],eax
   1400308ab:	rex add DWORD PTR [rax],eax
   1400308ae:	add    BYTE PTR [rax],al
   1400308b0:	add    al,0x0
   1400308b2:	add    BYTE PTR [rax],al
   1400308b4:	or     BYTE PTR [rax],al
   1400308b6:	add    BYTE PTR [rax],al
   1400308b8:	or     al,0x0
   1400308ba:	add    BYTE PTR [rax],al
   1400308bc:	add    BYTE PTR [rax],al
   1400308be:	add    BYTE PTR [rax],al
   1400308c0:	xor    BYTE PTR [rcx],dl
   1400308c2:	add    BYTE PTR [rax+0x1],al
   1400308c5:	add    BYTE PTR [rax],al
   1400308c7:	add    BYTE PTR [rax],ah
   1400308c9:	adc    DWORD PTR [rax],eax
   1400308cb:	rex add DWORD PTR [rax],eax
   1400308ce:	add    BYTE PTR [rax],al
   1400308d0:	add    BYTE PTR [rax],al
   1400308d2:	add    BYTE PTR [rax],al
   1400308d4:	add    al,0x0
   1400308d6:	add    BYTE PTR [rax],al
   1400308d8:	or     BYTE PTR [rax],al
   1400308da:	add    BYTE PTR [rax],al
   1400308dc:	or     al,0x0
   1400308de:	add    BYTE PTR [rax],al
   1400308e0:	and    BYTE PTR [rcx],dl
   1400308e2:	add    BYTE PTR [rax+0x1],al
   1400308e5:	add    BYTE PTR [rax],al
   1400308e7:	add    BYTE PTR [rax],dh
   1400308e9:	adc    DWORD PTR [rax],eax
   1400308eb:	rex add DWORD PTR [rax],eax
   1400308ee:	add    BYTE PTR [rax],al
   1400308f0:	add    al,0x0
   1400308f2:	add    BYTE PTR [rax],al
   1400308f4:	or     BYTE PTR [rax],al
   1400308f6:	add    BYTE PTR [rax],al
   1400308f8:	or     al,0x0
   1400308fa:	add    BYTE PTR [rax],al
   1400308fc:	add    BYTE PTR [rax],al
   1400308fe:	add    BYTE PTR [rax],al
   140030900:	xor    BYTE PTR [rcx],dl
   140030902:	add    BYTE PTR [rax+0x1],al
   140030905:	add    BYTE PTR [rax],al
   140030907:	add    BYTE PTR [rax],ah
   140030909:	adc    DWORD PTR [rax],eax
   14003090b:	rex add DWORD PTR [rax],eax
   14003090e:	add    BYTE PTR [rax],al
   140030910:	or     BYTE PTR [rax],al
   140030912:	add    BYTE PTR [rax],al
   140030914:	or     al,0x0
   140030916:	add    BYTE PTR [rax],al
   140030918:	add    BYTE PTR [rax],al
   14003091a:	add    BYTE PTR [rax],al
   14003091c:	add    al,0x0
   14003091e:	add    BYTE PTR [rax],al
   140030920:	and    BYTE PTR [rcx],dl
   140030922:	add    BYTE PTR [rax+0x1],al
   140030925:	add    BYTE PTR [rax],al
   140030927:	add    BYTE PTR [rax],dh
   140030929:	adc    DWORD PTR [rax],eax
   14003092b:	rex add DWORD PTR [rax],eax
   14003092e:	add    BYTE PTR [rax],al
   140030930:	or     al,0x0
   140030932:	add    BYTE PTR [rax],al
   140030934:	add    BYTE PTR [rax],al
   140030936:	add    BYTE PTR [rax],al
   140030938:	add    al,0x0
   14003093a:	add    BYTE PTR [rax],al
   14003093c:	or     BYTE PTR [rax],al
   14003093e:	add    BYTE PTR [rax],al
   140030940:	xor    BYTE PTR [rcx],dl
   140030942:	add    BYTE PTR [rax+0x1],al
   140030945:	add    BYTE PTR [rax],al
   140030947:	add    BYTE PTR [rax],ah
   140030949:	adc    DWORD PTR [rax],eax
   14003094b:	rex add DWORD PTR [rax],eax
   14003094e:	add    BYTE PTR [rax],al
   140030950:	or     BYTE PTR [rax],al
   140030952:	add    BYTE PTR [rax],al
   140030954:	add    al,0x0
   140030956:	add    BYTE PTR [rax],al
   140030958:	add    BYTE PTR [rax],al
   14003095a:	add    BYTE PTR [rax],al
   14003095c:	or     al,0x0
   14003095e:	add    BYTE PTR [rax],al
   140030960:	and    BYTE PTR [rcx],dl
   140030962:	add    BYTE PTR [rax+0x1],al
   140030965:	add    BYTE PTR [rax],al
   140030967:	add    BYTE PTR [rax],dh
   140030969:	adc    DWORD PTR [rax],eax
   14003096b:	rex add DWORD PTR [rax],eax
   14003096e:	add    BYTE PTR [rax],al
   140030970:	or     al,0x0
   140030972:	add    BYTE PTR [rax],al
   140030974:	or     BYTE PTR [rax],al
   140030976:	add    BYTE PTR [rax],al
   140030978:	add    al,0x0
   14003097a:	add    BYTE PTR [rax],al
   14003097c:	add    BYTE PTR [rax],al
   14003097e:	add    BYTE PTR [rax],al
   140030980:	xor    BYTE PTR [rcx],dl
   140030982:	add    BYTE PTR [rax+0x1],al
   140030985:	add    BYTE PTR [rax],al
   140030987:	add    BYTE PTR [rax],ah
   140030989:	adc    DWORD PTR [rax],eax
   14003098b:	rex add DWORD PTR [rax],eax
   14003098e:	add    BYTE PTR [rax],al
   140030990:	add    BYTE PTR [rax],al
   140030992:	add    BYTE PTR [rax],al
   140030994:	or     al,0x0
   140030996:	add    BYTE PTR [rax],al
   140030998:	or     BYTE PTR [rax],al
   14003099a:	add    BYTE PTR [rax],al
   14003099c:	add    al,0x0
   14003099e:	add    BYTE PTR [rax],al
   1400309a0:	and    BYTE PTR [rcx],dl
   1400309a2:	add    BYTE PTR [rax+0x1],al
   1400309a5:	add    BYTE PTR [rax],al
   1400309a7:	add    BYTE PTR [rax],dh
   1400309a9:	adc    DWORD PTR [rax],eax
   1400309ab:	rex add DWORD PTR [rax],eax
   1400309ae:	add    BYTE PTR [rax],al
   1400309b0:	add    al,0x0
   1400309b2:	add    BYTE PTR [rax],al
   1400309b4:	add    BYTE PTR [rax],al
   1400309b6:	add    BYTE PTR [rax],al
   1400309b8:	or     al,0x0
   1400309ba:	add    BYTE PTR [rax],al
   1400309bc:	or     BYTE PTR [rax],al
   1400309be:	add    BYTE PTR [rax],al
   1400309c0:	xor    BYTE PTR [rcx],dl
   1400309c2:	add    BYTE PTR [rax+0x1],al
   1400309c5:	add    BYTE PTR [rax],al
   1400309c7:	add    BYTE PTR [rax],ah
   1400309c9:	adc    DWORD PTR [rax],eax
   1400309cb:	rex add DWORD PTR [rax],eax
   1400309ce:	add    BYTE PTR [rax],al
   1400309d0:	or     BYTE PTR [rax],al
   1400309d2:	add    BYTE PTR [rax],al
   1400309d4:	or     al,0x0
   1400309d6:	add    BYTE PTR [rax],al
   1400309d8:	add    BYTE PTR [rax],al
   1400309da:	add    BYTE PTR [rax],al
   1400309dc:	add    al,0x0
   1400309de:	add    BYTE PTR [rax],al
   1400309e0:	and    BYTE PTR [rcx],dl
   1400309e2:	add    BYTE PTR [rax+0x1],al
   1400309e5:	add    BYTE PTR [rax],al
   1400309e7:	add    BYTE PTR [rax],dh
   1400309e9:	adc    DWORD PTR [rax],eax
   1400309eb:	rex add DWORD PTR [rax],eax
   1400309ee:	add    BYTE PTR [rax],al
   1400309f0:	or     al,0x0
   1400309f2:	add    BYTE PTR [rax],al
   1400309f4:	add    BYTE PTR [rax],al
   1400309f6:	add    BYTE PTR [rax],al
   1400309f8:	add    al,0x0
   1400309fa:	add    BYTE PTR [rax],al
   1400309fc:	or     BYTE PTR [rax],al
   1400309fe:	add    BYTE PTR [rax],al
   140030a00:	xor    BYTE PTR [rcx],dl
   140030a02:	add    BYTE PTR [rax+0x1],al
   140030a05:	add    BYTE PTR [rax],al
   140030a07:	add    BYTE PTR [rax],ah
   140030a09:	adc    DWORD PTR [rax],eax
   140030a0b:	rex add DWORD PTR [rax],eax
   140030a0e:	add    BYTE PTR [rax],al
   140030a10:	add    BYTE PTR [rax],al
   140030a12:	add    BYTE PTR [rax],al
   140030a14:	add    al,0x0
   140030a16:	add    BYTE PTR [rax],al
   140030a18:	or     BYTE PTR [rax],al
   140030a1a:	add    BYTE PTR [rax],al
   140030a1c:	or     al,0x0
   140030a1e:	add    BYTE PTR [rax],al
   140030a20:	and    BYTE PTR [rcx],dl
   140030a22:	add    BYTE PTR [rax+0x1],al
   140030a25:	add    BYTE PTR [rax],al
   140030a27:	add    BYTE PTR [rax],dh
   140030a29:	adc    DWORD PTR [rax],eax
   140030a2b:	rex add DWORD PTR [rax],eax
   140030a2e:	add    BYTE PTR [rax],al
   140030a30:	add    al,0x0
   140030a32:	add    BYTE PTR [rax],al
   140030a34:	or     BYTE PTR [rax],al
   140030a36:	add    BYTE PTR [rax],al
   140030a38:	or     al,0x0
   140030a3a:	add    BYTE PTR [rax],al
   140030a3c:	add    BYTE PTR [rax],al
   140030a3e:	add    BYTE PTR [rax],al
   140030a40:	xor    BYTE PTR [rcx],dl
   140030a42:	add    BYTE PTR [rax+0x1],al
   140030a45:	add    BYTE PTR [rax],al
   140030a47:	add    BYTE PTR [rax],ah
   140030a49:	adc    DWORD PTR [rax],eax
   140030a4b:	rex add DWORD PTR [rax],eax
   140030a4e:	add    BYTE PTR [rax],al
   140030a50:	add    BYTE PTR [rax],al
   140030a52:	add    BYTE PTR [rax],al
   140030a54:	add    al,0x0
   140030a56:	add    BYTE PTR [rax],al
   140030a58:	or     BYTE PTR [rax],al
   140030a5a:	add    BYTE PTR [rax],al
   140030a5c:	or     al,0x0
   140030a5e:	add    BYTE PTR [rax],al
   140030a60:	and    BYTE PTR [rcx],dl
   140030a62:	add    BYTE PTR [rax+0x1],al
   140030a65:	add    BYTE PTR [rax],al
   140030a67:	add    BYTE PTR [rax],dh
   140030a69:	adc    DWORD PTR [rax],eax
   140030a6b:	rex add DWORD PTR [rax],eax
   140030a6e:	add    BYTE PTR [rax],al
   140030a70:	add    al,0x0
   140030a72:	add    BYTE PTR [rax],al
   140030a74:	or     BYTE PTR [rax],al
   140030a76:	add    BYTE PTR [rax],al
   140030a78:	or     al,0x0
   140030a7a:	add    BYTE PTR [rax],al
   140030a7c:	add    BYTE PTR [rax],al
   140030a7e:	add    BYTE PTR [rax],al
   140030a80:	xor    BYTE PTR [rcx],dl
   140030a82:	add    BYTE PTR [rax+0x1],al
   140030a85:	add    BYTE PTR [rax],al
   140030a87:	add    BYTE PTR [rax],ah
   140030a89:	adc    DWORD PTR [rax],eax
   140030a8b:	rex add DWORD PTR [rax],eax
   140030a8e:	add    BYTE PTR [rax],al
   140030a90:	or     BYTE PTR [rax],al
   140030a92:	add    BYTE PTR [rax],al
   140030a94:	or     al,0x0
   140030a96:	add    BYTE PTR [rax],al
   140030a98:	add    BYTE PTR [rax],al
   140030a9a:	add    BYTE PTR [rax],al
   140030a9c:	add    al,0x0
   140030a9e:	add    BYTE PTR [rax],al
   140030aa0:	and    BYTE PTR [rcx],dl
   140030aa2:	add    BYTE PTR [rax+0x1],al
   140030aa5:	add    BYTE PTR [rax],al
   140030aa7:	add    BYTE PTR [rax],dh
   140030aa9:	adc    DWORD PTR [rax],eax
   140030aab:	rex add DWORD PTR [rax],eax
   140030aae:	add    BYTE PTR [rax],al
   140030ab0:	or     al,0x0
   140030ab2:	add    BYTE PTR [rax],al
   140030ab4:	add    BYTE PTR [rax],al
   140030ab6:	add    BYTE PTR [rax],al
   140030ab8:	add    al,0x0
   140030aba:	add    BYTE PTR [rax],al
   140030abc:	or     BYTE PTR [rax],al
   140030abe:	add    BYTE PTR [rax],al
   140030ac0:	xor    BYTE PTR [rcx],dl
   140030ac2:	add    BYTE PTR [rax+0x1],al
   140030ac5:	add    BYTE PTR [rax],al
   140030ac7:	add    BYTE PTR [rax],ah
   140030ac9:	adc    DWORD PTR [rax],eax
   140030acb:	rex add DWORD PTR [rax],eax
   140030ace:	add    BYTE PTR [rax],al
   140030ad0:	or     BYTE PTR [rax],al
   140030ad2:	add    BYTE PTR [rax],al
   140030ad4:	add    al,0x0
   140030ad6:	add    BYTE PTR [rax],al
   140030ad8:	add    BYTE PTR [rax],al
   140030ada:	add    BYTE PTR [rax],al
   140030adc:	or     al,0x0
   140030ade:	add    BYTE PTR [rax],al
   140030ae0:	and    BYTE PTR [rcx],dl
   140030ae2:	add    BYTE PTR [rax+0x1],al
   140030ae5:	add    BYTE PTR [rax],al
   140030ae7:	add    BYTE PTR [rax],dh
   140030ae9:	adc    DWORD PTR [rax],eax
   140030aeb:	rex add DWORD PTR [rax],eax
   140030aee:	add    BYTE PTR [rax],al
   140030af0:	or     al,0x0
   140030af2:	add    BYTE PTR [rax],al
   140030af4:	or     BYTE PTR [rax],al
   140030af6:	add    BYTE PTR [rax],al
   140030af8:	add    al,0x0
   140030afa:	add    BYTE PTR [rax],al
   140030afc:	add    BYTE PTR [rax],al
   140030afe:	add    BYTE PTR [rax],al
   140030b00:	xor    BYTE PTR [rcx],dl
   140030b02:	add    BYTE PTR [rax+0x1],al
   140030b05:	add    BYTE PTR [rax],al
   140030b07:	add    BYTE PTR [rax],ah
   140030b09:	adc    DWORD PTR [rax],eax
   140030b0b:	rex add DWORD PTR [rax],eax
   140030b0e:	add    BYTE PTR [rax],al
   140030b10:	add    BYTE PTR [rax],al
   140030b12:	add    BYTE PTR [rax],al
   140030b14:	or     al,0x0
   140030b16:	add    BYTE PTR [rax],al
   140030b18:	or     BYTE PTR [rax],al
   140030b1a:	add    BYTE PTR [rax],al
   140030b1c:	add    al,0x0
   140030b1e:	add    BYTE PTR [rax],al
   140030b20:	and    BYTE PTR [rcx],dl
   140030b22:	add    BYTE PTR [rax+0x1],al
   140030b25:	add    BYTE PTR [rax],al
   140030b27:	add    BYTE PTR [rax],dh
   140030b29:	adc    DWORD PTR [rax],eax
   140030b2b:	rex add DWORD PTR [rax],eax
   140030b2e:	add    BYTE PTR [rax],al
   140030b30:	add    al,0x0
   140030b32:	add    BYTE PTR [rax],al
   140030b34:	add    BYTE PTR [rax],al
   140030b36:	add    BYTE PTR [rax],al
   140030b38:	or     al,0x0
   140030b3a:	add    BYTE PTR [rax],al
   140030b3c:	or     BYTE PTR [rax],al
   140030b3e:	add    BYTE PTR [rax],al
   140030b40:	xor    BYTE PTR [rcx],dl
   140030b42:	add    BYTE PTR [rax+0x1],al
   140030b45:	add    BYTE PTR [rax],al
   140030b47:	add    BYTE PTR [rax],ah
   140030b49:	adc    DWORD PTR [rax],eax
   140030b4b:	rex add DWORD PTR [rax],eax
   140030b4e:	add    BYTE PTR [rax],al
   140030b50:	or     BYTE PTR [rax],al
   140030b52:	add    BYTE PTR [rax],al
   140030b54:	or     al,0x0
   140030b56:	add    BYTE PTR [rax],al
   140030b58:	add    BYTE PTR [rax],al
   140030b5a:	add    BYTE PTR [rax],al
   140030b5c:	add    al,0x0
   140030b5e:	add    BYTE PTR [rax],al
   140030b60:	and    BYTE PTR [rcx],dl
   140030b62:	add    BYTE PTR [rax+0x1],al
   140030b65:	add    BYTE PTR [rax],al
   140030b67:	add    BYTE PTR [rax],dh
   140030b69:	adc    DWORD PTR [rax],eax
   140030b6b:	rex add DWORD PTR [rax],eax
   140030b6e:	add    BYTE PTR [rax],al
   140030b70:	or     al,0x0
   140030b72:	add    BYTE PTR [rax],al
   140030b74:	add    BYTE PTR [rax],al
   140030b76:	add    BYTE PTR [rax],al
   140030b78:	add    al,0x0
   140030b7a:	add    BYTE PTR [rax],al
   140030b7c:	or     BYTE PTR [rax],al
   140030b7e:	add    BYTE PTR [rax],al
   140030b80:	xor    BYTE PTR [rcx],dl
   140030b82:	add    BYTE PTR [rax+0x1],al
   140030b85:	add    BYTE PTR [rax],al
   140030b87:	add    BYTE PTR [rax],ah
   140030b89:	adc    DWORD PTR [rax],eax
   140030b8b:	rex add DWORD PTR [rax],eax
   140030b8e:	add    BYTE PTR [rax],al
   140030b90:	add    BYTE PTR [rax],al
   140030b92:	add    BYTE PTR [rax],al
   140030b94:	add    al,0x0
   140030b96:	add    BYTE PTR [rax],al
   140030b98:	or     BYTE PTR [rax],al
   140030b9a:	add    BYTE PTR [rax],al
   140030b9c:	or     al,0x0
   140030b9e:	add    BYTE PTR [rax],al
   140030ba0:	and    BYTE PTR [rcx],dl
   140030ba2:	add    BYTE PTR [rax+0x1],al
   140030ba5:	add    BYTE PTR [rax],al
   140030ba7:	add    BYTE PTR [rax],dh
   140030ba9:	adc    DWORD PTR [rax],eax
   140030bab:	rex add DWORD PTR [rax],eax
   140030bae:	add    BYTE PTR [rax],al
   140030bb0:	add    al,0x0
   140030bb2:	add    BYTE PTR [rax],al
   140030bb4:	or     BYTE PTR [rax],al
   140030bb6:	add    BYTE PTR [rax],al
   140030bb8:	or     al,0x0
   140030bba:	add    BYTE PTR [rax],al
   140030bbc:	add    BYTE PTR [rax],al
   140030bbe:	add    BYTE PTR [rax],al
   140030bc0:	xor    BYTE PTR [rcx],dl
   140030bc2:	add    BYTE PTR [rax+0x1],al
   140030bc5:	add    BYTE PTR [rax],al
   140030bc7:	add    BYTE PTR [rax],ah
   140030bc9:	adc    DWORD PTR [rax],eax
   140030bcb:	rex add DWORD PTR [rax],eax
   140030bce:	add    BYTE PTR [rax],al
   140030bd0:	add    BYTE PTR [rax],al
   140030bd2:	add    BYTE PTR [rax],al
   140030bd4:	add    al,0x0
   140030bd6:	add    BYTE PTR [rax],al
   140030bd8:	or     BYTE PTR [rax],al
   140030bda:	add    BYTE PTR [rax],al
   140030bdc:	or     al,0x0
   140030bde:	add    BYTE PTR [rax],al
   140030be0:	and    BYTE PTR [rcx],dl
   140030be2:	add    BYTE PTR [rax+0x1],al
   140030be5:	add    BYTE PTR [rax],al
   140030be7:	add    BYTE PTR [rax],dh
   140030be9:	adc    DWORD PTR [rax],eax
   140030beb:	rex add DWORD PTR [rax],eax
   140030bee:	add    BYTE PTR [rax],al
   140030bf0:	add    al,0x0
   140030bf2:	add    BYTE PTR [rax],al
   140030bf4:	or     BYTE PTR [rax],al
   140030bf6:	add    BYTE PTR [rax],al
   140030bf8:	or     al,0x0
   140030bfa:	add    BYTE PTR [rax],al
   140030bfc:	add    BYTE PTR [rax],al
   140030bfe:	add    BYTE PTR [rax],al
   140030c00:	xor    BYTE PTR [rcx],dl
   140030c02:	add    BYTE PTR [rax+0x1],al
   140030c05:	add    BYTE PTR [rax],al
   140030c07:	add    BYTE PTR [rax],ah
   140030c09:	adc    DWORD PTR [rax],eax
   140030c0b:	rex add DWORD PTR [rax],eax
   140030c0e:	add    BYTE PTR [rax],al
   140030c10:	or     BYTE PTR [rax],al
   140030c12:	add    BYTE PTR [rax],al
   140030c14:	or     al,0x0
   140030c16:	add    BYTE PTR [rax],al
   140030c18:	add    BYTE PTR [rax],al
   140030c1a:	add    BYTE PTR [rax],al
   140030c1c:	add    al,0x0
   140030c1e:	add    BYTE PTR [rax],al
   140030c20:	and    BYTE PTR [rcx],dl
   140030c22:	add    BYTE PTR [rax+0x1],al
   140030c25:	add    BYTE PTR [rax],al
   140030c27:	add    BYTE PTR [rax],dh
   140030c29:	adc    DWORD PTR [rax],eax
   140030c2b:	rex add DWORD PTR [rax],eax
   140030c2e:	add    BYTE PTR [rax],al
   140030c30:	or     al,0x0
   140030c32:	add    BYTE PTR [rax],al
   140030c34:	add    BYTE PTR [rax],al
   140030c36:	add    BYTE PTR [rax],al
   140030c38:	add    al,0x0
   140030c3a:	add    BYTE PTR [rax],al
   140030c3c:	or     BYTE PTR [rax],al
   140030c3e:	add    BYTE PTR [rax],al
   140030c40:	xor    BYTE PTR [rcx],dl
   140030c42:	add    BYTE PTR [rax+0x1],al
   140030c45:	add    BYTE PTR [rax],al
   140030c47:	add    BYTE PTR [rax],ah
   140030c49:	adc    DWORD PTR [rax],eax
   140030c4b:	rex add DWORD PTR [rax],eax
   140030c4e:	add    BYTE PTR [rax],al
   140030c50:	or     BYTE PTR [rax],al
   140030c52:	add    BYTE PTR [rax],al
   140030c54:	add    al,0x0
   140030c56:	add    BYTE PTR [rax],al
   140030c58:	add    BYTE PTR [rax],al
   140030c5a:	add    BYTE PTR [rax],al
   140030c5c:	or     al,0x0
   140030c5e:	add    BYTE PTR [rax],al
   140030c60:	and    BYTE PTR [rcx],dl
   140030c62:	add    BYTE PTR [rax+0x1],al
   140030c65:	add    BYTE PTR [rax],al
   140030c67:	add    BYTE PTR [rax],dh
   140030c69:	adc    DWORD PTR [rax],eax
   140030c6b:	rex add DWORD PTR [rax],eax
   140030c6e:	add    BYTE PTR [rax],al
   140030c70:	or     al,0x0
   140030c72:	add    BYTE PTR [rax],al
   140030c74:	or     BYTE PTR [rax],al
   140030c76:	add    BYTE PTR [rax],al
   140030c78:	add    al,0x0
   140030c7a:	add    BYTE PTR [rax],al
   140030c7c:	add    BYTE PTR [rax],al
   140030c7e:	add    BYTE PTR [rax],al
   140030c80:	xor    BYTE PTR [rcx],dl
   140030c82:	add    BYTE PTR [rax+0x1],al
   140030c85:	add    BYTE PTR [rax],al
   140030c87:	add    BYTE PTR [rax],ah
   140030c89:	adc    DWORD PTR [rax],eax
   140030c8b:	rex add DWORD PTR [rax],eax
   140030c8e:	add    BYTE PTR [rax],al
   140030c90:	add    BYTE PTR [rax],al
   140030c92:	add    BYTE PTR [rax],al
   140030c94:	or     al,0x0
   140030c96:	add    BYTE PTR [rax],al
   140030c98:	or     BYTE PTR [rax],al
   140030c9a:	add    BYTE PTR [rax],al
   140030c9c:	add    al,0x0
   140030c9e:	add    BYTE PTR [rax],al
   140030ca0:	and    BYTE PTR [rcx],dl
   140030ca2:	add    BYTE PTR [rax+0x1],al
   140030ca5:	add    BYTE PTR [rax],al
   140030ca7:	add    BYTE PTR [rax],dh
   140030ca9:	adc    DWORD PTR [rax],eax
   140030cab:	rex add DWORD PTR [rax],eax
   140030cae:	add    BYTE PTR [rax],al
   140030cb0:	add    al,0x0
   140030cb2:	add    BYTE PTR [rax],al
   140030cb4:	add    BYTE PTR [rax],al
   140030cb6:	add    BYTE PTR [rax],al
   140030cb8:	or     al,0x0
   140030cba:	add    BYTE PTR [rax],al
   140030cbc:	or     BYTE PTR [rax],al
   140030cbe:	add    BYTE PTR [rax],al
   140030cc0:	xor    BYTE PTR [rcx],dl
   140030cc2:	add    BYTE PTR [rax+0x1],al
   140030cc5:	add    BYTE PTR [rax],al
   140030cc7:	add    BYTE PTR [rax],ah
   140030cc9:	adc    DWORD PTR [rax],eax
   140030ccb:	rex add DWORD PTR [rax],eax
   140030cce:	add    BYTE PTR [rax],al
   140030cd0:	or     BYTE PTR [rax],al
   140030cd2:	add    BYTE PTR [rax],al
   140030cd4:	or     al,0x0
   140030cd6:	add    BYTE PTR [rax],al
   140030cd8:	add    BYTE PTR [rax],al
   140030cda:	add    BYTE PTR [rax],al
   140030cdc:	add    al,0x0
   140030cde:	add    BYTE PTR [rax],al
   140030ce0:	and    BYTE PTR [rcx],dl
   140030ce2:	add    BYTE PTR [rax+0x1],al
   140030ce5:	add    BYTE PTR [rax],al
   140030ce7:	add    BYTE PTR [rax],dh
   140030ce9:	adc    DWORD PTR [rax],eax
   140030ceb:	rex add DWORD PTR [rax],eax
   140030cee:	add    BYTE PTR [rax],al
   140030cf0:	or     al,0x0
   140030cf2:	add    BYTE PTR [rax],al
   140030cf4:	add    BYTE PTR [rax],al
   140030cf6:	add    BYTE PTR [rax],al
   140030cf8:	add    al,0x0
   140030cfa:	add    BYTE PTR [rax],al
   140030cfc:	or     BYTE PTR [rax],al
   140030cfe:	add    BYTE PTR [rax],al
   140030d00:	xor    BYTE PTR [rcx],dl
   140030d02:	add    BYTE PTR [rax+0x1],al
   140030d05:	add    BYTE PTR [rax],al
   140030d07:	add    BYTE PTR [rax],ah
   140030d09:	adc    DWORD PTR [rax],eax
   140030d0b:	rex add DWORD PTR [rax],eax
   140030d0e:	add    BYTE PTR [rax],al
   140030d10:	add    BYTE PTR [rax],al
   140030d12:	add    BYTE PTR [rax],al
   140030d14:	add    al,0x0
   140030d16:	add    BYTE PTR [rax],al
   140030d18:	or     BYTE PTR [rax],al
   140030d1a:	add    BYTE PTR [rax],al
   140030d1c:	or     al,0x0
   140030d1e:	add    BYTE PTR [rax],al
   140030d20:	and    BYTE PTR [rcx],dl
   140030d22:	add    BYTE PTR [rax+0x1],al
   140030d25:	add    BYTE PTR [rax],al
   140030d27:	add    BYTE PTR [rax],dh
   140030d29:	adc    DWORD PTR [rax],eax
   140030d2b:	rex add DWORD PTR [rax],eax
   140030d2e:	add    BYTE PTR [rax],al
   140030d30:	add    al,0x0
   140030d32:	add    BYTE PTR [rax],al
   140030d34:	or     BYTE PTR [rax],al
   140030d36:	add    BYTE PTR [rax],al
   140030d38:	or     al,0x0
   140030d3a:	add    BYTE PTR [rax],al
   140030d3c:	add    BYTE PTR [rax],al
   140030d3e:	add    BYTE PTR [rax],al
   140030d40:	xor    BYTE PTR [rcx],dl
   140030d42:	add    BYTE PTR [rax+0x1],al
   140030d45:	add    BYTE PTR [rax],al
   140030d47:	add    BYTE PTR [rax],ah
   140030d49:	adc    DWORD PTR [rax],eax
   140030d4b:	rex add DWORD PTR [rax],eax
   140030d4e:	add    BYTE PTR [rax],al
   140030d50:	add    DWORD PTR es:[rdi+0x1],eax
   140030d54:	sub    DWORD PTR [rcx],eax
   140030d56:	sbb    eax,0x21011f01
   140030d5b:	add    DWORD PTR [rbx],esp
   140030d5d:	add    DWORD PTR [rdi],esp
   140030d5f:	add    DWORD PTR [rbx],ebp
   140030d61:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x175043c68
   140030d67:	add    DWORD PTR [rbx],esi
   140030d69:	add    DWORD PTR [rdi],esi
   140030d6b:	add    DWORD PTR [rsi],ebx
   140030d6d:	add    DWORD PTR [rdx],esp
   140030d6f:	add    DWORD PTR [rax],ebp
   140030d71:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d043178
   140030d77:	add    DWORD PTR [rdi],edi
   140030d79:	add    DWORD PTR [rcx+0x1],eax
   140030d7c:	add    DWORD PTR [r9+0x1],r9d
   140030d80:	xor    al,BYTE PTR [rcx]
   140030d82:	add    DWORD PTR ds:[rsi+0x1],eax
   140030d86:	adc    eax,DWORD PTR [rbx+rcx*1]
   140030d89:	add    al,0xc
   140030d8b:	add    al,0xd
   140030d8d:	add    al,0xe
   140030d8f:	add    al,0x1b
   140030d91:	add    DWORD PTR [rcx],esi
   140030d93:	add    DWORD PTR [rbx],edi
   140030d95:	add    DWORD PTR [rbx+0x1],eax
   140030d98:	cmp    DWORD PTR [rcx],eax
   140030d9a:	cmp    BYTE PTR [rcx],al
   140030d9c:	(bad)  
   140030d9e:	adc    BYTE PTR [rax+rcx*1],al
   140030da1:	add    al,0x0
   140030da3:	add    BYTE PTR [rax],al
   140030da5:	add    BYTE PTR [rax],al
   140030da7:	add    BYTE PTR [rdi+0x6f],dl
   140030daa:	jb     0x140030e10
   140030dac:	and    BYTE PTR [rcx+rbp*2+0x73],cl
   140030db0:	je     0x140030dd2
   140030db2:	and    eax,0x64
   140030db7:	add    BYTE PTR [rbp+0x6e],al
   140030dba:	(bad)  
   140030dbb:	(bad)  
   140030dbc:	ins    BYTE PTR es:[rdi],dx
   140030dbd:	gs add BYTE PTR fs:[rdx+0x1],ah
   140030dc2:	rex.RXB add DWORD PTR [r14],r15d
   140030dc5:	add    al,0xe
   140030dc7:	add    al,0x3f
   140030dc9:	add    al,0x38
   140030dcb:	add    al,0x27
   140030dcd:	add    al,0x28
   140030dcf:	add    al,0x3
   140030dd1:	add    DWORD PTR [rbx+0x4],ecx
   140030dd4:	mov    al,0x1
   140030dd6:	and    eax,DWORD PTR [rsi+riz*4]
   140030dd9:	add    DWORD PTR [rcx+0x22011e01],edx
   140030ddf:	add    DWORD PTR [rax],ebp
   140030de1:	add    DWORD PTR [rip+0x20041e04],ebx        # 0x160072beb
   140030de7:	add    al,0x1f
   140030de9:	add    al,0x3
   140030deb:	add    al,0x21
   140030ded:	add    al,0x22
   140030def:	add    al,0x2
   140030df1:	add    DWORD PTR [rcx],ebp
   140030df3:	add    al,0xb1
   140030df5:	add    al,0x24
   140030df7:	add    al,0xa7
   140030df9:	add    DWORD PTR [rcx+rax*1-0x56],edx
   140030dfd:	add    DWORD PTR [rcx+0x7002001],esi
   140030e03:	add    al,0x13
   140030e05:	add    al,0xb
   140030e07:	add    al,0x18
   140030e09:	add    al,0xc
   140030e0b:	add    al,0x7c
   140030e0d:	add    BYTE PTR [rsi],al
   140030e0f:	add    al,0x7
   140030e11:	add    DWORD PTR [rdi],edx
   140030e13:	add    al,0xf
   140030e15:	add    al,0x9
   140030e17:	add    al,0x14
   140030e19:	(bad)  
   140030e1a:	add    al,0x1
   140030e1c:	(bad)  
   140030e1d:	add    al,0x15
   140030e1f:	add    DWORD PTR [rsi+rax*1],esp
   140030e22:	add    DWORD PTR [rsi],eax
   140030e24:	adc    al,0x4
   140030e26:	sbb    al,BYTE PTR [rsp+rbx*1]
   140030e29:	add    al,0x25
   140030e2b:	(bad)  
   140030e2c:	add    eax,0x3e060004
   140030e31:	add    al,0x4e
   140030e33:	add    al,0x10
   140030e35:	add    al,0xa
   140030e37:	add    al,0x12
   140030e39:	add    al,0x11
   140030e3b:	add    al,0x19
   140030e3d:	add    al,0x8
   140030e3f:	add    al,0x20
   140030e41:	add    DWORD PTR [rdx],ebx
   140030e43:	add    DWORD PTR [rcx+rax*1],ebx
   140030e46:	add    QWORD PTR [rsi],r11
   140030e49:	add    DWORD PTR [rdx],esp
   140030e4b:	add    DWORD PTR [rcx+rax*1],esp
   140030e4e:	add    DWORD PTR es:[rsi],ebp
   140030e51:	add    DWORD PTR [rax],ebp
   140030e53:	add    DWORD PTR [rdx],ebp
   140030e55:	add    DWORD PTR [rcx+rax*1],ebp
   140030e58:	add    DWORD PTR ss:[rax],esi
   140030e5b:	add    DWORD PTR [rdx],esi
   140030e5d:	add    DWORD PTR [rcx+rax*1],esi
   140030e60:	push   rsi
   140030e61:	add    DWORD PTR [rax],edi
   140030e63:	add    DWORD PTR [rax+0x1],eax
   140030e66:	cmp    al,BYTE PTR [rcx]
   140030e68:	cmp    al,0x1
   140030e6a:	push   rdx
   140030e6b:	add    DWORD PTR [rsi],edi
   140030e6d:	add    DWORD PTR [rdi],esp
   140030e6f:	(bad)  
   140030e70:	push   rax
   140030e71:	add    DWORD PTR [rax+0x1],ecx
   140030e74:	add    DWORD PTR [rcx+r8*1+0x46],eax
   140030e79:	add    DWORD PTR [rcx+rax*1+0x58],edx
   140030e7d:	add    DWORD PTR [rdi],edx
   140030e7f:	add    DWORD PTR [rcx],esp
   140030e81:	add    DWORD PTR [rbx],ebx
   140030e83:	add    DWORD PTR [rip+0x1f014d01],ebx        # 0x15f045b8a
   140030e89:	add    DWORD PTR [rbx],esp
   140030e8b:	add    DWORD PTR [rip+0x2f012701],esp        # 0x16f043592
   140030e91:	add    DWORD PTR [rcx],ebp
   140030e93:	add    DWORD PTR [rbx],ebp
   140030e95:	add    DWORD PTR [rip+0x31013701],ebp        # 0x17104459c
   140030e9b:	add    DWORD PTR [rbx],esi
   140030e9d:	add    DWORD PTR [rip+0x39015701],esi        # 0x1790465a4
   140030ea3:	add    DWORD PTR [rcx+0x1],eax
   140030ea6:	cmp    eax,DWORD PTR [rcx]
   140030ea8:	cmp    eax,0x3f015301
   140030ead:	add    DWORD PTR [rax],ecx
   140030eaf:	(bad)  
   140030eb0:	push   rcx
   140030eb1:	add    DWORD PTR [rcx+0x1],ecx
   140030eb4:	rex.XB add DWORD PTR [r13+0x1],eax
   140030eb8:	rex.RXB add DWORD PTR [r13+0x1],r10d
   140030ebc:	pop    rcx
   140030ebd:	add    DWORD PTR [rbx+0x1],ecx
   140030ec3:	add    BYTE PTR [rax],al
   140030ec5:	add    BYTE PTR [rax],al
   140030ec7:	add    BYTE PTR [rbp+0x61],cl
   140030eca:	imul   ebp,DWORD PTR [rsi+0x20],0x64726f57
   140030ed1:	and    BYTE PTR [rcx+rbp*2+0x73],cl
   140030ed5:	je     0x140030f4a
   140030ed7:	pop    rsp
   140030ed8:	and    eax,0x73
   140030edd:	add    BYTE PTR [rax],al
   140030edf:	add    BYTE PTR [rax],al
   140030ee1:	add    BYTE PTR [rax],al
   140030ee3:	add    BYTE PTR [rax+rax*1],al
   140030ee6:	add    BYTE PTR [rax],al
   140030ee8:	or     BYTE PTR [rax],al
   140030eea:	add    BYTE PTR [rax],al
   140030eec:	or     al,0x0
   140030eee:	add    BYTE PTR [rax],al
   140030ef0:	and    BYTE PTR [rcx],dl
   140030ef2:	add    BYTE PTR [rax+0x1],al
   140030ef5:	add    BYTE PTR [rax],al
   140030ef7:	add    BYTE PTR [rax],dh
   140030ef9:	adc    DWORD PTR [rax],eax
   140030efb:	rex add DWORD PTR [rax],eax
   140030efe:	add    BYTE PTR [rax],al
   140030f00:	add    al,0x0
   140030f02:	add    BYTE PTR [rax],al
   140030f04:	or     BYTE PTR [rax],al
   140030f06:	add    BYTE PTR [rax],al
   140030f08:	or     al,0x0
   140030f0a:	add    BYTE PTR [rax],al
   140030f0c:	add    BYTE PTR [rax],al
   140030f0e:	add    BYTE PTR [rax],al
   140030f10:	xor    BYTE PTR [rcx],dl
   140030f12:	add    BYTE PTR [rax+0x1],al
   140030f15:	add    BYTE PTR [rax],al
   140030f17:	add    BYTE PTR [rax],ah
   140030f19:	adc    DWORD PTR [rax],eax
   140030f1b:	rex add DWORD PTR [rax],eax
   140030f1e:	add    BYTE PTR [rax],al
   140030f20:	or     BYTE PTR [rax],al
   140030f22:	add    BYTE PTR [rax],al
   140030f24:	or     al,0x0
   140030f26:	add    BYTE PTR [rax],al
   140030f28:	add    BYTE PTR [rax],al
   140030f2a:	add    BYTE PTR [rax],al
   140030f2c:	add    al,0x0
   140030f2e:	add    BYTE PTR [rax],al
   140030f30:	and    BYTE PTR [rcx],dl
   140030f32:	add    BYTE PTR [rax+0x1],al
   140030f35:	add    BYTE PTR [rax],al
   140030f37:	add    BYTE PTR [rax],dh
   140030f39:	adc    DWORD PTR [rax],eax
   140030f3b:	rex add DWORD PTR [rax],eax
   140030f3e:	add    BYTE PTR [rax],al
   140030f40:	or     al,0x0
   140030f42:	add    BYTE PTR [rax],al
   140030f44:	add    BYTE PTR [rax],al
   140030f46:	add    BYTE PTR [rax],al
   140030f48:	add    al,0x0
   140030f4a:	add    BYTE PTR [rax],al
   140030f4c:	or     BYTE PTR [rax],al
   140030f4e:	add    BYTE PTR [rax],al
   140030f50:	xor    BYTE PTR [rcx],dl
   140030f52:	add    BYTE PTR [rax+0x1],al
   140030f55:	add    BYTE PTR [rax],al
   140030f57:	add    BYTE PTR [rax],ah
   140030f59:	adc    DWORD PTR [rax],eax
   140030f5b:	rex add DWORD PTR [rax],eax
   140030f5e:	add    BYTE PTR [rax],al
   140030f60:	or     BYTE PTR [rax],al
   140030f62:	add    BYTE PTR [rax],al
   140030f64:	add    al,0x0
   140030f66:	add    BYTE PTR [rax],al
   140030f68:	add    BYTE PTR [rax],al
   140030f6a:	add    BYTE PTR [rax],al
   140030f6c:	or     al,0x0
   140030f6e:	add    BYTE PTR [rax],al
   140030f70:	and    BYTE PTR [rcx],dl
   140030f72:	add    BYTE PTR [rax+0x1],al
   140030f75:	add    BYTE PTR [rax],al
   140030f77:	add    BYTE PTR [rax],dh
   140030f79:	adc    DWORD PTR [rax],eax
   140030f7b:	rex add DWORD PTR [rax],eax
   140030f7e:	add    BYTE PTR [rax],al
   140030f80:	or     al,0x0
   140030f82:	add    BYTE PTR [rax],al
   140030f84:	or     BYTE PTR [rax],al
   140030f86:	add    BYTE PTR [rax],al
   140030f88:	add    al,0x0
   140030f8a:	add    BYTE PTR [rax],al
   140030f8c:	add    BYTE PTR [rax],al
   140030f8e:	add    BYTE PTR [rax],al
   140030f90:	xor    BYTE PTR [rcx],dl
   140030f92:	add    BYTE PTR [rax+0x1],al
   140030f95:	add    BYTE PTR [rax],al
   140030f97:	add    BYTE PTR [rax],ah
   140030f99:	adc    DWORD PTR [rax],eax
   140030f9b:	rex add DWORD PTR [rax],eax
   140030f9e:	add    BYTE PTR [rax],al
   140030fa0:	add    BYTE PTR [rax],al
   140030fa2:	add    BYTE PTR [rax],al
   140030fa4:	or     al,0x0
   140030fa6:	add    BYTE PTR [rax],al
   140030fa8:	or     BYTE PTR [rax],al
   140030faa:	add    BYTE PTR [rax],al
   140030fac:	add    al,0x0
   140030fae:	add    BYTE PTR [rax],al
   140030fb0:	and    BYTE PTR [rcx],dl
   140030fb2:	add    BYTE PTR [rax+0x1],al
   140030fb5:	add    BYTE PTR [rax],al
   140030fb7:	add    BYTE PTR [rax],dh
   140030fb9:	adc    DWORD PTR [rax],eax
   140030fbb:	rex add DWORD PTR [rax],eax
   140030fbe:	add    BYTE PTR [rax],al
   140030fc0:	add    al,0x0
   140030fc2:	add    BYTE PTR [rax],al
   140030fc4:	add    BYTE PTR [rax],al
   140030fc6:	add    BYTE PTR [rax],al
   140030fc8:	or     al,0x0
   140030fca:	add    BYTE PTR [rax],al
   140030fcc:	or     BYTE PTR [rax],al
   140030fce:	add    BYTE PTR [rax],al
   140030fd0:	xor    BYTE PTR [rcx],dl
   140030fd2:	add    BYTE PTR [rax+0x1],al
   140030fd5:	add    BYTE PTR [rax],al
   140030fd7:	add    BYTE PTR [rax],ah
   140030fd9:	adc    DWORD PTR [rax],eax
   140030fdb:	rex add DWORD PTR [rax],eax
   140030fde:	add    BYTE PTR [rax],al
   140030fe0:	or     BYTE PTR [rax],al
   140030fe2:	add    BYTE PTR [rax],al
   140030fe4:	or     al,0x0
   140030fe6:	add    BYTE PTR [rax],al
   140030fe8:	add    BYTE PTR [rax],al
   140030fea:	add    BYTE PTR [rax],al
   140030fec:	add    al,0x0
   140030fee:	add    BYTE PTR [rax],al
   140030ff0:	and    BYTE PTR [rcx],dl
   140030ff2:	add    BYTE PTR [rax+0x1],al
   140030ff5:	add    BYTE PTR [rax],al
   140030ff7:	add    BYTE PTR [rax],dh
   140030ff9:	adc    DWORD PTR [rax],eax
   140030ffb:	rex add DWORD PTR [rax],eax
   140030ffe:	add    BYTE PTR [rax],al
   140031000:	or     al,0x0
   140031002:	add    BYTE PTR [rax],al
   140031004:	add    BYTE PTR [rax],al
   140031006:	add    BYTE PTR [rax],al
   140031008:	add    al,0x0
   14003100a:	add    BYTE PTR [rax],al
   14003100c:	or     BYTE PTR [rax],al
   14003100e:	add    BYTE PTR [rax],al
   140031010:	xor    BYTE PTR [rcx],dl
   140031012:	add    BYTE PTR [rax+0x1],al
   140031015:	add    BYTE PTR [rax],al
   140031017:	add    BYTE PTR [rax],ah
   140031019:	adc    DWORD PTR [rax],eax
   14003101b:	rex add DWORD PTR [rax],eax
   14003101e:	add    BYTE PTR [rax],al
   140031020:	add    BYTE PTR [rax],al
   140031022:	add    BYTE PTR [rax],al
   140031024:	add    al,0x0
   140031026:	add    BYTE PTR [rax],al
   140031028:	or     BYTE PTR [rax],al
   14003102a:	add    BYTE PTR [rax],al
   14003102c:	or     al,0x0
   14003102e:	add    BYTE PTR [rax],al
   140031030:	and    BYTE PTR [rcx],dl
   140031032:	add    BYTE PTR [rax+0x1],al
   140031035:	add    BYTE PTR [rax],al
   140031037:	add    BYTE PTR [rax],dh
   140031039:	adc    DWORD PTR [rax],eax
   14003103b:	rex add DWORD PTR [rax],eax
   14003103e:	add    BYTE PTR [rax],al
   140031040:	add    al,0x0
   140031042:	add    BYTE PTR [rax],al
   140031044:	or     BYTE PTR [rax],al
   140031046:	add    BYTE PTR [rax],al
   140031048:	or     al,0x0
   14003104a:	add    BYTE PTR [rax],al
   14003104c:	add    BYTE PTR [rax],al
   14003104e:	add    BYTE PTR [rax],al
   140031050:	xor    BYTE PTR [rcx],dl
   140031052:	add    BYTE PTR [rax+0x1],al
   140031055:	add    BYTE PTR [rax],al
   140031057:	add    BYTE PTR [rax],ah
   140031059:	adc    DWORD PTR [rax],eax
   14003105b:	rex add DWORD PTR [rax],eax
   14003105e:	add    BYTE PTR [rax],al
   140031060:	push   rdi
   140031061:	push   rsp
   140031062:	and    eax,0x57552e73
   140031067:	rex.WR add BYTE PTR [rax],r8b
   14003106a:	add    BYTE PTR [rax],al
   14003106c:	add    BYTE PTR [rax],al
   14003106e:	add    BYTE PTR [rax],al
   140031070:	pop    rsp
   140031071:	push   rbp
   140031072:	jae    0x1400310d9
   140031074:	jb     0x140031096
   140031076:	push   rdi
   140031077:	outs   dx,DWORD PTR ds:[rsi]
   140031078:	jb     0x1400310de
   14003107a:	and    BYTE PTR [rcx+rbp*2+0x73],cl
   14003107e:	je     0x1400310f3
   140031080:	pop    rsp
   140031081:	and    eax,0x73
   140031086:	add    BYTE PTR [rax],al
   140031088:	push   rbx
   140031089:	gs ins BYTE PTR es:[rdi],dx
   14003108b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140031090:	and    BYTE PTR [rbp+0x57],dl
   140031093:	rex.WR add BYTE PTR [rax],r8b
   140031096:	add    BYTE PTR [rax],al
   140031098:	rex.WRX (bad) 
   14003109a:	ins    DWORD PTR es:[rdi],dx
   14003109b:	add    BYTE PTR gs:[rax],al
   14003109e:	add    BYTE PTR [rax],al
   1400310a0:	add    BYTE PTR [rax],al
   1400310a2:	add    BYTE PTR [rax],al
   1400310a4:	(bad)  
   1400310a5:	add    DWORD PTR [rax],eax
   1400310a7:	add    BYTE PTR [rcx],al
   1400310a9:	add    DWORD PTR [rax],eax
   1400310ab:	add    BYTE PTR [rdx],al
   1400310ad:	add    DWORD PTR [rax],eax
   1400310af:	add    BYTE PTR [rsi],al
   1400310b1:	add    DWORD PTR [rax],eax
   1400310b3:	add    BYTE PTR [rbx],al
   1400310b5:	add    DWORD PTR [rax],eax
   1400310b7:	add    BYTE PTR [rsi],al
   1400310b9:	add    DWORD PTR [rax],eax
   1400310bb:	add    BYTE PTR [rsi],al
   1400310bd:	add    DWORD PTR [rax],eax
   1400310bf:	add    BYTE PTR [rdx],al
   1400310c1:	add    BYTE PTR [rax],al
   1400310c3:	add    BYTE PTR [rsi],al
   1400310c5:	add    DWORD PTR [rax],eax
   1400310c7:	add    BYTE PTR [rsi],al
   1400310c9:	add    DWORD PTR [rax],eax
   1400310cb:	add    BYTE PTR [rsi],al
   1400310cd:	add    DWORD PTR [rax],eax
   1400310cf:	add    BYTE PTR [rbx],al
   1400310d1:	add    DWORD PTR [rax],eax
   1400310d3:	add    BYTE PTR [rip+0x6000001],cl        # 0x1460310da
   1400310d9:	add    DWORD PTR [rax],eax
   1400310db:	add    BYTE PTR [rdx],al
   1400310dd:	add    DWORD PTR [rax],eax
   1400310df:	add    BYTE PTR [rsi],al
   1400310e1:	add    DWORD PTR [rax],eax
   1400310e3:	add    BYTE PTR [rsi],al
   1400310e5:	add    DWORD PTR [rax],eax
   1400310e7:	add    BYTE PTR [rsi],al
   1400310e9:	add    DWORD PTR [rax],eax
   1400310eb:	add    BYTE PTR [rsi],al
   1400310ed:	add    DWORD PTR [rax],eax
   1400310ef:	add    BYTE PTR [rsi],al
   1400310f1:	add    DWORD PTR [rax],eax
   1400310f3:	add    BYTE PTR [rsi],al
   1400310f5:	add    DWORD PTR [rax],eax
   1400310f7:	add    BYTE PTR [rsi],al
   1400310f9:	add    DWORD PTR [rax],eax
   1400310fb:	add    BYTE PTR [rsi],al
   1400310fd:	add    DWORD PTR [rax],eax
   1400310ff:	add    BYTE PTR [rsi],al
   140031101:	add    DWORD PTR [rax],eax
   140031103:	add    BYTE PTR [rsi],al
   140031105:	add    DWORD PTR [rax],eax
   140031107:	add    BYTE PTR [rsi],al
   140031109:	add    DWORD PTR [rax],eax
   14003110b:	add    BYTE PTR [rsi],al
   14003110d:	add    DWORD PTR [rax],eax
   14003110f:	add    BYTE PTR [rsi],al
   140031111:	add    DWORD PTR [rax],eax
   140031113:	add    BYTE PTR [rsi],al
   140031115:	add    DWORD PTR [rax],eax
   140031117:	add    BYTE PTR [rsi],al
   140031119:	add    DWORD PTR [rax],eax
   14003111b:	add    BYTE PTR [rsi],al
   14003111d:	add    DWORD PTR [rax],eax
   14003111f:	add    BYTE PTR [rsi],al
   140031121:	add    DWORD PTR [rax],eax
   140031123:	add    BYTE PTR [rdx],cl
   140031125:	add    DWORD PTR [rax],eax
   140031127:	add    BYTE PTR [rsi],al
   140031129:	add    DWORD PTR [rax],eax
   14003112b:	add    BYTE PTR [rsi],al
   14003112d:	add    DWORD PTR [rax],eax
   14003112f:	add    BYTE PTR [rdx],cl
   140031131:	add    DWORD PTR [rax],eax
   140031133:	add    BYTE PTR [rsi],al
   140031135:	add    DWORD PTR [rax],eax
   140031137:	add    BYTE PTR [rsi],al
   140031139:	add    DWORD PTR [rax],eax
   14003113b:	add    BYTE PTR [rsi],al
   14003113d:	add    DWORD PTR [rax],eax
   14003113f:	add    BYTE PTR [rsi],al
   140031141:	add    DWORD PTR [rax],eax
   140031143:	add    BYTE PTR [rsi],al
   140031145:	add    DWORD PTR [rax],eax
   140031147:	add    BYTE PTR [rsi],al
   140031149:	add    DWORD PTR [rax],eax
   14003114b:	add    BYTE PTR [rsi],al
   14003114d:	add    DWORD PTR [rax],eax
   14003114f:	add    BYTE PTR [rsi],al
   140031151:	add    DWORD PTR [rax],eax
   140031153:	add    BYTE PTR [rsi],al
   140031155:	add    DWORD PTR [rax],eax
   140031157:	add    BYTE PTR [rsi],al
   140031159:	add    DWORD PTR [rax],eax
   14003115b:	add    BYTE PTR [rsi],al
   14003115d:	add    DWORD PTR [rax],eax
   14003115f:	add    BYTE PTR [rsi],al
   140031161:	add    DWORD PTR [rax],eax
   140031163:	add    BYTE PTR [rsi],al
   140031165:	add    DWORD PTR [rax],eax
   140031167:	add    BYTE PTR [rsi],al
   140031169:	add    DWORD PTR [rax],eax
   14003116b:	add    BYTE PTR [rsi],al
   14003116d:	add    DWORD PTR [rax],eax
   14003116f:	add    BYTE PTR [rsi],al
   140031171:	add    DWORD PTR [rax],eax
   140031173:	add    BYTE PTR [rdx],al
   140031175:	add    DWORD PTR [rax],eax
   140031177:	add    BYTE PTR [rsi],al
   140031179:	add    DWORD PTR [rax],eax
   14003117b:	add    BYTE PTR [rsi],al
   14003117d:	add    DWORD PTR [rax],eax
   14003117f:	add    BYTE PTR [rsi],al
   140031181:	add    DWORD PTR [rax],eax
   140031183:	add    BYTE PTR [rsi],al
   140031185:	add    DWORD PTR [rax],eax
   140031187:	add    BYTE PTR [rsi],al
   140031189:	add    DWORD PTR [rax],eax
   14003118b:	add    BYTE PTR [rsi],al
   14003118d:	add    DWORD PTR [rax],eax
   14003118f:	add    BYTE PTR [rsi],al
   140031191:	add    DWORD PTR [rax],eax
   140031193:	add    BYTE PTR [rsi],al
   140031195:	add    DWORD PTR [rax],eax
   140031197:	add    BYTE PTR [rsi],al
   140031199:	add    DWORD PTR [rax],eax
   14003119b:	add    BYTE PTR [rsi],al
   14003119d:	add    DWORD PTR [rax],eax
   14003119f:	add    BYTE PTR [rsi],al
   1400311a1:	add    DWORD PTR [rax],eax
   1400311a3:	add    BYTE PTR [rsi],al
   1400311a5:	add    DWORD PTR [rax],eax
   1400311a7:	add    BYTE PTR [rsi],al
   1400311a9:	add    DWORD PTR [rax],eax
   1400311ab:	add    BYTE PTR [rsi],al
   1400311ad:	add    DWORD PTR [rax],eax
   1400311af:	add    BYTE PTR [rsi],al
   1400311b1:	add    DWORD PTR [rax],eax
   1400311b3:	add    BYTE PTR [rsi],al
   1400311b5:	add    DWORD PTR [rax],eax
   1400311b7:	add    BYTE PTR [rsi],al
   1400311b9:	add    DWORD PTR [rax],eax
   1400311bb:	add    BYTE PTR [rsi],al
   1400311bd:	add    DWORD PTR [rax],eax
   1400311bf:	add    BYTE PTR [rsi],al
   1400311c1:	add    DWORD PTR [rax],eax
   1400311c3:	add    BYTE PTR [rsi],al
   1400311c5:	add    DWORD PTR [rax],eax
   1400311c7:	add    BYTE PTR [rsi],al
   1400311c9:	add    DWORD PTR [rax],eax
   1400311cb:	add    BYTE PTR [rsi],al
   1400311cd:	add    DWORD PTR [rax],eax
   1400311cf:	add    BYTE PTR [rsi],al
   1400311d1:	add    DWORD PTR [rax],eax
   1400311d3:	add    BYTE PTR [rsi],al
   1400311d5:	add    DWORD PTR [rax],eax
   1400311d7:	add    BYTE PTR [rcx+rax*1],al
   1400311da:	add    BYTE PTR [rax],al
   1400311dc:	(bad)  
   1400311dd:	add    DWORD PTR [rax],eax
   1400311df:	add    BYTE PTR [rsi],al
   1400311e1:	add    DWORD PTR [rax],eax
   1400311e3:	add    BYTE PTR [rsi],al
   1400311e5:	add    DWORD PTR [rax],eax
   1400311e7:	add    BYTE PTR [rsi],al
   1400311e9:	add    DWORD PTR [rax],eax
   1400311eb:	add    BYTE PTR [rsi],al
   1400311ed:	add    DWORD PTR [rax],eax
   1400311ef:	add    BYTE PTR [rsi],al
   1400311f1:	add    DWORD PTR [rax],eax
   1400311f3:	add    BYTE PTR [rsi],al
   1400311f5:	add    DWORD PTR [rax],eax
   1400311f7:	add    BYTE PTR [rsi],al
   1400311f9:	add    DWORD PTR [rax],eax
	...
   14003120f:	add    BYTE PTR [rax],al
   140031211:	add    BYTE PTR [rcx],cl
   140031213:	stc    
   140031214:	or     bh,cl
   140031216:	add    BYTE PTR [rax],al
   140031218:	add    BYTE PTR [rax],al
   14003121a:	or     eax,0xf9
	...
   14003123f:	add    BYTE PTR [rdx],bl
   140031241:	jmp    0x140031246
	...
   14003124e:	add    BYTE PTR [rbx],dh
   140031250:	add    BYTE PTR [rax],al
   140031252:	add    BYTE PTR [rbx+0x0],dl
	...
   140031260:	enter  0x347,0x40
   140031264:	add    DWORD PTR [rax],eax
	...
   14003126e:	add    BYTE PTR [rax],al
   140031270:	push   rax
   140031271:	rex.WRXB add BYTE PTR [r8],r8b
   140031274:	pop    rsp
   140031275:	add    eax,DWORD PTR [rax]
   140031277:	add    ah,ah
   140031279:	add    al,0x0
   14003127b:	add    BYTE PTR [rsi+0x4f],cl
   14003127e:	add    BYTE PTR [rax],al
   140031280:	(bad)  
   140031281:	add    eax,DWORD PTR [rax]
   140031283:	add    ah,ah
   140031285:	add    al,0x0
   140031287:	add    BYTE PTR [rbx+rcx*2+0x0],al
   14003128b:	add    BYTE PTR [rcx+0x3],ah
   14003128e:	add    BYTE PTR [rax],al
   140031290:	in     al,0x4
   140031292:	add    BYTE PTR [rax],al
   140031294:	rex.WB push r11
   140031296:	add    BYTE PTR [rax],al
   140031298:	(bad)  
   140031299:	add    eax,DWORD PTR [rax]
   14003129b:	add    ah,ah
   14003129d:	add    al,0x0
   14003129f:	add    BYTE PTR [rdi+0x52],al
   1400312a2:	add    BYTE PTR [rax],al
   1400312a4:	loope  0x1400312a8
   1400312a6:	add    BYTE PTR [rax],al
   1400312a8:	in     eax,0x4
   1400312aa:	add    BYTE PTR [rax],al
   1400312ac:	push   rdx
   1400312ad:	push   rbp
   1400312ae:	add    BYTE PTR [rax],al
   1400312b0:	(bad)  
   1400312b2:	add    BYTE PTR [rax],al
   1400312b4:	jrcxz  0x1400312ba
   1400312b6:	add    BYTE PTR [rax],al
   1400312b8:	rex.XB pop r10
   1400312ba:	add    BYTE PTR [rax],al
   1400312bc:	push   rsp
   1400312bd:	add    eax,DWORD PTR [rax]
   1400312bf:	add    dl,ah
   1400312c1:	add    al,0x0
	...
   1400312cf:	add    BYTE PTR [rbp+0x1],dh
   1400312d5:	add    BYTE PTR [rax],al
   1400312d7:	add    al,dh
   1400312d9:	rol    DWORD PTR [rbx],1
   1400312db:	rex add DWORD PTR [rax],eax
   1400312de:	add    BYTE PTR [rax],al
   1400312e0:	push   rdx
   1400312e1:	add    eax,DWORD PTR [rax]
   1400312e3:	add    BYTE PTR [rax],al
   1400312e5:	add    BYTE PTR [rax],al
   1400312e7:	add    al,dh
   1400312e9:	rol    DWORD PTR [rbx],1
   1400312eb:	rex add DWORD PTR [rax],eax
   1400312ee:	add    BYTE PTR [rax],al
   1400312f0:	pop    rsp
   1400312f1:	add    eax,DWORD PTR [rax]
   1400312f3:	add    BYTE PTR [rax],al
   1400312f5:	add    BYTE PTR [rax],al
   1400312f7:	add    al,dh
   1400312f9:	(bad)  
   1400312fa:	add    eax,DWORD PTR [rax+0x1]
   1400312fd:	add    BYTE PTR [rax],al
   1400312ff:	add    BYTE PTR [rcx+0x3],ah
   140031302:	add    BYTE PTR [rax],al
   140031304:	add    BYTE PTR [rax],al
   140031306:	add    BYTE PTR [rax],al
   140031308:	lock iret 
   14003130a:	add    eax,DWORD PTR [rax+0x1]
   14003130d:	add    BYTE PTR [rax],al
   14003130f:	add    BYTE PTR [rdx+0x3],ah
   140031312:	add    BYTE PTR [rax],al
   140031314:	add    BYTE PTR [rax],al
   140031316:	add    BYTE PTR [rax],al
   140031318:	lock int 0x3
   14003131b:	rex add DWORD PTR [rax],eax
   14003131e:	add    BYTE PTR [rax],al
   140031320:	loope  0x140031324
   140031322:	add    BYTE PTR [rax],al
   140031324:	add    BYTE PTR [rax],al
   140031326:	add    BYTE PTR [rax],al
   140031328:	lock rol BYTE PTR [rbx],1
   14003132b:	rex add DWORD PTR [rax],eax
   14003132e:	add    BYTE PTR [rax],al
   140031330:	in     al,0x4
   140031332:	add    BYTE PTR [rax],al
   140031334:	add    DWORD PTR [rax],eax
   140031336:	add    BYTE PTR [rax],al
   140031338:	lock int3 
   14003133a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003134d:	add    BYTE PTR [rax],al
   14003134f:	add    BYTE PTR [rbx+0x6f],al
   140031352:	outs   dx,BYTE PTR ds:[rsi]
   140031353:	jbe    0x1400313ba
   140031355:	jb     0x1400313cb
   140031357:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14003135e:	add    BYTE PTR [rax],al
   140031360:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140031362:	ins    DWORD PTR es:[rdi],dx
   140031363:	jo     0x1400313d7
   140031365:	gs jae 0x1400313db
   140031368:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14003136f:	add    BYTE PTR [rbp+rbp*2+0x70],dh
   140031373:	imul   esp,DWORD PTR fs:[rbx+0x2e],0x706c68
   14003137b:	add    BYTE PTR [rax],al
   14003137d:	add    BYTE PTR [rax],al
   14003137f:	add    BYTE PTR [rbp+rbp*2+0x70],dh
   140031383:	imul   esp,DWORD PTR fs:[rbx+0x2e],0x746164
   14003138b:	add    BYTE PTR [rax],al
   14003138d:	add    BYTE PTR [rax],al
   14003138f:	add    BYTE PTR [rax+0x6c],ch
   140031392:	jo     0x1400313c5
   140031394:	cs push 0x706c
   14003139a:	add    BYTE PTR [rax],al
   14003139c:	add    BYTE PTR [rax],al
   14003139e:	add    BYTE PTR [rax],al
   1400313a0:	push   0x2e32706c
   1400313a5:	push   0x706c
   1400313aa:	add    BYTE PTR [rax],al
   1400313ac:	push   rdi
   1400313ad:	push   rax
   1400313ae:	add    BYTE PTR [r13+r13*2+0x70],sil
   1400313b3:	imul   esp,DWORD PTR fs:[rbx+0x2e],0x637469
   1400313bb:	add    BYTE PTR [rax],al
   1400313bd:	add    BYTE PTR [rax],al
   1400313bf:	add    BYTE PTR [rbx+0x6f],dl
   1400313c2:	jb     0x140031438
   1400313c4:	imul   ebp,DWORD PTR [rsi+0x67],0x706d7400
   1400313cb:	imul   esp,DWORD PTR fs:[rbx+0x2e],0x716e75
	...
   1400313df:	add    BYTE PTR [rbx+0x6f],al
   1400313e2:	ins    BYTE PTR es:[rdi],dx
   1400313e3:	ins    BYTE PTR es:[rdi],dx
   1400313e4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
   1400313e9:	and    BYTE PTR [ebx+0x74],dh
   1400313ed:	(bad)  
   1400313ee:	je     0x140031459
   1400313f0:	jae    0x140031466
   1400313f2:	imul   esp,DWORD PTR [rbx+0x73],0x77000000
   1400313f9:	(bad)  
   1400313fa:	add    BYTE PTR [rax],al
   1400313fc:	add    BYTE PTR [rax],al
   1400313fe:	add    BYTE PTR [rax],al
   140031400:	je     0x14003146f
   140031402:	jo     0x140031435
   140031404:	movsxd ebp,DWORD PTR [rdi+0x64]
   140031407:	cs fs (bad) 
   14003140a:	je     0x14003140c
   14003140c:	add    BYTE PTR [rax],al
   14003140e:	add    BYTE PTR [rax],al
   140031410:	and    eax,0x20783430
   140031415:	and    eax,0x20783430
   14003141a:	and    eax,0x20783430
   14003141f:	and    eax,0x20783430
   140031424:	and    eax,0xd783430
   140031429:	or     al,BYTE PTR [rax]
   14003142b:	add    BYTE PTR [rax],al
   14003142d:	add    BYTE PTR [rax],al
   14003142f:	add    BYTE PTR [rbp+rbp*2+0x70],dh
   140031433:	xor    DWORD PTR [rbx+0x6f],esp
   140031436:	fs cs jae 0x1400314ac
   14003143a:	je     0x14003143c
   14003143c:	add    BYTE PTR [rax],al
   14003143e:	add    BYTE PTR [rax],al
   140031440:	je     0x1400314af
   140031442:	jo     0x140031475
   140031444:	movsxd ebp,DWORD PTR [rdi+0x64]
   140031447:	cs data16 jb 0x1400314be
   14003144b:	add    BYTE PTR [rip+0x783430],ah        # 0x1407b4881
   140031451:	add    BYTE PTR [rax],al
   140031453:	add    BYTE PTR [rax],al
   140031455:	add    BYTE PTR [rax],al
   140031457:	add    BYTE PTR [rbp+rbp*2+0x70],dh
   14003145b:	movsxd esp,DWORD PTR [rcx+0x70]
   14003145e:	cs push 0x706c
   140031464:	add    BYTE PTR [rax],al
   140031466:	add    BYTE PTR [rax],al
   140031468:	je     0x1400314d7
   14003146a:	jo     0x1400314cf
   14003146c:	(bad)  
   14003146d:	jo     0x14003149d
   14003146f:	jne    0x1400314df
   140031471:	jno    0x140031473
   140031473:	add    BYTE PTR [rax],al
   140031475:	add    BYTE PTR [rax],al
   140031477:	add    BYTE PTR [rbp+0x78],al
   14003147a:	je     0x1400314ee
   14003147c:	(bad)  
   14003147d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
   140031481:	add    BYTE PTR [eax],al
   140031484:	add    BYTE PTR [rax],al
   140031486:	add    BYTE PTR [rax],al
   140031488:	je     0x1400314f7
   14003148a:	jo     0x1400314fb
   14003148c:	jne    0x140031502
   14003148e:	cs push 0x706c
   140031494:	add    BYTE PTR [rax],al
   140031496:	add    BYTE PTR [rax],al
   140031498:	push   rdi
   140031499:	push   rsp
   14003149a:	jae    0x14003150c
   14003149c:	and    eax,0x6c642e73
   1400314a1:	ins    BYTE PTR es:[rdi],dx
   1400314a2:	add    BYTE PTR [rax],al
   1400314a4:	add    BYTE PTR [rax],al
   1400314a6:	add    BYTE PTR [rax],al
   1400314a8:	push   rdi
   1400314a9:	push   rsp
   1400314aa:	rex.WR
   1400314ab:	rex.WB
   1400314ac:	cs fs ins BYTE PTR es:[rdi],dx
   1400314af:	ins    BYTE PTR es:[rdi],dx
   1400314b0:	add    BYTE PTR [rax],al
   1400314b2:	add    BYTE PTR [rax],al
   1400314b4:	and    eax,0x57000073
   1400314b9:	push   rsp
   1400314ba:	add    BYTE PTR [rax],al
   1400314bc:	and    eax,0x73255c73
   1400314c1:	add    BYTE PTR [rax],al
   1400314c3:	add    BYTE PTR [rax],al
   1400314c5:	add    BYTE PTR [rax],al
   1400314c7:	add    BYTE PTR [rax+0x59],cl
   1400314ca:	pop    rdi
   1400314cb:	push   rdx
   1400314cc:	push   rcx
   1400314cd:	rex.W (bad) 
   1400314cf:	outs   dx,BYTE PTR ds:[rsi]
   1400314d0:	fs ins BYTE PTR es:[rdi],dx
   1400314d2:	gs jb  0x1400314d5
   1400314d5:	add    BYTE PTR [rax],al
   1400314d7:	add    BYTE PTR [rbx+0x43],al
   1400314da:	pop    rdi
   1400314db:	push   rdx
   1400314dc:	push   rcx
   1400314dd:	rex.W (bad) 
   1400314df:	outs   dx,BYTE PTR ds:[rsi]
   1400314e0:	fs ins BYTE PTR es:[rdi],dx
   1400314e2:	gs jb  0x1400314e5
   1400314e5:	add    BYTE PTR [rax],al
   1400314e7:	add    BYTE PTR [rbx+0x50],dl
   1400314ea:	pop    rdi
   1400314eb:	push   rdx
   1400314ec:	push   rcx
   1400314ed:	rex.W (bad) 
   1400314ef:	outs   dx,BYTE PTR ds:[rsi]
   1400314f0:	fs ins BYTE PTR es:[rdi],dx
   1400314f2:	gs jb  0x1400314f5
   1400314f5:	add    BYTE PTR [rax],al
   1400314f7:	add    BYTE PTR [rbp+0x65],cl
   1400314fa:	jb     0x140031563
   1400314fc:	imul   ebp,DWORD PTR [rsi+0x67],0x6c545700
   140031503:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   140031509:	add    BYTE PTR [rax],al
   14003150b:	add    BYTE PTR [rax],al
   14003150d:	add    BYTE PTR [rax],al
   14003150f:	add    al,dh
   140031511:	(bad)  
   140031512:	add    eax,DWORD PTR [rax+0x1]
   140031515:	add    BYTE PTR [rax],al
   140031517:	add    BYTE PTR [rax+0x14001c2],ah
   14003151d:	add    BYTE PTR [rax],al
   14003151f:	add    BYTE PTR [rax+0x14001c4],ah
   140031525:	add    BYTE PTR [rax],al
   140031527:	add    BYTE PTR [rax+0x11],al
   14003152a:	add    BYTE PTR [rax+0x1],al
   14003152d:	add    BYTE PTR [rax],al
   14003152f:	add    BYTE PTR [rax+0x11],al
   140031532:	add    BYTE PTR [rax+0x1],al
   140031535:	add    BYTE PTR [rax],al
   140031537:	add    BYTE PTR [rax+0x11],al
   14003153a:	add    BYTE PTR [rax+0x1],al
   14003153d:	add    BYTE PTR [rax],al
   14003153f:	add    BYTE PTR [rdx-0x3d],al
   140031542:	add    al,BYTE PTR [rax+0x1]
   140031545:	add    BYTE PTR [rax],al
   140031547:	add    al,dh
   140031549:	(bad)
   14003154c:	add    DWORD PTR [rax],eax
   14003154e:	add    BYTE PTR [rax],al
   140031550:	add    al,0xc2
   140031552:	add    al,BYTE PTR [rax+0x1]
   140031555:	add    BYTE PTR [rax],al
   140031557:	add    dh,bh
   140031559:	rol    DWORD PTR [rdx],0x40
   14003155c:	add    DWORD PTR [rax],eax
   14003155e:	add    BYTE PTR [rax],al
   140031560:	clc    
   140031561:	rol    DWORD PTR [rdx],0x40
   140031564:	add    DWORD PTR [rax],eax
   140031566:	add    BYTE PTR [rax],al
   140031568:	repnz rol DWORD PTR [rdx],0x40
   14003156c:	add    DWORD PTR [rax],eax
   14003156e:	add    BYTE PTR [rax],al
   140031570:	in     al,dx
   140031571:	rol    DWORD PTR [rdx],0x40
   140031574:	add    DWORD PTR [rax],eax
   140031576:	add    BYTE PTR [rax],al
   140031578:	nop
   140031579:	mov    DWORD PTR [rcx],0x140
   14003157f:	add    dh,ah
   140031581:	rol    DWORD PTR [rdx],0x40
   140031584:	add    DWORD PTR [rax],eax
   140031586:	add    BYTE PTR [rax],al
   140031588:	loopne 0x14003154b
   14003158a:	add    al,BYTE PTR [rax+0x1]
   14003158d:	add    BYTE PTR [rax],al
   14003158f:	add    dl,bl
   140031591:	rol    DWORD PTR [rdx],0x40
   140031594:	add    DWORD PTR [rax],eax
   140031596:	add    BYTE PTR [rax],al
   140031598:	cmp    al,ch
   14003159a:	add    al,BYTE PTR [rax+0x1]
   14003159d:	add    BYTE PTR [rax],al
   14003159f:	add    dh,cl
   1400315a1:	rol    DWORD PTR [rdx],0x40
   1400315a4:	add    DWORD PTR [rax],eax
   1400315a6:	add    BYTE PTR [rax],al
   1400315a8:	enter  0x2c1,0x40
   1400315ac:	add    DWORD PTR [rax],eax
   1400315ae:	add    BYTE PTR [rax],al
   1400315b0:	ret    0x2c1
   1400315b3:	rex add DWORD PTR [rax],eax
   1400315b6:	add    BYTE PTR [rax],al
   1400315b8:	mov    esp,0x14002c1
   1400315bd:	add    BYTE PTR [rax],al
   1400315bf:	add    BYTE PTR [rsi+0x14002c1],dh
   1400315c5:	add    BYTE PTR [rax],al
   1400315c7:	add    BYTE PTR [rax+0x14002c5],ah
   1400315cd:	add    BYTE PTR [rax],al
   1400315cf:	add    BYTE PTR [rdx+0x14002c5],bl
   1400315d5:	add    BYTE PTR [rax],al
   1400315d7:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   1400315de:	add    BYTE PTR [rax],al
   1400315e0:	mov    es,ebp
   1400315e2:	add    al,BYTE PTR [rax+0x1]
   1400315e5:	add    BYTE PTR [rax],al
   1400315e7:	add    BYTE PTR [rax+0x14002c5],cl
   1400315ed:	add    BYTE PTR [rax],al
   1400315ef:	add    BYTE PTR [rdx+0x14002c5],al
   1400315f5:	add    BYTE PTR [rax],al
   1400315f7:	add    BYTE PTR [rbp+rax*8+0x2],bh
   1400315fb:	rex add DWORD PTR [rax],eax
   1400315fe:	add    BYTE PTR [rax],al
   140031600:	jbe    0x1400315c7
   140031602:	add    al,BYTE PTR [rax+0x1]
   140031605:	add    BYTE PTR [rax],al
   140031607:	add    BYTE PTR [rax-0x3b],dh
   14003160a:	add    al,BYTE PTR [rax+0x1]
   14003160d:	add    BYTE PTR [rax],al
   14003160f:	add    BYTE PTR [rdx-0x3b],ch
   140031612:	add    al,BYTE PTR [rax+0x1]
   140031615:	add    BYTE PTR [rax],al
   140031617:	add    BYTE PTR [rbp+rax*8+0x2],ah
   14003161b:	rex add DWORD PTR [rax],eax
   14003161e:	add    BYTE PTR [rax],al
   140031620:	pop    rsi
   140031621:	(bad)
   140031624:	add    DWORD PTR [rax],eax
   140031626:	add    BYTE PTR [rax],al
   140031628:	pop    rax
   140031629:	(bad)
   14003162c:	add    DWORD PTR [rax],eax
   14003162e:	add    BYTE PTR [rax],al
   140031630:	push   rdx
   140031631:	(bad)
   140031634:	add    DWORD PTR [rax],eax
   140031636:	add    BYTE PTR [rax],al
   140031638:	(bad)
   14003163c:	add    DWORD PTR [rax],eax
   14003163e:	add    BYTE PTR [rax],al
   140031640:	(bad)
   140031644:	add    DWORD PTR [rax],eax
   140031646:	add    BYTE PTR [rax],al
   140031648:	(bad)
   14003164c:	add    DWORD PTR [rax],eax
   14003164e:	add    BYTE PTR [rax],al
   140031650:	xor    al,0xc5
   140031652:	add    al,BYTE PTR [rax+0x1]
   140031655:	add    BYTE PTR [rax],al
   140031657:	add    BYTE PTR [rsi],ch
   140031659:	(bad)
   14003165c:	add    DWORD PTR [rax],eax
   14003165e:	add    BYTE PTR [rax],al
   140031660:	sub    ch,al
   140031662:	add    al,BYTE PTR [rax+0x1]
   140031665:	add    BYTE PTR [rax],al
   140031667:	add    BYTE PTR [rdx],ah
   140031669:	(bad)
   14003166c:	add    DWORD PTR [rax],eax
   14003166e:	add    BYTE PTR [rax],al
   140031670:	sbb    al,0xc5
   140031672:	add    al,BYTE PTR [rax+0x1]
   140031675:	add    BYTE PTR [rax],al
   140031677:	add    BYTE PTR [rsi],dl
   140031679:	(bad)
   14003167c:	add    DWORD PTR [rax],eax
   14003167e:	add    BYTE PTR [rax],al
   140031680:	adc    ch,al
   140031682:	add    al,BYTE PTR [rax+0x1]
   140031685:	add    BYTE PTR [rax],al
   140031687:	add    BYTE PTR [rdx],cl
   140031689:	(bad)
   14003168c:	add    DWORD PTR [rax],eax
   14003168e:	add    BYTE PTR [rax],al
   140031690:	add    al,0xc5
   140031692:	add    al,BYTE PTR [rax+0x1]
   140031695:	add    BYTE PTR [rax],al
   140031697:	add    dh,bh
   140031699:	(bad)
   14003169d:	add    BYTE PTR [rax],al
   14003169f:	add    al,bh
   1400316a1:	(bad)
   1400316a5:	add    BYTE PTR [rax],al
   1400316a7:	add    dl,dh
   1400316a9:	(bad)
   1400316ad:	add    BYTE PTR [rax],al
   1400316af:	add    ah,ch
   1400316b1:	(bad)
   1400316b5:	add    BYTE PTR [rax],al
   1400316b7:	add    dh,ah
   1400316b9:	(bad)
   1400316bd:	add    BYTE PTR [rax],al
   1400316bf:	add    al,ah
   1400316c1:	(bad)
   1400316c5:	add    BYTE PTR [rax],al
   1400316c7:	add    dl,bl
   1400316c9:	(bad)
   1400316cd:	add    BYTE PTR [rax],al
   1400316cf:	add    ah,dl
   1400316d1:	(bad)
   1400316d5:	add    BYTE PTR [rax],al
   1400316d7:	add    dh,cl
   1400316d9:	(bad)
   1400316dd:	add    BYTE PTR [rax],al
   1400316df:	add    al,cl
   1400316e1:	(bad)
   1400316e5:	add    BYTE PTR [rax],al
   1400316e7:	add    dl,al
   1400316e9:	(bad)
   1400316ed:	add    BYTE PTR [rax],al
   1400316ef:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   1400316f6:	add    BYTE PTR [rax],al
   1400316f8:	mov    dh,0xc4
   1400316fa:	add    al,BYTE PTR [rax+0x1]
   1400316fd:	add    BYTE PTR [rax],al
   1400316ff:	add    BYTE PTR [rax+0x14002c4],dh
   140031705:	add    BYTE PTR [rax],al
   140031707:	add    BYTE PTR [rdx+0x14002c4],ch
   14003170d:	add    BYTE PTR [rax],al
   14003170f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140031716:	add    BYTE PTR [rax],al
   140031718:	rol    bl,cl
   14003171a:	add    al,BYTE PTR [rax+0x1]
   14003171d:	add    BYTE PTR [rax],al
   14003171f:	add    BYTE PTR [rax+0x14002c4],bl
   140031725:	add    BYTE PTR [rax],al
   140031727:	add    BYTE PTR [rax],dl
   140031729:	mov    BYTE PTR [rcx],0x40
   14003172c:	add    DWORD PTR [rax],eax
   14003172e:	add    BYTE PTR [rax],al
   140031730:	loopne 0x1400316f2
   140031732:	add    DWORD PTR [rax+0x1],eax
   140031735:	add    BYTE PTR [rax],al
   140031737:	add    al,dh
   140031739:	rol    BYTE PTR [rcx],0x40
   14003173c:	add    DWORD PTR [rax],eax
   14003173e:	add    BYTE PTR [rax],al
   140031740:	int3   
   140031741:	ret    
   140031742:	add    al,BYTE PTR [rax+0x1]
   140031745:	add    BYTE PTR [rax],al
   140031747:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   14003174e:	add    BYTE PTR [rax],al
   140031750:	sub    al,0xc1
   140031752:	add    al,BYTE PTR [rax+0x1]
   140031755:	add    BYTE PTR [rax],al
   140031757:	add    BYTE PTR [rax+0x14002c4],al
   14003175d:	add    BYTE PTR [rax],al
   14003175f:	add    BYTE PTR [rdx-0x3c],bh
   140031762:	add    al,BYTE PTR [rax+0x1]
   140031765:	add    BYTE PTR [rax],al
   140031767:	add    BYTE PTR [rsp+rax*8+0x2],dh
   14003176b:	rex add DWORD PTR [rax],eax
   14003176e:	add    BYTE PTR [rax],al
   140031770:	outs   dx,BYTE PTR ds:[rsi]
   140031771:	(bad)
   140031775:	add    BYTE PTR [rax],al
   140031777:	add    BYTE PTR [rax-0x3c],ch
   14003177a:	add    al,BYTE PTR [rax+0x1]
   14003177d:	add    BYTE PTR [rax],al
   14003177f:	add    BYTE PTR [rdx-0x3c],ah
   140031782:	add    al,BYTE PTR [rax+0x1]
   140031785:	add    BYTE PTR [rax],al
   140031787:	add    BYTE PTR [rsp+rax*8+0x2],bl
   14003178b:	rex add DWORD PTR [rax],eax
   14003178e:	add    BYTE PTR [rax],al
   140031790:	push   rsi
   140031791:	(bad)
   140031795:	add    BYTE PTR [rax],al
   140031797:	add    BYTE PTR [rax-0x3c],dl
   14003179a:	add    al,BYTE PTR [rax+0x1]
   14003179d:	add    BYTE PTR [rax],al
   14003179f:	add    BYTE PTR [rdx-0x3c],cl
   1400317a2:	add    al,BYTE PTR [rax+0x1]
   1400317a5:	add    BYTE PTR [rax],al
   1400317a7:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400317ab:	rex add DWORD PTR [rax],eax
   1400317ae:	add    BYTE PTR [rax],al
   1400317b0:	(bad)
   1400317b5:	add    BYTE PTR [rax],al
   1400317b7:	add    BYTE PTR [rbx+rax*8],bh
   1400317ba:	add    al,BYTE PTR [rax+0x1]
   1400317bd:	add    BYTE PTR [rax],al
   1400317bf:	add    BYTE PTR [rdx],dh
   1400317c1:	(bad)
   1400317c5:	add    BYTE PTR [rax],al
   1400317c7:	add    BYTE PTR [rsi],ah
   1400317c9:	(bad)
   1400317cd:	add    BYTE PTR [rax],al
   1400317cf:	add    BYTE PTR [rax],ah
   1400317d1:	(bad)
   1400317d5:	add    BYTE PTR [rax],al
   1400317d7:	add    BYTE PTR [rsi],dh
   1400317d9:	ret    
   1400317da:	add    al,BYTE PTR [rax+0x1]
   1400317dd:	add    BYTE PTR [rax],al
   1400317df:	add    BYTE PTR [rax],dh
   1400317e1:	ret    
   1400317e2:	add    al,BYTE PTR [rax+0x1]
   1400317e5:	add    BYTE PTR [rax],al
   1400317e7:	add    BYTE PTR [rax],al
   1400317e9:	rol    DWORD PTR [rcx],0x40
   1400317ec:	add    DWORD PTR [rax],eax
   1400317ee:	add    BYTE PTR [rax],al
   1400317f0:	(bad)  
   1400317f1:	ret    
   1400317f2:	add    al,BYTE PTR [rax+0x1]
   1400317f5:	add    BYTE PTR [rax],al
   1400317f7:	add    BYTE PTR [rdx-0x3d],bl
   1400317fa:	add    al,BYTE PTR [rax+0x1]
   1400317fd:	add    BYTE PTR [rax],al
   1400317ff:	add    BYTE PTR [rbx+rax*8+0x2],dl
   140031803:	rex add DWORD PTR [rax],eax
   140031806:	add    BYTE PTR [rax],al
   140031808:	rex.WRX ret 
   14003180a:	add    al,BYTE PTR [rax+0x1]
   14003180d:	add    BYTE PTR [rax],al
   14003180f:	add    BYTE PTR [rax+0x14001c7],ah
   140031815:	add    BYTE PTR [rax],al
   140031817:	add    BYTE PTR [rax-0x3d],cl
   14003181a:	add    al,BYTE PTR [rax+0x1]
   14003181d:	add    BYTE PTR [rax],al
   14003181f:	add    BYTE PTR [rax],ah
   140031821:	retf   0x4001
   140031824:	add    DWORD PTR [rax],eax
   140031826:	add    BYTE PTR [rax],al
   140031828:	adc    cl,bl
   14003182a:	add    DWORD PTR [rax+0x1],eax
   14003182d:	add    BYTE PTR [rax],al
   14003182f:	add    BYTE PTR [rdx],ch
   140031831:	ret    
   140031832:	add    al,BYTE PTR [rax+0x1]
   140031835:	add    BYTE PTR [rax],al
   140031837:	add    BYTE PTR [rax],cl
   140031839:	(bad)
   14003183d:	add    BYTE PTR [rax],al
   14003183f:	add    BYTE PTR [rdx],al
   140031841:	(bad)
   140031845:	add    BYTE PTR [rax],al
   140031847:	add    BYTE PTR [rdx],dh
   140031849:	rol    DWORD PTR [rdx],0x40
   14003184c:	add    DWORD PTR [rax],eax
   14003184e:	add    BYTE PTR [rax],al
   140031850:	cld    
   140031851:	ret    
   140031852:	add    al,BYTE PTR [rax+0x1]
   140031855:	add    BYTE PTR [rax],al
   140031857:	add    dh,dh
   140031859:	ret    
   14003185a:	add    al,BYTE PTR [rax+0x1]
   14003185d:	add    BYTE PTR [rax],al
   14003185f:	add    al,dh
   140031861:	ret    
   140031862:	add    al,BYTE PTR [rax+0x1]
   140031865:	add    BYTE PTR [rax],al
   140031867:	add    dl,ch
   140031869:	ret    
   14003186a:	add    al,BYTE PTR [rax+0x1]
   14003186d:	add    BYTE PTR [rax],al
   14003186f:	add    ah,ah
   140031871:	ret    
   140031872:	add    al,BYTE PTR [rax+0x1]
   140031875:	add    BYTE PTR [rax],al
   140031877:	add    dh,bl
   140031879:	ret    
   14003187a:	add    al,BYTE PTR [rax+0x1]
   14003187d:	add    BYTE PTR [rax],al
   14003187f:	add    al,bl
   140031881:	ret    
   140031882:	add    al,BYTE PTR [rax+0x1]
	...
   14003188d:	add    BYTE PTR [rax],al
   14003188f:	add    BYTE PTR [rcx],dl
   140031891:	add    DWORD PTR [rax],eax
   140031893:	add    BYTE PTR [rax],al
   140031895:	add    BYTE PTR [rax],al
   140031897:	add    dh,bh
   140031899:	add    eax,DWORD PTR [rax]
   14003189b:	add    dh,bh
   14003189d:	add    eax,DWORD PTR [rax]
   14003189f:	add    BYTE PTR [rdx],bh
   1400318a1:	add    BYTE PTR [rax],al
   1400318a3:	add    BYTE PTR [rax],al
   1400318a5:	add    BYTE PTR [rax],al
   1400318a7:	add    al,ah
   1400318a9:	enter  0x4001,0x1
   1400318ad:	add    BYTE PTR [rax],al
   1400318af:	add    BYTE PTR [rcx],dl
   1400318b1:	add    DWORD PTR [rax],eax
   1400318b3:	add    BYTE PTR [rax],al
   1400318b5:	add    eax,DWORD PTR [rax]
   1400318b7:	add    ch,bh
   1400318b9:	add    eax,DWORD PTR [rax]
   1400318bb:	add    ch,bh
   1400318bd:	add    eax,DWORD PTR [rax]
   1400318bf:	add    BYTE PTR [rdx],bh
   1400318c1:	add    BYTE PTR [rax],al
   1400318c3:	add    BYTE PTR [rax],al
   1400318c5:	add    BYTE PTR [rax],al
   1400318c7:	add    BYTE PTR [rax+0x14001db],ah
   1400318cd:	add    BYTE PTR [rax],al
   1400318cf:	add    BYTE PTR [rcx],dl
   1400318d1:	add    DWORD PTR [rax],eax
   1400318d3:	add    BYTE PTR [rax],al
   1400318d5:	add    eax,DWORD PTR [rax]
   1400318d7:	add    BYTE PTR [rsp+rax*1],al
   1400318da:	add    BYTE PTR [rax],al
   1400318dc:	add    al,0x4
   1400318de:	add    BYTE PTR [rax],al
   1400318e0:	cmp    al,BYTE PTR [rax]
   1400318e2:	add    BYTE PTR [rax],al
   1400318e4:	add    BYTE PTR [rax],al
   1400318e6:	add    BYTE PTR [rax],al
   1400318e8:	adc    ah,bl
   1400318ea:	add    DWORD PTR [rax+0x1],eax
   1400318ed:	add    BYTE PTR [rax],al
   1400318ef:	add    BYTE PTR [rcx],dl
   1400318f1:	add    DWORD PTR [rax],eax
   1400318f3:	add    BYTE PTR [rdx],al
   1400318f5:	add    BYTE PTR [rax],al
   1400318f7:	add    ah,ch
   1400318f9:	add    eax,DWORD PTR [rax]
   1400318fb:	add    ah,ch
   1400318fd:	add    eax,DWORD PTR [rax]
   1400318ff:	add    BYTE PTR [rdx],bh
   140031901:	add    BYTE PTR [rax],al
   140031903:	add    BYTE PTR [rax],al
   140031905:	add    BYTE PTR [rax],al
   140031907:	add    al,dh
   140031909:	fild   WORD PTR [rcx]
   14003190b:	rex add DWORD PTR [rax],eax
   14003190e:	add    BYTE PTR [rax],al
   140031910:	adc    DWORD PTR [rcx],eax
   140031912:	add    BYTE PTR [rax],al
   140031914:	add    BYTE PTR [rax],al
   140031916:	add    BYTE PTR [rax],al
   140031918:	adc    eax,DWORD PTR [rax+rax*1]
   14003191b:	add    BYTE PTR [rbx],dl
   14003191d:	add    al,0x0
   14003191f:	add    BYTE PTR [rdx],bh
   140031921:	add    BYTE PTR [rax],al
   140031923:	add    BYTE PTR [rax],al
   140031925:	add    BYTE PTR [rax],al
   140031927:	add    BYTE PTR [rax-0x2f],al
   14003192a:	add    DWORD PTR [rax+0x1],eax
   14003192d:	add    BYTE PTR [rax],al
   14003192f:	add    BYTE PTR [rcx],dl
   140031931:	add    DWORD PTR [rax],eax
   140031933:	add    BYTE PTR [rax+rax*1],al
   140031936:	add    BYTE PTR [rax],al
   140031938:	in     al,dx
   140031939:	add    eax,DWORD PTR [rax]
   14003193b:	add    ah,ch
   14003193d:	add    eax,DWORD PTR [rax]
   14003193f:	add    BYTE PTR [rdx],bh
   140031941:	add    BYTE PTR [rax],al
   140031943:	add    BYTE PTR [rax],al
   140031945:	add    BYTE PTR [rax],al
   140031947:	add    BYTE PTR [rax],dh
   140031949:	loopne 0x14003194c
   14003194b:	rex add DWORD PTR [rax],eax
   14003194e:	add    BYTE PTR [rax],al
   140031950:	adc    DWORD PTR [rcx],eax
   140031952:	add    BYTE PTR [rax],al
   140031954:	add    BYTE PTR [rcx],al
   140031956:	add    BYTE PTR [rax],al
   140031958:	add    al,0x4
   14003195a:	add    BYTE PTR [rax],al
   14003195c:	add    al,0x4
   14003195e:	add    BYTE PTR [rax],al
   140031960:	cmp    al,BYTE PTR [rax]
   140031962:	add    BYTE PTR [rax],al
   140031964:	add    BYTE PTR [rax],al
   140031966:	add    BYTE PTR [rax],al
   140031968:	movabs al,ds:0x14001e0
	...
   14003198d:	add    BYTE PTR [rax],al
   14003198f:	add    BYTE PTR [rax+0x60],bh
   140031992:	add    eax,DWORD PTR [rax+0x1]
   140031995:	add    BYTE PTR [rax],al
   140031997:	add    BYTE PTR [rdx+0x14002c3],cl
   14003199d:	add    BYTE PTR [rax],al
   14003199f:	add    BYTE PTR [rax],dl
   1400319a1:	ret    0x4001
   1400319a4:	add    DWORD PTR [rax],eax
   1400319a6:	add    BYTE PTR [rax],al
   1400319a8:	rex adc DWORD PTR [rax],eax
   1400319ab:	rex add DWORD PTR [rax],eax
   1400319ae:	add    BYTE PTR [rax],al
   1400319b0:	rex adc DWORD PTR [rax],eax
   1400319b3:	rex add DWORD PTR [rax],eax
   1400319b6:	add    BYTE PTR [rax],al
   1400319b8:	rex adc DWORD PTR [rax],eax
   1400319bb:	rex add DWORD PTR [rax],eax
   1400319be:	add    BYTE PTR [rax],al
   1400319c0:	adc    dl,al
   1400319c2:	add    al,BYTE PTR [rax+0x1]
   1400319c5:	add    BYTE PTR [rax],al
   1400319c7:	add    BYTE PTR [rsp+rax*8],ch
   1400319ca:	add    al,BYTE PTR [rax+0x1]
   1400319cd:	add    BYTE PTR [rax],al
   1400319cf:	add    BYTE PTR [rdx+rax*8],al
   1400319d2:	add    al,BYTE PTR [rax+0x1]
   1400319d5:	add    BYTE PTR [rax],al
   1400319d7:	add    dh,bh
   1400319d9:	rol    DWORD PTR [rdx],0x40
   1400319dc:	add    DWORD PTR [rax],eax
   1400319de:	add    BYTE PTR [rax],al
   1400319e0:	clc    
   1400319e1:	rol    DWORD PTR [rdx],0x40
   1400319e4:	add    DWORD PTR [rax],eax
   1400319e6:	add    BYTE PTR [rax],al
   1400319e8:	repnz rol DWORD PTR [rdx],0x40
   1400319ec:	add    DWORD PTR [rax],eax
   1400319ee:	add    BYTE PTR [rax],al
   1400319f0:	in     al,dx
   1400319f1:	rol    DWORD PTR [rdx],0x40
   1400319f4:	add    DWORD PTR [rax],eax
   1400319f6:	add    BYTE PTR [rax],al
   1400319f8:	(bad)  
   1400319f9:	(bad)
   1400319fd:	add    BYTE PTR [rax],al
   1400319ff:	add    dh,ah
   140031a01:	rol    DWORD PTR [rdx],0x40
   140031a04:	add    DWORD PTR [rax],eax
   140031a06:	add    BYTE PTR [rax],al
   140031a08:	loopne 0x1400319cb
   140031a0a:	add    al,BYTE PTR [rax+0x1]
   140031a0d:	add    BYTE PTR [rax],al
   140031a0f:	add    dl,bl
   140031a11:	rol    DWORD PTR [rdx],0x40
   140031a14:	add    DWORD PTR [rax],eax
   140031a16:	add    BYTE PTR [rax],al
   140031a18:	cmp    al,ch
   140031a1a:	add    al,BYTE PTR [rax+0x1]
   140031a1d:	add    BYTE PTR [rax],al
   140031a1f:	add    dh,cl
   140031a21:	rol    DWORD PTR [rdx],0x40
   140031a24:	add    DWORD PTR [rax],eax
   140031a26:	add    BYTE PTR [rax],al
   140031a28:	enter  0x2c1,0x40
   140031a2c:	add    DWORD PTR [rax],eax
   140031a2e:	add    BYTE PTR [rax],al
   140031a30:	ret    0x2c1
   140031a33:	rex add DWORD PTR [rax],eax
   140031a36:	add    BYTE PTR [rax],al
   140031a38:	mov    esp,0x14002c1
   140031a3d:	add    BYTE PTR [rax],al
   140031a3f:	add    BYTE PTR [rsi+0x14002c1],dh
   140031a45:	add    BYTE PTR [rax],al
   140031a47:	add    BYTE PTR [rax+0x14002c5],ah
   140031a4d:	add    BYTE PTR [rax],al
   140031a4f:	add    BYTE PTR [rdx+0x14002c5],bl
   140031a55:	add    BYTE PTR [rax],al
   140031a57:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140031a5e:	add    BYTE PTR [rax],al
   140031a60:	mov    es,ebp
   140031a62:	add    al,BYTE PTR [rax+0x1]
   140031a65:	add    BYTE PTR [rax],al
   140031a67:	add    BYTE PTR [rax+0x14002c5],cl
   140031a6d:	add    BYTE PTR [rax],al
   140031a6f:	add    BYTE PTR [rdx+0x14002c5],al
   140031a75:	add    BYTE PTR [rax],al
   140031a77:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140031a7b:	rex add DWORD PTR [rax],eax
   140031a7e:	add    BYTE PTR [rax],al
   140031a80:	jbe    0x140031a47
   140031a82:	add    al,BYTE PTR [rax+0x1]
   140031a85:	add    BYTE PTR [rax],al
   140031a87:	add    BYTE PTR [rax-0x3b],dh
   140031a8a:	add    al,BYTE PTR [rax+0x1]
   140031a8d:	add    BYTE PTR [rax],al
   140031a8f:	add    BYTE PTR [rdx-0x3b],ch
   140031a92:	add    al,BYTE PTR [rax+0x1]
   140031a95:	add    BYTE PTR [rax],al
   140031a97:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140031a9b:	rex add DWORD PTR [rax],eax
   140031a9e:	add    BYTE PTR [rax],al
   140031aa0:	pop    rsi
   140031aa1:	(bad)
   140031aa4:	add    DWORD PTR [rax],eax
   140031aa6:	add    BYTE PTR [rax],al
   140031aa8:	pop    rax
   140031aa9:	(bad)
   140031aac:	add    DWORD PTR [rax],eax
   140031aae:	add    BYTE PTR [rax],al
   140031ab0:	push   rdx
   140031ab1:	(bad)
   140031ab4:	add    DWORD PTR [rax],eax
   140031ab6:	add    BYTE PTR [rax],al
   140031ab8:	(bad)
   140031abc:	add    DWORD PTR [rax],eax
   140031abe:	add    BYTE PTR [rax],al
   140031ac0:	(bad)
   140031ac4:	add    DWORD PTR [rax],eax
   140031ac6:	add    BYTE PTR [rax],al
   140031ac8:	(bad)
   140031acc:	add    DWORD PTR [rax],eax
   140031ace:	add    BYTE PTR [rax],al
   140031ad0:	xor    al,0xc5
   140031ad2:	add    al,BYTE PTR [rax+0x1]
   140031ad5:	add    BYTE PTR [rax],al
   140031ad7:	add    BYTE PTR [rsi],ch
   140031ad9:	(bad)
   140031adc:	add    DWORD PTR [rax],eax
   140031ade:	add    BYTE PTR [rax],al
   140031ae0:	sub    ch,al
   140031ae2:	add    al,BYTE PTR [rax+0x1]
   140031ae5:	add    BYTE PTR [rax],al
   140031ae7:	add    BYTE PTR [rdx],ah
   140031ae9:	(bad)
   140031aec:	add    DWORD PTR [rax],eax
   140031aee:	add    BYTE PTR [rax],al
   140031af0:	sbb    al,0xc5
   140031af2:	add    al,BYTE PTR [rax+0x1]
   140031af5:	add    BYTE PTR [rax],al
   140031af7:	add    BYTE PTR [rsi],dl
   140031af9:	(bad)
   140031afc:	add    DWORD PTR [rax],eax
   140031afe:	add    BYTE PTR [rax],al
   140031b00:	adc    ch,al
   140031b02:	add    al,BYTE PTR [rax+0x1]
   140031b05:	add    BYTE PTR [rax],al
   140031b07:	add    BYTE PTR [rdx],cl
   140031b09:	(bad)
   140031b0c:	add    DWORD PTR [rax],eax
   140031b0e:	add    BYTE PTR [rax],al
   140031b10:	add    al,0xc5
   140031b12:	add    al,BYTE PTR [rax+0x1]
   140031b15:	add    BYTE PTR [rax],al
   140031b17:	add    dh,bh
   140031b19:	(bad)
   140031b1d:	add    BYTE PTR [rax],al
   140031b1f:	add    al,bh
   140031b21:	(bad)
   140031b25:	add    BYTE PTR [rax],al
   140031b27:	add    dl,dh
   140031b29:	(bad)
   140031b2d:	add    BYTE PTR [rax],al
   140031b2f:	add    ah,ch
   140031b31:	(bad)
   140031b35:	add    BYTE PTR [rax],al
   140031b37:	add    dh,ah
   140031b39:	(bad)
   140031b3d:	add    BYTE PTR [rax],al
   140031b3f:	add    al,ah
   140031b41:	(bad)
   140031b45:	add    BYTE PTR [rax],al
   140031b47:	add    dl,bl
   140031b49:	(bad)
   140031b4d:	add    BYTE PTR [rax],al
   140031b4f:	add    ah,dl
   140031b51:	(bad)
   140031b55:	add    BYTE PTR [rax],al
   140031b57:	add    dh,cl
   140031b59:	(bad)
   140031b5d:	add    BYTE PTR [rax],al
   140031b5f:	add    al,cl
   140031b61:	(bad)
   140031b65:	add    BYTE PTR [rax],al
   140031b67:	add    dl,al
   140031b69:	(bad)
   140031b6d:	add    BYTE PTR [rax],al
   140031b6f:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140031b76:	add    BYTE PTR [rax],al
   140031b78:	mov    dh,0xc4
   140031b7a:	add    al,BYTE PTR [rax+0x1]
   140031b7d:	add    BYTE PTR [rax],al
   140031b7f:	add    BYTE PTR [rax+0x14002c4],dh
   140031b85:	add    BYTE PTR [rax],al
   140031b87:	add    BYTE PTR [rdx+0x14002c4],ch
   140031b8d:	add    BYTE PTR [rax],al
   140031b8f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140031b96:	add    BYTE PTR [rax],al
   140031b98:	sahf   
   140031b99:	(bad)
   140031b9d:	add    BYTE PTR [rax],al
   140031b9f:	add    BYTE PTR [rax+0x14002c4],bl
   140031ba5:	add    BYTE PTR [rax],al
   140031ba7:	add    BYTE PTR [rax+0x11],al
   140031baa:	add    BYTE PTR [rax+0x1],al
   140031bad:	add    BYTE PTR [rax],al
   140031baf:	add    al,ah
   140031bb1:	rol    BYTE PTR [rcx],0x40
   140031bb4:	add    DWORD PTR [rax],eax
   140031bb6:	add    BYTE PTR [rax],al
   140031bb8:	lock rol BYTE PTR [rcx],0x40
   140031bbc:	add    DWORD PTR [rax],eax
   140031bbe:	add    BYTE PTR [rax],al
   140031bc0:	xchg   edx,eax
   140031bc1:	(bad)
   140031bc5:	add    BYTE PTR [rax],al
   140031bc7:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140031bce:	add    BYTE PTR [rax],al
   140031bd0:	xchg   ah,al
   140031bd2:	add    al,BYTE PTR [rax+0x1]
   140031bd5:	add    BYTE PTR [rax],al
   140031bd7:	add    BYTE PTR [rax+0x14002c4],al
   140031bdd:	add    BYTE PTR [rax],al
   140031bdf:	add    BYTE PTR [rdx-0x3c],bh
   140031be2:	add    al,BYTE PTR [rax+0x1]
   140031be5:	add    BYTE PTR [rax],al
   140031be7:	add    BYTE PTR [rsp+rax*8+0x2],dh
   140031beb:	rex add DWORD PTR [rax],eax
   140031bee:	add    BYTE PTR [rax],al
   140031bf0:	outs   dx,BYTE PTR ds:[rsi]
   140031bf1:	(bad)
   140031bf5:	add    BYTE PTR [rax],al
   140031bf7:	add    BYTE PTR [rax-0x3c],ch
   140031bfa:	add    al,BYTE PTR [rax+0x1]
   140031bfd:	add    BYTE PTR [rax],al
   140031bff:	add    BYTE PTR [rdx-0x3c],ah
   140031c02:	add    al,BYTE PTR [rax+0x1]
   140031c05:	add    BYTE PTR [rax],al
   140031c07:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140031c0b:	rex add DWORD PTR [rax],eax
   140031c0e:	add    BYTE PTR [rax],al
   140031c10:	push   rsi
   140031c11:	(bad)
   140031c15:	add    BYTE PTR [rax],al
   140031c17:	add    BYTE PTR [rax-0x3c],dl
   140031c1a:	add    al,BYTE PTR [rax+0x1]
   140031c1d:	add    BYTE PTR [rax],al
   140031c1f:	add    BYTE PTR [rdx-0x3c],cl
   140031c22:	add    al,BYTE PTR [rax+0x1]
   140031c25:	add    BYTE PTR [rax],al
   140031c27:	add    BYTE PTR [rsp+rax*8+0x2],al
   140031c2b:	rex add DWORD PTR [rax],eax
   140031c2e:	add    BYTE PTR [rax],al
   140031c30:	(bad)
   140031c35:	add    BYTE PTR [rax],al
   140031c37:	add    BYTE PTR [rax],bh
   140031c39:	(bad)
   140031c3d:	add    BYTE PTR [rax],al
   140031c3f:	add    BYTE PTR [rdx],dh
   140031c41:	(bad)
   140031c45:	add    BYTE PTR [rax],al
   140031c47:	add    BYTE PTR [rsi],ah
   140031c49:	(bad)
   140031c4d:	add    BYTE PTR [rax],al
   140031c4f:	add    BYTE PTR [rax],ah
   140031c51:	(bad)
   140031c55:	add    BYTE PTR [rax],al
   140031c57:	add    BYTE PTR [rdx],bl
   140031c59:	(bad)
   140031c5d:	add    BYTE PTR [rax],al
   140031c5f:	add    BYTE PTR [rsp+rax*8],dl
   140031c62:	add    al,BYTE PTR [rax+0x1]
   140031c65:	add    BYTE PTR [rax],al
   140031c67:	add    BYTE PTR [rbx+rax*8+0x14002],al
   140031c6e:	add    BYTE PTR [rax],al
   140031c70:	jle    0x140031c35
   140031c72:	add    al,BYTE PTR [rax+0x1]
   140031c75:	add    BYTE PTR [rax],al
   140031c77:	add    BYTE PTR [rax],dh
   140031c79:	pop    rbp
   140031c7a:	add    eax,DWORD PTR [rax+0x1]
   140031c7d:	add    BYTE PTR [rax],al
   140031c7f:	add    BYTE PTR [rax-0x3d],bh
   140031c82:	add    al,BYTE PTR [rax+0x1]
   140031c85:	add    BYTE PTR [rax],al
   140031c87:	add    BYTE PTR [rax],dl
   140031c89:	rol    DWORD PTR [rcx],0x40
   140031c8c:	add    DWORD PTR [rax],eax
   140031c8e:	add    BYTE PTR [rax],al
   140031c90:	rex adc DWORD PTR [rax],eax
   140031c93:	rex add DWORD PTR [rax],eax
   140031c96:	add    BYTE PTR [rax],al
   140031c98:	rex adc DWORD PTR [rax],eax
   140031c9b:	rex add DWORD PTR [rax],eax
   140031c9e:	add    BYTE PTR [rax],al
   140031ca0:	rex adc DWORD PTR [rax],eax
   140031ca3:	rex add DWORD PTR [rax],eax
   140031ca6:	add    BYTE PTR [rax],al
   140031ca8:	adc    dl,al
   140031caa:	add    al,BYTE PTR [rax+0x1]
   140031cad:	add    BYTE PTR [rax],al
   140031caf:	add    BYTE PTR [rsp+rax*8],ch
   140031cb2:	add    al,BYTE PTR [rax+0x1]
   140031cb5:	add    BYTE PTR [rax],al
   140031cb7:	add    BYTE PTR [rdx+rax*8],al
   140031cba:	add    al,BYTE PTR [rax+0x1]
   140031cbd:	add    BYTE PTR [rax],al
   140031cbf:	add    dh,bh
   140031cc1:	rol    DWORD PTR [rdx],0x40
   140031cc4:	add    DWORD PTR [rax],eax
   140031cc6:	add    BYTE PTR [rax],al
   140031cc8:	clc    
   140031cc9:	rol    DWORD PTR [rdx],0x40
   140031ccc:	add    DWORD PTR [rax],eax
   140031cce:	add    BYTE PTR [rax],al
   140031cd0:	repnz rol DWORD PTR [rdx],0x40
   140031cd4:	add    DWORD PTR [rax],eax
   140031cd6:	add    BYTE PTR [rax],al
   140031cd8:	in     al,dx
   140031cd9:	rol    DWORD PTR [rdx],0x40
   140031cdc:	add    DWORD PTR [rax],eax
   140031cde:	add    BYTE PTR [rax],al
   140031ce0:	(bad)  
   140031ce1:	(bad)
   140031ce5:	add    BYTE PTR [rax],al
   140031ce7:	add    dh,ah
   140031ce9:	rol    DWORD PTR [rdx],0x40
   140031cec:	add    DWORD PTR [rax],eax
   140031cee:	add    BYTE PTR [rax],al
   140031cf0:	loopne 0x140031cb3
   140031cf2:	add    al,BYTE PTR [rax+0x1]
   140031cf5:	add    BYTE PTR [rax],al
   140031cf7:	add    dl,bl
   140031cf9:	rol    DWORD PTR [rdx],0x40
   140031cfc:	add    DWORD PTR [rax],eax
   140031cfe:	add    BYTE PTR [rax],al
   140031d00:	cmp    al,ch
   140031d02:	add    al,BYTE PTR [rax+0x1]
   140031d05:	add    BYTE PTR [rax],al
   140031d07:	add    dh,cl
   140031d09:	rol    DWORD PTR [rdx],0x40
   140031d0c:	add    DWORD PTR [rax],eax
   140031d0e:	add    BYTE PTR [rax],al
   140031d10:	enter  0x2c1,0x40
   140031d14:	add    DWORD PTR [rax],eax
   140031d16:	add    BYTE PTR [rax],al
   140031d18:	ret    0x2c1
   140031d1b:	rex add DWORD PTR [rax],eax
   140031d1e:	add    BYTE PTR [rax],al
   140031d20:	mov    esp,0x14002c1
   140031d25:	add    BYTE PTR [rax],al
   140031d27:	add    BYTE PTR [rsi+0x14002c1],dh
   140031d2d:	add    BYTE PTR [rax],al
   140031d2f:	add    BYTE PTR [rax+0x14002c5],ah
   140031d35:	add    BYTE PTR [rax],al
   140031d37:	add    BYTE PTR [rdx+0x14002c5],bl
   140031d3d:	add    BYTE PTR [rax],al
   140031d3f:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140031d46:	add    BYTE PTR [rax],al
   140031d48:	mov    es,ebp
   140031d4a:	add    al,BYTE PTR [rax+0x1]
   140031d4d:	add    BYTE PTR [rax],al
   140031d4f:	add    BYTE PTR [rax+0x14002c5],cl
   140031d55:	add    BYTE PTR [rax],al
   140031d57:	add    BYTE PTR [rdx+0x14002c5],al
   140031d5d:	add    BYTE PTR [rax],al
   140031d5f:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140031d63:	rex add DWORD PTR [rax],eax
   140031d66:	add    BYTE PTR [rax],al
   140031d68:	jbe    0x140031d2f
   140031d6a:	add    al,BYTE PTR [rax+0x1]
   140031d6d:	add    BYTE PTR [rax],al
   140031d6f:	add    BYTE PTR [rax-0x3b],dh
   140031d72:	add    al,BYTE PTR [rax+0x1]
   140031d75:	add    BYTE PTR [rax],al
   140031d77:	add    BYTE PTR [rdx-0x3b],ch
   140031d7a:	add    al,BYTE PTR [rax+0x1]
   140031d7d:	add    BYTE PTR [rax],al
   140031d7f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140031d83:	rex add DWORD PTR [rax],eax
   140031d86:	add    BYTE PTR [rax],al
   140031d88:	pop    rsi
   140031d89:	(bad)
   140031d8c:	add    DWORD PTR [rax],eax
   140031d8e:	add    BYTE PTR [rax],al
   140031d90:	pop    rax
   140031d91:	(bad)
   140031d94:	add    DWORD PTR [rax],eax
   140031d96:	add    BYTE PTR [rax],al
   140031d98:	push   rdx
   140031d99:	(bad)
   140031d9c:	add    DWORD PTR [rax],eax
   140031d9e:	add    BYTE PTR [rax],al
   140031da0:	(bad)
   140031da4:	add    DWORD PTR [rax],eax
   140031da6:	add    BYTE PTR [rax],al
   140031da8:	(bad)
   140031dac:	add    DWORD PTR [rax],eax
   140031dae:	add    BYTE PTR [rax],al
   140031db0:	(bad)
   140031db4:	add    DWORD PTR [rax],eax
   140031db6:	add    BYTE PTR [rax],al
   140031db8:	xor    al,0xc5
   140031dba:	add    al,BYTE PTR [rax+0x1]
   140031dbd:	add    BYTE PTR [rax],al
   140031dbf:	add    BYTE PTR [rsi],ch
   140031dc1:	(bad)
   140031dc4:	add    DWORD PTR [rax],eax
   140031dc6:	add    BYTE PTR [rax],al
   140031dc8:	sub    ch,al
   140031dca:	add    al,BYTE PTR [rax+0x1]
   140031dcd:	add    BYTE PTR [rax],al
   140031dcf:	add    BYTE PTR [rdx],ah
   140031dd1:	(bad)
   140031dd4:	add    DWORD PTR [rax],eax
   140031dd6:	add    BYTE PTR [rax],al
   140031dd8:	sbb    al,0xc5
   140031dda:	add    al,BYTE PTR [rax+0x1]
   140031ddd:	add    BYTE PTR [rax],al
   140031ddf:	add    BYTE PTR [rsi],dl
   140031de1:	(bad)
   140031de4:	add    DWORD PTR [rax],eax
   140031de6:	add    BYTE PTR [rax],al
   140031de8:	adc    ch,al
   140031dea:	add    al,BYTE PTR [rax+0x1]
   140031ded:	add    BYTE PTR [rax],al
   140031def:	add    BYTE PTR [rdx],cl
   140031df1:	(bad)
   140031df4:	add    DWORD PTR [rax],eax
   140031df6:	add    BYTE PTR [rax],al
   140031df8:	add    al,0xc5
   140031dfa:	add    al,BYTE PTR [rax+0x1]
   140031dfd:	add    BYTE PTR [rax],al
   140031dff:	add    dh,bh
   140031e01:	(bad)
   140031e05:	add    BYTE PTR [rax],al
   140031e07:	add    al,bh
   140031e09:	(bad)
   140031e0d:	add    BYTE PTR [rax],al
   140031e0f:	add    dl,dh
   140031e11:	(bad)
   140031e15:	add    BYTE PTR [rax],al
   140031e17:	add    ah,ch
   140031e19:	(bad)
   140031e1d:	add    BYTE PTR [rax],al
   140031e1f:	add    dh,ah
   140031e21:	(bad)
   140031e25:	add    BYTE PTR [rax],al
   140031e27:	add    al,ah
   140031e29:	(bad)
   140031e2d:	add    BYTE PTR [rax],al
   140031e2f:	add    dl,bl
   140031e31:	(bad)
   140031e35:	add    BYTE PTR [rax],al
   140031e37:	add    ah,dl
   140031e39:	(bad)
   140031e3d:	add    BYTE PTR [rax],al
   140031e3f:	add    dh,cl
   140031e41:	(bad)
   140031e45:	add    BYTE PTR [rax],al
   140031e47:	add    al,cl
   140031e49:	(bad)
   140031e4d:	add    BYTE PTR [rax],al
   140031e4f:	add    dl,al
   140031e51:	(bad)
   140031e55:	add    BYTE PTR [rax],al
   140031e57:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140031e5e:	add    BYTE PTR [rax],al
   140031e60:	mov    dh,0xc4
   140031e62:	add    al,BYTE PTR [rax+0x1]
   140031e65:	add    BYTE PTR [rax],al
   140031e67:	add    BYTE PTR [rax+0x14002c4],dh
   140031e6d:	add    BYTE PTR [rax],al
   140031e6f:	add    BYTE PTR [rdx+0x14002c4],ch
   140031e75:	add    BYTE PTR [rax],al
   140031e77:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140031e7e:	add    BYTE PTR [rax],al
   140031e80:	sahf   
   140031e81:	(bad)
   140031e85:	add    BYTE PTR [rax],al
   140031e87:	add    BYTE PTR [rax+0x14002c4],bl
   140031e8d:	add    BYTE PTR [rax],al
   140031e8f:	add    BYTE PTR [rax+0x11],al
   140031e92:	add    BYTE PTR [rax+0x1],al
   140031e95:	add    BYTE PTR [rax],al
   140031e97:	add    al,ah
   140031e99:	rol    BYTE PTR [rcx],0x40
   140031e9c:	add    DWORD PTR [rax],eax
   140031e9e:	add    BYTE PTR [rax],al
   140031ea0:	lock rol BYTE PTR [rcx],0x40
   140031ea4:	add    DWORD PTR [rax],eax
   140031ea6:	add    BYTE PTR [rax],al
   140031ea8:	xchg   edx,eax
   140031ea9:	(bad)
   140031ead:	add    BYTE PTR [rax],al
   140031eaf:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140031eb6:	add    BYTE PTR [rax],al
   140031eb8:	xchg   ah,al
   140031eba:	add    al,BYTE PTR [rax+0x1]
   140031ebd:	add    BYTE PTR [rax],al
   140031ebf:	add    BYTE PTR [rax+0x14002c4],al
   140031ec5:	add    BYTE PTR [rax],al
   140031ec7:	add    BYTE PTR [rdx-0x3c],bh
   140031eca:	add    al,BYTE PTR [rax+0x1]
   140031ecd:	add    BYTE PTR [rax],al
   140031ecf:	add    BYTE PTR [rsp+rax*8+0x2],dh
   140031ed3:	rex add DWORD PTR [rax],eax
   140031ed6:	add    BYTE PTR [rax],al
   140031ed8:	retw   
   140031eda:	add    al,BYTE PTR [rax+0x1]
   140031edd:	add    BYTE PTR [rax],al
   140031edf:	add    BYTE PTR [rax-0x3c],ch
   140031ee2:	add    al,BYTE PTR [rax+0x1]
   140031ee5:	add    BYTE PTR [rax],al
   140031ee7:	add    BYTE PTR [rdx-0x3c],ah
   140031eea:	add    al,BYTE PTR [rax+0x1]
   140031eed:	add    BYTE PTR [rax],al
   140031eef:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140031ef3:	rex add DWORD PTR [rax],eax
   140031ef6:	add    BYTE PTR [rax],al
   140031ef8:	push   rsi
   140031ef9:	(bad)
   140031efd:	add    BYTE PTR [rax],al
   140031eff:	add    BYTE PTR [rax-0x3c],dl
   140031f02:	add    al,BYTE PTR [rax+0x1]
   140031f05:	add    BYTE PTR [rax],al
   140031f07:	add    BYTE PTR [rdx-0x3c],cl
   140031f0a:	add    al,BYTE PTR [rax+0x1]
   140031f0d:	add    BYTE PTR [rax],al
   140031f0f:	add    BYTE PTR [rsp+rax*8+0x2],al
   140031f13:	rex add DWORD PTR [rax],eax
   140031f16:	add    BYTE PTR [rax],al
   140031f18:	(bad)
   140031f1d:	add    BYTE PTR [rax],al
   140031f1f:	add    BYTE PTR [rax],bh
   140031f21:	(bad)
   140031f25:	add    BYTE PTR [rax],al
   140031f27:	add    BYTE PTR [rdx],dh
   140031f29:	(bad)
   140031f2d:	add    BYTE PTR [rax],al
   140031f2f:	add    BYTE PTR [rsi],ah
   140031f31:	(bad)
   140031f35:	add    BYTE PTR [rax],al
   140031f37:	add    BYTE PTR [rax],ah
   140031f39:	(bad)
   140031f3d:	add    BYTE PTR [rax],al
   140031f3f:	add    BYTE PTR [rdx],bl
   140031f41:	(bad)
   140031f45:	add    BYTE PTR [rax],al
   140031f47:	add    BYTE PTR [rsp+rax*8],dl
   140031f4a:	add    al,BYTE PTR [rax+0x1]
   140031f4d:	add    BYTE PTR [rax],al
   140031f4f:	add    BYTE PTR [rdx-0x3d],dh
   140031f52:	add    al,BYTE PTR [rax+0x1]
   140031f55:	add    BYTE PTR [rax],al
   140031f57:	add    BYTE PTR [rbx+rax*8+0x2],ch
   140031f5b:	rex add DWORD PTR [rax],eax
   140031f5e:	add    BYTE PTR [rax],al
   140031f60:	nop
   140031f61:	(bad)  
   140031f62:	add    eax,DWORD PTR [rax+0x1]
   140031f65:	add    BYTE PTR [rax],al
   140031f67:	add    BYTE PTR [rbx+rax*8],ah
   140031f6a:	add    al,BYTE PTR [rax+0x1]
   140031f6d:	add    BYTE PTR [rax],al
   140031f6f:	add    BYTE PTR [rax-0x3f],dl
   140031f72:	add    DWORD PTR [rax+0x1],eax
   140031f75:	add    BYTE PTR [rax],al
   140031f77:	add    BYTE PTR [rax+0x11],al
   140031f7a:	add    BYTE PTR [rax+0x1],al
   140031f7d:	add    BYTE PTR [rax],al
   140031f7f:	add    BYTE PTR [rax+0x11],al
   140031f82:	add    BYTE PTR [rax+0x1],al
   140031f85:	add    BYTE PTR [rax],al
   140031f87:	add    BYTE PTR [rax+0x11],al
   140031f8a:	add    BYTE PTR [rax+0x1],al
   140031f8d:	add    BYTE PTR [rax],al
   140031f8f:	add    BYTE PTR [rax],dl
   140031f91:	ret    0x4002
   140031f94:	add    DWORD PTR [rax],eax
   140031f96:	add    BYTE PTR [rax],al
   140031f98:	sub    al,0xc4
   140031f9a:	add    al,BYTE PTR [rax+0x1]
   140031f9d:	add    BYTE PTR [rax],al
   140031f9f:	add    BYTE PTR [rdx+rax*8],al
   140031fa2:	add    al,BYTE PTR [rax+0x1]
   140031fa5:	add    BYTE PTR [rax],al
   140031fa7:	add    dh,bh
   140031fa9:	rol    DWORD PTR [rdx],0x40
   140031fac:	add    DWORD PTR [rax],eax
   140031fae:	add    BYTE PTR [rax],al
   140031fb0:	clc    
   140031fb1:	rol    DWORD PTR [rdx],0x40
   140031fb4:	add    DWORD PTR [rax],eax
   140031fb6:	add    BYTE PTR [rax],al
   140031fb8:	repnz rol DWORD PTR [rdx],0x40
   140031fbc:	add    DWORD PTR [rax],eax
   140031fbe:	add    BYTE PTR [rax],al
   140031fc0:	in     al,dx
   140031fc1:	rol    DWORD PTR [rdx],0x40
   140031fc4:	add    DWORD PTR [rax],eax
   140031fc6:	add    BYTE PTR [rax],al
   140031fc8:	(bad)  
   140031fc9:	(bad)
   140031fcd:	add    BYTE PTR [rax],al
   140031fcf:	add    dh,ah
   140031fd1:	rol    DWORD PTR [rdx],0x40
   140031fd4:	add    DWORD PTR [rax],eax
   140031fd6:	add    BYTE PTR [rax],al
   140031fd8:	loopne 0x140031f9b
   140031fda:	add    al,BYTE PTR [rax+0x1]
   140031fdd:	add    BYTE PTR [rax],al
   140031fdf:	add    dl,bl
   140031fe1:	rol    DWORD PTR [rdx],0x40
   140031fe4:	add    DWORD PTR [rax],eax
   140031fe6:	add    BYTE PTR [rax],al
   140031fe8:	cmp    al,ch
   140031fea:	add    al,BYTE PTR [rax+0x1]
   140031fed:	add    BYTE PTR [rax],al
   140031fef:	add    dh,cl
   140031ff1:	rol    DWORD PTR [rdx],0x40
   140031ff4:	add    DWORD PTR [rax],eax
   140031ff6:	add    BYTE PTR [rax],al
   140031ff8:	enter  0x2c1,0x40
   140031ffc:	add    DWORD PTR [rax],eax
   140031ffe:	add    BYTE PTR [rax],al
   140032000:	ret    0x2c1
   140032003:	rex add DWORD PTR [rax],eax
   140032006:	add    BYTE PTR [rax],al
   140032008:	mov    esp,0x14002c1
   14003200d:	add    BYTE PTR [rax],al
   14003200f:	add    BYTE PTR [rsi+0x14002c1],dh
   140032015:	add    BYTE PTR [rax],al
   140032017:	add    BYTE PTR [rax+0x14002c5],ah
   14003201d:	add    BYTE PTR [rax],al
   14003201f:	add    BYTE PTR [rdx+0x14002c5],bl
   140032025:	add    BYTE PTR [rax],al
   140032027:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   14003202e:	add    BYTE PTR [rax],al
   140032030:	mov    es,ebp
   140032032:	add    al,BYTE PTR [rax+0x1]
   140032035:	add    BYTE PTR [rax],al
   140032037:	add    BYTE PTR [rax+0x14002c5],cl
   14003203d:	add    BYTE PTR [rax],al
   14003203f:	add    BYTE PTR [rdx+0x14002c5],al
   140032045:	add    BYTE PTR [rax],al
   140032047:	add    BYTE PTR [rbp+rax*8+0x2],bh
   14003204b:	rex add DWORD PTR [rax],eax
   14003204e:	add    BYTE PTR [rax],al
   140032050:	jbe    0x140032017
   140032052:	add    al,BYTE PTR [rax+0x1]
   140032055:	add    BYTE PTR [rax],al
   140032057:	add    BYTE PTR [rax-0x3b],dh
   14003205a:	add    al,BYTE PTR [rax+0x1]
   14003205d:	add    BYTE PTR [rax],al
   14003205f:	add    BYTE PTR [rdx-0x3b],ch
   140032062:	add    al,BYTE PTR [rax+0x1]
   140032065:	add    BYTE PTR [rax],al
   140032067:	add    BYTE PTR [rbp+rax*8+0x2],ah
   14003206b:	rex add DWORD PTR [rax],eax
   14003206e:	add    BYTE PTR [rax],al
   140032070:	pop    rsi
   140032071:	(bad)
   140032074:	add    DWORD PTR [rax],eax
   140032076:	add    BYTE PTR [rax],al
   140032078:	pop    rax
   140032079:	(bad)
   14003207c:	add    DWORD PTR [rax],eax
   14003207e:	add    BYTE PTR [rax],al
   140032080:	push   rdx
   140032081:	(bad)
   140032084:	add    DWORD PTR [rax],eax
   140032086:	add    BYTE PTR [rax],al
   140032088:	(bad)
   14003208c:	add    DWORD PTR [rax],eax
   14003208e:	add    BYTE PTR [rax],al
   140032090:	(bad)
   140032094:	add    DWORD PTR [rax],eax
   140032096:	add    BYTE PTR [rax],al
   140032098:	(bad)
   14003209c:	add    DWORD PTR [rax],eax
   14003209e:	add    BYTE PTR [rax],al
   1400320a0:	xor    al,0xc5
   1400320a2:	add    al,BYTE PTR [rax+0x1]
   1400320a5:	add    BYTE PTR [rax],al
   1400320a7:	add    BYTE PTR [rsi],ch
   1400320a9:	(bad)
   1400320ac:	add    DWORD PTR [rax],eax
   1400320ae:	add    BYTE PTR [rax],al
   1400320b0:	sub    ch,al
   1400320b2:	add    al,BYTE PTR [rax+0x1]
   1400320b5:	add    BYTE PTR [rax],al
   1400320b7:	add    BYTE PTR [rdx],ah
   1400320b9:	(bad)
   1400320bc:	add    DWORD PTR [rax],eax
   1400320be:	add    BYTE PTR [rax],al
   1400320c0:	sbb    al,0xc5
   1400320c2:	add    al,BYTE PTR [rax+0x1]
   1400320c5:	add    BYTE PTR [rax],al
   1400320c7:	add    BYTE PTR [rsi],dl
   1400320c9:	(bad)
   1400320cc:	add    DWORD PTR [rax],eax
   1400320ce:	add    BYTE PTR [rax],al
   1400320d0:	adc    ch,al
   1400320d2:	add    al,BYTE PTR [rax+0x1]
   1400320d5:	add    BYTE PTR [rax],al
   1400320d7:	add    BYTE PTR [rdx],cl
   1400320d9:	(bad)
   1400320dc:	add    DWORD PTR [rax],eax
   1400320de:	add    BYTE PTR [rax],al
   1400320e0:	add    al,0xc5
   1400320e2:	add    al,BYTE PTR [rax+0x1]
   1400320e5:	add    BYTE PTR [rax],al
   1400320e7:	add    dh,bh
   1400320e9:	(bad)
   1400320ed:	add    BYTE PTR [rax],al
   1400320ef:	add    al,bh
   1400320f1:	(bad)
   1400320f5:	add    BYTE PTR [rax],al
   1400320f7:	add    dl,dh
   1400320f9:	(bad)
   1400320fd:	add    BYTE PTR [rax],al
   1400320ff:	add    ah,ch
   140032101:	(bad)
   140032105:	add    BYTE PTR [rax],al
   140032107:	add    dh,ah
   140032109:	(bad)
   14003210d:	add    BYTE PTR [rax],al
   14003210f:	add    al,ah
   140032111:	(bad)
   140032115:	add    BYTE PTR [rax],al
   140032117:	add    dl,bl
   140032119:	(bad)
   14003211d:	add    BYTE PTR [rax],al
   14003211f:	add    ah,dl
   140032121:	(bad)
   140032125:	add    BYTE PTR [rax],al
   140032127:	add    dh,cl
   140032129:	(bad)
   14003212d:	add    BYTE PTR [rax],al
   14003212f:	add    al,cl
   140032131:	(bad)
   140032135:	add    BYTE PTR [rax],al
   140032137:	add    dl,al
   140032139:	(bad)
   14003213d:	add    BYTE PTR [rax],al
   14003213f:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140032146:	add    BYTE PTR [rax],al
   140032148:	mov    dh,0xc4
   14003214a:	add    al,BYTE PTR [rax+0x1]
   14003214d:	add    BYTE PTR [rax],al
   14003214f:	add    BYTE PTR [rax+0x14002c4],dh
   140032155:	add    BYTE PTR [rax],al
   140032157:	add    BYTE PTR [rdx+0x14002c4],ch
   14003215d:	add    BYTE PTR [rax],al
   14003215f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140032166:	add    BYTE PTR [rax],al
   140032168:	sahf   
   140032169:	(bad)
   14003216d:	add    BYTE PTR [rax],al
   14003216f:	add    BYTE PTR [rax+0x14002c4],bl
   140032175:	add    BYTE PTR [rax],al
   140032177:	add    BYTE PTR [rax+0x11],al
   14003217a:	add    BYTE PTR [rax+0x1],al
   14003217d:	add    BYTE PTR [rax],al
   14003217f:	add    al,ah
   140032181:	rol    BYTE PTR [rcx],0x40
   140032184:	add    DWORD PTR [rax],eax
   140032186:	add    BYTE PTR [rax],al
   140032188:	lock rol BYTE PTR [rcx],0x40
   14003218c:	add    DWORD PTR [rax],eax
   14003218e:	add    BYTE PTR [rax],al
   140032190:	xchg   edx,eax
   140032191:	(bad)
   140032195:	add    BYTE PTR [rax],al
   140032197:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   14003219e:	add    BYTE PTR [rax],al
   1400321a0:	xchg   ah,al
   1400321a2:	add    al,BYTE PTR [rax+0x1]
   1400321a5:	add    BYTE PTR [rax],al
   1400321a7:	add    BYTE PTR [rax+0x14002c4],al
   1400321ad:	add    BYTE PTR [rax],al
   1400321af:	add    BYTE PTR [rdx-0x3c],bh
   1400321b2:	add    al,BYTE PTR [rax+0x1]
   1400321b5:	add    BYTE PTR [rax],al
   1400321b7:	add    BYTE PTR [rsp+rax*8+0x2],dh
   1400321bb:	rex add DWORD PTR [rax],eax
   1400321be:	add    BYTE PTR [rax],al
   1400321c0:	adc    al,bl
   1400321c2:	add    al,BYTE PTR [rax+0x1]
   1400321c5:	add    BYTE PTR [rax],al
   1400321c7:	add    BYTE PTR [rax-0x3c],ch
   1400321ca:	add    al,BYTE PTR [rax+0x1]
   1400321cd:	add    BYTE PTR [rax],al
   1400321cf:	add    BYTE PTR [rdx-0x3c],ah
   1400321d2:	add    al,BYTE PTR [rax+0x1]
   1400321d5:	add    BYTE PTR [rax],al
   1400321d7:	add    BYTE PTR [rsp+rax*8+0x2],bl
   1400321db:	rex add DWORD PTR [rax],eax
   1400321de:	add    BYTE PTR [rax],al
   1400321e0:	push   rsi
   1400321e1:	(bad)
   1400321e5:	add    BYTE PTR [rax],al
   1400321e7:	add    BYTE PTR [rax-0x3c],dl
   1400321ea:	add    al,BYTE PTR [rax+0x1]
   1400321ed:	add    BYTE PTR [rax],al
   1400321ef:	add    BYTE PTR [rdx-0x3c],cl
   1400321f2:	add    al,BYTE PTR [rax+0x1]
   1400321f5:	add    BYTE PTR [rax],al
   1400321f7:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400321fb:	rex add DWORD PTR [rax],eax
   1400321fe:	add    BYTE PTR [rax],al
   140032200:	(bad)
   140032205:	add    BYTE PTR [rax],al
   140032207:	add    BYTE PTR [rax],bh
   140032209:	(bad)
   14003220d:	add    BYTE PTR [rax],al
   14003220f:	add    BYTE PTR [rdx],dh
   140032211:	(bad)
   140032215:	add    BYTE PTR [rax],al
   140032217:	add    BYTE PTR [rsi],ah
   140032219:	(bad)
   14003221d:	add    BYTE PTR [rax],al
   14003221f:	add    BYTE PTR [rax],ah
   140032221:	(bad)
   140032225:	add    BYTE PTR [rax],al
   140032227:	add    BYTE PTR [rdx],bl
   140032229:	(bad)
   14003222d:	add    BYTE PTR [rax],al
   14003222f:	add    BYTE PTR [rsp+rax*8],dl
   140032232:	add    al,BYTE PTR [rax+0x1]
   140032235:	add    BYTE PTR [rax],al
   140032237:	add    BYTE PTR [rsi],bl
   140032239:	ret    
   14003223a:	add    al,BYTE PTR [rax+0x1]
   14003223d:	add    BYTE PTR [rax],al
   14003223f:	add    BYTE PTR [rax],bl
   140032241:	ret    
   140032242:	add    al,BYTE PTR [rax+0x1]
   140032245:	add    BYTE PTR [rax],al
   140032247:	add    BYTE PTR [rax+0x25],bl
   14003224a:	add    eax,DWORD PTR [rax+0x1]
   14003224d:	add    BYTE PTR [rax],al
   14003224f:	add    BYTE PTR [rax],dh
   140032251:	sbb    al,0x0
   140032253:	add    bh,bh
   140032255:	inc    DWORD PTR [rax]
   140032257:	add    BYTE PTR [rax-0x3e],dl
   14003225a:	add    DWORD PTR [rax+0x1],eax
   14003225d:	add    BYTE PTR [rax],al
   14003225f:	add    BYTE PTR [rax+0x14001c2],dl
	...
   140032275:	add    BYTE PTR [rax],al
   140032277:	add    BYTE PTR [rax+0x140035e],al
   14003227d:	add    BYTE PTR [rax],al
   14003227f:	add    BYTE PTR [rbx+rax*8],cl
   140032282:	add    al,BYTE PTR [rax+0x1]
   140032285:	add    BYTE PTR [rax],al
   140032287:	add    al,dl
   140032289:	rol    DWORD PTR [rcx],0x40
   14003228c:	add    DWORD PTR [rax],eax
   14003228e:	add    BYTE PTR [rax],al
   140032290:	rex adc DWORD PTR [rax],eax
   140032293:	rex add DWORD PTR [rax],eax
   140032296:	add    BYTE PTR [rax],al
   140032298:	rex adc DWORD PTR [rax],eax
   14003229b:	rex add DWORD PTR [rax],eax
   14003229e:	add    BYTE PTR [rax],al
   1400322a0:	rex adc DWORD PTR [rax],eax
   1400322a3:	rex add DWORD PTR [rax],eax
   1400322a6:	add    BYTE PTR [rax],al
   1400322a8:	adc    dl,al
   1400322aa:	add    al,BYTE PTR [rax+0x1]
   1400322ad:	add    BYTE PTR [rax],al
   1400322af:	add    BYTE PTR [rsp+rax*8],ch
   1400322b2:	add    al,BYTE PTR [rax+0x1]
   1400322b5:	add    BYTE PTR [rax],al
   1400322b7:	add    BYTE PTR [rdx+rax*8],al
   1400322ba:	add    al,BYTE PTR [rax+0x1]
   1400322bd:	add    BYTE PTR [rax],al
   1400322bf:	add    dh,bh
   1400322c1:	rol    DWORD PTR [rdx],0x40
   1400322c4:	add    DWORD PTR [rax],eax
   1400322c6:	add    BYTE PTR [rax],al
   1400322c8:	clc    
   1400322c9:	rol    DWORD PTR [rdx],0x40
   1400322cc:	add    DWORD PTR [rax],eax
   1400322ce:	add    BYTE PTR [rax],al
   1400322d0:	repnz rol DWORD PTR [rdx],0x40
   1400322d4:	add    DWORD PTR [rax],eax
   1400322d6:	add    BYTE PTR [rax],al
   1400322d8:	in     al,dx
   1400322d9:	rol    DWORD PTR [rdx],0x40
   1400322dc:	add    DWORD PTR [rax],eax
   1400322de:	add    BYTE PTR [rax],al
   1400322e0:	(bad)  
   1400322e1:	(bad)
   1400322e5:	add    BYTE PTR [rax],al
   1400322e7:	add    dh,ah
   1400322e9:	rol    DWORD PTR [rdx],0x40
   1400322ec:	add    DWORD PTR [rax],eax
   1400322ee:	add    BYTE PTR [rax],al
   1400322f0:	loopne 0x1400322b3
   1400322f2:	add    al,BYTE PTR [rax+0x1]
   1400322f5:	add    BYTE PTR [rax],al
   1400322f7:	add    dl,bl
   1400322f9:	rol    DWORD PTR [rdx],0x40
   1400322fc:	add    DWORD PTR [rax],eax
   1400322fe:	add    BYTE PTR [rax],al
   140032300:	cmp    al,ch
   140032302:	add    al,BYTE PTR [rax+0x1]
   140032305:	add    BYTE PTR [rax],al
   140032307:	add    dh,cl
   140032309:	rol    DWORD PTR [rdx],0x40
   14003230c:	add    DWORD PTR [rax],eax
   14003230e:	add    BYTE PTR [rax],al
   140032310:	enter  0x2c1,0x40
   140032314:	add    DWORD PTR [rax],eax
   140032316:	add    BYTE PTR [rax],al
   140032318:	ret    0x2c1
   14003231b:	rex add DWORD PTR [rax],eax
   14003231e:	add    BYTE PTR [rax],al
   140032320:	mov    esp,0x14002c1
   140032325:	add    BYTE PTR [rax],al
   140032327:	add    BYTE PTR [rsi+0x14002c1],dh
   14003232d:	add    BYTE PTR [rax],al
   14003232f:	add    BYTE PTR [rax+0x14002c5],ah
   140032335:	add    BYTE PTR [rax],al
   140032337:	add    BYTE PTR [rdx+0x14002c5],bl
   14003233d:	add    BYTE PTR [rax],al
   14003233f:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140032346:	add    BYTE PTR [rax],al
   140032348:	mov    es,ebp
   14003234a:	add    al,BYTE PTR [rax+0x1]
   14003234d:	add    BYTE PTR [rax],al
   14003234f:	add    BYTE PTR [rax+0x14002c5],cl
   140032355:	add    BYTE PTR [rax],al
   140032357:	add    BYTE PTR [rdx+0x14002c5],al
   14003235d:	add    BYTE PTR [rax],al
   14003235f:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140032363:	rex add DWORD PTR [rax],eax
   140032366:	add    BYTE PTR [rax],al
   140032368:	jbe    0x14003232f
   14003236a:	add    al,BYTE PTR [rax+0x1]
   14003236d:	add    BYTE PTR [rax],al
   14003236f:	add    BYTE PTR [rax-0x3b],dh
   140032372:	add    al,BYTE PTR [rax+0x1]
   140032375:	add    BYTE PTR [rax],al
   140032377:	add    BYTE PTR [rdx-0x3b],ch
   14003237a:	add    al,BYTE PTR [rax+0x1]
   14003237d:	add    BYTE PTR [rax],al
   14003237f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140032383:	rex add DWORD PTR [rax],eax
   140032386:	add    BYTE PTR [rax],al
   140032388:	pop    rsi
   140032389:	(bad)
   14003238c:	add    DWORD PTR [rax],eax
   14003238e:	add    BYTE PTR [rax],al
   140032390:	pop    rax
   140032391:	(bad)
   140032394:	add    DWORD PTR [rax],eax
   140032396:	add    BYTE PTR [rax],al
   140032398:	push   rdx
   140032399:	(bad)
   14003239c:	add    DWORD PTR [rax],eax
   14003239e:	add    BYTE PTR [rax],al
   1400323a0:	(bad)
   1400323a4:	add    DWORD PTR [rax],eax
   1400323a6:	add    BYTE PTR [rax],al
   1400323a8:	(bad)
   1400323ac:	add    DWORD PTR [rax],eax
   1400323ae:	add    BYTE PTR [rax],al
   1400323b0:	(bad)
   1400323b4:	add    DWORD PTR [rax],eax
   1400323b6:	add    BYTE PTR [rax],al
   1400323b8:	xor    al,0xc5
   1400323ba:	add    al,BYTE PTR [rax+0x1]
   1400323bd:	add    BYTE PTR [rax],al
   1400323bf:	add    BYTE PTR [rsi],ch
   1400323c1:	(bad)
   1400323c4:	add    DWORD PTR [rax],eax
   1400323c6:	add    BYTE PTR [rax],al
   1400323c8:	sub    ch,al
   1400323ca:	add    al,BYTE PTR [rax+0x1]
   1400323cd:	add    BYTE PTR [rax],al
   1400323cf:	add    BYTE PTR [rdx],ah
   1400323d1:	(bad)
   1400323d4:	add    DWORD PTR [rax],eax
   1400323d6:	add    BYTE PTR [rax],al
   1400323d8:	sbb    al,0xc5
   1400323da:	add    al,BYTE PTR [rax+0x1]
   1400323dd:	add    BYTE PTR [rax],al
   1400323df:	add    BYTE PTR [rsi],dl
   1400323e1:	(bad)
   1400323e4:	add    DWORD PTR [rax],eax
   1400323e6:	add    BYTE PTR [rax],al
   1400323e8:	adc    ch,al
   1400323ea:	add    al,BYTE PTR [rax+0x1]
   1400323ed:	add    BYTE PTR [rax],al
   1400323ef:	add    BYTE PTR [rdx],cl
   1400323f1:	(bad)
   1400323f4:	add    DWORD PTR [rax],eax
   1400323f6:	add    BYTE PTR [rax],al
   1400323f8:	add    al,0xc5
   1400323fa:	add    al,BYTE PTR [rax+0x1]
   1400323fd:	add    BYTE PTR [rax],al
   1400323ff:	add    dh,bh
   140032401:	(bad)
   140032405:	add    BYTE PTR [rax],al
   140032407:	add    al,bh
   140032409:	(bad)
   14003240d:	add    BYTE PTR [rax],al
   14003240f:	add    dl,dh
   140032411:	(bad)
   140032415:	add    BYTE PTR [rax],al
   140032417:	add    ah,ch
   140032419:	(bad)
   14003241d:	add    BYTE PTR [rax],al
   14003241f:	add    dh,ah
   140032421:	(bad)
   140032425:	add    BYTE PTR [rax],al
   140032427:	add    al,ah
   140032429:	(bad)
   14003242d:	add    BYTE PTR [rax],al
   14003242f:	add    dl,bl
   140032431:	(bad)
   140032435:	add    BYTE PTR [rax],al
   140032437:	add    ah,dl
   140032439:	(bad)
   14003243d:	add    BYTE PTR [rax],al
   14003243f:	add    dh,cl
   140032441:	(bad)
   140032445:	add    BYTE PTR [rax],al
   140032447:	add    al,cl
   140032449:	(bad)
   14003244d:	add    BYTE PTR [rax],al
   14003244f:	add    dl,al
   140032451:	(bad)
   140032455:	add    BYTE PTR [rax],al
   140032457:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   14003245e:	add    BYTE PTR [rax],al
   140032460:	mov    dh,0xc4
   140032462:	add    al,BYTE PTR [rax+0x1]
   140032465:	add    BYTE PTR [rax],al
   140032467:	add    BYTE PTR [rax+0x14002c4],dh
   14003246d:	add    BYTE PTR [rax],al
   14003246f:	add    BYTE PTR [rdx+0x14002c4],ch
   140032475:	add    BYTE PTR [rax],al
   140032477:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   14003247e:	add    BYTE PTR [rax],al
   140032480:	sahf   
   140032481:	(bad)
   140032485:	add    BYTE PTR [rax],al
   140032487:	add    BYTE PTR [rax+0x14002c4],bl
   14003248d:	add    BYTE PTR [rax],al
   14003248f:	add    BYTE PTR [rax+0x11],al
   140032492:	add    BYTE PTR [rax+0x1],al
   140032495:	add    BYTE PTR [rax],al
   140032497:	add    al,ah
   140032499:	rol    BYTE PTR [rcx],0x40
   14003249c:	add    DWORD PTR [rax],eax
   14003249e:	add    BYTE PTR [rax],al
   1400324a0:	lock rol BYTE PTR [rcx],0x40
   1400324a4:	add    DWORD PTR [rax],eax
   1400324a6:	add    BYTE PTR [rax],al
   1400324a8:	xchg   edx,eax
   1400324a9:	(bad)
   1400324ad:	add    BYTE PTR [rax],al
   1400324af:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   1400324b6:	add    BYTE PTR [rax],al
   1400324b8:	xchg   ah,al
   1400324ba:	add    al,BYTE PTR [rax+0x1]
   1400324bd:	add    BYTE PTR [rax],al
   1400324bf:	add    BYTE PTR [rax+0x14002c4],al
   1400324c5:	add    BYTE PTR [rax],al
   1400324c7:	add    BYTE PTR [rdx-0x3c],bh
   1400324ca:	add    al,BYTE PTR [rax+0x1]
   1400324cd:	add    BYTE PTR [rax],al
   1400324cf:	add    BYTE PTR [rsp+rax*8+0x2],dh
   1400324d3:	rex add DWORD PTR [rax],eax
   1400324d6:	add    BYTE PTR [rax],al
   1400324d8:	outs   dx,BYTE PTR ds:[rsi]
   1400324d9:	(bad)
   1400324dd:	add    BYTE PTR [rax],al
   1400324df:	add    BYTE PTR [rax-0x3c],ch
   1400324e2:	add    al,BYTE PTR [rax+0x1]
   1400324e5:	add    BYTE PTR [rax],al
   1400324e7:	add    BYTE PTR [rdx-0x3c],ah
   1400324ea:	add    al,BYTE PTR [rax+0x1]
   1400324ed:	add    BYTE PTR [rax],al
   1400324ef:	add    BYTE PTR [rsp+rax*8+0x2],bl
   1400324f3:	rex add DWORD PTR [rax],eax
   1400324f6:	add    BYTE PTR [rax],al
   1400324f8:	push   rsi
   1400324f9:	(bad)
   1400324fd:	add    BYTE PTR [rax],al
   1400324ff:	add    BYTE PTR [rax-0x3c],dl
   140032502:	add    al,BYTE PTR [rax+0x1]
   140032505:	add    BYTE PTR [rax],al
   140032507:	add    BYTE PTR [rdx-0x3c],cl
   14003250a:	add    al,BYTE PTR [rax+0x1]
   14003250d:	add    BYTE PTR [rax],al
   14003250f:	add    BYTE PTR [rsp+rax*8+0x2],al
   140032513:	rex add DWORD PTR [rax],eax
   140032516:	add    BYTE PTR [rax],al
   140032518:	(bad)
   14003251d:	add    BYTE PTR [rax],al
   14003251f:	add    BYTE PTR [rax],bh
   140032521:	(bad)
   140032525:	add    BYTE PTR [rax],al
   140032527:	add    BYTE PTR [rdx],dh
   140032529:	(bad)
   14003252d:	add    BYTE PTR [rax],al
   14003252f:	add    BYTE PTR [rsi],ah
   140032531:	(bad)
   140032535:	add    BYTE PTR [rax],al
   140032537:	add    BYTE PTR [rax],ah
   140032539:	(bad)
   14003253d:	add    BYTE PTR [rax],al
   14003253f:	add    BYTE PTR [rdx],bl
   140032541:	(bad)
   140032545:	add    BYTE PTR [rax],al
   140032547:	add    BYTE PTR [rsp+rax*8],dl
   14003254a:	add    al,BYTE PTR [rax+0x1]
	...
   140032555:	add    BYTE PTR [rax],al
   140032557:	add    BYTE PTR [rbx+0x53],al
   14003255a:	push   rax
   14003255b:	push   rbp
   14003255c:	rex.B
   14003255d:	fs add BYTE PTR fs:[rdi+0x54],dl
   140032562:	ins    BYTE PTR es:[rdi],dx
   140032563:	fs js  0x1400325de
   140032566:	cs fs ins BYTE PTR es:[rdi],dx
   140032569:	ins    BYTE PTR es:[rdi],dx
   14003256a:	add    BYTE PTR [rax],al
   14003256c:	jb     0x14003256e
   14003256e:	add    BYTE PTR [rax],al
   140032570:	sub    al,BYTE PTR [rax]
   140032572:	add    BYTE PTR [rax],al
   140032574:	add    BYTE PTR [rax],al
   140032576:	add    BYTE PTR [rax],al
   140032578:	mov    bl,0x2
   14003257b:	rex add DWORD PTR [rax],eax
   14003257e:	add    BYTE PTR [rax],al
   140032580:	nop
   140032581:	sbb    BYTE PTR [rbx],al
   140032583:	rex add DWORD PTR [rax],eax
   140032586:	add    BYTE PTR [rax],al
   140032588:	mov    BYTE PTR [rdi+0x3],bl
   14003258b:	rex add DWORD PTR [rax],eax
   14003258e:	add    BYTE PTR [rax],al
   140032590:	rol    bl,0x2
   140032593:	rex add DWORD PTR [rax],eax
   140032596:	add    BYTE PTR [rax],al
   140032598:	nop
   140032599:	rol    DWORD PTR [rcx],0x40
   14003259c:	add    DWORD PTR [rax],eax
   14003259e:	add    BYTE PTR [rax],al
   1400325a0:	rex adc DWORD PTR [rax],eax
   1400325a3:	rex add DWORD PTR [rax],eax
   1400325a6:	add    BYTE PTR [rax],al
   1400325a8:	rex adc DWORD PTR [rax],eax
   1400325ab:	rex add DWORD PTR [rax],eax
   1400325ae:	add    BYTE PTR [rax],al
   1400325b0:	rex adc DWORD PTR [rax],eax
   1400325b3:	rex add DWORD PTR [rax],eax
   1400325b6:	add    BYTE PTR [rax],al
   1400325b8:	adc    dl,al
   1400325ba:	add    al,BYTE PTR [rax+0x1]
   1400325bd:	add    BYTE PTR [rax],al
   1400325bf:	add    BYTE PTR [rsp+rax*8],ch
   1400325c2:	add    al,BYTE PTR [rax+0x1]
   1400325c5:	add    BYTE PTR [rax],al
   1400325c7:	add    BYTE PTR [rdx+rax*8],al
   1400325ca:	add    al,BYTE PTR [rax+0x1]
   1400325cd:	add    BYTE PTR [rax],al
   1400325cf:	add    dh,bh
   1400325d1:	rol    DWORD PTR [rdx],0x40
   1400325d4:	add    DWORD PTR [rax],eax
   1400325d6:	add    BYTE PTR [rax],al
   1400325d8:	clc    
   1400325d9:	rol    DWORD PTR [rdx],0x40
   1400325dc:	add    DWORD PTR [rax],eax
   1400325de:	add    BYTE PTR [rax],al
   1400325e0:	repnz rol DWORD PTR [rdx],0x40
   1400325e4:	add    DWORD PTR [rax],eax
   1400325e6:	add    BYTE PTR [rax],al
   1400325e8:	in     al,dx
   1400325e9:	rol    DWORD PTR [rdx],0x40
   1400325ec:	add    DWORD PTR [rax],eax
   1400325ee:	add    BYTE PTR [rax],al
   1400325f0:	(bad)  
   1400325f1:	(bad)
   1400325f5:	add    BYTE PTR [rax],al
   1400325f7:	add    dh,ah
   1400325f9:	rol    DWORD PTR [rdx],0x40
   1400325fc:	add    DWORD PTR [rax],eax
   1400325fe:	add    BYTE PTR [rax],al
   140032600:	loopne 0x1400325c3
   140032602:	add    al,BYTE PTR [rax+0x1]
   140032605:	add    BYTE PTR [rax],al
   140032607:	add    dl,bl
   140032609:	rol    DWORD PTR [rdx],0x40
   14003260c:	add    DWORD PTR [rax],eax
   14003260e:	add    BYTE PTR [rax],al
   140032610:	cmp    al,ch
   140032612:	add    al,BYTE PTR [rax+0x1]
   140032615:	add    BYTE PTR [rax],al
   140032617:	add    dh,cl
   140032619:	rol    DWORD PTR [rdx],0x40
   14003261c:	add    DWORD PTR [rax],eax
   14003261e:	add    BYTE PTR [rax],al
   140032620:	enter  0x2c1,0x40
   140032624:	add    DWORD PTR [rax],eax
   140032626:	add    BYTE PTR [rax],al
   140032628:	ret    0x2c1
   14003262b:	rex add DWORD PTR [rax],eax
   14003262e:	add    BYTE PTR [rax],al
   140032630:	mov    esp,0x14002c1
   140032635:	add    BYTE PTR [rax],al
   140032637:	add    BYTE PTR [rsi+0x14002c1],dh
   14003263d:	add    BYTE PTR [rax],al
   14003263f:	add    BYTE PTR [rax+0x14002c5],ah
   140032645:	add    BYTE PTR [rax],al
   140032647:	add    BYTE PTR [rdx+0x14002c5],bl
   14003264d:	add    BYTE PTR [rax],al
   14003264f:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140032656:	add    BYTE PTR [rax],al
   140032658:	mov    es,ebp
   14003265a:	add    al,BYTE PTR [rax+0x1]
   14003265d:	add    BYTE PTR [rax],al
   14003265f:	add    BYTE PTR [rax+0x14002c5],cl
   140032665:	add    BYTE PTR [rax],al
   140032667:	add    BYTE PTR [rdx+0x14002c5],al
   14003266d:	add    BYTE PTR [rax],al
   14003266f:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140032673:	rex add DWORD PTR [rax],eax
   140032676:	add    BYTE PTR [rax],al
   140032678:	jbe    0x14003263f
   14003267a:	add    al,BYTE PTR [rax+0x1]
   14003267d:	add    BYTE PTR [rax],al
   14003267f:	add    BYTE PTR [rax-0x3b],dh
   140032682:	add    al,BYTE PTR [rax+0x1]
   140032685:	add    BYTE PTR [rax],al
   140032687:	add    BYTE PTR [rdx-0x3b],ch
   14003268a:	add    al,BYTE PTR [rax+0x1]
   14003268d:	add    BYTE PTR [rax],al
   14003268f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140032693:	rex add DWORD PTR [rax],eax
   140032696:	add    BYTE PTR [rax],al
   140032698:	pop    rsi
   140032699:	(bad)
   14003269c:	add    DWORD PTR [rax],eax
   14003269e:	add    BYTE PTR [rax],al
   1400326a0:	pop    rax
   1400326a1:	(bad)
   1400326a4:	add    DWORD PTR [rax],eax
   1400326a6:	add    BYTE PTR [rax],al
   1400326a8:	push   rdx
   1400326a9:	(bad)
   1400326ac:	add    DWORD PTR [rax],eax
   1400326ae:	add    BYTE PTR [rax],al
   1400326b0:	(bad)
   1400326b4:	add    DWORD PTR [rax],eax
   1400326b6:	add    BYTE PTR [rax],al
   1400326b8:	(bad)
   1400326bc:	add    DWORD PTR [rax],eax
   1400326be:	add    BYTE PTR [rax],al
   1400326c0:	(bad)
   1400326c4:	add    DWORD PTR [rax],eax
   1400326c6:	add    BYTE PTR [rax],al
   1400326c8:	xor    al,0xc5
   1400326ca:	add    al,BYTE PTR [rax+0x1]
   1400326cd:	add    BYTE PTR [rax],al
   1400326cf:	add    BYTE PTR [rsi],ch
   1400326d1:	(bad)
   1400326d4:	add    DWORD PTR [rax],eax
   1400326d6:	add    BYTE PTR [rax],al
   1400326d8:	sub    ch,al
   1400326da:	add    al,BYTE PTR [rax+0x1]
   1400326dd:	add    BYTE PTR [rax],al
   1400326df:	add    BYTE PTR [rdx],ah
   1400326e1:	(bad)
   1400326e4:	add    DWORD PTR [rax],eax
   1400326e6:	add    BYTE PTR [rax],al
   1400326e8:	sbb    al,0xc5
   1400326ea:	add    al,BYTE PTR [rax+0x1]
   1400326ed:	add    BYTE PTR [rax],al
   1400326ef:	add    BYTE PTR [rsi],dl
   1400326f1:	(bad)
   1400326f4:	add    DWORD PTR [rax],eax
   1400326f6:	add    BYTE PTR [rax],al
   1400326f8:	adc    ch,al
   1400326fa:	add    al,BYTE PTR [rax+0x1]
   1400326fd:	add    BYTE PTR [rax],al
   1400326ff:	add    BYTE PTR [rdx],cl
   140032701:	(bad)
   140032704:	add    DWORD PTR [rax],eax
   140032706:	add    BYTE PTR [rax],al
   140032708:	add    al,0xc5
   14003270a:	add    al,BYTE PTR [rax+0x1]
   14003270d:	add    BYTE PTR [rax],al
   14003270f:	add    dh,bh
   140032711:	(bad)
   140032715:	add    BYTE PTR [rax],al
   140032717:	add    al,bh
   140032719:	(bad)
   14003271d:	add    BYTE PTR [rax],al
   14003271f:	add    dl,dh
   140032721:	(bad)
   140032725:	add    BYTE PTR [rax],al
   140032727:	add    ah,ch
   140032729:	(bad)
   14003272d:	add    BYTE PTR [rax],al
   14003272f:	add    dh,ah
   140032731:	(bad)
   140032735:	add    BYTE PTR [rax],al
   140032737:	add    al,ah
   140032739:	(bad)
   14003273d:	add    BYTE PTR [rax],al
   14003273f:	add    dl,bl
   140032741:	(bad)
   140032745:	add    BYTE PTR [rax],al
   140032747:	add    ah,dl
   140032749:	(bad)
   14003274d:	add    BYTE PTR [rax],al
   14003274f:	add    dh,cl
   140032751:	(bad)
   140032755:	add    BYTE PTR [rax],al
   140032757:	add    al,cl
   140032759:	(bad)
   14003275d:	add    BYTE PTR [rax],al
   14003275f:	add    dl,al
   140032761:	(bad)
   140032765:	add    BYTE PTR [rax],al
   140032767:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   14003276e:	add    BYTE PTR [rax],al
   140032770:	mov    dh,0xc4
   140032772:	add    al,BYTE PTR [rax+0x1]
   140032775:	add    BYTE PTR [rax],al
   140032777:	add    BYTE PTR [rax+0x14002c4],dh
   14003277d:	add    BYTE PTR [rax],al
   14003277f:	add    BYTE PTR [rdx+0x14002c4],ch
   140032785:	add    BYTE PTR [rax],al
   140032787:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   14003278e:	add    BYTE PTR [rax],al
   140032790:	sahf   
   140032791:	(bad)
   140032795:	add    BYTE PTR [rax],al
   140032797:	add    BYTE PTR [rax+0x14002c4],bl
   14003279d:	add    BYTE PTR [rax],al
   14003279f:	add    BYTE PTR [rax+0x11],al
   1400327a2:	add    BYTE PTR [rax+0x1],al
   1400327a5:	add    BYTE PTR [rax],al
   1400327a7:	add    al,ah
   1400327a9:	rol    BYTE PTR [rcx],0x40
   1400327ac:	add    DWORD PTR [rax],eax
   1400327ae:	add    BYTE PTR [rax],al
   1400327b0:	lock rol BYTE PTR [rcx],0x40
   1400327b4:	add    DWORD PTR [rax],eax
   1400327b6:	add    BYTE PTR [rax],al
   1400327b8:	xchg   edx,eax
   1400327b9:	(bad)
   1400327bd:	add    BYTE PTR [rax],al
   1400327bf:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   1400327c6:	add    BYTE PTR [rax],al
   1400327c8:	xchg   ah,al
   1400327ca:	add    al,BYTE PTR [rax+0x1]
   1400327cd:	add    BYTE PTR [rax],al
   1400327cf:	add    BYTE PTR [rax+0x14002c4],al
   1400327d5:	add    BYTE PTR [rax],al
   1400327d7:	add    BYTE PTR [rdx-0x3c],bh
   1400327da:	add    al,BYTE PTR [rax+0x1]
   1400327dd:	add    BYTE PTR [rax],al
   1400327df:	add    BYTE PTR [rsp+rax*8+0x2],dh
   1400327e3:	rex add DWORD PTR [rax],eax
   1400327e6:	add    BYTE PTR [rax],al
   1400327e8:	nop
   1400327e9:	ret    
   1400327ea:	add    al,BYTE PTR [rax+0x1]
   1400327ed:	add    BYTE PTR [rax],al
   1400327ef:	add    BYTE PTR [rax-0x3c],ch
   1400327f2:	add    al,BYTE PTR [rax+0x1]
   1400327f5:	add    BYTE PTR [rax],al
   1400327f7:	add    BYTE PTR [rdx-0x3c],ah
   1400327fa:	add    al,BYTE PTR [rax+0x1]
   1400327fd:	add    BYTE PTR [rax],al
   1400327ff:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140032803:	rex add DWORD PTR [rax],eax
   140032806:	add    BYTE PTR [rax],al
   140032808:	push   rsi
   140032809:	(bad)
   14003280d:	add    BYTE PTR [rax],al
   14003280f:	add    BYTE PTR [rax-0x3c],dl
   140032812:	add    al,BYTE PTR [rax+0x1]
   140032815:	add    BYTE PTR [rax],al
   140032817:	add    BYTE PTR [rdx-0x3c],cl
   14003281a:	add    al,BYTE PTR [rax+0x1]
   14003281d:	add    BYTE PTR [rax],al
   14003281f:	add    BYTE PTR [rsp+rax*8+0x2],al
   140032823:	rex add DWORD PTR [rax],eax
   140032826:	add    BYTE PTR [rax],al
   140032828:	(bad)
   14003282d:	add    BYTE PTR [rax],al
   14003282f:	add    BYTE PTR [rax],bh
   140032831:	(bad)
   140032835:	add    BYTE PTR [rax],al
   140032837:	add    BYTE PTR [rdx],dh
   140032839:	(bad)
   14003283d:	add    BYTE PTR [rax],al
   14003283f:	add    BYTE PTR [rsi],ah
   140032841:	(bad)
   140032845:	add    BYTE PTR [rax],al
   140032847:	add    BYTE PTR [rax],ah
   140032849:	(bad)
   14003284d:	add    BYTE PTR [rax],al
   14003284f:	add    BYTE PTR [rdx],bl
   140032851:	(bad)
   140032855:	add    BYTE PTR [rax],al
   140032857:	add    BYTE PTR [rsp+rax*8],dl
   14003285a:	add    al,BYTE PTR [rax+0x1]
   14003285d:	add    BYTE PTR [rax],al
   14003285f:	add    BYTE PTR [rdx+0x14002c3],bh
   140032865:	add    BYTE PTR [rax],al
   140032867:	add    BYTE PTR [rbx+rax*8+0x14002],dh
   14003286e:	add    BYTE PTR [rax],al
   140032870:	scas   al,BYTE PTR es:[rdi]
   140032871:	ret    
   140032872:	add    al,BYTE PTR [rax+0x1]
   140032875:	add    BYTE PTR [rax],al
   140032877:	add    BYTE PTR [rax+0x14002c3],ch
   14003287d:	add    BYTE PTR [rax],al
   14003287f:	add    BYTE PTR [rdx+0x14002c3],ah
   140032885:	add    BYTE PTR [rax],al
   140032887:	add    BYTE PTR [rbx+rax*8+0x14002],bl
   14003288e:	add    BYTE PTR [rax],al
   140032890:	xchg   esi,eax
   140032891:	ret    
   140032892:	add    al,BYTE PTR [rax+0x1]
   140032895:	add    BYTE PTR [rax],al
   140032897:	add    BYTE PTR [rbx+0x53],al
   14003289a:	push   rax
   14003289b:	push   rbp
   14003289c:	rex.XB outs dx,BYTE PTR ds:[rsi]
   14003289e:	jbe    0x140032912
   1400328a0:	je     0x1400328a2
   1400328a2:	add    BYTE PTR [rax],al
   1400328a4:	add    BYTE PTR [rax],al
   1400328a6:	add    BYTE PTR [rax],al
   1400328a8:	push   rbx
   1400328a9:	add    BYTE PTR [rax+0x0],dh
   1400328ac:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400328b1:	add    BYTE PTR [rax],ah
   1400328b3:	add    BYTE PTR [rbp+0x0],dl
   1400328b6:	je     0x1400328b8
   1400328b8:	imul   eax,DWORD PTR [rax],0x69006c
   1400328be:	je     0x1400328c0
   1400328c0:	jns    0x1400328c2
   1400328c2:	add    BYTE PTR [rax],al
   1400328c4:	add    BYTE PTR [rax],al
   1400328c6:	add    BYTE PTR [rax],al
   1400328c8:	push   rbp
   1400328c9:	add    BYTE PTR [rsi+0x0],ch
   1400328cc:	(bad)  
   1400328cd:	add    BYTE PTR [rdx+0x0],ah
   1400328d0:	ins    BYTE PTR es:[rdi],dx
   1400328d1:	add    BYTE PTR [rbp+0x0],ah
   1400328d4:	and    BYTE PTR [rax],al
   1400328d6:	je     0x1400328d8
   1400328d8:	outs   dx,DWORD PTR ds:[rsi]
   1400328d9:	add    BYTE PTR [rax],ah
   1400328db:	add    BYTE PTR [rdi+0x0],ch
   1400328de:	jo     0x1400328e0
   1400328e0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400328e4:	and    BYTE PTR [rax],al
   1400328e6:	jae    0x1400328e8
   1400328e8:	outs   dx,DWORD PTR ds:[rsi]
   1400328e9:	add    BYTE PTR [rbp+0x0],dh
   1400328ec:	jb     0x1400328ee
   1400328ee:	movsxd eax,DWORD PTR [rax]
   1400328f0:	add    BYTE PTR gs:[rax],ah
   1400328f3:	add    BYTE PTR [rsi+0x0],ah
   1400328f6:	imul   eax,DWORD PTR [rax],0x65006c
   1400328fc:	add    BYTE PTR cs:[rax],al
   1400328ff:	add    BYTE PTR [rbp+0x0],dl
   140032902:	outs   dx,BYTE PTR ds:[rsi]
   140032903:	add    BYTE PTR [rcx+0x0],ah
   140032906:	(bad)  
   140032907:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003290b:	add    BYTE PTR [rax],ah
   14003290d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140032911:	add    BYTE PTR [rax],ah
   140032913:	add    BYTE PTR [rbx+0x0],ah
   140032916:	jb     0x140032918
   140032918:	add    BYTE PTR gs:[rcx+0x0],ah
   14003291c:	je     0x14003291e
   14003291e:	add    BYTE PTR gs:[rax],ah
   140032921:	add    BYTE PTR [rax+rax*1+0x65],ah
   140032925:	add    BYTE PTR [rbx+0x0],dh
   140032928:	je     0x14003292a
   14003292a:	imul   eax,DWORD PTR [rax],0x61006e
   140032930:	je     0x140032932
   140032932:	imul   eax,DWORD PTR [rax],0x6e006f
   140032938:	and    BYTE PTR [rax],al
   14003293a:	data16 add BYTE PTR [rcx+0x0],ch
   14003293e:	ins    BYTE PTR es:[rdi],dx
   14003293f:	add    BYTE PTR [rbp+0x0],ah
   140032942:	add    BYTE PTR cs:[rax],al
   140032945:	add    BYTE PTR [rax],al
   140032947:	add    BYTE PTR [rbx+0x70],dh
   14003294a:	jne    0x14003294c
   14003294c:	add    BYTE PTR [rax],al
   14003294e:	add    BYTE PTR [rax],al
   140032950:	push   rbp
   140032951:	add    BYTE PTR [rsi+0x0],ch
   140032954:	(bad)  
   140032955:	add    BYTE PTR [rdx+0x0],ah
   140032958:	ins    BYTE PTR es:[rdi],dx
   140032959:	add    BYTE PTR [rbp+0x0],ah
   14003295c:	and    BYTE PTR [rax],al
   14003295e:	je     0x140032960
   140032960:	outs   dx,DWORD PTR ds:[rsi]
   140032961:	add    BYTE PTR [rax],ah
   140032963:	add    BYTE PTR [rbx+0x0],ah
   140032966:	outs   dx,DWORD PTR ds:[rsi]
   140032967:	add    BYTE PTR [rsi+0x0],ch
   14003296a:	jbe    0x14003296c
   14003296c:	add    BYTE PTR gs:[rdx+0x0],dh
   140032970:	je     0x140032972
   140032972:	and    BYTE PTR [rax],al
   140032974:	data16 add BYTE PTR [rcx+0x0],ch
   140032978:	ins    BYTE PTR es:[rdi],dx
   140032979:	add    BYTE PTR [rbp+0x0],ah
   14003297c:	add    BYTE PTR cs:[rax],al
   14003297f:	add    BYTE PTR [rax],ah
   140032981:	add    BYTE PTR [rax],al
   140032983:	add    BYTE PTR [rax],al
   140032985:	add    BYTE PTR [rax],al
   140032987:	add    dh,al
   140032989:	ret    
   14003298a:	add    al,BYTE PTR [rax+0x1]
   14003298d:	add    BYTE PTR [rax],al
   14003298f:	add    BYTE PTR [rax],dl
   140032991:	xor    BYTE PTR [rbx],al
   140032993:	rex add DWORD PTR [rax],eax
   140032996:	add    BYTE PTR [rax],al
   140032998:	fsub   DWORD PTR [rdx+0x3]
   14003299b:	rex add DWORD PTR [rax],eax
   14003299e:	add    BYTE PTR [rax],al
   1400329a0:	push   rax
   1400329a1:	jrcxz  0x1400329a4
   1400329a3:	rex add DWORD PTR [rax],eax
   1400329a6:	add    BYTE PTR [rax],al
   1400329a8:	xor    ch,ah
   1400329aa:	add    DWORD PTR [rax+0x1],eax
   1400329ad:	add    BYTE PTR [rax],al
   1400329af:	add    BYTE PTR [rax+0x11],al
   1400329b2:	add    BYTE PTR [rax+0x1],al
   1400329b5:	add    BYTE PTR [rax],al
   1400329b7:	add    BYTE PTR [rax+0x11],al
   1400329ba:	add    BYTE PTR [rax+0x1],al
   1400329bd:	add    BYTE PTR [rax],al
   1400329bf:	add    BYTE PTR [rax+0x11],al
   1400329c2:	add    BYTE PTR [rax+0x1],al
   1400329c5:	add    BYTE PTR [rax],al
   1400329c7:	add    BYTE PTR [rdx-0x3d],al
   1400329ca:	add    al,BYTE PTR [rax+0x1]
   1400329cd:	add    BYTE PTR [rax],al
   1400329cf:	add    al,dh
   1400329d1:	(bad)
   1400329d4:	add    DWORD PTR [rax],eax
   1400329d6:	add    BYTE PTR [rax],al
   1400329d8:	add    al,0xc2
   1400329da:	add    al,BYTE PTR [rax+0x1]
   1400329dd:	add    BYTE PTR [rax],al
   1400329df:	add    dh,bh
   1400329e1:	rol    DWORD PTR [rdx],0x40
   1400329e4:	add    DWORD PTR [rax],eax
   1400329e6:	add    BYTE PTR [rax],al
   1400329e8:	clc    
   1400329e9:	rol    DWORD PTR [rdx],0x40
   1400329ec:	add    DWORD PTR [rax],eax
   1400329ee:	add    BYTE PTR [rax],al
   1400329f0:	repnz rol DWORD PTR [rdx],0x40
   1400329f4:	add    DWORD PTR [rax],eax
   1400329f6:	add    BYTE PTR [rax],al
   1400329f8:	in     al,dx
   1400329f9:	rol    DWORD PTR [rdx],0x40
   1400329fc:	add    DWORD PTR [rax],eax
   1400329fe:	add    BYTE PTR [rax],al
   140032a00:	loopne 0x1400329e9
   140032a02:	add    DWORD PTR [rax+0x1],eax
   140032a05:	add    BYTE PTR [rax],al
   140032a07:	add    dh,ah
   140032a09:	rol    DWORD PTR [rdx],0x40
   140032a0c:	add    DWORD PTR [rax],eax
   140032a0e:	add    BYTE PTR [rax],al
   140032a10:	loopne 0x1400329d3
   140032a12:	add    al,BYTE PTR [rax+0x1]
   140032a15:	add    BYTE PTR [rax],al
   140032a17:	add    dl,bl
   140032a19:	rol    DWORD PTR [rdx],0x40
   140032a1c:	add    DWORD PTR [rax],eax
   140032a1e:	add    BYTE PTR [rax],al
   140032a20:	cmp    al,ch
   140032a22:	add    al,BYTE PTR [rax+0x1]
   140032a25:	add    BYTE PTR [rax],al
   140032a27:	add    dh,cl
   140032a29:	rol    DWORD PTR [rdx],0x40
   140032a2c:	add    DWORD PTR [rax],eax
   140032a2e:	add    BYTE PTR [rax],al
   140032a30:	enter  0x2c1,0x40
   140032a34:	add    DWORD PTR [rax],eax
   140032a36:	add    BYTE PTR [rax],al
   140032a38:	ret    0x2c1
   140032a3b:	rex add DWORD PTR [rax],eax
   140032a3e:	add    BYTE PTR [rax],al
   140032a40:	mov    esp,0x14002c1
   140032a45:	add    BYTE PTR [rax],al
   140032a47:	add    BYTE PTR [rsi+0x14002c1],dh
   140032a4d:	add    BYTE PTR [rax],al
   140032a4f:	add    BYTE PTR [rax+0x14002c5],ah
   140032a55:	add    BYTE PTR [rax],al
   140032a57:	add    BYTE PTR [rdx+0x14002c5],bl
   140032a5d:	add    BYTE PTR [rax],al
   140032a5f:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140032a66:	add    BYTE PTR [rax],al
   140032a68:	mov    es,ebp
   140032a6a:	add    al,BYTE PTR [rax+0x1]
   140032a6d:	add    BYTE PTR [rax],al
   140032a6f:	add    BYTE PTR [rax+0x14002c5],cl
   140032a75:	add    BYTE PTR [rax],al
   140032a77:	add    BYTE PTR [rdx+0x14002c5],al
   140032a7d:	add    BYTE PTR [rax],al
   140032a7f:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140032a83:	rex add DWORD PTR [rax],eax
   140032a86:	add    BYTE PTR [rax],al
   140032a88:	jbe    0x140032a4f
   140032a8a:	add    al,BYTE PTR [rax+0x1]
   140032a8d:	add    BYTE PTR [rax],al
   140032a8f:	add    BYTE PTR [rax-0x3b],dh
   140032a92:	add    al,BYTE PTR [rax+0x1]
   140032a95:	add    BYTE PTR [rax],al
   140032a97:	add    BYTE PTR [rdx-0x3b],ch
   140032a9a:	add    al,BYTE PTR [rax+0x1]
   140032a9d:	add    BYTE PTR [rax],al
   140032a9f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140032aa3:	rex add DWORD PTR [rax],eax
   140032aa6:	add    BYTE PTR [rax],al
   140032aa8:	pop    rsi
   140032aa9:	(bad)
   140032aac:	add    DWORD PTR [rax],eax
   140032aae:	add    BYTE PTR [rax],al
   140032ab0:	pop    rax
   140032ab1:	(bad)
   140032ab4:	add    DWORD PTR [rax],eax
   140032ab6:	add    BYTE PTR [rax],al
   140032ab8:	push   rdx
   140032ab9:	(bad)
   140032abc:	add    DWORD PTR [rax],eax
   140032abe:	add    BYTE PTR [rax],al
   140032ac0:	(bad)
   140032ac4:	add    DWORD PTR [rax],eax
   140032ac6:	add    BYTE PTR [rax],al
   140032ac8:	(bad)
   140032acc:	add    DWORD PTR [rax],eax
   140032ace:	add    BYTE PTR [rax],al
   140032ad0:	(bad)
   140032ad4:	add    DWORD PTR [rax],eax
   140032ad6:	add    BYTE PTR [rax],al
   140032ad8:	xor    al,0xc5
   140032ada:	add    al,BYTE PTR [rax+0x1]
   140032add:	add    BYTE PTR [rax],al
   140032adf:	add    BYTE PTR [rsi],ch
   140032ae1:	(bad)
   140032ae4:	add    DWORD PTR [rax],eax
   140032ae6:	add    BYTE PTR [rax],al
   140032ae8:	sub    ch,al
   140032aea:	add    al,BYTE PTR [rax+0x1]
   140032aed:	add    BYTE PTR [rax],al
   140032aef:	add    BYTE PTR [rdx],ah
   140032af1:	(bad)
   140032af4:	add    DWORD PTR [rax],eax
   140032af6:	add    BYTE PTR [rax],al
   140032af8:	sbb    al,0xc5
   140032afa:	add    al,BYTE PTR [rax+0x1]
   140032afd:	add    BYTE PTR [rax],al
   140032aff:	add    BYTE PTR [rsi],dl
   140032b01:	(bad)
   140032b04:	add    DWORD PTR [rax],eax
   140032b06:	add    BYTE PTR [rax],al
   140032b08:	adc    ch,al
   140032b0a:	add    al,BYTE PTR [rax+0x1]
   140032b0d:	add    BYTE PTR [rax],al
   140032b0f:	add    BYTE PTR [rdx],cl
   140032b11:	(bad)
   140032b14:	add    DWORD PTR [rax],eax
   140032b16:	add    BYTE PTR [rax],al
   140032b18:	add    al,0xc5
   140032b1a:	add    al,BYTE PTR [rax+0x1]
   140032b1d:	add    BYTE PTR [rax],al
   140032b1f:	add    dh,bh
   140032b21:	(bad)
   140032b25:	add    BYTE PTR [rax],al
   140032b27:	add    al,bh
   140032b29:	(bad)
   140032b2d:	add    BYTE PTR [rax],al
   140032b2f:	add    dl,dh
   140032b31:	(bad)
   140032b35:	add    BYTE PTR [rax],al
   140032b37:	add    ah,ch
   140032b39:	(bad)
   140032b3d:	add    BYTE PTR [rax],al
   140032b3f:	add    dh,ah
   140032b41:	(bad)
   140032b45:	add    BYTE PTR [rax],al
   140032b47:	add    al,ah
   140032b49:	(bad)
   140032b4d:	add    BYTE PTR [rax],al
   140032b4f:	add    dl,bl
   140032b51:	(bad)
   140032b55:	add    BYTE PTR [rax],al
   140032b57:	add    ah,dl
   140032b59:	(bad)
   140032b5d:	add    BYTE PTR [rax],al
   140032b5f:	add    dh,cl
   140032b61:	(bad)
   140032b65:	add    BYTE PTR [rax],al
   140032b67:	add    al,cl
   140032b69:	(bad)
   140032b6d:	add    BYTE PTR [rax],al
   140032b6f:	add    dl,al
   140032b71:	(bad)
   140032b75:	add    BYTE PTR [rax],al
   140032b77:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140032b7e:	add    BYTE PTR [rax],al
   140032b80:	mov    dh,0xc4
   140032b82:	add    al,BYTE PTR [rax+0x1]
   140032b85:	add    BYTE PTR [rax],al
   140032b87:	add    BYTE PTR [rax+0x14002c4],dh
   140032b8d:	add    BYTE PTR [rax],al
   140032b8f:	add    BYTE PTR [rdx+0x14002c4],ch
   140032b95:	add    BYTE PTR [rax],al
   140032b97:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140032b9e:	add    BYTE PTR [rax],al
   140032ba0:	rol    bl,cl
   140032ba2:	add    al,BYTE PTR [rax+0x1]
   140032ba5:	add    BYTE PTR [rax],al
   140032ba7:	add    BYTE PTR [rax+0x14002c4],bl
   140032bad:	add    BYTE PTR [rax],al
   140032baf:	add    BYTE PTR [rax-0x1a],dh
   140032bb2:	add    DWORD PTR [rax+0x1],eax
   140032bb5:	add    BYTE PTR [rax],al
   140032bb7:	add    al,ah
   140032bb9:	rol    BYTE PTR [rcx],0x40
   140032bbc:	add    DWORD PTR [rax],eax
   140032bbe:	add    BYTE PTR [rax],al
   140032bc0:	lock rol BYTE PTR [rcx],0x40
   140032bc4:	add    DWORD PTR [rax],eax
   140032bc6:	add    BYTE PTR [rax],al
   140032bc8:	int3   
   140032bc9:	ret    
   140032bca:	add    al,BYTE PTR [rax+0x1]
   140032bcd:	add    BYTE PTR [rax],al
   140032bcf:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140032bd6:	add    BYTE PTR [rax],al
   140032bd8:	sub    al,0xc1
   140032bda:	add    al,BYTE PTR [rax+0x1]
   140032bdd:	add    BYTE PTR [rax],al
   140032bdf:	add    BYTE PTR [rax+0x14002c4],al
   140032be5:	add    BYTE PTR [rax],al
   140032be7:	add    BYTE PTR [rdx-0x3c],bh
   140032bea:	add    al,BYTE PTR [rax+0x1]
   140032bed:	add    BYTE PTR [rax],al
   140032bef:	add    BYTE PTR [rsp+rax*8+0x2],dh
   140032bf3:	rex add DWORD PTR [rax],eax
   140032bf6:	add    BYTE PTR [rax],al
   140032bf8:	outs   dx,BYTE PTR ds:[rsi]
   140032bf9:	(bad)
   140032bfd:	add    BYTE PTR [rax],al
   140032bff:	add    BYTE PTR [rax-0x3c],ch
   140032c02:	add    al,BYTE PTR [rax+0x1]
   140032c05:	add    BYTE PTR [rax],al
   140032c07:	add    BYTE PTR [rdx-0x3c],ah
   140032c0a:	add    al,BYTE PTR [rax+0x1]
   140032c0d:	add    BYTE PTR [rax],al
   140032c0f:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140032c13:	rex add DWORD PTR [rax],eax
   140032c16:	add    BYTE PTR [rax],al
   140032c18:	push   rsi
   140032c19:	(bad)
   140032c1d:	add    BYTE PTR [rax],al
   140032c1f:	add    BYTE PTR [rax-0x3c],dl
   140032c22:	add    al,BYTE PTR [rax+0x1]
   140032c25:	add    BYTE PTR [rax],al
   140032c27:	add    BYTE PTR [rdx-0x3c],cl
   140032c2a:	add    al,BYTE PTR [rax+0x1]
   140032c2d:	add    BYTE PTR [rax],al
   140032c2f:	add    BYTE PTR [rsp+rax*8+0x2],al
   140032c33:	rex add DWORD PTR [rax],eax
   140032c36:	add    BYTE PTR [rax],al
   140032c38:	(bad)
   140032c3d:	add    BYTE PTR [rax],al
   140032c3f:	add    BYTE PTR [rbx+rax*8],bh
   140032c42:	add    al,BYTE PTR [rax+0x1]
   140032c45:	add    BYTE PTR [rax],al
   140032c47:	add    BYTE PTR [rdx],dh
   140032c49:	(bad)
   140032c4d:	add    BYTE PTR [rax],al
   140032c4f:	add    BYTE PTR [rsi],ah
   140032c51:	(bad)
   140032c55:	add    BYTE PTR [rax],al
   140032c57:	add    BYTE PTR [rax],ah
   140032c59:	(bad)
   140032c5d:	add    BYTE PTR [rax],al
   140032c5f:	add    BYTE PTR [rsi],dh
   140032c61:	ret    
   140032c62:	add    al,BYTE PTR [rax+0x1]
   140032c65:	add    BYTE PTR [rax],al
   140032c67:	add    BYTE PTR [rax],dh
   140032c69:	ret    
   140032c6a:	add    al,BYTE PTR [rax+0x1]
   140032c6d:	add    BYTE PTR [rax],al
   140032c6f:	add    BYTE PTR [rax],al
   140032c71:	rol    DWORD PTR [rcx],0x40
   140032c74:	add    DWORD PTR [rax],eax
   140032c76:	add    BYTE PTR [rax],al
   140032c78:	(bad)  
   140032c79:	ret    
   140032c7a:	add    al,BYTE PTR [rax+0x1]
   140032c7d:	add    BYTE PTR [rax],al
   140032c7f:	add    BYTE PTR [rdx-0x3d],bl
   140032c82:	add    al,BYTE PTR [rax+0x1]
   140032c85:	add    BYTE PTR [rax],al
   140032c87:	add    BYTE PTR [rbx+rax*8+0x2],dl
   140032c8b:	rex add DWORD PTR [rax],eax
   140032c8e:	add    BYTE PTR [rax],al
   140032c90:	rex.WRX ret 
   140032c92:	add    al,BYTE PTR [rax+0x1]
   140032c95:	add    BYTE PTR [rax],al
   140032c97:	add    al,dh
   140032c99:	out    0x1,eax
   140032c9b:	rex add DWORD PTR [rax],eax
   140032c9e:	add    BYTE PTR [rax],al
   140032ca0:	rex.W ret 
   140032ca2:	add    al,BYTE PTR [rax+0x1]
   140032ca5:	add    BYTE PTR [rax],al
   140032ca7:	add    BYTE PTR [rax+0x14001ec],ah
   140032cad:	add    BYTE PTR [rax],al
   140032caf:	add    al,dl
   140032cb1:	test   BYTE PTR [rcx],0x40
   140032cb4:	add    DWORD PTR [rax],eax
   140032cb6:	add    BYTE PTR [rax],al
   140032cb8:	sub    al,bl
   140032cba:	add    al,BYTE PTR [rax+0x1]
   140032cbd:	add    BYTE PTR [rax],al
   140032cbf:	add    BYTE PTR [rax],cl
   140032cc1:	(bad)
   140032cc5:	add    BYTE PTR [rax],al
   140032cc7:	add    BYTE PTR [rdx],al
   140032cc9:	(bad)
   140032ccd:	add    BYTE PTR [rax],al
   140032ccf:	add    BYTE PTR [rdx],dh
   140032cd1:	rol    DWORD PTR [rdx],0x40
   140032cd4:	add    DWORD PTR [rax],eax
   140032cd6:	add    BYTE PTR [rax],al
   140032cd8:	cld    
   140032cd9:	ret    
   140032cda:	add    al,BYTE PTR [rax+0x1]
   140032cdd:	add    BYTE PTR [rax],al
   140032cdf:	add    dh,dh
   140032ce1:	ret    
   140032ce2:	add    al,BYTE PTR [rax+0x1]
   140032ce5:	add    BYTE PTR [rax],al
   140032ce7:	add    al,dh
   140032ce9:	ret    
   140032cea:	add    al,BYTE PTR [rax+0x1]
   140032ced:	add    BYTE PTR [rax],al
   140032cef:	add    dl,ch
   140032cf1:	ret    
   140032cf2:	add    al,BYTE PTR [rax+0x1]
   140032cf5:	add    BYTE PTR [rax],al
   140032cf7:	add    ah,ah
   140032cf9:	ret    
   140032cfa:	add    al,BYTE PTR [rax+0x1]
   140032cfd:	add    BYTE PTR [rax],al
   140032cff:	add    dh,bl
   140032d01:	ret    
   140032d02:	add    al,BYTE PTR [rax+0x1]
   140032d05:	add    BYTE PTR [rax],al
   140032d07:	add    al,bl
   140032d09:	ret    
   140032d0a:	add    al,BYTE PTR [rax+0x1]
   140032d0d:	add    BYTE PTR [rax],al
   140032d0f:	add    BYTE PTR [rax],al
   140032d11:	movsxd eax,DWORD PTR [rbx]
   140032d13:	rex add DWORD PTR [rax],eax
   140032d16:	add    BYTE PTR [rax],al
   140032d18:	retf   0x2c5
   140032d1b:	rex add DWORD PTR [rax],eax
   140032d1e:	add    BYTE PTR [rax],al
   140032d20:	shl    dl,1
   140032d22:	add    DWORD PTR [rax+0x1],eax
   140032d25:	add    BYTE PTR [rax],al
   140032d27:	add    BYTE PTR [rax+0x11],al
   140032d2a:	add    BYTE PTR [rax+0x1],al
   140032d2d:	add    BYTE PTR [rax],al
   140032d2f:	add    BYTE PTR [rax+0x11],al
   140032d32:	add    BYTE PTR [rax+0x1],al
   140032d35:	add    BYTE PTR [rax],al
   140032d37:	add    BYTE PTR [rax+0x11],al
   140032d3a:	add    BYTE PTR [rax+0x1],al
   140032d3d:	add    BYTE PTR [rax],al
   140032d3f:	add    BYTE PTR [rax],dl
   140032d41:	ret    0x4002
   140032d44:	add    DWORD PTR [rax],eax
   140032d46:	add    BYTE PTR [rax],al
   140032d48:	sub    al,0xc4
   140032d4a:	add    al,BYTE PTR [rax+0x1]
   140032d4d:	add    BYTE PTR [rax],al
   140032d4f:	add    BYTE PTR [rdx+rax*8],al
   140032d52:	add    al,BYTE PTR [rax+0x1]
   140032d55:	add    BYTE PTR [rax],al
   140032d57:	add    dh,bh
   140032d59:	rol    DWORD PTR [rdx],0x40
   140032d5c:	add    DWORD PTR [rax],eax
   140032d5e:	add    BYTE PTR [rax],al
   140032d60:	clc    
   140032d61:	rol    DWORD PTR [rdx],0x40
   140032d64:	add    DWORD PTR [rax],eax
   140032d66:	add    BYTE PTR [rax],al
   140032d68:	repnz rol DWORD PTR [rdx],0x40
   140032d6c:	add    DWORD PTR [rax],eax
   140032d6e:	add    BYTE PTR [rax],al
   140032d70:	in     al,dx
   140032d71:	rol    DWORD PTR [rdx],0x40
   140032d74:	add    DWORD PTR [rax],eax
   140032d76:	add    BYTE PTR [rax],al
   140032d78:	(bad)  
   140032d79:	(bad)
   140032d7d:	add    BYTE PTR [rax],al
   140032d7f:	add    dh,ah
   140032d81:	rol    DWORD PTR [rdx],0x40
   140032d84:	add    DWORD PTR [rax],eax
   140032d86:	add    BYTE PTR [rax],al
   140032d88:	loopne 0x140032d4b
   140032d8a:	add    al,BYTE PTR [rax+0x1]
   140032d8d:	add    BYTE PTR [rax],al
   140032d8f:	add    dl,bl
   140032d91:	rol    DWORD PTR [rdx],0x40
   140032d94:	add    DWORD PTR [rax],eax
   140032d96:	add    BYTE PTR [rax],al
   140032d98:	cmp    al,ch
   140032d9a:	add    al,BYTE PTR [rax+0x1]
   140032d9d:	add    BYTE PTR [rax],al
   140032d9f:	add    dh,cl
   140032da1:	rol    DWORD PTR [rdx],0x40
   140032da4:	add    DWORD PTR [rax],eax
   140032da6:	add    BYTE PTR [rax],al
   140032da8:	enter  0x2c1,0x40
   140032dac:	add    DWORD PTR [rax],eax
   140032dae:	add    BYTE PTR [rax],al
   140032db0:	ret    0x2c1
   140032db3:	rex add DWORD PTR [rax],eax
   140032db6:	add    BYTE PTR [rax],al
   140032db8:	mov    esp,0x14002c1
   140032dbd:	add    BYTE PTR [rax],al
   140032dbf:	add    BYTE PTR [rsi+0x14002c1],dh
   140032dc5:	add    BYTE PTR [rax],al
   140032dc7:	add    BYTE PTR [rax+0x14002c5],ah
   140032dcd:	add    BYTE PTR [rax],al
   140032dcf:	add    BYTE PTR [rdx+0x14002c5],bl
   140032dd5:	add    BYTE PTR [rax],al
   140032dd7:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140032dde:	add    BYTE PTR [rax],al
   140032de0:	mov    es,ebp
   140032de2:	add    al,BYTE PTR [rax+0x1]
   140032de5:	add    BYTE PTR [rax],al
   140032de7:	add    BYTE PTR [rax+0x14002c5],cl
   140032ded:	add    BYTE PTR [rax],al
   140032def:	add    BYTE PTR [rdx+0x14002c5],al
   140032df5:	add    BYTE PTR [rax],al
   140032df7:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140032dfb:	rex add DWORD PTR [rax],eax
   140032dfe:	add    BYTE PTR [rax],al
   140032e00:	jbe    0x140032dc7
   140032e02:	add    al,BYTE PTR [rax+0x1]
   140032e05:	add    BYTE PTR [rax],al
   140032e07:	add    BYTE PTR [rax-0x3b],dh
   140032e0a:	add    al,BYTE PTR [rax+0x1]
   140032e0d:	add    BYTE PTR [rax],al
   140032e0f:	add    BYTE PTR [rdx-0x3b],ch
   140032e12:	add    al,BYTE PTR [rax+0x1]
   140032e15:	add    BYTE PTR [rax],al
   140032e17:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140032e1b:	rex add DWORD PTR [rax],eax
   140032e1e:	add    BYTE PTR [rax],al
   140032e20:	pop    rsi
   140032e21:	(bad)
   140032e24:	add    DWORD PTR [rax],eax
   140032e26:	add    BYTE PTR [rax],al
   140032e28:	pop    rax
   140032e29:	(bad)
   140032e2c:	add    DWORD PTR [rax],eax
   140032e2e:	add    BYTE PTR [rax],al
   140032e30:	push   rdx
   140032e31:	(bad)
   140032e34:	add    DWORD PTR [rax],eax
   140032e36:	add    BYTE PTR [rax],al
   140032e38:	(bad)
   140032e3c:	add    DWORD PTR [rax],eax
   140032e3e:	add    BYTE PTR [rax],al
   140032e40:	(bad)
   140032e44:	add    DWORD PTR [rax],eax
   140032e46:	add    BYTE PTR [rax],al
   140032e48:	(bad)
   140032e4c:	add    DWORD PTR [rax],eax
   140032e4e:	add    BYTE PTR [rax],al
   140032e50:	xor    al,0xc5
   140032e52:	add    al,BYTE PTR [rax+0x1]
   140032e55:	add    BYTE PTR [rax],al
   140032e57:	add    BYTE PTR [rsi],ch
   140032e59:	(bad)
   140032e5c:	add    DWORD PTR [rax],eax
   140032e5e:	add    BYTE PTR [rax],al
   140032e60:	sub    ch,al
   140032e62:	add    al,BYTE PTR [rax+0x1]
   140032e65:	add    BYTE PTR [rax],al
   140032e67:	add    BYTE PTR [rdx],ah
   140032e69:	(bad)
   140032e6c:	add    DWORD PTR [rax],eax
   140032e6e:	add    BYTE PTR [rax],al
   140032e70:	sbb    al,0xc5
   140032e72:	add    al,BYTE PTR [rax+0x1]
   140032e75:	add    BYTE PTR [rax],al
   140032e77:	add    BYTE PTR [rsi],dl
   140032e79:	(bad)
   140032e7c:	add    DWORD PTR [rax],eax
   140032e7e:	add    BYTE PTR [rax],al
   140032e80:	adc    ch,al
   140032e82:	add    al,BYTE PTR [rax+0x1]
   140032e85:	add    BYTE PTR [rax],al
   140032e87:	add    BYTE PTR [rdx],cl
   140032e89:	(bad)
   140032e8c:	add    DWORD PTR [rax],eax
   140032e8e:	add    BYTE PTR [rax],al
   140032e90:	add    al,0xc5
   140032e92:	add    al,BYTE PTR [rax+0x1]
   140032e95:	add    BYTE PTR [rax],al
   140032e97:	add    dh,bh
   140032e99:	(bad)
   140032e9d:	add    BYTE PTR [rax],al
   140032e9f:	add    al,bh
   140032ea1:	(bad)
   140032ea5:	add    BYTE PTR [rax],al
   140032ea7:	add    dl,dh
   140032ea9:	(bad)
   140032ead:	add    BYTE PTR [rax],al
   140032eaf:	add    ah,ch
   140032eb1:	(bad)
   140032eb5:	add    BYTE PTR [rax],al
   140032eb7:	add    dh,ah
   140032eb9:	(bad)
   140032ebd:	add    BYTE PTR [rax],al
   140032ebf:	add    al,ah
   140032ec1:	(bad)
   140032ec5:	add    BYTE PTR [rax],al
   140032ec7:	add    dl,bl
   140032ec9:	(bad)
   140032ecd:	add    BYTE PTR [rax],al
   140032ecf:	add    ah,dl
   140032ed1:	(bad)
   140032ed5:	add    BYTE PTR [rax],al
   140032ed7:	add    dh,cl
   140032ed9:	(bad)
   140032edd:	add    BYTE PTR [rax],al
   140032edf:	add    al,cl
   140032ee1:	(bad)
   140032ee5:	add    BYTE PTR [rax],al
   140032ee7:	add    dl,al
   140032ee9:	(bad)
   140032eed:	add    BYTE PTR [rax],al
   140032eef:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140032ef6:	add    BYTE PTR [rax],al
   140032ef8:	mov    dh,0xc4
   140032efa:	add    al,BYTE PTR [rax+0x1]
   140032efd:	add    BYTE PTR [rax],al
   140032eff:	add    BYTE PTR [rax+0x14002c4],dh
   140032f05:	add    BYTE PTR [rax],al
   140032f07:	add    BYTE PTR [rdx+0x14002c4],ch
   140032f0d:	add    BYTE PTR [rax],al
   140032f0f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140032f16:	add    BYTE PTR [rax],al
   140032f18:	sahf   
   140032f19:	(bad)
   140032f1d:	add    BYTE PTR [rax],al
   140032f1f:	add    BYTE PTR [rax+0x14002c4],bl
   140032f25:	add    BYTE PTR [rax],al
   140032f27:	add    BYTE PTR [rax+0x11],al
   140032f2a:	add    BYTE PTR [rax+0x1],al
   140032f2d:	add    BYTE PTR [rax],al
   140032f2f:	add    al,ah
   140032f31:	rol    BYTE PTR [rcx],0x40
   140032f34:	add    DWORD PTR [rax],eax
   140032f36:	add    BYTE PTR [rax],al
   140032f38:	lock rol BYTE PTR [rcx],0x40
   140032f3c:	add    DWORD PTR [rax],eax
   140032f3e:	add    BYTE PTR [rax],al
   140032f40:	xchg   edx,eax
   140032f41:	(bad)
   140032f45:	add    BYTE PTR [rax],al
   140032f47:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140032f4e:	add    BYTE PTR [rax],al
   140032f50:	xchg   ah,al
   140032f52:	add    al,BYTE PTR [rax+0x1]
   140032f55:	add    BYTE PTR [rax],al
   140032f57:	add    BYTE PTR [rax+0x14002c4],al
   140032f5d:	add    BYTE PTR [rax],al
   140032f5f:	add    BYTE PTR [rdx-0x3c],bh
   140032f62:	add    al,BYTE PTR [rax+0x1]
   140032f65:	add    BYTE PTR [rax],al
   140032f67:	add    BYTE PTR [rsp+rax*8+0x2],dh
   140032f6b:	rex add DWORD PTR [rax],eax
   140032f6e:	add    BYTE PTR [rax],al
   140032f70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032f71:	(bad)
   140032f74:	add    DWORD PTR [rax],eax
   140032f76:	add    BYTE PTR [rax],al
   140032f78:	push   0x14002c4
   140032f7d:	add    BYTE PTR [rax],al
   140032f7f:	add    BYTE PTR [rdx-0x3c],ah
   140032f82:	add    al,BYTE PTR [rax+0x1]
   140032f85:	add    BYTE PTR [rax],al
   140032f87:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140032f8b:	rex add DWORD PTR [rax],eax
   140032f8e:	add    BYTE PTR [rax],al
   140032f90:	push   rsi
   140032f91:	(bad)
   140032f95:	add    BYTE PTR [rax],al
   140032f97:	add    BYTE PTR [rax-0x3c],dl
   140032f9a:	add    al,BYTE PTR [rax+0x1]
   140032f9d:	add    BYTE PTR [rax],al
   140032f9f:	add    BYTE PTR [rdx-0x3c],cl
   140032fa2:	add    al,BYTE PTR [rax+0x1]
   140032fa5:	add    BYTE PTR [rax],al
   140032fa7:	add    BYTE PTR [rsp+rax*8+0x2],al
   140032fab:	rex add DWORD PTR [rax],eax
   140032fae:	add    BYTE PTR [rax],al
   140032fb0:	(bad)
   140032fb5:	add    BYTE PTR [rax],al
   140032fb7:	add    BYTE PTR [rax],bh
   140032fb9:	(bad)
   140032fbd:	add    BYTE PTR [rax],al
   140032fbf:	add    BYTE PTR [rdx],dh
   140032fc1:	(bad)
   140032fc5:	add    BYTE PTR [rax],al
   140032fc7:	add    BYTE PTR [rsi],ah
   140032fc9:	(bad)
   140032fcd:	add    BYTE PTR [rax],al
   140032fcf:	add    BYTE PTR [rax],ah
   140032fd1:	(bad)
   140032fd5:	add    BYTE PTR [rax],al
   140032fd7:	add    BYTE PTR [rdx],bl
   140032fd9:	(bad)
   140032fdd:	add    BYTE PTR [rax],al
   140032fdf:	add    BYTE PTR [rsp+rax*8],dl
   140032fe2:	add    al,BYTE PTR [rax+0x1]
   140032fe5:	add    BYTE PTR [rax],al
   140032fe7:	add    ah,al
   140032fe9:	(bad)
   140032fec:	add    DWORD PTR [rax],eax
   140032fee:	add    BYTE PTR [rax],al
   140032ff0:	mov    esi,0x14002c5
   140032ff5:	add    BYTE PTR [rax],al
   140032ff7:	add    BYTE PTR [rax+0x14002c5],bh
   140032ffd:	add    BYTE PTR [rax],al
   140032fff:	add    BYTE PTR [rdx+0x14002c5],dh
   140033005:	add    BYTE PTR [rax],al
   140033007:	add    BYTE PTR [rbp+rax*8+0x14002],ch
   14003300e:	add    BYTE PTR [rax],al
   140033010:	adc    DWORD PTR [rcx],eax
   140033012:	add    BYTE PTR [rax],al
   140033014:	add    BYTE PTR [rax],al
   140033016:	add    BYTE PTR [rax],al
   140033018:	repnz add eax,DWORD PTR [rax]
   14003301b:	add    dl,dh
   14003301d:	add    eax,DWORD PTR [rax]
   14003301f:	add    BYTE PTR [rdx],bh
   140033021:	add    BYTE PTR [rax],al
   140033023:	add    BYTE PTR [rax],al
   140033025:	add    BYTE PTR [rax],al
   140033027:	add    BYTE PTR [rax],ah
   140033029:	(bad)  
   14003302a:	add    DWORD PTR [rax+0x1],eax
   14003302d:	add    BYTE PTR [rax],al
   14003302f:	add    BYTE PTR [rcx],dl
   140033031:	add    DWORD PTR [rax],eax
   140033033:	add    BYTE PTR [rax],al
   140033035:	add    BYTE PTR [rax],al
   140033037:	add    ah,dh
   140033039:	add    eax,DWORD PTR [rax]
   14003303b:	add    ah,dh
   14003303d:	add    eax,DWORD PTR [rax]
   14003303f:	add    BYTE PTR [rdx],bh
   140033041:	add    BYTE PTR [rax],al
   140033043:	add    BYTE PTR [rax],al
   140033045:	add    BYTE PTR [rax],al
   140033047:	add    BYTE PTR [rax-0x15],ah
   14003304a:	add    DWORD PTR [rax+0x1],eax
   14003304d:	add    BYTE PTR [rax],al
   14003304f:	add    BYTE PTR [rcx],dl
   140033051:	add    DWORD PTR [rax],eax
   140033053:	add    BYTE PTR [rax],al
   140033055:	add    BYTE PTR [rax],al
   140033057:	add    BYTE PTR [rcx],al
   140033059:	add    BYTE PTR [rax],al
   14003305b:	add    BYTE PTR [rcx],al
   14003305d:	add    BYTE PTR [rax],al
   14003305f:	add    BYTE PTR [rdx],bh
   140033061:	add    BYTE PTR [rax],al
   140033063:	add    BYTE PTR [rax],al
   140033065:	add    BYTE PTR [rax],al
   140033067:	add    BYTE PTR [rax+0x14001ec],dh
   14003306d:	add    BYTE PTR [rax],al
   14003306f:	add    BYTE PTR [rcx],dl
   140033071:	add    DWORD PTR [rax],eax
   140033073:	add    BYTE PTR [rax],al
   140033075:	add    eax,DWORD PTR [rax]
   140033077:	add    cl,dh
   140033079:	add    eax,DWORD PTR [rax]
   14003307b:	add    cl,dh
   14003307d:	add    eax,DWORD PTR [rax]
   14003307f:	add    BYTE PTR [rdx],bh
   140033081:	add    BYTE PTR [rax],al
   140033083:	add    BYTE PTR [rax],al
   140033085:	add    BYTE PTR [rax],al
   140033087:	add    BYTE PTR [rax+0x14001f9],ah
   14003308d:	add    BYTE PTR [rax],al
   14003308f:	add    BYTE PTR [rcx],dl
   140033091:	add    DWORD PTR [rax],eax
   140033093:	add    BYTE PTR [rax],al
   140033095:	add    eax,DWORD PTR [rax]
   140033097:	add    bl,dh
   140033099:	add    eax,DWORD PTR [rax]
   14003309b:	add    bl,dh
   14003309d:	add    eax,DWORD PTR [rax]
   14003309f:	add    BYTE PTR [rdx],bh
   1400330a1:	add    BYTE PTR [rax],al
   1400330a3:	add    BYTE PTR [rax],al
   1400330a5:	add    BYTE PTR [rax],al
   1400330a7:	add    BYTE PTR [rax+0x14001f9],ah
	...
   1400330cd:	add    BYTE PTR [rax],al
   1400330cf:	add    BYTE PTR [rax+0x1400328],bl
   1400330d5:	add    BYTE PTR [rax],al
   1400330d7:	add    al,dh
   1400330d9:	(bad)  
   1400330da:	add    BYTE PTR [rax],al
   1400330dc:	(bad)  
   1400330dd:	inc    DWORD PTR [rax]
   1400330df:	add    BYTE PTR [rax],dl
   1400330e1:	jrcxz  0x1400330e4
   1400330e3:	rex add DWORD PTR [rax],eax
   1400330e6:	add    BYTE PTR [rax],al
   1400330e8:	nop
   1400330e9:	ret    0x4001
   1400330ec:	add    DWORD PTR [rax],eax
	...
   1400330fe:	add    BYTE PTR [rax],al
   140033100:	rex.XB push r11
   140033102:	push   rax
   140033103:	push   rbp
   140033104:	rex.R
   140033105:	gs ins BYTE PTR es:[rdi],dx
   140033107:	add    dh,al
   140033109:	ret    
   14003310a:	add    al,BYTE PTR [rax+0x1]
   14003310d:	add    BYTE PTR [rax],al
   14003310f:	add    BYTE PTR [rax+0x1400334],dl
   140033115:	add    BYTE PTR [rax],al
   140033117:	add    BYTE PTR [rax+0x1400363],bh
   14003311d:	add    BYTE PTR [rax],al
   14003311f:	add    BYTE PTR [rax+0x14001fa],al
   140033125:	add    BYTE PTR [rax],al
   140033127:	add    BYTE PTR [rax+0x14001fc],al
   14003312d:	add    BYTE PTR [rax],al
   14003312f:	add    BYTE PTR [rax+0x11],al
   140033132:	add    BYTE PTR [rax+0x1],al
   140033135:	add    BYTE PTR [rax],al
   140033137:	add    BYTE PTR [rax+0x11],al
   14003313a:	add    BYTE PTR [rax+0x1],al
   14003313d:	add    BYTE PTR [rax],al
   14003313f:	add    BYTE PTR [rax+0x11],al
   140033142:	add    BYTE PTR [rax+0x1],al
   140033145:	add    BYTE PTR [rax],al
   140033147:	add    BYTE PTR [rdx-0x3d],al
   14003314a:	add    al,BYTE PTR [rax+0x1]
   14003314d:	add    BYTE PTR [rax],al
   14003314f:	add    al,dh
   140033151:	(bad)
   140033154:	add    DWORD PTR [rax],eax
   140033156:	add    BYTE PTR [rax],al
   140033158:	add    al,0xc2
   14003315a:	add    al,BYTE PTR [rax+0x1]
   14003315d:	add    BYTE PTR [rax],al
   14003315f:	add    dh,bh
   140033161:	rol    DWORD PTR [rdx],0x40
   140033164:	add    DWORD PTR [rax],eax
   140033166:	add    BYTE PTR [rax],al
   140033168:	clc    
   140033169:	rol    DWORD PTR [rdx],0x40
   14003316c:	add    DWORD PTR [rax],eax
   14003316e:	add    BYTE PTR [rax],al
   140033170:	repnz rol DWORD PTR [rdx],0x40
   140033174:	add    DWORD PTR [rax],eax
   140033176:	add    BYTE PTR [rax],al
   140033178:	in     al,dx
   140033179:	rol    DWORD PTR [rdx],0x40
   14003317c:	add    DWORD PTR [rax],eax
   14003317e:	add    BYTE PTR [rax],al
   140033180:	push   rax
   140033181:	inc    DWORD PTR [rcx]
   140033183:	rex add DWORD PTR [rax],eax
   140033186:	add    BYTE PTR [rax],al
   140033188:	out    0xc1,al
   14003318a:	add    al,BYTE PTR [rax+0x1]
   14003318d:	add    BYTE PTR [rax],al
   14003318f:	add    al,ah
   140033191:	rol    DWORD PTR [rdx],0x40
   140033194:	add    DWORD PTR [rax],eax
   140033196:	add    BYTE PTR [rax],al
   140033198:	fcmovb st,st(1)
   14003319a:	add    al,BYTE PTR [rax+0x1]
   14003319d:	add    BYTE PTR [rax],al
   14003319f:	add    BYTE PTR [rdx],bh
   1400331a1:	(bad)
   1400331a4:	add    DWORD PTR [rax],eax
   1400331a6:	add    BYTE PTR [rax],al
   1400331a8:	(bad)  
   1400331a9:	rol    DWORD PTR [rdx],0x40
   1400331ac:	add    DWORD PTR [rax],eax
   1400331ae:	add    BYTE PTR [rax],al
   1400331b0:	enter  0x2c1,0x40
   1400331b4:	add    DWORD PTR [rax],eax
   1400331b6:	add    BYTE PTR [rax],al
   1400331b8:	ret    0x2c1
   1400331bb:	rex add DWORD PTR [rax],eax
   1400331be:	add    BYTE PTR [rax],al
   1400331c0:	mov    esp,0x14002c1
   1400331c5:	add    BYTE PTR [rax],al
   1400331c7:	add    BYTE PTR [rsi+0x14002c1],dh
   1400331cd:	add    BYTE PTR [rax],al
   1400331cf:	add    BYTE PTR [rax+0x14002c5],ah
   1400331d5:	add    BYTE PTR [rax],al
   1400331d7:	add    BYTE PTR [rdx+0x14002c5],bl
   1400331dd:	add    BYTE PTR [rax],al
   1400331df:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   1400331e6:	add    BYTE PTR [rax],al
   1400331e8:	mov    es,ebp
   1400331ea:	add    al,BYTE PTR [rax+0x1]
   1400331ed:	add    BYTE PTR [rax],al
   1400331ef:	add    BYTE PTR [rax+0x14002c5],cl
   1400331f5:	add    BYTE PTR [rax],al
   1400331f7:	add    BYTE PTR [rdx+0x14002c5],al
   1400331fd:	add    BYTE PTR [rax],al
   1400331ff:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140033203:	rex add DWORD PTR [rax],eax
   140033206:	add    BYTE PTR [rax],al
   140033208:	jbe    0x1400331cf
   14003320a:	add    al,BYTE PTR [rax+0x1]
   14003320d:	add    BYTE PTR [rax],al
   14003320f:	add    BYTE PTR [rax-0x3b],dh
   140033212:	add    al,BYTE PTR [rax+0x1]
   140033215:	add    BYTE PTR [rax],al
   140033217:	add    BYTE PTR [rdx-0x3b],ch
   14003321a:	add    al,BYTE PTR [rax+0x1]
   14003321d:	add    BYTE PTR [rax],al
   14003321f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140033223:	rex add DWORD PTR [rax],eax
   140033226:	add    BYTE PTR [rax],al
   140033228:	pop    rsi
   140033229:	(bad)
   14003322c:	add    DWORD PTR [rax],eax
   14003322e:	add    BYTE PTR [rax],al
   140033230:	pop    rax
   140033231:	(bad)
   140033234:	add    DWORD PTR [rax],eax
   140033236:	add    BYTE PTR [rax],al
   140033238:	push   rdx
   140033239:	(bad)
   14003323c:	add    DWORD PTR [rax],eax
   14003323e:	add    BYTE PTR [rax],al
   140033240:	(bad)
   140033244:	add    DWORD PTR [rax],eax
   140033246:	add    BYTE PTR [rax],al
   140033248:	(bad)
   14003324c:	add    DWORD PTR [rax],eax
   14003324e:	add    BYTE PTR [rax],al
   140033250:	(bad)
   140033254:	add    DWORD PTR [rax],eax
   140033256:	add    BYTE PTR [rax],al
   140033258:	xor    al,0xc5
   14003325a:	add    al,BYTE PTR [rax+0x1]
   14003325d:	add    BYTE PTR [rax],al
   14003325f:	add    BYTE PTR [rsi],ch
   140033261:	(bad)
   140033264:	add    DWORD PTR [rax],eax
   140033266:	add    BYTE PTR [rax],al
   140033268:	sub    ch,al
   14003326a:	add    al,BYTE PTR [rax+0x1]
   14003326d:	add    BYTE PTR [rax],al
   14003326f:	add    BYTE PTR [rdx],ah
   140033271:	(bad)
   140033274:	add    DWORD PTR [rax],eax
   140033276:	add    BYTE PTR [rax],al
   140033278:	sbb    al,0xc5
   14003327a:	add    al,BYTE PTR [rax+0x1]
   14003327d:	add    BYTE PTR [rax],al
   14003327f:	add    BYTE PTR [rsi],dl
   140033281:	(bad)
   140033284:	add    DWORD PTR [rax],eax
   140033286:	add    BYTE PTR [rax],al
   140033288:	adc    ch,al
   14003328a:	add    al,BYTE PTR [rax+0x1]
   14003328d:	add    BYTE PTR [rax],al
   14003328f:	add    BYTE PTR [rdx],cl
   140033291:	(bad)
   140033294:	add    DWORD PTR [rax],eax
   140033296:	add    BYTE PTR [rax],al
   140033298:	add    al,0xc5
   14003329a:	add    al,BYTE PTR [rax+0x1]
   14003329d:	add    BYTE PTR [rax],al
   14003329f:	add    dh,bh
   1400332a1:	(bad)
   1400332a5:	add    BYTE PTR [rax],al
   1400332a7:	add    al,bh
   1400332a9:	(bad)
   1400332ad:	add    BYTE PTR [rax],al
   1400332af:	add    dl,dh
   1400332b1:	(bad)
   1400332b5:	add    BYTE PTR [rax],al
   1400332b7:	add    ah,ch
   1400332b9:	(bad)
   1400332bd:	add    BYTE PTR [rax],al
   1400332bf:	add    dh,ah
   1400332c1:	(bad)
   1400332c5:	add    BYTE PTR [rax],al
   1400332c7:	add    al,ah
   1400332c9:	(bad)
   1400332cd:	add    BYTE PTR [rax],al
   1400332cf:	add    dl,bl
   1400332d1:	(bad)
   1400332d5:	add    BYTE PTR [rax],al
   1400332d7:	add    ah,dl
   1400332d9:	(bad)
   1400332dd:	add    BYTE PTR [rax],al
   1400332df:	add    dh,cl
   1400332e1:	(bad)
   1400332e5:	add    BYTE PTR [rax],al
   1400332e7:	add    al,cl
   1400332e9:	(bad)
   1400332ed:	add    BYTE PTR [rax],al
   1400332ef:	add    dl,al
   1400332f1:	(bad)
   1400332f5:	add    BYTE PTR [rax],al
   1400332f7:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   1400332fe:	add    BYTE PTR [rax],al
   140033300:	mov    dh,0xc4
   140033302:	add    al,BYTE PTR [rax+0x1]
   140033305:	add    BYTE PTR [rax],al
   140033307:	add    BYTE PTR [rax+0x14002c4],dh
   14003330d:	add    BYTE PTR [rax],al
   14003330f:	add    BYTE PTR [rdx+0x14002c4],ch
   140033315:	add    BYTE PTR [rax],al
   140033317:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   14003331e:	add    BYTE PTR [rax],al
   140033320:	rol    bl,cl
   140033322:	add    al,BYTE PTR [rax+0x1]
   140033325:	add    BYTE PTR [rax],al
   140033327:	add    BYTE PTR [rax+0x14002c4],bl
   14003332d:	add    BYTE PTR [rax],al
   14003332f:	add    al,dl
   140033331:	std    
   140033332:	add    DWORD PTR [rax+0x1],eax
   140033335:	add    BYTE PTR [rax],al
   140033337:	add    al,ah
   140033339:	rol    BYTE PTR [rcx],0x40
   14003333c:	add    DWORD PTR [rax],eax
   14003333e:	add    BYTE PTR [rax],al
   140033340:	lock rol BYTE PTR [rcx],0x40
   140033344:	add    DWORD PTR [rax],eax
   140033346:	add    BYTE PTR [rax],al
   140033348:	int3   
   140033349:	ret    
   14003334a:	add    al,BYTE PTR [rax+0x1]
   14003334d:	add    BYTE PTR [rax],al
   14003334f:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140033356:	add    BYTE PTR [rax],al
   140033358:	sub    al,0xc1
   14003335a:	add    al,BYTE PTR [rax+0x1]
   14003335d:	add    BYTE PTR [rax],al
   14003335f:	add    BYTE PTR [rax+0x14002c4],al
   140033365:	add    BYTE PTR [rax],al
   140033367:	add    BYTE PTR [rdx-0x3c],bh
   14003336a:	add    al,BYTE PTR [rax+0x1]
   14003336d:	add    BYTE PTR [rax],al
   14003336f:	add    BYTE PTR [rsp+rax*8+0x2],dh
   140033373:	rex add DWORD PTR [rax],eax
   140033376:	add    BYTE PTR [rax],al
   140033378:	outs   dx,BYTE PTR ds:[rsi]
   140033379:	(bad)
   14003337d:	add    BYTE PTR [rax],al
   14003337f:	add    BYTE PTR [rax-0x3c],ch
   140033382:	add    al,BYTE PTR [rax+0x1]
   140033385:	add    BYTE PTR [rax],al
   140033387:	add    BYTE PTR [rdx-0x3c],ah
   14003338a:	add    al,BYTE PTR [rax+0x1]
   14003338d:	add    BYTE PTR [rax],al
   14003338f:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140033393:	rex add DWORD PTR [rax],eax
   140033396:	add    BYTE PTR [rax],al
   140033398:	push   rsi
   140033399:	(bad)
   14003339d:	add    BYTE PTR [rax],al
   14003339f:	add    BYTE PTR [rax-0x3c],dl
   1400333a2:	add    al,BYTE PTR [rax+0x1]
   1400333a5:	add    BYTE PTR [rax],al
   1400333a7:	add    BYTE PTR [rdx-0x3c],cl
   1400333aa:	add    al,BYTE PTR [rax+0x1]
   1400333ad:	add    BYTE PTR [rax],al
   1400333af:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400333b3:	rex add DWORD PTR [rax],eax
   1400333b6:	add    BYTE PTR [rax],al
   1400333b8:	(bad)
   1400333bd:	add    BYTE PTR [rax],al
   1400333bf:	add    BYTE PTR [rbx+rax*8],bh
   1400333c2:	add    al,BYTE PTR [rax+0x1]
   1400333c5:	add    BYTE PTR [rax],al
   1400333c7:	add    BYTE PTR [rdx],dh
   1400333c9:	(bad)
   1400333cd:	add    BYTE PTR [rax],al
   1400333cf:	add    BYTE PTR [rsi],ah
   1400333d1:	(bad)
   1400333d5:	add    BYTE PTR [rax],al
   1400333d7:	add    BYTE PTR [rax],ah
   1400333d9:	(bad)
   1400333dd:	add    BYTE PTR [rax],al
   1400333df:	add    BYTE PTR [rsi],dh
   1400333e1:	ret    
   1400333e2:	add    al,BYTE PTR [rax+0x1]
   1400333e5:	add    BYTE PTR [rax],al
   1400333e7:	add    BYTE PTR [rax],dh
   1400333e9:	ret    
   1400333ea:	add    al,BYTE PTR [rax+0x1]
   1400333ed:	add    BYTE PTR [rax],al
   1400333ef:	add    BYTE PTR [rax],al
   1400333f1:	rol    DWORD PTR [rcx],0x40
   1400333f4:	add    DWORD PTR [rax],eax
   1400333f6:	add    BYTE PTR [rax],al
   1400333f8:	(bad)  
   1400333f9:	ret    
   1400333fa:	add    al,BYTE PTR [rax+0x1]
   1400333fd:	add    BYTE PTR [rax],al
   1400333ff:	add    BYTE PTR [rdx-0x3d],bl
   140033402:	add    al,BYTE PTR [rax+0x1]
   140033405:	add    BYTE PTR [rax],al
   140033407:	add    BYTE PTR [rbx+rax*8+0x2],dl
   14003340b:	rex add DWORD PTR [rax],eax
   14003340e:	add    BYTE PTR [rax],al
   140033410:	rex.WRX ret 
   140033412:	add    al,BYTE PTR [rax+0x1]
   140033415:	add    BYTE PTR [rax],al
   140033417:	add    BYTE PTR [rax-0x1],ah
   14003341a:	add    DWORD PTR [rax+0x1],eax
   14003341d:	add    BYTE PTR [rax],al
   14003341f:	add    BYTE PTR [rax-0x3d],cl
   140033422:	add    al,BYTE PTR [rax+0x1]
   140033425:	add    BYTE PTR [rax],al
   140033427:	add    BYTE PTR [rax],al
   140033429:	add    al,BYTE PTR [rdx]
   14003342b:	rex add DWORD PTR [rax],eax
   14003342e:	add    BYTE PTR [rax],al
   140033430:	xor    BYTE PTR [rcx],dl
   140033432:	add    al,BYTE PTR [rax+0x1]
   140033435:	add    BYTE PTR [rax],al
   140033437:	add    BYTE PTR [rdx],ch
   140033439:	ret    
   14003343a:	add    al,BYTE PTR [rax+0x1]
   14003343d:	add    BYTE PTR [rax],al
   14003343f:	add    BYTE PTR [rax],cl
   140033441:	(bad)
   140033445:	add    BYTE PTR [rax],al
   140033447:	add    BYTE PTR [rdx],al
   140033449:	(bad)
   14003344d:	add    BYTE PTR [rax],al
   14003344f:	add    BYTE PTR [rdx],dh
   140033451:	rol    DWORD PTR [rdx],0x40
   140033454:	add    DWORD PTR [rax],eax
   140033456:	add    BYTE PTR [rax],al
   140033458:	cld    
   140033459:	ret    
   14003345a:	add    al,BYTE PTR [rax+0x1]
   14003345d:	add    BYTE PTR [rax],al
   14003345f:	add    dh,dh
   140033461:	ret    
   140033462:	add    al,BYTE PTR [rax+0x1]
   140033465:	add    BYTE PTR [rax],al
   140033467:	add    al,dh
   140033469:	ret    
   14003346a:	add    al,BYTE PTR [rax+0x1]
   14003346d:	add    BYTE PTR [rax],al
   14003346f:	add    dl,ch
   140033471:	ret    
   140033472:	add    al,BYTE PTR [rax+0x1]
   140033475:	add    BYTE PTR [rax],al
   140033477:	add    ah,ah
   140033479:	ret    
   14003347a:	add    al,BYTE PTR [rax+0x1]
   14003347d:	add    BYTE PTR [rax],al
   14003347f:	add    dh,bl
   140033481:	ret    
   140033482:	add    al,BYTE PTR [rax+0x1]
   140033485:	add    BYTE PTR [rax],al
   140033487:	add    al,bl
   140033489:	ret    
   14003348a:	add    al,BYTE PTR [rax+0x1]
   14003348d:	add    BYTE PTR [rax],al
   14003348f:	add    BYTE PTR [rcx],dl
   140033491:	add    DWORD PTR [rax],eax
   140033493:	add    BYTE PTR [rax],al
   140033495:	add    BYTE PTR [rax],al
   140033497:	add    dh,bh
   140033499:	add    eax,DWORD PTR [rax]
   14003349b:	add    dh,bh
   14003349d:	add    eax,DWORD PTR [rax]
   14003349f:	add    BYTE PTR [rdx],bh
   1400334a1:	add    BYTE PTR [rax],al
   1400334a3:	add    BYTE PTR [rax],al
   1400334a5:	add    BYTE PTR [rax],al
   1400334a7:	add    BYTE PTR [rax+0x1400200],ah
   1400334ad:	add    BYTE PTR [rax],al
   1400334af:	add    BYTE PTR [rcx],dl
   1400334b1:	add    DWORD PTR [rax],eax
   1400334b3:	add    BYTE PTR [rax],al
   1400334b5:	add    eax,DWORD PTR [rax]
   1400334b7:	add    ch,bh
   1400334b9:	add    eax,DWORD PTR [rax]
   1400334bb:	add    ch,bh
   1400334bd:	add    eax,DWORD PTR [rax]
   1400334bf:	add    BYTE PTR [rdx],bh
   1400334c1:	add    BYTE PTR [rax],al
   1400334c3:	add    BYTE PTR [rax],al
   1400334c5:	add    BYTE PTR [rax],al
   1400334c7:	add    BYTE PTR [rax+0x14001db],ah
   1400334cd:	add    BYTE PTR [rax],al
   1400334cf:	add    BYTE PTR [rcx],dl
   1400334d1:	add    DWORD PTR [rax],eax
   1400334d3:	add    BYTE PTR [rax],al
   1400334d5:	add    eax,DWORD PTR [rax]
   1400334d7:	add    BYTE PTR [rip+0x5000004],al        # 0x1450334e1
   1400334dd:	add    al,0x0
   1400334df:	add    BYTE PTR [rdx],bh
   1400334e1:	add    BYTE PTR [rax],al
   1400334e3:	add    BYTE PTR [rax],al
   1400334e5:	add    BYTE PTR [rax],al
   1400334e7:	add    BYTE PTR [rax+0x14],al
   1400334ea:	add    al,BYTE PTR [rax+0x1]
   1400334ed:	add    BYTE PTR [rax],al
   1400334ef:	add    BYTE PTR [rcx],dl
   1400334f1:	add    DWORD PTR [rax],eax
   1400334f3:	add    BYTE PTR [rax],al
   1400334f5:	add    BYTE PTR [rax],al
   1400334f7:	add    BYTE PTR [rbx],dl
   1400334f9:	add    al,0x0
   1400334fb:	add    BYTE PTR [rbx],dl
   1400334fd:	add    al,0x0
   1400334ff:	add    BYTE PTR [rdx],bh
   140033501:	add    BYTE PTR [rax],al
   140033503:	add    BYTE PTR [rax],al
   140033505:	add    BYTE PTR [rax],al
   140033507:	add    BYTE PTR [rax+0x1400209],al
   14003350d:	add    BYTE PTR [rax],al
   14003350f:	add    BYTE PTR [rcx],dl
   140033511:	add    DWORD PTR [rax],eax
   140033513:	add    BYTE PTR [rdx],al
   140033515:	add    BYTE PTR [rax],al
   140033517:	add    BYTE PTR [rdx],cl
   140033519:	add    al,0x0
   14003351b:	add    BYTE PTR [rdx],cl
   14003351d:	add    al,0x0
   14003351f:	add    BYTE PTR [rdx],bh
   140033521:	add    BYTE PTR [rax],al
   140033523:	add    BYTE PTR [rax],al
   140033525:	add    BYTE PTR [rax],al
   140033527:	add    BYTE PTR [rax],ah
   140033529:	sbb    BYTE PTR [rdx],al
   14003352b:	rex add DWORD PTR [rax],eax
   14003352e:	add    BYTE PTR [rax],al
   140033530:	adc    DWORD PTR [rcx],eax
   140033532:	add    BYTE PTR [rax],al
   140033534:	add    DWORD PTR [rax],eax
   140033536:	add    BYTE PTR [rax],al
   140033538:	or     DWORD PTR [rax+rax*1],eax
   14003353b:	add    BYTE PTR [rcx],cl
   14003353d:	add    al,0x0
   14003353f:	add    BYTE PTR [rdx],bh
   140033541:	add    BYTE PTR [rax],al
   140033543:	add    BYTE PTR [rax],al
   140033545:	add    BYTE PTR [rax],al
   140033547:	add    al,dh
   140033549:	adc    eax,DWORD PTR [rdx]
   14003354b:	rex add DWORD PTR [rax],eax
   14003354e:	add    BYTE PTR [rax],al
   140033550:	adc    DWORD PTR [rcx],eax
   140033552:	add    BYTE PTR [rax],al
   140033554:	add    al,BYTE PTR [rax]
   140033556:	add    BYTE PTR [rax],al
   140033558:	or     DWORD PTR [rax+rax*1],eax
   14003355b:	add    BYTE PTR [rcx],cl
   14003355d:	add    al,0x0
   14003355f:	add    BYTE PTR [rdx],bh
   140033561:	add    BYTE PTR [rax],al
   140033563:	add    BYTE PTR [rax],al
   140033565:	add    BYTE PTR [rax],al
   140033567:	add    al,ah
   140033569:	sbb    BYTE PTR [rdx],al
   14003356b:	rex add DWORD PTR [rax],eax
   14003356e:	add    BYTE PTR [rax],al
   140033570:	adc    DWORD PTR [rcx],eax
   140033572:	add    BYTE PTR [rax],al
   140033574:	add    al,0x0
   140033576:	add    BYTE PTR [rax],al
   140033578:	or     DWORD PTR [rax+rax*1],eax
   14003357b:	add    BYTE PTR [rcx],cl
   14003357d:	add    al,0x0
   14003357f:	add    BYTE PTR [rdx],bh
	...
   140033589:	sbb    al,BYTE PTR [rdx]
   14003358b:	rex add DWORD PTR [rax],eax
   14003358e:	add    BYTE PTR [rax],al
   140033590:	adc    DWORD PTR [rcx],eax
   140033592:	add    BYTE PTR [rax],al
   140033594:	add    al,0x0
   140033596:	add    BYTE PTR [rax],al
   140033598:	or     al,BYTE PTR [rax+rax*1]
   14003359b:	add    BYTE PTR [rdx],cl
   14003359d:	add    al,0x0
   14003359f:	add    BYTE PTR [rdx],bh
   1400335a1:	add    BYTE PTR [rax],al
   1400335a3:	add    BYTE PTR [rax],al
   1400335a5:	add    BYTE PTR [rax],al
   1400335a7:	add    BYTE PTR [rax],dl
   1400335a9:	sbb    al,BYTE PTR [rdx]
   1400335ab:	rex add DWORD PTR [rax],eax
	...
   1400335ce:	add    BYTE PTR [rax],al
   1400335d0:	add    BYTE PTR [rcx],dh
   1400335d2:	add    eax,DWORD PTR [rax+0x1]
   1400335d5:	add    BYTE PTR [rax],al
   1400335d7:	add    BYTE PTR [rax],dh
   1400335d9:	sbb    al,0x0
   1400335db:	add    bh,bh
   1400335dd:	inc    DWORD PTR [rax]
   1400335df:	add    BYTE PTR [rax-0x6],al
   1400335e2:	add    DWORD PTR [rax+0x1],eax
   1400335e5:	add    BYTE PTR [rax],al
   1400335e7:	add    BYTE PTR [rax+0x14001c2],dl
	...
   1400335fd:	add    BYTE PTR [rax],al
   1400335ff:	add    BYTE PTR [rax+0x1400339],bh
   140033605:	add    BYTE PTR [rax],al
   140033607:	add    al,dh
   140033609:	(bad)  
   14003360a:	add    BYTE PTR [rax],al
   14003360c:	(bad)  
   14003360d:	inc    DWORD PTR [rax]
   14003360f:	add    al,al
   140033611:	sbb    eax,0x14002
   140033616:	add    BYTE PTR [rax],al
   140033618:	nop
   140033619:	ret    0x4001
   14003361c:	add    DWORD PTR [rax],eax
	...
   14003362e:	add    BYTE PTR [rax],al
   140033630:	js     0x140033696
   140033632:	add    eax,DWORD PTR [rax+0x1]
   140033635:	add    BYTE PTR [rax],al
   140033637:	add    BYTE PTR [rax],al
   140033639:	(bad)  
   14003363a:	add    al,BYTE PTR [rax+0x1]
   14003363d:	add    BYTE PTR [rax],al
   14003363f:	add    al,ah
   140033641:	(bad)  
   140033642:	add    al,BYTE PTR [rax+0x1]
   140033645:	add    BYTE PTR [rax],al
   140033647:	add    BYTE PTR [rax+0x11],al
   14003364a:	add    BYTE PTR [rax+0x1],al
   14003364d:	add    BYTE PTR [rax],al
   14003364f:	add    BYTE PTR [rax+0x11],al
   140033652:	add    BYTE PTR [rax+0x1],al
   140033655:	add    BYTE PTR [rax],al
   140033657:	add    BYTE PTR [rax+0x11],al
   14003365a:	add    BYTE PTR [rax+0x1],al
   14003365d:	add    BYTE PTR [rax],al
   14003365f:	add    BYTE PTR [rdx-0x3d],al
   140033662:	add    al,BYTE PTR [rax+0x1]
   140033665:	add    BYTE PTR [rax],al
   140033667:	add    al,dh
   140033669:	(bad)
   14003366c:	add    DWORD PTR [rax],eax
   14003366e:	add    BYTE PTR [rax],al
   140033670:	add    al,0xc2
   140033672:	add    al,BYTE PTR [rax+0x1]
   140033675:	add    BYTE PTR [rax],al
   140033677:	add    dh,bh
   140033679:	rol    DWORD PTR [rdx],0x40
   14003367c:	add    DWORD PTR [rax],eax
   14003367e:	add    BYTE PTR [rax],al
   140033680:	clc    
   140033681:	rol    DWORD PTR [rdx],0x40
   140033684:	add    DWORD PTR [rax],eax
   140033686:	add    BYTE PTR [rax],al
   140033688:	repnz rol DWORD PTR [rdx],0x40
   14003368c:	add    DWORD PTR [rax],eax
   14003368e:	add    BYTE PTR [rax],al
   140033690:	in     al,dx
   140033691:	rol    DWORD PTR [rdx],0x40
   140033694:	add    DWORD PTR [rax],eax
   140033696:	add    BYTE PTR [rax],al
   140033698:	nop
   140033699:	and    al,BYTE PTR [rdx]
   14003369b:	rex add DWORD PTR [rax],eax
   14003369e:	add    BYTE PTR [rax],al
   1400336a0:	out    0xc1,al
   1400336a2:	add    al,BYTE PTR [rax+0x1]
   1400336a5:	add    BYTE PTR [rax],al
   1400336a7:	add    al,ah
   1400336a9:	rol    DWORD PTR [rdx],0x40
   1400336ac:	add    DWORD PTR [rax],eax
   1400336ae:	add    BYTE PTR [rax],al
   1400336b0:	fcmovb st,st(1)
   1400336b2:	add    al,BYTE PTR [rax+0x1]
   1400336b5:	add    BYTE PTR [rax],al
   1400336b7:	add    BYTE PTR [rdx],bh
   1400336b9:	(bad)
   1400336bc:	add    DWORD PTR [rax],eax
   1400336be:	add    BYTE PTR [rax],al
   1400336c0:	(bad)  
   1400336c1:	rol    DWORD PTR [rdx],0x40
   1400336c4:	add    DWORD PTR [rax],eax
   1400336c6:	add    BYTE PTR [rax],al
   1400336c8:	enter  0x2c1,0x40
   1400336cc:	add    DWORD PTR [rax],eax
   1400336ce:	add    BYTE PTR [rax],al
   1400336d0:	ret    0x2c1
   1400336d3:	rex add DWORD PTR [rax],eax
   1400336d6:	add    BYTE PTR [rax],al
   1400336d8:	mov    esp,0x14002c1
   1400336dd:	add    BYTE PTR [rax],al
   1400336df:	add    BYTE PTR [rsi+0x14002c1],dh
   1400336e5:	add    BYTE PTR [rax],al
   1400336e7:	add    BYTE PTR [rax+0x14002c5],ah
   1400336ed:	add    BYTE PTR [rax],al
   1400336ef:	add    BYTE PTR [rdx+0x14002c5],bl
   1400336f5:	add    BYTE PTR [rax],al
   1400336f7:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   1400336fe:	add    BYTE PTR [rax],al
   140033700:	mov    es,ebp
   140033702:	add    al,BYTE PTR [rax+0x1]
   140033705:	add    BYTE PTR [rax],al
   140033707:	add    BYTE PTR [rax+0x14002c5],cl
   14003370d:	add    BYTE PTR [rax],al
   14003370f:	add    BYTE PTR [rdx+0x14002c5],al
   140033715:	add    BYTE PTR [rax],al
   140033717:	add    BYTE PTR [rbp+rax*8+0x2],bh
   14003371b:	rex add DWORD PTR [rax],eax
   14003371e:	add    BYTE PTR [rax],al
   140033720:	jbe    0x1400336e7
   140033722:	add    al,BYTE PTR [rax+0x1]
   140033725:	add    BYTE PTR [rax],al
   140033727:	add    BYTE PTR [rax-0x3b],dh
   14003372a:	add    al,BYTE PTR [rax+0x1]
   14003372d:	add    BYTE PTR [rax],al
   14003372f:	add    BYTE PTR [rdx-0x3b],ch
   140033732:	add    al,BYTE PTR [rax+0x1]
   140033735:	add    BYTE PTR [rax],al
   140033737:	add    BYTE PTR [rbp+rax*8+0x2],ah
   14003373b:	rex add DWORD PTR [rax],eax
   14003373e:	add    BYTE PTR [rax],al
   140033740:	pop    rsi
   140033741:	(bad)
   140033744:	add    DWORD PTR [rax],eax
   140033746:	add    BYTE PTR [rax],al
   140033748:	pop    rax
   140033749:	(bad)
   14003374c:	add    DWORD PTR [rax],eax
   14003374e:	add    BYTE PTR [rax],al
   140033750:	push   rdx
   140033751:	(bad)
   140033754:	add    DWORD PTR [rax],eax
   140033756:	add    BYTE PTR [rax],al
   140033758:	(bad)
   14003375c:	add    DWORD PTR [rax],eax
   14003375e:	add    BYTE PTR [rax],al
   140033760:	(bad)
   140033764:	add    DWORD PTR [rax],eax
   140033766:	add    BYTE PTR [rax],al
   140033768:	(bad)
   14003376c:	add    DWORD PTR [rax],eax
   14003376e:	add    BYTE PTR [rax],al
   140033770:	xor    al,0xc5
   140033772:	add    al,BYTE PTR [rax+0x1]
   140033775:	add    BYTE PTR [rax],al
   140033777:	add    BYTE PTR [rsi],ch
   140033779:	(bad)
   14003377c:	add    DWORD PTR [rax],eax
   14003377e:	add    BYTE PTR [rax],al
   140033780:	sub    ch,al
   140033782:	add    al,BYTE PTR [rax+0x1]
   140033785:	add    BYTE PTR [rax],al
   140033787:	add    BYTE PTR [rdx],ah
   140033789:	(bad)
   14003378c:	add    DWORD PTR [rax],eax
   14003378e:	add    BYTE PTR [rax],al
   140033790:	sbb    al,0xc5
   140033792:	add    al,BYTE PTR [rax+0x1]
   140033795:	add    BYTE PTR [rax],al
   140033797:	add    BYTE PTR [rsi],dl
   140033799:	(bad)
   14003379c:	add    DWORD PTR [rax],eax
   14003379e:	add    BYTE PTR [rax],al
   1400337a0:	adc    ch,al
   1400337a2:	add    al,BYTE PTR [rax+0x1]
   1400337a5:	add    BYTE PTR [rax],al
   1400337a7:	add    BYTE PTR [rdx],cl
   1400337a9:	(bad)
   1400337ac:	add    DWORD PTR [rax],eax
   1400337ae:	add    BYTE PTR [rax],al
   1400337b0:	add    al,0xc5
   1400337b2:	add    al,BYTE PTR [rax+0x1]
   1400337b5:	add    BYTE PTR [rax],al
   1400337b7:	add    dh,bh
   1400337b9:	(bad)
   1400337bd:	add    BYTE PTR [rax],al
   1400337bf:	add    al,bh
   1400337c1:	(bad)
   1400337c5:	add    BYTE PTR [rax],al
   1400337c7:	add    dl,dh
   1400337c9:	(bad)
   1400337cd:	add    BYTE PTR [rax],al
   1400337cf:	add    ah,ch
   1400337d1:	(bad)
   1400337d5:	add    BYTE PTR [rax],al
   1400337d7:	add    dh,ah
   1400337d9:	(bad)
   1400337dd:	add    BYTE PTR [rax],al
   1400337df:	add    al,ah
   1400337e1:	(bad)
   1400337e5:	add    BYTE PTR [rax],al
   1400337e7:	add    dl,bl
   1400337e9:	(bad)
   1400337ed:	add    BYTE PTR [rax],al
   1400337ef:	add    ah,dl
   1400337f1:	(bad)
   1400337f5:	add    BYTE PTR [rax],al
   1400337f7:	add    dh,cl
   1400337f9:	(bad)
   1400337fd:	add    BYTE PTR [rax],al
   1400337ff:	add    al,cl
   140033801:	(bad)
   140033805:	add    BYTE PTR [rax],al
   140033807:	add    dl,al
   140033809:	(bad)
   14003380d:	add    BYTE PTR [rax],al
   14003380f:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140033816:	add    BYTE PTR [rax],al
   140033818:	mov    dh,0xc4
   14003381a:	add    al,BYTE PTR [rax+0x1]
   14003381d:	add    BYTE PTR [rax],al
   14003381f:	add    BYTE PTR [rax+0x14002c4],dh
   140033825:	add    BYTE PTR [rax],al
   140033827:	add    BYTE PTR [rdx+0x14002c4],ch
   14003382d:	add    BYTE PTR [rax],al
   14003382f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140033836:	add    BYTE PTR [rax],al
   140033838:	rol    bl,cl
   14003383a:	add    al,BYTE PTR [rax+0x1]
   14003383d:	add    BYTE PTR [rax],al
   14003383f:	add    BYTE PTR [rax+0x14002c4],bl
   140033845:	add    BYTE PTR [rax],al
   140033847:	add    BYTE PTR [rax],ah
   140033849:	and    DWORD PTR [rdx],eax
   14003384b:	rex add DWORD PTR [rax],eax
   14003384e:	add    BYTE PTR [rax],al
   140033850:	loopne 0x140033812
   140033852:	add    DWORD PTR [rax+0x1],eax
   140033855:	add    BYTE PTR [rax],al
   140033857:	add    al,dh
   140033859:	rol    BYTE PTR [rcx],0x40
   14003385c:	add    DWORD PTR [rax],eax
   14003385e:	add    BYTE PTR [rax],al
   140033860:	int3   
   140033861:	ret    
   140033862:	add    al,BYTE PTR [rax+0x1]
   140033865:	add    BYTE PTR [rax],al
   140033867:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   14003386e:	add    BYTE PTR [rax],al
   140033870:	sub    al,0xc1
   140033872:	add    al,BYTE PTR [rax+0x1]
   140033875:	add    BYTE PTR [rax],al
   140033877:	add    BYTE PTR [rax+0x14002c4],al
   14003387d:	add    BYTE PTR [rax],al
   14003387f:	add    BYTE PTR [rdx-0x3c],bh
   140033882:	add    al,BYTE PTR [rax+0x1]
   140033885:	add    BYTE PTR [rax],al
   140033887:	add    BYTE PTR [rsp+rax*8+0x2],dh
   14003388b:	rex add DWORD PTR [rax],eax
   14003388e:	add    BYTE PTR [rax],al
   140033890:	outs   dx,BYTE PTR ds:[rsi]
   140033891:	(bad)
   140033895:	add    BYTE PTR [rax],al
   140033897:	add    BYTE PTR [rax-0x3c],ch
   14003389a:	add    al,BYTE PTR [rax+0x1]
   14003389d:	add    BYTE PTR [rax],al
   14003389f:	add    BYTE PTR [rdx-0x3c],ah
   1400338a2:	add    al,BYTE PTR [rax+0x1]
   1400338a5:	add    BYTE PTR [rax],al
   1400338a7:	add    BYTE PTR [rsp+rax*8+0x2],bl
   1400338ab:	rex add DWORD PTR [rax],eax
   1400338ae:	add    BYTE PTR [rax],al
   1400338b0:	push   rsi
   1400338b1:	(bad)
   1400338b5:	add    BYTE PTR [rax],al
   1400338b7:	add    BYTE PTR [rax-0x3c],dl
   1400338ba:	add    al,BYTE PTR [rax+0x1]
   1400338bd:	add    BYTE PTR [rax],al
   1400338bf:	add    BYTE PTR [rdx-0x3c],cl
   1400338c2:	add    al,BYTE PTR [rax+0x1]
   1400338c5:	add    BYTE PTR [rax],al
   1400338c7:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400338cb:	rex add DWORD PTR [rax],eax
   1400338ce:	add    BYTE PTR [rax],al
   1400338d0:	(bad)
   1400338d5:	add    BYTE PTR [rax],al
   1400338d7:	add    BYTE PTR [rbx+rax*8],bh
   1400338da:	add    al,BYTE PTR [rax+0x1]
   1400338dd:	add    BYTE PTR [rax],al
   1400338df:	add    BYTE PTR [rdx],dh
   1400338e1:	(bad)
   1400338e5:	add    BYTE PTR [rax],al
   1400338e7:	add    BYTE PTR [rsi],ah
   1400338e9:	(bad)
   1400338ed:	add    BYTE PTR [rax],al
   1400338ef:	add    BYTE PTR [rax],ah
   1400338f1:	(bad)
   1400338f5:	add    BYTE PTR [rax],al
   1400338f7:	add    BYTE PTR [rsi],dh
   1400338f9:	ret    
   1400338fa:	add    al,BYTE PTR [rax+0x1]
   1400338fd:	add    BYTE PTR [rax],al
   1400338ff:	add    BYTE PTR [rax],dh
   140033901:	ret    
   140033902:	add    al,BYTE PTR [rax+0x1]
   140033905:	add    BYTE PTR [rax],al
   140033907:	add    BYTE PTR [rax],al
   140033909:	rol    DWORD PTR [rcx],0x40
   14003390c:	add    DWORD PTR [rax],eax
   14003390e:	add    BYTE PTR [rax],al
   140033910:	(bad)  
   140033911:	ret    
   140033912:	add    al,BYTE PTR [rax+0x1]
   140033915:	add    BYTE PTR [rax],al
   140033917:	add    BYTE PTR [rdx-0x3d],bl
   14003391a:	add    al,BYTE PTR [rax+0x1]
   14003391d:	add    BYTE PTR [rax],al
   14003391f:	add    BYTE PTR [rbx+rax*8+0x2],dl
   140033923:	rex add DWORD PTR [rax],eax
   140033926:	add    BYTE PTR [rax],al
   140033928:	rex.WRX ret 
   14003392a:	add    al,BYTE PTR [rax+0x1]
   14003392d:	add    BYTE PTR [rax],al
   14003392f:	add    BYTE PTR [rax+0x1400222],ah
   140033935:	add    BYTE PTR [rax],al
   140033937:	add    BYTE PTR [rax-0x3d],cl
   14003393a:	add    al,BYTE PTR [rax+0x1]
   14003393d:	add    BYTE PTR [rax],al
   14003393f:	add    BYTE PTR [rax+0x25],dl
   140033942:	add    al,BYTE PTR [rax+0x1]
   140033945:	add    BYTE PTR [rax],al
   140033947:	add    al,al
   140033949:	sub    al,0x2
   14003394b:	rex add DWORD PTR [rax],eax
   14003394e:	add    BYTE PTR [rax],al
   140033950:	sub    al,bl
   140033952:	add    al,BYTE PTR [rax+0x1]
   140033955:	add    BYTE PTR [rax],al
   140033957:	add    BYTE PTR [rax],cl
   140033959:	(bad)
   14003395d:	add    BYTE PTR [rax],al
   14003395f:	add    BYTE PTR [rdx],al
   140033961:	(bad)
   140033965:	add    BYTE PTR [rax],al
   140033967:	add    BYTE PTR [rdx],dh
   140033969:	rol    DWORD PTR [rdx],0x40
   14003396c:	add    DWORD PTR [rax],eax
   14003396e:	add    BYTE PTR [rax],al
   140033970:	cld    
   140033971:	ret    
   140033972:	add    al,BYTE PTR [rax+0x1]
   140033975:	add    BYTE PTR [rax],al
   140033977:	add    dh,dh
   140033979:	ret    
   14003397a:	add    al,BYTE PTR [rax+0x1]
   14003397d:	add    BYTE PTR [rax],al
   14003397f:	add    al,dh
   140033981:	ret    
   140033982:	add    al,BYTE PTR [rax+0x1]
   140033985:	add    BYTE PTR [rax],al
   140033987:	add    dl,ch
   140033989:	ret    
   14003398a:	add    al,BYTE PTR [rax+0x1]
   14003398d:	add    BYTE PTR [rax],al
   14003398f:	add    ah,ah
   140033991:	ret    
   140033992:	add    al,BYTE PTR [rax+0x1]
   140033995:	add    BYTE PTR [rax],al
   140033997:	add    dh,bl
   140033999:	ret    
   14003399a:	add    al,BYTE PTR [rax+0x1]
   14003399d:	add    BYTE PTR [rax],al
   14003399f:	add    al,bl
   1400339a1:	ret    
   1400339a2:	add    al,BYTE PTR [rax+0x1]
   1400339a5:	add    BYTE PTR [rax],al
   1400339a7:	add    dh,al
   1400339a9:	ret    
   1400339aa:	add    al,BYTE PTR [rax+0x1]
   1400339ad:	add    BYTE PTR [rax],al
   1400339af:	add    BYTE PTR [rax+0x3a],dl
   1400339b2:	add    eax,DWORD PTR [rax+0x1]
   1400339b5:	add    BYTE PTR [rax],al
   1400339b7:	add    BYTE PTR [rbx+0x53],al
   1400339ba:	push   rax
   1400339bb:	push   rbp
   1400339bc:	rex.WRB
   1400339bd:	gs jb  0x140033a27
   1400339c0:	add    BYTE PTR gs:[rax],al
	...
   1400339cf:	add    BYTE PTR [rbp+0x0],dl
   1400339d2:	outs   dx,BYTE PTR ds:[rsi]
   1400339d3:	add    BYTE PTR [rcx+0x0],ah
   1400339d6:	(bad)  
   1400339d7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400339db:	add    BYTE PTR [rax],ah
   1400339dd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400339e1:	add    BYTE PTR [rax],ah
   1400339e3:	add    BYTE PTR [rdi+0x0],ch
   1400339e6:	jo     0x1400339e8
   1400339e8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400339ec:	and    BYTE PTR [rax],al
   1400339ee:	add    BYTE PTR fs:[rbp+0x0],ah
   1400339f2:	jae    0x1400339f4
   1400339f4:	je     0x1400339f6
   1400339f6:	imul   eax,DWORD PTR [rax],0x61006e
   1400339fc:	je     0x1400339fe
   1400339fe:	imul   eax,DWORD PTR [rax],0x6e006f
   140033a04:	and    BYTE PTR [rax],al
   140033a06:	data16 add BYTE PTR [rcx+0x0],ch
   140033a0a:	ins    BYTE PTR es:[rdi],dx
   140033a0b:	add    BYTE PTR [rbp+0x0],ah
   140033a0e:	add    BYTE PTR cs:[rax],al
   140033a11:	add    BYTE PTR [rax],al
   140033a13:	add    BYTE PTR [rax],al
   140033a15:	add    BYTE PTR [rax],al
   140033a17:	add    BYTE PTR [rbp+0x0],dl
   140033a1a:	outs   dx,BYTE PTR ds:[rsi]
   140033a1b:	add    BYTE PTR [rcx+0x0],ah
   140033a1e:	(bad)  
   140033a1f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140033a23:	add    BYTE PTR [rax],ah
   140033a25:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140033a29:	add    BYTE PTR [rax],ah
   140033a2b:	add    BYTE PTR [rbp+0x0],ch
   140033a2e:	add    BYTE PTR gs:[rdx+0x0],dh
   140033a32:	add    BYTE PTR [ebp+0x0],ah
   140033a36:	and    BYTE PTR [rax],al
   140033a38:	data16 add BYTE PTR [rcx+0x0],ch
   140033a3c:	ins    BYTE PTR es:[rdi],dx
   140033a3d:	add    BYTE PTR [rbp+0x0],ah
   140033a40:	add    BYTE PTR cs:[rax],al
	...
   140033a4f:	add    BYTE PTR [rcx],dl
   140033a51:	add    DWORD PTR [rax],eax
   140033a53:	add    BYTE PTR [rax],al
   140033a55:	add    BYTE PTR [rax],al
   140033a57:	add    dl,dh
   140033a59:	add    eax,DWORD PTR [rax]
   140033a5b:	add    dl,dh
   140033a5d:	add    eax,DWORD PTR [rax]
   140033a5f:	add    BYTE PTR [rdx],bh
   140033a61:	add    BYTE PTR [rax],al
   140033a63:	add    BYTE PTR [rax],al
   140033a65:	add    BYTE PTR [rax],al
   140033a67:	add    BYTE PTR [rax],ah
   140033a69:	(bad)  
   140033a6a:	add    DWORD PTR [rax+0x1],eax
   140033a6d:	add    BYTE PTR [rax],al
   140033a6f:	add    BYTE PTR [rcx],dl
   140033a71:	add    DWORD PTR [rax],eax
   140033a73:	add    BYTE PTR [rax],al
   140033a75:	add    BYTE PTR [rax],al
   140033a77:	add    ah,dh
   140033a79:	add    eax,DWORD PTR [rax]
   140033a7b:	add    ah,dh
   140033a7d:	add    eax,DWORD PTR [rax]
   140033a7f:	add    BYTE PTR [rdx],bh
   140033a81:	add    BYTE PTR [rax],al
   140033a83:	add    BYTE PTR [rax],al
   140033a85:	add    BYTE PTR [rax],al
   140033a87:	add    BYTE PTR [rax],dl
   140033a89:	and    al,0x2
   140033a8b:	rex add DWORD PTR [rax],eax
   140033a8e:	add    BYTE PTR [rax],al
   140033a90:	adc    DWORD PTR [rcx],eax
   140033a92:	add    BYTE PTR [rax],al
   140033a94:	add    BYTE PTR [rax],al
   140033a96:	add    BYTE PTR [rax],al
   140033a98:	add    DWORD PTR [rax],eax
   140033a9a:	add    BYTE PTR [rax],al
   140033a9c:	add    DWORD PTR [rax],eax
   140033a9e:	add    BYTE PTR [rax],al
   140033aa0:	cmp    al,BYTE PTR [rax]
   140033aa2:	add    BYTE PTR [rax],al
   140033aa4:	add    BYTE PTR [rax],al
   140033aa6:	add    BYTE PTR [rax],al
   140033aa8:	(bad)  
   140033aa9:	and    eax,0x14002
   140033aae:	add    BYTE PTR [rax],al
   140033ab0:	adc    DWORD PTR [rcx],eax
   140033ab2:	add    BYTE PTR [rax],al
   140033ab4:	add    BYTE PTR [rax],al
   140033ab6:	add    BYTE PTR [rax],al
   140033ab8:	cld    
   140033ab9:	add    eax,DWORD PTR [rax]
   140033abb:	add    ah,bh
   140033abd:	add    eax,DWORD PTR [rax]
   140033abf:	add    BYTE PTR [rdx],bh
   140033ac1:	add    BYTE PTR [rax],al
   140033ac3:	add    BYTE PTR [rax],al
   140033ac5:	add    BYTE PTR [rax],al
   140033ac7:	add    BYTE PTR [rax+0x2e],ah
   140033aca:	add    al,BYTE PTR [rax+0x1]
   140033acd:	add    BYTE PTR [rax],al
   140033acf:	add    BYTE PTR [rcx],dl
   140033ad1:	add    DWORD PTR [rax],eax
   140033ad3:	add    BYTE PTR [rax],al
   140033ad5:	add    BYTE PTR [rax],al
   140033ad7:	add    bl,bh
   140033ad9:	add    eax,DWORD PTR [rax]
   140033adb:	add    bl,bh
   140033add:	add    eax,DWORD PTR [rax]
   140033adf:	add    BYTE PTR [rdx],bh
   140033ae1:	add    BYTE PTR [rax],al
   140033ae3:	add    BYTE PTR [rax],al
   140033ae5:	add    BYTE PTR [rax],al
   140033ae7:	add    BYTE PTR [rax+0x140022e],al
   140033aed:	add    BYTE PTR [rax],al
   140033aef:	add    BYTE PTR [rcx],dl
   140033af1:	add    DWORD PTR [rax],eax
   140033af3:	add    BYTE PTR [rax],al
   140033af5:	add    eax,DWORD PTR [rax]
   140033af7:	add    cl,dh
   140033af9:	add    eax,DWORD PTR [rax]
   140033afb:	add    cl,dh
   140033afd:	add    eax,DWORD PTR [rax]
   140033aff:	add    BYTE PTR [rdx],bh
	...
   140033b09:	xor    BYTE PTR [rdx],al
   140033b0b:	rex add DWORD PTR [rax],eax
   140033b0e:	add    BYTE PTR [rax],al
   140033b10:	adc    DWORD PTR [rcx],eax
   140033b12:	add    BYTE PTR [rax],al
   140033b14:	add    BYTE PTR [rbx],al
   140033b16:	add    BYTE PTR [rax],al
   140033b18:	repz add eax,DWORD PTR [rax]
   140033b1b:	add    bl,dh
   140033b1d:	add    eax,DWORD PTR [rax]
   140033b1f:	add    BYTE PTR [rdx],bh
	...
   140033b29:	xor    BYTE PTR [rdx],al
   140033b2b:	rex add DWORD PTR [rax],eax
	...
   140033b4e:	add    BYTE PTR [rax],al
   140033b50:	and    BYTE PTR [rax],al
	...
   140033b5e:	add    BYTE PTR [rax],al
   140033b60:	(bad)  
	...
   140033b6d:	add    BYTE PTR [rax],al
   140033b6f:	add    BYTE PTR [rcx],ch
   140033b71:	add    BYTE PTR [rax],al
   140033b73:	add    BYTE PTR [rax],al
   140033b75:	add    BYTE PTR [rax],al
   140033b77:	add    BYTE PTR [rax+0x140023d],dh
   140033b7d:	add    BYTE PTR [rax],al
   140033b7f:	add    BYTE PTR [rcx],al
	...
   140033b8d:	add    BYTE PTR [rax],al
   140033b8f:	add    BYTE PTR [rip+0x0],cl        # 0x140033b95
   140033b95:	add    BYTE PTR [rax],al
   140033b97:	add    al,dl
   140033b99:	add    al,BYTE PTR [r8+0x1]
   140033b9d:	add    BYTE PTR [rax],al
   140033b9f:	add    BYTE PTR [rax],dl
	...
   140033bad:	add    BYTE PTR [rax],al
   140033baf:	add    BYTE PTR [rbx],dl
   140033bb1:	add    BYTE PTR [rax],al
   140033bb3:	add    BYTE PTR [rax],al
   140033bb5:	add    BYTE PTR [rax],al
   140033bb7:	add    al,al
   140033bb9:	cmp    eax,0x14002
   140033bbe:	add    BYTE PTR [rax],al
   140033bc0:	adc    al,BYTE PTR [rcx]
	...
   140033bce:	add    BYTE PTR [rax],al
   140033bd0:	(bad)  
   140033bd1:	add    BYTE PTR [rax],al
   140033bd3:	add    BYTE PTR [rax],al
   140033bd5:	add    BYTE PTR [rax],al
   140033bd7:	add    BYTE PTR [rax+0x1400242],dh
	...
   140033bfd:	add    BYTE PTR [rax],al
   140033bff:	add    BYTE PTR [rax+0x1400365],ch
   140033c05:	add    BYTE PTR [rax],al
   140033c07:	add    BYTE PTR [rax+0x3b],dh
   140033c0a:	add    al,BYTE PTR [rax+0x1]
   140033c0d:	add    BYTE PTR [rax],al
   140033c0f:	add    al,al
   140033c11:	cmp    al,0x2
   140033c13:	rex add DWORD PTR [rax],eax
   140033c16:	add    BYTE PTR [rax],al
   140033c18:	rex adc DWORD PTR [rax],eax
   140033c1b:	rex add DWORD PTR [rax],eax
   140033c1e:	add    BYTE PTR [rax],al
   140033c20:	rex adc DWORD PTR [rax],eax
   140033c23:	rex add DWORD PTR [rax],eax
   140033c26:	add    BYTE PTR [rax],al
   140033c28:	rex adc DWORD PTR [rax],eax
   140033c2b:	rex add DWORD PTR [rax],eax
   140033c2e:	add    BYTE PTR [rax],al
   140033c30:	rol    ch,1
   140033c32:	add    al,BYTE PTR [rax+0x1]
   140033c35:	add    BYTE PTR [rax],al
   140033c37:	add    al,dh
   140033c39:	(bad)
   140033c3c:	add    DWORD PTR [rax],eax
   140033c3e:	add    BYTE PTR [rax],al
   140033c40:	add    al,0xc2
   140033c42:	add    al,BYTE PTR [rax+0x1]
   140033c45:	add    BYTE PTR [rax],al
   140033c47:	add    dh,bh
   140033c49:	rol    DWORD PTR [rdx],0x40
   140033c4c:	add    DWORD PTR [rax],eax
   140033c4e:	add    BYTE PTR [rax],al
   140033c50:	clc    
   140033c51:	rol    DWORD PTR [rdx],0x40
   140033c54:	add    DWORD PTR [rax],eax
   140033c56:	add    BYTE PTR [rax],al
   140033c58:	repnz rol DWORD PTR [rdx],0x40
   140033c5c:	add    DWORD PTR [rax],eax
   140033c5e:	add    BYTE PTR [rax],al
   140033c60:	in     al,dx
   140033c61:	rol    DWORD PTR [rdx],0x40
   140033c64:	add    DWORD PTR [rax],eax
   140033c66:	add    BYTE PTR [rax],al
   140033c68:	jo     0x140033ca7
   140033c6a:	add    al,BYTE PTR [rax+0x1]
   140033c6d:	add    BYTE PTR [rax],al
   140033c6f:	add    dh,ah
   140033c71:	rol    DWORD PTR [rdx],0x40
   140033c74:	add    DWORD PTR [rax],eax
   140033c76:	add    BYTE PTR [rax],al
   140033c78:	loopne 0x140033c3b
   140033c7a:	add    al,BYTE PTR [rax+0x1]
   140033c7d:	add    BYTE PTR [rax],al
   140033c7f:	add    dl,bl
   140033c81:	rol    DWORD PTR [rdx],0x40
   140033c84:	add    DWORD PTR [rax],eax
   140033c86:	add    BYTE PTR [rax],al
   140033c88:	cmp    al,ch
   140033c8a:	add    al,BYTE PTR [rax+0x1]
   140033c8d:	add    BYTE PTR [rax],al
   140033c8f:	add    dh,cl
   140033c91:	rol    DWORD PTR [rdx],0x40
   140033c94:	add    DWORD PTR [rax],eax
   140033c96:	add    BYTE PTR [rax],al
   140033c98:	enter  0x2c1,0x40
   140033c9c:	add    DWORD PTR [rax],eax
   140033c9e:	add    BYTE PTR [rax],al
   140033ca0:	ret    0x2c1
   140033ca3:	rex add DWORD PTR [rax],eax
   140033ca6:	add    BYTE PTR [rax],al
   140033ca8:	mov    esp,0x14002c1
   140033cad:	add    BYTE PTR [rax],al
   140033caf:	add    BYTE PTR [rsi+0x14002c1],dh
   140033cb5:	add    BYTE PTR [rax],al
   140033cb7:	add    BYTE PTR [rax+0x14002c5],ah
   140033cbd:	add    BYTE PTR [rax],al
   140033cbf:	add    BYTE PTR [rdx+0x14002c5],bl
   140033cc5:	add    BYTE PTR [rax],al
   140033cc7:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140033cce:	add    BYTE PTR [rax],al
   140033cd0:	mov    es,ebp
   140033cd2:	add    al,BYTE PTR [rax+0x1]
   140033cd5:	add    BYTE PTR [rax],al
   140033cd7:	add    BYTE PTR [rax+0x14002c5],cl
   140033cdd:	add    BYTE PTR [rax],al
   140033cdf:	add    BYTE PTR [rdx+0x14002c5],al
   140033ce5:	add    BYTE PTR [rax],al
   140033ce7:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140033ceb:	rex add DWORD PTR [rax],eax
   140033cee:	add    BYTE PTR [rax],al
   140033cf0:	jbe    0x140033cb7
   140033cf2:	add    al,BYTE PTR [rax+0x1]
   140033cf5:	add    BYTE PTR [rax],al
   140033cf7:	add    BYTE PTR [rax-0x3b],dh
   140033cfa:	add    al,BYTE PTR [rax+0x1]
   140033cfd:	add    BYTE PTR [rax],al
   140033cff:	add    BYTE PTR [rdx-0x3b],ch
   140033d02:	add    al,BYTE PTR [rax+0x1]
   140033d05:	add    BYTE PTR [rax],al
   140033d07:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140033d0b:	rex add DWORD PTR [rax],eax
   140033d0e:	add    BYTE PTR [rax],al
   140033d10:	pop    rsi
   140033d11:	(bad)
   140033d14:	add    DWORD PTR [rax],eax
   140033d16:	add    BYTE PTR [rax],al
   140033d18:	pop    rax
   140033d19:	(bad)
   140033d1c:	add    DWORD PTR [rax],eax
   140033d1e:	add    BYTE PTR [rax],al
   140033d20:	push   rdx
   140033d21:	(bad)
   140033d24:	add    DWORD PTR [rax],eax
   140033d26:	add    BYTE PTR [rax],al
   140033d28:	(bad)  
   140033d29:	(bad)
   140033d2c:	add    DWORD PTR [rax],eax
   140033d2e:	add    BYTE PTR [rax],al
   140033d30:	(bad)
   140033d34:	add    DWORD PTR [rax],eax
   140033d36:	add    BYTE PTR [rax],al
   140033d38:	(bad)
   140033d3c:	add    DWORD PTR [rax],eax
   140033d3e:	add    BYTE PTR [rax],al
   140033d40:	xor    al,0xc5
   140033d42:	add    al,BYTE PTR [rax+0x1]
   140033d45:	add    BYTE PTR [rax],al
   140033d47:	add    BYTE PTR [rsi],ch
   140033d49:	(bad)
   140033d4c:	add    DWORD PTR [rax],eax
   140033d4e:	add    BYTE PTR [rax],al
   140033d50:	sub    ch,al
   140033d52:	add    al,BYTE PTR [rax+0x1]
   140033d55:	add    BYTE PTR [rax],al
   140033d57:	add    BYTE PTR [rdx],ah
   140033d59:	(bad)
   140033d5c:	add    DWORD PTR [rax],eax
   140033d5e:	add    BYTE PTR [rax],al
   140033d60:	sbb    al,0xc5
   140033d62:	add    al,BYTE PTR [rax+0x1]
   140033d65:	add    BYTE PTR [rax],al
   140033d67:	add    BYTE PTR [rsi],dl
   140033d69:	(bad)
   140033d6c:	add    DWORD PTR [rax],eax
   140033d6e:	add    BYTE PTR [rax],al
   140033d70:	adc    ch,al
   140033d72:	add    al,BYTE PTR [rax+0x1]
   140033d75:	add    BYTE PTR [rax],al
   140033d77:	add    BYTE PTR [rdx],cl
   140033d79:	(bad)
   140033d7c:	add    DWORD PTR [rax],eax
   140033d7e:	add    BYTE PTR [rax],al
   140033d80:	add    al,0xc5
   140033d82:	add    al,BYTE PTR [rax+0x1]
   140033d85:	add    BYTE PTR [rax],al
   140033d87:	add    dh,bh
   140033d89:	(bad)
   140033d8d:	add    BYTE PTR [rax],al
   140033d8f:	add    al,bh
   140033d91:	(bad)
   140033d95:	add    BYTE PTR [rax],al
   140033d97:	add    dl,dh
   140033d99:	(bad)
   140033d9d:	add    BYTE PTR [rax],al
   140033d9f:	add    ah,ch
   140033da1:	(bad)
   140033da5:	add    BYTE PTR [rax],al
   140033da7:	add    dh,ah
   140033da9:	(bad)
   140033dad:	add    BYTE PTR [rax],al
   140033daf:	add    al,ah
   140033db1:	(bad)
   140033db5:	add    BYTE PTR [rax],al
   140033db7:	add    dl,bl
   140033db9:	(bad)
   140033dbd:	add    BYTE PTR [rax],al
   140033dbf:	add    ah,dl
   140033dc1:	(bad)
   140033dc5:	add    BYTE PTR [rax],al
   140033dc7:	add    dh,cl
   140033dc9:	(bad)
   140033dcd:	add    BYTE PTR [rax],al
   140033dcf:	add    al,cl
   140033dd1:	(bad)
   140033dd5:	add    BYTE PTR [rax],al
   140033dd7:	add    dl,al
   140033dd9:	(bad)
   140033ddd:	add    BYTE PTR [rax],al
   140033ddf:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   140033de6:	add    BYTE PTR [rax],al
   140033de8:	mov    dh,0xc4
   140033dea:	add    al,BYTE PTR [rax+0x1]
   140033ded:	add    BYTE PTR [rax],al
   140033def:	add    BYTE PTR [rax+0x14002c4],dh
   140033df5:	add    BYTE PTR [rax],al
   140033df7:	add    BYTE PTR [rdx+0x14002c4],ch
   140033dfd:	add    BYTE PTR [rax],al
   140033dff:	add    BYTE PTR [rax+0x1400243],al
   140033e05:	add    BYTE PTR [rax],al
   140033e07:	add    BYTE PTR [rsi+0x14002c4],bl
   140033e0d:	add    BYTE PTR [rax],al
   140033e0f:	add    BYTE PTR [rax+0x14002c4],bl
   140033e15:	add    BYTE PTR [rax],al
   140033e17:	add    BYTE PTR [rax+0x11],al
   140033e1a:	add    BYTE PTR [rax+0x1],al
   140033e1d:	add    BYTE PTR [rax],al
   140033e1f:	add    al,ah
   140033e21:	rol    BYTE PTR [rcx],0x40
   140033e24:	add    DWORD PTR [rax],eax
   140033e26:	add    BYTE PTR [rax],al
   140033e28:	lock rol BYTE PTR [rcx],0x40
   140033e2c:	add    DWORD PTR [rax],eax
   140033e2e:	add    BYTE PTR [rax],al
   140033e30:	xchg   cl,al
   140033e32:	add    al,BYTE PTR [rax+0x1]
   140033e35:	add    BYTE PTR [rax],al
   140033e37:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140033e3e:	add    BYTE PTR [rax],al
   140033e40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140033e41:	rol    DWORD PTR [rdx],0x40
   140033e44:	add    DWORD PTR [rax],eax
   140033e46:	add    BYTE PTR [rax],al
   140033e48:	add    ah,0x2
   140033e4b:	rex add DWORD PTR [rax],eax
   140033e4e:	add    BYTE PTR [rax],al
   140033e50:	jp     0x140033e16
   140033e52:	add    al,BYTE PTR [rax+0x1]
   140033e55:	add    BYTE PTR [rax],al
   140033e57:	add    al,dh
   140033e59:	rex.XB add al,BYTE PTR [r8+0x1]
   140033e5d:	add    BYTE PTR [rax],al
   140033e5f:	add    BYTE PTR [rsi-0x3c],ch
   140033e62:	add    al,BYTE PTR [rax+0x1]
   140033e65:	add    BYTE PTR [rax],al
   140033e67:	add    BYTE PTR [rax-0x3c],ch
   140033e6a:	add    al,BYTE PTR [rax+0x1]
   140033e6d:	add    BYTE PTR [rax],al
   140033e6f:	add    BYTE PTR [rdx-0x3c],ah
   140033e72:	add    al,BYTE PTR [rax+0x1]
   140033e75:	add    BYTE PTR [rax],al
   140033e77:	add    BYTE PTR [rsp+rax*8+0x2],bl
   140033e7b:	rex add DWORD PTR [rax],eax
   140033e7e:	add    BYTE PTR [rax],al
   140033e80:	push   rsi
   140033e81:	(bad)
   140033e85:	add    BYTE PTR [rax],al
   140033e87:	add    BYTE PTR [rax-0x3c],dl
   140033e8a:	add    al,BYTE PTR [rax+0x1]
   140033e8d:	add    BYTE PTR [rax],al
   140033e8f:	add    BYTE PTR [rdx-0x3c],cl
   140033e92:	add    al,BYTE PTR [rax+0x1]
   140033e95:	add    BYTE PTR [rax],al
   140033e97:	add    BYTE PTR [rsp+rax*8+0x2],al
   140033e9b:	rex add DWORD PTR [rax],eax
   140033e9e:	add    BYTE PTR [rax],al
   140033ea0:	(bad)
   140033ea5:	add    BYTE PTR [rax],al
   140033ea7:	add    BYTE PTR [rax],bh
   140033ea9:	(bad)
   140033ead:	add    BYTE PTR [rax],al
   140033eaf:	add    BYTE PTR [rdx],dh
   140033eb1:	(bad)
   140033eb5:	add    BYTE PTR [rax],al
   140033eb7:	add    BYTE PTR [rsi],ah
   140033eb9:	(bad)
   140033ebd:	add    BYTE PTR [rax],al
   140033ebf:	add    BYTE PTR [rax],ah
   140033ec1:	(bad)
   140033ec5:	add    BYTE PTR [rax],al
   140033ec7:	add    BYTE PTR [rdx],bl
   140033ec9:	(bad)
   140033ecd:	add    BYTE PTR [rax],al
   140033ecf:	add    BYTE PTR [rsp+rax*8],dl
   140033ed2:	add    al,BYTE PTR [rax+0x1]
   140033ed5:	add    BYTE PTR [rax],al
   140033ed7:	add    dl,ah
   140033ed9:	(bad)
   140033edc:	add    DWORD PTR [rax],eax
   140033ede:	add    BYTE PTR [rax],al
   140033ee0:	fadd   st(5),st
   140033ee2:	add    al,BYTE PTR [rax+0x1]
   140033ee5:	add    BYTE PTR [rax],al
   140033ee7:	add    BYTE PTR [rax],dl
   140033ee9:	rex.XB add al,BYTE PTR [r8+0x1]
   140033eed:	add    BYTE PTR [rax],al
   140033eef:	add    BYTE PTR [rcx+rax*8+0x14002],cl
   140033ef6:	add    BYTE PTR [rax],al
   140033ef8:	cwde   
   140033ef9:	rol    DWORD PTR [rdx],0x40
   140033efc:	add    DWORD PTR [rax],eax
   140033efe:	add    BYTE PTR [rax],al
   140033f00:	rex.XB push r11
   140033f02:	push   rax
   140033f03:	push   rbp
   140033f04:	push   rsp
   140033f05:	(bad)  
   140033f06:	(bad)  
	...
   140033f10:	and    BYTE PTR [rax+0x3],ch
   140033f13:	rex add DWORD PTR [rax],eax
   140033f16:	add    BYTE PTR [rax],al
   140033f18:	cli    
   140033f19:	(bad)
   140033f1c:	add    DWORD PTR [rax],eax
   140033f1e:	add    BYTE PTR [rax],al
   140033f20:	adc    BYTE PTR [rbx],bh
   140033f22:	add    al,BYTE PTR [rax+0x1]
   140033f25:	add    BYTE PTR [rax],al
   140033f27:	add    BYTE PTR [rax+0x11],al
   140033f2a:	add    BYTE PTR [rax+0x1],al
   140033f2d:	add    BYTE PTR [rax],al
   140033f2f:	add    BYTE PTR [rax+0x11],al
   140033f32:	add    BYTE PTR [rax+0x1],al
   140033f35:	add    BYTE PTR [rax],al
   140033f37:	add    BYTE PTR [rax+0x11],al
   140033f3a:	add    BYTE PTR [rax+0x1],al
   140033f3d:	add    BYTE PTR [rax],al
   140033f3f:	add    BYTE PTR [rdx-0x3d],al
   140033f42:	add    al,BYTE PTR [rax+0x1]
   140033f45:	add    BYTE PTR [rax],al
   140033f47:	add    BYTE PTR [rsp+rax*8],ch
   140033f4a:	add    al,BYTE PTR [rax+0x1]
   140033f4d:	add    BYTE PTR [rax],al
   140033f4f:	add    BYTE PTR [rdx+rax*8],al
   140033f52:	add    al,BYTE PTR [rax+0x1]
   140033f55:	add    BYTE PTR [rax],al
   140033f57:	add    dh,bh
   140033f59:	rol    DWORD PTR [rdx],0x40
   140033f5c:	add    DWORD PTR [rax],eax
   140033f5e:	add    BYTE PTR [rax],al
   140033f60:	clc    
   140033f61:	rol    DWORD PTR [rdx],0x40
   140033f64:	add    DWORD PTR [rax],eax
   140033f66:	add    BYTE PTR [rax],al
   140033f68:	repnz rol DWORD PTR [rdx],0x40
   140033f6c:	add    DWORD PTR [rax],eax
   140033f6e:	add    BYTE PTR [rax],al
   140033f70:	in     al,dx
   140033f71:	rol    DWORD PTR [rdx],0x40
   140033f74:	add    DWORD PTR [rax],eax
   140033f76:	add    BYTE PTR [rax],al
   140033f78:	rex.R rol DWORD PTR [rdx],0x40
   140033f7c:	add    DWORD PTR [rax],eax
   140033f7e:	add    BYTE PTR [rax],al
   140033f80:	out    0xc1,al
   140033f82:	add    al,BYTE PTR [rax+0x1]
   140033f85:	add    BYTE PTR [rax],al
   140033f87:	add    al,ah
   140033f89:	rol    DWORD PTR [rdx],0x40
   140033f8c:	add    DWORD PTR [rax],eax
   140033f8e:	add    BYTE PTR [rax],al
   140033f90:	fcmovb st,st(1)
   140033f92:	add    al,BYTE PTR [rax+0x1]
   140033f95:	add    BYTE PTR [rax],al
   140033f97:	add    BYTE PTR [rdx],bh
   140033f99:	(bad)
   140033f9c:	add    DWORD PTR [rax],eax
   140033f9e:	add    BYTE PTR [rax],al
   140033fa0:	(bad)  
   140033fa1:	rol    DWORD PTR [rdx],0x40
   140033fa4:	add    DWORD PTR [rax],eax
   140033fa6:	add    BYTE PTR [rax],al
   140033fa8:	enter  0x2c1,0x40
   140033fac:	add    DWORD PTR [rax],eax
   140033fae:	add    BYTE PTR [rax],al
   140033fb0:	ret    0x2c1
   140033fb3:	rex add DWORD PTR [rax],eax
   140033fb6:	add    BYTE PTR [rax],al
   140033fb8:	mov    esp,0x14002c1
   140033fbd:	add    BYTE PTR [rax],al
   140033fbf:	add    BYTE PTR [rsi+0x14002c1],dh
   140033fc5:	add    BYTE PTR [rax],al
   140033fc7:	add    BYTE PTR [rax+0x14002c5],ah
   140033fcd:	add    BYTE PTR [rax],al
   140033fcf:	add    BYTE PTR [rdx+0x14002c5],bl
   140033fd5:	add    BYTE PTR [rax],al
   140033fd7:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140033fde:	add    BYTE PTR [rax],al
   140033fe0:	mov    es,ebp
   140033fe2:	add    al,BYTE PTR [rax+0x1]
   140033fe5:	add    BYTE PTR [rax],al
   140033fe7:	add    BYTE PTR [rax+0x14002c5],cl
   140033fed:	add    BYTE PTR [rax],al
   140033fef:	add    BYTE PTR [rdx+0x14002c5],al
   140033ff5:	add    BYTE PTR [rax],al
   140033ff7:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140033ffb:	rex add DWORD PTR [rax],eax
   140033ffe:	add    BYTE PTR [rax],al
   140034000:	jbe    0x140033fc7
   140034002:	add    al,BYTE PTR [rax+0x1]
   140034005:	add    BYTE PTR [rax],al
   140034007:	add    BYTE PTR [rax-0x3b],dh
   14003400a:	add    al,BYTE PTR [rax+0x1]
   14003400d:	add    BYTE PTR [rax],al
   14003400f:	add    BYTE PTR [rdx-0x3b],ch
   140034012:	add    al,BYTE PTR [rax+0x1]
   140034015:	add    BYTE PTR [rax],al
   140034017:	add    BYTE PTR [rbp+rax*8+0x2],ah
   14003401b:	rex add DWORD PTR [rax],eax
   14003401e:	add    BYTE PTR [rax],al
   140034020:	pop    rsi
   140034021:	(bad)
   140034024:	add    DWORD PTR [rax],eax
   140034026:	add    BYTE PTR [rax],al
   140034028:	pop    rax
   140034029:	(bad)
   14003402c:	add    DWORD PTR [rax],eax
   14003402e:	add    BYTE PTR [rax],al
   140034030:	push   rdx
   140034031:	(bad)
   140034034:	add    DWORD PTR [rax],eax
   140034036:	add    BYTE PTR [rax],al
   140034038:	(bad)
   14003403c:	add    DWORD PTR [rax],eax
   14003403e:	add    BYTE PTR [rax],al
   140034040:	rex.WX rol QWORD PTR [rdx],0x40
   140034044:	add    DWORD PTR [rax],eax
   140034046:	add    BYTE PTR [rax],al
   140034048:	(bad)
   14003404c:	add    DWORD PTR [rax],eax
   14003404e:	add    BYTE PTR [rax],al
   140034050:	xor    al,0xc5
   140034052:	add    al,BYTE PTR [rax+0x1]
   140034055:	add    BYTE PTR [rax],al
   140034057:	add    BYTE PTR [rsi],ch
   140034059:	(bad)
   14003405c:	add    DWORD PTR [rax],eax
   14003405e:	add    BYTE PTR [rax],al
   140034060:	sub    ch,al
   140034062:	add    al,BYTE PTR [rax+0x1]
   140034065:	add    BYTE PTR [rax],al
   140034067:	add    BYTE PTR [rdx],ah
   140034069:	(bad)
   14003406c:	add    DWORD PTR [rax],eax
   14003406e:	add    BYTE PTR [rax],al
   140034070:	sbb    al,0xc5
   140034072:	add    al,BYTE PTR [rax+0x1]
   140034075:	add    BYTE PTR [rax],al
   140034077:	add    BYTE PTR [rsi],dl
   140034079:	(bad)
   14003407c:	add    DWORD PTR [rax],eax
   14003407e:	add    BYTE PTR [rax],al
   140034080:	adc    ch,al
   140034082:	add    al,BYTE PTR [rax+0x1]
   140034085:	add    BYTE PTR [rax],al
   140034087:	add    BYTE PTR [rdx],cl
   140034089:	(bad)
   14003408c:	add    DWORD PTR [rax],eax
   14003408e:	add    BYTE PTR [rax],al
   140034090:	add    al,0xc5
   140034092:	add    al,BYTE PTR [rax+0x1]
   140034095:	add    BYTE PTR [rax],al
   140034097:	add    dh,bh
   140034099:	(bad)
   14003409d:	add    BYTE PTR [rax],al
   14003409f:	add    al,bh
   1400340a1:	(bad)
   1400340a5:	add    BYTE PTR [rax],al
   1400340a7:	add    dl,dh
   1400340a9:	(bad)
   1400340ad:	add    BYTE PTR [rax],al
   1400340af:	add    ah,ch
   1400340b1:	(bad)
   1400340b5:	add    BYTE PTR [rax],al
   1400340b7:	add    dh,ah
   1400340b9:	(bad)
   1400340bd:	add    BYTE PTR [rax],al
   1400340bf:	add    al,ah
   1400340c1:	(bad)
   1400340c5:	add    BYTE PTR [rax],al
   1400340c7:	add    dl,bl
   1400340c9:	(bad)
   1400340cd:	add    BYTE PTR [rax],al
   1400340cf:	add    ah,dl
   1400340d1:	(bad)
   1400340d5:	add    BYTE PTR [rax],al
   1400340d7:	add    dh,cl
   1400340d9:	(bad)
   1400340dd:	add    BYTE PTR [rax],al
   1400340df:	add    al,cl
   1400340e1:	(bad)
   1400340e5:	add    BYTE PTR [rax],al
   1400340e7:	add    dl,al
   1400340e9:	(bad)
   1400340ed:	add    BYTE PTR [rax],al
   1400340ef:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   1400340f6:	add    BYTE PTR [rax],al
   1400340f8:	mov    dh,0xc4
   1400340fa:	add    al,BYTE PTR [rax+0x1]
   1400340fd:	add    BYTE PTR [rax],al
   1400340ff:	add    BYTE PTR [rax+0x14002c4],dh
   140034105:	add    BYTE PTR [rax],al
   140034107:	add    BYTE PTR [rdx+0x14002c4],ch
   14003410d:	add    BYTE PTR [rax],al
   14003410f:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   140034116:	add    BYTE PTR [rax],al
   140034118:	sahf   
   140034119:	(bad)
   14003411d:	add    BYTE PTR [rax],al
   14003411f:	add    BYTE PTR [rax+0x14002c4],bl
   140034125:	add    BYTE PTR [rax],al
   140034127:	add    BYTE PTR [rax+0x11],al
   14003412a:	add    BYTE PTR [rax+0x1],al
   14003412d:	add    BYTE PTR [rax],al
   14003412f:	add    al,ah
   140034131:	rol    BYTE PTR [rcx],0x40
   140034134:	add    DWORD PTR [rax],eax
   140034136:	add    BYTE PTR [rax],al
   140034138:	lock rol BYTE PTR [rcx],0x40
   14003413c:	add    DWORD PTR [rax],eax
   14003413e:	add    BYTE PTR [rax],al
   140034140:	call   0x14143440a
   140034145:	add    BYTE PTR [rax],al
   140034147:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   14003414e:	add    BYTE PTR [rax],al
   140034150:	push   rax
   140034151:	rol    DWORD PTR [rdx],0x40
   140034154:	add    DWORD PTR [rax],eax
   140034156:	add    BYTE PTR [rax],al
   140034158:	add    ah,0x2
   14003415b:	rex add DWORD PTR [rax],eax
   14003415e:	add    BYTE PTR [rax],al
   140034160:	jp     0x140034126
   140034162:	add    al,BYTE PTR [rax+0x1]
   140034165:	add    BYTE PTR [rax],al
   140034167:	add    BYTE PTR [rsp+rax*8+0x2],dh
   14003416b:	rex add DWORD PTR [rax],eax
   14003416e:	add    BYTE PTR [rax],al
   140034170:	outs   dx,BYTE PTR ds:[rsi]
   140034171:	(bad)
   140034175:	add    BYTE PTR [rax],al
   140034177:	add    BYTE PTR [rax-0x3c],ch
   14003417a:	add    al,BYTE PTR [rax+0x1]
   14003417d:	add    BYTE PTR [rax],al
   14003417f:	add    BYTE PTR [rdx-0x3c],ah
   140034182:	add    al,BYTE PTR [rax+0x1]
   140034185:	add    BYTE PTR [rax],al
   140034187:	add    BYTE PTR [rsp+rax*8+0x2],bl
   14003418b:	rex add DWORD PTR [rax],eax
   14003418e:	add    BYTE PTR [rax],al
   140034190:	push   rsi
   140034191:	(bad)
   140034195:	add    BYTE PTR [rax],al
   140034197:	add    BYTE PTR [rax-0x3c],dl
   14003419a:	add    al,BYTE PTR [rax+0x1]
   14003419d:	add    BYTE PTR [rax],al
   14003419f:	add    BYTE PTR [rdx-0x3c],cl
   1400341a2:	add    al,BYTE PTR [rax+0x1]
   1400341a5:	add    BYTE PTR [rax],al
   1400341a7:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400341ab:	rex add DWORD PTR [rax],eax
   1400341ae:	add    BYTE PTR [rax],al
   1400341b0:	(bad)
   1400341b5:	add    BYTE PTR [rax],al
   1400341b7:	add    BYTE PTR [rbx+rax*8],bh
   1400341ba:	add    al,BYTE PTR [rax+0x1]
   1400341bd:	add    BYTE PTR [rax],al
   1400341bf:	add    BYTE PTR [rdx],dh
   1400341c1:	(bad)
   1400341c5:	add    BYTE PTR [rax],al
   1400341c7:	add    BYTE PTR [rsi],ah
   1400341c9:	(bad)
   1400341cd:	add    BYTE PTR [rax],al
   1400341cf:	add    BYTE PTR [rax],ah
   1400341d1:	(bad)
   1400341d5:	add    BYTE PTR [rax],al
   1400341d7:	add    BYTE PTR [rsi],dh
   1400341d9:	ret    
   1400341da:	add    al,BYTE PTR [rax+0x1]
   1400341dd:	add    BYTE PTR [rax],al
   1400341df:	add    BYTE PTR [rax],dh
   1400341e1:	ret    
   1400341e2:	add    al,BYTE PTR [rax+0x1]
   1400341e5:	add    BYTE PTR [rax],al
   1400341e7:	add    BYTE PTR [rdx-0x3f],bh
   1400341ea:	add    al,BYTE PTR [rax+0x1]
   1400341ed:	add    BYTE PTR [rax],al
   1400341ef:	add    BYTE PTR [rsi-0x3f],ch
   1400341f2:	add    al,BYTE PTR [rax+0x1]
   1400341f5:	add    BYTE PTR [rax],al
   1400341f7:	add    BYTE PTR [rax-0x3f],ch
   1400341fa:	add    al,BYTE PTR [rax+0x1]
   1400341fd:	add    BYTE PTR [rax],al
   1400341ff:	add    BYTE PTR [rdx-0x3f],ah
   140034202:	add    al,BYTE PTR [rax+0x1]
   140034205:	add    BYTE PTR [rax],al
   140034207:	add    BYTE PTR [rcx+rax*8+0x2],bl
   14003420b:	rex add DWORD PTR [rax],eax
   14003420e:	add    BYTE PTR [rax],al
   140034210:	loopne 0x14003424c
   140034212:	add    al,BYTE PTR [rax+0x1]
   140034215:	add    BYTE PTR [rax],al
   140034217:	add    BYTE PTR [rax-0x3d],cl
   14003421a:	add    al,BYTE PTR [rax+0x1]
   14003421d:	add    BYTE PTR [rax],al
   14003421f:	add    ah,dh
   140034221:	(bad)
   140034224:	add    DWORD PTR [rax],eax
   140034226:	add    BYTE PTR [rax],al
   140034228:	out    dx,al
   140034229:	(bad)
   14003422c:	add    DWORD PTR [rax],eax
   14003422e:	add    BYTE PTR [rax],al
   140034230:	sub    al,bl
   140034232:	add    al,BYTE PTR [rax+0x1]
   140034235:	add    BYTE PTR [rax],al
   140034237:	add    BYTE PTR [rax+0x14002c1],al
   14003423d:	add    BYTE PTR [rax],al
   14003423f:	add    BYTE PTR [rcx+rax*8+0x2],dh
   140034243:	rex add DWORD PTR [rax],eax
   140034246:	add    BYTE PTR [rax],al
   140034248:	push   rsi
   140034249:	rol    DWORD PTR [rdx],0x40
   14003424c:	add    DWORD PTR [rax],eax
   14003424e:	add    BYTE PTR [rax],al
   140034250:	rol    DWORD PTR ds:[rdx],0x40
   140034254:	add    DWORD PTR [rax],eax
   140034256:	add    BYTE PTR [rax],al
   140034258:	xor    BYTE PTR [rsi+0x3],ah
   14003425b:	rex add DWORD PTR [rax],eax
   14003425e:	add    BYTE PTR [rax],al
   140034260:	cmp    cl,al
   140034262:	add    al,BYTE PTR [rax+0x1]
   140034265:	add    BYTE PTR [rax],al
   140034267:	add    BYTE PTR [rdx+0x14002c1],ch
   14003426d:	add    BYTE PTR [rax],al
   14003426f:	add    BYTE PTR [rsi+0x14002c1],bl
   140034275:	add    BYTE PTR [rax],al
   140034277:	add    BYTE PTR [rax],ah
   140034279:	add    r8b,BYTE PTR [rax+0x1]
   14003427d:	add    BYTE PTR [rax],al
   14003427f:	add    BYTE PTR [rdx+0x14002c1],dl
   140034285:	add    BYTE PTR [rax],al
   140034287:	add    BYTE PTR [rax],al
   140034289:	(bad)  
   14003428a:	add    eax,DWORD PTR [rax+0x1]
   14003428d:	add    BYTE PTR [rax],al
   14003428f:	add    BYTE PTR [rax-0xffff8e],bl
   140034295:	inc    DWORD PTR [rax]
	...
   14003429f:	add    BYTE PTR [rax+0x3b],ah
   1400342a2:	add    al,BYTE PTR [rax+0x1]
	...
   1400342b5:	add    BYTE PTR [rax],al
   1400342b7:	add    BYTE PTR [rdx],ch
   1400342b9:	add    BYTE PTR [rax],al
   1400342bb:	add    BYTE PTR [rax],al
   1400342bd:	add    BYTE PTR [rax],al
   1400342bf:	add    dh,al
   1400342c1:	ret    
   1400342c2:	add    al,BYTE PTR [rax+0x1]
   1400342c5:	add    BYTE PTR [rax],al
   1400342c7:	add    BYTE PTR [rax],al
   1400342c9:	rex.RXB add r8d,DWORD PTR [r8+0x1]
	...
   1400342d5:	add    BYTE PTR [rax],al
   1400342d7:	add    BYTE PTR [rbx+0x53],al
   1400342da:	push   rax
   1400342db:	push   rbp
   1400342dc:	push   rsi
   1400342dd:	imul   esp,DWORD PTR [rbp+0x77],0x0
   1400342e4:	add    BYTE PTR [rax],al
   1400342e6:	add    BYTE PTR [rax],al
   1400342e8:	add    BYTE PTR es:[rbx+0x0],al
   1400342ec:	(bad)  
   1400342ed:	add    BYTE PTR [rsi+0x0],ch
   1400342f0:	movsxd eax,DWORD PTR [rax]
   1400342f2:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
	...
   1400342ff:	add    BYTE PTR [rbp+0x0],dl
   140034302:	outs   dx,BYTE PTR ds:[rsi]
   140034303:	add    BYTE PTR [rcx+0x0],ah
   140034306:	(bad)  
   140034307:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003430b:	add    BYTE PTR [rax],ah
   14003430d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140034311:	add    BYTE PTR [rax],ah
   140034313:	add    BYTE PTR [rax+rax*1+0x69],ah
   140034317:	add    BYTE PTR [rbx+0x0],dh
   14003431a:	jo     0x14003431c
   14003431c:	ins    BYTE PTR es:[rdi],dx
   14003431d:	add    BYTE PTR [rcx+0x0],ah
   140034320:	jns    0x140034322
   140034322:	and    BYTE PTR [rax],al
   140034324:	add    BYTE PTR gs:[rsi+0x0],ch
   140034328:	je     0x14003432a
   14003432a:	imul   eax,DWORD PTR [rax],0x650072
   140034330:	and    BYTE PTR [rax],al
   140034332:	jb     0x140034334
   140034334:	add    BYTE PTR gs:[rbx+0x0],dh
   140034338:	jne    0x14003433a
   14003433a:	ins    BYTE PTR es:[rdi],dx
   14003433b:	add    BYTE PTR [rax+rax*1+0x2e],dh
	...
   140034347:	add    BYTE PTR [rbx+0x0],al
   14003434a:	ins    BYTE PTR es:[rdi],dx
   14003434b:	add    BYTE PTR [rdi+0x0],ch
   14003434e:	jae    0x140034350
   140034350:	add    BYTE PTR gs:[rax],al
   140034353:	add    BYTE PTR [rax],al
   140034355:	add    BYTE PTR [rax],al
   140034357:	add    BYTE PTR [rax],bl
   140034359:	imul   eax,DWORD PTR [rbx],0x140
   14003435f:	add    al,ah
   140034361:	pop    rdi
   140034362:	add    al,BYTE PTR [rax+0x1]
   140034365:	add    BYTE PTR [rax],al
   140034367:	add    BYTE PTR [rax+0x61],ah
   14003436a:	add    al,BYTE PTR [rax+0x1]
   14003436d:	add    BYTE PTR [rax],al
   14003436f:	add    BYTE PTR [rax+0x11],al
   140034372:	add    BYTE PTR [rax+0x1],al
   140034375:	add    BYTE PTR [rax],al
   140034377:	add    BYTE PTR [rax+0x11],al
   14003437a:	add    BYTE PTR [rax+0x1],al
   14003437d:	add    BYTE PTR [rax],al
   14003437f:	add    BYTE PTR [rax+0x11],al
   140034382:	add    BYTE PTR [rax+0x1],al
   140034385:	add    BYTE PTR [rax],al
   140034387:	add    BYTE PTR [rdx-0x3d],al
   14003438a:	add    al,BYTE PTR [rax+0x1]
   14003438d:	add    BYTE PTR [rax],al
   14003438f:	add    al,dh
   140034391:	(bad)
   140034394:	add    DWORD PTR [rax],eax
   140034396:	add    BYTE PTR [rax],al
   140034398:	add    al,0xc2
   14003439a:	add    al,BYTE PTR [rax+0x1]
   14003439d:	add    BYTE PTR [rax],al
   14003439f:	add    dh,bh
   1400343a1:	rol    DWORD PTR [rdx],0x40
   1400343a4:	add    DWORD PTR [rax],eax
   1400343a6:	add    BYTE PTR [rax],al
   1400343a8:	clc    
   1400343a9:	rol    DWORD PTR [rdx],0x40
   1400343ac:	add    DWORD PTR [rax],eax
   1400343ae:	add    BYTE PTR [rax],al
   1400343b0:	repnz rol DWORD PTR [rdx],0x40
   1400343b4:	add    DWORD PTR [rax],eax
   1400343b6:	add    BYTE PTR [rax],al
   1400343b8:	in     al,dx
   1400343b9:	rol    DWORD PTR [rdx],0x40
   1400343bc:	add    DWORD PTR [rax],eax
   1400343be:	add    BYTE PTR [rax],al
   1400343c0:	jo     0x140034425
   1400343c2:	add    al,BYTE PTR [rax+0x1]
   1400343c5:	add    BYTE PTR [rax],al
   1400343c7:	add    dh,ah
   1400343c9:	rol    DWORD PTR [rdx],0x40
   1400343cc:	add    DWORD PTR [rax],eax
   1400343ce:	add    BYTE PTR [rax],al
   1400343d0:	loopne 0x140034393
   1400343d2:	add    al,BYTE PTR [rax+0x1]
   1400343d5:	add    BYTE PTR [rax],al
   1400343d7:	add    dl,bl
   1400343d9:	rol    DWORD PTR [rdx],0x40
   1400343dc:	add    DWORD PTR [rax],eax
   1400343de:	add    BYTE PTR [rax],al
   1400343e0:	cmp    al,ch
   1400343e2:	add    al,BYTE PTR [rax+0x1]
   1400343e5:	add    BYTE PTR [rax],al
   1400343e7:	add    dh,cl
   1400343e9:	rol    DWORD PTR [rdx],0x40
   1400343ec:	add    DWORD PTR [rax],eax
   1400343ee:	add    BYTE PTR [rax],al
   1400343f0:	enter  0x2c1,0x40
   1400343f4:	add    DWORD PTR [rax],eax
   1400343f6:	add    BYTE PTR [rax],al
   1400343f8:	ret    0x2c1
   1400343fb:	rex add DWORD PTR [rax],eax
   1400343fe:	add    BYTE PTR [rax],al
   140034400:	mov    esp,0x14002c1
   140034405:	add    BYTE PTR [rax],al
   140034407:	add    BYTE PTR [rsi+0x14002c1],dh
   14003440d:	add    BYTE PTR [rax],al
   14003440f:	add    BYTE PTR [rax+0x14002c5],ah
   140034415:	add    BYTE PTR [rax],al
   140034417:	add    BYTE PTR [rdx+0x14002c5],bl
   14003441d:	add    BYTE PTR [rax],al
   14003441f:	add    BYTE PTR [rbp+rax*8+0x14002],dl
   140034426:	add    BYTE PTR [rax],al
   140034428:	mov    es,ebp
   14003442a:	add    al,BYTE PTR [rax+0x1]
   14003442d:	add    BYTE PTR [rax],al
   14003442f:	add    BYTE PTR [rax+0x14002c5],cl
   140034435:	add    BYTE PTR [rax],al
   140034437:	add    BYTE PTR [rdx+0x14002c5],al
   14003443d:	add    BYTE PTR [rax],al
   14003443f:	add    BYTE PTR [rbp+rax*8+0x2],bh
   140034443:	rex add DWORD PTR [rax],eax
   140034446:	add    BYTE PTR [rax],al
   140034448:	jbe    0x14003440f
   14003444a:	add    al,BYTE PTR [rax+0x1]
   14003444d:	add    BYTE PTR [rax],al
   14003444f:	add    BYTE PTR [rax-0x3b],dh
   140034452:	add    al,BYTE PTR [rax+0x1]
   140034455:	add    BYTE PTR [rax],al
   140034457:	add    BYTE PTR [rdx-0x3b],ch
   14003445a:	add    al,BYTE PTR [rax+0x1]
   14003445d:	add    BYTE PTR [rax],al
   14003445f:	add    BYTE PTR [rbp+rax*8+0x2],ah
   140034463:	rex add DWORD PTR [rax],eax
   140034466:	add    BYTE PTR [rax],al
   140034468:	pop    rsi
   140034469:	(bad)
   14003446c:	add    DWORD PTR [rax],eax
   14003446e:	add    BYTE PTR [rax],al
   140034470:	pop    rax
   140034471:	(bad)
   140034474:	add    DWORD PTR [rax],eax
   140034476:	add    BYTE PTR [rax],al
   140034478:	push   rdx
   140034479:	(bad)
   14003447c:	add    DWORD PTR [rax],eax
   14003447e:	add    BYTE PTR [rax],al
   140034480:	(bad)
   140034484:	add    DWORD PTR [rax],eax
   140034486:	add    BYTE PTR [rax],al
   140034488:	(bad)
   14003448c:	add    DWORD PTR [rax],eax
   14003448e:	add    BYTE PTR [rax],al
   140034490:	(bad)
   140034494:	add    DWORD PTR [rax],eax
   140034496:	add    BYTE PTR [rax],al
   140034498:	xor    al,0xc5
   14003449a:	add    al,BYTE PTR [rax+0x1]
   14003449d:	add    BYTE PTR [rax],al
   14003449f:	add    BYTE PTR [rsi],ch
   1400344a1:	(bad)
   1400344a4:	add    DWORD PTR [rax],eax
   1400344a6:	add    BYTE PTR [rax],al
   1400344a8:	sub    ch,al
   1400344aa:	add    al,BYTE PTR [rax+0x1]
   1400344ad:	add    BYTE PTR [rax],al
   1400344af:	add    BYTE PTR [rdx],ah
   1400344b1:	(bad)
   1400344b4:	add    DWORD PTR [rax],eax
   1400344b6:	add    BYTE PTR [rax],al
   1400344b8:	sbb    al,0xc5
   1400344ba:	add    al,BYTE PTR [rax+0x1]
   1400344bd:	add    BYTE PTR [rax],al
   1400344bf:	add    BYTE PTR [rsi],dl
   1400344c1:	(bad)
   1400344c4:	add    DWORD PTR [rax],eax
   1400344c6:	add    BYTE PTR [rax],al
   1400344c8:	adc    ch,al
   1400344ca:	add    al,BYTE PTR [rax+0x1]
   1400344cd:	add    BYTE PTR [rax],al
   1400344cf:	add    BYTE PTR [rdx],cl
   1400344d1:	(bad)
   1400344d4:	add    DWORD PTR [rax],eax
   1400344d6:	add    BYTE PTR [rax],al
   1400344d8:	add    al,0xc5
   1400344da:	add    al,BYTE PTR [rax+0x1]
   1400344dd:	add    BYTE PTR [rax],al
   1400344df:	add    dh,bh
   1400344e1:	(bad)
   1400344e5:	add    BYTE PTR [rax],al
   1400344e7:	add    al,bh
   1400344e9:	(bad)
   1400344ed:	add    BYTE PTR [rax],al
   1400344ef:	add    dl,dh
   1400344f1:	(bad)
   1400344f5:	add    BYTE PTR [rax],al
   1400344f7:	add    ah,ch
   1400344f9:	(bad)
   1400344fd:	add    BYTE PTR [rax],al
   1400344ff:	add    dh,ah
   140034501:	(bad)
   140034505:	add    BYTE PTR [rax],al
   140034507:	add    al,ah
   140034509:	(bad)
   14003450d:	add    BYTE PTR [rax],al
   14003450f:	add    dl,bl
   140034511:	(bad)
   140034515:	add    BYTE PTR [rax],al
   140034517:	add    ah,dl
   140034519:	(bad)
   14003451d:	add    BYTE PTR [rax],al
   14003451f:	add    dh,cl
   140034521:	(bad)
   140034525:	add    BYTE PTR [rax],al
   140034527:	add    al,cl
   140034529:	(bad)
   14003452d:	add    BYTE PTR [rax],al
   14003452f:	add    dl,al
   140034531:	(bad)
   140034535:	add    BYTE PTR [rax],al
   140034537:	add    BYTE PTR [rsp+rax*8+0x14002],bh
   14003453e:	add    BYTE PTR [rax],al
   140034540:	mov    dh,0xc4
   140034542:	add    al,BYTE PTR [rax+0x1]
   140034545:	add    BYTE PTR [rax],al
   140034547:	add    BYTE PTR [rax+0x14002c4],dh
   14003454d:	add    BYTE PTR [rax],al
   14003454f:	add    BYTE PTR [rdx+0x14002c4],ch
   140034555:	add    BYTE PTR [rax],al
   140034557:	add    BYTE PTR [rsp+rax*8+0x14002],ah
   14003455e:	add    BYTE PTR [rax],al
   140034560:	rol    bl,cl
   140034562:	add    al,BYTE PTR [rax+0x1]
   140034565:	add    BYTE PTR [rax],al
   140034567:	add    BYTE PTR [rax+0x14002c4],bl
   14003456d:	add    BYTE PTR [rax],al
   14003456f:	add    BYTE PTR [rax+0x62],ah
   140034572:	add    al,BYTE PTR [rax+0x1]
   140034575:	add    BYTE PTR [rax],al
   140034577:	add    al,ah
   140034579:	rol    BYTE PTR [rcx],0x40
   14003457c:	add    DWORD PTR [rax],eax
   14003457e:	add    BYTE PTR [rax],al
   140034580:	lock rol BYTE PTR [rcx],0x40
   140034584:	add    DWORD PTR [rax],eax
   140034586:	add    BYTE PTR [rax],al
   140034588:	int3   
   140034589:	ret    
   14003458a:	add    al,BYTE PTR [rax+0x1]
   14003458d:	add    BYTE PTR [rax],al
   14003458f:	add    BYTE PTR [rsp+rax*8+0x14002],cl
   140034596:	add    BYTE PTR [rax],al
   140034598:	sub    al,0xc1
   14003459a:	add    al,BYTE PTR [rax+0x1]
   14003459d:	add    BYTE PTR [rax],al
   14003459f:	add    BYTE PTR [rax+0x14002c4],al
   1400345a5:	add    BYTE PTR [rax],al
   1400345a7:	add    BYTE PTR [rdx-0x3c],bh
   1400345aa:	add    al,BYTE PTR [rax+0x1]
   1400345ad:	add    BYTE PTR [rax],al
   1400345af:	add    BYTE PTR [rsp+rax*8+0x2],dh
   1400345b3:	rex add DWORD PTR [rax],eax
   1400345b6:	add    BYTE PTR [rax],al
   1400345b8:	outs   dx,BYTE PTR ds:[rsi]
   1400345b9:	(bad)
   1400345bd:	add    BYTE PTR [rax],al
   1400345bf:	add    BYTE PTR [rax-0x3c],ch
   1400345c2:	add    al,BYTE PTR [rax+0x1]
   1400345c5:	add    BYTE PTR [rax],al
   1400345c7:	add    BYTE PTR [rdx-0x3c],ah
   1400345ca:	add    al,BYTE PTR [rax+0x1]
   1400345cd:	add    BYTE PTR [rax],al
   1400345cf:	add    BYTE PTR [rsp+rax*8+0x2],bl
   1400345d3:	rex add DWORD PTR [rax],eax
   1400345d6:	add    BYTE PTR [rax],al
   1400345d8:	push   rsi
   1400345d9:	(bad)
   1400345dd:	add    BYTE PTR [rax],al
   1400345df:	add    BYTE PTR [rax-0x3c],dl
   1400345e2:	add    al,BYTE PTR [rax+0x1]
   1400345e5:	add    BYTE PTR [rax],al
   1400345e7:	add    BYTE PTR [rdx-0x3c],cl
   1400345ea:	add    al,BYTE PTR [rax+0x1]
   1400345ed:	add    BYTE PTR [rax],al
   1400345ef:	add    BYTE PTR [rsp+rax*8+0x2],al
   1400345f3:	rex add DWORD PTR [rax],eax
   1400345f6:	add    BYTE PTR [rax],al
   1400345f8:	(bad)
   1400345fd:	add    BYTE PTR [rax],al
   1400345ff:	add    BYTE PTR [rbx+rax*8],bh
   140034602:	add    al,BYTE PTR [rax+0x1]
   140034605:	add    BYTE PTR [rax],al
   140034607:	add    BYTE PTR [rdx],dh
   140034609:	(bad)
   14003460d:	add    BYTE PTR [rax],al
   14003460f:	add    BYTE PTR [rsi],ah
   140034611:	(bad)
   140034615:	add    BYTE PTR [rax],al
   140034617:	add    BYTE PTR [rax],ah
   140034619:	(bad)
   14003461d:	add    BYTE PTR [rax],al
   14003461f:	add    BYTE PTR [rsi],dh
   140034621:	ret    
   140034622:	add    al,BYTE PTR [rax+0x1]
   140034625:	add    BYTE PTR [rax],al
   140034627:	add    BYTE PTR [rax],dh
   140034629:	ret    
   14003462a:	add    al,BYTE PTR [rax+0x1]
   14003462d:	add    BYTE PTR [rax],al
   14003462f:	add    BYTE PTR [rax],al
   140034631:	rol    DWORD PTR [rcx],0x40
   140034634:	add    DWORD PTR [rax],eax
   140034636:	add    BYTE PTR [rax],al
   140034638:	(bad)  
   140034639:	ret    
   14003463a:	add    al,BYTE PTR [rax+0x1]
   14003463d:	add    BYTE PTR [rax],al
   14003463f:	add    BYTE PTR [rdx-0x3d],bl
   140034642:	add    al,BYTE PTR [rax+0x1]
   140034645:	add    BYTE PTR [rax],al
   140034647:	add    BYTE PTR [rbx+rax*8+0x2],dl
   14003464b:	rex add DWORD PTR [rax],eax
   14003464e:	add    BYTE PTR [rax],al
   140034650:	rex.WRX ret 
   140034652:	add    al,BYTE PTR [rax+0x1]
   140034655:	add    BYTE PTR [rax],al
   140034657:	add    BYTE PTR [rax+0x1400263],al
   14003465d:	add    BYTE PTR [rax],al
   14003465f:	add    BYTE PTR [rax-0x3d],cl
   140034662:	add    al,BYTE PTR [rax+0x1]
   140034665:	add    BYTE PTR [rax],al
   140034667:	add    al,ah
   140034669:	jo     0x14003466d
   14003466b:	rex add DWORD PTR [rax],eax
   14003466e:	add    BYTE PTR [rax],al
   140034670:	add    BYTE PTR [rdi+0x2],ch
   140034673:	rex add DWORD PTR [rax],eax
   140034676:	add    BYTE PTR [rax],al
   140034678:	sub    al,bl
   14003467a:	add    al,BYTE PTR [rax+0x1]
   14003467d:	add    BYTE PTR [rax],al
   14003467f:	add    BYTE PTR [rax],cl
   140034681:	(bad)
   140034685:	add    BYTE PTR [rax],al
   140034687:	add    BYTE PTR [rdx],al
   140034689:	(bad)
   14003468d:	add    BYTE PTR [rax],al
   14003468f:	add    BYTE PTR [rdx],dh
   140034691:	rol    DWORD PTR [rdx],0x40
   140034694:	add    DWORD PTR [rax],eax
   140034696:	add    BYTE PTR [rax],al
   140034698:	cld    
   140034699:	ret    
   14003469a:	add    al,BYTE PTR [rax+0x1]
   14003469d:	add    BYTE PTR [rax],al
   14003469f:	add    dh,dh
   1400346a1:	ret    
   1400346a2:	add    al,BYTE PTR [rax+0x1]
   1400346a5:	add    BYTE PTR [rax],al
   1400346a7:	add    al,dh
   1400346a9:	ret    
   1400346aa:	add    al,BYTE PTR [rax+0x1]
   1400346ad:	add    BYTE PTR [rax],al
   1400346af:	add    dl,ch
   1400346b1:	ret    
   1400346b2:	add    al,BYTE PTR [rax+0x1]
   1400346b5:	add    BYTE PTR [rax],al
   1400346b7:	add    ah,ah
   1400346b9:	ret    
   1400346ba:	add    al,BYTE PTR [rax+0x1]
   1400346bd:	add    BYTE PTR [rax],al
   1400346bf:	add    dh,bl
   1400346c1:	ret    
   1400346c2:	add    al,BYTE PTR [rax+0x1]
   1400346c5:	add    BYTE PTR [rax],al
   1400346c7:	add    al,bl
   1400346c9:	ret    
   1400346ca:	add    al,BYTE PTR [rax+0x1]
   1400346cd:	add    BYTE PTR [rax],al
   1400346cf:	add    al,bl
   1400346d1:	rex.X add eax,DWORD PTR [rax+0x1]
   1400346d5:	add    BYTE PTR [rax],al
   1400346d7:	add    BYTE PTR [rax],bl
   1400346d9:	(bad)  
   1400346da:	add    BYTE PTR [rax],al
   1400346dc:	(bad)  
   1400346dd:	inc    DWORD PTR [rax]
   1400346df:	add    BYTE PTR [rax+0x140025f],ah
   1400346e5:	add    BYTE PTR [rax],al
   1400346e7:	add    BYTE PTR [rax+0x14001c2],dl
	...
   1400346fd:	add    BYTE PTR [rax],al
   1400346ff:	add    BYTE PTR [rcx],dl
   140034701:	add    DWORD PTR [rax],eax
   140034703:	add    BYTE PTR [rax],al
   140034705:	add    eax,DWORD PTR [rax]
   140034707:	add    ch,ch
   140034709:	add    eax,DWORD PTR [rax]
   14003470b:	add    ch,ch
   14003470d:	add    eax,DWORD PTR [rax]
   14003470f:	add    BYTE PTR [rdx],bh
   140034711:	add    BYTE PTR [rax],al
   140034713:	add    BYTE PTR [rax],al
   140034715:	add    BYTE PTR [rax],al
   140034717:	add    BYTE PTR [rax+0x1400264],al
   14003471d:	add    BYTE PTR [rax],al
   14003471f:	add    BYTE PTR [rcx],dl
   140034721:	add    DWORD PTR [rax],eax
   140034723:	add    BYTE PTR [rax],al
   140034725:	add    BYTE PTR [rax],al
   140034727:	add    dh,ch
   140034729:	add    eax,DWORD PTR [rax]
   14003472b:	add    dh,ch
   14003472d:	add    eax,DWORD PTR [rax]
   14003472f:	add    BYTE PTR [rdx],bh
   140034731:	add    BYTE PTR [rax],al
   140034733:	add    BYTE PTR [rax],al
   140034735:	add    BYTE PTR [rax],al
   140034737:	add    BYTE PTR [rax+0x1400268],al
   14003473d:	add    BYTE PTR [rax],al
   14003473f:	add    BYTE PTR [rcx],dl
   140034741:	add    DWORD PTR [rax],eax
   140034743:	add    BYTE PTR [rax],al
   140034745:	add    BYTE PTR [rax],al
   140034747:	add    dh,bh
   140034749:	add    eax,DWORD PTR [rax]
   14003474b:	add    dh,bh
   14003474d:	add    eax,DWORD PTR [rax]
   14003474f:	add    BYTE PTR [rdx],bh
   140034751:	add    BYTE PTR [rax],al
   140034753:	add    BYTE PTR [rax],al
   140034755:	add    BYTE PTR [rax],al
   140034757:	add    BYTE PTR [rax+0x140026d],ah
   14003475d:	add    BYTE PTR [rax],al
   14003475f:	add    BYTE PTR [rcx],dl
   140034761:	add    DWORD PTR [rax],eax
   140034763:	add    BYTE PTR [rax],al
   140034765:	add    BYTE PTR [rax],al
   140034767:	add    bh,ch
   140034769:	add    eax,DWORD PTR [rax]
   14003476b:	add    bh,ch
   14003476d:	add    eax,DWORD PTR [rax]
   14003476f:	add    BYTE PTR [rdx],bh
   140034771:	add    BYTE PTR [rax],al
   140034773:	add    BYTE PTR [rax],al
   140034775:	add    BYTE PTR [rax],al
   140034777:	add    al,dh
   140034779:	jo     0x14003477d
   14003477b:	rex add DWORD PTR [rax],eax
   14003477e:	add    BYTE PTR [rax],al
   140034780:	adc    DWORD PTR [rcx],eax
   140034782:	add    BYTE PTR [rax],al
   140034784:	add    BYTE PTR [rbx],al
   140034786:	add    BYTE PTR [rax],al
   140034788:	std    
   140034789:	add    eax,DWORD PTR [rax]
   14003478b:	add    ch,bh
   14003478d:	add    eax,DWORD PTR [rax]
   14003478f:	add    BYTE PTR [rdx],bh
   140034791:	add    BYTE PTR [rax],al
   140034793:	add    BYTE PTR [rax],al
   140034795:	add    BYTE PTR [rax],al
   140034797:	add    BYTE PTR [rax],dl
   140034799:	jbe    0x14003479d
   14003479b:	rex add DWORD PTR [rax],eax
	...
   1400347be:	add    BYTE PTR [rax],al
   1400347c0:	jle    0x140034835
   1400347c2:	jb     0x1400347c4
   1400347c4:	and    eax,0x5c000075
   1400347c9:	add    BYTE PTR [rax],al
   1400347cb:	add    BYTE PTR [rax],al
   1400347cd:	add    BYTE PTR [rax],al
   1400347cf:	add    BYTE PTR [rdi+0x65],al
   1400347d2:	je     0x140034820
   1400347d4:	imul   ecx,DWORD PTR [rcx+0x6e],0x66726574
   1400347db:	(bad)  
   1400347dc:	movsxd esp,DWORD PTR [rbp+0x0]
   1400347df:	add    BYTE PTR [rdi+0x0],dh
   1400347e2:	je     0x1400347e4
   1400347e4:	ins    BYTE PTR es:[rdi],dx
   1400347e5:	add    BYTE PTR [rcx+0x0],ch
   1400347e8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400347ed:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400347f1:	add    BYTE PTR [rax],al
   1400347f3:	add    BYTE PTR [rax],al
   1400347f5:	add    BYTE PTR [rax],al
   1400347f7:	add    BYTE PTR [rdi+0x65],al
   1400347fa:	je     0x14003483f
   1400347fc:	(bad)  
   1400347fd:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140034800:	je     0x140034867
   140034802:	jb     0x14003486a
   140034804:	(bad)  
   140034805:	movsxd esp,DWORD PTR [rbp+0x0]
   140034808:	ja     0x14003480a
   14003480a:	je     0x14003480c
   14003480c:	movsxd eax,DWORD PTR [rax]
   14003480e:	(bad)  
   14003480f:	add    BYTE PTR [rbp+0x0],ah
   140034812:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140034817:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003481b:	add    BYTE PTR [rax],al
   14003481d:	add    BYTE PTR [rax],al
   14003481f:	add    BYTE PTR [rdi+0x0],dl
   140034822:	jb     0x140034824
   140034824:	imul   eax,DWORD PTR [rax],0x690074
   14003482a:	outs   dx,BYTE PTR ds:[rsi]
   14003482b:	add    BYTE PTR [rdi+0x0],ah
   14003482e:	push   rsp
   14003482f:	add    BYTE PTR [rdi+0x0],ch
   140034832:	outs   dx,DWORD PTR ds:[rsi]
   140034833:	add    BYTE PTR [rax+rax*1+0x73],ch
   140034837:	add    BYTE PTR [rax+rax*1+0x0],bl
   14003483b:	add    BYTE PTR [rax],al
   14003483d:	add    BYTE PTR [rax],al
   14003483f:	add    BYTE PTR [rax+rax*1+0x57],bl
   140034843:	add    BYTE PTR [rdx+0x0],dh
   140034846:	imul   eax,DWORD PTR [rax],0x690074
   14003484c:	outs   dx,BYTE PTR ds:[rsi]
   14003484d:	add    BYTE PTR [rdi+0x0],ah
   140034850:	push   rsp
   140034851:	add    BYTE PTR [rdi+0x0],ch
   140034854:	outs   dx,DWORD PTR ds:[rsi]
   140034855:	add    BYTE PTR [rax+rax*1+0x73],ch
   140034859:	add    BYTE PTR [rax],al
   14003485b:	add    BYTE PTR [rax],al
   14003485d:	add    BYTE PTR [rax],al
   14003485f:	add    BYTE PTR [rax+0x1400369],bl
   140034865:	add    BYTE PTR [rax],al
   140034867:	add    BYTE PTR [rax+0x14002b6],dl
   14003486d:	add    BYTE PTR [rax],al
   14003486f:	add    BYTE PTR [rax-0x4a],dh
   140034872:	add    al,BYTE PTR [rax+0x1]
   140034875:	add    BYTE PTR [rax],al
   140034877:	add    BYTE PTR [rax-0x4a],dl
   14003487a:	add    al,BYTE PTR [rax+0x1]
   14003487d:	add    BYTE PTR [rax],al
   14003487f:	add    BYTE PTR [rax+0x14002b7],ah
   140034885:	add    BYTE PTR [rax],al
   140034887:	add    BYTE PTR [rax-0x48],dl
   14003488a:	add    al,BYTE PTR [rax+0x1]
   14003488d:	add    BYTE PTR [rax],al
   14003488f:	add    al,al
   140034891:	mov    eax,0x14002
   140034896:	add    BYTE PTR [rax],al
   140034898:	xor    BYTE PTR [rcx+0x14002],bh
   14003489e:	add    BYTE PTR [rax],al
   1400348a0:	lock mov ch,0x2
   1400348a3:	rex add DWORD PTR [rax],eax
   1400348a6:	add    BYTE PTR [rax],al
   1400348a8:	and    eax,0x73
   1400348ad:	add    BYTE PTR [rax],al
   1400348af:	add    BYTE PTR [rdx],ah
   1400348b1:	add    eax,0x41993
   1400348b6:	add    BYTE PTR [rax],al
   1400348b8:	pop    rsp
   1400348b9:	imul   eax,DWORD PTR [rbx],0x0
   1400348bc:	add    al,BYTE PTR [rax]
   1400348be:	add    BYTE PTR [rax],al
   1400348c0:	jl     0x14003492d
   1400348c2:	add    eax,DWORD PTR [rax]
   1400348c4:	or     BYTE PTR [rax],al
   1400348c6:	add    BYTE PTR [rax],al
   1400348c8:	int3   
   1400348c9:	imul   eax,DWORD PTR [rbx],0x0
   1400348cc:	and    BYTE PTR [rax],al
   1400348ce:	add    BYTE PTR [rax],al
   1400348d0:	add    BYTE PTR [rax],al
   1400348d2:	add    BYTE PTR [rax],al
   1400348d4:	add    DWORD PTR [rax],eax
	...
   1400348de:	add    BYTE PTR [rax],al
   1400348e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046279
   1400348e6:	add    BYTE PTR [rax],al
   1400348e8:	shr    BYTE PTR [rdx+0x3],0x0
	...
   1400348f4:	add    eax,DWORD PTR [rax]
   1400348f6:	add    BYTE PTR [rax],al
   1400348f8:	enter  0x36a,0x0
   1400348fc:	and    BYTE PTR [rax],al
   1400348fe:	add    BYTE PTR [rax],al
   140034900:	add    BYTE PTR [rax],al
   140034902:	add    BYTE PTR [rax],al
   140034904:	add    DWORD PTR [rax],eax
	...
   14003490e:	add    BYTE PTR [rax],al
   140034910:	and    al,BYTE PTR [rip+0x21993]        # 0x1400562a9
   140034916:	add    BYTE PTR [rax],al
   140034918:	jo     0x140034984
   14003491a:	add    eax,DWORD PTR [rax]
	...
   140034924:	add    eax,0x80000000
   140034929:	push   0x3
   14003492b:	add    BYTE PTR [rax],dh
   14003492d:	add    BYTE PTR [rax],al
   14003492f:	add    BYTE PTR [rax],al
   140034931:	add    BYTE PTR [rax],al
   140034933:	add    BYTE PTR [rcx],al
	...
   14003493d:	add    BYTE PTR [rax],al
   14003493f:	add    BYTE PTR [rdx],ah
   140034941:	add    eax,0x11993
   140034946:	add    BYTE PTR [rax],al
   140034948:	add    BYTE PTR [rbp+0x3],ch
	...
   140034953:	add    BYTE PTR [rbx],al
   140034955:	add    BYTE PTR [rax],al
   140034957:	add    BYTE PTR [rax],cl
   140034959:	ins    DWORD PTR es:[rdi],dx
   14003495a:	add    eax,DWORD PTR [rax]
   14003495c:	jo     0x14003495e
   14003495e:	add    BYTE PTR [rax],al
   140034960:	add    BYTE PTR [rax],al
   140034962:	add    BYTE PTR [rax],al
   140034964:	add    DWORD PTR [rax],eax
	...
   14003496e:	add    BYTE PTR [rax],al
   140034970:	and    al,BYTE PTR [rip+0x31993]        # 0x140066309
   140034976:	add    BYTE PTR [rax],al
   140034978:	mov    eax,0x36e
   14003497d:	add    BYTE PTR [rax],al
   14003497f:	add    BYTE PTR [rax],al
   140034981:	add    BYTE PTR [rax],al
   140034983:	add    BYTE PTR [rdi],al
   140034985:	add    BYTE PTR [rax],al
   140034987:	add    al,dl
   140034989:	outs   dx,BYTE PTR ds:[rsi]
   14003498a:	add    eax,DWORD PTR [rax]
   14003498c:	push   0x0
   140034991:	add    BYTE PTR [rax],al
   140034993:	add    BYTE PTR [rcx],al
	...
   14003499d:	add    BYTE PTR [rax],al
   14003499f:	add    BYTE PTR [rdx],ah
   1400349a1:	add    eax,0x11993
   1400349a6:	add    BYTE PTR [rax],al
   1400349a8:	sub    al,0x72
   1400349aa:	add    eax,DWORD PTR [rax]
	...
   1400349b4:	add    eax,DWORD PTR [rax]
   1400349b6:	add    BYTE PTR [rax],al
   1400349b8:	xor    al,0x72
   1400349ba:	add    eax,DWORD PTR [rax]
   1400349bc:	(bad)  
   1400349bd:	add    BYTE PTR [rax],al
   1400349bf:	add    BYTE PTR [rax],al
   1400349c1:	add    BYTE PTR [rax],al
   1400349c3:	add    BYTE PTR [rcx],al
	...
   1400349cd:	add    BYTE PTR [rax],al
   1400349cf:	add    BYTE PTR [rdx],ah
   1400349d1:	add    eax,0x11993
   1400349d6:	add    BYTE PTR [rax],al
   1400349d8:	in     al,0x71
   1400349da:	add    eax,DWORD PTR [rax]
	...
   1400349e4:	add    eax,DWORD PTR [rax]
   1400349e6:	add    BYTE PTR [rax],al
   1400349e8:	in     al,dx
   1400349e9:	jno    0x1400349ee
   1400349eb:	add    BYTE PTR [rax+0x0],ah
   1400349ee:	add    BYTE PTR [rax],al
   1400349f0:	add    BYTE PTR [rax],al
   1400349f2:	add    BYTE PTR [rax],al
   1400349f4:	add    DWORD PTR [rax],eax
	...
   1400349fe:	add    BYTE PTR [rax],al
   140034a00:	and    al,BYTE PTR [rip+0x21993]        # 0x140056399
   140034a06:	add    BYTE PTR [rax],al
   140034a08:	sub    BYTE PTR [rcx+0x3],dh
	...
   140034a13:	add    BYTE PTR [rip+0x38000000],al        # 0x178034a19
   140034a19:	jno    0x140034a1e
   140034a1b:	add    BYTE PTR [rax+0x0],dl
   140034a1e:	add    BYTE PTR [rax],al
   140034a20:	add    BYTE PTR [rax],al
   140034a22:	add    BYTE PTR [rax],al
   140034a24:	add    DWORD PTR [rax],eax
	...
   140034a2e:	add    BYTE PTR [rax],al
   140034a30:	and    al,BYTE PTR [rip+0x11993]        # 0x1400463c9
   140034a36:	add    BYTE PTR [rax],al
   140034a38:	adc    al,0x73
   140034a3a:	add    eax,DWORD PTR [rax]
	...
   140034a44:	add    eax,DWORD PTR [rax]
   140034a46:	add    BYTE PTR [rax],al
   140034a48:	sbb    al,0x73
   140034a4a:	add    eax,DWORD PTR [rax]
   140034a4c:	jo     0x140034a4e
   140034a4e:	add    BYTE PTR [rax],al
   140034a50:	add    BYTE PTR [rax],al
   140034a52:	add    BYTE PTR [rax],al
   140034a54:	add    DWORD PTR [rax],eax
	...
   140034a5e:	add    BYTE PTR [rax],al
   140034a60:	and    al,BYTE PTR [rip+0x21993]        # 0x1400563f9
   140034a66:	add    BYTE PTR [rax],al
   140034a68:	(bad)  
   140034a69:	jae    0x140034a6e
	...
   140034a73:	add    BYTE PTR [rip+0x70000000],al        # 0x1b0034a79
   140034a79:	jae    0x140034a7e
   140034a7b:	add    BYTE PTR [rax+0x0],bh
   140034a7e:	add    BYTE PTR [rax],al
   140034a80:	add    BYTE PTR [rax],al
   140034a82:	add    BYTE PTR [rax],al
   140034a84:	add    DWORD PTR [rax],eax
	...
   140034a8e:	add    BYTE PTR [rax],al
   140034a90:	and    al,BYTE PTR [rip+0x21993]        # 0x140056429
   140034a96:	add    BYTE PTR [rax],al
   140034a98:	fdiv   DWORD PTR [rbx+0x3]
	...
   140034aa3:	add    BYTE PTR [rip+0xffffffffe8000000],al        # 0x128034aa9
   140034aa9:	jae    0x140034aae
   140034aab:	add    BYTE PTR [rax+0x0],dl
   140034ab1:	add    BYTE PTR [rax],al
   140034ab3:	add    BYTE PTR [rcx],al
	...
   140034abd:	add    BYTE PTR [rax],al
   140034abf:	add    BYTE PTR [rdx],ah
   140034ac1:	add    eax,0x21993
   140034ac6:	add    BYTE PTR [rax],al
   140034ac8:	pushf  
   140034ac9:	je     0x140034ace
	...
   140034ad3:	add    BYTE PTR [rip+0xffffffffac000000],al        # 0xec034ad9
   140034ad9:	je     0x140034ade
   140034adb:	add    BYTE PTR [rax+0x0],ch
   140034ae1:	add    BYTE PTR [rax],al
   140034ae3:	add    BYTE PTR [rcx],al
	...
   140034aed:	add    BYTE PTR [rax],al
   140034aef:	add    BYTE PTR [rdx],ah
   140034af1:	add    eax,0x11993
   140034af6:	add    BYTE PTR [rax],al
   140034af8:	push   rsp
   140034af9:	je     0x140034afe
	...
   140034b03:	add    BYTE PTR [rbx],al
   140034b05:	add    BYTE PTR [rax],al
   140034b07:	add    BYTE PTR [rsp+rsi*2+0x3],bl
   140034b0b:	add    BYTE PTR [rax+0x0],bl
   140034b0e:	add    BYTE PTR [rax],al
   140034b10:	add    BYTE PTR [rax],al
   140034b12:	add    BYTE PTR [rax],al
   140034b14:	add    DWORD PTR [rax],eax
	...
   140034b1e:	add    BYTE PTR [rax],al
   140034b20:	and    al,BYTE PTR [rip+0x11993]        # 0x1400464b9
   140034b26:	add    BYTE PTR [rax],al
   140034b28:	push   rsp
   140034b29:	je     0x140034b2e
	...
   140034b33:	add    BYTE PTR [rbx],al
   140034b35:	add    BYTE PTR [rax],al
   140034b37:	add    BYTE PTR [rax+0x75],cl
   140034b3a:	add    eax,DWORD PTR [rax]
   140034b3c:	cmp    BYTE PTR [rax],al
   140034b3e:	add    BYTE PTR [rax],al
   140034b40:	add    BYTE PTR [rax],al
   140034b42:	add    BYTE PTR [rax],al
   140034b44:	add    DWORD PTR [rax],eax
	...
   140034b4e:	add    BYTE PTR [rax],al
   140034b50:	and    al,BYTE PTR [rip+0x31993]        # 0x1400664e9
   140034b56:	add    BYTE PTR [rax],al
   140034b58:	cwde   
   140034b59:	jne    0x140034b5e
	...
   140034b63:	add    BYTE PTR [rdi],al
   140034b65:	add    BYTE PTR [rax],al
   140034b67:	add    BYTE PTR [rax+0x20000375],dh
   140034b6d:	add    BYTE PTR [rax],al
   140034b6f:	add    BYTE PTR [rax],al
   140034b71:	add    BYTE PTR [rax],al
   140034b73:	add    BYTE PTR [rcx],al
	...
   140034b7d:	add    BYTE PTR [rax],al
   140034b7f:	add    BYTE PTR [rdx],ah
   140034b81:	add    eax,0x21993
   140034b86:	add    BYTE PTR [rax],al
   140034b88:	(bad)  
   140034b89:	jbe    0x140034b8e
	...
   140034b93:	add    BYTE PTR [rip+0xffffffffe4000000],al        # 0x124034b99
   140034b99:	jbe    0x140034b9e
   140034b9b:	add    BYTE PTR [rax+0x0],dh
   140034ba1:	add    BYTE PTR [rax],al
   140034ba3:	add    BYTE PTR [rcx],al
	...
   140034bad:	add    BYTE PTR [rax],al
   140034baf:	add    BYTE PTR [rdx],ah
   140034bb1:	add    eax,0x11993
   140034bb6:	add    BYTE PTR [rax],al
   140034bb8:	in     al,0x71
   140034bba:	add    eax,DWORD PTR [rax]
	...
   140034bc4:	add    eax,DWORD PTR [rax]
   140034bc6:	add    BYTE PTR [rax],al
   140034bc8:	adc    BYTE PTR [rsi+0x3],dh
   140034bcb:	add    BYTE PTR [rax+0x0],dh
   140034bce:	add    BYTE PTR [rax],al
   140034bd0:	add    BYTE PTR [rax],al
   140034bd2:	add    BYTE PTR [rax],al
   140034bd4:	add    DWORD PTR [rax],eax
	...
   140034bde:	add    BYTE PTR [rax],al
   140034be0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046579
   140034be6:	add    BYTE PTR [rax],al
   140034be8:	sub    BYTE PTR [rdi+0x3],dh
	...
   140034bf3:	add    BYTE PTR [rbx],al
   140034bf5:	add    BYTE PTR [rax],al
   140034bf7:	add    BYTE PTR [rax],dh
   140034bf9:	ja     0x140034bfe
   140034bfb:	add    BYTE PTR [rax],ch
   140034bfd:	add    BYTE PTR [rax],al
   140034bff:	add    BYTE PTR [rax],al
   140034c01:	add    BYTE PTR [rax],al
   140034c03:	add    BYTE PTR [rcx],al
	...
   140034c0d:	add    BYTE PTR [rax],al
   140034c0f:	add    BYTE PTR [rdx],ah
   140034c11:	add    eax,0x11993
   140034c16:	add    BYTE PTR [rax],al
   140034c18:	sub    al,0x72
   140034c1a:	add    eax,DWORD PTR [rax]
	...
   140034c24:	add    eax,DWORD PTR [rax]
   140034c26:	add    BYTE PTR [rax],al
   140034c28:	pushf  
   140034c29:	ja     0x140034c2e
   140034c2b:	add    BYTE PTR [rax+0x0],cl
   140034c2e:	add    BYTE PTR [rax],al
   140034c30:	add    BYTE PTR [rax],al
   140034c32:	add    BYTE PTR [rax],al
   140034c34:	add    DWORD PTR [rax],eax
	...
   140034c3e:	add    BYTE PTR [rax],al
   140034c40:	and    al,BYTE PTR [rip+0x11993]        # 0x1400465d9
   140034c46:	add    BYTE PTR [rax],al
   140034c48:	pop    rsp
   140034c49:	ja     0x140034c4e
	...
   140034c53:	add    BYTE PTR [rbx],al
   140034c55:	add    BYTE PTR [rax],al
   140034c57:	add    BYTE PTR [rdi+rsi*2+0x3],ah
   140034c5b:	add    BYTE PTR [rax],ah
   140034c5d:	add    BYTE PTR [rax],al
   140034c5f:	add    BYTE PTR [rax],al
   140034c61:	add    BYTE PTR [rax],al
   140034c63:	add    BYTE PTR [rcx],al
	...
   140034c6d:	add    BYTE PTR [rax],al
   140034c6f:	add    BYTE PTR [rdx],ah
   140034c71:	add    eax,0x11993
   140034c76:	add    BYTE PTR [rax],al
   140034c78:	jo     0x140034cf7
   140034c7a:	add    eax,DWORD PTR [rax]
	...
   140034c84:	add    eax,DWORD PTR [rax]
   140034c86:	add    BYTE PTR [rax],al
   140034c88:	js     0x140034d07
   140034c8a:	add    eax,DWORD PTR [rax]
   140034c8c:	cmp    BYTE PTR [rax],al
   140034c8e:	add    BYTE PTR [rax],al
   140034c90:	add    BYTE PTR [rax],al
   140034c92:	add    BYTE PTR [rax],al
   140034c94:	add    DWORD PTR [rax],eax
	...
   140034c9e:	add    BYTE PTR [rax],al
   140034ca0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046639
   140034ca6:	add    BYTE PTR [rax],al
   140034ca8:	xor    BYTE PTR [rbp+0x3],bh
	...
   140034cb3:	add    BYTE PTR [rbx],al
   140034cb5:	add    BYTE PTR [rax],al
   140034cb7:	add    BYTE PTR [rax],bh
   140034cb9:	jge    0x140034cbe
   140034cbb:	add    BYTE PTR [rax],ch
   140034cbd:	add    BYTE PTR [rax],al
   140034cbf:	add    BYTE PTR [rax],al
   140034cc1:	add    BYTE PTR [rax],al
   140034cc3:	add    BYTE PTR [rcx],al
	...
   140034ccd:	add    BYTE PTR [rax],al
   140034ccf:	add    BYTE PTR [rdx],ah
   140034cd1:	add    eax,0x11993
   140034cd6:	add    BYTE PTR [rax],al
   140034cd8:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   140034ce4:	add    eax,DWORD PTR [rax]
   140034ce6:	add    BYTE PTR [rax],al
   140034ce8:	cld    
   140034ce9:	jl     0x140034cee
   140034ceb:	add    BYTE PTR [rax],ah
   140034ced:	add    BYTE PTR [rax],al
   140034cef:	add    BYTE PTR [rax],al
   140034cf1:	add    BYTE PTR [rax],al
   140034cf3:	add    BYTE PTR [rcx],al
	...
   140034cfd:	add    BYTE PTR [rax],al
   140034cff:	add    BYTE PTR [rdx],ah
   140034d01:	add    eax,0x11993
   140034d06:	add    BYTE PTR [rax],al
   140034d08:	int3   
   140034d09:	jl     0x140034d0e
	...
   140034d13:	add    BYTE PTR [rbx],al
   140034d15:	add    BYTE PTR [rax],al
   140034d17:	add    ah,dl
   140034d19:	jl     0x140034d1e
   140034d1b:	add    BYTE PTR [rax],bh
   140034d1d:	add    BYTE PTR [rax],al
   140034d1f:	add    BYTE PTR [rax],al
   140034d21:	add    BYTE PTR [rax],al
   140034d23:	add    BYTE PTR [rcx],al
	...
   140034d2d:	add    BYTE PTR [rax],al
   140034d2f:	add    BYTE PTR [rdx],ah
   140034d31:	add    eax,0x11993
   140034d36:	add    BYTE PTR [rax],al
   140034d38:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   140034d44:	add    eax,DWORD PTR [rax]
   140034d46:	add    BYTE PTR [rax],al
   140034d48:	je     0x140034dc6
   140034d4a:	add    eax,DWORD PTR [rax]
   140034d4c:	and    BYTE PTR [rax],al
   140034d4e:	add    BYTE PTR [rax],al
   140034d50:	add    BYTE PTR [rax],al
   140034d52:	add    BYTE PTR [rax],al
   140034d54:	add    DWORD PTR [rax],eax
	...
   140034d5e:	add    BYTE PTR [rax],al
   140034d60:	and    al,BYTE PTR [rip+0x11993]        # 0x1400466f9
   140034d66:	add    BYTE PTR [rax],al
   140034d68:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   140034d74:	add    eax,DWORD PTR [rax]
   140034d76:	add    BYTE PTR [rax],al
   140034d78:	rex jl 0x140034d7e
   140034d7b:	add    BYTE PTR [rax],ah
   140034d7d:	add    BYTE PTR [rax],al
   140034d7f:	add    BYTE PTR [rax],al
   140034d81:	add    BYTE PTR [rax],al
   140034d83:	add    BYTE PTR [rcx],al
	...
   140034d8d:	add    BYTE PTR [rax],al
   140034d8f:	add    BYTE PTR [rdx],ah
   140034d91:	add    eax,0x21993
   140034d96:	add    BYTE PTR [rax],al
   140034d98:	call   0x140035118
   140034d9d:	add    BYTE PTR [rax],al
   140034d9f:	add    BYTE PTR [rax],al
   140034da1:	add    BYTE PTR [rax],al
   140034da3:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x138034da9
   140034da9:	jnp    0x140034dae
   140034dab:	add    BYTE PTR [rax+0x0],cl
   140034dae:	add    BYTE PTR [rax],al
   140034db0:	add    BYTE PTR [rax],al
   140034db2:	add    BYTE PTR [rax],al
   140034db4:	add    DWORD PTR [rax],eax
	...
   140034dbe:	add    BYTE PTR [rax],al
   140034dc0:	and    al,BYTE PTR [rip+0x41993]        # 0x140076759
   140034dc6:	add    BYTE PTR [rax],al
   140034dc8:	rex.R jnp 0x140034dce
	...
   140034dd3:	add    BYTE PTR [rbx],cl
   140034dd5:	add    BYTE PTR [rax],al
   140034dd7:	add    BYTE PTR [rbx+rdi*2+0x3],ah
   140034ddb:	add    BYTE PTR [rax+0x0],bl
   140034dde:	add    BYTE PTR [rax],al
   140034de0:	add    BYTE PTR [rax],al
   140034de2:	add    BYTE PTR [rax],al
   140034de4:	add    DWORD PTR [rax],eax
	...
   140034dee:	add    BYTE PTR [rax],al
   140034df0:	and    al,BYTE PTR [rip+0x31993]        # 0x140066789
   140034df6:	add    BYTE PTR [rax],al
   140034df8:	enter  0x37a,0x0
	...
   140034e04:	(bad)  
   140034e05:	add    BYTE PTR [rax],al
   140034e07:	add    al,ah
   140034e09:	jp     0x140034e0e
   140034e0b:	add    BYTE PTR [rax+0x0],ah
   140034e0e:	add    BYTE PTR [rax],al
   140034e10:	add    BYTE PTR [rax],al
   140034e12:	add    BYTE PTR [rax],al
   140034e14:	add    DWORD PTR [rax],eax
	...
   140034e1e:	add    BYTE PTR [rax],al
   140034e20:	and    al,BYTE PTR [rip+0x11993]        # 0x1400467b9
   140034e26:	add    BYTE PTR [rax],al
   140034e28:	mov    WORD PTR [rdx+0x3],?
	...
   140034e33:	add    BYTE PTR [rbx],al
   140034e35:	add    BYTE PTR [rax],al
   140034e37:	add    BYTE PTR [rdx+rdi*2+0x200003],dl
   140034e3e:	add    BYTE PTR [rax],al
   140034e40:	add    BYTE PTR [rax],al
   140034e42:	add    BYTE PTR [rax],al
   140034e44:	add    DWORD PTR [rax],eax
	...
   140034e4e:	add    BYTE PTR [rax],al
   140034e50:	and    al,BYTE PTR [rip+0x111993]        # 0x1401467e9
   140034e56:	add    BYTE PTR [rax],al
   140034e58:	pop    rax
   140034e59:	jns    0x140034e5e
	...
   140034e63:	add    BYTE PTR [rbx],dl
   140034e65:	add    BYTE PTR [rax],al
   140034e67:	add    al,ah
   140034e69:	jns    0x140034e6e
   140034e6b:	add    BYTE PTR [rax],ah
   140034e6d:	add    BYTE PTR [rax],al
   140034e6f:	add    BYTE PTR [rax],al
   140034e71:	add    BYTE PTR [rax],al
   140034e73:	add    BYTE PTR [rcx],al
	...
   140034e7d:	add    BYTE PTR [rax],al
   140034e7f:	add    BYTE PTR [rdx],ah
   140034e81:	add    eax,0x121993
   140034e86:	add    BYTE PTR [rax],al
   140034e88:	sbb    BYTE PTR [rax+0x3],bh
	...
   140034e93:	add    BYTE PTR [rax+rax*1],dl
   140034e96:	add    BYTE PTR [rax],al
   140034e98:	test   al,0x78
   140034e9a:	add    eax,DWORD PTR [rax]
   140034e9c:	and    BYTE PTR [rax],al
   140034e9e:	add    BYTE PTR [rax],al
   140034ea0:	add    BYTE PTR [rax],al
   140034ea2:	add    BYTE PTR [rax],al
   140034ea4:	add    DWORD PTR [rax],eax
	...
   140034eae:	add    BYTE PTR [rax],al
   140034eb0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046849
   140034eb6:	add    BYTE PTR [rax],al
   140034eb8:	shr    BYTE PTR [rdx+0x3],0x0
	...
   140034ec4:	add    eax,DWORD PTR [rax]
   140034ec6:	add    BYTE PTR [rax],al
   140034ec8:	loopne 0x140034f41
   140034eca:	add    eax,DWORD PTR [rax]
   140034ecc:	and    BYTE PTR [rax],al
   140034ece:	add    BYTE PTR [rax],al
   140034ed0:	add    BYTE PTR [rax],al
   140034ed2:	add    BYTE PTR [rax],al
   140034ed4:	add    DWORD PTR [rax],eax
	...
   140034ede:	add    BYTE PTR [rax],al
   140034ee0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046879
   140034ee6:	add    BYTE PTR [rax],al
   140034ee8:	jo     0x140034f67
   140034eea:	add    eax,DWORD PTR [rax]
	...
   140034ef4:	add    eax,DWORD PTR [rax]
   140034ef6:	add    BYTE PTR [rax],al
   140034ef8:	xchg   esp,eax
   140034ef9:	add    DWORD PTR [rbx],0x3800
   140034eff:	add    BYTE PTR [rax],al
   140034f01:	add    BYTE PTR [rax],al
   140034f03:	add    BYTE PTR [rcx],al
	...
   140034f0d:	add    BYTE PTR [rax],al
   140034f0f:	add    BYTE PTR [rdx],ah
   140034f11:	add    eax,0x31993
   140034f16:	add    BYTE PTR [rax],al
   140034f18:	adc    BYTE PTR [rcx+0x3],al
   140034f1e:	add    BYTE PTR [rax],al
   140034f20:	add    BYTE PTR [rax],al
   140034f22:	add    BYTE PTR [rax],al
   140034f24:	or     BYTE PTR [rax],al
   140034f26:	add    BYTE PTR [rax],al
   140034f28:	sub    BYTE PTR [rcx+0x580003],al
   140034f2e:	add    BYTE PTR [rax],al
   140034f30:	add    BYTE PTR [rax],al
   140034f32:	add    BYTE PTR [rax],al
   140034f34:	add    DWORD PTR [rax],eax
	...
   140034f3e:	add    BYTE PTR [rax],al
   140034f40:	and    al,BYTE PTR [rip+0x31993]        # 0x1400668d9
   140034f46:	add    BYTE PTR [rax],al
   140034f48:	enter  0x37a,0x0
	...
   140034f54:	(bad)  
   140034f55:	add    BYTE PTR [rax],al
   140034f57:	add    BYTE PTR [rax+rax*4+0x600003],ch
   140034f5e:	add    BYTE PTR [rax],al
   140034f60:	add    BYTE PTR [rax],al
   140034f62:	add    BYTE PTR [rax],al
   140034f64:	add    DWORD PTR [rax],eax
	...
   140034f6e:	add    BYTE PTR [rax],al
   140034f70:	and    al,BYTE PTR [rip+0x31993]        # 0x140066909
   140034f76:	add    BYTE PTR [rax],al
   140034f78:	enter  0x37a,0x0
	...
   140034f84:	(bad)  
   140034f85:	add    BYTE PTR [rax],al
   140034f87:	add    BYTE PTR [rax-0x80],bl
   140034f8a:	add    eax,DWORD PTR [rax]
   140034f8c:	(bad)  
   140034f8d:	add    BYTE PTR [rax],al
   140034f8f:	add    BYTE PTR [rax],al
   140034f91:	add    BYTE PTR [rax],al
   140034f93:	add    BYTE PTR [rcx],al
	...
   140034f9d:	add    BYTE PTR [rax],al
   140034f9f:	add    BYTE PTR [rdx],ah
   140034fa1:	add    eax,0x11993
   140034fa6:	add    BYTE PTR [rax],al
   140034fa8:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   140034fb4:	add    eax,DWORD PTR [rax]
   140034fb6:	add    BYTE PTR [rax],al
   140034fb8:	and    al,0x80
   140034fba:	add    eax,DWORD PTR [rax]
   140034fbc:	and    BYTE PTR [rax],al
   140034fbe:	add    BYTE PTR [rax],al
   140034fc0:	add    BYTE PTR [rax],al
   140034fc2:	add    BYTE PTR [rax],al
   140034fc4:	add    DWORD PTR [rax],eax
	...
   140034fce:	add    BYTE PTR [rax],al
   140034fd0:	and    al,BYTE PTR [rip+0x101993]        # 0x140136969
   140034fd6:	add    BYTE PTR [rax],al
   140034fd8:	add    al,0x7f
   140034fda:	add    eax,DWORD PTR [rax]
	...
   140034fe4:	adc    al,BYTE PTR [rax]
   140034fe6:	add    BYTE PTR [rax],al
   140034fe8:	test   BYTE PTR [rdi+0x3],bh
   140034feb:	add    BYTE PTR [rax],ah
   140034fed:	add    BYTE PTR [rax],al
   140034fef:	add    BYTE PTR [rax],al
   140034ff1:	add    BYTE PTR [rax],al
   140034ff3:	add    BYTE PTR [rcx],al
	...
   140034ffd:	add    BYTE PTR [rax],al
   140034fff:	add    BYTE PTR [rdx],ah
   140035001:	add    eax,0x111993
   140035006:	add    BYTE PTR [rax],al
   140035008:	(bad)  
   140035009:	jge    0x14003500e
	...
   140035013:	add    BYTE PTR [rbx],dl
   140035015:	add    BYTE PTR [rax],al
   140035017:	add    BYTE PTR [rsi+rdi*2+0x3],bl
   14003501b:	add    BYTE PTR [rax],ah
   14003501d:	add    BYTE PTR [rax],al
   14003501f:	add    BYTE PTR [rax],al
   140035021:	add    BYTE PTR [rax],al
   140035023:	add    BYTE PTR [rcx],al
	...
   14003502d:	add    BYTE PTR [rax],al
   14003502f:	add    BYTE PTR [rdx],ah
   140035031:	add    eax,0x11993
   140035036:	add    BYTE PTR [rax],al
   140035038:	shr    BYTE PTR [rdx+0x3],0x0
	...
   140035044:	add    eax,DWORD PTR [rax]
   140035046:	add    BYTE PTR [rax],al
   140035048:	movabs al,ds:0x2000037d
   140035051:	add    BYTE PTR [rax],al
   140035053:	add    BYTE PTR [rcx],al
	...
   14003505d:	add    BYTE PTR [rax],al
   14003505f:	add    BYTE PTR [rdx],ah
   140035061:	add    eax,0x11993
   140035066:	add    BYTE PTR [rax],al
   140035068:	jo     0x1400350e7
   14003506a:	add    eax,DWORD PTR [rax]
	...
   140035074:	add    eax,DWORD PTR [rax]
   140035076:	add    BYTE PTR [rax],al
   140035078:	enter  0x386,0x0
   14003507c:	cmp    BYTE PTR [rax],al
   14003507e:	add    BYTE PTR [rax],al
   140035080:	add    BYTE PTR [rax],al
   140035082:	add    BYTE PTR [rax],al
   140035084:	add    DWORD PTR [rax],eax
	...
   14003508e:	add    BYTE PTR [rax],al
   140035090:	and    al,BYTE PTR [rip+0x11993]        # 0x140046a29
   140035096:	add    BYTE PTR [rax],al
   140035098:	int3   
   140035099:	jl     0x14003509e
	...
   1400350a3:	add    BYTE PTR [rbx],al
   1400350a5:	add    BYTE PTR [rax],al
   1400350a7:	add    BYTE PTR [rax+0x38000386],dl
   1400350ad:	add    BYTE PTR [rax],al
   1400350af:	add    BYTE PTR [rax],al
   1400350b1:	add    BYTE PTR [rax],al
   1400350b3:	add    BYTE PTR [rcx],al
	...
   1400350bd:	add    BYTE PTR [rax],al
   1400350bf:	add    BYTE PTR [rdx],ah
   1400350c1:	add    eax,0x11993
   1400350c6:	add    BYTE PTR [rax],al
   1400350c8:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   1400350d4:	add    eax,DWORD PTR [rax]
   1400350d6:	add    BYTE PTR [rax],al
   1400350d8:	rex.WR xchg BYTE PTR [rbx],r8b
   1400350db:	add    BYTE PTR [rax],ah
   1400350dd:	add    BYTE PTR [rax],al
   1400350df:	add    BYTE PTR [rax],al
   1400350e1:	add    BYTE PTR [rax],al
   1400350e3:	add    BYTE PTR [rcx],al
	...
   1400350ed:	add    BYTE PTR [rax],al
   1400350ef:	add    BYTE PTR [rdx],ah
   1400350f1:	add    eax,0x11993
   1400350f6:	add    BYTE PTR [rax],al
   1400350f8:	adc    BYTE PTR [rsi+0x3],al
   1400350fe:	add    BYTE PTR [rax],al
   140035100:	add    BYTE PTR [rax],al
   140035102:	add    BYTE PTR [rax],al
   140035104:	add    eax,DWORD PTR [rax]
   140035106:	add    BYTE PTR [rax],al
   140035108:	sbb    BYTE PTR [rsi+0x200003],al
   14003510e:	add    BYTE PTR [rax],al
   140035110:	add    BYTE PTR [rax],al
   140035112:	add    BYTE PTR [rax],al
   140035114:	add    DWORD PTR [rax],eax
	...
   14003511e:	add    BYTE PTR [rax],al
   140035120:	and    al,BYTE PTR [rip+0x21993]        # 0x140056ab9
   140035126:	add    BYTE PTR [rax],al
   140035128:	mov    esp,0x385
   14003512d:	add    BYTE PTR [rax],al
   14003512f:	add    BYTE PTR [rax],al
   140035131:	add    BYTE PTR [rax],al
   140035133:	add    BYTE PTR [rip+0xffffffffcc000000],al        # 0x10c035139
   140035139:	test   DWORD PTR [rbx],eax
   14003513b:	add    BYTE PTR [rax+0x0],cl
   14003513e:	add    BYTE PTR [rax],al
   140035140:	add    BYTE PTR [rax],al
   140035142:	add    BYTE PTR [rax],al
   140035144:	add    DWORD PTR [rax],eax
	...
   14003514e:	add    BYTE PTR [rax],al
   140035150:	and    al,BYTE PTR [rip+0x41993]        # 0x140076ae9
   140035156:	add    BYTE PTR [rax],al
   140035158:	sbb    BYTE PTR [rbp+0x3],al
   14003515e:	add    BYTE PTR [rax],al
   140035160:	add    BYTE PTR [rax],al
   140035162:	add    BYTE PTR [rax],al
   140035164:	or     eax,DWORD PTR [rax]
   140035166:	add    BYTE PTR [rax],al
   140035168:	cmp    BYTE PTR [rbp+0x580003],al
   14003516e:	add    BYTE PTR [rax],al
   140035170:	add    BYTE PTR [rax],al
   140035172:	add    BYTE PTR [rax],al
   140035174:	add    DWORD PTR [rax],eax
	...
   14003517e:	add    BYTE PTR [rax],al
   140035180:	and    al,BYTE PTR [rip+0x31993]        # 0x140066b19
   140035186:	add    BYTE PTR [rax],al
   140035188:	enter  0x37a,0x0
	...
   140035194:	(bad)  
   140035195:	add    BYTE PTR [rax],al
   140035197:	add    BYTE PTR [rsp+rax*4+0x600003],dh
   14003519e:	add    BYTE PTR [rax],al
   1400351a0:	add    BYTE PTR [rax],al
   1400351a2:	add    BYTE PTR [rax],al
   1400351a4:	add    DWORD PTR [rax],eax
	...
   1400351ae:	add    BYTE PTR [rax],al
   1400351b0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046b49
   1400351b6:	add    BYTE PTR [rax],al
   1400351b8:	mov    WORD PTR [rdx+0x3],?
	...
   1400351c3:	add    BYTE PTR [rbx],al
   1400351c5:	add    BYTE PTR [rax],al
   1400351c7:	add    BYTE PTR [rsp+rax*4+0x3],bh
   1400351cb:	add    BYTE PTR [rax],ah
   1400351cd:	add    BYTE PTR [rax],al
   1400351cf:	add    BYTE PTR [rax],al
   1400351d1:	add    BYTE PTR [rax],al
   1400351d3:	add    BYTE PTR [rcx],al
	...
   1400351dd:	add    BYTE PTR [rax],al
   1400351df:	add    BYTE PTR [rdx],ah
   1400351e1:	add    eax,0x111993
   1400351e6:	add    BYTE PTR [rax],al
   1400351e8:	add    QWORD PTR [rbx],0x0
	...
   1400351f4:	adc    eax,DWORD PTR [rax]
   1400351f6:	add    BYTE PTR [rax],al
   1400351f8:	rol    BYTE PTR [rbx+0x200003],1
   1400351fe:	add    BYTE PTR [rax],al
   140035200:	add    BYTE PTR [rax],al
   140035202:	add    BYTE PTR [rax],al
   140035204:	add    DWORD PTR [rax],eax
	...
   14003520e:	add    BYTE PTR [rax],al
   140035210:	and    al,BYTE PTR [rip+0x121993]        # 0x140156ba9
   140035216:	add    BYTE PTR [rax],al
   140035218:	or     BYTE PTR [rdx+0x3],al
   14003521e:	add    BYTE PTR [rax],al
   140035220:	add    BYTE PTR [rax],al
   140035222:	add    BYTE PTR [rax],al
   140035224:	adc    al,0x0
   140035226:	add    BYTE PTR [rax],al
   140035228:	cwde   
   140035229:	(bad)  
   14003522a:	add    eax,DWORD PTR [rax]
   14003522c:	and    BYTE PTR [rax],al
   14003522e:	add    BYTE PTR [rax],al
   140035230:	add    BYTE PTR [rax],al
   140035232:	add    BYTE PTR [rax],al
   140035234:	add    DWORD PTR [rax],eax
	...
   14003523e:	add    BYTE PTR [rax],al
   140035240:	and    al,BYTE PTR [rip+0x11993]        # 0x140046bd9
   140035246:	add    BYTE PTR [rax],al
   140035248:	shr    BYTE PTR [rdx+0x3],0x0
	...
   140035254:	add    eax,DWORD PTR [rax]
   140035256:	add    BYTE PTR [rax],al
   140035258:	rol    BYTE PTR [rcx+0x200003],1
   14003525e:	add    BYTE PTR [rax],al
   140035260:	add    BYTE PTR [rax],al
   140035262:	add    BYTE PTR [rax],al
   140035264:	add    DWORD PTR [rax],eax
	...
   14003526e:	add    BYTE PTR [rax],al
   140035270:	and    al,BYTE PTR [rip+0x11993]        # 0x140046c09
   140035276:	add    BYTE PTR [rax],al
   140035278:	jo     0x1400352f7
   14003527a:	add    eax,DWORD PTR [rax]
	...
   140035284:	add    eax,DWORD PTR [rax]
   140035286:	add    BYTE PTR [rax],al
   140035288:	cwde   
   140035289:	mov    al,BYTE PTR [rbx]
   14003528b:	add    BYTE PTR [rax],bh
   14003528d:	add    BYTE PTR [rax],al
   14003528f:	add    BYTE PTR [rax],al
   140035291:	add    BYTE PTR [rax],al
   140035293:	add    BYTE PTR [rcx],al
	...
   14003529d:	add    BYTE PTR [rax],al
   14003529f:	add    BYTE PTR [rdx],ah
   1400352a1:	add    eax,0x31993
   1400352a6:	add    BYTE PTR [rax],al
   1400352a8:	sub    BYTE PTR [rdx+0x3],cl
   1400352ae:	add    BYTE PTR [rax],al
   1400352b0:	add    BYTE PTR [rax],al
   1400352b2:	add    BYTE PTR [rax],al
   1400352b4:	(bad)  
   1400352b5:	add    BYTE PTR [rax],al
   1400352b7:	add    BYTE PTR [rax-0x76],al
   1400352ba:	add    eax,DWORD PTR [rax]
   1400352bc:	add    BYTE PTR [rax],al
   1400352bf:	add    BYTE PTR [rax],al
   1400352c1:	add    BYTE PTR [rax],al
   1400352c3:	add    BYTE PTR [rcx],al
	...
   1400352cd:	add    BYTE PTR [rax],al
   1400352cf:	add    BYTE PTR [rdx],ah
   1400352d1:	add    eax,0x31993
   1400352d6:	add    BYTE PTR [rax],al
   1400352d8:	enter  0x37a,0x0
	...
   1400352e4:	(bad)  
   1400352e5:	add    BYTE PTR [rax],al
   1400352e7:	add    ah,al
   1400352e9:	mov    DWORD PTR [rbx],eax
   1400352eb:	add    BYTE PTR [rax+0x0],ah
   1400352ee:	add    BYTE PTR [rax],al
   1400352f0:	add    BYTE PTR [rax],al
   1400352f2:	add    BYTE PTR [rax],al
   1400352f4:	add    DWORD PTR [rax],eax
	...
   1400352fe:	add    BYTE PTR [rax],al
   140035300:	and    al,BYTE PTR [rip+0x11993]        # 0x140046c99
   140035306:	add    BYTE PTR [rax],al
   140035308:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
	...
   140035314:	add    eax,DWORD PTR [rax]
   140035316:	add    BYTE PTR [rax],al
   140035318:	nop
   140035319:	mov    DWORD PTR [rbx],eax
   14003531b:	add    BYTE PTR [rax],ah
   14003531d:	add    BYTE PTR [rax],al
   14003531f:	add    BYTE PTR [rax],al
   140035321:	add    BYTE PTR [rax],al
   140035323:	add    BYTE PTR [rcx],al
	...
   14003532d:	add    BYTE PTR [rax],al
   14003532f:	add    BYTE PTR [rdx],ah
   140035331:	add    eax,0x101993
   140035336:	add    BYTE PTR [rax],al
   140035338:	jo     0x1400352c2
   14003533a:	add    eax,DWORD PTR [rax]
	...
   140035344:	adc    al,BYTE PTR [rax]
   140035346:	add    BYTE PTR [rax],al
   140035348:	lock mov BYTE PTR [rbx],al
   14003534b:	add    BYTE PTR [rax],ah
   14003534d:	add    BYTE PTR [rax],al
   14003534f:	add    BYTE PTR [rax],al
   140035351:	add    BYTE PTR [rax],al
   140035353:	add    BYTE PTR [rcx],al
	...
   14003535d:	add    BYTE PTR [rax],al
   14003535f:	add    BYTE PTR [rdx],ah
   140035361:	add    eax,0x111993
   140035366:	add    BYTE PTR [rax],al
   140035368:	rex xchg DWORD PTR [rbx],eax
	...
   140035373:	add    BYTE PTR [rbx],dl
   140035375:	add    BYTE PTR [rax],al
   140035377:	add    al,cl
   140035379:	xchg   DWORD PTR [rbx],eax
   14003537b:	add    BYTE PTR [rax],ah
   14003537d:	add    BYTE PTR [rax],al
   14003537f:	add    BYTE PTR [rax],al
   140035381:	add    BYTE PTR [rax],al
   140035383:	add    BYTE PTR [rcx],al
	...
   14003538d:	add    BYTE PTR [rax],al
   14003538f:	add    BYTE PTR [rdx],ah
   140035391:	add    eax,0x11993
   140035396:	add    BYTE PTR [rax],al
   140035398:	shr    BYTE PTR [rdx+0x3],0x0
	...
   1400353a4:	add    eax,DWORD PTR [rax]
   1400353a6:	add    BYTE PTR [rax],al
   1400353a8:	or     al,0x87
   1400353aa:	add    eax,DWORD PTR [rax]
   1400353ac:	and    BYTE PTR [rax],al
   1400353ae:	add    BYTE PTR [rax],al
   1400353b0:	add    BYTE PTR [rax],al
   1400353b2:	add    BYTE PTR [rax],al
   1400353b4:	add    DWORD PTR [rax],eax
	...
   1400353be:	add    BYTE PTR [rax],al
   1400353c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046d59
   1400353c6:	add    BYTE PTR [rax],al
   1400353c8:	ror    BYTE PTR [rbx+rax*1+0x0],1
   1400353cf:	add    BYTE PTR [rax],al
   1400353d1:	add    BYTE PTR [rax],al
   1400353d3:	add    BYTE PTR [rbx],al
   1400353d5:	add    BYTE PTR [rax],al
   1400353d7:	add    al,bl
   1400353d9:	mov    WORD PTR [rbx],es
   1400353db:	add    BYTE PTR [rax],ah
   1400353dd:	add    BYTE PTR [rax],al
   1400353df:	add    BYTE PTR [rax],al
   1400353e1:	add    BYTE PTR [rax],al
   1400353e3:	add    BYTE PTR [rcx],al
	...
   1400353ed:	add    BYTE PTR [rax],al
   1400353ef:	add    BYTE PTR [rdx],ah
   1400353f1:	add    eax,0x11993
   1400353f6:	add    BYTE PTR [rax],al
   1400353f8:	adc    BYTE PTR [rsi+0x3],al
   1400353fe:	add    BYTE PTR [rax],al
   140035400:	add    BYTE PTR [rax],al
   140035402:	add    BYTE PTR [rax],al
   140035404:	add    eax,DWORD PTR [rax]
   140035406:	add    BYTE PTR [rax],al
   140035408:	test   al,0x8c
   14003540a:	add    eax,DWORD PTR [rax]
   14003540c:	and    BYTE PTR [rax],al
   14003540e:	add    BYTE PTR [rax],al
   140035410:	add    BYTE PTR [rax],al
   140035412:	add    BYTE PTR [rax],al
   140035414:	add    DWORD PTR [rax],eax
	...
   14003541e:	add    BYTE PTR [rax],al
   140035420:	and    al,BYTE PTR [rip+0x31993]        # 0x140066db9
   140035426:	add    BYTE PTR [rax],al
   140035428:	rex.W mov WORD PTR [rbx],es
	...
   140035433:	add    BYTE PTR [rdi],al
   140035435:	add    BYTE PTR [rax],al
   140035437:	add    BYTE PTR [rax-0x74],ah
   14003543a:	add    eax,DWORD PTR [rax]
   14003543c:	(bad)  
   14003543d:	add    BYTE PTR [rax],al
   14003543f:	add    BYTE PTR [rax],al
   140035441:	add    BYTE PTR [rax],al
   140035443:	add    BYTE PTR [rcx],al
	...
   14003544d:	add    BYTE PTR [rax],al
   14003544f:	add    BYTE PTR [rdx],ah
   140035451:	add    eax,0x51993
   140035456:	add    BYTE PTR [rax],al
   140035458:	mov    esp,0x38b
   14003545d:	add    BYTE PTR [rax],al
   14003545f:	add    BYTE PTR [rax],al
   140035461:	add    BYTE PTR [rax],al
   140035463:	add    BYTE PTR [rdi],al
   140035465:	add    BYTE PTR [rax],al
   140035467:	add    ah,ah
   140035469:	mov    eax,DWORD PTR [rbx]
   14003546b:	add    BYTE PTR [rax],ah
   14003546d:	add    BYTE PTR [rax],al
   14003546f:	add    BYTE PTR [rax],al
   140035471:	add    BYTE PTR [rax],al
   140035473:	add    BYTE PTR [rcx],al
	...
   14003547d:	add    BYTE PTR [rax],al
   14003547f:	add    BYTE PTR [rdx],ah
   140035481:	add    eax,0x61993
   140035486:	add    BYTE PTR [rax],al
   140035488:	cmp    al,0x8b
   14003548a:	add    eax,DWORD PTR [rax]
	...
   140035494:	or     BYTE PTR [rax],al
   140035496:	add    BYTE PTR [rax],al
   140035498:	ins    BYTE PTR es:[rdi],dx
   140035499:	mov    eax,DWORD PTR [rbx]
   14003549b:	add    BYTE PTR [rax],ah
   14003549d:	add    BYTE PTR [rax],al
   14003549f:	add    BYTE PTR [rax],al
   1400354a1:	add    BYTE PTR [rax],al
   1400354a3:	add    BYTE PTR [rcx],al
	...
   1400354ad:	add    BYTE PTR [rax],al
   1400354af:	add    BYTE PTR [rdx],ah
   1400354b1:	add    eax,0x41993
   1400354b6:	add    BYTE PTR [rax],al
   1400354b8:	or     BYTE PTR [rdx+0x3],dl
   1400354be:	add    BYTE PTR [rax],al
   1400354c0:	add    BYTE PTR [rax],al
   1400354c2:	add    BYTE PTR [rax],al
   1400354c4:	or     eax,DWORD PTR [rax]
   1400354c6:	add    BYTE PTR [rax],al
   1400354c8:	sub    BYTE PTR [rdx+0x580003],dl
   1400354ce:	add    BYTE PTR [rax],al
   1400354d0:	add    BYTE PTR [rax],al
   1400354d2:	add    BYTE PTR [rax],al
   1400354d4:	add    DWORD PTR [rax],eax
	...
   1400354de:	add    BYTE PTR [rax],al
   1400354e0:	and    al,BYTE PTR [rip+0x31993]        # 0x140066e79
   1400354e6:	add    BYTE PTR [rax],al
   1400354e8:	enter  0x37a,0x0
	...
   1400354f4:	(bad)  
   1400354f5:	add    BYTE PTR [rax],al
   1400354f7:	add    BYTE PTR [rcx+rdx*4+0x3],dh
   1400354fb:	add    BYTE PTR [rax+0x0],ah
   1400354fe:	add    BYTE PTR [rax],al
   140035500:	add    BYTE PTR [rax],al
   140035502:	add    BYTE PTR [rax],al
   140035504:	add    DWORD PTR [rax],eax
	...
   14003550e:	add    BYTE PTR [rax],al
   140035510:	and    al,BYTE PTR [rip+0x11993]        # 0x140046ea9
   140035516:	add    BYTE PTR [rax],al
   140035518:	xor    al,0x91
   14003551a:	add    eax,DWORD PTR [rax]
	...
   140035524:	add    eax,DWORD PTR [rax]
   140035526:	add    BYTE PTR [rax],al
   140035528:	cmp    al,0x91
   14003552a:	add    eax,DWORD PTR [rax]
   14003552c:	add    BYTE PTR [rax],al
   14003552f:	add    BYTE PTR [rax],al
   140035531:	add    BYTE PTR [rax],al
   140035533:	add    BYTE PTR [rcx],al
	...
   14003553d:	add    BYTE PTR [rax],al
   14003553f:	add    BYTE PTR [rdx],ah
   140035541:	add    eax,0x11993
   140035546:	add    BYTE PTR [rax],al
   140035548:	call   0x1400358dd
   14003554d:	add    BYTE PTR [rax],al
   14003554f:	add    BYTE PTR [rax],al
   140035551:	add    BYTE PTR [rax],al
   140035553:	add    BYTE PTR [rbx],al
   140035555:	add    BYTE PTR [rax],al
   140035557:	add    al,dh
   140035559:	nop
   14003555a:	add    eax,DWORD PTR [rax]
   14003555c:	add    BYTE PTR [rax],al
   14003555f:	add    BYTE PTR [rax],al
   140035561:	add    BYTE PTR [rax],al
   140035563:	add    BYTE PTR [rcx],al
	...
   14003556d:	add    BYTE PTR [rax],al
   14003556f:	add    BYTE PTR [rdx],ah
   140035571:	add    eax,0x11993
   140035576:	add    BYTE PTR [rax],al
   140035578:	mov    WORD PTR [rdx+0x3],?
	...
   140035583:	add    BYTE PTR [rbx],al
   140035585:	add    BYTE PTR [rax],al
   140035587:	add    BYTE PTR [rax+rdx*4+0x200003],ah
   14003558e:	add    BYTE PTR [rax],al
   140035590:	add    BYTE PTR [rax],al
   140035592:	add    BYTE PTR [rax],al
   140035594:	add    DWORD PTR [rax],eax
	...
   14003559e:	add    BYTE PTR [rax],al
   1400355a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140046f39
   1400355a6:	add    BYTE PTR [rax],al
   1400355a8:	shr    BYTE PTR [rdx+0x3],0x0
	...
   1400355b4:	add    eax,DWORD PTR [rax]
   1400355b6:	add    BYTE PTR [rax],al
   1400355b8:	mov    esp,0x2000038e
   1400355bd:	add    BYTE PTR [rax],al
   1400355bf:	add    BYTE PTR [rax],al
   1400355c1:	add    BYTE PTR [rax],al
   1400355c3:	add    BYTE PTR [rcx],al
	...
   1400355cd:	add    BYTE PTR [rax],al
   1400355cf:	add    BYTE PTR [rdx],ah
   1400355d1:	add    eax,0xb1993
   1400355d6:	add    BYTE PTR [rax],al
   1400355d8:	ror    BYTE PTR [rdi+0x3],1
   1400355de:	add    BYTE PTR [rax],al
   1400355e0:	add    BYTE PTR [rax],al
   1400355e2:	add    BYTE PTR [rax],al
   1400355e4:	or     eax,0x28000000
   1400355e9:	nop
   1400355ea:	add    eax,DWORD PTR [rax]
   1400355ec:	and    BYTE PTR [rax],al
   1400355ee:	add    BYTE PTR [rax],al
   1400355f0:	add    BYTE PTR [rax],al
   1400355f2:	add    BYTE PTR [rax],al
   1400355f4:	add    DWORD PTR [rax],eax
	...
   1400355fe:	add    BYTE PTR [rax],al
   140035600:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400f6f99
   140035606:	add    BYTE PTR [rax],al
   140035608:	lock mov es,WORD PTR [rbx]
	...
   140035613:	add    BYTE PTR [rsi],cl
   140035615:	add    BYTE PTR [rax],al
   140035617:	add    BYTE PTR [rax-0x71],dl
   14003561a:	add    eax,DWORD PTR [rax]
   14003561c:	and    BYTE PTR [rax],al
   14003561e:	add    BYTE PTR [rax],al
   140035620:	add    BYTE PTR [rax],al
   140035622:	add    BYTE PTR [rax],al
   140035624:	add    DWORD PTR [rax],eax
	...
   14003562e:	add    BYTE PTR [rax],al
   140035630:	and    al,BYTE PTR [rip+0x21993]        # 0x140056fc9
   140035636:	add    BYTE PTR [rax],al
   140035638:	(bad)  
   140035639:	jbe    0x14003563e
	...
   140035643:	add    BYTE PTR [rip+0x30000000],al        # 0x170035649
   140035649:	xchg   ebx,eax
   14003564a:	add    eax,DWORD PTR [rax]
   14003564c:	and    BYTE PTR [rax],al
   14003564e:	add    BYTE PTR [rax],al
   140035650:	add    BYTE PTR [rax],al
   140035652:	add    BYTE PTR [rax],al
   140035654:	add    DWORD PTR [rax],eax
	...
   14003565e:	add    BYTE PTR [rax],al
   140035660:	and    al,BYTE PTR [rip+0x11993]        # 0x140046ff9
   140035666:	add    BYTE PTR [rax],al
   140035668:	sub    al,0x72
   14003566a:	add    eax,DWORD PTR [rax]
	...
   140035674:	add    eax,DWORD PTR [rax]
   140035676:	add    BYTE PTR [rax],al
   140035678:	clc    
   140035679:	xchg   edx,eax
   14003567a:	add    eax,DWORD PTR [rax]
   14003567c:	and    BYTE PTR [rax],al
   14003567e:	add    BYTE PTR [rax],al
   140035680:	add    BYTE PTR [rax],al
   140035682:	add    BYTE PTR [rax],al
   140035684:	add    DWORD PTR [rax],eax
	...
   14003568e:	add    BYTE PTR [rax],al
   140035690:	and    al,BYTE PTR [rip+0x11993]        # 0x140047029
   140035696:	add    BYTE PTR [rax],al
   140035698:	adc    BYTE PTR [rbp+0x3],dl
   14003569e:	add    BYTE PTR [rax],al
   1400356a0:	add    BYTE PTR [rax],al
   1400356a2:	add    BYTE PTR [rax],al
   1400356a4:	add    eax,DWORD PTR [rax]
   1400356a6:	add    BYTE PTR [rax],al
   1400356a8:	push   rax
   1400356a9:	xchg   ebp,eax
   1400356aa:	add    eax,DWORD PTR [rax]
   1400356ac:	and    BYTE PTR [rax],al
   1400356ae:	add    BYTE PTR [rax],al
   1400356b0:	add    BYTE PTR [rax],al
   1400356b2:	add    BYTE PTR [rax],al
   1400356b4:	add    DWORD PTR [rax],eax
	...
   1400356be:	add    BYTE PTR [rax],al
   1400356c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140047059
   1400356c6:	add    BYTE PTR [rax],al
   1400356c8:	rcl    BYTE PTR [rbx+rax*1+0x0],1
   1400356cf:	add    BYTE PTR [rax],al
   1400356d1:	add    BYTE PTR [rax],al
   1400356d3:	add    BYTE PTR [rbx],al
   1400356d5:	add    BYTE PTR [rax],al
   1400356d7:	add    al,bl
   1400356d9:	xchg   esp,eax
   1400356da:	add    eax,DWORD PTR [rax]
   1400356dc:	and    BYTE PTR [rax],al
   1400356de:	add    BYTE PTR [rax],al
   1400356e0:	add    BYTE PTR [rax],al
   1400356e2:	add    BYTE PTR [rax],al
   1400356e4:	add    DWORD PTR [rax],eax
	...
   1400356ee:	add    BYTE PTR [rax],al
   1400356f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140047089
   1400356f6:	add    BYTE PTR [rax],al
   1400356f8:	adc    BYTE PTR [rbp+0x3],dl
   1400356fe:	add    BYTE PTR [rax],al
   140035700:	add    BYTE PTR [rax],al
   140035702:	add    BYTE PTR [rax],al
   140035704:	add    eax,DWORD PTR [rax]
   140035706:	add    BYTE PTR [rax],al
   140035708:	sbb    BYTE PTR [rbp+0x200003],dl
   14003570e:	add    BYTE PTR [rax],al
   140035710:	add    BYTE PTR [rax],al
   140035712:	add    BYTE PTR [rax],al
   140035714:	add    DWORD PTR [rax],eax
	...
   14003571e:	add    BYTE PTR [rax],al
   140035720:	and    al,BYTE PTR [rip+0x11993]        # 0x1400470b9
   140035726:	add    BYTE PTR [rax],al
   140035728:	sub    al,0x72
   14003572a:	add    eax,DWORD PTR [rax]
	...
   140035734:	add    eax,DWORD PTR [rax]
   140035736:	add    BYTE PTR [rax],al
   140035738:	pop    rax
   140035739:	xchg   esi,eax
   14003573a:	add    eax,DWORD PTR [rax]
   14003573c:	and    BYTE PTR [rax],al
   14003573e:	add    BYTE PTR [rax],al
   140035740:	add    BYTE PTR [rax],al
   140035742:	add    BYTE PTR [rax],al
   140035744:	add    DWORD PTR [rax],eax
	...
   14003574e:	add    BYTE PTR [rax],al
   140035750:	and    al,BYTE PTR [rip+0x11993]        # 0x1400470e9
   140035756:	add    BYTE PTR [rax],al
   140035758:	sub    al,0x72
   14003575a:	add    eax,DWORD PTR [rax]
	...
   140035764:	add    eax,DWORD PTR [rax]
   140035766:	add    BYTE PTR [rax],al
   140035768:	test   BYTE PTR [rsi+0x200003],dl
   14003576e:	add    BYTE PTR [rax],al
   140035770:	add    BYTE PTR [rax],al
   140035772:	add    BYTE PTR [rax],al
   140035774:	add    DWORD PTR [rax],eax
	...
   14003577e:	add    BYTE PTR [rax],al
   140035780:	and    al,BYTE PTR [rip+0x11993]        # 0x140047119
   140035786:	add    BYTE PTR [rax],al
   140035788:	in     al,0x71
   14003578a:	add    eax,DWORD PTR [rax]
	...
   140035794:	add    eax,DWORD PTR [rax]
   140035796:	add    BYTE PTR [rax],al
   140035798:	cmp    al,0x97
   14003579a:	add    eax,DWORD PTR [rax]
   14003579c:	rex.W add BYTE PTR [rax],al
   14003579f:	add    BYTE PTR [rax],al
   1400357a1:	add    BYTE PTR [rax],al
   1400357a3:	add    BYTE PTR [rcx],al
	...
   1400357ad:	add    BYTE PTR [rax],al
   1400357af:	add    BYTE PTR [rax+0x0],dh
	...
   140035806:	add    BYTE PTR [rax],al
   140035808:	add    al,al
   14003580a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003581d:	add    BYTE PTR [rax],al
   14003581f:	add    BYTE PTR [rdx+0x53],dl
   140035822:	rex.R push rbx
   140035824:	call   0xd6a86966
   140035829:	or     BYTE PTR [rdx],bl
   14003582b:	rex.RXB movabs al,ds:0x49a0fb591cd6951
   140035835:	add    BYTE PTR [rax],al
   140035837:	add    BYTE PTR [rdx+rdi*1+0x5c],al
   14003583b:	ja     0x14003589e
   14003583d:	ins    BYTE PTR es:[rdi],dx
   14003583e:	outs   dx,DWORD PTR fs:[rsi]
   140035840:	pop    rsp
   140035841:	jbe    0x140035874
   140035843:	(bad)  
   140035844:	xor    BYTE PTR [rax],dh
   140035846:	pop    rsp
   140035847:	push   rdx
   140035848:	gs ins BYTE PTR es:[rdi],dx
   14003584a:	gs (bad) 
   14003584c:	jae    0x1400358b3
   14003584e:	pop    rsp
   14003584f:	push   rdi
   140035850:	jb     0x1400358bb
   140035852:	je     0x1400358bd
   140035854:	outs   dx,BYTE PTR ds:[rsi]
   140035855:	addr32 push rsp
   140035857:	outs   dx,DWORD PTR ds:[rsi]
   140035858:	outs   dx,DWORD PTR ds:[rsi]
   140035859:	ins    BYTE PTR es:[rdi],dx
   14003585a:	jae    0x1400358b8
   14003585c:	(bad)  
   14003585d:	imul   ebp,DWORD PTR [rsi+0x36],0x54575c34
   140035864:	jae    0x1400358d6
   140035866:	je     0x1400358d4
   140035868:	rex.RB
   140035869:	rex.WRX sub rax,0x50415457
   14003586f:	push   rax
   140035870:	cs jo  0x1400358d7
   140035873:	(bad)  
	...
   14003587c:	pop    rdx
   14003587d:	add    BYTE PTR [rax],al
   14003587f:	add    BYTE PTR [rdx+0x0],bl
	...
   14003588e:	add    BYTE PTR [rax],al
   140035890:	add    DWORD PTR [rax],eax
	...
   14003589a:	add    BYTE PTR [rax],al
   14003589c:	xor    bl,dl
   14003589e:	add    eax,DWORD PTR [rax]
   1400358a0:	mov    eax,0x90000358
   1400358a5:	pop    rax
   1400358a6:	add    eax,DWORD PTR [rax]
	...
   1400358c0:	add    DWORD PTR [rax],eax
   1400358c2:	add    BYTE PTR [rax],al
   1400358c4:	rcr    BYTE PTR [rax+0x3],1
	...
   1400358cf:	add    al,ah
   1400358d1:	pop    rax
   1400358d2:	add    eax,DWORD PTR [rax]
	...
   1400358e0:	xor    bl,dl
   1400358e2:	add    eax,DWORD PTR [rax]
	...
   1400358ec:	(bad)  
   1400358ed:	(bad)  
   1400358ee:	(bad)  
   1400358ef:	inc    DWORD PTR [rax]
   1400358f1:	add    BYTE PTR [rax],al
   1400358f3:	add    BYTE PTR [rax+0x0],al
   1400358f6:	add    BYTE PTR [rax],al
   1400358f8:	mov    eax,0x358
	...
   140035905:	add    BYTE PTR [rax],al
   140035907:	add    BYTE PTR [rax+0x5800035a],al
   14003590d:	pop    rdx
   14003590e:	add    eax,DWORD PTR [rax]
   140035910:	sbb    BYTE PTR [rcx+0x3],0x0
	...
   140035930:	add    eax,0xf8000000
   140035935:	pop    rdx
   140035936:	add    eax,DWORD PTR [rax]
	...
   140035948:	add    DWORD PTR [rax],eax
   14003594a:	add    BYTE PTR [rax],al
   14003594c:	mov    BYTE PTR [rbx+0x3],bl
	...
   140035957:	add    BYTE PTR [rax-0x2d],bh
   14003595a:	add    eax,DWORD PTR [rax]
	...
   140035964:	(bad)  
   140035965:	(bad)  
   140035966:	(bad)  
   140035967:	inc    DWORD PTR [rax]
   140035969:	add    BYTE PTR [rax],al
   14003596b:	add    BYTE PTR [rax+0x0],al
   14003596e:	add    BYTE PTR [rax],al
   140035970:	jo     0x1400359cd
   140035972:	add    eax,DWORD PTR [rax]
	...
   140035980:	xor    ah,dl
   140035982:	add    eax,DWORD PTR [rax]
	...
   14003598c:	(bad)  
   14003598d:	(bad)  
   14003598e:	(bad)  
   14003598f:	inc    DWORD PTR [rax]
   140035991:	add    BYTE PTR [rax],al
   140035993:	add    BYTE PTR [rax+0x0],al
   140035996:	add    BYTE PTR [rax],al
   140035998:	rex pop rcx
   14003599a:	add    eax,DWORD PTR [rax]
	...
   1400359b0:	add    eax,DWORD PTR [rax]
   1400359b2:	add    BYTE PTR [rax],al
   1400359b4:	adc    BYTE PTR [rdx+0x3],bl
	...
   1400359bf:	add    BYTE PTR [rax],dh
   1400359c1:	pop    rsp
   1400359c2:	add    eax,DWORD PTR [rax]
   1400359c4:	lock pop rbx
   1400359c6:	add    eax,DWORD PTR [rax]
   1400359c8:	rex.W pop rbx
   1400359ca:	add    eax,DWORD PTR [rax]
   1400359cc:	pop    rax
   1400359cd:	pop    rcx
   1400359ce:	add    eax,DWORD PTR [rax]
	...
   1400359e8:	add    DWORD PTR [rax],eax
	...
   1400359f2:	add    BYTE PTR [rax],al
   1400359f4:	mov    eax,0x280003d4
   1400359f9:	pop    rcx
   1400359fa:	add    eax,DWORD PTR [rax]
   1400359fc:	call   0x140035d5a
	...
   140035a0d:	add    BYTE PTR [rax],al
   140035a0f:	add    BYTE PTR [rax+0x5800035b],dh
   140035a15:	pop    rdx
   140035a16:	add    eax,DWORD PTR [rax]
   140035a18:	sbb    BYTE PTR [rcx+0x3],0x0
	...
   140035a30:	add    DWORD PTR [rax],eax
	...
   140035a3a:	add    BYTE PTR [rax],al
   140035a3c:	adc    ah,0x3
   140035a3f:	add    al,bl
   140035a41:	pop    rsp
   140035a42:	add    eax,DWORD PTR [rax]
   140035a44:	xor    BYTE PTR [rdx+0x3],bl
	...
   140035a57:	add    BYTE PTR [rax+0x10003d4],al
   140035a5d:	add    BYTE PTR [rax],al
   140035a5f:	add    BYTE PTR [rax],al
   140035a61:	add    BYTE PTR [rax],al
   140035a63:	add    bh,bh
   140035a65:	(bad)  
   140035a66:	(bad)  
   140035a67:	inc    DWORD PTR [rax]
   140035a69:	add    BYTE PTR [rax],al
   140035a6b:	add    BYTE PTR [rax+0x0],al
   140035a6e:	add    BYTE PTR [rax],al
   140035a70:	fcomp  DWORD PTR [rbx+rax*1+0x0]
	...
   140035a80:	cwde   
   140035a81:	rol    DWORD PTR [rbx],cl
   140035a83:	add    BYTE PTR [rdx],al
   140035a85:	add    BYTE PTR [rax],al
   140035a87:	add    BYTE PTR [rax],al
   140035a89:	add    BYTE PTR [rax],al
   140035a8b:	add    bh,bh
   140035a8d:	(bad)  
   140035a8e:	(bad)  
   140035a8f:	inc    DWORD PTR [rax]
   140035a91:	add    BYTE PTR [rax],al
   140035a93:	add    BYTE PTR [rax+0x0],al
   140035a96:	add    BYTE PTR [rax],al
   140035a98:	fcomp  DWORD PTR [rbx+0x3]
	...
   140035aa7:	add    BYTE PTR [rcx],al
	...
   140035ab1:	add    BYTE PTR [rax],al
   140035ab3:	add    BYTE PTR [rax],dh
   140035ab5:	(bad)  
   140035ab6:	add    eax,DWORD PTR [rax]
   140035ab8:	rex pop rcx
   140035aba:	add    eax,DWORD PTR [rax]
   140035abc:	test   al,0x5a
   140035abe:	add    eax,DWORD PTR [rax]
	...
   140035ad0:	add    DWORD PTR [rax],eax
	...
   140035ada:	add    BYTE PTR [rax],al
   140035adc:	cwde   
   140035add:	rol    DWORD PTR [rbx],cl
   140035adf:	add    al,bl
   140035ae1:	pop    rbx
   140035ae2:	add    eax,DWORD PTR [rax]
   140035ae4:	rcr    BYTE PTR [rdx+0x3],1
	...
   140035af7:	add    al,dh
   140035af9:	pop    rsp
   140035afa:	add    eax,DWORD PTR [rax]
   140035afc:	xor    BYTE PTR [rbx+rax*1+0x0],bl
   140035b00:	lock pop rbx
   140035b02:	add    eax,DWORD PTR [rax]
   140035b04:	rex.W pop rbx
   140035b06:	add    eax,DWORD PTR [rax]
   140035b08:	pop    rax
   140035b09:	pop    rcx
   140035b0a:	add    eax,DWORD PTR [rax]
	...
   140035b28:	lock pop rbx
   140035b2a:	add    eax,DWORD PTR [rax]
   140035b2c:	rex.W pop rbx
   140035b2e:	add    eax,DWORD PTR [rax]
   140035b30:	pop    rax
   140035b31:	pop    rcx
   140035b32:	add    eax,DWORD PTR [rax]
	...
   140035b48:	push   rax
   140035b49:	rol    DWORD PTR [rbx],cl
   140035b4b:	add    BYTE PTR [rcx],al
   140035b4d:	add    BYTE PTR [rax],al
   140035b4f:	add    BYTE PTR [rax],al
   140035b51:	add    BYTE PTR [rax],al
   140035b53:	add    bh,bh
   140035b55:	(bad)  
   140035b56:	(bad)  
   140035b57:	inc    DWORD PTR [rax]
   140035b59:	add    BYTE PTR [rax],al
   140035b5b:	add    BYTE PTR [rax+0x0],al
   140035b5e:	add    BYTE PTR [rax],al
   140035b60:	rcr    BYTE PTR [rbx+rax*1+0x0],0x0
	...
   140035b75:	add    BYTE PTR [rax],al
   140035b77:	add    BYTE PTR [rcx],al
   140035b79:	add    BYTE PTR [rax],al
   140035b7b:	add    BYTE PTR [rax+0x35c],al
   140035b81:	add    BYTE PTR [rax],al
   140035b83:	add    BYTE PTR [rax],al
   140035b85:	add    BYTE PTR [rax],al
   140035b87:	add    BYTE PTR [rax+0x359],al
	...
   140035b95:	add    BYTE PTR [rax],al
   140035b97:	add    BYTE PTR [rax+0x5b],cl
   140035b9a:	add    eax,DWORD PTR [rax]
   140035b9c:	pop    rax
   140035b9d:	pop    rcx
   140035b9e:	add    eax,DWORD PTR [rax]
	...
   140035bb0:	clc    
   140035bb1:	rol    DWORD PTR [rbx],cl
   140035bb3:	add    BYTE PTR [rdx],al
   140035bb5:	add    BYTE PTR [rax],al
   140035bb7:	add    BYTE PTR [rax],al
   140035bb9:	add    BYTE PTR [rax],al
   140035bbb:	add    bh,bh
   140035bbd:	(bad)  
   140035bbe:	(bad)  
   140035bbf:	inc    DWORD PTR [rax]
   140035bc1:	add    BYTE PTR [rax],al
   140035bc3:	add    BYTE PTR [rax+0x0],al
   140035bc6:	add    BYTE PTR [rax],al
   140035bc8:	test   al,0x59
   140035bca:	add    eax,DWORD PTR [rax]
	...
   140035be0:	add    eax,DWORD PTR [rax]
   140035be2:	add    BYTE PTR [rax],al
   140035be4:	or     BYTE PTR [rcx+0x3],bl
	...
   140035bef:	add    al,dl
   140035bf1:	rol    DWORD PTR [rbx],cl
   140035bf3:	add    BYTE PTR [rdx],al
   140035bf5:	add    BYTE PTR [rax],al
   140035bf7:	add    BYTE PTR [rax],al
   140035bf9:	add    BYTE PTR [rax],al
   140035bfb:	add    bh,bh
   140035bfd:	(bad)  
   140035bfe:	(bad)  
   140035bff:	inc    DWORD PTR [rax]
   140035c01:	add    BYTE PTR [rax],al
   140035c03:	add    BYTE PTR [rax+0x0],al
   140035c06:	add    BYTE PTR [rax],al
   140035c08:	nop
   140035c09:	pop    rsp
   140035c0a:	add    eax,DWORD PTR [rax]
	...
   140035c20:	add    al,0x0
   140035c22:	add    BYTE PTR [rax],al
   140035c24:	rcr    BYTE PTR [rcx+0x3],0x0
	...
   140035c30:	(bad)  
   140035c31:	(bad)  
   140035c32:	add    eax,DWORD PTR [rax]
   140035c34:	add    eax,DWORD PTR [rax]
   140035c36:	add    BYTE PTR [rax],al
   140035c38:	add    BYTE PTR [rax],al
   140035c3a:	add    BYTE PTR [rax],al
   140035c3c:	(bad)  
   140035c3d:	(bad)  
   140035c3e:	(bad)  
   140035c3f:	inc    DWORD PTR [rax]
   140035c41:	add    BYTE PTR [rax],al
   140035c43:	add    BYTE PTR [rax+0x0],al
   140035c46:	add    BYTE PTR [rax],al
   140035c48:	sbb    BYTE PTR [rbx+rax*1+0x0],bl
	...
   140035c58:	add    DWORD PTR [rax],eax
	...
   140035c62:	add    BYTE PTR [rax],al
   140035c64:	clc    
   140035c65:	rol    DWORD PTR [rbx],cl
   140035c67:	add    BYTE PTR [rax+0x58000359],ch
   140035c6d:	pop    rsp
   140035c6e:	add    eax,DWORD PTR [rax]
	...
   140035c80:	pop    rax
   140035c81:	pop    rcx
   140035c82:	add    eax,DWORD PTR [rax]
	...
   140035c98:	add    eax,DWORD PTR [rax]
   140035c9a:	add    BYTE PTR [rax],al
   140035c9c:	sub    BYTE PTR [rbx+0x3],bl
	...
   140035ca7:	add    BYTE PTR [rax+0x5a],bl
   140035caa:	add    eax,DWORD PTR [rax]
   140035cac:	sbb    BYTE PTR [rcx+0x3],0x0
	...
   140035cc8:	add    al,BYTE PTR [rax]
   140035cca:	add    BYTE PTR [rax],al
   140035ccc:	cwde   
   140035ccd:	pop    rbx
   140035cce:	add    eax,DWORD PTR [rax]
	...
   140035ce0:	add    al,BYTE PTR [rax]
   140035ce2:	add    BYTE PTR [rax],al
   140035ce4:	test   al,0x5c
   140035ce6:	add    eax,DWORD PTR [rax]
	...
   140035cf0:	mov    eax,0x40003d4
   140035cf5:	add    BYTE PTR [rax],al
   140035cf7:	add    BYTE PTR [rax],al
   140035cf9:	add    BYTE PTR [rax],al
   140035cfb:	add    bh,bh
   140035cfd:	(bad)  
   140035cfe:	(bad)  
   140035cff:	inc    DWORD PTR [rax]
   140035d01:	add    BYTE PTR [rax],al
   140035d03:	add    BYTE PTR [rax+0x0],al
   140035d06:	add    BYTE PTR [rax],al
   140035d08:	sub    BYTE PTR [rcx+0x3],bl
	...
   140035d1f:	add    BYTE PTR [rax+rax*1],al
   140035d22:	add    BYTE PTR [rax],al
   140035d24:	mov    al,0x5f
   140035d26:	add    eax,DWORD PTR [rax]
	...
   140035d30:	add    DWORD PTR [rax],eax
	...
   140035d3a:	add    BYTE PTR [rax],al
   140035d3c:	fcom   st(4)
   140035d3e:	add    eax,DWORD PTR [rax]
   140035d40:	sbb    BYTE PTR [rbp+0x3],0x0
   140035d44:	xor    BYTE PTR [rbp+0x3],bl
	...
   140035d57:	add    BYTE PTR [rax-0x2b],bl
   140035d5a:	add    eax,DWORD PTR [rax]
   140035d5c:	add    al,BYTE PTR [rax]
   140035d5e:	add    BYTE PTR [rax],al
   140035d60:	add    BYTE PTR [rax],al
   140035d62:	add    BYTE PTR [rax],al
   140035d64:	(bad)  
   140035d65:	(bad)  
   140035d66:	(bad)  
   140035d67:	inc    DWORD PTR [rax]
   140035d69:	add    BYTE PTR [rax],al
   140035d6b:	add    BYTE PTR [rax+0x0],al
   140035d6e:	add    BYTE PTR [rax],al
   140035d70:	mov    eax,0x361
	...
   140035d85:	add    BYTE PTR [rax],al
   140035d87:	add    BYTE PTR [rax+rax*1],al
   140035d8a:	add    BYTE PTR [rax],al
   140035d8c:	xor    BYTE PTR [rsi+0x3],bl
	...
   140035d9f:	add    BYTE PTR [rip+0xffffffffa8000000],al        # 0xe8035da5
   140035da5:	pop    rsi
   140035da6:	add    eax,DWORD PTR [rax]
	...
   140035db0:	js     0x140035d87
   140035db2:	add    eax,DWORD PTR [rax]
   140035db4:	add    eax,DWORD PTR [rax]
   140035db6:	add    BYTE PTR [rax],al
   140035db8:	add    BYTE PTR [rax],al
   140035dba:	add    BYTE PTR [rax],al
   140035dbc:	(bad)  
   140035dbd:	(bad)  
   140035dbe:	(bad)  
   140035dbf:	inc    DWORD PTR [rax]
   140035dc1:	add    BYTE PTR [rax],al
   140035dc3:	add    BYTE PTR [rax+0x0],al
   140035dc6:	add    BYTE PTR [rax],al
   140035dc8:	fcomp  DWORD PTR [rsi+0x3]
	...
   140035ddf:	add    BYTE PTR [rax+rax*1],al
   140035de2:	add    BYTE PTR [rax],al
   140035de4:	and    BYTE PTR [rdi+0x3],bl
	...
   140035def:	add    BYTE PTR [rax],bh
   140035df1:	(bad)  
   140035df2:	add    eax,DWORD PTR [rax]
   140035df4:	add    eax,DWORD PTR [rax]
   140035df6:	add    BYTE PTR [rax],al
   140035df8:	add    BYTE PTR [rax],al
   140035dfa:	add    BYTE PTR [rax],al
   140035dfc:	(bad)  
   140035dfd:	(bad)  
   140035dfe:	(bad)  
   140035dff:	inc    DWORD PTR [rax]
   140035e01:	add    BYTE PTR [rax],al
   140035e03:	add    BYTE PTR [rax+0x0],al
   140035e06:	add    BYTE PTR [rax],al
   140035e08:	or     BYTE PTR [rdi+0x3],bl
	...
   140035e1f:	add    BYTE PTR [rax+rax*1],al
   140035e22:	add    BYTE PTR [rax],al
   140035e24:	push   rax
   140035e25:	(bad)  
   140035e26:	add    eax,DWORD PTR [rax]
	...
   140035e30:	sub    BYTE PTR [rax+0x3],ah
   140035e33:	add    BYTE PTR [rax+0x5d],bl
   140035e36:	add    eax,DWORD PTR [rax]
   140035e38:	rex.W pop rbx
   140035e3a:	add    eax,DWORD PTR [rax]
   140035e3c:	pop    rax
   140035e3d:	pop    rcx
   140035e3e:	add    eax,DWORD PTR [rax]
	...
   140035e58:	clc    
   140035e59:	(bad)  
   140035e5a:	add    eax,DWORD PTR [rax]
   140035e5c:	add    eax,DWORD PTR [rax]
   140035e5e:	add    BYTE PTR [rax],al
   140035e60:	add    BYTE PTR [rax],al
   140035e62:	add    BYTE PTR [rax],al
   140035e64:	(bad)  
   140035e65:	(bad)  
   140035e66:	(bad)  
   140035e67:	inc    DWORD PTR [rax]
   140035e69:	add    BYTE PTR [rax],al
   140035e6b:	add    BYTE PTR [rax+0x0],al
   140035e6e:	add    BYTE PTR [rax],al
   140035e70:	sbb    BYTE PTR [rsi+0x3],bl
	...
   140035e7f:	add    BYTE PTR [rcx],al
	...
   140035e89:	add    BYTE PTR [rax],al
   140035e8b:	add    BYTE PTR [rax],bh
   140035e8d:	(bad)  
   140035e8e:	add    eax,DWORD PTR [rax]
   140035e90:	or     BYTE PTR [rdi+0x3],bl
   140035e93:	add    BYTE PTR [rax+0x35e],al
	...
   140035ea5:	add    BYTE PTR [rax],al
   140035ea7:	add    BYTE PTR [rax],ch
   140035ea9:	(bad)  
   140035eaa:	add    eax,DWORD PTR [rax]
   140035eac:	pop    rax
   140035ead:	pop    rsi
   140035eae:	add    eax,DWORD PTR [rax]
   140035eb0:	pop    rax
   140035eb1:	pop    rbp
   140035eb2:	add    eax,DWORD PTR [rax]
   140035eb4:	rex.W pop rbx
   140035eb6:	add    eax,DWORD PTR [rax]
   140035eb8:	pop    rax
   140035eb9:	pop    rcx
   140035eba:	add    eax,DWORD PTR [rax]
	...
   140035ee0:	add    al,0x0
   140035ee2:	add    BYTE PTR [rax],al
   140035ee4:	add    BYTE PTR [rcx+0x3],ah
	...
   140035ef7:	add    BYTE PTR [rdi],al
   140035ef9:	add    BYTE PTR [rax],al
   140035efb:	add    BYTE PTR [rax+0x5f],cl
   140035efe:	add    eax,DWORD PTR [rax]
	...
   140035f10:	add    al,0x0
   140035f12:	add    BYTE PTR [rax],al
   140035f14:	push   rax
   140035f15:	(bad)  
   140035f16:	add    eax,DWORD PTR [rax]
	...
   140035f20:	add    BYTE PTR [rax+0x3],ah
   140035f23:	add    BYTE PTR [rax+0x5d],bl
   140035f26:	add    eax,DWORD PTR [rax]
   140035f28:	rex.W pop rbx
   140035f2a:	add    eax,DWORD PTR [rax]
   140035f2c:	pop    rax
   140035f2d:	pop    rcx
   140035f2e:	add    eax,DWORD PTR [rax]
	...
   140035f48:	fcomp  DWORD PTR [rdi+0x3]
   140035f4b:	add    BYTE PTR [rax],bl
   140035f4d:	(bad)  
   140035f4f:	add    BYTE PTR [rax],ch
   140035f51:	(bad)  
   140035f52:	add    eax,DWORD PTR [rax]
   140035f54:	pop    rax
   140035f55:	pop    rsi
   140035f56:	add    eax,DWORD PTR [rax]
   140035f58:	pop    rax
   140035f59:	pop    rbp
   140035f5a:	add    eax,DWORD PTR [rax]
   140035f5c:	rex.W pop rbx
   140035f5e:	add    eax,DWORD PTR [rax]
   140035f60:	pop    rax
   140035f61:	pop    rcx
   140035f62:	add    eax,DWORD PTR [rax]
	...
   140035f88:	add    DWORD PTR [rax],eax
	...
   140035f92:	add    BYTE PTR [rax],al
   140035f94:	lock (bad) 
   140035f96:	add    eax,DWORD PTR [rax]
   140035f98:	sbb    BYTE PTR [rbp+0x3],bl
   140035f9b:	add    BYTE PTR [rax+0x35f],cl
	...
   140035fad:	add    BYTE PTR [rax],al
   140035faf:	add    al,bl
   140035fb1:	(bad)  
   140035fb2:	add    eax,DWORD PTR [rax]
   140035fb4:	pop    rax
   140035fb5:	pop    rbp
   140035fb6:	add    eax,DWORD PTR [rax]
   140035fb8:	rex.W pop rbx
   140035fba:	add    eax,DWORD PTR [rax]
   140035fbc:	pop    rax
   140035fbd:	pop    rcx
   140035fbe:	add    eax,DWORD PTR [rax]
	...
   140035fd8:	sbb    ch,dl
   140035fda:	add    eax,DWORD PTR [rax]
   140035fdc:	(bad)  
   140035fdd:	add    BYTE PTR [rax],al
   140035fdf:	add    BYTE PTR [rax],al
   140035fe1:	add    BYTE PTR [rax],al
   140035fe3:	add    bh,bh
   140035fe5:	(bad)  
   140035fe6:	(bad)  
   140035fe7:	inc    DWORD PTR [rax]
   140035fe9:	add    BYTE PTR [rax],al
   140035feb:	add    BYTE PTR [rax+0x0],al
   140035fee:	add    BYTE PTR [rax],al
   140035ff0:	lock pop rsi
   140035ff2:	add    eax,DWORD PTR [rax]
	...
   140036000:	movabs al,ds:0x30003d5
   140036009:	add    BYTE PTR [rax],al
   14003600b:	add    bh,bh
   14003600d:	(bad)  
   14003600e:	(bad)  
   14003600f:	inc    DWORD PTR [rax]
   140036011:	add    BYTE PTR [rax],al
   140036013:	add    BYTE PTR [rax+0x0],al
   140036016:	add    BYTE PTR [rax],al
   140036018:	fcomp  DWORD PTR [rbp+0x3]
	...
   140036027:	add    al,bl
   140036029:	(bad)  
   14003602a:	add    eax,DWORD PTR [rax]
   14003602c:	add    eax,DWORD PTR [rax]
   14003602e:	add    BYTE PTR [rax],al
   140036030:	add    BYTE PTR [rax],al
   140036032:	add    BYTE PTR [rax],al
   140036034:	(bad)  
   140036035:	(bad)  
   140036036:	(bad)  
   140036037:	inc    DWORD PTR [rax]
   140036039:	add    BYTE PTR [rax],al
   14003603b:	add    BYTE PTR [rax+0x0],al
   14003603e:	add    BYTE PTR [rax],al
   140036040:	sbb    BYTE PTR [rbp+0x3],0x0
	...
   140036050:	pop    rax
   140036051:	pop    rsi
   140036052:	add    eax,DWORD PTR [rax]
   140036054:	pop    rax
   140036055:	pop    rbp
   140036056:	add    eax,DWORD PTR [rax]
   140036058:	rex.W pop rbx
   14003605a:	add    eax,DWORD PTR [rax]
   14003605c:	pop    rax
   14003605d:	pop    rcx
   14003605e:	add    eax,DWORD PTR [rax]
	...
   140036078:	add    DWORD PTR [rax],eax
	...
   140036082:	add    BYTE PTR [rax],al
   140036084:	js     0x14003605b
   140036086:	add    eax,DWORD PTR [rax]
   140036088:	fcomp  DWORD PTR [rsi+0x3]
   14003608b:	add    BYTE PTR [rax+0x60],bh
   14003608e:	add    eax,DWORD PTR [rax]
	...
   1400360a0:	sbb    BYTE PTR [rdx+0x3],ah
   1400360a3:	add    BYTE PTR [rax],ch
   1400360a5:	(bad)  
   1400360a6:	add    eax,DWORD PTR [rax]
   1400360a8:	pop    rax
   1400360a9:	pop    rsi
   1400360aa:	add    eax,DWORD PTR [rax]
   1400360ac:	pop    rax
   1400360ad:	pop    rbp
   1400360ae:	add    eax,DWORD PTR [rax]
   1400360b0:	rex.W pop rbx
   1400360b2:	add    eax,DWORD PTR [rax]
   1400360b4:	pop    rax
   1400360b5:	pop    rcx
   1400360b6:	add    eax,DWORD PTR [rax]
	...
   1400360d8:	lock (bad) 
   1400360da:	add    eax,DWORD PTR [rax]
   1400360dc:	add    eax,DWORD PTR [rax]
   1400360de:	add    BYTE PTR [rax],al
   1400360e0:	add    BYTE PTR [rax],al
   1400360e2:	add    BYTE PTR [rax],al
   1400360e4:	(bad)  
   1400360e5:	(bad)  
   1400360e6:	(bad)  
   1400360e7:	inc    DWORD PTR [rax]
   1400360e9:	add    BYTE PTR [rax],al
   1400360eb:	add    BYTE PTR [rax+0x0],al
   1400360ee:	add    BYTE PTR [rax],al
   1400360f0:	sbb    BYTE PTR [rbp+0x3],bl
	...
   1400360ff:	add    BYTE PTR [rax+0x5800035d],dh
   140036105:	pop    rbp
   140036106:	add    eax,DWORD PTR [rax]
   140036108:	rex.W pop rbx
   14003610a:	add    eax,DWORD PTR [rax]
   14003610c:	pop    rax
   14003610d:	pop    rcx
   14003610e:	add    eax,DWORD PTR [rax]
	...
   140036128:	adc    dh,dl
   14003612a:	add    eax,DWORD PTR [rax]
   14003612c:	add    al,0x0
   14003612e:	add    BYTE PTR [rax],al
   140036130:	add    BYTE PTR [rax],al
   140036132:	add    BYTE PTR [rax],al
   140036134:	(bad)  
   140036135:	(bad)  
   140036136:	(bad)  
   140036137:	inc    DWORD PTR [rax]
   140036139:	add    BYTE PTR [rax],al
   14003613b:	add    BYTE PTR [rax+0x0],al
   14003613e:	add    BYTE PTR [rax],al
   140036140:	cwde   
   140036141:	pop    rbp
   140036142:	add    eax,DWORD PTR [rax]
	...
   140036150:	lock pop rbp
   140036152:	add    eax,DWORD PTR [rax]
   140036154:	pop    rax
   140036155:	pop    rbp
   140036156:	add    eax,DWORD PTR [rax]
   140036158:	rex.W pop rbx
   14003615a:	add    eax,DWORD PTR [rax]
   14003615c:	pop    rax
   14003615d:	pop    rcx
   14003615e:	add    eax,DWORD PTR [rax]
	...
   140036180:	(bad)  
   140036181:	add    BYTE PTR [rax],al
   140036183:	add    BYTE PTR [rax+0x360],ah
   140036189:	add    BYTE PTR [rax],al
   14003618b:	add    BYTE PTR [rax],al
   14003618d:	add    BYTE PTR [rax],al
   14003618f:	add    BYTE PTR [rcx],al
	...
   140036199:	add    BYTE PTR [rax],al
   14003619b:	add    BYTE PTR [rax-0x27fffc2b],ah
   1400361a1:	pop    rbp
   1400361a2:	add    eax,DWORD PTR [rax]
   1400361a4:	nop
   1400361a5:	(bad)  
   1400361a6:	add    eax,DWORD PTR [rax]
	...
   1400361c0:	add    eax,DWORD PTR [rax]
   1400361c2:	add    BYTE PTR [rax],al
   1400361c4:	shl    BYTE PTR [rcx+0x3],1
	...
   1400361cf:	add    BYTE PTR [rax+0x5d],bl
   1400361d2:	add    eax,DWORD PTR [rax]
   1400361d4:	rex.W pop rbx
   1400361d6:	add    eax,DWORD PTR [rax]
   1400361d8:	pop    rax
   1400361d9:	pop    rcx
   1400361da:	add    eax,DWORD PTR [rax]
	...
   1400361f0:	add    DWORD PTR [rax],eax
	...
   1400361fa:	add    BYTE PTR [rax],al
   1400361fc:	sbb    ch,dl
   1400361fe:	add    eax,DWORD PTR [rax]
   140036200:	lock pop rsi
   140036202:	add    eax,DWORD PTR [rax]
   140036204:	lock (bad) 
   140036206:	add    eax,DWORD PTR [rax]
	...
   140036218:	rcl    ch,0x3
   14003621b:	add    BYTE PTR [rip+0x0],al        # 0x140036221
   140036221:	add    BYTE PTR [rax],al
   140036223:	add    bh,bh
   140036225:	(bad)  
   140036226:	(bad)  
   140036227:	inc    DWORD PTR [rax]
   140036229:	add    BYTE PTR [rax],al
   14003622b:	add    BYTE PTR [rax+0x0],al
   14003622e:	add    BYTE PTR [rax],al
   140036230:	js     0x140036293
   140036232:	add    eax,DWORD PTR [rax]
	...
   140036248:	(bad)  
   140036249:	add    BYTE PTR [rax],al
   14003624b:	add    BYTE PTR [rax+0x362],bl
   140036251:	add    BYTE PTR [rax],al
   140036253:	add    BYTE PTR [rax],al
   140036255:	add    BYTE PTR [rax],al
   140036257:	add    BYTE PTR [rax],bh
   140036259:	(bad)  
   14003625a:	add    eax,DWORD PTR [rax]
   14003625c:	add    eax,DWORD PTR [rax]
   14003625e:	add    BYTE PTR [rax],al
   140036260:	add    BYTE PTR [rax],al
   140036262:	add    BYTE PTR [rax],al
   140036264:	(bad)  
   140036265:	(bad)  
   140036266:	(bad)  
   140036267:	inc    DWORD PTR [rax]
   140036269:	add    BYTE PTR [rax],al
   14003626b:	add    BYTE PTR [rax+0x0],al
   14003626e:	add    BYTE PTR [rax],al
   140036270:	and    BYTE PTR [rdx+0x3],0x0
	...
   140036288:	add    al,0x0
   14003628a:	add    BYTE PTR [rax],al
   14003628c:	push   rax
   14003628d:	movsxd eax,DWORD PTR [rbx]
	...
   140036297:	add    BYTE PTR [rax],ch
   140036299:	movsxd eax,DWORD PTR [rbx]
   14003629b:	add    BYTE PTR [rax],bl
   14003629d:	(bad)  
   14003629f:	add    BYTE PTR [rax],ch
   1400362a1:	(bad)  
   1400362a2:	add    eax,DWORD PTR [rax]
   1400362a4:	pop    rax
   1400362a5:	pop    rsi
   1400362a6:	add    eax,DWORD PTR [rax]
   1400362a8:	pop    rax
   1400362a9:	pop    rbp
   1400362aa:	add    eax,DWORD PTR [rax]
   1400362ac:	rex.W pop rbx
   1400362ae:	add    eax,DWORD PTR [rax]
   1400362b0:	pop    rax
   1400362b1:	pop    rcx
   1400362b2:	add    eax,DWORD PTR [rax]
	...
   1400362d8:	add    DWORD PTR [rax],eax
	...
   1400362e2:	add    BYTE PTR [rax],al
   1400362e4:	pop    rax
   1400362e5:	(bad)  
   1400362e6:	add    eax,DWORD PTR [rax]
   1400362e8:	rex (bad) 
   1400362eb:	add    al,bl
   1400362ed:	(bad)  
	...
   1400362ff:	add    BYTE PTR [rcx],al
	...
   140036309:	add    BYTE PTR [rax],al
   14003630b:	add    BYTE PTR [rax],bh
   14003630d:	(bad)  
   14003630e:	add    eax,DWORD PTR [rax]
   140036310:	and    BYTE PTR [rdx+0x3],0x0
   140036314:	add    BYTE PTR [rbx+0x3],ah
	...
   140036327:	add    BYTE PTR [rax-0x2a],bl
   14003632a:	add    eax,DWORD PTR [rax]
   14003632c:	(bad)  
   14003632d:	add    BYTE PTR [rax],al
   14003632f:	add    BYTE PTR [rax],al
   140036331:	add    BYTE PTR [rax],al
   140036333:	add    bh,bh
   140036335:	(bad)  
   140036336:	(bad)  
   140036337:	inc    DWORD PTR [rax]
   140036339:	add    BYTE PTR [rax],al
   14003633b:	add    BYTE PTR [rax+0x0],al
   14003633e:	add    BYTE PTR [rax],al
   140036340:	rex (bad) 
	...
   14003634f:	add    BYTE PTR [rax+0x62],bl
   140036352:	add    eax,DWORD PTR [rax]
   140036354:	pop    rax
   140036355:	pop    rbp
   140036356:	add    eax,DWORD PTR [rax]
   140036358:	rex.W pop rbx
   14003635a:	add    eax,DWORD PTR [rax]
   14003635c:	pop    rax
   14003635d:	pop    rcx
   14003635e:	add    eax,DWORD PTR [rax]
	...
   140036380:	(bad)  
   140036381:	add    BYTE PTR [rax],al
   140036383:	add    al,ah
   140036385:	movsxd eax,DWORD PTR [rbx]
	...
   14003638f:	add    BYTE PTR [rax-0x2a],bh
   140036392:	add    eax,DWORD PTR [rax]
   140036394:	(bad)  
   140036395:	add    BYTE PTR [rax],al
   140036397:	add    BYTE PTR [rax],al
   140036399:	add    BYTE PTR [rax],al
   14003639b:	add    bh,bh
   14003639d:	(bad)  
   14003639e:	(bad)  
   14003639f:	inc    DWORD PTR [rax]
   1400363a1:	add    BYTE PTR [rax],al
   1400363a3:	add    BYTE PTR [rax+0x0],al
   1400363a6:	add    BYTE PTR [rax],al
   1400363a8:	js     0x14003640d
   1400363aa:	add    eax,DWORD PTR [rax]
	...
   1400363b8:	add    DWORD PTR [rax],eax
	...
   1400363c2:	add    BYTE PTR [rax],al
   1400363c4:	js     0x14003639c
   1400363c6:	add    eax,DWORD PTR [rax]
   1400363c8:	js     0x14003642d
   1400363ca:	add    eax,DWORD PTR [rax]
   1400363cc:	mov    eax,0x363
	...
   1400363dd:	add    BYTE PTR [rax],al
   1400363df:	add    BYTE PTR [rax+0x18000363],dl
   1400363e5:	(bad)  
   1400363e7:	add    BYTE PTR [rax],ch
   1400363e9:	(bad)  
   1400363ea:	add    eax,DWORD PTR [rax]
   1400363ec:	pop    rax
   1400363ed:	pop    rsi
   1400363ee:	add    eax,DWORD PTR [rax]
   1400363f0:	pop    rax
   1400363f1:	pop    rbp
   1400363f2:	add    eax,DWORD PTR [rax]
   1400363f4:	rex.W pop rbx
   1400363f6:	add    eax,DWORD PTR [rax]
   1400363f8:	pop    rax
   1400363f9:	pop    rcx
   1400363fa:	add    eax,DWORD PTR [rax]
	...
   140036420:	movabs al,ds:0x2800036218000364
   140036429:	(bad)  
   14003642a:	add    eax,DWORD PTR [rax]
   14003642c:	pop    rax
   14003642d:	pop    rsi
   14003642e:	add    eax,DWORD PTR [rax]
   140036430:	pop    rax
   140036431:	pop    rbp
   140036432:	add    eax,DWORD PTR [rax]
   140036434:	rex.W pop rbx
   140036436:	add    eax,DWORD PTR [rax]
   140036438:	pop    rax
   140036439:	pop    rcx
   14003643a:	add    eax,DWORD PTR [rax]
	...
   140036468:	(bad)  
   140036469:	add    BYTE PTR [rax],al
   14003646b:	add    BYTE PTR [rax],ah
   14003646d:	add    eax,DWORD PTR fs:[rax]
	...
   140036478:	add    DWORD PTR [rax],eax
	...
   140036482:	add    BYTE PTR [rax],al
   140036484:	cwde   
   140036485:	(bad)  
   140036486:	add    eax,DWORD PTR [rax]
   140036488:	(bad)  
   140036489:	add    eax,DWORD PTR fs:[rax]
   14003648c:	js     0x1400364f2
   14003648e:	add    eax,DWORD PTR [rax]
	...
   1400364a0:	cwde   
   1400364a1:	(bad)  
   1400364a2:	add    eax,DWORD PTR [rax]
   1400364a4:	(bad)  
   1400364a5:	add    BYTE PTR [rax],al
   1400364a7:	add    BYTE PTR [rax],al
   1400364a9:	add    BYTE PTR [rax],al
   1400364ab:	add    bh,bh
   1400364ad:	(bad)  
   1400364ae:	(bad)  
   1400364af:	inc    DWORD PTR [rax]
   1400364b1:	add    BYTE PTR [rax],al
   1400364b3:	add    BYTE PTR [rax+0x0],al
   1400364b6:	add    BYTE PTR [rax],al
   1400364b8:	(bad)  
   1400364b9:	add    eax,DWORD PTR fs:[rax]
	...
   1400364c8:	mov    eax,0x70003d6
   1400364cd:	add    BYTE PTR [rax],al
   1400364cf:	add    BYTE PTR [rax],al
   1400364d1:	add    BYTE PTR [rax],al
   1400364d3:	add    bh,bh
   1400364d5:	(bad)  
   1400364d6:	(bad)  
   1400364d7:	inc    DWORD PTR [rax]
   1400364d9:	add    BYTE PTR [rax],al
   1400364db:	add    BYTE PTR [rax+0x0],al
   1400364de:	add    BYTE PTR [rax],al
   1400364e0:	shl    BYTE PTR [rbp+0x3],1
	...
   1400364ef:	add    BYTE PTR [rax+0x65],ch
   1400364f2:	add    eax,DWORD PTR [rax]
   1400364f4:	pop    rax
   1400364f5:	pop    rbp
   1400364f6:	add    eax,DWORD PTR [rax]
   1400364f8:	rex.W pop rbx
   1400364fa:	add    eax,DWORD PTR [rax]
   1400364fc:	pop    rax
   1400364fd:	pop    rcx
   1400364fe:	add    eax,DWORD PTR [rax]
	...
   140036518:	rex xlat BYTE PTR ds:[rbx]
   14003651a:	add    eax,DWORD PTR [rax]
   14003651c:	add    al,0x0
   14003651e:	add    BYTE PTR [rax],al
   140036520:	add    BYTE PTR [rax],al
   140036522:	add    BYTE PTR [rax],al
   140036524:	(bad)  
   140036525:	(bad)  
   140036526:	(bad)  
   140036527:	inc    DWORD PTR [rax]
   140036529:	add    BYTE PTR [rax],al
   14003652b:	add    BYTE PTR [rax+0x0],al
   14003652e:	add    BYTE PTR [rax],al
   140036530:	sbb    BYTE PTR [rsi+0x3],ah
	...
   14003653f:	add    BYTE PTR [rax-0x29],ch
   140036542:	add    eax,DWORD PTR [rax]
   140036544:	(bad)  
   140036545:	add    BYTE PTR [rax],al
   140036547:	add    BYTE PTR [rax],al
   140036549:	add    BYTE PTR [rax],al
   14003654b:	add    bh,bh
   14003654d:	(bad)  
   14003654e:	(bad)  
   14003654f:	inc    DWORD PTR [rax]
   140036551:	add    BYTE PTR [rax],al
   140036553:	add    BYTE PTR [rax+0x0],al
   140036556:	add    BYTE PTR [rax],al
   140036558:	add    BYTE PTR [rdi+0x3],ah
	...
   140036567:	add    BYTE PTR [rax+0x30003d7],bl
   14003656d:	add    BYTE PTR [rax],al
   14003656f:	add    BYTE PTR [rax],al
   140036571:	add    BYTE PTR [rax],al
   140036573:	add    bh,bh
   140036575:	(bad)  
   140036576:	(bad)  
   140036577:	inc    DWORD PTR [rax]
   140036579:	add    BYTE PTR [rax],al
   14003657b:	add    BYTE PTR [rax+0x0],al
   14003657e:	add    BYTE PTR [rax],al
   140036580:	and    BYTE PTR [rsi+0x3],0x0
	...
   140036598:	(bad)  
   140036599:	add    BYTE PTR [rax],al
   14003659b:	add    al,ch
   14003659d:	add    eax,DWORD PTR [eax]
	...
   1400365a8:	add    DWORD PTR [rax],eax
	...
   1400365b2:	add    BYTE PTR [rax],al
   1400365b4:	mov    eax,0xd00003d6
   1400365b9:	add    eax,DWORD PTR gs:[rax]
   1400365bc:	test   al,0x65
   1400365be:	add    eax,DWORD PTR [rax]
	...
   1400365d4:	add    DWORD PTR [rax],eax
   1400365d6:	add    BYTE PTR [rax],al
   1400365d8:	or     BYTE PTR [rax],al
   1400365da:	add    BYTE PTR [rax],al
   1400365dc:	and    BYTE PTR [rdi+0x3],ah
	...
   1400365e7:	add    BYTE PTR [rax],bl
   1400365e9:	add    eax,DWORD PTR gs:[rax]
   1400365ec:	pop    rax
   1400365ed:	pop    rsi
   1400365ee:	add    eax,DWORD PTR [rax]
   1400365f0:	pop    rax
   1400365f1:	pop    rbp
   1400365f2:	add    eax,DWORD PTR [rax]
   1400365f4:	rex.W pop rbx
   1400365f6:	add    eax,DWORD PTR [rax]
   1400365f8:	pop    rax
   1400365f9:	pop    rcx
   1400365fa:	add    eax,DWORD PTR [rax]
	...
   140036620:	add    eax,0xe8000000
   140036625:	add    eax,DWORD PTR gs:[rax]
	...
   140036630:	add    DWORD PTR [rax],eax
   140036632:	add    BYTE PTR [rax],al
   140036634:	js     0x140036637
   140036636:	add    BYTE PTR [rax],al
   140036638:	add    BYTE PTR [rax],al
   14003663a:	add    BYTE PTR [rax],al
   14003663c:	mov    eax,0xd00003d6
   140036641:	add    eax,DWORD PTR gs:[rax]
   140036644:	xor    BYTE PTR [rsi+0x3],ah
	...
   140036657:	add    al,bl
   140036659:	(bad)  
   14003665a:	add    eax,DWORD PTR [rax]
   14003665c:	add    BYTE PTR [rax],al
   14003665e:	add    BYTE PTR [rax],al
   140036660:	js     0x140036663
   140036662:	add    BYTE PTR [rax],al
   140036664:	(bad)  
   140036665:	(bad)  
   140036666:	(bad)  
   140036667:	inc    DWORD PTR [rax]
   140036669:	add    BYTE PTR [rax],al
   14003666b:	add    BYTE PTR [rax+0x0],al
   14003666e:	add    BYTE PTR [rax],al
   140036670:	nop
   140036671:	add    eax,DWORD PTR [eax]
	...
   140036688:	add    al,0x0
   14003668a:	add    BYTE PTR [rax],al
   14003668c:	lock add eax,DWORD PTR fs:[rax]
	...
   140036698:	rex
   140036699:	add    eax,DWORD PTR gs:[rax]
   14003669c:	push   0x58000365
   1400366a1:	pop    rbp
   1400366a2:	add    eax,DWORD PTR [rax]
   1400366a4:	rex.W pop rbx
   1400366a6:	add    eax,DWORD PTR [rax]
   1400366a8:	pop    rax
   1400366a9:	pop    rcx
   1400366aa:	add    eax,DWORD PTR [rax]
   1400366ac:	test   al,0x67
   1400366ae:	add    eax,DWORD PTR [rax]
   1400366b0:	pop    rax
   1400366b1:	add    ax,WORD PTR [rax]
	...
   1400366d8:	fcom   st(6)
   1400366da:	add    eax,DWORD PTR [rax]
	...
   1400366e4:	(bad)  
   1400366e5:	(bad)  
   1400366e6:	(bad)  
   1400366e7:	inc    DWORD PTR [rax]
   1400366e9:	add    BYTE PTR [rax],al
   1400366eb:	add    BYTE PTR [rax+0x0],al
   1400366ee:	add    BYTE PTR [rax],al
   1400366f0:	nop
   1400366f1:	add    eax,DWORD PTR [eax]
	...
   140036704:	add    DWORD PTR [rax],eax
   140036706:	add    BYTE PTR [rax],al
   140036708:	(bad)  
   140036709:	add    BYTE PTR [rax],al
   14003670b:	add    BYTE PTR [rax+0x366],bl
	...
   14003671d:	add    BYTE PTR [rax],al
   14003671f:	add    al,cl
   140036721:	add    eax,DWORD PTR fs:[rax]
   140036724:	rex
   140036725:	add    eax,DWORD PTR gs:[rax]
   140036728:	push   0x58000365
   14003672d:	pop    rbp
   14003672e:	add    eax,DWORD PTR [rax]
   140036730:	rex.W pop rbx
   140036732:	add    eax,DWORD PTR [rax]
   140036734:	pop    rax
   140036735:	pop    rcx
   140036736:	add    eax,DWORD PTR [rax]
   140036738:	test   al,0x67
   14003673a:	add    eax,DWORD PTR [rax]
   14003673c:	pop    rax
   14003673d:	add    ax,WORD PTR [rax]
	...
   140036768:	sbb    bh,dl
   14003676a:	add    eax,DWORD PTR [rax]
   14003676c:	add    DWORD PTR [rax],eax
   14003676e:	add    BYTE PTR [rax],al
   140036770:	add    BYTE PTR [rax],al
   140036772:	add    BYTE PTR [rax],al
   140036774:	(bad)  
   140036775:	(bad)  
   140036776:	(bad)  
   140036777:	inc    DWORD PTR [rax]
   140036779:	add    BYTE PTR [rax],al
   14003677b:	add    BYTE PTR [rax+0x0],al
   14003677e:	add    BYTE PTR [rax],al
   140036780:	shl    BYTE PTR [rdi+0x3],1
	...
   140036797:	add    BYTE PTR [rcx],al
   140036799:	add    BYTE PTR [rax],al
   14003679b:	add    BYTE PTR [rax+0x368],cl
   1400367a1:	add    BYTE PTR [rax],al
   1400367a3:	add    BYTE PTR [rax],al
   1400367a5:	add    BYTE PTR [rax],al
   1400367a7:	add    BYTE PTR [rax],bl
   1400367a9:	xlat   BYTE PTR ds:[rbx]
   1400367aa:	add    eax,DWORD PTR [rax]
   1400367ac:	add    DWORD PTR [rax],eax
   1400367ae:	add    BYTE PTR [rax],al
   1400367b0:	js     0x1400367b3
   1400367b2:	add    BYTE PTR [rax],al
   1400367b4:	(bad)  
   1400367b5:	(bad)  
   1400367b6:	(bad)  
   1400367b7:	inc    DWORD PTR [rax]
   1400367b9:	add    BYTE PTR [rax],al
   1400367bb:	add    BYTE PTR [rax+0x0],al
   1400367be:	add    BYTE PTR [rax],al
   1400367c0:	shl    BYTE PTR [rdi+0x3],1
	...
   1400367d7:	add    BYTE PTR [rdx],al
   1400367d9:	add    BYTE PTR [rax],al
   1400367db:	add    BYTE PTR [rax+0x68],cl
   1400367de:	add    eax,DWORD PTR [rax]
	...
   1400367e8:	(bad)  
   1400367e9:	push   0x65180003
   1400367ee:	add    eax,DWORD PTR [rax]
   1400367f0:	pop    rax
   1400367f1:	pop    rsi
   1400367f2:	add    eax,DWORD PTR [rax]
   1400367f4:	pop    rax
   1400367f5:	pop    rbp
   1400367f6:	add    eax,DWORD PTR [rax]
   1400367f8:	rex.W pop rbx
   1400367fa:	add    eax,DWORD PTR [rax]
   1400367fc:	pop    rax
   1400367fd:	pop    rcx
   1400367fe:	add    eax,DWORD PTR [rax]
	...
   140036820:	add    DWORD PTR [rax],eax
	...
   14003682a:	add    BYTE PTR [rax],al
   14003682c:	clc    
   14003682d:	(bad)  
   14003682e:	add    eax,DWORD PTR [rax]
   140036830:	nop
   140036831:	add    eax,DWORD PTR gs:[rax]
   140036834:	and    BYTE PTR [rax+0x3],ch
	...
   140036847:	add    BYTE PTR [rax+0x67],ch
   14003684a:	add    eax,DWORD PTR [rax]
   14003684c:	fsub   DWORD PTR [rsi+0x3]
	...
   14003685f:	add    al,bh
   140036861:	(bad)  
   140036862:	add    eax,DWORD PTR [rax]
   140036864:	add    eax,0x0
   140036869:	add    BYTE PTR [rax],al
   14003686b:	add    bh,bh
   14003686d:	(bad)  
   14003686e:	(bad)  
   14003686f:	inc    DWORD PTR [rax]
   140036871:	add    BYTE PTR [rax],al
   140036873:	add    BYTE PTR [rax+0x0],al
   140036876:	add    BYTE PTR [rax],al
   140036878:	nop
   140036879:	add    eax,DWORD PTR gs:[rax]
	...
   140036888:	fsub   DWORD PTR [rsi+0x3]
	...
   140036897:	add    al,al
   140036899:	xlat   BYTE PTR ds:[rbx]
   14003689a:	add    eax,DWORD PTR [rax]
   14003689c:	(bad)  
   14003689d:	add    BYTE PTR [rax],al
   14003689f:	add    BYTE PTR [rax],al
   1400368a1:	add    BYTE PTR [rax],al
   1400368a3:	add    bh,bh
   1400368a5:	(bad)  
   1400368a6:	(bad)  
   1400368a7:	inc    DWORD PTR [rax]
   1400368a9:	add    BYTE PTR [rax],al
   1400368ab:	add    BYTE PTR [rax+0x0],al
   1400368ae:	add    BYTE PTR [rax],al
   1400368b0:	shr    BYTE PTR [rax+0x3],0x0
	...
   1400368c8:	(bad)  
   1400368c9:	add    BYTE PTR [rax],al
   1400368cb:	add    al,bl
   1400368cd:	push   0x3
   1400368d2:	add    BYTE PTR [rax],al
   1400368d4:	add    BYTE PTR [rax],al
   1400368d6:	add    BYTE PTR [rax],al
   1400368d8:	cwde   
   1400368d9:	push   0x62180003
   1400368de:	add    eax,DWORD PTR [rax]
   1400368e0:	sub    BYTE PTR [rcx+0x3],ah
   1400368e3:	add    BYTE PTR [rax+0x5e],bl
   1400368e6:	add    eax,DWORD PTR [rax]
   1400368e8:	pop    rax
   1400368e9:	pop    rbp
   1400368ea:	add    eax,DWORD PTR [rax]
   1400368ec:	rex.W pop rbx
   1400368ee:	add    eax,DWORD PTR [rax]
   1400368f0:	pop    rax
   1400368f1:	pop    rcx
   1400368f2:	add    eax,DWORD PTR [rax]
	...
   140036918:	add    DWORD PTR [rax],eax
	...
   140036922:	add    BYTE PTR [rax],al
   140036924:	rcl    bh,0x3
   140036927:	add    al,al
   140036929:	push   0x69180003
   14003692e:	add    eax,DWORD PTR [rax]
	...
   140036948:	add    DWORD PTR [rax],eax
   14003694a:	add    BYTE PTR [rax],al
   14003694c:	call   0x140036cba
   140036951:	add    BYTE PTR [rax],al
   140036953:	add    BYTE PTR [rax],al
   140036955:	add    BYTE PTR [rax],al
   140036957:	add    al,ah
   140036959:	xlat   BYTE PTR ds:[rbx]
   14003695a:	add    eax,DWORD PTR [rax]
   14003695c:	add    DWORD PTR [rax],eax
   14003695e:	add    BYTE PTR [rax],al
   140036960:	add    BYTE PTR [rax],al
   140036962:	add    BYTE PTR [rax],al
   140036964:	(bad)  
   140036965:	(bad)  
   140036966:	(bad)  
   140036967:	inc    DWORD PTR [rax]
   140036969:	add    BYTE PTR [rax],al
   14003696b:	add    BYTE PTR [rax+0x0],al
   14003696e:	add    BYTE PTR [rax],al
   140036970:	sub    BYTE PTR [rcx+0x3],0x0
	...
   140036988:	add    al,BYTE PTR [rax]
   14003698a:	add    BYTE PTR [rax],al
   14003698c:	clc    
   14003698d:	imul   eax,DWORD PTR [rbx],0x0
   140036993:	add    BYTE PTR [rax],al
   140036995:	add    BYTE PTR [rax],al
   140036997:	add    BYTE PTR [rcx],al
	...
   1400369a1:	add    BYTE PTR [rax],al
   1400369a3:	add    al,ah
   1400369a5:	xlat   BYTE PTR ds:[rbx]
   1400369a6:	add    eax,DWORD PTR [rax]
   1400369a8:	sub    BYTE PTR [rcx+0x3],0x0
   1400369ac:	cwde   
   1400369ad:	imul   eax,DWORD PTR [rbx],0x0
	...
   1400369bf:	add    BYTE PTR [rax],dl
   1400369c1:	fadd   DWORD PTR [rbx]
	...
   1400369cb:	add    bh,bh
   1400369cd:	(bad)  
   1400369ce:	(bad)  
   1400369cf:	inc    DWORD PTR [rax]
   1400369d1:	add    BYTE PTR [rax],al
   1400369d3:	add    BYTE PTR [rax+0x0],al
   1400369d6:	add    BYTE PTR [rax],al
   1400369d8:	rex imul eax,DWORD PTR [rbx],0x0
	...
   1400369e7:	add    al,al
   1400369e9:	imul   eax,DWORD PTR [rbx],0x0
	...
   1400369f7:	add    BYTE PTR [rax+0x69],bl
   1400369fa:	add    eax,DWORD PTR [rax]
   1400369fc:	shr    BYTE PTR [rcx+0x3],0x0
	...
   140036a30:	add    DWORD PTR [rsi],eax
   140036a32:	add    al,BYTE PTR [rax]
   140036a34:	(bad)  
   140036a35:	xor    al,BYTE PTR [rdx]
   140036a37:	xor    BYTE PTR [rcx],al
   140036a39:	(bad)  
   140036a3a:	add    al,BYTE PTR [rax]
   140036a3c:	(bad)  
   140036a3d:	push   rdx
   140036a3e:	add    dh,BYTE PTR [rax]
   140036a40:	add    DWORD PTR [rdx],ecx
   140036a42:	add    al,0x0
   140036a44:	or     dh,BYTE PTR [rax+rcx*1]
   140036a47:	add    BYTE PTR [rdx],cl
   140036a49:	push   rdx
   140036a4a:	(bad)  
   140036a4b:	jo     0x140036a4e
   140036a4d:	or     al,BYTE PTR [rax+rax*1]
   140036a50:	or     dh,BYTE PTR [rsi+rax*1]
   140036a53:	add    BYTE PTR [rdx],cl
   140036a55:	xor    al,BYTE PTR [rsi]
   140036a57:	jo     0x140036a72
   140036a59:	and    al,0x3
   140036a5b:	add    BYTE PTR [rcx],cl
   140036a5d:	add    DWORD PTR [rax+rax*1],ebp
   140036a60:	add    dh,BYTE PTR [rax]
   140036a62:	add    BYTE PTR [rax],al
   140036a64:	loopne 0x140036a37
   140036a66:	add    al,BYTE PTR [rax]
   140036a68:	adc    BYTE PTR [rcx+0x3],cl
   140036a6b:	add    BYTE PTR [rdx+0x1],dl
   140036a6e:	add    BYTE PTR [rax],al
   140036a70:	(bad)  
   140036a71:	(bad)  
   140036a72:	(bad)  
   140036a73:	inc    DWORD PTR [rax+0x2d2]
   140036a79:	add    BYTE PTR [rax],al
   140036a7b:	add    BYTE PTR [rsi+0x700002d2],cl
   140036a81:	adc    al,0x0
   140036a83:	add    bh,bh
   140036a85:	(bad)  
   140036a86:	(bad)  
   140036a87:	call   QWORD PTR [rbx+0x15]
   140036a8a:	add    BYTE PTR [rax],al
   140036a8c:	add    BYTE PTR [rax],al
   140036a8e:	add    BYTE PTR [rax],al
   140036a90:	pop    rdi
   140036a91:	adc    eax,0x10000
   140036a96:	add    BYTE PTR [rax],al
   140036a98:	jae    0x140036aaf
   140036a9a:	add    BYTE PTR [rax],al
   140036a9c:	add    BYTE PTR [rax],al
   140036a9e:	add    BYTE PTR [rax],al
   140036aa0:	jg     0x140036ab7
   140036aa2:	add    BYTE PTR [rax],al
   140036aa4:	(bad)  
   140036aa5:	(bad)  
   140036aa6:	(bad)  
   140036aa7:	inc    DWORD PTR [rcx]
   140036aa9:	add    al,0x1
   140036aab:	add    BYTE PTR [rdx+rax*2],al
   140036aae:	add    BYTE PTR [rax],al
   140036ab0:	adc    DWORD PTR [rdi],ecx
   140036ab2:	add    al,BYTE PTR [rax]
   140036ab4:	(bad)  
   140036ab5:	push   rdx
   140036ab6:	add    dh,BYTE PTR [rax]
   140036ab8:	fcmovbe st,st(1)
   140036aba:	add    al,BYTE PTR [rax]
   140036abc:	loopne 0x140036b06
   140036abe:	add    eax,DWORD PTR [rax]
   140036ac0:	(bad)  
   140036ac1:	(bad)  
   140036ac2:	(bad)  
   140036ac3:	jmp    QWORD PTR [rax-0x4ffffd2e]
   140036ac9:	adc    eax,0xffff0000
   140036ace:	(bad)  
   140036acf:	call   rdx
   140036ad1:	adc    eax,0x0
   140036ad6:	add    BYTE PTR [rax],al
   140036ad8:	out    0x15,al
   140036ada:	add    BYTE PTR [rax],al
   140036adc:	(bad)  
   140036add:	(bad)  
   140036ade:	(bad)  
   140036adf:	call   FWORD PTR [rcx]
   140036ae1:	(bad)  
   140036ae2:	add    eax,0xd3340d00
   140036ae7:	add    BYTE PTR [rip+0x600d001],cl        # 0x146043aee
   140036aed:	jo     0x140036aef
   140036aef:	add    ah,ah
   140036af1:	int3   
   140036af2:	add    al,BYTE PTR [rax]
   140036af4:	jo     0x140036afc
   140036af6:	add    BYTE PTR [rax],al
   140036af8:	add    DWORD PTR [rax+rcx*1],edx
   140036afb:	add    BYTE PTR [rsp+riz*2],dl
   140036afe:	or     BYTE PTR [rax],al
   140036b00:	adc    al,0x54
   140036b02:	(bad)  
   140036b03:	add    BYTE PTR [rsp+rsi*1],dl
   140036b06:	(bad)  
   140036b07:	add    BYTE PTR [rdx+rsi*1],dl
   140036b0a:	adc    BYTE PTR [rax+0x1],dh
   140036b0d:	clts   
   140036b0f:	add    BYTE PTR [rdi],cl
   140036b11:	fs (bad) 
   140036b13:	add    BYTE PTR [rdi],cl
   140036b15:	xor    al,0x6
   140036b17:	add    BYTE PTR [rdi],cl
   140036b19:	xor    cl,BYTE PTR [rbx]
   140036b1b:	jo     0x140036b3e
   140036b1d:	add    eax,0x74050002
   140036b22:	(bad)  
   140036b23:	add    BYTE PTR [rax+0x19],dh
   140036b26:	add    BYTE PTR [rax],al
   140036b28:	xchg   ecx,eax
   140036b29:	sbb    DWORD PTR [rax],eax
   140036b2b:	add    BYTE PTR [rax],dh
   140036b2d:	push   0x3
   140036b2f:	add    BYTE PTR [rcx],ah
   140036b31:	add    BYTE PTR [rdx],al
   140036b33:	add    BYTE PTR [rax],al
   140036b35:	je     0x140036b3d
   140036b37:	add    BYTE PTR [rax+0x19],dh
   140036b3a:	add    BYTE PTR [rax],al
   140036b3c:	xchg   ecx,eax
   140036b3d:	sbb    DWORD PTR [rax],eax
   140036b3f:	add    BYTE PTR [rax],dh
   140036b41:	push   0x3
   140036b43:	add    BYTE PTR [rcx],bl
   140036b45:	and    DWORD PTR [rip+0x14621800],eax        # 0x15465834b
   140036b4b:	loopne 0x140036b5f
   140036b4d:	jo     0x140036b60
   140036b4f:	(bad)  
   140036b50:	adc    BYTE PTR [rax],dh
   140036b52:	add    BYTE PTR [rax],al
   140036b54:	fcmovbe st,st(1)
   140036b56:	add    al,BYTE PTR [rax]
   140036b58:	mov    al,0x48
   140036b5a:	add    eax,DWORD PTR [rax]
   140036b5c:	(bad)  
   140036b5d:	(bad)  
   140036b5e:	(bad)  
   140036b5f:	inc    DWORD PTR [rax]
   140036b61:	add    BYTE PTR [rax],al
   140036b63:	add    bh,bh
   140036b65:	(bad)  
   140036b66:	(bad)  
   140036b67:	inc    DWORD PTR [rax]
   140036b69:	add    BYTE PTR [rax],al
   140036b6b:	add    BYTE PTR [rcx],al
   140036b6d:	add    BYTE PTR [rax],al
   140036b6f:	add    BYTE PTR [rax],al
   140036b71:	add    BYTE PTR [rax],al
   140036b73:	add    BYTE PTR [rcx],al
	...
   140036b81:	add    BYTE PTR [rax],al
   140036b83:	add    BYTE PTR [rbx],al
   140036b85:	add    BYTE PTR [rax],al
   140036b87:	add    BYTE PTR [rcx],al
   140036b89:	add    BYTE PTR [rax],al
   140036b8b:	add    BYTE PTR [rbx+rbp*2+0x20003],ah
   140036b92:	add    BYTE PTR [rax],al
   140036b94:	add    al,BYTE PTR [rax]
   140036b96:	add    BYTE PTR [rax],al
   140036b98:	add    eax,DWORD PTR [rax]
   140036b9a:	add    BYTE PTR [rax],al
   140036b9c:	add    DWORD PTR [rax],eax
   140036b9e:	add    BYTE PTR [rax],al
   140036ba0:	mov    eax,0x4000036b
	...
   140036bad:	add    BYTE PTR [rax],al
   140036baf:	add    BYTE PTR [rax+0x380002d2],dh
   140036bb5:	add    BYTE PTR [rax],al
   140036bb7:	add    BYTE PTR [rax+0x0],al
	...
   140036bc2:	add    BYTE PTR [rax],al
   140036bc4:	cmc    
   140036bc5:	rol    BYTE PTR [rdx],cl
   140036bc7:	add    BYTE PTR [rax+0x0],cl
   140036bca:	add    BYTE PTR [rax],al
   140036bcc:	loopne 0x140036be7
   140036bce:	add    BYTE PTR [rax],al
   140036bd0:	(bad)  
   140036bd1:	(bad)  
   140036bd2:	(bad)  
   140036bd3:	dec    DWORD PTR [rsi+0x1a]
   140036bd6:	add    BYTE PTR [rax],al
   140036bd8:	add    BYTE PTR [rax],al
   140036bda:	add    BYTE PTR [rax],al
   140036bdc:	jne    0x140036bf8
   140036bde:	add    BYTE PTR [rax],al
   140036be0:	(bad)  
   140036be1:	(bad)  
   140036be2:	(bad)  
   140036be3:	push   QWORD PTR [rax+0x2d2]
   140036be9:	add    BYTE PTR [rax],al
   140036beb:	add    BYTE PTR [rbp+0x10002d2],bh
   140036bf1:	add    BYTE PTR [rax],al
   140036bf3:	add    ch,al
   140036bf5:	rol    BYTE PTR [rdx],cl
   140036bf7:	add    BYTE PTR [rdx],al
   140036bf9:	add    BYTE PTR [rax],al
   140036bfb:	add    bh,ah
   140036bfd:	rol    BYTE PTR [rdx],cl
   140036bff:	add    BYTE PTR [rax],al
   140036c01:	add    BYTE PTR [rax],al
   140036c03:	add    BYTE PTR [rbx],al
   140036c05:	rol    DWORD PTR [rdx],cl
   140036c07:	add    BYTE PTR [rbx],al
   140036c09:	add    BYTE PTR [rax],al
   140036c0b:	add    BYTE PTR [rcx],bl
   140036c0d:	or     al,BYTE PTR [rdx]
   140036c0f:	add    BYTE PTR [rdx],cl
   140036c11:	xor    al,BYTE PTR [rsi]
   140036c13:	push   rax
   140036c14:	fcmovbe st,st(1)
   140036c16:	add    al,BYTE PTR [rax]
   140036c18:	mov    al,0x48
   140036c1a:	add    eax,DWORD PTR [rax]
   140036c1c:	sbb    DWORD PTR [rbx],ecx
   140036c1e:	add    eax,DWORD PTR [rax]
   140036c20:	or     eax,DWORD PTR [rdx+0x7]
   140036c23:	push   rax
   140036c24:	(bad)  
   140036c25:	xor    BYTE PTR [rax],al
   140036c27:	add    dl,bl
   140036c29:	rol    DWORD PTR [rdx],1
   140036c2b:	add    BYTE PTR [rax+0x19000348],dh
   140036c31:	and    DWORD PTR [rdi],eax
   140036c33:	add    BYTE PTR [rdi],cl
   140036c35:	add    DWORD PTR [rax],esi
   140036c37:	add    BYTE PTR [rax],cl
   140036c39:	loopne 0x140036c41
   140036c3b:	rol    BYTE PTR [rax+rsi*2],1
   140036c3e:	add    esp,DWORD PTR [rax+0x2]
   140036c41:	push   rax
   140036c42:	add    BYTE PTR [rax],al
   140036c44:	in     al,0xcc
   140036c46:	add    al,BYTE PTR [rax]
   140036c48:	(bad)  
   140036c49:	add    DWORD PTR [rax],eax
   140036c4b:	add    BYTE PTR [rcx],ah
   140036c4d:	or     BYTE PTR [rdx],al
   140036c4f:	add    BYTE PTR [rax],cl
   140036c51:	(bad)  
   140036c52:	(bad)  
   140036c53:	add    al,dh
   140036c55:	sbb    al,BYTE PTR [rax]
   140036c57:	add    ah,ah
   140036c59:	sbb    eax,DWORD PTR [rax]
   140036c5b:	add    BYTE PTR [rax],dh
   140036c5d:	ins    BYTE PTR es:[rdi],dx
   140036c5e:	add    eax,DWORD PTR [rax]
   140036c60:	and    DWORD PTR [rax],ecx
   140036c62:	add    al,BYTE PTR [rax]
   140036c64:	or     BYTE PTR [rax+rdi*1],dh
   140036c67:	add    ah,ah
   140036c69:	sbb    eax,DWORD PTR [rax]
   140036c6b:	add    BYTE PTR [rdi],bl
   140036c6d:	sbb    al,0x0
   140036c6f:	add    BYTE PTR [rsp+rbp*2+0x3],cl
   140036c73:	add    BYTE PTR [rcx],ah
   140036c75:	or     BYTE PTR [rdx],al
   140036c77:	add    BYTE PTR [rax],cl
   140036c79:	hlt    
   140036c7a:	add    BYTE PTR cs:[rdi],bl
   140036c7d:	sbb    al,0x0
   140036c7f:	add    BYTE PTR [rdx],dh
   140036c81:	sbb    eax,0x6c600000
   140036c86:	add    eax,DWORD PTR [rax]
   140036c88:	and    DWORD PTR [rax],eax
   140036c8a:	add    BYTE PTR [rax],al
   140036c8c:	(bad)  
   140036c8d:	sbb    al,0x0
   140036c8f:	add    BYTE PTR [rdx],dh
   140036c91:	sbb    eax,0x6c600000
   140036c96:	add    eax,DWORD PTR [rax]
   140036c98:	and    DWORD PTR [rax],eax
   140036c9a:	add    BYTE PTR [rax],al
   140036c9c:	in     al,0x1b
   140036c9e:	add    BYTE PTR [rax],al
   140036ca0:	(bad)  
   140036ca1:	sbb    al,0x0
   140036ca3:	add    BYTE PTR [rsp+rbp*2+0x3],cl
   140036ca7:	add    BYTE PTR [rcx],ah
   140036ca9:	add    BYTE PTR [rax],al
   140036cab:	add    al,dh
   140036cad:	sbb    al,BYTE PTR [rax]
   140036caf:	add    ah,ah
   140036cb1:	sbb    eax,DWORD PTR [rax]
   140036cb3:	add    BYTE PTR [rax],dh
   140036cb5:	ins    BYTE PTR es:[rdi],dx
   140036cb6:	add    eax,DWORD PTR [rax]
   140036cb8:	add    DWORD PTR [rsp+rcx*1],ebx
   140036cbb:	add    BYTE PTR [rsp+riz*2],bl
   140036cbe:	or     eax,0xc541c00
   140036cc3:	add    BYTE PTR [rsp+rsi*1],bl
   140036cc6:	or     eax,DWORD PTR [rax]
   140036cc8:	sbb    al,0x32
   140036cca:	sbb    al,dh
   140036ccc:	(bad)  
   140036ccd:	loopne 0x140036ce3
   140036ccf:	rcl    BYTE PTR [rdx],1
   140036cd1:	rcl    BYTE PTR [rax],0x70
   140036cd4:	sbb    DWORD PTR [rax+0xd],eax
   140036cd7:	add    BYTE PTR [rdi],ch
   140036cd9:	je     0x140036c86
   140036cdb:	add    BYTE PTR [rbx],ch
   140036cdd:	fs stos BYTE PTR es:[rdi],al
   140036cdf:	add    BYTE PTR [rdi],ah
   140036ce1:	xor    al,0xa8
   140036ce3:	add    BYTE PTR [rdx],bl
   140036ce5:	add    DWORD PTR [rdx+0xaf00c00],esp
   140036ceb:	loopne 0x140036cf5
   140036ced:	rol    BYTE PTR [rsi],1
   140036cef:	rol    BYTE PTR [rax+rdx*2],0x0
   140036cf3:	add    al,ah
   140036cf5:	rol    DWORD PTR [rdx],1
   140036cf7:	add    BYTE PTR [rax+0x49],al
   140036cfa:	add    eax,DWORD PTR [rax]
   140036cfc:	add    al,BYTE PTR [rip+0xffffffffffff0000]        # 0x140026d02
   140036d02:	(bad)  
   140036d03:	inc    DWORD PTR [rax-0x2d]
   140036d06:	add    al,BYTE PTR [rax]
   140036d08:	push   rax
   140036d09:	and    al,0x0
   140036d0b:	add    bh,bh
   140036d0d:	(bad)  
   140036d0e:	(bad)  
   140036d0f:	(bad)  
   140036d10:	sti    
   140036d11:	and    al,0x0
   140036d13:	add    BYTE PTR [rax],al
   140036d15:	add    BYTE PTR [rax],al
   140036d17:	add    BYTE PTR ds:0xffffffffffff0000,bh
   140036d1e:	(bad)  
   140036d1f:	call   FWORD PTR [rcx]
   140036d21:	(bad)  
   140036d22:	(bad)  
   140036d23:	add    BYTE PTR [rdi],cl
   140036d25:	fs (bad) 
   140036d27:	add    BYTE PTR [rdi],cl
   140036d29:	xor    al,0xc
   140036d2b:	add    BYTE PTR [rdi],cl
   140036d2d:	xchg   edx,eax
   140036d2e:	or     esi,DWORD PTR [rax-0x1c]
   140036d31:	int3   
   140036d32:	add    al,BYTE PTR [rax]
   140036d34:	rex.W add BYTE PTR [rax],al
   140036d37:	add    BYTE PTR [rcx],al
   140036d39:	push   rsi
   140036d3a:	(bad)  
   140036d3b:	add    BYTE PTR [rsi-0x1c],dl
   140036d3e:	add    BYTE PTR [rax],al
   140036d40:	push   rdx
   140036d41:	(bad)  
   140036d42:	add    DWORD PTR [rax],eax
   140036d44:	rex.WB (bad) 
   140036d46:	or     DWORD PTR [rax],eax
   140036d48:	rex.R
   140036d49:	or     BYTE PTR fs:[rax],al
   140036d4c:	(bad)  
   140036d4d:	xor    al,0x7
   140036d4f:	add    BYTE PTR [rip+0x7f00912],cl        # 0x147f37667
   140036d55:	jo     0x140036d5d
   140036d57:	push   rax
   140036d58:	add    DWORD PTR [rsi],eax
   140036d5a:	add    al,BYTE PTR [rax]
   140036d5c:	(bad)  
   140036d5d:	xor    al,BYTE PTR [rdx]
   140036d5f:	(bad)  
   140036d60:	and    DWORD PTR [rdx],ecx
   140036d62:	add    al,0x0
   140036d64:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140036d68:	add    eax,0xe0000634
   140036d6d:	rex.WB add BYTE PTR [r8],al
   140036d70:	adc    eax,0x5800004c
   140036d75:	ins    DWORD PTR es:[rdi],dx
   140036d76:	add    eax,DWORD PTR [rax]
   140036d78:	sbb    DWORD PTR [rbx+rcx*1],ebp
   140036d7b:	add    BYTE PTR [rsi],bl
   140036d7d:	sbb    eax,DWORD PTR fs:[rax]
   140036d80:	(bad)  
   140036d81:	xor    al,0x1a
   140036d83:	add    BYTE PTR [rsi],bl
   140036d85:	add    DWORD PTR [rdx],edx
   140036d87:	add    BYTE PTR [rdx],dl
   140036d89:	lock adc al,ah
   140036d8c:	(bad)  
   140036d8d:	ror    BYTE PTR [rax+rsi*2],1
   140036d90:	or     edx,DWORD PTR [rax+0x0]
   140036d93:	add    ah,ah
   140036d95:	int3   
   140036d96:	add    al,BYTE PTR [rax]
   140036d98:	add    BYTE PTR [rax],0x0
   140036d9b:	add    BYTE PTR [rcx],ah
   140036d9d:	or     BYTE PTR [rdx],al
   140036d9f:	add    BYTE PTR [rax],cl
   140036da1:	(bad)  
   140036da2:	sbb    DWORD PTR [rax],eax
   140036da4:	nop
   140036da5:	rex.WR add BYTE PTR [rax],r8b
   140036da8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036da9:	push   rcx
   140036daa:	add    BYTE PTR [rax],al
   140036dac:	js     0x140036e1b
   140036dae:	add    eax,DWORD PTR [rax]
   140036db0:	and    DWORD PTR [rax],eax
   140036db2:	add    BYTE PTR [rax],al
   140036db4:	nop
   140036db5:	rex.WR add BYTE PTR [rax],r8b
   140036db8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036db9:	push   rcx
   140036dba:	add    BYTE PTR [rax],al
   140036dbc:	js     0x140036e2b
   140036dbe:	add    eax,DWORD PTR [rax]
   140036dc0:	add    DWORD PTR [rdx],ecx
   140036dc2:	add    al,0x0
   140036dc4:	or     dh,BYTE PTR [rcx+rcx*1]
   140036dc7:	add    BYTE PTR [rdx],cl
   140036dc9:	push   rdx
   140036dca:	(bad)  
   140036dcb:	jo     0x140036dce
   140036dcd:	adc    eax,0x74150008
   140036dd2:	or     al,BYTE PTR [rax]
   140036dd4:	adc    eax,0x15000964
   140036dd9:	xor    al,0x8
   140036ddb:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e37f33
   140036de1:	sbb    al,0xc
   140036de3:	add    BYTE PTR [rsp+riz*2],bl
   140036de6:	or     al,0x0
   140036de8:	sbb    al,0x54
   140036dea:	or     eax,DWORD PTR [rax]
   140036dec:	sbb    al,0x34
   140036dee:	or     al,BYTE PTR [rax]
   140036df0:	sbb    al,0x32
   140036df2:	sbb    al,dh
   140036df4:	(bad)  
   140036df5:	loopne 0x140036e0b
   140036df7:	rcl    BYTE PTR [rdx],1
   140036df9:	rcl    BYTE PTR [rax],0x70
   140036dfc:	add    DWORD PTR [rdi],ecx
   140036dfe:	(bad)  
   140036dff:	add    BYTE PTR [rdi],cl
   140036e01:	je     0x140036e06
   140036e03:	add    BYTE PTR [rdx],cl
   140036e05:	add    al,BYTE PTR fs:[rax]
   140036e08:	add    eax,0x1000134
   140036e0d:	add    eax,0xf0050003
   140036e12:	add    esi,DWORD PTR [rax+0x2]
   140036e15:	(bad)  
   140036e16:	add    BYTE PTR [rax],al
   140036e18:	and    DWORD PTR [rsi],edx
   140036e1a:	(bad)  
   140036e1b:	add    BYTE PTR [rsi],dl
   140036e1d:	in     al,0x7
   140036e1f:	add    BYTE PTR [rdx],cl
   140036e21:	push   rsp
   140036e22:	(bad)  
   140036e23:	add    BYTE PTR [rip+0x50000434],al        # 0x19003725d
   140036e29:	ins    DWORD PTR es:[rdi],dx
   140036e2a:	add    BYTE PTR [rax],al
   140036e2c:	jnp    0x140036e9b
   140036e2e:	add    BYTE PTR [rax],al
   140036e30:	or     al,0x6e
   140036e32:	add    eax,DWORD PTR [rax]
   140036e34:	and    DWORD PTR [rax],eax
   140036e36:	add    BYTE PTR [rax],al
   140036e38:	push   rax
   140036e39:	ins    DWORD PTR es:[rdi],dx
   140036e3a:	add    BYTE PTR [rax],al
   140036e3c:	jnp    0x140036eab
   140036e3e:	add    BYTE PTR [rax],al
   140036e40:	or     al,0x6e
   140036e42:	add    eax,DWORD PTR [rax]
   140036e44:	add    DWORD PTR [rcx],ecx
   140036e46:	add    DWORD PTR [rax],eax
   140036e48:	or     DWORD PTR [rdx+0x0],esp
   140036e4b:	add    BYTE PTR [rcx],al
   140036e4d:	or     al,BYTE PTR [rax+rax*1]
   140036e50:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140036e54:	add    eax,0x1000134
   140036e59:	or     al,0x0
   140036e5c:	rex hlt 
   140036e5e:	or     al,BYTE PTR [rax]
   140036e60:	(bad)  
   140036e61:	push   rsp
   140036e62:	or     al,0x0
   140036e64:	(bad)  
   140036e65:	xor    al,0xb
   140036e67:	add    BYTE PTR [rsi],dl
   140036e69:	xor    dl,BYTE PTR [rdx]
   140036e6b:	loopne 0x140036e7d
   140036e6d:	ror    BYTE PTR [rsi],1
   140036e6f:	ror    BYTE PTR [rax+rsi*2],0xb
   140036e73:	(bad)  
   140036e74:	add    DWORD PTR [rdx],edx
   140036e76:	or     DWORD PTR [rax],eax
   140036e78:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   140036e7c:	adc    dh,BYTE PTR [rax+rcx*1]
   140036e7f:	add    BYTE PTR [rdx],dl
   140036e81:	lock adc al,ah
   140036e84:	(bad)  
   140036e85:	ror    BYTE PTR [rax+rsi*2],0xb
   140036e89:	(bad)  
   140036e8a:	add    BYTE PTR [rax],al
   140036e8c:	sbb    DWORD PTR [rcx],edi
   140036e8e:	or     eax,0x1d742b00
   140036e93:	add    BYTE PTR [rdi],ah
   140036e95:	fs sbb al,0x0
   140036e98:	and    esi,DWORD PTR [rbx+rbx*1]
   140036e9b:	add    BYTE PTR [rdi],dl
   140036e9d:	add    DWORD PTR [rax+rax*1],edx
   140036ea0:	or     al,0xf0
   140036ea2:	or     ah,al
   140036ea4:	or     al,dl
   140036ea6:	(bad)  
   140036ea7:	rol    BYTE PTR [rax+rdx*2],0x0
   140036eab:	add    al,ah
   140036ead:	rol    DWORD PTR [rdx],1
   140036eaf:	add    BYTE PTR [rax+0x49],dh
   140036eb2:	add    eax,DWORD PTR [rax]
   140036eb4:	xchg   edx,eax
   140036eb5:	add    BYTE PTR [rax],al
   140036eb7:	add    bh,bh
   140036eb9:	(bad)  
   140036eba:	(bad)  
   140036ebb:	call   QWORD PTR [rax-0x2d]
   140036ebe:	add    al,BYTE PTR [rax]
   140036ec0:	(bad)  
   140036ec1:	(bad)  
   140036ec2:	(bad)  
   140036ec3:	call   FWORD PTR [rsi-0x2d]
   140036ec6:	add    al,BYTE PTR [rax]
   140036ec8:	(bad)  
   140036ec9:	(bad)  
   140036eca:	(bad)  
   140036ecb:	jmp    FWORD PTR [rbx+rdx*8+0x2]
   140036ecf:	add    al,ah
   140036ed1:	jbe    0x140036ed3
   140036ed3:	add    bh,bh
   140036ed5:	(bad)  
   140036ed6:	(bad)  
   140036ed7:	inc    DWORD PTR [rdi+0x77]
   140036edd:	add    BYTE PTR [rax],al
   140036edf:	add    bl,al
   140036ee1:	ja     0x140036ee3
   140036ee3:	add    bh,bh
   140036ee5:	(bad)  
   140036ee6:	(bad)  
   140036ee7:	push   QWORD PTR [rbx]
   140036ee9:	js     0x140036eeb
   140036eeb:	add    BYTE PTR [rcx],al
   140036eed:	add    BYTE PTR [rax],al
   140036eef:	add    BYTE PTR [rdi+0x78],ch
   140036ef2:	add    BYTE PTR [rax],al
   140036ef4:	(bad)  
   140036ef5:	(bad)  
   140036ef6:	(bad)  
   140036ef7:	jmp    rbx
   140036ef9:	js     0x140036efb
   140036efb:	add    BYTE PTR [rdx],al
   140036efd:	add    BYTE PTR [rax],al
   140036eff:	add    BYTE PTR [rdi],bl
   140036f01:	jns    0x140036f03
   140036f03:	add    bh,bh
   140036f05:	(bad)  
   140036f06:	(bad)  
   140036f07:	inc    DWORD PTR [rcx]
   140036f09:	mov    ebx,0xf4bb000c
   140036f0e:	or     BYTE PTR [rax],al
   140036f10:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140036f14:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140036f18:	sbb    BYTE PTR [rcx+rcx*1],dh
   140036f1b:	add    BYTE PTR [rax],bl
   140036f1d:	xor    dl,BYTE PTR [rax+riz*8]
   140036f20:	adc    dl,al
   140036f22:	adc    BYTE PTR [rax+0x19],dh
   140036f25:	and    DWORD PTR [rsi],eax
   140036f27:	add    BYTE PTR [rbx],dl
   140036f29:	add    DWORD PTR [rbx],edx
   140036f2b:	add    BYTE PTR [rdi],al
   140036f2d:	loopne 0x140036f34
   140036f2f:	rol    BYTE PTR [rbx],0x60
   140036f32:	add    dl,BYTE PTR [rax-0x1c]
   140036f35:	int3   
   140036f36:	add    al,BYTE PTR [rax]
   140036f38:	jo     0x140036f3a
   140036f3a:	add    BYTE PTR [rax],al
   140036f3c:	and    DWORD PTR [rdi],ebp
   140036f3e:	or     BYTE PTR [rax],al
   140036f40:	(bad)  
   140036f41:	hlt    
   140036f42:	adc    BYTE PTR [rax],al
   140036f44:	(bad)  
   140036f45:	(bad)  
   140036f46:	adc    DWORD PTR [rax],eax
   140036f48:	adc    BYTE PTR [rdx+rdx*1+0x0],dh
   140036f4c:	or     BYTE PTR [rdx+rbx*1],dh
   140036f4f:	add    al,al
   140036f51:	scas   al,BYTE PTR es:[rdi]
   140036f52:	add    BYTE PTR [rax],al
   140036f54:	(bad)  
   140036f55:	scas   eax,DWORD PTR es:[rdi]
   140036f56:	add    BYTE PTR [rax],al
   140036f58:	and    al,0x6f
   140036f5a:	add    eax,DWORD PTR [rax]
   140036f5c:	and    DWORD PTR [rax],eax
   140036f5e:	add    BYTE PTR [rax],al
   140036f60:	shr    BYTE PTR [rsi-0x50e10000],0x0
   140036f67:	add    BYTE PTR [rdi+rbp*2],ah
   140036f6a:	add    eax,DWORD PTR [rax]
   140036f6c:	and    DWORD PTR [rax],eax
   140036f6e:	or     BYTE PTR [rax],al
   140036f70:	add    ah,dh
   140036f72:	adc    BYTE PTR [rax],al
   140036f74:	add    ah,dl
   140036f76:	adc    DWORD PTR [rax],eax
   140036f78:	add    BYTE PTR [rdx+rdx*1+0x0],dh
   140036f7c:	add    BYTE PTR [rdx+rbx*1],dh
   140036f7f:	add    al,al
   140036f81:	scas   al,BYTE PTR es:[rdi]
   140036f82:	add    BYTE PTR [rax],al
   140036f84:	(bad)  
   140036f85:	scas   eax,DWORD PTR es:[rdi]
   140036f86:	add    BYTE PTR [rax],al
   140036f88:	and    al,0x6f
   140036f8a:	add    eax,DWORD PTR [rax]
   140036f8c:	add    DWORD PTR [rbx+rax*1],ecx
   140036f8f:	add    BYTE PTR [rdx+rax*2],cl
   140036f92:	or     al,ah
   140036f94:	(bad)  
   140036f95:	(bad)  
   140036f96:	add    BYTE PTR [rax],al
   140036f98:	and    DWORD PTR [rdx],edx
   140036f9a:	(bad)  
   140036f9b:	add    BYTE PTR [rdx],dl
   140036f9d:	je     0x140036faa
   140036f9f:	add    BYTE PTR [rdx],cl
   140036fa1:	push   rsp
   140036fa2:	or     al,BYTE PTR [rax]
   140036fa4:	add    eax,0xf0000934
   140036fa9:	mov    dh,0x0
   140036fab:	add    BYTE PTR [rsi],al
   140036fad:	mov    bh,0x0
   140036faf:	add    BYTE PTR [rdi+rbp*2+0x5210003],cl
   140036fb6:	add    al,BYTE PTR [rax]
   140036fb8:	add    eax,0x60004f4
   140036fbd:	mov    bh,0x0
   140036fbf:	add    BYTE PTR [rcx-0x49],al
   140036fc2:	add    BYTE PTR [rax],al
   140036fc4:	cwde   
   140036fc5:	outs   dx,DWORD PTR ds:[rsi]
   140036fc6:	add    eax,DWORD PTR [rax]
   140036fc8:	and    DWORD PTR [rax],eax
   140036fca:	add    BYTE PTR [rax],al
   140036fcc:	(bad)  
   140036fcd:	mov    bh,0x0
   140036fcf:	add    BYTE PTR [rcx-0x49],al
   140036fd2:	add    BYTE PTR [rax],al
   140036fd4:	cwde   
   140036fd5:	outs   dx,DWORD PTR ds:[rsi]
   140036fd6:	add    eax,DWORD PTR [rax]
   140036fd8:	and    DWORD PTR [rax],eax
   140036fda:	add    BYTE PTR [rax],al
   140036fdc:	lock mov dh,0x0
   140036fdf:	add    BYTE PTR [rsi],al
   140036fe1:	mov    bh,0x0
   140036fe3:	add    BYTE PTR [rdi+rbp*2+0xb010003],cl
   140036fea:	add    eax,0x7420b00
   140036fef:	lock add eax,0x25003d0
   140036ff5:	xor    BYTE PTR [rax],al
   140036ff7:	add    BYTE PTR [rcx],ah
   140036ff9:	clts   
   140036ffb:	add    BYTE PTR [rdi],cl
   140036ffd:	in     al,0x4
   140036fff:	add    BYTE PTR [rdx],cl
   140037001:	je     0x14003700f
   140037003:	add    BYTE PTR [rip+0xffffffff80000b64],al        # 0xc0037b6d
   140037009:	mov    eax,0xb8910000
   14003700e:	add    BYTE PTR [rax],al
   140037010:	call   0x161037384
   140037015:	add    eax,0xc4050002
   14003701a:	or     eax,0xb89100
   14003701f:	add    bh,al
   140037021:	mov    eax,0x6ff80000
   140037026:	add    eax,DWORD PTR [rax]
   140037028:	and    DWORD PTR [rax],eax
   14003702a:	add    BYTE PTR [rax],al
   14003702c:	xchg   ecx,eax
   14003702d:	mov    eax,0xb8c70000
   140037032:	add    BYTE PTR [rax],al
   140037034:	clc    
   140037035:	outs   dx,DWORD PTR ds:[rsi]
   140037036:	add    eax,DWORD PTR [rax]
   140037038:	and    DWORD PTR [rax],eax
   14003703a:	add    BYTE PTR [rax],al
   14003703c:	cmp    BYTE PTR [rax-0x476f0000],0x0
   140037043:	add    al,ch
   140037045:	outs   dx,DWORD PTR ds:[rsi]
   140037046:	add    eax,DWORD PTR [rax]
   140037048:	add    DWORD PTR [rdx],ecx
   14003704a:	add    al,BYTE PTR [rax]
   14003704c:	or     dh,BYTE PTR [rdx]
   14003704e:	(bad)  
   14003704f:	xor    BYTE PTR [rcx],al
   140037051:	dec    BYTE PTR [rip+0xce4fe00]        # 0x14ce86e57
   140037057:	add    ch,ch
   140037059:	push   rsp
   14003705a:	or     al,BYTE PTR [rax]
   14003705c:	xor    ah,0x4
   14003705f:	add    BYTE PTR [rbp-0x2c],dh
   140037062:	or     eax,DWORD PTR [rax]
   140037064:	or     al,BYTE PTR [rdx+0x6]
   140037067:	rol    BYTE PTR [rax+rsi*2],0x3
   14003706b:	(bad)  
   14003706c:	add    dh,BYTE PTR [rax]
   14003706e:	add    BYTE PTR [rax],al
   140037070:	sbb    DWORD PTR [rbx],esp
   140037072:	or     al,BYTE PTR [rax]
   140037074:	adc    al,0x34
   140037076:	sbb    BYTE PTR [rax],al
   140037078:	adc    al,0xd2
   14003707a:	adc    al,dh
   14003707c:	(bad)  
   14003707d:	loopne 0x14003708b
   14003707f:	ror    BYTE PTR [rdx],1
   140037081:	ror    BYTE PTR [rax],0x70
   140037084:	(bad)  
   140037085:	(bad)  
   140037086:	(bad)  
   140037087:	push   rax
   140037088:	in     al,0xcc
   14003708a:	add    al,BYTE PTR [rax]
   14003708c:	(bad)  
   14003708d:	add    BYTE PTR [rax],al
   14003708f:	add    BYTE PTR [rcx],al
   140037091:	adc    cl,BYTE PTR [rax]
   140037093:	add    BYTE PTR [rdx],dl
   140037095:	push   rsp
   140037096:	or     al,BYTE PTR [rax]
   140037098:	adc    dh,BYTE PTR [rcx+rcx*1]
   14003709b:	add    BYTE PTR [rdx],dl
   14003709d:	xor    cl,BYTE PTR [rsi]
   14003709f:	loopne 0x1400370ad
   1400370a1:	jo     0x1400370ae
   1400370a3:	(bad)  
   1400370a4:	and    DWORD PTR [rdi],ecx
   1400370a6:	(bad)  
   1400370a7:	add    BYTE PTR [rdi],cl
   1400370a9:	in     al,0x4
   1400370ab:	add    BYTE PTR [rdx],cl
   1400370ad:	je     0x1400370bb
   1400370af:	add    BYTE PTR [rip+0xffffffffb0000b64],al        # 0xf0037c19
   1400370b5:	mov    BYTE PTR [rax],0x0
   1400370b8:	rol    esi,0x0
   1400370bb:	add    al,ch
   1400370bd:	outs   dx,DWORD PTR ds:[rsi]
   1400370be:	add    eax,DWORD PTR [rax]
   1400370c0:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x1040870c8
   1400370c6:	or     eax,0xc6c100
   1400370cb:	add    bh,dh
   1400370cd:	mov    BYTE PTR [rax],0x0
   1400370d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400370d1:	jo     0x1400370d6
   1400370d3:	add    BYTE PTR [rcx],ah
   1400370d5:	add    BYTE PTR [rax],al
   1400370d7:	add    cl,al
   1400370d9:	mov    BYTE PTR [rax],0x0
   1400370dc:	test   esi,0x70a40000
   1400370e2:	add    eax,DWORD PTR [rax]
   1400370e4:	and    DWORD PTR [rax],eax
   1400370e6:	add    BYTE PTR [rax],al
   1400370e8:	mov    al,0xc6
   1400370ea:	add    BYTE PTR [rax],al
   1400370ec:	rol    esi,0x0
   1400370ef:	add    al,ch
   1400370f1:	outs   dx,DWORD PTR ds:[rsi]
   1400370f2:	add    eax,DWORD PTR [rax]
   1400370f4:	add    DWORD PTR [rdi],ecx
   1400370f6:	add    al,0x0
   1400370f8:	sysenter 
   1400370fa:	(bad)  
   1400370fb:	add    BYTE PTR [rdi],cl
   1400370fd:	xor    cl,BYTE PTR [rbx]
   1400370ff:	jo     0x14003711a
   140037101:	or     eax,DWORD PTR ss:[rax]
   140037104:	sub    BYTE PTR [rsp],dh
   140037107:	add    BYTE PTR [rax],bl
   140037109:	add    DWORD PTR [rdx],ebx
   14003710b:	add    BYTE PTR [rax+rsi*8],cl
   14003710e:	or     ah,al
   140037110:	or     al,dl
   140037112:	(bad)  
   140037113:	rol    BYTE PTR [rax+rsi*2],0x3
   140037117:	(bad)  
   140037118:	add    dl,BYTE PTR [rax+0x0]
   14003711b:	add    al,ah
   14003711d:	rol    DWORD PTR [rdx],1
   14003711f:	add    BYTE PTR [rax],al
   140037121:	rex.WX add rax,QWORD PTR [rax]
   140037124:	ret    0x0
   140037127:	add    bh,bh
   140037129:	(bad)  
   14003712a:	(bad)  
   14003712b:	inc    DWORD PTR [rax-0xfffd2d]
   140037131:	(bad)  
   140037132:	(bad)  
   140037133:	dec    DWORD PTR [rsi-0x4ffffd2d]
   140037139:	leave  
   14003713a:	add    BYTE PTR [rax],al
   14003713c:	(bad)  
   14003713d:	(bad)  
   14003713e:	(bad)  
   14003713f:	jmp    rbx
   140037141:	retf   0x0
   140037144:	add    BYTE PTR [rax],al
   140037146:	add    BYTE PTR [rax],al
   140037148:	(bad)  
   140037149:	retf   
   14003714a:	add    BYTE PTR [rax],al
   14003714c:	(bad)  
   14003714d:	(bad)  
   14003714e:	(bad)  
   14003714f:	call   QWORD PTR [rdx-0x32]
   140037152:	add    BYTE PTR [rax],al
   140037154:	add    DWORD PTR [rax],eax
   140037156:	add    BYTE PTR [rax],al
   140037158:	mov    cs,esi
   14003715a:	add    BYTE PTR [rax],al
   14003715c:	(bad)  
   14003715d:	(bad)  
   14003715e:	(bad)  
   14003715f:	call   FWORD PTR [rcx]
   140037161:	and    al,0x8
   140037163:	add    BYTE PTR [rdx],dl
   140037165:	add    DWORD PTR [rbx],edx
   140037167:	add    BYTE PTR [rbx],cl
   140037169:	lock or eax,esp
   14003716c:	(bad)  
   14003716d:	rol    BYTE PTR [rip+0x25003c0],1        # 0x142537533
   140037173:	xor    ah,ah
   140037175:	int3   
   140037176:	add    al,BYTE PTR [rax]
   140037178:	add    BYTE PTR [rax],0x0
   14003717b:	add    BYTE PTR [rcx],ah
   14003717d:	adc    BYTE PTR [rax+rax*1],al
   140037180:	adc    BYTE PTR [rdx+rdx*1+0x0],dh
   140037184:	or     BYTE PTR [rbp+rbx*1+0x0],ah
   140037188:	jo     0x140037161
   14003718a:	add    BYTE PTR [rax],al
   14003718c:	and    ebx,eax
   14003718e:	add    BYTE PTR [rax],al
   140037190:	(bad)  
   140037191:	jno    0x140037196
   140037193:	add    BYTE PTR [rcx],ah
   140037195:	add    BYTE PTR [rax],al
   140037197:	add    BYTE PTR [rax-0x29],dh
   14003719a:	add    BYTE PTR [rax],al
   14003719c:	and    ebx,eax
   14003719e:	add    BYTE PTR [rax],al
   1400371a0:	(bad)  
   1400371a1:	jno    0x1400371a6
   1400371a3:	add    BYTE PTR [rcx],ah
   1400371a5:	add    BYTE PTR [rax+rax*1],al
   1400371a8:	add    BYTE PTR [rdx+rdx*1+0x0],dh
   1400371ac:	add    BYTE PTR [rbp+rbx*1+0x0],ah
   1400371b0:	jo     0x140037189
   1400371b2:	add    BYTE PTR [rax],al
   1400371b4:	and    ebx,eax
   1400371b6:	add    BYTE PTR [rax],al
   1400371b8:	(bad)  
   1400371b9:	jno    0x1400371be
   1400371bb:	add    BYTE PTR [rcx],bl
   1400371bd:	(bad)  
   1400371be:	or     eax,DWORD PTR [rax]
   1400371c0:	sub    DWORD PTR [rax+rdi*1],esi
   1400371c3:	add    BYTE PTR [rax],bl
   1400371c5:	add    DWORD PTR [rax],esi
   1400371c7:	add    BYTE PTR [rax+rsi*8],cl
   1400371ca:	or     ah,al
   1400371cc:	or     al,dl
   1400371ce:	(bad)  
   1400371cf:	rol    BYTE PTR [rax+rsi*2],0x3
   1400371d3:	(bad)  
   1400371d4:	add    dl,BYTE PTR [rax+0x0]
   1400371d7:	add    al,ah
   1400371d9:	rol    DWORD PTR [rdx],1
   1400371db:	add    al,dl
   1400371dd:	add    rax,QWORD PTR [r8]
   1400371e0:	jb     0x1400371e3
   1400371e2:	add    BYTE PTR [rax],al
   1400371e4:	(bad)  
   1400371e5:	(bad)  
   1400371e6:	(bad)  
   1400371e7:	jmp    QWORD PTR [rax-0x6ffffd2d]
   1400371ed:	fld    DWORD PTR [rax]
   1400371ef:	add    bh,bh
   1400371f1:	(bad)  
   1400371f2:	(bad)  
   1400371f3:	call   FWORD PTR [rbx-0x26]
   1400371f6:	add    BYTE PTR [rax],al
   1400371f8:	add    BYTE PTR [rax],al
   1400371fa:	add    BYTE PTR [rax],al
   1400371fc:	lahf   
   1400371fd:	fiadd  DWORD PTR [rax]
   1400371ff:	add    bh,bh
   140037201:	(bad)  
   140037202:	(bad)  
   140037203:	call   FWORD PTR [rcx]
   140037205:	(bad)  
   140037206:	or     eax,DWORD PTR [rax]
   140037208:	sub    DWORD PTR [rsp+rbp*1],esi
   14003720b:	add    BYTE PTR [rax],bl
   14003720d:	add    DWORD PTR [rdx],esp
   14003720f:	add    BYTE PTR [rax+rsi*8],cl
   140037212:	or     ah,al
   140037214:	or     al,dl
   140037216:	(bad)  
   140037217:	rol    BYTE PTR [rax+rsi*2],0x3
   14003721b:	(bad)  
   14003721c:	add    dl,BYTE PTR [rax+0x0]
   14003721f:	add    al,ah
   140037221:	rol    DWORD PTR [rdx],1
   140037223:	add    BYTE PTR [rax+0xa000349],ah
   140037229:	add    DWORD PTR [rax],eax
   14003722b:	add    bh,bh
   14003722d:	(bad)  
   14003722e:	(bad)  
   14003722f:	push   QWORD PTR [rax+0x100002d3]
   140037235:	(bad)  
   140037236:	add    DWORD PTR [rax],eax
   140037238:	(bad)  
   140037239:	(bad)  
   14003723a:	(bad)  
   14003723b:	jmp    QWORD PTR [rcx+rcx*1+0x1]
   14003723f:	add    BYTE PTR [rax],al
   140037241:	add    BYTE PTR [rax],al
   140037243:	add    BYTE PTR [rdi-0xfffef7],bl
   140037249:	(bad)  
   14003724a:	(bad)  
   14003724b:	call   FWORD PTR [rcx]
   14003724d:	and    al,BYTE PTR [rdi]
   14003724f:	add    BYTE PTR [rax],dl
   140037251:	add    DWORD PTR [rdx],ebp
   140037253:	add    BYTE PTR [rcx],cl
   140037255:	lock (bad) 
   140037257:	rol    BYTE PTR [rip+0x27003c0],1        # 0x14273761d
   14003725d:	push   rax
   14003725e:	add    BYTE PTR [rax],al
   140037260:	in     al,0xcc
   140037262:	add    al,BYTE PTR [rax]
   140037264:	xor    BYTE PTR [rcx],al
   140037266:	add    BYTE PTR [rax],al
   140037268:	and    DWORD PTR [rax],ecx
   14003726a:	add    al,BYTE PTR [rax]
   14003726c:	or     ah,ah
   14003726e:	sub    BYTE PTR [rax],al
   140037270:	rex or eax,DWORD PTR [rcx]
   140037273:	add    BYTE PTR [rbp+0xc],al
   140037276:	add    DWORD PTR [rax],eax
   140037278:	rex.WR jb 0x14003727e
   14003727b:	add    BYTE PTR [rcx],ah
   14003727d:	or     BYTE PTR [rdx],al
   14003727f:	add    BYTE PTR [rax],cl
   140037281:	xor    al,0x32
   140037283:	add    BYTE PTR [rbp+0xc],al
   140037286:	add    DWORD PTR [rax],eax
   140037288:	addr32 or al,0x1
   14003728b:	add    BYTE PTR [rax+0x72],ch
   14003728e:	add    eax,DWORD PTR [rax]
   140037290:	and    DWORD PTR [rax],ecx
   140037292:	add    al,BYTE PTR [rax]
   140037294:	or     BYTE PTR [rcx+rbp*1+0x0],ah
   140037298:	addr32 or al,0x1
   14003729b:	add    BYTE PTR [rcx+0xd],dh
   14003729e:	add    DWORD PTR [rax],eax
   1400372a0:	jl     0x140037314
   1400372a2:	add    eax,DWORD PTR [rax]
   1400372a4:	and    DWORD PTR [rax],eax
   1400372a6:	add    BYTE PTR [rax],al
   1400372a8:	addr32 or al,0x1
   1400372ab:	add    BYTE PTR [rcx+0xd],dh
   1400372ae:	add    DWORD PTR [rax],eax
   1400372b0:	jl     0x140037324
   1400372b2:	add    eax,DWORD PTR [rax]
   1400372b4:	and    DWORD PTR [rax],eax
   1400372b6:	add    al,BYTE PTR [rax]
   1400372b8:	add    BYTE PTR [rcx+rbp*1+0x0],ah
   1400372bc:	addr32 or al,0x1
   1400372bf:	add    BYTE PTR [rcx+0xd],dh
   1400372c2:	add    DWORD PTR [rax],eax
   1400372c4:	jl     0x140037338
   1400372c6:	add    eax,DWORD PTR [rax]
   1400372c8:	and    DWORD PTR [rax],eax
   1400372ca:	add    BYTE PTR [rax],al
   1400372cc:	rex.RB or al,0x1
   1400372cf:	add    BYTE PTR [rdi+0xc],ah
   1400372d2:	add    DWORD PTR [rax],eax
   1400372d4:	push   0x21000372
   1400372d9:	add    BYTE PTR [rax],al
   1400372db:	add    BYTE PTR [rax+0xb],al
   1400372de:	add    DWORD PTR [rax],eax
   1400372e0:	rex.RB or al,0x1
   1400372e3:	add    BYTE PTR [rdx+rsi*2+0x3],cl
   1400372e7:	add    BYTE PTR [rcx],bl
   1400372e9:	rex or eax,0x9b742f00
   1400372ef:	add    BYTE PTR [rbx],ch
   1400372f1:	fs (bad) 
   1400372f3:	add    BYTE PTR [rdi],ah
   1400372f5:	xor    al,0x98
   1400372f7:	add    BYTE PTR [rdx],bl
   1400372f9:	add    DWORD PTR [rdx+0xaf00c00],edx
   1400372ff:	loopne 0x140037309
   140037301:	rol    BYTE PTR [rsi],1
   140037303:	rol    BYTE PTR [rax+rdx*2],0x0
   140037307:	add    al,ah
   140037309:	rol    DWORD PTR [rdx],1
   14003730b:	add    BYTE PTR [rax],dh
   14003730d:	rex.WX add rax,QWORD PTR [rax]
   140037310:	(bad)  
   140037311:	add    al,0x0
   140037313:	add    bh,bh
   140037315:	(bad)  
   140037316:	(bad)  
   140037317:	inc    eax
   140037319:	rol    DWORD PTR [rdx],cl
   14003731b:	add    BYTE PTR [rax],dh
   14003731d:	adc    DWORD PTR [rcx],eax
   14003731f:	add    bh,bh
   140037321:	(bad)  
   140037322:	(bad)  
   140037323:	(bad)  
   140037324:	fcom   DWORD PTR [rcx]
   140037326:	add    DWORD PTR [rax],eax
   140037328:	add    BYTE PTR [rax],al
   14003732a:	add    BYTE PTR [rax],al
   14003732c:	sbb    dl,BYTE PTR [rdx]
   14003732e:	add    DWORD PTR [rax],eax
   140037330:	(bad)  
   140037331:	(bad)  
   140037332:	(bad)  
   140037333:	call   FWORD PTR [rcx]
   140037335:	cmp    DWORD PTR [rip+0x1e642700],ecx        # 0x15e679a3b
   14003733b:	add    BYTE PTR [rbx],ah
   14003733d:	push   rsp
   14003733e:	sbb    eax,0x1c341f00
   140037343:	add    BYTE PTR [rbx],dl
   140037345:	add    DWORD PTR [rsi],edx
   140037347:	add    BYTE PTR [rax+rsi*8],cl
   14003734a:	or     ah,al
   14003734c:	or     al,dl
   14003734e:	(bad)  
   14003734f:	rol    BYTE PTR [rax+rsi*2],0x0
   140037353:	add    al,ah
   140037355:	rol    DWORD PTR [rdx],1
   140037357:	add    BYTE PTR [rax+0x4a],ah
   14003735a:	add    eax,DWORD PTR [rax]
   14003735c:	movabs ds:0xd0ffffffff000000,al
   140037365:	rol    DWORD PTR [rdx],cl
   140037367:	add    bh,bh
   140037369:	(bad)  
   14003736a:	(bad)  
   14003736b:	(bad)  
   14003736c:	(bad)  
   14003736e:	add    al,BYTE PTR [rax]
   140037370:	lock and DWORD PTR [rcx],eax
   140037373:	add    bh,bh
   140037375:	(bad)  
   140037376:	(bad)  
   140037377:	dec    edx
   140037379:	and    al,BYTE PTR [rcx]
   14003737b:	add    BYTE PTR [rax],al
   14003737d:	add    BYTE PTR [rax],al
   14003737f:	add    BYTE PTR [rip+0xffffffffff000123],cl        # 0x13f0374a8
   140037385:	(bad)  
   140037386:	(bad)  
   140037387:	(bad)  
   140037388:	jp     0x1400373ad
   14003738a:	add    DWORD PTR [rax],eax
   14003738c:	add    DWORD PTR [rax],eax
   14003738e:	add    BYTE PTR [rax],al
   140037390:	mov    ebp,0xff000123
   140037395:	(bad)  
   140037396:	(bad)  
   140037397:	inc    DWORD PTR [rcx]
   140037399:	adc    al,0x8
   14003739b:	add    BYTE PTR [rsp+rsi*2],dl
   14003739e:	add    al,0x0
   1400373a0:	pcmpgtb mm0,QWORD PTR [rbx]
   1400373a3:	add    BYTE PTR [rdx],cl
   1400373a5:	push   rsp
   1400373a6:	add    al,BYTE PTR [rax]
   1400373a8:	add    eax,0x19000134
   1400373ad:	cmp    DWORD PTR [rip+0x20742b00],ecx        # 0x160779eb3
   1400373b3:	add    BYTE PTR [rdi],ah
   1400373b5:	fs (bad) 
   1400373b7:	add    BYTE PTR [rbx],ah
   1400373b9:	xor    al,0x1e
   1400373bb:	add    BYTE PTR [rdi],dl
   1400373bd:	add    DWORD PTR [rax],ebx
   1400373bf:	add    BYTE PTR [rax+rsi*8],cl
   1400373c2:	or     ah,al
   1400373c4:	or     al,dl
   1400373c6:	(bad)  
   1400373c7:	rol    BYTE PTR [rax+rdx*2],0x0
   1400373cb:	add    al,ah
   1400373cd:	rol    DWORD PTR [rdx],1
   1400373cf:	add    BYTE PTR [rax-0x45fffcb6],dl
   1400373d5:	add    BYTE PTR [rax],al
   1400373d7:	add    bh,bh
   1400373d9:	(bad)  
   1400373da:	(bad)  
   1400373db:	push   rax
   1400373dd:	rol    DWORD PTR [rdx],cl
   1400373df:	add    bh,bh
   1400373e1:	(bad)  
   1400373e2:	(bad)  
   1400373e3:	(bad)  
   1400373e4:	(bad)  
   1400373e5:	rol    DWORD PTR [rdx],cl
   1400373e7:	add    BYTE PTR [rax+0x37],dh
   1400373ea:	add    DWORD PTR [rax],eax
   1400373ec:	(bad)  
   1400373ed:	(bad)  
   1400373ee:	(bad)  
   1400373ef:	push   QWORD PTR [rsi]
   1400373f1:	cmp    BYTE PTR [rcx],al
   1400373f3:	add    BYTE PTR [rax],al
   1400373f5:	add    BYTE PTR [rax],al
   1400373f7:	add    BYTE PTR [rcx+0x38],dh
   1400373fa:	add    DWORD PTR [rax],eax
   1400373fc:	(bad)  
   1400373fd:	(bad)  
   1400373fe:	(bad)  
   1400373ff:	call   rsi
   140037401:	cmp    BYTE PTR [rcx],al
   140037403:	add    BYTE PTR [rcx],al
   140037405:	add    BYTE PTR [rax],al
   140037407:	add    BYTE PTR [rcx],dl
   140037409:	cmp    DWORD PTR [rcx],eax
   14003740b:	add    bh,bh
   14003740d:	(bad)  
   14003740e:	(bad)  
   14003740f:	inc    DWORD PTR [rcx]
   140037411:	and    cl,BYTE PTR [rax+rax*1]
   140037414:	and    ah,BYTE PTR [rsp+rcx*1+0x0]
   140037418:	and    dl,BYTE PTR [rbx+rcx*1+0x0]
   14003741c:	and    dh,BYTE PTR [rdx+rcx*1]
   14003741f:	add    BYTE PTR [rdx],ah
   140037421:	xor    bl,BYTE PTR [rsi]
   140037423:	lock sbb al,0xe0
   140037426:	sbb    dl,al
   140037428:	sbb    al,al
   14003742a:	(bad)  
   14003742b:	jo     0x140037446
   14003742d:	(bad)  
   14003742e:	or     eax,DWORD PTR [rax]
   140037430:	sub    DWORD PTR [rdi+rsi*1],esi
   140037433:	add    BYTE PTR [rax],bl
   140037435:	add    DWORD PTR [rax+rax*1],ebp
   140037438:	or     al,0xf0
   14003743a:	or     ah,al
   14003743c:	or     al,dl
   14003743e:	(bad)  
   14003743f:	rol    BYTE PTR [rax+rsi*2],0x3
   140037443:	(bad)  
   140037444:	add    dl,BYTE PTR [rax+0x0]
   140037447:	add    al,ah
   140037449:	rol    DWORD PTR [rdx],1
   14003744b:	add    al,dh
   14003744d:	rex.WX add rax,QWORD PTR [rax]
   140037450:	push   rdx
   140037451:	add    DWORD PTR [rax],eax
   140037453:	add    bh,bh
   140037455:	(bad)  
   140037456:	(bad)  
   140037457:	call   QWORD PTR [rax]
   140037459:	(bad)  
   14003745a:	add    al,BYTE PTR [rax]
   14003745c:	movabs al,ds:0x52ffffffff000155
   140037465:	push   rdi
   140037466:	add    DWORD PTR [rax],eax
   140037468:	add    BYTE PTR [rax],al
   14003746a:	add    BYTE PTR [rax],al
   14003746c:	xchg   esp,eax
   14003746d:	push   rdi
   14003746e:	add    DWORD PTR [rax],eax
   140037470:	(bad)  
   140037471:	(bad)  
   140037472:	(bad)  
   140037473:	call   FWORD PTR [rcx]
   140037475:	or     eax,DWORD PTR ss:[rax]
   140037478:	sub    BYTE PTR [rsp],dh
   14003747b:	add    BYTE PTR [rax],bl
   14003747d:	add    DWORD PTR [rax+rax*1],ebx
   140037480:	or     al,0xf0
   140037482:	or     ah,al
   140037484:	or     al,dl
   140037486:	(bad)  
   140037487:	rol    BYTE PTR [rax+rsi*2],0x3
   14003748b:	(bad)  
   14003748c:	add    dl,BYTE PTR [rax+0x0]
   14003748f:	add    al,ah
   140037491:	rol    DWORD PTR [rdx],1
   140037493:	add    al,al
   140037495:	rex.WX add rax,QWORD PTR [rax]
   140037498:	rol    BYTE PTR [rax],cl
   14003749a:	add    BYTE PTR [rax],al
   14003749c:	(bad)  
   14003749d:	(bad)  
   14003749e:	(bad)  
   14003749f:	jmp    QWORD PTR [rax]
   1400374a1:	(bad)  
   1400374a2:	add    al,BYTE PTR [rax]
   1400374a4:	(bad)  
   1400374a5:	(bad)  
   1400374a6:	(bad)  
   1400374a7:	jmp    FWORD PTR [rsi]
   1400374a9:	(bad)  
   1400374aa:	add    al,BYTE PTR [rax]
   1400374ac:	loopne 0x14003750b
   1400374ae:	add    DWORD PTR [rax],eax
   1400374b0:	(bad)  
   1400374b1:	(bad)  
   1400374b2:	(bad)  
   1400374b3:	push   QWORD PTR [rdi+0x15e]
   1400374b9:	add    BYTE PTR [rax],al
   1400374bb:	add    cl,bh
   1400374bd:	pop    rsi
   1400374be:	add    DWORD PTR [rax],eax
   1400374c0:	(bad)  
   1400374c1:	(bad)  
   1400374c2:	(bad)  
   1400374c3:	jmp    QWORD PTR [rbx+0x5f]
   1400374c6:	add    DWORD PTR [rax],eax
   1400374c8:	add    DWORD PTR [rax],eax
   1400374ca:	add    BYTE PTR [rax],al
   1400374cc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400374cd:	pop    rdi
   1400374ce:	add    DWORD PTR [rax],eax
   1400374d0:	(bad)  
   1400374d1:	(bad)  
   1400374d2:	(bad)  
   1400374d3:	call   FWORD PTR [rcx]
   1400374d5:	sbb    DWORD PTR [rdx],eax
   1400374d7:	add    BYTE PTR [rdi],al
   1400374d9:	add    DWORD PTR [rbx+0x0],edx
   1400374dc:	in     al,0xcc
   1400374de:	add    al,BYTE PTR [rax]
   1400374e0:	add    BYTE PTR [rdx],0x0
   1400374e3:	add    BYTE PTR [rcx],bl
   1400374e5:	sub    ecx,DWORD PTR [rbx]
   1400374e7:	add    BYTE PTR [rcx],bl
   1400374e9:	push   rsp
   1400374ea:	pop    rdx
   1400374eb:	add    BYTE PTR [rcx],bl
   1400374ed:	xor    al,0x59
   1400374ef:	add    BYTE PTR [rcx],bl
   1400374f1:	add    DWORD PTR [rdx+0x0],edx
   1400374f4:	adc    dh,al
   1400374f6:	adc    al,ah
   1400374f8:	(bad)  
   1400374f9:	ror    BYTE PTR [rax+rsi*2],1
   1400374fc:	or     esp,DWORD PTR [rax+0x0]
   1400374ff:	add    ah,ah
   140037501:	int3   
   140037502:	add    al,BYTE PTR [rax]
   140037504:	add    BYTE PTR [rdx],0x0
   140037507:	add    BYTE PTR [rcx],bl
   140037509:	and    DWORD PTR [rdi],eax
   14003750b:	add    BYTE PTR [rdi],cl
   14003750d:	xor    al,0x33
   14003750f:	add    BYTE PTR [rdi],cl
   140037511:	add    DWORD PTR [rsi],ebp
   140037513:	add    BYTE PTR [rax],cl
   140037515:	jo     0x14003751e
   140037517:	(bad)  
   140037518:	(bad)  
   140037519:	push   rax
   14003751a:	add    BYTE PTR [rax],al
   14003751c:	in     al,0xcc
   14003751e:	add    al,BYTE PTR [rax]
   140037520:	(bad)  
   140037521:	add    DWORD PTR [rax],eax
   140037523:	add    BYTE PTR [rcx],bl
   140037525:	xor    DWORD PTR [rcx],ecx
   140037527:	add    BYTE PTR [rdi],bl
   140037529:	push   rsp
   14003752a:	cmp    eax,DWORD PTR [rax]
   14003752c:	sbb    esi,DWORD PTR [rcx+rdi*1]
   14003752f:	add    BYTE PTR [rsi],cl
   140037531:	add    DWORD PTR [rax+rax*1],esi
   140037534:	(bad)  
   140037535:	loopne 0x14003753c
   140037537:	jo     0x14003753d
   140037539:	(bad)  
   14003753a:	add    BYTE PTR [rax],al
   14003753c:	loopne 0x14003750f
   14003753e:	add    al,BYTE PTR [rax]
   140037540:	and    BYTE PTR [rbx+0x3],cl
   140037543:	add    BYTE PTR [rdx+0x70000001],dl
   140037549:	jbe    0x14003754c
   14003754b:	add    bh,bh
   14003754d:	(bad)  
   14003754e:	(bad)  
   14003754f:	call   rbx
   140037551:	jbe    0x140037554
   140037553:	add    BYTE PTR [rax],al
   140037555:	add    BYTE PTR [rax],al
   140037557:	add    BYTE PTR [rcx],dl
   140037559:	ja     0x14003755c
   14003755b:	add    bh,bh
   14003755d:	(bad)  
   14003755e:	(bad)  
   14003755f:	call   FWORD PTR [rcx]
   140037561:	and    al,0x7
   140037563:	add    BYTE PTR [rdx],dl
   140037565:	xor    DWORD PTR fs:[rax],eax
   140037568:	adc    dh,BYTE PTR [rax+rsi*1]
   14003756b:	add    BYTE PTR [rdx],dl
   14003756d:	add    DWORD PTR [rax+rax*1],ebp
   140037570:	or     esi,DWORD PTR [rax+0x0]
   140037573:	add    ah,ah
   140037575:	int3   
   140037576:	add    al,BYTE PTR [rax]
   140037578:	push   rax
   140037579:	add    DWORD PTR [rax],eax
   14003757b:	add    BYTE PTR [rcx],dl
   14003757d:	and    BYTE PTR [rax],cl
   14003757f:	add    BYTE PTR [rax],ah
   140037581:	push   rsp
   140037582:	or     eax,DWORD PTR [rax]
   140037584:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140037587:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e37edf
   14003758d:	jo     0x140037595
   14003758f:	(bad)  
   140037590:	fcmovbe st,st(1)
   140037592:	add    al,BYTE PTR [rax]
   140037594:	push   rax
   140037595:	rex.WXB add rax,QWORD PTR [r8]
   140037598:	(bad)  
   140037599:	(bad)  
   14003759a:	(bad)  
   14003759b:	inc    DWORD PTR [rax-0x2c]
   14003759e:	add    al,BYTE PTR [rax]
   1400375a0:	(bad)  
   1400375a1:	(bad)  
   1400375a2:	(bad)  
   1400375a3:	dec    DWORD PTR [rsi-0x2c]
   1400375a6:	add    al,BYTE PTR [rax]
   1400375a8:	(bad)  
   1400375a9:	(bad)  
   1400375aa:	(bad)  
   1400375ab:	call   FWORD PTR [rsp+rdx*8+0x2]
   1400375af:	add    al,dl
   1400375b1:	jp     0x1400375b4
   1400375b3:	add    bh,bh
   1400375b5:	(bad)  
   1400375b6:	(bad)  
   1400375b7:	jmp    QWORD PTR [rax]
   1400375b9:	jnp    0x1400375bc
   1400375bb:	add    BYTE PTR [rax],al
   1400375bd:	add    BYTE PTR [rax],al
   1400375bf:	add    BYTE PTR [rcx+0x7b],al
   1400375c2:	add    DWORD PTR [rax],eax
   1400375c4:	(bad)  
   1400375c5:	(bad)  
   1400375c6:	(bad)  
   1400375c7:	jmp    FWORD PTR [rax+0x7b]
   1400375ca:	add    DWORD PTR [rax],eax
   1400375cc:	add    DWORD PTR [rax],eax
   1400375ce:	add    BYTE PTR [rax],al
   1400375d0:	mov    DWORD PTR [rbx+0x1],edi
   1400375d3:	add    bh,bh
   1400375d5:	(bad)  
   1400375d6:	(bad)  
   1400375d7:	call   FWORD PTR [rdi+0x200017b]
   1400375dd:	add    BYTE PTR [rax],al
   1400375df:	add    al,al
   1400375e1:	jnp    0x1400375e4
   1400375e3:	add    bh,bh
   1400375e5:	(bad)  
   1400375e6:	(bad)  
   1400375e7:	call   FWORD PTR [rcx]
   1400375e9:	(bad)  
   1400375ea:	or     eax,DWORD PTR [rax]
   1400375ec:	sub    DWORD PTR [rbx+rdi*1],esi
   1400375ef:	add    BYTE PTR [rax],bl
   1400375f1:	add    DWORD PTR [rax],esi
   1400375f3:	add    BYTE PTR [rax+rsi*8],cl
   1400375f6:	or     ah,al
   1400375f8:	or     al,dl
   1400375fa:	(bad)  
   1400375fb:	rol    BYTE PTR [rax+rsi*2],0x3
   1400375ff:	(bad)  
   140037600:	add    dl,BYTE PTR [rax+0x0]
   140037603:	add    al,ah
   140037605:	rol    DWORD PTR [rdx],1
   140037607:	add    BYTE PTR [rax+0x7200034b],dh
   14003760d:	add    DWORD PTR [rax],eax
   14003760f:	add    BYTE PTR [rax],al
   140037611:	jge    0x140037614
   140037613:	add    bh,bh
   140037615:	(bad)  
   140037616:	(bad)  
   140037617:	push   QWORD PTR [rsi+rdi*2+0x1]
   14003761e:	add    BYTE PTR [rax],al
   140037620:	out    dx,eax
   140037621:	jle    0x140037624
   140037623:	add    bh,bh
   140037625:	(bad)  
   140037626:	(bad)  
   140037627:	call   FWORD PTR [rcx]
   140037629:	and    BYTE PTR [rdi],al
   14003762b:	add    BYTE PTR [rsi],cl
   14003762d:	add    DWORD PTR [rcx+rax*1],ecx
   140037630:	(bad)  
   140037631:	lock add eax,0x3600470
   140037637:	push   rax
   140037638:	add    dh,BYTE PTR [rax]
   14003763a:	add    BYTE PTR [rax],al
   14003763c:	in     al,0xcc
   14003763e:	add    al,BYTE PTR [rax]
   140037640:	push   rax
   140037641:	or     BYTE PTR [rax],al
   140037643:	add    BYTE PTR [rcx],ah
   140037645:	or     BYTE PTR [rdx],al
   140037647:	add    BYTE PTR [rax],cl
   140037649:	in     al,0x15
   14003764b:	add    DWORD PTR [rax-0x28fffe7a],eax
   140037651:	xchg   BYTE PTR [rcx],al
   140037653:	add    BYTE PTR [rax],ch
   140037655:	jbe    0x14003765a
   140037657:	add    BYTE PTR [rcx],ah
   140037659:	adc    BYTE PTR [rax+rax*1],al
   14003765c:	adc    ah,dl
   14003765e:	adc    al,0x1
   140037660:	or     ah,al
   140037662:	adc    eax,DWORD PTR [rcx]
   140037664:	xlat   BYTE PTR ds:[rbx]
   140037665:	xchg   BYTE PTR [rcx],al
   140037667:	add    BYTE PTR [rip+0x44000187],al        # 0x1840377f4
   14003766d:	jbe    0x140037672
   14003766f:	add    BYTE PTR [rcx],ah
   140037671:	add    BYTE PTR [rax],al
   140037673:	add    bh,dl
   140037675:	xchg   BYTE PTR [rcx],al
   140037677:	add    BYTE PTR [rip+0x44000187],al        # 0x184037804
   14003767d:	jbe    0x140037682
   14003767f:	add    BYTE PTR [rcx],ah
   140037681:	add    BYTE PTR [rax],al
   140037683:	add    BYTE PTR [rax-0x28fffe7a],al
   140037689:	xchg   BYTE PTR [rcx],al
   14003768b:	add    BYTE PTR [rax],ch
   14003768d:	jbe    0x140037692
   14003768f:	add    BYTE PTR [rcx],ah
   140037691:	add    BYTE PTR [rsi],al
   140037693:	add    BYTE PTR [rax],al
   140037695:	in     al,0x15
   140037697:	add    DWORD PTR [rax],eax
   140037699:	(bad)  
   14003769a:	adc    al,0x1
   14003769c:	add    ah,al
   14003769e:	adc    eax,DWORD PTR [rcx]
   1400376a0:	add    BYTE PTR [rsi-0x7928ffff],0x1
   1400376a7:	add    BYTE PTR [rax],ch
   1400376a9:	jbe    0x1400376ae
   1400376ab:	add    BYTE PTR [rcx],bl
   1400376ad:	or     eax,DWORD PTR ss:[rax]
   1400376b0:	sub    BYTE PTR [rsp],dh
   1400376b3:	add    BYTE PTR [rax],bl
   1400376b5:	add    DWORD PTR [rax+rax*1],ebx
   1400376b8:	or     al,0xf0
   1400376ba:	or     ah,al
   1400376bc:	or     al,dl
   1400376be:	(bad)  
   1400376bf:	rol    BYTE PTR [rax+rsi*2],0x3
   1400376c3:	(bad)  
   1400376c4:	add    dl,BYTE PTR [rax+0x0]
   1400376c7:	add    al,ah
   1400376c9:	rol    DWORD PTR [rdx],1
   1400376cb:	add    BYTE PTR [rax-0x25fffcb5],al
   1400376d1:	add    BYTE PTR [rax],al
   1400376d3:	add    bh,bh
   1400376d5:	(bad)  
   1400376d6:	(bad)  
   1400376d7:	push   QWORD PTR [rax-0x2c]
   1400376da:	add    al,BYTE PTR [rax]
   1400376dc:	(bad)  
   1400376dd:	(bad)  
   1400376de:	(bad)  
   1400376df:	(bad)  
   1400376e0:	jle    0x1400376b6
   1400376e2:	add    al,BYTE PTR [rax]
   1400376e4:	ror    BYTE PTR [rcx+rax*1-0x100],0xff
   1400376ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400376ed:	lea    eax,[rcx]
   1400376ef:	add    BYTE PTR [rax],al
   1400376f1:	add    BYTE PTR [rax],al
   1400376f3:	add    dl,ah
   1400376f5:	lea    eax,[rcx]
   1400376f7:	add    bh,bh
   1400376f9:	(bad)  
   1400376fa:	(bad)  
   1400376fb:	call   QWORD PTR [rdx-0x72]
   1400376fe:	add    DWORD PTR [rax],eax
   140037700:	add    DWORD PTR [rax],eax
   140037702:	add    BYTE PTR [rax],al
   140037704:	mov    cs,WORD PTR [rsi-0xffff]
   14003770a:	(bad)  
   14003770b:	call   FWORD PTR [rcx]
   14003770d:	sub    BYTE PTR [rsi],al
   14003770f:	add    BYTE PTR [rcx],bl
   140037711:	lldt   WORD PTR fs:[rsp+rsi*1]
   140037716:	(bad)  
   140037717:	add    BYTE PTR [rsi],al
   140037719:	mov    dl,0x2
   14003771b:	jo     0x1400376fd
   14003771d:	rol    DWORD PTR [rdx],1
   14003771f:	add    al,ah
   140037721:	rex.WXB add rax,QWORD PTR [r8]
   140037724:	push   rdx
   140037725:	add    BYTE PTR [rax],al
   140037727:	add    bh,bh
   140037729:	(bad)  
   14003772a:	(bad)  
   14003772b:	call   QWORD PTR [rax+0x2d4]
   140037731:	mov    esp,0xffff0001
   140037736:	(bad)  
   140037737:	jmp    QWORD PTR [rcx-0x44]
   14003773a:	add    DWORD PTR [rax],eax
   14003773c:	add    BYTE PTR [rax],al
   14003773e:	add    BYTE PTR [rax],al
   140037740:	movabs al,ds:0x11ffffffff0001bc
   140037749:	adc    al,0x4
   14003774b:	add    BYTE PTR [rsp+rsi*1],dl
   14003774e:	or     BYTE PTR [rax],al
   140037750:	(bad)  
   140037751:	push   rdx
   140037752:	add    dh,BYTE PTR [rax-0x26]
   140037755:	rol    DWORD PTR [rdx],1
   140037757:	add    BYTE PTR [rax+0x4c],al
   14003775a:	add    eax,DWORD PTR [rax]
   14003775c:	(bad)  
   14003775d:	(bad)  
   14003775e:	(bad)  
   14003775f:	jmp    QWORD PTR [rax-0xffffd2c]
   140037765:	mov    ebp,0xffff0001
   14003776a:	(bad)  
   14003776b:	call   QWORD PTR [rsi]
   14003776d:	mov    esi,0x1
   140037772:	add    BYTE PTR [rax],al
   140037774:	push   rdi
   140037775:	mov    esi,0xffff0001
   14003777a:	(bad)  
   14003777b:	call   FWORD PTR [rcx]
   14003777d:	cs (bad) 
   14003777f:	add    BYTE PTR [rsp+riz*2],bl
   140037782:	add    BYTE PTR ss:[rax],bl
   140037785:	xor    al,0x35
   140037787:	add    BYTE PTR [rbx],cl
   140037789:	add    DWORD PTR [rdx],esi
   14003778b:	add    BYTE PTR [rax+rsi*2],al
   14003778e:	add    BYTE PTR [rax],al
   140037790:	loopne 0x140037763
   140037792:	add    al,BYTE PTR [rax]
   140037794:	adc    BYTE PTR [rbx+rax*1+0x0],cl
   140037798:	(bad)  
   140037799:	add    DWORD PTR [rax],eax
   14003779b:	add    BYTE PTR [rax-0x42],dh
   14003779e:	add    DWORD PTR [rax],eax
   1400377a0:	(bad)  
   1400377a1:	(bad)  
   1400377a2:	(bad)  
   1400377a3:	call   rdx
   1400377a5:	mov    esi,0x1
   1400377aa:	add    BYTE PTR [rax],al
   1400377ac:	adc    DWORD PTR [rdi-0xffff],edi
   1400377b2:	(bad)  
   1400377b3:	call   FWORD PTR [rcx]
   1400377b5:	and    al,0x7
   1400377b7:	add    BYTE PTR [rdx],dl
   1400377b9:	movabs fs:0x9e011200a1341200,al
   1400377c3:	add    BYTE PTR [rbx],cl
   1400377c5:	jo     0x1400377c7
   1400377c7:	add    ah,ah
   1400377c9:	int3   
   1400377ca:	add    al,BYTE PTR [rax]
   1400377cc:	loopne 0x1400377d2
   1400377ce:	add    BYTE PTR [rax],al
   1400377d0:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x1a20777d7
   1400377d6:	add    BYTE PTR [rax],al
   1400377d8:	fcmovbe st,st(1)
   1400377da:	add    al,BYTE PTR [rax]
   1400377dc:	mov    al,0x4e
   1400377de:	add    eax,DWORD PTR [rax]
   1400377e0:	push   rax
   1400377e1:	ret    0x1
   1400377e4:	(bad)  
   1400377e5:	(bad)  
   1400377e6:	(bad)  
   1400377e7:	jmp    FWORD PTR [rbp-0x3e]
   1400377ea:	add    DWORD PTR [rax],eax
   1400377ec:	add    BYTE PTR [rax],al
   1400377ee:	add    BYTE PTR [rax],al
   1400377f0:	jnp    0x1400377b4
   1400377f2:	add    DWORD PTR [rax],eax
   1400377f4:	(bad)  
   1400377f5:	(bad)  
   1400377f6:	(bad)  
   1400377f7:	call   QWORD PTR [rcx]
   1400377f9:	and    al,0xa
   1400377fb:	add    BYTE PTR [rsp+rdx*2],ah
   1400377fe:	(bad)  
   1400377ff:	add    BYTE PTR [rdi],bl
   140037801:	xor    al,0xd
   140037803:	add    BYTE PTR [rcx],dl
   140037805:	push   rdx
   140037806:	or     eax,0x9e00bf0
   14003780b:	rol    BYTE PTR [rdi],0x70
   14003780e:	(bad)  
   14003780f:	(bad)  
   140037810:	fcmovbe st,st(1)
   140037812:	add    al,BYTE PTR [rax]
   140037814:	or     BYTE PTR [rsi+0x3],0x0
   140037818:	(bad)  
   140037819:	(bad)  
   14003781a:	(bad)  
   14003781b:	push   QWORD PTR [rax+0x2d4]
   140037821:	add    BYTE PTR [rax],al
   140037823:	add    BYTE PTR [rsi+0x10002d4],bh
   140037829:	add    BYTE PTR [rax],al
   14003782b:	add    bl,dl
   14003782d:	(bad)  
   14003782e:	add    al,BYTE PTR [rax]
   140037830:	add    al,BYTE PTR [rax]
   140037832:	add    BYTE PTR [rax],al
   140037834:	call   0x143037b0d
   140037839:	add    BYTE PTR [rax],al
   14003783b:	add    ch,bh
   14003783d:	(bad)  
   14003783e:	add    al,BYTE PTR [rax]
   140037840:	add    al,0x0
   140037842:	add    BYTE PTR [rax],al
   140037844:	adc    dl,ch
   140037846:	add    al,BYTE PTR [rax]
   140037848:	add    eax,0x27000000
   14003784d:	(bad)  
   14003784e:	add    al,BYTE PTR [rax]
   140037850:	(bad)  
   140037851:	add    BYTE PTR [rax],al
   140037853:	add    BYTE PTR [rdx*8+0x70002],bh
   14003785a:	add    BYTE PTR [rax],al
   14003785c:	push   rcx
   14003785d:	(bad)  
   14003785e:	add    al,BYTE PTR [rax]
   140037860:	or     BYTE PTR [rax],al
   140037862:	add    BYTE PTR [rax],al
   140037864:	data16 (bad) 
   140037866:	add    al,BYTE PTR [rax]
   140037868:	or     DWORD PTR [rax],eax
   14003786a:	add    BYTE PTR [rax],al
   14003786c:	jnp    0x140037843
   14003786e:	add    al,BYTE PTR [rax]
   140037870:	or     al,BYTE PTR [rax]
   140037872:	add    BYTE PTR [rax],al
   140037874:	nop
   140037875:	(bad)  
   140037876:	add    al,BYTE PTR [rax]
   140037878:	or     eax,DWORD PTR [rax]
   14003787a:	add    BYTE PTR [rax],al
   14003787c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003787d:	(bad)  
   14003787e:	add    al,BYTE PTR [rax]
   140037880:	or     al,0x0
   140037882:	add    BYTE PTR [rax],al
   140037884:	mov    edx,0xd0002d5
   140037889:	add    BYTE PTR [rax],al
   14003788b:	add    bh,cl
   14003788d:	(bad)  
   14003788e:	add    al,BYTE PTR [rax]
   140037890:	(bad)  
   140037891:	add    BYTE PTR [rax],al
   140037893:	add    ah,ah
   140037895:	(bad)  
   140037896:	add    al,BYTE PTR [rax]
   140037898:	sldt   WORD PTR [rax]
   14003789b:	add    cl,bh
   14003789d:	(bad)  
   14003789e:	add    al,BYTE PTR [rax]
   1400378a0:	adc    BYTE PTR [rax],al
   1400378a2:	add    BYTE PTR [rax],al
   1400378a4:	(bad)  
   1400378a5:	(bad)  
   1400378a6:	add    al,BYTE PTR [rax]
   1400378a8:	mov    al,0xc2
   1400378aa:	add    DWORD PTR [rax],eax
   1400378ac:	(bad)  
   1400378ad:	(bad)  
   1400378ae:	(bad)  
   1400378af:	(bad)  
   1400378b0:	jmp    0x140037874
   1400378b2:	add    DWORD PTR [rax],eax
   1400378b4:	add    BYTE PTR [rax],al
   1400378b6:	add    BYTE PTR [rax],al
   1400378b8:	adc    bl,al
   1400378ba:	add    DWORD PTR [rax],eax
   1400378bc:	add    DWORD PTR [rax],eax
   1400378be:	add    BYTE PTR [rax],al
   1400378c0:	and    al,0xc3
   1400378c2:	add    DWORD PTR [rax],eax
   1400378c4:	add    al,BYTE PTR [rax]
   1400378c6:	add    BYTE PTR [rax],al
   1400378c8:	cmp    bl,al
   1400378ca:	add    DWORD PTR [rax],eax
   1400378cc:	add    eax,DWORD PTR [rax]
   1400378ce:	add    BYTE PTR [rax],al
   1400378d0:	rex.WR ret 
   1400378d2:	add    DWORD PTR [rax],eax
   1400378d4:	add    al,0x0
   1400378d6:	add    BYTE PTR [rax],al
   1400378d8:	addr32 ret 
   1400378da:	add    DWORD PTR [rax],eax
   1400378dc:	add    eax,0x82000000
   1400378e1:	ret    
   1400378e2:	add    DWORD PTR [rax],eax
   1400378e4:	(bad)  
   1400378e5:	add    BYTE PTR [rax],al
   1400378e7:	add    BYTE PTR [rbp+0x70001c3],bl
   1400378ed:	add    BYTE PTR [rax],al
   1400378ef:	add    BYTE PTR [rax+0x80001c3],bh
   1400378f5:	add    BYTE PTR [rax],al
   1400378f7:	add    ah,cl
   1400378f9:	ret    
   1400378fa:	add    DWORD PTR [rax],eax
   1400378fc:	or     DWORD PTR [rax],eax
   1400378fe:	add    BYTE PTR [rax],al
   140037900:	loopne 0x1400378c5
   140037902:	add    DWORD PTR [rax],eax
   140037904:	or     al,BYTE PTR [rax]
   140037906:	add    BYTE PTR [rax],al
   140037908:	hlt    
   140037909:	ret    
   14003790a:	add    DWORD PTR [rax],eax
   14003790c:	or     eax,DWORD PTR [rax]
   14003790e:	add    BYTE PTR [rax],al
   140037910:	or     ah,al
   140037912:	add    DWORD PTR [rax],eax
   140037914:	or     al,0x0
   140037916:	add    BYTE PTR [rax],al
   140037918:	sbb    al,0xc4
   14003791a:	add    DWORD PTR [rax],eax
   14003791c:	or     eax,0x30000000
   140037921:	(bad)
   140037925:	add    BYTE PTR [rax],al
   140037927:	add    BYTE PTR [rsp+rax*8+0x1],al
   14003792b:	add    BYTE PTR [rdi],cl
   14003792d:	add    BYTE PTR [rax],al
   14003792f:	add    BYTE PTR [rax-0x3c],bl
   140037932:	add    DWORD PTR [rax],eax
   140037934:	adc    BYTE PTR [rax],al
   140037936:	add    BYTE PTR [rax],al
   140037938:	ins    BYTE PTR es:[rdi],dx
   140037939:	(bad)
   14003793d:	add    BYTE PTR [rax],al
   14003793f:	add    BYTE PTR [rsp+rax*8-0xffff],al
   140037946:	(bad)  
   140037947:	call   QWORD PTR [rcx]
   140037949:	adc    eax,DWORD PTR [rdx]
   14003794b:	add    BYTE PTR [rdx],cl
   14003794d:	push   rdx
   14003794e:	(bad)  
   14003794f:	xor    dl,bl
   140037951:	rol    DWORD PTR [rdx],1
   140037953:	add    BYTE PTR [rax+0x4e],dl
   140037956:	add    eax,DWORD PTR [rax]
   140037958:	(bad)  
   140037959:	(bad)  
   14003795a:	(bad)  
   14003795b:	push   QWORD PTR [rax]
   14003795d:	(bad)  
   14003795e:	add    al,BYTE PTR [rax]
   140037960:	add    BYTE PTR [rax],al
   140037962:	add    BYTE PTR [rax],al
   140037964:	ds (bad) 
   140037966:	add    al,BYTE PTR [rax]
   140037968:	add    DWORD PTR [rax],eax
   14003796a:	add    BYTE PTR [rax],al
   14003796c:	push   rbx
   14003796d:	(bad)  
   14003796e:	add    al,BYTE PTR [rax]
   140037970:	add    al,BYTE PTR [rax]
   140037972:	add    BYTE PTR [rax],al
   140037974:	push   0x30002d6
   140037979:	add    BYTE PTR [rax],al
   14003797b:	add    BYTE PTR [rbp-0x2a],bh
   14003797e:	add    al,BYTE PTR [rax]
   140037980:	add    al,0x0
   140037982:	add    BYTE PTR [rax],al
   140037984:	xchg   edx,eax
   140037985:	(bad)  
   140037986:	add    al,BYTE PTR [rax]
   140037988:	add    eax,0xa7000000
   14003798d:	(bad)  
   14003798e:	add    al,BYTE PTR [rax]
   140037990:	(bad)  
   140037991:	add    BYTE PTR [rax],al
   140037993:	add    BYTE PTR [rsi+rdx*8+0x70002],bh
   14003799a:	add    BYTE PTR [rax],al
   14003799c:	rcl    esi,1
   14003799e:	add    al,BYTE PTR [rax]
   1400379a0:	or     BYTE PTR [rax],al
   1400379a2:	add    BYTE PTR [rax],al
   1400379a4:	out    0xd6,al
   1400379a6:	add    al,BYTE PTR [rax]
   1400379a8:	or     DWORD PTR [rax],eax
   1400379aa:	add    BYTE PTR [rax],al
   1400379ac:	sti    
   1400379ad:	(bad)  
   1400379ae:	add    al,BYTE PTR [rax]
   1400379b0:	or     al,BYTE PTR [rax]
   1400379b2:	add    BYTE PTR [rax],al
   1400379b4:	adc    bh,dl
   1400379b6:	add    al,BYTE PTR [rax]
   1400379b8:	or     eax,DWORD PTR [rax]
   1400379ba:	add    BYTE PTR [rax],al
   1400379bc:	and    eax,0xc0002d7
   1400379c1:	add    BYTE PTR [rax],al
   1400379c3:	add    BYTE PTR [rdx],bh
   1400379c5:	xlat   BYTE PTR ds:[rbx]
   1400379c6:	add    al,BYTE PTR [rax]
   1400379c8:	or     eax,0x4f000000
   1400379cd:	xlat   BYTE PTR ds:[rbx]
   1400379ce:	add    al,BYTE PTR [rax]
   1400379d0:	(bad)  
   1400379d1:	add    BYTE PTR [rax],al
   1400379d3:	add    BYTE PTR [rdi+rdx*8+0x2],ah
   1400379d7:	add    BYTE PTR [rdi],cl
   1400379d9:	add    BYTE PTR [rax],al
   1400379db:	add    BYTE PTR [rcx-0x29],bh
   1400379de:	add    al,BYTE PTR [rax]
   1400379e0:	rol    ah,1
   1400379e2:	add    DWORD PTR [rax],eax
   1400379e4:	(bad)  
   1400379e5:	(bad)  
   1400379e6:	(bad)  
   1400379e7:	push   rax
   1400379e9:	(bad)
   1400379ed:	add    BYTE PTR [rax],al
   1400379ef:	add    dh,bh
   1400379f1:	(bad)
   1400379f5:	add    BYTE PTR [rax],al
   1400379f7:	add    BYTE PTR [rax*8+0xe0001],cl
   1400379fe:	add    BYTE PTR [rax],al
   140037a00:	sbb    al,ch
   140037a02:	add    DWORD PTR [rax],eax
   140037a04:	or     eax,0x28000000
   140037a09:	(bad)
   140037a0c:	or     al,0x0
   140037a0e:	add    BYTE PTR [rax],al
   140037a10:	(bad)
   140037a14:	or     eax,DWORD PTR [rax]
   140037a16:	add    BYTE PTR [rax],al
   140037a18:	(bad)
   140037a1c:	or     al,BYTE PTR [rax]
   140037a1e:	add    BYTE PTR [rax],al
   140037a20:	push   rdx
   140037a21:	(bad)
   140037a24:	or     DWORD PTR [rax],eax
   140037a26:	add    BYTE PTR [rax],al
   140037a28:	(bad)  
   140037a29:	(bad)
   140037a2c:	or     BYTE PTR [rax],al
   140037a2e:	add    BYTE PTR [rax],al
   140037a30:	outs   dx,BYTE PTR ds:[rsi]
   140037a31:	(bad)
   140037a34:	(bad)  
   140037a35:	add    BYTE PTR [rax],al
   140037a37:	add    BYTE PTR [rbp+rax*8+0x1],bh
   140037a3b:	add    BYTE PTR [rsi],al
   140037a3d:	add    BYTE PTR [rax],al
   140037a3f:	add    BYTE PTR [rdx+0x50001c5],cl
   140037a45:	add    BYTE PTR [rax],al
   140037a47:	add    BYTE PTR [rax+0x40001c5],bl
   140037a4d:	add    BYTE PTR [rax],al
   140037a4f:	add    BYTE PTR [rsi+0x30001c5],ah
   140037a55:	add    BYTE PTR [rax],al
   140037a57:	add    BYTE PTR [rbp+rax*8+0x20001],dh
   140037a5e:	add    BYTE PTR [rax],al
   140037a60:	ret    0x1c5
   140037a63:	add    BYTE PTR [rcx],al
   140037a65:	add    BYTE PTR [rax],al
   140037a67:	add    al,dl
   140037a69:	(bad)
   140037a6c:	add    BYTE PTR [rax],al
   140037a6e:	add    BYTE PTR [rax],al
   140037a70:	faddp  st(5),st
   140037a72:	add    DWORD PTR [rax],eax
   140037a74:	(bad)  
   140037a75:	(bad)  
   140037a76:	(bad)  
   140037a77:	call   QWORD PTR [rcx]
   140037a79:	adc    al,0x4
   140037a7b:	add    BYTE PTR [rsp+rsi*1],dl
   140037a7e:	or     al,BYTE PTR [rax]
   140037a80:	(bad)  
   140037a81:	push   rdx
   140037a82:	add    dh,BYTE PTR [rax-0x26]
   140037a85:	rol    DWORD PTR [rdx],1
   140037a87:	add    BYTE PTR [rax],ah
   140037a89:	rex.WRX add r8,QWORD PTR [rax]
   140037a8c:	(bad)  
   140037a8d:	(bad)  
   140037a8e:	(bad)  
   140037a8f:	call   QWORD PTR [rax-0x5ffffd29]
   140037a95:	mov    DWORD PTR [rcx],0xffffff00
   140037a9b:	jmp    FWORD PTR [rbp-0x38]
   140037a9e:	add    DWORD PTR [rax],eax
   140037aa0:	add    BYTE PTR [rax],al
   140037aa2:	add    BYTE PTR [rax],al
   140037aa4:	jl     0x140037a6e
   140037aa6:	add    DWORD PTR [rax],eax
   140037aa8:	(bad)  
   140037aa9:	(bad)  
   140037aaa:	(bad)  
   140037aab:	call   FWORD PTR [rcx]
   140037aad:	sub    al,0x5
   140037aaf:	add    BYTE PTR [rdx],bl
   140037ab1:	xor    al,0xdf
   140037ab3:	add    BYTE PTR [rcx],cl
   140037ab5:	add    esp,ebx
   140037ab7:	add    BYTE PTR [rdx],al
   140037ab9:	jo     0x140037abb
   140037abb:	add    al,ah
   140037abd:	rol    DWORD PTR [rdx],1
   140037abf:	add    al,dh
   140037ac1:	add    r8,QWORD PTR [r8]
   140037ac4:	rol    BYTE PTR [rsi],cl
   140037ac6:	add    BYTE PTR [rax],al
   140037ac8:	(bad)  
   140037ac9:	(bad)  
   140037aca:	(bad)  
   140037acb:	jmp    QWORD PTR [rax+0x2d7]
   140037ad1:	add    BYTE PTR [rax],al
   140037ad3:	add    BYTE PTR [rsi+0x10002d7],ch
   140037ad9:	add    BYTE PTR [rax],al
   140037adb:	add    BYTE PTR [rdi+rdx*8-0x371ffffe],bh
   140037ae2:	add    DWORD PTR [rax],eax
   140037ae4:	(bad)  
   140037ae5:	(bad)  
   140037ae6:	(bad)  
   140037ae7:	call   FWORD PTR [rbx]
   140037ae9:	leave  
   140037aea:	add    DWORD PTR [rax],eax
   140037aec:	add    BYTE PTR [rax],al
   140037aee:	add    BYTE PTR [rax],al
   140037af0:	jae    0x140037abb
   140037af2:	add    DWORD PTR [rax],eax
   140037af4:	add    DWORD PTR [rax],eax
   140037af6:	add    BYTE PTR [rax],al
   140037af8:	jle    0x140037ac3
   140037afa:	add    DWORD PTR [rax],eax
   140037afc:	add    al,BYTE PTR [rax]
   140037afe:	add    BYTE PTR [rax],al
   140037b00:	nop
   140037b01:	leave  
   140037b02:	add    DWORD PTR [rax],eax
   140037b04:	add    DWORD PTR [rax],eax
   140037b06:	add    BYTE PTR [rax],al
   140037b08:	(bad)  
   140037b0a:	add    DWORD PTR [rax],eax
   140037b0c:	add    BYTE PTR [rax],al
   140037b0e:	add    BYTE PTR [rax],al
   140037b10:	jmp    0x140037adb
   140037b12:	add    DWORD PTR [rax],eax
   140037b14:	(bad)  
   140037b15:	(bad)  
   140037b16:	(bad)  
   140037b17:	call   FWORD PTR [rcx]
   140037b19:	rex or eax,0x47742f00
   140037b1f:	add    DWORD PTR [rbx],ebp
   140037b21:	rex.RX add DWORD PTR fs:[rdi],r12d
   140037b25:	xor    al,0x45
   140037b27:	add    DWORD PTR [rdx],ebx
   140037b29:	add    DWORD PTR [rsi],edi
   140037b2b:	add    DWORD PTR [rax+rsi*8],ecx
   140037b2e:	or     ah,al
   140037b30:	or     al,dl
   140037b32:	(bad)  
   140037b33:	rol    BYTE PTR [rax+rdx*2],0x0
   140037b37:	add    al,ah
   140037b39:	rol    DWORD PTR [rdx],1
   140037b3b:	add    al,al
   140037b3d:	add    r8,QWORD PTR [r8]
   140037b40:	loop   0x140037b4b
   140037b42:	add    BYTE PTR [rax],al
   140037b44:	(bad)  
   140037b45:	(bad)  
   140037b46:	(bad)  
   140037b47:	call   rax
   140037b49:	xlat   BYTE PTR ds:[rbx]
   140037b4a:	add    al,BYTE PTR [rax]
   140037b4c:	add    BYTE PTR [rax],al
   140037b4e:	add    BYTE PTR [rax],al
   140037b50:	(bad)  
   140037b52:	add    al,BYTE PTR [rax]
   140037b54:	add    DWORD PTR [rax],eax
   140037b56:	add    BYTE PTR [rax],al
   140037b58:	in     al,dx
   140037b59:	xlat   BYTE PTR ds:[rbx]
   140037b5a:	add    al,BYTE PTR [rax]
   140037b5c:	add    DWORD PTR [rax],eax
   140037b5e:	add    BYTE PTR [rax],al
   140037b60:	cli    
   140037b61:	xlat   BYTE PTR ds:[rbx]
   140037b62:	add    al,BYTE PTR [rax]
   140037b64:	and    dl,cl
   140037b66:	add    DWORD PTR [rax],eax
   140037b68:	(bad)  
   140037b69:	(bad)  
   140037b6a:	(bad)  
   140037b6b:	(bad)  
   140037b6c:	fmul   st(3),st
   140037b6e:	add    DWORD PTR [rax],eax
   140037b70:	add    BYTE PTR [rax],al
   140037b72:	add    BYTE PTR [rax],al
   140037b74:	sbb    al,0xcc
   140037b76:	add    DWORD PTR [rax],eax
   140037b78:	add    DWORD PTR [rax],eax
   140037b7a:	add    BYTE PTR [rax],al
   140037b7c:	push   rsp
   140037b7d:	(bad)  
   140037b7e:	add    DWORD PTR [rax],eax
   140037b80:	add    al,BYTE PTR [rax]
   140037b82:	add    BYTE PTR [rax],al
   140037b84:	jge    0x140037b54
   140037b86:	add    DWORD PTR [rax],eax
   140037b88:	add    DWORD PTR [rax],eax
   140037b8a:	add    BYTE PTR [rax],al
   140037b8c:	mov    cl,dh
   140037b8e:	add    DWORD PTR [rax],eax
   140037b90:	add    al,BYTE PTR [rax]
   140037b92:	add    BYTE PTR [rax],al
   140037b94:	movabs eax,ds:0xf0000000010001ce
   140037b9d:	iret   
   140037b9e:	add    DWORD PTR [rax],eax
   140037ba0:	add    eax,DWORD PTR [rax]
   140037ba2:	add    BYTE PTR [rax],al
   140037ba4:	cmp    al,dl
   140037ba6:	add    DWORD PTR [rax],eax
   140037ba8:	add    DWORD PTR [rax],eax
   140037baa:	add    BYTE PTR [rax],al
   140037bac:	icebp  
   140037bad:	rol    BYTE PTR [rcx],1
   140037baf:	add    BYTE PTR [rax],al
   140037bb1:	add    BYTE PTR [rax],al
   140037bb3:	add    ch,bh
   140037bb5:	rol    BYTE PTR [rcx],1
   140037bb7:	add    bh,bh
   140037bb9:	(bad)  
   140037bba:	(bad)  
   140037bbb:	call   FWORD PTR [rcx]
   140037bbd:	rex or eax,0xd3742f00
   140037bc3:	add    BYTE PTR [rbx],ch
   140037bc5:	rol    BYTE PTR fs:[rax],cl
   140037bc8:	(bad)  
   140037bc9:	xor    al,0xd1
   140037bcb:	add    BYTE PTR [rdx],bl
   140037bcd:	add    edx,ecx
   140037bcf:	add    BYTE PTR [rax+rsi*8],cl
   140037bd2:	or     ah,al
   140037bd4:	or     al,dl
   140037bd6:	(bad)  
   140037bd7:	rol    BYTE PTR [rax+rdx*2],0x0
   140037bdb:	add    al,ah
   140037bdd:	rol    DWORD PTR [rdx],1
   140037bdf:	add    BYTE PTR [rax+0x4200034d],dl
   140037be5:	(bad)  
   140037be6:	add    BYTE PTR [rax],al
   140037be8:	(bad)  
   140037be9:	(bad)  
   140037bea:	(bad)  
   140037beb:	call   QWORD PTR [rax]
   140037bed:	fadd   DWORD PTR [rdx]
   140037bef:	add    BYTE PTR [rax],al
   140037bf1:	add    BYTE PTR [rax],al
   140037bf3:	add    BYTE PTR [rsi],bl
   140037bf5:	fadd   DWORD PTR [rdx]
   140037bf7:	add    BYTE PTR [rax-0x2f],al
   140037bfa:	add    DWORD PTR [rax],eax
   140037bfc:	(bad)  
   140037bfd:	(bad)  
   140037bfe:	(bad)  
   140037bff:	inc    DWORD PTR [rcx+0x1d2]
   140037c05:	add    BYTE PTR [rax],al
   140037c07:	add    BYTE PTR [rdx*8+0x10001],bl
   140037c0e:	add    BYTE PTR [rax],al
   140037c10:	or     al,0xd6
   140037c12:	add    DWORD PTR [rax],eax
   140037c14:	add    BYTE PTR [rax],al
   140037c16:	add    BYTE PTR [rax],al
   140037c18:	sub    dl,bh
   140037c1a:	add    DWORD PTR [rax],eax
   140037c1c:	(bad)  
   140037c1d:	(bad)  
   140037c1e:	(bad)  
   140037c1f:	call   QWORD PTR [rcx]
   140037c21:	sbb    DWORD PTR [rsi],eax
   140037c23:	add    BYTE PTR [rcx],bl
   140037c25:	or     al,BYTE PTR fs:[rax]
   140037c28:	adc    al,0x34
   140037c2a:	or     DWORD PTR [rax],eax
   140037c2c:	(bad)  
   140037c2d:	push   rdx
   140037c2e:	add    dh,BYTE PTR [rax-0x26]
   140037c31:	rol    DWORD PTR [rdx],1
   140037c33:	add    BYTE PTR [rax+0x4d],ah
   140037c36:	add    eax,DWORD PTR [rax]
   140037c38:	(bad)  
   140037c39:	(bad)  
   140037c3a:	(bad)  
   140037c3b:	push   QWORD PTR [rax]
   140037c3d:	fadd   DWORD PTR [rdx]
   140037c3f:	add    BYTE PTR [rax-0x29],dh
   140037c42:	add    DWORD PTR [rax],eax
   140037c44:	(bad)  
   140037c45:	(bad)  
   140037c46:	(bad)  
   140037c47:	dec    DWORD PTR [rbp-0x28]
   140037c4a:	add    DWORD PTR [rax],eax
   140037c4c:	add    BYTE PTR [rax],al
   140037c4e:	add    BYTE PTR [rax],al
   140037c50:	repz fadd DWORD PTR [rcx]
   140037c53:	add    bh,bh
   140037c55:	(bad)  
   140037c56:	(bad)  
   140037c57:	call   QWORD PTR [rcx]
   140037c59:	(bad)  
   140037c5a:	or     BYTE PTR [rax],al
   140037c5c:	(bad)  
   140037c5d:	or     eax,DWORD PTR fs:[rax]
   140037c60:	sbb    DWORD PTR [rdx+rcx*1+0x0],edx
   140037c64:	adc    al,0x34
   140037c66:	or     DWORD PTR [rax],eax
   140037c68:	(bad)  
   140037c69:	push   rdx
   140037c6a:	add    dh,BYTE PTR [rax-0x26]
   140037c6d:	rol    DWORD PTR [rdx],1
   140037c6f:	add    BYTE PTR [rax],dh
   140037c71:	add    r8,QWORD PTR [r8]
   140037c74:	adc    cl,bl
   140037c76:	add    DWORD PTR [rax],eax
   140037c78:	(bad)  
   140037c79:	(bad)  
   140037c7a:	(bad)  
   140037c7b:	(bad)  
   140037c7c:	out    dx,al
   140037c7d:	fld    DWORD PTR [rcx]
   140037c7f:	add    BYTE PTR [rax],al
   140037c81:	add    BYTE PTR [rax],al
   140037c83:	add    BYTE PTR [rsi-0x25],ah
   140037c86:	add    DWORD PTR [rax],eax
   140037c88:	(bad)  
   140037c89:	(bad)  
   140037c8a:	(bad)  
   140037c8b:	call   FWORD PTR [rcx]
   140037c8d:	sbb    eax,DWORD PTR [rbx]
   140037c8f:	add    BYTE PTR [rcx],cl
   140037c91:	add    DWORD PTR [rdx+0x0],edx
   140037c94:	add    dh,BYTE PTR [rax]
   140037c96:	add    BYTE PTR [rax],al
   140037c98:	in     al,0xcc
   140037c9a:	add    al,BYTE PTR [rax]
   140037c9c:	add    BYTE PTR [rdx],0x0
   140037c9f:	add    BYTE PTR [rcx],bl
   140037ca1:	rex or eax,0xd1742f00
   140037ca7:	add    BYTE PTR [rbx],ch
   140037ca9:	rol    BYTE PTR fs:[rax],1
   140037cac:	(bad)  
   140037cad:	xor    al,0xcf
   140037caf:	add    BYTE PTR [rdx],bl
   140037cb1:	add    eax,ecx
   140037cb3:	add    BYTE PTR [rax+rsi*8],cl
   140037cb6:	or     ah,al
   140037cb8:	or     al,dl
   140037cba:	(bad)  
   140037cbb:	rol    BYTE PTR [rax+rdx*2],0x0
   140037cbf:	add    al,ah
   140037cc1:	rol    DWORD PTR [rdx],1
   140037cc3:	add    BYTE PTR [rax],al
   140037cc5:	add    r8,QWORD PTR [r8]
   140037cc8:	xor    al,BYTE PTR [rsi]
   140037cca:	add    BYTE PTR [rax],al
   140037ccc:	(bad)  
   140037ccd:	(bad)  
   140037cce:	(bad)  
   140037ccf:	inc    DWORD PTR [rax-0x28]
   140037cd2:	add    al,BYTE PTR [rax]
   140037cd4:	adc    ah,bl
   140037cd6:	add    DWORD PTR [rax],eax
   140037cd8:	(bad)  
   140037cd9:	(bad)  
   140037cda:	(bad)  
   140037cdb:	jmp    rcx
   140037cdd:	fadd   QWORD PTR [rcx]
   140037cdf:	add    BYTE PTR [rax],al
   140037ce1:	add    BYTE PTR [rax],al
   140037ce3:	add    BYTE PTR [rbx*8-0xffff],al
   140037cea:	(bad)  
   140037ceb:	call   QWORD PTR [rcx]
   140037ced:	lar    eax,WORD PTR [rax]
   140037cf0:	(bad)  
   140037cf1:	push   rdx
   140037cf2:	add    dh,BYTE PTR [rax]
   140037cf4:	fcmovbe st,st(1)
   140037cf6:	add    al,BYTE PTR [rax]
   140037cf8:	ror    BYTE PTR [rbx+rax*1+0x0],1
   140037cfc:	xor    al,ah
   140037cfe:	add    DWORD PTR [rax],eax
   140037d00:	(bad)  
   140037d01:	(bad)  
   140037d02:	(bad)  
   140037d03:	jmp    FWORD PTR [rdx-0x20]
   140037d06:	add    DWORD PTR [rax],eax
   140037d08:	add    BYTE PTR [rax],al
   140037d0a:	add    BYTE PTR [rax],al
   140037d0c:	mov    eax,esp
   140037d0e:	add    DWORD PTR [rax],eax
   140037d10:	(bad)  
   140037d11:	(bad)  
   140037d12:	(bad)  
   140037d13:	call   FWORD PTR [rcx]
   140037d15:	sub    al,0x5
   140037d17:	add    BYTE PTR [rdx],bl
   140037d19:	xor    al,0x57
   140037d1b:	add    BYTE PTR [rcx],cl
   140037d1d:	add    DWORD PTR [rax+rax*1+0x2],edx
   140037d21:	jo     0x140037d23
   140037d23:	add    al,ah
   140037d25:	rol    DWORD PTR [rdx],1
   140037d27:	add    BYTE PTR [rax-0x6dfffcb4],ah
   140037d2d:	add    al,BYTE PTR [rax]
   140037d2f:	add    bh,bh
   140037d31:	(bad)  
   140037d32:	(bad)  
   140037d33:	call   QWORD PTR [rax-0x28]
   140037d36:	add    al,BYTE PTR [rax]
   140037d38:	movabs al,ds:0xe5ffffffff0001e0
   140037d41:	loopne 0x140037d44
   140037d43:	add    BYTE PTR [rax],al
   140037d45:	add    BYTE PTR [rax],al
   140037d47:	add    BYTE PTR [rsi],bh
   140037d49:	loope  0x140037d4c
   140037d4b:	add    bh,bh
   140037d4d:	(bad)  
   140037d4e:	(bad)  
   140037d4f:	call   FWORD PTR [rcx]
   140037d51:	cs (bad) 
   140037d53:	add    BYTE PTR [rsp+rsi*1],bl
   140037d56:	cmp    eax,0x36010b00
   140037d5b:	add    BYTE PTR [rax+rsi*2],al
   140037d5e:	add    esp,DWORD PTR [rax+0x2]
   140037d61:	push   rax
   140037d62:	add    BYTE PTR [rax],al
   140037d64:	loopne 0x140037d37
   140037d66:	add    al,BYTE PTR [rax]
   140037d68:	jo     0x140037db6
   140037d6a:	add    eax,DWORD PTR [rax]
   140037d6c:	movabs ds:0x60ffffffff000001,al
   140037d75:	fadd   DWORD PTR [rdx]
   140037d77:	add    BYTE PTR [rax-0x1f],dh
   140037d7a:	add    DWORD PTR [rax],eax
   140037d7c:	(bad)  
   140037d7d:	(bad)  
   140037d7e:	(bad)  
   140037d7f:	inc    DWORD PTR [rcx]
   140037d81:	loop   0x140037d84
   140037d83:	add    BYTE PTR [rax],al
   140037d85:	add    BYTE PTR [rax],al
   140037d87:	add    BYTE PTR [rdx],dl
   140037d89:	loop   0x140037d8c
   140037d8b:	add    bh,bh
   140037d8d:	(bad)  
   140037d8e:	(bad)  
   140037d8f:	call   QWORD PTR [rcx]
   140037d91:	or     eax,0x62040001
   140037d96:	add    BYTE PTR [rax],al
   140037d98:	fcmovbe st,st(1)
   140037d9a:	add    al,BYTE PTR [rax]
   140037d9c:	xor    BYTE PTR [rax+0x3],dl
   140037d9f:	add    BYTE PTR [rax],dl
   140037da1:	jrcxz  0x140037da4
   140037da3:	add    bh,bh
   140037da5:	(bad)  
   140037da6:	(bad)  
   140037da7:	jmp    FWORD PTR [rip+0x1e3]        # 0x140037f90
   140037dad:	add    BYTE PTR [rax],al
   140037daf:	add    BYTE PTR [rbx],bh
   140037db1:	jrcxz  0x140037db4
   140037db3:	add    bh,bh
   140037db5:	(bad)  
   140037db6:	(bad)  
   140037db7:	call   QWORD PTR [rcx]
   140037db9:	and    cl,BYTE PTR [rax]
   140037dbb:	add    BYTE PTR [rdx],ah
   140037dbd:	or     eax,DWORD PTR fs:[rax]
   140037dc0:	sbb    eax,0x18000a54
   140037dc5:	xor    al,0x9
   140037dc7:	add    BYTE PTR [rdx],cl
   140037dc9:	push   rdx
   140037dca:	(bad)  
   140037dcb:	jo     0x140037da7
   140037dcd:	rol    DWORD PTR [rdx],1
   140037dcf:	add    BYTE PTR [rax],al
   140037dd1:	push   rax
   140037dd2:	add    eax,DWORD PTR [rax]
   140037dd4:	(bad)  
   140037dd5:	(bad)  
   140037dd6:	(bad)  
   140037dd7:	push   QWORD PTR [rax-0x28]
   140037dda:	add    al,BYTE PTR [rax]
   140037ddc:	add    BYTE PTR [rax],al
   140037dde:	add    BYTE PTR [rax],al
   140037de0:	jle    0x140037dba
   140037de2:	add    al,BYTE PTR [rax]
   140037de4:	add    DWORD PTR [rax],eax
   140037de6:	add    BYTE PTR [rax],al
   140037de8:	xchg   ebx,eax
   140037de9:	fadd   DWORD PTR [rdx]
   140037deb:	add    BYTE PTR [rdx],al
   140037ded:	add    BYTE PTR [rax],al
   140037def:	add    BYTE PTR [rax+0x30002d8],ch
   140037df5:	add    BYTE PTR [rax],al
   140037df7:	add    BYTE PTR [rbp+0x40002d8],bh
   140037dfd:	add    BYTE PTR [rax],al
   140037dff:	add    dl,dl
   140037e01:	fadd   DWORD PTR [rdx]
   140037e03:	add    BYTE PTR [rip+0xffffffffe7000000],al        # 0x127037e09
   140037e09:	fadd   DWORD PTR [rdx]
   140037e0b:	add    BYTE PTR [rsi],al
   140037e0d:	add    BYTE PTR [rax],al
   140037e0f:	add    ah,bh
   140037e11:	fadd   DWORD PTR [rdx]
   140037e13:	add    BYTE PTR [rdi],al
   140037e15:	add    BYTE PTR [rax],al
   140037e17:	add    BYTE PTR [rcx],dl
   140037e19:	fld    DWORD PTR [rdx]
   140037e1b:	add    BYTE PTR [rax],cl
   140037e1d:	add    BYTE PTR [rax],al
   140037e1f:	add    BYTE PTR [rsi],ah
   140037e21:	fld    DWORD PTR [rdx]
   140037e23:	add    BYTE PTR [rcx],cl
   140037e25:	add    BYTE PTR [rax],al
   140037e27:	add    BYTE PTR [rbx],bh
   140037e29:	fld    DWORD PTR [rdx]
   140037e2b:	add    BYTE PTR [rdx],cl
   140037e2d:	add    BYTE PTR [rax],al
   140037e2f:	add    BYTE PTR [rax-0x27],dl
   140037e32:	add    al,BYTE PTR [rax]
   140037e34:	or     eax,DWORD PTR [rax]
   140037e36:	add    BYTE PTR [rax],al
   140037e38:	fld    DWORD PTR gs:[rdx]
   140037e3b:	add    BYTE PTR [rax+rax*1],cl
   140037e3e:	add    BYTE PTR [rax],al
   140037e40:	jp     0x140037e1b
   140037e42:	add    al,BYTE PTR [rax]
   140037e44:	or     eax,0x8f000000
   140037e49:	fld    DWORD PTR [rdx]
   140037e4b:	add    BYTE PTR [rsi],cl
   140037e4d:	add    BYTE PTR [rax],al
   140037e4f:	add    BYTE PTR [rcx+rbx*8+0xf0002],ah
   140037e56:	add    BYTE PTR [rax],al
   140037e58:	mov    ecx,0x600002d9
   140037e5d:	jrcxz  0x140037e60
   140037e5f:	add    bh,bh
   140037e61:	(bad)  
   140037e62:	(bad)  
   140037e63:	call   FWORD PTR [rcx+0x1e3]
   140037e69:	add    BYTE PTR [rax],al
   140037e6b:	add    BYTE PTR [rsi+0x10001e3],bh
   140037e71:	add    BYTE PTR [rax],al
   140037e73:	add    cl,bl
   140037e75:	jrcxz  0x140037e78
   140037e77:	add    BYTE PTR [rdx],al
   140037e79:	add    BYTE PTR [rax],al
   140037e7b:	add    ch,ch
   140037e7d:	jrcxz  0x140037e80
   140037e7f:	add    BYTE PTR [rbx],al
   140037e81:	add    BYTE PTR [rax],al
   140037e83:	add    BYTE PTR [rcx],al
   140037e85:	in     al,0x1
   140037e87:	add    BYTE PTR [rax+rax*1],al
   140037e8a:	add    BYTE PTR [rax],al
   140037e8c:	sbb    al,0xe4
   140037e8e:	add    DWORD PTR [rax],eax
   140037e90:	add    eax,0x30000000
   140037e95:	in     al,0x1
   140037e97:	add    BYTE PTR [rsi],al
   140037e99:	add    BYTE PTR [rax],al
   140037e9b:	add    BYTE PTR [rsp+riz*8+0x1],al
   140037e9f:	add    BYTE PTR [rdi],al
   140037ea1:	add    BYTE PTR [rax],al
   140037ea3:	add    BYTE PTR [rax-0x1c],bl
   140037ea6:	add    DWORD PTR [rax],eax
   140037ea8:	or     BYTE PTR [rax],al
   140037eaa:	add    BYTE PTR [rax],al
   140037eac:	ins    BYTE PTR es:[rdi],dx
   140037ead:	in     al,0x1
   140037eaf:	add    BYTE PTR [rcx],cl
   140037eb1:	add    BYTE PTR [rax],al
   140037eb3:	add    BYTE PTR [rax+0xa0001e4],al
   140037eb9:	add    BYTE PTR [rax],al
   140037ebb:	add    BYTE PTR [rsp+riz*8+0xb0001],dl
   140037ec2:	add    BYTE PTR [rax],al
   140037ec4:	test   al,0xe4
   140037ec6:	add    DWORD PTR [rax],eax
   140037ec8:	or     al,0x0
   140037eca:	add    BYTE PTR [rax],al
   140037ecc:	mov    esp,0xd0001e4
   140037ed1:	add    BYTE PTR [rax],al
   140037ed3:	add    bh,dl
   140037ed5:	in     al,0x1
   140037ed7:	add    BYTE PTR [rsi],cl
   140037ed9:	add    BYTE PTR [rax],al
   140037edb:	add    bl,ch
   140037edd:	in     al,0x1
   140037edf:	add    BYTE PTR [rdi],cl
   140037ee1:	add    BYTE PTR [rax],al
   140037ee3:	add    BYTE PTR [rsi],al
   140037ee5:	in     eax,0x1
   140037ee7:	add    BYTE PTR [rax],dl
   140037ee9:	add    BYTE PTR [rax],al
   140037eeb:	add    BYTE PTR [rax],dl
   140037eed:	in     eax,0x1
   140037eef:	add    bh,bh
   140037ef1:	(bad)  
   140037ef2:	(bad)  
   140037ef3:	call   QWORD PTR [rcx]
   140037ef5:	adc    eax,DWORD PTR [rdx]
   140037ef7:	add    BYTE PTR [rdx],cl
   140037ef9:	push   rdx
   140037efa:	(bad)  
   140037efb:	xor    dl,bl
   140037efd:	rol    DWORD PTR [rdx],1
   140037eff:	add    al,dl
   140037f01:	rex.WRXB add r8,QWORD PTR [r8]
   140037f04:	(bad)  
   140037f05:	(bad)  
   140037f06:	(bad)  
   140037f07:	call   rax
   140037f09:	fld    DWORD PTR [rdx]
   140037f0b:	add    BYTE PTR [rax],al
   140037f0d:	add    BYTE PTR [rax],al
   140037f0f:	add    dh,bl
   140037f11:	fld    DWORD PTR [rdx]
   140037f13:	add    BYTE PTR [rcx],al
   140037f15:	add    BYTE PTR [rax],al
   140037f17:	add    bl,dh
   140037f19:	fld    DWORD PTR [rdx]
   140037f1b:	add    BYTE PTR [rdx],al
   140037f1d:	add    BYTE PTR [rax],al
   140037f1f:	add    BYTE PTR [rax],cl
   140037f21:	fiadd  DWORD PTR [rdx]
   140037f23:	add    BYTE PTR [rbx],al
   140037f25:	add    BYTE PTR [rax],al
   140037f27:	add    BYTE PTR [rip+0x40002da],bl        # 0x144038207
   140037f2d:	add    BYTE PTR [rax],al
   140037f2f:	add    BYTE PTR [rdx],dh
   140037f31:	fiadd  DWORD PTR [rdx]
   140037f33:	add    BYTE PTR [rip+0x47000000],al        # 0x187037f39
   140037f39:	fiadd  DWORD PTR [rdx]
   140037f3b:	add    BYTE PTR [rsi],al
   140037f3d:	add    BYTE PTR [rax],al
   140037f3f:	add    BYTE PTR [rdx+rbx*8+0x2],bl
   140037f43:	add    BYTE PTR [rdi],al
   140037f45:	add    BYTE PTR [rax],al
   140037f47:	add    BYTE PTR [rcx-0x26],dh
   140037f4a:	add    al,BYTE PTR [rax]
   140037f4c:	or     BYTE PTR [rax],al
   140037f4e:	add    BYTE PTR [rax],al
   140037f50:	xchg   dl,bl
   140037f52:	add    al,BYTE PTR [rax]
   140037f54:	or     DWORD PTR [rax],eax
   140037f56:	add    BYTE PTR [rax],al
   140037f58:	fiadd  DWORD PTR [rdx]
   140037f5b:	add    BYTE PTR [rdx],cl
   140037f5d:	add    BYTE PTR [rax],al
   140037f5f:	add    BYTE PTR [rax+0xb0002da],dh
   140037f65:	add    BYTE PTR [rax],al
   140037f67:	add    ch,al
   140037f69:	fiadd  DWORD PTR [rdx]
   140037f6b:	add    BYTE PTR [rax+rax*1],cl
   140037f6e:	add    BYTE PTR [rax],al
   140037f70:	fcmovu st,st(2)
   140037f72:	add    al,BYTE PTR [rax]
   140037f74:	or     eax,0xef000000
   140037f79:	fiadd  DWORD PTR [rdx]
   140037f7b:	add    BYTE PTR [rsi],cl
   140037f7d:	add    BYTE PTR [rax],al
   140037f7f:	add    BYTE PTR [rbx+rbx*8],al
   140037f82:	add    al,BYTE PTR [rax]
   140037f84:	(bad)  
   140037f85:	in     eax,0x1
   140037f87:	add    bh,bh
   140037f89:	(bad)  
   140037f8a:	(bad)  
   140037f8b:	inc    DWORD PTR [rax+0xf0001e5]
   140037f91:	add    BYTE PTR [rax],al
   140037f93:	add    BYTE PTR [rsi+0xe0001e5],cl
   140037f99:	add    BYTE PTR [rax],al
   140037f9b:	add    BYTE PTR [rbp+riz*8+0xd0001],bl
   140037fa2:	add    BYTE PTR [rax],al
   140037fa4:	stos   BYTE PTR es:[rdi],al
   140037fa5:	in     eax,0x1
   140037fa7:	add    BYTE PTR [rax+rax*1],cl
   140037faa:	add    BYTE PTR [rax],al
   140037fac:	mov    eax,0xb0001e5
   140037fb1:	add    BYTE PTR [rax],al
   140037fb3:	add    dh,al
   140037fb5:	in     eax,0x1
   140037fb7:	add    BYTE PTR [rdx],cl
   140037fb9:	add    BYTE PTR [rax],al
   140037fbb:	add    ah,dl
   140037fbd:	in     eax,0x1
   140037fbf:	add    BYTE PTR [rcx],cl
   140037fc1:	add    BYTE PTR [rax],al
   140037fc3:	add    dl,ah
   140037fc5:	in     eax,0x1
   140037fc7:	add    BYTE PTR [rax],cl
   140037fc9:	add    BYTE PTR [rax],al
   140037fcb:	add    al,dh
   140037fcd:	in     eax,0x1
   140037fcf:	add    BYTE PTR [rdi],al
   140037fd1:	add    BYTE PTR [rax],al
   140037fd3:	add    dh,bh
   140037fd5:	in     eax,0x1
   140037fd7:	add    BYTE PTR [rsi],al
   140037fd9:	add    BYTE PTR [rax],al
   140037fdb:	add    BYTE PTR [rsi+riz*8],cl
   140037fde:	add    DWORD PTR [rax],eax
   140037fe0:	add    eax,0x1a000000
   140037fe5:	out    0x1,al
   140037fe7:	add    BYTE PTR [rax+rax*1],al
   140037fea:	add    BYTE PTR [rax],al
   140037fec:	sub    dh,ah
   140037fee:	add    DWORD PTR [rax],eax
   140037ff0:	add    eax,DWORD PTR [rax]
   140037ff2:	add    BYTE PTR [rax],al
   140037ff4:	ss out 0x1,al
   140037ff7:	add    BYTE PTR [rdx],al
   140037ff9:	add    BYTE PTR [rax],al
   140037ffb:	add    BYTE PTR [rsi+riz*8+0x1],al
   140037fff:	add    BYTE PTR [rcx],al
   140038001:	add    BYTE PTR [rax],al
   140038003:	add    BYTE PTR [rdx-0x1a],dl
   140038006:	add    DWORD PTR [rax],eax
   140038008:	add    BYTE PTR [rax],al
   14003800a:	add    BYTE PTR [rax],al
   14003800c:	(bad)  
   14003800d:	out    0x1,al
   14003800f:	add    bh,bh
   140038011:	(bad)  
   140038012:	(bad)  
   140038013:	call   QWORD PTR [rcx]
   140038015:	lar    eax,WORD PTR [rax]
   140038018:	(bad)  
   140038019:	push   rdx
   14003801a:	add    dh,BYTE PTR [rax]
   14003801c:	fcmovbe st,st(1)
   14003801e:	add    al,BYTE PTR [rax]
   140038020:	movabs al,ds:0xff0001e7f000034f
   140038029:	(bad)  
   14003802a:	(bad)  
   14003802b:	call   QWORD PTR [rax+rbp*8]
   14003802e:	add    DWORD PTR [rax],eax
   140038030:	add    BYTE PTR [rax],al
   140038032:	add    BYTE PTR [rax],al
   140038034:	add    edx,ebp
   140038036:	add    DWORD PTR [rax],eax
   140038038:	(bad)  
   140038039:	(bad)  
   14003803a:	(bad)  
   14003803b:	call   FWORD PTR [rcx]
   14003803d:	sub    al,0x5
   14003803f:	add    BYTE PTR [rdx],bl
   140038041:	xor    al,0xdf
   140038043:	add    BYTE PTR [rcx],cl
   140038045:	add    esp,ebx
   140038047:	add    BYTE PTR [rdx],al
   140038049:	jo     0x14003804b
   14003804b:	add    al,ah
   14003804d:	rol    DWORD PTR [rdx],1
   14003804f:	add    BYTE PTR [rax+0x4f],dh
   140038052:	add    eax,DWORD PTR [rax]
   140038054:	rol    BYTE PTR [rsi],cl
   140038056:	add    BYTE PTR [rax],al
   140038058:	and    dl,ch
   14003805a:	add    DWORD PTR [rax],eax
   14003805c:	(bad)  
   14003805d:	(bad)  
   14003805e:	(bad)  
   14003805f:	call   FWORD PTR [rbx-0x16]
   140038062:	add    DWORD PTR [rax],eax
   140038064:	add    BYTE PTR [rax],al
   140038066:	add    BYTE PTR [rax],al
   140038068:	retf   
   140038069:	(bad)  
   14003806a:	add    DWORD PTR [rax],eax
   14003806c:	add    DWORD PTR [rax],eax
   14003806e:	add    BYTE PTR [rax],al
   140038070:	(bad)  
   140038071:	(bad)  
   140038072:	add    DWORD PTR [rax],eax
   140038074:	add    al,BYTE PTR [rax]
   140038076:	add    BYTE PTR [rax],al
   140038078:	call   0x141038267
   14003807d:	add    BYTE PTR [rax],al
   14003807f:	add    BYTE PTR [rax],ch
   140038081:	jmp    0x140038084
   140038083:	add    BYTE PTR [rax],al
   140038085:	add    BYTE PTR [rax],al
   140038087:	add    BYTE PTR [rbx+rbp*8],dh
   14003808a:	add    DWORD PTR [rax],eax
   14003808c:	(bad)  
   14003808d:	(bad)  
   14003808e:	(bad)  
   14003808f:	call   FWORD PTR [rcx]
   140038091:	sub    al,0x5
   140038093:	add    BYTE PTR [rdx],bl
   140038095:	xor    al,0xdf
   140038097:	add    BYTE PTR [rcx],cl
   140038099:	add    esp,ebx
   14003809b:	add    BYTE PTR [rdx],al
   14003809d:	jo     0x14003809f
   14003809f:	add    al,ah
   1400380a1:	rol    DWORD PTR [rdx],1
   1400380a3:	add    BYTE PTR [rax+0x4f],al
   1400380a6:	add    eax,DWORD PTR [rax]
   1400380a8:	rol    BYTE PTR [rsi],cl
   1400380aa:	add    BYTE PTR [rax],al
   1400380ac:	(bad)  
   1400380ad:	jmp    0x1400380b0
   1400380af:	add    bh,bh
   1400380b1:	(bad)  
   1400380b2:	(bad)  
   1400380b3:	call   FWORD PTR [rbx+0x1eb]
   1400380b9:	add    BYTE PTR [rax],al
   1400380bb:	add    BYTE PTR [rbx],cl
   1400380bd:	in     al,dx
   1400380be:	add    DWORD PTR [rax],eax
   1400380c0:	add    DWORD PTR [rax],eax
   1400380c2:	add    BYTE PTR [rax],al
   1400380c4:	(bad)  
   1400380c5:	in     al,dx
   1400380c6:	add    DWORD PTR [rax],eax
   1400380c8:	add    al,BYTE PTR [rax]
   1400380ca:	add    BYTE PTR [rax],al
   1400380cc:	sub    ah,ch
   1400380ce:	add    DWORD PTR [rax],eax
   1400380d0:	add    DWORD PTR [rax],eax
   1400380d2:	add    BYTE PTR [rax],al
   1400380d4:	push   0x1ec
   1400380d9:	add    BYTE PTR [rax],al
   1400380db:	add    BYTE PTR [rsp+rbp*8+0x1],dh
   1400380df:	add    bh,bh
   1400380e1:	(bad)  
   1400380e2:	(bad)  
   1400380e3:	call   FWORD PTR [rcx]
   1400380e5:	rex or eax,0xfb742f00
   1400380eb:	add    BYTE PTR [rbx],ch
   1400380ed:	fs cli 
   1400380ef:	add    BYTE PTR [rdi],ah
   1400380f1:	xor    al,0xf9
   1400380f3:	add    BYTE PTR [rdx],bl
   1400380f5:	add    edx,esi
   1400380f7:	add    BYTE PTR [rax+rsi*8],cl
   1400380fa:	or     ah,al
   1400380fc:	or     al,dl
   1400380fe:	(bad)  
   1400380ff:	rol    BYTE PTR [rax+rdx*2],0x0
   140038103:	add    al,ah
   140038105:	rol    DWORD PTR [rdx],1
   140038107:	add    BYTE PTR [rax],dl
   140038109:	rex.WRXB add r8,QWORD PTR [r8]
   14003810c:	(bad)  
   14003810d:	(bad)  
   14003810e:	add    BYTE PTR [rax],al
   140038110:	(bad)  
   140038111:	(bad)  
   140038112:	(bad)  
   140038113:	jmp    QWORD PTR [rax]
   140038115:	fild   DWORD PTR [rdx]
   140038117:	add    BYTE PTR [rax],al
   140038119:	add    BYTE PTR [rax],al
   14003811b:	add    BYTE PTR [rsi],ch
   14003811d:	fild   DWORD PTR [rdx]
   14003811f:	add    BYTE PTR [rax],al
   140038121:	add    BYTE PTR [rax],al
   140038123:	add    BYTE PTR [rbx+rbx*8],bh
   140038126:	add    al,BYTE PTR [rax]
   140038128:	mov    al,0xec
   14003812a:	add    DWORD PTR [rax],eax
   14003812c:	(bad)  
   14003812d:	(bad)  
   14003812e:	(bad)  
   14003812f:	(bad)  
   140038130:	jmp    0x14003811f
   140038132:	add    DWORD PTR [rax],eax
   140038134:	add    BYTE PTR [rax],al
   140038136:	add    BYTE PTR [rax],al
   140038138:	mov    esp,0x10001ef
   14003813d:	add    BYTE PTR [rax],al
   14003813f:	add    ch,bh
   140038141:	out    dx,eax
   140038142:	add    DWORD PTR [rax],eax
   140038144:	add    BYTE PTR [rax],al
   140038146:	add    BYTE PTR [rax],al
   140038148:	xor    eax,esi
   14003814a:	add    DWORD PTR [rax],eax
   14003814c:	add    al,BYTE PTR [rax]
   14003814e:	add    BYTE PTR [rax],al
   140038150:	jae    0x140038142
   140038152:	add    DWORD PTR [rax],eax
   140038154:	add    BYTE PTR [rax],al
   140038156:	add    BYTE PTR [rax],al
   140038158:	test   BYTE PTR gs:[rcx],0x0
   14003815c:	(bad)  
   14003815d:	(bad)  
   14003815e:	(bad)  
   14003815f:	jmp    QWORD PTR [rax+0x1f6]
   140038165:	add    BYTE PTR [rax],al
   140038167:	add    BYTE PTR [rcx],al
   140038169:	cs add al,0x0
   14003816c:	cs je  0x140038175
   14003816f:	add    BYTE PTR [rsi],al
   140038171:	xor    al,BYTE PTR [rdx]
   140038173:	xor    BYTE PTR [rcx],bl
   140038175:	cs (bad) 
   140038177:	add    BYTE PTR [rsp+rsi*1],bl
   14003817a:	cmp    eax,0x36010b00
   14003817f:	add    BYTE PTR [rax+rsi*2],al
   140038182:	add    esp,DWORD PTR [rax+0x2]
   140038185:	push   rax
   140038186:	add    BYTE PTR [rax],al
   140038188:	loopne 0x14003815b
   14003818a:	add    al,BYTE PTR [rax]
   14003818c:	loopne 0x1400381dc
   14003818e:	add    eax,DWORD PTR [rax]
   140038190:	movabs ds:0xff0001f840000001,al
   140038199:	(bad)  
   14003819a:	(bad)  
   14003819b:	call   rcx
   14003819d:	clc    
   14003819e:	add    DWORD PTR [rax],eax
   1400381a0:	add    BYTE PTR [rax],al
   1400381a2:	add    BYTE PTR [rax],al
   1400381a4:	loop   0x14003819e
   1400381a6:	add    DWORD PTR [rax],eax
   1400381a8:	(bad)  
   1400381a9:	(bad)  
   1400381aa:	(bad)  
   1400381ab:	call   FWORD PTR [rcx]
   1400381ad:	sbb    eax,DWORD PTR [rbx]
   1400381af:	add    BYTE PTR [rcx],cl
   1400381b1:	add    DWORD PTR [rsi+0x300200],ebx
   1400381b7:	add    ah,ah
   1400381b9:	int3   
   1400381ba:	add    al,BYTE PTR [rax]
   1400381bc:	loopne 0x1400381c2
   1400381be:	add    BYTE PTR [rax],al
   1400381c0:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x1a20781c7
   1400381c6:	add    BYTE PTR [rax],al
   1400381c8:	fcmovbe st,st(1)
   1400381ca:	add    al,BYTE PTR [rax]
   1400381cc:	rex push rdx
   1400381ce:	add    eax,DWORD PTR [rax]
   1400381d0:	rex cli 
   1400381d2:	add    DWORD PTR [rax],eax
   1400381d4:	(bad)  
   1400381d5:	(bad)  
   1400381d6:	(bad)  
   1400381d7:	call   FWORD PTR [rbp-0x6]
   1400381da:	add    DWORD PTR [rax],eax
   1400381dc:	add    BYTE PTR [rax],al
   1400381de:	add    BYTE PTR [rax],al
   1400381e0:	imul   edi,edx,0x1
   1400381e3:	add    bh,bh
   1400381e5:	(bad)  
   1400381e6:	(bad)  
   1400381e7:	call   QWORD PTR [rcx]
   1400381e9:	and    al,0xa
   1400381eb:	add    BYTE PTR [rsp+rdx*2],ah
   1400381ee:	(bad)  
   1400381ef:	add    BYTE PTR [rdi],bl
   1400381f1:	xor    al,0xd
   1400381f3:	add    BYTE PTR [rcx],dl
   1400381f5:	push   rdx
   1400381f6:	or     eax,0x9e00bf0
   1400381fb:	rol    BYTE PTR [rdi],0x70
   1400381fe:	(bad)  
   1400381ff:	(bad)  
   140038200:	fcmovbe st,st(1)
   140038202:	add    al,BYTE PTR [rax]
   140038204:	adc    BYTE PTR [rdx+0x3],dl
   140038207:	add    bh,bh
   140038209:	(bad)  
   14003820a:	(bad)  
   14003820b:	call   QWORD PTR [rax-0x25]
   14003820e:	add    al,BYTE PTR [rax]
   140038210:	add    BYTE PTR [rax],al
   140038212:	add    BYTE PTR [rax],al
   140038214:	pop    rsi
   140038215:	fild   DWORD PTR [rdx]
   140038217:	add    BYTE PTR [rcx],al
   140038219:	add    BYTE PTR [rax],al
   14003821b:	add    BYTE PTR [rbx-0x25],dh
   14003821e:	add    al,BYTE PTR [rax]
   140038220:	add    al,BYTE PTR [rax]
   140038222:	add    BYTE PTR [rax],al
   140038224:	mov    bl,bl
   140038226:	add    al,BYTE PTR [rax]
   140038228:	add    eax,DWORD PTR [rax]
   14003822a:	add    BYTE PTR [rax],al
   14003822c:	popf   
   14003822d:	fild   DWORD PTR [rdx]
   14003822f:	add    BYTE PTR [rax+rax*1],al
   140038232:	add    BYTE PTR [rax],al
   140038234:	mov    dl,0xdb
   140038236:	add    al,BYTE PTR [rax]
   140038238:	add    eax,0xc7000000
   14003823d:	fild   DWORD PTR [rdx]
   14003823f:	add    BYTE PTR [rsi],al
   140038241:	add    BYTE PTR [rax],al
   140038243:	add    ah,bl
   140038245:	fild   DWORD PTR [rdx]
   140038247:	add    BYTE PTR [rdi],al
   140038249:	add    BYTE PTR [rax],al
   14003824b:	add    cl,dh
   14003824d:	fild   DWORD PTR [rdx]
   14003824f:	add    BYTE PTR [rax],cl
   140038251:	add    BYTE PTR [rax],al
   140038253:	add    BYTE PTR [rsi],al
   140038255:	fadd   QWORD PTR [rdx]
   140038257:	add    BYTE PTR [rcx],cl
   140038259:	add    BYTE PTR [rax],al
   14003825b:	add    BYTE PTR [rbx],bl
   14003825d:	fadd   QWORD PTR [rdx]
   14003825f:	add    BYTE PTR [rdx],cl
   140038261:	add    BYTE PTR [rax],al
   140038263:	add    BYTE PTR [rax],dh
   140038265:	fadd   QWORD PTR [rdx]
   140038267:	add    BYTE PTR [rbx],cl
   140038269:	add    BYTE PTR [rax],al
   14003826b:	add    BYTE PTR [rbp-0x24],al
   14003826e:	add    al,BYTE PTR [rax]
   140038270:	or     al,0x0
   140038272:	add    BYTE PTR [rax],al
   140038274:	pop    rdx
   140038275:	fadd   QWORD PTR [rdx]
   140038277:	add    BYTE PTR [rip+0x6f000000],cl        # 0x1af03827d
   14003827d:	fadd   QWORD PTR [rdx]
   14003827f:	add    BYTE PTR [rsi],cl
   140038281:	add    BYTE PTR [rax],al
   140038283:	add    BYTE PTR [rsp+rbx*8+0xf0002],al
   14003828a:	add    BYTE PTR [rax],al
   14003828c:	cdq    
   14003828d:	fadd   QWORD PTR [rdx]
   14003828f:	add    BYTE PTR [rax],dl
   140038291:	add    BYTE PTR [rax],al
   140038293:	add    BYTE PTR [rsi-0x6ffffd24],ch
   140038299:	cli    
   14003829a:	add    DWORD PTR [rax],eax
   14003829c:	(bad)  
   14003829d:	(bad)  
   14003829e:	(bad)  
   14003829f:	dec    ebx
   1400382a1:	cli    
   1400382a2:	add    DWORD PTR [rax],eax
   1400382a4:	add    BYTE PTR [rax],al
   1400382a6:	add    BYTE PTR [rax],al
   1400382a8:	lock cli 
   1400382aa:	add    DWORD PTR [rax],eax
   1400382ac:	add    DWORD PTR [rax],eax
   1400382ae:	add    BYTE PTR [rax],al
   1400382b0:	add    al,0xfb
   1400382b2:	add    DWORD PTR [rax],eax
   1400382b4:	add    al,BYTE PTR [rax]
   1400382b6:	add    BYTE PTR [rax],al
   1400382b8:	sbb    bl,bh
   1400382ba:	add    DWORD PTR [rax],eax
   1400382bc:	add    eax,DWORD PTR [rax]
   1400382be:	add    BYTE PTR [rax],al
   1400382c0:	sub    al,0xfb
   1400382c2:	add    DWORD PTR [rax],eax
   1400382c4:	add    al,0x0
   1400382c6:	add    BYTE PTR [rax],al
   1400382c8:	rex.RXB sti 
   1400382ca:	add    DWORD PTR [rax],eax
   1400382cc:	add    eax,0x62000000
   1400382d1:	sti    
   1400382d2:	add    DWORD PTR [rax],eax
   1400382d4:	(bad)  
   1400382d5:	add    BYTE PTR [rax],al
   1400382d7:	add    BYTE PTR [rbp-0x5],bh
   1400382da:	add    DWORD PTR [rax],eax
   1400382dc:	(bad)  
   1400382dd:	add    BYTE PTR [rax],al
   1400382df:	add    BYTE PTR [rax+0x80001fb],bl
   1400382e5:	add    BYTE PTR [rax],al
   1400382e7:	add    BYTE PTR [rbx+rdi*8+0x90001],ch
   1400382ee:	add    BYTE PTR [rax],al
   1400382f0:	sar    bl,0x1
   1400382f3:	add    BYTE PTR [rdx],cl
   1400382f5:	add    BYTE PTR [rax],al
   1400382f7:	add    ah,dl
   1400382f9:	sti    
   1400382fa:	add    DWORD PTR [rax],eax
   1400382fc:	or     eax,DWORD PTR [rax]
   1400382fe:	add    BYTE PTR [rax],al
   140038300:	call   0x14c038500
   140038305:	add    BYTE PTR [rax],al
   140038307:	add    ah,bh
   140038309:	sti    
   14003830a:	add    DWORD PTR [rax],eax
   14003830c:	or     eax,0x10000000
   140038311:	cld    
   140038312:	add    DWORD PTR [rax],eax
   140038314:	(bad)  
   140038315:	add    BYTE PTR [rax],al
   140038317:	add    BYTE PTR [rsp+rdi*8],ah
   14003831a:	add    DWORD PTR [rax],eax
   14003831c:	sldt   WORD PTR [rax]
   14003831f:	add    BYTE PTR [rax],bh
   140038321:	cld    
   140038322:	add    DWORD PTR [rax],eax
   140038324:	adc    BYTE PTR [rax],al
   140038326:	add    BYTE PTR [rax],al
   140038328:	rex.WR cld 
   14003832a:	add    DWORD PTR [rax],eax
   14003832c:	adc    DWORD PTR [rax],eax
   14003832e:	add    BYTE PTR [rax],al
   140038330:	fs cld 
   140038332:	add    DWORD PTR [rax],eax
   140038334:	(bad)  
   140038335:	(bad)  
   140038336:	(bad)  
   140038337:	call   QWORD PTR [rcx]
   140038339:	adc    eax,DWORD PTR [rdx]
   14003833b:	add    BYTE PTR [rdx],cl
   14003833d:	push   rdx
   14003833e:	(bad)  
   14003833f:	xor    dl,bl
   140038341:	rol    DWORD PTR [rdx],1
   140038343:	add    al,ah
   140038345:	push   rcx
   140038346:	add    eax,DWORD PTR [rax]
   140038348:	(bad)  
   140038349:	(bad)  
   14003834a:	(bad)  
   14003834b:	call   rax
   14003834d:	fadd   QWORD PTR [rdx]
   14003834f:	add    BYTE PTR [rax],al
   140038351:	add    BYTE PTR [rax],al
   140038353:	add    dh,bl
   140038355:	fadd   QWORD PTR [rdx]
   140038357:	add    BYTE PTR [rcx],al
   140038359:	add    BYTE PTR [rax],al
   14003835b:	add    bl,dh
   14003835d:	fadd   QWORD PTR [rdx]
   14003835f:	add    BYTE PTR [rdx],al
   140038361:	add    BYTE PTR [rax],al
   140038363:	add    BYTE PTR [rax],cl
   140038365:	fld    QWORD PTR [rdx]
   140038367:	add    BYTE PTR [rbx],al
   140038369:	add    BYTE PTR [rax],al
   14003836b:	add    BYTE PTR [rip+0x40002dd],bl        # 0x14403864e
   140038371:	add    BYTE PTR [rax],al
   140038373:	add    BYTE PTR [rdx],dh
   140038375:	fld    QWORD PTR [rdx]
   140038377:	add    BYTE PTR [rip+0x47000000],al        # 0x18703837d
   14003837d:	fld    QWORD PTR [rdx]
   14003837f:	add    BYTE PTR [rsi],al
   140038381:	add    BYTE PTR [rax],al
   140038383:	add    BYTE PTR [rbp+rbx*8+0x2],bl
   140038387:	add    BYTE PTR [rdi],al
   140038389:	add    BYTE PTR [rax],al
   14003838b:	add    BYTE PTR [rcx-0x23],dh
   14003838e:	add    al,BYTE PTR [rax]
   140038390:	or     BYTE PTR [rax],al
   140038392:	add    BYTE PTR [rax],al
   140038394:	xchg   ch,bl
   140038396:	add    al,BYTE PTR [rax]
   140038398:	or     DWORD PTR [rax],eax
   14003839a:	add    BYTE PTR [rax],al
   14003839c:	fld    QWORD PTR [rdx]
   14003839f:	add    BYTE PTR [rdx],cl
   1400383a1:	add    BYTE PTR [rax],al
   1400383a3:	add    BYTE PTR [rax+0xb0002dd],dh
   1400383a9:	add    BYTE PTR [rax],al
   1400383ab:	add    ch,al
   1400383ad:	fld    QWORD PTR [rdx]
   1400383af:	add    BYTE PTR [rax+rax*1],cl
   1400383b2:	add    BYTE PTR [rax],al
   1400383b4:	fcmovu st,st(5)
   1400383b6:	add    al,BYTE PTR [rax]
   1400383b8:	or     eax,0xef000000
   1400383bd:	fld    QWORD PTR [rdx]
   1400383bf:	add    BYTE PTR [rsi],cl
   1400383c1:	add    BYTE PTR [rax],al
   1400383c3:	add    BYTE PTR [rsi+rbx*8],al
   1400383c6:	add    al,BYTE PTR [rax]
   1400383c8:	sldt   WORD PTR [rax]
   1400383cb:	add    BYTE PTR [rcx],bl
   1400383cd:	fiadd  WORD PTR [rdx]
   1400383cf:	add    BYTE PTR [rax-0xfffe04],dh
   1400383d5:	(bad)  
   1400383d6:	(bad)  
   1400383d7:	call   rax
   1400383d9:	cld    
   1400383da:	add    DWORD PTR [rax],eax
   1400383dc:	adc    BYTE PTR [rax],al
   1400383de:	add    BYTE PTR [rax],al
   1400383e0:	fdivp  st(4),st
   1400383e2:	add    DWORD PTR [rax],eax
   1400383e4:	sldt   WORD PTR [rax]
   1400383e7:	add    ah,ch
   1400383e9:	cld    
   1400383ea:	add    DWORD PTR [rax],eax
   1400383ec:	(bad)  
   1400383ed:	add    BYTE PTR [rax],al
   1400383ef:	add    dl,bh
   1400383f1:	cld    
   1400383f2:	add    DWORD PTR [rax],eax
   1400383f4:	or     eax,0x8000000
   1400383f9:	std    
   1400383fa:	add    DWORD PTR [rax],eax
   1400383fc:	or     al,0x0
   1400383fe:	add    BYTE PTR [rax],al
   140038400:	(bad)  
   140038401:	std    
   140038402:	add    DWORD PTR [rax],eax
   140038404:	or     eax,DWORD PTR [rax]
   140038406:	add    BYTE PTR [rax],al
   140038408:	and    al,0xfd
   14003840a:	add    DWORD PTR [rax],eax
   14003840c:	or     al,BYTE PTR [rax]
   14003840e:	add    BYTE PTR [rax],al
   140038410:	xor    bh,ch
   140038412:	add    DWORD PTR [rax],eax
   140038414:	or     DWORD PTR [rax],eax
   140038416:	add    BYTE PTR [rax],al
   140038418:	rex std 
   14003841a:	add    DWORD PTR [rax],eax
   14003841c:	or     BYTE PTR [rax],al
   14003841e:	add    BYTE PTR [rax],al
   140038420:	rex.WRX std 
   140038422:	add    DWORD PTR [rax],eax
   140038424:	(bad)  
   140038425:	add    BYTE PTR [rax],al
   140038427:	add    BYTE PTR [rbp+rdi*8+0x1],bl
   14003842b:	add    BYTE PTR [rsi],al
   14003842d:	add    BYTE PTR [rax],al
   14003842f:	add    BYTE PTR [rdx-0x3],ch
   140038432:	add    DWORD PTR [rax],eax
   140038434:	add    eax,0x78000000
   140038439:	std    
   14003843a:	add    DWORD PTR [rax],eax
   14003843c:	add    al,0x0
   14003843e:	add    BYTE PTR [rax],al
   140038440:	xchg   ch,bh
   140038442:	add    DWORD PTR [rax],eax
   140038444:	add    eax,DWORD PTR [rax]
   140038446:	add    BYTE PTR [rax],al
   140038448:	xchg   esp,eax
   140038449:	std    
   14003844a:	add    DWORD PTR [rax],eax
   14003844c:	add    al,BYTE PTR [rax]
   14003844e:	add    BYTE PTR [rax],al
   140038450:	movabs ds:0xb0000000010001fd,al
   140038459:	std    
   14003845a:	add    DWORD PTR [rax],eax
   14003845c:	add    BYTE PTR [rax],al
   14003845e:	add    BYTE PTR [rax],al
   140038460:	mov    esi,0xff0001fd
   140038465:	(bad)  
   140038466:	(bad)  
   140038467:	call   QWORD PTR [rcx]
   140038469:	adc    al,0x4
   14003846b:	add    BYTE PTR [rsp+rsi*1],dl
   14003846e:	or     al,BYTE PTR [rax]
   140038470:	(bad)  
   140038471:	push   rdx
   140038472:	add    dh,BYTE PTR [rax-0x26]
   140038475:	rol    DWORD PTR [rdx],1
   140038477:	add    BYTE PTR [rax+0x60000351],dh
   14003847d:	inc    DWORD PTR [rcx]
   14003847f:	add    bh,bh
   140038481:	(bad)  
   140038482:	(bad)  
   140038483:	jmp    FWORD PTR [rip+0x200]        # 0x140038689
   140038489:	add    BYTE PTR [rax],al
   14003848b:	add    BYTE PTR [rax+rax*1],bh
   14003848e:	add    al,BYTE PTR [rax]
   140038490:	(bad)  
   140038491:	(bad)  
   140038492:	(bad)  
   140038493:	call   FWORD PTR [rcx]
   140038495:	cs (bad) 
   140038497:	add    BYTE PTR [rsp+riz*2],bl
   14003849a:	loopne 0x14003849c
   14003849c:	sbb    BYTE PTR [rdi+rbx*8],dh
   14003849f:	add    BYTE PTR [rbx],cl
   1400384a1:	add    esp,ebx
   1400384a3:	add    BYTE PTR [rax+rsi*2],al
   1400384a6:	add    BYTE PTR [rax],al
   1400384a8:	loopne 0x14003847b
   1400384aa:	add    al,BYTE PTR [rax]
   1400384ac:	adc    BYTE PTR [rcx+0x3],0x0
   1400384b0:	rol    BYTE PTR [rsi],cl
   1400384b2:	add    BYTE PTR [rax],al
   1400384b4:	movabs al,ds:0xddffffffff000200
   1400384bd:	add    BYTE PTR [rdx],al
   1400384bf:	add    BYTE PTR [rax],al
   1400384c1:	add    BYTE PTR [rax],al
   1400384c3:	add    BYTE PTR [rdx+0x1],cl
   1400384c6:	add    al,BYTE PTR [rax]
   1400384c8:	add    DWORD PTR [rax],eax
   1400384ca:	add    BYTE PTR [rax],al
   1400384cc:	push   rbp
   1400384cd:	add    DWORD PTR [rdx],eax
   1400384cf:	add    BYTE PTR [rdx],al
   1400384d1:	add    BYTE PTR [rax],al
   1400384d3:	add    BYTE PTR [rdi+0x1],ah
   1400384d6:	add    al,BYTE PTR [rax]
   1400384d8:	add    DWORD PTR [rax],eax
   1400384da:	add    BYTE PTR [rax],al
   1400384dc:	mov    dh,0x1
   1400384de:	add    al,BYTE PTR [rax]
   1400384e0:	add    BYTE PTR [rax],al
   1400384e2:	add    BYTE PTR [rax],al
   1400384e4:	ret    0x201
   1400384e7:	add    bh,bh
   1400384e9:	(bad)  
   1400384ea:	(bad)  
   1400384eb:	call   FWORD PTR [rcx]
   1400384ed:	rex or eax,0x47742f00
   1400384f3:	add    DWORD PTR [rbx],ebp
   1400384f5:	rex.RX add DWORD PTR fs:[rdi],r12d
   1400384f9:	xor    al,0x45
   1400384fb:	add    DWORD PTR [rdx],ebx
   1400384fd:	add    DWORD PTR [rsi],edi
   1400384ff:	add    DWORD PTR [rax+rsi*8],ecx
   140038502:	or     ah,al
   140038504:	or     al,dl
   140038506:	(bad)  
   140038507:	rol    BYTE PTR [rax+rdx*2],0x0
   14003850b:	add    al,ah
   14003850d:	rol    DWORD PTR [rdx],1
   14003850f:	add    BYTE PTR [rax+0x51],dl
   140038512:	add    eax,DWORD PTR [rax]
   140038514:	loop   0x14003851f
   140038516:	add    BYTE PTR [rax],al
   140038518:	(bad)  
   140038519:	(bad)  
   14003851a:	(bad)  
   14003851b:	push   QWORD PTR [rax]
   14003851d:	fiadd  WORD PTR [rdx]
   14003851f:	add    BYTE PTR [rax],al
   140038521:	add    BYTE PTR [rax],al
   140038523:	add    BYTE PTR [rsi],bh
   140038525:	fiadd  WORD PTR [rdx]
   140038527:	add    BYTE PTR [rcx],al
   140038529:	add    BYTE PTR [rax],al
   14003852b:	add    BYTE PTR [rsi+rbx*8+0x2],cl
   14003852f:	add    BYTE PTR [rcx],al
   140038531:	add    BYTE PTR [rax],al
   140038533:	add    BYTE PTR [rdx-0x22],bl
   140038536:	add    al,BYTE PTR [rax]
   140038538:	add    BYTE PTR [rdx],al
   14003853a:	add    al,BYTE PTR [rax]
   14003853c:	(bad)  
   14003853d:	(bad)  
   14003853e:	(bad)  
   14003853f:	call   QWORD PTR [rdx]
   140038541:	add    al,0x2
   140038543:	add    BYTE PTR [rax],al
   140038545:	add    BYTE PTR [rax],al
   140038547:	add    BYTE PTR [rdx+0x4],dl
   14003854a:	add    al,BYTE PTR [rax]
   14003854c:	add    DWORD PTR [rax],eax
   14003854e:	add    BYTE PTR [rax],al
   140038550:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038551:	(bad)  
   140038552:	add    al,BYTE PTR [rax]
   140038554:	add    al,BYTE PTR [rax]
   140038556:	add    BYTE PTR [rax],al
   140038558:	int    0x6
   14003855a:	add    al,BYTE PTR [rax]
   14003855c:	add    DWORD PTR [rax],eax
   14003855e:	add    BYTE PTR [rax],al
   140038560:	fiadd  DWORD PTR [rsi]
   140038562:	add    al,BYTE PTR [rax]
   140038564:	add    al,BYTE PTR [rax]
   140038566:	add    BYTE PTR [rax],al
   140038568:	icebp  
   140038569:	(bad)  
   14003856a:	add    al,BYTE PTR [rax]
   14003856c:	add    DWORD PTR [rax],eax
   14003856e:	add    BYTE PTR [rax],al
   140038570:	stos   DWORD PTR es:[rdi],eax
   140038571:	(bad)  
   140038572:	add    al,BYTE PTR [rax]
   140038574:	add    eax,DWORD PTR [rax]
   140038576:	add    BYTE PTR [rax],al
   140038578:	mov    BYTE PTR [rax],cl
   14003857a:	add    al,BYTE PTR [rax]
   14003857c:	add    DWORD PTR [rax],eax
   14003857e:	add    BYTE PTR [rax],al
   140038580:	xor    DWORD PTR [rcx],ecx
   140038582:	add    al,BYTE PTR [rax]
   140038584:	add    BYTE PTR [rax],al
   140038586:	add    BYTE PTR [rax],al
   140038588:	cmp    eax,0xff000209
   14003858d:	(bad)  
   14003858e:	(bad)  
   14003858f:	call   FWORD PTR [rcx]
   140038591:	rex or eax,0xd3742f00
   140038597:	add    BYTE PTR [rbx],ch
   140038599:	rol    BYTE PTR fs:[rax],cl
   14003859c:	(bad)  
   14003859d:	xor    al,0xd1
   14003859f:	add    BYTE PTR [rdx],bl
   1400385a1:	add    edx,ecx
   1400385a3:	add    BYTE PTR [rax+rsi*8],cl
   1400385a6:	or     ah,al
   1400385a8:	or     al,dl
   1400385aa:	(bad)  
   1400385ab:	rol    BYTE PTR [rax+rdx*2],0x0
   1400385af:	add    al,ah
   1400385b1:	rol    DWORD PTR [rdx],1
   1400385b3:	add    BYTE PTR [rax],ah
   1400385b5:	push   rcx
   1400385b6:	add    eax,DWORD PTR [rax]
   1400385b8:	rex.X (bad) 
   1400385ba:	add    BYTE PTR [rax],al
   1400385bc:	(bad)  
   1400385bd:	(bad)  
   1400385be:	(bad)  
   1400385bf:	push   QWORD PTR [rax-0x22]
   1400385c2:	add    al,BYTE PTR [rax]
   1400385c4:	(bad)  
   1400385c5:	(bad)  
   1400385c6:	(bad)  
   1400385c7:	(bad)  
   1400385c8:	jle    0x1400385a8
   1400385ca:	add    al,BYTE PTR [rax]
   1400385cc:	or     BYTE PTR [rcx],0x2
   1400385cf:	add    bh,bh
   1400385d1:	(bad)  
   1400385d2:	(bad)  
   1400385d3:	(bad)  
   1400385d4:	mov    esi,0x20a
   1400385d9:	add    BYTE PTR [rax],al
   1400385db:	add    dh,cl
   1400385dd:	or     al,BYTE PTR [rdx]
   1400385df:	add    bh,bh
   1400385e1:	(bad)  
   1400385e2:	(bad)  
   1400385e3:	jmp    FWORD PTR [rbp+rcx*1+0x2]
   1400385e7:	add    BYTE PTR [rcx],al
   1400385e9:	add    BYTE PTR [rax],al
   1400385eb:	add    BYTE PTR [rsi+rcx*1+0x2],bl
   1400385ef:	add    bh,bh
   1400385f1:	(bad)  
   1400385f2:	(bad)  
   1400385f3:	call   QWORD PTR [rcx]
   1400385f5:	sbb    al,0x8
   1400385f7:	add    BYTE PTR [rsp+rdx*2],bl
   1400385fa:	or     al,0x0
   1400385fc:	(bad)  
   1400385fd:	xor    al,0xb
   1400385ff:	add    BYTE PTR [rcx],cl
   140038601:	push   rdx
   140038602:	add    eax,0x27003e0
   140038607:	(bad)  
   140038608:	fcmovbe st,st(1)
   14003860a:	add    al,BYTE PTR [rax]
   14003860c:	lock push rax
   14003860e:	add    eax,DWORD PTR [rax]
   140038610:	(bad)  
   140038611:	(bad)  
   140038612:	(bad)  
   140038613:	call   QWORD PTR [rax+0x600002de]
   140038619:	lar    eax,WORD PTR [rax]
   14003861c:	(bad)  
   14003861d:	(bad)  
   14003861e:	(bad)  
   14003861f:	jmp    QWORD PTR [rdi+0x20f]
   140038625:	add    BYTE PTR [rax],al
   140038627:	add    BYTE PTR [rax],cl
   140038629:	adc    DWORD PTR [rdx],eax
   14003862b:	add    bh,bh
   14003862d:	(bad)  
   14003862e:	(bad)  
   14003862f:	call   QWORD PTR [rcx]
   140038631:	(bad)  
   140038632:	or     BYTE PTR [rax],al
   140038634:	(bad)  
   140038635:	or     eax,DWORD PTR fs:[rax]
   140038638:	sbb    DWORD PTR [rdx+rcx*1+0x0],edx
   14003863c:	adc    al,0x34
   14003863e:	or     DWORD PTR [rax],eax
   140038640:	(bad)  
   140038641:	push   rdx
   140038642:	add    dh,BYTE PTR [rax-0x26]
   140038645:	rol    DWORD PTR [rdx],1
   140038647:	add    al,al
   140038649:	push   rax
   14003864a:	add    eax,DWORD PTR [rax]
   14003864c:	xor    BYTE PTR [rcx],dl
   14003864e:	add    al,BYTE PTR [rax]
   140038650:	(bad)  
   140038651:	(bad)  
   140038652:	(bad)  
   140038653:	dec    esp
   140038655:	adc    DWORD PTR [rdx],eax
   140038657:	add    BYTE PTR [rax],al
   140038659:	add    BYTE PTR [rax],al
   14003865b:	add    BYTE PTR [rdx-0xfffded],bh
   140038661:	(bad)  
   140038662:	(bad)  
   140038663:	call   FWORD PTR [rcx]
   140038665:	rex or eax,0xd1742f00
   14003866b:	add    BYTE PTR [rbx],ch
   14003866d:	rol    BYTE PTR fs:[rax],1
   140038670:	(bad)  
   140038671:	xor    al,0xcf
   140038673:	add    BYTE PTR [rdx],bl
   140038675:	add    eax,ecx
   140038677:	add    BYTE PTR [rax+rsi*8],cl
   14003867a:	or     ah,al
   14003867c:	or     al,dl
   14003867e:	(bad)  
   14003867f:	rol    BYTE PTR [rax+rdx*2],0x0
   140038683:	add    al,ah
   140038685:	rol    DWORD PTR [rdx],1
   140038687:	add    BYTE PTR [rax+0x32000350],dl
   14003868d:	(bad)  
   14003868e:	add    BYTE PTR [rax],al
   140038690:	adc    al,0x2
   140038693:	add    bh,bh
   140038695:	(bad)  
   140038696:	(bad)  
   140038697:	call   QWORD PTR [rcx]
   140038699:	adc    eax,0x2
   14003869e:	add    BYTE PTR [rax],al
   1400386a0:	xor    al,0x15
   1400386a2:	add    al,BYTE PTR [rax]
   1400386a4:	(bad)  
   1400386a5:	(bad)  
   1400386a6:	(bad)  
   1400386a7:	call   FWORD PTR [rcx]
   1400386a9:	cs (bad) 
   1400386ab:	add    BYTE PTR [rsp+rsi*1],bl
   1400386ae:	cmp    eax,0x36010b00
   1400386b3:	add    BYTE PTR [rax+rsi*2],al
   1400386b6:	add    esp,DWORD PTR [rax+0x2]
   1400386b9:	push   rax
   1400386ba:	add    BYTE PTR [rax],al
   1400386bc:	loopne 0x14003868f
   1400386be:	add    al,BYTE PTR [rax]
   1400386c0:	(bad)  
   1400386c1:	push   rax
   1400386c2:	add    eax,DWORD PTR [rax]
   1400386c4:	movabs ds:0xff00021a20000001,al
   1400386cd:	(bad)  
   1400386ce:	(bad)  
   1400386cf:	push   QWORD PTR [rcx+0x21a]
   1400386d5:	add    BYTE PTR [rax],al
   1400386d7:	add    dl,al
   1400386d9:	sbb    al,BYTE PTR [rdx]
   1400386db:	add    bh,bh
   1400386dd:	(bad)  
   1400386de:	(bad)  
   1400386df:	call   FWORD PTR [rcx]
   1400386e1:	and    al,0x7
   1400386e3:	add    BYTE PTR [rdx],dl
   1400386e5:	fs push rsi
   1400386e7:	add    BYTE PTR [rdx],dl
   1400386e9:	xor    al,0x55
   1400386eb:	add    BYTE PTR [rdx],dl
   1400386ed:	add    DWORD PTR [rdx+0x0],edx
   1400386f0:	or     esi,DWORD PTR [rax+0x0]
   1400386f3:	add    ah,ah
   1400386f5:	int3   
   1400386f6:	add    al,BYTE PTR [rax]
   1400386f8:	add    BYTE PTR [rdx],0x0
   1400386fb:	add    BYTE PTR [rcx],dl
   1400386fd:	or     eax,0x62040001
   140038702:	add    BYTE PTR [rax],al
   140038704:	fcmovbe st,st(1)
   140038706:	add    al,BYTE PTR [rax]
   140038708:	nop
   140038709:	push   rbx
   14003870a:	add    eax,DWORD PTR [rax]
   14003870c:	rcr    BYTE PTR [rip+0xffffffffffff0002],0xff        # 0x140028715
   140038713:	(bad)  
   140038714:	fstp   QWORD PTR [rip+0x2]        # 0x14003871c
   14003871a:	add    BYTE PTR [rax],al
   14003871c:	jmp    0x14003873b
   14003871e:	add    al,BYTE PTR [rax]
   140038720:	(bad)  
   140038721:	(bad)  
   140038722:	(bad)  
   140038723:	call   QWORD PTR [rcx]
   140038725:	and    cl,BYTE PTR [rax]
   140038727:	add    BYTE PTR [rdx],ah
   140038729:	or     eax,DWORD PTR fs:[rax]
   14003872c:	sbb    eax,0x18000a54
   140038731:	xor    al,0x9
   140038733:	add    BYTE PTR [rdx],cl
   140038735:	push   rdx
   140038736:	(bad)  
   140038737:	jo     0x140038713
   140038739:	rol    DWORD PTR [rdx],1
   14003873b:	add    BYTE PTR [rax+0x53],ah
   14003873e:	add    eax,DWORD PTR [rax]
   140038740:	(bad)  
   140038741:	(bad)  
   140038742:	(bad)  
   140038743:	jmp    QWORD PTR [rax+0x2de]
   140038749:	add    BYTE PTR [rax],al
   14003874b:	add    BYTE PTR [rsi+0x10002de],ch
   140038751:	add    BYTE PTR [rax],al
   140038753:	add    bl,al
   140038755:	fiadd  WORD PTR [rdx]
   140038757:	add    BYTE PTR [rdx],al
   140038759:	add    BYTE PTR [rax],al
   14003875b:	add    al,bl
   14003875d:	fiadd  WORD PTR [rdx]
   14003875f:	add    BYTE PTR [rbx],al
   140038761:	add    BYTE PTR [rax],al
   140038763:	add    ch,ch
   140038765:	fiadd  WORD PTR [rdx]
   140038767:	add    BYTE PTR [rax+rax*1],al
   14003876a:	add    BYTE PTR [rax],al
   14003876c:	add    bl,bh
   14003876e:	add    al,BYTE PTR [rax]
   140038770:	add    eax,0x17000000
   140038775:	fild   WORD PTR [rdx]
   140038777:	add    BYTE PTR [rsi],al
   140038779:	add    BYTE PTR [rax],al
   14003877b:	add    BYTE PTR [rdi+rbx*8],ch
   14003877e:	add    al,BYTE PTR [rax]
   140038780:	(bad)  
   140038781:	add    BYTE PTR [rax],al
   140038783:	add    BYTE PTR [rcx-0x21],al
   140038786:	add    al,BYTE PTR [rax]
   140038788:	or     BYTE PTR [rax],al
   14003878a:	add    BYTE PTR [rax],al
   14003878c:	push   rsi
   14003878d:	fild   WORD PTR [rdx]
   14003878f:	add    BYTE PTR [rcx],cl
   140038791:	add    BYTE PTR [rax],al
   140038793:	add    BYTE PTR [rbx-0x21],ch
   140038796:	add    al,BYTE PTR [rax]
   140038798:	or     al,BYTE PTR [rax]
   14003879a:	add    BYTE PTR [rax],al
   14003879c:	sbb    bh,0x2
   14003879f:	add    BYTE PTR [rbx],cl
   1400387a1:	add    BYTE PTR [rax],al
   1400387a3:	add    BYTE PTR [rbp+0xc0002df],dl
   1400387a9:	add    BYTE PTR [rax],al
   1400387ab:	add    BYTE PTR [rdx+0xd0002df],ch
   1400387b1:	add    BYTE PTR [rax],al
   1400387b3:	add    BYTE PTR [rdi+0xe0002df],bh
   1400387b9:	add    BYTE PTR [rax],al
   1400387bb:	add    ah,dl
   1400387bd:	fild   WORD PTR [rdx]
   1400387bf:	add    BYTE PTR [rdi],cl
   1400387c1:	add    BYTE PTR [rax],al
   1400387c3:	add    cl,ch
   1400387c5:	fild   WORD PTR [rdx]
   1400387c7:	add    BYTE PTR [rax],dl
   1400387c9:	(bad)  
   1400387ca:	add    al,BYTE PTR [rax]
   1400387cc:	(bad)  
   1400387cd:	(bad)  
   1400387ce:	(bad)  
   1400387cf:	dec    DWORD PTR [rcx+0x1e]
   1400387d2:	add    al,BYTE PTR [rax]
   1400387d4:	add    BYTE PTR [rax],al
   1400387d6:	add    BYTE PTR [rax],al
   1400387d8:	outs   dx,BYTE PTR ds:[rsi]
   1400387d9:	(bad)  
   1400387da:	add    al,BYTE PTR [rax]
   1400387dc:	add    DWORD PTR [rax],eax
   1400387de:	add    BYTE PTR [rax],al
   1400387e0:	mov    DWORD PTR [rsi],ebx
   1400387e2:	add    al,BYTE PTR [rax]
   1400387e4:	add    al,BYTE PTR [rax]
   1400387e6:	add    BYTE PTR [rax],al
   1400387e8:	popf   
   1400387e9:	(bad)  
   1400387ea:	add    al,BYTE PTR [rax]
   1400387ec:	add    eax,DWORD PTR [rax]
   1400387ee:	add    BYTE PTR [rax],al
   1400387f0:	mov    cl,0x1e
   1400387f2:	add    al,BYTE PTR [rax]
   1400387f4:	add    al,0x0
   1400387f6:	add    BYTE PTR [rax],al
   1400387f8:	(bad)
   1400387fb:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x120038801
   140038801:	(bad)  
   140038802:	add    al,BYTE PTR [rax]
   140038804:	(bad)  
   140038805:	add    BYTE PTR [rax],al
   140038807:	add    ah,dh
   140038809:	(bad)  
   14003880a:	add    al,BYTE PTR [rax]
   14003880c:	(bad)  
   14003880d:	add    BYTE PTR [rax],al
   14003880f:	add    BYTE PTR [rax],cl
   140038811:	(bad)  
   140038812:	add    al,BYTE PTR [rax]
   140038814:	or     BYTE PTR [rax],al
   140038816:	add    BYTE PTR [rax],al
   140038818:	sbb    al,0x1f
   14003881a:	add    al,BYTE PTR [rax]
   14003881c:	or     DWORD PTR [rax],eax
   14003881e:	add    BYTE PTR [rax],al
   140038820:	xor    BYTE PTR [rdi],bl
   140038822:	add    al,BYTE PTR [rax]
   140038824:	or     al,BYTE PTR [rax]
   140038826:	add    BYTE PTR [rax],al
   140038828:	rex.R (bad) 
   14003882a:	add    al,BYTE PTR [rax]
   14003882c:	or     eax,DWORD PTR [rax]
   14003882e:	add    BYTE PTR [rax],al
   140038830:	pop    rax
   140038831:	(bad)  
   140038832:	add    al,BYTE PTR [rax]
   140038834:	or     al,0x0
   140038836:	add    BYTE PTR [rax],al
   140038838:	ins    BYTE PTR es:[rdi],dx
   140038839:	(bad)  
   14003883a:	add    al,BYTE PTR [rax]
   14003883c:	or     eax,0x87000000
   140038841:	(bad)  
   140038842:	add    al,BYTE PTR [rax]
   140038844:	(bad)  
   140038845:	add    BYTE PTR [rax],al
   140038847:	add    BYTE PTR [rbx+0xf00021f],bl
   14003884d:	add    BYTE PTR [rax],al
   14003884f:	add    BYTE PTR [rsi+0x1000021f],dh
   140038855:	add    BYTE PTR [rax],al
   140038857:	add    al,al
   140038859:	(bad)  
   14003885a:	add    al,BYTE PTR [rax]
   14003885c:	(bad)  
   14003885d:	(bad)  
   14003885e:	(bad)  
   14003885f:	call   QWORD PTR [rcx]
   140038861:	adc    eax,DWORD PTR [rdx]
   140038863:	add    BYTE PTR [rdx],cl
   140038865:	push   rdx
   140038866:	(bad)  
   140038867:	xor    dl,bl
   140038869:	rol    DWORD PTR [rdx],1
   14003886b:	add    BYTE PTR [rax],dh
   14003886d:	push   rbx
   14003886e:	add    eax,DWORD PTR [rax]
   140038870:	(bad)  
   140038871:	(bad)  
   140038872:	(bad)  
   140038873:	inc    DWORD PTR [rax]
   140038875:	loopne 0x140038879
   140038877:	add    BYTE PTR [rax],al
   140038879:	add    BYTE PTR [rax],al
   14003887b:	add    BYTE PTR [rsi],cl
   14003887d:	loopne 0x140038881
   14003887f:	add    BYTE PTR [rcx],al
   140038881:	add    BYTE PTR [rax],al
   140038883:	add    BYTE PTR [rbx],ah
   140038885:	loopne 0x140038889
   140038887:	add    BYTE PTR [rdx],al
   140038889:	add    BYTE PTR [rax],al
   14003888b:	add    BYTE PTR [rax],bh
   14003888d:	loopne 0x140038891
   14003888f:	add    BYTE PTR [rbx],al
   140038891:	add    BYTE PTR [rax],al
   140038893:	add    BYTE PTR [rbp-0x20],cl
   140038896:	add    al,BYTE PTR [rax]
   140038898:	add    al,0x0
   14003889a:	add    BYTE PTR [rax],al
   14003889c:	(bad)  
   14003889d:	loopne 0x1400388a1
   14003889f:	add    BYTE PTR [rip+0x77000000],al        # 0x1b70388a5
   1400388a5:	loopne 0x1400388a9
   1400388a7:	add    BYTE PTR [rsi],al
   1400388a9:	add    BYTE PTR [rax],al
   1400388ab:	add    BYTE PTR [rax+riz*8+0x70002],cl
   1400388b2:	add    BYTE PTR [rax],al
   1400388b4:	movabs eax,ds:0xb6000000080002e0
   1400388bd:	loopne 0x1400388c1
   1400388bf:	add    BYTE PTR [rcx],cl
   1400388c1:	add    BYTE PTR [rax],al
   1400388c3:	add    bl,cl
   1400388c5:	loopne 0x1400388c9
   1400388c7:	add    BYTE PTR [rdx],cl
   1400388c9:	add    BYTE PTR [rax],al
   1400388cb:	add    al,ah
   1400388cd:	loopne 0x1400388d1
   1400388cf:	add    BYTE PTR [rbx],cl
   1400388d1:	add    BYTE PTR [rax],al
   1400388d3:	add    ch,dh
   1400388d5:	loopne 0x1400388d9
   1400388d7:	add    BYTE PTR [rax+rax*1],cl
   1400388da:	add    BYTE PTR [rax],al
   1400388dc:	or     ah,cl
   1400388de:	add    al,BYTE PTR [rax]
   1400388e0:	or     eax,0x1f000000
   1400388e5:	loope  0x1400388e9
   1400388e7:	add    BYTE PTR [rsi],cl
   1400388e9:	add    BYTE PTR [rax],al
   1400388eb:	add    BYTE PTR [rcx+riz*8],dh
   1400388ee:	add    al,BYTE PTR [rax]
   1400388f0:	adc    BYTE PTR [rax],ah
   1400388f2:	add    al,BYTE PTR [rax]
   1400388f4:	(bad)  
   1400388f5:	(bad)  
   1400388f6:	(bad)  
   1400388f7:	push   QWORD PTR [rax]
   1400388f9:	and    BYTE PTR [rdx],al
   1400388fb:	add    BYTE PTR [rdi],cl
   1400388fd:	add    BYTE PTR [rax],al
   1400388ff:	add    BYTE PTR [rsi],bh
   140038901:	and    BYTE PTR [rdx],al
   140038903:	add    BYTE PTR [rsi],cl
   140038905:	add    BYTE PTR [rax],al
   140038907:	add    BYTE PTR [rax+riz*1+0x2],cl
   14003890b:	add    BYTE PTR [rip+0x5a000000],cl        # 0x19a038911
   140038911:	and    BYTE PTR [rdx],al
   140038913:	add    BYTE PTR [rax+rax*1],cl
   140038916:	add    BYTE PTR [rax],al
   140038918:	push   0xb000220
   14003891d:	add    BYTE PTR [rax],al
   14003891f:	add    BYTE PTR [rsi+0x20],dh
   140038922:	add    al,BYTE PTR [rax]
   140038924:	or     al,BYTE PTR [rax]
   140038926:	add    BYTE PTR [rax],al
   140038928:	test   BYTE PTR [rax],ah
   14003892a:	add    al,BYTE PTR [rax]
   14003892c:	or     DWORD PTR [rax],eax
   14003892e:	add    BYTE PTR [rax],al
   140038930:	xchg   edx,eax
   140038931:	and    BYTE PTR [rdx],al
   140038933:	add    BYTE PTR [rax],cl
   140038935:	add    BYTE PTR [rax],al
   140038937:	add    BYTE PTR [rax+0x7000220],ah
   14003893d:	add    BYTE PTR [rax],al
   14003893f:	add    BYTE PTR [rsi+0x6000220],ch
   140038945:	add    BYTE PTR [rax],al
   140038947:	add    BYTE PTR [rax+riz*1+0x50002],bh
   14003894e:	add    BYTE PTR [rax],al
   140038950:	retf   0x220
   140038953:	add    BYTE PTR [rax+rax*1],al
   140038956:	add    BYTE PTR [rax],al
   140038958:	fsub   DWORD PTR [rax]
   14003895a:	add    al,BYTE PTR [rax]
   14003895c:	add    eax,DWORD PTR [rax]
   14003895e:	add    BYTE PTR [rax],al
   140038960:	out    0x20,al
   140038962:	add    al,BYTE PTR [rax]
   140038964:	add    al,BYTE PTR [rax]
   140038966:	add    BYTE PTR [rax],al
   140038968:	hlt    
   140038969:	and    BYTE PTR [rdx],al
   14003896b:	add    BYTE PTR [rcx],al
   14003896d:	add    BYTE PTR [rax],al
   14003896f:	add    BYTE PTR [rdx],al
   140038971:	and    DWORD PTR [rdx],eax
   140038973:	add    BYTE PTR [rax],al
   140038975:	add    BYTE PTR [rax],al
   140038977:	add    BYTE PTR [rax],dl
   140038979:	and    DWORD PTR [rdx],eax
   14003897b:	add    bh,bh
   14003897d:	(bad)  
   14003897e:	(bad)  
   14003897f:	call   QWORD PTR [rcx]
   140038981:	lar    eax,WORD PTR [rax]
   140038984:	(bad)  
   140038985:	push   rdx
   140038986:	add    dh,BYTE PTR [rax]
   140038988:	fcmovbe st,st(1)
   14003898a:	add    al,BYTE PTR [rax]
   14003898c:	add    BYTE PTR [rbx+0x3],dl
   14003898f:	add    BYTE PTR [rax-0xfffdde],ah
   140038995:	(bad)  
   140038996:	(bad)  
   140038997:	inc    esp
   140038999:	and    al,BYTE PTR [rdx]
   14003899b:	add    BYTE PTR [rax],al
   14003899d:	add    BYTE PTR [rax],al
   14003899f:	add    dh,dh
   1400389a1:	and    eax,DWORD PTR [rdx]
   1400389a3:	add    bh,bh
   1400389a5:	(bad)  
   1400389a6:	(bad)  
   1400389a7:	call   FWORD PTR [rcx]
   1400389a9:	sub    al,0x5
   1400389ab:	add    BYTE PTR [rdx],bl
   1400389ad:	xor    al,0xdf
   1400389af:	add    BYTE PTR [rcx],cl
   1400389b1:	add    esp,ebx
   1400389b3:	add    BYTE PTR [rdx],al
   1400389b5:	jo     0x1400389b7
   1400389b7:	add    al,ah
   1400389b9:	rol    DWORD PTR [rdx],1
   1400389bb:	add    al,dl
   1400389bd:	push   rdx
   1400389be:	add    eax,DWORD PTR [rax]
   1400389c0:	rol    BYTE PTR [rsi],cl
   1400389c2:	add    BYTE PTR [rax],al
   1400389c4:	adc    BYTE PTR [rdx+rax*1],ah
   1400389c7:	add    bh,bh
   1400389c9:	(bad)  
   1400389ca:	(bad)  
   1400389cb:	dec    DWORD PTR [rbx+0x24]
   1400389ce:	add    al,BYTE PTR [rax]
   1400389d0:	add    BYTE PTR [rax],al
   1400389d2:	add    BYTE PTR [rax],al
   1400389d4:	mov    ebx,0x1000224
   1400389d9:	add    BYTE PTR [rax],al
   1400389db:	add    dh,al
   1400389dd:	and    al,0x2
   1400389df:	add    BYTE PTR [rdx],al
   1400389e1:	add    BYTE PTR [rax],al
   1400389e3:	add    al,bl
   1400389e5:	and    al,0x2
   1400389e7:	add    BYTE PTR [rcx],al
   1400389e9:	add    BYTE PTR [rax],al
   1400389eb:	add    BYTE PTR [rax],bl
   1400389ed:	and    eax,0x2
   1400389f2:	add    BYTE PTR [rax],al
   1400389f4:	and    al,0x25
   1400389f6:	add    al,BYTE PTR [rax]
   1400389f8:	(bad)  
   1400389f9:	(bad)  
   1400389fa:	(bad)  
   1400389fb:	call   FWORD PTR [rcx]
   1400389fd:	rex or eax,0xf9742f00
   140038a03:	add    BYTE PTR [rbx],ch
   140038a05:	fs clc 
   140038a07:	add    BYTE PTR [rdi],ah
   140038a09:	xor    al,0xf7
   140038a0b:	add    BYTE PTR [rdx],bl
   140038a0d:	add    eax,esi
   140038a0f:	add    BYTE PTR [rax+rsi*8],cl
   140038a12:	or     ah,al
   140038a14:	or     al,dl
   140038a16:	(bad)  
   140038a17:	rol    BYTE PTR [rax+rdx*2],0x0
   140038a1b:	add    al,ah
   140038a1d:	rol    DWORD PTR [rdx],1
   140038a1f:	add    BYTE PTR [rax+0x72000352],ah
   140038a25:	(bad)  
   140038a26:	add    BYTE PTR [rax],al
   140038a28:	(bad)  
   140038a29:	(bad)  
   140038a2a:	(bad)  
   140038a2b:	call   QWORD PTR [rax-0x1f]
   140038a2e:	add    al,BYTE PTR [rax]
   140038a30:	add    BYTE PTR [rax],al
   140038a32:	add    BYTE PTR [rax],al
   140038a34:	pop    rsi
   140038a35:	loope  0x140038a39
   140038a37:	add    BYTE PTR [rax],al
   140038a39:	add    BYTE PTR [rax],al
   140038a3b:	add    BYTE PTR [rcx+riz*8+0x2],ch
   140038a3f:	add    BYTE PTR [rax+0x25],ah
   140038a42:	add    al,BYTE PTR [rax]
   140038a44:	(bad)  
   140038a45:	(bad)  
   140038a46:	(bad)  
   140038a47:	dec    ebp
   140038a49:	add    al,BYTE PTR es:[rax]
   140038a4c:	add    BYTE PTR [rax],al
   140038a4e:	add    BYTE PTR [rax],al
   140038a50:	popf   
   140038a51:	sub    BYTE PTR [rdx],al
   140038a53:	add    BYTE PTR [rcx],al
   140038a55:	add    BYTE PTR [rax],al
   140038a57:	add    ah,bl
   140038a59:	sub    BYTE PTR [rdx],al
   140038a5b:	add    BYTE PTR [rax],al
   140038a5d:	add    BYTE PTR [rax],al
   140038a5f:	add    BYTE PTR [rax],dl
   140038a61:	sub    DWORD PTR [rdx],eax
   140038a63:	add    BYTE PTR [rdx],al
   140038a65:	add    BYTE PTR [rax],al
   140038a67:	add    BYTE PTR [rcx+0x29],dl
   140038a6a:	add    al,BYTE PTR [rax]
   140038a6c:	add    BYTE PTR [rax],al
   140038a6e:	add    BYTE PTR [rax],al
   140038a70:	js     0x140038a9e
   140038a72:	add    al,BYTE PTR [rax]
   140038a74:	(bad)  
   140038a75:	(bad)  
   140038a76:	(bad)  
   140038a77:	call   FWORD PTR [rcx]
   140038a79:	cs (bad) 
   140038a7b:	add    BYTE PTR [rsp+rsi*1],bl
   140038a7e:	cmp    eax,0x36010b00
   140038a83:	add    BYTE PTR [rax+rsi*2],al
   140038a86:	add    esp,DWORD PTR [rax+0x2]
   140038a89:	push   rax
   140038a8a:	add    BYTE PTR [rax],al
   140038a8c:	loopne 0x140038a5f
   140038a8e:	add    al,BYTE PTR [rax]
   140038a90:	jo     0x140038ae4
   140038a92:	add    eax,DWORD PTR [rax]
   140038a94:	movabs ds:0xff00022ea0000001,al
   140038a9d:	(bad)  
   140038a9e:	(bad)  
   140038a9f:	push   QWORD PTR [rcx]
   140038aa1:	(bad)  
   140038aa2:	add    al,BYTE PTR [rax]
   140038aa4:	add    BYTE PTR [rax],al
   140038aa6:	add    BYTE PTR [rax],al
   140038aa8:	rex.X (bad) 
   140038aaa:	add    al,BYTE PTR [rax]
   140038aac:	(bad)  
   140038aad:	(bad)  
   140038aae:	(bad)  
   140038aaf:	call   FWORD PTR [rcx]
   140038ab1:	xor    DWORD PTR [rip+0xffffffff93641f00],ecx        # 0xd367a9b7
   140038ab7:	add    DWORD PTR [rdi],ebx
   140038ab9:	push   rsp
   140038aba:	xchg   ecx,eax
   140038abb:	add    DWORD PTR [rdi],ebx
   140038abd:	xor    al,0x90
   140038abf:	add    DWORD PTR [rdi],ebx
   140038ac1:	add    DWORD PTR [rdx+0x16f01801],ecx
   140038ac7:	loopne 0x140038add
   140038ac9:	rcl    BYTE PTR [rdx],1
   140038acb:	rcl    BYTE PTR [rax],0x70
   140038ace:	add    BYTE PTR [rax],al
   140038ad0:	in     al,0xcc
   140038ad2:	add    al,BYTE PTR [rax]
   140038ad4:	or     al,0x0
   140038ad7:	add    BYTE PTR [rcx],bl
   140038ad9:	xor    BYTE PTR [rbx],cl
   140038adb:	add    BYTE PTR [rdi],bl
   140038add:	xor    al,0x34
   140038adf:	add    DWORD PTR [rdi],ebx
   140038ae1:	add    DWORD PTR [rdx],ebp
   140038ae3:	add    DWORD PTR [rax],edx
   140038ae5:	lock (bad) 
   140038ae7:	loopne 0x140038af5
   140038ae9:	ror    BYTE PTR [rdx],1
   140038aeb:	ror    BYTE PTR [rax],0x70
   140038aee:	(bad)  
   140038aef:	(bad)  
   140038af0:	(bad)  
   140038af1:	push   rax
   140038af2:	add    BYTE PTR [rax],al
   140038af4:	in     al,0xcc
   140038af6:	add    al,BYTE PTR [rax]
   140038af8:	rex or DWORD PTR [rax],eax
   140038afb:	add    BYTE PTR [rcx],bl
   140038afd:	and    al,0x9
   140038aff:	add    BYTE PTR [rdx],dl
   140038b01:	add    DWORD PTR [rax+0x0],ecx
   140038b04:	or     esi,eax
   140038b06:	or     eax,esp
   140038b08:	(bad)  
   140038b09:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143638f80
   140038b10:	add    dh,BYTE PTR [rax]
   140038b12:	add    BYTE PTR [rax],al
   140038b14:	in     al,0xcc
   140038b16:	add    al,BYTE PTR [rax]
   140038b18:	xor    BYTE PTR [rdx],al
   140038b1a:	add    BYTE PTR [rax],al
   140038b1c:	adc    DWORD PTR [rsi],esp
   140038b1e:	or     al,BYTE PTR [rax]
   140038b20:	es fs or eax,0xc542100
   140038b27:	add    BYTE PTR [rsp+rsi*1],bl
   140038b2a:	or     eax,DWORD PTR [rax]
   140038b2c:	(bad)  
   140038b2d:	push   rdx
   140038b2e:	or     dh,al
   140038b30:	or     al,ah
   140038b32:	(bad)  
   140038b33:	jo     0x140038b0f
   140038b35:	rol    DWORD PTR [rdx],1
   140038b37:	add    BYTE PTR [rax-0xfffcac],al
   140038b3d:	(bad)  
   140038b3e:	(bad)  
   140038b3f:	inc    DWORD PTR [rax+0x2e1]
   140038b45:	add    BYTE PTR [rax],al
   140038b47:	add    BYTE PTR [rsi+0x10002e1],cl
   140038b4d:	add    BYTE PTR [rax],al
   140038b4f:	add    BYTE PTR [rcx+0x20002e1],ah
   140038b55:	add    BYTE PTR [rax],al
   140038b57:	add    BYTE PTR [rcx+riz*8+0x30002],dh
   140038b5e:	add    BYTE PTR [rax],al
   140038b60:	(bad)  
   140038b61:	loope  0x140038b65
   140038b63:	add    BYTE PTR [rax+rax*1],al
   140038b66:	add    BYTE PTR [rax],al
   140038b68:	(bad)  
   140038b6a:	add    al,BYTE PTR [rax]
   140038b6c:	cmp    BYTE PTR [rbx],0x2
   140038b6f:	add    bh,bh
   140038b71:	(bad)  
   140038b72:	(bad)  
   140038b73:	(bad)  
   140038b74:	mov    ebx,0x23b
   140038b79:	add    BYTE PTR [rax],al
   140038b7b:	add    al,ah
   140038b7d:	cmp    eax,DWORD PTR [rdx]
   140038b7f:	add    BYTE PTR [rcx],al
   140038b81:	add    BYTE PTR [rax],al
   140038b83:	add    ch,ch
   140038b85:	cmp    eax,DWORD PTR [rdx]
   140038b87:	add    BYTE PTR [rdx],al
   140038b89:	add    BYTE PTR [rax],al
   140038b8b:	add    dl,bh
   140038b8d:	cmp    eax,DWORD PTR [rdx]
   140038b8f:	add    BYTE PTR [rbx],al
   140038b91:	add    BYTE PTR [rax],al
   140038b93:	add    BYTE PTR [rdi],al
   140038b95:	cmp    al,0x2
   140038b97:	add    BYTE PTR [rax+rax*1],al
   140038b9a:	add    BYTE PTR [rax],al
   140038b9c:	adc    al,0x3c
   140038b9e:	add    al,BYTE PTR [rax]
   140038ba0:	add    eax,0x97000000
   140038ba5:	cmp    al,0x2
   140038ba7:	add    bh,bh
   140038ba9:	(bad)  
   140038baa:	(bad)  
   140038bab:	call   QWORD PTR [rcx]
   140038bad:	adc    eax,DWORD PTR [rdx]
   140038baf:	add    BYTE PTR [rdx],cl
   140038bb1:	push   rdx
   140038bb2:	(bad)  
   140038bb3:	xor    dl,bl
   140038bb5:	rol    DWORD PTR [rdx],1
   140038bb7:	add    BYTE PTR [rax+0x54],dl
   140038bba:	add    eax,DWORD PTR [rax]
   140038bbc:	(bad)  
   140038bbd:	(bad)  
   140038bbe:	(bad)  
   140038bbf:	push   rax
   140038bc1:	loope  0x140038bc5
   140038bc3:	add    BYTE PTR [rax],al
   140038bc5:	add    BYTE PTR [rax],al
   140038bc7:	add    dh,bh
   140038bc9:	loope  0x140038bcd
   140038bcb:	add    BYTE PTR [rcx],al
   140038bcd:	add    BYTE PTR [rax],al
   140038bcf:	add    BYTE PTR [rcx],dl
   140038bd1:	loop   0x140038bd5
   140038bd3:	add    BYTE PTR [rdx],al
   140038bd5:	add    BYTE PTR [rax],al
   140038bd7:	add    BYTE PTR [rdx+riz*8],ah
   140038bda:	add    al,BYTE PTR [rax]
   140038bdc:	add    eax,DWORD PTR [rax]
   140038bde:	add    BYTE PTR [rax],al
   140038be0:	(bad)  
   140038be1:	loop   0x140038be5
   140038be3:	add    al,dh
   140038be5:	cmp    al,0x2
   140038be7:	add    bh,bh
   140038be9:	(bad)  
   140038bea:	(bad)  
   140038beb:	call   FWORD PTR [rsi]
   140038bed:	cmp    eax,0x40002
   140038bf2:	add    BYTE PTR [rax],al
   140038bf4:	sub    edi,DWORD PTR [rip+0x30002]        # 0x140068bfc
   140038bfa:	add    BYTE PTR [rax],al
   140038bfc:	cmp    BYTE PTR [rip+0x20002],bh        # 0x140058c04
   140038c02:	add    BYTE PTR [rax],al
   140038c04:	rex.RB cmp eax,0x10002
   140038c0a:	add    BYTE PTR [rax],al
   140038c0c:	push   rdx
   140038c0d:	cmp    eax,0x2
   140038c12:	add    BYTE PTR [rax],al
   140038c14:	pop    rdi
   140038c15:	cmp    eax,0xffff0002
   140038c1a:	(bad)  
   140038c1b:	call   FWORD PTR [rcx]
   140038c1d:	rex or eax,0xfbc42f00
   140038c23:	add    BYTE PTR [rbx],ch
   140038c25:	je     0x140038c21
   140038c27:	add    BYTE PTR [rdi],ah
   140038c29:	fs stc 
   140038c2b:	add    BYTE PTR [rbx],ah
   140038c2d:	xor    al,0xf8
   140038c2f:	add    BYTE PTR [rsi],dl
   140038c31:	add    esp,esi
   140038c33:	add    BYTE PTR [rax],cl
   140038c35:	lock (bad) 
   140038c37:	loopne 0x140038c3d
   140038c39:	push   rax
   140038c3a:	add    BYTE PTR [rax],al
   140038c3c:	loopne 0x140038c0f
   140038c3e:	add    al,BYTE PTR [rax]
   140038c40:	and    BYTE PTR [rbx+rax*1+0x0],dl
   140038c44:	xchg   edx,eax
   140038c45:	(bad)  
   140038c46:	add    BYTE PTR [rax],al
   140038c48:	(bad)  
   140038c49:	(bad)  
   140038c4a:	(bad)  
   140038c4b:	call   QWORD PTR [rax-0x1e]
   140038c4e:	add    al,BYTE PTR [rax]
   140038c50:	add    BYTE PTR [rax],al
   140038c52:	add    BYTE PTR [rax],al
   140038c54:	pop    rsi
   140038c55:	loop   0x140038c59
   140038c57:	add    BYTE PTR [rcx],al
   140038c59:	add    BYTE PTR [rax],al
   140038c5b:	add    BYTE PTR [rdx+riz*8+0x2],ch
   140038c5f:	add    BYTE PTR [rax-0xfffdc2],al
   140038c65:	(bad)  
   140038c66:	(bad)  
   140038c67:	inc    edi
   140038c69:	(bad)  
   140038c6a:	add    al,BYTE PTR [rax]
   140038c6c:	add    BYTE PTR [rax],al
   140038c6e:	add    BYTE PTR [rax],al
   140038c70:	sti    
   140038c71:	(bad)  
   140038c72:	add    al,BYTE PTR [rax]
   140038c74:	add    DWORD PTR [rax],eax
   140038c76:	add    BYTE PTR [rax],al
   140038c78:	adc    al,BYTE PTR [rcx+0x2]
   140038c7b:	add    BYTE PTR [rdx],al
   140038c7d:	add    BYTE PTR [rax],al
   140038c7f:	add    BYTE PTR [rcx+rax*2+0x2],al
   140038c83:	add    BYTE PTR [rcx],al
   140038c85:	add    BYTE PTR [rax],al
   140038c87:	add    BYTE PTR [rdi+0x41],ch
   140038c8a:	add    al,BYTE PTR [rax]
   140038c8c:	add    BYTE PTR [rax],al
   140038c8e:	add    BYTE PTR [rax],al
   140038c90:	jnp    0x140038cd3
   140038c92:	add    al,BYTE PTR [rax]
   140038c94:	(bad)  
   140038c95:	(bad)  
   140038c96:	(bad)  
   140038c97:	call   QWORD PTR [rcx]
   140038c99:	lar    eax,WORD PTR [rax]
   140038c9c:	(bad)  
   140038c9d:	push   rdx
   140038c9e:	add    dh,BYTE PTR [rax]
   140038ca0:	fcmovbe st,st(1)
   140038ca2:	add    al,BYTE PTR [rax]
   140038ca4:	lock push rbx
   140038ca6:	add    eax,DWORD PTR [rax]
   140038ca8:	rol    BYTE PTR [rcx+0x2],1
   140038cab:	add    bh,bh
   140038cad:	(bad)  
   140038cae:	(bad)  
   140038caf:	call   QWORD PTR [rax+0x42]
   140038cb2:	add    al,BYTE PTR [rax]
   140038cb4:	add    BYTE PTR [rax],al
   140038cb6:	add    BYTE PTR [rax],al
   140038cb8:	xchg   esi,eax
   140038cb9:	rex.X add al,BYTE PTR [rax]
   140038cbc:	(bad)  
   140038cbd:	(bad)  
   140038cbe:	(bad)  
   140038cbf:	call   QWORD PTR [rcx]
   140038cc1:	adc    BYTE PTR [rdx],al
   140038cc3:	add    BYTE PTR [rdi],al
   140038cc5:	add    DWORD PTR [rcx],esi
   140038cc7:	add    dl,bl
   140038cc9:	rol    DWORD PTR [rdx],1
   140038ccb:	add    al,al
   140038ccd:	push   rbx
   140038cce:	add    eax,DWORD PTR [rax]
   140038cd0:	(bad)  
   140038cd1:	(bad)  
   140038cd2:	(bad)  
   140038cd3:	inc    DWORD PTR [rax-0x4ffffd1e]
   140038cd9:	rex.X add al,BYTE PTR [rax]
   140038cdc:	(bad)  
   140038cdd:	(bad)  
   140038cde:	(bad)  
   140038cdf:	(bad)  
   140038ce0:	jmp    0x140038f27
   140038ce5:	add    BYTE PTR [rax],al
   140038ce7:	add    ch,dh
   140038ce9:	rex.X add al,BYTE PTR [rax]
   140038cec:	(bad)  
   140038ced:	(bad)  
   140038cee:	(bad)  
   140038cef:	call   FWORD PTR [rcx]
   140038cf1:	sbb    al,0x4
   140038cf3:	add    BYTE PTR [rdx],cl
   140038cf5:	add    DWORD PTR [rbx+0x2700300],ecx
   140038cfb:	(bad)  
   140038cfc:	in     al,0xcc
   140038cfe:	add    al,BYTE PTR [rax]
   140038d00:	add    al,0x0
   140038d03:	add    BYTE PTR [rcx],ah
   140038d05:	sbb    BYTE PTR [rsi],al
   140038d07:	add    BYTE PTR [rax],bl
   140038d09:	in     al,0x8a
   140038d0b:	add    BYTE PTR [rax],dl
   140038d0d:	push   rsp
   140038d0e:	xchg   ecx,eax
   140038d0f:	add    BYTE PTR [rax],cl
   140038d11:	xor    al,0x90
   140038d13:	add    BYTE PTR [rax],dh
   140038d15:	add    r8b,BYTE PTR [rax]
   140038d18:	je     0x140038d5e
   140038d1a:	add    al,BYTE PTR [rax]
   140038d1c:	lock mov WORD PTR [rbx],es
   140038d1f:	add    BYTE PTR [rcx],ah
   140038d21:	add    BYTE PTR [rax],al
   140038d23:	add    BYTE PTR [rax],dh
   140038d25:	add    r8b,BYTE PTR [rax]
   140038d28:	je     0x140038d6e
   140038d2a:	add    al,BYTE PTR [rax]
   140038d2c:	lock mov WORD PTR [rbx],es
   140038d2f:	add    BYTE PTR [rcx],bl
   140038d31:	ror    BYTE PTR [rip+0x4ef4c000],0x1        # 0x18ef84d38
   140038d38:	mov    eax,0xb0014fd4
   140038d3d:	fs push rdi
   140038d3f:	add    DWORD PTR [rdi],edx
   140038d41:	add    DWORD PTR [rax+0x1],edx
   140038d44:	or     al,ah
   140038d46:	(bad)  
   140038d47:	rol    BYTE PTR [rax+rsi*2],0x3
   140038d4b:	xor    BYTE PTR [rdx],al
   140038d4d:	push   rax
   140038d4e:	add    BYTE PTR [rax],al
   140038d50:	in     al,0xcc
   140038d52:	add    al,BYTE PTR [rax]
   140038d54:	(bad)  
   140038d55:	or     al,BYTE PTR [rax]
   140038d57:	add    BYTE PTR [rcx],bl
   140038d59:	stos   BYTE PTR es:[rdi],al
   140038d5a:	verw   WORD PTR [rdx-0x5dfe730c]
   140038d61:	in     al,0x8d
   140038d63:	add    DWORD PTR [rdx-0x6dfe712c],ebx
   140038d69:	(bad)  
   140038d6a:	pop    QWORD PTR [rcx]
   140038d6c:	mov    dh,BYTE PTR [rsi+rdx*4+0x1]
   140038d70:	adc    eax,DWORD PTR [rcx]
   140038d72:	nop
   140038d73:	add    DWORD PTR [rax+riz*2],eax
   140038d76:	add    esi,DWORD PTR [rax]
   140038d78:	add    dl,BYTE PTR [rax+0x0]
   140038d7b:	add    ah,ah
   140038d7d:	int3   
   140038d7e:	add    al,BYTE PTR [rax]
   140038d80:	push   rax
   140038d81:	or     al,0x0
   140038d83:	add    BYTE PTR [rcx],bl
   140038d85:	(bad)  
   140038d86:	add    eax,0x8e010c00
   140038d8b:	add    BYTE PTR [rip+0x26003e0],al        # 0x142639171
   140038d91:	push   rax
   140038d92:	add    BYTE PTR [rax],al
   140038d94:	in     al,0xcc
   140038d96:	add    al,BYTE PTR [rax]
   140038d98:	add    al,0x0
   140038d9b:	add    BYTE PTR [rcx],ah
   140038d9d:	and    ecx,DWORD PTR [rax]
   140038d9f:	add    BYTE PTR [rbx],ah
   140038da1:	je     0x140038d2f
   140038da3:	add    BYTE PTR [rax],bl
   140038da5:	hlt    
   140038da6:	mov    al,BYTE PTR [rax]
   140038da8:	adc    ah,al
   140038daa:	mov    eax,DWORD PTR [rax]
   140038dac:	or     BYTE PTR [rcx*4+0x2518000],dh
   140038db3:	add    BYTE PTR [rbx-0x7bfffdaf],bh
   140038db9:	lea    eax,[rbx]
   140038dbb:	add    BYTE PTR [rcx],ah
   140038dbd:	add    BYTE PTR [rax],al
   140038dbf:	add    BYTE PTR [rax-0x44fffdaf],al
   140038dc5:	push   rcx
   140038dc6:	add    al,BYTE PTR [rax]
   140038dc8:	test   BYTE PTR [rbp+0x1b190003],cl
   140038dce:	add    al,0x0
   140038dd0:	or     eax,0x4f006d2
   140038dd5:	loopne 0x140038dd9
   140038dd7:	push   rax
   140038dd8:	in     al,0xcc
   140038dda:	add    al,BYTE PTR [rax]
   140038ddc:	pop    rax
   140038ddd:	add    BYTE PTR [rax],al
   140038ddf:	add    BYTE PTR [rcx],ah
   140038de1:	or     BYTE PTR [rdx],al
   140038de3:	add    BYTE PTR [rax],cl
   140038de5:	xor    al,0x13
   140038de7:	add    BYTE PTR [rax],dl
   140038de9:	push   rbx
   140038dea:	add    al,BYTE PTR [rax]
   140038dec:	push   rax
   140038ded:	push   rbx
   140038dee:	add    al,BYTE PTR [rax]
   140038df0:	int3   
   140038df1:	lea    eax,[rbx]
   140038df3:	add    BYTE PTR [rcx],ah
   140038df5:	sbb    cl,BYTE PTR [rax]
   140038df7:	add    BYTE PTR [rdx],bl
   140038df9:	(bad)  
   140038dfa:	or     al,0x0
   140038dfc:	adc    eax,0x10000dc4
   140038e01:	je     0x140038e18
   140038e03:	add    BYTE PTR [rax],cl
   140038e05:	fs adc al,0x0
   140038e08:	push   rax
   140038e09:	push   rbx
   140038e0a:	add    al,BYTE PTR [rax]
   140038e0c:	ficom  DWORD PTR [rbx+0x2]
   140038e0f:	add    al,ah
   140038e11:	lea    eax,[rbx]
   140038e13:	add    BYTE PTR [rcx],ah
   140038e15:	add    BYTE PTR [rax],al
   140038e17:	add    BYTE PTR [rax+0x53],dl
   140038e1a:	add    al,BYTE PTR [rax]
   140038e1c:	ficom  DWORD PTR [rbx+0x2]
   140038e1f:	add    al,ah
   140038e21:	lea    eax,[rbx]
   140038e23:	add    BYTE PTR [rcx],ah
   140038e25:	add    BYTE PTR [rax],al
   140038e27:	add    BYTE PTR [rax],dl
   140038e29:	push   rbx
   140038e2a:	add    al,BYTE PTR [rax]
   140038e2c:	push   rax
   140038e2d:	push   rbx
   140038e2e:	add    al,BYTE PTR [rax]
   140038e30:	int3   
   140038e31:	lea    eax,[rbx]
   140038e33:	add    BYTE PTR [rcx],ah
   140038e35:	add    BYTE PTR [rdx],cl
   140038e37:	add    BYTE PTR [rax],al
   140038e39:	(bad)  
   140038e3a:	or     al,0x0
   140038e3c:	add    ah,al
   140038e3e:	or     eax,0x15740000
   140038e43:	add    BYTE PTR [rax],al
   140038e45:	fs adc al,0x0
   140038e48:	add    BYTE PTR [rbx+rdx*1],dh
   140038e4b:	add    BYTE PTR [rax],dl
   140038e4d:	push   rbx
   140038e4e:	add    al,BYTE PTR [rax]
   140038e50:	push   rax
   140038e51:	push   rbx
   140038e52:	add    al,BYTE PTR [rax]
   140038e54:	int3   
   140038e55:	lea    eax,[rbx]
   140038e57:	add    BYTE PTR [rcx],ah
   140038e59:	add    BYTE PTR [rdx],al
   140038e5b:	add    BYTE PTR [rax],al
   140038e5d:	xor    al,0x13
   140038e5f:	add    BYTE PTR [rax],dl
   140038e61:	push   rbx
   140038e62:	add    al,BYTE PTR [rax]
   140038e64:	push   rax
   140038e65:	push   rbx
   140038e66:	add    al,BYTE PTR [rax]
   140038e68:	int3   
   140038e69:	lea    eax,[rbx]
   140038e6b:	add    BYTE PTR [rcx],al
   140038e6d:	(bad)  
   140038e6e:	or     al,0x0
   140038e70:	(bad)  
   140038e71:	je     0x140038e83
   140038e73:	add    BYTE PTR [rdi],bl
   140038e75:	ltr    WORD PTR fs:[rdi]
   140038e79:	xor    al,0xe
   140038e7b:	add    BYTE PTR [rdi],bl
   140038e7d:	jb     0x140038e97
   140038e7f:	lock (bad) 
   140038e81:	loopne 0x140038e97
   140038e83:	rcl    BYTE PTR [rdx],1
   140038e85:	rcl    BYTE PTR [rax],0x50
   140038e88:	add    DWORD PTR [rax],edx
   140038e8a:	or     BYTE PTR [rax],al
   140038e8c:	adc    BYTE PTR [rsp+rcx*1],dh
   140038e8f:	add    BYTE PTR [rax],dl
   140038e91:	push   rdx
   140038e92:	or     al,0xf0
   140038e94:	or     ah,al
   140038e96:	or     BYTE PTR [rax+0x7],dh
   140038e99:	(bad)  
   140038e9a:	(bad)  
   140038e9b:	push   rax
   140038e9c:	add    DWORD PTR [rdx],edx
   140038e9e:	(bad)  
   140038e9f:	add    BYTE PTR [rdx],dl
   140038ea1:	xor    al,0xc
   140038ea3:	add    BYTE PTR [rdx],dl
   140038ea5:	push   rdx
   140038ea6:	(bad)  
   140038ea7:	loopne 0x140038eb5
   140038ea9:	jo     0x140038eb6
   140038eab:	(bad)  
   140038eac:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x1a2078eb3
   140038eb2:	add    BYTE PTR [rax],al
   140038eb4:	fcmovbe st,st(1)
   140038eb6:	add    al,BYTE PTR [rax]
   140038eb8:	movabs al,ds:0xff00025fa0000355
   140038ec1:	(bad)  
   140038ec2:	(bad)  
   140038ec3:	(bad)  
   140038ec4:	mov    ebp,0x25f
   140038ec9:	add    BYTE PTR [rax],al
   140038ecb:	add    bl,cl
   140038ecd:	pop    rdi
   140038ece:	add    al,BYTE PTR [rax]
   140038ed0:	(bad)  
   140038ed1:	(bad)  
   140038ed2:	(bad)  
   140038ed3:	call   QWORD PTR [rcx]
   140038ed5:	and    BYTE PTR [rax],cl
   140038ed7:	add    BYTE PTR [rax],ah
   140038ed9:	push   rsp
   140038eda:	or     al,0x0
   140038edc:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140038edf:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e39837
   140038ee5:	jo     0x140038eed
   140038ee7:	(bad)  
   140038ee8:	fcmovbe st,st(1)
   140038eea:	add    al,BYTE PTR [rax]
   140038eec:	add    BYTE PTR [rsi+0x3],dl
   140038eef:	add    bh,bh
   140038ef1:	(bad)  
   140038ef2:	(bad)  
   140038ef3:	call   QWORD PTR [rax+0x2e2]
   140038ef9:	add    BYTE PTR [rax],al
   140038efb:	add    BYTE PTR [rsi+0x10002e2],bl
   140038f01:	add    BYTE PTR [rax],al
   140038f03:	add    BYTE PTR [rbx+0x20002e2],dh
   140038f09:	add    BYTE PTR [rax],al
   140038f0b:	add    al,cl
   140038f0d:	loop   0x140038f11
   140038f0f:	add    BYTE PTR [rbx],al
   140038f11:	add    BYTE PTR [rax],al
   140038f13:	add    ch,bl
   140038f15:	loop   0x140038f19
   140038f17:	add    BYTE PTR [rax+rax*1],al
   140038f1a:	add    BYTE PTR [rax],al
   140038f1c:	repnz loop 0x140038f21
   140038f1f:	add    BYTE PTR [rip+0x7000000],al        # 0x147038f25
   140038f25:	jrcxz  0x140038f29
   140038f27:	add    BYTE PTR [rsi],al
   140038f29:	add    BYTE PTR [rax],al
   140038f2b:	add    BYTE PTR [rbx+riz*8],bl
   140038f2e:	add    al,BYTE PTR [rax]
   140038f30:	(bad)  
   140038f31:	add    BYTE PTR [rax],al
   140038f33:	add    BYTE PTR [rcx],dh
   140038f35:	jrcxz  0x140038f39
   140038f37:	add    BYTE PTR [rax],cl
   140038f39:	add    BYTE PTR [rax],al
   140038f3b:	add    BYTE PTR [rsi-0x1d],al
   140038f3e:	add    al,BYTE PTR [rax]
   140038f40:	or     DWORD PTR [rax],eax
   140038f42:	add    BYTE PTR [rax],al
   140038f44:	pop    rbx
   140038f45:	jrcxz  0x140038f49
   140038f47:	add    BYTE PTR [rdx],cl
   140038f49:	add    BYTE PTR [rax],al
   140038f4b:	add    BYTE PTR [rax-0x1d],dh
   140038f4e:	add    al,BYTE PTR [rax]
   140038f50:	lock pop rdi
   140038f52:	add    al,BYTE PTR [rax]
   140038f54:	(bad)  
   140038f55:	(bad)  
   140038f56:	(bad)  
   140038f57:	jmp    QWORD PTR [rdi]
   140038f59:	(bad)  
   140038f5a:	add    al,BYTE PTR [rax]
   140038f5c:	add    BYTE PTR [rax],al
   140038f5e:	add    BYTE PTR [rax],al
   140038f60:	rex.WR (bad) 
   140038f62:	add    al,BYTE PTR [rax]
   140038f64:	add    DWORD PTR [rax],eax
   140038f66:	add    BYTE PTR [rax],al
   140038f68:	(bad)  
   140038f69:	(bad)  
   140038f6a:	add    al,BYTE PTR [rax]
   140038f6c:	add    al,BYTE PTR [rax]
   140038f6e:	add    BYTE PTR [rax],al
   140038f70:	jnp    0x140038fd2
   140038f72:	add    al,BYTE PTR [rax]
   140038f74:	add    eax,DWORD PTR [rax]
   140038f76:	add    BYTE PTR [rax],al
   140038f78:	xchg   esi,eax
   140038f79:	(bad)  
   140038f7a:	add    al,BYTE PTR [rax]
   140038f7c:	add    al,0x0
   140038f7e:	add    BYTE PTR [rax],al
   140038f80:	stos   BYTE PTR es:[rdi],al
   140038f81:	(bad)  
   140038f82:	add    al,BYTE PTR [rax]
   140038f84:	add    eax,0xbe000000
   140038f89:	(bad)  
   140038f8a:	add    al,BYTE PTR [rax]
   140038f8c:	(bad)  
   140038f8d:	add    BYTE PTR [rax],al
   140038f8f:	add    dl,dl
   140038f91:	(bad)  
   140038f92:	add    al,BYTE PTR [rax]
   140038f94:	(bad)  
   140038f95:	add    BYTE PTR [rax],al
   140038f97:	add    dh,ah
   140038f99:	(bad)  
   140038f9a:	add    al,BYTE PTR [rax]
   140038f9c:	or     BYTE PTR [rax],al
   140038f9e:	add    BYTE PTR [rax],al
   140038fa0:	cli    
   140038fa1:	(bad)  
   140038fa2:	add    al,BYTE PTR [rax]
   140038fa4:	or     DWORD PTR [rax],eax
   140038fa6:	add    BYTE PTR [rax],al
   140038fa8:	(bad)  
   140038fa9:	(bad)  
   140038faa:	add    al,BYTE PTR [rax]
   140038fac:	or     al,BYTE PTR [rax]
   140038fae:	add    BYTE PTR [rax],al
   140038fb0:	sub    DWORD PTR [rcx+0x2],esp
   140038fb3:	add    BYTE PTR [rbx],cl
   140038fb5:	add    BYTE PTR [rax],al
   140038fb7:	add    BYTE PTR [rcx+0x61],al
   140038fba:	add    al,BYTE PTR [rax]
   140038fbc:	(bad)  
   140038fbd:	(bad)  
   140038fbe:	(bad)  
   140038fbf:	call   QWORD PTR [rcx]
   140038fc1:	adc    eax,DWORD PTR [rdx]
   140038fc3:	add    BYTE PTR [rdx],cl
   140038fc5:	push   rdx
   140038fc6:	(bad)  
   140038fc7:	xor    dl,bl
   140038fc9:	rol    DWORD PTR [rdx],1
   140038fcb:	add    al,dl
   140038fcd:	push   rbp
   140038fce:	add    eax,DWORD PTR [rax]
   140038fd0:	(bad)  
   140038fd1:	(bad)  
   140038fd2:	(bad)  
   140038fd3:	call   QWORD PTR [rax+0x2e3]
   140038fd9:	add    BYTE PTR [rax],al
   140038fdb:	add    BYTE PTR [rsi+0x10002e3],bl
   140038fe1:	add    BYTE PTR [rax],al
   140038fe3:	add    BYTE PTR [rbx+0x20002e3],dh
   140038fe9:	add    BYTE PTR [rax],al
   140038feb:	add    al,cl
   140038fed:	jrcxz  0x140038ff1
   140038fef:	add    BYTE PTR [rbx],al
   140038ff1:	add    BYTE PTR [rax],al
   140038ff3:	add    ch,bl
   140038ff5:	jrcxz  0x140038ff9
   140038ff7:	add    BYTE PTR [rax+rax*1],al
   140038ffa:	add    BYTE PTR [rax],al
   140038ffc:	repnz jrcxz 0x140039001
   140038fff:	add    BYTE PTR [rip+0x7000000],al        # 0x147039005
   140039005:	in     al,0x2
   140039007:	add    BYTE PTR [rsi],al
   140039009:	add    BYTE PTR [rax],al
   14003900b:	add    BYTE PTR [rsp+riz*8],bl
   14003900e:	add    al,BYTE PTR [rax]
   140039010:	(bad)  
   140039011:	add    BYTE PTR [rax],al
   140039013:	add    BYTE PTR [rcx],dh
   140039015:	in     al,0x2
   140039017:	add    BYTE PTR [rax],cl
   140039019:	add    BYTE PTR [rax],al
   14003901b:	add    BYTE PTR [rsi-0x1c],al
   14003901e:	add    al,BYTE PTR [rax]
   140039020:	or     DWORD PTR [rax],eax
   140039022:	add    BYTE PTR [rax],al
   140039024:	pop    rbx
   140039025:	in     al,0x2
   140039027:	add    BYTE PTR [rax-0xfffd9f],dl
   14003902d:	(bad)  
   14003902e:	(bad)  
   14003902f:	push   QWORD PTR [rax+0xa000261]
   140039035:	add    BYTE PTR [rax],al
   140039037:	add    BYTE PTR [rsi+0x9000261],bh
   14003903d:	add    BYTE PTR [rax],al
   14003903f:	add    ah,cl
   140039041:	(bad)  
   140039042:	add    al,BYTE PTR [rax]
   140039044:	or     BYTE PTR [rax],al
   140039046:	add    BYTE PTR [rax],al
   140039048:	fisub  DWORD PTR [rcx+0x2]
   14003904b:	add    BYTE PTR [rdi],al
   14003904d:	add    BYTE PTR [rax],al
   14003904f:	add    al,ch
   140039051:	(bad)  
   140039052:	add    al,BYTE PTR [rax]
   140039054:	(bad)  
   140039055:	add    BYTE PTR [rax],al
   140039057:	add    dh,dh
   140039059:	(bad)  
   14003905a:	add    al,BYTE PTR [rax]
   14003905c:	add    eax,0x4000000
   140039061:	(bad)  
   140039063:	add    BYTE PTR [rax+rax*1],al
   140039066:	add    BYTE PTR [rax],al
   140039068:	adc    ah,BYTE PTR [rdx+0x2]
   14003906b:	add    BYTE PTR [rbx],al
   14003906d:	add    BYTE PTR [rax],al
   14003906f:	add    BYTE PTR [rax],ah
   140039071:	(bad)  
   140039073:	add    BYTE PTR [rdx],al
   140039075:	add    BYTE PTR [rax],al
   140039077:	add    BYTE PTR [rsi],ch
   140039079:	(bad)  
   14003907b:	add    BYTE PTR [rcx],al
   14003907d:	add    BYTE PTR [rax],al
   14003907f:	add    BYTE PTR [rdx+riz*2],bh
   140039082:	add    al,BYTE PTR [rax]
   140039084:	add    BYTE PTR [rax],al
   140039086:	add    BYTE PTR [rax],al
   140039088:	rex.WX (bad) 
   14003908b:	add    bh,bh
   14003908d:	(bad)  
   14003908e:	(bad)  
   14003908f:	call   QWORD PTR [rcx]
   140039091:	adc    al,0x4
   140039093:	add    BYTE PTR [rsp+rsi*1],dl
   140039096:	or     al,BYTE PTR [rax]
   140039098:	(bad)  
   140039099:	push   rdx
   14003909a:	add    dh,BYTE PTR [rax-0x26]
   14003909d:	rol    DWORD PTR [rdx],1
   14003909f:	add    BYTE PTR [rax+0x55],dh
   1400390a2:	add    eax,DWORD PTR [rax]
   1400390a4:	and    BYTE PTR [rbx+0x2],0x0
   1400390a8:	(bad)  
   1400390a9:	(bad)  
   1400390aa:	(bad)  
   1400390ab:	call   QWORD PTR [rcx]
   1400390ad:	add    al,BYTE PTR fs:[rax]
   1400390b0:	add    BYTE PTR [rax],al
   1400390b2:	add    BYTE PTR [rax],al
   1400390b4:	and    BYTE PTR [rdx+rax*1+0x0],ah
   1400390b8:	(bad)  
   1400390b9:	(bad)  
   1400390ba:	(bad)  
   1400390bb:	call   FWORD PTR [rcx]
   1400390bd:	rex or eax,0xad742f00
   1400390c3:	add    BYTE PTR [rbx],ch
   1400390c5:	lods   al,BYTE PTR fs:[rsi]
   1400390c7:	add    BYTE PTR [rdi],ah
   1400390c9:	xor    al,0xab
   1400390cb:	add    BYTE PTR [rdx],bl
   1400390cd:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],esp
   1400390d4:	or     al,dl
   1400390d6:	(bad)  
   1400390d7:	rol    BYTE PTR [rax+rdx*2],0x0
   1400390db:	add    al,ah
   1400390dd:	rol    DWORD PTR [rdx],1
   1400390df:	add    BYTE PTR [rax+0x55],al
   1400390e2:	add    eax,DWORD PTR [rax]
   1400390e4:	adc    al,BYTE PTR [rip+0xffffffffffff0000]        # 0x1400290ea
   1400390ea:	(bad)  
   1400390eb:	push   QWORD PTR [rax-0x1c]
   1400390ee:	add    al,BYTE PTR [rax]
   1400390f0:	and    BYTE PTR [rdx+rax*1+0x0],0xff
   1400390f5:	(bad)  
   1400390f6:	(bad)  
   1400390f7:	call   rsp
   1400390f9:	add    al,BYTE PTR fs:[rax]
   1400390fc:	add    BYTE PTR [rax],al
   1400390fe:	add    BYTE PTR [rax],al
   140039100:	rex.R push 0xffffffffffff0002
   140039106:	(bad)  
   140039107:	call   FWORD PTR [rcx]
   140039109:	rex or eax,0xb3742f00
   14003910f:	add    BYTE PTR [rbx],ch
   140039111:	fs mov dl,0x0
   140039114:	(bad)  
   140039115:	xor    al,0xb1
   140039117:	add    BYTE PTR [rdx],bl
   140039119:	add    DWORD PTR [rdx+0xaf00c00],ebp
   14003911f:	loopne 0x140039129
   140039121:	rol    BYTE PTR [rsi],1
   140039123:	rol    BYTE PTR [rax+rdx*2],0x0
   140039127:	add    al,ah
   140039129:	rol    DWORD PTR [rdx],1
   14003912b:	add    BYTE PTR [rax],dl
   14003912d:	push   rbp
   14003912e:	add    eax,DWORD PTR [rax]
   140039130:	rex.X add eax,0xffff0000
   140039136:	(bad)  
   140039137:	inc    DWORD PTR [rax-0x7ffffd1c]
   14003913d:	push   0xffffffffffff0002
   140039142:	(bad)  
   140039143:	(bad)  
   140039144:	fsubr  DWORD PTR [rax+0x2]
   140039147:	add    BYTE PTR [rax],al
   140039149:	add    BYTE PTR [rax],al
   14003914b:	add    BYTE PTR [rbp+rbp*2+0x2],ah
   14003914f:	add    bh,bh
   140039151:	(bad)  
   140039152:	(bad)  
   140039153:	call   FWORD PTR [rcx]
   140039155:	cs (bad) 
   140039157:	add    BYTE PTR [rsp+riz*2],bl
   14003915a:	loopne 0x14003915c
   14003915c:	sbb    BYTE PTR [rdi+rbx*8],dh
   14003915f:	add    BYTE PTR [rbx],cl
   140039161:	add    esp,ebx
   140039163:	add    BYTE PTR [rax+rsi*2],al
   140039166:	add    BYTE PTR [rax],al
   140039168:	loopne 0x14003913b
   14003916a:	add    al,BYTE PTR [rax]
   14003916c:	loopne 0x1400391c2
   14003916e:	add    eax,DWORD PTR [rax]
   140039170:	rol    BYTE PTR [rsi],cl
   140039172:	add    BYTE PTR [rax],al
   140039174:	movabs al,ds:0xddffffffff00026d
   14003917d:	ins    DWORD PTR es:[rdi],dx
   14003917e:	add    al,BYTE PTR [rax]
   140039180:	add    BYTE PTR [rax],al
   140039182:	add    BYTE PTR [rax],al
   140039184:	rex.WX outs dx,BYTE PTR ds:[rsi]
   140039186:	add    al,BYTE PTR [rax]
   140039188:	add    DWORD PTR [rax],eax
   14003918a:	add    BYTE PTR [rax],al
   14003918c:	push   rbp
   14003918d:	outs   dx,BYTE PTR ds:[rsi]
   14003918e:	add    al,BYTE PTR [rax]
   140039190:	add    al,BYTE PTR [rax]
   140039192:	add    BYTE PTR [rax],al
   140039194:	outs   dx,BYTE PTR ds:[esi]
   140039196:	add    al,BYTE PTR [rax]
   140039198:	add    DWORD PTR [rax],eax
   14003919a:	add    BYTE PTR [rax],al
   14003919c:	mov    dh,0x6e
   14003919e:	add    al,BYTE PTR [rax]
   1400391a0:	add    BYTE PTR [rax],al
   1400391a2:	add    BYTE PTR [rax],al
   1400391a4:	ret    0x26e
   1400391a7:	add    bh,bh
   1400391a9:	(bad)  
   1400391aa:	(bad)  
   1400391ab:	inc    DWORD PTR [rcx]
   1400391ad:	cs add al,0x0
   1400391b0:	cs fs (bad) 
   1400391b3:	add    BYTE PTR [rsi],al
   1400391b5:	xor    al,BYTE PTR [rdx]
   1400391b7:	jo     0x1400391da
   1400391b9:	add    eax,0x34050002
   1400391be:	(bad)  
   1400391bf:	add    BYTE PTR [rax],al
   1400391c1:	outs   dx,DWORD PTR ds:[rsi]
   1400391c2:	add    al,BYTE PTR [rax]
   1400391c4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400391c6:	add    al,BYTE PTR [rax]
   1400391c8:	lods   al,BYTE PTR ds:[rsi]
   1400391c9:	xchg   ecx,eax
   1400391ca:	add    eax,DWORD PTR [rax]
   1400391cc:	and    DWORD PTR [rax],eax
   1400391ce:	add    BYTE PTR [rax],al
   1400391d0:	add    BYTE PTR [rdi+0x2],ch
   1400391d3:	add    BYTE PTR [rsi+0x6f],al
   1400391d6:	add    al,BYTE PTR [rax]
   1400391d8:	lods   al,BYTE PTR ds:[rsi]
   1400391d9:	xchg   ecx,eax
   1400391da:	add    eax,DWORD PTR [rax]
   1400391dc:	sbb    DWORD PTR [rax+0xd],eax
   1400391df:	add    BYTE PTR [rdi],ch
   1400391e1:	je     0x1400391b8
   1400391e3:	add    BYTE PTR [rbx],ch
   1400391e5:	fs (bad) 
   1400391e7:	add    BYTE PTR [rdi],ah
   1400391e9:	xor    al,0xd3
   1400391eb:	add    BYTE PTR [rdx],bl
   1400391ed:	add    esp,ecx
   1400391ef:	add    BYTE PTR [rax+rsi*8],cl
   1400391f2:	or     ah,al
   1400391f4:	or     al,dl
   1400391f6:	(bad)  
   1400391f7:	rol    BYTE PTR [rax+rdx*2],0x0
   1400391fb:	add    al,ah
   1400391fd:	rol    DWORD PTR [rdx],1
   1400391ff:	add    BYTE PTR [rax+0x52000354],dh
   140039205:	(bad)  
   140039206:	add    BYTE PTR [rax],al
   140039208:	(bad)  
   140039209:	(bad)  
   14003920a:	(bad)  
   14003920b:	call   QWORD PTR [rax+0x2e4]
   140039211:	add    BYTE PTR [rax],al
   140039213:	add    BYTE PTR [rsi+0x10002e4],bl
   140039219:	add    BYTE PTR [rax],al
   14003921b:	add    BYTE PTR [rsp+riz*8+0x10002],ch
   140039222:	add    BYTE PTR [rax],al
   140039224:	mov    edx,0xf00002e4
   140039229:	jo     0x14003922d
   14003922b:	add    bh,bh
   14003922d:	(bad)  
   14003922e:	(bad)  
   14003922f:	(bad)  
   140039230:	jle    0x1400392a3
   140039232:	add    al,BYTE PTR [rax]
   140039234:	add    BYTE PTR [rax],al
   140039236:	add    BYTE PTR [rax],al
   140039238:	(bad)  
   140039239:	jno    0x14003923d
   14003923b:	add    BYTE PTR [rcx],al
   14003923d:	add    BYTE PTR [rax],al
   14003923f:	add    BYTE PTR [rdx+0x2000273],bl
   140039245:	add    BYTE PTR [rax],al
   140039247:	add    bl,bl
   140039249:	jae    0x14003924d
   14003924b:	add    BYTE PTR [rcx],al
   14003924d:	add    BYTE PTR [rax],al
   14003924f:	add    bh,ah
   140039251:	jae    0x140039255
   140039253:	add    BYTE PTR [rbx],al
   140039255:	add    BYTE PTR [rax],al
   140039257:	add    BYTE PTR [rax],dl
   140039259:	je     0x14003925d
   14003925b:	add    BYTE PTR [rcx],al
   14003925d:	add    BYTE PTR [rax],al
   14003925f:	add    BYTE PTR [rip+0x3000274],bl        # 0x1430394d9
   140039265:	add    BYTE PTR [rax],al
   140039267:	add    BYTE PTR [rsp+rsi*2],dh
   14003926a:	add    al,BYTE PTR [rax]
   14003926c:	add    DWORD PTR [rax],eax
   14003926e:	add    BYTE PTR [rax],al
   140039270:	ret    0x275
   140039273:	add    BYTE PTR [rax],al
   140039275:	add    BYTE PTR [rax],al
   140039277:	add    dh,cl
   140039279:	jne    0x14003927d
   14003927b:	add    bh,bh
   14003927d:	(bad)  
   14003927e:	(bad)  
   14003927f:	call   FWORD PTR [rcx]
   140039281:	(bad)  
   140039282:	add    eax,0x4d340d00
   140039287:	add    BYTE PTR [rip+0x6004a01],cl        # 0x14603dc8e
   14003928d:	jo     0x14003928f
   14003928f:	add    ah,ah
   140039291:	int3   
   140039292:	add    al,BYTE PTR [rax]
   140039294:	add    al,BYTE PTR [rax]
   140039297:	add    BYTE PTR [rcx],bl
   140039299:	and    al,0x7
   14003929b:	add    BYTE PTR [rdx],dl
   14003929d:	rex.WRX add BYTE PTR fs:[rdx],r10b
   1400392a1:	xor    al,0x4d
   1400392a3:	add    BYTE PTR [rdx],dl
   1400392a5:	add    DWORD PTR [rdx+0x0],ecx
   1400392a8:	or     esi,DWORD PTR [rax+0x0]
   1400392ab:	add    ah,ah
   1400392ad:	int3   
   1400392ae:	add    al,BYTE PTR [rax]
   1400392b0:	add    al,BYTE PTR [rax]
   1400392b3:	add    BYTE PTR [rcx],al
   1400392b5:	sbb    BYTE PTR [rdx],cl
   1400392b7:	add    BYTE PTR [rax],bl
   1400392b9:	or     al,BYTE PTR fs:[rax]
   1400392bc:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400392c0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400392c3:	add    BYTE PTR [rax],bl
   1400392c5:	xor    dl,BYTE PTR [rax+rsi*8]
   1400392c8:	adc    ah,al
   1400392ca:	adc    BYTE PTR [rax+0x1],dh
   1400392cd:	sbb    cl,BYTE PTR [rdx]
   1400392cf:	add    BYTE PTR [rdx],bl
   1400392d1:	je     0x1400392dc
   1400392d3:	add    BYTE PTR [rdx],bl
   1400392d5:	or     BYTE PTR fs:[rax],al
   1400392d8:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   1400392dc:	sbb    dh,BYTE PTR [rsi+rax*1]
   1400392df:	add    BYTE PTR [rdx],bl
   1400392e1:	xor    dl,BYTE PTR [rsi]
   1400392e3:	loopne 0x1400392f6
   1400392e5:	adc    al,0x4
   1400392e7:	add    BYTE PTR [rsp+rsi*1],dl
   1400392ea:	or     DWORD PTR [rax],eax
   1400392ec:	(bad)  
   1400392ed:	push   rdx
   1400392ee:	add    dh,BYTE PTR [rax-0x26]
   1400392f1:	rol    DWORD PTR [rdx],1
   1400392f3:	add    BYTE PTR [rax+0x56],ah
   1400392f6:	add    eax,DWORD PTR [rax]
   1400392f8:	mov    al,0x7a
   1400392fa:	add    al,BYTE PTR [rax]
   1400392fc:	(bad)  
   1400392fd:	(bad)  
   1400392fe:	(bad)  
   1400392ff:	push   rdx
   140039301:	jp     0x140039305
   140039303:	add    BYTE PTR [rax],al
   140039305:	add    BYTE PTR [rax],al
   140039307:	add    BYTE PTR [rip+0xffffffffff00027b],ch        # 0x13f039588
   14003930d:	(bad)  
   14003930e:	(bad)  
   14003930f:	call   QWORD PTR [rcx]
   140039311:	and    BYTE PTR [rdx],cl
   140039313:	add    BYTE PTR [rax],ah
   140039315:	push   rsp
   140039316:	or     eax,0xc341b00
   14003931b:	add    BYTE PTR [rip+0x7f00952],cl        # 0x147f39c73
   140039321:	loopne 0x140039328
   140039323:	rol    BYTE PTR [rbx],0x70
   140039326:	add    ah,BYTE PTR [rax-0x26]
   140039329:	rol    DWORD PTR [rdx],1
   14003932b:	add    BYTE PTR [rax],dh
   14003932d:	push   rsi
   14003932e:	add    eax,DWORD PTR [rax]
   140039330:	loopne 0x1400393ad
   140039332:	add    al,BYTE PTR [rax]
   140039334:	(bad)  
   140039335:	(bad)  
   140039336:	(bad)  
   140039337:	push   QWORD PTR [rdx]
   140039339:	jge    0x14003933d
   14003933b:	add    BYTE PTR [rax],al
   14003933d:	add    BYTE PTR [rax],al
   14003933f:	add    BYTE PTR [rbx+0x7d],ch
   140039342:	add    al,BYTE PTR [rax]
   140039344:	(bad)  
   140039345:	(bad)  
   140039346:	(bad)  
   140039347:	jmp    QWORD PTR [rcx]
   140039349:	jle    0x14003934d
   14003934b:	add    BYTE PTR [rcx],al
   14003934d:	add    BYTE PTR [rax],al
   14003934f:	add    BYTE PTR [rdx+0x7e],bl
   140039352:	add    al,BYTE PTR [rax]
   140039354:	(bad)  
   140039355:	(bad)  
   140039356:	(bad)  
   140039357:	call   FWORD PTR [rcx]
   140039359:	and    DWORD PTR [rax],ecx
   14003935b:	add    BYTE PTR [rdx],dl
   14003935d:	add    DWORD PTR [rcx],edx
   14003935f:	add    BYTE PTR [rbx],cl
   140039361:	lock or eax,esp
   140039364:	(bad)  
   140039365:	jo     0x14003936d
   140039367:	(bad)  
   140039368:	add    eax,0xe4300450
   14003936d:	int3   
   14003936e:	add    al,BYTE PTR [rax]
   140039370:	jo     0x140039372
   140039372:	add    BYTE PTR [rax],al
   140039374:	and    DWORD PTR [rax],ecx
   140039376:	add    al,0x0
   140039378:	or     ah,dl
   14003937a:	adc    BYTE PTR [rax],al
   14003937c:	add    al,0xc4
   14003937e:	sbb    eax,DWORD PTR [rax]
   140039380:	mov    al,0x7e
   140039382:	add    al,BYTE PTR [rax]
   140039384:	xor    edi,DWORD PTR [rdi+0x2]
   140039387:	add    BYTE PTR [rax-0x6d],bl
   14003938a:	add    eax,DWORD PTR [rax]
   14003938c:	and    DWORD PTR [rax],eax
   14003938e:	add    BYTE PTR [rax],al
   140039390:	mov    al,0x7e
   140039392:	add    al,BYTE PTR [rax]
   140039394:	xor    edi,DWORD PTR [rdi+0x2]
   140039397:	add    BYTE PTR [rax-0x6d],bl
   14003939a:	add    eax,DWORD PTR [rax]
   14003939c:	and    DWORD PTR [rax],eax
   14003939e:	add    al,0x0
   1400393a0:	add    ah,dl
   1400393a2:	adc    BYTE PTR [rax],al
   1400393a4:	add    ah,al
   1400393a6:	sbb    eax,DWORD PTR [rax]
   1400393a8:	mov    al,0x7e
   1400393aa:	add    al,BYTE PTR [rax]
   1400393ac:	xor    edi,DWORD PTR [rdi+0x2]
   1400393af:	add    BYTE PTR [rax-0x6d],bl
   1400393b2:	add    eax,DWORD PTR [rax]
   1400393b4:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740893bc
   1400393ba:	add    DWORD PTR [rax],eax
   1400393bc:	add    DWORD PTR [rsi],ebx
   1400393be:	or     al,0x0
   1400393c0:	(bad)  
   1400393c1:	je     0x1400393ce
   1400393c3:	add    BYTE PTR [rsi],bl
   1400393c5:	or     al,BYTE PTR fs:[rax]
   1400393c8:	(bad)  
   1400393c9:	push   rsp
   1400393ca:	or     DWORD PTR [rax],eax
   1400393cc:	(bad)  
   1400393cd:	xor    al,0x8
   1400393cf:	add    BYTE PTR [rsi],bl
   1400393d1:	xor    bl,BYTE PTR [rdx]
   1400393d3:	lock sbb al,ah
   1400393d6:	(bad)  
   1400393d7:	rol    BYTE PTR [rcx],0x1e
   1400393da:	or     al,BYTE PTR [rax]
   1400393dc:	(bad)  
   1400393dd:	xor    al,0xe
   1400393df:	add    BYTE PTR [rsi],bl
   1400393e1:	push   rdx
   1400393e2:	sbb    dh,al
   1400393e4:	sbb    al,ah
   1400393e6:	(bad)  
   1400393e7:	rcl    BYTE PTR [rax+rax*8],1
   1400393ea:	adc    dh,BYTE PTR [rax+0x11]
   1400393ed:	(bad)  
   1400393ee:	adc    BYTE PTR [rax+0x1],dl
   1400393f1:	adc    al,0xa
   1400393f3:	add    BYTE PTR [rsp+rsi*1],dl
   1400393f6:	or     al,0x0
   1400393f8:	adc    al,0x32
   1400393fa:	adc    al,dh
   1400393fc:	(bad)  
   1400393fd:	loopne 0x14003940b
   1400393ff:	ror    BYTE PTR [rdx],1
   140039401:	ror    BYTE PTR [rax],0x70
   140039404:	(bad)  
   140039405:	(bad)  
   140039406:	(bad)  
   140039407:	push   rax
   140039408:	add    DWORD PTR [rdi],ebx
   14003940a:	or     DWORD PTR [rax],eax
   14003940c:	(bad)  
   14003940d:	(bad)  
   14003940e:	sbb    esi,eax
   140039410:	sbb    eax,esp
   140039412:	(bad)  
   140039413:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15273a7d9
   140039419:	(bad)  
   14003941a:	adc    DWORD PTR [rax+0x10],edx
   14003941d:	xor    BYTE PTR [rax],al
   14003941f:	add    BYTE PTR [rcx],al
   140039421:	sbb    DWORD PTR [rip+0x12011900],eax        # 0x15204ad27
   140039427:	add    BYTE PTR [rsi],cl
   140039429:	jo     0x140039438
   14003942b:	xor    BYTE PTR [rax+rdx*2],cl
   14003942e:	add    BYTE PTR [rax],al
   140039430:	and    DWORD PTR [rcx],ebx
   140039432:	or     al,BYTE PTR [rax]
   140039434:	sbb    esp,esi
   140039436:	or     eax,0xee41300
   14003943b:	add    BYTE PTR [rsp+rdx*8],cl
   14003943e:	str    WORD PTR [rax]
   140039441:	(bad)  
   140039442:	adc    BYTE PTR [rax],al
   140039444:	add    al,0x64
   140039446:	adc    DWORD PTR [rax],eax
   140039448:	ror    BYTE PTR [rdi-0x700dfffe],1
   14003944e:	add    al,BYTE PTR [rax]
   140039450:	and    BYTE PTR [rbx+rax*1+0x2100],dl
   140039457:	add    al,dl
   140039459:	pop    QWORD PTR [rdx]
   14003945b:	add    dl,dh
   14003945d:	pop    QWORD PTR [rdx]
   14003945f:	add    BYTE PTR [rax],ah
   140039461:	xchg   esp,eax
   140039462:	add    eax,DWORD PTR [rax]
   140039464:	and    DWORD PTR [rax],eax
   140039466:	or     al,BYTE PTR [rax]
   140039468:	add    ah,dh
   14003946a:	or     eax,0xee40000
   14003946f:	add    BYTE PTR [rax],al
   140039471:	(bad)  
   140039472:	sldt   WORD PTR [rax]
   140039475:	(bad)  
   140039476:	adc    BYTE PTR [rax],al
   140039478:	add    BYTE PTR [rcx+rdx*1+0x0],ah
   14003947c:	ror    BYTE PTR [rdi-0x700dfffe],1
   140039482:	add    al,BYTE PTR [rax]
   140039484:	and    BYTE PTR [rbx+rax*1+0xa140100],dl
   14003948b:	add    BYTE PTR [rsp+rdx*2],dl
   14003948e:	or     al,BYTE PTR [rax]
   140039490:	adc    al,0x34
   140039492:	(bad)  
   140039493:	add    BYTE PTR [rax+rsi*8],dl
   140039496:	adc    ah,al
   140039498:	adc    al,dl
   14003949a:	(bad)  
   14003949b:	ror    BYTE PTR [rax+rsi*2],0xb
   14003949f:	(bad)  
   1400394a0:	add    DWORD PTR [rdi],ecx
   1400394a2:	(bad)  
   1400394a3:	add    BYTE PTR [rdi],cl
   1400394a5:	or     BYTE PTR fs:[rax],al
   1400394a8:	sysenter 
   1400394aa:	(bad)  
   1400394ab:	add    BYTE PTR [rdi],cl
   1400394ad:	xor    cl,BYTE PTR [rbx]
   1400394af:	jo     0x1400394c2
   1400394b1:	and    cl,BYTE PTR [rdx]
   1400394b3:	add    BYTE PTR [rdx],ah
   1400394b5:	fs or  al,0x0
   1400394b8:	sbb    eax,0x18000b54
   1400394bd:	xor    al,0xa
   1400394bf:	add    BYTE PTR [rdx],cl
   1400394c1:	push   rdx
   1400394c2:	(bad)  
   1400394c3:	lock add al,0xe0
   1400394c6:	add    dh,BYTE PTR [rax-0x26]
   1400394c9:	rol    DWORD PTR [rdx],1
   1400394cb:	add    al,al
   1400394cd:	push   rsi
   1400394ce:	add    eax,DWORD PTR [rax]
   1400394d0:	(bad)  
   1400394d1:	(bad)  
   1400394d2:	(bad)  
   1400394d3:	call   rax
   1400394d5:	in     al,0x2
   1400394d7:	add    BYTE PTR [rax],dh
   1400394d9:	sahf   
   1400394da:	add    al,BYTE PTR [rax]
   1400394dc:	(bad)  
   1400394dd:	(bad)  
   1400394de:	(bad)  
   1400394df:	jmp    QWORD PTR [rbx+0x29e]
   1400394e5:	add    BYTE PTR [rax],al
   1400394e7:	add    ah,bl
   1400394e9:	sahf   
   1400394ea:	add    al,BYTE PTR [rax]
   1400394ec:	(bad)  
   1400394ed:	(bad)  
   1400394ee:	(bad)  
   1400394ef:	call   QWORD PTR [rcx]
   1400394f1:	or     al,BYTE PTR es:[rax]
   1400394f4:	es fs or eax,0xc542100
   1400394fb:	add    BYTE PTR [rsp+rsi*1],bl
   1400394fe:	or     al,BYTE PTR [rax]
   140039500:	(bad)  
   140039501:	push   rdx
   140039502:	or     dh,al
   140039504:	or     al,ah
   140039506:	(bad)  
   140039507:	jo     0x1400394e3
   140039509:	rol    DWORD PTR [rdx],1
   14003950b:	add    al,dh
   14003950d:	push   rsi
   14003950e:	add    eax,DWORD PTR [rax]
   140039510:	(bad)  
   140039511:	(bad)  
   140039512:	(bad)  
   140039513:	jmp    rax
   140039515:	in     al,0x2
   140039517:	add    BYTE PTR [rax],al
   140039519:	movabs al,ds:0xa077ffffffff0002
   140039522:	add    al,BYTE PTR [rax]
   140039524:	add    BYTE PTR [rax],al
   140039526:	add    BYTE PTR [rax],al
   140039528:	mov    al,0xa0
   14003952a:	add    al,BYTE PTR [rax]
   14003952c:	(bad)  
   14003952d:	(bad)  
   14003952e:	(bad)  
   14003952f:	call   QWORD PTR [rcx]
   140039531:	or     al,BYTE PTR es:[rax]
   140039534:	es fs or eax,0xc542100
   14003953b:	add    BYTE PTR [rsp+rsi*1],bl
   14003953e:	or     al,BYTE PTR [rax]
   140039540:	(bad)  
   140039541:	push   rdx
   140039542:	or     dh,al
   140039544:	or     al,ah
   140039546:	(bad)  
   140039547:	jo     0x140039523
   140039549:	rol    DWORD PTR [rdx],1
   14003954b:	add    BYTE PTR [rax-0x2ffffcaa],dl
   140039551:	movabs eax,ds:0xa247ffffffff0002
   14003955a:	add    al,BYTE PTR [rax]
   14003955c:	add    BYTE PTR [rax],al
   14003955e:	add    BYTE PTR [rax],al
   140039560:	and    BYTE PTR [rdx-0xfffe],0xff
   140039567:	call   FWORD PTR [rcx]
   140039569:	adc    eax,0x52060002
   14003956e:	add    dh,BYTE PTR [rax-0x1c]
   140039571:	int3   
   140039572:	add    al,BYTE PTR [rax]
   140039574:	sub    BYTE PTR [rax],al
   140039576:	add    BYTE PTR [rax],al
   140039578:	add    DWORD PTR [rsi],edx
   14003957a:	or     DWORD PTR [rax],eax
   14003957c:	(bad)  
   14003957d:	je     0x140039584
   14003957f:	add    BYTE PTR [rsi],dl
   140039581:	fs add al,0x0
   140039584:	(bad)  
   140039585:	push   rsp
   140039586:	add    eax,DWORD PTR [rax]
   140039588:	(bad)  
   140039589:	xor    al,0x2
   14003958b:	add    BYTE PTR [rsi],dl
   14003958d:	loopne 0x14003958f
   14003958f:	add    BYTE PTR [rcx],al
   140039591:	or     al,BYTE PTR [rip+0x6820a00]        # 0x146859f97
   140039597:	loopne 0x14003959d
   140039599:	(bad)  
   14003959a:	add    edx,DWORD PTR [rax+0x2]
   14003959d:	xor    BYTE PTR [rax],al
   14003959f:	add    BYTE PTR [rcx],ah
   1400395a1:	clts   
   1400395a3:	add    BYTE PTR [rdi],cl
   1400395a5:	hlt    
   1400395a6:	or     BYTE PTR [rax],al
   1400395a8:	or     al,ah
   1400395aa:	sldt   WORD PTR [rip+0x40000e74]        # 0x18003a425
   1400395b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400395b2:	add    al,BYTE PTR [rax]
   1400395b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1400395b6:	add    al,BYTE PTR [rax]
   1400395b8:	nop
   1400395b9:	xchg   ebp,eax
   1400395ba:	add    eax,DWORD PTR [rax]
   1400395bc:	and    DWORD PTR [rax],eax
   1400395be:	(bad)  
   1400395bf:	add    BYTE PTR [rax],al
   1400395c1:	hlt    
   1400395c2:	or     BYTE PTR [rax],al
   1400395c4:	add    ah,al
   1400395c6:	sldt   WORD PTR [rax]
   1400395c9:	je     0x1400395d9
   1400395cb:	add    BYTE PTR [rax-0x5a],al
   1400395ce:	add    al,BYTE PTR [rax]
   1400395d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1400395d2:	add    al,BYTE PTR [rax]
   1400395d4:	nop
   1400395d5:	xchg   ebp,eax
   1400395d6:	add    eax,DWORD PTR [rax]
   1400395d8:	add    DWORD PTR [rdx],ecx
   1400395da:	add    al,0x0
   1400395dc:	or     dh,BYTE PTR [rdx+rcx*1]
   1400395df:	add    BYTE PTR [rdx],cl
   1400395e1:	jb     0x1400395e9
   1400395e3:	jo     0x1400395fe
   1400395e5:	(bad)  
   1400395e6:	add    eax,0x6c010c00
   1400395eb:	add    BYTE PTR [rip+0x27003e0],al        # 0x1427399d1
   1400395f1:	push   rax
   1400395f2:	add    BYTE PTR [rax],al
   1400395f4:	in     al,0xcc
   1400395f6:	add    al,BYTE PTR [rax]
   1400395f8:	push   rax
   1400395f9:	add    eax,DWORD PTR [rax]
   1400395fb:	add    BYTE PTR [rcx],ah
   1400395fd:	adc    al,BYTE PTR [rax+rax*1]
   140039600:	adc    ah,BYTE PTR [rbx+rsi*2+0x0]
   140039604:	or     BYTE PTR [rdx+rsi*2],dh
   140039607:	add    BYTE PTR [rax-0x55],dh
   14003960a:	add    al,BYTE PTR [rax]
   14003960c:	stos   DWORD PTR es:[rdi],eax
   14003960d:	stos   DWORD PTR es:[rdi],eax
   14003960e:	add    al,BYTE PTR [rax]
   140039610:	in     al,0x95
   140039612:	add    eax,DWORD PTR [rax]
   140039614:	and    DWORD PTR [rax],eax
   140039616:	add    BYTE PTR [rax],al
   140039618:	jo     0x1400395c5
   14003961a:	add    al,BYTE PTR [rax]
   14003961c:	stos   DWORD PTR es:[rdi],eax
   14003961d:	stos   DWORD PTR es:[rdi],eax
   14003961e:	add    al,BYTE PTR [rax]
   140039620:	in     al,0x95
   140039622:	add    eax,DWORD PTR [rax]
   140039624:	and    DWORD PTR [rax],eax
   140039626:	add    al,0x0
   140039628:	add    BYTE PTR [rbx+rsi*2+0x0],ah
   14003962c:	add    BYTE PTR [rdx+rsi*2],dh
   14003962f:	add    BYTE PTR [rax-0x55],dh
   140039632:	add    al,BYTE PTR [rax]
   140039634:	stos   DWORD PTR es:[rdi],eax
   140039635:	stos   DWORD PTR es:[rdi],eax
   140039636:	add    al,BYTE PTR [rax]
   140039638:	in     al,0x95
   14003963a:	add    eax,DWORD PTR [rax]
   14003963c:	add    DWORD PTR [rcx+rax*1],eax
   14003963f:	add    BYTE PTR [rdx+riz*2],al
   140039642:	add    BYTE PTR [rax],al
   140039644:	adc    DWORD PTR [rsp+rax*1],edx
   140039647:	add    BYTE PTR [rsp+rsi*1],dl
   14003964a:	or     DWORD PTR [rax],eax
   14003964c:	(bad)  
   14003964d:	push   rdx
   14003964e:	add    dh,BYTE PTR [rax-0x26]
   140039651:	rol    DWORD PTR [rdx],1
   140039653:	add    BYTE PTR [rax],ah
   140039655:	push   rdi
   140039656:	add    eax,DWORD PTR [rax]
   140039658:	add    BYTE PTR [rsi-0xfffe],ch
   14003965e:	(bad)  
   14003965f:	push   QWORD PTR [rbx]
   140039661:	scas   al,BYTE PTR es:[rdi]
   140039662:	add    al,BYTE PTR [rax]
   140039664:	add    BYTE PTR [rax],al
   140039666:	add    BYTE PTR [rax],al
   140039668:	jnp    0x140039618
   14003966a:	add    al,BYTE PTR [rax]
   14003966c:	(bad)  
   14003966d:	(bad)  
   14003966e:	(bad)  
   14003966f:	call   QWORD PTR [rcx]
   140039671:	adc    al,0x4
   140039673:	add    BYTE PTR [rsp+rsi*1],dl
   140039676:	or     DWORD PTR [rax],eax
   140039678:	(bad)  
   140039679:	push   rdx
   14003967a:	add    dh,BYTE PTR [rax-0x26]
   14003967d:	rol    DWORD PTR [rdx],1
   14003967f:	add    BYTE PTR [rax+0x57],dl
   140039682:	add    eax,DWORD PTR [rax]
   140039684:	nop
   140039685:	scas   al,BYTE PTR es:[rdi]
   140039686:	add    al,BYTE PTR [rax]
   140039688:	(bad)  
   140039689:	(bad)  
   14003968a:	(bad)  
   14003968b:	inc    ebx
   14003968d:	scas   al,BYTE PTR es:[rdi]
   14003968e:	add    al,BYTE PTR [rax]
   140039690:	add    BYTE PTR [rax],al
   140039692:	add    BYTE PTR [rax],al
   140039694:	(bad)  
   140039695:	scas   al,BYTE PTR es:[rdi]
   140039696:	add    al,BYTE PTR [rax]
   140039698:	(bad)  
   140039699:	(bad)  
   14003969a:	(bad)  
   14003969b:	inc    DWORD PTR [rcx]
   14003969d:	add    al,0x1
   14003969f:	add    BYTE PTR [rdx+rax*1],al
   1400396a2:	add    BYTE PTR [rax],al
   1400396a4:	and    DWORD PTR [rsi],ecx
   1400396a6:	(bad)  
   1400396a7:	add    BYTE PTR [rsi],cl
   1400396a9:	je     0x1400396ab
   1400396ab:	add    BYTE PTR [rdx],cl
   1400396ad:	add    eax,DWORD PTR fs:[rax]
   1400396b0:	add    eax,0x10000234
   1400396b5:	mov    al,0x2
   1400396b7:	add    BYTE PTR [rax],ch
   1400396b9:	mov    al,0x2
   1400396bb:	add    BYTE PTR [rsi+rdx*4+0x210003],bl
   1400396c2:	add    BYTE PTR [rax],al
   1400396c4:	adc    BYTE PTR [rax-0x4fd7fffe],dh
   1400396ca:	add    al,BYTE PTR [rax]
   1400396cc:	pushf  
   1400396cd:	xchg   esi,eax
   1400396ce:	add    eax,DWORD PTR [rax]
   1400396d0:	add    DWORD PTR [rsi],eax
   1400396d2:	add    al,BYTE PTR [rax]
   1400396d4:	(bad)  
   1400396d5:	jb     0x1400396d9
   1400396d7:	xor    BYTE PTR [rcx],ah
   1400396d9:	adc    al,0x8
   1400396db:	add    BYTE PTR [rsp+riz*8],dl
   1400396de:	or     DWORD PTR [rax],eax
   1400396e0:	pcmpeqb mm1,QWORD PTR [rax]
   1400396e3:	add    BYTE PTR [rdx],cl
   1400396e5:	fs (bad) 
   1400396e7:	add    BYTE PTR [rip+0xffffffffb0000654],al        # 0xf0039d41
   1400396ed:	mov    dl,0x2
   1400396ef:	add    al,bl
   1400396f1:	mov    dl,0x2
   1400396f3:	add    BYTE PTR [rax],dh
   1400396f5:	push   0x3
   1400396f7:	add    BYTE PTR [rcx],ah
   1400396f9:	add    BYTE PTR [rax],al
   1400396fb:	add    BYTE PTR [rax-0x27fffd4e],dh
   140039701:	mov    dl,0x2
   140039703:	add    BYTE PTR [rax],dh
   140039705:	push   0x3
   140039707:	add    BYTE PTR [rcx],bl
   140039709:	sbb    eax,DWORD PTR [rbx]
   14003970b:	add    BYTE PTR [rcx],cl
   14003970d:	add    DWORD PTR [rsi+0x1],edx
   140039710:	add    dh,BYTE PTR [rax]
   140039712:	add    BYTE PTR [rax],al
   140039714:	in     al,0xcc
   140039716:	add    al,BYTE PTR [rax]
   140039718:	movabs al,ds:0x1c00072e1900000a
   140039721:	fs push rdi
   140039723:	add    BYTE PTR [rax],bl
   140039725:	xor    al,0x55
   140039727:	add    BYTE PTR [rbx],cl
   140039729:	add    DWORD PTR [rdx+0x0],edx
   14003972c:	add    al,0x70
   14003972e:	add    BYTE PTR [rax],al
   140039730:	loopne 0x140039703
   140039732:	add    al,BYTE PTR [rax]
   140039734:	adc    BYTE PTR [rdi+0x3],0x0
   140039738:	(bad)  
   140039739:	add    al,BYTE PTR [rax]
   14003973b:	add    al,dh
   14003973d:	mov    ecx,0xffff0002
   140039742:	(bad)  
   140039743:	call   QWORD PTR [rdi]
   140039745:	mov    ebx,0x2
   14003974a:	add    BYTE PTR [rax],al
   14003974c:	push   rsp
   14003974d:	mov    ebx,0xffff0002
   140039752:	(bad)  
   140039753:	call   FWORD PTR [rcx]
   140039755:	sbb    eax,DWORD PTR [rbx]
   140039757:	add    BYTE PTR [rcx],cl
   140039759:	add    DWORD PTR [rax],esi
   14003975b:	add    BYTE PTR [rdx],al
   14003975d:	xor    BYTE PTR [rax],al
   14003975f:	add    ah,ah
   140039761:	int3   
   140039762:	add    al,BYTE PTR [rax]
   140039764:	jo     0x140039767
   140039766:	add    BYTE PTR [rax],al
   140039768:	sbb    DWORD PTR [rax],ebp
   14003976a:	(bad)  
   14003976b:	add    BYTE PTR [rdi],dl
   14003976d:	xor    al,0x38
   14003976f:	add    BYTE PTR [rdi],dl
   140039771:	add    DWORD PTR [rdx],esi
   140039773:	add    BYTE PTR [rax],cl
   140039775:	jo     0x14003977e
   140039777:	(bad)  
   140039778:	(bad)  
   140039779:	push   rax
   14003977a:	add    BYTE PTR [rax],al
   14003977c:	in     al,0xcc
   14003977e:	add    al,BYTE PTR [rax]
   140039780:	add    BYTE PTR [rcx],0x0
   140039783:	add    BYTE PTR [rcx],ah
   140039785:	or     BYTE PTR [rdx],al
   140039787:	add    BYTE PTR [rax],cl
   140039789:	in     al,0x37
   14003978b:	add    BYTE PTR [rax+0x50002bc],dl
   140039791:	mov    ebp,0x97680002
   140039796:	add    eax,DWORD PTR [rax]
   140039798:	and    DWORD PTR [rax],eax
   14003979a:	add    BYTE PTR [rax],al
   14003979c:	nop
   14003979d:	mov    esp,0xbd050002
   1400397a2:	add    al,BYTE PTR [rax]
   1400397a4:	push   0x19000397
   1400397a9:	(bad)  
   1400397aa:	(bad)  
   1400397ab:	add    BYTE PTR [rcx+rax*1],cl
   1400397ae:	sub    DWORD PTR [rax],eax
   1400397b0:	add    eax,0x3600470
   1400397b5:	push   rax
   1400397b6:	add    dh,BYTE PTR [rax]
   1400397b8:	in     al,0xcc
   1400397ba:	add    al,BYTE PTR [rax]
   1400397bc:	xor    BYTE PTR [rcx],al
   1400397be:	add    BYTE PTR [rax],al
   1400397c0:	sbb    DWORD PTR [rcx],ebp
   1400397c2:	or     DWORD PTR [rax],eax
   1400397c4:	sbb    esi,DWORD PTR [rcx+rsi*1+0x0]
   1400397c8:	sbb    esp,DWORD PTR [rax+rsi*1+0x0]
   1400397cc:	sbb    esi,DWORD PTR [rdi+rbp*1]
   1400397cf:	add    BYTE PTR [rbx],bl
   1400397d1:	add    DWORD PTR [rax+rax*1],ebp
   1400397d4:	adc    BYTE PTR [rax+0x0],dl
   1400397d7:	add    ah,ah
   1400397d9:	int3   
   1400397da:	add    al,BYTE PTR [rax]
   1400397dc:	push   rax
   1400397dd:	add    DWORD PTR [rax],eax
   1400397df:	add    BYTE PTR [rcx],cl
   1400397e1:	sbb    DWORD PTR [rdx],ecx
   1400397e3:	add    BYTE PTR [rcx],bl
   1400397e5:	in     al,0xb
   1400397e7:	add    BYTE PTR [rcx],bl
   1400397e9:	je     0x1400397f5
   1400397eb:	add    BYTE PTR [rcx],bl
   1400397ed:	or     DWORD PTR fs:[rax],eax
   1400397f0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400397f3:	add    BYTE PTR [rcx],bl
   1400397f5:	push   rdx
   1400397f6:	adc    eax,0x2ce18f0
   1400397fb:	add    BYTE PTR [rcx],al
   1400397fd:	add    BYTE PTR [rax],al
   1400397ff:	add    BYTE PTR [rdx-0x39],ah
   140039802:	add    al,BYTE PTR [rax]
   140039804:	out    0xc8,al
   140039806:	add    al,BYTE PTR [rax]
   140039808:	out    dx,al
   140039809:	in     al,0x2
   14003980b:	add    dh,ah
   14003980d:	enter  0x2,0x1
   140039811:	add    BYTE PTR [rax],al
   140039813:	add    BYTE PTR [rcx],dl
   140039815:	(bad)  
   140039816:	add    al,BYTE PTR [rax]
   140039818:	(bad)  
   140039819:	xor    al,BYTE PTR [rdx]
   14003981b:	xor    BYTE PTR [rax],bl
   14003981d:	(bad)  
   14003981e:	add    al,BYTE PTR [rax]
   140039820:	add    DWORD PTR [rax],eax
   140039822:	add    BYTE PTR [rax],al
   140039824:	bswap  edx
   140039826:	add    al,BYTE PTR [rax]
   140039828:	jne    0x1400397f4
   14003982a:	add    al,BYTE PTR [rax]
   14003982c:	or     al,0xe5
   14003982e:	add    al,BYTE PTR [rax]
   140039830:	add    BYTE PTR [rax],al
   140039832:	add    BYTE PTR [rax],al
   140039834:	add    DWORD PTR [rsi],eax
   140039836:	add    al,BYTE PTR [rax]
   140039838:	(bad)  
   140039839:	xor    al,BYTE PTR [rdx]
   14003983b:	push   rax
   14003983c:	add    DWORD PTR [rax],ecx
   14003983e:	add    DWORD PTR [rax],eax
   140039840:	or     BYTE PTR [rdx+0x0],al
   140039843:	add    BYTE PTR [rcx],dl
   140039845:	sbb    BYTE PTR [rip+0x14621800],al        # 0x15465b04b
   14003984b:	loopne 0x14003985f
   14003984d:	jo     0x140039860
   14003984f:	(bad)  
   140039850:	adc    BYTE PTR [rax],dh
   140039852:	add    BYTE PTR [rax],al
   140039854:	sbb    dh,cl
   140039856:	add    al,BYTE PTR [rax]
   140039858:	add    DWORD PTR [rax],eax
   14003985a:	add    BYTE PTR [rax],al
   14003985c:	fwait
   14003985d:	int    0x2
   14003985f:	add    BYTE PTR [rbx+0x270002cd],bh
   140039865:	in     eax,0x2
   140039867:	add    BYTE PTR [rax],al
   140039869:	add    BYTE PTR [rax],al
   14003986b:	add    BYTE PTR [rcx],cl
   14003986d:	(bad)  
   14003986e:	(bad)  
   14003986f:	add    BYTE PTR [rdi],dl
   140039871:	xor    al,0xd
   140039873:	add    BYTE PTR [rdi],dl
   140039875:	jb     0x14003988a
   140039877:	loopne 0x14003988a
   140039879:	jo     0x14003988b
   14003987b:	(bad)  
   14003987c:	sbb    dh,cl
   14003987e:	add    al,BYTE PTR [rax]
   140039880:	add    DWORD PTR [rax],eax
   140039882:	add    BYTE PTR [rax],al
   140039884:	jmp    0x140039853
   140039886:	add    al,BYTE PTR [rax]
   140039888:	add    al,0xce
   14003988a:	add    al,BYTE PTR [rax]
   14003988c:	push   rbx
   14003988d:	in     eax,0x2
   14003988f:	add    BYTE PTR [rsi+rcx*8],al
   140039892:	add    al,BYTE PTR [rax]
   140039894:	or     DWORD PTR [rdx],ecx
   140039896:	add    al,0x0
   140039898:	or     dh,BYTE PTR [rsi+rax*1]
   14003989b:	add    BYTE PTR [rdx],cl
   14003989d:	xor    al,BYTE PTR [rsi]
   14003989f:	jo     0x1400398b9
   1400398a1:	(bad)  
   1400398a2:	add    al,BYTE PTR [rax]
   1400398a4:	add    DWORD PTR [rax],eax
   1400398a6:	add    BYTE PTR [rax],al
   1400398a8:	(bad)  
   1400398aa:	add    al,BYTE PTR [rax]
   1400398ac:	adc    bh,cl
   1400398ae:	add    al,BYTE PTR [rax]
   1400398b0:	movabs al,ds:0x10002cf100002e5
   1400398b9:	or     eax,0x340d0004
   1400398be:	or     DWORD PTR [rax],eax
   1400398c0:	or     eax,0x1500632
   1400398c5:	sbb    DWORD PTR [rdx],ecx
   1400398c7:	add    BYTE PTR [rcx],bl
   1400398c9:	je     0x1400398d4
   1400398cb:	add    BYTE PTR [rcx],bl
   1400398cd:	or     BYTE PTR fs:[rax],al
   1400398d0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400398d4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400398d7:	add    BYTE PTR [rcx],bl
   1400398d9:	xor    dl,BYTE PTR [rip+0xe0]        # 0x1400399bf
   1400398df:	add    BYTE PTR [rax],al
   1400398e1:	add    BYTE PTR [rax],al
   1400398e3:	add    dl,dh
   1400398e5:	int3   
   1400398e6:	and    edx,DWORD PTR [rbx+0x0]
   1400398e9:	add    BYTE PTR [rax],al
   1400398eb:	add    BYTE PTR [rdx],dl
   1400398ed:	cdq    
   1400398ee:	add    eax,DWORD PTR [rax]
   1400398f0:	add    DWORD PTR [rax],eax
   1400398f2:	add    BYTE PTR [rax],al
   1400398f4:	add    DWORD PTR [rax],eax
   1400398f6:	add    BYTE PTR [rax],al
   1400398f8:	add    DWORD PTR [rax],eax
   1400398fa:	add    BYTE PTR [rax],al
   1400398fc:	or     BYTE PTR [rcx-0x66f3fffd],bl
   140039902:	add    eax,DWORD PTR [rax]
   140039904:	adc    BYTE PTR [rcx-0x461ffffd],bl
   14003990a:	add    al,BYTE PTR [rax]
   14003990c:	(bad)  
   14003990d:	cdq    
   14003990e:	add    eax,DWORD PTR [rax]
   140039910:	add    BYTE PTR [rax],al
   140039912:	push   rdi
   140039913:	push   rsp
   140039914:	jae    0x140039986
   140039916:	je     0x140039984
   140039918:	rex.RB
   140039919:	rex.WRX
   14003991a:	cs gs js 0x140039983
   14003991e:	add    BYTE PTR [rdi],bh
   140039920:	(bad)  
   140039921:	xor    al,0x43
   140039923:	push   rbp
   140039924:	jae    0x14003998b
   140039926:	jb     0x14003997f
   140039928:	outs   dx,DWORD PTR ds:[rsi]
   140039929:	jb     0x14003998f
   14003992b:	imul   r14,QWORD PTR [rbx+0x74],0x45514040
   140039933:	rex.B
   140039934:	rex.B
   140039935:	rex.B
   140039936:	rex.RB
   140039937:	push   r14
   140039939:	xor    BYTE PTR [rax+0x41],al
   14003993c:	rex.RB
   14003993d:	rex.X push rsi
   14003993f:	xor    BYTE PTR [rax+0x40],al
   140039942:	pop    rdx
   140039943:	add    BYTE PTR [rax+0x3a6],ah
   140039949:	add    BYTE PTR [rax],al
   14003994b:	add    BYTE PTR [rax],al
   14003994d:	add    BYTE PTR [rax],al
   14003994f:	add    BYTE PTR [rdi+riz*4-0x357fffd],cl
   140039956:	add    al,BYTE PTR [rax]
   140039958:	rex (bad) 
   14003995a:	add    eax,DWORD PTR [rax]
	...
   140039964:	sub    al,0xae
   140039966:	add    eax,DWORD PTR [rax]
   140039968:	rex.W
   140039969:	lock add al,BYTE PTR [rax]
   14003996c:	and    BYTE PTR [rdi+0x3],bl
   140039972:	add    BYTE PTR [rax],al
   140039974:	add    BYTE PTR [rax],al
   140039976:	add    BYTE PTR [rax],al
   140039978:	cmp    BYTE PTR [rsi-0xad7fffd],ch
   14003997e:	add    al,BYTE PTR [rax]
   140039980:	enter  0x39c,0x0
	...
   14003998c:	rex.WR mov al,0x3
   14003998f:	add    al,dl
   140039991:	repnz add al,BYTE PTR [rax]
   140039994:	push   rax
   140039995:	fwait
   140039996:	add    eax,DWORD PTR [rax]
	...
   1400399a0:	rex.R mov spl,0x3
   1400399a3:	add    BYTE PTR [rax-0xf],bl
   1400399a6:	add    al,BYTE PTR [rax]
   1400399a8:	movabs al,ds:0x39e
   1400399b1:	add    BYTE PTR [rax],al
   1400399b3:	add    BYTE PTR [rdx-0x4b],al
   1400399b6:	add    eax,DWORD PTR [rax]
   1400399b8:	test   al,0xf4
   1400399ba:	add    al,BYTE PTR [rax]
   1400399bc:	clc    
   1400399bd:	cdq    
   1400399be:	add    eax,DWORD PTR [rax]
	...
   1400399c8:	(bad)  
   1400399c9:	mov    ch,0x3
   1400399cb:	add    BYTE PTR [rax],al
   1400399cd:	lock add al,BYTE PTR [rax]
   1400399d0:	cwde   
   1400399d1:	pushf  
   1400399d2:	add    eax,DWORD PTR [rax]
	...
   1400399dc:	(bad)  
   1400399dd:	mov    dh,0x3
   1400399df:	add    BYTE PTR [rax+0x2f2],ah
	...
   1400399f5:	add    BYTE PTR [rax],al
   1400399f7:	add    BYTE PTR [rbp+rsi*4+0x3],ah
   1400399fe:	add    BYTE PTR [rax],al
   140039a00:	(bad)  
   140039a01:	mov    ch,0x3
   140039a03:	add    BYTE PTR [rax],al
   140039a05:	add    BYTE PTR [rax],al
   140039a07:	add    BYTE PTR [rax+0x3b5],dl
   140039a0d:	add    BYTE PTR [rax],al
   140039a0f:	add    BYTE PTR [rsi-0x4b],cl
   140039a12:	add    eax,DWORD PTR [rax]
   140039a14:	add    BYTE PTR [rax],al
   140039a16:	add    BYTE PTR [rax],al
   140039a18:	pop    rsi
   140039a19:	mov    ch,0x3
   140039a1b:	add    BYTE PTR [rax],al
   140039a1d:	add    BYTE PTR [rax],al
   140039a1f:	add    BYTE PTR [rbp+rsi*4+0x3],ch
   140039a23:	add    BYTE PTR [rax],al
   140039a25:	add    BYTE PTR [rax],al
   140039a27:	add    BYTE PTR [rsi-0x4b],bh
   140039a2a:	add    eax,DWORD PTR [rax]
   140039a2c:	add    BYTE PTR [rax],al
   140039a2e:	add    BYTE PTR [rax],al
   140039a30:	mov    ah,0xb5
   140039a32:	add    eax,DWORD PTR [rax]
	...
   140039a40:	shr    BYTE PTR [rbx+rax*1+0x0],0x0
   140039a48:	mov    WORD PTR [rbx+rax*1+0x0],gs
   140039a4f:	add    dl,dh
   140039a51:	lods   al,BYTE PTR ds:[rsi]
   140039a52:	add    eax,DWORD PTR [rax]
   140039a54:	add    BYTE PTR [rax],al
   140039a56:	add    BYTE PTR [rax],al
   140039a58:	(bad)  
   140039a59:	lods   al,BYTE PTR ds:[rsi]
   140039a5a:	add    eax,DWORD PTR [rax]
   140039a5c:	add    BYTE PTR [rax],al
   140039a5e:	add    BYTE PTR [rax],al
   140039a60:	in     al,dx
   140039a61:	stos   DWORD PTR es:[rdi],eax
   140039a62:	add    eax,DWORD PTR [rax]
   140039a64:	add    BYTE PTR [rax],al
   140039a66:	add    BYTE PTR [rax],al
   140039a68:	mov    al,0xab
   140039a6a:	add    eax,DWORD PTR [rax]
   140039a6c:	add    BYTE PTR [rax],al
   140039a6e:	add    BYTE PTR [rax],al
   140039a70:	and    al,0xad
   140039a72:	add    eax,DWORD PTR [rax]
   140039a74:	add    BYTE PTR [rax],al
   140039a76:	add    BYTE PTR [rax],al
   140039a78:	push   rsp
   140039a79:	lods   eax,DWORD PTR ds:[rsi]
   140039a7a:	add    eax,DWORD PTR [rax]
   140039a7c:	add    BYTE PTR [rax],al
   140039a7e:	add    BYTE PTR [rax],al
   140039a80:	xchg   edx,eax
   140039a81:	lods   eax,DWORD PTR ds:[rsi]
   140039a82:	add    eax,DWORD PTR [rax]
   140039a84:	add    BYTE PTR [rax],al
   140039a86:	add    BYTE PTR [rax],al
   140039a88:	jo     0x140039a35
   140039a8a:	add    eax,DWORD PTR [rax]
   140039a8c:	add    BYTE PTR [rax],al
   140039a8e:	add    BYTE PTR [rax],al
   140039a90:	mov    dh,0xad
   140039a92:	add    eax,DWORD PTR [rax]
   140039a94:	add    BYTE PTR [rax],al
   140039a96:	add    BYTE PTR [rax],al
   140039a98:	call   0x140039e4a
   140039a9d:	add    BYTE PTR [rax],al
   140039a9f:	add    BYTE PTR [rax-0x54],bl
   140039aa2:	add    eax,DWORD PTR [rax]
   140039aa4:	add    BYTE PTR [rax],al
   140039aa6:	add    BYTE PTR [rax],al
   140039aa8:	xchg   esi,eax
   140039aa9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140039aaa:	add    eax,DWORD PTR [rax]
   140039aac:	add    BYTE PTR [rax],al
   140039aae:	add    BYTE PTR [rax],al
   140039ab0:	enter  0x3a7,0x0
   140039ab4:	add    BYTE PTR [rax],al
   140039ab6:	add    BYTE PTR [rax],al
   140039ab8:	hlt    
   140039ab9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140039aba:	add    eax,DWORD PTR [rax]
   140039abc:	add    BYTE PTR [rax],al
   140039abe:	add    BYTE PTR [rax],al
   140039ac0:	(bad)  
   140039ac1:	test   al,0x3
   140039ac3:	add    BYTE PTR [rax],al
   140039ac5:	add    BYTE PTR [rax],al
   140039ac7:	add    BYTE PTR [rax+rbp*4],bh
   140039aca:	add    eax,DWORD PTR [rax]
   140039acc:	add    BYTE PTR [rax],al
   140039ace:	add    BYTE PTR [rax],al
   140039ad0:	jp     0x140039a7a
   140039ad2:	add    eax,DWORD PTR [rax]
   140039ad4:	add    BYTE PTR [rax],al
   140039ad6:	add    BYTE PTR [rax],al
   140039ad8:	mov    dl,0xa8
   140039ada:	add    eax,DWORD PTR [rax]
   140039adc:	add    BYTE PTR [rax],al
   140039ade:	add    BYTE PTR [rax],al
   140039ae0:	in     al,dx
   140039ae1:	test   al,0x3
   140039ae3:	add    BYTE PTR [rax],al
   140039ae5:	add    BYTE PTR [rax],al
   140039ae7:	add    BYTE PTR [rcx+rbp*4],ah
   140039aea:	add    eax,DWORD PTR [rax]
   140039aec:	add    BYTE PTR [rax],al
   140039aee:	add    BYTE PTR [rax],al
   140039af0:	rex.WR test rax,0x3
   140039af6:	add    BYTE PTR [rax],al
   140039af8:	js     0x140039aa3
   140039afa:	add    eax,DWORD PTR [rax]
   140039afc:	add    BYTE PTR [rax],al
   140039afe:	add    BYTE PTR [rax],al
   140039b00:	lods   al,BYTE PTR ds:[rsi]
   140039b01:	test   eax,0x3
   140039b06:	add    BYTE PTR [rax],al
   140039b08:	shr    BYTE PTR [rcx+0x3],1
   140039b0e:	add    BYTE PTR [rax],al
   140039b10:	sbb    BYTE PTR [rdx+0x3],ch
   140039b16:	add    BYTE PTR [rax],al
   140039b18:	push   rax
   140039b19:	stos   BYTE PTR es:[rdi],al
   140039b1a:	add    eax,DWORD PTR [rax]
   140039b1c:	add    BYTE PTR [rax],al
   140039b1e:	add    BYTE PTR [rax],al
   140039b20:	sub    BYTE PTR [rdx+0x3],0x0
   140039b27:	add    dl,al
   140039b29:	stos   BYTE PTR es:[rdi],al
   140039b2a:	add    eax,DWORD PTR [rax]
   140039b2c:	add    BYTE PTR [rax],al
   140039b2e:	add    BYTE PTR [rax],al
   140039b30:	out    dx,al
   140039b31:	stos   BYTE PTR es:[rdi],al
   140039b32:	add    eax,DWORD PTR [rax]
   140039b34:	add    BYTE PTR [rax],al
   140039b36:	add    BYTE PTR [rax],al
   140039b38:	sub    al,0xab
   140039b3a:	add    eax,DWORD PTR [rax]
   140039b3c:	add    BYTE PTR [rax],al
   140039b3e:	add    BYTE PTR [rax],al
   140039b40:	stos   QWORD PTR es:[rdi],rax
   140039b42:	add    eax,DWORD PTR [rax]
	...
   140039b50:	enter  0x3b1,0x0
   140039b54:	add    BYTE PTR [rax],al
   140039b56:	add    BYTE PTR [rax],al
   140039b58:	mov    eax,0x3b1
   140039b5d:	add    BYTE PTR [rax],al
   140039b5f:	add    BYTE PTR [rdx+0x3b1],bl
   140039b65:	add    BYTE PTR [rax],al
   140039b67:	add    BYTE PTR [rcx+rsi*4+0x3],al
   140039b6e:	add    BYTE PTR [rax],al
   140039b70:	nop
   140039b71:	mov    dh,0x3
   140039b73:	add    BYTE PTR [rax],al
   140039b75:	add    BYTE PTR [rax],al
   140039b77:	add    BYTE PTR [rdx],ch
   140039b79:	mov    ah,0x3
   140039b7b:	add    BYTE PTR [rax],al
   140039b7d:	add    BYTE PTR [rax],al
   140039b7f:	add    BYTE PTR [rsp+rsi*4],dl
   140039b82:	add    eax,DWORD PTR [rax]
   140039b84:	add    BYTE PTR [rax],al
   140039b86:	add    BYTE PTR [rax],al
   140039b88:	(bad)  
   140039b89:	mov    bl,0x3
   140039b8b:	add    BYTE PTR [rax],al
   140039b8d:	add    BYTE PTR [rax],al
   140039b8f:	add    ah,ah
   140039b91:	mov    bl,0x3
   140039b93:	add    BYTE PTR [rax],al
   140039b95:	add    BYTE PTR [rax],al
   140039b97:	add    al,cl
   140039b99:	mov    bl,0x3
   140039b9b:	add    BYTE PTR [rax],al
   140039b9d:	add    BYTE PTR [rax],al
   140039b9f:	add    BYTE PTR [rbx+rsi*4+0x3],dh
   140039ba6:	add    BYTE PTR [rax],al
   140039ba8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039ba9:	mov    bl,0x3
   140039bab:	add    BYTE PTR [rax],al
   140039bad:	add    BYTE PTR [rax],al
   140039baf:	add    BYTE PTR [rax+0x3b3],cl
   140039bb5:	add    BYTE PTR [rax],al
   140039bb7:	add    BYTE PTR [rsi-0x4d],dh
   140039bba:	add    eax,DWORD PTR [rax]
   140039bbc:	add    BYTE PTR [rax],al
   140039bbe:	add    BYTE PTR [rax],al
   140039bc0:	data16 mov bl,0x3
   140039bc3:	add    BYTE PTR [rax],al
   140039bc5:	add    BYTE PTR [rax],al
   140039bc7:	add    BYTE PTR [rdx-0x4d],dl
   140039bca:	add    eax,DWORD PTR [rax]
   140039bcc:	add    BYTE PTR [rax],al
   140039bce:	add    BYTE PTR [rax],al
   140039bd0:	cmp    al,0xb3
   140039bd2:	add    eax,DWORD PTR [rax]
   140039bd4:	add    BYTE PTR [rax],al
   140039bd6:	add    BYTE PTR [rax],al
   140039bd8:	es mov bl,0x3
   140039bdb:	add    BYTE PTR [rax],al
   140039bdd:	add    BYTE PTR [rax],al
   140039bdf:	add    BYTE PTR [rdx],bl
   140039be1:	mov    bl,0x3
   140039be3:	add    BYTE PTR [rax],al
   140039be5:	add    BYTE PTR [rax],al
   140039be7:	add    BYTE PTR [rax],dl
   140039be9:	mov    bl,0x3
   140039beb:	add    BYTE PTR [rax],al
   140039bed:	add    BYTE PTR [rax],al
   140039bef:	add    BYTE PTR [rdx],al
   140039bf1:	mov    bl,0x3
   140039bf3:	add    BYTE PTR [rax],al
   140039bf5:	add    BYTE PTR [rax],al
   140039bf7:	add    ah,dh
   140039bf9:	mov    dl,0x3
   140039bfb:	add    BYTE PTR [rax],al
   140039bfd:	add    BYTE PTR [rax],al
   140039bff:	add    al,ch
   140039c01:	mov    dl,0x3
   140039c03:	add    BYTE PTR [rax],al
   140039c05:	add    BYTE PTR [rax],al
   140039c07:	add    ah,bl
   140039c09:	mov    dl,0x3
   140039c0b:	add    BYTE PTR [rax],al
   140039c0d:	add    BYTE PTR [rax],al
   140039c0f:	add    dl,cl
   140039c11:	mov    dl,0x3
   140039c13:	add    BYTE PTR [rax],al
   140039c15:	add    BYTE PTR [rax],al
   140039c17:	add    BYTE PTR [rdx+rsi*4+0x3],bh
   140039c1e:	add    BYTE PTR [rax],al
   140039c20:	scas   al,BYTE PTR es:[rdi]
   140039c21:	mov    dl,0x3
   140039c23:	add    BYTE PTR [rax],al
   140039c25:	add    BYTE PTR [rax],al
   140039c27:	add    BYTE PTR [rsi+0x3b2],dl
   140039c2d:	add    BYTE PTR [rax],al
   140039c2f:	add    BYTE PTR [rdx+0x3b2],cl
   140039c35:	add    BYTE PTR [rax],al
   140039c37:	add    BYTE PTR [rdx-0x4e],bh
   140039c3a:	add    eax,DWORD PTR [rax]
   140039c3c:	add    BYTE PTR [rax],al
   140039c3e:	add    BYTE PTR [rax],al
   140039c40:	data16 mov dl,0x3
   140039c43:	add    BYTE PTR [rax],al
   140039c45:	add    BYTE PTR [rax],al
   140039c47:	add    BYTE PTR [rdx-0x4e],bl
   140039c4a:	add    eax,DWORD PTR [rax]
   140039c4c:	add    BYTE PTR [rax],al
   140039c4e:	add    BYTE PTR [rax],al
   140039c50:	rex.WRX mov dl,0x3
   140039c53:	add    BYTE PTR [rax],al
   140039c55:	add    BYTE PTR [rax],al
   140039c57:	add    BYTE PTR [rsi],bh
   140039c59:	mov    dl,0x3
   140039c5b:	add    BYTE PTR [rax],al
   140039c5d:	add    BYTE PTR [rax],al
   140039c5f:	add    BYTE PTR [rdx+rsi*4],ch
   140039c62:	add    eax,DWORD PTR [rax]
   140039c64:	add    BYTE PTR [rax],al
   140039c66:	add    BYTE PTR [rax],al
   140039c68:	(bad)  
   140039c69:	mov    dl,0x3
   140039c6b:	add    BYTE PTR [rax],al
   140039c6d:	add    BYTE PTR [rax],al
   140039c6f:	add    BYTE PTR [rdx],dl
   140039c71:	mov    dl,0x3
   140039c73:	add    BYTE PTR [rax],al
   140039c75:	add    BYTE PTR [rax],al
   140039c77:	add    BYTE PTR [rsi],al
   140039c79:	mov    dl,0x3
   140039c7b:	add    BYTE PTR [rax],al
   140039c7d:	add    BYTE PTR [rax],al
   140039c7f:	add    dh,ch
   140039c81:	mov    cl,0x3
   140039c83:	add    BYTE PTR [rax],al
   140039c85:	add    BYTE PTR [rax],al
   140039c87:	add    al,bl
   140039c89:	mov    cl,0x3
	...
   140039c97:	add    BYTE PTR [rsi+rsi*4],al
   140039c9a:	add    eax,DWORD PTR [rax]
   140039c9c:	add    BYTE PTR [rax],al
   140039c9e:	add    BYTE PTR [rax],al
   140039ca0:	and    al,0xb6
   140039ca2:	add    eax,DWORD PTR [rax]
   140039ca4:	add    BYTE PTR [rax],al
   140039ca6:	add    BYTE PTR [rax],al
   140039ca8:	ds mov dh,0x3
   140039cab:	add    BYTE PTR [rax],al
   140039cad:	add    BYTE PTR [rax],al
   140039caf:	add    BYTE PTR [rax-0x4a],ah
   140039cb2:	add    eax,DWORD PTR [rax]
   140039cb4:	add    BYTE PTR [rax],al
   140039cb6:	add    BYTE PTR [rax],al
   140039cb8:	in     al,0xb5
   140039cba:	add    eax,DWORD PTR [rax]
	...
   140039cc8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039cc9:	mov    dh,0x3
   140039ccb:	add    BYTE PTR [rax],al
   140039ccd:	add    BYTE PTR [rax],al
   140039ccf:	add    BYTE PTR [rsi+rsi*4+0x3],bh
   140039cd6:	add    BYTE PTR [rax],al
   140039cd8:	rex.WRX mov cl,0x3
   140039cdb:	add    BYTE PTR [rax],al
   140039cdd:	add    BYTE PTR [rax],al
   140039cdf:	add    BYTE PTR [rdx],ch
   140039ce1:	mov    cl,0x3
   140039ce3:	add    BYTE PTR [rax],al
   140039ce5:	add    BYTE PTR [rax],al
   140039ce7:	add    BYTE PTR [rsi],dl
   140039ce9:	mov    cl,0x3
   140039ceb:	add    BYTE PTR [rax],al
   140039ced:	add    BYTE PTR [rax],al
   140039cef:	add    al,bh
   140039cf1:	mov    al,0x3
   140039cf3:	add    BYTE PTR [rax],al
   140039cf5:	add    BYTE PTR [rax],al
   140039cf7:	add    dl,bl
   140039cf9:	mov    al,0x3
   140039cfb:	add    BYTE PTR [rax],al
   140039cfd:	add    BYTE PTR [rax],al
   140039cff:	add    dl,al
   140039d01:	mov    al,0x3
   140039d03:	add    BYTE PTR [rax],al
   140039d05:	add    BYTE PTR [rax],al
   140039d07:	add    BYTE PTR [rax+0x3b0],ch
   140039d0d:	add    BYTE PTR [rax],al
   140039d0f:	add    BYTE PTR [rdx+0x3b0],dl
   140039d15:	add    BYTE PTR [rax],al
   140039d17:	add    BYTE PTR [rax+0x3b0],cl
   140039d1d:	add    BYTE PTR [rax],al
   140039d1f:	add    BYTE PTR [rdx-0x50],bh
   140039d22:	add    eax,DWORD PTR [rax]
   140039d24:	add    BYTE PTR [rax],al
   140039d26:	add    BYTE PTR [rax],al
   140039d28:	ins    BYTE PTR es:[rdi],dx
   140039d29:	mov    al,0x3
   140039d2b:	add    BYTE PTR [rax],al
   140039d2d:	add    BYTE PTR [rax],al
   140039d2f:	add    BYTE PTR [rdx-0x50],ah
   140039d32:	add    eax,DWORD PTR [rax]
   140039d34:	add    BYTE PTR [rax],al
   140039d36:	add    BYTE PTR [rax],al
   140039d38:	pop    rdx
   140039d39:	mov    al,0x3
   140039d3b:	add    BYTE PTR [rax],al
   140039d3d:	add    BYTE PTR [rax],al
   140039d3f:	add    BYTE PTR [rax-0x50],al
   140039d42:	add    eax,DWORD PTR [rax]
   140039d44:	add    BYTE PTR [rax],al
   140039d46:	add    BYTE PTR [rax],al
   140039d48:	ss mov al,0x3
   140039d4b:	add    BYTE PTR [rax],al
   140039d4d:	add    BYTE PTR [rax],al
   140039d4f:	add    BYTE PTR [rax+rsi*4],ch
   140039d52:	add    eax,DWORD PTR [rax]
   140039d54:	add    BYTE PTR [rax],al
   140039d56:	add    BYTE PTR [rax],al
   140039d58:	and    BYTE PTR [rax+0x3],dh
   140039d5e:	add    BYTE PTR [rax],al
   140039d60:	adc    dh,BYTE PTR [rax+0x3]
   140039d66:	add    BYTE PTR [rax],al
   140039d68:	(bad)  
   140039d69:	scas   eax,DWORD PTR es:[rdi]
   140039d6a:	add    eax,DWORD PTR [rax]
   140039d6c:	add    BYTE PTR [rax],al
   140039d6e:	add    BYTE PTR [rax],al
   140039d70:	call   0x14003a124
   140039d75:	add    BYTE PTR [rax],al
   140039d77:	add    dh,bl
   140039d79:	scas   eax,DWORD PTR es:[rdi]
   140039d7a:	add    eax,DWORD PTR [rax]
   140039d7c:	add    BYTE PTR [rax],al
   140039d7e:	add    BYTE PTR [rax],al
   140039d80:	(bad)  
   140039d81:	scas   eax,DWORD PTR es:[rdi]
   140039d82:	add    eax,DWORD PTR [rax]
   140039d84:	add    BYTE PTR [rax],al
   140039d86:	add    BYTE PTR [rax],al
   140039d88:	(bad)  
   140039d89:	scas   eax,DWORD PTR es:[rdi]
   140039d8a:	add    eax,DWORD PTR [rax]
   140039d8c:	add    BYTE PTR [rax],al
   140039d8e:	add    BYTE PTR [rax],al
   140039d90:	mov    esp,0x3af
   140039d95:	add    BYTE PTR [rax],al
   140039d97:	add    BYTE PTR [rdx+0x3af],ch
   140039d9d:	add    BYTE PTR [rax],al
   140039d9f:	add    BYTE PTR [rdi+rbp*4+0x3],bl
   140039da6:	add    BYTE PTR [rax],al
   140039da8:	(bad)  
   140039da9:	scas   eax,DWORD PTR es:[rdi]
   140039daa:	add    eax,DWORD PTR [rax]
   140039dac:	add    BYTE PTR [rax],al
   140039dae:	add    BYTE PTR [rax],al
   140039db0:	je     0x140039d61
   140039db2:	add    eax,DWORD PTR [rax]
   140039db4:	add    BYTE PTR [rax],al
   140039db6:	add    BYTE PTR [rax],al
   140039db8:	pop    rsp
   140039db9:	scas   eax,DWORD PTR es:[rdi]
   140039dba:	add    eax,DWORD PTR [rax]
   140039dbc:	add    BYTE PTR [rax],al
   140039dbe:	add    BYTE PTR [rax],al
   140039dc0:	push   rdx
   140039dc1:	scas   eax,DWORD PTR es:[rdi]
   140039dc2:	add    eax,DWORD PTR [rax]
   140039dc4:	add    BYTE PTR [rax],al
   140039dc6:	add    BYTE PTR [rax],al
   140039dc8:	scas   rax,QWORD PTR es:[rdi]
   140039dca:	add    eax,DWORD PTR [rax]
   140039dcc:	add    BYTE PTR [rax],al
   140039dce:	add    BYTE PTR [rax],al
   140039dd0:	cmp    al,0xaf
   140039dd2:	add    eax,DWORD PTR [rax]
   140039dd4:	add    BYTE PTR [rax],al
   140039dd6:	add    BYTE PTR [rax],al
   140039dd8:	xor    BYTE PTR [rdi+0x3],ch
   140039dde:	add    BYTE PTR [rax],al
   140039de0:	and    BYTE PTR [rdi+0x3],ch
   140039de6:	add    BYTE PTR [rax],al
   140039de8:	(bad)  
   140039de9:	scas   eax,DWORD PTR es:[rdi]
   140039dea:	add    eax,DWORD PTR [rax]
   140039dec:	add    BYTE PTR [rax],al
   140039dee:	add    BYTE PTR [rax],al
   140039df0:	or     ch,BYTE PTR [rdi+0x3]
   140039df6:	add    BYTE PTR [rax],al
   140039df8:	add    BYTE PTR [rdi+0x3],ch
   140039dfe:	add    BYTE PTR [rax],al
   140039e00:	hlt    
   140039e01:	scas   al,BYTE PTR es:[rdi]
   140039e02:	add    eax,DWORD PTR [rax]
   140039e04:	add    BYTE PTR [rax],al
   140039e06:	add    BYTE PTR [rax],al
   140039e08:	(bad)  
   140039e09:	scas   al,BYTE PTR es:[rdi]
   140039e0a:	add    eax,DWORD PTR [rax]
   140039e0c:	add    BYTE PTR [rax],al
   140039e0e:	add    BYTE PTR [rax],al
   140039e10:	loopne 0x140039dc0
   140039e12:	add    eax,DWORD PTR [rax]
   140039e14:	add    BYTE PTR [rax],al
   140039e16:	add    BYTE PTR [rax],al
   140039e18:	(bad)  
   140039e19:	scas   al,BYTE PTR es:[rdi]
   140039e1a:	add    eax,DWORD PTR [rax]
   140039e1c:	add    BYTE PTR [rax],al
   140039e1e:	add    BYTE PTR [rax],al
   140039e20:	retf   0x3ae
   140039e23:	add    BYTE PTR [rax],al
   140039e25:	add    BYTE PTR [rax],al
   140039e27:	add    al,al
   140039e29:	scas   al,BYTE PTR es:[rdi]
   140039e2a:	add    eax,DWORD PTR [rax]
   140039e2c:	add    BYTE PTR [rax],al
   140039e2e:	add    BYTE PTR [rax],al
   140039e30:	mov    dh,0xae
   140039e32:	add    eax,DWORD PTR [rax]
   140039e34:	add    BYTE PTR [rax],al
   140039e36:	add    BYTE PTR [rax],al
   140039e38:	scas   al,BYTE PTR es:[rdi]
   140039e39:	scas   al,BYTE PTR es:[rdi]
   140039e3a:	add    eax,DWORD PTR [rax]
   140039e3c:	add    BYTE PTR [rax],al
   140039e3e:	add    BYTE PTR [rax],al
   140039e40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039e41:	scas   al,BYTE PTR es:[rdi]
   140039e42:	add    eax,DWORD PTR [rax]
   140039e44:	add    BYTE PTR [rax],al
   140039e46:	add    BYTE PTR [rax],al
   140039e48:	(bad)  
   140039e49:	scas   al,BYTE PTR es:[rdi]
   140039e4a:	add    eax,DWORD PTR [rax]
   140039e4c:	add    BYTE PTR [rax],al
   140039e4e:	add    BYTE PTR [rax],al
   140039e50:	nop
   140039e51:	scas   al,BYTE PTR es:[rdi]
   140039e52:	add    eax,DWORD PTR [rax]
   140039e54:	add    BYTE PTR [rax],al
   140039e56:	add    BYTE PTR [rax],al
   140039e58:	xchg   BYTE PTR [rsi+0x3],ch
   140039e5e:	add    BYTE PTR [rax],al
   140039e60:	jle    0x140039e10
   140039e62:	add    eax,DWORD PTR [rax]
   140039e64:	add    BYTE PTR [rax],al
   140039e66:	add    BYTE PTR [rax],al
   140039e68:	jb     0x140039e18
   140039e6a:	add    eax,DWORD PTR [rax]
   140039e6c:	add    BYTE PTR [rax],al
   140039e6e:	add    BYTE PTR [rax],al
   140039e70:	fs scas al,BYTE PTR es:[rdi]
   140039e72:	add    eax,DWORD PTR [rax]
   140039e74:	add    BYTE PTR [rax],al
   140039e76:	add    BYTE PTR [rax],al
   140039e78:	pop    rsp
   140039e79:	scas   al,BYTE PTR es:[rdi]
   140039e7a:	add    eax,DWORD PTR [rax]
   140039e7c:	add    BYTE PTR [rax],al
   140039e7e:	add    BYTE PTR [rax],al
   140039e80:	push   rdx
   140039e81:	scas   al,BYTE PTR es:[rdi]
   140039e82:	add    eax,DWORD PTR [rax]
   140039e84:	add    BYTE PTR [rax],al
   140039e86:	add    BYTE PTR [rax],al
   140039e88:	rex.R scas al,BYTE PTR es:[rdi]
   140039e8a:	add    eax,DWORD PTR [rax]
   140039e8c:	add    BYTE PTR [rax],al
   140039e8e:	add    BYTE PTR [rax],al
   140039e90:	shl    BYTE PTR [rsi+0x3],cl
	...
   140039e9e:	add    BYTE PTR [rax],al
   140039ea0:	xor    dh,BYTE PTR [rbp+0x3]
   140039ea6:	add    BYTE PTR [rax],al
   140039ea8:	es mov ch,0x3
   140039eab:	add    BYTE PTR [rax],al
   140039ead:	add    BYTE PTR [rax],al
   140039eaf:	add    BYTE PTR [rdx],bl
   140039eb1:	mov    ch,0x3
   140039eb3:	add    BYTE PTR [rax],al
   140039eb5:	add    BYTE PTR [rax],al
   140039eb7:	add    BYTE PTR [rsi],al
   140039eb9:	mov    ch,0x3
   140039ebb:	add    BYTE PTR [rax],al
   140039ebd:	add    BYTE PTR [rax],al
   140039ebf:	add    al,bh
   140039ec1:	mov    ah,0x3
   140039ec3:	add    BYTE PTR [rax],al
   140039ec5:	add    BYTE PTR [rax],al
   140039ec7:	add    dh,ah
   140039ec9:	mov    ah,0x3
   140039ecb:	add    BYTE PTR [rax],al
   140039ecd:	add    BYTE PTR [rax],al
   140039ecf:	add    al,bl
   140039ed1:	mov    ah,0x3
   140039ed3:	add    BYTE PTR [rax],al
   140039ed5:	add    BYTE PTR [rax],al
   140039ed7:	add    ah,al
   140039ed9:	mov    ah,0x3
   140039edb:	add    BYTE PTR [rax],al
   140039edd:	add    BYTE PTR [rax],al
   140039edf:	add    BYTE PTR [rsi+0x3b4],dh
   140039ee5:	add    BYTE PTR [rax],al
   140039ee7:	add    BYTE PTR [rdx+0x3b4],ah
   140039eed:	add    BYTE PTR [rax],al
   140039eef:	add    BYTE PTR [rdx+0x3b4],dl
   140039ef5:	add    BYTE PTR [rax],al
   140039ef7:	add    BYTE PTR [rdx+0x3b4],al
   140039efd:	add    BYTE PTR [rax],al
   140039eff:	add    BYTE PTR [rdx-0x4c],dh
   140039f02:	add    eax,DWORD PTR [rax]
   140039f04:	add    BYTE PTR [rax],al
   140039f06:	add    BYTE PTR [rax],al
   140039f08:	pop    rsi
   140039f09:	mov    ah,0x3
   140039f0b:	add    BYTE PTR [rax],al
   140039f0d:	add    BYTE PTR [rax],al
   140039f0f:	add    BYTE PTR [rdx-0x4c],dl
   140039f12:	add    eax,DWORD PTR [rax]
	...
   140039f20:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140039f21:	(bad)  
   140039f22:	add    BYTE PTR [rax],al
   140039f24:	add    BYTE PTR [rax],al
   140039f26:	add    BYTE PTR [rax+0x6ad],al
   140039f2c:	add    BYTE PTR [rax],al
   140039f2e:	add    BYTE PTR [rax+0x6a9],al
   140039f34:	add    BYTE PTR [rax],al
   140039f36:	add    BYTE PTR [rax+0x6b2],al
   140039f3c:	add    BYTE PTR [rax],al
   140039f3e:	add    BYTE PTR [rax+0x126e],al
   140039f44:	add    BYTE PTR [rax],al
   140039f46:	add    BYTE PTR [rax+0x1297],al
   140039f4c:	add    BYTE PTR [rax],al
   140039f4e:	add    BYTE PTR [rax+0x1276],al
   140039f54:	add    BYTE PTR [rax],al
   140039f56:	add    BYTE PTR [rax+0x1282],al
   140039f5c:	add    BYTE PTR [rax],al
   140039f5e:	add    BYTE PTR [rax+0x127e],al
   140039f64:	add    BYTE PTR [rax],al
   140039f66:	add    BYTE PTR [rax+0x127a],al
   140039f6c:	add    BYTE PTR [rax],al
   140039f6e:	add    BYTE PTR [rax+0x129f],al
   140039f74:	add    BYTE PTR [rax],al
   140039f76:	add    BYTE PTR [rax+0x1293],al
   140039f7c:	add    BYTE PTR [rax],al
   140039f7e:	add    BYTE PTR [rax+0x1272],al
   140039f84:	add    BYTE PTR [rax],al
   140039f86:	add    BYTE PTR [rax+0x12a3],al
   140039f8c:	add    BYTE PTR [rax],al
   140039f8e:	add    BYTE PTR [rax+0x1288],al
   140039f94:	add    BYTE PTR [rax],al
   140039f96:	add    BYTE PTR [rax+0x1262],al
   140039f9c:	add    BYTE PTR [rax],al
   140039f9e:	add    BYTE PTR [rax+0x1269],al
   140039fa4:	add    BYTE PTR [rax],al
   140039fa6:	add    BYTE PTR [rax+0x128c],al
   140039fac:	add    BYTE PTR [rax],al
   140039fae:	add    BYTE PTR [rax+0x29f2],al
   140039fb4:	add    BYTE PTR [rax],al
   140039fb6:	add    BYTE PTR [rax+0x156c],al
   140039fbc:	add    BYTE PTR [rax],al
   140039fbe:	add    BYTE PTR [rax+0x2431],al
   140039fc4:	add    BYTE PTR [rax],al
   140039fc6:	add    BYTE PTR [rax+0x10d4],al
   140039fcc:	add    BYTE PTR [rax],al
   140039fce:	add    BYTE PTR [rax+0xb6d],al
   140039fd4:	add    BYTE PTR [rax],al
   140039fd6:	add    BYTE PTR [rax+0x36f5],al
   140039fdc:	add    BYTE PTR [rax],al
   140039fde:	add    BYTE PTR [rax+0x1d6f],al
   140039fe4:	add    BYTE PTR [rax],al
   140039fe6:	add    BYTE PTR [rax+0x36fb],al
   140039fec:	add    BYTE PTR [rax],al
   140039fee:	add    BYTE PTR [rax+0x197f],al
   140039ff4:	add    BYTE PTR [rax],al
   140039ff6:	add    BYTE PTR [rax+0x3302],al
   140039ffc:	add    BYTE PTR [rax],al
   140039ffe:	add    BYTE PTR [rax+0x10c3],al
   14003a004:	add    BYTE PTR [rax],al
   14003a006:	add    BYTE PTR [rax+0x1ef5],al
   14003a00c:	add    BYTE PTR [rax],al
   14003a00e:	add    BYTE PTR [rax+0x2c10],al
   14003a014:	add    BYTE PTR [rax],al
   14003a016:	add    BYTE PTR [rax+0x339d],al
   14003a01c:	add    BYTE PTR [rax],al
   14003a01e:	add    BYTE PTR [rax+0x15f9],al
   14003a024:	add    BYTE PTR [rax],al
   14003a026:	add    BYTE PTR [rax+0x1d09],al
   14003a02c:	add    BYTE PTR [rax],al
   14003a02e:	add    BYTE PTR [rax+0x353a],al
   14003a034:	add    BYTE PTR [rax],al
   14003a036:	add    BYTE PTR [rax+0xa1b],al
   14003a03c:	add    BYTE PTR [rax],al
   14003a03e:	add    BYTE PTR [rax+0x2da0],al
   14003a044:	add    BYTE PTR [rax],al
   14003a046:	add    BYTE PTR [rax+0xeb9],al
   14003a04c:	add    BYTE PTR [rax],al
   14003a04e:	add    BYTE PTR [rax+0xca5],al
   14003a054:	add    BYTE PTR [rax],al
   14003a056:	add    BYTE PTR [rax+0xca4],al
   14003a05c:	add    BYTE PTR [rax],al
   14003a05e:	add    BYTE PTR [rax+0xc3a],al
   14003a064:	add    BYTE PTR [rax],al
   14003a066:	add    BYTE PTR [rax+0x2dcc],al
   14003a06c:	add    BYTE PTR [rax],al
   14003a06e:	add    BYTE PTR [rax+0x3db],al
   14003a074:	add    BYTE PTR [rax],al
   14003a076:	add    BYTE PTR [rax+0x1f6b],al
   14003a07c:	add    BYTE PTR [rax],al
   14003a07e:	add    BYTE PTR [rax+0x122],al
   14003a084:	add    BYTE PTR [rax],al
   14003a086:	add    BYTE PTR [rax+0x128],al
   14003a08c:	add    BYTE PTR [rax],al
   14003a08e:	add    BYTE PTR [rax+0x132],al
   14003a094:	add    BYTE PTR [rax],al
   14003a096:	add    BYTE PTR [rax+0x21fc],al
   14003a09c:	add    BYTE PTR [rax],al
   14003a09e:	add    BYTE PTR [rax+0x41e],al
   14003a0a4:	add    BYTE PTR [rax],al
   14003a0a6:	add    BYTE PTR [rax+0xe77],al
   14003a0ac:	add    BYTE PTR [rax],al
   14003a0ae:	add    BYTE PTR [rax+0xb30],al
   14003a0b4:	add    BYTE PTR [rax],al
   14003a0b6:	add    BYTE PTR [rax+0x2081],al
   14003a0bc:	add    BYTE PTR [rax],al
   14003a0be:	add    BYTE PTR [rax+0xfc6],al
   14003a0c4:	add    BYTE PTR [rax],al
   14003a0c6:	add    BYTE PTR [rax+0xbc8],al
   14003a0cc:	add    BYTE PTR [rax],al
   14003a0ce:	add    BYTE PTR [rax+0x1810],al
   14003a0d4:	add    BYTE PTR [rax],al
   14003a0d6:	add    BYTE PTR [rax+0x208b],al
   14003a0dc:	add    BYTE PTR [rax],al
   14003a0de:	add    BYTE PTR [rax+0x2f4e],al
   14003a0e4:	add    BYTE PTR [rax],al
   14003a0e6:	add    BYTE PTR [rax+0x12f7],al
   14003a0ec:	add    BYTE PTR [rax],al
   14003a0ee:	add    BYTE PTR [rax+0x1e54],al
   14003a0f4:	add    BYTE PTR [rax],al
   14003a0f6:	add    BYTE PTR [rax+0xa71],al
   14003a0fc:	add    BYTE PTR [rax],al
   14003a0fe:	add    BYTE PTR [rax+0x1418],al
   14003a104:	add    BYTE PTR [rax],al
   14003a106:	add    BYTE PTR [rax+0x2bc4],al
   14003a10c:	add    BYTE PTR [rax],al
   14003a10e:	add    BYTE PTR [rax+0x225d],al
   14003a114:	add    BYTE PTR [rax],al
   14003a116:	add    BYTE PTR [rax+0xb6c],al
   14003a11c:	add    BYTE PTR [rax],al
   14003a11e:	add    BYTE PTR [rax+0x2279],al
   14003a124:	add    BYTE PTR [rax],al
   14003a126:	add    BYTE PTR [rax+0x2756],al
   14003a12c:	add    BYTE PTR [rax],al
   14003a12e:	add    BYTE PTR [rax+0xf54],al
   14003a134:	add    BYTE PTR [rax],al
   14003a136:	add    BYTE PTR [rax+0x12b1],al
   14003a13c:	add    BYTE PTR [rax],al
   14003a13e:	add    BYTE PTR [rax+0x172b],al
   14003a144:	add    BYTE PTR [rax],al
   14003a146:	add    BYTE PTR [rax+0xc1f],al
   14003a14c:	add    BYTE PTR [rax],al
   14003a14e:	add    BYTE PTR [rax+0x2dd0],al
   14003a154:	add    BYTE PTR [rax],al
   14003a156:	add    BYTE PTR [rax+0x21a4],al
   14003a15c:	add    BYTE PTR [rax],al
   14003a15e:	add    BYTE PTR [rax+0x2958],al
   14003a164:	add    BYTE PTR [rax],al
   14003a166:	add    BYTE PTR [rax+0x182b],al
   14003a16c:	add    BYTE PTR [rax],al
   14003a16e:	add    BYTE PTR [rax+0x1249],al
   14003a174:	add    BYTE PTR [rax],al
   14003a176:	add    BYTE PTR [rax+0x861],al
   14003a17c:	add    BYTE PTR [rax],al
   14003a17e:	add    BYTE PTR [rax+0xe56],al
   14003a184:	add    BYTE PTR [rax],al
   14003a186:	add    BYTE PTR [rax+0xa54],al
   14003a18c:	add    BYTE PTR [rax],al
   14003a18e:	add    BYTE PTR [rax+0x8fe],al
   14003a194:	add    BYTE PTR [rax],al
   14003a196:	add    BYTE PTR [rax+0x2063],al
   14003a19c:	add    BYTE PTR [rax],al
   14003a19e:	add    BYTE PTR [rax+0x1173],al
   14003a1a4:	add    BYTE PTR [rax],al
   14003a1a6:	add    BYTE PTR [rax+0x681],al
   14003a1ac:	add    BYTE PTR [rax],al
   14003a1ae:	add    BYTE PTR [rax+0x5d8],al
   14003a1b4:	add    BYTE PTR [rax],al
   14003a1b6:	add    BYTE PTR [rax+0x118],al
   14003a1bc:	add    BYTE PTR [rax],al
   14003a1be:	add    BYTE PTR [rax+0x2ce7],al
   14003a1c4:	add    BYTE PTR [rax],al
   14003a1c6:	add    BYTE PTR [rax+0x2cea],al
   14003a1cc:	add    BYTE PTR [rax],al
   14003a1ce:	add    BYTE PTR [rax+0x2ce8],al
   14003a1d4:	add    BYTE PTR [rax],al
   14003a1d6:	add    BYTE PTR [rax+0x2ce9],al
   14003a1dc:	add    BYTE PTR [rax],al
   14003a1de:	add    BYTE PTR [rax+0x1761],al
   14003a1e4:	add    BYTE PTR [rax],al
   14003a1e6:	add    BYTE PTR [rax+0x2949],al
   14003a1ec:	add    BYTE PTR [rax],al
   14003a1ee:	add    BYTE PTR [rax+0x2dfc],al
   14003a1f4:	add    BYTE PTR [rax],al
   14003a1f6:	add    BYTE PTR [rax+0x1c56],al
   14003a1fc:	add    BYTE PTR [rax],al
   14003a1fe:	add    BYTE PTR [rax+0x1864],al
   14003a204:	add    BYTE PTR [rax],al
   14003a206:	add    BYTE PTR [rax+0xbee],al
   14003a20c:	add    BYTE PTR [rax],al
   14003a20e:	add    BYTE PTR [rax+0x1a0d],al
   14003a214:	add    BYTE PTR [rax],al
   14003a216:	add    BYTE PTR [rax+0xfc8],al
   14003a21c:	add    BYTE PTR [rax],al
   14003a21e:	add    BYTE PTR [rax+0x2082],al
   14003a224:	add    BYTE PTR [rax],al
   14003a226:	add    BYTE PTR [rax+0x699],al
   14003a22c:	add    BYTE PTR [rax],al
   14003a22e:	add    BYTE PTR [rax+0xe79],al
   14003a234:	add    BYTE PTR [rax],al
   14003a236:	add    BYTE PTR [rax+0x36e4],al
   14003a23c:	add    BYTE PTR [rax],al
   14003a23e:	add    BYTE PTR [rax+0xa57],al
   14003a244:	add    BYTE PTR [rax],al
   14003a246:	add    BYTE PTR [rax+0x482],al
   14003a24c:	add    BYTE PTR [rax],al
   14003a24e:	add    BYTE PTR [rax+0x21ff],al
   14003a254:	add    BYTE PTR [rax],al
   14003a256:	add    BYTE PTR [rax+0x1937],al
   14003a25c:	add    BYTE PTR [rax],al
   14003a25e:	add    BYTE PTR [rax+0xc1e],al
   14003a264:	add    BYTE PTR [rax],al
   14003a266:	add    BYTE PTR [rax+0xc98],al
   14003a26c:	add    BYTE PTR [rax],al
   14003a26e:	add    BYTE PTR [rax+0x562],al
   14003a274:	add    BYTE PTR [rax],al
   14003a276:	add    BYTE PTR [rax+0x884],al
   14003a27c:	add    BYTE PTR [rax],al
   14003a27e:	add    BYTE PTR [rax+0x1958],al
   14003a284:	add    BYTE PTR [rax],al
   14003a286:	add    BYTE PTR [rax+0xc32],al
   14003a28c:	add    BYTE PTR [rax],al
   14003a28e:	add    BYTE PTR [rax+0xfd4],al
   14003a294:	add    BYTE PTR [rax],al
   14003a296:	add    BYTE PTR [rax+0x58b],al
   14003a29c:	add    BYTE PTR [rax],al
   14003a29e:	add    BYTE PTR [rax+0x2203],al
   14003a2a4:	add    BYTE PTR [rax],al
   14003a2a6:	add    BYTE PTR [rax+0xbd5],al
   14003a2ac:	add    BYTE PTR [rax],al
   14003a2ae:	add    BYTE PTR [rax+0xcc1],al
   14003a2b4:	add    BYTE PTR [rax],al
   14003a2b6:	add    BYTE PTR [rax+0xcc2],al
   14003a2bc:	add    BYTE PTR [rax],al
   14003a2be:	add    BYTE PTR [rax+0xf44],al
   14003a2c4:	add    BYTE PTR [rax],al
   14003a2c6:	add    BYTE PTR [rax+0x273c],al
   14003a2cc:	add    BYTE PTR [rax],al
   14003a2ce:	add    BYTE PTR [rax+0x2ace],al
   14003a2d4:	add    BYTE PTR [rax],al
   14003a2d6:	add    BYTE PTR [rax+0x224e],al
   14003a2dc:	add    BYTE PTR [rax],al
   14003a2de:	add    BYTE PTR [rax+0xa5f],al
   14003a2e4:	add    BYTE PTR [rax],al
   14003a2e6:	add    BYTE PTR [rax+0x33c8],al
   14003a2ec:	add    BYTE PTR [rax],al
   14003a2ee:	add    BYTE PTR [rax+0x170e],al
   14003a2f4:	add    BYTE PTR [rax],al
   14003a2f6:	add    BYTE PTR [rax+0x2da7],al
   14003a2fc:	add    BYTE PTR [rax],al
   14003a2fe:	add    BYTE PTR [rax+0xde4],al
   14003a304:	add    BYTE PTR [rax],al
   14003a306:	add    BYTE PTR [rax+0x1809],al
   14003a30c:	add    BYTE PTR [rax],al
   14003a30e:	add    BYTE PTR [rax+0xbc6],al
   14003a314:	add    BYTE PTR [rax],al
   14003a316:	add    BYTE PTR [rax+0xfc3],al
   14003a31c:	add    BYTE PTR [rax],al
   14003a31e:	add    BYTE PTR [rax+0x41a],al
   14003a324:	add    BYTE PTR [rax],al
   14003a326:	add    BYTE PTR [rax+0x21fa],al
   14003a32c:	add    BYTE PTR [rax],al
   14003a32e:	add    BYTE PTR [rax+0x183d],al
   14003a334:	add    BYTE PTR [rax],al
   14003a336:	add    BYTE PTR [rax+0x454],al
   14003a33c:	add    BYTE PTR [rax],al
   14003a33e:	add    BYTE PTR [rax+0x1714],al
   14003a344:	add    BYTE PTR [rax],al
   14003a346:	add    BYTE PTR [rax+0x1e9],al
   14003a34c:	add    BYTE PTR [rax],al
   14003a34e:	add    BYTE PTR [rax+0x45e],al
   14003a354:	add    BYTE PTR [rax],al
   14003a356:	add    BYTE PTR [rax+0xf45],al
   14003a35c:	add    BYTE PTR [rax],al
   14003a35e:	add    BYTE PTR [rax+0x104f],al
   14003a364:	add    BYTE PTR [rax],al
   14003a366:	add    BYTE PTR [rax+0x13c],al
   14003a36c:	add    BYTE PTR [rax],al
   14003a36e:	add    BYTE PTR [rax+0x407],al
   14003a374:	add    BYTE PTR [rax],al
   14003a376:	add    BYTE PTR [rax+0x1f6e],al
   14003a37c:	add    BYTE PTR [rax],al
   14003a37e:	add    BYTE PTR [rax+0x11e],al
   14003a384:	add    BYTE PTR [rax],al
   14003a386:	add    BYTE PTR [rax+0x406],al
   14003a38c:	add    BYTE PTR [rax],al
   14003a38e:	add    BYTE PTR [rax+0x5cc],al
   14003a394:	add    BYTE PTR [rax],al
   14003a396:	add    BYTE PTR [rax+0x87a],al
   14003a39c:	add    BYTE PTR [rax],al
   14003a39e:	add    BYTE PTR [rax+0x2dff],al
   14003a3a4:	add    BYTE PTR [rax],al
   14003a3a6:	add    BYTE PTR [rax+0x2e1f],al
   14003a3ac:	add    BYTE PTR [rax],al
   14003a3ae:	add    BYTE PTR [rax+0x1e7a],al
   14003a3b4:	add    BYTE PTR [rax],al
   14003a3b6:	add    BYTE PTR [rax+0x2e13],al
   14003a3bc:	add    BYTE PTR [rax],al
   14003a3be:	add    BYTE PTR [rax+0x15e8],al
   14003a3c4:	add    BYTE PTR [rax],al
   14003a3c6:	add    BYTE PTR [rax+0xe68],al
   14003a3cc:	add    BYTE PTR [rax],al
   14003a3ce:	add    BYTE PTR [rax+0x196f],al
   14003a3d4:	add    BYTE PTR [rax],al
   14003a3d6:	add    BYTE PTR [rax+0x3d4],al
   14003a3dc:	add    BYTE PTR [rax],al
   14003a3de:	add    BYTE PTR [rax+0x1788],al
   14003a3e4:	add    BYTE PTR [rax],al
   14003a3e6:	add    BYTE PTR [rax+0x3743],al
   14003a3ec:	add    BYTE PTR [rax],al
   14003a3ee:	add    BYTE PTR [rax+0x1789],al
   14003a3f4:	add    BYTE PTR [rax],al
   14003a3f6:	add    BYTE PTR [rax+0x3744],al
   14003a3fc:	add    BYTE PTR [rax],al
   14003a3fe:	add    BYTE PTR [rax+0x1787],al
   14003a404:	add    BYTE PTR [rax],al
   14003a406:	add    BYTE PTR [rax+0x3742],al
   14003a40c:	add    BYTE PTR [rax],al
   14003a40e:	add    BYTE PTR [rax+0x1db3],al
   14003a414:	add    BYTE PTR [rax],al
   14003a416:	add    BYTE PTR [rax+0x2f32],al
   14003a41c:	add    BYTE PTR [rax],al
   14003a41e:	add    BYTE PTR [rax+0x367b],al
   14003a424:	add    BYTE PTR [rax],al
   14003a426:	add    BYTE PTR [rax+0x2d13],al
   14003a42c:	add    BYTE PTR [rax],al
   14003a42e:	add    BYTE PTR [rax+0x2d12],al
   14003a434:	add    BYTE PTR [rax],al
   14003a436:	add    BYTE PTR [rax+0x7b1],al
   14003a43c:	add    BYTE PTR [rax],al
   14003a43e:	add    BYTE PTR [rax+0x1d80],al
   14003a444:	add    BYTE PTR [rax],al
   14003a446:	add    BYTE PTR [rax+0x30cf],al
   14003a44c:	add    BYTE PTR [rax],al
   14003a44e:	add    BYTE PTR [rax+0xf42],al
   14003a454:	add    BYTE PTR [rax],al
   14003a456:	add    BYTE PTR [rax+0xf80],al
   14003a45c:	add    BYTE PTR [rax],al
   14003a45e:	add    BYTE PTR [rax+0x230a],al
   14003a464:	add    BYTE PTR [rax],al
   14003a466:	add    BYTE PTR [rax+0x36fa],al
   14003a46c:	add    BYTE PTR [rax],al
   14003a46e:	add    BYTE PTR [rax+0x1d6e],al
   14003a474:	add    BYTE PTR [rax],al
   14003a476:	add    BYTE PTR [rax+0x36f4],al
   14003a47c:	add    BYTE PTR [rax],al
   14003a47e:	add    BYTE PTR [rax+0x2f3d],al
   14003a484:	add    BYTE PTR [rax],al
   14003a486:	add    BYTE PTR [rax+0x2f3c],al
   14003a48c:	add    BYTE PTR [rax],al
   14003a48e:	add    BYTE PTR [rax+0x95d],al
   14003a494:	add    BYTE PTR [rax],al
   14003a496:	add    BYTE PTR [rax+0x13df],al
   14003a49c:	add    BYTE PTR [rax],al
   14003a49e:	add    BYTE PTR [rax+0x1ee1],al
   14003a4a4:	add    BYTE PTR [rax],al
   14003a4a6:	add    BYTE PTR [rax+0x1131],al
   14003a4ac:	add    BYTE PTR [rax],al
   14003a4ae:	add    BYTE PTR [rax+0x307e],al
   14003a4b4:	add    BYTE PTR [rax],al
   14003a4b6:	add    BYTE PTR [rax+0x30bc],al
   14003a4bc:	add    BYTE PTR [rax],al
   14003a4be:	add    BYTE PTR [rax+0x2715],al
   14003a4c4:	add    BYTE PTR [rax],al
   14003a4c6:	add    BYTE PTR [rax+0x2e1b],al
   14003a4cc:	add    BYTE PTR [rax],al
   14003a4ce:	add    BYTE PTR [rax+0x1f1e],al
   14003a4d4:	add    BYTE PTR [rax],al
   14003a4d6:	add    BYTE PTR [rax+0x5a5],al
   14003a4dc:	add    BYTE PTR [rax],al
   14003a4de:	add    BYTE PTR [rax+0x1c71],al
   14003a4e4:	add    BYTE PTR [rax],al
   14003a4e6:	add    BYTE PTR [rax+0x1f71],al
   14003a4ec:	add    BYTE PTR [rax],al
   14003a4ee:	add    BYTE PTR [rax+0x224d],al
   14003a4f4:	add    BYTE PTR [rax],al
   14003a4f6:	add    BYTE PTR [rax+0x265e],al
   14003a4fc:	add    BYTE PTR [rax],al
   14003a4fe:	add    BYTE PTR [rax+0x1e7c],al
   14003a504:	add    BYTE PTR [rax],al
   14003a506:	add    BYTE PTR [rax+0x140b],al
   14003a50c:	add    BYTE PTR [rax],al
   14003a50e:	add    BYTE PTR [rax+0x1ca9],al
   14003a514:	add    BYTE PTR [rax],al
   14003a516:	add    BYTE PTR [rax+0x1cb3],al
   14003a51c:	add    BYTE PTR [rax],al
   14003a51e:	add    BYTE PTR [rax+0x1cb2],al
   14003a524:	add    BYTE PTR [rax],al
   14003a526:	add    BYTE PTR [rax+0x136a],al
   14003a52c:	add    BYTE PTR [rax],al
   14003a52e:	add    BYTE PTR [rax+0x140d],al
   14003a534:	add    BYTE PTR [rax],al
   14003a536:	add    BYTE PTR [rax+0x137e],al
   14003a53c:	add    BYTE PTR [rax],al
   14003a53e:	add    BYTE PTR [rax+0x1552],al
   14003a544:	add    BYTE PTR [rax],al
   14003a546:	add    BYTE PTR [rax+0x147b],al
   14003a54c:	add    BYTE PTR [rax],al
   14003a54e:	add    BYTE PTR [rax+0x22da],al
   14003a554:	add    BYTE PTR [rax],al
   14003a556:	add    BYTE PTR [rax+0x154f],al
   14003a55c:	add    BYTE PTR [rax],al
   14003a55e:	add    BYTE PTR [rax+0x1493],al
   14003a564:	add    BYTE PTR [rax],al
   14003a566:	add    BYTE PTR [rax+0x137b],al
   14003a56c:	add    BYTE PTR [rax],al
   14003a56e:	add    BYTE PTR [rax+0x5ce],al
   14003a574:	add    BYTE PTR [rax],al
   14003a576:	add    BYTE PTR [rax+0x16ba],al
   14003a57c:	add    BYTE PTR [rax],al
   14003a57e:	add    BYTE PTR [rax+0x2e25],al
   14003a584:	add    BYTE PTR [rax],al
   14003a586:	add    BYTE PTR [rax+0x2e27],al
   14003a58c:	add    BYTE PTR [rax],al
   14003a58e:	add    BYTE PTR [rax+0x343c],al
   14003a594:	add    BYTE PTR [rax],al
   14003a596:	add    BYTE PTR [rax+0xc3b],al
   14003a59c:	add    BYTE PTR [rax],al
   14003a59e:	add    BYTE PTR [rax+0x227c],al
   14003a5a4:	add    BYTE PTR [rax],al
   14003a5a6:	add    BYTE PTR [rax+0x294b],al
   14003a5ac:	add    BYTE PTR [rax],al
   14003a5ae:	add    BYTE PTR [rax+0x19e1],al
   14003a5b4:	add    BYTE PTR [rax],al
   14003a5b6:	add    BYTE PTR [rax+0x2e00],al
   14003a5bc:	add    BYTE PTR [rax],al
   14003a5be:	add    BYTE PTR [rax+0x2159],al
   14003a5c4:	add    BYTE PTR [rax],al
   14003a5c6:	add    BYTE PTR [rax+0x36f3],al
   14003a5cc:	add    BYTE PTR [rax],al
   14003a5ce:	add    BYTE PTR [rax+0x2ceb],al
   14003a5d4:	add    BYTE PTR [rax],al
   14003a5d6:	add    BYTE PTR [rax+0xe5b],al
   14003a5dc:	add    BYTE PTR [rax],al
   14003a5de:	add    BYTE PTR [rax+0x2d7d],al
   14003a5e4:	add    BYTE PTR [rax],al
   14003a5e6:	add    BYTE PTR [rax+0x2207],al
   14003a5ec:	add    BYTE PTR [rax],al
   14003a5ee:	add    BYTE PTR [rax+0x2c19],al
   14003a5f4:	add    BYTE PTR [rax],al
   14003a5f6:	add    BYTE PTR [rax+0x2c18],al
   14003a5fc:	add    BYTE PTR [rax],al
   14003a5fe:	add    BYTE PTR [rax+0x14eb],al
   14003a604:	add    BYTE PTR [rax],al
   14003a606:	add    BYTE PTR [rax+0x2684],al
   14003a60c:	add    BYTE PTR [rax],al
   14003a60e:	add    BYTE PTR [rax+0x2680],al
   14003a614:	add    BYTE PTR [rax],al
   14003a616:	add    BYTE PTR [rax+0x2682],al
   14003a61c:	add    BYTE PTR [rax],al
   14003a61e:	add    BYTE PTR [rax+0x2683],al
   14003a624:	add    BYTE PTR [rax],al
   14003a626:	add    BYTE PTR [rax+0x2681],al
   14003a62c:	add    BYTE PTR [rax],al
   14003a62e:	add    BYTE PTR [rax+0xa60],al
   14003a634:	add    BYTE PTR [rax],al
   14003a636:	add    BYTE PTR [rax+0x1e73],al
   14003a63c:	add    BYTE PTR [rax],al
   14003a63e:	add    BYTE PTR [rax+0x2663],al
   14003a644:	add    BYTE PTR [rax],al
   14003a646:	add    BYTE PTR [rax+0xc5f],al
   14003a64c:	add    BYTE PTR [rax],al
   14003a64e:	add    BYTE PTR [rax+0xc62],al
   14003a654:	add    BYTE PTR [rax],al
   14003a656:	add    BYTE PTR [rax+0x1710],al
   14003a65c:	add    BYTE PTR [rax],al
   14003a65e:	add    BYTE PTR [rax+0x33cc],al
   14003a664:	add    BYTE PTR [rax],al
   14003a666:	add    BYTE PTR [rax+0x2a34],al
   14003a66c:	add    BYTE PTR [rax],al
   14003a66e:	add    BYTE PTR [rax+0x2165],al
   14003a674:	add    BYTE PTR [rax],al
   14003a676:	add    BYTE PTR [rax+0xb31],al
   14003a67c:	add    BYTE PTR [rax],al
   14003a67e:	add    BYTE PTR [rax+0x279d],al
   14003a684:	add    BYTE PTR [rax],al
   14003a686:	add    BYTE PTR [rax+0x918],al
   14003a68c:	add    BYTE PTR [rax],al
   14003a68e:	add    BYTE PTR [rax+0x10dc],al
   14003a694:	add    BYTE PTR [rax],al
   14003a696:	add    BYTE PTR [rax+0x0],al
   14003a69c:	add    BYTE PTR [rax],al
   14003a69e:	add    BYTE PTR [rax],al
   14003a6a0:	je     0x14003a649
   14003a6a2:	add    eax,DWORD PTR [rax]
   14003a6a4:	add    BYTE PTR [rax],al
   14003a6a6:	add    BYTE PTR [rax],al
   14003a6a8:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14003a6aa:	add    eax,DWORD PTR [rax]
   14003a6ac:	add    BYTE PTR [rax],al
   14003a6ae:	add    BYTE PTR [rax],al
   14003a6b0:	push   rsp
   14003a6b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a6b2:	add    eax,DWORD PTR [rax]
   14003a6b4:	add    BYTE PTR [rax],al
   14003a6b6:	add    BYTE PTR [rax],al
   14003a6b8:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003a6ba:	add    eax,DWORD PTR [rax]
   14003a6bc:	add    BYTE PTR [rax],al
   14003a6be:	add    BYTE PTR [rax],al
   14003a6c0:	xor    BYTE PTR [rdi+0x3],ah
   14003a6c6:	add    BYTE PTR [rax],al
   14003a6c8:	and    al,0xa7
   14003a6ca:	add    eax,DWORD PTR [rax]
   14003a6cc:	add    BYTE PTR [rax],al
   14003a6ce:	add    BYTE PTR [rax],al
   14003a6d0:	adc    ah,BYTE PTR [rdi+0x3]
   14003a6d6:	add    BYTE PTR [rax],al
   14003a6d8:	add    ah,BYTE PTR [rdi+0x3]
   14003a6de:	add    BYTE PTR [rax],al
   14003a6e0:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003a6e2:	add    eax,DWORD PTR [rax]
	...
   14003a6f0:	data16 add BYTE PTR [rdi+0x73],dh
   14003a6f4:	jne    0x14003a766
   14003a6f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003a6f8:	outs   dx,BYTE PTR ds:[rsi]
   14003a6f9:	jbe    0x14003a760
   14003a6fb:	jb     0x14003a771
   14003a6fd:	rex.R (bad) 
   14003a6ff:	je     0x14003a762
   14003a701:	add    BYTE PTR [rbx+0x0],dh
   14003a704:	ja     0x14003a779
   14003a706:	jne    0x14003a778
   14003a708:	rex.WRXB jo 0x14003a770
   14003a70b:	outs   dx,BYTE PTR ds:[rsi]
   14003a70c:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x77006800
   14003a715:	jae    0x14003a78c
   14003a717:	jo     0x14003a75c
   14003a719:	jb     0x14003a780
   14003a71b:	(bad)  
   14003a71c:	je     0x14003a783
   14003a71e:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x77006500
   14003a727:	jae    0x14003a79e
   14003a729:	jo     0x14003a76e
   14003a72b:	ins    BYTE PTR es:[rdi],dx
   14003a72c:	outs   dx,DWORD PTR ds:[rsi]
   14003a72d:	jae    0x14003a794
   14003a72f:	add    BYTE PTR [rsi+0x0],ch
   14003a732:	ja     0x14003a7a7
   14003a734:	jne    0x14003a7a6
   14003a736:	rex.RXB
   14003a737:	gs je  0x14003a77b
   14003a73a:	ins    BYTE PTR es:[rdi],dx
   14003a73b:	je     0x14003a7a2
   14003a73d:	jb     0x14003a7ad
   14003a73f:	(bad)  
   14003a740:	je     0x14003a7a7
   14003a742:	add    BYTE PTR [rax],al
   14003a744:	add    BYTE PTR fs:[rdi+0x73],dh
   14003a748:	jne    0x14003a7ba
   14003a74a:	rex.B
   14003a74b:	fs rex.RB outs dx,BYTE PTR fs:[rsi]
   14003a74f:	je     0x14003a7c3
   14003a751:	jns    0x14003a753
   14003a753:	add    BYTE PTR [rdi+0x0],ch
   14003a756:	ja     0x14003a7cb
   14003a758:	jne    0x14003a7ca
   14003a75a:	rex.RXB
   14003a75b:	gs je  0x14003a7a1
   14003a75e:	outs   dx,DWORD PTR ds:[rsi]
   14003a75f:	ins    DWORD PTR es:[rdi],dx
   14003a760:	ins    DWORD PTR es:[rdi],dx
   14003a761:	outs   dx,BYTE PTR gs:[rsi]
   14003a763:	je     0x14003a765
   14003a765:	add    BYTE PTR [rcx+0x0],dh
   14003a768:	ja     0x14003a7dd
   14003a76a:	jne    0x14003a7dc
   14003a76c:	rex.WB je 0x14003a7d4
   14003a76f:	jb     0x14003a7d2
   14003a771:	je     0x14003a7d8
   14003a773:	add    BYTE PTR [rip+0x47745700],ch        # 0x18777fe79
   14003a779:	gs je  0x14003a7c0
   14003a77c:	gs data16 (bad) 
   14003a77f:	jne    0x14003a7ed
   14003a781:	je     0x14003a7cf
   14003a783:	(bad)  
   14003a784:	outs   dx,BYTE PTR ds:[rsi]
   14003a785:	addr32 jne 0x14003a7e9
   14003a788:	add    BYTE PTR gs:[eax],al
   14003a78c:	ja     0x14003a802
   14003a78e:	ins    BYTE PTR es:[rdi],dx
   14003a78f:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14003a795:	add    BYTE PTR [rsi+0xd],cl
   14003a798:	(bad)  
   14003a799:	push   rdi
   14003a79a:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   14003a7a1:	outs   dx,DWORD PTR ds:[rsi]
   14003a7a2:	movsxd eax,DWORD PTR [rax+0x57]
   14003a7a5:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a7a7:	outs   dx,BYTE PTR ds:[rsi]
   14003a7a8:	push   rbp
   14003a7a9:	rex.WB pop r15
   14003a7ab:	push   rax
   14003a7ac:	jb     0x14003a81d
   14003a7ae:	jo     0x14003a815
   14003a7b0:	jb     0x14003a826
   14003a7b2:	jns    0x14003a804
   14003a7b4:	(bad)  
   14003a7b5:	addr32 gs rex
   14003a7b8:	rex
   14003a7b9:	rex.WRB
   14003a7ba:	rex.RB
   14003a7bb:	rex.B
   14003a7bc:	pop    r15
   14003a7be:	rex.WX
   14003a7bf:	rex.WB pop r15
   14003a7c1:	rex.WXB pop r15
   14003a7c3:	rex.WX
   14003a7c4:	rex pop rdx
   14003a7c6:	add    BYTE PTR [rax],al
   14003a7c8:	push   rbx
   14003a7c9:	or     bh,BYTE PTR [rdi]
   14003a7cb:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14003a7cd:	push   rbx
   14003a7ce:	gs je  0x14003a812
   14003a7d1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14003a7d5:	gs rex push rdi
   14003a7d8:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a7da:	outs   dx,BYTE PTR ds:[rsi]
   14003a7db:	push   rbp
   14003a7dc:	rex.WB pop r15
   14003a7de:	push   rax
   14003a7df:	jb     0x14003a850
   14003a7e1:	jo     0x14003a848
   14003a7e3:	jb     0x14003a859
   14003a7e5:	jns    0x14003a837
   14003a7e7:	(bad)  
   14003a7e8:	addr32 gs rex
   14003a7eb:	rex push rbp
   14003a7ed:	rex.RB
   14003a7ee:	rex.B
   14003a7ef:	rex.B
   14003a7f0:	rex.W pop rax
   14003a7f2:	pop    rdx
   14003a7f3:	add    BYTE PTR [rdx],cl
   14003a7f5:	add    DWORD PTR [rdi],edi
   14003a7f7:	(bad)  
   14003a7f8:	xor    DWORD PTR [rdi+0x43],edx
   14003a7fb:	ins    DWORD PTR es:[rdi],dx
   14003a7fc:	outs   dx,BYTE PTR ds:[rsi]
   14003a7fd:	push   rbp
   14003a7fe:	rex.WB pop r15
   14003a800:	push   rax
   14003a801:	jb     0x14003a872
   14003a803:	jo     0x14003a86a
   14003a805:	jb     0x14003a87b
   14003a807:	jns    0x14003a859
   14003a809:	(bad)  
   14003a80a:	addr32 gs rex
   14003a80d:	rex push rbp
   14003a80f:	rex.RB
   14003a810:	rex.B
   14003a811:	rex.B
   14003a812:	rex pop rax
   14003a814:	pop    rdx
   14003a815:	add    BYTE PTR [rip+0x303f3f00],dh        # 0x17042e71b
   14003a81b:	push   rdi
   14003a81c:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a81e:	outs   dx,BYTE PTR ds:[rsi]
   14003a81f:	push   rbp
   14003a820:	rex.WB pop r15
   14003a822:	push   rax
   14003a823:	jb     0x14003a894
   14003a825:	jo     0x14003a88c
   14003a827:	jb     0x14003a89d
   14003a829:	jns    0x14003a87b
   14003a82b:	(bad)  
   14003a82c:	addr32 gs rex
   14003a82f:	rex push rcx
   14003a831:	rex.RB
   14003a832:	rex.B
   14003a833:	rex.B
   14003a834:	rex
   14003a835:	rex.WB
   14003a836:	rex.WB
   14003a837:	rex.WXB
   14003a838:	rex pop rdx
   14003a83a:	add    BYTE PTR [rax],al
   14003a83c:	mov    ah,0x6
   14003a83e:	(bad)  
   14003a83f:	rex.RXB
   14003a840:	gs je  0x14003a897
   14003a843:	push   0x6c437369
   14003a848:	(bad)  
   14003a849:	jae    0x14003a8be
   14003a84b:	rex push rdi
   14003a84d:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a84f:	outs   dx,BYTE PTR ds:[rsi]
   14003a850:	push   rbp
   14003a851:	rex.WB pop r15
   14003a853:	push   rax
   14003a854:	jb     0x14003a8c5
   14003a856:	jo     0x14003a8bd
   14003a858:	jb     0x14003a8ce
   14003a85a:	jns    0x14003a8ac
   14003a85c:	(bad)  
   14003a85d:	addr32 gs rex
   14003a860:	rex push rbx
   14003a862:	push   r8
   14003a864:	rex.RB
   14003a865:	push   r13
   14003a867:	rex.XB push r10
   14003a869:	jne    0x14003a8d9
   14003a86b:	je     0x14003a8d6
   14003a86d:	ins    DWORD PTR es:[rdi],dx
   14003a86e:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14003a871:	(bad)  
   14003a872:	jae    0x14003a8e7
   14003a874:	rex
   14003a875:	rex pop rax
   14003a877:	pop    rdx
   14003a878:	add    BYTE PTR [rax],al
   14003a87a:	jo     0x14003a884
   14003a87c:	(bad)  
   14003a87d:	imul   r15,QWORD PTR [r8+0x69],0x6e69576e
   14003a885:	outs   dx,DWORD PTR fs:[rsi]
   14003a887:	ja     0x14003a8d9
   14003a889:	jb     0x14003a8fa
   14003a88b:	movsxd eax,DWORD PTR [rax+0x57]
   14003a88e:	rex.RX jb 0x14003a8f2
   14003a891:	ins    DWORD PTR es:[rdi],dx
   14003a892:	gs rex.XB push 0x656d6f72
   14003a899:	imul   r15,QWORD PTR [r8+0x69],0x5540406e
   14003a8a1:	rex.RB
   14003a8a2:	rex.B
   14003a8a3:	pop    r15
   14003a8a5:	rex.WX
   14003a8a6:	rex.WB pop r15
   14003a8a8:	rex.WXB pop r15
   14003a8aa:	rex.WX
   14003a8ab:	rex.B
   14003a8ac:	rex.RB
   14003a8ad:	rex.B
   14003a8ae:	rex.W
   14003a8af:	rex pop rdx
   14003a8b1:	add    BYTE PTR [rax],ah
   14003a8b3:	(bad)  
   14003a8b4:	(bad)  
   14003a8b5:	rex.RXB
   14003a8b6:	gs je  0x14003a909
   14003a8b9:	(bad)  
   14003a8ba:	jb     0x14003a921
   14003a8bc:	outs   dx,BYTE PTR ds:[rsi]
   14003a8bd:	je     0x14003a905
   14003a8bf:	jb     0x14003a922
   14003a8c1:	ins    DWORD PTR es:[rdi],dx
   14003a8c2:	gs rex.WRXB jb 0x14003a90a
   14003a8c6:	imul   esp,DWORD PTR [rcx+0x6c],0x5740676f
   14003a8cd:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a8cf:	outs   dx,BYTE PTR ds:[rsi]
   14003a8d0:	push   rbp
   14003a8d1:	rex.WB pop r15
   14003a8d3:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a8db:	rex.WRB
   14003a8dc:	rex.RB
   14003a8dd:	rex.B
   14003a8de:	push   r8
   14003a8e0:	rex.RB
   14003a8e1:	push   r14
   14003a8e3:	rex.XB push r15
   14003a8e5:	outs   dx,BYTE PTR ds:[rsi]
   14003a8e6:	fs rex
   14003a8e8:	rex pop rax
   14003a8ea:	pop    rdx
   14003a8eb:	add    BYTE PTR [rax+0x65473f05],bh
   14003a8f1:	je     0x14003a940
   14003a8f3:	gs jae 0x14003a969
   14003a8f6:	(bad)  
   14003a8f7:	addr32 gs rex.WRB (bad) 
   14003a8fb:	jo     0x14003a93d
   14003a8fd:	push   rdi
   14003a8fe:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a900:	outs   dx,BYTE PTR ds:[rsi]
   14003a901:	push   rbp
   14003a902:	rex.WB pop r15
   14003a904:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a90c:	rex.WRB
   14003a90d:	rex.RB
   14003a90e:	rex.X
   14003a90f:	push   r8
   14003a911:	rex.RB
   14003a912:	rex.X push rbp
   14003a914:	rex.B
   14003a915:	rex.RX pop rax
   14003a917:	pop    rdi
   14003a918:	rex.WRB push r11
   14003a91a:	rex.RXB
   14003a91b:	rex.WRB
   14003a91c:	push   r8
   14003a91e:	rex
   14003a91f:	rex pop rax
   14003a921:	pop    rdx
   14003a922:	add    BYTE PTR [rax],al
   14003a924:	jne    0x14003a92a
   14003a926:	(bad)  
   14003a927:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003a929:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   14003a92c:	fs (bad) 
   14003a92e:	ins    BYTE PTR es:[rdi],dx
   14003a92f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003a931:	outs   dx,DWORD PTR ds:[rsi]
   14003a932:	jo     0x14003a974
   14003a934:	push   rdi
   14003a935:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a937:	outs   dx,BYTE PTR ds:[rsi]
   14003a938:	push   rbp
   14003a939:	rex.WB pop r15
   14003a93b:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a943:	rex.WRB
   14003a944:	rex.RB
   14003a945:	rex.B
   14003a946:	pop    r8
   14003a948:	rex.W
   14003a949:	rex pop rdx
   14003a94b:	add    BYTE PTR [rbp+0xd],cl
   14003a94e:	(bad)  
   14003a94f:	push   rdi
   14003a950:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   14003a957:	outs   dx,DWORD PTR ds:[rsi]
   14003a958:	movsxd eax,DWORD PTR [rax+0x57]
   14003a95b:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a95d:	outs   dx,BYTE PTR ds:[rsi]
   14003a95e:	push   rbp
   14003a95f:	rex.WB pop r15
   14003a961:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a969:	rex.WRB
   14003a96a:	rex.RB
   14003a96b:	rex.B
   14003a96c:	pop    r15
   14003a96e:	rex.WX
   14003a96f:	rex.WB pop r15
   14003a971:	rex.WXB pop r15
   14003a973:	rex.WX
   14003a974:	rex pop rdx
   14003a976:	add    BYTE PTR [rax],al
   14003a978:	(bad)  
   14003a979:	or     BYTE PTR [rdi],bh
   14003a97b:	rex.WB jae 0x14003a9d3
   14003a97e:	jae    0x14003a9e9
   14003a980:	outs   dx,BYTE PTR ds:[rsi]
   14003a981:	addr32 rex.WRXB jne 0x14003a9f9
   14003a985:	gs jb  0x14003a9ce
   14003a988:	jb     0x14003a9eb
   14003a98a:	ins    DWORD PTR es:[rdi],dx
   14003a98b:	imul   r12d,DWORD PTR gs:[rcx+0x6c],0x5740676f
   14003a994:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a996:	outs   dx,BYTE PTR ds:[rsi]
   14003a997:	push   rbp
   14003a998:	rex.WB pop r15
   14003a99a:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a9a2:	rex.WRB
   14003a9a3:	rex.RB
   14003a9a4:	rex.B
   14003a9a5:	pop    r15
   14003a9a7:	rex.WRX pop rax
   14003a9a9:	pop    rdx
   14003a9aa:	add    BYTE PTR [rax],al
   14003a9ac:	fiadd  WORD PTR [rbx]
   14003a9ae:	(bad)  
   14003a9af:	rex.R outs dx,DWORD PTR ds:[rsi]
   14003a9b1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14003a9b3:	fs (bad) 
   14003a9b5:	ins    BYTE PTR es:[rdi],dx
   14003a9b6:	rex push rdi
   14003a9b8:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a9ba:	outs   dx,BYTE PTR ds:[rsi]
   14003a9bb:	push   rbp
   14003a9bc:	rex.WB pop r15
   14003a9be:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a9c6:	push   rbp
   14003a9c7:	rex.RB
   14003a9c8:	rex.B
   14003a9c9:	pop    r15
   14003a9cb:	rex.WX pop rax
   14003a9cd:	pop    rdx
   14003a9ce:	add    BYTE PTR [rax],al
   14003a9d0:	ins    DWORD PTR es:[rdi],dx
   14003a9d1:	add    edi,DWORD PTR [rdi]
   14003a9d3:	rex.XB jb 0x14003aa3b
   14003a9d6:	(bad)  
   14003a9d7:	je     0x14003aa3e
   14003a9d9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003a9db:	imul   esi,DWORD PTR fs:[rdx+0x65],0x57407463
   14003a9e3:	rex.XB ins DWORD PTR es:[rdi],dx
   14003a9e5:	outs   dx,BYTE PTR ds:[rsi]
   14003a9e6:	push   rbp
   14003a9e7:	rex.WB pop r15
   14003a9e9:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003a9f1:	push   rbp
   14003a9f2:	rex.RB
   14003a9f3:	rex.B
   14003a9f4:	rex.B
   14003a9f5:	rex.W push rax
   14003a9f7:	rex.RB
   14003a9f8:	rex.X push rbp
   14003a9fa:	rex.R
   14003a9fb:	rex.WR
   14003a9fc:	rex.RXB push r12
   14003a9fe:	rex.RB
   14003a9ff:	rex.WRB push r8
   14003aa01:	rex.WR
   14003aa02:	push   r12
   14003aa04:	rex.RB
   14003aa05:	rex
   14003aa06:	rex push rax
   14003aa08:	rex.RB
   14003aa09:	push   r14
   14003aa0b:	rex.XB push r15
   14003aa0d:	outs   dx,BYTE PTR ds:[rsi]
   14003aa0e:	fs rex
   14003aa10:	rex push rax
   14003aa12:	rex.RB
   14003aa13:	pop    r8
   14003aa15:	rex pop rdx
   14003aa17:	add    BYTE PTR [rbx+rax*1+0x3f],ch
   14003aa1b:	rex.XB jb 0x14003aa83
   14003aa1e:	(bad)  
   14003aa1f:	je     0x14003aa86
   14003aa21:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003aa23:	imul   esi,DWORD PTR fs:[rdx+0x65],0x57407463
   14003aa2b:	rex.XB ins DWORD PTR es:[rdi],dx
   14003aa2d:	outs   dx,BYTE PTR ds:[rsi]
   14003aa2e:	push   rbp
   14003aa2f:	rex.WB pop r15
   14003aa31:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003aa39:	push   rbp
   14003aa3a:	rex.RB
   14003aa3b:	rex.B
   14003aa3c:	rex.B
   14003aa3d:	rex.W push rax
   14003aa3f:	rex.RB
   14003aa40:	pop    r8
   14003aa42:	push   rax
   14003aa43:	rex.RB
   14003aa44:	push   r14
   14003aa46:	rex.XB push r15
   14003aa48:	outs   dx,BYTE PTR ds:[rsi]
   14003aa49:	fs rex
   14003aa4b:	rex
   14003aa4c:	rex pop rdx
   14003aa4e:	add    BYTE PTR [rax],al
   14003aa50:	push   rdi
   14003aa51:	add    edi,DWORD PTR [rdi]
   14003aa53:	rex.XB jb 0x14003aabb
   14003aa56:	(bad)  
   14003aa57:	je     0x14003aabe
   14003aa59:	rex push rdi
   14003aa5b:	rex.XB ins DWORD PTR es:[rdi],dx
   14003aa5d:	outs   dx,BYTE PTR ds:[rsi]
   14003aa5e:	push   rbp
   14003aa5f:	rex.WB pop r15
   14003aa61:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003aa69:	push   rbp
   14003aa6a:	rex.RB
   14003aa6b:	rex.B
   14003aa6c:	rex.B
   14003aa6d:	rex.W push rax
   14003aa6f:	rex.RB
   14003aa70:	rex.X pop rdi
   14003aa72:	push   rdi
   14003aa73:	push   rax
   14003aa74:	rex.RB
   14003aa75:	push   r14
   14003aa77:	rex.XB push r15
   14003aa79:	outs   dx,BYTE PTR ds:[rsi]
   14003aa7a:	fs rex
   14003aa7c:	rex
   14003aa7d:	rex pop rdx
   14003aa7f:	add    BYTE PTR [rsi+0x3],dl
   14003aa82:	(bad)  
   14003aa83:	rex.XB jb 0x14003aaeb
   14003aa86:	(bad)  
   14003aa87:	je     0x14003aaee
   14003aa89:	rex push rdi
   14003aa8b:	rex.XB ins DWORD PTR es:[rdi],dx
   14003aa8d:	outs   dx,BYTE PTR ds:[rsi]
   14003aa8e:	push   rbp
   14003aa8f:	rex.WB pop r15
   14003aa91:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003aa99:	push   rbp
   14003aa9a:	rex.RB
   14003aa9b:	rex.B
   14003aa9c:	rex.B
   14003aa9d:	rex.W push rax
   14003aa9f:	rex.RB
   14003aaa0:	push   r13
   14003aaa2:	rex.W
   14003aaa3:	rex.WB
   14003aaa4:	rex.WRX push rbx
   14003aaa6:	push   rsp
   14003aaa7:	rex.B
   14003aaa8:	rex.WRX
   14003aaa9:	rex.XB
   14003aaaa:	rex.RB pop r15
   14003aaac:	pop    rdi
   14003aaad:	rex
   14003aaae:	rex push rax
   14003aab0:	rex.RB
   14003aab1:	rex.X pop rdi
   14003aab3:	push   rdi
   14003aab4:	push   rax
   14003aab5:	rex.RB
   14003aab6:	push   r14
   14003aab8:	rex.XB push r15
   14003aaba:	outs   dx,BYTE PTR ds:[rsi]
   14003aabb:	fs rex
   14003aabd:	rex
   14003aabe:	rex pop rdx
   14003aac0:	add    BYTE PTR [rax],al
   14003aac2:	push   rsp
   14003aac3:	add    edi,DWORD PTR [rdi]
   14003aac5:	rex.XB jb 0x14003ab2d
   14003aac8:	(bad)  
   14003aac9:	je     0x14003ab30
   14003aacb:	rex push rdi
   14003aacd:	rex.XB ins DWORD PTR es:[rdi],dx
   14003aacf:	outs   dx,BYTE PTR ds:[rsi]
   14003aad0:	push   rbp
   14003aad1:	rex.WB pop r15
   14003aad3:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003aadb:	push   rbp
   14003aadc:	rex.RB
   14003aadd:	rex.B
   14003aade:	rex.B
   14003aadf:	rex.W
   14003aae0:	rex.WB push r8
   14003aae2:	rex.RB
   14003aae3:	push   r14
   14003aae5:	rex.XB push r15
   14003aae7:	outs   dx,BYTE PTR ds:[rsi]
   14003aae8:	fs rex
   14003aaea:	rex
   14003aaeb:	rex pop rdx
   14003aaed:	add    BYTE PTR [rbp+0x3],dl
   14003aaf0:	(bad)  
   14003aaf1:	rex.XB jb 0x14003ab59
   14003aaf4:	(bad)  
   14003aaf5:	je     0x14003ab5c
   14003aaf7:	rex push rdi
   14003aaf9:	rex.XB ins DWORD PTR es:[rdi],dx
   14003aafb:	outs   dx,BYTE PTR ds:[rsi]
   14003aafc:	push   rbp
   14003aafd:	rex.WB pop r15
   14003aaff:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003ab07:	push   rbp
   14003ab08:	rex.RB
   14003ab09:	rex.B
   14003ab0a:	rex.B
   14003ab0b:	rex.W push rax
   14003ab0d:	rex.RB
   14003ab0e:	push   r13
   14003ab10:	rex.W
   14003ab11:	rex.WB
   14003ab12:	rex.WRX push rbx
   14003ab14:	push   rsp
   14003ab15:	rex.B
   14003ab16:	rex.WRX
   14003ab17:	rex.XB
   14003ab18:	rex.RB pop r15
   14003ab1a:	pop    rdi
   14003ab1b:	rex
   14003ab1c:	rex
   14003ab1d:	rex.WB push r8
   14003ab1f:	rex.RB
   14003ab20:	push   r14
   14003ab22:	rex.XB push r15
   14003ab24:	outs   dx,BYTE PTR ds:[rsi]
   14003ab25:	fs rex
   14003ab27:	rex
   14003ab28:	rex pop rdx
   14003ab2a:	add    BYTE PTR [rax],al
   14003ab2c:	or     BYTE PTR [rcx],al
   14003ab2e:	(bad)  
   14003ab2f:	(bad)  
   14003ab30:	xor    DWORD PTR [rdi+0x43],edx
   14003ab33:	ins    DWORD PTR es:[rdi],dx
   14003ab34:	outs   dx,BYTE PTR ds:[rsi]
   14003ab35:	push   rbp
   14003ab36:	rex.WB pop r15
   14003ab38:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003ab40:	push   rbp
   14003ab41:	rex.RB
   14003ab42:	rex.B
   14003ab43:	rex.B
   14003ab44:	rex pop rax
   14003ab46:	pop    rdx
   14003ab47:	add    BYTE PTR [rdi],ch
   14003ab49:	add    BYTE PTR [rdi],bh
   14003ab4b:	(bad)  
   14003ab4c:	xor    BYTE PTR [rdi+0x43],dl
   14003ab4f:	ins    DWORD PTR es:[rdi],dx
   14003ab50:	outs   dx,BYTE PTR ds:[rsi]
   14003ab51:	push   rbp
   14003ab52:	rex.WB pop r15
   14003ab54:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003ab5c:	push   rcx
   14003ab5d:	rex.RB
   14003ab5e:	rex.B
   14003ab5f:	rex.B
   14003ab60:	rex
   14003ab61:	rex.WB push r8
   14003ab63:	rex.RB
   14003ab64:	push   r14
   14003ab66:	rex.XB push r15
   14003ab68:	outs   dx,BYTE PTR ds:[rsi]
   14003ab69:	fs rex
   14003ab6b:	rex
   14003ab6c:	rex pop rdx
   14003ab6e:	add    BYTE PTR [rax],al
   14003ab70:	(bad)  
   14003ab71:	(bad)  
   14003ab72:	(bad)  
   14003ab73:	rex.RXB
   14003ab74:	gs je  0x14003abcb
   14003ab77:	push   0x654d7369
   14003ab7c:	jae    0x14003abf1
   14003ab7e:	(bad)  
   14003ab7f:	addr32 gs rex.WRB (bad) 
   14003ab83:	jo     0x14003abc5
   14003ab85:	push   rdi
   14003ab86:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ab88:	outs   dx,BYTE PTR ds:[rsi]
   14003ab89:	push   rbp
   14003ab8a:	rex.WB pop r15
   14003ab8c:	push   rax
   14003ab8d:	jb     0x14003abfe
   14003ab8f:	jo     0x14003abf6
   14003ab91:	jb     0x14003ac07
   14003ab93:	jns    0x14003abe8
   14003ab95:	push   0x40746565
   14003ab9a:	rex
   14003ab9b:	rex.WXB
   14003ab9c:	push   r8
   14003ab9e:	rex.RB
   14003ab9f:	rex.X push rbp
   14003aba1:	rex.B
   14003aba2:	rex.RX pop rax
   14003aba4:	pop    rdi
   14003aba5:	rex.WRB push r11
   14003aba7:	rex.RXB
   14003aba8:	rex.WRB
   14003aba9:	push   r8
   14003abab:	rex
   14003abac:	rex pop rax
   14003abae:	pop    rdx
   14003abaf:	add    BYTE PTR [rdx+0x64413f02],dl
   14003abb5:	fs push rax
   14003abb7:	(bad)  
   14003abb8:	addr32 gs rex push rdi
   14003abbc:	rex.XB ins DWORD PTR es:[rdi],dx
   14003abbe:	outs   dx,BYTE PTR ds:[rsi]
   14003abbf:	push   rbp
   14003abc0:	rex.WB pop r15
   14003abc2:	push   rax
   14003abc3:	jb     0x14003ac34
   14003abc5:	jo     0x14003ac2c
   14003abc7:	jb     0x14003ac3d
   14003abc9:	jns    0x14003ac1e
   14003abcb:	push   0x40746565
   14003abd0:	rex push rcx
   14003abd2:	rex.RB
   14003abd3:	rex.B
   14003abd4:	pop    r8
   14003abd6:	push   rax
   14003abd7:	rex.RB
   14003abd8:	push   r14
   14003abda:	rex.XB push r8
   14003abdc:	jb     0x14003ac4d
   14003abde:	jo     0x14003ac45
   14003abe0:	jb     0x14003ac56
   14003abe2:	jns    0x14003ac34
   14003abe4:	(bad)  
   14003abe5:	addr32 gs rex
   14003abe8:	rex
   14003abe9:	rex pop rdx
   14003abeb:	add    dl,ah
   14003abed:	or     BYTE PTR [rdi],bh
   14003abef:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14003abf1:	rex.XB ins BYTE PTR es:[rdi],dx
   14003abf3:	outs   dx,DWORD PTR ds:[rsi]
   14003abf4:	jae    0x14003ac5b
   14003abf6:	rex push rdi
   14003abf8:	rex.XB ins DWORD PTR es:[rdi],dx
   14003abfa:	outs   dx,BYTE PTR ds:[rsi]
   14003abfb:	push   rbp
   14003abfc:	rex.WB pop r15
   14003abfe:	push   rax
   14003abff:	jb     0x14003ac70
   14003ac01:	jo     0x14003ac68
   14003ac03:	jb     0x14003ac79
   14003ac05:	jns    0x14003ac5a
   14003ac07:	push   0x40746565
   14003ac0c:	rex
   14003ac0d:	rex.WB
   14003ac0e:	rex.RB
   14003ac0f:	rex.B
   14003ac10:	pop    r8
   14003ac12:	pop    rax
   14003ac13:	pop    rdx
   14003ac14:	add    BYTE PTR [rax],al
   14003ac16:	adc    cl,BYTE PTR [rbx]
   14003ac18:	(bad)  
   14003ac19:	push   rax
   14003ac1a:	jb     0x14003ac81
   14003ac1c:	push   rsp
   14003ac1d:	jb     0x14003ac80
   14003ac1f:	outs   dx,BYTE PTR ds:[rsi]
   14003ac20:	jae    0x14003ac8e
   14003ac22:	(bad)  
   14003ac23:	je     0x14003ac8a
   14003ac25:	rex.WRB
   14003ac26:	gs jae 0x14003ac9c
   14003ac29:	(bad)  
   14003ac2a:	addr32 gs rex push rdi
   14003ac2e:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ac30:	outs   dx,BYTE PTR ds:[rsi]
   14003ac31:	push   rbp
   14003ac32:	rex.WB pop r15
   14003ac34:	push   rax
   14003ac35:	jb     0x14003aca6
   14003ac37:	jo     0x14003ac9e
   14003ac39:	jb     0x14003acaf
   14003ac3b:	jns    0x14003ac90
   14003ac3d:	push   0x40746565
   14003ac42:	rex
   14003ac43:	rex.WRB
   14003ac44:	rex.RB
   14003ac45:	rex.B
   14003ac46:	rex.B
   14003ac47:	rex.W push rax
   14003ac49:	rex.RB
   14003ac4a:	push   r13
   14003ac4c:	je     0x14003acaf
   14003ac4e:	addr32 rex.WRB push r11
   14003ac51:	rex.RXB
   14003ac52:	rex
   14003ac53:	rex
   14003ac54:	rex pop rdx
   14003ac56:	add    BYTE PTR [rax],al
   14003ac58:	in     eax,0x2
   14003ac5a:	(bad)  
   14003ac5b:	rex.X jne 0x14003acc7
   14003ac5e:	ins    BYTE PTR es:[rdi],dx
   14003ac5f:	fs push rax
   14003ac61:	jb     0x14003acd2
   14003ac63:	jo     0x14003acb5
   14003ac65:	(bad)  
   14003ac66:	addr32 gs rex.B jb 0x14003acdd
   14003ac6b:	(bad)  
   14003ac6c:	jns    0x14003acae
   14003ac6e:	push   rdi
   14003ac6f:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ac71:	outs   dx,BYTE PTR ds:[rsi]
   14003ac72:	push   rbp
   14003ac73:	rex.WB pop r15
   14003ac75:	push   rax
   14003ac76:	jb     0x14003ace7
   14003ac78:	jo     0x14003acdf
   14003ac7a:	jb     0x14003acf0
   14003ac7c:	jns    0x14003acd1
   14003ac7e:	push   0x40746565
   14003ac83:	rex
   14003ac84:	rex.WRB
   14003ac85:	rex.RB
   14003ac86:	rex.B
   14003ac87:	pop    r8
   14003ac89:	pop    rax
   14003ac8a:	pop    rdx
   14003ac8b:	add    bl,dh
   14003ac8d:	or     bh,BYTE PTR [rdi]
   14003ac8f:	push   rax
   14003ac90:	(bad)  
   14003ac91:	imul   ebp,DWORD PTR [rsi+0x74],0x666c6553
   14003ac98:	rex push rdi
   14003ac9a:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ac9c:	outs   dx,BYTE PTR ds:[rsi]
   14003ac9d:	push   rbp
   14003ac9e:	rex.WB pop r15
   14003aca0:	push   rax
   14003aca1:	jb     0x14003ad12
   14003aca3:	jo     0x14003ad0a
   14003aca5:	jb     0x14003ad1b
   14003aca7:	jns    0x14003acfc
   14003aca9:	push   0x40746565
   14003acae:	rex
   14003acaf:	rex.WRB
   14003acb0:	rex.RB
   14003acb1:	rex.B
   14003acb2:	pop    r8
   14003acb4:	rex.B
   14003acb5:	rex.RB
   14003acb6:	push   r14
   14003acb8:	rex.XB
   14003acb9:	rex.R
   14003acba:	rex.XB
   14003acbb:	rex
   14003acbc:	rex
   14003acbd:	rex pop rdx
   14003acbf:	add    al,al
   14003acc1:	add    bh,BYTE PTR [rdi]
   14003acc3:	rex.B jne 0x14003ad3a
   14003acc6:	outs   dx,DWORD PTR ds:[rsi]
   14003acc7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14003acc9:	jbe    0x14003ad30
   14003accb:	rex.XB push 0x72646c69
   14003acd1:	outs   dx,BYTE PTR gs:[rsi]
   14003acd3:	rex push rdi
   14003acd5:	rex.XB ins DWORD PTR es:[rdi],dx
   14003acd7:	outs   dx,BYTE PTR ds:[rsi]
   14003acd8:	push   rbp
   14003acd9:	rex.WB pop r15
   14003acdb:	push   rax
   14003acdc:	jb     0x14003ad4d
   14003acde:	jo     0x14003ad45
   14003ace0:	jb     0x14003ad56
   14003ace2:	jns    0x14003ad37
   14003ace4:	push   0x40746565
   14003ace9:	rex push rbp
   14003aceb:	rex.RB
   14003acec:	rex.B
   14003aced:	pop    r8
   14003acef:	pop    rax
   14003acf0:	pop    rdx
   14003acf1:	add    BYTE PTR [rcx],al
   14003acf3:	or     BYTE PTR [rdi],bh
   14003acf5:	rex.WB jae 0x14003ad45
   14003acf8:	imul   edi,DWORD PTR [rax+0x69],0x6e61436e
   14003acff:	movsxd esp,DWORD PTR [rbp+0x6c]
   14003ad02:	gs fs rex push rdi
   14003ad06:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ad08:	outs   dx,BYTE PTR ds:[rsi]
   14003ad09:	push   rbp
   14003ad0a:	rex.WB pop r15
   14003ad0c:	push   rax
   14003ad0d:	jb     0x14003ad7e
   14003ad0f:	jo     0x14003ad76
   14003ad11:	jb     0x14003ad87
   14003ad13:	jns    0x14003ad68
   14003ad15:	push   0x40746565
   14003ad1a:	rex push rbp
   14003ad1c:	rex.RB
   14003ad1d:	rex.B
   14003ad1e:	pop    r15
   14003ad20:	rex.WRX pop rax
   14003ad22:	pop    rdx
   14003ad23:	add    BYTE PTR [rcx],bh
   14003ad25:	add    BYTE PTR [rdi],bh
   14003ad27:	(bad)  
   14003ad28:	xor    BYTE PTR [rdi+0x43],dl
   14003ad2b:	ins    DWORD PTR es:[rdi],dx
   14003ad2c:	outs   dx,BYTE PTR ds:[rsi]
   14003ad2d:	push   rbp
   14003ad2e:	rex.WB pop r15
   14003ad30:	push   rax
   14003ad31:	jb     0x14003ada2
   14003ad33:	jo     0x14003ad9a
   14003ad35:	jb     0x14003adab
   14003ad37:	jns    0x14003ad8c
   14003ad39:	push   0x40746565
   14003ad3e:	rex push rcx
   14003ad40:	rex.RB
   14003ad41:	rex.B
   14003ad42:	rex.B
   14003ad43:	rex
   14003ad44:	rex.WB push r8
   14003ad46:	rex.RB
   14003ad47:	push   r14
   14003ad49:	rex.XB push r15
   14003ad4b:	outs   dx,BYTE PTR ds:[rsi]
   14003ad4c:	fs rex
   14003ad4e:	rex
   14003ad4f:	rex.WB
   14003ad50:	rex pop rdx
   14003ad52:	add    BYTE PTR [rax],al
   14003ad54:	mov    ch,0x6
   14003ad56:	(bad)  
   14003ad57:	rex.RXB
   14003ad58:	gs je  0x14003adaf
   14003ad5b:	push   0x6c437369
   14003ad60:	(bad)  
   14003ad61:	jae    0x14003add6
   14003ad63:	rex push rdi
   14003ad65:	rex.XB ins DWORD PTR es:[rdi],dx
   14003ad67:	outs   dx,BYTE PTR ds:[rsi]
   14003ad68:	push   rbp
   14003ad69:	rex.WB pop r15
   14003ad6b:	push   rax
   14003ad6c:	jb     0x14003addd
   14003ad6e:	jo     0x14003add5
   14003ad70:	jb     0x14003ade6
   14003ad72:	jns    0x14003adc7
   14003ad74:	push   0x40746565
   14003ad79:	rex push rbx
   14003ad7b:	push   r8
   14003ad7d:	rex.RB
   14003ad7e:	push   r13
   14003ad80:	rex.XB push r10
   14003ad82:	jne    0x14003adf2
   14003ad84:	je     0x14003adef
   14003ad86:	ins    DWORD PTR es:[rdi],dx
   14003ad87:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14003ad8a:	(bad)  
   14003ad8b:	jae    0x14003ae00
   14003ad8d:	rex
   14003ad8e:	rex pop rax
   14003ad90:	pop    rdx
   14003ad91:	add    BYTE PTR [rbx],cl
   14003ad93:	add    DWORD PTR [rdi],edi
   14003ad95:	(bad)  
   14003ad96:	xor    DWORD PTR [rdi+0x43],edx
   14003ad99:	ins    DWORD PTR es:[rdi],dx
   14003ad9a:	outs   dx,BYTE PTR ds:[rsi]
   14003ad9b:	push   rbp
   14003ad9c:	rex.WB pop r15
   14003ad9e:	push   rax
   14003ad9f:	jb     0x14003ae10
   14003ada1:	jo     0x14003ae08
   14003ada3:	jb     0x14003ae19
   14003ada5:	jns    0x14003adfa
   14003ada7:	push   0x40746565
   14003adac:	rex push rbp
   14003adae:	rex.RB
   14003adaf:	rex.B
   14003adb0:	rex.B
   14003adb1:	rex pop rax
   14003adb3:	pop    rdx
   14003adb4:	add    BYTE PTR [rax],al
   14003adb6:	rex.WRXB or rax,0x6e69573f
   14003adbc:	outs   dx,DWORD PTR fs:[rsi]
   14003adbe:	ja     0x14003ae10
   14003adc0:	jb     0x14003ae31
   14003adc2:	movsxd eax,DWORD PTR [rax+0x57]
   14003adc5:	rex.XB ins DWORD PTR es:[rdi],dx
   14003adc7:	outs   dx,BYTE PTR ds:[rsi]
   14003adc8:	push   rbp
   14003adc9:	rex.WB pop r15
   14003adcb:	push   rax
   14003adcc:	jb     0x14003ae3d
   14003adce:	jo     0x14003ae35
   14003add0:	jb     0x14003ae46
   14003add2:	jns    0x14003ae27
   14003add4:	push   0x40746565
   14003add9:	rex
   14003adda:	rex.WRB
   14003addb:	rex.RB
   14003addc:	rex.B
   14003addd:	pop    r15
   14003addf:	rex.WX
   14003ade0:	rex.WB pop r15
   14003ade2:	rex.WXB pop r15
   14003ade4:	rex.WX
   14003ade5:	rex pop rdx
   14003ade7:	add    BYTE PTR [rax+rcx*1+0x3f],ch
   14003adeb:	imul   r15,QWORD PTR [r8+0x69],0x6572506e
   14003adf3:	push   rsp
   14003adf4:	jb     0x14003ae57
   14003adf6:	outs   dx,BYTE PTR ds:[rsi]
   14003adf7:	jae    0x14003ae65
   14003adf9:	(bad)  
   14003adfa:	je     0x14003ae61
   14003adfc:	rex.WRB
   14003adfd:	gs jae 0x14003ae73
   14003ae00:	(bad)  
   14003ae01:	addr32 gs rex push rdi
   14003ae05:	rex.RX jb 0x14003ae69
   14003ae08:	ins    DWORD PTR es:[rdi],dx
   14003ae09:	gs rex.XB push 0x656d6f72
   14003ae10:	imul   r15,QWORD PTR [r8+0x69],0x5540406e
   14003ae18:	rex.RB
   14003ae19:	rex.B
   14003ae1a:	rex.B
   14003ae1b:	rex.W push rax
   14003ae1d:	rex.RB
   14003ae1e:	push   r13
   14003ae20:	je     0x14003ae83
   14003ae22:	addr32 rex.WRB push r11
   14003ae25:	rex.RXB
   14003ae26:	rex
   14003ae27:	rex
   14003ae28:	rex pop rdx
   14003ae2a:	add    BYTE PTR [rax],al
   14003ae2c:	rex.XB jb 0x14003ae9b
   14003ae2f:	rex.XB je 0x14003ae9e
   14003ae32:	cs fs ins BYTE PTR es:[rdi],dx
   14003ae35:	ins    BYTE PTR es:[rdi],dx
   14003ae36:	add    BYTE PTR [rax],al
   14003ae38:	ins    DWORD PTR es:[rdi],dx
   14003ae39:	movsxd si,DWORD PTR [rcx]
   14003ae3c:	xor    dh,BYTE PTR [rax]
   14003ae3e:	jne    0x14003ae6e
   14003ae40:	fs ins BYTE PTR es:[rdi],dx
   14003ae42:	ins    BYTE PTR es:[rdi],dx
   14003ae43:	add    BYTE PTR [rdi+0x5],bl
   14003ae46:	pop    rdi
   14003ae47:	ja     0x14003aeb6
   14003ae49:	(bad)  
   14003ae4a:	imul   esp,DWORD PTR [rbp+0x70],0x61
   14003ae4e:	je     0x14003aeb8
   14003ae50:	add    BYTE PTR [rax],al
   14003ae52:	mov    bh,0x6
   14003ae54:	ins    DWORD PTR es:[rdi],dx
   14003ae55:	gs ins DWORD PTR es:[rdi],dx
   14003ae57:	ins    DWORD PTR es:[rdi],dx
   14003ae58:	outs   dx,DWORD PTR ds:[rsi]
   14003ae59:	jbe    0x14003aec0
   14003ae5b:	add    BYTE PTR [rax+0x6],dl
   14003ae5e:	data16 jb 0x14003aec6
   14003ae61:	add    BYTE PTR gs:[rax],al
   14003ae64:	add    DWORD PTR [rip+0x7073775f],0x7074696c        # 0x1b07725cd
   14003ae6e:	(bad)  
   14003ae6f:	je     0x14003aed9
   14003ae71:	add    BYTE PTR [rsi],cl
   14003ae73:	add    al,0x5f
   14003ae75:	jo     0x14003aeec
   14003ae77:	jb     0x14003aede
   14003ae79:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003ae7c:	ins    BYTE PTR es:[rdi],dx
   14003ae7d:	add    ch,dl
   14003ae7f:	(bad)  
   14003ae80:	jno    0x14003aef5
   14003ae82:	outs   dx,DWORD PTR ds:[rsi]
   14003ae83:	jb     0x14003aef9
   14003ae85:	add    ch,al
   14003ae87:	add    al,0x5f
   14003ae89:	jne    0x14003aef9
   14003ae8b:	ins    BYTE PTR es:[rdi],dx
   14003ae8c:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04ab00
   14003ae93:	je     0x14003aefe
   14003ae95:	ins    DWORD PTR es:[rdi],dx
   14003ae96:	gs ss xor al,0x0
   14003ae9a:	sti    
   14003ae9b:	(bad)  
   14003ae9c:	jae    0x14003af0e
   14003ae9e:	jb     0x14003af09
   14003aea0:	outs   dx,BYTE PTR ds:[rsi]
   14003aea1:	je     0x14003af09
   14003aea3:	add    BYTE PTR [rax],al
   14003aea5:	(bad)  
   14003aea6:	jae    0x14003af1b
   14003aea8:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003aeab:	data16 add BYTE PTR [rax],al
   14003aeae:	rex.RX (bad) 
   14003aeb0:	outs   dx,WORD PTR ds:[rsi]
   14003aeb2:	jo     0x14003af19
   14003aeb4:	outs   dx,BYTE PTR ds:[rsi]
   14003aeb5:	add    BYTE PTR [rax+0x6],cl
   14003aeb8:	data16 jo 0x14003af2d
   14003aebb:	imul   ebp,DWORD PTR [rsi+0x74],0x6220066
   14003aec2:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   14003aec7:	add    BYTE PTR gs:[rax],al
   14003aeca:	jg     0x14003aed0
   14003aecc:	pop    rdi
   14003aecd:	jae    0x14003af43
   14003aecf:	jb     0x14003af3f
   14003aed1:	imul   esp,DWORD PTR [rbx+0x6d],0x6730070
   14003aed8:	imul   esi,DWORD PTR [rbx+0x6c],0x7265776f
   14003aedf:	add    BYTE PTR [rdx+0x6c616d06],ch
   14003aee5:	ins    BYTE PTR es:[rdi],dx
   14003aee6:	outs   dx,DWORD PTR ds:[rsi]
   14003aee7:	movsxd eax,DWORD PTR [rax]
   14003aee9:	add    BYTE PTR [rdi+rax*1],dh
   14003aeec:	je     0x14003af5d
   14003aeee:	jne    0x14003af60
   14003aef0:	jo     0x14003af57
   14003aef2:	jb     0x14003aef4
   14003aef4:	test   eax,0x65745f04
   14003aef9:	ins    DWORD PTR es:[rdi],dx
   14003aefa:	jo     0x14003af6a
   14003aefc:	(bad)  
   14003aefd:	ins    DWORD PTR es:[rdi],dx
   14003aefe:	add    BYTE PTR [rax],al
   14003af00:	fiadd  DWORD PTR [rsi]
   14003af02:	jb     0x14003af69
   14003af04:	(bad)  
   14003af05:	ins    BYTE PTR es:[rdi],dx
   14003af06:	ins    BYTE PTR es:[rdi],dx
   14003af07:	outs   dx,DWORD PTR ds:[rsi]
   14003af08:	movsxd eax,DWORD PTR [rax]
   14003af0a:	or     BYTE PTR [rdi],al
   14003af0c:	jae    0x14003af82
   14003af0e:	jb     0x14003af73
   14003af10:	jo     0x14003af8b
   14003af12:	pop    rdi
   14003af13:	jae    0x14003af15
   14003af15:	add    BYTE PTR [rip+0x72747307],dl        # 0x1b2782222
   14003af1b:	jb     0x14003af80
   14003af1d:	push   0x5820072
   14003af22:	pop    rdi
   14003af23:	ja     0x14003af98
   14003af25:	jo     0x14003af93
   14003af27:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   14003af2f:	add    BYTE PTR [rdi+0x7],dl
   14003af32:	ja     0x14003af97
   14003af34:	jae    0x14003af99
   14003af36:	(bad)  
   14003af37:	je     0x14003af98
   14003af39:	jae    0x14003af3b
   14003af3b:	add    BYTE PTR [rdi+rax*1+0x77],bl
   14003af3f:	movsxd esi,DWORD PTR [rbx+0x63]
   14003af42:	jo     0x14003afbd
   14003af44:	pop    rdi
   14003af45:	jae    0x14003af47
   14003af47:	add    BYTE PTR [rdi],dl
   14003af49:	(bad)  
   14003af4a:	jae    0x14003afc0
   14003af4c:	jb     0x14003afc1
   14003af4e:	je     0x14003afc2
   14003af50:	add    BYTE PTR [rax],al
   14003af52:	mov    ecx,0x6d656d06
   14003af57:	jae    0x14003afbe
   14003af59:	je     0x14003af5b
   14003af5b:	add    BYTE PTR [rcx+rax*1+0x5f],bl
   14003af5f:	pop    rdi
   14003af60:	rex.XB pop r15
   14003af62:	jae    0x14003afd4
   14003af64:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14003af68:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14003af6f:	ins    BYTE PTR es:[rdi],dx
   14003af70:	gs jb  0x14003af73
   14003af73:	add    BYTE PTR [rax+0x1],bl
   14003af76:	pop    rdi
   14003af77:	pop    rax
   14003af78:	movsxd esi,DWORD PTR [rax+0x74]
   14003af7b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   14003af84:	pop    rdi
   14003af85:	pop    rdi
   14003af86:	movsxd esi,DWORD PTR [rdx+0x74]
   14003af89:	rex.RXB
   14003af8a:	gs je  0x14003afe0
   14003af8d:	push   0x6957776f
   14003af92:	outs   dx,BYTE PTR ds:[rsi]
   14003af93:	outs   dx,DWORD PTR fs:[rsi]
   14003af95:	ja     0x14003afe4
   14003af97:	outs   dx,DWORD PTR ds:[rsi]
   14003af98:	fs add BYTE PTR gs:[rax],al
   14003af9c:	repnz add DWORD PTR [rdi+0x61],ebx
   14003afa0:	ins    DWORD PTR es:[rdi],dx
   14003afa1:	jae    0x14003b00a
   14003afa3:	pop    rdi
   14003afa4:	gs js  0x14003b010
   14003afa7:	je     0x14003afa9
   14003afa9:	add    ah,ah
   14003afab:	add    DWORD PTR [rdi+0x5f],ebx
   14003afae:	ja     0x14003b017
   14003afb0:	gs je  0x14003b020
   14003afb3:	(bad)  
   14003afb4:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14003afbb:	add    dh,cl
   14003afbd:	add    DWORD PTR [rdi+0x5f],ebx
   14003afc0:	jae    0x14003b027
   14003afc2:	je     0x14003b023
   14003afc4:	(bad)  
   14003afc5:	jo     0x14003b037
   14003afc7:	pop    rdi
   14003afc8:	je     0x14003b043
   14003afca:	jo     0x14003b031
   14003afcc:	add    BYTE PTR [rax],al
   14003afce:	sbb    BYTE PTR [rsi],al
   14003afd0:	gs js  0x14003b03c
   14003afd3:	je     0x14003afd5
   14003afd5:	add    BYTE PTR [rax+0x2],bl
   14003afd8:	pop    rdi
   14003afd9:	gs js  0x14003b045
   14003afdc:	je     0x14003afde
   14003afde:	or     al,BYTE PTR [rdx]
   14003afe0:	pop    rdi
   14003afe1:	movsxd esp,DWORD PTR [rbp+0x78]
   14003afe4:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   14003afec:	outs   dx,DWORD PTR ds:[rsi]
   14003afed:	outs   dx,BYTE PTR ds:[rsi]
   14003afee:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14003aff4:	gs (bad) 
   14003aff6:	fs ins BYTE PTR es:[rdi],dx
   14003aff8:	outs   dx,DWORD PTR ds:[rsi]
   14003aff9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003affc:	gs add al,dl
   14003afff:	add    DWORD PTR [rdi+0x5f],ebx
   14003b002:	jae    0x14003b069
   14003b004:	je     0x14003b07b
   14003b006:	jae    0x14003b06d
   14003b008:	jb     0x14003b077
   14003b00a:	(bad)  
   14003b00b:	je     0x14003b075
   14003b00d:	gs jb  0x14003b082
   14003b010:	add    BYTE PTR [rax],al
   14003b012:	loop   0x14003b016
   14003b014:	pop    rdi
   14003b015:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14003b01c:	ins    DWORD PTR es:[rdi],dx
   14003b01d:	pop    rdi
   14003b01e:	gs add cl,ah
   14003b021:	add    bl,BYTE PTR [rdi+0x69]
   14003b024:	outs   dx,BYTE PTR ds:[rsi]
   14003b025:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xc006d72
   14003b02d:	add    eax,0x6d63775f
   14003b032:	fs ins BYTE PTR es:[rdi],dx
   14003b034:	outs   dx,BYTE PTR ds:[rsi]
   14003b035:	add    BYTE PTR [rax+0x2],bh
   14003b038:	pop    rdi
   14003b039:	ins    WORD PTR es:[rdi],dx
   14003b03b:	outs   dx,DWORD PTR ds:[rsi]
   14003b03c:	fs add BYTE PTR gs:[rax],al
   14003b040:	sbb    DWORD PTR [rdx],eax
   14003b042:	pop    rdi
   14003b043:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003b046:	ins    DWORD PTR es:[rdi],dx
   14003b047:	outs   dx,DWORD PTR ds:[rsi]
   14003b048:	fs add BYTE PTR gs:[rax],al
   14003b04c:	rex.WRB push r11
   14003b04e:	push   rsi
   14003b04f:	rex.XB push r10
   14003b051:	xor    DWORD PTR [rdx],esi
   14003b053:	xor    BYTE PTR [rsi],ch
   14003b055:	fs ins BYTE PTR es:[rdi],dx
   14003b057:	ins    BYTE PTR es:[rdi],dx
   14003b058:	add    BYTE PTR [rax],al
   14003b05a:	pop    rbx
   14003b05b:	add    ebx,DWORD PTR [rdi+0x6c]
   14003b05e:	outs   dx,DWORD PTR ds:[rsi]
   14003b05f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003b062:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14003b069:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003b06c:	or     DWORD PTR [rdx],eax
   14003b06e:	pop    rdi
   14003b06f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b072:	ins    BYTE PTR es:[rdi],dx
   14003b073:	outs   dx,DWORD PTR ds:[rsi]
   14003b074:	movsxd ebx,DWORD PTR [rdi+0x63]
   14003b077:	jb     0x14003b0ed
   14003b079:	add    BYTE PTR [rdi+0x645f5f01],bl
   14003b07f:	ins    BYTE PTR es:[rdi],dx
   14003b080:	ins    BYTE PTR es:[rdi],dx
   14003b081:	outs   dx,DWORD PTR ds:[rsi]
   14003b082:	outs   dx,BYTE PTR ds:[rsi]
   14003b083:	gs js  0x14003b0ef
   14003b086:	je     0x14003b088
   14003b088:	add    al,BYTE PTR [rdi+rbx*2]
   14003b08b:	outs   dx,DWORD PTR ds:[rsi]
   14003b08c:	outs   dx,BYTE PTR ds:[rsi]
   14003b08d:	gs js  0x14003b0f9
   14003b090:	je     0x14003b092
   14003b092:	popf   
   14003b093:	add    DWORD PTR [rdi+0x5f],ebx
   14003b096:	movsxd esi,DWORD PTR [rdx+0x74]
   14003b099:	pop    rdi
   14003b09a:	fs gs (bad) 
   14003b09d:	jne    0x14003b106
   14003b09f:	addr32 gs jb 0x14003b102
   14003b0a3:	push   0x6b6f6f
   14003b0a8:	pushf  
   14003b0a9:	add    DWORD PTR [rdi+0x5f],ebx
   14003b0ac:	movsxd esi,DWORD PTR [rdx+0x74]
   14003b0af:	push   rbp
   14003b0b0:	outs   dx,BYTE PTR ds:[rsi]
   14003b0b1:	push   0x6c646e61
   14003b0b6:	gs fs rex.RB js 0x14003b11e
   14003b0bb:	gs jo  0x14003b132
   14003b0be:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f019b00
   14003b0c5:	pop    rdi
   14003b0c6:	movsxd esi,DWORD PTR [rdx+0x74]
   14003b0c9:	push   rsp
   14003b0ca:	gs jb  0x14003b13a
   14003b0cd:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14003b0d4:	outs   dx,DWORD PTR ds:[rsi]
   14003b0d5:	movsxd esp,DWORD PTR [rbp+0x73]
   14003b0d8:	jae    0x14003b0da
   14003b0da:	jge    0x14003b0dd
   14003b0dc:	pop    rdi
   14003b0dd:	pop    rdi
   14003b0de:	movsxd esi,DWORD PTR [rdx+0x74]
   14003b0e1:	rex.XB (bad) 
   14003b0e3:	jo     0x14003b159
   14003b0e5:	jne    0x14003b159
   14003b0e7:	gs rex.XB jne 0x14003b15d
   14003b0eb:	jb     0x14003b152
   14003b0ed:	outs   dx,BYTE PTR ds:[rsi]
   14003b0ee:	je     0x14003b133
   14003b0f0:	outs   dx,DWORD PTR ds:[rsi]
   14003b0f1:	outs   dx,BYTE PTR ds:[rsi]
   14003b0f2:	je     0x14003b159
   14003b0f4:	js     0x14003b16a
   14003b0f6:	add    BYTE PTR [rax],al
   14003b0f8:	jle    0x14003b0fb
   14003b0fa:	pop    rdi
   14003b0fb:	pop    rdi
   14003b0fc:	movsxd esi,DWORD PTR [rdx+0x74]
   14003b0ff:	rex.XB (bad) 
   14003b101:	jo     0x14003b177
   14003b103:	jne    0x14003b177
   14003b105:	gs push rax
   14003b107:	jb     0x14003b16e
   14003b109:	jbe    0x14003b174
   14003b10b:	outs   dx,DWORD PTR ds:[rsi]
   14003b10c:	jne    0x14003b181
   14003b10e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003b110:	outs   dx,BYTE PTR ds:[rsi]
   14003b111:	je     0x14003b178
   14003b113:	js     0x14003b189
   14003b115:	add    BYTE PTR [rbx],dh
   14003b117:	add    DWORD PTR [rdi],edi
   14003b119:	je     0x14003b180
   14003b11b:	jb     0x14003b18a
   14003b11d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14003b124:	pop    rcx
   14003b125:	pop    r8
   14003b127:	pop    rax
   14003b128:	pop    rdx
   14003b129:	add    BYTE PTR [rcx+0x635f5f01],bl
   14003b12f:	jb     0x14003b1a5
   14003b131:	push   rbx
   14003b132:	gs je  0x14003b18a
   14003b135:	outs   dx,BYTE PTR ds:[rsi]
   14003b136:	push   0x6c646e61
   14003b13b:	gs fs rex.RB js 0x14003b1a3
   14003b140:	gs jo  0x14003b1b7
   14003b143:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14003b14a:	gs jb  0x14003b14d
   14003b14d:	add    BYTE PTR [rbx],bl
   14003b14f:	add    DWORD PTR [rdi],edi
   14003b151:	pop    rdi
   14003b152:	je     0x14003b1cd
   14003b154:	jo     0x14003b1bb
   14003b156:	pop    rdi
   14003b157:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14003b15e:	outs   dx,DWORD PTR ds:[rsi]
   14003b15f:	jb     0x14003b1c0
   14003b161:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14003b168:	ins    BYTE PTR es:[rdi],dx
   14003b169:	pop    rdi
   14003b16a:	ins    DWORD PTR es:[rdi],dx
   14003b16b:	gs je  0x14003b1d6
   14003b16e:	outs   dx,DWORD PTR ds:[rsi]
   14003b16f:	fs rex je 0x14003b1ec
   14003b173:	jo     0x14003b1da
   14003b175:	pop    rdi
   14003b176:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14003b17d:	rex.RB
   14003b17e:	rex.B
   14003b17f:	pop    r8
   14003b181:	pop    rax
   14003b182:	pop    rdx
   14003b183:	add    BYTE PTR [rcx+0x2],ch
   14003b186:	rex.RXB
   14003b187:	gs je  0x14003b1d7
   14003b18a:	outs   dx,DWORD PTR ds:[rsi]
   14003b18b:	fs jne 0x14003b1fa
   14003b18e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14003b198:	add    BYTE PTR [rax],al
   14003b19a:	push   rdx
   14003b19b:	add    ecx,DWORD PTR [rcx+0x6e]
   14003b19e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14003b1a6:	rex.XB jb 0x14003b212
   14003b1a9:	je     0x14003b214
   14003b1ab:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b1ae:	push   rbx
   14003b1af:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b1b4:	outs   dx,BYTE PTR ds:[rsi]
   14003b1b5:	rex.RB js 0x14003b1b8
   14003b1b8:	push   rsi
   14003b1b9:	add    al,BYTE PTR [rdi+0x65]
   14003b1bc:	je     0x14003b20a
   14003b1be:	(bad)  
   14003b1bf:	jae    0x14003b235
   14003b1c1:	rex.RB jb 0x14003b236
   14003b1c4:	outs   dx,DWORD PTR ds:[rsi]
   14003b1c5:	jb     0x14003b1c7
   14003b1c7:	add    bh,bh
   14003b1c9:	add    BYTE PTR [rbp+riz*2+0x63],al
   14003b1cd:	outs   dx,DWORD PTR ds:[rsi]
   14003b1ce:	fs gs push rax
   14003b1d1:	outs   dx,DWORD PTR ds:[rsi]
   14003b1d2:	imul   ebp,DWORD PTR [rsi+0x74],0x68007265
   14003b1d9:	add    al,BYTE PTR [rdi+0x65]
   14003b1dc:	je     0x14003b22b
   14003b1de:	outs   dx,DWORD PTR ds:[rsi]
   14003b1df:	fs jne 0x14003b24e
   14003b1e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14003b1ec:	add    BYTE PTR [rax],al
   14003b1ee:	(bad)  
   14003b1ef:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14003b1f3:	gs je  0x14003b25b
   14003b1f6:	rex.XB jb 0x14003b262
   14003b1f9:	je     0x14003b264
   14003b1fb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003b1fe:	push   rbx
   14003b1ff:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b204:	outs   dx,BYTE PTR ds:[rsi]
   14003b205:	add    BYTE PTR [rsi+rax*1],bl
   14003b208:	ins    BYTE PTR es:[rdi],dx
   14003b209:	jae    0x14003b27f
   14003b20b:	jb     0x14003b279
   14003b20d:	outs   dx,BYTE PTR gs:[rsi]
   14003b20f:	add    BYTE PTR [r8],al
   14003b212:	or     eax,0x74736c06
   14003b217:	jb     0x14003b27c
   14003b219:	(bad)  
   14003b21a:	je     0x14003b25d
   14003b21c:	add    BYTE PTR [rax],al
   14003b21e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b21f:	add    DWORD PTR [rsi+0x72],eax
   14003b222:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14003b22c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b22d:	add    al,BYTE PTR [rdi+0x65]
   14003b230:	je     0x14003b282
   14003b232:	jb     0x14003b2a3
   14003b234:	movsxd eax,DWORD PTR [rcx+0x64]
   14003b237:	fs jb  0x14003b29f
   14003b23a:	jae    0x14003b2af
   14003b23c:	add    BYTE PTR [rax],al
   14003b23e:	test   al,0x3
   14003b240:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003b242:	(bad)  
   14003b243:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   14003b24c:	add    BYTE PTR [rax],al
   14003b24e:	(bad)  
   14003b24f:	(bad)  
   14003b250:	ins    BYTE PTR es:[rdi],dx
   14003b251:	jae    0x14003b2c7
   14003b253:	jb     0x14003b2b8
   14003b255:	jo     0x14003b2d0
   14003b257:	add    BYTE PTR [r8],al
   14003b25a:	(bad)  
   14003b25b:	(bad)  
   14003b25c:	ins    BYTE PTR es:[rdi],dx
   14003b25d:	jae    0x14003b2d3
   14003b25f:	jb     0x14003b2c4
   14003b261:	(bad)  
   14003b262:	je     0x14003b2bb
   14003b264:	add    BYTE PTR [rax],al
   14003b266:	out    0x2,eax
   14003b268:	rex.RXB
   14003b269:	gs je  0x14003b2c0
   14003b26c:	gs ins DWORD PTR es:[rdi],dx
   14003b26e:	jo     0x14003b2b6
   14003b270:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x41656d61
   14003b278:	add    BYTE PTR [rax],al
   14003b27a:	jmp    0x1b468f981
   14003b27f:	push   rsp
   14003b280:	gs ins DWORD PTR es:[rdi],dx
   14003b282:	jo     0x14003b2d4
   14003b284:	(bad)  
   14003b285:	je     0x14003b2ef
   14003b287:	add    BYTE PTR [r8],al
   14003b28a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003b28b:	add    BYTE PTR [rbx+0x6f],al
   14003b28e:	jo     0x14003b309
   14003b290:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47020800
   14003b299:	gs je  0x14003b2df
   14003b29c:	jne    0x14003b310
   14003b29e:	jb     0x14003b305
   14003b2a0:	outs   dx,BYTE PTR ds:[rsi]
   14003b2a1:	je     0x14003b2e7
   14003b2a3:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14003b2aa:	jns    0x14003b2ed
   14003b2ac:	add    BYTE PTR [rax],al
   14003b2ae:	mov    edx,0x65724300
   14003b2b3:	(bad)  
   14003b2b4:	je     0x14003b31b
   14003b2b6:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47024200
   14003b2bf:	gs je  0x14003b308
   14003b2c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14003b2ca:	or     al,BYTE PTR [rip+0x46746553]        # 0x186781823
   14003b2d0:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14003b2d8:	gs jb  0x14003b2db
   14003b2db:	add    bh,ch
   14003b2dd:	add    eax,0x74697257
   14003b2e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x65520453
   14003b2ec:	(bad)  
   14003b2ed:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x43007f00
   14003b2f7:	ins    BYTE PTR es:[rdi],dx
   14003b2f8:	outs   dx,DWORD PTR ds:[rsi]
   14003b2f9:	jae    0x14003b360
   14003b2fb:	rex.W (bad) 
   14003b2fd:	outs   dx,BYTE PTR ds:[rsi]
   14003b2fe:	fs ins BYTE PTR es:[rdi],dx
   14003b300:	add    BYTE PTR gs:[rax],cl
   14003b303:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14003b307:	gs je  0x14003b36f
   14003b30a:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4701aa00
   14003b313:	gs je  0x14003b357
   14003b316:	rex.XB push r8
   14003b318:	add    BYTE PTR [rax],al
   14003b31a:	lea    eax,[rdx]
   14003b31c:	rex.RXB
   14003b31d:	gs je  0x14003b36f
   14003b320:	rex.RB
   14003b321:	rex.WRB
   14003b322:	rex.XB push r8
   14003b324:	add    BYTE PTR [rax],al
   14003b326:	fild   DWORD PTR [rip+0x65646957]        # 0x1a5681c83
   14003b32c:	rex.XB push 0x6f547261
   14003b332:	rex.WRB jne 0x14003b3a1
   14003b335:	je     0x14003b3a0
   14003b337:	rex.X jns 0x14003b3ae
   14003b33a:	add    BYTE PTR gs:[rdi],dh
   14003b33d:	add    al,BYTE PTR [rdi+0x65]
   14003b340:	je     0x14003b388
   14003b342:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14003b34a:	(bad)  
   14003b34b:	jne    0x14003b3c1
   14003b34d:	gs jae 0x14003b391
   14003b350:	add    BYTE PTR [rax],al
   14003b352:	lods   eax,DWORD PTR ds:[rsi]
   14003b353:	add    BYTE PTR [rbx+0x72],al
   14003b356:	gs (bad) 
   14003b358:	je     0x14003b3bf
   14003b35a:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14003b362:	jns    0x14003b3a5
   14003b364:	add    BYTE PTR [rax],al
   14003b366:	stos   DWORD PTR es:[rdi],eax
   14003b367:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14003b36b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14003b374:	add    BYTE PTR [rax],al
   14003b376:	test   eax,0x616f4c03
   14003b37b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14003b384:	js     0x14003b3c7
   14003b386:	add    BYTE PTR [rax],al
   14003b388:	pop    rdx
   14003b389:	add    DWORD PTR [rbp+0x78],eax
   14003b38c:	jo     0x14003b3ef
   14003b38e:	outs   dx,BYTE PTR ds:[rsi]
   14003b38f:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14003b392:	jbe    0x14003b3fd
   14003b394:	jb     0x14003b405
   14003b396:	outs   dx,BYTE PTR ds:[rsi]
   14003b397:	ins    DWORD PTR es:[rdi],dx
   14003b398:	outs   dx,BYTE PTR gs:[rsi]
   14003b39a:	je     0x14003b3ef
   14003b39c:	je     0x14003b410
   14003b39e:	imul   ebp,DWORD PTR [rsi+0x67],0x25004173
   14003b3a5:	add    DWORD PTR [rbp+0x6e],eax
   14003b3a8:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003b3ab:	gs push rax
   14003b3ad:	outs   dx,DWORD PTR ds:[rsi]
   14003b3ae:	imul   ebp,DWORD PTR [rsi+0x74],0x6a007265
   14003b3b5:	add    ecx,DWORD PTR [rcx+0x73]
   14003b3b8:	rex.R
   14003b3b9:	gs (bad) 
   14003b3bb:	jne    0x14003b424
   14003b3bd:	addr32 gs jb 0x14003b411
   14003b3c1:	jb     0x14003b428
   14003b3c3:	jae    0x14003b42a
   14003b3c5:	outs   dx,BYTE PTR ds:[rsi]
   14003b3c6:	je     0x14003b3c8
   14003b3c8:	jo     0x14003b3cd
   14003b3ca:	rex.WB jae 0x14003b41d
   14003b3cd:	jb     0x14003b43e
   14003b3cf:	movsxd esp,DWORD PTR [rbp+0x73]
   14003b3d2:	jae    0x14003b443
   14003b3d4:	jb     0x14003b41c
   14003b3d6:	gs (bad) 
   14003b3d8:	je     0x14003b44f
   14003b3da:	jb     0x14003b441
   14003b3dc:	push   rax
   14003b3dd:	jb     0x14003b444
   14003b3df:	jae    0x14003b446
   14003b3e1:	outs   dx,BYTE PTR ds:[rsi]
   14003b3e2:	je     0x14003b3e4
   14003b3e4:	xor    BYTE PTR [rcx+rdx*2],al
   14003b3e7:	jne    0x14003b44e
   14003b3e9:	jb     0x14003b464
   14003b3eb:	push   rax
   14003b3ec:	gs jb  0x14003b455
   14003b3ef:	outs   dx,DWORD PTR ds:[rsi]
   14003b3f0:	jb     0x14003b45f
   14003b3f2:	(bad)  
   14003b3f3:	outs   dx,BYTE PTR ds:[rsi]
   14003b3f4:	movsxd esp,DWORD PTR [rbp+0x43]
   14003b3f7:	outs   dx,DWORD PTR ds:[rsi]
   14003b3f8:	jne    0x14003b468
   14003b3fa:	je     0x14003b461
   14003b3fc:	jb     0x14003b3fe
   14003b3fe:	adc    BYTE PTR [rdx],al
   14003b400:	rex.RXB
   14003b401:	gs je  0x14003b447
   14003b404:	jne    0x14003b478
   14003b406:	jb     0x14003b46d
   14003b408:	outs   dx,BYTE PTR ds:[rsi]
   14003b409:	je     0x14003b45b
   14003b40b:	jb     0x14003b47c
   14003b40d:	movsxd esp,DWORD PTR [rbp+0x73]
   14003b410:	jae    0x14003b45b
   14003b412:	add    BYTE PTR fs:[rdx+rax*1],dl
   14003b416:	rex.RXB
   14003b417:	gs je  0x14003b45d
   14003b41a:	jne    0x14003b48e
   14003b41c:	jb     0x14003b483
   14003b41e:	outs   dx,BYTE PTR ds:[rsi]
   14003b41f:	je     0x14003b475
   14003b421:	push   0x64616572
   14003b426:	rex.WB
   14003b427:	add    BYTE PTR fs:[rax],al
   14003b42a:	fld    QWORD PTR [rdx]
   14003b42c:	rex.RXB
   14003b42d:	gs je  0x14003b483
   14003b430:	jns    0x14003b4a5
   14003b432:	je     0x14003b499
   14003b434:	ins    DWORD PTR es:[rdi],dx
   14003b435:	push   rsp
   14003b436:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14003b43d:	ins    BYTE PTR es:[rdi],dx
   14003b43e:	gs push rsp
   14003b440:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14003b447:	rex.WRX
   14003b448:	rex.RB
   14003b449:	xor    r14,QWORD PTR [rdx]
   14003b44c:	cs fs ins BYTE PTR es:[rdi],dx
   14003b44f:	ins    BYTE PTR es:[rdi],dx
   14003b450:	add    BYTE PTR [rax],al
   14003b452:	(bad)  
   14003b453:	add    esi,DWORD PTR [rdi+0x73]
   14003b456:	jo     0x14003b4ca
   14003b458:	imul   ebp,DWORD PTR [rsi+0x74],0xb5004166
   14003b45f:	add    BYTE PTR [rcx+rbp*2+0x73],al
   14003b463:	jo     0x14003b4c6
   14003b465:	je     0x14003b4ca
   14003b467:	push   0x7373654d
   14003b46c:	(bad)  
   14003b46d:	addr32 gs push rdi
   14003b470:	add    BYTE PTR [rax],al
   14003b472:	in     al,0x0
   14003b474:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003b476:	(bad)  
   14003b477:	(bad)  
   14003b478:	ins    BYTE PTR es:[rdi],dx
   14003b479:	gs push rdi
   14003b47b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14003b482:	rol    BYTE PTR [rdx],0x53
   14003b485:	outs   dx,BYTE PTR gs:[rsi]
   14003b487:	fs rex.WRB
   14003b489:	gs jae 0x14003b4ff
   14003b48c:	(bad)  
   14003b48d:	addr32 gs push rdi
   14003b490:	add    BYTE PTR [rax],al
   14003b492:	jo     0x14003b496
   14003b494:	push   rax
   14003b495:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14003b49b:	jae    0x14003b4fe
   14003b49d:	addr32 gs push rdi
   14003b4a0:	add    BYTE PTR [rax],al
   14003b4a2:	add    r10d,DWORD PTR [r10+r14*2+0x61]
   14003b4a7:	outs   dx,BYTE PTR ds:[rsi]
   14003b4a8:	jae    0x14003b516
   14003b4aa:	(bad)  
   14003b4ab:	je     0x14003b512
   14003b4ad:	rex.WRB
   14003b4ae:	gs jae 0x14003b524
   14003b4b1:	(bad)  
   14003b4b2:	add    BYTE PTR gs:[eax],al
   14003b4b6:	rex.WX add cl,BYTE PTR [rbp+0x65]
   14003b4ba:	jae    0x14003b52f
   14003b4bc:	(bad)  
   14003b4bd:	rex.X outs dx,DWORD PTR gs:[esi]
   14003b4c1:	js     0x14003b504
   14003b4c3:	add    al,cl
   14003b4c5:	add    DWORD PTR [rdi+0x65],eax
   14003b4c8:	je     0x14003b521
   14003b4ca:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14003b4d1:	outs   dx,BYTE PTR ds:[rsi]
   14003b4d2:	addr32 push rax
   14003b4d4:	je     0x14003b548
   14003b4d6:	push   rdi
   14003b4d7:	add    BYTE PTR [rbx],dh
   14003b4d9:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14003b4dd:	fs push rbx
   14003b4df:	je     0x14003b553
   14003b4e1:	imul   ebp,DWORD PTR [rsi+0x67],0x2750041
   14003b4e8:	push   rax
   14003b4e9:	outs   dx,DWORD PTR ds:[rsi]
   14003b4ea:	jae    0x14003b560
   14003b4ec:	push   rcx
   14003b4ed:	jne    0x14003b558
   14003b4ef:	je     0x14003b53e
   14003b4f1:	gs jae 0x14003b567
   14003b4f4:	(bad)  
   14003b4f5:	add    BYTE PTR gs:[edx],cl
   14003b4f9:	add    BYTE PTR [rcx+0x70],al
   14003b4fc:	jo     0x14003b563
   14003b4fe:	outs   dx,BYTE PTR ds:[rsi]
   14003b4ff:	fs rex.WRB
   14003b501:	outs   dx,BYTE PTR gs:[rsi]
   14003b503:	jne    0x14003b55c
   14003b505:	add    cl,cl
   14003b507:	add    dl,BYTE PTR [rbx+0x65]
   14003b50a:	je     0x14003b54f
   14003b50c:	ins    BYTE PTR es:[rdi],dx
   14003b50d:	(bad)  
   14003b50e:	jae    0x14003b583
   14003b510:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003b512:	outs   dx,BYTE PTR ds:[rsi]
   14003b513:	addr32 push rax
   14003b515:	je     0x14003b589
   14003b517:	push   rdi
   14003b518:	add    BYTE PTR [rax],al
   14003b51a:	(bad)  
   14003b51b:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14003b51f:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14003b524:	push   rdi
   14003b525:	add    BYTE PTR [rbx+0x70737703],al
   14003b52b:	jb     0x14003b596
   14003b52d:	outs   dx,BYTE PTR ds:[rsi]
   14003b52e:	je     0x14003b596
   14003b530:	push   rdi
   14003b531:	add    BYTE PTR [rbx+0x74654701],ch
   14003b537:	push   rbx
   14003b538:	jns    0x14003b5ad
   14003b53a:	je     0x14003b5a1
   14003b53c:	ins    DWORD PTR es:[rdi],dx
   14003b53d:	rex.WRB
   14003b53e:	outs   dx,BYTE PTR gs:[rsi]
   14003b540:	jne    0x14003b542
   14003b542:	push   rbp
   14003b543:	push   rbx
   14003b544:	rex.RB push r10
   14003b546:	xor    esi,DWORD PTR [rdx]
   14003b548:	cs fs ins BYTE PTR es:[rdi],dx
   14003b54b:	ins    BYTE PTR es:[rdi],dx
   14003b54c:	add    BYTE PTR [rax],al
   14003b54e:	test   DWORD PTR [rdx],eax
   14003b550:	push   rdx
   14003b551:	gs addr32 rex.WRXB jo 0x14003b5bb
   14003b556:	outs   dx,BYTE PTR ds:[rsi]
   14003b557:	rex.WXB
   14003b558:	gs jns 0x14003b5a0
   14003b55b:	js     0x14003b5b4
   14003b55d:	add    BYTE PTR [rdx+rax*1+0x52],dl
   14003b561:	gs rex.XB ins BYTE PTR es:[edi],dx
   14003b565:	outs   dx,DWORD PTR ds:[rsi]
   14003b566:	jae    0x14003b5cd
   14003b568:	rex.WXB
   14003b569:	gs jns 0x14003b56c
   14003b56c:	movabs ds:0x5674655367655202,al
   14003b575:	(bad)  
   14003b576:	ins    BYTE PTR es:[rdi],dx
   14003b577:	jne    0x14003b5de
   14003b579:	rex.RB js 0x14003b5d3
   14003b57c:	add    BYTE PTR [rax],al
   14003b57e:	movabs eax,ds:0x5674655367655202
   14003b587:	(bad)  
   14003b588:	ins    BYTE PTR es:[rdi],dx
   14003b589:	jne    0x14003b5f0
   14003b58b:	rex.RB js 0x14003b5cf
   14003b58e:	add    BYTE PTR [rax],al
   14003b590:	xchg   ecx,eax
   14003b591:	add    dl,BYTE PTR [rdx+0x65]
   14003b594:	addr32 push rcx
   14003b596:	jne    0x14003b5fd
   14003b598:	jb     0x14003b613
   14003b59a:	push   rsi
   14003b59b:	(bad)  
   14003b59c:	ins    BYTE PTR es:[rdi],dx
   14003b59d:	jne    0x14003b604
   14003b59f:	rex.RB js 0x14003b5e3
   14003b5a2:	add    BYTE PTR [rax],al
   14003b5a4:	(bad)  
   14003b5a5:	add    dl,BYTE PTR [rdx+0x65]
   14003b5a8:	addr32 rex.R
   14003b5aa:	gs ins BYTE PTR es:[rdi],dx
   14003b5ac:	gs je  0x14003b614
   14003b5af:	rex.WXB
   14003b5b0:	gs jns 0x14003b5f4
   14003b5b3:	add    BYTE PTR [rdx+rax*1+0x52],bl
   14003b5b7:	gs addr32 rex.XB jb 0x14003b621
   14003b5bc:	(bad)  
   14003b5bd:	je     0x14003b624
   14003b5bf:	rex.WXB
   14003b5c0:	gs jns 0x14003b608
   14003b5c3:	js     0x14003b606
   14003b5c5:	add    BYTE PTR [rdx+rax*1+0x4f676552],al
   14003b5cc:	jo     0x14003b633
   14003b5ce:	outs   dx,BYTE PTR ds:[rsi]
   14003b5cf:	rex.WXB
   14003b5d0:	gs jns 0x14003b618
   14003b5d3:	js     0x14003b616
   14003b5d5:	add    BYTE PTR [rcx+0x44],al
   14003b5d8:	push   rsi
   14003b5d9:	push   r8
   14003b5db:	xor    rsi,QWORD PTR [r10]
   14003b5de:	cs fs ins BYTE PTR es:[rdi],dx
   14003b5e1:	ins    BYTE PTR es:[rdi],dx
   14003b5e2:	add    BYTE PTR [rax],al
   14003b5e4:	(bad)
   14003b5e7:	pop    rdi
   14003b5e8:	push   rdi
   14003b5e9:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14003b5f0:	pop    rdi
   14003b5f1:	ins    DWORD PTR es:[rdi],dx
   14003b5f2:	(bad)  
   14003b5f3:	jo     0x14003b635
   14003b5f5:	jae    0x14003b66b
   14003b5f7:	fs rex
   14003b5f9:	rex pop rcx
   14003b5fb:	push   r8
   14003b5fd:	rex.RB
   14003b5fe:	rex.X
   14003b5ff:	rex.R
   14003b600:	rex.W
   14003b601:	rex pop rdx
   14003b603:	add    BYTE PTR [rax+0x535f3f02],dh
   14003b609:	jns    0x14003b67e
   14003b60b:	gs jb  0x14003b680
   14003b60e:	outs   dx,DWORD PTR ds:[rsi]
   14003b60f:	jb     0x14003b670
   14003b611:	ins    DWORD PTR es:[rdi],dx
   14003b612:	(bad)  
   14003b613:	jo     0x14003b655
   14003b615:	jae    0x14003b68b
   14003b617:	fs rex
   14003b619:	rex pop rcx
   14003b61b:	push   r8
   14003b61d:	rex.RB
   14003b61e:	rex.X
   14003b61f:	rex.R
   14003b620:	rex.W
   14003b621:	rex pop rdx
   14003b623:	add    cl,cl
   14003b625:	add    bh,BYTE PTR [rdi]
   14003b627:	pop    rdi
   14003b628:	pop    rax
   14003b629:	(bad)
   14003b62e:	ins    BYTE PTR es:[rdi],dx
   14003b62f:	ins    BYTE PTR es:[rdi],dx
   14003b630:	outs   dx,DWORD PTR ds:[rsi]
   14003b631:	movsxd eax,DWORD PTR [rax+0x73]
   14003b634:	je     0x14003b69a
   14003b636:	rex
   14003b637:	rex pop rcx
   14003b639:	pop    r8
   14003b63b:	pop    rax
   14003b63c:	pop    rdx
   14003b63d:	add    ch,cl
   14003b63f:	add    bh,BYTE PTR [rdi]
   14003b641:	pop    rdi
   14003b642:	pop    rax
   14003b643:	outs   dx,DWORD PTR ds:[rsi]
   14003b644:	jne    0x14003b6ba
   14003b646:	pop    rdi
   14003b647:	outs   dx,DWORD PTR ds:[rsi]
   14003b648:	pop    di
   14003b64a:	jb     0x14003b6ad
   14003b64c:	outs   dx,BYTE PTR ds:[rsi]
   14003b64d:	addr32 gs rex jae 0x14003b6c6
   14003b652:	fs rex
   14003b654:	rex pop rcx
   14003b656:	pop    r8
   14003b658:	push   rax
   14003b659:	rex.RB
   14003b65a:	rex.X
   14003b65b:	rex.R
   14003b65c:	rex pop rdx
   14003b65e:	add    BYTE PTR [rax],al
   14003b660:	int3   
   14003b661:	add    bh,BYTE PTR [rdi]
   14003b663:	pop    rdi
   14003b664:	pop    rax
   14003b665:	ins    BYTE PTR es:[rdi],dx
   14003b666:	outs   dx,BYTE PTR gs:[rsi]
   14003b668:	addr32 je 0x14003b6d3
   14003b66b:	pop    rdi
   14003b66c:	gs jb  0x14003b6e1
   14003b66f:	outs   dx,DWORD PTR ds:[rsi]
   14003b670:	jb     0x14003b6b2
   14003b672:	jae    0x14003b6e8
   14003b674:	fs rex
   14003b676:	rex pop rcx
   14003b678:	pop    r8
   14003b67a:	push   rax
   14003b67b:	rex.RB
   14003b67c:	rex.X
   14003b67d:	rex.R
   14003b67e:	rex pop rdx
   14003b680:	add    BYTE PTR [rax],al
   14003b682:	rex.WRB push r11
   14003b684:	push   rsi
   14003b685:	rex.XB push r8
   14003b687:	xor    DWORD PTR [rdx],esi
   14003b689:	xor    BYTE PTR [rsi],ch
   14003b68b:	fs ins BYTE PTR es:[rdi],dx
   14003b68d:	ins    BYTE PTR es:[rdi],dx
   14003b68e:	add    BYTE PTR [rax],al
   14003b690:	std    
   14003b691:	add    ecx,DWORD PTR [rdi+0x75]
   14003b694:	je     0x14003b706
   14003b696:	jne    0x14003b70c
   14003b698:	rex.R
   14003b699:	gs (bad) 
   14003b69b:	jne    0x14003b704
   14003b69d:	push   rbx
   14003b69e:	je     0x14003b712
   14003b6a0:	imul   ebp,DWORD PTR [rsi+0x67],0x45000057
   14003b6a7:	add    DWORD PTR [rdi+0x43],ebx
   14003b6aa:	js     0x14003b724
   14003b6ac:	push   rsp
   14003b6ad:	push   0x45776f72
   14003b6b2:	js     0x14003b717
   14003b6b4:	gs jo  0x14003b72b
   14003b6b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14003b6be:	pop    rdi
   14003b6bf:	pop    rdi
   14003b6c0:	rex.XB js 0x14003b73b
   14003b6c3:	rex.RX jb 0x14003b727
   14003b6c6:	ins    DWORD PTR es:[rdi],dx
   14003b6c7:	gs rex.W (bad) 
   14003b6ca:	outs   dx,BYTE PTR ds:[rsi]
   14003b6cb:	fs ins BYTE PTR es:[rdi],dx
   14003b6cd:	gs jb  0x14003b703
   14003b6d0:	add    BYTE PTR [rax],al
   14003b6d2:	mov    ch,0x6
   14003b6d4:	ins    DWORD PTR es:[rdi],dx
   14003b6d5:	gs ins DWORD PTR es:[rdi],dx
   14003b6d7:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

000000014003c000 <.data>:
   14003c000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14003c006:	add    BYTE PTR [rax],al
   14003c008:	int    0x5d
   14003c00a:	and    dl,dl
   14003c00c:	data16 (bad) 
   14003c00e:	(bad)  
   14003c00f:	inc    DWORD PTR [rcx]
   14003c011:	add    BYTE PTR [rax],al
   14003c013:	add    dh,bh
   14003c015:	(bad)  
   14003c016:	(bad)  
   14003c017:	(bad)  
   14003c018:	(bad)  
   14003c019:	(bad)  
   14003c01a:	(bad)  
   14003c01b:	inc    DWORD PTR [rax]
   14003c01d:	add    BYTE PTR [rax],al
   14003c01f:	add    BYTE PTR [rip+0xa00],cl        # 0x14003ca25
   14003c025:	add    BYTE PTR [rax],al
   14003c027:	add    BYTE PTR [rax],ah
   14003c029:	add    BYTE PTR [rax],al
   14003c02b:	add    BYTE PTR [rax],ah
   14003c02d:	add    BYTE PTR [rax],al
   14003c02f:	add    BYTE PTR [rip+0xa00],cl        # 0x14003ca35
   14003c035:	add    BYTE PTR [rax],al
   14003c037:	add    BYTE PTR [rip+0xa00],cl        # 0x14003ca3d
   14003c03d:	add    BYTE PTR [rax],al
   14003c03f:	add    BYTE PTR [rax],ah
   14003c041:	add    BYTE PTR [rax],al
   14003c043:	add    BYTE PTR [rbp+0x53],cl
   14003c046:	add    BYTE PTR [rax],al
   14003c048:	add    BYTE PTR [rip+0x5e5e5d5d],bh        # 0x19e621dab
   14003c04e:	pop    rsi
   14003c04f:	pop    rsi
   14003c050:	pop    rdi
   14003c051:	pop    rdi
   14003c052:	(bad)  
   14003c053:	(bad)  
   14003c054:	(bad)  
   14003c055:	(bad)  
   14003c056:	(bad)  
   14003c058:	movsxd esp,DWORD PTR [rbx+0x64]
   14003c05b:	fs gs gs data16 addr32 addr32 pushw 0x6968
   14003c065:	imul   ebp,DWORD PTR [rdx+0x6a],0x6c6c6b6b
   14003c06c:	ins    DWORD PTR es:[rdi],dx
   14003c06d:	ins    DWORD PTR es:[rdi],dx
   14003c06e:	outs   dx,BYTE PTR ds:[rsi]
   14003c06f:	outs   dx,BYTE PTR ds:[rsi]
   14003c070:	outs   dx,BYTE PTR ds:[rsi]
   14003c071:	outs   dx,BYTE PTR ds:[rsi]
   14003c072:	outs   dx,DWORD PTR ds:[rsi]
   14003c073:	outs   dx,DWORD PTR ds:[rsi]
   14003c074:	jo     0x14003c0e6
   14003c076:	jno    0x14003c0e9
   14003c078:	jb     0x14003c0ec
   14003c07a:	jae    0x14003c0ef
   14003c07c:	je     0x14003c0f2
   14003c07e:	pop    rbp
   14003c07f:	(bad)  
   14003c080:	movsxd esp,DWORD PTR [rbp+0x65]
   14003c083:	imul   esi,DWORD PTR [rax+0x70],0x74
   14003c087:	add    BYTE PTR [rip+0xa00],cl        # 0x14003ca8d
   14003c08d:	add    BYTE PTR [rax],al
   14003c08f:	add    BYTE PTR [rax],al
   14003c091:	xchg   esi,eax
   14003c092:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c093:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c094:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c095:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c096:	test   al,0xa8
   14003c098:	test   eax,0xaeababa9
   14003c09d:	scas   al,BYTE PTR es:[rdi]
   14003c09e:	scas   al,BYTE PTR es:[rdi]
   14003c09f:	scas   al,BYTE PTR es:[rdi]
   14003c0a0:	mov    al,0xb0
   14003c0a2:	mov    cl,0xb1
   14003c0a4:	mov    bl,0xb3
   14003c0a6:	mov    dh,0xb6
   14003c0a8:	mov    eax,0xbbb9b9b8
   14003c0ad:	mov    ebx,0xbebebcbc
   14003c0b2:	mov    edi,0xc1c0c0bf
   14003c0b7:	rol    edx,0xc2
   14003c0ba:	(bad)
   14003c0bd:	(bad)  
   14003c0be:	enter  0xc9c8,0xc9
   14003c0c2:	retf   0xccca
   14003c0c5:	int3   
   14003c0c6:	int    0xcd
   14003c0c8:	(bad)  
   14003c0c9:	(bad)  
   14003c0ca:	iret   
   14003c0cb:	iret   
   14003c0cc:	rcl    al,1
   14003c0ce:	rcl    dl,cl
   14003c0d0:	rcl    ebx,cl
   14003c0d2:	(bad)  
   14003c0d3:	(bad)  
   14003c0d4:	stos   BYTE PTR es:[rdi],al
   14003c0d5:	stos   BYTE PTR es:[rdi],al
   14003c0d6:	lods   al,BYTE PTR ds:[rsi]
   14003c0d7:	lods   al,BYTE PTR ds:[rsi]
   14003c0d8:	lods   eax,DWORD PTR ds:[rsi]
   14003c0d9:	lods   eax,DWORD PTR ds:[rsi]
   14003c0da:	scas   eax,DWORD PTR es:[rdi]
   14003c0db:	scas   eax,DWORD PTR es:[rdi]
   14003c0dc:	mov    dl,0xb2
   14003c0de:	mov    ah,0xb4
   14003c0e0:	mov    ch,0xb5
   14003c0e2:	mov    bh,0xb7
   14003c0e4:	mov    edx,0xc3bdbdba
   14003c0e9:	ret    
   14003c0ea:	(bad)  
   14003c0eb:	(bad)  
   14003c0ec:	mov    dh,0xcb
   14003c0ef:	retf   
   14003c0f0:	rcl    ecx,1
   14003c0f2:	(bad)  
   14003c0f3:	(bad)  
   14003c0f4:	(bad)  
   14003c0f5:	(bad)  
   14003c0f6:	(bad)  
   14003c0f7:	(bad)  
   14003c0f8:	(bad)  
   14003c0f9:	(bad)  
   14003c0fa:	(bad)  
   14003c0fb:	(bad)  
   14003c0fc:	(bad)  
   14003c0fd:	(bad)  
   14003c0fe:	(bad)  
   14003c0ff:	jmp    QWORD PTR [rsi-0x4c51515a]
   14003c105:	mov    bl,0xbe
   14003c107:	mov    esi,0xcfcfc5c5
   14003c10c:	rcl    dl,cl
   14003c10e:	rcl    ebx,cl
   14003c110:	(bad)  
   14003c111:	(bad)  
   14003c112:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c113:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c114:	scas   al,BYTE PTR es:[rdi]
   14003c115:	scas   al,BYTE PTR es:[rdi]
   14003c116:	scas   al,BYTE PTR es:[rdi]
   14003c117:	scas   al,BYTE PTR es:[rdi]
   14003c118:	mov    bl,0xb3
   14003c11a:	mov    esi,0xcfc5c5be
   14003c11f:	iret   
   14003c120:	rcl    dl,cl
   14003c122:	rcl    ebx,cl
   14003c124:	(bad)  
   14003c125:	(bad)  
   14003c126:	(bad)  
   14003c127:	dec    DWORD PTR [rbx]
   14003c129:	or     DWORD PTR [rsi],esi
   14003c12b:	(bad)  
   14003c12c:	cmp    BYTE PTR [rcx],bh
   14003c12e:	(bad)  
   14003c12f:	(bad)  
   14003c130:	(bad)  
   14003c131:	push   QWORD PTR [rip+0x0]        # 0x14003c137
   14003c137:	add    BYTE PTR [rbp+0x4e],al
   14003c13a:	push   rbp
   14003c13b:	push   rbx
   14003c13c:	push   rbp
   14003c13d:	rex.WXB
   14003c13e:	rex.WRX
   14003c13f:	rex.WR push rbx
   14003c141:	push   rsp
   14003c142:	push   rax
   14003c143:	push   rdx
   14003c144:	and    BYTE PTR [rax],al
   14003c146:	add    BYTE PTR [rax],al
   14003c148:	and    BYTE PTR [rax],al
   14003c14a:	add    BYTE PTR [rax],al
   14003c14c:	add    BYTE PTR [rax],al
   14003c14e:	add    BYTE PTR [rax],al
   14003c150:	add    dl,ch
   14003c152:	push   rdx
   14003c153:	pop    rdi
   14003c154:	push   rdi
   14003c155:	push   rsp
   14003c156:	pop    rbx
   14003c157:	pop    rcx
   14003c158:	push   rcx
   14003c159:	push   rsi
   14003c15a:	pop    rdi
   14003c15b:	pop    rdi
   14003c15c:	pop    rdi
   14003c15d:	pop    rdi
   14003c15e:	pop    rdi
   14003c15f:	pop    rdi
   14003c160:	pop    rax
   14003c161:	pop    rsp
   14003c162:	pop    rdi
   14003c163:	pop    rdx
   14003c164:	pop    rbp
   14003c165:	push   rbp
   14003c166:	pop    rsi
   14003c167:	pop    rdi
   14003c168:	push   rbx
   14003c169:	cdq    
   14003c16a:	mov    ecx,DWORD PTR [rbp-0x7f7f7f80]
   14003c170:	add    BYTE PTR [rax-0x7f7f7f80],0x81
   14003c177:	add    DWORD PTR [rbx-0x7979797d],0x86868686
   14003c181:	xchg   BYTE PTR [rbx-0x74747475],cl
   14003c187:	mov    ecx,DWORD PTR [rbx-0x6b6c6c75]
   14003c18d:	xchg   esp,eax
   14003c18e:	xchg   esp,eax
   14003c18f:	xchg   esp,eax
   14003c190:	xchg   esp,eax
   14003c191:	xchg   esp,eax
   14003c192:	xchg   esp,eax
   14003c193:	xchg   esp,eax
   14003c194:	fwait
   14003c195:	fwait
   14003c196:	fwait
   14003c197:	fwait
   14003c198:	fwait
   14003c199:	fwait
   14003c19a:	fwait
   14003c19b:	fwait
   14003c19c:	lahf   
   14003c19d:	lahf   
   14003c19e:	add    BYTE PTR [rax-0x6b6b7a7b],0x94
   14003c1a5:	xchg   esp,eax
   14003c1a6:	lahf   
   14003c1a7:	lahf   
   14003c1a8:	test   DWORD PTR [rbp-0x7f7f5e5f],eax
   14003c1ae:	add    BYTE PTR [rax-0x7c7c7f80],0x83
   14003c1b5:	add    DWORD PTR [rbx-0x7a7c7c7d],0xffffff85
   14003c1bc:	xchg   BYTE PTR [rsi-0x7979797a],al
   14003c1c2:	xchg   BYTE PTR [rsi-0x77777778],al
   14003c1c8:	mov    BYTE PTR [rax-0x77777778],cl
   14003c1ce:	mov    BYTE PTR [rax-0x76767677],cl
   14003c1d4:	mov    ecx,DWORD PTR [rbx-0x74747475]
   14003c1da:	mov    ecx,DWORD PTR [rbx-0x72727374]
   14003c1e0:	mov    cs,WORD PTR [rsi-0x70707071]
   14003c1e6:	(bad)  
   14003c1e7:	(bad)  
   14003c1e8:	(bad)  
   14003c1e9:	(bad)  
   14003c1ea:	(bad)  
   14003c1eb:	(bad)  
   14003c1ec:	xchg   edx,eax
   14003c1ed:	xchg   edx,eax
   14003c1ee:	xchg   edx,eax
   14003c1ef:	xchg   edx,eax
   14003c1f0:	xchg   edx,eax
   14003c1f1:	xchg   edx,eax
   14003c1f2:	xchg   edx,eax
   14003c1f3:	xchg   edx,eax
   14003c1f4:	xchg   esp,eax
   14003c1f5:	xchg   esp,eax
   14003c1f6:	xchg   esp,eax
   14003c1f7:	xchg   esp,eax
   14003c1f8:	xchg   esp,eax
   14003c1f9:	xchg   esp,eax
   14003c1fa:	cwde   
   14003c1fb:	cwde   
   14003c1fc:	cwde   
   14003c1fd:	cwde   
   14003c1fe:	cwde   
   14003c1ff:	cwde   
   14003c200:	cdq    
   14003c201:	cdq    
   14003c202:	cdq    
   14003c203:	cdq    
   14003c204:	cdq    
   14003c205:	cdq    
   14003c206:	cdq    
   14003c207:	cdq    
   14003c208:	(bad)  
   14003c209:	(bad)  
   14003c20a:	(bad)  
   14003c20b:	(bad)  
   14003c20c:	(bad)  
   14003c20d:	(bad)  
   14003c20e:	fwait
   14003c20f:	fwait
   14003c210:	fwait
   14003c211:	fwait
   14003c212:	fwait
   14003c213:	fwait
   14003c214:	fwait
   14003c215:	fwait
   14003c216:	fwait
   14003c217:	fwait
   14003c218:	fwait
   14003c219:	fwait
   14003c21a:	popf   
   14003c21b:	popf   
   14003c21c:	lahf   
   14003c21d:	lahf   
   14003c21e:	movabs al,ds:0x859292a0a0a0a0a0
   14003c227:	test   DWORD PTR [rdi-0x676d6d71],ecx
   14003c22d:	cwde   
   14003c22e:	cdq    
   14003c22f:	cdq    
   14003c230:	(bad)  
   14003c231:	(bad)  
   14003c232:	lahf   
   14003c233:	lahf   
   14003c234:	lahf   
   14003c235:	lahf   
   14003c236:	test   DWORD PTR [rbp-0x64646b6c],eax
   14003c23c:	add    BYTE PTR [rax],al
   14003c23e:	add    BYTE PTR [rax],al
   14003c240:	and    BYTE PTR [rdi+0x20],bl
   14003c243:	and    eax,0x50345129
   14003c248:	push   rdx
   14003c249:	sub    ch,BYTE PTR [rsi]
   14003c24b:	(bad)  
   14003c24c:	cmp    al,0x3a
   14003c24e:	and    bh,BYTE PTR [rbx]
   14003c250:	and    DWORD PTR [rip+0x79787776],edi        # 0x1b97c39cc
   14003c256:	jp     0x14003c2d3
   14003c258:	jl     0x14003c2d7
   14003c25a:	jle    0x14003c2db
   14003c25c:	and    esp,DWORD PTR [rdx+rax*2]
   14003c25f:	rex.R
   14003c260:	rex.RX (bad) 
   14003c262:	push   rbx
   14003c263:	add    BYTE PTR [rdx-0x78797a7d],0x88
   14003c26a:	mov    DWORD PTR [rbx-0x6e707173],ecx
   14003c270:	xchg   edx,eax
   14003c271:	xchg   esp,eax
   14003c272:	xchg   esi,eax
   14003c273:	xchg   edi,eax
   14003c274:	cwde   
   14003c275:	cdq    
   14003c276:	(bad)  
   14003c277:	fwait
   14003c278:	pushf  
   14003c279:	popf   
   14003c27a:	sahf   
   14003c27b:	lahf   
   14003c27c:	movabs al,ds:0x82802b553ea554a4
   14003c285:	add    DWORD PTR [rbp-0x7677787a],0xffffff8b
   14003c28c:	lea    ecx,[rsi-0x6b6d6e71]
   14003c292:	xchg   esi,eax
   14003c293:	xchg   edi,eax
   14003c294:	cwde   
   14003c295:	cdq    
   14003c296:	(bad)  
   14003c297:	fwait
   14003c298:	pushf  
   14003c299:	popf   
   14003c29a:	sahf   
   14003c29b:	lahf   
   14003c29c:	movabs al,ds:0xd00000057335632
   14003c2a5:	add    BYTE PTR [rdx],cl
	...
   14003c2b7:	add    BYTE PTR [rax-0x3e],al
   14003c2ba:	add    eax,DWORD PTR [rax+0x1]
   14003c2bd:	add    BYTE PTR [rax],al
   14003c2bf:	add    BYTE PTR [rcx],al
   14003c2c1:	add    BYTE PTR [rax],al
   14003c2c3:	add    BYTE PTR [rax],al
   14003c2c5:	add    BYTE PTR [rax],al
   14003c2c7:	add    BYTE PTR [rax-0x3f],dl
   14003c2ca:	add    eax,DWORD PTR [rax+0x1]
   14003c2cd:	add    BYTE PTR [rax],al
   14003c2cf:	add    BYTE PTR [rax+rax*1],al
   14003c2d2:	add    BYTE PTR [rax],al
   14003c2d4:	add    BYTE PTR [rax],al
   14003c2d6:	add    BYTE PTR [rax],al
   14003c2d8:	sub    cl,al
   14003c2da:	add    eax,DWORD PTR [rax+0x1]
   14003c2dd:	add    BYTE PTR [rax],al
   14003c2df:	add    BYTE PTR [rax],cl
   14003c2e1:	add    BYTE PTR [rax],al
   14003c2e3:	add    BYTE PTR [rax],al
   14003c2e5:	add    BYTE PTR [rax],al
   14003c2e7:	add    BYTE PTR [rax-0x40],cl
   14003c2ea:	add    eax,DWORD PTR [rax+0x1]
   14003c2ed:	add    BYTE PTR [rax],al
   14003c2ef:	add    BYTE PTR [rdx],cl
   14003c2f1:	add    BYTE PTR [rax],al
   14003c2f3:	add    BYTE PTR [rax],al
   14003c2f5:	add    BYTE PTR [rax],al
   14003c2f7:	add    BYTE PTR [rax+0x14003c0],dl
   14003c2fd:	add    BYTE PTR [rax],al
   14003c2ff:	add    bh,bh
	...
   14003c30d:	add    BYTE PTR [rax],al
   14003c30f:	add    bh,bh
   14003c311:	push   rdi
   14003c312:	push   rax
   14003c313:	rex.XB adc BYTE PTR [r8],al
   14003c316:	add    BYTE PTR [rax],al
   14003c318:	add    DWORD PTR [rbx],ecx
   14003c31a:	add    eax,DWORD PTR [rax]
   14003c31c:	add    BYTE PTR [rax],al
   14003c31e:	add    BYTE PTR [rax],al
   14003c320:	or     eax,0xa00
   14003c325:	add    BYTE PTR [rax],al
   14003c327:	add    BYTE PTR [rax],ah
   14003c329:	add    BYTE PTR [rax],al
   14003c32b:	add    BYTE PTR [rax],al
   14003c32d:	add    bh,bh
   14003c32f:	jmp    QWORD PTR [rsi+0x0]
   14003c332:	add    BYTE PTR [rax],al
   14003c334:	jo     0x14003c336
   14003c336:	push   0xffffffffff000000
   14003c33b:	inc    DWORD PTR [rax]
   14003c33d:	add    bh,bh
   14003c33f:	jmp    QWORD PTR [rbx+0x0]
   14003c342:	push   0x73000000
   14003c347:	add    BYTE PTR [rbx+0x0],ah
   14003c34a:	push   0x73000000
   14003c34f:	add    BYTE PTR [rax+0x0],ch
   14003c352:	add    BYTE PTR [rax],al
   14003c354:	(bad)  
   14003c355:	inc    DWORD PTR [rax]
   14003c357:	add    BYTE PTR [rbx+0x0],ah
   14003c35a:	add    BYTE PTR gs:[rax],al
   14003c35d:	add    BYTE PTR [rbx+0x0],ah
   14003c360:	imul   eax,DWORD PTR [rax],0x630000
   14003c366:	jns    0x14003c368
   14003c368:	add    BYTE PTR [rax],al
   14003c36a:	jo     0x14003c36c
   14003c36c:	jae    0x14003c36e
   14003c36e:	add    BYTE PTR [rax],al
   14003c370:	jae    0x14003c372
   14003c372:	add    BYTE PTR [rax],al
   14003c374:	jae    0x14003c376
   14003c376:	movsxd eax,DWORD PTR [rax]
   14003c378:	add    BYTE PTR gs:[rax],al
   14003c37b:	add    BYTE PTR [rbx+0x0],dh
   14003c37e:	movsxd eax,DWORD PTR [rax]
   14003c380:	imul   eax,DWORD PTR [rax],0x730000
   14003c386:	movsxd eax,DWORD PTR [rax]
   14003c388:	jns    0x14003c38a
   14003c38a:	add    BYTE PTR [rax],al
   14003c38c:	jae    0x14003c38e
   14003c38e:	ja     0x14003c390
   14003c390:	add    BYTE PTR [rax],al
   14003c392:	(bad)  
   14003c393:	dec    DWORD PTR [rip+0x6000a00]        # 0x14603cd99
   14003c399:	add    BYTE PTR [rdx],ah
   14003c39b:	add    BYTE PTR [rax+rax*1],cl
   14003c39e:	or     al,0x0
   14003c3a0:	or     al,0x0
   14003c3a2:	(bad)  
   14003c3a3:	add    BYTE PTR [rax],dl
   14003c3a5:	add    BYTE PTR [rax],ah
   14003c3a7:	add    BYTE PTR [rax+rax*1],cl
   14003c3aa:	(bad)  
   14003c3ab:	add    BYTE PTR [rsi],bl
   14003c3ad:	add    BYTE PTR [rsi],al
   14003c3af:	add    BYTE PTR [rdx],dl
   14003c3b1:	add    BYTE PTR [rax+rax*1],bh
   14003c3b4:	(bad)  
   14003c3b5:	add    BYTE PTR [rax],bl
   14003c3b7:	add    BYTE PTR [rax+rax*1],al
   14003c3ba:	(bad)  
   14003c3bb:	add    BYTE PTR [rsi],al
   14003c3bd:	add    BYTE PTR [rax+rax*1],cl
   14003c3c0:	(bad)  
   14003c3c1:	add    BYTE PTR [rax],ch
   14003c3c3:	add    BYTE PTR [rax],al
   14003c3c5:	add    BYTE PTR [rax],al
   14003c3c7:	add    BYTE PTR [rbp+0x0],ch
   14003c3ca:	add    BYTE PTR [rax],al
   14003c3cc:	(bad)  
   14003c3cd:	inc    DWORD PTR [rax]
   14003c3cf:	add    BYTE PTR [rbx+0x0],dh
   14003c3d2:	push   0x7f000000
   14003c3d7:	add    BYTE PTR [rbx+0x0],ah
   14003c3da:	push   0x63000000
   14003c3df:	add    BYTE PTR [rbx+0x0],ah
   14003c3e2:	imul   eax,DWORD PTR [rax],0x0
   14003c3e5:	add    BYTE PTR [rbx+0x0],ch
   14003c3e8:	movsxd eax,DWORD PTR [rax]
   14003c3ea:	jno    0x14003c3ec
   14003c3ec:	add    BYTE PTR [rax],al
   14003c3ee:	imul   eax,DWORD PTR [rax],0x6b
   14003c3f1:	add    BYTE PTR [rbx+0x0],dh
   14003c3f4:	add    BYTE PTR [rax],al
   14003c3f6:	imul   eax,DWORD PTR [rax],0x6b
   14003c3f9:	add    BYTE PTR [rdi+0x0],dh
   14003c3fc:	add    BYTE PTR [rax],al
   14003c3fe:	imul   eax,DWORD PTR [rax],0x74
   14003c401:	add    BYTE PTR [rbx+0x0],dh
   14003c404:	add    BYTE PTR [rax],al
   14003c406:	add    BYTE PTR [rax],0x74
   14003c409:	add    BYTE PTR [rdx+0x0],bh
   14003c40c:	add    BYTE PTR [rax],al
   14003c40e:	jp     0x14003c410
   14003c410:	add    BYTE PTR [edx+0x0],bh
   14003c414:	add    BYTE PTR [rax],al
   14003c416:	jp     0x14003c418
   14003c418:	jo     0x14003c41a
   14003c41a:	push   0x66000000
   14003c41f:	add    BYTE PTR [rax+0x0],bh
   14003c422:	movsxd eax,DWORD PTR [rax]
   14003c424:	add    BYTE PTR [rax],al
   14003c426:	imul   eax,DWORD PTR [rax],0xffffffff
   14003c429:	inc    DWORD PTR [rax]
   14003c42b:	add    BYTE PTR [rip+0x7000000a],cl        # 0x1b003c43b
   14003c431:	add    BYTE PTR [rax],al
   14003c433:	add    BYTE PTR [rax+0x0],dh
   14003c436:	jo     0x14003c438
   14003c438:	add    BYTE PTR [rax],al
   14003c43a:	(bad)  
   14003c43b:	inc    DWORD PTR [rax]
   14003c43d:	add    BYTE PTR [rax],al
   14003c43f:	add    BYTE PTR [rdi+0x0],ah
   14003c442:	outs   dx,BYTE PTR ds:[rsi]
   14003c443:	add    BYTE PTR [rax],al
   14003c445:	add    BYTE PTR [rax+0x0],ch
   14003c448:	outs   dx,BYTE PTR ds:[rsi]
   14003c449:	add    BYTE PTR [rax],al
   14003c44b:	add    BYTE PTR [rax+0x0],ch
   14003c44e:	outs   dx,BYTE PTR ds:[rsi]
   14003c44f:	add    BYTE PTR [rsi+0x0],ch
   14003c452:	add    BYTE PTR [rax],al
   14003c454:	imul   eax,DWORD PTR [rax],0x6e
   14003c457:	add    BYTE PTR [rax],al
   14003c459:	add    BYTE PTR [rsi+0x0],ch
   14003c45c:	add    BYTE PTR [rax],al
   14003c45e:	outs   dx,BYTE PTR ds:[rsi]
   14003c45f:	add    BYTE PTR [rsi+0x0],ch
   14003c462:	add    BYTE PTR [rax],al
   14003c464:	(bad)  
   14003c465:	inc    DWORD PTR [rax]
   14003c467:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003c46b:	add    BYTE PTR [rax],al
   14003c46d:	add    BYTE PTR [rax+rax*1+0x7a],dh
   14003c471:	add    BYTE PTR [rax],al
   14003c473:	add    BYTE PTR [rdx+0x0],bh
   14003c476:	add    BYTE PTR [rax],al
   14003c478:	jp     0x14003c47a
   14003c47a:	jp     0x14003c47c
   14003c47c:	add    BYTE PTR [rax],al
   14003c47e:	je     0x14003c480
   14003c480:	push   0xffffffffff000000
   14003c485:	inc    DWORD PTR [rax]
   14003c487:	add    BYTE PTR [rax+rax*1+0x67],ah
   14003c48b:	add    BYTE PTR [rax],al
   14003c48d:	add    BYTE PTR [rdi+0x0],ah
   14003c490:	add    BYTE PTR [rax],al
   14003c492:	add    BYTE PTR [edi+0x0],ah
   14003c496:	add    BYTE PTR [rax],al
   14003c498:	add    BYTE PTR [eax+0x0],ch
   14003c49c:	add    BYTE PTR [rax],al
   14003c49e:	add    BYTE PTR [ebp+0x0],dh
   14003c4a2:	add    BYTE PTR gs:[rax],al
   14003c4a5:	add    bh,bh
   14003c4a7:	(bad)  
   14003c4a8:	jns    0x14003c4aa
   14003c4aa:	add    BYTE PTR [rax],al
   14003c4ac:	(bad)  
   14003c4ad:	inc    DWORD PTR [rax]
   14003c4af:	add    BYTE PTR [rax+0x14003cb],dl
   14003c4b5:	add    BYTE PTR [rax],al
   14003c4b7:	add    BYTE PTR [rax-0x3a],al
   14003c4ba:	add    eax,DWORD PTR [rax+0x1]
   14003c4bd:	add    BYTE PTR [rax],al
   14003c4bf:	add    BYTE PTR [rax],dh
   14003c4c1:	retf   
   14003c4c2:	add    eax,DWORD PTR [rax+0x1]
   14003c4c5:	add    BYTE PTR [rax],al
   14003c4c7:	add    BYTE PTR [rax],dh
   14003c4c9:	ret    
   14003c4ca:	add    eax,DWORD PTR [rax+0x1]
   14003c4cd:	add    BYTE PTR [rax],al
   14003c4cf:	add    al,dh
   14003c4d1:	retf   0x4003
   14003c4d4:	add    DWORD PTR [rax],eax
   14003c4d6:	add    BYTE PTR [rax],al
   14003c4d8:	loopne 0x14003c4a4
   14003c4da:	add    eax,DWORD PTR [rax+0x1]
   14003c4dd:	add    BYTE PTR [rax],al
   14003c4df:	add    al,al
   14003c4e1:	mov    DWORD PTR [rbx],0x140
   14003c4e7:	add    BYTE PTR [rax-0x35],al
   14003c4ea:	add    eax,DWORD PTR [rax+0x1]
   14003c4ed:	add    BYTE PTR [rax],al
   14003c4ef:	add    al,dh
   14003c4f1:	leave  
   14003c4f2:	add    eax,DWORD PTR [rax+0x1]
   14003c4f5:	add    BYTE PTR [rax],al
   14003c4f7:	add    al,cl
   14003c4f9:	ret    
   14003c4fa:	add    eax,DWORD PTR [rax+0x1]
   14003c4fd:	add    BYTE PTR [rax],al
   14003c4ff:	add    BYTE PTR [rax+0x14003c7],cl
   14003c505:	add    BYTE PTR [rax],al
   14003c507:	add    ah,bh
   14003c509:	leave  
   14003c50a:	add    eax,DWORD PTR [rax+0x1]
   14003c50d:	add    BYTE PTR [rax],al
   14003c50f:	add    BYTE PTR [rax+0x14003cb],bl
   14003c515:	add    BYTE PTR [rax],al
   14003c517:	add    BYTE PTR [rax-0x3d],bl
   14003c51a:	add    eax,DWORD PTR [rax+0x1]
   14003c51d:	add    BYTE PTR [rax],al
   14003c51f:	add    BYTE PTR [rax-0x3d],al
   14003c522:	add    eax,DWORD PTR [rax+0x1]
   14003c525:	add    BYTE PTR [rax],al
   14003c527:	add    BYTE PTR [rax+0x14003c7],ch
   14003c52d:	add    BYTE PTR [rax],al
   14003c52f:	add    BYTE PTR [rbx+rax*8],ch
   14003c532:	add    eax,DWORD PTR [rax+0x1]
   14003c535:	add    BYTE PTR [rax],al
   14003c537:	add    BYTE PTR [rax-0x3c],ch
   14003c53a:	add    eax,DWORD PTR [rax+0x1]
   14003c53d:	add    BYTE PTR [rax],al
   14003c53f:	add    BYTE PTR [rdx+rcx*8],al
   14003c542:	add    eax,DWORD PTR [rax+0x1]
   14003c545:	add    BYTE PTR [rax],al
   14003c547:	add    BYTE PTR [rax-0x39],bh
   14003c54a:	add    eax,DWORD PTR [rax+0x1]
   14003c54d:	add    BYTE PTR [rax],al
   14003c54f:	add    BYTE PTR [rax-0x35],ah
   14003c552:	add    eax,DWORD PTR [rax+0x1]
   14003c555:	add    BYTE PTR [rax],al
   14003c557:	add    al,ch
   14003c559:	enter  0x4003,0x1
   14003c55d:	add    BYTE PTR [rax],al
   14003c55f:	add    BYTE PTR [rax-0x38],dl
   14003c562:	add    eax,DWORD PTR [rax+0x1]
   14003c565:	add    BYTE PTR [rax],al
   14003c567:	add    BYTE PTR [rax-0x3a],ch
   14003c56a:	add    eax,DWORD PTR [rax+0x1]
   14003c56d:	add    BYTE PTR [rax],al
   14003c56f:	add    BYTE PTR [rax+0x14003c8],bl
   14003c575:	add    BYTE PTR [rax],al
   14003c577:	add    BYTE PTR [rax-0x35],ch
   14003c57a:	add    eax,DWORD PTR [rax+0x1]
   14003c57d:	add    BYTE PTR [rax],al
   14003c57f:	add    BYTE PTR [rax+0x14003c4],cl
   14003c585:	add    BYTE PTR [rax],al
   14003c587:	add    al,al
   14003c589:	enter  0x4003,0x1
   14003c58d:	add    BYTE PTR [rax],al
   14003c58f:	add    BYTE PTR [rax-0x39],bl
   14003c592:	add    eax,DWORD PTR [rax+0x1]
   14003c595:	add    BYTE PTR [rax],al
   14003c597:	add    BYTE PTR [rax-0x36],dh
   14003c59a:	add    eax,DWORD PTR [rax+0x1]
   14003c59d:	add    BYTE PTR [rax],al
   14003c59f:	add    al,dl
   14003c5a1:	enter  0x4003,0x1
   14003c5a5:	add    BYTE PTR [rax],al
   14003c5a7:	add    BYTE PTR [rax],al
   14003c5a9:	retf   
   14003c5aa:	add    eax,DWORD PTR [rax+0x1]
   14003c5ad:	add    BYTE PTR [rax],al
   14003c5af:	add    BYTE PTR [rax-0x3c],al
   14003c5b2:	add    eax,DWORD PTR [rax+0x1]
   14003c5b5:	add    BYTE PTR [rax],al
   14003c5b7:	add    BYTE PTR [rax],dh
   14003c5b9:	(bad)
   14003c5bd:	add    BYTE PTR [rax],al
   14003c5bf:	add    BYTE PTR [rax+0x14003c6],ch
   14003c5c5:	add    BYTE PTR [rax],al
   14003c5c7:	add    BYTE PTR [rax],dl
   14003c5c9:	retf   0x4003
   14003c5cc:	add    DWORD PTR [rax],eax
   14003c5ce:	add    BYTE PTR [rax],al
   14003c5d0:	loopne 0x14003c598
   14003c5d2:	add    eax,DWORD PTR [rax+0x1]
   14003c5d5:	add    BYTE PTR [rax],al
   14003c5d7:	add    BYTE PTR [rax-0x38],ah
   14003c5da:	add    eax,DWORD PTR [rax+0x1]
   14003c5dd:	add    BYTE PTR [rax],al
   14003c5df:	add    BYTE PTR [rbx+rax*8],bh
   14003c5e2:	add    eax,DWORD PTR [rax+0x1]
   14003c5e5:	add    BYTE PTR [rax],al
   14003c5e7:	add    BYTE PTR [rax-0x36],bl
   14003c5ea:	add    eax,DWORD PTR [rax+0x1]
   14003c5ed:	add    BYTE PTR [rax],al
   14003c5ef:	add    BYTE PTR [rax],ah
   14003c5f1:	retf   
   14003c5f2:	add    eax,DWORD PTR [rax+0x1]
   14003c5f5:	add    BYTE PTR [rax],al
   14003c5f7:	add    al,cl
   14003c5f9:	mov    BYTE PTR [rbx],0x40
   14003c5fc:	add    DWORD PTR [rax],eax
   14003c5fe:	add    BYTE PTR [rax],al
   14003c600:	test   al,0xc4
   14003c602:	add    eax,DWORD PTR [rax+0x1]
   14003c605:	add    BYTE PTR [rax],al
   14003c607:	add    BYTE PTR [rax],ch
   14003c609:	mov    DWORD PTR [rbx],0x140
   14003c60f:	add    BYTE PTR [rax+rax*1],cl
   14003c612:	cmp    al,0x0
   14003c614:	and    al,0x0
   14003c616:	add    BYTE PTR es:[rax],ah
   14003c619:	add    BYTE PTR [rsi],cl
   14003c61b:	add    BYTE PTR [rax+rax*1],bl
   14003c61e:	ins    BYTE PTR es:[rdi],dx
   14003c61f:	add    BYTE PTR [rdx],dl
   14003c621:	add    BYTE PTR [rsi],bl
   14003c623:	add    BYTE PTR [rsi],ah
   14003c625:	add    BYTE PTR [rax+rax*1],cl
   14003c628:	and    BYTE PTR [rax],al
   14003c62a:	rex.RX add BYTE PTR [rax+0x0],r9b
   14003c62e:	add    BYTE PTR ss:[rax+rax*1],al
   14003c632:	sbb    BYTE PTR [rax],al
   14003c634:	or     al,0x0
   14003c636:	adc    al,BYTE PTR [rax]
   14003c638:	(bad)  
   14003c639:	add    BYTE PTR [rax+rax*1],ch
   14003c63c:	add    BYTE PTR [rax],al
   14003c63e:	add    BYTE PTR [rax],al
   14003c640:	movsxd eax,DWORD PTR [rax]
   14003c642:	add    BYTE PTR [rax],al
   14003c644:	movsxd eax,DWORD PTR [rax]
   14003c646:	push   0x63000000
   14003c64b:	add    BYTE PTR [rdx+0x0],bh
   14003c64e:	add    BYTE PTR [rax],al
   14003c650:	imul   eax,DWORD PTR [rax],0x0
   14003c653:	add    BYTE PTR [rax+rax*1+0x63],dh
   14003c657:	add    BYTE PTR [rax+0x0],ch
   14003c65a:	add    BYTE PTR [rax],al
   14003c65c:	ja     0x14003c65f
   14003c65e:	add    BYTE PTR [rax],al
   14003c660:	(bad)  
   14003c661:	inc    DWORD PTR [rax]
   14003c663:	add    BYTE PTR [rax],al
   14003c665:	add    BYTE PTR [rax],al
   14003c667:	add    BYTE PTR [rbx+0x0],ah
   14003c66a:	add    BYTE PTR [rax],al
   14003c66c:	movsxd eax,DWORD PTR [rax]
   14003c66e:	movsxd eax,DWORD PTR [rax]
   14003c670:	add    BYTE PTR [rax],al
   14003c672:	movsxd eax,DWORD PTR [rax]
   14003c674:	movsxd eax,DWORD PTR [rax]
   14003c676:	push   0x63000000
   14003c67b:	add    BYTE PTR [rax+0x0],ch
   14003c67e:	add    BYTE PTR [rax],al
   14003c680:	movsxd eax,DWORD PTR [rax]
   14003c682:	imul   eax,DWORD PTR [rax],0x0
   14003c685:	add    BYTE PTR [rbx+0x0],ah
   14003c688:	jp     0x14003c68a
   14003c68a:	add    BYTE PTR [rax],al
   14003c68c:	imul   eax,DWORD PTR [rax],0x0
   14003c68f:	add    BYTE PTR [rax+rax*1+0x63],dh
   14003c693:	add    BYTE PTR [rax+0x0],ch
   14003c696:	add    BYTE PTR [rax],al
   14003c698:	je     0x14003c69a
   14003c69a:	jne    0x14003c69c
   14003c69c:	add    BYTE PTR [rax],al
   14003c69e:	ja     0x14003c6a1
   14003c6a0:	add    BYTE PTR [rax],al
   14003c6a2:	(bad)  
   14003c6a3:	inc    DWORD PTR [rax]
   14003c6a5:	add    BYTE PTR [rax],al
   14003c6a7:	add    BYTE PTR [rdx+0x0],dh
   14003c6aa:	add    BYTE PTR [rax],al
   14003c6ac:	jb     0x14003c6ae
   14003c6ae:	push   0x72000000
   14003c6b3:	add    BYTE PTR [rdx+0x0],dh
   14003c6b6:	add    BYTE PTR [rax],al
   14003c6b8:	jb     0x14003c6ba
   14003c6ba:	jb     0x14003c6bc
   14003c6bc:	push   0x77000000
   14003c6c1:	add    BYTE PTR [rdx+0x0],dh
   14003c6c4:	add    BYTE PTR [rax],al
   14003c6c6:	(bad)  
   14003c6c7:	jmp    FWORD PTR [rdi+0x0]
   14003c6ca:	imul   eax,DWORD PTR [rax],0x770000
   14003c6d0:	add    BYTE PTR [rax],al
   14003c6d2:	ja     0x14003c6d4
   14003c6d4:	push   0xffffffffff000000
   14003c6d9:	inc    DWORD PTR [rax]
   14003c6db:	add    BYTE PTR [rax],al
   14003c6dd:	add    BYTE PTR [rax],al
   14003c6df:	add    BYTE PTR [rbx+0x0],ah
   14003c6e2:	add    BYTE PTR gs:[rax],al
   14003c6e5:	add    BYTE PTR [rbx+0x0],ah
   14003c6e8:	push   0x63000000
   14003c6ed:	add    BYTE PTR [rcx+0x0],ch
   14003c6f0:	add    BYTE PTR [rax],al
   14003c6f2:	jae    0x14003c6f4
   14003c6f4:	movsxd eax,DWORD PTR [rax]
   14003c6f6:	push   0x73000000
   14003c6fb:	add    BYTE PTR [rax+0x0],ch
   14003c6fe:	add    BYTE PTR [rax],al
   14003c700:	jae    0x14003c702
   14003c702:	imul   eax,DWORD PTR [rax],0x730000
   14003c708:	jae    0x14003c70a
   14003c70a:	imul   eax,DWORD PTR [rax],0x730000
   14003c710:	jae    0x14003c712
   14003c712:	jne    0x14003c714
   14003c714:	add    BYTE PTR [rax],al
   14003c716:	je     0x14003c718
   14003c718:	imul   eax,DWORD PTR [rax],0x6f
   14003c71e:	js     0x14003c720
   14003c720:	imul   eax,DWORD PTR [rax],0x6f
   14003c726:	(bad)  
   14003c727:	jmp    QWORD PTR [rbp+0x0]
   14003c72a:	js     0x14003c72c
   14003c72c:	add    BYTE PTR [rax],al
   14003c72e:	add    BYTE PTR [edx+0x0],bh
   14003c732:	add    BYTE PTR [rax],al
   14003c734:	jae    0x14003c736
   14003c736:	add    BYTE PTR [rax],al
   14003c738:	je     0x14003c73a
   14003c73a:	jae    0x14003c73c
   14003c73c:	add    BYTE PTR [rax],al
   14003c73e:	je     0x14003c740
   14003c740:	jp     0x14003c742
   14003c742:	add    BYTE PTR [rax],al
   14003c744:	js     0x14003c746
   14003c746:	add    BYTE PTR [rax],al
   14003c748:	jp     0x14003c74a
   14003c74a:	add    BYTE PTR [rax],al
   14003c74c:	jp     0x14003c74e
   14003c74e:	jp     0x14003c750
   14003c750:	add    BYTE PTR [rax],al
   14003c752:	(bad)  
   14003c753:	inc    DWORD PTR [rax]
   14003c755:	add    BYTE PTR [rax],al
   14003c757:	add    BYTE PTR [rax+rax*1+0x67],ah
   14003c75b:	add    BYTE PTR [rax],al
   14003c75d:	add    BYTE PTR [rax+rax*1+0x6a],ah
   14003c761:	add    BYTE PTR [rax],al
   14003c763:	add    BYTE PTR [rax+rax*1+0x75],ah
   14003c767:	add    BYTE PTR [rax],al
   14003c769:	add    BYTE PTR [rdi+0x0],ah
   14003c76c:	add    BYTE PTR [rax],al
   14003c76e:	push   0x0
   14003c770:	add    BYTE PTR [rax],al
   14003c772:	(bad)  
   14003c773:	inc    DWORD PTR [rax]
   14003c775:	add    BYTE PTR [rax],al
   14003c777:	add    BYTE PTR [rdi+0x0],dh
   14003c77a:	add    BYTE PTR [rax],al
   14003c77c:	ja     0x14003c77e
   14003c77e:	push   0xffffffffff000000
   14003c783:	inc    DWORD PTR [rax]
   14003c785:	add    BYTE PTR [rax],al
   14003c787:	add    BYTE PTR [rdi+0x0],ah
   14003c78a:	outs   dx,BYTE PTR ds:[rsi]
   14003c78b:	add    BYTE PTR [rax],al
   14003c78d:	add    BYTE PTR [rbx+0x0],ch
   14003c790:	outs   dx,BYTE PTR ds:[rsi]
   14003c791:	add    BYTE PTR [rax],al
   14003c793:	add    BYTE PTR [rbp+0x0],ch
   14003c796:	outs   dx,BYTE PTR ds:[rsi]
   14003c797:	add    BYTE PTR [rax],al
   14003c799:	add    BYTE PTR [rsi+0x0],ch
   14003c79c:	add    BYTE PTR [rax],al
   14003c79e:	jo     0x14003c7a0
   14003c7a0:	outs   dx,BYTE PTR ds:[rsi]
   14003c7a1:	add    BYTE PTR [rax],al
   14003c7a3:	add    bh,bh
   14003c7a5:	inc    DWORD PTR [rax]
   14003c7a7:	add    BYTE PTR [rax+0x0],dh
   14003c7aa:	je     0x14003c7ac
   14003c7ac:	add    BYTE PTR [rax],al
   14003c7ae:	je     0x14003c7b0
   14003c7b0:	add    BYTE PTR [rax],al
   14003c7b2:	je     0x14003c7b4
   14003c7b4:	push   0x74000000
   14003c7b9:	add    BYTE PTR [rdi+0x0],dh
   14003c7bc:	add    BYTE PTR [rax],al
   14003c7be:	(bad)  
   14003c7bf:	jmp    QWORD PTR [rax+rax*1+0x6a]
   14003c7c3:	add    BYTE PTR [rax],al
   14003c7c5:	add    BYTE PTR [rdi+0x0],ah
   14003c7c8:	add    BYTE PTR [rax],al
   14003c7ca:	push   0x0
   14003c7cc:	add    BYTE PTR [rax],al
   14003c7ce:	(bad)  
   14003c7cf:	jmp    QWORD PTR [rcx+0x0]
   14003c7d2:	sbb    eax,DWORD PTR [rcx]
   14003c7d4:	pop    rbx
   14003c7d5:	add    DWORD PTR [rip+0x21011f01],ebx        # 0x16104e6dc
   14003c7db:	add    DWORD PTR [rbp+0x1],ebx
   14003c7de:	pop    rdi
   14003c7df:	add    DWORD PTR [rbx],esp
   14003c7e1:	add    DWORD PTR [rbp+0x1],ecx
   14003c7e4:	and    eax,0x29006501
   14003c7e9:	add    DWORD PTR [rbx+0x1],ebp
   14003c7ec:	sub    eax,DWORD PTR [rcx]
   14003c7ee:	sub    eax,0x2f016d01
   14003c7f3:	add    DWORD PTR [rdi+0x1],ebp
   14003c7f6:	jno    0x14003c7f9
   14003c7f8:	imul   eax,DWORD PTR [rax],0x1330131
   14003c7fe:	xor    eax,0x37018301
   14003c803:	add    DWORD PTR [rbp-0x76fe78ff],eax
   14003c809:	add    DWORD PTR [rax],ebx
   14003c80b:	add    DWORD PTR [rbx+0x3b006f01],ecx
   14003c811:	add    edi,esp
   14003c813:	add    DWORD PTR [rip+0xffffffffa3013f01],edi        # 0xe305071a
   14003c819:	add    DWORD PTR [rcx+0x1],eax
   14003c81c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003c81d:	add    DWORD PTR [rcx+0x1],edx
   14003c820:	push   rbx
   14003c821:	add    DWORD PTR [rdi+0x43007501],esp
   14003c827:	add    ecx,ebp
   14003c829:	add    DWORD PTR [rbp+0x47014501],edi
   14003c82f:	add    DWORD PTR [rdi-0x3efeb6ff],edi
   14003c835:	add    ebx,eax
   14003c837:	add    ebp,eax
   14003c839:	add    edi,eax
   14003c83b:	add    DWORD PTR [rcx+0x0],edi
   14003c83e:	push   rbp
   14003c83f:	add    ecx,esp
   14003c841:	add    ebx,ecx
   14003c843:	add    DWORD PTR [rbx+0x1],ecx
   14003c846:	jrcxz  0x14003c849
   14003c848:	(bad)  
   14003c849:	inc    DWORD PTR [rax]
   14003c84b:	add    BYTE PTR [rax],al
   14003c84d:	add    BYTE PTR [rax],al
   14003c84f:	add    BYTE PTR [rdx+0x0],ah
   14003c852:	add    BYTE PTR [rax],al
   14003c854:	(bad)  
   14003c855:	add    BYTE PTR [rdx+0x0],ah
   14003c858:	add    BYTE PTR [rax],al
   14003c85a:	(bad)  
   14003c85b:	inc    DWORD PTR [rax]
   14003c85d:	add    BYTE PTR [rax],al
   14003c85f:	add    BYTE PTR [rdx+0x0],ah
   14003c862:	je     0x14003c864
   14003c864:	add    BYTE PTR [rax],al
   14003c866:	add    BYTE PTR fs:[rax],al
   14003c869:	add    BYTE PTR [rax+rax*1+0x68],ah
   14003c86d:	add    BYTE PTR [rax],al
   14003c86f:	add    BYTE PTR [rax+0x0],dh
   14003c872:	je     0x14003c874
   14003c874:	add    BYTE PTR [rax],al
   14003c876:	jae    0x14003c878
   14003c878:	imul   eax,DWORD PTR [rax],0x6f
   14003c87e:	je     0x14003c880
   14003c880:	add    BYTE PTR [rax],al
   14003c882:	je     0x14003c884
   14003c884:	push   0x74000000
   14003c889:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003c88d:	add    BYTE PTR [rax+rax*1+0x77],dh
   14003c891:	add    BYTE PTR [rax],al
   14003c893:	add    bh,bh
   14003c895:	inc    DWORD PTR [rax]
   14003c897:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003c89b:	add    BYTE PTR [rax+rax*1+0x64],ah
   14003c89f:	add    BYTE PTR [rax],al
   14003c8a1:	add    BYTE PTR [rax+rax*1+0x64],ah
   14003c8a5:	add    BYTE PTR [rax+0x0],ch
   14003c8a8:	add    BYTE PTR [rax],al
   14003c8aa:	add    BYTE PTR fs:[rax+0x0],ch
   14003c8ae:	add    BYTE PTR [rax],al
   14003c8b0:	ins    BYTE PTR es:[rdi],dx
   14003c8b1:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003c8b5:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003c8b9:	add    bh,bh
   14003c8bb:	inc    DWORD PTR [rax]
   14003c8bd:	add    BYTE PTR [rax],al
   14003c8bf:	add    BYTE PTR [rax+0x0],ch
   14003c8c2:	add    BYTE PTR [rax],al
   14003c8c4:	ja     0x14003c8c6
   14003c8c6:	push   0x6f00
   14003c8cb:	add    bh,bh
   14003c8cd:	inc    DWORD PTR [rax]
   14003c8cf:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003c8d3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003c8d7:	add    BYTE PTR [rax],al
   14003c8d9:	add    BYTE PTR [rbx+0x0],dh
   14003c8dc:	ins    BYTE PTR es:[rdi],dx
   14003c8dd:	add    BYTE PTR [rax],al
   14003c8df:	add    bh,bh
   14003c8e1:	inc    DWORD PTR [rax]
   14003c8e3:	add    BYTE PTR [rax],al
   14003c8e5:	add    BYTE PTR [rax],al
   14003c8e7:	add    BYTE PTR [rbx+0x0],ah
   14003c8ea:	jp     0x14003c8ec
   14003c8ec:	add    BYTE PTR [rax],al
   14003c8ee:	add    BYTE PTR gs:[rax+0x0],bh
   14003c8f2:	add    BYTE PTR [rax],al
   14003c8f4:	add    BYTE PTR [edx+0x0],bh
   14003c8f8:	add    BYTE PTR [rax],al
   14003c8fa:	je     0x14003c8fc
   14003c8fc:	jae    0x14003c8fe
   14003c8fe:	add    BYTE PTR [rax],al
   14003c900:	je     0x14003c902
   14003c902:	jp     0x14003c904
   14003c904:	add    BYTE PTR [rax],al
   14003c906:	js     0x14003c908
   14003c908:	add    BYTE PTR [rax],al
   14003c90a:	jp     0x14003c90c
   14003c90c:	add    BYTE PTR [rax],al
   14003c90e:	(bad)  
   14003c90f:	jmp    QWORD PTR [rdx+0x0]
   14003c912:	add    BYTE PTR [rbx+0x0],ah
   14003c915:	add    DWORD PTR [rcx+0x1],esp
   14003c918:	add    DWORD PTR [rbx+0x1],esp
   14003c91b:	add    DWORD PTR [rdi],esp
   14003c91d:	add    DWORD PTR [rcx],eax
   14003c91f:	add    DWORD PTR gs:[rcx],eax
   14003c922:	add    DWORD PTR [ecx],eax
   14003c925:	add    BYTE PTR fs:[rdx],al
   14003c928:	imul   eax,DWORD PTR [rcx],0x2014f02
   14003c92e:	(bad)  
   14003c92f:	add    DWORD PTR [rdx],eax
   14003c931:	data16 add BYTE PTR [rbx],al
   14003c934:	add    BYTE PTR [ebx+esi*2],al
   14003c938:	add    DWORD PTR [rsi*2+0x1770401],eax
   14003c93f:	add    al,0x79
   14003c941:	add    DWORD PTR [rbx+rdi*2],eax
   14003c944:	add    DWORD PTR [rdi*2+0x680401],eax
   14003c94b:	add    eax,0x8105017f
   14003c950:	add    DWORD PTR [rip+0xffffffff8d06006a],eax        # 0xcd09c9c0
   14003c956:	add    DWORD PTR [rsi],eax
   14003c958:	sbb    DWORD PTR [rcx],eax
   14003c95a:	(bad)  
   14003c95b:	imul   eax,DWORD PTR [rax],0x7
   14003c95e:	pop    QWORD PTR [rcx]
   14003c960:	(bad)  
   14003c961:	ins    BYTE PTR es:[rdi],dx
   14003c962:	add    BYTE PTR [rax],cl
   14003c964:	xchg   ecx,eax
   14003c965:	add    DWORD PTR [rax],ecx
   14003c967:	xchg   ebx,eax
   14003c968:	add    DWORD PTR [rax],ecx
   14003c96a:	xchg   ebp,eax
   14003c96b:	add    DWORD PTR [rax],ecx
   14003c96d:	xchg   edi,eax
   14003c96e:	add    DWORD PTR [rax],ecx
   14003c970:	xlat   BYTE PTR ds:[rbx]
   14003c971:	add    DWORD PTR [rax],ecx
   14003c973:	cdq    
   14003c974:	add    DWORD PTR [rax],ecx
   14003c976:	ins    DWORD PTR es:[rdi],dx
   14003c977:	add    BYTE PTR [rcx],cl
   14003c979:	outs   dx,BYTE PTR ds:[rsi]
   14003c97a:	add    BYTE PTR [rdx],cl
   14003c97c:	mov    ecx,0x19d0a01
   14003c981:	or     bl,BYTE PTR [rdi+0x1a10a01]
   14003c987:	or     bl,cl
   14003c989:	add    DWORD PTR [rdx],ecx
   14003c98b:	cmp    DWORD PTR [rcx],eax
   14003c98d:	or     dh,BYTE PTR [rax+0x0]
   14003c990:	or     esi,DWORD PTR [rcx+0x0]
   14003c993:	(bad)  
   14003c994:	jb     0x14003c996
   14003c996:	or     al,0xa9
   14003c998:	add    DWORD PTR [rbx+rbp*4],ecx
   14003c99b:	add    DWORD PTR [rbp*4+0x1db0c01],ecx
   14003c9a2:	or     al,0x73
   14003c9a4:	add    BYTE PTR [rip+0xffffffffb10d01af],cl        # 0xf110cb59
   14003c9aa:	add    DWORD PTR [rip+0xffffffffb50d01b3],ecx        # 0xf510cb63
   14003c9b0:	add    DWORD PTR [rip+0x170d01dd],ecx        # 0x15710cb93
   14003c9b6:	add    DWORD PTR [rip+0xffffffffb70f0074],ecx        # 0xf712ca30
   14003c9bc:	add    DWORD PTR [rdi],ecx
   14003c9be:	mov    ecx,0x1bb0f01
   14003c9c3:	pandn  mm0,QWORD PTR [rcx]
   14003c9c6:	pcmpeqd mm0,QWORD PTR [rax]
   14003c9c9:	adc    dh,BYTE PTR [rdi+0x0]
   14003c9cc:	adc    ecx,ecx
   14003c9ce:	add    DWORD PTR [rbx],edx
   14003c9d0:	js     0x14003c9d2
   14003c9d2:	adc    eax,0x7a140079
   14003c9d7:	add    BYTE PTR [rip+0xffffffffcf1501cd],dl        # 0x10f18cbaa
   14003c9dd:	add    DWORD PTR [rip+0x7f1501d1],edx        # 0x1bf18cbb4
   14003c9e3:	add    BYTE PTR [rsi],cl
   14003c9e5:	add    BYTE PTR [rax],0x11
   14003c9e8:	add    DWORD PTR [rax],0xffff10
   14003c9ee:	add    BYTE PTR [rax],al
   14003c9f0:	ins    BYTE PTR es:[rdi],dx
   14003c9f1:	add    BYTE PTR [rax],al
   14003c9f3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003c9f7:	add    BYTE PTR [rax],al
   14003c9f9:	add    bh,bh
   14003c9fb:	push   QWORD PTR [rax+0x0]
   14003c9fe:	add    BYTE PTR [rax],al
   14003ca00:	(bad)  
   14003ca01:	inc    DWORD PTR [rax]
   14003ca03:	add    BYTE PTR [rsi+0x0],dh
   14003ca06:	add    BYTE PTR [rax],al
   14003ca08:	(bad)  
   14003ca09:	inc    DWORD PTR [rax]
   14003ca0b:	add    BYTE PTR [rax],al
   14003ca0d:	add    BYTE PTR [rax],al
   14003ca0f:	add    BYTE PTR [rbx+0x0],ah
   14003ca12:	add    BYTE PTR gs:[rax],al
   14003ca15:	add    BYTE PTR [rbx+0x0],ah
   14003ca18:	imul   eax,DWORD PTR [rax],0x630000
   14003ca1e:	jns    0x14003ca20
   14003ca20:	add    BYTE PTR [rax],al
   14003ca22:	jae    0x14003ca24
   14003ca24:	add    BYTE PTR [rax],al
   14003ca26:	jae    0x14003ca28
   14003ca28:	movsxd eax,DWORD PTR [rax]
   14003ca2a:	add    BYTE PTR gs:[rax],al
   14003ca2d:	add    BYTE PTR [rbx+0x0],dh
   14003ca30:	movsxd eax,DWORD PTR [rax]
   14003ca32:	imul   eax,DWORD PTR [rax],0x730000
   14003ca38:	movsxd eax,DWORD PTR [rax]
   14003ca3a:	jns    0x14003ca3c
   14003ca3c:	add    BYTE PTR [rax],al
   14003ca3e:	jae    0x14003ca40
   14003ca40:	jae    0x14003ca42
   14003ca42:	add    BYTE PTR [rax],al
   14003ca44:	jae    0x14003ca46
   14003ca46:	je     0x14003ca48
   14003ca48:	add    BYTE PTR [rax],al
   14003ca4a:	jae    0x14003ca4c
   14003ca4c:	ja     0x14003ca4e
   14003ca4e:	add    BYTE PTR [rax],al
   14003ca50:	jp     0x14003ca52
   14003ca52:	add    BYTE PTR [rax],al
   14003ca54:	(bad)  
   14003ca55:	inc    DWORD PTR [rax]
   14003ca57:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003ca5b:	add    BYTE PTR [rax],al
   14003ca5d:	add    BYTE PTR [rax+rax*1+0x7a],dh
   14003ca61:	add    BYTE PTR [rax],al
   14003ca63:	add    BYTE PTR [rdx+0x0],bh
   14003ca66:	add    BYTE PTR [rax],al
   14003ca68:	jp     0x14003ca6a
   14003ca6a:	jp     0x14003ca6c
   14003ca6c:	add    BYTE PTR [rax],al
   14003ca6e:	(bad)  
   14003ca6f:	jmp    QWORD PTR [rbx+0x0]
   14003ca72:	add    BYTE PTR [rax],al
   14003ca74:	movsxd eax,DWORD PTR [rax]
   14003ca76:	movsxd eax,DWORD PTR [rax]
   14003ca78:	add    BYTE PTR [rax],al
   14003ca7a:	movsxd eax,DWORD PTR [rax]
   14003ca7c:	movsxd eax,DWORD PTR [rax]
   14003ca7e:	push   0x63000000
   14003ca83:	add    BYTE PTR [rax+0x0],ch
   14003ca86:	add    BYTE PTR [rax],al
   14003ca88:	movsxd eax,DWORD PTR [rax]
   14003ca8a:	imul   eax,DWORD PTR [rax],0x0
   14003ca8d:	add    BYTE PTR [rbx+0x0],ah
   14003ca90:	jno    0x14003ca92
   14003ca92:	jne    0x14003ca94
   14003ca94:	add    BYTE PTR [rax],al
   14003ca96:	movsxd eax,DWORD PTR [rax]
   14003ca98:	jae    0x14003ca9a
   14003ca9a:	add    BYTE PTR [rax],al
   14003ca9c:	imul   eax,DWORD PTR [rax],0x0
   14003ca9f:	add    BYTE PTR [rbx+0x0],ch
   14003caa2:	push   0x6b000000
   14003caa7:	add    BYTE PTR [rbx+0x0],ch
   14003caaa:	add    BYTE PTR [rax],al
   14003caac:	imul   eax,DWORD PTR [rax],0x73
   14003caaf:	add    BYTE PTR [rax],al
   14003cab1:	add    BYTE PTR [rbx+0x0],ch
   14003cab4:	ja     0x14003cab6
   14003cab6:	add    BYTE PTR [rax],al
   14003cab8:	ins    BYTE PTR es:[rdi],dx
   14003cab9:	add    BYTE PTR [rbx+0x0],ch
   14003cabc:	add    BYTE PTR [rax],al
   14003cabe:	jno    0x14003cac0
   14003cac0:	add    BYTE PTR [rax],al
   14003cac2:	jno    0x14003cac4
   14003cac4:	jne    0x14003cac6
   14003cac6:	add    BYTE PTR [rax],al
   14003cac8:	jno    0x14003caca
   14003caca:	jne    0x14003cacc
   14003cacc:	add    BYTE PTR gs:[rax],al
   14003cacf:	add    BYTE PTR [rax+0x0],bh
   14003cad2:	add    BYTE PTR [rax],al
   14003cad4:	js     0x14003cad6
   14003cad6:	movsxd eax,DWORD PTR [rax]
   14003cad8:	add    BYTE PTR [rax],al
   14003cada:	(bad)  
   14003cadb:	inc    DWORD PTR [rax]
   14003cadd:	add    BYTE PTR [rax],al
   14003cadf:	add    BYTE PTR [rax+0x0],ch
   14003cae2:	add    BYTE PTR [rax],al
   14003cae4:	ja     0x14003cae6
   14003cae6:	push   0x6f00
   14003caeb:	add    bh,bh
   14003caed:	inc    DWORD PTR [rax]
   14003caef:	add    BYTE PTR [rdi+0x0],ah
   14003caf2:	add    BYTE PTR [rax],al
   14003caf4:	add    BYTE PTR [eax+0x0],ch
   14003caf8:	add    BYTE PTR [rax],al
   14003cafa:	(bad)  
   14003cafb:	inc    DWORD PTR [rax]
   14003cafd:	add    BYTE PTR [rax],al
   14003caff:	add    BYTE PTR [rdi+0x0],ah
   14003cb02:	ins    DWORD PTR es:[rdi],dx
   14003cb03:	add    BYTE PTR [rax],al
   14003cb05:	add    BYTE PTR [rbp+0x0],ch
   14003cb08:	add    BYTE PTR [rax],al
   14003cb0a:	ins    DWORD PTR es:[rdi],dx
   14003cb0b:	add    BYTE PTR [rdx+0x0],ah
   14003cb0e:	add    BYTE PTR [rax],al
   14003cb10:	ins    DWORD PTR es:[rdi],dx
   14003cb11:	add    BYTE PTR [rbp+0x0],ch
   14003cb14:	add    BYTE PTR [rax],al
   14003cb16:	ins    DWORD PTR es:[rdi],dx
   14003cb17:	add    BYTE PTR [rsi+0x0],ch
   14003cb1a:	add    BYTE PTR [rax],al
   14003cb1c:	(bad)  
   14003cb1d:	inc    DWORD PTR [rax]
   14003cb1f:	add    BYTE PTR [rax+rax*1+0x76],ch
   14003cb23:	add    BYTE PTR [rax],al
   14003cb25:	add    BYTE PTR [rsi+0x0],dh
   14003cb28:	add    BYTE PTR [rax],al
   14003cb2a:	(bad)  
   14003cb2b:	inc    DWORD PTR [rax]
   14003cb2d:	add    BYTE PTR [rax],al
   14003cb2f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003cb33:	add    BYTE PTR [rax+rax*1+0x68],ah
   14003cb37:	add    BYTE PTR [rax],al
   14003cb39:	add    bh,bh
   14003cb3b:	inc    DWORD PTR [rax]
   14003cb3d:	add    BYTE PTR [rax],al
   14003cb3f:	add    BYTE PTR [rbx+0x0],ah
   14003cb42:	add    BYTE PTR [rax],al
   14003cb44:	movsxd eax,DWORD PTR [rax]
   14003cb46:	push   0x6b000000
   14003cb4b:	add    BYTE PTR [rax],al
   14003cb4d:	add    BYTE PTR [rbx+0x0],ch
   14003cb50:	push   0x71000000
   14003cb55:	add    BYTE PTR [rax],al
   14003cb57:	add    BYTE PTR [rcx+0x0],dh
   14003cb5a:	jne    0x14003cb5c
   14003cb5c:	add    BYTE PTR [rax],al
   14003cb5e:	(bad)  
   14003cb5f:	(bad)  
   14003cb60:	jns    0x14003cb62
   14003cb62:	add    BYTE PTR [rax],al
   14003cb64:	(bad)  
   14003cb65:	inc    DWORD PTR [rax]
   14003cb67:	add    BYTE PTR [rsi+0x0],ah
   14003cb6a:	add    BYTE PTR [rax],al
   14003cb6c:	data16 add BYTE PTR [rsi+0x0],ah
   14003cb70:	add    BYTE PTR [rax],al
   14003cb72:	data16 add BYTE PTR [rax+rax*1+0x0],dh
   14003cb77:	add    BYTE PTR [rdi+0x0],ah
   14003cb7a:	push   0x70000000
   14003cb7f:	add    BYTE PTR [rax+0x0],ch
   14003cb82:	add    BYTE PTR [rax],al
   14003cb84:	jo     0x14003cb86
   14003cb86:	jo     0x14003cb88
   14003cb88:	push   0xffffffffff000000
   14003cb8d:	inc    DWORD PTR [rax]
   14003cb8f:	add    BYTE PTR [rdx+0x0],ah
   14003cb92:	add    BYTE PTR [rax],al
   14003cb94:	(bad)  
   14003cb95:	inc    DWORD PTR [rax]
   14003cb97:	add    BYTE PTR [rdx+0x0],dh
   14003cb9a:	add    BYTE PTR [rax],al
   14003cb9c:	jb     0x14003cb9e
   14003cb9e:	push   0x77000000
   14003cba3:	add    BYTE PTR [rdx+0x0],dh
   14003cba6:	add    BYTE PTR [rax],al
   14003cba8:	(bad)  
   14003cba9:	inc    DWORD PTR [rax]
   14003cbab:	add    BYTE PTR [rax],al
   14003cbad:	add    BYTE PTR [rax],al
   14003cbaf:	add    BYTE PTR [rax],al
   14003cbb1:	add    BYTE PTR [rbx],ah
   14003cbb3:	add    DWORD PTR [rdx],esp
   14003cbb5:	add    DWORD PTR [rip+0x1f012401],esp        # 0x15f04efbc
   14003cbbb:	add    DWORD PTR [rsi],ebx
   14003cbbd:	add    DWORD PTR [rbx],ebx
   14003cbbf:	add    DWORD PTR [rcx],esp
   14003cbc1:	add    DWORD PTR [rip+0x4c014d01],ebx        # 0x18c0518c8
   14003cbc7:	add    DWORD PTR [rdi],esp
   14003cbc9:	add    DWORD PTR [rsi],esp
   14003cbcb:	add    DWORD PTR [rip+0x28012901],ebp        # 0x16804f4d2
   14003cbd1:	add    DWORD PTR [rdi],ebp
   14003cbd3:	add    DWORD PTR [rbx],ebp
   14003cbd5:	add    DWORD PTR [rcx],esi
   14003cbd7:	add    DWORD PTR [rcx],edi
   14003cbd9:	add    DWORD PTR [rax],edi
   14003cbdb:	add    DWORD PTR [rcx+0x1],edx
   14003cbde:	push   rax
   14003cbdf:	add    DWORD PTR [rbx+0x1],edx
   14003cbe2:	push   rdx
   14003cbe3:	add    DWORD PTR [rdi],edi
   14003cbe5:	add    DWORD PTR [rsi],edi
   14003cbe7:	add    DWORD PTR [rdi+0x1],eax
   14003cbea:	rex.RX add DWORD PTR [rbx+0x1],r8d
   14003cbee:	add    QWORD PTR [r15],rdx
   14003cbf1:	add    DWORD PTR [rcx],esp
   14003cbf3:	add    BYTE PTR [rdx],ah
   14003cbf5:	add    BYTE PTR [rbx],ah
   14003cbf7:	add    BYTE PTR [rax+rax*1],ah
   14003cbfa:	and    eax,0x27002600
   14003cbff:	add    BYTE PTR [rax],ch
   14003cc01:	add    BYTE PTR [rcx],ch
   14003cc03:	add    BYTE PTR [rdx],ch
   14003cc05:	add    BYTE PTR [rbx],ch
   14003cc07:	add    BYTE PTR [rax+rax*1],ch
   14003cc0a:	sub    eax,0x2f002e00
   14003cc0f:	add    BYTE PTR [rax],dh
   14003cc11:	add    BYTE PTR [rcx],dh
   14003cc13:	add    BYTE PTR [rdx],dh
   14003cc15:	add    BYTE PTR [rbx],dh
   14003cc17:	add    BYTE PTR [rax+rax*1],dh
   14003cc1a:	xor    eax,0x37003600
   14003cc1f:	add    BYTE PTR [rax],bh
   14003cc21:	add    BYTE PTR [rcx],bh
   14003cc23:	add    BYTE PTR [rdx],bh
   14003cc25:	add    BYTE PTR [rbx],bh
   14003cc27:	add    BYTE PTR [rax+rax*1],bh
   14003cc2a:	cmp    eax,0x3f003e00
   14003cc2f:	add    BYTE PTR [rax+0x0],al
   14003cc32:	add    BYTE PTR [r10+0x0],al
   14003cc36:	add    BYTE PTR [r8+r8*1+0x45],al
   14003cc3b:	add    BYTE PTR [rsi+0x0],al
   14003cc3e:	rex.RXB add BYTE PTR [r8+0x0],r9b
   14003cc42:	rex.WB add BYTE PTR [r10+0x0],cl
   14003cc46:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
   14003cc4b:	add    BYTE PTR [rsi+0x0],cl
   14003cc4e:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   14003cc52:	push   rcx
   14003cc53:	add    BYTE PTR [rdx+0x0],dl
   14003cc56:	push   rbx
   14003cc57:	add    BYTE PTR [rax+rax*1+0x55],dl
   14003cc5b:	add    BYTE PTR [rsi+0x0],dl
   14003cc5e:	push   rdi
   14003cc5f:	add    BYTE PTR [rax+0x0],bl
   14003cc62:	pop    rcx
   14003cc63:	add    BYTE PTR [rdx+0x0],bl
   14003cc66:	pop    rbx
   14003cc67:	add    BYTE PTR [rax+rax*1+0x5d],bl
   14003cc6b:	add    BYTE PTR [rsi+0x0],bl
   14003cc6e:	pop    rdi
   14003cc6f:	add    BYTE PTR [rax+0x0],ah
   14003cc72:	(bad)  
   14003cc73:	add    BYTE PTR [rdx+0x0],ah
   14003cc76:	movsxd eax,DWORD PTR [rax]
   14003cc78:	add    BYTE PTR fs:[rbp+0x0],ah
   14003cc7c:	data16 add BYTE PTR [rdi+0x0],ah
   14003cc80:	push   0x6a006900
   14003cc85:	add    BYTE PTR [rbx+0x0],ch
   14003cc88:	ins    BYTE PTR es:[rdi],dx
   14003cc89:	add    BYTE PTR [rbp+0x0],ch
   14003cc8c:	outs   dx,BYTE PTR ds:[rsi]
   14003cc8d:	add    BYTE PTR [rdi+0x0],ch
   14003cc90:	jo     0x14003cc92
   14003cc92:	jno    0x14003cc94
   14003cc94:	jb     0x14003cc96
   14003cc96:	jae    0x14003cc98
   14003cc98:	je     0x14003cc9a
   14003cc9a:	jne    0x14003cc9c
   14003cc9c:	jbe    0x14003cc9e
   14003cc9e:	ja     0x14003cca0
   14003cca0:	js     0x14003cca2
   14003cca2:	jns    0x14003cca4
   14003cca4:	jp     0x14003cca6
   14003cca6:	jnp    0x14003cca8
   14003cca8:	jl     0x14003ccaa
   14003ccaa:	jge    0x14003ccac
   14003ccac:	jle    0x14003ccae
   14003ccae:	add    QWORD PTR [r8],r8
   14003ccb1:	add    BYTE PTR [rax],al
   14003ccb3:	add    BYTE PTR [rax],al
   14003ccb5:	add    BYTE PTR [rax],al
   14003ccb7:	add    BYTE PTR [rbp+0x53],dl
   14003ccba:	rex.RB
   14003ccbb:	rex.WRX push rbp
   14003ccbd:	rex.WXB
   14003ccbe:	rex.RB
   14003ccbf:	rex.WRX
   14003ccc0:	rex.XB
   14003ccc1:	rex.RB
   14003ccc2:	rex.RB
   14003ccc3:	rex.WRX
   14003ccc4:	rex.RB
   14003ccc5:	rex.WX
   14003ccc6:	rex.RB
   14003ccc7:	rex.WRX
   14003ccc8:	rex.WRXB pop r10
   14003ccca:	rex.RB
   14003cccb:	rex.WRX
   14003cccc:	rex.RX push rdx
   14003ccce:	rex.RX push rdx
   14003ccd0:	rex.XB
   14003ccd1:	rex.RX
   14003ccd2:	rex.RX push rdx
   14003ccd4:	rex.R
   14003ccd5:	rex.RB
   14003ccd6:	rex.R
   14003ccd7:	rex.RB push r11
   14003ccd9:	rex.R
   14003ccda:	rex.R
   14003ccdb:	rex.RB
   14003ccdc:	rex.X push rdx
   14003ccde:	push   rax
   14003ccdf:	rex.WRXB push r8
   14003cce1:	rex.WRXB push r8
   14003cce3:	rex.WRXB
   14003cce4:	rex.RB push r11
   14003cce6:	rex.RB push r11
   14003cce8:	rex.RB
   14003cce9:	rex.B
   14003ccea:	rex.RB push r11
   14003ccec:	add    BYTE PTR [rax],al
   14003ccee:	add    BYTE PTR [rax],al
   14003ccf0:	rex.W add al,0x63
   14003ccf3:	add    DWORD PTR [rsi],edi
   14003ccf5:	add    al,0xe
   14003ccf7:	add    al,0x3f
   14003ccf9:	add    al,0x38
   14003ccfb:	add    al,0x27
   14003ccfd:	add    al,0x28
   14003ccff:	add    al,0x3
   14003cd01:	add    DWORD PTR [rbx+0x4],ecx
   14003cd04:	mov    al,0x1
   14003cd06:	and    eax,DWORD PTR [rsi+riz*4]
   14003cd09:	add    DWORD PTR [rcx-0x51fe6fff],edx
   14003cd0f:	add    DWORD PTR [rdi+0x1e041d01],ebp
   14003cd15:	add    al,0x20
   14003cd17:	add    al,0x1f
   14003cd19:	add    al,0x3
   14003cd1b:	add    al,0x21
   14003cd1d:	add    al,0x22
   14003cd1f:	add    al,0x2
   14003cd21:	add    DWORD PTR [rcx],ebp
   14003cd23:	add    al,0xb1
   14003cd25:	add    DWORD PTR [rsp+rax*1],esp
   14003cd28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003cd29:	add    DWORD PTR [rbx-0x4efe55ff],ebp
   14003cd2f:	add    DWORD PTR [rax],esp
   14003cd31:	add    BYTE PTR [rdi],al
   14003cd33:	add    al,0x13
   14003cd35:	add    al,0xb
   14003cd37:	add    al,0x18
   14003cd39:	add    al,0xc
   14003cd3b:	add    al,0x7c
   14003cd3d:	add    BYTE PTR [rsi],al
   14003cd3f:	add    al,0x7
   14003cd41:	add    DWORD PTR [rdi],edx
   14003cd43:	add    al,0xf
   14003cd45:	add    al,0x9
   14003cd47:	add    al,0x14
   14003cd49:	(bad)  
   14003cd4a:	add    al,0x1
   14003cd4c:	(bad)  
   14003cd4d:	add    al,0x15
   14003cd4f:	add    DWORD PTR [rsi+rax*1],esp
   14003cd52:	add    DWORD PTR [rsi],eax
   14003cd54:	adc    al,0x4
   14003cd56:	sbb    al,BYTE PTR [rsp+rbx*1]
   14003cd59:	add    al,0x25
   14003cd5b:	(bad)  
   14003cd5c:	add    eax,0x3e060004
   14003cd61:	add    al,0x4e
   14003cd63:	add    al,0x10
   14003cd65:	add    al,0xa
   14003cd67:	add    al,0x12
   14003cd69:	add    al,0x11
   14003cd6b:	add    al,0x19
   14003cd6d:	add    al,0x8
   14003cd6f:	add    al,0x20
   14003cd71:	add    DWORD PTR [rdx],ebx
   14003cd73:	add    DWORD PTR [rcx+rax*1],ebx
   14003cd76:	add    QWORD PTR [rsi],r11
   14003cd79:	add    DWORD PTR [rdx],esp
   14003cd7b:	add    DWORD PTR [rcx+rax*1],esp
   14003cd7e:	add    DWORD PTR es:[rsi],ebp
   14003cd81:	add    DWORD PTR [rax],ebp
   14003cd83:	add    DWORD PTR [rdx],ebp
   14003cd85:	add    DWORD PTR [rcx+rax*1],ebp
   14003cd88:	add    DWORD PTR ss:[rax],esi
   14003cd8b:	add    DWORD PTR [rdx],esi
   14003cd8d:	add    DWORD PTR [rcx+rax*1],esi
   14003cd90:	push   rsi
   14003cd91:	add    DWORD PTR [rax],edi
   14003cd93:	add    DWORD PTR [rax+0x1],eax
   14003cd96:	cmp    al,BYTE PTR [rcx]
   14003cd98:	cmp    al,0x1
   14003cd9a:	push   rdx
   14003cd9b:	add    DWORD PTR [rsi],edi
   14003cd9d:	add    DWORD PTR [rdi],esp
   14003cd9f:	(bad)  
   14003cda0:	push   rax
   14003cda1:	add    DWORD PTR [rax+0x1],ecx
   14003cda4:	add    DWORD PTR [rcx+r8*1+0x46],eax
   14003cda9:	add    DWORD PTR [rcx+rax*1+0x58],edx
   14003cdad:	add    DWORD PTR [rdi],edx
   14003cdaf:	add    DWORD PTR [rcx],esp
   14003cdb1:	add    DWORD PTR [rbx],ebx
   14003cdb3:	add    DWORD PTR [rip+0x1f014d01],ebx        # 0x15f051aba
   14003cdb9:	add    DWORD PTR [rbx],esp
   14003cdbb:	add    DWORD PTR [rip+0x2f012701],esp        # 0x16f04f4c2
   14003cdc1:	add    DWORD PTR [rcx],ebp
   14003cdc3:	add    DWORD PTR [rbx],ebp
   14003cdc5:	add    DWORD PTR [rip+0x31013701],ebp        # 0x1710504cc
   14003cdcb:	add    DWORD PTR [rbx],esi
   14003cdcd:	add    DWORD PTR [rip+0x39015701],esi        # 0x1790524d4
   14003cdd3:	add    DWORD PTR [rcx+0x1],eax
   14003cdd6:	cmp    eax,DWORD PTR [rcx]
   14003cdd8:	cmp    eax,0x3f015301
   14003cddd:	add    DWORD PTR [rax],ecx
   14003cddf:	(bad)  
   14003cde0:	push   rcx
   14003cde1:	add    DWORD PTR [rcx+0x1],ecx
   14003cde4:	rex.XB add DWORD PTR [r13+0x1],eax
   14003cde8:	rex.RXB add DWORD PTR [r13+0x1],r10d
   14003cdec:	pop    rcx
   14003cded:	add    DWORD PTR [rbx+0x47012601],ecx
   14003cdf3:	add    DWORD PTR [rcx],ebp
   14003cdf5:	add    DWORD PTR [rip+0x21011f01],ebx        # 0x16104ecfc
   14003cdfb:	add    DWORD PTR [rbx],esp
   14003cdfd:	add    DWORD PTR [rdi],esp
   14003cdff:	add    DWORD PTR [rbx],ebp
   14003ce01:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x17504fd08
   14003ce07:	add    DWORD PTR [rbx],esi
   14003ce09:	add    DWORD PTR [rdi],esi
   14003ce0b:	add    DWORD PTR [rsi],ebx
   14003ce0d:	add    DWORD PTR [rdx],esp
   14003ce0f:	add    DWORD PTR [rax],ebp
   14003ce11:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d04f218
   14003ce17:	add    DWORD PTR [rdi],edi
   14003ce19:	add    DWORD PTR [rcx+0x1],eax
   14003ce1c:	add    DWORD PTR [r9+0x1],r9d
   14003ce20:	rex.WXB add QWORD PTR [r14],rdi
   14003ce23:	add    DWORD PTR [rsi+0x1],eax
   14003ce26:	adc    eax,DWORD PTR [rbx+rcx*1]
   14003ce29:	add    al,0xc
   14003ce2b:	add    al,0xd
   14003ce2d:	add    al,0xe
   14003ce2f:	add    al,0x1
   14003ce31:	or     al,BYTE PTR [rbx]
   14003ce33:	or     al,BYTE PTR [rip+0x90a070a]        # 0x1490dd543
   14003ce39:	or     cl,BYTE PTR [rbx]
   14003ce3b:	or     dl,BYTE PTR [rcx]
   14003ce3d:	or     dl,BYTE PTR [rbx]
   14003ce3f:	or     dl,BYTE PTR [rip+0x190a170a]        # 0x1590de54f
   14003ce45:	or     bl,BYTE PTR [rbx]
   14003ce47:	or     bl,BYTE PTR [rip+0x210a1f0a]        # 0x1610ded57
   14003ce4d:	or     al,BYTE PTR [rax]
   14003ce4f:	add    eax,DWORD PTR [rcx]
   14003ce51:	add    eax,DWORD PTR [rdx]
   14003ce53:	add    ecx,DWORD PTR [rcx]
   14003ce55:	add    edx,DWORD PTR [rax]
   14003ce57:	add    ebp,DWORD PTR [rax]
   14003ce59:	add    ebp,DWORD PTR [rbx+rax*1]
   14003ce5c:	and    eax,DWORD PTR [rbx]
   14003ce5e:	(bad)  
   14003ce5f:	add    ebx,DWORD PTR [rbx]
   14003ce61:	add    edx,DWORD PTR [rbx+rax*1]
   14003ce64:	(bad)  
   14003ce65:	add    edx,DWORD PTR [rdi]
   14003ce67:	add    esp,DWORD PTR [rbx+rax*1]
   14003ce6a:	and    BYTE PTR [rbx],al
   14003ce6c:	or     eax,DWORD PTR [rbx]
   14003ce6e:	or     eax,0xf031103
   14003ce73:	add    ecx,DWORD PTR [rsi]
   14003ce75:	add    ecx,DWORD PTR [rax]
   14003ce77:	add    edx,DWORD PTR [rdx]
   14003ce79:	add    esp,DWORD PTR [rsi]
   14003ce7b:	add    ebp,DWORD PTR [rdx]
   14003ce7d:	add    ebx,DWORD PTR [rax]
   14003ce7f:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a06ea88
   14003ce85:	add    ebx,DWORD PTR [rcx]
   14003ce87:	add    edx,DWORD PTR [rbx]
   14003ce89:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x16906fb92
   14003ce8f:	add    ebp,DWORD PTR [rbx]
   14003ce91:	add    esp,DWORD PTR [rdi]
   14003ce93:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e06ef9c
   14003ce99:	add    esp,DWORD PTR [rdx]
   14003ce9b:	add    ebp,DWORD PTR [rsi]
   14003ce9d:	add    ebp,DWORD PTR [rdi]
   14003ce9f:	add    ecx,DWORD PTR [rbx+rax*1]
   14003cea2:	or     al,BYTE PTR [rbx]
   14003cea4:	add    eax,DWORD PTR [rbx]
   14003cea6:	(bad)  
   14003cea7:	add    eax,DWORD PTR [rbx+rax*1]
   14003ceaa:	(bad)  
   14003ceab:	add    eax,DWORD PTR [rip+0x250a2303]        # 0x1650df1b4
   14003ceb1:	or     ah,BYTE PTR [rdi]
   14003ceb3:	or     ch,BYTE PTR [rcx]
   14003ceb5:	or     ch,BYTE PTR [rbx]
   14003ceb7:	or     ch,BYTE PTR [rip+0x310a2f0a]        # 0x1710dfdc7
   14003cebd:	or     dh,BYTE PTR [rbx]
   14003cebf:	or     dh,BYTE PTR [rip+0x390a370a]        # 0x1790e05cf
   14003cec5:	or     bh,BYTE PTR [rbx]
   14003cec7:	or     bh,BYTE PTR [rip+0x410a3f0a]        # 0x1810e0dd7
   14003cecd:	or     cl,BYTE PTR [rsi]
   14003cecf:	(bad)  
   14003ced0:	or     eax,0x206030a
   14003ced5:	(bad)  
   14003ced6:	add    BYTE PTR [rdi],al
   14003ced8:	add    DWORD PTR [rdi],eax
   14003ceda:	or     BYTE PTR [rsi],al
   14003cedc:	or     eax,0x1f062406
   14003cee1:	(bad)  
   14003cee2:	and    BYTE PTR [rsi],al
   14003cee4:	add    al,0x7
   14003cee6:	adc    eax,0x2041404
   14003ceeb:	add    al,0x20
   14003ceed:	add    BYTE PTR [rax],al
   14003ceef:	add    BYTE PTR [rsi],ah
   14003cef1:	add    DWORD PTR [rdi+0x1],eax
   14003cef4:	sub    DWORD PTR [rcx],eax
   14003cef6:	sbb    eax,0x21011f01
   14003cefb:	add    DWORD PTR [rbx],esp
   14003cefd:	add    DWORD PTR [rdi],esp
   14003ceff:	add    DWORD PTR [rbx],ebp
   14003cf01:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x17504fe08
   14003cf07:	add    DWORD PTR [rbx],esi
   14003cf09:	add    DWORD PTR [rdi],esi
   14003cf0b:	add    DWORD PTR [rsi],ebx
   14003cf0d:	add    DWORD PTR [rdx],esp
   14003cf0f:	add    DWORD PTR [rax],ebp
   14003cf11:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d04f318
   14003cf17:	add    DWORD PTR [rdi],edi
   14003cf19:	add    DWORD PTR [rcx+0x1],eax
   14003cf1c:	add    DWORD PTR [r9+0x1],r9d
   14003cf20:	rex.WXB add QWORD PTR [r14],rdi
   14003cf23:	add    DWORD PTR [rsi+0x1],eax
   14003cf26:	adc    eax,DWORD PTR [rbx+rcx*1]
   14003cf29:	add    al,0xc
   14003cf2b:	add    al,0xd
   14003cf2d:	add    al,0xe
   14003cf2f:	add    al,0x1b
   14003cf31:	add    DWORD PTR [rcx],esi
   14003cf33:	add    DWORD PTR [rbx],edi
   14003cf35:	add    DWORD PTR [rbx+0x1],eax
   14003cf38:	cmp    DWORD PTR [rcx],eax
   14003cf3a:	cmp    BYTE PTR [rcx],al
   14003cf3c:	(bad)  
   14003cf3e:	adc    BYTE PTR [rax+rcx*1],al
   14003cf41:	add    al,0x10
   14003cf43:	add    eax,0x4110614
   14003cf48:	adc    al,BYTE PTR [rdi+rax*1]
   14003cf4b:	add    al,0x9
   14003cf4d:	add    al,0xa
   14003cf4f:	add    al,0x0
   14003cf51:	add    eax,DWORD PTR [rcx]
   14003cf53:	add    eax,DWORD PTR [rdx]
   14003cf55:	add    ecx,DWORD PTR [rcx]
   14003cf57:	add    edx,DWORD PTR [rax]
   14003cf59:	add    ebp,DWORD PTR [rax]
   14003cf5b:	add    ebp,DWORD PTR [rbx+rax*1]
   14003cf5e:	and    eax,DWORD PTR [rbx]
   14003cf60:	(bad)  
   14003cf61:	add    ebx,DWORD PTR [rbx]
   14003cf63:	add    edx,DWORD PTR [rbx+rax*1]
   14003cf66:	(bad)  
   14003cf67:	add    edx,DWORD PTR [rdi]
   14003cf69:	add    esp,DWORD PTR [rbx+rax*1]
   14003cf6c:	and    BYTE PTR [rbx],al
   14003cf6e:	or     eax,DWORD PTR [rbx]
   14003cf70:	or     eax,0xf031103
   14003cf75:	add    ecx,DWORD PTR [rsi]
   14003cf77:	add    ecx,DWORD PTR [rax]
   14003cf79:	add    edx,DWORD PTR [rdx]
   14003cf7b:	add    esp,DWORD PTR [rsi]
   14003cf7d:	add    ebp,DWORD PTR [rdx]
   14003cf7f:	add    ebx,DWORD PTR [rax]
   14003cf81:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a06eb8a
   14003cf87:	add    ebx,DWORD PTR [rcx]
   14003cf89:	add    edx,DWORD PTR [rbx]
   14003cf8b:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x16906fc94
   14003cf91:	add    ebp,DWORD PTR [rbx]
   14003cf93:	add    esp,DWORD PTR [rdi]
   14003cf95:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e06f09e
   14003cf9b:	add    esp,DWORD PTR [rdx]
   14003cf9d:	add    ebp,DWORD PTR [rsi]
   14003cf9f:	add    ebp,DWORD PTR [rdi]
   14003cfa1:	add    ecx,DWORD PTR [rbx+rax*1]
   14003cfa4:	or     al,BYTE PTR [rbx]
   14003cfa6:	add    eax,DWORD PTR [rbx]
   14003cfa8:	(bad)  
   14003cfa9:	add    eax,DWORD PTR [rbx+rax*1]
   14003cfac:	(bad)  
   14003cfad:	add    eax,DWORD PTR [rip+0x17080103]        # 0x1570bd0b6
   14003cfb3:	add    DWORD PTR [rbp+0x1],ecx
   14003cfb6:	and    DWORD PTR [rax],ecx
   14003cfb8:	and    al,0x8
   14003cfba:	and    eax,0x29081908
   14003cfbf:	or     BYTE PTR [rax+rcx*1],ch
   14003cfc2:	adc    BYTE PTR [rax],cl
   14003cfc4:	xor    cl,BYTE PTR [rax]
   14003cfc6:	or     DWORD PTR [rax],ecx
   14003cfc8:	adc    eax,DWORD PTR [rsi]
   14003cfca:	push   rcx
   14003cfcb:	add    DWORD PTR [rbx],ecx
   14003cfcd:	or     BYTE PTR [rax],dl
   14003cfcf:	(bad)  
   14003cfd0:	(bad)  
   14003cfd1:	(bad)  
   14003cfd2:	add    DWORD PTR [rsi],eax
   14003cfd4:	add    eax,DWORD PTR [rsi]
   14003cfd6:	add    al,BYTE PTR [rsi]
   14003cfd8:	add    BYTE PTR [rdi],al
   14003cfda:	add    DWORD PTR [rdi],eax
   14003cfdc:	or     BYTE PTR [rsi],al
   14003cfde:	or     eax,0x53062406
   14003cfe3:	add    DWORD PTR [rax],esp
   14003cfe5:	(bad)  
   14003cfe6:	add    al,0x7
   14003cfe8:	adc    eax,0x2041404
   14003cfed:	add    al,0x20
   14003cfef:	add    BYTE PTR [rsi],ah
   14003cff1:	add    DWORD PTR [rdi+0x1],eax
   14003cff4:	sub    DWORD PTR [rcx],eax
   14003cff6:	sbb    eax,0x21011f01
   14003cffb:	add    DWORD PTR [rbx],esp
   14003cffd:	add    DWORD PTR [rdi],esp
   14003cfff:	add    DWORD PTR [rbx],ebp
   14003d001:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x17504ff08
   14003d007:	add    DWORD PTR [rbx],esi
   14003d009:	add    DWORD PTR [rdi],esi
   14003d00b:	add    DWORD PTR [rsi],ebx
   14003d00d:	add    DWORD PTR [rdx],esp
   14003d00f:	add    DWORD PTR [rax],ebp
   14003d011:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d04f418
   14003d017:	add    DWORD PTR [rdi],edi
   14003d019:	add    DWORD PTR [rcx+0x1],eax
   14003d01c:	add    DWORD PTR [r9+0x1],r9d
   14003d020:	rex.WXB add QWORD PTR [r14],rdi
   14003d023:	add    DWORD PTR [rsi+0x1],eax
   14003d026:	adc    eax,DWORD PTR [rbx+rcx*1]
   14003d029:	add    al,0x50
   14003d02b:	add    DWORD PTR [rip+0x1b040e04],ecx        # 0x15b07de35
   14003d031:	add    DWORD PTR [rcx],esi
   14003d033:	add    DWORD PTR [rbx],edi
   14003d035:	add    DWORD PTR [rbx+0x1],eax
   14003d038:	cmp    DWORD PTR [rcx],eax
   14003d03a:	cmp    BYTE PTR [rcx],al
   14003d03c:	(bad)  
   14003d03e:	adc    BYTE PTR [rax+rcx*1],al
   14003d041:	add    al,0x10
   14003d043:	add    eax,0x4110614
   14003d048:	adc    al,BYTE PTR [rdi+rax*1]
   14003d04b:	add    al,0x9
   14003d04d:	add    al,0xa
   14003d04f:	add    al,0x0
   14003d051:	add    eax,DWORD PTR [rcx]
   14003d053:	add    eax,DWORD PTR [rdx]
   14003d055:	add    ecx,DWORD PTR [rcx]
   14003d057:	add    edx,DWORD PTR [rax]
   14003d059:	add    ebp,DWORD PTR [rax]
   14003d05b:	add    ebp,DWORD PTR [rbx+rax*1]
   14003d05e:	and    eax,DWORD PTR [rbx]
   14003d060:	(bad)  
   14003d061:	add    ebx,DWORD PTR [rbx]
   14003d063:	add    edx,DWORD PTR [rbx+rax*1]
   14003d066:	(bad)  
   14003d067:	add    edx,DWORD PTR [rdi]
   14003d069:	add    esp,DWORD PTR [rbx+rax*1]
   14003d06c:	and    BYTE PTR [rbx],al
   14003d06e:	or     eax,DWORD PTR [rbx]
   14003d070:	or     eax,0xf031103
   14003d075:	add    ecx,DWORD PTR [rsi]
   14003d077:	add    ecx,DWORD PTR [rax]
   14003d079:	add    edx,DWORD PTR [rdx]
   14003d07b:	add    esp,DWORD PTR [rsi]
   14003d07d:	add    ebp,DWORD PTR [rdx]
   14003d07f:	add    ebx,DWORD PTR [rax]
   14003d081:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a06ec8a
   14003d087:	add    ebx,DWORD PTR [rcx]
   14003d089:	add    edx,DWORD PTR [rbx]
   14003d08b:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x16906fd94
   14003d091:	add    ebp,DWORD PTR [rbx]
   14003d093:	add    esp,DWORD PTR [rdi]
   14003d095:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e06f19e
   14003d09b:	add    esp,DWORD PTR [rdx]
   14003d09d:	add    ebp,DWORD PTR [rsi]
   14003d09f:	add    ebp,DWORD PTR [rdi]
   14003d0a1:	add    ecx,DWORD PTR [rbx+rax*1]
   14003d0a4:	or     al,BYTE PTR [rbx]
   14003d0a6:	add    eax,DWORD PTR [rbx]
   14003d0a8:	(bad)  
   14003d0a9:	add    eax,DWORD PTR [rbx+rax*1]
   14003d0ac:	(bad)  
   14003d0ad:	add    eax,DWORD PTR [rip+0x17080103]        # 0x1570bd1b6
   14003d0b3:	add    DWORD PTR [rsi],eax
   14003d0b5:	or     BYTE PTR [rcx],ah
   14003d0b7:	or     BYTE PTR [rax+rcx*1],ah
   14003d0ba:	and    eax,0x29081908
   14003d0bf:	or     BYTE PTR [rax+rcx*1],ch
   14003d0c2:	adc    BYTE PTR [rax],cl
   14003d0c4:	xor    cl,BYTE PTR [rax]
   14003d0c6:	or     DWORD PTR [rax],ecx
   14003d0c8:	adc    eax,DWORD PTR [rsi]
   14003d0ca:	push   rcx
   14003d0cb:	add    DWORD PTR [rbx],ecx
   14003d0cd:	or     BYTE PTR [rax],dl
   14003d0cf:	(bad)  
   14003d0d0:	(bad)  
   14003d0d1:	(bad)  
   14003d0d2:	add    DWORD PTR [rsi],eax
   14003d0d4:	add    eax,DWORD PTR [rsi]
   14003d0d6:	add    al,BYTE PTR [rsi]
   14003d0d8:	add    BYTE PTR [rdi],al
   14003d0da:	add    DWORD PTR [rdi],eax
   14003d0dc:	or     BYTE PTR [rsi],al
   14003d0de:	or     eax,0x1f062406
   14003d0e3:	(bad)  
   14003d0e4:	and    BYTE PTR [rsi],al
   14003d0e6:	add    al,0x7
   14003d0e8:	adc    eax,0x2041404
   14003d0ed:	add    al,0x20
   14003d0ef:	add    BYTE PTR [rsi],ah
   14003d0f1:	add    DWORD PTR [rdi+0x1],eax
   14003d0f4:	sub    DWORD PTR [rcx],eax
   14003d0f6:	sbb    eax,0x21011f01
   14003d0fb:	add    DWORD PTR [rbx],esp
   14003d0fd:	add    DWORD PTR [rdi],esp
   14003d0ff:	add    DWORD PTR [rbx],ebp
   14003d101:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x175050008
   14003d107:	add    DWORD PTR [rbx],esi
   14003d109:	add    DWORD PTR [rdi],esi
   14003d10b:	add    DWORD PTR [rsi],ebx
   14003d10d:	add    DWORD PTR [rdx],esp
   14003d10f:	add    DWORD PTR [rax],ebp
   14003d111:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d04f518
   14003d117:	add    DWORD PTR [rdi],edi
   14003d119:	add    DWORD PTR [rcx+0x1],eax
   14003d11c:	add    DWORD PTR [r9+0x1],r9d
   14003d120:	add    DWORD PTR [rax],ecx
   14003d122:	add    ecx,DWORD PTR [rax]
   14003d124:	(bad)  
   14003d125:	or     BYTE PTR [rcx],cl
   14003d127:	or     BYTE PTR [rbx],cl
   14003d129:	or     BYTE PTR [rip+0x11080f08],cl        # 0x1510be037
   14003d12f:	or     BYTE PTR [rbx],dl
   14003d131:	or     BYTE PTR [rip+0x19081708],dl        # 0x1590be83f
   14003d137:	or     BYTE PTR [rbx],bl
   14003d139:	or     BYTE PTR [rip+0x21081f08],bl        # 0x1610bf047
   14003d13f:	or     BYTE PTR [rbx],ah
   14003d141:	or     BYTE PTR [rip+0x29082708],ah        # 0x1690bf84f
   14003d147:	or     BYTE PTR [rbx],ch
   14003d149:	or     BYTE PTR [rip+0x31082f08],ch        # 0x1710c0057
   14003d14f:	or     BYTE PTR [rax],al
   14003d151:	add    eax,DWORD PTR [rcx]
   14003d153:	add    eax,DWORD PTR [rdx]
   14003d155:	add    ecx,DWORD PTR [rcx]
   14003d157:	add    edx,DWORD PTR [rax]
   14003d159:	add    ebp,DWORD PTR [rax]
   14003d15b:	add    ebp,DWORD PTR [rbx+rax*1]
   14003d15e:	and    eax,DWORD PTR [rbx]
   14003d160:	(bad)  
   14003d161:	add    ebx,DWORD PTR [rbx]
   14003d163:	add    edx,DWORD PTR [rbx+rax*1]
   14003d166:	(bad)  
   14003d167:	add    edx,DWORD PTR [rdi]
   14003d169:	add    esp,DWORD PTR [rbx+rax*1]
   14003d16c:	and    BYTE PTR [rbx],al
   14003d16e:	or     eax,DWORD PTR [rbx]
   14003d170:	or     eax,0xf031103
   14003d175:	add    ecx,DWORD PTR [rsi]
   14003d177:	add    ecx,DWORD PTR [rax]
   14003d179:	add    edx,DWORD PTR [rdx]
   14003d17b:	add    esp,DWORD PTR [rsi]
   14003d17d:	add    ebp,DWORD PTR [rdx]
   14003d17f:	add    ebx,DWORD PTR [rax]
   14003d181:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a06ed8a
   14003d187:	add    ebx,DWORD PTR [rcx]
   14003d189:	add    edx,DWORD PTR [rbx]
   14003d18b:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x16906fe94
   14003d191:	add    ebp,DWORD PTR [rbx]
   14003d193:	add    esp,DWORD PTR [rdi]
   14003d195:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e06f29e
   14003d19b:	add    esp,DWORD PTR [rdx]
   14003d19d:	add    ebp,DWORD PTR [rsi]
   14003d19f:	add    ebp,DWORD PTR [rdi]
   14003d1a1:	add    ecx,DWORD PTR [rbx+rax*1]
   14003d1a4:	or     al,BYTE PTR [rbx]
   14003d1a6:	add    eax,DWORD PTR [rbx]
   14003d1a8:	(bad)  
   14003d1a9:	add    eax,DWORD PTR [rbx+rax*1]
   14003d1ac:	(bad)  
   14003d1ad:	add    eax,DWORD PTR [rip+0x35083303]        # 0x1750c04b6
   14003d1b3:	or     BYTE PTR [rdi],dh
   14003d1b5:	or     BYTE PTR [rcx],bh
   14003d1b7:	or     BYTE PTR [rip+0x3f083b08],bh        # 0x17f0c0cc5
   14003d1bd:	or     BYTE PTR [rcx+0x8],al
   14003d1c0:	rex.XB or BYTE PTR [r13+0x8],al
   14003d1c4:	add    BYTE PTR [rax],cl
   14003d1c6:	sbb    BYTE PTR [rax],cl
   14003d1c8:	sub    BYTE PTR [rax],cl
   14003d1ca:	push   rcx
   14003d1cb:	add    DWORD PTR [rbx],ecx
   14003d1cd:	or     BYTE PTR [rax],dl
   14003d1cf:	(bad)  
   14003d1d0:	(bad)  
   14003d1d1:	(bad)  
   14003d1d2:	add    DWORD PTR [rsi],eax
   14003d1d4:	add    eax,DWORD PTR [rsi]
   14003d1d6:	add    al,BYTE PTR [rsi]
   14003d1d8:	add    BYTE PTR [rdi],al
   14003d1da:	add    DWORD PTR [rdi],eax
   14003d1dc:	or     BYTE PTR [rsi],al
   14003d1de:	or     eax,0x1f062406
   14003d1e3:	(bad)  
   14003d1e4:	movabs ds:0x20414041508b708,al
   14003d1ed:	add    al,0x20
   14003d1ef:	add    BYTE PTR [rsi],ah
   14003d1f1:	add    DWORD PTR [rdi+0x1],eax
   14003d1f4:	sub    DWORD PTR [rcx],eax
   14003d1f6:	sbb    eax,0x21011f01
   14003d1fb:	add    DWORD PTR [rbx],esp
   14003d1fd:	add    DWORD PTR [rdi],esp
   14003d1ff:	add    DWORD PTR [rbx],ebp
   14003d201:	add    DWORD PTR [rip+0x35012f01],ebp        # 0x175050108
   14003d207:	add    DWORD PTR [rbx],esi
   14003d209:	add    DWORD PTR [rdi],esi
   14003d20b:	add    DWORD PTR [rsi],ebx
   14003d20d:	add    DWORD PTR [rdx],esp
   14003d20f:	add    DWORD PTR [rax],ebp
   14003d211:	add    DWORD PTR [rip+0x3d012401],esp        # 0x17d04f618
   14003d217:	add    DWORD PTR [rdi],edi
   14003d219:	add    DWORD PTR [rcx+0x1],eax
   14003d21c:	add    DWORD PTR [r9+0x1],r9d
   14003d220:	rex.WXB add QWORD PTR [r14],rdi
   14003d223:	add    DWORD PTR [rsi+0x1],eax
   14003d226:	adc    eax,DWORD PTR [rbx+rcx*1]
   14003d229:	add    al,0xc
   14003d22b:	add    al,0xd
   14003d22d:	add    al,0xe
   14003d22f:	add    al,0x1b
   14003d231:	add    DWORD PTR [rcx],esi
   14003d233:	add    DWORD PTR [rbx],edi
   14003d235:	add    DWORD PTR [rbx+0x1],eax
   14003d238:	cmp    DWORD PTR [rcx],eax
   14003d23a:	cmp    BYTE PTR [rcx],al
   14003d23c:	(bad)  
   14003d23e:	adc    BYTE PTR [rax+rcx*1],al
   14003d241:	add    al,0x10
   14003d243:	add    eax,0x4110614
   14003d248:	adc    al,BYTE PTR [rdi+rax*1]
   14003d24b:	add    al,0x9
   14003d24d:	add    al,0xa
   14003d24f:	add    al,0x0
   14003d251:	add    eax,DWORD PTR [rcx]
   14003d253:	add    eax,DWORD PTR [rdx]
   14003d255:	add    ecx,DWORD PTR [rcx]
   14003d257:	add    edx,DWORD PTR [rax]
   14003d259:	add    ebp,DWORD PTR [rax]
   14003d25b:	add    ebp,DWORD PTR [rbx+rax*1]
   14003d25e:	and    eax,DWORD PTR [rbx]
   14003d260:	(bad)  
   14003d261:	add    ebx,DWORD PTR [rbx]
   14003d263:	add    edx,DWORD PTR [rbx+rax*1]
   14003d266:	(bad)  
   14003d267:	add    edx,DWORD PTR [rdi]
   14003d269:	add    esp,DWORD PTR [rbx+rax*1]
   14003d26c:	and    BYTE PTR [rbx],al
   14003d26e:	or     eax,DWORD PTR [rbx]
   14003d270:	or     eax,0xf031103
   14003d275:	add    ecx,DWORD PTR [rsi]
   14003d277:	add    ecx,DWORD PTR [rax]
   14003d279:	add    edx,DWORD PTR [rdx]
   14003d27b:	add    esp,DWORD PTR [rsi]
   14003d27d:	add    ebp,DWORD PTR [rdx]
   14003d27f:	add    ebx,DWORD PTR [rax]
   14003d281:	add    edx,DWORD PTR [rip+0x1a031c03]        # 0x15a06ee8a
   14003d287:	add    ebx,DWORD PTR [rcx]
   14003d289:	add    edx,DWORD PTR [rbx]
   14003d28b:	add    ebx,DWORD PTR [rip+0x29032d03]        # 0x16906ff94
   14003d291:	add    ebp,DWORD PTR [rbx]
   14003d293:	add    esp,DWORD PTR [rdi]
   14003d295:	add    esp,DWORD PTR [rip+0x1e032103]        # 0x15e06f39e
   14003d29b:	add    esp,DWORD PTR [rdx]
   14003d29d:	add    ebp,DWORD PTR [rsi]
   14003d29f:	add    ebp,DWORD PTR [rdi]
   14003d2a1:	add    ecx,DWORD PTR [rbx+rax*1]
   14003d2a4:	or     al,BYTE PTR [rbx]
   14003d2a6:	add    eax,DWORD PTR [rbx]
   14003d2a8:	(bad)  
   14003d2a9:	add    eax,DWORD PTR [rbx+rax*1]
   14003d2ac:	(bad)  
   14003d2ad:	add    eax,DWORD PTR [rip+0x17080103]        # 0x1570bd3b6
   14003d2b3:	add    DWORD PTR [rsi],eax
   14003d2b5:	or     BYTE PTR [rcx],ah
   14003d2b7:	or     BYTE PTR [rax+rcx*1],ah
   14003d2ba:	and    eax,0x29081908
   14003d2bf:	or     BYTE PTR [rax+rcx*1],ch
   14003d2c2:	adc    BYTE PTR [rax],cl
   14003d2c4:	xor    cl,BYTE PTR [rax]
   14003d2c6:	or     DWORD PTR [rax],ecx
   14003d2c8:	adc    eax,DWORD PTR [rsi]
   14003d2ca:	push   rcx
   14003d2cb:	add    DWORD PTR [rbx],ecx
   14003d2cd:	or     BYTE PTR [rax],dl
   14003d2cf:	(bad)  
   14003d2d0:	(bad)  
   14003d2d1:	(bad)  
   14003d2d2:	add    DWORD PTR [rsi],eax
   14003d2d4:	add    eax,DWORD PTR [rsi]
   14003d2d6:	add    al,BYTE PTR [rsi]
   14003d2d8:	add    BYTE PTR [rdi],al
   14003d2da:	add    DWORD PTR [rdi],eax
   14003d2dc:	or     BYTE PTR [rsi],al
   14003d2de:	or     eax,0x1f062406
   14003d2e3:	(bad)  
   14003d2e4:	and    BYTE PTR [rsi],al
   14003d2e6:	add    al,0x7
   14003d2e8:	adc    eax,0x2041404
   14003d2ed:	add    al,0x20
	...
   14003d30f:	add    BYTE PTR [rcx],al
   14003d311:	add    BYTE PTR [rax],al
   14003d313:	add    BYTE PTR [rax],al
   14003d315:	add    BYTE PTR [rax],al
   14003d317:	add    BYTE PTR [rax],bl
   14003d319:	add    al,BYTE PTR [rbx]
   14003d31b:	rex add DWORD PTR [rax],eax
   14003d31e:	add    BYTE PTR [rax],al
   14003d320:	push   rax
   14003d321:	add    al,BYTE PTR [rbx]
   14003d323:	rex add DWORD PTR [rax],eax
   14003d326:	add    BYTE PTR [rax],al
   14003d328:	push   rax
   14003d329:	inc    DWORD PTR [rdx]
   14003d32b:	rex add DWORD PTR [rax],eax
   14003d32e:	add    BYTE PTR [rax],al
   14003d330:	and    dh,bh
   14003d332:	add    al,BYTE PTR [rax+0x1]
	...
   14003d33d:	add    BYTE PTR [rax],al
   14003d33f:	add    BYTE PTR [rsi],ch
   14003d341:	(bad)  
   14003d342:	push   r14
   14003d344:	je     0x14003d3bf
   14003d346:	jo     0x14003d3ad
   14003d348:	pop    rdi
   14003d349:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14003d350:	and    dh,bh
   14003d352:	add    al,BYTE PTR [rax+0x1]
	...
   14003d35d:	add    BYTE PTR [rax],al
   14003d35f:	add    BYTE PTR [rsi],ch
   14003d361:	(bad)  
   14003d362:	push   r14
   14003d364:	rex.XB
   14003d365:	rex.XB ins DWORD PTR es:[rdi],dx
   14003d367:	fs push rsp
   14003d369:	(bad)  
   14003d36a:	jb     0x14003d3d3
   14003d36c:	gs je  0x14003d3af
   14003d36f:	add    BYTE PTR [rax],al
   14003d372:	add    BYTE PTR [rax],al
   14003d374:	add    BYTE PTR [rax],al
   14003d376:	add    BYTE PTR [rax],al
   14003d378:	and    dh,bh
   14003d37a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d385:	add    BYTE PTR [rax],al
   14003d387:	add    BYTE PTR [rsi],ch
   14003d389:	(bad)  
   14003d38a:	push   r14
   14003d38c:	rex.XB
   14003d38d:	rex.WRXB (bad) 
   14003d38f:	push   0x65
   14003d391:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14003d395:	add    BYTE PTR [rax],al
   14003d397:	add    BYTE PTR [rax],ah
   14003d399:	inc    BYTE PTR [rdx]
   14003d39b:	rex add DWORD PTR [rax],eax
	...
   14003d3a6:	add    BYTE PTR [rax],al
   14003d3a8:	cs (bad) 
   14003d3aa:	push   r14
   14003d3ac:	pop    rdi
   14003d3ad:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14003d3af:	jae    0x14003d425
   14003d3b1:	jb     0x14003d418
   14003d3b3:	(bad)  
   14003d3b4:	ins    DWORD PTR es:[rdi],dx
   14003d3b5:	pop    rdi
   14003d3b6:	gs jb  0x14003d42b
   14003d3b9:	outs   dx,DWORD PTR ds:[rsi]
   14003d3ba:	jb     0x14003d41b
   14003d3bc:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d3bf:	outs   dx,DWORD PTR gs:[esi]
   14003d3c2:	jb     0x14003d43d
   14003d3c4:	rex jae 0x14003d43b
   14003d3c7:	fs rex
   14003d3c9:	add    BYTE PTR [rax],al
   14003d3cc:	add    BYTE PTR [rax],al
   14003d3ce:	add    BYTE PTR [rax],al
   14003d3d0:	and    dh,bh
   14003d3d2:	add    al,BYTE PTR [rax+0x1]
	...
   14003d3dd:	add    BYTE PTR [rax],al
   14003d3df:	add    BYTE PTR [rsi],ch
   14003d3e1:	(bad)  
   14003d3e2:	push   r14
   14003d3e4:	rex.XB push r15
   14003d3e6:	imul   ebp,DWORD PTR [rsi+0x54],0x61657268
   14003d3ed:	fs rex
   14003d3ef:	add    BYTE PTR [rax],al
   14003d3f2:	add    BYTE PTR [rax],al
   14003d3f4:	add    BYTE PTR [rax],al
   14003d3f6:	add    BYTE PTR [rax],al
   14003d3f8:	and    dh,bh
   14003d3fa:	add    al,BYTE PTR [rax+0x1]
	...
   14003d405:	add    BYTE PTR [rax],al
   14003d407:	add    BYTE PTR [rsi],ch
   14003d409:	(bad)  
   14003d40a:	push   r14
   14003d40c:	pop    rdi
   14003d40d:	push   rbx
   14003d40e:	jns    0x14003d483
   14003d410:	je     0x14003d477
   14003d412:	ins    DWORD PTR es:[rdi],dx
   14003d413:	pop    rdi
   14003d414:	gs jb  0x14003d489
   14003d417:	outs   dx,DWORD PTR ds:[rsi]
   14003d418:	jb     0x14003d479
   14003d41a:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d41d:	outs   dx,DWORD PTR gs:[esi]
   14003d420:	jb     0x14003d49b
   14003d422:	rex jae 0x14003d499
   14003d425:	fs rex
   14003d427:	add    BYTE PTR [rax],al
   14003d42a:	add    BYTE PTR [rax],al
   14003d42c:	add    BYTE PTR [rax],al
   14003d42e:	add    BYTE PTR [rax],al
   14003d430:	and    dh,bh
   14003d432:	add    al,BYTE PTR [rax+0x1]
	...
   14003d43d:	add    BYTE PTR [rax],al
   14003d43f:	add    BYTE PTR [rsi],ch
   14003d441:	(bad)  
   14003d442:	push   r14
   14003d444:	gs jb  0x14003d4b9
   14003d447:	outs   dx,DWORD PTR ds:[rsi]
   14003d448:	jb     0x14003d4a9
   14003d44a:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d44d:	outs   dx,DWORD PTR gs:[esi]
   14003d450:	jb     0x14003d4cb
   14003d452:	rex jae 0x14003d4c9
   14003d455:	fs rex
   14003d457:	add    BYTE PTR [rax],al
   14003d45a:	add    BYTE PTR [rax],al
   14003d45c:	add    BYTE PTR [rax],al
   14003d45e:	add    BYTE PTR [rax],al
   14003d460:	and    dh,bh
   14003d462:	add    al,BYTE PTR [rax+0x1]
	...
   14003d46d:	add    BYTE PTR [rax],al
   14003d46f:	add    BYTE PTR [rsi],ch
   14003d471:	(bad)  
   14003d472:	push   r14
   14003d474:	rex.XB push r15
   14003d476:	imul   ebp,DWORD PTR [rsi+0x41],0x40407070
   14003d47d:	add    BYTE PTR [rax],al
   14003d47f:	add    BYTE PTR [rax],ah
   14003d481:	inc    BYTE PTR [rdx]
   14003d483:	rex add DWORD PTR [rax],eax
	...
   14003d48e:	add    BYTE PTR [rax],al
   14003d490:	cs (bad) 
   14003d492:	push   r14
   14003d494:	pop    rdi
   14003d495:	rex.RXB
   14003d496:	outs   dx,BYTE PTR gs:[rsi]
   14003d498:	gs jb  0x14003d504
   14003d49b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14003d49e:	jb     0x14003d512
   14003d4a0:	outs   dx,DWORD PTR ds:[rsi]
   14003d4a1:	jb     0x14003d502
   14003d4a3:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d4a6:	outs   dx,DWORD PTR gs:[esi]
   14003d4a9:	jb     0x14003d524
   14003d4ab:	rex jae 0x14003d522
   14003d4ae:	fs rex
   14003d4b0:	add    BYTE PTR [rax],al
   14003d4b3:	add    BYTE PTR [rax],al
   14003d4b5:	add    BYTE PTR [rax],al
   14003d4b7:	add    BYTE PTR [rax],ah
   14003d4b9:	inc    BYTE PTR [rdx]
   14003d4bb:	rex add DWORD PTR [rax],eax
	...
   14003d4c6:	add    BYTE PTR [rax],al
   14003d4c8:	cs (bad) 
   14003d4ca:	push   r14
   14003d4cc:	rex.XB push r11
   14003d4ce:	jo     0x14003d545
   14003d4d0:	je     0x14003d53e
   14003d4d2:	rex.B jo 0x14003d545
   14003d4d5:	rex
   14003d4d6:	add    BYTE PTR [rax],spl
   14003d4d9:	inc    BYTE PTR [rdx]
   14003d4db:	rex add DWORD PTR [rax],eax
	...
   14003d4e6:	add    BYTE PTR [rax],al
   14003d4e8:	cs (bad) 
   14003d4ea:	push   r14
   14003d4ec:	rex.XB push r11
   14003d4ee:	je     0x14003d551
   14003d4f0:	je     0x14003d55b
   14003d4f2:	movsxd eax,DWORD PTR [rax+0x40]
   14003d4f5:	add    BYTE PTR [rax],al
   14003d4f7:	add    BYTE PTR [rax],ah
   14003d4f9:	inc    BYTE PTR [rdx]
   14003d4fb:	rex add DWORD PTR [rax],eax
	...
   14003d506:	add    BYTE PTR [rax],al
   14003d508:	cs (bad) 
   14003d50a:	push   r14
   14003d50c:	rex.XB
   14003d50d:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003d515:	add    BYTE PTR [rax],al
   14003d517:	add    BYTE PTR [rax],ah
   14003d519:	inc    BYTE PTR [rdx]
   14003d51b:	rex add DWORD PTR [rax],eax
	...
   14003d526:	add    BYTE PTR [rax],al
   14003d528:	cs (bad) 
   14003d52a:	push   r14
   14003d52c:	rex.XB push r11
   14003d52e:	push   rax
   14003d52f:	push   rbp
   14003d530:	rex.B
   14003d531:	fs fs rex
   14003d534:	add    BYTE PTR [rax],al
   14003d537:	add    BYTE PTR [rax],ah
   14003d539:	inc    BYTE PTR [rdx]
   14003d53b:	rex add DWORD PTR [rax],eax
	...
   14003d546:	add    BYTE PTR [rax],al
   14003d548:	cs (bad) 
   14003d54a:	push   r14
   14003d54c:	rex.XB
   14003d54d:	rex.RB
   14003d54e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x0
   14003d557:	add    BYTE PTR [rax],ah
   14003d559:	inc    BYTE PTR [rdx]
   14003d55b:	rex add DWORD PTR [rax],eax
	...
   14003d566:	add    BYTE PTR [rax],al
   14003d568:	cs (bad) 
   14003d56a:	push   r14
   14003d56c:	rex.XB push r15
   14003d56e:	outs   dx,BYTE PTR ds:[rsi]
   14003d56f:	fs rex
   14003d571:	add    BYTE PTR [rax],al
   14003d574:	add    BYTE PTR [rax],al
   14003d576:	add    BYTE PTR [rax],al
   14003d578:	and    dh,bh
   14003d57a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d585:	add    BYTE PTR [rax],al
   14003d587:	add    BYTE PTR [rsi],ch
   14003d589:	(bad)  
   14003d58a:	push   r14
   14003d58c:	rex.XB push r8
   14003d58e:	jb     0x14003d5ff
   14003d590:	addr32 jb 0x14003d5f8
   14003d593:	jae    0x14003d608
   14003d595:	rex.XB je 0x14003d60a
   14003d598:	ins    BYTE PTR es:[rdi],dx
   14003d599:	rex
   14003d59a:	add    BYTE PTR [rax],al
   14003d59d:	add    BYTE PTR [rax],al
   14003d59f:	add    BYTE PTR [rax],ah
   14003d5a1:	inc    BYTE PTR [rdx]
   14003d5a3:	rex add DWORD PTR [rax],eax
	...
   14003d5ae:	add    BYTE PTR [rax],al
   14003d5b0:	cs (bad) 
   14003d5b2:	push   r14
   14003d5b4:	rex.XB
   14003d5b5:	rex.X jne 0x14003d62c
   14003d5b8:	je     0x14003d629
   14003d5ba:	outs   dx,BYTE PTR ds:[rsi]
   14003d5bb:	rex
   14003d5bc:	add    BYTE PTR [rax],al
   14003d5bf:	add    BYTE PTR [rax],ah
   14003d5c1:	inc    BYTE PTR [rdx]
   14003d5c3:	rex add DWORD PTR [rax],eax
	...
   14003d5ce:	add    BYTE PTR [rax],al
   14003d5d0:	cs (bad) 
   14003d5d2:	push   r14
   14003d5d4:	push   rdi
   14003d5d5:	rex.XB ins DWORD PTR es:[rdi],dx
   14003d5d7:	outs   dx,BYTE PTR ds:[rsi]
   14003d5d8:	push   rbp
   14003d5d9:	rex.WB pop r15
   14003d5db:	push   rax
   14003d5dc:	jb     0x14003d64d
   14003d5de:	jo     0x14003d645
   14003d5e0:	jb     0x14003d656
   14003d5e2:	jns    0x14003d634
   14003d5e4:	(bad)  
   14003d5e5:	addr32 gs rex
   14003d5e8:	add    BYTE PTR [rax],al
   14003d5eb:	add    BYTE PTR [rax],al
   14003d5ed:	add    BYTE PTR [rax],al
   14003d5ef:	add    BYTE PTR [rax],ah
   14003d5f1:	inc    BYTE PTR [rdx]
   14003d5f3:	rex add DWORD PTR [rax],eax
	...
   14003d5fe:	add    BYTE PTR [rax],al
   14003d600:	cs (bad) 
   14003d602:	push   r14
   14003d604:	rex.XB
   14003d605:	imul   r14,QWORD PTR [rbx+0x74],0x40786f42
   14003d60d:	add    BYTE PTR [rax],al
   14003d610:	and    dh,bh
   14003d612:	add    al,BYTE PTR [rax+0x1]
	...
   14003d61d:	add    BYTE PTR [rax],al
   14003d61f:	add    BYTE PTR [rsi],ch
   14003d621:	(bad)  
   14003d622:	push   r14
   14003d624:	rex.XB push r8
   14003d626:	jb     0x14003d697
   14003d628:	jo     0x14003d68f
   14003d62a:	jb     0x14003d6a0
   14003d62c:	jns    0x14003d67e
   14003d62e:	(bad)  
   14003d62f:	addr32 gs rex
   14003d632:	add    BYTE PTR [rax],al
   14003d635:	add    BYTE PTR [rax],al
   14003d637:	add    BYTE PTR [rax],ah
   14003d639:	inc    BYTE PTR [rdx]
   14003d63b:	rex add DWORD PTR [rax],eax
	...
   14003d646:	add    BYTE PTR [rax],al
   14003d648:	cs (bad) 
   14003d64a:	push   r14
   14003d64c:	rex.XB
   14003d64d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003d64f:	ins    DWORD PTR es:[rdi],dx
   14003d650:	(bad)  
   14003d651:	outs   dx,DWORD PTR ds:[rsi]
   14003d652:	rex.X outs dx,DWORD PTR ds:[rsi]
   14003d654:	js     0x14003d696
   14003d656:	add    BYTE PTR [rax],spl
   14003d659:	inc    BYTE PTR [rdx]
   14003d65b:	rex add DWORD PTR [rax],eax
	...
   14003d666:	add    BYTE PTR [rax],al
   14003d668:	cs (bad) 
   14003d66a:	push   r14
   14003d66c:	rex.XB push r11
   14003d66e:	push   rax
   14003d66f:	push   rbp
   14003d670:	rex.XB outs dx,BYTE PTR ds:[rsi]
   14003d672:	jbe    0x14003d6e6
   14003d674:	je     0x14003d6b6
   14003d676:	add    BYTE PTR [rax],spl
   14003d679:	inc    BYTE PTR [rdx]
   14003d67b:	rex add DWORD PTR [rax],eax
	...
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	cs (bad) 
   14003d68a:	push   r14
   14003d68c:	rex.XB push r11
   14003d68e:	push   rax
   14003d68f:	push   rbp
   14003d690:	rex.R
   14003d691:	gs ins BYTE PTR es:[rdi],dx
   14003d693:	rex
   14003d694:	add    BYTE PTR [rax],al
   14003d697:	add    BYTE PTR [rax],ah
   14003d699:	inc    BYTE PTR [rdx]
   14003d69b:	rex add DWORD PTR [rax],eax
	...
   14003d6a6:	add    BYTE PTR [rax],al
   14003d6a8:	cs (bad) 
   14003d6aa:	push   r14
   14003d6ac:	rex.XB push r11
   14003d6ae:	push   rax
   14003d6af:	push   rbp
   14003d6b0:	rex.WRB
   14003d6b1:	gs jb  0x14003d71b
   14003d6b4:	gs rex
   14003d6b6:	add    BYTE PTR [rax],spl
   14003d6b9:	inc    BYTE PTR [rdx]
   14003d6bb:	rex add DWORD PTR [rax],eax
	...
   14003d6c6:	add    BYTE PTR [rax],al
   14003d6c8:	cs (bad) 
   14003d6ca:	push   r14
   14003d6cc:	rex.XB push r11
   14003d6ce:	push   rax
   14003d6cf:	push   rbp
   14003d6d0:	push   rsp
   14003d6d1:	(bad)  
   14003d6d2:	(bad)  
   14003d6d4:	rex
   14003d6d5:	add    BYTE PTR [rax],al
   14003d6d8:	and    dh,bh
   14003d6da:	add    al,BYTE PTR [rax+0x1]
	...
   14003d6e5:	add    BYTE PTR [rax],al
   14003d6e7:	add    BYTE PTR [rsi],ch
   14003d6e9:	(bad)  
   14003d6ea:	push   r14
   14003d6ec:	rex.WB
   14003d6ed:	imul   r15,QWORD PTR [r8+0x69],0x40406e
   14003d6f5:	add    BYTE PTR [rax],al
   14003d6f7:	add    BYTE PTR [rax],ah
   14003d6f9:	inc    BYTE PTR [rdx]
   14003d6fb:	rex add DWORD PTR [rax],eax
	...
   14003d706:	add    BYTE PTR [rax],al
   14003d708:	cs (bad) 
   14003d70a:	push   r14
   14003d70c:	rex.XB
   14003d70d:	rex.B (bad) 
   14003d70f:	outs   dx,DWORD PTR ds:[rsi]
   14003d710:	jne    0x14003d786
   14003d712:	rex.R ins BYTE PTR es:[rdi],dx
   14003d714:	addr32 rex
   14003d716:	add    BYTE PTR [rax],spl
   14003d719:	inc    BYTE PTR [rdx]
   14003d71b:	rex add DWORD PTR [rax],eax
	...
   14003d726:	add    BYTE PTR [rax],al
   14003d728:	cs (bad) 
   14003d72a:	push   r14
   14003d72c:	push   rdi
   14003d72d:	rex.RX jb 0x14003d791
   14003d730:	ins    DWORD PTR es:[rdi],dx
   14003d731:	gs rex.XB push 0x656d6f72
   14003d738:	imul   r15,QWORD PTR [r8+0x69],0x40406e
   14003d740:	and    dh,bh
   14003d742:	add    al,BYTE PTR [rax+0x1]
	...
   14003d74d:	add    BYTE PTR [rax],al
   14003d74f:	add    BYTE PTR [rsi],ch
   14003d751:	(bad)  
   14003d752:	push   r14
   14003d754:	push   rdi
   14003d755:	rex.XB ins DWORD PTR es:[rdi],dx
   14003d757:	outs   dx,BYTE PTR ds:[rsi]
   14003d758:	push   rbp
   14003d759:	rex.WB pop r15
   14003d75b:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14003d763:	add    BYTE PTR [rax],al
   14003d765:	add    BYTE PTR [rax],al
   14003d767:	add    BYTE PTR [rax],ah
   14003d769:	inc    BYTE PTR [rdx]
   14003d76b:	rex add DWORD PTR [rax],eax
	...
   14003d776:	add    BYTE PTR [rax],al
   14003d778:	cs (bad) 
   14003d77a:	push   r14
   14003d77c:	push   rdi
   14003d77d:	rex.XB ins DWORD PTR es:[rdi],dx
   14003d77f:	outs   dx,BYTE PTR ds:[rsi]
   14003d780:	push   rbp
   14003d781:	rex.WB pop r15
   14003d783:	push   rax
   14003d784:	jb     0x14003d7f5
   14003d786:	jo     0x14003d7ed
   14003d788:	jb     0x14003d7fe
   14003d78a:	jns    0x14003d7df
   14003d78c:	push   0x40746565
   14003d791:	add    BYTE PTR [rax],al
   14003d794:	add    BYTE PTR [rax],al
   14003d796:	add    BYTE PTR [rax],al
   14003d798:	and    dh,bh
   14003d79a:	add    al,BYTE PTR [rax+0x1]
	...
   14003d7a5:	add    BYTE PTR [rax],al
   14003d7a7:	add    BYTE PTR [rsi],ch
   14003d7a9:	(bad)  
   14003d7aa:	push   r14
   14003d7ac:	rex.XB push r8
   14003d7ae:	jb     0x14003d81f
   14003d7b0:	jo     0x14003d817
   14003d7b2:	jb     0x14003d828
   14003d7b4:	jns    0x14003d809
   14003d7b6:	push   0x40746565
   14003d7bb:	add    BYTE PTR [rax],al
   14003d7be:	add    BYTE PTR [rax],al
   14003d7c0:	and    dh,bh
   14003d7c2:	add    al,BYTE PTR [rax+0x1]
	...
   14003d7cd:	add    BYTE PTR [rax],al
   14003d7cf:	add    BYTE PTR [rsi],ch
   14003d7d1:	(bad)  
   14003d7d2:	push   r14
   14003d7d4:	rex.XB push r11
   14003d7d6:	push   rax
   14003d7d7:	push   rbp
   14003d7d8:	push   rsi
   14003d7d9:	imul   esp,DWORD PTR [rbp+0x77],0x4040
   14003d7e0:	and    dh,bh
   14003d7e2:	add    al,BYTE PTR [rax+0x1]
	...
   14003d7ed:	add    BYTE PTR [rax],al
   14003d7ef:	add    BYTE PTR [rsi],ch
   14003d7f1:	(bad)  
   14003d7f2:	push   r14
   14003d7f4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003d7f6:	ins    DWORD PTR es:[rdi],dx
   14003d7f7:	push   rbx
   14003d7f8:	jne    0x14003d85c
   14003d7fa:	jae    0x14003d870
   14003d7fc:	rex push rdi
   14003d7fe:	jb     0x14003d869
   14003d800:	je     0x14003d86b
   14003d802:	outs   dx,BYTE PTR ds:[rsi]
   14003d803:	addr32 push rsp
   14003d805:	outs   dx,DWORD PTR ds:[rsi]
   14003d806:	outs   dx,DWORD PTR ds:[rsi]
   14003d807:	ins    BYTE PTR es:[rdi],dx
   14003d808:	jae    0x14003d84a
   14003d80a:	add    BYTE PTR [rax],al
   14003d80d:	add    BYTE PTR [rax],al
   14003d80f:	add    BYTE PTR [rax],ah
   14003d811:	inc    BYTE PTR [rdx]
   14003d813:	rex add DWORD PTR [rax],eax
	...
   14003d81e:	add    BYTE PTR [rax],al
   14003d820:	cs (bad) 
   14003d822:	push   r14
   14003d824:	rex.WB
   14003d825:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003d827:	ins    DWORD PTR es:[rdi],dx
   14003d828:	push   rbx
   14003d829:	jne    0x14003d88d
   14003d82b:	jae    0x14003d8a1
   14003d82d:	rex push rdi
   14003d82f:	jb     0x14003d89a
   14003d831:	je     0x14003d89c
   14003d833:	outs   dx,BYTE PTR ds:[rsi]
   14003d834:	addr32 push rsp
   14003d836:	outs   dx,DWORD PTR ds:[rsi]
   14003d837:	outs   dx,DWORD PTR ds:[rsi]
   14003d838:	ins    BYTE PTR es:[rdi],dx
   14003d839:	jae    0x14003d87b
   14003d83b:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140047000 <.pdata>:
   140047000:	add    BYTE PTR [rax],dl
   140047002:	add    BYTE PTR [rax],al
   140047004:	xor    DWORD PTR [rax],edx
   140047006:	add    BYTE PTR [rax],al
   140047008:	test   al,0x6a
   14004700a:	add    eax,DWORD PTR [rax]
   14004700c:	jo     0x14004701e
   14004700e:	add    BYTE PTR [rax],al
   140047010:	cwde   
   140047011:	adc    BYTE PTR [rax],al
   140047013:	add    BYTE PTR [rax-0x5ffffc96],ch
   140047019:	adc    BYTE PTR [rax],al
   14004701b:	add    BYTE PTR [rcx-0x57fffff0],bh
   140047021:	push   0x3
   140047023:	add    ah,cl
   140047025:	adc    BYTE PTR [rax],al
   140047027:	add    ah,ch
   140047029:	adc    BYTE PTR [rax],al
   14004702b:	add    BYTE PTR [rax-0x13fffc96],ch
   140047031:	adc    BYTE PTR [rax],al
   140047033:	add    BYTE PTR [rdi],al
   140047035:	adc    DWORD PTR [rax],eax
   140047037:	add    BYTE PTR [rax-0x1ffffc96],ch
   14004703d:	adc    DWORD PTR [rax],eax
   14004703f:	add    BYTE PTR [rdi],al
   140047041:	adc    al,BYTE PTR [rax]
   140047043:	add    BYTE PTR [rax],dh
   140047045:	push   0x3
   140047047:	add    BYTE PTR [rax],ah
   140047049:	adc    al,BYTE PTR [rax]
   14004704b:	add    BYTE PTR [rdi+0x12],dl
   14004704e:	add    BYTE PTR [rax],al
   140047050:	cmp    BYTE PTR [rdx+0x3],ch
   140047053:	add    BYTE PTR [rax-0xdffffee],dl
   140047059:	adc    al,BYTE PTR [rax]
   14004705b:	add    BYTE PTR [rax+0x6a],al
   14004705e:	add    eax,DWORD PTR [rax]
   140047060:	adc    BYTE PTR [rbx],dl
   140047062:	add    BYTE PTR [rax],al
   140047064:	pop    rbp
   140047065:	adc    eax,DWORD PTR [rax]
   140047067:	add    BYTE PTR [rax],bh
   140047069:	push   0x3
   14004706b:	add    BYTE PTR [rax+0x13],dh
   14004706e:	add    BYTE PTR [rax],al
   140047070:	rcl    BYTE PTR [rbx],cl
   140047072:	add    BYTE PTR [rax],al
   140047074:	rex push 0x3
   140047077:	add    al,ah
   140047079:	adc    eax,DWORD PTR [rax]
   14004707b:	add    BYTE PTR [rax],ah
   14004707d:	adc    al,0x0
   14004707f:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   140047083:	add    BYTE PTR [rax],dh
   140047085:	adc    al,0x0
   140047087:	add    BYTE PTR [rcx+0x14],ah
   14004708a:	add    BYTE PTR [rax],al
   14004708c:	rex.WR push 0x3
   14004708f:	add    BYTE PTR [rax+0x14],dh
   140047092:	add    BYTE PTR [rax],al
   140047094:	movabs ds:0xb000036a58000015,eax
   14004709d:	adc    eax,0x16100000
   1400470a2:	add    BYTE PTR [rax],al
   1400470a4:	mov    al,0x6a
   1400470a6:	add    eax,DWORD PTR [rax]
   1400470a8:	adc    BYTE PTR [rsi],dl
   1400470aa:	add    BYTE PTR [rax],al
   1400470ac:	add    edx,DWORD PTR [rdi]
   1400470ae:	add    BYTE PTR [rax],al
   1400470b0:	loopne 0x14004711c
   1400470b2:	add    eax,DWORD PTR [rax]
   1400470b4:	adc    BYTE PTR [rdi],dl
   1400470b6:	add    BYTE PTR [rax],al
   1400470b8:	in     al,dx
   1400470b9:	(bad)  
   1400470ba:	add    BYTE PTR [rax],al
   1400470bc:	clc    
   1400470bd:	push   0x3
   1400470bf:	add    al,dh
   1400470c1:	(bad)  
   1400470c2:	add    BYTE PTR [rax],al
   1400470c4:	mov    edi,0xc000018
   1400470c9:	imul   eax,DWORD PTR [rbx],0x0
   1400470cc:	rcr    BYTE PTR [rax],0x0
   1400470cf:	add    BYTE PTR [rbx+0x19],ah
   1400470d2:	add    BYTE PTR [rax],al
   1400470d4:	rex.WR push 0x3
   1400470d7:	add    BYTE PTR [rax+0x19],dh
   1400470da:	add    BYTE PTR [rax],al
   1400470dc:	xchg   ecx,eax
   1400470dd:	sbb    DWORD PTR [rax],eax
   1400470df:	add    BYTE PTR [rax],dh
   1400470e1:	push   0x3
   1400470e3:	add    BYTE PTR [rcx-0x48ffffe7],dl
   1400470e9:	sbb    DWORD PTR [rax],eax
   1400470eb:	add    BYTE PTR [rbx+rbp*2],bl
   1400470ee:	add    eax,DWORD PTR [rax]
   1400470f0:	mov    bh,0x19
   1400470f2:	add    BYTE PTR [rax],al
   1400470f4:	fstp   QWORD PTR [rcx]
   1400470f6:	add    BYTE PTR [rax],al
   1400470f8:	xor    BYTE PTR [rbx+0x3],ch
   1400470fb:	add    al,ah
   1400470fd:	sbb    DWORD PTR [rax],eax
   1400470ff:	add    ah,ah
   140047101:	sbb    al,BYTE PTR [rax]
   140047103:	add    BYTE PTR [rbx+rbp*2+0x3],al
   140047107:	add    al,dh
   140047109:	sbb    al,BYTE PTR [rax]
   14004710b:	add    ah,ah
   14004710d:	sbb    eax,DWORD PTR [rax]
   14004710f:	add    BYTE PTR [rax],dh
   140047111:	ins    BYTE PTR es:[rdi],dx
   140047112:	add    eax,DWORD PTR [rax]
   140047114:	in     al,0x1b
   140047116:	add    BYTE PTR [rax],al
   140047118:	(bad)  
   140047119:	sbb    al,0x0
   14004711b:	add    BYTE PTR [rsp+rbp*2+0x3],cl
   14004711f:	add    BYTE PTR [rdi],bl
   140047121:	sbb    al,0x0
   140047123:	add    BYTE PTR [rdx],dh
   140047125:	sbb    eax,0x6c600000
   14004712a:	add    eax,DWORD PTR [rax]
   14004712c:	xor    bl,BYTE PTR [rip+0x1d9f0000]        # 0x15da37132
   140047132:	add    BYTE PTR [rax],al
   140047134:	je     0x1400471a2
   140047136:	add    eax,DWORD PTR [rax]
   140047138:	lahf   
   140047139:	sbb    eax,0x20600000
   14004713e:	add    BYTE PTR [rax],al
   140047140:	mov    BYTE PTR [rbx+rax*1+0x0],ch
   140047144:	(bad)  
   140047145:	and    BYTE PTR [rax],al
   140047147:	add    BYTE PTR [rax+0x20],ch
   14004714a:	add    BYTE PTR [rax],al
   14004714c:	cwde   
   14004714d:	ins    BYTE PTR es:[rdi],dx
   14004714e:	add    eax,DWORD PTR [rax]
   140047150:	push   0xffffffff87000020
   140047155:	and    BYTE PTR [rax],al
   140047157:	add    BYTE PTR [rax-0x6ffffc94],ch
   14004715d:	and    BYTE PTR [rax],al
   14004715f:	add    BYTE PTR [rax+0x24],cl
   140047162:	add    BYTE PTR [rax],al
   140047164:	mov    eax,0x5000036c
   140047169:	and    al,0x0
   14004716b:	add    BYTE PTR [rdx],bl
   14004716d:	rex.RXB add BYTE PTR [r8],r8b
   140047170:	(bad)  
   140047171:	ins    BYTE PTR es:[rdi],dx
   140047172:	add    eax,DWORD PTR [rax]
   140047174:	and    BYTE PTR [rdi+0x0],al
   140047177:	add    BYTE PTR [rax+0x48],ah
   14004717a:	add    BYTE PTR [rax],al
   14004717c:	and    BYTE PTR [rbp+0x3],ch
   14004717f:	add    BYTE PTR [rax+0x48],ah
   140047182:	add    BYTE PTR [rax],al
   140047184:	fimul  DWORD PTR [rcx+0x0]
   140047187:	add    BYTE PTR [rax],bh
   140047189:	ins    DWORD PTR es:[rdi],dx
   14004718a:	add    eax,DWORD PTR [rax]
   14004718c:	loopne 0x1400471d7
   14004718e:	add    BYTE PTR [rax],al
   140047190:	adc    eax,0x5800004c
   140047195:	ins    DWORD PTR es:[rdi],dx
   140047196:	add    eax,DWORD PTR [rax]
   140047198:	adc    eax,0x8a00004c
   14004719d:	rex.WR add BYTE PTR [rax],r8b
   1400471a0:	(bad)  
   1400471a1:	ins    DWORD PTR es:[rdi],dx
   1400471a2:	add    eax,DWORD PTR [rax]
   1400471a4:	nop
   1400471a5:	rex.WR add BYTE PTR [rax],r8b
   1400471a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400471a9:	push   rcx
   1400471aa:	add    BYTE PTR [rax],al
   1400471ac:	js     0x14004721b
   1400471ae:	add    eax,DWORD PTR [rax]
   1400471b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400471b1:	push   rcx
   1400471b2:	add    BYTE PTR [rax],al
   1400471b4:	(bad)  
   1400471b5:	movsxd eax,DWORD PTR [rax]
   1400471b7:	add    BYTE PTR [rbp+rbp*2+0x639a0003],bl
   1400471be:	add    BYTE PTR [rax],al
   1400471c0:	ret    0x63
   1400471c3:	add    BYTE PTR [rax-0x2ffffc93],dh
   1400471c9:	movsxd eax,DWORD PTR [rax]
   1400471cb:	add    BYTE PTR [rcx+0x64],ah
   1400471ce:	add    BYTE PTR [rax],al
   1400471d0:	shr    BYTE PTR [rbp+0x3],0x0
   1400471d4:	jo     0x14004723a
   1400471d6:	add    BYTE PTR [rax],al
   1400471d8:	ss add BYTE PTR gs:[rax],al
   1400471dc:	int3   
   1400471dd:	ins    DWORD PTR es:[rdi],dx
   1400471de:	add    eax,DWORD PTR [rax]
   1400471e0:	rex
   1400471e1:	add    BYTE PTR gs:[rax],al
   1400471e4:	adc    DWORD PTR [rax+rax*1+0x0],ebp
   1400471e8:	loopne 0x140047257
   1400471ea:	add    eax,DWORD PTR [rax]
   1400471ec:	and    BYTE PTR [rax+rax*1+0x0],ch
   1400471f0:	sbb    al,0x6d
   1400471f2:	add    BYTE PTR [rax],al
   1400471f4:	cld    
   1400471f5:	ins    DWORD PTR es:[rdi],dx
   1400471f6:	add    eax,DWORD PTR [rax]
   1400471f8:	and    BYTE PTR [rbp+0x0],ch
   1400471fb:	add    BYTE PTR [rbp+rbp*2+0x0],cl
   1400471ff:	add    BYTE PTR [rax+0x5000036a],ch
   140047205:	ins    DWORD PTR es:[rdi],dx
   140047206:	add    BYTE PTR [rax],al
   140047208:	jnp    0x140047277
   14004720a:	add    BYTE PTR [rax],al
   14004720c:	or     al,0x6e
   14004720e:	add    eax,DWORD PTR [rax]
   140047210:	jnp    0x14004727f
   140047212:	add    BYTE PTR [rax],al
   140047214:	sub    DWORD PTR [rsi+0x0],ebp
   140047217:	add    BYTE PTR [rax],bl
   140047219:	outs   dx,BYTE PTR ds:[rsi]
   14004721a:	add    eax,DWORD PTR [rax]
   14004721c:	sub    DWORD PTR [rsi+0x0],ebp
   14004721f:	add    BYTE PTR [rbx+0x6e],dl
   140047222:	add    BYTE PTR [rax],al
   140047224:	xor    al,0x6e
   140047226:	add    eax,DWORD PTR [rax]
   140047228:	(bad)  
   140047229:	outs   dx,BYTE PTR ds:[rsi]
   14004722a:	add    BYTE PTR [rax],al
   14004722c:	ins    BYTE PTR es:[rdi],dx
   14004722d:	outs   dx,DWORD PTR ds:[rsi]
   14004722e:	add    BYTE PTR [rax],al
   140047230:	rex.R outs dx,BYTE PTR ds:[rsi]
   140047232:	add    eax,DWORD PTR [rax]
   140047234:	jo     0x1400472a5
   140047236:	add    BYTE PTR [rax],al
   140047238:	(bad)  
   140047239:	jae    0x14004723b
   14004723b:	add    BYTE PTR [rsi+rbp*2+0x3],cl
   14004723f:	add    al,ah
   140047241:	jae    0x140047243
   140047243:	add    BYTE PTR [rsi+0x75],al
   140047246:	add    BYTE PTR [rax],al
   140047248:	pop    rax
   140047249:	outs   dx,BYTE PTR ds:[rsi]
   14004724a:	add    eax,DWORD PTR [rax]
   14004724c:	push   rax
   14004724d:	jne    0x14004724f
   14004724f:	add    cl,bl
   140047251:	jbe    0x140047253
   140047253:	add    BYTE PTR [rsi+rbp*2+0x3],dh
   140047257:	add    al,ah
   140047259:	jbe    0x14004725b
   14004725b:	add    BYTE PTR [rbx+rbp*4+0x6e8c0000],al
   140047262:	add    eax,DWORD PTR [rax]
   140047264:	nop
   140047265:	stos   DWORD PTR es:[rdi],eax
   140047266:	add    BYTE PTR [rax],al
   140047268:	sbb    eax,0x80000ae
   14004726d:	outs   dx,DWORD PTR ds:[rsi]
   14004726e:	add    eax,DWORD PTR [rax]
   140047270:	shr    BYTE PTR [rsi-0x50e10000],0x0
   140047277:	add    BYTE PTR [rdi+rbp*2],ah
   14004727a:	add    eax,DWORD PTR [rax]
   14004727c:	(bad)  
   14004727d:	scas   eax,DWORD PTR es:[rdi]
   14004727e:	add    BYTE PTR [rax],al
   140047280:	shl    DWORD PTR [rsi+0x6f3c0000],0x3
   140047287:	add    cl,al
   140047289:	mov    dh,0x0
   14004728b:	add    bl,bl
   14004728d:	mov    dh,0x0
   14004728f:	add    BYTE PTR [rdi+rbp*2+0x3],bl
   140047293:	add    bl,bl
   140047295:	mov    dh,0x0
   140047297:	add    al,dh
   140047299:	mov    dh,0x0
   14004729b:	add    BYTE PTR [rdi+rbp*2+0x3],ch
   14004729f:	add    al,dh
   1400472a1:	mov    dh,0x0
   1400472a3:	add    BYTE PTR [rsi],al
   1400472a5:	mov    bh,0x0
   1400472a7:	add    BYTE PTR [rdi+rbp*2-0x48f9fffd],cl
   1400472ae:	add    BYTE PTR [rax],al
   1400472b0:	mov    r15b,0x0
   1400472b3:	add    BYTE PTR [rax+0x4100036f],bl
   1400472b9:	mov    bh,0x0
   1400472bb:	add    BYTE PTR [rdi],ah
   1400472bd:	mov    eax,0x6fb40000
   1400472c2:	add    eax,DWORD PTR [rax]
   1400472c4:	(bad)  
   1400472c5:	mov    eax,0xb8450000
   1400472ca:	add    BYTE PTR [rax],al
   1400472cc:	enter  0x36f,0x0
   1400472d0:	rex.RB mov r8d,0xb87e0000
   1400472d6:	add    BYTE PTR [rax],al
   1400472d8:	fsubr  DWORD PTR [rdi+0x3]
   1400472db:	add    BYTE PTR [rax-0x6effff48],al
   1400472e1:	mov    eax,0x6fe80000
   1400472e6:	add    eax,DWORD PTR [rax]
   1400472e8:	xchg   ecx,eax
   1400472e9:	mov    eax,0xb8c70000
   1400472ee:	add    BYTE PTR [rax],al
   1400472f0:	clc    
   1400472f1:	outs   dx,DWORD PTR ds:[rsi]
   1400472f2:	add    eax,DWORD PTR [rax]
   1400472f4:	(bad)  
   1400472f5:	mov    eax,0xba190000
   1400472fa:	add    BYTE PTR [rax],al
   1400472fc:	adc    al,0x70
   1400472fe:	add    eax,DWORD PTR [rax]
   140047300:	sbb    DWORD PTR [rdx-0x45ca0000],edi
   140047306:	add    BYTE PTR [rax],al
   140047308:	sub    BYTE PTR [rax+0x3],dh
   14004730b:	add    BYTE PTR [rsi],dh
   14004730d:	mov    edx,0xba9d0000
   140047312:	add    BYTE PTR [rax],al
   140047314:	cmp    BYTE PTR [rax+0x3],dh
   140047317:	add    BYTE PTR [rax+0x450000ba],ah
   14004731d:	mov    ebx,0x70480000
   140047322:	add    eax,DWORD PTR [rax]
   140047324:	push   rax
   140047325:	mov    ebx,0xbed60000
   14004732a:	add    BYTE PTR [rax],al
   14004732c:	push   rax
   14004732d:	jo     0x140047332
   14004732f:	add    al,ah
   140047331:	mov    esi,0xc54c0000
   140047336:	add    BYTE PTR [rax],al
   140047338:	jo     0x1400473aa
   14004733a:	add    eax,DWORD PTR [rax]
   14004733c:	push   rax
   14004733d:	(bad)
   140047340:	movabs eax,ds:0xb0000370900000c6
   140047349:	mov    BYTE PTR [rax],0x0
   14004734c:	rol    esi,0x0
   14004734f:	add    al,ch
   140047351:	outs   dx,DWORD PTR ds:[rsi]
   140047352:	add    eax,DWORD PTR [rax]
   140047354:	rol    esi,0x0
   140047357:	add    bh,dh
   140047359:	mov    BYTE PTR [rax],0x0
   14004735c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004735d:	jo     0x140047362
   14004735f:	add    bh,dh
   140047361:	mov    BYTE PTR [rax],0x0
   140047364:	rex.WB enter 0x0,0xc0
   140047369:	jo     0x14004736e
   14004736b:	add    BYTE PTR [rcx-0x38],cl
   14004736e:	add    BYTE PTR [rax],al
   140047370:	enterw 0x0,0xd4
   140047375:	jo     0x14004737a
   140047377:	add    BYTE PTR [rsi-0x38],ah
   14004737a:	add    BYTE PTR [rax],al
   14004737c:	int    0xc8
   14004737e:	add    BYTE PTR [rax],al
   140047380:	in     al,0x70
   140047382:	add    eax,DWORD PTR [rax]
   140047384:	ror    al,1
   140047386:	add    BYTE PTR [rax],al
   140047388:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047389:	leave  
   14004738a:	add    BYTE PTR [rax],al
   14004738c:	hlt    
   14004738d:	jo     0x140047392
   14004738f:	add    BYTE PTR [rax-0x69ffff37],dh
   140047395:	(bad)  
   140047396:	add    BYTE PTR [rax],al
   140047398:	add    BYTE PTR [rcx+0x3],dh
   14004739b:	add    BYTE PTR [rax-0x29],dh
   14004739e:	add    BYTE PTR [rax],al
   1400473a0:	and    ebx,eax
   1400473a2:	add    BYTE PTR [rax],al
   1400473a4:	(bad)  
   1400473a5:	jno    0x1400473aa
   1400473a7:	add    BYTE PTR [rbx],ah
   1400473a9:	fadd   DWORD PTR [rax]
   1400473ab:	add    BYTE PTR [rcx],bl
   1400473ad:	fld    DWORD PTR [rax]
   1400473af:	add    BYTE PTR [rcx+rsi*2+0x3],bh
   1400473b3:	add    BYTE PTR [rcx],bl
   1400473b5:	fld    DWORD PTR [rax]
   1400473b7:	add    BYTE PTR [rcx+rbx*8+0x0],bh
   1400473bb:	add    BYTE PTR [rcx+rsi*2-0x2683fffd],dl
   1400473c2:	add    BYTE PTR [rax],al
   1400473c4:	sbb    ecx,0x0
   1400473c7:	add    BYTE PTR [rcx+rsi*2-0x266ffffd],ah
   1400473ce:	add    BYTE PTR [rax],al
   1400473d0:	add    al,BYTE PTR [rdi]
   1400473d2:	add    DWORD PTR [rax],eax
   1400473d4:	mov    esp,0x10000371
   1400473d9:	(bad)  
   1400473da:	add    DWORD PTR [rax],eax
   1400473dc:	cmp    cl,BYTE PTR [rbx]
   1400473de:	add    DWORD PTR [rax],eax
   1400473e0:	add    al,0x72
   1400473e2:	add    eax,DWORD PTR [rax]
   1400473e4:	rex or eax,DWORD PTR [rcx]
   1400473e7:	add    BYTE PTR [rbp+0xc],al
   1400473ea:	add    DWORD PTR [rax],eax
   1400473ec:	rex.WR jb 0x1400473f2
   1400473ef:	add    BYTE PTR [rbp+0xc],al
   1400473f2:	add    DWORD PTR [rax],eax
   1400473f4:	addr32 or al,0x1
   1400473f7:	add    BYTE PTR [rax+0x72],ch
   1400473fa:	add    eax,DWORD PTR [rax]
   1400473fc:	addr32 or al,0x1
   1400473ff:	add    BYTE PTR [rcx+0xd],dh
   140047402:	add    DWORD PTR [rax],eax
   140047404:	jl     0x140047478
   140047406:	add    eax,DWORD PTR [rax]
   140047408:	jno    0x140047417
   14004740a:	add    DWORD PTR [rax],eax
   14004740c:	(bad)  
   14004740d:	(bad)  
   14004740e:	add    DWORD PTR [rax],eax
   140047410:	nop
   140047411:	jb     0x140047416
   140047413:	add    BYTE PTR [rdi],dh
   140047415:	(bad)  
   140047416:	add    DWORD PTR [rax],eax
   140047418:	pop    rbp
   140047419:	(bad)  
   14004741a:	add    DWORD PTR [rax],eax
   14004741c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004741d:	jb     0x140047422
   14004741f:	add    BYTE PTR [rbp+0xe],bl
   140047422:	add    DWORD PTR [rax],eax
   140047424:	(bad)  
   140047425:	(bad)  
   140047426:	add    DWORD PTR [rax],eax
   140047428:	mov    ah,0x72
   14004742a:	add    eax,DWORD PTR [rax]
   14004742c:	(bad)  
   14004742d:	(bad)  
   14004742e:	add    DWORD PTR [rax],eax
   140047430:	stc    
   140047431:	adc    BYTE PTR [rcx],al
   140047433:	add    BYTE PTR [rdx+rsi*2+0x10f90003],ah
   14004743a:	add    DWORD PTR [rax],eax
   14004743c:	add    DWORD PTR [rcx],edx
   14004743e:	add    DWORD PTR [rax],eax
   140047440:	enter  0x372,0x0
   140047444:	add    DWORD PTR [rcx],edx
   140047446:	add    DWORD PTR [rax],eax
   140047448:	and    DWORD PTR [rcx],edx
   14004744a:	add    DWORD PTR [rax],eax
   14004744c:	fdiv   DWORD PTR [rdx+0x3]
   14004744f:	add    BYTE PTR [rax],dh
   140047451:	adc    DWORD PTR [rcx],eax
   140047453:	add    ch,ah
   140047455:	and    DWORD PTR [rcx],eax
   140047457:	add    al,ch
   140047459:	jb     0x14004745e
   14004745b:	add    al,dh
   14004745d:	and    DWORD PTR [rcx],eax
   14004745f:	add    BYTE PTR [rdi],dl
   140047461:	add    DWORD PTR cs:[rax],eax
   140047464:	xor    al,0x73
   140047466:	add    eax,DWORD PTR [rax]
   140047468:	shr    BYTE PTR [rsi],1
   14004746a:	add    DWORD PTR [rax],eax
   14004746c:	loope  0x1400474a2
   14004746e:	add    DWORD PTR [rax],eax
   140047470:	loopne 0x1400474df
   140047472:	add    eax,DWORD PTR [rax]
   140047474:	lock xor al,0x1
   140047477:	add    al,dl
   140047479:	add    DWORD PTR ss:[rax],eax
   14004747c:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14004747e:	add    eax,DWORD PTR [rax]
   140047480:	shl    BYTE PTR [rsi],1
   140047482:	add    DWORD PTR [rax],eax
   140047484:	jo     0x1400474bd
   140047486:	add    DWORD PTR [rax],eax
   140047488:	cwde   
   140047489:	jae    0x14004748e
   14004748b:	add    BYTE PTR [rax+0x37],dh
   14004748e:	add    DWORD PTR [rax],eax
   140047490:	out    0x49,eax
   140047492:	add    DWORD PTR [rax],eax
   140047494:	lods   al,BYTE PTR ds:[rsi]
   140047495:	jae    0x14004749a
   140047497:	add    BYTE PTR [rax+0x1300014a],ah
   14004749d:	push   rbx
   14004749e:	add    DWORD PTR [rax],eax
   1400474a0:	adc    BYTE PTR [rbx+rax*1+0x0],dh
   1400474a4:	and    BYTE PTR [rbx+0x1],dl
   1400474a7:	add    BYTE PTR [rax],al
   1400474a9:	push   rbp
   1400474aa:	add    DWORD PTR [rax],eax
   1400474ac:	rex.WR outs dx,BYTE PTR ds:[rsi]
   1400474ae:	add    eax,DWORD PTR [rax]
   1400474b0:	add    BYTE PTR [rbp+0x1],dl
   1400474b3:	add    BYTE PTR [rax-0x67fffeab],ah
   1400474b9:	jae    0x1400474be
   1400474bb:	add    BYTE PTR [rax-0x20fffeab],ah
   1400474c1:	pop    rbp
   1400474c2:	add    DWORD PTR [rax],eax
   1400474c4:	sub    al,0x74
   1400474c6:	add    eax,DWORD PTR [rax]
   1400474c8:	loopne 0x140047527
   1400474ca:	add    DWORD PTR [rax],eax
   1400474cc:	and    DWORD PTR [rdx+0x1],esi
   1400474cf:	add    BYTE PTR [rsp+rsi*2+0x3],dh
   1400474d3:	add    BYTE PTR [rax],dh
   1400474d5:	jb     0x1400474d8
   1400474d7:	add    BYTE PTR [rax+0x73],al
   1400474da:	add    DWORD PTR [rax],eax
   1400474dc:	xor    BYTE PTR [rdx+0x3],ch
   1400474df:	add    BYTE PTR [rax+0x73],al
   1400474e2:	add    DWORD PTR [rax],eax
   1400474e4:	(bad)  
   1400474e5:	jae    0x1400474e8
   1400474e7:	add    ah,dl
   1400474e9:	je     0x1400474ee
   1400474eb:	add    al,ah
   1400474ed:	jae    0x1400474f0
   1400474ef:	add    ah,dh
   1400474f1:	je     0x1400474f4
   1400474f3:	add    ah,ah
   1400474f5:	je     0x1400474fa
   1400474f7:	add    BYTE PTR [rax],al
   1400474f9:	jne    0x1400474fc
   1400474fb:	add    BYTE PTR [rax+0x76],dh
   1400474fe:	add    DWORD PTR [rax],eax
   140047500:	or     BYTE PTR [rbp+0x3],dh
   140047503:	add    BYTE PTR [rax+0x76],dh
   140047506:	add    DWORD PTR [rax],eax
   140047508:	lahf   
   140047509:	js     0x14004750c
   14004750b:	add    BYTE PTR [rsi*2+0x78a00003],ah
   140047512:	add    DWORD PTR [rax],eax
   140047514:	in     al,0x79
   140047516:	add    DWORD PTR [rax],eax
   140047518:	(bad)  
   140047519:	jne    0x14004751e
   14004751b:	add    al,dh
   14004751d:	jns    0x140047520
   14004751f:	add    BYTE PTR [rbx],bl
   140047521:	jp     0x140047524
   140047523:	add    BYTE PTR [rax],dh
   140047525:	push   0x3
   140047527:	add    BYTE PTR [rax],ah
   140047529:	jp     0x14004752c
   14004752b:	add    cl,al
   14004752d:	jp     0x140047530
   14004752f:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   140047533:	add    al,dl
   140047535:	jp     0x140047538
   140047537:	add    BYTE PTR [rbp+0x7c00017c],ch
   14004753d:	jne    0x140047542
   14004753f:	add    BYTE PTR [rax-0x3fffe84],dh
   140047545:	jl     0x140047548
   140047547:	add    BYTE PTR [rax],dh
   140047549:	push   0x3
   14004754b:	add    BYTE PTR [rax],al
   14004754d:	jge    0x140047550
   14004754f:	add    BYTE PTR [rdx-0x7a],bh
   140047552:	add    DWORD PTR [rax],eax
   140047554:	call   0xc00478ce
   140047559:	xchg   BYTE PTR [rcx],al
   14004755b:	add    bh,dl
   14004755d:	xchg   BYTE PTR [rcx],al
   14004755f:	add    BYTE PTR [rax],ch
   140047561:	jbe    0x140047566
   140047563:	add    bh,dl
   140047565:	xchg   BYTE PTR [rcx],al
   140047567:	add    BYTE PTR [rip+0x44000187],al        # 0x1840476f4
   14004756d:	jbe    0x140047572
   14004756f:	add    BYTE PTR [rip+0xffffffff86000187],al        # 0xc60476fc
   140047575:	mov    WORD PTR [rcx],es
   140047577:	add    BYTE PTR [rax+0x76],bl
   14004757a:	add    eax,DWORD PTR [rax]
   14004757c:	xchg   BYTE PTR [rcx+rax*1+0x18c8e00],cl
   140047583:	add    BYTE PTR [rax+0x76],dh
   140047586:	add    eax,DWORD PTR [rax]
   140047588:	mov    cs,WORD PTR [rcx+rax*1+0x18cac00]
   14004758f:	add    BYTE PTR [rax-0x53fffc8a],al
   140047595:	mov    WORD PTR [rcx],es
   140047597:	add    BYTE PTR [rax-0x6ffffe74],bh
   14004759d:	jbe    0x1400475a2
   14004759f:	add    al,al
   1400475a1:	mov    WORD PTR [rcx],es
   1400475a3:	add    cl,dh
   1400475a5:	mov    ebx,0x76ac0001
   1400475aa:	add    eax,DWORD PTR [rax]
   1400475ac:	add    BYTE PTR [rcx+rax*1+0x1bd2c00],bh
   1400475b3:	add    BYTE PTR [rdi+rsi*2],cl
   1400475b6:	add    eax,DWORD PTR [rax]
   1400475b8:	xor    BYTE PTR [rbp-0x425cffff],bh
   1400475be:	add    DWORD PTR [rax],eax
   1400475c0:	rex.WR push 0x3
   1400475c3:	add    al,dh
   1400475c5:	mov    ebp,0xbe700001
   1400475ca:	add    DWORD PTR [rax],eax
   1400475cc:	rex.W ja 0x1400475d2
   1400475cf:	add    BYTE PTR [rax-0x42],dh
   1400475d2:	add    DWORD PTR [rax],eax
   1400475d4:	push   rsi
   1400475d5:	mov    edi,0x777c0001
   1400475da:	add    eax,DWORD PTR [rax]
   1400475dc:	(bad)  
   1400475dd:	mov    edi,0xc0d40001
   1400475e2:	add    DWORD PTR [rax],eax
   1400475e4:	mov    ah,0x77
   1400475e6:	add    eax,DWORD PTR [rax]
   1400475e8:	adc    cl,al
   1400475ea:	add    DWORD PTR [rax],eax
   1400475ec:	rol    DWORD PTR [r9],0x0
   1400475f0:	rex.WR push 0x3
   1400475f3:	add    BYTE PTR [rax-0x3f],dl
   1400475f6:	add    DWORD PTR [rax],eax
   1400475f8:	add    ecx,0x6a4c0001
   1400475fe:	add    eax,DWORD PTR [rax]
   140047600:	nop
   140047601:	rol    DWORD PTR [rcx],0x0
   140047604:	rol    ecx,0x1
   140047607:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   14004760b:	add    al,dl
   14004760d:	rol    DWORD PTR [rcx],0x0
   140047610:	add    edx,eax
   140047612:	add    DWORD PTR [rax],eax
   140047614:	rex.WR push 0x3
   140047617:	add    BYTE PTR [rax],dl
   140047619:	ret    0x1
   14004761c:	rex.B ret 0x1
   140047620:	rex.WR push 0x3
   140047623:	add    BYTE PTR [rax-0x3e],dl
   140047626:	add    DWORD PTR [rax],eax
   140047628:	test   dl,al
   14004762a:	add    DWORD PTR [rax],eax
   14004762c:	shl    BYTE PTR [rdi+0x3],1
   14004762f:	add    BYTE PTR [rax-0x61fffe3e],dh
   140047635:	(bad)
   140047639:	ja     0x14004763e
   14004763b:	add    BYTE PTR [rax-0x2ffffe3c],ah
   140047641:	(bad)
   140047645:	push   0x3
   140047647:	add    al,dl
   140047649:	(bad)
   14004764d:	(bad)
   140047650:	rex.W jns 0x140047656
   140047653:	add    BYTE PTR [rax],dl
   140047655:	mov    BYTE PTR [rcx],0x0
   140047658:	nop
   140047659:	mov    DWORD PTR [rcx],0x36a4c00
   14004765f:	add    BYTE PTR [rax-0x26fffe39],ah
   140047665:	enter  0x1,0x78
   140047669:	jp     0x14004766e
   14004766b:	add    al,ah
   14004766d:	enter  0x1,0x17
   140047671:	retf   0x1
   140047674:	lods   al,BYTE PTR ds:[rsi]
   140047675:	jp     0x14004767a
   140047677:	add    BYTE PTR [rax],ah
   140047679:	retf   0x1
   14004767c:	cmp    cl,dl
   14004767e:	add    DWORD PTR [rax],eax
   140047680:	sbb    BYTE PTR [rbx+0x3],bh
   140047683:	add    BYTE PTR [rax-0x2f],al
   140047686:	add    DWORD PTR [rax],eax
   140047688:	xlat   BYTE PTR gs:[rbx]
   14004768a:	add    DWORD PTR [rax],eax
   14004768c:	mov    esp,0x7000037b
   140047691:	xlat   BYTE PTR ds:[rbx]
   140047692:	add    DWORD PTR [rax],eax
   140047694:	(bad)  
   140047695:	fld    DWORD PTR [rcx]
   140047697:	add    BYTE PTR [rax],ah
   140047699:	jl     0x14004769e
   14004769b:	add    BYTE PTR [rax],dl
   14004769d:	fld    DWORD PTR [rcx]
   14004769f:	add    BYTE PTR [rcx+0x580001db],bl
   1400476a5:	jl     0x1400476aa
   1400476a7:	add    BYTE PTR [rax+0xd0001db],ah
   1400476ad:	fadd   QWORD PTR [rcx]
   1400476af:	add    BYTE PTR [rsp+rdi*2-0x23effffd],cl
   1400476b6:	add    DWORD PTR [rax],eax
   1400476b8:	loope  0x140047699
   1400476ba:	add    DWORD PTR [rax],eax
   1400476bc:	movabs al,ds:0x2f0001dff000037c
   1400476c5:	loopne 0x1400476c8
   1400476c7:	add    BYTE PTR [rax],dh
   1400476c9:	push   0x3
   1400476cb:	add    BYTE PTR [rax],dh
   1400476cd:	loopne 0x1400476d0
   1400476cf:	add    BYTE PTR [rdx-0x13fffe20],bl
   1400476d5:	jl     0x1400476da
   1400476d7:	add    BYTE PTR [rax+0x6a0001e0],ah
   1400476dd:	loope  0x1400476e0
   1400476df:	add    BYTE PTR [rdi*2-0x1e8ffffd],dl
   1400476e6:	add    DWORD PTR [rax],eax
   1400476e8:	int3   
   1400476e9:	loop   0x1400476ec
   1400476eb:	add    BYTE PTR [rax+0x7d],dl
   1400476ee:	add    eax,DWORD PTR [rax]
   1400476f0:	shl    dl,1
   1400476f2:	add    DWORD PTR [rax],eax
   1400476f4:	add    ebx,esp
   1400476f6:	add    DWORD PTR [rax],eax
   1400476f8:	rex.WR push 0x3
   1400476fb:	add    BYTE PTR [rax],dl
   1400476fd:	jrcxz  0x140047700
   1400476ff:	add    BYTE PTR [rbx+riz*8+0x1],al
   140047703:	add    BYTE PTR [rax+0x6000037d],dl
   140047709:	jrcxz  0x14004770c
   14004770b:	add    BYTE PTR [rax],ch
   14004770d:	in     eax,0x1
   14004770f:	add    BYTE PTR [rax+0x3000037d],bh
   140047715:	in     eax,0x1
   140047717:	add    BYTE PTR [rax-0x1b],ah
   14004771a:	add    DWORD PTR [rax],eax
   14004771c:	rex.WR push 0x3
   14004771f:	add    BYTE PTR [rax-0x1b],ah
   140047722:	add    DWORD PTR [rax],eax
   140047724:	outs   dx,DWORD PTR ds:[rsi]
   140047725:	out    0x1,al
   140047727:	add    ah,dh
   140047729:	jle    0x14004772e
   14004772b:	add    BYTE PTR [rax-0x1a],dh
   14004772e:	add    DWORD PTR [rax],eax
   140047730:	(bad)  
   140047732:	add    DWORD PTR [rax],eax
   140047734:	rex.WR push 0x3
   140047737:	add    al,dh
   140047739:	out    0x1,eax
   14004773b:	add    BYTE PTR [rdx+rbp*8],dl
   14004773e:	add    DWORD PTR [rax],eax
   140047740:	adc    al,0x80
   140047742:	add    eax,DWORD PTR [rax]
   140047744:	and    dl,ch
   140047746:	add    DWORD PTR [rax],eax
   140047748:	(bad)  
   140047749:	jmp    0x14004774c
   14004774b:	add    BYTE PTR [rax+rax*4],bh
   14004774e:	add    eax,DWORD PTR [rax]
   140047750:	(bad)  
   140047751:	jmp    0x140047754
   140047753:	add    BYTE PTR [rax-0x6ffffe14],ah
   140047759:	add    BYTE PTR [rbx],0x0
   14004775c:	mov    al,0xec
   14004775e:	add    DWORD PTR [rax],eax
   140047760:	(bad)  
   140047761:	test   BYTE PTR [rcx],0x0
   140047764:	in     al,0x80
   140047766:	add    eax,DWORD PTR [rax]
   140047768:	shl    dh,1
   14004776a:	add    DWORD PTR [rax],eax
   14004776c:	cmp    al,bh
   14004776e:	add    DWORD PTR [rax],eax
   140047770:	push   0x40000381
   140047775:	clc    
   140047776:	add    DWORD PTR [rax],eax
   140047778:	pushf  
   140047779:	stc    
   14004777a:	add    DWORD PTR [rax],eax
   14004777c:	je     0x1400476ff
   14004777e:	add    eax,DWORD PTR [rax]
   140047780:	movabs al,ds:0xac0001fa330001f9
   140047789:	add    DWORD PTR [rbx],0x1fa4000
   14004778f:	add    BYTE PTR [rdx+rdi*8+0x1],dh
   140047793:	add    al,al
   140047795:	add    DWORD PTR [rbx],0x1fa9000
   14004779b:	add    BYTE PTR [rsi-0x4],bh
   14004779e:	add    DWORD PTR [rax],eax
   1400477a0:	call   0xc0047b26
   1400477a5:	cld    
   1400477a6:	add    DWORD PTR [rax],eax
   1400477a8:	mov    al,0xfc
   1400477aa:	add    DWORD PTR [rax],eax
   1400477ac:	rex.WR push 0x3
   1400477af:	add    BYTE PTR [rax-0x32fffe04],dh
   1400477b5:	std    
   1400477b6:	add    DWORD PTR [rax],eax
   1400477b8:	cmp    BYTE PTR [rbx-0x22ffffd],al
   1400477be:	add    DWORD PTR [rax],eax
   1400477c0:	push   rax
   1400477c1:	inc    DWORD PTR [rcx]
   1400477c3:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   1400477c7:	add    BYTE PTR [rax-0x1],ah
   1400477ca:	add    DWORD PTR [rax],eax
   1400477cc:	xchg   esp,eax
   1400477cd:	add    BYTE PTR [rdx],al
   1400477cf:	add    BYTE PTR [rax-0x7c],ch
   1400477d2:	add    eax,DWORD PTR [rax]
   1400477d4:	movabs al,ds:0x94000201f2000200
   1400477dd:	test   BYTE PTR [rbx],al
   1400477df:	add    BYTE PTR [rax],al
   1400477e1:	add    al,BYTE PTR [rdx]
   1400477e3:	add    BYTE PTR [rax+0x9],bh
   1400477e6:	add    al,BYTE PTR [rax]
   1400477e8:	in     al,dx
   1400477e9:	test   BYTE PTR [rbx],al
   1400477eb:	add    BYTE PTR [rax+0x53000209],al
   1400477f1:	lar    eax,WORD PTR [rax]
   1400477f4:	nop
   1400477f5:	test   DWORD PTR [rbx],eax
   1400477f7:	add    BYTE PTR [rax+0xf],ah
   1400477fa:	add    al,BYTE PTR [rax]
   1400477fc:	adc    DWORD PTR es:[rdx],eax
   1400477ff:	add    ah,dh
   140047801:	test   DWORD PTR [rbx],eax
   140047803:	add    BYTE PTR [rax],dh
   140047805:	adc    DWORD PTR [rdx],eax
   140047807:	add    ch,ch
   140047809:	adc    eax,DWORD PTR [rdx]
   14004780b:	add    BYTE PTR [rax],dh
   14004780d:	xchg   BYTE PTR [rbx],al
   14004780f:	add    al,dh
   140047811:	adc    eax,DWORD PTR [rdx]
   140047813:	add    BYTE PTR [rsp+rdx*1],bh
   140047816:	add    al,BYTE PTR [rax]
   140047818:	xor    BYTE PTR [rdx+0x3],ch
   14004781b:	add    BYTE PTR [rax+0x14],al
   14004781e:	add    al,BYTE PTR [rax]
   140047820:	sbb    al,0x18
   140047822:	add    al,BYTE PTR [rax]
   140047824:	xchg   BYTE PTR fs:[rbx],al
   140047827:	add    BYTE PTR [rax],ah
   140047829:	sbb    BYTE PTR [rdx],al
   14004782b:	add    bl,dl
   14004782d:	sbb    BYTE PTR [rdx],al
   14004782f:	add    BYTE PTR [rsp+rdi*2+0x18e00003],cl
   140047836:	add    al,BYTE PTR [rax]
   140047838:	cli    
   140047839:	sbb    DWORD PTR [rdx],eax
   14004783b:	add    BYTE PTR [rsp+rdi*2+0x1a200003],cl
   140047842:	add    al,BYTE PTR [rax]
   140047844:	jl     0x140047861
   140047846:	add    al,BYTE PTR [rax]
   140047848:	test   al,0x86
   14004784a:	add    eax,DWORD PTR [rax]
   14004784c:	sbb    BYTE PTR [rbx],0x2
   14004784f:	add    BYTE PTR [rbp-0x1ffffde3],bh
   140047855:	xchg   BYTE PTR [rbx],al
   140047857:	add    al,al
   140047859:	sbb    eax,0x1df40002
   14004785e:	add    al,BYTE PTR [rax]
   140047860:	cld    
   140047861:	xchg   BYTE PTR [rbx],al
   140047863:	add    BYTE PTR [rax],dl
   140047865:	(bad)  
   140047866:	add    al,BYTE PTR [rax]
   140047868:	fcomp  DWORD PTR [rdi]
   14004786a:	add    al,BYTE PTR [rax]
   14004786c:	and    al,0x87
   14004786e:	add    eax,DWORD PTR [rax]
   140047870:	loopne 0x140047891
   140047872:	add    al,BYTE PTR [rax]
   140047874:	adc    BYTE PTR [rax],ah
   140047876:	add    al,BYTE PTR [rax]
   140047878:	rex.WR push 0x3
   14004787b:	add    BYTE PTR [rax],dl
   14004787d:	and    BYTE PTR [rdx],al
   14004787f:	add    BYTE PTR [rdi],bl
   140047881:	and    DWORD PTR [rdx],eax
   140047883:	add    BYTE PTR [rax-0x78],ah
   140047886:	add    eax,DWORD PTR [rax]
   140047888:	and    BYTE PTR [rcx],ah
   14004788a:	add    al,BYTE PTR [rax]
   14004788c:	mov    esp,DWORD PTR [rdx]
   14004788e:	add    al,BYTE PTR [rax]
   140047890:	rex.WR push 0x3
   140047893:	add    BYTE PTR [rax+0x9000222],ah
   140047899:	and    al,0x2
   14004789b:	add    BYTE PTR [rax+0x10000389],al
   1400478a1:	and    al,0x2
   1400478a3:	add    BYTE PTR [rax+0x25],dl
   1400478a6:	add    al,BYTE PTR [rax]
   1400478a8:	test   al,0x89
   1400478aa:	add    eax,DWORD PTR [rax]
   1400478ac:	(bad)  
   1400478ad:	and    eax,0x2cb30002
   1400478b2:	add    al,BYTE PTR [rax]
   1400478b4:	cld    
   1400478b5:	mov    DWORD PTR [rbx],eax
   1400478b7:	add    al,al
   1400478b9:	sub    al,0x2
   1400478bb:	add    BYTE PTR [rax+0x2e],ah
   1400478be:	add    al,BYTE PTR [rax]
   1400478c0:	push   0xffffffffa0000381
   1400478c5:	add    al,BYTE PTR cs:[rax]
   1400478c8:	cld    
   1400478c9:	(bad)  
   1400478ca:	add    al,BYTE PTR [rax]
   1400478cc:	js     0x140047858
   1400478ce:	add    eax,DWORD PTR [rax]
   1400478d0:	add    BYTE PTR [rax],dh
   1400478d2:	add    al,BYTE PTR [rax]
   1400478d4:	xchg   ebx,eax
   1400478d5:	xor    BYTE PTR [rdx],al
   1400478d7:	add    BYTE PTR [rcx+rax*4+0x30a00003],ch
   1400478de:	add    al,BYTE PTR [rax]
   1400478e0:	fbstp  TBYTE PTR [rdx]
   1400478e2:	add    al,BYTE PTR [rax]
   1400478e4:	mov    al,0x8a
   1400478e6:	add    eax,DWORD PTR [rax]
   1400478e8:	loopne 0x14004791c
   1400478ea:	add    al,BYTE PTR [rax]
   1400478ec:	addr32 (bad) 
   1400478ee:	add    al,BYTE PTR [rax]
   1400478f0:	fmul   DWORD PTR [rdx+0x37700003]
   1400478f6:	add    al,BYTE PTR [rax]
   1400478f8:	fidivr WORD PTR [rax]
   1400478fa:	add    al,BYTE PTR [rax]
   1400478fc:	cld    
   1400478fd:	ins    DWORD PTR es:[rdi],dx
   1400478fe:	add    eax,DWORD PTR [rax]
   140047900:	loopne 0x14004793a
   140047902:	add    al,BYTE PTR [rax]
   140047904:	fnstcw WORD PTR [rdx]
   140047906:	add    al,BYTE PTR [rax]
   140047908:	cld    
   140047909:	mov    al,BYTE PTR [rbx]
   14004790b:	add    al,ah
   14004790d:	cmp    al,BYTE PTR [rdx]
   14004790f:	add    BYTE PTR [rip+0x3000023b],al        # 0x170047b50
   140047915:	push   0x3
   140047917:	add    BYTE PTR [rax],dl
   140047919:	cmp    eax,DWORD PTR [rdx]
   14004791b:	add    BYTE PTR [rcx+0x3b],al
   14004791e:	add    al,BYTE PTR [rax]
   140047920:	rex.WR push 0x3
   140047923:	add    BYTE PTR [rax-0x4cfffdc5],al
   140047929:	cmp    al,0x2
   14004792b:	add    BYTE PTR [rbx+rcx*4],bl
   14004792e:	add    eax,DWORD PTR [rax]
   140047930:	sar    BYTE PTR [rdx+rax*1],0x0
   140047934:	lock cmp al,0x2
   140047937:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   14004793b:	add    al,dh
   14004793d:	cmp    al,0x2
   14004793f:	add    BYTE PTR [rsi+0x3d],ch
   140047942:	add    al,BYTE PTR [rax]
   140047944:	lods   al,BYTE PTR ds:[rsi]
   140047945:	mov    eax,DWORD PTR [rbx]
   140047947:	add    al,al
   140047949:	cmp    eax,0x3e500002
   14004794e:	add    al,BYTE PTR [rax]
   140047950:	or     al,0x6b
   140047952:	add    eax,DWORD PTR [rax]
   140047954:	push   rax
   140047955:	add    al,BYTE PTR ds:[rax]
   140047958:	ja     0x140047998
   14004795a:	add    al,BYTE PTR [rax]
   14004795c:	cmp    BYTE PTR [rdx+0x3],ch
   14004795f:	add    BYTE PTR [rax-0x38fffdc2],al
   140047965:	add    al,BYTE PTR [r8]
   140047968:	sbb    al,0x8c
   14004796a:	add    eax,DWORD PTR [rax]
   14004796c:	rol    BYTE PTR [rcx+0x2],1
   14004796f:	add    BYTE PTR [rcx-0x67fffdbe],ch
   140047975:	mov    WORD PTR [rbx],es
   140047977:	add    BYTE PTR [rax+0x10000242],dh
   14004797d:	rex.XB add al,BYTE PTR [r8]
   140047980:	ror    BYTE PTR [rbx+rax*1+0x2431000],0x0
   140047988:	add    BYTE PTR [rbx+0x2],0x0
   14004798c:	rex.WR push 0x3
   14004798f:	add    BYTE PTR [rax-0x19fffdbd],al
   140047995:	rex.XB add al,BYTE PTR [r8]
   140047998:	xor    BYTE PTR [rdx+0x3],ch
   14004799b:	add    al,dh
   14004799d:	rex.XB add al,BYTE PTR [r8]
   1400479a0:	(bad)  
   1400479a1:	add    r8b,BYTE PTR [rax]
   1400479a4:	xor    BYTE PTR [rdx+0x3],ch
   1400479a7:	add    BYTE PTR [rax],dh
   1400479a9:	add    r8b,BYTE PTR [rax]
   1400479ac:	je     0x1400479f2
   1400479ae:	add    al,BYTE PTR [rax]
   1400479b0:	lock mov WORD PTR [rbx],es
   1400479b3:	add    BYTE PTR [rsp+rax*2+0x2],dh
   1400479b7:	add    BYTE PTR [rdx+0x45],ch
   1400479ba:	add    al,BYTE PTR [rax]
   1400479bc:	add    al,0x8d
   1400479be:	add    eax,DWORD PTR [rax]
   1400479c0:	push   0x45
   1400479c2:	add    al,BYTE PTR [rax]
   1400479c4:	test   BYTE PTR [rbp+0x2],al
   1400479c7:	add    BYTE PTR [rax],ah
   1400479c9:	lea    eax,[rbx]
   1400479cb:	add    BYTE PTR [rax-0x14fffdbb],dl
   1400479d1:	rex.WXB add al,BYTE PTR [r8]
   1400479d4:	xor    BYTE PTR [rbp+0x4bf00003],cl
   1400479da:	add    al,BYTE PTR [rax]
   1400479dc:	adc    BYTE PTR [rcx+0x2],0x0
   1400479e0:	pop    rax
   1400479e1:	lea    eax,[rbx]
   1400479e3:	add    BYTE PTR [rax-0x44fffdaf],al
   1400479e9:	push   rcx
   1400479ea:	add    al,BYTE PTR [rax]
   1400479ec:	test   BYTE PTR [rbp+0x51bb0003],cl
   1400479f2:	add    al,BYTE PTR [rax]
   1400479f4:	in     al,dx
   1400479f5:	push   rdx
   1400479f6:	add    al,BYTE PTR [rax]
   1400479f8:	pushf  
   1400479f9:	lea    eax,[rbx]
   1400479fb:	add    ah,ch
   1400479fd:	push   rdx
   1400479fe:	add    al,BYTE PTR [rax]
   140047a00:	or     BYTE PTR [rbx+0x2],dl
   140047a03:	add    BYTE PTR [rbp+rcx*4+0x53100003],bh
   140047a0a:	add    al,BYTE PTR [rax]
   140047a0c:	push   rax
   140047a0d:	push   rbx
   140047a0e:	add    al,BYTE PTR [rax]
   140047a10:	int3   
   140047a11:	lea    eax,[rbx]
   140047a13:	add    BYTE PTR [rax+0x53],dl
   140047a16:	add    al,BYTE PTR [rax]
   140047a18:	ficom  DWORD PTR [rbx+0x2]
   140047a1b:	add    al,ah
   140047a1d:	lea    eax,[rbx]
   140047a1f:	add    dl,bl
   140047a21:	push   rbx
   140047a22:	add    al,BYTE PTR [rax]
   140047a24:	lods   al,BYTE PTR ds:[rsi]
   140047a25:	push   rbp
   140047a26:	add    al,BYTE PTR [rax]
   140047a28:	hlt    
   140047a29:	lea    eax,[rbx]
   140047a2b:	add    BYTE PTR [rbp+rdx*2+0x55b40002],ch
   140047a32:	add    al,BYTE PTR [rax]
   140047a34:	adc    al,0x8e
   140047a36:	add    eax,DWORD PTR [rax]
   140047a38:	mov    ah,0x55
   140047a3a:	add    al,BYTE PTR [rax]
   140047a3c:	retf   0x255
   140047a3f:	add    BYTE PTR [rsi+rcx*4],ah
   140047a42:	add    eax,DWORD PTR [rax]
   140047a44:	retf   0x255
   140047a47:	add    bh,cl
   140047a49:	push   rbp
   140047a4a:	add    al,BYTE PTR [rax]
   140047a4c:	xor    al,0x8e
   140047a4e:	add    eax,DWORD PTR [rax]
   140047a50:	iret   
   140047a51:	push   rbp
   140047a52:	add    al,BYTE PTR [rax]
   140047a54:	(bad)  
   140047a55:	push   rbp
   140047a56:	add    al,BYTE PTR [rax]
   140047a58:	pop    rax
   140047a59:	mov    es,WORD PTR [rbx]
   140047a5b:	add    al,ah
   140047a5d:	push   rbp
   140047a5e:	add    al,BYTE PTR [rax]
   140047a60:	and    al,0x57
   140047a62:	add    al,BYTE PTR [rax]
   140047a64:	adc    BYTE PTR [rbx+rax*1+0x0],dh
   140047a68:	xor    BYTE PTR [rdi+0x2],dl
   140047a6b:	add    al,cl
   140047a6d:	pop    rbx
   140047a6e:	add    al,BYTE PTR [rax]
   140047a70:	ins    BYTE PTR es:[rdi],dx
   140047a71:	mov    es,WORD PTR [rbx]
   140047a73:	add    al,dl
   140047a75:	pop    rbx
   140047a76:	add    al,BYTE PTR [rax]
   140047a78:	pop    sp
   140047a7a:	add    al,BYTE PTR [rax]
   140047a7c:	shr    BYTE PTR [rbp+0x3],0x0
   140047a80:	adc    BYTE PTR [rbp+0x2],bl
   140047a83:	add    BYTE PTR [rbx-0x77fffda2],ch
   140047a89:	mov    es,WORD PTR [rbx]
   140047a8b:	add    BYTE PTR [rax-0x67fffda2],dh
   140047a91:	pop    rdi
   140047a92:	add    al,BYTE PTR [rax]
   140047a94:	pushf  
   140047a95:	mov    es,WORD PTR [rbx]
   140047a97:	add    BYTE PTR [rax-0x2bfffda1],ah
   140047a9d:	pop    rdi
   140047a9e:	add    al,BYTE PTR [rax]
   140047aa0:	lods   al,BYTE PTR ds:[rsi]
   140047aa1:	mov    es,WORD PTR [rbx]
   140047aa3:	add    al,dh
   140047aa5:	pop    rdi
   140047aa6:	add    al,BYTE PTR [rax]
   140047aa8:	push   rdi
   140047aa9:	(bad)  
   140047aaa:	add    al,BYTE PTR [rax]
   140047aac:	(bad)  
   140047aad:	mov    es,WORD PTR [rbx]
   140047aaf:	add    BYTE PTR [rax+0x61],ah
   140047ab2:	add    al,BYTE PTR [rax]
   140047ab4:	nop
   140047ab5:	(bad)  
   140047ab6:	add    al,BYTE PTR [rax]
   140047ab8:	rex.WR push 0x3
   140047abb:	add    BYTE PTR [rax+0x59000261],dl
   140047ac1:	(bad)  
   140047ac3:	add    al,al
   140047ac5:	pop    QWORD PTR [rbx]
   140047ac7:	add    BYTE PTR [rax+0x62],ah
   140047aca:	add    al,BYTE PTR [rax]
   140047acc:	(bad)  
   140047ace:	add    al,BYTE PTR [rax]
   140047ad0:	rex.WR push 0x3
   140047ad3:	add    BYTE PTR [rax+0x71000263],al
   140047ad9:	add    al,BYTE PTR fs:[rax]
   140047adc:	nop
   140047add:	nop
   140047ade:	add    eax,DWORD PTR [rax]
   140047ae0:	and    BYTE PTR [rdx+rax*1+0x0],0x7f
   140047ae5:	push   0xffffffff90bc0002
   140047aea:	add    eax,DWORD PTR [rax]
   140047aec:	sub    BYTE PTR [rax+0x2],0x0
   140047af0:	lahf   
   140047af1:	ins    DWORD PTR es:[rdi],dx
   140047af2:	add    al,BYTE PTR [rax]
   140047af4:	or     BYTE PTR [rcx+0x6da00003],dl
   140047afa:	add    al,BYTE PTR [rax]
   140047afc:	repnz outs dx,BYTE PTR ds:[rsi]
   140047afe:	add    al,BYTE PTR [rax]
   140047b00:	push   rsp
   140047b01:	xchg   ecx,eax
   140047b02:	add    eax,DWORD PTR [rax]
   140047b04:	add    BYTE PTR [rdi+0x2],ch
   140047b07:	add    BYTE PTR [rsi+0x6f],al
   140047b0a:	add    al,BYTE PTR [rax]
   140047b0c:	lods   al,BYTE PTR ds:[rsi]
   140047b0d:	xchg   ecx,eax
   140047b0e:	add    eax,DWORD PTR [rax]
   140047b10:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140047b12:	add    al,BYTE PTR [rax]
   140047b14:	mov    edi,0xb8000270
   140047b19:	xchg   ecx,eax
   140047b1a:	add    eax,DWORD PTR [rax]
   140047b1c:	mov    edi,0xd7000270
   140047b21:	jo     0x140047b25
   140047b23:	add    ah,cl
   140047b25:	xchg   ecx,eax
   140047b26:	add    eax,DWORD PTR [rax]
   140047b28:	lock jo 0x140047b2d
   140047b2b:	add    BYTE PTR [rcx],cl
   140047b2d:	jbe    0x140047b31
   140047b2f:	add    ah,bl
   140047b31:	xchg   ecx,eax
   140047b32:	add    eax,DWORD PTR [rax]
   140047b34:	adc    BYTE PTR [rsi+0x2],dh
   140047b37:	add    BYTE PTR [rbp+0x76],bh
   140047b3a:	add    al,BYTE PTR [rax]
   140047b3c:	mov    WORD PTR [rbx+rax*1+0x0],?
   140047b40:	xor    BYTE PTR [rsi+0x2],0x0
   140047b44:	movsxd esi,DWORD PTR [rdi+0x2]
   140047b47:	add    BYTE PTR [rax+0x70000392],al
   140047b4d:	ja     0x140047b51
   140047b4f:	add    BYTE PTR [rdx-0x67fffd88],dh
   140047b55:	xchg   edx,eax
   140047b56:	add    eax,DWORD PTR [rax]
   140047b58:	sar    BYTE PTR [rax+0x2],0x0
   140047b5c:	in     eax,dx
   140047b5d:	jns    0x140047b61
   140047b5f:	add    BYTE PTR [rdx+rdx*4+0x79f00003],dh
   140047b66:	add    al,BYTE PTR [rax]
   140047b68:	test   eax,0xcc00027a
   140047b6d:	xchg   edx,eax
   140047b6e:	add    eax,DWORD PTR [rax]
   140047b70:	mov    al,0x7a
   140047b72:	add    al,BYTE PTR [rax]
   140047b74:	push   0xffffffffe400027b
   140047b79:	xchg   edx,eax
   140047b7a:	add    eax,DWORD PTR [rax]
   140047b7c:	jo     0x140047bf9
   140047b7e:	add    al,BYTE PTR [rax]
   140047b80:	(bad)  
   140047b81:	jnp    0x140047b85
   140047b83:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   140047b87:	add    al,ah
   140047b89:	jnp    0x140047b8d
   140047b8b:	add    BYTE PTR [rbp+0x1000027e],ah
   140047b91:	xchg   ebx,eax
   140047b92:	add    eax,DWORD PTR [rax]
   140047b94:	mov    al,0x7e
   140047b96:	add    al,BYTE PTR [rax]
   140047b98:	xor    edi,DWORD PTR [rdi+0x2]
   140047b9b:	add    BYTE PTR [rax-0x6d],bl
   140047b9e:	add    eax,DWORD PTR [rax]
   140047ba0:	xor    edi,DWORD PTR [rdi+0x2]
   140047ba3:	add    BYTE PTR [rax-0x7f],dl
   140047ba6:	add    al,BYTE PTR [rax]
   140047ba8:	je     0x140047b3d
   140047baa:	add    eax,DWORD PTR [rax]
   140047bac:	push   rax
   140047bad:	add    DWORD PTR [rdx],0x2816d00
   140047bb3:	add    BYTE PTR [rbx+rdx*4-0x7e92fffd],cl
   140047bba:	add    al,BYTE PTR [rax]
   140047bbc:	jnp    0x140047b3f
   140047bbe:	add    al,BYTE PTR [rax]
   140047bc0:	pushf  
   140047bc1:	xchg   ebx,eax
   140047bc2:	add    eax,DWORD PTR [rax]
   140047bc4:	jnp    0x140047b47
   140047bc6:	add    al,BYTE PTR [rax]
   140047bc8:	(bad)  
   140047bc9:	add    DWORD PTR [rdx],0x3938c00
   140047bcf:	add    BYTE PTR [rax+0x43000281],dl
   140047bd5:	(bad)  
   140047bd6:	add    al,BYTE PTR [rax]
   140047bd8:	mov    ah,0x93
   140047bda:	add    eax,DWORD PTR [rax]
   140047bdc:	push   rax
   140047bdd:	(bad)  
   140047bde:	add    al,BYTE PTR [rax]
   140047be0:	(bad)  
   140047be1:	add    DWORD PTR [rdx],0x0
   140047be4:	mov    esp,0xa0000393
   140047be9:	add    DWORD PTR [rdx],0x0
   140047bec:	pop    rbx
   140047bed:	xchg   BYTE PTR [rdx],al
   140047bef:	add    al,bl
   140047bf1:	xchg   ebx,eax
   140047bf2:	add    eax,DWORD PTR [rax]
   140047bf4:	(bad)  
   140047bf5:	xchg   BYTE PTR [rdx],al
   140047bf7:	add    BYTE PTR [rdi+rax*4],ch
   140047bfa:	add    al,BYTE PTR [rax]
   140047bfc:	clc    
   140047bfd:	push   0x3
   140047bff:	add    BYTE PTR [rax],dh
   140047c01:	xchg   DWORD PTR [rdx],eax
   140047c03:	add    BYTE PTR [rcx-0xffffd77],al
   140047c09:	xchg   ebx,eax
   140047c0a:	add    eax,DWORD PTR [rax]
   140047c0c:	nop
   140047c0d:	mov    DWORD PTR [rdx],eax
   140047c0f:	add    BYTE PTR [rbx+0xc00028a],cl
   140047c15:	imul   eax,DWORD PTR [rbx],0x0
   140047c18:	nop
   140047c19:	mov    al,BYTE PTR [rdx]
   140047c1b:	add    BYTE PTR [rdi-0x74],ch
   140047c1e:	add    al,BYTE PTR [rax]
   140047c20:	loopne 0x140047c8f
   140047c22:	add    eax,DWORD PTR [rax]
   140047c24:	jo     0x140047bb2
   140047c26:	add    al,BYTE PTR [rax]
   140047c28:	int3   
   140047c29:	pop    QWORD PTR [rdx]
   140047c2b:	add    BYTE PTR [rax],cl
   140047c2d:	xchg   esp,eax
   140047c2e:	add    eax,DWORD PTR [rax]
   140047c30:	ror    BYTE PTR [rdi-0x700dfffe],1
   140047c36:	add    al,BYTE PTR [rax]
   140047c38:	and    BYTE PTR [rbx+rax*1+0x28ff200],dl
   140047c3f:	add    BYTE PTR [rsi-0x6a],ch
   140047c42:	add    al,BYTE PTR [rax]
   140047c44:	xor    BYTE PTR [rbx+rax*1+0x2966e00],dl
   140047c4b:	add    BYTE PTR [rsi+0x54000296],ah
   140047c51:	xchg   esp,eax
   140047c52:	add    eax,DWORD PTR [rax]
   140047c54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047c55:	xchg   esi,eax
   140047c56:	add    al,BYTE PTR [rax]
   140047c58:	ins    DWORD PTR es:[rdi],dx
   140047c59:	xchg   edi,eax
   140047c5a:	add    al,BYTE PTR [rax]
   140047c5c:	fs xchg esp,eax
   140047c5e:	add    eax,DWORD PTR [rax]
   140047c60:	jo     0x140047bf9
   140047c62:	add    al,BYTE PTR [rax]
   140047c64:	pop    rbp
   140047c65:	cwde   
   140047c66:	add    al,BYTE PTR [rax]
   140047c68:	or     al,0x6b
   140047c6a:	add    eax,DWORD PTR [rax]
   140047c6c:	(bad)  
   140047c6d:	cwde   
   140047c6e:	add    al,BYTE PTR [rax]
   140047c70:	sbb    eax,0xfc000299
   140047c75:	ins    DWORD PTR es:[rdi],dx
   140047c76:	add    eax,DWORD PTR [rax]
   140047c78:	and    BYTE PTR [rcx-0x662efffe],bl
   140047c7e:	add    al,BYTE PTR [rax]
   140047c80:	cld    
   140047c81:	ins    DWORD PTR es:[rdi],dx
   140047c82:	add    eax,DWORD PTR [rax]
   140047c84:	loopne 0x140047c1f
   140047c86:	add    al,BYTE PTR [rax]
   140047c88:	rex (bad) 
   140047c8a:	add    al,BYTE PTR [rax]
   140047c8c:	rex.WR push 0x3
   140047c8f:	add    BYTE PTR [rax-0x66],al
   140047c92:	add    al,BYTE PTR [rax]
   140047c94:	movabs al,ds:0xa000036a4c00029a
   140047c9d:	(bad)  
   140047c9e:	add    al,BYTE PTR [rax]
   140047ca0:	adc    bl,BYTE PTR [rbx+0x6a4c0002]
   140047ca6:	add    eax,DWORD PTR [rax]
   140047ca8:	and    BYTE PTR [rbx-0x632dfffe],bl
   140047cae:	add    al,BYTE PTR [rax]
   140047cb0:	mov    BYTE PTR [rbx+rax*1+0x29d5000],dl
   140047cb7:	add    BYTE PTR [rip+0xffffffffa000029e],ah        # 0xe0047f5b
   140047cbd:	xchg   esp,eax
   140047cbe:	add    eax,DWORD PTR [rax]
   140047cc0:	xor    BYTE PTR [rsi-0x6006fffe],bl
   140047cc6:	add    al,BYTE PTR [rax]
   140047cc8:	mov    al,0x94
   140047cca:	add    eax,DWORD PTR [rax]
   140047ccc:	add    BYTE PTR [rax-0x5e30fffe],ah
   140047cd2:	add    al,BYTE PTR [rax]
   140047cd4:	lock xchg esp,eax
   140047cd6:	add    eax,DWORD PTR [rax]
   140047cd8:	shl    BYTE PTR [rcx-0x5c60fffe],1
   140047cde:	add    al,BYTE PTR [rax]
   140047ce0:	xor    BYTE PTR [rbp-0x5c5ffffd],dl
   140047ce6:	add    al,BYTE PTR [rax]
   140047ce8:	xor    ah,BYTE PTR [rdx+rax*1+0x3956800]
   140047cef:	add    BYTE PTR [rax-0x5c],al
   140047cf2:	add    al,BYTE PTR [rax]
   140047cf4:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140047cf6:	add    al,BYTE PTR [rax]
   140047cf8:	js     0x140047c8f
   140047cfa:	add    eax,DWORD PTR [rax]
   140047cfc:	push   rax
   140047cfd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047cfe:	add    al,BYTE PTR [rax]
   140047d00:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   140047d02:	add    al,BYTE PTR [rax]
   140047d04:	js     0x140047c9b
   140047d06:	add    eax,DWORD PTR [rax]
   140047d08:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047d0a:	add    al,BYTE PTR [rax]
   140047d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140047d0e:	add    al,BYTE PTR [rax]
   140047d10:	nop
   140047d11:	xchg   ebp,eax
   140047d12:	add    eax,DWORD PTR [rax]
   140047d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140047d16:	add    al,BYTE PTR [rax]
   140047d18:	(bad)  
   140047d19:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140047d1a:	add    al,BYTE PTR [rax]
   140047d1c:	movabs al,ds:0x1e0002a7d4000395
   140047d25:	test   al,0x2
   140047d27:	add    BYTE PTR [rbp+rdx*4-0x57dffffd],bh
   140047d2e:	add    al,BYTE PTR [rax]
   140047d30:	mov    ebp,0x400002a8
   140047d35:	push   0x3
   140047d37:	add    al,al
   140047d39:	test   al,0x2
   140047d3b:	add    BYTE PTR [rdx-0x57],cl
   140047d3e:	add    al,BYTE PTR [rax]
   140047d40:	shr    BYTE PTR [rbp+0x3],0x0
   140047d44:	push   rax
   140047d45:	test   eax,0xa9d20002
   140047d4a:	add    al,BYTE PTR [rax]
   140047d4c:	xor    BYTE PTR [rdx+0x3],ch
   140047d4f:	add    al,ah
   140047d51:	test   eax,0xaa510002
   140047d56:	add    al,BYTE PTR [rax]
   140047d58:	xor    BYTE PTR [rdx+0x3],ch
   140047d5b:	add    BYTE PTR [rax-0x56],ah
   140047d5e:	add    al,BYTE PTR [rax]
   140047d60:	outs   dx,BYTE PTR ds:[rsi]
   140047d61:	stos   DWORD PTR es:[rdi],eax
   140047d62:	add    al,BYTE PTR [rax]
   140047d64:	fcom   DWORD PTR [rbp-0x548ffffd]
   140047d6a:	add    al,BYTE PTR [rax]
   140047d6c:	stos   DWORD PTR es:[rdi],eax
   140047d6d:	stos   DWORD PTR es:[rdi],eax
   140047d6e:	add    al,BYTE PTR [rax]
   140047d70:	in     al,0x95
   140047d72:	add    eax,DWORD PTR [rax]
   140047d74:	stos   DWORD PTR es:[rdi],eax
   140047d75:	stos   DWORD PTR es:[rdi],eax
   140047d76:	add    al,BYTE PTR [rax]
   140047d78:	jl     0x140047d26
   140047d7a:	add    al,BYTE PTR [rax]
   140047d7c:	cld    
   140047d7d:	xchg   ebp,eax
   140047d7e:	add    eax,DWORD PTR [rax]
   140047d80:	jl     0x140047d2e
   140047d82:	add    al,BYTE PTR [rax]
   140047d84:	cwde   
   140047d85:	lods   al,BYTE PTR ds:[rsi]
   140047d86:	add    al,BYTE PTR [rax]
   140047d88:	adc    al,0x96
   140047d8a:	add    eax,DWORD PTR [rax]
   140047d8c:	cwde   
   140047d8d:	lods   al,BYTE PTR ds:[rsi]
   140047d8e:	add    al,BYTE PTR [rax]
   140047d90:	popf   
   140047d91:	lods   al,BYTE PTR ds:[rsi]
   140047d92:	add    al,BYTE PTR [rax]
   140047d94:	and    al,0x96
   140047d96:	add    eax,DWORD PTR [rax]
   140047d98:	popf   
   140047d99:	lods   al,BYTE PTR ds:[rsi]
   140047d9a:	add    al,BYTE PTR [rax]
   140047d9c:	mov    esp,0x140002ac
   140047da1:	xchg   esi,eax
   140047da2:	add    eax,DWORD PTR [rax]
   140047da4:	shr    BYTE PTR [rdx+rax*1+0x2ad0600],0x0
   140047dac:	xor    BYTE PTR [rdx+0x3],ch
   140047daf:	add    BYTE PTR [rax],dl
   140047db1:	lods   eax,DWORD PTR ds:[rsi]
   140047db2:	add    al,BYTE PTR [rax]
   140047db4:	cdq    
   140047db5:	lods   eax,DWORD PTR ds:[rsi]
   140047db6:	add    al,BYTE PTR [rax]
   140047db8:	xor    BYTE PTR [rdx+0x3],ch
   140047dbb:	add    BYTE PTR [rax-0x2fffd53],ah
   140047dc1:	lods   eax,DWORD PTR ds:[rsi]
   140047dc2:	add    al,BYTE PTR [rax]
   140047dc4:	cmp    al,0x96
   140047dc6:	add    eax,DWORD PTR [rax]
   140047dc8:	add    BYTE PTR [rsi-0x5176fffe],ch
   140047dce:	add    al,BYTE PTR [rax]
   140047dd0:	rex.R xchg esi,eax
   140047dd2:	add    eax,DWORD PTR [rax]
   140047dd4:	nop
   140047dd5:	scas   al,BYTE PTR es:[rdi]
   140047dd6:	add    al,BYTE PTR [rax]
   140047dd8:	or     al,0xaf
   140047dda:	add    al,BYTE PTR [rax]
   140047ddc:	jo     0x140047d74
   140047dde:	add    eax,DWORD PTR [rax]
   140047de0:	adc    BYTE PTR [rdi-0x50c4fffe],ch
   140047de6:	add    al,BYTE PTR [rax]
   140047de8:	rex.W jo 0x140047dee
   140047deb:	add    BYTE PTR [rax],dl
   140047ded:	mov    al,0x2
   140047def:	add    BYTE PTR [rax],ch
   140047df1:	mov    al,0x2
   140047df3:	add    BYTE PTR [rsi+rdx*4-0x4fd7fffd],bl
   140047dfa:	add    al,BYTE PTR [rax]
   140047dfc:	mov    al,0xb0
   140047dfe:	add    al,BYTE PTR [rax]
   140047e00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047e01:	xchg   esi,eax
   140047e02:	add    eax,DWORD PTR [rax]
   140047e04:	mov    al,0xb0
   140047e06:	add    al,BYTE PTR [rax]
   140047e08:	mov    edi,0xc00002b0
   140047e0d:	xchg   esi,eax
   140047e0e:	add    eax,DWORD PTR [rax]
   140047e10:	shl    BYTE PTR [rax-0x4e9cfffe],0x2
   140047e17:	add    BYTE PTR [rax+0x1000036a],ch
   140047e1d:	mov    dl,0x2
   140047e1f:	add    BYTE PTR [rdx+rsi*4-0x692ffffe],ah
   140047e26:	add    eax,DWORD PTR [rax]
   140047e28:	mov    al,0xb2
   140047e2a:	add    al,BYTE PTR [rax]
   140047e2c:	fdiv   DWORD PTR [rdx+0x6a300002]
   140047e32:	add    eax,DWORD PTR [rax]
   140047e34:	fdiv   DWORD PTR [rdx-0x4bdffffe]
   140047e3a:	add    al,BYTE PTR [rax]
   140047e3c:	fcom   DWORD PTR [rsi-0x4bdffffd]
   140047e42:	add    al,BYTE PTR [rax]
   140047e44:	xor    BYTE PTR [rdx+rax*1+0x396f800],dh
   140047e4b:	add    BYTE PTR [rax],dh
   140047e4d:	mov    ah,0x2
   140047e4f:	add    BYTE PTR [rax],bh
   140047e51:	mov    ch,0x2
   140047e53:	add    BYTE PTR [rax],cl
   140047e55:	xchg   edi,eax
   140047e56:	add    eax,DWORD PTR [rax]
   140047e58:	mov    bpl,0x2
   140047e5b:	add    bh,ch
   140047e5d:	mov    ch,0x2
   140047e5f:	add    BYTE PTR [rbx+rbp*2],cl
   140047e62:	add    eax,DWORD PTR [rax]
   140047e64:	lock mov ch,0x2
   140047e67:	add    BYTE PTR [rdi-0x4a],al
   140047e6a:	add    al,BYTE PTR [rax]
   140047e6c:	rex.WR push 0x3
   140047e6f:	add    BYTE PTR [rax-0x6cfffd4a],dl
   140047e75:	mov    bh,0x2
   140047e77:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   140047e7b:	add    BYTE PTR [rax+0x460002b7],ah
   140047e81:	mov    eax,0x6a300002
   140047e86:	add    eax,DWORD PTR [rax]
   140047e88:	push   rax
   140047e89:	mov    eax,0xb8b80002
   140047e8e:	add    al,BYTE PTR [rax]
   140047e90:	xor    BYTE PTR [rdx+0x3],ch
   140047e93:	add    al,al
   140047e95:	mov    eax,0xb9280002
   140047e9a:	add    al,BYTE PTR [rax]
   140047e9c:	xor    BYTE PTR [rdx+0x3],ch
   140047e9f:	add    BYTE PTR [rax],dh
   140047ea1:	mov    ecx,0xb9d60002
   140047ea6:	add    al,BYTE PTR [rax]
   140047ea8:	xor    BYTE PTR [rdx+0x3],ch
   140047eab:	add    al,dh
   140047ead:	mov    ecx,0xbb7c0002
   140047eb2:	add    al,BYTE PTR [rax]
   140047eb4:	sbb    al,0x97
   140047eb6:	add    eax,DWORD PTR [rax]
   140047eb8:	cmp    BYTE PTR [rbx-0x437afffe],0x2
   140047ebf:	add    BYTE PTR [rdi+rdx*4+0x3],dl
   140047ec3:	add    BYTE PTR [rax+0x50002bc],dl
   140047ec9:	mov    ebp,0x97680002
   140047ece:	add    eax,DWORD PTR [rax]
   140047ed0:	add    eax,0xbb0002bd
   140047ed5:	mov    esi,0x97840002
   140047eda:	add    eax,DWORD PTR [rax]
   140047edc:	mov    ebx,0xb0002be
   140047ee1:	mov    edi,0x97980002
   140047ee6:	add    eax,DWORD PTR [rax]
   140047ee8:	or     al,0xbf
   140047eea:	add    al,BYTE PTR [rax]
   140047eec:	cmp    al,al
   140047eee:	add    al,BYTE PTR [rax]
   140047ef0:	rcl    BYTE PTR [rdi-0x3fc3fffd],0x2
   140047ef7:	add    BYTE PTR [rcx+rax*8],ch
   140047efa:	add    al,BYTE PTR [rax]
   140047efc:	test   al,0x97
   140047efe:	add    eax,DWORD PTR [rax]
   140047f00:	add    dh,al
   140047f02:	add    al,BYTE PTR [rax]
   140047f04:	(bad)  
   140047f05:	mov    BYTE PTR [rdx],0x0
   140047f08:	test   al,0x6a
   140047f0a:	add    eax,DWORD PTR [rax]
   140047f0c:	rol    dh,1
   140047f0e:	add    al,BYTE PTR [rax]
   140047f10:	xor    eax,edi
   140047f12:	add    al,BYTE PTR [rax]
   140047f14:	cmp    al,0x96
   140047f16:	add    eax,DWORD PTR [rax]
   140047f18:	xor    al,0xc7
   140047f1a:	add    al,BYTE PTR [rax]
   140047f1c:	cs leave 
   140047f1e:	add    al,BYTE PTR [rax]
   140047f20:	loopne 0x140047eb9
   140047f22:	add    eax,DWORD PTR [rax]
   140047f24:	xor    cl,cl
   140047f26:	add    al,BYTE PTR [rax]
   140047f28:	rex.X leave 
   140047f2a:	add    al,BYTE PTR [rax]
   140047f2c:	test   al,0x6a
   140047f2e:	add    eax,DWORD PTR [rax]
   140047f30:	(bad)  
   140047f31:	leave  
   140047f32:	add    al,BYTE PTR [rax]
   140047f34:	jg     0x140047eff
   140047f36:	add    al,BYTE PTR [rax]
   140047f38:	adc    BYTE PTR [rax-0x3677fffd],bl
   140047f3e:	add    al,BYTE PTR [rax]
   140047f40:	(bad)  
   140047f41:	leave  
   140047f42:	add    al,BYTE PTR [rax]
   140047f44:	xor    BYTE PTR [rdx+0x3],ch
   140047f47:	add    al,bl
   140047f49:	leave  
   140047f4a:	add    al,BYTE PTR [rax]
   140047f4c:	mov    dl,cl
   140047f4e:	add    al,BYTE PTR [rax]
   140047f50:	adc    al,0x98
   140047f52:	add    eax,DWORD PTR [rax]
   140047f54:	mov    dl,cl
   140047f56:	add    al,BYTE PTR [rax]
   140047f58:	lahf   
   140047f59:	retf   0x2
   140047f5c:	test   al,0x6a
   140047f5e:	add    eax,DWORD PTR [rax]
   140047f60:	test   al,0xca
   140047f62:	add    al,BYTE PTR [rax]
   140047f64:	icebp  
   140047f65:	retf   0x2
   140047f68:	xor    BYTE PTR [rdx+0x3],ch
   140047f6b:	add    ah,dh
   140047f6d:	retf   0x2
   140047f70:	(bad)
   140047f73:	add    BYTE PTR [rsi+rbp*2+0x3],al
   140047f77:	add    al,cl
   140047f79:	retf   
   140047f7a:	add    al,BYTE PTR [rax]
   140047f7c:	fcmovne st,st(3)
   140047f7e:	add    al,BYTE PTR [rax]
   140047f80:	test   al,0x6a
   140047f82:	add    eax,DWORD PTR [rax]
   140047f84:	fmul   st(3),st
   140047f86:	add    al,BYTE PTR [rax]
   140047f88:	ja     0x140047f56
   140047f8a:	add    al,BYTE PTR [rax]
   140047f8c:	cmp    al,0x98
   140047f8e:	add    eax,DWORD PTR [rax]
   140047f90:	js     0x140047f5e
   140047f92:	add    al,BYTE PTR [rax]
   140047f94:	loop   0x140047f62
   140047f96:	add    al,BYTE PTR [rax]
   140047f98:	or     al,0x6b
   140047f9a:	add    eax,DWORD PTR [rax]
   140047f9c:	in     al,0xcc
   140047f9e:	add    al,BYTE PTR [rax]
   140047fa0:	add    ebp,ecx
   140047fa2:	add    al,BYTE PTR [rax]
   140047fa4:	test   al,0x6a
   140047fa6:	add    eax,DWORD PTR [rax]
   140047fa8:	add    al,0xcd
   140047faa:	add    al,BYTE PTR [rax]
   140047fac:	addr32 int 0x2
   140047faf:	add    BYTE PTR [rax],dh
   140047fb1:	push   0x3
   140047fb3:	add    BYTE PTR [rax-0x33],ch
   140047fb6:	add    al,BYTE PTR [rax]
   140047fb8:	(bad)
   140047fbb:	add    BYTE PTR [rax+rbx*4+0x3],al
   140047fbf:	add    al,cl
   140047fc1:	int    0x2
   140047fc3:	add    BYTE PTR [rdx],dl
   140047fc5:	(bad)  
   140047fc6:	add    al,BYTE PTR [rax]
   140047fc8:	ins    BYTE PTR es:[rdi],dx
   140047fc9:	cwde   
   140047fca:	add    eax,DWORD PTR [rax]
   140047fcc:	and    dh,cl
   140047fce:	add    al,BYTE PTR [rax]
   140047fd0:	pop    rax
   140047fd1:	(bad)  
   140047fd2:	add    al,BYTE PTR [rax]
   140047fd4:	test   al,0x6a
   140047fd6:	add    eax,DWORD PTR [rax]
   140047fd8:	pop    rax
   140047fd9:	(bad)  
   140047fda:	add    al,BYTE PTR [rax]
   140047fdc:	outs   dx,DWORD PTR ds:[rsi]
   140047fdd:	(bad)  
   140047fde:	add    al,BYTE PTR [rax]
   140047fe0:	test   al,0x6a
   140047fe2:	add    eax,DWORD PTR [rax]
   140047fe4:	ror    dh,1
   140047fe6:	add    al,BYTE PTR [rax]
   140047fe8:	sbb    eax,0x940002cf
   140047fed:	cwde   
   140047fee:	add    eax,DWORD PTR [rax]
   140047ff0:	push   rax
   140047ff1:	iret   
   140047ff2:	add    al,BYTE PTR [rax]
   140047ff4:	cld    
   140047ff5:	iret   
   140047ff6:	add    al,BYTE PTR [rax]
   140047ff8:	mov    eax,0xfc000398
   140047ffd:	iret   
   140047ffe:	add    al,BYTE PTR [rax]
   140048000:	xor    al,0xd0
   140048002:	add    al,BYTE PTR [rax]
   140048004:	rex.WR push 0x3
   140048007:	add    BYTE PTR [rax+rdx*8],dh
   14004800a:	add    al,BYTE PTR [rax]
   14004800c:	ins    BYTE PTR es:[rdi],dx
   14004800d:	rol    BYTE PTR [rdx],1
   14004800f:	add    BYTE PTR [rdx+rbp*2+0x3],cl
   140048013:	add    al,al
   140048015:	rol    BYTE PTR [rdx],1
   140048017:	add    BYTE PTR [rbp-0x2f],ah
   14004801a:	add    al,BYTE PTR [rax]
   14004801c:	rex.WR push 0x3
   14004801f:	add    BYTE PTR [rax-0x2f],ch
   140048022:	add    al,BYTE PTR [rax]
   140048024:	pushf  
   140048025:	rol    DWORD PTR [rdx],1
   140048027:	add    BYTE PTR [rax],dh
   140048029:	push   0x3
   14004802b:	add    BYTE PTR [rcx+rdx*8-0x2e3afffe],bl
   140048032:	add    al,BYTE PTR [rax]
   140048034:	rex.WR push 0x3
   140048037:	add    al,ah
   140048039:	rol    DWORD PTR [rdx],1
   14004803b:	add    BYTE PTR [rdi-0x2e],ch
   14004803e:	add    al,BYTE PTR [rax]
   140048040:	(bad)  
   140048041:	cwde   
   140048042:	add    eax,DWORD PTR [rax]
   140048044:	mov    al,0xd2
   140048046:	add    al,BYTE PTR [rax]
   140048048:	cmc    
   140048049:	rol    BYTE PTR [rdx],cl
   14004804b:	add    BYTE PTR [rsp+rbp*2],cl
   14004804e:	add    eax,DWORD PTR [rax]
   140048050:	cmc    
   140048051:	rol    BYTE PTR [rdx],cl
   140048053:	add    BYTE PTR [rbx+rdx*8],dh
   140048056:	add    al,BYTE PTR [rax]
   140048058:	sbb    al,0x6c
   14004805a:	add    eax,DWORD PTR [rax]
   14004805c:	out    dx,al
   14004805d:	in     al,0x2
   14004805f:	add    BYTE PTR [riz*8-0x67cbfffe],cl
   140048066:	add    eax,DWORD PTR [rax]
   140048068:	or     al,0xe5
   14004806a:	add    al,BYTE PTR [rax]
   14004806c:	(bad)  
   14004806d:	in     eax,0x2
   14004806f:	add    BYTE PTR [rax+rbx*4],dh
   140048072:	add    eax,DWORD PTR [rax]
   140048074:	(bad)  
   140048075:	in     eax,0x2
   140048077:	add    BYTE PTR [rbx-0x1b],dl
   14004807a:	add    al,BYTE PTR [rax]
   14004807c:	xor    al,0x98
   14004807e:	add    eax,DWORD PTR [rax]
   140048080:	push   rbx
   140048081:	in     eax,0x2
   140048083:	add    BYTE PTR [rbp+riz*8-0x67cbfffe],dl
   14004808a:	add    eax,DWORD PTR [rax]
   14004808c:	movabs al,ds:0x340002e5c00002e5
   140048095:	cwde   
   140048096:	add    eax,DWORD PTR [rax]

Disassembly of section .rsrc:

0000000140049000 <.rsrc>:
	...
   140049008:	add    al,0x0
   14004900a:	add    BYTE PTR [rax],al
   14004900c:	add    BYTE PTR [rax],al
   14004900e:	(bad)  
   14004900f:	add    BYTE PTR [rbx],al
   140049011:	add    BYTE PTR [rax],al
   140049013:	add    BYTE PTR [rax+0x0],al
   140049016:	add    BYTE PTR [rax+0x5],al
   14004901c:	cwde   
   14004901d:	add    BYTE PTR [rax],al
   14004901f:	add    BYTE PTR [rsi],0x0
   140049022:	add    BYTE PTR [rax],al
   140049024:	fadd   DWORD PTR [rax]
   140049026:	add    BYTE PTR [rax+0xe],al
   14004902c:	adc    BYTE PTR [rcx],al
   14004902e:	add    BYTE PTR [rax+0x10],al
   140049034:	sub    BYTE PTR [rcx],al
   140049036:	add    BYTE PTR [rax+0x18],al
   14004903c:	rex add DWORD PTR [rax],eax
   14004903f:	add    BYTE PTR [rax],0x0
   140049042:	add    BYTE PTR [rax],al
   140049044:	add    BYTE PTR [rax],al
   140049046:	add    BYTE PTR [rax],al
   140049048:	add    al,0x0
   14004904a:	add    BYTE PTR [rax],al
   14004904c:	add    BYTE PTR [rax],al
   14004904e:	or     DWORD PTR [rax],eax
   140049050:	add    DWORD PTR [rax],eax
   140049052:	add    BYTE PTR [rax],al
   140049054:	pop    rax
   140049055:	add    DWORD PTR [rax],eax
   140049057:	add    BYTE PTR [rdx],0x0
   14004905a:	add    BYTE PTR [rax],al
   14004905c:	jo     0x14004905f
   14004905e:	add    BYTE PTR [rax+0x3],al
   140049064:	mov    BYTE PTR [rcx],al
   140049066:	add    BYTE PTR [rax+0x4],al
   14004906c:	movabs al,ds:0xb800000005800001
   140049075:	add    DWORD PTR [rax],eax
   140049077:	add    BYTE PTR [rsi],0x0
   14004907a:	add    BYTE PTR [rax],al
   14004907c:	rol    BYTE PTR [rcx],1
   14004907e:	add    BYTE PTR [rax+0x7],al
   140049084:	call   0x14884908a
   140049089:	add    BYTE PTR [rax],al
   14004908b:	add    BYTE PTR [rax],al
   14004908d:	add    al,BYTE PTR [rax]
   14004908f:	or     BYTE PTR [rcx],0x0
   140049092:	add    BYTE PTR [rax],al
   140049094:	sbb    BYTE PTR [rdx],al
   140049096:	add    BYTE PTR [rax+0x0],al
   14004909c:	add    BYTE PTR [rax],al
   14004909e:	add    BYTE PTR [rax],al
   1400490a0:	add    al,0x0
   1400490a2:	add    BYTE PTR [rax],al
   1400490a4:	add    BYTE PTR [rax],al
   1400490a6:	(bad)  
   1400490a7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400490ab:	add    BYTE PTR [rax],dh
   1400490ad:	add    al,BYTE PTR [rax]
   1400490af:	or     al,0x0
   1400490b2:	add    BYTE PTR [rax],al
   1400490b4:	rex.W add al,BYTE PTR [rax]
   1400490b7:	or     cl,0x0
   1400490ba:	add    BYTE PTR [rax],al
   1400490bc:	(bad)  
   1400490bd:	add    al,BYTE PTR [rax]
   1400490bf:	or     bl,0x0
   1400490c2:	add    BYTE PTR [rax],al
   1400490c4:	js     0x1400490c8
   1400490c6:	add    BYTE PTR [rax+0xcc],al
   1400490cc:	nop
   1400490cd:	add    al,BYTE PTR [rax]
   1400490cf:	or     ch,0x0
   1400490d2:	add    BYTE PTR [rax],al
   1400490d4:	test   al,0x2
   1400490d6:	add    BYTE PTR [rax+0x0],al
   1400490dc:	add    BYTE PTR [rax],al
   1400490de:	add    BYTE PTR [rax],al
   1400490e0:	add    al,0x0
   1400490e2:	add    BYTE PTR [rax],al
   1400490e4:	add    BYTE PTR [rax],al
   1400490e6:	add    eax,0x700
   1400490eb:	add    al,al
   1400490ed:	add    al,BYTE PTR [rax]
   1400490ef:	or     BYTE PTR [rcx],0x0
   1400490f2:	add    BYTE PTR [rax],al
   1400490f4:	fadd   DWORD PTR [rdx]
   1400490f6:	add    BYTE PTR [rax+0xe71],al
   1400490fc:	lock add al,BYTE PTR [rax]
   1400490ff:	xor    BYTE PTR [rdx+0xe],0x0
   140049103:	add    BYTE PTR [rax],cl
   140049105:	add    eax,DWORD PTR [rax]
   140049107:	xor    BYTE PTR [rbx+0xe],0x0
   14004910b:	add    BYTE PTR [rax],ah
   14004910d:	add    eax,DWORD PTR [rax]
   14004910f:	add    BYTE PTR [rax],0x0
   140049112:	add    BYTE PTR [rax],al
   140049114:	add    BYTE PTR [rax],al
   140049116:	add    BYTE PTR [rax],al
   140049118:	add    al,0x0
   14004911a:	add    BYTE PTR [rax],al
   14004911c:	add    BYTE PTR [rax],al
   14004911e:	add    DWORD PTR [rax],eax
   140049120:	add    BYTE PTR [rax],0x0
   140049123:	add    BYTE PTR [rax],bh
   140049125:	add    eax,DWORD PTR [rax]
   140049127:	add    BYTE PTR [rax],0x0
   14004912a:	add    BYTE PTR [rax],al
   14004912c:	add    BYTE PTR [rax],al
   14004912e:	add    BYTE PTR [rax],al
   140049130:	add    al,0x0
   140049132:	add    BYTE PTR [rax],al
   140049134:	add    BYTE PTR [rax],al
   140049136:	add    DWORD PTR [rax],eax
   140049138:	add    DWORD PTR [rax],eax
   14004913a:	add    BYTE PTR [rax],al
   14004913c:	push   rax
   14004913d:	add    eax,DWORD PTR [rax]
   14004913f:	add    BYTE PTR [rax],0x0
   140049142:	add    BYTE PTR [rax],al
   140049144:	add    BYTE PTR [rax],al
   140049146:	add    BYTE PTR [rax],al
   140049148:	add    al,0x0
   14004914a:	add    BYTE PTR [rax],al
   14004914c:	add    BYTE PTR [rax],al
   14004914e:	add    DWORD PTR [rax],eax
   140049150:	add    DWORD PTR [rax],eax
   140049152:	add    BYTE PTR [rax],al
   140049154:	push   0x800003
   140049159:	add    BYTE PTR [rax],al
   14004915b:	add    BYTE PTR [rax],al
   14004915d:	add    BYTE PTR [rax],al
   14004915f:	add    BYTE PTR [rax+rax*1],al
   140049162:	add    BYTE PTR [rax],al
   140049164:	add    BYTE PTR [rax],al
   140049166:	add    DWORD PTR [rax],eax
   140049168:	or     DWORD PTR [rax+rax*1],eax
   14004916b:	add    BYTE PTR [rax+0x3],al
   140049171:	add    BYTE PTR [rax],al
   140049173:	add    BYTE PTR [rax],al
   140049175:	add    BYTE PTR [rax],al
   140049177:	add    BYTE PTR [rax+rax*1],al
   14004917a:	add    BYTE PTR [rax],al
   14004917c:	add    BYTE PTR [rax],al
   14004917e:	add    DWORD PTR [rax],eax
   140049180:	or     DWORD PTR [rax+rax*1],eax
   140049183:	add    BYTE PTR [rax+0x3],dl
   140049189:	add    BYTE PTR [rax],al
   14004918b:	add    BYTE PTR [rax],al
   14004918d:	add    BYTE PTR [rax],al
   14004918f:	add    BYTE PTR [rax+rax*1],al
   140049192:	add    BYTE PTR [rax],al
   140049194:	add    BYTE PTR [rax],al
   140049196:	add    DWORD PTR [rax],eax
   140049198:	or     DWORD PTR [rax+rax*1],eax
   14004919b:	add    BYTE PTR [rax+0x3],ah
   1400491a1:	add    BYTE PTR [rax],al
   1400491a3:	add    BYTE PTR [rax],al
   1400491a5:	add    BYTE PTR [rax],al
   1400491a7:	add    BYTE PTR [rax+rax*1],al
   1400491aa:	add    BYTE PTR [rax],al
   1400491ac:	add    BYTE PTR [rax],al
   1400491ae:	add    DWORD PTR [rax],eax
   1400491b0:	or     DWORD PTR [rax+rax*1],eax
   1400491b3:	add    BYTE PTR [rax+0x3],dh
   1400491b9:	add    BYTE PTR [rax],al
   1400491bb:	add    BYTE PTR [rax],al
   1400491bd:	add    BYTE PTR [rax],al
   1400491bf:	add    BYTE PTR [rax+rax*1],al
   1400491c2:	add    BYTE PTR [rax],al
   1400491c4:	add    BYTE PTR [rax],al
   1400491c6:	add    DWORD PTR [rax],eax
   1400491c8:	or     DWORD PTR [rax+rax*1],eax
   1400491cb:	add    al,al
   1400491cd:	add    eax,DWORD PTR [rax]
	...
   1400491d7:	add    BYTE PTR [rax+rax*1],al
   1400491da:	add    BYTE PTR [rax],al
   1400491dc:	add    BYTE PTR [rax],al
   1400491de:	add    DWORD PTR [rax],eax
   1400491e0:	or     DWORD PTR [rax+rax*1],eax
   1400491e3:	add    al,dl
   1400491e5:	add    eax,DWORD PTR [rax]
	...
   1400491ef:	add    BYTE PTR [rax+rax*1],al
   1400491f2:	add    BYTE PTR [rax],al
   1400491f4:	add    BYTE PTR [rax],al
   1400491f6:	add    DWORD PTR [rax],eax
   1400491f8:	or     DWORD PTR [rax+rax*1],eax
   1400491fb:	add    al,ah
   1400491fd:	add    eax,DWORD PTR [rax]
	...
   140049207:	add    BYTE PTR [rax+rax*1],al
   14004920a:	add    BYTE PTR [rax],al
   14004920c:	add    BYTE PTR [rax],al
   14004920e:	add    DWORD PTR [rax],eax
   140049210:	or     DWORD PTR [rax+rax*1],eax
   140049213:	add    al,dh
   140049215:	add    eax,DWORD PTR [rax]
	...
   14004921f:	add    BYTE PTR [rax+rax*1],al
   140049222:	add    BYTE PTR [rax],al
   140049224:	add    BYTE PTR [rax],al
   140049226:	add    DWORD PTR [rax],eax
   140049228:	or     DWORD PTR [rax+rax*1],eax
   14004922b:	add    BYTE PTR [rax],al
   14004922d:	add    al,0x0
	...
   140049237:	add    BYTE PTR [rax+rax*1],al
   14004923a:	add    BYTE PTR [rax],al
   14004923c:	add    BYTE PTR [rax],al
   14004923e:	add    DWORD PTR [rax],eax
   140049240:	or     DWORD PTR [rax+rax*1],eax
   140049243:	add    BYTE PTR [rax],dl
   140049245:	add    al,0x0
	...
   14004924f:	add    BYTE PTR [rax+rax*1],al
   140049252:	add    BYTE PTR [rax],al
   140049254:	add    BYTE PTR [rax],al
   140049256:	add    DWORD PTR [rax],eax
   140049258:	or     DWORD PTR [rax+rax*1],eax
   14004925b:	add    BYTE PTR [rax],ah
   14004925d:	add    al,0x0
	...
   140049267:	add    BYTE PTR [rax+rax*1],al
   14004926a:	add    BYTE PTR [rax],al
   14004926c:	add    BYTE PTR [rax],al
   14004926e:	add    DWORD PTR [rax],eax
   140049270:	or     DWORD PTR [rax+rax*1],eax
   140049273:	add    BYTE PTR [rax],dh
   140049275:	add    al,0x0
	...
   14004927f:	add    BYTE PTR [rax+rax*1],al
   140049282:	add    BYTE PTR [rax],al
   140049284:	add    BYTE PTR [rax],al
   140049286:	add    DWORD PTR [rax],eax
   140049288:	or     DWORD PTR [rax+rax*1],eax
   14004928b:	add    BYTE PTR [rax+0x4],al
	...
   140049296:	add    BYTE PTR [rax],al
   140049298:	add    al,0x0
   14004929a:	add    BYTE PTR [rax],al
   14004929c:	add    BYTE PTR [rax],al
   14004929e:	add    DWORD PTR [rax],eax
   1400492a0:	or     DWORD PTR [rax+rax*1],eax
   1400492a3:	add    BYTE PTR [rax+0x4],dl
	...
   1400492ae:	add    BYTE PTR [rax],al
   1400492b0:	add    al,0x0
   1400492b2:	add    BYTE PTR [rax],al
   1400492b4:	add    BYTE PTR [rax],al
   1400492b6:	add    DWORD PTR [rax],eax
   1400492b8:	or     DWORD PTR [rax+rax*1],eax
   1400492bb:	add    BYTE PTR [rax+0x4],ah
	...
   1400492c6:	add    BYTE PTR [rax],al
   1400492c8:	add    al,0x0
   1400492ca:	add    BYTE PTR [rax],al
   1400492cc:	add    BYTE PTR [rax],al
   1400492ce:	add    DWORD PTR [rax],eax
   1400492d0:	or     DWORD PTR [rax+rax*1],eax
   1400492d3:	add    BYTE PTR [rax+0x4],dh
	...
   1400492de:	add    BYTE PTR [rax],al
   1400492e0:	add    al,0x0
   1400492e2:	add    BYTE PTR [rax],al
   1400492e4:	add    BYTE PTR [rax],al
   1400492e6:	add    DWORD PTR [rax],eax
   1400492e8:	or     DWORD PTR [rax+rax*1],eax
   1400492eb:	add    BYTE PTR [rax+0x4],al
   1400492f1:	add    BYTE PTR [rax],al
   1400492f3:	add    BYTE PTR [rax],al
   1400492f5:	add    BYTE PTR [rax],al
   1400492f7:	add    BYTE PTR [rax+rax*1],al
   1400492fa:	add    BYTE PTR [rax],al
   1400492fc:	add    BYTE PTR [rax],al
   1400492fe:	add    DWORD PTR [rax],eax
   140049300:	or     DWORD PTR [rax+rax*1],eax
   140049303:	add    BYTE PTR [rax+0x4],dl
   140049309:	add    BYTE PTR [rax],al
   14004930b:	add    BYTE PTR [rax],al
   14004930d:	add    BYTE PTR [rax],al
   14004930f:	add    BYTE PTR [rax+rax*1],al
   140049312:	add    BYTE PTR [rax],al
   140049314:	add    BYTE PTR [rax],al
   140049316:	add    DWORD PTR [rax],eax
   140049318:	or     DWORD PTR [rax+rax*1],eax
   14004931b:	add    BYTE PTR [rax+0x4],ah
   140049321:	add    BYTE PTR [rax],al
   140049323:	add    BYTE PTR [rax],al
   140049325:	add    BYTE PTR [rax],al
   140049327:	add    BYTE PTR [rax+rax*1],al
   14004932a:	add    BYTE PTR [rax],al
   14004932c:	add    BYTE PTR [rax],al
   14004932e:	add    DWORD PTR [rax],eax
   140049330:	or     DWORD PTR [rax+rax*1],eax
   140049333:	add    BYTE PTR [rax+0x4],dh
   140049339:	add    BYTE PTR [rax],al
   14004933b:	add    BYTE PTR [rax],al
   14004933d:	add    BYTE PTR [rax],al
   14004933f:	add    BYTE PTR [rax+rax*1],al
   140049342:	add    BYTE PTR [rax],al
   140049344:	add    BYTE PTR [rax],al
   140049346:	add    DWORD PTR [rax],eax
   140049348:	or     DWORD PTR [rax+rax*1],eax
   14004934b:	add    al,al
   14004934d:	add    al,0x0
	...
   140049357:	add    BYTE PTR [rax+rax*1],al
   14004935a:	add    BYTE PTR [rax],al
   14004935c:	add    BYTE PTR [rax],al
   14004935e:	add    DWORD PTR [rax],eax
   140049360:	or     DWORD PTR [rax+rax*1],eax
   140049363:	add    al,dl
   140049365:	add    al,0x0
	...
   14004936f:	add    BYTE PTR [rax+rax*1],al
   140049372:	add    BYTE PTR [rax],al
   140049374:	add    BYTE PTR [rax],al
   140049376:	add    DWORD PTR [rax],eax
   140049378:	or     DWORD PTR [rax+rax*1],eax
   14004937b:	add    al,ah
   14004937d:	add    al,0x0
   14004937f:	add    al,dh
   140049381:	xchg   esp,eax
   140049382:	add    al,0x0
   140049384:	test   al,0xe
   140049386:	add    BYTE PTR [rax],al
   140049388:	in     al,0x4
   14004938a:	add    BYTE PTR [rax],al
   14004938c:	add    BYTE PTR [rax],al
   14004938e:	add    BYTE PTR [rax],al
   140049390:	cwde   
   140049391:	movabs ds:0x4e4000008a80004,eax
   14004939a:	add    BYTE PTR [rax],al
   14004939c:	add    BYTE PTR [rax],al
   14004939e:	add    BYTE PTR [rax],al
   1400493a0:	lods   al,BYTE PTR ds:[rsi]
   1400493a2:	add    al,0x0
   1400493a4:	enter  0x6,0x0
   1400493a8:	in     al,0x4
   1400493aa:	add    BYTE PTR [rax],al
   1400493ac:	add    BYTE PTR [rax],al
   1400493ae:	add    BYTE PTR [rax],al
   1400493b0:	or     BYTE PTR [rbx+0x5680004],dh
   1400493b6:	add    BYTE PTR [rax],al
   1400493b8:	in     al,0x4
   1400493ba:	add    BYTE PTR [rax],al
   1400493bc:	add    BYTE PTR [rax],al
   1400493be:	add    BYTE PTR [rax],al
   1400493c0:	jo     0x14004937a
   1400493c2:	add    al,0x0
   1400493c4:	pop    rcx
   1400493c5:	movsxd eax,DWORD PTR [rax]
   1400493c7:	add    ah,ah
   1400493c9:	add    al,0x0
   1400493cb:	add    BYTE PTR [rax],al
   1400493cd:	add    BYTE PTR [rax],al
   1400493cf:	add    ah,cl
   1400493d1:	sbb    eax,DWORD PTR [rip+0x25a800]        # 0x1402a3bd7
   1400493d7:	add    ah,ah
   1400493d9:	add    al,0x0
   1400493db:	add    BYTE PTR [rax],al
   1400493dd:	add    BYTE PTR [rax],al
   1400493df:	add    BYTE PTR [rcx+rax*2+0x5],dh
   1400493e3:	add    BYTE PTR [rax-0x1bfffff0],ch
   1400493e9:	add    al,0x0
   1400493eb:	add    BYTE PTR [rax],al
   1400493ed:	add    BYTE PTR [rax],al
   1400493ef:	add    BYTE PTR [rdx+rdx*2],bl
   1400493f2:	add    eax,0x98800
   1400493f7:	add    ah,ah
   1400493f9:	add    al,0x0
   1400493fb:	add    BYTE PTR [rax],al
   1400493fd:	add    BYTE PTR [rax],al
   1400493ff:	add    BYTE PTR [rbx+rbx*2+0x4680005],ah
   140049406:	add    BYTE PTR [rax],al
   140049408:	in     al,0x4
   14004940a:	add    BYTE PTR [rax],al
   14004940c:	add    BYTE PTR [rax],al
   14004940e:	add    BYTE PTR [rax],al
   140049410:	or     al,0x60
   140049412:	add    eax,0x16600
   140049417:	add    ah,ah
   140049419:	add    al,0x0
   14004941b:	add    BYTE PTR [rax],al
   14004941d:	add    BYTE PTR [rax],al
   14004941f:	add    BYTE PTR [rcx+riz*2+0x5],dh
   140049423:	add    BYTE PTR [rax],bh
   140049425:	add    eax,DWORD PTR [rax]
   140049427:	add    ah,ah
   140049429:	add    al,0x0
   14004942b:	add    BYTE PTR [rax],al
   14004942d:	add    BYTE PTR [rax],al
   14004942f:	add    BYTE PTR [rsp+riz*2+0x3dc0005],ch
   140049436:	add    BYTE PTR [rax],al
   140049438:	in     al,0x4
   14004943a:	add    BYTE PTR [rax],al
   14004943c:	add    BYTE PTR [rax],al
   14004943e:	add    BYTE PTR [rax],al
   140049440:	mov    BYTE PTR [rax+0x5],ch
   140049443:	add    ah,ah
   140049445:	add    DWORD PTR [rax],eax
   140049447:	add    ah,ah
   140049449:	add    al,0x0
   14004944b:	add    BYTE PTR [rax],al
   14004944d:	add    BYTE PTR [rax],al
   14004944f:	add    BYTE PTR [rdx+rbp*2+0x5],ch
   140049453:	add    BYTE PTR [rbx+rax*1],ch
   140049456:	add    BYTE PTR [rax],al
   140049458:	in     al,0x4
   14004945a:	add    BYTE PTR [rax],al
   14004945c:	add    BYTE PTR [rax],al
   14004945e:	add    BYTE PTR [rax],al
   140049460:	cwde   
   140049461:	ins    DWORD PTR es:[rdi],dx
   140049462:	add    eax,0x33600
   140049467:	add    ah,ah
   140049469:	add    al,0x0
   14004946b:	add    BYTE PTR [rax],al
   14004946d:	add    BYTE PTR [rax],al
   14004946f:	add    al,dl
   140049471:	jo     0x140049478
   140049473:	add    BYTE PTR [rdx+0x0],dl
   140049476:	add    BYTE PTR [rax],al
   140049478:	in     al,0x4
   14004947a:	add    BYTE PTR [rax],al
   14004947c:	add    BYTE PTR [rax],al
   14004947e:	add    BYTE PTR [rax],al
   140049480:	and    al,0x71
   140049482:	add    eax,0x3a00
   140049487:	add    ah,ah
   140049489:	add    al,0x0
   14004948b:	add    BYTE PTR [rax],al
   14004948d:	add    BYTE PTR [rax],al
   14004948f:	add    BYTE PTR [rax+0x71],ah
   140049492:	add    eax,0x35200
   140049497:	add    ah,ah
   140049499:	add    al,0x0
   14004949b:	add    BYTE PTR [rax],al
   14004949d:	add    BYTE PTR [rax],al
   14004949f:	add    BYTE PTR [rsp+rsi*2+0x5b80005],dh
   1400494a6:	add    BYTE PTR [rax],al
   1400494a8:	in     al,0x4
   1400494aa:	add    BYTE PTR [rax],al
   1400494ac:	add    BYTE PTR [rax],al
   1400494ae:	add    BYTE PTR [rax],al
   1400494b0:	ins    BYTE PTR es:[rdi],dx
   1400494b1:	jp     0x1400494b8
   1400494b3:	add    BYTE PTR [rdx-0x1bfffffd],dl
   1400494b9:	add    al,0x0
   1400494bb:	add    BYTE PTR [rax],al
   1400494bd:	add    BYTE PTR [rax],al
   1400494bf:	add    BYTE PTR [rax],al
   1400494c1:	jle    0x1400494c8
   1400494c3:	add    BYTE PTR [rax+rax*1+0x4e40000],al
   1400494ca:	add    BYTE PTR [rax],al
   1400494cc:	add    BYTE PTR [rax],al
   1400494ce:	add    BYTE PTR [rax],al
   1400494d0:	test   BYTE PTR [rsi+0x5],bh
   1400494d3:	add    dl,bl
   1400494d5:	add    eax,0x4e40000
   1400494da:	add    BYTE PTR [rax],al
   1400494dc:	add    BYTE PTR [rax],al
   1400494de:	add    BYTE PTR [rax],al
   1400494e0:	(bad)  
   1400494e1:	test   BYTE PTR [rip+0x2de00],al        # 0x1400772e7
   1400494e7:	add    ah,ah
   1400494e9:	add    al,0x0
   1400494eb:	add    BYTE PTR [rax],al
   1400494ed:	add    BYTE PTR [rax],al
   1400494ef:	add    BYTE PTR [rax],ch
   1400494f1:	add    BYTE PTR [rax],al
   1400494f3:	add    BYTE PTR [rax],dh
   1400494f5:	add    BYTE PTR [rax],al
   1400494f7:	add    BYTE PTR [rax+0x0],ah
   1400494fa:	add    BYTE PTR [rax],al
   1400494fc:	add    DWORD PTR [rax],eax
   1400494fe:	or     BYTE PTR [rax],al
	...
   140049510:	add    BYTE PTR [rcx],al
   140049512:	add    BYTE PTR [rax],al
   140049514:	add    BYTE PTR [rax],al
   140049516:	add    BYTE PTR [rax],al
   140049518:	data16 sbb al,BYTE PTR cs:[rax]
   14004951c:	retf   0x7e9a
   14004951f:	add    BYTE PTR [rdx-0x79ffbd9a],ah
   140049525:	rex.WX sub al,BYTE PTR [rax]
   140049528:	fmulp  st(6),st
   14004952a:	ret    0xa600
   14004952d:	jle    0x14004959d
   14004952f:	add    BYTE PTR [rdx-0x31ffb9a6],cl
   140049535:	mov    dh,0xaa
   140049537:	add    BYTE PTR [rsi-0x69ffb18a],dh
   14004953d:	pop    rdx
   14004953e:	ss add dl,dh
   140049541:	(bad)  
   140049542:	loop   0x140049544
   140049544:	jp     0x140049584
   140049546:	and    al,BYTE PTR [rax]
   140049548:	(bad)  
   140049549:	(bad)  
   14004954b:	add    dh,dl
   14004954d:	ret    0xb6
   140049550:	(bad)  
   140049551:	push   0x56
   140049553:	add    BYTE PTR [rsi-0x55ffc9b2],al
   140049559:	outs   dx,BYTE PTR ds:[rsi]
   14004955a:	rex.RX add BYTE PTR [rdx-0x1dffd5ba],r8b
   140049561:	ror    dh,cl
   140049563:	add    BYTE PTR [rsi-0x25ffcdae],cl
   140049569:	retf   0xc2
   14004956c:	jp     0x1400495b0
   14004956e:	sub    al,BYTE PTR [rax]
   140049570:	outs   dx,BYTE PTR ds:[rsi]
   140049571:	ss (bad) 
   140049573:	add    BYTE PTR [rdx-0x25ffcdb6],al
   140049579:	mov    esi,0x629e00ae
   14004957e:	ds add dl,bl
   140049581:	retf   0xbe
   140049584:	xchg   esi,eax
   140049585:	push   dx
   140049587:	add    BYTE PTR [rdx+0x7e006676],ah
   14004958d:	rex.X
   14004958e:	es add dh,ch
   140049591:	out    0xde,al
   140049593:	add    dh,dl
   140049595:	(bad)  
   140049596:	mov    esi,0x4e72b200
   14004959b:	add    dh,ah
   14004959d:	fcmovbe st,st(2)
   14004959f:	add    BYTE PTR [rdx+0x3a],dh
   1400495a2:	and    al,BYTE PTR [rax]
   1400495a4:	mov    esi,0xa6009aa2
   1400495a9:	push   0x42
   1400495ab:	add    BYTE PTR [rdx-0x1dffd1b2],cl
   1400495b1:	(bad)  
   1400495b2:	retf   0xb200
   1400495b5:	mov    ?,WORD PTR [rsi+0x0]
   1400495b8:	xchg   edx,eax
   1400495b9:	(bad)  
   1400495ba:	rex.WRX add BYTE PTR [rsi-0x65ffad82],r15b
   1400495c1:	pop    rsi
   1400495c2:	ds add dl,bh
   1400495c5:	cli    
   1400495c6:	cli    
   1400495c7:	add    BYTE PTR [rdx-0x51ffc9aa],dl
   1400495cd:	jb     0x140049619
   1400495cf:	add    BYTE PTR [rdx-0x1dffd1b6],al
   1400495d5:	ror    dl,cl
   1400495d7:	add    BYTE PTR [rsi+0x3e],dh
   1400495da:	es add dl,ch
   1400495dd:	loop   0x1400495b9
   1400495df:	add    dh,dl
   1400495e1:	(bad)  
   1400495e2:	mov    edx,0x5e729e00
   1400495e7:	add    dl,ah
   1400495e9:	(bad)  
   1400495ea:	(bad)  
   1400495eb:	add    dh,cl
   1400495ed:	mov    esi,0xaec600b6
   1400495f2:	movabs ds:0x7a8aae00c6d2e200,al
   1400495fb:	add    BYTE PTR [rdx-0x2dffbd9e],ah
   140049601:	mov    edx,0x7aba00ae
   140049606:	push   rdx
   140049607:	add    BYTE PTR [rdx-0x9ffc5a2],bl
   14004960d:	out    dx,al
   14004960e:	(bad)  
   14004960f:	add    BYTE PTR [rsi-0x79ff9d92],dl
   140049615:	push   rdx
   140049616:	cmp    al,BYTE PTR [rax]
   140049618:	scas   al,BYTE PTR es:[rdi]
   140049619:	outs   dx,BYTE PTR ds:[rsi]
   14004961a:	rex.WX add BYTE PTR [rdx-0x25ffd1ba],al
   140049621:	retf   0xc6
   140049624:	(bad)  
   140049625:	rex.X sub al,BYTE PTR [rax]
   140049628:	jb     0x140049660
   14004962a:	and    al,BYTE PTR [rax]
   14004962c:	mov    cl,BYTE PTR [rsi+0x32]
   14004962f:	add    BYTE PTR [rdx+0x3a],bh
   140049632:	and    al,BYTE PTR [rax]
   140049634:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049635:	push   0x46
   140049637:	add    BYTE PTR [rdx+0x7e002e4a],cl
   14004963d:	ds es add dh,ah
   140049641:	(bad)  
   140049642:	rol    BYTE PTR [rax],cl
   140049644:	push   0x32
   140049646:	(bad)  
   140049647:	add    BYTE PTR [rsi-0x21ffbd9a],ah
   14004964d:	(bad)  
   14004964e:	mov    BYTE PTR [rax],0xaa
   140049651:	(bad)  
   140049652:	jb     0x140049654
   140049654:	xchg   edx,eax
   140049655:	pop    rsi
   140049656:	rex.WX add sil,cl
   140049659:	mov    dh,0xae
   14004965b:	add    BYTE PTR [rdx-0x69ffb18a],bh
   140049661:	pop    rdx
   140049662:	cmp    al,BYTE PTR [rax]
   140049664:	repnz (bad) 
   140049666:	out    0x0,al
   140049668:	(bad)  
   140049669:	(bad)  
   14004966b:	add    dh,dl
   14004966d:	ret    0xba
   140049670:	(bad)  
   140049671:	outs   dx,BYTE PTR ds:[rsi]
   140049672:	pop    rdx
   140049673:	add    BYTE PTR [rsi-0x51ffc5b2],al
   140049679:	outs   dx,BYTE PTR ds:[rsi]
   14004967a:	rex.RX add BYTE PTR [rsi-0x6dffd5ba],r8b
   140049681:	push   rsi
   140049682:	xor    al,BYTE PTR [rax]
   140049684:	fmulp  st(2),st
   140049686:	ret    0x7e00
   140049689:	rex.X sub al,BYTE PTR [rax]
   14004968c:	jb     0x1400496c4
   14004968e:	(bad)  
   14004968f:	add    BYTE PTR [rsi-0x2dffcdb6],al
   140049695:	mov    esi,0x62a200b2
   14004969a:	add    BYTE PTR ds:[rdx-0x11ffd9be],al
   1400496a1:	out    0xe2,al
   1400496a3:	add    dl,bl
   1400496a5:	(bad)  
   1400496a6:	mov    esi,0xd6dae600
   1400496ab:	add    BYTE PTR [rsi+0x3a],dh
   1400496ae:	and    al,BYTE PTR [rax]
   1400496b0:	(bad)  
   1400496b1:	stos   BYTE PTR es:[rdi],al
   1400496b2:	sahf   
   1400496b3:	add    BYTE PTR [rdx-0x75ff716a],dh
   1400496b9:	(bad)  
   1400496bb:	add    dl,al
   1400496bd:	jle    0x140049715
   1400496bf:	add    BYTE PTR [rsi-0x1ffc1a2],bl
   1400496c5:	(bad)  
   1400496c6:	inc    BYTE PTR [rax]
   1400496c8:	mov    dl,BYTE PTR [rsi+0x3e]
   1400496cb:	add    BYTE PTR [rdx-0x79ffb58e],dh
   1400496d1:	rex.WX
   1400496d2:	add    BYTE PTR cs:[rdx+0x3e],bh
   1400496d6:	es add dh,ch
   1400496d9:	loop   0x1400496b5
   1400496db:	add    dl,bl
   1400496dd:	(bad)  
   1400496de:	mov    edx,0xced6e600
   1400496e3:	add    dl,dl
   1400496e5:	mov    esi,0xb2ca00b6
   1400496ea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400496eb:	add    BYTE PTR [rdx+0x466a],ch
	...
   140049915:	add    BYTE PTR [rax],al
   140049917:	add    BYTE PTR [rsi+0x76],dh
   14004991a:	jbe    0x140049992
   14004991c:	jbe    0x140049994
   14004991e:	jbe    0x140049996
   140049920:	jbe    0x140049998
   140049922:	jbe    0x14004999a
   140049924:	jbe    0x14004999c
   140049926:	jbe    0x14004999e
   140049928:	jbe    0x1400499a0
   14004992a:	jbe    0x14004992c
	...
   140049934:	add    BYTE PTR [rsi+0x76],dh
   140049937:	jbe    0x1400499af
   140049939:	jbe    0x1400499b1
   14004993b:	jbe    0x1400499b3
   14004993d:	jbe    0x1400499b5
   14004993f:	jbe    0x1400499b7
   140049941:	jbe    0x1400499b9
   140049943:	jbe    0x1400499bb
   140049945:	jbe    0x1400499bd
   140049947:	jbe    0x1400499bf
   140049949:	jbe    0x1400499c1
   14004994b:	jbe    0x1400499c3
   14004994d:	jbe    0x1400499c5
   14004994f:	jbe    0x1400499c7
   140049951:	jbe    0x1400499c9
   140049953:	jbe    0x1400499cb
   140049955:	jbe    0x1400499cd
   140049957:	jbe    0x140049959
   140049959:	add    BYTE PTR [rax],al
   14004995b:	rex.RX
   14004995c:	rex.RX
   14004995d:	rex.RX
   14004995e:	rex.RX
   14004995f:	rex.RX
   140049960:	rex.RX
   140049961:	rex.RX
   140049962:	rex.RX
   140049963:	rex.RX and r8b,BYTE PTR [rax]
   140049966:	add    BYTE PTR [rax],al
   140049968:	jbe    0x1400499e0
   14004996a:	jbe    0x1400499e2
   14004996c:	jbe    0x1400499e4
   14004996e:	jbe    0x1400499e6
   140049970:	jbe    0x1400499e8
   140049972:	jbe    0x1400499ea
   140049974:	jbe    0x1400499ec
   140049976:	jbe    0x1400499ee
   140049978:	jbe    0x1400499f0
   14004997a:	jbe    0x1400499f2
   14004997c:	jbe    0x1400499f4
   14004997e:	jbe    0x1400499f6
   140049980:	jbe    0x1400499f8
   140049982:	jbe    0x1400499fa
   140049984:	jbe    0x140049986
   140049986:	add    BYTE PTR [rsi],dl
   140049988:	rex.RX or r9d,DWORD PTR [rbx]
   14004998b:	or     ecx,DWORD PTR [rbx]
   14004998d:	or     ecx,DWORD PTR [rbx]
   14004998f:	or     ecx,DWORD PTR [rbx]
   140049991:	or     ecx,DWORD PTR [rbx]
   140049993:	or     ecx,DWORD PTR [rbx]
   140049995:	or     ecx,DWORD PTR [rbx]
   140049997:	rex.RX (bad) 
   140049999:	add    BYTE PTR [rax],al
   14004999b:	jbe    0x140049a13
   14004999d:	jbe    0x140049a15
   14004999f:	jbe    0x140049a17
   1400499a1:	jbe    0x140049a19
   1400499a3:	jbe    0x140049a1b
   1400499a5:	jbe    0x140049a1d
   1400499a7:	jbe    0x140049a1f
   1400499a9:	jbe    0x140049a21
   1400499ab:	jbe    0x140049a23
   1400499ad:	jbe    0x140049a25
   1400499af:	jbe    0x140049a27
   1400499b1:	jbe    0x140049a29
   1400499b3:	jbe    0x1400499b5
   1400499b5:	rex.RX or r9d,DWORD PTR [rbx]
   1400499b8:	or     ecx,DWORD PTR [rbx]
   1400499ba:	or     ebp,DWORD PTR [rdi+0x6f]
   1400499bd:	rex.WB sbb rax,0x491d1d1d
   1400499c3:	rex.WB outs dx,DWORD PTR ds:[rsi]
   1400499c5:	or     ecx,DWORD PTR [rbx]
   1400499c7:	or     ecx,DWORD PTR [rbx]
   1400499c9:	or     edx,DWORD PTR [rsi]
   1400499cb:	add    BYTE PTR [rsi+0x76],dh
   1400499ce:	jbe    0x140049a46
   1400499d0:	jbe    0x140049a48
   1400499d2:	jbe    0x140049a4a
   1400499d4:	jbe    0x140049a4c
   1400499d6:	jbe    0x140049a4e
   1400499d8:	jbe    0x140049a50
   1400499da:	jbe    0x140049a52
   1400499dc:	jbe    0x140049a54
   1400499de:	jbe    0x140049a56
   1400499e0:	jbe    0x140049a58
   1400499e2:	add    BYTE PTR [rax],al
   1400499e4:	or     ecx,DWORD PTR [rbx]
   1400499e6:	or     ecx,DWORD PTR [rbx]
   1400499e8:	rex.WB sbb rax,0x111d1d1d
   1400499ee:	adc    DWORD PTR [rcx],edx
   1400499f0:	adc    DWORD PTR [rcx],edx
   1400499f2:	adc    DWORD PTR [rip+0x491d1d1d],ebx        # 0x18921b715
   1400499f8:	or     ecx,DWORD PTR [rbx]
   1400499fa:	or     ecx,DWORD PTR [rbx]
   1400499fc:	add    BYTE PTR [rax],al
   1400499fe:	jbe    0x140049a76
   140049a00:	jbe    0x140049a78
   140049a02:	jbe    0x140049a7a
   140049a04:	jbe    0x140049a7c
   140049a06:	jbe    0x140049a7e
   140049a08:	jbe    0x140049a80
   140049a0a:	jbe    0x140049a82
   140049a0c:	jbe    0x140049a84
   140049a0e:	jbe    0x140049a86
   140049a10:	jbe    0x140049a12
   140049a12:	or     ecx,DWORD PTR [rbx]
   140049a14:	or     ecx,DWORD PTR [rcx+0x1d]
   140049a17:	sbb    eax,0x6e031111
   140049a1c:	and    eax,0x25252525
   140049a21:	and    eax,0x36e2525
   140049a26:	adc    DWORD PTR [rcx],edx
   140049a28:	sbb    eax,0xb0b491d
   140049a2d:	or     eax,DWORD PTR [rax]
   140049a2f:	jbe    0x140049aa7
   140049a31:	jbe    0x140049aa9
   140049a33:	jbe    0x140049aab
   140049a35:	jbe    0x140049aad
   140049a37:	jbe    0x140049aaf
   140049a39:	jbe    0x140049ab1
   140049a3b:	jbe    0x140049ab3
   140049a3d:	jbe    0x140049ab5
   140049a3f:	jbe    0x140049a41
   140049a41:	or     ecx,DWORD PTR [rbx]
   140049a43:	rex.WB sbb rax,0x6e03111d
   140049a49:	and    eax,0x2c131313
   140049a4e:	sub    al,0x9
   140049a50:	or     DWORD PTR [rsp+rbp*1],ebp
   140049a53:	adc    edx,DWORD PTR [rbx]
   140049a55:	adc    esp,DWORD PTR [rip+0x1d11116e]        # 0x15d15abc9
   140049a5b:	sbb    eax,0xb0b49
   140049a60:	jbe    0x140049ad8
   140049a62:	jbe    0x140049ada
   140049a64:	jbe    0x140049adc
   140049a66:	jbe    0x140049ade
   140049a68:	jbe    0x140049ae0
   140049a6a:	jbe    0x140049ae2
   140049a6c:	jbe    0x140049ae4
   140049a6e:	jbe    0x140049a70
   140049a70:	or     ecx,DWORD PTR [rbx]
   140049a72:	sbb    eax,0x6e03111d
   140049a77:	and    eax,0x522c1313
   140049a7c:	cmp    al,0x2a
   140049a7e:	sbb    DWORD PTR [rcx],ebx
   140049a80:	sbb    DWORD PTR [rcx],ebx
   140049a82:	sub    bh,BYTE PTR [rcx+rcx*1]
   140049a85:	sub    al,0x13
   140049a87:	adc    esp,DWORD PTR [rip+0x1d111103]        # 0x15d15ab90
   140049a8d:	or     rcx,QWORD PTR [r11]
   140049a90:	add    BYTE PTR [rsi+0x76],dh
   140049a93:	jbe    0x140049b0b
   140049a95:	jbe    0x140049b0d
   140049a97:	jbe    0x140049b0f
   140049a99:	jbe    0x140049b11
   140049a9b:	jbe    0x140049b13
   140049a9d:	jbe    0x140049a9f
   140049a9f:	or     ebp,DWORD PTR [rdi+0x1d]
   140049aa2:	sbb    eax,0x13250311
   140049aa7:	sub    al,0x9
   140049aa9:	cmp    al,0x19
   140049aab:	add    ah,BYTE PTR [rsp]
   140049aae:	adc    BYTE PTR [rax],dl
   140049ab0:	adc    BYTE PTR [rdi+0x47],al
   140049ab3:	add    bl,BYTE PTR [rcx]
   140049ab5:	sbb    DWORD PTR [rcx+rcx*1],edi
   140049ab8:	adc    edx,DWORD PTR [rbx]
   140049aba:	and    eax,0x1d1d1103
   140049abf:	outs   dx,DWORD PTR ds:[rsi]
   140049ac0:	or     eax,DWORD PTR [rax]
   140049ac2:	jbe    0x140049b3a
   140049ac4:	jbe    0x140049b3c
   140049ac6:	jbe    0x140049b3e
   140049ac8:	jbe    0x140049b40
   140049aca:	jbe    0x140049b42
   140049acc:	jbe    0x140049ace
   140049ace:	or     ebp,DWORD PTR [rdi+0x1d]
   140049ad1:	sbb    eax,0x13256e11
   140049ad6:	sub    al,0x52
   140049ad8:	sbb    DWORD PTR [rdx],eax
   140049ada:	and    al,0x10
   140049adc:	rex sub eax,0x20080820
   140049ae2:	ins    DWORD PTR es:[rdi],dx
   140049ae3:	adc    BYTE PTR [rdx+rax*1],spl
   140049ae7:	sub    cl,BYTE PTR [rcx]
   140049ae9:	sub    al,0x13
   140049aeb:	and    eax,0x491d1103
   140049af0:	or     ecx,DWORD PTR [rbx]
   140049af2:	add    BYTE PTR [rsi+0x76],dh
   140049af5:	jbe    0x140049b6d
   140049af7:	jbe    0x140049b6f
   140049af9:	jbe    0x140049b71
   140049afb:	jbe    0x140049afd
   140049afd:	or     ecx,DWORD PTR [rbx]
   140049aff:	rex.WB sbb rax,0x13256e11
   140049b05:	or     DWORD PTR [rcx+rbx*1],edi
   140049b08:	add    ah,BYTE PTR [rax+rdx*1]
   140049b0b:	sub    eax,0x3b080808
   140049b10:	cmp    ecx,DWORD PTR [rax]
   140049b12:	or     BYTE PTR [rax],cl
   140049b14:	sub    eax,0x2a022440
   140049b19:	push   rdx
   140049b1a:	sub    al,0x13
   140049b1c:	and    eax,0xb1d1d11
   140049b21:	or     ecx,DWORD PTR [rbx]
   140049b23:	add    BYTE PTR [rsi+0x76],dh
   140049b26:	jbe    0x140049b9e
   140049b28:	jbe    0x140049ba0
   140049b2a:	jbe    0x140049ba2
   140049b2c:	or     r9d,DWORD PTR [rbx]
   140049b2f:	sbb    eax,0x13250311
   140049b34:	sub    al,0x3c
   140049b36:	sbb    DWORD PTR [rdx],eax
   140049b38:	and    al,0x10
   140049b3a:	sub    eax,0x808
   140049b3f:	add    BYTE PTR [rax],al
   140049b41:	add    BYTE PTR [rax],al
   140049b43:	or     BYTE PTR [rax],cl
   140049b45:	ins    DWORD PTR es:[rdi],dx
   140049b46:	adc    BYTE PTR [rdx+rax*1],ah
   140049b49:	sub    cl,BYTE PTR [rcx]
   140049b4b:	adc    edx,DWORD PTR [rbx]
   140049b4d:	adc    QWORD PTR [rip+0xb0b49],rbx        # 0x1400fa69d
   140049b54:	jbe    0x140049bcc
   140049b56:	jbe    0x140049bce
   140049b58:	jbe    0x140049bd0
   140049b5a:	jbe    0x140049b5c
   140049b5c:	or     eax,DWORD PTR [rax]
	...
   140049b6e:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049b72:	imul   ebp,DWORD PTR [rbx+0x0],0x0
	...
   140049b82:	or     eax,DWORD PTR gs:[rax]
   140049b85:	jbe    0x140049bfd
   140049b87:	jbe    0x140049bff
   140049b89:	jbe    0x140049b8b
   140049b8b:	(bad)  
   140049b8c:	or     ebp,DWORD PTR [rbx+0x6b]
   140049b8f:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049b93:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049b97:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049b9b:	imul   ebp,DWORD PTR [rbx+0x6b],0x31
   140049b9f:	xor    DWORD PTR [rcx],esi
   140049ba1:	xor    DWORD PTR [rcx],esi
   140049ba3:	xor    DWORD PTR [rbx+0x6b],ebp
   140049ba6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049baa:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049bae:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049bb2:	imul   ecx,DWORD PTR [rbx],0x16
   140049bb5:	add    BYTE PTR [rsi+0x76],dh
   140049bb8:	jbe    0x140049c30
   140049bba:	add    BYTE PTR [rsi+0xb],al
   140049bbd:	xor    DWORD PTR [rcx],esi
   140049bbf:	xor    DWORD PTR [rcx],esi
   140049bc1:	xor    DWORD PTR [rcx],esi
   140049bc3:	xor    DWORD PTR [rcx],esi
   140049bc5:	xor    DWORD PTR [rcx],esi
   140049bc7:	xor    DWORD PTR [rcx],esi
   140049bc9:	xor    DWORD PTR [rcx],esi
   140049bcb:	xor    DWORD PTR [rcx],esi
   140049bcd:	xor    DWORD PTR [rcx],esi
   140049bcf:	sub    DWORD PTR [rcx],ebp
   140049bd1:	sub    DWORD PTR [rcx],eax
   140049bd3:	xor    DWORD PTR [rcx],esi
   140049bd5:	xor    DWORD PTR [rcx],esi
   140049bd7:	xor    DWORD PTR [rcx],esi
   140049bd9:	xor    DWORD PTR [rcx],esi
   140049bdb:	xor    DWORD PTR [rcx],esi
   140049bdd:	xor    DWORD PTR [rcx],esi
   140049bdf:	xor    DWORD PTR [rcx],esi
   140049be1:	xor    DWORD PTR [rcx],esi
   140049be3:	or     eax,DWORD PTR [rsi+0x0]
   140049be6:	jbe    0x140049c5e
   140049be8:	jbe    0x140049bea
   140049bea:	(bad)  
   140049beb:	or     ecx,DWORD PTR [rbx]
   140049bed:	add    BYTE PTR [rax],al
   140049bef:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   140049bf1:	and    eax,0x19092c13
   140049bf6:	sbb    DWORD PTR [rdx],eax
   140049bf8:	rex.RXB
   140049bf9:	and    BYTE PTR [rax],cl
   140049bfc:	or     BYTE PTR [rbx],bh
   140049bfe:	(bad)  
   140049bff:	sub    DWORD PTR [rdi],edi
   140049c01:	cmp    edi,DWORD PTR [rbx]
   140049c03:	or     BYTE PTR [rax],cl
   140049c05:	and    BYTE PTR [rax+0x47],al
   140049c08:	add    bl,BYTE PTR [rcx]
   140049c0a:	cmp    al,0x9
   140049c0c:	sub    al,0x13
   140049c0e:	and    eax,0x49000030
   140049c13:	or     ecx,DWORD PTR [rbx]
   140049c15:	(bad)  
   140049c16:	jbe    0x140049c8e
   140049c18:	jbe    0x140049c1a
   140049c1a:	rex.RX or r9d,DWORD PTR [rbx]
   140049c1d:	add    BYTE PTR [rcx],dh
   140049c1f:	(bad)  
   140049c20:	add    BYTE PTR [rax],al
   140049c22:	adc    DWORD PTR [rcx+rcx*1],ebp
   140049c25:	cmp    al,0x19
   140049c27:	add    ah,BYTE PTR [rax+rdx*1]
   140049c2a:	and    BYTE PTR [rdi],dil
   140049c2d:	add    BYTE PTR [rax],al
   140049c2f:	rex.WX add BYTE PTR [rax],al
   140049c32:	or     BYTE PTR cs:[rbp+0x2d],ch
   140049c36:	adc    BYTE PTR [rdx+rax*1],ah
   140049c39:	sbb    DWORD PTR [rcx+rcx*1],edi
   140049c3c:	adc    eax,DWORD PTR [rax]
   140049c3e:	add    BYTE PTR [rax],al
   140049c40:	add    BYTE PTR [rip+0x460b0b31],dh        # 0x1860fa777
   140049c46:	add    BYTE PTR [rsi+0x76],dh
   140049c49:	add    BYTE PTR [rsi+0xb],al
   140049c4c:	or     eax,DWORD PTR [rax]
   140049c4e:	imul   ebp,DWORD PTR [rbx+0x6b],0x31
   140049c52:	add    BYTE PTR ds:[rax],al
	...
   140049c5d:	add    BYTE PTR [rbx+0x4a],ch
   140049c60:	add    BYTE PTR [rbx+0x6b],ch
	...
   140049c6b:	add    BYTE PTR [rax],al
   140049c6d:	add    BYTE PTR [rip+0x6b6b3131],dh        # 0x1ab6fcda4
   140049c73:	or     ecx,DWORD PTR [rbx]
   140049c75:	rex.RX add BYTE PTR [rsi+0x76],r14b
   140049c79:	(bad)  
   140049c7a:	rex.RX or r9d,DWORD PTR [rbx]
   140049c7d:	add    BYTE PTR [rbx+0x6b],ch
   140049c80:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049c84:	xor    DWORD PTR [rax+0x67],edx
   140049c87:	push   0x50676868
   140049c8c:	xor    DWORD PTR [rbx+0x6b],ebp
   140049c8f:	rex.WX add BYTE PTR [rbx+0x6b],bpl
   140049c93:	imul   esi,DWORD PTR [rcx],0x35
   140049c96:	push   0x35686868
   140049c9b:	xor    DWORD PTR [rcx],esi
   140049c9d:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ca1:	imul   ebp,DWORD PTR [rbx+0xb],0xb
   140049ca5:	or     eax,DWORD PTR [rax]
   140049ca7:	jbe    0x140049ca9
   140049ca9:	rex.RX or r9d,DWORD PTR [rbx]
   140049cac:	or     eax,DWORD PTR [rax]
   140049cae:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cb2:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cb6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cba:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cbe:	imul   ecx,DWORD PTR [rdx+0x0],0x6b
   140049cc2:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cc6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cca:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cce:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cd2:	imul   ecx,DWORD PTR [rbx],0xb
   140049cd5:	or     esp,DWORD PTR [rdx]
   140049cd7:	add    BYTE PTR [rax],al
   140049cd9:	rex.RX or r9d,DWORD PTR [rbx]
   140049cdc:	or     eax,DWORD PTR [rax]
   140049cde:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ce2:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ce6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cea:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cee:	imul   ecx,DWORD PTR [rdx+0x0],0x6b
   140049cf2:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cf6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cfa:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049cfe:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d02:	imul   ecx,DWORD PTR [rbx],0xb
   140049d05:	or     eax,DWORD PTR [rsi+0x0]
   140049d08:	add    BYTE PTR [rsi+0xb],al
   140049d0b:	or     ecx,DWORD PTR [rbx]
   140049d0d:	add    BYTE PTR [rbx+0x6b],ch
   140049d10:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d14:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d18:	imul   esi,DWORD PTR [rcx],0x50
   140049d1b:	push   rax
   140049d1c:	xor    DWORD PTR [rbx+0x6b],ebp
   140049d1f:	rex.WX add BYTE PTR [rbx+0x6b],bpl
   140049d23:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d27:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d2b:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d2f:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d33:	or     ecx,DWORD PTR [rbx]
   140049d35:	or     eax,DWORD PTR [rsi+0x0]
   140049d38:	add    BYTE PTR [rsi+0xb],al
   140049d3b:	or     ecx,DWORD PTR [rbx]
   140049d3d:	add    BYTE PTR [rbx+0x6b],ch
   140049d40:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d44:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d48:	push   rax
   140049d49:	add    BYTE PTR [rcx],dl
   140049d4b:	adc    DWORD PTR [rbx],eax
   140049d4d:	xor    DWORD PTR [rbx+0x4a],ebp
   140049d50:	add    BYTE PTR [rbx+0x6b],ch
   140049d53:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d57:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d5b:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d5f:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d63:	or     ecx,DWORD PTR [rbx]
   140049d65:	or     eax,DWORD PTR [rsi+0x0]
   140049d68:	add    BYTE PTR [rsi+0xb],al
   140049d6b:	or     ecx,DWORD PTR [rbx]
   140049d6d:	add    BYTE PTR [rbx+0x6b],ch
   140049d70:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d74:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d78:	imul   esi,DWORD PTR [rcx],0x23
   140049d7b:	sbb    eax,0x4a6b1d1d
   140049d80:	add    BYTE PTR [rbx+0x6b],ch
   140049d83:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d87:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d8b:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d8f:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049d93:	or     ecx,DWORD PTR [rbx]
   140049d95:	or     eax,DWORD PTR [rsi+0x0]
   140049d98:	add    BYTE PTR [rsi+0x46],al
   140049d9b:	rex.RX
   140049d9c:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049da0:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049da4:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049da8:	imul   ebp,DWORD PTR [rbx+0x6b],0xb
   140049dac:	or     ecx,DWORD PTR [rbx]
   140049dae:	push   rax
   140049daf:	rex.WX add BYTE PTR [rbx+0x6b],bpl
   140049db3:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049db7:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049dbb:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049dbf:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049dc3:	or     ecx,DWORD PTR [rbx]
   140049dc5:	or     eax,DWORD PTR [rsi+0x0]
   140049dc8:	add    BYTE PTR [rsi+0x46],al
   140049dcb:	rex.RX
   140049dcc:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049dd0:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049dd4:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049dd8:	imul   ebp,DWORD PTR [rbx+0x31],0xb
   140049ddc:	or     ecx,DWORD PTR [rcx+0x1d]
   140049ddf:	pop    sp
   140049de1:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049de5:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049de9:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ded:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049df1:	imul   ebp,DWORD PTR [rbx+0x46],0x46
   140049df5:	rex.RX
   140049df6:	rex.RX add BYTE PTR [rax],r8b
   140049df9:	rex.RX
   140049dfa:	rex.RX
   140049dfb:	rex.RX
   140049dfc:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049e00:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e04:	imul   ebp,DWORD PTR [rbx+0x31],0x50
   140049e08:	imul   ebp,DWORD PTR [rbx+0x33],0x41
   140049e0c:	rex.B (bad) 
   140049e0e:	(bad)  
   140049e0f:	(bad)  
   140049e10:	pcmpgtd mm1,QWORD PTR [rdx+0x6b]
   140049e14:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e18:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e1c:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e20:	imul   ebp,DWORD PTR [rbx+0x6b],0x46
   140049e24:	rex.RX
   140049e25:	rex.RX
   140049e26:	rex.RX add BYTE PTR [rax],r8b
   140049e29:	rex.RX
   140049e2a:	rex.RX
   140049e2b:	rex.RX
   140049e2c:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049e30:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e34:	imul   ebp,DWORD PTR [rbx+0x1e],0x41
   140049e38:	sbb    edx,DWORD PTR [rax+0x17]
   140049e3b:	(bad)  
   140049e3c:	(bad)  
   140049e3e:	(bad)  
   140049e3f:	ins    BYTE PTR es:[rdi],dx
   140049e40:	ins    BYTE PTR es:[rdi],dx
   140049e41:	ins    BYTE PTR es:[rdi],dx
   140049e42:	(bad)  
   140049e43:	push   rax
   140049e44:	movsxd esi,DWORD PTR [rcx]
   140049e46:	add    eax,0x6b310e4f
   140049e4b:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e4f:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e53:	rex.RX
   140049e54:	rex.RX
   140049e55:	rex.RX
   140049e56:	rex.RX add BYTE PTR [rax],r8b
   140049e59:	rex.RX
   140049e5a:	rex.RX
   140049e5b:	rex.RX
   140049e5c:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049e60:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e64:	imul   ebp,DWORD PTR [rbx+0x6b],0x38
   140049e68:	add    BYTE PTR [rdi],bh
   140049e6a:	ins    BYTE PTR es:[rdi],dx
   140049e6b:	add    BYTE PTR [rax],al
   140049e6d:	clts   
   140049e6f:	(bad)  
   140049e70:	(bad)  
   140049e71:	rex.WRXB
   140049e72:	rex.WRXB
   140049e73:	rex.WRXB sub BYTE PTR [r8],r13b
   140049e76:	sub    BYTE PTR [rbx],bl
   140049e78:	sbb    ebx,DWORD PTR [rbx]
   140049e7a:	xor    DWORD PTR [rbx+0x6b],ebp
   140049e7d:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e81:	imul   ebp,DWORD PTR [rbx+0x46],0x46
   140049e85:	rex.RX
   140049e86:	rex.RX add BYTE PTR [rsi+0x44],r14b
   140049e8a:	rex.RX
   140049e8b:	rex.RX
   140049e8c:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049e90:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e94:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049e98:	data16 add BYTE PTR [rax],al
   140049e9b:	xor    esi,DWORD PTR [rcx]
   140049e9d:	rex.X add BYTE PTR [rax],bpl
   140049ea0:	sbb    ebx,DWORD PTR [rbx]
   140049ea2:	sbb    ecx,DWORD PTR [rsi]
   140049ea4:	(bad)  
   140049ea5:	(bad)  
   140049ea6:	push   rsi
   140049ea7:	add    BYTE PTR [rax],al
   140049ea9:	add    BYTE PTR [rax],al
   140049eab:	xor    DWORD PTR [rbx+0x6b],ebp
   140049eae:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049eb2:	imul   eax,DWORD PTR [rsi+0x46],0x46
   140049eb6:	add    BYTE PTR [rsi+0x76],dh
   140049eb9:	add    BYTE PTR [rsi+0x46],al
   140049ebc:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049ec0:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ec4:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ec8:	imul   edi,DWORD PTR [rip+0x6b6b6b3d],0x6b        # 0x1ab700a0c
   140049ecf:	rex.WX add BYTE PTR [rax],al
   140049ed2:	push   rsi
   140049ed3:	push   rsi
   140049ed4:	xor    esi,DWORD PTR [rbx]
   140049ed6:	add    BYTE PTR [rbx+0x6b],ah
   140049ed9:	xor    DWORD PTR [rax],edi
   140049edb:	xor    DWORD PTR [rbx+0x6b],ebp
   140049ede:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ee2:	imul   eax,DWORD PTR [rsi+0x46],0x46
   140049ee6:	add    BYTE PTR [rsi+0x76],dh
   140049ee9:	add    BYTE PTR [rsi+0x46],al
   140049eec:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049ef0:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ef4:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ef8:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049efc:	imul   ebp,DWORD PTR [rbx+0x6b],0x4a
   140049f00:	add    BYTE PTR [rbx+0x33],ch
   140049f03:	sbb    al,0x1c
   140049f05:	add    eax,0x6b6b3100
   140049f0a:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f0e:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f12:	imul   eax,DWORD PTR [rsi+0x46],0x46
   140049f16:	add    BYTE PTR [rsi+0x76],dh
   140049f19:	add    BYTE PTR [rsi],dl
   140049f1b:	rex.RX
   140049f1c:	rex.RX add BYTE PTR [rbx+0x6b],r13b
   140049f20:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f24:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f28:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f2c:	imul   ebp,DWORD PTR [rbx+0x6b],0x4a
   140049f30:	add    BYTE PTR [rbx+0x6b],ch
   140049f33:	je     0x140049f83
   140049f35:	rex.WRX cmp BYTE PTR [rbx+0x6b],r13b
   140049f39:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f3d:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f41:	imul   ebp,DWORD PTR [rbx+0x46],0x46
   140049f45:	(bad)  
   140049f46:	jbe    0x140049fbe
   140049f48:	jbe    0x140049fc0
   140049f4a:	add    BYTE PTR [rsi+0x46],al
   140049f4d:	add    BYTE PTR [rbx+0x6b],ch
   140049f50:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f54:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f58:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f5c:	imul   ebp,DWORD PTR [rbx+0x6b],0x4a
   140049f60:	add    BYTE PTR [rbx+0x6b],ch
   140049f63:	rex.WX cmp BYTE PTR [rax],dil
   140049f66:	cmp    BYTE PTR [rbx+0x6b],ah
   140049f69:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f6d:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f71:	imul   ebp,DWORD PTR [rbx+0x46],0x46
   140049f75:	add    BYTE PTR [rsi+0x76],dh
   140049f78:	jbe    0x140049ff0
   140049f7a:	add    BYTE PTR [rsi+0x46],al
   140049f7d:	add    BYTE PTR [rbx+0x6b],ch
   140049f80:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f84:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f88:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f8c:	imul   ebp,DWORD PTR [rbx+0x6b],0x4a
   140049f90:	add    BYTE PTR [rbx+0x6b],ch
   140049f93:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   140049f98:	add    BYTE PTR [rcx],dh
   140049f9a:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049f9e:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fa2:	imul   eax,DWORD PTR [rsi+0x46],0x0
   140049fa6:	jbe    0x14004a01e
   140049fa8:	jbe    0x14004a020
   140049faa:	jbe    0x140049fac
   140049fac:	or     eax,DWORD PTR [rax]
   140049fae:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fb2:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fb6:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fba:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fbe:	imul   ecx,DWORD PTR [rdx+0x0],0x6b
   140049fc2:	imul   ebp,DWORD PTR [rbx+0x6b],0x63
   140049fc6:	cmp    BYTE PTR ds:[rcx],dh
   140049fc9:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fcd:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fd1:	imul   ebp,DWORD PTR [rbx+0x46],0x0
   140049fd5:	jbe    0x14004a04d
   140049fd7:	jbe    0x14004a04f
   140049fd9:	jbe    0x14004a051
   140049fdb:	jbe    0x140049fff
   140049fdd:	or     ebp,DWORD PTR [rbx+0x6b]
   140049fe0:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fe4:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fe8:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fec:	imul   ebp,DWORD PTR [rbx+0x6b],0x4a
   140049ff0:	xor    ebp,DWORD PTR [rbx+0x6b]
   140049ff3:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ff7:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049ffb:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   140049fff:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a003:	add    BYTE PTR [rsi+0x76],dh
   14004a006:	jbe    0x14004a07e
   14004a008:	jbe    0x14004a080
   14004a00a:	jbe    0x14004a082
   14004a00c:	add    BYTE PTR [rbx],cl
   14004a00e:	or     ebp,DWORD PTR [rbx+0x6b]
   14004a011:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a015:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a019:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a01d:	imul   ebp,DWORD PTR [rbx+0x4a],0x23
   14004a021:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a025:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a029:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a02d:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a031:	or     cl,BYTE PTR [rbx]
   14004a033:	add    BYTE PTR [rsi+0x76],dh
   14004a036:	jbe    0x14004a0ae
   14004a038:	jbe    0x14004a0b0
   14004a03a:	jbe    0x14004a0b2
   14004a03c:	jbe    0x14004a03e
   14004a03e:	or     ecx,DWORD PTR [rbx]
   14004a040:	push   rax
   14004a041:	xor    DWORD PTR [rbx+0x6b],ebp
   14004a044:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a048:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a04c:	imul   ebp,DWORD PTR [rbx+0x31],0x66
   14004a050:	ss imul ebp,DWORD PTR ss:[rbx+0x6b],0x6b
   14004a056:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a05a:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a05e:	imul   edx,DWORD PTR [rax+0xb],0xb
   14004a062:	add    BYTE PTR [rsi+0x76],dh
   14004a065:	jbe    0x14004a0dd
   14004a067:	jbe    0x14004a0df
   14004a069:	jbe    0x14004a0e1
   14004a06b:	jbe    0x14004a0e3
   14004a06d:	jbe    0x14004a06f
   14004a06f:	or     ecx,DWORD PTR [rbx]
   14004a071:	or     ecx,DWORD PTR [rbx]
   14004a073:	push   rax
   14004a074:	xor    DWORD PTR [rbx+0x6b],ebp
   14004a077:	imul   ebp,DWORD PTR [rbx+0x6b],0x6b
   14004a07b:	sub    esi,DWORD PTR [rcx]
   14004a07d:	ss je  0x14004a0f4
   14004a080:	(bad)  
   14004a081:	(bad)  
   14004a082:	push   rax
   14004a083:	push   rax
   14004a084:	rex.WX imul rbp,QWORD PTR [rbx+0x6b],0x6b
   14004a089:	imul   ebp,DWORD PTR [rbx+0xc],0x50
   14004a08d:	(bad)  
   14004a08e:	(bad)  
   14004a08f:	or     ecx,DWORD PTR [rbx]
   14004a091:	add    BYTE PTR [rsi+0x76],dh
   14004a094:	jbe    0x14004a10c
   14004a096:	jbe    0x14004a10e
   14004a098:	jbe    0x14004a110
   14004a09a:	jbe    0x14004a112
   14004a09c:	jbe    0x14004a114
   14004a09e:	jbe    0x14004a0a0
   14004a0a0:	or     ecx,DWORD PTR [rbx]
   14004a0a2:	rex.WB sbb rax,0x74363666
   14004a0a8:	je     0x14004a11e
   14004a0aa:	je     0x14004a0b3
   14004a0ac:	(bad)  
   14004a0ad:	push   rax
   14004a0ae:	push   rax
   14004a0af:	cmp    bh,BYTE PTR [rdx]
   14004a0b1:	pop    rdi
   14004a0b2:	pop    rdi
   14004a0b3:	jae    0x14004a0c2
   14004a0b5:	or     eax,0x631f3255
   14004a0ba:	sbb    dl,BYTE PTR [rsp+rdx*1]
   14004a0bd:	add    al,0xb
   14004a0bf:	or     eax,DWORD PTR [rax]
   14004a0c1:	jbe    0x14004a139
   14004a0c3:	jbe    0x14004a13b
   14004a0c5:	jbe    0x14004a13d
   14004a0c7:	jbe    0x14004a13f
   14004a0c9:	jbe    0x14004a141
   14004a0cb:	jbe    0x14004a143
   14004a0cd:	jbe    0x14004a145
   14004a0cf:	jbe    0x14004a0d1
   14004a0d1:	or     ebx,DWORD PTR [rip+0x50071d1d]        # 0x1900bbdf4
   14004a0d7:	push   rax
   14004a0d8:	cmp    bh,BYTE PTR [rdx]
   14004a0da:	pop    rdi
   14004a0db:	pop    rdi
   14004a0dc:	or     eax,0x32550d0d
   14004a0e1:	movsxd esp,DWORD PTR [rbx+0x1a]
   14004a0e4:	adc    al,0x14
   14004a0e6:	add    al,0x4d
   14004a0e8:	rex.WRB (bad) 
   14004a0ea:	(bad)  
   14004a0eb:	adc    dl,BYTE PTR [rdx]
   14004a0ed:	sbb    eax,0x76760049
   14004a0f2:	jbe    0x14004a16a
   14004a0f4:	jbe    0x14004a16c
   14004a0f6:	jbe    0x14004a16e
   14004a0f8:	jbe    0x14004a170
   14004a0fa:	jbe    0x14004a172
   14004a0fc:	jbe    0x14004a174
   14004a0fe:	jbe    0x14004a176
   14004a100:	jbe    0x14004a102
   14004a102:	sbb    eax,0x5f33111d
   14004a107:	or     eax,0x6332550d
   14004a10c:	sbb    bl,BYTE PTR [rdx]
   14004a10e:	adc    al,0x14
   14004a110:	rex.WRB
   14004a111:	rex.WRB (bad) 
   14004a113:	rex.WRB (bad) 
   14004a115:	adc    dl,BYTE PTR [rdx]
   14004a117:	adc    dh,BYTE PTR [rdx+rcx*2]
   14004a11a:	rex.WX
   14004a11b:	fs sbb eax,0x7676001d
   14004a121:	jbe    0x14004a199
   14004a123:	jbe    0x14004a19b
   14004a125:	jbe    0x14004a19d
   14004a127:	jbe    0x14004a19f
   14004a129:	jbe    0x14004a1a1
   14004a12b:	jbe    0x14004a1a3
   14004a12d:	jbe    0x14004a1a5
   14004a12f:	jbe    0x14004a1a7
   14004a131:	jbe    0x14004a133
   14004a133:	or     edx,DWORD PTR [rcx]
   14004a135:	add    eax,DWORD PTR [rbx]
   14004a137:	sbb    dl,BYTE PTR [rsp+rax*1]
   14004a13a:	rex.WRB
   14004a13b:	rex.WRB (bad) 
   14004a13d:	(bad)  
   14004a13e:	es es xor al,0x34
   14004a142:	rex.WX
   14004a143:	rex.WX and QWORD PTR [rcx],rsp
   14004a146:	fs or  al,0xc
   14004a149:	or     al,0x31
   14004a14b:	adc    DWORD PTR [rdi+0x0],ebp
   14004a14e:	jbe    0x14004a1c6
   14004a150:	jbe    0x14004a1c8
   14004a152:	jbe    0x14004a1ca
   14004a154:	jbe    0x14004a1cc
   14004a156:	jbe    0x14004a1ce
   14004a158:	jbe    0x14004a1d0
   14004a15a:	jbe    0x14004a1d2
   14004a15c:	jbe    0x14004a1d4
   14004a15e:	jbe    0x14004a1d6
   14004a160:	jbe    0x14004a1d8
   14004a162:	jbe    0x14004a1da
   14004a164:	add    BYTE PTR [rip+0x26121325],ah        # 0x16616b48f
   14004a16a:	xor    al,0x4a
   14004a16c:	and    DWORD PTR [rcx],esp
   14004a16e:	or     al,0xc
   14004a170:	or     al,0x31
   14004a172:	xor    DWORD PTR [rcx],esi
   14004a174:	xor    DWORD PTR [rsi],ebx
   14004a176:	(bad)  
   14004a177:	(bad)
   14004a17c:	jbe    0x14004a1f4
   14004a17e:	jbe    0x14004a1f6
   14004a180:	jbe    0x14004a1f8
   14004a182:	jbe    0x14004a1fa
   14004a184:	jbe    0x14004a1fc
   14004a186:	jbe    0x14004a1fe
   14004a188:	jbe    0x14004a200
   14004a18a:	jbe    0x14004a202
   14004a18c:	jbe    0x14004a204
   14004a18e:	jbe    0x14004a206
   14004a190:	jbe    0x14004a208
   14004a192:	jbe    0x14004a20a
   14004a194:	jbe    0x14004a196
   14004a196:	add    BYTE PTR [rcx],dl
   14004a198:	or     DWORD PTR [rdx+0xc],edx
   14004a19b:	xor    DWORD PTR [rcx],esi
   14004a19d:	xor    DWORD PTR [rsi],ebx
   14004a19f:	(bad)  
   14004a1a0:	(bad)  
   14004a1a2:	or     cl,BYTE PTR [rdx]
   14004a1a4:	push   rbx
   14004a1a5:	push   rbx
   14004a1a6:	cmp    eax,0x1127
   14004a1ab:	jbe    0x14004a223
   14004a1ad:	jbe    0x14004a225
   14004a1af:	jbe    0x14004a227
   14004a1b1:	jbe    0x14004a229
   14004a1b3:	jbe    0x14004a22b
   14004a1b5:	jbe    0x14004a22d
   14004a1b7:	jbe    0x14004a22f
   14004a1b9:	jbe    0x14004a231
   14004a1bb:	jbe    0x14004a233
   14004a1bd:	jbe    0x14004a235
   14004a1bf:	jbe    0x14004a237
   14004a1c1:	jbe    0x14004a239
   14004a1c3:	jbe    0x14004a23b
   14004a1c5:	jbe    0x14004a23d
   14004a1c7:	add    BYTE PTR [rax],al
   14004a1c9:	add    BYTE PTR [rsp],ch
   14004a1cc:	and    al,0x53
   14004a1ce:	push   rbx
   14004a1cf:	push   rbx
   14004a1d0:	cmp    eax,0x183d3d3d
   14004a1d5:	or     DWORD PTR [rax],eax
   14004a1d7:	add    BYTE PTR [rax],al
   14004a1d9:	jbe    0x14004a251
   14004a1db:	jbe    0x14004a253
   14004a1dd:	jbe    0x14004a255
   14004a1df:	jbe    0x14004a257
   14004a1e1:	jbe    0x14004a259
   14004a1e3:	jbe    0x14004a25b
   14004a1e5:	jbe    0x14004a25d
   14004a1e7:	jbe    0x14004a25f
   14004a1e9:	jbe    0x14004a261
   14004a1eb:	jbe    0x14004a263
   14004a1ed:	jbe    0x14004a265
   14004a1ef:	jbe    0x14004a267
   14004a1f1:	jbe    0x14004a269
   14004a1f3:	jbe    0x14004a26b
   14004a1f5:	jbe    0x14004a26d
   14004a1f7:	jbe    0x14004a26f
   14004a1f9:	jbe    0x14004a271
	...
   14004a203:	add    BYTE PTR [rax],al
   14004a205:	jbe    0x14004a27d
   14004a207:	jbe    0x14004a27f
   14004a209:	jbe    0x14004a281
   14004a20b:	jbe    0x14004a283
   14004a20d:	jbe    0x14004a285
   14004a20f:	jbe    0x14004a287
   14004a211:	jbe    0x14004a289
   14004a213:	jbe    0x14004a28b
   14004a215:	jbe    0x14004a28d
   14004a217:	jbe    0x14004a218
   14004a219:	jmp    rax
   14004a21b:	(bad)  
   14004a21c:	(bad)  
   14004a21d:	jmp    FWORD PTR [rcx-0x12]
   14004a220:	(bad)  
   14004a221:	inc    DWORD PTR [rax]
   14004a223:	add    bh,bh
   14004a225:	(bad)  
   14004a226:	(bad)  
   14004a227:	(bad)  
   14004a228:	(bad)  
   14004a229:	clc    
   14004a22a:	add    BYTE PTR [rax],al
   14004a22c:	(bad)  
   14004a22d:	(bad)  
   14004a22e:	(bad)  
   14004a22f:	(bad)  
   14004a230:	push   rax
   14004a232:	add    BYTE PTR [rax],al
   14004a234:	ud0    edi,edi
   14004a237:	clc    
   14004a238:	inc    eax
   14004a23a:	add    BYTE PTR [rax],al
   14004a23c:	add    edi,edi
   14004a23e:	push   rax
   14004a240:	inc    DWORD PTR [rax-0xff0000]
   14004a246:	inc    eax
   14004a248:	inc    DWORD PTR [rax]
   14004a24a:	add    BYTE PTR [rax],al
   14004a24c:	add    bh,bh
   14004a24e:	inc    DWORD PTR [rax+0xfe]
   14004a254:	add    BYTE PTR [rdi-0x1],bh
   14004a257:	add    ah,bh
   14004a259:	add    BYTE PTR [rax],al
   14004a25b:	add    BYTE PTR [rax],al
   14004a25d:	(bad)  
   14004a25e:	inc    BYTE PTR [rax]
   14004a260:	clc    
   14004a261:	add    BYTE PTR [rax],al
   14004a263:	add    BYTE PTR [rax],al
   14004a265:	(bad)  
   14004a266:	cld    
   14004a267:	add    al,dh
   14004a269:	add    BYTE PTR [rax],al
   14004a26b:	add    BYTE PTR [rax],al
   14004a26d:	psubb  mm0,QWORD PTR [rax]
   14004a270:	lock add BYTE PTR [rax],al
   14004a273:	add    BYTE PTR [rax],al
   14004a275:	(bad)  
   14004a277:	add    al,ah
   14004a279:	add    BYTE PTR [rax],al
   14004a27b:	add    BYTE PTR [rax],al
   14004a27d:	(bad)  
   14004a27e:	lock add al,al
   14004a281:	add    BYTE PTR [rax],al
   14004a283:	add    BYTE PTR [rax],al
   14004a285:	add    esp,eax
   14004a287:	add    al,al
   14004a289:	add    BYTE PTR [rax],al
   14004a28b:	add    BYTE PTR [rax],al
   14004a28d:	add    eax,eax
   14004a28f:	add    BYTE PTR [rax+0x0],al
   14004a295:	add    eax,eax
   14004a297:	add    BYTE PTR [rax+0x0],al
   14004a29d:	add    DWORD PTR [rax+0x8000],eax
   14004a2a3:	add    BYTE PTR [rax],al
   14004a2a5:	add    DWORD PTR [rax+0x8000],eax
   14004a2ab:	add    BYTE PTR [rax],al
   14004a2ad:	add    DWORD PTR [rax+0x0],eax
   14004a2b3:	add    BYTE PTR [rax],al
   14004a2b5:	add    BYTE PTR [rax+0x0],al
	...
   14004a2ff:	add    BYTE PTR [rax+0x0],al
   14004a305:	add    DWORD PTR [rax],eax
   14004a307:	add    BYTE PTR [rax+0x0],al
   14004a30d:	add    DWORD PTR [rax+0x8000],eax
   14004a313:	add    BYTE PTR [rax],al
   14004a315:	add    DWORD PTR [rax+0x8000],eax
   14004a31b:	add    BYTE PTR [rax],al
   14004a31d:	add    eax,DWORD PTR [rax+0xc000]
   14004a323:	add    BYTE PTR [rax],al
   14004a325:	add    eax,DWORD PTR [rax+0xc000]
   14004a32b:	add    BYTE PTR [rax],al
   14004a32d:	add    eax,eax
   14004a32f:	add    al,ah
   14004a331:	add    BYTE PTR [rax],al
   14004a333:	add    BYTE PTR [rax],al
   14004a335:	(bad)  
   14004a336:	rol    BYTE PTR [rax],0xf0
   14004a339:	add    BYTE PTR [rax],al
   14004a33b:	add    BYTE PTR [rax],al
   14004a33d:	pavgb  mm0,QWORD PTR [rax]
   14004a340:	lock add BYTE PTR [rax],al
   14004a343:	add    BYTE PTR [rax],al
   14004a345:	(bad)  
   14004a347:	add    al,bh
   14004a349:	add    BYTE PTR [rax],al
   14004a34b:	add    BYTE PTR [rax],al
   14004a34d:	(bad)  
   14004a34e:	lock add ah,bh
   14004a351:	add    BYTE PTR [rax],al
   14004a353:	add    BYTE PTR [rax],al
   14004a355:	(bad)  
   14004a356:	clc    
   14004a357:	add    dh,bh
   14004a359:	add    BYTE PTR [rax],al
   14004a35b:	add    BYTE PTR [rax],al
   14004a35d:	jg     0x14004a35b
   14004a35f:	add    bh,bh
   14004a361:	add    BYTE PTR [rax],al
   14004a363:	add    BYTE PTR [rax],al
   14004a365:	(bad)  
   14004a366:	inc    BYTE PTR [rax]
   14004a368:	inc    DWORD PTR [rax-0xff0000]
   14004a36e:	inc    DWORD PTR [rax]
   14004a370:	inc    eax
   14004a372:	add    BYTE PTR [rax],al
   14004a374:	add    edi,edi
   14004a376:	inc    DWORD PTR [rax+0xf0ff]
   14004a37c:	ud0    edi,edi
   14004a37f:	sar    bh,0xf8
   14004a382:	add    BYTE PTR [rax],al
   14004a384:	(bad)  
   14004a385:	(bad)  
   14004a386:	push   rax
   14004a388:	(bad)  
   14004a389:	inc    BYTE PTR [rax]
   14004a38b:	add    BYTE PTR [rdi-0x1],bh
   14004a38e:	(bad)  
   14004a38f:	clc    
   14004a390:	(bad)  
   14004a391:	jmp    rax
   14004a393:	(bad)  
   14004a394:	(bad)  
   14004a395:	(bad)  
   14004a396:	(bad)  
   14004a397:	(bad)  
   14004a398:	sub    BYTE PTR [rax],al
   14004a39a:	add    BYTE PTR [rax],al
   14004a39c:	and    BYTE PTR [rax],al
   14004a39e:	add    BYTE PTR [rax],al
   14004a3a0:	add    BYTE PTR [rax],al
   14004a3a3:	add    BYTE PTR [rcx],al
   14004a3a5:	add    BYTE PTR [rax],cl
	...
   14004a3b7:	add    BYTE PTR [rax],al
   14004a3b9:	add    DWORD PTR [rax],eax
   14004a3bb:	add    BYTE PTR [rax],al
   14004a3bd:	add    BYTE PTR [rax],al
   14004a3bf:	add    BYTE PTR [rdx+0x26],ah
   14004a3c2:	(bad)  
   14004a3c3:	add    dh,cl
   14004a3c5:	(bad)  
   14004a3c6:	jbe    0x14004a3c8
   14004a3c8:	movabs ds:0x7e00c2cede00365e,al
   14004a3d1:	rex.X
   14004a3d2:	add    BYTE PTR es:[rsi-0x41ffcdae],cl
   14004a3d9:	stos   BYTE PTR es:[rdi],al
   14004a3da:	movabs ds:0x66729a00e6eaf200,al
   14004a3e3:	add    BYTE PTR [rsi+0x36],dh
   14004a3e6:	(bad)  
   14004a3e7:	add    dh,cl
   14004a3e9:	mov    esi,0xdeee00b6
   14004a3ee:	rol    BYTE PTR [rax],cl
   14004a3f0:	jbe    0x14004a438
   14004a3f2:	xor    al,BYTE PTR [rax]
   14004a3f4:	scas   al,BYTE PTR es:[rdi]
   14004a3f5:	outs   dx,BYTE PTR ds:[rsi]
   14004a3f6:	rex.RX add BYTE PTR [rsi+0x52],r15b
   14004a3fa:	rex.X add sil,dl
   14004a3fd:	mov    dl,0x0
   14004a400:	xchg   BYTE PTR [rsi+0x4e],bl
   14004a403:	add    BYTE PTR [rsi+0x6600264a],al
   14004a409:	cs (bad) 
   14004a40b:	add    BYTE PTR [rdx+0x3a],dh
   14004a40e:	and    al,BYTE PTR [rax]
   14004a410:	(bad)  
   14004a412:	(bad)  
   14004a413:	add    BYTE PTR [rsi-0x41ffc9a6],dl
   14004a419:	stos   BYTE PTR es:[rdi],al
   14004a41a:	sahf   
   14004a41b:	add    BYTE PTR [rdx+0x46],bh
   14004a41e:	cs add dh,dh
   14004a421:	div    dl
   14004a423:	add    BYTE PTR [rdx-0x29ff8d7a],dh
   14004a429:	(bad)  
   14004a42a:	mov    edx,0xdedeea00
   14004a42f:	add    BYTE PTR [rdx+0x32],ch
   14004a432:	(bad)  
   14004a433:	add    dh,cl
   14004a435:	mov    dh,0xaa
   14004a437:	add    dh,ah
   14004a439:	fcmove st,st(6)
   14004a43b:	add    BYTE PTR [rsi+0x72005666],cl
   14004a441:	xor    dl,BYTE PTR [rsi]
   14004a443:	add    BYTE PTR [rsi+0x3e],dh
   14004a446:	and    al,BYTE PTR [rax]
   14004a448:	(bad)  
   14004a449:	rex.X
   14004a44a:	add    BYTE PTR es:[rsi-0x75ffc5ae],al
   14004a451:	rex.WRX xor r8b,BYTE PTR [rax]
   14004a454:	mov    dl,0x8a
   14004a456:	jle    0x14004a458
   14004a458:	mov    dl,0x9a
   14004a45a:	xchg   esi,eax
   14004a45b:	add    BYTE PTR [rdx-0x61ffbd9a],ah
   14004a461:	jb     0x14004a4c1
   14004a463:	add    BYTE PTR [rdx+0x6e005262],cl
   14004a469:	ss (bad) 
   14004a46b:	add    dl,dl
   14004a46d:	ret    0xbe
   14004a470:	mov    dh,0x76
   14004a472:	rex.WRX add sil,r10b
   14004a475:	retf   0xca
   14004a478:	data16 xor bl,BYTE PTR [rdx]
   14004a47b:	add    dh,bh
   14004a47d:	(bad)  
   14004a47e:	cli    
   14004a47f:	add    dh,ah
   14004a481:	(bad)  
   14004a483:	add    dl,bl
   14004a485:	retf   0xc2
   14004a488:	xchg   BYTE PTR [rdx+0x2e],cl
   14004a48b:	add    dh,ch
   14004a48d:	out    0xe2,al
   14004a48f:	add    dl,cl
   14004a491:	mov    edx,0xdae600b2
   14004a496:	(bad)  
   14004a497:	add    BYTE PTR [rsi+0x3e],dh
   14004a49a:	add    BYTE PTR es:[rsi+0x62003a56],cl
   14004a4a1:	sub    dl,BYTE PTR [rsi]
   14004a4a3:	add    dl,bl
   14004a4a5:	(bad)  
   14004a4a6:	retf   0x7e00
   14004a4a9:	rex.RX
   14004a4aa:	es add dl,cl
   14004a4ad:	mov    dl,0xa6
   14004a4af:	add    dl,bh
   14004a4b1:	repnz (bad) 
   14004a4b3:	add    dh,dl
   14004a4b5:	ret    0xb6
   14004a4b8:	(bad)  
   14004a4b9:	rex.WX xor al,BYTE PTR [rax]
   14004a4bc:	mov    dl,0x72
   14004a4be:	rex.WRX add BYTE PTR [rsi-0x6dffb9a6],r9b
   14004a4c5:	pop    rsi
   14004a4c6:	rex.WX add dl,spl
   14004a4c9:	(bad)  
   14004a4ca:	(bad)  
   14004a4cb:	add    BYTE PTR [rdx-0x1ffc1a6],dl
   14004a4d1:	cli    
   14004a4d2:	cli    
   14004a4d3:	add    BYTE PTR [rsi-0x21ff857a],ah
   14004a4d9:	retf   0xba
   14004a4dc:	out    0xe2,al
   14004a4de:	fiadd  WORD PTR [rax]
   14004a4e0:	jbe    0x14004a51c
   14004a4e2:	(bad)  
   14004a4e3:	add    BYTE PTR [rdx+0x2a],ah
   14004a4e6:	adc    al,BYTE PTR [rax]
   14004a4e8:	mov    edx,0x9e008696
   14004a4ed:	(bad)  
   14004a4ee:	add    BYTE PTR ds:[rsi+0x42],dh
   14004a4f2:	sub    al,BYTE PTR [rax]
   14004a4f4:	mov    dh,0x72
   14004a4f6:	rex.WX add BYTE PTR [rsi+0x2e],spl
   14004a4fa:	sbb    al,BYTE PTR [rax]
   14004a4fc:	jb     0x14004a538
   14004a4fe:	add    BYTE PTR es:[rsi-0x25ffc5a6],dl
   14004a505:	mov    dh,0x9a
   14004a507:	add    dl,bh
   14004a509:	cli    
   14004a50a:	test   BYTE PTR [rax],0xd6
   14004a50d:	(bad)  
   14004a50e:	mov    esi,0xd2dae200
   14004a513:	add    BYTE PTR [rsi-0x79ffd9ba],al
   14004a519:	push   rdx
   14004a51a:	add    BYTE PTR ds:[rsi+0x4e],bh
   14004a51e:	cmp    al,BYTE PTR [rax]
   14004a520:	mov    dh,0x92
   14004a522:	xchg   BYTE PTR [rax],al
   14004a524:	mov    esi,0xa60096a2
   14004a529:	push   0x46
   14004a52b:	add    dh,dl
   14004a52d:	retf   0xc6
   14004a530:	mov    cl,BYTE PTR [rsi+0x2e]
   14004a533:	add    dl,ah
   14004a535:	(bad)  
   14004a536:	rol    BYTE PTR [rax],cl
   14004a538:	(bad)  
   14004a539:	loop   0x14004a51d
   14004a53b:	add    dl,ah
   14004a53d:	rol    dh,cl
   14004a53f:	add    BYTE PTR [rsi-0x5dffcdaa],dl
   14004a545:	(bad)  
   14004a546:	jbe    0x14004a548
   14004a548:	(bad)  
   14004a549:	(bad)  
   14004a54b:	add    BYTE PTR [rsi-0x75ffb592],ch
   14004a551:	push   rsi
   14004a552:	rex.X add BYTE PTR [rsi+0x7a004e62],cl
   14004a559:	cmp    ah,BYTE PTR [rdx]
   14004a55b:	add    BYTE PTR [rdx-0x9ffd1ba],al
   14004a561:	div    dh
   14004a563:	add    BYTE PTR [rsi-0x2dff8976],ch
   14004a569:	mov    edx,0x327200ae
   14004a56e:	sbb    al,BYTE PTR [rax]
   14004a570:	jle    0x14004a5b0
   14004a572:	and    al,BYTE PTR [rax]
   14004a574:	(bad)  
   14004a575:	rex.WRX
   14004a576:	add    BYTE PTR ss:[rdx-0x75ff8172],dh
   14004a57d:	(bad)  
   14004a57e:	push   rsi
   14004a57f:	add    BYTE PTR [rsi+0x36],dh
   14004a582:	(bad)  
   14004a583:	add    BYTE PTR [rsi+0x32],ch
   14004a586:	sbb    al,BYTE PTR [rax]
   14004a588:	repnz loop 0x14004a565
   14004a58b:	add    dh,cl
   14004a58d:	mov    edx,0x3e7e00b6
   14004a592:	es add dh,al
   14004a595:	mov    dl,0xaa
   14004a597:	add    dl,dh
   14004a599:	repnz repnz add dl,dl
   14004a59d:	ret    0xba
   14004a5a0:	jp     0x14004a5ec
   14004a5a2:	ss add dh,ch
   14004a5a5:	loop   0x14004a585
   14004a5a7:	add    BYTE PTR [rdx+0x7e008a9a],bh
   14004a5ad:	rex.X sub al,BYTE PTR [rax]
   14004a5b0:	(bad)  
   14004a5b1:	fcmovbe st,st(2)
   14004a5b3:	add    BYTE PTR [rdx-0x41ffd5ba],al
   14004a5b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a5ba:	sahf   
   14004a5bb:	add    BYTE PTR [rsi+0x26],bl
   14004a5be:	adc    al,BYTE PTR [rax]
   14004a5c0:	sahf   
   14004a5c1:	(bad)  
   14004a5c2:	cmp    al,BYTE PTR [rax]
   14004a5c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a5c5:	jp     0x14004a631
   14004a5c7:	add    dh,dh
   14004a5c9:	out    dx,al
   14004a5ca:	out    dx,al
   14004a5cb:	add    BYTE PTR [rdx-0x3dff8576],dh
   14004a5d1:	scas   al,BYTE PTR es:[rdi]
   14004a5d2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a5d3:	add    BYTE PTR [rdx-0x69ffad86],bh
   14004a5d9:	(bad)  
   14004a5da:	rex.WRX add BYTE PTR [rsi-0x21ff7d66],r15b
   14004a5e1:	mov    edx,0x6a96009e
   14004a5e6:	push   rsi
   14004a5e7:	add    dl,ah
   14004a5e9:	ror    dl,cl
   14004a5eb:	add    BYTE PTR [rdx-0x55ffcdba],al
   14004a5f1:	xchg   BYTE PTR [rsi+0x0],dh
   14004a5f4:	(bad)  
   14004a5f5:	push   rsi
   14004a5f6:	rex.RX add BYTE PTR [rdx+0x36],r14b
   14004a5fa:	sbb    al,BYTE PTR [rax]
   14004a5fc:	mov    dl,BYTE PTR [rsi+0x3e]
   14004a5ff:	add    BYTE PTR [rdx-0x45ffb5a6],cl
   14004a605:	movabs ds:0x8eae00365692009a,al
   14004a60e:	(bad)  
   14004a60f:	add    dh,bl
   14004a611:	(bad)  
   14004a612:	mov    BYTE PTR [rax],0x8e
   14004a615:	pop    rsi
   14004a616:	rex.WRX add BYTE PTR [rsi+0x6e002a4a],r8b
   14004a61d:	cs (bad) 
   14004a61f:	add    dh,al
   14004a621:	stos   BYTE PTR es:[rdi],al
   14004a622:	sahf   
   14004a623:	add    dh,cl
   14004a625:	mov    dh,0xae
   14004a627:	add    dh,bh
   14004a629:	(bad)  
   14004a62a:	inc    BYTE PTR [rax]
   14004a62c:	(bad)  
   14004a62d:	mov    dl,0xaa
   14004a62f:	add    dl,dl
   14004a631:	mov    esi,0x6eb200b6
   14004a636:	rex.RX add dl,r11b
   14004a639:	mov    dl,0x0
   14004a63c:	jbe    0x14004a678
   14004a63e:	and    al,BYTE PTR [rax]
   14004a640:	(bad)  
   14004a641:	pop    rdx
   14004a642:	add    BYTE PTR ss:[rsi+0x46],bh
   14004a646:	cs add dl,bl
   14004a649:	(bad)  
   14004a64a:	mov    edx,0x1e326e00
   14004a64f:	add    BYTE PTR [rdx+0x3e],bh
   14004a652:	and    al,BYTE PTR [rax]
   14004a654:	mov    dl,BYTE PTR [rdx+0x3a]
   14004a657:	add    BYTE PTR [rsi+0x72004266],ah
   14004a65d:	ss (bad) 
   14004a65f:	add    dh,dl
   14004a661:	ret    0xbe
   14004a664:	push   0x32
   14004a666:	sbb    al,BYTE PTR [rax]
   14004a668:	(bad)  
   14004a669:	(bad)  
   14004a66b:	add    dh,bl
   14004a66d:	retf   0xc2
   14004a670:	mov    cl,BYTE PTR [rdx+0x2e]
   14004a673:	add    dh,cl
   14004a675:	mov    edx,0xdaea00b2
   14004a67a:	(bad)  
   14004a67b:	add    BYTE PTR [rdx+0x3e],bh
   14004a67e:	es add dh,ah
   14004a681:	(bad)  
   14004a682:	(bad)  
   14004a683:	add    dl,ch
   14004a685:	loop   0x14004a665
   14004a687:	add    BYTE PTR [rdx+0x3a],bh
   14004a68a:	(bad)  
   14004a68b:	add    BYTE PTR [rsi+0x2a],ah
   14004a68e:	adc    al,BYTE PTR [rax]
   14004a690:	movabs ds:0x6a002a427a003e62,al
   14004a699:	sbb    al,BYTE PTR cs:[rax]
   14004a69c:	(bad)  
   14004a69d:	pop    rdx
   14004a69e:	cmp    al,BYTE PTR [rax]
   14004a6a0:	fcmovb st,st(6)
   14004a6a2:	mov    esi,0xd2dae600
   14004a6a7:	add    BYTE PTR [rdx-0x55ffc1ae],cl
   14004a6ad:	push   0x46
   14004a6af:	add    dl,bl
   14004a6b1:	retf   0xc6
   14004a6b4:	mov    cs,WORD PTR [rsi+0x2e]
   14004a6b7:	add    dh,ah
   14004a6b9:	(bad)  
   14004a6ba:	rol    BYTE PTR [rax],cl
   14004a6bc:	out    dx,al
   14004a6bd:	(bad)  
   14004a6bf:	add    dl,bh
   14004a6c1:	div    dh
   14004a6c3:	add    BYTE PTR [rsi+0x32],dh
   14004a6c6:	sbb    al,BYTE PTR [rax]
   14004a6c8:	xchg   BYTE PTR [rsi+0x36],cl
   14004a6cb:	add    BYTE PTR [rsi-0x9ffa99e],cl
   14004a6d1:	repnz repnz add dh,dl
   14004a6d5:	ret    0xba
   14004a6d8:	jle    0x14004a724
   14004a6da:	add    BYTE PTR ss:[rsi+0x2a46],al
	...
   14004a7bd:	add    BYTE PTR [rax],al
   14004a7bf:	add    al,cl
   14004a7c1:	enter  0xc8c8,0xc8
   14004a7c5:	enter  0xc8c8,0xc8
   14004a7c9:	enter  0xc8c8,0x4e
   14004a7cd:	sbb    al,0x1c
   14004a7cf:	sbb    al,0x1c
   14004a7d1:	sbb    al,0x1c
   14004a7d3:	rex.WRX enter 0xc8c8,0xc8
   14004a7d8:	enter  0xc8c8,0xc8
   14004a7dc:	enter  0xc8c8,0xc8
   14004a7e0:	enter  0xc8c8,0xc8
   14004a7e4:	enter  0xc8c8,0xc8
   14004a7e8:	enter  0x1c4e,0x13
   14004a7ec:	lahf   
   14004a7ed:	data16 movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a7ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a7f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a7f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a7f2:	data16 lahf 
   14004a7f4:	adc    ebx,DWORD PTR [rsi+rcx*2]
   14004a7f7:	enter  0xc8c8,0xc8
   14004a7fb:	enter  0xc8c8,0xc8
   14004a7ff:	enter  0xc8c8,0xc8
   14004a803:	enter  0xc8c8,0xc8
   14004a807:	rex.WRX sub r11b,BYTE PTR [rdi+0x47474a4]
   14004a80e:	add    al,0x4
   14004a810:	add    al,0x4
   14004a812:	add    al,0x74
   14004a814:	je     0x14004a7ba
   14004a816:	lahf   
   14004a817:	sub    cl,BYTE PTR [rsi-0x38]
   14004a81a:	enter  0xc8c8,0xc8
   14004a81e:	enter  0xc8c8,0xc8
   14004a822:	enter  0xc8c8,0xc8
   14004a826:	sbb    al,0x9f
   14004a828:	je     0x14004a82e
   14004a82a:	add    al,0x7d
   14004a82c:	jge    0x14004a860
   14004a82e:	xor    bl,BYTE PTR [rsp+rbx*2+0x32]
   14004a832:	xor    bh,BYTE PTR [rbp+0x7d]
   14004a835:	add    al,0x4
   14004a837:	je     0x14004a7d8
   14004a839:	sbb    al,0xc8
   14004a83b:	enter  0xc8c8,0xc8
   14004a83f:	enter  0xc8c8,0xc8
   14004a843:	enter  0x1cc8,0xa4
   14004a847:	add    al,0x4
   14004a849:	jge    0x14004a87d
   14004a84b:	and    al,0x5
   14004a84d:	xchg   edx,eax
   14004a84e:	adc    eax,0x92155050
   14004a853:	add    eax,0x47d3224
   14004a858:	add    al,0xa4
   14004a85a:	sbb    al,0xc8
   14004a85c:	enter  0xc8c8,0xc8
   14004a860:	enter  0xc8c8,0xc8
   14004a864:	sbb    al,0xa4
   14004a866:	add    al,0x7d
   14004a868:	xor    bl,BYTE PTR [rbp+rax*1+0x50]
   14004a86c:	rex.WXB (bad) 
   14004a86e:	pop    rdx
   14004a86f:	pop    rdx
   14004a870:	pop    rdx
   14004a871:	pop    rdx
   14004a872:	(bad)  
   14004a873:	rex.WXB push r8
   14004a875:	add    eax,0x47d965c
   14004a87a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a87b:	sbb    al,0xc8
   14004a87d:	enter  0xc8c8,0xc8
   14004a881:	enter  0x1cc8,0xa4
   14004a885:	add    al,0x7d
   14004a887:	pop    rsp
   14004a888:	add    eax,0xd5a4b15
   14004a88d:	(bad)  
   14004a88e:	sub    al,0x85
   14004a890:	test   DWORD PTR [rdi+rdi*1],ebp
   14004a893:	or     eax,0x5154b5a
   14004a898:	xor    bh,BYTE PTR [rbp+0x4]
   14004a89b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a89c:	sbb    al,0xc8
   14004a89e:	enter  0xc8c8,0xc8
   14004a8a2:	rex.WRX sub r13b,BYTE PTR [rbx+0x70]
   14004a8a6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a8a7:	add    al,0x96
   14004a8a9:	mov    ebp,0xb4b4a060
   14004a8ae:	add    al,0x4
   14004a8b0:	jnp    0x14004a8b6
   14004a8b2:	mov    ah,0xb4
   14004a8b4:	movabs al,ds:0x2a6b70660496bd60
   14004a8bd:	rex.WRX enter 0xc8c8,0xc8
   14004a8c2:	jno    0x14004a93c
   14004a8c4:	(bad)  
   14004a8c5:	outs   dx,DWORD PTR ds:[rsi]
   14004a8c6:	outs   dx,DWORD PTR ds:[rsi]
   14004a8c7:	outs   dx,DWORD PTR ds:[rsi]
   14004a8c8:	outs   dx,DWORD PTR ds:[rsi]
   14004a8c9:	outs   dx,DWORD PTR ds:[rsi]
   14004a8ca:	outs   dx,DWORD PTR ds:[rsi]
   14004a8cb:	outs   dx,DWORD PTR ds:[rsi]
   14004a8cc:	outs   dx,DWORD PTR ds:[rsi]
   14004a8cd:	adc    BYTE PTR [rsi],ah
   14004a8cf:	cmp    DWORD PTR [rip+0x6f109139],ebp        # 0x1af153a0e
   14004a8d5:	outs   dx,DWORD PTR ds:[rsi]
   14004a8d6:	outs   dx,DWORD PTR ds:[rsi]
   14004a8d7:	outs   dx,DWORD PTR ds:[rsi]
   14004a8d8:	outs   dx,DWORD PTR ds:[rsi]
   14004a8d9:	outs   dx,DWORD PTR ds:[rsi]
   14004a8da:	outs   dx,DWORD PTR ds:[rsi]
   14004a8db:	(bad)  
   14004a8dc:	rex.B sbb al,0xc8
   14004a8df:	enter  0x4ec8,0x6b
   14004a8e3:	sub    BYTE PTR [rbx-0x76],dl
   14004a8e6:	mov    al,0xb0
   14004a8e8:	mov    al,0x1e
   14004a8ea:	jl     0x14004a968
   14004a8ec:	or     ecx,DWORD PTR [rbx]
   14004a8ee:	jb     0x14004a941
   14004a8f0:	add    DWORD PTR [rax+0x7c7c0b72],ecx
   14004a8f6:	(bad)  
   14004a8f7:	mov    al,0xb0
   14004a8f9:	mov    al,0x8a
   14004a8fb:	mulps  xmm6,XMMWORD PTR [rax+0x4e]
   14004a8ff:	enter  0x1cc8,0xa4
   14004a903:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004a905:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a906:	or     DWORD PTR [rcx],edx
   14004a908:	(bad)  
   14004a909:	and    BYTE PTR [rsi+0x550d4d0d],0x5
   14004a910:	(bad)  
   14004a911:	add    bl,BYTE PTR [rbp-0x7f59f2b3]
   14004a917:	(bad)  
   14004a918:	push   rbp
   14004a919:	and    BYTE PTR [rax],al
   14004a91b:	(bad)  
   14004a91c:	mov    r10b,0x1c
   14004a91f:	enter  0x661c,0xb2
   14004a923:	ins    DWORD PTR es:[rdi],dx
   14004a924:	push   rdx
   14004a925:	pop    rbp
   14004a926:	xchg   ebx,eax
   14004a927:	nop
   14004a928:	and    QWORD PTR [rsp+rbp*2-0x63f7b0b8],r12
   14004a930:	xchg   ecx,eax
   14004a931:	xchg   ecx,eax
   14004a932:	push   rsi
   14004a933:	add    al,0x4
   14004a935:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a936:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a937:	sub    cl,BYTE PTR [rax+rcx*1]
   14004a93a:	jae    0x14004a980
   14004a93c:	pop    rax
   14004a93d:	and    BYTE PTR [rbx],dl
   14004a93f:	data16 rex.WRX lahf 
   14004a942:	rex.W mov spl,0x9a
   14004a946:	(bad)  
   14004a947:	(bad)  
   14004a948:	sub    r8d,DWORD PTR [r14+r8*1+0x1b9a5e0a]
   14004a950:	(bad)  
   14004a951:	(bad)  
   14004a952:	jbe    0x14004a963
   14004a954:	test   BYTE PTR [rsi],al
   14004a956:	xor    al,0x5d
   14004a958:	sbb    BYTE PTR [rdx+0x206e9a9a],bl
   14004a95e:	lahf   
   14004a95f:	rex.WRX sbb al,0x66
   14004a962:	rex.W mov spl,0x9a
   14004a966:	(bad)  
   14004a967:	(bad)  
   14004a968:	(bad)  
   14004a969:	(bad)  
   14004a96a:	(bad)  
   14004a96b:	(bad)  
   14004a96c:	(bad)  
   14004a96d:	(bad)  
   14004a96e:	(bad)  
   14004a96f:	push   rsp
   14004a970:	jle    0x14004a90c
   14004a972:	(bad)  
   14004a973:	(bad)  
   14004a974:	(bad)  
   14004a975:	(bad)  
   14004a976:	(bad)  
   14004a977:	(bad)  
   14004a978:	(bad)  
   14004a979:	(bad)  
   14004a97a:	(bad)  
   14004a97b:	(bad)  
   14004a97c:	outs   dx,BYTE PTR ds:[rsi]
   14004a97d:	and    BYTE PTR [rsi+0x1c],ah
   14004a980:	sbb    al,0x66
   14004a982:	rex.W mov spl,0x9a
   14004a986:	(bad)  
   14004a987:	(bad)  
   14004a988:	(bad)  
   14004a989:	(bad)  
   14004a98a:	(bad)  
   14004a98b:	jne    0x14004a9f6
   14004a98d:	pushf  
   14004a98e:	(bad)  
   14004a98f:	xor    eax,0x9a9a9a7e
   14004a994:	(bad)  
   14004a995:	(bad)  
   14004a996:	(bad)  
   14004a997:	(bad)  
   14004a998:	(bad)  
   14004a999:	(bad)  
   14004a99a:	(bad)  
   14004a99b:	(bad)  
   14004a99c:	outs   dx,BYTE PTR ds:[rsi]
   14004a99d:	and    BYTE PTR [rsp+rbx*1-0x39b799e4],ah
   14004a9a4:	(bad)  
   14004a9a5:	(bad)  
   14004a9a6:	(bad)  
   14004a9a7:	(bad)  
   14004a9a8:	(bad)  
   14004a9a9:	(bad)  
   14004a9aa:	(bad)  
   14004a9ab:	jne    0x14004a9ee
   14004a9ad:	or     DWORD PTR [rax-0x65656ea2],ebx
   14004a9b3:	(bad)  
   14004a9b4:	(bad)  
   14004a9b5:	(bad)  
   14004a9b6:	(bad)  
   14004a9b7:	(bad)  
   14004a9b8:	(bad)  
   14004a9b9:	(bad)  
   14004a9ba:	(bad)  
   14004a9bb:	(bad)  
   14004a9bc:	outs   dx,BYTE PTR ds:[rsi]
   14004a9bd:	and    BYTE PTR [rsp+rbx*1-0x398f99e4],ah
   14004a9c4:	(bad)  
   14004a9c5:	(bad)  
   14004a9c6:	(bad)  
   14004a9c7:	(bad)  
   14004a9c8:	(bad)  
   14004a9c9:	(bad)  
   14004a9ca:	(bad)  
   14004a9cb:	(bad)  
   14004a9cc:	mov    ecx,0x75a88f6b
   14004a9d1:	(bad)  
   14004a9d2:	(bad)  
   14004a9d3:	(bad)  
   14004a9d4:	(bad)  
   14004a9d5:	(bad)  
   14004a9d6:	(bad)  
   14004a9d7:	(bad)  
   14004a9d8:	(bad)  
   14004a9d9:	(bad)  
   14004a9da:	(bad)  
   14004a9db:	(bad)  
   14004a9dc:	and    eax,0x1c1ca420
   14004a9e1:	data16 jo 0x14004a9aa
   14004a9e4:	(bad)  
   14004a9e5:	(bad)  
   14004a9e6:	(bad)  
   14004a9e7:	(bad)  
   14004a9e8:	(bad)  
   14004a9e9:	(bad)  
   14004a9ea:	(bad)  
   14004a9eb:	(bad)  
   14004a9ec:	and    eax,0x8cc26766
   14004a9f1:	mov    cl,0x9a
   14004a9f3:	(bad)  
   14004a9f4:	(bad)  
   14004a9f5:	(bad)  
   14004a9f6:	(bad)  
   14004a9f7:	(bad)  
   14004a9f8:	(bad)  
   14004a9f9:	(bad)  
   14004a9fa:	(bad)  
   14004a9fb:	(bad)  
   14004a9fc:	and    eax,0x1c1c6620
   14004aa01:	data16 jo 0x14004a9ca
   14004aa04:	(bad)  
   14004aa05:	(bad)  
   14004aa06:	(bad)  
   14004aa07:	(bad)  
   14004aa08:	(bad)  
   14004aa09:	xor    edx,DWORD PTR [rsi-0x7f]
   14004aa0c:	ins    DWORD PTR es:[rdi],dx
   14004aa0d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004aa0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   14004aa10:	and    eax,DWORD PTR [rax+0x58]
   14004aa13:	pushf  
   14004aa14:	mov    WORD PTR [rcx-0x65656576],es
   14004aa1a:	(bad)  
   14004aa1b:	(bad)  
   14004aa1c:	and    eax,0x4e1c6620
   14004aa21:	lahf   
   14004aa22:	jo     0x14004a9ea
   14004aa24:	(bad)  
   14004aa25:	(bad)  
   14004aa26:	(bad)  
   14004aa27:	(bad)  
   14004aa28:	(bad)  
   14004aa29:	(bad)  
   14004aa2a:	or     bh,BYTE PTR [rax+0xc]
   14004aa2d:	(bad)  
   14004aa2e:	or     BYTE PTR [rsi+0x64],dl
   14004aa31:	xchg   BYTE PTR [rcx-0x7a],al
   14004aa34:	(bad)  
   14004aa35:	push   rdi
   14004aa36:	push   rdi
   14004aa37:	pop    rbp
   14004aa38:	(bad)  
   14004aa39:	(bad)  
   14004aa3a:	(bad)  
   14004aa3b:	(bad)  
   14004aa3c:	and    eax,0x664e9f20
   14004aa41:	adc    esi,DWORD PTR [rax-0x3a]
   14004aa44:	(bad)  
   14004aa45:	(bad)  
   14004aa46:	(bad)  
   14004aa47:	(bad)  
   14004aa48:	(bad)  
   14004aa49:	(bad)  
   14004aa4a:	(bad)  
   14004aa4b:	sbb    BYTE PTR [rdx-0x6f72f066],r11b
   14004aa52:	sub    BYTE PTR [rcx+0x145bc08d],cl
   14004aa58:	(bad)  
   14004aa59:	(bad)  
   14004aa5a:	(bad)  
   14004aa5b:	(bad)  
   14004aa5c:	and    eax,0xc8661320
   14004aa61:	sbb    al,0x70
   14004aa63:	mov    ah,0x9a
   14004aa66:	(bad)  
   14004aa67:	(bad)  
   14004aa68:	(bad)  
   14004aa69:	(bad)  
   14004aa6a:	(bad)  
   14004aa6b:	(bad)  
   14004aa6c:	(bad)  
   14004aa6d:	(bad)  
   14004aa6e:	(bad)  
   14004aa6f:	sbb    eax,DWORD PTR [rdi+rax*1-0x6552d7a8]
   14004aa76:	(bad)  
   14004aa77:	(bad)  
   14004aa78:	(bad)  
   14004aa79:	(bad)  
   14004aa7a:	(bad)  
   14004aa7b:	(bad)  
   14004aa7c:	and    eax,0xc8c81c20
   14004aa81:	rex.WRX jo 0x14004aa4a
   14004aa84:	(bad)  
   14004aa85:	(bad)  
   14004aa86:	(bad)  
   14004aa87:	(bad)  
   14004aa88:	(bad)  
   14004aa89:	(bad)  
   14004aa8a:	(bad)  
   14004aa8b:	(bad)  
   14004aa8c:	(bad)  
   14004aa8d:	(bad)  
   14004aa8e:	(bad)  
   14004aa8f:	xor    eax,0x95779a7e
   14004aa94:	xchg   ebx,eax
   14004aa95:	or     dl,BYTE PTR [rdx-0x66]
   14004aa98:	(bad)  
   14004aa99:	(bad)  
   14004aa9a:	(bad)  
   14004aa9b:	(bad)  
   14004aa9c:	and    eax,0xc8c84e97
   14004aaa1:	enter  0x6da9,0x52
   14004aaa5:	(bad)  
   14004aaa6:	(bad)  
   14004aaa7:	(bad)  
   14004aaa8:	(bad)  
   14004aaa9:	(bad)  
   14004aaaa:	(bad)  
   14004aaab:	(bad)  
   14004aaac:	(bad)  
   14004aaad:	(bad)  
   14004aaae:	(bad)  
   14004aaaf:	xor    BYTE PTR [rsi-0x66],bh
   14004aab2:	(bad)  
   14004aab3:	(bad)  
   14004aab4:	sub    DWORD PTR [rbp-0x3c],eax
   14004aab7:	(bad)  
   14004aab8:	(bad)  
   14004aab9:	(bad)  
   14004aaba:	(bad)  
   14004aabb:	(bad)  
   14004aabc:	outs   dx,BYTE PTR ds:[rsi]
   14004aabd:	mov    bl,0xc8
   14004aabf:	enter  0xc8c8,0x38
   14004aac3:	(bad)  
   14004aac4:	xor    eax,0x9a9a9a9a
   14004aac9:	(bad)  
   14004aaca:	(bad)  
   14004aacb:	(bad)  
   14004aacc:	(bad)  
   14004aacd:	(bad)  
   14004aace:	(bad)  
   14004aacf:	(bad)  
   14004aad0:	setp   BYTE PTR [rdx-0x65656566]
   14004aad7:	(bad)  
   14004aad8:	(bad)  
   14004aad9:	(bad)  
   14004aada:	(bad)  
   14004aadb:	ror    BYTE PTR [rax],0x7f
   14004aade:	enter  0xc8c8,0xc8
   14004aae2:	enter  0x7b4e,0x81
   14004aae6:	test   al,0x52
   14004aae8:	(bad)  
   14004aae9:	(bad)  
   14004aaea:	(bad)  
   14004aaeb:	(bad)  
   14004aaec:	(bad)  
   14004aaed:	(bad)  
   14004aaee:	(bad)  
   14004aaef:	cmp    eax,0x9a9a793b
   14004aaf4:	(bad)  
   14004aaf5:	(bad)  
   14004aaf6:	(bad)  
   14004aaf7:	(bad)  
   14004aaf8:	(bad)  
   14004aaf9:	sbb    BYTE PTR [rcx-0x5b],bl
   14004aafc:	adc    cl,al
   14004aafe:	enter  0xc8c8,0xc8
   14004ab02:	enter  0xa9c8,0x20
   14004ab06:	rol    DWORD PTR [rcx+0x35b98a53],0x42
   14004ab0d:	sbb    bh,BYTE PTR [rbx]
   14004ab0f:	cmp    edi,DWORD PTR [rbx]
   14004ab11:	sbb    eax,0x5eb1b953
   14004ab16:	mov    cl,0xb9
   14004ab18:	mov    ecx,0xc812207a
   14004ab1d:	enter  0xc8c8,0xc8
   14004ab21:	enter  0xc8c8,0xc8
   14004ab25:	sbb    al,0xa4
   14004ab27:	ins    BYTE PTR es:[rdi],dx
   14004ab28:	sbb    DWORD PTR [rip+0x6a1d3b3b],0xffffff9c        # 0x1aa21e66a
   14004ab2f:	cmp    eax,0x1a1a1ac5
   14004ab34:	push   rbx
   14004ab35:	xor    DWORD PTR [rcx],esi
   14004ab37:	rex.X sbb eax,0xc8c84e67
   14004ab3d:	enter  0xc8c8,0xc8
   14004ab41:	enter  0xc8c8,0xc8
   14004ab45:	enter  0x661c,0x96
   14004ab49:	rex.WX add rsi,QWORD PTR [rcx]
   14004ab4c:	xor    DWORD PTR [rbx-0x75a06bfd],ebp
   14004ab52:	rex.X
   14004ab53:	rex.X
   14004ab54:	rex.X xor eax,0x123e6a33
   14004ab5a:	enter  0xc8c8,0xc8
   14004ab5e:	enter  0xc8c8,0xc8
   14004ab62:	enter  0xc8c8,0xc8
   14004ab66:	enter  0xa74e,0x7d
   14004ab6a:	sbb    DWORD PTR [rbx+0x62356262],ebp
   14004ab70:	(bad)  
   14004ab72:	jns    0x14004aba7
   14004ab74:	(bad)  
   14004ab75:	jns    0x14004abf1
   14004ab77:	and    DWORD PTR [rax],edi
   14004ab79:	enter  0xc8c8,0xc8
   14004ab7d:	enter  0xc8c8,0xc8
   14004ab81:	enter  0xc8c8,0xc8
   14004ab85:	enter  0xc8c8,0xc8
   14004ab89:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   14004ab8b:	rex.XB xchg DWORD PTR [r14+0x72],eax
   14004ab8f:	(bad)  
   14004ab90:	cmp    al,0x3c
   14004ab92:	xor    ebx,DWORD PTR [rdi+0x7a]
   14004ab95:	push   rsi
   14004ab96:	rex.WB enter 0xc8c8,0xc8
   14004ab9b:	enter  0xc8c8,0xc8
   14004ab9f:	enter  0xc8c8,0xc8
   14004aba3:	enter  0xc8c8,0xc8
   14004aba7:	enter  0xc8c8,0xc8
   14004abab:	data16 adc dl,BYTE PTR [rbx]
   14004abae:	and    eax,DWORD PTR [rsi+0x1c576589]
   14004abb4:	enterw 0xc8c8,0xc8
   14004abb9:	enter  0xc8c8,0xc8
   14004abbd:	enter  0xc8c8,0xff
   14004abc1:	lock ud0 edi,edi
   14004abc5:	add    BYTE PTR [rcx],0xff
   14004abc8:	inc    BYTE PTR [rax]
   14004abca:	add    BYTE PTR [rdi-0x4],bh
   14004abcd:	add    BYTE PTR [rax],al
   14004abcf:	(bad)  
   14004abd0:	clc    
   14004abd1:	add    BYTE PTR [rax],al
   14004abd3:	(bad)  
   14004abd4:	lock add BYTE PTR [rax],al
   14004abd7:	pavgb  mm0,QWORD PTR [rax]
   14004abda:	add    BYTE PTR [rdi],al
   14004abdc:	rol    BYTE PTR [rax],0x0
   14004abdf:	add    eax,eax
   14004abe1:	add    BYTE PTR [rax],al
   14004abe3:	add    eax,DWORD PTR [rax-0x7fff0000]
   14004abe9:	add    BYTE PTR [rax],al
   14004abeb:	add    DWORD PTR [rax],eax
	...
   14004ac11:	add    BYTE PTR [rax],al
   14004ac13:	add    BYTE PTR [rax-0x7fff0000],al
   14004ac19:	add    BYTE PTR [rax],al
   14004ac1b:	add    eax,eax
   14004ac1d:	add    BYTE PTR [rax],al
   14004ac1f:	add    eax,eax
   14004ac21:	add    BYTE PTR [rax],al
   14004ac23:	add    esp,eax
   14004ac25:	add    BYTE PTR [rax],al
   14004ac27:	(bad)  
   14004ac28:	lock add BYTE PTR [rax],al
   14004ac2b:	psubb  mm0,QWORD PTR [rax]
   14004ac2e:	add    BYTE PTR [rdi],bl
   14004ac30:	cld    
   14004ac31:	add    BYTE PTR [rax],al
   14004ac33:	(bad)  
   14004ac34:	inc    BYTE PTR [rax]
   14004ac36:	add    BYTE PTR [rdi-0x1],bh
   14004ac39:	add    BYTE PTR [rcx],0xff
   14004ac3c:	jmp    rax
   14004ac3e:	(bad)  
   14004ac3f:	jmp    FWORD PTR [rax]
   14004ac41:	add    BYTE PTR [rax],al
   14004ac43:	add    BYTE PTR [rax],bl
   14004ac45:	add    BYTE PTR [rax],al
   14004ac47:	add    BYTE PTR [rax],dh
   14004ac49:	add    BYTE PTR [rax],al
   14004ac4b:	add    BYTE PTR [rcx],al
   14004ac4d:	add    BYTE PTR [rax],cl
	...
   14004ac5f:	add    BYTE PTR [rax],al
   14004ac61:	add    DWORD PTR [rax],eax
   14004ac63:	add    BYTE PTR [rax],al
   14004ac65:	add    BYTE PTR [rax],al
   14004ac67:	add    BYTE PTR [rdx+0x26],ah
   14004ac6a:	(bad)  
   14004ac6b:	add    dl,cl
   14004ac6d:	(bad)  
   14004ac6e:	jle    0x14004ac70
   14004ac70:	(bad)  
   14004ac71:	pop    rsi
   14004ac72:	cmp    al,BYTE PTR [rax]
   14004ac74:	fcmove st,st(6)
   14004ac76:	mov    BYTE PTR [rax],0x82
   14004ac79:	rex.X and al,BYTE PTR [rax]
   14004ac7c:	sahf   
   14004ac7d:	jbe    0x14004ace5
   14004ac7f:	add    dl,cl
   14004ac81:	mov    dl,0xa6
   14004ac83:	add    dl,dh
   14004ac85:	(bad)  
   14004ac86:	loop   0x14004ac88
   14004ac88:	(bad)  
   14004ac89:	rex.WRX cmp r8b,BYTE PTR [rax]
   14004ac8c:	jb     0x14004acc4
   14004ac8e:	sbb    al,BYTE PTR [rax]
   14004ac90:	(bad)  
   14004ac91:	ret    0xb6
   14004ac94:	scas   al,BYTE PTR es:[rdi]
   14004ac95:	xchg   BYTE PTR [rsi+0x0],ch
   14004ac98:	out    0xde,al
   14004ac9a:	fiadd  DWORD PTR [rax]
   14004ac9c:	scas   al,BYTE PTR es:[rdi]
   14004ac9d:	outs   dx,BYTE PTR ds:[rsi]
   14004ac9e:	rex.WX add BYTE PTR [rsi-0x7dffcdae],cl
   14004aca5:	rex.RX
   14004aca6:	cs add dl,ah
   14004aca9:	(bad)  
   14004acaa:	rol    BYTE PTR [rax],cl
   14004acac:	jp     0x14004acec
   14004acae:	(bad)  
   14004acaf:	add    BYTE PTR [rdx-0x35ff8172],dh
   14004acb5:	mov    edx,0x568e00b2
   14004acba:	cmp    al,BYTE PTR [rax]
   14004acbc:	push   0x2e
   14004acbe:	adc    al,BYTE PTR [rax]
   14004acc0:	div    dh
   14004acc2:	repnz add dl,al
   14004acc5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004acc6:	(bad)  
   14004acc7:	add    BYTE PTR [rsi-0x2dffb5a2],cl
   14004accd:	mov    dl,0x0
   14004acd0:	data16 sbb al,BYTE PTR cs:[rax]
   14004acd4:	jb     0x14004ad0c
   14004acd6:	and    al,BYTE PTR [rax]
   14004acd8:	(bad)  
   14004acd9:	outs   dx,BYTE PTR ds:[rsi]
   14004acda:	pop    rdx
   14004acdb:	add    dl,ah
   14004acdd:	(bad)  
   14004acde:	(bad)  
   14004acdf:	add    BYTE PTR [rsi-0x61ffd5b6],al
   14004ace5:	jle    0x14004ad55
   14004ace7:	add    BYTE PTR [rsi-0x31ffb9aa],al
   14004aced:	movabs ds:0xd2da00426aa60086,al
   14004acf6:	(bad)  
   14004acf7:	add    BYTE PTR [rdx-0x9ffd5be],al
   14004acfd:	out    dx,al
   14004acfe:	out    dx,al
   14004acff:	add    BYTE PTR [rdx-0x51ffd1b2],cl
   14004ad05:	mov    es,WORD PTR [rsi-0x4d412e00]
   14004ad0b:	add    BYTE PTR [rsi+0x3a],dh
   14004ad0e:	(bad)  
   14004ad0f:	add    dl,bl
   14004ad11:	retf   0xbe
   14004ad14:	(bad)  
   14004ad15:	xchg   edx,eax
   14004ad16:	outs   dx,BYTE PTR ds:[rsi]
   14004ad17:	add    dh,ch
   14004ad19:	out    0xe2,al
   14004ad1b:	add    dl,ah
   14004ad1d:	fcmovu st,st(2)
   14004ad1f:	add    BYTE PTR [rdx+0x32],dh
   14004ad22:	sbb    al,BYTE PTR [rax]
   14004ad24:	scas   al,BYTE PTR es:[rdi]
   14004ad25:	jp     0x14004ad81
   14004ad27:	add    dh,bl
   14004ad29:	rol    dh,cl
   14004ad2b:	add    dl,cl
   14004ad2d:	mov    dh,0xae
   14004ad2f:	add    dl,dl
   14004ad31:	ret    0xbe
   14004ad34:	out    0xda,al
   14004ad36:	rol    BYTE PTR [rax],cl
   14004ad38:	xchg   BYTE PTR [rsi+0x42],dl
   14004ad3b:	add    BYTE PTR [rdx-0x61ff756a],dh
   14004ad41:	(bad)  
   14004ad42:	add    BYTE PTR ds:[rdx-0x61ffd9ba],al
   14004ad49:	jp     0x14004adb9
   14004ad4b:	add    dh,dh
   14004ad4d:	repnz (bad) 
   14004ad4f:	add    BYTE PTR [rsi+0x6e003a52],al
   14004ad55:	ss (bad) 
   14004ad57:	add    BYTE PTR [rdx-0x15ff897a],ch
   14004ad5d:	loop   0x14004ad41
   14004ad5f:	add    BYTE PTR [rsi+0x7e00365a],dl
   14004ad65:	rex.WX
   14004ad66:	add    BYTE PTR ss:[rsi+0x3e],dh
   14004ad6a:	add    BYTE PTR es:[rdx+0x32],dh
   14004ad6e:	(bad)  
   14004ad6f:	add    dh,bh
   14004ad71:	(bad)  
   14004ad72:	inc    BYTE PTR [rax]
   14004ad74:	(bad)  
   14004ad75:	retf   0xc2
   14004ad78:	push   0x32
   14004ad7a:	sbb    al,BYTE PTR [rax]
   14004ad7c:	xchg   esi,eax
   14004ad7d:	jb     0x14004ade1
   14004ad7f:	add    BYTE PTR [rdx-0x51ff917e],ch
   14004ad85:	xchg   edx,eax
   14004ad86:	xchg   BYTE PTR [rax],al
   14004ad88:	(bad)  
   14004ad89:	pop    rsi
   14004ad8a:	add    BYTE PTR ds:[rdx+0x42],bh
   14004ad8e:	add    BYTE PTR es:[rsi-0x31ff9986],ah
   14004ad95:	mov    dh,0xaa
   14004ad97:	add    dl,dh
   14004ad99:	out    dx,al
   14004ad9a:	(bad)  
   14004ad9b:	add    dh,bl
   14004ad9d:	(bad)  
   14004ad9e:	mov    edx,0xdae2ea00
   14004ada3:	add    BYTE PTR [rsi-0x69ffb18a],dh
   14004ada9:	push   rsi
   14004adaa:	xor    al,BYTE PTR [rax]
   14004adac:	(bad)  
   14004adad:	mov    edx,0x2e7200b6
   14004adb2:	(bad)  
   14004adb3:	add    dl,bh
   14004adb5:	cli    
   14004adb6:	cli    
   14004adb7:	add    dh,al
   14004adb9:	scas   al,BYTE PTR es:[rdi]
   14004adba:	sahf   
   14004adbb:	add    BYTE PTR [rsi+0x72005266],dl
   14004adc1:	cmp    ah,BYTE PTR [rdx]
   14004adc3:	add    BYTE PTR [rsi-0x31ffa18e],bl
   14004adc9:	mov    esi,0xcad600b6
   14004adce:	mov    BYTE PTR [rax],0x6a
   14004add1:	xor    bl,BYTE PTR [rsi]
   14004add3:	add    BYTE PTR [rsi-0x5dff756e],ch
   14004add9:	pop    rsi
   14004adda:	cmp    al,BYTE PTR [rax]
   14004addc:	fmulp  st(6),st
   14004adde:	retf   0xc600
   14004ade1:	mov    dl,0xaa
   14004ade3:	add    dl,dl
   14004ade5:	ret    0xba
   14004ade8:	stos   BYTE PTR es:[rdi],al
   14004ade9:	xchg   BYTE PTR [rdx+0x0],dh
   14004adec:	scas   al,BYTE PTR es:[rdi]
   14004aded:	jb     0x14004ae39
   14004adef:	add    BYTE PTR [rsi-0x21ffd1b6],al
   14004adf5:	(bad)  
   14004adf6:	(bad)  
   14004adf7:	add    BYTE PTR [rsi-0x2dff7d6e],dh
   14004adfd:	mov    edx,0x5a9600b2
   14004ae02:	cmp    al,BYTE PTR [rax]
   14004ae04:	data16 cs (bad) 
   14004ae07:	add    dl,bh
   14004ae09:	cli    
   14004ae0a:	test   BYTE PTR [rax],0x92
   14004ae0d:	outs   dx,BYTE PTR ds:[rsi]
   14004ae0e:	pop    rsi
   14004ae0f:	add    BYTE PTR [rdx-0x3dffb9a6],cl
   14004ae15:	movabs ds:0x468200466aa60092,al
   14004ae1e:	sub    al,BYTE PTR [rax]
   14004ae20:	div    dl
   14004ae22:	out    dx,al
   14004ae23:	add    BYTE PTR [rsi-0x1dffcdb2],al
   14004ae29:	ror    dl,cl
   14004ae2b:	add    dl,ah
   14004ae2d:	fcmovbe st,st(6)
   14004ae2f:	add    BYTE PTR [rsi-0x49ffbda6],cl
   14004ae35:	(bad)  
   14004ae36:	xchg   edx,eax
   14004ae37:	add    BYTE PTR [rsi+0x52],bh
   14004ae3a:	add    BYTE PTR ds:[rsi+0x36],dh
   14004ae3e:	(bad)  
   14004ae3f:	add    BYTE PTR [rsi+0x3e],bh
   14004ae42:	add    BYTE PTR es:[rsi-0x49ff8d7e],ah
   14004ae49:	xchg   edx,eax
   14004ae4a:	xchg   BYTE PTR [rax],al
   14004ae4c:	(bad)  
   14004ae4d:	rex.X
   14004ae4e:	add    BYTE PTR es:[rsi-0x15ff9586],bl
   14004ae55:	loop   0x14004ae35
   14004ae57:	add    dl,cl
   14004ae59:	scas   al,BYTE PTR es:[rdi]
   14004ae5a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ae5b:	add    BYTE PTR [rdx+0x3a],bh
   14004ae5e:	and    al,BYTE PTR [rax]
   14004ae60:	(bad)  
   14004ae61:	mov    esi,0x9ac600b6
   14004ae66:	(bad)  
   14004ae67:	add    BYTE PTR [rsi-0x41ffc5a2],bl
   14004ae6d:	xchg   edx,eax
   14004ae6e:	jp     0x14004ae70
   14004ae70:	movabs ds:0x9200e6eef6006276,al
   14004ae79:	(bad)  
   14004ae7a:	rex.WRX add dl,r10b
   14004ae7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ae7e:	mov    al,BYTE PTR [rax]
   14004ae80:	(bad)  
   14004ae81:	push   0x56
   14004ae83:	add    BYTE PTR [rsi-0x29ffd5b2],cl
   14004ae89:	(bad)  
   14004ae8a:	mov    esi,0x223e7e00
   14004ae8f:	add    BYTE PTR [rsi-0x5ff7d72],ch
   14004ae95:	div    dh
   14004ae97:	add    BYTE PTR [rdx-0x7dffc9aa],dl
   14004ae9d:	rex.WX xor al,BYTE PTR [rax]
   14004aea0:	mov    ss,WORD PTR [rdx+0x36]
   14004aea3:	add    BYTE PTR [rsi-0x59ffc1aa],cl
   14004aea9:	jle    0x14004af19
   14004aeab:	add    dl,ah
   14004aead:	ror    dh,cl
   14004aeaf:	add    dh,ch
   14004aeb1:	out    0xe6,al
   14004aeb3:	add    BYTE PTR [rsi-0x4dffbdaa],cl
   14004aeb9:	xchg   esi,eax
   14004aeba:	mov    es,WORD PTR [rax]
   14004aebc:	(bad)  
   14004aebd:	scas   al,BYTE PTR es:[rdi]
   14004aebe:	movabs ds:0x4a72b600c6cade00,al
   14004aec7:	add    BYTE PTR [rdx-0x75ffa192],bl
   14004aecd:	pop    rdx
   14004aece:	rex.WX add sil,sil
   14004aed1:	repnz repnz add BYTE PTR [rsi-0x79ffcdb2],cl
   14004aed9:	push   rdx
   14004aeda:	ds add dh,bl
   14004aedd:	(bad)  
   14004aede:	mov    BYTE PTR [rax],0x86
   14004aee1:	rex.WRX cmp r8b,BYTE PTR [rax]
   14004aee4:	jbe    0x14004af1c
   14004aee6:	sbb    al,BYTE PTR [rax]
   14004aee8:	mov    dl,0x86
   14004aeea:	outs   dx,BYTE PTR ds:[rsi]
   14004aeeb:	add    dh,ah
   14004aeed:	(bad)  
   14004aeee:	rol    BYTE PTR [rax],cl
   14004aef0:	(bad)  
   14004aef1:	mov    edx,0xd6e600b2
   14004aef6:	(bad)  
   14004aef7:	add    BYTE PTR [rdx+0x3a],bh
   14004aefa:	(bad)  
   14004aefb:	add    BYTE PTR [rsi+0x32],dh
   14004aefe:	sbb    al,BYTE PTR [rax]
   14004af00:	loop   0x14004aed4
   14004af02:	mov    BYTE PTR [rax],0xce
   14004af05:	mov    dh,0xae
   14004af07:	add    BYTE PTR [rdx+0x36],dh
   14004af0a:	(bad)  
   14004af0b:	add    BYTE PTR [rsi-0x7dff897a],ch
   14004af11:	rex.WX
   14004af12:	add    BYTE PTR ss:[rdx+0x3e],bh
   14004af16:	es add dl,bl
   14004af19:	retf   0xc2
   14004af1c:	outs   dx,BYTE PTR ds:[rsi]
   14004af1d:	xor    bl,BYTE PTR [rdx]
   14004af1f:	add    BYTE PTR [rdx+0x7e008692],dh
   14004af25:	rex.X
   14004af26:	es add dh,dh
   14004af29:	out    dx,al
   14004af2a:	(bad)  
   14004af2b:	add    dh,ch
   14004af2d:	loop   0x14004af09
   14004af2f:	add    BYTE PTR [rsi+0x3a],dh
   14004af32:	and    al,BYTE PTR [rax]
   14004af34:	sar    BYTE PTR [rsi+0x326e00b6],cl
   14004af3a:	(bad)  
   14004af3b:	add    dl,cl
   14004af3d:	mov    dl,0xaa
   14004af3f:	add    dh,dl
   14004af41:	ret    0xba
   14004af44:	push   0x2e
   14004af46:	(bad)  
   14004af47:	add    BYTE PTR [rdx-0x79ffb996],ch
   14004af4d:	rex.RX sub r8b,BYTE PTR [rax]
   14004af50:	out    0xda,al
   14004af52:	(bad)  
   14004af53:	add    BYTE PTR [rdx-0x5dff8d7e],ch
   14004af59:	jp     0x14004afc5
	...
   14004b067:	add    BYTE PTR [rbp-0x42424243],bh
   14004b06d:	mov    ebp,0x5a1abdbd
   14004b072:	cmp    edi,DWORD PTR [rbx]
   14004b074:	cmp    edi,DWORD PTR [rbx]
   14004b076:	pop    rdx
   14004b077:	sbb    bh,BYTE PTR [rbp-0x42424243]
   14004b07d:	mov    ebp,0xbdbdbdbd
   14004b082:	mov    ebp,0x44bdbdbd
   14004b087:	sbb    edi,DWORD PTR [rbp-0x55]
   14004b08a:	jbe    0x14004b102
   14004b08c:	jbe    0x14004b104
   14004b08e:	stos   DWORD PTR es:[rdi],eax
   14004b08f:	jge    0x14004b0ac
   14004b091:	rex.R mov ebp,0xbdbdbdbd
   14004b097:	mov    ebp,0xbdbdbdbd
   14004b09c:	mov    ebp,0x24afab3b
   14004b0a1:	ins    DWORD PTR es:[rdi],dx
   14004b0a2:	(bad)  
   14004b0a3:	(bad)
   14004b0a8:	scas   eax,DWORD PTR es:[rdi]
   14004b0a9:	stos   DWORD PTR es:[rdi],eax
   14004b0aa:	cmp    edi,DWORD PTR [rbp-0x42424243]
   14004b0b0:	mov    ebp,0x56bdbdbd
   14004b0b5:	scas   eax,DWORD PTR es:[rdi]
   14004b0b6:	(bad)  
   14004b0b7:	(bad)  
   14004b0b8:	(bad)  
   14004b0b9:	mov    WORD PTR [rsi+0x2],fs
   14004b0bc:	add    ah,BYTE PTR [rsi-0x74]
   14004b0bf:	(bad)  
   14004b0c0:	(bad)  
   14004b0c1:	(bad)  
   14004b0c2:	scas   eax,DWORD PTR es:[rdi]
   14004b0c3:	mov    dl,0xbd
   14004b0c5:	mov    ebp,0xbdbdbdbd
   14004b0ca:	mov    ebp,0x266daf56
   14004b0cf:	ds and cl,BYTE PTR ss:[rip+0x220d4f97]        # 0x16212006e
   14004b0d7:	ss ds es ins DWORD PTR es:[rdi],dx
   14004b0db:	scas   eax,DWORD PTR es:[rdi]
   14004b0dc:	mov    dl,0xbd
   14004b0de:	mov    ebp,0x44bdbdbd
   14004b0e3:	or     DWORD PTR [r9],edx
   14004b0e6:	(bad)  
   14004b0e7:	xchg   DWORD PTR [rax-0x80],edx
   14004b0ea:	push   rax
   14004b0eb:	mov    ss,WORD PTR [rax+rcx*2]
   14004b0ee:	pop    rsp
   14004b0ef:	push   rax
   14004b0f0:	xchg   DWORD PTR [rcx+rdx*1],eax
   14004b0f3:	or     DWORD PTR [rcx-0x49],eax
   14004b0f6:	mov    ebp,0x867bdbd
   14004b0fb:	(bad)  
   14004b0fc:	rex.RXB
   14004b0fd:	rex.RXB
   14004b0fe:	rex.RXB
   14004b0ff:	rex.RXB
   14004b100:	rex.RXB (bad) 
   14004b102:	jae    0x14004b107
   14004b104:	jle    0x14004b109
   14004b106:	xor    eax,0x47474727
   14004b10b:	rex.RXB
   14004b10c:	rex.RXB sbb al,0x67
   14004b10f:	mov    ebp,0x773aadbd
   14004b114:	(bad)  
   14004b115:	or     eax,DWORD PTR [rcx+0x185217f]
   14004b11b:	(bad)  
   14004b11c:	mov    eax,0x7f21852b
   14004b121:	or     DWORD PTR [rbx],0xad860557
   14004b127:	mov    ebp,0x23aa753b
   14004b12c:	xor    eax,0x4894918
   14004b131:	add    al,0x3a
   14004b133:	scas   al,BYTE PTR es:[rdi]
   14004b134:	rex.RXB
   14004b135:	rex.WX
   14004b136:	es add al,0x11
   14004b139:	sub    DWORD PTR [rdi],edi
   14004b13b:	cmp    BYTE PTR [rbx+0x46],al
   14004b13e:	sbb    al,BYTE PTR cs:[rcx+rbp*1-0x73]
   14004b143:	mov    eax,DWORD PTR [rdx+0x42]
   14004b146:	cmp    eax,0x53631959
   14004b14b:	sub    al,0x58
   14004b14d:	rex.X sub eax,0x8b711919
   14004b153:	rex.X
   14004b154:	rex.X (bad) 
   14004b156:	pop    r10
   14004b158:	pop    rdx
   14004b159:	sub    DWORD PTR [rbp+0x4242426e],ecx
   14004b15f:	rex.X and eax,0x317b421d
   14004b165:	rex.X
   14004b166:	rex.X
   14004b167:	rex.X
   14004b168:	rex.X
   14004b169:	rex.X
   14004b16a:	rex.X
   14004b16b:	rex.X
   14004b16c:	rex.X mov ebx,0x293b3b2e
   14004b172:	lea    ebp,[rsi+0x42]
   14004b175:	rex.X
   14004b176:	rex.X
   14004b177:	rex.X pop rdi
   14004b179:	jb     0x14004b0fd
   14004b17b:	or     al,0x13
   14004b17d:	rex.X
   14004b17e:	rex.X
   14004b17f:	rex.X
   14004b180:	rex.X
   14004b181:	rex.X
   14004b182:	rex.X
   14004b183:	rex.X
   14004b184:	rex.X mov ebx,0x293b3b2e
   14004b18a:	lea    ebp,[rsi+0x42]
   14004b18d:	rex.X
   14004b18e:	rex.X
   14004b18f:	rex.X
   14004b190:	rex.X xchg ebp,eax
   14004b192:	push   rdx
   14004b193:	adc    dh,BYTE PTR [rbx+0x42424242]
   14004b199:	rex.X
   14004b19a:	rex.X
   14004b19b:	rex.X
   14004b19c:	rex.X mov ebx,0x293b3b2e
   14004b1a2:	lea    ebp,[rsi+0x42]
   14004b1a5:	rex.X
   14004b1a6:	rex.X jl 0x14004b13e
   14004b1a9:	test   BYTE PTR [rcx],ch
   14004b1ab:	andnps xmm0,XMMWORD PTR [rsi]
   14004b1ae:	jnp    0x14004b138
   14004b1b0:	sbb    eax,0x42424242
   14004b1b5:	mov    ebx,0x29443b41
   14004b1ba:	lea    ebp,[rsi+0x42]
   14004b1bd:	rex.X
   14004b1be:	rex.X mov edx,0x6a1f7499
   14004b1c4:	sahf   
   14004b1c5:	xchg   ebx,eax
   14004b1c6:	xchg   BYTE PTR [rdi],bh
   14004b1c8:	xor    al,0x51
   14004b1ca:	rex.X
   14004b1cb:	rex.X
   14004b1cc:	rex.X mov ebx,0x753b5a41
   14004b1d2:	lea    ebp,[rsi+0x42]
   14004b1d5:	rex.X
   14004b1d6:	rex.X
   14004b1d7:	rex.X
   14004b1d8:	rex.X push 0xffffffffbc451042
   14004b1de:	push   rbp
   14004b1df:	mov    cl,BYTE PTR [rax+rdx*1+0x42]
   14004b1e3:	rex.X
   14004b1e4:	rex.X mov ebx,0xadbd1a52
   14004b1ea:	lea    ebp,[rsi+0x42]
   14004b1ed:	rex.X
   14004b1ee:	rex.X
   14004b1ef:	rex.X
   14004b1f0:	rex.X
   14004b1f1:	rex.X
   14004b1f2:	rex.X cmp eax,0xb51c4c32
   14004b1f8:	mov    eax,DWORD PTR [rdx+0x42]
   14004b1fb:	rex.X
   14004b1fc:	rex.X mov ebx,0x67bdbd15
   14004b202:	stos   BYTE PTR es:[rdi],al
   14004b203:	push   rbx
   14004b204:	rex.X
   14004b205:	rex.X
   14004b206:	rex.X
   14004b207:	rex.X
   14004b208:	rex.X
   14004b209:	rex.X
   14004b20a:	rex.X jnp 0x14004b220
   14004b20d:	rex.X pop rsi
   14004b20f:	imul   ebx,DWORD PTR [rdi+0x42],0x3c424242
   14004b216:	add    BYTE PTR [rbp+0x6556bdbd],bh
   14004b21c:	push   0x42424242
   14004b221:	rex.X
   14004b222:	rex.X sub al,0x3
   14004b225:	rex.X
   14004b226:	rex.X
   14004b227:	rex.X
   14004b228:	rex.X
   14004b229:	rex.X
   14004b22a:	rex.X
   14004b22b:	rex.X xor ebp,DWORD PTR [rdx-0x43]
   14004b22f:	mov    ebp,0xadbdbdbd
   14004b234:	(bad)  
   14004b235:	(bad)  
   14004b236:	sub    al,0x4c
   14004b238:	outs   dx,BYTE PTR ds:[rsi]
   14004b239:	xor    r9,QWORD PTR [rbx+0x6]
   14004b23d:	jo     0x14004b28b
   14004b23f:	(bad)  
   14004b240:	(bad)  
   14004b241:	and    eax,0xbda8784c
   14004b246:	mov    ebp,0xbdbdbdbd
   14004b24b:	mov    ebp,0x656489ad
   14004b250:	rex.WXB
   14004b251:	rex.WXB
   14004b252:	rex.WXB sub BYTE PTR [r10],cl
   14004b255:	jle    0x14004b20d
   14004b257:	sub    dl,BYTE PTR [rsi-0x4257e8f0]
   14004b25d:	mov    ebp,0xbdbdbdbd
   14004b262:	mov    ebp,0x623bbdbd
   14004b267:	imul   esi,DWORD PTR [rax],0x30
   14004b26a:	popf   
   14004b26b:	xor    BYTE PTR [rax+0x1d],dh
   14004b26e:	xor    ecx,DWORD PTR [rsi+0x2c]
   14004b271:	push   rsp
   14004b272:	rex mov ebp,0xbdbdbdbd
   14004b278:	mov    ebp,0xbdbdbdbd
   14004b27d:	mov    ebp,0x4d0b491a
   14004b282:	mov    cl,0x83
   14004b284:	mov    al,0x39
   14004b286:	(bad)  
   14004b287:	sub    bh,BYTE PTR [rdx+rbx*1-0x42424243]
   14004b28e:	mov    ebp,0xbdbdbdbd
   14004b293:	mov    ebp,0xbdbdbdbd
   14004b298:	rex.R
   14004b299:	test   BYTE PTR [rax+0x44207a3c],dl
   14004b2a0:	mov    ebp,0xbdbdbdbd
   14004b2a5:	mov    ebp,0xffbdbd
   14004b2aa:	(bad)  
   14004b2ab:	(bad)  
   14004b2ac:	cld    
   14004b2ad:	add    BYTE PTR [rdi],bh
   14004b2af:	(bad)  
   14004b2b0:	clc    
   14004b2b1:	add    BYTE PTR [rdi],bl
   14004b2b3:	cld    
   14004b2b4:	lock add BYTE PTR [rdi],cl
   14004b2b7:	clc    
   14004b2b8:	loopne 0x14004b2ba
   14004b2ba:	(bad)  
   14004b2bb:	lock rol BYTE PTR [rax],0x3
   14004b2bf:	loopne 0x14004b241
   14004b2c1:	add    BYTE PTR [rcx],al
   14004b2c3:	rol    BYTE PTR [rax+0x800100],0x0
   14004b2ca:	add    BYTE PTR [rax+0x0],al
	...
   14004b2e8:	add    BYTE PTR [rax],0x1
   14004b2eb:	add    BYTE PTR [rax-0x3f7fff00],al
   14004b2f1:	add    BYTE PTR [rbx],al
   14004b2f3:	and    al,0x0
   14004b2f6:	(bad)  
   14004b2f7:	shl    al,0x0
   14004b2fa:	pavgb  mm7,mm0
   14004b2fd:	add    BYTE PTR [rdi],bl
   14004b2ff:	lock cld 
   14004b301:	add    BYTE PTR [rdi],bh
   14004b303:	clc    
   14004b304:	inc    DWORD PTR [rax]
   14004b306:	(bad)  
   14004b307:	cld    
   14004b308:	sub    BYTE PTR [rax],al
   14004b30a:	add    BYTE PTR [rax],al
   14004b30c:	adc    BYTE PTR [rax],al
   14004b30e:	add    BYTE PTR [rax],al
   14004b310:	and    BYTE PTR [rax],al
   14004b312:	add    BYTE PTR [rax],al
   14004b314:	add    DWORD PTR [rax],eax
   14004b316:	or     BYTE PTR [rax],al
	...
   14004b328:	add    BYTE PTR [rcx],al
   14004b32a:	add    BYTE PTR [rax],al
   14004b32c:	add    BYTE PTR [rax],al
   14004b32e:	add    BYTE PTR [rax],al
   14004b330:	(bad)  
   14004b331:	es (bad) 
   14004b333:	add    BYTE PTR [rsi-0x25ff796a],dh
   14004b339:	(bad)  
   14004b33a:	mov    BYTE PTR [rax],0xee
   14004b33d:	(bad)  
   14004b33e:	loop   0x14004b340
   14004b340:	xchg   edx,eax
   14004b341:	(bad)  
   14004b342:	rex.WRX add sil,r12b
   14004b345:	(bad)  
   14004b347:	add    dh,dh
   14004b349:	div    dh
   14004b34b:	add    dl,al
   14004b34d:	scas   al,BYTE PTR es:[rdi]
   14004b34e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b34f:	add    dl,ah
   14004b351:	(bad)  
   14004b352:	rol    BYTE PTR [rax],cl
   14004b354:	push   0x32
   14004b356:	(bad)  
   14004b357:	add    BYTE PTR [rdx-0x1ff9182],ah
   14004b35d:	(bad)  
   14004b35e:	cli    
   14004b35f:	add    BYTE PTR [rsi-0x1dff695e],bh
   14004b365:	ror    dh,cl
   14004b367:	add    dh,dh
   14004b369:	repnz out dx,al
   14004b36b:	add    dh,cl
   14004b36d:	mov    edx,0xeaf200b2
   14004b372:	(bad)  
   14004b373:	add    dl,bh
   14004b375:	cli    
   14004b376:	test   BYTE PTR [rax],0x6e
   14004b379:	cmp    ah,BYTE PTR [rdx]
   14004b37b:	add    BYTE PTR [rsi+0x6e008692],ch
   14004b381:	adc    al,BYTE PTR cs:[rax]
   14004b384:	fmulp  st(6),st
   14004b386:	retf   0xc600
   14004b389:	mov    dh,0xae
   14004b38b:	add    dl,ah
   14004b38d:	fcmovbe st,st(6)
   14004b38f:	add    dl,al
   14004b391:	stos   BYTE PTR es:[rdi],al
   14004b392:	sahf   
   14004b393:	add    dl,ah
   14004b395:	(bad)  
   14004b396:	mov    BYTE PTR [rax],0xa6
   14004b399:	jp     0x14004b405
   14004b39b:	add    dh,ch
   14004b39d:	out    0xe6,al
   14004b39f:	add    dh,al
   14004b3a1:	mov    dl,0xa6
   14004b3a3:	add    BYTE PTR [rsi+0x36],ch
   14004b3a6:	(bad)  
   14004b3a7:	add    BYTE PTR [rsi-0x3dff897a],ch
   14004b3ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b3ae:	sahf   
   14004b3af:	add    dl,dh
   14004b3b1:	out    dx,al
   14004b3b2:	out    dx,al
   14004b3b3:	add    dl,bh
   14004b3b5:	cli    
   14004b3b6:	cli    
   14004b3b7:	add    BYTE PTR [rsi+0x2e],ah
   14004b3ba:	sbb    al,BYTE PTR [rax]
   14004b3bc:	mov    edx,0xde00929e
   14004b3c1:	(bad)  
   14004b3c2:	mov    BYTE PTR [rax],0xee
   14004b3c5:	(bad)  
   14004b3c6:	out    0x0,al
   14004b3c8:	(bad)  
   14004b3c9:	push   si
   14004b3cb:	add    dl,ch
   14004b3cd:	loop   0x14004b3ad
   14004b3cf:	add    dl,bh
   14004b3d1:	div    dh
   14004b3d3:	add    dl,ah
   14004b3d5:	(bad)  
   14004b3d6:	(bad)  
   14004b3d7:	add    BYTE PTR [rsi-0x1ff9182],ah
   14004b3dd:	(bad)  
   14004b3de:	inc    BYTE PTR [rax]
   14004b3e0:	mov    esi,0xde009aa6
   14004b3e5:	rcl    dl,cl
   14004b3e7:	add    dh,dl
   14004b3e9:	ret    0xbe
   14004b3ec:	outs   dx,BYTE PTR ds:[rsi]
   14004b3ed:	cmp    ah,BYTE PTR [rsi]
   14004b3ef:	add    BYTE PTR [rsi+0x66008692],dh
   14004b3f5:	cs (bad) 
   14004b3f7:	add    dh,ah
   14004b3f9:	fcmovbe st,st(6)
   14004b3fb:	add    dl,cl
   14004b3fd:	mov    dl,0xaa
   14004b3ff:	add    BYTE PTR [rsi+0x36],ch
   14004b402:	and    al,BYTE PTR [rax]
   14004b404:	imul   dh
   14004b406:	out    dx,al
   14004b407:	add    dh,bh
   14004b409:	cli    
   14004b40a:	cli    
	...
   14004b72f:	add    BYTE PTR [rbx],ch
   14004b731:	sub    ebp,DWORD PTR [rbx]
   14004b733:	sub    ebp,DWORD PTR [rbx]
   14004b735:	sub    ebp,DWORD PTR [rbx]
   14004b737:	sub    ebp,DWORD PTR [rbx]
   14004b739:	sub    ebp,DWORD PTR [rbx]
   14004b73b:	sub    ebp,DWORD PTR [rbx]
   14004b73d:	sub    ebp,DWORD PTR [rbx]
   14004b73f:	sub    ebp,DWORD PTR [rbx]
   14004b741:	or     DWORD PTR [rdx],edx
   14004b743:	(bad)  
   14004b744:	(bad)  
   14004b745:	adc    dl,BYTE PTR [rdx]
   14004b747:	adc    dl,BYTE PTR [rdx]
   14004b749:	adc    ch,BYTE PTR [rdi]
   14004b74b:	(bad)  
   14004b74c:	adc    cl,BYTE PTR [rcx]
   14004b74e:	or     DWORD PTR [rbx],ebp
   14004b750:	sub    edx,DWORD PTR [rbx]
   14004b752:	adc    edx,DWORD PTR [rbx]
   14004b754:	adc    edx,DWORD PTR [rbx]
   14004b756:	adc    eax,DWORD PTR [rdx]
   14004b758:	add    al,BYTE PTR [rdx]
   14004b75a:	adc    edx,DWORD PTR [rbx]
   14004b75c:	adc    edx,DWORD PTR [rbx]
   14004b75e:	adc    ebp,DWORD PTR [rbx]
   14004b760:	sub    ecx,DWORD PTR [rcx]
   14004b762:	or     DWORD PTR [rcx],ecx
   14004b764:	sbb    eax,0x9090934
   14004b769:	or     DWORD PTR [rdx],esp
   14004b76b:	or     DWORD PTR [rcx],ecx
   14004b76d:	or     DWORD PTR [rcx],ecx
   14004b76f:	sub    ebp,DWORD PTR [rbx]
   14004b771:	(bad)  
   14004b772:	add    dh,BYTE PTR [rbx]
   14004b774:	sbb    BYTE PTR [rdi],cl
   14004b776:	sub    eax,0x2c2e0906
   14004b77b:	(bad)  
   14004b77c:	movhps QWORD PTR [rsi],xmm0
   14004b77f:	sub    ebp,DWORD PTR [rbx]
   14004b781:	sub    ebp,DWORD PTR [rbx]
   14004b783:	sub    eax,DWORD PTR [rsi]
   14004b785:	(bad)  
   14004b786:	(bad)  
   14004b787:	(bad)  
   14004b788:	or     DWORD PTR [rbx],ebp
   14004b78a:	sub    ebp,DWORD PTR [rbx]
   14004b78c:	sub    ebp,DWORD PTR [rbx]
   14004b78e:	sub    ebp,DWORD PTR [rbx]
   14004b790:	sub    ebp,DWORD PTR [rbx]
   14004b792:	sub    ebp,DWORD PTR [rbx]
   14004b794:	(bad)  
   14004b795:	adc    al,0x2e
   14004b797:	or     DWORD PTR cs:[rbx],ebp
   14004b79a:	sub    ebp,DWORD PTR [rbx]
   14004b79c:	sub    ebp,DWORD PTR [rbx]
   14004b79e:	and    DWORD PTR [rbx],ebp
   14004b7a0:	sub    ebp,DWORD PTR [rbx]
   14004b7a2:	sub    ebx,DWORD PTR [rbx]
   14004b7a4:	(bad)  
   14004b7a5:	(bad)  
   14004b7a6:	adc    al,0x26
   14004b7a8:	or     DWORD PTR [rsi],ecx
   14004b7aa:	sbb    esp,DWORD PTR [rax]
   14004b7ac:	sub    ebp,DWORD PTR [rbx]
   14004b7ae:	and    DWORD PTR [rbx],ebp
   14004b7b0:	sub    ebp,DWORD PTR [rbx]
   14004b7b2:	sub    esp,DWORD PTR [rax]
   14004b7b4:	es adc al,0x14
   14004b7b7:	adc    al,0x14
   14004b7b9:	sub    ah,BYTE PTR [rax]
   14004b7bb:	sbb    ebx,DWORD PTR [rbx]
   14004b7bd:	sub    esp,DWORD PTR [rcx]
   14004b7bf:	sub    ebp,DWORD PTR [rbx]
   14004b7c1:	sub    ebp,DWORD PTR [rbx]
   14004b7c3:	sub    ebx,DWORD PTR [rbx]
   14004b7c5:	add    eax,0x14140710
   14004b7ca:	adc    al,0x14
   14004b7cc:	sub    ecx,DWORD PTR es:[rbx]
   14004b7cf:	sub    ebp,DWORD PTR [rbx]
   14004b7d1:	sub    ebp,DWORD PTR [rbx]
   14004b7d3:	sub    ebp,DWORD PTR [rbx]
   14004b7d5:	sub    ebp,DWORD PTR [rbx]
   14004b7d7:	or     BYTE PTR [rcx],cl
   14004b7d9:	or     al,0x14
   14004b7db:	(bad)  
   14004b7dc:	sub    ebp,DWORD PTR [rbx]
   14004b7de:	sub    ebp,DWORD PTR [rbx]
   14004b7e0:	sub    ecx,DWORD PTR [rbx]
   14004b7e2:	sub    ebp,DWORD PTR [rbx]
   14004b7e4:	sub    ebp,DWORD PTR [rbx]
   14004b7e6:	sub    edx,DWORD PTR [rdi]
   14004b7e8:	or     DWORD PTR [rip+0x2b2b1416],esp        # 0x16b2fcc04
   14004b7ee:	sub    BYTE PTR [rbx],ch
   14004b7f0:	sub    esi,DWORD PTR [rax]
   14004b7f2:	add    al,BYTE PTR [rsi]
   14004b7f4:	sub    edx,DWORD PTR [rcx]
   14004b7f6:	add    esi,DWORD PTR [rbx]
   14004b7f8:	or     DWORD PTR [rsi],eax
   14004b7fa:	and    DWORD PTR [rcx],edx
   14004b7fc:	sub    ecx,DWORD PTR [rax]
   14004b7fe:	sbb    ch,BYTE PTR [rbx]
   14004b800:	sub    ecx,DWORD PTR [rcx]
   14004b802:	or     DWORD PTR [rdx],ecx
   14004b804:	sbb    al,0x23
   14004b806:	add    DWORD PTR [rax],eax
   14004b808:	or     DWORD PTR [rcx],ebx
   14004b80a:	or     eax,0x9041527
   14004b80f:	sub    ebp,DWORD PTR [rbx]
   14004b811:	or     DWORD PTR [rcx],ecx
   14004b813:	xor    DWORD PTR [rcx],ecx
   14004b815:	or     DWORD PTR [rcx],ecx
   14004b817:	or     DWORD PTR [rcx],ecx
   14004b819:	or     DWORD PTR [rcx],ecx
   14004b81b:	or     DWORD PTR [rcx],ecx
   14004b81d:	or     DWORD PTR [rcx],ecx
   14004b81f:	sub    ebp,DWORD PTR [rbx]
   14004b821:	sub    ebp,DWORD PTR [rbx]
   14004b823:	sub    ebp,DWORD PTR [rbx]
   14004b825:	sub    ebp,DWORD PTR [rbx]
   14004b827:	sub    ebp,DWORD PTR [rbx]
   14004b829:	sub    ebp,DWORD PTR [rbx]
   14004b82b:	sub    ebp,DWORD PTR [rbx]
   14004b82d:	sub    ebp,DWORD PTR [rbx]
   14004b82f:	sub    eax,DWORD PTR [rax]
   14004b831:	add    bh,bh
   14004b833:	inc    DWORD PTR [rax]
	...
   14004b86d:	add    BYTE PTR [rax],al
   14004b86f:	add    BYTE PTR [rcx+0xd474e50],cl
   14004b875:	or     bl,BYTE PTR [rdx]
   14004b877:	or     al,BYTE PTR [rax]
   14004b879:	add    BYTE PTR [rax],al
   14004b87b:	or     eax,0x52444849
   14004b880:	add    BYTE PTR [rax],al
   14004b882:	add    DWORD PTR [rax],eax
   14004b884:	add    BYTE PTR [rax],al
   14004b886:	add    DWORD PTR [rax],eax
   14004b888:	or     BYTE PTR [rsi],al
   14004b88a:	add    BYTE PTR [rax],al
   14004b88c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14004b890:	data16 add BYTE PTR [rax],al
   14004b893:	and    BYTE PTR [rax],al
   14004b895:	rex.WB
   14004b896:	rex.R
   14004b897:	push   r12
   14004b899:	js     0x14004b837
   14004b89b:	in     al,dx
   14004b89c:	mov    ebp,0x471c9c7b
   14004b8a1:	jge    0x14004b8d2
   14004b8a3:	cli    
   14004b8a4:	lods   eax,DWORD PTR ds:[rsi]
   14004b8a5:	jns    0x14004b876
   14004b8a7:	in     al,dx
   14004b8a8:	int3   
   14004b8a9:	in     al,dx
   14004b8aa:	pop    rbx
   14004b8ab:	mov    ebx,0x2c96495a
   14004b8b0:	(bad)  
   14004b8b1:	push   rsi
   14004b8b2:	cvtdq2ps xmm2,XMMWORD PTR [rsi+0x632d8c84]
   14004b8b9:	add    esi,DWORD PTR [rsi]
   14004b8bb:	ss mov dh,0x1
   14004b8be:	mov    edi,0x1d80d8c0
   14004b8c3:	sar    BYTE PTR [rax+0x73],0x9
   14004b8c7:	cmp    edi,esi
   14004b8c9:	adc    al,BYTE PTR [rbx+0x72]
   14004b8cc:	iret   
   14004b8cd:	or     eax,0x4e21ee7
   14004b8d2:	repnz mov ecx,0x3830709c
   14004b8d8:	cmp    DWORD PTR [rdi-0x1f268468],eax
   14004b8de:	in     al,0x1c
   14004b8e0:	fwait
   14004b8e1:	(bad)  
   14004b8e2:	rex.WX add sil,BYTE PTR [rcx+0x6c80c40c]
   14004b8e9:	ret    
   14004b8ea:	add    eax,0x4b08db24
   14004b8ef:	or     BYTE PTR [rdi],bh
   14004b8f1:	nop
   14004b8f2:	lock rex.WXB xchg r14,rax
   14004b8f5:	mov    ebp,0x98fb9eb2
   14004b8fa:	fstp   QWORD PTR [rcx-0x62b33383]
   14004b900:	(bad)  
   14004b901:	mov    edx,0x8f57eabb
   14004b906:	sahf   
   14004b907:	(bad)  
   14004b908:	out    dx,al
   14004b909:	lods   al,BYTE PTR ds:[rsi]
   14004b90a:	jbe    0x14004b963
   14004b90c:	fistp  DWORD PTR [rdi+0x7d]
   14004b90f:	mov    ah,0xd3
   14004b911:	pop    rbp
   14004b912:	push   rbp
   14004b913:	pop    rbp
   14004b914:	pop    rbp
   14004b915:	fstp   QWORD PTR [rbp-0x21]
   14004b918:	fild   QWORD PTR [rbx+0x219abaa]
   14004b91e:	sub    al,0x58
   14004b920:	hlt    
   14004b921:	ins    BYTE PTR es:[rdi],dx
   14004b922:	call   0x10f3c2a92
   14004b927:	add    al,0xd0
   14004b929:	add    ah,BYTE PTR [rax+0x35]
   14004b92c:	xor    bl,0xdc
   14004b92f:	mov    ah,0x2d
   14004b931:	add    BYTE PTR [rsi],ch
   14004b933:	ins    DWORD PTR es:[rdi],dx
   14004b934:	shr    BYTE PTR [rcx-0x489ff182],1
   14004b93a:	mov    ebx,0x97802cfd
   14004b93f:	add    DWORD PTR [rcx+rax*1],ecx
   14004b942:	js     0x14004b949
   14004b944:	add    BYTE PTR [rsi],al
   14004b946:	div    ch
   14004b948:	sysexit 
   14004b94a:	call   0x17152ba8b
   14004b94f:	fcomp  DWORD PTR [rdi+rsi*1+0x20]
   14004b953:	rex
   14004b954:	gs hlt 
   14004b956:	ins    BYTE PTR es:[rdi],dx
   14004b957:	call   0x1219eb9bf
   14004b95c:	nop
   14004b95d:	jl     0x14004b984
   14004b95f:	xor    BYTE PTR [rdi+0x0],0xb8
   14004b963:	leave  
   14004b964:	fstp   QWORD PTR [rsi-0x1ff7c7b1]
   14004b96a:	mov    ebx,0x6eea7e00
   14004b96f:	mov    edi,0x60786002
   14004b974:	pop    rdi
   14004b975:	(bad)  
   14004b976:	lahf   
   14004b977:	rcl    DWORD PTR [rsi+0x5],cl
   14004b97a:	test   al,0x88
   14004b97c:	add    spl,cl
   14004b97f:	and    edx,DWORD PTR [rax]
   14004b981:	mov    dl,0x6f
   14004b983:	add    dh,BYTE PTR [rax+0x11]
   14004b986:	xor    bh,0xa2
   14004b989:	jno    0x14004b9e5
   14004b98b:	jl     0x14004b93b
   14004b98d:	lock jae 0x14004b990
   14004b990:	fild   WORD PTR [rdi]
   14004b992:	lock adc al,0x80
   14004b995:	cmp    eax,0xbcc28408
   14004b99a:	rex.X and BYTE PTR [rax],al
   14004b99d:	out    0x10,al
   14004b99f:	cs loope 0x14004b95d
   14004b9a2:	loope  0x14004b934
   14004b9a4:	std    
   14004b9a5:	rex.XB add BYTE PTR [r14-0x63],bpl
   14004b9a9:	fist   DWORD PTR [rsi]
   14004b9ab:	popf   
   14004b9ac:	xor    bh,BYTE PTR [rsp+rax*1]
   14004b9af:	loopne 0x14004b950
   14004b9b1:	loopne 0x14004b9bb
   14004b9b3:	test   DWORD PTR [rdi],esi
   14004b9b5:	add    eax,DWORD PTR [rcx+0x4087730]
   14004b9bb:	shr    BYTE PTR [rcx],0x86
   14004b9be:	jmp    0x14004b977
   14004b9c0:	mov    edi,0xf090a713
   14004b9c5:	leave  
   14004b9c6:	xor    r12,QWORD PTR [rdx]
   14004b9c9:	shr    DWORD PTR [rax+0x5d],1
   14004b9cc:	(bad)  
   14004b9cd:	adc    al,0xa7
   14004b9cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b9d0:	push   rax
   14004b9d1:	enter  0xcf0d,0x52
   14004b9d5:	mov    ecx,DWORD PTR [rax+rdi*2]
   14004b9d8:	add    ah,cl
   14004b9da:	(bad)  
   14004b9db:	rex.B cmp al,0xe1
   14004b9de:	(bad)  
   14004b9df:	and    dl,BYTE PTR [rax]
   14004b9e1:	add    BYTE PTR [rbx-0x6034a8f4],dh
   14004b9e7:	add    eax,0x7f0066e0
   14004b9ec:	add    BYTE PTR [rsi],0xfa
   14004b9ef:	out    dx,al
   14004b9f0:	jmp    0xe388f08b
   14004b9f5:	push   rcx
   14004b9f6:	and    al,0xd3
   14004b9f8:	int    0xce
   14004b9fa:	jle    0x14004ba67
   14004b9fc:	cmp    eax,DWORD PTR [rax]
   14004b9fe:	and    BYTE PTR [rcx*4-0x69966ade],bl
   14004ba05:	add    eax,0x1998fe99
   14004ba0a:	add    BYTE PTR [rsi],ch
   14004ba0c:	ss cdq 
   14004ba0e:	fisttp DWORD PTR [rip+0x3114d738]        # 0x17119914c
   14004ba14:	fstp   DWORD PTR [rdi+0x5931e428]
   14004ba1a:	enter  0x3,0x46
   14004ba1e:	(bad)  
   14004ba1f:	rex.WRXB add BYTE PTR [r8],r8b
   14004ba22:	or     ah,BYTE PTR [rbx+0x154d28c3]
   14004ba28:	xor    DWORD PTR [rdx],edi
   14004ba2a:	je     0x14004b9ce
   14004ba2c:	xor    DWORD PTR [rdi],edx
   14004ba2e:	in     al,0xe0
   14004ba30:	and    BYTE PTR [rax+0x17f8006f],al
   14004ba36:	add    BYTE PTR [rdi],ch
   14004ba38:	add    eax,0x22ecc1d6
   14004ba3d:	adc    BYTE PTR [rax],al
   14004ba3f:	mov    bl,0x0
   14004ba41:	(bad)  
   14004ba42:	hlt    
   14004ba43:	pop    rdi
   14004ba44:	(bad)  
   14004ba45:	rex.WB pop r13
   14004ba47:	loope  0x14004ba91
   14004ba49:	add    al,0x89
   14004ba4b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ba4c:	or     al,0x12
   14004ba4e:	jmp    0x1648e1c5f
   14004ba53:	xchg   edx,eax
   14004ba54:	jmp    0xecedcc85
   14004ba59:	(bad)  
   14004ba5a:	call   0x186433beb
   14004ba5f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ba60:	inc    BYTE PTR [rcx]
   14004ba62:	add    BYTE PTR [rsp+rbp*8-0x776add32],ch
   14004ba69:	loopne 0x14004b9f7
   14004ba6b:	out    dx,al
   14004ba6c:	sub    al,0x52
   14004ba6e:	icebp  
   14004ba6f:	or     BYTE PTR [rax],al
   14004ba71:	(bad)  
   14004ba72:	int    0xca
   14004ba74:	ss xchg edi,eax
   14004ba76:	cld    
   14004ba77:	push   rax
   14004ba78:	test   BYTE PTR [rax-0x6313e4dd],al
   14004ba7e:	jnp    0x14004ba6d
   14004ba80:	int    0x11
   14004ba82:	in     al,0x27
   14004ba84:	mov    al,BYTE PTR [rax]
   14004ba86:	and    bh,0x5f
   14004ba89:	jno    0x14004bad3
   14004ba8b:	(bad)  
   14004ba8c:	cld    
   14004ba8d:	retf   
   14004ba8e:	mov    DWORD PTR [rcx],0x14e2a500
   14004ba94:	or     bh,BYTE PTR [rcx+0x47461411]
   14004ba9a:	xor    BYTE PTR [rip+0x3461405e],dh        # 0x17465fafe
   14004baa0:	xchg   ecx,esi
   14004baa2:	mov    cl,0x1c
   14004baa4:	(bad)
   14004baa8:	cs (bad) 
   14004baaa:	add    BYTE PTR [rsi],bh
   14004baac:	xchg   DWORD PTR [rax+0x18],eax
   14004baaf:	int3   
   14004bab0:	sbb    al,BYTE PTR [rdx]
   14004bab2:	add    eax,edx
   14004bab4:	rex hlt 
   14004bab6:	ins    BYTE PTR es:[rdi],dx
   14004bab7:	call   0x1a3e4c517
   14004babc:	cwde   
   14004babd:	add    ecx,ebp
   14004babf:	adc    ecx,DWORD PTR [rbp+0x69]
   14004bac2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bac3:	mov    dl,0x2d
   14004bac5:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bac7:	xor    ebp,DWORD PTR [rax+0x6a]
   14004baca:	outs   dx,BYTE PTR ds:[rsi]
   14004bacb:	rex.RB sub al,0x91
   14004bace:	je     0x14004bb43
   14004bad0:	and    al,0x5b
   14004bad2:	sbb    DWORD PTR [rcx],esp
   14004bad4:	cmp    BYTE PTR [rbx],ah
   14004bad6:	fidivr DWORD PTR [rbp+0x561b6577]
   14004badc:	cs int 0xa2
   14004badf:	movabs ds:0x2ba33833ba338525,eax
   14004bae8:	adc    DWORD PTR [rdx+riz*1+0x2],0x41
   14004baed:	outs   dx,DWORD PTR ds:[rsi]
   14004baee:	repnz mov ah,0x99
   14004baf1:	es xor al,0x38
   14004baf4:	mov    BYTE PTR [rcx+0x3b0608a0],ah
   14004bafa:	sbb    BYTE PTR [rax],bl
   14004bafc:	mov    eax,0xf0183327
   14004bb01:	ret    0x272b
   14004bb04:	jo     0x14004bb72
   14004bb06:	xor    BYTE PTR [rdi+0x3c058363],cl
   14004bb0c:	not    edx
   14004bb0e:	xor    DWORD PTR [rsp+rdi*1],ebx
   14004bb11:	cmp    al,0x8c
   14004bb13:	mov    cl,0x42
   14004bb15:	adc    DWORD PTR [rbx+0x13],edx
   14004bb18:	add    eax,0x620d0e8c
   14004bb1d:	jl     0x14004bb4b
   14004bb1f:	xchg   esp,edi
   14004bb21:	lock and dh,al
   14004bb24:	mov    DWORD PTR [rsi-0x59],0x47006b7b
   14004bb2b:	sbb    ah,bh
   14004bb2d:	ret    
   14004bb2e:	sar    BYTE PTR [rsi-0x56cc3c02],0x24
   14004bb35:	add    BYTE PTR [rax+riz*1+0x0],0x66
   14004bb3a:	mov    BYTE PTR [rsi+0x117d0d],bl
   14004bb40:	out    dx,eax
   14004bb41:	add    esi,DWORD PTR [rax+0x2f]
   14004bb44:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bb45:	(bad)  
   14004bb46:	faddp  st(7),st
   14004bb48:	push   rbx
   14004bb49:	rex.WRB
   14004bb4a:	rex.W mov dil,0x76
   14004bb4d:	and    BYTE PTR [rbp+0x7353466d],dl
   14004bb53:	stos   DWORD PTR es:[rdi],eax
   14004bb54:	xchg   ebx,eax
   14004bb55:	call   0x14c2e4c8c
   14004bb5a:	and    al,0xc4
   14004bb5c:	sub    dl,BYTE PTR [ecx]
   14004bb60:	ret    
   14004bb61:	(bad)  
   14004bb62:	push   rbp
   14004bb63:	in     eax,dx
   14004bb64:	pop    rax
   14004bb65:	mov    bl,0xaa
   14004bb67:	or     eax,0xd1677467
   14004bb6c:	mov    ebx,0xa4b21daa
   14004bb71:	cld    
   14004bb72:	and    edi,DWORD PTR [rax]
   14004bb74:	int    0x84
   14004bb76:	shr    DWORD PTR [rdi],1
   14004bb78:	retf   
   14004bb79:	enter  0xe8ea,0x69
   14004bb7d:	xor    eax,0x14b43a90
   14004bb82:	pop    rbp
   14004bb83:	sbb    eax,0x197f4633
   14004bb88:	mov    cs,WORD PTR [rdi]
   14004bb8a:	out    0xf1,al
   14004bb8c:	cld    
   14004bb8d:	retf   
   14004bb8e:	(bad)  
   14004bb8f:	icebp  
   14004bb90:	fmul   st(3),st
   14004bb92:	(bad)  
   14004bb93:	lock fmul QWORD PTR [rbx-0x39]
   14004bb97:	jo     0x14004bc0d
   14004bb99:	jo     0x14004bba7
   14004bb9b:	loopne 0x14004bbb9
   14004bb9d:	movsxd esp,DWORD PTR [rbx]
   14004bb9f:	rex.XB enter 0xf0f,0x61
   14004bba4:	je     0x14004bb96
   14004bba6:	cmp    BYTE PTR [rsi],ah
   14004bba8:	repnz movsxd edx,DWORD PTR [rip+0xe0f8fef]        # 0x14e144b9e
   14004bbaf:	add    bh,BYTE PTR [rax+0x6f7c00b]
   14004bbb5:	div    ch
   14004bbb7:	iret   
   14004bbb8:	fadd   st,st(4)
   14004bbba:	pop    rax
   14004bbbb:	int3   
   14004bbbc:	or     BYTE PTR [rax+rax*8],al
   14004bbbf:	xor    al,0xd1
   14004bbc1:	mov    bl,0xa1
   14004bbc3:	out    dx,eax
   14004bbc4:	ins    BYTE PTR es:[rdi],dx
   14004bbc5:	add    bh,bh
   14004bbc7:	add    DWORD PTR [rsi+0x47],ecx
   14004bbca:	lods   al,BYTE PTR ds:[rsi]
   14004bbcb:	sbb    DWORD PTR [rcx+0x4cc91c58],edx
   14004bbd1:	(bad)  
   14004bbd2:	rex.WRB sub rax,0x5a65486d
   14004bbd8:	adc    BYTE PTR [rsi+0x14c60044],cl
   14004bbde:	rex.WRB (bad) 
   14004bbe0:	or     BYTE PTR [rbx-0x532866d8],dl
   14004bbe6:	(bad)  
   14004bbe7:	shl    dh,0x35
   14004bbea:	fstp   QWORD PTR [rax-0x4d]
   14004bbed:	stos   BYTE PTR es:[rdi],al
   14004bbee:	sbb    eax,0x64677467
   14004bbf3:	jns    0x14004bc6e
   14004bbf5:	movabs al,ds:0x51588839d2573c72
   14004bbfe:	(bad)  
   14004bbff:	fs push rax
   14004bc01:	fsubr  st,st(4)
   14004bc03:	jns    0x14004bc1a
   14004bc05:	push   rdx
   14004bc06:	xor    BYTE PTR [rax],dh
   14004bc08:	xchg   ebx,eax
   14004bc09:	in     eax,dx
   14004bc0a:	and    BYTE PTR [rdi+rsi*8-0x1291cf02],al
   14004bc11:	push   rax
   14004bc12:	or     al,0xce
   14004bc14:	cmc    
   14004bc15:	sbb    eax,0xe786393d
   14004bc1a:	pop    rdi
   14004bc1b:	mov    fs,WORD PTR ds:[rdi+0x5f]
   14004bc1f:	cmp    cl,BYTE PTR [rdx+0x3af37ea7]
   14004bc25:	(bad)  
   14004bc26:	or     dl,BYTE PTR [rbx+0x288b1528]
   14004bc2c:	mov    WORD PTR [rbx+riz*2],cs
   14004bc2f:	ins    BYTE PTR es:[rdi],dx
   14004bc30:	call   0x1a1beae59
   14004bc35:	adc    al,0x27
   14004bc37:	(bad)  
   14004bc38:	ins    BYTE PTR es:[rdi],dx
   14004bc39:	mov    bh,0xad
   14004bc3b:	adc    ch,dh
   14004bc3d:	add    eax,0x7d81f5f0
   14004bc42:	std    
   14004bc43:	(bad)  
   14004bc44:	(bad)  
   14004bc45:	jnp    0x14004bca7
   14004bc47:	add    BYTE PTR [rax+0x0],0xd4
   14004bc4b:	add    eax,0x277fb7d7
   14004bc50:	sub    BYTE PTR [rdi],0xa0
   14004bc53:	mov    ?,ecx
   14004bc55:	stc    
   14004bc56:	rex.W sub al,0x8e
   14004bc59:	push   rsp
   14004bc5a:	jae    0x14004bc87
   14004bc5c:	xor    ch,BYTE PTR [rbp-0x63]
   14004bc5f:	mov    BYTE PTR [rdi-0x46d96fae],ah
   14004bc65:	rex.WXB jl 0x14004bc12
   14004bc68:	lods   eax,DWORD PTR ds:[rsi]
   14004bc69:	xor    eax,0x9af37f33
   14004bc6e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bc6f:	fdivr  DWORD PTR [rax-0x2964e45a]
   14004bc75:	je     0x14004bc9a
   14004bc77:	xchg   ebp,eax
   14004bc78:	mov    WORD PTR [rdx],gs
   14004bc7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bc7b:	(bad)  
   14004bc7c:	xor    eax,0x945c38b2
   14004bc81:	movabs eax,ds:0x9b045d53361e153b
   14004bc8a:	and    eax,0x23a648c0
   14004bc8f:	(bad)  
   14004bc90:	mov    eax,0x4754805e
   14004bc95:	test   DWORD PTR [rcx],ebx
   14004bc97:	sub    eax,esp
   14004bc99:	sbb    eax,0xa7f49dc2
   14004bc9e:	sahf   
   14004bc9f:	jge    0x14004bca4
   14004bca1:	iret   
   14004bca2:	mov    esi,0x3f4f1478
   14004bca7:	sti    
   14004bca8:	cmp    cl,BYTE PTR [rsi-0x3ffce362]
   14004bcae:	xor    DWORD PTR [rcx-0x3b11bce1],edx
   14004bcb4:	xor    DWORD PTR [rbp+rcx*1+0xc2bd60f],ecx
   14004bcbb:	jle    0x14004bccb
   14004bcbd:	loopne 0x14004bc8e
   14004bcbf:	loopne 0x14004bc4d
   14004bcc1:	and    al,0x4
   14004bcc3:	mov    cl,0x82
   14004bcc5:	sbb    dl,BYTE PTR [rcx]
   14004bcc7:	or     BYTE PTR [rax-0x6651fe6],al
   14004bccd:	(bad)  
   14004bcce:	add    esi,eax
   14004bcd0:	jns    0x14004bca6
   14004bcd2:	push   0x316247e6
   14004bcd7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bcd8:	mov    dl,0x2d
   14004bcda:	rex.W mov dil,0x76
   14004bcdd:	and    BYTE PTR [rsi-0x3afffd94],dl
   14004bce3:	test   BYTE PTR [rdi],al
   14004bce5:	mov    dh,dl
   14004bce7:	test   DWORD PTR [rdx-0x75101190],0xeab8cda5
   14004bcf1:	loop   0x14004bcc8
   14004bcf3:	fcomp  st(4)
   14004bcf5:	fisttp DWORD PTR [rbp-0x1b59ddac]
   14004bcfb:	sti    
   14004bcfc:	xor    DWORD PTR [rcx+0x8],ebx
   14004bcff:	adc    al,0x48
   14004bd01:	add    bh,dl
   14004bd03:	pop    rax
   14004bd04:	hlt    
   14004bd05:	rex.WX pop rcx
   14004bd07:	pop    rbx
   14004bd08:	jne    0x14004bd3e
   14004bd0a:	(bad)  
   14004bd0b:	loopne 0x14004bd1e
   14004bd0d:	fistp  QWORD PTR [rdi]
   14004bd0f:	(bad)  
   14004bd10:	rcl    BYTE PTR [rbp-0x5f],0x65
   14004bd14:	mul    DWORD PTR [rbx]
   14004bd16:	xchg   esp,eax
   14004bd17:	cmp    ch,BYTE PTR [rax-0x5670d40]
   14004bd1d:	hlt    
   14004bd1e:	mov    bl,0x87
   14004bd20:	lock hlt 
   14004bd22:	outs   dx,DWORD PTR ds:[rsi]
   14004bd23:	pop    rsi
   14004bd24:	ja     0x14004bd52
   14004bd26:	cmp    esp,0x24
   14004bd29:	add    BYTE PTR [rsi-0x5ce1bd77],cl
   14004bd2f:	(bad)  
   14004bd30:	(bad)  
   14004bd31:	and    edi,DWORD PTR [rdi]
   14004bd33:	xor    cl,BYTE PTR [rax+0x6fa4e4e2]
   14004bd39:	mov    ebp,0xf8020e1a
   14004bd3e:	and    bl,BYTE PTR [rax+rbx*2+0x541ee041]
   14004bd45:	and    BYTE PTR [r8],al
   14004bd48:	sub    al,BYTE PTR [rax-0x694040f0]
   14004bd4e:	repnz movabs eax,ds:0xda5a9a334cc91870
   14004bd58:	xchg   ecx,eax
   14004bd59:	push   0x1cda68ca
   14004bd5e:	xchg   edx,eax
   14004bd5f:	je     0x14004bda7
   14004bd61:	rex cmovs esp,DWORD PTR [rip+0xffffffffd374b863]        # 0x1137975cc
   14004bd69:	sbb    DWORD PTR [rax-0x2e4c1d16],edi
   14004bd6f:	ficomp WORD PTR [rdx+0x4c01cad2]
   14004bd75:	mov    ecx,esp
   14004bd77:	rex.WXB xchg r10,rax
   14004bd79:	rex.WXB shl r9,0x41
   14004bd7d:	icebp  
   14004bd7e:	cmc    
   14004bd7f:	cdq    
   14004bd80:	data16 rcl BYTE PTR [rbx-0x73],cl
   14004bd84:	lods   al,BYTE PTR ds:[rsi]
   14004bd85:	xchg   ebp,eax
   14004bd86:	movabs ds:0x6843ce6bb9c159f5,eax
   14004bd8f:	jno    0x14004bdb6
   14004bd91:	pop    rbx
   14004bd92:	push   rsp
   14004bd93:	retf   
   14004bd94:	fdivr  st(3),st
   14004bd96:	pop    rdx
   14004bd97:	sub    al,0x13
   14004bd99:	jb     0x14004bdb8
   14004bd9b:	ror    BYTE PTR [rdx],cl
   14004bd9d:	xchg   edx,eax
   14004bd9e:	or     DWORD PTR [rbx-0x7b],esp
   14004bda1:	rex.WB cmp al,0xb5
   14004bda4:	out    dx,eax
   14004bda5:	jne    0x14004bde3
   14004bda7:	repnz xchg ebx,eax
   14004bda9:	(bad)  
   14004bdab:	xchg   ebp,eax
   14004bdac:	xlat   BYTE PTR ds:[rbx]
   14004bdad:	rex.WRXB mov r12b,BYTE PTR [r9+0x1cd1f1c9]
   14004bdb4:	mov    BYTE PTR [rsi+0x1b90a04e],0x46
   14004bdbb:	mov    ecx,0xa069f254
   14004bdc0:	cmp    DWORD PTR [rsi],0x22a08204
   14004bdc6:	add    al,BYTE PTR [rcx]
   14004bdc8:	(bad)  
   14004bdc9:	mov    r13d,0x13c68fc4
   14004bdcf:	rex.W mov dil,0x75
   14004bdd2:	and    bl,BYTE PTR [rcx+0x1c284669]
   14004bdd8:	mov    BYTE PTR ss:[rsi-0x4c159095],ch
   14004bddf:	lahf   
   14004bde0:	rcr    ebp,1
   14004bde2:	mov    WORD PTR [rbx],gs
   14004bde4:	mov    bh,0x9e
   14004bde6:	lea    ecx,[rbx+0x37]
   14004bde9:	lods   eax,DWORD PTR ds:[rsi]
   14004bdea:	je     0x14004be34
   14004bdec:	movsxd edx,DWORD PTR [rax]
   14004bdee:	nop
   14004bdef:	pop    rdx
   14004bdf0:	or     edx,esi
   14004bdf2:	cmp    BYTE PTR [rip+0xe28c644],bl        # 0x14e2d843c
   14004bdf8:	sbb    DWORD PTR [rdi-0x15f7c9be],0x75abe7e3
   14004be02:	sti    
   14004be03:	cdq    
   14004be04:	(bad)  
   14004be05:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004be06:	jge    0x14004be5d
   14004be08:	sub    al,0x0
   14004be0a:	out    dx,eax
   14004be0b:	mov    edi,0xd72c902a
   14004be10:	ret    
   14004be11:	adc    BYTE PTR [rdi+0x5e],0x1f
   14004be15:	(bad)  
   14004be16:	mul    BYTE PTR [rdi]
   14004be18:	pop    rsi
   14004be19:	shl    BYTE PTR [rbx+0x4f],0xbd
   14004be1d:	sub    BYTE PTR [rdi+rax*2],al
   14004be20:	test   eax,0x460cc4e4
   14004be25:	(bad)  
   14004be26:	(bad)  
   14004be27:	movsxd ebp,DWORD PTR [rdx-0x44]
   14004be2a:	loopne 0x14004bea7
   14004be2c:	cs or  eax,0x41f02081
   14004be32:	and    BYTE PTR [rax],al
   14004be34:	or     dl,ch
   14004be36:	and    eax,0x82db2a7e
   14004be3b:	fs jae 0x14004be69
   14004be3e:	loop   0x14004be09
   14004be40:	es shl ecx,1
   14004be43:	int    0x0
   14004be45:	sahf   
   14004be46:	xchg   esi,eax
   14004be47:	out    dx,al
   14004be48:	in     al,dx
   14004be49:	movabs eax,ds:0xac3af970dc0eccf7
   14004be52:	pop    rcx
   14004be53:	(bad)  
   14004be54:	jmp    0x190766567
   14004be59:	add    DWORD PTR [rcx],esp
   14004be5b:	stos   DWORD PTR es:[rdi],eax
   14004be5c:	(bad)  
   14004be5d:	test   BYTE PTR [rsi+rsi*4],dh
   14004be60:	(bad)  
   14004be61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004be62:	pop    rdx
   14004be63:	sbb    BYTE PTR [rsi],dh
   14004be65:	push   rax
   14004be66:	movabs eax,ds:0xd224d5ee5969b720
   14004be6f:	sbb    ebx,esi
   14004be71:	in     eax,0xa6
   14004be73:	ja     0x14004becf
   14004be75:	int    0x85
   14004be77:	(bad)  
   14004be78:	mov    al,0x8c
   14004be7a:	or     ebp,DWORD PTR [rax]
   14004be7c:	(bad)  
   14004be7d:	mov    ebp,ecx
   14004be7f:	or     dh,al
   14004be81:	rex.WRX out 0xb9,al
   14004be84:	rex.RXB ret 0xe08d
   14004be88:	mov    dl,0xec
   14004be8a:	xchg   ecx,eax
   14004be8b:	xchg   ebx,eax
   14004be8c:	movabs ds:0x2f13c8f117a9fc78,eax
   14004be95:	(bad)  
   14004be96:	xor    al,0x3f
   14004be98:	and    edx,edx
   14004be9a:	(bad)  
   14004be9b:	repnz movsxd ecx,eax
   14004be9e:	(bad)  
   14004be9f:	mov    cr7,rdi
   14004bea2:	xor    ch,al
   14004bea4:	ror    DWORD PTR [rax+0x3],cl
   14004bea7:	and    DWORD PTR [rax],0x810d0
   14004bead:	mov    al,ah
   14004beaf:	fimul  WORD PTR [rip+0xffffffffab66de70]        # 0xeb6b9d25
   14004beb5:	mov    BYTE PTR [rax+0x28],dl
   14004beb8:	mov    WORD PTR [rbx+rcx*2+0x1b],ss
   14004bebc:	xchg   edx,eax
   14004bebd:	fst    DWORD PTR [rsi]
   14004bebf:	rex.R movabs ds:0xa06b500041519931,al
   14004bec9:	ja     0x14004bf20
   14004becb:	(bad)  
   14004becc:	scas   al,BYTE PTR es:[rdi]
   14004becd:	mov    ebx,0x577a2d62
   14004bed2:	jne    0x14004bedc
   14004bed4:	ret    0xbe29
   14004bed7:	mov    cl,0x46
   14004bed9:	cmp    al,0x19
   14004bedb:	leave  
   14004bedc:	(bad)  
   14004bedd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bede:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bedf:	mov    ah,0x16
   14004bee1:	rex.R mov sil,0x1a
   14004bee4:	(bad)  
   14004bee5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bee6:	jne    0x14004bf40
   14004bee8:	xor    eax,0x5236d2b7
   14004beed:	fcomp  DWORD PTR [rsi-0x34]
   14004bef0:	(bad)  
   14004bef1:	lea    edx,[rax-0x3fbced39]
   14004bef7:	scas   eax,DWORD PTR es:[rdi]
   14004bef8:	(bad)  
   14004bef9:	stc    
   14004befa:	push   rdi
   14004befb:	xlat   BYTE PTR ds:[rbx]
   14004befc:	(bad)  
   14004befd:	jle    0x14004becc
   14004beff:	and    esi,ebp
   14004bf01:	xor    edi,edx
   14004bf03:	cmp    eax,0xf3c4fed8
   14004bf08:	fdivr  st,st(6)
   14004bf0a:	clc    
   14004bf0b:	repz sbb bl,cl
   14004bf0e:	rex.WRXB cmp BYTE PTR [r15-0x34],r10b
   14004bf12:	adc    edx,0x23f224d4
   14004bf18:	or     eax,0xf
   14004bf1b:	popf   
   14004bf1c:	rex.R mov ecx,0x707b935c
   14004bf22:	adc    eax,DWORD PTR [rax+0x61608387]
   14004bf28:	and    BYTE PTR [rax],al
   14004bf2a:	shl    BYTE PTR [rbx+0x1c136fa1],1
   14004bf30:	loop   0x14004bf89
   14004bf32:	or     al,0xee
   14004bf34:	test   DWORD PTR [rbx],esp
   14004bf36:	push   rcx
   14004bf37:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bf38:	(bad)  
   14004bf39:	fist   DWORD PTR [rax-0x7a7ccb34]
   14004bf3f:	ret    
   14004bf40:	add    BYTE PTR [rdx+riz*2],dh
   14004bf43:	push   rbp
   14004bf44:	mov    cl,0x0
   14004bf46:	jp     0x14004bf9f
   14004bf48:	jne    0x14004bf2c
   14004bf4a:	mov    edx,0xef43ae77
   14004bf4f:	cdq    
   14004bf50:	popf   
   14004bf51:	movabs ds:0x13b5400b1db9aab8,al
   14004bf5a:	enter  0x633e,0xc6
   14004bf5e:	ret    
   14004bf5f:	xchg   edx,eax
   14004bf60:	sar    DWORD PTR [rdx],0x46
   14004bf63:	xor    al,0xb6
   14004bf65:	pop    rcx
   14004bf66:	mov    ?,WORD PTR [rsi]
   14004bf68:	mov    cl,0x8a
   14004bf6a:	mov    cl,0x20
   14004bf6c:	scas   eax,DWORD PTR es:[rdi]
   14004bf6d:	rex.XB cld 
   14004bf6f:	xor    DWORD PTR [rbp-0x7fa77769],0x756cc621
   14004bf79:	push   0xffffffffffffffe7
   14004bf7b:	(bad)  
   14004bf7c:	mov    dl,BYTE PTR [rdx-0x15]
   14004bf7f:	(bad)  
   14004bf80:	and    dl,BYTE PTR [rdx-0xd23d548]
   14004bf86:	scas   al,BYTE PTR es:[rdi]
   14004bf87:	and    al,bh
   14004bf89:	div    bh
   14004bf8b:	test   DWORD PTR [rax+0x48],0xcb940e01
   14004bf92:	and    eax,0x90864614
   14004bf97:	(bad)  
   14004bf98:	mov    DWORD PTR ds:[rdx+0x71],edx
   14004bf9c:	retf   0x3dbf
   14004bf9f:	(bad)  
   14004bfa0:	(bad)  
   14004bfa1:	add    bh,BYTE PTR [rax-0xa09f97]
   14004bfa7:	sahf   
   14004bfa8:	push   0x5
   14004bfaa:	rex.WRXB
   14004bfab:	addr32 sub al,0x5a
   14004bfae:	add    eax,esp
   14004bfb0:	mov    esi,0xaa08f394
   14004bfb5:	or     al,0xe7
   14004bfb7:	test   DWORD PTR [rbx],esp
   14004bfb9:	push   rcx
   14004bfba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bfbb:	pop    rdx
   14004bfbc:	ficom  DWORD PTR [rcx+0x19eb7314]
   14004bfc2:	jmp    0x10007be97
   14004bfc7:	sti    
   14004bfc8:	ins    DWORD PTR es:[rdi],dx
   14004bfc9:	outs   dx,DWORD PTR ds:[rsi]
   14004bfca:	rex.WB loope 0x14004bf63
   14004bfcd:	imul   ebp,DWORD PTR [rsi],0xffffffc0
   14004bfd0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bfd1:	mov    ch,0x3d
   14004bfd3:	mov    esi,0xfe6abdfe
   14004bfd8:	cli    
   14004bfd9:	ficom  WORD PTR [rdx-0x1e8a4598]
   14004bfe0:	adc    BYTE PTR [rbx-0x3947cb8e],0x98
   14004bfe7:	jbe    0x14004c047
   14004bfe9:	ins    DWORD PTR es:[rdi],dx
   14004bfea:	int3   
   14004bfeb:	pop    rdi
   14004bfec:	sub    BYTE PTR [rdx-0x55],ah
   14004bfef:	jnp    0x14004c051
   14004bff1:	pop    rsp
   14004bff2:	mov    dh,0x41
   14004bff4:	push   rsp
   14004bff5:	pop    rbx
   14004bff6:	cmp    esp,ebp
   14004bff8:	cmc    
   14004bff9:	clc    
   14004bffa:	add    eax,0x41ab5416
   14004bfff:	test   eax,0xe43f7b8d
   14004c004:	sbb    al,BYTE PTR [rbx+rbx*1+0x65]
   14004c008:	leave  
   14004c009:	movabs ds:0x63c1efefedf14627,eax
   14004c012:	mov    ebx,0x7007b80e
   14004c017:	and    DWORD PTR [rdi],ecx
   14004c019:	(bad)  
   14004c01a:	jae    0x14004c05f
   14004c01c:	sbb    BYTE PTR [rbx],bl
   14004c01e:	cmp    dl,BYTE PTR [rcx-0x75]
   14004c021:	and    al,bh
   14004c023:	cmp    DWORD PTR [rax+0x4beb16eb],eax
   14004c029:	mov    rcx,QWORD PTR [rsi+0x0]
   14004c02d:	mov    eax,0xa09ffe7e
   14004c032:	retf   0x5d74
   14004c035:	(bad)  
   14004c036:	or     ah,BYTE PTR [rcx-0x76ec4a57]
   14004c03c:	je     0x14004c094
   14004c03e:	and    eax,0xe5d9a6ae
   14004c043:	add    DWORD PTR [rdx+0x7a],ebp
   14004c046:	sub    dl,BYTE PTR [rcx]
   14004c048:	(bad)
   14004c04b:	sahf   
   14004c04c:	sub    ebx,0x2f
   14004c04f:	pop    rdi
   14004c050:	scas   eax,DWORD PTR es:[rdi]
   14004c051:	xchg   esi,eax
   14004c052:	xchg   ebx,eax
   14004c053:	retf   0x3dce
   14004c056:	rex.WRX (bad) 
   14004c058:	shr    DWORD PTR [rcx-0xd98bfe5],1
   14004c05e:	mov    ecx,0x4a530256
   14004c063:	xchg   edx,eax
   14004c064:	mov    edi,0x1c4238e4
   14004c069:	jno    0x14004c0b9
   14004c06b:	push   rdx
   14004c06c:	mov    db1,rsp
   14004c06f:	adc    eax,DWORD PTR [rbx-0x6d]
   14004c072:	pop    rdx
   14004c073:	(bad)  
   14004c074:	and    eax,DWORD PTR [rdx-0x4d0e6731]
   14004c07a:	nop
   14004c07b:	ds push rsp
   14004c07d:	test   al,0x24
   14004c07f:	jb     0x14004c072
   14004c081:	xchg   DWORD PTR [rax],ecx
   14004c083:	and    bh,BYTE PTR [rdx+0x4d]
   14004c086:	in     al,0x18
   14004c088:	stc    
   14004c089:	pop    rsi
   14004c08a:	xchg   edx,eax
   14004c08b:	jno    0x14004c0fc
   14004c08d:	rex.WR (bad) 
   14004c08f:	rcr    DWORD PTR [rcx-0x7052bb94],0xdf
   14004c096:	cld    
   14004c097:	out    dx,al
   14004c098:	rex.WRB hlt 
   14004c09a:	outs   dx,DWORD PTR ds:[rsi]
   14004c09b:	jnp    0x14004c0af
   14004c09d:	(bad)  
   14004c09e:	(bad)  
   14004c09f:	cmp    ah,BYTE PTR [rcx]
   14004c0a1:	sub    ah,bl
   14004c0a3:	out    dx,al
   14004c0a4:	stc    
   14004c0a5:	(bad)  
   14004c0a6:	jae    0x14004c06b
   14004c0a8:	sbb    BYTE PTR [rip+0x2e5e063c],bl        # 0x16e62c6ea
   14004c0ae:	movabs ds:0x3e2d8b2be0073e0a,eax
   14004c0b7:	mov    al,0xa8
   14004c0b9:	add    al,0x40
   14004c0bb:	sub    eax,0x850b3ee6
   14004c0c0:	nop
   14004c0c1:	rex.W mov dil,0x38
   14004c0c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c0c5:	jle    0x14004c0ef
   14004c0c7:	sub    al,0xb5
   14004c0c9:	sbb    eax,0xbf80d2d5
   14004c0ce:	add    BYTE PTR [rax],al
   14004c0d0:	ret    
   14004c0d1:	(bad)  
   14004c0d2:	mov    ch,0x3d
   14004c0d4:	mov    eax,0xd00b9ae5
   14004c0d9:	ficom  WORD PTR [rdx+0x7588f352]
   14004c0df:	and    ch,cl
   14004c0e1:	pop    rbx
   14004c0e2:	test   DWORD PTR [rdi],0xf9caece9
   14004c0e8:	rex.R std 
   14004c0ea:	sbb    ah,cl
   14004c0ec:	adc    eax,0x24fac302
   14004c0f1:	jmp    0x1a2d26206
   14004c0f6:	rcr    BYTE PTR [rdx-0x23ce55d1],1
   14004c0fc:	add    ebp,DWORD PTR [rbp+0x5c]
   14004c0ff:	ror    edx,1
   14004c101:	rex.WXB in eax,dx
   14004c103:	int3   
   14004c104:	pop    rsi
   14004c105:	mov    esi,0x5d33cf17
   14004c10a:	(bad)  
   14004c10b:	and    bh,BYTE PTR [rax-0x7d550c74]
   14004c111:	rex.WRX imul r14,QWORD PTR [rdi-0x4914313],0x1cfe3fb6
   14004c11c:	(bad)  
   14004c11d:	icebp  
   14004c11e:	jnp    0x14004c0ef
   14004c120:	(bad)  
   14004c121:	lods   al,BYTE PTR ds:[rsi]
   14004c122:	xor    BYTE PTR [rcx],ch
   14004c124:	add    al,0x0
   14004c126:	cmp    al,al
   14004c128:	retf   
   14004c129:	and    eax,0x28437214
   14004c12e:	in     al,0x86
   14004c130:	stos   BYTE PTR es:[rdi],al
   14004c131:	or     DWORD PTR [rdx+0x6e645883],eax
   14004c137:	shl    DWORD PTR [rdx+0x1b3d0010],0xfa
   14004c13e:	xchg   edx,eax
   14004c13f:	add    dh,bh
   14004c141:	(bad)  
   14004c142:	push   rsp
   14004c143:	cdq    
   14004c144:	mov    dh,0x1b
   14004c146:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004c148:	xchg   ecx,eax
   14004c149:	push   0xffffffffffffffe9
   14004c14b:	add    BYTE PTR [rbx],cl
   14004c14d:	test   DWORD PTR [rax],esp
   14004c14f:	leave  
   14004c150:	scas   al,BYTE PTR es:[rdi]
   14004c151:	xchg   ebx,eax
   14004c152:	rol    BYTE PTR [rbp+0x12a40045],cl
   14004c158:	push   rcx
   14004c159:	jl     0x14004c147
   14004c15b:	(bad)  
   14004c15c:	sub    eax,0x32cd60b8
   14004c161:	rex.X cmp BYTE PTR [rdi-0x1b1955e2],bpl
   14004c168:	(bad)  
   14004c169:	sbb    eax,0xc74a67cf
   14004c16e:	(bad)  
   14004c16f:	sbb    bl,BYTE PTR [rax-0x15]
   14004c172:	std    
   14004c173:	rex.WX ins BYTE PTR es:[rdi],dx
   14004c175:	rcl    BYTE PTR [rsi-0x32],0x2b
   14004c179:	movabs ds:0x6e59205d0ed15d3f,eax
   14004c182:	(bad)  
   14004c183:	out    0x4a,eax
   14004c185:	(bad)  [rcx+rcx*2+0x50d7cd0f]
   14004c18c:	iret   
   14004c18d:	in     eax,dx
   14004c18e:	sbb    esi,DWORD PTR [rax-0x7c]
   14004c191:	jbe    0x14004c18e
   14004c193:	mov    esp,0x7636b8fa
   14004c198:	loopne 0x14004c1e7
   14004c19a:	(bad)  
   14004c19b:	push   dx
   14004c19d:	push   rax
   14004c19e:	xor    ah,BYTE PTR [rsi+0x16a43bcd]
   14004c1a4:	lea    edx,[rdi-0x51]
   14004c1a7:	sti    
   14004c1a8:	js     0x14004c138
   14004c1aa:	sahf   
   14004c1ab:	sbb    ch,al
   14004c1ad:	(bad)  
   14004c1ae:	(bad)  
   14004c1af:	stc    
   14004c1b0:	rex.WB in al,dx
   14004c1b2:	(bad)  
   14004c1b4:	sub    cl,BYTE PTR [rax-0x5c7ffed1]
   14004c1ba:	pop    rsp
   14004c1bb:	sub    ah,BYTE PTR [rbx]
   14004c1bd:	(bad)  
   14004c1be:	je     0x14004c1dc
   14004c1c0:	adc    edi,ecx
   14004c1c2:	pushf  
   14004c1c3:	outs   dx,DWORD PTR ds:[rsi]
   14004c1c4:	sbb    ebx,DWORD PTR [rbp+0x3c]
   14004c1c7:	add    al,0xe0
   14004c1c9:	mov    es,WORD PTR [rcx-0x70ca0283]
   14004c1cf:	xor    ebp,DWORD PTR [rsi]
   14004c1d1:	push   rsp
   14004c1d2:	pushf  
   14004c1d3:	test   BYTE PTR [rdx],0xa0
   14004c1d6:	addr32 rex.XB (bad) 
   14004c1da:	add    BYTE PTR [rsi],bl
   14004c1dc:	scas   eax,DWORD PTR es:[rdi]
   14004c1dd:	push   rsp
   14004c1de:	adc    cl,BYTE PTR es:[rbx+0x20]
   14004c1e2:	(bad)  
   14004c1e3:	fadd   QWORD PTR [rsi+0x686e3470]
   14004c1e9:	(bad)  
   14004c1ea:	sub    edi,ecx
   14004c1ec:	and    ebx,esi
   14004c1ee:	cmp    al,0x6c
   14004c1f0:	pop    rax
   14004c1f1:	mov    bl,0xc
   14004c1f3:	(bad)  
   14004c1f4:	mov    ebx,0x253442f1
   14004c1f9:	movabs ds:0x8f504c37abcb796e,eax
   14004c202:	add    al,0x1
   14004c204:	and    eax,0xf4af296b
   14004c209:	mov    gs,WORD PTR [rbp+0x318f2556]
   14004c20f:	sub    al,0x1
   14004c211:	or     eax,DWORD PTR [rbx-0x43]
   14004c214:	adc    DWORD PTR [rbx],eax
   14004c216:	push   0x36
   14004c218:	jmp    0x14004c1b1
   14004c21a:	(bad)  
   14004c21b:	push   rsi
   14004c21c:	outs   dx,DWORD PTR ds:[rsi]
   14004c21d:	out    dx,eax
   14004c21e:	sbb    dl,BYTE PTR [rbp-0x3563ea1d]
   14004c224:	sbb    BYTE PTR [rax],cl
   14004c226:	push   rcx
   14004c227:	rex.RB stos DWORD PTR es:[rdi],eax
   14004c229:	loop   0x14004c215
   14004c22b:	xchg   BYTE PTR [rax+0x5f671452],dh
   14004c231:	sub    DWORD PTR [rax],ebp
   14004c233:	fisubr DWORD PTR [rsi+riz*8]
   14004c236:	sub    dh,BYTE PTR [rax]
   14004c238:	jp     0x14004c24f
   14004c23a:	stos   BYTE PTR es:[rdi],al
   14004c23b:	xor    al,0xf0
   14004c23d:	out    dx,al
   14004c23e:	fist   DWORD PTR [rbx+0x7b883ebf]
   14004c244:	jmp    rcx
   14004c246:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c247:	sbb    bl,cl
   14004c249:	rex.WRXB test al,0xe7
   14004c24c:	in     al,0x40
   14004c24e:	jno    0x14004c2ba
   14004c250:	add    bh,cl
   14004c252:	loope  0x14004c267
   14004c254:	sub    BYTE PTR [rsi-0x74],cl
   14004c257:	pop    rbx
   14004c258:	scas   eax,DWORD PTR es:[rdi]
   14004c259:	xchg   ecx,eax
   14004c25a:	loopne 0x14004c1e6
   14004c25c:	cmp    DWORD PTR [rbp-0x3],0xb42b544f
   14004c263:	nop
   14004c264:	jno    0x14004c240
   14004c266:	or     al,BYTE PTR [rax]
   14004c268:	xlat   BYTE PTR ds:[rbx]
   14004c269:	xlat   BYTE PTR ds:[rbx]
   14004c26a:	jg     0x14004c26c
   14004c26c:	adc    eax,0xa161dd56
   14004c271:	adc    BYTE PTR [rdx-0x33],dl
   14004c274:	in     eax,dx
   14004c275:	mov    BYTE PTR [rsi],ah
   14004c277:	fdiv   st(1),st
   14004c279:	stc    
   14004c27a:	jp     0x14004c2a3
   14004c27c:	(bad)  
   14004c27d:	xchg   al,dh
   14004c27f:	mov    ah,0xa3
   14004c281:	add    DWORD PTR [rsi],eax
   14004c283:	and    al,0x13
   14004c285:	push   rcx
   14004c286:	jl     0x14004c27c
   14004c288:	xchg   BYTE PTR [rbx],cl
   14004c28a:	mov    cl,0x61
   14004c28c:	int    0x32
   14004c28e:	cdq    
   14004c28f:	and    esi,DWORD PTR [rax+rbx*1-0x6a8233ad]
   14004c296:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c297:	rex.R (bad) 
   14004c299:	adc    ebp,DWORD PTR [rbp-0x59]
   14004c29c:	sahf   
   14004c29d:	rex.WX mov dil,0x32
   14004c2a0:	mov    BYTE PTR [rax-0x10],ah
   14004c2a3:	jle    0x14004c2ce
   14004c2a5:	fild   WORD PTR [rbp-0x67]
   14004c2a8:	rex.WX (bad) 
   14004c2aa:	retf   
   14004c2ab:	imul   ecx,DWORD PTR [rbx-0x628dcd48],0xffffffe6
   14004c2b2:	and    eax,0x563ef2ca
   14004c2b7:	test   DWORD PTR [rax-0x256fce96],eax
   14004c2bd:	(bad)  
   14004c2be:	cwde   
   14004c2bf:	or     al,0x42
   14004c2c1:	js     0x14004c317
   14004c2c3:	test   al,0x4f
   14004c2c5:	adc    DWORD PTR [rdx+0x5a],ecx
   14004c2c8:	sti    
   14004c2c9:	hlt    
   14004c2ca:	(bad)  
   14004c2cb:	xchg   edi,eax
   14004c2cc:	mov    esp,0xbea5065f
   14004c2d1:	movabs ds:0xcf14ffdfef714627,eax
   14004c2da:	(bad)  
   14004c2db:	sbb    BYTE PTR [rax],ah
   14004c2dd:	add    ecx,DWORD PTR [rcx]
   14004c2df:	pop    rsp
   14004c2e0:	pop    rax
   14004c2e1:	add    al,0x93
   14004c2e3:	test   DWORD PTR [rdx+rsi*8],edi
   14004c2e6:	ret    
   14004c2e7:	(bad)  
   14004c2e8:	stos   DWORD PTR es:[rdi],eax
   14004c2e9:	mov    ecx,0xb8010f05
   14004c2ee:	std    
   14004c2ef:	je     0x14004c27e
   14004c2f1:	or     eax,0xc002969c
   14004c2f6:	jge    0x14004c34b
   14004c2f8:	outs   dx,DWORD PTR ds:[rsi]
   14004c2f9:	(bad)  
   14004c2fa:	sub    bh,al
   14004c2fc:	cli    
   14004c2fd:	mov    cl,0x54
   14004c2ff:	(bad)  
   14004c300:	mov    DWORD PTR [rbx+riz*8-0x6765d419],esi
   14004c307:	push   0x49
   14004c309:	and    ebx,ebp
   14004c30b:	test   DWORD PTR [rbx-0x68],ecx
   14004c30e:	in     eax,0xdd
   14004c310:	sub    eax,0xb65bfdf8
   14004c315:	movabs ds:0x3b4f91e4884525ad,al
   14004c31e:	rex.RX rol esi,1
   14004c321:	push   0x59
   14004c323:	(bad)  [rbx+0x50]
   14004c326:	xchg   esp,ebp
   14004c328:	push   rsp
   14004c329:	movabs ds:0xd8d8000108faf7c8,al
   14004c332:	rex.R
   14004c333:	mov    ss,WORD PTR gs:[rdx]
   14004c336:	adc    ebp,DWORD PTR [rax-0x6386c3be]
   14004c33c:	pop    rbp
   14004c33d:	cmp    al,ch
   14004c33f:	int    0x96
   14004c341:	jb     0x14004c30b
   14004c343:	adc    al,0x5f
   14004c345:	loop   0x14004c3c3
   14004c347:	in     al,0x3a
   14004c349:	cmp    BYTE PTR [rbp-0x4f],ah
   14004c34c:	jmp    0x14004c3bc
   14004c34e:	sub    dl,al
   14004c350:	mov    BYTE PTR [rcx],dh
   14004c352:	gs clc 
   14004c354:	iret   
   14004c355:	or     eax,DWORD PTR [rax-0x16]
   14004c358:	adc    esp,DWORD PTR [rbx-0x77fe476c]
   14004c35e:	test   al,0x61
   14004c360:	jb     0x14004c3ca
   14004c362:	hlt    
   14004c363:	(bad)  
   14004c364:	(bad)  
   14004c365:	jns    0x14004c36d
   14004c367:	(bad)  
   14004c368:	clc    
   14004c369:	mov    ebp,0x9c62895f
   14004c36e:	or     BYTE PTR [rcx-0x7673468e],al
   14004c374:	fcom   QWORD PTR [rax+0x35]
   14004c377:	mov    bh,0xe0
   14004c379:	and    BYTE PTR [rax+0x37c74f2b],al
   14004c37f:	(bad)  
   14004c380:	rex.WRXB sub r8,QWORD PTR [r9]
   14004c383:	loopne 0x14004c3d3
   14004c385:	call   0x161558383
   14004c38a:	ret    0x8a1f
   14004c38d:	rex.R xchg ecx,eax
   14004c38f:	rex.W mov dil,0x20
   14004c392:	adc    cl,BYTE PTR [rbx-0x78]
   14004c395:	loope  0x14004c3c8
   14004c397:	push   rbp
   14004c398:	push   rbx
   14004c399:	sbb    cl,BYTE PTR [rax+riz*1]
   14004c39c:	rex.WB jb 0x14004c39a
   14004c39f:	sbb    eax,0xf839d17
   14004c3a4:	mov    esp,0x126202fb
   14004c3a9:	shr    esi,cl
   14004c3ab:	rex.WRXB
   14004c3ac:	rex.W
   14004c3ad:	sbb    BYTE PTR [rdx-0x1c0ab96e],bpl
   14004c3b4:	jne    0x14004c3d5
   14004c3b6:	pop    rdx
   14004c3b7:	and    eax,0x5859a93c
   14004c3bc:	add    DWORD PTR [rdx+rcx*2],ecx
   14004c3bf:	mov    bl,0xd5
   14004c3c1:	shr    DWORD PTR [rdx+0x242bd6e7],cl
   14004c3c7:	rex.RB jne 0x14004c395
   14004c3ca:	rex.XB xlat BYTE PTR ds:[rbx]
   14004c3cc:	fnstcw WORD PTR [rdx+0x59]
   14004c3cf:	movabs ds:0xdab125ee3720a56e,eax
   14004c3d8:	mov    ch,0xb6
   14004c3da:	shr    DWORD PTR [rbx],1
   14004c3dc:	mov    bl,0x77
   14004c3de:	rex.XB jg 0x14004c442
   14004c3e1:	or     al,BYTE PTR [rbx+0x30]
   14004c3e4:	fldcw  WORD PTR [rdi]
   14004c3e6:	xchg   ebp,eax
   14004c3e7:	mov    DWORD PTR [rax],ebx
   14004c3e9:	jmp    0x14004c39e
   14004c3eb:	(bad)  
   14004c3ec:	(bad)  
   14004c3ed:	jrcxz  0x14004c3ae
   14004c3ef:	jl     0x14004c3d4
   14004c3f1:	rex.RXB sbb BYTE PTR [r11],r13b
   14004c3f4:	rex.WR test al,0x42
   14004c3f7:	rcl    BYTE PTR [rip+0x71c9c52c],0x8c        # 0x1b1ce892a
   14004c3fe:	out    0x6,eax
   14004c400:	stos   DWORD PTR es:[rdi],eax
   14004c401:	or     eax,0xc00e7e1b
   14004c406:	pop    rdi
   14004c407:	popf   
   14004c408:	rex.WRX adc r9,QWORD PTR [rax-0x1ffee4b2]
   14004c40f:	(bad)  
   14004c410:	cli    
   14004c411:	jle    0x14004c397
   14004c413:	or     ah,bl
   14004c415:	cli    
   14004c416:	icebp  
   14004c417:	push   rsp
   14004c418:	(bad)  
   14004c419:	mov    cl,0xa6
   14004c41b:	sub    al,0x21
   14004c41d:	lods   eax,DWORD PTR ds:[rsi]
   14004c41e:	test   esp,ebp
   14004c420:	retf   0xe90f
   14004c423:	jge    0x14004c493
   14004c425:	pop    rdx
   14004c426:	sub    dl,BYTE PTR [rcx]
   14004c428:	ret    
   14004c429:	rex.WRB out dx,eax
   14004c42b:	fiadd  WORD PTR [rax+0x65582e8b]
   14004c431:	cmp    eax,0xfb2a6e87
   14004c436:	add    eax,0x7cd8e8c5
   14004c43b:	in     eax,0xb7
   14004c43d:	not    esp
   14004c43f:	rex.WB
   14004c440:	ds mov dh,0x72
   14004c443:	push   rsp
   14004c444:	pop    rbx
   14004c445:	mov    esi,DWORD PTR [rsi-0x75]
   14004c448:	or     al,0x49
   14004c44a:	(bad)  
   14004c44b:	mov    ebx,0x5043e035
   14004c450:	scas   eax,DWORD PTR es:[rdi]
   14004c451:	pushf  
   14004c452:	sbb    DWORD PTR [rax+rdx*2-0x36],esp
   14004c456:	call   0x1497f945d
   14004c45b:	mov    dh,BYTE PTR [rax+0x198d6522]
   14004c461:	shl    DWORD PTR [rbp+rbx*4+0x1e47b94c],0x38
   14004c469:	mov    eax,0xc8c8fc3a
   14004c46e:	cmc    
   14004c46f:	pop    rdx
   14004c470:	(bad)  
   14004c471:	xchg   esp,eax
   14004c472:	rex.WRB
   14004c473:	addr32 sbb bl,cl
   14004c476:	rex.WRXB loopne 0x14004c4b8
   14004c479:	jg     0x14004c468
   14004c47b:	jnp    0x14004c4f5
   14004c47d:	in     eax,0xd0
   14004c47f:	jno    0x14004c438
   14004c481:	lods   al,BYTE PTR ds:[rsi]
   14004c482:	(bad)  
   14004c483:	outs   dx,DWORD PTR ds:[rsi]
   14004c484:	or     BYTE PTR [rbx+0x8fc89fd],0x26
   14004c48b:	mov    BYTE PTR [rsi+0x7c],0xaf
   14004c48f:	add    eax,0x7781bcce
   14004c494:	lahf   
   14004c495:	cs add edx,eax
   14004c498:	rol    DWORD PTR [rdx+0x0],cl
   14004c49b:	mov    eax,0xfcefff26
   14004c4a0:	repnz rex.XB movabs eax,ds:0xd551228476d99230
   14004c4ab:	(bad)  
   14004c4ac:	add    al,0x14
   14004c4ae:	cmc    
   14004c4af:	push   rdx
   14004c4b0:	int    0x15
   14004c4b2:	push   0x13e1496b
   14004c4b7:	(bad)  
   14004c4b8:	fmul   DWORD PTR [rdx-0x5f32a29b]
   14004c4be:	push   rbp
   14004c4bf:	or     BYTE PTR [rdx-0x2226e06],dl
   14004c4c5:	and    edi,ebp
   14004c4c7:	jge    0x14004c4a3
   14004c4c9:	imul   esi,DWORD PTR [rip+0xfffffffff926810b],0x102977a8        # 0x1392b45de
   14004c4d3:	pop    rsp
   14004c4d4:	(bad)  
   14004c4d5:	movabs ds:0x3edfe1d728c7ab66,eax
   14004c4de:	(bad)
   14004c4e1:	repz (bad)
   14004c4e4:	imul   eax,DWORD PTR [rcx+0x33],0xffffffbf
   14004c4e8:	or     eax,0x16b4dcbf
   14004c4ed:	enter  0xd4,0x12
   14004c4f1:	add    al,0x55
   14004c4f3:	rex.WX fisubr DWORD PTR [rdi]
   14004c4f6:	pop    r8
   14004c4f8:	push   0xffffffffffffffea
   14004c4fa:	mov    esp,0x249f4002
   14004c4ff:	enter  0xfde4,0x30
   14004c503:	push   0xffffffffffffff93
   14004c505:	movabs ds:0x3c99d4fc7fedff30,eax
   14004c50e:	xchg   BYTE PTR [rdx],r9b
   14004c511:	add    DWORD PTR [rsi],ebp
   14004c513:	(bad)  
   14004c514:	sub    dl,BYTE PTR [rdi]
   14004c516:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c517:	push   rax
   14004c518:	sbb    BYTE PTR [rcx],bh
   14004c51a:	pop    rsi
   14004c51b:	in     eax,dx
   14004c51c:	lods   eax,DWORD PTR ds:[rsi]
   14004c51d:	ret    
   14004c51e:	jae    0x14004c56e
   14004c520:	(bad)  
   14004c521:	xchg   edi,eax
   14004c522:	(bad)  
   14004c523:	or     eax,DWORD PTR [r8]
   14004c526:	xlat   BYTE PTR ds:[rbx]
   14004c527:	in     al,0xff
   14004c529:	add    al,0x2a
   14004c52b:	mov    esp,0xa78d13bc
   14004c530:	adc    BYTE PTR [rdi+0x6a],ch
   14004c533:	jbe    0x14004c4bc
   14004c535:	mul    BYTE PTR [rax-0x33c5e10c]
   14004c53b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c53c:	adc    ecx,DWORD PTR [rdi+riz*1+0x4f]
   14004c540:	rex.WRXB ja 0x14004c576
   14004c543:	(bad)  
   14004c544:	lock mov dh,0xcb
   14004c547:	nop
   14004c548:	rex.WR (bad) 
   14004c54a:	mov    BYTE PTR [rsi-0x6d96e6fe],al
   14004c550:	movsxd edi,ecx
   14004c552:	rex.RX (bad) 
   14004c554:	fisttp QWORD PTR [rdi+0x555e5e4f]
   14004c55a:	loop   0x14004c545
   14004c55c:	pop    rdx
   14004c55d:	pop    rbp
   14004c55e:	(bad)  
   14004c55f:	mov    ebp,0x2c6442b9
   14004c565:	rcr    BYTE PTR [rdi+0x11e054c7],1
   14004c56b:	jmp    0x14004c52f
   14004c56d:	out    0x95,eax
   14004c56f:	movsxd edi,eax
   14004c571:	pop    rsp
   14004c572:	xchg   DWORD PTR [rbx+0x39],esp
   14004c575:	xor    rbx,QWORD PTR [rsi+0x5a]
   14004c579:	add    al,0xe4
   14004c57b:	xor    BYTE PTR [rbp-0x589f2933],bh
   14004c581:	fidivr WORD PTR [rsi]
   14004c583:	mov    ch,0xbc
   14004c585:	jo     0x14004c59c
   14004c587:	push   0x27bb4f20
   14004c58c:	or     DWORD PTR ss:[rdx-0x25],0x3cba8fa0
   14004c594:	repnz clc 
   14004c596:	outs   dx,DWORD PTR ds:[rsi]
   14004c597:	lock lods eax,DWORD PTR ds:[rsi]
   14004c599:	ins    DWORD PTR es:[rdi],dx
   14004c59a:	cmp    esp,ebp
   14004c59c:	repz adc edx,edi
   14004c59f:	out    dx,al
   14004c5a0:	(bad)  
   14004c5a1:	sbb    eax,0x8c4c65e0
   14004c5a6:	(bad)  
   14004c5a7:	movsxd ebp,DWORD PTR [rdx+0x22]
   14004c5aa:	out    dx,eax
   14004c5ab:	ror    DWORD PTR [rdx+0x0],cl
   14004c5ae:	(bad)  
   14004c5af:	retf   
   14004c5b0:	rex.RB fistp WORD PTR [r10-0x38]
   14004c5b4:	rol    DWORD PTR cs:[rdx-0x6d1ffeb],0xff
   14004c5bc:	adc    DWORD PTR [rsi],edi
   14004c5be:	push   rcx
   14004c5bf:	jle    0x14004c587
   14004c5c1:	rex.X mov BYTE PTR [rbx-0x42],dil
   14004c5c5:	mov    esi,0xe15c997b
   14004c5ca:	mov    edx,0xb13b0247
   14004c5cf:	test   al,0x10
   14004c5d1:	fdiv   DWORD PTR [rdx-0x2]
   14004c5d4:	rex.WX fdivr QWORD PTR [rax-0x1b]
   14004c5d8:	stc    
   14004c5d9:	rex.W
   14004c5da:	movabs es:0xd99264a886463b96,al
   14004c5e4:	(bad)  
   14004c5e5:	(bad)  
   14004c5e6:	scas   al,BYTE PTR es:[rdi]
   14004c5e7:	mov    al,BYTE PTR [rax+0x51b5cf98]
   14004c5ed:	imul   esp,DWORD PTR [rdx-0x25af0f6e],0xffffffef
   14004c5f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c5f5:	jno    0x14004c644
   14004c5f7:	adc    eax,0xb710024b
   14004c5fc:	(bad)  
   14004c5fd:	mov    ebx,0xbd39fa1f
   14004c602:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c603:	imul   esp,edi,0xffffffd6
   14004c606:	jnp    0x14004c63f
   14004c608:	mov    ebp,0x10d7be65
   14004c60d:	movabs ds:0x6e025aa62ead3075,al
   14004c616:	adc    ah,BYTE PTR [rbx]
   14004c618:	in     eax,0x3d
   14004c61a:	jo     0x14004c5c5
   14004c61c:	mov    eax,0x1492b68d
   14004c621:	xchg   edx,eax
   14004c622:	rex.RXB xor r13b,BYTE PTR [r9+0x55da4fb]
   14004c629:	add    esi,eax
   14004c62b:	clc    
   14004c62c:	scas   al,BYTE PTR es:[rdi]
   14004c62d:	add    edi,eax
   14004c62f:	out    dx,eax
   14004c630:	jmp    rbx
   14004c632:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c633:	and    al,0x28
   14004c635:	or     cl,ah
   14004c637:	(bad)  
   14004c638:	xor    bh,dh
   14004c63a:	nop
   14004c63b:	test   eax,0x462602c9
   14004c640:	xchg   eax,eax
   14004c642:	mov    ecx,0x43c148ef
   14004c647:	add    BYTE PTR [rsi],bh
   14004c649:	mov    esp,0x82c08550
   14004c64e:	adc    al,0x0
   14004c650:	scas   al,BYTE PTR es:[rdi]
   14004c651:	mov    edi,0xa27c02ff
   14004c656:	cld    
   14004c657:	movabs eax,ds:0x6228582b4cc91470
   14004c660:	pop    rsi
   14004c661:	movabs eax,ds:0x870708a8a85005c5
   14004c66a:	cld    
   14004c66b:	mov    bh,0xbc
   14004c66d:	xor    edi,DWORD PTR [eip+0xffffffffc992fc9c]        # 0x10997c310
   14004c674:	xor    esi,edx
   14004c676:	cs leave 
   14004c678:	adc    al,0xb2
   14004c67a:	cmp    BYTE PTR [rdi-0x33],bh
   14004c67d:	or     DWORD PTR [rcx-0x4c],eax
   14004c680:	scas   al,BYTE PTR es:[rdi]
   14004c681:	mov    dh,BYTE PTR [rcx]
   14004c683:	add    edx,ecx
   14004c685:	pop    rsi
   14004c686:	sub    DWORD PTR [rax-0x14],edx
   14004c689:	lea    eax,gs:[rsi-0x6df6f7e8]
   14004c690:	push   rbx
   14004c691:	int    0x4d
   14004c693:	or     ebx,DWORD PTR [rbx-0x5a827dad]
   14004c699:	adc    DWORD PTR [rbx+rbx*4-0x56],esp
   14004c69d:	(bad)  
   14004c69e:	ds enter 0xd5bd,0xee
   14004c6a3:	mov    esp,0xa64a0d79
   14004c6a8:	pop    rbp
   14004c6a9:	sar    BYTE PTR [rdx-0x3e],0x57
   14004c6ad:	sar    edi,1
   14004c6af:	adc    r13,QWORD PTR [rsi-0x12]
   14004c6b3:	(bad)  
   14004c6b4:	rex.RB
   14004c6b5:	ss mov eax,0xe089cfbf
   14004c6bb:	loopne 0x14004c661
   14004c6bd:	mov    WORD PTR [rcx],cs
   14004c6bf:	add    al,dh
   14004c6c1:	(bad)  
   14004c6c2:	(bad)  
   14004c6c3:	loope  0x14004c6a5
   14004c6c5:	loopne 0x14004c66c
   14004c6c7:	adc    cl,BYTE PTR [rdx]
   14004c6c9:	mov    ecx,0x7c972893
   14004c6ce:	add    eax,DWORD PTR [rdi+rax*1-0x77a253ff]
   14004c6d5:	jno    0x14004c658
   14004c6d7:	add    eax,0xdaa0027
   14004c6dc:	icebp  
   14004c6dd:	rex.RB (bad) 
   14004c6df:	rex.WB (bad) 
   14004c6e1:	fwait
   14004c6e2:	pop    rdx
   14004c6e3:	xor    al,0x33
   14004c6e5:	sahf   
   14004c6e6:	rex (bad) 
   14004c6e8:	add    BYTE PTR [rdx-0x46],bh
   14004c6eb:	jnp    0x14004c705
   14004c6ed:	shl    al,0x96
   14004c6f0:	repz (bad) 
   14004c6f2:	rol    BYTE PTR [rdi],0xdf
   14004c6f5:	mov    bl,0x59
   14004c6f7:	or     edx,eax
   14004c6f9:	jmp    0xcbb9b812
   14004c6fe:	hlt    
   14004c6ff:	push   rbx
   14004c700:	and    DWORD PTR [rdi+rcx*1],esi
   14004c703:	test   eax,0xa69eca0c
   14004c708:	cdq    
   14004c709:	adc    eax,0xbaa8cd10
   14004c70e:	sub    edx,DWORD PTR [rsi-0x4d]
   14004c711:	ret    0x3c42
   14004c714:	mov    bl,0x98
   14004c716:	jb     0x14004c795
   14004c718:	cmp    al,BYTE PTR [rbx]
   14004c71a:	hlt    
   14004c71b:	mov    dh,0x81
   14004c71d:	and    DWORD PTR [rsp+rbp*1+0x14],eax
   14004c721:	jg     0x14004c6ad
   14004c723:	push   rsi
   14004c724:	adc    BYTE PTR [rsp+rsi*8],dh
   14004c727:	sbb    al,BYTE PTR [rax-0x1a]
   14004c72a:	rex.X sub dil,sil
   14004c72d:	(bad)
   14004c731:	add    dl,ch
   14004c733:	xlat   BYTE PTR ds:[rbx]
   14004c734:	push   0x4c
   14004c736:	jb     0x14004c6c8
   14004c738:	sub    eax,0xf55c225
   14004c73d:	fs sub ah,bh
   14004c740:	repz xor ch,BYTE PTR [rcx+rax*1+0x42]
   14004c745:	add    BYTE PTR [rdi+0x7f027ebe],ch
   14004c74b:	(bad)  
   14004c74c:	xlat   BYTE PTR ds:[rbx]
   14004c74d:	fist   WORD PTR [rdi-0x2a]
   14004c750:	sbb    dl,BYTE PTR [rax-0x20]
   14004c753:	mov    ss,WORD PTR [rsi]
   14004c755:	mov    WORD PTR [rdi-0x16c75ef3],cs
   14004c75b:	retf   
   14004c75c:	icebp  
   14004c75d:	sbb    DWORD PTR [rax-0x80],0x43
   14004c761:	test   DWORD PTR [rbx],ecx
   14004c763:	rex.WX add BYTE PTR [rax-0xe60068d],dil
   14004c76a:	retf   
   14004c76b:	(bad)  
   14004c76c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c76d:	(bad)  
   14004c76e:	adc    DWORD PTR [rcx-0x56100cc5],ecx
   14004c774:	rex.RX jrcxz 0x14004c7db
   14004c777:	xchg   edx,eax
   14004c778:	mov    cl,BYTE PTR [rdx+0x74]
   14004c77b:	sbb    ecx,DWORD PTR [rbx]
   14004c77d:	pushf  
   14004c77e:	cld    
   14004c77f:	neg    DWORD PTR [rbp+0x71]
   14004c782:	(bad)  
   14004c783:	fidiv  WORD PTR [rsi-0x3a64931b]
   14004c789:	out    dx,eax
   14004c78a:	dec    BYTE PTR [rax-0x1f]
   14004c78d:	ret    0x7558
   14004c790:	rex.WRB (bad) 
   14004c792:	mov    ah,0x4e
   14004c794:	stos   DWORD PTR es:[rdi],eax
   14004c795:	xchg   esi,eax
   14004c796:	(bad)  
   14004c797:	(bad)  
   14004c798:	pop    rdi
   14004c799:	jnp    0x14004c720
   14004c79b:	test   BYTE PTR [rsi+rax*4-0x79fc6b7a],dl
   14004c7a2:	pop    rsi
   14004c7a3:	sbb    eax,0x6d69aa21
   14004c7a8:	(bad)  
   14004c7a9:	cli    
   14004c7aa:	or     DWORD PTR [rdi+rcx*1-0x24],eax
   14004c7ae:	rcr    DWORD PTR [rdx+rsi*1-0x45a21e4a],cl
   14004c7b5:	lahf   
   14004c7b6:	imul   eax,DWORD PTR [rax],0x52
   14004c7b9:	fsubrp st(7),st
   14004c7bb:	adc    dh,BYTE PTR [rbx+rsi*2-0xa985225]
   14004c7c2:	cdq    
   14004c7c3:	push   rbp
   14004c7c4:	mov    ecx,0x9e97f4c7
   14004c7c9:	leave  
   14004c7ca:	and    DWORD PTR ss:[rbx+0x34],edx
   14004c7ce:	rex.WR
   14004c7cf:	rex.WX stos BYTE PTR es:[rdi],al
   14004c7d1:	push   rdi
   14004c7d2:	pop    rdi
   14004c7d3:	(bad)  
   14004c7d4:	cmp    DWORD PTR [rdi-0x31840848],0xae1d41cc
   14004c7de:	add    al,ah
   14004c7e0:	add    BYTE PTR [rdx-0x1bb386ed],cl
   14004c7e6:	sub    edi,DWORD PTR [rsi+0x32]
   14004c7e9:	ins    DWORD PTR es:[rdi],dx
   14004c7ea:	repz rex.X jp 0x14004c785
   14004c7ee:	and    BYTE PTR [rdi+rdx*8],bh
   14004c7f1:	or     eax,0x1b3d15a8
   14004c7f6:	cli    
   14004c7f7:	out    dx,al
   14004c7f8:	test   bl,dh
   14004c7fa:	xchg   ebp,eax
   14004c7fb:	pop    rcx
   14004c7fc:	add    ecx,DWORD PTR [rcx+rsi*1-0x7712cddc]
   14004c803:	rex.R jrcxz 0x14004c7a8
   14004c806:	(bad)  
   14004c807:	call   0x1bb57f532
   14004c80c:	(bad)  
   14004c80d:	xchg   esp,eax
   14004c80e:	pop    rsp
   14004c80f:	lods   eax,DWORD PTR ds:[rsi]
   14004c810:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c811:	fidivr WORD PTR [rbp+rbp*8+0x26]
   14004c815:	mov    esp,0xe09582f5
   14004c81a:	pushf  
   14004c81b:	cmp    eax,ecx
   14004c81d:	and    DWORD PTR [rdi-0x24],ebp
   14004c820:	pop    rax
   14004c821:	(bad)  
   14004c822:	loopne 0x14004c7ba
   14004c824:	out    0x10,eax
   14004c826:	jns    0x14004c7ca
   14004c828:	sbb    al,0xd
   14004c82a:	mov    BYTE PTR [rbx],dh
   14004c82c:	xchg   BYTE PTR es:[rdx-0x119a0043],bl
   14004c833:	rex.WRX in al,0xe1
   14004c836:	cmp    DWORD PTR es:[rbx+rsi*8+0xbc2f389],0x37e8d14e
   14004c842:	imul   ebp,DWORD PTR [rbx+0x1e9882cc],0x559298c4
   14004c84c:	out    0x40,al
   14004c84e:	cdq    
   14004c84f:	jae    0x14004c7e5
   14004c851:	cmp    DWORD PTR [rdi-0x25],esi
   14004c854:	test   eax,0x9ced3829
   14004c859:	and    bl,BYTE PTR [rax]
   14004c85b:	(bad)  
   14004c85c:	mov    ecx,0x91a24bc3
   14004c861:	popf   
   14004c862:	cmp    bl,BYTE PTR [rbp+0x7daf6532]
   14004c868:	mov    ah,0x49
   14004c86a:	in     al,0x3e
   14004c86c:	shr    bl,cl
   14004c86e:	xchg   BYTE PTR [rdx+0x4e],dh
   14004c871:	pop    si
   14004c873:	(bad)  
   14004c874:	mov    eax,0x338f543f
   14004c879:	jno    0x14004c888
   14004c87b:	pop    rsi
   14004c87c:	sahf   
   14004c87d:	mov    eax,0x99bae50e
   14004c882:	jl     0x14004c892
   14004c884:	pop    rsp
   14004c885:	pop    rsi
   14004c886:	scas   eax,DWORD PTR es:[rdi]
   14004c887:	repnz sbb al,0xbc
   14004c88a:	rcl    DWORD PTR [rsi+0x10],cl
   14004c88d:	lods   al,BYTE PTR ds:[rsi]
   14004c88e:	sub    eax,0xae3624d9
   14004c893:	pop    rbx
   14004c894:	mov    ds,WORD PTR [rbp+0x53097abf]
   14004c89a:	(bad)
   14004c89d:	js     0x14004c843
   14004c89f:	jne    0x14004c837
   14004c8a1:	push   rax
   14004c8a2:	and    al,0x82
   14004c8a4:	rex.W xor al,0x81
   14004c8a7:	rcl    ah,cl
   14004c8a9:	cmp    ah,cl
   14004c8ab:	(bad)  
   14004c8ac:	or     BYTE PTR [rax],al
   14004c8ae:	clc    
   14004c8af:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14004c8b1:	imul   esi,ebx,0xffffffeb
   14004c8b4:	mov    ecx,0x82ccf23
   14004c8b9:	and    DWORD PTR [rax+0x4b800420],esi
   14004c8bf:	jle    0x14004c92c
   14004c8c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c8c2:	(bad)  
   14004c8c3:	adc    al,0x8e
   14004c8c5:	and    BYTE PTR [rcx+0x1c2840ee],dl
   14004c8cb:	and    DWORD PTR [rdx-0x72],ebx
   14004c8ce:	jmp    0x118d615d0
   14004c8d3:	pop    rsi
   14004c8d4:	mov    cl,BYTE PTR [rdx+rdx*4+0xf]
   14004c8d8:	jns    0x14004c8ad
   14004c8da:	cli    
   14004c8db:	adc    eax,0xb9eb7cb8
   14004c8e0:	test   BYTE PTR [rax-0xc50c70e],ah
   14004c8e6:	jmp    0x14004c86a
   14004c8e8:	rex.B je 0x14004c95d
   14004c8eb:	pop    rax
   14004c8ec:	cmp    dh,BYTE PTR [rbx+rcx*2-0x580a22c4]
   14004c8f3:	in     eax,0xca
   14004c8f5:	rex.X xor BYTE PTR [rax-0x13],bpl
   14004c8f9:	repz retf 0x5872
   14004c8fd:	or     DWORD PTR [rdx+0x35],ecx
   14004c900:	mov    esi,0xceb29940
   14004c905:	adc    al,0x72
   14004c907:	mov    ah,0x8d
   14004c909:	pop    rsi
   14004c90a:	push   rcx
   14004c90b:	std    
   14004c90c:	cmp    cl,ch
   14004c90e:	mov    dl,0x9c
   14004c910:	pop    rsp
   14004c911:	or     eax,DWORD PTR [rbp+0x47c122b]
   14004c917:	mov    BYTE PTR [rsi],ch
   14004c919:	ins    DWORD PTR es:[rdi],dx
   14004c91a:	call   0xf2288994
   14004c91f:	pop    rbx
   14004c920:	or     eax,0xca04ab53
   14004c925:	movabs al,gs:0xd4661b4ae60ea50c
   14004c92f:	push   rdi
   14004c930:	jbe    0x14004c961
   14004c932:	fnstcw WORD PTR [rcx]
   14004c934:	cwde   
   14004c935:	ds imul ecx,esi,0x5c
   14004c939:	rol    DWORD PTR [rdi],0x22
   14004c93c:	cmp    al,0x3c
   14004c93e:	jno    0x14004c8ee
   14004c940:	fdivr  QWORD PTR [rax]
   14004c942:	mov    fs,esi
   14004c944:	ins    BYTE PTR es:[rdi],dx
   14004c945:	adc    dl,BYTE PTR [rdi]
   14004c947:	lods   al,BYTE PTR ds:[rsi]
   14004c948:	pop    rbx
   14004c949:	mov    ds,WORD PTR [rbp+0x54c65fbb]
   14004c94f:	mov    cl,0x4
   14004c951:	jns    0x14004c989
   14004c953:	rex.RB stos BYTE PTR es:[rdi],al
   14004c955:	xor    DWORD PTR [rcx+0x24f1c210],0xffffffca
   14004c95c:	(bad)
   14004c95f:	loopne 0x14004c941
   14004c961:	cmc    
   14004c962:	or     eax,DWORD PTR [rbp+0x8]
   14004c965:	int3   
   14004c966:	imul   edx,DWORD PTR [rdi],0xffffffa0
   14004c969:	fcmove st,st(4)
   14004c96b:	mov    esi,0x68892c48
   14004c970:	and    ah,bl
   14004c972:	cli    
   14004c973:	fbld   TBYTE PTR [rsi+0x54cc2b29]
   14004c979:	rex.WX je 0x14004c9c2
   14004c97c:	jb     0x14004c933
   14004c97e:	stos   DWORD PTR es:[rdi],eax
   14004c97f:	fbstp  TBYTE PTR [rsi+rbp*2-0x328021fb]
   14004c986:	es jmp 0x14004c9e6
   14004c989:	xchg   ecx,eax
   14004c98a:	jb     0x14004c931
   14004c98c:	mov    edx,0xc074edbf
   14004c991:	retf   0x3ce6
   14004c994:	xor    eax,0x395aba7
   14004c999:	xor    DWORD PTR [rdi+0x46077a2b],edi
   14004c99f:	mov    ebx,0x80a6c2d4
   14004c9a4:	push   rsp
   14004c9a5:	out    dx,eax
   14004c9a6:	add    DWORD PTR [rbx],esi
   14004c9a8:	retf   0x777a
   14004c9ab:	int    0xbc
   14004c9ad:	push   rdi
   14004c9ae:	(bad)  
   14004c9af:	jne    0x14004c949
   14004c9b1:	(bad)  [rsi+0x39]
   14004c9b4:	mov    ch,0x2e
   14004c9b6:	xor    esi,eax
   14004c9b8:	stos   BYTE PTR es:[rdi],al
   14004c9b9:	ins    DWORD PTR es:[rdi],dx
   14004c9ba:	(bad)  
   14004c9bc:	and    dl,BYTE PTR [rsi]
   14004c9be:	nop
   14004c9bf:	cmp    al,0xa7
   14004c9c1:	mov    edx,0xfa13bbaf
   14004c9c6:	shr    bl,cl
   14004c9c8:	fdivp  st(5),st
   14004c9ca:	push   rsp
   14004c9cb:	(bad)  
   14004c9cc:	(bad)  
   14004c9cd:	pop    rsp
   14004c9ce:	jge    0x14004c966
   14004c9d0:	scas   eax,DWORD PTR es:[rdi]
   14004c9d1:	mov    esi,0xfc5f1271
   14004c9d6:	jmp    0x14004c9c7
   14004c9d8:	cmp    DWORD PTR [rcx-0x16348bf],eax
   14004c9de:	add    DWORD PTR cs:[rdi],eax
   14004c9e1:	ror    bl,0x65
   14004c9e4:	rex.WR (bad) 
   14004c9e6:	out    0x2a,eax
   14004c9e8:	vpmaxsw ymm8,ymm15,YMMWORD PTR [rip+0x3cf9d9f0]        # 0x17cfea3e0
   14004c9f0:	rex.X xor BYTE PTR [rdi+0x2d],bpl
   14004c9f4:	add    BYTE PTR [rdx],dh
   14004c9f6:	int3   
   14004c9f7:	test   DWORD PTR [rdi-0x4a],0x813470fc
   14004c9fe:	js     0x14004c9aa
   14004ca00:	cdq    
   14004ca01:	or     al,0xfb
   14004ca03:	test   al,0x93
   14004ca05:	jbe    0x14004ca13
   14004ca07:	ror    BYTE PTR [rsi+0x67],1
   14004ca0a:	and    eax,ecx
   14004ca0c:	(bad)  
   14004ca0d:	cmc    
   14004ca0e:	sub    esi,DWORD PTR [rax-0x1d]
   14004ca11:	mov    ebx,0xe098b02f
   14004ca16:	rex.WRX cmp rsi,r9
   14004ca19:	mov    BYTE PTR [rdx-0x2e],dh
   14004ca1c:	mov    ah,0xb6
   14004ca1e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ca1f:	rex.RB (bad) 
   14004ca21:	leave  
   14004ca22:	xor    DWORD PTR [rax-0x53],edx
   14004ca25:	add    eax,0xbfdcc9a1
   14004ca2a:	stos   BYTE PTR es:[rdi],al
   14004ca2b:	cdq    
   14004ca2c:	in     al,dx
   14004ca2d:	xchg   esi,eax
   14004ca2e:	cmc    
   14004ca2f:	(bad)  
   14004ca30:	(bad)  
   14004ca31:	scas   al,BYTE PTR es:[rdi]
   14004ca32:	ret    0x8330
   14004ca35:	fnsave [rdx+0x5e]
   14004ca38:	iret   
   14004ca39:	movabs ds:0x3cb90ab57ca2c402,al
   14004ca42:	lahf   
   14004ca43:	out    dx,al
   14004ca44:	outs   dx,BYTE PTR ds:[rsi]
   14004ca45:	pop    rax
   14004ca46:	imul   r11,QWORD PTR [r10+0x4e],0xffffffffffffff9a
   14004ca4b:	cmp    cl,BYTE PTR [rax+rax*1]
   14004ca4e:	cmp    BYTE PTR [rbx],dh
   14004ca50:	pop    rsp
   14004ca51:	pushf  
   14004ca52:	mov    dl,0x57
   14004ca54:	xchg   edi,eax
   14004ca55:	in     eax,0x39
   14004ca57:	cmp    ah,al
   14004ca59:	and    DWORD PTR [rbp-0x16],esi
   14004ca5c:	add    eax,0x8dc0f714
   14004ca61:	ret    0x173b
   14004ca64:	sub    BYTE PTR [rbx-0x6f95118],cl
   14004ca6a:	out    dx,eax
   14004ca6b:	push   rdi
   14004ca6c:	xchg   edi,eax
   14004ca6d:	fimul  DWORD PTR [rsi-0x52]
   14004ca70:	(bad)  
   14004ca71:	rex.WR scas al,BYTE PTR es:[rdi]
   14004ca73:	adc    eax,0x9325a39c
   14004ca78:	rex.R jae 0x14004cab1
   14004ca7b:	test   ebp,ebx
   14004ca7d:	sti    
   14004ca7e:	(bad)  
   14004ca7f:	sbb    dl,ch
   14004ca81:	rcl    BYTE PTR [rbx+0x68e10030],1
   14004ca87:	sbb    al,0x9c
   14004ca89:	xchg   edi,eax
   14004ca8a:	push   rcx
   14004ca8b:	cs pop rcx
   14004ca8d:	fist   WORD PTR [rip+0xffffffff9ac018ba]        # 0xdac4e34d
   14004ca93:	rex.WR xlat BYTE PTR ds:[rbx]
   14004ca95:	out    0x7f,al
   14004ca97:	int    0x1d
   14004ca99:	icebp  
   14004ca9a:	or     eax,0xe629cd5d
   14004ca9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004caa0:	add    BYTE PTR [rax+0x4b1fc636],ch
   14004caa6:	adc    WORD PTR [rbp+0x5dd22937],cx
   14004caad:	shr    DWORD PTR [rcx],1
   14004caaf:	and    DWORD PTR ss:[rax-0x4b],esp
   14004cab3:	add    bl,BYTE PTR [rsp+rbp*4]
   14004cab6:	pop    rdx
   14004cab7:	fimul  WORD PTR [rsi-0x7a4820a5]
   14004cabd:	adc    BYTE PTR [rdi+0x2d],cl
   14004cac0:	movsxd ebx,DWORD PTR [rdx+0x541ca4b7]
   14004cac6:	xchg   ebx,eax
   14004cac7:	pop    rdx
   14004cac8:	and    DWORD PTR [rax-0xdeb35d8],ebp
   14004cace:	rex.WB push r15
   14004cad0:	rex.X xchg esi,eax
   14004cad2:	movabs al,ds:0x508dd2023755c9d
   14004cadb:	mov    ah,0x1e
   14004cadd:	iret   
   14004cade:	mov    esp,0x5336a4e5
   14004cae3:	jmp    0x1bbcf4090
   14004cae8:	in     al,0x11
   14004caea:	sbb    DWORD PTR [rdi+rbx*2],esp
   14004caed:	(bad)  
   14004caee:	xor    eax,0xea4f1ef4
   14004caf3:	push   rdi
   14004caf4:	rex.WR jg 0x14004cab7
   14004caf7:	(bad)  
   14004caf8:	mov    esi,0xa804b15c
   14004cafd:	rcl    BYTE PTR [rdx+rsi*8],1
   14004cb00:	adc    DWORD PTR [rcx+0x39],0x63
   14004cb04:	mov    ecx,0x537bd00e
   14004cb09:	fst    DWORD PTR [rip+0xffffffff8914aba2]        # 0xc91976b1
   14004cb0f:	pop    rax
   14004cb10:	add    eax,0xb1e565a7
   14004cb15:	fidiv  WORD PTR [rip+0x216ab733]        # 0x1616f824e
   14004cb1b:	mov    ah,0xca
   14004cb1d:	repnz mov esp,0xb55b7c9e
   14004cb23:	mov    esp,0x19ed9d1d
   14004cb28:	and    DWORD PTR [rsp+riz*8],eax
   14004cb2b:	(bad)  
   14004cb2c:	cwde   
   14004cb2d:	or     BYTE PTR [rdi-0x1d],al
   14004cb30:	(bad)  
   14004cb31:	movabs eax,ds:0xc3ce8c97eb454a30
   14004cb3a:	cmp    al,0x16
   14004cb3c:	add    dh,bl
   14004cb3e:	rex.WRX add spl,r10b
   14004cb41:	rex.X (bad) 
   14004cb43:	jo     0x14004cb79
   14004cb45:	add    DWORD PTR [rax],eax
   14004cb47:	inc    BYTE PTR [rdx]
   14004cb49:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004cb4b:	test   eax,0x3758e63b
   14004cb50:	rcl    ch,1
   14004cb52:	cdq    
   14004cb53:	(bad)
   14004cb56:	js     0x14004cb83
   14004cb58:	and    ah,BYTE PTR [rcx+0x77]
   14004cb5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004cb5c:	movabs al,ds:0x43589da85a8993a5
   14004cb65:	cmp    ebx,eax
   14004cb67:	(bad)  
   14004cb68:	out    0xd2,eax
   14004cb6a:	lods   eax,DWORD PTR ds:[rsi]
   14004cb6b:	movabs gs:0xb5860a10a656e3d,al
   14004cb75:	rex.X icebp 
   14004cb77:	push   0x24
   14004cb79:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004cb7a:	(bad)  
   14004cb7b:	adc    DWORD PTR [rdi+0x17],0xffffffad
   14004cb7f:	rex.RXB adc r9b,BYTE PTR [r10-0x44b0e5f6]
   14004cb86:	push   rdx
   14004cb87:	in     eax,dx
   14004cb88:	jmp    0xf42af18b
   14004cb8d:	and    al,0xb1
   14004cb8f:	rex.WX push rdx
   14004cb91:	(bad)  
   14004cb92:	add    al,0x80
   14004cb94:	or     dh,BYTE PTR [rdi]
   14004cb96:	rex.WX cmp al,0xdd
   14004cb99:	rex.WX mov cl,0xb9
   14004cb9c:	(bad)  
   14004cb9d:	hlt    
   14004cb9e:	jp     0x14004cb48
   14004cba0:	int3   
   14004cba1:	movabs ds:0x3d5bacb96a04f744,al
   14004cbaa:	sahf   
   14004cbab:	(bad)  
   14004cbac:	es (bad) 
   14004cbae:	mov    ebp,0xf2cbc1cc
   14004cbb3:	pop    rsi
   14004cbb4:	retf   0x7986
   14004cbb7:	iret   
   14004cbb8:	or     ebp,DWORD PTR [rsi-0x44]
   14004cbbb:	sbb    dh,0xf
   14004cbbe:	jp     0x14004cb5f
   14004cbc0:	test   eax,0x4671c021
   14004cbc5:	rex.WRXB sbb r14,r10
   14004cbc8:	test   DWORD PTR [rcx-0x44],ecx
   14004cbcb:	je     0x14004cbbd
   14004cbcd:	test   al,0x3c
   14004cbcf:	lahf   
   14004cbd0:	xlat   BYTE PTR ds:[rbx]
   14004cbd1:	rex.WR std 
   14004cbd3:	cdq    
   14004cbd4:	xchg   DWORD PTR [rdx],esp
   14004cbd6:	or     BYTE PTR [rip+0xffffffffaf302140],ch        # 0xef34ed1c
   14004cbdc:	add    al,0x40
   14004cbde:	cmp    eax,0x423407e4
   14004cbe3:	(bad)  
   14004cbe4:	mov    esi,0xa4b748a0
   14004cbe9:	mov    edx,0x147889bb
   14004cbee:	(bad)  
   14004cbef:	mov    edi,0xe9b23367
   14004cbf4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004cbf5:	movabs eax,ds:0xdb5298e8ac3b4001
   14004cbfe:	rex.WB or rax,0xffffffffe8c574c6
   14004cc04:	outs   dx,DWORD PTR ds:[rsi]
   14004cc05:	sub    eax,0xdd28fe90
   14004cc0a:	or     BYTE PTR [rsi],ch
   14004cc0c:	mov    BYTE PTR [rax],ah
   14004cc0e:	rex.WX (bad) 
   14004cc10:	(bad)  
   14004cc11:	add    ah,BYTE PTR [rbx+rbx*8-0x5c]
   14004cc15:	(bad)  
   14004cc16:	nop
   14004cc17:	xchg   ebp,eax
   14004cc18:	push   rcx
   14004cc19:	movabs eax,ds:0x58115f9e8d32cbc0
   14004cc22:	(bad)  
   14004cc23:	push   rcx
   14004cc24:	mov    eax,0x674941a7
   14004cc29:	push   rsi
   14004cc2a:	add    al,0x9b
   14004cc2c:	lods   al,BYTE PTR ds:[rsi]
   14004cc2d:	xchg   DWORD PTR [rbx+0xce5a364],edi
   14004cc33:	and    DWORD PTR [rax-0x52],ecx
   14004cc36:	pop    rcx
   14004cc37:	and    DWORD PTR [rcx+rdx*1],edx
   14004cc3a:	or     dh,BYTE PTR [rdx]
   14004cc3c:	adc    BYTE PTR [rdi-0x4d6a362a],ah
   14004cc42:	(bad)  
   14004cc43:	mov    edi,0x8496d688
   14004cc48:	(bad)  
   14004cc49:	mov    esi,esi
   14004cc4b:	stos   DWORD PTR es:[rdi],eax
   14004cc4c:	add    cl,BYTE PTR [rcx+0x15]
   14004cc4f:	ins    BYTE PTR es:[rdi],dx
   14004cc50:	scas   al,BYTE PTR es:[rdi]
   14004cc51:	shl    ch,1
   14004cc53:	repnz lea eax,[rax-0x79]
   14004cc57:	ja     0x14004cbf8
   14004cc59:	adc    eax,0x2f322419
   14004cc5e:	pop    rax
   14004cc5f:	mov    ebx,0x71bdaf0c
   14004cc64:	adc    al,BYTE PTR [rdi+0x3fa1d08f]
   14004cc6a:	mov    ebx,0x2f0a1025
   14004cc6f:	cmp    al,0x21
   14004cc71:	xor    BYTE PTR [rdi+0x4],ch
   14004cc74:	rex and eax,0xcc633f2
   14004cc7a:	repnz fwait
   14004cc7c:	and    DWORD PTR [rdi+rbx*1],0xcd122001
   14004cc83:	pushf  
   14004cc84:	pop    rbx
   14004cc85:	scas   eax,DWORD PTR es:[rdi]
   14004cc86:	fild   DWORD PTR [rdx-0x1bd2a29b]
   14004cc8c:	jo     0x14004ccf4
   14004cc8e:	out    dx,eax
   14004cc8f:	mov    al,0x0
   14004cc91:	and    DWORD PTR [rdx+0xcbd2134],edx
   14004cc97:	stos   DWORD PTR es:[rdi],eax
   14004cc98:	(bad)  
   14004cc99:	pop    rbx
   14004cc9a:	stos   DWORD PTR es:[rdi],eax
   14004cc9b:	mov    ch,0x60
   14004cc9d:	jne    0x14004ccc2
   14004cc9f:	cmp    al,0x6b
   14004cca1:	sbb    DWORD PTR [rcx],0xb857bae6
   14004cca7:	rex.WR
   14004cca8:	mov    rcx,0x13126e55
   14004ccaf:	pop    rbx
   14004ccb0:	and    eax,0xa0bf7995
   14004ccb5:	in     al,0x7b
   14004ccb7:	(bad)  
   14004ccb8:	mov    bl,0xb2
   14004ccba:	(bad)  
   14004ccbb:	push   0xffffffffffffff81
   14004ccbd:	sbb    BYTE PTR [rbp-0x7d86c944],ah
   14004ccc3:	xchg   BYTE PTR [rdx+0x37],cl
   14004ccc6:	scas   al,BYTE PTR es:[rdi]
   14004ccc7:	fbld   TBYTE PTR [rbx-0x60]
   14004ccca:	int3   
   14004cccb:	retf   
   14004cccc:	or     BYTE PTR [rdx],r10b
   14004cccf:	sbb    bl,bl
   14004ccd1:	lods   al,BYTE PTR ds:[rsi]
   14004ccd2:	add    eax,0xc2112278
   14004ccd7:	lock rol BYTE PTR [rbx-0x6ead3d59],1
   14004ccde:	xchg   edx,eax
   14004ccdf:	fcom   QWORD PTR [rax]
   14004cce1:	mov    esi,0x8f703042
   14004cce6:	cli    
   14004cce7:	in     al,0x8d
   14004cce9:	(bad)  
   14004ccea:	std    
   14004cceb:	mov    esp,0xdefce065
   14004ccf0:	in     eax,0xf8
   14004ccf2:	int    0xfe
   14004ccf4:	(bad)  
   14004ccf5:	xor    BYTE PTR [rbx+rbp*1+0x152e2c58],bl
   14004ccfc:	movabs eax,ds:0xf5a2e50470a10470
   14004cd05:	pop    rbx
   14004cd06:	xchg   bl,dh
   14004cd08:	rex.WRX or spl,r9b
   14004cd0b:	sbb    eax,DWORD PTR [rcx]
   14004cd0d:	nop
   14004cd0e:	jmp    0xf0acc9ed
   14004cd13:	add    al,0xfc
   14004cd15:	sbb    BYTE PTR [rbx-0x78],ah
   14004cd18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004cd19:	pop    rdx
   14004cd1a:	adc    BYTE PTR [rsi-0x139c723c],cl
   14004cd20:	repz out dx,eax
   14004cd22:	sub    ecx,esp
   14004cd24:	pop    rbp
   14004cd25:	and    eax,DWORD PTR [rdx-0x52483520]
   14004cd2b:	sar    DWORD PTR [rdx+0x2c8a97b3],0x6a
   14004cd32:	jbe    0x14004cd0e
   14004cd34:	(bad)  
   14004cd35:	movabs eax,ds:0x3d2b3ddcf085060b
   14004cd3e:	xchg   esp,eax
   14004cd3f:	adc    BYTE PTR [rsi-0x57],bl
   14004cd42:	xchg   edx,eax
   14004cd43:	test   eax,0x5f16d13d
   14004cd48:	(bad)  
   14004cd49:	jp     0x14004cd68
   14004cd4b:	loopne 0x14004ccfb
   14004cd4d:	(bad)  
   14004cd4e:	sub    BYTE PTR [rbx],cl
   14004cd50:	mov    bl,0xde
   14004cd52:	call   0x1177b67dc
   14004cd57:	sbb    DWORD PTR [rax+0x4d4bf5de],0xffffffab
   14004cd5e:	mov    gs,WORD PTR [rcx+0x5731b57b]
   14004cd64:	mov    edx,0x412736d5
   14004cd69:	and    eax,0xa8337714
   14004cd6e:	(bad)  
   14004cd6f:	xor    eax,0x9b342d46
   14004cd74:	fistp  WORD PTR [rax]
   14004cd76:	(bad)  
   14004cd77:	mov    al,0xdc
   14004cd79:	adc    ecx,DWORD PTR [rsi-0x26]
   14004cd7c:	out    0x49,eax
   14004cd7e:	pop    rdi
   14004cd7f:	out    dx,eax
   14004cd80:	lahf   
   14004cd81:	sbb    dh,BYTE PTR [rbx-0x5f]
   14004cd84:	ret    0xf981
   14004cd87:	(bad)  
   14004cd88:	(bad)  
   14004cd89:	iret   
   14004cd8a:	(bad)  
   14004cd8b:	lods   al,BYTE PTR ds:[rsi]
   14004cd8c:	adc    al,0x21
   14004cd8e:	(bad)  
   14004cd8f:	push   0xffffffff890cd27d
   14004cd94:	rex.RX ret 0x7b38
   14004cd98:	in     eax,0x12
   14004cd9a:	cmp    al,0xb5
   14004cd9c:	not    DWORD PTR [rip+0xffffffffc1994d4c]        # 0x1019e1aee
   14004cda2:	ds mov ebp,0x114284cf
   14004cda8:	test   BYTE PTR [rdx],ah
   14004cdaa:	jno    0x14004cd40
   14004cdac:	mov    edx,esi
   14004cdae:	and    eax,0x3003cec7
   14004cdb3:	sahf   
   14004cdb4:	cmp    esi,edx
   14004cdb6:	int3   
   14004cdb7:	iret   
   14004cdb8:	ins    DWORD PTR es:[rdi],dx
   14004cdb9:	cdq    
   14004cdba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004cdbb:	sbb    dh,bl
   14004cdbd:	rex.X add BYTE PTR [rax-0x5c80031d],dil
   14004cdc4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004cdc5:	jnp    0x14004cdab
   14004cdc7:	jne    0x1306e7df0
   14004cdcd:	(bad)  
   14004cdce:	addr32 int3 
   14004cdd0:	xchg   ecx,eax
   14004cdd1:	xor    al,0x0
   14004cdd3:	cmp    bh,ah
   14004cdd5:	int3   
   14004cdd6:	cs pop rsp
   14004cdd8:	jno    0x14004ce23
   14004cdda:	scas   eax,DWORD PTR es:[rdi]
   14004cddb:	rex.WX adc sil,BYTE PTR [rdi-0x5fe5e719]
   14004cde2:	mov    dh,BYTE PTR [rsi-0x69]
   14004cde5:	(bad)  
   14004cde6:	int3   
   14004cde7:	rex.X sub BYTE PTR [rsi-0x46],bpl
   14004cdeb:	(bad)  
   14004cdec:	and    ch,dh
   14004cdee:	push   rcx
   14004cdef:	mov    bl,0x5f
   14004cdf1:	or     eax,0xb0666a3a
   14004cdf6:	jnp    0x14004cda4
   14004cdf8:	ret    0x1f13
   14004cdfb:	sub    eax,ebp
   14004cdfd:	and    esp,DWORD PTR [rcx]
   14004cdff:	mov    ch,0x52
   14004ce01:	adc    al,0xd3
   14004ce03:	lahf   
   14004ce04:	(bad)  
   14004ce05:	rex.WB stos QWORD PTR es:[rdi],rax
   14004ce07:	(bad)  
   14004ce08:	xlat   BYTE PTR ds:[rbx]
   14004ce09:	movabs eax,ds:0xd56b89c40c54468f
   14004ce12:	retf   0x6881
   14004ce15:	movsxd eax,DWORD PTR [rbp-0x2982113f]
   14004ce1b:	scas   al,BYTE PTR es:[rdi]
   14004ce1c:	shl    DWORD PTR [rsi-0xa],cl
   14004ce1f:	sub    edx,DWORD PTR [rdi]
   14004ce21:	scas   eax,DWORD PTR es:[rdi]
   14004ce22:	or     esp,DWORD PTR [rsi+rbp*4]
   14004ce25:	(bad)  
   14004ce26:	(bad)  
   14004ce27:	hlt    
   14004ce28:	sti    
   14004ce29:	sub    eax,DWORD PTR [rdi+rbp*4]
   14004ce2c:	pop    rdx
   14004ce2d:	sub    DWORD PTR [rbp+0x689ef23f],edx
   14004ce33:	rex.X fistp QWORD PTR [rbx+0x335ae497]
   14004ce3a:	jmp    0x189386843
   14004ce3f:	in     al,dx
   14004ce40:	jns    0x14004ce38
   14004ce42:	xor    eax,0xb00d235b
   14004ce47:	push   rax
   14004ce48:	or     BYTE PTR [rcx-0x449af3b8],ah
   14004ce4e:	cmp    esi,DWORD PTR [rax-0x1b]
   14004ce51:	jl     0x14004cdec
   14004ce53:	(bad)  
   14004ce54:	xor    bh,ah
   14004ce56:	add    ah,BYTE PTR [rax+0x589f24d2]
   14004ce5c:	xor    al,BYTE PTR [rbx-0x54f9db90]
   14004ce62:	(bad)  
   14004ce63:	outs   dx,DWORD PTR ds:[rsi]
   14004ce64:	and    edi,DWORD PTR [rax+0x6fccc651]
   14004ce6a:	(bad)  
   14004ce6b:	es jno 0x14004ce61
   14004ce6e:	mov    ch,0x9b
   14004ce70:	frstor [rax-0x5219161]
   14004ce76:	imul   ebx,DWORD PTR [rsi],0x9bb54fdd
   14004ce7c:	repz data16 adc al,0x5f
   14004ce80:	xlat   BYTE PTR ds:[rbx]
   14004ce81:	push   rax
   14004ce82:	mov    dl,0xf1
   14004ce84:	stos   BYTE PTR es:[rdi],al
   14004ce85:	(bad)  
   14004ce86:	and    BYTE PTR [rip+0xffffffffe2b0ef5c],bl        # 0x122b5bde8
   14004ce8c:	mov    edi,0x8d0b6bea
   14004ce91:	in     eax,dx
   14004ce92:	sahf   
   14004ce93:	push   rdi
   14004ce94:	adc    eax,0x3075da0e
   14004ce99:	jb     0x14004ceb8
   14004ce9b:	mov    dl,BYTE PTR [rip+0xffffffffb91f5200]        # 0xf92420a1
   14004cea1:	push   rdx
   14004cea2:	sbb    al,ch
   14004cea4:	not    ebx
   14004cea6:	enter  0xe12e,0xa9
   14004ceaa:	lock loopne 0x14004ce89
   14004cead:	or     eax,0x87ab51d6
   14004ceb2:	adc    esi,DWORD PTR [rdi]
   14004ceb4:	xchg   ebx,ebx
   14004ceb6:	jmp    0x14004cf2b
   14004ceb8:	movabs eax,cs:0x9bfa38430ba24b82
   14004cec2:	xchg   esi,eax
   14004cec3:	adc    DWORD PTR [rbx],edx
   14004cec5:	test   eax,0xe2edd4b8
   14004ceca:	mov    esp,0x70c85365
   14004cecf:	push   rdx
   14004ced0:	rex.WRX fcom QWORD PTR [rbx]
   14004ced3:	pop    rdi
   14004ced4:	(bad)  
   14004ced5:	in     al,0x28
   14004ced7:	xchg   BYTE PTR [rbp+0x6271dacb],dl
   14004cedd:	jo     0x14004cef3
   14004cedf:	scas   eax,DWORD PTR es:[rdi]
   14004cee0:	or     eax,0x602d449c
   14004cee5:	movabs eax,ds:0x85594d28c385810
   14004ceee:	int3   
   14004ceef:	mov    ecx,ecx
   14004cef1:	rex.X push rbp
   14004cef3:	sbb    BYTE PTR [rbx+rdi*4],dh
   14004cef6:	test   al,0xb4
   14004cef8:	nop
   14004cef9:	rex.RXB sub al,0x99
   14004cefc:	and    DWORD PTR [rsi],edi
   14004cefe:	mov    edi,0x5a2b337f
   14004cf03:	add    DWORD PTR [rsi+0x1],ecx
   14004cf06:	not    DWORD PTR gs:[rsi-0x753e9209]
   14004cf0d:	sahf   
   14004cf0e:	push   rsi
   14004cf0f:	mov    ch,0x88
   14004cf11:	pop    rbx
   14004cf12:	rex.WRX (bad) 
   14004cf14:	pop    rdi
   14004cf15:	stc    
   14004cf16:	rex.WR movabs rax,0x6ced2f73c98742a1
   14004cf20:	(bad)  
   14004cf21:	rex.RB ficomp DWORD PTR [r10+0x52]
   14004cf25:	mov    bh,al
   14004cf27:	and    bh,dh
   14004cf29:	jne    0x14004cee3
   14004cf2b:	js     0x14004cf20
   14004cf2d:	fmul   DWORD PTR [rax-0x1c6e24e0]
   14004cf33:	cmp    edi,edx
   14004cf35:	lahf   
   14004cf36:	adc    eax,0x41c171ad
   14004cf3b:	fldcw  WORD PTR [rax+0x1b]
   14004cf3e:	(bad)
   14004cf41:	xchg   ebp,eax
   14004cf42:	mov    esi,0x5257ec26
   14004cf47:	lahf   
   14004cf48:	sbb    al,0xe3
   14004cf4a:	push   rdi
   14004cf4b:	nop
   14004cf4c:	rex.WR mov cl,0x20
   14004cf4f:	in     eax,dx
   14004cf50:	stos   DWORD PTR es:[rdi],eax
   14004cf51:	push   rax
   14004cf52:	lahf   
   14004cf53:	mov    eax,0x75417b66
   14004cf58:	stc    
   14004cf59:	xor    DWORD PTR [rcx+0x7f],edi
   14004cf5c:	movabs ds:0x7359e769b23091,al
   14004cf65:	sbb    eax,0x969f69ad
   14004cf6a:	rex.WXB adc al,0x8b
   14004cf6d:	and    eax,0x45c6c6e4
   14004cf72:	jrcxz  0x14004cf7a
   14004cf74:	xchg   edx,esi
   14004cf76:	rex.R push 0xffffffffffffffd9
   14004cf79:	scas   al,BYTE PTR es:[rdi]
   14004cf7a:	movabs ds:0xf5f92fa5062e04ca,eax
   14004cf83:	stos   DWORD PTR es:[rdi],eax
   14004cf84:	jl     0x14004cfe7
   14004cf86:	adc    bl,BYTE PTR [rdi-0x7]
   14004cf89:	jg     0x14004d00a
   14004cf8b:	test   BYTE PTR [rbx+0x44],al
   14004cf8e:	or     BYTE PTR [rax],bl
   14004cf90:	mov    al,BYTE PTR [rax-0x1a]
   14004cf93:	add    BYTE PTR [rax],al
   14004cf95:	rex.WX push rbx
   14004cf97:	jrcxz  0x14004cf31
   14004cf99:	sub    al,0xf8
   14004cf9b:	scas   al,BYTE PTR es:[rdi]
   14004cf9c:	cmp    DWORD PTR [rax],edi
   14004cf9e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004cf9f:	or     ecx,DWORD PTR [rbx-0x57ff6634]
   14004cfa5:	popf   
   14004cfa6:	cld    
   14004cfa7:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004cfa9:	(bad)  
   14004cfaa:	push   rbp
   14004cfab:	adc    eax,0xdd6e43a4
   14004cfb0:	mov    esp,0x3a6f171a
   14004cfb5:	sar    edi,cl
   14004cfb7:	rex.B jmp 0x14004cfd8
   14004cfba:	sbb    ebx,0x61
   14004cfbd:	cmp    ebx,edx
   14004cfbf:	ror    al,cl
   14004cfc1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004cfc2:	adc    ebp,DWORD PTR [rax+0x6f]
   14004cfc5:	imul   eax,DWORD PTR [rdx-0x5a],0x53748129
   14004cfcc:	pop    rsp
   14004cfcd:	cld    
   14004cfce:	adc    ah,BYTE PTR ss:[rdi]
   14004cfd1:	xchg   esi,eax
   14004cfd3:	xor    BYTE PTR [rdx+0x70d0c09f],bl
   14004cfd9:	(bad)  
   14004cfda:	(bad)  
   14004cfdb:	xchg   ebx,esi
   14004cfdd:	sbb    BYTE PTR [rsi+rbx*1],bl
   14004cfe0:	ret    
   14004cfe1:	pop    rax
   14004cfe2:	jle    0x14004cf96
   14004cfe4:	movabs ds:0x5712af6acfc1a120,al
   14004cfed:	xchg   ecx,eax
   14004cfee:	(bad)  
   14004cfef:	test   BYTE PTR [rax-0x1a1efd54],ah
   14004cff5:	pop    rbx
   14004cff6:	jnp    0x14004d072
   14004cff8:	std    
   14004cff9:	cmp    dh,bl
   14004cffb:	pushf  
   14004cffc:	je     0x14004d04d
   14004cffe:	and    BYTE PTR [rcx],al
   14004d000:	int    0x99
   14004d002:	adc    al,0x92
   14004d004:	mov    DWORD PTR [rax],ebp
   14004d006:	(bad)  
   14004d007:	xor    ecx,DWORD PTR [rcx+0x74]
   14004d00a:	mov    ah,0xa6
   14004d00c:	adc    DWORD PTR [rcx+0x499cd084],ecx
   14004d012:	push   rsi
   14004d013:	mov    eax,0x1851fab8
   14004d018:	lahf   
   14004d019:	ret    0xc4f8
   14004d01c:	adc    al,0xa
   14004d01e:	jrcxz  0x14004cfee
   14004d020:	(bad)  
   14004d021:	fsubr  QWORD PTR [rax+0x1]
   14004d024:	test   DWORD PTR [rcx-0x2fa7a8d7],ecx
   14004d02a:	stos   DWORD PTR es:[rdi],eax
   14004d02b:	xor    BYTE PTR [rsi-0x63],0xba
   14004d02f:	shl    BYTE PTR [rsi+0x4d],0xa
   14004d033:	ins    DWORD PTR es:[rdi],dx
   14004d034:	xchg   BYTE PTR [rcx],ch
   14004d036:	movsxd ecx,DWORD PTR [rdi+rax*4]
   14004d039:	(bad)  
   14004d03a:	rex.WRX loop 0x14004d048
   14004d03d:	idiv   DWORD PTR [rsi+0x4f]
   14004d040:	xchg   esi,eax
   14004d041:	lods   al,BYTE PTR ds:[rsi]
   14004d042:	and    al,BYTE PTR [rax]
   14004d044:	cmp    cl,0x2b
   14004d047:	add    al,0xe6
   14004d049:	add    BYTE PTR [rdx+rdi*2-0x61],r10b
   14004d04e:	(bad)  
   14004d04f:	(bad)  
   14004d050:	and    rdx,QWORD PTR [rdx]
   14004d053:	mov    bl,0x75
   14004d055:	or     cl,BYTE PTR [rdx+0x5a]
   14004d058:	xor    ebp,DWORD PTR [rbp-0x262fe7de]
   14004d05e:	xchg   esi,eax
   14004d05f:	shr    DWORD PTR [rbp+0x37],0x5e
   14004d063:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d064:	mov    ebx,0xc6316adb
   14004d069:	rcl    bl,1
   14004d06b:	fld    QWORD PTR [rdx+0x3a34b68e]
   14004d071:	pop    rdx
   14004d072:	shr    eax,cl
   14004d074:	push   0xd7b426d
   14004d079:	fisubr DWORD PTR [rax+0x36]
   14004d07c:	xor    DWORD PTR [rcx],edi
   14004d07e:	push   rbp
   14004d07f:	(bad)  
   14004d080:	fwait
   14004d081:	mov    DWORD PTR [rsi+0x70],0x8e08d8e4
   14004d088:	sbb    al,0x1f
   14004d08a:	shl    eax,0xb0
   14004d08d:	pop    rsp
   14004d08e:	movabs eax,ds:0x6d519b45ae4692a6
   14004d097:	in     eax,dx
   14004d098:	pop    rdi
   14004d099:	xchg   edi,eax
   14004d09a:	push   rbx
   14004d09b:	(bad)  
   14004d09c:	mov    bl,0x6
   14004d09e:	sub    bh,BYTE PTR [rsi-0x8]
   14004d0a1:	rex.XB
   14004d0a2:	fwait
   14004d0a3:	(bad)  
   14004d0a4:	fcomp  QWORD PTR [rcx+rcx*2-0x72d25c5e]
   14004d0ab:	(bad)  
   14004d0ac:	mov    dh,0x34
   14004d0ae:	cmp    bl,dl
   14004d0b0:	ror    BYTE PTR [rax-0x1c2919ba],cl
   14004d0b6:	int3   
   14004d0b7:	lea    ecx,[rbp-0x71c5c8dd]
   14004d0bd:	xchg   ecx,eax
   14004d0be:	mov    cl,0x71
   14004d0c0:	in     al,0x46
   14004d0c2:	(bad)  
   14004d0c3:	xor    BYTE PTR [rax],bh
   14004d0c5:	cmp    al,0x66
   14004d0c7:	xchg   esp,eax
   14004d0c8:	adc    DWORD PTR [rdx],esp
   14004d0ca:	rex.WXB mov r11b,0x1a
   14004d0cd:	je     0x14004d14b
   14004d0cf:	out    dx,eax
   14004d0d0:	mov    cl,0xdf
   14004d0d2:	loopne 0x14004d065
   14004d0d4:	sbb    eax,0x890a48fb
   14004d0d9:	(bad)  
   14004d0da:	imul   ebp,DWORD PTR [rcx+0x1e],0x4c05938a
   14004d0e1:	lea    ecx,[rdi-0x77c45526]
   14004d0e7:	cmp    DWORD PTR [rdx+0x4f],ebx
   14004d0ea:	loopne 0x14004d080
   14004d0ec:	or     eax,DWORD PTR [rax]
   14004d0ee:	ja     0x14004d0a8
   14004d0f0:	out    dx,eax
   14004d0f1:	adc    eax,0x8e1fc858
   14004d0f6:	adc    BYTE PTR es:[rbx+0x66],cl
   14004d0fa:	jl     0x14004d08a
   14004d0fc:	mov    ah,0x3d
   14004d0fe:	mov    edx,ds
   14004d100:	add    eax,0x786f87c0
   14004d105:	sub    edi,DWORD PTR [rdx]
   14004d107:	fcmovnbe st,st(2)
   14004d109:	xor    al,BYTE PTR [rcx]
   14004d10b:	cmp    al,0x1e
   14004d10e:	shl    edx,0xee
   14004d111:	push   rsi
   14004d112:	sub    al,0xeb
   14004d114:	outs   dx,BYTE PTR ds:[rsi]
   14004d115:	shl    DWORD PTR [rdx-0xc0778d2],0x1d
   14004d11c:	movabs ds:0x74bc49c6f6bc09f9,eax
   14004d125:	lock sbb BYTE PTR [rsi+0xe],cl
   14004d129:	lea    edx,[rcx]
   14004d12b:	mov    bl,0xb6
   14004d12d:	sbb    dl,BYTE PTR [rcx+0x2cd7f599]
   14004d133:	(bad)  
   14004d134:	mov    dh,0xaa
   14004d136:	mov    esp,0xe7376077
   14004d13b:	cmp    ebx,ebx
   14004d13d:	xor    ch,al
   14004d13f:	jmp    0x1975417ae
   14004d144:	or     edx,DWORD PTR [rdx-0x37]
   14004d147:	cwde   
   14004d148:	jg     0x14004d14f
   14004d14a:	repz add al,0xb9
   14004d14d:	mov    cl,0x71
   14004d14f:	pushf  
   14004d150:	sbb    al,0xca
   14004d152:	jrcxz  0x14004d138
   14004d154:	lock sbb BYTE PTR [rsi],al
   14004d157:	(bad)  
   14004d158:	(bad)  
   14004d159:	xor    BYTE PTR [rbp+0x59],ah
   14004d15c:	(bad)  
   14004d15d:	rcl    BYTE PTR [rbx],1
   14004d15f:	jl     0x14004d11b
   14004d161:	mov    edi,eax
   14004d163:	xchg   edi,eax
   14004d164:	jg     0x14004d159
   14004d166:	add    ebx,DWORD PTR [rdx+rdi*1]
   14004d169:	cmp    al,0x8
   14004d16b:	ret    
   14004d16c:	out    0x80,eax
   14004d16e:	(bad)  
   14004d16f:	or     ah,cl
   14004d171:	hlt    
   14004d172:	leave  
   14004d173:	rex.X (bad) 
   14004d175:	jge    0x14004d10a
   14004d177:	rol    al,1
   14004d179:	add    BYTE PTR [r15-0x62],spl
   14004d17d:	(bad)  
   14004d17e:	test   DWORD PTR [rsi],0xfc0042e6
   14004d184:	adc    ebp,DWORD PTR [rbx+riz*2]
   14004d187:	std    
   14004d188:	loope  0x14004d1d2
   14004d18a:	sbb    al,0xb1
   14004d18c:	push   rsp
   14004d18d:	(bad)  
   14004d18e:	jb     0x14004d114
   14004d190:	rex.WRB
   14004d191:	repz fwait
   14004d193:	jns    0x14004d1a9
   14004d195:	pop    rsp
   14004d196:	retf   
   14004d197:	fnstenv [rax+0x7b2e3976]
   14004d19d:	jmp    0x14004d1d8
   14004d19f:	mov    bh,al
   14004d1a1:	and    bl,BYTE PTR [rax-0x2f]
   14004d1a4:	ror    DWORD PTR [rdx-0x4ea4b41b],cl
   14004d1aa:	lods   al,BYTE PTR ds:[rsi]
   14004d1ab:	mov    ebx,0x85840895
   14004d1b0:	mov    ecx,edx
   14004d1b2:	cld    
   14004d1b3:	add    al,0x5e
   14004d1b5:	jp     0x14004d1ac
   14004d1b7:	sbb    BYTE PTR [rsi+0x3c],bl
   14004d1ba:	js     0x14004d1d0
   14004d1bc:	movabs ds:0x5330c11ea9a06a63,eax
   14004d1c5:	imul   esp,DWORD PTR [rcx-0x6638ead7],0xffffffcb
   14004d1cc:	(bad)  [rcx-0x65f8ba96]
   14004d1d2:	(bad)  
   14004d1d3:	add    cl,ch
   14004d1d5:	sub    esp,DWORD PTR [rcx]
   14004d1d7:	(bad)  
   14004d1d8:	cmp    cl,BYTE PTR [rsi+0x38634393]
   14004d1de:	cmp    DWORD PTR [rsi+rax*4],esi
   14004d1e1:	movabs ds:0xdfdd0d775d935c27,eax
   14004d1ea:	fistp  QWORD PTR [rbp-0x108eb8e]
   14004d1f0:	fisttp QWORD PTR [rsi]
   14004d1f2:	imul   edi,DWORD PTR [rip+0x473012d2],0x21        # 0x18734e4cb
   14004d1f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d1fa:	or     ah,BYTE PTR [rbx]
   14004d1fc:	jle    0x14004d191
   14004d1fe:	test   DWORD PTR [rsi],ebx
   14004d200:	sbb    bl,al
   14004d202:	xlat   BYTE PTR ds:[rbx]
   14004d203:	jmp    QWORD PTR [rcx+0x5a7d3669]
   14004d209:	cmp    BYTE PTR [rbp-0x1dd03ffe],ah
   14004d20f:	(bad)  
   14004d210:	or     al,BYTE PTR [rdi+0x10]
   14004d213:	rex.WXB mov r13b,0x58
   14004d216:	cmp    bl,BYTE PTR [rdi-0x6e501046]
   14004d21c:	(bad)  
   14004d21d:	or     al,0xce
   14004d21f:	mov    ecx,0x8cfabc28
   14004d224:	rex.WRX cld 
   14004d226:	leave  
   14004d227:	push   QWORD PTR [rsi+0x15]
   14004d22a:	(bad)  
   14004d22b:	pop    rdx
   14004d22c:	(bad)  [rcx+0x4e7656b3]
   14004d232:	mov    bl,0xe5
   14004d234:	repz (bad) 
   14004d236:	(bad)  
   14004d237:	mov    edx,0xa3cde082
   14004d23c:	ret    
   14004d23d:	shr    BYTE PTR [rdi-0x4b],cl
   14004d240:	rex or eax,0xa995fa14
   14004d246:	int    0x5a
   14004d248:	call   0x1b7a59f37
   14004d24d:	jne    0x14004d286
   14004d24f:	xchg   esi,eax
   14004d250:	jne    0x14004d209
   14004d252:	int3   
   14004d253:	test   al,0xed
   14004d255:	repz sbb DWORD PTR [rdi-0x71],eax
   14004d259:	out    0x70,eax
   14004d25b:	jb     0x14004d2c5
   14004d25d:	or     al,0x47
   14004d25f:	mov    cs,WORD PTR [rdi+0x2cee30a0]
   14004d265:	or     DWORD PTR [rsi],esp
   14004d267:	and    DWORD PTR [rbx-0x7c0d00f4],0x5f
   14004d26e:	loope  0x14004d1f9
   14004d270:	popf   
   14004d271:	mov    edi,0xc37de515
   14004d276:	add    esp,edx
   14004d278:	rex.RB loopne 0x14004d297
   14004d27b:	xchg   ebx,eax
   14004d27c:	stc    
   14004d27d:	and    DWORD PTR [rbx+rcx*8-0x577e82a],edx
   14004d284:	(bad)  
   14004d285:	div    ch
   14004d287:	call   FWORD PTR [rbp-0x1d]
   14004d28a:	scas   al,BYTE PTR es:[rdi]
   14004d28b:	movabs al,ds:0x31fa0bf000994e32
   14004d294:	(bad)  
   14004d295:	adc    BYTE PTR [rdi-0x49],cl
   14004d298:	push   rdi
   14004d299:	and    eax,0xf95f2cbf
   14004d29e:	cmp    al,0x9c
   14004d2a0:	add    ebp,DWORD PTR [rbx-0x31]
   14004d2a3:	pop    rcx
   14004d2a4:	mov    cl,BYTE PTR [rdi]
   14004d2a6:	pop    rsp
   14004d2a7:	mov    ebx,0x3a6d1719
   14004d2ac:	adc    ebp,DWORD PTR [rbx-0x37]
   14004d2af:	fs lahf 
   14004d2b1:	(bad)
   14004d2b4:	(bad)  
   14004d2b5:	or     eax,0x8773cf63
   14004d2ba:	jo     0x14004d2b4
   14004d2bc:	call   0xec00e971
   14004d2c1:	in     al,0xbb
   14004d2c3:	stos   DWORD PTR es:[rdi],eax
   14004d2c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d2c5:	sub    eax,0xe72b4a39
   14004d2ca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d2cb:	jne    0x14004d342
   14004d2cd:	data16 mov cl,0x61
   14004d2d0:	int    0x32
   14004d2d2:	sub    al,0xe9
   14004d2d4:	lock jae 0x14004d2ae
   14004d2d7:	rex.WRX
   14004d2d8:	rex.WRXB in al,0x46
   14004d2db:	(bad)  
   14004d2dc:	jno    0x14004d2c2
   14004d2de:	clc    
   14004d2df:	or     BYTE PTR [rsi+0x6461cb1e],cl
   14004d2e5:	(bad)  
   14004d2e6:	jno    0x14004d2bf
   14004d2e8:	or     esp,ebx
   14004d2ea:	push   rbx
   14004d2eb:	mov    eax,0x51db6bfb
   14004d2f0:	sbb    BYTE PTR [rdi-0x3f81bf54],bl
   14004d2f6:	mov    BYTE PTR [rcx],dl
   14004d2f8:	jo     0x14004d288
   14004d2fa:	mov    DWORD PTR [rcx-0x3bfe81ed],esi
   14004d300:	push   rbx
   14004d301:	(bad)  
   14004d302:	adc    al,0x3c
   14004d304:	and    eax,0xd052a002
   14004d309:	(bad)  
   14004d30a:	(bad)  
   14004d30c:	(bad)  
   14004d30d:	rex.WRX hlt 
   14004d30f:	rcl    DWORD PTR [rcx-0x61],1
   14004d312:	add    BYTE PTR [rax-0x2a],bl
   14004d315:	fisttp QWORD PTR [rdx+0x12f07f8f]
   14004d31b:	pop    rsp
   14004d31c:	jne    0x14004d2f7
   14004d31e:	pop    rdx
   14004d31f:	sub    al,0xeb
   14004d321:	outs   dx,BYTE PTR ds:[rsi]
   14004d322:	mov    ch,0x17
   14004d324:	pop    rdx
   14004d325:	rex.R js 0x14004d31b
   14004d328:	fdiv   DWORD PTR [rax]
   14004d32a:	(bad)  
   14004d32b:	jmp    QWORD PTR [rdi+0x6b8677f]
   14004d331:	rex ins DWORD PTR es:[rdi],dx
   14004d333:	ret    
   14004d334:	pop    rbp
   14004d335:	pop    rsi
   14004d336:	sahf   
   14004d337:	or     al,0x8a
   14004d339:	xor    DWORD PTR [rbp+rsi*1-0x7d1a4f59],esi
   14004d340:	xchg   ebp,eax
   14004d341:	call   0x1aabe8430
   14004d346:	mov    ecx,DWORD PTR [rbx]
   14004d348:	test   ecx,esi
   14004d34a:	sub    DWORD PTR [rcx+rsi*8+0x38de20e6],edi
   14004d351:	cmp    al,0x84
   14004d353:	lahf   
   14004d354:	cmp    al,0xb9
   14004d356:	(bad)  
   14004d357:	push   rbx
   14004d359:	cmp    ecx,DWORD PTR [rdi+0x56]
   14004d35c:	cmp    edx,eax
   14004d35e:	xor    ah,BYTE PTR [rcx]
   14004d360:	test   eax,0xd8c4c45c
   14004d365:	movabs al,ds:0xbace0a0b29f0ad
   14004d36e:	test   al,0x34
   14004d370:	(bad)  
   14004d371:	(bad)  
   14004d372:	(bad)  
   14004d373:	enter  0x1220,0x4b
   14004d377:	cwde   
   14004d378:	(bad)  
   14004d379:	add    DWORD PTR [rax-0x2c9bffbb],ebp
   14004d37f:	or     DWORD PTR [rdi+rdi*8-0x873226],edi
   14004d386:	mov    ch,0x9b
   14004d388:	(bad)  
   14004d389:	popf   
   14004d38a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d38b:	scas   eax,DWORD PTR es:[rdi]
   14004d38c:	adc    eax,0x1afb3ccf
   14004d391:	sahf   
   14004d392:	cmp    eax,0xa6a606f0
   14004d397:	fcom   QWORD PTR [rip+0xffffffffe2886a6e]        # 0x1228d3e0b
   14004d39d:	jmp    0x14004d37a
   14004d39f:	mov    cl,0x68
   14004d3a1:	add    al,0x1b
   14004d3a3:	xlat   BYTE PTR ds:[rbx]
   14004d3a4:	sub    eax,0x8273bac7
   14004d3a9:	jnp    0x14004d417
   14004d3ab:	ret    
   14004d3ac:	rex.W outs dx,BYTE PTR ds:[rsi]
   14004d3ae:	sbb    al,0x7f
   14004d3b0:	jae    0x14004d3b1
   14004d3b2:	movsxd edi,eax
   14004d3b4:	(bad)  
   14004d3b5:	mov    edi,0x5191833f
   14004d3ba:	mov    edi,0xcddb0e2f
   14004d3bf:	and    edx,0xffffffe4
   14004d3c2:	cmp    BYTE PTR [rsi-0x7c3c523a],ah
   14004d3c8:	(bad)  
   14004d3c9:	(bad)  
   14004d3ca:	lock neg cl
   14004d3cd:	(bad)  
   14004d3ce:	or     bl,BYTE PTR [rsi-0xa9ffef6]
   14004d3d4:	sti    
   14004d3d5:	sub    eax,DWORD PTR [rdi-0x4]
   14004d3d8:	cmp    eax,0xd5779bd8
   14004d3dd:	gs jmp 0x14004d3d0
   14004d3e0:	(bad)  
   14004d3e1:	imul   esi,DWORD PTR [rdi],0xffffffe1
   14004d3e4:	stos   BYTE PTR es:[rdi],al
   14004d3e5:	retf   
   14004d3e6:	(bad)  
   14004d3e7:	xor    eax,0x3fa785a0
   14004d3ec:	jb     0x14004d451
   14004d3ee:	jrcxz  0x14004d3e8
   14004d3f0:	jmp    0x13874db88
   14004d3f5:	test   al,0x7c
   14004d3f7:	movabs ds:0xaed2c23afc0f774d,eax
   14004d400:	pop    sp
   14004d402:	not    dh
   14004d404:	jae    0x14004d396
   14004d406:	rex.WRX xor rax,0xffffffffe9c3ce76
   14004d40c:	mov    bl,BYTE PTR [rdi]
   14004d40e:	(bad)  
   14004d40f:	in     al,dx
   14004d410:	jns    0x14004d48e
   14004d412:	out    0xdf,eax
   14004d414:	mul    eax
   14004d416:	(bad)  
   14004d417:	(bad)  
   14004d418:	jnp    0x14004d478
   14004d41a:	retf   
   14004d41b:	icebp  
   14004d41c:	out    0x71,eax
   14004d41e:	test   DWORD PTR [rcx+0x78f5981],edx
   14004d424:	int3   
   14004d425:	stos   BYTE PTR es:[rdi],al
   14004d426:	add    al,dh
   14004d428:	repz sti 
   14004d42a:	rex.XB movabs eax,ds:0x708a9eb5f2296208
   14004d434:	(bad)  
   14004d435:	mov    eax,0xef15bbbc
   14004d43a:	jg     0x14004d40b
   14004d43c:	data16 jl 0x14004d41f
   14004d43f:	fimul  DWORD PTR [rbp-0x7f]
   14004d442:	mov    DWORD PTR [rdi],edi
   14004d444:	rex.WRB cmp al,0xbb
   14004d447:	dec    DWORD PTR [rip+0x4bd5fcec]        # 0x18bdad139
   14004d44d:	test   al,0x34
   14004d44f:	(bad)  
   14004d450:	rex.RXB
   14004d451:	adc    BYTE PTR [esi-0x44],bl
   14004d455:	jns    0x14004d48c
   14004d457:	(bad)  
   14004d458:	lahf   
   14004d459:	(bad)  [rbx-0x56]
   14004d45c:	(bad)  
   14004d45d:	ja     0x14004d4b9
   14004d45f:	loope  0x14004d3ee
   14004d461:	(bad)  
   14004d462:	(bad)  
   14004d463:	icebp  
   14004d464:	scas   eax,DWORD PTR es:[rdi]
   14004d465:	(bad)  
   14004d466:	mov    esi,0xc1f9df07
   14004d46b:	xor    edi,DWORD PTR [rax-0x3]
   14004d46e:	int    0xca
   14004d470:	push   rbx
   14004d471:	xchg   DWORD PTR [rcx-0x504bebe9],edi
   14004d477:	sub    dh,BYTE PTR [rbx+rbp*4]
   14004d47a:	icebp  
   14004d47b:	sbb    BYTE PTR [rcx+0x13],0x0
   14004d47f:	cmp    eax,0x22fa1b
   14004d484:	pop    rsi
   14004d485:	test   dh,ah
   14004d487:	idiv   DWORD PTR [rbx]
   14004d489:	(bad)  
   14004d48a:	clc    
   14004d48b:	xor    al,0x23
   14004d48d:	adc    al,0x8e
   14004d48f:	(bad)  
   14004d490:	push   rsp
   14004d491:	iret   
   14004d492:	rex.RB
   14004d493:	fwait
   14004d494:	push   rsi
   14004d495:	mov    ebx,0xeda07dbe
   14004d49a:	sbb    eax,DWORD PTR [rcx-0x275c7c1d]
   14004d4a0:	(bad)  
   14004d4a1:	jrcxz  0x14004d502
   14004d4a3:	movsxd esp,DWORD PTR [rdx-0x4e]
   14004d4a6:	call   0x1132c9de6
   14004d4ab:	xchg   esp,eax
   14004d4ac:	rcl    BYTE PTR [rbp-0x69],0xad
   14004d4b0:	rex.XB jnp 0x14004d51e
   14004d4b3:	rcr    DWORD PTR [rsi+rsi*1-0xb],cl
   14004d4b7:	mov    ah,0xc1
   14004d4b9:	(bad)  
   14004d4ba:	jg     0x14004d4b2
   14004d4bc:	cmp    al,0xfe
   14004d4be:	(bad)  
   14004d4bf:	lahf   
   14004d4c0:	ja     0x14004d4a4
   14004d4c2:	test   eax,0x96fb2f3d
   14004d4c7:	loope  0x14004d4ae
   14004d4c9:	adc    ah,BYTE PTR [rsi]
   14004d4cb:	mov    BYTE PTR [rsi],0x6d
   14004d4ce:	rol    DWORD PTR [r11-0x27e13200],0xd7
   14004d4d6:	outs   dx,DWORD PTR ds:[rsi]
   14004d4d7:	xchg   ebp,eax
   14004d4d8:	(bad)  
   14004d4d9:	xor    eax,ebp
   14004d4db:	lods   al,BYTE PTR ds:[rsi]
   14004d4dc:	rex.WRB int 0xca
   14004d4df:	je     0x14004d54e
   14004d4e1:	mov    esi,0x7a35c007
   14004d4e6:	jp     0x14004d51c
   14004d4e8:	xchg   ecx,eax
   14004d4e9:	sub    BYTE PTR [r10],dl
   14004d4ec:	stos   DWORD PTR es:[rdi],eax
   14004d4ed:	cmp    cl,BYTE PTR [rbp+0x6ed703f7]
   14004d4f3:	(bad)  
   14004d4f4:	(bad)  
   14004d4f5:	mov    esi,0xfe3e3b74
   14004d4fa:	shl    DWORD PTR [rdi+0x77c3d69d],0xa7
   14004d501:	sbb    ch,BYTE PTR [rcx-0x3114f39c]
   14004d507:	jmp    0xc30840cd
   14004d50c:	enter  0x9de7,0x77
   14004d510:	(bad)  
   14004d511:	jmp    0x16d7255b1
   14004d516:	rex.WRB movabs r8,0x3362fda4c88deae9
   14004d520:	add    edx,ebp
   14004d522:	(bad)
   14004d525:	cmp    esi,ecx
   14004d527:	sub    DWORD PTR [rbx+0x37],0xd6cbaae3
   14004d52e:	(bad)  
   14004d52f:	jb     0x14004d4e3
   14004d531:	mov    BYTE PTR [rdi],dl
   14004d533:	pop    rsi
   14004d534:	cmp    al,0x6c
   14004d536:	xchg   esp,eax
   14004d537:	(bad)  
   14004d538:	sub    al,0x4
   14004d53a:	mov    al,0x90
   14004d53c:	ins    DWORD PTR es:[rdi],dx
   14004d53d:	sbb    eax,0xd9001681
   14004d542:	fcom   QWORD PTR [rcx+0x1b387e67]
   14004d548:	ins    DWORD PTR es:[rdi],dx
   14004d549:	fwait
   14004d54a:	adc    eax,0x3efc00b
   14004d54f:	(bad)  
   14004d550:	loope  0x14004d5ba
   14004d552:	add    dl,cl
   14004d554:	rex.R ficom DWORD PTR [rdi+0x274d9fc]
   14004d55b:	(bad)  
   14004d55c:	mov    edi,0xf8f86de5
   14004d561:	(bad)  
   14004d562:	fbld   TBYTE PTR [rsi]
   14004d564:	pop    rsi
   14004d565:	(bad)  
   14004d566:	or     DWORD PTR [rax],esi
   14004d568:	cmp    ebx,DWORD PTR [rax-0x201dd368]
   14004d56e:	jle    0x14004d528
   14004d570:	(bad)  
   14004d571:	(bad)  
   14004d572:	rex.WRXB mov cs,WORD PTR [r10-0x692e2e19]
   14004d579:	(bad)  
   14004d57a:	sub    eax,0xc732dbef
   14004d57f:	sub    eax,0xb8e1fd3b
   14004d584:	(bad)  
   14004d585:	iret   
   14004d586:	loopne 0x14004d577
   14004d588:	mov    bh,0xfd
   14004d58a:	ret    0x1a08
   14004d58d:	push   rsi
   14004d58e:	mov    BYTE PTR [rdi],al
   14004d590:	int3   
   14004d591:	retf   0x4707
   14004d594:	sbb    ch,BYTE PTR [rsi]
   14004d596:	add    BYTE PTR [rbp+rcx*2-0x1],bh
   14004d59a:	push   rax
   14004d59b:	sbb    cl,dh
   14004d59d:	push   rsp
   14004d59e:	mov    edx,DWORD PTR [rbx]
   14004d5a0:	jo     0x14004d574
   14004d5a2:	add    al,0x40
   14004d5a4:	rex cld 
   14004d5a6:	mov    ecx,0xdd1f77c1
   14004d5ab:	add    DWORD PTR [rcx+0x7f624323],0x59
   14004d5b2:	ja     0x14004d5bf
   14004d5b4:	outs   dx,BYTE PTR ds:[rsi]
   14004d5b5:	mov    esp,0xb61cd37a
   14004d5ba:	push   0x74646171
   14004d5bf:	sbb    al,0x7f
   14004d5c1:	dec    edi
   14004d5c3:	mov    edi,0xe7010450
   14004d5c8:	rex.WR mov WORD PTR gs:[rip+0x298d9781],cs        # 0x169926d51
   14004d5d0:	leave  
   14004d5d1:	mov    bl,0xe2
   14004d5d3:	or     dh,BYTE PTR [rsp+rbx*8]
   14004d5d6:	add    eax,0x63fd33f0
   14004d5db:	leave  
   14004d5dc:	sub    al,0x58
   14004d5de:	sub    BYTE PTR [rax+rdx*4-0x1fb164c1],ch
   14004d5e5:	xchg   ebx,eax
   14004d5e6:	mov    bh,0xbf
   14004d5e8:	add    esi,edi
   14004d5ea:	(bad)  
   14004d5eb:	stc    
   14004d5ec:	xchg   ecx,esi
   14004d5ee:	test   BYTE PTR [rbx-0x5ca08a32],0xd
   14004d5f5:	jo     0x14004d5a1
   14004d5f7:	lock ret 0xdeef
   14004d5fb:	je     0x14004d593
   14004d5fd:	mov    ecx,0x4ccedd72
   14004d602:	cmp    bl,BYTE PTR [rcx]
   14004d604:	or     al,0xa7
   14004d606:	sahf   
   14004d607:	rex.X vfmaddsubps xmm14,xmm13,XMMWORD PTR [rcx+rbp*2-0x1c83c1cb],xmm4
   14004d613:	mov    bh,al
   14004d615:	and    edi,DWORD PTR [rax-0x1f]
   14004d618:	ja     0x14004d5a1
   14004d61a:	xor    DWORD PTR [rcx],edi
   14004d61c:	push   rbp
   14004d61d:	jb     0x14004d675
   14004d61f:	sbb    BYTE PTR [rsi],dh
   14004d621:	xlat   BYTE PTR ds:[rbx]
   14004d622:	adc    BYTE PTR [rax-0x695fa8eb],bl
   14004d628:	xor    BYTE PTR [rbp+rcx*8+0x70],bh
   14004d62c:	rex.WRB (bad) 
   14004d62e:	mov    ebx,0x2c48f4f4
   14004d633:	imul   ecx,DWORD PTR [rip+0xffffffffa73dadfa],0xe3be9f07        # 0xe7428437
   14004d63d:	pop    rbp
   14004d63e:	adc    esi,0x7994239f
   14004d644:	pop    rcx
   14004d645:	cs loopne 0x14004d6a9
   14004d648:	pop    rcx
   14004d649:	sbb    DWORD PTR [rdi],esp
   14004d64b:	shr    BYTE PTR [rcx-0x3f62c9bf],0xa7
   14004d652:	out    dx,eax
   14004d653:	js     0x14004d66c
   14004d655:	(bad)  
   14004d656:	sahf   
   14004d657:	jrcxz  0x14004d5e5
   14004d659:	mov    eax,0x9f312384
   14004d65e:	(bad)  
   14004d65f:	(bad)
   14004d664:	xchg   BYTE PTR [rcx-0x623ffd9f],ah
   14004d66a:	lock repz pop rbp
   14004d66d:	cmp    eax,0x88c2859d
   14004d672:	(bad)  
   14004d673:	mov    esp,0xc9ce760f
   14004d678:	fcmovnb st,st(7)
   14004d67a:	add    DWORD PTR [rax+rax*8-0x35],edi
   14004d67e:	sbb    al,0xe5
   14004d680:	jb     0x14004d69b
   14004d682:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d683:	push   rdx
   14004d684:	sbb    ebp,eax
   14004d686:	push   rdx
   14004d687:	sbb    DWORD PTR [rbp-0x6afa0a7e],eax
   14004d68d:	add    BYTE PTR [rbx-0x80],dh
   14004d690:	rex.W sub al,0x5
   14004d693:	(bad)  
   14004d694:	mov    dl,0x1a
   14004d696:	call   0x116be4c7a
   14004d69b:	adc    BYTE PTR [rdx+rdx*8],dh
   14004d69e:	add    bh,al
   14004d6a0:	add    al,0x7c
   14004d6a2:	fsubp  st(7),st
   14004d6a4:	scas   eax,DWORD PTR es:[rdi]
   14004d6a5:	cmp    al,BYTE PTR [rcx-0x3f633fc1]
   14004d6ab:	pop    rbx
   14004d6ac:	push   rsi
   14004d6ad:	fwait
   14004d6ae:	jae    0x14004d690
   14004d6b0:	mov    ecx,0xbfc55e17
   14004d6b5:	jge    0x14004d6b6
   14004d6b7:	(bad)  
   14004d6b8:	jae    0x14004d697
   14004d6ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d6bb:	add    BYTE PTR [rsi],ch
   14004d6bd:	pop    rax
   14004d6be:	sub    ah,ah
   14004d6c0:	jo     0x14004d689
   14004d6c2:	(bad)  
   14004d6c3:	rex.WX cmp BYTE PTR [rbx+r13*2+0x8],bl
   14004d6c8:	sbb    ah,BYTE PTR [rdx]
   14004d6ca:	add    BYTE PTR [rdx+0x36],bh
   14004d6cd:	hlt    
   14004d6ce:	mov    ch,0xc0
   14004d6d0:	addr32 mov dh,0x9f
   14004d6d3:	addr32 cli 
   14004d6d5:	(bad)  
   14004d6d6:	fidivr DWORD PTR [rdi+0x7e]
   14004d6d9:	(bad)  
   14004d6da:	jae    0x14004d6bc
   14004d6dc:	rol    edi,1
   14004d6de:	sahf   
   14004d6df:	(bad)  
   14004d6e0:	movabs ds:0xc040094dd73d3d8f,eax
   14004d6e9:	cmp    DWORD PTR [rdi+0x28],eax
   14004d6ec:	sbb    al,0xd5
   14004d6ee:	push   rsi
   14004d6ef:	(bad)  
   14004d6f0:	adc    ch,al
   14004d6f2:	ja     0x14004d72d
   14004d6f4:	(bad)  
   14004d6f5:	movsxd esi,DWORD PTR [rdx+rcx*8]
   14004d6f8:	add    bh,al
   14004d6fa:	xchg   BYTE PTR [rsi+0x344318c0],bl
   14004d700:	(bad)  
   14004d701:	rex.WR and al,0x99
   14004d704:	iret   
   14004d705:	sub    BYTE PTR [rbp+0x7fe7f84b],dl
   14004d70b:	sti    
   14004d70c:	or     DWORD PTR [rsi+0x73abedff],ebx
   14004d712:	fst    QWORD PTR [rax+rax*1+0x52c5f42e]
   14004d719:	xchg   ebp,eax
   14004d71a:	rex.WRXB loopne 0x14004d6c6
   14004d71d:	xor    BYTE PTR [rax],bh
   14004d71f:	(bad)  
   14004d720:	sbb    eax,0xb80058cc
   14004d725:	sar    DWORD PTR [rbp-0x73],cl
   14004d728:	(bad)  
   14004d729:	jge    0x14004d74d
   14004d72b:	jno    0x14004d796
   14004d72d:	cli    
   14004d72e:	fld    TBYTE PTR [rsi]
   14004d730:	movabs al,ds:0x29925cc271429a5c
   14004d739:	shr    BYTE PTR [rcx],0x4
   14004d73c:	(bad)  
   14004d73d:	pop    rsi
   14004d73e:	(bad)  
   14004d73f:	cmp    BYTE PTR [rsi],dh
   14004d741:	xlat   BYTE PTR ds:[rbx]
   14004d742:	lods   eax,DWORD PTR ds:[rsi]
   14004d743:	or     al,ah
   14004d745:	ret    0x841a
   14004d748:	gs int3 
   14004d74a:	loope  0x14004d6de
   14004d74c:	mov    DWORD PTR [rbx+0x5d],ebx
   14004d74f:	out    dx,al
   14004d750:	int    0x8
   14004d752:	xor    edx,DWORD PTR [rdx]
   14004d754:	add    BYTE PTR [rsi+0x30],ch
   14004d757:	ret    0x1258
   14004d75a:	vminpd xmm13,xmm9,xmm4
   14004d75e:	(bad)  
   14004d75f:	(bad)  
   14004d760:	xchg   esp,eax
   14004d761:	rex.WXB push r11
   14004d763:	cwde   
   14004d764:	enter  0x610f,0x62
   14004d768:	ins    BYTE PTR es:[rdi],dx
   14004d769:	or     BYTE PTR [rbp+0x4e4cd4e2],ah
   14004d76f:	(bad)  
   14004d770:	(bad)  
   14004d771:	xchg   BYTE PTR [rax],cl
   14004d773:	(bad)  
   14004d774:	dec    BYTE PTR [rbx]
   14004d776:	add    esp,ecx
   14004d778:	push   0xfffffffffcea6fdc
   14004d77d:	mov    ds,WORD PTR [rcx+0x3a670406]
   14004d783:	lock dec BYTE PTR [rsi+0x58]
   14004d787:	add    bh,BYTE PTR [rdi-0x6f]
   14004d78a:	js     0x14004d7d6
   14004d78c:	ins    BYTE PTR es:[rdi],dx
   14004d78d:	jmp    0x14004d769
   14004d78f:	jg     0x14004d7fb
   14004d791:	(bad)  
   14004d792:	or     al,0xe5
   14004d794:	cmp    al,0xf3
   14004d797:	add    ah,ch
   14004d799:	jns    0x14004d7bb
   14004d79b:	add    DWORD PTR [rsi-0x13],esi
   14004d79e:	fimul  WORD PTR [rdi-0x1ff044a3]
   14004d7a4:	mov    ecx,0xe186bedf
   14004d7a9:	pushf  
   14004d7aa:	repz cli 
   14004d7ac:	sti    
   14004d7ad:	jae    0x14004d7aa
   14004d7af:	punpcklwd mm7,DWORD PTR [rbp-0x11]
   14004d7b3:	or     al,BYTE PTR [rax]
   14004d7b5:	sar    dl,0xde
   14004d7b8:	adc    eax,0x566bf58
   14004d7bd:	mov    dh,0x6e
   14004d7bf:	jmp    0x136a36289
   14004d7c4:	mov    ecx,0x229cea6c
   14004d7c9:	adc    cl,BYTE PTR [rdi+0x61]
   14004d7cc:	xor    bh,BYTE PTR [rdi]
   14004d7ce:	lods   al,BYTE PTR ds:[rsi]
   14004d7cf:	(bad)  
   14004d7d0:	scas   eax,DWORD PTR es:[rdi]
   14004d7d1:	test   bl,al
   14004d7d3:	shl    DWORD PTR [rdi],0xa6
   14004d7d6:	pop    rbp
   14004d7d7:	out    dx,eax
   14004d7d8:	je     0x14004d7e9
   14004d7da:	je     0x14004d801
   14004d7dc:	iret   
   14004d7dd:	std    
   14004d7de:	jp     0x14004d81a
   14004d7e0:	or     eax,0xdf9805fc
   14004d7e5:	cwde   
   14004d7e6:	stos   DWORD PTR es:[rdi],eax
   14004d7e7:	jno    0x14004d7e8
   14004d7e9:	rex.XB add esp,DWORD PTR [r15]
   14004d7ec:	lock (bad) 
   14004d7ee:	sti    
   14004d7ef:	mov    dh,0xe3
   14004d7f1:	shl    DWORD PTR [rdi],1
   14004d7f3:	mul    BYTE PTR [rdx+0x24]
   14004d7f6:	xchg   edi,eax
   14004d7f7:	mov    bh,0x96
   14004d7f9:	fnstenv [rbp+0xbf2bf7b]
   14004d7ff:	add    BYTE PTR [rbx],ch
   14004d801:	jp     0x14004d7dd
   14004d803:	jno    0x14004d7d0
   14004d805:	or     eax,0xaf07c36f
   14004d80a:	mov    edi,0x309d164
   14004d80f:	(bad)  
   14004d810:	and    BYTE PTR [rax-0x67],ch
   14004d813:	es jl  0x14004d895
   14004d816:	iret   
   14004d817:	xchg   BYTE PTR [rsi+0x3a262f69],bh
   14004d81d:	adc    edx,DWORD PTR [rdi]
   14004d81f:	rcr    BYTE PTR [rax],0xf6
   14004d822:	movsxd ecx,DWORD PTR [rcx+rcx*4-0xcff00cf]
   14004d829:	(bad)  
   14004d82a:	(bad)  
   14004d82b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d82c:	mov    ah,0x4f
   14004d82e:	sbb    eax,0xc09c0d0e
   14004d833:	addr32 ds jg 0x14004d876
   14004d837:	cs mov esi,0x6db14ff6
   14004d83d:	sti    
   14004d83e:	rex.WRX pop rdi
   14004d840:	repnz push rdi
   14004d842:	cmp    bh,dh
   14004d844:	sahf   
   14004d845:	sti    
   14004d846:	mov    dh,0xe3
   14004d848:	loop   0x14004d8b5
   14004d84a:	call   QWORD PTR [rdi+rbx*4]
   14004d84d:	stc    
   14004d84e:	cld    
   14004d84f:	std    
   14004d850:	cmp    BYTE PTR [rax+rsi*2],dh
   14004d853:	(bad)  
   14004d854:	xchg   esi,eax
   14004d855:	pop    rdx
   14004d856:	cmp    bh,BYTE PTR [rdi]
   14004d858:	adc    DWORD PTR [rcx-0x4b0e935b],ecx
   14004d85e:	sbb    DWORD PTR [rip+0x4b4e0b],ecx        # 0x14050266f
   14004d864:	mov    eax,0x61cdfdf3
   14004d869:	mov    edi,0xc7795258
   14004d86e:	fistp  WORD PTR [rdx]
   14004d870:	mov    ebp,0x33ab7b9c
   14004d875:	or     BYTE PTR [rbx-0x5d706ad],0x1f
   14004d87c:	fadd   QWORD PTR [rcx+0x5f2df77]
   14004d882:	ins    BYTE PTR es:[rdi],dx
   14004d883:	fstp   TBYTE PTR [rsi+0x6df521b3]
   14004d889:	fstp   TBYTE PTR [rsi-0x1a4110ed]
   14004d88f:	or     edi,eax
   14004d891:	(bad)  
   14004d892:	(bad)  
   14004d893:	(bad)  
   14004d894:	imul   ecx,DWORD PTR [rax+0x7d],0x9ce3010b
   14004d89b:	movabs al,ds:0x41444900200000e6
   14004d8a4:	push   rsp
   14004d8a5:	sub    al,0x14
   14004d8a7:	rex.X fdivr DWORD PTR [rsi]
   14004d8aa:	rex.XB mov r8b,0xdf
   14004d8ad:	in     eax,0x64
   14004d8af:	fstp   QWORD PTR [rax+0x31f005ae]
   14004d8b5:	cmp    eax,0x48863181
   14004d8ba:	(bad)  
   14004d8bb:	(bad)  
   14004d8bc:	xchg   ebp,eax
   14004d8bd:	xchg   edi,eax
   14004d8be:	retf   0x7f1f
   14004d8c1:	or     al,0x30
   14004d8c3:	push   rdi
   14004d8c4:	sub    BYTE PTR [rdi+0x24600b02],bl
   14004d8ca:	xchg   edi,eax
   14004d8cb:	(bad)  
   14004d8cc:	popf   
   14004d8cd:	ja     0x14004d94c
   14004d8cf:	sbb    eax,0xa1f97f77
   14004d8d4:	mov    edx,0x752d7e35
   14004d8d9:	fbstp  TBYTE PTR [rbx-0x21]
   14004d8dc:	jbe    0x14004d8ba
   14004d8de:	jl     0x14004d8c7
   14004d8e0:	push   rdi
   14004d8e1:	sbb    bl,BYTE PTR [rsi-0x9]
   14004d8e4:	fadd   QWORD PTR [rax-0x775401a7]
   14004d8ea:	rex.R xchg ebx,eax
   14004d8ec:	jle    0x14004d8b1
   14004d8ee:	(bad)  
   14004d8ef:	(bad)  
   14004d8f0:	(bad)  
   14004d8f1:	imul   eax,DWORD PTR [rcx-0x23],0x2
   14004d8f5:	movabs al,ds:0xf480b1fc6757f692
   14004d8fe:	mov    ebx,DWORD PTR [rbx+riz*1]
   14004d901:	mov    ecx,0xf3be6e3c
   14004d906:	sub    edi,DWORD PTR [rax-0xc]
   14004d909:	mov    DWORD PTR [rbp-0x1961854d],edi
   14004d90f:	rex.WR adc r9b,dil
   14004d912:	in     eax,dx
   14004d913:	(bad)  
   14004d914:	xor    al,0xab
   14004d916:	out    0x98,eax
   14004d918:	cmp    ebp,DWORD PTR [rax-0x3e]
   14004d91b:	xor    BYTE PTR [rcx-0x2cfea57a],0x31
   14004d922:	sbb    ebp,edx
   14004d924:	sar    dh,cl
   14004d926:	add    esi,esp
   14004d928:	(bad)  
   14004d929:	retf   0x3cbc
   14004d92c:	stos   DWORD PTR es:[rdi],eax
   14004d92d:	cmc    
   14004d92e:	fistp  QWORD PTR [rdi+riz*8+0x57]
   14004d932:	lea    bx,[rax-0x48f5b327]
   14004d939:	pop    rsp
   14004d93a:	jg     0x14004d945
   14004d93c:	cli    
   14004d93d:	outs   dx,BYTE PTR ds:[rsi]
   14004d93e:	mov    edi,0x4051172
   14004d943:	sbb    DWORD PTR [rax],eax
   14004d945:	mov    cs,WORD PTR [rax+0x34]
   14004d948:	mov    edx,edx
   14004d94a:	rcl    DWORD PTR fs:[rsi],0xc4
   14004d94e:	std    
   14004d94f:	sbb    BYTE PTR [rax-0x53ef2946],al
   14004d955:	rex.WXB add BYTE PTR [r8-0x4b65006f],dil
   14004d95c:	jg     0x14004d8de
   14004d95e:	stc    
   14004d95f:	(bad)  
   14004d960:	fnstenv [rsi+rcx*8-0x4060cc2]
   14004d967:	lods   eax,DWORD PTR ds:[rsi]
   14004d968:	in     al,0x8f
   14004d96a:	(bad)
   14004d96d:	jmp    0x19b8020e0
   14004d972:	xor    edi,DWORD PTR [rdx]
   14004d974:	fistp  DWORD PTR [rbx+0x23ab8b11]
   14004d97a:	rex.RX (bad) 
   14004d97c:	rex.WRX or al,0x23
   14004d97f:	(bad)  
   14004d980:	pop    rdx
   14004d981:	rol    al,0xe1
   14004d984:	jrcxz  0x14004d9be
   14004d986:	jle    0x14004d95a
   14004d988:	sbb    dh,dh
   14004d98a:	ret    0x9e8a
   14004d98d:	jbe    0x14004d983
   14004d98f:	fnstsw WORD PTR [rsi+0x25]
   14004d992:	outs   dx,BYTE PTR ds:[rsi]
   14004d993:	mov    ecx,0x336412fe
   14004d998:	mov    esi,DWORD PTR [rax+riz*8]
   14004d99b:	in     al,dx
   14004d99c:	pop    rdx
   14004d99d:	add    ebp,eax
   14004d99f:	or     ebx,eax
   14004d9a1:	in     eax,dx
   14004d9a2:	jmp    0x137d5b396
   14004d9a7:	lods   eax,DWORD PTR ds:[rsi]
   14004d9a8:	jp     0x14004d9f0
   14004d9aa:	add    al,0xea
   14004d9ac:	mov    ch,0x0
   14004d9ae:	fisubr WORD PTR [rcx-0x4a]
   14004d9b1:	and    eax,0x150bfed0
   14004d9b6:	mov    bl,0x15
   14004d9b8:	add    edi,DWORD PTR [rax-0xc]
   14004d9bb:	mov    DWORD PTR [rbp-0x23104fba],edi
   14004d9c1:	mov    bl,0x56
   14004d9c3:	(bad)  
   14004d9c4:	in     eax,0x19
   14004d9c6:	fstp   QWORD PTR [rax+0x75]
   14004d9c9:	rex.RX mov dil,0x92
   14004d9cc:	scas   al,BYTE PTR es:[rdi]
   14004d9cd:	jle    0x14004d968
   14004d9cf:	xchg   edi,eax
   14004d9d0:	movabs eax,ds:0xe14e4e4de443bba7
   14004d9d9:	xchg   ebp,eax
   14004d9da:	add    DWORD PTR [rdi+0x5ee79bf1],0xffffffc6
   14004d9e1:	cmp    DWORD PTR [rbx+0xdcb71bb],ebp
   14004d9e7:	xchg   edi,eax
   14004d9e8:	loopne 0x14004d980
   14004d9ea:	jmp    0x14004da1b
   14004d9ec:	cdq    
   14004d9ed:	xchg   ebp,eax
   14004d9ee:	ss (bad) 
   14004d9f0:	xor    al,0x54
   14004d9f2:	mov    al,0x2
   14004d9f4:	fimul  WORD PTR [rcx-0x2bfa19c6]
   14004d9fa:	sub    al,0x0
   14004d9fc:	jl     0x14004d9c5
   14004d9fe:	std    
   14004d9ff:	add    ebp,ebp
   14004da01:	mov    edi,0xf31b3160
   14004da06:	add    BYTE PTR [rsi+0x72],al
   14004da09:	jns    0x14004da87
   14004da0b:	out    0xf3,al
   14004da0d:	mov    dl,0x9b
   14004da0f:	pushf  
   14004da10:	jae    0x14004d9e8
   14004da12:	or     ch,BYTE PTR [rdx+rbx*8+0x70]
   14004da16:	shr    BYTE PTR cs:[rcx+0x47],cl
   14004da1a:	rex.WB js 0x14004d9b0
   14004da1d:	(bad)  
   14004da1e:	cwde   
   14004da1f:	neg    DWORD PTR [rcx-0x65dc089a]
   14004da25:	cli    
   14004da26:	(bad)  
   14004da27:	xor    al,0x19
   14004da29:	movsxd ecx,DWORD PTR [rax-0x1a47ddbc]
   14004da2f:	cli    
   14004da30:	rex.WXB jo 0x14004da02
   14004da33:	fnsave [rdi-0x7cc545d]
   14004da39:	sbb    BYTE PTR [rcx-0x65908fd],cl
   14004da3f:	pop    rbx
   14004da40:	add    DWORD PTR [rbp-0x33],esi
   14004da43:	or     ebp,DWORD PTR [rax+0xb3802c7]
   14004da49:	mov    dh,0x71
   14004da4b:	inc    DWORD PTR [rax-0x5]
   14004da4e:	(bad)  
   14004da4f:	pop    rax
   14004da50:	int3   
   14004da51:	xchg   BYTE PTR [rax],al
   14004da53:	call   0xcc36cad7
   14004da58:	in     al,0xf2
   14004da5a:	rex.W (bad) 
   14004da5c:	and    eax,0xbd6e971
   14004da61:	mov    al,0xb4
   14004da63:	mov    ebx,0x318b9c5d
   14004da68:	fmul   QWORD PTR es:[rsi]
   14004da6b:	(bad)  
   14004da6c:	scas   al,BYTE PTR es:[rdi]
   14004da6d:	mov    WORD PTR [rbx-0x2e],es
   14004da70:	outs   dx,DWORD PTR ds:[rsi]
   14004da71:	(bad)  
   14004da72:	adc    dl,BYTE PTR es:[rcx+0x6c]
   14004da76:	fnstsw WORD PTR [rdx+rbx*1+0x40afd71b]
   14004da7d:	rex.WXB jbe 0x14004da11
   14004da80:	(bad)  
   14004da81:	stc    
   14004da82:	xor    eax,0x580ac7c0
   14004da87:	or     DWORD PTR [rdi+0x252d35ab],eax
   14004da8d:	pop    rsi
   14004da8e:	pop    QWORD PTR [rax]
   14004da90:	xor    BYTE PTR [rdi+rdi*2-0x21f0edd8],dh
   14004da97:	cmc    
   14004da98:	pop    rdi
   14004da99:	shr    BYTE PTR [rax+0x34],0xff
   14004da9d:	rex.RXB jb 0x14004db19
   14004daa0:	jl     0x14004da95
   14004daa2:	sbb    DWORD PTR [rip+0xffffffffe2cd6d68],0x422f2b9a        # 0x122d24814
   14004daac:	cmp    al,0x16
   14004daae:	push   rbp
   14004daaf:	cmp    ah,BYTE PTR [rdi]
   14004dab1:	fst    st(6)
   14004dab3:	(bad)  
   14004dab4:	cmp    al,0xca
   14004dab6:	cmp    eax,edx
   14004dab8:	fcomp  QWORD PTR [rsp+rax*8+0x62f49715]
   14004dabf:	in     eax,dx
   14004dac0:	(bad)  [rbx-0x6f]
   14004dac3:	mov    BYTE PTR [rdi],al
   14004dac5:	mov    bl,0x49
   14004dac7:	std    
   14004dac8:	and    DWORD PTR [rbp+0x6e245080],ebp
   14004dace:	popf   
   14004dacf:	sbb    eax,0x5ab2e008
   14004dad4:	push   0xffffffffffffffaa
   14004dad6:	rex.WB add BYTE PTR [r8+0x6a5f1eef],dil
   14004dadd:	sbb    al,0x6c
   14004dadf:	int3   
   14004dae0:	cli    
   14004dae1:	or     eax,DWORD PTR [rcx+rax*8-0x1249399e]
   14004dae8:	cmp    edx,ecx
   14004daea:	(bad)  
   14004daec:	mov    ch,BYTE PTR [rbp+0xf9d17]
   14004daf2:	sub    BYTE PTR [rsi-0xef9ae64],dl
   14004daf8:	mov    cl,0x11
   14004dafa:	push   rdi
   14004dafb:	retf   
   14004dafc:	xor    esp,DWORD PTR [rsi]
   14004dafe:	test   DWORD PTR [rcx-0x63114409],eax
   14004db04:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004db05:	mov    eax,0xe78ba6ed
   14004db0a:	movabs ds:0x26ca58911a0bd9,al
   14004db13:	cs in  eax,dx
   14004db15:	fnop   
   14004db17:	xlat   BYTE PTR ds:[rbx]
   14004db18:	xor    dh,BYTE PTR [rax+0x76c87faf]
   14004db1e:	or     al,0x45
   14004db20:	lods   eax,DWORD PTR ds:[rsi]
   14004db21:	repz add dh,bh
   14004db24:	rex
   14004db25:	rex.WRXB or BYTE PTR [r15+0x62],r8b
   14004db29:	xor    eax,0xc027d97e
   14004db2e:	jl     0x14004db75
   14004db30:	test   eax,0xc061d8d4
   14004db35:	lahf   
   14004db36:	in     al,dx
   14004db37:	cld    
   14004db38:	sub    eax,0xbd65bade
   14004db3d:	pop    rsp
   14004db3e:	rcr    BYTE PTR [ebp+0x6d],1
   14004db42:	mov    BYTE PTR [rbx-0x72],dh
   14004db45:	xor    ah,bh
   14004db47:	sub    BYTE PTR [rdi+0x67654a39],dl
   14004db4d:	stc    
   14004db4e:	mov    cl,0x52
   14004db50:	test   eax,0x49d9528c
   14004db55:	out    0x9c,eax
   14004db57:	jrcxz  0x14004dae3
   14004db59:	mov    bh,0xad
   14004db5b:	ins    DWORD PTR es:[rdi],dx
   14004db5c:	push   0x580b165b
   14004db61:	sub    BYTE PTR [rax+rsi*2+0x32cb6624],al
   14004db68:	cmp    BYTE PTR [rbx+0x43],ch
   14004db6b:	push   rbp
   14004db6c:	(bad)  
   14004db6d:	mov    ebx,0xa4be0b93
   14004db72:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004db73:	sti    
   14004db74:	rex.WR
   14004db75:	rex.RX or BYTE PTR [rax+0xf48d080],r14b
   14004db7c:	loopne 0x14004db62
   14004db7e:	rcr    BYTE PTR [rax],1
   14004db80:	fcmovu st,st(2)
   14004db82:	fistp  DWORD PTR [rdx+rdi*2-0x36684da3]
   14004db89:	(bad)  
   14004db8a:	and    ebp,0x32
   14004db8d:	pop    rcx
   14004db8e:	adc    ah,0x75
   14004db91:	(bad)  
   14004db92:	mov    ecx,0x303c0a10
   14004db97:	stc    
   14004db98:	jmp    0x14004db20
   14004db9a:	mov    ah,0xb6
   14004db9c:	jge    0x14004db56
   14004db9e:	clc    
   14004db9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004dba0:	pop    rdx
   14004dba1:	es (bad) 
   14004dba3:	(bad)  
   14004dba4:	movabs ds:0x3796c285825f0dc2,al
   14004dbad:	inc    BYTE PTR [rdx]
   14004dbaf:	repz jg 0x14004db53
   14004dbb2:	movabs eax,ds:0x4881bff767c04191
   14004dbbb:	and    al,0x22
   14004dbbd:	mov    BYTE PTR [rdi+0x2d],cl
   14004dbc0:	add    bh,ah
   14004dbc2:	pop    rsp
   14004dbc3:	push   rsp
   14004dbc4:	xor    BYTE PTR [rax+0x2ca94016],bh
   14004dbca:	retf   0xdeef
   14004dbcd:	imul   DWORD PTR [rdx-0x3d]
   14004dbd0:	fidiv  DWORD PTR [rdx+0x470a10d8]
   14004dbd6:	std    
   14004dbd7:	(bad)  
   14004dbd8:	adc    BYTE PTR [rbp+0x45a8071a],ch
   14004dbde:	add    BYTE PTR [rcx+rax*2+0x4f],bh
   14004dbe2:	mov    al,bl
   14004dbe4:	xlat   BYTE PTR ds:[rbx]
   14004dbe5:	sub    DWORD PTR [rbx],ecx
   14004dbe7:	mov    al,0xc0
   14004dbe9:	ror    BYTE PTR [rax+0x1],1
   14004dbec:	jo     0x14004dbd6
   14004dbee:	lock movabs al,ds:0xa035aa1fbbe9e730
   14004dbf8:	out    0x7b,al
   14004dbfa:	ins    DWORD PTR es:[rdi],dx
   14004dbfb:	loopne 0x14004db99
   14004dbfd:	jrcxz  0x14004db96
   14004dbff:	mov    edi,0x6d61b57e
   14004dc04:	pop    rcx
   14004dc05:	mov    eax,?
   14004dc07:	loope  0x14004dbad
   14004dc09:	rcr    DWORD PTR [rbp+0x1d],0x15
   14004dc0d:	add    eax,0xcff05f80
   14004dc12:	addr32 mov eax,ds:0xc0b00c2
   14004dc18:	lea    ebx,[rax*1+0x26383938]
   14004dc1f:	int3   
   14004dc20:	jns    0x14004dc03
   14004dc22:	out    0x97,eax
   14004dc24:	test   eax,0xe9cf2f9f
   14004dc29:	xchg   ecx,eax
   14004dc2a:	sahf   
   14004dc2b:	or     al,BYTE PTR [rsi-0x73c6a0e9]
   14004dc31:	out    dx,eax
   14004dc32:	out    dx,eax
   14004dc33:	push   0x4eaf97f8
   14004dc38:	jae    0x14004dc4a
   14004dc3a:	(bad)  
   14004dc3b:	ror    dh,0xc9
   14004dc3e:	rex.WXB stos QWORD PTR es:[rdi],rax
   14004dc40:	sub    eax,0x47cd5a1e
   14004dc45:	clc    
   14004dc46:	sbb    BYTE PTR [rsi-0x7d3b71f0],0xa1
   14004dc4d:	mov    edi,0x72e504d3
   14004dc52:	jrcxz  0x14004dbd6
   14004dc54:	cmp    bl,0x5f
   14004dc57:	jle    0x14004dcac
   14004dc59:	jns    0x14004dca6
   14004dc5b:	rex.WRB mov ?,r9
   14004dc5e:	(bad)  [rdi]
   14004dc60:	stc    
   14004dc61:	js     0x14004dc06
   14004dc63:	add    al,BYTE PTR [rdi-0x7e3ce0f1]
   14004dc69:	(bad)  
   14004dc6a:	pop    rdi
   14004dc6b:	ret    
   14004dc6c:	shl    DWORD PTR [rbx-0x7d],1
   14004dc6f:	sbb    BYTE PTR [rcx],bl
   14004dc71:	sbb    al,ah
   14004dc73:	jnp    0x14004dc24
   14004dc75:	or     al,0x3e
   14004dc77:	rex.WRB
   14004dc78:	ss sub eax,0x24708630
   14004dc7e:	xchg   BYTE PTR [rdx+0xfd171f9],dl
   14004dc84:	movabs al,ds:0xf5e7c004d501fbc2
   14004dc8d:	add    al,0xbb
   14004dc8f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dc90:	or     DWORD PTR [rdx+rax*8],eax
   14004dc93:	(bad)  
   14004dc94:	(bad)  
   14004dc95:	or     al,0x2d
   14004dc97:	adc    BYTE PTR [rcx+0x7b3f1e5c],0xfa
   14004dc9e:	and    eax,0x65e7b93c
   14004dca3:	and    esp,0xffffffb6
   14004dca6:	xor    DWORD PTR [rdi+0x6f],edi
   14004dca9:	fwait
   14004dcaa:	jae    0x14004dcba
   14004dcac:	(bad)  
   14004dcad:	loopne 0x14004dc60
   14004dcaf:	(bad)  
   14004dcb0:	lahf   
   14004dcb1:	(bad)  
   14004dcb2:	shl    BYTE PTR [rax+0x4e],1
   14004dcb5:	in     al,0x39
   14004dcb7:	retf   
   14004dcb8:	sub    ebp,0xffffffc7
   14004dcbb:	(bad)  
   14004dcbc:	sub    eax,0xd86b33bd
   14004dcc1:	and    al,BYTE PTR [rbp+0x38]
   14004dcc4:	(bad)  
   14004dcc5:	mov    al,0x9
   14004dcc7:	or     bh,0x63
   14004dcca:	cmp    al,BYTE PTR [rdx]
   14004dccc:	movabs al,ds:0x85fe665852df4367
   14004dcd5:	in     al,dx
   14004dcd6:	rex.XB (bad) 
   14004dcd8:	add    DWORD PTR [rsi],edx
   14004dcda:	and    BYTE PTR [rdx-0x2d],cl
   14004dcdd:	hlt    
   14004dcde:	add    DWORD PTR [rbp+riz*1-0x22006143],edi
   14004dce5:	fwait
   14004dce6:	pop    rax
   14004dce7:	mov    ebp,0x8f250cfa
   14004dcec:	mov    DWORD PTR [rdi-0x482766aa],esi
   14004dcf2:	rex.WRB (bad) 
   14004dcf4:	jp     0x14004dce3
   14004dcf6:	rcr    BYTE PTR [rbx+0x6c3df90a],1
   14004dcfc:	jnp    0x14004dd76
   14004dcfe:	and    BYTE PTR [eax],al
   14004dd01:	(bad)  
   14004dd02:	(bad)  
   14004dd03:	cwde   
   14004dd04:	rex.WRXB lea r10,[r8+0x24]
   14004dd08:	es add al,0x2c
   14004dd0b:	ror    edx,0x9e
   14004dd0e:	or     eax,0xf6074b7d
   14004dd13:	cmc    
   14004dd14:	fbld   TBYTE PTR [rdi+rax*2]
   14004dd18:	in     eax,0x18
   14004dd1a:	sar    BYTE PTR [rbx-0x74],0xc2
   14004dd1e:	adc    ebx,edi
   14004dd20:	rex.WX movabs rdi,0x76bb0014ea281601
   14004dd2a:	out    dx,eax
   14004dd2b:	(bad)  
   14004dd2c:	popf   
   14004dd2d:	ja     0x14004ddac
   14004dd2f:	pop    rbp
   14004dd30:	sub    al,0xe9
   14004dd32:	adc    eax,0xe1dc448e
   14004dd37:	mov    ebp,0xfee36b2
   14004dd3c:	loope  0x14004dd19
   14004dd3e:	xchg   edi,eax
   14004dd3f:	rex.WX (bad) 
   14004dd41:	jg     0x14004dd5c
   14004dd43:	add    al,0x74
   14004dd45:	repnz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004dd47:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004dd48:	in     al,dx
   14004dd49:	(bad)  
   14004dd4a:	mov    ecx,0xe77db6dd
   14004dd4f:	movabs ds:0xc1a8e1f091abea5b,al
   14004dd58:	gs push rcx
   14004dd5a:	mov    esi,0xf9a65d42
   14004dd5f:	(bad)  
   14004dd60:	push   0xffffffffb50ad3ff
   14004dd65:	scas   al,BYTE PTR es:[rdi]
   14004dd66:	or     bh,BYTE PTR [rbp+rbp*2+0x7c5c4efb]
   14004dd6d:	in     eax,dx
   14004dd6e:	lahf   
   14004dd6f:	sbb    cl,BYTE PTR [rbx+0x692d747b]
   14004dd75:	(bad)  
   14004dd76:	add    DWORD PTR [rbp+0x57bc3bb2],edi
   14004dd7c:	rex.X test eax,0x8284d254
   14004dd82:	sub    DWORD PTR [rax],ebx
   14004dd84:	xchg   esi,eax
   14004dd85:	sub    al,0xf1
   14004dd87:	jg     0x14004dd10
   14004dd89:	mov    edi,0xa56301ff
   14004dd8e:	stc    
   14004dd8f:	add    BYTE PTR [rip+0x6a387c2],dh        # 0x146a86557
   14004dd95:	xchg   edi,eax
   14004dd96:	cmp    eax,0x7d400558
   14004dd9b:	out    0x7f,al
   14004dd9d:	loopne 0x14004dd9e
   14004dd9f:	(bad)  
   14004dda0:	push   rsp
   14004dda1:	push   rsp
   14004dda2:	pop    rdx
   14004dda3:	pcmpgtb mm4,QWORD PTR [rdi+rdx*4]
   14004dda7:	(bad)  
   14004dda8:	push   rdi
   14004dda9:	mov    edi,0x5ed608f1
   14004ddae:	cli    
   14004ddaf:	rex.RXB (bad) 
   14004ddb1:	add    eax,0x2699b338
   14004ddb6:	test   dl,al
   14004ddb8:	(bad)  
   14004ddb9:	(bad)  
   14004ddba:	retf   0x224f
   14004ddbd:	std    
   14004ddbe:	sahf   
   14004ddbf:	movabs rax,ds:0x26485ad40c13c142
   14004ddc9:	loop   0x14004de23
   14004ddcb:	mov    cl,0xbc
   14004ddcd:	fstp   TBYTE PTR [rcx+rsi*1]
   14004ddd0:	xor    BYTE PTR [rbp+0x38034305],ch
   14004ddd6:	lock fadd QWORD PTR [rax]
   14004ddd9:	or     eax,0x9b4e5d2b
   14004ddde:	in     eax,0x7d
   14004dde0:	(bad)  
   14004dde1:	or     esp,ecx
   14004dde3:	inc    DWORD PTR [rbp+0x0]
   14004dde6:	fstp   TBYTE PTR [rax+rax*1]
   14004dde9:	outs   dx,DWORD PTR ds:[rsi]
   14004ddea:	in     eax,0xde
   14004ddec:	mov    ch,0x97
   14004ddee:	(bad)  
   14004ddef:	adc    esi,ebp
   14004ddf1:	mov    ecx,0x112fbb6f
   14004ddf6:	adc    ecx,DWORD PTR [rcx+0xfab36b8]
   14004ddfc:	fs mov edx,0x7fc3172f
   14004de02:	gs scas al,BYTE PTR es:[rdi]
   14004de04:	(bad)  
   14004de05:	cld    
   14004de06:	movabs ds:0x23dd6b12cf596182,eax
   14004de0f:	mov    ecx,0xf16c37c
   14004de14:	pop    rbp
   14004de15:	sbb    al,0x50
   14004de17:	or     DWORD PTR [rdi-0x71],ebx
   14004de1a:	sbb    esp,eax
   14004de1c:	(bad)  
   14004de1d:	add    BYTE PTR [rsi],bh
   14004de1f:	scas   al,BYTE PTR es:[rdi]
   14004de20:	(bad)  
   14004de21:	add    al,0xe6
   14004de23:	(bad)  
   14004de24:	jmp    0x1180abb30
   14004de29:	mov    ch,0x7b
   14004de2b:	mov    edi,0x21abeff0
   14004de30:	xchg   ebx,eax
   14004de31:	imul   esi,DWORD PTR [rdx+0x4dd3eace],0xc0c13f7e
   14004de3b:	cmp    eax,edx
   14004de3d:	(bad)  
   14004de3e:	fimul  DWORD PTR [rsi+rsi*4-0x294994a]
   14004de45:	lea    esi,[rsi+0x3]
   14004de48:	jbe    0x14004de37
   14004de4a:	fidivr WORD PTR [rdi]
   14004de4c:	jmp    0x14004deb9
   14004de4e:	adc    ecx,esi
   14004de50:	(bad)  
   14004de51:	clc    
   14004de52:	jo     0x14004de49
   14004de54:	jrcxz  0x14004de0c
   14004de56:	rex.R
   14004de57:	rex.XB add r12b,sil
   14004de5a:	ins    BYTE PTR es:[rdi],dx
   14004de5b:	call   0x13ca020ab
   14004de60:	adc    eax,DWORD PTR [rdi+rdi*8+0x3]
   14004de64:	js     0x14004deae
   14004de66:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004de67:	fwait
   14004de68:	mov    al,0x76
   14004de6a:	int    0x59
   14004de6c:	pop    rax
   14004de6d:	mov    ch,0x72
   14004de6f:	cdq    
   14004de70:	xor    dh,BYTE PTR [rbx+0x1deda80f]
   14004de76:	add    BYTE PTR [rdi-0x4f8a7be4],ah
   14004de7c:	lods   al,BYTE PTR ds:[rsi]
   14004de7d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004de7e:	retf   
   14004de7f:	jp     0x14004de1f
   14004de81:	rex.XB add esp,DWORD PTR [r15]
   14004de84:	sbb    al,BYTE PTR [rdx+0x58]
   14004de87:	outs   dx,DWORD PTR ds:[rsi]
   14004de88:	stc    
   14004de89:	lock fwait
   14004de8b:	out    dx,eax
   14004de8c:	cld    
   14004de8d:	or     bl,BYTE PTR [rsi+0xe176d3f]
   14004de93:	push   rbp
   14004de94:	loope  0x14004de79
   14004de96:	(bad)  
   14004de97:	pop    rsp
   14004de98:	(bad)  
   14004de99:	jb     0x14004def6
   14004de9b:	sub    DWORD PTR [rbp+0x18],0xa1518d70
   14004dea2:	out    dx,eax
   14004dea3:	xchg   edi,eax
   14004dea4:	jle    0x14004dea8
   14004dea6:	(bad)  
   14004dea7:	jg     0x14004deca
   14004dea9:	loop   0x14004de83
   14004deab:	mov    DWORD PTR [rsi+rdi*2],ebx
   14004deae:	cli    
   14004deaf:	in     al,0x1
   14004deb1:	mov    esp,0xff6b07c
   14004deb6:	xor    DWORD PTR [rsi-0x4c],0xffffffb7
   14004deba:	(bad)  
   14004debb:	stc    
   14004debc:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004debe:	push   0xffffffffcc02c96d
   14004dec3:	sbb    eax,DWORD PTR [rax-0x50]
   14004dec6:	rex.WRXB
   14004dec7:	bnd jno 0x14004df48
   14004deca:	add    ecx,ebx
   14004decc:	(bad)  
   14004decd:	cld    
   14004dece:	retf   
   14004decf:	cmc    
   14004ded0:	sub    al,0xed
   14004ded2:	(bad)  
   14004ded3:	mov    ebp,DWORD PTR [rdi]
   14004ded5:	sbb    eax,0x6130a144
   14004deda:	pushf  
   14004dedb:	mov    bl,0xff
   14004dedd:	sbb    DWORD PTR [rip+0xffffffff8df2e6b8],0x83995c75        # 0xcdf7c59f
   14004dee7:	xchg   ecx,eax
   14004dee8:	pop    rsp
   14004dee9:	(bad)  
   14004deea:	std    
   14004deeb:	(bad)  
   14004deed:	xchg   BYTE PTR [rbp+0xf],ch
   14004def0:	inc    DWORD PTR [rdx-0x77]
   14004def3:	pop    rbp
   14004def4:	sub    al,0x3f
   14004def6:	lods   eax,DWORD PTR ds:[rsi]
   14004def7:	(bad)  
   14004def8:	setne  bl
   14004defb:	add    DWORD PTR [rax-0x6334a63d],0x94003580
   14004df05:	jmp    0x1300615a0
   14004df0a:	push   rcx
   14004df0b:	cmp    eax,0x4ffff021
   14004df10:	(bad)  
   14004df12:	repz fwait
   14004df14:	push   rdi
   14004df15:	mov    cl,0xeb
   14004df17:	cdq    
   14004df18:	push   rdi
   14004df19:	lock shl DWORD PTR [rdi],cl
   14004df1c:	psignw mm2,QWORD PTR [rbp+0x66]
   14004df21:	je     0x14004df69
   14004df23:	and    ah,BYTE PTR [rcx+0x74]
   14004df26:	sub    eax,0xe5f2c4e9
   14004df2b:	fisttp QWORD PTR [rax+0x24]
   14004df2e:	pushf  
   14004df2f:	ds push rax
   14004df31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004df32:	xchg   ecx,eax
   14004df33:	ds test al,0x2b
   14004df36:	stc    
   14004df37:	cmp    BYTE PTR [rbp-0x30],bh
   14004df3a:	jnp    0x14004df0b
   14004df3c:	(bad)  
   14004df3d:	xor    BYTE PTR [rsi-0x1],ah
   14004df40:	mov    ebx,edx
   14004df42:	leave  
   14004df43:	(bad)  
   14004df44:	retf   0x7039
   14004df47:	(bad)  
   14004df48:	mov    bl,BYTE PTR [rsi]
   14004df4a:	in     al,dx
   14004df4b:	(bad)  
   14004df4c:	lock mov dh,BYTE PTR [rcx-0x2]
   14004df50:	pop    rbp
   14004df51:	mov    ebx,0x9df2bf7
   14004df56:	lods   al,BYTE PTR ds:[rsi]
   14004df57:	xchg   BYTE PTR [rdx-0x61],ch
   14004df5a:	sbb    al,0x5b
   14004df5c:	cmp    al,0xab
   14004df5e:	(bad)  
   14004df5f:	cmp    ebx,DWORD PTR [rbp+rsi*4-0x5d707ff8]
   14004df66:	(bad)  
   14004df67:	add    DWORD PTR [rax-0x69],esi
   14004df6a:	push   rcx
   14004df6b:	pop    rcx
   14004df6c:	lock lods eax,DWORD PTR ds:[rsi]
   14004df6e:	mov    edi,0xdb6d8d05
   14004df73:	ja     0x14004dfd7
   14004df75:	fcmovnb st,st(3)
   14004df77:	cmp    esi,ecx
   14004df79:	fadd   QWORD PTR [rcx+0x7f5fac01]
   14004df7f:	scas   al,BYTE PTR es:[rdi]
   14004df80:	int3   
   14004df81:	lock sbb DWORD PTR [rsi],eax
   14004df84:	(bad)
   14004df89:	jmp    0x15d2a7250
   14004df8e:	mov    BYTE PTR [rsp+rbx*4-0x49],al
   14004df92:	int3   
   14004df93:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004df95:	mov    dl,0xb1
   14004df97:	and    BYTE PTR [rdi],0x73
   14004df9a:	sub    eax,0xdd11ee01
   14004df9f:	std    
   14004dfa0:	adc    DWORD PTR [rbx-0x8a237f],edx
   14004dfa6:	sbb    al,0xb9
   14004dfa8:	ror    cl,0xe9
   14004dfab:	fdiv   QWORD PTR [rbp+0x1]
   14004dfae:	fld    QWORD PTR [rdx+0x781d5ddd]
   14004dfb4:	jmp    0x1562d239e
   14004dfb9:	int    0xb9
   14004dfbb:	add    ebp,edi
   14004dfbd:	paddsb mm0,mm0
   14004dfc0:	xlat   BYTE PTR ds:[rbx]
   14004dfc1:	mov    esi,0xebc54778
   14004dfc6:	(bad)  [rbp-0x4611c085]
   14004dfcc:	out    dx,eax
   14004dfcd:	adc    ebp,esp
   14004dfcf:	cmp    eax,DWORD PTR [rdx+0x9a62c36]
   14004dfd5:	rex.RX
   14004dfd6:	ds pushf 
   14004dfd8:	mov    ebp,0x6867c00b
   14004dfdd:	(bad)  
   14004dfde:	and    al,BYTE PTR [rax]
   14004dfe0:	ins    BYTE PTR es:[rdi],dx
   14004dfe1:	(bad)  
   14004dfe2:	(bad)  
   14004dfe3:	mov    al,0x50
   14004dfe5:	cmp    BYTE PTR [rax-0x8],bl
   14004dfe8:	movabs ds:0xe3cb923b86bfd081,eax
   14004dff1:	rol    al,1
   14004dff3:	mov    DWORD PTR [rsi-0x7428f281],eax
   14004dff9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004dffa:	idiv   DWORD PTR [rdi]
   14004dffc:	mov    al,0x43
   14004dffe:	cwde   
   14004dfff:	rcr    ecx,0x6c
   14004e002:	sbb    ah,ch
   14004e004:	jb     0x14004dfdf
   14004e006:	out    dx,eax
   14004e007:	retf   
   14004e008:	xor    cl,al
   14004e00a:	xor    bx,WORD PTR [rax-0x4e]
   14004e00e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e00f:	sbb    eax,0x79ce9d9d
   14004e014:	sbb    DWORD PTR [rbx+0x28],esp
   14004e017:	jae    0x14004e007
   14004e019:	(bad)  
   14004e01a:	(bad)  [rdi+0x15]
   14004e01d:	(bad)  
   14004e01e:	lock hlt 
   14004e020:	mov    dl,BYTE PTR [rax-0x49]
   14004e023:	shl    BYTE PTR [rsi-0x7dac6012],1
   14004e029:	sub    esi,edx
   14004e02b:	cmp    BYTE PTR [rsi+r8*2],bl
   14004e02f:	rex.RXB sub r9d,DWORD PTR [r14d]
   14004e033:	mov    edi,0xdb24ba69
   14004e038:	mov    dh,0xef
   14004e03a:	(bad)  
   14004e03b:	addr32 (bad) 
   14004e03d:	jne    0x14004dffc
   14004e03f:	cmc    
   14004e040:	pop    rsi
   14004e041:	ins    BYTE PTR es:[rdi],dx
   14004e042:	fstp   TBYTE PTR [rsi+0x6fbd5f13]
   14004e048:	jnp    0x14004e097
   14004e04a:	adc    eax,DWORD PTR [rdi+0x2c4ae3a6]
   14004e050:	fs mov al,0x50
   14004e053:	or     BYTE PTR [rsp+rdx*1],ch
   14004e056:	(bad)  
   14004e057:	(bad)  
   14004e058:	xchg   edi,eax
   14004e059:	xchg   esp,eax
   14004e05a:	je     0x14004e0d9
   14004e05c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e05d:	and    ch,bl
   14004e05f:	add    dh,BYTE PTR [rax]
   14004e061:	faddp  st(4),st
   14004e063:	lock (bad) 
   14004e065:	inc    BYTE PTR [rdi]
   14004e067:	(bad)  
   14004e068:	jg     0x14004e017
   14004e06a:	js     0x14004e0da
   14004e06c:	jmp    QWORD PTR [rcx]
   14004e06e:	hlt    
   14004e06f:	(bad)  
   14004e070:	mov    al,0xa3
   14004e072:	out    dx,al
   14004e073:	scas   eax,DWORD PTR es:[rdi]
   14004e074:	loope  0x14004e024
   14004e076:	out    dx,eax
   14004e077:	pop    rbp
   14004e078:	and    DWORD PTR [rsi+0xd75aec2],edx
   14004e07e:	cld    
   14004e07f:	push   0x66
   14004e081:	mov    al,0x4e
   14004e083:	pop    rsi
   14004e084:	add    al,ch
   14004e086:	in     al,dx
   14004e087:	ins    BYTE PTR es:[rdi],dx
   14004e088:	rex.XB
   14004e089:	rex.RXB
   14004e08a:	rex.RXB cmp r11d,DWORD PTR [r10+0x196e339b]
   14004e091:	scas   al,BYTE PTR es:[rdi]
   14004e092:	sub    rbp,r12
   14004e095:	repnz add spl,spl
   14004e099:	gs (bad) 
   14004e09b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   14004e09d:	(bad)  
   14004e09e:	mov    bl,0xdf
   14004e0a0:	ins    DWORD PTR es:[rdi],dx
   14004e0a1:	add    edx,DWORD PTR [rcx]
   14004e0a3:	or     al,0x9e
   14004e0a5:	int3   
   14004e0a6:	pop    rax
   14004e0a7:	mov    ecx,0x55b972
   14004e0ac:	add    al,al
   14004e0ae:	lahf   
   14004e0af:	jg     0x14004e0aa
   14004e0b1:	lahf   
   14004e0b2:	lock mov ch,0x2f
   14004e0b5:	fiadd  WORD PTR [rcx-0x3dad994]
   14004e0bb:	sti    
   14004e0bc:	outs   dx,DWORD PTR ds:[rsi]
   14004e0bd:	ds mov al,0xa3
   14004e0c0:	scas   al,BYTE PTR es:[rdi]
   14004e0c1:	mov    ecx,0xb15f5702
   14004e0c6:	clc    
   14004e0c7:	pop    rsi
   14004e0c8:	xor    cl,BYTE PTR [rdx]
   14004e0ca:	rex.RXB (bad) 
   14004e0cc:	sub    BYTE PTR [rsi+0x16],cl
   14004e0cf:	hlt    
   14004e0d0:	in     al,0x4d
   14004e0d2:	and    bl,cl
   14004e0d4:	xchg   bl,ch
   14004e0d6:	add    ah,al
   14004e0d8:	jp     0x14004e097
   14004e0da:	je     0x14004e13c
   14004e0dc:	dec    BYTE PTR [rdi+0x1f]
   14004e0df:	ficomp WORD PTR [rax-0x2b2cca86]
   14004e0e5:	bswap  edi
   14004e0e7:	in     eax,dx
   14004e0e8:	(bad)  
   14004e0e9:	test   BYTE PTR [rbx-0x11ef0341],bh
   14004e0ef:	mov    ecx,0xfefc11ef
   14004e0f4:	in     eax,dx
   14004e0f5:	push   rdi
   14004e0f6:	movabs ds:0xbb5d820af977b6ef,al
   14004e0ff:	test   DWORD PTR [rbx],0xce07e321
   14004e105:	in     eax,0x32
   14004e107:	(bad)  
   14004e108:	mov    WORD PTR [rcx],?
   14004e10a:	add    al,0xdd
   14004e10c:	mov    al,0x61
   14004e10e:	sbb    eax,0xefb88912
   14004e113:	pushf  
   14004e114:	jge    0x14004e0bd
   14004e116:	lods   al,BYTE PTR ds:[rsi]
   14004e117:	mov    esi,0x34972780
   14004e11c:	out    0xaa,eax
   14004e11e:	cmp    edi,ebp
   14004e120:	pop    rcx
   14004e121:	or     edx,ebp
   14004e123:	int3   
   14004e124:	jle    0x14004e187
   14004e126:	sub    eax,0x7880e1b8
   14004e12b:	cmp    al,0x86
   14004e12d:	mov    ?,esi
   14004e12f:	push   rsi
   14004e130:	sbb    al,0x3f
   14004e132:	xor    DWORD PTR [rax-0x4c],ebp
   14004e135:	sti    
   14004e136:	shl    DWORD PTR [rdi],1
   14004e138:	mul    dl
   14004e13a:	ror    DWORD PTR [rbx-0x1],1
   14004e13d:	or     BYTE PTR [rbx],ch
   14004e13f:	jp     0x14004e11b
   14004e141:	imul   ebx,DWORD PTR [rsi+0x44891c26],0xffffffb0
   14004e148:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e149:	mov    bl,0xd
   14004e14b:	add    eax,DWORD PTR [rdi+0x499b228f]
   14004e151:	sub    eax,0xcc00b12
   14004e156:	add    al,0x2
   14004e158:	xchg   BYTE PTR [rax],al
   14004e15a:	mov    eax,0x8004151e
   14004e15f:	loope  0x14004e160
   14004e161:	mov    bl,0xd0
   14004e163:	mov    ah,0x3e
   14004e165:	cmp    bh,BYTE PTR [rdx+0x6fd5f1e8]
   14004e16b:	cmp    al,0x82
   14004e16d:	jnp    0x14004e15d
   14004e16f:	fcmovnu st,st(6)
   14004e171:	nop
   14004e172:	mov    edx,0x7e608fbc
   14004e177:	repz sbb DWORD PTR [rip+0x5d4fe3f8],0xaedbbe87        # 0x19d54c57a
   14004e182:	adc    al,0x79
   14004e184:	sahf   
   14004e185:	cdq    
   14004e186:	pop    rdi
   14004e187:	jmp    0x14004e1b0
   14004e189:	mov    eax,0x9b4a9738
   14004e18e:	jae    0x14004e11e
   14004e190:	push   0xdacaa34
   14004e195:	rex.W mov bpl,0xb6
   14004e198:	mov    bh,0xad
   14004e19a:	(bad)  
   14004e19b:	loopne 0x14004e186
   14004e19d:	in     eax,0xd1
   14004e19f:	in     eax,dx
   14004e1a0:	rex.WX (bad) 
   14004e1a2:	add    al,BYTE PTR [rax]
   14004e1a4:	loop   0x14004e1ec
   14004e1a6:	clc    
   14004e1a7:	pop    rbx
   14004e1a8:	or     edi,DWORD PTR [rip+0x1565d3d]        # 0x1415b3eeb
   14004e1ae:	loopne 0x14004e151
   14004e1b0:	(bad)  
   14004e1b1:	repnz (bad) 
   14004e1b3:	adc    dh,BYTE PTR [rcx+0x2c]
   14004e1b6:	in     eax,dx
   14004e1b7:	out    dx,al
   14004e1b8:	(bad)  
   14004e1b9:	mov    dl,BYTE PTR [rip+0x468b114b]        # 0x1868ff30a
   14004e1bf:	xor    BYTE PTR [rax-0x8],dh
   14004e1c2:	call   0xd08fdf69
   14004e1c7:	emms   
   14004e1c9:	xchg   ebp,eax
   14004e1ca:	cmp    BYTE PTR [rax+0x231b6128],al
   14004e1d0:	or     al,0xfc
   14004e1d2:	(bad)  
   14004e1d3:	cli    
   14004e1d4:	xor    DWORD PTR [rdx+0x7713e3cb],edx
   14004e1da:	std    
   14004e1db:	in     eax,dx
   14004e1dc:	mov    ah,0xb5
   14004e1de:	jle    0x14004e195
   14004e1e0:	mov    edx,0x43f2feef
   14004e1e5:	js     0x14004e1db
   14004e1e7:	icebp  
   14004e1e8:	mov    ebp,0x5ec2e4b8
   14004e1ed:	movsxd ebx,DWORD PTR [rax-0x162ded55]
   14004e1f3:	xor    al,0xba
   14004e1f5:	mov    ebx,0xacad34bb
   14004e1fa:	cli    
   14004e1fb:	in     eax,dx
   14004e1fc:	(bad)  
   14004e1fd:	(bad)  [rbp-0x53]
   14004e200:	in     eax,dx
   14004e201:	xchg   esp,eax
   14004e202:	jno    0x14004e1b0
   14004e204:	(bad)  
   14004e205:	scas   eax,DWORD PTR es:[rdi]
   14004e206:	jl     0x14004e1f5
   14004e208:	scas   eax,DWORD PTR es:[rdi]
   14004e209:	dec    BYTE PTR [rdx-0x3e94c366]
   14004e20f:	lods   eax,DWORD PTR ds:[rsi]
   14004e210:	xchg   esp,eax
   14004e211:	imul   esp,ebp,0x9a0cd9b2
   14004e217:	(bad)  
   14004e218:	push   rdx
   14004e219:	sbb    BYTE PTR [rbx],bl
   14004e21b:	stos   DWORD PTR es:[rdi],eax
   14004e21c:	jg     0x14004e238
   14004e21e:	jo     0x14004e25a
   14004e220:	popf   
   14004e221:	ret    0x65f2
   14004e224:	rex.WXB mov r9b,0x74
   14004e227:	imul   esp,DWORD PTR [rdi+0x1f9f37a8],0xc2933647
   14004e231:	(bad)  
   14004e232:	jg     0x14004e21e
   14004e234:	mov    edx,0x1d3bebba
   14004e239:	push   rax
   14004e23a:	and    DWORD PTR [rsi],ecx
   14004e23c:	nop
   14004e23d:	sbb    al,0xd8
   14004e23f:	xlat   BYTE PTR ds:[rbx]
   14004e240:	pop    rdi
   14004e241:	add    BYTE PTR [rbx+rcx*1-0x60],dl
   14004e245:	mov    ?,ecx
   14004e247:	inc    DWORD PTR [rax]
   14004e249:	ss js  0x14004e2ab
   14004e24c:	ret    
   14004e24d:	popf   
   14004e24e:	in     eax,dx
   14004e24f:	(bad)  
   14004e250:	(bad)  
   14004e251:	jp     0x14004e242
   14004e253:	int    0xd7
   14004e255:	(bad)  
   14004e256:	(bad)  
   14004e257:	mov    dh,0x56
   14004e259:	je     0x14004e2d0
   14004e25b:	sub    eax,0x5162c41
   14004e260:	add    edx,DWORD PTR [rax+riz*4+0x51c38c9e]
   14004e267:	lods   eax,DWORD PTR ds:[rsi]
   14004e268:	in     al,dx
   14004e269:	rex (bad) 
   14004e26b:	hlt    
   14004e26c:	retf   
   14004e26d:	loopne 0x14004e20e
   14004e26f:	sub    al,0x5f
   14004e271:	leave  
   14004e272:	pop    rdx
   14004e273:	jo     0x14004e25f
   14004e275:	push   rbx
   14004e276:	int    0x7e
   14004e278:	outs   dx,DWORD PTR ds:[rsi]
   14004e279:	fist   DWORD PTR [rbx]
   14004e27b:	(bad)  
   14004e27c:	ss (bad) 
   14004e27e:	(bad)  
   14004e27f:	jmp    0x1317d0856
   14004e284:	(bad)
   14004e287:	mov    edx,0xeae80036
   14004e28c:	(bad)  
   14004e28d:	rex ja 0x14004e2e7
   14004e290:	(bad)  
   14004e291:	pop    rdx
   14004e292:	pop    rdx
   14004e293:	pushf  
   14004e294:	(bad)  
   14004e295:	(bad)  
   14004e296:	ror    edi,1
   14004e298:	popf   
   14004e299:	(bad)  
   14004e29a:	in     al,0xc6
   14004e29c:	lock sti 
   14004e29e:	mov    bh,0x5f
   14004e2a0:	mov    ecx,0x87bfb528
   14004e2a5:	push   rax
   14004e2a6:	cmp    BYTE PTR [rdx+0x40002692],cl
   14004e2ac:	out    0x3,al
   14004e2ae:	push   rax
   14004e2af:	add    DWORD PTR [rax-0x4127c727],esi
   14004e2b5:	shl    BYTE PTR [rax+0x0],1
   14004e2b8:	or     ecx,DWORD PTR [rsi+0x15]
   14004e2bb:	stc    
   14004e2bc:	imul   eax,DWORD PTR [rcx+0x38],0x1c
   14004e2c0:	rex.RX jnp 0x14004e33e
   14004e2c3:	sbb    ebx,edx
   14004e2c5:	cmp    ebx,edx
   14004e2c7:	adc    DWORD PTR [rsi],ecx
   14004e2c9:	xchg   DWORD PTR [rip+0x57c65d89],esp        # 0x197cb4058
   14004e2cf:	xor    edx,ebx
   14004e2d1:	test   eax,0x82853060
   14004e2d6:	push   rbx
   14004e2d7:	ror    bh,cl
   14004e2d9:	pop    rdx
   14004e2da:	lock (bad) 
   14004e2dc:	fwait
   14004e2dd:	scas   al,BYTE PTR es:[rdi]
   14004e2de:	mov    ch,0xd0
   14004e2e0:	(bad)  
   14004e2e2:	mov    ss,WORD PTR [rdi+0x5f]
   14004e2e5:	cmp    eax,0xe8d16284
   14004e2ea:	mov    ah,0x2
   14004e2ec:	xchg   ecx,eax
   14004e2ed:	rex.W sbb BYTE PTR [rbx-0x6a],cl
   14004e2f1:	je     0x14004e353
   14004e2f3:	pop    rcx
   14004e2f4:	rex.WRXB (bad) 
   14004e2f6:	loop   0x14004e369
   14004e2f8:	addr32 jle 0x14004e27d
   14004e2fb:	xor    ecx,DWORD PTR [rcx+rbp*4+0x6]
   14004e2ff:	sbb    eax,0xe3357597
   14004e304:	mov    bl,0x7f
   14004e306:	mov    al,0x38
   14004e308:	mov    ch,0xbf
   14004e30a:	xchg   DWORD PTR [rax+0x28],edx
   14004e30d:	or     al,0xcb
   14004e30f:	popf   
   14004e310:	fmul   QWORD PTR [rbx+rcx*4]
   14004e313:	add    BYTE PTR [rax-0x3d3ad0b6],bh
   14004e319:	cmp    edi,0xbefc2b5f
   14004e31f:	xchg   BYTE PTR [rbx],bl
   14004e321:	or     al,BYTE PTR [rbp+0x10a64c90]
   14004e327:	mov    eax,edi
   14004e329:	xchg   ecx,eax
   14004e32a:	rex.WR (bad) 
   14004e32c:	retf   
   14004e32d:	(bad)  
   14004e32e:	rex.WRXB
   14004e32f:	rex.WR
   14004e330:	rex.WR movabs al,ds:0x84e4c050a1429c58
   14004e33a:	cmp    DWORD PTR [rbx],ebx
   14004e33c:	scas   al,BYTE PTR es:[rdi]
   14004e33d:	(bad)  
   14004e33e:	rex.R movabs ds:0x5b5b5a076747451,eax
   14004e348:	imul   rbx,QWORD PTR es:[r8-0x76abfc6c],0xfffffffffffffff6
   14004e351:	jnp    0x14004e38e
   14004e353:	xor    esi,DWORD PTR [rdi+0x23]
   14004e356:	hlt    
   14004e357:	test   DWORD PTR [rbx],ebp
   14004e359:	call   0x152fc5ad4
   14004e35e:	mov    esp,0x7eb9bafe
   14004e363:	rex.RB cmp al,0x1e
   14004e366:	ret    
   14004e367:	shl    BYTE PTR [rbp+0x6cece85d],cl
   14004e36d:	rex.RXB xor al,0x12
   14004e370:	(bad)  
   14004e371:	mov    esp,0xc7412c3a
   14004e376:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e377:	fs adc al,0xff
   14004e37a:	idiv   edi
   14004e37c:	loope  0x14004e379
   14004e37e:	sbb    bh,ah
   14004e380:	imul   ecx,DWORD PTR [rdx*2-0x78f0520],0x4abb82a
   14004e38b:	rcr    esp,1
   14004e38d:	pop    rbx
   14004e38e:	cmc    
   14004e38f:	push   rdx
   14004e390:	rcl    DWORD PTR [rax+riz*8],0xda
   14004e394:	sar    bh,1
   14004e396:	movabs al,ds:0x9aa64832674f7d19
   14004e39f:	nop
   14004e3a0:	push   0x6a
   14004e3a2:	add    ah,BYTE PTR [rax-0x9]
   14004e3a5:	jnp    0x14004e3a8
   14004e3a7:	and    BYTE PTR [rcx-0x7c],al
   14004e3aa:	rex.X mov cl,0x38
   14004e3ad:	test   DWORD PTR [rcx+0xf0c31d1],esi
   14004e3b3:	pop    fs
   14004e3b5:	cmp    BYTE PTR [rip+0xffffffffd3f9f355],dh        # 0x113fed710
   14004e3bb:	jmp    0x11bdfbdf4
   14004e3c0:	nop
   14004e3c1:	rex.WX cmp QWORD PTR [rsi-0x64f99c52],rsp
   14004e3c8:	(bad)  
   14004e3c9:	stos   DWORD PTR es:[rdi],eax
   14004e3ca:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e3cb:	mov    ecx,0x6289cb7d
   14004e3d0:	xchg   ebp,eax
   14004e3d1:	movabs ds:0x705ad35eaf1eb2fd,al
   14004e3da:	retf   0xe2d4
   14004e3dd:	rex.RX je 0x14004e457
   14004e3e0:	ja     0x14004e3c4
   14004e3e2:	in     al,0xc9
   14004e3e4:	and    esp,esp
   14004e3e6:	repz rex.WRX add al,0x3b
   14004e3ea:	fwait
   14004e3eb:	rex.WRB movabs ds:0x11b86021ac5da3a3,rax
   14004e3f5:	(bad)  
   14004e3f6:	stos   DWORD PTR es:[rdi],eax
   14004e3f7:	loop   0x14004e448
   14004e3f9:	ds stc 
   14004e3fb:	outs   dx,BYTE PTR ds:[rsi]
   14004e3fc:	pushf  
   14004e3fd:	mov    ch,0xca
   14004e3ff:	(bad)  
   14004e400:	mov    dh,0xe1
   14004e402:	(bad)
   14004e407:	add    eax,0x15c021f0
   14004e40c:	add    BYTE PTR [rsi-0x77d7a000],dh
   14004e412:	(bad)  
   14004e413:	xlat   BYTE PTR ds:[rbx]
   14004e414:	add    al,0x27
   14004e416:	rex.X dec DWORD PTR [rax-0x58b59028]
   14004e41d:	xchg   ecx,eax
   14004e41e:	ins    DWORD PTR es:[rdi],dx
   14004e41f:	outs   dx,BYTE PTR ds:[rsi]
   14004e420:	rex.RB and al,0xea
   14004e423:	fdivr  QWORD PTR [rax-0x12]
   14004e426:	(bad)  
   14004e428:	(bad)  
   14004e429:	cld    
   14004e42a:	jbe    0x14004e45e
   14004e42c:	add    BYTE PTR [rax-0x5db8f57c],ch
   14004e432:	push   0x7341696e
   14004e437:	rex.WXB or rax,r14
   14004e43a:	or     eax,DWORD PTR [rip+0xffffffff813c9e0c]        # 0xc141824c
   14004e440:	rex.X rcr DWORD PTR [rax],0xc6
   14004e444:	add    eax,esp
   14004e446:	pop    rax
   14004e447:	(bad)  
   14004e448:	jmp    0x12d71ea99
   14004e44d:	in     eax,dx
   14004e44e:	mov    BYTE PTR [rdx-0x466ad519],bh
   14004e454:	gs mov dl,0xd
   14004e457:	ror    BYTE PTR [rax+0x39bafb39],1
   14004e45d:	(bad)  
   14004e45e:	mov    ebx,0xbac302d6
   14004e463:	jne    0x14004e422
   14004e465:	sub    BYTE PTR [rdx+rcx*1],dl
   14004e468:	mov    BYTE PTR [rdx+rax*8-0x78],al
   14004e46c:	(bad)  
   14004e46d:	(bad)  
   14004e46e:	(bad)  
   14004e46f:	retf   0x6e4a
   14004e472:	sub    r11b,BYTE PTR [rcx]
   14004e475:	ret    
   14004e476:	sbb    eax,0xeb04bc1f
   14004e47b:	(bad)  
   14004e47c:	in     eax,dx
   14004e47d:	mov    cl,0xde
   14004e47f:	mov    bh,0xc5
   14004e481:	mov    BYTE PTR [rax+0x28],dl
   14004e484:	(bad)  
   14004e485:	jb     0x14004e4e0
   14004e487:	popf   
   14004e488:	gs jmp 0xd641e693
   14004e48e:	(bad)  
   14004e48f:	ror    DWORD PTR [rdi],cl
   14004e491:	or     ah,BYTE PTR [rdx-0x111e4a01]
   14004e497:	(bad)  
   14004e498:	(bad)  
   14004e499:	test   BYTE PTR [rcx+0x48e11e5c],dl
   14004e49f:	add    al,0xad
   14004e4a1:	ins    DWORD PTR es:[rdi],dx
   14004e4a2:	sbb    eax,0x591c2788
   14004e4a7:	sub    bh,BYTE PTR [rbx]
   14004e4a9:	sub    esi,DWORD PTR [rax]
   14004e4ab:	sbb    eax,0x48963bf3
   14004e4b0:	movabs al,ds:0x3c9c11b9721967bb
   14004e4b9:	jle    0x14004e517
   14004e4bb:	lods   al,BYTE PTR ds:[rsi]
   14004e4bc:	loopne 0x14004e4d9
   14004e4be:	mov    DWORD PTR [rsi-0x6f],eax
   14004e4c1:	leave  
   14004e4c2:	fs rcr esp,1
   14004e4c5:	rol    BYTE PTR [rdx-0x665bd7b0],cl
   14004e4cb:	rcl    BYTE PTR [rbp+0x74cde167],cl
   14004e4d1:	(bad)  
   14004e4d2:	mov    esi,0xd0ba395f
   14004e4d7:	(bad)  
   14004e4d8:	sub    DWORD PTR [rsp+rbp*4],ebp
   14004e4db:	test   BYTE PTR [rdx+rbp*1-0x72],dh
   14004e4df:	stos   DWORD PTR es:[rdi],eax
   14004e4e0:	cs pop rbx
   14004e4e2:	xchg   ebx,esi
   14004e4e4:	xlat   BYTE PTR ds:[rbx]
   14004e4e5:	sub    al,0xc3
   14004e4e7:	(bad)  
   14004e4e8:	mov    edi,0x391c33fd
   14004e4ed:	rex.X mov ecx,DWORD PTR ds:[rcx+0x42d6e9f6]
   14004e4f5:	and    ah,cl
   14004e4f7:	sub    al,0x40
   14004e4f9:	rex.WXB out 0x2e,eax
   14004e4fc:	rex.W (bad) 
   14004e4fe:	ret    0x3a0c
   14004e501:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e502:	xchg   edx,eax
   14004e503:	xor    esp,edi
   14004e505:	stc    
   14004e506:	scas   al,BYTE PTR es:[edi]
   14004e508:	ret    
   14004e509:	cdq    
   14004e50a:	sub    edi,DWORD PTR [rdx]
   14004e50c:	adc    BYTE PTR [rax-0x7e],al
   14004e50f:	test   DWORD PTR [rdx-0x80],eax
   14004e512:	mov    ecx,0x32cbf8
   14004e517:	(bad)  
   14004e518:	jp     0x14004e51c
   14004e51a:	sar    BYTE PTR [rax-0x25],0x22
   14004e51e:	lock jmp FWORD PTR [rbx+0x9c0d0e3]
   14004e525:	ins    BYTE PTR es:[rdi],dx
   14004e526:	fstp   TBYTE PTR [rsi+0xa648913]
   14004e52c:	int    0xad
   14004e52e:	sbb    eax,0x4a428508
   14004e533:	adc    al,0x9a
   14004e535:	adc    al,ah
   14004e537:	fld    TBYTE PTR [rdi+0x4a6efcd7]
   14004e53d:	cmp    ebp,DWORD PTR [rsi-0x1c761f3c]
   14004e543:	mov    BYTE PTR [rdi],ah
   14004e545:	xchg   edx,eax
   14004e546:	enter  0xb364,0x72
   14004e54a:	rex.WR sbb rax,0x1987d4f5
   14004e550:	iret   
   14004e551:	fldcw  WORD PTR [rdi-0x1a57b912]
   14004e557:	mov    edx,0xf1b8b33a
   14004e55c:	(bad)  
   14004e55d:	lea    edi,[rax+0x6875b2ea]
   14004e563:	rex.WX cmp rcx,rax
   14004e566:	mov    edx,0xc32cd7f3
   14004e56b:	mov    edi,0x1e2f68fd
   14004e570:	cld    
   14004e571:	out    dx,al
   14004e572:	push   rbx
   14004e573:	ror    DWORD PTR [rax],cl
   14004e575:	cmp    dl,dl
   14004e577:	xor    ch,BYTE PTR [rdx-0xc8745d0]
   14004e57d:	push   0x7c
   14004e57f:	cli    
   14004e580:	mov    gs,WORD PTR [rbx]
   14004e582:	(bad)  
   14004e583:	jns    0x14004e587
   14004e585:	rex.W mov al,0x70
   14004e588:	add    al,0x30
   14004e58a:	pop    rdi
   14004e58b:	or     al,0x5a
   14004e58d:	add    DWORD PTR [rdx],esp
   14004e58f:	add    BYTE PTR [rsi],ch
   14004e591:	shl    BYTE PTR [rbx+0x3],cl
   14004e594:	(bad)  
   14004e595:	movabs al,ds:0x9aa6481d81ffa3a
   14004e59e:	fst    DWORD PTR [rsi]
   14004e5a0:	(bad)  
   14004e5a1:	(bad)  
   14004e5a2:	(bad)  
   14004e5a3:	rex.WRB push r11
   14004e5a5:	cli    
   14004e5a6:	sahf   
   14004e5a7:	cmp    al,0xc5
   14004e5a9:	xchg   esi,eax
   14004e5aa:	or     eax,0x3c06012b
   14004e5af:	repz fwait
   14004e5b1:	xlat   BYTE PTR ds:[rbx]
   14004e5b2:	rex.W push 0x25
   14004e5b5:	repz fwait
   14004e5b7:	movabs eax,ds:0x6c9c5797ea8963ad
   14004e5c0:	push   rbx
   14004e5c1:	lods   eax,DWORD PTR ds:[rsi]
   14004e5c2:	ds push rcx
   14004e5c4:	fidivr DWORD PTR [rbx]
   14004e5c6:	mov    bl,0x61
   14004e5c8:	sub    eax,0xeba42538
   14004e5cd:	and    cl,BYTE PTR [rdi+0x59]
   14004e5d0:	fstp   QWORD PTR [rdx-0x28]
   14004e5d3:	mov    al,0x66
   14004e5d5:	cmp    DWORD PTR [rsi-0x43850486],ebp
   14004e5db:	sti    
   14004e5dc:	in     eax,dx
   14004e5dd:	jmp    0x14004e57f
   14004e5df:	movabs ds:0x2b845e376dc71529,eax
   14004e5e8:	(bad)  
   14004e5e9:	pop    rbp
   14004e5ea:	mov    eax,DWORD PTR [rdi]
   14004e5ec:	mov    edi,0xfc7e14fb
   14004e5f1:	mov    bl,0xe7
   14004e5f3:	(bad)  
   14004e5f4:	cli    
   14004e5f5:	push   0x23706a23
   14004e5fa:	mov    edx,0xebb8333a
   14004e5ff:	(bad)  
   14004e600:	sub    esi,DWORD PTR [rcx+0x5e]
   14004e603:	scas   eax,DWORD PTR es:[rdi]
   14004e604:	(bad)  
   14004e605:	(bad)  
   14004e606:	(bad)  
   14004e607:	jo     0x14004e5ea
   14004e609:	ret    
   14004e60a:	in     eax,0x8b
   14004e60c:	add    BYTE PTR [rcx+riz*8],bh
   14004e60f:	in     eax,0x18
   14004e611:	stos   DWORD PTR es:[rdi],eax
   14004e612:	xor    al,BYTE PTR [rsi+rbp*1]
   14004e615:	rex jne 0x14004e614
   14004e618:	in     al,0xc9
   14004e61a:	add    ecx,DWORD PTR [rax+0x37]
   14004e61d:	mov    bh,0x49
   14004e61f:	(bad)  
   14004e620:	mov    edi,0xa65770c2
   14004e625:	sub    DWORD PTR [rcx-0x742da189],eax
   14004e62b:	rex.WRXB jle 0x14004e612
   14004e62e:	in     eax,dx
   14004e62f:	pop    rax
   14004e630:	(bad)  
   14004e632:	lods   al,BYTE PTR ds:[rsi]
   14004e633:	(bad)  
   14004e634:	jae    0x14004e616
   14004e636:	in     eax,0x23
   14004e638:	clc    
   14004e639:	in     al,0x9f
   14004e63b:	ds sbb ah,0xd8
   14004e63f:	mov    eax,0x69f54e5b
   14004e644:	imul   esi,DWORD PTR [rcx],0xffffffbf
   14004e647:	jmp    0x14004e63c
   14004e649:	retf   
   14004e64a:	imul   ebp,DWORD PTR [rbp+0x14bb3bcf],0xc
   14004e651:	(bad)  
   14004e652:	out    0xbc,eax
   14004e654:	sbb    ch,BYTE PTR [rbp+0x56]
   14004e657:	rcl    ch,0xef
   14004e65a:	pop    rax
   14004e65b:	(bad)  
   14004e65c:	bsf    esp,edi
   14004e65f:	sub    eax,0xa7656b38
   14004e664:	std    
   14004e665:	xchg   BYTE PTR [rcx],dl
   14004e667:	je     0x14004e6de
   14004e669:	fs icebp 
   14004e66b:	(bad)  
   14004e66d:	mov    edi,0x74ddb70a
   14004e672:	adc    DWORD PTR [rsi-0x3],esi
   14004e675:	(bad)  
   14004e676:	and    eax,0x2f67f8fc
   14004e67b:	loopne 0x14004e662
   14004e67d:	xlat   BYTE PTR ds:[rbx]
   14004e67e:	mov    ?,ecx
   14004e680:	mov    edx,0x9537f411
   14004e685:	mov    WORD PTR [rbx-0x15],fs
   14004e688:	out    0xd5,al
   14004e68a:	js     0x14004e663
   14004e68c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e68d:	imul   esi,DWORD PTR [rcx-0x2],0xffffff9a
   14004e691:	cmp    al,0xd5
   14004e694:	loopne 0x14004e659
   14004e696:	in     eax,0x8d
   14004e698:	sbb    BYTE PTR [rax*1-0x28ff59f8],0x89
   14004e6a0:	(bad)  
   14004e6a1:	pop    rsi
   14004e6a2:	sbb    al,0xc0
   14004e6a4:	leave  
   14004e6a5:	pop    rsp
   14004e6a6:	adc    DWORD PTR [rcx+rdi*2-0x23cd28c9],ecx
   14004e6ad:	add    eax,0x66ee9e86
   14004e6b2:	pop    rsp
   14004e6b3:	jg     0x14004e68a
   14004e6b5:	rex.RX jl 0x14004e69c
   14004e6b8:	(bad)  
   14004e6b9:	mov    bh,0x22
   14004e6bb:	shl    DWORD PTR [rsi+rdi*2-0x2a231aac],cl
   14004e6c2:	pop    rbp
   14004e6c3:	clc    
   14004e6c4:	lock or eax,0xfbffe217
   14004e6ca:	test   bh,0x9c
   14004e6cd:	sbb    bh,BYTE PTR [rax-0x3dcbd297]
   14004e6d3:	lea    edx,[rax]
   14004e6d5:	xchg   ebp,eax
   14004e6d6:	sar    DWORD PTR [rdx-0x24],cl
   14004e6d9:	sub    DWORD PTR [rdx+0x35],0xfffffffb
   14004e6dd:	cmp    eax,0x11bba339
   14004e6e2:	cdq    
   14004e6e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e6e4:	add    al,0x6e
   14004e6e6:	jle    0x14004e6d7
   14004e6e8:	pop    sp
   14004e6ea:	std    
   14004e6eb:	mov    ?,ebx
   14004e6ed:	rcr    ch,1
   14004e6ef:	cdq    
   14004e6f0:	lods   eax,DWORD PTR ds:[rsi]
   14004e6f1:	jmp    0x1b57938d4
   14004e6f6:	fs jno 0x14004e6dc
   14004e6f9:	(bad)  
   14004e6fa:	fwait
   14004e6fb:	jo     0x14004e6e0
   14004e6fd:	(bad)  
   14004e6fe:	fwait
   14004e6ff:	jo     0x14004e6e5
   14004e701:	fmul   DWORD PTR [rax]
   14004e703:	pop    rsi
   14004e704:	jle    0x14004e6f3
   14004e706:	sbb    BYTE PTR [rsi+0x7a],bl
   14004e709:	in     eax,dx
   14004e70a:	sbb    BYTE PTR [rsi-0x571e30e4],cl
   14004e710:	sbb    ebp,DWORD PTR [rbx]
   14004e712:	add    BYTE PTR [rax-0x5d8b982b],al
   14004e718:	stos   DWORD PTR es:[rdi],eax
   14004e719:	and    eax,DWORD PTR [rbx-0x4ec4d42b]
   14004e71f:	(bad)  
   14004e720:	int    0xf2
   14004e722:	mov    edx,0xc078b3cf
   14004e727:	lea    edx,[rdi+rbx*1]
   14004e72a:	fisttp WORD PTR cs:[rdx]
   14004e72d:	loopne 0x14004e772
   14004e72f:	xchg   ecx,eax
   14004e730:	sahf   
   14004e731:	or     eax,0x9e98c67d
   14004e736:	iret   
   14004e737:	xchg   edi,eax
   14004e738:	rex.RX add r10d,DWORD PTR [rax]
   14004e73b:	cmp    al,0xb1
   14004e73d:	repz adc BYTE PTR [rbp-0x6d],0x7a
   14004e742:	imul   esp,edi,0xedc6eeae
   14004e748:	(bad)  
   14004e749:	pop    rbp
   14004e74a:	test   BYTE PTR [rbx],bl
   14004e74c:	ficomp WORD PTR [rbp-0x7]
   14004e74f:	and    eax,0xf8df0f94
   14004e754:	push   rsi
   14004e755:	cmp    al,0xf8
   14004e757:	frstor [rdi+0x46a01588]
   14004e75d:	mov    ch,0xfd
   14004e75f:	fmul   QWORD PTR [rax]
   14004e761:	pop    rbp
   14004e762:	xor    BYTE PTR [rax-0x3aeb995b],bh
   14004e768:	test   DWORD PTR [rdx-0x2c],0x2f742d62
   14004e76f:	imul   eax,esi,0x1b7c1f1d
   14004e775:	cs mov ebp,0x9ba46cf0
   14004e77b:	sbb    ah,bl
   14004e77d:	ja     0x14004e7f6
   14004e77f:	jne    0x14004e7e7
   14004e781:	rcl    ebp,1
   14004e783:	cdq    
   14004e784:	(bad)
   14004e787:	pushf  
   14004e788:	(bad)  
   14004e789:	nop
   14004e78a:	cli    
   14004e78b:	add    cl,BYTE PTR [rax-0x8]
   14004e78e:	or     QWORD PTR [rsi+0x11],r12
   14004e792:	add    dh,al
   14004e794:	stos   BYTE PTR es:[rdi],al
   14004e795:	mov    WORD PTR [rdx-0x55],ss
   14004e798:	pop    rcx
   14004e799:	stos   DWORD PTR es:[rdi],eax
   14004e79a:	push   0x70
   14004e79c:	rcl    DWORD PTR [rsi],cl
   14004e79e:	es sahf 
   14004e7a0:	fdivp  st(3),st
   14004e7a2:	mov    al,BYTE PTR [rcx+0xe]
   14004e7a5:	(bad)  
   14004e7a6:	cmp    DWORD PTR [rsi-0x44],ebp
   14004e7a9:	jp     0x14004e7ce
   14004e7ab:	outs   dx,BYTE PTR ds:[rsi]
   14004e7ac:	js     0x14004e7a5
   14004e7ae:	es pop rsp
   14004e7b0:	js     0x14004e773
   14004e7b2:	stos   BYTE PTR es:[rdi],al
   14004e7b3:	(bad)  
   14004e7b4:	(bad)  
   14004e7b5:	leave  
   14004e7b6:	xor    al,0x25
   14004e7b8:	lock mov gs,WORD PTR [rbp+0x1f91e2e7]
   14004e7bf:	call   FWORD PTR [rdx]
   14004e7c1:	(bad)  
   14004e7c2:	fmul   QWORD PTR [rax]
   14004e7c4:	mov    edx,0xd430495d
   14004e7c9:	jmp    0x14004e811
   14004e7cb:	(bad)  
   14004e7cc:	xor    esp,DWORD PTR [rdi+0x7f]
   14004e7cf:	jrcxz  0x14004e78b
   14004e7d1:	adc    eax,0xdefbe0f8
   14004e7d6:	(bad)  
   14004e7d7:	retf   
   14004e7d8:	fidivr WORD PTR [rdx+0x4e]
   14004e7db:	rex.WRB xlat BYTE PTR ds:[rbx]
   14004e7dd:	(bad)  
   14004e7de:	loopne 0x14004e834
   14004e7e0:	ret    0xfed4
   14004e7e3:	(bad)  
   14004e7e4:	sbb    BYTE PTR [rbx],cl
   14004e7e6:	sbb    DWORD PTR [rbx-0x5264fd8d],0x16041b6
   14004e7f0:	push   rsp
   14004e7f1:	(bad)  
   14004e7f2:	jmp    0x14004e77b
   14004e7f4:	(bad)  
   14004e7f5:	rex.RB (bad) 
   14004e7f7:	(bad)  
   14004e7f8:	fwait
   14004e7f9:	rex.WB loopne 0x14004e7a2
   14004e7fc:	imul   esi,DWORD PTR [rsi],0xffffffe1
   14004e7ff:	movabs ds:0x631f8aae9e8ad81f,eax
   14004e808:	mov    ch,0xe2
   14004e80a:	movd   mm7,DWORD PTR [rdi+0x7]
   14004e80e:	(bad)  
   14004e80f:	in     eax,dx
   14004e810:	xchg   DWORD PTR [rbx+0x41],edi
   14004e813:	int    0x79
   14004e815:	sbb    DWORD PTR [rcx-0x109c6009],ebx
   14004e81b:	xchg   esp,eax
   14004e81c:	gs retf 0xccef
   14004e820:	fmul   QWORD PTR [rax]
   14004e822:	(bad)  
   14004e825:	sbb    ch,bh
   14004e827:	out    dx,eax
   14004e828:	mov    ecx,0x79dc7ce2
   14004e82d:	jmp    0x14004e7d4
   14004e82f:	pop    rax
   14004e830:	mov    edx,0x6f8abec4
   14004e835:	cmp    cl,0xd
   14004e838:	(bad)  
   14004e839:	or     al,BYTE PTR [rbx]
   14004e83b:	and    eax,0x4597273
   14004e840:	xchg   esi,eax
   14004e841:	rex.RB
   14004e842:	rex (bad) 
   14004e844:	add    BYTE PTR [rax+0x75],ah
   14004e847:	sbb    al,0x1a
   14004e849:	sbb    ah,al
   14004e84b:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e84d:	lods   eax,DWORD PTR ds:[rsi]
   14004e84e:	clc    
   14004e84f:	fmul   st,st(5)
   14004e851:	pop    rbx
   14004e852:	jno    0x14004e827
   14004e854:	xor    eax,0x4f49909b
   14004e859:	call   QWORD PTR [rbx+0x2d5d3de9]
   14004e85f:	fdiv   DWORD PTR [rdx-0x681da9f]
   14004e865:	jmp    0x14004e8be
   14004e867:	test   DWORD PTR [rsi-0x69],esi
   14004e86a:	add    DWORD PTR [rax],edi
   14004e86c:	rex.WXB push r8
   14004e86e:	iret   
   14004e86f:	and    bl,BYTE PTR [rax]
   14004e871:	retw   
   14004e873:	pop    rdx
   14004e874:	enter  0x2534,0xf0
   14004e878:	movabs eax,ds:0xc36b7fae87c42feb
   14004e881:	int3   
   14004e882:	cld    
   14004e883:	add    BYTE PTR [rbx+0xfed7f05],dh
   14004e889:	clc    
   14004e88a:	jb     0x14004e906
   14004e88c:	xchg   ebx,eax
   14004e88d:	fld    QWORD PTR [rdx]
   14004e88f:	or     ah,cl
   14004e891:	cld    
   14004e892:	stos   BYTE PTR es:[rdi],al
   14004e893:	clc    
   14004e894:	cli    
   14004e895:	pop    rdi
   14004e896:	jle    0x14004e89c
   14004e898:	push   rdi
   14004e899:	pop    rsi
   14004e89a:	mov    dh,0xb6
   14004e89c:	(bad)  
   14004e89d:	cmc    
   14004e89e:	jge    0x14004e88a
   14004e8a0:	neg    esi
   14004e8a2:	mov    DWORD PTR [rdi-0xaa02109],esp
   14004e8a8:	sbb    DWORD PTR gs:[rcx],ebp
   14004e8ab:	adc    esi,DWORD PTR [rbx+rsi*1]
   14004e8ae:	popf   
   14004e8af:	jns    0x14004e87f
   14004e8b1:	pop    rcx
   14004e8b2:	jge    0x14004e922
   14004e8b4:	test   BYTE PTR [rbp+0x28],cl
   14004e8b7:	sub    al,0xed
   14004e8b9:	push   0xffffffffffffffc1
   14004e8bb:	(bad)  
   14004e8bc:	(bad)  
   14004e8bd:	jb     0x14004e8d8
   14004e8bf:	fdivp  st(3),st
   14004e8c1:	scas   al,BYTE PTR es:[rdi]
   14004e8c2:	or     eax,0xbaba0d
   14004e8c7:	jae    0x14004e8d6
   14004e8c9:	(bad)  
   14004e8ca:	rex.WRX
   14004e8cb:	add    BYTE PTR [r14+r14*1-0x7f6cf8f6],r13b
   14004e8d3:	stos   BYTE PTR es:[rdi],al
   14004e8d4:	movabs ds:0x85582f0b8007e491,al
   14004e8dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e8de:	rex.WXB pop r10
   14004e8e0:	xor    BYTE PTR [rax-0x3c],dh
   14004e8e3:	pop    rcx
   14004e8e4:	scas   al,BYTE PTR es:[rdi]
   14004e8e5:	int    0xcf
   14004e8e7:	in     al,dx
   14004e8e8:	idiv   DWORD PTR [rbp-0x4b]
   14004e8eb:	(bad)  
   14004e8ec:	(bad)  
   14004e8ed:	(bad)  
   14004e8ee:	sti    
   14004e8ef:	pop    rcx
   14004e8f0:	or     edi,DWORD PTR [rsi-0xb]
   14004e8f3:	cmc    
   14004e8f4:	je     0x14004e8ab
   14004e8f6:	loopne 0x14004e8c7
   14004e8f8:	(bad)  
   14004e8f9:	jnp    0x14004e918
   14004e8fb:	fidiv  WORD PTR [rdx-0x2]
   14004e8fe:	retf   0x5e86
   14004e901:	pop    rbx
   14004e902:	sbb    cl,0x46
   14004e905:	gs in  eax,dx
   14004e907:	psubb  mm6,QWORD PTR [rdx+0x7a]
   14004e90b:	jne    0x14004e915
   14004e90d:	sar    BYTE PTR [rcx-0x73],0x6e
   14004e911:	rex.WRX sub cl,0xe1
   14004e915:	(bad)  
   14004e917:	cli    
   14004e918:	(bad)  
   14004e919:	stos   BYTE PTR es:[rdi],al
   14004e91a:	pop    rdi
   14004e91b:	(bad)  
   14004e91c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e91d:	(bad)  
   14004e91e:	fsub   QWORD PTR [rdi+rbx*8-0x7f165c22]
   14004e925:	push   rbx
   14004e926:	rex.WRX jle 0x14004e8ba
   14004e929:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e92a:	mov    WORD PTR [rdx-0x37],fs
   14004e92d:	stc    
   14004e92e:	(bad)  
   14004e92f:	mov    edi,0xfa8dc3cc
   14004e934:	xchg   esi,eax
   14004e935:	cs leave 
   14004e937:	(bad)  
   14004e938:	in     al,0x5f
   14004e93a:	pop    rsp
   14004e93b:	cmp    bh,cl
   14004e93d:	(bad)  
   14004e93e:	sbb    al,bh
   14004e940:	lods   eax,DWORD PTR ds:[rsi]
   14004e941:	sbb    bl,BYTE PTR [rbx]
   14004e943:	(bad)  
   14004e944:	jbe    0x14004e9b7
   14004e946:	shl    DWORD PTR [rip+0xffffffff8a94d09b],cl        # 0xca99b9e7
   14004e94c:	adc    edx,DWORD PTR [rdx+0x42]
   14004e94f:	cld    
   14004e950:	mov    bh,0x9
   14004e952:	(bad)  
   14004e953:	(bad)  
   14004e954:	pop    rdi
   14004e955:	xchg   edi,eax
   14004e956:	(bad)  
   14004e957:	sub    BYTE PTR [rbx+0x74],dh
   14004e95a:	jne    0x14004e992
   14004e95c:	and    edx,DWORD PTR [rbp-0x3ebd4676]
   14004e962:	adc    ecx,DWORD PTR [rbx+rsi*2]
   14004e965:	jl     0x14004e96a
   14004e967:	add    cl,BYTE PTR [rbx+rax*1-0x4b]
   14004e96b:	cmp    eax,0x874e3f34
   14004e970:	add    BYTE PTR [rax],bl
   14004e972:	pop    rdi
   14004e973:	or     eax,0xcd01260d
   14004e978:	sbb    eax,0x56f3763e
   14004e97d:	retf   
   14004e97e:	out    0xb5,eax
   14004e980:	mov    eax,0x655af3fd
   14004e985:	scas   al,BYTE PTR es:[rdi]
   14004e986:	or     BYTE PTR [rsi],al
   14004e988:	fstp   QWORD PTR [rdx+0x70]
   14004e98b:	retf   0x82a9
   14004e98e:	loope  0x14004e9bd
   14004e990:	out    0x9f,eax
   14004e992:	sub    DWORD PTR [rdi],0x780dc9fe
   14004e998:	hlt    
   14004e999:	jg     0x14004e999
   14004e99b:	adc    DWORD PTR [rdx+0x57],edi
   14004e99e:	ja     0x14004e929
   14004e9a0:	mov    edx,0x700890a8
   14004e9a5:	cli    
   14004e9a6:	rol    DWORD PTR [rdi-0x4fdcb42d],0xac
   14004e9ad:	add    edx,DWORD PTR [rax]
   14004e9af:	(bad)  
   14004e9b0:	out    dx,al
   14004e9b1:	lock (bad) 
   14004e9b3:	imul   esi,DWORD PTR [rdi],0xffffffe1
   14004e9b6:	scas   eax,DWORD PTR es:[rdi]
   14004e9b7:	mov    edi,0xda8018f5
   14004e9bc:	es in  eax,0x78
   14004e9bf:	rex.RB xchg r12d,eax
   14004e9c1:	sub    DWORD PTR [rsi+rdx*4-0x28b22140],edi
   14004e9c8:	cmp    BYTE PTR [rbx+0x4fce8ed],dh
   14004e9ce:	rex.WRXB sub BYTE PTR [r8+0x28],r15b
   14004e9d2:	(bad)  
   14004e9d3:	rol    BYTE PTR es:[rdx],0xc3
   14004e9d7:	mov    WORD PTR [rdi+0x50d3add7],ds
   14004e9dd:	cmc    
   14004e9de:	(bad)  
   14004e9df:	rex.WRX (bad) 
   14004e9e1:	out    0x3e,eax
   14004e9e3:	lock or bh,BYTE PTR [rcx+0x1]
   14004e9e7:	cmp    al,0x2c
   14004e9e9:	jmp    0x14004ea59
   14004e9eb:	(bad)  
   14004e9ee:	fld    QWORD PTR [rdi+rdi*2-0x2ccc3e03]
   14004e9f5:	(bad)  
   14004e9f6:	fisttp DWORD PTR [rdi-0x59]
   14004e9f9:	add    ah,BYTE PTR [rdi-0x2d]
   14004e9fc:	rex.WB fdiv QWORD PTR [r13+rbp*4+0x33]
   14004ea01:	(bad)  
   14004ea02:	(bad)  
   14004ea03:	pop    rcx
   14004ea04:	mov    bh,0x39
   14004ea06:	(bad)  
   14004ea07:	sbb    DWORD PTR [rdx+0xa],0x8171ce
   14004ea0e:	cwde   
   14004ea0f:	rex.WXB xor BYTE PTR [r14],spl
   14004ea12:	xlat   BYTE PTR ds:[rbx]
   14004ea13:	jae    0x14004e9bd
   14004ea15:	icebp  
   14004ea16:	mov    BYTE PTR [rdx+0x7458b5b9],cl
   14004ea1c:	mov    bl,0x30
   14004ea1e:	loopne 0x14004e9ef
   14004ea20:	jge    0x14004ea20
   14004ea22:	add    eax,DWORD PTR [rcx+0x7]
   14004ea25:	stos   DWORD PTR es:[rdi],eax
   14004ea26:	or     eax,0x6df07c77
   14004ea2b:	out    dx,al
   14004ea2c:	sbb    BYTE PTR [rbp+0x1d99dffa],bh
   14004ea32:	loopne 0x14004ea32
   14004ea34:	jrcxz  0x14004ea9b
   14004ea36:	xchg   esp,eax
   14004ea37:	jns    0x14004ea92
   14004ea39:	in     al,dx
   14004ea3a:	add    ebx,DWORD PTR [rsp+rsi*8-0x6338f9]
   14004ea41:	call   0x1b3e80213
   14004ea46:	jmp    rcx
   14004ea48:	pop    rdx
   14004ea49:	sub    edi,ecx
   14004ea4b:	add    ebp,edx
   14004ea4d:	cmp    eax,0xa18c2f18
   14004ea52:	xor    BYTE PTR [rsi+0x1817353b],dl
   14004ea58:	rol    BYTE PTR [rdi],0xa7
   14004ea5b:	pop    rsi
   14004ea5c:	sbb    al,BYTE PTR [r10]
   14004ea5f:	and    BYTE PTR [rax+0x9],bl
   14004ea62:	js     0x14004ea52
   14004ea64:	mov    cl,0xf6
   14004ea66:	pushf  
   14004ea67:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ea68:	mov    eax,0x3a319368
   14004ea6d:	imul   eax,DWORD PTR [rbp+0x735deff0],0xffffffbe
   14004ea74:	in     al,0xfe
   14004ea76:	(bad)  
   14004ea77:	jae    0x14004ea07
   14004ea79:	or     esi,DWORD PTR [rdi]
   14004ea7b:	sahf   
   14004ea7c:	pop    rcx
   14004ea7d:	cmc    
   14004ea7e:	fdiv   st,st(1)
   14004ea80:	jl     0x14004ea90
   14004ea82:	mov    ecx,0x8c28a3c1
   14004ea87:	(bad)  
   14004ea88:	movabs ds:0x8234e01e33bc6538,eax
   14004ea91:	(bad)  
   14004ea92:	fcmovnb st,st(1)
   14004ea94:	xchg   esp,eax
   14004ea95:	mov    edi,0x7f8f8a79
   14004ea9a:	lock xchg edx,eax
   14004ea9c:	cli    
   14004ea9d:	rex.RXB movsxd r9d,DWORD PTR [r8+0x2c01c0b9]
   14004eaa4:	not    ecx
   14004eaa6:	cld    
   14004eaa7:	(bad)  
   14004eaa8:	cmp    BYTE PTR [rax],bl
   14004eaaa:	or     ah,BYTE PTR es:[rbx+0x46cb9b28]
   14004eab1:	(bad)  
   14004eab2:	pop    rax
   14004eab3:	and    al,0x8
   14004eab5:	add    al,0xc0
   14004eab7:	cmp    al,0xc5
   14004eab9:	push   rbp
   14004eaba:	xchg   edi,eax
   14004eabb:	lods   eax,DWORD PTR ds:[rsi]
   14004eabc:	ret    
   14004eabd:	mov    dl,0xee
   14004eabf:	push   rsi
   14004eac0:	mul    DWORD PTR [rbp+0x3ff1a9d]
   14004eac6:	loop   0x14004eac7
   14004eac8:	repnz out dx,al
   14004eaca:	push   rsi
   14004eacb:	sub    al,0xeb
   14004eacd:	outs   dx,BYTE PTR ds:[rsi]
   14004eace:	lods   eax,DWORD PTR ds:[rsi]
   14004eacf:	js     0x14004ea5f
   14004ead1:	xor    dh,BYTE PTR [rdi]
   14004ead3:	xlat   BYTE PTR ds:[rbx]
   14004ead4:	mov    DWORD PTR [rdx],ecx
   14004ead6:	xor    bh,al
   14004ead8:	mov    al,0xf9
   14004eada:	jle    0x14004eaae
   14004eadc:	(bad)  
   14004eadd:	ins    BYTE PTR es:[rdi],dx
   14004eade:	cmp    BYTE PTR [rsi-0x77],cl
   14004eae1:	add    BYTE PTR [rax+0x388349d],ah
   14004eae7:	(bad)  
   14004eae8:	mov    gs,WORD PTR [rbx-0x2f24cc5a]
   14004eaee:	in     eax,dx
   14004eaef:	sub    al,0x17
   14004eaf1:	ins    DWORD PTR es:[rdi],dx
   14004eaf2:	stos   BYTE PTR es:[rdi],al
   14004eaf3:	ins    BYTE PTR es:[rdi],dx
   14004eaf4:	(bad)  
   14004eaf5:	mov    ebx,0x3fafeb85
   14004eafa:	shr    ah,0x81
   14004eafd:	adc    r10d,esp
   14004eb00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004eb01:	loop   0x14004eaec
   14004eb03:	int3   
   14004eb04:	fiadd  DWORD PTR [rax+0x6899307f]
   14004eb0a:	out    0x78,al
   14004eb0c:	jrcxz  0x14004eadb
   14004eb0e:	movabs eax,ds:0xe397332eabfe4b69
   14004eb17:	or     dh,BYTE PTR [rax]
   14004eb19:	mov    edi,0x698c1731
   14004eb1e:	cwde   
   14004eb1f:	add    BYTE PTR [rax],cl
   14004eb21:	or     bh,bl
   14004eb23:	pop    rax
   14004eb24:	jl     0x14004eb0d
   14004eb26:	sar    DWORD PTR [rip+0xffffffffdf8bf1d8],1        # 0x11f90dd04
   14004eb2c:	(bad)  
   14004eb2d:	jge    0x14004eb8e
   14004eb2f:	retf   
   14004eb30:	in     eax,0x12
   14004eb32:	xchg   edx,eax
   14004eb33:	xchg   ecx,eax
   14004eb34:	xor    ch,BYTE PTR [rsi-0xa454b44]
   14004eb3a:	adc    BYTE PTR [rbx+rsi*4],bh
   14004eb3d:	add    BYTE PTR [rbx],dh
   14004eb3f:	adc    al,BYTE PTR [rax]
   14004eb41:	rex.B (bad) 
   14004eb43:	push   0x3c
   14004eb45:	mov    esi,0x7c1ee8fb
   14004eb4a:	out    0x87,eax
   14004eb4c:	jnp    0x14004eb3e
   14004eb4e:	hlt    
   14004eb4f:	ficom  WORD PTR [rdi-0x53]
   14004eb52:	div    DWORD PTR [rdi-0x18d5bf2e]
   14004eb58:	gs adc al,0x86
   14004eb5b:	(bad)  
   14004eb5c:	loope  0x14004eb6d
   14004eb5e:	(bad)  
   14004eb5f:	gs jl  0x14004eb47
   14004eb62:	fisttp QWORD PTR [rdx-0x57fa0620]
   14004eb68:	pop    rbx
   14004eb69:	add    BYTE PTR [rbx+rdi*4-0x2d],cl
   14004eb6d:	mov    bl,ah
   14004eb6f:	(bad)  
   14004eb70:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004eb72:	movsxd esp,DWORD PTR [rdi+rdx*4]
   14004eb75:	(bad)  
   14004eb76:	(bad)  
   14004eb77:	jg     0x14004eb68
   14004eb79:	sub    DWORD PTR [rbx+rdi*2-0x5],edi
   14004eb7d:	pop    rsi
   14004eb7e:	mov    esp,0xe80dbeee
   14004eb83:	addr32 cli 
   14004eb85:	push   rdi
   14004eb86:	mov    edx,0x1162e57b
   14004eb8b:	(bad)  [rdx+rcx*1+0x7d]
   14004eb8f:	mov    bh,0xbd
   14004eb91:	stos   DWORD PTR es:[rdi],eax
   14004eb92:	mov    dh,0x13
   14004eb94:	(bad)  
   14004eb95:	(bad)  
   14004eb96:	(bad)  
   14004eb98:	movabs ds:0x5bba2961ad30012e,eax
   14004eba1:	(bad)  
   14004eba3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004eba4:	cmp    eax,0xc09c0d0e
   14004eba9:	push   rdi
   14004ebaa:	out    dx,eax
   14004ebab:	fisttp DWORD PTR [rsi-0x742760b9]
   14004ebb1:	xchg   ecx,eax
   14004ebb2:	pop    rsp
   14004ebb3:	(bad)  
   14004ebb4:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   14004ebb6:	pop    rbp
   14004ebb7:	or     ch,cl
   14004ebb9:	loopne 0x14004ec10
   14004ebbb:	ins    BYTE PTR es:[rdi],dx
   14004ebbc:	pop    rsi
   14004ebbd:	cs jrcxz 0x14004eb4f
   14004ebc0:	push   rax
   14004ebc2:	mov    edx,0x1b86bf9a
   14004ebc7:	pop    rax
   14004ebc8:	add    bl,dh
   14004ebca:	(bad)  
   14004ebcb:	retf   0xeea
   14004ebce:	mul    BYTE PTR fs:[rdi-0x5d]
   14004ebd2:	(bad)  
   14004ebd3:	div    BYTE PTR [rsi-0x7bde87a7]
   14004ebd9:	stc    
   14004ebda:	ins    BYTE PTR es:[rdi],dx
   14004ebdb:	(bad)  
   14004ebdc:	push   rsi
   14004ebdd:	in     al,dx
   14004ebde:	fidivr DWORD PTR [rbp-0x67f002e1]
   14004ebe4:	fist   WORD PTR [rbx]
   14004ebe6:	pushf  
   14004ebe7:	sbb    bl,BYTE PTR [rdi]
   14004ebe9:	rex.XB movabs ds:0xbea276a38b725d49,al
   14004ebf3:	jne    0x14004ebd8
   14004ebf5:	sub    dh,ah
   14004ebf7:	fnsave [rsi+0x65]
   14004ebfa:	int    0xed
   14004ebfc:	or     BYTE PTR [rsi],dl
   14004ebfe:	jle    0x14004ec59
   14004ec00:	sbb    al,dh
   14004ec02:	sahf   
   14004ec03:	adc    al,BYTE PTR [rdi]
   14004ec05:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ec06:	push   rdx
   14004ec07:	popf   
   14004ec08:	(bad)  
   14004ec09:	rex.WRXB sub rax,0x400218c7
   14004ec0f:	inc    DWORD PTR [rsi+0x74114cd8]
   14004ec15:	xor    DWORD PTR [rcx-0x5d882493],ecx
   14004ec1b:	inc    DWORD PTR [rcx+0x109fbe1d]
   14004ec21:	(bad)  
   14004ec22:	rex.WRX mov es,WORD PTR [rbx]
   14004ec25:	imul   esi,DWORD PTR [rdi-0xe],0xb7a5590e
   14004ec2c:	xchg   esi,eax
   14004ec2d:	jnp    0x14004ebc7
   14004ec2f:	rex.WB (bad) 
   14004ec31:	lock xchg ebp,eax
   14004ec33:	(bad)  
   14004ec34:	sti    
   14004ec35:	rex.W jge 0x14004ec45
   14004ec38:	or     ch,BYTE PTR [rax+rax*4]
   14004ec3b:	jns    0x14004ec43
   14004ec3d:	push   rsi
   14004ec3e:	push   rcx
   14004ec3f:	retf   
   14004ec40:	iret   
   14004ec41:	(bad)  
   14004ec42:	sbb    dh,BYTE PTR [rax-0x2109848f]
   14004ec48:	sti    
   14004ec49:	cmp    DWORD PTR gs:[rsi+0x1],0xffbeff1c
   14004ec51:	rol    edi,0xb0
   14004ec54:	in     eax,dx
   14004ec55:	loope  0x14004ecb6
   14004ec57:	loopne 0x14004ec29
   14004ec59:	ror    BYTE PTR [rcx+0xb19658a],0xd5
   14004ec60:	mov    esp,0xb7bd231e
   14004ec65:	cdq    
   14004ec66:	je     0x14004ec6a
   14004ec68:	jg     0x14004ec69
   14004ec6a:	pop    rdi
   14004ec6b:	(bad)  
   14004ec6c:	mov    ah,BYTE PTR [rbp+0x75]
   14004ec6f:	rex.W sbb dil,BYTE PTR cs:[rax+0xd14f300]
   14004ec77:	adc    BYTE PTR [rdx],al
   14004ec79:	mov    ch,0xbe
   14004ec7b:	ficomp DWORD PTR [rbp-0x69]
   14004ec7e:	add    al,ah
   14004ec80:	pushf  
   14004ec81:	xlat   BYTE PTR ds:[rbx]
   14004ec82:	(bad)  
   14004ec83:	imul   eax,DWORD PTR [rdx-0x7fffa72],0xc7efe7cc
   14004ec8d:	mov    dh,0xed
   14004ec8f:	cmp    ebp,DWORD PTR [rbx+0x2a]
   14004ec92:	retf   
   14004ec93:	and    DWORD PTR [rbx+r14*4],esp
   14004ec97:	lods   eax,DWORD PTR ds:[rsi]
   14004ec98:	mov    ch,0x93
   14004ec9a:	shr    BYTE PTR [rip+0xffffffffe04a6d96],cl        # 0x1204f5a36
   14004eca0:	(bad)  
   14004eca1:	(bad)  
   14004eca2:	call   FWORD PTR [rsi]
   14004eca4:	(bad)  
   14004eca5:	pushf  
   14004eca6:	gs jl  0x14004ec85
   14004eca9:	test   eax,0x73c1157a
   14004ecae:	(bad)  
   14004ecaf:	mov    edi,0x422a8
   14004ecb4:	loop   0x14004ecc8
   14004ecb6:	int3   
   14004ecb7:	shr    BYTE PTR [rbp+0xf],0x1
   14004ecbb:	js     0x14004ed25
   14004ecbd:	fiadd  DWORD PTR [rdi-0x25]
   14004ecc0:	rex (bad) 
   14004ecc2:	xor    BYTE PTR [rcx+0xdcb71c8],dh
   14004ecc8:	xchg   edi,eax
   14004ecc9:	(bad)  
   14004ecca:	rex.RB
   14004eccb:	rex.WRXB jnp 0x14004ec93
   14004ecce:	xor    ch,BYTE PTR [rsp+rdx*1]
   14004ecd1:	rex.X and bl,bpl
   14004ecd4:	(bad)  
   14004ecd5:	out    0xce,al
   14004ecd7:	in     eax,0x88
   14004ecd9:	(bad)  
   14004ecda:	xchg   ebx,eax
   14004ecdb:	(bad)  
   14004ecdc:	mov    ecx,cs
   14004ecde:	nop
   14004ecdf:	in     eax,dx
   14004ece0:	jg     0x14004ed2a
   14004ece2:	std    
   14004ece3:	iret   
   14004ece4:	rex.X pop rax
   14004ece6:	(bad)  
   14004ece8:	mov    bh,bl
   14004ecea:	(bad)  
   14004eceb:	jmp    0x14004ece1
   14004eced:	enter  0x9cef,0x3b
   14004ecf1:	js     0x14004ed3d
   14004ecf3:	repz or DWORD PTR [rbx-0x10],esi
   14004ecf7:	xor    al,0x1e
   14004ecf9:	or     al,BYTE PTR [rcx]
   14004ecfb:	cmp    BYTE PTR [rdi+riz*4+0x1c6e9f2],ch
   14004ed02:	sub    dl,BYTE PTR [rcx+0x33e7167f]
   14004ed08:	iret   
   14004ed09:	push   rdi
   14004ed0a:	ins    BYTE PTR es:[rdi],dx
   14004ed0b:	fst    st(2)
   14004ed0d:	mov    ebx,DWORD PTR [rdi]
   14004ed0f:	ins    DWORD PTR es:[rdi],dx
   14004ed10:	sti    
   14004ed11:	xor    ebp,DWORD PTR [rbx+0x60]
   14004ed14:	cs adc al,0x8e
   14004ed17:	movabs al,ds:0x9920675d2d03a5a9
   14004ed20:	ins    DWORD PTR es:[rdi],dx
   14004ed21:	sub    BYTE PTR [r14+rsi*2],bl
   14004ed25:	leave  
   14004ed26:	out    dx,eax
   14004ed27:	nop
   14004ed28:	(bad)  
   14004ed2a:	scas   eax,DWORD PTR es:[rdi]
   14004ed2b:	(bad)  
   14004ed2c:	sti    
   14004ed2d:	jg     0x14004ed06
   14004ed2f:	and    eax,0xaf97f8bd
   14004ed34:	fisttp WORD PTR [rcx+0x47a7ab35]
   14004ed3a:	jle    0x14004ed5c
   14004ed3c:	mov    al,0x0
   14004ed3e:	out    0x23,al
   14004ed40:	xchg   esp,eax
   14004ed41:	(bad)  
   14004ed42:	rol    al,cl
   14004ed44:	out    0xe3,eax
   14004ed46:	ret    
   14004ed47:	jmp    0xc01c440f
   14004ed4c:	jae    0x14004ed8c
   14004ed4e:	ins    DWORD PTR es:[rdi],dx
   14004ed4f:	imul   esp,esp,0x8a45fe4b
   14004ed55:	ins    BYTE PTR es:[rdi],dx
   14004ed56:	test   DWORD PTR es:[rdi-0x5d487008],edi
   14004ed5d:	out    dx,eax
   14004ed5e:	imul   BYTE PTR [rbx]
   14004ed60:	icebp  
   14004ed61:	(bad)  
   14004ed62:	sti    
   14004ed63:	mov    dh,0xe3
   14004ed65:	mov    ebx,0x448bda3f
   14004ed6a:	mov    edx,0xc258d119
   14004ed6f:	pop    rbx
   14004ed70:	repnz (bad) 
   14004ed72:	loop   0x14004ede3
   14004ed74:	or     eax,0xf3c2e9f7
   14004ed79:	iret   
   14004ed7a:	shl    BYTE PTR [rdi+0x5b14bb6e],0xce
   14004ed81:	(bad)  
   14004ed82:	movsxd esp,esi
   14004ed84:	lea    ebx,[rbx-0x3c]
   14004ed87:	iret   
   14004ed88:	gs ds ret 
   14004ed8b:	lock xrelease sbb DWORD PTR [rcx],0xc5f9ce8f
   14004ed93:	add    al,0x22
   14004ed95:	add    BYTE PTR [rsi+0x1ecd519d],bl
   14004ed9b:	cld    
   14004ed9c:	cmp    dl,BYTE PTR [rbx-0x30]
   14004ed9f:	leave  
   14004eda0:	add    BYTE PTR [rax],al
   14004eda2:	sub    edi,DWORD PTR [rdx-0x26]
   14004eda5:	icebp  
   14004eda6:	mov    ch,0x2f
   14004eda8:	fiadd  WORD PTR [rcx+0x1f7ff3ff]
   14004edae:	mov    bl,0x3b
   14004edb1:	mul    cl
   14004edb3:	loope  0x14004edd2
   14004edb5:	mov    edi,0x61d1c0c1
   14004edba:	mov    BYTE PTR [rdi],dh
   14004edbc:	add    cl,dil
   14004edbf:	cmp    DWORD PTR [rsi+0xd],ebp
   14004edc2:	cdq    
   14004edc3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004edc4:	add    al,0x2e
   14004edc6:	mov    edi,0xf0dc1cf8
   14004edcb:	scas   al,BYTE PTR es:[rdi]
   14004edcc:	repz sbb al,BYTE PTR [rbx+0x7c]
   14004edd0:	(bad)  
   14004edd1:	add    DWORD PTR [rip+0xb3080b0],0x3c000073        # 0x14b356e8b
   14004eddb:	sbb    eax,DWORD PTR [rcx]
   14004eddd:	lock mov dl,0x9e
   14004ede0:	pop    rdx
   14004ede1:	cs rex.WRB (bad) 
   14004ede4:	mov    bh,0x30
   14004ede6:	rex.W loopne 0x14004ede0
   14004ede9:	xlat   BYTE PTR ds:[rbx]
   14004edea:	mov    WORD PTR [rsi-0x15839952],ds
   14004edf0:	mov    dh,0xcb
   14004edf2:	lock test eax,0xc0c32edb
   14004edf8:	shl    DWORD PTR [rcx-0x14],1
   14004edfb:	jg     0x14004edf6
   14004edfd:	sub    dh,dh
   14004edff:	mov    edi,0x1c6f147c
   14004ee04:	sbb    eax,0x204f61c6
   14004ee09:	add    al,bl
   14004ee0b:	jb     0x14004ee0b
   14004ee0d:	or     ah,BYTE PTR [rdx+rbx*4-0x1e]
   14004ee11:	call   0x19b10a153
   14004ee16:	(bad)  
   14004ee17:	pop    rdi
   14004ee18:	xor    DWORD PTR [rbx],ebp
   14004ee1a:	ins    DWORD PTR es:[rdi],dx
   14004ee1b:	or     DWORD PTR [rax+rax*8],eax
   14004ee1e:	cmp    al,0x3
   14004ee20:	std    
   14004ee21:	out    0x3,al
   14004ee23:	push   0x58
   14004ee25:	(bad)  
   14004ee26:	rex.WXB pop r11
   14004ee28:	and    esi,DWORD PTR [rdx-0x306935ee]
   14004ee2e:	(bad)  
   14004ee2f:	add    DWORD PTR [rax-0x47],edi
   14004ee32:	xor    ebx,eax
   14004ee34:	sbb    ah,0x59
   14004ee37:	out    dx,eax
   14004ee38:	iret   
   14004ee39:	cdq    
   14004ee3a:	mov    ah,0x42
   14004ee3c:	rol    BYTE PTR [rbx-0x2eea7f67],cl
   14004ee42:	mov    bl,0xa4
   14004ee44:	sbb    DWORD PTR [rip+0xfffffffff9719a4b],edi        # 0x139768895
   14004ee4a:	(bad)
   14004ee4d:	movabs eax,ds:0x4d3610f37013e0cd
   14004ee56:	outs   dx,DWORD PTR ds:[rsi]
   14004ee57:	stc    
   14004ee58:	(bad)  
   14004ee59:	xchg   ebx,eax
   14004ee5a:	enter  0x2198,0x22
   14004ee5e:	add    dh,dh
   14004ee60:	sbb    ch,dl
   14004ee62:	xchg   esi,eax
   14004ee63:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ee64:	mov    edi,0x4ed28450
   14004ee69:	(bad)  
   14004ee6a:	fnstsw WORD PTR [rcx-0x7f633ef3]
   14004ee70:	stc    
   14004ee71:	mov    al,al
   14004ee73:	add    bl,BYTE PTR [rax+0x5aeee05f]
   14004ee79:	mov    ss,WORD PTR [rdi+rdx*8+0x6bc922bc]
   14004ee80:	mov    dl,0x13
   14004ee82:	pushf  
   14004ee83:	jp     0x14004ee71
   14004ee85:	pushf  
   14004ee86:	fisub  WORD PTR [rbx+0xf]
   14004ee89:	add    dh,BYTE PTR [rsi]
   14004ee8b:	jp     0x14004ee16
   14004ee8d:	sub    dh,bl
   14004ee8f:	or     BYTE PTR [rcx+0x15],bl
   14004ee92:	movabs al,ds:0x3db7033cc00408d1
   14004ee9b:	seta   ah
   14004ee9e:	mov    ch,0x73
   14004eea0:	fstp   QWORD PTR [rsi-0x4b]
   14004eea3:	xstore-rng (bad)
   14004eea4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004eea5:	rex.XB add BYTE PTR [r14+0x52c1c28d],al
   14004eeac:	push   rcx
   14004eead:	mov    eax,DWORD PTR [rdx]
   14004eeaf:	add    DWORD PTR [rax],0x91105f98
   14004eeb5:	xor    al,0xbf
   14004eeb7:	(bad)  
   14004eeb8:	xor    al,BYTE PTR [rbx+0x387c8265]
   14004eebe:	cmp    eax,0xd7d81a1c
   14004eec3:	outs   dx,DWORD PTR ds:[rsi]
   14004eec4:	enter  0x8695,0x59
   14004eec8:	add    BYTE PTR [rax+rbx*4+0x2b],ah
   14004eecc:	sar    BYTE PTR [rsp+rax*2],0x20
   14004eed0:	add    dh,ah
   14004eed2:	sbb    eax,0xd3227a6a
   14004eed7:	js     0x14004ef45
   14004eed9:	ss rex.WRX paddsb mm5,mm3
   14004eede:	out    0x5e,eax
   14004eee0:	adc    al,0xe8
   14004eee2:	pop    rsi
   14004eee3:	repz sbb BYTE PTR [rcx],0xbe
   14004eee7:	adc    al,0xe4
   14004eee9:	addr32 int 0x4
   14004eeec:	cwde   
   14004eeed:	(bad)  
   14004eeee:	or     BYTE PTR [rsi+0x2],ah
   14004eef1:	cs (bad) 
   14004eef3:	push   rsp
   14004eef4:	js     0x14004ef6a
   14004eef6:	jp     0x14004eeb8
   14004eef8:	rol    BYTE PTR [rdi+0x7202f7cb],1
   14004eefe:	push   rcx
   14004eeff:	shl    BYTE PTR [rbx],1
   14004ef01:	rex.RX and eax,0x6040833
   14004ef07:	rex.R pop rdi
   14004ef09:	sbb    BYTE PTR [rax],cl
   14004ef0b:	pop    rsp
   14004ef0c:	cmp    BYTE PTR [rcx+0x6],0xa6
   14004ef10:	outs   dx,BYTE PTR ds:[rsi]
   14004ef11:	jo     0x14004ef46
   14004ef13:	movsxd ebx,DWORD PTR [rdx-0x10]
   14004ef16:	loope  0x14004ef0a
   14004ef18:	adc    DWORD PTR [rax+0xa],eax
   14004ef1b:	and    BYTE PTR [rdi-0x4339230c],0x16
   14004ef22:	sbb    al,0x74
   14004ef24:	mov    al,0xf9
   14004ef26:	or     al,0xc6
   14004ef28:	(bad)  
   14004ef29:	(bad)  
   14004ef2a:	sar    cl,0x6
   14004ef2d:	rex.WRX (bad) 
   14004ef2f:	(bad)  
   14004ef30:	push   rax
   14004ef31:	mov    al,0x26
   14004ef33:	clc    
   14004ef34:	jo     0x14004ef2f
   14004ef36:	sub    DWORD PTR [rax+0xa],eax
   14004ef39:	sbb    bh,0x1a
   14004ef3c:	cmc    
   14004ef3d:	xchg   edi,eax
   14004ef3e:	in     al,dx
   14004ef3f:	add    al,al
   14004ef41:	ds (bad) 
   14004ef43:	leave  
   14004ef44:	lods   al,BYTE PTR ds:[rsi]
   14004ef45:	fwait
   14004ef46:	jle    0x14004ef8d
   14004ef48:	add    cl,ah
   14004ef4a:	(bad)  
   14004ef4c:	(bad)  
   14004ef4d:	sar    BYTE PTR [rbp+rax*2-0x7b],0x40
   14004ef52:	loopne 0x14004ef88
   14004ef54:	loopne 0x14004ef19
   14004ef56:	in     eax,0xdf
   14004ef58:	add    dl,BYTE PTR [rdx+0x0]
   14004ef5b:	or     al,0x19
   14004ef5d:	(bad)  
   14004ef5e:	rex.WRB mov QWORD PTR [rip+0xffffffff82d3fa08],0x58031042        # 0xc2d8e971
   14004ef69:	sbb    al,0xf0
   14004ef6b:	loope  0x14004ef5f
   14004ef6d:	adc    al,ah
   14004ef6f:	or     al,BYTE PTR [rax+0x5fd7d81]
   14004ef75:	cmp    eax,0x32bd1b7
   14004ef7a:	add    eax,0x5c087f98
   14004ef7f:	add    BYTE PTR [rip+0xffffffffb7643a8c],0x8d        # 0xf7692a12
   14004ef86:	retf   
   14004ef87:	(bad)  
   14004ef88:	out    0x69,eax
   14004ef8a:	wrmsr  
   14004ef8c:	add    r15b,BYTE PTR [rsi+r12*8+0xf]
   14004ef91:	xlat   BYTE PTR ds:[rbx]
   14004ef92:	fbld   TBYTE PTR [rax]
   14004ef94:	push   rsi
   14004ef95:	rex.WXB movabs rax,ds:0x61c0b00b811aa700
   14004ef9f:	jns    0x14004f01d
   14004efa1:	mov    edx,0x61c3ee8b
   14004efa6:	shl    DWORD PTR [rbp+0x2a],0x0
   14004efaa:	mov    WORD PTR [rdi+0xe2fd02],?
   14004efb0:	mov    ch,0x21
   14004efb2:	call   0xc122e313
   14004efb7:	add    eax,0xe0d10f30
   14004efbc:	adc    eax,0x2c387d74
   14004efc1:	mov    eax,0x4fc07b4e
   14004efc6:	cmc    
   14004efc7:	push   rdx
   14004efc8:	jne    0x14004f023
   14004efca:	add    BYTE PTR [rsi-0x60],bh
   14004efcd:	fidivr DWORD PTR [rdi]
   14004efcf:	nop
   14004efd0:	or     ebx,esi
   14004efd2:	or     al,BYTE PTR [rcx+0x3000b005]
   14004efd8:	rex.XB jmp 0x14004efb4
   14004efdb:	xchg   ebx,eax
   14004efdd:	(bad)  
   14004efde:	jmp    0x14004f034
   14004efe0:	add    BYTE PTR [rcx+riz*2+0x2333ec1c],bh
   14004efe7:	rcr    BYTE PTR [rcx+rcx*1],1
   14004efea:	or     BYTE PTR [rsi-0x6],ah
   14004efed:	(bad)  
   14004efee:	rex.R add al,0x16
   14004eff1:	sar    BYTE PTR [rbx+rax*4-0x31],0x4b
   14004eff6:	jae    0x14004f02b
   14004eff8:	nop
   14004eff9:	sar    DWORD PTR [rsi],cl
   14004effb:	sbb    al,0x16
   14004effd:	pop    rsp
   14004effe:	(bad)  
   14004efff:	(bad)  
   14004f000:	add    ecx,DWORD PTR [rip+0xfffffffff42febec]        # 0x13434dbf2
   14004f006:	ins    BYTE PTR es:[rdi],dx
   14004f007:	call   0xe564f847
   14004f00c:	xchg   edi,eax
   14004f00d:	(bad)  
   14004f00e:	retf   
   14004f00f:	and    eax,0xfa7972f0
   14004f014:	scas   eax,DWORD PTR es:[rdi]
   14004f015:	lea    ebp,[rsi]
   14004f017:	jb     0x14004f01e
   14004f019:	repz fdiv st(6),st
   14004f01c:	rex.XB sbb r9b,cl
   14004f01f:	in     eax,0xc5
   14004f021:	(bad)  
   14004f022:	(bad)  
   14004f023:	sub    eax,0x1ad873bd
   14004f028:	adc    ecx,DWORD PTR [rbx]
   14004f02a:	(bad)  
   14004f02b:	adc    al,0x60
   14004f02d:	xlat   BYTE PTR ds:[rbx]
   14004f02e:	out    dx,al
   14004f02f:	std    
   14004f030:	(bad)  
   14004f031:	jnp    0x14004f0ac
   14004f033:	rex.WRXB
   14004f034:	rex.RXB (bad) 
   14004f036:	xor    eax,0x1a3a1716
   14004f03b:	test   eax,0xecb9794a
   14004f040:	(bad)  
   14004f041:	add    eax,0xf5fd0458
   14004f046:	mov    bh,0x1
   14004f048:	mov    edi,0x9a2ee00b
   14004f04d:	push   rax
   14004f04e:	and    QWORD PTR cs:[r10+rcx*4],r11
   14004f053:	(bad)  
   14004f054:	mov    al,0x59
   14004f056:	or     edx,DWORD PTR [rdi]
   14004f058:	and    edi,DWORD PTR [rcx+0x7fdb9e3c]
   14004f05e:	or     bl,al
   14004f060:	mov    ecx,0x7fdf9e02
   14004f065:	or     bl,al
   14004f067:	and    edi,DWORD PTR [rcx-0x4f]
   14004f06a:	(bad)  
   14004f06b:	(bad)  
   14004f06c:	jmp    0x14004f071
   14004f06e:	(bad)  
   14004f06f:	stos   DWORD PTR es:[rdi],eax
   14004f070:	cs sti 
   14004f072:	lods   eax,DWORD PTR ds:[rsi]
   14004f073:	movsxd eax,DWORD PTR [rbp+0x4f]
   14004f076:	cmp    edx,DWORD PTR [rsi+0x74f7]
   14004f07c:	cs mov ecx,0x5b0e11d0
   14004f082:	mov    bh,0x9c
   14004f084:	jnp    0x14004f050
   14004f086:	cmp    bh,dl
   14004f088:	pop    rsp
   14004f089:	mov    ecx,0x4e068700
   14004f08e:	loopne 0x14004f085
   14004f090:	and    ebx,0xfbb5d8
   14004f096:	add    BYTE PTR [rax-0x19],ah
   14004f099:	(bad)  
   14004f09a:	sbb    eax,0xb302eb92
   14004f09f:	(bad)  
   14004f0a0:	sar    BYTE PTR [rbx-0x48],1
   14004f0a3:	mov    esi,0xb39a0577
   14004f0a8:	sub    DWORD PTR [rbx+rbp*8+0x4ce6815d],ebp
   14004f0af:	adc    ch,bl
   14004f0b1:	jnp    0x14004f10a
   14004f0b3:	(bad)  
   14004f0b4:	cld    
   14004f0b5:	xchg   ebp,eax
   14004f0b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f0b7:	jns    0x14004f0be
   14004f0b9:	fnclex 
   14004f0bb:	(bad)  
   14004f0bc:	mov    dh,0xb7
   14004f0be:	add    DWORD PTR [rbx+0x2d5410ac],ebp
   14004f0c4:	add    BYTE PTR [rax],cl
   14004f0c6:	cwde   
   14004f0c7:	add    ah,BYTE PTR [rax+0x3b]
   14004f0ca:	ins    BYTE PTR es:[rdi],dx
   14004f0cb:	add    ah,BYTE PTR [rax]
   14004f0cd:	cmp    dh,BYTE PTR [rbx]
   14004f0cf:	add    eax,esp
   14004f0d1:	sub    al,0x17
   14004f0d3:	mov    dl,0xb0
   14004f0d5:	mov    al,0x6b
   14004f0d7:	idiv   DWORD PTR [rsi+0x3c]
   14004f0da:	mov    bh,0xff
   14004f0dc:	adc    BYTE PTR [rsi],cl
   14004f0de:	mov    ebp,0xedcf0271
   14004f0e3:	(bad)  
   14004f0e4:	xor    al,0xad
   14004f0e6:	(bad)  
   14004f0e7:	pop    rcx
   14004f0e8:	or     eax,0x84e0687
   14004f0ed:	movabs eax,ds:0xbeb825ace01d3541
   14004f0f6:	ja     0x14004f0fd
   14004f0f8:	cs mov ecx,0xb75b17b0
   14004f0fe:	pushf  
   14004f0ff:	cmp    ebp,DWORD PTR [rbx]
   14004f101:	(bad)  
   14004f102:	ret    
   14004f103:	test   eax,0xed760172
   14004f108:	fimul  WORD PTR [rdi+0x600fbb5d]
   14004f10e:	out    0x2f,eax
   14004f110:	div    DWORD PTR [rdi]
   14004f112:	cld    
   14004f113:	ds push rsi
   14004f115:	mov    edx,0x8fbc8087
   14004f11a:	jmp    0x14004f197
   14004f11c:	push   rdi
   14004f11d:	(bad)  
   14004f11e:	(bad)
   14004f121:	lods   al,BYTE PTR ds:[rsi]
   14004f122:	out    dx,eax
   14004f123:	pop    rbp
   14004f124:	xor    edi,ebp
   14004f126:	sub    al,0xb1
   14004f128:	rex.RX movabs eax,ds:0x174774ed8011c6
   14004f132:	(bad)  
   14004f133:	loop   0x14004f155
   14004f135:	or     eax,0xf3020409
   14004f13a:	pop    rdx
   14004f13b:	add    bl,BYTE PTR [rdx+rbx*1]
   14004f13e:	cmp    cl,ah
   14004f140:	je     0x14004f194
   14004f142:	mov    bh,0x83
   14004f144:	cli    
   14004f145:	jge    0x14004f100
   14004f147:	out    0x54,eax
   14004f149:	(bad)  
   14004f14a:	and    al,0x97
   14004f14c:	ja     0x14004f0d7
   14004f14e:	and    edi,DWORD PTR [rbx]
   14004f150:	cmc    
   14004f151:	(bad)  
   14004f152:	sub    eax,0x8ae6b8bd
   14004f157:	lea    edi,[rax+0xd4df2fa]
   14004f15d:	mov    cl,0x10
   14004f15f:	retfw  
   14004f161:	add    bh,BYTE PTR [rax]
   14004f163:	xor    al,0x70
   14004f165:	add    bh,BYTE PTR [rdi]
   14004f167:	jl     0x14004f1cb
   14004f169:	nop    DWORD PTR [rbp+0x7c]
   14004f16d:	scas   eax,DWORD PTR es:[rdi]
   14004f16e:	xchg   ebp,eax
   14004f16f:	xchg   esp,eax
   14004f170:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f171:	adc    dh,BYTE PTR [rsi+0x84008fb]
   14004f177:	(bad)  
   14004f178:	cmc    
   14004f179:	imul   ebx,DWORD PTR [rdi+rbx*8+0x545ae0f9],0x5e
   14004f181:	cld    
   14004f182:	movabs ds:0x22b8e15770f87e,eax
   14004f18b:	(bad)  
   14004f18c:	div    ch
   14004f18e:	pmaddwd mm5,QWORD PTR [rax+rbp*8+0x53]
   14004f193:	sbb    esp,ebp
   14004f195:	adc    eax,DWORD PTR [rdi]
   14004f197:	test   al,0xfa
   14004f199:	xchg   ecx,eax
   14004f19a:	nop
   14004f19b:	add    eax,0x3e1ff840
   14004f1a0:	mov    esi,0x1f773b07
   14004f1a5:	push   0x2d9f66b8
   14004f1aa:	js     0x14004f1c9
   14004f1ac:	stc    
   14004f1ad:	out    dx,al
   14004f1ae:	(bad)  
   14004f1af:	(bad)  
   14004f1b0:	test   ch,dh
   14004f1b2:	mov    ebp,0xdcb702b
   14004f1b7:	xchg   edi,eax
   14004f1b8:	loopne 0x14004f150
   14004f1ba:	jmp    0x14004f1eb
   14004f1bc:	cdq    
   14004f1bd:	mov    dh,0x99
   14004f1bf:	fisttp DWORD PTR [rax+0xb]
   14004f1c2:	(bad)  
   14004f1c3:	and    al,0x97
   14004f1c5:	(bad)  
   14004f1c6:	mov    dh,0xed
   14004f1c8:	cmp    esi,DWORD PTR [rcx-0xc621e13]
   14004f1ce:	rex.X adc BYTE PTR [rsi-0x7d],0x2e
   14004f1d3:	call   0x1a3b9e62f
   14004f1d8:	jmp    0x14004f170
   14004f1da:	pop    rsi
   14004f1db:	ins    BYTE PTR es:[rdi],dx
   14004f1dc:	mov    ebp,0x8de77b0
   14004f1e1:	add    al,0x5
   14004f1e3:	jne    0x14004f213
   14004f1e5:	or     BYTE PTR [rdx-0x3f],bl
   14004f1e8:	call   QWORD PTR [rdi+0x66]
   14004f1eb:	std    
   14004f1ec:	ficom  DWORD PTR [rsi+0x4]
   14004f1ef:	cli    
   14004f1f0:	sbb    al,0x80
   14004f1f2:	(bad)  
   14004f1f3:	rol    DWORD PTR [rdx+rsi*2+0x58e10271],1
   14004f1fa:	mov    dl,0xae
   14004f1fc:	(bad)  
   14004f1fd:	int3   
   14004f1fe:	(bad)  
   14004f1ff:	cmp    al,0xfa
   14004f201:	(bad)  
   14004f202:	pop    rsi
   14004f203:	in     al,dx
   14004f204:	cli    
   14004f205:	in     eax,0x7e
   14004f207:	cld    
   14004f208:	lock mov DWORD PTR [rip+0xfffffffff3eafb75],edi        # 0x133efed84
   14004f20f:	adc    edi,ecx
   14004f211:	in     eax,dx
   14004f212:	(bad)  
   14004f213:	test   BYTE PTR [rbx-0x11ef0341],bh
   14004f219:	(bad)  
   14004f21a:	repnz rex.XB mov r8d,0xd04bfae5
   14004f221:	ja     0x14004f21e
   14004f223:	xchg   ebp,eax
   14004f224:	pop    rax
   14004f225:	fistp  WORD PTR [rbx-0x21]
   14004f228:	loop   0x14004f1cb
   14004f22a:	lea    esi,[rax-0x21128a00]
   14004f230:	(bad)  
   14004f231:	ins    DWORD PTR es:[rdi],dx
   14004f232:	pxor   mm5,QWORD PTR [rcx+rdi*8+0x15f3480b]
   14004f23a:	xchg   DWORD PTR [rsi],eax
   14004f23c:	rex.WRX loopne 0x14004f20f
   14004f23f:	jbe    0x14004f2ba
   14004f241:	sbb    eax,0x71da7a2b
   14004f246:	cmc    
   14004f247:	in     eax,0x9b
   14004f249:	mov    al,0xf5
   14004f24b:	ret    0x5c5e
   14004f24e:	jae    0x14004f249
   14004f250:	(bad)  
   14004f251:	cmp    DWORD PTR [rsi-0x63],ebp
   14004f254:	add    eax,0xe2fffcd5
   14004f259:	test   BYTE PTR [rip+0xffffffff827a73f9],ch        # 0xc27f6658
   14004f25f:	rex.WRB add r12b,r15b
   14004f262:	adc    BYTE PTR [rdx+0x214d2800],bh
   14004f268:	mov    WORD PTR [rdx],gs
   14004f26a:	add    al,BYTE PTR [rax-0x3f4a860d]
   14004f270:	(bad)  
   14004f271:	rex.W
   14004f272:	pop    QWORD PTR cs:[rdi-0x61]
   14004f276:	fmul   DWORD PTR [rbx-0x3841c1e1]
   14004f27c:	clc    
   14004f27d:	or     ch,bh
   14004f27f:	jmp    0x10773600a
   14004f284:	fnstsw WORD PTR [rdx-0x380e85b]
   14004f28a:	test   eax,0x71f66aeb
   14004f28f:	xor    cl,BYTE PTR [edx]
   14004f292:	mov    al,0x6b
   14004f294:	idiv   DWORD PTR [rsi-0x24]
   14004f297:	jae    0x14004f278
   14004f299:	and    esi,DWORD PTR [rbx+0x6e]
   14004f29c:	loop   0x14004f26d
   14004f29e:	(bad)  
   14004f29f:	(bad)  
   14004f2a0:	or     eax,0x83ff409c
   14004f2a5:	cmp    edx,eax
   14004f2a7:	jmp    rax
   14004f2a9:	(bad)  
   14004f2aa:	add    al,al
   14004f2ac:	xor    eax,0xd5c46f97
   14004f2b1:	push   rdi
   14004f2b2:	ins    BYTE PTR es:[rdi],dx
   14004f2b3:	ret    0x9735
   14004f2b6:	outs   dx,DWORD PTR ds:[rsi]
   14004f2b7:	pushf  
   14004f2b8:	mov    ebp,0xe80ce2c0
   14004f2bd:	push   rbx
   14004f2be:	movabs ds:0x8c0026c13d43ffff,eax
   14004f2c7:	(bad)  
   14004f2c8:	add    ecx,DWORD PTR [rbx-0x3b]
   14004f2cb:	rex.WB (bad) 
   14004f2cd:	mov    cl,0x48
   14004f2cf:	clc    
   14004f2d0:	pushf  
   14004f2d1:	(bad)  
   14004f2d2:	xor    DWORD PTR [rcx-0x44a27922],edx
   14004f2d8:	mul    ebx
   14004f2da:	out    0x3b,al
   14004f2dc:	not    edi
   14004f2de:	or     BYTE PTR cs:[rsi-0x1163fd1f],ah
   14004f2e5:	(bad)  
   14004f2e6:	test   ebx,0xc5ec4fa3
   14004f2ec:	movabs ds:0xc0c28b3067c5ec4f,eax
   14004f2f5:	in     eax,0x70
   14004f2f7:	lods   eax,DWORD PTR ds:[rsi]
   14004f2f8:	(bad)  
   14004f2f9:	imul   BYTE PTR [rsp+rax*4-0x692d8eae]
   14004f300:	ins    BYTE PTR es:[rdi],dx
   14004f301:	jo     0x14004f2de
   14004f303:	adc    BYTE PTR [rax],al
   14004f305:	out    dx,al
   14004f306:	jl     0x14004f288
   14004f308:	lahf   
   14004f309:	add    edi,DWORD PTR [rax-0x7468596c]
   14004f30f:	xchg   ebx,eax
   14004f310:	or     BYTE PTR [rbp+0x62],al
   14004f313:	xor    ebp,DWORD PTR [rsi+0x58]
   14004f316:	movabs ds:0x2588c3850fa4db31,eax
   14004f31f:	push   rbx
   14004f320:	or     BYTE PTR [rbp-0x62d877dd],al
   14004f326:	xchg   DWORD PTR [rbp-0x321e9b34],ebx
   14004f32c:	ins    BYTE PTR es:[rdi],dx
   14004f32d:	rex.WR
   14004f32e:	gs (bad) 
   14004f330:	(bad)  [rbp-0x1a]
   14004f333:	jl     0x14004f332
   14004f335:	int3   
   14004f336:	sti    
   14004f337:	(bad)  
   14004f338:	xor    ebx,DWORD PTR [rbx+rdx*1-0x25]
   14004f33c:	pop    rbx
   14004f33d:	adc    DWORD PTR [rcx+0x47e44c31],ebx
   14004f343:	push   rcx
   14004f344:	cs xchg ebp,eax
   14004f346:	add    BYTE PTR [rax],dh
   14004f348:	in     al,0x47
   14004f34a:	xchg   BYTE PTR [rax+0x2e],dl
   14004f34d:	(bad)  
   14004f34e:	xor    DWORD PTR [rsi],edi
   14004f350:	xchg   esi,eax
   14004f351:	ret    
   14004f352:	(bad)  
   14004f353:	(bad)  
   14004f354:	cmp    BYTE PTR [rsi],ah
   14004f356:	(bad)  
   14004f357:	(bad)  
   14004f358:	div    DWORD PTR [rcx+0x104f0da6]
   14004f35e:	fdiv   QWORD PTR [rdx-0x3]
   14004f361:	and    eax,0x78ff8bf8
   14004f366:	stos   DWORD PTR es:[rdi],eax
   14004f367:	outs   dx,DWORD PTR ds:[rsi]
   14004f368:	(bad)  
   14004f369:	lods   eax,DWORD PTR ds:[rsi]
   14004f36a:	lods   eax,DWORD PTR ds:[esi]
   14004f36c:	out    0x43,al
   14004f36e:	add    esp,DWORD PTR [rdi]
   14004f370:	lock (bad) 
   14004f372:	sti    
   14004f373:	mov    dh,0x4f
   14004f375:	fcmovnbe st,st(4)
   14004f377:	(bad)  
   14004f378:	and    eax,0x92268892
   14004f37d:	rex.W mov dil,0xb4
   14004f380:	xor    DWORD PTR [rbx-0x72],0x805696a6
   14004f387:	cmp    ebx,DWORD PTR [rdi-0x5acbb4b8]
   14004f38d:	popf   
   14004f38e:	add    BYTE PTR [rax],bl
   14004f390:	out    0xae,eax
   14004f392:	gs jmp 0x14004f393
   14004f395:	cmp    bh,BYTE PTR [rdi-0x40]
   14004f398:	cmp    DWORD PTR [rdi],edx
   14004f39a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f39b:	enter  0xc8f,0x89
   14004f39f:	cmc    
   14004f3a0:	lock repz mov ecx,0x13038061
   14004f3a7:	test   DWORD PTR [rcx],esi
   14004f3a9:	xchg   esp,eax
   14004f3aa:	mov    eax,DWORD PTR [rbp+0x4c]
   14004f3ad:	adc    al,0xf2
   14004f3af:	sub    bh,cl
   14004f3b1:	push   0xffffffffb06d7afa
   14004f3b6:	or     DWORD PTR [rbx+0x64bfae5b],eax
   14004f3bc:	(bad)  
   14004f3bd:	iret   
   14004f3be:	pop    rbx
   14004f3bf:	sub    ecx,edx
   14004f3c1:	jbe    0x14004f3b5
   14004f3c3:	(bad)  
   14004f3c4:	fdivr  st(6),st
   14004f3c6:	rcr    BYTE PTR [rdi-0x11fe8821],cl
   14004f3cc:	and    DWORD PTR [rsi],0x1164a00
   14004f3d2:	push   rax
   14004f3d3:	xor    DWORD PTR [rax],edx
   14004f3d5:	test   al,0xb9
   14004f3d7:	add    al,0x35
   14004f3d9:	jg     0x14004f434
   14004f3db:	mov    eax,0xe7be7846
   14004f3e0:	movabs ds:0xe142f10486dec4f,eax
   14004f3e9:	and    ebx,DWORD PTR [rdx+0x489e2248]
   14004f3ef:	and    DWORD PTR [rdx-0x74e5ddb4],ebx
   14004f3f5:	and    edx,ecx
   14004f3f7:	xchg   esp,eax
   14004f3f8:	adc    eax,0xe039acb
   14004f3fd:	rcr    DWORD PTR [rip+0x3bc24b42],0xe9        # 0x17bc73f46
   14004f404:	int3   
   14004f405:	xchg   ebp,eax
   14004f406:	(bad)  
   14004f407:	pop    rsi
   14004f408:	cmp    dl,BYTE PTR [rcx]
   14004f40a:	add    BYTE PTR [rax+0x65344b48],al
   14004f410:	test   BYTE PTR [rax+0x48],dl
   14004f413:	mov    bh,0xb4
   14004f415:	sub    edi,eax
   14004f417:	xchg   esp,eax
   14004f418:	rex.WXB
   14004f419:	rex.RB mov WORD PTR [r15-0x17939d73],cs
   14004f420:	and    al,0xa
   14004f422:	movabs ds:0xb338a9449d0d8c39,eax
   14004f42b:	adc    DWORD PTR [rax-0x4622493],ebx
   14004f431:	repz (bad) 
   14004f433:	lahf   
   14004f434:	mov    edx,0xc27dface
   14004f439:	pop    rdx
   14004f43a:	stc    
   14004f43b:	(bad)  
   14004f43d:	loopne 0x14004f44d
   14004f43f:	fdiv   QWORD PTR [rbx-0x21]
   14004f442:	and    esi,DWORD PTR [rip+0x2470e7df]        # 0x16475dc27
   14004f448:	mov    dh,BYTE PTR [rbx+rbp*2+0x3b]
   14004f44c:	shr    BYTE PTR [rip+0xffffffffb3a4486d],cl        # 0xf3a93cbf
   14004f452:	(bad)  
   14004f453:	jmp    0xd2d5c71d
   14004f458:	int3   
   14004f459:	loopne 0x14004f4c9
   14004f45b:	(bad)  
   14004f45d:	pop    rbx
   14004f45e:	or     bl,BYTE PTR [rbx+0x69]
   14004f461:	(bad)  
   14004f462:	sti    
   14004f463:	lods   eax,DWORD PTR ds:[rsi]
   14004f464:	or     edx,ebx
   14004f466:	lea    edi,[rax]
   14004f468:	nop
   14004f469:	retf   0x8b6
   14004f46c:	xchg   r9d,eax
   14004f46e:	int3   
   14004f46f:	xor    al,0x8b
   14004f471:	mov    edx,0x39b4e59c
   14004f476:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004f478:	and    ah,BYTE PTR [rsi]
   14004f47a:	repz movsxd ebx,DWORD PTR [rax+0x6a618c28]
   14004f481:	(bad)  
   14004f483:	xchg   ebx,eax
   14004f484:	jrcxz  0x14004f4ff
   14004f486:	mov    WORD PTR [rdi-0x2f44951a],cs
   14004f48c:	imul   eax,eax,0x7f770613
   14004f492:	stc    
   14004f493:	and    DWORD PTR [rbx+rsi*2-0x7],ebx
   14004f497:	(bad)  
   14004f498:	imul   eax,ebp,0x1f0d1a62
   14004f49e:	in     eax,dx
   14004f49f:	jg     0x14004f430
   14004f4a1:	sub    eax,0x98004fd1
   14004f4a6:	sub    eax,DWORD PTR [rdx*1-0x585bffd9]
   14004f4ad:	fild   QWORD PTR [rdx+0x348bc006]
   14004f4b3:	idiv   DWORD PTR [rdi]
   14004f4b5:	mov    al,0x63
   14004f4b7:	mov    BYTE PTR [rcx-0x76dd9744],0x78
   14004f4be:	stos   BYTE PTR es:[rdi],al
   14004f4bf:	or     DWORD PTR [rcx+0x54f11244],esi
   14004f4c5:	sbb    dl,BYTE PTR [rcx+0x40601c58]
   14004f4cb:	enter  0x10fd,0x27
   14004f4cf:	(bad)  
   14004f4d0:	fdivr  QWORD PTR [rsi-0x7c]
   14004f4d3:	xchg   edi,eax
   14004f4d4:	fisttp DWORD PTR [rsi+0x59]
   14004f4d7:	outs   dx,DWORD PTR ds:[rsi]
   14004f4d8:	sbb    ebp,DWORD PTR [rax+0x73c86855]
   14004f4de:	rex.R movabs ds:0xa2f56991da5ba431,al
   14004f4e8:	iret   
   14004f4e9:	or     al,0xe3
   14004f4eb:	movabs ds:0x6fe3e1823f1f0c39,eax
   14004f4f4:	movabs ds:0xf2e48e75d6991b90,al
   14004f4fd:	mov    eax,0x610fcbfb
   14004f502:	xlat   BYTE PTR ds:[rbx]
   14004f503:	(bad)  
   14004f504:	mul    ebx
   14004f506:	imul   ebx,DWORD PTR [rdi-0x44],0x43
   14004f50a:	mov    cl,0x6
   14004f50c:	stos   BYTE PTR es:[rdi],al
   14004f50d:	or     esp,esp
   14004f50f:	xchg   ecx,eax
   14004f510:	pop    rsp
   14004f511:	(bad)  
   14004f512:	lahf   
   14004f513:	mov    eax,0x326b6feb
   14004f518:	not    DWORD PTR [rbx-0x84b9967]
   14004f51e:	lods   al,BYTE PTR ds:[rsi]
   14004f51f:	rex mov edx,0x4cc91da5
   14004f525:	push   rsi
   14004f526:	push   0x139b4f72
   14004f52b:	(bad)  
   14004f52c:	sbb    ebx,ebx
   14004f52e:	xor    cl,ch
   14004f530:	fnsave [rbx+0x13]
   14004f533:	rex.R mov esi,0x3838042b
   14004f539:	sbb    BYTE PTR [rdi-0x20],ah
   14004f53c:	or     al,0x60
   14004f53e:	loopne 0x14004f520
   14004f540:	fdivr  QWORD PTR [rbp+0x3809ee9f]
   14004f546:	sbb    dl,al
   14004f548:	loope  0x14004f552
   14004f54a:	adc    ch,cl
   14004f54c:	sub    al,0x12
   14004f54e:	jmp    0xdf684ddf
   14004f553:	and    DWORD PTR [rbx-0x4e],0x30
   14004f557:	xchg   BYTE PTR [rcx+0x811de7c],cl
   14004f55d:	movsxd esp,DWORD PTR [rbx-0x3a5f9568]
   14004f563:	add    eax,0xed905190
   14004f568:	cmp    esi,DWORD PTR [rcx+0x7d1da7a2]
   14004f56e:	mov    bh,0x5f
   14004f570:	cmp    DWORD PTR [rbx-0x39fae5ef],esp
   14004f576:	xchg   DWORD PTR [rdx-0x4c],eax
   14004f579:	xor    eax,0xdfff74ff
   14004f57e:	(bad)  
   14004f57f:	add    BYTE PTR [rax+rdi*1],dh
   14004f582:	or     eax,0x818008f8
   14004f587:	jge    0x14004f586
   14004f589:	xchg   DWORD PTR [rbp+0x579cc169],ecx
   14004f58f:	ja     0x14004f594
   14004f591:	sub    WORD PTR [rax],dx
   14004f594:	fmul   DWORD PTR [rax-0x61cb8cb8]
   14004f59a:	sub    al,0xd5
   14004f59d:	test   BYTE PTR [rdx+rdi*1-0x75],ah
   14004f5a1:	pop    rax
   14004f5a2:	sub    ch,BYTE PTR [rbp-0x234e9696]
   14004f5a8:	xor    dl,BYTE PTR [rbx-0x54cd8a3c]
   14004f5ae:	adc    dl,BYTE PTR [rdi-0x53]
   14004f5b1:	(bad)  
   14004f5b2:	sub    ecx,DWORD PTR [rdi+0x5]
   14004f5b5:	sub    BYTE PTR [rsi+0x1d],0x68
   14004f5b9:	out    0x61,eax
   14004f5bb:	mov    ah,0x1e
   14004f5bd:	(bad)  
   14004f5be:	jb     0x14004f608
   14004f5c0:	gs fwait
   14004f5c2:	xchg   ecx,eax
   14004f5c3:	retf   0x6336
   14004f5c6:	jmp    0x16c9db324
   14004f5cb:	adc    al,0x30
   14004f5cd:	jl     0x14004f5cb
   14004f5cf:	rex.WRB sbb al,0x7d
   14004f5d2:	in     eax,dx
   14004f5d3:	gs rex.WR (bad) 
   14004f5d6:	(bad)  
   14004f5d7:	mov    bh,0x78
   14004f5d9:	(bad)  
   14004f5da:	jge    0x14004f63e
   14004f5dc:	(bad)  
   14004f5dd:	neg    dh
   14004f5df:	cli    
   14004f5e0:	pop    rdi
   14004f5e1:	lock ud0 edi,ebp
   14004f5e5:	cs pushf 
   14004f5e7:	mov    bh,0xba
   14004f5e9:	or     eax,0xcb7c89ee
   14004f5ee:	out    dx,eax
   14004f5ef:	fidivr DWORD PTR [rbp-0x144760e1]
   14004f5f5:	outs   dx,DWORD PTR ds:[rsi]
   14004f5f6:	sub    ebp,DWORD PTR [rdx-0x3]
   14004f5f9:	push   rsp
   14004f5fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f5fb:	sbb    ebp,ebp
   14004f5fd:	retf   
   14004f5fe:	push   rsi
   14004f5ff:	movabs ds:0xe5a2948962374965,al
   14004f608:	add    eax,0xae980338
   14004f60d:	loope  0x14004f5d8
   14004f60f:	mov    ah,0x36
   14004f611:	xchg   edx,eax
   14004f612:	cs mov esi,ebp
   14004f615:	sbb    al,0xe2
   14004f617:	lods   al,BYTE PTR ds:[rsi]
   14004f618:	xchg   edi,ecx
   14004f61a:	mov    ah,0x3c
   14004f61c:	rex.RXB or BYTE PTR [r8],r15b
   14004f61f:	(bad)  
   14004f620:	jo     0x14004f5e2
   14004f622:	adc    ecx,DWORD PTR [rax]
   14004f624:	sahf   
   14004f625:	jne    0x14004f608
   14004f627:	fisubr WORD PTR [rbx-0x4b]
   14004f62a:	cmp    al,0x10
   14004f62c:	rex.WXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f62e:	adc    BYTE PTR [rcx+0x6de29027],cl
   14004f634:	add    BYTE PTR [rax],bh
   14004f636:	retf   0x12c5
   14004f639:	(bad)  
   14004f63a:	repz cmp DWORD PTR [rsp+rcx*4-0x73],ecx
   14004f63f:	(bad)
   14004f644:	xor    DWORD PTR [rax+0x68],0x478cc4e0
   14004f64b:	push   0x71728ba6
   14004f650:	rcl    BYTE PTR [rsi],cl
   14004f652:	rex.XB cmp BYTE PTR [r8],dil
   14004f655:	mov    al,0xaf
   14004f657:	(bad)  
   14004f659:	or     bh,BYTE PTR [rax]
   14004f65b:	loopne 0x14004f6cc
   14004f65d:	add    DWORD PTR [rax],eax
   14004f65f:	rcl    BYTE PTR [rdi],0x1
   14004f662:	hlt    
   14004f663:	rol    DWORD PTR [rdx+rdi*4-0x3de67f23],cl
   14004f66a:	shl    esi,cl
   14004f66c:	rcr    DWORD PTR [rcx],cl
   14004f66e:	push   rdi
   14004f66f:	(bad)  
   14004f670:	rex.RXB movabs ds:0x4b106748909b2588,al
   14004f67a:	xor    eax,0x4b0a1421
   14004f67f:	xchg   edx,eax
   14004f680:	or     cl,bl
   14004f682:	pushf  
   14004f683:	nop
   14004f684:	adc    eax,DWORD PTR [rdi+rcx*1-0x5af71374]
   14004f68b:	rex.WRX leave 
   14004f68d:	or     al,0x85
   14004f68f:	mov    ah,0xb5
   14004f691:	push   0xfffffffffffffff9
   14004f693:	(bad)  
   14004f694:	retf   0xed7b
   14004f697:	repnz mov ?,WORD PTR [rcx+0x1b]
   14004f69b:	adc    DWORD PTR [rdi+0x35],ecx
   14004f69e:	(bad)  
   14004f69f:	leave  
   14004f6a0:	sbb    DWORD PTR [rdi-0x5f],esp
   14004f6a3:	imul   esp,ebp,0xffffffd9
   14004f6a6:	enter  0x1e0d,0xc7
   14004f6aa:	mov    DWORD PTR [rcx-0x721d8f29],eax
   14004f6b0:	xlat   BYTE PTR ds:[rbx]
   14004f6b1:	(bad)  
   14004f6b2:	mov    edx,0x45e36327
   14004f6b7:	jl     0x14004f677
   14004f6b9:	jg     0x14004f6f2
   14004f6bb:	ds icebp 
   14004f6bd:	ficomp WORD PTR [rsi+0x5c]
   14004f6c0:	div    DWORD PTR [rsi-0x1230416b]
   14004f6c6:	stos   DWORD PTR es:[rdi],eax
   14004f6c7:	fistp  QWORD PTR [rax+0x4]
   14004f6ca:	neg    esp
   14004f6cc:	mov    bh,0xdd
   14004f6ce:	(bad)  
   14004f6cf:	(bad)  
   14004f6d0:	add    BYTE PTR [rip+0x6ba256cb],bl        # 0x1aba74da1
   14004f6d6:	(bad)  
   14004f6d7:	(bad)  [rax+0x66]
   14004f6da:	pop    rdx
   14004f6db:	loopne 0x14004f746
   14004f6dd:	ins    BYTE PTR es:[rdi],dx
   14004f6de:	(bad)  
   14004f6df:	out    dx,al
   14004f6e0:	fiadd  WORD PTR [rdi+0x6e]
   14004f6e3:	(bad)  
   14004f6e4:	repnz scas al,BYTE PTR es:[rdi]
   14004f6e6:	(bad)  
   14004f6e7:	jbe    0x14004f671
   14004f6e9:	push   0x13
   14004f6eb:	add    al,0x6e
   14004f6ed:	imul   ecx,DWORD PTR [rdi-0x55],0x8b80eb4b
   14004f6f4:	out    0x23,eax
   14004f6f6:	sub    esi,DWORD PTR [rbx-0x36]
   14004f6f9:	and    r8,rsp
   14004f6fc:	push   rbp
   14004f6fd:	(bad)  
   14004f6fe:	pop    rsp
   14004f6ff:	pop    rcx
   14004f700:	movsxd edi,ecx
   14004f702:	nop
   14004f703:	(bad)  
   14004f704:	add    eax,eax
   14004f706:	sbb    DWORD PTR [rax],ebx
   14004f708:	jae    0x14004f698
   14004f70a:	or     eax,0x6648c245
   14004f70f:	(bad)  
   14004f710:	xchg   ecx,eax
   14004f711:	cmp    r13,QWORD PTR [rsi+0x44]
   14004f715:	mov    ecx,0x37214454
   14004f71a:	(bad)  
   14004f71b:	leave  
   14004f71c:	cld    
   14004f71d:	sbb    dh,al
   14004f71f:	rex.RXB
   14004f720:	rex.RXB jl 0x14004f782
   14004f723:	test   BYTE PTR [rbx-0x397b8be9],ch
   14004f729:	fwait
   14004f72a:	mov    bh,0x51
   14004f72c:	or     DWORD PTR [rbx],esi
   14004f72e:	or     eax,0xff98fa00
   14004f733:	pop    rdi
   14004f734:	hlt    
   14004f735:	sub    ebx,DWORD PTR [rdi+0x49]
   14004f738:	add    ah,bh
   14004f73a:	rex
   14004f73b:	rex.WRXB test al,0xdb
   14004f73e:	or     eax,0x30458698
   14004f743:	xchg   edx,eax
   14004f744:	retf   
   14004f745:	movabs ds:0xd45fe1edb0c7c1ff,eax
   14004f74e:	ins    DWORD PTR es:[rdi],dx
   14004f74f:	out    0x47,al
   14004f751:	(bad)
   14004f756:	rex.W
   14004f757:	data16 (bad) 
   14004f759:	adc    DWORD PTR [rbp-0x2e0db3d9],ecx
   14004f75f:	mov    fs,WORD PTR [rdi+0x6c]
   14004f762:	cmp    esp,esp
   14004f764:	mov    ah,0x4d
   14004f766:	pop    rbx
   14004f767:	push   rsi
   14004f768:	mov    edi,0x2d4c879
   14004f76d:	(bad)  
   14004f76e:	jns    0x14004f6f5
   14004f770:	out    0x77,al
   14004f772:	imul   DWORD PTR [rip+0x75bb7e4]        # 0x14760af5c
   14004f778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f779:	xor    eax,0x8b0f8941
   14004f77e:	push   rax
   14004f77f:	enter  0x75b6,0x22
   14004f783:	(bad)  [rsi+0x5ececb04]
   14004f789:	xchg   DWORD PTR [rcx-0xe3fa0e9],eax
   14004f78f:	(bad)  
   14004f790:	(bad)  
   14004f791:	(bad)  
   14004f792:	je     0x14004f813
   14004f794:	mov    esp,0x83ffdcf3
   14004f799:	add    edi,DWORD PTR [rax-0xb]
   14004f79c:	int    0x51
   14004f79e:	stos   DWORD PTR es:[rdi],eax
   14004f79f:	add    al,bh
   14004f7a1:	int3   
   14004f7a2:	out    0xef,eax
   14004f7a4:	mov    bh,0x5a
   14004f7a6:	pop    rdx
   14004f7a7:	loope  0x14004f811
   14004f7a9:	adc    al,0xdd
   14004f7ab:	stos   DWORD PTR es:[rdi],eax
   14004f7ac:	(bad)  
   14004f7ad:	rex.B xlat BYTE PTR ds:[rbx]
   14004f7af:	stos   BYTE PTR es:[rdi],al
   14004f7b0:	jae    0x14004f7c2
   14004f7b2:	mov    ?,eax
   14004f7b4:	mov    WORD PTR [rcx],cs
   14004f7b6:	or     esi,edx
   14004f7b8:	or     dl,BYTE PTR [rbp+0x6ba70bec]
   14004f7be:	mov    eax,0x1ef4e6f4
   14004f7c3:	imul   eax,DWORD PTR [rdx-0x40],0x13
   14004f7c7:	cs scas al,BYTE PTR es:[rdi]
   14004f7c9:	mov    DWORD PTR [rdi],ebp
   14004f7cb:	leave  
   14004f7cc:	(bad)  
   14004f7cd:	vpsrad xmm12,xmm1,xmm1
   14004f7d1:	js     0x14004f7b7
   14004f7d3:	adc    DWORD PTR [rsi-0x79],eax
   14004f7d6:	adc    al,0xe2
   14004f7d8:	mov    dl,0x32
   14004f7da:	rex.WRXB or BYTE PTR [r8+0x4a730296],r15b
   14004f7e1:	test   edx,eax
   14004f7e3:	adc    DWORD PTR [rsi*1-0x232add49],esi
   14004f7ea:	add    cl,dh
   14004f7ec:	xchg   edi,eax
   14004f7ed:	(bad)  
   14004f7ee:	xor    bh,BYTE PTR [rdi]
   14004f7f0:	mov    dh,cl
   14004f7f2:	rcr    DWORD PTR [rsi+rax*8],1
   14004f7f5:	mov    DWORD PTR [rsi+0x50],0x6cf99a9a
   14004f7fc:	pop    rax
   14004f7fd:	outs   dx,DWORD PTR ds:[rsi]
   14004f7fe:	adc    dl,bh
   14004f800:	push   rdi
   14004f801:	out    dx,eax
   14004f802:	fcmovnu st,st(6)
   14004f804:	push   rax
   14004f805:	mul    DWORD PTR [rax-0x1f200cba]
   14004f80b:	mov    dl,0x87
   14004f80d:	mov    ch,ah
   14004f80f:	in     al,dx
   14004f810:	fnop   
   14004f812:	imul   DWORD PTR [rdx]
   14004f814:	mov    BYTE PTR [rbx],bl
   14004f816:	add    BYTE PTR [rax],al
   14004f818:	rol    DWORD PTR [rsi+rax*8+0x78],1
   14004f81c:	(bad)  
   14004f81d:	rex jmp 0x162ac726b
   14004f823:	sti    
   14004f824:	mov    WORD PTR [rcx],?
   14004f826:	rex.WR in al,0x4e
   14004f829:	or     ch,BYTE PTR [rcx]
   14004f82b:	mov    ch,0x75
   14004f82d:	rex.WXB (bad) 
   14004f82f:	(bad)  
   14004f830:	in     eax,0xef
   14004f832:	inc    BYTE PTR [rax+rax*4]
   14004f835:	and    al,0xfe
   14004f837:	(bad)  
   14004f838:	(bad)  
   14004f839:	fcom   DWORD PTR [rcx+0x57]
   14004f83c:	push   rax
   14004f83d:	(bad)  
   14004f83e:	adc    cl,BYTE PTR [rbx+0x22ce9123]
   14004f844:	sahf   
   14004f845:	retf   0x1c20
   14004f848:	lea    edx,[rdx]
   14004f84a:	sub    eax,0xbef89aaf
   14004f84f:	cmp    DWORD PTR [rbx],0xfcce298b
   14004f855:	or     ah,ch
   14004f857:	stos   DWORD PTR es:[rdi],eax
   14004f858:	shr    DWORD PTR [rbx-0x13c56e1c],0xe7
   14004f85f:	(bad)  
   14004f860:	leave  
   14004f861:	(bad)  
   14004f862:	test   DWORD PTR [rdx-0x30435389],edx
   14004f868:	and    al,0xcf
   14004f86a:	std    
   14004f86b:	popf   
   14004f86c:	sub    al,0xe4
   14004f86e:	icebp  
   14004f86f:	(bad)  
   14004f870:	mov    ecx,edi
   14004f872:	jrcxz  0x14004f86c
   14004f874:	jmp    0x14004f825
   14004f876:	push   rsi
   14004f877:	mov    esp,0x25f6d957
   14004f87c:	pop    rax
   14004f87d:	mov    ebx,0xa9e572f5
   14004f882:	(bad)  
   14004f883:	cmc    
   14004f884:	enter  0x5543,0xef
   14004f888:	icebp  
   14004f889:	mov    dl,0x73
   14004f88b:	xlat   BYTE PTR ds:[rbx]
   14004f88c:	movabs ds:0x3450a34708b9d57b,eax
   14004f895:	cs mov esp,0xad280e
   14004f89b:	adc    eax,ebp
   14004f89d:	push   rbx
   14004f89e:	(bad)  
   14004f89f:	jle    0x14004f911
   14004f8a1:	retf   
   14004f8a2:	nop
   14004f8a3:	movabs al,ds:0x200000f4b8ffa69f
   14004f8ac:	add    BYTE PTR [rcx+0x44],cl
   14004f8af:	push   r12
   14004f8b1:	ja     0x14004f8df
   14004f8b3:	out    0xee,eax
   14004f8b5:	(bad)  
   14004f8b6:	icebp  
   14004f8b7:	loopne 0x14004f8bf
   14004f8b9:	div    DWORD PTR [rax+rcx*8-0x71685741]
   14004f8c0:	(bad)  
   14004f8c1:	clc    
   14004f8c2:	in     al,0x91
   14004f8c4:	ins    DWORD PTR es:[rdi],dx
   14004f8c5:	(bad)  
   14004f8c6:	rex.WRXB pushf 
   14004f8c8:	xor    DWORD PTR [rbx+0x70],0x5e
   14004f8cc:	(bad)  
   14004f8cd:	out    0x97,eax
   14004f8cf:	movabs ds:0x30f2325ebd596e0d,eax
   14004f8d8:	xor    eax,0x3721405e
   14004f8dd:	mov    WORD PTR [rcx+0x38cdcb1],cs
   14004f8e3:	mov    bl,0x1e
   14004f8e5:	mov    dl,0x99
   14004f8e7:	adc    al,0x7e
   14004f8e9:	push   rdi
   14004f8eb:	scas   al,BYTE PTR es:[rdi]
   14004f8ec:	rex.X fild QWORD PTR [rbp+0x57]
   14004f8f0:	and    bl,BYTE PTR [rbx+0x6e00004e]
   14004f8f6:	mov    edi,0x72785beb
   14004f8fb:	(bad)  
   14004f8fc:	div    BYTE PTR [rcx-0x3c512]
   14004f902:	rcl    ah,cl
   14004f904:	add    al,0xa6
   14004f906:	(bad)  
   14004f907:	lea    eax,[rax+0x7d81c1e7]
   14004f90d:	std    
   14004f90e:	stos   DWORD PTR es:[rdi],eax
   14004f90f:	cld    
   14004f910:	ficom  DWORD PTR [rcx-0x13]
   14004f913:	jmp    0x14004f8d5
   14004f915:	ja     0x14004f8d8
   14004f917:	jns    0x14004f95c
   14004f919:	push   rax
   14004f91a:	movabs al,ds:0x5406e28004309c5c
   14004f923:	sar    dl,1
   14004f925:	ss repz data16 cmp al,ah
   14004f92a:	cmovne esp,DWORD PTR [rdx]
   14004f92d:	mov    BYTE PTR [rip+0x653448d3],ah        # 0x1a5394206
   14004f933:	adc    DWORD PTR [rbp+0x346925c7],ecx
   14004f939:	mov    rbx,QWORD PTR [rsi-0x5b7d1168]
   14004f940:	mov    edx,0xf206efe9
   14004f945:	call   0xeb582bcb
   14004f94a:	(bad)  
   14004f94b:	stos   DWORD PTR es:[rdi],eax
   14004f94c:	rex cmp ebp,DWORD PTR [rbx+0xc8d4792]
   14004f953:	push   rcx
   14004f954:	xor    ecx,ecx
   14004f956:	es ret 0xe440
   14004f95a:	stc    
   14004f95b:	xchg   ebx,eax
   14004f95c:	(bad)  
   14004f95d:	ds in  al,0x7
   14004f960:	add    esp,edx
   14004f962:	test   eax,0x70deac26
   14004f967:	and    DWORD PTR [rdx-0x50f8c331],edi
   14004f96d:	cmp    eax,0x9c8c6bff
   14004f972:	cmp    dl,ch
   14004f974:	jg     0x14004f969
   14004f976:	rex.R jne 0x14004f94e
   14004f979:	sub    eax,0x65eed6b3
   14004f97e:	pop    rax
   14004f97f:	mov    ecx,0xc9e2137e
   14004f984:	es (bad) 
   14004f986:	sar    ebx,0xa
   14004f989:	xor    al,0x31
   14004f98b:	mov    ebp,0xb26e6319
   14004f990:	movsxd ebp,DWORD PTR [rdx-0x62260c85]
   14004f996:	(bad)  
   14004f997:	sbb    eax,0x6a4cb8d5
   14004f99c:	data16 es jmp 0x14004f992
   14004f9a0:	mov    ah,0x33
   14004f9a2:	sar    esp,cl
   14004f9a4:	ja     0x14004f995
   14004f9a6:	xchg   edx,eax
   14004f9a7:	cmp    eax,0x148381b7
   14004f9ac:	idiv   DWORD PTR [rsi-0x4bcdd85f]
   14004f9b2:	mov    eax,DWORD PTR [rbx]
   14004f9b4:	cmp    r11d,esp
   14004f9b7:	xchg   esi,eax
   14004f9b8:	xchg   edx,eax
   14004f9b9:	or     ah,BYTE PTR [rbp+0x3bb30095]
   14004f9bf:	pop    rdx
   14004f9c0:	adc    DWORD PTR [rcx-0x3a766fd9],ecx
   14004f9c6:	xchg   ecx,eax
   14004f9c7:	outs   dx,BYTE PTR ds:[rsi]
   14004f9c8:	jmp    0x14004fa0e
   14004f9ca:	jno    0x14004fa2e
   14004f9cc:	sbb    al,0x85
   14004f9ce:	rcl    DWORD PTR [rcx],1
   14004f9d0:	mov    WORD PTR [rdi-0x241730f2],cs
   14004f9d6:	sbb    DWORD PTR [rbx],esp
   14004f9d8:	mov    ecx,0xe6fdee3c
   14004f9dd:	movabs ds:0x6f3763e1f6f7f6f8,eax
   14004f9e6:	(bad)
   14004f9e9:	mov    al,0x75
   14004f9eb:	fidiv  DWORD PTR [rbp+0x79]
   14004f9ee:	lock sar esi,1
   14004f9f1:	ja     0x14004f9cc
   14004f9f3:	adc    bh,BYTE PTR [rip+0xffffffff9200b354]        # 0xd205ad4d
   14004f9f9:	add    BYTE PTR [rsi+rdx*2],cl
   14004f9fc:	(bad)  
   14004f9fd:	fimul  DWORD PTR [rdi+rsi*2+0xad7c03]
   14004fa05:	lods   eax,DWORD PTR ds:[rsi]
   14004fa06:	movabs ds:0x8133c00b0a0e8e4d,eax
   14004fa0f:	push   0x21
   14004fa11:	or     eax,DWORD PTR ds:[rbp+0x10a44b10]
   14004fa18:	rex.WRXB
   14004fa19:	adc    DWORD PTR gs:[rbp+0x24],ecx
   14004fa1d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fa1e:	(bad)  
   14004fa1f:	adc    eax,0xcb521b1a
   14004fa24:	push   0x16
   14004fa26:	or     BYTE PTR [rbp-0x1d],0xfa
   14004fa2a:	imul   edi,DWORD PTR [rdi+0x52],0xf
   14004fa2e:	(bad)  
   14004fa2f:	(bad)  
   14004fa30:	push   rsi
   14004fa31:	jae    0x14004f9d1
   14004fa33:	(bad)  
   14004fa35:	add    BYTE PTR [rbx-0x5f1c09f3],dh
   14004fa3b:	pop    rcx
   14004fa3c:	sbb    edi,esi
   14004fa3e:	in     al,0x97
   14004fa40:	rex.X
   14004fa41:	rex.WR xchg rsi,rax
   14004fa43:	xor    esi,esi
   14004fa45:	fld    QWORD PTR [rbx-0x22]
   14004fa48:	jl     0x14004fa2f
   14004fa4a:	add    BYTE PTR [rsi+0x3f],bl
   14004fa4d:	lock pushf 
   14004fa4f:	(bad)  
   14004fa50:	mov    edx,0x6097db66
   14004fa55:	fstp   st(3)
   14004fa57:	scas   al,BYTE PTR es:[rdi]
   14004fa58:	movabs al,ds:0x5ee347ff6e4f1577
   14004fa61:	rex.RXB movabs ds:0x2f76b422f1b59c31,al
   14004fa6b:	jae    0x14004faa6
   14004fa6d:	movabs ds:0x9b7669b2f46b8d11,al
   14004fa76:	push   rbp
   14004fa77:	shl    BYTE PTR [rcx-0x39c545b],0x54
   14004fa7e:	pop    rbx
   14004fa7f:	stos   DWORD PTR es:[rdi],eax
   14004fa80:	push   rsi
   14004fa81:	adc    BYTE PTR [rbx-0x41],0x6f
   14004fa85:	movabs al,ds:0xaabfda22eb95e595
   14004fa8f:	add    eax,0x2f4dae40
   14004fa94:	(bad)  
   14004fa95:	cdq    
   14004fa96:	(bad)  
   14004fa97:	(bad)
   14004fa9a:	adc    al,0x13
   14004fa9c:	movsxd edx,ebx
   14004fa9e:	sbb    esp,DWORD PTR [rsi+0xc]
   14004faa1:	rex.RXB jrcxz 0x14004faec
   14004faa4:	fs pushf 
   14004faa6:	sub    BYTE PTR [rsi+riz*4+0x29],0xe
   14004faab:	(bad)  
   14004faac:	(bad)  
   14004faad:	and    al,0x47
   14004faaf:	(bad)  
   14004fab0:	xchg   ecx,eax
   14004fab1:	pop    rsp
   14004fab2:	cld    
   14004fab3:	adc    edi,esi
   14004fab5:	popf   
   14004fab6:	(bad)  
   14004fab7:	sub    dl,BYTE PTR [rsi+rbx*2+0x2e]
   14004fabb:	movsxd esp,DWORD PTR [rdx-0x14]
   14004fabe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fabf:	in     eax,dx
   14004fac0:	xor    al,0x29
   14004fac2:	(bad)  
   14004fac4:	mov    edi,0x80168a87
   14004fac9:	fbld   TBYTE PTR [rax+riz*4-0x6ee38eae]
   14004fad0:	pop    rax
   14004fad1:	(bad)  
   14004fad2:	dec    BYTE PTR [rbx+0x64801f3e]
   14004fad8:	(bad)  
   14004fad9:	rex.X cld 
   14004fadb:	jo     0x14004fb01
   14004fadd:	xchg   BYTE PTR [rax+0x53],bh
   14004fae0:	(bad)  
   14004fae1:	mov    cl,0x64
   14004fae3:	or     cl,ah
   14004fae5:	or     esp,esp
   14004fae7:	int    0x26
   14004fae9:	sub    al,0xda
   14004faeb:	fcmove st,st(4)
   14004faed:	movsxd ecx,DWORD PTR [rdx+0x1e]
   14004faf0:	push   rbx
   14004faf1:	(bad)  
   14004faf2:	xor    ch,ah
   14004faf4:	sbb    BYTE PTR [rbp-0x3a96e124],al
   14004fafa:	jno    0x14004fb48
   14004fafc:	(bad)  
   14004fafd:	pop    rcx
   14004fafe:	or     edi,ecx
   14004fb00:	movabs eax,ds:0xd99f767390c72afd
   14004fb09:	mov    edx,esi
   14004fb0b:	out    dx,al
   14004fb0c:	in     eax,0x78
   14004fb0e:	jns    0x14004faff
   14004fb10:	shr    DWORD PTR [rdx-0xe6a1fcb],cl
   14004fb16:	add    al,0x93
   14004fb18:	in     eax,0xf2
   14004fb1a:	fist   DWORD PTR [rsi+0x1b59c72e]
   14004fb20:	(bad)  
   14004fb21:	rex.X cmp dl,bpl
   14004fb24:	add    al,0x7b
   14004fb26:	sbb    ecx,edx
   14004fb28:	(bad)  
   14004fb29:	(bad)  
   14004fb2a:	int3   
   14004fb2b:	mov    eax,gs
   14004fb2d:	jp     0x14004fb9e
   14004fb2f:	lahf   
   14004fb30:	jae    0x14004fba2
   14004fb32:	push   rdi
   14004fb33:	ret    
   14004fb34:	cmp    bh,BYTE PTR [rdi]
   14004fb36:	mov    ?,WORD PTR [rdx-0x61fda449]
   14004fb3c:	sbb    DWORD PTR [rax],esp
   14004fb3e:	fwait
   14004fb3f:	ret    
   14004fb40:	mov    ecx,0x61738be3
   14004fb45:	rex.WB push 0x6d
   14004fb48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fb49:	(bad)  
   14004fb4a:	pop    rbx
   14004fb4b:	leave  
   14004fb4c:	sub    dh,BYTE PTR [ecx]
   14004fb4f:	sub    al,0x9a
   14004fb51:	frstor [rsi-0x60355218]
   14004fb57:	push   rdi
   14004fb58:	enter  0x20b3,0x96
   14004fb5c:	push   0x42
   14004fb5e:	xor    al,0x99
   14004fb60:	rex.X stos BYTE PTR es:[rdi],al
   14004fb62:	mov    ecx,0x3963131d
   14004fb67:	mov    WORD PTR [rdi+0x1139d70e],cs
   14004fb6d:	rex.WB mov BYTE PTR [r15-0x74],dl
   14004fb71:	mov    WORD PTR [rsi+0x5ae42c5b],cs
   14004fb77:	pop    rbx
   14004fb78:	loop   0x14004fbea
   14004fb7a:	rol    BYTE PTR [rdx],cl
   14004fb7c:	jmp    0x14004fb62
   14004fb7e:	(bad)  
   14004fb7f:	mov    ch,BYTE PTR [rdx+0x2e]
   14004fb82:	add    BYTE PTR [rax],al
   14004fb84:	jl     0x14004fba0
   14004fb86:	shl    BYTE PTR [rbx],0xca
   14004fb89:	leave  
   14004fb8a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fb8b:	es or  al,0x1
   14004fb8e:	push   rax
   14004fb8f:	stos   DWORD PTR es:[rdi],eax
   14004fb90:	sbb    edx,DWORD PTR [rax+0x2b]
   14004fb93:	(bad)  
   14004fb94:	leave  
   14004fb95:	es (bad) 
   14004fb97:	push   rdx
   14004fb98:	sbb    DWORD PTR [rdx+riz*4+0x71],eax
   14004fb9c:	(bad)  
   14004fb9e:	in     eax,0xd9
   14004fba0:	and    BYTE PTR [rdx-0x7e],bh
   14004fba3:	mov    ebx,0x368c5249
   14004fba8:	mov    BYTE PTR [rbx+rsi*2],bh
   14004fbab:	ret    
   14004fbac:	add    BYTE PTR [rdi+0x3b],dh
   14004fbaf:	mov    al,0x5f
   14004fbb1:	mov    esi,0xd08f2cbc
   14004fbb6:	xchg   esp,eax
   14004fbb7:	in     eax,dx
   14004fbb8:	jb     0x14004fbfd
   14004fbba:	(bad)  
   14004fbbb:	or     DWORD PTR [rax+0x6bd64252],edx
   14004fbc1:	and    DWORD PTR [rsi],edi
   14004fbc3:	cmp    eax,0x7c4cb527
   14004fbc8:	int3   
   14004fbc9:	jle    0x14004fb5e
   14004fbcb:	cld    
   14004fbcc:	push   rsp
   14004fbcd:	sbb    bh,BYTE PTR [rcx]
   14004fbcf:	outs   dx,BYTE PTR ds:[rsi]
   14004fbd0:	rcr    edx,0x4b
   14004fbd3:	cs (bad) 
   14004fbd5:	sbb    eax,DWORD PTR [rdi]
   14004fbd7:	sahf   
   14004fbd8:	ret    
   14004fbd9:	jmp    0x14004fbd6
   14004fbdb:	in     eax,0x7a
   14004fbdd:	scas   eax,DWORD PTR es:[rdi]
   14004fbde:	push   rdx
   14004fbdf:	sub    BYTE PTR [rdx-0x72edd57e],0x61
   14004fbe6:	(bad)  
   14004fbe7:	stc    
   14004fbe8:	fwait
   14004fbe9:	sar    DWORD PTR [rcx+0x2f72b562],1
   14004fbef:	rex sahf 
   14004fbf1:	test   eax,0xf6733417
   14004fbf6:	pop    rbp
   14004fbf7:	and    eax,esp
   14004fbf9:	adc    DWORD PTR [rax-0x7],edx
   14004fbfc:	test   DWORD PTR [rcx+0x76],ecx
   14004fbff:	in     eax,dx
   14004fc00:	push   rdi
   14004fc01:	(bad)  
   14004fc02:	cld    
   14004fc03:	(bad)  
   14004fc04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fc05:	xchg   DWORD PTR [rcx+0x66],eax
   14004fc08:	push   0xffffffffffffffe5
   14004fc0a:	rex.WXB scas al,BYTE PTR es:[rdi]
   14004fc0c:	sti    
   14004fc0d:	xchg   esp,eax
   14004fc0e:	scas   eax,DWORD PTR es:[rdi]
   14004fc0f:	sbb    DWORD PTR [rdx-0x4752af15],edi
   14004fc15:	rdtsc  
   14004fc17:	cmp    eax,0x210a1499
   14004fc1c:	xchg   ecx,eax
   14004fc1d:	outs   dx,BYTE PTR ds:[rsi]
   14004fc1e:	rex.RX mov esp,0x44e28b29
   14004fc24:	add    DWORD PTR [rbx],edx
   14004fc26:	stc    
   14004fc27:	push   rcx
   14004fc28:	rex.WR (bad) 
   14004fc2a:	rex.RX
   14004fc2b:	addr32 push rax
   14004fc2d:	(bad)  
   14004fc2e:	int3   
   14004fc2f:	not    BYTE PTR [rbp+0x69]
   14004fc32:	outs   dx,DWORD PTR ds:[rsi]
   14004fc33:	imul   ecx,edx,0xba7ffe6a
   14004fc39:	fisubr DWORD PTR [rcx-0x39ffee95]
   14004fc3f:	cld    
   14004fc40:	pop    rdx
   14004fc41:	pop    rsi
   14004fc42:	cs (bad) 
   14004fc44:	(bad)  
   14004fc45:	xor    eax,0xa6f9fd8
   14004fc4a:	rex.X loope 0x14004fc55
   14004fc4d:	movabs ds:0x42c420ca9621489,al
   14004fc56:	xor    dh,ah
   14004fc58:	push   0x6
   14004fc5a:	mov    ch,0xb3
   14004fc5c:	(bad)  
   14004fc5d:	shl    bl,0x86
   14004fc60:	mov    dh,0xab
   14004fc62:	cmp    ah,BYTE PTR [rcx+rdx*8]
   14004fc65:	or     eax,0x978427b9
   14004fc6a:	push   0x1d
   14004fc6c:	test   al,0x6
   14004fc6e:	add    edi,DWORD PTR [rip+0xffffffff84f3969e]        # 0xc4f89312
   14004fc74:	sub    DWORD PTR [rip+0x6dd24818],0x56        # 0x1add74493
   14004fc7b:	xchg   DWORD PTR [rbx+0x23e7bde5],ecx
   14004fc81:	fcmovnbe st,st(1)
   14004fc83:	test   DWORD PTR [rbx],eax
   14004fc85:	rex.WRXB dec QWORD PTR [r14+r14*1-0x77e44b78]
   14004fc8d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fc8e:	rcr    BYTE PTR [rax+0x73],cl
   14004fc91:	rcr    ebx,1
   14004fc93:	xchg   ecx,eax
   14004fc94:	push   0x6e
   14004fc96:	jne    0x14004fc6b
   14004fc98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fc99:	jg     0x14004fcca
   14004fc9b:	rex.WR ja 0x14004fd15
   14004fc9e:	fwait
   14004fc9f:	jno    0x14004fc87
   14004fca1:	cli    
   14004fca2:	jrcxz  0x14004fc72
   14004fca4:	int    0x53
   14004fca6:	xor    eax,0xc342933f
   14004fcab:	lea    ecx,[rbx]
   14004fcad:	sub    BYTE PTR [rdx-0x1fb1dbe1],bl
   14004fcb3:	xchg   ebp,eax
   14004fcb4:	adc    DWORD PTR [rbp+0x41],esi
   14004fcb7:	adc    cl,BYTE PTR [rdx]
   14004fcb9:	pop    rsi
   14004fcba:	pushf  
   14004fcbb:	rex mov ebx,0x7ae1d3c5
   14004fcc1:	rex.WRB test al,0xce
   14004fcc4:	fist   WORD PTR ss:[rbx+0x73]
   14004fcc8:	jne    0x14004fced
   14004fcca:	sbb    al,0x4b
   14004fccc:	and    BYTE PTR [rip+0xffffffff94de238d],dl        # 0xd4e3205f
   14004fcd2:	(bad)
   14004fcd5:	sbb    BYTE PTR [rsi],ah
   14004fcd7:	(bad)  
   14004fcd8:	jb     0x14004fcca
   14004fcda:	stc    
   14004fcdb:	xor    al,0x77
   14004fcdd:	in     eax,dx
   14004fcde:	ins    DWORD PTR es:[rdi],dx
   14004fcdf:	rcr    BYTE PTR [rbp+0x1],cl
   14004fce2:	test   al,0xe6
   14004fce4:	jg     0x14004fc9f
   14004fce6:	cmp    cl,ch
   14004fce8:	test   DWORD PTR [rbp-0x11],0xabe373aa
   14004fcef:	mov    esi,0x3e7ee20d
   14004fcf4:	mov    esp,0x4e2f4f4f
   14004fcf9:	push   rsi
   14004fcfa:	cdq    
   14004fcfb:	cmp    cl,al
   14004fcfd:	jge    0x14004fd76
   14004fcff:	int3   
   14004fd00:	rex.RX test dl,r8b
   14004fd03:	rex.W
   14004fd04:	fs pop rdx
   14004fd06:	rcl    esp,1
   14004fd08:	(bad)  
   14004fd09:	lea    ebx,[rax+0x2a]
   14004fd0c:	or     eax,esi
   14004fd0e:	rex.X jne 0x14004fd4f
   14004fd11:	jmp    0x14004fd7d
   14004fd13:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fd14:	cmp    eax,0xa1ee73bf
   14004fd19:	or     BYTE PTR [rbx],al
   14004fd1b:	cmp    eax,0xaa06fa4f
   14004fd20:	rex.B movabs al,ds:0xf1e4c0a14b0a2f1c
   14004fd2a:	stos   BYTE PTR es:[rdi],al
   14004fd2b:	xchg   BYTE PTR [rdi-0x54],dh
   14004fd2e:	and    esi,0xffffff8e
   14004fd31:	lods   al,BYTE PTR cs:[rsi]
   14004fd33:	mov    ebx,0x6a685df4
   14004fd38:	outs   dx,BYTE PTR ds:[rsi]
   14004fd39:	test   DWORD PTR [rax+0x4a56b857],ecx
   14004fd3f:	push   rbx
   14004fd40:	jae    0x14004fd6d
   14004fd42:	cs mov eax,0x6a683de2
   14004fd48:	imul   esp,DWORD PTR [rbx],0x4242a955
   14004fd4e:	sbb    dh,BYTE PTR [rdx]
   14004fd50:	rex.WR sbb BYTE PTR [rdi],r13b
   14004fd53:	rex.WR sahf 
   14004fd55:	mov    ah,0x82
   14004fd57:	jo     0x14004fceb
   14004fd59:	ins    DWORD PTR es:[rdi],dx
   14004fd5a:	mov    cl,0x95
   14004fd5c:	mov    cl,0x5e
   14004fd5e:	xlat   BYTE PTR ds:[rbx]
   14004fd5f:	rex.WR push rcx
   14004fd61:	(bad)
   14004fd64:	(bad)  
   14004fd65:	(bad)  
   14004fd66:	sub    al,0x3c
   14004fd68:	push   rbx
   14004fd69:	stc    
   14004fd6a:	lods   eax,DWORD PTR ds:[rsi]
   14004fd6b:	cmc    
   14004fd6c:	imul   ebp,DWORD PTR [rsi+0x2d],0x8e1420e4
   14004fd73:	and    dh,bl
   14004fd75:	(bad)  
   14004fd76:	mov    WORD PTR [rdi+rax*8+0x52],?
   14004fd7a:	and    al,0xb3
   14004fd7c:	ins    DWORD PTR es:[rdi],dx
   14004fd7d:	or     BYTE PTR [rbp-0x76a94513],al
   14004fd83:	jg     0x14004fd59
   14004fd85:	ror    BYTE PTR [rax+0xb],cl
   14004fd88:	jl     0x14004fd42
   14004fd8a:	fsub   st,st(7)
   14004fd8c:	jb     0x14004fd45
   14004fd8e:	and    ch,BYTE PTR [rdx+0x7d]
   14004fd91:	sbb    eax,0x84f55fec
   14004fd96:	jb     0x14004fe01
   14004fd98:	retf   0x8288
   14004fd9b:	stos   BYTE PTR es:[rdi],al
   14004fd9c:	ds rex.WR cmc 
   14004fd9f:	stos   DWORD PTR es:[rdi],eax
   14004fda0:	or     BYTE PTR [rdi+0x63],al
   14004fda3:	rex.W
   14004fda4:	fist   DWORD PTR fs:[rcx+0x2442ed6a]
   14004fdab:	sahf   
   14004fdac:	stos   BYTE PTR es:[rdi],al
   14004fdad:	rcr    DWORD PTR [rbx+rbp*4+0x179a8ec],1
   14004fdb4:	fwait
   14004fdb5:	stc    
   14004fdb6:	(bad)  
   14004fdb7:	cmp    bl,bl
   14004fdb9:	test   al,0x8c
   14004fdbb:	(bad)  
   14004fdbc:	fdiv   DWORD PTR [rdx+0x32513a35]
   14004fdc2:	add    ebp,DWORD PTR [rax+0x6a]
   14004fdc5:	outs   dx,BYTE PTR ds:[rsi]
   14004fdc6:	(bad)
   14004fdc9:	mov    bh,0x10
   14004fdcb:	retf   
   14004fdcc:	ret    
   14004fdcd:	movabs r15,0x8fd98d1222f78ae0
   14004fdd7:	movabs ds:0xb4b54a9165544042,eax
   14004fde0:	jnp    0x14004fd88
   14004fde2:	xor    BYTE PTR [rdx+rcx*1],dl
   14004fde5:	ja     0x14004fd86
   14004fde7:	mov    bl,0xfe
   14004fde9:	(bad)  
   14004fdeb:	lock pop rdx
   14004fded:	int3   
   14004fdee:	in     al,dx
   14004fdef:	mov    ch,cl
   14004fdf1:	xchg   ebp,eax
   14004fdf2:	lahf   
   14004fdf3:	xchg   edi,eax
   14004fdf4:	push   0xffffffffb18e568a
   14004fdf9:	adc    BYTE PTR [rdx-0x2565eb0f],ah
   14004fdff:	mov    edx,0x22b4c891
   14004fe04:	rex.R out 0x50,eax
   14004fe07:	push   rsp
   14004fe08:	(bad)  
   14004fe09:	sub    ebp,esp
   14004fe0b:	push   rdx
   14004fe0c:	mov    DWORD PTR [rsi+0x5efd972c],edx
   14004fe12:	std    
   14004fe13:	xor    eax,0xcd436b38
   14004fe18:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004fe1a:	rex.XB fistp QWORD PTR [r15d]
   14004fe1e:	add    DWORD PTR [rax-0x5c7a596b],edi
   14004fe24:	or     DWORD PTR [rbx+rdx*1-0x16],eax
   14004fe28:	(bad)  
   14004fe29:	and    BYTE PTR [rbx+0x47],bl
   14004fe2c:	and    al,0x99
   14004fe2e:	cwde   
   14004fe2f:	sbb    BYTE PTR [rip+0x7d5fa1c4],bl        # 0x1bd649ff9
   14004fe35:	mov    ebp,0x6806d3d6
   14004fe3a:	adc    BYTE PTR [rsi+0x6c55e4fd],dh
   14004fe40:	jnp    0x14004fe24
   14004fe42:	push   rbp
   14004fe43:	xchg   ebx,eax
   14004fe44:	enter  0xa806,0xb5
   14004fe48:	rex.R int 0x26
   14004fe4b:	sbb    esp,esi
   14004fe4d:	pop    rbx
   14004fe4e:	jg     0x14004feb6
   14004fe50:	or     edi,DWORD PTR [rsi-0x4c327610]
   14004fe56:	fneni(8087 only) 
   14004fe58:	rex.RB mov WORD PTR [r15-0x247d410a],fs
   14004fe5f:	ds in  eax,dx
   14004fe61:	rex.WRX ret 0x62ad
   14004fe65:	dec    BYTE PTR [rdi-0x73]
   14004fe68:	(bad)  
   14004fe69:	movabs ds:0xd7d81a1f00046534,al
   14004fe72:	jmp    QWORD PTR [rcx-0x30aa31a6]
   14004fe78:	or     esp,ecx
   14004fe7a:	call   FWORD PTR [rcx+0x4f]
   14004fe7d:	sub    BYTE PTR [rbp-0x73],cl
   14004fe80:	push   rdi
   14004fe81:	sbb    DWORD PTR [rbx],ecx
   14004fe83:	xor    eax,0x952c5725
   14004fe88:	lods   eax,DWORD PTR ds:[rsi]
   14004fe89:	jrcxz  0x14004fe1f
   14004fe8b:	add    DWORD PTR [rdx],eax
   14004fe8d:	add    al,0xf0
   14004fe8f:	add    ebp,DWORD PTR [rdi]
   14004fe91:	xchg   edi,eax
   14004fe92:	ins    DWORD PTR es:[rdi],dx
   14004fe93:	in     al,0x7
   14004fe95:	sub    al,0x5c
   14004fe97:	cmc    
   14004fe98:	rex.XB int 0x2
   14004fe9b:	(bad)  
   14004fe9c:	(bad)  
   14004fe9d:	pop    rdi
   14004fe9e:	dec    DWORD PTR [rbx-0x1615f200]
   14004fea4:	cli    
   14004fea5:	lock and DWORD PTR [rcx+0x6a],0x69
   14004feaa:	pop    rsi
   14004feab:	add    DWORD PTR [rbx],ecx
   14004fead:	test   DWORD PTR [rbx+0x3d],ebp
   14004feb0:	add    BYTE PTR gs:[rax],0x8b
   14004feb4:	sbb    edx,DWORD PTR [rbp-0x34]
   14004feb7:	jg     0x14004fe58
   14004feb9:	movabs eax,ds:0x4bbd426b572e83bf
   14004fec2:	ret    0x61dc
   14004fec5:	xor    al,0x62
   14004fec7:	mov    dl,0x50
   14004fec9:	xchg   edi,ecx
   14004fecb:	cmp    eax,0x171224f
   14004fed0:	add    ch,BYTE PTR [rax+rdx*2]
   14004fed3:	shl    BYTE PTR [rbp-0x1f09b5ec],1
   14004fed9:	lahf   
   14004feda:	rcl    ecx,0x4a
   14004fedd:	test   al,0x65
   14004fedf:	sbb    BYTE PTR [rax-0x538fd81e],dl
   14004fee5:	adc    BYTE PTR [rbp-0x563abe4c],0x42
   14004feec:	test   DWORD PTR [rcx+0x6b1b0d41],ecx
   14004fef2:	or     esi,DWORD PTR [rax]
   14004fef4:	add    ebp,DWORD PTR [rdi+rbx*2+0x2e5b82d5]
   14004fefb:	pop    rdi
   14004fefc:	add    eax,0xdb0d3e80
   14004ff01:	jae    0x14004fed4
   14004ff03:	(bad)  
   14004ff04:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ff05:	mov    dh,0x68
   14004ff07:	movabs eax,ds:0x6ea0171b634496ce
   14004ff10:	adc    al,0xa7
   14004ff12:	or     dh,BYTE PTR [rsi+0x3841e6c0]
   14004ff18:	sbb    al,0xad
   14004ff1a:	sbb    DWORD PTR [rbp+0x9],esi
   14004ff1d:	add    BYTE PTR [rcx+0x67bcfd7d],0x43
   14004ff24:	fistp  WORD PTR [rip+0xffffffffe9a71e00]        # 0x129ac1d2a
   14004ff2a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ff2b:	leave  
   14004ff2c:	add    ah,BYTE PTR [rdx]
   14004ff2e:	shl    DWORD PTR [rax+rcx*4+0x8af1af8],1
   14004ff35:	sub    esi,DWORD PTR [rdx]
   14004ff37:	and    BYTE PTR [rax],dh
   14004ff39:	add    esi,esp
   14004ff3b:	add    ch,bl
   14004ff3d:	push   rdi
   14004ff3e:	mov    ch,0x60
   14004ff40:	std    
   14004ff41:	stos   BYTE PTR es:[rdi],al
   14004ff42:	xchg   esi,eax
   14004ff43:	mov    ecx,0x5a80466e
   14004ff48:	push   rcx
   14004ff49:	sub    eax,edi
   14004ff4b:	push   rdi
   14004ff4c:	rex.B sti 
   14004ff4e:	xlat   BYTE PTR ds:[rbx]
   14004ff4f:	xor    dh,ah
   14004ff51:	rex.RXB xor DWORD PTR [r13-0x5d801e7b],r11d
   14004ff58:	(bad)  
   14004ff59:	js     0x14004ffb1
   14004ff5b:	cmp    BYTE PTR [rdi],0x2
   14004ff5e:	rol    BYTE PTR [rdi],cl
   14004ff60:	or     BYTE PTR [rax+0x33],dl
   14004ff63:	stos   BYTE PTR es:[rdi],al
   14004ff64:	rol    ch,1
   14004ff66:	rex.RXB sti 
   14004ff68:	add    esi,DWORD PTR [rbp+0x6a]
   14004ff6b:	jg     0x14004ff0d
   14004ff6d:	jle    0x14004ff86
   14004ff6f:	shl    BYTE PTR [rbx-0x97d91fe],0x96
   14004ff76:	(bad)  
   14004ff77:	and    eax,0x9138a02b
   14004ff7c:	(bad)  
   14004ff7d:	(bad)  
   14004ff7e:	(bad)  
   14004ff7f:	cwde   
   14004ff80:	sub    bl,bh
   14004ff82:	(bad)  
   14004ff83:	outs   dx,DWORD PTR ds:[rsi]
   14004ff84:	cmp    al,0x52
   14004ff86:	out    dx,eax
   14004ff87:	imul   eax,DWORD PTR [rbx],0x3de580d4
   14004ff8d:	in     eax,dx
   14004ff8e:	jae    0x14004ff4e
   14004ff90:	cmp    BYTE PTR [rbp+0xb019f7],ah
   14004ff96:	cmc    
   14004ff97:	and    DWORD PTR [rcx*2+0x1bf90088],ebx
   14004ff9e:	xchg   DWORD PTR [rdi],eax
   14004ffa0:	loope  0x14004ffe1
   14004ffa2:	rol    ebp,1
   14004ffa4:	push   rdi
   14004ffa5:	sti    
   14004ffa6:	xlat   BYTE PTR ds:[rbx]
   14004ffa7:	xor    al,0xf1
   14004ffa9:	rex.RXB
   14004ffaa:	rex.RXB fld QWORD PTR [r10]
   14004ffad:	rol    ch,0xc3
   14004ffb0:	mov    al,0xc4
   14004ffb2:	add    ah,BYTE PTR [rsi+0x798cc626]
   14004ffb8:	add    DWORD PTR [rsi],esi
   14004ffba:	push   rsp
   14004ffbb:	pop    rdx
   14004ffbc:	ins    DWORD PTR es:[rdi],dx
   14004ffbd:	es shl ah,0xb1
   14004ffc1:	jne    0x14005000e
   14004ffc3:	out    dx,eax
   14004ffc4:	cmp    al,0x10
   14004ffc6:	add    BYTE PTR [rdi],al
   14004ffc8:	(bad)  
   14004ffc9:	out    0x3b,eax
   14004ffcb:	or     eax,0x49dc9bc4
   14004ffd0:	rex.X mov esi,0xa63277bc
   14004ffd6:	es (bad) 
   14004ffd8:	cld    
   14004ffd9:	jl     0x14004ffda
   14004ffdb:	outs   dx,DWORD PTR ds:[rsi]
   14004ffdc:	rex.WRB out 0xbc,eax
   14004ffdf:	sar    edx,cl
   14004ffe1:	ss xchg esp,eax
   14004ffe3:	sub    ebp,DWORD PTR [rcx-0x34]
   14004ffe6:	adc    DWORD PTR [rcx],eax
   14004ffe8:	ins    DWORD PTR es:[rdi],dx
   14004ffe9:	pop    rsi
   14004ffea:	rex and edx,esi
   14004ffed:	(bad)  
   14004ffee:	movups xmm4,XMMWORD PTR [rax]
   14004fff1:	add    BYTE PTR [rbx+0x75fee30a],0xfb
   14004fff8:	(bad)  
   14004fff9:	(bad)  
   14004fffa:	data16 bnd jno 0x14004ffb6
   14004fffe:	lahf   
   14004ffff:	shl    BYTE PTR [rdx],0x2f
   140050002:	movabs al,ds:0x40201505bc75138
   14005000b:	nop
   14005000c:	mov    al,0xbc
   14005000e:	push   rbx
   14005000f:	add    BYTE PTR [rax+0x45],cl
   140050012:	(bad)  
   140050013:	ret    
   140050014:	lods   eax,DWORD PTR ds:[rsi]
   140050015:	mov    edx,0xd314ff23
   14005001a:	(bad)  
   14005001b:	add    BYTE PTR [rsi-0x4d8ebfaa],bh
   140050021:	jno    0x140050082
   140050023:	adc    al,0xe
   140050025:	adc    BYTE PTR [rax],ah
   140050027:	add    BYTE PTR [rax],al
   140050029:	out    0xdd,eax
   14005002b:	sbb    ebx,DWORD PTR [rdi-0x5258c0fb]
   140050031:	std    
   140050032:	add    DWORD PTR [rsi],0x6cf7d00c
   140050038:	call   0x145b91a38
   14005003d:	rex.XB
   14005003e:	rex.X movabs eax,ds:0x5934a9c8724d6208
   140050048:	push   rax
   140050049:	(bad)  
   14005004a:	add    BYTE PTR [rcx],0x66
   14005004d:	(bad)  
   14005004e:	(bad)  [rdx+rbp*2-0x32]
   140050052:	(bad)  
   140050053:	rex.WX icebp 
   140050055:	cli    
   140050056:	shl    cl,0xd3
   140050059:	loop   0x14005003e
   14005005b:	stos   DWORD PTR es:[rdi],eax
   14005005c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005005d:	sbb    dh,cl
   14005005f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050060:	push   rsi
   140050061:	test   dl,al
   140050063:	out    dx,al
   140050064:	(bad)  
   140050065:	mov    eax,DWORD PTR [rsi+rbx*4]
   140050068:	neg    BYTE PTR [rdi-0x46bde4e4]
   14005006e:	ins    BYTE PTR es:[rdi],dx
   14005006f:	sub    al,0x36
   140050071:	repnz repz cmp DWORD PTR [rbp-0x3],0xbce4cd97
   14005007a:	ror    DWORD PTR [rip+0x1dc5202],cl        # 0x141e15282
   140050080:	loopne 0x1400500f9
   140050082:	xor    al,0xa1
   140050084:	pop    rsp
   140050085:	movabs cs:0x77f46e145f105934,al
   14005008f:	iret   
   140050090:	add    ebx,eax
   140050092:	xor    DWORD PTR [rdx+0x6fba2fcb],edx
   140050098:	imul   BYTE PTR [rip+0xb269406]        # 0x14b2b94a4
   14005009e:	repnz add esi,DWORD PTR ss:[rbp-0x32]
   1400500a3:	cli    
   1400500a4:	mov    bl,0xa1
   1400500a6:	and    DWORD PTR [rbx-0xc],edx
   1400500a9:	jp     0x1400500e1
   1400500ab:	hlt    
   1400500ac:	jge    0x1400500bb
   1400500ae:	(bad)  
   1400500b0:	or     DWORD PTR [rcx+rsi*1+0x60ad52c4],0xffffffa1
   1400500b8:	adc    BYTE PTR [rdx+0x53],cl
   1400500bb:	adc    edx,DWORD PTR [rsi-0x8693487]
   1400500c1:	loope  0x140050070
   1400500c3:	or     esp,ecx
   1400500c5:	(bad)  
   1400500c6:	rex.WB
   1400500c7:	rex.WXB xlat BYTE PTR ds:[rbx]
   1400500c9:	shl    esp,cl
   1400500cb:	push   rdi
   1400500cc:	pop    rcx
   1400500cd:	mov    ch,0x34
   1400500cf:	jns    0x14005005d
   1400500d1:	xchg   esi,eax
   1400500d2:	sub    DWORD PTR [rsi-0x4c],edi
   1400500d5:	rex.RB
   1400500d6:	ss mov edi,ss
   1400500d9:	(bad)  
   1400500da:	leave  
   1400500db:	retf   
   1400500dc:	mov    dh,0xb6
   1400500de:	mov    bh,0xeb
   1400500e0:	sbb    BYTE PTR [rbx],dh
   1400500e2:	pop    rbx
   1400500e3:	outs   dx,BYTE PTR ds:[rsi]
   1400500e4:	mov    esp,0x1ced5b49
   1400500e9:	rex.RX ret 
   1400500eb:	lea    edi,[rdx]
   1400500ed:	mov    BYTE PTR [rsi-0x7a],0x1a
   1400500f1:	mov    dl,0x6c
   1400500f3:	cmc    
   1400500f4:	rex.WR xchg rax,rax
   1400500f6:	ins    DWORD PTR es:[rdi],dx
   1400500f7:	out    dx,eax
   1400500f8:	add    al,0xe0
   1400500fa:	(bad)  
   1400500fb:	jne    0x1400500da
   1400500fd:	jl     0x1400500ce
   1400500ff:	popf   
   140050100:	sbb    edi,DWORD PTR [rbx]
   140050102:	pop    rsp
   140050103:	sub    eax,0x677dafa9
   140050108:	and    rdi,r10
   14005010b:	xlat   BYTE PTR ds:[rbx]
   14005010c:	ja     0x1400500ee
   14005010e:	fimul  DWORD PTR [rdi-0x1b]
   140050111:	jge    0x140050184
   140050113:	ds fwait
   140050115:	iret   
   140050116:	in     eax,dx
   140050117:	jnp    0x140050125
   140050119:	rex.WB xor rax,0xffffffffccfa4aa7
   14005011f:	jb     0x1400500d8
   140050121:	rex.WRXB jge 0x1400500db
   140050124:	test   eax,0x8d3c68c3
   140050129:	push   rax
   14005012a:	fdivr  DWORD PTR [rdi+rcx*2-0x5a]
   14005012e:	pop    rsp
   14005012f:	sub    ah,BYTE PTR [rcx+0x32]
   140050132:	(bad)  
   140050133:	push   0x3bdfa80b
   140050138:	mov    al,0xaf
   14005013a:	push   QWORD PTR [rbx]
   14005013c:	xchg   esi,eax
   14005013d:	stos   BYTE PTR es:[rdi],al
   14005013e:	(bad)  
   14005013f:	and    ebp,DWORD PTR [rax+r8*1]
   140050143:	add    al,bh
   140050145:	rex.WRXB rol BYTE PTR [r8+r8*1],1
   140050149:	out    0x1c,eax
   14005014b:	(bad)
   14005014e:	rex.R xchg ebx,eax
   140050150:	pop    rcx
   140050151:	test   BYTE PTR [rbx+0x74624471],ah
   140050157:	cli    
   140050158:	test   al,0x49
   14005015a:	es rex.WX and al,0xa6
   14005015e:	std    
   14005015f:	cmp    cl,BYTE PTR [rbx+0x24c5c850]
   140050165:	xchg   esp,eax
   140050166:	rex.RB
   140050167:	fnsave ss:[rdi-0x25]
   14005016b:	xchg   ebp,eax
   14005016c:	gs mov eax,0x4a9fa2e9
   140050172:	(bad)  
   140050173:	mov    ebx,0x8749071c
   140050178:	mov    bh,0xb8
   14005017a:	test   DWORD PTR [rdx+0x2f],edx
   14005017d:	(bad)  
   14005017e:	xchg   DWORD PTR [rsp+riz*8-0x5e],eax
   140050182:	popf   
   140050183:	pop    rdx
   140050184:	jge    0x14005014c
   140050186:	xor    DWORD PTR [rsi+0x546d9036],esi
   14005018c:	pop    rax
   14005018d:	(bad)  
   14005018e:	xchg   esp,eax
   14005018f:	scas   al,BYTE PTR es:[rdi]
   140050190:	sbb    ebp,DWORD PTR [rax+0x220a89b4]
   140050196:	mov    dl,0xd8
   140050198:	(bad)  
   140050199:	cmp    esi,edi
   14005019b:	mov    bh,0x4f
   14005019d:	inc    BYTE PTR [rbx+riz*1]
   1400501a0:	(bad)  
   1400501a1:	mov    ?,WORD PTR [rip+0xf4e31e8]        # 0x14f53338f
   1400501a7:	imul   ebp,DWORD PTR [rsi],0x7e
   1400501aa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400501ab:	fcmovnbe st,st(7)
   1400501ad:	mov    ecx,0x6cbeb420
   1400501b2:	(bad)  
   1400501b3:	loopne 0x14005014e
   1400501b5:	mov    bl,0x6e
   1400501b7:	mov    edx,0x3826c8b7
   1400501bc:	ror    bl,0xda
   1400501bf:	movabs ds:0xcca65bd67c0bfe9d,al
   1400501c8:	cmp    DWORD PTR [rax-0x47],edi
   1400501cb:	rex.WR (bad) 
   1400501cd:	add    eax,0x4ed9594b
   1400501d2:	xor    eax,0xea0d320f
   1400501d7:	mov    esi,0x281c0e52
   1400501dc:	retf   
   1400501dd:	jmp    0x140050196
   1400501df:	sub    eax,0x2fdea84
   1400501e4:	loop   0x1400501fc
   1400501e6:	ror    BYTE PTR [rip+0xffffffffe7ba0c88],1        # 0x127bf0e74
   1400501ec:	jb     0x1400501b6
   1400501ee:	addr32 xor al,0xed
   1400501f1:	(bad)  
   1400501f2:	xor    eax,0x64cdd9e2
   1400501f7:	adc    al,0x40
   1400501f9:	rcr    BYTE PTR [rbp+0x78],0xf0
   1400501fd:	es cmp eax,0xf49c54bd
   140050203:	stc    
   140050204:	push   rdx
   140050205:	test   eax,0x976d9129
   14005020a:	push   0xffffffffb1480a6a
   14005020f:	rex.WRB push r15
   140050211:	js     0x140050248
   140050213:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050214:	mov    ah,0xf7
   140050216:	movabs al,ds:0xc3ca5545d0f23cdd
   14005021f:	(bad)  
   140050220:	lods   eax,DWORD PTR ds:[rsi]
   140050221:	jo     0x1400501f6
   140050223:	shl    BYTE PTR [rbp+0x5],0x8a
   140050227:	ss nop
   140050229:	jge    0x140050203
   14005022b:	jp     0x140050276
   14005022d:	rex.WX add bpl,cl
   140050230:	and    al,0xde
   140050232:	or     edx,0x92f4b34a
   140050238:	test   al,0x36
   14005023a:	loop   0x14005022e
   14005023c:	xchg   edi,eax
   14005023d:	push   0x3f
   14005023f:	jmp    0x140050288
   140050241:	xor    eax,0x9d6c03e7
   140050246:	sahf   
   140050247:	pop    rsp
   140050248:	add    eax,DWORD PTR [rax-0x25]
   14005024b:	out    dx,al
   14005024c:	fst    QWORD PTR [rcx-0xf]
   14005024f:	(bad)  
   140050250:	(bad)  
   140050251:	out    0x64,eax
   140050253:	test   eax,0x2bf44f5b
   140050258:	movabs ds:0x67953b699cf26f3e,eax
   140050261:	movabs ds:0x6bf274b640da5864,al
   14005026a:	std    
   14005026b:	rex.X sahf 
   14005026d:	rex.RB jmp 0x117cbd8c0
   140050273:	rex.X jle 0x140050236
   140050276:	pop    rcx
   140050277:	(bad)  
   140050278:	retf   
   140050279:	(bad)  
   14005027a:	lock ja 0x1400502d0
   14005027d:	mov    ch,0xc5
   14005027f:	imul   eax,DWORD PTR ds:[rbp+0x43],0x4
   140050284:	or     BYTE PTR [rbx],0x6f
   140050287:	jb     0x140050219
   140050289:	(bad)  
   14005028a:	test   eax,0x86e59cf1
   14005028f:	adc    esi,DWORD PTR [rax+0x7d]
   140050292:	fwait
   140050293:	imul   edi,DWORD PTR [rdi+0x371e1d24],0xfffffff5
   14005029a:	pop    rbx
   14005029b:	stos   DWORD PTR es:[rdi],eax
   14005029c:	sub    eax,0xb89f4cf9
   1400502a1:	(bad)  
   1400502a2:	movabs al,ds:0x3cf9e5c0c10a0234
   1400502ab:	lea    esp,[rdx-0x6b]
   1400502ae:	hlt    
   1400502af:	rex.RX out 0xd5,eax
   1400502b2:	add    al,0x5
   1400502b4:	ins    DWORD PTR es:[rdi],dx
   1400502b5:	xchg   esi,edx
   1400502b7:	adc    al,0xa9
   1400502b9:	add    eax,0xbd69e3b4
   1400502be:	xchg   esp,eax
   1400502bf:	mov    r10b,BYTE PTR [rax]
   1400502c2:	loopne 0x140050276
   1400502c4:	mov    ebp,0xcba586ce
   1400502c9:	int3   
   1400502ca:	and    esp,esi
   1400502cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1400502ce:	pop    rsp
   1400502cf:	add    ebp,DWORD PTR [rbp+0x33]
   1400502d2:	mov    ecx,0x9daed0df
   1400502d7:	out    0xf9,al
   1400502d9:	or     DWORD PTR [rcx-0x1b],ecx
   1400502dc:	mov    edi,0xd9f42e7c
   1400502e1:	mov    BYTE PTR [rbp-0x13],bh
   1400502e4:	stc    
   1400502e5:	sbb    DWORD PTR [rbp-0xa],ecx
   1400502e8:	adc    al,0x0
   1400502ea:	jns    0x1400502da
   1400502ec:	loop   0x14005028c
   1400502ee:	mov    esp,esi
   1400502f0:	push   0xffffffff8f6b57cf
   1400502f5:	mov    edx,0x98269794
   1400502fa:	sub    eax,0xdbe6b7fd
   1400502ff:	pop    rcx
   140050300:	fstp   TBYTE PTR cs:[rsi]
   140050303:	repnz add DWORD PTR [rax],edi
   140050306:	sbb    al,0x7b
   140050308:	mov    eax,0xa02acaae
   14005030d:	(bad)  
   14005030e:	add    al,al
   140050310:	sbb    eax,0x6ebe308a
   140050315:	loopne 0x1400502e4
   140050317:	adc    BYTE PTR [rcx+riz*4],dh
   14005031a:	fist   WORD PTR [rax]
   14005031c:	rex.WRB out dx,al
   14005031e:	sub    dh,BYTE PTR [rdi]
   140050320:	int    0xe2
   140050322:	jnp    0x1400502f5
   140050324:	mov    fs,WORD PTR [rdx-0xc509024]
   14005032a:	test   eax,0x3e74520f
   14005032f:	test   al,0xd2
   140050331:	pop    rsp
   140050332:	cmp    eax,0x7b8e3d27
   140050337:	xchg   DWORD PTR [rcx-0x6c925279],edx
   14005033d:	sub    DWORD PTR [rcx-0x6f125c2a],0xffffff9d
   140050344:	pop    rcx
   140050345:	rex.WX
   140050346:	es push rcx
   140050348:	(bad)  
   140050349:	mov    ecx,0xdace6a16
   14005034e:	test   DWORD PTR [rax+0x2152077],eax
   140050354:	mov    dl,0xaf
   140050356:	int    0x25
   140050358:	je     0x140050347
   14005035a:	cs scas eax,DWORD PTR es:[rdi]
   14005035c:	rex.WRB dec QWORD PTR [r11+0x2f]
   140050360:	fiadd  DWORD PTR [rdx+0x6a]
   140050363:	adc    BYTE PTR [rdi+rax*4-0x957a08e],0x75
   14005036b:	(bad)  
   14005036c:	xchg   ebp,eax
   14005036d:	and    eax,0x457cf5d5
   140050372:	push   0x69b4ed6b
   140050377:	jg     0x140050328
   140050379:	pop    rbp
   14005037a:	pop    rsp
   14005037b:	ins    DWORD PTR es:[rdi],dx
   14005037c:	stos   DWORD PTR es:[rdi],eax
   14005037d:	adc    al,0x2a
   14005037f:	sub    ah,cl
   140050381:	xchg   ebp,eax
   140050382:	rex.RB scas eax,DWORD PTR es:[edi]
   140050385:	pop    rdi
   140050386:	cmp    DWORD PTR [rdi+0x46dafd7e],edx
   14005038c:	xchg   ebp,eax
   14005038d:	out    0xe6,eax
   14005038f:	xor    esp,ebx
   140050391:	(bad)  
   140050393:	mov    dh,0xce
   140050395:	fmul   DWORD PTR fs:[rdi+0x47]
   140050399:	movabs ds:0x73f8557c4000062,eax
   1400503a2:	loopne 0x1400503ef
   1400503a4:	xor    al,0xbd
   1400503a6:	xor    al,0x35
   1400503a8:	mov    ?,WORD PTR [rax+0x24]
   1400503ab:	xchg   BYTE PTR [rax+0x24],dl
   1400503ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503af:	sub    eax,0x382e619
   1400503b4:	(bad)  
   1400503b5:	out    dx,al
   1400503b6:	(bad)  
   1400503b7:	cld    
   1400503b8:	jrcxz  0x14005041e
   1400503ba:	jno    0x140050434
   1400503bc:	or     edx,edx
   1400503be:	ret    0x655b
   1400503c1:	xchg   esi,eax
   1400503c2:	or     DWORD PTR [rbx],0x3f
   1400503c5:	fsubr  DWORD PTR [rcx]
   1400503c7:	rex.WB and rax,0x3f7dfb80
   1400503cd:	in     eax,dx
   1400503ce:	in     eax,dx
   1400503cf:	rex.XB (bad) 
   1400503d1:	mov    ebp,0xdfb2daf2
   1400503d6:	outs   dx,BYTE PTR ds:[rsi]
   1400503d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400503d8:	add    BYTE PTR gs:[rax],bh
   1400503db:	xchg   ebx,eax
   1400503dc:	gs shl cl,0xac
   1400503e0:	mov    edi,ecx
   1400503e2:	in     al,0xb3
   1400503e4:	push   rdx
   1400503e5:	xchg   esi,eax
   1400503e6:	test   al,0xa6
   1400503e8:	mov    ch,0x7b
   1400503ea:	or     eax,0xbf235b71
   1400503ef:	pop    QWORD PTR [rbx]
   1400503f1:	mov    ecx,0xa6a0365a
   1400503f6:	jns    0x14005038f
   1400503f8:	rex.WB (bad) 
   1400503fa:	jmp    0x140050459
   1400503fc:	mov    al,0xb3
   1400503fe:	jp     0x140050436
   140050400:	add    ebx,esp
   140050402:	(bad)  
   140050403:	je     0x14005039e
   140050405:	jnp    0x140050469
   140050407:	(bad)  
   140050408:	cwde   
   140050409:	(bad)  [rsi]
   14005040b:	pop    rcx
   14005040c:	rex.B (bad) 
   14005040e:	repnz push rbp
   140050410:	outs   dx,BYTE PTR ds:[rsi]
   140050411:	adc    BYTE PTR [rsi+0xf],cl
   140050414:	(bad)  
   140050415:	jp     0x1400503c7
   140050417:	add    eax,0xad846b46
   14005041c:	adc    ebp,DWORD PTR [rbx]
   14005041e:	jns    0x140050484
   140050420:	rex.XB adc ebx,DWORD PTR [r14-0x56]
   140050424:	mov    al,0x52
   140050426:	test   DWORD PTR [rdx+0x48b955a9],eax
   14005042c:	mov    bh,0x92
   14005042e:	pop    rcx
   14005042f:	push   rdx
   140050430:	pop    rbp
   140050431:	(bad)  
   140050432:	sub    eax,0xbf23f0ab
   140050437:	adc    al,0x9a
   140050439:	(bad)  
   14005043a:	std    
   14005043b:	xchg   ebx,eax
   14005043c:	mov    bh,0x99
   14005043e:	sub    eax,DWORD PTR [rdx]
   140050440:	push   rsp
   140050441:	(bad)  
   140050442:	or     BYTE PTR [rdx+rdx*1-0x5fe31a80],ah
   140050449:	jne    0x1400503f4
   14005044b:	rol    BYTE PTR [rbp+0x11],cl
   14005044e:	shl    dl,cl
   140050450:	mov    esi,0x752def8
   140050455:	or     al,0x46
   140050457:	mov    ecx,0xdf84d4d2
   14005045c:	mov    WORD PTR [rdi-0x1a820631],?
   140050462:	ja     0x14005041e
   140050464:	push   0xfffffffff17000a8
   140050469:	adc    eax,0xed007f00
   14005046e:	fwait
   14005046f:	(bad)  
   140050470:	push   rbx
   140050471:	jrcxz  0x1400504ac
   140050473:	(bad)  
   140050474:	fcmovbe st,st(4)
   140050477:	sar    BYTE PTR [rbx-0x65ed20e5],1
   14005047d:	shl    BYTE PTR [rbx],0xbe
   140050480:	ret    
   140050481:	jae    0x1400504d0
   140050483:	sbb    BYTE PTR [rax],bh
   140050485:	xor    al,0x95
   140050487:	lahf   
   140050488:	out    dx,eax
   140050489:	in     al,0x82
   14005048b:	pop    rax
   14005048c:	xchg   esp,eax
   14005048d:	hlt    
   14005048e:	push   rsp
   14005048f:	and    BYTE PTR [rax],bh
   140050491:	xchg   DWORD PTR [rbx],esi
   140050493:	rex.B jp 0x140050505
   140050496:	(bad)  
   140050497:	movabs ds:0x693c25c151cfc836,al
   1400504a0:	cwde   
   1400504a1:	(bad)  
   1400504a2:	add    DWORD PTR [rip+0x357b6979],0x7133f538        # 0x175806e25
   1400504ac:	xor    DWORD PTR [rsp+rsi*4-0x7e],ecx
   1400504b0:	repnz xchg ebp,eax
   1400504b2:	mov    ah,0xb
   1400504b4:	loop   0x140050508
   1400504b6:	xchg   ebp,eax
   1400504b7:	push   rbp
   1400504b8:	mov    cl,0x99
   1400504ba:	sub    esi,DWORD PTR [rcx]
   1400504bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400504bd:	adc    BYTE PTR [rax],ah
   1400504bf:	(bad)  
   1400504c0:	adc    dl,dh
   1400504c2:	jae    0x1400504bb
   1400504c4:	movabs ds:0xf7a0e7ba56cb1d1b,eax
   1400504cd:	push   rbp
   1400504ce:	(bad)  
   1400504cf:	movabs eax,ds:0xc9a6801ca33e1b20
   1400504d8:	xor    al,0x82
   1400504da:	jae    0x140050496
   1400504dc:	iret   
   1400504dd:	cmc    
   1400504de:	movsxd ebp,DWORD PTR [rax+0x709c685]
   1400504e4:	sub    cl,bh
   1400504e6:	or     DWORD PTR [rcx+0x14aee688],ecx
   1400504ec:	loopne 0x1400504c1
   1400504ee:	cmp    DWORD PTR [rsi+riz*2+0x7e],0x59
   1400504f3:	fist   DWORD PTR [rdi+0x5a]
   1400504f6:	lods   al,BYTE PTR ds:[rsi]
   1400504f7:	cmp    al,0x28
   1400504f9:	sub    DWORD PTR [rax+riz*1],ecx
   1400504fc:	leave  
   1400504fd:	rex.WRB add rax,0xffffffff862c110f
   140050503:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050504:	(bad)  
   140050505:	(bad)  
   140050506:	pushf  
   140050507:	movabs eax,ds:0x9ef41fecccf72df5
   140050510:	leave  
   140050511:	rex.WR stc 
   140050513:	leave  
   140050514:	add    eax,0xd15e4ed2
   140050519:	hlt    
   14005051a:	dec    DWORD PTR [rdx+0x6826632d]
   140050520:	clc    
   140050521:	cli    
   140050522:	pop    rsp
   140050523:	mov    ecx,0x3394cf23
   140050528:	pop    rbp
   140050529:	fwait
   14005052a:	jg     0x140050536
   14005052c:	loopne 0x1400504c1
   14005052e:	jp     0x14005054e
   140050530:	(bad)  
   140050531:	xchg   edi,eax
   140050532:	adc    BYTE PTR [rdx+0x2ace95c4],cl
   140050538:	and    bh,cl
   14005053a:	fs (bad) 
   14005053d:	shl    BYTE PTR [rbx],1
   14005053f:	loopne 0x140050535
   140050541:	xlat   BYTE PTR ds:[rbx]
   140050542:	(bad)  
   140050543:	mov    ecx,0x96f1aaf7
   140050548:	fidiv  WORD PTR [rsi-0x48adcc12]
   14005054e:	push   rdx
   14005054f:	xchg   BYTE PTR [rcx+rdi*8-0x59],al
   140050553:	jge    0x14005054a
   140050555:	fdivr  QWORD PTR [rbx-0x550b60f8]
   14005055b:	rex.RXB or r13b,BYTE PTR [r8]
   14005055e:	in     al,0x15
   140050560:	sar    DWORD PTR [rdi-0xd],0xde
   140050564:	js     0x140050509
   140050566:	add    DWORD PTR [rdx-0x42],ecx
   140050569:	jb     0x140050599
   14005056b:	(bad)  
   14005056c:	(bad)  
   14005056d:	in     al,dx
   14005056e:	push   rdi
   14005056f:	mov    ebx,0x7df9aa40
   140050574:	mov    bh,ch
   140050576:	in     al,0x49
   140050578:	(bad)  
   140050579:	rex.WX
   14005057a:	bnd jae 0x1400505c8
   14005057d:	sahf   
   14005057e:	xchg   esi,eax
   14005057f:	pop    rsi
   140050580:	rex.WB fcmovnu st,st(3)
   140050583:	xor    al,0x3f
   140050585:	sar    DWORD PTR [rdx+rbp*2-0x4deaaa7],1
   14005058c:	(bad)  
   14005058d:	sub    ecx,DWORD PTR [rdi+0x4b684a85]
   140050593:	jge    0x1400505d7
   140050595:	loopne 0x1400505ff
   140050597:	test   BYTE PTR [rdi-0x53067f2a],dl
   14005059d:	test   dh,dh
   14005059f:	(bad)  
   1400505a0:	cmp    esp,esp
   1400505a2:	sbb    bl,cl
   1400505a4:	in     eax,dx
   1400505a5:	jne    0x140050562
   1400505a7:	cdq    
   1400505a8:	jb     0x14005052e
   1400505aa:	xchg   DWORD PTR [rcx-0x3658107e],ebp
   1400505b0:	scas   eax,DWORD PTR es:[rdi]
   1400505b1:	sbb    al,bl
   1400505b3:	xlat   BYTE PTR ds:[rbx]
   1400505b4:	(bad)  
   1400505b5:	(bad)  
   1400505b6:	retf   
   1400505b7:	cwde   
   1400505b8:	or     DWORD PTR [rsi+0x65],esp
   1400505bb:	cmp    DWORD PTR [rsi-0x21986e24],0x9e6d74cc
   1400505c5:	add    BYTE PTR [rax+0x25],dh
   1400505c8:	rex.WRB out 0xe5,eax
   1400505cb:	adc    bl,BYTE PTR [rax]
   1400505cd:	movsxd ebp,edx
   1400505cf:	ror    al,cl
   1400505d1:	(bad)  
   1400505d2:	push   0x42c0e9ce
   1400505d7:	cmp    edx,DWORD PTR [rdx+0x5030bb3c]
   1400505dd:	stc    
   1400505de:	movabs eax,ds:0x27c965a81969040a
   1400505e7:	cmp    ah,al
   1400505e9:	rex.XB
   1400505ea:	lock push rsi
   1400505ec:	leave  
   1400505ed:	(bad)  
   1400505ee:	in     eax,0xb4
   1400505f0:	loope  0x14005062b
   1400505f2:	sub    ch,BYTE PTR [rax]
   1400505f4:	fsubr  QWORD PTR [rbx+rcx*4-0x57]
   1400505f8:	sub    eax,0x3065e0db
   1400505fd:	xor    eax,0x39403cc7
   140050602:	(bad)  
   140050603:	mov    esi,0xc22e94c3
   140050608:	rex.WB mov r14b,0x9a
   14005060b:	outs   dx,BYTE PTR ds:[rsi]
   14005060c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005060d:	cdq    
   14005060e:	retf   0xffdf
   140050611:	jl     0x14005065f
   140050613:	mov    al,0x88
   140050615:	stos   DWORD PTR es:[rdi],eax
   140050616:	jg     0x14005062c
   140050618:	int    0xa5
   14005061a:	or     BYTE PTR [rbx],al
   14005061c:	rex.W
   14005061d:	rex.X sbb esp,eax
   140050620:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050621:	ficom  DWORD PTR [rsp+rax*4]
   140050624:	int3   
   140050625:	fistp  WORD PTR fs:[rdi+0x0]
   140050629:	xchg   esp,eax
   14005062a:	pop    rbp
   14005062b:	repz popf 
   14005062d:	or     BYTE PTR [rsi],cl
   14005062f:	lods   eax,DWORD PTR ds:[rsi]
   140050630:	mov    WORD PTR [rdx+0x19],fs
   140050633:	push   rax
   140050634:	sub    eax,0x7214116e
   140050639:	sbb    ecx,DWORD PTR [rdx]
   14005063b:	stc    
   14005063c:	in     eax,dx
   14005063d:	rex.X
   14005063e:	rex.X sahf 
   140050640:	push   rdi
   140050641:	and    DWORD PTR [rbp*1-0xd40d7fd],edi
   140050648:	xchg   esi,eax
   140050649:	call   0x16be19245
   14005064e:	(bad)  
   14005064f:	lea    ebp,[rcx-0x1c2c65be]
   140050655:	loopne 0x140050603
   140050657:	out    dx,eax
   140050658:	out    dx,eax
   140050659:	mov    bl,0xc6
   14005065b:	jmp    rdi
   14005065d:	(bad)  
   14005065e:	div    ch
   140050660:	dec    DWORD PTR [rbx-0x67599cd3]
   140050666:	or     eax,0x5fc3c017
   14005066b:	shl    esi,0xa
   14005066e:	rex.WR mov WORD PTR [rcx],fs
   140050671:	adc    al,0x89
   140050673:	mov    edx,0xdce11ed3
   140050678:	rex.R movabs eax,ds:0x6bb23fbcc5e7e975
   140050682:	push   rbx
   140050683:	jrcxz  0x140050622
   140050685:	sub    DWORD PTR [rcx+0x6e],ebp
   140050688:	stos   BYTE PTR es:[rdi],al
   140050689:	mov    eax,0xdf77ee97
   14005068e:	mov    ecx,0x3df90d43
   140050693:	js     0x1400506de
   140050695:	adc    eax,0xccf74fcf
   14005069a:	jae    0x14005061c
   14005069c:	leave  
   14005069d:	outs   dx,DWORD PTR ds:[rsi]
   14005069e:	rol    DWORD PTR [rbx+0x79],1
   1400506a1:	data16 loop 0x1400506cf
   1400506a4:	xor    eax,0xb6c3a735
   1400506a9:	and    esp,DWORD PTR [rcx+0x24]
   1400506ac:	or     edi,DWORD PTR [rdi-0x15006e7e]
   1400506b2:	push   rbp
   1400506b3:	xlat   BYTE PTR ds:[rbx]
   1400506b4:	mov    dh,0xd
   1400506b6:	test   DWORD PTR [rdx],0xf35038a9
   1400506bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400506bd:	jnp    0x140050683
   1400506bf:	call   0x17c9070e5
   1400506c4:	and    ch,BYTE PTR [rax]
   1400506c6:	leave  
   1400506c7:	mov    edx,0x72428000
   1400506cc:	push   0x9
   1400506ce:	clc    
   1400506cf:	imul   edi,DWORD PTR [rbp-0x51],0x1e
   1400506d3:	(bad)  
   1400506d4:	jae    0x140050734
   1400506d6:	mov    BYTE PTR [rsi],dl
   1400506d8:	(bad)  
   1400506d9:	adc    bl,bl
   1400506db:	sub    eax,0x420b5f03
   1400506e0:	leave  
   1400506e1:	sub    edi,0x71
   1400506e4:	sub    bh,cl
   1400506e6:	cmp    eax,0x81af4219
   1400506eb:	mov    ebp,DWORD PTR [rbx-0x1a]
   1400506ee:	hlt    
   1400506ef:	fucompp 
   1400506f1:	scas   eax,DWORD PTR es:[rdi]
   1400506f2:	mov    esp,0xd37dda4b
   1400506f7:	mov    ah,0x3d
   1400506f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400506fb:	and    eax,0xa622a5ca
   140050700:	(bad)  
   140050701:	jge    0x140050762
   140050703:	idiv   cl
   140050705:	sub    ebp,ebx
   140050707:	rex.B or eax,0xddadf4c0
   14005070d:	sbb    dl,al
   14005070f:	mov    bl,0xa1
   140050711:	outs   dx,DWORD PTR ds:[rsi]
   140050712:	sub    DWORD PTR [rax],eax
   140050714:	ret    
   140050715:	ins    BYTE PTR es:[rdi],dx
   140050716:	(bad)  
   140050717:	movabs eax,ds:0x841dcc602d4de230
   140050720:	ror    ch,1
   140050722:	outs   dx,BYTE PTR ds:[rsi]
   140050723:	gs (bad) 
   140050726:	adc    cl,BYTE PTR [rax+0x49]
   140050729:	push   0x4e
   14005072b:	div    BYTE PTR [rcx+0xa]
   14005072e:	fwait
   14005072f:	xchg   ebx,eax
   140050730:	jl     0x140050752
   140050732:	sub    eax,0x30995404
   140050737:	add    al,0xad
   140050739:	mov    esp,0xbe910265
   14005073e:	ins    DWORD PTR es:[rdi],dx
   14005073f:	popf   
   140050740:	sbb    BYTE PTR [rdx+rbx*8+0x68],al
   140050744:	lahf   
   140050745:	xor    BYTE PTR [rbx+rcx*2],al
   140050748:	(bad)  
   140050749:	ins    BYTE PTR es:[rdi],dx
   14005074a:	adc    edx,0x7e
   14005074d:	idiv   DWORD PTR [rsi+0x6ea76bc8]
   140050753:	xchg   ecx,eax
   140050754:	mov    eax,0x44f58a29
   140050759:	outs   dx,DWORD PTR ds:[rsi]
   14005075a:	movabs eax,ds:0x9a481547f130d8e1
   140050763:	mul    bh
   140050765:	(bad)  
   140050766:	xchg   al,cl
   140050768:	fwait
   140050769:	cs icebp 
   14005076b:	mov    ebp,0x32b04974
   140050770:	shr    eax,1
   140050772:	mov    al,0x92
   140050774:	shl    DWORD PTR [rbx],cl
   140050776:	ins    DWORD PTR es:[rdi],dx
   140050777:	xor    eax,0x35a42bc2
   14005077c:	shl    BYTE PTR [rcx],cl
   14005077e:	mov    ah,0xbf
   140050780:	enter  0xab2b,0xed
   140050784:	repz retf 0x42a8
   140050788:	or     cl,BYTE PTR [rdx-0x5]
   14005078b:	cmp    al,0x2
   14005078d:	rcr    DWORD PTR [rax],cl
   14005078f:	sbb    ah,0x26
   140050792:	add    al,BYTE PTR [rax-0x24]
   140050795:	sub    DWORD PTR cs:[rsi-0x28ad8273],eax
   14005079c:	(bad)  
   14005079d:	fsub   DWORD PTR [rax+0x7abde7df]
   1400507a3:	sbb    bl,BYTE PTR [rip+0xffffffffd598a3f8]        # 0x1159daba1
   1400507a9:	xor    eax,0x9e4773ba
   1400507ae:	sbb    ebp,ecx
   1400507b0:	je     0x14005081f
   1400507b2:	(bad)  
   1400507b3:	xor    eax,0x523f500
   1400507b8:	pushf  
   1400507b9:	adc    DWORD PTR [rdi-0x36b8f7b5],0xffffffec
   1400507c0:	rex
   1400507c1:	rex.WXB out 0x15,eax
   1400507c4:	popf   
   1400507c5:	pop    rsi
   1400507c6:	jmp    0x15015a296
   1400507cb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400507cc:	and    DWORD PTR [rip+0xffffffff9a965a98],esp        # 0xda9b626a
   1400507d2:	jmp    QWORD PTR [rdx-0x55f9a586]
   1400507d8:	(bad)  
   1400507da:	(bad)  
   1400507db:	ss stos DWORD PTR es:[rdi],eax
   1400507dd:	(bad)  
   1400507de:	pop    rbx
   1400507df:	ins    DWORD PTR es:[rdi],dx
   1400507e0:	movabs ds:0x4a9a46e72ddfc7ac,eax
   1400507e9:	push   rcx
   1400507ea:	scas   al,BYTE PTR es:[rdi]
   1400507eb:	std    
   1400507ec:	mov    edx,0xdce289f5
   1400507f1:	sub    BYTE PTR [rbx+0x3b],ch
   1400507f4:	pop    rsi
   1400507f5:	sahf   
   1400507f6:	rex.WX push 0x31
   1400507f9:	pop    rdx
   1400507fa:	lods   eax,DWORD PTR ds:[rsi]
   1400507fb:	scas   al,BYTE PTR es:[rdi]
   1400507fc:	add    DWORD PTR [rcx+rbx*1],eax
   1400507ff:	(bad)  
   140050800:	(bad)  
   140050801:	xchg   edi,eax
   140050802:	xchg   DWORD PTR [rbx],ebp
   140050804:	(bad)  
   140050805:	push   rbx
   140050806:	or     eax,0xd86235c8
   14005080b:	rex.WB out dx,eax
   14005080d:	stos   DWORD PTR es:[rdi],eax
   14005080e:	std    
   14005080f:	rex.RB xchg r13d,eax
   140050811:	(bad)  
   140050812:	mov    ah,0xb8
   140050814:	(bad)  
   140050815:	xor    eax,0xdb33b9c0
   14005081a:	iret   
   14005081b:	imul   ecx,DWORD PTR [rdi+0x5cbbce52],0xffffff8d
   140050822:	cld    
   140050823:	pop    rdx
   140050824:	cmp    esp,DWORD PTR [rip+0x60cba979]        # 0x1a0d0b1a3
   14005082a:	(bad)  
   14005082b:	(bad)  
   14005082c:	std    
   14005082d:	mov    ch,0xeb
   14005082f:	jae    0x140050816
   140050831:	data16 sbb ah,ah
   140050834:	xlat   BYTE PTR ds:[rbx]
   140050835:	xor    DWORD PTR [rbp-0x38],edx
   140050838:	stc    
   140050839:	mov    ebp,0xc0d37b41
   14005083e:	mov    esi,0x4e95ddfe
   140050843:	xor    DWORD PTR [rbx-0x34],edx
   140050846:	cli    
   140050847:	and    bh,ch
   140050849:	mov    ecx,0x36fccf23
   14005084e:	shl    DWORD PTR [rbp-0xc7fd287],cl
   140050854:	push   0x80f13ba
   140050859:	rex.WB push r15
   14005085b:	add    BYTE PTR [rax],dh
   14005085d:	test   BYTE PTR [rax-0x59afdfab],al
   140050863:	js     0x1400507ff
   140050865:	(bad)  [rbp-0x51]
   140050868:	and    al,0x4
   14005086a:	in     al,0x1e
   14005086c:	adc    eax,0x2a755e2e
   140050871:	std    
   140050872:	cdq    
   140050873:	neg    BYTE PTR [rbx-0x17]
   140050876:	sub    DWORD PTR [rbx+0x600d7465],ebx
   14005087c:	cmp    ecx,DWORD PTR [rdx+0x15]
   14005087f:	or     al,0xfe
   140050881:	xchg   ebp,eax
   140050882:	cdq    
   140050883:	and    al,0xd7
   140050885:	mov    bh,0x3d
   140050887:	ror    BYTE PTR [r12+rsi*2+0x49375f6f],0xed
   140050890:	in     eax,0xe5
   140050892:	outs   dx,BYTE PTR ds:[rsi]
   140050893:	adc    eax,0xa8e3d3c2
   140050898:	imul   ebx,DWORD PTR [rbp-0x6b],0xf55d32f8
   14005089f:	loope  0x1400508a2
   1400508a1:	cmp    dl,BYTE PTR [rip+0xffffffffec002ed8]        # 0x12c05377f
   1400508a7:	push   rsi
   1400508a8:	or     DWORD PTR [rcx-0xc],0xa
   1400508ac:	ficomp DWORD PTR [rdi-0x35]
   1400508af:	movabs ds:0x6d1114d77fcdd76d,eax
   1400508b8:	xlat   BYTE PTR ds:[rbx]
   1400508b9:	lahf   
   1400508ba:	mov    DWORD PTR [rbp+0x18],edx
   1400508bd:	call   0x13907bcb9
   1400508c2:	jmp    0x13f011eb8
   1400508c7:	xchg   DWORD PTR [rsi],eax
   1400508c9:	div    ch
   1400508cb:	jmp    QWORD PTR [rbp-0x676e5cd3]
   1400508d1:	int    0x18
   1400508d3:	add    ch,al
   1400508d5:	in     eax,dx
   1400508d6:	add    BYTE PTR [rsi],ch
   1400508d8:	xchg   BYTE PTR [rcx],dh
   1400508da:	xor    al,0x38
   1400508dc:	mov    dl,BYTE PTR [rax+0x38]
   1400508df:	movabs ds:0xe700d8cb9c0f010a,al
   1400508e8:	or     BYTE PTR [rax],0x10
   1400508eb:	cmp    bh,BYTE PTR [rdi-0x5f]
   1400508ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400508ef:	jae    0x1400508df
   1400508f1:	call   0x12ff4b43d
   1400508f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400508f7:	jnp    0x1400508c8
   1400508f9:	rcr    BYTE PTR [rbx],0xa9
   1400508fc:	(bad)  
   1400508fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400508fe:	scas   eax,DWORD PTR es:[rdi]
   1400508ff:	xchg   ebx,eax
   140050900:	pop    rbp
   140050901:	and    edi,0x481eb0da
   140050907:	ja     0x1400508e9
   140050909:	jo     0x1400508d1
   14005090b:	jmp    0x160c66295
   140050910:	(bad)  
   140050911:	test   al,0xca
   140050913:	adc    eax,0x32e41928
   140050918:	rex.R jge 0x1400508b7
   14005091b:	(bad)  
   14005091c:	and    edx,ebx
   14005091e:	std    
   14005091f:	jg     0x1400508de
   140050921:	stos   DWORD PTR es:[rdi],eax
   140050922:	nop
   140050923:	adc    BYTE PTR [rsi],bh
   140050925:	mov    esi,0xcf488437
   14005092a:	jmp    0x140050981
   14005092c:	(bad)  
   14005092d:	(bad)  
   14005092e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005092f:	mov    ch,0x8f
   140050931:	jbe    0x140050985
   140050933:	mov    ebp,0xadbed363
   140050938:	or     BYTE PTR [rax-0x4840ca26],al
   14005093e:	pop    rdi
   14005093f:	(bad)  
   140050940:	out    dx,eax
   140050941:	rex.WRX test QWORD PTR [rsi+0x45],r8
   140050945:	xchg   ebx,eax
   140050946:	pop    rdi
   140050947:	scas   eax,DWORD PTR es:[rdi]
   140050948:	fwait
   140050949:	and    ecx,DWORD PTR ds:[rbx+0x4ed68060]
   140050950:	and    DWORD PTR [rax],edx
   140050952:	cmp    al,0xc1
   140050954:	and    al,0x4d
   140050956:	(bad)  
   140050957:	rex.RB (bad) 
   140050959:	rcr    bl,cl
   14005095b:	ret    0x9dd5
   14005095e:	retf   0x80d6
   140050961:	mov    esp,0x7292a293
   140050966:	imul   ebp,DWORD PTR [rdx+0x7b7fdf92],0x18cdd50d
   140050970:	ss cmp eax,0x8df02b34
   140050976:	(bad)  
   140050977:	xor    BYTE PTR [rsi+0x7e45aa58],al
   14005097d:	cmp    eax,0x6bf357d5
   140050982:	sti    
   140050983:	ficom  DWORD PTR [rax-0x5e]
   140050986:	loop   0x1400509af
   140050988:	push   rbx
   140050989:	(bad)  
   14005098b:	push   rbx
   14005098c:	cmc    
   14005098d:	(bad)  
   14005098e:	out    0xf6,eax
   140050990:	cld    
   140050991:	data16 rex.RX (bad) 
   140050994:	and    eax,0x7c3b5efb
   140050999:	jl     0x140050a13
   14005099b:	fistp  WORD PTR [rax+0x623b8800]
   1400509a1:	mov    edx,DWORD PTR [rip+0x21d25980]        # 0x161d76327
   1400509a7:	mov    ?,WORD PTR [rbx-0x4e]
   1400509aa:	rex.XB loop 0x1400509e7
   1400509ad:	(bad)  
   1400509ae:	ss test eax,0x8e5691ed
   1400509b4:	sahf   
   1400509b5:	scas   al,BYTE PTR es:[rdi]
   1400509b6:	fcomp  QWORD PTR [rcx+rdi*4+0x49]
   1400509ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400509bb:	or     eax,0x7ddc76b5
   1400509c0:	(bad)  
   1400509c1:	ret    0xb24b
   1400509c4:	mov    edi,DWORD PTR [rdi]
   1400509c6:	(bad)  
   1400509c7:	outs   dx,BYTE PTR ds:[rsi]
   1400509c8:	and    eax,0xdccf73e2
   1400509cd:	(bad)  
   1400509ce:	enter  0x1ce7,0x50
   1400509d2:	xchg   ebp,eax
   1400509d3:	hlt    
   1400509d4:	rcl    BYTE PTR [rdi+rax*4+0x42],cl
   1400509d8:	enter  0x82ca,0x2
   1400509dc:	push   rsi
   1400509dd:	xchg   edx,eax
   1400509de:	xlat   BYTE PTR ds:[rbx]
   1400509df:	rex.RB jle 0x140050972
   1400509e2:	jrcxz  0x140050998
   1400509e4:	jmp    0x1400509f8
   1400509e6:	push   rsi
   1400509e7:	add    esp,edx
   1400509e9:	pop    rdi
   1400509ea:	std    
   1400509eb:	jle    0x14005096d
   1400509ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400509ee:	jmp    0x1400509ca
   1400509f0:	pop    rdi
   1400509f1:	and    eax,0xf993117f
   1400509f6:	and    ebp,ebp
   1400509f8:	mov    esi,0xdfaacc0b
   1400509fd:	rex.WRXB jno 0x1400509ca
   140050a00:	mov    esi,0xf1be5d3
   140050a05:	add    al,al
   140050a07:	retf   
   140050a08:	rex.RB
   140050a09:	addr32 push rbp
   140050a0b:	(bad)  
   140050a0c:	or     al,cl
   140050a0e:	sub    al,0x63
   140050a10:	pop    rdi
   140050a11:	jno    0x1400509c1
   140050a13:	sbb    DWORD PTR [rcx],esp
   140050a15:	lea    ebx,[rbx+0x5a]
   140050a18:	sub    BYTE PTR [rax-0x16],al
   140050a1b:	sbb    bh,BYTE PTR [rax-0x2cca806]
   140050a21:	sub    QWORD PTR [r8-0x4615f4f3],r13
   140050a28:	cli    
   140050a29:	rex.XB jrcxz 0x140050a16
   140050a2c:	(bad)  
   140050a2d:	mov    bh,0xe6
   140050a2f:	test   eax,0x40c14489
   140050a34:	xlat   BYTE PTR ds:[rbx]
   140050a35:	mov    al,0x4e
   140050a37:	xchg   edx,eax
   140050a38:	rex.RX cmp al,0xae
   140050a3b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050a3c:	jmp    0x140050ab7
   140050a3e:	xchg   esi,eax
   140050a3f:	rex.WRX or rsi,r9
   140050a42:	lea    esi,[rsi-0x38d9bb67]
   140050a48:	jp     0x140050ac4
   140050a4a:	shl    DWORD PTR [rbx],cl
   140050a4c:	and    DWORD PTR [rdx+0x623cbcf6],0x1a
   140050a53:	sub    esp,DWORD PTR [rdx+riz*4+0x4e523cc1]
   140050a5a:	nop
   140050a5b:	pop    rdx
   140050a5c:	(bad)  
   140050a5d:	push   rbx
   140050a5e:	pop    rcx
   140050a5f:	movabs ds:0xe72bcbd8703566b,eax
   140050a68:	xchg   ebx,eax
   140050a69:	call   0x131ee8468
   140050a6e:	rex.WRX xchg rdx,rax
   140050a70:	cmp    al,0x4e
   140050a72:	adc    DWORD PTR [rax],ecx
   140050a74:	in     al,0xfc
   140050a76:	jle    0x140050a6f
   140050a78:	xlat   BYTE PTR ds:[rbx]
   140050a79:	jp     0x140050a1a
   140050a7b:	mov    ch,0x6d
   140050a7d:	popf   
   140050a7e:	cld    
   140050a7f:	rex.WX (bad) 
   140050a81:	out    0x98,eax
   140050a83:	sub    cl,BYTE PTR [rax+rdi*8-0x298ca883]
   140050a8a:	std    
   140050a8b:	jle    0x140050a17
   140050a8d:	push   rbx
   140050a8e:	cli    
   140050a8f:	movabs eax,ds:0x101dc702d01e373e
   140050a98:	loopne 0x140050a56
   140050a9a:	mov    WORD PTR [rdx+0x69],?
   140050a9d:	adc    dl,BYTE PTR [rcx]
   140050a9f:	ja     0x140050aa2
   140050aa1:	adc    DWORD PTR [rbp+0x0],eax
   140050aa4:	mov    eax,0xf34580fb
   140050aa9:	sar    DWORD PTR [rbp+0x3d],cl
   140050aac:	push   rdx
   140050aad:	scas   al,BYTE PTR es:[rdi]
   140050aae:	or     DWORD PTR [rcx],eax
   140050ab0:	rex.WB js 0x140050b2d
   140050ab3:	sub    al,0x40
   140050ab5:	leave  
   140050ab6:	push   rax
   140050ab7:	mov    esp,esi
   140050ab9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050aba:	mov    cl,0xca
   140050abc:	scas   al,BYTE PTR es:[rdi]
   140050abd:	sub    al,0xab
   140050abf:	adc    edx,DWORD PTR [rbx+0x39]
   140050ac2:	cmp    QWORD PTR [rbp+rdx*8-0x56],rdx
   140050ac7:	and    al,0x45
   140050ac9:	rex.WXB xchg r14,rax
   140050acb:	(bad)  
   140050acc:	int    0x2d
   140050ace:	rex.XB stc 
   140050ad0:	or     dl,bl
   140050ad2:	mov    ecx,0x5ee64765
   140050ad7:	cmp    edx,edx
   140050ad9:	fldenv [rip+0x3ddadc01]        # 0x17ddfe6e0
   140050adf:	shl    eax,0xcd
   140050ae2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ae3:	sbb    esp,0x76
   140050ae6:	mul    BYTE PTR [rip+0xffffffffb6cc6199]        # 0xf6d16c85
   140050aec:	jrcxz  0x140050aa0
   140050aee:	sbb    al,0x25
   140050af0:	stos   BYTE PTR es:[rdi],al
   140050af1:	rex.RB
   140050af2:	rex.WXB
   140050af3:	rex.WXB push r10
   140050af5:	push   rbp
   140050af6:	rcl    dl,cl
   140050af8:	ss jae 0x140050b1a
   140050afb:	xchg   BYTE PTR [rax],ah
   140050afd:	push   rcx
   140050afe:	loop   0x140050b01
   140050b00:	mov    dh,0x74
   140050b02:	in     eax,0x3a
   140050b04:	push   rbp
   140050b05:	lea    ebp,[rbx+0x2b]
   140050b08:	addr32 xchg edx,eax
   140050b0a:	(bad)  
   140050b0b:	xor    cl,BYTE PTR [rip+0xffffffff90abf350]        # 0xd0b0fe61
   140050b11:	pop    rdi
   140050b12:	(bad)  
   140050b13:	mov    ebx,0x4bb4fc8d
   140050b18:	rex.WR out 0x87,al
   140050b1b:	push   rax
   140050b1c:	cs pop rcx
   140050b1e:	(bad)  
   140050b1f:	clc    
   140050b20:	mov    eax,0xff5f6077
   140050b25:	pop    rdi
   140050b26:	(bad)  [rdx]
   140050b28:	or     sp,WORD PTR [rdi-0xebff9d6]
   140050b2f:	pop    rcx
   140050b30:	add    BYTE PTR [rbx-0x5f],cl
   140050b33:	jge    0x140050b9f
   140050b35:	mov    esp,0xb2622a5c
   140050b3a:	nop
   140050b3b:	rex.XB sub al,0x99
   140050b3e:	jno    0x140050bae
   140050b40:	sub    dl,BYTE PTR [rip+0xffffffffe7139c02]        # 0x12718a748
   140050b46:	push   rbp
   140050b47:	outs   dx,BYTE PTR ds:[rsi]
   140050b48:	jae    0x140050aca
   140050b4a:	int3   
   140050b4b:	(bad)  
   140050b4c:	out    0xca,eax
   140050b4e:	pop    rsp
   140050b4f:	jns    0x140050b5f
   140050b51:	stos   BYTE PTR es:[edi],al
   140050b53:	lods   al,BYTE PTR ds:[rsi]
   140050b54:	(bad)  
   140050b55:	(bad)  
   140050b56:	add    BYTE PTR [rax+0x62],ah
   140050b59:	cli    
   140050b5a:	lods   al,BYTE PTR ds:[rsi]
   140050b5b:	js     0x140050ba9
   140050b5d:	fisub  WORD PTR [rcx-0x54af2c2]
   140050b63:	fsubp  st(6),st
   140050b65:	mov    ecx,0x40469c04
   140050b6a:	mov    BYTE PTR [rdx],al
   140050b6c:	out    dx,al
   140050b6d:	(bad)  
   140050b6e:	add    al,0xb8
   140050b70:	imul   ebx,DWORD PTR [rbp+0x38],0x73
   140050b74:	stc    
   140050b75:	fnsave [rbx+0x33]
   140050b78:	(bad)  
   140050b79:	mov    gs,WORD PTR [edi-0x339f6ce5]
   140050b80:	popf   
   140050b81:	out    dx,al
   140050b82:	jmp    0x140050bce
   140050b84:	sub    dh,bh
   140050b86:	cmp    BYTE PTR [rcx+0x7af5e4c6],bl
   140050b8c:	jae    0x140050b31
   140050b8e:	mov    ebp,0xb8c80e3c
   140050b93:	mov    BYTE PTR [rdi-0x44],dh
   140050b96:	ja     0x140050bc9
   140050b98:	int3   
   140050b99:	sti    
   140050b9a:	adc    DWORD PTR [rbx-0x61],edx
   140050b9d:	popf   
   140050b9e:	or     esp,DWORD PTR [rdx-0x46]
   140050ba1:	cld    
   140050ba2:	jb     0x140050b37
   140050ba4:	sbb    DWORD PTR [rcx],esp
   140050ba6:	cmp    DWORD PTR [rdi+rsi*1-0x62d988b6],0xffffff9b
   140050bae:	add    DWORD PTR [rsi],esp
   140050bb0:	icebp  
   140050bb1:	mov    BYTE PTR [rax],al
   140050bb3:	xor    cl,BYTE PTR [rax]
   140050bb5:	rex.WB (bad) 
   140050bb7:	not    ebp
   140050bb9:	in     al,0xb2
   140050bbb:	(bad)  
   140050bbc:	cmp    eax,0xb0a6748
   140050bc1:	cdq    
   140050bc2:	out    dx,al
   140050bc3:	sub    ecx,DWORD PTR [rax]
   140050bc5:	push   0x5f92ab1b
   140050bca:	rex.WXB and rdx,r15
   140050bcd:	push   rbx
   140050bce:	xor    edi,ecx
   140050bd0:	rex.WB ja 0x140050b53
   140050bd3:	push   rsi
   140050bd4:	mov    ds,WORD PTR [rsi]
   140050bd6:	(bad)  
   140050bd7:	pop    rcx
   140050bd8:	enter  0x91f9,0xff
   140050bdc:	and    DWORD PTR [rax],edi
   140050bde:	fdivr  QWORD PTR [rax]
   140050be0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050be1:	cmp    BYTE PTR [rbp+0x31],ah
   140050be4:	add    BYTE PTR [rdx+0x497d0d9e],cl
   140050bea:	add    BYTE PTR [rdi],ch
   140050bec:	rex or ecx,DWORD PTR [rdx]
   140050bef:	add    cl,dh
   140050bf1:	(bad)  
   140050bf2:	adc    ah,BYTE PTR [rdx-0x37]
   140050bf5:	mov    WORD PTR [rbx+0x7404b163],?
   140050bfb:	push   rdi
   140050bfc:	add    BYTE PTR [rax-0x103dfda8],dh
   140050c02:	(bad)  
   140050c03:	mov    cl,0x0
   140050c05:	scas   eax,DWORD PTR es:[rdi]
   140050c06:	or     al,0x93
   140050c08:	test   BYTE PTR [rcx-0x3a],dl
   140050c0b:	fld    TBYTE PTR [rcx+0xb6da16b]
   140050c11:	test   DWORD PTR [rdx-0x75],0x4e3580b
   140050c18:	sahf   
   140050c19:	retf   
   140050c1a:	(bad)  
   140050c1b:	sub    ebp,DWORD PTR [rbx-0x1c]
   140050c1e:	test   eax,0xedaf0971
   140050c23:	fdivp  st(4),st
   140050c25:	or     BYTE PTR [rbx+0x19],bh
   140050c28:	(bad)  
   140050c29:	iret   
   140050c2a:	imul   ebp,DWORD PTR [rsi-0x6f029971],0xffffffbb
   140050c31:	and    ebp,edi
   140050c33:	mov    DWORD PTR [rsi],ecx
   140050c35:	(bad)  
   140050c36:	rex.R sub eax,0xc4ed400b
   140050c3c:	mov    edx,0xafc830e4
   140050c41:	xchg   edx,eax
   140050c42:	pop    rsi
   140050c43:	(bad)  
   140050c44:	ret    
   140050c45:	rex.WB xor rax,0x537dccd5
   140050c4b:	ret    
   140050c4c:	xlat   BYTE PTR ds:[rbx]
   140050c4d:	lods   eax,DWORD PTR ds:[rsi]
   140050c4e:	cmc    
   140050c4f:	sub    eax,0xf91f8696
   140050c54:	mov    ebp,0xafc8fd3a
   140050c59:	(bad)  
   140050c5a:	or     BYTE PTR [rbx+rdi*8+0x62df9061],dh
   140050c61:	or     eax,ecx
   140050c63:	pop    rbx
   140050c64:	sub    cl,cl
   140050c66:	out    dx,eax
   140050c67:	repz xchg edx,eax
   140050c69:	iret   
   140050c6a:	add    BYTE PTR [r11+0x1b],bpl
   140050c6e:	cmc    
   140050c6f:	mov    ?,WORD PTR [rdi+0x3d]
   140050c72:	cwde   
   140050c73:	adc    eax,DWORD PTR [rcx]
   140050c75:	add    BYTE PTR [rax],al
   140050c77:	cmp    eax,0x5afa1b
   140050c7c:	or     al,0xda
   140050c7e:	repnz (bad) 
   140050c80:	leave  
   140050c81:	mov    WORD PTR [rbx+riz*1+0x403c4350],ds
   140050c88:	out    dx,al
   140050c89:	jp     0x140050ca8
   140050c8b:	fbstp  TBYTE PTR [rdx]
   140050c8d:	cmp    DWORD PTR [rsi-0x5c],eax
   140050c90:	xchg   ebx,eax
   140050c91:	jl     0x140050c2d
   140050c93:	rex.RX or BYTE PTR [rsi-0x1229a16d],r12b
   140050c9a:	adc    ebx,DWORD PTR [rax]
   140050c9c:	rex.R sub eax,0x4841e8c7
   140050ca2:	cmc    
   140050ca3:	pushf  
   140050ca4:	stos   BYTE PTR es:[rdi],al
   140050ca5:	nop
   140050ca6:	shr    bl,1
   140050ca8:	mov    ch,0x9
   140050caa:	xor    esi,DWORD PTR [rdi-0x27410b13]
   140050cb0:	(bad)  
   140050cb1:	sub    BYTE PTR [rdx-0x6911afd0],cl
   140050cb7:	imul   QWORD PTR [rsp+rbx*1]
   140050cbb:	movabs ds:0xbe49d3d7010421f6,al
   140050cc4:	rex.X sbb BYTE PTR [rdx-0x5616fa8b],spl
   140050ccb:	fild   DWORD PTR [rcx+0x49]
   140050cce:	pop    rsp
   140050ccf:	popf   
   140050cd0:	clc    
   140050cd1:	push   0xffffffffffffff80
   140050cd3:	rex.WRX xlat BYTE PTR ds:[rbx]
   140050cd5:	sar    dh,cl
   140050cd7:	pop    rdx
   140050cd8:	fisttp WORD PTR [rdi+0x30]
   140050cdb:	push   rax
   140050cdc:	mov    eax,DWORD PTR [rdx-0x49]
   140050cdf:	cs mov esp,0xfc95af4b
   140050ce5:	ss (bad) 
   140050ce7:	sub    BYTE PTR [rdi-0x6b],ch
   140050cea:	(bad)  
   140050ceb:	out    0xa5,eax
   140050ced:	xchg   ebp,eax
   140050cee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050cef:	(bad)  
   140050cf0:	xor    DWORD PTR [rcx-0x50],ebx
   140050cf3:	mov    esi,0xad0003e4
   140050cf8:	add    edi,ebx
   140050cfa:	cli    
   140050cfb:	xchg   esp,edi
   140050cfd:	xor    ah,BYTE PTR [rdi+0x13]
   140050d00:	jae    0x140050d28
   140050d02:	add    BYTE PTR [rax],al
   140050d04:	movabs al,ds:0xf51416d0d9df4367
   140050d0d:	loopne 0x140050d3a
   140050d0f:	add    al,0xf4
   140050d11:	jge    0x140050cae
   140050d13:	adc    al,dh
   140050d15:	retf   0x9618
   140050d18:	xor    BYTE PTR [rbx+0x2b53a4af],0x40
   140050d1f:	mov    bl,0x6
   140050d21:	cld    
   140050d22:	enter  0x13ac,0xdd
   140050d26:	and    al,0x35
   140050d28:	leave  
   140050d29:	scas   eax,DWORD PTR es:[rdi]
   140050d2a:	rex.WB
   140050d2b:	repz fwait
   140050d2d:	(bad)  
   140050d2e:	mov    BYTE PTR [rcx+0x7a],cl
   140050d31:	outs   dx,DWORD PTR ds:[rsi]
   140050d32:	(bad)  
   140050d34:	(bad)  
   140050d35:	(bad)  
   140050d36:	mov    cl,0x6e
   140050d38:	mov    esi,0x30743f7e
   140050d3d:	movsxd eax,DWORD PTR [rbx]
   140050d3f:	rex.X or al,0x48
   140050d42:	out    0x1b,al
   140050d44:	sbb    eax,0x9a662bda
   140050d49:	cld    
   140050d4a:	xchg   edx,eax
   140050d4b:	cmp    BYTE PTR [rdx-0x5555d287],cl
   140050d51:	(bad)  
   140050d52:	clc    
   140050d53:	ss jb  0x140050d2c
   140050d56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050d57:	cmc    
   140050d58:	xor    eax,0x8884daa2
   140050d5d:	scas   eax,DWORD PTR es:[rdi]
   140050d5e:	cdq    
   140050d5f:	psubusw mm5,QWORD PTR [rsi]
   140050d62:	sub    edi,ecx
   140050d64:	lea    esi,[rdx-0xc]
   140050d67:	pop    rsi
   140050d68:	adc    dl,dh
   140050d6a:	imul   esi,edi,0xffffffab
   140050d6d:	rex.RX
   140050d6e:	repnz lahf 
   140050d70:	xor    esi,DWORD PTR [rax-0x40ba0051]
   140050d76:	int3   
   140050d77:	fld    st(6)
   140050d79:	pushf  
   140050d7a:	or     al,BYTE PTR [rax]
   140050d7c:	add    al,ch
   140050d7e:	fnop   
   140050d80:	mov    bh,0x9
   140050d82:	shl    BYTE PTR [rbx],0xb6
   140050d85:	mov    esp,0x92010886
   140050d8a:	pop    rdi
   140050d8b:	push   rbp
   140050d8c:	cmp    BYTE PTR [rax],ch
   140050d8e:	in     eax,0x25
   140050d90:	movabs r13,0x2bdd33c03057d63
   140050d9a:	mov    ecx,0x6f4082ad
   140050d9f:	stos   DWORD PTR es:[rdi],eax
   140050da0:	sub    al,0xef
   140050da2:	cmp    ebx,ebp
   140050da4:	xchg   edi,eax
   140050da5:	(bad)  
   140050da6:	movabs ds:0x623efaeee3d76be4,eax
   140050daf:	xchg   edx,eax
   140050db0:	int3   
   140050db1:	cwde   
   140050db2:	ss or  al,0x28
   140050db5:	cmp    dh,BYTE PTR [rbp+0x32cbf34d]
   140050dbb:	jbe    0x140050e10
   140050dbd:	fbld   TBYTE PTR [rdx-0x2a6aba03]
   140050dc3:	std    
   140050dc4:	jnp    0x140050e1f
   140050dc6:	lahf   
   140050dc7:	cli    
   140050dc8:	jmp    0x140050e31
   140050dca:	shl    BYTE PTR [rbx+0x6b],cl
   140050dcd:	pop    rbx
   140050dce:	sub    al,0x42
   140050dd0:	or     DWORD PTR [rax],0xe810451a
   140050dd6:	push   rsi
   140050dd7:	mov    cl,BYTE PTR [rdi]
   140050dd9:	stc    
   140050dda:	ins    DWORD PTR es:[rdi],dx
   140050ddb:	fcmovu st,st(5)
   140050ddd:	out    0x6,al
   140050ddf:	mov    BYTE PTR [rbp+0x77],cl
   140050de2:	mov    edi,0xf37f90a
   140050de7:	in     al,dx
   140050de8:	jmp    0x140050dc9
   140050dea:	jrcxz  0x140050d83
   140050dec:	jns    0x140050e18
   140050dee:	jo     0x140050e3a
   140050df0:	add    DWORD PTR [r8+r14*2-0x21],r13d
   140050df5:	sbb    al,0x7c
   140050df7:	sbb    eax,0x5e7af5c0
   140050dfc:	test   eax,0x28508938
   140050e01:	pop    rsp
   140050e02:	xlat   BYTE PTR ds:[rbx]
   140050e03:	sbb    al,0x1
   140050e05:	nop
   140050e06:	jge    0x140050e43
   140050e08:	stc    
   140050e09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050e0a:	(bad)  
   140050e0b:	mov    ch,0x93
   140050e0d:	xchg   BYTE PTR [rax+0x2d899a02],bh
   140050e13:	stos   BYTE PTR es:[rdi],al
   140050e14:	(bad)  
   140050e15:	add    BYTE PTR [rsi+0x79],bl
   140050e18:	pop    rdx
   140050e19:	scas   al,BYTE PTR es:[rdi]
   140050e1a:	fstp   DWORD PTR [rcx-0x64]
   140050e1d:	(bad)  
   140050e1e:	mov    dl,0xaf
   140050e20:	xchg   ecx,eax
   140050e21:	mov    cs,WORD PTR [rax-0x35]
   140050e24:	sbb    esp,ebp
   140050e26:	fdivr  QWORD PTR [rbp-0x51]
   140050e29:	jae    0x140050e85
   140050e2b:	xor    al,0x1d
   140050e2d:	std    
   140050e2e:	(bad)  
   140050e2f:	mov    ch,0xaa
   140050e31:	cli    
   140050e32:	fistp  QWORD PTR [rbx]
   140050e34:	sbb    DWORD PTR [rdx-0x4addb6d2],0x33321cb9
   140050e3e:	retf   
   140050e3f:	shl    ebx,cl
   140050e41:	adc    al,0xf2
   140050e43:	or     esp,DWORD PTR [rdx]
   140050e45:	cli    
   140050e46:	imul   ebx,DWORD PTR [rbx-0x71],0x9135def0
   140050e4d:	xor    al,0xfd
   140050e4f:	(bad)  
   140050e50:	enter  0x1835,0x82
   140050e54:	rex xchg esp,eax
   140050e56:	movabs eax,ds:0xf919c72809d48002
   140050e5f:	push   rdx
   140050e60:	pop    rbp
   140050e61:	fcmovne st,st(1)
   140050e63:	(bad)  
   140050e64:	sahf   
   140050e65:	mov    ch,BYTE PTR [rsi]
   140050e67:	sub    al,0xe8
   140050e69:	repz pushf 
   140050e6b:	xor    ecx,edi
   140050e6d:	sti    
   140050e6e:	(bad)  
   140050e6f:	div    ch
   140050e71:	inc    eax
   140050e73:	(bad)  
   140050e74:	repz push rsp
   140050e76:	(bad)  
   140050e77:	(bad)  
   140050e78:	add    eax,0x8ee40000
   140050e7d:	cmp    al,0xb3
   140050e7f:	out    0xd4,eax
   140050e81:	or     BYTE PTR [rcx],al
   140050e83:	mov    bh,0xb4
   140050e85:	out    0x16,al
   140050e87:	sbb    eax,DWORD PTR [rdi+rsi*4+0x5fb4c754]
   140050e8e:	add    DWORD PTR [rbx+0x2b6034e6],ecx
   140050e94:	movsxd ebp,DWORD PTR [rax+0x1a]
   140050e97:	fiadd  DWORD PTR [rcx]
   140050e99:	and    ecx,ecx
   140050e9b:	push   0x25
   140050e9d:	xchg   edx,eax
   140050e9e:	sahf   
   140050e9f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050ea0:	dec    BYTE PTR [rdx-0x76009286]
   140050ea6:	xor    BYTE PTR [rcx-0x7a],dl
   140050ea9:	fild   WORD PTR [rsi+rsi*1+0x5e81c396]
   140050eb0:	std    
   140050eb1:	rex.B movabs al,ss:0xcd34f08d1ea4fe9a
   140050ebc:	imul   esi,DWORD PTR [rdi-0xf6b076b],0xffffffda
   140050ec3:	cmc    
   140050ec4:	(bad)  
   140050ec5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ec6:	cmc    
   140050ec7:	ins    DWORD PTR es:[rdi],dx
   140050ec8:	test   DWORD PTR [rcx+0x11],0x1ec89484
   140050ecf:	icebp  
   140050ed0:	leave  
   140050ed1:	cmp    eax,0x2e879fd6
   140050ed6:	pop    rax
   140050ed7:	(bad)  [rbp+0x26]
   140050eda:	(bad)  
   140050edb:	mov    dl,0x3e
   140050edd:	fistp  QWORD PTR [rdx]
   140050edf:	enter  0x77ff,0x7e
   140050ee3:	cdq    
   140050ee4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050ee5:	adc    dh,bl
   140050ee7:	rex.X add BYTE PTR [rax],al
   140050eea:	xor    edx,DWORD PTR [rdi]
   140050eec:	add    al,BYTE PTR [rax]
   140050eee:	xor    BYTE PTR fs:[rbx-0x35],cl
   140050ef2:	xchg   edi,eax
   140050ef3:	xchg   esi,eax
   140050ef4:	mov    al,0x97
   140050ef6:	cs ins BYTE PTR es:[rdi],dx
   140050ef8:	add    cl,al
   140050efa:	push   0x5a630b5a
   140050eff:	sbb    eax,ebp
   140050f01:	gs rex.W
   140050f03:	rex.WRB movabs r10,0x3d17e89e10aa0210
   140050f0d:	iret   
   140050f0e:	fucom  st(6)
   140050f10:	hlt    
   140050f11:	push   rax
   140050f12:	popf   
   140050f13:	rex.R
   140050f14:	imul   r11d,ecx,0xffffffb4
   140050f18:	(bad)  
   140050f19:	adc    eax,0x437fc60c
   140050f1e:	xchg   ebx,eax
   140050f1f:	jnp    0x140050f16
   140050f21:	js     0x140050f1c
   140050f23:	fs rex.WRX movabs rsi,0x92ac09d0b0aa0810
   140050f2e:	lahf   
   140050f2f:	sbb    ebp,ebp
   140050f31:	adc    edx,eax
   140050f33:	sar    BYTE PTR [rbx-0x4ff532a2],0x12
   140050f3a:	(bad)  
   140050f3c:	cmc    
   140050f3d:	(bad)  
   140050f3e:	div    BYTE PTR [rbx*4+0x4eaf0e08]
   140050f45:	push   rcx
   140050f46:	mov    ds,WORD PTR [rsi-0x61]
   140050f49:	mov    eax,0x237deac1
   140050f4e:	idiv   DWORD PTR [rdi-0x17603f6a]
   140050f54:	movsxd edx,DWORD PTR [rsi-0x372f4299]
   140050f5a:	bswap  esp
   140050f5c:	and    eax,DWORD PTR [rcx]
   140050f5e:	add    ah,dl
   140050f60:	and    DWORD PTR [rsp+rsi*8],eax
   140050f63:	js     0x140050f65
   140050f65:	(bad)  
   140050f66:	mov    ch,0x6
   140050f68:	and    QWORD PTR [rax-0x6],r12
   140050f6c:	shl    DWORD PTR [rsi+0x70],1
   140050f6f:	push   rax
   140050f70:	test   eax,0x2d93ee4e
   140050f75:	fstp   QWORD PTR [rdx]
   140050f77:	xor    dl,dh
   140050f79:	ins    BYTE PTR es:[rdi],dx
   140050f7a:	in     eax,dx
   140050f7b:	adc    edx,eax
   140050f7d:	add    eax,0x66c92702
   140050f82:	sahf   
   140050f83:	push   rbp
   140050f84:	fwait
   140050f85:	sbb    DWORD PTR [rcx-0x12],ebp
   140050f88:	mov    cl,0xa4
   140050f8a:	ret    
   140050f8b:	retf   
   140050f8c:	call   rax
   140050f8e:	or     BYTE PTR [rbp+0x5a],ch
   140050f91:	add    eax,DWORD PTR [rdx-0x3f749a6c]
   140050f97:	xor    BYTE PTR [rsi+rax*4+0x40c2134c],al
   140050f9e:	imul   ebp,DWORD PTR [rbx+0x39013acd],0xffffffaf
   140050fa5:	push   rcx
   140050fa6:	sahf   
   140050fa7:	adc    dl,BYTE PTR [rip+0xffffffffb643c216]        # 0xf648d1c3
   140050fad:	push   rcx
   140050fae:	out    0x93,al
   140050fb0:	sti    
   140050fb1:	test   BYTE PTR [r10+0x5b684f72],bpl
   140050fb8:	sub    cl,ah
   140050fba:	rcl    ebp,0x72
   140050fbd:	(bad)  
   140050fbe:	and    ch,BYTE PTR [rax+0x31f57e40]
   140050fc4:	(bad)  
   140050fc5:	(bad)  
   140050fc6:	(bad)  
   140050fc7:	push   rax
   140050fc8:	(bad)  
   140050fc9:	cld    
   140050fca:	lahf   
   140050fcb:	sbb    ebx,eax
   140050fcd:	xlat   BYTE PTR ds:[rbx]
   140050fce:	(bad)  
   140050fcf:	(bad)  
   140050fd1:	xor    ah,bh
   140050fd3:	add    dh,BYTE PTR [rbx+0x31]
   140050fd6:	adc    DWORD PTR [rax-0x1ffa41e6],ebp
   140050fdc:	sub    ch,BYTE PTR [rax+0x13]
   140050fdf:	test   DWORD PTR [rax],eax
   140050fe1:	addr32 sbb al,0x35
   140050fe4:	(bad)  
   140050fe5:	scas   al,BYTE PTR es:[edi]
   140050fe7:	add    BYTE PTR [rdi],al
   140050fe9:	push   rsp
   140050fea:	movabs ds:0xbcae738de2300e71,al
   140050ff3:	rex.WR in al,0x4d
   140050ff6:	loopne 0x140050fe9
   140050ff8:	or     dl,cl
   140050ffa:	mov    ecx,0x7ba04ebb
   140050fff:	and    BYTE PTR [rbx],0xd9
   140051002:	sbb    DWORD PTR [rax],esp
   140051004:	es or  ecx,ecx
   140051007:	(bad)  
   140051008:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14005100a:	mov    esi,0xdaffadb7
   14005100f:	repnz mov esp,0x85fc936
   140051015:	test   DWORD PTR [rbx+0x3f],0xd778a456
   14005101c:	sar    DWORD PTR [rbp+0x4b4e4389],0x98
   140051023:	jnp    0x140050fe1
   140051025:	mov    bh,0x56
   140051027:	movabs al,ds:0xe345a6500bc4c69a
   140051030:	popf   
   140051031:	enter  0xd122,0x4
   140051035:	addr32 xchg esp,eax
   140051037:	sbb    eax,0xf812343b
   14005103c:	(bad)  
   14005103d:	in     al,dx
   14005103e:	and    al,0xcb
   140051040:	adc    al,0xe2
   140051042:	push   rsp
   140051043:	mov    ebx,eax
   140051045:	push   rdi
   140051046:	mov    dl,0x4
   140051048:	ins    BYTE PTR es:[rdi],dx
   140051049:	pop    rdx
   14005104a:	pop    rsi
   14005104b:	(bad)  
   14005104c:	(bad)  
   14005104d:	rex.X add al,0x28
   140051050:	xlat   BYTE PTR fs:[rbx]
   140051052:	or     DWORD PTR [rsi-0x4c31a859],ebp
   140051058:	adc    bl,BYTE PTR [rdi-0x45]
   14005105b:	(bad)  
   14005105c:	jne    0x140050fee
   14005105e:	jmp    QWORD PTR [rcx]
   140051060:	int3   
   140051061:	loop   0x140051025
   140051063:	(bad)  
   140051064:	rol    DWORD PTR [rbp+0x439aa2bf],cl
   14005106a:	hlt    
   14005106b:	ins    BYTE PTR es:[rdi],dx
   14005106c:	call   0x1414310d4
   140051071:	movabs al,ds:0x6a8190b26d5f96df
   14005107a:	add    DWORD PTR cs:[rbx],esp
   14005107d:	add    DWORD PTR [rax+0x25],0xd346a858
   140051084:	test   DWORD PTR [rsi-0x59],esi
   140051087:	(bad)  
   140051088:	adc    DWORD PTR [rcx],0xffffffad
   14005108b:	(bad)  
   14005108c:	(bad)  
   14005108d:	nop
   14005108e:	cmp    ch,BYTE PTR [rcx+0x10]
   140051091:	shr    BYTE PTR [rdi+0x7c],cl
   140051094:	fild   QWORD PTR [rdi+0x52005a9d]
   14005109a:	or     ecx,DWORD PTR [rax+rdx*8-0x20]
   14005109e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005109f:	pop    rdx
   1400510a0:	pushf  
   1400510a1:	pop    rax
   1400510a2:	rex.R
   1400510a3:	cmp    QWORD PTR [rax-0x636cdbc6],r12
   1400510aa:	pop    rbp
   1400510ab:	scas   al,BYTE PTR es:[rdi]
   1400510ac:	sub    BYTE PTR fs:[rcx+riz*4+0x1a],al
   1400510b1:	(bad)  
   1400510b2:	retf   
   1400510b3:	push   rsp
   1400510b4:	js     0x140051079
   1400510b6:	mov    DWORD PTR [rax],ebp
   1400510b8:	(bad)  
   1400510b9:	mov    ch,0xb8
   1400510bb:	imul   DWORD PTR [rbx+0x23]
   1400510be:	mov    ch,0x72
   1400510c0:	(bad)  
   1400510c1:	shr    ebp,cl
   1400510c3:	xor    DWORD PTR [rsi-0x7fe9930b],eax
   1400510c9:	rex.RX outs dx,BYTE PTR ds:[rsi]
   1400510cb:	mov    ch,0x6e
   1400510cd:	mov    ch,0x5d
   1400510cf:	rex.WX sahf 
   1400510d1:	mov    dh,0xad
   1400510d3:	ficomp WORD PTR [rbx]
   1400510d5:	cmp    edi,ecx
   1400510d7:	sub    ecx,DWORD PTR [rdx+rsi*8+0x1]
   1400510db:	or     bh,0x1
   1400510de:	clc    
   1400510df:	stos   DWORD PTR es:[rdi],eax
   1400510e0:	rex.RX
   1400510e1:	cs out 0xdd,eax
   1400510e4:	sub    ah,cl
   1400510e6:	rex.WXB add r8,rsp
   1400510e9:	movabs eax,ds:0x108e989ddf4367
   1400510f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400510f3:	xchg   BYTE PTR [rax+rsi*8],ah
   1400510f6:	jnp    0x140051079
   1400510f8:	rex.W leave 
   1400510fa:	rol    DWORD PTR [rsp+rax*4],cl
   1400510fd:	sub    al,0xa2
   1400510ff:	xchg   edx,eax
   140051100:	push   rbp
   140051101:	and    eax,0x1ce696ad
   140051106:	and    eax,0x632d68c9
   14005110b:	cdq    
   14005110c:	(bad)  
   14005110d:	add    BYTE PTR [rcx+0x1e],bh
   140051110:	pop    rbx
   140051111:	jnp    0x1400510e8
   140051113:	imul   bp,WORD PTR [rbp-0x6d],0x5a7
   140051119:	jne    0x14005116e
   14005111b:	je     0x14005110f
   14005111d:	push   rbx
   14005111e:	ja     0x140051165
   140051120:	in     al,dx
   140051121:	(bad)  
   140051122:	rex js 0x14005111e
   140051125:	push   rbx
   140051126:	cmp    ebx,ecx
   140051128:	in     eax,0x8f
   14005112a:	test   eax,edx
   14005112c:	pop    rsi
   14005112d:	jns    0x14005117c
   14005112f:	sti    
   140051130:	push   rdx
   140051131:	repnz stos DWORD PTR es:[rdi],eax
   140051133:	test   bh,dh
   140051135:	retf   0x5699
   140051138:	sub    BYTE PTR [rsi+rbx*4+0x6566cdb4],0xd0
   140051140:	jge    0x1400511b4
   140051142:	sub    eax,0x96529cb4
   140051147:	(bad)  
   140051148:	movsxd ebp,ebx
   14005114a:	pop    rdi
   14005114b:	xor    eax,0xf95e7f92
   140051150:	cld    
   140051151:	cmp    ah,dh
   140051153:	push   rbp
   140051154:	or     al,0x40
   140051156:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051158:	cwde   
   140051159:	add    BYTE PTR [rdi],ch
   14005115b:	(bad)  
   14005115c:	push   rcx
   14005115d:	rex.WRX cmp r13b,BYTE PTR cs:[rdi+0x11]
   140051162:	add    al,BYTE PTR [rsi-0x4999eff0]
   140051168:	(bad)  
   14005116a:	sbb    BYTE PTR [rbx+0x48],0x51
   14005116e:	fcom   DWORD PTR [rsi]
   140051170:	sub    ebx,ecx
   140051172:	mov    dh,0x4f
   140051174:	rex.WB
   140051175:	movs   BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
   140051177:	jno    0x1400511e8
   140051179:	pop    rdi
   14005117a:	jbe    0x1400511c2
   14005117c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005117d:	adc    DWORD PTR [rcx+rbp*4-0x75],ecx
   140051181:	retf   
   140051182:	jrcxz  0x1400511ec
   140051184:	(bad)  
   140051185:	ja     0x140051159
   140051187:	(bad)  
   140051188:	(bad)  
   140051189:	or     eax,0xc129e1da
   14005118e:	adc    al,0xff
   140051190:	sbb    al,0x10
   140051192:	mov    esi,0x5a06d7af
   140051197:	scas   eax,DWORD PTR es:[rdi]
   140051198:	mov    cl,0x2f
   14005119a:	retf   
   14005119b:	cmp    DWORD PTR [rbx+0x4565adc],edi
   1400511a1:	or     ch,BYTE PTR [rcx]
   1400511a3:	shl    DWORD PTR [rsi+rsi*4-0x49524d8f],0x43
   1400511ab:	(bad)  
   1400511ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400511ad:	(bad)  
   1400511ae:	(bad)  
   1400511af:	rex.WRXB stos BYTE PTR es:[rdi],al
   1400511b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400511b2:	(bad)  
   1400511b3:	add    DWORD PTR [rbp+rbp*2+0x59019ae2],esp
   1400511ba:	mov    edi,0x3dc5f11f
   1400511bf:	xor    BYTE PTR [rcx+0x604fce2f],cl
   1400511c5:	and    edi,DWORD PTR [rdi]
   1400511c7:	movabs al,ds:0x8f62f3b8bc2905f6
   1400511d0:	std    
   1400511d1:	repz pop rbp
   1400511d3:	sar    BYTE PTR [rdi+riz*1],0x3f
   1400511d7:	xor    bh,cl
   1400511d9:	add    eax,0x8455000
   1400511de:	mov    eax,0xc286116f
   1400511e3:	push   rcx
   1400511e4:	clc    
   1400511e5:	scas   al,BYTE PTR es:[rdi]
   1400511e6:	(bad)  
   1400511e7:	or     BYTE PTR [rax],cl
   1400511e9:	add    DWORD PTR [rcx-0x72e4ce5c],esp
   1400511ef:	rex.WB jns 0x14005121d
   1400511f2:	int    0x2d
   1400511f4:	cmc    
   1400511f5:	sub    ah,BYTE PTR [rip+0x68c2ee9d]        # 0x1a8c80098
   1400511fb:	lahf   
   1400511fc:	and    bl,bl
   1400511fe:	mov    WORD PTR [rdx+rbp*2-0x2e],?
   140051202:	movsxd ecx,ecx
   140051204:	scas   eax,DWORD PTR es:[rdi]
   140051205:	rex.RB sub DWORD PTR [r9-0x3c],0x30
   14005120a:	mov    dh,0xb9
   14005120c:	or     al,0xe8
   14005120e:	leave  
   14005120f:	jl     0x14005125a
   140051211:	push   0xffffffff8892afba
   140051216:	xchg   edx,eax
   140051217:	fmul   QWORD PTR [rbx]
   140051219:	xchg   esi,eax
   14005121a:	cdq    
   14005121b:	add    al,BYTE PTR [rdx+0x44]
   14005121e:	in     al,dx
   14005121f:	test   eax,0xbb23f190
   140051224:	movabs al,es:0xb4fd9909e38a65c4
   14005122e:	cmp    DWORD PTR [rcx+0x5be25625],edi
   140051234:	xor    al,0xbf
   140051236:	adc    al,0x14
   140051238:	(bad)  
   140051239:	std    
   14005123a:	push   rbp
   14005123b:	test   DWORD PTR [rax],ecx
   14005123d:	int    0x93
   14005123f:	and    al,0x96
   140051241:	mov    bh,0x52
   140051243:	adc    eax,0x73f23604
   140051248:	xchg   edx,eax
   140051249:	push   rdi
   14005124a:	cs adc eax,0xedbc259d
   140051250:	(bad)  
   140051251:	test   BYTE PTR [rax],0xb
   140051254:	cmp    ah,0xc0
   140051257:	cmp    al,0x77
   140051259:	add    DWORD PTR [rax],ebp
   14005125b:	sub    cl,ch
   14005125d:	sbb    BYTE PTR [rsi+rdx*1+0x15],dh
   140051261:	imul   edx,DWORD PTR [rsi+0x21110b2b],0x4ac43ca0
   14005126b:	cmp    DWORD PTR cs:[rsi+0x602b935f],0x65905d1b
   140051276:	mov    esp,0xf9b32b33
   14005127b:	ins    BYTE PTR es:[rdi],dx
   14005127c:	outs   dx,BYTE PTR ds:[rsi]
   14005127d:	sub    BYTE PTR [rcx+riz*1+0x39],0xd4
   140051282:	out    dx,al
   140051283:	push   rsi
   140051284:	cwde   
   140051285:	outs   dx,BYTE PTR ds:[rsi]
   140051286:	mov    esp,0xe2cd509a
   14005128b:	push   rcx
   14005128c:	mov    es,WORD PTR [rbx+0x665494b4]
   140051292:	nop
   140051293:	mov    r13,QWORD PTR [r15]
   140051296:	lods   al,BYTE PTR ds:[rsi]
   140051297:	imul   ecx,DWORD PTR [rcx+0x59],0x56
   14005129b:	push   rsi
   14005129c:	movabs al,ds:0xc10b9be1a6eefe98
   1400512a5:	jrcxz  0x14005124d
   1400512a7:	sub    DWORD PTR [rdi+0x3d0604d8],eax
   1400512ad:	(bad)  
   1400512ae:	and    eax,0xc497dcb6
   1400512b3:	imul   edx
   1400512b5:	(bad)  
   1400512b6:	scas   eax,DWORD PTR es:[rdi]
   1400512b7:	movabs eax,ds:0xc8f710b9c7a7d6a2
   1400512c0:	sub    eax,0x614d2e57
   1400512c5:	xor    bh,BYTE PTR [rdi]
   1400512c7:	in     al,dx
   1400512c8:	(bad)  
   1400512c9:	(bad)  
   1400512ca:	cwde   
   1400512cb:	(bad)  
   1400512cc:	xor    edi,esp
   1400512ce:	push   0xffffffffffffffc5
   1400512d0:	(bad)  
   1400512d1:	adc    DWORD PTR [rax],eax
   1400512d3:	rex in eax,0x77
   1400512d6:	(bad)  
   1400512d7:	add    BYTE PTR [rax],ah
   1400512d9:	(bad)  
   1400512da:	rex.W retf 
   1400512dc:	xor    eax,0xf0930005
   1400512e1:	mov    ch,0xa6
   1400512e3:	fld    DWORD PTR [rcx+rax*1]
   1400512e6:	sub    DWORD PTR [rdi+0x5d],esp
   1400512e9:	add    DWORD PTR [rdi-0x61],0x28fee46c
   1400512f0:	xor    ecx,DWORD PTR [rdx*1+0x43019bd2]
   1400512f7:	outs   dx,DWORD PTR ds:[rsi]
   1400512f8:	rex.XB lea ebx,[rip+0x29986598]        # 0x1699d7897
   1400512ff:	add    eax,0xd7aac7ac
   140051304:	test   al,0x9c
   140051306:	add    al,0x4a
   140051308:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051309:	(bad)  
   14005130b:	test   al,0x9d
   14005130d:	fild   QWORD PTR [rdx]
   14005130f:	add    ah,dh
   140051311:	je     0x140051341
   140051313:	call   0x12c5ea5c3
   140051318:	mov    ebx,0xae468a69
   14005131d:	(bad)  
   14005131e:	sar    BYTE PTR [rdx+0x75ba015],1
   140051324:	mov    ah,0x11
   140051326:	mov    cl,BYTE PTR [rbx-0x7e]
   140051329:	cli    
   14005132a:	mov    DWORD PTR [rsi+0x45fa09ba],ebp
   140051330:	cmp    ebp,DWORD PTR [rcx-0x207d363b]
   140051336:	xor    bl,BYTE PTR [rsi+0x1e]
   140051339:	out    0x74,al
   14005133b:	outs   dx,BYTE PTR ds:[rsi]
   14005133c:	jg     0x1400512fb
   14005133e:	pop    rax
   14005133f:	push   rax
   140051340:	add    al,BYTE PTR [rax]
   140051342:	adc    BYTE PTR [rdi+0x11],ch
   140051345:	out    dx,al
   140051346:	test   ebp,esp
   140051348:	push   rbp
   140051349:	(bad)  
   14005134a:	add    BYTE PTR [rax],cl
   14005134c:	rex.RXB loop 0x1400512d7
   14005134f:	xor    ecx,DWORD PTR es:[rdx+0x50]
   140051353:	pop    QWORD PTR [rdx+0x27]
   140051356:	mov    bl,0xdc
   140051358:	xor    eax,0x85af856f
   14005135d:	(bad)  
   14005135e:	mov    edx,eax
   140051360:	sub    esp,DWORD PTR [rdi+rsi*2-0x2]
   140051364:	push   rax
   140051365:	loop   0x1400513c0
   140051367:	fild   WORD PTR [rbx-0x80]
   14005136a:	test   DWORD PTR [rsi+rsi*4-0x7a5f7386],ebx
   140051371:	jbe    0x1400513a0
   140051373:	xor    al,0x70
   140051375:	push   0x7b6e0e13
   14005137a:	cmp    DWORD PTR [rsp+rbp*1-0x38854311],esi
   140051381:	xlat   BYTE PTR ds:[rbx]
   140051382:	mov    ch,0xb7
   140051384:	mov    dh,0x6b
   140051386:	and    eax,0xe7463d3b
   14005138b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005138c:	rex.RX
   14005138d:	data16 (bad) 
   14005138f:	lods   al,BYTE PTR ds:[rsi]
   140051390:	or     bh,cl
   140051392:	mov    ch,0x6
   140051394:	iretq  
   140051396:	(bad)  
   140051397:	pop    rbx
   140051398:	mov    ss,edi
   14005139a:	jmp    0x140051391
   14005139c:	jbe    0x140051409
   14005139e:	and    al,0xbe
   1400513a0:	pop    rbx
   1400513a1:	push   rsi
   1400513a2:	(bad)  
   1400513a3:	mov    edi,0x11734a51
   1400513a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400513a9:	or     bh,BYTE PTR [rcx]
   1400513ab:	xchg   esp,eax
   1400513ac:	mov    dl,BYTE PTR [rbx]
   1400513ae:	pop    bp
   1400513b0:	(bad)  
   1400513b1:	(bad)  
   1400513b2:	add    bl,al
   1400513b4:	clc    
   1400513b5:	mov    edi,0x10773bda
   1400513ba:	cmp    edx,ebp
   1400513bc:	cmp    BYTE PTR [rsi+0x7bb1e67f],cl
   1400513c2:	mov    ecx,0x60bb1884
   1400513c7:	rex.WX sub rcx,QWORD PTR [rbx]
   1400513ca:	or     DWORD PTR [rsi],esp
   1400513cc:	rex.WRB adc BYTE PTR [r12+rbp*1],r10b
   1400513d0:	mov    ah,0xb1
   1400513d2:	shl    DWORD PTR [rax],1
   1400513d4:	(bad)  
   1400513d5:	pop    rax
   1400513d6:	sub    BYTE PTR [rcx-0x54fbad3d],al
   1400513dc:	or     BYTE PTR [rsi-0x7e],dl
   1400513df:	popf   
   1400513e0:	jo     0x14005136c
   1400513e2:	and    BYTE PTR gs:[rax],ch
   1400513e5:	and    ah,BYTE PTR [rax+rcx*1+0x1b1b0b51]
   1400513ec:	rol    DWORD PTR [rax+0x2c3951a4],0x52
   1400513f3:	or     DWORD PTR [rcx+0xe],ebp
   1400513f6:	shr    BYTE PTR [rcx+0x42],cl
   1400513f9:	outs   dx,BYTE PTR ds:[rsi]
   1400513fa:	outs   dx,DWORD PTR ds:[rsi]
   1400513fb:	ja     0x1400513e4
   1400513fd:	(bad)  
   1400513fe:	xor    DWORD PTR [rbx],esi
   140051400:	mov    ebx,0x67fcf7ff
   140051405:	pop    rdi
   140051406:	mov    bh,0xb3
   140051408:	cmp    ebx,DWORD PTR [rdi-0x48]
   14005140b:	mov    ebx,0xf7e3ffd9
   140051410:	lahf   
   140051411:	fstp   st(3)
   140051413:	fcomip st,st(7)
   140051415:	idiv   eax
   140051417:	(bad)  
   140051418:	out    0xa4,al
   14005141a:	jbe    0x140051411
   14005141c:	int    0x8a
   14005141e:	(bad)  
   14005141f:	adc    DWORD PTR [rax],eax
   140051421:	rex.WR (bad) 
   140051423:	adc    edi,DWORD PTR [rax+0xad6189]
   140051429:	adc    BYTE PTR [rsi-0xc],al
   14005142d:	ja     0x1400513ce
   14005142f:	(bad)  
   140051430:	scas   al,BYTE PTR es:[rdi]
   140051431:	sbb    al,0x9c
   140051433:	push   rsp
   140051434:	test   al,0xd1
   140051436:	cmp    eax,0xb9b296e8
   14005143b:	xchg   DWORD PTR [rax+0x6a],esp
   14005143e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005143f:	jns    0x140051452
   140051441:	(bad)  
   140051442:	stos   DWORD PTR es:[rdi],eax
   140051443:	outs   dx,DWORD PTR ds:[rsi]
   140051444:	fidivr DWORD PTR [rax-0x297d6edd]
   14005144a:	rex.RX mov edx,0x17618333
   140051450:	ret    
   140051451:	add    al,0x9b
   140051453:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051454:	and    bh,bl
   140051456:	lahf   
   140051457:	rcl    ebp,1
   140051459:	(bad)  
   14005145a:	sub    DWORD PTR [rsp+rbx*8+0x2d366aa1],eax
   140051461:	xor    al,0x91
   140051463:	test   al,dl
   140051465:	pop    rsi
   140051466:	repnz add BYTE PTR [rbp+riz*8-0x4e],al
   14005146b:	sub    dh,BYTE PTR [rsi+0x2b2756de]
   140051471:	pop    rcx
   140051472:	imul   rbx,r15,0xffffffffffffff83
   140051476:	(bad)  
   140051477:	(bad)  
   140051478:	push   rdi
   140051479:	in     al,0x14
   14005147b:	xchg   ebp,edx
   14005147d:	cmp    al,0xb2
   14005147f:	popf   
   140051480:	fisttp DWORD PTR [rdi]
   140051482:	(bad)
   140051485:	mov    ch,0x93
   140051487:	fmul   st,st(7)
   140051489:	(bad)  
   14005148a:	(bad)  
   14005148b:	(bad)  
   14005148c:	or     DWORD PTR ds:[rax-0x3e],ebp
   140051490:	jrcxz  0x140051419
   140051492:	jg     0x1400514b8
   140051494:	addr32 iret 
   140051496:	pop    rdi
   140051497:	mov    esi,0x39439c0d
   14005149c:	pop    rsi
   14005149d:	or     al,0x80
   14005149f:	mov    esp,0x1da98e58
   1400514a4:	cmp    ecx,DWORD PTR [rsi]
   1400514a6:	mov    edx,0x93652bc2
   1400514ab:	jb     0x1400514bc
   1400514ad:	cmovno edx,DWORD PTR [rax+0x4d]
   1400514b1:	pop    rbp
   1400514b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400514b3:	pop    rdx
   1400514b4:	sbb    bh,BYTE PTR es:[rbx]
   1400514b7:	and    DWORD PTR [rcx-0x2a4946db],ecx
   1400514bd:	cmc    
   1400514be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400514bf:	std    
   1400514c0:	(bad)  
   1400514c1:	(bad)  
   1400514c2:	rex.WRX (bad) [rax]
   1400514c5:	mov    ch,0xcd
   1400514c7:	(bad)  
   1400514c8:	jb     0x1400514a3
   1400514ca:	and    al,0x22
   1400514cc:	(bad)  
   1400514cd:	out    dx,eax
   1400514ce:	add    al,0xf1
   1400514d0:	push   rbp
   1400514d1:	ror    BYTE PTR [rsi+0x4b],cl
   1400514d4:	ficom  WORD PTR [rbp+0x75]
   1400514d7:	sub    bl,ah
   1400514d9:	jmp    0x19a1a6141
   1400514de:	mov    ebp,0x317fa54f
   1400514e3:	movabs al,ds:0x242d795eb725a159
   1400514ec:	sbb    ch,al
   1400514ee:	(bad)  
   1400514ef:	push   rax
   1400514f0:	push   rdx
   1400514f1:	jp     0x1400514d8
   1400514f3:	cmc    
   1400514f4:	je     0x140051522
   1400514f6:	stc    
   1400514f7:	mov    ch,0xd4
   1400514f9:	fist   WORD PTR [rbp-0x52]
   1400514fc:	enter  0x464a,0x3
   140051500:	rex.RX add DWORD PTR [rdi-0x6],0x18
   140051505:	push   rbx
   140051506:	in     al,dx
   140051507:	add    ebx,DWORD PTR [rdi]
   140051509:	sbb    al,0x1e
   14005150b:	fdiv   QWORD PTR [rax]
   14005150d:	(bad)  
   14005150e:	in     al,dx
   14005150f:	mov    edi,0x7a568ee
   140051514:	and    dl,ah
   140051516:	ret    0xbdc5
   140051519:	(bad)  
   14005151a:	cmp    DWORD PTR [rbx],0x242d7ab6
   140051520:	test   al,0xb0
   140051522:	and    BYTE PTR [rdi+0x40],ch
   140051525:	lods   al,BYTE PTR ds:[rsi]
   140051526:	xchg   ebp,eax
   140051527:	stos   BYTE PTR es:[rdi],al
   140051528:	push   rsp
   140051529:	stc    
   14005152a:	(bad)  
   14005152b:	mov    esp,0x34cfd941
   140051530:	mov    esi,0xfa9003c9
   140051535:	leave  
   140051536:	ja     0x1400515a7
   140051538:	or     dl,BYTE PTR [rbx]
   14005153a:	add    ch,BYTE PTR [rdx+0x718dc383]
   140051540:	xor    eax,0x42
   140051543:	mov    ah,0xa2
   140051545:	push   0x6e0c1265
   14005154a:	mov    edx,0xcda7fd6a
   14005154f:	fs xor dl,bl
   140051552:	mov    bl,0xf2
   140051554:	push   0xffffffff869b658a
   140051559:	stos   DWORD PTR es:[rdi],eax
   14005155a:	rex.WXB in al,0x59
   14005155d:	retf   
   14005155e:	jmp    0x1400515bc
   140051560:	jnp    0x1400514e9
   140051562:	cld    
   140051563:	sbb    dl,BYTE PTR [rdi+0x3c038a1f]
   140051569:	jg     0x1400515db
   14005156b:	xor    eax,0x9eb47758
   140051570:	add    BYTE PTR [rax+0x72],ah
   140051573:	in     al,0xf8
   140051575:	out    dx,eax
   140051576:	pop    rax
   140051577:	repnz add al,BYTE PTR [rcx+0x10]
   14005157b:	rcr    bl,1
   14005157d:	cmp    eax,0xa8ef144b
   140051582:	adc    eax,0xb9434bd3
   140051587:	rol    DWORD PTR [rbx-0x80],cl
   14005158a:	test   eax,0xa54a296a
   14005158f:	jno    0x140051515
   140051591:	rex.XB sahf 
   140051593:	sahf   
   140051594:	rex.WXB xor BYTE PTR [r15+0x6d32d314],al
   14005159b:	rex
   14005159c:	rex.XB clc 
   14005159e:	(bad)  
   14005159f:	clc    
   1400515a0:	mov    bh,0x4a
   1400515a2:	rol    DWORD PTR [rax+0x3d130842],1
   1400515a8:	(bad)  
   1400515a9:	adc    eax,0xc0a88759
   1400515ae:	out    0xf6,al
   1400515b0:	rex.RX cmp DWORD PTR [rsi+0x4a46f919],r11d
   1400515b7:	out    dx,eax
   1400515b8:	or     al,0x53
   1400515ba:	(bad)  
   1400515bc:	fnsave [rsi]
   1400515be:	(bad)  
   1400515bf:	rex (bad) 
   1400515c1:	or     al,0x19
   1400515c3:	nop    DWORD PTR [rbx-0x7ff0034e]
   1400515ca:	(bad)  
   1400515cb:	push   rdi
   1400515cc:	jne    0x140051642
   1400515ce:	div    DWORD PTR [rdx]
   1400515d0:	mov    cl,0x11
   1400515d2:	add    al,0x0
   1400515d4:	jo     0x1400515b7
   1400515d6:	loop   0x140051636
   1400515d8:	or     al,0x7c
   1400515da:	xchg   DWORD PTR [rip+0xfffffffff710002f],esp        # 0x13715160f
   1400515e0:	ja     0x14005156b
   1400515e2:	ja     0x1400515b2
   1400515e4:	pop    rax
   1400515e5:	mov    ebp,0xa9287001
   1400515ea:	push   rdx
   1400515eb:	(bad)  
   1400515ec:	adc    al,0xdf
   1400515ee:	and    al,cl
   1400515f0:	repnz sbb ah,bl
   1400515f3:	jno    0x1400515a2
   1400515f5:	fwait
   1400515f6:	push   0x60f72da1
   1400515fb:	push   rsp
   1400515fc:	jb     0x14005158d
   1400515fe:	sti    
   1400515ff:	rcl    DWORD PTR [rdx],0xaa
   140051602:	cwde   
   140051603:	cmp    al,0x6
   140051605:	icebp  
   140051606:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051607:	push   rcx
   140051608:	(bad)  
   140051609:	and    eax,0x31a95cbf
   14005160e:	jne    0x140051660
   140051610:	pop    rbp
   140051611:	jns    0x140051656
   140051613:	mov    ecx,0xd1958141
   140051618:	cmp    al,0x94
   14005161a:	(bad)  
   14005161b:	rex.XB jle 0x14005161f
   14005161e:	loope  0x1400515dd
   140051620:	(bad)  
   140051621:	mov    ebx,0x92b1aef5
   140051626:	loope  0x14005163b
   140051628:	fist   DWORD PTR [rbx+0x36b42a7a]
   14005162e:	fidiv  WORD PTR [rdi]
   140051630:	(bad)  
   140051631:	movsxd ecx,DWORD PTR [rax]
   140051633:	movabs al,ds:0x53bd118410485d42
   14005163c:	addr32 je 0x1400516ae
   14005163f:	add    ah,bh
   140051641:	ret    0xb102
   140051644:	pop    rsp
   140051645:	cld    
   140051646:	(bad)  
   140051647:	sub    BYTE PTR [rdx+0x66],cl
   14005164a:	sar    BYTE PTR [rcx],1
   14005164c:	pop    rsp
   14005164d:	fiadd  WORD PTR [rcx+0x7123d3d4]
   140051653:	addr32 xchg ebx,eax
   140051655:	movabs eax,ds:0xe96ecad08fad8edf
   14005165e:	adc    al,0xe4
   140051660:	cmp    bl,BYTE PTR [rcx-0x8]
   140051663:	mov    edx,0xab5b4ae2
   140051668:	adc    cl,dl
   14005166a:	mov    edi,0x84cd6184
   14005166f:	push   rsp
   140051670:	test   BYTE PTR [rax],bh
   140051672:	rex.WX jg 0x14005164c
   140051675:	js     0x14005160d
   140051677:	jnp    0x1400516c7
   140051679:	xchg   ebx,eax
   14005167a:	and    ebx,esp
   14005167c:	jrcxz  0x1400516a5
   14005167e:	scas   al,BYTE PTR es:[rdi]
   14005167f:	rex.R (bad) 
   140051681:	ins    BYTE PTR es:[rdi],dx
   140051682:	or     bl,0xaf
   140051685:	(bad)  
   140051687:	or     BYTE PTR [rax],al
   140051689:	(bad)  
   14005168a:	rex.XB add sil,BYTE PTR [r8-0x1c]
   14005168e:	(bad)  
   14005168f:	movabs al,ds:0x9805e27cbac40896
   140051698:	cli    
   140051699:	mov    BYTE PTR [rdi-0x37e49d56],dl
   14005169f:	shl    BYTE PTR [rax+0x5c8ab5fc],0xd6
   1400516a6:	cmp    edi,edi
   1400516a8:	xchg   ecx,eax
   1400516a9:	scas   al,BYTE PTR es:[rdi]
   1400516aa:	mov    esi,0x4f59b075
   1400516af:	rex.WXB movabs r13,0x64c2c99b72e5cead
   1400516b9:	jmp    0xc0b80c31
   1400516be:	cli    
   1400516bf:	idiv   BYTE PTR [rbp*1-0x6a6bae82]
   1400516c6:	mov    cl,0xbe
   1400516c8:	jne    0x140051703
   1400516ca:	(bad)  
   1400516cb:	ins    BYTE PTR es:[rdi],dx
   1400516cc:	nop
   1400516cd:	retf   
   1400516ce:	scas   eax,DWORD PTR es:[rdi]
   1400516cf:	movabs ds:0xf4429f287500b395,al
   1400516d8:	and    eax,0x6abc0c70
   1400516dd:	push   0xffffffffffffff93
   1400516df:	addr32 sub ecx,ebp
   1400516e2:	js     0x1400516e4
   1400516e4:	add    esi,esp
   1400516e6:	adc    eax,DWORD PTR [edx+0x14eab15d]
   1400516ed:	rex.WX
   1400516ee:	rex.W ret 0x65e9
   1400516f2:	in     eax,0x6f
   1400516f4:	xchg   ebx,eax
   1400516f5:	repnz movsxd esp,DWORD PTR [rcx+0x64]
   1400516f9:	fistp  DWORD PTR [rdx+0x6]
   1400516fc:	scas   eax,DWORD PTR es:[rdi]
   1400516fd:	jnp    0x140051698
   1400516ff:	xchg   ebx,eax
   140051700:	jrcxz  0x1400516ed
   140051702:	mov    esp,0x6e1c5703
   140051707:	jmp    0xd5f0897b
   14005170c:	mov    ah,0xa1
   14005170e:	push   rsp
   14005170f:	out    dx,al
   140051710:	(bad)  
   140051711:	rex.WXB out 0xd3,al
   140051714:	imul   eax
   140051716:	rex.WB cmp BYTE PTR [rip+0xffffffffb151e192],dl        # 0xf156f8af
   14005171d:	pushf  
   14005171e:	xlat   BYTE PTR ds:[rbx]
   14005171f:	ins    DWORD PTR es:[rdi],dx
   140051720:	cmc    
   140051721:	scas   eax,DWORD PTR es:[rdi]
   140051722:	add    ebp,DWORD PTR [rdi+0x1f]
   140051725:	(bad)  
   140051726:	fdiv   QWORD PTR [rax+0x336df3ee]
   14005172c:	rol    BYTE PTR ss:[rbx],cl
   14005172f:	adc    BYTE PTR [rcx+0x2e],dl
   140051732:	and    DWORD PTR [rsi+0x81bc383],edi
   140051738:	ret    
   140051739:	cwde   
   14005173a:	clc    
   14005173b:	(bad)  
   14005173c:	sbb    DWORD PTR [rdx+0x606e6fb8],esp
   140051742:	repnz or BYTE PTR [rdx+0x54],cl
   140051746:	fild   QWORD PTR [rdi]
   140051748:	ins    DWORD PTR es:[rdi],dx
   140051749:	rex.WB scas rax,QWORD PTR es:[rdi]
   14005174b:	(bad)  
   14005174c:	pop    rdi
   14005174d:	mov    DWORD PTR [rsi-0x1321a973],edi
   140051753:	cli    
   140051754:	pop    rbx
   140051755:	(bad)  
   140051757:	push   0xffffffffffffffd0
   140051759:	cmp    al,0x77
   14005175b:	sub    edi,DWORD PTR [rcx-0x63]
   14005175e:	ja     0x1400517a0
   140051760:	rex.WRB fmulp st(7),st
   140051763:	(bad)  
   140051764:	cmp    al,0x70
   140051766:	lods   al,BYTE PTR ds:[rsi]
   140051767:	movabs al,ds:0x788234a6fec7b00b
   140051770:	(bad)  
   140051771:	(bad)  
   140051772:	pop    rdx
   140051773:	scas   eax,DWORD PTR es:[rdi]
   140051774:	adc    ebx,edi
   140051776:	mov    esi,0xc9a7e28f
   14005177b:	mov    ah,ah
   14005177d:	clc    
   14005177e:	or     DWORD PTR [rcx+0x66],ebx
   140051781:	pop    rbp
   140051782:	(bad)  
   140051783:	jne    0xd6dfd75e
   140051789:	and    eax,0x2362b3bd
   14005178e:	cmp    eax,0xa1e51100
   140051793:	movabs ds:0x919e40de6c03035f,eax
   14005179c:	mov    es,WORD PTR [rdi+0x204269e4]
   1400517a2:	outs   dx,BYTE PTR ds:[rsi]
   1400517a3:	sub    al,0x32
   1400517a5:	rol    DWORD PTR [rcx+0x6],0x42
   1400517a9:	mov    ch,0x5a
   1400517ab:	stos   BYTE PTR es:[rdi],al
   1400517ac:	pop    rbp
   1400517ad:	push   0xffffffffffffff99
   1400517af:	add    eax,0x82efeb9b
   1400517b4:	rex.RB stc 
   1400517b6:	mov    ebp,0x589706c2
   1400517bb:	push   rcx
   1400517bc:	mov    esi,0x2f59b641
   1400517c1:	sbb    eax,DWORD PTR [rdx+rax*1-0x7150f066]
   1400517c8:	stos   DWORD PTR es:[rdi],eax
   1400517c9:	pop    rbp
   1400517ca:	pop    rax
   1400517cb:	xchg   DWORD PTR [rcx-0x47080e8],ebx
   1400517d1:	enter  0x94b2,0xf1
   1400517d5:	loopne 0x140051808
   1400517d7:	leave  
   1400517d8:	lock mov BYTE PTR [rdi+rsi*1],bh
   1400517dc:	ds xchg edi,eax
   1400517de:	scas   eax,DWORD PTR es:[rdi]
   1400517df:	ret    0xe075
   1400517e2:	popf   
   1400517e3:	ret    
   1400517e4:	sbb    DWORD PTR [rbx],0xffffffda
   1400517e7:	ret    
   1400517e8:	ins    BYTE PTR es:[rdi],dx
   1400517e9:	(bad)  
   1400517ea:	or     eax,0x8801ef1b
   1400517ef:	lock leave 
   1400517f1:	or     eax,0xd05b3940
   1400517f6:	(bad)  
   1400517f7:	pop    rbp
   1400517f8:	pop    rax
   1400517f9:	iret   
   1400517fa:	cmp    cl,BYTE PTR [rbx]
   1400517fc:	or     al,0x46
   1400517fe:	lea    ebp,[rax+0x14993dd7]
   140051804:	int3   
   140051805:	int    0x2d
   140051807:	xor    eax,DWORD PTR [rsi]
   140051809:	ds or  esp,0xffffffeb
   14005180d:	cli    
   14005180e:	stos   DWORD PTR es:[rdi],eax
   14005180f:	mov    al,0x25
   140051811:	sti    
   140051812:	sbb    al,0x75
   140051814:	jle    0x140051893
   140051816:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051817:	push   rdi
   140051818:	rex.WRB movabs r10,0xc94ec5aa0ddc0817
   140051822:	call   0x14fc046cf
   140051827:	sbb    ebx,DWORD PTR [rbx+rbp*8]
   14005182a:	(bad)  [rax-0x6cfffbab]
   140051830:	rol    DWORD PTR [rsi+0x5331c0de],cl
   140051836:	add    BYTE PTR [rbp+0x77f51deb],al
   14005183c:	mov    DWORD PTR [rbx-0x45],edi
   14005183f:	cmc    
   140051840:	xor    bpl,r13b
   140051843:	gs xchg ecx,eax
   140051845:	(bad)  
   140051846:	hlt    
   140051847:	cs add edx,edi
   14005184a:	fs rex mov ebp,0xbf2b45e0
   140051851:	or     BYTE PTR [rdi+0x4b],cl
   140051854:	scas   eax,DWORD PTR es:[rdi]
   140051855:	push   rbp
   140051856:	leave  
   140051857:	mov    edi,0x5eaa1ce6
   14005185c:	mov    BYTE PTR [rcx+rsi*8-0x39],0x3
   140051861:	rcl    cl,cl
   140051863:	shl    BYTE PTR [rip+0x2ae15fa7],0xf0        # 0x16ae67811
   14005186a:	jrcxz  0x1400518a6
   14005186c:	sahf   
   14005186d:	fidiv  DWORD PTR [rbx+0x11d6c4c]
   140051873:	push   rsp
   140051874:	sub    bh,dh
   140051876:	adc    edi,DWORD PTR [rsi+rcx*1+0x7c]
   14005187a:	in     al,0x6a
   14005187c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005187d:	adc    al,BYTE PTR [rcx+0x55]
   140051880:	(bad)  
   140051881:	or     al,0x4a
   140051883:	adc    ch,BYTE PTR [rdi-0x2a]
   140051886:	rex.WRXB movabs r13,0xa194ef811065c769
   140051890:	not    esp
   140051892:	movabs ds:0x6e1d2e2593f374f,al
   14005189b:	mov    bh,BYTE PTR [rdi+0x29b27c0f]
   1400518a1:	repz cli 
   1400518a3:	rex.WRB mov r9b,0xb5
   1400518a6:	add    al,0x50
   1400518a8:	movabs eax,ds:0xaed5c978137c62dc
   1400518b1:	rex.WRXB adc r11,r10
   1400518b4:	add    BYTE PTR [rax],r8b
   1400518b7:	add    bh,ah
   1400518b9:	rex.WB
   1400518ba:	rex.R
   1400518bb:	push   r12
   1400518bd:	and    al,BYTE PTR [rdx+0x10453e28]
   1400518c3:	xchg   BYTE PTR [rdx+0x79],dl
   1400518c6:	xor    ecx,DWORD PTR [rax]
   1400518c8:	sar    edi,1
   1400518ca:	mov    esp,0x1402fe9f
   1400518cf:	pop    rsp
   1400518d0:	pop    rbp
   1400518d1:	rex.RXB xor r11d,DWORD PTR [r11-0x59722670]
   1400518d8:	fidiv  WORD PTR [rbp+0x53692c99]
   1400518de:	push   rcx
   1400518df:	xchg   esi,eax
   1400518e0:	xchg   ecx,eax
   1400518e1:	es (bad) 
   1400518e3:	mov    esi,0x62977f8a
   1400518e8:	rex.B
   1400518e9:	rex.WRXB imul r14,QWORD PTR [r14+0x5b032eee],0x4f
   1400518f1:	add    BYTE PTR [rax],dh
   1400518f3:	or     DWORD PTR [rbx],ecx
   1400518f5:	pop    rsi
   1400518f6:	movabs eax,ds:0x8f38a007e670220
   1400518ff:	jrcxz  0x1400518ff
   140051901:	imul   ecx,DWORD PTR [rcx+0x32166008],0xac5cf498
   14005190b:	mov    cl,0xb6
   14005190d:	or     bl,dh
   14005190f:	push   rbp
   140051910:	sub    eax,0xa1ccade7
   140051915:	in     al,dx
   140051916:	jp     0x14005190f
   140051918:	pop    rcx
   140051919:	mov    ebp,0x3f9e6504
   14005191e:	retf   
   14005191f:	rex.W
   140051920:	rex.RX
   140051921:	rex.RXB scas al,BYTE PTR es:[rdi]
   140051923:	jae    0x14005191e
   140051925:	rex.R cmp al,0x0
   140051928:	scas   al,BYTE PTR es:[rdi]
   140051929:	add    DWORD PTR [rdi+0x6fbb9b6e],edi
   14005192f:	rex.X
   140051930:	rex.RXB add BYTE PTR [r10],r8b
   140051933:	(bad)  
   140051934:	adc    al,BYTE PTR [rcx+0x18]
   140051937:	cmc    
   140051938:	mov    bl,bh
   14005193a:	mov    ebx,0xc3e98684
   14005193f:	fxch   st(1)
   140051941:	ror    BYTE PTR [rdi+0x4e],0x6d
   140051945:	pop    rsi
   140051946:	rex.WR (bad) 
   140051948:	in     al,0x37
   14005194a:	movabs al,ds:0xbd59431b1ada5ca2
   140051953:	enter  0xf5f9,0xcc
   140051957:	and    al,0x23
   140051959:	rex.WXB
   14005195a:	rex.RX and al,0xa3
   14005195d:	add    DWORD PTR [rcx-0x16],ebx
   140051960:	mov    ch,0x11
   140051962:	scas   eax,DWORD PTR es:[rdi]
   140051963:	push   rbx
   140051964:	jl     0x140051969
   140051966:	cmp    al,BYTE PTR [rdx]
   140051968:	xor    BYTE PTR [rax+0x3ef057dc],ah
   14005196e:	xchg   esi,eax
   14005196f:	adc    ecx,DWORD PTR [rcx+0x44610455]
   140051975:	(bad)  
   140051976:	fcmovnbe st,st(1)
   140051978:	ret    0xa903
   14005197b:	int    0xa2
   14005197d:	rex.WR cld 
   14005197f:	xor    dl,BYTE PTR [rbx]
   140051981:	jl     0x140051976
   140051983:	(bad)  
   140051984:	add    DWORD PTR [rdx+0x2e],ecx
   140051987:	mov    esi,DWORD PTR [rbx+0x6e541ccc]
   14005198d:	(bad)  
   14005198e:	js     0x1400519e8
   140051990:	mov    bh,0x6c
   140051992:	push   rdi
   140051993:	(bad)  
   140051994:	(bad)  
   140051995:	lock int 0xe1
   140051998:	ror    DWORD PTR [rip+0x36ffc4e7],0x62        # 0x17704de86
   14005199f:	rex.WRB movabs r15,0xd3c65e089281eb4d
   1400519a9:	and    eax,DWORD PTR [rax]
   1400519ab:	mov    dl,ah
   1400519ad:	ds (bad) 
   1400519af:	mov    esp,0xec33d443
   1400519b4:	xor    eax,0x5230b050
   1400519b9:	nop
   1400519ba:	test   DWORD PTR [rsi],ebp
   1400519bc:	pop    rsi
   1400519bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400519be:	mov    al,BYTE PTR [rip+0xffffffffd2217b2b]        # 0x1122694ef
   1400519c4:	sub    eax,0xc90f1d33
   1400519c9:	xchg   edx,eax
   1400519ca:	(bad)  
   1400519cb:	fst    QWORD PTR [rdx-0x3a6aeea3]
   1400519d1:	jmp    FWORD PTR [rbp+0x3a3b7c53]
   1400519d7:	add    dh,al
   1400519d9:	rcl    eax,cl
   1400519dc:	add    BYTE PTR [rdx],cl
   1400519de:	in     eax,0xe
   1400519e0:	jrcxz  0x14005197f
   1400519e2:	xchg   edx,eax
   1400519e3:	adc    BYTE PTR [rbx+rbp*1],ch
   1400519e6:	or     al,0xd
   1400519e8:	jge    0x140051a40
   1400519ea:	add    ch,BYTE PTR [rbp+0x57]
   1400519ed:	jrcxz  0x140051a59
   1400519ef:	cmp    eax,0x2090df62
   1400519f4:	rex.WXB
   1400519f5:	rex.RX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400519f7:	leave  
   1400519f8:	mov    BYTE PTR [rcx+rbx*1],ch
   1400519fb:	or     DWORD PTR ss:[rbx],esp
   1400519fe:	cmp    dl,BYTE PTR [rdi-0x41]
   140051a01:	add    DWORD PTR [rdx],edi
   140051a03:	add    ch,BYTE PTR [rax+0x8]
   140051a06:	fistp  WORD PTR [rcx+0x3]
   140051a09:	adc    DWORD PTR [rbx-0x40257e70],esi
   140051a0f:	lods   eax,DWORD PTR ds:[rsi]
   140051a10:	push   0xffffffffa8cfff1a
   140051a15:	hlt    
   140051a16:	shl    BYTE PTR [rbp-0xb],1
   140051a19:	addr32 rex.X jnp 0x1400519dc
   140051a1d:	pop    rcx
   140051a1e:	(bad)  
   140051a1f:	mov    edx,?
   140051a21:	jo     0x1400519f5
   140051a23:	mov    bh,0xf0
   140051a25:	int3   
   140051a26:	adc    ecx,DWORD PTR [rax+0x613ee288]
   140051a2c:	(bad)  
   140051a2d:	and    ecx,DWORD PTR [rdi+rsi*2+0x268339ac]
   140051a34:	cmp    BYTE PTR [rcx-0x7e],cl
   140051a37:	cwde   
   140051a38:	(bad)  
   140051a39:	rcl    DWORD PTR [rdi+0x32591967],0x24
   140051a40:	rex.WXB (bad) 
   140051a42:	rex.WRB fdivr QWORD PTR [r11+0x11]
   140051a46:	jnp    0x140051a08
   140051a48:	in     eax,dx
   140051a49:	mov    dh,0x1d
   140051a4b:	(bad)  
   140051a4c:	mov    ecx,0x6008e82e
   140051a51:	rex.WRX xchg rsp,rax
   140051a53:	loope  0x140051a16
   140051a55:	or     eax,eax
   140051a57:	push   rdi
   140051a58:	xor    al,0xf0
   140051a5a:	or     ch,BYTE PTR [rdx]
   140051a5c:	add    al,0x61
   140051a5e:	push   rsp
   140051a5f:	nop
   140051a60:	rex.B stc 
   140051a62:	mov    bl,0x8
   140051a64:	rex.X pop rax
   140051a66:	addr32 in al,0x59
   140051a69:	rex.RX xchg esi,eax
   140051a6b:	mov    fs,WORD PTR [rdi]
   140051a6d:	(bad)  
   140051a6e:	or     eax,0xee227912
   140051a73:	add    bl,BYTE PTR [rdi]
   140051a75:	add    bh,BYTE PTR [rdi+0x75]
   140051a78:	outs   dx,BYTE PTR ds:[rsi]
   140051a79:	(bad)  
   140051a7a:	jl     0x140051a64
   140051a7c:	or     BYTE PTR [rax-0x7f],ah
   140051a7f:	sub    BYTE PTR [rdi+0x17],dl
   140051a82:	mov    esi,0x678a7c0b
   140051a87:	scas   al,BYTE PTR es:[rdi]
   140051a88:	rex
   140051a89:	adc    BYTE PTR [r14-0x1b],r8b
   140051a8d:	movsxd edx,eax
   140051a8f:	jnp    0x140051a95
   140051a91:	push   rcx
   140051a92:	ins    BYTE PTR es:[rdi],dx
   140051a93:	fild   QWORD PTR [rdx-0x169bed24]
   140051a99:	cwde   
   140051a9a:	cmp    al,0x4d
   140051a9c:	or     al,BYTE PTR [rbp+0x1559d2cf]
   140051aa2:	(bad)  
   140051aa3:	mov    bl,al
   140051aa5:	(bad)  
   140051aa6:	xor    esp,eax
   140051aa8:	sti    
   140051aa9:	ins    DWORD PTR es:[rdi],dx
   140051aaa:	pop    rbp
   140051aab:	mov    ch,0xb7
   140051aad:	or     al,0x74
   140051aaf:	add    al,0xb0
   140051ab1:	and    al,0x94
   140051ab3:	sbb    ecx,DWORD PTR [rdi+0x320e675e]
   140051ab9:	test   al,0x10
   140051abb:	xchg   BYTE PTR [rcx],dh
   140051abd:	sbb    BYTE PTR [r14],dl
   140051ac0:	test   BYTE PTR [rax+0x5d],dl
   140051ac3:	xchg   ebx,ebp
   140051ac5:	cmc    
   140051ac6:	idiv   DWORD PTR fs:[rbx+rcx*2]
   140051aca:	or     ch,bl
   140051acc:	sahf   
   140051acd:	and    eax,0x7af4e9e4
   140051ad2:	rex.WRX push rsp
   140051ad4:	rex.WX push rbx
   140051ad7:	ss ins DWORD PTR es:[rdi],dx
   140051ad9:	rcr    BYTE PTR [rcx+0x25],1
   140051adc:	cmp    al,BYTE PTR [rdx]
   140051ade:	pop    rax
   140051adf:	add    DWORD PTR [rdx+0x32],ecx
   140051ae2:	mov    eax,0xccc7c02
   140051ae7:	(bad)  
   140051ae8:	(bad)  
   140051ae9:	or     eax,0x4111841
   140051aee:	(bad)  
   140051aef:	icebp  
   140051af0:	mov    bh,0xc
   140051af2:	sbb    eax,0x8218f2a
   140051af7:	(bad)  
   140051af8:	test   DWORD PTR [rcx-0x6cda61bc],edx
   140051afe:	pop    rax
   140051aff:	mov    edi,0x6793745a
   140051b04:	sbb    DWORD PTR [rcx-0x6a],edi
   140051b07:	xchg   edx,eax
   140051b08:	out    0xd9,eax
   140051b0a:	cmp    al,0x56
   140051b0c:	fld    QWORD PTR [rbx+rdi*4-0x423fe840]
   140051b13:	rex.WRX jmp 0x14093aab0
   140051b19:	push   rsi
   140051b1a:	mov    WORD PTR [rdx],?
   140051b1c:	rex.WR js 0x140051b2d
   140051b1f:	js     0x140051ab0
   140051b21:	(bad)  
   140051b22:	lea    ecx,[rax-0x75]
   140051b25:	rex.RX sbb sil,r8b
   140051b28:	cmc    
   140051b29:	jmp    0x140051b2f
   140051b2b:	bnd jl 0x140051b3f
   140051b2e:	xchg   esi,eax
   140051b2f:	mov    ebx,0x6f81f629
   140051b34:	cmp    ebx,0x5abf7b9d
   140051b3a:	je     0x140051b40
   140051b3c:	jo     0x140051b00
   140051b3e:	sub    BYTE PTR [rdi+0x13],ah
   140051b41:	cs push rcx
   140051b43:	cmp    al,0xfd
   140051b45:	js     0x140051aec
   140051b47:	test   BYTE PTR [rax-0x7e],dh
   140051b4a:	fadd   DWORD PTR [rdi]
   140051b4c:	jle    0x140051b50
   140051b4e:	(bad)  
   140051b4f:	in     al,dx
   140051b50:	mov    dl,0xf7
   140051b52:	(bad)  
   140051b53:	mov    ecx,DWORD PTR [rsi-0x7df32a00]
   140051b59:	xchg   DWORD PTR [rax+0x19],esi
   140051b5c:	js     0x140051b6b
   140051b5e:	(bad)  
   140051b5f:	xor    edi,esp
   140051b61:	sub    eax,0x17e02dc1
   140051b66:	mov    ah,BYTE PTR [rdi]
   140051b68:	cmp    esi,DWORD PTR [rdi+0x16]
   140051b6b:	jle    0x140051b3a
   140051b6d:	rcl    BYTE PTR [rcx],1
   140051b6f:	rex or edx,DWORD PTR [rax-0x6e]
   140051b73:	ret    0x14d3
   140051b76:	(bad)  
   140051b77:	jo     0x140051b7e
   140051b79:	cmp    bh,cl
   140051b7b:	cli    
   140051b7c:	jns    0x140051b89
   140051b7e:	sti    
   140051b7f:	rol    BYTE PTR [rbx-0x20],0x1e
   140051b83:	jo     0x140051ba4
   140051b85:	clc    
   140051b86:	mov    bh,0x53
   140051b88:	div    ch
   140051b8a:	rex.RXB
   140051b8b:	rex.RXB add BYTE PTR [rip+0xffffffffe106b946],r13b        # 0x1210bd4d8
   140051b92:	pop    rsp
   140051b93:	stc    
   140051b94:	repnz push rdx
   140051b96:	stc    
   140051b97:	neg    DWORD PTR [rcx-0x20]
   140051b9a:	stc    
   140051b9b:	repnz cli 
   140051b9d:	sbb    esi,esp
   140051b9f:	mul    DWORD PTR [rax]
   140051ba1:	outs   dx,BYTE PTR ds:[rsi]
   140051ba2:	add    DWORD PTR [rbp+0x32],edx
   140051ba5:	out    dx,al
   140051ba6:	outs   dx,DWORD PTR ds:[rsi]
   140051ba7:	loopne 0x140051b48
   140051ba9:	repnz mov edx,0xbff32c3a
   140051baf:	outs   dx,BYTE PTR ds:[rsi]
   140051bb0:	cs mov esi,0x921ff8bd
   140051bb6:	jns    0x140051c29
   140051bb8:	(bad)  
   140051bb9:	(bad)  
   140051bba:	(bad)  
   140051bbb:	addr32 leave 
   140051bbd:	add    BYTE PTR [rax],al
   140051bbf:	add    BYTE PTR [rax],al
   140051bc1:	rex.WB
   140051bc2:	rex.RB
   140051bc3:	rex.WRX
   140051bc4:	rex.R scas al,BYTE PTR es:[rdi]
   140051bc6:	rex.X (bad) 
   140051bc8:	(bad)  
   140051bc9:	push   rax
   140051bca:	rex.B
   140051bcb:	sub    BYTE PTR [rax],r8b
   140051bce:	add    BYTE PTR [rax],al
   140051bd0:	xor    BYTE PTR [rax],al
   140051bd2:	add    BYTE PTR [rax],al
   140051bd4:	(bad)  
   140051bd5:	add    BYTE PTR [rax],al
   140051bd7:	add    BYTE PTR [rcx],al
   140051bd9:	add    BYTE PTR [rax],ah
	...
   140051c33:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   140051c37:	(bad)  
   140051c38:	movsxd ebp,DWORD PTR [rip+0x2d632d1a]        # 0x16d684958
   140051c3e:	sbb    ah,BYTE PTR [rdx+0x63]
   140051c41:	sub    eax,0x2f65a91a
   140051c46:	sbb    cl,dl
   140051c48:	data16 (bad) 
   140051c4a:	sbb    ebx,ecx
   140051c4c:	xor    BYTE PTR [ebx],bl
   140051c4f:	call   0x12d204cbc
   140051c54:	push   0x67ed1b30
   140051c59:	xor    BYTE PTR [rbx],bl
   140051c5b:	jmp    0x11b204cc6
   140051c60:	gs (bad) 
   140051c62:	sbb    cl,ch
   140051c64:	movsxd ebp,DWORD PTR [rsi]
   140051c66:	sbb    ch,BYTE PTR [rbp+0x6c1a2d63]
   140051c6c:	movsxd ebp,DWORD PTR [rip+0x2e64321a]        # 0x16e694e8c
   140051c72:	sbb    cl,BYTE PTR [rdx]
	...
   140051cec:	movsxd ebp,DWORD PTR [rsi]
   140051cee:	sbb    ch,BYTE PTR [rax]
   140051cf0:	movsxd ebp,DWORD PTR [rip+0x2e64781a]        # 0x16e699510
   140051cf6:	sbb    dl,ah
   140051cf8:	imul   esi,DWORD PTR [rdx],0x346dfc1c
   140051cfe:	(bad)  
   140051cff:	push   QWORD PTR [rdx+0x37]
   140051d02:	(bad)  
   140051d03:	push   QWORD PTR [rsi+0x3a]
   140051d06:	and    edi,edi
   140051d08:	js     0x140051d45
   140051d0a:	and    bh,bh
   140051d0c:	js     0x140051d49
   140051d0e:	and    bh,bh
   140051d10:	js     0x140051d4d
   140051d12:	and    bh,bh
   140051d14:	js     0x140051d51
   140051d16:	and    bh,bh
   140051d18:	js     0x140051d55
   140051d1a:	and    bh,bh
   140051d1c:	js     0x140051d59
   140051d1e:	and    bh,bh
   140051d20:	jbe    0x140051d5c
   140051d22:	and    edi,edi
   140051d24:	jae    0x140051d5e
   140051d26:	and    bh,bh
   140051d28:	outs   dx,BYTE PTR ds:[rsi]
   140051d29:	xor    al,0x1e
   140051d2b:	jmp    FWORD PTR [rdx+0x32]
   140051d2e:	sbb    al,0xff
   140051d30:	gs (bad) 
   140051d32:	sbb    bl,bl
   140051d34:	movsxd ebp,DWORD PTR [rip+0x2e63821a]        # 0x16e689f54
   140051d3a:	sbb    dh,BYTE PTR [rdx]
	...
   140051da4:	movsxd ebp,DWORD PTR [rsi]
   140051da6:	sbb    ah,BYTE PTR [rdi]
   140051da8:	movsxd ebp,DWORD PTR [rip+0x30679b1a]        # 0x1706cb8c8
   140051dae:	sbb    esi,ebx
   140051db0:	outs   dx,DWORD PTR ds:[rsi]
   140051db1:	xor    eax,0x3975ff1f
   140051db6:	and    edi,edi
   140051db8:	jns    0x140051df6
   140051dba:	and    edi,edi
   140051dbc:	jp     0x140051dfb
   140051dbe:	and    al,0xff
   140051dc0:	jp     0x140051dff
   140051dc2:	and    al,0xff
   140051dc4:	jp     0x140051e03
   140051dc6:	and    al,0xff
   140051dc8:	jp     0x140051e07
   140051dca:	and    edi,edi
   140051dcc:	jp     0x140051e0b
   140051dce:	and    edi,edi
   140051dd0:	jnp    0x140051e0f
   140051dd2:	and    edi,edi
   140051dd4:	jp     0x140051e13
   140051dd6:	and    edi,edi
   140051dd8:	jp     0x140051e17
   140051dda:	and    edi,edi
   140051ddc:	jp     0x140051e1b
   140051dde:	and    al,0xff
   140051de0:	jp     0x140051e1f
   140051de2:	and    al,0xff
   140051de4:	jp     0x140051e23
   140051de6:	and    al,0xff
   140051de8:	jp     0x140051e27
   140051dea:	and    edi,edi
   140051dec:	jp     0x140051e2a
   140051dee:	and    edi,edi
   140051df0:	jbe    0x140051e2c
   140051df2:	and    bh,bh
   140051df4:	jo     0x140051e2b
   140051df6:	(bad)  
   140051df7:	jmp    QWORD PTR [rdi+0x30]
   140051dfa:	sbb    al,0xfb
   140051dfc:	movsxd ebp,DWORD PTR [rip+0x2e63a91a]        # 0x16e68c71c
   140051e02:	sbb    dh,BYTE PTR [rax+rax*1]
	...
   140051e59:	add    BYTE PTR [rax],al
   140051e5b:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   140051e5f:	or     al,0x63
   140051e61:	sub    eax,0x3066831a
   140051e66:	sbb    esi,ecx
   140051e68:	jno    0x140051ea0
   140051e6a:	and    bh,bh
   140051e6c:	js     0x140051eaa
   140051e6e:	and    bh,bh
   140051e70:	jnp    0x140051eaf
   140051e72:	and    al,0xff
   140051e74:	jnp    0x140051eb3
   140051e76:	and    al,0xff
   140051e78:	jp     0x140051eb7
   140051e7a:	and    al,0xff
   140051e7c:	jnp    0x140051ebc
   140051e7e:	and    al,0xff
   140051e80:	jl     0x140051ec1
   140051e82:	and    eax,0x253f7cff
   140051e87:	(bad)  
   140051e88:	jge    0x140051eca
   140051e8a:	and    eax,0x25417eff
   140051e8f:	(bad)  
   140051e90:	jle    0x140051ed2
   140051e92:	and    eax,0x25417eff
   140051e97:	(bad)  
   140051e98:	jle    0x140051edb
   140051e9a:	and    eax,0x25407dff
   140051e9f:	(bad)  
   140051ea0:	jl     0x140051ee1
   140051ea2:	and    eax,0x253f7cff
   140051ea7:	(bad)  
   140051ea8:	jnp    0x140051ee8
   140051eaa:	and    eax,0x243d7aff
   140051eaf:	(bad)  
   140051eb0:	jnp    0x140051eef
   140051eb2:	and    al,0xff
   140051eb4:	jnp    0x140051ef3
   140051eb6:	and    al,0xff
   140051eb8:	jns    0x140051ef6
   140051eba:	and    edi,edi
   140051ebc:	jb     0x140051ef5
   140051ebe:	and    bh,bh
   140051ec0:	push   0x63f81c30
   140051ec5:	sub    eax,0x2e64951a
   140051eca:	sbb    dl,BYTE PTR [rax+rax*1]
	...
   140051f15:	add    BYTE PTR [rax],al
   140051f17:	add    BYTE PTR [rbx+0x2e],ah
   140051f1a:	sbb    dh,BYTE PTR [rbx]
   140051f1c:	fs cs sbb cl,bl
   140051f20:	ins    DWORD PTR es:[rdi],dx
   140051f21:	xor    al,0x1e
   140051f23:	(bad)  
   140051f24:	jns    0x140051f62
   140051f26:	and    edi,edi
   140051f28:	jl     0x140051f68
   140051f2a:	and    eax,0x253e7cff
   140051f2f:	(bad)  
   140051f30:	jl     0x140051f70
   140051f32:	and    eax,0x263f7dff
   140051f37:	(bad)  
   140051f38:	jle    0x140051f7a
   140051f3a:	(bad)  
   140051f3b:	(bad)  
   140051f3c:	jg     0x140051f80
   140051f3e:	(bad)  
   140051f3f:	inc    DWORD PTR [rax-0x7e00d7bd]
   140051f45:	sub    edi,r15d
   140051f48:	(bad)  
   140051f49:	sub    r15d,r15d
   140051f4c:	add    DWORD PTR [rsi+0x2a],0xffffffff
   140051f50:	add    DWORD PTR [rsi+0x2a],0xffffffff
   140051f54:	add    DWORD PTR [rsi+0x2a],0xffffffff
   140051f58:	add    DWORD PTR [rsi+0x2a],0xffffffff
   140051f5c:	(bad)  
   140051f5d:	sub    r15b,r15b
   140051f60:	add    DWORD PTR [rcx+rbp*1-0x1],0xff284481
   140051f68:	jg     0x140051fac
   140051f6a:	sub    bh,bh
   140051f6c:	jle    0x140051faf
   140051f6e:	(bad)  
   140051f6f:	(bad)  
   140051f70:	jge    0x140051fb2
   140051f72:	es (bad) 
   140051f74:	jl     0x140051fb4
   140051f76:	and    eax,0x253e7cff
   140051f7b:	(bad)  
   140051f7c:	jnp    0x140051fbc
   140051f7e:	and    al,0xff
   140051f80:	jns    0x140051fbe
   140051f82:	and    edi,edi
   140051f84:	outs   dx,DWORD PTR ds:[rsi]
   140051f85:	xor    eax,0x2e64ff1f
   140051f8a:	sbb    bl,ch
   140051f8c:	movsxd ebp,DWORD PTR [rip+0x481a]        # 0x1400567ac
	...
   140051fd2:	add    BYTE PTR [rax],al
   140051fd4:	movsxd ebp,DWORD PTR [rip+0x30665d1a]        # 0x1706b7cf4
   140051fda:	sbb    esi,edx
   140051fdc:	je     0x140052017
   140051fde:	and    bh,bh
   140051fe0:	jnp    0x140052020
   140051fe2:	and    al,0xff
   140051fe4:	jl     0x140052024
   140051fe6:	and    eax,0x263f7cff
   140051feb:	(bad)  
   140051fec:	jle    0x14005202f
   140051fee:	(bad)  
   140051fef:	inc    DWORD PTR [rax-0x7e00d7bd]
   140051ff5:	sub    edi,r15d
   140051ff8:	test   BYTE PTR [rdi+0x2b],al
   140051ffb:	inc    DWORD PTR [rbp-0x7800d3b7]
   140052001:	rex.WXB sub rax,0x2e4c89ff
   140052007:	dec    DWORD PTR [rdx-0x7400d0b3]
   14005200d:	rex.WRXB xor r15b,r15b
   140052010:	mov    WORD PTR [rax+0x31],ss
   140052013:	dec    DWORD PTR [rax+rdx*2+0x4e8bff31]
   14005201a:	xor    bh,bh
   14005201c:	mov    cl,BYTE PTR [rsi+0x30]
   14005201f:	dec    DWORD PTR [rcx-0x7700d1b4]
   140052025:	rex.WXB sub rax,0x2c4986ff
   14005202b:	inc    DWORD PTR [rbx-0x7d00d4b9]
   140052031:	sub    r15d,r15d
   140052034:	jg     0x140052078
   140052036:	sub    bh,bh
   140052038:	jle    0x14005207b
   14005203a:	(bad)  
   14005203b:	(bad)  
   14005203c:	jge    0x14005207e
   14005203e:	es (bad) 
   140052040:	jl     0x140052081
   140052042:	and    eax,0x243e7cff
   140052047:	push   QWORD PTR [rbp+0x3a]
   14005204a:	and    edi,edi
   14005204c:	xor    BYTE PTR [esp+edi*8],bl
   140052050:	movsxd ebp,DWORD PTR [rip+0x7019]        # 0x14005906f
	...
   14005208e:	add    BYTE PTR [rax],al
   140052090:	movsxd ebp,DWORD PTR [rip+0x3168721a]        # 0x1716d92b0
   140052096:	sbb    al,0xff
   140052098:	js     0x1400520d5
   14005209a:	and    bh,bh
   14005209c:	jl     0x1400520dd
   14005209e:	and    al,0xff
   1400520a0:	jl     0x1400520e1
   1400520a2:	and    eax,0x27427eff
   1400520a7:	inc    DWORD PTR [rcx-0x7c00d7bc]
   1400520ad:	rex.RXB sub r15b,r15b
   1400520b0:	xchg   BYTE PTR [rcx+0x2c],cl
   1400520b3:	dec    DWORD PTR [rax-0x7400d2b5]
   1400520b9:	rex.WRX xor dil,r15b
   1400520bc:	lea    edx,[rcx+0x32]
   1400520bf:	dec    DWORD PTR [rdi-0x6e00ccad]
   1400520c5:	push   rbp
   1400520c6:	xor    eax,0x365692ff
   1400520cb:	call   QWORD PTR [rax+rbx*2+0x5994ff37]
   1400520d2:	(bad)  
   1400520d3:	call   QWORD PTR [rbp-0x6b00c8a7]
   1400520d9:	pop    rax
   1400520da:	(bad)  
   1400520db:	call   QWORD PTR [rbx-0x6e00c9a9]
   1400520e1:	push   rbp
   1400520e2:	xor    eax,0x335390ff
   1400520e7:	dec    DWORD PTR [rbp-0x7500cdaf]
   1400520ed:	rex.WRX xor dil,r15b
   1400520f0:	mov    BYTE PTR [rbx+0x2d],cl
   1400520f3:	inc    DWORD PTR [rbp-0x7d00d4b8]
   1400520f9:	rex.RX sub r15b,dil
   1400520fc:	add    BYTE PTR [rax+rbp*1-0x1],0x7e
   140052101:	rex.B (bad) 
   140052103:	(bad)  
   140052104:	jl     0x140052145
   140052106:	and    eax,0x243f7cff
   14005210b:	(bad)  
   14005210c:	jns    0x14005214a
   14005210e:	and    edi,edi
   140052110:	imul   esi,DWORD PTR [rdx],0x2d63ff1c
   140052116:	sbb    al,BYTE PTR [rsi+0x0]
	...
   14005214c:	movsxd ebp,DWORD PTR [rip+0x31696f1a]        # 0x1716e906c
   140052152:	sbb    al,0xff
   140052154:	jns    0x140052192
   140052156:	and    edi,edi
   140052158:	jl     0x140052199
   14005215a:	and    eax,0x25407dff
   14005215f:	(bad)  
   140052160:	jg     0x1400521a5
   140052162:	(bad)  
   140052163:	inc    DWORD PTR [rdx-0x7a00d6ba]
   140052169:	sub    rdi,r15
   14005216c:	mov    BYTE PTR [rbp+rbp*1-0x1],cl
   140052170:	mov    ecx,DWORD PTR [rdi+0x2f]
   140052173:	dec    DWORD PTR [rsi-0x6d00cdae]
   140052179:	push   rsi
   14005217a:	xor    eax,0x375995ff
   14005217f:	call   FWORD PTR [rax-0x6400c6a5]
   140052185:	pop    rsi
   140052186:	cmp    al,0xff
   140052188:	popf   
   140052189:	(bad)  
   14005218a:	call   FWORD PTR ds:[rdi-0x6000c09e]
   140052191:	(bad)  
   140052192:	(bad)  
   140052193:	jmp    QWORD PTR [rax-0x6000c09d]
   140052199:	(bad)  
   14005219a:	(bad)  
   14005219b:	call   FWORD PTR [rsi-0x6400c09f]
   1400521a1:	pop    rsi
   1400521a2:	cmp    al,0xff
   1400521a4:	cwde   
   1400521a5:	pop    rsp
   1400521a6:	cmp    bh,bh
   1400521a8:	xchg   ebp,eax
   1400521a9:	pop    rcx
   1400521aa:	cmp    bh,bh
   1400521ac:	xchg   edx,eax
   1400521ad:	push   rbp
   1400521ae:	xor    eax,0x32528eff
   1400521b3:	dec    DWORD PTR [rbx-0x7700d0b1]
   1400521b9:	rex.WXB sub rax,0x2b4884ff
   1400521bf:	inc    DWORD PTR [rdx+0x7fff2945]
   1400521c5:	rex.X sub dil,dil
   1400521c8:	jge    0x14005220a
   1400521ca:	and    eax,0x253f7cff
   1400521cf:	(bad)  
   1400521d0:	jp     0x14005220f
   1400521d2:	and    al,0xff
   1400521d4:	imul   esi,DWORD PTR [rbx],0x1d
   1400521d7:	jmp    QWORD PTR [rbx+0x2d]
   1400521da:	sbb    al,BYTE PTR [rbp+0x0]
	...
   140052208:	movsxd ebp,DWORD PTR [rip+0x3068561a]        # 0x1706d7828
   14005220e:	sbb    al,0xff
   140052210:	jns    0x14005224e
   140052212:	and    edi,edi
   140052214:	jl     0x140052255
   140052216:	and    eax,0x26407dff
   14005221b:	inc    DWORD PTR [rax-0x7c00d8bd]
   140052221:	rex.RX sub r15b,dil
   140052224:	xchg   BYTE PTR [rdx+0x2c],cl
   140052227:	dec    DWORD PTR [rcx-0x7200d1b3]
   14005222d:	push   rcx
   14005222e:	xor    edi,edi
   140052230:	xchg   ecx,eax
   140052231:	push   rbp
   140052232:	xor    al,0xff
   140052234:	xchg   ebp,eax
   140052235:	pop    rcx
   140052236:	(bad)  
   140052237:	call   FWORD PTR [rdx-0x6200c5a3]
   14005223d:	(bad)  
   14005223e:	notrack jmp QWORD PTR [rdx-0x5a00bf9c]
   140052245:	rex.XB jmp QWORD PTR [r15d-0x5400ba96]
   14005224d:	ins    BYTE PTR es:[rdi],dx
   14005224e:	rex.RXB jmp FWORD PTR [r11-0x5300b894]
   140052255:	ins    DWORD PTR es:[rdi],dx
   140052256:	rex.RXB jmp FWORD PTR [r10-0x5700b894]
   14005225d:	push   0x46
   14005225f:	jmp    QWORD PTR [rbp-0x5d00bc98]
   140052265:	call   FWORD PTR gs:[r14-0x6500c19e]
   14005226d:	pop    rbp
   14005226e:	cmp    edi,edi
   140052270:	xchg   esi,eax
   140052271:	pop    rcx
   140052272:	(bad)  
   140052273:	call   QWORD PTR [rcx-0x7200cbab]
   140052279:	push   rcx
   14005227a:	xor    edi,edi
   14005227c:	mov    DWORD PTR [rbp+0x2e],ecx
   14005227f:	inc    DWORD PTR [rsi-0x7c00d4b7]
   140052285:	rex.RX sub r15b,dil
   140052288:	jg     0x1400522cd
   14005228a:	sub    bh,bh
   14005228c:	jge    0x1400522ce
   14005228e:	es (bad) 
   140052290:	jl     0x1400522d1
   140052292:	and    eax,0x233d7aff
   140052297:	jmp    FWORD PTR [rdx+0x32]
   14005229a:	sbb    eax,0x1a2d63ff
   14005229f:	jo     0x1400522a1
	...
   1400522c1:	add    BYTE PTR [rax],al
   1400522c3:	add    BYTE PTR [rbx+0x2e],ah
   1400522c6:	sbb    ch,BYTE PTR [rbx]
   1400522c8:	data16 (bad) 
   1400522ca:	sbb    esi,edx
   1400522cc:	ja     0x140052309
   1400522ce:	and    bh,bh
   1400522d0:	jl     0x140052310
   1400522d2:	and    eax,0x26407cff
   1400522d7:	(bad)  
   1400522d8:	jg     0x14005231c
   1400522da:	sub    bh,bh
   1400522dc:	add    DWORD PTR [rsi+0x2a],0xffffffff
   1400522e0:	xchg   DWORD PTR [rbx+0x2d],ecx
   1400522e3:	dec    DWORD PTR [rbx-0x7000cfb1]
   1400522e9:	push   rbx
   1400522ea:	xor    bh,bh
   1400522ec:	xchg   ebx,eax
   1400522ed:	push   rdi
   1400522ee:	call   FWORD PTR ss:[rax-0x6200c6a4]
   1400522f5:	(bad)  
   1400522f6:	cmp    eax,0x4065a2ff
   1400522fb:	jmp    QWORD PTR [rsi-0x5500bb96]
   140052301:	ins    DWORD PTR es:[rdi],dx
   140052302:	rex.RXB jmp FWORD PTR [r14-0x4b00b690]
   140052309:	je     0x140052358
   14005230b:	push   QWORD PTR [rsi-0x4700b18a]
   140052311:	js     0x140052362
   140052313:	(bad)  
   140052314:	mov    eax,0xb7ff5078
   140052319:	jbe    0x14005236a
   14005231b:	push   QWORD PTR [rbp-0x4f00b18b]
   140052321:	jo     0x14005236d
   140052323:	jmp    FWORD PTR [rbx-0x5800b893]
   140052329:	push   0x44
   14005232b:	jmp    QWORD PTR [rdx-0x6200be9b]
   140052331:	(bad)  
   140052332:	cmp    eax,0x395b98ff
   140052337:	call   QWORD PTR [rbx-0x7100c9a9]
   14005233d:	push   rdx
   14005233e:	xor    bh,bh
   140052340:	mov    cl,BYTE PTR [rbp+0x2e]
   140052343:	inc    DWORD PTR [rsi-0x7d00d3b7]
   140052349:	rex.RX sub edi,r15d
   14005234c:	jg     0x140052390
   14005234e:	(bad)  
   14005234f:	(bad)  
   140052350:	jge    0x140052392
   140052352:	es (bad) 
   140052354:	jl     0x140052394
   140052356:	and    eax,0x233c79ff
   14005235b:	jmp    QWORD PTR [rdi+0x30]
   14005235e:	sbb    edi,ebx
   140052360:	movsxd ebp,DWORD PTR [rip+0x461a]        # 0x140056980
	...
   14005237e:	add    BYTE PTR [rax],al
   140052380:	fs sbb cl,BYTE PTR cs:[rcx]
   140052384:	movsxd ebp,DWORD PTR [rsi]
   140052386:	sbb    cl,al
   140052388:	jae    0x1400523c2
   14005238a:	and    edi,edi
   14005238c:	jge    0x1400523cc
   14005238e:	and    al,0xff
   140052390:	jge    0x1400523d1
   140052392:	and    eax,0x274280ff
   140052397:	inc    DWORD PTR [rsi+rax*2+0x4b88ff2a]
   14005239e:	dec    DWORD PTR cs:[rax+rdx*2+0x5491ff31]
   1400523a6:	xor    al,0xff
   1400523a8:	xchg   esi,eax
   1400523a9:	pop    rcx
   1400523aa:	cmp    bh,bh
   1400523ac:	pushf  
   1400523ad:	pop    rsi
   1400523ae:	cmp    al,0xff
   1400523b0:	movabs eax,ds:0xabff4468a6ff4063
   1400523b9:	ins    BYTE PTR es:[rdi],dx
   1400523ba:	rex.RXB push QWORD PTR [r8-0x4b00b48f]
   1400523c1:	jne    0x140052410
   1400523c3:	push   QWORD PTR [rdi-0x5300b089]
   1400523c9:	ins    BYTE PTR es:[rdi],dx
   1400523ca:	rex.RXB jmp FWORD PTR [r10-0x5400b995]
   1400523d1:	ins    DWORD PTR es:[rdi],dx
   1400523d2:	rex.RXB jmp FWORD PTR [r13+r13*2+0x6cabff47]
   1400523da:	rex.RX jmp FWORD PTR [rcx-0x4b00ba96]
   1400523e1:	jae    0x140052430
   1400523e3:	push   QWORD PTR [rsi-0x4e00b18a]
   1400523e9:	jb     0x140052436
   1400523eb:	jmp    FWORD PTR [rbx-0x5900b893]
   1400523f1:	push   0x63a0ff44
   1400523f6:	rex call FWORD PTR [rdx-0x6a00c4a2]
   1400523fd:	pop    rcx
   1400523fe:	(bad)  
   1400523ff:	call   QWORD PTR [rax-0x7400ccad]
   140052405:	rex.WRXB xor r15b,r15b
   140052408:	xchg   DWORD PTR [rdx+0x2d],ecx
   14005240b:	inc    DWORD PTR [rdx+0x7fff2945]
   140052411:	rex.X (bad) 
   140052413:	(bad)  
   140052414:	jge    0x140052455
   140052416:	and    eax,0x243f7cff
   14005241b:	push   QWORD PTR [rbp+0x3a]
   14005241e:	and    edi,edi
   140052420:	fs cs sbb esp,eax
   140052424:	fs sbb dl,BYTE PTR cs:[rcx]
	...
   140052440:	movsxd ebp,DWORD PTR [rip+0x336c751a]        # 0x173719960
   140052446:	sbb    eax,0x203975ff
   14005244b:	push   QWORD PTR [rax+rdi*1+0x1f]
   14005244f:	push   QWORD PTR [rsi+0x3a]
   140052452:	and    bh,bh
   140052454:	jns    0x140052492
   140052456:	and    edi,edi
   140052458:	jl     0x14005249a
   14005245a:	and    eax,0x284480ff
   14005245f:	inc    DWORD PTR [rbx-0x7900d5b8]
   140052465:	rex.WXB sub rax,0x304f8bff
   14005246b:	dec    DWORD PTR [rdi-0x6c00cbad]
   140052471:	push   rdi
   140052472:	call   QWORD PTR ss:[rdi-0x6400c6a6]
   140052479:	pop    rsi
   14005247a:	cmp    al,0xff
   14005247c:	lahf   
   14005247d:	(bad)  
   14005247e:	notrack jmp QWORD PTR [rbx-0x5e00bf9c]
   140052485:	movsxd eax,DWORD PTR [rax-0x1]
   140052488:	imul   esi,DWORD PTR [rbx*1+0x152961ff],0xffffffff
   140052490:	(bad)  
   140052491:	sub    edx,DWORD PTR [rsi]
   140052493:	jmp    QWORD PTR [rdx+0x2b]
   140052496:	(bad)  
   140052497:	jmp    QWORD PTR [rdx+0x2b]
   14005249a:	(bad)  
   14005249b:	jmp    QWORD PTR [rax+0x29]
   14005249e:	adc    eax,0x355593ff
   1400524a3:	jmp    QWORD PTR [rsi-0x6000bd9a]
   1400524a9:	(bad)  
   1400524aa:	(bad)  
   1400524ab:	call   FWORD PTR [rbx-0x6800c3a2]
   1400524b1:	pop    rdx
   1400524b2:	cmp    edi,edi
   1400524b4:	xchg   ebx,eax
   1400524b5:	push   rdi
   1400524b6:	dec    DWORD PTR ss:[rsi-0x7500ccad]
   1400524bd:	rex.WRXB xor r15b,r15b
   1400524c0:	xchg   BYTE PTR [rdx+0x2c],cl
   1400524c3:	inc    DWORD PTR [rdx+0x7fff2a47]
   1400524c9:	rex.XB (bad) 
   1400524cb:	(bad)  
   1400524cc:	jnp    0x14005250d
   1400524ce:	and    eax,0x223c78ff
   1400524d3:	push   QWORD PTR [rsi+0x3a]
   1400524d6:	and    bh,bh
   1400524d8:	je     0x140052511
   1400524da:	(bad)  
   1400524db:	push   QWORD PTR [rdi+0x39]
   1400524de:	and    bh,bh
   1400524e0:	outs   dx,DWORD PTR ds:[rsi]
   1400524e1:	xor    eax,0x2d63ff1e
   1400524e6:	sbb    dl,BYTE PTR [rdi+0x0]
	...
   1400524fc:	movsxd ebp,DWORD PTR [rsi]
   1400524fe:	sbb    bl,BYTE PTR [rbx]
   140052500:	data16 xor BYTE PTR [rbx],bl
   140052503:	lock jae 0x14005253e
   140052506:	and    bh,bh
   140052508:	data16 xor BYTE PTR [rdi+rdi*8],bl
   14005250c:	xor    bl,BYTE PTR [edi]
   14005250f:	jmp    QWORD PTR [rdi+0x32]
   140052512:	(bad)  
   140052513:	jmp    QWORD PTR [rdi+0x32]
   140052516:	(bad)  
   140052517:	jmp    QWORD PTR [rdi+0x32]
   14005251a:	(bad)  
   14005251b:	jmp    QWORD PTR [rdi+0x32]
   14005251e:	(bad)  
   14005251f:	jmp    QWORD PTR [rsi+0x31]
   140052522:	(bad)  
   140052523:	jmp    QWORD PTR [rdi+0x31]
   140052526:	(bad)  
   140052527:	jmp    QWORD PTR [rsi+0x32]
   14005252a:	(bad)  
   14005252b:	jmp    QWORD PTR [rsi+0x31]
   14005252e:	(bad)  
   14005252f:	jmp    QWORD PTR [rsi+0x31]
   140052532:	(bad)  
   140052533:	jmp    QWORD PTR [rsi+0x31]
   140052536:	(bad)  
   140052537:	jmp    QWORD PTR [rsi+0x31]
   14005253a:	(bad)  
   14005253b:	jmp    QWORD PTR [rsi+0x31]
   14005253e:	(bad)  
   14005253f:	jmp    QWORD PTR [rsi+0x31]
   140052542:	(bad)  
   140052543:	jmp    QWORD PTR [rax+0x2a]
   140052546:	adc    eax,0x4f5e87ff
   14005254b:	(bad)  
   14005254c:	fcmove st,st(6)
   14005254e:	leave  
   14005254f:	(bad)  
   140052550:	fst    st(3)
   140052552:	sar    bh,1
   140052554:	fst    st(4)
   140052556:	sar    bh,cl
   140052558:	fst    st(4)
   14005255a:	sar    bh,cl
   14005255c:	(bad)  
   14005255e:	iret   
   14005255f:	inc    edi
   140052561:	mov    ah,0xac
   140052563:	jmp    FWORD PTR [rcx+0x34]
   140052566:	and    edi,edi
   140052568:	xor    BYTE PTR gs:[rdi+rdi*8],bl
   14005256c:	xor    WORD PTR [rsi],bx
   14005256f:	jmp    QWORD PTR [rsi+0x31]
   140052572:	(bad)  
   140052573:	jmp    QWORD PTR [rsi+0x31]
   140052576:	(bad)  
   140052577:	jmp    QWORD PTR [rsi+0x31]
   14005257a:	(bad)  
   14005257b:	jmp    QWORD PTR [rsi+0x32]
   14005257e:	(bad)  
   14005257f:	jmp    QWORD PTR [rsi+0x31]
   140052582:	(bad)  
   140052583:	jmp    QWORD PTR [rsi+0x32]
   140052586:	(bad)  
   140052587:	jmp    QWORD PTR [rsi+0x32]
   14005258a:	(bad)  
   14005258b:	jmp    QWORD PTR [rdi+0x32]
   14005258e:	(bad)  
   14005258f:	jmp    QWORD PTR [rdi+0x32]
   140052592:	(bad)  
   140052593:	jmp    QWORD PTR [rdi+0x32]
   140052596:	(bad)  
   140052597:	jmp    QWORD PTR [rsi+0x31]
   14005259a:	sbb    eax,0x223972ff
   14005259f:	(bad)  
   1400525a0:	jnp    0x1400525df
   1400525a2:	and    al,0xff
   1400525a4:	xor    BYTE PTR [edx+edi*8],bl
   1400525a8:	movsxd ebp,DWORD PTR [rsi]
   1400525aa:	sbb    dh,BYTE PTR [rcx]
	...
   1400525bc:	movsxd ebp,DWORD PTR [rip+0x356f8e1a]        # 0x17574b3dc
   1400525c2:	(bad)  
   1400525c3:	push   QWORD PTR [rdx+0x31]
   1400525c6:	(bad)  
   1400525c7:	push   QWORD PTR [rdx-0xf007a6e]
   1400525cd:	jmp    0x1400525b8
   1400525cf:	(bad)  
   1400525d0:	out    dx,al
   1400525d1:	jmp    0x128f325bd
   1400525d6:	out    0xff,eax
   1400525d8:	in     eax,dx
   1400525d9:	call   0x128f325c5
   1400525de:	out    0xff,al
   1400525e0:	in     al,dx
   1400525e1:	out    0xe6,eax
   1400525e3:	(bad)  
   1400525e4:	in     al,dx
   1400525e5:	out    0xe6,eax
   1400525e7:	(bad)  
   1400525e8:	in     al,dx
   1400525e9:	out    0xe6,eax
   1400525eb:	(bad)  
   1400525ec:	jmp    0x1400525d4
   1400525ee:	out    0xff,al
   1400525f0:	jmp    0x1400525d8
   1400525f2:	in     eax,0xff
   1400525f4:	jmp    0x1400525dc
   1400525f6:	in     eax,0xff
   1400525f8:	(bad)  
   1400525f9:	out    0xe5,al
   1400525fb:	(bad)  
   1400525fc:	(bad)  
   1400525fd:	in     eax,0xe5
   1400525ff:	(bad)  
   140052600:	(bad)  
   140052601:	in     eax,0xe4
   140052603:	(bad)  
   140052604:	call   0x1340508ec
   140052609:	repnz repnz (bad) 
   14005260c:	(bad)  
   14005260d:	(bad)  
   14005260e:	(bad)  
   14005260f:	push   rbp
   140052611:	out    0xdb,al
   140052613:	push   rdx
   140052615:	(bad)  
   140052617:	push   rax
   140052619:	fmul   st(7),st
   14005261b:	(bad)  
   14005261c:	stc    
   14005261d:	out    dx,al
   14005261e:	out    0xff,eax
   140052620:	(bad)  
   140052621:	(bad)  
   140052622:	(bad)  
   140052623:	(bad)  
   140052624:	(bad)  
   140052625:	out    0xe5,al
   140052627:	(bad)  
   140052628:	jmp    0x12b050b12
   14005262d:	out    0xe5,al
   14005262f:	(bad)  
   140052630:	jmp    0x140052618
   140052632:	in     eax,0xff
   140052634:	jmp    0x14005261c
   140052636:	in     eax,0xff
   140052638:	jmp    0x140052620
   14005263a:	out    0xff,al
   14005263c:	in     al,dx
   14005263d:	out    0xe6,eax
   14005263f:	(bad)  
   140052640:	in     al,dx
   140052641:	out    0xe6,eax
   140052643:	(bad)  
   140052644:	in     al,dx
   140052645:	out    0xe6,eax
   140052647:	(bad)  
   140052648:	in     eax,dx
   140052649:	call   0x128f32635
   14005264e:	out    0xff,eax
   140052650:	in     eax,dx
   140052651:	call   0x129f4263d
   140052656:	out    0xff,eax
   140052658:	out    dx,eax
   140052659:	(bad)  
   14005265a:	call   0x128f0175e
   14005265f:	call   QWORD PTR [rdx+riz*2+0x306dff4e]
   140052666:	sbb    bh,bh
   140052668:	movsxd ebp,DWORD PTR [rip+0xac1a]        # 0x14005d288
	...
   140052676:	add    BYTE PTR [rax],al
   140052678:	movsxd ebp,DWORD PTR [rsi]
   14005267a:	sbb    dl,BYTE PTR [rax]
   14005267c:	data16 (bad) 
   14005267e:	sbb    ebp,ebx
   140052680:	ja     0x1400526bd
   140052682:	and    bh,bh
   140052684:	jbe    0x1400526bd
   140052686:	sbb    al,0xff
   140052688:	xchg   esi,eax
   140052689:	imul   ebx,DWORD PTR [rcx-0x1],0xffffffba
   14005268d:	popf   
   14005268e:	xchg   ecx,eax
   14005268f:	inc    esi
   140052691:	test   eax,0xadc9ff9b
   140052696:	sahf   
   140052697:	dec    edx
   140052699:	scas   al,BYTE PTR es:[rdi]
   14005269a:	lahf   
   14005269b:	dec    esp
   14005269d:	mov    al,0xa0
   14005269f:	dec    esi
   1400526a1:	mov    dl,0xa2
   1400526a3:	call   rax
   1400526a5:	mov    ah,0xa3
   1400526a7:	call   rdx
   1400526a9:	mov    dh,0xa5
   1400526ab:	call   rbp
   1400526ad:	mov    eax,0xbad7ffa6
   1400526b2:	test   al,0xff
   1400526b4:	fnstcw WORD PTR [rdx+rbp*4-0x53412301]
   1400526bb:	(bad)  
   1400526bc:	faddp  st(0),st
   1400526be:	lods   eax,DWORD PTR ds:[rsi]
   1400526bf:	jmp    rax
   1400526c1:	shr    DWORD PTR [rsi-0x503c1e01],0xff
   1400526c8:	in     al,0xc5
   1400526ca:	mov    al,0xff
   1400526cc:	fidivr WORD PTR [rbp+riz*4+0x547cbbff]
   1400526d3:	(bad)  
   1400526d4:	mov    eax,0xbeff4774
   1400526d9:	js     0x140052724
   1400526db:	inc    esi
   1400526dd:	mov    gs,WORD PTR [rcx-0x1]
   1400526e0:	fnstsw WORD PTR [rsi-0x3d1f0057]
   1400526e6:	scas   al,BYTE PTR es:[rdi]
   1400526e7:	(bad)  
   1400526e8:	ffreep st(1)
   1400526ea:	scas   al,BYTE PTR es:[rdi]
   1400526eb:	(bad)  
   1400526ec:	fdivr  QWORD PTR [rsi-0x43250054]
   1400526f2:	stos   BYTE PTR es:[rdi],al
   1400526f3:	call   rdi
   1400526f5:	mov    edx,0xb8d5ffa9
   1400526fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400526fb:	call   rdx
   1400526fd:	mov    dh,0xa5
   1400526ff:	call   rax
   140052701:	mov    ah,0xa3
   140052703:	dec    esi
   140052705:	mov    cl,0xa1
   140052707:	dec    esp
   140052709:	mov    al,0xa0
   14005270b:	dec    ebx
   14005270d:	scas   al,BYTE PTR es:[rdi]
   14005270e:	lahf   
   14005270f:	dec    ecx
   140052711:	lods   al,BYTE PTR ds:[rsi]
   140052712:	sahf   
   140052713:	inc    ebx
   140052715:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052716:	fwait
   140052717:	(bad)  
   140052718:	mov    eax,0xbeff939d
   14005271d:	movabs al,ds:0x3776ff3c5389ff92
   140052726:	(bad)  
   140052727:	jmp    FWORD PTR [rax+0x30]
   14005272a:	sbb    al,0xf9
   14005272c:	movsxd ebp,DWORD PTR [rip+0x2f1a]        # 0x14005564c
   140052732:	add    BYTE PTR [rax],al
   140052734:	add    BYTE PTR [rax],al
   140052736:	add    BYTE PTR [rax],al
   140052738:	movsxd ebp,DWORD PTR [rip+0x346d701a]        # 0x174729758
   14005273e:	sbb    eax,0x233c7aff
   140052743:	(bad)  
   140052744:	jnp    0x140052784
   140052746:	and    edi,edi
   140052748:	ins    BYTE PTR es:[rdi],dx
   140052749:	xor    al,0x1e
   14005274b:	push   QWORD PTR [rbx+0x42]
   14005274e:	xor    bh,bh
   140052750:	pop    rdi
   140052751:	and    DWORD PTR [rcx],ecx
   140052753:	jmp    FWORD PTR [rdx+rbp*1+0xd]
   140052757:	(bad)  
   140052758:	jle    0x140052798
   14005275a:	(bad)  
   14005275b:	dec    DWORD PTR [rdx-0x7100d8b6]
   140052761:	rex.WRX sub r15b,dil
   140052764:	xchg   ecx,eax
   140052765:	push   rdx
   140052766:	sub    al,0xff
   140052768:	xchg   ebp,eax
   140052769:	push   rsi
   14005276a:	xor    bh,bh
   14005276c:	(bad)  
   14005276d:	pop    rcx
   14005276e:	xor    edi,edi
   140052770:	lahf   
   140052771:	pop    rbp
   140052772:	jmp    QWORD PTR ss:[rbx-0x5700c69f]
   140052779:	cmp    ax,0xaeff
   14005277d:	push   0x41
   14005277f:	push   QWORD PTR [rdi+rbp*2+0x73b8ff44]
   140052786:	rex.RXB jmp FWORD PTR [r9+r13*2+0x3d7bff40]
   14005278e:	(bad)  
   14005278f:	call   FWORD PTR [rdx+0x7aff365a]
   140052795:	rex.X sub edi,edi
   140052798:	popf   
   140052799:	pop    rbp
   14005279a:	cmp    edi,edi
   14005279c:	mov    esp,0xb9ff4e79
   1400527a1:	je     0x1400527eb
   1400527a3:	push   QWORD PTR [rbx-0x5000bb91]
   1400527a9:	imul   eax,DWORD PTR [rcx-0x1],0xffffffaa
   1400527ad:	jmp    WORD PTR ds:[rdx+riz*2+0x5e9fff3a]
   1400527b6:	(bad)  
   1400527b7:	call   FWORD PTR [rbx-0x6900cca6]
   1400527bd:	push   rsi
   1400527be:	xor    edi,edi
   1400527c0:	xchg   edx,eax
   1400527c1:	push   rbx
   1400527c2:	sub    eax,0x2a4e8eff
   1400527c7:	inc    DWORD PTR [rsi+0x7bff2546]
   1400527cd:	cmp    al,0x1e
   1400527cf:	jmp    QWORD PTR [rdi+0x29]
   1400527d2:	ud0    edx,DWORD PTR [rsi+rdx*1+0x0]
   1400527d7:	jmp    QWORD PTR [rax+0x28]
   1400527da:	adc    edi,edi
   1400527dc:	test   BYTE PTR [rbx+rsi*1-0x1],cl
   1400527e0:	jns    0x14005281c
   1400527e2:	(bad)  
   1400527e3:	(bad)  
   1400527e4:	jnp    0x140052824
   1400527e6:	and    al,0xff
   1400527e8:	jo     0x14005281f
   1400527ea:	(bad)  
   1400527eb:	jmp    QWORD PTR [rbx+0x2d]
   1400527ee:	sbb    al,BYTE PTR [rdx+0x0]
   1400527f4:	add    BYTE PTR [rax],al
   1400527f6:	add    BYTE PTR [rax],al
   1400527f8:	fs sbb bh,BYTE PTR cs:[rcx-0xdec68c]
   140052800:	jp     0x14005283f
   140052802:	and    edi,edi
   140052804:	js     0x140052840
   140052806:	(bad)  
   140052807:	(bad)  
   140052808:	jl     0x140052853
   14005280a:	ss push rsp
   14005280d:	icebp  
   14005280e:	lock inc edi
   140052811:	mov    ah,0xae
   140052813:	dec    DWORD PTR [rbp+0x68ff5866]
   140052819:	xor    bl,BYTE PTR [rip+0x142e69ff]        # 0x15433921e
   14005281f:	(bad)  
   140052820:	jns    0x14005285e
   140052822:	and    bh,bh
   140052824:	xchg   BYTE PTR [rbx+0x2d],cl
   140052827:	call   QWORD PTR [rax+rbx*2+0x609dff37]
   14005282e:	notrack jmp QWORD PTR [rbx-0x5700bd9a]
   140052835:	push   0x45
   140052837:	jmp    FWORD PTR [rdx-0x5800b894]
   14005283d:	imul   eax,DWORD PTR [rbp-0x1],0xff3d5e9b
   140052844:	test   DWORD PTR [rdx+0x2d],ecx
   140052847:	call   FWORD PTR [rbp+0x23]
   14005284a:	or     eax,0x253769ff
   14005284f:	inc    eax
   140052851:	popf   
   140052852:	mov    edi,edi
   140052854:	xchg   esp,eax
   140052855:	outs   dx,BYTE PTR ds:[rsi]
   140052856:	(bad)  
   140052857:	jmp    QWORD PTR [rax+0x77ff7580]
   14005285d:	cmp    al,0x21
   14005285f:	call   QWORD PTR [rcx-0x5a00cfae]
   140052865:	rex.X jmp DWORD PTR [rbp-0x5200b792]
   14005286d:	outs   dx,BYTE PTR ds:[rsi]
   14005286e:	rex.W jmp FWORD PTR [rcx-0x5c00b995]
   140052875:	call   DWORD PTR [rdi+r11*2+0x5490ff3d]
   14005287e:	xor    eax,0x2c4983ff
   140052883:	push   QWORD PTR [rsi+0x3c]
   140052886:	and    edi,edi
   140052888:	(bad)  
   140052889:	sub    BYTE PTR [rcx],dl
   14005288b:	call   FWORD PTR [rbx+0x21]
   14005288e:	or     eax,0x2b3d6eff
   140052893:	call   FWORD PTR [rbp-0x1e009085]
   140052899:	xlat   BYTE PTR ds:[rbx]
   14005289a:	sar    edi,cl
   14005289c:	(bad)  
   14005289d:	shl    BYTE PTR [rdi+0x193575ff],0xff
   1400528a4:	jp     0x1400528e3
   1400528a6:	and    edi,edi
   1400528a8:	jbe    0x1400528e4
   1400528aa:	and    edi,edi
   1400528ac:	gs (bad) 
   1400528ae:	sbb    ebx,ebp
   1400528b0:	fs sbb cl,BYTE PTR cs:[rdx]
   1400528b4:	fs sbb ah,BYTE PTR cs:[rdx]
   1400528b8:	xor    BYTE PTR [ebx],bl
   1400528bb:	hlt    
   1400528bc:	js     0x1400528f9
   1400528be:	and    bh,bh
   1400528c0:	jp     0x1400528ff
   1400528c2:	and    edi,edi
   1400528c4:	js     0x140052900
   1400528c6:	(bad)  
   1400528c7:	(bad)  
   1400528c8:	jp     0x140052911
   1400528ca:	xor    edi,edi
   1400528cc:	div    esp
   1400528ce:	repz (bad) 
   1400528d0:	(bad)  
   1400528d1:	(bad)  
   1400528d2:	(bad)  
   1400528d3:	(bad)  
   1400528d4:	(bad)  
   1400528d5:	(bad)  
   1400528d6:	(bad)  
   1400528d7:	jmp    rcx
   1400528d9:	xlat   BYTE PTR ds:[rbx]
   1400528da:	(bad)  
   1400528db:	(bad)  
   1400528dc:	mov    ecx,0x8aff99a1
   1400528e1:	movsxd edx,DWORD PTR [rbp-0x1]
   1400528e4:	push   0x36
   1400528e6:	and    al,0xff
   1400528e8:	data16 (bad) 
   1400528ea:	sbb    bh,bh
   1400528ec:	addr32 cs (bad) 
   1400528ef:	jmp    FWORD PTR [rdx+0x2f]
   1400528f2:	(bad)  
   1400528f3:	jmp    FWORD PTR [rbx+0x2f]
   1400528f6:	(bad)  
   1400528f7:	jmp    FWORD PTR [rax+0x2d]
   1400528fa:	adc    al,0xff
   1400528fc:	(bad)  
   1400528fd:	(bad)  
   1400528fe:	adc    edi,edi
   140052900:	pop    rsi
   140052901:	(bad)  
   140052902:	adc    edi,edi
   140052904:	imul   esi,DWORD PTR [rsi],0x81a1ff24
   14005290a:	jne    0x14005290b
   14005290c:	out    0xdf,eax
   14005290e:	fdiv   st(7),st
   140052910:	in     eax,dx
   140052911:	out    0xe2,al
   140052913:	call   FWORD PTR [rdi+rsi*2-0x97]
   14005291a:	(bad)  
   14005291b:	dec    ebp
   14005291d:	mov    ebp,0x6289ffb8
   140052922:	push   rsp
   140052923:	jmp    FWORD PTR [rax+0x32]
   140052926:	(bad)  
   140052927:	jmp    FWORD PTR [rdx+0x31]
   14005292a:	sbb    edi,edi
   14005292c:	ins    BYTE PTR es:[rdi],dx
   14005292d:	xor    DWORD PTR [rdi],edx
   14005292f:	jmp    FWORD PTR [rbx+0x30]
   140052932:	(bad)  
   140052933:	jmp    QWORD PTR [rdi+0x2c]
   140052936:	adc    al,0xff
   140052938:	(bad)  
   140052939:	sub    BYTE PTR [rcx],dl
   14005293b:	call   FWORD PTR [rsi+0x26]
   14005293e:	adc    bh,bh
   140052940:	(bad)  
   140052941:	sub    eax,0x3f70ff1a
   140052946:	call   FWORD PTR cs:[rdx+rdi*2-0x4e3a0093]
   14005294e:	test   eax,0xe9ebf0ff
   140052953:	(bad)  
   140052954:	(bad)  
   140052955:	(bad)  
   140052956:	(bad)  
   140052957:	(bad)  
   140052958:	(bad)  
   140052959:	(bad)  
   14005295a:	(bad)  
   14005295b:	call   rdx
   14005295d:	mov    ebp,0x3575ffb4
   140052962:	sbb    edi,edi
   140052964:	jp     0x1400529a3
   140052966:	and    edi,edi
   140052968:	jp     0x1400529a6
   14005296a:	and    edi,edi
   14005296c:	push   0x32
   14005296e:	sbb    al,0xff
   140052970:	movsxd ebp,DWORD PTR [rip+0x2d63301a]        # 0x16d685990
   140052976:	sbb    bl,BYTE PTR [rax+0x6d]
   140052979:	xor    al,0x1e
   14005297b:	(bad)  
   14005297c:	jns    0x1400529ba
   14005297e:	and    edi,edi
   140052980:	jp     0x1400529bf
   140052982:	and    edi,edi
   140052984:	js     0x1400529c0
   140052986:	(bad)  
   140052987:	(bad)  
   140052988:	jp     0x1400529d1
   14005298a:	xor    edi,edi
   14005298c:	cmc    
   14005298d:	repnz icebp 
   14005298f:	(bad)  
   140052990:	(bad)  
   140052991:	(bad)  
   140052992:	(bad)  
   140052993:	(bad)  
   140052994:	(bad)  
   140052995:	(bad)  
   140052996:	(bad)  
   140052997:	(bad)  
   140052998:	(bad)  
   140052999:	(bad)  
   14005299a:	(bad)  
   14005299b:	(bad)  
   14005299c:	(bad)  
   14005299d:	(bad)  
   14005299e:	(bad)  
   14005299f:	(bad)  
   1400529a0:	(bad)  
   1400529a1:	(bad)  
   1400529a2:	(bad)  
   1400529a3:	(bad)  
   1400529a4:	out    dx,eax
   1400529a5:	jmp    0x113e42991
   1400529aa:	iret   
   1400529ab:	dec    edx
   1400529ad:	mov    ecx,0x9bb4ffb3
   1400529b2:	xchg   edx,eax
   1400529b3:	jmp    FWORD PTR [rax-0x52007e75]
   1400529b9:	xchg   ecx,eax
   1400529ba:	mov    bh,bh
   1400529bc:	shr    BYTE PTR [rdx-0x3124005d],0xca
   1400529c3:	push   rcx
   1400529c5:	in     al,dx
   1400529c6:	(bad)  
   1400529c7:	(bad)  
   1400529c8:	(bad)  
   1400529c9:	(bad)  
   1400529ca:	(bad)  
   1400529cb:	(bad)  
   1400529cc:	(bad)  
   1400529cd:	(bad)  
   1400529ce:	(bad)  
   1400529cf:	jmp    rsi
   1400529d1:	fcmovnbe st,st(6)
   1400529d3:	call   FWORD PTR [rax-0x9a8d]
   1400529d9:	(bad)  
   1400529da:	(bad)  
   1400529db:	(bad)  
   1400529dc:	(bad)  
   1400529dd:	(bad)  
   1400529de:	(bad)  
   1400529df:	(bad)  
   1400529e0:	(bad)  
   1400529e1:	(bad)  
   1400529e2:	(bad)  
   1400529e3:	(bad)  
   1400529e4:	call   0x1130507c9
   1400529e9:	ret    
   1400529ea:	mov    esi,0x969eb6ff
   1400529ef:	jmp    FWORD PTR [rcx-0x53007d74]
   1400529f5:	nop
   1400529f6:	xchg   bh,bh
   1400529f8:	mov    ebx,0xd3ff9ba4
   1400529fd:	(bad)  
   1400529fe:	mov    edi,0xd6dae3ff
   140052a03:	push   rsi
   140052a05:	repnz icebp 
   140052a07:	(bad)  
   140052a08:	(bad)  
   140052a09:	(bad)  
   140052a0a:	(bad)  
   140052a0b:	(bad)  
   140052a0c:	(bad)  
   140052a0d:	(bad)  
   140052a0e:	(bad)  
   140052a0f:	(bad)  
   140052a10:	(bad)  
   140052a11:	(bad)  
   140052a12:	(bad)  
   140052a13:	(bad)  
   140052a14:	(bad)  
   140052a15:	(bad)  
   140052a16:	(bad)  
   140052a17:	(bad)  
   140052a18:	(bad)  
   140052a19:	(bad)  
   140052a1a:	(bad)  
   140052a1b:	call   rdx
   140052a1d:	mov    esp,0x3575ffb3
   140052a22:	sbb    edi,edi
   140052a24:	jp     0x140052a63
   140052a26:	and    edi,edi
   140052a28:	jp     0x140052a67
   140052a2a:	and    edi,edi
   140052a2c:	outs   dx,BYTE PTR ds:[rsi]
   140052a2d:	xor    al,0x1e
   140052a2f:	jmp    QWORD PTR [rbx+0x2d]
   140052a32:	sbb    ch,BYTE PTR [rbp+0x63]
   140052a35:	sub    eax,0x3670791a
   140052a3a:	(bad)  
   140052a3b:	(bad)  
   140052a3c:	jp     0x140052a7a
   140052a3e:	and    edi,edi
   140052a40:	jp     0x140052a7f
   140052a42:	and    edi,edi
   140052a44:	js     0x140052a7f
   140052a46:	(bad)  
   140052a47:	(bad)  
   140052a48:	jp     0x140052a91
   140052a4a:	xor    edi,edi
   140052a4c:	cmc    
   140052a4d:	repnz icebp 
   140052a4f:	(bad)  
   140052a50:	(bad)  
   140052a51:	(bad)  
   140052a52:	(bad)  
   140052a53:	(bad)  
   140052a54:	(bad)  
   140052a55:	(bad)  
   140052a56:	(bad)  
   140052a57:	(bad)  
   140052a58:	(bad)  
   140052a59:	(bad)  
   140052a5a:	(bad)  
   140052a5b:	(bad)  
   140052a5c:	(bad)  
   140052a5d:	(bad)  
   140052a5e:	(bad)  
   140052a5f:	(bad)  
   140052a60:	(bad)  
   140052a61:	(bad)  
   140052a62:	(bad)  
   140052a63:	(bad)  
   140052a64:	(bad)  
   140052a65:	(bad)  
   140052a66:	(bad)  
   140052a67:	(bad)  
   140052a68:	(bad)  
   140052a69:	(bad)  
   140052a6a:	(bad)  
   140052a6b:	(bad)  
   140052a6c:	(bad)  
   140052a6d:	(bad)  
   140052a6e:	(bad)  
   140052a6f:	(bad)  
   140052a70:	(bad)  
   140052a71:	(bad)  
   140052a72:	(bad)  
   140052a73:	(bad)  
   140052a74:	(bad)  
   140052a75:	(bad)  
   140052a76:	(bad)  
   140052a77:	(bad)  
   140052a78:	(bad)  
   140052a79:	(bad)  
   140052a7a:	(bad)  
   140052a7b:	(bad)  
   140052a7c:	(bad)  
   140052a7d:	(bad)  
   140052a7e:	(bad)  
   140052a7f:	(bad)  
   140052a80:	(bad)  
   140052a81:	(bad)  
   140052a82:	(bad)  
   140052a83:	(bad)  
   140052a84:	(bad)  
   140052a85:	(bad)  
   140052a86:	(bad)  
   140052a87:	(bad)  
   140052a88:	(bad)  
   140052a89:	(bad)  
   140052a8a:	(bad)  
   140052a8b:	(bad)  
   140052a8c:	(bad)  
   140052a8d:	(bad)  
   140052a8e:	(bad)  
   140052a8f:	jmp    rsi
   140052a91:	fcmovnbe st,st(6)
   140052a93:	call   FWORD PTR [rax-0x9a8d]
   140052a99:	(bad)  
   140052a9a:	(bad)  
   140052a9b:	(bad)  
   140052a9c:	(bad)  
   140052a9d:	(bad)  
   140052a9e:	(bad)  
   140052a9f:	(bad)  
   140052aa0:	(bad)  
   140052aa1:	(bad)  
   140052aa2:	(bad)  
   140052aa3:	(bad)  
   140052aa4:	(bad)  
   140052aa5:	(bad)  
   140052aa6:	(bad)  
   140052aa7:	(bad)  
   140052aa8:	(bad)  
   140052aa9:	(bad)  
   140052aaa:	(bad)  
   140052aab:	(bad)  
   140052aac:	(bad)  
   140052aad:	(bad)  
   140052aae:	(bad)  
   140052aaf:	(bad)  
   140052ab0:	(bad)  
   140052ab1:	(bad)  
   140052ab2:	(bad)  
   140052ab3:	(bad)  
   140052ab4:	(bad)  
   140052ab5:	(bad)  
   140052ab6:	(bad)  
   140052ab7:	(bad)  
   140052ab8:	(bad)  
   140052ab9:	(bad)  
   140052aba:	(bad)  
   140052abb:	(bad)  
   140052abc:	(bad)  
   140052abd:	(bad)  
   140052abe:	(bad)  
   140052abf:	(bad)  
   140052ac0:	(bad)  
   140052ac1:	(bad)  
   140052ac2:	(bad)  
   140052ac3:	(bad)  
   140052ac4:	(bad)  
   140052ac5:	(bad)  
   140052ac6:	(bad)  
   140052ac7:	(bad)  
   140052ac8:	(bad)  
   140052ac9:	(bad)  
   140052aca:	(bad)  
   140052acb:	(bad)  
   140052acc:	(bad)  
   140052acd:	(bad)  
   140052ace:	(bad)  
   140052acf:	(bad)  
   140052ad0:	(bad)  
   140052ad1:	(bad)  
   140052ad2:	(bad)  
   140052ad3:	(bad)  
   140052ad4:	(bad)  
   140052ad5:	(bad)  
   140052ad6:	(bad)  
   140052ad7:	(bad)  
   140052ad8:	(bad)  
   140052ad9:	(bad)  
   140052ada:	(bad)  
   140052adb:	call   rcx
   140052add:	mov    esp,0x3575ffb3
   140052ae2:	sbb    edi,edi
   140052ae4:	jp     0x140052b23
   140052ae6:	and    edi,edi
   140052ae8:	jp     0x140052b27
   140052aea:	and    edi,edi
   140052aec:	jae    0x140052b25
   140052aee:	and    bh,bh
   140052af0:	movsxd ebp,DWORD PTR [rip+0x2e63af1a]        # 0x16e68da10
   140052af6:	sbb    ch,BYTE PTR [rdx-0xdfc78d]
   140052afc:	jp     0x140052b3a
   140052afe:	and    edi,edi
   140052b00:	jp     0x140052b3e
   140052b02:	and    edi,edi
   140052b04:	js     0x140052b3f
   140052b06:	(bad)  
   140052b07:	(bad)  
   140052b08:	jp     0x140052b51
   140052b0a:	xor    edi,edi
   140052b0c:	cmc    
   140052b0d:	repnz icebp 
   140052b0f:	(bad)  
   140052b10:	(bad)  
   140052b11:	(bad)  
   140052b12:	(bad)  
   140052b13:	(bad)  
   140052b14:	(bad)  
   140052b15:	(bad)  
   140052b16:	(bad)  
   140052b17:	(bad)  
   140052b18:	(bad)  
   140052b19:	(bad)  
   140052b1a:	(bad)  
   140052b1b:	(bad)  
   140052b1c:	(bad)  
   140052b1d:	(bad)  
   140052b1e:	(bad)  
   140052b1f:	(bad)  
   140052b20:	(bad)  
   140052b21:	(bad)  
   140052b22:	(bad)  
   140052b23:	(bad)  
   140052b24:	(bad)  
   140052b25:	(bad)  
   140052b26:	(bad)  
   140052b27:	(bad)  
   140052b28:	(bad)  
   140052b29:	(bad)  
   140052b2a:	(bad)  
   140052b2b:	(bad)  
   140052b2c:	(bad)  
   140052b2d:	(bad)  
   140052b2e:	(bad)  
   140052b2f:	(bad)  
   140052b30:	(bad)  
   140052b31:	(bad)  
   140052b32:	(bad)  
   140052b33:	(bad)  
   140052b34:	(bad)  
   140052b35:	(bad)  
   140052b36:	(bad)  
   140052b37:	(bad)  
   140052b38:	(bad)  
   140052b39:	(bad)  
   140052b3a:	(bad)  
   140052b3b:	(bad)  
   140052b3c:	(bad)  
   140052b3d:	(bad)  
   140052b3e:	(bad)  
   140052b3f:	(bad)  
   140052b40:	(bad)  
   140052b41:	(bad)  
   140052b42:	(bad)  
   140052b43:	(bad)  
   140052b44:	(bad)  
   140052b45:	(bad)  
   140052b46:	(bad)  
   140052b47:	(bad)  
   140052b48:	(bad)  
   140052b49:	(bad)  
   140052b4a:	(bad)  
   140052b4b:	(bad)  
   140052b4c:	(bad)  
   140052b4d:	(bad)  
   140052b4e:	(bad)  
   140052b4f:	jmp    rbp
   140052b51:	fcmovnbe st,st(6)
   140052b53:	call   FWORD PTR [rax-0x9b8d]
   140052b59:	(bad)  
   140052b5a:	(bad)  
   140052b5b:	(bad)  
   140052b5c:	(bad)  
   140052b5d:	(bad)  
   140052b5e:	(bad)  
   140052b5f:	(bad)  
   140052b60:	(bad)  
   140052b61:	(bad)  
   140052b62:	(bad)  
   140052b63:	(bad)  
   140052b64:	(bad)  
   140052b65:	(bad)  
   140052b66:	(bad)  
   140052b67:	(bad)  
   140052b68:	(bad)  
   140052b69:	(bad)  
   140052b6a:	(bad)  
   140052b6b:	(bad)  
   140052b6c:	(bad)  
   140052b6d:	(bad)  
   140052b6e:	(bad)  
   140052b6f:	(bad)  
   140052b70:	(bad)  
   140052b71:	(bad)  
   140052b72:	(bad)  
   140052b73:	(bad)  
   140052b74:	(bad)  
   140052b75:	(bad)  
   140052b76:	(bad)  
   140052b77:	(bad)  
   140052b78:	(bad)  
   140052b79:	(bad)  
   140052b7a:	(bad)  
   140052b7b:	(bad)  
   140052b7c:	(bad)  
   140052b7d:	(bad)  
   140052b7e:	(bad)  
   140052b7f:	(bad)  
   140052b80:	(bad)  
   140052b81:	(bad)  
   140052b82:	(bad)  
   140052b83:	(bad)  
   140052b84:	(bad)  
   140052b85:	(bad)  
   140052b86:	(bad)  
   140052b87:	(bad)  
   140052b88:	(bad)  
   140052b89:	(bad)  
   140052b8a:	(bad)  
   140052b8b:	(bad)  
   140052b8c:	(bad)  
   140052b8d:	(bad)  
   140052b8e:	(bad)  
   140052b8f:	(bad)  
   140052b90:	(bad)  
   140052b91:	(bad)  
   140052b92:	(bad)  
   140052b93:	(bad)  
   140052b94:	(bad)  
   140052b95:	(bad)  
   140052b96:	(bad)  
   140052b97:	(bad)  
   140052b98:	(bad)  
   140052b99:	(bad)  
   140052b9a:	(bad)  
   140052b9b:	call   rcx
   140052b9d:	mov    esp,0x3475ffb3
   140052ba2:	sbb    edi,edi
   140052ba4:	jp     0x140052be2
   140052ba6:	and    edi,edi
   140052ba8:	jns    0x140052be6
   140052baa:	and    edi,edi
   140052bac:	jbe    0x140052be8
   140052bae:	and    bh,bh
   140052bb0:	gs (bad) 
   140052bb2:	sbb    edx,eax
   140052bb4:	fs cs sbb cl,bl
   140052bb8:	jne    0x140052bf3
   140052bba:	and    edi,edi
   140052bbc:	jns    0x140052bfa
   140052bbe:	and    edi,edi
   140052bc0:	jp     0x140052bff
   140052bc2:	and    edi,edi
   140052bc4:	js     0x140052c00
   140052bc6:	(bad)  
   140052bc7:	(bad)  
   140052bc8:	jp     0x140052c11
   140052bca:	xor    edi,edi
   140052bcc:	cmc    
   140052bcd:	repnz icebp 
   140052bcf:	(bad)  
   140052bd0:	(bad)  
   140052bd1:	(bad)  
   140052bd2:	(bad)  
   140052bd3:	(bad)  
   140052bd4:	(bad)  
   140052bd5:	(bad)  
   140052bd6:	(bad)  
   140052bd7:	(bad)  
   140052bd8:	(bad)  
   140052bd9:	(bad)  
   140052bda:	(bad)  
   140052bdb:	(bad)  
   140052bdc:	(bad)  
   140052bdd:	(bad)  
   140052bde:	(bad)  
   140052bdf:	(bad)  
   140052be0:	(bad)  
   140052be1:	(bad)  
   140052be2:	(bad)  
   140052be3:	(bad)  
   140052be4:	(bad)  
   140052be5:	(bad)  
   140052be6:	(bad)  
   140052be7:	(bad)  
   140052be8:	(bad)  
   140052be9:	(bad)  
   140052bea:	(bad)  
   140052beb:	(bad)  
   140052bec:	(bad)  
   140052bed:	(bad)  
   140052bee:	(bad)  
   140052bef:	(bad)  
   140052bf0:	(bad)  
   140052bf1:	(bad)  
   140052bf2:	(bad)  
   140052bf3:	(bad)  
   140052bf4:	cli    
   140052bf5:	stc    
   140052bf6:	clc    
   140052bf7:	jmp    rdx
   140052bf9:	(bad)  
   140052bfa:	sar    edi,1
   140052bfc:	shl    BYTE PTR [rsi-0x402a0056],1
   140052c02:	mov    ah,0xff
   140052c04:	repz in al,dx
   140052c06:	jmp    0x140052c0a
   140052c0b:	(bad)  
   140052c0c:	(bad)  
   140052c0d:	(bad)  
   140052c0e:	(bad)  
   140052c0f:	jmp    rsp
   140052c11:	fcmovbe st,st(5)
   140052c13:	call   QWORD PTR [rdi-0x9b8e]
   140052c19:	(bad)  
   140052c1a:	(bad)  
   140052c1b:	(bad)  
   140052c1c:	(bad)  
   140052c1d:	(bad)  
   140052c1e:	(bad)  
   140052c1f:	(bad)  
   140052c20:	(bad)  
   140052c21:	(bad)  
   140052c22:	(bad)  
   140052c23:	(bad)  
   140052c24:	(bad)  
   140052c25:	(bad)  
   140052c26:	(bad)  
   140052c27:	(bad)  
   140052c28:	(bad)  
   140052c29:	(bad)  
   140052c2a:	(bad)  
   140052c2b:	(bad)  
   140052c2c:	(bad)  
   140052c2d:	(bad)  
   140052c2e:	(bad)  
   140052c2f:	(bad)  
   140052c30:	(bad)  
   140052c31:	(bad)  
   140052c32:	(bad)  
   140052c33:	(bad)  
   140052c34:	(bad)  
   140052c35:	(bad)  
   140052c36:	(bad)  
   140052c37:	(bad)  
   140052c38:	(bad)  
   140052c39:	(bad)  
   140052c3a:	(bad)  
   140052c3b:	(bad)  
   140052c3c:	(bad)  
   140052c3d:	(bad)  
   140052c3e:	(bad)  
   140052c3f:	(bad)  
   140052c40:	(bad)  
   140052c41:	(bad)  
   140052c42:	(bad)  
   140052c43:	(bad)  
   140052c44:	(bad)  
   140052c45:	(bad)  
   140052c46:	(bad)  
   140052c47:	(bad)  
   140052c48:	(bad)  
   140052c49:	(bad)  
   140052c4a:	(bad)  
   140052c4b:	(bad)  
   140052c4c:	(bad)  
   140052c4d:	(bad)  
   140052c4e:	(bad)  
   140052c4f:	(bad)  
   140052c50:	(bad)  
   140052c51:	(bad)  
   140052c52:	(bad)  
   140052c53:	(bad)  
   140052c54:	(bad)  
   140052c55:	(bad)  
   140052c56:	(bad)  
   140052c57:	(bad)  
   140052c58:	(bad)  
   140052c59:	(bad)  
   140052c5a:	(bad)  
   140052c5b:	call   rcx
   140052c5d:	mov    esp,0x3575ffb3
   140052c62:	sbb    bh,bh
   140052c64:	jp     0x140052ca2
   140052c66:	and    al,0xff
   140052c68:	jns    0x140052ca6
   140052c6a:	and    edi,edi
   140052c6c:	ja     0x140052ca9
   140052c6e:	and    bh,bh
   140052c70:	data16 xor BYTE PTR [rbx],bl
   140052c73:	fsub   QWORD PTR [rbp+0x2f]
   140052c76:	sbb    esp,esp
   140052c78:	ja     0x140052cb4
   140052c7a:	and    bh,bh
   140052c7c:	jns    0x140052cba
   140052c7e:	and    edi,edi
   140052c80:	jns    0x140052cbe
   140052c82:	and    edi,edi
   140052c84:	ja     0x140052cbf
   140052c86:	(bad)  
   140052c87:	(bad)  
   140052c88:	jp     0x140052cd1
   140052c8a:	xor    edi,edi
   140052c8c:	cmc    
   140052c8d:	repnz icebp 
   140052c8f:	(bad)  
   140052c90:	(bad)  
   140052c91:	(bad)  
   140052c92:	(bad)  
   140052c93:	(bad)  
   140052c94:	(bad)  
   140052c95:	(bad)  
   140052c96:	(bad)  
   140052c97:	(bad)  
   140052c98:	(bad)  
   140052c99:	(bad)  
   140052c9a:	(bad)  
   140052c9b:	(bad)  
   140052c9c:	(bad)  
   140052c9d:	(bad)  
   140052c9e:	(bad)  
   140052c9f:	(bad)  
   140052ca0:	(bad)  
   140052ca1:	(bad)  
   140052ca2:	(bad)  
   140052ca3:	(bad)  
   140052ca4:	(bad)  
   140052ca5:	(bad)  
   140052ca6:	(bad)  
   140052ca7:	(bad)  
   140052ca8:	(bad)  
   140052ca9:	(bad)  
   140052caa:	(bad)  
   140052cab:	(bad)  
   140052cac:	(bad)  
   140052cad:	(bad)  
   140052cae:	(bad)  
   140052caf:	(bad)  
   140052cb0:	(bad)  
   140052cb1:	(bad)  
   140052cb2:	(bad)  
   140052cb3:	(bad)  
   140052cb4:	fmul   st,st(3)
   140052cb6:	(bad)  
   140052cb7:	push   QWORD PTR [rdx+0x40]
   140052cba:	sub    eax,0x92465ff
   140052cbf:	(bad)  
   140052cc0:	jnp    0x140052cfb
   140052cc2:	sbb    bh,bh
   140052cc4:	mov    WORD PTR [rdx+0x38],ss
   140052cc7:	(bad)  
   140052cc8:	(bad)  
   140052cca:	(bad)  
   140052ccb:	(bad)  
   140052ccc:	(bad)  
   140052ccd:	(bad)  
   140052cce:	(bad)  
   140052ccf:	jmp    rsp
   140052cd1:	(bad)  
   140052cd3:	call   QWORD PTR [rdi-0x9b8e]
   140052cd9:	(bad)  
   140052cda:	(bad)  
   140052cdb:	(bad)  
   140052cdc:	(bad)  
   140052cdd:	(bad)  
   140052cde:	(bad)  
   140052cdf:	(bad)  
   140052ce0:	(bad)  
   140052ce1:	(bad)  
   140052ce2:	(bad)  
   140052ce3:	(bad)  
   140052ce4:	(bad)  
   140052ce5:	(bad)  
   140052ce6:	(bad)  
   140052ce7:	(bad)  
   140052ce8:	(bad)  
   140052ce9:	(bad)  
   140052cea:	(bad)  
   140052ceb:	(bad)  
   140052cec:	(bad)  
   140052ced:	(bad)  
   140052cee:	(bad)  
   140052cef:	(bad)  
   140052cf0:	(bad)  
   140052cf1:	(bad)  
   140052cf2:	(bad)  
   140052cf3:	(bad)  
   140052cf4:	(bad)  
   140052cf5:	(bad)  
   140052cf6:	(bad)  
   140052cf7:	(bad)  
   140052cf8:	(bad)  
   140052cf9:	(bad)  
   140052cfa:	(bad)  
   140052cfb:	(bad)  
   140052cfc:	(bad)  
   140052cfd:	(bad)  
   140052cfe:	(bad)  
   140052cff:	(bad)  
   140052d00:	(bad)  
   140052d01:	(bad)  
   140052d02:	(bad)  
   140052d03:	(bad)  
   140052d04:	(bad)  
   140052d05:	(bad)  
   140052d06:	(bad)  
   140052d07:	(bad)  
   140052d08:	(bad)  
   140052d09:	(bad)  
   140052d0a:	(bad)  
   140052d0b:	(bad)  
   140052d0c:	(bad)  
   140052d0d:	(bad)  
   140052d0e:	(bad)  
   140052d0f:	(bad)  
   140052d10:	(bad)  
   140052d11:	(bad)  
   140052d12:	(bad)  
   140052d13:	(bad)  
   140052d14:	(bad)  
   140052d15:	(bad)  
   140052d16:	(bad)  
   140052d17:	(bad)  
   140052d18:	(bad)  
   140052d19:	(bad)  
   140052d1a:	(bad)  
   140052d1b:	call   rcx
   140052d1d:	mov    esp,0x3574ffb3
   140052d22:	sbb    bh,bh
   140052d24:	jp     0x140052d63
   140052d26:	and    al,0xff
   140052d28:	jp     0x140052d66
   140052d2a:	and    edi,edi
   140052d2c:	js     0x140052d69
   140052d2e:	and    bh,bh
   140052d30:	xor    BYTE PTR [ebx],bl
   140052d33:	call   0x12e205c9e
   140052d38:	ja     0x140052d74
   140052d3a:	and    bh,bh
   140052d3c:	jns    0x140052d7a
   140052d3e:	and    edi,edi
   140052d40:	jns    0x140052d7e
   140052d42:	and    edi,edi
   140052d44:	jbe    0x140052d7f
   140052d46:	(bad)  
   140052d47:	(bad)  
   140052d48:	jp     0x140052d91
   140052d4a:	xor    edi,edi
   140052d4c:	cmc    
   140052d4d:	repnz icebp 
   140052d4f:	(bad)  
   140052d50:	(bad)  
   140052d51:	(bad)  
   140052d52:	(bad)  
   140052d53:	(bad)  
   140052d54:	(bad)  
   140052d55:	(bad)  
   140052d56:	(bad)  
   140052d57:	(bad)  
   140052d58:	(bad)  
   140052d59:	(bad)  
   140052d5a:	(bad)  
   140052d5b:	(bad)  
   140052d5c:	(bad)  
   140052d5d:	(bad)  
   140052d5e:	(bad)  
   140052d5f:	(bad)  
   140052d60:	(bad)  
   140052d61:	(bad)  
   140052d62:	(bad)  
   140052d63:	(bad)  
   140052d64:	(bad)  
   140052d65:	(bad)  
   140052d66:	(bad)  
   140052d67:	(bad)  
   140052d68:	(bad)  
   140052d69:	(bad)  
   140052d6a:	(bad)  
   140052d6b:	(bad)  
   140052d6c:	(bad)  
   140052d6d:	(bad)  
   140052d6e:	(bad)  
   140052d6f:	(bad)  
   140052d70:	(bad)  
   140052d71:	(bad)  
   140052d72:	(bad)  
   140052d73:	(bad)  
   140052d74:	(bad)  
   140052d75:	(bad)  
   140052d76:	(bad)  
   140052d77:	(bad)  
   140052d78:	in     eax,dx
   140052d79:	out    0xe5,eax
   140052d7b:	(bad)  
   140052d7c:	mov    ebp,0x8dff9aa4
   140052d81:	push   rsi
   140052d82:	(bad)  
   140052d83:	push   QWORD PTR [rsi+0x35]
   140052d86:	sbb    bh,bh
   140052d88:	test   BYTE PTR [rbp+0x35],cl
   140052d8b:	push   rdx
   140052d8d:	in     eax,dx
   140052d8e:	jmp    0x140052d8f
   140052d90:	out    0xde,eax
   140052d92:	(bad)  
   140052d94:	xchg   esi,eax
   140052d95:	jno    0x140052dfb
   140052d97:	(bad)  
   140052d98:	(bad)  
   140052d99:	(bad)  
   140052d9a:	(bad)  
   140052d9b:	(bad)  
   140052d9c:	(bad)  
   140052d9d:	(bad)  
   140052d9e:	(bad)  
   140052d9f:	(bad)  
   140052da0:	(bad)  
   140052da1:	(bad)  
   140052da2:	(bad)  
   140052da3:	(bad)  
   140052da4:	(bad)  
   140052da5:	(bad)  
   140052da6:	(bad)  
   140052da7:	(bad)  
   140052da8:	(bad)  
   140052da9:	(bad)  
   140052daa:	(bad)  
   140052dab:	(bad)  
   140052dac:	(bad)  
   140052dad:	(bad)  
   140052dae:	(bad)  
   140052daf:	(bad)  
   140052db0:	(bad)  
   140052db1:	(bad)  
   140052db2:	(bad)  
   140052db3:	(bad)  
   140052db4:	(bad)  
   140052db5:	(bad)  
   140052db6:	(bad)  
   140052db7:	(bad)  
   140052db8:	(bad)  
   140052db9:	(bad)  
   140052dba:	(bad)  
   140052dbb:	(bad)  
   140052dbc:	(bad)  
   140052dbd:	(bad)  
   140052dbe:	(bad)  
   140052dbf:	(bad)  
   140052dc0:	(bad)  
   140052dc1:	(bad)  
   140052dc2:	(bad)  
   140052dc3:	(bad)  
   140052dc4:	(bad)  
   140052dc5:	(bad)  
   140052dc6:	(bad)  
   140052dc7:	(bad)  
   140052dc8:	(bad)  
   140052dc9:	(bad)  
   140052dca:	(bad)  
   140052dcb:	(bad)  
   140052dcc:	(bad)  
   140052dcd:	(bad)  
   140052dce:	(bad)  
   140052dcf:	(bad)  
   140052dd0:	(bad)  
   140052dd1:	(bad)  
   140052dd2:	(bad)  
   140052dd3:	(bad)  
   140052dd4:	(bad)  
   140052dd5:	(bad)  
   140052dd6:	(bad)  
   140052dd7:	(bad)  
   140052dd8:	(bad)  
   140052dd9:	(bad)  
   140052dda:	(bad)  
   140052ddb:	call   rcx
   140052ddd:	mov    esp,0x3474ffb3
   140052de2:	sbb    bh,bh
   140052de4:	jns    0x140052e22
   140052de6:	and    edi,edi
   140052de8:	jns    0x140052e26
   140052dea:	and    edi,edi
   140052dec:	js     0x140052e29
   140052dee:	and    bh,bh
   140052df0:	push   0x66ee1b30
   140052df5:	(bad)  
   140052df6:	sbb    ebp,esi
   140052df8:	ja     0x140052e34
   140052dfa:	and    bh,bh
   140052dfc:	js     0x140052e39
   140052dfe:	and    bh,bh
   140052e00:	js     0x140052e3d
   140052e02:	and    bh,bh
   140052e04:	jne    0x140052e3d
   140052e06:	sbb    eax,0x324679ff
   140052e0b:	push   rbp
   140052e0d:	repnz icebp 
   140052e0f:	(bad)  
   140052e10:	(bad)  
   140052e11:	(bad)  
   140052e12:	(bad)  
   140052e13:	(bad)  
   140052e14:	(bad)  
   140052e15:	(bad)  
   140052e16:	(bad)  
   140052e17:	(bad)  
   140052e18:	(bad)  
   140052e19:	(bad)  
   140052e1a:	(bad)  
   140052e1b:	(bad)  
   140052e1c:	(bad)  
   140052e1d:	(bad)  
   140052e1e:	(bad)  
   140052e1f:	(bad)  
   140052e20:	(bad)  
   140052e21:	(bad)  
   140052e22:	(bad)  
   140052e23:	(bad)  
   140052e24:	(bad)  
   140052e25:	(bad)  
   140052e26:	(bad)  
   140052e27:	(bad)  
   140052e28:	(bad)  
   140052e29:	(bad)  
   140052e2a:	(bad)  
   140052e2b:	(bad)  
   140052e2c:	(bad)  
   140052e2d:	(bad)  
   140052e2e:	(bad)  
   140052e2f:	(bad)  
   140052e30:	(bad)  
   140052e31:	(bad)  
   140052e32:	(bad)  
   140052e33:	(bad)  
   140052e34:	(bad)  
   140052e35:	(bad)  
   140052e36:	(bad)  
   140052e37:	(bad)  
   140052e38:	(bad)  
   140052e39:	(bad)  
   140052e3a:	(bad)  
   140052e3b:	(bad)  
   140052e3c:	(bad)  
   140052e3d:	(bad)  
   140052e3e:	(bad)  
   140052e3f:	jmp    FWORD PTR [rdx+0x72ff7383]
   140052e45:	xor    dl,BYTE PTR [rdi]
   140052e47:	push   QWORD PTR [rcx+0x2f]
   140052e4a:	adc    al,0xff
   140052e4c:	sar    BYTE PTR [rbx-0x120e004e],1
   140052e52:	jmp    0x140052e53
   140052e54:	(bad)  
   140052e55:	je     0x140052ebd
   140052e57:	(bad)  
   140052e58:	(bad)  
   140052e59:	(bad)  
   140052e5a:	(bad)  
   140052e5b:	(bad)  
   140052e5c:	(bad)  
   140052e5d:	(bad)  
   140052e5e:	(bad)  
   140052e5f:	(bad)  
   140052e60:	(bad)  
   140052e61:	(bad)  
   140052e62:	(bad)  
   140052e63:	(bad)  
   140052e64:	(bad)  
   140052e65:	(bad)  
   140052e66:	(bad)  
   140052e67:	(bad)  
   140052e68:	(bad)  
   140052e69:	(bad)  
   140052e6a:	(bad)  
   140052e6b:	(bad)  
   140052e6c:	(bad)  
   140052e6d:	(bad)  
   140052e6e:	(bad)  
   140052e6f:	(bad)  
   140052e70:	(bad)  
   140052e71:	(bad)  
   140052e72:	(bad)  
   140052e73:	(bad)  
   140052e74:	(bad)  
   140052e75:	(bad)  
   140052e76:	(bad)  
   140052e77:	(bad)  
   140052e78:	(bad)  
   140052e79:	(bad)  
   140052e7a:	(bad)  
   140052e7b:	(bad)  
   140052e7c:	(bad)  
   140052e7d:	(bad)  
   140052e7e:	(bad)  
   140052e7f:	(bad)  
   140052e80:	(bad)  
   140052e81:	(bad)  
   140052e82:	(bad)  
   140052e83:	(bad)  
   140052e84:	(bad)  
   140052e85:	(bad)  
   140052e86:	(bad)  
   140052e87:	(bad)  
   140052e88:	(bad)  
   140052e89:	(bad)  
   140052e8a:	(bad)  
   140052e8b:	(bad)  
   140052e8c:	(bad)  
   140052e8d:	(bad)  
   140052e8e:	(bad)  
   140052e8f:	(bad)  
   140052e90:	(bad)  
   140052e91:	(bad)  
   140052e92:	(bad)  
   140052e93:	(bad)  
   140052e94:	(bad)  
   140052e95:	(bad)  
   140052e96:	(bad)  
   140052e97:	(bad)  
   140052e98:	(bad)  
   140052e99:	(bad)  
   140052e9a:	(bad)  
   140052e9b:	call   rcx
   140052e9d:	mov    ebx,0x3474ffb2
   140052ea2:	sbb    edi,edi
   140052ea4:	jns    0x140052ee2
   140052ea6:	and    edi,edi
   140052ea8:	jns    0x140052ee6
   140052eaa:	and    edi,edi
   140052eac:	js     0x140052ee9
   140052eae:	and    bh,bh
   140052eb0:	push   0x65ee1b30
   140052eb5:	(bad)  
   140052eb6:	sbb    esp,esp
   140052eb8:	ja     0x140052ef4
   140052eba:	and    edi,edi
   140052ebc:	jns    0x140052ef9
   140052ebe:	and    bh,bh
   140052ec0:	jns    0x140052efd
   140052ec2:	and    bh,bh
   140052ec4:	jbe    0x140052efd
   140052ec6:	sbb    eax,0x324679ff
   140052ecb:	push   rbp
   140052ecd:	repnz icebp 
   140052ecf:	(bad)  
   140052ed0:	(bad)  
   140052ed1:	(bad)  
   140052ed2:	(bad)  
   140052ed3:	(bad)  
   140052ed4:	(bad)  
   140052ed5:	(bad)  
   140052ed6:	(bad)  
   140052ed7:	(bad)  
   140052ed8:	(bad)  
   140052ed9:	(bad)  
   140052eda:	(bad)  
   140052edb:	(bad)  
   140052edc:	(bad)  
   140052edd:	(bad)  
   140052ede:	(bad)  
   140052edf:	(bad)  
   140052ee0:	(bad)  
   140052ee1:	(bad)  
   140052ee2:	(bad)  
   140052ee3:	(bad)  
   140052ee4:	(bad)  
   140052ee5:	(bad)  
   140052ee6:	(bad)  
   140052ee7:	(bad)  
   140052ee8:	(bad)  
   140052ee9:	(bad)  
   140052eea:	(bad)  
   140052eeb:	(bad)  
   140052eec:	(bad)  
   140052eed:	(bad)  
   140052eee:	(bad)  
   140052eef:	(bad)  
   140052ef0:	(bad)  
   140052ef1:	(bad)  
   140052ef2:	(bad)  
   140052ef3:	(bad)  
   140052ef4:	(bad)  
   140052ef5:	(bad)  
   140052ef6:	(bad)  
   140052ef7:	(bad)  
   140052ef8:	(bad)  
   140052ef9:	(bad)  
   140052efa:	(bad)  
   140052efb:	(bad)  
   140052efc:	in     al,dx
   140052efd:	jrcxz  0x140052ede
   140052eff:	inc    DWORD PTR [rcx+0x7aff2e46]
   140052f05:	cmp    al,0x23
   140052f07:	(bad)  
   140052f08:	jnp    0x140052f47
   140052f0a:	and    al,0xff
   140052f0c:	lea    ebx,[rax+0x43]
   140052f0f:	push   QWORD PTR [rdx-0x56007f71]
   140052f15:	xor    DWORD PTR [rcx-0x1],0xffffffff
   140052f1c:	(bad)  
   140052f1d:	(bad)  
   140052f1e:	(bad)  
   140052f1f:	(bad)  
   140052f20:	(bad)  
   140052f21:	(bad)  
   140052f22:	(bad)  
   140052f23:	(bad)  
   140052f24:	(bad)  
   140052f25:	(bad)  
   140052f26:	(bad)  
   140052f27:	(bad)  
   140052f28:	(bad)  
   140052f29:	(bad)  
   140052f2a:	(bad)  
   140052f2b:	(bad)  
   140052f2c:	(bad)  
   140052f2d:	(bad)  
   140052f2e:	(bad)  
   140052f2f:	(bad)  
   140052f30:	(bad)  
   140052f31:	(bad)  
   140052f32:	(bad)  
   140052f33:	(bad)  
   140052f34:	(bad)  
   140052f35:	(bad)  
   140052f36:	(bad)  
   140052f37:	(bad)  
   140052f38:	(bad)  
   140052f39:	(bad)  
   140052f3a:	(bad)  
   140052f3b:	(bad)  
   140052f3c:	(bad)  
   140052f3d:	(bad)  
   140052f3e:	(bad)  
   140052f3f:	(bad)  
   140052f40:	(bad)  
   140052f41:	(bad)  
   140052f42:	(bad)  
   140052f43:	(bad)  
   140052f44:	(bad)  
   140052f45:	(bad)  
   140052f46:	(bad)  
   140052f47:	(bad)  
   140052f48:	(bad)  
   140052f49:	(bad)  
   140052f4a:	(bad)  
   140052f4b:	(bad)  
   140052f4c:	(bad)  
   140052f4d:	(bad)  
   140052f4e:	(bad)  
   140052f4f:	(bad)  
   140052f50:	(bad)  
   140052f51:	(bad)  
   140052f52:	(bad)  
   140052f53:	(bad)  
   140052f54:	(bad)  
   140052f55:	(bad)  
   140052f56:	(bad)  
   140052f57:	(bad)  
   140052f58:	(bad)  
   140052f59:	(bad)  
   140052f5a:	(bad)  
   140052f5b:	call   rax
   140052f5d:	mov    ebx,0x3273ffb2
   140052f62:	sbb    bh,bh
   140052f64:	jns    0x140052fa1
   140052f66:	and    bh,bh
   140052f68:	jns    0x140052fa5
   140052f6a:	and    bh,bh
   140052f6c:	js     0x140052fa9
   140052f6e:	and    bh,bh
   140052f70:	xor    BYTE PTR [ebx],bl
   140052f73:	call   0x1081f5ddc
   140052f78:	jne    0x140052fb3
   140052f7a:	and    edi,edi
   140052f7c:	jns    0x140052fb9
   140052f7e:	and    bh,bh
   140052f80:	jns    0x140052fbd
   140052f82:	and    bh,bh
   140052f84:	jbe    0x140052fbd
   140052f86:	sbb    eax,0x324679ff
   140052f8b:	push   rbp
   140052f8d:	repnz icebp 
   140052f8f:	(bad)  
   140052f90:	(bad)  
   140052f91:	(bad)  
   140052f92:	(bad)  
   140052f93:	(bad)  
   140052f94:	(bad)  
   140052f95:	(bad)  
   140052f96:	(bad)  
   140052f97:	(bad)  
   140052f98:	(bad)  
   140052f99:	(bad)  
   140052f9a:	(bad)  
   140052f9b:	(bad)  
   140052f9c:	(bad)  
   140052f9d:	(bad)  
   140052f9e:	(bad)  
   140052f9f:	(bad)  
   140052fa0:	(bad)  
   140052fa1:	(bad)  
   140052fa2:	(bad)  
   140052fa3:	(bad)  
   140052fa4:	(bad)  
   140052fa5:	(bad)  
   140052fa6:	(bad)  
   140052fa7:	(bad)  
   140052fa8:	(bad)  
   140052fa9:	(bad)  
   140052faa:	(bad)  
   140052fab:	(bad)  
   140052fac:	jmp    0x10a050a8f
   140052fb1:	mov    al,0xa5
   140052fb3:	(bad)  
   140052fb4:	cli    
   140052fb5:	div    esi
   140052fb7:	(bad)  
   140052fb8:	(bad)  
   140052fb9:	(bad)  
   140052fba:	(bad)  
   140052fbb:	(bad)  
   140052fbc:	mov    edi,0x78ff95a0
   140052fc1:	cmp    ah,BYTE PTR [rax]
   140052fc3:	inc    DWORD PTR [rbx-0x7c00ceb8]
   140052fc9:	xor    rdi,rdi
   140052fcc:	add    BYTE PTR [rbp+0x2d],0xff
   140052fd0:	jl     0x140053011
   140052fd2:	(bad)  
   140052fd3:	dec    DWORD PTR [rbx-0x4900bfab]
   140052fd9:	xchg   ebx,eax
   140052fda:	test   edi,edi
   140052fdc:	out    0xdd,eax
   140052fde:	fdivr  st,st(7)
   140052fe0:	(bad)  
   140052fe1:	(bad)  
   140052fe2:	(bad)  
   140052fe3:	(bad)  
   140052fe4:	(bad)  
   140052fe5:	(bad)  
   140052fe6:	(bad)  
   140052fe7:	(bad)  
   140052fe8:	(bad)  
   140052fe9:	(bad)  
   140052fea:	(bad)  
   140052feb:	(bad)  
   140052fec:	(bad)  
   140052fed:	(bad)  
   140052fee:	(bad)  
   140052fef:	(bad)  
   140052ff0:	(bad)  
   140052ff1:	(bad)  
   140052ff2:	(bad)  
   140052ff3:	(bad)  
   140052ff4:	(bad)  
   140052ff5:	(bad)  
   140052ff6:	(bad)  
   140052ff7:	(bad)  
   140052ff8:	(bad)  
   140052ff9:	(bad)  
   140052ffa:	(bad)  
   140052ffb:	(bad)  
   140052ffc:	(bad)  
   140052ffd:	(bad)  
   140052ffe:	(bad)  
   140052fff:	(bad)  
   140053000:	(bad)  
   140053001:	(bad)  
   140053002:	(bad)  
   140053003:	(bad)  
   140053004:	(bad)  
   140053005:	(bad)  
   140053006:	(bad)  
   140053007:	(bad)  
   140053008:	(bad)  
   140053009:	(bad)  
   14005300a:	(bad)  
   14005300b:	(bad)  
   14005300c:	(bad)  
   14005300d:	(bad)  
   14005300e:	(bad)  
   14005300f:	(bad)  
   140053010:	(bad)  
   140053011:	(bad)  
   140053012:	(bad)  
   140053013:	(bad)  
   140053014:	(bad)  
   140053015:	(bad)  
   140053016:	(bad)  
   140053017:	(bad)  
   140053018:	(bad)  
   140053019:	(bad)  
   14005301a:	(bad)  
   14005301b:	call   rax
   14005301d:	mov    ebx,0x3273ffb2
   140053022:	sbb    bh,bh
   140053024:	jns    0x140053061
   140053026:	and    bh,bh
   140053028:	jns    0x140053065
   14005302a:	and    bh,bh
   14005302c:	ja     0x140053069
   14005302e:	and    bh,bh
   140053030:	xor    BYTE PTR [ebx],bl
   140053033:	fisub  DWORD PTR [rbx+0x2d]
   140053036:	sbb    ah,BYTE PTR [rdx-0xdfc88e]
   14005303c:	jns    0x14005307a
   14005303e:	and    bh,bh
   140053040:	jns    0x14005307d
   140053042:	and    bh,bh
   140053044:	jbe    0x14005307d
   140053046:	sbb    eax,0x324679ff
   14005304b:	push   rbp
   14005304d:	repnz icebp 
   14005304f:	(bad)  
   140053050:	(bad)  
   140053051:	(bad)  
   140053052:	(bad)  
   140053053:	(bad)  
   140053054:	(bad)  
   140053055:	(bad)  
   140053056:	(bad)  
   140053057:	(bad)  
   140053058:	(bad)  
   140053059:	(bad)  
   14005305a:	(bad)  
   14005305b:	(bad)  
   14005305c:	(bad)  
   14005305d:	(bad)  
   14005305e:	(bad)  
   14005305f:	(bad)  
   140053060:	(bad)  
   140053061:	(bad)  
   140053062:	(bad)  
   140053063:	(bad)  
   140053064:	(bad)  
   140053065:	(bad)  
   140053066:	(bad)  
   140053067:	(bad)  
   140053068:	(bad)  
   140053069:	(bad)  
   14005306a:	(bad)  
   14005306b:	(bad)  
   14005306c:	(bad)  
   14005306d:	loop   0x14005304e
   14005306f:	(bad)  
   140053070:	js     0x1400530af
   140053072:	call   QWORD PTR es:[rcx+riz*2-0x624200b4]
   14005307a:	nop
   14005307b:	call   QWORD PTR [rdx-0x7e00b6a2]
   140053081:	xor    rdi,rdi
   140053084:	or     DWORD PTR [rcx+0x33],0x3b528aff
   14005308b:	dec    DWORD PTR [rbx-0x7500c2ac]
   140053091:	push   rbx
   140053092:	cmp    eax,0x3c5289ff
   140053097:	inc    DWORD PTR [rdx+rcx*2+0x588dff33]
   14005309e:	rex.XB jmp FWORD PTR [r13-0x1d008779]
   1400530a5:	(bad)  
   1400530a6:	iret   
   1400530a7:	(bad)  
   1400530a8:	call   0xf8050a8a
   1400530ad:	xchg   esi,eax
   1400530ae:	mov    bh,bh
   1400530b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400530b1:	jl     0x14005311e
   1400530b3:	push   QWORD PTR [rdx-0x1b008072]
   1400530b9:	xlat   BYTE PTR ds:[rbx]
   1400530ba:	sar    bh,cl
   1400530bc:	(bad)  
   1400530bd:	(bad)  
   1400530be:	(bad)  
   1400530bf:	(bad)  
   1400530c0:	(bad)  
   1400530c1:	(bad)  
   1400530c2:	(bad)  
   1400530c3:	(bad)  
   1400530c4:	(bad)  
   1400530c5:	(bad)  
   1400530c6:	(bad)  
   1400530c7:	(bad)  
   1400530c8:	(bad)  
   1400530c9:	(bad)  
   1400530ca:	(bad)  
   1400530cb:	(bad)  
   1400530cc:	(bad)  
   1400530cd:	(bad)  
   1400530ce:	(bad)  
   1400530cf:	(bad)  
   1400530d0:	(bad)  
   1400530d1:	(bad)  
   1400530d2:	(bad)  
   1400530d3:	(bad)  
   1400530d4:	(bad)  
   1400530d5:	(bad)  
   1400530d6:	(bad)  
   1400530d7:	(bad)  
   1400530d8:	(bad)  
   1400530d9:	(bad)  
   1400530da:	(bad)  
   1400530db:	call   rax
   1400530dd:	mov    ebx,0x3273ffb2
   1400530e2:	sbb    bh,bh
   1400530e4:	jns    0x140053121
   1400530e6:	and    bh,bh
   1400530e8:	jns    0x140053125
   1400530ea:	and    bh,bh
   1400530ec:	jbe    0x140053127
   1400530ee:	and    edi,edi
   1400530f0:	gs (bad) 
   1400530f2:	sbb    cl,ch
   1400530f4:	movsxd ebp,DWORD PTR [rip+0x3670761a]        # 0x17675a714
   1400530fa:	(bad)  
   1400530fb:	(bad)  
   1400530fc:	jp     0x14005313a
   1400530fe:	and    bh,bh
   140053100:	jns    0x14005313d
   140053102:	and    bh,bh
   140053104:	jbe    0x14005313d
   140053106:	sbb    eax,0x324679ff
   14005310b:	push   rbp
   14005310d:	repnz icebp 
   14005310f:	(bad)  
   140053110:	(bad)  
   140053111:	(bad)  
   140053112:	(bad)  
   140053113:	(bad)  
   140053114:	(bad)  
   140053115:	(bad)  
   140053116:	(bad)  
   140053117:	(bad)  
   140053118:	(bad)  
   140053119:	(bad)  
   14005311a:	(bad)  
   14005311b:	(bad)  
   14005311c:	(bad)  
   14005311d:	(bad)  
   14005311e:	(bad)  
   14005311f:	(bad)  
   140053120:	(bad)  
   140053121:	(bad)  
   140053122:	(bad)  
   140053123:	(bad)  
   140053124:	(bad)  
   140053125:	(bad)  
   140053126:	(bad)  
   140053127:	(bad)  
   140053128:	(bad)  
   140053129:	(bad)  
   14005312a:	(bad)  
   14005312b:	(bad)  
   14005312c:	(bad)  
   14005312d:	(bad)  
   14005312e:	(bad)  
   14005312f:	push   QWORD PTR [rbx+0x62ff8f99]
   140053135:	ud0    ebp,DWORD PTR es:[rbp+0x30]
   14005313a:	sbb    edi,edi
   14005313c:	jno    0x140053177
   14005313e:	and    edi,edi
   140053140:	(bad)  
   140053141:	sub    DWORD PTR [rbx],edx
   140053143:	jmp    QWORD PTR [rax+0x29]
   140053146:	adc    al,0xff
   140053148:	ins    BYTE PTR es:[rdi],dx
   140053149:	xor    al,0x1f
   14005314b:	(bad)  
   14005314c:	jg     0x140053196
   14005314e:	xor    edi,edi
   140053150:	(bad)  
   140053151:	pop    rbx
   140053152:	rex.RX call QWORD PTR [rdx-0x6d00b5a1]
   140053159:	pop    rsi
   14005315a:	rex.WX call QWORD PTR [rax-0x7200b7a3]
   140053161:	pop    rax
   140053162:	rex.XB call QWORD PTR [r10-0x6a00b4a1]
   140053169:	fs push rax
   14005316b:	dec    DWORD PTR [rsi+0x6fff455a]
   140053171:	cmp    BYTE PTR [rbx],ah
   140053173:	push   QWORD PTR [rcx+0x39]
   140053176:	and    bh,bh
   140053178:	mov    ds,WORD PTR [rdi+rax*2-0x1]
   14005317c:	fcmovne st,st(2)
   14005317e:	ret    
   14005317f:	(bad)  
   140053180:	(bad)  
   140053181:	(bad)  
   140053182:	(bad)  
   140053183:	(bad)  
   140053184:	(bad)  
   140053185:	(bad)  
   140053186:	(bad)  
   140053187:	(bad)  
   140053188:	(bad)  
   140053189:	(bad)  
   14005318a:	(bad)  
   14005318b:	(bad)  
   14005318c:	(bad)  
   14005318d:	(bad)  
   14005318e:	(bad)  
   14005318f:	(bad)  
   140053190:	(bad)  
   140053191:	(bad)  
   140053192:	(bad)  
   140053193:	(bad)  
   140053194:	(bad)  
   140053195:	(bad)  
   140053196:	(bad)  
   140053197:	(bad)  
   140053198:	(bad)  
   140053199:	(bad)  
   14005319a:	(bad)  
   14005319b:	call   rax
   14005319d:	mov    ebx,0x3273ffb2
   1400531a2:	sbb    bh,bh
   1400531a4:	jns    0x1400531e1
   1400531a6:	and    bh,bh
   1400531a8:	jp     0x1400531e6
   1400531aa:	and    bh,bh
   1400531ac:	jb     0x1400531e5
   1400531ae:	and    bh,bh
   1400531b0:	movsxd ebp,DWORD PTR [rip+0x2d63ab1a]        # 0x16d68dcd0
   1400531b6:	sbb    dl,BYTE PTR [rbx+0x6c]
   1400531b9:	xor    ebx,DWORD PTR [rip+0x223c79ff]        # 0x16241abbe
   1400531bf:	(bad)  
   1400531c0:	jns    0x1400531fd
   1400531c2:	and    bh,bh
   1400531c4:	jbe    0x1400531fd
   1400531c6:	sbb    eax,0x324679ff
   1400531cb:	push   rbp
   1400531cd:	repnz icebp 
   1400531cf:	(bad)  
   1400531d0:	(bad)  
   1400531d1:	(bad)  
   1400531d2:	(bad)  
   1400531d3:	(bad)  
   1400531d4:	(bad)  
   1400531d5:	(bad)  
   1400531d6:	(bad)  
   1400531d7:	(bad)  
   1400531d8:	(bad)  
   1400531d9:	(bad)  
   1400531da:	(bad)  
   1400531db:	(bad)  
   1400531dc:	(bad)  
   1400531dd:	(bad)  
   1400531de:	(bad)  
   1400531df:	(bad)  
   1400531e0:	(bad)  
   1400531e1:	(bad)  
   1400531e2:	(bad)  
   1400531e3:	(bad)  
   1400531e4:	(bad)  
   1400531e5:	(bad)  
   1400531e6:	(bad)  
   1400531e7:	(bad)  
   1400531e8:	(bad)  
   1400531e9:	(bad)  
   1400531ea:	(bad)  
   1400531eb:	(bad)  
   1400531ec:	(bad)  
   1400531ed:	(bad)  
   1400531ee:	(bad)  
   1400531ef:	(bad)  
   1400531f0:	(bad)  
   1400531f1:	(bad)  
   1400531f2:	(bad)  
   1400531f3:	inc    eax
   1400531f5:	stos   DWORD PTR es:[rdi],eax
   1400531f6:	movabs ds:0x2d3e70ff43547fff,eax
   1400531ff:	call   QWORD PTR [rdi-0x2d00998d]
   140053205:	ret    
   140053206:	mov    ebp,0xa3abc0ff
   14005320b:	(bad)  
   14005320c:	jle    0x140053260
   14005320e:	inc    DWORD PTR [rax+r10*2+0x5386ff3c]
   140053216:	notrack call QWORD PTR [rbx+riz*2+0x6a9aff4e]
   14005321e:	push   rsi
   14005321f:	call   FWORD PTR [rax-0x6700aa98]
   140053225:	push   0x6d9cff55
   14005322a:	pop    rdx
   14005322b:	inc    DWORD PTR [rbp+0x70ff3f53]
   140053231:	(bad)  
   140053232:	call   FWORD PTR cs:[rbp+0x6dff6e7b]
   140053239:	cmp    BYTE PTR [rip+0x314476ff],ah        # 0x17149a93e
   14005323f:	push   rdx
   140053241:	in     eax,dx
   140053242:	in     al,dx
   140053243:	(bad)  
   140053244:	(bad)  
   140053245:	(bad)  
   140053246:	(bad)  
   140053247:	(bad)  
   140053248:	(bad)  
   140053249:	(bad)  
   14005324a:	(bad)  
   14005324b:	(bad)  
   14005324c:	(bad)  
   14005324d:	(bad)  
   14005324e:	(bad)  
   14005324f:	(bad)  
   140053250:	(bad)  
   140053251:	(bad)  
   140053252:	(bad)  
   140053253:	(bad)  
   140053254:	(bad)  
   140053255:	(bad)  
   140053256:	(bad)  
   140053257:	(bad)  
   140053258:	(bad)  
   140053259:	(bad)  
   14005325a:	(bad)  
   14005325b:	call   rax
   14005325d:	mov    ebx,0x3273ffb2
   140053262:	sbb    bh,bh
   140053264:	jns    0x1400532a1
   140053266:	and    bh,bh
   140053268:	jp     0x1400532a6
   14005326a:	and    bh,bh
   14005326c:	ins    DWORD PTR es:[rdi],dx
   14005326d:	xor    al,0x1e
   14005326f:	jmp    QWORD PTR [rbx+0x2d]
   140053272:	sbb    ah,BYTE PTR [rdx+0x64]
   140053275:	sbb    bl,BYTE PTR cs:[rdx]
   140053278:	data16 xor BYTE PTR [rbx],bl
   14005327b:	out    dx,eax
   14005327c:	ja     0x1400532b9
   14005327e:	and    bh,bh
   140053280:	jns    0x1400532bd
   140053282:	and    bh,bh
   140053284:	jbe    0x1400532bd
   140053286:	sbb    eax,0x324679ff
   14005328b:	push   rbp
   14005328d:	repnz icebp 
   14005328f:	(bad)  
   140053290:	(bad)  
   140053291:	(bad)  
   140053292:	(bad)  
   140053293:	(bad)  
   140053294:	(bad)  
   140053295:	(bad)  
   140053296:	(bad)  
   140053297:	(bad)  
   140053298:	(bad)  
   140053299:	(bad)  
   14005329a:	(bad)  
   14005329b:	(bad)  
   14005329c:	(bad)  
   14005329d:	(bad)  
   14005329e:	(bad)  
   14005329f:	(bad)  
   1400532a0:	(bad)  
   1400532a1:	(bad)  
   1400532a2:	(bad)  
   1400532a3:	(bad)  
   1400532a4:	(bad)  
   1400532a5:	(bad)  
   1400532a6:	(bad)  
   1400532a7:	(bad)  
   1400532a8:	(bad)  
   1400532a9:	(bad)  
   1400532aa:	(bad)  
   1400532ab:	(bad)  
   1400532ac:	(bad)  
   1400532ad:	(bad)  
   1400532ae:	(bad)  
   1400532af:	(bad)  
   1400532b0:	(bad)  
   1400532b1:	(bad)  
   1400532b2:	(bad)  
   1400532b3:	(bad)  
   1400532b4:	(bad)  
   1400532b5:	(bad)  
   1400532b6:	(bad)  
   1400532b7:	(bad)  
   1400532b8:	(bad)  
   1400532b9:	(bad)  
   1400532ba:	(bad)  
   1400532bb:	push   rdi
   1400532bd:	hlt    
   1400532be:	repz (bad) 
   1400532c0:	(bad)  
   1400532c1:	(bad)  
   1400532c2:	(bad)  
   1400532c3:	(bad)  
   1400532c4:	(bad)  
   1400532c5:	(bad)  
   1400532c6:	(bad)  
   1400532c7:	(bad)  
   1400532c8:	(bad)  
   1400532c9:	(bad)  
   1400532ca:	(bad)  
   1400532cb:	(bad)  
   1400532cc:	cli    
   1400532cd:	stc    
   1400532ce:	clc    
   1400532cf:	call   rbx
   1400532d1:	sar    DWORD PTR [rdx+0x2a3d6fff],0xff
   1400532d8:	outs   dx,BYTE PTR ds:[rsi]
   1400532d9:	cmp    esp,DWORD PTR [rdi]
   1400532db:	(bad)  
   1400532dc:	jle    0x140053327
   1400532de:	xor    eax,0x5c6f9dff
   1400532e3:	call   FWORD PTR [rdi-0x60009f8e]
   1400532e9:	jb     0x14005334c
   1400532eb:	jmp    FWORD PTR [rax+0x30]
   1400532ee:	sbb    edi,edi
   1400532f0:	mov    ch,0x9c
   1400532f2:	xchg   ebx,eax
   1400532f3:	(bad)  
   1400532f4:	(bad)  
   1400532f5:	(bad)  
   1400532f6:	(bad)  
   1400532f7:	(bad)  
   1400532f8:	jmp    0xee0512df
   1400532fd:	xchg   ecx,eax
   1400532fe:	xchg   bh,bh
   140053300:	in     al,0xdb
   140053302:	fdivr  st,st(7)
   140053304:	(bad)  
   140053305:	(bad)  
   140053306:	(bad)  
   140053307:	(bad)  
   140053308:	(bad)  
   140053309:	(bad)  
   14005330a:	(bad)  
   14005330b:	(bad)  
   14005330c:	(bad)  
   14005330d:	(bad)  
   14005330e:	(bad)  
   14005330f:	(bad)  
   140053310:	(bad)  
   140053311:	(bad)  
   140053312:	(bad)  
   140053313:	(bad)  
   140053314:	(bad)  
   140053315:	(bad)  
   140053316:	(bad)  
   140053317:	(bad)  
   140053318:	(bad)  
   140053319:	(bad)  
   14005331a:	(bad)  
   14005331b:	call   rax
   14005331d:	mov    ebx,0x3273ffb2
   140053322:	sbb    bh,bh
   140053324:	jns    0x140053361
   140053326:	and    bh,bh
   140053328:	jp     0x140053366
   14005332a:	and    bh,bh
   14005332c:	imul   esi,DWORD PTR [rdx],0x2d63fe1c
   140053332:	sbb    ch,BYTE PTR [rbx]
   140053334:	add    BYTE PTR [rax],al
   140053336:	add    BYTE PTR [rax],al
   140053338:	fs sbb dh,BYTE PTR cs:[rbx-0xdfc78c]
   140053340:	jp     0x14005337e
   140053342:	and    bh,bh
   140053344:	jbe    0x14005337d
   140053346:	sbb    eax,0x324679ff
   14005334b:	push   rbp
   14005334d:	repnz icebp 
   14005334f:	(bad)  
   140053350:	(bad)  
   140053351:	(bad)  
   140053352:	(bad)  
   140053353:	(bad)  
   140053354:	(bad)  
   140053355:	(bad)  
   140053356:	(bad)  
   140053357:	(bad)  
   140053358:	(bad)  
   140053359:	(bad)  
   14005335a:	(bad)  
   14005335b:	(bad)  
   14005335c:	(bad)  
   14005335d:	(bad)  
   14005335e:	(bad)  
   14005335f:	(bad)  
   140053360:	(bad)  
   140053361:	(bad)  
   140053362:	(bad)  
   140053363:	(bad)  
   140053364:	(bad)  
   140053365:	(bad)  
   140053366:	(bad)  
   140053367:	(bad)  
   140053368:	(bad)  
   140053369:	(bad)  
   14005336a:	(bad)  
   14005336b:	(bad)  
   14005336c:	(bad)  
   14005336d:	(bad)  
   14005336e:	(bad)  
   14005336f:	(bad)  
   140053370:	(bad)  
   140053371:	(bad)  
   140053372:	(bad)  
   140053373:	(bad)  
   140053374:	(bad)  
   140053375:	(bad)  
   140053376:	(bad)  
   140053377:	(bad)  
   140053378:	(bad)  
   140053379:	(bad)  
   14005337a:	(bad)  
   14005337b:	(bad)  
   14005337c:	(bad)  
   14005337d:	(bad)  
   14005337e:	(bad)  
   14005337f:	(bad)  
   140053380:	(bad)  
   140053381:	(bad)  
   140053382:	(bad)  
   140053383:	(bad)  
   140053384:	(bad)  
   140053385:	(bad)  
   140053386:	(bad)  
   140053387:	(bad)  
   140053388:	(bad)  
   140053389:	(bad)  
   14005338a:	(bad)  
   14005338b:	(bad)  
   14005338c:	(bad)  
   14005338d:	(bad)  
   14005338e:	(bad)  
   14005338f:	(bad)  
   140053390:	jmp    0x140053375
   140053392:	loopne 0x140053393
   140053394:	(bad)  
   140053395:	jbe    0x140053400
   140053397:	(bad)  
   140053398:	(bad)  
   14005339a:	sar    bh,1
   14005339c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005339d:	test   BYTE PTR [rax-0x1],bh
   1400533a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400533a1:	jge    0x140053410
   1400533a3:	jmp    QWORD PTR [rbp-0x67009685]
   1400533a9:	imul   ebx,DWORD PTR [rcx-0x1],0x70
   1400533ad:	ds sub edi,edi
   1400533b0:	in     eax,dx
   1400533b1:	out    0xe5,eax
   1400533b3:	(bad)  
   1400533b4:	(bad)  
   1400533b5:	(bad)  
   1400533b6:	(bad)  
   1400533b7:	(bad)  
   1400533b8:	(bad)  
   1400533b9:	(bad)  
   1400533ba:	(bad)  
   1400533bb:	(bad)  
   1400533bc:	(bad)  
   1400533bd:	(bad)  
   1400533be:	(bad)  
   1400533bf:	(bad)  
   1400533c0:	(bad)  
   1400533c1:	(bad)  
   1400533c2:	(bad)  
   1400533c3:	(bad)  
   1400533c4:	(bad)  
   1400533c5:	(bad)  
   1400533c6:	(bad)  
   1400533c7:	(bad)  
   1400533c8:	(bad)  
   1400533c9:	(bad)  
   1400533ca:	(bad)  
   1400533cb:	(bad)  
   1400533cc:	(bad)  
   1400533cd:	(bad)  
   1400533ce:	(bad)  
   1400533cf:	(bad)  
   1400533d0:	(bad)  
   1400533d1:	(bad)  
   1400533d2:	(bad)  
   1400533d3:	(bad)  
   1400533d4:	(bad)  
   1400533d5:	(bad)  
   1400533d6:	(bad)  
   1400533d7:	(bad)  
   1400533d8:	(bad)  
   1400533d9:	(bad)  
   1400533da:	(bad)  
   1400533db:	call   rax
   1400533dd:	mov    ebx,0x3273ffb2
   1400533e2:	sbb    bh,bh
   1400533e4:	jp     0x140053421
   1400533e6:	and    bh,bh
   1400533e8:	jne    0x140053423
   1400533ea:	and    edi,edi
   1400533ec:	fs cs sbb dl,dh
   1400533f0:	fs sbb cl,BYTE PTR cs:[rax]
   1400533f4:	add    BYTE PTR [rax],al
   1400533f6:	add    BYTE PTR [rax],al
   1400533f8:	movsxd ebp,DWORD PTR [rip+0x336c641a]        # 0x173719818
   1400533fe:	sbb    eax,0x223c7aff
   140053403:	push   QWORD PTR [rdi+0x37]
   140053406:	sbb    eax,0x324679ff
   14005340b:	push   rbp
   14005340d:	repnz icebp 
   14005340f:	(bad)  
   140053410:	(bad)  
   140053411:	(bad)  
   140053412:	(bad)  
   140053413:	(bad)  
   140053414:	(bad)  
   140053415:	(bad)  
   140053416:	(bad)  
   140053417:	(bad)  
   140053418:	(bad)  
   140053419:	(bad)  
   14005341a:	(bad)  
   14005341b:	(bad)  
   14005341c:	(bad)  
   14005341d:	(bad)  
   14005341e:	(bad)  
   14005341f:	(bad)  
   140053420:	(bad)  
   140053421:	(bad)  
   140053422:	(bad)  
   140053423:	(bad)  
   140053424:	(bad)  
   140053425:	(bad)  
   140053426:	(bad)  
   140053427:	(bad)  
   140053428:	(bad)  
   140053429:	(bad)  
   14005342a:	(bad)  
   14005342b:	(bad)  
   14005342c:	(bad)  
   14005342d:	(bad)  
   14005342e:	(bad)  
   14005342f:	(bad)  
   140053430:	(bad)  
   140053431:	(bad)  
   140053432:	(bad)  
   140053433:	(bad)  
   140053434:	(bad)  
   140053435:	(bad)  
   140053436:	(bad)  
   140053437:	(bad)  
   140053438:	(bad)  
   140053439:	(bad)  
   14005343a:	(bad)  
   14005343b:	(bad)  
   14005343c:	(bad)  
   14005343d:	(bad)  
   14005343e:	(bad)  
   14005343f:	(bad)  
   140053440:	(bad)  
   140053441:	(bad)  
   140053442:	(bad)  
   140053443:	(bad)  
   140053444:	(bad)  
   140053445:	(bad)  
   140053446:	(bad)  
   140053447:	(bad)  
   140053448:	(bad)  
   140053449:	(bad)  
   14005344a:	(bad)  
   14005344b:	(bad)  
   14005344c:	(bad)  
   14005344d:	(bad)  
   14005344e:	(bad)  
   14005344f:	jmp    rsi
   140053451:	fstp   st(1)
   140053453:	call   FWORD PTR [rax-0x998c]
   140053459:	(bad)  
   14005345a:	(bad)  
   14005345b:	(bad)  
   14005345c:	(bad)  
   14005345d:	(bad)  
   14005345e:	(bad)  
   14005345f:	call   rbp
   140053461:	ret    0xffba
   140053464:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053465:	jnp    0x1400534d1
   140053467:	jmp    QWORD PTR [rbp-0x3a009585]
   14005346d:	lods   eax,DWORD PTR ds:[rsi]
   14005346e:	movabs ds:0xffffffffffffffff,eax
   140053477:	(bad)  
   140053478:	(bad)  
   140053479:	(bad)  
   14005347a:	(bad)  
   14005347b:	(bad)  
   14005347c:	(bad)  
   14005347d:	(bad)  
   14005347e:	(bad)  
   14005347f:	(bad)  
   140053480:	(bad)  
   140053481:	(bad)  
   140053482:	(bad)  
   140053483:	(bad)  
   140053484:	(bad)  
   140053485:	(bad)  
   140053486:	(bad)  
   140053487:	(bad)  
   140053488:	(bad)  
   140053489:	(bad)  
   14005348a:	(bad)  
   14005348b:	(bad)  
   14005348c:	(bad)  
   14005348d:	(bad)  
   14005348e:	(bad)  
   14005348f:	(bad)  
   140053490:	(bad)  
   140053491:	(bad)  
   140053492:	(bad)  
   140053493:	(bad)  
   140053494:	(bad)  
   140053495:	(bad)  
   140053496:	(bad)  
   140053497:	(bad)  
   140053498:	(bad)  
   140053499:	(bad)  
   14005349a:	(bad)  
   14005349b:	call   rax
   14005349d:	mov    ebx,0x3273ffb2
   1400534a2:	sbb    bh,bh
   1400534a4:	jp     0x1400534e1
   1400534a6:	and    bh,bh
   1400534a8:	outs   dx,DWORD PTR ds:[rsi]
   1400534a9:	xor    eax,0x2d63ff1f
   1400534ae:	sbb    bh,BYTE PTR [rcx+0x0]
   1400534b1:	add    BYTE PTR [rax],al
   1400534b3:	add    BYTE PTR [rax],al
   1400534b5:	add    BYTE PTR [rax],al
   1400534b7:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   1400534bb:	or     al,0x65
   1400534bd:	(bad)  
   1400534be:	sbb    esp,esi
   1400534c0:	ja     0x1400534fc
   1400534c2:	and    bh,bh
   1400534c4:	ja     0x1400534fd
   1400534c6:	sbb    eax,0x324679ff
   1400534cb:	push   rbp
   1400534cd:	repnz icebp 
   1400534cf:	(bad)  
   1400534d0:	(bad)  
   1400534d1:	(bad)  
   1400534d2:	(bad)  
   1400534d3:	(bad)  
   1400534d4:	(bad)  
   1400534d5:	(bad)  
   1400534d6:	(bad)  
   1400534d7:	(bad)  
   1400534d8:	(bad)  
   1400534d9:	(bad)  
   1400534da:	(bad)  
   1400534db:	(bad)  
   1400534dc:	(bad)  
   1400534dd:	(bad)  
   1400534de:	(bad)  
   1400534df:	(bad)  
   1400534e0:	(bad)  
   1400534e1:	(bad)  
   1400534e2:	(bad)  
   1400534e3:	(bad)  
   1400534e4:	(bad)  
   1400534e5:	(bad)  
   1400534e6:	(bad)  
   1400534e7:	(bad)  
   1400534e8:	(bad)  
   1400534e9:	(bad)  
   1400534ea:	(bad)  
   1400534eb:	(bad)  
   1400534ec:	(bad)  
   1400534ed:	(bad)  
   1400534ee:	(bad)  
   1400534ef:	(bad)  
   1400534f0:	(bad)  
   1400534f1:	(bad)  
   1400534f2:	(bad)  
   1400534f3:	(bad)  
   1400534f4:	(bad)  
   1400534f5:	(bad)  
   1400534f6:	(bad)  
   1400534f7:	(bad)  
   1400534f8:	(bad)  
   1400534f9:	(bad)  
   1400534fa:	(bad)  
   1400534fb:	(bad)  
   1400534fc:	(bad)  
   1400534fd:	(bad)  
   1400534fe:	(bad)  
   1400534ff:	(bad)  
   140053500:	(bad)  
   140053501:	(bad)  
   140053502:	(bad)  
   140053503:	(bad)  
   140053504:	(bad)  
   140053505:	(bad)  
   140053506:	(bad)  
   140053507:	(bad)  
   140053508:	(bad)  
   140053509:	(bad)  
   14005350a:	(bad)  
   14005350b:	(bad)  
   14005350c:	(bad)  
   14005350d:	(bad)  
   14005350e:	(bad)  
   14005350f:	jmp    rsi
   140053511:	fstp   st(2)
   140053513:	call   FWORD PTR [rax-0x988c]
   140053519:	(bad)  
   14005351a:	(bad)  
   14005351b:	(bad)  
   14005351c:	(bad)  
   14005351d:	(bad)  
   14005351e:	(bad)  
   14005351f:	jmp    rbp
   140053521:	fcmovnbe st,st(7)
   140053523:	call   QWORD PTR [rcx-0x5800aa9a]
   140053529:	jg     0x14005359a
   14005352b:	inc    eax
   14005352d:	movabs ds:0xf5f8ffced3e0ff97,eax
   140053536:	hlt    
   140053537:	(bad)  
   140053538:	(bad)  
   140053539:	(bad)  
   14005353a:	(bad)  
   14005353b:	(bad)  
   14005353c:	(bad)  
   14005353d:	(bad)  
   14005353e:	(bad)  
   14005353f:	(bad)  
   140053540:	(bad)  
   140053541:	(bad)  
   140053542:	(bad)  
   140053543:	(bad)  
   140053544:	(bad)  
   140053545:	(bad)  
   140053546:	(bad)  
   140053547:	(bad)  
   140053548:	(bad)  
   140053549:	(bad)  
   14005354a:	(bad)  
   14005354b:	(bad)  
   14005354c:	(bad)  
   14005354d:	(bad)  
   14005354e:	(bad)  
   14005354f:	(bad)  
   140053550:	(bad)  
   140053551:	(bad)  
   140053552:	(bad)  
   140053553:	(bad)  
   140053554:	(bad)  
   140053555:	(bad)  
   140053556:	(bad)  
   140053557:	(bad)  
   140053558:	(bad)  
   140053559:	(bad)  
   14005355a:	(bad)  
   14005355b:	call   rax
   14005355d:	mov    ebx,0x3273ffb2
   140053562:	sbb    bh,bh
   140053564:	js     0x1400535a0
   140053566:	and    edi,edi
   140053568:	xor    BYTE PTR [ebx],bl
   14005356b:	repz movsxd ebp,DWORD PTR [rsi]
   14005356e:	sbb    ah,BYTE PTR [rsi]
	...
   14005357c:	movsxd ebp,DWORD PTR [rip+0x356e811a]        # 0x17573b69c
   140053582:	(bad)  
   140053583:	push   QWORD PTR [rdi+0x38]
   140053586:	(bad)  
   140053587:	(bad)  
   140053588:	js     0x1400535d0
   14005358a:	xor    bh,bh
   14005358c:	cmc    
   14005358d:	repnz icebp 
   14005358f:	(bad)  
   140053590:	(bad)  
   140053591:	(bad)  
   140053592:	(bad)  
   140053593:	(bad)  
   140053594:	(bad)  
   140053595:	(bad)  
   140053596:	(bad)  
   140053597:	(bad)  
   140053598:	(bad)  
   140053599:	(bad)  
   14005359a:	(bad)  
   14005359b:	(bad)  
   14005359c:	(bad)  
   14005359d:	(bad)  
   14005359e:	(bad)  
   14005359f:	(bad)  
   1400535a0:	(bad)  
   1400535a1:	(bad)  
   1400535a2:	(bad)  
   1400535a3:	(bad)  
   1400535a4:	(bad)  
   1400535a5:	(bad)  
   1400535a6:	(bad)  
   1400535a7:	(bad)  
   1400535a8:	(bad)  
   1400535a9:	(bad)  
   1400535aa:	(bad)  
   1400535ab:	(bad)  
   1400535ac:	(bad)  
   1400535ad:	(bad)  
   1400535ae:	(bad)  
   1400535af:	(bad)  
   1400535b0:	(bad)  
   1400535b1:	(bad)  
   1400535b2:	(bad)  
   1400535b3:	(bad)  
   1400535b4:	(bad)  
   1400535b5:	(bad)  
   1400535b6:	(bad)  
   1400535b7:	(bad)  
   1400535b8:	(bad)  
   1400535b9:	(bad)  
   1400535ba:	(bad)  
   1400535bb:	(bad)  
   1400535bc:	(bad)  
   1400535bd:	(bad)  
   1400535be:	(bad)  
   1400535bf:	(bad)  
   1400535c0:	(bad)  
   1400535c1:	(bad)  
   1400535c2:	(bad)  
   1400535c3:	(bad)  
   1400535c4:	(bad)  
   1400535c5:	(bad)  
   1400535c6:	(bad)  
   1400535c7:	(bad)  
   1400535c8:	(bad)  
   1400535c9:	(bad)  
   1400535ca:	(bad)  
   1400535cb:	(bad)  
   1400535cc:	(bad)  
   1400535cd:	(bad)  
   1400535ce:	(bad)  
   1400535cf:	jmp    rdi
   1400535d1:	(bad)  
   1400535d3:	call   FWORD PTR [rcx-0x988c]
   1400535d9:	(bad)  
   1400535da:	(bad)  
   1400535db:	(bad)  
   1400535dc:	(bad)  
   1400535dd:	(bad)  
   1400535de:	(bad)  
   1400535df:	(bad)  
   1400535e0:	(bad)  
   1400535e1:	(bad)  
   1400535e2:	(bad)  
   1400535e3:	(bad)  
   1400535e4:	mov    esp,0x6bff9da5
   1400535e9:	(bad)  
   1400535ea:	and    al,0xff
   1400535ec:	push   0x5bff1c31
   1400535f1:	and    cl,BYTE PTR [rdi+rdi*8]
   1400535f4:	jns    0x140053640
   1400535f6:	cmp    bh,bh
   1400535f8:	out    0xde,eax
   1400535fa:	(bad)  
   1400535fc:	(bad)  
   1400535fd:	(bad)  
   1400535fe:	(bad)  
   1400535ff:	(bad)  
   140053600:	(bad)  
   140053601:	(bad)  
   140053602:	(bad)  
   140053603:	(bad)  
   140053604:	(bad)  
   140053605:	(bad)  
   140053606:	(bad)  
   140053607:	(bad)  
   140053608:	(bad)  
   140053609:	(bad)  
   14005360a:	(bad)  
   14005360b:	(bad)  
   14005360c:	(bad)  
   14005360d:	(bad)  
   14005360e:	(bad)  
   14005360f:	(bad)  
   140053610:	(bad)  
   140053611:	(bad)  
   140053612:	(bad)  
   140053613:	(bad)  
   140053614:	(bad)  
   140053615:	(bad)  
   140053616:	(bad)  
   140053617:	(bad)  
   140053618:	(bad)  
   140053619:	(bad)  
   14005361a:	(bad)  
   14005361b:	call   rax
   14005361d:	mov    ebx,0x3374ffb2
   140053622:	sbb    bh,bh
   140053624:	jo     0x14005365c
   140053626:	(bad)  
   140053627:	jmp    QWORD PTR [rbx+0x2d]
   14005362a:	sbb    ah,BYTE PTR [rcx+0x0]
	...
   14005363c:	fs sbb dl,BYTE PTR cs:[rbx]
   140053640:	gs (bad) 
   140053642:	sbb    ebp,ecx
   140053644:	je     0x14005367c
   140053646:	sbb    eax,0x364a7eff
   14005364b:	push   rdi
   14005364d:	cmc    
   14005364e:	hlt    
   14005364f:	(bad)  
   140053650:	(bad)  
   140053651:	(bad)  
   140053652:	(bad)  
   140053653:	(bad)  
   140053654:	(bad)  
   140053655:	(bad)  
   140053656:	(bad)  
   140053657:	(bad)  
   140053658:	(bad)  
   140053659:	(bad)  
   14005365a:	(bad)  
   14005365b:	(bad)  
   14005365c:	(bad)  
   14005365d:	(bad)  
   14005365e:	(bad)  
   14005365f:	(bad)  
   140053660:	(bad)  
   140053661:	(bad)  
   140053662:	(bad)  
   140053663:	(bad)  
   140053664:	(bad)  
   140053665:	(bad)  
   140053666:	(bad)  
   140053667:	(bad)  
   140053668:	(bad)  
   140053669:	(bad)  
   14005366a:	(bad)  
   14005366b:	(bad)  
   14005366c:	(bad)  
   14005366d:	(bad)  
   14005366e:	(bad)  
   14005366f:	(bad)  
   140053670:	(bad)  
   140053671:	(bad)  
   140053672:	(bad)  
   140053673:	(bad)  
   140053674:	(bad)  
   140053675:	(bad)  
   140053676:	(bad)  
   140053677:	(bad)  
   140053678:	(bad)  
   140053679:	(bad)  
   14005367a:	(bad)  
   14005367b:	(bad)  
   14005367c:	(bad)  
   14005367d:	(bad)  
   14005367e:	(bad)  
   14005367f:	(bad)  
   140053680:	(bad)  
   140053681:	(bad)  
   140053682:	(bad)  
   140053683:	(bad)  
   140053684:	(bad)  
   140053685:	(bad)  
   140053686:	(bad)  
   140053687:	(bad)  
   140053688:	(bad)  
   140053689:	(bad)  
   14005368a:	(bad)  
   14005368b:	(bad)  
   14005368c:	(bad)  
   14005368d:	(bad)  
   14005368e:	(bad)  
   14005368f:	jmp    rdi
   140053691:	(bad)  
   140053693:	call   FWORD PTR [rax-0x998c]
   140053699:	(bad)  
   14005369a:	(bad)  
   14005369b:	(bad)  
   14005369c:	(bad)  
   14005369d:	(bad)  
   14005369e:	(bad)  
   14005369f:	(bad)  
   1400536a0:	(bad)  
   1400536a1:	(bad)  
   1400536a2:	(bad)  
   1400536a3:	(bad)  
   1400536a4:	(bad)  
   1400536a5:	(bad)  
   1400536a6:	(bad)  
   1400536a7:	(bad)  
   1400536a8:	fst    st(1)
   1400536aa:	int    0xff
   1400536ac:	mov    ah,0x9a
   1400536ae:	xchg   ecx,eax
   1400536af:	push   QWORD PTR [rdx+rbx*4-0x3f2f006f]
   1400536b6:	mov    edx,0xf8f9faff
   1400536bb:	(bad)  
   1400536bc:	(bad)  
   1400536bd:	(bad)  
   1400536be:	(bad)  
   1400536bf:	(bad)  
   1400536c0:	(bad)  
   1400536c1:	(bad)  
   1400536c2:	(bad)  
   1400536c3:	(bad)  
   1400536c4:	(bad)  
   1400536c5:	(bad)  
   1400536c6:	(bad)  
   1400536c7:	(bad)  
   1400536c8:	(bad)  
   1400536c9:	(bad)  
   1400536ca:	(bad)  
   1400536cb:	(bad)  
   1400536cc:	(bad)  
   1400536cd:	(bad)  
   1400536ce:	(bad)  
   1400536cf:	(bad)  
   1400536d0:	(bad)  
   1400536d1:	(bad)  
   1400536d2:	(bad)  
   1400536d3:	(bad)  
   1400536d4:	(bad)  
   1400536d5:	(bad)  
   1400536d6:	(bad)  
   1400536d7:	(bad)  
   1400536d8:	(bad)  
   1400536d9:	(bad)  
   1400536da:	(bad)  
   1400536db:	call   rdx
   1400536dd:	mov    ebp,0x3171ffb4
   1400536e2:	sbb    bh,bh
   1400536e4:	data16 (bad) 
   1400536e6:	sbb    esi,esp
   1400536e8:	movsxd ebp,DWORD PTR [rsi]
   1400536ea:	sbb    ah,BYTE PTR [rdi]
	...
   140053700:	movsxd ebp,DWORD PTR [rip+0x2f68651a]        # 0x16f6d9c20
   140053706:	sbb    bh,bh
   140053708:	test   BYTE PTR [rbx+0x34],cl
   14005370b:	push   rsp
   14005370d:	out    dx,eax
   14005370e:	in     eax,dx
   14005370f:	(bad)  
   140053710:	(bad)  
   140053711:	(bad)  
   140053712:	(bad)  
   140053713:	(bad)  
   140053714:	(bad)  
   140053715:	(bad)  
   140053716:	(bad)  
   140053717:	(bad)  
   140053718:	(bad)  
   140053719:	(bad)  
   14005371a:	(bad)  
   14005371b:	(bad)  
   14005371c:	(bad)  
   14005371d:	(bad)  
   14005371e:	(bad)  
   14005371f:	(bad)  
   140053720:	(bad)  
   140053721:	(bad)  
   140053722:	(bad)  
   140053723:	(bad)  
   140053724:	(bad)  
   140053725:	(bad)  
   140053726:	(bad)  
   140053727:	(bad)  
   140053728:	(bad)  
   140053729:	(bad)  
   14005372a:	(bad)  
   14005372b:	(bad)  
   14005372c:	(bad)  
   14005372d:	(bad)  
   14005372e:	(bad)  
   14005372f:	(bad)  
   140053730:	(bad)  
   140053731:	(bad)  
   140053732:	(bad)  
   140053733:	(bad)  
   140053734:	(bad)  
   140053735:	(bad)  
   140053736:	(bad)  
   140053737:	(bad)  
   140053738:	(bad)  
   140053739:	(bad)  
   14005373a:	(bad)  
   14005373b:	(bad)  
   14005373c:	(bad)  
   14005373d:	(bad)  
   14005373e:	(bad)  
   14005373f:	(bad)  
   140053740:	(bad)  
   140053741:	(bad)  
   140053742:	(bad)  
   140053743:	(bad)  
   140053744:	(bad)  
   140053745:	(bad)  
   140053746:	(bad)  
   140053747:	(bad)  
   140053748:	(bad)  
   140053749:	(bad)  
   14005374a:	(bad)  
   14005374b:	(bad)  
   14005374c:	(bad)  
   14005374d:	(bad)  
   14005374e:	(bad)  
   14005374f:	push   rbx
   140053751:	in     eax,dx
   140053752:	jmp    0x140053753
   140053754:	ret    
   140053755:	stos   DWORD PTR es:[rdi],eax
   140053756:	movabs eax,ds:0xffffffffffffffff
   14005375f:	(bad)  
   140053760:	(bad)  
   140053761:	(bad)  
   140053762:	(bad)  
   140053763:	(bad)  
   140053764:	(bad)  
   140053765:	(bad)  
   140053766:	(bad)  
   140053767:	(bad)  
   140053768:	(bad)  
   140053769:	(bad)  
   14005376a:	(bad)  
   14005376b:	(bad)  
   14005376c:	(bad)  
   14005376d:	(bad)  
   14005376e:	(bad)  
   14005376f:	(bad)  
   140053770:	(bad)  
   140053771:	(bad)  
   140053772:	(bad)  
   140053773:	(bad)  
   140053774:	(bad)  
   140053775:	(bad)  
   140053776:	(bad)  
   140053777:	(bad)  
   140053778:	(bad)  
   140053779:	(bad)  
   14005377a:	(bad)  
   14005377b:	(bad)  
   14005377c:	(bad)  
   14005377d:	(bad)  
   14005377e:	(bad)  
   14005377f:	(bad)  
   140053780:	(bad)  
   140053781:	(bad)  
   140053782:	(bad)  
   140053783:	(bad)  
   140053784:	(bad)  
   140053785:	(bad)  
   140053786:	(bad)  
   140053787:	(bad)  
   140053788:	(bad)  
   140053789:	(bad)  
   14005378a:	(bad)  
   14005378b:	(bad)  
   14005378c:	(bad)  
   14005378d:	(bad)  
   14005378e:	(bad)  
   14005378f:	(bad)  
   140053790:	(bad)  
   140053791:	(bad)  
   140053792:	(bad)  
   140053793:	(bad)  
   140053794:	(bad)  
   140053795:	(bad)  
   140053796:	(bad)  
   140053797:	(bad)  
   140053798:	(bad)  
   140053799:	(bad)  
   14005379a:	(bad)  
   14005379b:	dec    ebp
   14005379d:	mov    ch,0xab
   14005379f:	jmp    QWORD PTR [rdi+0x2b]
   1400537a2:	adc    al,0xff
   1400537a4:	movsxd ebp,DWORD PTR [rip+0x8519]        # 0x14005bcc3
	...
   1400537be:	add    BYTE PTR [rax],al
   1400537c0:	fs sbb al,BYTE PTR cs:[rdx]
   1400537c4:	movsxd ebp,DWORD PTR [rip+0x346fb91a]        # 0x17474f0e4
   1400537ca:	sbb    al,0xff
   1400537cc:	xchg   edx,eax
   1400537cd:	pop    rdi
   1400537ce:	rex.WX dec rcx
   1400537d1:	mov    cl,0xa6
   1400537d3:	push   rsp
   1400537d5:	out    dx,eax
   1400537d6:	in     eax,dx
   1400537d7:	(bad)  
   1400537d8:	(bad)  
   1400537d9:	(bad)  
   1400537da:	(bad)  
   1400537db:	(bad)  
   1400537dc:	(bad)  
   1400537dd:	(bad)  
   1400537de:	(bad)  
   1400537df:	(bad)  
   1400537e0:	(bad)  
   1400537e1:	(bad)  
   1400537e2:	(bad)  
   1400537e3:	(bad)  
   1400537e4:	(bad)  
   1400537e5:	(bad)  
   1400537e6:	(bad)  
   1400537e7:	(bad)  
   1400537e8:	(bad)  
   1400537e9:	(bad)  
   1400537ea:	(bad)  
   1400537eb:	(bad)  
   1400537ec:	(bad)  
   1400537ed:	(bad)  
   1400537ee:	(bad)  
   1400537ef:	(bad)  
   1400537f0:	(bad)  
   1400537f1:	(bad)  
   1400537f2:	(bad)  
   1400537f3:	(bad)  
   1400537f4:	(bad)  
   1400537f5:	(bad)  
   1400537f6:	(bad)  
   1400537f7:	(bad)  
   1400537f8:	(bad)  
   1400537f9:	(bad)  
   1400537fa:	(bad)  
   1400537fb:	(bad)  
   1400537fc:	(bad)  
   1400537fd:	(bad)  
   1400537fe:	(bad)  
   1400537ff:	(bad)  
   140053800:	(bad)  
   140053801:	(bad)  
   140053802:	(bad)  
   140053803:	(bad)  
   140053804:	(bad)  
   140053805:	(bad)  
   140053806:	(bad)  
   140053807:	(bad)  
   140053808:	(bad)  
   140053809:	(bad)  
   14005380a:	(bad)  
   14005380b:	(bad)  
   14005380c:	(bad)  
   14005380d:	(bad)  
   14005380e:	(bad)  
   14005380f:	jmp    rsi
   140053811:	fcmovbe st,st(5)
   140053813:	dec    ebx
   140053815:	mov    dl,0xa8
   140053817:	push   rsi
   140053819:	icebp  
   14005381a:	out    dx,eax
   14005381b:	(bad)  
   14005381c:	(bad)  
   14005381d:	(bad)  
   14005381e:	(bad)  
   14005381f:	(bad)  
   140053820:	(bad)  
   140053821:	(bad)  
   140053822:	(bad)  
   140053823:	(bad)  
   140053824:	(bad)  
   140053825:	(bad)  
   140053826:	(bad)  
   140053827:	(bad)  
   140053828:	(bad)  
   140053829:	(bad)  
   14005382a:	(bad)  
   14005382b:	(bad)  
   14005382c:	(bad)  
   14005382d:	(bad)  
   14005382e:	(bad)  
   14005382f:	(bad)  
   140053830:	(bad)  
   140053831:	(bad)  
   140053832:	(bad)  
   140053833:	(bad)  
   140053834:	(bad)  
   140053835:	(bad)  
   140053836:	(bad)  
   140053837:	(bad)  
   140053838:	(bad)  
   140053839:	(bad)  
   14005383a:	(bad)  
   14005383b:	(bad)  
   14005383c:	(bad)  
   14005383d:	(bad)  
   14005383e:	(bad)  
   14005383f:	(bad)  
   140053840:	(bad)  
   140053841:	(bad)  
   140053842:	(bad)  
   140053843:	(bad)  
   140053844:	(bad)  
   140053845:	(bad)  
   140053846:	(bad)  
   140053847:	(bad)  
   140053848:	(bad)  
   140053849:	(bad)  
   14005384a:	(bad)  
   14005384b:	(bad)  
   14005384c:	(bad)  
   14005384d:	(bad)  
   14005384e:	(bad)  
   14005384f:	(bad)  
   140053850:	(bad)  
   140053851:	(bad)  
   140053852:	(bad)  
   140053853:	jmp    rdi
   140053855:	fstp   st(0)
   140053857:	(bad)  
   140053858:	mov    edx,0x7cff8c99
   14005385d:	rex.RB (bad) 
   14005385f:	jmp    QWORD PTR [rdx+0x2c]
   140053862:	(bad)  
   140053863:	shl    BYTE PTR [rsi+rbp*1+0x1a],cl
   140053867:	or     al,0x0
	...
   140053881:	add    BYTE PTR [rax],al
   140053883:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   140053887:	(bad)  
   140053888:	gs (bad) 
   14005388a:	sbb    esp,edi
   14005388c:	jo     0x1400538c1
   14005388e:	sbb    bh,bh
   140053890:	jae    0x1400538c3
   140053892:	(bad)  
   140053893:	inc    DWORD PTR [rdi-0x5300c6b0]
   140053899:	xchg   BYTE PTR [rsi-0x1],dh
   14005389c:	fcmove st,st(0)
   14005389e:	sar    edi,0xfd
   1400538a1:	cld    
   1400538a2:	sti    
   1400538a3:	(bad)  
   1400538a4:	(bad)  
   1400538a5:	(bad)  
   1400538a6:	(bad)  
   1400538a7:	(bad)  
   1400538a8:	(bad)  
   1400538a9:	(bad)  
   1400538aa:	(bad)  
   1400538ab:	(bad)  
   1400538ac:	(bad)  
   1400538ad:	(bad)  
   1400538ae:	(bad)  
   1400538af:	(bad)  
   1400538b0:	(bad)  
   1400538b1:	(bad)  
   1400538b2:	(bad)  
   1400538b3:	(bad)  
   1400538b4:	(bad)  
   1400538b5:	(bad)  
   1400538b6:	(bad)  
   1400538b7:	(bad)  
   1400538b8:	(bad)  
   1400538b9:	(bad)  
   1400538ba:	(bad)  
   1400538bb:	(bad)  
   1400538bc:	(bad)  
   1400538bd:	(bad)  
   1400538be:	(bad)  
   1400538bf:	(bad)  
   1400538c0:	(bad)  
   1400538c1:	(bad)  
   1400538c2:	(bad)  
   1400538c3:	(bad)  
   1400538c4:	(bad)  
   1400538c5:	(bad)  
   1400538c6:	(bad)  
   1400538c7:	push   rsi
   1400538c9:	icebp  
   1400538ca:	out    dx,eax
   1400538cb:	(bad)  
   1400538cc:	fcmove st,st(2)
   1400538ce:	ret    
   1400538cf:	inc    esp
   1400538d1:	test   al,0x9c
   1400538d3:	inc    ebx
   1400538d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400538d6:	fwait
   1400538d7:	dec    edx
   1400538d9:	mov    dl,0xa7
   1400538db:	jmp    rsi
   1400538dd:	(bad)  
   1400538df:	(bad)  
   1400538e0:	sti    
   1400538e1:	cli    
   1400538e2:	stc    
   1400538e3:	(bad)  
   1400538e4:	(bad)  
   1400538e5:	(bad)  
   1400538e6:	(bad)  
   1400538e7:	(bad)  
   1400538e8:	(bad)  
   1400538e9:	(bad)  
   1400538ea:	(bad)  
   1400538eb:	(bad)  
   1400538ec:	(bad)  
   1400538ed:	(bad)  
   1400538ee:	(bad)  
   1400538ef:	(bad)  
   1400538f0:	(bad)  
   1400538f1:	(bad)  
   1400538f2:	(bad)  
   1400538f3:	(bad)  
   1400538f4:	(bad)  
   1400538f5:	(bad)  
   1400538f6:	(bad)  
   1400538f7:	(bad)  
   1400538f8:	(bad)  
   1400538f9:	(bad)  
   1400538fa:	(bad)  
   1400538fb:	(bad)  
   1400538fc:	(bad)  
   1400538fd:	(bad)  
   1400538fe:	(bad)  
   1400538ff:	(bad)  
   140053900:	(bad)  
   140053901:	(bad)  
   140053902:	(bad)  
   140053903:	(bad)  
   140053904:	(bad)  
   140053905:	(bad)  
   140053906:	(bad)  
   140053907:	(bad)  
   140053908:	cli    
   140053909:	clc    
   14005390a:	idiv   edi
   14005390c:	lock call 0xcbb638f7
   140053912:	jge    0x140053913
   140053914:	jnp    0x140053953
   140053916:	and    al,0xff
   140053918:	outs   dx,DWORD PTR ds:[rsi]
   140053919:	cs adc al,0xff
   14005391c:	fs sub al,0x17
   14005391f:	hlt    
   140053920:	fs sbb dh,BYTE PTR cs:[rcx]
	...
   140053948:	movsxd ebp,DWORD PTR [rsi]
   14005394a:	sbb    al,BYTE PTR [rbx+0x67]
   14005394d:	(bad)  
   14005394e:	sbb    edi,eax
   140053950:	ja     0x14005398d
   140053952:	and    bh,bh
   140053954:	js     0x14005398f
   140053956:	(bad)  
   140053957:	push   QWORD PTR [rdx+0x30]
   14005395a:	adc    eax,0x203a79ff
   14005395f:	(bad)  
   140053960:	mov    ecx,0xd3ff8a98
   140053965:	mov    esi,0xcedeffb6
   14005396a:	(bad)  
   14005396b:	(bad)  
   14005396c:	jmp    0x140053950
   14005396e:	fdivp  st(7),st
   140053970:	icebp  
   140053971:	jmp    0x14005395b
   140053973:	push   rbx
   140053975:	in     eax,dx
   140053976:	jmp    0x140053977
   140053978:	repz in eax,dx
   14005397a:	jmp    0x14005397b
   14005397c:	lock jmp 0x118eb3967
   140053982:	sar    edi,cl
   140053984:	(bad)  
   140053985:	ret    0xffb9
   140053988:	retf   0xa7b2
   14005398b:	inc    esi
   14005398d:	stos   DWORD PTR es:[rdi],eax
   14005398e:	movabs al,ds:0xa9b4ccffa6b2caff
   140053997:	dec    ebx
   140053999:	mov    bl,0xa8
   14005399b:	dec    edx
   14005399d:	mov    dl,0xa7
   14005399f:	call   rbx
   1400539a1:	mov    edi,0xd0dfffb6
   1400539a6:	leave  
   1400539a7:	(bad)  
   1400539a8:	in     eax,dx
   1400539a9:	in     al,0xe1
   1400539ab:	push   rsp
   1400539ad:	out    dx,eax
   1400539ae:	in     eax,dx
   1400539af:	push   rsi
   1400539b1:	repnz lock push rsi
   1400539b5:	repnz lock push rbp
   1400539b9:	lock in eax,dx
   1400539bb:	(bad)  
   1400539bc:	out    dx,eax
   1400539bd:	out    0xe4,eax
   1400539bf:	jmp    rsi
   1400539c1:	fcmovbe st,st(4)
   1400539c3:	(bad)  
   1400539c4:	fmulp  st(7),st
   1400539c6:	enter  0xdfff,0xd0
   1400539ca:	retf   0xb9ff
   1400539cd:	cdq    
   1400539ce:	mov    edi,?
   1400539d0:	jne    0x140053a06
   1400539d2:	sbb    edi,edi
   1400539d4:	jbe    0x140053a0e
   1400539d6:	(bad)  
   1400539d7:	jmp    FWORD PTR [rcx+0x31]
   1400539da:	sbb    al,0xff
   1400539dc:	movsxd ebp,DWORD PTR [rip+0x5f1a]        # 0x1400598fc
	...
   140053a0a:	add    BYTE PTR [rax],al
   140053a0c:	movsxd ebp,DWORD PTR [rip+0x3068581a]        # 0x1706d922c
   140053a12:	sbb    al,0xfc
   140053a14:	js     0x140053a51
   140053a16:	and    bh,bh
   140053a18:	jge    0x140053a59
   140053a1a:	and    eax,0x1f3a79ff
   140053a1f:	inc    DWORD PTR [rsi-0x3f00cab3]
   140053a25:	movabs ds:0xaac5ff9fabc6ff95,al
   140053a2e:	popf   
   140053a2f:	dec    eax
   140053a31:	scas   al,BYTE PTR es:[rdi]
   140053a32:	movabs eax,ds:0xa5b1cbffa4b1caff
   140053a3b:	dec    edx
   140053a3d:	mov    cl,0xa5
   140053a3f:	dec    edx
   140053a41:	mov    cl,0xa4
   140053a43:	dec    esp
   140053a45:	mov    bl,0xa7
   140053a47:	dec    esi
   140053a49:	mov    bh,0xac
   140053a4b:	call   rax
   140053a4d:	mov    edx,0xbbd1ffaf
   140053a52:	mov    al,0xff
   140053a54:	sar    BYTE PTR [rdx+rsi*4-0x4b422c01],cl
   140053a5b:	call   rbx
   140053a5d:	mov    edi,0xbfd3ffb5
   140053a62:	mov    ch,0xff
   140053a64:	sar    DWORD PTR [rsi-0x402b004c],cl
   140053a6a:	mov    ch,0xff
   140053a6c:	(bad)  
   140053a6d:	ret    0xffb8
   140053a70:	xlat   BYTE PTR ds:[rbx]
   140053a71:	(bad)  
   140053a72:	mov    ebx,0xbcc5d7ff
   140053a77:	(bad)  
   140053a78:	fadd   st,st(5)
   140053a7a:	mov    ebp,0xbdc5d8ff
   140053a7f:	(bad)  
   140053a80:	fadd   st,st(6)
   140053a82:	mov    esi,0xc9d0dfff
   140053a87:	call   rax
   140053a89:	mov    edx,0x4a85ffb1
   140053a8e:	xor    bh,bh
   140053a90:	ja     0x140053aca
   140053a92:	(bad)  
   140053a93:	jmp    FWORD PTR [rcx+0x31]
   140053a96:	sbb    al,0xff
   140053a98:	movsxd ebp,DWORD PTR [rip+0x761a]        # 0x14005b0b8
	...
   140053ace:	add    BYTE PTR [rax],al
   140053ad0:	movsxd ebp,DWORD PTR [rip+0x3067581a]        # 0x1706c92f0
   140053ad6:	sbb    esi,edi
   140053ad8:	ja     0x140053b15
   140053ada:	and    edi,edi
   140053adc:	jg     0x140053b1f
   140053ade:	es (bad) 
   140053ae0:	jp     0x140053b1d
   140053ae2:	(bad)  
   140053ae3:	call   QWORD PTR [rax+riz*2-0x4a3200b7]
   140053aea:	test   eax,0xb0bbd1ff
   140053aef:	dec    edi
   140053af1:	mov    eax,0xb9d0ffac
   140053af6:	scas   al,BYTE PTR es:[rdi]
   140053af7:	call   rcx
   140053af9:	mov    ebx,0xbcd2ffb0
   140053afe:	mov    dl,0xff
   140053b00:	sar    DWORD PTR [rsi-0x3f2a004c],cl
   140053b06:	mov    ch,0xff
   140053b08:	(bad)  
   140053b09:	shl    DWORD PTR [rdi-0x473d2901],0xff
   140053b10:	xlat   BYTE PTR ds:[rbx]
   140053b11:	(bad)  
   140053b12:	mov    ecx,0xbbc5d7ff
   140053b17:	(bad)  
   140053b18:	fld    st(6)
   140053b1a:	mov    ebp,0xbec7daff
   140053b1f:	(bad)  
   140053b20:	fcmovne st,st(1)
   140053b22:	sar    bh,0xdb
   140053b25:	retf   0xffc1
   140053b28:	(bad)  
   140053b2a:	ret    
   140053b2b:	(bad)  
   140053b2c:	(bad)  
   140053b2e:	(bad)  
   140053b2f:	(bad)  
   140053b30:	(bad)  
   140053b32:	(bad)  
   140053b35:	(bad)  
   140053b36:	(bad)  
   140053b37:	(bad)  
   140053b38:	(bad)  
   140053b3a:	enter  0xdfff,0xd1
   140053b3e:	leave  
   140053b3f:	jmp    rbp
   140053b41:	(bad)  
   140053b43:	(bad)  
   140053b44:	fmul   st(3),st
   140053b46:	ret    
   140053b47:	call   QWORD PTR [rcx+0x75ff455b]
   140053b4d:	ss sbb al,0xff
   140053b50:	imul   esi,DWORD PTR [rcx],0x2d63ff1c
   140053b56:	sbb    dh,BYTE PTR [rsi+0x0]
	...
   140053b91:	add    BYTE PTR [rax],al
   140053b93:	add    BYTE PTR [rbx+0x2e],ah
   140053b96:	sbb    al,BYTE PTR [rbp+0x65]
   140053b99:	(bad)  
   140053b9a:	sbb    ah,dh
   140053b9c:	jne    0x140053bd8
   140053b9e:	and    bh,bh
   140053ba0:	add    DWORD PTR [rax+rbp*1-0x1],0xff203e7e
   140053ba8:	cwde   
   140053ba9:	addr32 rex.WRXB call r9
   140053bad:	mov    edx,0xc8daffaf
   140053bb2:	mov    esi,0xb8c2d6ff
   140053bb7:	call   rdi
   140053bb9:	(bad)  
   140053bba:	mov    edx,0xbcc6d9ff
   140053bbf:	(bad)  
   140053bc0:	fcmovb st,st(7)
   140053bc2:	mov    ebp,0xbec9daff
   140053bc7:	(bad)  
   140053bc8:	fmul   st(2),st
   140053bca:	sar    bh,0xdc
   140053bcd:	retf   
   140053bce:	sar    edi,0xdd
   140053bd1:	int3   
   140053bd2:	ret    
   140053bd3:	(bad)  
   140053bd4:	fmulp  st(5),st
   140053bd6:	(bad)  
   140053bd9:	iret   
   140053bda:	(bad)  
   140053bdb:	jmp    rax
   140053bdd:	rol    bh,1
   140053bdf:	jmp    rax
   140053be1:	ror    ecx,1
   140053be3:	jmp    rcx
   140053be5:	ror    bl,cl
   140053be7:	jmp    rdx
   140053be9:	(bad)  
   140053bea:	int3   
   140053beb:	jmp    rbx
   140053bed:	(bad)  
   140053bee:	(bad)  
   140053bef:	jmp    rsp
   140053bf1:	(bad)  
   140053bf2:	iret   
   140053bf3:	jmp    rsp
   140053bf5:	(bad)  
   140053bf6:	sar    bh,1
   140053bf8:	in     eax,0xd8
   140053bfa:	sar    edi,1
   140053bfc:	in     al,dx
   140053bfd:	loop   0x140053bdd
   140053bff:	(bad)  
   140053c00:	(bad)  
   140053c02:	(bad)  
   140053c03:	call   QWORD PTR [rbp+0x71ff4961]
   140053c09:	xor    ebx,DWORD PTR [rcx]
   140053c0b:	jmp    QWORD PTR [rdi+0x30]
   140053c0e:	sbb    al,0xf2
   140053c10:	movsxd ebp,DWORD PTR [rip+0x5d1a]        # 0x140059930
	...
   140053c56:	add    BYTE PTR [rax],al
   140053c58:	movsxd ebp,DWORD PTR [rsi]
   140053c5a:	sbb    ah,BYTE PTR [rbx+riz*2]
   140053c5d:	sub    eax,0x366eb81a
   140053c62:	(bad)  
   140053c63:	inc    DWORD PTR [rax-0x7c00d7bc]
   140053c69:	rex.R and al,0xff
   140053c6c:	xchg   ebp,eax
   140053c6d:	(bad)  
   140053c6e:	rex.R dec ebx
   140053c71:	mov    cl,0xa3
   140053c73:	jmp    rdx
   140053c75:	(bad)  
   140053c76:	int    0xff
   140053c78:	(bad)  
   140053c7a:	(bad)  
   140053c7b:	(bad)  
   140053c7c:	(bad)  
   140053c7e:	(bad)  
   140053c81:	rol    bh,1
   140053c83:	jmp    rcx
   140053c85:	ror    eax,1
   140053c87:	jmp    rdx
   140053c89:	ror    dl,cl
   140053c8b:	jmp    rbx
   140053c8d:	(bad)  
   140053c8e:	retf   
   140053c8f:	jmp    rsp
   140053c91:	(bad)  
   140053c92:	int3   
   140053c93:	jmp    rbp
   140053c95:	(bad)  
   140053c96:	iret   
   140053c97:	jmp    rbp
   140053c99:	xlat   BYTE PTR ds:[rbx]
   140053c9a:	sar    bh,1
   140053c9c:	out    0xd9,al
   140053c9e:	sar    edi,1
   140053ca0:	out    0xda,al
   140053ca2:	sar    edi,cl
   140053ca4:	out    0xda,eax
   140053ca6:	(bad)  
   140053ca7:	(bad)  
   140053ca8:	call   0x129051289
   140053cad:	(bad)  
   140053caf:	(bad)  
   140053cb0:	jmp    0x12d051593
   140053cb5:	loop   0x140053c94
   140053cb7:	push   rcx
   140053cb9:	jmp    0x140053ca2
   140053cbb:	call   rsp
   140053cbd:	mov    ebp,0x568dffb0
   140053cc2:	cmp    al,0xff
   140053cc4:	imul   esi,DWORD PTR [rax],0x17
   140053cc7:	jmp    QWORD PTR [rbx+0x2e]
   140053cca:	sbb    cl,cl
   140053ccc:	movsxd ebp,DWORD PTR [rip+0x321a]        # 0x140056eec
	...
   140053d1e:	add    BYTE PTR [rax],al
   140053d20:	(bad)  
   140053d21:	sub    eax,0x30666819
   140053d26:	sbb    esp,edi
   140053d28:	jbe    0x140053d67
   140053d2a:	and    al,0xff
   140053d2c:	test   BYTE PTR [rdi+0x28],al
   140053d2f:	call   QWORD PTR [rcx-0x4500caaa]
   140053d35:	xchg   ebx,eax
   140053d36:	jge    0x140053d37
   140053d38:	loopne 0x140053d09
   140053d3a:	(bad)  
   140053d3d:	(bad)  
   140053d3f:	(bad)  
   140053d40:	call   0x128051321
   140053d45:	fcmovbe st,st(3)
   140053d47:	(bad)  
   140053d48:	call   0x12a051127
   140053d4d:	(bad)  
   140053d4f:	(bad)  
   140053d50:	(bad)  
   140053d51:	fst    st(6)
   140053d53:	(bad)  
   140053d54:	(bad)  
   140053d55:	(bad)  
   140053d57:	(bad)  
   140053d58:	jmp    0x140053d39
   140053d5a:	fcos   
   140053d5c:	jmp    0x140053d3e
   140053d5e:	(bad)  
   140053d60:	in     al,dx
   140053d61:	loop   0x140053d3f
   140053d63:	(bad)  
   140053d64:	in     eax,dx
   140053d65:	loop   0x140053d44
   140053d67:	(bad)  
   140053d68:	out    dx,al
   140053d69:	in     eax,0xe0
   140053d6b:	push   rdx
   140053d6d:	(bad)  
   140053d6e:	out    0xff,eax
   140053d70:	div    al
   140053d72:	in     eax,dx
   140053d73:	(bad)  
   140053d74:	(bad)  
   140053d75:	fst    st(5)
   140053d77:	push   QWORD PTR [rsi+rcx*4+0x3e78ff7a]
   140053d7e:	and    eax,0x162b64ff
   140053d83:	lock (bad) 
   140053d85:	sub    eax,0x2e647a19
   140053d8a:	sbb    cl,BYTE PTR [rdx]
	...
   140053de4:	movsxd ebp,DWORD PTR [rip+0x2c62191a]        # 0x16c675704
   140053dea:	sbb    DWORD PTR [rcx-0x1de3ce99],eax
   140053df0:	jne    0x140053e2e
   140053df2:	and    bh,bh
   140053df4:	test   DWORD PTR [rax+0x28],ecx
   140053df7:	call   FWORD PTR [rsi-0x3900b89a]
   140053dfd:	movabs ds:0xe5f0ffc5d1e4ff8b,al
   140053e06:	(bad)  
   140053e08:	cmc    
   140053e09:	in     eax,dx
   140053e0a:	call   0x128f2330e
   140053e0f:	push   rbx
   140053e11:	in     eax,dx
   140053e12:	call   0x12af33316
   140053e17:	push   rbp
   140053e19:	out    dx,eax
   140053e1a:	(bad)  
   140053e1b:	push   rdi
   140053e1d:	icebp  
   140053e1e:	in     eax,dx
   140053e1f:	(bad)  
   140053e20:	stc    
   140053e21:	hlt    
   140053e22:	icebp  
   140053e23:	(bad)  
   140053e24:	sti    
   140053e25:	div    edx
   140053e27:	push   rbp
   140053e29:	in     eax,dx
   140053e2a:	out    0xff,eax
   140053e2c:	jrcxz  0x140053e01
   140053e2e:	leave  
   140053e2f:	push   QWORD PTR [rsi-0x7f007f6e]
   140053e35:	rex.WXB xor rdi,r15
   140053e38:	(bad)  
   140053e39:	sub    DWORD PTR [rdx],edx
   140053e3b:	jmp    0xd21c69a1
   140053e40:	movsxd ebp,DWORD PTR [rip+0x211a]        # 0x140055f60
	...
   140053eaa:	add    BYTE PTR [rax],al
   140053eac:	movsxd ebp,DWORD PTR [rip+0x2c621019]        # 0x16c674ecb
   140053eb2:	sbb    DWORD PTR [rax+0x63],ebp
   140053eb5:	sbb    dh,BYTE PTR cs:[rbx-0xfe5ce97]
   140053ebc:	jns    0x140053efc
   140053ebe:	and    bh,bh
   140053ec0:	mov    WORD PTR [rdx+0x34],ss
   140053ec3:	jmp    QWORD PTR [rdx+rsi*2-0x603c00a8]
   140053eca:	mov    edi,edi
   140053ecc:	(bad)  
   140053ecd:	mov    bh,0xa7
   140053ecf:	(bad)  
   140053ed0:	fadd   st(3),st
   140053ed2:	mov    ah,0xff
   140053ed4:	faddp  st(7),st
   140053ed6:	mov    ecx,0xb9c7ddff
   140053edb:	call   rbp
   140053edd:	mov    ebp,0xabc5ffb1
   140053ee2:	sahf   
   140053ee3:	push   QWORD PTR [rcx-0x71007f70]
   140053ee9:	pop    rsi
   140053eea:	rex.W jmp FWORD PTR [rbp+0x36]
   140053eee:	(bad)  
   140053eef:	neg    DWORD PTR [rdi+0x26]
   140053ef2:	adc    BYTE PTR [rdx+0x7715295f],bh
   140053ef8:	movsxd ebp,DWORD PTR [rip+0x161a]        # 0x140055518
	...
   140053f76:	add    BYTE PTR [rax],al
   140053f78:	(bad)  
   140053f79:	sub    eax,0x2b611e19
   140053f7e:	sbb    BYTE PTR [rbx+0x60],dl
   140053f81:	sub    dl,BYTE PTR [rsi]
   140053f83:	ja     0x140053fe4
   140053f85:	(bad)  
   140053f86:	adc    ebp,DWORD PTR [rax-0x35edd79f]
   140053f8c:	addr32 sub eax,0x316be716
   140053f92:	sbb    ch,ch
   140053f94:	imul   esi,DWORD PTR [rdx],0x1a
   140053f97:	in     eax,dx
   140053f98:	push   0x63ea192f
   140053f9d:	sub    edx,DWORD PTR [rip+0x10255ecd]        # 0x1502a9e70
   140053fa3:	scas   al,BYTE PTR es:[rdi]
   140053fa4:	pop    rsp
   140053fa5:	and    ecx,DWORD PTR [rsi]
   140053fa7:	jnp    0x140054007
   140053fa9:	adc    bl,BYTE PTR es:[rcx+0x61]
   140053fad:	sub    ebx,DWORD PTR [rax]
   140053faf:	(bad)  
	...
   140053ff4:	(bad)  
   140053ff5:	inc    DWORD PTR [rax]
   140053ff7:	add    bh,bh
   140053ff9:	(bad)  
   140053ffa:	cmp    ch,BYTE PTR [rbx]
   140053ffc:	(bad)  
   140053ffd:	cld    
   140053ffe:	add    BYTE PTR [rax],al
   140054000:	(bad)  
   140054001:	(bad)  
   140054002:	fild   DWORD PTR [rbx-0x1]
   140054005:	lock add BYTE PTR [rax],al
   140054008:	ud0    esp,DWORD PTR [rdx+rax*2+0xc0ff]
   140054010:	add    edi,edi
   140054012:	(bad)  
   140054013:	(bad)  
   140054014:	inc    DWORD PTR [rax-0xff0000]
   14005401a:	jg     0x14005409b
   14005401c:	inc    DWORD PTR [rax]
   14005401e:	add    BYTE PTR [rax],al
   140054020:	add    bh,bh
   140054022:	fild   DWORD PTR [rbx-0x2]
   140054025:	add    BYTE PTR [rax],al
   140054027:	add    BYTE PTR [rax],al
   140054029:	jg     0x140053fcf
   14005402b:	rex.X cld 
   14005402d:	add    BYTE PTR [rax],al
   14005402f:	add    BYTE PTR [rax],al
   140054031:	(bad)  
   140054032:	add    BYTE PTR [rax],al
   140054034:	clc    
   140054035:	add    BYTE PTR [rax],al
   140054037:	add    BYTE PTR [rax],al
   140054039:	(bad)  
   14005403a:	add    BYTE PTR [rax],al
   14005403c:	lock add BYTE PTR [rax],al
   14005403f:	add    BYTE PTR [rax],al
   140054041:	sldt   WORD PTR [rax]
   140054044:	loopne 0x140054046
   140054046:	add    BYTE PTR [rax],al
   140054048:	add    BYTE PTR [rdi],al
   14005404a:	add    BYTE PTR [rax],al
   14005404c:	loopne 0x14005404e
   14005404e:	add    BYTE PTR [rax],al
   140054050:	add    BYTE PTR [rdi],al
   140054052:	add    BYTE PTR [rax],al
   140054054:	rol    BYTE PTR [rax],0x0
   140054057:	add    BYTE PTR [rax],al
   140054059:	add    eax,DWORD PTR [rax]
   14005405b:	add    al,al
   14005405d:	add    BYTE PTR [rax],al
   14005405f:	add    BYTE PTR [rax],al
   140054061:	add    eax,DWORD PTR [rax]
   140054063:	add    BYTE PTR [rax+0x0],al
   140054069:	add    DWORD PTR [rax],eax
   14005406b:	add    BYTE PTR [rax+0x0],al
   140054071:	add    DWORD PTR [rbx],ecx
   140054073:	or     BYTE PTR [rax+0x0],al
	...
   140054081:	add    BYTE PTR [rdi+0x32],bh
	...
   14005409f:	add    BYTE PTR [rax],al
   1400540a1:	add    BYTE PTR [rbx],cl
	...
   1400540eb:	add    BYTE PTR [rax+0x0],al
   1400540f1:	add    BYTE PTR [rax],al
   1400540f3:	add    BYTE PTR [rax+0x0],al
   1400540f9:	add    DWORD PTR [rax],eax
   1400540fb:	add    BYTE PTR [rax+0x0],al
   140054101:	add    DWORD PTR [rax],eax
   140054103:	add    al,al
   140054105:	add    BYTE PTR [rax],al
   140054107:	add    BYTE PTR [rax],al
   140054109:	add    eax,DWORD PTR [rax]
   14005410b:	add    al,al
   14005410d:	add    BYTE PTR [rax],al
   14005410f:	add    BYTE PTR [rax],al
   140054111:	add    eax,DWORD PTR [rax]
   140054113:	add    al,ah
   140054115:	add    BYTE PTR [rax],al
   140054117:	add    BYTE PTR [rax],al
   140054119:	(bad)  
   14005411a:	add    BYTE PTR [rax],al
   14005411c:	loopne 0x14005411e
   14005411e:	add    BYTE PTR [rax],al
   140054120:	add    BYTE PTR [rdi],al
   140054122:	add    BYTE PTR [rax],al
   140054124:	lock add BYTE PTR [rax],al
   140054127:	add    BYTE PTR [rax],al
   140054129:	sldt   WORD PTR [rax]
   14005412c:	clc    
   14005412d:	add    BYTE PTR [rax],al
   14005412f:	add    BYTE PTR [rax],al
   140054131:	(bad)  
   140054132:	add    BYTE PTR [rax],al
   140054134:	cld    
   140054135:	add    BYTE PTR [rax],al
   140054137:	add    BYTE PTR [rax],al
   140054139:	(bad)  
   14005413a:	add    BYTE PTR [rax],al
   14005413c:	inc    BYTE PTR [rax]
   14005413e:	add    BYTE PTR [rax],al
   140054140:	add    BYTE PTR [rdi+0x0],bh
   140054143:	add    bh,bh
   140054145:	add    BYTE PTR [rax],al
   140054147:	add    BYTE PTR [rax],al
   140054149:	inc    DWORD PTR [rax]
   14005414b:	add    bh,bh
   14005414d:	add    BYTE PTR [rax],0x0
   140054150:	add    edi,edi
   140054152:	pop    rsp
   140054153:	and    edi,edi
   140054155:	loopne 0x140054157
   140054157:	add    BYTE PTR [rbx],al
   140054159:	inc    DWORD PTR [rax]
   14005415b:	add    bh,bh
   14005415d:	lock add BYTE PTR [rax],al
   140054160:	ud0    eax,DWORD PTR [rax]
   140054163:	add    bh,bh
   140054165:	cld    
   140054166:	add    BYTE PTR [rax],al
   140054168:	(bad)  
   140054169:	inc    DWORD PTR [rax]
   14005416b:	add    bh,bh
   14005416d:	inc    DWORD PTR [rax+0xffff01]
   140054173:	add    BYTE PTR [rax],ch
   140054175:	add    BYTE PTR [rax],al
   140054177:	add    BYTE PTR [rax],ah
   140054179:	add    BYTE PTR [rax],al
   14005417b:	add    BYTE PTR [rax+0x0],al
   14005417e:	add    BYTE PTR [rax],al
   140054180:	add    DWORD PTR [rax],eax
   140054182:	and    BYTE PTR [rax],al
	...
   1400541c4:	movsxd ebp,DWORD PTR [rip+0x2e631a1a]        # 0x16e685be4
   1400541ca:	sbb    bl,BYTE PTR [rbp+riz*2+0x2f]
   1400541ce:	sbb    ebx,DWORD PTR [rax+rbp*2+0x6bc71c31]
   1400541d5:	xor    bl,BYTE PTR [rip+0x1d336cde]        # 0x15d38aeb9
   1400541db:	in     eax,dx
   1400541dc:	ins    BYTE PTR es:[rdi],dx
   1400541dd:	xor    ebx,DWORD PTR [rip+0x1d326bed]        # 0x15d37add0
   1400541e3:	fisubr WORD PTR [rax+0x31]
   1400541e6:	sbb    al,0xc7
   1400541e8:	gs (bad) 
   1400541ea:	sbb    ebx,DWORD PTR [rbx+riz*2+0x635c1a2e]
   1400541f1:	sub    eax,0x1a1a
	...
   14005423a:	add    BYTE PTR [rax],al
   14005423c:	movsxd ebp,DWORD PTR [rip+0x2f652f1a]        # 0x16f6a715c
   140054242:	sbb    ebx,DWORD PTR [rbp-0x12e1cc94]
   140054248:	jae    0x140054282
   14005424a:	and    bh,bh
   14005424c:	ja     0x140054289
   14005424e:	and    bh,bh
   140054250:	jns    0x14005428e
   140054252:	and    edi,edi
   140054254:	jp     0x140054293
   140054256:	and    edi,edi
   140054258:	jnp    0x140054297
   14005425a:	and    edi,edi
   14005425c:	jp     0x14005429b
   14005425e:	and    edi,edi
   140054260:	jp     0x14005429f
   140054262:	and    edi,edi
   140054264:	jns    0x1400542a2
   140054266:	and    edi,edi
   140054268:	ja     0x1400542a5
   14005426a:	and    bh,bh
   14005426c:	jae    0x1400542a6
   14005426e:	and    bh,bh
   140054270:	ins    BYTE PTR es:[rdi],dx
   140054271:	xor    ebx,DWORD PTR [rsi]
   140054273:	in     eax,dx
   140054274:	gs (bad) 
   140054276:	sbb    ebx,DWORD PTR [rbp+0x2f1a2d63]
	...
   1400542b4:	movsxd ebp,DWORD PTR [rip+0x2e640d1a]        # 0x16e694fd4
   1400542ba:	sbb    cl,BYTE PTR [rsi+rbp*2+0x77f71e35]
   1400542c1:	cmp    esp,DWORD PTR [rdx]
   1400542c3:	(bad)  
   1400542c4:	jnp    0x140054304
   1400542c6:	and    al,0xff
   1400542c8:	jl     0x140054308
   1400542ca:	and    eax,0x253f7cff
   1400542cf:	(bad)  
   1400542d0:	jge    0x140054312
   1400542d2:	es (bad) 
   1400542d4:	jle    0x140054317
   1400542d6:	es (bad) 
   1400542d8:	jg     0x14005431c
   1400542da:	es (bad) 
   1400542dc:	jg     0x140054320
   1400542de:	es (bad) 
   1400542e0:	jle    0x140054323
   1400542e2:	es (bad) 
   1400542e4:	jge    0x140054326
   1400542e6:	es (bad) 
   1400542e8:	jl     0x140054329
   1400542ea:	es (bad) 
   1400542ec:	jl     0x14005432c
   1400542ee:	and    eax,0x243d7bff
   1400542f3:	push   QWORD PTR [rdi+0x3b]
   1400542f6:	and    bh,bh
   1400542f8:	outs   dx,BYTE PTR ds:[rsi]
   1400542f9:	xor    eax,0x2e64f71e
   1400542fe:	sbb    cl,BYTE PTR [rbx+riz*2+0xd1a2d]
	...
   14005432d:	add    BYTE PTR [rax],al
   14005432f:	add    BYTE PTR [rbx+0x2d],ah
   140054332:	sbb    ch,BYTE PTR [rbx]
   140054334:	push   0x76cd1c30
   140054339:	cmp    ah,BYTE PTR [rdx]
   14005433b:	(bad)  
   14005433c:	jl     0x14005437d
   14005433e:	and    eax,0x26407eff
   140054343:	(bad)  
   140054344:	jg     0x140054388
   140054346:	sub    bh,bh
   140054348:	add    DWORD PTR [rbp+0x29],0x2b4784ff
   14005434f:	inc    DWORD PTR [rsi-0x7800d2b7]
   140054355:	rex.WXB
   140054356:	dec    DWORD PTR cs:[rcx-0x7600d0b3]
   14005435d:	rex.WR (bad) 
   14005435f:	dec    DWORD PTR [rax-0x7900d1b5]
   140054365:	rex.WB sub rax,0x2b4784ff
   14005436b:	inc    DWORD PTR [rcx+0x7fff2944]
   140054371:	rex.X (bad) 
   140054373:	(bad)  
   140054374:	jge    0x1400543b6
   140054376:	es (bad) 
   140054378:	jl     0x1400543b9
   14005437a:	and    eax,0x223a76ff
   14005437f:	jmp    FWORD PTR [rax+0x30]
   140054382:	sbb    al,0xcd
   140054384:	movsxd ebp,DWORD PTR [rip+0x2b1a]        # 0x140056ea4
	...
   1400543aa:	add    BYTE PTR [rax],al
   1400543ac:	movsxd ebp,DWORD PTR [rip+0x326a371a]        # 0x1726f7acc
   1400543b2:	sbb    eax,0x243d7ae7
   1400543b7:	(bad)  
   1400543b8:	jge    0x1400543fa
   1400543ba:	inc    DWORD PTR es:[rax-0x7b00d8bd]
   1400543c1:	rex.RXB sub r15b,r15b
   1400543c4:	mov    BYTE PTR [rbx+0x2d],cl
   1400543c7:	dec    DWORD PTR [rbx-0x7000cfb1]
   1400543cd:	push   rbx
   1400543ce:	xor    al,0xff
   1400543d0:	xchg   ebx,eax
   1400543d1:	push   rsi
   1400543d2:	call   QWORD PTR ss:[rbp-0x6900c7a7]
   1400543d9:	pop    rbx
   1400543da:	cmp    edi,edi
   1400543dc:	xchg   edi,eax
   1400543dd:	pop    rbx
   1400543de:	cmp    edi,edi
   1400543e0:	xchg   ebp,eax
   1400543e1:	pop    rcx
   1400543e2:	cmp    bh,bh
   1400543e4:	xchg   ebx,eax
   1400543e5:	push   rsi
   1400543e6:	dec    DWORD PTR ss:[rdi-0x7400ccad]
   1400543ed:	rex.WRXB xor r15b,r15b
   1400543f0:	xchg   DWORD PTR [rbx+0x2d],ecx
   1400543f3:	inc    DWORD PTR [rbx-0x7f00d5ba]
   1400543f9:	rex.XB (bad) 
   1400543fb:	(bad)  
   1400543fc:	jge    0x14005443e
   1400543fe:	es (bad) 
   140054400:	jns    0x14005443f
   140054402:	and    al,0xff
   140054404:	push   0x32
   140054406:	sbb    eax,0x1a2d63e7
   14005440b:	(bad)  
	...
   140054428:	movsxd ebp,DWORD PTR [rip+0x336a291a]        # 0x1736f6d48
   14005442e:	sbb    eax,0x243e7be8
   140054433:	(bad)  
   140054434:	jle    0x140054477
   140054436:	inc    DWORD PTR es:[rcx-0x7900d7bb]
   14005443d:	rex.WX sub al,0xff
   140054440:	mov    ecx,DWORD PTR [rdi+0x2f]
   140054443:	call   QWORD PTR [rcx-0x6900cbab]
   140054449:	pop    rbx
   14005444a:	cmp    bh,bh
   14005444c:	pushf  
   14005444d:	(bad)  
   14005444e:	cmp    eax,0x4164a2ff
   140054453:	jmp    QWORD PTR [rbp-0x5700bb98]
   140054459:	push   0x45
   14005445b:	jmp    FWORD PTR [rax-0x5a00ba96]
   140054461:	push   0x65a1ff44
   140054466:	call   FWORD PTR [r8+riz*2+0x5b97ff3d]
   14005446e:	cmp    edi,edi
   140054470:	nop
   140054471:	push   rsp
   140054472:	xor    al,0xff
   140054474:	mov    ecx,DWORD PTR [rdi+0x2f]
   140054477:	inc    DWORD PTR [rbp-0x7e00d4b7]
   14005447d:	sub    dil,r15b
   140054480:	jge    0x1400544c2
   140054482:	es (bad) 
   140054484:	jnp    0x1400544c4
   140054486:	and    al,0xff
   140054488:	push   0x33
   14005448a:	sbb    eax,0x1a2d63e8
   14005448f:	sub    DWORD PTR [rax],eax
	...
   1400544a1:	add    BYTE PTR [rax],al
   1400544a3:	add    BYTE PTR [rbx+0x2d],ah
   1400544a6:	sbb    cl,BYTE PTR [rax+rbp*2]
   1400544a9:	xor    DWORD PTR [rax+rdx*8],ebx
   1400544ac:	jp     0x1400544eb
   1400544ae:	and    al,0xff
   1400544b0:	jle    0x1400544f3
   1400544b2:	(bad)  
   1400544b3:	inc    DWORD PTR [rdx-0x7600d5ba]
   1400544b9:	rex.WR
   1400544ba:	dec    DWORD PTR cs:[rdi-0x6900ccad]
   1400544c1:	pop    rcx
   1400544c2:	cmp    bh,bh
   1400544c4:	popf   
   1400544c5:	(bad)  
   1400544c6:	cmp    eax,0x4368a5ff
   1400544cb:	jmp    FWORD PTR [rsi+rbp*2+0x73b2ff48]
   1400544d2:	rex.WR push QWORD PTR [rdi-0x4600b089]
   1400544d9:	jns    0x14005452b
   1400544db:	(bad)  
   1400544dc:	mov    edx,0xb7ff5079
   1400544e1:	ja     0x140054532
   1400544e3:	push   QWORD PTR [rdx-0x5300b38d]
   1400544e9:	outs   dx,BYTE PTR ds:[rsi]
   1400544ea:	rex.W jmp QWORD PTR [rbp-0x6200bc99]
   1400544f1:	(bad)  
   1400544f2:	cmp    al,0xff
   1400544f4:	xchg   ebp,eax
   1400544f5:	pop    rax
   1400544f6:	(bad)  
   1400544f7:	dec    DWORD PTR [rbp-0x7800ceaf]
   1400544fd:	rex.WX sub al,0xff
   140054500:	add    DWORD PTR [rcx+rbp*1-0x1],0xff26407e
   140054508:	jp     0x140054547
   14005450a:	and    al,0xff
   14005450c:	push   0x63d01c31
   140054511:	sub    eax,0xc1a
	...
   140054522:	add    BYTE PTR [rax],al
   140054524:	gs (bad) 
   140054526:	sbb    ecx,DWORD PTR [rbp-0xe2cb90]
   14005452c:	jae    0x140054562
   14005452e:	sbb    bh,bh
   140054530:	jne    0x140054569
   140054532:	sbb    al,0xff
   140054534:	jnp    0x140054573
   140054536:	and    edi,edi
   140054538:	add    DWORD PTR [rbx+0x25],0x294986ff
   14005453f:	dec    DWORD PTR [rbp-0x6b00d1b1]
   140054545:	push   rbp
   140054546:	xor    edi,edi
   140054548:	(bad)  
   140054549:	pop    rbx
   14005454a:	cmp    bh,bh
   14005454c:	movabs eax,ds:0x7fff3c62a2ff3c61
   140054555:	rex.XB (bad) 
   140054557:	(bad)  
   140054558:	jl     0x14005459c
   14005455a:	(bad)  
   14005455b:	(bad)  
   14005455c:	jge    0x1400545a1
   14005455e:	sub    bh,bh
   140054560:	jle    0x1400545a5
   140054562:	sub    bh,bh
   140054564:	movabs al,ds:0x9aff3d62a2ff3c60
   14005456d:	pop    rbx
   14005456e:	(bad)  
   14005456f:	call   QWORD PTR [rbx-0x7300ccab]
   140054575:	rex.WRXB
   140054576:	inc    DWORD PTR cs:[rbp+0x7fff2848]
   14005457d:	rex.B and al,0xff
   140054580:	jns    0x1400545be
   140054582:	and    bh,bh
   140054584:	je     0x1400545bc
   140054586:	sbb    al,0xff
   140054588:	jae    0x1400545be
   14005458a:	sbb    bh,bh
   14005458c:	jo     0x1400545c2
   14005458e:	sbb    edi,edi
   140054590:	gs (bad) 
   140054592:	sbb    ecx,DWORD PTR [rbp+0x0]
	...
   1400545a0:	movsxd ebp,DWORD PTR [rip+0x326c2b1a]        # 0x1727170c0
   1400545a6:	sbb    edi,ecx
   1400545a8:	jnp    0x1400545f2
   1400545aa:	xor    al,0xff
   1400545ac:	mov    WORD PTR [rsi+rdx*2-0x1],fs
   1400545b0:	mov    WORD PTR [rbx+0x55],fs
   1400545b3:	dec    DWORD PTR [rbx+riz*2+0x638bff55]
   1400545ba:	push   rbp
   1400545bb:	dec    DWORD PTR [rbx-0x7400aa9d]
   1400545c1:	movsxd edx,DWORD PTR [rbp-0x1]
   1400545c4:	mov    esp,DWORD PTR [rbx+0x54]
   1400545c7:	dec    DWORD PTR [rbx-0x7400ab9d]
   1400545cd:	movsxd edx,DWORD PTR [rdi+rdi*8-0x7b]
   1400545d1:	pop    rsp
   1400545d2:	rex.WRB push QWORD PTR [r10-0x26006b65]
   1400545d9:	(bad)  
   1400545da:	retf   
   1400545db:	call   rdi
   1400545dd:	retf   
   1400545de:	enter  0xd8ff,0xcd
   1400545e2:	retf   0xbaff
   1400545e5:	movabs ds:0x638bff4e5d86ff9b,eax
   1400545ee:	push   rbp
   1400545ef:	dec    DWORD PTR [rbx-0x7400aa9d]
   1400545f5:	movsxd edx,DWORD PTR [rbp-0x1]
   1400545f8:	mov    esp,DWORD PTR [rbx+0x55]
   1400545fb:	dec    DWORD PTR [rbx-0x7400aa9d]
   140054601:	movsxd edx,DWORD PTR [rbp-0x1]
   140054604:	mov    WORD PTR [rbp+rdx*2-0x1],fs
   140054608:	mov    WORD PTR [rsi+rdx*2-0x1],fs
   14005460c:	(bad)  
   14005460d:	pop    rsi
   14005460e:	rex.WX jmp FWORD PTR [rbp+0x33]
   140054612:	sbb    al,0xf9
   140054614:	movsxd ebp,DWORD PTR [rip+0x2c19]        # 0x140057233
   14005461a:	add    BYTE PTR [rax],al
   14005461c:	add    BYTE PTR [rax],al
   14005461e:	add    BYTE PTR [rax],al
   140054620:	data16 (bad) 
   140054622:	sbb    bl,BYTE PTR [rsi-0xe6cc8e]
   140054628:	pushf  
   140054629:	jno    0x14005468a
   14005462b:	call   rdi
   14005462d:	(bad)  
   14005462e:	mov    edi,0xc9d1e1ff
   140054633:	jmp    rsp
   140054635:	(bad)  
   140054636:	int    0xff
   140054638:	in     eax,0xd5
   14005463a:	int    0xff
   14005463c:	in     eax,0xd7
   14005463e:	(bad)  
   14005463f:	jmp    rdi
   140054641:	fmul   st,st(7)
   140054643:	(bad)  
   140054644:	jmp    0x12c051723
   140054649:	fcmovnbe st,st(2)
   14005464b:	(bad)  
   14005464c:	in     al,dx
   14005464d:	(bad)  
   14005464f:	(bad)  
   140054650:	out    dx,eax
   140054651:	(bad)  
   140054653:	push   rsi
   140054655:	out    0xdb,al
   140054657:	(bad)  
   140054658:	fidiv  DWORD PTR [rdx+rbx*4+0x769acfff]
   14005465f:	(bad)  
   140054660:	fistp  QWORD PTR [rax-0x1d0e0063]
   140054666:	fdivr  st,st(7)
   140054668:	in     al,dx
   140054669:	(bad)  
   14005466b:	(bad)  
   14005466c:	jmp    0x140054649
   14005466e:	sar    bh,cl
   140054670:	jmp    0x12805174f
   140054675:	fmul   st,st(7)
   140054677:	jmp    rbp
   140054679:	xlat   BYTE PTR ds:[rbx]
   14005467a:	(bad)  
   14005467b:	jmp    rbp
   14005467d:	(bad)  
   14005467e:	int    0xff
   140054680:	in     eax,0xd5
   140054682:	int    0xff
   140054684:	loope  0x140054657
   140054686:	retf   0xd6ff
   140054689:	(bad)  
   14005468a:	mov    edi,0x93a0beff
   14005468f:	push   QWORD PTR [rsi+rsi*1+0x1c]
   140054693:	jmp    QWORD PTR [rbp+0x2e]
   140054696:	sbb    bl,BYTE PTR [rsi+0x0]
   14005469c:	movsxd ebp,DWORD PTR [rip+0x336c181a]        # 0x173715ebc
   1400546a2:	sbb    eax,0x223d7bf0
   1400546a7:	(bad)  
   1400546a8:	js     0x1400546ec
   1400546aa:	sub    edi,edi
   1400546ac:	lea    esp,[rbx+0x54]
   1400546af:	push   QWORD PTR [rcx+0x37]
   1400546b2:	(bad)  
   1400546b3:	push   QWORD PTR [rsi+0x36]
   1400546b6:	(bad)  
   1400546b7:	inc    DWORD PTR [rdi-0x6b00d9b8]
   1400546bd:	push   rdi
   1400546be:	xor    bh,bh
   1400546c0:	lahf   
   1400546c1:	(bad)  
   1400546c2:	cmp    bh,bh
   1400546c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400546c5:	rex jmp FWORD PTR [esi-0x4b00ba93]
   1400546cd:	jb     0x140054718
   1400546cf:	jmp    FWORD PTR [rdi-0x7900bb93]
   1400546d5:	rex.RX and al,0xff
   1400546d8:	lea    edx,[rdx+0x33]
   1400546db:	dec    DWORD PTR [rsi-0x5f00c6ab]
   1400546e1:	pop    rbp
   1400546e2:	push   QWORD PTR ss:[rbx-0x4a00bb91]
   1400546e9:	jae    0x140054734
   1400546eb:	jmp    FWORD PTR [rdi-0x5800b992]
   1400546f1:	call   FWORD PTR [r15d-0x6b00c5a0]
   1400546f9:	push   rsi
   1400546fa:	xor    bh,bh
   1400546fc:	test   DWORD PTR [rdi+0x26],eax
   1400546ff:	push   QWORD PTR [rcx+0x32]
   140054702:	adc    eax,0xe2662ff
   140054707:	(bad)  
   140054708:	jg     0x14005475c
   14005470a:	rex call QWORD PTR [rax+0x79ff485e]
   140054711:	cmp    bl,BYTE PTR [rdi]
   140054713:	jmp    FWORD PTR [rbx+rsi*1+0x1d]
   140054717:	lock movsxd ebp,DWORD PTR [rip+0x2d63181a]        # 0x16d685f38
   14005471e:	sbb    bl,BYTE PTR [rbx+rsi*2+0x38]
   140054722:	and    bh,bh
   140054724:	jns    0x140054760
   140054726:	(bad)  
   140054727:	inc    DWORD PTR [rcx-0x600c8b4]
   14005472d:	clc    
   14005472e:	clc    
   14005472f:	jmp    rax
   140054731:	(bad)  
   140054732:	sar    bh,cl
   140054734:	stos   DWORD PTR es:[rdi],eax
   140054735:	mov    es,WORD PTR [rdi+rdi*8-0xb8a67a]
   14005473c:	ja     0x14005477f
   14005473e:	sub    edi,edi
   140054740:	ja     0x14005477e
   140054742:	and    edi,edi
   140054744:	jnp    0x140054785
   140054746:	and    bh,bh
   140054748:	jl     0x140054789
   14005474a:	and    bh,bh
   14005474c:	jbe    0x140054788
   14005474e:	(bad)  
   14005474f:	push   QWORD PTR [rax+0x3b]
   140054752:	call   QWORD PTR es:[rbp-0x2e00998e]
   140054759:	mov    esi,0xa2baffb6
   14005475e:	cdq    
   14005475f:	(bad)  
   140054760:	mov    edx,0x86ff99a1
   140054765:	push   rbx
   140054766:	cmp    al,0xff
   140054768:	jg     0x1400547ae
   14005476a:	(bad)  
   14005476b:	(bad)  
   14005476c:	jg     0x1400547af
   14005476e:	and    al,0xff
   140054770:	jp     0x1400547af
   140054772:	and    edi,edi
   140054774:	jb     0x1400547ad
   140054776:	sbb    eax,0x1f366eff
   14005477b:	push   QWORD PTR [rdi+0x46]
   14005477e:	xor    al,0xff
   140054780:	cwde   
   140054781:	je     0x1400547eb
   140054783:	dec    esp
   140054785:	mov    ebx,0xfafbffb5
   14005478a:	cli    
   14005478b:	push   QWORD PTR [rsi+0x73ff8493]
   140054791:	xor    edx,DWORD PTR [rsi]
   140054793:	push   QWORD PTR [rbx+0x38]
   140054796:	and    bh,bh
   140054798:	movsxd ebp,DWORD PTR [rip+0x2f665c1a]        # 0x16f6ba3b8
   14005479e:	sbb    ebx,DWORD PTR [rdi+rsi*2+0x79ff223b]
   1400547a5:	cmp    DWORD PTR [rdi],ebx
   1400547a7:	(bad)  
   1400547a8:	jg     0x1400547f4
   1400547aa:	xor    eax,0xf2f3f6ff
   1400547af:	(bad)  
   1400547b0:	(bad)  
   1400547b1:	(bad)  
   1400547b2:	(bad)  
   1400547b3:	(bad)  
   1400547b4:	(bad)  
   1400547b5:	(bad)  
   1400547b6:	(bad)  
   1400547b7:	(bad)  
   1400547b8:	std    
   1400547b9:	std    
   1400547ba:	std    
   1400547bb:	jmp    rdi
   1400547bd:	loopne 0x14005479d
   1400547bf:	call   rax
   1400547c1:	ret    0xffbd
   1400547c4:	shr    BYTE PTR [rsi+riz*4-0x5d564101],0xff
   1400547cc:	int3   
   1400547cd:	mov    esp,0xe3e9ffb7
   1400547d2:	loope  0x1400547d3
   1400547d4:	(bad)  
   1400547d5:	(bad)  
   1400547d6:	(bad)  
   1400547d7:	(bad)  
   1400547d8:	jmp    0x1000523bc
   1400547dd:	test   al,0x9e
   1400547df:	(bad)  
   1400547e0:	(bad)  
   1400547e1:	(bad)  
   1400547e2:	(bad)  
   1400547e3:	push   rbx
   1400547e5:	icebp  
   1400547e6:	icebp  
   1400547e7:	call   rbp
   1400547e9:	enter  0xffc4,0xc1
   1400547ed:	lods   eax,DWORD PTR ds:[rsi]
   1400547ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400547ef:	(bad)  
   1400547f0:	mov    esi,0xcaffa2a9
   1400547f5:	mov    eax,0xd5dfffb3
   1400547fa:	sar    edi,1
   1400547fc:	div    esp
   1400547fe:	hlt    
   1400547ff:	(bad)  
   140054800:	(bad)  
   140054801:	(bad)  
   140054802:	(bad)  
   140054803:	(bad)  
   140054804:	(bad)  
   140054805:	(bad)  
   140054806:	(bad)  
   140054807:	(bad)  
   140054808:	(bad)  
   140054809:	(bad)  
   14005480a:	(bad)  
   14005480b:	push   QWORD PTR [rcx+0x73ff7e8d]
   140054811:	xor    edx,DWORD PTR [rdi]
   140054813:	push   QWORD PTR [rdi+0x3b]
   140054816:	and    bh,bh
   140054818:	data16 (bad) 
   14005481a:	sbb    ebx,DWORD PTR [rbp-0x37e3ce97]
   140054820:	jns    0x14005485e
   140054822:	and    edi,edi
   140054824:	js     0x14005485f
   140054826:	(bad)  
   140054827:	(bad)  
   140054828:	jg     0x140054874
   14005482a:	xor    eax,0xf1f2f5ff
   14005482f:	(bad)  
   140054830:	(bad)  
   140054831:	(bad)  
   140054832:	(bad)  
   140054833:	(bad)  
   140054834:	(bad)  
   140054835:	(bad)  
   140054836:	(bad)  
   140054837:	(bad)  
   140054838:	(bad)  
   140054839:	(bad)  
   14005483a:	(bad)  
   14005483b:	(bad)  
   14005483c:	(bad)  
   14005483d:	(bad)  
   14005483e:	(bad)  
   14005483f:	(bad)  
   140054840:	(bad)  
   140054841:	(bad)  
   140054842:	(bad)  
   140054843:	(bad)  
   140054844:	(bad)  
   140054845:	(bad)  
   140054846:	(bad)  
   140054847:	(bad)  
   140054848:	(bad)  
   140054849:	(bad)  
   14005484a:	(bad)  
   14005484b:	(bad)  
   14005484c:	(bad)  
   14005484d:	(bad)  
   14005484e:	(bad)  
   14005484f:	(bad)  
   140054850:	(bad)  
   140054851:	(bad)  
   140054852:	(bad)  
   140054853:	(bad)  
   140054854:	(bad)  
   140054855:	(bad)  
   140054856:	(bad)  
   140054857:	jmp    rbx
   140054859:	fcom   st(3)
   14005485b:	(bad)  
   14005485c:	mov    ebp,0xffff9ca5
   140054861:	(bad)  
   140054862:	(bad)  
   140054863:	(bad)  
   140054864:	(bad)  
   140054865:	(bad)  
   140054866:	(bad)  
   140054867:	(bad)  
   140054868:	(bad)  
   140054869:	(bad)  
   14005486a:	(bad)  
   14005486b:	(bad)  
   14005486c:	(bad)  
   14005486d:	(bad)  
   14005486e:	(bad)  
   14005486f:	(bad)  
   140054870:	(bad)  
   140054871:	(bad)  
   140054872:	(bad)  
   140054873:	(bad)  
   140054874:	(bad)  
   140054875:	(bad)  
   140054876:	(bad)  
   140054877:	(bad)  
   140054878:	(bad)  
   140054879:	(bad)  
   14005487a:	(bad)  
   14005487b:	(bad)  
   14005487c:	(bad)  
   14005487d:	(bad)  
   14005487e:	(bad)  
   14005487f:	(bad)  
   140054880:	(bad)  
   140054881:	(bad)  
   140054882:	(bad)  
   140054883:	(bad)  
   140054884:	(bad)  
   140054885:	(bad)  
   140054886:	(bad)  
   140054887:	(bad)  
   140054888:	(bad)  
   140054889:	(bad)  
   14005488a:	(bad)  
   14005488b:	push   QWORD PTR [rcx+0x73ff7e8d]
   140054891:	xor    dl,BYTE PTR [rdi]
   140054893:	(bad)  
   140054894:	jns    0x1400548d2
   140054896:	and    edi,edi
   140054898:	imul   esi,DWORD PTR [rcx],0x326bc81c
   14005489e:	sbb    eax,0x233c79df
   1400548a3:	(bad)  
   1400548a4:	js     0x1400548df
   1400548a6:	(bad)  
   1400548a7:	(bad)  
   1400548a8:	jg     0x1400548f4
   1400548aa:	xor    eax,0xf1f2f5ff
   1400548af:	(bad)  
   1400548b0:	(bad)  
   1400548b1:	(bad)  
   1400548b2:	(bad)  
   1400548b3:	(bad)  
   1400548b4:	(bad)  
   1400548b5:	(bad)  
   1400548b6:	(bad)  
   1400548b7:	(bad)  
   1400548b8:	(bad)  
   1400548b9:	(bad)  
   1400548ba:	(bad)  
   1400548bb:	(bad)  
   1400548bc:	(bad)  
   1400548bd:	(bad)  
   1400548be:	(bad)  
   1400548bf:	(bad)  
   1400548c0:	(bad)  
   1400548c1:	(bad)  
   1400548c2:	(bad)  
   1400548c3:	(bad)  
   1400548c4:	std    
   1400548c5:	cld    
   1400548c6:	cld    
   1400548c7:	inc    edi
   1400548c9:	mov    dl,0xa9
   1400548cb:	jmp    FWORD PTR [rdi-0x2b008978]
   1400548d1:	mov    esi,0xffffffb4
   1400548d6:	(bad)  
   1400548d7:	jmp    rsp
   1400548d9:	fcom   st(4)
   1400548db:	(bad)  
   1400548dc:	mov    ebp,0xffff9ba5
   1400548e1:	(bad)  
   1400548e2:	(bad)  
   1400548e3:	(bad)  
   1400548e4:	(bad)  
   1400548e5:	(bad)  
   1400548e6:	(bad)  
   1400548e7:	(bad)  
   1400548e8:	(bad)  
   1400548e9:	(bad)  
   1400548ea:	(bad)  
   1400548eb:	(bad)  
   1400548ec:	(bad)  
   1400548ed:	(bad)  
   1400548ee:	(bad)  
   1400548ef:	(bad)  
   1400548f0:	(bad)  
   1400548f1:	(bad)  
   1400548f2:	(bad)  
   1400548f3:	(bad)  
   1400548f4:	(bad)  
   1400548f5:	(bad)  
   1400548f6:	(bad)  
   1400548f7:	(bad)  
   1400548f8:	(bad)  
   1400548f9:	(bad)  
   1400548fa:	(bad)  
   1400548fb:	(bad)  
   1400548fc:	(bad)  
   1400548fd:	(bad)  
   1400548fe:	(bad)  
   1400548ff:	(bad)  
   140054900:	(bad)  
   140054901:	(bad)  
   140054902:	(bad)  
   140054903:	(bad)  
   140054904:	(bad)  
   140054905:	(bad)  
   140054906:	(bad)  
   140054907:	(bad)  
   140054908:	(bad)  
   140054909:	(bad)  
   14005490a:	(bad)  
   14005490b:	push   QWORD PTR [rcx+0x73ff7e8d]
   140054911:	xor    dl,BYTE PTR [rdi]
   140054913:	(bad)  
   140054914:	jp     0x140054953
   140054916:	and    edi,edi
   140054918:	imul   esi,DWORD PTR [rdx],0x1d
   14005491b:	fild   QWORD PTR [rbx+rsi*1+0x1d]
   14005491f:	in     eax,dx
   140054920:	jp     0x14005495e
   140054922:	and    edi,edi
   140054924:	ja     0x14005495f
   140054926:	(bad)  
   140054927:	(bad)  
   140054928:	jle    0x140054974
   14005492a:	xor    eax,0xf1f2f5ff
   14005492f:	(bad)  
   140054930:	(bad)  
   140054931:	(bad)  
   140054932:	(bad)  
   140054933:	(bad)  
   140054934:	(bad)  
   140054935:	(bad)  
   140054936:	(bad)  
   140054937:	(bad)  
   140054938:	(bad)  
   140054939:	(bad)  
   14005493a:	(bad)  
   14005493b:	(bad)  
   14005493c:	(bad)  
   14005493d:	(bad)  
   14005493e:	(bad)  
   14005493f:	(bad)  
   140054940:	(bad)  
   140054941:	(bad)  
   140054942:	(bad)  
   140054943:	(bad)  
   140054944:	cld    
   140054945:	cld    
   140054946:	sti    
   140054947:	inc    esi
   140054949:	mov    dl,0xaa
   14005494b:	call   QWORD PTR [rax+0x76ff4b5f]
   140054951:	xor    al,0x16
   140054953:	inc    ebp
   140054955:	stos   BYTE PTR es:[rdi],al
   140054956:	lahf   
   140054957:	(bad)  
   140054958:	(bad)  
   140054959:	jrcxz  0x14005493b
   14005495b:	(bad)  
   14005495c:	mov    ebx,0xffff9ba3
   140054961:	(bad)  
   140054962:	(bad)  
   140054963:	(bad)  
   140054964:	(bad)  
   140054965:	(bad)  
   140054966:	(bad)  
   140054967:	(bad)  
   140054968:	(bad)  
   140054969:	(bad)  
   14005496a:	(bad)  
   14005496b:	(bad)  
   14005496c:	(bad)  
   14005496d:	(bad)  
   14005496e:	(bad)  
   14005496f:	(bad)  
   140054970:	(bad)  
   140054971:	(bad)  
   140054972:	(bad)  
   140054973:	(bad)  
   140054974:	(bad)  
   140054975:	(bad)  
   140054976:	(bad)  
   140054977:	(bad)  
   140054978:	(bad)  
   140054979:	(bad)  
   14005497a:	(bad)  
   14005497b:	(bad)  
   14005497c:	(bad)  
   14005497d:	(bad)  
   14005497e:	(bad)  
   14005497f:	(bad)  
   140054980:	(bad)  
   140054981:	(bad)  
   140054982:	(bad)  
   140054983:	(bad)  
   140054984:	(bad)  
   140054985:	(bad)  
   140054986:	(bad)  
   140054987:	(bad)  
   140054988:	(bad)  
   140054989:	(bad)  
   14005498a:	(bad)  
   14005498b:	push   QWORD PTR [rcx+0x72ff7e8d]
   140054991:	xor    dl,BYTE PTR [rdi]
   140054993:	(bad)  
   140054994:	jp     0x1400549d3
   140054996:	and    edi,edi
   140054998:	ins    BYTE PTR es:[rdi],dx
   140054999:	xor    ebx,DWORD PTR [rip+0x1d336ced]        # 0x15d38b68c
   14005499f:	in     eax,dx
   1400549a0:	jns    0x1400549de
   1400549a2:	and    bh,bh
   1400549a4:	jbe    0x1400549dd
   1400549a6:	sbb    eax,0x34497dff
   1400549ab:	push   rbp
   1400549ad:	repnz icebp 
   1400549af:	(bad)  
   1400549b0:	(bad)  
   1400549b1:	(bad)  
   1400549b2:	(bad)  
   1400549b3:	(bad)  
   1400549b4:	(bad)  
   1400549b5:	(bad)  
   1400549b6:	(bad)  
   1400549b7:	(bad)  
   1400549b8:	(bad)  
   1400549b9:	(bad)  
   1400549ba:	(bad)  
   1400549bb:	(bad)  
   1400549bc:	(bad)  
   1400549bd:	(bad)  
   1400549be:	(bad)  
   1400549bf:	(bad)  
   1400549c0:	(bad)  
   1400549c1:	(bad)  
   1400549c2:	(bad)  
   1400549c3:	(bad)  
   1400549c4:	(bad)  
   1400549c5:	(bad)  
   1400549c6:	(bad)  
   1400549c7:	(bad)  
   1400549c8:	(bad)  
   1400549c9:	(bad)  
   1400549ca:	(bad)  
   1400549cb:	jmp    rbp
   1400549cd:	fcom   st(3)
   1400549cf:	push   QWORD PTR [rbx+0x33]
   1400549d2:	sbb    edi,edi
   1400549d4:	mov    edx,DWORD PTR [rsi+0x3f]
   1400549d7:	call   rbp
   1400549d9:	ret    
   1400549da:	mov    esp,0xa8b0c6ff
   1400549df:	(bad)  
   1400549e0:	(bad)  
   1400549e1:	(bad)  
   1400549e2:	(bad)  
   1400549e3:	(bad)  
   1400549e4:	(bad)  
   1400549e5:	(bad)  
   1400549e6:	(bad)  
   1400549e7:	(bad)  
   1400549e8:	(bad)  
   1400549e9:	(bad)  
   1400549ea:	(bad)  
   1400549eb:	(bad)  
   1400549ec:	(bad)  
   1400549ed:	(bad)  
   1400549ee:	(bad)  
   1400549ef:	(bad)  
   1400549f0:	(bad)  
   1400549f1:	(bad)  
   1400549f2:	(bad)  
   1400549f3:	(bad)  
   1400549f4:	(bad)  
   1400549f5:	(bad)  
   1400549f6:	(bad)  
   1400549f7:	(bad)  
   1400549f8:	(bad)  
   1400549f9:	(bad)  
   1400549fa:	(bad)  
   1400549fb:	(bad)  
   1400549fc:	(bad)  
   1400549fd:	(bad)  
   1400549fe:	(bad)  
   1400549ff:	(bad)  
   140054a00:	(bad)  
   140054a01:	(bad)  
   140054a02:	(bad)  
   140054a03:	(bad)  
   140054a04:	(bad)  
   140054a05:	(bad)  
   140054a06:	(bad)  
   140054a07:	(bad)  
   140054a08:	(bad)  
   140054a09:	(bad)  
   140054a0a:	(bad)  
   140054a0b:	push   QWORD PTR [rax+0x71ff7d8c]
   140054a11:	xor    DWORD PTR [rsi],edx
   140054a13:	(bad)  
   140054a14:	jp     0x140054a53
   140054a16:	and    edi,edi
   140054a18:	ins    BYTE PTR es:[rdi],dx
   140054a19:	xor    ebx,DWORD PTR [rip+0x1d336bed]        # 0x15d38b60c
   140054a1f:	fistp  QWORD PTR [rcx+0x3c]
   140054a22:	and    bh,bh
   140054a24:	ja     0x140054a5d
   140054a26:	sbb    eax,0x34497eff
   140054a2b:	push   rbp
   140054a2d:	repnz icebp 
   140054a2f:	(bad)  
   140054a30:	(bad)  
   140054a31:	(bad)  
   140054a32:	(bad)  
   140054a33:	(bad)  
   140054a34:	(bad)  
   140054a35:	(bad)  
   140054a36:	(bad)  
   140054a37:	(bad)  
   140054a38:	(bad)  
   140054a39:	(bad)  
   140054a3a:	(bad)  
   140054a3b:	(bad)  
   140054a3c:	(bad)  
   140054a3d:	(bad)  
   140054a3e:	(bad)  
   140054a3f:	push   rcx
   140054a41:	jmp    0x140054a2b
   140054a43:	(bad)  
   140054a44:	call   0x140052326
   140054a49:	(bad)  
   140054a4a:	(bad)  
   140054a4b:	push   QWORD PTR [rcx+0x7aff7c8b]
   140054a51:	cmp    esp,DWORD PTR [rdx]
   140054a53:	inc    DWORD PTR [rax-0x7a00d2bb]
   140054a59:	rex.WR xor rax,0x7182a9ff
   140054a5f:	(bad)  
   140054a60:	(bad)  
   140054a61:	loope  0x140054a40
   140054a63:	(bad)  
   140054a64:	(bad)  
   140054a65:	(bad)  
   140054a66:	(bad)  
   140054a67:	(bad)  
   140054a68:	(bad)  
   140054a69:	(bad)  
   140054a6a:	(bad)  
   140054a6b:	(bad)  
   140054a6c:	(bad)  
   140054a6d:	(bad)  
   140054a6e:	(bad)  
   140054a6f:	(bad)  
   140054a70:	(bad)  
   140054a71:	(bad)  
   140054a72:	(bad)  
   140054a73:	(bad)  
   140054a74:	(bad)  
   140054a75:	(bad)  
   140054a76:	(bad)  
   140054a77:	(bad)  
   140054a78:	(bad)  
   140054a79:	(bad)  
   140054a7a:	(bad)  
   140054a7b:	(bad)  
   140054a7c:	(bad)  
   140054a7d:	(bad)  
   140054a7e:	(bad)  
   140054a7f:	(bad)  
   140054a80:	(bad)  
   140054a81:	(bad)  
   140054a82:	(bad)  
   140054a83:	(bad)  
   140054a84:	(bad)  
   140054a85:	(bad)  
   140054a86:	(bad)  
   140054a87:	(bad)  
   140054a88:	(bad)  
   140054a89:	(bad)  
   140054a8a:	(bad)  
   140054a8b:	push   QWORD PTR [rax+0x71ff7c8b]
   140054a91:	xor    BYTE PTR [rip+0x223c79ff],dl        # 0x16241c496
   140054a97:	jmp    FWORD PTR [rbx+0x33]
   140054a9a:	sbb    eax,0x1c3169df
   140054a9f:	enter  0x3b79,0x22
   140054aa3:	push   QWORD PTR [rdi+0x37]
   140054aa6:	sbb    eax,0x34497eff
   140054aab:	push   rbp
   140054aad:	repnz icebp 
   140054aaf:	(bad)  
   140054ab0:	(bad)  
   140054ab1:	(bad)  
   140054ab2:	(bad)  
   140054ab3:	(bad)  
   140054ab4:	(bad)  
   140054ab5:	(bad)  
   140054ab6:	(bad)  
   140054ab7:	(bad)  
   140054ab8:	(bad)  
   140054ab9:	(bad)  
   140054aba:	(bad)  
   140054abb:	(bad)  
   140054abc:	(bad)  
   140054abd:	(bad)  
   140054abe:	(bad)  
   140054abf:	(bad)  
   140054ac0:	out    dx,al
   140054ac1:	out    0xe4,al
   140054ac3:	inc    DWORD PTR [rsi-0x5f00c2af]
   140054ac9:	jne    0x140054b2f
   140054acb:	inc    DWORD PTR [rbx+0x71ff374d]
   140054ad1:	ss (bad) 
   140054ad3:	inc    DWORD PTR [rax-0x7500cfb9]
   140054ad9:	push   rdx
   140054ada:	cmp    al,0xff
   140054adc:	mov    BYTE PTR [rcx+0x3a],dl
   140054adf:	dec    DWORD PTR [rdi-0x4800b9a5]
   140054ae5:	xchg   ebp,eax
   140054ae6:	xchg   edi,edi
   140054ae8:	sar    DWORD PTR [rbx-0x7a53004d],1
   140054aee:	jbe    0x140054aef
   140054af0:	movabs ds:0xffffcad0e0ff6979,al
   140054af9:	(bad)  
   140054afa:	(bad)  
   140054afb:	(bad)  
   140054afc:	(bad)  
   140054afd:	(bad)  
   140054afe:	(bad)  
   140054aff:	(bad)  
   140054b00:	(bad)  
   140054b01:	(bad)  
   140054b02:	(bad)  
   140054b03:	(bad)  
   140054b04:	(bad)  
   140054b05:	(bad)  
   140054b06:	(bad)  
   140054b07:	(bad)  
   140054b08:	(bad)  
   140054b09:	(bad)  
   140054b0a:	(bad)  
   140054b0b:	push   QWORD PTR [rax+0x71ff7c8b]
   140054b11:	xor    BYTE PTR [rip+0x223b79ff],dl        # 0x16240c516
   140054b17:	jmp    FWORD PTR [rcx+0x31]
   140054b1a:	sbb    al,0xc9
   140054b1c:	data16 (bad) 
   140054b1e:	sbb    ebx,DWORD PTR [rbp-0xddc589]
   140054b24:	ja     0x140054b5d
   140054b26:	(bad)  
   140054b27:	(bad)  
   140054b28:	jle    0x140054b73
   140054b2a:	xor    al,0xff
   140054b2c:	cmc    
   140054b2d:	repnz icebp 
   140054b2f:	(bad)  
   140054b30:	(bad)  
   140054b31:	(bad)  
   140054b32:	(bad)  
   140054b33:	(bad)  
   140054b34:	(bad)  
   140054b35:	(bad)  
   140054b36:	(bad)  
   140054b37:	(bad)  
   140054b38:	(bad)  
   140054b39:	(bad)  
   140054b3a:	(bad)  
   140054b3b:	(bad)  
   140054b3c:	(bad)  
   140054b3d:	(bad)  
   140054b3e:	(bad)  
   140054b3f:	(bad)  
   140054b40:	(bad)  
   140054b41:	(bad)  
   140054b42:	(bad)  
   140054b43:	dec    esi
   140054b45:	mov    ebp,0x4879ffb6
   140054b4a:	push   QWORD PTR ss:[rbp+0x43]
   140054b4e:	xor    edi,edi
   140054b50:	movabs eax,ds:0x84ff637197ff7581
   140054b59:	push   rcx
   140054b5a:	cmp    eax,0x43578bff
   140054b5f:	call   QWORD PTR [rbx-0x6d00b39f]
   140054b65:	pop    rsi
   140054b66:	rex.WB call QWORD PTR [r14+0x79ff4e63]
   140054b6d:	rex.R (bad) 
   140054b6f:	(bad)  
   140054b70:	jnp    0x140054bbf
   140054b72:	cmp    edi,edi
   140054b74:	jle    0x140054bc1
   140054b76:	cmp    bh,bh
   140054b78:	loopne 0x140054b4e
   140054b7a:	sar    bh,1
   140054b7c:	(bad)  
   140054b7d:	(bad)  
   140054b7e:	(bad)  
   140054b7f:	(bad)  
   140054b80:	(bad)  
   140054b81:	(bad)  
   140054b82:	(bad)  
   140054b83:	(bad)  
   140054b84:	(bad)  
   140054b85:	(bad)  
   140054b86:	(bad)  
   140054b87:	(bad)  
   140054b88:	(bad)  
   140054b89:	(bad)  
   140054b8a:	(bad)  
   140054b8b:	push   QWORD PTR [rax+0x72ff7c8b]
   140054b91:	xor    BYTE PTR [rip+0x223a77ff],dl        # 0x1623fc396
   140054b97:	jmp    QWORD PTR [rsi+0x2f]
   140054b9a:	sbb    ebx,DWORD PTR [rbp+0x5c1a2e63]
   140054ba0:	jae    0x140054bda
   140054ba2:	and    bh,bh
   140054ba4:	js     0x140054bde
   140054ba6:	(bad)  
   140054ba7:	(bad)  
   140054ba8:	jle    0x140054bf3
   140054baa:	xor    al,0xff
   140054bac:	cmc    
   140054bad:	repnz icebp 
   140054baf:	(bad)  
   140054bb0:	(bad)  
   140054bb1:	(bad)  
   140054bb2:	(bad)  
   140054bb3:	(bad)  
   140054bb4:	(bad)  
   140054bb5:	(bad)  
   140054bb6:	(bad)  
   140054bb7:	(bad)  
   140054bb8:	(bad)  
   140054bb9:	(bad)  
   140054bba:	(bad)  
   140054bbb:	(bad)  
   140054bbc:	(bad)  
   140054bbd:	(bad)  
   140054bbe:	(bad)  
   140054bbf:	(bad)  
   140054bc0:	(bad)  
   140054bc1:	(bad)  
   140054bc2:	(bad)  
   140054bc3:	(bad)  
   140054bc4:	(bad)  
   140054bc5:	(bad)  
   140054bc6:	(bad)  
   140054bc7:	(bad)  
   140054bc8:	cld    
   140054bc9:	sti    
   140054bca:	cli    
   140054bcb:	push   rdi
   140054bcd:	hlt    
   140054bce:	repz (bad) 
   140054bd0:	(bad)  
   140054bd1:	(bad)  
   140054bd2:	(bad)  
   140054bd3:	(bad)  
   140054bd4:	(bad)  
   140054bd5:	(bad)  
   140054bd6:	(bad)  
   140054bd7:	call   rsi
   140054bd9:	mov    al,0xff
   140054bdc:	adc    DWORD PTR [rsi+0x45],0xffffffff
   140054be0:	mov    DWORD PTR [rdx+0x48],ebx
   140054be3:	call   FWORD PTR [rbp-0x6800a290]
   140054be9:	push   0x5582ff55
   140054bee:	rex.R (bad) 
   140054bf0:	clc    
   140054bf1:	div    dh
   140054bf3:	(bad)  
   140054bf4:	fmul   st,st(3)
   140054bf6:	(bad)  
   140054bf7:	(bad)  
   140054bf8:	(bad)  
   140054bfa:	int    0xff
   140054bfc:	(bad)  
   140054bfd:	(bad)  
   140054bfe:	(bad)  
   140054bff:	(bad)  
   140054c00:	(bad)  
   140054c01:	(bad)  
   140054c02:	(bad)  
   140054c03:	(bad)  
   140054c04:	(bad)  
   140054c05:	(bad)  
   140054c06:	(bad)  
   140054c07:	(bad)  
   140054c08:	(bad)  
   140054c09:	(bad)  
   140054c0a:	(bad)  
   140054c0b:	push   QWORD PTR [rax+0x72ff7c8b]
   140054c11:	xor    BYTE PTR [rsi],dl
   140054c13:	push   QWORD PTR [rbx+0x38]
   140054c16:	and    bh,bh
   140054c18:	movsxd ebp,DWORD PTR [rsi]
   140054c1a:	sbb    bl,BYTE PTR [rbx+riz*2+0x2d]
   140054c1e:	sbb    bl,BYTE PTR [rax]
   140054c20:	ins    BYTE PTR es:[rdi],dx
   140054c21:	xor    ebx,DWORD PTR [rip+0x1e3878f1]        # 0x15e3dc518
   140054c27:	(bad)  
   140054c28:	jle    0x140054c73
   140054c2a:	xor    al,0xff
   140054c2c:	cmc    
   140054c2d:	repnz icebp 
   140054c2f:	(bad)  
   140054c30:	(bad)  
   140054c31:	(bad)  
   140054c32:	(bad)  
   140054c33:	(bad)  
   140054c34:	(bad)  
   140054c35:	(bad)  
   140054c36:	(bad)  
   140054c37:	(bad)  
   140054c38:	(bad)  
   140054c39:	(bad)  
   140054c3a:	(bad)  
   140054c3b:	(bad)  
   140054c3c:	(bad)  
   140054c3d:	(bad)  
   140054c3e:	(bad)  
   140054c3f:	(bad)  
   140054c40:	(bad)  
   140054c41:	(bad)  
   140054c42:	(bad)  
   140054c43:	(bad)  
   140054c44:	(bad)  
   140054c45:	(bad)  
   140054c46:	(bad)  
   140054c47:	(bad)  
   140054c48:	(bad)  
   140054c49:	(bad)  
   140054c4a:	(bad)  
   140054c4b:	(bad)  
   140054c4c:	(bad)  
   140054c4d:	(bad)  
   140054c4e:	(bad)  
   140054c4f:	(bad)  
   140054c50:	(bad)  
   140054c51:	(bad)  
   140054c52:	(bad)  
   140054c53:	(bad)  
   140054c54:	(bad)  
   140054c55:	(bad)  
   140054c56:	(bad)  
   140054c57:	(bad)  
   140054c58:	call   0x10205293c
   140054c5d:	stos   DWORD PTR es:[rdi],eax
   140054c5e:	movabs ds:0x8794b6ffe6e8eeff,eax
   140054c67:	call   FWORD PTR [rdi+rbp*2-0x453200a3]
   140054c6e:	mov    dl,0xff
   140054c70:	(bad)  
   140054c71:	(bad)  
   140054c72:	(bad)  
   140054c73:	(bad)  
   140054c74:	(bad)  
   140054c75:	(bad)  
   140054c76:	(bad)  
   140054c77:	(bad)  
   140054c78:	(bad)  
   140054c79:	(bad)  
   140054c7a:	(bad)  
   140054c7b:	(bad)  
   140054c7c:	(bad)  
   140054c7d:	(bad)  
   140054c7e:	(bad)  
   140054c7f:	(bad)  
   140054c80:	(bad)  
   140054c81:	(bad)  
   140054c82:	(bad)  
   140054c83:	(bad)  
   140054c84:	(bad)  
   140054c85:	(bad)  
   140054c86:	(bad)  
   140054c87:	(bad)  
   140054c88:	(bad)  
   140054c89:	(bad)  
   140054c8a:	(bad)  
   140054c8b:	push   QWORD PTR [rax+0x72ff7c8b]
   140054c91:	xor    BYTE PTR [rsi],dl
   140054c93:	jmp    FWORD PTR [rbx+rsi*1+0x1d]
   140054c97:	icebp  
   140054c98:	movsxd ebp,DWORD PTR [rip+0x181a]        # 0x1400564b8
   140054c9e:	add    BYTE PTR [rax],al
   140054ca0:	data16 (bad) 
   140054ca2:	sbb    esp,DWORD PTR [rax-0xe2c98b]
   140054ca8:	jle    0x140054cf3
   140054caa:	xor    al,0xff
   140054cac:	cmc    
   140054cad:	repnz icebp 
   140054caf:	(bad)  
   140054cb0:	(bad)  
   140054cb1:	(bad)  
   140054cb2:	(bad)  
   140054cb3:	(bad)  
   140054cb4:	(bad)  
   140054cb5:	(bad)  
   140054cb6:	(bad)  
   140054cb7:	(bad)  
   140054cb8:	(bad)  
   140054cb9:	(bad)  
   140054cba:	(bad)  
   140054cbb:	(bad)  
   140054cbc:	(bad)  
   140054cbd:	(bad)  
   140054cbe:	(bad)  
   140054cbf:	(bad)  
   140054cc0:	(bad)  
   140054cc1:	(bad)  
   140054cc2:	(bad)  
   140054cc3:	(bad)  
   140054cc4:	(bad)  
   140054cc5:	(bad)  
   140054cc6:	(bad)  
   140054cc7:	(bad)  
   140054cc8:	(bad)  
   140054cc9:	(bad)  
   140054cca:	(bad)  
   140054ccb:	(bad)  
   140054ccc:	(bad)  
   140054ccd:	(bad)  
   140054cce:	(bad)  
   140054ccf:	(bad)  
   140054cd0:	(bad)  
   140054cd1:	(bad)  
   140054cd2:	(bad)  
   140054cd3:	(bad)  
   140054cd4:	(bad)  
   140054cd5:	(bad)  
   140054cd6:	(bad)  
   140054cd7:	jmp    rbp
   140054cd9:	fcmovnbe st,st(7)
   140054cdb:	(bad)  
   140054cdc:	mov    esi,0xffff9ea7
   140054ce1:	(bad)  
   140054ce2:	(bad)  
   140054ce3:	call   rdx
   140054ce5:	sar    DWORD PTR [rdx+0x4d5f8eff],0xff
   140054cec:	scas   eax,DWORD PTR es:[rdi]
   140054ced:	pop    QWORD PTR [rdx-0x4a433201]
   140054cf3:	(bad)  
   140054cf4:	cli    
   140054cf5:	clc    
   140054cf6:	idiv   edi
   140054cf8:	(bad)  
   140054cf9:	(bad)  
   140054cfa:	(bad)  
   140054cfb:	(bad)  
   140054cfc:	(bad)  
   140054cfd:	(bad)  
   140054cfe:	(bad)  
   140054cff:	(bad)  
   140054d00:	(bad)  
   140054d01:	(bad)  
   140054d02:	(bad)  
   140054d03:	(bad)  
   140054d04:	(bad)  
   140054d05:	(bad)  
   140054d06:	(bad)  
   140054d07:	(bad)  
   140054d08:	(bad)  
   140054d09:	(bad)  
   140054d0a:	(bad)  
   140054d0b:	push   QWORD PTR [rcx+0x6fff7d8c]
   140054d11:	(bad)  
   140054d12:	adc    eax,0x1b2f66ff
   140054d17:	movabs al,ds:0x0
   140054d20:	movsxd ebp,DWORD PTR [rip+0x316b2d1a]        # 0x171707a40
   140054d26:	sbb    edx,edi
   140054d28:	(bad)  
   140054d29:	rex.WR (bad) 
   140054d2b:	(bad)  
   140054d2c:	stc    
   140054d2d:	clc    
   140054d2e:	idiv   edi
   140054d30:	(bad)  
   140054d31:	(bad)  
   140054d32:	(bad)  
   140054d33:	(bad)  
   140054d34:	(bad)  
   140054d35:	(bad)  
   140054d36:	(bad)  
   140054d37:	(bad)  
   140054d38:	(bad)  
   140054d39:	(bad)  
   140054d3a:	(bad)  
   140054d3b:	(bad)  
   140054d3c:	(bad)  
   140054d3d:	(bad)  
   140054d3e:	(bad)  
   140054d3f:	(bad)  
   140054d40:	(bad)  
   140054d41:	(bad)  
   140054d42:	(bad)  
   140054d43:	(bad)  
   140054d44:	(bad)  
   140054d45:	(bad)  
   140054d46:	(bad)  
   140054d47:	(bad)  
   140054d48:	(bad)  
   140054d49:	(bad)  
   140054d4a:	(bad)  
   140054d4b:	(bad)  
   140054d4c:	(bad)  
   140054d4d:	(bad)  
   140054d4e:	(bad)  
   140054d4f:	(bad)  
   140054d50:	(bad)  
   140054d51:	(bad)  
   140054d52:	(bad)  
   140054d53:	(bad)  
   140054d54:	(bad)  
   140054d55:	(bad)  
   140054d56:	(bad)  
   140054d57:	jmp    rbp
   140054d59:	(bad)  
   140054d5b:	(bad)  
   140054d5c:	mov    esi,0xffff9ea7
   140054d61:	(bad)  
   140054d62:	(bad)  
   140054d63:	(bad)  
   140054d64:	std    
   140054d65:	std    
   140054d66:	cld    
   140054d67:	inc    eax
   140054d69:	stos   BYTE PTR es:[rdi],al
   140054d6a:	movabs ds:0x7985a5ff516089ff,al
   140054d73:	push   rbp
   140054d75:	repnz icebp 
   140054d77:	(bad)  
   140054d78:	(bad)  
   140054d79:	(bad)  
   140054d7a:	(bad)  
   140054d7b:	(bad)  
   140054d7c:	(bad)  
   140054d7d:	(bad)  
   140054d7e:	(bad)  
   140054d7f:	(bad)  
   140054d80:	(bad)  
   140054d81:	(bad)  
   140054d82:	(bad)  
   140054d83:	(bad)  
   140054d84:	(bad)  
   140054d85:	(bad)  
   140054d86:	(bad)  
   140054d87:	(bad)  
   140054d88:	(bad)  
   140054d89:	(bad)  
   140054d8a:	(bad)  
   140054d8b:	push   QWORD PTR [rax+rdx*4+0x2965ff81]
   140054d92:	adc    edx,edi
   140054d94:	movsxd ebp,DWORD PTR [rip+0x2d1a]        # 0x140057ab4
	...
   140054da2:	add    BYTE PTR [rax],al
   140054da4:	(bad)  
   140054da5:	sub    edx,DWORD PTR [rdi]
   140054da7:	mov    ?,WORD PTR [rsp+rax*2+0x2d]
   140054dab:	jmp    rsi
   140054dad:	fcmovbe st,st(5)
   140054daf:	(bad)  
   140054db0:	(bad)  
   140054db1:	(bad)  
   140054db2:	(bad)  
   140054db3:	(bad)  
   140054db4:	(bad)  
   140054db5:	(bad)  
   140054db6:	(bad)  
   140054db7:	(bad)  
   140054db8:	(bad)  
   140054db9:	(bad)  
   140054dba:	(bad)  
   140054dbb:	(bad)  
   140054dbc:	(bad)  
   140054dbd:	(bad)  
   140054dbe:	(bad)  
   140054dbf:	(bad)  
   140054dc0:	(bad)  
   140054dc1:	(bad)  
   140054dc2:	(bad)  
   140054dc3:	(bad)  
   140054dc4:	(bad)  
   140054dc5:	(bad)  
   140054dc6:	(bad)  
   140054dc7:	(bad)  
   140054dc8:	(bad)  
   140054dc9:	(bad)  
   140054dca:	(bad)  
   140054dcb:	(bad)  
   140054dcc:	(bad)  
   140054dcd:	(bad)  
   140054dce:	(bad)  
   140054dcf:	(bad)  
   140054dd0:	(bad)  
   140054dd1:	(bad)  
   140054dd2:	(bad)  
   140054dd3:	(bad)  
   140054dd4:	(bad)  
   140054dd5:	(bad)  
   140054dd6:	(bad)  
   140054dd7:	push   rax
   140054dd9:	(bad)  
   140054dda:	out    0xff,eax
   140054ddc:	fadd   st,st(7)
   140054dde:	sar    edi,0xff
   140054de1:	(bad)  
   140054de2:	(bad)  
   140054de3:	(bad)  
   140054de4:	(bad)  
   140054de5:	(bad)  
   140054de6:	(bad)  
   140054de7:	(bad)  
   140054de8:	(bad)  
   140054de9:	(bad)  
   140054dea:	(bad)  
   140054deb:	(bad)  
   140054dec:	(bad)  
   140054ded:	(bad)  
   140054dee:	(bad)  
   140054def:	(bad)  
   140054df0:	(bad)  
   140054df1:	(bad)  
   140054df2:	(bad)  
   140054df3:	(bad)  
   140054df4:	(bad)  
   140054df5:	(bad)  
   140054df6:	(bad)  
   140054df7:	(bad)  
   140054df8:	(bad)  
   140054df9:	(bad)  
   140054dfa:	(bad)  
   140054dfb:	(bad)  
   140054dfc:	(bad)  
   140054dfd:	(bad)  
   140054dfe:	(bad)  
   140054dff:	(bad)  
   140054e00:	(bad)  
   140054e01:	(bad)  
   140054e02:	(bad)  
   140054e03:	(bad)  
   140054e04:	(bad)  
   140054e05:	(bad)  
   140054e06:	(bad)  
   140054e07:	(bad)  
   140054e08:	stc    
   140054e09:	cmc    
   140054e0a:	hlt    
   140054e0b:	call   FWORD PTR [rbp+0x5eff6373]
   140054e11:	adc    BYTE PTR es:[rsi+0x0],cl
	...
   140054e24:	movsxd ebp,DWORD PTR [rip+0x2e660c1a]        # 0x16e6b5a44
   140054e2a:	sbb    ecx,edx
   140054e2c:	jge    0x140054e70
   140054e2e:	sub    bh,bh
   140054e30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054e31:	jle    0x140054ea1
   140054e33:	call   rsi
   140054e35:	ret    
   140054e36:	mov    esp,0xf6f7faff
   140054e3b:	(bad)  
   140054e3c:	(bad)  
   140054e3d:	(bad)  
   140054e3e:	(bad)  
   140054e3f:	(bad)  
   140054e40:	(bad)  
   140054e41:	(bad)  
   140054e42:	(bad)  
   140054e43:	(bad)  
   140054e44:	(bad)  
   140054e45:	(bad)  
   140054e46:	(bad)  
   140054e47:	(bad)  
   140054e48:	(bad)  
   140054e49:	(bad)  
   140054e4a:	(bad)  
   140054e4b:	(bad)  
   140054e4c:	(bad)  
   140054e4d:	(bad)  
   140054e4e:	(bad)  
   140054e4f:	(bad)  
   140054e50:	(bad)  
   140054e51:	(bad)  
   140054e52:	(bad)  
   140054e53:	push   rsp
   140054e55:	out    dx,eax
   140054e56:	in     eax,dx
   140054e57:	call   rsp
   140054e59:	shl    BYTE PTR [rdi-0x584d3401],0xff
   140054e60:	in     al,dx
   140054e61:	loop   0x140054e42
   140054e63:	(bad)  
   140054e64:	std    
   140054e65:	std    
   140054e66:	std    
   140054e67:	(bad)  
   140054e68:	(bad)  
   140054e69:	(bad)  
   140054e6a:	(bad)  
   140054e6b:	(bad)  
   140054e6c:	(bad)  
   140054e6d:	(bad)  
   140054e6e:	(bad)  
   140054e6f:	(bad)  
   140054e70:	(bad)  
   140054e71:	(bad)  
   140054e72:	(bad)  
   140054e73:	(bad)  
   140054e74:	(bad)  
   140054e75:	(bad)  
   140054e76:	(bad)  
   140054e77:	(bad)  
   140054e78:	(bad)  
   140054e79:	(bad)  
   140054e7a:	(bad)  
   140054e7b:	(bad)  
   140054e7c:	(bad)  
   140054e7d:	std    
   140054e7e:	std    
   140054e7f:	push   rdi
   140054e81:	hlt    
   140054e82:	repz inc eax
   140054e85:	movabs eax,ds:0x2c65ff3c5288ff95
   140054e8e:	(bad)  
   140054e8f:	shl    BYTE PTR [rbx+0x2d],cl
   140054e92:	sbb    cl,BYTE PTR [rip+0x0]        # 0x140054e98
	...
   140054ea8:	movsxd ebp,DWORD PTR [rip+0x30692b1a]        # 0x1706e79c8
   140054eae:	sbb    ch,dl
   140054eb0:	jae    0x140054ee4
   140054eb2:	sbb    bh,bh
   140054eb4:	jne    0x140054ee9
   140054eb6:	sbb    bh,bh
   140054eb8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054eb9:	jp     0x140054f23
   140054ebb:	(bad)  
   140054ebc:	fadd   st,st(6)
   140054ebe:	mov    esi,0xc9d0dfff
   140054ec3:	jmp    rbp
   140054ec5:	(bad)  
   140054ec7:	jmp    rdi
   140054ec9:	fcmovnbe st,st(6)
   140054ecb:	jmp    rbx
   140054ecd:	(bad)  
   140054ece:	iret   
   140054ecf:	(bad)  
   140054ed0:	fadd   st,st(5)
   140054ed2:	mov    esp,0xa7b2cbff
   140054ed7:	dec    ecx
   140054ed9:	mov    al,0xa4
   140054edb:	dec    esp
   140054edd:	mov    bl,0xa8
   140054edf:	dec    esp
   140054ee1:	mov    ch,0xaa
   140054ee3:	(bad)  
   140054ee4:	fadd   st,st(5)
   140054ee6:	mov    ebp,0xd2d8e4ff
   140054eeb:	(bad)  
   140054eec:	jmp    0x140054ed0
   140054eee:	fdivp  st(7),st
   140054ef0:	in     eax,dx
   140054ef1:	in     al,0xe0
   140054ef3:	(bad)  
   140054ef4:	jmp    0x140054ed7
   140054ef6:	fdiv   st(7),st
   140054ef8:	in     eax,0xd9
   140054efa:	sar    edi,cl
   140054efc:	in     eax,0xd9
   140054efe:	sar    edi,cl
   140054f00:	mov    ecx,0x72ff8b98
   140054f05:	xor    BYTE PTR [rsi],dl
   140054f07:	jmp    QWORD PTR [rsi+0x2c]
   140054f0a:	(bad)  
   140054f0b:	(bad)  
   140054f0c:	movsxd ebp,DWORD PTR [rip+0x2b1a]        # 0x140057a2c
	...
   140054f2a:	add    BYTE PTR [rax],al
   140054f2c:	movsxd ebp,DWORD PTR [rip+0x336b3a1a]        # 0x17370894c
   140054f32:	sbb    eax,0x233c7be9
   140054f37:	(bad)  
   140054f38:	jge    0x140054f78
   140054f3a:	and    bh,bh
   140054f3c:	mov    al,0x8a
   140054f3e:	jns    0x140054f3f
   140054f40:	iret   
   140054f41:	mov    bh,0xac
   140054f43:	dec    ebx
   140054f45:	mov    dl,0xa5
   140054f47:	dec    esp
   140054f49:	mov    bl,0xa7
   140054f4b:	dec    esi
   140054f4d:	mov    ch,0xaa
   140054f4f:	call   rax
   140054f51:	mov    ecx,0xbed3ffae
   140054f56:	mov    bl,0xff
   140054f58:	(bad)  
   140054f59:	shl    DWORD PTR [rdi-0x463c2801],0xff
   140054f60:	fadd   st,st(4)
   140054f62:	mov    ebx,0xbbc4d7ff
   140054f67:	(bad)  
   140054f68:	fadd   st,st(4)
   140054f6a:	mov    ebx,0xbdc6d9ff
   140054f6f:	(bad)  
   140054f70:	fcmove st,st(0)
   140054f72:	sar    bh,0xdb
   140054f75:	leave  
   140054f76:	sar    edi,0xe3
   140054f79:	(bad)  
   140054f7a:	sar    bh,1
   140054f7c:	(bad)  
   140054f7d:	mov    ch,0xaa
   140054f7f:	inc    DWORD PTR [rax+0x68ff2c45]
   140054f85:	(bad)  
   140054f86:	sbb    ecx,ebp
   140054f88:	movsxd ebp,DWORD PTR [rip+0x3a1a]        # 0x1400589a8
	...
   140054fae:	add    BYTE PTR [rax],al
   140054fb0:	movsxd ebp,DWORD PTR [rip+0x31692d19]        # 0x1716e7ccf
   140054fb6:	sbb    al,0xcf
   140054fb8:	jns    0x140054ff6
   140054fba:	and    bh,bh
   140054fbc:	test   DWORD PTR [rax+0x2b],ecx
   140054fbf:	(bad)  
   140054fc0:	mov    edx,0xdcff8697
   140054fc5:	int3   
   140054fc6:	ret    
   140054fc7:	(bad)  
   140054fc8:	fcmovne st,st(1)
   140054fca:	sar    bh,0xda
   140054fcd:	enter  0xffbe,0xdc
   140054fd1:	retf   
   140054fd2:	sar    bh,0xdd
   140054fd5:	int3   
   140054fd6:	ret    
   140054fd7:	(bad)  
   140054fd8:	(bad)  
   140054fda:	(bad)  
   140054fdd:	rol    bh,1
   140054fdf:	jmp    rdx
   140054fe1:	ror    cl,cl
   140054fe3:	jmp    rdx
   140054fe5:	(bad)  
   140054fe6:	int3   
   140054fe7:	jmp    rbx
   140054fe9:	(bad)  
   140054fea:	(bad)  
   140054feb:	jmp    rsp
   140054fed:	(bad)  
   140054fee:	sar    bh,1
   140054ff0:	out    0xdb,eax
   140054ff2:	(bad)  
   140054ff3:	(bad)  
   140054ff4:	out    dx,eax
   140054ff5:	out    0xe1,al
   140054ff7:	call   rdx
   140054ff9:	mov    ebx,0x4b83ffaf
   140054ffe:	xor    edi,edi
   140055000:	gs sub al,0x16
   140055003:	iret   
   140055004:	movsxd ebp,DWORD PTR [rip+0x2d1a]        # 0x140057d24
	...
   140055032:	add    BYTE PTR [rax],al
   140055034:	movsxd ebp,DWORD PTR [rip+0x2f650e19]        # 0x16f6a5e53
   14005503a:	sbb    cl,BYTE PTR [rdi-0x7e0c78e]
   140055040:	test   BYTE PTR [rdi+0x28],al
   140055043:	push   QWORD PTR [rdx-0x21008f79]
   140055049:	retf   
   14005504a:	sar    bh,0xea
   14005504d:	(bad)  
   14005504f:	(bad)  
   140055050:	jmp    0x129052731
   140055055:	fcmovnbe st,st(4)
   140055057:	(bad)  
   140055058:	jmp    0x12a052639
   14005505d:	fst    st(7)
   14005505f:	(bad)  
   140055060:	(bad)  
   140055061:	(bad)  
   140055063:	(bad)  
   140055064:	in     al,dx
   140055065:	loop   0x140055043
   140055067:	push   rax
   140055069:	call   0x12ffb5050
   14005506e:	jmp    0x14005506f
   140055070:	out    dx,al
   140055071:	jrcxz  0x140055050
   140055073:	(bad)  
   140055074:	mov    ebx,0x75ff8a9a
   140055079:	cmp    eax,0x2961f824
   14005507e:	adc    al,0x8f
   140055080:	movsxd ebp,DWORD PTR [rsi]
   140055082:	sbb    cl,BYTE PTR [rsi]
	...
   1400550bc:	(bad)  
   1400550bd:	sub    eax,0x30663119
   1400550c2:	sbb    ebx,DWORD PTR [rdi-0x11e3c88e]
   1400550c8:	xchg   ecx,eax
   1400550c9:	pop    rdx
   1400550ca:	cmp    eax,0x8298beff
   1400550cf:	(bad)  
   1400550d0:	(bad)  
   1400550d2:	mov    ebx,0xd9e2f0ff
   1400550d7:	push   rbp
   1400550d9:	in     al,dx
   1400550da:	out    0xff,al
   1400550dc:	clc    
   1400550dd:	lock (bad) 
   1400550df:	push   rdi
   1400550e1:	out    dx,eax
   1400550e2:	(bad)  
   1400550e3:	push   rcx
   1400550e5:	call   0x110e750cc
   1400550ea:	(bad)  
   1400550eb:	(bad)  
   1400550ec:	mov    edx,0x84ff8d9c
   1400550f1:	push   rbx
   1400550f2:	ds out dx,al
   1400550f4:	(bad)  
   1400550f5:	sub    BYTE PTR [rdx],dl
   1400550f7:	lahf   
   1400550f8:	(bad)  
   1400550f9:	sub    dl,BYTE PTR [rsi]
   1400550fb:	xor    DWORD PTR [rax],eax
	...
   140055141:	add    BYTE PTR [rax],al
   140055143:	add    BYTE PTR [rcx+0x2c],ah
   140055146:	sbb    DWORD PTR [rcx+riz*2],ebx
   140055149:	sub    dl,BYTE PTR [rsi]
   14005514b:	pop    rsi
   14005514c:	gs sub al,0x15
   14005514f:	popf   
   140055150:	jae    0x14005518c
   140055152:	and    cl,cl
   140055154:	test   DWORD PTR [rdx+0x3b],edx
   140055157:	loope  0x1400550eb
   140055159:	fs rex.WRXB in eax,dx
   14005515c:	xchg   ebp,eax
   14005515d:	imul   edx,DWORD PTR [rbp-0x13],0xe14f628e
   140055164:	jle    0x1400551b3
   140055166:	cmp    ecx,ecx
   140055168:	push   0x33
   14005516a:	(bad)  
   14005516b:	popf   
   14005516c:	pop    rbp
   14005516d:	and    al,0xf
   14005516f:	pop    rsi
   140055170:	pop    rsi
   140055171:	(bad)  
   140055172:	adc    ebx,DWORD PTR [rax+rax*1]
	...
   140055199:	add    BYTE PTR [rax],al
   14005519b:	add    bh,bh
   14005519d:	rol    BYTE PTR [rbx],0xff
   1400551a0:	inc    DWORD PTR [rax]
   1400551a2:	add    bh,bh
   1400551a4:	cld    
   1400551a5:	add    BYTE PTR [rax],al
   1400551a7:	(bad)  
   1400551a8:	clc    
   1400551a9:	add    BYTE PTR [rax],al
   1400551ab:	(bad)  
   1400551ac:	lock add BYTE PTR [rax],al
   1400551af:	pavgb  mm0,QWORD PTR [rax]
   1400551b2:	add    BYTE PTR [rdi],al
   1400551b4:	rol    BYTE PTR [rax],0x0
   1400551b7:	add    eax,eax
   1400551b9:	add    BYTE PTR [rax],al
   1400551bb:	add    eax,DWORD PTR [rax-0x7fff0000]
   1400551c1:	add    BYTE PTR [rax],al
   1400551c3:	add    DWORD PTR [rax],eax
	...
   1400551f1:	add    BYTE PTR [rax],al
   1400551f3:	add    BYTE PTR [rax-0x7fff0000],al
   1400551f9:	add    BYTE PTR [rax],al
   1400551fb:	add    eax,eax
   1400551fd:	add    BYTE PTR [rax],al
   1400551ff:	add    eax,eax
   140055201:	add    BYTE PTR [rax],al
   140055203:	add    esp,eax
   140055205:	add    BYTE PTR [rax],al
   140055207:	(bad)  
   140055208:	lock add BYTE PTR [rax],al
   14005520b:	psubb  mm0,QWORD PTR [rax]
   14005520e:	add    BYTE PTR [rdi],bl
   140055210:	cld    
   140055211:	add    BYTE PTR [rax],al
   140055213:	(bad)  
   140055214:	inc    DWORD PTR [rax]
   140055216:	add    bh,bh
   140055218:	inc    eax
   14005521a:	add    edi,edi
   14005521c:	sub    BYTE PTR [rax],al
   14005521e:	add    BYTE PTR [rax],al
   140055220:	sbb    BYTE PTR [rax],al
   140055222:	add    BYTE PTR [rax],al
   140055224:	xor    BYTE PTR [rax],al
   140055226:	add    BYTE PTR [rax],al
   140055228:	add    DWORD PTR [rax],eax
   14005522a:	and    BYTE PTR [rax],al
	...
   140055260:	movsxd ebp,DWORD PTR [rip+0x2f662c1a]        # 0x16f6b7e80
   140055266:	sbb    eax,DWORD PTR [rbx-0x42e3cd96]
   14005526c:	outs   dx,BYTE PTR ds:[rsi]
   14005526d:	xor    eax,0x3570db1e
   140055272:	(bad)  
   140055273:	jmp    0x1400552e5
   140055275:	xor    eax,0x356eec1f
   14005527a:	(bad)  
   14005527b:	fsubr  QWORD PTR [rdx+0x32]
   14005527e:	sbb    eax,0x1b2f66c0
   140055283:	xchg   DWORD PTR [rbx+0x2d],esp
   140055286:	sbb    dh,BYTE PTR [rcx]
	...
   1400552b8:	movsxd ebp,DWORD PTR [rip+0x30682a19]        # 0x1706d7cd7
   1400552be:	sbb    al,0xa9
   1400552c0:	jno    0x1400552f9
   1400552c2:	and    cl,bh
   1400552c4:	js     0x140055301
   1400552c6:	and    bh,bh
   1400552c8:	jp     0x140055307
   1400552ca:	and    al,0xff
   1400552cc:	jl     0x14005530c
   1400552ce:	and    al,0xff
   1400552d0:	jl     0x140055311
   1400552d2:	and    al,0xff
   1400552d4:	jl     0x140055315
   1400552d6:	and    al,0xff
   1400552d8:	jl     0x140055318
   1400552da:	and    al,0xff
   1400552dc:	jnp    0x14005531b
   1400552de:	and    al,0xff
   1400552e0:	js     0x14005531d
   1400552e2:	and    bh,bh
   1400552e4:	jb     0x14005531d
   1400552e6:	and    ah,bh
   1400552e8:	push   0x63b01c31
   1400552ed:	sub    eax,0x311a
	...
   140055312:	add    BYTE PTR [rax],al
   140055314:	fs sbb ah,BYTE PTR cs:[rdx+0x6f]
   140055319:	ss (bad) 
   14005531b:	icebp  
   14005531c:	jnp    0x14005535c
   14005531e:	and    al,0xff
   140055320:	jle    0x140055363
   140055322:	inc    DWORD PTR es:[rax-0x7c00d7bd]
   140055329:	rex.RX sub r15b,dil
   14005532c:	test   DWORD PTR [rax+0x2b],ecx
   14005532f:	inc    DWORD PTR [rdi-0x7800d2b5]
   140055335:	rex.WXB sub rax,0x2b4985ff
   14005533b:	inc    DWORD PTR [rbx-0x7f00d5ba]
   140055341:	rex.XB sub r15b,dil
   140055344:	jle    0x140055386
   140055346:	es (bad) 
   140055348:	jnp    0x140055388
   14005534a:	and    al,0xff
   14005534c:	jo     0x140055384
   14005534e:	(bad)  
   14005534f:	cmc    
   140055350:	fs sbb ch,BYTE PTR cs:[rbp+0x0]
	...
   14005536d:	add    BYTE PTR [rax],al
   14005536f:	add    BYTE PTR [rbp+0x2e],ah
   140055372:	sbb    dh,BYTE PTR [rsi+0x74]
   140055375:	cmp    DWORD PTR [rcx],esp
   140055377:	(bad)  
   140055378:	jle    0x1400553ba
   14005537a:	inc    DWORD PTR es:[rcx-0x7900d7bb]
   140055381:	rex.WX sub al,0xff
   140055384:	mov    WORD PTR [rax+0x31],ss
   140055387:	call   QWORD PTR [rdx-0x6800caaa]
   14005538d:	pop    rdx
   14005538e:	cmp    edi,edi
   140055390:	(bad)  
   140055391:	pop    rsi
   140055392:	cmp    edi,edi
   140055394:	(bad)  
   140055395:	pop    rsi
   140055396:	cmp    edi,edi
   140055398:	xchg   edi,eax
   140055399:	pop    rbx
   14005539a:	cmp    edi,edi
   14005539c:	xchg   edx,eax
   14005539d:	push   rsi
   14005539e:	xor    eax,0x31508cff
   1400553a3:	inc    DWORD PTR [rsi-0x7e00d3b6]
   1400553a9:	sub    r15b,r15b
   1400553ac:	jle    0x1400553ee
   1400553ae:	push   QWORD PTR es:[rbp+0x3a]
   1400553b2:	and    edi,edi
   1400553b4:	gs (bad) 
   1400553b6:	sbb    eax,DWORD PTR [rax+rax*1+0x0]
	...
   1400553c9:	add    BYTE PTR [rax],al
   1400553cb:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   1400553cf:	pop    rsi
   1400553d0:	je     0x14005540b
   1400553d2:	and    edi,edi
   1400553d4:	jg     0x140055417
   1400553d6:	(bad)  
   1400553d7:	inc    DWORD PTR [rdi+rax*2+0x4f8cff2b]
   1400553de:	xor    bh,bh
   1400553e0:	xchg   esp,eax
   1400553e1:	pop    rax
   1400553e2:	call   FWORD PTR ss:[rbp-0x5900c29f]
   1400553e9:	imul   eax,DWORD PTR [rbx-0x1],0xff4970af
   1400553f0:	mov    ah,0x73
   1400553f2:	rex.WXB push QWORD PTR [r12+r14*2+0x6fafff4c]
   1400553fa:	rex.WB jmp QWORD PTR [r15-0x6100bb97]
   140055401:	(bad)  
   140055402:	cmp    eax,0x365894ff
   140055407:	dec    DWORD PTR [rbx-0x7c00d0b1]
   14005540d:	rex.RX sub r15b,dil
   140055410:	jg     0x140055453
   140055412:	(bad)  
   140055413:	push   QWORD PTR [rsi+0x3a]
   140055416:	and    bh,bh
   140055418:	fs sbb ch,BYTE PTR cs:[rax+rax*1+0x0]
	...
   140055426:	add    BYTE PTR [rax],al
   140055428:	movsxd ebp,DWORD PTR [rsi]
   14005542a:	sbb    ah,BYTE PTR [rdx]
   14005542c:	push   0x31
   14005542e:	sbb    dh,cl
   140055430:	jo     0x140055462
   140055432:	(bad)  
   140055433:	push   QWORD PTR [rbp+rsi*1+0x19]
   140055437:	(bad)  
   140055438:	jnp    0x140055476
   14005543a:	(bad)  
   14005543b:	inc    DWORD PTR [rbx-0x7300dabb]
   140055441:	sub    r15,r15
   140055444:	xchg   ebp,eax
   140055445:	push   rbp
   140055446:	xor    bh,bh
   140055448:	lahf   
   140055449:	pop    rbp
   14005544a:	cmp    bh,bh
   14005544c:	xchg   esp,eax
   14005544d:	push   rbp
   14005544e:	xor    edi,edi
   140055450:	mov    WORD PTR [rbx+0x37],ss
   140055453:	dec    DWORD PTR [rsi-0x6700c4aa]
   140055459:	pop    rbp
   14005545a:	cmp    eax,0x395fa0ff
   14005545f:	call   QWORD PTR [rbp-0x7300ceab]
   140055465:	sub    r15,r15
   140055468:	(bad)  
   140055469:	rex.R and al,0xff
   14005546c:	jp     0x1400554aa
   14005546e:	(bad)  
   14005546f:	push   QWORD PTR [rbx+0x34]
   140055472:	sbb    edi,edi
   140055474:	jo     0x1400554a6
   140055476:	(bad)  
   140055477:	jmp    FWORD PTR [rbx+0x2f]
   14005547a:	(bad)  
   14005547b:	mul    DWORD PTR [rsi+rbp*1+0x1a]
   14005547f:	sub    eax,0x0
   140055484:	add    BYTE PTR [rax],al
   140055486:	add    BYTE PTR [rax],al
   140055488:	gs sub al,0x17
   14005548b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005548c:	(bad)  
   14005548d:	rex.WRX cmp r15b,dil
   140055490:	lods   eax,DWORD PTR ds:[rsi]
   140055491:	pop    QWORD PTR [rdi+rdi*8-0x786d51]
   140055498:	scas   al,BYTE PTR es:[rdi]
   140055499:	xchg   edx,eax
   14005549a:	xchg   edi,edi
   14005549c:	scas   al,BYTE PTR es:[rdi]
   14005549d:	xchg   ecx,eax
   14005549e:	xchg   edi,edi
   1400554a0:	scas   al,BYTE PTR es:[rdi]
   1400554a1:	xchg   ecx,eax
   1400554a2:	xchg   edi,edi
   1400554a4:	scas   al,BYTE PTR es:[rdi]
   1400554a5:	xchg   edx,eax
   1400554a6:	xchg   edi,edi
   1400554a8:	lods   eax,DWORD PTR ds:[rsi]
   1400554a9:	nop
   1400554aa:	test   edi,edi
   1400554ac:	mov    ah,0x9b
   1400554ae:	xchg   ebx,eax
   1400554af:	(bad)  
   1400554b0:	fmul   st(6),st
   1400554b2:	enter  0xd5ff,0xbf
   1400554b6:	mov    ah,0xff
   1400554b8:	fcmove st,st(5)
   1400554ba:	(bad)  
   1400554bb:	push   QWORD PTR [rcx-0x5200736a]
   1400554c1:	nop
   1400554c2:	test   edi,edi
   1400554c4:	scas   al,BYTE PTR es:[rdi]
   1400554c5:	xchg   ecx,eax
   1400554c6:	xchg   edi,edi
   1400554c8:	scas   al,BYTE PTR es:[rdi]
   1400554c9:	xchg   ecx,eax
   1400554ca:	xchg   edi,edi
   1400554cc:	scas   al,BYTE PTR es:[rdi]
   1400554cd:	xchg   edx,eax
   1400554ce:	xchg   edi,edi
   1400554d0:	scas   eax,DWORD PTR es:[rdi]
   1400554d1:	xchg   ebx,eax
   1400554d2:	mov    bh,bh
   1400554d4:	scas   al,BYTE PTR es:[rdi]
   1400554d5:	xchg   ecx,eax
   1400554d6:	xchg   bh,bh
   1400554d8:	cwde   
   1400554d9:	ins    BYTE PTR es:[rdi],dx
   1400554da:	pop    rdx
   1400554db:	jmp    QWORD PTR [rbp+0x2c]
   1400554de:	(bad)  
   1400554df:	mov    ah,0x0
   1400554e1:	add    BYTE PTR [rax],al
   1400554e3:	add    BYTE PTR [rbx+0x2d],ah
   1400554e6:	sbb    ah,BYTE PTR [rip+0xfffffffff61b336f]        # 0x13620885b
   1400554ec:	test   DWORD PTR [rax+0x3a],edx
   1400554ef:	jmp    QWORD PTR [rbp-0x5e008c7f]
   1400554f5:	jne    0x140055557
   1400554f7:	push   QWORD PTR [rax-0x4300937b]
   1400554fd:	xchg   edx,eax
   1400554fe:	js     0x1400554ff
   140055500:	(bad)  
   140055501:	(bad)  
   140055502:	cmp    bh,0xcc
   140055505:	movabs al,ds:0x9bc9ff89a6d3ff85
   14005550e:	jle    0x14005550f
   140055510:	lods   al,BYTE PTR ds:[rsi]
   140055511:	jns    0x14005556e
   140055513:	jmp    FWORD PTR [rcx-0x3800b895]
   140055519:	xchg   edx,eax
   14005551a:	outs   dx,DWORD PTR ds:[rsi]
   14005551b:	call   rbx
   14005551d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005551e:	mov    bh,bh
   140055520:	int    0xa1
   140055522:	xchg   bh,bh
   140055524:	(bad)  
   140055525:	fwait
   140055526:	cmp    bh,0xbd
   140055529:	xchg   ebx,eax
   14005552a:	jns    0x14005552b
   14005552c:	mov    al,0x85
   14005552e:	outs   dx,BYTE PTR ds:[rsi]
   14005552f:	call   FWORD PTR [rbp-0x6300a28f]
   140055535:	jbe    0x14005559e
   140055537:	call   FWORD PTR [rdx+0x6fff576b]
   14005553d:	xor    bl,BYTE PTR [rdx]
   14005553f:	std    
   140055540:	movsxd ebp,DWORD PTR [rip+0x2f652e1a]        # 0x16f6a8360
   140055546:	sbb    dh,BYTE PTR [rsi+0x75]
   140055549:	(bad)  
   14005554a:	(bad)  
   14005554b:	inc    DWORD PTR [rdx-0x2400cab5]
   140055551:	ror    ah,1
   140055553:	push   QWORD PTR [rdx-0x7200756b]
   140055559:	pop    rdi
   14005555a:	rex.WX (bad) 
   14005555c:	jl     0x1400555a0
   14005555e:	(bad)  
   14005555f:	(bad)  
   140055560:	jge    0x1400555a1
   140055562:	and    edi,edi
   140055564:	add    BYTE PTR [rcx+0x21],0xff
   140055568:	add    BYTE PTR [rdx+0x24],0xff
   14005556c:	test   BYTE PTR [rdx+0x3c],dl
   14005556f:	push   QWORD PTR [rcx-0x5000796d]
   140055575:	xchg   ebx,eax
   140055576:	mov    bh,bh
   140055578:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055579:	jnp    0x1400555e1
   14005557b:	dec    DWORD PTR [rcx-0x7c00d2b4]
   140055581:	rex.XB and edi,r15d
   140055584:	jnp    0x1400555c3
   140055586:	(bad)  
   140055587:	push   QWORD PTR [rbp+0x3b]
   14005558a:	(bad)  
   14005558b:	(bad)  
   14005558c:	jl     0x1400555d8
   14005558e:	xor    eax,0x6e7b9dff
   140055593:	call   rsi
   140055595:	enter  0xffc3,0xa9
   140055599:	sub    BYTE PTR [rsi-0x1],0x72
   14005559d:	xor    bl,BYTE PTR [rax]
   14005559f:	jmp    QWORD PTR [rsi+0x2f]
   1400555a2:	sbb    ecx,DWORD PTR [rcx-0x50e3ce97]
   1400555a8:	js     0x1400555e3
   1400555aa:	(bad)  
   1400555ab:	inc    DWORD PTR [rcx-0x700cbb6]
   1400555b1:	div    dh
   1400555b3:	(bad)  
   1400555b4:	(bad)  
   1400555b5:	(bad)  
   1400555b6:	(bad)  
   1400555b7:	(bad)  
   1400555b8:	(bad)  
   1400555b9:	(bad)  
   1400555ba:	(bad)  
   1400555bb:	(bad)  
   1400555bc:	call   0x1180536a2
   1400555c1:	retf   
   1400555c2:	(bad)  
   1400555c3:	call   rbx
   1400555c5:	mov    dl,0xff
   1400555c8:	(bad)  
   1400555ca:	(bad)  
   1400555cb:	(bad)  
   1400555cc:	stc    
   1400555cd:	clc    
   1400555ce:	stc    
   1400555cf:	(bad)  
   1400555d0:	out    dx,al
   1400555d1:	out    0xe4,eax
   1400555d3:	dec    edi
   1400555d5:	mov    ebp,0xffffffb6
   1400555da:	(bad)  
   1400555db:	jmp    rdx
   1400555dd:	fcmovu st,st(0)
   1400555df:	call   rdx
   1400555e1:	(bad)  
   1400555e2:	sar    bh,0xd3
   1400555e5:	mov    dl,0xff
   1400555e8:	loope  0x1400555c2
   1400555ea:	(bad)  
   1400555eb:	(bad)  
   1400555ec:	stc    
   1400555ed:	div    edi
   1400555ef:	(bad)  
   1400555f0:	(bad)  
   1400555f1:	(bad)  
   1400555f2:	(bad)  
   1400555f3:	(bad)  
   1400555f4:	(bad)  
   1400555f5:	(bad)  
   1400555f6:	(bad)  
   1400555f7:	jmp    FWORD PTR [rbx+0x73ff7384]
   1400555fd:	xor    dl,BYTE PTR [rdi]
   1400555ff:	jmp    FWORD PTR [rdx+0x32]
   140055602:	sbb    eax,0x1d336cc2
   140055607:	(bad)  
   140055608:	js     0x140055643
   14005560a:	(bad)  
   14005560b:	inc    DWORD PTR [rcx-0xb00cab6]
   140055611:	icebp  
   140055612:	lock (bad) 
   140055614:	(bad)  
   140055615:	(bad)  
   140055616:	(bad)  
   140055617:	(bad)  
   140055618:	(bad)  
   140055619:	(bad)  
   14005561a:	(bad)  
   14005561b:	(bad)  
   14005561c:	(bad)  
   14005561d:	(bad)  
   14005561e:	(bad)  
   14005561f:	(bad)  
   140055620:	(bad)  
   140055621:	(bad)  
   140055622:	(bad)  
   140055623:	push   rsp
   140055625:	out    dx,eax
   140055626:	in     eax,dx
   140055627:	jmp    rsp
   140055629:	(bad)  
   14005562a:	iret   
   14005562b:	(bad)  
   14005562c:	(bad)  
   14005562d:	(bad)  
   14005562e:	std    
   14005562f:	(bad)  
   140055630:	jmp    0x10a053416
   140055635:	mov    dh,0xad
   140055637:	(bad)  
   140055638:	(bad)  
   140055639:	(bad)  
   14005563a:	(bad)  
   14005563b:	(bad)  
   14005563c:	(bad)  
   14005563d:	(bad)  
   14005563e:	(bad)  
   14005563f:	(bad)  
   140055640:	(bad)  
   140055641:	(bad)  
   140055642:	(bad)  
   140055643:	(bad)  
   140055644:	(bad)  
   140055645:	(bad)  
   140055646:	(bad)  
   140055647:	(bad)  
   140055648:	(bad)  
   140055649:	(bad)  
   14005564a:	(bad)  
   14005564b:	(bad)  
   14005564c:	(bad)  
   14005564d:	(bad)  
   14005564e:	(bad)  
   14005564f:	(bad)  
   140055650:	(bad)  
   140055651:	(bad)  
   140055652:	(bad)  
   140055653:	(bad)  
   140055654:	(bad)  
   140055655:	(bad)  
   140055656:	(bad)  
   140055657:	jmp    FWORD PTR [rbx+0x74ff7383]
   14005565d:	xor    ebx,DWORD PTR [rax]
   14005565f:	jmp    FWORD PTR [rsi+0x35]
   140055662:	(bad)  
   140055663:	fisubr WORD PTR [rsi+0x35]
   140055666:	(bad)  
   140055667:	in     al,dx
   140055668:	js     0x1400556a3
   14005566a:	(bad)  
   14005566b:	inc    DWORD PTR [rax-0xa00cbb6]
   140055671:	icebp  
   140055672:	lock (bad) 
   140055674:	(bad)  
   140055675:	(bad)  
   140055676:	(bad)  
   140055677:	(bad)  
   140055678:	(bad)  
   140055679:	(bad)  
   14005567a:	(bad)  
   14005567b:	(bad)  
   14005567c:	(bad)  
   14005567d:	(bad)  
   14005567e:	(bad)  
   14005567f:	(bad)  
   140055680:	(bad)  
   140055681:	(bad)  
   140055682:	(bad)  
   140055683:	call   rax
   140055685:	sar    BYTE PTR [rcx+0x42598cff],0xff
   14005568c:	movabs ds:0xcaffdadde6ff6175,al
   140055695:	mov    ecx,0xffffffb2
   14005569a:	(bad)  
   14005569b:	(bad)  
   14005569c:	(bad)  
   14005569d:	(bad)  
   14005569e:	(bad)  
   14005569f:	(bad)  
   1400556a0:	(bad)  
   1400556a1:	(bad)  
   1400556a2:	(bad)  
   1400556a3:	(bad)  
   1400556a4:	(bad)  
   1400556a5:	(bad)  
   1400556a6:	(bad)  
   1400556a7:	(bad)  
   1400556a8:	(bad)  
   1400556a9:	(bad)  
   1400556aa:	(bad)  
   1400556ab:	(bad)  
   1400556ac:	(bad)  
   1400556ad:	(bad)  
   1400556ae:	(bad)  
   1400556af:	(bad)  
   1400556b0:	(bad)  
   1400556b1:	(bad)  
   1400556b2:	(bad)  
   1400556b3:	(bad)  
   1400556b4:	(bad)  
   1400556b5:	(bad)  
   1400556b6:	(bad)  
   1400556b7:	jmp    FWORD PTR [rdx+0x73ff7383]
   1400556bd:	xor    ebx,DWORD PTR [rax]
   1400556bf:	push   QWORD PTR [rax+0x36]
   1400556c2:	(bad)  
   1400556c3:	in     al,dx
   1400556c4:	outs   dx,BYTE PTR ds:[rsi]
   1400556c5:	xor    eax,0x3878ec1e
   1400556ca:	(bad)  
   1400556cb:	inc    DWORD PTR [rax-0xa00ccb7]
   1400556d1:	icebp  
   1400556d2:	lock (bad) 
   1400556d4:	(bad)  
   1400556d5:	(bad)  
   1400556d6:	(bad)  
   1400556d7:	(bad)  
   1400556d8:	(bad)  
   1400556d9:	(bad)  
   1400556da:	(bad)  
   1400556db:	(bad)  
   1400556dc:	(bad)  
   1400556dd:	(bad)  
   1400556de:	(bad)  
   1400556df:	(bad)  
   1400556e0:	(bad)  
   1400556e1:	(bad)  
   1400556e2:	(bad)  
   1400556e3:	(bad)  
   1400556e4:	(bad)  
   1400556e5:	(bad)  
   1400556e6:	(bad)  
   1400556e7:	inc    esi
   1400556e9:	lods   al,BYTE PTR ds:[rsi]
   1400556ea:	movabs eax,ds:0x7e8cb0ff142e70ff
   1400556f3:	call   rcx
   1400556f5:	mov    esi,0xffffffb7
   1400556fa:	(bad)  
   1400556fb:	(bad)  
   1400556fc:	(bad)  
   1400556fd:	(bad)  
   1400556fe:	(bad)  
   1400556ff:	(bad)  
   140055700:	(bad)  
   140055701:	(bad)  
   140055702:	(bad)  
   140055703:	(bad)  
   140055704:	(bad)  
   140055705:	(bad)  
   140055706:	(bad)  
   140055707:	(bad)  
   140055708:	(bad)  
   140055709:	(bad)  
   14005570a:	(bad)  
   14005570b:	(bad)  
   14005570c:	(bad)  
   14005570d:	(bad)  
   14005570e:	(bad)  
   14005570f:	(bad)  
   140055710:	(bad)  
   140055711:	(bad)  
   140055712:	(bad)  
   140055713:	(bad)  
   140055714:	(bad)  
   140055715:	(bad)  
   140055716:	(bad)  
   140055717:	jmp    FWORD PTR [rcx+0x73ff7282]
   14005571d:	xor    bl,BYTE PTR [rax]
   14005571f:	push   QWORD PTR [rax+0x36]
   140055722:	(bad)  
   140055723:	in     al,dx
   140055724:	ins    BYTE PTR es:[rdi],dx
   140055725:	xor    al,0x1e
   140055727:	(bad)  
   140055728:	js     0x140055762
   14005572a:	(bad)  
   14005572b:	inc    DWORD PTR [rax-0xa00ccb7]
   140055731:	icebp  
   140055732:	lock (bad) 
   140055734:	(bad)  
   140055735:	(bad)  
   140055736:	(bad)  
   140055737:	(bad)  
   140055738:	(bad)  
   140055739:	(bad)  
   14005573a:	(bad)  
   14005573b:	(bad)  
   14005573c:	(bad)  
   14005573d:	(bad)  
   14005573e:	(bad)  
   14005573f:	dec    eax
   140055741:	scas   eax,DWORD PTR es:[rdi]
   140055742:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055743:	inc    esi
   140055745:	lods   eax,DWORD PTR ds:[rsi]
   140055746:	movabs ds:0x1f3876ff4f6393ff,al
   14005574f:	inc    DWORD PTR [rax-0x6800d2bc]
   140055755:	push   dx
   140055757:	dec    edx
   140055759:	mov    dl,0xa8
   14005575b:	(bad)  
   14005575c:	jmp    0x140055740
   14005575e:	fdivp  st(7),st
   140055760:	xlat   BYTE PTR ds:[rbx]
   140055761:	(bad)
   140055764:	loop   0x14005573a
   140055766:	(bad)  
   140055767:	(bad)  
   140055768:	(bad)  
   140055769:	(bad)  
   14005576a:	(bad)  
   14005576b:	(bad)  
   14005576c:	(bad)  
   14005576d:	(bad)  
   14005576e:	(bad)  
   14005576f:	(bad)  
   140055770:	(bad)  
   140055771:	(bad)  
   140055772:	(bad)  
   140055773:	(bad)  
   140055774:	(bad)  
   140055775:	(bad)  
   140055776:	(bad)  
   140055777:	jmp    FWORD PTR [rcx+0x73ff7181]
   14005577d:	xor    DWORD PTR [rdi],edx
   14005577f:	jmp    FWORD PTR [rsi+0x35]
   140055782:	(bad)  
   140055783:	fsubr  QWORD PTR [rcx+0x32]
   140055786:	sbb    al,0xac
   140055788:	ja     0x1400557c2
   14005578a:	(bad)  
   14005578b:	inc    DWORD PTR [rax-0xa00ccb7]
   140055791:	icebp  
   140055792:	lock (bad) 
   140055794:	(bad)  
   140055795:	(bad)  
   140055796:	(bad)  
   140055797:	(bad)  
   140055798:	(bad)  
   140055799:	(bad)  
   14005579a:	(bad)  
   14005579b:	(bad)  
   14005579c:	(bad)  
   14005579d:	(bad)  
   14005579e:	(bad)  
   14005579f:	jmp    rbp
   1400557a1:	fcmovnbe st,st(7)
   1400557a3:	dec    DWORD PTR [rcx+0x7eff495b]
   1400557a9:	push   rax
   1400557aa:	cmp    eax,0x6e7c9fff
   1400557af:	dec    DWORD PTR [rbx-0x7a00b8a6]
   1400557b5:	rex.WRXB cmp r15,r15
   1400557b8:	mov    WORD PTR [rdi+0x41],ss
   1400557bb:	call   FWORD PTR [rcx+0x7dff5569]
   1400557c1:	rex.WX
   1400557c2:	inc    DWORD PTR ss:[rsp+rdx*2-0x443100be]
   1400557ca:	mov    ah,0xff
   1400557cc:	(bad)  
   1400557cd:	(bad)  
   1400557ce:	(bad)  
   1400557cf:	(bad)  
   1400557d0:	(bad)  
   1400557d1:	(bad)  
   1400557d2:	(bad)  
   1400557d3:	(bad)  
   1400557d4:	(bad)  
   1400557d5:	(bad)  
   1400557d6:	(bad)  
   1400557d7:	jmp    FWORD PTR [rcx+0x73ff7181]
   1400557dd:	xor    DWORD PTR [rsi],edx
   1400557df:	jmp    FWORD PTR [rdx+0x32]
   1400557e2:	sbb    eax,0x1a2e65c0
   1400557e7:	jb     0x14005585d
   1400557e9:	ss sbb eax,0x334980ff
   1400557ef:	push   rbp
   1400557f1:	icebp  
   1400557f2:	lock (bad) 
   1400557f4:	(bad)  
   1400557f5:	(bad)  
   1400557f6:	(bad)  
   1400557f7:	(bad)  
   1400557f8:	(bad)  
   1400557f9:	(bad)  
   1400557fa:	(bad)  
   1400557fb:	(bad)  
   1400557fc:	(bad)  
   1400557fd:	(bad)  
   1400557fe:	(bad)  
   1400557ff:	(bad)  
   140055800:	(bad)  
   140055801:	(bad)  
   140055802:	(bad)  
   140055803:	(bad)  
   140055804:	std    
   140055805:	(bad)  
   140055806:	(bad)  
   140055807:	(bad)  
   140055808:	stc    
   140055809:	clc    
   14005580a:	idiv   edi
   14005580c:	(bad)  
   14005580d:	(bad)  
   14005580e:	(bad)  
   14005580f:	jmp    rax
   140055811:	(bad)  
   140055812:	sar    bh,1
   140055814:	xchg   esi,eax
   140055815:	jno    0x14005587a
   140055817:	jmp    QWORD PTR [rdx-0x6a009687]
   14005581d:	gs push rdx
   14005581f:	jmp    FWORD PTR [rsi+rcx*4-0x120e007d]
   140055826:	jmp    0x140055827
   140055828:	loope  0x140055801
   14005582a:	sar    edi,cl
   14005582c:	(bad)  
   14005582d:	(bad)  
   14005582e:	(bad)  
   14005582f:	(bad)  
   140055830:	(bad)  
   140055831:	(bad)  
   140055832:	(bad)  
   140055833:	(bad)  
   140055834:	(bad)  
   140055835:	(bad)  
   140055836:	(bad)  
   140055837:	jmp    FWORD PTR [rdx+0x70ff7182]
   14005583d:	(bad)  
   14005583e:	(bad)  
   14005583f:	jmp    QWORD PTR [rbp+0x2f]
   140055842:	sbb    eax,DWORD PTR [rbx+riz*2+0x6e211a2d]
   140055849:	xor    bl,BYTE PTR [rdx]
   14005584b:	cmc    
   14005584c:	or     DWORD PTR [rdx+0x34],0xf0f1f5ff
   140055853:	(bad)  
   140055854:	(bad)  
   140055855:	(bad)  
   140055856:	(bad)  
   140055857:	(bad)  
   140055858:	(bad)  
   140055859:	(bad)  
   14005585a:	(bad)  
   14005585b:	(bad)  
   14005585c:	(bad)  
   14005585d:	(bad)  
   14005585e:	(bad)  
   14005585f:	(bad)  
   140055860:	(bad)  
   140055861:	(bad)  
   140055862:	(bad)  
   140055863:	(bad)  
   140055864:	(bad)  
   140055865:	(bad)  
   140055866:	(bad)  
   140055867:	(bad)  
   140055868:	(bad)  
   140055869:	(bad)  
   14005586a:	(bad)  
   14005586b:	(bad)  
   14005586c:	(bad)  
   14005586d:	(bad)  
   14005586e:	(bad)  
   14005586f:	(bad)  
   140055870:	(bad)  
   140055871:	loop   0x140055853
   140055873:	call   rcx
   140055875:	sar    DWORD PTR [rdi+rdi*8-0x15120d],0x99
   14005587d:	ins    DWORD PTR es:[rdi],dx
   14005587e:	pop    rsp
   14005587f:	dec    ecx
   140055881:	mov    bl,0xaa
   140055883:	(bad)  
   140055884:	clc    
   140055885:	cmc    
   140055886:	cmc    
   140055887:	(bad)  
   140055888:	(bad)  
   140055889:	(bad)  
   14005588a:	(bad)  
   14005588b:	(bad)  
   14005588c:	(bad)  
   14005588d:	(bad)  
   14005588e:	(bad)  
   14005588f:	(bad)  
   140055890:	(bad)  
   140055891:	(bad)  
   140055892:	(bad)  
   140055893:	(bad)  
   140055894:	(bad)  
   140055895:	(bad)  
   140055896:	(bad)  
   140055897:	jmp    FWORD PTR [rdx+0x6aff7282]
   14005589d:	sub    al,0x13
   14005589f:	cld    
   1400558a0:	movsxd ebp,DWORD PTR [rip+0x2a1a]        # 0x1400582c0
   1400558a6:	add    BYTE PTR [rax],al
   1400558a8:	fs sub al,0x16
   1400558ab:	lahf   
   1400558ac:	or     DWORD PTR [rbx+0x35],0xfbfbfbff
   1400558b3:	(bad)  
   1400558b4:	(bad)  
   1400558b5:	(bad)  
   1400558b6:	(bad)  
   1400558b7:	(bad)  
   1400558b8:	(bad)  
   1400558b9:	(bad)  
   1400558ba:	(bad)  
   1400558bb:	(bad)  
   1400558bc:	(bad)  
   1400558bd:	(bad)  
   1400558be:	(bad)  
   1400558bf:	(bad)  
   1400558c0:	(bad)  
   1400558c1:	(bad)  
   1400558c2:	(bad)  
   1400558c3:	(bad)  
   1400558c4:	(bad)  
   1400558c5:	(bad)  
   1400558c6:	(bad)  
   1400558c7:	(bad)  
   1400558c8:	(bad)  
   1400558c9:	(bad)  
   1400558ca:	(bad)  
   1400558cb:	(bad)  
   1400558cc:	(bad)  
   1400558cd:	(bad)  
   1400558ce:	(bad)  
   1400558cf:	(bad)  
   1400558d0:	jmp    0x10d0538b6
   1400558d5:	mov    edx,0xffffffb3
   1400558da:	(bad)  
   1400558db:	inc    ebp
   1400558dd:	mov    cl,0xa9
   1400558df:	call   QWORD PTR [rbx-0x2e00a194]
   1400558e5:	sar    DWORD PTR [rbx-0x1],0xff
   1400558ec:	(bad)  
   1400558ed:	(bad)  
   1400558ee:	(bad)  
   1400558ef:	(bad)  
   1400558f0:	(bad)  
   1400558f1:	(bad)  
   1400558f2:	(bad)  
   1400558f3:	(bad)  
   1400558f4:	(bad)  
   1400558f5:	(bad)  
   1400558f6:	(bad)  
   1400558f7:	jmp    FWORD PTR [rsi+rax*4+0x2561ff76]
   1400558fe:	shrd   DWORD PTR [rax],eax,cl
   140055901:	add    BYTE PTR [rax],al
   140055903:	add    BYTE PTR [rax],al
   140055905:	add    BYTE PTR [rax],al
   140055907:	add    BYTE PTR [rcx+0x2b],ah
   14005590a:	(bad)  
   14005590b:	sbb    eax,0xec233971
   140055910:	sar    BYTE PTR [rdx-0x705004f],1
   140055916:	idiv   edi
   140055918:	(bad)  
   140055919:	(bad)  
   14005591a:	(bad)  
   14005591b:	(bad)  
   14005591c:	(bad)  
   14005591d:	(bad)  
   14005591e:	(bad)  
   14005591f:	(bad)  
   140055920:	(bad)  
   140055921:	(bad)  
   140055922:	(bad)  
   140055923:	(bad)  
   140055924:	(bad)  
   140055925:	(bad)  
   140055926:	(bad)  
   140055927:	(bad)  
   140055928:	(bad)  
   140055929:	(bad)  
   14005592a:	(bad)  
   14005592b:	(bad)  
   14005592c:	(bad)  
   14005592d:	(bad)  
   14005592e:	(bad)  
   14005592f:	(bad)  
   140055930:	out    dx,al
   140055931:	out    0xe4,eax
   140055933:	(bad)  
   140055934:	fmul   st(5),st
   140055936:	(bad)  
   140055937:	(bad)  
   140055938:	(bad)  
   140055939:	(bad)  
   14005593a:	(bad)  
   14005593b:	(bad)  
   14005593c:	(bad)  
   14005593d:	(bad)  
   14005593e:	(bad)  
   14005593f:	(bad)  
   140055940:	(bad)  
   140055941:	(bad)  
   140055942:	(bad)  
   140055943:	(bad)  
   140055944:	(bad)  
   140055945:	(bad)  
   140055946:	(bad)  
   140055947:	(bad)  
   140055948:	(bad)  
   140055949:	(bad)  
   14005594a:	(bad)  
   14005594b:	(bad)  
   14005594c:	(bad)  
   14005594d:	(bad)  
   14005594e:	(bad)  
   14005594f:	(bad)  
   140055950:	(bad)  
   140055951:	(bad)  
   140055952:	(bad)  
   140055953:	jmp    rsi
   140055955:	(bad)  
   140055957:	dec    DWORD PTR [rax+0x5ff34659]
   14005595d:	(bad)  
   14005595e:	adc    ebp,DWORD PTR [rax]
	...
   14005596c:	(bad)  
   14005596d:	sub    al,0x17
   14005596f:	push   rsp
   140055970:	outs   dx,BYTE PTR ds:[rsi]
   140055971:	xor    DWORD PTR [rcx],ebx
   140055973:	dec    DWORD PTR [rbp+rdx*2-0x583c00c1]
   14005597a:	fwait
   14005597b:	(bad)  
   14005597c:	out    dx,eax
   14005597d:	out    0xe4,eax
   14005597f:	push   rbx
   140055981:	in     eax,dx
   140055982:	jmp    0x140055983
   140055984:	cmc    
   140055985:	icebp  
   140055986:	out    dx,eax
   140055987:	push   rdx
   140055989:	in     al,dx
   14005598a:	jmp    0x114e03f8e
   14005598f:	dec    ebp
   140055991:	mov    dh,0xac
   140055993:	dec    edx
   140055995:	mov    cl,0xa6
   140055997:	jmp    rax
   140055999:	ror    ah,cl
   14005599b:	push   rdx
   14005599d:	in     al,dx
   14005599e:	jmp    0x132fa51a2
   1400559a3:	push   rdi
   1400559a5:	hlt    
   1400559a6:	repnz push rsp
   1400559a9:	out    dx,al
   1400559aa:	in     eax,dx
   1400559ab:	push   rdx
   1400559ad:	in     al,dx
   1400559ae:	jmp    0xc59910b2
   1400559b3:	push   QWORD PTR [rcx+0x35]
   1400559b6:	sbb    eax,0x142860ff
   1400559bb:	(bad)  
	...
   1400559d0:	fs sub eax,0x316f6c19
   1400559d6:	sbb    bh,bh
   1400559d8:	jl     0x140055a17
   1400559da:	and    edi,edi
   1400559dc:	mov    dh,0x93
   1400559de:	cmp    edi,0xffffffd1
   1400559e1:	mov    ebx,0xb7ceffb1
   1400559e6:	lods   al,BYTE PTR ds:[rsi]
   1400559e7:	dec    esi
   1400559e9:	mov    bh,0xab
   1400559eb:	dec    esi
   1400559ed:	mov    bh,0xab
   1400559ef:	call   rdx
   1400559f1:	mov    esp,0xc0d5ffb1
   1400559f6:	mov    dh,0xff
   1400559f8:	(bad)  
   1400559f9:	mov    edi,0xc3d7ffb5
   1400559fe:	mov    edx,0xc0c8daff
   140055a03:	(bad)  
   140055a04:	fmul   st(3),st
   140055a06:	(bad)  
   140055a07:	jmp    rsp
   140055a09:	(bad)  
   140055a0a:	sar    edi,1
   140055a0c:	ret    
   140055a0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055a0e:	cdq    
   140055a0f:	push   QWORD PTR [rbx+0x37]
   140055a12:	(bad)  
   140055a13:	jmp    QWORD PTR [rdx+0x2a]
   140055a16:	adc    eax,0x79
	...
   140055a33:	add    BYTE PTR [rsi+rbp*1+0x1a],ah
   140055a37:	push   rsi
   140055a38:	outs   dx,DWORD PTR ds:[rsi]
   140055a39:	xor    al,0x1c
   140055a3b:	(bad)  
   140055a3c:	xchg   DWORD PTR [rax+rsi*1-0x1],ecx
   140055a40:	ret    0x91a2
   140055a43:	(bad)  
   140055a44:	(bad)  
   140055a46:	(bad)  
   140055a47:	(bad)  
   140055a48:	(bad)  
   140055a4a:	(bad)  
   140055a4b:	(bad)  
   140055a4c:	fmulp  st(6),st
   140055a4e:	(bad)  
   140055a51:	rol    bh,1
   140055a53:	jmp    rcx
   140055a55:	ror    edx,cl
   140055a57:	jmp    rbx
   140055a59:	(bad)  
   140055a5a:	int    0xff
   140055a5c:	in     eax,0xd8
   140055a5e:	sar    edi,1
   140055a60:	jmp    0x140055a42
   140055a62:	(bad)  
   140055a64:	out    dx,eax
   140055a65:	out    0xe1,al
   140055a67:	inc    edi
   140055a69:	lods   al,BYTE PTR ds:[rsi]
   140055a6a:	sahf   
   140055a6b:	push   QWORD PTR [rsi+0x3e]
   140055a6e:	(bad)  
   140055a6f:	out    dx,eax
   140055a70:	(bad)  
   140055a71:	sub    dl,BYTE PTR [rip+0x61]        # 0x140055ad8
	...
   140055a97:	add    BYTE PTR [rbx+0x2d],ah
   140055a9a:	sbb    ah,BYTE PTR [rax]
   140055a9c:	addr32 (bad) 
   140055a9e:	sbb    DWORD PTR [rsi-0xcdabe85],ebx
   140055aa4:	scas   al,BYTE PTR es:[rdi]
   140055aa5:	test   BYTE PTR [rsi-0x1],ch
   140055aa8:	fadd   st(6),st
   140055aaa:	mov    ecx,0xdbe3efff
   140055aaf:	push   rbp
   140055ab1:	in     al,dx
   140055ab2:	out    0xff,al
   140055ab4:	imul   dh
   140055ab6:	jmp    0x12bf652ba
   140055abb:	push   rdx
   140055abd:	jmp    0x108e05aa5
   140055ac2:	mov    esi,0x687aa1ff
   140055ac7:	mul    BYTE PTR [rdi+0x2f]
   140055aca:	sbb    DWORD PTR [rbp+0x27152960],esp
	...
   140055b00:	(bad)  
   140055b01:	sub    ebx,DWORD PTR [rax]
   140055b03:	and    eax,0x73142a63
   140055b08:	jne    0x140055b47
   140055b0a:	and    eax,0x4c6291ab
   140055b0f:	(bad)  
   140055b10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055b11:	jle    0x140055b7f
   140055b13:	in     al,dx
   140055b14:	test   al,0x84
   140055b16:	je     0x140055b05
   140055b18:	lahf   
   140055b19:	jns    0x140055b84
   140055b1b:	(bad)  
   140055b1c:	test   DWORD PTR [rdi+0x44],edx
   140055b1f:	scas   eax,DWORD PTR es:[rdi]
   140055b20:	xor    BYTE PTR [ebx],bl
   140055b23:	ja     0x140055b82
   140055b25:	and    al,0x10
   140055b27:	sub    al,BYTE PTR [rax]
	...
   140055b41:	add    BYTE PTR [rax],al
   140055b43:	add    dh,bh
   140055b45:	add    BYTE PTR [rdi+0x0],bh
   140055b48:	clc    
   140055b49:	add    BYTE PTR [rdi],bl
   140055b4b:	xor    al,dh
   140055b4d:	add    BYTE PTR [rdi],cl
   140055b4f:	cld    
   140055b50:	loopne 0x140055b52
   140055b52:	(bad)  
   140055b53:	clc    
   140055b54:	rol    BYTE PTR [rax],0x3
   140055b57:	lock add BYTE PTR [rax],0x1
   140055b5b:	loopne 0x140055add
   140055b5d:	add    BYTE PTR [rcx],al
   140055b5f:	rol    BYTE PTR [rax],0x0
   140055b62:	add    BYTE PTR [rax-0x80000000],al
	...
   140055b88:	add    BYTE PTR [rax],0x1
   140055b8b:	add    BYTE PTR [rax-0x3f7fff00],0x0
   140055b92:	add    eax,eax
   140055b94:	loopne 0x140055b96
   140055b96:	(bad)  
   140055b97:	loopne 0x140055b89
   140055b99:	add    BYTE PTR [rdi],cl
   140055b9b:	lock clc 
   140055b9d:	add    BYTE PTR [rdi],bl
   140055b9f:	clc    
   140055ba0:	inc    BYTE PTR [rax]
   140055ba2:	jg     0x140055ba4
   140055ba4:	sub    BYTE PTR [rax],al
   140055ba6:	add    BYTE PTR [rax],al
   140055ba8:	adc    BYTE PTR [rax],al
   140055baa:	add    BYTE PTR [rax],al
   140055bac:	and    BYTE PTR [rax],al
   140055bae:	add    BYTE PTR [rax],al
   140055bb0:	add    DWORD PTR [rax],eax
   140055bb2:	and    BYTE PTR [rax],al
	...
   140055bcc:	(bad)  
   140055bcd:	(bad)  
   140055bce:	(bad)  
   140055bcf:	(bad)  
   140055bd0:	(bad)  
   140055bd1:	(bad)  
   140055bd2:	(bad)  
   140055bd3:	(bad)  
   140055bd4:	(bad)  
   140055bd5:	(bad)  
   140055bd6:	(bad)  
   140055bd7:	(bad)  
   140055bd8:	(bad)  
   140055bd9:	(bad)  
   140055bda:	(bad)  
   140055bdb:	(bad)  
   140055bdc:	(bad)  
   140055bdd:	(bad)  
   140055bde:	(bad)  
   140055bdf:	(bad)  
   140055be0:	(bad)  
   140055be1:	(bad)  
   140055be2:	(bad)  
   140055be3:	(bad)  
   140055be4:	(bad)  
   140055be5:	(bad)  
   140055be6:	(bad)  
   140055be7:	(bad)  
   140055be8:	(bad)  
   140055be9:	(bad)  
   140055bea:	(bad)  
   140055beb:	(bad)  
   140055bec:	(bad)  
   140055bed:	(bad)  
   140055bee:	(bad)  
   140055bef:	(bad)  
   140055bf0:	(bad)  
   140055bf1:	(bad)  
   140055bf2:	(bad)  
   140055bf3:	(bad)  
   140055bf4:	(bad)  
   140055bf5:	(bad)  
   140055bf6:	(bad)  
   140055bf7:	(bad)  
   140055bf8:	(bad)  
   140055bf9:	(bad)  
   140055bfa:	(bad)  
   140055bfb:	(bad)  
   140055bfc:	(bad)  
   140055bfd:	(bad)  
   140055bfe:	(bad)  
   140055bff:	(bad)  
   140055c00:	(bad)  
   140055c01:	(bad)  
   140055c02:	(bad)  
   140055c03:	(bad)  
   140055c04:	(bad)  
   140055c05:	(bad)  
   140055c06:	(bad)  
   140055c07:	(bad)  
   140055c08:	(bad)  
   140055c09:	(bad)  
   140055c0a:	(bad)  
   140055c0b:	(bad)  
   140055c0c:	(bad)  
   140055c0d:	(bad)  
   140055c0e:	(bad)  
   140055c0f:	(bad)  
   140055c10:	jns    0x140055c4e
   140055c12:	and    bh,bh
   140055c14:	jns    0x140055c52
   140055c16:	and    bh,bh
   140055c18:	jns    0x140055c56
   140055c1a:	and    bh,bh
   140055c1c:	jns    0x140055c5a
   140055c1e:	and    bh,bh
   140055c20:	jns    0x140055c5e
   140055c22:	and    bh,bh
   140055c24:	jns    0x140055c62
   140055c26:	and    bh,bh
   140055c28:	jns    0x140055c66
   140055c2a:	and    bh,bh
   140055c2c:	jns    0x140055c6a
   140055c2e:	and    bh,bh
   140055c30:	jns    0x140055c6e
   140055c32:	and    bh,bh
   140055c34:	outs   dx,DWORD PTR ds:[rsi]
   140055c35:	cmp    ah,BYTE PTR [rip+0x223c79ff]        # 0x16241d63a
   140055c3b:	(bad)  
   140055c3c:	jns    0x140055c7a
   140055c3e:	and    bh,bh
   140055c40:	jns    0x140055c7e
   140055c42:	and    bh,bh
   140055c44:	jns    0x140055c82
   140055c46:	and    bh,bh
   140055c48:	(bad)  
   140055c49:	(bad)  
   140055c4a:	(bad)  
   140055c4b:	(bad)  
   140055c4c:	(bad)  
   140055c4d:	(bad)  
   140055c4e:	(bad)  
   140055c4f:	jmp    FWORD PTR [rsi-0x5100786e]
   140055c55:	xchg   edx,eax
   140055c56:	xchg   edi,edi
   140055c58:	scas   al,BYTE PTR es:[rdi]
   140055c59:	xchg   edx,eax
   140055c5a:	xchg   edi,edi
   140055c5c:	scas   al,BYTE PTR es:[rdi]
   140055c5d:	xchg   edx,eax
   140055c5e:	xchg   edi,edi
   140055c60:	scas   al,BYTE PTR es:[rdi]
   140055c61:	xchg   edx,eax
   140055c62:	xchg   edi,edi
   140055c64:	scas   al,BYTE PTR es:[rdi]
   140055c65:	xchg   edx,eax
   140055c66:	xchg   edi,edi
   140055c68:	fmul   st(6),st
   140055c6a:	enter  0xdcff,0xce
   140055c6e:	enter  0xdcff,0xce
   140055c72:	enter  0xaeff,0x92
   140055c76:	xchg   edi,edi
   140055c78:	scas   al,BYTE PTR es:[rdi]
   140055c79:	xchg   edx,eax
   140055c7a:	xchg   edi,edi
   140055c7c:	scas   al,BYTE PTR es:[rdi]
   140055c7d:	xchg   edx,eax
   140055c7e:	xchg   edi,edi
   140055c80:	scas   al,BYTE PTR es:[rdi]
   140055c81:	xchg   edx,eax
   140055c82:	xchg   edi,edi
   140055c84:	scas   al,BYTE PTR es:[rdi]
   140055c85:	xchg   edx,eax
   140055c86:	xchg   edi,edi
   140055c88:	(bad)  
   140055c89:	(bad)  
   140055c8a:	(bad)  
   140055c8b:	(bad)  
   140055c8c:	(bad)  
   140055c8d:	(bad)  
   140055c8e:	(bad)  
   140055c8f:	(bad)  
   140055c90:	jns    0x140055cce
   140055c92:	and    bh,bh
   140055c94:	jns    0x140055cd2
   140055c96:	and    bh,bh
   140055c98:	jns    0x140055cd6
   140055c9a:	and    bh,bh
   140055c9c:	jns    0x140055cda
   140055c9e:	and    bh,bh
   140055ca0:	jns    0x140055cde
   140055ca2:	and    bh,bh
   140055ca4:	jns    0x140055ce2
   140055ca6:	and    bh,bh
   140055ca8:	jns    0x140055ce6
   140055caa:	and    bh,bh
   140055cac:	jns    0x140055cea
   140055cae:	and    bh,bh
   140055cb0:	jns    0x140055cee
   140055cb2:	and    bh,bh
   140055cb4:	jns    0x140055cf2
   140055cb6:	and    bh,bh
   140055cb8:	jns    0x140055cf6
   140055cba:	and    bh,bh
   140055cbc:	jns    0x140055cfa
   140055cbe:	and    bh,bh
   140055cc0:	jns    0x140055cfe
   140055cc2:	and    bh,bh
   140055cc4:	jns    0x140055d02
   140055cc6:	and    bh,bh
   140055cc8:	(bad)  
   140055cc9:	(bad)  
   140055cca:	(bad)  
   140055ccb:	(bad)  
   140055ccc:	(bad)  
   140055ccd:	(bad)  
   140055cce:	(bad)  
   140055ccf:	push   rsi
   140055cd1:	div    dh
   140055cd3:	(bad)  
   140055cd4:	fcmovne st,st(4)
   140055cd6:	(bad)  
   140055cd7:	dec    ecx
   140055cd9:	mov    dl,0xa9
   140055cdb:	inc    edx
   140055cdd:	test   eax,0xbacdff9d
   140055ce2:	mov    cl,0xff
   140055ce4:	fst    st(2)
   140055ce6:	sar    bh,1
   140055ce8:	div    esi
   140055cea:	hlt    
   140055ceb:	(bad)  
   140055cec:	jns    0x140055d2a
   140055cee:	and    bh,bh
   140055cf0:	(bad)  
   140055cf1:	ret    
   140055cf2:	mov    esp,0x99a4bfff
   140055cf7:	inc    eax
   140055cf9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055cfa:	popf   
   140055cfb:	dec    esp
   140055cfd:	mov    ecx,0xd9e2ffb2
   140055d02:	(bad)  
   140055d03:	(bad)  
   140055d04:	clc    
   140055d05:	div    ch
   140055d07:	(bad)  
   140055d08:	(bad)  
   140055d09:	(bad)  
   140055d0a:	(bad)  
   140055d0b:	(bad)  
   140055d0c:	(bad)  
   140055d0d:	(bad)  
   140055d0e:	(bad)  
   140055d0f:	(bad)  
   140055d10:	(bad)  
   140055d11:	(bad)  
   140055d12:	(bad)  
   140055d13:	(bad)  
   140055d14:	(bad)  
   140055d15:	(bad)  
   140055d16:	(bad)  
   140055d17:	(bad)  
   140055d18:	(bad)  
   140055d19:	(bad)  
   140055d1a:	(bad)  
   140055d1b:	push   rbp
   140055d1d:	hlt    
   140055d1e:	cmc    
   140055d1f:	push   rdi
   140055d21:	div    ah
   140055d23:	push   rdi
   140055d25:	div    ah
   140055d27:	push   rdi
   140055d29:	div    ah
   140055d2b:	(bad)  
   140055d2c:	jns    0x140055d6a
   140055d2e:	and    bh,bh
   140055d30:	(bad)  
   140055d31:	(bad)  
   140055d32:	(bad)  
   140055d33:	(bad)  
   140055d34:	(bad)  
   140055d35:	(bad)  
   140055d36:	(bad)  
   140055d37:	(bad)  
   140055d38:	(bad)  
   140055d39:	(bad)  
   140055d3a:	(bad)  
   140055d3b:	(bad)  
   140055d3c:	(bad)  
   140055d3d:	(bad)  
   140055d3e:	(bad)  
   140055d3f:	(bad)  
   140055d40:	(bad)  
   140055d41:	(bad)  
   140055d42:	(bad)  
   140055d43:	(bad)  
   140055d44:	(bad)  
   140055d45:	(bad)  
   140055d46:	(bad)  
   140055d47:	(bad)  
   140055d48:	(bad)  
   140055d49:	(bad)  
   140055d4a:	(bad)  
   140055d4b:	(bad)  
   140055d4c:	(bad)  
   140055d4d:	(bad)  
   140055d4e:	(bad)  
   140055d4f:	(bad)  
   140055d50:	(bad)  
   140055d51:	(bad)  
   140055d52:	(bad)  
   140055d53:	(bad)  
   140055d54:	(bad)  
   140055d55:	(bad)  
   140055d56:	(bad)  
   140055d57:	(bad)  
   140055d58:	(bad)  
   140055d59:	(bad)  
   140055d5a:	(bad)  
   140055d5b:	push   rdi
   140055d5d:	div    ah
   140055d5f:	(bad)  
   140055d60:	jns    0x140055d9e
   140055d62:	and    bh,bh
   140055d64:	(bad)  
   140055d65:	ret    
   140055d66:	mov    esp,0xbcc3d4ff
   140055d6b:	(bad)  
   140055d6c:	jns    0x140055daa
   140055d6e:	and    bh,bh
   140055d70:	(bad)  
   140055d71:	(bad)  
   140055d72:	(bad)  
   140055d73:	(bad)  
   140055d74:	(bad)  
   140055d75:	(bad)  
   140055d76:	(bad)  
   140055d77:	(bad)  
   140055d78:	(bad)  
   140055d79:	(bad)  
   140055d7a:	(bad)  
   140055d7b:	(bad)  
   140055d7c:	(bad)  
   140055d7d:	(bad)  
   140055d7e:	(bad)  
   140055d7f:	(bad)  
   140055d80:	(bad)  
   140055d81:	(bad)  
   140055d82:	(bad)  
   140055d83:	(bad)  
   140055d84:	cld    
   140055d85:	sti    
   140055d86:	sti    
   140055d87:	(bad)  
   140055d88:	(bad)  
   140055d89:	(bad)  
   140055d8a:	(bad)  
   140055d8b:	(bad)  
   140055d8c:	(bad)  
   140055d8d:	(bad)  
   140055d8e:	(bad)  
   140055d8f:	(bad)  
   140055d90:	(bad)  
   140055d91:	(bad)  
   140055d92:	(bad)  
   140055d93:	(bad)  
   140055d94:	(bad)  
   140055d95:	(bad)  
   140055d96:	(bad)  
   140055d97:	(bad)  
   140055d98:	out    dx,al
   140055d99:	out    0xe4,al
   140055d9b:	push   rdi
   140055d9d:	div    ah
   140055d9f:	jmp    FWORD PTR [rbp+0x79ff7786]
   140055da5:	cmp    al,0x22
   140055da7:	call   FWORD PTR [rax+0x79ff5567]
   140055dad:	cmp    al,0x22
   140055daf:	push   rbp
   140055db1:	icebp  
   140055db2:	out    dx,eax
   140055db3:	(bad)  
   140055db4:	out    dx,eax
   140055db5:	out    0xe4,eax
   140055db7:	push   rsp
   140055db9:	out    dx,eax
   140055dba:	in     al,dx
   140055dbb:	(bad)  
   140055dbc:	(bad)  
   140055dbd:	(bad)  
   140055dbe:	(bad)  
   140055dbf:	(bad)  
   140055dc0:	(bad)  
   140055dc1:	(bad)  
   140055dc2:	(bad)  
   140055dc3:	(bad)  
   140055dc4:	cld    
   140055dc5:	sti    
   140055dc6:	cli    
   140055dc7:	(bad)  
   140055dc8:	(bad)  
   140055dc9:	(bad)  
   140055dca:	(bad)  
   140055dcb:	(bad)  
   140055dcc:	(bad)  
   140055dcd:	(bad)  
   140055dce:	(bad)  
   140055dcf:	(bad)  
   140055dd0:	(bad)  
   140055dd1:	(bad)  
   140055dd2:	(bad)  
   140055dd3:	(bad)  
   140055dd4:	(bad)  
   140055dd5:	(bad)  
   140055dd6:	(bad)  
   140055dd7:	push   rbx
   140055dd9:	out    dx,eax
   140055dda:	out    dx,al
   140055ddb:	call   FWORD PTR [rax+0x79ff5567]
   140055de1:	cmp    al,0x22
   140055de3:	(bad)  
   140055de4:	jns    0x140055e22
   140055de6:	and    bh,bh
   140055de8:	jns    0x140055e26
   140055dea:	and    bh,bh
   140055dec:	jns    0x140055e2a
   140055dee:	and    bh,bh
   140055df0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055df1:	jle    0x140055e5f
   140055df3:	push   rsp
   140055df5:	out    dx,eax
   140055df6:	in     al,dx
   140055df7:	(bad)  
   140055df8:	in     eax,dx
   140055df9:	out    0xe4,eax
   140055dfb:	(bad)  
   140055dfc:	in     eax,dx
   140055dfd:	out    0xe4,eax
   140055dff:	(bad)  
   140055e00:	(bad)  
   140055e01:	(bad)  
   140055e02:	(bad)  
   140055e03:	(bad)  
   140055e04:	cld    
   140055e05:	sti    
   140055e06:	cli    
   140055e07:	(bad)  
   140055e08:	(bad)  
   140055e09:	(bad)  
   140055e0a:	(bad)  
   140055e0b:	(bad)  
   140055e0c:	(bad)  
   140055e0d:	(bad)  
   140055e0e:	(bad)  
   140055e0f:	(bad)  
   140055e10:	(bad)  
   140055e11:	(bad)  
   140055e12:	(bad)  
   140055e13:	(bad)  
   140055e14:	(bad)  
   140055e15:	(bad)  
   140055e16:	(bad)  
   140055e17:	(bad)  
   140055e18:	(bad)  
   140055e19:	(bad)  
   140055e1a:	(bad)  
   140055e1b:	(bad)  
   140055e1c:	out    dx,al
   140055e1d:	out    0xe5,eax
   140055e1f:	jmp    rdi
   140055e21:	(bad)  
   140055e23:	push   rax
   140055e25:	jmp    0x140055e10
   140055e27:	inc    edx
   140055e29:	lods   al,BYTE PTR ds:[rsi]
   140055e2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055e2b:	(bad)  
   140055e2c:	jns    0x140055e6a
   140055e2e:	and    bh,bh
   140055e30:	jns    0x140055e6e
   140055e32:	and    bh,bh
   140055e34:	jns    0x140055e72
   140055e36:	and    bh,bh
   140055e38:	jns    0x140055e76
   140055e3a:	and    bh,bh
   140055e3c:	cwde   
   140055e3d:	addr32 push rbp
   140055e3f:	(bad)  
   140055e40:	(bad)  
   140055e41:	(bad)  
   140055e42:	(bad)  
   140055e43:	(bad)  
   140055e44:	std    
   140055e45:	cld    
   140055e46:	cli    
   140055e47:	(bad)  
   140055e48:	(bad)  
   140055e49:	(bad)  
   140055e4a:	(bad)  
   140055e4b:	(bad)  
   140055e4c:	(bad)  
   140055e4d:	(bad)  
   140055e4e:	(bad)  
   140055e4f:	(bad)  
   140055e50:	(bad)  
   140055e51:	(bad)  
   140055e52:	(bad)  
   140055e53:	(bad)  
   140055e54:	(bad)  
   140055e55:	(bad)  
   140055e56:	(bad)  
   140055e57:	(bad)  
   140055e58:	(bad)  
   140055e59:	(bad)  
   140055e5a:	(bad)  
   140055e5b:	(bad)  
   140055e5c:	(bad)  
   140055e5d:	(bad)  
   140055e5e:	(bad)  
   140055e5f:	(bad)  
   140055e60:	(bad)  
   140055e61:	(bad)  
   140055e62:	(bad)  
   140055e63:	(bad)  
   140055e64:	(bad)  
   140055e65:	(bad)  
   140055e66:	(bad)  
   140055e67:	jmp    rax
   140055e69:	xlat   BYTE PTR ds:[rbx]
   140055e6a:	(bad)  
   140055e6b:	(bad)  
   140055e6c:	jns    0x140055eaa
   140055e6e:	and    bh,bh
   140055e70:	mov    ebp,0x79ff96a1
   140055e75:	cmp    al,0x22
   140055e77:	jmp    FWORD PTR [rbp-0x100887a]
   140055e7d:	(bad)  
   140055e7e:	(bad)  
   140055e7f:	(bad)  
   140055e80:	(bad)  
   140055e81:	(bad)  
   140055e82:	(bad)  
   140055e83:	(bad)  
   140055e84:	(bad)  
   140055e85:	(bad)  
   140055e86:	(bad)  
   140055e87:	(bad)  
   140055e88:	(bad)  
   140055e89:	(bad)  
   140055e8a:	(bad)  
   140055e8b:	(bad)  
   140055e8c:	(bad)  
   140055e8d:	(bad)  
   140055e8e:	(bad)  
   140055e8f:	(bad)  
   140055e90:	(bad)  
   140055e91:	cld    
   140055e92:	cld    
   140055e93:	(bad)  
   140055e94:	(bad)  
   140055e95:	(bad)  
   140055e96:	(bad)  
   140055e97:	(bad)  
   140055e98:	(bad)  
   140055e99:	(bad)  
   140055e9a:	(bad)  
   140055e9b:	(bad)  
   140055e9c:	(bad)  
   140055e9d:	(bad)  
   140055e9e:	(bad)  
   140055e9f:	(bad)  
   140055ea0:	(bad)  
   140055ea1:	(bad)  
   140055ea2:	(bad)  
   140055ea3:	(bad)  
   140055ea4:	(bad)  
   140055ea5:	(bad)  
   140055ea6:	(bad)  
   140055ea7:	jmp    rsp
   140055ea9:	fcmovbe st,st(6)
   140055eab:	(bad)  
   140055eac:	jns    0x140055eea
   140055eae:	and    bh,bh
   140055eb0:	out    dx,eax
   140055eb1:	(bad)  
   140055eb2:	out    0xff,eax
   140055eb4:	(bad)  
   140055eb5:	mov    ah,0xac
   140055eb7:	(bad)  
   140055eb8:	jns    0x140055ef6
   140055eba:	and    bh,bh
   140055ebc:	(bad)  
   140055ebd:	(bad)  
   140055ebe:	(bad)  
   140055ebf:	(bad)  
   140055ec0:	(bad)  
   140055ec1:	(bad)  
   140055ec2:	(bad)  
   140055ec3:	(bad)  
   140055ec4:	stc    
   140055ec5:	hlt    
   140055ec6:	hlt    
   140055ec7:	(bad)  
   140055ec8:	(bad)  
   140055ec9:	(bad)  
   140055eca:	(bad)  
   140055ecb:	(bad)  
   140055ecc:	(bad)  
   140055ecd:	(bad)  
   140055ece:	(bad)  
   140055ecf:	push   QWORD PTR [rbp-0x23007a6e]
   140055ed5:	int3   
   140055ed6:	(bad)  
   140055ed7:	push   rdi
   140055ed9:	hlt    
   140055eda:	hlt    
   140055edb:	(bad)  
   140055edc:	(bad)  
   140055edd:	(bad)  
   140055ede:	std    
   140055edf:	(bad)  
   140055ee0:	sti    
   140055ee1:	clc    
   140055ee2:	idiv   edi
   140055ee4:	out    dx,eax
   140055ee5:	call   0xf2d05ecd
   140055eea:	test   al,0xff
   140055eec:	jns    0x140055f2a
   140055eee:	and    bh,bh
   140055ef0:	clc    
   140055ef1:	cmc    
   140055ef2:	hlt    
   140055ef3:	(bad)  
   140055ef4:	sti    
   140055ef5:	cli    
   140055ef6:	stc    
   140055ef7:	(bad)  
   140055ef8:	cli    
   140055ef9:	stc    
   140055efa:	clc    
   140055efb:	(bad)  
   140055efc:	(bad)  
   140055efd:	std    
   140055efe:	std    
   140055eff:	jmp    rbx
   140055f01:	(bad)  
   140055f02:	sar    bh,1
   140055f04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055f05:	jnp    0x140055f72
   140055f07:	hlt    
   140055f08:	(bad)  
   140055f09:	(bad)  
   140055f0a:	(bad)  
   140055f0b:	(bad)  
   140055f0c:	(bad)  
   140055f0d:	(bad)  
   140055f0e:	(bad)  
   140055f0f:	(bad)  
   140055f10:	jns    0x140055f4e
   140055f12:	and    bh,bh
   140055f14:	jns    0x140055f52
   140055f16:	and    bh,bh
   140055f18:	movabs eax,ds:0xbaffa5b0c6ff6e7d
   140055f21:	lahf   
   140055f22:	xchg   edx,eax
   140055f23:	push   QWORD PTR [rbp+rdx*4+0x3c79ff87]
   140055f2a:	and    bh,bh
   140055f2c:	jns    0x140055f6a
   140055f2e:	and    bh,bh
   140055f30:	loopne 0x140055f00
   140055f32:	(bad)  
   140055f33:	jmp    rcx
   140055f35:	ror    esp,cl
   140055f37:	(bad)  
   140055f38:	jmp    0x140055f1b
   140055f3a:	(bad)  
   140055f3c:	(bad)  
   140055f3e:	enter  0x92ff,0x62
   140055f42:	rex.WRX out dx,al
   140055f44:	jns    0x140055f82
   140055f46:	and    bh,bh
   140055f48:	(bad)  
   140055f49:	(bad)  
   140055f4a:	(bad)  
   140055f4b:	(bad)  
   140055f4c:	(bad)  
   140055f4d:	(bad)  
   140055f4e:	(bad)  
   140055f4f:	(bad)  
   140055f50:	jns    0x140055f8e
   140055f52:	and    bh,bh
   140055f54:	jns    0x140055f92
   140055f56:	and    bh,bh
   140055f58:	jns    0x140055f96
   140055f5a:	and    bh,bh
   140055f5c:	jns    0x140055f9a
   140055f5e:	and    bh,bh
   140055f60:	jns    0x140055f9e
   140055f62:	and    bh,bh
   140055f64:	jns    0x140055fa2
   140055f66:	and    bh,bh
   140055f68:	jns    0x140055fa6
   140055f6a:	and    bh,bh
   140055f6c:	jns    0x140055faa
   140055f6e:	and    bh,bh
   140055f70:	jns    0x140055fae
   140055f72:	and    bh,bh
   140055f74:	jns    0x140055fb2
   140055f76:	and    bh,bh
   140055f78:	jns    0x140055fb6
   140055f7a:	and    bh,bh
   140055f7c:	jns    0x140055fba
   140055f7e:	and    bh,bh
   140055f80:	jns    0x140055fbe
   140055f82:	and    bh,bh
   140055f84:	jns    0x140055fc2
   140055f86:	and    bh,bh
   140055f88:	(bad)  
   140055f89:	(bad)  
   140055f8a:	(bad)  
   140055f8b:	(bad)  
   140055f8c:	(bad)  
   140055f8d:	(bad)  
   140055f8e:	(bad)  
   140055f8f:	(bad)  
   140055f90:	(bad)  
   140055f91:	(bad)  
   140055f92:	(bad)  
   140055f93:	(bad)  
   140055f94:	(bad)  
   140055f95:	(bad)  
   140055f96:	(bad)  
   140055f97:	(bad)  
   140055f98:	(bad)  
   140055f99:	(bad)  
   140055f9a:	(bad)  
   140055f9b:	(bad)  
   140055f9c:	(bad)  
   140055f9d:	(bad)  
   140055f9e:	(bad)  
   140055f9f:	(bad)  
   140055fa0:	(bad)  
   140055fa1:	(bad)  
   140055fa2:	(bad)  
   140055fa3:	(bad)  
   140055fa4:	(bad)  
   140055fa5:	(bad)  
   140055fa6:	(bad)  
   140055fa7:	(bad)  
   140055fa8:	(bad)  
   140055fa9:	(bad)  
   140055faa:	(bad)  
   140055fab:	(bad)  
   140055fac:	(bad)  
   140055fad:	(bad)  
   140055fae:	(bad)  
   140055faf:	(bad)  
   140055fb0:	(bad)  
   140055fb1:	(bad)  
   140055fb2:	(bad)  
   140055fb3:	(bad)  
   140055fb4:	(bad)  
   140055fb5:	(bad)  
   140055fb6:	(bad)  
   140055fb7:	(bad)  
   140055fb8:	(bad)  
   140055fb9:	(bad)  
   140055fba:	(bad)  
   140055fbb:	(bad)  
   140055fbc:	(bad)  
   140055fbd:	(bad)  
   140055fbe:	(bad)  
   140055fbf:	(bad)  
   140055fc0:	(bad)  
   140055fc1:	(bad)  
   140055fc2:	(bad)  
   140055fc3:	(bad)  
   140055fc4:	(bad)  
   140055fc5:	(bad)  
   140055fc6:	(bad)  
   140055fc7:	(bad)  
   140055fc8:	(bad)  
   140055fc9:	(bad)  
   140055fca:	(bad)  
   140055fcb:	inc    DWORD PTR [rax]
   140055fcd:	add    BYTE PTR [rax],al
   140055fcf:	add    BYTE PTR [rax],al
   140055fd1:	add    BYTE PTR [rax],dh
   140055fd3:	outs   dx,DWORD PTR ds:[rsi]
	...
   140056008:	add    BYTE PTR [rax],al
   14005600a:	add    al,0x0
   14005600c:	rol    BYTE PTR [rax],0xc8
   14005600f:	add    BYTE PTR [rax],0x0
   140056012:	add    BYTE PTR [rax],al
   140056014:	add    al,0x0
   140056016:	and    al,BYTE PTR [rax]
   140056018:	(bad)  
   140056019:	add    dh,bl
   14005601b:	add    BYTE PTR [rax+rax*1],dh
   14005601e:	add    BYTE PTR [rax],al
   140056020:	add    BYTE PTR [rax],al
   140056022:	add    BYTE PTR [r10+0x0],spl
   140056026:	outs   dx,DWORD PTR ds:[rsi]
   140056027:	add    BYTE PTR [rbp+0x0],dh
   14005602a:	je     0x14005602c
   14005602c:	and    BYTE PTR [rax],al
   14005602e:	push   rbx
   14005602f:	add    BYTE PTR [rax+0x0],dh
   140056032:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140056037:	add    BYTE PTR [rax],ah
   140056039:	add    BYTE PTR [rbp+0x0],dl
   14005603c:	je     0x14005603e
   14005603e:	imul   eax,DWORD PTR [rax],0x69006c
   140056044:	je     0x140056046
   140056046:	jns    0x140056048
   140056048:	add    BYTE PTR [rax],al
   14005604a:	or     BYTE PTR [rax],al
   14005604c:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140056050:	and    BYTE PTR [rax],al
   140056052:	push   rbx
   140056053:	add    BYTE PTR [rax+0x0],ch
   140056056:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14005605b:	add    BYTE PTR [rax],ah
   14005605d:	add    BYTE PTR [rax+rax*1+0x6c],al
   140056061:	add    BYTE PTR [rdi+0x0],ah
   140056064:	add    BYTE PTR [rax],al
   140056066:	add    BYTE PTR [rax],al
   140056068:	add    eax,DWORD PTR [rax]
   14005606a:	add    BYTE PTR [rax+0x0],dl
   14005606d:	add    BYTE PTR [rax],al
   14005606f:	add    BYTE PTR [rax],cl
   140056071:	add    BYTE PTR [rax],cl
   140056073:	add    BYTE PTR [rax+rax*1],dl
   140056076:	adc    al,0x0
   140056078:	(bad)  
   140056079:	(bad)  
   14005607a:	(bad)  
   14005607b:	inc    DWORD PTR [rdx-0x7f000100]
   140056081:	add    BYTE PTR [rax],al
   140056083:	add    BYTE PTR [rax],al
   140056085:	add    BYTE PTR [rdx],al
   140056087:	push   rax
   140056088:	add    BYTE PTR [rax],al
   14005608a:	add    BYTE PTR [rax],al
   14005608c:	and    DWORD PTR [rax],eax
   14005608e:	or     BYTE PTR [rax],al
   140056090:	scas   eax,DWORD PTR es:[rdi]
   140056091:	add    BYTE PTR [rax],cl
   140056093:	add    bh,bh
   140056095:	(bad)  
   140056096:	(bad)  
   140056097:	inc    DWORD PTR [rdx+0x70005300]
   14005609d:	add    BYTE PTR [rbp+0x0],ah
   1400560a0:	ins    BYTE PTR es:[rdi],dx
   1400560a1:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400560a5:	add    BYTE PTR [rbp+0x0],dl
   1400560a8:	je     0x1400560aa
   1400560aa:	imul   eax,DWORD PTR [rax],0x69006c
   1400560b0:	je     0x1400560b2
   1400560b2:	jns    0x1400560b4
   1400560b4:	and    BYTE PTR [rax],al
   1400560b6:	push   rsi
   1400560b7:	add    BYTE PTR [rbp+0x0],ah
   1400560ba:	jb     0x1400560bc
   1400560bc:	jae    0x1400560be
   1400560be:	imul   eax,DWORD PTR [rax],0x6e006f
   1400560c4:	and    BYTE PTR [rax],al
   1400560c6:	xor    DWORD PTR [rax],eax
   1400560c8:	add    BYTE PTR ss:[rsi],ch
   1400560cb:	add    BYTE PTR [rax],dh
   1400560cd:	add    BYTE PTR [rax],ah
   1400560cf:	add    BYTE PTR [rax],ch
   1400560d1:	add    BYTE PTR [rdi+0x0],dl
   1400560d4:	imul   eax,DWORD PTR [rax],0x33006e
   1400560da:	xor    al,BYTE PTR [rax]
   1400560dc:	sub    DWORD PTR [rax],eax
	...
   1400560e6:	add    dl,BYTE PTR [rax+0x0]
   1400560e9:	add    BYTE PTR [rax],al
   1400560eb:	add    BYTE PTR [rcx],ah
   1400560ed:	add    BYTE PTR [rbx],dl
   1400560ef:	add    BYTE PTR [rdi-0xfff800],ch
   1400560f5:	(bad)  
   1400560f6:	(bad)  
   1400560f7:	inc    DWORD PTR [rdx+0x6f004300]
   1400560fd:	add    BYTE PTR [rax+0x0],dh
   140056100:	jns    0x140056102
   140056102:	jb     0x140056104
   140056104:	imul   eax,DWORD PTR [rax],0x680067
   14005610a:	je     0x14005610c
   14005610c:	and    BYTE PTR [rax],al
   14005610e:	test   eax,0x31002000
   140056113:	add    BYTE PTR [rcx],bh
   140056115:	add    BYTE PTR [rcx],bh
   140056117:	add    BYTE PTR [rbx],dh
   140056119:	add    BYTE PTR [rip+0x30003200],ch        # 0x17005931f
   14005611f:	add    BYTE PTR [rcx],dh
   140056121:	add    BYTE PTR [rcx],dh
   140056123:	add    BYTE PTR [rsi],ch
   140056125:	add    BYTE PTR [rax],ah
   140056127:	add    BYTE PTR [rcx+0x0],al
   14005612a:	ins    BYTE PTR es:[rdi],dx
   14005612b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14005612f:	add    BYTE PTR [rdx+0x0],dl
   140056132:	imul   eax,DWORD PTR [rax],0x680067
   140056138:	je     0x14005613a
   14005613a:	jae    0x14005613c
   14005613c:	and    BYTE PTR [rax],al
   14005613e:	push   rdx
   14005613f:	add    BYTE PTR [rbp+0x0],ah
   140056142:	jae    0x140056144
   140056144:	add    BYTE PTR gs:[rdx+0x0],dh
   140056148:	jbe    0x14005614a
   14005614a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14005614f:	add    BYTE PTR [rax],al
   140056151:	add    BYTE PTR [rax],al
   140056153:	add    BYTE PTR [rcx],al
   140056155:	add    BYTE PTR [rbx],al
   140056157:	push   rax
   140056158:	add    BYTE PTR [rax],al
   14005615a:	add    BYTE PTR [rax],al
   14005615c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005615d:	add    BYTE PTR [rsi],bl
   14005615f:	add    BYTE PTR [rcx],dh
   140056161:	add    BYTE PTR [rsi],cl
   140056163:	add    BYTE PTR [rcx],al
   140056165:	add    bh,bh
   140056167:	inc    DWORD PTR [rax+0x4b004f00]
   14005616d:	add    BYTE PTR [rax],al
   14005616f:	add    BYTE PTR [rax],al
   140056171:	add    BYTE PTR [rax+0x41],dl
   140056174:	add    al,al
   140056177:	rex.W add BYTE PTR [rax],al
   14005617a:	add    BYTE PTR [rax],al
   14005617c:	adc    BYTE PTR [rax],al
   14005617e:	add    BYTE PTR [rax],al
   140056180:	add    BYTE PTR [rax],al
   140056182:	sbb    BYTE PTR [rcx],al
   140056184:	mov    ecx,0x0
   140056189:	add    BYTE PTR [rbx+0x0],al
   14005618c:	outs   dx,DWORD PTR ds:[rsi]
   14005618d:	add    BYTE PTR [rsi+0x0],ch
   140056190:	jbe    0x140056192
   140056192:	add    BYTE PTR gs:[rdx+0x0],dh
   140056196:	je     0x140056198
   140056198:	add    BYTE PTR [rax],al
   14005619a:	or     BYTE PTR [rax],al
   14005619c:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400561a0:	and    BYTE PTR [rax],al
   1400561a2:	push   rbx
   1400561a3:	add    BYTE PTR [rax+0x0],ch
   1400561a6:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400561ab:	add    BYTE PTR [rax],ah
   1400561ad:	add    BYTE PTR [rax+rax*1+0x6c],al
   1400561b1:	add    BYTE PTR [rdi+0x0],ah
   1400561b4:	add    BYTE PTR [rax],al
   1400561b6:	add    BYTE PTR [rax],al
   1400561b8:	add    al,BYTE PTR [rax]
   1400561ba:	and    DWORD PTR [rax+0x0],edx
   1400561bd:	add    BYTE PTR [rax],al
   1400561bf:	add    BYTE PTR [rax],cl
   1400561c1:	add    BYTE PTR [rbx],dl
   1400561c3:	add    BYTE PTR [rax],cl
   1400561c5:	add    DWORD PTR [rdx+0x0],ebx
   1400561c8:	out    dx,eax
   1400561c9:	add    edi,edi
   1400561cb:	inc    DWORD PTR [rbp+0x0]
   1400561d1:	add    BYTE PTR [rax],al
   1400561d3:	add    BYTE PTR [rax+0x508100],al
   1400561d9:	add    BYTE PTR [rax],al
   1400561db:	add    BYTE PTR [rax],cl
   1400561dd:	add    BYTE PTR [rax],dh
   1400561df:	add    bl,dl
   1400561e1:	add    BYTE PTR [rsi],cl
   1400561e3:	add    cl,dh
   1400561e5:	add    edi,edi
   1400561e7:	inc    DWORD PTR [rcx+0x0]
   1400561ed:	add    BYTE PTR [rax],al
   1400561ef:	add    BYTE PTR [rax],al
   1400561f1:	add    BYTE PTR [rcx],al
   1400561f3:	push   rax
   1400561f4:	add    BYTE PTR [rax],al
   1400561f6:	add    BYTE PTR [rax],al
   1400561f8:	fild   WORD PTR [rax]
   1400561fa:	xor    BYTE PTR [rax],al
   1400561fc:	xor    DWORD PTR [rax],eax
   1400561fe:	(bad)  
   1400561ff:	add    dl,dh
   140056201:	add    edi,edi
   140056203:	inc    DWORD PTR [rax+0x42002600]
   140056209:	add    BYTE PTR [rdx+0x0],dh
   14005620c:	outs   dx,DWORD PTR ds:[rsi]
   14005620d:	add    BYTE PTR [rdi+0x0],dh
   140056210:	jae    0x140056212
   140056212:	add    BYTE PTR gs:[rax],al
   140056215:	add    BYTE PTR [rax],al
   140056217:	add    BYTE PTR [rax+0x508100],al
   14005621d:	add    BYTE PTR [rax],al
   14005621f:	add    BYTE PTR [rax],cl
   140056221:	add    BYTE PTR [rbp+0x0],cl
   140056224:	rol    DWORD PTR [rax],cl
   140056226:	(bad)  
   140056227:	add    bl,dh
   140056229:	add    edi,edi
   14005622b:	inc    DWORD PTR [rcx+0x0]
   140056231:	add    BYTE PTR [rax],al
   140056233:	add    BYTE PTR [rax],al
   140056235:	add    BYTE PTR [rcx],al
   140056237:	push   rax
   140056238:	add    BYTE PTR [rax],al
   14005623a:	add    BYTE PTR [rax],al
   14005623c:	fild   WORD PTR [rax]
   14005623e:	rex.WRB add BYTE PTR [r9],r14b
   140056241:	add    BYTE PTR [rsi],cl
   140056243:	add    ah,dh
   140056245:	add    edi,edi
   140056247:	inc    DWORD PTR [rax+0x26004200]
   14005624d:	add    BYTE PTR [rdx+0x0],dh
   140056250:	outs   dx,DWORD PTR ds:[rsi]
   140056251:	add    BYTE PTR [rdi+0x0],dh
   140056254:	jae    0x140056256
   140056256:	add    BYTE PTR gs:[rax],al
   140056259:	add    BYTE PTR [rax],al
   14005625b:	add    BYTE PTR [rax],al
   14005625d:	add    BYTE PTR [rdx],al
   14005625f:	push   rax
   140056260:	add    BYTE PTR [rax],al
   140056262:	add    BYTE PTR [rax],al
   140056264:	or     BYTE PTR [rax],al
   140056266:	add    BYTE PTR [rax+r8*1+0xa],spl
   14005626b:	add    al,bh
   14005626d:	add    edi,edi
   14005626f:	inc    DWORD PTR [rdx+0x44002600]
   140056275:	add    BYTE PTR [rbp+0x0],ah
   140056278:	jae    0x14005627a
   14005627a:	je     0x14005627c
   14005627c:	imul   eax,DWORD PTR [rax],0x61006e
   140056282:	je     0x140056284
   140056284:	imul   eax,DWORD PTR [rax],0x6e006f
   14005628a:	and    BYTE PTR [rax],al
   14005628c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140056290:	ins    BYTE PTR es:[rdi],dx
   140056291:	add    BYTE PTR [rbp+0x0],ah
   140056294:	and    BYTE PTR [rax],al
   140056296:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14005629a:	ins    DWORD PTR es:[rdi],dx
   14005629b:	add    BYTE PTR [rbp+0x0],ah
   14005629e:	cmp    al,BYTE PTR [rax]
   1400562a0:	add    BYTE PTR [rax],al
   1400562a2:	add    BYTE PTR [rax],al
   1400562a4:	add    BYTE PTR [rax],al
   1400562a6:	add    dl,BYTE PTR [rax+0x0]
   1400562a9:	add    BYTE PTR [rax],al
   1400562ab:	add    BYTE PTR [rax],cl
   1400562ad:	add    BYTE PTR [rip+0xa006400],ah        # 0x14a05c6b3
   1400562b3:	add    cl,bh
   1400562b5:	add    edi,edi
   1400562b7:	inc    DWORD PTR [rdx+0x6f005300]
   1400562bd:	add    BYTE PTR [rbp+0x0],dh
   1400562c0:	jb     0x1400562c2
   1400562c2:	movsxd eax,DWORD PTR [rax]
   1400562c4:	add    BYTE PTR gs:[rax],ah
   1400562c7:	add    BYTE PTR [rsi],ah
   1400562c9:	add    BYTE PTR [rsi+0x0],al
   1400562cc:	imul   eax,DWORD PTR [rax],0x65006c
   1400562d2:	and    BYTE PTR [rax],al
   1400562d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400562d8:	ins    DWORD PTR es:[rdi],dx
   1400562d9:	add    BYTE PTR [rbp+0x0],ah
   1400562dc:	cmp    al,BYTE PTR [rax]
	...
   1400562e6:	add    dl,BYTE PTR [rax+0x0]
   1400562e9:	add    BYTE PTR [rax],al
   1400562eb:	add    BYTE PTR [rax],cl
   1400562ed:	add    BYTE PTR [rax],cl
   1400562ef:	add    BYTE PTR [rax+rax*1+0xa],ah
   1400562f3:	add    dl,bh
   1400562f5:	add    edi,edi
   1400562f7:	inc    DWORD PTR [rdx+0x6f004300]
   1400562fd:	add    BYTE PTR [rsi+0x0],ch
   140056300:	jbe    0x140056302
   140056302:	add    BYTE PTR gs:[rdx+0x0],dh
   140056306:	jae    0x140056308
   140056308:	imul   eax,DWORD PTR [rax],0x6e006f
   14005630e:	and    BYTE PTR [rax],al
   140056310:	add    BYTE PTR es:[rax+rax*1+0x79],dl
   140056315:	add    BYTE PTR [rax+0x0],dh
   140056318:	add    BYTE PTR gs:[rdx],bh
   14005631b:	add    BYTE PTR [rax],al
   14005631d:	add    BYTE PTR [rax],al
   14005631f:	add    BYTE PTR [rdi],al
   140056321:	add    BYTE PTR [rax],al
   140056323:	push   rax
   140056324:	add    BYTE PTR [rax],al
   140056326:	add    BYTE PTR [rax],al
   140056328:	or     BYTE PTR [rax],al
   14005632a:	imul   eax,DWORD PTR [rax],0x8
   14005632d:	add    DWORD PTR [rax],esi
   14005632f:	add    BYTE PTR [rdi],dl
   140056331:	add    al,0xff
   140056333:	inc    DWORD PTR [rax+0x72005000]
   140056339:	add    BYTE PTR [rdi+0x0],ch
   14005633c:	add    BYTE PTR [edx+0x0],dh
   140056340:	add    BYTE PTR gs:[rbx+0x0],dh
   140056344:	jae    0x140056346
	...
   14005634e:	add    dl,BYTE PTR [rax+0x0]
   140056351:	add    BYTE PTR [rax],al
   140056353:	add    BYTE PTR [rdx],dl
   140056355:	add    BYTE PTR [rax+0x0],bh
   140056358:	add    BYTE PTR fs:[rdx],cl
   14005635b:	add    dh,dh
   14005635d:	add    edi,edi
   14005635f:	inc    DWORD PTR [rdx+0x74005300]
   140056365:	add    BYTE PTR [rcx+0x0],ah
   140056368:	add    BYTE PTR [ebp+0x0],ah
   14005636c:	cmp    al,BYTE PTR [rax]
	...
   140056376:	add    BYTE PTR [rax+0x0],dl
   140056379:	add    BYTE PTR [rax],al
   14005637b:	add    BYTE PTR [rdx],dl
   14005637d:	add    BYTE PTR [rbx+0xe007600],al
   140056383:	add    al,dh
   140056385:	add    ebp,DWORD PTR [rbp+0x0]
   140056388:	jae    0x14005638a
   14005638a:	movsxd eax,DWORD PTR [rax]
   14005638c:	je     0x14005638e
   14005638e:	ins    BYTE PTR es:[rdi],dx
   14005638f:	add    BYTE PTR [rbx+0x0],dh
   140056392:	pop    rdi
   140056393:	add    BYTE PTR [rax+0x0],dh
   140056396:	jb     0x140056398
   140056398:	outs   dx,DWORD PTR ds:[rsi]
   140056399:	add    BYTE PTR [rdi+0x0],ah
   14005639c:	jb     0x14005639e
   14005639e:	add    BYTE PTR gs:[rbx+0x0],dh
   1400563a2:	jae    0x1400563a4
   1400563a4:	xor    eax,DWORD PTR [rax]
   1400563a6:	xor    al,BYTE PTR [rax]
   1400563a8:	add    BYTE PTR [rax],al
   1400563aa:	rex.RXB add BYTE PTR [r13+0x0],r12b
   1400563ae:	outs   dx,BYTE PTR ds:[rsi]
   1400563af:	add    BYTE PTR [rbp+0x0],ah
   1400563b2:	jb     0x1400563b4
   1400563b4:	imul   eax,DWORD PTR [rax],0x310063
	...
   1400563c2:	add    dl,BYTE PTR [rax+0x0]
   1400563c5:	add    BYTE PTR [rax],al
   1400563c7:	add    BYTE PTR [rax+0x64007800],dl
   1400563cd:	add    BYTE PTR [rdx],cl
   1400563cf:	add    bh,dh
   1400563d1:	add    edi,edi
   1400563d3:	inc    DWORD PTR [rdx+0x6f005400]
   1400563d9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400563dd:	add    BYTE PTR [rax+rax*1+0x3a],ch
	...
   1400563e9:	add    BYTE PTR [rax],al
   1400563eb:	push   rax
   1400563ec:	add    BYTE PTR [rax],al
   1400563ee:	add    BYTE PTR [rax],al
   1400563f0:	nop
   1400563f1:	add    BYTE PTR [rbx+0xe007600],al
   1400563f7:	add    ch,dh
   1400563f9:	add    ebp,DWORD PTR [rbp+0x0]
   1400563fc:	jae    0x1400563fe
   1400563fe:	movsxd eax,DWORD PTR [rax]
   140056400:	je     0x140056402
   140056402:	ins    BYTE PTR es:[rdi],dx
   140056403:	add    BYTE PTR [rbx+0x0],dh
   140056406:	pop    rdi
   140056407:	add    BYTE PTR [rax+0x0],dh
   14005640a:	jb     0x14005640c
   14005640c:	outs   dx,DWORD PTR ds:[rsi]
   14005640d:	add    BYTE PTR [rdi+0x0],ah
   140056410:	jb     0x140056412
   140056412:	add    BYTE PTR gs:[rbx+0x0],dh
   140056416:	jae    0x140056418
   140056418:	xor    eax,DWORD PTR [rax]
   14005641a:	xor    al,BYTE PTR [rax]
   14005641c:	add    BYTE PTR [rax],al
   14005641e:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140056422:	outs   dx,BYTE PTR ds:[rsi]
   140056423:	add    BYTE PTR [rbp+0x0],ah
   140056426:	jb     0x140056428
   140056428:	imul   eax,DWORD PTR [rax],0x310063
   14005642e:	add    BYTE PTR [rax],al
   140056430:	add    BYTE PTR [rax],al
   140056432:	add    BYTE PTR [rax],al
   140056434:	add    DWORD PTR [rax],eax
   140056436:	add    DWORD PTR [rax+0x0],edx
   140056439:	add    BYTE PTR [rax],al
   14005643b:	add    BYTE PTR [rbx+0x0],dh
   14005643e:	movabs ds:0xff0001000e003100,eax
   140056447:	inc    DWORD PTR [rax+0x43002600]
   14005644d:	add    BYTE PTR [rdi+0x0],ch
   140056450:	outs   dx,BYTE PTR ds:[rsi]
   140056451:	add    BYTE PTR [rsi+0x0],dh
   140056454:	add    BYTE PTR gs:[rdx+0x0],dh
   140056458:	je     0x14005645a
	...
   140056462:	add    DWORD PTR [rax+0x0],edx
   140056465:	add    BYTE PTR [rax],al
   140056467:	add    BYTE PTR [rcx+0x3100a300],ch
   14005646d:	add    BYTE PTR [rsi],cl
   14005646f:	add    BYTE PTR [rdx],al
   140056471:	add    bh,bh
   140056473:	inc    DWORD PTR [rax+0x61004300]
   140056479:	add    BYTE PTR [rsi+0x0],ch
   14005647c:	movsxd eax,DWORD PTR [rax]
   14005647e:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140056483:	add    BYTE PTR [rax],al
   140056485:	add    BYTE PTR [rax],al
   140056487:	add    BYTE PTR [rax],al
   140056489:	add    BYTE PTR [rcx],al
   14005648b:	push   rax
   14005648c:	add    BYTE PTR [rax],al
   14005648e:	add    BYTE PTR [rax],al
   140056490:	fild   WORD PTR [rax]
   140056492:	movabs ds:0xffe146000e003100,eax
   14005649b:	inc    DWORD PTR [rax+0x48002600]
   1400564a1:	add    BYTE PTR [rbp+0x0],ah
   1400564a4:	ins    BYTE PTR es:[rdi],dx
   1400564a5:	add    BYTE PTR [rax+0x0],dh
   1400564a8:	add    BYTE PTR [rax],al
   1400564aa:	add    BYTE PTR [rax],al
   1400564ac:	add    al,al
   1400564af:	rex.W add BYTE PTR [rax],al
   1400564b2:	add    BYTE PTR [rax],al
   1400564b4:	adc    al,BYTE PTR [rax]
   1400564b6:	add    BYTE PTR [rax],al
   1400564b8:	add    BYTE PTR [rax],al
   1400564ba:	sbb    BYTE PTR [rcx],al
   1400564bc:	mov    ecx,0x0
   1400564c1:	add    BYTE PTR [rbp+0x0],cl
   1400564c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400564c8:	add    BYTE PTR [ebp+0x0],ah
   1400564cc:	add    BYTE PTR [rax],al
   1400564ce:	or     BYTE PTR [rax],al
   1400564d0:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400564d4:	and    BYTE PTR [rax],al
   1400564d6:	push   rbx
   1400564d7:	add    BYTE PTR [rax+0x0],ch
   1400564da:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400564df:	add    BYTE PTR [rax],ah
   1400564e1:	add    BYTE PTR [rax+rax*1+0x6c],al
   1400564e5:	add    BYTE PTR [rdi+0x0],ah
   1400564e8:	add    BYTE PTR [rax],al
   1400564ea:	add    BYTE PTR [rax],al
   1400564ec:	add    BYTE PTR [rax],al
   1400564ee:	add    dl,BYTE PTR [rax+0x0]
   1400564f1:	add    BYTE PTR [rax],al
   1400564f3:	add    BYTE PTR [rax],cl
   1400564f5:	add    BYTE PTR [rax],cl
   1400564f7:	add    BYTE PTR [rbp+0x0],al
   1400564fa:	or     al,BYTE PTR [rax]
   1400564fc:	cli    
   1400564fd:	add    edi,edi
   1400564ff:	inc    DWORD PTR [rdx+0x26004d00]
   140056505:	add    BYTE PTR [rbp+0x0],ah
   140056508:	jb     0x14005650a
   14005650a:	add    BYTE PTR [ebp+0x0],ah
   14005650e:	and    BYTE PTR [rax],al
   140056510:	push   rsp
   140056511:	add    BYTE PTR [rcx+0x0],bh
   140056514:	jo     0x140056516
   140056516:	add    BYTE PTR gs:[rdx],bh
   140056519:	add    BYTE PTR [rax],al
   14005651b:	add    BYTE PTR [rax],al
   14005651d:	add    BYTE PTR [rax],al
   14005651f:	add    BYTE PTR [rdx],al
   140056521:	add    BYTE PTR [rcx],ah
   140056523:	push   rax
   140056524:	add    BYTE PTR [rax],al
   140056526:	add    BYTE PTR [rax],al
   140056528:	or     BYTE PTR [rax],al
   14005652a:	adc    eax,DWORD PTR [rax]
   14005652c:	or     BYTE PTR [rcx],al
   14005652e:	pop    rdx
   14005652f:	add    bh,ch
   140056531:	add    edi,edi
   140056533:	inc    DWORD PTR [rbp+0x0]
   140056539:	add    BYTE PTR [rax],al
   14005653b:	add    BYTE PTR [rax],al
   14005653d:	add    BYTE PTR [rdx],al
   14005653f:	push   rax
   140056540:	add    BYTE PTR [rax],al
   140056542:	add    BYTE PTR [rax],al
   140056544:	or     BYTE PTR [rax],al
   140056546:	and    eax,0xa006400
   14005654b:	add    cl,bh
   14005654d:	add    edi,edi
   14005654f:	inc    DWORD PTR [rdx+0x6f005300]
   140056555:	add    BYTE PTR [rbp+0x0],dh
   140056558:	jb     0x14005655a
   14005655a:	movsxd eax,DWORD PTR [rax]
   14005655c:	add    BYTE PTR gs:[rax],ah
   14005655f:	add    BYTE PTR [rsi],ah
   140056561:	add    BYTE PTR [rsi+0x0],al
   140056564:	imul   eax,DWORD PTR [rax],0x65006c
   14005656a:	and    BYTE PTR [rax],al
   14005656c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140056570:	ins    DWORD PTR es:[rdi],dx
   140056571:	add    BYTE PTR [rbp+0x0],ah
   140056574:	cmp    al,BYTE PTR [rax]
   140056576:	add    BYTE PTR [rax],al
   140056578:	add    BYTE PTR [rax],al
   14005657a:	add    BYTE PTR [rax],al
   14005657c:	add    BYTE PTR [rax],0x81
   14005657f:	push   rax
   140056580:	add    BYTE PTR [rax],al
   140056582:	add    BYTE PTR [rax],al
   140056584:	or     BYTE PTR [rax],al
   140056586:	xor    BYTE PTR [rax],al
   140056588:	rol    DWORD PTR [rax],cl
   14005658a:	(bad)  
   14005658b:	add    cl,dh
   14005658d:	add    edi,edi
   14005658f:	inc    DWORD PTR [rcx+0x0]
   140056595:	add    BYTE PTR [rax],al
   140056597:	add    BYTE PTR [rax],al
   140056599:	add    BYTE PTR [rcx],al
   14005659b:	push   rax
   14005659c:	add    BYTE PTR [rax],al
   14005659e:	add    BYTE PTR [rax],al
   1400565a0:	fild   WORD PTR [rax]
   1400565a2:	xor    BYTE PTR [rax],al
   1400565a4:	xor    DWORD PTR [rax],eax
   1400565a6:	(bad)  
   1400565a7:	add    dl,dh
   1400565a9:	add    edi,edi
   1400565ab:	inc    DWORD PTR [rax+0x42002600]
   1400565b1:	add    BYTE PTR [rdx+0x0],dh
   1400565b4:	outs   dx,DWORD PTR ds:[rsi]
   1400565b5:	add    BYTE PTR [rdi+0x0],dh
   1400565b8:	jae    0x1400565ba
   1400565ba:	add    BYTE PTR gs:[rax],al
   1400565bd:	add    BYTE PTR [rax],al
   1400565bf:	add    BYTE PTR [rax],al
   1400565c1:	add    BYTE PTR [rdx],al
   1400565c3:	push   rax
   1400565c4:	add    BYTE PTR [rax],al
   1400565c6:	add    BYTE PTR [rax],al
   1400565c8:	or     BYTE PTR [rax],al
   1400565ca:	add    BYTE PTR [rax+r8*1+0xa],spl
   1400565cf:	add    al,bh
   1400565d1:	add    edi,edi
   1400565d3:	inc    DWORD PTR [rdx+0x54002600]
   1400565d9:	add    BYTE PTR [rcx+0x0],ah
   1400565dc:	jb     0x1400565de
   1400565de:	add    BYTE PTR [ebp+0x0],ah
   1400565e2:	je     0x1400565e4
   1400565e4:	and    BYTE PTR [rax],al
   1400565e6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400565ea:	ins    BYTE PTR es:[rdi],dx
   1400565eb:	add    BYTE PTR [rbp+0x0],ah
   1400565ee:	and    BYTE PTR [rax],al
   1400565f0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400565f4:	ins    DWORD PTR es:[rdi],dx
   1400565f5:	add    BYTE PTR [rbp+0x0],ah
   1400565f8:	cmp    al,BYTE PTR [rax]
   1400565fa:	add    BYTE PTR [rax],al
   1400565fc:	add    BYTE PTR [rax],al
   1400565fe:	add    BYTE PTR [rax],al
   140056600:	add    BYTE PTR [rax],0x81
   140056603:	push   rax
   140056604:	add    BYTE PTR [rax],al
   140056606:	add    BYTE PTR [rax],al
   140056608:	or     BYTE PTR [rax],al
   14005660a:	rex.WRB add r11b,r10b
   14005660d:	add    BYTE PTR [rsi],cl
   14005660f:	add    bl,dh
   140056611:	add    edi,edi
   140056613:	inc    DWORD PTR [rcx+0x0]
   140056619:	add    BYTE PTR [rax],al
   14005661b:	add    BYTE PTR [rax],al
   14005661d:	add    BYTE PTR [rcx],al
   14005661f:	push   rax
   140056620:	add    BYTE PTR [rax],al
   140056622:	add    BYTE PTR [rax],al
   140056624:	fild   WORD PTR [rax]
   140056626:	rex.WRB add BYTE PTR [r9],r14b
   140056629:	add    BYTE PTR [rsi],cl
   14005662b:	add    ah,dh
   14005662d:	add    edi,edi
   14005662f:	inc    DWORD PTR [rax+0x26004200]
   140056635:	add    BYTE PTR [rdx+0x0],dh
   140056638:	outs   dx,DWORD PTR ds:[rsi]
   140056639:	add    BYTE PTR [rdi+0x0],dh
   14005663c:	jae    0x14005663e
   14005663e:	add    BYTE PTR gs:[rax],al
   140056641:	add    BYTE PTR [rax],al
   140056643:	add    BYTE PTR [rcx],cl
   140056645:	add    BYTE PTR [rcx],al
   140056647:	push   rax
   140056648:	add    BYTE PTR [rax],al
   14005664a:	add    BYTE PTR [rax],al
   14005664c:	or     BYTE PTR [rax],al
   14005664e:	pop    rdi
   14005664f:	add    BYTE PTR [rdx+0x0],ch
   140056652:	or     al,BYTE PTR [rax]
   140056654:	cld    
   140056655:	add    edi,edi
   140056657:	inc    DWORD PTR [rax+0x41002600]
   14005665d:	add    BYTE PTR [rax+rax*1+0x64],ah
   140056661:	add    BYTE PTR [rax],ah
   140056663:	add    BYTE PTR [rdi+0x0],dh
   140056666:	outs   dx,DWORD PTR ds:[rsi]
   140056667:	add    BYTE PTR [rdx+0x0],dh
   14005666a:	add    BYTE PTR fs:[rbx+0x0],dh
   14005666e:	and    BYTE PTR [rax],al
   140056670:	imul   eax,DWORD PTR [rax],0x20006e
   140056676:	jae    0x140056678
   140056678:	outs   dx,DWORD PTR ds:[rsi]
   140056679:	add    BYTE PTR [rbp+0x0],dh
   14005667c:	jb     0x14005667e
   14005667e:	movsxd eax,DWORD PTR [rax]
   140056680:	add    BYTE PTR gs:[rax],ah
   140056683:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140056687:	add    BYTE PTR [rax],ah
   140056689:	add    BYTE PTR [rax+rax*1+0x61],dh
   14005668d:	add    BYTE PTR [rdx+0x0],dh
   140056690:	add    BYTE PTR [ebp+0x0],ah
   140056694:	je     0x140056696
   140056696:	add    BYTE PTR cs:[rax],al
   140056699:	add    BYTE PTR [rax],al
   14005669b:	add    BYTE PTR [rcx],cl
   14005669d:	add    BYTE PTR [rcx],al
   14005669f:	push   rax
   1400566a0:	add    BYTE PTR [rax],al
   1400566a2:	add    BYTE PTR [rax],al
   1400566a4:	nop
   1400566a5:	add    BYTE PTR [rdi+0x0],bl
   1400566a8:	jp     0x1400566aa
   1400566aa:	or     al,BYTE PTR [rax]
   1400566ac:	sti    
   1400566ad:	add    edi,edi
   1400566af:	inc    DWORD PTR [rax+0x44002600]
   1400566b5:	add    BYTE PTR [rbp+0x0],ah
   1400566b8:	ins    BYTE PTR es:[rdi],dx
   1400566b9:	add    BYTE PTR [rbp+0x0],ah
   1400566bc:	je     0x1400566be
   1400566be:	add    BYTE PTR gs:[rax],ah
   1400566c1:	add    BYTE PTR [rdi+0x0],dh
   1400566c4:	outs   dx,DWORD PTR ds:[rsi]
   1400566c5:	add    BYTE PTR [rdx+0x0],dh
   1400566c8:	add    BYTE PTR fs:[rbx+0x0],dh
   1400566cc:	and    BYTE PTR [rax],al
   1400566ce:	imul   eax,DWORD PTR [rax],0x20006e
   1400566d4:	jae    0x1400566d6
   1400566d6:	outs   dx,DWORD PTR ds:[rsi]
   1400566d7:	add    BYTE PTR [rbp+0x0],dh
   1400566da:	jb     0x1400566dc
   1400566dc:	movsxd eax,DWORD PTR [rax]
   1400566de:	add    BYTE PTR gs:[rax],ah
   1400566e1:	add    BYTE PTR [rsi+0x0],ah
   1400566e4:	jb     0x1400566e6
   1400566e6:	outs   dx,DWORD PTR ds:[rsi]
   1400566e7:	add    BYTE PTR [rbp+0x0],ch
   1400566ea:	and    BYTE PTR [rax],al
   1400566ec:	je     0x1400566ee
   1400566ee:	(bad)  
   1400566ef:	add    BYTE PTR [rdx+0x0],dh
   1400566f2:	add    BYTE PTR [ebp+0x0],ah
   1400566f6:	je     0x1400566f8
   1400566f8:	add    BYTE PTR cs:[rax],al
   1400566fb:	add    BYTE PTR [rax],al
   1400566fd:	add    BYTE PTR [rax],al
   1400566ff:	add    BYTE PTR [rdi],al
   140056701:	add    BYTE PTR [rax],al
   140056703:	push   rax
   140056704:	add    BYTE PTR [rax],al
   140056706:	add    BYTE PTR [rax],al
   140056708:	or     BYTE PTR [rax],al
   14005670a:	imul   eax,DWORD PTR [rax],0x8
   14005670d:	add    DWORD PTR [rax],esi
   14005670f:	add    BYTE PTR [rdi],dl
   140056711:	add    al,0xff
   140056713:	inc    DWORD PTR [rax+0x72005000]
   140056719:	add    BYTE PTR [rdi+0x0],ch
   14005671c:	add    BYTE PTR [edx+0x0],dh
   140056720:	add    BYTE PTR gs:[rbx+0x0],dh
   140056724:	jae    0x140056726
	...
   14005672e:	add    dl,BYTE PTR [rax+0x0]
   140056731:	add    BYTE PTR [rax],al
   140056733:	add    BYTE PTR [rdx],dl
   140056735:	add    BYTE PTR [rax+0x0],bh
   140056738:	add    BYTE PTR fs:[rdx],cl
   14005673b:	add    dh,dh
   14005673d:	add    edi,edi
   14005673f:	inc    DWORD PTR [rdx+0x74005300]
   140056745:	add    BYTE PTR [rcx+0x0],ah
   140056748:	add    BYTE PTR [ebp+0x0],ah
   14005674c:	cmp    al,BYTE PTR [rax]
	...
   140056756:	add    BYTE PTR [rax+0x0],dl
   140056759:	add    BYTE PTR [rax],al
   14005675b:	add    BYTE PTR [rdx],dl
   14005675d:	add    BYTE PTR [rbx+0xe007600],al
   140056763:	add    al,dh
   140056765:	add    ebp,DWORD PTR [rbp+0x0]
   140056768:	jae    0x14005676a
   14005676a:	movsxd eax,DWORD PTR [rax]
   14005676c:	je     0x14005676e
   14005676e:	ins    BYTE PTR es:[rdi],dx
   14005676f:	add    BYTE PTR [rbx+0x0],dh
   140056772:	pop    rdi
   140056773:	add    BYTE PTR [rax+0x0],dh
   140056776:	jb     0x140056778
   140056778:	outs   dx,DWORD PTR ds:[rsi]
   140056779:	add    BYTE PTR [rdi+0x0],ah
   14005677c:	jb     0x14005677e
   14005677e:	add    BYTE PTR gs:[rbx+0x0],dh
   140056782:	jae    0x140056784
   140056784:	xor    eax,DWORD PTR [rax]
   140056786:	xor    al,BYTE PTR [rax]
   140056788:	add    BYTE PTR [rax],al
   14005678a:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14005678e:	outs   dx,BYTE PTR ds:[rsi]
   14005678f:	add    BYTE PTR [rbp+0x0],ah
   140056792:	jb     0x140056794
   140056794:	imul   eax,DWORD PTR [rax],0x310063
	...
   1400567a2:	add    dl,BYTE PTR [rax+0x0]
   1400567a5:	add    BYTE PTR [rax],al
   1400567a7:	add    BYTE PTR [rax+0x64007800],dl
   1400567ad:	add    BYTE PTR [rdx],cl
   1400567af:	add    bh,dh
   1400567b1:	add    edi,edi
   1400567b3:	inc    DWORD PTR [rdx+0x6f005400]
   1400567b9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400567bd:	add    BYTE PTR [rax+rax*1+0x3a],ch
	...
   1400567c9:	add    BYTE PTR [rax],al
   1400567cb:	push   rax
   1400567cc:	add    BYTE PTR [rax],al
   1400567ce:	add    BYTE PTR [rax],al
   1400567d0:	nop
   1400567d1:	add    BYTE PTR [rbx+0xe007600],al
   1400567d7:	add    ch,dh
   1400567d9:	add    ebp,DWORD PTR [rbp+0x0]
   1400567dc:	jae    0x1400567de
   1400567de:	movsxd eax,DWORD PTR [rax]
   1400567e0:	je     0x1400567e2
   1400567e2:	ins    BYTE PTR es:[rdi],dx
   1400567e3:	add    BYTE PTR [rbx+0x0],dh
   1400567e6:	pop    rdi
   1400567e7:	add    BYTE PTR [rax+0x0],dh
   1400567ea:	jb     0x1400567ec
   1400567ec:	outs   dx,DWORD PTR ds:[rsi]
   1400567ed:	add    BYTE PTR [rdi+0x0],ah
   1400567f0:	jb     0x1400567f2
   1400567f2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400567f6:	jae    0x1400567f8
   1400567f8:	xor    eax,DWORD PTR [rax]
   1400567fa:	xor    al,BYTE PTR [rax]
   1400567fc:	add    BYTE PTR [rax],al
   1400567fe:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140056802:	outs   dx,BYTE PTR ds:[rsi]
   140056803:	add    BYTE PTR [rbp+0x0],ah
   140056806:	jb     0x140056808
   140056808:	imul   eax,DWORD PTR [rax],0x310063
   14005680e:	add    BYTE PTR [rax],al
   140056810:	add    BYTE PTR [rax],al
   140056812:	add    BYTE PTR [rax],al
   140056814:	add    DWORD PTR [rax],eax
   140056816:	add    DWORD PTR [rax+0x0],edx
   140056819:	add    BYTE PTR [rax],al
   14005681b:	add    BYTE PTR [rbx+0x0],dh
   14005681e:	movabs ds:0xff0001000e003100,eax
   140056827:	inc    DWORD PTR [rax+0x4d002600]
   14005682d:	add    BYTE PTR [rbp+0x0],ah
   140056830:	jb     0x140056832
   140056832:	add    BYTE PTR [ebp+0x0],ah
	...
   14005683e:	add    DWORD PTR [rax+0x0],edx
   140056841:	add    BYTE PTR [rax],al
   140056843:	add    BYTE PTR [rcx+0x3100a300],ch
   140056849:	add    BYTE PTR [rsi],cl
   14005684b:	add    BYTE PTR [rdx],al
   14005684d:	add    bh,bh
   14005684f:	inc    DWORD PTR [rax+0x61004300]
   140056855:	add    BYTE PTR [rsi+0x0],ch
   140056858:	movsxd eax,DWORD PTR [rax]
   14005685a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14005685f:	add    BYTE PTR [rax],al
   140056861:	add    BYTE PTR [rax],al
   140056863:	add    BYTE PTR [rax],al
   140056865:	add    BYTE PTR [rcx],al
   140056867:	push   rax
   140056868:	add    BYTE PTR [rax],al
   14005686a:	add    BYTE PTR [rax],al
   14005686c:	fild   WORD PTR [rax]
   14005686e:	movabs ds:0xffe146000e003100,eax
   140056877:	inc    DWORD PTR [rax+0x48002600]
   14005687d:	add    BYTE PTR [rbp+0x0],ah
   140056880:	ins    BYTE PTR es:[rdi],dx
   140056881:	add    BYTE PTR [rax+0x0],dh
   140056884:	add    BYTE PTR [rax],al
   140056886:	add    BYTE PTR [rax],al
   140056888:	add    al,al
   14005688b:	rex.W add BYTE PTR [rax],al
   14005688e:	add    BYTE PTR [rax],al
   140056890:	or     eax,DWORD PTR [rax]
   140056892:	add    BYTE PTR [rax],al
   140056894:	add    BYTE PTR [rax],al
   140056896:	sbb    BYTE PTR [rcx],al
   140056898:	mov    ecx,0x0
   14005689d:	add    BYTE PTR [rsi+0x0],dl
   1400568a0:	imul   eax,DWORD PTR [rax],0x770065
   1400568a6:	add    BYTE PTR [rax],al
   1400568a8:	or     BYTE PTR [rax],al
   1400568aa:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400568ae:	and    BYTE PTR [rax],al
   1400568b0:	push   rbx
   1400568b1:	add    BYTE PTR [rax+0x0],ch
   1400568b4:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400568b9:	add    BYTE PTR [rax],ah
   1400568bb:	add    BYTE PTR [rax+rax*1+0x6c],al
   1400568bf:	add    BYTE PTR [rdi+0x0],ah
   1400568c2:	add    BYTE PTR [rax],al
   1400568c4:	add    BYTE PTR [rax],al
   1400568c6:	add    dl,BYTE PTR [rax+0x0]
   1400568c9:	add    BYTE PTR [rax],al
   1400568cb:	add    BYTE PTR [rax],cl
   1400568cd:	add    BYTE PTR [rax],cl
   1400568cf:	add    BYTE PTR [rax+rax*1+0x8],ah
   1400568d3:	add    cl,bh
   1400568d5:	add    edi,edi
   1400568d7:	inc    DWORD PTR [rdx+0x6f005300]
   1400568dd:	add    BYTE PTR [rbp+0x0],dh
   1400568e0:	jb     0x1400568e2
   1400568e2:	movsxd eax,DWORD PTR [rax]
   1400568e4:	add    BYTE PTR gs:[rax],ah
   1400568e7:	add    BYTE PTR [rsi],ah
   1400568e9:	add    BYTE PTR [rsi+0x0],al
   1400568ec:	imul   eax,DWORD PTR [rax],0x65006c
   1400568f2:	and    BYTE PTR [rax],al
   1400568f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400568f8:	ins    DWORD PTR es:[rdi],dx
   1400568f9:	add    BYTE PTR [rbp+0x0],ah
   1400568fc:	cmp    al,BYTE PTR [rax]
   1400568fe:	add    BYTE PTR [rax],al
   140056900:	add    BYTE PTR [rax],al
   140056902:	add    BYTE PTR [rax],al
   140056904:	add    BYTE PTR [rax],0x81
   140056907:	push   rax
   140056908:	add    BYTE PTR [rax],al
   14005690a:	add    BYTE PTR [rax],al
   14005690c:	or     BYTE PTR [rax],al
   14005690e:	adc    eax,DWORD PTR [rax]
   140056910:	rol    DWORD PTR [rax],cl
   140056912:	(bad)  
   140056913:	add    ch,bh
   140056915:	add    edi,edi
   140056917:	inc    DWORD PTR [rcx+0x0]
   14005691d:	add    BYTE PTR [rax],al
   14005691f:	add    BYTE PTR [rax],al
   140056921:	add    BYTE PTR [rcx],al
   140056923:	push   rax
   140056924:	add    BYTE PTR [rax],al
   140056926:	add    BYTE PTR [rax],al
   140056928:	fild   WORD PTR [rax]
   14005692a:	adc    eax,DWORD PTR [rax]
   14005692c:	xor    DWORD PTR [rax],eax
   14005692e:	(bad)  
   14005692f:	add    dh,bh
   140056931:	add    edi,edi
   140056933:	inc    DWORD PTR [rax+0x42002600]
   140056939:	add    BYTE PTR [rdx+0x0],dh
   14005693c:	outs   dx,DWORD PTR ds:[rsi]
   14005693d:	add    BYTE PTR [rdi+0x0],dh
   140056940:	jae    0x140056942
   140056942:	add    BYTE PTR gs:[rax],al
   140056945:	add    BYTE PTR [rax],al
   140056947:	add    BYTE PTR [rax],al
   140056949:	add    BYTE PTR [rdx],al
   14005694b:	push   rax
   14005694c:	add    BYTE PTR [rax],al
   14005694e:	add    BYTE PTR [rax],al
   140056950:	or     BYTE PTR [rax],al
   140056952:	and    eax,0xa001900
   140056957:	add    BYTE PTR [rsp+rax*1],al
   14005695a:	(bad)  
   14005695b:	inc    DWORD PTR [rdx+0x57002600]
   140056961:	add    BYTE PTR [rdi+0x0],ch
   140056964:	jb     0x140056966
   140056966:	add    BYTE PTR fs:[rdx],bh
   140056969:	add    BYTE PTR [rax],al
   14005696b:	add    BYTE PTR [rax],al
   14005696d:	add    BYTE PTR [rax],al
   14005696f:	add    BYTE PTR [rax+0x508100],al
   140056975:	add    BYTE PTR [rax],al
   140056977:	add    BYTE PTR [rax],cl
   140056979:	add    BYTE PTR [rax],dh
   14005697b:	add    BYTE PTR [rax],cl
   14005697d:	add    DWORD PTR [rsi],ecx
   14005697f:	add    ch,ch
   140056981:	add    edi,edi
   140056983:	inc    DWORD PTR [rcx+0x0]
   140056989:	add    BYTE PTR [rax],al
   14005698b:	add    BYTE PTR [rax],al
   14005698d:	add    BYTE PTR [rdx],al
   14005698f:	push   rax
   140056990:	add    BYTE PTR [rax],al
   140056992:	add    BYTE PTR [rax],al
   140056994:	or     BYTE PTR [rax],al
   140056996:	rex.X add BYTE PTR [rcx],bl
   140056999:	add    BYTE PTR [rdx],cl
   14005699b:	add    BYTE PTR [rip+0xffffffff82ffff04],al        # 0xc30568a5
   1400569a1:	add    BYTE PTR [rsi],ah
   1400569a3:	add    BYTE PTR [rdx+0x0],dl
   1400569a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400569aa:	jne    0x1400569ac
   1400569ac:	ins    BYTE PTR es:[rdi],dx
   1400569ad:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400569b1:	add    BYTE PTR [rdx],bh
   1400569b3:	add    BYTE PTR [rax],al
   1400569b5:	add    BYTE PTR [rax],al
   1400569b7:	add    BYTE PTR [rcx],al
   1400569b9:	add    DWORD PTR [rax+0x50],esi
   1400569bf:	add    BYTE PTR [rax],cl
   1400569c1:	add    BYTE PTR [rbp+0x0],cl
   1400569c4:	or     BYTE PTR [rcx],al
   1400569c6:	rex.WRX add bl,r13b
   1400569c9:	add    edi,edi
   1400569cb:	inc    DWORD PTR [rbx+0x0]
   1400569d1:	add    BYTE PTR [rax],al
   1400569d3:	add    BYTE PTR [rcx],al
   1400569d5:	add    BYTE PTR [rcx],al
   1400569d7:	push   rax
   1400569d8:	add    BYTE PTR [rax],al
   1400569da:	add    BYTE PTR [rax],al
   1400569dc:	cmp    eax,0x3100a300
   1400569e1:	add    BYTE PTR [rsi],cl
   1400569e3:	add    bh,ch
   1400569e5:	add    edi,edi
   1400569e7:	inc    DWORD PTR [rax+0x4f002600]
   1400569ed:	add    BYTE PTR [rax+0x0],dh
   1400569f0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400569f4:	add    BYTE PTR [rax],al
   1400569f6:	add    BYTE PTR [rax],al
   1400569f8:	add    BYTE PTR [rax],al
   1400569fa:	add    DWORD PTR [rax+0x0],edx
   1400569fd:	add    BYTE PTR [rax],al
   1400569ff:	add    BYTE PTR [rbx+0x0],dh
   140056a02:	movabs ds:0xff03ee000e003100,eax
   140056a0b:	inc    DWORD PTR [rax+0x4c002600]
   140056a11:	add    BYTE PTR [rdi+0x0],ch
   140056a14:	outs   dx,DWORD PTR ds:[rsi]
   140056a15:	add    BYTE PTR [rbx+0x0],ch
   140056a18:	and    BYTE PTR [rax],al
   140056a1a:	push   rbp
   140056a1b:	add    BYTE PTR [rax+0x0],dh
	...
   140056a26:	add    DWORD PTR [rax+0x0],edx
   140056a29:	add    BYTE PTR [rax],al
   140056a2b:	add    BYTE PTR [rcx+0x3100a300],ch
   140056a31:	add    BYTE PTR [rsi],cl
   140056a33:	add    BYTE PTR [rdx],al
   140056a35:	add    bh,bh
   140056a37:	inc    DWORD PTR [rax+0x6c004300]
   140056a3d:	add    BYTE PTR [rdi+0x0],ch
   140056a40:	jae    0x140056a42
   140056a42:	add    BYTE PTR gs:[rax],al
   140056a45:	add    BYTE PTR [rax],al
   140056a47:	add    BYTE PTR [rax],al
   140056a49:	add    BYTE PTR [rcx],al
   140056a4b:	push   rax
   140056a4c:	add    BYTE PTR [rax],al
   140056a4e:	add    BYTE PTR [rax],al
   140056a50:	fild   WORD PTR [rax]
   140056a52:	movabs ds:0xffe146000e003100,eax
   140056a5b:	inc    DWORD PTR [rax+0x48002600]
   140056a61:	add    BYTE PTR [rbp+0x0],ah
   140056a64:	ins    BYTE PTR es:[rdi],dx
   140056a65:	add    BYTE PTR [rax+0x0],dh
   140056a68:	add    BYTE PTR [rax],al
   140056a6a:	add    BYTE PTR [rax],al
   140056a6c:	add    al,al
   140056a6f:	rex.W add BYTE PTR [rax],al
   140056a72:	add    BYTE PTR [rax],al
   140056a74:	adc    DWORD PTR [rax],eax
   140056a76:	add    BYTE PTR [rax],al
   140056a78:	add    BYTE PTR [rax],al
   140056a7a:	sbb    BYTE PTR [rcx],al
   140056a7c:	mov    ecx,0x0
   140056a81:	add    BYTE PTR [rcx+0x0],al
   140056a84:	add    BYTE PTR fs:[rax+rax*1+0x20],ah
   140056a89:	add    BYTE PTR [rdi+0x0],dl
   140056a8c:	outs   dx,DWORD PTR ds:[rsi]
   140056a8d:	add    BYTE PTR [rdx+0x0],dh
   140056a90:	add    BYTE PTR fs:[rbx+0x0],dh
   140056a94:	add    BYTE PTR [rax],al
   140056a96:	or     BYTE PTR [rax],al
   140056a98:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140056a9c:	and    BYTE PTR [rax],al
   140056a9e:	push   rbx
   140056a9f:	add    BYTE PTR [rax+0x0],ch
   140056aa2:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140056aa7:	add    BYTE PTR [rax],ah
   140056aa9:	add    BYTE PTR [rax+rax*1+0x6c],al
   140056aad:	add    BYTE PTR [rdi+0x0],ah
   140056ab0:	add    BYTE PTR [rax],al
   140056ab2:	add    BYTE PTR [rax],al
   140056ab4:	add    BYTE PTR [rax],al
   140056ab6:	add    dl,BYTE PTR [rax+0x0]
   140056ab9:	add    BYTE PTR [rax],al
   140056abb:	add    BYTE PTR [rax],cl
   140056abd:	add    BYTE PTR [rax],cl
   140056abf:	add    BYTE PTR [rax+rax*1+0x8],ah
   140056ac3:	add    cl,bh
   140056ac5:	add    edi,edi
   140056ac7:	inc    DWORD PTR [rdx+0x6f005300]
   140056acd:	add    BYTE PTR [rbp+0x0],dh
   140056ad0:	jb     0x140056ad2
   140056ad2:	movsxd eax,DWORD PTR [rax]
   140056ad4:	add    BYTE PTR gs:[rax],ah
   140056ad7:	add    BYTE PTR [rsi],ah
   140056ad9:	add    BYTE PTR [rsi+0x0],al
   140056adc:	imul   eax,DWORD PTR [rax],0x65006c
   140056ae2:	and    BYTE PTR [rax],al
   140056ae4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140056ae8:	ins    DWORD PTR es:[rdi],dx
   140056ae9:	add    BYTE PTR [rbp+0x0],ah
   140056aec:	cmp    al,BYTE PTR [rax]
   140056aee:	add    BYTE PTR [rax],al
   140056af0:	add    BYTE PTR [rax],al
   140056af2:	add    BYTE PTR [rax],al
   140056af4:	add    BYTE PTR [rax],0x81
   140056af7:	push   rax
   140056af8:	add    BYTE PTR [rax],al
   140056afa:	add    BYTE PTR [rax],al
   140056afc:	or     BYTE PTR [rax],al
   140056afe:	adc    eax,DWORD PTR [rax]
   140056b00:	rol    DWORD PTR [rax],cl
   140056b02:	(bad)  
   140056b03:	add    ch,bh
   140056b05:	add    edi,edi
   140056b07:	inc    DWORD PTR [rcx+0x0]
   140056b0d:	add    BYTE PTR [rax],al
   140056b0f:	add    BYTE PTR [rax],al
   140056b11:	add    BYTE PTR [rcx],al
   140056b13:	push   rax
   140056b14:	add    BYTE PTR [rax],al
   140056b16:	add    BYTE PTR [rax],al
   140056b18:	fild   WORD PTR [rax]
   140056b1a:	adc    eax,DWORD PTR [rax]
   140056b1c:	xor    DWORD PTR [rax],eax
   140056b1e:	(bad)  
   140056b1f:	add    dh,bh
   140056b21:	add    edi,edi
   140056b23:	inc    DWORD PTR [rax+0x42002600]
   140056b29:	add    BYTE PTR [rdx+0x0],dh
   140056b2c:	outs   dx,DWORD PTR ds:[rsi]
   140056b2d:	add    BYTE PTR [rdi+0x0],dh
   140056b30:	jae    0x140056b32
   140056b32:	add    BYTE PTR gs:[rax],al
   140056b35:	add    BYTE PTR [rax],al
   140056b37:	add    BYTE PTR [rax],al
   140056b39:	add    BYTE PTR [rdx],al
   140056b3b:	push   rax
   140056b3c:	add    BYTE PTR [rax],al
   140056b3e:	add    BYTE PTR [rax],al
   140056b40:	or     BYTE PTR [rax],al
   140056b42:	and    eax,0x8006f00
   140056b47:	add    BYTE PTR [rsi],cl
   140056b49:	add    al,0xff
   140056b4b:	inc    DWORD PTR [rdx+0x65004e00]
   140056b51:	add    BYTE PTR [rdi+0x0],dh
   140056b54:	and    BYTE PTR [rax],al
   140056b56:	add    BYTE PTR es:[rdi+0x0],dl
   140056b5a:	outs   dx,DWORD PTR ds:[rsi]
   140056b5b:	add    BYTE PTR [rdx+0x0],dh
   140056b5e:	add    BYTE PTR fs:[rdx],bh
   140056b61:	add    BYTE PTR [rax],al
   140056b63:	add    BYTE PTR [rax],al
   140056b65:	add    BYTE PTR [rax],al
   140056b67:	add    BYTE PTR [rax+0x508100],al
   140056b6d:	add    BYTE PTR [rax],al
   140056b6f:	add    BYTE PTR [rax],cl
   140056b71:	add    BYTE PTR [rax],dh
   140056b73:	add    BYTE PTR [rax+0x4000e00],al
   140056b79:	add    al,0xff
   140056b7b:	inc    DWORD PTR [rcx+0x0]
   140056b81:	add    BYTE PTR [rax],al
   140056b83:	add    BYTE PTR [rcx],al
   140056b85:	add    DWORD PTR [rax+0x50],esi
   140056b8b:	add    BYTE PTR [rax],cl
   140056b8d:	add    BYTE PTR [rdx+0x0],al
   140056b90:	add    BYTE PTR [rax],0x24
   140056b93:	add    BYTE PTR [rip+0xffffffff83ffff04],cl        # 0xc4056a9d
	...
   140056ba1:	add    BYTE PTR [rdx],al
   140056ba3:	push   rax
   140056ba4:	add    BYTE PTR [rax],al
   140056ba6:	add    BYTE PTR [rax],al
   140056ba8:	nop
   140056ba9:	add    BYTE PTR [rip+0x8006f00],ah        # 0x14805daaf
   140056baf:	add    BYTE PTR [rip+0xffffffff82ffff04],al        # 0xc3056ab9
   140056bb5:	add    BYTE PTR [rsi],ah
   140056bb7:	add    BYTE PTR [rcx+0x0],al
   140056bba:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   140056bbf:	add    BYTE PTR [rax+rax*1+0x20],ah
   140056bc3:	add    BYTE PTR [rdi+0x0],dl
   140056bc6:	outs   dx,DWORD PTR ds:[rsi]
   140056bc7:	add    BYTE PTR [rdx+0x0],dh
   140056bca:	add    BYTE PTR fs:[rbx+0x0],dh
   140056bce:	cmp    al,BYTE PTR [rax]
   140056bd0:	add    BYTE PTR [rax],al
   140056bd2:	add    BYTE PTR [rax],al
   140056bd4:	add    eax,DWORD PTR [rcx]
   140056bd6:	mov    al,0x50
   140056bd8:	add    BYTE PTR [rax],al
   140056bda:	add    BYTE PTR [rax],al
   140056bdc:	nop
   140056bdd:	add    BYTE PTR [rax],dh
   140056bdf:	add    BYTE PTR [rax-0x13ffca00],al
   140056be5:	add    edi,edi
   140056be7:	inc    DWORD PTR [rbx+0x0]
   140056bed:	add    BYTE PTR [rax],al
   140056bef:	add    BYTE PTR [rdi],al
   140056bf1:	add    BYTE PTR [rax],al
   140056bf3:	push   rax
   140056bf4:	add    BYTE PTR [rax],al
   140056bf6:	add    BYTE PTR [rax],al
   140056bf8:	or     BYTE PTR [rax],al
   140056bfa:	imul   eax,DWORD PTR [rax],0x8
   140056bfd:	add    DWORD PTR [rax],esi
   140056bff:	add    BYTE PTR [rdi],dl
   140056c01:	add    al,0xff
   140056c03:	inc    DWORD PTR [rax+0x72005000]
   140056c09:	add    BYTE PTR [rdi+0x0],ch
   140056c0c:	add    BYTE PTR [edx+0x0],dh
   140056c10:	add    BYTE PTR gs:[rbx+0x0],dh
   140056c14:	jae    0x140056c16
	...
   140056c1e:	add    dl,BYTE PTR [rax+0x0]
   140056c21:	add    BYTE PTR [rax],al
   140056c23:	add    BYTE PTR [rdx],dl
   140056c25:	add    BYTE PTR [rax+0x0],bh
   140056c28:	add    BYTE PTR fs:[rdx],cl
   140056c2b:	add    dh,dh
   140056c2d:	add    edi,edi
   140056c2f:	inc    DWORD PTR [rdx+0x74005300]
   140056c35:	add    BYTE PTR [rcx+0x0],ah
   140056c38:	add    BYTE PTR [ebp+0x0],ah
   140056c3c:	cmp    al,BYTE PTR [rax]
	...
   140056c46:	add    BYTE PTR [rax+0x0],dl
   140056c49:	add    BYTE PTR [rax],al
   140056c4b:	add    BYTE PTR [rdx],dl
   140056c4d:	add    BYTE PTR [rbx+0xe007600],al
   140056c53:	add    al,dh
   140056c55:	add    ebp,DWORD PTR [rbp+0x0]
   140056c58:	jae    0x140056c5a
   140056c5a:	movsxd eax,DWORD PTR [rax]
   140056c5c:	je     0x140056c5e
   140056c5e:	ins    BYTE PTR es:[rdi],dx
   140056c5f:	add    BYTE PTR [rbx+0x0],dh
   140056c62:	pop    rdi
   140056c63:	add    BYTE PTR [rax+0x0],dh
   140056c66:	jb     0x140056c68
   140056c68:	outs   dx,DWORD PTR ds:[rsi]
   140056c69:	add    BYTE PTR [rdi+0x0],ah
   140056c6c:	jb     0x140056c6e
   140056c6e:	add    BYTE PTR gs:[rbx+0x0],dh
   140056c72:	jae    0x140056c74
   140056c74:	xor    eax,DWORD PTR [rax]
   140056c76:	xor    al,BYTE PTR [rax]
   140056c78:	add    BYTE PTR [rax],al
   140056c7a:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140056c7e:	outs   dx,BYTE PTR ds:[rsi]
   140056c7f:	add    BYTE PTR [rbp+0x0],ah
   140056c82:	jb     0x140056c84
   140056c84:	imul   eax,DWORD PTR [rax],0x310063
	...
   140056c92:	add    dl,BYTE PTR [rax+0x0]
   140056c95:	add    BYTE PTR [rax],al
   140056c97:	add    BYTE PTR [rax+0x64007800],dl
   140056c9d:	add    BYTE PTR [rdx],cl
   140056c9f:	add    bh,dh
   140056ca1:	add    edi,edi
   140056ca3:	inc    DWORD PTR [rdx+0x6f005400]
   140056ca9:	add    BYTE PTR [rax+rax*1+0x61],dh
   140056cad:	add    BYTE PTR [rax+rax*1+0x3a],ch
	...
   140056cb9:	add    BYTE PTR [rax],al
   140056cbb:	push   rax
   140056cbc:	add    BYTE PTR [rax],al
   140056cbe:	add    BYTE PTR [rax],al
   140056cc0:	nop
   140056cc1:	add    BYTE PTR [rbx+0xe007600],al
   140056cc7:	add    ch,dh
   140056cc9:	add    ebp,DWORD PTR [rbp+0x0]
   140056ccc:	jae    0x140056cce
   140056cce:	movsxd eax,DWORD PTR [rax]
   140056cd0:	je     0x140056cd2
   140056cd2:	ins    BYTE PTR es:[rdi],dx
   140056cd3:	add    BYTE PTR [rbx+0x0],dh
   140056cd6:	pop    rdi
   140056cd7:	add    BYTE PTR [rax+0x0],dh
   140056cda:	jb     0x140056cdc
   140056cdc:	outs   dx,DWORD PTR ds:[rsi]
   140056cdd:	add    BYTE PTR [rdi+0x0],ah
   140056ce0:	jb     0x140056ce2
   140056ce2:	add    BYTE PTR gs:[rbx+0x0],dh
   140056ce6:	jae    0x140056ce8
   140056ce8:	xor    eax,DWORD PTR [rax]
   140056cea:	xor    al,BYTE PTR [rax]
   140056cec:	add    BYTE PTR [rax],al
   140056cee:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140056cf2:	outs   dx,BYTE PTR ds:[rsi]
   140056cf3:	add    BYTE PTR [rbp+0x0],ah
   140056cf6:	jb     0x140056cf8
   140056cf8:	imul   eax,DWORD PTR [rax],0x310063
   140056cfe:	add    BYTE PTR [rax],al
   140056d00:	add    BYTE PTR [rax],al
   140056d02:	add    BYTE PTR [rax],al
   140056d04:	add    DWORD PTR [rax],eax
   140056d06:	add    DWORD PTR [rax+0x0],edx
   140056d09:	add    BYTE PTR [rax],al
   140056d0b:	add    BYTE PTR [rip+0x3100a300],bh        # 0x171061011
   140056d11:	add    BYTE PTR [rsi],cl
   140056d13:	add    BYTE PTR [rcx],al
   140056d15:	add    bh,bh
   140056d17:	inc    DWORD PTR [rax+0x4f002600]
   140056d1d:	add    BYTE PTR [rax+0x0],dh
   140056d20:	add    BYTE PTR gs:[rsi+0x0],ch
   140056d24:	add    BYTE PTR [rax],al
   140056d26:	add    BYTE PTR [rax],al
   140056d28:	add    BYTE PTR [rax],al
   140056d2a:	add    DWORD PTR [rax+0x0],edx
   140056d2d:	add    BYTE PTR [rax],al
   140056d2f:	add    BYTE PTR [rbx+0x0],dh
   140056d32:	movabs ds:0xff0413000e003100,eax
   140056d3b:	inc    DWORD PTR [rax+0x53002600]
   140056d41:	add    BYTE PTR [rcx+0x0],ah
   140056d44:	jbe    0x140056d46
   140056d46:	add    BYTE PTR gs:[rax],al
   140056d49:	add    BYTE PTR [rax],al
   140056d4b:	add    BYTE PTR [rax],al
   140056d4d:	add    BYTE PTR [rcx],al
   140056d4f:	push   rax
   140056d50:	add    BYTE PTR [rax],al
   140056d52:	add    BYTE PTR [rax],al
   140056d54:	test   eax,0x3100a300
   140056d59:	add    BYTE PTR [rsi],cl
   140056d5b:	add    BYTE PTR [rdx],al
   140056d5d:	add    bh,bh
   140056d5f:	inc    DWORD PTR [rax+0x61004300]
   140056d65:	add    BYTE PTR [rsi+0x0],ch
   140056d68:	movsxd eax,DWORD PTR [rax]
   140056d6a:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140056d6f:	add    BYTE PTR [rax],al
   140056d71:	add    BYTE PTR [rax],al
   140056d73:	add    BYTE PTR [rax],al
   140056d75:	add    BYTE PTR [rcx],al
   140056d77:	push   rax
   140056d78:	add    BYTE PTR [rax],al
   140056d7a:	add    BYTE PTR [rax],al
   140056d7c:	fild   WORD PTR [rax]
   140056d7e:	movabs ds:0xffe146000e003100,eax
   140056d87:	inc    DWORD PTR [rax+0x48002600]
   140056d8d:	add    BYTE PTR [rbp+0x0],ah
   140056d90:	ins    BYTE PTR es:[rdi],dx
   140056d91:	add    BYTE PTR [rax+0x0],dh
   140056d94:	add    BYTE PTR [rax],al
   140056d96:	add    BYTE PTR [rax],al
   140056d98:	add    al,al
   140056d9b:	rex.W add BYTE PTR [rax],al
   140056d9e:	add    BYTE PTR [rax],al
   140056da0:	adc    DWORD PTR [rax],eax
   140056da2:	add    BYTE PTR [rax],al
   140056da4:	add    BYTE PTR [rax],al
   140056da6:	sbb    BYTE PTR [rcx],al
   140056da8:	mov    ecx,0x0
   140056dad:	add    BYTE PTR [rax+rax*1+0x65],al
   140056db1:	add    BYTE PTR [rax+rax*1+0x65],ch
   140056db5:	add    BYTE PTR [rax+rax*1+0x65],dh
   140056db9:	add    BYTE PTR [rax],ah
   140056dbb:	add    BYTE PTR [rdi+0x0],dl
   140056dbe:	outs   dx,DWORD PTR ds:[rsi]
   140056dbf:	add    BYTE PTR [rdx+0x0],dh
   140056dc2:	add    BYTE PTR fs:[rbx+0x0],dh
   140056dc6:	add    BYTE PTR [rax],al
   140056dc8:	or     BYTE PTR [rax],al
   140056dca:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140056dce:	and    BYTE PTR [rax],al
   140056dd0:	push   rbx
   140056dd1:	add    BYTE PTR [rax+0x0],ch
   140056dd4:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140056dd9:	add    BYTE PTR [rax],ah
   140056ddb:	add    BYTE PTR [rax+rax*1+0x6c],al
   140056ddf:	add    BYTE PTR [rdi+0x0],ah
   140056de2:	add    BYTE PTR [rax],al
   140056de4:	add    BYTE PTR [rax],al
   140056de6:	add    dl,BYTE PTR [rax+0x0]
   140056de9:	add    BYTE PTR [rax],al
   140056deb:	add    BYTE PTR [rax],cl
   140056ded:	add    BYTE PTR [rax],cl
   140056def:	add    BYTE PTR [rax+rax*1+0x8],ah
   140056df3:	add    cl,bh
   140056df5:	add    edi,edi
   140056df7:	inc    DWORD PTR [rdx+0x6f005300]
   140056dfd:	add    BYTE PTR [rbp+0x0],dh
   140056e00:	jb     0x140056e02
   140056e02:	movsxd eax,DWORD PTR [rax]
   140056e04:	add    BYTE PTR gs:[rax],ah
   140056e07:	add    BYTE PTR [rsi],ah
   140056e09:	add    BYTE PTR [rsi+0x0],al
   140056e0c:	imul   eax,DWORD PTR [rax],0x65006c
   140056e12:	and    BYTE PTR [rax],al
   140056e14:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140056e18:	ins    DWORD PTR es:[rdi],dx
   140056e19:	add    BYTE PTR [rbp+0x0],ah
   140056e1c:	cmp    al,BYTE PTR [rax]
   140056e1e:	add    BYTE PTR [rax],al
   140056e20:	add    BYTE PTR [rax],al
   140056e22:	add    BYTE PTR [rax],al
   140056e24:	add    BYTE PTR [rax],0x81
   140056e27:	push   rax
   140056e28:	add    BYTE PTR [rax],al
   140056e2a:	add    BYTE PTR [rax],al
   140056e2c:	or     BYTE PTR [rax],al
   140056e2e:	adc    eax,DWORD PTR [rax]
   140056e30:	rol    DWORD PTR [rax],cl
   140056e32:	(bad)  
   140056e33:	add    ch,bh
   140056e35:	add    edi,edi
   140056e37:	inc    DWORD PTR [rcx+0x0]
   140056e3d:	add    BYTE PTR [rax],al
   140056e3f:	add    BYTE PTR [rax],al
   140056e41:	add    BYTE PTR [rcx],al
   140056e43:	push   rax
   140056e44:	add    BYTE PTR [rax],al
   140056e46:	add    BYTE PTR [rax],al
   140056e48:	fild   WORD PTR [rax]
   140056e4a:	adc    eax,DWORD PTR [rax]
   140056e4c:	xor    DWORD PTR [rax],eax
   140056e4e:	(bad)  
   140056e4f:	add    dh,bh
   140056e51:	add    edi,edi
   140056e53:	inc    DWORD PTR [rax+0x42002600]
   140056e59:	add    BYTE PTR [rdx+0x0],dh
   140056e5c:	outs   dx,DWORD PTR ds:[rsi]
   140056e5d:	add    BYTE PTR [rdi+0x0],dh
   140056e60:	jae    0x140056e62
   140056e62:	add    BYTE PTR gs:[rax],al
   140056e65:	add    BYTE PTR [rax],al
   140056e67:	add    BYTE PTR [rax],al
   140056e69:	add    BYTE PTR [rdx],al
   140056e6b:	push   rax
   140056e6c:	add    BYTE PTR [rax],al
   140056e6e:	add    BYTE PTR [rax],al
   140056e70:	or     BYTE PTR [rax],al
   140056e72:	and    eax,0x8006f00
   140056e77:	add    BYTE PTR [rsp+rax*1],al
   140056e7a:	(bad)  
   140056e7b:	inc    DWORD PTR [rdx+0x55002600]
   140056e81:	add    BYTE PTR [rbx+0x0],dh
   140056e84:	add    BYTE PTR gs:[rdx+0x0],dh
   140056e88:	and    BYTE PTR [rax],al
   140056e8a:	push   rdi
   140056e8b:	add    BYTE PTR [rdi+0x0],ch
   140056e8e:	jb     0x140056e90
   140056e90:	add    BYTE PTR fs:[rbx+0x0],dh
   140056e94:	cmp    al,BYTE PTR [rax]
   140056e96:	add    BYTE PTR [rax],al
   140056e98:	add    BYTE PTR [rax],al
   140056e9a:	add    BYTE PTR [rax],al
   140056e9c:	add    eax,DWORD PTR [rcx]
   140056e9e:	mov    al,0x50
   140056ea0:	add    BYTE PTR [rax],al
   140056ea2:	add    BYTE PTR [rax],al
   140056ea4:	or     BYTE PTR [rax],al
   140056ea6:	rex.X add BYTE PTR [rax+0x9002400],al
   140056ead:	add    al,0xff
   140056eaf:	inc    DWORD PTR [rbx+0x0]
   140056eb5:	add    BYTE PTR [rax],al
   140056eb7:	add    BYTE PTR [rax],al
   140056eb9:	add    BYTE PTR [rdx],al
   140056ebb:	push   rax
   140056ebc:	add    BYTE PTR [rax],al
   140056ebe:	add    BYTE PTR [rax],al
   140056ec0:	nop
   140056ec1:	add    BYTE PTR [rip+0x8006f00],ah        # 0x14805ddc7
   140056ec7:	add    BYTE PTR [rbx],cl
   140056ec9:	add    al,0xff
   140056ecb:	inc    DWORD PTR [rdx+0x44002600]
   140056ed1:	add    BYTE PTR [rbp+0x0],ah
   140056ed4:	ins    BYTE PTR es:[rdi],dx
   140056ed5:	add    BYTE PTR [rbp+0x0],ah
   140056ed8:	je     0x140056eda
   140056eda:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140056edf:	add    BYTE PTR [rdi+0x0],dl
   140056ee2:	outs   dx,DWORD PTR ds:[rsi]
   140056ee3:	add    BYTE PTR [rdx+0x0],dh
   140056ee6:	add    BYTE PTR fs:[rbx+0x0],dh
   140056eea:	cmp    al,BYTE PTR [rax]
   140056eec:	add    BYTE PTR [rax],al
   140056eee:	add    BYTE PTR [rax],al
   140056ef0:	add    eax,DWORD PTR [rcx]
   140056ef2:	mov    al,0x50
   140056ef4:	add    BYTE PTR [rax],al
   140056ef6:	add    BYTE PTR [rax],al
   140056ef8:	nop
   140056ef9:	add    BYTE PTR [rax],dh
   140056efb:	add    BYTE PTR [rax+0xa003600],al
   140056f01:	add    al,0xff
   140056f03:	inc    DWORD PTR [rbx+0x0]
   140056f09:	add    BYTE PTR [rax],al
   140056f0b:	add    BYTE PTR [rax],al
   140056f0d:	add    BYTE PTR [rdx],al
   140056f0f:	push   rax
   140056f10:	add    BYTE PTR [rax],al
   140056f12:	add    BYTE PTR [rax],al
   140056f14:	adc    al,BYTE PTR [rax]
   140056f16:	js     0x140056f18
   140056f18:	add    BYTE PTR fs:[rdx],cl
   140056f1b:	add    dh,dh
   140056f1d:	add    edi,edi
   140056f1f:	inc    DWORD PTR [rdx+0x74005300]
   140056f25:	add    BYTE PTR [rcx+0x0],ah
   140056f28:	add    BYTE PTR [ebp+0x0],ah
   140056f2c:	cmp    al,BYTE PTR [rax]
	...
   140056f36:	add    BYTE PTR [rax+0x0],dl
   140056f39:	add    BYTE PTR [rax],al
   140056f3b:	add    BYTE PTR [rdx],dl
   140056f3d:	add    BYTE PTR [rbx+0xe007600],al
   140056f43:	add    al,dh
   140056f45:	add    ebp,DWORD PTR [rbp+0x0]
   140056f48:	jae    0x140056f4a
   140056f4a:	movsxd eax,DWORD PTR [rax]
   140056f4c:	je     0x140056f4e
   140056f4e:	ins    BYTE PTR es:[rdi],dx
   140056f4f:	add    BYTE PTR [rbx+0x0],dh
   140056f52:	pop    rdi
   140056f53:	add    BYTE PTR [rax+0x0],dh
   140056f56:	jb     0x140056f58
   140056f58:	outs   dx,DWORD PTR ds:[rsi]
   140056f59:	add    BYTE PTR [rdi+0x0],ah
   140056f5c:	jb     0x140056f5e
   140056f5e:	add    BYTE PTR gs:[rbx+0x0],dh
   140056f62:	jae    0x140056f64
   140056f64:	xor    eax,DWORD PTR [rax]
   140056f66:	xor    al,BYTE PTR [rax]
   140056f68:	add    BYTE PTR [rax],al
   140056f6a:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140056f6e:	outs   dx,BYTE PTR ds:[rsi]
   140056f6f:	add    BYTE PTR [rbp+0x0],ah
   140056f72:	jb     0x140056f74
   140056f74:	imul   eax,DWORD PTR [rax],0x310063
   140056f7a:	add    BYTE PTR [rax],al
   140056f7c:	add    BYTE PTR [rax],al
   140056f7e:	add    BYTE PTR [rax],al
   140056f80:	(bad)  
   140056f81:	add    BYTE PTR [rax],al
   140056f83:	push   rax
   140056f84:	add    BYTE PTR [rax],al
   140056f86:	add    BYTE PTR [rax],al
   140056f88:	or     BYTE PTR [rax],al
   140056f8a:	imul   eax,DWORD PTR [rax],0x8
   140056f8d:	add    DWORD PTR [rax],esi
   140056f8f:	add    BYTE PTR [rdi],dl
   140056f91:	add    al,0xff
   140056f93:	inc    DWORD PTR [rax+0x72005000]
   140056f99:	add    BYTE PTR [rdi+0x0],ch
   140056f9c:	add    BYTE PTR [edx+0x0],dh
   140056fa0:	add    BYTE PTR gs:[rbx+0x0],dh
   140056fa4:	jae    0x140056fa6
	...
   140056fae:	add    dl,BYTE PTR [rax+0x0]
   140056fb1:	add    BYTE PTR [rax],al
   140056fb3:	add    BYTE PTR [rax+0x64007800],dl
   140056fb9:	add    BYTE PTR [rdx],cl
   140056fbb:	add    bh,dh
   140056fbd:	add    edi,edi
   140056fbf:	inc    DWORD PTR [rdx+0x6f005400]
   140056fc5:	add    BYTE PTR [rax+rax*1+0x61],dh
   140056fc9:	add    BYTE PTR [rax+rax*1+0x3a],ch
	...
   140056fd5:	add    BYTE PTR [rax],al
   140056fd7:	push   rax
   140056fd8:	add    BYTE PTR [rax],al
   140056fda:	add    BYTE PTR [rax],al
   140056fdc:	nop
   140056fdd:	add    BYTE PTR [rbx+0xe007600],al
   140056fe3:	add    ch,dh
   140056fe5:	add    ebp,DWORD PTR [rbp+0x0]
   140056fe8:	jae    0x140056fea
   140056fea:	movsxd eax,DWORD PTR [rax]
   140056fec:	je     0x140056fee
   140056fee:	ins    BYTE PTR es:[rdi],dx
   140056fef:	add    BYTE PTR [rbx+0x0],dh
   140056ff2:	pop    rdi
   140056ff3:	add    BYTE PTR [rax+0x0],dh
   140056ff6:	jb     0x140056ff8
   140056ff8:	outs   dx,DWORD PTR ds:[rsi]
   140056ff9:	add    BYTE PTR [rdi+0x0],ah
   140056ffc:	jb     0x140056ffe
   140056ffe:	add    BYTE PTR gs:[rbx+0x0],dh
   140057002:	jae    0x140057004
   140057004:	xor    eax,DWORD PTR [rax]
   140057006:	xor    al,BYTE PTR [rax]
   140057008:	add    BYTE PTR [rax],al
   14005700a:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14005700e:	outs   dx,BYTE PTR ds:[rsi]
   14005700f:	add    BYTE PTR [rbp+0x0],ah
   140057012:	jb     0x140057014
   140057014:	imul   eax,DWORD PTR [rax],0x310063
   14005701a:	add    BYTE PTR [rax],al
   14005701c:	add    BYTE PTR [rax],al
   14005701e:	add    BYTE PTR [rax],al
   140057020:	add    DWORD PTR [rax],eax
   140057022:	add    DWORD PTR [rax+0x0],edx
   140057025:	add    BYTE PTR [rax],al
   140057027:	add    BYTE PTR [rip+0x3100a300],bh        # 0x17106132d
   14005702d:	add    BYTE PTR [rsi],cl
   14005702f:	add    BYTE PTR [rcx],al
   140057031:	add    bh,bh
   140057033:	inc    DWORD PTR [rax+0x4f002600]
   140057039:	add    BYTE PTR [rax+0x0],dh
   14005703c:	add    BYTE PTR gs:[rsi+0x0],ch
   140057040:	add    BYTE PTR [rax],al
   140057042:	add    BYTE PTR [rax],al
   140057044:	add    BYTE PTR [rax],al
   140057046:	add    DWORD PTR [rax+0x0],edx
   140057049:	add    BYTE PTR [rax],al
   14005704b:	add    BYTE PTR [rbx+0x0],dh
   14005704e:	movabs ds:0xff0413000e003100,eax
   140057057:	inc    DWORD PTR [rax+0x53002600]
   14005705d:	add    BYTE PTR [rcx+0x0],ah
   140057060:	jbe    0x140057062
   140057062:	add    BYTE PTR gs:[rax],al
   140057065:	add    BYTE PTR [rax],al
   140057067:	add    BYTE PTR [rax],al
   140057069:	add    BYTE PTR [rcx],al
   14005706b:	push   rax
   14005706c:	add    BYTE PTR [rax],al
   14005706e:	add    BYTE PTR [rax],al
   140057070:	test   eax,0x3100a300
   140057075:	add    BYTE PTR [rsi],cl
   140057077:	add    BYTE PTR [rdx],al
   140057079:	add    bh,bh
   14005707b:	inc    DWORD PTR [rax+0x61004300]
   140057081:	add    BYTE PTR [rsi+0x0],ch
   140057084:	movsxd eax,DWORD PTR [rax]
   140057086:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14005708b:	add    BYTE PTR [rax],al
   14005708d:	add    BYTE PTR [rax],al
   14005708f:	add    BYTE PTR [rax],al
   140057091:	add    BYTE PTR [rcx],al
   140057093:	push   rax
   140057094:	add    BYTE PTR [rax],al
   140057096:	add    BYTE PTR [rax],al
   140057098:	fild   WORD PTR [rax]
   14005709a:	movabs ds:0xffe146000e003100,eax
   1400570a3:	inc    DWORD PTR [rax+0x48002600]
   1400570a9:	add    BYTE PTR [rbp+0x0],ah
   1400570ac:	ins    BYTE PTR es:[rdi],dx
   1400570ad:	add    BYTE PTR [rax+0x0],dh
   1400570b0:	add    BYTE PTR [rax],al
   1400570b2:	add    BYTE PTR [rax],al
   1400570b4:	add    BYTE PTR [rax],0x81
   1400570b7:	push   rax
   1400570b8:	add    BYTE PTR [rax],al
   1400570ba:	add    BYTE PTR [rax],al
   1400570bc:	or     BYTE PTR [rax],al
   1400570be:	xor    BYTE PTR [rax],al
   1400570c0:	add    BYTE PTR [rax],0xe
   1400570c3:	add    BYTE PTR [rip+0xffffffff81ffff04],al        # 0xc2056fcd
   1400570c9:	add    BYTE PTR [rax],al
   1400570cb:	add    BYTE PTR [rax],al
   1400570cd:	add    BYTE PTR [rax+0x41],dl
	...
   1400570d8:	add    BYTE PTR [rax],al
   1400570da:	(bad)  
   1400570db:	add    BYTE PTR [rsi],ah
   1400570dd:	add    BYTE PTR [rcx+0x0],al
   1400570e0:	(bad)  
   1400570e1:	add    BYTE PTR [rdi+0x0],ch
   1400570e4:	jne    0x1400570e6
   1400570e6:	je     0x1400570e8
   1400570e8:	and    BYTE PTR [rax],al
   1400570ea:	push   rbx
   1400570eb:	add    BYTE PTR [rax+0x0],dh
   1400570ee:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400570f3:	add    BYTE PTR [rax],ah
   1400570f5:	add    BYTE PTR [rbp+0x0],dl
   1400570f8:	je     0x1400570fa
   1400570fa:	imul   eax,DWORD PTR [rax],0x69006c
   140057100:	je     0x140057102
   140057102:	jns    0x140057104
   140057104:	add    BYTE PTR cs:[rsi],ch
   140057107:	add    BYTE PTR [rsi],ch
   140057109:	add    BYTE PTR [rdx],al
   14005710b:	add    BYTE PTR [rbp+0x0],al
   14005710e:	rex.WRX add BYTE PTR [rax],r8b
	...
   140057121:	add    BYTE PTR [rax+0x41],dl
   140057124:	or     eax,0x70005300
   140057129:	add    BYTE PTR [rbp+0x0],ah
   14005712c:	ins    BYTE PTR es:[rdi],dx
   14005712d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140057131:	add    BYTE PTR [rbp+0x0],dl
   140057134:	je     0x140057136
   140057136:	imul   eax,DWORD PTR [rax],0x69006c
   14005713c:	je     0x14005713e
   14005713e:	jns    0x140057140
	...
   14005715c:	add    BYTE PTR [rax],al
   14005715e:	push   rax
   14005715f:	add    eax,DWORD PTR [r8]
   140057162:	add    BYTE PTR [r8+0x0],r11b
   140057166:	push   rsp
   140057167:	add    BYTE PTR [rbx],al
   140057169:	add    BYTE PTR [rbx+0x0],al
   14005716c:	add    BYTE PTR [r8+0x0],dl
   140057170:	add    eax,DWORD PTR [rax]
   140057172:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140057176:	rex.WRB add BYTE PTR [r8+rax*1],r8b
   14005717a:	push   rbx
   14005717b:	add    BYTE PTR [rbx+0x0],al
   14005717e:	push   rdx
   14005717f:	add    BYTE PTR [rax+rax*1+0x3],cl
   140057183:	add    BYTE PTR [rdi+0x0],cl
   140057186:	push   rsi
   140057187:	add    BYTE PTR [rdx+0x0],dl
   14005718a:	add    eax,DWORD PTR [rax]
   14005718c:	push   rdx
   14005718d:	add    BYTE PTR [rbp+0x0],al
   140057190:	rex.XB add BYTE PTR [rip+0x50005700],spl        # 0x19005c897
   140057197:	add    BYTE PTR [rax],ah
   140057199:	add    BYTE PTR [rsi],dh
   14005719b:	add    BYTE PTR [rsi],ch
   14005719d:	add    BYTE PTR [rax],dh
   14005719f:	add    BYTE PTR [rax],ah
   1400571a1:	add    BYTE PTR [rax+rax*1+0x69],al
   1400571a5:	add    BYTE PTR [rbx+0x0],ah
   1400571a8:	je     0x1400571aa
   1400571aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400571b0:	(bad)  
   1400571b1:	add    BYTE PTR [rdx+0x0],dh
   1400571b4:	jns    0x1400571b6
   1400571b6:	and    BYTE PTR [rax],al
   1400571b8:	je     0x1400571ba
   1400571ba:	outs   dx,DWORD PTR ds:[rsi]
   1400571bb:	add    BYTE PTR [rax],ah
   1400571bd:	add    BYTE PTR [rdi+0x0],dl
   1400571c0:	push   rax
   1400571c1:	add    BYTE PTR [rax],ah
   1400571c3:	add    BYTE PTR [rax+0x0],bl
   1400571c6:	add    BYTE PTR ss:[rax],ah
   1400571c9:	add    BYTE PTR [rax+rax*1+0x69],al
   1400571cd:	add    BYTE PTR [rbx+0x0],ah
   1400571d0:	je     0x1400571d2
   1400571d2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400571d8:	(bad)  
   1400571d9:	add    BYTE PTR [rdx+0x0],dh
   1400571dc:	jns    0x1400571de
   1400571de:	add    BYTE PTR cs:[rdi+0x0],dl
   1400571e2:	push   rax
   1400571e3:	add    BYTE PTR [rax],ah
   1400571e5:	add    BYTE PTR [rsi],dh
   1400571e7:	add    BYTE PTR [rsi],ch
   1400571e9:	add    BYTE PTR [rcx],dh
   1400571eb:	add    BYTE PTR [rax],ah
   1400571ed:	add    BYTE PTR [rax],ch
   1400571ef:	add    BYTE PTR [rdi+0x0],ch
   1400571f2:	jb     0x1400571f4
   1400571f4:	and    BYTE PTR [rax],al
   1400571f6:	ins    BYTE PTR es:[rdi],dx
   1400571f7:	add    BYTE PTR [rcx+0x0],ah
   1400571fa:	je     0x1400571fc
   1400571fc:	add    BYTE PTR gs:[rdx+0x0],dh
   140057200:	sub    DWORD PTR [rax],eax
   140057202:	and    BYTE PTR [rax],al
   140057204:	add    BYTE PTR [rcx+0x0],r13b
   140057208:	movsxd eax,DWORD PTR [rax]
   14005720a:	je     0x14005720c
   14005720c:	imul   eax,DWORD PTR [rax],0x6e006f
   140057212:	(bad)  
   140057213:	add    BYTE PTR [rdx+0x0],dh
   140057216:	jns    0x140057218
   140057218:	and    BYTE PTR [rax],al
   14005721a:	je     0x14005721c
   14005721c:	outs   dx,DWORD PTR ds:[rsi]
   14005721d:	add    BYTE PTR [rax],ah
   14005721f:	add    BYTE PTR [rdi+0x0],dl
   140057222:	push   rax
   140057223:	add    BYTE PTR [rax],ah
   140057225:	add    BYTE PTR [rax+0x0],bl
   140057228:	add    BYTE PTR ss:[rax],ah
   14005722b:	add    BYTE PTR [rax+rax*1+0x6f],al
   14005722f:	add    BYTE PTR [rbx+0x0],ah
   140057232:	jne    0x140057234
   140057234:	ins    DWORD PTR es:[rdi],dx
   140057235:	add    BYTE PTR [rbp+0x0],ah
   140057238:	outs   dx,BYTE PTR ds:[rsi]
   140057239:	add    BYTE PTR [rax+rax*1+0x22],dh
   14005723d:	add    BYTE PTR [rdi+0x0],dl
   140057240:	push   rax
   140057241:	add    BYTE PTR [rax],ah
   140057243:	add    BYTE PTR [rax+0x0],bl
   140057246:	add    BYTE PTR ss:[rax],ah
   140057249:	add    BYTE PTR [rax+rax*1+0x6f],al
   14005724d:	add    BYTE PTR [rbx+0x0],ah
   140057250:	jne    0x140057252
   140057252:	ins    DWORD PTR es:[rdi],dx
   140057253:	add    BYTE PTR [rbp+0x0],ah
   140057256:	outs   dx,BYTE PTR ds:[rsi]
   140057257:	add    BYTE PTR [rax+rax*1+0x20],dh
   14005725b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14005725f:	add    BYTE PTR [rax],ah
   140057261:	add    BYTE PTR [rdi+0x0],dl
   140057264:	push   rax
   140057265:	add    BYTE PTR [rax],ah
   140057267:	add    BYTE PTR [rax+0x0],bl
   14005726a:	add    BYTE PTR ss:[rax],ah
   14005726d:	add    BYTE PTR [rax+rax*1+0x69],al
   140057271:	add    BYTE PTR [rbx+0x0],ah
   140057274:	je     0x140057276
   140057276:	imul   eax,DWORD PTR [rax],0x6e006f
   14005727c:	(bad)  
   14005727d:	add    BYTE PTR [rdx+0x0],dh
   140057280:	jns    0x140057282
   140057282:	and    DWORD PTR [rax],eax
   140057284:	add    BYTE PTR [r14+0x0],cl
   140057288:	push   rbx
   140057289:	add    BYTE PTR [rcx+0x0],cl
   14005728c:	and    BYTE PTR [rax],al
   14005728e:	add    BYTE PTR [rdi+0x0],r13b
   140057292:	movsxd eax,DWORD PTR [rax]
   140057294:	jne    0x140057296
   140057296:	ins    DWORD PTR es:[rdi],dx
   140057297:	add    BYTE PTR [rbp+0x0],ah
   14005729a:	outs   dx,BYTE PTR ds:[rsi]
   14005729b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14005729f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400572a3:	add    BYTE PTR [rax],ah
   1400572a5:	add    BYTE PTR [rdi+0x0],dl
   1400572a8:	push   rax
   1400572a9:	add    BYTE PTR [rax],ah
   1400572ab:	add    BYTE PTR [rax+0x0],bl
   1400572ae:	add    BYTE PTR ss:[rax],ah
   1400572b1:	add    BYTE PTR [rax+rax*1+0x69],al
   1400572b5:	add    BYTE PTR [rbx+0x0],ah
   1400572b8:	je     0x1400572ba
   1400572ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400572c0:	(bad)  
   1400572c1:	add    BYTE PTR [rdx+0x0],dh
   1400572c4:	jns    0x1400572c6
   1400572c6:	and    al,BYTE PTR [rax]
   1400572c8:	add    BYTE PTR [r11+0x0],dl
   1400572cc:	rex.XB add BYTE PTR [r9+0x0],cl
   1400572d0:	rex.WB add BYTE PTR [r8],spl
   1400572d3:	add    BYTE PTR [rax+rax*1+0x6f],al
   1400572d7:	add    BYTE PTR [rbx+0x0],ah
   1400572da:	jne    0x1400572dc
   1400572dc:	ins    DWORD PTR es:[rdi],dx
   1400572dd:	add    BYTE PTR [rbp+0x0],ah
   1400572e0:	outs   dx,BYTE PTR ds:[rsi]
   1400572e1:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400572e5:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400572e9:	add    BYTE PTR [rax],ah
   1400572eb:	add    BYTE PTR [rdi+0x0],dl
   1400572ee:	push   rax
   1400572ef:	add    BYTE PTR [rax],ah
   1400572f1:	add    BYTE PTR [rax+0x0],bl
   1400572f4:	add    BYTE PTR ss:[rax],ah
   1400572f7:	add    BYTE PTR [rax+rax*1+0x69],al
   1400572fb:	add    BYTE PTR [rbx+0x0],ah
   1400572fe:	je     0x140057300
   140057300:	imul   eax,DWORD PTR [rax],0x6e006f
   140057306:	(bad)  
   140057307:	add    BYTE PTR [rdx+0x0],dh
   14005730a:	jns    0x14005730c
   14005730c:	sub    eax,0x50005700
   140057311:	add    BYTE PTR [rax],ah
   140057313:	add    BYTE PTR [rsi],dh
   140057315:	add    BYTE PTR [rsi],ch
   140057317:	add    BYTE PTR [rcx],dh
   140057319:	add    BYTE PTR [rax],ah
   14005731b:	add    BYTE PTR [rbx+0x0],dl
   14005731e:	jne    0x140057320
   140057320:	jo     0x140057322
   140057322:	and    BYTE PTR [rax],al
   140057324:	add    BYTE PTR [rcx+0x0],r13b
   140057328:	movsxd eax,DWORD PTR [rax]
   14005732a:	je     0x14005732c
   14005732c:	imul   eax,DWORD PTR [rax],0x6e006f
   140057332:	(bad)  
   140057333:	add    BYTE PTR [rdx+0x0],dh
   140057336:	jns    0x140057338
   140057338:	and    BYTE PTR [rax],al
   14005733a:	je     0x14005733c
   14005733c:	outs   dx,DWORD PTR ds:[rsi]
   14005733d:	add    BYTE PTR [rax],ah
   14005733f:	add    BYTE PTR [rdi+0x0],dl
   140057342:	push   rax
   140057343:	add    BYTE PTR [rax],ah
   140057345:	add    BYTE PTR [rax+0x0],bl
   140057348:	add    BYTE PTR ss:[rax],ah
   14005734b:	add    BYTE PTR [rbp+0x0],dl
   14005734e:	jae    0x140057350
   140057350:	add    BYTE PTR gs:[rdx+0x0],dh
   140057354:	and    BYTE PTR [rax],al
   140057356:	push   rdi
   140057357:	add    BYTE PTR [rdi+0x0],ch
   14005735a:	jb     0x14005735c
   14005735c:	add    BYTE PTR fs:[rax],ah
   14005735f:	add    BYTE PTR [rax+rax*1+0x69],cl
   140057363:	add    BYTE PTR [rbx+0x0],dh
   140057366:	je     0x140057368
   140057368:	sub    eax,0x50005700
   14005736d:	add    BYTE PTR [rax],ah
   14005736f:	add    BYTE PTR [rsi],dh
   140057371:	add    BYTE PTR [rsi],ch
   140057373:	add    BYTE PTR [rax],dh
   140057375:	add    BYTE PTR [rax],ah
   140057377:	add    BYTE PTR [rbx+0x0],dl
   14005737a:	jne    0x14005737c
   14005737c:	jo     0x14005737e
   14005737e:	and    BYTE PTR [rax],al
   140057380:	add    BYTE PTR [rcx+0x0],r13b
   140057384:	movsxd eax,DWORD PTR [rax]
   140057386:	je     0x140057388
   140057388:	imul   eax,DWORD PTR [rax],0x6e006f
   14005738e:	(bad)  
   14005738f:	add    BYTE PTR [rdx+0x0],dh
   140057392:	jns    0x140057394
   140057394:	and    BYTE PTR [rax],al
   140057396:	je     0x140057398
   140057398:	outs   dx,DWORD PTR ds:[rsi]
   140057399:	add    BYTE PTR [rax],ah
   14005739b:	add    BYTE PTR [rdi+0x0],dl
   14005739e:	push   rax
   14005739f:	add    BYTE PTR [rax],ah
   1400573a1:	add    BYTE PTR [rax+0x0],bl
   1400573a4:	add    BYTE PTR ss:[rax],ah
   1400573a7:	add    BYTE PTR [rbp+0x0],dl
   1400573aa:	jae    0x1400573ac
   1400573ac:	add    BYTE PTR gs:[rdx+0x0],dh
   1400573b0:	and    BYTE PTR [rax],al
   1400573b2:	push   rdi
   1400573b3:	add    BYTE PTR [rdi+0x0],ch
   1400573b6:	jb     0x1400573b8
   1400573b8:	add    BYTE PTR fs:[rax],ah
   1400573bb:	add    BYTE PTR [rax+rax*1+0x69],cl
   1400573bf:	add    BYTE PTR [rbx+0x0],dh
   1400573c2:	je     0x1400573c4
   1400573c4:	add    BYTE PTR es:[rdi+0x0],dl
   1400573c8:	push   rax
   1400573c9:	add    BYTE PTR [rax],ah
   1400573cb:	add    BYTE PTR [rax+0x0],bl
   1400573ce:	add    BYTE PTR ss:[rax],ah
   1400573d1:	add    BYTE PTR [rax+rax*1+0x6f],al
   1400573d5:	add    BYTE PTR [rbx+0x0],ah
   1400573d8:	jne    0x1400573da
   1400573da:	ins    DWORD PTR es:[rdi],dx
   1400573db:	add    BYTE PTR [rbp+0x0],ah
   1400573de:	outs   dx,BYTE PTR ds:[rsi]
   1400573df:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400573e3:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400573e7:	add    BYTE PTR [rax],ah
   1400573e9:	add    BYTE PTR [rdi+0x0],dl
   1400573ec:	push   rax
   1400573ed:	add    BYTE PTR [rax],ah
   1400573ef:	add    BYTE PTR [rax+0x0],bl
   1400573f2:	add    BYTE PTR ss:[rax],ah
   1400573f5:	add    BYTE PTR [rbp+0x0],dl
   1400573f8:	jae    0x1400573fa
   1400573fa:	add    BYTE PTR gs:[rdx+0x0],dh
   1400573fe:	and    BYTE PTR [rax],al
   140057400:	push   rdi
   140057401:	add    BYTE PTR [rdi+0x0],ch
   140057404:	jb     0x140057406
   140057406:	add    BYTE PTR fs:[rax],ah
   140057409:	add    BYTE PTR [rax+rax*1+0x69],cl
   14005740d:	add    BYTE PTR [rbx+0x0],dh
   140057410:	je     0x140057412
   140057412:	add    BYTE PTR es:[rdi+0x0],dl
   140057416:	push   rax
   140057417:	add    BYTE PTR [rax],ah
   140057419:	add    BYTE PTR [rax+0x0],bl
   14005741c:	add    BYTE PTR ss:[rax],ah
   14005741f:	add    BYTE PTR [rbp+0x0],dl
   140057422:	jae    0x140057424
   140057424:	add    BYTE PTR gs:[rdx+0x0],dh
   140057428:	and    BYTE PTR [rax],al
   14005742a:	push   rdi
   14005742b:	add    BYTE PTR [rdi+0x0],ch
   14005742e:	jb     0x140057430
   140057430:	add    BYTE PTR fs:[rax],ah
   140057433:	add    BYTE PTR [rax+rax*1+0x69],cl
   140057437:	add    BYTE PTR [rbx+0x0],dh
   14005743a:	je     0x14005743c
   14005743c:	and    BYTE PTR [rax],al
   14005743e:	je     0x140057440
   140057440:	outs   dx,DWORD PTR ds:[rsi]
   140057441:	add    BYTE PTR [rax],ah
   140057443:	add    BYTE PTR [rdi+0x0],dl
   140057446:	push   rax
   140057447:	add    BYTE PTR [rax],ah
   140057449:	add    BYTE PTR [rax+0x0],bl
   14005744c:	add    BYTE PTR ss:[rax],ah
   14005744f:	add    BYTE PTR [rax+rax*1+0x6f],al
   140057453:	add    BYTE PTR [rbx+0x0],ah
   140057456:	jne    0x140057458
   140057458:	ins    DWORD PTR es:[rdi],dx
   140057459:	add    BYTE PTR [rbp+0x0],ah
   14005745c:	outs   dx,BYTE PTR ds:[rsi]
   14005745d:	add    BYTE PTR [rax+rax*1+0x28],dh
   140057461:	add    BYTE PTR [rdi+0x0],dl
   140057464:	push   rax
   140057465:	add    BYTE PTR [rax],ah
   140057467:	add    BYTE PTR [rsi],dh
   140057469:	add    BYTE PTR [rsi],ch
   14005746b:	add    BYTE PTR [rax],dh
   14005746d:	add    BYTE PTR [rax],ah
   14005746f:	add    BYTE PTR [rax+rax*1+0x69],al
   140057473:	add    BYTE PTR [rbx+0x0],ah
   140057476:	je     0x140057478
   140057478:	imul   eax,DWORD PTR [rax],0x6e006f
   14005747e:	(bad)  
   14005747f:	add    BYTE PTR [rdx+0x0],dh
   140057482:	jns    0x140057484
   140057484:	and    BYTE PTR [rax],al
   140057486:	ja     0x140057488
   140057488:	imul   eax,DWORD PTR [rax],0x680074
   14005748e:	and    BYTE PTR [rax],al
   140057490:	push   rdi
   140057491:	add    BYTE PTR [rax+0x0],dl
   140057494:	and    BYTE PTR [rax],al
   140057496:	pop    rax
   140057497:	add    BYTE PTR [rsi],dh
   140057499:	add    BYTE PTR [rax],ah
   14005749b:	add    BYTE PTR [rax],ah
   14005749d:	add    BYTE PTR [rax+rax*1+0x69],al
   1400574a1:	add    BYTE PTR [rbx+0x0],ah
   1400574a4:	je     0x1400574a6
   1400574a6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400574ac:	(bad)  
   1400574ad:	add    BYTE PTR [rdx+0x0],dh
   1400574b0:	jns    0x1400574b2
   1400574b2:	push   rax
   1400574b3:	rex.B and al,0x0
   1400574b6:	push   rdi
   1400574b7:	add    BYTE PTR [rax+0x0],dl
   1400574ba:	and    BYTE PTR [rax],al
   1400574bc:	pop    rax
   1400574bd:	add    BYTE PTR [rsi],dh
   1400574bf:	add    BYTE PTR [rax],ah
   1400574c1:	add    BYTE PTR [rax+rax*1+0x6f],al
   1400574c5:	add    BYTE PTR [rbx+0x0],ah
   1400574c8:	jne    0x1400574ca
   1400574ca:	ins    DWORD PTR es:[rdi],dx
   1400574cb:	add    BYTE PTR [rbp+0x0],ah
   1400574ce:	outs   dx,BYTE PTR ds:[rsi]
   1400574cf:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400574d3:	add    BYTE PTR [rdi+0x0],dh
   1400574d6:	imul   eax,DWORD PTR [rax],0x680074
   1400574dc:	and    BYTE PTR [rax],al
   1400574de:	push   rdi
   1400574df:	add    BYTE PTR [rax+0x0],dl
   1400574e2:	and    BYTE PTR [rax],al
   1400574e4:	pop    rax
   1400574e5:	add    BYTE PTR [rsi],dh
   1400574e7:	add    BYTE PTR [rax],ah
   1400574e9:	add    BYTE PTR [rax+rax*1+0x69],al
   1400574ed:	add    BYTE PTR [rbx+0x0],ah
   1400574f0:	je     0x1400574f2
   1400574f2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400574f8:	(bad)  
   1400574f9:	add    BYTE PTR [rdx+0x0],dh
   1400574fc:	jns    0x1400574fe
   1400574fe:	and    eax,DWORD PTR [rax]
   140057500:	add    BYTE PTR [r14+0x0],cl
   140057504:	push   rbx
   140057505:	add    BYTE PTR [rcx+0x0],cl
   140057508:	and    BYTE PTR [rax],al
   14005750a:	add    BYTE PTR [rdi+0x0],r13b
   14005750e:	movsxd eax,DWORD PTR [rax]
   140057510:	jne    0x140057512
   140057512:	ins    DWORD PTR es:[rdi],dx
   140057513:	add    BYTE PTR [rbp+0x0],ah
   140057516:	outs   dx,BYTE PTR ds:[rsi]
   140057517:	add    BYTE PTR [rax+rax*1+0x20],dh
   14005751b:	add    BYTE PTR [rdi+0x0],dh
   14005751e:	imul   eax,DWORD PTR [rax],0x680074
   140057524:	and    BYTE PTR [rax],al
   140057526:	push   rdi
   140057527:	add    BYTE PTR [rax+0x0],dl
   14005752a:	and    BYTE PTR [rax],al
   14005752c:	pop    rax
   14005752d:	add    BYTE PTR [rsi],dh
   14005752f:	add    BYTE PTR [rax],ah
   140057531:	add    BYTE PTR [rax+rax*1+0x69],al
   140057535:	add    BYTE PTR [rbx+0x0],ah
   140057538:	je     0x14005753a
   14005753a:	imul   eax,DWORD PTR [rax],0x6e006f
   140057540:	(bad)  
   140057541:	add    BYTE PTR [rdx+0x0],dh
   140057544:	jns    0x140057546
   140057546:	and    al,0x0
   140057548:	add    BYTE PTR [r11+0x0],dl
   14005754c:	rex.XB add BYTE PTR [r9+0x0],cl
   140057550:	rex.WB add BYTE PTR [r8],spl
   140057553:	add    BYTE PTR [rax+rax*1+0x6f],al
   140057557:	add    BYTE PTR [rbx+0x0],ah
   14005755a:	jne    0x14005755c
   14005755c:	ins    DWORD PTR es:[rdi],dx
   14005755d:	add    BYTE PTR [rbp+0x0],ah
   140057560:	outs   dx,BYTE PTR ds:[rsi]
   140057561:	add    BYTE PTR [rax+rax*1+0x20],dh
   140057565:	add    BYTE PTR [rdi+0x0],dh
   140057568:	imul   eax,DWORD PTR [rax],0x680074
   14005756e:	and    BYTE PTR [rax],al
   140057570:	push   rdi
   140057571:	add    BYTE PTR [rax+0x0],dl
   140057574:	and    BYTE PTR [rax],al
   140057576:	pop    rax
   140057577:	add    BYTE PTR [rsi],dh
   140057579:	add    BYTE PTR [rax],ah
   14005757b:	add    BYTE PTR [rax+rax*1+0x69],al
   14005757f:	add    BYTE PTR [rbx+0x0],ah
   140057582:	je     0x140057584
   140057584:	imul   eax,DWORD PTR [rax],0x6e006f
   14005758a:	(bad)  
   14005758b:	add    BYTE PTR [rdx+0x0],dh
   14005758e:	jns    0x140057590
   140057590:	push   rdx
   140057591:	add    BYTE PTR [rax+rax*1+0x65],al
   140057595:	add    BYTE PTR [rbx+0x0],dh
   140057598:	je     0x14005759a
   14005759a:	imul   eax,DWORD PTR [rax],0x61006e
   1400575a0:	je     0x1400575a2
   1400575a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400575a8:	and    BYTE PTR [rax],al
   1400575aa:	sub    BYTE PTR [rax],al
   1400575ac:	sub    al,BYTE PTR [rax]
   1400575ae:	add    BYTE PTR cs:[rax+rax*1+0x45],cl
   1400575b3:	add    BYTE PTR [rax+0x0],bl
   1400575b6:	and    BYTE PTR [rax],al
   1400575b8:	sub    al,BYTE PTR [rax]
   1400575ba:	add    BYTE PTR cs:[rbp+0x0],cl
   1400575be:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400575c2:	and    BYTE PTR [rax],al
   1400575c4:	sub    al,BYTE PTR [rax]
   1400575c6:	add    BYTE PTR cs:[rbp+0x0],dl
   1400575ca:	push   rdi
   1400575cb:	add    BYTE PTR [rax+rax*1+0x20],cl
   1400575cf:	add    BYTE PTR [rdx],ch
   1400575d1:	add    BYTE PTR [rsi],ch
   1400575d3:	add    BYTE PTR [rdi+0x0],dl
   1400575d6:	push   rax
   1400575d7:	add    BYTE PTR [rax+rax*1+0x29],al
   1400575db:	add    BYTE PTR [rax+rax*1+0x2a],bh
   1400575df:	add    BYTE PTR [rsi],ch
   1400575e1:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400575e5:	add    BYTE PTR [rax+0x0],bh
   1400575e8:	cmp    eax,DWORD PTR [rax]
   1400575ea:	sub    al,BYTE PTR [rax]
   1400575ec:	add    BYTE PTR cs:[rbp+0x0],ch
   1400575f0:	outs   dx,DWORD PTR ds:[rsi]
   1400575f1:	add    BYTE PTR [rdx+0x0],dh
   1400575f4:	cmp    eax,DWORD PTR [rax]
   1400575f6:	sub    al,BYTE PTR [rax]
   1400575f8:	add    BYTE PTR cs:[rbp+0x0],dh
   1400575fc:	ja     0x1400575fe
   1400575fe:	ins    BYTE PTR es:[rdi],dx
   1400575ff:	add    BYTE PTR [rbx],bh
   140057601:	add    BYTE PTR [rdx],ch
   140057603:	add    BYTE PTR [rsi],ch
   140057605:	add    BYTE PTR [rdi+0x0],dh
   140057608:	jo     0x14005760a
   14005760a:	add    BYTE PTR fs:[rax+rax*1+0x41],bh
   14005760f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140057613:	add    BYTE PTR [rax],ah
   140057615:	add    BYTE PTR [rsi+0x0],al
   140057618:	imul   eax,DWORD PTR [rax],0x65006c
   14005761e:	jae    0x140057620
   140057620:	sub    BYTE PTR [rax],al
   140057622:	sub    al,BYTE PTR [rax]
   140057624:	add    BYTE PTR cs:[rdx],ch
   140057627:	add    BYTE PTR [rcx],ch
   140057629:	add    BYTE PTR [rax+rax*1+0x2a],bh
   14005762d:	add    BYTE PTR [rsi],ch
   14005762f:	add    BYTE PTR [rdx],ch
   140057631:	add    BYTE PTR [rax+rax*1+0x7c],bh
   140057635:	add    BYTE PTR [rdx+0x0],bl
   140057638:	push   rbx
   140057639:	add    BYTE PTR [rdi+0x0],ch
   14005763c:	jne    0x14005763e
   14005763e:	jb     0x140057640
   140057640:	movsxd eax,DWORD PTR [rax]
   140057642:	add    BYTE PTR gs:[rax],ah
   140057645:	add    BYTE PTR [rax],ch
   140057647:	add    BYTE PTR [rdx],ch
   140057649:	add    BYTE PTR [rsi],ch
   14005764b:	add    BYTE PTR [rax+rax*1+0x45],cl
   14005764f:	add    BYTE PTR [rax+0x0],bl
   140057652:	and    BYTE PTR [rax],al
   140057654:	sub    al,BYTE PTR [rax]
   140057656:	add    BYTE PTR cs:[rbp+0x0],cl
   14005765a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14005765e:	and    BYTE PTR [rax],al
   140057660:	sub    al,BYTE PTR [rax]
   140057662:	add    BYTE PTR cs:[rbp+0x0],dl
   140057666:	push   rdi
   140057667:	add    BYTE PTR [rax+rax*1+0x20],cl
   14005766b:	add    BYTE PTR [rdx],ch
   14005766d:	add    BYTE PTR [rsi],ch
   14005766f:	add    BYTE PTR [rdi+0x0],dl
   140057672:	push   rax
   140057673:	add    BYTE PTR [rax+rax*1+0x20],al
   140057677:	add    BYTE PTR [rdx],ch
   140057679:	add    BYTE PTR [rsi],ch
   14005767b:	add    BYTE PTR [rax+rax*1+0x58],dl
   14005767f:	add    BYTE PTR [rax+rax*1+0x29],dl
   140057683:	add    BYTE PTR [rax+rax*1+0x2a],bh
   140057687:	add    BYTE PTR [rsi],ch
   140057689:	add    BYTE PTR [rax+rax*1+0x65],ch
   14005768d:	add    BYTE PTR [rax+0x0],bh
   140057690:	cmp    eax,DWORD PTR [rax]
   140057692:	sub    al,BYTE PTR [rax]
   140057694:	add    BYTE PTR cs:[rbp+0x0],ch
   140057698:	outs   dx,DWORD PTR ds:[rsi]
   140057699:	add    BYTE PTR [rdx+0x0],dh
   14005769c:	cmp    eax,DWORD PTR [rax]
   14005769e:	sub    al,BYTE PTR [rax]
   1400576a0:	add    BYTE PTR cs:[rbp+0x0],dh
   1400576a4:	ja     0x1400576a6
   1400576a6:	ins    BYTE PTR es:[rdi],dx
   1400576a7:	add    BYTE PTR [rbx],bh
   1400576a9:	add    BYTE PTR [rax],ah
   1400576ab:	add    BYTE PTR [rdx],ch
   1400576ad:	add    BYTE PTR [rsi],ch
   1400576af:	add    BYTE PTR [rdi+0x0],dh
   1400576b2:	jo     0x1400576b4
   1400576b4:	add    BYTE PTR fs:[rbx],bh
   1400576b7:	add    BYTE PTR [rdx],ch
   1400576b9:	add    BYTE PTR [rsi],ch
   1400576bb:	add    BYTE PTR [rax+rax*1+0x78],dh
   1400576bf:	add    BYTE PTR [rax+rax*1+0x7c],dh
   1400576c3:	add    BYTE PTR [rcx+0x0],al
   1400576c6:	ins    BYTE PTR es:[rdi],dx
   1400576c7:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400576cb:	add    BYTE PTR [rsi+0x0],al
   1400576ce:	imul   eax,DWORD PTR [rax],0x65006c
   1400576d4:	jae    0x1400576d6
   1400576d6:	sub    BYTE PTR [rax],al
   1400576d8:	sub    al,BYTE PTR [rax]
   1400576da:	add    BYTE PTR cs:[rdx],ch
   1400576dd:	add    BYTE PTR [rcx],ch
   1400576df:	add    BYTE PTR [rax+rax*1+0x2a],bh
   1400576e3:	add    BYTE PTR [rsi],ch
   1400576e5:	add    BYTE PTR [rdx],ch
   1400576e7:	add    BYTE PTR [rax+rax*1+0x7c],bh
   1400576eb:	add    BYTE PTR [rsi+0x0],cl
   1400576ee:	push   rsp
   1400576ef:	add    BYTE PTR [rcx+0x0],ah
   1400576f2:	jb     0x1400576f4
   1400576f4:	add    BYTE PTR [ebp+0x0],ah
   1400576f8:	je     0x1400576fa
   1400576fa:	and    BYTE PTR [rax],al
   1400576fc:	sub    BYTE PTR [rax],al
   1400576fe:	sub    al,BYTE PTR [rax]
   140057700:	add    BYTE PTR cs:[rax+rax*1+0x45],cl
   140057705:	add    BYTE PTR [rax+0x0],bl
   140057708:	and    BYTE PTR [rax],al
   14005770a:	sub    al,BYTE PTR [rax]
   14005770c:	add    BYTE PTR cs:[rbp+0x0],cl
   140057710:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140057714:	and    BYTE PTR [rax],al
   140057716:	sub    al,BYTE PTR [rax]
   140057718:	add    BYTE PTR cs:[rbp+0x0],dl
   14005771c:	push   rdi
   14005771d:	add    BYTE PTR [rax+rax*1+0x20],cl
   140057721:	add    BYTE PTR [rdx],ch
   140057723:	add    BYTE PTR [rsi],ch
   140057725:	add    BYTE PTR [rdi+0x0],dl
   140057728:	push   rax
   140057729:	add    BYTE PTR [rax+rax*1+0x29],al
   14005772d:	add    BYTE PTR [rax+rax*1+0x2a],bh
   140057731:	add    BYTE PTR [rsi],ch
   140057733:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057737:	add    BYTE PTR [rax+0x0],bh
   14005773a:	cmp    eax,DWORD PTR [rax]
   14005773c:	sub    al,BYTE PTR [rax]
   14005773e:	add    BYTE PTR cs:[rbp+0x0],ch
   140057742:	outs   dx,DWORD PTR ds:[rsi]
   140057743:	add    BYTE PTR [rdx+0x0],dh
   140057746:	cmp    eax,DWORD PTR [rax]
   140057748:	sub    al,BYTE PTR [rax]
   14005774a:	add    BYTE PTR cs:[rbp+0x0],dh
   14005774e:	ja     0x140057750
   140057750:	ins    BYTE PTR es:[rdi],dx
   140057751:	add    BYTE PTR [rbx],bh
   140057753:	add    BYTE PTR [rax],ah
   140057755:	add    BYTE PTR [rdx],ch
   140057757:	add    BYTE PTR [rsi],ch
   140057759:	add    BYTE PTR [rdi+0x0],dh
   14005775c:	jo     0x14005775e
   14005775e:	add    BYTE PTR fs:[rax+rax*1+0x41],bh
   140057763:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140057767:	add    BYTE PTR [rax],ah
   140057769:	add    BYTE PTR [rsi+0x0],al
   14005776c:	imul   eax,DWORD PTR [rax],0x65006c
   140057772:	jae    0x140057774
   140057774:	sub    BYTE PTR [rax],al
   140057776:	sub    al,BYTE PTR [rax]
   140057778:	add    BYTE PTR cs:[rdx],ch
   14005777b:	add    BYTE PTR [rcx],ch
   14005777d:	add    BYTE PTR [rax+rax*1+0x2a],bh
   140057781:	add    BYTE PTR [rsi],ch
   140057783:	add    BYTE PTR [rdx],ch
   140057785:	add    BYTE PTR [rax+rax*1+0x7c],bh
   140057789:	add    BYTE PTR [rip+0x6f005300],dh        # 0x1af05ca8f
   14005778f:	add    BYTE PTR [rbp+0x0],dh
   140057792:	jb     0x140057794
   140057794:	movsxd eax,DWORD PTR [rax]
   140057796:	add    BYTE PTR gs:[rax],ah
   140057799:	add    BYTE PTR [rax],ch
   14005779b:	add    BYTE PTR [rdx],ch
   14005779d:	add    BYTE PTR [rsi],ch
   14005779f:	add    BYTE PTR [rax+rax*1+0x45],cl
   1400577a3:	add    BYTE PTR [rax+0x0],bl
   1400577a6:	and    BYTE PTR [rax],al
   1400577a8:	sub    al,BYTE PTR [rax]
   1400577aa:	add    BYTE PTR cs:[rbp+0x0],cl
   1400577ae:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400577b2:	sub    DWORD PTR [rax],eax
   1400577b4:	jl     0x1400577b6
   1400577b6:	sub    al,BYTE PTR [rax]
   1400577b8:	add    BYTE PTR cs:[rax+rax*1+0x65],ch
   1400577bd:	add    BYTE PTR [rax+0x0],bh
   1400577c0:	cmp    eax,DWORD PTR [rax]
   1400577c2:	sub    al,BYTE PTR [rax]
   1400577c4:	add    BYTE PTR cs:[rbp+0x0],ch
   1400577c8:	outs   dx,DWORD PTR ds:[rsi]
   1400577c9:	add    BYTE PTR [rdx+0x0],dh
   1400577cc:	jl     0x1400577ce
   1400577ce:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   1400577d3:	add    BYTE PTR [rax],ah
   1400577d5:	add    BYTE PTR [rsi+0x0],al
   1400577d8:	imul   eax,DWORD PTR [rax],0x65006c
   1400577de:	jae    0x1400577e0
   1400577e0:	sub    BYTE PTR [rax],al
   1400577e2:	sub    al,BYTE PTR [rax]
   1400577e4:	add    BYTE PTR cs:[rdx],ch
   1400577e7:	add    BYTE PTR [rcx],ch
   1400577e9:	add    BYTE PTR [rax+rax*1+0x2a],bh
   1400577ed:	add    BYTE PTR [rsi],ch
   1400577ef:	add    BYTE PTR [rdx],ch
   1400577f1:	add    BYTE PTR [rax+rax*1+0x7c],bh
   1400577f5:	add    BYTE PTR [rsi],al
   1400577f7:	add    BYTE PTR [rbx+0x0],al
   1400577fa:	(bad)  
   1400577fb:	add    BYTE PTR [rsi+0x0],ch
   1400577fe:	movsxd eax,DWORD PTR [rax]
   140057800:	add    BYTE PTR gs:[rax+rax*1+0x5],ch
   140057805:	add    BYTE PTR [rbx+0x0],al
   140057808:	ins    BYTE PTR es:[rdi],dx
   140057809:	add    BYTE PTR [rdi+0x0],ch
   14005780c:	jae    0x14005780e
   14005780e:	add    BYTE PTR gs:[rax+rax*1],bl
   140057812:	add    BYTE PTR [r14+0x0],bpl
   140057816:	and    BYTE PTR [rax],al
   140057818:	jne    0x14005781a
   14005781a:	outs   dx,BYTE PTR ds:[rsi]
   14005781b:	add    BYTE PTR [rbx+0x0],ch
   14005781e:	outs   dx,DWORD PTR ds:[rsi]
   14005781f:	add    BYTE PTR [rdi+0x0],dh
   140057822:	outs   dx,BYTE PTR ds:[rsi]
   140057823:	add    BYTE PTR [rax],ah
   140057825:	add    BYTE PTR [rbp+0x0],ah
   140057828:	jb     0x14005782a
   14005782a:	jb     0x14005782c
   14005782c:	outs   dx,DWORD PTR ds:[rsi]
   14005782d:	add    BYTE PTR [rdx+0x0],dh
   140057830:	and    BYTE PTR [rax],al
   140057832:	push   0x73006100
   140057837:	add    BYTE PTR [rax],ah
   140057839:	add    BYTE PTR [rdi+0x0],ch
   14005783c:	movsxd eax,DWORD PTR [rax]
   14005783e:	movsxd eax,DWORD PTR [rax]
   140057840:	jne    0x140057842
   140057842:	jb     0x140057844
   140057844:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057849:	add    BYTE PTR [rdx],dl
   14005784b:	add    BYTE PTR [rdx+0x0],dl
   14005784e:	add    BYTE PTR gs:[rcx+0x0],dh
   140057852:	jne    0x140057854
   140057854:	add    BYTE PTR gs:[rbx+0x0],dh
   140057858:	je     0x14005785a
   14005785a:	and    BYTE PTR [rax],al
   14005785c:	movsxd eax,DWORD PTR [rax]
   14005785e:	outs   dx,DWORD PTR ds:[rsi]
   14005785f:	add    BYTE PTR [rbp+0x0],ch
   140057862:	jo     0x140057864
   140057864:	ins    BYTE PTR es:[rdi],dx
   140057865:	add    BYTE PTR [rbp+0x0],ah
   140057868:	je     0x14005786a
   14005786a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14005786f:	add    BYTE PTR [rbp+0x20004100],cl
   140057875:	add    BYTE PTR [rsi+0x0],ah
   140057878:	imul   eax,DWORD PTR [rax],0x65006c
   14005787e:	and    BYTE PTR [rax],al
   140057880:	jb     0x140057882
   140057882:	add    BYTE PTR gs:[rcx+0x0],ah
   140057886:	add    BYTE PTR fs:[rdi],ch
   140057889:	add    BYTE PTR [rdi+0x0],dh
   14005788c:	jb     0x14005788e
   14005788e:	imul   eax,DWORD PTR [rax],0x650074
   140057894:	and    BYTE PTR [rax],al
   140057896:	add    BYTE PTR gs:[rdx+0x0],dh
   14005789a:	jb     0x14005789c
   14005789c:	outs   dx,DWORD PTR ds:[rsi]
   14005789d:	add    BYTE PTR [rdx+0x0],dh
   1400578a0:	and    BYTE PTR [rax],al
   1400578a2:	push   0x73006100
   1400578a7:	add    BYTE PTR [rax],ah
   1400578a9:	add    BYTE PTR [rdi+0x0],ch
   1400578ac:	movsxd eax,DWORD PTR [rax]
   1400578ae:	movsxd eax,DWORD PTR [rax]
   1400578b0:	jne    0x1400578b2
   1400578b2:	jb     0x1400578b4
   1400578b4:	jb     0x1400578b6
   1400578b6:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400578bb:	add    BYTE PTR [rax],ah
   1400578bd:	add    BYTE PTR [rax+0x0],dl
   1400578c0:	ins    BYTE PTR es:[rdi],dx
   1400578c1:	add    BYTE PTR [rbp+0x0],ah
   1400578c4:	(bad)  
   1400578c5:	add    BYTE PTR [rbx+0x0],dh
   1400578c8:	add    BYTE PTR gs:[rax],ah
   1400578cb:	add    BYTE PTR [rbp+0x0],ch
   1400578ce:	(bad)  
   1400578cf:	add    BYTE PTR [rbx+0x0],ch
   1400578d2:	add    BYTE PTR gs:[rax],ah
   1400578d5:	add    BYTE PTR [rbx+0x0],dh
   1400578d8:	jne    0x1400578da
   1400578da:	jb     0x1400578dc
   1400578dc:	add    BYTE PTR gs:[rax],ah
   1400578df:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400578e3:	add    BYTE PTR [rcx+0x0],ah
   1400578e6:	je     0x1400578e8
   1400578e8:	and    BYTE PTR [rax],al
   1400578ea:	je     0x1400578ec
   1400578ec:	push   0x20006500
   1400578f1:	add    BYTE PTR [rsi+0x0],ah
   1400578f4:	imul   eax,DWORD PTR [rax],0x65006c
   1400578fa:	and    BYTE PTR [rax],al
   1400578fc:	imul   eax,DWORD PTR [rax],0x200073
   140057902:	imul   eax,DWORD PTR [rax],0x20006e
   140057908:	je     0x14005790a
   14005790a:	push   0x20006500
   14005790f:	add    BYTE PTR [rbx+0x0],dh
   140057912:	jo     0x140057914
   140057914:	add    BYTE PTR gs:[rbx+0x0],ah
   140057918:	imul   eax,DWORD PTR [rax],0x690066
   14005791e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140057923:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140057927:	add    BYTE PTR [rbx+0x0],ah
   14005792a:	(bad)  
   14005792b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005792f:	add    BYTE PTR [rdi+0x0],ch
   140057932:	outs   dx,BYTE PTR ds:[rsi]
   140057933:	add    BYTE PTR [rax],ah
   140057935:	add    BYTE PTR [rcx+0x0],ah
   140057938:	outs   dx,BYTE PTR ds:[rsi]
   140057939:	add    BYTE PTR [rax+rax*1+0x20],ah
   14005793d:	add    BYTE PTR [rax+rax*1+0x68],dh
   140057941:	add    BYTE PTR [rcx+0x0],ah
   140057944:	je     0x140057946
   140057946:	and    BYTE PTR [rax],al
   140057948:	jns    0x14005794a
   14005794a:	outs   dx,DWORD PTR ds:[rsi]
   14005794b:	add    BYTE PTR [rbp+0x0],dh
   14005794e:	and    BYTE PTR [rax],al
   140057950:	push   0x76006100
   140057955:	add    BYTE PTR [rbp+0x0],ah
   140057958:	and    BYTE PTR [rax],al
   14005795a:	ja     0x14005795c
   14005795c:	jb     0x14005795e
   14005795e:	imul   eax,DWORD PTR [rax],0x650074
   140057964:	sub    eax,0x65006c00
   140057969:	add    BYTE PTR [rsi+0x0],dh
   14005796c:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140057971:	add    BYTE PTR [rcx+0x0],ah
   140057974:	movsxd eax,DWORD PTR [rax]
   140057976:	movsxd eax,DWORD PTR [rax]
   140057978:	add    BYTE PTR gs:[rbx+0x0],dh
   14005797c:	jae    0x14005797e
   14005797e:	and    BYTE PTR [rax],al
   140057980:	je     0x140057982
   140057982:	outs   dx,DWORD PTR ds:[rsi]
   140057983:	add    BYTE PTR [rax],ah
   140057985:	add    BYTE PTR [rcx+0x0],ch
   140057988:	je     0x14005798a
   14005798a:	add    BYTE PTR cs:[rsi],cl
   14005798d:	add    BYTE PTR [rdi+0x0],cl
   140057990:	jne    0x140057992
   140057992:	je     0x140057994
   140057994:	and    BYTE PTR [rax],al
   140057996:	outs   dx,DWORD PTR ds:[rsi]
   140057997:	add    BYTE PTR [rsi+0x0],ah
   14005799a:	and    BYTE PTR [rax],al
   14005799c:	ins    DWORD PTR es:[rdi],dx
   14005799d:	add    BYTE PTR [rbp+0x0],ah
   1400579a0:	ins    DWORD PTR es:[rdi],dx
   1400579a1:	add    BYTE PTR [rdi+0x0],ch
   1400579a4:	jb     0x1400579a6
   1400579a6:	jns    0x1400579a8
   1400579a8:	add    BYTE PTR cs:[rcx],ch
   1400579ab:	add    BYTE PTR [rbp+0x0],dl
   1400579ae:	outs   dx,BYTE PTR ds:[rsi]
   1400579af:	add    BYTE PTR [rcx+0x0],ah
   1400579b2:	(bad)  
   1400579b3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400579b7:	add    BYTE PTR [rax],ah
   1400579b9:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400579bd:	add    BYTE PTR [rax],ah
   1400579bf:	add    BYTE PTR [rcx+0x0],ah
   1400579c2:	add    BYTE PTR fs:[rax+rax*1+0x20],ah
   1400579c7:	add    BYTE PTR [rcx+0x0],ah
   1400579ca:	ins    BYTE PTR es:[rdi],dx
   1400579cb:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400579cf:	add    BYTE PTR [rdi+0x0],ch
   1400579d2:	data16 add BYTE PTR [rax],ah
   1400579d5:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400579d9:	add    BYTE PTR [rbp+0x0],ah
   1400579dc:	and    BYTE PTR [rax],al
   1400579de:	ja     0x1400579e0
   1400579e0:	outs   dx,DWORD PTR ds:[rsi]
   1400579e1:	add    BYTE PTR [rdx+0x0],dh
   1400579e4:	add    BYTE PTR fs:[rbx+0x0],dh
   1400579e8:	and    BYTE PTR [rax],al
   1400579ea:	jb     0x1400579ec
   1400579ec:	add    BYTE PTR gs:[rcx+0x0],dh
   1400579f0:	jne    0x1400579f2
   1400579f2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400579f6:	je     0x1400579f8
   1400579f8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400579fd:	add    BYTE PTR [rbx],bl
   1400579ff:	add    BYTE PTR [rdx+0x0],dl
   140057a02:	add    BYTE PTR gs:[rcx+0x0],dh
   140057a06:	jne    0x140057a08
   140057a08:	add    BYTE PTR gs:[rbx+0x0],dh
   140057a0c:	je     0x140057a0e
   140057a0e:	and    BYTE PTR [rax],al
   140057a10:	je     0x140057a12
   140057a12:	add    BYTE PTR gs:[rdx+0x0],dh
   140057a16:	ins    DWORD PTR es:[rdi],dx
   140057a17:	add    BYTE PTR [rcx+0x0],ch
   140057a1a:	outs   dx,BYTE PTR ds:[rsi]
   140057a1b:	add    BYTE PTR [rcx+0x0],ah
   140057a1e:	je     0x140057a20
   140057a20:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140057a25:	add    BYTE PTR [rdx+0x0],ah
   140057a28:	jns    0x140057a2a
   140057a2a:	and    BYTE PTR [rax],al
   140057a2c:	jne    0x140057a2e
   140057a2e:	jae    0x140057a30
   140057a30:	add    BYTE PTR gs:[rdx+0x0],dh
   140057a34:	add    BYTE PTR cs:[rdx],bl
   140057a37:	add    BYTE PTR [rbp+0x0],dl
   140057a3a:	outs   dx,BYTE PTR ds:[rsi]
   140057a3b:	add    BYTE PTR [rcx+0x0],ah
   140057a3e:	(bad)  
   140057a3f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057a43:	add    BYTE PTR [rax],ah
   140057a45:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140057a49:	add    BYTE PTR [rax],ah
   140057a4b:	add    BYTE PTR [rbp+0x0],ch
   140057a4e:	add    BYTE PTR gs:[rdx+0x0],dh
   140057a52:	add    BYTE PTR [ebp+0x0],ah
   140057a56:	and    BYTE PTR [rax],al
   140057a58:	(bad)  
   140057a59:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140057a5d:	add    BYTE PTR [rax],ah
   140057a5f:	add    BYTE PTR [rbx+0x0],ah
   140057a62:	outs   dx,DWORD PTR ds:[rsi]
   140057a63:	add    BYTE PTR [rax+rax*1+0x65],ah
   140057a67:	add    BYTE PTR [rbx+0x0],dh
   140057a6a:	add    BYTE PTR cs:[rbx],bl
   140057a6d:	add    BYTE PTR [rbp+0x0],dl
   140057a70:	outs   dx,BYTE PTR ds:[rsi]
   140057a71:	add    BYTE PTR [rcx+0x0],ah
   140057a74:	(bad)  
   140057a75:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057a79:	add    BYTE PTR [rax],ah
   140057a7b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140057a7f:	add    BYTE PTR [rax],ah
   140057a81:	add    BYTE PTR [rdi+0x0],ch
   140057a84:	jo     0x140057a86
   140057a86:	add    BYTE PTR gs:[rsi+0x0],ch
   140057a8a:	and    BYTE PTR [rax],al
   140057a8c:	jae    0x140057a8e
   140057a8e:	outs   dx,DWORD PTR ds:[rsi]
   140057a8f:	add    BYTE PTR [rbp+0x0],dh
   140057a92:	jb     0x140057a94
   140057a94:	movsxd eax,DWORD PTR [rax]
   140057a96:	add    BYTE PTR gs:[rax],ah
   140057a99:	add    BYTE PTR [rsi+0x0],ah
   140057a9c:	imul   eax,DWORD PTR [rax],0x65006c
   140057aa2:	add    BYTE PTR cs:[rcx],ch
   140057aa5:	add    BYTE PTR [rsi+0x0],cl
   140057aa8:	outs   dx,DWORD PTR ds:[rsi]
   140057aa9:	add    BYTE PTR [rax],ah
   140057aab:	add    BYTE PTR [rdi+0x0],dh
   140057aae:	outs   dx,DWORD PTR ds:[rsi]
   140057aaf:	add    BYTE PTR [rdx+0x0],dh
   140057ab2:	add    BYTE PTR fs:[rbx+0x0],dh
   140057ab6:	and    BYTE PTR [rax],al
   140057ab8:	je     0x140057aba
   140057aba:	outs   dx,DWORD PTR ds:[rsi]
   140057abb:	add    BYTE PTR [rax],ah
   140057abd:	add    BYTE PTR [rax+0x0],dh
   140057ac0:	jb     0x140057ac2
   140057ac2:	outs   dx,DWORD PTR ds:[rsi]
   140057ac3:	add    BYTE PTR [rbx+0x0],ah
   140057ac6:	add    BYTE PTR gs:[rbx+0x0],dh
   140057aca:	jae    0x140057acc
   140057acc:	and    BYTE PTR [rax],al
   140057ace:	ja     0x140057ad0
   140057ad0:	imul   eax,DWORD PTR [rax],0x680074
   140057ad6:	and    BYTE PTR [rax],al
   140057ad8:	je     0x140057ada
   140057ada:	push   0x20006500
   140057adf:	add    BYTE PTR [rbx+0x0],dh
   140057ae2:	outs   dx,DWORD PTR ds:[rsi]
   140057ae3:	add    BYTE PTR [rbp+0x0],dh
   140057ae6:	jb     0x140057ae8
   140057ae8:	movsxd eax,DWORD PTR [rax]
   140057aea:	add    BYTE PTR gs:[rax],ah
   140057aed:	add    BYTE PTR [rsi+0x0],ah
   140057af0:	imul   eax,DWORD PTR [rax],0x65006c
   140057af6:	add    BYTE PTR cs:[rip+0x53002600],al        # 0x19305a0fd
   140057afd:	add    BYTE PTR [rcx+0x0],ah
   140057b00:	jbe    0x140057b02
   140057b02:	add    BYTE PTR gs:[rip+0x4f002600],al        # 0x18f05a109
   140057b09:	add    BYTE PTR [rax+0x0],dh
   140057b0c:	add    BYTE PTR gs:[rsi+0x0],ch
   140057b10:	add    al,0x0
   140057b12:	add    BYTE PTR es:[rcx+0x0],al
   140057b16:	add    BYTE PTR fs:[rax+rax*1+0x7],ah
   140057b1b:	add    BYTE PTR [rsi],ah
   140057b1d:	add    BYTE PTR [rax+rax*1+0x65],al
   140057b21:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057b25:	add    BYTE PTR [rax+rax*1+0x65],dh
   140057b29:	add    BYTE PTR [rcx],bl
   140057b2b:	add    BYTE PTR [rsi+0x0],cl
   140057b2e:	outs   dx,DWORD PTR ds:[rsi]
   140057b2f:	add    BYTE PTR [rax],ah
   140057b31:	add    BYTE PTR [rbx+0x0],dh
   140057b34:	outs   dx,DWORD PTR ds:[rsi]
   140057b35:	add    BYTE PTR [rbp+0x0],dh
   140057b38:	jb     0x140057b3a
   140057b3a:	movsxd eax,DWORD PTR [rax]
   140057b3c:	add    BYTE PTR gs:[rax],ah
   140057b3f:	add    BYTE PTR [rsi+0x0],ah
   140057b42:	imul   eax,DWORD PTR [rax],0x65006c
   140057b48:	and    BYTE PTR [rax],al
   140057b4a:	jae    0x140057b4c
   140057b4c:	jo     0x140057b4e
   140057b4e:	add    BYTE PTR gs:[rbx+0x0],ah
   140057b52:	imul   eax,DWORD PTR [rax],0x690066
   140057b58:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057b5d:	add    BYTE PTR [rcx],bl
   140057b5f:	add    BYTE PTR [rsi+0x0],cl
   140057b62:	outs   dx,DWORD PTR ds:[rsi]
   140057b63:	add    BYTE PTR [rax],ah
   140057b65:	add    BYTE PTR [rax+rax*1+0x61],dh
   140057b69:	add    BYTE PTR [rdx+0x0],dh
   140057b6c:	add    BYTE PTR [ebp+0x0],ah
   140057b70:	je     0x140057b72
   140057b72:	and    BYTE PTR [rax],al
   140057b74:	data16 add BYTE PTR [rcx+0x0],ch
   140057b78:	ins    BYTE PTR es:[rdi],dx
   140057b79:	add    BYTE PTR [rbp+0x0],ah
   140057b7c:	and    BYTE PTR [rax],al
   140057b7e:	jae    0x140057b80
   140057b80:	jo     0x140057b82
   140057b82:	add    BYTE PTR gs:[rbx+0x0],ah
   140057b86:	imul   eax,DWORD PTR [rax],0x690066
   140057b8c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057b91:	add    BYTE PTR [rdx],dl
   140057b93:	add    BYTE PTR [rdx+0x0],al
   140057b96:	(bad)  
   140057b97:	add    BYTE PTR [rax+rax*1+0x20],ah
   140057b9b:	add    BYTE PTR [rax+rax*1+0x79],dh
   140057b9f:	add    BYTE PTR [rax+0x0],dh
   140057ba2:	add    BYTE PTR gs:[rax],ah
   140057ba5:	add    BYTE PTR [rbx+0x0],dh
   140057ba8:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140057bad:	add    BYTE PTR [rbx+0x0],ah
   140057bb0:	je     0x140057bb2
   140057bb2:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057bb7:	add    BYTE PTR [rsi],bl
   140057bb9:	add    BYTE PTR [rsi+0x0],cl
   140057bbc:	outs   dx,DWORD PTR ds:[rsi]
   140057bbd:	add    BYTE PTR [rax],ah
   140057bbf:	add    BYTE PTR [rax+rax*1+0x65],ah
   140057bc3:	add    BYTE PTR [rbx+0x0],dh
   140057bc6:	je     0x140057bc8
   140057bc8:	imul   eax,DWORD PTR [rax],0x61006e
   140057bce:	je     0x140057bd0
   140057bd0:	imul   eax,DWORD PTR [rax],0x6e006f
   140057bd6:	and    BYTE PTR [rax],al
   140057bd8:	data16 add BYTE PTR [rcx+0x0],ch
   140057bdc:	ins    BYTE PTR es:[rdi],dx
   140057bdd:	add    BYTE PTR [rbp+0x0],ah
   140057be0:	and    BYTE PTR [rax],al
   140057be2:	jae    0x140057be4
   140057be4:	jo     0x140057be6
   140057be6:	add    BYTE PTR gs:[rbx+0x0],ah
   140057bea:	imul   eax,DWORD PTR [rax],0x690066
   140057bf0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057bf5:	add    BYTE PTR [rcx],ah
   140057bf7:	add    BYTE PTR [rbp+0x0],dl
   140057bfa:	outs   dx,BYTE PTR ds:[rsi]
   140057bfb:	add    BYTE PTR [rcx+0x0],ah
   140057bfe:	(bad)  
   140057bff:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057c03:	add    BYTE PTR [rax],ah
   140057c05:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140057c09:	add    BYTE PTR [rax],ah
   140057c0b:	add    BYTE PTR [rbx+0x0],ah
   140057c0e:	jb     0x140057c10
   140057c10:	add    BYTE PTR gs:[rcx+0x0],ah
   140057c14:	je     0x140057c16
   140057c16:	add    BYTE PTR gs:[rax],ah
   140057c19:	add    BYTE PTR [rax+rax*1+0x65],ah
   140057c1d:	add    BYTE PTR [rbx+0x0],dh
   140057c20:	je     0x140057c22
   140057c22:	imul   eax,DWORD PTR [rax],0x61006e
   140057c28:	je     0x140057c2a
   140057c2a:	imul   eax,DWORD PTR [rax],0x6e006f
   140057c30:	and    BYTE PTR [rax],al
   140057c32:	data16 add BYTE PTR [rcx+0x0],ch
   140057c36:	ins    BYTE PTR es:[rdi],dx
   140057c37:	add    BYTE PTR [rbp+0x0],ah
   140057c3a:	adc    al,BYTE PTR [rax]
   140057c3c:	push   rbp
   140057c3d:	add    BYTE PTR [rsi+0x0],ch
   140057c40:	(bad)  
   140057c41:	add    BYTE PTR [rdx+0x0],ah
   140057c44:	ins    BYTE PTR es:[rdi],dx
   140057c45:	add    BYTE PTR [rbp+0x0],ah
   140057c48:	and    BYTE PTR [rax],al
   140057c4a:	je     0x140057c4c
   140057c4c:	outs   dx,DWORD PTR ds:[rsi]
   140057c4d:	add    BYTE PTR [rax],ah
   140057c4f:	add    BYTE PTR [rbx+0x0],ah
   140057c52:	outs   dx,DWORD PTR ds:[rsi]
   140057c53:	add    BYTE PTR [rsi+0x0],ch
   140057c56:	jbe    0x140057c58
   140057c58:	add    BYTE PTR gs:[rdx+0x0],dh
   140057c5c:	je     0x140057c5e
   140057c5e:	add    BYTE PTR cs:[rsi],bh
   140057c61:	add    BYTE PTR [rax+rax*1+0x68],dl
   140057c65:	add    BYTE PTR [rbp+0x0],ah
   140057c68:	and    BYTE PTR [rax],al
   140057c6a:	add    BYTE PTR fs:[rbp+0x0],ah
   140057c6e:	jae    0x140057c70
   140057c70:	je     0x140057c72
   140057c72:	imul   eax,DWORD PTR [rax],0x61006e
   140057c78:	je     0x140057c7a
   140057c7a:	imul   eax,DWORD PTR [rax],0x6e006f
   140057c80:	and    BYTE PTR [rax],al
   140057c82:	data16 add BYTE PTR [rcx+0x0],ch
   140057c86:	ins    BYTE PTR es:[rdi],dx
   140057c87:	add    BYTE PTR [rbp+0x0],ah
   140057c8a:	and    BYTE PTR [rax],al
   140057c8c:	(bad)  
   140057c8d:	add    BYTE PTR [rax+rax*1+0x72],ch
   140057c91:	add    BYTE PTR [rbp+0x0],ah
   140057c94:	(bad)  
   140057c95:	add    BYTE PTR [rax+rax*1+0x79],ah
   140057c99:	add    BYTE PTR [rax],ah
   140057c9b:	add    BYTE PTR [rbp+0x0],ah
   140057c9e:	js     0x140057ca0
   140057ca0:	imul   eax,DWORD PTR [rax],0x730074
   140057ca6:	and    DWORD PTR [rax],eax
   140057ca8:	or     al,BYTE PTR [rax]
   140057caa:	add    BYTE PTR [rdi+0x0],r13b
   140057cae:	and    BYTE PTR [rax],al
   140057cb0:	jns    0x140057cb2
   140057cb2:	outs   dx,DWORD PTR ds:[rsi]
   140057cb3:	add    BYTE PTR [rbp+0x0],dh
   140057cb6:	and    BYTE PTR [rax],al
   140057cb8:	ja     0x140057cba
   140057cba:	(bad)  
   140057cbb:	add    BYTE PTR [rsi+0x0],ch
   140057cbe:	je     0x140057cc0
   140057cc0:	and    BYTE PTR [rax],al
   140057cc2:	je     0x140057cc4
   140057cc4:	outs   dx,DWORD PTR ds:[rsi]
   140057cc5:	add    BYTE PTR [rax],ah
   140057cc7:	add    BYTE PTR [rdx+0x0],dh
   140057cca:	add    BYTE PTR gs:[rax+0x0],dh
   140057cce:	ins    BYTE PTR es:[rdi],dx
   140057ccf:	add    BYTE PTR [rcx+0x0],ah
   140057cd2:	movsxd eax,DWORD PTR [rax]
   140057cd4:	add    BYTE PTR gs:[rax],ah
   140057cd7:	add    BYTE PTR [rcx+0x0],ch
   140057cda:	je     0x140057cdc
   140057cdc:	(bad)  
   140057cdd:	add    BYTE PTR [rax],dh
   140057cdf:	add    BYTE PTR [rbp+0x0],dl
   140057ce2:	outs   dx,BYTE PTR ds:[rsi]
   140057ce3:	add    BYTE PTR [rcx+0x0],ah
   140057ce6:	(bad)  
   140057ce7:	add    BYTE PTR [rax+rax*1+0x65],ch
   140057ceb:	add    BYTE PTR [rax],ah
   140057ced:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140057cf1:	add    BYTE PTR [rax],ah
   140057cf3:	add    BYTE PTR [rbx+0x0],al
   140057cf6:	outs   dx,DWORD PTR ds:[rsi]
   140057cf7:	add    BYTE PTR [rbp+0x0],ch
   140057cfa:	jo     0x140057cfc
   140057cfc:	ins    BYTE PTR es:[rdi],dx
   140057cfd:	add    BYTE PTR [rbp+0x0],ah
   140057d00:	je     0x140057d02
   140057d02:	add    BYTE PTR gs:[rsi],ch
   140057d05:	add    BYTE PTR [rdx],cl
   140057d07:	add    BYTE PTR [rbp+0x0],cl
   140057d0a:	jne    0x140057d0c
   140057d0c:	ins    BYTE PTR es:[rdi],dx
   140057d0d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140057d11:	add    BYTE PTR [rip+0x6f007700],ch        # 0x1af05f417
   140057d17:	add    BYTE PTR [rdx+0x0],dh
   140057d1a:	add    BYTE PTR fs:[rbx+0x0],dh
   140057d1e:	and    BYTE PTR [rax],al
   140057d20:	(bad)  
   140057d21:	add    BYTE PTR [rdx+0x0],dh
   140057d24:	add    BYTE PTR gs:[rax],ah
   140057d27:	add    BYTE PTR [rsi+0x0],ch
   140057d2a:	outs   dx,DWORD PTR ds:[rsi]
   140057d2b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140057d2f:	add    BYTE PTR [rcx+0x0],ah
   140057d32:	ins    BYTE PTR es:[rdi],dx
   140057d33:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140057d37:	add    BYTE PTR [rdi+0x0],dh
   140057d3a:	add    BYTE PTR gs:[rax+rax*1+0x21],ah
   140057d3f:	add    BYTE PTR [rax],ch
   140057d41:	add    BYTE PTR [rax+rax*1+0x68],dl
   140057d45:	add    BYTE PTR [rbp+0x0],ah
   140057d48:	and    BYTE PTR [rax],al
   140057d4a:	jae    0x140057d4c
   140057d4c:	outs   dx,DWORD PTR ds:[rsi]
   140057d4d:	add    BYTE PTR [rbp+0x0],dh
   140057d50:	jb     0x140057d52
   140057d52:	movsxd eax,DWORD PTR [rax]
   140057d54:	add    BYTE PTR gs:[rax],ah
   140057d57:	add    BYTE PTR [rsi+0x0],ah
   140057d5a:	imul   eax,DWORD PTR [rax],0x65006c
   140057d60:	and    BYTE PTR [rax],al
   140057d62:	data16 add BYTE PTR [rdi+0x0],ch
   140057d66:	jb     0x140057d68
   140057d68:	ins    DWORD PTR es:[rdi],dx
   140057d69:	add    BYTE PTR [rcx+0x0],ah
   140057d6c:	je     0x140057d6e
   140057d6e:	and    BYTE PTR [rax],al
   140057d70:	imul   eax,DWORD PTR [rax],0x200073
   140057d76:	outs   dx,BYTE PTR ds:[rsi]
   140057d77:	add    BYTE PTR [rdi+0x0],ch
   140057d7a:	je     0x140057d7c
   140057d7c:	and    BYTE PTR [rax],al
   140057d7e:	jae    0x140057d80
   140057d80:	jne    0x140057d82
   140057d82:	jo     0x140057d84
   140057d84:	jo     0x140057d86
   140057d86:	outs   dx,DWORD PTR ds:[rsi]
   140057d87:	add    BYTE PTR [rdx+0x0],dh
   140057d8a:	je     0x140057d8c
   140057d8c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140057d91:	add    BYTE PTR [rip+0x6f005300],dh        # 0x1af05d097
   140057d97:	add    BYTE PTR [rbp+0x0],dh
   140057d9a:	jb     0x140057d9c
   140057d9c:	movsxd eax,DWORD PTR [rax]
   140057d9e:	add    BYTE PTR gs:[rax],ah
   140057da1:	add    BYTE PTR [rax],ch
   140057da3:	add    BYTE PTR [rdx],ch
   140057da5:	add    BYTE PTR [rsi],ch
   140057da7:	add    BYTE PTR [rax+rax*1+0x45],cl
   140057dab:	add    BYTE PTR [rax+0x0],bl
   140057dae:	and    BYTE PTR [rax],al
   140057db0:	sub    al,BYTE PTR [rax]
   140057db2:	add    BYTE PTR cs:[rbp+0x0],cl
   140057db6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140057dba:	sub    DWORD PTR [rax],eax
   140057dbc:	jl     0x140057dbe
   140057dbe:	sub    al,BYTE PTR [rax]
   140057dc0:	add    BYTE PTR cs:[rax+rax*1+0x65],ch
   140057dc5:	add    BYTE PTR [rax+0x0],bh
   140057dc8:	cmp    eax,DWORD PTR [rax]
   140057dca:	sub    al,BYTE PTR [rax]
   140057dcc:	add    BYTE PTR cs:[rbp+0x0],ch
   140057dd0:	outs   dx,DWORD PTR ds:[rsi]
   140057dd1:	add    BYTE PTR [rdx+0x0],dh
   140057dd4:	jl     0x140057dd6
   140057dd6:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   140057ddb:	add    BYTE PTR [rax],ah
   140057ddd:	add    BYTE PTR [rsi+0x0],al
   140057de0:	imul   eax,DWORD PTR [rax],0x65006c
   140057de6:	jae    0x140057de8
   140057de8:	sub    BYTE PTR [rax],al
   140057dea:	sub    al,BYTE PTR [rax]
   140057dec:	add    BYTE PTR cs:[rdx],ch
   140057def:	add    BYTE PTR [rcx],ch
   140057df1:	add    BYTE PTR [rax+rax*1+0x2a],bh
   140057df5:	add    BYTE PTR [rsi],ch
   140057df7:	add    BYTE PTR [rdx],ch
   140057df9:	add    BYTE PTR [rax+rax*1+0x7c],bh
   140057dfd:	add    BYTE PTR [rax+0x41],dl
   140057e00:	add    BYTE PTR [rax],al
   140057e02:	add    DWORD PTR [rax],eax
   140057e04:	or     DWORD PTR [rax],eax
   140057e06:	xor    BYTE PTR [rax],dh
   140057e08:	add    BYTE PTR [rax],al
   140057e0a:	add    DWORD PTR [rax],eax
   140057e0c:	or     BYTE PTR [rax],al
   140057e0e:	test   al,0xe
   140057e10:	add    BYTE PTR [rax],al
   140057e12:	add    DWORD PTR [rax],eax
   140057e14:	and    BYTE PTR [rax],ah
   140057e16:	add    BYTE PTR [rax],al
   140057e18:	add    DWORD PTR [rax],eax
   140057e1a:	or     BYTE PTR [rax],al
   140057e1c:	test   al,0x8
   140057e1e:	add    BYTE PTR [rax],al
   140057e20:	add    al,BYTE PTR [rax]
   140057e22:	sbb    BYTE PTR [rax],bl
   140057e24:	add    BYTE PTR [rax],al
   140057e26:	add    DWORD PTR [rax],eax
   140057e28:	or     BYTE PTR [rax],al
   140057e2a:	enter  0x6,0x0
   140057e2e:	add    eax,DWORD PTR [rax]
   140057e30:	adc    BYTE PTR [rax],dl
   140057e32:	add    BYTE PTR [rax],al
   140057e34:	add    DWORD PTR [rax],eax
   140057e36:	or     BYTE PTR [rax],al
   140057e38:	push   0x4000005
   140057e3d:	add    BYTE PTR [rax],al
   140057e3f:	add    BYTE PTR [rax],al
   140057e41:	add    BYTE PTR [rcx],al
   140057e43:	add    BYTE PTR [rax],ah
   140057e45:	add    BYTE PTR [rcx+0x63],bl
   140057e48:	add    BYTE PTR [rax],al
   140057e4a:	add    eax,0x303000
   140057e4f:	add    BYTE PTR [rcx],al
   140057e51:	add    BYTE PTR [rax],ah
   140057e53:	add    BYTE PTR [rax+0x6000025],ch
   140057e59:	add    BYTE PTR [rax],ah
   140057e5b:	and    BYTE PTR [rax],al
   140057e5d:	add    BYTE PTR [rcx],al
   140057e5f:	add    BYTE PTR [rax],ah
   140057e61:	add    BYTE PTR [rax+0x7000010],ch
   140057e67:	add    BYTE PTR [rax],bl
   140057e69:	sbb    BYTE PTR [rax],al
   140057e6b:	add    BYTE PTR [rcx],al
   140057e6d:	add    BYTE PTR [rax],ah
   140057e6f:	add    BYTE PTR [rax+0x8000009],cl
   140057e75:	add    BYTE PTR [rax],dl
   140057e77:	adc    BYTE PTR [rax],al
   140057e79:	add    BYTE PTR [rcx],al
   140057e7b:	add    BYTE PTR [rax],ah
   140057e7d:	add    BYTE PTR [rax+0x4],ch
   140057e80:	add    BYTE PTR [rax],al
   140057e82:	or     DWORD PTR [rax],eax
   140057e84:	fiadd  DWORD PTR [rip+0x34]        # 0x140057ebe
   140057e8a:	push   rsi
   140057e8b:	add    BYTE PTR [rbx+0x0],dl
   140057e8e:	pop    rdi
   140057e8f:	add    BYTE PTR [rsi+0x0],dl
   140057e92:	add    BYTE PTR [r10+0x0],r10b
   140057e96:	push   rbx
   140057e97:	add    BYTE PTR [rcx+0x0],cl
   140057e9a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140057e9e:	pop    rdi
   140057e9f:	add    BYTE PTR [rcx+0x0],cl
   140057ea2:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140057ea6:	rex.WRXB add BYTE PTR [r8],r8b
   140057ea9:	add    BYTE PTR [rax],al
   140057eab:	add    BYTE PTR [rbp+0xfeef04],bh
   140057eb1:	add    BYTE PTR [rcx],al
   140057eb3:	add    BYTE PTR [rax],al
   140057eb5:	add    BYTE PTR [rcx],dl
   140057eb7:	add    bl,ch
   140057eb9:	add    DWORD PTR [rax],eax
   140057ebb:	add    BYTE PTR [rax],al
   140057ebd:	add    BYTE PTR [rcx],dl
   140057ebf:	add    bl,ch
   140057ec1:	add    DWORD PTR [rax],eax
   140057ec3:	add    BYTE PTR [rdi],bh
   140057ec5:	add    BYTE PTR [rax],al
   140057ec7:	add    BYTE PTR [rax],al
   140057ec9:	add    BYTE PTR [rax],al
   140057ecb:	add    BYTE PTR [rax+rax*1],al
   140057ece:	add    BYTE PTR [rax],al
   140057ed0:	add    al,BYTE PTR [rax]
	...
   140057ede:	add    BYTE PTR [rax],al
   140057ee0:	add    BYTE PTR [rax],r8b
   140057ee3:	add    BYTE PTR [rcx],al
   140057ee5:	add    BYTE PTR [rsi+0x0],dl
   140057ee8:	(bad)  
   140057ee9:	add    BYTE PTR [rdx+0x0],dh
   140057eec:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140057ef0:	ins    BYTE PTR es:[rdi],dx
   140057ef1:	add    BYTE PTR [rbp+0x0],ah
   140057ef4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140057ef8:	data16 add BYTE PTR [rdi+0x0],ch
   140057efc:	add    BYTE PTR [rax],al
   140057efe:	add    BYTE PTR [rax],al
   140057f00:	and    al,0x0
   140057f02:	add    al,0x0
   140057f04:	add    BYTE PTR [rax],al
   140057f06:	push   rsp
   140057f07:	add    BYTE PTR [rdx+0x0],dh
   140057f0a:	(bad)  
   140057f0b:	add    BYTE PTR [rsi+0x0],ch
   140057f0e:	jae    0x140057f10
   140057f10:	ins    BYTE PTR es:[rdi],dx
   140057f11:	add    BYTE PTR [rcx+0x0],ah
   140057f14:	je     0x140057f16
   140057f16:	imul   eax,DWORD PTR [rax],0x6e006f
   140057f1c:	add    BYTE PTR [rax],al
   140057f1e:	add    BYTE PTR [rax],al
   140057f20:	or     DWORD PTR [rsp+riz*8],eax
   140057f23:	add    al,0x3a
   140057f25:	add    eax,0x10000
   140057f2a:	push   rbx
   140057f2b:	add    BYTE PTR [rax+rax*1+0x72],dh
   140057f2f:	add    BYTE PTR [rcx+0x0],ch
   140057f32:	outs   dx,BYTE PTR ds:[rsi]
   140057f33:	add    BYTE PTR [rdi+0x0],ah
   140057f36:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140057f3a:	ins    BYTE PTR es:[rdi],dx
   140057f3b:	add    BYTE PTR [rbp+0x0],ah
   140057f3e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140057f42:	data16 add BYTE PTR [rdi+0x0],ch
   140057f46:	add    BYTE PTR [rax],al
   140057f48:	(bad)  
   140057f49:	add    eax,0x10000
   140057f4e:	xor    BYTE PTR [rax],al
   140057f50:	xor    al,0x0
   140057f52:	xor    BYTE PTR [rax],al
   140057f54:	cmp    DWORD PTR [rax],eax
   140057f56:	xor    BYTE PTR [rax],al
   140057f58:	xor    al,0x0
   140057f5a:	add    BYTE PTR [r8+rax*1],r14b
   140057f5e:	add    BYTE PTR [rax],al
   140057f60:	rex.WRX add BYTE PTR [rbx],r11b
   140057f63:	add    BYTE PTR [rcx],al
   140057f65:	add    BYTE PTR [rdx+0x0],al
   140057f68:	jne    0x140057f6a
   140057f6a:	imul   eax,DWORD PTR [rax],0x74006c
   140057f70:	and    BYTE PTR [rax],al
   140057f72:	outs   dx,DWORD PTR ds:[rsi]
   140057f73:	add    BYTE PTR [rsi+0x0],ch
   140057f76:	add    BYTE PTR [rax],al
   140057f78:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140057f7c:	imul   eax,DWORD PTR [rax],0x300020
   140057f82:	xor    eax,DWORD PTR [rax]
   140057f84:	(bad)  
   140057f85:	add    BYTE PTR [rcx],dh
   140057f87:	add    BYTE PTR [rax+rax*1],dh
   140057f8a:	(bad)  
   140057f8b:	add    BYTE PTR [rdx],dh
   140057f8d:	add    BYTE PTR [rax],dh
   140057f8f:	add    BYTE PTR [rcx],dh
   140057f91:	add    BYTE PTR [rax+rax*1],dh
   140057f94:	and    BYTE PTR [rax],al
   140057f96:	xor    al,BYTE PTR [rax]
   140057f98:	xor    eax,DWORD PTR [rax]
   140057f9a:	cmp    al,BYTE PTR [rax]
   140057f9c:	xor    DWORD PTR [rax],eax
   140057f9e:	xor    al,BYTE PTR [rax]
   140057fa0:	cmp    al,BYTE PTR [rax]
   140057fa2:	xor    BYTE PTR [rax],al
   140057fa4:	xor    BYTE PTR [rax],al
   140057fa6:	add    BYTE PTR cs:[rip+0x3100],dh        # 0x14005b0ad
   140057fad:	add    BYTE PTR [rax],al
   140057faf:	add    BYTE PTR [rax+rax*1+0x12],al
   140057fb3:	add    BYTE PTR [rcx],al
   140057fb5:	add    BYTE PTR [rbx+0x0],al
   140057fb8:	outs   dx,DWORD PTR ds:[rsi]
   140057fb9:	add    BYTE PTR [rbp+0x0],ch
   140057fbc:	jo     0x140057fbe
   140057fbe:	(bad)  
   140057fbf:	add    BYTE PTR [rsi+0x0],ch
   140057fc2:	jns    0x140057fc4
   140057fc4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140057fc8:	ins    DWORD PTR es:[rdi],dx
   140057fc9:	add    BYTE PTR [rbp+0x0],ah
   140057fcc:	add    BYTE PTR [rax],al
   140057fce:	add    BYTE PTR [rax],al
   140057fd0:	rex.XB add BYTE PTR [r15+0x0],bpl
   140057fd4:	jb     0x140057fd6
   140057fd6:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140057fdb:	add    BYTE PTR [rbx+0x0],al
   140057fde:	outs   dx,DWORD PTR ds:[rsi]
   140057fdf:	add    BYTE PTR [rdx+0x0],dh
   140057fe2:	jo     0x140057fe4
   140057fe4:	outs   dx,DWORD PTR ds:[rsi]
   140057fe5:	add    BYTE PTR [rdx+0x0],dh
   140057fe8:	(bad)  
   140057fe9:	add    BYTE PTR [rax+rax*1+0x69],dh
   140057fed:	add    BYTE PTR [rdi+0x0],ch
   140057ff0:	outs   dx,BYTE PTR ds:[rsi]
   140057ff1:	add    BYTE PTR [rax],al
   140057ff3:	add    BYTE PTR [rdx+0x0],dh
   140057ff6:	and    eax,0x46000100
   140057ffb:	add    BYTE PTR [rcx+0x0],ch
   140057ffe:	ins    BYTE PTR es:[rdi],dx
   140057fff:	add    BYTE PTR [rbp+0x0],ah
   140058002:	add    BYTE PTR [rbp+0x0],r12b
   140058006:	jae    0x140058008
   140058008:	movsxd eax,DWORD PTR [rax]
   14005800a:	jb     0x14005800c
   14005800c:	imul   eax,DWORD PTR [rax],0x740070
   140058012:	imul   eax,DWORD PTR [rax],0x6e006f
   140058018:	add    BYTE PTR [rax],al
   14005801a:	add    BYTE PTR [rax],al
   14005801c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140058020:	jb     0x140058022
   140058022:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140058027:	add    BYTE PTR [rdi+0x0],dl
   14005802a:	jb     0x14005802c
   14005802c:	imul   eax,DWORD PTR [rax],0x690074
   140058032:	outs   dx,BYTE PTR ds:[rsi]
   140058033:	add    BYTE PTR [rdi+0x0],ah
   140058036:	and    BYTE PTR [rax],al
   140058038:	push   rsp
   140058039:	add    BYTE PTR [rdi+0x0],ch
   14005803c:	outs   dx,DWORD PTR ds:[rsi]
   14005803d:	add    BYTE PTR [rax+rax*1+0x73],ch
   140058041:	add    BYTE PTR [rax],ah
   140058043:	add    BYTE PTR [rbp+0x0],dl
   140058046:	je     0x140058048
   140058048:	imul   eax,DWORD PTR [rax],0x69006c
   14005804e:	je     0x140058050
   140058050:	jns    0x140058052
   140058052:	and    BYTE PTR [rax],al
   140058054:	sub    BYTE PTR [rax],al
   140058056:	add    BYTE PTR ss:[rax+rax*1],dh
   14005805a:	sub    eax,0x69004200
   14005805f:	add    BYTE PTR [rax+rax*1+0x29],dh
   140058063:	add    BYTE PTR [rax],al
   140058065:	add    BYTE PTR [rax],al
   140058067:	add    BYTE PTR [rsi],dh
   140058069:	add    BYTE PTR [rbx],cl
   14005806b:	add    BYTE PTR [rcx],al
   14005806d:	add    BYTE PTR [rsi+0x0],al
   140058070:	imul   eax,DWORD PTR [rax],0x65006c
   140058076:	push   rsi
   140058077:	add    BYTE PTR [rbp+0x0],ah
   14005807a:	jb     0x14005807c
   14005807c:	jae    0x14005807e
   14005807e:	imul   eax,DWORD PTR [rax],0x6e006f
   140058084:	add    BYTE PTR [rax],al
   140058086:	add    BYTE PTR [rax],al
   140058088:	xor    DWORD PTR [rax],eax
   14005808a:	(bad)  
   14005808b:	add    BYTE PTR [rsi],ch
   14005808d:	add    BYTE PTR [rax],dh
   14005808f:	add    BYTE PTR [rsi],ch
   140058091:	add    BYTE PTR [rax],dh
   140058093:	add    BYTE PTR [rsi],ch
   140058095:	add    BYTE PTR [rax+rax*1],dh
   140058098:	cmp    DWORD PTR [rax],eax
   14005809a:	xor    DWORD PTR [rax],eax
   14005809c:	add    BYTE PTR [rax],al
   14005809e:	add    BYTE PTR [rax],al
   1400580a0:	xor    al,BYTE PTR [rax]
   1400580a2:	or     DWORD PTR [rax],eax
   1400580a4:	add    DWORD PTR [rax],eax
   1400580a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400580aa:	je     0x1400580ac
   1400580ac:	add    BYTE PTR gs:[rdx+0x0],dh
   1400580b0:	outs   dx,BYTE PTR ds:[rsi]
   1400580b1:	add    BYTE PTR [rcx+0x0],ah
   1400580b4:	ins    BYTE PTR es:[rdi],dx
   1400580b5:	add    BYTE PTR [rsi+0x0],cl
   1400580b8:	(bad)  
   1400580b9:	add    BYTE PTR [rbp+0x0],ch
   1400580bc:	add    BYTE PTR gs:[rax],al
   1400580bf:	add    BYTE PTR [rdi+0x0],dl
   1400580c2:	push   rsp
   1400580c3:	add    BYTE PTR [rbx+0x0],dh
   1400580c6:	jo     0x1400580c8
   1400580c8:	je     0x1400580ca
   1400580ca:	ins    BYTE PTR es:[rdi],dx
   1400580cb:	add    BYTE PTR [rbp+0x0],al
   1400580ce:	rex.WRX add BYTE PTR [rax],r8b
   1400580d1:	add    BYTE PTR [rax],al
   1400580d3:	add    BYTE PTR [rax+rax*1+0x24],ch
   1400580d7:	add    BYTE PTR [rcx],al
   1400580d9:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400580dd:	add    BYTE PTR [rdi+0x0],ah
   1400580e0:	(bad)  
   1400580e1:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400580e5:	add    BYTE PTR [rdi+0x0],ch
   1400580e8:	jo     0x1400580ea
   1400580ea:	jns    0x1400580ec
   1400580ec:	jb     0x1400580ee
   1400580ee:	imul   eax,DWORD PTR [rax],0x680067
   1400580f4:	je     0x1400580f6
   1400580f6:	add    BYTE PTR [rax],al
   1400580f8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400580fc:	jo     0x1400580fe
   1400580fe:	jns    0x140058100
   140058100:	jb     0x140058102
   140058102:	imul   eax,DWORD PTR [rax],0x680067
   140058108:	je     0x14005810a
   14005810a:	sub    BYTE PTR [rax],al
   14005810c:	movsxd eax,DWORD PTR [rax]
   14005810e:	sub    DWORD PTR [rax],eax
   140058110:	and    BYTE PTR [rax],al
   140058112:	xor    al,BYTE PTR [rax]
   140058114:	xor    BYTE PTR [rax],al
   140058116:	xor    DWORD PTR [rax],eax
   140058118:	xor    al,0x0
   14005811a:	and    BYTE PTR [rax],al
   14005811c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140058120:	jb     0x140058122
   140058122:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140058127:	add    BYTE PTR [rbx+0x0],al
   14005812a:	outs   dx,DWORD PTR ds:[rsi]
   14005812b:	add    BYTE PTR [rdx+0x0],dh
   14005812e:	jo     0x140058130
   140058130:	outs   dx,DWORD PTR ds:[rsi]
   140058131:	add    BYTE PTR [rdx+0x0],dh
   140058134:	(bad)  
   140058135:	add    BYTE PTR [rax+rax*1+0x69],dh
   140058139:	add    BYTE PTR [rdi+0x0],ch
   14005813c:	outs   dx,BYTE PTR ds:[rsi]
   14005813d:	add    BYTE PTR [rax],al
   14005813f:	add    dh,ch
   140058141:	add    ebx,esp
   140058143:	add    BYTE PTR [rcx],al
   140058145:	add    BYTE PTR [rax+rax*1+0x65],cl
   140058149:	add    BYTE PTR [rdi+0x0],ah
   14005814c:	(bad)  
   14005814d:	add    BYTE PTR [rax+rax*1+0x54],ch
   140058151:	add    BYTE PTR [rdx+0x0],dh
   140058154:	(bad)  
   140058155:	add    BYTE PTR [rax+rax*1+0x65],ah
   140058159:	add    BYTE PTR [rbp+0x0],ch
   14005815c:	(bad)  
   14005815d:	add    BYTE PTR [rdx+0x0],dh
   140058160:	imul   eax,DWORD PTR [rax],0x73
   140058163:	add    BYTE PTR [rax],al
   140058165:	add    BYTE PTR [rax],al
   140058167:	add    BYTE PTR [rbx+0x0],al
   14005816a:	outs   dx,DWORD PTR ds:[rsi]
   14005816b:	add    BYTE PTR [rdx+0x0],dh
   14005816e:	add    BYTE PTR gs:[rax+rax*1+0x2c],ch
   140058173:	add    BYTE PTR [rax],ah
   140058175:	add    BYTE PTR [rbx+0x0],al
   140058178:	outs   dx,DWORD PTR ds:[rsi]
   140058179:	add    BYTE PTR [rdx+0x0],dh
   14005817c:	add    BYTE PTR gs:[rax+rax*1+0x44],ch
   140058181:	add    BYTE PTR [rdx+0x0],dl
   140058184:	add    BYTE PTR [r15+0x0],dl
   140058188:	sub    al,0x0
   14005818a:	and    BYTE PTR [rax],al
   14005818c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140058190:	jb     0x140058192
   140058192:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   140058197:	add    BYTE PTR [rax+rax*1+0x45],al
   14005819b:	add    BYTE PTR [rbx+0x0],dl
   14005819e:	rex.WB add BYTE PTR [r15+0x0],al
   1400581a2:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   1400581a6:	push   rdx
   1400581a7:	add    BYTE PTR [rax+rax*1],ch
   1400581aa:	and    BYTE PTR [rax],al
   1400581ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400581b0:	jb     0x1400581b2
   1400581b2:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   1400581b7:	add    BYTE PTR [rdx+0x0],dl
   1400581ba:	add    BYTE PTR cs:[rcx+0x0],al
   1400581be:	add    BYTE PTR cs:[rsi+0x0],dl
   1400581c2:	add    BYTE PTR cs:[rbp+0x0],al
   1400581c6:	add    BYTE PTR cs:[rax+rax*1],ch
   1400581ca:	and    BYTE PTR [rax],al
   1400581cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400581d0:	jb     0x1400581d2
   1400581d2:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   1400581d7:	add    BYTE PTR [rax+0x0],dl
   1400581da:	rex.W add BYTE PTR [rdi+0x0],cl
   1400581de:	push   rsp
   1400581df:	add    BYTE PTR [rdi+0x0],cl
   1400581e2:	sub    eax,0x41005000
   1400581e7:	add    BYTE PTR [rcx+0x0],cl
   1400581ea:	rex.WRX add BYTE PTR [rax+r8*1+0x2c],r10b
   1400581ef:	add    BYTE PTR [rax],ah
   1400581f1:	add    BYTE PTR [rbx+0x0],al
   1400581f4:	outs   dx,DWORD PTR ds:[rsi]
   1400581f5:	add    BYTE PTR [rdx+0x0],dh
   1400581f8:	add    BYTE PTR gs:[rax+rax*1+0x54],ch
   1400581fd:	add    BYTE PTR [rdx+0x0],dl
   140058200:	add    BYTE PTR [r11+0x0],al
   140058204:	add    BYTE PTR [r8],r12b
   140058207:	add    BYTE PTR [rcx+0x0],ah
   14005820a:	outs   dx,BYTE PTR ds:[rsi]
   14005820b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14005820f:	add    BYTE PTR [rbx+0x0],al
   140058212:	outs   dx,DWORD PTR ds:[rsi]
   140058213:	add    BYTE PTR [rdx+0x0],dh
   140058216:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14005821b:	add    BYTE PTR [rbx+0x0],al
   14005821e:	add    BYTE PTR [r8+0x0],dl
   140058222:	push   rsp
   140058223:	add    BYTE PTR [rbp+0x0],dl
   140058226:	push   rdx
   140058227:	add    BYTE PTR [rbp+0x0],al
   14005822a:	and    BYTE PTR [rax],al
   14005822c:	(bad)  
   14005822d:	add    BYTE PTR [rdx+0x0],dh
   140058230:	add    BYTE PTR gs:[rax],ah
   140058233:	add    BYTE PTR [rax+rax*1+0x72],dh
   140058237:	add    BYTE PTR [rcx+0x0],ah
   14005823a:	add    BYTE PTR fs:[rbp+0x0],ah
   14005823e:	ins    DWORD PTR es:[rdi],dx
   14005823f:	add    BYTE PTR [rcx+0x0],ah
   140058242:	jb     0x140058244
   140058244:	imul   eax,DWORD PTR [rax],0x73
   140058247:	add    BYTE PTR [rax],ah
   140058249:	add    BYTE PTR [rdi+0x0],ch
   14005824c:	jb     0x14005824e
   14005824e:	and    BYTE PTR [rax],al
   140058250:	jb     0x140058252
   140058252:	add    BYTE PTR gs:[rdi+0x0],ah
   140058256:	imul   eax,DWORD PTR [rax],0x740073
   14005825c:	add    BYTE PTR gs:[rdx+0x0],dh
   140058260:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140058265:	add    BYTE PTR [rax+rax*1+0x72],dh
   140058269:	add    BYTE PTR [rcx+0x0],ah
   14005826c:	add    BYTE PTR fs:[rbp+0x0],ah
   140058270:	ins    DWORD PTR es:[rdi],dx
   140058271:	add    BYTE PTR [rcx+0x0],ah
   140058274:	jb     0x140058276
   140058276:	imul   eax,DWORD PTR [rax],0x73
   140058279:	add    BYTE PTR [rax],ah
   14005827b:	add    BYTE PTR [rdi+0x0],ch
   14005827e:	data16 add BYTE PTR [rax],ah
   140058281:	add    BYTE PTR [rbx+0x0],al
   140058284:	outs   dx,DWORD PTR ds:[rsi]
   140058285:	add    BYTE PTR [rdx+0x0],dh
   140058288:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14005828d:	add    BYTE PTR [rbx+0x0],al
   140058290:	outs   dx,DWORD PTR ds:[rsi]
   140058291:	add    BYTE PTR [rdx+0x0],dh
   140058294:	jo     0x140058296
   140058296:	outs   dx,DWORD PTR ds:[rsi]
   140058297:	add    BYTE PTR [rdx+0x0],dh
   14005829a:	(bad)  
   14005829b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005829f:	add    BYTE PTR [rdi+0x0],ch
   1400582a2:	outs   dx,BYTE PTR ds:[rsi]
   1400582a3:	add    BYTE PTR [rax],ah
   1400582a5:	add    BYTE PTR [rcx+0x0],ah
   1400582a8:	outs   dx,BYTE PTR ds:[rsi]
   1400582a9:	add    BYTE PTR [rax+rax*1+0x2f],ah
   1400582ad:	add    BYTE PTR [rdi+0x0],ch
   1400582b0:	jb     0x1400582b2
   1400582b2:	and    BYTE PTR [rax],al
   1400582b4:	imul   eax,DWORD PTR [rax],0x730074
   1400582ba:	and    BYTE PTR [rax],al
   1400582bc:	jae    0x1400582be
   1400582be:	jne    0x1400582c0
   1400582c0:	(bad)  
   1400582c1:	add    BYTE PTR [rbx+0x0],dh
   1400582c4:	imul   eax,DWORD PTR [rax],0x690064
   1400582ca:	(bad)  
   1400582cb:	add    BYTE PTR [rdx+0x0],dh
   1400582ce:	imul   eax,DWORD PTR [rax],0x730065
   1400582d4:	and    BYTE PTR [rax],al
   1400582d6:	imul   eax,DWORD PTR [rax],0x20006e
   1400582dc:	rex.XB add BYTE PTR [r9+0x0],spl
   1400582e0:	outs   dx,BYTE PTR ds:[rsi]
   1400582e1:	add    BYTE PTR [rcx+0x0],ah
   1400582e4:	add    BYTE PTR fs:[rcx+0x0],ah
   1400582e8:	sub    al,0x0
   1400582ea:	and    BYTE PTR [rax],al
   1400582ec:	je     0x1400582ee
   1400582ee:	push   0x20006500
   1400582f3:	add    BYTE PTR [rbp+0x0],dl
   1400582f6:	add    BYTE PTR cs:[rbx+0x0],dl
   1400582fa:	add    BYTE PTR cs:[rax],ah
   1400582fd:	add    BYTE PTR [rcx+0x0],ah
   140058300:	outs   dx,BYTE PTR ds:[rsi]
   140058301:	add    BYTE PTR [rax+rax*1+0x2f],ah
   140058305:	add    BYTE PTR [rdi+0x0],ch
   140058308:	jb     0x14005830a
   14005830a:	and    BYTE PTR [rax],al
   14005830c:	outs   dx,DWORD PTR ds:[rsi]
   14005830d:	add    BYTE PTR [rax+rax*1+0x68],dh
   140058311:	add    BYTE PTR [rbp+0x0],ah
   140058314:	jb     0x140058316
   140058316:	and    BYTE PTR [rax],al
   140058318:	movsxd eax,DWORD PTR [rax]
   14005831a:	outs   dx,DWORD PTR ds:[rsi]
   14005831b:	add    BYTE PTR [rbp+0x0],dh
   14005831e:	outs   dx,BYTE PTR ds:[rsi]
   14005831f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140058323:	add    BYTE PTR [rcx+0x0],ch
   140058326:	add    BYTE PTR gs:[rbx+0x0],dh
   14005832a:	add    BYTE PTR cs:[rax],al
   14005832d:	add    BYTE PTR [rax],al
   14005832f:	add    BYTE PTR [rdx+0x0],al
   140058332:	or     eax,0x4f000100
   140058337:	add    BYTE PTR [rdx+0x0],dh
   14005833a:	imul   eax,DWORD PTR [rax],0x690067
   140058340:	outs   dx,BYTE PTR ds:[rsi]
   140058341:	add    BYTE PTR [rcx+0x0],ah
   140058344:	ins    BYTE PTR es:[rdi],dx
   140058345:	add    BYTE PTR [rsi+0x0],al
   140058348:	imul   eax,DWORD PTR [rax],0x65006c
   14005834e:	outs   dx,BYTE PTR ds:[rsi]
   14005834f:	add    BYTE PTR [rcx+0x0],ah
   140058352:	ins    DWORD PTR es:[rdi],dx
   140058353:	add    BYTE PTR [rbp+0x0],ah
   140058356:	add    BYTE PTR [rax],al
   140058358:	push   rdi
   140058359:	add    BYTE PTR [rax+rax*1+0x73],dl
   14005835d:	add    BYTE PTR [rax+0x0],dh
   140058360:	je     0x140058362
   140058362:	ins    BYTE PTR es:[rdi],dx
   140058363:	add    BYTE PTR [rbp+0x0],al
   140058366:	rex.WRX add BYTE PTR [rsi],r13b
   140058369:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14005836d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140058371:	add    BYTE PTR [rax],al
   140058373:	add    BYTE PTR [rax+0x0],bl
   140058376:	sbb    al,0x0
   140058378:	add    DWORD PTR [rax],eax
   14005837a:	push   rax
   14005837b:	add    BYTE PTR [rdx+0x0],dh
   14005837e:	outs   dx,DWORD PTR ds:[rsi]
   14005837f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140058383:	add    BYTE PTR [rbx+0x0],ah
   140058386:	je     0x140058388
   140058388:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14005838c:	ins    DWORD PTR es:[rdi],dx
   14005838d:	add    BYTE PTR [rbp+0x0],ah
   140058390:	add    BYTE PTR [rax],al
   140058392:	add    BYTE PTR [rax],al
   140058394:	rex.XB add BYTE PTR [r15+0x0],bpl
   140058398:	jb     0x14005839a
   14005839a:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14005839f:	add    BYTE PTR [rdi+0x0],al
   1400583a2:	jb     0x1400583a4
   1400583a4:	(bad)  
   1400583a5:	add    BYTE PTR [rax+0x0],dh
   1400583a8:	push   0x63006900
   1400583ad:	add    BYTE PTR [rbx+0x0],dh
   1400583b0:	and    BYTE PTR [rax],al
   1400583b2:	add    BYTE PTR [r8+0x0],sil
   1400583b6:	jo     0x1400583b8
   1400583b8:	ins    BYTE PTR es:[rdi],dx
   1400583b9:	add    BYTE PTR [rcx+0x0],ch
   1400583bc:	movsxd eax,DWORD PTR [rax]
   1400583be:	(bad)  
   1400583bf:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400583c3:	add    BYTE PTR [rdi+0x0],ch
   1400583c6:	outs   dx,BYTE PTR ds:[rsi]
   1400583c7:	add    BYTE PTR [rbx+0x0],dh
   1400583ca:	add    BYTE PTR [rax],al
   1400583cc:	cmp    al,BYTE PTR [rax]
   1400583ce:	or     eax,DWORD PTR [rax]
   1400583d0:	add    DWORD PTR [rax],eax
   1400583d2:	push   rax
   1400583d3:	add    BYTE PTR [rdx+0x0],dh
   1400583d6:	outs   dx,DWORD PTR ds:[rsi]
   1400583d7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400583db:	add    BYTE PTR [rbx+0x0],ah
   1400583de:	je     0x1400583e0
   1400583e0:	push   rsi
   1400583e1:	add    BYTE PTR [rbp+0x0],ah
   1400583e4:	jb     0x1400583e6
   1400583e6:	jae    0x1400583e8
   1400583e8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400583ee:	add    BYTE PTR [rax],al
   1400583f0:	xor    DWORD PTR [rax],eax
   1400583f2:	(bad)  
   1400583f3:	add    BYTE PTR [rsi],ch
   1400583f5:	add    BYTE PTR [rax],dh
   1400583f7:	add    BYTE PTR [rsi],ch
   1400583f9:	add    BYTE PTR [rax],dh
   1400583fb:	add    BYTE PTR [rsi],ch
   1400583fd:	add    BYTE PTR [rax+rax*1],dh
   140058400:	cmp    DWORD PTR [rax],eax
   140058402:	xor    DWORD PTR [rax],eax
   140058404:	add    BYTE PTR [rax],al
   140058406:	add    BYTE PTR [rax],al
   140058408:	xor    BYTE PTR [rax],al
   14005840a:	add    al,BYTE PTR [rax]
   14005840c:	add    DWORD PTR [rax],eax
   14005840e:	rex.WR add BYTE PTR [rcx+0x0],r12b
   140058412:	outs   dx,BYTE PTR ds:[rsi]
   140058413:	add    BYTE PTR [rdi+0x0],ah
   140058416:	jne    0x140058418
   140058418:	(bad)  
   140058419:	add    BYTE PTR [rdi+0x0],ah
   14005841c:	add    BYTE PTR gs:[rax],ah
   14005841f:	add    BYTE PTR [rdx+0x0],al
   140058422:	jne    0x140058424
   140058424:	imul   eax,DWORD PTR [rax],0x64006c
   14005842a:	and    BYTE PTR [rax],al
   14005842c:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140058431:	add    BYTE PTR [rax],al
   140058433:	add    BYTE PTR [rax],dh
   140058435:	add    BYTE PTR [rax],al
   140058437:	add    BYTE PTR [rsi],ah
   140058439:	add    BYTE PTR [rdi],al
   14005843b:	add    BYTE PTR [rcx],al
   14005843d:	add    BYTE PTR [rax+0x0],dl
   140058440:	ins    BYTE PTR es:[rdi],dx
   140058441:	add    BYTE PTR [rcx+0x0],ah
   140058444:	je     0x140058446
   140058446:	data16 add BYTE PTR [rdi+0x0],ch
   14005844a:	jb     0x14005844c
   14005844c:	ins    DWORD PTR es:[rdi],dx
   14005844d:	add    BYTE PTR [rax],al
   14005844f:	add    BYTE PTR [rsi],dh
   140058451:	add    BYTE PTR [rax+rax*1],dh
   140058454:	sub    eax,0x69004200
   140058459:	add    BYTE PTR [rax+rax*1+0x0],dh
   14005845d:	add    BYTE PTR [rax+0x41],dl
   140058460:	cmp    al,0x61
   140058462:	jae    0x1400584d7
   140058464:	gs ins DWORD PTR es:[rdi],dx
   140058466:	(bad)  
   140058467:	ins    BYTE PTR es:[rdi],dx
   140058468:	jns    0x14005848a
   14005846a:	js     0x1400584d9
   14005846c:	ins    BYTE PTR es:[rdi],dx
   14005846d:	outs   dx,BYTE PTR ds:[rsi]
   14005846e:	jae    0x1400584ad
   140058470:	and    dh,BYTE PTR [rbp+0x72]
   140058473:	outs   dx,BYTE PTR ds:[rsi]
   140058474:	cmp    dh,BYTE PTR [rbx+0x63]
   140058477:	push   0x73616d65
   14005847c:	sub    eax,0x7263696d
   140058481:	outs   dx,DWORD PTR ds:[rsi]
   140058482:	jae    0x1400584f3
   140058484:	data16 je 0x1400584b4
   140058487:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14005848a:	cmp    ah,BYTE PTR [rcx+0x73]
   14005848d:	ins    DWORD PTR es:[rdi],dx
   14005848e:	cs jbe 0x1400584c2
   140058491:	and    ah,BYTE PTR [rax]
   140058493:	ins    DWORD PTR es:[rdi],dx
   140058494:	(bad)  
   140058495:	outs   dx,BYTE PTR ds:[rsi]
   140058496:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14005849d:	jb     0x140058512
   14005849f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400584a6:	xor    BYTE PTR [rdx],ah
   1400584a8:	ds cmp al,0x64
   1400584ab:	gs jo  0x140058513
   1400584ae:	outs   dx,BYTE PTR ds:[rsi]
   1400584af:	fs outs dx,BYTE PTR gs:[rsi]
   1400584b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400584b5:	cmp    al,0x64
   1400584b7:	gs jo  0x14005851f
   1400584ba:	outs   dx,BYTE PTR ds:[rsi]
   1400584bb:	fs outs dx,BYTE PTR gs:[rsi]
   1400584be:	je     0x140058501
   1400584c0:	jae    0x140058535
   1400584c2:	gs ins DWORD PTR es:[rdi],dx
   1400584c4:	(bad)  
   1400584c5:	ins    BYTE PTR es:[rdi],dx
   1400584c6:	jns    0x140058506
   1400584c8:	cmp    al,0x61
   1400584ca:	jae    0x14005853f
   1400584cc:	gs ins DWORD PTR es:[rdi],dx
   1400584ce:	(bad)  
   1400584cf:	ins    BYTE PTR es:[rdi],dx
   1400584d0:	jns    0x14005851b
   1400584d2:	fs outs dx,BYTE PTR gs:[rsi]
   1400584d5:	je     0x140058540
   1400584d7:	je     0x140058552
   1400584d9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400584dd:	gs cmp eax,0x6e697722
   1400584e3:	xor    esi,DWORD PTR [rdx]
   1400584e5:	and    ah,BYTE PTR [rax]
   1400584e7:	outs   dx,BYTE PTR ds:[rsi]
   1400584e8:	(bad)  
   1400584e9:	ins    DWORD PTR es:[rdi],dx
   1400584ea:	gs cmp eax,0x63694d22
   1400584f0:	jb     0x140058561
   1400584f2:	jae    0x140058563
   1400584f4:	data16 je 0x140058525
   1400584f7:	push   rdi
   1400584f8:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400584ff:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140058501:	ins    DWORD PTR es:[rdi],dx
   140058502:	ins    DWORD PTR es:[rdi],dx
   140058503:	outs   dx,DWORD PTR ds:[rsi]
   140058504:	outs   dx,BYTE PTR ds:[rsi]
   140058505:	sub    eax,0x746e6f43
   14005850a:	jb     0x14005857b
   14005850c:	ins    BYTE PTR es:[rdi],dx
   14005850d:	jae    0x140058531
   14005850f:	and    BYTE PTR [rsi+0x65],dh
   140058512:	jb     0x140058587
   140058514:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14005851b:	xor    BYTE PTR [rsi],ch
   14005851d:	xor    BYTE PTR [rsi],ch
   14005851f:	xor    BYTE PTR [rdx],ah
   140058521:	and    BYTE PTR [rax+0x72],dh
   140058524:	outs   dx,DWORD PTR ds:[rsi]
   140058525:	movsxd esp,DWORD PTR [rbp+0x73]
   140058528:	jae    0x140058599
   14005852a:	jb     0x14005856d
   14005852c:	jb     0x140058591
   14005852e:	push   0x63657469
   140058533:	je     0x1400585aa
   140058535:	jb     0x14005859c
   140058537:	cmp    eax,0x20222a22
   14005853c:	jo     0x1400585b3
   14005853e:	(bad)  
   14005853f:	ins    BYTE PTR es:[rdi],dx
   140058540:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140058547:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14005854b:	and    dh,BYTE PTR [rsi]
   14005854d:	xor    eax,0x36623539
   140058552:	xor    al,0x31
   140058554:	xor    al,0x34
   140058556:	movsxd esp,DWORD PTR [rbx+0x66]
   140058559:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14005855d:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140058561:	addr32 jne 0x1400585c5
   140058564:	addr32 gs cmp eax,0x3e222a22
   14005856b:	cmp    al,0x2f
   14005856d:	(bad)  
   14005856e:	jae    0x1400585e3
   140058570:	gs ins DWORD PTR es:[rdi],dx
   140058572:	(bad)  
   140058573:	ins    BYTE PTR es:[rdi],dx
   140058574:	jns    0x1400585bf
   140058576:	fs outs dx,BYTE PTR gs:[rsi]
   140058579:	je     0x1400585e4
   14005857b:	je     0x1400585f6
   14005857d:	ds cmp al,0x2f
   140058580:	fs gs jo 0x1400585e9
   140058584:	outs   dx,BYTE PTR ds:[rsi]
   140058585:	fs outs dx,BYTE PTR gs:[rsi]
   140058588:	je     0x1400585cb
   14005858a:	jae    0x1400585ff
   14005858c:	gs ins DWORD PTR es:[rdi],dx
   14005858e:	(bad)  
   14005858f:	ins    BYTE PTR es:[rdi],dx
   140058590:	jns    0x1400585d0
   140058592:	cmp    al,0x2f
   140058594:	fs gs jo 0x1400585fd
   140058598:	outs   dx,BYTE PTR ds:[rsi]
   140058599:	fs outs dx,BYTE PTR gs:[rsi]
   14005859c:	movsxd edi,DWORD PTR [rcx+0x3e]
   14005859f:	cmp    al,0x74
   1400585a1:	jb     0x140058618
   1400585a3:	jae    0x140058619
   1400585a5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400585a7:	outs   dx,WORD PTR ds:[rsi]
   1400585a9:	and    BYTE PTR [rax+0x6d],bh
   1400585ac:	ins    BYTE PTR es:[rdi],dx
   1400585ad:	outs   dx,BYTE PTR ds:[rsi]
   1400585ae:	jae    0x1400585ed
   1400585b0:	and    dh,BYTE PTR [rbp+0x72]
   1400585b3:	outs   dx,BYTE PTR ds:[rsi]
   1400585b4:	cmp    dh,BYTE PTR [rbx+0x63]
   1400585b7:	push   0x73616d65
   1400585bc:	sub    eax,0x7263696d
   1400585c1:	outs   dx,DWORD PTR ds:[rsi]
   1400585c2:	jae    0x140058633
   1400585c4:	data16 je 0x1400585f4
   1400585c7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400585ca:	cmp    ah,BYTE PTR [rcx+0x73]
   1400585cd:	ins    DWORD PTR es:[rdi],dx
   1400585ce:	cs jbe 0x140058604
   1400585d1:	and    bh,BYTE PTR [rsi]
   1400585d3:	cmp    al,0x73
   1400585d5:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400585d9:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   1400585e1:	jne    0x140058648
   1400585e3:	jae    0x140058659
   1400585e5:	gs fs push rax
   1400585e8:	jb     0x140058653
   1400585ea:	jbe    0x140058655
   1400585ec:	ins    BYTE PTR es:[rdi],dx
   1400585ed:	gs addr32 gs jae 0x140058630
   1400585f2:	cmp    al,0x72
   1400585f4:	gs jno 0x14005866c
   1400585f7:	gs jae 0x14005866e
   1400585fa:	gs fs rex.RB js 0x140058664
   1400585ff:	movsxd esi,DWORD PTR [rbp+0x74]
   140058602:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140058609:	ins    BYTE PTR es:[rdi],dx
   14005860a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14005860e:	gs ins BYTE PTR es:[rdi],dx
   140058610:	cmp    eax,0x49736122
   140058615:	outs   dx,BYTE PTR ds:[rsi]
   140058616:	jbe    0x140058687
   140058618:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14005861c:	and    BYTE PTR [rbp+0x69],dh
   14005861f:	movsxd esp,DWORD PTR [r11+0x65]
   140058623:	jae    0x140058698
   140058625:	cmp    eax,0x6c616622
   14005862a:	jae    0x140058691
   14005862c:	and    bh,BYTE PTR [rsi]
   14005862e:	cmp    al,0x2f
   140058630:	jb     0x140058697
   140058632:	jno    0x1400586a9
   140058634:	gs jae 0x1400586ab
   140058637:	gs fs rex.RB js 0x1400586a1
   14005863c:	movsxd esi,DWORD PTR [rbp+0x74]
   14005863f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140058646:	ins    BYTE PTR es:[rdi],dx
   140058647:	ds cmp al,0x2f
   14005864a:	jb     0x1400586b1
   14005864c:	jno    0x1400586c3
   14005864e:	gs jae 0x1400586c5
   140058651:	gs fs push rax
   140058654:	jb     0x1400586bf
   140058656:	jbe    0x1400586c1
   140058658:	ins    BYTE PTR es:[rdi],dx
   140058659:	gs addr32 gs jae 0x14005869c
   14005865e:	cmp    al,0x2f
   140058660:	jae    0x1400586c7
   140058662:	movsxd esi,DWORD PTR [rbp+0x72]
   140058665:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14005866d:	jne    0x1400586e2
   14005866f:	je     0x1400586ba
   140058671:	outs   dx,BYTE PTR ds:[rsi]
   140058672:	outs   dx,WORD PTR ds:[rsi]
   140058674:	ds cmp al,0x61
   140058677:	jo     0x1400586e9
   140058679:	ins    BYTE PTR es:[rdi],dx
   14005867a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140058681:	and    BYTE PTR [rax+0x6d],bh
   140058684:	ins    BYTE PTR es:[rdi],dx
   140058685:	outs   dx,BYTE PTR ds:[rsi]
   140058686:	jae    0x1400586c5
   140058688:	and    dh,BYTE PTR [rbp+0x72]
   14005868b:	outs   dx,BYTE PTR ds:[rsi]
   14005868c:	cmp    dh,BYTE PTR [rbx+0x63]
   14005868f:	push   0x73616d65
   140058694:	sub    eax,0x7263696d
   140058699:	outs   dx,DWORD PTR ds:[rsi]
   14005869a:	jae    0x14005870b
   14005869c:	data16 je 0x1400586cc
   14005869f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400586a2:	cmp    ah,BYTE PTR [rcx+0x73]
   1400586a5:	ins    DWORD PTR es:[rdi],dx
   1400586a6:	cs jbe 0x1400586dc
   1400586a9:	and    bh,BYTE PTR [rsi]
   1400586ab:	cmp    al,0x77
   1400586ad:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   1400586b4:	gs je  0x14005872b
   1400586b7:	imul   ebp,DWORD PTR [rsi+0x67],0x643c3e73
   1400586be:	jo     0x140058729
   1400586c0:	rex.B ja 0x140058724
   1400586c3:	jb     0x14005872a
   1400586c5:	and    BYTE PTR [rax+0x6d],bh
   1400586c8:	ins    BYTE PTR es:[rdi],dx
   1400586c9:	outs   dx,BYTE PTR ds:[rsi]
   1400586ca:	jae    0x140058709
   1400586cc:	and    ch,BYTE PTR [rax+0x74]
   1400586cf:	je     0x140058741
   1400586d1:	cmp    ch,BYTE PTR [rdi]
   1400586d3:	(bad)  
   1400586d4:	jae    0x140058739
   1400586d6:	push   0x73616d65
   1400586db:	cs ins DWORD PTR es:[rdi],dx
   1400586dd:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400586e4:	je     0x140058714
   1400586e6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400586e9:	(bad)  
   1400586ea:	push   rbx
   1400586eb:	rex.WRB
   1400586ec:	rex.WB (bad) 
   1400586ee:	xor    dh,BYTE PTR [rax]
   1400586f0:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6ede25
   1400586f6:	outs   dx,DWORD PTR fs:[rsi]
   1400586f8:	ja     0x14005876d
   1400586fa:	push   rbx
   1400586fb:	gs je  0x140058772
   1400586fe:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   140058705:	jb     0x14005877c
   140058707:	gs cmp al,0x2f
   14005870a:	fs jo  0x140058776
   14005870d:	rex.B ja 0x140058771
   140058710:	jb     0x140058777
   140058712:	ds cmp al,0x2f
   140058715:	ja     0x140058780
   140058717:	outs   dx,BYTE PTR ds:[rsi]
   140058718:	outs   dx,DWORD PTR fs:[rsi]
   14005871a:	ja     0x14005878f
   14005871c:	push   rbx
   14005871d:	gs je  0x140058794
   140058720:	imul   ebp,DWORD PTR [rsi+0x67],0x2f3c3e73
   140058727:	(bad)  
   140058728:	jo     0x14005879a
   14005872a:	ins    BYTE PTR es:[rdi],dx
   14005872b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140058732:	ds cmp al,0x2f
   140058735:	(bad)  
   140058736:	jae    0x1400587ab
   140058738:	gs ins DWORD PTR es:[rdi],dx
   14005873a:	(bad)  
   14005873b:	ins    BYTE PTR es:[rdi],dx
   14005873c:	jns    0x14005877c
   14005873e:	push   rax
   14005873f:	rex.B

Disassembly of section .reloc:

0000000140059000 <.reloc>:
   140059000:	add    al,dh
   140059002:	add    al,BYTE PTR [rax]
   140059004:	pop    rax
   140059005:	add    BYTE PTR [rax],al
   140059007:	add    BYTE PTR [rax],al
   140059009:	lods   eax,DWORD PTR ds:[rsi]
   14005900a:	or     BYTE PTR [rbp-0x52e752f0],ch
   140059010:	and    BYTE PTR [rbp-0x52cf52d8],ch
   140059016:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   14005901c:	(bad)  
   14005901d:	lods   eax,DWORD PTR ds:[rsi]
   14005901e:	push   0x8ad70ad
   140059023:	scas   al,BYTE PTR es:[rdi]
   140059024:	adc    BYTE PTR [rsi-0x51df51e8],ch
   14005902a:	scas   rax,QWORD PTR es:[rdi]
   14005902c:	push   rax
   14005902d:	scas   eax,DWORD PTR es:[rdi]
   14005902e:	pop    rax
   14005902f:	scas   eax,DWORD PTR es:[rdi]
   140059030:	(bad)  
   140059031:	scas   eax,DWORD PTR es:[rdi]
   140059032:	push   0x78af70af
   140059037:	scas   eax,DWORD PTR es:[rdi]
   140059038:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14005903f:	scas   eax,DWORD PTR es:[rdi]
   140059040:	movabs al,ds:0xc0afb8afb0afa8af
   140059049:	scas   eax,DWORD PTR es:[rdi]
   14005904a:	enter  0xd0af,0xaf
   14005904e:	fsubr  DWORD PTR [rdi-0x50175020]
   140059054:	lock scas eax,DWORD PTR es:[rdi]
   140059056:	clc    
   140059057:	scas   eax,DWORD PTR es:[rdi]
   140059058:	add    BYTE PTR [rax],al
   14005905a:	add    eax,DWORD PTR [rax]
   14005905c:	clc    
   14005905d:	add    DWORD PTR [rax],eax
   14005905f:	add    BYTE PTR [rax],al
   140059061:	movabs al,ds:0xa020a018a010a008
   14005906a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140059070:	movabs al,ds:0xa060a058a050a048
   14005907a:	push   0x78a070a0
   14005907f:	movabs al,ds:0xa098a090a088a080
   140059088:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   140059091:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   14005909a:	call   0x138a6813f
   14005909f:	movabs al,ds:0xa118a110a108a100
   1400590a8:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400590ae:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400590b4:	push   rax
   1400590b5:	movabs eax,ds:0xa170a168a160a158
   1400590be:	js     0x140059061
   1400590c0:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400590c7:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400590d0:	shl    BYTE PTR [rcx-0x5def5e18],0x18
   1400590d7:	movabs ds:0xa238a230a228a220,al
   1400590e0:	movabs ds:0xa260a258a250a248,al
   1400590ea:	push   0x78a270a2
   1400590ef:	movabs ds:0xa298a290a288a280,al
   1400590f8:	movabs al,ds:0xd8a2d0a2b0a2a8a2
   140059101:	movabs ds:0xa318a310a2f8a2f0,al
   14005910a:	xor    BYTE PTR [rbx-0x5caf5cc8],ah
   140059110:	pop    rax
   140059111:	movabs ds:0xa398a390a378a370,eax
   14005911a:	mov    al,0xa3
   14005911c:	mov    eax,0xd8a3d0a3
   140059121:	movabs ds:0xa418a410a3f8a3f0,eax
   14005912a:	xor    BYTE PTR [rax+rdi*1+0x68a560a4],ah
   140059131:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059132:	nop
   140059133:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059134:	cwde   
   140059135:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059136:	movabs al,ds:0xe8a5e0a5c8a5c0a5
   14005913f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059140:	add    BYTE PTR [rsi-0x59df59f8],ah
   140059146:	sub    BYTE PTR [rsi-0x59b759c0],ah
   14005914c:	(bad)  
   14005914d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005914e:	push   0xffffffff88a680a6
   140059153:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059154:	movabs al,ds:0xe0a6c8a6c0a6a8a6
   14005915d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005915e:	call   0x148ac9209
   140059163:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059164:	and    BYTE PTR [rdi-0x58bf58d8],ah
   14005916a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14005916c:	(bad)  
   14005916d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005916e:	push   0xffffffff88a780a7
   140059173:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059174:	movabs al,ds:0xe0a7c8a7c0a7a8a7
   14005917d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005917e:	call   0x148ad922a
   140059183:	test   al,0x20
   140059185:	test   al,0x28
   140059187:	test   al,0x40
   140059189:	test   al,0x48
   14005918b:	test   al,0x60
   14005918d:	test   al,0x68
   14005918f:	test   al,0x80
   140059191:	test   al,0x88
   140059193:	test   al,0xa0
   140059195:	test   al,0xa8
   140059197:	test   al,0xc0
   140059199:	test   al,0xc8
   14005919b:	test   al,0xe0
   14005919d:	test   al,0xe8
   14005919f:	test   al,0x0
   1400591a1:	test   eax,0xa920a908
   1400591a6:	sub    BYTE PTR [rcx-0x56b756c0],ch
   1400591ac:	(bad)  
   1400591ad:	test   eax,0xa980a968
   1400591b2:	mov    BYTE PTR [rcx-0x56575660],ch
   1400591b8:	shr    BYTE PTR [rcx-0x561f5638],0xe8
   1400591bf:	test   eax,0xaa08aa00
   1400591c4:	and    BYTE PTR [rdx-0x55bf55d8],ch
   1400591ca:	rex.W stos BYTE PTR es:[rdi],al
   1400591cc:	(bad)  
   1400591cd:	stos   BYTE PTR es:[rdi],al
   1400591ce:	push   0xffffffff88aa80aa
   1400591d3:	stos   BYTE PTR es:[rdi],al
   1400591d4:	movabs al,ds:0xe0aac8aac0aaa8aa
   1400591dd:	stos   BYTE PTR es:[rdi],al
   1400591de:	call   0x148b0928d
   1400591e3:	stos   DWORD PTR es:[rdi],eax
   1400591e4:	and    BYTE PTR [rbx-0x54bf54d8],ch
   1400591ea:	stos   QWORD PTR es:[rdi],rax
   1400591ec:	(bad)  
   1400591ed:	stos   DWORD PTR es:[rdi],eax
   1400591ee:	push   0xffffffff88ab80ab
   1400591f3:	stos   DWORD PTR es:[rdi],eax
   1400591f4:	movabs al,ds:0xe0abc8abc0aba8ab
   1400591fd:	stos   DWORD PTR es:[rdi],eax
   1400591fe:	call   0x148b192ae
   140059203:	lods   al,BYTE PTR ds:[rsi]
   140059204:	and    BYTE PTR [rax+rbp*1+0x48ac40ac],ch
   14005920b:	lods   al,BYTE PTR ds:[rsi]
   14005920c:	(bad)  
   14005920d:	lods   al,BYTE PTR ds:[rsi]
   14005920e:	push   0xffffffff88ac80ac
   140059213:	lods   al,BYTE PTR ds:[rsi]
   140059214:	movabs al,ds:0xe0acc8acc0aca8ac
   14005921d:	lods   al,BYTE PTR ds:[rsi]
   14005921e:	call   0x148b292cf
   140059223:	lods   eax,DWORD PTR ds:[rsi]
   140059224:	and    BYTE PTR [rbp-0x52bf52d8],ch
   14005922a:	lods   rax,QWORD PTR ds:[rsi]
   14005922c:	lock scas al,BYTE PTR es:[rdi]
   14005922e:	clc    
   14005922f:	scas   al,BYTE PTR es:[rdi]
   140059230:	adc    BYTE PTR [rdi-0x50cf50e8],ch
   140059236:	cmp    BYTE PTR [rdi-0x50a750b0],ch
   14005923c:	jo     0x1400591ed
   14005923e:	js     0x1400591ef
   140059240:	nop
   140059241:	scas   eax,DWORD PTR es:[rdi]
   140059242:	cwde   
   140059243:	scas   eax,DWORD PTR es:[rdi]
   140059244:	mov    al,0xaf
   140059246:	mov    eax,0xd8afd0af
   14005924b:	scas   eax,DWORD PTR es:[rdi]
   14005924c:	lock scas eax,DWORD PTR es:[rdi]
   14005924e:	clc    
   14005924f:	scas   eax,DWORD PTR es:[rdi]
   140059250:	add    BYTE PTR [rax],dl
   140059252:	add    eax,DWORD PTR [rax]
   140059254:	lods   al,BYTE PTR ds:[rsi]
   140059255:	add    al,BYTE PTR [rax]
   140059257:	add    BYTE PTR [rax],dl
   140059259:	movabs al,ds:0xa050a038a030a018
   140059262:	pop    rax
   140059263:	movabs al,ds:0xa2f8a2e8a2d8a260
   14005926c:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   140059272:	cmp    BYTE PTR [rbx-0x5ae75af0],ah
   140059278:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   14005927e:	cmp    BYTE PTR [rbp-0x5ab75ac0],ah
   140059284:	push   rax
   140059285:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059286:	pop    rax
   140059287:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059288:	(bad)  
   140059289:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005928a:	push   0x78a570a5
   14005928f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059290:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140059297:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059298:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400592a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400592a2:	enter  0xd0a5,0xa5
   1400592a6:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400592ac:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400592ae:	clc    
   1400592af:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400592b0:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400592b6:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400592bc:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400592c2:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592c4:	push   rax
   1400592c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592c6:	pop    rax
   1400592c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592c8:	(bad)  
   1400592c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592ca:	push   0x78a670a6
   1400592cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592d0:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400592d7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592d8:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400592e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592e2:	enter  0xd0a6,0xa6
   1400592e6:	fsub   DWORD PTR [rsi-0x59175920]
   1400592ec:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592ee:	clc    
   1400592ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400592f0:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400592f6:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400592fc:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140059302:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140059304:	push   rax
   140059305:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059306:	pop    rax
   140059307:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059308:	(bad)  
   140059309:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005930a:	push   0x78a770a7
   14005930f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059310:	and    BYTE PTR [rdi-0x586f5878],0x98
   140059317:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059318:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140059321:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059322:	enter  0xd0a7,0xa7
   140059326:	fsub   DWORD PTR [rdi-0x58175820]
   14005932c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005932e:	clc    
   14005932f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059330:	add    BYTE PTR [rax-0x57ef57f8],ch
   140059336:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14005933c:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140059342:	rex.W test al,0x50
   140059345:	test   al,0x58
   140059347:	test   al,0x60
   140059349:	test   al,0x68
   14005934b:	test   al,0x70
   14005934d:	test   al,0x78
   14005934f:	test   al,0x80
   140059351:	test   al,0xa8
   140059353:	test   al,0xc8
   140059355:	test   al,0xe8
   140059357:	test   al,0x8
   140059359:	test   eax,0xa948a928
   14005935e:	push   0xffffffff98a990a9
   140059363:	test   eax,0xa9a8a9a0
   140059368:	mov    al,0xa9
   14005936a:	mov    eax,0xc8a9c0a9
   14005936f:	test   eax,0xa9d8a9d0
   140059374:	loopne 0x14005931f
   140059376:	call   0x138af8424
   14005937b:	test   eax,0xaa08aa00
   140059380:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140059386:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14005938c:	stos   BYTE PTR es:[rdi],al
   14005938e:	rex.W stos BYTE PTR es:[rdi],al
   140059390:	push   rax
   140059391:	stos   BYTE PTR es:[rdi],al
   140059392:	pop    rax
   140059393:	stos   BYTE PTR es:[rdi],al
   140059394:	(bad)  
   140059395:	stos   BYTE PTR es:[rdi],al
   140059396:	push   0x78aa70aa
   14005939b:	stos   BYTE PTR es:[rdi],al
   14005939c:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400593a3:	stos   BYTE PTR es:[rdi],al
   1400593a4:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400593ad:	stos   BYTE PTR es:[rdi],al
   1400593ae:	enter  0xd0aa,0xaa
   1400593b2:	fsubr  DWORD PTR [rdx-0x55175520]
   1400593b8:	lock stos BYTE PTR es:[rdi],al
   1400593ba:	clc    
   1400593bb:	stos   BYTE PTR es:[rdi],al
   1400593bc:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400593c2:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400593c8:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400593ce:	stos   QWORD PTR es:[rdi],rax
   1400593d0:	push   rax
   1400593d1:	stos   DWORD PTR es:[rdi],eax
   1400593d2:	pop    rax
   1400593d3:	stos   DWORD PTR es:[rdi],eax
   1400593d4:	(bad)  
   1400593d5:	stos   DWORD PTR es:[rdi],eax
   1400593d6:	push   0x78ab70ab
   1400593db:	stos   DWORD PTR es:[rdi],eax
   1400593dc:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400593e3:	stos   DWORD PTR es:[rdi],eax
   1400593e4:	movabs al,ds:0xc0abb8abb0aba8ab
   1400593ed:	stos   DWORD PTR es:[rdi],eax
   1400593ee:	enter  0xd0ab,0xab
   1400593f2:	fsubr  DWORD PTR [rbx-0x54175420]
   1400593f8:	lock stos DWORD PTR es:[rdi],eax
   1400593fa:	clc    
   1400593fb:	stos   DWORD PTR es:[rdi],eax
   1400593fc:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140059403:	lods   al,BYTE PTR ds:[rsi]
   140059404:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14005940b:	lods   al,BYTE PTR ds:[rsi]
   14005940c:	lods   al,BYTE PTR ds:[rsi]
   14005940e:	rex.W lods al,BYTE PTR ds:[rsi]
   140059410:	push   rax
   140059411:	lods   al,BYTE PTR ds:[rsi]
   140059412:	pop    rax
   140059413:	lods   al,BYTE PTR ds:[rsi]
   140059414:	(bad)  
   140059415:	lods   al,BYTE PTR ds:[rsi]
   140059416:	push   0x78ac70ac
   14005941b:	lods   al,BYTE PTR ds:[rsi]
   14005941c:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   140059424:	movabs al,ds:0xc0acb8acb0aca8ac
   14005942d:	lods   al,BYTE PTR ds:[rsi]
   14005942e:	enter  0xd0ac,0xac
   140059432:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140059439:	lods   al,BYTE PTR ds:[rsi]
   14005943a:	clc    
   14005943b:	lods   al,BYTE PTR ds:[rsi]
   14005943c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140059442:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140059448:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14005944e:	lods   rax,QWORD PTR ds:[rsi]
   140059450:	push   rax
   140059451:	lods   eax,DWORD PTR ds:[rsi]
   140059452:	pop    rax
   140059453:	lods   eax,DWORD PTR ds:[rsi]
   140059454:	(bad)  
   140059455:	lods   eax,DWORD PTR ds:[rsi]
   140059456:	push   0x78ad70ad
   14005945b:	lods   eax,DWORD PTR ds:[rsi]
   14005945c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140059463:	lods   eax,DWORD PTR ds:[rsi]
   140059464:	movabs al,ds:0xc0adb8adb0ada8ad
   14005946d:	lods   eax,DWORD PTR ds:[rsi]
   14005946e:	enter  0xd0ad,0xad
   140059472:	fsubr  DWORD PTR [rbp-0x52175220]
   140059478:	lock lods eax,DWORD PTR ds:[rsi]
   14005947a:	clc    
   14005947b:	lods   eax,DWORD PTR ds:[rsi]
   14005947c:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140059482:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140059488:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14005948e:	rex.W scas al,BYTE PTR es:[rdi]
   140059490:	push   rax
   140059491:	scas   al,BYTE PTR es:[rdi]
   140059492:	pop    rax
   140059493:	scas   al,BYTE PTR es:[rdi]
   140059494:	(bad)  
   140059495:	scas   al,BYTE PTR es:[rdi]
   140059496:	push   0x78ae70ae
   14005949b:	scas   al,BYTE PTR es:[rdi]
   14005949c:	sub    BYTE PTR [rsi-0x516f5178],0x98
   1400594a3:	scas   al,BYTE PTR es:[rdi]
   1400594a4:	movabs al,ds:0xc0aeb8aeb0aea8ae
   1400594ad:	scas   al,BYTE PTR es:[rdi]
   1400594ae:	enter  0xd0ae,0xae
   1400594b2:	fsubr  DWORD PTR [rsi-0x51175120]
   1400594b8:	lock scas al,BYTE PTR es:[rdi]
   1400594ba:	clc    
   1400594bb:	scas   al,BYTE PTR es:[rdi]
   1400594bc:	add    BYTE PTR [rdi-0x50ef50f8],ch
   1400594c2:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   1400594c8:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   1400594ce:	scas   rax,QWORD PTR es:[rdi]
   1400594d0:	push   rax
   1400594d1:	scas   eax,DWORD PTR es:[rdi]
   1400594d2:	pop    rax
   1400594d3:	scas   eax,DWORD PTR es:[rdi]
   1400594d4:	(bad)  
   1400594d5:	scas   eax,DWORD PTR es:[rdi]
   1400594d6:	push   0x78af70af
   1400594db:	scas   eax,DWORD PTR es:[rdi]
   1400594dc:	sub    BYTE PTR [rdi-0x506f5078],0x98
   1400594e3:	scas   eax,DWORD PTR es:[rdi]
   1400594e4:	movabs al,ds:0xc0afb8afb0afa8af
   1400594ed:	scas   eax,DWORD PTR es:[rdi]
   1400594ee:	enter  0xd0af,0xaf
   1400594f2:	fsubr  DWORD PTR [rdi-0x50175020]
   1400594f8:	lock scas eax,DWORD PTR es:[rdi]
   1400594fa:	clc    
   1400594fb:	scas   eax,DWORD PTR es:[rdi]
   1400594fc:	add    BYTE PTR [rax],ah
   1400594fe:	add    eax,DWORD PTR [rax]
   140059500:	mov    esp,0x3
   140059505:	movabs al,ds:0xa020a018a010a008
   14005950e:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140059514:	movabs al,ds:0xa060a058a050a048
   14005951e:	push   0x78a070a0
   140059523:	movabs al,ds:0xa098a090a088a080
   14005952c:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   140059535:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   14005953e:	call   0x138a685e3
   140059543:	movabs al,ds:0xa118a110a108a100
   14005954c:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   140059552:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   140059558:	push   rax
   140059559:	movabs eax,ds:0xa170a168a160a158
   140059562:	js     0x140059505
   140059564:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14005956b:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140059574:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14005957b:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140059584:	add    BYTE PTR [rdx-0x5def5df8],ah
   14005958a:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140059590:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   140059596:	rex.W movabs ds:0xa280a278a260a258,al
   1400595a0:	mov    BYTE PTR [rdx-0x5d675d70],ah
   1400595a6:	movabs al,ds:0xc0a2b8a2b0a2a8a2
   1400595af:	movabs ds:0xa2e0a2d8a2d0a2c8,al
   1400595b8:	call   0x138a8865f
   1400595bd:	movabs ds:0xa318a310a308a300,al
   1400595c6:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   1400595cc:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   1400595d2:	push   rax
   1400595d3:	movabs ds:0xa370a368a360a358,eax
   1400595dc:	js     0x140059581
   1400595de:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   1400595e5:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   1400595ee:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   1400595f5:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   1400595fe:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   140059605:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059606:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14005960d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005960e:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059610:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059612:	push   rax
   140059613:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059614:	pop    rax
   140059615:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059616:	(bad)  
   140059617:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059618:	push   0x78a470a4
   14005961d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005961e:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140059626:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14005962f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059630:	enter  0xd0a4,0xa4
   140059634:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14005963b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005963c:	clc    
   14005963d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005963e:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140059644:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14005964a:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140059650:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140059652:	js     0x1400595f9
   140059654:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14005965b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005965c:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   140059665:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059666:	enter  0xd0a5,0xa5
   14005966a:	fsub   DWORD PTR [rbp-0x5a175a20]
   140059670:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059672:	clc    
   140059673:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059674:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14005967a:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140059680:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140059686:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059688:	push   rax
   140059689:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005968a:	pop    rax
   14005968b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005968c:	(bad)  
   14005968d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005968e:	push   0x78a670a6
   140059693:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059694:	and    BYTE PTR [rsi-0x596f5978],0x98
   14005969b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005969c:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400596a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400596a6:	enter  0xd0a6,0xa6
   1400596aa:	fsub   DWORD PTR [rsi-0x59175920]
   1400596b0:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400596b2:	clc    
   1400596b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400596b4:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400596ba:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400596c0:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400596c6:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400596c8:	push   rax
   1400596c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596ca:	pop    rax
   1400596cb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596cc:	(bad)  
   1400596cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596ce:	push   0x78a770a7
   1400596d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596d4:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400596db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596dc:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400596e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596e6:	enter  0xd0a7,0xa7
   1400596ea:	fsub   DWORD PTR [rdi-0x58175820]
   1400596f0:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596f2:	clc    
   1400596f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400596f4:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400596fa:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140059700:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140059706:	rex.W test al,0x50
   140059709:	test   al,0x58
   14005970b:	test   al,0x60
   14005970d:	test   al,0x68
   14005970f:	test   al,0x70
   140059711:	test   al,0x78
   140059713:	test   al,0x80
   140059715:	test   al,0x88
   140059717:	test   al,0x90
   140059719:	test   al,0x88
   14005971b:	test   eax,0xa998a990
   140059720:	movabs al,ds:0xc0a9b8a9b0a9a8a9
   140059729:	test   eax,0xa9d0a9c8
   14005972e:	fsubr  DWORD PTR [rcx-0x56175620]
   140059734:	lock test eax,0xaa00a9f8
   14005973a:	or     BYTE PTR [rdx-0x55e755f0],ch
   140059740:	and    BYTE PTR [rdx-0x55cf55d8],ch
   140059746:	cmp    BYTE PTR [rdx-0x55b755c0],ch
   14005974c:	push   rax
   14005974d:	stos   BYTE PTR es:[rdi],al
   14005974e:	pop    rax
   14005974f:	stos   BYTE PTR es:[rdi],al
   140059750:	(bad)  
   140059751:	stos   BYTE PTR es:[rdi],al
   140059752:	push   0x78aa70aa
   140059757:	stos   BYTE PTR es:[rdi],al
   140059758:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14005975f:	stos   BYTE PTR es:[rdi],al
   140059760:	movabs al,ds:0xc0aab8aab0aaa8aa
   140059769:	stos   BYTE PTR es:[rdi],al
   14005976a:	enter  0xd0aa,0xaa
   14005976e:	fsubr  DWORD PTR [rdx-0x55175520]
   140059774:	lock stos BYTE PTR es:[rdi],al
   140059776:	clc    
   140059777:	stos   BYTE PTR es:[rdi],al
   140059778:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14005977e:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140059784:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14005978a:	stos   QWORD PTR es:[rdi],rax
   14005978c:	push   rax
   14005978d:	stos   DWORD PTR es:[rdi],eax
   14005978e:	pop    rax
   14005978f:	stos   DWORD PTR es:[rdi],eax
   140059790:	(bad)  
   140059791:	stos   DWORD PTR es:[rdi],eax
   140059792:	push   0x78ab70ab
   140059797:	stos   DWORD PTR es:[rdi],eax
   140059798:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14005979f:	stos   DWORD PTR es:[rdi],eax
   1400597a0:	movabs al,ds:0xc0abb8abb0aba8ab
   1400597a9:	stos   DWORD PTR es:[rdi],eax
   1400597aa:	enter  0xd0ab,0xab
   1400597ae:	fsubr  DWORD PTR [rbx-0x54175420]
   1400597b4:	lock stos DWORD PTR es:[rdi],eax
   1400597b6:	clc    
   1400597b7:	stos   DWORD PTR es:[rdi],eax
   1400597b8:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400597bf:	lods   al,BYTE PTR ds:[rsi]
   1400597c0:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400597c7:	lods   al,BYTE PTR ds:[rsi]
   1400597c8:	lods   al,BYTE PTR ds:[rsi]
   1400597ca:	rex.W lods al,BYTE PTR ds:[rsi]
   1400597cc:	push   rax
   1400597cd:	lods   al,BYTE PTR ds:[rsi]
   1400597ce:	pop    rax
   1400597cf:	lods   al,BYTE PTR ds:[rsi]
   1400597d0:	(bad)  
   1400597d1:	lods   al,BYTE PTR ds:[rsi]
   1400597d2:	push   0x78ac70ac
   1400597d7:	lods   al,BYTE PTR ds:[rsi]
   1400597d8:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400597e0:	movabs al,ds:0xc0acb8acb0aca8ac
   1400597e9:	lods   al,BYTE PTR ds:[rsi]
   1400597ea:	enter  0xd0ac,0xac
   1400597ee:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400597f5:	lods   al,BYTE PTR ds:[rsi]
   1400597f6:	clc    
   1400597f7:	lods   al,BYTE PTR ds:[rsi]
   1400597f8:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400597fe:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140059804:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14005980a:	lods   rax,QWORD PTR ds:[rsi]
   14005980c:	push   rax
   14005980d:	lods   eax,DWORD PTR ds:[rsi]
   14005980e:	pop    rax
   14005980f:	lods   eax,DWORD PTR ds:[rsi]
   140059810:	(bad)  
   140059811:	lods   eax,DWORD PTR ds:[rsi]
   140059812:	push   0x78ad70ad
   140059817:	lods   eax,DWORD PTR ds:[rsi]
   140059818:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14005981f:	lods   eax,DWORD PTR ds:[rsi]
   140059820:	movabs al,ds:0xc0adb8adb0ada8ad
   140059829:	lods   eax,DWORD PTR ds:[rsi]
   14005982a:	enter  0xd0ad,0xad
   14005982e:	fsubr  DWORD PTR [rbp-0x52175220]
   140059834:	lock lods eax,DWORD PTR ds:[rsi]
   140059836:	clc    
   140059837:	lods   eax,DWORD PTR ds:[rsi]
   140059838:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14005983e:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140059844:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14005984a:	rex.W scas al,BYTE PTR es:[rdi]
   14005984c:	push   rax
   14005984d:	scas   al,BYTE PTR es:[rdi]
   14005984e:	pop    rax
   14005984f:	scas   al,BYTE PTR es:[rdi]
   140059850:	(bad)  
   140059851:	scas   al,BYTE PTR es:[rdi]
   140059852:	push   0x78ae70ae
   140059857:	scas   al,BYTE PTR es:[rdi]
   140059858:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14005985f:	scas   al,BYTE PTR es:[rdi]
   140059860:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140059869:	scas   al,BYTE PTR es:[rdi]
   14005986a:	enter  0xd0ae,0xae
   14005986e:	fsubr  DWORD PTR [rsi-0x51175120]
   140059874:	lock scas al,BYTE PTR es:[rdi]
   140059876:	clc    
   140059877:	scas   al,BYTE PTR es:[rdi]
   140059878:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14005987e:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140059884:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14005988a:	scas   rax,QWORD PTR es:[rdi]
   14005988c:	push   rax
   14005988d:	scas   eax,DWORD PTR es:[rdi]
   14005988e:	pop    rax
   14005988f:	scas   eax,DWORD PTR es:[rdi]
   140059890:	(bad)  
   140059891:	scas   eax,DWORD PTR es:[rdi]
   140059892:	push   0x78af70af
   140059897:	scas   eax,DWORD PTR es:[rdi]
   140059898:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14005989f:	scas   eax,DWORD PTR es:[rdi]
   1400598a0:	movabs al,ds:0xc0afb8afb0afa8af
   1400598a9:	scas   eax,DWORD PTR es:[rdi]
   1400598aa:	enter  0xd0af,0xaf
   1400598ae:	fsubr  DWORD PTR [rdi-0x50175020]
   1400598b4:	lock scas eax,DWORD PTR es:[rdi]
   1400598b6:	clc    
   1400598b7:	scas   eax,DWORD PTR es:[rdi]
   1400598b8:	add    BYTE PTR [rax],dh
   1400598ba:	add    eax,DWORD PTR [rax]
   1400598bc:	adc    BYTE PTR [rbx],al
   1400598be:	add    BYTE PTR [rax],al
   1400598c0:	add    BYTE PTR [rax-0x5fd75ff8],ah
   1400598c6:	rex.W movabs al,ds:0xa0d0a0a8a088a068
   1400598d0:	loopne 0x140059872
   1400598d2:	call   0x150a6a177
   1400598d7:	movabs eax,ds:0xa130a128a120a118
   1400598e0:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400598e6:	push   rax
   1400598e7:	movabs eax,ds:0xa170a168a160a158
   1400598f0:	js     0x140059893
   1400598f2:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400598f9:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140059902:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   140059909:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140059912:	add    BYTE PTR [rdx-0x5def5df8],ah
   140059918:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14005991e:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   140059924:	rex.W movabs ds:0xa268a260a258a250,al
   14005992e:	jo     0x1400598d2
   140059930:	js     0x1400598d4
   140059932:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140059939:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140059942:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   140059949:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   140059952:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   140059958:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14005995e:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   140059964:	movabs ds:0xa368a360a358a350,rax
   14005996e:	jo     0x140059913
   140059970:	js     0x140059915
   140059972:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140059979:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140059982:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   140059989:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   140059992:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   140059999:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005999a:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   1400599a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599a2:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599a4:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599a6:	push   rax
   1400599a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599a8:	pop    rax
   1400599a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599aa:	(bad)  
   1400599ab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599ac:	push   0x78a470a4
   1400599b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400599b2:	and    BYTE PTR [rax+rcx*4-0x375b575c],0xa4
   1400599ba:	call   0x168aaa263
   1400599bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400599c0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400599c2:	push   0xffffffffa8a588a5
   1400599c7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400599c8:	shl    BYTE PTR [rbp-0x5a175a20],1
   1400599ce:	add    BYTE PTR [rsi-0x59e759f0],ah
   1400599d4:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400599da:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599dc:	push   rax
   1400599dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599de:	pop    rax
   1400599df:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599e0:	(bad)  
   1400599e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599e2:	push   0x78a670a6
   1400599e7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599e8:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400599ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599f0:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400599f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400599fa:	enter  0xd0a6,0xa6
   1400599fe:	fsub   DWORD PTR [rsi-0x59175920]
   140059a04:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059a06:	clc    
   140059a07:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059a08:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140059a0e:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140059a14:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140059a1a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140059a1c:	push   rax
   140059a1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a1e:	pop    rax
   140059a1f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a20:	(bad)  
   140059a21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a22:	push   0x78a770a7
   140059a27:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a28:	and    BYTE PTR [rdi-0x586f5878],0x98
   140059a2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a30:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140059a39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a3a:	enter  0xd0a7,0xa7
   140059a3e:	fsub   DWORD PTR [rdi-0x58175820]
   140059a44:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a46:	clc    
   140059a47:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059a48:	add    BYTE PTR [rax-0x57ef57f8],ch
   140059a4e:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140059a54:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140059a5a:	rex.W test al,0x50
   140059a5d:	test   al,0x58
   140059a5f:	test   al,0x60
   140059a61:	test   al,0x68
   140059a63:	test   al,0x70
   140059a65:	test   al,0x78
   140059a67:	test   al,0x80
   140059a69:	test   al,0x88
   140059a6b:	test   al,0x90
   140059a6d:	test   al,0x98
   140059a6f:	test   al,0xa0
   140059a71:	test   al,0xa8
   140059a73:	test   al,0xb0
   140059a75:	test   al,0xb8
   140059a77:	test   al,0xc0
   140059a79:	test   al,0xc8
   140059a7b:	test   al,0xd0
   140059a7d:	test   al,0xd8
   140059a7f:	test   al,0xe0
   140059a81:	test   al,0xe8
   140059a83:	test   al,0xf0
   140059a85:	test   al,0xf8
   140059a87:	test   al,0x0
   140059a89:	test   eax,0xa910a908
   140059a8e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140059a94:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140059a9a:	test   rax,0xffffffffa958a950
   140059aa0:	(bad)  
   140059aa1:	test   eax,0xa970a968
   140059aa6:	js     0x140059a51
   140059aa8:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140059aaf:	test   eax,0xa9a8a9a0
   140059ab4:	mov    al,0xa9
   140059ab6:	push   0xffffffffa8aa88aa
   140059abb:	stos   BYTE PTR es:[rdi],al
   140059abc:	enter  0xe8aa,0xaa
   140059ac0:	or     BYTE PTR [rbx-0x548754d8],ch
   140059ac6:	cwde   
   140059ac7:	stos   DWORD PTR es:[rdi],eax
   140059ac8:	mov    eax,0xabd8ab
   140059acd:	lods   al,BYTE PTR ds:[rsi]
   140059ace:	or     BYTE PTR [rax+rdx*1+0x20ac18ac],ch
   140059ad5:	lods   al,BYTE PTR ds:[rsi]
   140059ad6:	sub    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   140059add:	lods   al,BYTE PTR ds:[rsi]
   140059ade:	rex.W lods al,BYTE PTR ds:[rsi]
   140059ae0:	push   rax
   140059ae1:	lods   al,BYTE PTR ds:[rsi]
   140059ae2:	pop    rax
   140059ae3:	lods   al,BYTE PTR ds:[rsi]
   140059ae4:	(bad)  
   140059ae5:	lods   al,BYTE PTR ds:[rsi]
   140059ae6:	push   0x78ac70ac
   140059aeb:	lods   al,BYTE PTR ds:[rsi]
   140059aec:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   140059af4:	movabs al,ds:0xc0acb8acb0aca8ac
   140059afd:	lods   al,BYTE PTR ds:[rsi]
   140059afe:	enter  0xd0ac,0xac
   140059b02:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140059b09:	lods   al,BYTE PTR ds:[rsi]
   140059b0a:	clc    
   140059b0b:	lods   al,BYTE PTR ds:[rsi]
   140059b0c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140059b12:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140059b18:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   140059b1e:	lods   rax,QWORD PTR ds:[rsi]
   140059b20:	push   rax
   140059b21:	lods   eax,DWORD PTR ds:[rsi]
   140059b22:	pop    rax
   140059b23:	lods   eax,DWORD PTR ds:[rsi]
   140059b24:	(bad)  
   140059b25:	lods   eax,DWORD PTR ds:[rsi]
   140059b26:	push   0x78ad70ad
   140059b2b:	lods   eax,DWORD PTR ds:[rsi]
   140059b2c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140059b33:	lods   eax,DWORD PTR ds:[rsi]
   140059b34:	movabs al,ds:0xc0adb8adb0ada8ad
   140059b3d:	lods   eax,DWORD PTR ds:[rsi]
   140059b3e:	enter  0xd0ad,0xad
   140059b42:	fsubr  DWORD PTR [rbp-0x52175220]
   140059b48:	lock lods eax,DWORD PTR ds:[rsi]
   140059b4a:	clc    
   140059b4b:	lods   eax,DWORD PTR ds:[rsi]
   140059b4c:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140059b52:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140059b58:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   140059b5e:	rex.W scas al,BYTE PTR es:[rdi]
   140059b60:	push   rax
   140059b61:	scas   al,BYTE PTR es:[rdi]
   140059b62:	pop    rax
   140059b63:	scas   al,BYTE PTR es:[rdi]
   140059b64:	(bad)  
   140059b65:	scas   al,BYTE PTR es:[rdi]
   140059b66:	push   0x78ae70ae
   140059b6b:	scas   al,BYTE PTR es:[rdi]
   140059b6c:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140059b73:	scas   al,BYTE PTR es:[rdi]
   140059b74:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140059b7d:	scas   al,BYTE PTR es:[rdi]
   140059b7e:	enter  0xd0ae,0xae
   140059b82:	fsubr  DWORD PTR [rsi-0x51175120]
   140059b88:	lock scas al,BYTE PTR es:[rdi]
   140059b8a:	clc    
   140059b8b:	scas   al,BYTE PTR es:[rdi]
   140059b8c:	adc    BYTE PTR [rdi-0x50df50e8],ch
   140059b92:	sub    BYTE PTR [rdi-0x50c750d0],ch
   140059b98:	rex scas eax,DWORD PTR es:[rdi]
   140059b9a:	scas   rax,QWORD PTR es:[rdi]
   140059b9c:	push   rax
   140059b9d:	scas   eax,DWORD PTR es:[rdi]
   140059b9e:	pop    rax
   140059b9f:	scas   eax,DWORD PTR es:[rdi]
   140059ba0:	(bad)  
   140059ba1:	scas   eax,DWORD PTR es:[rdi]
   140059ba2:	push   0x78af70af
   140059ba7:	scas   eax,DWORD PTR es:[rdi]
   140059ba8:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140059baf:	scas   eax,DWORD PTR es:[rdi]
   140059bb0:	movabs al,ds:0xc0afb8afb0afa8af
   140059bb9:	scas   eax,DWORD PTR es:[rdi]
   140059bba:	enter  0xd0af,0xaf
   140059bbe:	fsubr  DWORD PTR [rdi-0x50175020]
   140059bc4:	lock scas eax,DWORD PTR es:[rdi]
   140059bc6:	clc    
   140059bc7:	scas   eax,DWORD PTR es:[rdi]
   140059bc8:	add    BYTE PTR [rax+0x3],al
   140059bcb:	add    BYTE PTR [rcx+rax*1-0x60000000],dh
   140059bd2:	or     BYTE PTR [rax-0x5fe75ff0],ah
   140059bd8:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   140059bde:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   140059be4:	push   rax
   140059be5:	movabs al,ds:0xa070a068a060a058
   140059bee:	js     0x140059b90
   140059bf0:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   140059bf7:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   140059c00:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   140059c07:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   140059c10:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   140059c16:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   140059c1c:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   140059c22:	movabs rax,ds:0xa168a160a158a150
   140059c2c:	jo     0x140059bcf
   140059c2e:	js     0x140059bd1
   140059c30:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   140059c37:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140059c40:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   140059c47:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140059c50:	add    BYTE PTR [rdx-0x5def5df8],ah
   140059c56:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140059c5c:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   140059c62:	rex.W movabs ds:0xa268a260a258a250,al
   140059c6c:	jo     0x140059c10
   140059c6e:	js     0x140059c12
   140059c70:	and    BYTE PTR [rdx-0x5d5f5d78],0xc0
   140059c77:	movabs ds:0xa368a360a358a2c8,al
   140059c80:	jo     0x140059c25
   140059c82:	js     0x140059c27
   140059c84:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140059c8b:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140059c94:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   140059c9b:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   140059ca4:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   140059cab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cac:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   140059cb3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cb4:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cb6:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cb8:	push   rax
   140059cb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cba:	pop    rax
   140059cbb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cbc:	(bad)  
   140059cbd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cbe:	push   0x78a470a4
   140059cc3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cc4:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140059ccc:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   140059cd5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059cd6:	enter  0xd0a4,0xa4
   140059cda:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   140059ce1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059ce2:	clc    
   140059ce3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059ce4:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140059cea:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140059cf0:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140059cf6:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140059cf8:	push   rax
   140059cf9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059cfa:	pop    rax
   140059cfb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059cfc:	(bad)  
   140059cfd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059cfe:	push   0x78a570a5
   140059d03:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059d04:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140059d0b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059d0c:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   140059d15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059d16:	enter  0xd0a5,0xa5
   140059d1a:	fsub   DWORD PTR [rbp-0x5a175a20]
   140059d20:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059d22:	clc    
   140059d23:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059d24:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140059d2a:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140059d30:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140059d36:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d38:	push   rax
   140059d39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d3a:	pop    rax
   140059d3b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d3c:	(bad)  
   140059d3d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d3e:	push   0x78a670a6
   140059d43:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d44:	and    BYTE PTR [rsi-0x596f5978],0x98
   140059d4b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d4c:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140059d55:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059d56:	enter  0xd0a6,0xa6
   140059d5a:	loopne 0x140059d02
   140059d5c:	call   0x178acb607
   140059d61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059d62:	pop    rax
   140059d63:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059d64:	js     0x140059d0d
   140059d66:	cwde   
   140059d67:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059d68:	(bad)  
   140059d69:	test   al,0x68
   140059d6b:	test   al,0x70
   140059d6d:	test   al,0x78
   140059d6f:	test   al,0x80
   140059d71:	test   al,0x88
   140059d73:	test   al,0x90
   140059d75:	test   al,0x98
   140059d77:	test   al,0xa0
   140059d79:	test   al,0x0
   140059d7b:	add    BYTE PTR [rax],al
   140059d7d:	push   rax
   140059d7e:	add    eax,DWORD PTR [rax]
   140059d80:	or     al,0x0
   140059d82:	add    BYTE PTR [rax],al
   140059d84:	or     BYTE PTR [rax-0x40000000],ch
   140059d8a:	add    eax,DWORD PTR [rax]
   140059d8c:	ins    BYTE PTR es:[rdi],dx
   140059d8d:	add    BYTE PTR [rax],al
   140059d8f:	add    BYTE PTR [rax-0x275d375e],bh
   140059d95:	movabs ds:0xa4b8a4b0a2f8a2e8,al
   140059d9e:	shl    BYTE PTR [rax+rcx*8-0x275b2f5c],0xa4
   140059da6:	loopne 0x140059d4c
   140059da8:	call   0x138aa8e51
   140059dad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059dae:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140059db4:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   140059dba:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140059dc0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140059dc2:	push   rax
   140059dc3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dc4:	pop    rax
   140059dc5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dc6:	(bad)  
   140059dc7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dc8:	push   0x78a570a5
   140059dcd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dce:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140059dd5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dd6:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   140059ddf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059de0:	enter  0xd0a5,0xa5
   140059de4:	fsub   DWORD PTR [rbp-0x5a175a20]
   140059dea:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dec:	clc    
   140059ded:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059dee:	add    BYTE PTR [rsi+0xa608],ah
   140059df4:	add    al,dl
   140059df6:	add    eax,DWORD PTR [rax]
   140059df8:	push   rsp
   140059df9:	add    BYTE PTR [rax],al
   140059dfb:	add    BYTE PTR [rax],bl
   140059dfd:	movabs ds:0xa350a330a328a320,eax
   140059e06:	js     0x140059dab
   140059e08:	cwde   
   140059e09:	movabs ds:0xa460a430a3f8a3d0,eax
   140059e12:	and    BYTE PTR [rax+rdi*4-0x75b275c],0xa4
   140059e1a:	sbb    BYTE PTR [rbp-0x5aa75ac8],ah
   140059e20:	js     0x140059dc7
   140059e22:	movabs al,ds:0x38a610a5f0a5c0a5
   140059e2b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059e2c:	pop    rax
   140059e2d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059e2e:	js     0x140059dd6
   140059e30:	cwde   
   140059e31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059e32:	mov    eax,0xf8a6d8a6
   140059e37:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059e38:	sbb    BYTE PTR [rdi-0x589758c0],ah
   140059e3e:	cwde   
   140059e3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059e40:	shl    BYTE PTR [rdi-0x57ef5820],0x0
	...
