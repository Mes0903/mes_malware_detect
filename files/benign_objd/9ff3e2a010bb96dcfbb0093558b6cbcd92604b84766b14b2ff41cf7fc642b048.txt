
9ff3e2a010bb96dcfbb0093558b6cbcd92604b84766b14b2ff41cf7fc642b048.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	test   ecx,ecx
   140001002:	jne    0x1400010ca
   140001008:	mov    r11,rsp
   14000100b:	mov    QWORD PTR [r11+0x10],rdx
   14000100f:	mov    QWORD PTR [r11+0x18],r8
   140001013:	mov    QWORD PTR [r11+0x20],r9
   140001017:	push   rbx
   140001018:	push   rdi
   140001019:	sub    rsp,0x448
   140001020:	mov    rax,QWORD PTR [rip+0x10fe1]        # 0x140012008
   140001027:	xor    rax,rsp
   14000102a:	mov    QWORD PTR [rsp+0x430],rax
   140001032:	mov    r9,rdx
   140001035:	mov    edx,0x400
   14000103a:	lea    rax,[r11+0x18]
   14000103e:	lea    rcx,[rsp+0x30]
   140001043:	lea    r8d,[rdx-0x1]
   140001047:	xor    edi,edi
   140001049:	mov    QWORD PTR [rsp+0x20],rax
   14000104e:	call   0x1400047c8
   140001053:	lea    rcx,[rip+0xecd6]        # 0x14000fd30
   14000105a:	call   QWORD PTR [rip+0xd028]        # 0x14000e088
   140001060:	mov    rbx,rax
   140001063:	mov    rax,QWORD PTR [rip+0x135a6]        # 0x140014610
   14000106a:	test   rax,rax
   14000106d:	jne    0x14000109b
   14000106f:	test   rbx,rbx
   140001072:	je     0x1400010be
   140001074:	lea    rdx,[rip+0xecc5]        # 0x14000fd40
   14000107b:	mov    rcx,rbx
   14000107e:	call   QWORD PTR [rip+0xcffc]        # 0x14000e080
   140001084:	mov    QWORD PTR [rip+0x13585],rax        # 0x140014610
   14000108b:	test   rax,rax
   14000108e:	jne    0x14000109b
   140001090:	mov    rcx,rbx
   140001093:	call   QWORD PTR [rip+0xcf7f]        # 0x14000e018
   140001099:	jmp    0x1400010be
   14000109b:	lea    r8,[rip+0xecb6]        # 0x14000fd58
   1400010a2:	lea    rdx,[rsp+0x30]
   1400010a7:	mov    r9d,0x10010
   1400010ad:	xor    ecx,ecx
   1400010af:	mov    DWORD PTR [rsp+0x28],0xbb8
   1400010b7:	mov    WORD PTR [rsp+0x20],di
   1400010bc:	call   rax
   1400010be:	mov    ecx,0x1
   1400010c3:	call   QWORD PTR [rip+0xcf37]        # 0x14000e000
   1400010c9:	int3   
   1400010ca:	ret    
   1400010cb:	int3   
   1400010cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400010d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400010d6:	push   rdi
   1400010d7:	sub    rsp,0x20
   1400010db:	mov    eax,DWORD PTR [rip+0x122d7]        # 0x1400133b8
   1400010e1:	mov    rdi,rdx
   1400010e4:	mov    rsi,rcx
   1400010e7:	xor    ebx,ebx
   1400010e9:	mov    r9,rcx
   1400010ec:	lea    r8,[rdx-0x4]
   1400010f0:	movsx  edx,al
   1400010f3:	mov    rcx,r9
   1400010f6:	call   0x140001ff0
   1400010fb:	mov    r9,rax
   1400010fe:	test   rax,rax
   140001101:	je     0x140001120
   140001103:	mov    eax,DWORD PTR [rip+0x122af]        # 0x1400133b8
   140001109:	mov    rcx,rsi
   14000110c:	cmp    eax,DWORD PTR [r9]
   14000110f:	cmove  rbx,r9
   140001113:	inc    r9
   140001116:	sub    rcx,r9
   140001119:	lea    r8,[rcx+rdi*1-0x4]
   14000111e:	jmp    0x1400010f0
   140001120:	mov    rsi,QWORD PTR [rsp+0x38]
   140001125:	mov    rax,rbx
   140001128:	mov    rbx,QWORD PTR [rsp+0x30]
   14000112d:	add    rsp,0x20
   140001131:	pop    rdi
   140001132:	ret    
   140001133:	int3   
   140001134:	mov    QWORD PTR [rsp+0x10],rbx
   140001139:	mov    QWORD PTR [rsp+0x18],rsi
   14000113e:	mov    QWORD PTR [rsp+0x20],rdi
   140001143:	push   rbp
   140001144:	push   r12
   140001146:	push   r13
   140001148:	push   r14
   14000114a:	push   r15
   14000114c:	mov    rbp,rsp
   14000114f:	sub    rsp,0x40
   140001153:	mov    r13,rcx
   140001156:	lea    r8,[rip+0xec13]        # 0x14000fd70
   14000115d:	lea    rdx,[rip+0x1329c]        # 0x140014400
   140001164:	lea    rcx,[rbp+0x30]
   140001168:	xor    r12d,r12d
   14000116b:	mov    QWORD PTR [rbp+0x30],r12
   14000116f:	call   0x140001a80
   140001174:	mov    ecx,r12d
   140001177:	test   eax,eax
   140001179:	lea    rdx,[rip+0xebf8]        # 0x14000fd78
   140001180:	sete   cl
   140001183:	call   0x140001000
   140001188:	mov    rcx,QWORD PTR [rbp+0x30]
   14000118c:	lea    r8d,[r12+0x2]
   140001191:	xor    edx,edx
   140001193:	call   0x14000265c
   140001198:	mov    rcx,QWORD PTR [rbp+0x30]
   14000119c:	call   0x140002550
   1400011a1:	mov    rcx,QWORD PTR [rbp+0x30]
   1400011a5:	movsxd r14,eax
   1400011a8:	lea    edi,[r14-0x104]
   1400011af:	test   edi,edi
   1400011b1:	cmovs  edi,r12d
   1400011b5:	xor    r8d,r8d
   1400011b8:	mov    edx,edi
   1400011ba:	call   0x14000265c
   1400011bf:	mov    r9,QWORD PTR [rbp+0x30]
   1400011c3:	lea    r15d,[r12+0x1]
   1400011c8:	mov    edx,r15d
   1400011cb:	mov    r8d,0x104
   1400011d1:	mov    rcx,r13
   1400011d4:	call   0x140002310
   1400011d9:	mov    rcx,r13
   1400011dc:	mov    rdx,rax
   1400011df:	call   0x1400010cc
   1400011e4:	mov    rbx,rax
   1400011e7:	test   rax,rax
   1400011ea:	je     0x14000120b
   1400011ec:	lea    rcx,[rbp-0x20]
   1400011f0:	lea    r8d,[r12+0x14]
   1400011f5:	mov    rdx,rax
   1400011f8:	call   0x140007580
   1400011fd:	movsxd rdi,edi
   140001200:	sub    rdi,r13
   140001203:	add    rdi,rbx
   140001206:	jmp    0x14000128d
   14000120b:	mov    ebx,0x4100000
   140001210:	mov    ecx,ebx
   140001212:	call   0x140001f38
   140001217:	mov    rcx,QWORD PTR [rbp+0x30]
   14000121b:	lea    edi,[r14-0x4100000]
   140001222:	test   edi,edi
   140001224:	mov    rsi,rax
   140001227:	cmovs  edi,r12d
   14000122b:	xor    r8d,r8d
   14000122e:	mov    edx,edi
   140001230:	call   0x14000265c
   140001235:	mov    r9,QWORD PTR [rbp+0x30]
   140001239:	mov    r8d,ebx
   14000123c:	mov    rdx,r15
   14000123f:	mov    rcx,rsi
   140001242:	call   0x140002310
   140001247:	mov    rcx,rsi
   14000124a:	mov    rdx,rax
   14000124d:	call   0x1400010cc
   140001252:	mov    ecx,r12d
   140001255:	lea    rdx,[rip+0xeb3c]        # 0x14000fd98
   14000125c:	test   rax,rax
   14000125f:	mov    rbx,rax
   140001262:	setne  cl
   140001265:	call   0x140001000
   14000126a:	lea    rcx,[rbp-0x20]
   14000126e:	mov    rdx,rbx
   140001271:	mov    r8d,0x14
   140001277:	call   0x140007580
   14000127c:	movsxd rdi,edi
   14000127f:	mov    rcx,rsi
   140001282:	sub    rdi,rsi
   140001285:	add    rdi,rbx
   140001288:	call   0x140001eb4
   14000128d:	sub    edi,DWORD PTR [rbp-0x10]
   140001290:	mov    rcx,QWORD PTR [rbp+0x30]
   140001294:	sub    edi,DWORD PTR [rbp-0x14]
   140001297:	sub    edi,0x104
   14000129d:	cmovs  edi,r12d
   1400012a1:	xor    r8d,r8d
   1400012a4:	mov    edx,edi
   1400012a6:	call   0x14000265c
   1400012ab:	mov    r9,QWORD PTR [rbp+0x30]
   1400012af:	mov    r8d,0x104
   1400012b5:	mov    rdx,r15
   1400012b8:	mov    rcx,r13
   1400012bb:	call   0x140002310
   1400012c0:	mov    ecx,r12d
   1400012c3:	lea    rdx,[rip+0xeaf6]        # 0x14000fdc0
   1400012ca:	test   rax,rax
   1400012cd:	mov    rbx,rax
   1400012d0:	setne  cl
   1400012d3:	call   0x140001000
   1400012d8:	lea    r11,[rbx+r13*1-0x1]
   1400012dd:	cmp    r11,r13
   1400012e0:	jb     0x1400012fc
   1400012e2:	movzx  eax,WORD PTR [rip+0xeaf3]        # 0x14000fddc
   1400012e9:	cmp    WORD PTR [r11],ax
   1400012ed:	je     0x1400012f9
   1400012ef:	sub    r11,r15
   1400012f2:	cmp    r11,r13
   1400012f5:	jae    0x1400012e9
   1400012f7:	jmp    0x1400012fc
   1400012f9:	mov    r12,r11
   1400012fc:	mov    rcx,QWORD PTR [rbp+0x30]
   140001300:	call   0x140002754
   140001305:	lea    r11,[rsp+0x40]
   14000130a:	mov    rax,r12
   14000130d:	mov    rbx,QWORD PTR [r11+0x38]
   140001311:	mov    rsi,QWORD PTR [r11+0x40]
   140001315:	mov    rdi,QWORD PTR [r11+0x48]
   140001319:	mov    rsp,r11
   14000131c:	pop    r15
   14000131e:	pop    r14
   140001320:	pop    r13
   140001322:	pop    r12
   140001324:	pop    rbp
   140001325:	ret    
   140001326:	int3   
   140001327:	int3   
   140001328:	mov    QWORD PTR [rsp+0x8],rbx
   14000132d:	mov    QWORD PTR [rsp+0x10],rsi
   140001332:	push   rdi
   140001333:	sub    rsp,0x40
   140001337:	mov    rbx,rdx
   14000133a:	mov    rdi,rcx
   14000133d:	call   QWORD PTR [rip+0xcce5]        # 0x14000e028
   140001343:	and    QWORD PTR [rbx],0x0
   140001347:	mov    DWORD PTR [rsp+0x30],0x2
   14000134f:	mov    esi,0x1
   140001354:	mov    r8,rax
   140001357:	mov    rcx,rax
   14000135a:	mov    r9,rbx
   14000135d:	mov    rdx,rdi
   140001360:	mov    DWORD PTR [rsp+0x28],esi
   140001364:	and    DWORD PTR [rsp+0x20],0x0
   140001369:	call   QWORD PTR [rip+0xcd29]        # 0x14000e098
   14000136f:	mov    ebx,eax
   140001371:	test   eax,eax
   140001373:	jne    0x140001381
   140001375:	call   QWORD PTR [rip+0xccfd]        # 0x14000e078
   14000137b:	cmp    eax,0x6
   14000137e:	cmove  ebx,esi
   140001381:	mov    rsi,QWORD PTR [rsp+0x58]
   140001386:	mov    eax,ebx
   140001388:	mov    rbx,QWORD PTR [rsp+0x50]
   14000138d:	add    rsp,0x40
   140001391:	pop    rdi
   140001392:	ret    
   140001393:	int3   
   140001394:	sub    rsp,0x28
   140001398:	test   ecx,ecx
   14000139a:	jne    0x1400013ae
   14000139c:	mov    ecx,DWORD PTR [rip+0x13266]        # 0x140014608
   1400013a2:	test   ecx,ecx
   1400013a4:	je     0x1400013ae
   1400013a6:	xor    edx,edx
   1400013a8:	call   QWORD PTR [rip+0xcc8a]        # 0x14000e038
   1400013ae:	mov    eax,0x1
   1400013b3:	add    rsp,0x28
   1400013b7:	ret    
   1400013b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400013bd:	mov    QWORD PTR [rsp+0x18],rdi
   1400013c2:	push   rbp
   1400013c3:	lea    rbp,[rsp-0x80]
   1400013c8:	sub    rsp,0x180
   1400013cf:	mov    rax,QWORD PTR [rip+0x10c32]        # 0x140012008
   1400013d6:	xor    rax,rsp
   1400013d9:	mov    QWORD PTR [rbp+0x70],rax
   1400013dd:	mov    rdi,rcx
   1400013e0:	xor    edx,edx
   1400013e2:	xor    ecx,ecx
   1400013e4:	call   QWORD PTR [rip+0xcc7e]        # 0x14000e068
   1400013ea:	lea    r8,[rbp-0x20]
   1400013ee:	mov    r9d,0x90
   1400013f4:	mov    rbx,rax
   1400013f7:	lea    rax,[rsp+0x50]
   1400013fc:	mov    edx,0x9
   140001401:	mov    rcx,rbx
   140001404:	mov    QWORD PTR [rsp+0x20],rax
   140001409:	call   QWORD PTR [rip+0xcc49]        # 0x14000e058
   14000140f:	test   eax,eax
   140001411:	je     0x140001424
   140001413:	cmp    DWORD PTR [rsp+0x50],0x90
   14000141b:	jne    0x140001424
   14000141d:	mov    ecx,0x1
   140001422:	jmp    0x140001426
   140001424:	xor    ecx,ecx
   140001426:	lea    rdx,[rip+0xe9bb]        # 0x14000fde8
   14000142d:	call   0x140001000
   140001432:	or     DWORD PTR [rbp-0x10],0x3000
   140001439:	lea    r8,[rbp-0x20]
   14000143d:	mov    r9d,0x90
   140001443:	mov    edx,0x9
   140001448:	mov    rcx,rbx
   14000144b:	call   QWORD PTR [rip+0xcbbf]        # 0x14000e010
   140001451:	lea    rdx,[rip+0xe9b0]        # 0x14000fe08
   140001458:	mov    ecx,eax
   14000145a:	call   0x140001000
   14000145f:	xor    edx,edx
   140001461:	lea    rcx,[rsp+0x70]
   140001466:	lea    r8d,[rdx+0x68]
   14000146a:	call   0x140004a30
   14000146f:	mov    ecx,0xfffffff6
   140001474:	mov    DWORD PTR [rsp+0x70],0x68
   14000147c:	call   QWORD PTR [rip+0xcbee]        # 0x14000e070
   140001482:	lea    rdx,[rbp-0x40]
   140001486:	mov    rcx,rax
   140001489:	call   0x140001328
   14000148e:	lea    rdx,[rip+0xe993]        # 0x14000fe28
   140001495:	mov    ecx,eax
   140001497:	call   0x140001000
   14000149c:	mov    ecx,0xfffffff5
   1400014a1:	call   QWORD PTR [rip+0xcbc9]        # 0x14000e070
   1400014a7:	lea    rdx,[rbp-0x38]
   1400014ab:	mov    rcx,rax
   1400014ae:	call   0x140001328
   1400014b3:	lea    rdx,[rip+0xe98e]        # 0x14000fe48
   1400014ba:	mov    ecx,eax
   1400014bc:	call   0x140001000
   1400014c1:	mov    ecx,0xfffffff4
   1400014c6:	call   QWORD PTR [rip+0xcba4]        # 0x14000e070
   1400014cc:	lea    rdx,[rbp-0x30]
   1400014d0:	mov    rcx,rax
   1400014d3:	call   0x140001328
   1400014d8:	lea    rdx,[rip+0xe989]        # 0x14000fe68
   1400014df:	mov    ecx,eax
   1400014e1:	call   0x140001000
   1400014e6:	lea    rcx,[rip+0xfffffffffffffea7]        # 0x140001394
   1400014ed:	mov    edx,0x1
   1400014f2:	mov    DWORD PTR [rbp-0x54],0x100
   1400014f9:	call   QWORD PTR [rip+0xcb91]        # 0x14000e090
   1400014ff:	lea    r11,[rsp+0x58]
   140001504:	mov    QWORD PTR [rsp+0x48],r11
   140001509:	lea    rax,[rsp+0x70]
   14000150e:	xor    r9d,r9d
   140001511:	mov    QWORD PTR [rsp+0x40],rax
   140001516:	and    QWORD PTR [rsp+0x38],0x0
   14000151c:	and    QWORD PTR [rsp+0x30],0x0
   140001522:	and    DWORD PTR [rsp+0x28],0x0
   140001527:	xor    r8d,r8d
   14000152a:	mov    rdx,rdi
   14000152d:	xor    ecx,ecx
   14000152f:	mov    DWORD PTR [rsp+0x20],0x1
   140001537:	call   QWORD PTR [rip+0xcae3]        # 0x14000e020
   14000153d:	lea    rdx,[rip+0xe944]        # 0x14000fe88
   140001544:	mov    r8,rdi
   140001547:	mov    ecx,eax
   140001549:	call   0x140001000
   14000154e:	mov    r11d,DWORD PTR [rsp+0x68]
   140001553:	mov    rdx,QWORD PTR [rsp+0x58]
   140001558:	mov    rcx,rbx
   14000155b:	mov    DWORD PTR [rip+0x130a6],r11d        # 0x140014608
   140001562:	call   QWORD PTR [rip+0xcad8]        # 0x14000e040
   140001568:	mov    rcx,QWORD PTR [rsp+0x60]
   14000156d:	call   QWORD PTR [rip+0xcb2d]        # 0x14000e0a0
   140001573:	mov    rcx,QWORD PTR [rsp+0x58]
   140001578:	or     edx,0xffffffff
   14000157b:	call   QWORD PTR [rip+0xcaaf]        # 0x14000e030
   140001581:	mov    rcx,QWORD PTR [rsp+0x58]
   140001586:	lea    rdx,[rsp+0x50]
   14000158b:	call   QWORD PTR [rip+0xcab7]        # 0x14000e048
   140001591:	lea    rdx,[rip+0xe918]        # 0x14000feb0
   140001598:	mov    ecx,eax
   14000159a:	call   0x140001000
   14000159f:	mov    ecx,DWORD PTR [rsp+0x50]
   1400015a3:	call   QWORD PTR [rip+0xca57]        # 0x14000e000
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	mov    rax,rsp
   1400015af:	mov    QWORD PTR [rax+0x8],rbx
   1400015b3:	mov    QWORD PTR [rax+0x10],rbp
   1400015b7:	mov    QWORD PTR [rax+0x18],rsi
   1400015bb:	mov    QWORD PTR [rax+0x20],rdi
   1400015bf:	push   r12
   1400015c1:	push   r13
   1400015c3:	push   r14
   1400015c5:	sub    rsp,0x370
   1400015cc:	mov    rax,QWORD PTR [rip+0x10a35]        # 0x140012008
   1400015d3:	xor    rax,rsp
   1400015d6:	mov    QWORD PTR [rsp+0x360],rax
   1400015de:	call   QWORD PTR [rip+0xca24]        # 0x14000e008
   1400015e4:	mov    edi,0x22
   1400015e9:	cmp    WORD PTR [rax],di
   1400015ec:	je     0x1400015f3
   1400015ee:	lea    ecx,[rdi-0x2]
   1400015f1:	jmp    0x1400015fa
   1400015f3:	movzx  ecx,di
   1400015f6:	add    rax,0x4
   1400015fa:	movzx  edx,cx
   1400015fd:	mov    rcx,rax
   140001600:	call   0x140001ad4
   140001605:	xor    esi,esi
   140001607:	lea    r12d,[rsi+0x8]
   14000160b:	test   rax,rax
   14000160e:	jne    0x140001619
   140001610:	lea    r13,[rip+0xe7c9]        # 0x14000fde0
   140001617:	jmp    0x14000163c
   140001619:	lea    r13,[rax+0x2]
   14000161d:	jmp    0x140001632
   14000161f:	mov    edx,r12d
   140001622:	movzx  ecx,ax
   140001625:	call   0x140002330
   14000162a:	test   eax,eax
   14000162c:	je     0x14000163c
   14000162e:	add    r13,0x2
   140001632:	movzx  eax,WORD PTR [r13+0x0]
   140001637:	test   ax,ax
   14000163a:	jne    0x14000161f
   14000163c:	lea    r14,[rip+0x12dbd]        # 0x140014400
   140001643:	mov    ebp,0x104
   140001648:	xor    ecx,ecx
   14000164a:	mov    rdx,r14
   14000164d:	mov    r8d,ebp
   140001650:	call   QWORD PTR [rip+0xc9fa]        # 0x14000e050
   140001656:	cmp    WORD PTR [rip+0x12da3],di        # 0x140014400
   14000165d:	mov    edx,eax
   14000165f:	jne    0x14000166c
   140001661:	lea    r14,[rip+0x12d9a]        # 0x140014402
   140001668:	sub    rdx,0x2
   14000166c:	lea    rcx,[rsp+0x250]
   140001674:	mov    WORD PTR [r14+rdx*2],si
   140001679:	mov    BYTE PTR [rip+0x11d38],0x50        # 0x1400133b8
   140001680:	call   0x140001134
   140001685:	mov    ecx,esi
   140001687:	lea    rdx,[rip+0xe942]        # 0x14000ffd0
   14000168e:	test   rax,rax
   140001691:	mov    rbx,rax
   140001694:	setne  cl
   140001697:	call   0x140001000
   14000169c:	lea    rax,[rbx+0x104]
   1400016a3:	mov    rdi,rsi
   1400016a6:	mov    rcx,rbx
   1400016a9:	cmp    rbx,rax
   1400016ac:	jae    0x1400016c5
   1400016ae:	cmp    BYTE PTR [rcx],0xd
   1400016b1:	je     0x1400016c2
   1400016b3:	cmp    BYTE PTR [rcx],0xa
   1400016b6:	je     0x1400016c2
   1400016b8:	inc    rcx
   1400016bb:	cmp    rcx,rax
   1400016be:	jb     0x1400016ae
   1400016c0:	jmp    0x1400016c5
   1400016c2:	mov    rdi,rcx
   1400016c5:	mov    ecx,esi
   1400016c7:	test   rdi,rdi
   1400016ca:	lea    rdx,[rip+0xe917]        # 0x14000ffe8
   1400016d1:	setne  cl
   1400016d4:	call   0x140001000
   1400016d9:	mov    BYTE PTR [rdi],sil
   1400016dc:	lea    rax,[rsp+0x40]
   1400016e1:	sub    edi,ebx
   1400016e3:	mov    r8,rbx
   1400016e6:	mov    edx,r12d
   1400016e9:	mov    ecx,0xfde9
   1400016ee:	mov    r9d,edi
   1400016f1:	mov    DWORD PTR [rsp+0x28],ebp
   1400016f5:	mov    QWORD PTR [rsp+0x20],rax
   1400016fa:	call   QWORD PTR [rip+0xc960]        # 0x14000e060
   140001700:	mov    ecx,esi
   140001702:	test   eax,eax
   140001704:	lea    rdx,[rip+0xe90d]        # 0x140010018
   14000170b:	movsxd rdi,eax
   14000170e:	setne  cl
   140001711:	call   0x140001000
   140001716:	mov    WORD PTR [rsp+rdi*2+0x40],si
   14000171b:	lea    rbp,[rsp+0x40]
   140001720:	cmp    WORD PTR [rsp+0x40],si
   140001725:	je     0x140001741
   140001727:	movzx  ecx,WORD PTR [rbp+0x0]
   14000172b:	mov    edx,r12d
   14000172e:	call   0x140002330
   140001733:	test   eax,eax
   140001735:	je     0x140001741
   140001737:	add    rbp,0x2
   14000173b:	cmp    WORD PTR [rbp+0x0],si
   14000173f:	jne    0x140001727
   140001741:	cmp    WORD PTR [rbp+0x0],0x23
   140001746:	mov    ecx,esi
   140001748:	lea    rdx,[rip+0xe8f9]        # 0x140010048
   14000174f:	sete   cl
   140001752:	call   0x140001000
   140001757:	jmp    0x140001768
   140001759:	mov    edx,r12d
   14000175c:	movzx  ecx,ax
   14000175f:	call   0x140002330
   140001764:	test   eax,eax
   140001766:	je     0x140001775
   140001768:	add    rbp,0x2
   14000176c:	movzx  eax,WORD PTR [rbp+0x0]
   140001770:	test   ax,ax
   140001773:	jne    0x140001759
   140001775:	cmp    WORD PTR [rbp+0x0],0x21
   14000177a:	mov    ecx,esi
   14000177c:	lea    rdx,[rip+0xe8f5]        # 0x140010078
   140001783:	sete   cl
   140001786:	call   0x140001000
   14000178b:	jmp    0x14000179c
   14000178d:	mov    edx,r12d
   140001790:	movzx  ecx,ax
   140001793:	call   0x140002330
   140001798:	test   eax,eax
   14000179a:	je     0x1400017a9
   14000179c:	add    rbp,0x2
   1400017a0:	movzx  eax,WORD PTR [rbp+0x0]
   1400017a4:	test   ax,ax
   1400017a7:	jne    0x14000178d
   1400017a9:	lea    rdx,[rip+0xe728]        # 0x14000fed8
   1400017b0:	mov    rcx,rbp
   1400017b3:	call   QWORD PTR [rip+0xcacf]        # 0x14000e288
   1400017b9:	mov    ebx,0x22
   1400017be:	mov    r12,rax
   1400017c1:	test   rax,rax
   1400017c4:	je     0x1400017f8
   1400017c6:	cmp    WORD PTR [rax+0x8],si
   1400017ca:	je     0x1400017f8
   1400017cc:	cmp    WORD PTR [rax+0x8],bx
   1400017d0:	je     0x1400017f8
   1400017d2:	movzx  ecx,WORD PTR [rax+0x8]
   1400017d6:	mov    edx,0x8
   1400017db:	call   0x140002330
   1400017e0:	test   eax,eax
   1400017e2:	jne    0x1400017f8
   1400017e4:	lea    rdx,[rip+0xe6ed]        # 0x14000fed8
   1400017eb:	lea    rcx,[r12+0x8]
   1400017f0:	call   QWORD PTR [rip+0xca92]        # 0x14000e288
   1400017f6:	jmp    0x1400017be
   1400017f8:	mov    ecx,esi
   1400017fa:	test   r12,r12
   1400017fd:	lea    rdx,[rip+0xe6e4]        # 0x14000fee8
   140001804:	setne  cl
   140001807:	call   0x140001000
   14000180c:	add    r12,0x8
   140001810:	cmp    WORD PTR [rbp+0x0],bx
   140001814:	jne    0x140001839
   140001816:	cmp    WORD PTR [r12],bx
   14000181b:	mov    ecx,esi
   14000181d:	lea    rdx,[rip+0xe70c]        # 0x14000ff30
   140001824:	sete   cl
   140001827:	call   0x140001000
   14000182c:	mov    WORD PTR [r12],si
   140001831:	add    r12,0x2
   140001835:	add    rbp,0x2
   140001839:	cmp    WORD PTR [r12],bx
   14000183e:	mov    ecx,esi
   140001840:	lea    rdx,[rip+0xe739]        # 0x14000ff80
   140001847:	setne  cl
   14000184a:	call   0x140001000
   14000184f:	cmp    WORD PTR [r12],si
   140001854:	je     0x140001885
   140001856:	movzx  ecx,WORD PTR [r12]
   14000185b:	mov    edx,0x8
   140001860:	call   0x140002330
   140001865:	test   eax,eax
   140001867:	je     0x140001885
   140001869:	mov    WORD PTR [r12],si
   14000186e:	jmp    0x140001881
   140001870:	mov    edx,0x8
   140001875:	movzx  ecx,ax
   140001878:	call   0x140002330
   14000187d:	test   eax,eax
   14000187f:	je     0x14000188f
   140001881:	add    r12,0x2
   140001885:	movzx  eax,WORD PTR [r12]
   14000188a:	test   ax,ax
   14000188d:	jne    0x140001870
   14000188f:	mov    ecx,esi
   140001891:	test   rbp,rbp
   140001894:	lea    rdx,[rip+0xe815]        # 0x1400100b0
   14000189b:	setne  cl
   14000189e:	call   0x140001000
   1400018a3:	mov    ecx,esi
   1400018a5:	test   r12,r12
   1400018a8:	lea    rdx,[rip+0xe831]        # 0x1400100e0
   1400018af:	setne  cl
   1400018b2:	call   0x140001000
   1400018b7:	xor    eax,eax
   1400018b9:	or     r9,0xffffffffffffffff
   1400018bd:	mov    rcx,r9
   1400018c0:	mov    rdi,r12
   1400018c3:	lea    edx,[rax+0x2]
   1400018c6:	repnz scas ax,WORD PTR es:[rdi]
   1400018c9:	mov    rdi,rbp
   1400018cc:	not    rcx
   1400018cf:	lea    r8,[rcx-0x1]
   1400018d3:	mov    rcx,r9
   1400018d6:	repnz scas ax,WORD PTR es:[rdi]
   1400018d9:	mov    rdi,r13
   1400018dc:	not    rcx
   1400018df:	dec    rcx
   1400018e2:	add    r8,rcx
   1400018e5:	mov    rcx,r9
   1400018e8:	repnz scas ax,WORD PTR es:[rdi]
   1400018eb:	mov    rdi,r14
   1400018ee:	not    rcx
   1400018f1:	dec    rcx
   1400018f4:	add    r8,rcx
   1400018f7:	mov    rcx,r9
   1400018fa:	repnz scas ax,WORD PTR es:[rdi]
   1400018fd:	not    rcx
   140001900:	lea    rbx,[r8+rcx*1+0x7]
   140001905:	mov    rcx,rbx
   140001908:	call   0x140001ef4
   14000190d:	lea    rdx,[rip+0xe80c]        # 0x140010120
   140001914:	test   rax,rax
   140001917:	mov    rdi,rax
   14000191a:	setne  sil
   14000191e:	mov    ecx,esi
   140001920:	call   0x140001000
   140001925:	mov    QWORD PTR [rsp+0x38],r13
   14000192a:	mov    QWORD PTR [rsp+0x30],r14
   14000192f:	lea    r9,[rip+0xe822]        # 0x140010158
   140001936:	mov    r8,rbx
   140001939:	mov    rdx,rbx
   14000193c:	mov    rcx,rdi
   14000193f:	mov    QWORD PTR [rsp+0x28],r12
   140001944:	mov    QWORD PTR [rsp+0x20],rbp
   140001949:	call   0x14000200c
   14000194e:	mov    rcx,rdi
   140001951:	call   0x1400013b8
   140001956:	int3   
   140001957:	int3   
   140001958:	sub    rsp,0x28
   14000195c:	call   0x1400015ac
   140001961:	int3   
   140001962:	int3   
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	int3   
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001980:	cmp    rcx,QWORD PTR [rip+0x10681]        # 0x140012008
   140001987:	jne    0x14000199a
   140001989:	rol    rcx,0x10
   14000198d:	test   cx,0xffff
   140001992:	jne    0x140001996
   140001994:	repz ret 
   140001996:	ror    rcx,0x10
   14000199a:	jmp    0x14000296c
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400019a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400019aa:	push   rdi
   1400019ab:	push   r12
   1400019ad:	push   r13
   1400019af:	sub    rsp,0x30
   1400019b3:	mov    QWORD PTR [rsp+0x20],rsp
   1400019b8:	mov    r12d,r8d
   1400019bb:	mov    rdi,rdx
   1400019be:	mov    rsi,rcx
   1400019c1:	xor    r13d,r13d
   1400019c4:	mov    eax,r13d
   1400019c7:	test   rcx,rcx
   1400019ca:	setne  al
   1400019cd:	test   eax,eax
   1400019cf:	jne    0x1400019e8
   1400019d1:	call   0x140003564
   1400019d6:	mov    DWORD PTR [rax],0x16
   1400019dc:	call   0x1400034fc
   1400019e1:	xor    eax,eax
   1400019e3:	jmp    0x140001a69
   1400019e8:	mov    eax,r13d
   1400019eb:	test   rdx,rdx
   1400019ee:	setne  al
   1400019f1:	test   eax,eax
   1400019f3:	je     0x1400019d1
   1400019f5:	mov    eax,r13d
   1400019f8:	cmp    WORD PTR [rdx],r13w
   1400019fc:	setne  al
   1400019ff:	test   eax,eax
   140001a01:	je     0x1400019d1
   140001a03:	call   0x1400031ac
   140001a08:	mov    rbx,rax
   140001a0b:	mov    QWORD PTR [rsp+0x50],rax
   140001a10:	test   rax,rax
   140001a13:	jne    0x140001a22
   140001a15:	call   0x140003564
   140001a1a:	mov    DWORD PTR [rax],0x18
   140001a20:	jmp    0x1400019e1
   140001a22:	cmp    WORD PTR [rsi],r13w
   140001a26:	jne    0x140001a4a
   140001a28:	call   0x140003564
   140001a2d:	mov    DWORD PTR [rax],0x16
   140001a33:	lea    rdx,[rip+0xc]        # 0x140001a46
   140001a3a:	mov    rcx,QWORD PTR [rsp+0x20]
   140001a3f:	call   0x140003600
   140001a44:	nop
   140001a45:	nop
   140001a46:	xor    eax,eax
   140001a48:	jmp    0x140001a69
   140001a4a:	mov    r9,rax
   140001a4d:	mov    r8d,r12d
   140001a50:	mov    rdx,rdi
   140001a53:	mov    rcx,rsi
   140001a56:	call   0x140002ecc
   140001a5b:	mov    rdi,rax
   140001a5e:	mov    rcx,rbx
   140001a61:	call   0x140002e60
   140001a66:	mov    rax,rdi
   140001a69:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a73:	add    rsp,0x30
   140001a77:	pop    r13
   140001a79:	pop    r12
   140001a7b:	pop    rdi
   140001a7c:	ret    
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	rex push rbx
   140001a82:	sub    rsp,0x20
   140001a86:	mov    rax,r8
   140001a89:	mov    r9,rdx
   140001a8c:	mov    rbx,rcx
   140001a8f:	test   rcx,rcx
   140001a92:	jne    0x140001aa9
   140001a94:	call   0x140003564
   140001a99:	mov    ebx,0x16
   140001a9e:	mov    DWORD PTR [rax],ebx
   140001aa0:	call   0x1400034fc
   140001aa5:	mov    eax,ebx
   140001aa7:	jmp    0x140001acd
   140001aa9:	mov    r8d,0x80
   140001aaf:	mov    rdx,rax
   140001ab2:	mov    rcx,r9
   140001ab5:	call   0x1400019a0
   140001aba:	mov    QWORD PTR [rbx],rax
   140001abd:	test   rax,rax
   140001ac0:	je     0x140001ac6
   140001ac2:	xor    eax,eax
   140001ac4:	jmp    0x140001acd
   140001ac6:	call   0x140003564
   140001acb:	mov    eax,DWORD PTR [rax]
   140001acd:	add    rsp,0x20
   140001ad1:	pop    rbx
   140001ad2:	ret    
   140001ad3:	int3   
   140001ad4:	jmp    0x140001adf
   140001ad6:	cmp    ax,dx
   140001ad9:	je     0x140001aec
   140001adb:	add    rcx,0x2
   140001adf:	movzx  eax,WORD PTR [rcx]
   140001ae2:	test   ax,ax
   140001ae5:	jne    0x140001ad6
   140001ae7:	cmp    ax,dx
   140001aea:	jne    0x140001af0
   140001aec:	mov    rax,rcx
   140001aef:	ret    
   140001af0:	xor    eax,eax
   140001af2:	ret    
   140001af3:	int3   
   140001af4:	rex push rbx
   140001af6:	sub    rsp,0x20
   140001afa:	mov    ebx,ecx
   140001afc:	lea    rcx,[rip+0xc83d]        # 0x14000e340
   140001b03:	call   QWORD PTR [rip+0xc59f]        # 0x14000e0a8
   140001b09:	test   rax,rax
   140001b0c:	je     0x140001b27
   140001b0e:	lea    rdx,[rip+0xc81b]        # 0x14000e330
   140001b15:	mov    rcx,rax
   140001b18:	call   QWORD PTR [rip+0xc562]        # 0x14000e080
   140001b1e:	test   rax,rax
   140001b21:	je     0x140001b27
   140001b23:	mov    ecx,ebx
   140001b25:	call   rax
   140001b27:	add    rsp,0x20
   140001b2b:	pop    rbx
   140001b2c:	ret    
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	rex push rbx
   140001b32:	sub    rsp,0x20
   140001b36:	mov    ebx,ecx
   140001b38:	call   0x140001af4
   140001b3d:	mov    ecx,ebx
   140001b3f:	call   QWORD PTR [rip+0xc4bb]        # 0x14000e000
   140001b45:	int3   
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	mov    ecx,0x8
   140001b4d:	jmp    0x140003870
   140001b52:	int3   
   140001b53:	int3   
   140001b54:	mov    ecx,0x8
   140001b59:	jmp    0x140003770
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x20
   140001b66:	call   0x140003ba8
   140001b6b:	mov    rcx,rax
   140001b6e:	mov    rbx,rax
   140001b71:	call   0x140003b6c
   140001b76:	mov    rcx,rbx
   140001b79:	call   0x140003304
   140001b7e:	mov    rcx,rbx
   140001b81:	call   0x140003b64
   140001b86:	mov    rcx,rbx
   140001b89:	call   0x140003b5c
   140001b8e:	mov    rcx,rbx
   140001b91:	call   0x1400038f8
   140001b96:	mov    rcx,rbx
   140001b99:	add    rsp,0x20
   140001b9d:	pop    rbx
   140001b9e:	jmp    0x1400038d8
   140001ba3:	int3   
   140001ba4:	cmp    rcx,rdx
   140001ba7:	jae    0x140001bd6
   140001ba9:	mov    QWORD PTR [rsp+0x8],rbx
   140001bae:	push   rdi
   140001baf:	sub    rsp,0x20
   140001bb3:	mov    rdi,rdx
   140001bb6:	mov    rbx,rcx
   140001bb9:	mov    rax,QWORD PTR [rbx]
   140001bbc:	test   rax,rax
   140001bbf:	je     0x140001bc3
   140001bc1:	call   rax
   140001bc3:	add    rbx,0x8
   140001bc7:	cmp    rbx,rdi
   140001bca:	jb     0x140001bb9
   140001bcc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bd1:	add    rsp,0x20
   140001bd5:	pop    rdi
   140001bd6:	ret    
   140001bd7:	int3   
   140001bd8:	mov    QWORD PTR [rsp+0x8],rbx
   140001bdd:	push   rdi
   140001bde:	sub    rsp,0x20
   140001be2:	xor    eax,eax
   140001be4:	mov    rdi,rdx
   140001be7:	mov    rbx,rcx
   140001bea:	cmp    rcx,rdx
   140001bed:	jae    0x140001c06
   140001bef:	test   eax,eax
   140001bf1:	jne    0x140001c06
   140001bf3:	mov    rcx,QWORD PTR [rbx]
   140001bf6:	test   rcx,rcx
   140001bf9:	je     0x140001bfd
   140001bfb:	call   rcx
   140001bfd:	add    rbx,0x8
   140001c01:	cmp    rbx,rdi
   140001c04:	jb     0x140001bef
   140001c06:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c0b:	add    rsp,0x20
   140001c0f:	pop    rdi
   140001c10:	ret    
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	mov    QWORD PTR [rsp+0x8],rbx
   140001c19:	push   rdi
   140001c1a:	sub    rsp,0x20
   140001c1e:	cmp    QWORD PTR [rip+0x13c52],0x0        # 0x140015878
   140001c26:	mov    ebx,ecx
   140001c28:	je     0x140001c42
   140001c2a:	lea    rcx,[rip+0x13c47]        # 0x140015878
   140001c31:	call   0x140004190
   140001c36:	test   eax,eax
   140001c38:	je     0x140001c42
   140001c3a:	mov    ecx,ebx
   140001c3c:	call   QWORD PTR [rip+0x13c36]        # 0x140015878
   140001c42:	call   0x1400040cc
   140001c47:	lea    rdx,[rip+0xc682]        # 0x14000e2d0
   140001c4e:	lea    rcx,[rip+0xc653]        # 0x14000e2a8
   140001c55:	call   0x140001bd8
   140001c5a:	test   eax,eax
   140001c5c:	jne    0x140001cb8
   140001c5e:	lea    rcx,[rip+0x242f]        # 0x140004094
   140001c65:	call   0x140004044
   140001c6a:	lea    rbx,[rip+0xc627]        # 0x14000e298
   140001c71:	lea    rdi,[rip+0xc628]        # 0x14000e2a0
   140001c78:	jmp    0x140001c88
   140001c7a:	mov    rax,QWORD PTR [rbx]
   140001c7d:	test   rax,rax
   140001c80:	je     0x140001c84
   140001c82:	call   rax
   140001c84:	add    rbx,0x8
   140001c88:	cmp    rbx,rdi
   140001c8b:	jb     0x140001c7a
   140001c8d:	cmp    QWORD PTR [rip+0x13beb],0x0        # 0x140015880
   140001c95:	je     0x140001cb6
   140001c97:	lea    rcx,[rip+0x13be2]        # 0x140015880
   140001c9e:	call   0x140004190
   140001ca3:	test   eax,eax
   140001ca5:	je     0x140001cb6
   140001ca7:	xor    r8d,r8d
   140001caa:	xor    ecx,ecx
   140001cac:	lea    edx,[r8+0x2]
   140001cb0:	call   QWORD PTR [rip+0x13bca]        # 0x140015880
   140001cb6:	xor    eax,eax
   140001cb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cbd:	add    rsp,0x20
   140001cc1:	pop    rdi
   140001cc2:	ret    
   140001cc3:	int3   
   140001cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140001cc9:	mov    QWORD PTR [rsp+0x10],rsi
   140001cce:	mov    DWORD PTR [rsp+0x18],r8d
   140001cd3:	push   rdi
   140001cd4:	push   r12
   140001cd6:	push   r13
   140001cd8:	push   r14
   140001cda:	push   r15
   140001cdc:	sub    rsp,0x40
   140001ce0:	mov    r12d,r8d
   140001ce3:	mov    ebx,edx
   140001ce5:	mov    r15d,ecx
   140001ce8:	mov    ecx,0x8
   140001ced:	call   0x140003870
   140001cf2:	nop
   140001cf3:	cmp    DWORD PTR [rip+0x11716],0x1        # 0x140013410
   140001cfa:	je     0x140001e01
   140001d00:	mov    DWORD PTR [rip+0x11702],0x1        # 0x14001340c
   140001d0a:	mov    BYTE PTR [rip+0x116f7],r12b        # 0x140013408
   140001d11:	test   ebx,ebx
   140001d13:	jne    0x140001ded
   140001d19:	mov    rcx,QWORD PTR [rip+0x13b48]        # 0x140015868
   140001d20:	call   QWORD PTR [rip+0xc38a]        # 0x14000e0b0
   140001d26:	mov    rsi,rax
   140001d29:	mov    QWORD PTR [rsp+0x30],rax
   140001d2e:	test   rax,rax
   140001d31:	je     0x140001dda
   140001d37:	mov    rcx,QWORD PTR [rip+0x13b22]        # 0x140015860
   140001d3e:	call   QWORD PTR [rip+0xc36c]        # 0x14000e0b0
   140001d44:	mov    rdi,rax
   140001d47:	mov    QWORD PTR [rsp+0x20],rax
   140001d4c:	mov    r14,rsi
   140001d4f:	mov    QWORD PTR [rsp+0x28],rsi
   140001d54:	mov    r13,rax
   140001d57:	mov    QWORD PTR [rsp+0x38],rax
   140001d5c:	sub    rdi,0x8
   140001d60:	mov    QWORD PTR [rsp+0x20],rdi
   140001d65:	cmp    rdi,rsi
   140001d68:	jb     0x140001dda
   140001d6a:	call   0x140003ba8
   140001d6f:	cmp    QWORD PTR [rdi],rax
   140001d72:	jne    0x140001d76
   140001d74:	jmp    0x140001d5c
   140001d76:	cmp    rdi,rsi
   140001d79:	jb     0x140001dda
   140001d7b:	mov    rcx,QWORD PTR [rdi]
   140001d7e:	call   QWORD PTR [rip+0xc32c]        # 0x14000e0b0
   140001d84:	mov    rbx,rax
   140001d87:	call   0x140003ba8
   140001d8c:	mov    QWORD PTR [rdi],rax
   140001d8f:	call   rbx
   140001d91:	mov    rcx,QWORD PTR [rip+0x13ad0]        # 0x140015868
   140001d98:	call   QWORD PTR [rip+0xc312]        # 0x14000e0b0
   140001d9e:	mov    rbx,rax
   140001da1:	mov    rcx,QWORD PTR [rip+0x13ab8]        # 0x140015860
   140001da8:	call   QWORD PTR [rip+0xc302]        # 0x14000e0b0
   140001dae:	cmp    r14,rbx
   140001db1:	jne    0x140001db8
   140001db3:	cmp    r13,rax
   140001db6:	je     0x140001d74
   140001db8:	mov    r14,rbx
   140001dbb:	mov    QWORD PTR [rsp+0x28],rbx
   140001dc0:	mov    rsi,rbx
   140001dc3:	mov    QWORD PTR [rsp+0x30],rbx
   140001dc8:	mov    r13,rax
   140001dcb:	mov    QWORD PTR [rsp+0x38],rax
   140001dd0:	mov    rdi,rax
   140001dd3:	mov    QWORD PTR [rsp+0x20],rax
   140001dd8:	jmp    0x140001d74
   140001dda:	lea    rdx,[rip+0xc50f]        # 0x14000e2f0
   140001de1:	lea    rcx,[rip+0xc4f0]        # 0x14000e2d8
   140001de8:	call   0x140001ba4
   140001ded:	lea    rdx,[rip+0xc50c]        # 0x14000e300
   140001df4:	lea    rcx,[rip+0xc4fd]        # 0x14000e2f8
   140001dfb:	call   0x140001ba4
   140001e00:	nop
   140001e01:	test   r12d,r12d
   140001e04:	je     0x140001e15
   140001e06:	mov    ecx,0x8
   140001e0b:	call   0x140003770
   140001e10:	test   r12d,r12d
   140001e13:	jne    0x140001e3b
   140001e15:	mov    DWORD PTR [rip+0x115f1],0x1        # 0x140013410
   140001e1f:	mov    ecx,0x8
   140001e24:	call   0x140003770
   140001e29:	mov    ecx,r15d
   140001e2c:	call   0x140001af4
   140001e31:	mov    ecx,r15d
   140001e34:	call   QWORD PTR [rip+0xc1c6]        # 0x14000e000
   140001e3a:	int3   
   140001e3b:	mov    rbx,QWORD PTR [rsp+0x70]
   140001e40:	mov    rsi,QWORD PTR [rsp+0x78]
   140001e45:	add    rsp,0x40
   140001e49:	pop    r15
   140001e4b:	pop    r14
   140001e4d:	pop    r13
   140001e4f:	pop    r12
   140001e51:	pop    rdi
   140001e52:	ret    
   140001e53:	int3   
   140001e54:	xor    r8d,r8d
   140001e57:	xor    edx,edx
   140001e59:	jmp    0x140001cc4
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	xor    r8d,r8d
   140001e63:	lea    edx,[r8+0x1]
   140001e67:	jmp    0x140001cc4
   140001e6c:	xor    edx,edx
   140001e6e:	xor    ecx,ecx
   140001e70:	lea    r8d,[rdx+0x1]
   140001e74:	jmp    0x140001cc4
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	mov    edx,0x1
   140001e81:	xor    ecx,ecx
   140001e83:	mov    r8d,edx
   140001e86:	jmp    0x140001cc4
   140001e8b:	int3   
   140001e8c:	rex push rbx
   140001e8e:	sub    rsp,0x20
   140001e92:	mov    ebx,ecx
   140001e94:	call   0x140004460
   140001e99:	mov    ecx,ebx
   140001e9b:	call   0x140004200
   140001ea0:	xor    r8d,r8d
   140001ea3:	mov    ecx,0xff
   140001ea8:	lea    edx,[r8+0x1]
   140001eac:	call   0x140001cc4
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	test   rcx,rcx
   140001eb7:	je     0x140001ef0
   140001eb9:	push   rbx
   140001eba:	sub    rsp,0x20
   140001ebe:	mov    r8,rcx
   140001ec1:	mov    rcx,QWORD PTR [rip+0x12390]        # 0x140014258
   140001ec8:	xor    edx,edx
   140001eca:	call   QWORD PTR [rip+0xc1e8]        # 0x14000e0b8
   140001ed0:	test   eax,eax
   140001ed2:	jne    0x140001eeb
   140001ed4:	call   0x140003564
   140001ed9:	mov    rbx,rax
   140001edc:	call   QWORD PTR [rip+0xc196]        # 0x14000e078
   140001ee2:	mov    ecx,eax
   140001ee4:	call   0x14000351c
   140001ee9:	mov    DWORD PTR [rbx],eax
   140001eeb:	add    rsp,0x20
   140001eef:	pop    rbx
   140001ef0:	ret    
   140001ef1:	int3   
   140001ef2:	int3   
   140001ef3:	int3   
   140001ef4:	rex push rbx
   140001ef6:	sub    rsp,0x20
   140001efa:	and    DWORD PTR [rsp+0x40],0x0
   140001eff:	lea    r8,[rsp+0x40]
   140001f04:	call   0x1400044fc
   140001f09:	mov    rbx,rax
   140001f0c:	test   rax,rax
   140001f0f:	jne    0x140001f2c
   140001f11:	cmp    DWORD PTR [rsp+0x40],eax
   140001f15:	je     0x140001f2c
   140001f17:	call   0x140003564
   140001f1c:	test   rax,rax
   140001f1f:	je     0x140001f2c
   140001f21:	call   0x140003564
   140001f26:	mov    ecx,DWORD PTR [rsp+0x40]
   140001f2a:	mov    DWORD PTR [rax],ecx
   140001f2c:	mov    rax,rbx
   140001f2f:	add    rsp,0x20
   140001f33:	pop    rbx
   140001f34:	ret    
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	mov    QWORD PTR [rsp+0x8],rbx
   140001f3d:	mov    QWORD PTR [rsp+0x10],rsi
   140001f42:	push   rdi
   140001f43:	sub    rsp,0x20
   140001f47:	mov    rbx,rcx
   140001f4a:	cmp    rcx,0xffffffffffffffe0
   140001f4e:	ja     0x140001fcc
   140001f50:	mov    edi,0x1
   140001f55:	test   rcx,rcx
   140001f58:	cmovne rdi,rcx
   140001f5c:	mov    rcx,QWORD PTR [rip+0x122f5]        # 0x140014258
   140001f63:	test   rcx,rcx
   140001f66:	jne    0x140001f88
   140001f68:	call   0x140004460
   140001f6d:	mov    ecx,0x1e
   140001f72:	call   0x140004200
   140001f77:	mov    ecx,0xff
   140001f7c:	call   0x140001b30
   140001f81:	mov    rcx,QWORD PTR [rip+0x122d0]        # 0x140014258
   140001f88:	mov    r8,rdi
   140001f8b:	xor    edx,edx
   140001f8d:	call   QWORD PTR [rip+0xc12d]        # 0x14000e0c0
   140001f93:	mov    rsi,rax
   140001f96:	test   rax,rax
   140001f99:	jne    0x140001fc7
   140001f9b:	cmp    DWORD PTR [rip+0x122bf],eax        # 0x140014260
   140001fa1:	je     0x140001fb1
   140001fa3:	mov    rcx,rbx
   140001fa6:	call   0x140003b74
   140001fab:	test   eax,eax
   140001fad:	je     0x140001fbc
   140001faf:	jmp    0x140001f5c
   140001fb1:	call   0x140003564
   140001fb6:	mov    DWORD PTR [rax],0xc
   140001fbc:	call   0x140003564
   140001fc1:	mov    DWORD PTR [rax],0xc
   140001fc7:	mov    rax,rsi
   140001fca:	jmp    0x140001fde
   140001fcc:	call   0x140003b74
   140001fd1:	call   0x140003564
   140001fd6:	mov    DWORD PTR [rax],0xc
   140001fdc:	xor    eax,eax
   140001fde:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fe3:	mov    rsi,QWORD PTR [rsp+0x38]
   140001fe8:	add    rsp,0x20
   140001fec:	pop    rdi
   140001fed:	ret    
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	test   r8,r8
   140001ff3:	je     0x140002001
   140001ff5:	cmp    BYTE PTR [rcx],dl
   140001ff7:	je     0x140002001
   140001ff9:	inc    rcx
   140001ffc:	dec    r8
   140001fff:	jne    0x140001ff5
   140002001:	neg    r8
   140002004:	sbb    rax,rax
   140002007:	and    rax,rcx
   14000200a:	ret    
   14000200b:	int3   
   14000200c:	mov    r11,rsp
   14000200f:	mov    QWORD PTR [r11+0x20],r9
   140002013:	sub    rsp,0x38
   140002017:	lea    rax,[r11+0x28]
   14000201b:	mov    QWORD PTR [r11-0x10],rax
   14000201f:	and    QWORD PTR [r11-0x18],0x0
   140002024:	call   0x140004c38
   140002029:	add    rsp,0x38
   14000202d:	ret    
   14000202e:	int3   
   14000202f:	int3   
   140002030:	mov    QWORD PTR [rsp+0x20],rbx
   140002035:	push   rbp
   140002036:	push   rsi
   140002037:	push   rdi
   140002038:	push   r12
   14000203a:	push   r13
   14000203c:	push   r14
   14000203e:	push   r15
   140002040:	sub    rsp,0x20
   140002044:	mov    r13,rcx
   140002047:	mov    r14,rcx
   14000204a:	mov    QWORD PTR [rsp+0x68],rcx
   14000204f:	mov    rcx,rdx
   140002052:	mov    r15,r9
   140002055:	mov    r12,r8
   140002058:	mov    rsi,rdx
   14000205b:	mov    QWORD PTR [rsp+0x70],rdx
   140002060:	test   r8,r8
   140002063:	je     0x14000207f
   140002065:	test   r9,r9
   140002068:	je     0x14000207f
   14000206a:	test   r14,r14
   14000206d:	jne    0x140002096
   14000206f:	call   0x140003564
   140002074:	mov    DWORD PTR [rax],0x16
   14000207a:	call   0x1400034fc
   14000207f:	xor    eax,eax
   140002081:	mov    rbx,QWORD PTR [rsp+0x78]
   140002086:	add    rsp,0x20
   14000208a:	pop    r15
   14000208c:	pop    r14
   14000208e:	pop    r13
   140002090:	pop    r12
   140002092:	pop    rdi
   140002093:	pop    rsi
   140002094:	pop    rbp
   140002095:	ret    
   140002096:	mov    rdi,QWORD PTR [rsp+0x80]
   14000209e:	test   rdi,rdi
   1400020a1:	je     0x1400020b1
   1400020a3:	xor    edx,edx
   1400020a5:	or     rax,0xffffffffffffffff
   1400020a9:	div    r12
   1400020ac:	cmp    r9,rax
   1400020af:	jbe    0x1400020da
   1400020b1:	cmp    rsi,0xffffffffffffffff
   1400020b5:	je     0x1400020c7
   1400020b7:	mov    r8,rsi
   1400020ba:	xor    edx,edx
   1400020bc:	mov    rcx,r13
   1400020bf:	call   0x140004a30
   1400020c4:	mov    rcx,rsi
   1400020c7:	test   rdi,rdi
   1400020ca:	je     0x14000206f
   1400020cc:	xor    edx,edx
   1400020ce:	or     rax,0xffffffffffffffff
   1400020d2:	div    r12
   1400020d5:	cmp    r15,rax
   1400020d8:	ja     0x14000206f
   1400020da:	mov    rbx,r12
   1400020dd:	imul   rbx,r15
   1400020e1:	test   DWORD PTR [rdi+0x18],0x10c
   1400020e8:	mov    rbp,rbx
   1400020eb:	je     0x1400020f3
   1400020ed:	mov    r9d,DWORD PTR [rdi+0x24]
   1400020f1:	jmp    0x1400020f9
   1400020f3:	mov    r9d,0x1000
   1400020f9:	mov    DWORD PTR [rsp+0x60],r9d
   1400020fe:	test   rbx,rbx
   140002101:	je     0x14000225f
   140002107:	test   DWORD PTR [rdi+0x18],0x10c
   14000210e:	mov    r10d,0x7fffffff
   140002114:	je     0x140002174
   140002116:	movsxd r14,DWORD PTR [rdi+0x8]
   14000211a:	test   r14d,r14d
   14000211d:	je     0x14000216f
   14000211f:	js     0x140002245
   140002125:	cmp    rbp,r14
   140002128:	cmovb  r14d,ebp
   14000212c:	mov    r9d,r14d
   14000212f:	cmp    r9,rcx
   140002132:	ja     0x140002222
   140002138:	mov    r8,QWORD PTR [rdi]
   14000213b:	mov    rdx,rcx
   14000213e:	mov    rcx,QWORD PTR [rsp+0x68]
   140002143:	call   0x140005744
   140002148:	sub    DWORD PTR [rdi+0x8],r14d
   14000214c:	mov    eax,r14d
   14000214f:	mov    r14,QWORD PTR [rsp+0x68]
   140002154:	sub    rbp,rax
   140002157:	add    QWORD PTR [rdi],rax
   14000215a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000215f:	mov    r9d,DWORD PTR [rsp+0x60]
   140002164:	add    r14,rax
   140002167:	sub    rcx,rax
   14000216a:	jmp    0x140002210
   14000216f:	mov    r14,QWORD PTR [rsp+0x68]
   140002174:	mov    r8d,r9d
   140002177:	cmp    rbp,r8
   14000217a:	jb     0x1400021e4
   14000217c:	test   r9d,r9d
   14000217f:	je     0x1400021a1
   140002181:	xor    edx,edx
   140002183:	cmp    rbp,r10
   140002186:	jbe    0x140002193
   140002188:	mov    eax,r10d
   14000218b:	mov    r14d,r10d
   14000218e:	div    r9d
   140002191:	jmp    0x14000219c
   140002193:	mov    rax,rbp
   140002196:	mov    r14d,ebp
   140002199:	div    r8
   14000219c:	sub    r14d,edx
   14000219f:	jmp    0x1400021ab
   1400021a1:	mov    r14d,ebp
   1400021a4:	cmp    rbp,r10
   1400021a7:	cmova  r14d,r10d
   1400021ab:	mov    eax,r14d
   1400021ae:	cmp    rax,rcx
   1400021b1:	ja     0x140002222
   1400021b3:	mov    rcx,rdi
   1400021b6:	call   0x14000571c
   1400021bb:	mov    r8d,r14d
   1400021be:	mov    r14,QWORD PTR [rsp+0x68]
   1400021c3:	mov    rdx,r14
   1400021c6:	mov    ecx,eax
   1400021c8:	call   0x140005600
   1400021cd:	test   eax,eax
   1400021cf:	je     0x140002259
   1400021d5:	cmp    eax,0xffffffff
   1400021d8:	je     0x140002245
   1400021da:	mov    eax,eax
   1400021dc:	sub    rbp,rax
   1400021df:	jmp    0x14000215a
   1400021e4:	mov    rcx,rdi
   1400021e7:	call   0x140004d88
   1400021ec:	cmp    eax,0xffffffff
   1400021ef:	je     0x140002249
   1400021f1:	mov    rcx,QWORD PTR [rsp+0x70]
   1400021f6:	test   rcx,rcx
   1400021f9:	je     0x140002222
   1400021fb:	mov    BYTE PTR [r14],al
   1400021fe:	mov    r9d,DWORD PTR [rdi+0x24]
   140002202:	dec    rbp
   140002205:	inc    r14
   140002208:	dec    rcx
   14000220b:	mov    DWORD PTR [rsp+0x60],r9d
   140002210:	mov    QWORD PTR [rsp+0x68],r14
   140002215:	mov    QWORD PTR [rsp+0x70],rcx
   14000221a:	test   rbp,rbp
   14000221d:	jmp    0x140002101
   140002222:	cmp    rsi,0xffffffffffffffff
   140002226:	je     0x140002235
   140002228:	mov    r8,rsi
   14000222b:	xor    edx,edx
   14000222d:	mov    rcx,r13
   140002230:	call   0x140004a30
   140002235:	call   0x140003564
   14000223a:	mov    DWORD PTR [rax],0x22
   140002240:	jmp    0x14000207a
   140002245:	or     DWORD PTR [rdi+0x18],0x20
   140002249:	sub    rbx,rbp
   14000224c:	xor    edx,edx
   14000224e:	mov    rax,rbx
   140002251:	div    r12
   140002254:	jmp    0x140002081
   140002259:	or     DWORD PTR [rdi+0x18],0x10
   14000225d:	jmp    0x140002249
   14000225f:	mov    rax,r15
   140002262:	jmp    0x140002081
   140002267:	int3   
   140002268:	mov    rax,rsp
   14000226b:	mov    QWORD PTR [rax+0x8],rbx
   14000226f:	mov    QWORD PTR [rax+0x10],rsi
   140002273:	mov    QWORD PTR [rax+0x18],rdi
   140002277:	mov    QWORD PTR [rax+0x20],r12
   14000227b:	push   r13
   14000227d:	sub    rsp,0x30
   140002281:	mov    rsi,r9
   140002284:	mov    r13,r8
   140002287:	mov    rdi,rdx
   14000228a:	mov    r12,rcx
   14000228d:	test   r8,r8
   140002290:	je     0x1400022f2
   140002292:	test   r9,r9
   140002295:	je     0x1400022f2
   140002297:	mov    rbx,QWORD PTR [rsp+0x60]
   14000229c:	test   rbx,rbx
   14000229f:	jne    0x1400022c3
   1400022a1:	cmp    rdx,0xffffffffffffffff
   1400022a5:	je     0x1400022b1
   1400022a7:	mov    r8,rdx
   1400022aa:	xor    edx,edx
   1400022ac:	call   0x140004a30
   1400022b1:	call   0x140003564
   1400022b6:	mov    DWORD PTR [rax],0x16
   1400022bc:	call   0x1400034fc
   1400022c1:	jmp    0x1400022f2
   1400022c3:	mov    rcx,rbx
   1400022c6:	call   0x140002dc8
   1400022cb:	nop
   1400022cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400022d1:	mov    r9,rsi
   1400022d4:	mov    r8,r13
   1400022d7:	mov    rdx,rdi
   1400022da:	mov    rcx,r12
   1400022dd:	call   0x140002030
   1400022e2:	mov    rdi,rax
   1400022e5:	mov    rcx,rbx
   1400022e8:	call   0x140002e60
   1400022ed:	mov    rax,rdi
   1400022f0:	jmp    0x1400022f4
   1400022f2:	xor    eax,eax
   1400022f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400022f9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400022fe:	mov    rdi,QWORD PTR [rsp+0x50]
   140002303:	mov    r12,QWORD PTR [rsp+0x58]
   140002308:	add    rsp,0x30
   14000230c:	pop    r13
   14000230e:	ret    
   14000230f:	int3   
   140002310:	sub    rsp,0x38
   140002314:	mov    QWORD PTR [rsp+0x20],r9
   140002319:	mov    r9,r8
   14000231c:	mov    r8,rdx
   14000231f:	or     rdx,0xffffffffffffffff
   140002323:	call   0x140002268
   140002328:	add    rsp,0x38
   14000232c:	ret    
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    WORD PTR [rsp+0x8],cx
   140002335:	push   rbx
   140002336:	sub    rsp,0x20
   14000233a:	mov    eax,0xffff
   14000233f:	movzx  ebx,dx
   140002342:	cmp    cx,ax
   140002345:	jne    0x14000234b
   140002347:	xor    eax,eax
   140002349:	jmp    0x140002390
   14000234b:	mov    eax,0x100
   140002350:	cmp    cx,ax
   140002353:	jae    0x140002365
   140002355:	mov    rax,QWORD PTR [rip+0x1059c]        # 0x1400128f8
   14000235c:	movzx  ecx,cx
   14000235f:	movzx  eax,WORD PTR [rax+rcx*2]
   140002363:	jmp    0x14000238b
   140002365:	mov    ecx,0x1
   14000236a:	lea    r9,[rsp+0x40]
   14000236f:	lea    rdx,[rsp+0x30]
   140002374:	mov    r8d,ecx
   140002377:	call   QWORD PTR [rip+0xbd4b]        # 0x14000e0c8
   14000237d:	xor    ecx,ecx
   14000237f:	test   eax,eax
   140002381:	je     0x140002388
   140002383:	movzx  ecx,WORD PTR [rsp+0x40]
   140002388:	movzx  eax,cx
   14000238b:	movzx  ecx,bx
   14000238e:	and    eax,ecx
   140002390:	add    rsp,0x20
   140002394:	pop    rbx
   140002395:	ret    
   140002396:	int3   
   140002397:	int3   
   140002398:	mov    rax,rsp
   14000239b:	mov    QWORD PTR [rax+0x8],rbx
   14000239f:	mov    QWORD PTR [rax+0x10],rbp
   1400023a3:	mov    QWORD PTR [rax+0x18],rsi
   1400023a7:	mov    QWORD PTR [rax+0x20],rdi
   1400023ab:	push   r12
   1400023ad:	push   r13
   1400023af:	push   r14
   1400023b1:	sub    rsp,0x20
   1400023b5:	mov    rbx,rcx
   1400023b8:	test   rcx,rcx
   1400023bb:	jne    0x1400023d5
   1400023bd:	call   0x140003564
   1400023c2:	mov    DWORD PTR [rax],0x16
   1400023c8:	call   0x1400034fc
   1400023cd:	or     eax,0xffffffff
   1400023d0:	jmp    0x14000252f
   1400023d5:	call   0x14000571c
   1400023da:	cmp    DWORD PTR [rbx+0x8],0x0
   1400023de:	movsxd r12,eax
   1400023e1:	jge    0x1400023e7
   1400023e3:	and    DWORD PTR [rbx+0x8],0x0
   1400023e7:	xor    edx,edx
   1400023e9:	mov    ecx,r12d
   1400023ec:	lea    r8d,[rdx+0x1]
   1400023f0:	call   0x140005b38
   1400023f5:	mov    esi,eax
   1400023f7:	test   eax,eax
   1400023f9:	js     0x1400023cd
   1400023fb:	mov    edx,DWORD PTR [rbx+0x18]
   1400023fe:	test   edx,0x108
   140002404:	jne    0x140002410
   140002406:	sub    esi,DWORD PTR [rbx+0x8]
   140002409:	mov    eax,esi
   14000240b:	jmp    0x14000252f
   140002410:	mov    edi,DWORD PTR [rbx]
   140002412:	lea    r8,[rip+0x12207]        # 0x140014620
   140002419:	mov    ebp,edi
   14000241b:	sub    ebp,DWORD PTR [rbx+0x10]
   14000241e:	test   dl,0x3
   140002421:	je     0x14000245f
   140002423:	mov    rcx,r12
   140002426:	mov    rax,r12
   140002429:	sar    rax,0x5
   14000242d:	and    ecx,0x1f
   140002430:	mov    rax,QWORD PTR [r8+rax*8]
   140002434:	imul   rcx,rcx,0x58
   140002438:	test   BYTE PTR [rax+rcx*1+0x8],0x80
   14000243d:	je     0x140002454
   14000243f:	mov    rax,QWORD PTR [rbx+0x10]
   140002443:	jmp    0x14000244f
   140002445:	cmp    BYTE PTR [rax],0xa
   140002448:	jne    0x14000244c
   14000244a:	inc    ebp
   14000244c:	inc    rax
   14000244f:	cmp    rax,QWORD PTR [rbx]
   140002452:	jb     0x140002445
   140002454:	test   esi,esi
   140002456:	jne    0x140002473
   140002458:	mov    eax,ebp
   14000245a:	jmp    0x14000252f
   14000245f:	test   dl,dl
   140002461:	js     0x140002454
   140002463:	call   0x140003564
   140002468:	mov    DWORD PTR [rax],0x16
   14000246e:	jmp    0x1400023cd
   140002473:	test   dl,0x1
   140002476:	je     0x14000252b
   14000247c:	cmp    DWORD PTR [rbx+0x8],0x0
   140002480:	jne    0x140002489
   140002482:	xor    ebp,ebp
   140002484:	jmp    0x14000252b
   140002489:	sub    edi,DWORD PTR [rbx+0x10]
   14000248c:	mov    r13,r12
   14000248f:	mov    r14,r12
   140002492:	add    edi,DWORD PTR [rbx+0x8]
   140002495:	sar    r14,0x5
   140002499:	and    r13d,0x1f
   14000249d:	mov    rax,QWORD PTR [r8+r14*8]
   1400024a1:	imul   r13,r13,0x58
   1400024a5:	test   BYTE PTR [r13+rax*1+0x8],0x80
   1400024ab:	je     0x140002529
   1400024ad:	xor    edx,edx
   1400024af:	mov    ecx,r12d
   1400024b2:	lea    r8d,[rdx+0x2]
   1400024b6:	call   0x140005b38
   1400024bb:	cmp    eax,esi
   1400024bd:	jne    0x1400024e2
   1400024bf:	mov    rax,QWORD PTR [rbx+0x10]
   1400024c3:	mov    ecx,edi
   1400024c5:	add    rcx,rax
   1400024c8:	jmp    0x1400024d4
   1400024ca:	cmp    BYTE PTR [rax],0xa
   1400024cd:	jne    0x1400024d1
   1400024cf:	inc    edi
   1400024d1:	inc    rax
   1400024d4:	cmp    rax,rcx
   1400024d7:	jb     0x1400024ca
   1400024d9:	test   DWORD PTR [rbx+0x18],0x2000
   1400024e0:	jmp    0x140002525
   1400024e2:	xor    r8d,r8d
   1400024e5:	mov    edx,esi
   1400024e7:	mov    ecx,r12d
   1400024ea:	call   0x140005b38
   1400024ef:	test   eax,eax
   1400024f1:	js     0x1400023cd
   1400024f7:	mov    eax,0x200
   1400024fc:	cmp    edi,eax
   1400024fe:	ja     0x140002511
   140002500:	test   BYTE PTR [rbx+0x18],0x8
   140002504:	je     0x140002511
   140002506:	test   DWORD PTR [rbx+0x18],0x400
   14000250d:	mov    edi,eax
   14000250f:	je     0x140002514
   140002511:	mov    edi,DWORD PTR [rbx+0x24]
   140002514:	lea    rax,[rip+0x12105]        # 0x140014620
   14000251b:	mov    rax,QWORD PTR [rax+r14*8]
   14000251f:	test   BYTE PTR [r13+rax*1+0x8],0x4
   140002525:	je     0x140002529
   140002527:	inc    edi
   140002529:	sub    esi,edi
   14000252b:	lea    eax,[rbp+rsi*1+0x0]
   14000252f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002534:	mov    rbp,QWORD PTR [rsp+0x48]
   140002539:	mov    rsi,QWORD PTR [rsp+0x50]
   14000253e:	mov    rdi,QWORD PTR [rsp+0x58]
   140002543:	add    rsp,0x20
   140002547:	pop    r14
   140002549:	pop    r13
   14000254b:	pop    r12
   14000254d:	ret    
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    QWORD PTR [rsp+0x10],rbx
   140002555:	mov    QWORD PTR [rsp+0x8],rcx
   14000255a:	push   rdi
   14000255b:	sub    rsp,0x20
   14000255f:	mov    rbx,rcx
   140002562:	xor    eax,eax
   140002564:	test   rcx,rcx
   140002567:	setne  al
   14000256a:	test   eax,eax
   14000256c:	jne    0x140002583
   14000256e:	call   0x140003564
   140002573:	mov    DWORD PTR [rax],0x16
   140002579:	call   0x1400034fc
   14000257e:	or     eax,0xffffffff
   140002581:	jmp    0x14000259d
   140002583:	call   0x140002dc8
   140002588:	nop
   140002589:	mov    rcx,rbx
   14000258c:	call   0x140002398
   140002591:	mov    edi,eax
   140002593:	mov    rcx,rbx
   140002596:	call   0x140002e60
   14000259b:	mov    eax,edi
   14000259d:	mov    rbx,QWORD PTR [rsp+0x38]
   1400025a2:	add    rsp,0x20
   1400025a6:	pop    rdi
   1400025a7:	ret    
   1400025a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400025ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400025b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400025b7:	push   rdi
   1400025b8:	sub    rsp,0x20
   1400025bc:	mov    eax,DWORD PTR [rcx+0x18]
   1400025bf:	mov    edi,r8d
   1400025c2:	mov    esi,edx
   1400025c4:	mov    rbx,rcx
   1400025c7:	test   al,0x83
   1400025c9:	jne    0x1400025db
   1400025cb:	call   0x140003564
   1400025d0:	mov    DWORD PTR [rax],0x16
   1400025d6:	or     eax,0xffffffff
   1400025d9:	jmp    0x140002645
   1400025db:	and    eax,0xffffffef
   1400025de:	xor    ebp,ebp
   1400025e0:	mov    DWORD PTR [rcx+0x18],eax
   1400025e3:	cmp    r8d,0x1
   1400025e7:	jne    0x1400025f2
   1400025e9:	call   0x140002398
   1400025ee:	mov    edi,ebp
   1400025f0:	add    esi,eax
   1400025f2:	mov    rcx,rbx
   1400025f5:	call   0x140005c18
   1400025fa:	mov    r11d,DWORD PTR [rbx+0x18]
   1400025fe:	test   r11b,r11b
   140002601:	jns    0x14000260d
   140002603:	and    r11d,0xfffffffc
   140002607:	mov    DWORD PTR [rbx+0x18],r11d
   14000260b:	jmp    0x140002627
   14000260d:	test   r11b,0x1
   140002611:	je     0x140002627
   140002613:	test   r11b,0x8
   140002617:	je     0x140002627
   140002619:	bt     r11d,0xa
   14000261e:	jb     0x140002627
   140002620:	mov    DWORD PTR [rbx+0x24],0x200
   140002627:	mov    rcx,rbx
   14000262a:	call   0x14000571c
   14000262f:	mov    r8d,edi
   140002632:	mov    edx,esi
   140002634:	mov    ecx,eax
   140002636:	call   0x140005b38
   14000263b:	cmp    eax,0xffffffff
   14000263e:	setne  bpl
   140002642:	lea    eax,[rbp-0x1]
   140002645:	mov    rbx,QWORD PTR [rsp+0x30]
   14000264a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000264f:	mov    rsi,QWORD PTR [rsp+0x40]
   140002654:	add    rsp,0x20
   140002658:	pop    rdi
   140002659:	ret    
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	mov    QWORD PTR [rsp+0x10],rbx
   140002661:	mov    QWORD PTR [rsp+0x18],rsi
   140002666:	mov    QWORD PTR [rsp+0x8],rcx
   14000266b:	push   rdi
   14000266c:	sub    rsp,0x20
   140002670:	mov    ebx,r8d
   140002673:	mov    esi,edx
   140002675:	mov    rdi,rcx
   140002678:	xor    eax,eax
   14000267a:	test   rcx,rcx
   14000267d:	setne  al
   140002680:	test   eax,eax
   140002682:	jne    0x140002699
   140002684:	call   0x140003564
   140002689:	mov    DWORD PTR [rax],0x16
   14000268f:	call   0x1400034fc
   140002694:	or     eax,0xffffffff
   140002697:	jmp    0x1400026c6
   140002699:	test   ebx,ebx
   14000269b:	je     0x1400026a7
   14000269d:	cmp    ebx,0x1
   1400026a0:	je     0x1400026a7
   1400026a2:	cmp    ebx,0x2
   1400026a5:	jne    0x140002684
   1400026a7:	call   0x140002dc8
   1400026ac:	nop
   1400026ad:	mov    r8d,ebx
   1400026b0:	mov    edx,esi
   1400026b2:	mov    rcx,rdi
   1400026b5:	call   0x1400025a8
   1400026ba:	mov    ebx,eax
   1400026bc:	mov    rcx,rdi
   1400026bf:	call   0x140002e60
   1400026c4:	mov    eax,ebx
   1400026c6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400026cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400026d0:	add    rsp,0x20
   1400026d4:	pop    rdi
   1400026d5:	ret    
   1400026d6:	int3   
   1400026d7:	int3   
   1400026d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400026dd:	push   rdi
   1400026de:	sub    rsp,0x20
   1400026e2:	or     edi,0xffffffff
   1400026e5:	mov    rbx,rcx
   1400026e8:	test   rcx,rcx
   1400026eb:	jne    0x140002701
   1400026ed:	call   0x140003564
   1400026f2:	mov    DWORD PTR [rax],0x16
   1400026f8:	call   0x1400034fc
   1400026fd:	or     eax,edi
   1400026ff:	jmp    0x140002747
   140002701:	test   BYTE PTR [rcx+0x18],0x83
   140002705:	je     0x140002741
   140002707:	call   0x140005c18
   14000270c:	mov    rcx,rbx
   14000270f:	mov    edi,eax
   140002711:	call   0x140005f58
   140002716:	mov    rcx,rbx
   140002719:	call   0x14000571c
   14000271e:	mov    ecx,eax
   140002720:	call   0x140005e94
   140002725:	test   eax,eax
   140002727:	jns    0x14000272e
   140002729:	or     edi,0xffffffff
   14000272c:	jmp    0x140002741
   14000272e:	mov    rcx,QWORD PTR [rbx+0x28]
   140002732:	test   rcx,rcx
   140002735:	je     0x140002741
   140002737:	call   0x140001eb4
   14000273c:	and    QWORD PTR [rbx+0x28],0x0
   140002741:	and    DWORD PTR [rbx+0x18],0x0
   140002745:	mov    eax,edi
   140002747:	mov    rbx,QWORD PTR [rsp+0x30]
   14000274c:	add    rsp,0x20
   140002750:	pop    rdi
   140002751:	ret    
   140002752:	int3   
   140002753:	int3   
   140002754:	mov    QWORD PTR [rsp+0x10],rbx
   140002759:	mov    QWORD PTR [rsp+0x8],rcx
   14000275e:	push   rdi
   14000275f:	sub    rsp,0x20
   140002763:	mov    rbx,rcx
   140002766:	or     edi,0xffffffff
   140002769:	xor    eax,eax
   14000276b:	test   rcx,rcx
   14000276e:	setne  al
   140002771:	test   eax,eax
   140002773:	jne    0x140002789
   140002775:	call   0x140003564
   14000277a:	mov    DWORD PTR [rax],0x16
   140002780:	call   0x1400034fc
   140002785:	mov    eax,edi
   140002787:	jmp    0x1400027af
   140002789:	test   BYTE PTR [rcx+0x18],0x40
   14000278d:	je     0x140002795
   14000278f:	and    DWORD PTR [rcx+0x18],0x0
   140002793:	jmp    0x140002785
   140002795:	call   0x140002dc8
   14000279a:	nop
   14000279b:	mov    rcx,rbx
   14000279e:	call   0x1400026d8
   1400027a3:	mov    edi,eax
   1400027a5:	mov    rcx,rbx
   1400027a8:	call   0x140002e60
   1400027ad:	jmp    0x140002785
   1400027af:	mov    rbx,QWORD PTR [rsp+0x38]
   1400027b4:	add    rsp,0x20
   1400027b8:	pop    rdi
   1400027b9:	ret    
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400027c1:	push   rdi
   1400027c2:	sub    rsp,0xa0
   1400027c9:	lea    rcx,[rsp+0x30]
   1400027ce:	call   QWORD PTR [rip+0xb904]        # 0x14000e0d8
   1400027d4:	mov    r11d,0x5a4d
   1400027da:	lea    rdi,[rip+0xffffffffffffd81f]        # 0x140000000
   1400027e1:	cmp    WORD PTR [rip+0xffffffffffffd817],r11w        # 0x140000000
   1400027e9:	je     0x1400027ef
   1400027eb:	xor    ebx,ebx
   1400027ed:	jmp    0x140002820
   1400027ef:	movsxd rax,DWORD PTR [rip+0xffffffffffffd846]        # 0x14000003c
   1400027f6:	add    rax,rdi
   1400027f9:	cmp    DWORD PTR [rax],0x4550
   1400027ff:	jne    0x1400027eb
   140002801:	mov    ecx,0x20b
   140002806:	cmp    WORD PTR [rax+0x18],cx
   14000280a:	jne    0x1400027eb
   14000280c:	xor    ebx,ebx
   14000280e:	cmp    DWORD PTR [rax+0x84],0xe
   140002815:	jbe    0x140002820
   140002817:	cmp    DWORD PTR [rax+0xf8],ebx
   14000281d:	setne  bl
   140002820:	mov    DWORD PTR [rsp+0xb0],ebx
   140002827:	call   0x1400044a4
   14000282c:	test   eax,eax
   14000282e:	jne    0x140002852
   140002830:	cmp    DWORD PTR [rip+0x10bf1],0x1        # 0x140013428
   140002837:	jne    0x14000283e
   140002839:	call   0x140004460
   14000283e:	mov    ecx,0x1c
   140002843:	call   0x140004200
   140002848:	mov    ecx,0xff
   14000284d:	call   0x140001b30
   140002852:	call   0x140003e70
   140002857:	test   eax,eax
   140002859:	jne    0x14000287d
   14000285b:	cmp    DWORD PTR [rip+0x10bc6],0x1        # 0x140013428
   140002862:	jne    0x140002869
   140002864:	call   0x140004460
   140002869:	mov    ecx,0x10
   14000286e:	call   0x140004200
   140002873:	mov    ecx,0xff
   140002878:	call   0x140001b30
   14000287d:	call   0x14000405c
   140002882:	nop
   140002883:	call   0x1400057cc
   140002888:	test   eax,eax
   14000288a:	jns    0x140002896
   14000288c:	mov    ecx,0x1b
   140002891:	call   0x140001e8c
   140002896:	call   QWORD PTR [rip+0xb834]        # 0x14000e0d0
   14000289c:	mov    QWORD PTR [rip+0x12fad],rax        # 0x140015850
   1400028a3:	call   0x140006630
   1400028a8:	mov    QWORD PTR [rip+0x10b69],rax        # 0x140013418
   1400028af:	call   0x140006538
   1400028b4:	test   eax,eax
   1400028b6:	jns    0x1400028c2
   1400028b8:	mov    ecx,0x8
   1400028bd:	call   0x140001e8c
   1400028c2:	call   0x140006238
   1400028c7:	test   eax,eax
   1400028c9:	jns    0x1400028d5
   1400028cb:	mov    ecx,0x9
   1400028d0:	call   0x140001e8c
   1400028d5:	mov    ecx,0x1
   1400028da:	call   0x140001c14
   1400028df:	test   eax,eax
   1400028e1:	je     0x1400028ea
   1400028e3:	mov    ecx,eax
   1400028e5:	call   0x140001e8c
   1400028ea:	call   0x1400061bc
   1400028ef:	test   BYTE PTR [rsp+0x6c],0x1
   1400028f4:	movzx  edx,WORD PTR [rsp+0x70]
   1400028f9:	mov    r9d,0xa
   1400028ff:	cmovne r9d,edx
   140002903:	mov    r8,rax
   140002906:	xor    edx,edx
   140002908:	mov    rcx,rdi
   14000290b:	call   0x140001958
   140002910:	mov    edi,eax
   140002912:	mov    DWORD PTR [rsp+0x20],eax
   140002916:	test   ebx,ebx
   140002918:	jne    0x140002921
   14000291a:	mov    ecx,eax
   14000291c:	call   0x140001e54
   140002921:	call   0x140001e6c
   140002926:	jmp    0x140002942
   140002928:	mov    edi,eax
   14000292a:	cmp    DWORD PTR [rsp+0xb0],0x0
   140002932:	jne    0x14000293c
   140002934:	mov    ecx,eax
   140002936:	call   0x140001e60
   14000293b:	int3   
   14000293c:	call   0x140001e7c
   140002941:	nop
   140002942:	mov    eax,edi
   140002944:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000294c:	add    rsp,0xa0
   140002953:	pop    rdi
   140002954:	ret    
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	sub    rsp,0x28
   14000295c:	call   0x140006724
   140002961:	add    rsp,0x28
   140002965:	jmp    0x1400027bc
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	mov    QWORD PTR [rsp+0x8],rcx
   140002971:	sub    rsp,0x88
   140002978:	lea    rcx,[rip+0x10b51]        # 0x1400134d0
   14000297f:	call   QWORD PTR [rip+0xb78b]        # 0x14000e110
   140002985:	mov    rax,QWORD PTR [rip+0x10c3c]        # 0x1400135c8
   14000298c:	mov    QWORD PTR [rsp+0x58],rax
   140002991:	xor    r8d,r8d
   140002994:	lea    rdx,[rsp+0x60]
   140002999:	mov    rcx,QWORD PTR [rsp+0x58]
   14000299e:	call   0x14000cd9e
   1400029a3:	mov    QWORD PTR [rsp+0x50],rax
   1400029a8:	cmp    QWORD PTR [rsp+0x50],0x0
   1400029ae:	je     0x1400029f1
   1400029b0:	mov    QWORD PTR [rsp+0x38],0x0
   1400029b9:	lea    rax,[rsp+0x48]
   1400029be:	mov    QWORD PTR [rsp+0x30],rax
   1400029c3:	lea    rax,[rsp+0x40]
   1400029c8:	mov    QWORD PTR [rsp+0x28],rax
   1400029cd:	lea    rax,[rip+0x10afc]        # 0x1400134d0
   1400029d4:	mov    QWORD PTR [rsp+0x20],rax
   1400029d9:	mov    r9,QWORD PTR [rsp+0x50]
   1400029de:	mov    r8,QWORD PTR [rsp+0x58]
   1400029e3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400029e8:	xor    ecx,ecx
   1400029ea:	call   0x14000cd98
   1400029ef:	jmp    0x140002a13
   1400029f1:	mov    rax,QWORD PTR [rsp+0x88]
   1400029f9:	mov    QWORD PTR [rip+0x10bc8],rax        # 0x1400135c8
   140002a00:	lea    rax,[rsp+0x88]
   140002a08:	add    rax,0x8
   140002a0c:	mov    QWORD PTR [rip+0x10b55],rax        # 0x140013568
   140002a13:	mov    rax,QWORD PTR [rip+0x10bae]        # 0x1400135c8
   140002a1a:	mov    QWORD PTR [rip+0x10a1f],rax        # 0x140013440
   140002a21:	mov    rax,QWORD PTR [rsp+0x90]
   140002a29:	mov    QWORD PTR [rip+0x10b20],rax        # 0x140013550
   140002a30:	mov    DWORD PTR [rip+0x109f6],0xc0000409        # 0x140013430
   140002a3a:	mov    DWORD PTR [rip+0x109f0],0x1        # 0x140013434
   140002a44:	mov    rax,QWORD PTR [rip+0xf5bd]        # 0x140012008
   140002a4b:	mov    QWORD PTR [rsp+0x68],rax
   140002a50:	mov    rax,QWORD PTR [rip+0xf5b9]        # 0x140012010
   140002a57:	mov    QWORD PTR [rsp+0x70],rax
   140002a5c:	call   QWORD PTR [rip+0xb696]        # 0x14000e0f8
   140002a62:	mov    DWORD PTR [rip+0x10a60],eax        # 0x1400134c8
   140002a68:	mov    ecx,0x1
   140002a6d:	call   0x1400067d8
   140002a72:	xor    ecx,ecx
   140002a74:	call   QWORD PTR [rip+0xb676]        # 0x14000e0f0
   140002a7a:	lea    rcx,[rip+0xb8d7]        # 0x14000e358
   140002a81:	call   QWORD PTR [rip+0xb661]        # 0x14000e0e8
   140002a87:	cmp    DWORD PTR [rip+0x10a3a],0x0        # 0x1400134c8
   140002a8e:	jne    0x140002a9a
   140002a90:	mov    ecx,0x1
   140002a95:	call   0x1400067d8
   140002a9a:	call   QWORD PTR [rip+0xb588]        # 0x14000e028
   140002aa0:	mov    edx,0xc0000409
   140002aa5:	mov    rcx,rax
   140002aa8:	call   QWORD PTR [rip+0xb632]        # 0x14000e0e0
   140002aae:	add    rsp,0x88
   140002ab5:	ret    
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	mov    r11,rsp
   140002abb:	mov    QWORD PTR [r11+0x8],rbx
   140002abf:	mov    QWORD PTR [r11+0x18],rbp
   140002ac3:	mov    QWORD PTR [r11+0x20],rsi
   140002ac7:	mov    QWORD PTR [r11+0x10],rdx
   140002acb:	push   rdi
   140002acc:	push   r12
   140002ace:	push   r13
   140002ad0:	push   r14
   140002ad2:	push   r15
   140002ad4:	sub    rsp,0x40
   140002ad8:	mov    r15,QWORD PTR [r9+0x8]
   140002adc:	mov    r14,QWORD PTR [r9]
   140002adf:	mov    eax,DWORD PTR [rcx+0x4]
   140002ae2:	mov    rdi,QWORD PTR [r9+0x38]
   140002ae6:	sub    r14,r15
   140002ae9:	mov    r12,r9
   140002aec:	mov    r13,rdx
   140002aef:	mov    rbp,rcx
   140002af2:	test   al,0x66
   140002af4:	jne    0x140002be7
   140002afa:	movsxd rsi,DWORD PTR [r9+0x48]
   140002afe:	mov    QWORD PTR [r11-0x38],rcx
   140002b02:	mov    QWORD PTR [r11-0x30],r8
   140002b06:	mov    rax,rsi
   140002b09:	cmp    esi,DWORD PTR [rdi]
   140002b0b:	jae    0x140002c92
   140002b11:	add    rax,rax
   140002b14:	lea    rbx,[rdi+rax*8+0xc]
   140002b19:	mov    eax,DWORD PTR [rbx-0x8]
   140002b1c:	cmp    r14,rax
   140002b1f:	jb     0x140002bcd
   140002b25:	mov    eax,DWORD PTR [rbx-0x4]
   140002b28:	cmp    r14,rax
   140002b2b:	jae    0x140002bcd
   140002b31:	cmp    DWORD PTR [rbx+0x4],0x0
   140002b35:	je     0x140002bcd
   140002b3b:	cmp    DWORD PTR [rbx],0x1
   140002b3e:	je     0x140002b59
   140002b40:	mov    eax,DWORD PTR [rbx]
   140002b42:	lea    rcx,[rsp+0x30]
   140002b47:	mov    rdx,r13
   140002b4a:	add    rax,r15
   140002b4d:	call   rax
   140002b4f:	test   eax,eax
   140002b51:	js     0x140002be0
   140002b57:	jle    0x140002bcd
   140002b59:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140002b60:	jne    0x140002b8a
   140002b62:	cmp    QWORD PTR [rip+0x12cde],0x0        # 0x140015848
   140002b6a:	je     0x140002b8a
   140002b6c:	lea    rcx,[rip+0x12cd5]        # 0x140015848
   140002b73:	call   0x140004190
   140002b78:	test   eax,eax
   140002b7a:	je     0x140002b8a
   140002b7c:	mov    edx,0x1
   140002b81:	mov    rcx,rbp
   140002b84:	call   QWORD PTR [rip+0x12cbe]        # 0x140015848
   140002b8a:	mov    ecx,DWORD PTR [rbx+0x4]
   140002b8d:	mov    r8d,0x1
   140002b93:	mov    rdx,r13
   140002b96:	add    rcx,r15
   140002b99:	call   0x140003630
   140002b9e:	mov    rax,QWORD PTR [r12+0x40]
   140002ba3:	mov    edx,DWORD PTR [rbx+0x4]
   140002ba6:	movsxd r9,DWORD PTR [rbp+0x0]
   140002baa:	mov    QWORD PTR [rsp+0x28],rax
   140002baf:	mov    rax,QWORD PTR [r12+0x28]
   140002bb4:	add    rdx,r15
   140002bb7:	mov    r8,rbp
   140002bba:	mov    rcx,r13
   140002bbd:	mov    QWORD PTR [rsp+0x20],rax
   140002bc2:	call   QWORD PTR [rip+0xb550]        # 0x14000e118
   140002bc8:	call   0x140003660
   140002bcd:	inc    esi
   140002bcf:	add    rbx,0x10
   140002bd3:	cmp    esi,DWORD PTR [rdi]
   140002bd5:	jae    0x140002c92
   140002bdb:	jmp    0x140002b19
   140002be0:	xor    eax,eax
   140002be2:	jmp    0x140002c97
   140002be7:	mov    r8,QWORD PTR [r9+0x20]
   140002beb:	xor    ebp,ebp
   140002bed:	xor    r13d,r13d
   140002bf0:	sub    r8,r15
   140002bf3:	test   al,0x20
   140002bf5:	je     0x140002c32
   140002bf7:	xor    edx,edx
   140002bf9:	cmp    DWORD PTR [rdi],edx
   140002bfb:	jbe    0x140002c32
   140002bfd:	lea    rcx,[rdi+0x8]
   140002c01:	mov    eax,DWORD PTR [rcx-0x4]
   140002c04:	cmp    r8,rax
   140002c07:	jb     0x140002c10
   140002c09:	mov    eax,DWORD PTR [rcx]
   140002c0b:	cmp    r8,rax
   140002c0e:	jbe    0x140002c1c
   140002c10:	inc    edx
   140002c12:	add    rcx,0x10
   140002c16:	cmp    edx,DWORD PTR [rdi]
   140002c18:	jae    0x140002c32
   140002c1a:	jmp    0x140002c01
   140002c1c:	mov    eax,edx
   140002c1e:	add    rax,rax
   140002c21:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   140002c25:	test   ecx,ecx
   140002c27:	jne    0x140002c2f
   140002c29:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   140002c2d:	jmp    0x140002c32
   140002c2f:	mov    r13d,ecx
   140002c32:	movsxd rsi,DWORD PTR [r9+0x48]
   140002c36:	mov    rbx,rsi
   140002c39:	cmp    esi,DWORD PTR [rdi]
   140002c3b:	jae    0x140002c92
   140002c3d:	inc    rbx
   140002c40:	shl    rbx,0x4
   140002c44:	add    rbx,rdi
   140002c47:	mov    eax,DWORD PTR [rbx-0xc]
   140002c4a:	cmp    r14,rax
   140002c4d:	jb     0x140002c88
   140002c4f:	mov    eax,DWORD PTR [rbx-0x8]
   140002c52:	cmp    r14,rax
   140002c55:	jae    0x140002c88
   140002c57:	test   r13d,r13d
   140002c5a:	je     0x140002c61
   140002c5c:	cmp    r13d,DWORD PTR [rbx]
   140002c5f:	je     0x140002c92
   140002c61:	test   ebp,ebp
   140002c63:	je     0x140002c6a
   140002c65:	cmp    ebp,DWORD PTR [rbx-0x4]
   140002c68:	je     0x140002c92
   140002c6a:	cmp    DWORD PTR [rbx],0x0
   140002c6d:	jne    0x140002c88
   140002c6f:	mov    rdx,QWORD PTR [rsp+0x78]
   140002c74:	lea    eax,[rsi+0x1]
   140002c77:	mov    cl,0x1
   140002c79:	mov    DWORD PTR [r12+0x48],eax
   140002c7e:	mov    r8d,DWORD PTR [rbx-0x4]
   140002c82:	add    r8,r15
   140002c85:	call   r8
   140002c88:	inc    esi
   140002c8a:	add    rbx,0x10
   140002c8e:	cmp    esi,DWORD PTR [rdi]
   140002c90:	jb     0x140002c47
   140002c92:	mov    eax,0x1
   140002c97:	lea    r11,[rsp+0x40]
   140002c9c:	mov    rbx,QWORD PTR [r11+0x30]
   140002ca0:	mov    rbp,QWORD PTR [r11+0x40]
   140002ca4:	mov    rsi,QWORD PTR [r11+0x48]
   140002ca8:	mov    rsp,r11
   140002cab:	pop    r15
   140002cad:	pop    r14
   140002caf:	pop    r13
   140002cb1:	pop    r12
   140002cb3:	pop    rdi
   140002cb4:	ret    
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	lea    rax,[rip+0xf361]        # 0x140012020
   140002cbf:	ret    
   140002cc0:	rex push rbx
   140002cc2:	sub    rsp,0x20
   140002cc6:	mov    eax,DWORD PTR [rip+0x12b74]        # 0x140015840
   140002ccc:	mov    ebx,0x14
   140002cd1:	test   eax,eax
   140002cd3:	jne    0x140002cdc
   140002cd5:	mov    eax,0x200
   140002cda:	jmp    0x140002ce1
   140002cdc:	cmp    eax,ebx
   140002cde:	cmovl  eax,ebx
   140002ce1:	movsxd rcx,eax
   140002ce4:	mov    edx,0x8
   140002ce9:	mov    DWORD PTR [rip+0x12b51],eax        # 0x140015840
   140002cef:	call   0x140006860
   140002cf4:	mov    QWORD PTR [rip+0x11b25],rax        # 0x140014820
   140002cfb:	test   rax,rax
   140002cfe:	jne    0x140002d24
   140002d00:	lea    edx,[rax+0x8]
   140002d03:	mov    rcx,rbx
   140002d06:	mov    DWORD PTR [rip+0x12b34],ebx        # 0x140015840
   140002d0c:	call   0x140006860
   140002d11:	mov    QWORD PTR [rip+0x11b08],rax        # 0x140014820
   140002d18:	test   rax,rax
   140002d1b:	jne    0x140002d24
   140002d1d:	mov    eax,0x1a
   140002d22:	jmp    0x140002d9a
   140002d24:	xor    ecx,ecx
   140002d26:	lea    rdx,[rip+0xf2f3]        # 0x140012020
   140002d2d:	mov    QWORD PTR [rcx+rax*1],rdx
   140002d31:	add    rdx,0x30
   140002d35:	add    rcx,0x8
   140002d39:	dec    rbx
   140002d3c:	je     0x140002d47
   140002d3e:	mov    rax,QWORD PTR [rip+0x11adb]        # 0x140014820
   140002d45:	jmp    0x140002d2d
   140002d47:	xor    r8d,r8d
   140002d4a:	lea    rdx,[rip+0xf2eb]        # 0x14001203c
   140002d51:	lea    r9d,[r8+0x3]
   140002d55:	mov    rcx,r8
   140002d58:	lea    r10,[rip+0x118c1]        # 0x140014620
   140002d5f:	mov    rax,r8
   140002d62:	sar    rax,0x5
   140002d66:	and    ecx,0x1f
   140002d69:	mov    rax,QWORD PTR [r10+rax*8]
   140002d6d:	imul   rcx,rcx,0x58
   140002d71:	mov    r10,QWORD PTR [rcx+rax*1]
   140002d75:	cmp    r10,0xffffffffffffffff
   140002d79:	je     0x140002d86
   140002d7b:	cmp    r10,0xfffffffffffffffe
   140002d7f:	je     0x140002d86
   140002d81:	test   r10,r10
   140002d84:	jne    0x140002d8c
   140002d86:	mov    DWORD PTR [rdx],0xfffffffe
   140002d8c:	inc    r8
   140002d8f:	add    rdx,0x30
   140002d93:	dec    r9
   140002d96:	jne    0x140002d55
   140002d98:	xor    eax,eax
   140002d9a:	add    rsp,0x20
   140002d9e:	pop    rbx
   140002d9f:	ret    
   140002da0:	sub    rsp,0x28
   140002da4:	call   0x140005dcc
   140002da9:	cmp    BYTE PTR [rip+0x10658],0x0        # 0x140013408
   140002db0:	je     0x140002db7
   140002db2:	call   0x14000696c
   140002db7:	mov    rcx,QWORD PTR [rip+0x11a62]        # 0x140014820
   140002dbe:	add    rsp,0x28
   140002dc2:	jmp    0x140001eb4
   140002dc7:	int3   
   140002dc8:	rex push rbx
   140002dca:	sub    rsp,0x20
   140002dce:	mov    rbx,rcx
   140002dd1:	lea    rcx,[rip+0xf248]        # 0x140012020
   140002dd8:	cmp    rbx,rcx
   140002ddb:	jb     0x140002e1b
   140002ddd:	lea    rax,[rip+0xf5cc]        # 0x1400123b0
   140002de4:	cmp    rbx,rax
   140002de7:	ja     0x140002e1b
   140002de9:	mov    rdx,rbx
   140002dec:	movabs rax,0x2aaaaaaaaaaaaaab
   140002df6:	sub    rdx,rcx
   140002df9:	imul   rdx
   140002dfc:	sar    rdx,0x3
   140002e00:	mov    rcx,rdx
   140002e03:	shr    rcx,0x3f
   140002e07:	lea    ecx,[rcx+rdx*1+0x10]
   140002e0b:	call   0x140003870
   140002e10:	bts    DWORD PTR [rbx+0x18],0xf
   140002e15:	add    rsp,0x20
   140002e19:	pop    rbx
   140002e1a:	ret    
   140002e1b:	lea    rcx,[rbx+0x30]
   140002e1f:	add    rsp,0x20
   140002e23:	pop    rbx
   140002e24:	rex.W jmp QWORD PTR [rip+0xb2f5]        # 0x14000e120
   140002e2b:	int3   
   140002e2c:	rex push rbx
   140002e2e:	sub    rsp,0x20
   140002e32:	mov    rbx,rdx
   140002e35:	cmp    ecx,0x14
   140002e38:	jge    0x140002e4d
   140002e3a:	add    ecx,0x10
   140002e3d:	call   0x140003870
   140002e42:	bts    DWORD PTR [rbx+0x18],0xf
   140002e47:	add    rsp,0x20
   140002e4b:	pop    rbx
   140002e4c:	ret    
   140002e4d:	lea    rcx,[rdx+0x30]
   140002e51:	add    rsp,0x20
   140002e55:	pop    rbx
   140002e56:	rex.W jmp QWORD PTR [rip+0xb2c3]        # 0x14000e120
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	lea    rdx,[rip+0xf1b9]        # 0x140012020
   140002e67:	cmp    rcx,rdx
   140002e6a:	jb     0x140002ea1
   140002e6c:	lea    rax,[rip+0xf53d]        # 0x1400123b0
   140002e73:	cmp    rcx,rax
   140002e76:	ja     0x140002ea1
   140002e78:	btr    DWORD PTR [rcx+0x18],0xf
   140002e7d:	sub    rcx,rdx
   140002e80:	movabs rax,0x2aaaaaaaaaaaaaab
   140002e8a:	imul   rcx
   140002e8d:	sar    rdx,0x3
   140002e91:	mov    rcx,rdx
   140002e94:	shr    rcx,0x3f
   140002e98:	lea    ecx,[rcx+rdx*1+0x10]
   140002e9c:	jmp    0x140003770
   140002ea1:	add    rcx,0x30
   140002ea5:	rex.W jmp QWORD PTR [rip+0xb27c]        # 0x14000e128
   140002eac:	cmp    ecx,0x14
   140002eaf:	jge    0x140002ebe
   140002eb1:	btr    DWORD PTR [rdx+0x18],0xf
   140002eb6:	add    ecx,0x10
   140002eb9:	jmp    0x140003770
   140002ebe:	lea    rcx,[rdx+0x30]
   140002ec2:	rex.W jmp QWORD PTR [rip+0xb25f]        # 0x14000e128
   140002ec9:	int3   
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140002ed1:	mov    QWORD PTR [rsp+0x18],rbp
   140002ed6:	mov    QWORD PTR [rsp+0x20],rsi
   140002edb:	push   rdi
   140002edc:	push   r12
   140002ede:	push   r13
   140002ee0:	push   r14
   140002ee2:	push   r15
   140002ee4:	sub    rsp,0x30
   140002ee8:	mov    esi,DWORD PTR [rip+0x1148e]        # 0x14001437c
   140002eee:	xor    r14d,r14d
   140002ef1:	mov    rbp,r9
   140002ef4:	lea    r15d,[r14+0x20]
   140002ef8:	mov    r12d,r8d
   140002efb:	mov    rbx,rdx
   140002efe:	mov    r13,rcx
   140002f01:	mov    r9d,r14d
   140002f04:	mov    r10d,r14d
   140002f07:	mov    r11d,r14d
   140002f0a:	cmp    WORD PTR [rdx],r15w
   140002f0e:	jne    0x140002f1a
   140002f10:	add    rbx,0x2
   140002f14:	cmp    WORD PTR [rbx],r15w
   140002f18:	je     0x140002f10
   140002f1a:	movzx  eax,WORD PTR [rbx]
   140002f1d:	mov    r8d,0x1
   140002f23:	cmp    eax,0x61
   140002f26:	je     0x140002f58
   140002f28:	cmp    eax,0x72
   140002f2b:	je     0x140002f50
   140002f2d:	cmp    eax,0x77
   140002f30:	je     0x140002f49
   140002f32:	call   0x140003564
   140002f37:	mov    DWORD PTR [rax],0x16
   140002f3d:	call   0x1400034fc
   140002f42:	xor    eax,eax
   140002f44:	jmp    0x14000318c
   140002f49:	mov    edi,0x301
   140002f4e:	jmp    0x140002f5d
   140002f50:	mov    edi,r14d
   140002f53:	or     esi,r8d
   140002f56:	jmp    0x140002f60
   140002f58:	mov    edi,0x109
   140002f5d:	or     esi,0x2
   140002f60:	add    rbx,0x2
   140002f64:	mov    edx,r8d
   140002f67:	movzx  eax,WORD PTR [rbx]
   140002f6a:	test   ax,ax
   140002f6d:	je     0x140003136
   140002f73:	test   edx,edx
   140002f75:	je     0x14000306f
   140002f7b:	movzx  ecx,ax
   140002f7e:	cmp    ecx,0x53
   140002f81:	jg     0x140002ffc
   140002f83:	je     0x140002fef
   140002f85:	sub    ecx,r15d
   140002f88:	je     0x14000305f
   140002f8e:	sub    ecx,0xb
   140002f91:	je     0x140002fda
   140002f93:	dec    ecx
   140002f95:	je     0x140002fd5
   140002f97:	sub    ecx,0x18
   140002f9a:	je     0x140002fc3
   140002f9c:	sub    ecx,0xa
   140002f9f:	je     0x140002fba
   140002fa1:	cmp    ecx,0x4
   140002fa4:	jne    0x140002f32
   140002fa6:	test   r10d,r10d
   140002fa9:	jne    0x140003056
   140002faf:	mov    r10d,r8d
   140002fb2:	or     edi,0x10
   140002fb5:	jmp    0x14000305f
   140002fba:	bts    edi,0x7
   140002fbe:	jmp    0x14000305f
   140002fc3:	test   dil,0x40
   140002fc7:	jne    0x140003056
   140002fcd:	or     edi,0x40
   140002fd0:	jmp    0x14000305f
   140002fd5:	mov    r11d,r8d
   140002fd8:	jmp    0x140003056
   140002fda:	test   dil,0x2
   140002fde:	jne    0x140003056
   140002fe0:	and    edi,0xfffffffe
   140002fe3:	and    esi,0xfffffffc
   140002fe6:	or     edi,0x2
   140002fe9:	bts    esi,0x7
   140002fed:	jmp    0x14000305f
   140002fef:	test   r10d,r10d
   140002ff2:	jne    0x140003056
   140002ff4:	mov    r10d,r8d
   140002ff7:	or     edi,r15d
   140002ffa:	jmp    0x14000305f
   140002ffc:	sub    ecx,0x54
   140002fff:	je     0x140003050
   140003001:	sub    ecx,0xe
   140003004:	je     0x140003042
   140003006:	dec    ecx
   140003008:	je     0x140003034
   14000300a:	sub    ecx,0xb
   14000300d:	je     0x140003026
   14000300f:	cmp    ecx,0x6
   140003012:	jne    0x140002f32
   140003018:	test   edi,0xc000
   14000301e:	jne    0x140003056
   140003020:	bts    edi,0xe
   140003024:	jmp    0x14000305f
   140003026:	test   r9d,r9d
   140003029:	jne    0x140003056
   14000302b:	mov    r9d,r8d
   14000302e:	btr    esi,0xe
   140003032:	jmp    0x14000305f
   140003034:	test   r9d,r9d
   140003037:	jne    0x140003056
   140003039:	mov    r9d,r8d
   14000303c:	bts    esi,0xe
   140003040:	jmp    0x14000305f
   140003042:	test   edi,0xc000
   140003048:	jne    0x140003056
   14000304a:	bts    edi,0xf
   14000304e:	jmp    0x14000305f
   140003050:	bt     edi,0xc
   140003054:	jae    0x14000305b
   140003056:	mov    edx,r14d
   140003059:	jmp    0x14000305f
   14000305b:	bts    edi,0xc
   14000305f:	add    rbx,0x2
   140003063:	movzx  eax,WORD PTR [rbx]
   140003066:	test   ax,ax
   140003069:	jne    0x140002f73
   14000306f:	test   r11d,r11d
   140003072:	je     0x140003136
   140003078:	jmp    0x14000307e
   14000307a:	add    rbx,0x2
   14000307e:	cmp    WORD PTR [rbx],r15w
   140003082:	je     0x14000307a
   140003084:	lea    rcx,[rip+0xb2dd]        # 0x14000e368
   14000308b:	mov    r8d,0x3
   140003091:	mov    rdx,rbx
   140003094:	call   0x140007478
   140003099:	test   eax,eax
   14000309b:	jne    0x140002f32
   1400030a1:	add    rbx,0x6
   1400030a5:	jmp    0x1400030ab
   1400030a7:	add    rbx,0x2
   1400030ab:	cmp    WORD PTR [rbx],r15w
   1400030af:	je     0x1400030a7
   1400030b1:	cmp    WORD PTR [rbx],0x3d
   1400030b5:	jne    0x140002f32
   1400030bb:	add    rbx,0x2
   1400030bf:	cmp    WORD PTR [rbx],r15w
   1400030c3:	je     0x1400030bb
   1400030c5:	lea    rdx,[rip+0xb2a4]        # 0x14000e370
   1400030cc:	mov    r8d,0x5
   1400030d2:	mov    rcx,rbx
   1400030d5:	call   0x1400073e0
   1400030da:	test   eax,eax
   1400030dc:	jne    0x1400030e8
   1400030de:	add    rbx,0xa
   1400030e2:	bts    edi,0x12
   1400030e6:	jmp    0x140003136
   1400030e8:	lea    rdx,[rip+0xb291]        # 0x14000e380
   1400030ef:	mov    r8d,0x8
   1400030f5:	mov    rcx,rbx
   1400030f8:	call   0x1400073e0
   1400030fd:	test   eax,eax
   1400030ff:	jne    0x14000310b
   140003101:	add    rbx,0x10
   140003105:	bts    edi,0x11
   140003109:	jmp    0x140003136
   14000310b:	lea    rdx,[rip+0xb286]        # 0x14000e398
   140003112:	mov    r8d,0x7
   140003118:	mov    rcx,rbx
   14000311b:	call   0x1400073e0
   140003120:	test   eax,eax
   140003122:	jne    0x140002f32
   140003128:	add    rbx,0xe
   14000312c:	bts    edi,0x10
   140003130:	jmp    0x140003136
   140003132:	add    rbx,0x2
   140003136:	cmp    WORD PTR [rbx],r15w
   14000313a:	je     0x140003132
   14000313c:	cmp    WORD PTR [rbx],r14w
   140003140:	jne    0x140002f32
   140003146:	lea    rcx,[rsp+0x68]
   14000314b:	mov    r9d,r12d
   14000314e:	mov    r8d,edi
   140003151:	mov    rdx,r13
   140003154:	mov    DWORD PTR [rsp+0x20],0x180
   14000315c:	call   0x140007294
   140003161:	test   eax,eax
   140003163:	jne    0x140002f42
   140003169:	inc    DWORD PTR [rip+0x10831]        # 0x1400139a0
   14000316f:	mov    eax,DWORD PTR [rsp+0x68]
   140003173:	mov    DWORD PTR [rbp+0x18],esi
   140003176:	mov    DWORD PTR [rbp+0x1c],eax
   140003179:	mov    DWORD PTR [rbp+0x8],r14d
   14000317d:	mov    QWORD PTR [rbp+0x0],r14
   140003181:	mov    rax,rbp
   140003184:	mov    QWORD PTR [rbp+0x10],r14
   140003188:	mov    QWORD PTR [rbp+0x28],r14
   14000318c:	mov    rbx,QWORD PTR [rsp+0x60]
   140003191:	mov    rbp,QWORD PTR [rsp+0x70]
   140003196:	mov    rsi,QWORD PTR [rsp+0x78]
   14000319b:	add    rsp,0x30
   14000319f:	pop    r15
   1400031a1:	pop    r14
   1400031a3:	pop    r13
   1400031a5:	pop    r12
   1400031a7:	pop    rdi
   1400031a8:	ret    
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400031b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400031b6:	push   rdi
   1400031b7:	sub    rsp,0x30
   1400031bb:	xor    ebx,ebx
   1400031bd:	lea    ecx,[rbx+0x1]
   1400031c0:	call   0x140003870
   1400031c5:	nop
   1400031c6:	xor    edi,edi
   1400031c8:	mov    DWORD PTR [rsp+0x20],edi
   1400031cc:	cmp    edi,DWORD PTR [rip+0x1266e]        # 0x140015840
   1400031d2:	jge    0x1400032c4
   1400031d8:	movsxd rsi,edi
   1400031db:	mov    rax,QWORD PTR [rip+0x1163e]        # 0x140014820
   1400031e2:	cmp    QWORD PTR [rax+rsi*8],0x0
   1400031e7:	je     0x14000324f
   1400031e9:	mov    rax,QWORD PTR [rax+rsi*8]
   1400031ed:	test   BYTE PTR [rax+0x18],0x83
   1400031f1:	jne    0x140003248
   1400031f3:	test   DWORD PTR [rax+0x18],0x8000
   1400031fa:	jne    0x140003248
   1400031fc:	lea    eax,[rdi-0x3]
   1400031ff:	cmp    eax,0x10
   140003202:	ja     0x140003214
   140003204:	lea    ecx,[rdi+0x10]
   140003207:	call   0x140003788
   14000320c:	test   eax,eax
   14000320e:	je     0x1400032c4
   140003214:	mov    rdx,QWORD PTR [rip+0x11605]        # 0x140014820
   14000321b:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14000321f:	mov    ecx,edi
   140003221:	call   0x140002e2c
   140003226:	mov    r11,QWORD PTR [rip+0x115f3]        # 0x140014820
   14000322d:	mov    rax,QWORD PTR [r11+rsi*8]
   140003231:	test   BYTE PTR [rax+0x18],0x83
   140003235:	je     0x140003243
   140003237:	mov    rdx,rax
   14000323a:	mov    ecx,edi
   14000323c:	call   0x140002eac
   140003241:	jmp    0x140003248
   140003243:	mov    rbx,rax
   140003246:	jmp    0x1400032c4
   140003248:	inc    edi
   14000324a:	jmp    0x1400031c8
   14000324f:	mov    ecx,0x58
   140003254:	call   0x1400067e0
   140003259:	mov    rcx,rax
   14000325c:	movsxd rdi,edi
   14000325f:	mov    rax,QWORD PTR [rip+0x115ba]        # 0x140014820
   140003266:	mov    QWORD PTR [rax+rdi*8],rcx
   14000326a:	test   rcx,rcx
   14000326d:	je     0x1400032c4
   14000326f:	add    rcx,0x30
   140003273:	mov    edx,0xfa0
   140003278:	call   QWORD PTR [rip+0xaeb2]        # 0x14000e130
   14000327e:	test   eax,eax
   140003280:	jne    0x1400032a0
   140003282:	mov    rcx,QWORD PTR [rip+0x11597]        # 0x140014820
   140003289:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14000328d:	call   0x140001eb4
   140003292:	mov    r11,QWORD PTR [rip+0x11587]        # 0x140014820
   140003299:	and    QWORD PTR [r11+rdi*8],0x0
   14000329e:	jmp    0x1400032c4
   1400032a0:	mov    rax,QWORD PTR [rip+0x11579]        # 0x140014820
   1400032a7:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400032ab:	add    rcx,0x30
   1400032af:	call   QWORD PTR [rip+0xae6b]        # 0x14000e120
   1400032b5:	mov    r11,QWORD PTR [rip+0x11564]        # 0x140014820
   1400032bc:	mov    rbx,QWORD PTR [r11+rdi*8]
   1400032c0:	and    DWORD PTR [rbx+0x18],0x0
   1400032c4:	test   rbx,rbx
   1400032c7:	je     0x1400032e6
   1400032c9:	and    DWORD PTR [rbx+0x18],0x8000
   1400032d0:	and    DWORD PTR [rbx+0x8],0x0
   1400032d4:	and    QWORD PTR [rbx+0x10],0x0
   1400032d9:	and    QWORD PTR [rbx],0x0
   1400032dd:	and    QWORD PTR [rbx+0x28],0x0
   1400032e2:	or     DWORD PTR [rbx+0x1c],0xffffffff
   1400032e6:	mov    ecx,0x1
   1400032eb:	call   0x140003770
   1400032f0:	mov    rax,rbx
   1400032f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032f8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400032fd:	add    rsp,0x30
   140003301:	pop    rdi
   140003302:	ret    
   140003303:	int3   
   140003304:	mov    QWORD PTR [rip+0x1069d],rcx        # 0x1400139a8
   14000330b:	ret    
   14000330c:	mov    QWORD PTR [rsp+0x10],rbx
   140003311:	mov    QWORD PTR [rsp+0x18],rsi
   140003316:	push   rbp
   140003317:	push   rdi
   140003318:	push   r12
   14000331a:	lea    rbp,[rsp-0x4f0]
   140003322:	sub    rsp,0x5f0
   140003329:	mov    rax,QWORD PTR [rip+0xecd8]        # 0x140012008
   140003330:	xor    rax,rsp
   140003333:	mov    QWORD PTR [rbp+0x4e0],rax
   14000333a:	mov    edi,r8d
   14000333d:	mov    esi,edx
   14000333f:	mov    ebx,ecx
   140003341:	cmp    ecx,0xffffffff
   140003344:	je     0x14000334b
   140003346:	call   0x1400067d8
   14000334b:	and    DWORD PTR [rsp+0x70],0x0
   140003350:	lea    rcx,[rsp+0x74]
   140003355:	xor    edx,edx
   140003357:	mov    r8d,0x94
   14000335d:	call   0x140004a30
   140003362:	lea    r11,[rsp+0x70]
   140003367:	lea    rax,[rbp+0x10]
   14000336b:	lea    rcx,[rbp+0x10]
   14000336f:	mov    QWORD PTR [rsp+0x48],r11
   140003374:	mov    QWORD PTR [rsp+0x50],rax
   140003379:	call   QWORD PTR [rip+0xad91]        # 0x14000e110
   14000337f:	mov    r12,QWORD PTR [rbp+0x108]
   140003386:	lea    rdx,[rsp+0x40]
   14000338b:	mov    rcx,r12
   14000338e:	xor    r8d,r8d
   140003391:	call   0x14000cd9e
   140003396:	test   rax,rax
   140003399:	je     0x1400033d2
   14000339b:	and    QWORD PTR [rsp+0x38],0x0
   1400033a1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400033a6:	lea    rcx,[rsp+0x60]
   1400033ab:	mov    QWORD PTR [rsp+0x30],rcx
   1400033b0:	lea    rcx,[rsp+0x58]
   1400033b5:	mov    r9,rax
   1400033b8:	mov    QWORD PTR [rsp+0x28],rcx
   1400033bd:	lea    rcx,[rbp+0x10]
   1400033c1:	mov    r8,r12
   1400033c4:	mov    QWORD PTR [rsp+0x20],rcx
   1400033c9:	xor    ecx,ecx
   1400033cb:	call   0x14000cd98
   1400033d0:	jmp    0x1400033ee
   1400033d2:	mov    rax,QWORD PTR [rbp+0x508]
   1400033d9:	mov    QWORD PTR [rbp+0x108],rax
   1400033e0:	lea    rax,[rbp+0x508]
   1400033e7:	mov    QWORD PTR [rbp+0xa8],rax
   1400033ee:	mov    rax,QWORD PTR [rbp+0x508]
   1400033f5:	mov    DWORD PTR [rsp+0x70],esi
   1400033f9:	mov    DWORD PTR [rsp+0x74],edi
   1400033fd:	mov    QWORD PTR [rbp-0x80],rax
   140003401:	call   QWORD PTR [rip+0xacf1]        # 0x14000e0f8
   140003407:	xor    ecx,ecx
   140003409:	mov    edi,eax
   14000340b:	call   QWORD PTR [rip+0xacdf]        # 0x14000e0f0
   140003411:	lea    rcx,[rsp+0x48]
   140003416:	call   QWORD PTR [rip+0xaccc]        # 0x14000e0e8
   14000341c:	test   eax,eax
   14000341e:	jne    0x140003430
   140003420:	test   edi,edi
   140003422:	jne    0x140003430
   140003424:	cmp    ebx,0xffffffff
   140003427:	je     0x140003430
   140003429:	mov    ecx,ebx
   14000342b:	call   0x1400067d8
   140003430:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140003437:	xor    rcx,rsp
   14000343a:	call   0x140001980
   14000343f:	lea    r11,[rsp+0x5f0]
   140003447:	mov    rbx,QWORD PTR [r11+0x28]
   14000344b:	mov    rsi,QWORD PTR [r11+0x30]
   14000344f:	mov    rsp,r11
   140003452:	pop    r12
   140003454:	pop    rdi
   140003455:	pop    rbp
   140003456:	ret    
   140003457:	int3   
   140003458:	sub    rsp,0x28
   14000345c:	mov    r8d,0x1
   140003462:	mov    edx,0xc0000417
   140003467:	lea    ecx,[r8+0x1]
   14000346b:	call   0x14000330c
   140003470:	call   QWORD PTR [rip+0xabb2]        # 0x14000e028
   140003476:	mov    edx,0xc0000417
   14000347b:	mov    rcx,rax
   14000347e:	add    rsp,0x28
   140003482:	rex.W jmp QWORD PTR [rip+0xac57]        # 0x14000e0e0
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	mov    QWORD PTR [rsp+0x8],rbx
   140003491:	mov    QWORD PTR [rsp+0x10],rbp
   140003496:	mov    QWORD PTR [rsp+0x18],rsi
   14000349b:	push   rdi
   14000349c:	sub    rsp,0x30
   1400034a0:	mov    rbp,rcx
   1400034a3:	mov    rcx,QWORD PTR [rip+0x104fe]        # 0x1400139a8
   1400034aa:	mov    ebx,r9d
   1400034ad:	mov    rdi,r8
   1400034b0:	mov    rsi,rdx
   1400034b3:	call   QWORD PTR [rip+0xabf7]        # 0x14000e0b0
   1400034b9:	mov    r9d,ebx
   1400034bc:	mov    r8,rdi
   1400034bf:	mov    rdx,rsi
   1400034c2:	mov    rcx,rbp
   1400034c5:	test   rax,rax
   1400034c8:	je     0x1400034eb
   1400034ca:	mov    r10,QWORD PTR [rsp+0x60]
   1400034cf:	mov    QWORD PTR [rsp+0x20],r10
   1400034d4:	call   rax
   1400034d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034db:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034e0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400034e5:	add    rsp,0x30
   1400034e9:	pop    rdi
   1400034ea:	ret    
   1400034eb:	mov    rax,QWORD PTR [rsp+0x60]
   1400034f0:	mov    QWORD PTR [rsp+0x20],rax
   1400034f5:	call   0x140003458
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	sub    rsp,0x38
   140003500:	and    QWORD PTR [rsp+0x20],0x0
   140003506:	xor    r9d,r9d
   140003509:	xor    r8d,r8d
   14000350c:	xor    edx,edx
   14000350e:	xor    ecx,ecx
   140003510:	call   0x14000348c
   140003515:	add    rsp,0x38
   140003519:	ret    
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	lea    r9,[rip+0xeebd]        # 0x1400123e0
   140003523:	xor    eax,eax
   140003525:	mov    rdx,r9
   140003528:	lea    r8d,[rax+0x8]
   14000352c:	cmp    ecx,DWORD PTR [rdx]
   14000352e:	je     0x14000355b
   140003530:	inc    eax
   140003532:	add    rdx,r8
   140003535:	cmp    eax,0x2d
   140003538:	jb     0x14000352c
   14000353a:	lea    eax,[rcx-0x13]
   14000353d:	cmp    eax,0x11
   140003540:	ja     0x140003548
   140003542:	mov    eax,0xd
   140003547:	ret    
   140003548:	add    ecx,0xffffff44
   14000354e:	mov    eax,0x16
   140003553:	cmp    ecx,0xe
   140003556:	cmovbe eax,r8d
   14000355a:	ret    
   14000355b:	cdqe   
   14000355d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140003562:	ret    
   140003563:	int3   
   140003564:	sub    rsp,0x28
   140003568:	call   0x140003c94
   14000356d:	test   rax,rax
   140003570:	jne    0x14000357b
   140003572:	lea    rax,[rip+0xefcf]        # 0x140012548
   140003579:	jmp    0x14000357f
   14000357b:	add    rax,0x10
   14000357f:	add    rsp,0x28
   140003583:	ret    
   140003584:	sub    rsp,0x28
   140003588:	call   0x140003c94
   14000358d:	test   rax,rax
   140003590:	jne    0x14000359b
   140003592:	lea    rax,[rip+0xefb3]        # 0x14001254c
   140003599:	jmp    0x14000359f
   14000359b:	add    rax,0x14
   14000359f:	add    rsp,0x28
   1400035a3:	ret    
   1400035a4:	rex push rbx
   1400035a6:	sub    rsp,0x20
   1400035aa:	mov    ebx,ecx
   1400035ac:	call   0x140003c94
   1400035b1:	test   rax,rax
   1400035b4:	jne    0x1400035bf
   1400035b6:	lea    rax,[rip+0xef8f]        # 0x14001254c
   1400035bd:	jmp    0x1400035c3
   1400035bf:	add    rax,0x14
   1400035c3:	mov    DWORD PTR [rax],ebx
   1400035c5:	call   0x140003c94
   1400035ca:	lea    r10,[rip+0xef77]        # 0x140012548
   1400035d1:	test   rax,rax
   1400035d4:	je     0x1400035da
   1400035d6:	lea    r10,[rax+0x10]
   1400035da:	mov    ecx,ebx
   1400035dc:	call   0x14000351c
   1400035e1:	mov    DWORD PTR [r10],eax
   1400035e4:	add    rsp,0x20
   1400035e8:	pop    rbx
   1400035e9:	ret    
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	int3   
   1400035f1:	int3   
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003600:	sub    rsp,0x4d8
   140003607:	xor    r8,r8
   14000360a:	xor    r9,r9
   14000360d:	mov    QWORD PTR [rsp+0x20],rsp
   140003612:	mov    QWORD PTR [rsp+0x28],r8
   140003617:	call   0x14000cda4
   14000361c:	add    rsp,0x4d8
   140003623:	ret    
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	nop    WORD PTR [rax+rax*1+0x0]
   140003630:	mov    QWORD PTR [rsp+0x8],rcx
   140003635:	mov    QWORD PTR [rsp+0x18],rdx
   14000363a:	mov    DWORD PTR [rsp+0x10],r8d
   14000363f:	mov    r9,0x19930520
   140003646:	jmp    0x140003650
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	xchg   ax,ax
   140003650:	ret    
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	nop    WORD PTR [rax+rax*1+0x0]
   140003660:	ret    
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	mov    QWORD PTR [rsp+0x8],rbx
   140003669:	mov    QWORD PTR [rsp+0x10],rsi
   14000366e:	mov    QWORD PTR [rsp+0x18],rdi
   140003673:	push   r12
   140003675:	sub    rsp,0x20
   140003679:	lea    r12,[rip+0xeed0]        # 0x140012550
   140003680:	xor    esi,esi
   140003682:	xor    ebx,ebx
   140003684:	mov    rdi,r12
   140003687:	cmp    DWORD PTR [rdi+0x8],0x1
   14000368b:	jne    0x1400036b3
   14000368d:	movsxd rax,esi
   140003690:	mov    edx,0xfa0
   140003695:	inc    esi
   140003697:	lea    rcx,[rax+rax*4]
   14000369b:	lea    rax,[rip+0x1030e]        # 0x1400139b0
   1400036a2:	lea    rcx,[rax+rcx*8]
   1400036a6:	mov    QWORD PTR [rdi],rcx
   1400036a9:	call   QWORD PTR [rip+0xaa81]        # 0x14000e130
   1400036af:	test   eax,eax
   1400036b1:	je     0x1400036d9
   1400036b3:	inc    ebx
   1400036b5:	add    rdi,0x10
   1400036b9:	cmp    ebx,0x24
   1400036bc:	jl     0x140003687
   1400036be:	mov    eax,0x1
   1400036c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400036cd:	mov    rdi,QWORD PTR [rsp+0x40]
   1400036d2:	add    rsp,0x20
   1400036d6:	pop    r12
   1400036d8:	ret    
   1400036d9:	movsxd rax,ebx
   1400036dc:	add    rax,rax
   1400036df:	and    QWORD PTR [r12+rax*8],0x0
   1400036e4:	xor    eax,eax
   1400036e6:	jmp    0x1400036c3
   1400036e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400036ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400036f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400036f7:	push   rdi
   1400036f8:	sub    rsp,0x20
   1400036fc:	mov    edi,0x24
   140003701:	lea    rbx,[rip+0xee48]        # 0x140012550
   140003708:	mov    esi,edi
   14000370a:	mov    rbp,QWORD PTR [rbx]
   14000370d:	test   rbp,rbp
   140003710:	je     0x14000372d
   140003712:	cmp    DWORD PTR [rbx+0x8],0x1
   140003716:	je     0x14000372d
   140003718:	mov    rcx,rbp
   14000371b:	call   QWORD PTR [rip+0xaa1f]        # 0x14000e140
   140003721:	mov    rcx,rbp
   140003724:	call   0x140001eb4
   140003729:	and    QWORD PTR [rbx],0x0
   14000372d:	add    rbx,0x10
   140003731:	dec    rsi
   140003734:	jne    0x14000370a
   140003736:	lea    rbx,[rip+0xee1b]        # 0x140012558
   14000373d:	mov    rcx,QWORD PTR [rbx-0x8]
   140003741:	test   rcx,rcx
   140003744:	je     0x140003751
   140003746:	cmp    DWORD PTR [rbx],0x1
   140003749:	jne    0x140003751
   14000374b:	call   QWORD PTR [rip+0xa9ef]        # 0x14000e140
   140003751:	add    rbx,0x10
   140003755:	dec    rdi
   140003758:	jne    0x14000373d
   14000375a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000375f:	mov    rbp,QWORD PTR [rsp+0x38]
   140003764:	mov    rsi,QWORD PTR [rsp+0x40]
   140003769:	add    rsp,0x20
   14000376d:	pop    rdi
   14000376e:	ret    
   14000376f:	int3   
   140003770:	movsxd rcx,ecx
   140003773:	lea    rax,[rip+0xedd6]        # 0x140012550
   14000377a:	add    rcx,rcx
   14000377d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140003781:	rex.W jmp QWORD PTR [rip+0xa9a0]        # 0x14000e128
   140003788:	mov    QWORD PTR [rsp+0x8],rbx
   14000378d:	mov    QWORD PTR [rsp+0x10],rsi
   140003792:	mov    QWORD PTR [rsp+0x18],rdi
   140003797:	push   r13
   140003799:	sub    rsp,0x20
   14000379d:	movsxd rbx,ecx
   1400037a0:	mov    esi,0x1
   1400037a5:	cmp    QWORD PTR [rip+0x10aab],0x0        # 0x140014258
   1400037ad:	jne    0x1400037c6
   1400037af:	call   0x140004460
   1400037b4:	lea    ecx,[rsi+0x1d]
   1400037b7:	call   0x140004200
   1400037bc:	mov    ecx,0xff
   1400037c1:	call   0x140001b30
   1400037c6:	mov    rdi,rbx
   1400037c9:	add    rdi,rdi
   1400037cc:	lea    r13,[rip+0xed7d]        # 0x140012550
   1400037d3:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400037d9:	je     0x1400037df
   1400037db:	mov    eax,esi
   1400037dd:	jmp    0x140003858
   1400037df:	mov    ecx,0x28
   1400037e4:	call   0x1400067e0
   1400037e9:	mov    rbx,rax
   1400037ec:	test   rax,rax
   1400037ef:	jne    0x140003800
   1400037f1:	call   0x140003564
   1400037f6:	mov    DWORD PTR [rax],0xc
   1400037fc:	xor    eax,eax
   1400037fe:	jmp    0x140003858
   140003800:	mov    ecx,0xa
   140003805:	call   0x140003870
   14000380a:	nop
   14000380b:	mov    rcx,rbx
   14000380e:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140003814:	jne    0x140003843
   140003816:	mov    edx,0xfa0
   14000381b:	call   QWORD PTR [rip+0xa90f]        # 0x14000e130
   140003821:	test   eax,eax
   140003823:	jne    0x14000383c
   140003825:	mov    rcx,rbx
   140003828:	call   0x140001eb4
   14000382d:	call   0x140003564
   140003832:	mov    DWORD PTR [rax],0xc
   140003838:	xor    esi,esi
   14000383a:	jmp    0x140003849
   14000383c:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140003841:	jmp    0x140003849
   140003843:	call   0x140001eb4
   140003848:	nop
   140003849:	mov    rcx,QWORD PTR [rip+0xeda0]        # 0x1400125f0
   140003850:	call   QWORD PTR [rip+0xa8d2]        # 0x14000e128
   140003856:	jmp    0x1400037db
   140003858:	mov    rbx,QWORD PTR [rsp+0x30]
   14000385d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003862:	mov    rdi,QWORD PTR [rsp+0x40]
   140003867:	add    rsp,0x20
   14000386b:	pop    r13
   14000386d:	ret    
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x8],rbx
   140003875:	push   rdi
   140003876:	sub    rsp,0x20
   14000387a:	movsxd rbx,ecx
   14000387d:	lea    rdi,[rip+0xeccc]        # 0x140012550
   140003884:	add    rbx,rbx
   140003887:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000388c:	jne    0x14000389f
   14000388e:	call   0x140003788
   140003893:	test   eax,eax
   140003895:	jne    0x14000389f
   140003897:	lea    ecx,[rax+0x11]
   14000389a:	call   0x140001e8c
   14000389f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400038a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038a8:	add    rsp,0x20
   1400038ac:	pop    rdi
   1400038ad:	rex.W jmp QWORD PTR [rip+0xa86c]        # 0x14000e120
   1400038b4:	sub    rsp,0x28
   1400038b8:	call   0x140003d18
   1400038bd:	mov    rcx,QWORD PTR [rax+0xd0]
   1400038c4:	test   rcx,rcx
   1400038c7:	je     0x1400038cd
   1400038c9:	call   rcx
   1400038cb:	jmp    0x1400038cd
   1400038cd:	call   0x140007528
   1400038d2:	add    rsp,0x28
   1400038d6:	ret    
   1400038d7:	int3   
   1400038d8:	sub    rsp,0x28
   1400038dc:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x1400038b4
   1400038e3:	call   QWORD PTR [rip+0xa84f]        # 0x14000e138
   1400038e9:	mov    QWORD PTR [rip+0x102f0],rax        # 0x140013be0
   1400038f0:	add    rsp,0x28
   1400038f4:	ret    
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	mov    QWORD PTR [rip+0x102e9],rcx        # 0x140013be8
   1400038ff:	mov    QWORD PTR [rip+0x102ea],rcx        # 0x140013bf0
   140003906:	mov    QWORD PTR [rip+0x102eb],rcx        # 0x140013bf8
   14000390d:	mov    QWORD PTR [rip+0x102ec],rcx        # 0x140013c00
   140003914:	ret    
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	mov    rcx,QWORD PTR [rip+0x102d9]        # 0x140013bf8
   14000391f:	rex.W jmp QWORD PTR [rip+0xa78a]        # 0x14000e0b0
   140003926:	int3   
   140003927:	int3   
   140003928:	mov    QWORD PTR [rsp+0x10],rbx
   14000392d:	mov    QWORD PTR [rsp+0x18],rsi
   140003932:	push   rdi
   140003933:	push   r12
   140003935:	push   r13
   140003937:	push   r14
   140003939:	push   r15
   14000393b:	sub    rsp,0x30
   14000393f:	mov    ebx,ecx
   140003941:	xor    edi,edi
   140003943:	mov    DWORD PTR [rsp+0x60],edi
   140003947:	xor    esi,esi
   140003949:	mov    edx,ecx
   14000394b:	sub    edx,0x2
   14000394e:	je     0x140003a19
   140003954:	sub    edx,0x2
   140003957:	je     0x1400039bb
   140003959:	sub    edx,0x2
   14000395c:	je     0x1400039ab
   14000395e:	sub    edx,0x2
   140003961:	je     0x1400039bb
   140003963:	sub    edx,0x3
   140003966:	je     0x1400039bb
   140003968:	sub    edx,0x4
   14000396b:	je     0x14000399b
   14000396d:	sub    edx,0x6
   140003970:	je     0x140003988
   140003972:	dec    edx
   140003974:	je     0x1400039ab
   140003976:	call   0x140003564
   14000397b:	mov    DWORD PTR [rax],0x16
   140003981:	call   0x1400034fc
   140003986:	jmp    0x1400039c8
   140003988:	lea    r12,[rip+0x10261]        # 0x140013bf0
   14000398f:	mov    rcx,QWORD PTR [rip+0x1025a]        # 0x140013bf0
   140003996:	jmp    0x140003a27
   14000399b:	lea    r12,[rip+0x1025e]        # 0x140013c00
   1400039a2:	mov    rcx,QWORD PTR [rip+0x10257]        # 0x140013c00
   1400039a9:	jmp    0x140003a27
   1400039ab:	lea    r12,[rip+0x10246]        # 0x140013bf8
   1400039b2:	mov    rcx,QWORD PTR [rip+0x1023f]        # 0x140013bf8
   1400039b9:	jmp    0x140003a27
   1400039bb:	call   0x140003c94
   1400039c0:	mov    rsi,rax
   1400039c3:	test   rax,rax
   1400039c6:	jne    0x1400039d0
   1400039c8:	or     eax,0xffffffff
   1400039cb:	jmp    0x140003b42
   1400039d0:	mov    rdx,QWORD PTR [rax+0xa0]
   1400039d7:	mov    rcx,rdx
   1400039da:	movsxd r8,DWORD PTR [rip+0xbd9b]        # 0x14000f77c
   1400039e1:	cmp    DWORD PTR [rcx+0x4],ebx
   1400039e4:	je     0x1400039f9
   1400039e6:	add    rcx,0x10
   1400039ea:	mov    rax,r8
   1400039ed:	shl    rax,0x4
   1400039f1:	add    rax,rdx
   1400039f4:	cmp    rcx,rax
   1400039f7:	jb     0x1400039e1
   1400039f9:	mov    rax,r8
   1400039fc:	shl    rax,0x4
   140003a00:	add    rax,rdx
   140003a03:	cmp    rcx,rax
   140003a06:	jae    0x140003a0d
   140003a08:	cmp    DWORD PTR [rcx+0x4],ebx
   140003a0b:	je     0x140003a0f
   140003a0d:	xor    ecx,ecx
   140003a0f:	lea    r12,[rcx+0x8]
   140003a13:	mov    r13,QWORD PTR [r12]
   140003a17:	jmp    0x140003a39
   140003a19:	lea    r12,[rip+0x101c8]        # 0x140013be8
   140003a20:	mov    rcx,QWORD PTR [rip+0x101c1]        # 0x140013be8
   140003a27:	mov    edi,0x1
   140003a2c:	mov    DWORD PTR [rsp+0x60],edi
   140003a30:	call   QWORD PTR [rip+0xa67a]        # 0x14000e0b0
   140003a36:	mov    r13,rax
   140003a39:	cmp    r13,0x1
   140003a3d:	jne    0x140003a46
   140003a3f:	xor    eax,eax
   140003a41:	jmp    0x140003b42
   140003a46:	test   r13,r13
   140003a49:	jne    0x140003a55
   140003a4b:	lea    ecx,[r13+0x3]
   140003a4f:	call   0x140001e60
   140003a54:	int3   
   140003a55:	test   edi,edi
   140003a57:	je     0x140003a61
   140003a59:	xor    ecx,ecx
   140003a5b:	call   0x140003870
   140003a60:	nop
   140003a61:	cmp    ebx,0x8
   140003a64:	je     0x140003a77
   140003a66:	cmp    ebx,0xb
   140003a69:	je     0x140003a77
   140003a6b:	cmp    ebx,0x4
   140003a6e:	je     0x140003a77
   140003a70:	mov    r15,QWORD PTR [rsp+0x28]
   140003a75:	jmp    0x140003aa3
   140003a77:	mov    r15,QWORD PTR [rsi+0xa8]
   140003a7e:	mov    QWORD PTR [rsp+0x28],r15
   140003a83:	and    QWORD PTR [rsi+0xa8],0x0
   140003a8b:	cmp    ebx,0x8
   140003a8e:	jne    0x140003aa3
   140003a90:	mov    r14d,DWORD PTR [rsi+0xb0]
   140003a97:	mov    DWORD PTR [rsi+0xb0],0x8c
   140003aa1:	jmp    0x140003aa8
   140003aa3:	mov    r14d,DWORD PTR [rsp+0x60]
   140003aa8:	cmp    ebx,0x8
   140003aab:	jne    0x140003ae6
   140003aad:	mov    ecx,DWORD PTR [rip+0xbcbd]        # 0x14000f770
   140003ab3:	mov    edx,ecx
   140003ab5:	mov    DWORD PTR [rsp+0x20],ecx
   140003ab9:	mov    eax,DWORD PTR [rip+0xbcb5]        # 0x14000f774
   140003abf:	add    ecx,eax
   140003ac1:	cmp    edx,ecx
   140003ac3:	jge    0x140003aef
   140003ac5:	movsxd rcx,edx
   140003ac8:	add    rcx,rcx
   140003acb:	mov    rax,QWORD PTR [rsi+0xa0]
   140003ad2:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140003ad8:	inc    edx
   140003ada:	mov    DWORD PTR [rsp+0x20],edx
   140003ade:	mov    ecx,DWORD PTR [rip+0xbc8c]        # 0x14000f770
   140003ae4:	jmp    0x140003ab9
   140003ae6:	call   0x140003ba8
   140003aeb:	mov    QWORD PTR [r12],rax
   140003aef:	test   edi,edi
   140003af1:	je     0x140003afa
   140003af3:	xor    ecx,ecx
   140003af5:	call   0x140003770
   140003afa:	mov    edi,0x8
   140003aff:	cmp    ebx,edi
   140003b01:	jne    0x140003b10
   140003b03:	mov    edx,DWORD PTR [rsi+0xb0]
   140003b09:	mov    ecx,edi
   140003b0b:	call   r13
   140003b0e:	jmp    0x140003b15
   140003b10:	mov    ecx,ebx
   140003b12:	call   r13
   140003b15:	cmp    ebx,edi
   140003b17:	je     0x140003b27
   140003b19:	cmp    ebx,0xb
   140003b1c:	je     0x140003b27
   140003b1e:	cmp    ebx,0x4
   140003b21:	jne    0x140003a3f
   140003b27:	mov    QWORD PTR [rsi+0xa8],r15
   140003b2e:	cmp    ebx,edi
   140003b30:	jne    0x140003a3f
   140003b36:	mov    DWORD PTR [rsi+0xb0],r14d
   140003b3d:	jmp    0x140003a3f
   140003b42:	mov    rbx,QWORD PTR [rsp+0x68]
   140003b47:	mov    rsi,QWORD PTR [rsp+0x70]
   140003b4c:	add    rsp,0x30
   140003b50:	pop    r15
   140003b52:	pop    r14
   140003b54:	pop    r13
   140003b56:	pop    r12
   140003b58:	pop    rdi
   140003b59:	ret    
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c10
   140003b63:	ret    
   140003b64:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c18
   140003b6b:	ret    
   140003b6c:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c20
   140003b73:	ret    
   140003b74:	rex push rbx
   140003b76:	sub    rsp,0x20
   140003b7a:	mov    rbx,rcx
   140003b7d:	mov    rcx,QWORD PTR [rip+0x1009c]        # 0x140013c20
   140003b84:	call   QWORD PTR [rip+0xa526]        # 0x14000e0b0
   140003b8a:	test   rax,rax
   140003b8d:	je     0x140003b9f
   140003b8f:	mov    rcx,rbx
   140003b92:	call   rax
   140003b94:	test   eax,eax
   140003b96:	je     0x140003b9f
   140003b98:	mov    eax,0x1
   140003b9d:	jmp    0x140003ba1
   140003b9f:	xor    eax,eax
   140003ba1:	add    rsp,0x20
   140003ba5:	pop    rbx
   140003ba6:	ret    
   140003ba7:	int3   
   140003ba8:	xor    ecx,ecx
   140003baa:	rex.W jmp QWORD PTR [rip+0xa587]        # 0x14000e138
   140003bb1:	int3   
   140003bb2:	int3   
   140003bb3:	int3   
   140003bb4:	sub    rsp,0x28
   140003bb8:	mov    ecx,DWORD PTR [rip+0xebd2]        # 0x140012790
   140003bbe:	cmp    ecx,0xffffffff
   140003bc1:	je     0x140003bd0
   140003bc3:	call   QWORD PTR [rip+0xa597]        # 0x14000e160
   140003bc9:	or     DWORD PTR [rip+0xebc0],0xffffffff        # 0x140012790
   140003bd0:	add    rsp,0x28
   140003bd4:	jmp    0x1400036e8
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140003be1:	push   rdi
   140003be2:	sub    rsp,0x20
   140003be6:	mov    rdi,rdx
   140003be9:	mov    rbx,rcx
   140003bec:	lea    rax,[rip+0xbabd]        # 0x14000f6b0
   140003bf3:	mov    QWORD PTR [rcx+0xa0],rax
   140003bfa:	and    DWORD PTR [rcx+0x10],0x0
   140003bfe:	mov    DWORD PTR [rcx+0x1c],0x1
   140003c05:	mov    DWORD PTR [rcx+0xc8],0x1
   140003c0f:	mov    BYTE PTR [rcx+0x174],0x43
   140003c16:	mov    BYTE PTR [rcx+0x1f7],0x43
   140003c1d:	lea    rax,[rip+0xf17c]        # 0x140012da0
   140003c24:	mov    QWORD PTR [rcx+0xb8],rax
   140003c2b:	mov    ecx,0xd
   140003c30:	call   0x140003870
   140003c35:	nop
   140003c36:	mov    rax,QWORD PTR [rbx+0xb8]
   140003c3d:	lock inc DWORD PTR [rax]
   140003c40:	mov    ecx,0xd
   140003c45:	call   0x140003770
   140003c4a:	mov    ecx,0xc
   140003c4f:	call   0x140003870
   140003c54:	nop
   140003c55:	mov    QWORD PTR [rbx+0xc0],rdi
   140003c5c:	test   rdi,rdi
   140003c5f:	jne    0x140003c6f
   140003c61:	mov    rax,QWORD PTR [rip+0xf128]        # 0x140012d90
   140003c68:	mov    QWORD PTR [rbx+0xc0],rax
   140003c6f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140003c76:	call   0x1400078b4
   140003c7b:	nop
   140003c7c:	mov    ecx,0xc
   140003c81:	call   0x140003770
   140003c86:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c8b:	add    rsp,0x20
   140003c8f:	pop    rdi
   140003c90:	ret    
   140003c91:	int3   
   140003c92:	int3   
   140003c93:	int3   
   140003c94:	mov    QWORD PTR [rsp+0x8],rbx
   140003c99:	push   rdi
   140003c9a:	sub    rsp,0x20
   140003c9e:	call   QWORD PTR [rip+0xa3d4]        # 0x14000e078
   140003ca4:	mov    ecx,DWORD PTR [rip+0xeae6]        # 0x140012790
   140003caa:	mov    edi,eax
   140003cac:	call   QWORD PTR [rip+0xa49e]        # 0x14000e150
   140003cb2:	mov    rbx,rax
   140003cb5:	test   rax,rax
   140003cb8:	jne    0x140003d02
   140003cba:	lea    ecx,[rax+0x1]
   140003cbd:	mov    edx,0x2c8
   140003cc2:	call   0x140006860
   140003cc7:	mov    rbx,rax
   140003cca:	test   rax,rax
   140003ccd:	je     0x140003d02
   140003ccf:	mov    ecx,DWORD PTR [rip+0xeabb]        # 0x140012790
   140003cd5:	mov    rdx,rax
   140003cd8:	call   QWORD PTR [rip+0xa47a]        # 0x14000e158
   140003cde:	mov    rcx,rbx
   140003ce1:	test   eax,eax
   140003ce3:	je     0x140003cfb
   140003ce5:	xor    edx,edx
   140003ce7:	call   0x140003bdc
   140003cec:	call   QWORD PTR [rip+0xa47e]        # 0x14000e170
   140003cf2:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003cf7:	mov    DWORD PTR [rbx],eax
   140003cf9:	jmp    0x140003d02
   140003cfb:	call   0x140001eb4
   140003d00:	xor    ebx,ebx
   140003d02:	mov    ecx,edi
   140003d04:	call   QWORD PTR [rip+0xa45e]        # 0x14000e168
   140003d0a:	mov    rax,rbx
   140003d0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d12:	add    rsp,0x20
   140003d16:	pop    rdi
   140003d17:	ret    
   140003d18:	rex push rbx
   140003d1a:	sub    rsp,0x20
   140003d1e:	call   0x140003c94
   140003d23:	mov    rbx,rax
   140003d26:	test   rax,rax
   140003d29:	jne    0x140003d33
   140003d2b:	lea    ecx,[rax+0x10]
   140003d2e:	call   0x140001e8c
   140003d33:	mov    rax,rbx
   140003d36:	add    rsp,0x20
   140003d3a:	pop    rbx
   140003d3b:	ret    
   140003d3c:	test   rcx,rcx
   140003d3f:	je     0x140003e6e
   140003d45:	mov    QWORD PTR [rsp+0x10],rbx
   140003d4a:	push   rdi
   140003d4b:	sub    rsp,0x20
   140003d4f:	mov    rbx,rcx
   140003d52:	mov    rcx,QWORD PTR [rcx+0x38]
   140003d56:	test   rcx,rcx
   140003d59:	je     0x140003d60
   140003d5b:	call   0x140001eb4
   140003d60:	mov    rcx,QWORD PTR [rbx+0x48]
   140003d64:	test   rcx,rcx
   140003d67:	je     0x140003d6e
   140003d69:	call   0x140001eb4
   140003d6e:	mov    rcx,QWORD PTR [rbx+0x58]
   140003d72:	test   rcx,rcx
   140003d75:	je     0x140003d7c
   140003d77:	call   0x140001eb4
   140003d7c:	mov    rcx,QWORD PTR [rbx+0x68]
   140003d80:	test   rcx,rcx
   140003d83:	je     0x140003d8a
   140003d85:	call   0x140001eb4
   140003d8a:	mov    rcx,QWORD PTR [rbx+0x70]
   140003d8e:	test   rcx,rcx
   140003d91:	je     0x140003d98
   140003d93:	call   0x140001eb4
   140003d98:	mov    rcx,QWORD PTR [rbx+0x78]
   140003d9c:	test   rcx,rcx
   140003d9f:	je     0x140003da6
   140003da1:	call   0x140001eb4
   140003da6:	mov    rcx,QWORD PTR [rbx+0x80]
   140003dad:	test   rcx,rcx
   140003db0:	je     0x140003db7
   140003db2:	call   0x140001eb4
   140003db7:	mov    rcx,QWORD PTR [rbx+0xa0]
   140003dbe:	lea    rax,[rip+0xb8eb]        # 0x14000f6b0
   140003dc5:	cmp    rcx,rax
   140003dc8:	je     0x140003dcf
   140003dca:	call   0x140001eb4
   140003dcf:	mov    edi,0xd
   140003dd4:	mov    ecx,edi
   140003dd6:	call   0x140003870
   140003ddb:	nop
   140003ddc:	mov    rcx,QWORD PTR [rbx+0xb8]
   140003de3:	mov    QWORD PTR [rsp+0x30],rcx
   140003de8:	test   rcx,rcx
   140003deb:	je     0x140003e09
   140003ded:	lock dec DWORD PTR [rcx]
   140003df0:	jne    0x140003e09
   140003df2:	lea    rax,[rip+0xefa7]        # 0x140012da0
   140003df9:	mov    rcx,QWORD PTR [rsp+0x30]
   140003dfe:	cmp    rcx,rax
   140003e01:	je     0x140003e09
   140003e03:	call   0x140001eb4
   140003e08:	nop
   140003e09:	mov    ecx,edi
   140003e0b:	call   0x140003770
   140003e10:	mov    ecx,0xc
   140003e15:	call   0x140003870
   140003e1a:	nop
   140003e1b:	mov    rdi,QWORD PTR [rbx+0xc0]
   140003e22:	test   rdi,rdi
   140003e25:	je     0x140003e52
   140003e27:	mov    rcx,rdi
   140003e2a:	call   0x140007940
   140003e2f:	cmp    rdi,QWORD PTR [rip+0xef5a]        # 0x140012d90
   140003e36:	je     0x140003e52
   140003e38:	lea    rax,[rip+0xedf1]        # 0x140012c30
   140003e3f:	cmp    rdi,rax
   140003e42:	je     0x140003e52
   140003e44:	cmp    DWORD PTR [rdi],0x0
   140003e47:	jne    0x140003e52
   140003e49:	mov    rcx,rdi
   140003e4c:	call   0x1400079e4
   140003e51:	nop
   140003e52:	mov    ecx,0xc
   140003e57:	call   0x140003770
   140003e5c:	mov    rcx,rbx
   140003e5f:	call   0x140001eb4
   140003e64:	mov    rbx,QWORD PTR [rsp+0x38]
   140003e69:	add    rsp,0x20
   140003e6d:	pop    rdi
   140003e6e:	ret    
   140003e6f:	int3   
   140003e70:	rex push rbx
   140003e72:	sub    rsp,0x20
   140003e76:	call   0x140001b60
   140003e7b:	call   0x140003664
   140003e80:	test   eax,eax
   140003e82:	je     0x140003ee4
   140003e84:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x140003d3c
   140003e8b:	call   QWORD PTR [rip+0xa2e7]        # 0x14000e178
   140003e91:	mov    DWORD PTR [rip+0xe8f9],eax        # 0x140012790
   140003e97:	cmp    eax,0xffffffff
   140003e9a:	je     0x140003ee4
   140003e9c:	mov    edx,0x2c8
   140003ea1:	mov    ecx,0x1
   140003ea6:	call   0x140006860
   140003eab:	mov    rbx,rax
   140003eae:	test   rax,rax
   140003eb1:	je     0x140003ee4
   140003eb3:	mov    ecx,DWORD PTR [rip+0xe8d7]        # 0x140012790
   140003eb9:	mov    rdx,rax
   140003ebc:	call   QWORD PTR [rip+0xa296]        # 0x14000e158
   140003ec2:	test   eax,eax
   140003ec4:	je     0x140003ee4
   140003ec6:	xor    edx,edx
   140003ec8:	mov    rcx,rbx
   140003ecb:	call   0x140003bdc
   140003ed0:	call   QWORD PTR [rip+0xa29a]        # 0x14000e170
   140003ed6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003edb:	mov    DWORD PTR [rbx],eax
   140003edd:	mov    eax,0x1
   140003ee2:	jmp    0x140003eeb
   140003ee4:	call   0x140003bb4
   140003ee9:	xor    eax,eax
   140003eeb:	add    rsp,0x20
   140003eef:	pop    rbx
   140003ef0:	ret    
   140003ef1:	int3   
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	rex push rbx
   140003ef6:	sub    rsp,0x20
   140003efa:	mov    edx,0x8
   140003eff:	lea    ecx,[rdx+0x18]
   140003f02:	call   0x140006860
   140003f07:	mov    rcx,rax
   140003f0a:	mov    rbx,rax
   140003f0d:	call   QWORD PTR [rip+0xa225]        # 0x14000e138
   140003f13:	mov    QWORD PTR [rip+0x1194e],rax        # 0x140015868
   140003f1a:	mov    QWORD PTR [rip+0x1193f],rax        # 0x140015860
   140003f21:	test   rbx,rbx
   140003f24:	jne    0x140003f2b
   140003f26:	lea    eax,[rbx+0x18]
   140003f29:	jmp    0x140003f31
   140003f2b:	and    QWORD PTR [rbx],0x0
   140003f2f:	xor    eax,eax
   140003f31:	add    rsp,0x20
   140003f35:	pop    rbx
   140003f36:	ret    
   140003f37:	int3   
   140003f38:	mov    QWORD PTR [rsp+0x8],rbx
   140003f3d:	mov    QWORD PTR [rsp+0x10],rsi
   140003f42:	mov    QWORD PTR [rsp+0x18],rdi
   140003f47:	push   r12
   140003f49:	push   r13
   140003f4b:	push   r14
   140003f4d:	sub    rsp,0x20
   140003f51:	mov    r14,rcx
   140003f54:	call   0x140001b48
   140003f59:	nop
   140003f5a:	mov    rcx,QWORD PTR [rip+0x11907]        # 0x140015868
   140003f61:	call   QWORD PTR [rip+0xa149]        # 0x14000e0b0
   140003f67:	mov    r12,rax
   140003f6a:	mov    rcx,QWORD PTR [rip+0x118ef]        # 0x140015860
   140003f71:	call   QWORD PTR [rip+0xa139]        # 0x14000e0b0
   140003f77:	mov    rbx,rax
   140003f7a:	cmp    rax,r12
   140003f7d:	jb     0x14000401e
   140003f83:	mov    rdi,rax
   140003f86:	sub    rdi,r12
   140003f89:	lea    r13,[rdi+0x8]
   140003f8d:	cmp    r13,0x8
   140003f91:	jb     0x14000401e
   140003f97:	mov    rcx,r12
   140003f9a:	call   0x140008478
   140003f9f:	mov    rsi,rax
   140003fa2:	cmp    rax,r13
   140003fa5:	jae    0x140003ffc
   140003fa7:	mov    edx,0x1000
   140003fac:	cmp    rax,rdx
   140003faf:	cmovb  rdx,rax
   140003fb3:	add    rdx,rax
   140003fb6:	cmp    rdx,rax
   140003fb9:	jb     0x140003fcc
   140003fbb:	mov    rcx,r12
   140003fbe:	call   0x1400068e4
   140003fc3:	xor    ebx,ebx
   140003fc5:	test   rax,rax
   140003fc8:	jne    0x140003fe4
   140003fca:	jmp    0x140003fce
   140003fcc:	xor    ebx,ebx
   140003fce:	lea    rdx,[rsi+0x20]
   140003fd2:	cmp    rdx,rsi
   140003fd5:	jb     0x140004020
   140003fd7:	mov    rcx,r12
   140003fda:	call   0x1400068e4
   140003fdf:	test   rax,rax
   140003fe2:	je     0x140004020
   140003fe4:	sar    rdi,0x3
   140003fe8:	lea    rbx,[rax+rdi*8]
   140003fec:	mov    rcx,rax
   140003fef:	call   QWORD PTR [rip+0xa143]        # 0x14000e138
   140003ff5:	mov    QWORD PTR [rip+0x1186c],rax        # 0x140015868
   140003ffc:	mov    rcx,r14
   140003fff:	call   QWORD PTR [rip+0xa133]        # 0x14000e138
   140004005:	mov    QWORD PTR [rbx],rax
   140004008:	lea    rcx,[rbx+0x8]
   14000400c:	call   QWORD PTR [rip+0xa126]        # 0x14000e138
   140004012:	mov    QWORD PTR [rip+0x11847],rax        # 0x140015860
   140004019:	mov    rbx,r14
   14000401c:	jmp    0x140004020
   14000401e:	xor    ebx,ebx
   140004020:	call   0x140001b54
   140004025:	mov    rax,rbx
   140004028:	mov    rbx,QWORD PTR [rsp+0x40]
   14000402d:	mov    rsi,QWORD PTR [rsp+0x48]
   140004032:	mov    rdi,QWORD PTR [rsp+0x50]
   140004037:	add    rsp,0x20
   14000403b:	pop    r14
   14000403d:	pop    r13
   14000403f:	pop    r12
   140004041:	ret    
   140004042:	int3   
   140004043:	int3   
   140004044:	sub    rsp,0x28
   140004048:	call   0x140003f38
   14000404d:	neg    rax
   140004050:	sbb    eax,eax
   140004052:	neg    eax
   140004054:	dec    eax
   140004056:	add    rsp,0x28
   14000405a:	ret    
   14000405b:	int3   
   14000405c:	mov    QWORD PTR [rsp+0x8],rbx
   140004061:	push   rdi
   140004062:	sub    rsp,0x20
   140004066:	lea    rbx,[rip+0xc17b]        # 0x1400101e8
   14000406d:	lea    rdi,[rip+0xc174]        # 0x1400101e8
   140004074:	jmp    0x140004084
   140004076:	mov    rax,QWORD PTR [rbx]
   140004079:	test   rax,rax
   14000407c:	je     0x140004080
   14000407e:	call   rax
   140004080:	add    rbx,0x8
   140004084:	cmp    rbx,rdi
   140004087:	jb     0x140004076
   140004089:	mov    rbx,QWORD PTR [rsp+0x30]
   14000408e:	add    rsp,0x20
   140004092:	pop    rdi
   140004093:	ret    
   140004094:	mov    QWORD PTR [rsp+0x8],rbx
   140004099:	push   rdi
   14000409a:	sub    rsp,0x20
   14000409e:	lea    rbx,[rip+0xc153]        # 0x1400101f8
   1400040a5:	lea    rdi,[rip+0xc14c]        # 0x1400101f8
   1400040ac:	jmp    0x1400040bc
   1400040ae:	mov    rax,QWORD PTR [rbx]
   1400040b1:	test   rax,rax
   1400040b4:	je     0x1400040b8
   1400040b6:	call   rax
   1400040b8:	add    rbx,0x8
   1400040bc:	cmp    rbx,rdi
   1400040bf:	jb     0x1400040ae
   1400040c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040c6:	add    rsp,0x20
   1400040ca:	pop    rdi
   1400040cb:	ret    
   1400040cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400040d1:	push   rdi
   1400040d2:	sub    rsp,0x20
   1400040d6:	lea    rbx,[rip+0xe6c3]        # 0x1400127a0
   1400040dd:	mov    edi,0xa
   1400040e2:	mov    rcx,QWORD PTR [rbx]
   1400040e5:	call   QWORD PTR [rip+0xa04d]        # 0x14000e138
   1400040eb:	mov    QWORD PTR [rbx],rax
   1400040ee:	add    rbx,0x8
   1400040f2:	dec    rdi
   1400040f5:	jne    0x1400040e2
   1400040f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040fc:	add    rsp,0x20
   140004100:	pop    rdi
   140004101:	ret    
   140004102:	int3   
   140004103:	int3   
   140004104:	int3   
   140004105:	int3   
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	mov    rax,rcx
   140004113:	mov    ecx,0x5a4d
   140004118:	cmp    WORD PTR [rax],cx
   14000411b:	je     0x140004120
   14000411d:	xor    eax,eax
   14000411f:	ret    
   140004120:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004124:	add    rcx,rax
   140004127:	xor    eax,eax
   140004129:	cmp    DWORD PTR [rcx],0x4550
   14000412f:	jne    0x14000413d
   140004131:	mov    edx,0x20b
   140004136:	cmp    WORD PTR [rcx+0x18],dx
   14000413a:	sete   al
   14000413d:	repz ret 
   14000413f:	int3   
   140004140:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004144:	xor    r9d,r9d
   140004147:	mov    r10,rdx
   14000414a:	add    r8,rcx
   14000414d:	movzx  eax,WORD PTR [r8+0x14]
   140004152:	movzx  r11d,WORD PTR [r8+0x6]
   140004157:	lea    rcx,[rax+r8*1+0x18]
   14000415c:	test   r11d,r11d
   14000415f:	je     0x14000417f
   140004161:	mov    edx,DWORD PTR [rcx+0xc]
   140004164:	cmp    r10,rdx
   140004167:	jb     0x140004173
   140004169:	mov    eax,DWORD PTR [rcx+0x8]
   14000416c:	add    eax,edx
   14000416e:	cmp    r10,rax
   140004171:	jb     0x140004182
   140004173:	inc    r9d
   140004176:	add    rcx,0x28
   14000417a:	cmp    r9d,r11d
   14000417d:	jb     0x140004161
   14000417f:	xor    eax,eax
   140004181:	ret    
   140004182:	mov    rax,rcx
   140004185:	ret    
   140004186:	int3   
   140004187:	int3   
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	sub    rsp,0x28
   140004194:	mov    r8,rcx
   140004197:	lea    r9,[rip+0xffffffffffffbe62]        # 0x140000000
   14000419e:	mov    rcx,r9
   1400041a1:	call   0x140004110
   1400041a6:	test   eax,eax
   1400041a8:	je     0x1400041cc
   1400041aa:	sub    r8,r9
   1400041ad:	mov    rdx,r8
   1400041b0:	mov    rcx,r9
   1400041b3:	call   0x140004140
   1400041b8:	test   rax,rax
   1400041bb:	je     0x1400041cc
   1400041bd:	mov    eax,DWORD PTR [rax+0x24]
   1400041c0:	shr    eax,0x1f
   1400041c3:	not    eax
   1400041c5:	and    eax,0x1
   1400041c8:	jmp    0x1400041cc
   1400041ca:	xor    eax,eax
   1400041cc:	add    rsp,0x28
   1400041d0:	ret    
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	lea    r8,[rip+0xaa95]        # 0x14000ec70
   1400041db:	xor    eax,eax
   1400041dd:	mov    rdx,r8
   1400041e0:	cmp    ecx,DWORD PTR [rdx]
   1400041e2:	je     0x1400041f2
   1400041e4:	inc    eax
   1400041e6:	add    rdx,0x10
   1400041ea:	cmp    eax,0x16
   1400041ed:	jb     0x1400041e0
   1400041ef:	xor    eax,eax
   1400041f1:	ret    
   1400041f2:	cdqe   
   1400041f4:	add    rax,rax
   1400041f7:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   1400041fc:	ret    
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	mov    QWORD PTR [rsp+0x10],rbx
   140004205:	mov    QWORD PTR [rsp+0x18],rbp
   14000420a:	mov    QWORD PTR [rsp+0x20],rsi
   14000420f:	push   rdi
   140004210:	push   r12
   140004212:	push   r13
   140004214:	sub    rsp,0x250
   14000421b:	mov    rax,QWORD PTR [rip+0xdde6]        # 0x140012008
   140004222:	xor    rax,rsp
   140004225:	mov    QWORD PTR [rsp+0x240],rax
   14000422d:	mov    edi,ecx
   14000422f:	call   0x1400041d4
   140004234:	xor    esi,esi
   140004236:	mov    rbx,rax
   140004239:	test   rax,rax
   14000423c:	je     0x140004430
   140004242:	lea    ecx,[rsi+0x3]
   140004245:	call   0x140008960
   14000424a:	cmp    eax,0x1
   14000424d:	je     0x1400043c8
   140004253:	lea    ecx,[rsi+0x3]
   140004256:	call   0x140008960
   14000425b:	test   eax,eax
   14000425d:	jne    0x14000426c
   14000425f:	cmp    DWORD PTR [rip+0xdd9a],0x1        # 0x140012000
   140004266:	je     0x1400043c8
   14000426c:	cmp    edi,0xfc
   140004272:	je     0x140004430
   140004278:	lea    rbp,[rip+0xf9b1]        # 0x140013c30
   14000427f:	mov    r12d,0x314
   140004285:	lea    r8,[rip+0xabd4]        # 0x14000ee60
   14000428c:	mov    rcx,rbp
   14000428f:	mov    edx,r12d
   140004292:	call   0x1400088f4
   140004297:	xor    ecx,ecx
   140004299:	test   eax,eax
   14000429b:	jne    0x1400043b5
   1400042a1:	lea    r13,[rip+0xf9ba]        # 0x140013c62
   1400042a8:	mov    r8d,0x104
   1400042ae:	mov    WORD PTR [rip+0xfbb5],si        # 0x140013e6a
   1400042b5:	mov    rdx,r13
   1400042b8:	call   QWORD PTR [rip+0x9d92]        # 0x14000e050
   1400042be:	lea    edi,[r12-0x19]
   1400042c3:	test   eax,eax
   1400042c5:	jne    0x1400042f1
   1400042c7:	lea    r8,[rip+0xab62]        # 0x14000ee30
   1400042ce:	mov    edx,edi
   1400042d0:	mov    rcx,r13
   1400042d3:	call   0x1400088f4
   1400042d8:	test   eax,eax
   1400042da:	je     0x1400042f1
   1400042dc:	xor    r9d,r9d
   1400042df:	xor    r8d,r8d
   1400042e2:	xor    edx,edx
   1400042e4:	xor    ecx,ecx
   1400042e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400042eb:	call   0x140003458
   1400042f0:	int3   
   1400042f1:	mov    rcx,r13
   1400042f4:	call   0x1400088d8
   1400042f9:	inc    rax
   1400042fc:	cmp    rax,0x3c
   140004300:	jbe    0x140004349
   140004302:	mov    rcx,r13
   140004305:	call   0x1400088d8
   14000430a:	lea    r8,[rip+0xab17]        # 0x14000ee28
   140004311:	mov    r9d,0x3
   140004317:	lea    rcx,[rbp+rax*2-0x44]
   14000431c:	mov    rax,rcx
   14000431f:	sub    rax,r13
   140004322:	sar    rax,1
   140004325:	sub    rdi,rax
   140004328:	mov    rdx,rdi
   14000432b:	call   0x140008808
   140004330:	test   eax,eax
   140004332:	je     0x140004349
   140004334:	xor    r9d,r9d
   140004337:	xor    r8d,r8d
   14000433a:	xor    edx,edx
   14000433c:	xor    ecx,ecx
   14000433e:	mov    QWORD PTR [rsp+0x20],rsi
   140004343:	call   0x140003458
   140004348:	int3   
   140004349:	lea    r8,[rip+0xaacc]        # 0x14000ee1c
   140004350:	mov    rdx,r12
   140004353:	mov    rcx,rbp
   140004356:	call   0x140008780
   14000435b:	test   eax,eax
   14000435d:	jne    0x1400043a0
   14000435f:	mov    r8,rbx
   140004362:	mov    rdx,r12
   140004365:	mov    rcx,rbp
   140004368:	call   0x140008780
   14000436d:	test   eax,eax
   14000436f:	jne    0x14000438b
   140004371:	lea    rdx,[rip+0xaa58]        # 0x14000edd0
   140004378:	mov    r8d,0x12010
   14000437e:	mov    rcx,rbp
   140004381:	call   0x140008578
   140004386:	jmp    0x140004430
   14000438b:	xor    r9d,r9d
   14000438e:	xor    r8d,r8d
   140004391:	xor    edx,edx
   140004393:	xor    ecx,ecx
   140004395:	mov    QWORD PTR [rsp+0x20],rsi
   14000439a:	call   0x140003458
   14000439f:	int3   
   1400043a0:	xor    r9d,r9d
   1400043a3:	xor    r8d,r8d
   1400043a6:	xor    edx,edx
   1400043a8:	xor    ecx,ecx
   1400043aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400043af:	call   0x140003458
   1400043b4:	int3   
   1400043b5:	xor    r9d,r9d
   1400043b8:	xor    r8d,r8d
   1400043bb:	xor    edx,edx
   1400043bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400043c2:	call   0x140003458
   1400043c7:	int3   
   1400043c8:	mov    ecx,0xfffffff4
   1400043cd:	call   QWORD PTR [rip+0x9c9d]        # 0x14000e070
   1400043d3:	mov    rdi,rax
   1400043d6:	test   rax,rax
   1400043d9:	je     0x140004430
   1400043db:	cmp    rax,0xffffffffffffffff
   1400043df:	je     0x140004430
   1400043e1:	mov    edx,esi
   1400043e3:	lea    r8,[rsp+0x40]
   1400043e8:	mov    cl,BYTE PTR [rbx]
   1400043ea:	mov    BYTE PTR [r8],cl
   1400043ed:	cmp    WORD PTR [rbx],si
   1400043f0:	je     0x140004403
   1400043f2:	inc    edx
   1400043f4:	inc    r8
   1400043f7:	add    rbx,0x2
   1400043fb:	cmp    edx,0x1f4
   140004401:	jb     0x1400043e8
   140004403:	lea    rcx,[rsp+0x40]
   140004408:	mov    BYTE PTR [rsp+0x233],sil
   140004410:	call   0x1400084d0
   140004415:	lea    r9,[rsp+0x30]
   14000441a:	lea    rdx,[rsp+0x40]
   14000441f:	mov    rcx,rdi
   140004422:	mov    r8,rax
   140004425:	mov    QWORD PTR [rsp+0x20],rsi
   14000442a:	call   QWORD PTR [rip+0x9d50]        # 0x14000e180
   140004430:	mov    rcx,QWORD PTR [rsp+0x240]
   140004438:	xor    rcx,rsp
   14000443b:	call   0x140001980
   140004440:	lea    r11,[rsp+0x250]
   140004448:	mov    rbx,QWORD PTR [r11+0x28]
   14000444c:	mov    rbp,QWORD PTR [r11+0x30]
   140004450:	mov    rsi,QWORD PTR [r11+0x38]
   140004454:	mov    rsp,r11
   140004457:	pop    r13
   140004459:	pop    r12
   14000445b:	pop    rdi
   14000445c:	ret    
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	sub    rsp,0x28
   140004464:	mov    ecx,0x3
   140004469:	call   0x140008960
   14000446e:	cmp    eax,0x1
   140004471:	je     0x14000448a
   140004473:	mov    ecx,0x3
   140004478:	call   0x140008960
   14000447d:	test   eax,eax
   14000447f:	jne    0x14000449e
   140004481:	cmp    DWORD PTR [rip+0xdb78],0x1        # 0x140012000
   140004488:	jne    0x14000449e
   14000448a:	mov    ecx,0xfc
   14000448f:	call   0x140004200
   140004494:	mov    ecx,0xff
   140004499:	call   0x140004200
   14000449e:	add    rsp,0x28
   1400044a2:	ret    
   1400044a3:	int3   
   1400044a4:	sub    rsp,0x28
   1400044a8:	xor    r8d,r8d
   1400044ab:	mov    edx,0x1000
   1400044b0:	xor    ecx,ecx
   1400044b2:	mov    DWORD PTR [rsp+0x30],0x2
   1400044ba:	call   QWORD PTR [rip+0x9cd8]        # 0x14000e198
   1400044c0:	mov    QWORD PTR [rip+0xfd91],rax        # 0x140014258
   1400044c7:	test   rax,rax
   1400044ca:	je     0x1400044f5
   1400044cc:	call   QWORD PTR [rip+0x9cbe]        # 0x14000e190
   1400044d2:	cmp    al,0x6
   1400044d4:	jae    0x1400044f0
   1400044d6:	mov    rcx,QWORD PTR [rip+0xfd7b]        # 0x140014258
   1400044dd:	lea    r8,[rsp+0x30]
   1400044e2:	mov    r9d,0x4
   1400044e8:	xor    edx,edx
   1400044ea:	call   QWORD PTR [rip+0x9c98]        # 0x14000e188
   1400044f0:	mov    eax,0x1
   1400044f5:	add    rsp,0x28
   1400044f9:	ret    
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	mov    QWORD PTR [rsp+0x8],rbx
   140004501:	push   rdi
   140004502:	sub    rsp,0x20
   140004506:	mov    rbx,r8
   140004509:	mov    rdi,rdx
   14000450c:	test   rcx,rcx
   14000450f:	je     0x14000452e
   140004511:	xor    edx,edx
   140004513:	lea    rax,[rdx-0x20]
   140004517:	div    rcx
   14000451a:	cmp    rax,rdi
   14000451d:	jae    0x14000452e
   14000451f:	call   0x140003564
   140004524:	mov    DWORD PTR [rax],0xc
   14000452a:	xor    eax,eax
   14000452c:	jmp    0x14000458b
   14000452e:	imul   rdi,rcx
   140004532:	mov    eax,0x1
   140004537:	test   rdi,rdi
   14000453a:	cmove  rdi,rax
   14000453e:	xor    eax,eax
   140004540:	cmp    rdi,0xffffffffffffffe0
   140004544:	ja     0x14000455e
   140004546:	mov    rcx,QWORD PTR [rip+0xfd0b]        # 0x140014258
   14000454d:	lea    edx,[rax+0x8]
   140004550:	mov    r8,rdi
   140004553:	call   QWORD PTR [rip+0x9b67]        # 0x14000e0c0
   140004559:	test   rax,rax
   14000455c:	jne    0x14000458b
   14000455e:	cmp    DWORD PTR [rip+0xfcfb],0x0        # 0x140014260
   140004565:	je     0x140004580
   140004567:	mov    rcx,rdi
   14000456a:	call   0x140003b74
   14000456f:	test   eax,eax
   140004571:	jne    0x14000453e
   140004573:	test   rbx,rbx
   140004576:	je     0x14000452a
   140004578:	mov    DWORD PTR [rbx],0xc
   14000457e:	jmp    0x14000452a
   140004580:	test   rbx,rbx
   140004583:	je     0x14000458b
   140004585:	mov    DWORD PTR [rbx],0xc
   14000458b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004590:	add    rsp,0x20
   140004594:	pop    rdi
   140004595:	ret    
   140004596:	int3   
   140004597:	int3   
   140004598:	mov    QWORD PTR [rsp+0x8],rbx
   14000459d:	mov    QWORD PTR [rsp+0x10],rsi
   1400045a2:	mov    QWORD PTR [rsp+0x18],rdi
   1400045a7:	push   rbp
   1400045a8:	push   r12
   1400045aa:	push   r13
   1400045ac:	mov    rbp,rsp
   1400045af:	sub    rsp,0x50
   1400045b3:	xor    ebx,ebx
   1400045b5:	mov    r12,r8
   1400045b8:	mov    r13,rcx
   1400045bb:	mov    rsi,rdx
   1400045be:	lea    rcx,[rbp-0x28]
   1400045c2:	lea    r8d,[rbx+0x28]
   1400045c6:	xor    edx,edx
   1400045c8:	mov    rdi,r9
   1400045cb:	mov    QWORD PTR [rbp-0x30],rbx
   1400045cf:	call   0x140004a30
   1400045d4:	test   rdi,rdi
   1400045d7:	jne    0x1400045ee
   1400045d9:	call   0x140003564
   1400045de:	mov    DWORD PTR [rax],0x16
   1400045e4:	call   0x1400034fc
   1400045e9:	or     eax,0xffffffff
   1400045ec:	jmp    0x140004664
   1400045ee:	test   r12,r12
   1400045f1:	je     0x1400045f8
   1400045f3:	test   rsi,rsi
   1400045f6:	je     0x1400045d9
   1400045f8:	mov    r9,QWORD PTR [rbp+0x48]
   1400045fc:	mov    r8,QWORD PTR [rbp+0x40]
   140004600:	mov    ecx,0x7fffffff
   140004605:	cmp    r12,rcx
   140004608:	mov    eax,r12d
   14000460b:	mov    rdx,rdi
   14000460e:	cmova  eax,ecx
   140004611:	lea    rcx,[rbp-0x30]
   140004615:	mov    DWORD PTR [rbp-0x18],0x42
   14000461c:	mov    QWORD PTR [rbp-0x20],rsi
   140004620:	mov    QWORD PTR [rbp-0x30],rsi
   140004624:	mov    DWORD PTR [rbp-0x28],eax
   140004627:	call   r13
   14000462a:	mov    edi,eax
   14000462c:	test   rsi,rsi
   14000462f:	je     0x140004664
   140004631:	test   eax,eax
   140004633:	js     0x140004656
   140004635:	dec    DWORD PTR [rbp-0x28]
   140004638:	js     0x140004642
   14000463a:	mov    rax,QWORD PTR [rbp-0x30]
   14000463e:	mov    BYTE PTR [rax],bl
   140004640:	jmp    0x140004652
   140004642:	lea    rdx,[rbp-0x30]
   140004646:	xor    ecx,ecx
   140004648:	call   0x1400047e8
   14000464d:	cmp    eax,0xffffffff
   140004650:	je     0x140004656
   140004652:	mov    eax,edi
   140004654:	jmp    0x140004664
   140004656:	cmp    DWORD PTR [rbp-0x28],ebx
   140004659:	mov    BYTE PTR [rsi+r12*1-0x1],bl
   14000465e:	setge  bl
   140004661:	lea    eax,[rbx-0x2]
   140004664:	lea    r11,[rsp+0x50]
   140004669:	mov    rbx,QWORD PTR [r11+0x20]
   14000466d:	mov    rsi,QWORD PTR [r11+0x28]
   140004671:	mov    rdi,QWORD PTR [r11+0x30]
   140004675:	mov    rsp,r11
   140004678:	pop    r13
   14000467a:	pop    r12
   14000467c:	pop    rbp
   14000467d:	ret    
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    rax,rsp
   140004683:	mov    QWORD PTR [rax+0x8],rbx
   140004687:	mov    QWORD PTR [rax+0x10],rbp
   14000468b:	mov    QWORD PTR [rax+0x18],rsi
   14000468f:	mov    QWORD PTR [rax+0x20],rdi
   140004693:	push   r12
   140004695:	sub    rsp,0x30
   140004699:	mov    rbp,r9
   14000469c:	mov    rsi,r8
   14000469f:	mov    rbx,rdx
   1400046a2:	mov    rdi,rcx
   1400046a5:	test   r9,r9
   1400046a8:	je     0x14000479a
   1400046ae:	test   r8,r8
   1400046b1:	jne    0x1400046c8
   1400046b3:	test   rcx,rcx
   1400046b6:	jne    0x1400046d1
   1400046b8:	test   rdx,rdx
   1400046bb:	jne    0x14000479a
   1400046c1:	xor    eax,eax
   1400046c3:	jmp    0x1400047ad
   1400046c8:	test   rcx,rcx
   1400046cb:	je     0x14000479a
   1400046d1:	test   rdx,rdx
   1400046d4:	je     0x14000479a
   1400046da:	cmp    rdx,r8
   1400046dd:	jbe    0x14000472c
   1400046df:	call   0x140003564
   1400046e4:	lea    r8,[rsi+0x1]
   1400046e8:	lea    rcx,[rip+0x43e5]        # 0x140008ad4
   1400046ef:	mov    ebx,DWORD PTR [rax]
   1400046f1:	mov    rax,QWORD PTR [rsp+0x68]
   1400046f6:	mov    r9,rbp
   1400046f9:	mov    QWORD PTR [rsp+0x28],rax
   1400046fe:	mov    rax,QWORD PTR [rsp+0x60]
   140004703:	mov    rdx,rdi
   140004706:	mov    QWORD PTR [rsp+0x20],rax
   14000470b:	call   0x140004598
   140004710:	cmp    eax,0xfffffffe
   140004713:	jne    0x140004781
   140004715:	call   0x140003564
   14000471a:	cmp    DWORD PTR [rax],0x22
   14000471d:	jne    0x1400047aa
   140004723:	call   0x140003564
   140004728:	mov    DWORD PTR [rax],ebx
   14000472a:	jmp    0x1400047aa
   14000472c:	call   0x140003564
   140004731:	lea    rcx,[rip+0x439c]        # 0x140008ad4
   140004738:	mov    r9,rbp
   14000473b:	mov    r12d,DWORD PTR [rax]
   14000473e:	mov    rax,QWORD PTR [rsp+0x68]
   140004743:	mov    r8,rbx
   140004746:	mov    QWORD PTR [rsp+0x28],rax
   14000474b:	mov    rax,QWORD PTR [rsp+0x60]
   140004750:	mov    rdx,rdi
   140004753:	mov    QWORD PTR [rsp+0x20],rax
   140004758:	call   0x140004598
   14000475d:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004762:	cmp    eax,0xfffffffe
   140004765:	jne    0x140004781
   140004767:	cmp    rsi,0xffffffffffffffff
   14000476b:	jne    0x140004785
   14000476d:	call   0x140003564
   140004772:	cmp    DWORD PTR [rax],0x22
   140004775:	jne    0x1400047aa
   140004777:	call   0x140003564
   14000477c:	mov    DWORD PTR [rax],r12d
   14000477f:	jmp    0x1400047aa
   140004781:	test   eax,eax
   140004783:	jns    0x1400047ad
   140004785:	mov    BYTE PTR [rdi],0x0
   140004788:	cmp    eax,0xfffffffe
   14000478b:	jne    0x1400047aa
   14000478d:	call   0x140003564
   140004792:	mov    DWORD PTR [rax],0x22
   140004798:	jmp    0x1400047a5
   14000479a:	call   0x140003564
   14000479f:	mov    DWORD PTR [rax],0x16
   1400047a5:	call   0x1400034fc
   1400047aa:	or     eax,0xffffffff
   1400047ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400047b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400047b7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400047bc:	mov    rdi,QWORD PTR [rsp+0x58]
   1400047c1:	add    rsp,0x30
   1400047c5:	pop    r12
   1400047c7:	ret    
   1400047c8:	sub    rsp,0x38
   1400047cc:	mov    rax,QWORD PTR [rsp+0x60]
   1400047d1:	mov    QWORD PTR [rsp+0x28],rax
   1400047d6:	and    QWORD PTR [rsp+0x20],0x0
   1400047dc:	call   0x140004680
   1400047e1:	add    rsp,0x38
   1400047e5:	ret    
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	mov    rax,rsp
   1400047eb:	mov    QWORD PTR [rax+0x10],rbx
   1400047ef:	mov    QWORD PTR [rax+0x18],rbp
   1400047f3:	mov    QWORD PTR [rax+0x20],rsi
   1400047f7:	mov    DWORD PTR [rax+0x8],ecx
   1400047fa:	push   rdi
   1400047fb:	sub    rsp,0x20
   1400047ff:	mov    rcx,rdx
   140004802:	mov    rbx,rdx
   140004805:	call   0x14000571c
   14000480a:	mov    ecx,DWORD PTR [rbx+0x18]
   14000480d:	movsxd rsi,eax
   140004810:	test   cl,0x82
   140004813:	jne    0x14000482c
   140004815:	call   0x140003564
   14000481a:	mov    DWORD PTR [rax],0x9
   140004820:	or     DWORD PTR [rbx+0x18],0x20
   140004824:	or     eax,0xffffffff
   140004827:	jmp    0x140004960
   14000482c:	test   cl,0x40
   14000482f:	je     0x14000483e
   140004831:	call   0x140003564
   140004836:	mov    DWORD PTR [rax],0x22
   14000483c:	jmp    0x140004820
   14000483e:	xor    edi,edi
   140004840:	test   cl,0x1
   140004843:	je     0x14000485e
   140004845:	mov    DWORD PTR [rbx+0x8],edi
   140004848:	test   cl,0x10
   14000484b:	je     0x1400048da
   140004851:	mov    rax,QWORD PTR [rbx+0x10]
   140004855:	and    ecx,0xfffffffe
   140004858:	mov    QWORD PTR [rbx],rax
   14000485b:	mov    DWORD PTR [rbx+0x18],ecx
   14000485e:	mov    eax,DWORD PTR [rbx+0x18]
   140004861:	mov    DWORD PTR [rbx+0x8],edi
   140004864:	and    eax,0xffffffef
   140004867:	or     eax,0x2
   14000486a:	mov    DWORD PTR [rbx+0x18],eax
   14000486d:	test   eax,0x10c
   140004872:	jne    0x1400048a3
   140004874:	call   0x140002cb8
   140004879:	add    rax,0x30
   14000487d:	cmp    rbx,rax
   140004880:	je     0x140004890
   140004882:	call   0x140002cb8
   140004887:	add    rax,0x60
   14000488b:	cmp    rbx,rax
   14000488e:	jne    0x14000489b
   140004890:	mov    ecx,esi
   140004892:	call   0x140009fb4
   140004897:	test   eax,eax
   140004899:	jne    0x1400048a3
   14000489b:	mov    rcx,rbx
   14000489e:	call   0x140009f60
   1400048a3:	test   DWORD PTR [rbx+0x18],0x108
   1400048aa:	je     0x14000493d
   1400048b0:	mov    ebp,DWORD PTR [rbx]
   1400048b2:	mov    rdx,QWORD PTR [rbx+0x10]
   1400048b6:	sub    ebp,DWORD PTR [rbx+0x10]
   1400048b9:	lea    rax,[rdx+0x1]
   1400048bd:	mov    QWORD PTR [rbx],rax
   1400048c0:	mov    eax,DWORD PTR [rbx+0x24]
   1400048c3:	dec    eax
   1400048c5:	mov    DWORD PTR [rbx+0x8],eax
   1400048c8:	test   ebp,ebp
   1400048ca:	jle    0x1400048e5
   1400048cc:	mov    r8d,ebp
   1400048cf:	mov    ecx,esi
   1400048d1:	call   0x140009e80
   1400048d6:	mov    edi,eax
   1400048d8:	jmp    0x140004931
   1400048da:	or     ecx,0x20
   1400048dd:	mov    DWORD PTR [rbx+0x18],ecx
   1400048e0:	jmp    0x140004824
   1400048e5:	cmp    esi,0xffffffff
   1400048e8:	je     0x14000490d
   1400048ea:	cmp    esi,0xfffffffe
   1400048ed:	je     0x14000490d
   1400048ef:	mov    rcx,rsi
   1400048f2:	mov    rax,rsi
   1400048f5:	lea    rdx,[rip+0xfd24]        # 0x140014620
   1400048fc:	and    ecx,0x1f
   1400048ff:	sar    rax,0x5
   140004903:	imul   rcx,rcx,0x58
   140004907:	add    rcx,QWORD PTR [rdx+rax*8]
   14000490b:	jmp    0x140004914
   14000490d:	lea    rcx,[rip+0xdfec]        # 0x140012900
   140004914:	test   BYTE PTR [rcx+0x8],0x20
   140004918:	je     0x140004931
   14000491a:	xor    edx,edx
   14000491c:	mov    ecx,esi
   14000491e:	lea    r8d,[rdx+0x2]
   140004922:	call   0x14000963c
   140004927:	cmp    rax,0xffffffffffffffff
   14000492b:	je     0x140004820
   140004931:	mov    rcx,QWORD PTR [rbx+0x10]
   140004935:	mov    al,BYTE PTR [rsp+0x30]
   140004939:	mov    BYTE PTR [rcx],al
   14000493b:	jmp    0x140004953
   14000493d:	mov    ebp,0x1
   140004942:	lea    rdx,[rsp+0x30]
   140004947:	mov    ecx,esi
   140004949:	mov    r8d,ebp
   14000494c:	call   0x140009e80
   140004951:	mov    edi,eax
   140004953:	cmp    edi,ebp
   140004955:	jne    0x140004820
   14000495b:	movzx  eax,BYTE PTR [rsp+0x30]
   140004960:	mov    rbx,QWORD PTR [rsp+0x38]
   140004965:	mov    rbp,QWORD PTR [rsp+0x40]
   14000496a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000496f:	add    rsp,0x20
   140004973:	pop    rdi
   140004974:	ret    
   140004975:	int3   
   140004976:	int3   
   140004977:	int3   
   140004978:	rex push rbx
   14000497a:	sub    rsp,0x20
   14000497e:	mov    rbx,rcx
   140004981:	mov    BYTE PTR [rcx+0x18],0x0
   140004985:	test   rdx,rdx
   140004988:	jne    0x140004a09
   14000498a:	call   0x140003d18
   14000498f:	mov    QWORD PTR [rbx+0x10],rax
   140004993:	mov    rdx,QWORD PTR [rax+0xc0]
   14000499a:	mov    QWORD PTR [rbx],rdx
   14000499d:	mov    rcx,QWORD PTR [rax+0xb8]
   1400049a4:	mov    QWORD PTR [rbx+0x8],rcx
   1400049a8:	cmp    rdx,QWORD PTR [rip+0xe3e1]        # 0x140012d90
   1400049af:	je     0x1400049c7
   1400049b1:	mov    eax,DWORD PTR [rax+0xc8]
   1400049b7:	test   DWORD PTR [rip+0xe923],eax        # 0x1400132e0
   1400049bd:	jne    0x1400049c7
   1400049bf:	call   0x140007bb8
   1400049c4:	mov    QWORD PTR [rbx],rax
   1400049c7:	mov    rax,QWORD PTR [rip+0xe802]        # 0x1400131d0
   1400049ce:	cmp    QWORD PTR [rbx+0x8],rax
   1400049d2:	je     0x1400049ef
   1400049d4:	mov    rax,QWORD PTR [rbx+0x10]
   1400049d8:	mov    ecx,DWORD PTR [rax+0xc8]
   1400049de:	test   DWORD PTR [rip+0xe8fc],ecx        # 0x1400132e0
   1400049e4:	jne    0x1400049ef
   1400049e6:	call   0x140007eac
   1400049eb:	mov    QWORD PTR [rbx+0x8],rax
   1400049ef:	mov    rax,QWORD PTR [rbx+0x10]
   1400049f3:	test   BYTE PTR [rax+0xc8],0x2
   1400049fa:	jne    0x140004a10
   1400049fc:	or     DWORD PTR [rax+0xc8],0x2
   140004a03:	mov    BYTE PTR [rbx+0x18],0x1
   140004a07:	jmp    0x140004a10
   140004a09:	movups xmm0,XMMWORD PTR [rdx]
   140004a0c:	movdqu XMMWORD PTR [rcx],xmm0
   140004a10:	mov    rax,rbx
   140004a13:	add    rsp,0x20
   140004a17:	pop    rbx
   140004a18:	ret    
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	int3   
   140004a25:	int3   
   140004a26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004a30:	mov    rax,rcx
   140004a33:	cmp    r8,0x8
   140004a37:	jb     0x140004a8c
   140004a39:	movzx  edx,dl
   140004a3c:	movabs r9,0x101010101010101
   140004a46:	imul   rdx,r9
   140004a4a:	cmp    r8,0x40
   140004a4e:	jb     0x140004a6e
   140004a50:	neg    rcx
   140004a53:	and    ecx,0x7
   140004a56:	je     0x140004a5e
   140004a58:	sub    r8,rcx
   140004a5b:	mov    QWORD PTR [rax],rdx
   140004a5e:	add    rcx,rax
   140004a61:	mov    r9,r8
   140004a64:	and    r8,0x3f
   140004a68:	shr    r9,0x6
   140004a6c:	jne    0x140004aa7
   140004a6e:	mov    r9,r8
   140004a71:	and    r8,0x7
   140004a75:	shr    r9,0x3
   140004a79:	je     0x140004a8c
   140004a7b:	data16 data16 xchg ax,ax
   140004a7f:	nop
   140004a80:	mov    QWORD PTR [rcx],rdx
   140004a83:	add    rcx,0x8
   140004a87:	dec    r9
   140004a8a:	jne    0x140004a80
   140004a8c:	test   r8,r8
   140004a8f:	je     0x140004a9b
   140004a91:	mov    BYTE PTR [rcx],dl
   140004a93:	inc    rcx
   140004a96:	dec    r8
   140004a99:	jne    0x140004a91
   140004a9b:	ret    
   140004a9c:	nop    DWORD PTR [rax+0x0]
   140004aa0:	data16 data16 xchg ax,ax
   140004aa4:	data16 xchg ax,ax
   140004aa7:	cmp    r9,0x1c00
   140004aae:	jae    0x140004ae0
   140004ab0:	mov    QWORD PTR [rcx],rdx
   140004ab3:	mov    QWORD PTR [rcx+0x8],rdx
   140004ab7:	mov    QWORD PTR [rcx+0x10],rdx
   140004abb:	add    rcx,0x40
   140004abf:	mov    QWORD PTR [rcx-0x28],rdx
   140004ac3:	mov    QWORD PTR [rcx-0x20],rdx
   140004ac7:	dec    r9
   140004aca:	mov    QWORD PTR [rcx-0x18],rdx
   140004ace:	mov    QWORD PTR [rcx-0x10],rdx
   140004ad2:	mov    QWORD PTR [rcx-0x8],rdx
   140004ad6:	jne    0x140004ab0
   140004ad8:	jmp    0x140004a6e
   140004ada:	nop    WORD PTR [rax+rax*1+0x0]
   140004ae0:	movnti QWORD PTR [rcx],rdx
   140004ae4:	movnti QWORD PTR [rcx+0x8],rdx
   140004ae9:	movnti QWORD PTR [rcx+0x10],rdx
   140004aee:	add    rcx,0x40
   140004af2:	movnti QWORD PTR [rcx-0x28],rdx
   140004af7:	movnti QWORD PTR [rcx-0x20],rdx
   140004afc:	dec    r9
   140004aff:	movnti QWORD PTR [rcx-0x18],rdx
   140004b04:	movnti QWORD PTR [rcx-0x10],rdx
   140004b09:	movnti QWORD PTR [rcx-0x8],rdx
   140004b0e:	jne    0x140004ae0
   140004b10:	lock or BYTE PTR [rsp],0x0
   140004b15:	jmp    0x140004a6e
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140004b21:	mov    QWORD PTR [rsp+0x10],rsi
   140004b26:	mov    QWORD PTR [rsp+0x18],rdi
   140004b2b:	push   rbp
   140004b2c:	push   r12
   140004b2e:	push   r13
   140004b30:	mov    rbp,rsp
   140004b33:	sub    rsp,0x50
   140004b37:	xor    ebx,ebx
   140004b39:	mov    r12,r8
   140004b3c:	mov    r13,rcx
   140004b3f:	mov    rsi,rdx
   140004b42:	lea    rcx,[rbp-0x28]
   140004b46:	lea    r8d,[rbx+0x28]
   140004b4a:	xor    edx,edx
   140004b4c:	mov    rdi,r9
   140004b4f:	mov    QWORD PTR [rbp-0x30],rbx
   140004b53:	call   0x140004a30
   140004b58:	test   rdi,rdi
   140004b5b:	jne    0x140004b75
   140004b5d:	call   0x140003564
   140004b62:	mov    DWORD PTR [rax],0x16
   140004b68:	call   0x1400034fc
   140004b6d:	or     eax,0xffffffff
   140004b70:	jmp    0x140004c1c
   140004b75:	test   r12,r12
   140004b78:	je     0x140004b7f
   140004b7a:	test   rsi,rsi
   140004b7d:	je     0x140004b5d
   140004b7f:	mov    DWORD PTR [rbp-0x18],0x42
   140004b86:	mov    QWORD PTR [rbp-0x20],rsi
   140004b8a:	mov    QWORD PTR [rbp-0x30],rsi
   140004b8e:	cmp    r12,0x3fffffff
   140004b95:	jbe    0x140004ba0
   140004b97:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140004b9e:	jmp    0x140004ba7
   140004ba0:	lea    eax,[r12+r12*1]
   140004ba4:	mov    DWORD PTR [rbp-0x28],eax
   140004ba7:	mov    r9,QWORD PTR [rbp+0x48]
   140004bab:	mov    r8,QWORD PTR [rbp+0x40]
   140004baf:	lea    rcx,[rbp-0x30]
   140004bb3:	mov    rdx,rdi
   140004bb6:	call   r13
   140004bb9:	mov    edi,eax
   140004bbb:	test   rsi,rsi
   140004bbe:	je     0x140004c1c
   140004bc0:	test   eax,eax
   140004bc2:	js     0x140004c0d
   140004bc4:	dec    DWORD PTR [rbp-0x28]
   140004bc7:	js     0x140004bdc
   140004bc9:	mov    rax,QWORD PTR [rbp-0x30]
   140004bcd:	mov    BYTE PTR [rax],bl
   140004bcf:	mov    rax,QWORD PTR [rbp-0x30]
   140004bd3:	inc    rax
   140004bd6:	mov    QWORD PTR [rbp-0x30],rax
   140004bda:	jmp    0x140004bf0
   140004bdc:	lea    rdx,[rbp-0x30]
   140004be0:	xor    ecx,ecx
   140004be2:	call   0x1400047e8
   140004be7:	cmp    eax,0xffffffff
   140004bea:	je     0x140004c0d
   140004bec:	mov    rax,QWORD PTR [rbp-0x30]
   140004bf0:	dec    DWORD PTR [rbp-0x28]
   140004bf3:	js     0x140004bf9
   140004bf5:	mov    BYTE PTR [rax],bl
   140004bf7:	jmp    0x140004c09
   140004bf9:	lea    rdx,[rbp-0x30]
   140004bfd:	xor    ecx,ecx
   140004bff:	call   0x1400047e8
   140004c04:	cmp    eax,0xffffffff
   140004c07:	je     0x140004c0d
   140004c09:	mov    eax,edi
   140004c0b:	jmp    0x140004c1c
   140004c0d:	cmp    DWORD PTR [rbp-0x28],ebx
   140004c10:	mov    WORD PTR [rsi+r12*2-0x2],bx
   140004c16:	setge  bl
   140004c19:	lea    eax,[rbx-0x2]
   140004c1c:	lea    r11,[rsp+0x50]
   140004c21:	mov    rbx,QWORD PTR [r11+0x20]
   140004c25:	mov    rsi,QWORD PTR [r11+0x28]
   140004c29:	mov    rdi,QWORD PTR [r11+0x30]
   140004c2d:	mov    rsp,r11
   140004c30:	pop    r13
   140004c32:	pop    r12
   140004c34:	pop    rbp
   140004c35:	ret    
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	mov    QWORD PTR [rsp+0x8],rbx
   140004c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140004c42:	mov    QWORD PTR [rsp+0x18],rsi
   140004c47:	push   rdi
   140004c48:	push   r12
   140004c4a:	push   r13
   140004c4c:	sub    rsp,0x30
   140004c50:	xor    r13d,r13d
   140004c53:	mov    rbp,r9
   140004c56:	mov    rsi,r8
   140004c59:	mov    rbx,rdx
   140004c5c:	mov    rdi,rcx
   140004c5f:	test   r9,r9
   140004c62:	je     0x140004d59
   140004c68:	test   r8,r8
   140004c6b:	jne    0x140004c82
   140004c6d:	test   rcx,rcx
   140004c70:	jne    0x140004c8b
   140004c72:	test   rdx,rdx
   140004c75:	jne    0x140004d59
   140004c7b:	xor    eax,eax
   140004c7d:	jmp    0x140004d6c
   140004c82:	test   rcx,rcx
   140004c85:	je     0x140004d59
   140004c8b:	test   rdx,rdx
   140004c8e:	je     0x140004d59
   140004c94:	cmp    rdx,r8
   140004c97:	jbe    0x140004ce9
   140004c99:	call   0x140003564
   140004c9e:	lea    r8,[rsi+0x1]
   140004ca2:	lea    rcx,[rip+0x58bb]        # 0x14000a564
   140004ca9:	mov    ebx,DWORD PTR [rax]
   140004cab:	mov    rax,QWORD PTR [rsp+0x78]
   140004cb0:	mov    r9,rbp
   140004cb3:	mov    QWORD PTR [rsp+0x28],rax
   140004cb8:	mov    rax,QWORD PTR [rsp+0x70]
   140004cbd:	mov    rdx,rdi
   140004cc0:	mov    QWORD PTR [rsp+0x20],rax
   140004cc5:	call   0x140004b1c
   140004cca:	cmp    eax,0xfffffffe
   140004ccd:	jne    0x140004d3f
   140004ccf:	call   0x140003564
   140004cd4:	cmp    DWORD PTR [rax],0x22
   140004cd7:	jne    0x140004d69
   140004cdd:	call   0x140003564
   140004ce2:	mov    DWORD PTR [rax],ebx
   140004ce4:	jmp    0x140004d69
   140004ce9:	call   0x140003564
   140004cee:	lea    rcx,[rip+0x586f]        # 0x14000a564
   140004cf5:	mov    r9,rbp
   140004cf8:	mov    r12d,DWORD PTR [rax]
   140004cfb:	mov    rax,QWORD PTR [rsp+0x78]
   140004d00:	mov    r8,rbx
   140004d03:	mov    QWORD PTR [rsp+0x28],rax
   140004d08:	mov    rax,QWORD PTR [rsp+0x70]
   140004d0d:	mov    rdx,rdi
   140004d10:	mov    QWORD PTR [rsp+0x20],rax
   140004d15:	call   0x140004b1c
   140004d1a:	mov    WORD PTR [rdi+rbx*2-0x2],r13w
   140004d20:	cmp    eax,0xfffffffe
   140004d23:	jne    0x140004d3f
   140004d25:	cmp    rsi,0xffffffffffffffff
   140004d29:	jne    0x140004d43
   140004d2b:	call   0x140003564
   140004d30:	cmp    DWORD PTR [rax],0x22
   140004d33:	jne    0x140004d69
   140004d35:	call   0x140003564
   140004d3a:	mov    DWORD PTR [rax],r12d
   140004d3d:	jmp    0x140004d69
   140004d3f:	test   eax,eax
   140004d41:	jns    0x140004d6c
   140004d43:	mov    WORD PTR [rdi],r13w
   140004d47:	cmp    eax,0xfffffffe
   140004d4a:	jne    0x140004d69
   140004d4c:	call   0x140003564
   140004d51:	mov    DWORD PTR [rax],0x22
   140004d57:	jmp    0x140004d64
   140004d59:	call   0x140003564
   140004d5e:	mov    DWORD PTR [rax],0x16
   140004d64:	call   0x1400034fc
   140004d69:	or     eax,0xffffffff
   140004d6c:	mov    rbx,QWORD PTR [rsp+0x50]
   140004d71:	mov    rbp,QWORD PTR [rsp+0x58]
   140004d76:	mov    rsi,QWORD PTR [rsp+0x60]
   140004d7b:	add    rsp,0x30
   140004d7f:	pop    r13
   140004d81:	pop    r12
   140004d83:	pop    rdi
   140004d84:	ret    
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	mov    QWORD PTR [rsp+0x8],rbx
   140004d8d:	mov    QWORD PTR [rsp+0x10],rsi
   140004d92:	push   rdi
   140004d93:	sub    rsp,0x20
   140004d97:	mov    rdi,rcx
   140004d9a:	test   rcx,rcx
   140004d9d:	jne    0x140004db4
   140004d9f:	call   0x140003564
   140004da4:	mov    DWORD PTR [rax],0x16
   140004daa:	call   0x1400034fc
   140004daf:	jmp    0x140004ec7
   140004db4:	mov    eax,DWORD PTR [rcx+0x18]
   140004db7:	test   al,0x83
   140004db9:	je     0x140004ec7
   140004dbf:	test   al,0x40
   140004dc1:	jne    0x140004ec7
   140004dc7:	test   al,0x2
   140004dc9:	je     0x140004dd6
   140004dcb:	or     eax,0x20
   140004dce:	mov    DWORD PTR [rcx+0x18],eax
   140004dd1:	jmp    0x140004ec7
   140004dd6:	or     eax,0x1
   140004dd9:	mov    DWORD PTR [rcx+0x18],eax
   140004ddc:	test   eax,0x10c
   140004de1:	jne    0x140004dea
   140004de3:	call   0x140009f60
   140004de8:	jmp    0x140004df1
   140004dea:	mov    rax,QWORD PTR [rcx+0x10]
   140004dee:	mov    QWORD PTR [rcx],rax
   140004df1:	mov    rcx,rdi
   140004df4:	call   0x14000571c
   140004df9:	mov    r8d,DWORD PTR [rdi+0x24]
   140004dfd:	mov    rdx,QWORD PTR [rdi+0x10]
   140004e01:	mov    ecx,eax
   140004e03:	call   0x140005600
   140004e08:	mov    DWORD PTR [rdi+0x8],eax
   140004e0b:	test   eax,eax
   140004e0d:	je     0x140004eb6
   140004e13:	cmp    eax,0xffffffff
   140004e16:	je     0x140004eb6
   140004e1c:	test   BYTE PTR [rdi+0x18],0x82
   140004e20:	jne    0x140004e81
   140004e22:	mov    rcx,rdi
   140004e25:	call   0x14000571c
   140004e2a:	cmp    eax,0xffffffff
   140004e2d:	je     0x140004e6b
   140004e2f:	mov    rcx,rdi
   140004e32:	call   0x14000571c
   140004e37:	cmp    eax,0xfffffffe
   140004e3a:	je     0x140004e6b
   140004e3c:	mov    rcx,rdi
   140004e3f:	call   0x14000571c
   140004e44:	mov    rcx,rdi
   140004e47:	lea    rsi,[rip+0xf7d2]        # 0x140014620
   140004e4e:	movsxd rbx,eax
   140004e51:	sar    rbx,0x5
   140004e55:	call   0x14000571c
   140004e5a:	mov    r11d,eax
   140004e5d:	and    r11d,0x1f
   140004e61:	imul   r11,r11,0x58
   140004e65:	add    r11,QWORD PTR [rsi+rbx*8]
   140004e69:	jmp    0x140004e72
   140004e6b:	lea    r11,[rip+0xda8e]        # 0x140012900
   140004e72:	mov    al,BYTE PTR [r11+0x8]
   140004e76:	and    al,0x82
   140004e78:	cmp    al,0x82
   140004e7a:	jne    0x140004e81
   140004e7c:	bts    DWORD PTR [rdi+0x18],0xd
   140004e81:	cmp    DWORD PTR [rdi+0x24],0x200
   140004e88:	jne    0x140004ea5
   140004e8a:	test   BYTE PTR [rdi+0x18],0x8
   140004e8e:	je     0x140004ea5
   140004e90:	mov    eax,DWORD PTR [rdi+0x24]
   140004e93:	test   DWORD PTR [rdi+0x18],0x400
   140004e9a:	mov    ecx,0x1000
   140004e9f:	cmove  eax,ecx
   140004ea2:	mov    DWORD PTR [rdi+0x24],eax
   140004ea5:	mov    rcx,QWORD PTR [rdi]
   140004ea8:	dec    DWORD PTR [rdi+0x8]
   140004eab:	movzx  eax,BYTE PTR [rcx]
   140004eae:	inc    rcx
   140004eb1:	mov    QWORD PTR [rdi],rcx
   140004eb4:	jmp    0x140004eca
   140004eb6:	neg    eax
   140004eb8:	sbb    eax,eax
   140004eba:	and    eax,0x10
   140004ebd:	add    eax,0x10
   140004ec0:	or     DWORD PTR [rdi+0x18],eax
   140004ec3:	and    DWORD PTR [rdi+0x8],0x0
   140004ec7:	or     eax,0xffffffff
   140004eca:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ecf:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ed4:	add    rsp,0x20
   140004ed8:	pop    rdi
   140004ed9:	ret    
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	mov    QWORD PTR [rsp+0x10],rdx
   140004ee1:	mov    DWORD PTR [rsp+0x8],ecx
   140004ee5:	push   rbp
   140004ee6:	push   rbx
   140004ee7:	push   rsi
   140004ee8:	push   rdi
   140004ee9:	push   r12
   140004eeb:	push   r13
   140004eed:	push   r14
   140004eef:	push   r15
   140004ef1:	mov    rbp,rsp
   140004ef4:	sub    rsp,0x58
   140004ef8:	movsxd rax,ecx
   140004efb:	mov    ebx,r8d
   140004efe:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140004f05:	mov    DWORD PTR [rbp-0x1c],ebx
   140004f08:	cmp    eax,0xfffffffe
   140004f0b:	jne    0x140004f26
   140004f0d:	call   0x140003584
   140004f12:	xor    edi,edi
   140004f14:	mov    DWORD PTR [rax],edi
   140004f16:	call   0x140003564
   140004f1b:	mov    DWORD PTR [rax],0x9
   140004f21:	jmp    0x1400055eb
   140004f26:	xor    edi,edi
   140004f28:	test   ecx,ecx
   140004f2a:	js     0x1400055d4
   140004f30:	cmp    eax,DWORD PTR [rip+0xf6e6]        # 0x14001461c
   140004f36:	jae    0x1400055d4
   140004f3c:	mov    rsi,rax
   140004f3f:	mov    r15,rax
   140004f42:	lea    r9,[rip+0xffffffffffffb0b7]        # 0x140000000
   140004f49:	sar    r15,0x5
   140004f4d:	and    esi,0x1f
   140004f50:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   140004f58:	imul   rsi,rsi,0x58
   140004f5c:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   140004f60:	test   al,0x1
   140004f62:	je     0x1400055d4
   140004f68:	cmp    ebx,0x7fffffff
   140004f6e:	jbe    0x140004f87
   140004f70:	call   0x140003584
   140004f75:	mov    DWORD PTR [rax],edi
   140004f77:	call   0x140003564
   140004f7c:	mov    DWORD PTR [rax],0x16
   140004f82:	jmp    0x1400055e6
   140004f87:	mov    r12d,edi
   140004f8a:	test   ebx,ebx
   140004f8c:	je     0x1400055d0
   140004f92:	test   al,0x2
   140004f94:	jne    0x1400055d0
   140004f9a:	test   rdx,rdx
   140004f9d:	je     0x140004f70
   140004f9f:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   140004fa4:	mov    r8d,0x4
   140004faa:	add    r13b,r13b
   140004fad:	sar    r13b,1
   140004fb0:	movsx  ecx,r13b
   140004fb4:	mov    BYTE PTR [rbp+0x60],r13b
   140004fb8:	dec    ecx
   140004fba:	je     0x140004fd0
   140004fbc:	dec    ecx
   140004fbe:	jne    0x140004fcb
   140004fc0:	mov    eax,ebx
   140004fc2:	not    eax
   140004fc4:	test   al,0x1
   140004fc6:	je     0x140004f70
   140004fc8:	and    ebx,0xfffffffe
   140004fcb:	mov    r14,rdx
   140004fce:	jmp    0x140005030
   140004fd0:	mov    eax,ebx
   140004fd2:	not    eax
   140004fd4:	test   al,0x1
   140004fd6:	je     0x140004f70
   140004fd8:	shr    ebx,1
   140004fda:	cmp    ebx,r8d
   140004fdd:	cmovb  ebx,r8d
   140004fe1:	mov    ecx,ebx
   140004fe3:	call   0x1400067e0
   140004fe8:	mov    r14,rax
   140004feb:	test   rax,rax
   140004fee:	jne    0x14000500b
   140004ff0:	call   0x140003564
   140004ff5:	mov    DWORD PTR [rax],0xc
   140004ffb:	call   0x140003584
   140005000:	mov    DWORD PTR [rax],0x8
   140005006:	jmp    0x1400055eb
   14000500b:	mov    ecx,DWORD PTR [rbp+0x48]
   14000500e:	xor    edx,edx
   140005010:	lea    r8d,[rdx+0x1]
   140005014:	call   0x1400095a4
   140005019:	lea    r9,[rip+0xffffffffffffafe0]        # 0x140000000
   140005020:	mov    r11,rax
   140005023:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000502b:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140005030:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140005038:	mov    rdx,r14
   14000503b:	mov    r8d,0xa
   140005041:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140005046:	je     0x1400050e7
   14000504c:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140005050:	cmp    cl,r8b
   140005053:	je     0x1400050e7
   140005059:	test   ebx,ebx
   14000505b:	je     0x1400050e7
   140005061:	mov    BYTE PTR [r14],cl
   140005064:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000506c:	or     r10d,0xffffffff
   140005070:	add    ebx,r10d
   140005073:	lea    rdx,[r14+0x1]
   140005077:	lea    r12d,[r8-0x9]
   14000507b:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140005080:	test   r13b,r13b
   140005083:	je     0x1400050e7
   140005085:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000508d:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140005091:	cmp    cl,r8b
   140005094:	je     0x1400050e7
   140005096:	test   ebx,ebx
   140005098:	je     0x1400050e7
   14000509a:	mov    BYTE PTR [rdx],cl
   14000509c:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050a4:	add    ebx,r10d
   1400050a7:	inc    rdx
   1400050aa:	lea    r12d,[r8-0x8]
   1400050ae:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   1400050b3:	cmp    r13b,0x1
   1400050b7:	jne    0x1400050e7
   1400050b9:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050c1:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   1400050c5:	cmp    cl,r8b
   1400050c8:	je     0x1400050e7
   1400050ca:	test   ebx,ebx
   1400050cc:	je     0x1400050e7
   1400050ce:	mov    BYTE PTR [rdx],cl
   1400050d0:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050d8:	inc    rdx
   1400050db:	lea    r12d,[r8-0x7]
   1400050df:	add    ebx,r10d
   1400050e2:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   1400050e7:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   1400050ef:	lea    r9,[rbp-0x24]
   1400050f3:	mov    r8d,ebx
   1400050f6:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400050fa:	mov    QWORD PTR [rsp+0x20],rdi
   1400050ff:	call   QWORD PTR [rip+0x909b]        # 0x14000e1a0
   140005105:	test   eax,eax
   140005107:	je     0x140005595
   14000510d:	movsxd rdx,DWORD PTR [rbp-0x24]
   140005111:	test   edx,edx
   140005113:	js     0x140005595
   140005119:	mov    eax,ebx
   14000511b:	cmp    rdx,rax
   14000511e:	ja     0x140005595
   140005124:	lea    r8,[rip+0xffffffffffffaed5]        # 0x140000000
   14000512b:	add    r12d,edx
   14000512e:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140005136:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14000513b:	je     0x140005576
   140005141:	cmp    r13b,0x2
   140005145:	je     0x1400053d7
   14000514b:	test   edx,edx
   14000514d:	je     0x14000515c
   14000514f:	cmp    BYTE PTR [r14],0xa
   140005153:	jne    0x14000515c
   140005155:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14000515a:	jmp    0x140005161
   14000515c:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140005161:	movsxd rax,r12d
   140005164:	mov    rbx,r14
   140005167:	mov    r13,r14
   14000516a:	add    rax,r14
   14000516d:	mov    QWORD PTR [rbp-0x18],rax
   140005171:	cmp    r14,rax
   140005174:	jae    0x140005295
   14000517a:	mov    r12d,0xd
   140005180:	mov    al,BYTE PTR [r13+0x0]
   140005184:	cmp    al,0x1a
   140005186:	je     0x140005276
   14000518c:	cmp    al,r12b
   14000518f:	je     0x14000519e
   140005191:	mov    BYTE PTR [rbx],al
   140005193:	inc    rbx
   140005196:	inc    r13
   140005199:	jmp    0x14000526a
   14000519e:	mov    rax,QWORD PTR [rbp-0x18]
   1400051a2:	dec    rax
   1400051a5:	cmp    r13,rax
   1400051a8:	jae    0x1400051c1
   1400051aa:	lea    rax,[r13+0x1]
   1400051ae:	cmp    BYTE PTR [rax],0xa
   1400051b1:	jne    0x1400051b9
   1400051b3:	add    r13,0x2
   1400051b7:	jmp    0x140005237
   1400051b9:	mov    r13,rax
   1400051bc:	jmp    0x140005264
   1400051c1:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400051c9:	lea    r9,[rbp-0x24]
   1400051cd:	lea    rdx,[rbp+0x58]
   1400051d1:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400051d5:	mov    r8d,0x1
   1400051db:	inc    r13
   1400051de:	mov    QWORD PTR [rsp+0x20],rdi
   1400051e3:	call   QWORD PTR [rip+0x8fb7]        # 0x14000e1a0
   1400051e9:	test   eax,eax
   1400051eb:	jne    0x1400051f7
   1400051ed:	call   QWORD PTR [rip+0x8e85]        # 0x14000e078
   1400051f3:	test   eax,eax
   1400051f5:	jne    0x14000525d
   1400051f7:	cmp    DWORD PTR [rbp-0x24],edi
   1400051fa:	je     0x14000525d
   1400051fc:	lea    r8,[rip+0xffffffffffffadfd]        # 0x140000000
   140005203:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000520b:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140005210:	je     0x14000522c
   140005212:	cmp    BYTE PTR [rbp+0x58],0xa
   140005216:	je     0x140005237
   140005218:	mov    BYTE PTR [rbx],r12b
   14000521b:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005223:	mov    al,BYTE PTR [rbp+0x58]
   140005226:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14000522a:	jmp    0x140005267
   14000522c:	cmp    rbx,r14
   14000522f:	jne    0x14000523c
   140005231:	cmp    BYTE PTR [rbp+0x58],0xa
   140005235:	jne    0x14000523c
   140005237:	mov    BYTE PTR [rbx],0xa
   14000523a:	jmp    0x140005267
   14000523c:	mov    ecx,DWORD PTR [rbp+0x48]
   14000523f:	mov    r8d,0x1
   140005245:	or     rdx,0xffffffffffffffff
   140005249:	call   0x1400095a4
   14000524e:	cmp    BYTE PTR [rbp+0x58],0xa
   140005252:	lea    r8,[rip+0xffffffffffffada7]        # 0x140000000
   140005259:	je     0x14000526a
   14000525b:	jmp    0x140005264
   14000525d:	lea    r8,[rip+0xffffffffffffad9c]        # 0x140000000
   140005264:	mov    BYTE PTR [rbx],r12b
   140005267:	inc    rbx
   14000526a:	cmp    r13,QWORD PTR [rbp-0x18]
   14000526e:	jb     0x140005180
   140005274:	jmp    0x140005295
   140005276:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000527e:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140005283:	jne    0x14000528c
   140005285:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14000528a:	jmp    0x140005295
   14000528c:	mov    al,BYTE PTR [r13+0x0]
   140005290:	mov    BYTE PTR [rbx],al
   140005292:	inc    rbx
   140005295:	mov    r12d,ebx
   140005298:	sub    r12d,r14d
   14000529b:	cmp    BYTE PTR [rbp+0x60],0x1
   14000529f:	jne    0x140005576
   1400052a5:	test   r12d,r12d
   1400052a8:	je     0x140005576
   1400052ae:	dec    rbx
   1400052b1:	test   BYTE PTR [rbx],0x80
   1400052b4:	jne    0x1400052be
   1400052b6:	inc    rbx
   1400052b9:	jmp    0x14000536f
   1400052be:	mov    edx,0x1
   1400052c3:	jmp    0x1400052d4
   1400052c5:	cmp    edx,0x4
   1400052c8:	jg     0x1400052e1
   1400052ca:	cmp    rbx,r14
   1400052cd:	jb     0x1400052e1
   1400052cf:	dec    rbx
   1400052d2:	inc    edx
   1400052d4:	movzx  eax,BYTE PTR [rbx]
   1400052d7:	cmp    BYTE PTR [rax+r8*1+0x127f0],dil
   1400052df:	je     0x1400052c5
   1400052e1:	movzx  ecx,BYTE PTR [rbx]
   1400052e4:	movsx  eax,BYTE PTR [rcx+r8*1+0x127f0]
   1400052ed:	test   eax,eax
   1400052ef:	jne    0x140005304
   1400052f1:	call   0x140003564
   1400052f6:	mov    DWORD PTR [rax],0x2a
   1400052fc:	or     ebx,0xffffffff
   1400052ff:	jmp    0x140005579
   140005304:	inc    eax
   140005306:	cmp    eax,edx
   140005308:	jne    0x140005312
   14000530a:	movsxd rax,edx
   14000530d:	add    rbx,rax
   140005310:	jmp    0x14000536f
   140005312:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000531a:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000531f:	je     0x14000535c
   140005321:	inc    rbx
   140005324:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   140005328:	cmp    edx,0x2
   14000532b:	jl     0x14000533e
   14000532d:	mov    al,BYTE PTR [rbx]
   14000532f:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005337:	inc    rbx
   14000533a:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14000533e:	cmp    edx,0x3
   140005341:	jne    0x140005354
   140005343:	mov    al,BYTE PTR [rbx]
   140005345:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   14000534d:	inc    rbx
   140005350:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140005354:	movsxd rax,edx
   140005357:	sub    rbx,rax
   14000535a:	jmp    0x14000536f
   14000535c:	mov    ecx,DWORD PTR [rbp+0x48]
   14000535f:	neg    edx
   140005361:	mov    r8d,0x1
   140005367:	movsxd rdx,edx
   14000536a:	call   0x1400095a4
   14000536f:	mov    eax,DWORD PTR [rbp-0x1c]
   140005372:	mov    r13,QWORD PTR [rbp+0x50]
   140005376:	sub    ebx,r14d
   140005379:	shr    eax,1
   14000537b:	mov    r9d,ebx
   14000537e:	mov    r8,r14
   140005381:	mov    DWORD PTR [rsp+0x28],eax
   140005385:	xor    edx,edx
   140005387:	mov    ecx,0xfde9
   14000538c:	mov    QWORD PTR [rsp+0x20],r13
   140005391:	call   QWORD PTR [rip+0x8cc9]        # 0x14000e060
   140005397:	mov    r12d,eax
   14000539a:	test   eax,eax
   14000539c:	jne    0x1400053b3
   14000539e:	call   QWORD PTR [rip+0x8cd4]        # 0x14000e078
   1400053a4:	mov    ecx,eax
   1400053a6:	call   0x1400035a4
   1400053ab:	or     ebx,0xffffffff
   1400053ae:	jmp    0x14000557d
   1400053b3:	cmp    eax,ebx
   1400053b5:	mov    ebx,DWORD PTR [rbp-0x20]
   1400053b8:	lea    rax,[rip+0xffffffffffffac41]        # 0x140000000
   1400053bf:	mov    rax,QWORD PTR [rax+r15*8+0x14620]
   1400053c7:	setne  dil
   1400053cb:	add    r12d,r12d
   1400053ce:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   1400053d2:	jmp    0x14000557d
   1400053d7:	test   edx,edx
   1400053d9:	mov    edx,0xa
   1400053de:	je     0x1400053ed
   1400053e0:	cmp    WORD PTR [r14],dx
   1400053e4:	jne    0x1400053ed
   1400053e6:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400053eb:	jmp    0x1400053f2
   1400053ed:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400053f2:	movsxd rax,r12d
   1400053f5:	mov    rbx,r14
   1400053f8:	mov    r13,r14
   1400053fb:	add    rax,r14
   1400053fe:	mov    QWORD PTR [rbp+0x60],rax
   140005402:	cmp    r14,rax
   140005405:	jae    0x140005570
   14000540b:	mov    r12d,0xd
   140005411:	movzx  eax,WORD PTR [r13+0x0]
   140005416:	cmp    ax,0x1a
   14000541a:	je     0x14000554e
   140005420:	cmp    ax,r12w
   140005424:	je     0x140005436
   140005426:	mov    WORD PTR [rbx],ax
   140005429:	add    rbx,0x2
   14000542d:	add    r13,0x2
   140005431:	jmp    0x140005542
   140005436:	mov    rax,QWORD PTR [rbp+0x60]
   14000543a:	add    rax,0xfffffffffffffffe
   14000543e:	cmp    r13,rax
   140005441:	jae    0x14000545d
   140005443:	lea    rax,[r13+0x2]
   140005447:	cmp    WORD PTR [rax],dx
   14000544a:	jne    0x140005455
   14000544c:	add    r13,0x4
   140005450:	jmp    0x140005502
   140005455:	mov    r13,rax
   140005458:	jmp    0x14000553a
   14000545d:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005465:	lea    r9,[rbp-0x24]
   140005469:	lea    rdx,[rbp-0x28]
   14000546d:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140005471:	mov    r8d,0x2
   140005477:	add    r13,0x2
   14000547b:	mov    QWORD PTR [rsp+0x20],rdi
   140005480:	call   QWORD PTR [rip+0x8d1a]        # 0x14000e1a0
   140005486:	test   eax,eax
   140005488:	jne    0x140005498
   14000548a:	call   QWORD PTR [rip+0x8be8]        # 0x14000e078
   140005490:	test   eax,eax
   140005492:	jne    0x14000552e
   140005498:	cmp    DWORD PTR [rbp-0x24],edi
   14000549b:	je     0x14000552e
   1400054a1:	lea    r8,[rip+0xffffffffffffab58]        # 0x140000000
   1400054a8:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400054b0:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400054b5:	je     0x1400054f2
   1400054b7:	mov    edx,0xa
   1400054bc:	cmp    WORD PTR [rbp-0x28],dx
   1400054c0:	je     0x140005502
   1400054c2:	mov    WORD PTR [rbx],r12w
   1400054c6:	mov    al,BYTE PTR [rbp-0x28]
   1400054c9:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400054d1:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400054d5:	mov    al,BYTE PTR [rbp-0x27]
   1400054d8:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400054e0:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400054e4:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400054ec:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   1400054f0:	jmp    0x14000553e
   1400054f2:	cmp    rbx,r14
   1400054f5:	jne    0x140005507
   1400054f7:	mov    edx,0xa
   1400054fc:	cmp    WORD PTR [rbp-0x28],dx
   140005500:	jne    0x140005507
   140005502:	mov    WORD PTR [rbx],dx
   140005505:	jmp    0x14000553e
   140005507:	mov    ecx,DWORD PTR [rbp+0x48]
   14000550a:	mov    rdx,0xfffffffffffffffe
   140005511:	lea    r8d,[rdx+0x3]
   140005515:	call   0x1400095a4
   14000551a:	mov    edx,0xa
   14000551f:	lea    r8,[rip+0xffffffffffffaada]        # 0x140000000
   140005526:	cmp    WORD PTR [rbp-0x28],dx
   14000552a:	je     0x140005542
   14000552c:	jmp    0x14000553a
   14000552e:	mov    edx,0xa
   140005533:	lea    r8,[rip+0xffffffffffffaac6]        # 0x140000000
   14000553a:	mov    WORD PTR [rbx],r12w
   14000553e:	add    rbx,0x2
   140005542:	cmp    r13,QWORD PTR [rbp+0x60]
   140005546:	jb     0x140005411
   14000554c:	jmp    0x140005570
   14000554e:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140005556:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14000555b:	jne    0x140005564
   14000555d:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140005562:	jmp    0x140005570
   140005564:	movzx  eax,WORD PTR [r13+0x0]
   140005569:	mov    WORD PTR [rbx],ax
   14000556c:	add    rbx,0x2
   140005570:	mov    r12d,ebx
   140005573:	sub    r12d,r14d
   140005576:	mov    ebx,DWORD PTR [rbp-0x20]
   140005579:	mov    r13,QWORD PTR [rbp+0x50]
   14000557d:	cmp    r14,r13
   140005580:	je     0x14000558a
   140005582:	mov    rcx,r14
   140005585:	call   0x140001eb4
   14000558a:	cmp    ebx,0xfffffffe
   14000558d:	cmove  ebx,r12d
   140005591:	mov    eax,ebx
   140005593:	jmp    0x1400055ee
   140005595:	call   QWORD PTR [rip+0x8add]        # 0x14000e078
   14000559b:	cmp    eax,0x5
   14000559e:	jne    0x1400055bb
   1400055a0:	call   0x140003564
   1400055a5:	mov    DWORD PTR [rax],0x9
   1400055ab:	call   0x140003584
   1400055b0:	mov    DWORD PTR [rax],0x5
   1400055b6:	jmp    0x1400052fc
   1400055bb:	cmp    eax,0x6d
   1400055be:	jne    0x1400055c4
   1400055c0:	mov    ebx,edi
   1400055c2:	jmp    0x140005579
   1400055c4:	mov    ecx,eax
   1400055c6:	call   0x1400035a4
   1400055cb:	jmp    0x1400052fc
   1400055d0:	xor    eax,eax
   1400055d2:	jmp    0x1400055ee
   1400055d4:	call   0x140003584
   1400055d9:	mov    DWORD PTR [rax],edi
   1400055db:	call   0x140003564
   1400055e0:	mov    DWORD PTR [rax],0x9
   1400055e6:	call   0x1400034fc
   1400055eb:	or     eax,0xffffffff
   1400055ee:	add    rsp,0x58
   1400055f2:	pop    r15
   1400055f4:	pop    r14
   1400055f6:	pop    r13
   1400055f8:	pop    r12
   1400055fa:	pop    rdi
   1400055fb:	pop    rsi
   1400055fc:	pop    rbx
   1400055fd:	pop    rbp
   1400055fe:	ret    
   1400055ff:	int3   
   140005600:	mov    QWORD PTR [rsp+0x10],rbx
   140005605:	mov    QWORD PTR [rsp+0x18],rsi
   14000560a:	mov    DWORD PTR [rsp+0x8],ecx
   14000560e:	push   rdi
   14000560f:	push   r12
   140005611:	push   r13
   140005613:	push   r14
   140005615:	push   r15
   140005617:	sub    rsp,0x20
   14000561b:	mov    esi,r8d
   14000561e:	mov    r13,rdx
   140005621:	movsxd rdi,ecx
   140005624:	cmp    edi,0xfffffffe
   140005627:	jne    0x140005642
   140005629:	call   0x140003584
   14000562e:	xor    ebx,ebx
   140005630:	mov    DWORD PTR [rax],ebx
   140005632:	call   0x140003564
   140005637:	mov    DWORD PTR [rax],0x9
   14000563d:	jmp    0x140005700
   140005642:	xor    ebx,ebx
   140005644:	test   ecx,ecx
   140005646:	js     0x1400056e9
   14000564c:	cmp    edi,DWORD PTR [rip+0xefca]        # 0x14001461c
   140005652:	jae    0x1400056e9
   140005658:	mov    r12,rdi
   14000565b:	mov    r14,rdi
   14000565e:	sar    r14,0x5
   140005662:	lea    r15,[rip+0xefb7]        # 0x140014620
   140005669:	and    r12d,0x1f
   14000566d:	imul   r12,r12,0x58
   140005671:	mov    rax,QWORD PTR [r15+r14*8]
   140005675:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14000567b:	and    ecx,0x1
   14000567e:	je     0x1400056e9
   140005680:	mov    eax,ebx
   140005682:	cmp    r8d,0x7fffffff
   140005689:	setbe  al
   14000568c:	test   eax,eax
   14000568e:	jne    0x1400056a4
   140005690:	call   0x140003584
   140005695:	mov    DWORD PTR [rax],ebx
   140005697:	call   0x140003564
   14000569c:	mov    DWORD PTR [rax],0x16
   1400056a2:	jmp    0x1400056fb
   1400056a4:	mov    ecx,edi
   1400056a6:	call   0x14000b290
   1400056ab:	nop
   1400056ac:	mov    rax,QWORD PTR [r15+r14*8]
   1400056b0:	test   BYTE PTR [rax+r12*1+0x8],0x1
   1400056b6:	je     0x1400056c9
   1400056b8:	mov    r8d,esi
   1400056bb:	mov    rdx,r13
   1400056be:	mov    ecx,edi
   1400056c0:	call   0x140004edc
   1400056c5:	mov    ebx,eax
   1400056c7:	jmp    0x1400056de
   1400056c9:	call   0x140003564
   1400056ce:	mov    DWORD PTR [rax],0x9
   1400056d4:	call   0x140003584
   1400056d9:	mov    DWORD PTR [rax],ebx
   1400056db:	or     ebx,0xffffffff
   1400056de:	mov    ecx,edi
   1400056e0:	call   0x14000b338
   1400056e5:	mov    eax,ebx
   1400056e7:	jmp    0x140005703
   1400056e9:	call   0x140003584
   1400056ee:	mov    DWORD PTR [rax],ebx
   1400056f0:	call   0x140003564
   1400056f5:	mov    DWORD PTR [rax],0x9
   1400056fb:	call   0x1400034fc
   140005700:	or     eax,0xffffffff
   140005703:	mov    rbx,QWORD PTR [rsp+0x58]
   140005708:	mov    rsi,QWORD PTR [rsp+0x60]
   14000570d:	add    rsp,0x20
   140005711:	pop    r15
   140005713:	pop    r14
   140005715:	pop    r13
   140005717:	pop    r12
   140005719:	pop    rdi
   14000571a:	ret    
   14000571b:	int3   
   14000571c:	sub    rsp,0x28
   140005720:	test   rcx,rcx
   140005723:	jne    0x14000573a
   140005725:	call   0x140003564
   14000572a:	mov    DWORD PTR [rax],0x16
   140005730:	call   0x1400034fc
   140005735:	or     eax,0xffffffff
   140005738:	jmp    0x14000573d
   14000573a:	mov    eax,DWORD PTR [rcx+0x1c]
   14000573d:	add    rsp,0x28
   140005741:	ret    
   140005742:	int3   
   140005743:	int3   
   140005744:	mov    QWORD PTR [rsp+0x8],rbx
   140005749:	mov    QWORD PTR [rsp+0x10],rsi
   14000574e:	push   rdi
   14000574f:	sub    rsp,0x20
   140005753:	mov    rbx,r9
   140005756:	mov    rsi,r8
   140005759:	mov    rdi,rdx
   14000575c:	test   r9,r9
   14000575f:	jne    0x140005765
   140005761:	xor    eax,eax
   140005763:	jmp    0x1400057bb
   140005765:	test   rcx,rcx
   140005768:	jne    0x14000577f
   14000576a:	call   0x140003564
   14000576f:	mov    ebx,0x16
   140005774:	mov    DWORD PTR [rax],ebx
   140005776:	call   0x1400034fc
   14000577b:	mov    eax,ebx
   14000577d:	jmp    0x1400057bb
   14000577f:	test   r8,r8
   140005782:	je     0x140005796
   140005784:	cmp    rdx,rbx
   140005787:	jb     0x140005796
   140005789:	mov    r8,rbx
   14000578c:	mov    rdx,rsi
   14000578f:	call   0x140007580
   140005794:	jmp    0x140005761
   140005796:	mov    r8,rdx
   140005799:	xor    edx,edx
   14000579b:	call   0x140004a30
   1400057a0:	test   rsi,rsi
   1400057a3:	je     0x14000576a
   1400057a5:	cmp    rdi,rbx
   1400057a8:	jae    0x1400057b6
   1400057aa:	call   0x140003564
   1400057af:	mov    ebx,0x22
   1400057b4:	jmp    0x140005774
   1400057b6:	mov    eax,0x16
   1400057bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057c0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400057c5:	add    rsp,0x20
   1400057c9:	pop    rdi
   1400057ca:	ret    
   1400057cb:	int3   
   1400057cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400057d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400057d6:	mov    QWORD PTR [rsp+0x18],rdi
   1400057db:	push   r12
   1400057dd:	push   r13
   1400057df:	push   r14
   1400057e1:	sub    rsp,0x90
   1400057e8:	lea    rcx,[rsp+0x20]
   1400057ed:	call   QWORD PTR [rip+0x88e5]        # 0x14000e0d8
   1400057f3:	mov    edx,0x58
   1400057f8:	lea    ebp,[rdx-0x38]
   1400057fb:	mov    ecx,ebp
   1400057fd:	call   0x140006860
   140005802:	xor    r14d,r14d
   140005805:	mov    rdx,rax
   140005808:	test   rax,rax
   14000580b:	jne    0x140005815
   14000580d:	or     eax,0xffffffff
   140005810:	jmp    0x140005a80
   140005815:	mov    QWORD PTR [rip+0xee04],rax        # 0x140014620
   14000581c:	add    rax,0xb00
   140005822:	mov    ecx,ebp
   140005824:	mov    DWORD PTR [rip+0xedf2],ecx        # 0x14001461c
   14000582a:	cmp    rdx,rax
   14000582d:	jae    0x140005874
   14000582f:	add    rdx,0x9
   140005833:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140005838:	mov    WORD PTR [rdx-0x1],0xa00
   14000583e:	mov    DWORD PTR [rdx+0x3],r14d
   140005842:	mov    WORD PTR [rdx+0x2f],0xa00
   140005848:	mov    BYTE PTR [rdx+0x31],0xa
   14000584c:	mov    DWORD PTR [rdx+0x47],r14d
   140005850:	mov    BYTE PTR [rdx+0x43],r14b
   140005854:	mov    rax,QWORD PTR [rip+0xedc5]        # 0x140014620
   14000585b:	add    rdx,0x58
   14000585f:	lea    rcx,[rdx-0x9]
   140005863:	add    rax,0xb00
   140005869:	cmp    rcx,rax
   14000586c:	jb     0x140005833
   14000586e:	mov    ecx,DWORD PTR [rip+0xeda8]        # 0x14001461c
   140005874:	cmp    WORD PTR [rsp+0x62],r14w
   14000587a:	je     0x1400059b4
   140005880:	mov    rax,QWORD PTR [rsp+0x68]
   140005885:	test   rax,rax
   140005888:	je     0x1400059b4
   14000588e:	movsxd r12,DWORD PTR [rax]
   140005891:	mov    ebx,0x800
   140005896:	lea    r13,[rax+0x4]
   14000589a:	add    r12,r13
   14000589d:	cmp    DWORD PTR [rax],ebx
   14000589f:	cmovl  ebx,DWORD PTR [rax]
   1400058a2:	cmp    ecx,ebx
   1400058a4:	jge    0x140005931
   1400058aa:	lea    rdi,[rip+0xed77]        # 0x140014628
   1400058b1:	mov    edx,0x58
   1400058b6:	mov    rcx,rbp
   1400058b9:	call   0x140006860
   1400058be:	test   rax,rax
   1400058c1:	je     0x14000592b
   1400058c3:	mov    edx,DWORD PTR [rip+0xed53]        # 0x14001461c
   1400058c9:	lea    rcx,[rax+0xb00]
   1400058d0:	mov    QWORD PTR [rdi],rax
   1400058d3:	add    edx,ebp
   1400058d5:	mov    DWORD PTR [rip+0xed41],edx        # 0x14001461c
   1400058db:	cmp    rax,rcx
   1400058de:	jae    0x140005921
   1400058e0:	lea    rdx,[rax+0x9]
   1400058e4:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   1400058e9:	and    BYTE PTR [rdx+0x2f],0x80
   1400058ed:	mov    WORD PTR [rdx-0x1],0xa00
   1400058f3:	mov    DWORD PTR [rdx+0x3],r14d
   1400058f7:	mov    WORD PTR [rdx+0x30],0xa0a
   1400058fd:	mov    DWORD PTR [rdx+0x47],r14d
   140005901:	mov    BYTE PTR [rdx+0x43],r14b
   140005905:	mov    rax,QWORD PTR [rdi]
   140005908:	add    rdx,0x58
   14000590c:	lea    rcx,[rdx-0x9]
   140005910:	add    rax,0xb00
   140005916:	cmp    rcx,rax
   140005919:	jb     0x1400058e4
   14000591b:	mov    edx,DWORD PTR [rip+0xecfb]        # 0x14001461c
   140005921:	add    rdi,0x8
   140005925:	cmp    edx,ebx
   140005927:	jl     0x1400058b1
   140005929:	jmp    0x140005931
   14000592b:	mov    ebx,DWORD PTR [rip+0xeceb]        # 0x14001461c
   140005931:	mov    edi,r14d
   140005934:	test   ebx,ebx
   140005936:	jle    0x1400059b4
   140005938:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000593d:	je     0x1400059a7
   14000593f:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140005944:	je     0x1400059a7
   140005946:	test   BYTE PTR [r13+0x0],0x1
   14000594b:	je     0x1400059a7
   14000594d:	test   BYTE PTR [r13+0x0],0x8
   140005952:	jne    0x140005962
   140005954:	mov    rcx,QWORD PTR [r12]
   140005958:	call   QWORD PTR [rip+0x8852]        # 0x14000e1b0
   14000595e:	test   eax,eax
   140005960:	je     0x1400059a7
   140005962:	movsxd rbp,edi
   140005965:	lea    rcx,[rip+0xecb4]        # 0x140014620
   14000596c:	mov    edx,0xfa0
   140005971:	mov    rax,rbp
   140005974:	and    ebp,0x1f
   140005977:	sar    rax,0x5
   14000597b:	imul   rbp,rbp,0x58
   14000597f:	add    rbp,QWORD PTR [rcx+rax*8]
   140005983:	mov    rax,QWORD PTR [r12]
   140005987:	mov    QWORD PTR [rbp+0x0],rax
   14000598b:	mov    al,BYTE PTR [r13+0x0]
   14000598f:	lea    rcx,[rbp+0x10]
   140005993:	mov    BYTE PTR [rbp+0x8],al
   140005996:	call   QWORD PTR [rip+0x8794]        # 0x14000e130
   14000599c:	test   eax,eax
   14000599e:	je     0x14000580d
   1400059a4:	inc    DWORD PTR [rbp+0xc]
   1400059a7:	inc    edi
   1400059a9:	inc    r13
   1400059ac:	add    r12,0x8
   1400059b0:	cmp    edi,ebx
   1400059b2:	jl     0x140005938
   1400059b4:	mov    r12d,r14d
   1400059b7:	mov    rbx,r14
   1400059ba:	mov    rdi,QWORD PTR [rip+0xec5f]        # 0x140014620
   1400059c1:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   1400059c6:	je     0x1400059d9
   1400059c8:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   1400059cd:	je     0x1400059d9
   1400059cf:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   1400059d4:	jmp    0x140005a5e
   1400059d9:	lea    eax,[r12-0x1]
   1400059de:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   1400059e3:	neg    eax
   1400059e5:	mov    eax,0xfffffff6
   1400059ea:	sbb    ecx,ecx
   1400059ec:	add    ecx,0xfffffff5
   1400059ef:	test   r12d,r12d
   1400059f2:	cmove  ecx,eax
   1400059f5:	call   QWORD PTR [rip+0x8675]        # 0x14000e070
   1400059fb:	mov    rbp,rax
   1400059fe:	cmp    rax,0xffffffffffffffff
   140005a02:	je     0x140005a51
   140005a04:	test   rax,rax
   140005a07:	je     0x140005a51
   140005a09:	mov    rcx,rax
   140005a0c:	call   QWORD PTR [rip+0x879e]        # 0x14000e1b0
   140005a12:	test   eax,eax
   140005a14:	je     0x140005a51
   140005a16:	movzx  eax,al
   140005a19:	mov    QWORD PTR [rbx+rdi*1],rbp
   140005a1d:	cmp    eax,0x2
   140005a20:	jne    0x140005a29
   140005a22:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005a27:	jmp    0x140005a33
   140005a29:	cmp    eax,0x3
   140005a2c:	jne    0x140005a33
   140005a2e:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   140005a33:	lea    rcx,[rbx+rdi*1+0x10]
   140005a38:	mov    edx,0xfa0
   140005a3d:	call   QWORD PTR [rip+0x86ed]        # 0x14000e130
   140005a43:	test   eax,eax
   140005a45:	je     0x14000580d
   140005a4b:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140005a4f:	jmp    0x140005a5e
   140005a51:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005a56:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140005a5e:	add    rbx,0x58
   140005a62:	inc    r12d
   140005a65:	cmp    rbx,0x108
   140005a6c:	jl     0x1400059ba
   140005a72:	mov    ecx,DWORD PTR [rip+0xeba4]        # 0x14001461c
   140005a78:	call   QWORD PTR [rip+0x872a]        # 0x14000e1a8
   140005a7e:	xor    eax,eax
   140005a80:	lea    r11,[rsp+0x90]
   140005a88:	mov    rbx,QWORD PTR [r11+0x20]
   140005a8c:	mov    rbp,QWORD PTR [r11+0x28]
   140005a90:	mov    rdi,QWORD PTR [r11+0x30]
   140005a94:	mov    rsp,r11
   140005a97:	pop    r14
   140005a99:	pop    r13
   140005a9b:	pop    r12
   140005a9d:	ret    
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140005aa5:	mov    QWORD PTR [rsp+0x10],rsi
   140005aaa:	push   rdi
   140005aab:	sub    rsp,0x20
   140005aaf:	movsxd rbx,ecx
   140005ab2:	mov    edi,r8d
   140005ab5:	mov    esi,edx
   140005ab7:	mov    ecx,ebx
   140005ab9:	call   0x14000b21c
   140005abe:	cmp    rax,0xffffffffffffffff
   140005ac2:	jne    0x140005ad4
   140005ac4:	call   0x140003564
   140005ac9:	mov    DWORD PTR [rax],0x9
   140005acf:	or     eax,0xffffffff
   140005ad2:	jmp    0x140005b26
   140005ad4:	mov    r9d,edi
   140005ad7:	xor    r8d,r8d
   140005ada:	mov    edx,esi
   140005adc:	mov    rcx,rax
   140005adf:	call   QWORD PTR [rip+0x86d3]        # 0x14000e1b8
   140005ae5:	mov    edi,eax
   140005ae7:	cmp    eax,0xffffffff
   140005aea:	jne    0x140005af4
   140005aec:	call   QWORD PTR [rip+0x8586]        # 0x14000e078
   140005af2:	jmp    0x140005af6
   140005af4:	xor    eax,eax
   140005af6:	test   eax,eax
   140005af8:	je     0x140005b03
   140005afa:	mov    ecx,eax
   140005afc:	call   0x1400035a4
   140005b01:	jmp    0x140005acf
   140005b03:	mov    rcx,rbx
   140005b06:	mov    rax,rbx
   140005b09:	lea    rdx,[rip+0xeb10]        # 0x140014620
   140005b10:	sar    rax,0x5
   140005b14:	and    ecx,0x1f
   140005b17:	mov    rax,QWORD PTR [rdx+rax*8]
   140005b1b:	imul   rcx,rcx,0x58
   140005b1f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140005b24:	mov    eax,edi
   140005b26:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b2b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b30:	add    rsp,0x20
   140005b34:	pop    rdi
   140005b35:	ret    
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	mov    QWORD PTR [rsp+0x10],rbx
   140005b3d:	mov    DWORD PTR [rsp+0x8],ecx
   140005b41:	push   rsi
   140005b42:	push   rdi
   140005b43:	push   r12
   140005b45:	push   r13
   140005b47:	push   r14
   140005b49:	sub    rsp,0x20
   140005b4d:	mov    esi,r8d
   140005b50:	mov    r12d,edx
   140005b53:	movsxd rdi,ecx
   140005b56:	cmp    edi,0xfffffffe
   140005b59:	jne    0x140005b73
   140005b5b:	call   0x140003584
   140005b60:	and    DWORD PTR [rax],0x0
   140005b63:	call   0x140003564
   140005b68:	mov    DWORD PTR [rax],0x9
   140005b6e:	jmp    0x140005c02
   140005b73:	test   ecx,ecx
   140005b75:	js     0x140005bea
   140005b77:	cmp    edi,DWORD PTR [rip+0xea9f]        # 0x14001461c
   140005b7d:	jae    0x140005bea
   140005b7f:	mov    rbx,rdi
   140005b82:	mov    r13,rdi
   140005b85:	sar    r13,0x5
   140005b89:	lea    r14,[rip+0xea90]        # 0x140014620
   140005b90:	and    ebx,0x1f
   140005b93:	imul   rbx,rbx,0x58
   140005b97:	mov    rax,QWORD PTR [r14+r13*8]
   140005b9b:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140005ba0:	and    ecx,0x1
   140005ba3:	je     0x140005bea
   140005ba5:	mov    ecx,edi
   140005ba7:	call   0x14000b290
   140005bac:	nop
   140005bad:	mov    rax,QWORD PTR [r14+r13*8]
   140005bb1:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140005bb6:	je     0x140005bc9
   140005bb8:	mov    r8d,esi
   140005bbb:	mov    edx,r12d
   140005bbe:	mov    ecx,edi
   140005bc0:	call   0x140005aa0
   140005bc5:	mov    ebx,eax
   140005bc7:	jmp    0x140005bdf
   140005bc9:	call   0x140003564
   140005bce:	mov    DWORD PTR [rax],0x9
   140005bd4:	call   0x140003584
   140005bd9:	and    DWORD PTR [rax],0x0
   140005bdc:	or     ebx,0xffffffff
   140005bdf:	mov    ecx,edi
   140005be1:	call   0x14000b338
   140005be6:	mov    eax,ebx
   140005be8:	jmp    0x140005c05
   140005bea:	call   0x140003584
   140005bef:	and    DWORD PTR [rax],0x0
   140005bf2:	call   0x140003564
   140005bf7:	mov    DWORD PTR [rax],0x9
   140005bfd:	call   0x1400034fc
   140005c02:	or     eax,0xffffffff
   140005c05:	mov    rbx,QWORD PTR [rsp+0x58]
   140005c0a:	add    rsp,0x20
   140005c0e:	pop    r14
   140005c10:	pop    r13
   140005c12:	pop    r12
   140005c14:	pop    rdi
   140005c15:	pop    rsi
   140005c16:	ret    
   140005c17:	int3   
   140005c18:	mov    QWORD PTR [rsp+0x8],rbx
   140005c1d:	mov    QWORD PTR [rsp+0x10],rsi
   140005c22:	push   rdi
   140005c23:	sub    rsp,0x20
   140005c27:	mov    eax,DWORD PTR [rcx+0x18]
   140005c2a:	xor    esi,esi
   140005c2c:	mov    rbx,rcx
   140005c2f:	and    al,0x3
   140005c31:	cmp    al,0x2
   140005c33:	jne    0x140005c74
   140005c35:	test   DWORD PTR [rcx+0x18],0x108
   140005c3c:	je     0x140005c74
   140005c3e:	mov    edi,DWORD PTR [rcx]
   140005c40:	sub    edi,DWORD PTR [rcx+0x10]
   140005c43:	test   edi,edi
   140005c45:	jle    0x140005c74
   140005c47:	call   0x14000571c
   140005c4c:	mov    rdx,QWORD PTR [rbx+0x10]
   140005c50:	mov    r8d,edi
   140005c53:	mov    ecx,eax
   140005c55:	call   0x140009e80
   140005c5a:	cmp    eax,edi
   140005c5c:	jne    0x140005c6d
   140005c5e:	mov    eax,DWORD PTR [rbx+0x18]
   140005c61:	test   al,al
   140005c63:	jns    0x140005c74
   140005c65:	and    eax,0xfffffffd
   140005c68:	mov    DWORD PTR [rbx+0x18],eax
   140005c6b:	jmp    0x140005c74
   140005c6d:	or     DWORD PTR [rbx+0x18],0x20
   140005c71:	or     esi,0xffffffff
   140005c74:	mov    rcx,QWORD PTR [rbx+0x10]
   140005c78:	and    DWORD PTR [rbx+0x8],0x0
   140005c7c:	mov    eax,esi
   140005c7e:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c83:	mov    QWORD PTR [rbx],rcx
   140005c86:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c8b:	add    rsp,0x20
   140005c8f:	pop    rdi
   140005c90:	ret    
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	rex push rbx
   140005c96:	sub    rsp,0x20
   140005c9a:	mov    rbx,rcx
   140005c9d:	test   rcx,rcx
   140005ca0:	jne    0x140005cac
   140005ca2:	add    rsp,0x20
   140005ca6:	pop    rbx
   140005ca7:	jmp    0x140005ce0
   140005cac:	call   0x140005c18
   140005cb1:	test   eax,eax
   140005cb3:	je     0x140005cba
   140005cb5:	or     eax,0xffffffff
   140005cb8:	jmp    0x140005cda
   140005cba:	test   DWORD PTR [rbx+0x18],0x4000
   140005cc1:	je     0x140005cd8
   140005cc3:	mov    rcx,rbx
   140005cc6:	call   0x14000571c
   140005ccb:	mov    ecx,eax
   140005ccd:	call   0x14000b568
   140005cd2:	neg    eax
   140005cd4:	sbb    eax,eax
   140005cd6:	jmp    0x140005cda
   140005cd8:	xor    eax,eax
   140005cda:	add    rsp,0x20
   140005cde:	pop    rbx
   140005cdf:	ret    
   140005ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ce5:	mov    QWORD PTR [rsp+0x10],rsi
   140005cea:	mov    QWORD PTR [rsp+0x18],rdi
   140005cef:	push   r12
   140005cf1:	push   r13
   140005cf3:	push   r15
   140005cf5:	sub    rsp,0x30
   140005cf9:	mov    r13d,ecx
   140005cfc:	xor    esi,esi
   140005cfe:	xor    edi,edi
   140005d00:	lea    ecx,[rsi+0x1]
   140005d03:	call   0x140003870
   140005d08:	nop
   140005d09:	xor    ebx,ebx
   140005d0b:	or     r15d,0xffffffff
   140005d0f:	mov    DWORD PTR [rsp+0x20],ebx
   140005d13:	cmp    ebx,DWORD PTR [rip+0xfb27]        # 0x140015840
   140005d19:	jge    0x140005d9f
   140005d1f:	movsxd r12,ebx
   140005d22:	mov    rax,QWORD PTR [rip+0xeaf7]        # 0x140014820
   140005d29:	cmp    QWORD PTR [rax+r12*8],0x0
   140005d2e:	je     0x140005d98
   140005d30:	mov    rdx,QWORD PTR [rax+r12*8]
   140005d34:	test   BYTE PTR [rdx+0x18],0x83
   140005d38:	je     0x140005d98
   140005d3a:	mov    ecx,ebx
   140005d3c:	call   0x140002e2c
   140005d41:	nop
   140005d42:	mov    rax,QWORD PTR [rip+0xead7]        # 0x140014820
   140005d49:	mov    rcx,QWORD PTR [rax+r12*8]
   140005d4d:	test   BYTE PTR [rcx+0x18],0x83
   140005d51:	je     0x140005d86
   140005d53:	cmp    r13d,0x1
   140005d57:	jne    0x140005d6b
   140005d59:	call   0x140005c94
   140005d5e:	cmp    eax,r15d
   140005d61:	je     0x140005d86
   140005d63:	inc    esi
   140005d65:	mov    DWORD PTR [rsp+0x24],esi
   140005d69:	jmp    0x140005d86
   140005d6b:	test   r13d,r13d
   140005d6e:	jne    0x140005d86
   140005d70:	test   BYTE PTR [rcx+0x18],0x2
   140005d74:	je     0x140005d86
   140005d76:	call   0x140005c94
   140005d7b:	cmp    eax,r15d
   140005d7e:	cmove  edi,r15d
   140005d82:	mov    DWORD PTR [rsp+0x28],edi
   140005d86:	mov    rdx,QWORD PTR [rip+0xea93]        # 0x140014820
   140005d8d:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005d91:	mov    ecx,ebx
   140005d93:	call   0x140002eac
   140005d98:	inc    ebx
   140005d9a:	jmp    0x140005d0f
   140005d9f:	mov    ecx,0x1
   140005da4:	call   0x140003770
   140005da9:	cmp    r13d,0x1
   140005dad:	cmove  edi,esi
   140005db0:	mov    eax,edi
   140005db2:	mov    rbx,QWORD PTR [rsp+0x50]
   140005db7:	mov    rsi,QWORD PTR [rsp+0x58]
   140005dbc:	mov    rdi,QWORD PTR [rsp+0x60]
   140005dc1:	add    rsp,0x30
   140005dc5:	pop    r15
   140005dc7:	pop    r13
   140005dc9:	pop    r12
   140005dcb:	ret    
   140005dcc:	mov    ecx,0x1
   140005dd1:	jmp    0x140005ce0
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	mov    QWORD PTR [rsp+0x8],rbx
   140005ddd:	push   rdi
   140005dde:	sub    rsp,0x20
   140005de2:	movsxd rdi,ecx
   140005de5:	mov    ecx,edi
   140005de7:	call   0x14000b21c
   140005dec:	cmp    rax,0xffffffffffffffff
   140005df0:	je     0x140005e4b
   140005df2:	mov    rax,QWORD PTR [rip+0xe827]        # 0x140014620
   140005df9:	mov    ecx,0x2
   140005dfe:	cmp    edi,0x1
   140005e01:	jne    0x140005e0c
   140005e03:	test   BYTE PTR [rax+0xb8],dil
   140005e0a:	jne    0x140005e16
   140005e0c:	cmp    edi,ecx
   140005e0e:	jne    0x140005e2d
   140005e10:	test   BYTE PTR [rax+0x60],0x1
   140005e14:	je     0x140005e2d
   140005e16:	call   0x14000b21c
   140005e1b:	mov    ecx,0x1
   140005e20:	mov    rbx,rax
   140005e23:	call   0x14000b21c
   140005e28:	cmp    rax,rbx
   140005e2b:	je     0x140005e4b
   140005e2d:	mov    ecx,edi
   140005e2f:	call   0x14000b21c
   140005e34:	mov    rcx,rax
   140005e37:	call   QWORD PTR [rip+0x8263]        # 0x14000e0a0
   140005e3d:	test   eax,eax
   140005e3f:	jne    0x140005e4b
   140005e41:	call   QWORD PTR [rip+0x8231]        # 0x14000e078
   140005e47:	mov    ebx,eax
   140005e49:	jmp    0x140005e4d
   140005e4b:	xor    ebx,ebx
   140005e4d:	mov    ecx,edi
   140005e4f:	call   0x14000b170
   140005e54:	mov    r11,rdi
   140005e57:	mov    rcx,rdi
   140005e5a:	sar    rcx,0x5
   140005e5e:	and    r11d,0x1f
   140005e62:	lea    rdx,[rip+0xe7b7]        # 0x140014620
   140005e69:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140005e6d:	imul   r11,r11,0x58
   140005e71:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140005e77:	test   ebx,ebx
   140005e79:	je     0x140005e87
   140005e7b:	mov    ecx,ebx
   140005e7d:	call   0x1400035a4
   140005e82:	or     eax,0xffffffff
   140005e85:	jmp    0x140005e89
   140005e87:	xor    eax,eax
   140005e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e8e:	add    rsp,0x20
   140005e92:	pop    rdi
   140005e93:	ret    
   140005e94:	mov    QWORD PTR [rsp+0x18],rbx
   140005e99:	mov    DWORD PTR [rsp+0x8],ecx
   140005e9d:	push   rsi
   140005e9e:	push   rdi
   140005e9f:	push   r12
   140005ea1:	sub    rsp,0x20
   140005ea5:	movsxd rbx,ecx
   140005ea8:	cmp    ebx,0xfffffffe
   140005eab:	jne    0x140005ec5
   140005ead:	call   0x140003584
   140005eb2:	and    DWORD PTR [rax],0x0
   140005eb5:	call   0x140003564
   140005eba:	mov    DWORD PTR [rax],0x9
   140005ec0:	jmp    0x140005f46
   140005ec5:	test   ecx,ecx
   140005ec7:	js     0x140005f2e
   140005ec9:	cmp    ebx,DWORD PTR [rip+0xe74d]        # 0x14001461c
   140005ecf:	jae    0x140005f2e
   140005ed1:	mov    rdi,rbx
   140005ed4:	mov    rsi,rbx
   140005ed7:	sar    rsi,0x5
   140005edb:	lea    r12,[rip+0xe73e]        # 0x140014620
   140005ee2:	and    edi,0x1f
   140005ee5:	imul   rdi,rdi,0x58
   140005ee9:	mov    rax,QWORD PTR [r12+rsi*8]
   140005eed:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140005ef2:	and    ecx,0x1
   140005ef5:	je     0x140005f2e
   140005ef7:	mov    ecx,ebx
   140005ef9:	call   0x14000b290
   140005efe:	nop
   140005eff:	mov    rax,QWORD PTR [r12+rsi*8]
   140005f03:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140005f08:	je     0x140005f15
   140005f0a:	mov    ecx,ebx
   140005f0c:	call   0x140005dd8
   140005f11:	mov    edi,eax
   140005f13:	jmp    0x140005f23
   140005f15:	call   0x140003564
   140005f1a:	mov    DWORD PTR [rax],0x9
   140005f20:	or     edi,0xffffffff
   140005f23:	mov    ecx,ebx
   140005f25:	call   0x14000b338
   140005f2a:	mov    eax,edi
   140005f2c:	jmp    0x140005f49
   140005f2e:	call   0x140003584
   140005f33:	and    DWORD PTR [rax],0x0
   140005f36:	call   0x140003564
   140005f3b:	mov    DWORD PTR [rax],0x9
   140005f41:	call   0x1400034fc
   140005f46:	or     eax,0xffffffff
   140005f49:	mov    rbx,QWORD PTR [rsp+0x50]
   140005f4e:	add    rsp,0x20
   140005f52:	pop    r12
   140005f54:	pop    rdi
   140005f55:	pop    rsi
   140005f56:	ret    
   140005f57:	int3   
   140005f58:	rex push rbx
   140005f5a:	sub    rsp,0x20
   140005f5e:	test   BYTE PTR [rcx+0x18],0x83
   140005f62:	mov    rbx,rcx
   140005f65:	je     0x140005f89
   140005f67:	test   BYTE PTR [rcx+0x18],0x8
   140005f6b:	je     0x140005f89
   140005f6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f71:	call   0x140001eb4
   140005f76:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140005f7d:	xor    eax,eax
   140005f7f:	mov    QWORD PTR [rbx],rax
   140005f82:	mov    QWORD PTR [rbx+0x10],rax
   140005f86:	mov    DWORD PTR [rbx+0x8],eax
   140005f89:	add    rsp,0x20
   140005f8d:	pop    rbx
   140005f8e:	ret    
   140005f8f:	int3   
   140005f90:	sub    rsp,0x28
   140005f94:	mov    rax,QWORD PTR [rcx]
   140005f97:	cmp    DWORD PTR [rax],0xe06d7363
   140005f9d:	jne    0x140005fca
   140005f9f:	cmp    DWORD PTR [rax+0x18],0x4
   140005fa3:	jne    0x140005fca
   140005fa5:	mov    eax,DWORD PTR [rax+0x20]
   140005fa8:	cmp    eax,0x19930520
   140005fad:	je     0x140005fc4
   140005faf:	cmp    eax,0x19930521
   140005fb4:	je     0x140005fc4
   140005fb6:	cmp    eax,0x19930522
   140005fbb:	je     0x140005fc4
   140005fbd:	cmp    eax,0x1994000
   140005fc2:	jne    0x140005fca
   140005fc4:	call   0x1400038b4
   140005fc9:	int3   
   140005fca:	xor    eax,eax
   140005fcc:	add    rsp,0x28
   140005fd0:	ret    
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	sub    rsp,0x28
   140005fd8:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140005f90
   140005fdf:	call   QWORD PTR [rip+0x810b]        # 0x14000e0f0
   140005fe5:	xor    eax,eax
   140005fe7:	add    rsp,0x28
   140005feb:	ret    
   140005fec:	mov    QWORD PTR [rsp+0x8],rbx
   140005ff1:	mov    QWORD PTR [rsp+0x10],rbp
   140005ff6:	mov    QWORD PTR [rsp+0x18],rsi
   140005ffb:	push   rdi
   140005ffc:	sub    rsp,0x20
   140006000:	mov    rsi,rdx
   140006003:	mov    edi,ecx
   140006005:	call   0x140003c94
   14000600a:	xor    r9d,r9d
   14000600d:	mov    rbx,rax
   140006010:	test   rax,rax
   140006013:	je     0x1400061a5
   140006019:	mov    rdx,QWORD PTR [rax+0xa0]
   140006020:	mov    rcx,rdx
   140006023:	cmp    DWORD PTR [rcx],edi
   140006025:	je     0x140006037
   140006027:	lea    rax,[rdx+0xc0]
   14000602e:	add    rcx,0x10
   140006032:	cmp    rcx,rax
   140006035:	jb     0x140006023
   140006037:	lea    rax,[rdx+0xc0]
   14000603e:	cmp    rcx,rax
   140006041:	jae    0x140006047
   140006043:	cmp    DWORD PTR [rcx],edi
   140006045:	je     0x14000604a
   140006047:	mov    rcx,r9
   14000604a:	test   rcx,rcx
   14000604d:	je     0x1400061a5
   140006053:	mov    r8,QWORD PTR [rcx+0x8]
   140006057:	test   r8,r8
   14000605a:	je     0x1400061a5
   140006060:	cmp    r8,0x5
   140006064:	jne    0x140006073
   140006066:	mov    QWORD PTR [rcx+0x8],r9
   14000606a:	lea    eax,[r8-0x4]
   14000606e:	jmp    0x1400061a7
   140006073:	cmp    r8,0x1
   140006077:	jne    0x140006081
   140006079:	or     eax,0xffffffff
   14000607c:	jmp    0x1400061a7
   140006081:	mov    rbp,QWORD PTR [rbx+0xa8]
   140006088:	mov    QWORD PTR [rbx+0xa8],rsi
   14000608f:	cmp    DWORD PTR [rcx+0x4],0x8
   140006093:	jne    0x14000618f
   140006099:	mov    edx,0x30
   14000609e:	mov    rax,QWORD PTR [rbx+0xa0]
   1400060a5:	add    rdx,0x10
   1400060a9:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   1400060ae:	cmp    rdx,0xc0
   1400060b5:	jl     0x14000609e
   1400060b7:	cmp    DWORD PTR [rcx],0xc000008e
   1400060bd:	mov    edi,DWORD PTR [rbx+0xb0]
   1400060c3:	jne    0x1400060d4
   1400060c5:	mov    DWORD PTR [rbx+0xb0],0x83
   1400060cf:	jmp    0x140006179
   1400060d4:	cmp    DWORD PTR [rcx],0xc0000090
   1400060da:	jne    0x1400060eb
   1400060dc:	mov    DWORD PTR [rbx+0xb0],0x81
   1400060e6:	jmp    0x140006179
   1400060eb:	cmp    DWORD PTR [rcx],0xc0000091
   1400060f1:	jne    0x1400060ff
   1400060f3:	mov    DWORD PTR [rbx+0xb0],0x84
   1400060fd:	jmp    0x140006179
   1400060ff:	cmp    DWORD PTR [rcx],0xc0000093
   140006105:	jne    0x140006113
   140006107:	mov    DWORD PTR [rbx+0xb0],0x85
   140006111:	jmp    0x140006179
   140006113:	cmp    DWORD PTR [rcx],0xc000008d
   140006119:	jne    0x140006127
   14000611b:	mov    DWORD PTR [rbx+0xb0],0x82
   140006125:	jmp    0x140006179
   140006127:	cmp    DWORD PTR [rcx],0xc000008f
   14000612d:	jne    0x14000613b
   14000612f:	mov    DWORD PTR [rbx+0xb0],0x86
   140006139:	jmp    0x140006179
   14000613b:	cmp    DWORD PTR [rcx],0xc0000092
   140006141:	jne    0x14000614f
   140006143:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000614d:	jmp    0x140006179
   14000614f:	cmp    DWORD PTR [rcx],0xc00002b5
   140006155:	jne    0x140006163
   140006157:	mov    DWORD PTR [rbx+0xb0],0x8d
   140006161:	jmp    0x140006179
   140006163:	cmp    DWORD PTR [rcx],0xc00002b4
   140006169:	mov    eax,edi
   14000616b:	mov    edx,0x8e
   140006170:	cmove  eax,edx
   140006173:	mov    DWORD PTR [rbx+0xb0],eax
   140006179:	mov    edx,DWORD PTR [rbx+0xb0]
   14000617f:	mov    ecx,0x8
   140006184:	call   r8
   140006187:	mov    DWORD PTR [rbx+0xb0],edi
   14000618d:	jmp    0x140006199
   14000618f:	mov    QWORD PTR [rcx+0x8],r9
   140006193:	mov    ecx,DWORD PTR [rcx+0x4]
   140006196:	call   r8
   140006199:	mov    QWORD PTR [rbx+0xa8],rbp
   1400061a0:	jmp    0x140006079
   1400061a5:	xor    eax,eax
   1400061a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400061b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400061b6:	add    rsp,0x20
   1400061ba:	pop    rdi
   1400061bb:	ret    
   1400061bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400061c1:	push   rdi
   1400061c2:	sub    rsp,0x20
   1400061c6:	xor    edi,edi
   1400061c8:	cmp    DWORD PTR [rip+0xf6a2],edi        # 0x140015870
   1400061ce:	jne    0x1400061d5
   1400061d0:	call   0x140008450
   1400061d5:	mov    rbx,QWORD PTR [rip+0xf674]        # 0x140015850
   1400061dc:	lea    rax,[rip+0x959d]        # 0x14000f780
   1400061e3:	test   rbx,rbx
   1400061e6:	cmove  rbx,rax
   1400061ea:	cmp    BYTE PTR [rbx],0x20
   1400061ed:	ja     0x1400061f8
   1400061ef:	cmp    BYTE PTR [rbx],0x0
   1400061f2:	je     0x140006227
   1400061f4:	test   edi,edi
   1400061f6:	je     0x140006221
   1400061f8:	cmp    BYTE PTR [rbx],0x22
   1400061fb:	jne    0x140006206
   1400061fd:	xor    eax,eax
   1400061ff:	test   edi,edi
   140006201:	sete   al
   140006204:	mov    edi,eax
   140006206:	movzx  ecx,BYTE PTR [rbx]
   140006209:	call   0x14000b6bc
   14000620e:	test   eax,eax
   140006210:	je     0x140006215
   140006212:	inc    rbx
   140006215:	inc    rbx
   140006218:	jmp    0x1400061ea
   14000621a:	cmp    al,0x20
   14000621c:	ja     0x140006227
   14000621e:	inc    rbx
   140006221:	mov    al,BYTE PTR [rbx]
   140006223:	test   al,al
   140006225:	jne    0x14000621a
   140006227:	mov    rax,rbx
   14000622a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000622f:	add    rsp,0x20
   140006233:	pop    rdi
   140006234:	ret    
   140006235:	int3   
   140006236:	int3   
   140006237:	int3   
   140006238:	mov    QWORD PTR [rsp+0x8],rbx
   14000623d:	mov    QWORD PTR [rsp+0x10],rbp
   140006242:	mov    QWORD PTR [rsp+0x18],rsi
   140006247:	push   rdi
   140006248:	sub    rsp,0x30
   14000624c:	cmp    DWORD PTR [rip+0xf61d],0x0        # 0x140015870
   140006253:	jne    0x14000625a
   140006255:	call   0x140008450
   14000625a:	mov    rbx,QWORD PTR [rip+0xd1b7]        # 0x140013418
   140006261:	xor    edi,edi
   140006263:	test   rbx,rbx
   140006266:	jne    0x140006283
   140006268:	or     eax,0xffffffff
   14000626b:	jmp    0x140006324
   140006270:	cmp    al,0x3d
   140006272:	je     0x140006276
   140006274:	inc    edi
   140006276:	mov    rcx,rbx
   140006279:	call   0x1400084d0
   14000627e:	lea    rbx,[rbx+rax*1+0x1]
   140006283:	mov    al,BYTE PTR [rbx]
   140006285:	test   al,al
   140006287:	jne    0x140006270
   140006289:	lea    eax,[rdi+0x1]
   14000628c:	mov    edx,0x8
   140006291:	movsxd rcx,eax
   140006294:	call   0x140006860
   140006299:	mov    rdi,rax
   14000629c:	mov    QWORD PTR [rip+0xd135],rax        # 0x1400133d8
   1400062a3:	test   rax,rax
   1400062a6:	je     0x140006268
   1400062a8:	mov    rbx,QWORD PTR [rip+0xd169]        # 0x140013418
   1400062af:	cmp    BYTE PTR [rbx],0x0
   1400062b2:	je     0x140006304
   1400062b4:	mov    rcx,rbx
   1400062b7:	call   0x1400084d0
   1400062bc:	cmp    BYTE PTR [rbx],0x3d
   1400062bf:	lea    esi,[rax+0x1]
   1400062c2:	je     0x1400062f2
   1400062c4:	movsxd rbp,esi
   1400062c7:	mov    edx,0x1
   1400062cc:	mov    rcx,rbp
   1400062cf:	call   0x140006860
   1400062d4:	mov    QWORD PTR [rdi],rax
   1400062d7:	test   rax,rax
   1400062da:	je     0x14000634f
   1400062dc:	mov    r8,rbx
   1400062df:	mov    rdx,rbp
   1400062e2:	mov    rcx,rax
   1400062e5:	call   0x14000b6d0
   1400062ea:	test   eax,eax
   1400062ec:	jne    0x140006339
   1400062ee:	add    rdi,0x8
   1400062f2:	movsxd rax,esi
   1400062f5:	add    rbx,rax
   1400062f8:	cmp    BYTE PTR [rbx],0x0
   1400062fb:	jne    0x1400062b4
   1400062fd:	mov    rbx,QWORD PTR [rip+0xd114]        # 0x140013418
   140006304:	mov    rcx,rbx
   140006307:	call   0x140001eb4
   14000630c:	and    QWORD PTR [rip+0xd104],0x0        # 0x140013418
   140006314:	and    QWORD PTR [rdi],0x0
   140006318:	mov    DWORD PTR [rip+0xf536],0x1        # 0x140015858
   140006322:	xor    eax,eax
   140006324:	mov    rbx,QWORD PTR [rsp+0x40]
   140006329:	mov    rbp,QWORD PTR [rsp+0x48]
   14000632e:	mov    rsi,QWORD PTR [rsp+0x50]
   140006333:	add    rsp,0x30
   140006337:	pop    rdi
   140006338:	ret    
   140006339:	and    QWORD PTR [rsp+0x20],0x0
   14000633f:	xor    r9d,r9d
   140006342:	xor    r8d,r8d
   140006345:	xor    edx,edx
   140006347:	xor    ecx,ecx
   140006349:	call   0x140003458
   14000634e:	int3   
   14000634f:	mov    rcx,QWORD PTR [rip+0xd082]        # 0x1400133d8
   140006356:	call   0x140001eb4
   14000635b:	and    QWORD PTR [rip+0xd075],0x0        # 0x1400133d8
   140006363:	jmp    0x140006268
   140006368:	mov    rax,rsp
   14000636b:	mov    QWORD PTR [rax+0x8],rbx
   14000636f:	mov    QWORD PTR [rax+0x10],rbp
   140006373:	mov    QWORD PTR [rax+0x18],rsi
   140006377:	mov    QWORD PTR [rax+0x20],rdi
   14000637b:	push   r12
   14000637d:	push   r13
   14000637f:	push   r14
   140006381:	sub    rsp,0x20
   140006385:	mov    r13,QWORD PTR [rsp+0x60]
   14000638a:	mov    r14,r9
   14000638d:	mov    rdi,r8
   140006390:	and    DWORD PTR [r13+0x0],0x0
   140006395:	mov    r12,rdx
   140006398:	mov    rbx,rcx
   14000639b:	mov    DWORD PTR [r9],0x1
   1400063a2:	test   rdx,rdx
   1400063a5:	je     0x1400063ae
   1400063a7:	mov    QWORD PTR [rdx],r8
   1400063aa:	add    r12,0x8
   1400063ae:	xor    ebp,ebp
   1400063b0:	cmp    BYTE PTR [rbx],0x22
   1400063b3:	jne    0x1400063c6
   1400063b5:	xor    eax,eax
   1400063b7:	test   ebp,ebp
   1400063b9:	mov    sil,0x22
   1400063bc:	sete   al
   1400063bf:	inc    rbx
   1400063c2:	mov    ebp,eax
   1400063c4:	jmp    0x1400063ff
   1400063c6:	inc    DWORD PTR [r13+0x0]
   1400063ca:	test   rdi,rdi
   1400063cd:	je     0x1400063d6
   1400063cf:	mov    al,BYTE PTR [rbx]
   1400063d1:	mov    BYTE PTR [rdi],al
   1400063d3:	inc    rdi
   1400063d6:	movzx  esi,BYTE PTR [rbx]
   1400063d9:	inc    rbx
   1400063dc:	mov    ecx,esi
   1400063de:	call   0x14000b6bc
   1400063e3:	test   eax,eax
   1400063e5:	je     0x1400063fa
   1400063e7:	inc    DWORD PTR [r13+0x0]
   1400063eb:	test   rdi,rdi
   1400063ee:	je     0x1400063f7
   1400063f0:	mov    al,BYTE PTR [rbx]
   1400063f2:	mov    BYTE PTR [rdi],al
   1400063f4:	inc    rdi
   1400063f7:	inc    rbx
   1400063fa:	test   sil,sil
   1400063fd:	je     0x14000641a
   1400063ff:	test   ebp,ebp
   140006401:	jne    0x1400063b0
   140006403:	cmp    sil,0x20
   140006407:	je     0x14000640f
   140006409:	cmp    sil,0x9
   14000640d:	jne    0x1400063b0
   14000640f:	test   rdi,rdi
   140006412:	je     0x14000641d
   140006414:	mov    BYTE PTR [rdi-0x1],0x0
   140006418:	jmp    0x14000641d
   14000641a:	dec    rbx
   14000641d:	xor    esi,esi
   14000641f:	cmp    BYTE PTR [rbx],0x0
   140006422:	je     0x14000650b
   140006428:	cmp    BYTE PTR [rbx],0x20
   14000642b:	je     0x140006432
   14000642d:	cmp    BYTE PTR [rbx],0x9
   140006430:	jne    0x140006437
   140006432:	inc    rbx
   140006435:	jmp    0x140006428
   140006437:	cmp    BYTE PTR [rbx],0x0
   14000643a:	je     0x14000650b
   140006440:	test   r12,r12
   140006443:	je     0x14000644d
   140006445:	mov    QWORD PTR [r12],rdi
   140006449:	add    r12,0x8
   14000644d:	inc    DWORD PTR [r14]
   140006450:	mov    edx,0x1
   140006455:	xor    ecx,ecx
   140006457:	jmp    0x14000645e
   140006459:	inc    rbx
   14000645c:	inc    ecx
   14000645e:	cmp    BYTE PTR [rbx],0x5c
   140006461:	je     0x140006459
   140006463:	cmp    BYTE PTR [rbx],0x22
   140006466:	jne    0x14000649e
   140006468:	test   dl,cl
   14000646a:	jne    0x140006489
   14000646c:	test   esi,esi
   14000646e:	je     0x14000647e
   140006470:	lea    rax,[rbx+0x1]
   140006474:	cmp    BYTE PTR [rax],0x22
   140006477:	jne    0x14000647e
   140006479:	mov    rbx,rax
   14000647c:	jmp    0x140006489
   14000647e:	xor    eax,eax
   140006480:	xor    edx,edx
   140006482:	test   esi,esi
   140006484:	sete   al
   140006487:	mov    esi,eax
   140006489:	shr    ecx,1
   14000648b:	jmp    0x14000649e
   14000648d:	dec    ecx
   14000648f:	test   rdi,rdi
   140006492:	je     0x14000649a
   140006494:	mov    BYTE PTR [rdi],0x5c
   140006497:	inc    rdi
   14000649a:	inc    DWORD PTR [r13+0x0]
   14000649e:	test   ecx,ecx
   1400064a0:	jne    0x14000648d
   1400064a2:	mov    al,BYTE PTR [rbx]
   1400064a4:	test   al,al
   1400064a6:	je     0x1400064f7
   1400064a8:	test   esi,esi
   1400064aa:	jne    0x1400064b4
   1400064ac:	cmp    al,0x20
   1400064ae:	je     0x1400064f7
   1400064b0:	cmp    al,0x9
   1400064b2:	je     0x1400064f7
   1400064b4:	test   edx,edx
   1400064b6:	je     0x1400064ef
   1400064b8:	movsx  ecx,al
   1400064bb:	call   0x14000b6bc
   1400064c0:	test   rdi,rdi
   1400064c3:	je     0x1400064e0
   1400064c5:	test   eax,eax
   1400064c7:	je     0x1400064d7
   1400064c9:	mov    al,BYTE PTR [rbx]
   1400064cb:	inc    rbx
   1400064ce:	mov    BYTE PTR [rdi],al
   1400064d0:	inc    rdi
   1400064d3:	inc    DWORD PTR [r13+0x0]
   1400064d7:	mov    al,BYTE PTR [rbx]
   1400064d9:	mov    BYTE PTR [rdi],al
   1400064db:	inc    rdi
   1400064de:	jmp    0x1400064eb
   1400064e0:	test   eax,eax
   1400064e2:	je     0x1400064eb
   1400064e4:	inc    rbx
   1400064e7:	inc    DWORD PTR [r13+0x0]
   1400064eb:	inc    DWORD PTR [r13+0x0]
   1400064ef:	inc    rbx
   1400064f2:	jmp    0x140006450
   1400064f7:	test   rdi,rdi
   1400064fa:	je     0x140006502
   1400064fc:	mov    BYTE PTR [rdi],0x0
   1400064ff:	inc    rdi
   140006502:	inc    DWORD PTR [r13+0x0]
   140006506:	jmp    0x14000641f
   14000650b:	test   r12,r12
   14000650e:	je     0x140006515
   140006510:	and    QWORD PTR [r12],0x0
   140006515:	inc    DWORD PTR [r14]
   140006518:	mov    rbx,QWORD PTR [rsp+0x40]
   14000651d:	mov    rbp,QWORD PTR [rsp+0x48]
   140006522:	mov    rsi,QWORD PTR [rsp+0x50]
   140006527:	mov    rdi,QWORD PTR [rsp+0x58]
   14000652c:	add    rsp,0x20
   140006530:	pop    r14
   140006532:	pop    r13
   140006534:	pop    r12
   140006536:	ret    
   140006537:	int3   
   140006538:	mov    QWORD PTR [rsp+0x18],rbx
   14000653d:	mov    QWORD PTR [rsp+0x20],rsi
   140006542:	push   rdi
   140006543:	sub    rsp,0x30
   140006547:	cmp    DWORD PTR [rip+0xf322],0x0        # 0x140015870
   14000654e:	jne    0x140006555
   140006550:	call   0x140008450
   140006555:	lea    rdi,[rip+0xdd14]        # 0x140014270
   14000655c:	mov    r8d,0x104
   140006562:	xor    ecx,ecx
   140006564:	mov    rdx,rdi
   140006567:	mov    BYTE PTR [rip+0xde06],0x0        # 0x140014374
   14000656e:	call   QWORD PTR [rip+0x7c4c]        # 0x14000e1c0
   140006574:	mov    rbx,QWORD PTR [rip+0xf2d5]        # 0x140015850
   14000657b:	mov    QWORD PTR [rip+0xce76],rdi        # 0x1400133f8
   140006582:	test   rbx,rbx
   140006585:	je     0x14000658c
   140006587:	cmp    BYTE PTR [rbx],0x0
   14000658a:	jne    0x14000658f
   14000658c:	mov    rbx,rdi
   14000658f:	lea    rax,[rsp+0x48]
   140006594:	lea    r9,[rsp+0x40]
   140006599:	xor    r8d,r8d
   14000659c:	xor    edx,edx
   14000659e:	mov    rcx,rbx
   1400065a1:	mov    QWORD PTR [rsp+0x20],rax
   1400065a6:	call   0x140006368
   1400065ab:	movsxd rsi,DWORD PTR [rsp+0x40]
   1400065b0:	movabs rcx,0x1fffffffffffffff
   1400065ba:	cmp    rsi,rcx
   1400065bd:	jae    0x14000661b
   1400065bf:	movsxd rcx,DWORD PTR [rsp+0x48]
   1400065c4:	cmp    rcx,0xffffffffffffffff
   1400065c8:	jae    0x14000661b
   1400065ca:	lea    rdx,[rcx+rsi*8]
   1400065ce:	cmp    rdx,rcx
   1400065d1:	jb     0x14000661b
   1400065d3:	mov    rcx,rdx
   1400065d6:	call   0x1400067e0
   1400065db:	mov    rdi,rax
   1400065de:	test   rax,rax
   1400065e1:	je     0x14000661b
   1400065e3:	lea    r8,[rax+rsi*8]
   1400065e7:	lea    rax,[rsp+0x48]
   1400065ec:	lea    r9,[rsp+0x40]
   1400065f1:	mov    rdx,rdi
   1400065f4:	mov    rcx,rbx
   1400065f7:	mov    QWORD PTR [rsp+0x20],rax
   1400065fc:	call   0x140006368
   140006601:	mov    r11d,DWORD PTR [rsp+0x40]
   140006606:	mov    QWORD PTR [rip+0xcdbb],rdi        # 0x1400133c8
   14000660d:	dec    r11d
   140006610:	xor    eax,eax
   140006612:	mov    DWORD PTR [rip+0xcdab],r11d        # 0x1400133c4
   140006619:	jmp    0x14000661e
   14000661b:	or     eax,0xffffffff
   14000661e:	mov    rbx,QWORD PTR [rsp+0x50]
   140006623:	mov    rsi,QWORD PTR [rsp+0x58]
   140006628:	add    rsp,0x30
   14000662c:	pop    rdi
   14000662d:	ret    
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    rax,rsp
   140006633:	mov    QWORD PTR [rax+0x8],rbx
   140006637:	mov    QWORD PTR [rax+0x10],rbp
   14000663b:	mov    QWORD PTR [rax+0x18],rsi
   14000663f:	mov    QWORD PTR [rax+0x20],rdi
   140006643:	push   r12
   140006645:	sub    rsp,0x40
   140006649:	call   QWORD PTR [rip+0x7b89]        # 0x14000e1d8
   14000664f:	xor    r12d,r12d
   140006652:	mov    rdi,rax
   140006655:	test   rax,rax
   140006658:	je     0x140006707
   14000665e:	mov    rbx,rax
   140006661:	cmp    WORD PTR [rax],r12w
   140006665:	je     0x14000667b
   140006667:	add    rbx,0x2
   14000666b:	cmp    WORD PTR [rbx],r12w
   14000666f:	jne    0x140006667
   140006671:	add    rbx,0x2
   140006675:	cmp    WORD PTR [rbx],r12w
   140006679:	jne    0x140006667
   14000667b:	mov    QWORD PTR [rsp+0x38],r12
   140006680:	sub    rbx,rax
   140006683:	mov    QWORD PTR [rsp+0x30],r12
   140006688:	sar    rbx,1
   14000668b:	mov    r8,rax
   14000668e:	xor    edx,edx
   140006690:	lea    r9d,[rbx+0x1]
   140006694:	xor    ecx,ecx
   140006696:	mov    DWORD PTR [rsp+0x28],r12d
   14000669b:	mov    QWORD PTR [rsp+0x20],r12
   1400066a0:	call   QWORD PTR [rip+0x7b2a]        # 0x14000e1d0
   1400066a6:	movsxd rbp,eax
   1400066a9:	test   eax,eax
   1400066ab:	je     0x1400066fe
   1400066ad:	mov    rcx,rbp
   1400066b0:	call   0x1400067e0
   1400066b5:	mov    rsi,rax
   1400066b8:	test   rax,rax
   1400066bb:	je     0x1400066fe
   1400066bd:	mov    QWORD PTR [rsp+0x38],r12
   1400066c2:	mov    QWORD PTR [rsp+0x30],r12
   1400066c7:	lea    r9d,[rbx+0x1]
   1400066cb:	mov    r8,rdi
   1400066ce:	xor    edx,edx
   1400066d0:	xor    ecx,ecx
   1400066d2:	mov    DWORD PTR [rsp+0x28],ebp
   1400066d6:	mov    QWORD PTR [rsp+0x20],rax
   1400066db:	call   QWORD PTR [rip+0x7aef]        # 0x14000e1d0
   1400066e1:	test   eax,eax
   1400066e3:	jne    0x1400066f0
   1400066e5:	mov    rcx,rsi
   1400066e8:	call   0x140001eb4
   1400066ed:	mov    rsi,r12
   1400066f0:	mov    rcx,rdi
   1400066f3:	call   QWORD PTR [rip+0x7acf]        # 0x14000e1c8
   1400066f9:	mov    rax,rsi
   1400066fc:	jmp    0x140006709
   1400066fe:	mov    rcx,rdi
   140006701:	call   QWORD PTR [rip+0x7ac1]        # 0x14000e1c8
   140006707:	xor    eax,eax
   140006709:	mov    rbx,QWORD PTR [rsp+0x50]
   14000670e:	mov    rbp,QWORD PTR [rsp+0x58]
   140006713:	mov    rsi,QWORD PTR [rsp+0x60]
   140006718:	mov    rdi,QWORD PTR [rsp+0x68]
   14000671d:	add    rsp,0x40
   140006721:	pop    r12
   140006723:	ret    
   140006724:	mov    QWORD PTR [rsp+0x18],rbx
   140006729:	push   rdi
   14000672a:	sub    rsp,0x20
   14000672e:	mov    rax,QWORD PTR [rip+0xb8d3]        # 0x140012008
   140006735:	and    QWORD PTR [rsp+0x30],0x0
   14000673b:	movabs rdi,0x2b992ddfa232
   140006745:	cmp    rax,rdi
   140006748:	je     0x140006756
   14000674a:	not    rax
   14000674d:	mov    QWORD PTR [rip+0xb8bc],rax        # 0x140012010
   140006754:	jmp    0x1400067cc
   140006756:	lea    rcx,[rsp+0x30]
   14000675b:	call   QWORD PTR [rip+0x7a97]        # 0x14000e1f8
   140006761:	mov    rbx,QWORD PTR [rsp+0x30]
   140006766:	call   QWORD PTR [rip+0x7a84]        # 0x14000e1f0
   14000676c:	mov    r11d,eax
   14000676f:	xor    rbx,r11
   140006772:	call   QWORD PTR [rip+0x79f8]        # 0x14000e170
   140006778:	mov    r11d,eax
   14000677b:	xor    rbx,r11
   14000677e:	call   QWORD PTR [rip+0x7a64]        # 0x14000e1e8
   140006784:	lea    rcx,[rsp+0x38]
   140006789:	mov    r11d,eax
   14000678c:	xor    rbx,r11
   14000678f:	call   QWORD PTR [rip+0x7a4b]        # 0x14000e1e0
   140006795:	mov    r11,QWORD PTR [rsp+0x38]
   14000679a:	xor    r11,rbx
   14000679d:	movabs rax,0xffffffffffff
   1400067a7:	and    r11,rax
   1400067aa:	movabs rax,0x2b992ddfa233
   1400067b4:	cmp    r11,rdi
   1400067b7:	cmove  r11,rax
   1400067bb:	mov    QWORD PTR [rip+0xb846],r11        # 0x140012008
   1400067c2:	not    r11
   1400067c5:	mov    QWORD PTR [rip+0xb844],r11        # 0x140012010
   1400067cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400067d1:	add    rsp,0x20
   1400067d5:	pop    rdi
   1400067d6:	ret    
   1400067d7:	int3   
   1400067d8:	and    DWORD PTR [rip+0xde39],0x0        # 0x140014618
   1400067df:	ret    
   1400067e0:	mov    rax,rsp
   1400067e3:	mov    QWORD PTR [rax+0x8],rbx
   1400067e7:	mov    QWORD PTR [rax+0x10],rbp
   1400067eb:	mov    QWORD PTR [rax+0x18],rsi
   1400067ef:	mov    QWORD PTR [rax+0x20],rdi
   1400067f3:	push   r12
   1400067f5:	sub    rsp,0x20
   1400067f9:	mov    edi,DWORD PTR [rip+0xdb79]        # 0x140014378
   1400067ff:	xor    ebp,ebp
   140006801:	mov    rsi,rcx
   140006804:	or     r12d,0xffffffff
   140006808:	mov    rcx,rsi
   14000680b:	call   0x140001f38
   140006810:	mov    rbx,rax
   140006813:	test   rax,rax
   140006816:	jne    0x140006840
   140006818:	test   edi,edi
   14000681a:	je     0x140006840
   14000681c:	mov    ecx,ebp
   14000681e:	call   QWORD PTR [rip+0x79dc]        # 0x14000e200
   140006824:	mov    edi,DWORD PTR [rip+0xdb4e]        # 0x140014378
   14000682a:	lea    r11d,[rbp+0x3e8]
   140006831:	cmp    r11d,edi
   140006834:	mov    ebp,r11d
   140006837:	cmova  ebp,r12d
   14000683b:	cmp    ebp,r12d
   14000683e:	jne    0x140006808
   140006840:	mov    rbp,QWORD PTR [rsp+0x38]
   140006845:	mov    rsi,QWORD PTR [rsp+0x40]
   14000684a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000684f:	mov    rax,rbx
   140006852:	mov    rbx,QWORD PTR [rsp+0x30]
   140006857:	add    rsp,0x20
   14000685b:	pop    r12
   14000685d:	ret    
   14000685e:	int3   
   14000685f:	int3   
   140006860:	mov    rax,rsp
   140006863:	mov    QWORD PTR [rax+0x8],rbx
   140006867:	mov    QWORD PTR [rax+0x10],rbp
   14000686b:	mov    QWORD PTR [rax+0x18],rsi
   14000686f:	mov    QWORD PTR [rax+0x20],rdi
   140006873:	push   r12
   140006875:	sub    rsp,0x20
   140006879:	xor    edi,edi
   14000687b:	mov    rsi,rdx
   14000687e:	mov    rbp,rcx
   140006881:	or     r12d,0xffffffff
   140006885:	xor    r8d,r8d
   140006888:	mov    rdx,rsi
   14000688b:	mov    rcx,rbp
   14000688e:	call   0x1400044fc
   140006893:	mov    rbx,rax
   140006896:	test   rax,rax
   140006899:	jne    0x1400068c5
   14000689b:	cmp    DWORD PTR [rip+0xdad7],eax        # 0x140014378
   1400068a1:	jbe    0x1400068c5
   1400068a3:	mov    ecx,edi
   1400068a5:	call   QWORD PTR [rip+0x7955]        # 0x14000e200
   1400068ab:	lea    r11d,[rdi+0x3e8]
   1400068b2:	cmp    r11d,DWORD PTR [rip+0xdabf]        # 0x140014378
   1400068b9:	mov    edi,r11d
   1400068bc:	cmova  edi,r12d
   1400068c0:	cmp    edi,r12d
   1400068c3:	jne    0x140006885
   1400068c5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400068ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400068cf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400068d4:	mov    rax,rbx
   1400068d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068dc:	add    rsp,0x20
   1400068e0:	pop    r12
   1400068e2:	ret    
   1400068e3:	int3   
   1400068e4:	mov    rax,rsp
   1400068e7:	mov    QWORD PTR [rax+0x8],rbx
   1400068eb:	mov    QWORD PTR [rax+0x10],rbp
   1400068ef:	mov    QWORD PTR [rax+0x18],rsi
   1400068f3:	mov    QWORD PTR [rax+0x20],rdi
   1400068f7:	push   r12
   1400068f9:	sub    rsp,0x20
   1400068fd:	xor    esi,esi
   1400068ff:	mov    rdi,rdx
   140006902:	mov    rbp,rcx
   140006905:	or     r12d,0xffffffff
   140006909:	mov    rdx,rdi
   14000690c:	mov    rcx,rbp
   14000690f:	call   0x14000b734
   140006914:	mov    rbx,rax
   140006917:	test   rax,rax
   14000691a:	jne    0x14000694b
   14000691c:	test   rdi,rdi
   14000691f:	je     0x14000694b
   140006921:	cmp    DWORD PTR [rip+0xda51],eax        # 0x140014378
   140006927:	jbe    0x14000694b
   140006929:	mov    ecx,esi
   14000692b:	call   QWORD PTR [rip+0x78cf]        # 0x14000e200
   140006931:	lea    r11d,[rsi+0x3e8]
   140006938:	cmp    r11d,DWORD PTR [rip+0xda39]        # 0x140014378
   14000693f:	mov    esi,r11d
   140006942:	cmova  esi,r12d
   140006946:	cmp    esi,r12d
   140006949:	jne    0x140006909
   14000694b:	mov    rbp,QWORD PTR [rsp+0x38]
   140006950:	mov    rsi,QWORD PTR [rsp+0x40]
   140006955:	mov    rdi,QWORD PTR [rsp+0x48]
   14000695a:	mov    rax,rbx
   14000695d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006962:	add    rsp,0x20
   140006966:	pop    r12
   140006968:	ret    
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	mov    QWORD PTR [rsp+0x8],rbx
   140006971:	mov    QWORD PTR [rsp+0x10],rsi
   140006976:	push   rdi
   140006977:	sub    rsp,0x30
   14000697b:	xor    edi,edi
   14000697d:	lea    ecx,[rdi+0x1]
   140006980:	call   0x140003870
   140006985:	nop
   140006986:	lea    ebx,[rdi+0x3]
   140006989:	mov    DWORD PTR [rsp+0x20],ebx
   14000698d:	cmp    ebx,DWORD PTR [rip+0xeead]        # 0x140015840
   140006993:	jge    0x1400069fa
   140006995:	movsxd rsi,ebx
   140006998:	mov    rax,QWORD PTR [rip+0xde81]        # 0x140014820
   14000699f:	cmp    QWORD PTR [rax+rsi*8],0x0
   1400069a4:	je     0x1400069f6
   1400069a6:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400069aa:	test   BYTE PTR [rcx+0x18],0x83
   1400069ae:	je     0x1400069c0
   1400069b0:	call   0x140002754
   1400069b5:	cmp    eax,0xffffffff
   1400069b8:	je     0x1400069c0
   1400069ba:	inc    edi
   1400069bc:	mov    DWORD PTR [rsp+0x24],edi
   1400069c0:	cmp    ebx,0x14
   1400069c3:	jl     0x1400069f6
   1400069c5:	mov    rax,QWORD PTR [rip+0xde54]        # 0x140014820
   1400069cc:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400069d0:	add    rcx,0x30
   1400069d4:	call   QWORD PTR [rip+0x7766]        # 0x14000e140
   1400069da:	mov    rcx,QWORD PTR [rip+0xde3f]        # 0x140014820
   1400069e1:	mov    rcx,QWORD PTR [rcx+rsi*8]
   1400069e5:	call   0x140001eb4
   1400069ea:	mov    r11,QWORD PTR [rip+0xde2f]        # 0x140014820
   1400069f1:	and    QWORD PTR [r11+rsi*8],0x0
   1400069f6:	inc    ebx
   1400069f8:	jmp    0x140006989
   1400069fa:	mov    ecx,0x1
   1400069ff:	call   0x140003770
   140006a04:	mov    eax,edi
   140006a06:	mov    rbx,QWORD PTR [rsp+0x40]
   140006a0b:	mov    rsi,QWORD PTR [rsp+0x48]
   140006a10:	add    rsp,0x30
   140006a14:	pop    rdi
   140006a15:	ret    
   140006a16:	int3   
   140006a17:	int3   
   140006a18:	mov    QWORD PTR [rsp+0x10],rbx
   140006a1d:	mov    QWORD PTR [rsp+0x18],r8
   140006a22:	mov    QWORD PTR [rsp+0x8],rcx
   140006a27:	push   rbp
   140006a28:	push   rsi
   140006a29:	push   rdi
   140006a2a:	push   r12
   140006a2c:	push   r13
   140006a2e:	push   r14
   140006a30:	push   r15
   140006a32:	mov    rbp,rsp
   140006a35:	sub    rsp,0x80
   140006a3c:	xor    edi,edi
   140006a3e:	mov    r13b,0x80
   140006a41:	mov    esi,r9d
   140006a44:	mov    rbx,rdx
   140006a47:	mov    DWORD PTR [rbp-0x18],0x18
   140006a4e:	lea    r12d,[rdi+0x1]
   140006a52:	mov    DWORD PTR [rbp-0x28],edi
   140006a55:	mov    BYTE PTR [rbp+0x58],dil
   140006a59:	mov    QWORD PTR [rbp-0x10],rdi
   140006a5d:	test   r13b,r9b
   140006a60:	je     0x140006a6a
   140006a62:	mov    DWORD PTR [rbp-0x8],edi
   140006a65:	mov    r15b,0x10
   140006a68:	jmp    0x140006a71
   140006a6a:	mov    DWORD PTR [rbp-0x8],r12d
   140006a6e:	mov    r15b,dil
   140006a71:	lea    rcx,[rbp-0x28]
   140006a75:	call   0x14000ba70
   140006a7a:	test   eax,eax
   140006a7c:	jne    0x1400071ab
   140006a82:	mov    eax,0x8000
   140006a87:	test   eax,esi
   140006a89:	jne    0x140006a9b
   140006a8b:	test   esi,0x74000
   140006a91:	jne    0x140006a98
   140006a93:	cmp    DWORD PTR [rbp-0x28],eax
   140006a96:	je     0x140006a9b
   140006a98:	or     r15b,r13b
   140006a9b:	mov    ecx,esi
   140006a9d:	mov    r9d,0x3
   140006aa3:	mov    eax,0xc0000000
   140006aa8:	and    ecx,r9d
   140006aab:	mov    r8d,0x80000000
   140006ab1:	je     0x140006b0e
   140006ab3:	dec    ecx
   140006ab5:	je     0x140006af8
   140006ab7:	dec    ecx
   140006ab9:	je     0x140006af3
   140006abb:	call   0x140003584
   140006ac0:	mov    DWORD PTR [rax],edi
   140006ac2:	or     DWORD PTR [rbx],0xffffffff
   140006ac5:	call   0x140003564
   140006aca:	mov    ebx,0x16
   140006acf:	mov    DWORD PTR [rax],ebx
   140006ad1:	call   0x1400034fc
   140006ad6:	mov    eax,ebx
   140006ad8:	mov    rbx,QWORD PTR [rsp+0xc8]
   140006ae0:	add    rsp,0x80
   140006ae7:	pop    r15
   140006ae9:	pop    r14
   140006aeb:	pop    r13
   140006aed:	pop    r12
   140006aef:	pop    rdi
   140006af0:	pop    rsi
   140006af1:	pop    rbp
   140006af2:	ret    
   140006af3:	mov    r14d,eax
   140006af6:	jmp    0x140006b11
   140006af8:	test   sil,0x8
   140006afc:	je     0x140006b06
   140006afe:	test   esi,0x70000
   140006b04:	jne    0x140006af3
   140006b06:	mov    r14d,0x40000000
   140006b0c:	jmp    0x140006b11
   140006b0e:	mov    r14d,r8d
   140006b11:	mov    ecx,DWORD PTR [rbp+0x60]
   140006b14:	mov    DWORD PTR [rbp-0x40],r14d
   140006b18:	mov    r13d,0x2
   140006b1e:	sub    ecx,0x10
   140006b21:	je     0x140006b50
   140006b23:	sub    ecx,0x10
   140006b26:	je     0x140006b4b
   140006b28:	sub    ecx,0x10
   140006b2b:	je     0x140006b46
   140006b2d:	sub    ecx,0x10
   140006b30:	je     0x140006b41
   140006b32:	cmp    ecx,0x40
   140006b35:	jne    0x140006abb
   140006b37:	cmp    r14d,r8d
   140006b3a:	mov    edx,edi
   140006b3c:	sete   dl
   140006b3f:	jmp    0x140006b52
   140006b41:	mov    edx,r9d
   140006b44:	jmp    0x140006b52
   140006b46:	mov    edx,r13d
   140006b49:	jmp    0x140006b52
   140006b4b:	mov    edx,r12d
   140006b4e:	jmp    0x140006b52
   140006b50:	mov    edx,edi
   140006b52:	mov    eax,esi
   140006b54:	mov    ecx,0x700
   140006b59:	mov    DWORD PTR [rbp-0x3c],edx
   140006b5c:	and    eax,ecx
   140006b5e:	mov    r8d,0x100
   140006b64:	je     0x140006bac
   140006b66:	cmp    eax,r8d
   140006b69:	je     0x140006ba4
   140006b6b:	cmp    eax,0x200
   140006b70:	je     0x140006b9c
   140006b72:	cmp    eax,0x300
   140006b77:	je     0x140006b97
   140006b79:	cmp    eax,0x400
   140006b7e:	je     0x140006bac
   140006b80:	cmp    eax,0x500
   140006b85:	je     0x140006baf
   140006b87:	cmp    eax,0x600
   140006b8c:	je     0x140006b9c
   140006b8e:	cmp    eax,ecx
   140006b90:	je     0x140006baf
   140006b92:	jmp    0x140006abb
   140006b97:	mov    r12d,r13d
   140006b9a:	jmp    0x140006baf
   140006b9c:	mov    r12d,0x5
   140006ba2:	jmp    0x140006baf
   140006ba4:	mov    r12d,0x4
   140006baa:	jmp    0x140006baf
   140006bac:	mov    r12d,r9d
   140006baf:	mov    ecx,0x80
   140006bb4:	mov    DWORD PTR [rbp-0x34],ecx
   140006bb7:	test   r8d,esi
   140006bba:	je     0x140006bd2
   140006bbc:	mov    al,BYTE PTR [rip+0xc7fe]        # 0x1400133c0
   140006bc2:	not    al
   140006bc4:	and    al,BYTE PTR [rbp+0x68]
   140006bc7:	test   al,0x80
   140006bc9:	lea    eax,[rcx-0x7f]
   140006bcc:	cmove  ecx,eax
   140006bcf:	mov    DWORD PTR [rbp-0x34],ecx
   140006bd2:	test   sil,0x40
   140006bd6:	je     0x140006bee
   140006bd8:	bts    ecx,0x1a
   140006bdc:	bts    r14d,0x10
   140006be1:	or     edx,0x4
   140006be4:	mov    DWORD PTR [rbp-0x3c],edx
   140006be7:	mov    DWORD PTR [rbp-0x34],ecx
   140006bea:	mov    DWORD PTR [rbp-0x40],r14d
   140006bee:	bt     esi,0xc
   140006bf2:	jae    0x140006bfa
   140006bf4:	or     ecx,r8d
   140006bf7:	mov    DWORD PTR [rbp-0x34],ecx
   140006bfa:	test   sil,0x20
   140006bfe:	je     0x140006c06
   140006c00:	bts    ecx,0x1b
   140006c04:	jmp    0x140006c10
   140006c06:	test   sil,0x10
   140006c0a:	je     0x140006c13
   140006c0c:	bts    ecx,0x1c
   140006c10:	mov    DWORD PTR [rbp-0x34],ecx
   140006c13:	call   0x14000b360
   140006c18:	mov    DWORD PTR [rbx],eax
   140006c1a:	cmp    eax,0xffffffff
   140006c1d:	jne    0x140006c40
   140006c1f:	call   0x140003584
   140006c24:	mov    DWORD PTR [rax],edi
   140006c26:	or     DWORD PTR [rbx],0xffffffff
   140006c29:	call   0x140003564
   140006c2e:	mov    DWORD PTR [rax],0x18
   140006c34:	call   0x140003564
   140006c39:	mov    eax,DWORD PTR [rax]
   140006c3b:	jmp    0x140006ad8
   140006c40:	mov    rax,QWORD PTR [rbp+0x40]
   140006c44:	mov    r8d,DWORD PTR [rbp-0x3c]
   140006c48:	mov    rcx,QWORD PTR [rbp+0x50]
   140006c4c:	mov    DWORD PTR [rax],0x1
   140006c52:	mov    eax,DWORD PTR [rbp-0x34]
   140006c55:	mov    QWORD PTR [rsp+0x30],rdi
   140006c5a:	mov    DWORD PTR [rsp+0x28],eax
   140006c5e:	lea    r9,[rbp-0x18]
   140006c62:	mov    edx,r14d
   140006c65:	mov    DWORD PTR [rsp+0x20],r12d
   140006c6a:	call   QWORD PTR [rip+0x7598]        # 0x14000e208
   140006c70:	mov    QWORD PTR [rbp-0x20],rax
   140006c74:	cmp    rax,0xffffffffffffffff
   140006c78:	jne    0x140006d09
   140006c7e:	mov    ecx,0xc0000000
   140006c83:	mov    eax,r14d
   140006c86:	and    eax,ecx
   140006c88:	cmp    eax,ecx
   140006c8a:	jne    0x140006ccf
   140006c8c:	mov    eax,0x1
   140006c91:	test   al,sil
   140006c94:	je     0x140006ccf
   140006c96:	mov    eax,DWORD PTR [rbp-0x34]
   140006c99:	mov    r8d,DWORD PTR [rbp-0x3c]
   140006c9d:	mov    rcx,QWORD PTR [rbp+0x50]
   140006ca1:	btr    r14d,0x1f
   140006ca6:	mov    QWORD PTR [rsp+0x30],rdi
   140006cab:	mov    DWORD PTR [rsp+0x28],eax
   140006caf:	lea    r9,[rbp-0x18]
   140006cb3:	mov    edx,r14d
   140006cb6:	mov    DWORD PTR [rsp+0x20],r12d
   140006cbb:	mov    DWORD PTR [rbp-0x40],r14d
   140006cbf:	call   QWORD PTR [rip+0x7543]        # 0x14000e208
   140006cc5:	mov    QWORD PTR [rbp-0x20],rax
   140006cc9:	cmp    rax,0xffffffffffffffff
   140006ccd:	jne    0x140006d09
   140006ccf:	movsxd rcx,DWORD PTR [rbx]
   140006cd2:	lea    r14,[rip+0xd947]        # 0x140014620
   140006cd9:	mov    rax,rcx
   140006cdc:	and    ecx,0x1f
   140006cdf:	sar    rax,0x5
   140006ce3:	imul   rcx,rcx,0x58
   140006ce7:	mov    rax,QWORD PTR [r14+rax*8]
   140006ceb:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140006cf0:	call   QWORD PTR [rip+0x7382]        # 0x14000e078
   140006cf6:	mov    ecx,eax
   140006cf8:	call   0x1400035a4
   140006cfd:	call   0x140003564
   140006d02:	mov    edi,DWORD PTR [rax]
   140006d04:	jmp    0x1400071a4
   140006d09:	mov    rcx,rax
   140006d0c:	call   QWORD PTR [rip+0x749e]        # 0x14000e1b0
   140006d12:	test   eax,eax
   140006d14:	jne    0x140006d61
   140006d16:	movsxd rcx,DWORD PTR [rbx]
   140006d19:	lea    r14,[rip+0xd900]        # 0x140014620
   140006d20:	mov    rax,rcx
   140006d23:	and    ecx,0x1f
   140006d26:	sar    rax,0x5
   140006d2a:	imul   rcx,rcx,0x58
   140006d2e:	mov    rax,QWORD PTR [r14+rax*8]
   140006d32:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140006d37:	call   QWORD PTR [rip+0x733b]        # 0x14000e078
   140006d3d:	mov    ecx,eax
   140006d3f:	mov    ebx,eax
   140006d41:	call   0x1400035a4
   140006d46:	mov    rcx,QWORD PTR [rbp-0x20]
   140006d4a:	call   QWORD PTR [rip+0x7350]        # 0x14000e0a0
   140006d50:	test   ebx,ebx
   140006d52:	jne    0x140006cfd
   140006d54:	call   0x140003564
   140006d59:	mov    DWORD PTR [rax],0xd
   140006d5f:	jmp    0x140006cfd
   140006d61:	cmp    eax,r13d
   140006d64:	jne    0x140006d6c
   140006d66:	or     r15b,0x40
   140006d6a:	jmp    0x140006d75
   140006d6c:	cmp    eax,0x3
   140006d6f:	jne    0x140006d75
   140006d71:	or     r15b,0x8
   140006d75:	mov    rdx,QWORD PTR [rbp-0x20]
   140006d79:	mov    ecx,DWORD PTR [rbx]
   140006d7b:	call   0x14000b0c0
   140006d80:	movsxd rcx,DWORD PTR [rbx]
   140006d83:	lea    r14,[rip+0xd896]        # 0x140014620
   140006d8a:	mov    rax,rcx
   140006d8d:	and    ecx,0x1f
   140006d90:	mov    r8d,0x1
   140006d96:	sar    rax,0x5
   140006d9a:	or     r15b,r8b
   140006d9d:	mov    rax,QWORD PTR [r14+rax*8]
   140006da1:	imul   rcx,rcx,0x58
   140006da5:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140006daa:	movsxd rcx,DWORD PTR [rbx]
   140006dad:	mov    rax,rcx
   140006db0:	and    ecx,0x1f
   140006db3:	sar    rax,0x5
   140006db7:	imul   rcx,rcx,0x58
   140006dbb:	mov    rax,QWORD PTR [r14+rax*8]
   140006dbf:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140006dc4:	mov    al,r15b
   140006dc7:	and    al,0x48
   140006dc9:	mov    BYTE PTR [rbp-0x30],al
   140006dcc:	jne    0x140006e55
   140006dd2:	test   r15b,r15b
   140006dd5:	jns    0x140007080
   140006ddb:	test   r13b,sil
   140006dde:	je     0x140006e55
   140006de0:	mov    ecx,DWORD PTR [rbx]
   140006de2:	mov    r8d,r13d
   140006de5:	or     edx,0xffffffff
   140006de8:	call   0x140005aa0
   140006ded:	mov    DWORD PTR [rbp-0x38],eax
   140006df0:	cmp    eax,0xffffffff
   140006df3:	jne    0x140006e0e
   140006df5:	call   0x140003584
   140006dfa:	cmp    DWORD PTR [rax],0x83
   140006e00:	je     0x140006e4f
   140006e02:	mov    ecx,DWORD PTR [rbx]
   140006e04:	call   0x140005dd8
   140006e09:	jmp    0x140006cfd
   140006e0e:	mov    ecx,DWORD PTR [rbx]
   140006e10:	lea    rdx,[rbp-0x2c]
   140006e14:	mov    r8d,0x1
   140006e1a:	mov    WORD PTR [rbp-0x2c],di
   140006e1e:	call   0x140004edc
   140006e23:	test   eax,eax
   140006e25:	jne    0x140006e3e
   140006e27:	cmp    WORD PTR [rbp-0x2c],0x1a
   140006e2c:	jne    0x140006e3e
   140006e2e:	movsxd rdx,DWORD PTR [rbp-0x38]
   140006e32:	mov    ecx,DWORD PTR [rbx]
   140006e34:	call   0x14000b808
   140006e39:	cmp    eax,0xffffffff
   140006e3c:	je     0x140006e02
   140006e3e:	mov    ecx,DWORD PTR [rbx]
   140006e40:	xor    r8d,r8d
   140006e43:	xor    edx,edx
   140006e45:	call   0x140005aa0
   140006e4a:	cmp    eax,0xffffffff
   140006e4d:	je     0x140006e02
   140006e4f:	mov    r8d,0x1
   140006e55:	test   r15b,r15b
   140006e58:	jns    0x140007080
   140006e5e:	mov    edx,0x74000
   140006e63:	mov    ecx,0x4000
   140006e68:	test   edx,esi
   140006e6a:	jne    0x140006e79
   140006e6c:	mov    eax,DWORD PTR [rbp-0x28]
   140006e6f:	and    eax,edx
   140006e71:	jne    0x140006e77
   140006e73:	or     esi,ecx
   140006e75:	jmp    0x140006e79
   140006e77:	or     esi,eax
   140006e79:	mov    eax,esi
   140006e7b:	and    eax,edx
   140006e7d:	cmp    eax,ecx
   140006e7f:	je     0x140006ec4
   140006e81:	cmp    eax,0x10000
   140006e86:	je     0x140006eb1
   140006e88:	cmp    eax,0x14000
   140006e8d:	je     0x140006eb1
   140006e8f:	cmp    eax,0x20000
   140006e94:	je     0x140006ebe
   140006e96:	cmp    eax,0x24000
   140006e9b:	je     0x140006ebe
   140006e9d:	cmp    eax,0x40000
   140006ea2:	je     0x140006eab
   140006ea4:	cmp    eax,0x44000
   140006ea9:	jne    0x140006ec8
   140006eab:	mov    BYTE PTR [rbp+0x58],r8b
   140006eaf:	jmp    0x140006ec8
   140006eb1:	mov    ecx,0x301
   140006eb6:	mov    eax,esi
   140006eb8:	and    eax,ecx
   140006eba:	cmp    eax,ecx
   140006ebc:	jne    0x140006ec8
   140006ebe:	mov    BYTE PTR [rbp+0x58],r13b
   140006ec2:	jmp    0x140006ec8
   140006ec4:	mov    BYTE PTR [rbp+0x58],dil
   140006ec8:	test   esi,0x70000
   140006ece:	je     0x140007080
   140006ed4:	test   r15b,0x40
   140006ed8:	mov    r15d,DWORD PTR [rbp-0x40]
   140006edc:	mov    DWORD PTR [rbp-0x38],edi
   140006edf:	jne    0x140007084
   140006ee5:	mov    eax,r15d
   140006ee8:	mov    ecx,0xc0000000
   140006eed:	and    eax,ecx
   140006eef:	cmp    eax,0x40000000
   140006ef4:	je     0x140007007
   140006efa:	cmp    eax,0x80000000
   140006eff:	je     0x140006f71
   140006f01:	cmp    eax,ecx
   140006f03:	jne    0x140007084
   140006f09:	test   r12d,r12d
   140006f0c:	je     0x140007084
   140006f12:	cmp    r12d,r13d
   140006f15:	jbe    0x140006f27
   140006f17:	cmp    r12d,0x4
   140006f1b:	jbe    0x140006f4a
   140006f1d:	cmp    r12d,0x5
   140006f21:	jne    0x140007084
   140006f27:	movsx  ecx,BYTE PTR [rbp+0x58]
   140006f2b:	mov    r12d,edi
   140006f2e:	dec    ecx
   140006f30:	je     0x14000704b
   140006f36:	dec    ecx
   140006f38:	jne    0x140007084
   140006f3e:	mov    DWORD PTR [rbp-0x38],0xfeff
   140006f45:	jmp    0x140007058
   140006f4a:	mov    ecx,DWORD PTR [rbx]
   140006f4c:	mov    r8d,r13d
   140006f4f:	xor    edx,edx
   140006f51:	call   0x1400095a4
   140006f56:	test   rax,rax
   140006f59:	je     0x140006f27
   140006f5b:	mov    ecx,DWORD PTR [rbx]
   140006f5d:	xor    r8d,r8d
   140006f60:	xor    edx,edx
   140006f62:	call   0x1400095a4
   140006f67:	cmp    rax,0xffffffffffffffff
   140006f6b:	je     0x140006e02
   140006f71:	mov    ecx,DWORD PTR [rbx]
   140006f73:	lea    rdx,[rbp-0x38]
   140006f77:	mov    r8d,0x3
   140006f7d:	call   0x140004edc
   140006f82:	cmp    eax,0xffffffff
   140006f85:	je     0x140006e02
   140006f8b:	cmp    eax,r13d
   140006f8e:	je     0x140006fab
   140006f90:	cmp    eax,0x3
   140006f93:	jne    0x140006ff6
   140006f95:	cmp    DWORD PTR [rbp-0x38],0xbfbbef
   140006f9c:	jne    0x140006fab
   140006f9e:	lea    r8d,[rax-0x2]
   140006fa2:	mov    BYTE PTR [rbp+0x58],r8b
   140006fa6:	jmp    0x14000708a
   140006fab:	movzx  eax,WORD PTR [rbp-0x38]
   140006faf:	cmp    eax,0xfffe
   140006fb4:	jne    0x140006fd0
   140006fb6:	mov    ecx,DWORD PTR [rbx]
   140006fb8:	call   0x140005dd8
   140006fbd:	call   0x140003564
   140006fc2:	mov    ebx,0x16
   140006fc7:	mov    DWORD PTR [rax],ebx
   140006fc9:	mov    edi,ebx
   140006fcb:	jmp    0x1400071a4
   140006fd0:	cmp    eax,0xfeff
   140006fd5:	jne    0x140006ff6
   140006fd7:	mov    ecx,DWORD PTR [rbx]
   140006fd9:	xor    r8d,r8d
   140006fdc:	mov    edx,r13d
   140006fdf:	call   0x140005aa0
   140006fe4:	cmp    eax,0xffffffff
   140006fe7:	je     0x140006e02
   140006fed:	mov    BYTE PTR [rbp+0x58],r13b
   140006ff1:	jmp    0x140007084
   140006ff6:	mov    ecx,DWORD PTR [rbx]
   140006ff8:	xor    r8d,r8d
   140006ffb:	xor    edx,edx
   140006ffd:	call   0x140005aa0
   140007002:	cmp    eax,0xffffffff
   140007005:	jmp    0x140007044
   140007007:	test   r12d,r12d
   14000700a:	je     0x140007084
   14000700c:	cmp    r12d,r13d
   14000700f:	jbe    0x140006f27
   140007015:	cmp    r12d,0x4
   140007019:	ja     0x140006f1d
   14000701f:	mov    ecx,DWORD PTR [rbx]
   140007021:	mov    r8d,r13d
   140007024:	xor    edx,edx
   140007026:	call   0x1400095a4
   14000702b:	test   rax,rax
   14000702e:	je     0x140006f27
   140007034:	mov    ecx,DWORD PTR [rbx]
   140007036:	xor    r8d,r8d
   140007039:	xor    edx,edx
   14000703b:	call   0x1400095a4
   140007040:	cmp    rax,0xffffffffffffffff
   140007044:	jne    0x140007084
   140007046:	jmp    0x140006e02
   14000704b:	mov    DWORD PTR [rbp-0x38],0xbfbbef
   140007052:	mov    r13d,0x3
   140007058:	mov    ecx,DWORD PTR [rbx]
   14000705a:	movsxd rax,r12d
   14000705d:	mov    r8d,r13d
   140007060:	lea    rdx,[rbp+rax*1-0x38]
   140007065:	sub    r8d,r12d
   140007068:	call   0x140009e80
   14000706d:	cmp    eax,0xffffffff
   140007070:	je     0x140006e02
   140007076:	add    r12d,eax
   140007079:	cmp    r13d,r12d
   14000707c:	jg     0x140007058
   14000707e:	jmp    0x140007084
   140007080:	mov    r15d,DWORD PTR [rbp-0x40]
   140007084:	mov    r8d,0x1
   14000708a:	movsxd rcx,DWORD PTR [rbx]
   14000708d:	mov    r12b,BYTE PTR [rbp+0x58]
   140007091:	mov    rax,rcx
   140007094:	and    ecx,0x1f
   140007097:	and    r12b,0x7f
   14000709b:	sar    rax,0x5
   14000709f:	imul   rcx,rcx,0x58
   1400070a3:	mov    rax,QWORD PTR [r14+rax*8]
   1400070a7:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   1400070ac:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   1400070b1:	movsxd rdx,DWORD PTR [rbx]
   1400070b4:	mov    rax,rdx
   1400070b7:	and    edx,0x1f
   1400070ba:	sar    rax,0x5
   1400070be:	imul   rdx,rdx,0x58
   1400070c2:	mov    rcx,QWORD PTR [r14+rax*8]
   1400070c6:	mov    eax,esi
   1400070c8:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   1400070cd:	shr    eax,0x10
   1400070d0:	shl    al,0x7
   1400070d3:	or     BYTE PTR [rcx+rdx*1+0x38],al
   1400070d7:	cmp    BYTE PTR [rbp-0x30],dil
   1400070db:	jne    0x1400070fd
   1400070dd:	test   sil,0x8
   1400070e1:	je     0x1400070fd
   1400070e3:	movsxd rcx,DWORD PTR [rbx]
   1400070e6:	mov    rax,rcx
   1400070e9:	and    ecx,0x1f
   1400070ec:	sar    rax,0x5
   1400070f0:	imul   rcx,rcx,0x58
   1400070f4:	mov    rax,QWORD PTR [r14+rax*8]
   1400070f8:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   1400070fd:	mov    ecx,0xc0000000
   140007102:	mov    eax,r15d
   140007105:	and    eax,ecx
   140007107:	cmp    eax,ecx
   140007109:	jne    0x1400071a4
   14000710f:	test   r8b,sil
   140007112:	je     0x1400071a4
   140007118:	mov    rcx,QWORD PTR [rbp-0x20]
   14000711c:	call   QWORD PTR [rip+0x6f7e]        # 0x14000e0a0
   140007122:	mov    eax,DWORD PTR [rbp-0x34]
   140007125:	mov    r8d,DWORD PTR [rbp-0x3c]
   140007129:	mov    rcx,QWORD PTR [rbp+0x50]
   14000712d:	mov    QWORD PTR [rsp+0x30],rdi
   140007132:	mov    DWORD PTR [rsp+0x28],eax
   140007136:	btr    r15d,0x1f
   14000713b:	lea    r9,[rbp-0x18]
   14000713f:	mov    DWORD PTR [rsp+0x20],0x3
   140007147:	mov    edx,r15d
   14000714a:	call   QWORD PTR [rip+0x70b8]        # 0x14000e208
   140007150:	cmp    rax,0xffffffffffffffff
   140007154:	jne    0x14000718b
   140007156:	call   QWORD PTR [rip+0x6f1c]        # 0x14000e078
   14000715c:	mov    ecx,eax
   14000715e:	call   0x1400035a4
   140007163:	movsxd r11,DWORD PTR [rbx]
   140007166:	mov    rax,r11
   140007169:	and    r11d,0x1f
   14000716d:	sar    rax,0x5
   140007171:	imul   r11,r11,0x58
   140007175:	mov    rax,QWORD PTR [r14+rax*8]
   140007179:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14000717f:	mov    ecx,DWORD PTR [rbx]
   140007181:	call   0x14000b170
   140007186:	jmp    0x140006cfd
   14000718b:	movsxd rdx,DWORD PTR [rbx]
   14000718e:	mov    rcx,rdx
   140007191:	and    edx,0x1f
   140007194:	sar    rcx,0x5
   140007198:	imul   rdx,rdx,0x58
   14000719c:	mov    rcx,QWORD PTR [r14+rcx*8]
   1400071a0:	mov    QWORD PTR [rdx+rcx*1],rax
   1400071a4:	mov    eax,edi
   1400071a6:	jmp    0x140006ad8
   1400071ab:	xor    r9d,r9d
   1400071ae:	xor    r8d,r8d
   1400071b1:	xor    edx,edx
   1400071b3:	xor    ecx,ecx
   1400071b5:	mov    QWORD PTR [rsp+0x20],rdi
   1400071ba:	call   0x140003458
   1400071bf:	int3   
   1400071c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071c5:	push   rdi
   1400071c6:	sub    rsp,0x40
   1400071ca:	and    DWORD PTR [rsp+0x30],0x0
   1400071cf:	xor    eax,eax
   1400071d1:	mov    rdi,QWORD PTR [rsp+0x70]
   1400071d6:	test   rdi,rdi
   1400071d9:	setne  al
   1400071dc:	test   eax,eax
   1400071de:	jne    0x1400071f8
   1400071e0:	call   0x140003564
   1400071e5:	mov    ebx,0x16
   1400071ea:	mov    DWORD PTR [rax],ebx
   1400071ec:	call   0x1400034fc
   1400071f1:	mov    eax,ebx
   1400071f3:	jmp    0x140007287
   1400071f8:	or     DWORD PTR [rdi],0xffffffff
   1400071fb:	xor    eax,eax
   1400071fd:	test   rcx,rcx
   140007200:	setne  al
   140007203:	test   eax,eax
   140007205:	je     0x1400071e0
   140007207:	cmp    DWORD PTR [rsp+0x78],0x0
   14000720c:	je     0x140007221
   14000720e:	test   r9d,0xfffffe7f
   140007215:	mov    eax,0x0
   14000721a:	sete   al
   14000721d:	test   eax,eax
   14000721f:	je     0x1400071e0
   140007221:	mov    DWORD PTR [rsp+0x28],r9d
   140007226:	mov    DWORD PTR [rsp+0x20],r8d
   14000722b:	mov    r9d,edx
   14000722e:	mov    r8,rcx
   140007231:	mov    rdx,rdi
   140007234:	lea    rcx,[rsp+0x30]
   140007239:	call   0x140006a18
   14000723e:	mov    ebx,eax
   140007240:	mov    DWORD PTR [rsp+0x34],eax
   140007244:	cmp    DWORD PTR [rsp+0x30],0x0
   140007249:	je     0x140007277
   14000724b:	test   eax,eax
   14000724d:	je     0x140007270
   14000724f:	movsxd rcx,DWORD PTR [rdi]
   140007252:	mov    rax,rcx
   140007255:	sar    rax,0x5
   140007259:	lea    rdx,[rip+0xd3c0]        # 0x140014620
   140007260:	and    ecx,0x1f
   140007263:	imul   rcx,rcx,0x58
   140007267:	mov    rax,QWORD PTR [rdx+rax*8]
   14000726b:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140007270:	mov    ecx,DWORD PTR [rdi]
   140007272:	call   0x14000b338
   140007277:	test   ebx,ebx
   140007279:	je     0x1400071f1
   14000727f:	or     DWORD PTR [rdi],0xffffffff
   140007282:	jmp    0x1400071f1
   140007287:	mov    rbx,QWORD PTR [rsp+0x50]
   14000728c:	add    rsp,0x40
   140007290:	pop    rdi
   140007291:	ret    
   140007292:	int3   
   140007293:	int3   
   140007294:	sub    rsp,0x38
   140007298:	mov    eax,r9d
   14000729b:	mov    r9d,DWORD PTR [rsp+0x60]
   1400072a0:	mov    r10d,r8d
   1400072a3:	mov    r11,rdx
   1400072a6:	mov    DWORD PTR [rsp+0x28],0x1
   1400072ae:	mov    QWORD PTR [rsp+0x20],rcx
   1400072b3:	mov    r8d,eax
   1400072b6:	mov    edx,r10d
   1400072b9:	mov    rcx,r11
   1400072bc:	call   0x1400071c0
   1400072c1:	add    rsp,0x38
   1400072c5:	ret    
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	mov    rax,rsp
   1400072cb:	mov    QWORD PTR [rax+0x8],rbx
   1400072cf:	mov    QWORD PTR [rax+0x10],rbp
   1400072d3:	mov    QWORD PTR [rax+0x18],rsi
   1400072d7:	mov    QWORD PTR [rax+0x20],rdi
   1400072db:	push   r12
   1400072dd:	sub    rsp,0x40
   1400072e1:	xor    r12d,r12d
   1400072e4:	mov    rbp,r8
   1400072e7:	mov    rdi,rdx
   1400072ea:	mov    rsi,rcx
   1400072ed:	mov    eax,r12d
   1400072f0:	test   r8,r8
   1400072f3:	je     0x1400073c3
   1400072f9:	test   rcx,rcx
   1400072fc:	jne    0x140007318
   1400072fe:	call   0x140003564
   140007303:	mov    DWORD PTR [rax],0x16
   140007309:	call   0x1400034fc
   14000730e:	mov    eax,0x7fffffff
   140007313:	jmp    0x1400073c3
   140007318:	test   rdx,rdx
   14000731b:	je     0x1400072fe
   14000731d:	lea    rcx,[rsp+0x20]
   140007322:	mov    rdx,r9
   140007325:	call   0x140004978
   14000732a:	mov    r11,QWORD PTR [rsp+0x20]
   14000732f:	cmp    DWORD PTR [r11+0x14],r12d
   140007333:	jne    0x140007374
   140007335:	sub    rsi,rdi
   140007338:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14000733c:	cmp    bx,0x41
   140007340:	jb     0x14000734c
   140007342:	cmp    bx,0x5a
   140007346:	ja     0x14000734c
   140007348:	add    bx,0x20
   14000734c:	movzx  eax,WORD PTR [rdi]
   14000734f:	cmp    ax,0x41
   140007353:	jb     0x14000735f
   140007355:	cmp    ax,0x5a
   140007359:	ja     0x14000735f
   14000735b:	add    ax,0x20
   14000735f:	add    rdi,0x2
   140007363:	dec    rbp
   140007366:	je     0x1400073a8
   140007368:	test   bx,bx
   14000736b:	je     0x1400073a8
   14000736d:	cmp    bx,ax
   140007370:	je     0x140007338
   140007372:	jmp    0x1400073a8
   140007374:	movzx  ecx,WORD PTR [rsi]
   140007377:	lea    rdx,[rsp+0x20]
   14000737c:	call   0x14000baa0
   140007381:	movzx  ecx,WORD PTR [rdi]
   140007384:	lea    rdx,[rsp+0x20]
   140007389:	movzx  ebx,ax
   14000738c:	call   0x14000baa0
   140007391:	add    rsi,0x2
   140007395:	add    rdi,0x2
   140007399:	dec    rbp
   14000739c:	je     0x1400073a8
   14000739e:	test   bx,bx
   1400073a1:	je     0x1400073a8
   1400073a3:	cmp    bx,ax
   1400073a6:	je     0x140007374
   1400073a8:	movzx  ecx,ax
   1400073ab:	movzx  eax,bx
   1400073ae:	sub    eax,ecx
   1400073b0:	cmp    BYTE PTR [rsp+0x38],r12b
   1400073b5:	je     0x1400073c3
   1400073b7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400073bc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400073c3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400073c8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400073cd:	mov    rsi,QWORD PTR [rsp+0x60]
   1400073d2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400073d7:	add    rsp,0x40
   1400073db:	pop    r12
   1400073dd:	ret    
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	sub    rsp,0x28
   1400073e4:	xor    eax,eax
   1400073e6:	mov    r10,rdx
   1400073e9:	mov    r11,rcx
   1400073ec:	cmp    DWORD PTR [rip+0xcfde],eax        # 0x1400143d0
   1400073f2:	jne    0x14000746b
   1400073f4:	test   r8,r8
   1400073f7:	je     0x140007473
   1400073f9:	test   rcx,rcx
   1400073fc:	jne    0x140007418
   1400073fe:	call   0x140003564
   140007403:	mov    DWORD PTR [rax],0x16
   140007409:	call   0x1400034fc
   14000740e:	mov    eax,0x7fffffff
   140007413:	add    rsp,0x28
   140007417:	ret    
   140007418:	test   rdx,rdx
   14000741b:	je     0x1400073fe
   14000741d:	sub    r11,rdx
   140007420:	movzx  ecx,WORD PTR [r11+r10*1]
   140007425:	cmp    cx,0x41
   140007429:	jb     0x140007435
   14000742b:	cmp    cx,0x5a
   14000742f:	ja     0x140007435
   140007431:	add    cx,0x20
   140007435:	movzx  edx,WORD PTR [r10]
   140007439:	cmp    dx,0x41
   14000743d:	jb     0x140007449
   14000743f:	cmp    dx,0x5a
   140007443:	ja     0x140007449
   140007445:	add    dx,0x20
   140007449:	add    r10,0x2
   14000744d:	dec    r8
   140007450:	je     0x14000745c
   140007452:	test   cx,cx
   140007455:	je     0x14000745c
   140007457:	cmp    cx,dx
   14000745a:	je     0x140007420
   14000745c:	movzx  eax,dx
   14000745f:	movzx  ecx,cx
   140007462:	sub    ecx,eax
   140007464:	mov    eax,ecx
   140007466:	add    rsp,0x28
   14000746a:	ret    
   14000746b:	xor    r9d,r9d
   14000746e:	call   0x1400072c8
   140007473:	add    rsp,0x28
   140007477:	ret    
   140007478:	test   r8,r8
   14000747b:	jne    0x140007495
   14000747d:	xor    eax,eax
   14000747f:	ret    
   140007480:	movzx  eax,WORD PTR [rcx]
   140007483:	test   ax,ax
   140007486:	je     0x14000749a
   140007488:	cmp    ax,WORD PTR [rdx]
   14000748b:	jne    0x14000749a
   14000748d:	add    rcx,0x2
   140007491:	add    rdx,0x2
   140007495:	dec    r8
   140007498:	jne    0x140007480
   14000749a:	movzx  eax,WORD PTR [rcx]
   14000749d:	movzx  ecx,WORD PTR [rdx]
   1400074a0:	sub    eax,ecx
   1400074a2:	ret    
   1400074a3:	int3   
   1400074a4:	rex push rbx
   1400074a6:	sub    rsp,0x20
   1400074aa:	mov    r11d,DWORD PTR [r8]
   1400074ad:	mov    rbx,rdx
   1400074b0:	mov    r9,rcx
   1400074b3:	and    r11d,0xfffffff8
   1400074b7:	test   BYTE PTR [r8],0x4
   1400074bb:	mov    r10,rcx
   1400074be:	je     0x1400074d3
   1400074c0:	mov    eax,DWORD PTR [r8+0x8]
   1400074c4:	movsxd r10,DWORD PTR [r8+0x4]
   1400074c8:	neg    eax
   1400074ca:	add    r10,rcx
   1400074cd:	movsxd rcx,eax
   1400074d0:	and    r10,rcx
   1400074d3:	movsxd rax,r11d
   1400074d6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400074da:	mov    rax,QWORD PTR [rbx+0x10]
   1400074de:	mov    ecx,DWORD PTR [rax+0x8]
   1400074e1:	add    rcx,QWORD PTR [rbx+0x8]
   1400074e5:	test   BYTE PTR [rcx+0x3],0xf
   1400074e9:	je     0x1400074f7
   1400074eb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400074ef:	and    eax,0xfffffff0
   1400074f2:	cdqe   
   1400074f4:	add    r9,rax
   1400074f7:	xor    r9,rdx
   1400074fa:	mov    rcx,r9
   1400074fd:	add    rsp,0x20
   140007501:	pop    rbx
   140007502:	jmp    0x140001980
   140007507:	int3   
   140007508:	sub    rsp,0x28
   14000750c:	mov    r8,QWORD PTR [r9+0x38]
   140007510:	mov    rcx,rdx
   140007513:	mov    rdx,r9
   140007516:	call   0x1400074a4
   14000751b:	mov    eax,0x1
   140007520:	add    rsp,0x28
   140007524:	ret    
   140007525:	int3   
   140007526:	int3   
   140007527:	int3   
   140007528:	sub    rsp,0x28
   14000752c:	call   0x140003918
   140007531:	test   rax,rax
   140007534:	je     0x140007540
   140007536:	mov    ecx,0x16
   14000753b:	call   0x140003928
   140007540:	test   BYTE PTR [rip+0xb411],0x2        # 0x140012958
   140007547:	je     0x14000755d
   140007549:	mov    r8d,0x1
   14000754f:	mov    edx,0x40000015
   140007554:	lea    ecx,[r8+0x2]
   140007558:	call   0x14000330c
   14000755d:	mov    ecx,0x3
   140007562:	call   0x140001e60
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	int3   
   14000756d:	int3   
   14000756e:	int3   
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007580:	mov    r11,rcx
   140007583:	sub    rdx,rcx
   140007586:	jb     0x14000772a
   14000758c:	cmp    r8,0x8
   140007590:	jb     0x1400075f3
   140007592:	test   cl,0x7
   140007595:	je     0x1400075cd
   140007597:	test   cl,0x1
   14000759a:	je     0x1400075a7
   14000759c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000759f:	dec    r8
   1400075a2:	mov    BYTE PTR [rcx],al
   1400075a4:	inc    rcx
   1400075a7:	test   cl,0x2
   1400075aa:	je     0x1400075bb
   1400075ac:	mov    ax,WORD PTR [rdx+rcx*1]
   1400075b0:	sub    r8,0x2
   1400075b4:	mov    WORD PTR [rcx],ax
   1400075b7:	add    rcx,0x2
   1400075bb:	test   cl,0x4
   1400075be:	je     0x1400075cd
   1400075c0:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400075c3:	sub    r8,0x4
   1400075c7:	mov    DWORD PTR [rcx],eax
   1400075c9:	add    rcx,0x4
   1400075cd:	mov    r9,r8
   1400075d0:	shr    r9,0x5
   1400075d4:	jne    0x140007627
   1400075d6:	mov    r9,r8
   1400075d9:	shr    r9,0x3
   1400075dd:	je     0x1400075f3
   1400075df:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400075e3:	mov    QWORD PTR [rcx],rax
   1400075e6:	add    rcx,0x8
   1400075ea:	dec    r9
   1400075ed:	jne    0x1400075df
   1400075ef:	and    r8,0x7
   1400075f3:	test   r8,r8
   1400075f6:	jne    0x140007600
   1400075f8:	mov    rax,r11
   1400075fb:	ret    
   1400075fc:	nop    DWORD PTR [rax+0x0]
   140007600:	mov    al,BYTE PTR [rdx+rcx*1]
   140007603:	mov    BYTE PTR [rcx],al
   140007605:	inc    rcx
   140007608:	dec    r8
   14000760b:	jne    0x140007600
   14000760d:	mov    rax,r11
   140007610:	ret    
   140007611:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007620:	data16 data16 xchg ax,ax
   140007624:	data16 xchg ax,ax
   140007627:	cmp    r9,0x2000
   14000762e:	jae    0x140007672
   140007630:	mov    rax,QWORD PTR [rdx+rcx*1]
   140007634:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140007639:	add    rcx,0x20
   14000763d:	mov    QWORD PTR [rcx-0x20],rax
   140007641:	mov    QWORD PTR [rcx-0x18],r10
   140007645:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000764a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000764f:	dec    r9
   140007652:	mov    QWORD PTR [rcx-0x10],rax
   140007656:	mov    QWORD PTR [rcx-0x8],r10
   14000765a:	jne    0x140007630
   14000765c:	and    r8,0x1f
   140007660:	jmp    0x1400075d6
   140007665:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007670:	xchg   ax,ax
   140007672:	cmp    rdx,0x1000
   140007679:	jb     0x140007630
   14000767b:	mov    eax,0x20
   140007680:	prefetchnta BYTE PTR [rdx+rcx*1]
   140007684:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140007689:	add    rcx,0x80
   140007690:	dec    eax
   140007692:	jne    0x140007680
   140007694:	sub    rcx,0x1000
   14000769b:	mov    eax,0x40
   1400076a0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400076a4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400076a9:	movnti QWORD PTR [rcx],r9
   1400076ad:	movnti QWORD PTR [rcx+0x8],r10
   1400076b2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400076b7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400076bc:	movnti QWORD PTR [rcx+0x10],r9
   1400076c1:	movnti QWORD PTR [rcx+0x18],r10
   1400076c6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400076cb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400076d0:	add    rcx,0x40
   1400076d4:	movnti QWORD PTR [rcx-0x20],r9
   1400076d9:	movnti QWORD PTR [rcx-0x18],r10
   1400076de:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400076e3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400076e8:	dec    eax
   1400076ea:	movnti QWORD PTR [rcx-0x10],r9
   1400076ef:	movnti QWORD PTR [rcx-0x8],r10
   1400076f4:	jne    0x1400076a0
   1400076f6:	sub    r8,0x1000
   1400076fd:	cmp    r8,0x1000
   140007704:	jae    0x14000767b
   14000770a:	lock or BYTE PTR [rsp],0x0
   14000770f:	jmp    0x1400075cd
   140007714:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007720:	data16 data16 xchg ax,ax
   140007724:	data16 data16 xchg ax,ax
   140007728:	xchg   ax,ax
   14000772a:	add    rcx,r8
   14000772d:	cmp    r8,0x8
   140007731:	jb     0x140007794
   140007733:	test   cl,0x7
   140007736:	je     0x14000776e
   140007738:	test   cl,0x1
   14000773b:	je     0x140007748
   14000773d:	dec    rcx
   140007740:	mov    al,BYTE PTR [rdx+rcx*1]
   140007743:	dec    r8
   140007746:	mov    BYTE PTR [rcx],al
   140007748:	test   cl,0x2
   14000774b:	je     0x14000775c
   14000774d:	sub    rcx,0x2
   140007751:	mov    ax,WORD PTR [rdx+rcx*1]
   140007755:	sub    r8,0x2
   140007759:	mov    WORD PTR [rcx],ax
   14000775c:	test   cl,0x4
   14000775f:	je     0x14000776e
   140007761:	sub    rcx,0x4
   140007765:	mov    eax,DWORD PTR [rdx+rcx*1]
   140007768:	sub    r8,0x4
   14000776c:	mov    DWORD PTR [rcx],eax
   14000776e:	mov    r9,r8
   140007771:	shr    r9,0x5
   140007775:	jne    0x1400077c7
   140007777:	mov    r9,r8
   14000777a:	shr    r9,0x3
   14000777e:	je     0x140007794
   140007780:	sub    rcx,0x8
   140007784:	mov    rax,QWORD PTR [rdx+rcx*1]
   140007788:	dec    r9
   14000778b:	mov    QWORD PTR [rcx],rax
   14000778e:	jne    0x140007780
   140007790:	and    r8,0x7
   140007794:	test   r8,r8
   140007797:	jne    0x1400077a0
   140007799:	mov    rax,r11
   14000779c:	ret    
   14000779d:	nop    DWORD PTR [rax]
   1400077a0:	dec    rcx
   1400077a3:	mov    al,BYTE PTR [rdx+rcx*1]
   1400077a6:	dec    r8
   1400077a9:	mov    BYTE PTR [rcx],al
   1400077ab:	jne    0x1400077a0
   1400077ad:	mov    rax,r11
   1400077b0:	ret    
   1400077b1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400077c0:	data16 data16 xchg ax,ax
   1400077c4:	data16 xchg ax,ax
   1400077c7:	cmp    r9,0x2000
   1400077ce:	jae    0x140007812
   1400077d0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   1400077d5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400077da:	sub    rcx,0x20
   1400077de:	mov    QWORD PTR [rcx+0x18],rax
   1400077e2:	mov    QWORD PTR [rcx+0x10],r10
   1400077e6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400077eb:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400077ef:	dec    r9
   1400077f2:	mov    QWORD PTR [rcx+0x8],rax
   1400077f6:	mov    QWORD PTR [rcx],r10
   1400077f9:	jne    0x1400077d0
   1400077fb:	and    r8,0x1f
   1400077ff:	jmp    0x140007777
   140007804:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007810:	xchg   ax,ax
   140007812:	cmp    rdx,0xfffffffffffff000
   140007819:	ja     0x1400077d0
   14000781b:	mov    eax,0x20
   140007820:	sub    rcx,0x80
   140007827:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000782b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140007830:	dec    eax
   140007832:	jne    0x140007820
   140007834:	add    rcx,0x1000
   14000783b:	mov    eax,0x40
   140007840:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140007845:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000784a:	movnti QWORD PTR [rcx-0x8],r9
   14000784f:	movnti QWORD PTR [rcx-0x10],r10
   140007854:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140007859:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000785e:	movnti QWORD PTR [rcx-0x18],r9
   140007863:	movnti QWORD PTR [rcx-0x20],r10
   140007868:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000786d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140007872:	sub    rcx,0x40
   140007876:	movnti QWORD PTR [rcx+0x18],r9
   14000787b:	movnti QWORD PTR [rcx+0x10],r10
   140007880:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140007885:	mov    r10,QWORD PTR [rdx+rcx*1]
   140007889:	dec    eax
   14000788b:	movnti QWORD PTR [rcx+0x8],r9
   140007890:	movnti QWORD PTR [rcx],r10
   140007894:	jne    0x140007840
   140007896:	sub    r8,0x1000
   14000789d:	cmp    r8,0x1000
   1400078a4:	jae    0x14000781b
   1400078aa:	lock or BYTE PTR [rsp],0x0
   1400078af:	jmp    0x14000776e
   1400078b4:	lock inc DWORD PTR [rcx]
   1400078b7:	mov    rax,QWORD PTR [rcx+0x110]
   1400078be:	test   rax,rax
   1400078c1:	je     0x1400078c6
   1400078c3:	lock inc DWORD PTR [rax]
   1400078c6:	mov    rax,QWORD PTR [rcx+0x120]
   1400078cd:	test   rax,rax
   1400078d0:	je     0x1400078d5
   1400078d2:	lock inc DWORD PTR [rax]
   1400078d5:	mov    rax,QWORD PTR [rcx+0x118]
   1400078dc:	test   rax,rax
   1400078df:	je     0x1400078e4
   1400078e1:	lock inc DWORD PTR [rax]
   1400078e4:	mov    rax,QWORD PTR [rcx+0x130]
   1400078eb:	test   rax,rax
   1400078ee:	je     0x1400078f3
   1400078f0:	lock inc DWORD PTR [rax]
   1400078f3:	lea    rax,[rcx+0x58]
   1400078f7:	mov    r8d,0x6
   1400078fd:	lea    rdx,[rip+0xb05c]        # 0x140012960
   140007904:	cmp    QWORD PTR [rax-0x10],rdx
   140007908:	je     0x140007915
   14000790a:	mov    rdx,QWORD PTR [rax]
   14000790d:	test   rdx,rdx
   140007910:	je     0x140007915
   140007912:	lock inc DWORD PTR [rdx]
   140007915:	cmp    QWORD PTR [rax-0x8],0x0
   14000791a:	je     0x140007928
   14000791c:	mov    rdx,QWORD PTR [rax+0x8]
   140007920:	test   rdx,rdx
   140007923:	je     0x140007928
   140007925:	lock inc DWORD PTR [rdx]
   140007928:	add    rax,0x20
   14000792c:	dec    r8
   14000792f:	jne    0x1400078fd
   140007931:	mov    rax,QWORD PTR [rcx+0x158]
   140007938:	lock inc DWORD PTR [rax+0x160]
   14000793f:	ret    
   140007940:	test   rcx,rcx
   140007943:	je     0x1400079e0
   140007949:	or     r9d,0xffffffff
   14000794d:	lock add DWORD PTR [rcx],r9d
   140007951:	mov    rax,QWORD PTR [rcx+0x110]
   140007958:	test   rax,rax
   14000795b:	je     0x140007961
   14000795d:	lock add DWORD PTR [rax],r9d
   140007961:	mov    rax,QWORD PTR [rcx+0x120]
   140007968:	test   rax,rax
   14000796b:	je     0x140007971
   14000796d:	lock add DWORD PTR [rax],r9d
   140007971:	mov    rax,QWORD PTR [rcx+0x118]
   140007978:	test   rax,rax
   14000797b:	je     0x140007981
   14000797d:	lock add DWORD PTR [rax],r9d
   140007981:	mov    rax,QWORD PTR [rcx+0x130]
   140007988:	test   rax,rax
   14000798b:	je     0x140007991
   14000798d:	lock add DWORD PTR [rax],r9d
   140007991:	lea    rax,[rcx+0x58]
   140007995:	mov    r8d,0x6
   14000799b:	lea    rdx,[rip+0xafbe]        # 0x140012960
   1400079a2:	cmp    QWORD PTR [rax-0x10],rdx
   1400079a6:	je     0x1400079b4
   1400079a8:	mov    rdx,QWORD PTR [rax]
   1400079ab:	test   rdx,rdx
   1400079ae:	je     0x1400079b4
   1400079b0:	lock add DWORD PTR [rdx],r9d
   1400079b4:	cmp    QWORD PTR [rax-0x8],0x0
   1400079b9:	je     0x1400079c8
   1400079bb:	mov    rdx,QWORD PTR [rax+0x8]
   1400079bf:	test   rdx,rdx
   1400079c2:	je     0x1400079c8
   1400079c4:	lock add DWORD PTR [rdx],r9d
   1400079c8:	add    rax,0x20
   1400079cc:	dec    r8
   1400079cf:	jne    0x14000799b
   1400079d1:	mov    rax,QWORD PTR [rcx+0x158]
   1400079d8:	lock add DWORD PTR [rax+0x160],r9d
   1400079e0:	mov    rax,rcx
   1400079e3:	ret    
   1400079e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400079e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400079ee:	push   rdi
   1400079ef:	sub    rsp,0x20
   1400079f3:	mov    rax,QWORD PTR [rcx+0x128]
   1400079fa:	mov    rbx,rcx
   1400079fd:	test   rax,rax
   140007a00:	je     0x140007a7b
   140007a02:	lea    rcx,[rip+0xb8f7]        # 0x140013300
   140007a09:	cmp    rax,rcx
   140007a0c:	je     0x140007a7b
   140007a0e:	mov    rax,QWORD PTR [rbx+0x110]
   140007a15:	test   rax,rax
   140007a18:	je     0x140007a7b
   140007a1a:	cmp    DWORD PTR [rax],0x0
   140007a1d:	jne    0x140007a7b
   140007a1f:	mov    rcx,QWORD PTR [rbx+0x120]
   140007a26:	test   rcx,rcx
   140007a29:	je     0x140007a41
   140007a2b:	cmp    DWORD PTR [rcx],0x0
   140007a2e:	jne    0x140007a41
   140007a30:	call   0x140001eb4
   140007a35:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a3c:	call   0x14000c03c
   140007a41:	mov    rcx,QWORD PTR [rbx+0x118]
   140007a48:	test   rcx,rcx
   140007a4b:	je     0x140007a63
   140007a4d:	cmp    DWORD PTR [rcx],0x0
   140007a50:	jne    0x140007a63
   140007a52:	call   0x140001eb4
   140007a57:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a5e:	call   0x14000bfd0
   140007a63:	mov    rcx,QWORD PTR [rbx+0x110]
   140007a6a:	call   0x140001eb4
   140007a6f:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a76:	call   0x140001eb4
   140007a7b:	mov    rax,QWORD PTR [rbx+0x130]
   140007a82:	test   rax,rax
   140007a85:	je     0x140007ace
   140007a87:	cmp    DWORD PTR [rax],0x0
   140007a8a:	jne    0x140007ace
   140007a8c:	mov    rcx,QWORD PTR [rbx+0x138]
   140007a93:	sub    rcx,0xfe
   140007a9a:	call   0x140001eb4
   140007a9f:	mov    rcx,QWORD PTR [rbx+0x148]
   140007aa6:	mov    edi,0x80
   140007aab:	sub    rcx,rdi
   140007aae:	call   0x140001eb4
   140007ab3:	mov    rcx,QWORD PTR [rbx+0x150]
   140007aba:	sub    rcx,rdi
   140007abd:	call   0x140001eb4
   140007ac2:	mov    rcx,QWORD PTR [rbx+0x130]
   140007ac9:	call   0x140001eb4
   140007ace:	mov    rcx,QWORD PTR [rbx+0x158]
   140007ad5:	lea    rax,[rip+0xae94]        # 0x140012970
   140007adc:	cmp    rcx,rax
   140007adf:	je     0x140007afb
   140007ae1:	cmp    DWORD PTR [rcx+0x160],0x0
   140007ae8:	jne    0x140007afb
   140007aea:	call   0x14000bbe0
   140007aef:	mov    rcx,QWORD PTR [rbx+0x158]
   140007af6:	call   0x140001eb4
   140007afb:	lea    rdi,[rbx+0x58]
   140007aff:	mov    esi,0x6
   140007b04:	lea    rax,[rip+0xae55]        # 0x140012960
   140007b0b:	cmp    QWORD PTR [rdi-0x10],rax
   140007b0f:	je     0x140007b23
   140007b11:	mov    rcx,QWORD PTR [rdi]
   140007b14:	test   rcx,rcx
   140007b17:	je     0x140007b23
   140007b19:	cmp    DWORD PTR [rcx],0x0
   140007b1c:	jne    0x140007b23
   140007b1e:	call   0x140001eb4
   140007b23:	cmp    QWORD PTR [rdi-0x8],0x0
   140007b28:	je     0x140007b3d
   140007b2a:	mov    rcx,QWORD PTR [rdi+0x8]
   140007b2e:	test   rcx,rcx
   140007b31:	je     0x140007b3d
   140007b33:	cmp    DWORD PTR [rcx],0x0
   140007b36:	jne    0x140007b3d
   140007b38:	call   0x140001eb4
   140007b3d:	add    rdi,0x20
   140007b41:	dec    rsi
   140007b44:	jne    0x140007b04
   140007b46:	mov    rcx,rbx
   140007b49:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b4e:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b53:	add    rsp,0x20
   140007b57:	pop    rdi
   140007b58:	jmp    0x140001eb4
   140007b5d:	int3   
   140007b5e:	int3   
   140007b5f:	int3   
   140007b60:	rex push rbx
   140007b62:	sub    rsp,0x20
   140007b66:	mov    rbx,rdx
   140007b69:	test   rdx,rdx
   140007b6c:	je     0x140007baf
   140007b6e:	test   rcx,rcx
   140007b71:	je     0x140007baf
   140007b73:	mov    r10,QWORD PTR [rcx]
   140007b76:	cmp    r10,rdx
   140007b79:	je     0x140007baa
   140007b7b:	mov    QWORD PTR [rcx],rdx
   140007b7e:	mov    rcx,rdx
   140007b81:	call   0x1400078b4
   140007b86:	test   r10,r10
   140007b89:	je     0x140007baa
   140007b8b:	mov    rcx,r10
   140007b8e:	call   0x140007940
   140007b93:	cmp    DWORD PTR [r10],0x0
   140007b97:	jne    0x140007baa
   140007b99:	lea    rax,[rip+0xb090]        # 0x140012c30
   140007ba0:	cmp    r10,rax
   140007ba3:	je     0x140007baa
   140007ba5:	call   0x1400079e4
   140007baa:	mov    rax,rbx
   140007bad:	jmp    0x140007bb1
   140007baf:	xor    eax,eax
   140007bb1:	add    rsp,0x20
   140007bb5:	pop    rbx
   140007bb6:	ret    
   140007bb7:	int3   
   140007bb8:	rex push rbx
   140007bba:	sub    rsp,0x20
   140007bbe:	call   0x140003d18
   140007bc3:	mov    rbx,rax
   140007bc6:	mov    ecx,DWORD PTR [rax+0xc8]
   140007bcc:	test   DWORD PTR [rip+0xb70e],ecx        # 0x1400132e0
   140007bd2:	je     0x140007bec
   140007bd4:	cmp    QWORD PTR [rax+0xc0],0x0
   140007bdc:	je     0x140007bec
   140007bde:	call   0x140003d18
   140007be3:	mov    rbx,QWORD PTR [rax+0xc0]
   140007bea:	jmp    0x140007c17
   140007bec:	mov    ecx,0xc
   140007bf1:	call   0x140003870
   140007bf6:	nop
   140007bf7:	lea    rcx,[rbx+0xc0]
   140007bfe:	mov    rdx,QWORD PTR [rip+0xb18b]        # 0x140012d90
   140007c05:	call   0x140007b60
   140007c0a:	mov    rbx,rax
   140007c0d:	mov    ecx,0xc
   140007c12:	call   0x140003770
   140007c17:	test   rbx,rbx
   140007c1a:	jne    0x140007c24
   140007c1c:	lea    ecx,[rbx+0x20]
   140007c1f:	call   0x140001e8c
   140007c24:	mov    rax,rbx
   140007c27:	add    rsp,0x20
   140007c2b:	pop    rbx
   140007c2c:	ret    
   140007c2d:	int3   
   140007c2e:	int3   
   140007c2f:	int3   
   140007c30:	mov    QWORD PTR [rsp+0x8],rbx
   140007c35:	mov    QWORD PTR [rsp+0x10],rbp
   140007c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140007c3f:	push   rdi
   140007c40:	sub    rsp,0x20
   140007c44:	lea    rbx,[rcx+0x1c]
   140007c48:	mov    rbp,rcx
   140007c4b:	mov    esi,0x101
   140007c50:	mov    rcx,rbx
   140007c53:	mov    r8d,esi
   140007c56:	xor    edx,edx
   140007c58:	call   0x140004a30
   140007c5d:	xor    r11d,r11d
   140007c60:	lea    rdi,[rbp+0x10]
   140007c64:	lea    ecx,[r11+0x6]
   140007c68:	movzx  eax,r11w
   140007c6c:	mov    DWORD PTR [rbp+0xc],r11d
   140007c70:	mov    QWORD PTR [rbp+0x4],r11
   140007c74:	rep stos WORD PTR es:[rdi],ax
   140007c77:	lea    rdi,[rip+0xb122]        # 0x140012da0
   140007c7e:	sub    rdi,rbp
   140007c81:	mov    al,BYTE PTR [rdi+rbx*1]
   140007c84:	mov    BYTE PTR [rbx],al
   140007c86:	inc    rbx
   140007c89:	dec    rsi
   140007c8c:	jne    0x140007c81
   140007c8e:	lea    rcx,[rbp+0x11d]
   140007c95:	mov    edx,0x100
   140007c9a:	mov    al,BYTE PTR [rcx+rdi*1]
   140007c9d:	mov    BYTE PTR [rcx],al
   140007c9f:	inc    rcx
   140007ca2:	dec    rdx
   140007ca5:	jne    0x140007c9a
   140007ca7:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cac:	mov    rbp,QWORD PTR [rsp+0x38]
   140007cb1:	mov    rsi,QWORD PTR [rsp+0x40]
   140007cb6:	add    rsp,0x20
   140007cba:	pop    rdi
   140007cbb:	ret    
   140007cbc:	mov    rax,rsp
   140007cbf:	mov    QWORD PTR [rax+0x10],rbx
   140007cc3:	mov    QWORD PTR [rax+0x18],rsi
   140007cc7:	mov    QWORD PTR [rax+0x20],rdi
   140007ccb:	push   rbp
   140007ccc:	lea    rbp,[rax-0x488]
   140007cd3:	sub    rsp,0x580
   140007cda:	mov    rax,QWORD PTR [rip+0xa327]        # 0x140012008
   140007ce1:	xor    rax,rsp
   140007ce4:	mov    QWORD PTR [rbp+0x470],rax
   140007ceb:	mov    rsi,rcx
   140007cee:	mov    ecx,DWORD PTR [rcx+0x4]
   140007cf1:	lea    rdx,[rsp+0x50]
   140007cf6:	call   QWORD PTR [rip+0x6514]        # 0x14000e210
   140007cfc:	mov    ebx,0x100
   140007d01:	test   eax,eax
   140007d03:	je     0x140007e45
   140007d09:	xor    eax,eax
   140007d0b:	lea    rcx,[rsp+0x70]
   140007d10:	mov    BYTE PTR [rcx],al
   140007d12:	inc    eax
   140007d14:	inc    rcx
   140007d17:	cmp    eax,ebx
   140007d19:	jb     0x140007d10
   140007d1b:	mov    al,BYTE PTR [rsp+0x56]
   140007d1f:	mov    BYTE PTR [rsp+0x70],0x20
   140007d24:	lea    rdi,[rsp+0x56]
   140007d29:	jmp    0x140007d54
   140007d2b:	movzx  edx,BYTE PTR [rdi+0x1]
   140007d2f:	movzx  r8d,al
   140007d33:	cmp    r8d,edx
   140007d36:	ja     0x140007d4e
   140007d38:	sub    edx,r8d
   140007d3b:	mov    eax,r8d
   140007d3e:	lea    rcx,[rsp+r8*1+0x70]
   140007d43:	lea    r8d,[rdx+0x1]
   140007d47:	mov    dl,0x20
   140007d49:	call   0x140004a30
   140007d4e:	add    rdi,0x2
   140007d52:	mov    al,BYTE PTR [rdi]
   140007d54:	test   al,al
   140007d56:	jne    0x140007d2b
   140007d58:	mov    eax,DWORD PTR [rsi+0xc]
   140007d5b:	and    DWORD PTR [rsp+0x38],0x0
   140007d60:	lea    r8,[rsp+0x70]
   140007d65:	mov    DWORD PTR [rsp+0x30],eax
   140007d69:	mov    eax,DWORD PTR [rsi+0x4]
   140007d6c:	mov    r9d,ebx
   140007d6f:	mov    DWORD PTR [rsp+0x28],eax
   140007d73:	lea    rax,[rbp+0x270]
   140007d7a:	mov    edx,0x1
   140007d7f:	xor    ecx,ecx
   140007d81:	mov    QWORD PTR [rsp+0x20],rax
   140007d86:	call   0x14000c60c
   140007d8b:	and    DWORD PTR [rsp+0x40],0x0
   140007d90:	mov    eax,DWORD PTR [rsi+0x4]
   140007d93:	mov    edx,DWORD PTR [rsi+0xc]
   140007d96:	mov    DWORD PTR [rsp+0x38],eax
   140007d9a:	lea    rax,[rbp+0x70]
   140007d9e:	mov    DWORD PTR [rsp+0x30],ebx
   140007da2:	mov    QWORD PTR [rsp+0x28],rax
   140007da7:	lea    r9,[rsp+0x70]
   140007dac:	mov    r8d,ebx
   140007daf:	xor    ecx,ecx
   140007db1:	mov    DWORD PTR [rsp+0x20],ebx
   140007db5:	call   0x14000c414
   140007dba:	and    DWORD PTR [rsp+0x40],0x0
   140007dbf:	mov    eax,DWORD PTR [rsi+0x4]
   140007dc2:	mov    edx,DWORD PTR [rsi+0xc]
   140007dc5:	mov    DWORD PTR [rsp+0x38],eax
   140007dc9:	lea    rax,[rbp+0x170]
   140007dd0:	mov    DWORD PTR [rsp+0x30],ebx
   140007dd4:	mov    QWORD PTR [rsp+0x28],rax
   140007dd9:	lea    r9,[rsp+0x70]
   140007dde:	mov    r8d,0x200
   140007de4:	xor    ecx,ecx
   140007de6:	mov    DWORD PTR [rsp+0x20],ebx
   140007dea:	call   0x14000c414
   140007def:	lea    rdx,[rbp+0x70]
   140007df3:	lea    r8,[rbp+0x170]
   140007dfa:	sub    rdx,rsi
   140007dfd:	lea    r11,[rbp+0x270]
   140007e04:	lea    rcx,[rsi+0x1d]
   140007e08:	sub    r8,rsi
   140007e0b:	test   BYTE PTR [r11],0x1
   140007e0f:	je     0x140007e1a
   140007e11:	or     BYTE PTR [rcx],0x10
   140007e14:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   140007e18:	jmp    0x140007e28
   140007e1a:	test   BYTE PTR [r11],0x2
   140007e1e:	je     0x140007e30
   140007e20:	or     BYTE PTR [rcx],0x20
   140007e23:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   140007e28:	mov    BYTE PTR [rcx+0x100],al
   140007e2e:	jmp    0x140007e37
   140007e30:	mov    BYTE PTR [rcx+0x100],0x0
   140007e37:	inc    rcx
   140007e3a:	add    r11,0x2
   140007e3e:	dec    rbx
   140007e41:	jne    0x140007e0b
   140007e43:	jmp    0x140007e84
   140007e45:	xor    edx,edx
   140007e47:	lea    rcx,[rsi+0x1d]
   140007e4b:	lea    r8d,[rdx-0x61]
   140007e4f:	lea    eax,[r8+0x20]
   140007e53:	cmp    eax,0x19
   140007e56:	ja     0x140007e60
   140007e58:	or     BYTE PTR [rcx],0x10
   140007e5b:	lea    eax,[rdx+0x20]
   140007e5e:	jmp    0x140007e6c
   140007e60:	cmp    r8d,0x19
   140007e64:	ja     0x140007e74
   140007e66:	or     BYTE PTR [rcx],0x20
   140007e69:	lea    eax,[rdx-0x20]
   140007e6c:	mov    BYTE PTR [rcx+0x100],al
   140007e72:	jmp    0x140007e7b
   140007e74:	mov    BYTE PTR [rcx+0x100],0x0
   140007e7b:	inc    edx
   140007e7d:	inc    rcx
   140007e80:	cmp    edx,ebx
   140007e82:	jb     0x140007e4b
   140007e84:	mov    rcx,QWORD PTR [rbp+0x470]
   140007e8b:	xor    rcx,rsp
   140007e8e:	call   0x140001980
   140007e93:	lea    r11,[rsp+0x580]
   140007e9b:	mov    rbx,QWORD PTR [r11+0x18]
   140007e9f:	mov    rsi,QWORD PTR [r11+0x20]
   140007ea3:	mov    rdi,QWORD PTR [r11+0x28]
   140007ea7:	mov    rsp,r11
   140007eaa:	pop    rbp
   140007eab:	ret    
   140007eac:	mov    QWORD PTR [rsp+0x10],rbx
   140007eb1:	push   rdi
   140007eb2:	sub    rsp,0x20
   140007eb6:	call   0x140003d18
   140007ebb:	mov    rdi,rax
   140007ebe:	mov    ecx,DWORD PTR [rax+0xc8]
   140007ec4:	test   DWORD PTR [rip+0xb416],ecx        # 0x1400132e0
   140007eca:	je     0x140007edf
   140007ecc:	cmp    QWORD PTR [rax+0xc0],0x0
   140007ed4:	je     0x140007edf
   140007ed6:	mov    rbx,QWORD PTR [rax+0xb8]
   140007edd:	jmp    0x140007f4b
   140007edf:	mov    ecx,0xd
   140007ee4:	call   0x140003870
   140007ee9:	nop
   140007eea:	mov    rbx,QWORD PTR [rdi+0xb8]
   140007ef1:	mov    QWORD PTR [rsp+0x30],rbx
   140007ef6:	cmp    rbx,QWORD PTR [rip+0xb2d3]        # 0x1400131d0
   140007efd:	je     0x140007f41
   140007eff:	test   rbx,rbx
   140007f02:	je     0x140007f1f
   140007f04:	lock dec DWORD PTR [rbx]
   140007f07:	jne    0x140007f1f
   140007f09:	lea    rax,[rip+0xae90]        # 0x140012da0
   140007f10:	mov    rcx,QWORD PTR [rsp+0x30]
   140007f15:	cmp    rcx,rax
   140007f18:	je     0x140007f1f
   140007f1a:	call   0x140001eb4
   140007f1f:	mov    rax,QWORD PTR [rip+0xb2aa]        # 0x1400131d0
   140007f26:	mov    QWORD PTR [rdi+0xb8],rax
   140007f2d:	mov    rax,QWORD PTR [rip+0xb29c]        # 0x1400131d0
   140007f34:	mov    QWORD PTR [rsp+0x30],rax
   140007f39:	lock inc DWORD PTR [rax]
   140007f3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f41:	mov    ecx,0xd
   140007f46:	call   0x140003770
   140007f4b:	test   rbx,rbx
   140007f4e:	jne    0x140007f58
   140007f50:	lea    ecx,[rbx+0x20]
   140007f53:	call   0x140001e8c
   140007f58:	mov    rax,rbx
   140007f5b:	mov    rbx,QWORD PTR [rsp+0x38]
   140007f60:	add    rsp,0x20
   140007f64:	pop    rdi
   140007f65:	ret    
   140007f66:	int3   
   140007f67:	int3   
   140007f68:	rex push rbx
   140007f6a:	sub    rsp,0x40
   140007f6e:	mov    ebx,ecx
   140007f70:	lea    rcx,[rsp+0x20]
   140007f75:	xor    edx,edx
   140007f77:	call   0x140004978
   140007f7c:	and    DWORD PTR [rip+0xc3fd],0x0        # 0x140014380
   140007f83:	cmp    ebx,0xfffffffe
   140007f86:	jne    0x140007fad
   140007f88:	mov    DWORD PTR [rip+0xc3ee],0x1        # 0x140014380
   140007f92:	call   QWORD PTR [rip+0x6288]        # 0x14000e220
   140007f98:	cmp    BYTE PTR [rsp+0x38],0x0
   140007f9d:	je     0x140007ff2
   140007f9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140007fa4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007fab:	jmp    0x140007ff2
   140007fad:	cmp    ebx,0xfffffffd
   140007fb0:	jne    0x140007fc4
   140007fb2:	mov    DWORD PTR [rip+0xc3c4],0x1        # 0x140014380
   140007fbc:	call   QWORD PTR [rip+0x6256]        # 0x14000e218
   140007fc2:	jmp    0x140007f98
   140007fc4:	cmp    ebx,0xfffffffc
   140007fc7:	jne    0x140007fdd
   140007fc9:	mov    rax,QWORD PTR [rsp+0x20]
   140007fce:	mov    DWORD PTR [rip+0xc3a8],0x1        # 0x140014380
   140007fd8:	mov    eax,DWORD PTR [rax+0x4]
   140007fdb:	jmp    0x140007f98
   140007fdd:	cmp    BYTE PTR [rsp+0x38],0x0
   140007fe2:	je     0x140007ff0
   140007fe4:	mov    rax,QWORD PTR [rsp+0x30]
   140007fe9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140007ff0:	mov    eax,ebx
   140007ff2:	add    rsp,0x40
   140007ff6:	pop    rbx
   140007ff7:	ret    
   140007ff8:	mov    QWORD PTR [rsp+0x18],rbx
   140007ffd:	push   rbp
   140007ffe:	push   rsi
   140007fff:	push   rdi
   140008000:	push   r12
   140008002:	push   r13
   140008004:	sub    rsp,0x40
   140008008:	mov    rax,QWORD PTR [rip+0x9ff9]        # 0x140012008
   14000800f:	xor    rax,rsp
   140008012:	mov    QWORD PTR [rsp+0x38],rax
   140008017:	mov    rsi,rdx
   14000801a:	call   0x140007f68
   14000801f:	xor    ebx,ebx
   140008021:	mov    edi,eax
   140008023:	test   eax,eax
   140008025:	jne    0x140008034
   140008027:	mov    rcx,rsi
   14000802a:	call   0x140007c30
   14000802f:	jmp    0x14000824a
   140008034:	lea    r13,[rip+0xb1a5]        # 0x1400131e0
   14000803b:	mov    ecx,ebx
   14000803d:	mov    rbp,rbx
   140008040:	mov    rax,r13
   140008043:	mov    r12d,0x1
   140008049:	cmp    DWORD PTR [rax],edi
   14000804b:	je     0x140008177
   140008051:	add    ecx,r12d
   140008054:	add    rbp,r12
   140008057:	add    rax,0x30
   14000805b:	cmp    ecx,0x5
   14000805e:	jb     0x140008049
   140008060:	cmp    edi,0xfde8
   140008066:	je     0x14000816f
   14000806c:	cmp    edi,0xfde9
   140008072:	je     0x14000816f
   140008078:	movzx  ecx,di
   14000807b:	call   QWORD PTR [rip+0x61a7]        # 0x14000e228
   140008081:	test   eax,eax
   140008083:	je     0x14000816f
   140008089:	lea    rdx,[rsp+0x20]
   14000808e:	mov    ecx,edi
   140008090:	call   QWORD PTR [rip+0x617a]        # 0x14000e210
   140008096:	test   eax,eax
   140008098:	je     0x140008163
   14000809e:	lea    rcx,[rsi+0x1c]
   1400080a2:	xor    edx,edx
   1400080a4:	mov    r8d,0x101
   1400080aa:	call   0x140004a30
   1400080af:	mov    DWORD PTR [rsi+0x4],edi
   1400080b2:	mov    DWORD PTR [rsi+0xc],ebx
   1400080b5:	cmp    DWORD PTR [rsp+0x20],r12d
   1400080ba:	jbe    0x14000814c
   1400080c0:	lea    rax,[rsp+0x26]
   1400080c5:	cmp    BYTE PTR [rsp+0x26],bl
   1400080c9:	je     0x1400080f8
   1400080cb:	cmp    BYTE PTR [rax+0x1],bl
   1400080ce:	je     0x1400080f8
   1400080d0:	movzx  edi,BYTE PTR [rax]
   1400080d3:	movzx  ecx,BYTE PTR [rax+0x1]
   1400080d7:	cmp    edi,ecx
   1400080d9:	ja     0x1400080f0
   1400080db:	sub    ecx,edi
   1400080dd:	lea    rdx,[rdi+rsi*1+0x1d]
   1400080e2:	add    ecx,r12d
   1400080e5:	or     BYTE PTR [rdx],0x4
   1400080e8:	add    rdx,r12
   1400080eb:	sub    rcx,r12
   1400080ee:	jne    0x1400080e5
   1400080f0:	add    rax,0x2
   1400080f4:	cmp    BYTE PTR [rax],bl
   1400080f6:	jne    0x1400080cb
   1400080f8:	lea    rax,[rsi+0x1e]
   1400080fc:	mov    ecx,0xfe
   140008101:	or     BYTE PTR [rax],0x8
   140008104:	add    rax,r12
   140008107:	sub    rcx,r12
   14000810a:	jne    0x140008101
   14000810c:	mov    ecx,DWORD PTR [rsi+0x4]
   14000810f:	sub    ecx,0x3a4
   140008115:	je     0x14000813e
   140008117:	sub    ecx,0x4
   14000811a:	je     0x140008137
   14000811c:	sub    ecx,0xd
   14000811f:	je     0x140008130
   140008121:	dec    ecx
   140008123:	je     0x140008129
   140008125:	mov    eax,ebx
   140008127:	jmp    0x140008143
   140008129:	mov    eax,0x404
   14000812e:	jmp    0x140008143
   140008130:	mov    eax,0x412
   140008135:	jmp    0x140008143
   140008137:	mov    eax,0x804
   14000813c:	jmp    0x140008143
   14000813e:	mov    eax,0x411
   140008143:	mov    DWORD PTR [rsi+0xc],eax
   140008146:	mov    DWORD PTR [rsi+0x8],r12d
   14000814a:	jmp    0x14000814f
   14000814c:	mov    DWORD PTR [rsi+0x8],ebx
   14000814f:	lea    rdi,[rsi+0x10]
   140008153:	movzx  eax,bx
   140008156:	mov    ecx,0x6
   14000815b:	rep stos WORD PTR es:[rdi],ax
   14000815e:	jmp    0x140008242
   140008163:	cmp    DWORD PTR [rip+0xc217],ebx        # 0x140014380
   140008169:	jne    0x140008027
   14000816f:	or     eax,0xffffffff
   140008172:	jmp    0x14000824c
   140008177:	lea    rcx,[rsi+0x1c]
   14000817b:	xor    edx,edx
   14000817d:	mov    r8d,0x101
   140008183:	call   0x140004a30
   140008188:	lea    r10,[rbp+rbp*2+0x0]
   14000818d:	lea    r11,[rip+0xb044]        # 0x1400131d8
   140008194:	shl    r10,0x4
   140008198:	mov    ebp,0x4
   14000819d:	lea    r8,[r10+r13*1+0x10]
   1400081a2:	mov    rcx,r8
   1400081a5:	cmp    BYTE PTR [r8],bl
   1400081a8:	je     0x1400081db
   1400081aa:	cmp    BYTE PTR [rcx+0x1],bl
   1400081ad:	je     0x1400081db
   1400081af:	movzx  edx,BYTE PTR [rcx]
   1400081b2:	movzx  eax,BYTE PTR [rcx+0x1]
   1400081b6:	cmp    edx,eax
   1400081b8:	ja     0x1400081d3
   1400081ba:	lea    r9,[rdx+rsi*1+0x1d]
   1400081bf:	mov    al,BYTE PTR [r11]
   1400081c2:	add    edx,r12d
   1400081c5:	or     BYTE PTR [r9],al
   1400081c8:	movzx  eax,BYTE PTR [rcx+0x1]
   1400081cc:	add    r9,r12
   1400081cf:	cmp    edx,eax
   1400081d1:	jbe    0x1400081bf
   1400081d3:	add    rcx,0x2
   1400081d7:	cmp    BYTE PTR [rcx],bl
   1400081d9:	jne    0x1400081aa
   1400081db:	add    r8,0x8
   1400081df:	add    r11,r12
   1400081e2:	sub    rbp,r12
   1400081e5:	jne    0x1400081a2
   1400081e7:	mov    DWORD PTR [rsi+0x4],edi
   1400081ea:	sub    edi,0x3a4
   1400081f0:	mov    DWORD PTR [rsi+0x8],r12d
   1400081f4:	je     0x140008219
   1400081f6:	sub    edi,0x4
   1400081f9:	je     0x140008212
   1400081fb:	sub    edi,0xd
   1400081fe:	je     0x14000820b
   140008200:	dec    edi
   140008202:	jne    0x14000821e
   140008204:	mov    ebx,0x404
   140008209:	jmp    0x14000821e
   14000820b:	mov    ebx,0x412
   140008210:	jmp    0x14000821e
   140008212:	mov    ebx,0x804
   140008217:	jmp    0x14000821e
   140008219:	mov    ebx,0x411
   14000821e:	sub    r10,rsi
   140008221:	mov    DWORD PTR [rsi+0xc],ebx
   140008224:	lea    rcx,[rsi+0x10]
   140008228:	lea    rdi,[r10+r13*1-0xc]
   14000822d:	mov    edx,0x6
   140008232:	movzx  eax,WORD PTR [rdi+rcx*1]
   140008236:	mov    WORD PTR [rcx],ax
   140008239:	add    rcx,0x2
   14000823d:	sub    rdx,r12
   140008240:	jne    0x140008232
   140008242:	mov    rcx,rsi
   140008245:	call   0x140007cbc
   14000824a:	xor    eax,eax
   14000824c:	mov    rcx,QWORD PTR [rsp+0x38]
   140008251:	xor    rcx,rsp
   140008254:	call   0x140001980
   140008259:	mov    rbx,QWORD PTR [rsp+0x80]
   140008261:	add    rsp,0x40
   140008265:	pop    r13
   140008267:	pop    r12
   140008269:	pop    rdi
   14000826a:	pop    rsi
   14000826b:	pop    rbp
   14000826c:	ret    
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	mov    rax,rsp
   140008273:	mov    QWORD PTR [rax+0x8],rbx
   140008277:	mov    QWORD PTR [rax+0x10],rsi
   14000827b:	mov    QWORD PTR [rax+0x18],rdi
   14000827f:	mov    QWORD PTR [rax+0x20],r12
   140008283:	push   r13
   140008285:	sub    rsp,0x30
   140008289:	mov    edi,ecx
   14000828b:	or     r13d,0xffffffff
   14000828f:	call   0x140003d18
   140008294:	mov    rsi,rax
   140008297:	call   0x140007eac
   14000829c:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400082a3:	mov    ecx,edi
   1400082a5:	call   0x140007f68
   1400082aa:	mov    r12d,eax
   1400082ad:	cmp    eax,DWORD PTR [rbx+0x4]
   1400082b0:	je     0x14000842b
   1400082b6:	mov    ecx,0x220
   1400082bb:	call   0x1400067e0
   1400082c0:	mov    rbx,rax
   1400082c3:	xor    edi,edi
   1400082c5:	test   rax,rax
   1400082c8:	je     0x140008430
   1400082ce:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400082d5:	mov    rcx,rax
   1400082d8:	mov    r8d,0x220
   1400082de:	call   0x140007580
   1400082e3:	mov    DWORD PTR [rbx],edi
   1400082e5:	mov    rdx,rbx
   1400082e8:	mov    ecx,r12d
   1400082eb:	call   0x140007ff8
   1400082f0:	mov    r13d,eax
   1400082f3:	test   eax,eax
   1400082f5:	jne    0x140008405
   1400082fb:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008302:	lea    r12,[rip+0xaa97]        # 0x140012da0
   140008309:	lock dec DWORD PTR [rcx]
   14000830c:	jne    0x14000831f
   14000830e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008315:	cmp    rcx,r12
   140008318:	je     0x14000831f
   14000831a:	call   0x140001eb4
   14000831f:	mov    QWORD PTR [rsi+0xb8],rbx
   140008326:	lock inc DWORD PTR [rbx]
   140008329:	test   BYTE PTR [rsi+0xc8],0x2
   140008330:	jne    0x140008430
   140008336:	test   BYTE PTR [rip+0xafa3],0x1        # 0x1400132e0
   14000833d:	jne    0x140008430
   140008343:	mov    esi,0xd
   140008348:	mov    ecx,esi
   14000834a:	call   0x140003870
   14000834f:	nop
   140008350:	mov    eax,DWORD PTR [rbx+0x4]
   140008353:	mov    DWORD PTR [rip+0xc03b],eax        # 0x140014394
   140008359:	mov    eax,DWORD PTR [rbx+0x8]
   14000835c:	mov    DWORD PTR [rip+0xc036],eax        # 0x140014398
   140008362:	mov    eax,DWORD PTR [rbx+0xc]
   140008365:	mov    DWORD PTR [rip+0xc031],eax        # 0x14001439c
   14000836b:	mov    edx,edi
   14000836d:	lea    r8,[rip+0xffffffffffff7c8c]        # 0x140000000
   140008374:	mov    DWORD PTR [rsp+0x20],edx
   140008378:	cmp    edx,0x5
   14000837b:	jge    0x140008392
   14000837d:	movsxd rcx,edx
   140008380:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140008385:	mov    WORD PTR [r8+rcx*2+0x14388],ax
   14000838e:	inc    edx
   140008390:	jmp    0x140008374
   140008392:	mov    edx,edi
   140008394:	mov    DWORD PTR [rsp+0x20],edx
   140008398:	cmp    edx,0x101
   14000839e:	jge    0x1400083b3
   1400083a0:	movsxd rcx,edx
   1400083a3:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   1400083a7:	mov    BYTE PTR [rcx+r8*1+0x12fc0],al
   1400083af:	inc    edx
   1400083b1:	jmp    0x140008394
   1400083b3:	mov    DWORD PTR [rsp+0x20],edi
   1400083b7:	cmp    edi,0x100
   1400083bd:	jge    0x1400083d5
   1400083bf:	movsxd rcx,edi
   1400083c2:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   1400083c9:	mov    BYTE PTR [rcx+r8*1+0x130d0],al
   1400083d1:	inc    edi
   1400083d3:	jmp    0x1400083b3
   1400083d5:	mov    rax,QWORD PTR [rip+0xadf4]        # 0x1400131d0
   1400083dc:	lock dec DWORD PTR [rax]
   1400083df:	jne    0x1400083f2
   1400083e1:	mov    rcx,QWORD PTR [rip+0xade8]        # 0x1400131d0
   1400083e8:	cmp    rcx,r12
   1400083eb:	je     0x1400083f2
   1400083ed:	call   0x140001eb4
   1400083f2:	mov    QWORD PTR [rip+0xadd7],rbx        # 0x1400131d0
   1400083f9:	lock inc DWORD PTR [rbx]
   1400083fc:	mov    ecx,esi
   1400083fe:	call   0x140003770
   140008403:	jmp    0x140008430
   140008405:	cmp    eax,0xffffffff
   140008408:	jne    0x140008430
   14000840a:	lea    r12,[rip+0xa98f]        # 0x140012da0
   140008411:	cmp    rbx,r12
   140008414:	je     0x14000841e
   140008416:	mov    rcx,rbx
   140008419:	call   0x140001eb4
   14000841e:	call   0x140003564
   140008423:	mov    DWORD PTR [rax],0x16
   140008429:	jmp    0x140008430
   14000842b:	xor    edi,edi
   14000842d:	mov    r13d,edi
   140008430:	mov    eax,r13d
   140008433:	mov    rbx,QWORD PTR [rsp+0x40]
   140008438:	mov    rsi,QWORD PTR [rsp+0x48]
   14000843d:	mov    rdi,QWORD PTR [rsp+0x50]
   140008442:	mov    r12,QWORD PTR [rsp+0x58]
   140008447:	add    rsp,0x30
   14000844b:	pop    r13
   14000844d:	ret    
   14000844e:	int3   
   14000844f:	int3   
   140008450:	sub    rsp,0x28
   140008454:	cmp    DWORD PTR [rip+0xd415],0x0        # 0x140015870
   14000845b:	jne    0x140008471
   14000845d:	mov    ecx,0xfffffffd
   140008462:	call   0x140008270
   140008467:	mov    DWORD PTR [rip+0xd3ff],0x1        # 0x140015870
   140008471:	xor    eax,eax
   140008473:	add    rsp,0x28
   140008477:	ret    
   140008478:	sub    rsp,0x28
   14000847c:	test   rcx,rcx
   14000847f:	jne    0x14000849a
   140008481:	call   0x140003564
   140008486:	mov    DWORD PTR [rax],0x16
   14000848c:	call   0x1400034fc
   140008491:	or     rax,0xffffffffffffffff
   140008495:	add    rsp,0x28
   140008499:	ret    
   14000849a:	mov    r8,rcx
   14000849d:	mov    rcx,QWORD PTR [rip+0xbdb4]        # 0x140014258
   1400084a4:	xor    edx,edx
   1400084a6:	add    rsp,0x28
   1400084aa:	rex.W jmp QWORD PTR [rip+0x5d7f]        # 0x14000e230
   1400084b1:	int3   
   1400084b2:	int3   
   1400084b3:	int3   
   1400084b4:	mov    ecx,0x2
   1400084b9:	jmp    0x140001e8c
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	int3   
   1400084c1:	int3   
   1400084c2:	int3   
   1400084c3:	int3   
   1400084c4:	int3   
   1400084c5:	int3   
   1400084c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400084d0:	mov    rax,rcx
   1400084d3:	neg    rcx
   1400084d6:	test   rax,0x7
   1400084dc:	je     0x1400084ed
   1400084de:	xchg   ax,ax
   1400084e0:	mov    dl,BYTE PTR [rax]
   1400084e2:	inc    rax
   1400084e5:	test   dl,dl
   1400084e7:	je     0x140008548
   1400084e9:	test   al,0x7
   1400084eb:	jne    0x1400084e0
   1400084ed:	movabs r8,0x7efefefefefefeff
   1400084f7:	movabs r11,0x8101010101010100
   140008501:	mov    rdx,QWORD PTR [rax]
   140008504:	mov    r9,r8
   140008507:	add    rax,0x8
   14000850b:	add    r9,rdx
   14000850e:	not    rdx
   140008511:	xor    rdx,r9
   140008514:	and    rdx,r11
   140008517:	je     0x140008501
   140008519:	mov    rdx,QWORD PTR [rax-0x8]
   14000851d:	test   dl,dl
   14000851f:	je     0x140008572
   140008521:	test   dh,dh
   140008523:	je     0x14000856c
   140008525:	shr    rdx,0x10
   140008529:	test   dl,dl
   14000852b:	je     0x140008566
   14000852d:	test   dh,dh
   14000852f:	je     0x140008560
   140008531:	shr    rdx,0x10
   140008535:	test   dl,dl
   140008537:	je     0x14000855a
   140008539:	test   dh,dh
   14000853b:	je     0x140008554
   14000853d:	shr    edx,0x10
   140008540:	test   dl,dl
   140008542:	je     0x14000854e
   140008544:	test   dh,dh
   140008546:	jne    0x140008501
   140008548:	lea    rax,[rcx+rax*1-0x1]
   14000854d:	ret    
   14000854e:	lea    rax,[rcx+rax*1-0x2]
   140008553:	ret    
   140008554:	lea    rax,[rcx+rax*1-0x3]
   140008559:	ret    
   14000855a:	lea    rax,[rcx+rax*1-0x4]
   14000855f:	ret    
   140008560:	lea    rax,[rcx+rax*1-0x5]
   140008565:	ret    
   140008566:	lea    rax,[rcx+rax*1-0x6]
   14000856b:	ret    
   14000856c:	lea    rax,[rcx+rax*1-0x7]
   140008571:	ret    
   140008572:	lea    rax,[rcx+rax*1-0x8]
   140008577:	ret    
   140008578:	rex push rbx
   14000857a:	push   rbp
   14000857b:	push   rsi
   14000857c:	push   rdi
   14000857d:	push   r12
   14000857f:	push   r13
   140008581:	push   r14
   140008583:	sub    rsp,0x50
   140008587:	mov    rax,QWORD PTR [rip+0x9a7a]        # 0x140012008
   14000858e:	xor    rax,rsp
   140008591:	mov    QWORD PTR [rsp+0x48],rax
   140008596:	mov    ebp,r8d
   140008599:	mov    r14,rdx
   14000859c:	mov    r13,rcx
   14000859f:	call   0x140003ba8
   1400085a4:	xor    ebx,ebx
   1400085a6:	cmp    QWORD PTR [rip+0xbdf3],rbx        # 0x1400143a0
   1400085ad:	mov    rdi,rax
   1400085b0:	jne    0x14000868b
   1400085b6:	lea    rcx,[rip+0x75eb]        # 0x14000fba8
   1400085bd:	call   QWORD PTR [rip+0x5b85]        # 0x14000e148
   1400085c3:	mov    rsi,rax
   1400085c6:	test   rax,rax
   1400085c9:	je     0x140008762
   1400085cf:	lea    rdx,[rip+0x75c2]        # 0x14000fb98
   1400085d6:	mov    rcx,rax
   1400085d9:	call   QWORD PTR [rip+0x5aa1]        # 0x14000e080
   1400085df:	test   rax,rax
   1400085e2:	je     0x140008762
   1400085e8:	mov    rcx,rax
   1400085eb:	call   QWORD PTR [rip+0x5b47]        # 0x14000e138
   1400085f1:	lea    rdx,[rip+0x7590]        # 0x14000fb88
   1400085f8:	mov    rcx,rsi
   1400085fb:	mov    QWORD PTR [rip+0xbd9e],rax        # 0x1400143a0
   140008602:	call   QWORD PTR [rip+0x5a78]        # 0x14000e080
   140008608:	mov    rcx,rax
   14000860b:	call   QWORD PTR [rip+0x5b27]        # 0x14000e138
   140008611:	lea    rdx,[rip+0x7558]        # 0x14000fb70
   140008618:	mov    rcx,rsi
   14000861b:	mov    QWORD PTR [rip+0xbd86],rax        # 0x1400143a8
   140008622:	call   QWORD PTR [rip+0x5a58]        # 0x14000e080
   140008628:	mov    rcx,rax
   14000862b:	call   QWORD PTR [rip+0x5b07]        # 0x14000e138
   140008631:	lea    rdx,[rip+0x7518]        # 0x14000fb50
   140008638:	mov    rcx,rsi
   14000863b:	mov    QWORD PTR [rip+0xbd6e],rax        # 0x1400143b0
   140008642:	call   QWORD PTR [rip+0x5a38]        # 0x14000e080
   140008648:	mov    rcx,rax
   14000864b:	call   QWORD PTR [rip+0x5ae7]        # 0x14000e138
   140008651:	mov    r11,rax
   140008654:	mov    QWORD PTR [rip+0xbd65],rax        # 0x1400143c0
   14000865b:	test   rax,rax
   14000865e:	je     0x140008682
   140008660:	lea    rdx,[rip+0x74d1]        # 0x14000fb38
   140008667:	mov    rcx,rsi
   14000866a:	call   QWORD PTR [rip+0x5a10]        # 0x14000e080
   140008670:	mov    rcx,rax
   140008673:	call   QWORD PTR [rip+0x5abf]        # 0x14000e138
   140008679:	mov    QWORD PTR [rip+0xbd38],rax        # 0x1400143b8
   140008680:	jmp    0x140008692
   140008682:	mov    rax,QWORD PTR [rip+0xbd2f]        # 0x1400143b8
   140008689:	jmp    0x140008699
   14000868b:	mov    rax,QWORD PTR [rip+0xbd26]        # 0x1400143b8
   140008692:	mov    r11,QWORD PTR [rip+0xbd27]        # 0x1400143c0
   140008699:	cmp    rax,rdi
   14000869c:	je     0x140008700
   14000869e:	cmp    r11,rdi
   1400086a1:	je     0x140008700
   1400086a3:	mov    rcx,rax
   1400086a6:	call   QWORD PTR [rip+0x5a04]        # 0x14000e0b0
   1400086ac:	mov    rcx,QWORD PTR [rip+0xbd0d]        # 0x1400143c0
   1400086b3:	mov    rsi,rax
   1400086b6:	call   QWORD PTR [rip+0x59f4]        # 0x14000e0b0
   1400086bc:	mov    r12,rax
   1400086bf:	test   rsi,rsi
   1400086c2:	je     0x140008700
   1400086c4:	test   rax,rax
   1400086c7:	je     0x140008700
   1400086c9:	call   rsi
   1400086cb:	test   rax,rax
   1400086ce:	je     0x1400086fa
   1400086d0:	lea    rcx,[rsp+0x30]
   1400086d5:	mov    r9d,0xc
   1400086db:	lea    r8,[rsp+0x38]
   1400086e0:	mov    QWORD PTR [rsp+0x20],rcx
   1400086e5:	lea    edx,[r9-0xb]
   1400086e9:	mov    rcx,rax
   1400086ec:	call   r12
   1400086ef:	test   eax,eax
   1400086f1:	je     0x1400086fa
   1400086f3:	test   BYTE PTR [rsp+0x40],0x1
   1400086f8:	jne    0x140008700
   1400086fa:	bts    ebp,0x15
   1400086fe:	jmp    0x140008740
   140008700:	mov    rcx,QWORD PTR [rip+0xbca1]        # 0x1400143a8
   140008707:	cmp    rcx,rdi
   14000870a:	je     0x140008740
   14000870c:	call   QWORD PTR [rip+0x599e]        # 0x14000e0b0
   140008712:	test   rax,rax
   140008715:	je     0x140008740
   140008717:	call   rax
   140008719:	mov    rbx,rax
   14000871c:	test   rax,rax
   14000871f:	je     0x140008740
   140008721:	mov    rcx,QWORD PTR [rip+0xbc88]        # 0x1400143b0
   140008728:	cmp    rcx,rdi
   14000872b:	je     0x140008740
   14000872d:	call   QWORD PTR [rip+0x597d]        # 0x14000e0b0
   140008733:	test   rax,rax
   140008736:	je     0x140008740
   140008738:	mov    rcx,rbx
   14000873b:	call   rax
   14000873d:	mov    rbx,rax
   140008740:	mov    rcx,QWORD PTR [rip+0xbc59]        # 0x1400143a0
   140008747:	call   QWORD PTR [rip+0x5963]        # 0x14000e0b0
   14000874d:	test   rax,rax
   140008750:	je     0x140008762
   140008752:	mov    r9d,ebp
   140008755:	mov    r8,r14
   140008758:	mov    rdx,r13
   14000875b:	mov    rcx,rbx
   14000875e:	call   rax
   140008760:	jmp    0x140008764
   140008762:	xor    eax,eax
   140008764:	mov    rcx,QWORD PTR [rsp+0x48]
   140008769:	xor    rcx,rsp
   14000876c:	call   0x140001980
   140008771:	add    rsp,0x50
   140008775:	pop    r14
   140008777:	pop    r13
   140008779:	pop    r12
   14000877b:	pop    rdi
   14000877c:	pop    rsi
   14000877d:	pop    rbp
   14000877e:	pop    rbx
   14000877f:	ret    
   140008780:	rex push rbx
   140008782:	sub    rsp,0x20
   140008786:	xor    r10d,r10d
   140008789:	mov    r9,rcx
   14000878c:	test   rcx,rcx
   14000878f:	je     0x14000879f
   140008791:	test   rdx,rdx
   140008794:	je     0x14000879f
   140008796:	test   r8,r8
   140008799:	jne    0x1400087b8
   14000879b:	mov    WORD PTR [rcx],r10w
   14000879f:	call   0x140003564
   1400087a4:	mov    ebx,0x16
   1400087a9:	mov    DWORD PTR [rax],ebx
   1400087ab:	call   0x1400034fc
   1400087b0:	mov    eax,ebx
   1400087b2:	add    rsp,0x20
   1400087b6:	pop    rbx
   1400087b7:	ret    
   1400087b8:	cmp    WORD PTR [rcx],r10w
   1400087bc:	je     0x1400087c7
   1400087be:	add    rcx,0x2
   1400087c2:	dec    rdx
   1400087c5:	jne    0x1400087b8
   1400087c7:	test   rdx,rdx
   1400087ca:	jne    0x1400087d2
   1400087cc:	mov    WORD PTR [r9],r10w
   1400087d0:	jmp    0x14000879f
   1400087d2:	sub    rcx,r8
   1400087d5:	movzx  eax,WORD PTR [r8]
   1400087d9:	mov    WORD PTR [rcx+r8*1],ax
   1400087de:	add    r8,0x2
   1400087e2:	test   ax,ax
   1400087e5:	je     0x1400087ec
   1400087e7:	dec    rdx
   1400087ea:	jne    0x1400087d5
   1400087ec:	test   rdx,rdx
   1400087ef:	jne    0x140008801
   1400087f1:	mov    WORD PTR [r9],r10w
   1400087f5:	call   0x140003564
   1400087fa:	mov    ebx,0x22
   1400087ff:	jmp    0x1400087a9
   140008801:	xor    eax,eax
   140008803:	jmp    0x1400087b2
   140008805:	int3   
   140008806:	int3   
   140008807:	int3   
   140008808:	rex push rbx
   14000880a:	sub    rsp,0x20
   14000880e:	xor    ebx,ebx
   140008810:	mov    r10,r8
   140008813:	test   r9,r9
   140008816:	jne    0x140008826
   140008818:	test   rcx,rcx
   14000881b:	jne    0x14000882b
   14000881d:	test   rdx,rdx
   140008820:	jne    0x140008842
   140008822:	xor    eax,eax
   140008824:	jmp    0x140008855
   140008826:	test   rcx,rcx
   140008829:	je     0x140008842
   14000882b:	test   rdx,rdx
   14000882e:	je     0x140008842
   140008830:	test   r9,r9
   140008833:	jne    0x14000883a
   140008835:	mov    WORD PTR [rcx],bx
   140008838:	jmp    0x140008822
   14000883a:	test   r8,r8
   14000883d:	jne    0x14000885b
   14000883f:	mov    WORD PTR [rcx],bx
   140008842:	call   0x140003564
   140008847:	mov    ebx,0x16
   14000884c:	mov    DWORD PTR [rax],ebx
   14000884e:	call   0x1400034fc
   140008853:	mov    eax,ebx
   140008855:	add    rsp,0x20
   140008859:	pop    rbx
   14000885a:	ret    
   14000885b:	mov    r11,rcx
   14000885e:	mov    r8,rdx
   140008861:	cmp    r9,0xffffffffffffffff
   140008865:	jne    0x140008883
   140008867:	sub    r11,r10
   14000886a:	movzx  eax,WORD PTR [r10]
   14000886e:	mov    WORD PTR [r11+r10*1],ax
   140008873:	add    r10,0x2
   140008877:	test   ax,ax
   14000887a:	je     0x1400088ab
   14000887c:	dec    r8
   14000887f:	jne    0x14000886a
   140008881:	jmp    0x1400088ab
   140008883:	sub    r10,rcx
   140008886:	movzx  eax,WORD PTR [r10+r11*1]
   14000888b:	mov    WORD PTR [r11],ax
   14000888f:	add    r11,0x2
   140008893:	test   ax,ax
   140008896:	je     0x1400088a2
   140008898:	dec    r8
   14000889b:	je     0x1400088a2
   14000889d:	dec    r9
   1400088a0:	jne    0x140008886
   1400088a2:	test   r9,r9
   1400088a5:	jne    0x1400088ab
   1400088a7:	mov    WORD PTR [r11],bx
   1400088ab:	test   r8,r8
   1400088ae:	jne    0x140008822
   1400088b4:	cmp    r9,0xffffffffffffffff
   1400088b8:	jne    0x1400088c5
   1400088ba:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   1400088bf:	lea    eax,[r8+0x50]
   1400088c3:	jmp    0x140008855
   1400088c5:	mov    WORD PTR [rcx],bx
   1400088c8:	call   0x140003564
   1400088cd:	mov    ebx,0x22
   1400088d2:	jmp    0x14000884c
   1400088d7:	int3   
   1400088d8:	mov    rax,rcx
   1400088db:	movzx  edx,WORD PTR [rax]
   1400088de:	add    rax,0x2
   1400088e2:	test   dx,dx
   1400088e5:	jne    0x1400088db
   1400088e7:	sub    rax,rcx
   1400088ea:	sar    rax,1
   1400088ed:	dec    rax
   1400088f0:	ret    
   1400088f1:	int3   
   1400088f2:	int3   
   1400088f3:	int3   
   1400088f4:	rex push rbx
   1400088f6:	sub    rsp,0x20
   1400088fa:	xor    r10d,r10d
   1400088fd:	mov    r9,rcx
   140008900:	test   rcx,rcx
   140008903:	je     0x140008913
   140008905:	test   rdx,rdx
   140008908:	je     0x140008913
   14000890a:	test   r8,r8
   14000890d:	jne    0x14000892c
   14000890f:	mov    WORD PTR [rcx],r10w
   140008913:	call   0x140003564
   140008918:	mov    ebx,0x16
   14000891d:	mov    DWORD PTR [rax],ebx
   14000891f:	call   0x1400034fc
   140008924:	mov    eax,ebx
   140008926:	add    rsp,0x20
   14000892a:	pop    rbx
   14000892b:	ret    
   14000892c:	sub    rcx,r8
   14000892f:	movzx  eax,WORD PTR [r8]
   140008933:	mov    WORD PTR [rcx+r8*1],ax
   140008938:	add    r8,0x2
   14000893c:	test   ax,ax
   14000893f:	je     0x140008946
   140008941:	dec    rdx
   140008944:	jne    0x14000892f
   140008946:	test   rdx,rdx
   140008949:	jne    0x14000895b
   14000894b:	mov    WORD PTR [r9],r10w
   14000894f:	call   0x140003564
   140008954:	mov    ebx,0x22
   140008959:	jmp    0x14000891d
   14000895b:	xor    eax,eax
   14000895d:	jmp    0x140008926
   14000895f:	int3   
   140008960:	sub    rsp,0x28
   140008964:	test   ecx,ecx
   140008966:	js     0x140008988
   140008968:	cmp    ecx,0x2
   14000896b:	jle    0x14000897a
   14000896d:	cmp    ecx,0x3
   140008970:	jne    0x140008988
   140008972:	mov    eax,DWORD PTR [rip+0xaab0]        # 0x140013428
   140008978:	jmp    0x14000899b
   14000897a:	mov    eax,DWORD PTR [rip+0xaaa8]        # 0x140013428
   140008980:	mov    DWORD PTR [rip+0xaaa2],ecx        # 0x140013428
   140008986:	jmp    0x14000899b
   140008988:	call   0x140003564
   14000898d:	mov    DWORD PTR [rax],0x16
   140008993:	call   0x1400034fc
   140008998:	or     eax,0xffffffff
   14000899b:	add    rsp,0x28
   14000899f:	ret    
   1400089a0:	rex push rbx
   1400089a2:	sub    rsp,0x20
   1400089a6:	test   BYTE PTR [rdx+0x18],0x40
   1400089aa:	mov    rbx,r8
   1400089ad:	je     0x1400089bb
   1400089af:	cmp    QWORD PTR [rdx+0x10],0x0
   1400089b4:	jne    0x1400089bb
   1400089b6:	inc    DWORD PTR [r8]
   1400089b9:	jmp    0x1400089e0
   1400089bb:	dec    DWORD PTR [rdx+0x8]
   1400089be:	js     0x1400089cd
   1400089c0:	mov    rax,QWORD PTR [rdx]
   1400089c3:	mov    BYTE PTR [rax],cl
   1400089c5:	inc    QWORD PTR [rdx]
   1400089c8:	movzx  eax,cl
   1400089cb:	jmp    0x1400089d5
   1400089cd:	movsx  ecx,cl
   1400089d0:	call   0x1400047e8
   1400089d5:	cmp    eax,0xffffffff
   1400089d8:	jne    0x1400089de
   1400089da:	or     DWORD PTR [rbx],eax
   1400089dc:	jmp    0x1400089e0
   1400089de:	inc    DWORD PTR [rbx]
   1400089e0:	add    rsp,0x20
   1400089e4:	pop    rbx
   1400089e5:	ret    
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	test   edx,edx
   1400089ea:	jle    0x140008a38
   1400089ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400089f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400089f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400089fb:	push   rdi
   1400089fc:	sub    rsp,0x20
   140008a00:	mov    rdi,r9
   140008a03:	mov    rsi,r8
   140008a06:	mov    ebx,edx
   140008a08:	mov    bpl,cl
   140008a0b:	mov    r8,rdi
   140008a0e:	mov    rdx,rsi
   140008a11:	mov    cl,bpl
   140008a14:	dec    ebx
   140008a16:	call   0x1400089a0
   140008a1b:	cmp    DWORD PTR [rdi],0xffffffff
   140008a1e:	je     0x140008a24
   140008a20:	test   ebx,ebx
   140008a22:	jg     0x140008a0b
   140008a24:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a29:	mov    rbp,QWORD PTR [rsp+0x38]
   140008a2e:	mov    rsi,QWORD PTR [rsp+0x40]
   140008a33:	add    rsp,0x20
   140008a37:	pop    rdi
   140008a38:	ret    
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140008a41:	mov    QWORD PTR [rsp+0x10],rbp
   140008a46:	mov    QWORD PTR [rsp+0x18],rsi
   140008a4b:	push   rdi
   140008a4c:	push   r12
   140008a4e:	push   r13
   140008a50:	sub    rsp,0x20
   140008a54:	test   BYTE PTR [r8+0x18],0x40
   140008a59:	mov    rbx,QWORD PTR [rsp+0x60]
   140008a5e:	mov    rdi,r9
   140008a61:	mov    r12d,DWORD PTR [rbx]
   140008a64:	mov    rbp,r8
   140008a67:	mov    esi,edx
   140008a69:	mov    r13,rcx
   140008a6c:	je     0x140008a7a
   140008a6e:	cmp    QWORD PTR [r8+0x10],0x0
   140008a73:	jne    0x140008a7a
   140008a75:	add    DWORD PTR [r9],edx
   140008a78:	jmp    0x140008ab8
   140008a7a:	and    DWORD PTR [rbx],0x0
   140008a7d:	test   edx,edx
   140008a7f:	jle    0x140008ab5
   140008a81:	mov    cl,BYTE PTR [r13+0x0]
   140008a85:	mov    r8,rdi
   140008a88:	mov    rdx,rbp
   140008a8b:	dec    esi
   140008a8d:	call   0x1400089a0
   140008a92:	inc    r13
   140008a95:	cmp    DWORD PTR [rdi],0xffffffff
   140008a98:	jne    0x140008aac
   140008a9a:	cmp    DWORD PTR [rbx],0x2a
   140008a9d:	jne    0x140008ab0
   140008a9f:	mov    r8,rdi
   140008aa2:	mov    rdx,rbp
   140008aa5:	mov    cl,0x3f
   140008aa7:	call   0x1400089a0
   140008aac:	test   esi,esi
   140008aae:	jg     0x140008a81
   140008ab0:	cmp    DWORD PTR [rbx],0x0
   140008ab3:	jne    0x140008ab8
   140008ab5:	mov    DWORD PTR [rbx],r12d
   140008ab8:	mov    rbx,QWORD PTR [rsp+0x40]
   140008abd:	mov    rbp,QWORD PTR [rsp+0x48]
   140008ac2:	mov    rsi,QWORD PTR [rsp+0x50]
   140008ac7:	add    rsp,0x20
   140008acb:	pop    r13
   140008acd:	pop    r12
   140008acf:	pop    rdi
   140008ad0:	ret    
   140008ad1:	int3   
   140008ad2:	int3   
   140008ad3:	int3   
   140008ad4:	mov    QWORD PTR [rsp+0x18],rbx
   140008ad9:	push   rbp
   140008ada:	push   rsi
   140008adb:	push   rdi
   140008adc:	push   r12
   140008ade:	push   r13
   140008ae0:	push   r14
   140008ae2:	push   r15
   140008ae4:	lea    rbp,[rsp-0x1d0]
   140008aec:	sub    rsp,0x2d0
   140008af3:	mov    rax,QWORD PTR [rip+0x950e]        # 0x140012008
   140008afa:	xor    rax,rsp
   140008afd:	mov    QWORD PTR [rbp+0x1c8],rax
   140008b04:	xor    eax,eax
   140008b06:	mov    rbx,rcx
   140008b09:	mov    QWORD PTR [rsp+0x70],rcx
   140008b0e:	mov    QWORD PTR [rsp+0x68],rdx
   140008b13:	lea    rcx,[rbp-0x80]
   140008b17:	mov    rdx,r8
   140008b1a:	mov    r15,r9
   140008b1d:	mov    DWORD PTR [rsp+0x64],eax
   140008b21:	mov    r13d,eax
   140008b24:	mov    DWORD PTR [rsp+0x58],eax
   140008b28:	mov    edi,eax
   140008b2a:	mov    DWORD PTR [rsp+0x44],eax
   140008b2e:	mov    DWORD PTR [rsp+0x4c],eax
   140008b32:	mov    DWORD PTR [rsp+0x5c],eax
   140008b36:	mov    DWORD PTR [rsp+0x54],eax
   140008b3a:	call   0x140004978
   140008b3f:	call   0x140003564
   140008b44:	xor    r10d,r10d
   140008b47:	mov    QWORD PTR [rbp-0x60],rax
   140008b4b:	test   rbx,rbx
   140008b4e:	jne    0x140008b7c
   140008b50:	call   0x140003564
   140008b55:	mov    DWORD PTR [rax],0x16
   140008b5b:	call   0x1400034fc
   140008b60:	xor    r11d,r11d
   140008b63:	cmp    BYTE PTR [rbp-0x68],r11b
   140008b67:	je     0x140008b74
   140008b69:	mov    rax,QWORD PTR [rbp-0x70]
   140008b6d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008b74:	or     eax,0xffffffff
   140008b77:	jmp    0x140009357
   140008b7c:	or     r14d,0xffffffff
   140008b80:	test   BYTE PTR [rbx+0x18],0x40
   140008b84:	lea    r9,[rip+0xffffffffffff7475]        # 0x140000000
   140008b8b:	jne    0x140008c36
   140008b91:	mov    rcx,rbx
   140008b94:	call   0x14000571c
   140008b99:	lea    rdx,[rip+0x9d60]        # 0x140012900
   140008ba0:	cmp    eax,r14d
   140008ba3:	je     0x140008bcd
   140008ba5:	cmp    eax,0xfffffffe
   140008ba8:	je     0x140008bcd
   140008baa:	movsxd r8,eax
   140008bad:	lea    r9,[rip+0xffffffffffff744c]        # 0x140000000
   140008bb4:	mov    rcx,r8
   140008bb7:	and    r8d,0x1f
   140008bbb:	sar    rcx,0x5
   140008bbf:	imul   r8,r8,0x58
   140008bc3:	add    r8,QWORD PTR [r9+rcx*8+0x14620]
   140008bcb:	jmp    0x140008bd7
   140008bcd:	mov    r8,rdx
   140008bd0:	lea    r9,[rip+0xffffffffffff7429]        # 0x140000000
   140008bd7:	test   BYTE PTR [r8+0x38],0x7f
   140008bdc:	jne    0x140008c07
   140008bde:	cmp    eax,r14d
   140008be1:	je     0x140008c01
   140008be3:	cmp    eax,0xfffffffe
   140008be6:	je     0x140008c01
   140008be8:	movsxd rdx,eax
   140008beb:	mov    rax,rdx
   140008bee:	and    edx,0x1f
   140008bf1:	sar    rax,0x5
   140008bf5:	imul   rdx,rdx,0x58
   140008bf9:	add    rdx,QWORD PTR [r9+rax*8+0x14620]
   140008c01:	test   BYTE PTR [rdx+0x38],0x80
   140008c05:	je     0x140008c33
   140008c07:	call   0x140003564
   140008c0c:	mov    DWORD PTR [rax],0x16
   140008c12:	call   0x1400034fc
   140008c17:	xor    r11d,r11d
   140008c1a:	cmp    BYTE PTR [rbp-0x68],r11b
   140008c1e:	je     0x140008c2b
   140008c20:	mov    rax,QWORD PTR [rbp-0x70]
   140008c24:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008c2b:	mov    eax,r14d
   140008c2e:	jmp    0x140009357
   140008c33:	xor    r10d,r10d
   140008c36:	mov    rdx,QWORD PTR [rsp+0x68]
   140008c3b:	test   rdx,rdx
   140008c3e:	je     0x140008c07
   140008c40:	mov    r12b,BYTE PTR [rdx]
   140008c43:	mov    esi,r10d
   140008c46:	mov    DWORD PTR [rsp+0x40],r10d
   140008c4b:	mov    DWORD PTR [rsp+0x48],r10d
   140008c50:	mov    r8d,r10d
   140008c53:	mov    QWORD PTR [rbp-0x50],r10
   140008c57:	test   r12b,r12b
   140008c5a:	je     0x140009344
   140008c60:	mov    rbx,QWORD PTR [rbp-0x48]
   140008c64:	mov    r11d,0x200
   140008c6a:	inc    rdx
   140008c6d:	mov    QWORD PTR [rsp+0x68],rdx
   140008c72:	test   esi,esi
   140008c74:	js     0x140009335
   140008c7a:	lea    eax,[r12-0x20]
   140008c7f:	cmp    al,0x58
   140008c81:	ja     0x140008c95
   140008c83:	movsx  rax,r12b
   140008c87:	movzx  ecx,BYTE PTR [rax+r9*1+0xfc20]
   140008c90:	and    ecx,0xf
   140008c93:	jmp    0x140008c98
   140008c95:	mov    ecx,r10d
   140008c98:	movsxd rax,ecx
   140008c9b:	lea    rcx,[rax+rax*8]
   140008c9f:	movsxd rax,r8d
   140008ca2:	add    rcx,rax
   140008ca5:	movzx  r8d,BYTE PTR [rcx+r9*1+0xfc40]
   140008cae:	shr    r8d,0x4
   140008cb2:	mov    DWORD PTR [rsp+0x60],r8d
   140008cb7:	cmp    r8d,0x8
   140008cbb:	je     0x140008c07
   140008cc1:	mov    ecx,r8d
   140008cc4:	test   r8d,r8d
   140008cc7:	je     0x140009430
   140008ccd:	dec    ecx
   140008ccf:	je     0x140009561
   140008cd5:	dec    ecx
   140008cd7:	je     0x140009511
   140008cdd:	dec    ecx
   140008cdf:	je     0x1400094d8
   140008ce5:	dec    ecx
   140008ce7:	je     0x1400094cb
   140008ced:	dec    ecx
   140008cef:	je     0x140009491
   140008cf5:	dec    ecx
   140008cf7:	je     0x140009381
   140008cfd:	dec    ecx
   140008cff:	jne    0x140009329
   140008d05:	movsx  eax,r12b
   140008d09:	cmp    eax,0x64
   140008d0c:	jg     0x140008e85
   140008d12:	je     0x140008f86
   140008d18:	cmp    eax,0x41
   140008d1b:	je     0x140008e59
   140008d21:	cmp    eax,0x43
   140008d24:	je     0x140008dff
   140008d2a:	cmp    eax,0x45
   140008d2d:	je     0x140008e59
   140008d33:	cmp    eax,0x47
   140008d36:	je     0x140008e59
   140008d3c:	cmp    eax,0x53
   140008d3f:	je     0x140008db5
   140008d41:	cmp    eax,0x58
   140008d44:	je     0x140008f20
   140008d4a:	cmp    eax,0x5a
   140008d4d:	je     0x140008d66
   140008d4f:	cmp    eax,0x61
   140008d52:	je     0x140008e65
   140008d58:	cmp    eax,0x63
   140008d5b:	je     0x140008e0d
   140008d61:	jmp    0x140009191
   140008d66:	mov    rax,QWORD PTR [r15]
   140008d69:	add    r15,0x8
   140008d6d:	test   rax,rax
   140008d70:	je     0x140008da1
   140008d72:	mov    rbx,QWORD PTR [rax+0x8]
   140008d76:	test   rbx,rbx
   140008d79:	je     0x140008da1
   140008d7b:	movsx  eax,WORD PTR [rax]
   140008d7e:	bt     r13d,0xb
   140008d83:	jae    0x140008d97
   140008d85:	cdq    
   140008d86:	mov    DWORD PTR [rsp+0x54],0x1
   140008d8e:	sub    eax,edx
   140008d90:	sar    eax,1
   140008d92:	jmp    0x14000918d
   140008d97:	mov    DWORD PTR [rsp+0x54],r10d
   140008d9c:	jmp    0x14000918d
   140008da1:	mov    rbx,QWORD PTR [rip+0xa528]        # 0x1400132d0
   140008da8:	mov    rcx,rbx
   140008dab:	call   0x1400084d0
   140008db0:	jmp    0x14000918a
   140008db5:	test   r13d,0x830
   140008dbc:	jne    0x140008dc3
   140008dbe:	bts    r13d,0xb
   140008dc3:	mov    rbx,QWORD PTR [r15]
   140008dc6:	cmp    edi,r14d
   140008dc9:	mov    eax,edi
   140008dcb:	mov    ecx,0x7fffffff
   140008dd0:	cmove  eax,ecx
   140008dd3:	add    r15,0x8
   140008dd7:	test   r13d,0x810
   140008dde:	je     0x140008eed
   140008de4:	test   rbx,rbx
   140008de7:	mov    DWORD PTR [rsp+0x54],0x1
   140008def:	cmove  rbx,QWORD PTR [rip+0xa4e1]        # 0x1400132d8
   140008df7:	mov    rcx,rbx
   140008dfa:	jmp    0x140008ee1
   140008dff:	test   r13d,0x830
   140008e06:	jne    0x140008e0d
   140008e08:	bts    r13d,0xb
   140008e0d:	add    r15,0x8
   140008e11:	test   r13d,0x810
   140008e18:	je     0x140008e41
   140008e1a:	movzx  r9d,WORD PTR [r15-0x8]
   140008e1f:	lea    rdx,[rbp-0x40]
   140008e23:	lea    rcx,[rsp+0x48]
   140008e28:	mov    r8,r11
   140008e2b:	call   0x14000c850
   140008e30:	xor    r10d,r10d
   140008e33:	test   eax,eax
   140008e35:	je     0x140008e50
   140008e37:	mov    DWORD PTR [rsp+0x5c],0x1
   140008e3f:	jmp    0x140008e50
   140008e41:	mov    al,BYTE PTR [r15-0x8]
   140008e45:	mov    DWORD PTR [rsp+0x48],0x1
   140008e4d:	mov    BYTE PTR [rbp-0x40],al
   140008e50:	lea    rbx,[rbp-0x40]
   140008e54:	jmp    0x140009191
   140008e59:	mov    DWORD PTR [rsp+0x78],0x1
   140008e61:	add    r12b,0x20
   140008e65:	or     r13d,0x40
   140008e69:	lea    rbx,[rbp-0x40]
   140008e6d:	mov    esi,r11d
   140008e70:	test   edi,edi
   140008e72:	jns    0x140009096
   140008e78:	mov    DWORD PTR [rsp+0x44],0x6
   140008e80:	jmp    0x1400090e1
   140008e85:	cmp    eax,0x65
   140008e88:	jl     0x140009191
   140008e8e:	cmp    eax,0x67
   140008e91:	jle    0x140008e65
   140008e93:	cmp    eax,0x69
   140008e96:	je     0x140008f86
   140008e9c:	cmp    eax,0x6e
   140008e9f:	je     0x140008f55
   140008ea5:	cmp    eax,0x6f
   140008ea8:	je     0x140008f45
   140008eae:	cmp    eax,0x70
   140008eb1:	je     0x140008f16
   140008eb3:	cmp    eax,0x73
   140008eb6:	je     0x140008dc3
   140008ebc:	cmp    eax,0x75
   140008ebf:	je     0x140008f8a
   140008ec5:	cmp    eax,0x78
   140008ec8:	jne    0x140009191
   140008ece:	mov    eax,0x27
   140008ed3:	jmp    0x140008f25
   140008ed5:	dec    eax
   140008ed7:	cmp    WORD PTR [rcx],r10w
   140008edb:	je     0x140008ee5
   140008edd:	add    rcx,0x2
   140008ee1:	test   eax,eax
   140008ee3:	jne    0x140008ed5
   140008ee5:	sub    rcx,rbx
   140008ee8:	sar    rcx,1
   140008eeb:	jmp    0x140008f0d
   140008eed:	test   rbx,rbx
   140008ef0:	cmove  rbx,QWORD PTR [rip+0xa3d8]        # 0x1400132d0
   140008ef8:	mov    rcx,rbx
   140008efb:	jmp    0x140008f07
   140008efd:	dec    eax
   140008eff:	cmp    BYTE PTR [rcx],r10b
   140008f02:	je     0x140008f0b
   140008f04:	inc    rcx
   140008f07:	test   eax,eax
   140008f09:	jne    0x140008efd
   140008f0b:	sub    ecx,ebx
   140008f0d:	mov    DWORD PTR [rsp+0x48],ecx
   140008f11:	jmp    0x140009191
   140008f16:	mov    edi,0x10
   140008f1b:	bts    r13d,0xf
   140008f20:	mov    eax,0x7
   140008f25:	mov    DWORD PTR [rsp+0x64],eax
   140008f29:	mov    r9d,0x10
   140008f2f:	test   r13b,r13b
   140008f32:	jns    0x140008f90
   140008f34:	add    al,0x51
   140008f36:	mov    BYTE PTR [rsp+0x50],0x30
   140008f3b:	lea    edx,[r9-0xe]
   140008f3f:	mov    BYTE PTR [rsp+0x51],al
   140008f43:	jmp    0x140008f94
   140008f45:	mov    r9d,0x8
   140008f4b:	test   r13b,r13b
   140008f4e:	jns    0x140008f90
   140008f50:	or     r13d,r11d
   140008f53:	jmp    0x140008f90
   140008f55:	mov    rdi,QWORD PTR [r15]
   140008f58:	add    r15,0x8
   140008f5c:	call   0x14000a214
   140008f61:	xor    r10d,r10d
   140008f64:	test   eax,eax
   140008f66:	je     0x140008c07
   140008f6c:	test   r13b,0x20
   140008f70:	je     0x140008f77
   140008f72:	mov    WORD PTR [rdi],si
   140008f75:	jmp    0x140008f79
   140008f77:	mov    DWORD PTR [rdi],esi
   140008f79:	mov    DWORD PTR [rsp+0x5c],0x1
   140008f81:	jmp    0x1400092f6
   140008f86:	or     r13d,0x40
   140008f8a:	mov    r9d,0xa
   140008f90:	mov    edx,DWORD PTR [rsp+0x4c]
   140008f94:	mov    eax,0x8000
   140008f99:	test   eax,r13d
   140008f9c:	jne    0x140008fa5
   140008f9e:	bt     r13d,0xc
   140008fa3:	jae    0x140008fae
   140008fa5:	mov    r8,QWORD PTR [r15]
   140008fa8:	add    r15,0x8
   140008fac:	jmp    0x140008fdc
   140008fae:	add    r15,0x8
   140008fb2:	test   r13b,0x20
   140008fb6:	je     0x140008fcc
   140008fb8:	test   r13b,0x40
   140008fbc:	je     0x140008fc5
   140008fbe:	movsx  r8,WORD PTR [r15-0x8]
   140008fc3:	jmp    0x140008fdc
   140008fc5:	movzx  r8d,WORD PTR [r15-0x8]
   140008fca:	jmp    0x140008fdc
   140008fcc:	test   r13b,0x40
   140008fd0:	je     0x140008fd8
   140008fd2:	movsxd r8,DWORD PTR [r15-0x8]
   140008fd6:	jmp    0x140008fdc
   140008fd8:	mov    r8d,DWORD PTR [r15-0x8]
   140008fdc:	test   r13b,0x40
   140008fe0:	je     0x140008fef
   140008fe2:	test   r8,r8
   140008fe5:	jns    0x140008fef
   140008fe7:	neg    r8
   140008fea:	bts    r13d,0x8
   140008fef:	test   eax,r13d
   140008ff2:	jne    0x140008ffe
   140008ff4:	bt     r13d,0xc
   140008ff9:	jb     0x140008ffe
   140008ffb:	mov    r8d,r8d
   140008ffe:	test   edi,edi
   140009000:	jns    0x140009009
   140009002:	mov    edi,0x1
   140009007:	jmp    0x140009014
   140009009:	and    r13d,0xfffffff7
   14000900d:	cmp    edi,r11d
   140009010:	cmovg  edi,r11d
   140009014:	mov    esi,DWORD PTR [rsp+0x64]
   140009018:	mov    rax,r8
   14000901b:	lea    rbx,[rbp+0x1bf]
   140009022:	neg    rax
   140009025:	sbb    ecx,ecx
   140009027:	and    ecx,edx
   140009029:	mov    DWORD PTR [rsp+0x4c],ecx
   14000902d:	mov    ecx,edi
   14000902f:	dec    edi
   140009031:	test   ecx,ecx
   140009033:	jg     0x14000903a
   140009035:	test   r8,r8
   140009038:	je     0x140009059
   14000903a:	xor    edx,edx
   14000903c:	mov    rax,r8
   14000903f:	movsxd rcx,r9d
   140009042:	div    rcx
   140009045:	mov    r8,rax
   140009048:	lea    eax,[rdx+0x30]
   14000904b:	cmp    eax,0x39
   14000904e:	jle    0x140009052
   140009050:	add    eax,esi
   140009052:	mov    BYTE PTR [rbx],al
   140009054:	dec    rbx
   140009057:	jmp    0x14000902d
   140009059:	mov    esi,DWORD PTR [rsp+0x40]
   14000905d:	lea    rax,[rbp+0x1bf]
   140009064:	mov    DWORD PTR [rsp+0x44],edi
   140009068:	sub    eax,ebx
   14000906a:	inc    rbx
   14000906d:	mov    DWORD PTR [rsp+0x48],eax
   140009071:	test   r11d,r13d
   140009074:	je     0x140009191
   14000907a:	test   eax,eax
   14000907c:	je     0x140009087
   14000907e:	cmp    BYTE PTR [rbx],0x30
   140009081:	je     0x140009191
   140009087:	dec    rbx
   14000908a:	inc    DWORD PTR [rsp+0x48]
   14000908e:	mov    BYTE PTR [rbx],0x30
   140009091:	jmp    0x140009191
   140009096:	jne    0x1400090a8
   140009098:	cmp    r12b,0x67
   14000909c:	jne    0x1400090e1
   14000909e:	mov    DWORD PTR [rsp+0x44],0x1
   1400090a6:	jmp    0x1400090e1
   1400090a8:	cmp    edi,r11d
   1400090ab:	cmovg  edi,r11d
   1400090af:	mov    DWORD PTR [rsp+0x44],edi
   1400090b3:	cmp    edi,0xa3
   1400090b9:	jle    0x1400090e1
   1400090bb:	add    edi,0x15d
   1400090c1:	movsxd rcx,edi
   1400090c4:	call   0x1400067e0
   1400090c9:	mov    QWORD PTR [rbp-0x50],rax
   1400090cd:	test   rax,rax
   1400090d0:	je     0x1400090d9
   1400090d2:	mov    rbx,rax
   1400090d5:	mov    esi,edi
   1400090d7:	jmp    0x1400090e1
   1400090d9:	mov    DWORD PTR [rsp+0x44],0xa3
   1400090e1:	mov    rax,QWORD PTR [r15]
   1400090e4:	mov    rcx,QWORD PTR [rip+0x96e5]        # 0x1400127d0
   1400090eb:	add    r15,0x8
   1400090ef:	movsx  edi,r12b
   1400090f3:	movsxd rsi,esi
   1400090f6:	mov    QWORD PTR [rbp-0x48],rax
   1400090fa:	call   QWORD PTR [rip+0x4fb0]        # 0x14000e0b0
   140009100:	lea    rcx,[rbp-0x80]
   140009104:	mov    r9d,edi
   140009107:	mov    QWORD PTR [rsp+0x30],rcx
   14000910c:	mov    ecx,DWORD PTR [rsp+0x78]
   140009110:	mov    r8,rsi
   140009113:	mov    DWORD PTR [rsp+0x28],ecx
   140009117:	mov    ecx,DWORD PTR [rsp+0x44]
   14000911b:	mov    rdx,rbx
   14000911e:	mov    DWORD PTR [rsp+0x20],ecx
   140009122:	lea    rcx,[rbp-0x48]
   140009126:	call   rax
   140009128:	mov    edi,r13d
   14000912b:	and    edi,0x80
   140009131:	je     0x140009151
   140009133:	xor    eax,eax
   140009135:	cmp    DWORD PTR [rsp+0x44],eax
   140009139:	jne    0x140009151
   14000913b:	mov    rcx,QWORD PTR [rip+0x96a6]        # 0x1400127e8
   140009142:	call   QWORD PTR [rip+0x4f68]        # 0x14000e0b0
   140009148:	lea    rdx,[rbp-0x80]
   14000914c:	mov    rcx,rbx
   14000914f:	call   rax
   140009151:	cmp    r12b,0x67
   140009155:	jne    0x140009171
   140009157:	test   edi,edi
   140009159:	jne    0x140009171
   14000915b:	mov    rcx,QWORD PTR [rip+0x967e]        # 0x1400127e0
   140009162:	call   QWORD PTR [rip+0x4f48]        # 0x14000e0b0
   140009168:	lea    rdx,[rbp-0x80]
   14000916c:	mov    rcx,rbx
   14000916f:	call   rax
   140009171:	cmp    BYTE PTR [rbx],0x2d
   140009174:	jne    0x14000917e
   140009176:	bts    r13d,0x8
   14000917b:	inc    rbx
   14000917e:	mov    rcx,rbx
   140009181:	call   0x1400084d0
   140009186:	mov    esi,DWORD PTR [rsp+0x40]
   14000918a:	xor    r10d,r10d
   14000918d:	mov    DWORD PTR [rsp+0x48],eax
   140009191:	cmp    DWORD PTR [rsp+0x5c],r10d
   140009196:	jne    0x1400092f6
   14000919c:	test   r13b,0x40
   1400091a0:	je     0x1400091d3
   1400091a2:	bt     r13d,0x8
   1400091a7:	jae    0x1400091b0
   1400091a9:	mov    BYTE PTR [rsp+0x50],0x2d
   1400091ae:	jmp    0x1400091bb
   1400091b0:	test   r13b,0x1
   1400091b4:	je     0x1400091c6
   1400091b6:	mov    BYTE PTR [rsp+0x50],0x2b
   1400091bb:	mov    edi,0x1
   1400091c0:	mov    DWORD PTR [rsp+0x4c],edi
   1400091c4:	jmp    0x1400091d7
   1400091c6:	test   r13b,0x2
   1400091ca:	je     0x1400091d3
   1400091cc:	mov    BYTE PTR [rsp+0x50],0x20
   1400091d1:	jmp    0x1400091bb
   1400091d3:	mov    edi,DWORD PTR [rsp+0x4c]
   1400091d7:	mov    r12d,DWORD PTR [rsp+0x58]
   1400091dc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400091e1:	sub    r12d,DWORD PTR [rsp+0x48]
   1400091e6:	sub    r12d,edi
   1400091e9:	test   r13b,0xc
   1400091ed:	jne    0x140009201
   1400091ef:	lea    r9,[rsp+0x40]
   1400091f4:	mov    r8,rsi
   1400091f7:	mov    edx,r12d
   1400091fa:	mov    cl,0x20
   1400091fc:	call   0x1400089e8
   140009201:	mov    rax,QWORD PTR [rbp-0x60]
   140009205:	lea    r9,[rsp+0x40]
   14000920a:	lea    rcx,[rsp+0x50]
   14000920f:	mov    r8,rsi
   140009212:	mov    edx,edi
   140009214:	mov    QWORD PTR [rsp+0x20],rax
   140009219:	call   0x140008a3c
   14000921e:	test   r13b,0x8
   140009222:	je     0x14000923c
   140009224:	test   r13b,0x4
   140009228:	jne    0x14000923c
   14000922a:	lea    r9,[rsp+0x40]
   14000922f:	mov    r8,rsi
   140009232:	mov    edx,r12d
   140009235:	mov    cl,0x30
   140009237:	call   0x1400089e8
   14000923c:	mov    edi,DWORD PTR [rsp+0x48]
   140009240:	xor    eax,eax
   140009242:	cmp    DWORD PTR [rsp+0x54],eax
   140009246:	je     0x1400092af
   140009248:	test   edi,edi
   14000924a:	jle    0x1400092af
   14000924c:	mov    rsi,rbx
   14000924f:	movzx  r9d,WORD PTR [rsi]
   140009253:	lea    rdx,[rbp+0x1c0]
   14000925a:	lea    rcx,[rbp-0x58]
   14000925e:	mov    r8d,0x6
   140009264:	dec    edi
   140009266:	add    rsi,0x2
   14000926a:	call   0x14000c850
   14000926f:	xor    r10d,r10d
   140009272:	test   eax,eax
   140009274:	jne    0x1400092a5
   140009276:	mov    edx,DWORD PTR [rbp-0x58]
   140009279:	test   edx,edx
   14000927b:	je     0x1400092a5
   14000927d:	mov    rax,QWORD PTR [rbp-0x60]
   140009281:	mov    r8,QWORD PTR [rsp+0x70]
   140009286:	lea    r9,[rsp+0x40]
   14000928b:	lea    rcx,[rbp+0x1c0]
   140009292:	mov    QWORD PTR [rsp+0x20],rax
   140009297:	call   0x140008a3c
   14000929c:	xor    r10d,r10d
   14000929f:	test   edi,edi
   1400092a1:	jne    0x14000924f
   1400092a3:	jmp    0x1400092cd
   1400092a5:	mov    esi,r14d
   1400092a8:	mov    DWORD PTR [rsp+0x40],r14d
   1400092ad:	jmp    0x1400092d1
   1400092af:	mov    rax,QWORD PTR [rbp-0x60]
   1400092b3:	lea    r9,[rsp+0x40]
   1400092b8:	mov    r8,rsi
   1400092bb:	mov    edx,edi
   1400092bd:	mov    rcx,rbx
   1400092c0:	mov    QWORD PTR [rsp+0x20],rax
   1400092c5:	call   0x140008a3c
   1400092ca:	xor    r10d,r10d
   1400092cd:	mov    esi,DWORD PTR [rsp+0x40]
   1400092d1:	test   esi,esi
   1400092d3:	js     0x1400092f6
   1400092d5:	test   r13b,0x4
   1400092d9:	je     0x1400092f6
   1400092db:	mov    r8,QWORD PTR [rsp+0x70]
   1400092e0:	lea    r9,[rsp+0x40]
   1400092e5:	mov    edx,r12d
   1400092e8:	mov    cl,0x20
   1400092ea:	call   0x1400089e8
   1400092ef:	mov    esi,DWORD PTR [rsp+0x40]
   1400092f3:	xor    r10d,r10d
   1400092f6:	mov    rax,QWORD PTR [rbp-0x50]
   1400092fa:	test   rax,rax
   1400092fd:	je     0x14000930e
   1400092ff:	mov    rcx,rax
   140009302:	call   0x140001eb4
   140009307:	xor    r10d,r10d
   14000930a:	mov    QWORD PTR [rbp-0x50],r10
   14000930e:	mov    edi,DWORD PTR [rsp+0x44]
   140009312:	mov    rdx,QWORD PTR [rsp+0x68]
   140009317:	mov    r8d,DWORD PTR [rsp+0x60]
   14000931c:	mov    r11d,0x200
   140009322:	lea    r9,[rip+0xffffffffffff6cd7]        # 0x140000000
   140009329:	mov    r12b,BYTE PTR [rdx]
   14000932c:	test   r12b,r12b
   14000932f:	jne    0x140008c6a
   140009335:	test   r8d,r8d
   140009338:	je     0x140009344
   14000933a:	cmp    r8d,0x7
   14000933e:	jne    0x140008c07
   140009344:	cmp    BYTE PTR [rbp-0x68],r10b
   140009348:	je     0x140009355
   14000934a:	mov    rcx,QWORD PTR [rbp-0x70]
   14000934e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140009355:	mov    eax,esi
   140009357:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000935e:	xor    rcx,rsp
   140009361:	call   0x140001980
   140009366:	mov    rbx,QWORD PTR [rsp+0x320]
   14000936e:	add    rsp,0x2d0
   140009375:	pop    r15
   140009377:	pop    r14
   140009379:	pop    r13
   14000937b:	pop    r12
   14000937d:	pop    rdi
   14000937e:	pop    rsi
   14000937f:	pop    rbp
   140009380:	ret    
   140009381:	cmp    r12b,0x49
   140009385:	je     0x1400093c4
   140009387:	cmp    r12b,0x68
   14000938b:	je     0x1400093bb
   14000938d:	cmp    r12b,0x6c
   140009391:	je     0x1400093a0
   140009393:	cmp    r12b,0x77
   140009397:	jne    0x140009329
   140009399:	bts    r13d,0xb
   14000939e:	jmp    0x140009329
   1400093a0:	cmp    BYTE PTR [rdx],0x6c
   1400093a3:	jne    0x1400093b2
   1400093a5:	inc    rdx
   1400093a8:	bts    r13d,0xc
   1400093ad:	jmp    0x140009329
   1400093b2:	or     r13d,0x10
   1400093b6:	jmp    0x140009329
   1400093bb:	or     r13d,0x20
   1400093bf:	jmp    0x140009329
   1400093c4:	mov    al,BYTE PTR [rdx]
   1400093c6:	bts    r13d,0xf
   1400093cb:	cmp    al,0x36
   1400093cd:	jne    0x1400093e3
   1400093cf:	cmp    BYTE PTR [rdx+0x1],0x34
   1400093d3:	jne    0x1400093e3
   1400093d5:	add    rdx,0x2
   1400093d9:	bts    r13d,0xf
   1400093de:	jmp    0x140009329
   1400093e3:	cmp    al,0x33
   1400093e5:	jne    0x1400093fb
   1400093e7:	cmp    BYTE PTR [rdx+0x1],0x32
   1400093eb:	jne    0x1400093fb
   1400093ed:	add    rdx,0x2
   1400093f1:	btr    r13d,0xf
   1400093f6:	jmp    0x140009329
   1400093fb:	cmp    al,0x64
   1400093fd:	je     0x140009329
   140009403:	cmp    al,0x69
   140009405:	je     0x140009329
   14000940b:	cmp    al,0x6f
   14000940d:	je     0x140009329
   140009413:	cmp    al,0x75
   140009415:	je     0x140009329
   14000941b:	cmp    al,0x78
   14000941d:	je     0x140009329
   140009423:	cmp    al,0x58
   140009425:	je     0x140009329
   14000942b:	mov    DWORD PTR [rsp+0x60],r10d
   140009430:	lea    rdx,[rbp-0x80]
   140009434:	movzx  ecx,r12b
   140009438:	mov    DWORD PTR [rsp+0x54],r10d
   14000943d:	call   0x14000a3ac
   140009442:	xor    esi,esi
   140009444:	test   eax,eax
   140009446:	je     0x140009473
   140009448:	mov    rdx,QWORD PTR [rsp+0x70]
   14000944d:	lea    r8,[rsp+0x40]
   140009452:	mov    cl,r12b
   140009455:	call   0x1400089a0
   14000945a:	mov    rdx,QWORD PTR [rsp+0x68]
   14000945f:	mov    r12b,BYTE PTR [rdx]
   140009462:	inc    rdx
   140009465:	mov    QWORD PTR [rsp+0x68],rdx
   14000946a:	test   r12b,r12b
   14000946d:	je     0x14000958a
   140009473:	mov    rdx,QWORD PTR [rsp+0x70]
   140009478:	lea    r8,[rsp+0x40]
   14000947d:	mov    cl,r12b
   140009480:	call   0x1400089a0
   140009485:	mov    esi,DWORD PTR [rsp+0x40]
   140009489:	xor    r10d,r10d
   14000948c:	jmp    0x140009312
   140009491:	cmp    r12b,0x2a
   140009495:	jne    0x1400094b7
   140009497:	mov    edi,DWORD PTR [r15]
   14000949a:	add    r15,0x8
   14000949e:	mov    DWORD PTR [rsp+0x44],edi
   1400094a2:	test   edi,edi
   1400094a4:	jns    0x140009329
   1400094aa:	mov    edi,r14d
   1400094ad:	mov    DWORD PTR [rsp+0x44],r14d
   1400094b2:	jmp    0x140009329
   1400094b7:	lea    ecx,[rdi+rdi*4]
   1400094ba:	movsx  eax,r12b
   1400094be:	lea    edi,[rax+rcx*2-0x30]
   1400094c2:	mov    DWORD PTR [rsp+0x44],edi
   1400094c6:	jmp    0x140009329
   1400094cb:	mov    edi,r10d
   1400094ce:	mov    DWORD PTR [rsp+0x44],r10d
   1400094d3:	jmp    0x140009329
   1400094d8:	cmp    r12b,0x2a
   1400094dc:	jne    0x1400094f9
   1400094de:	mov    eax,DWORD PTR [r15]
   1400094e1:	add    r15,0x8
   1400094e5:	mov    DWORD PTR [rsp+0x58],eax
   1400094e9:	test   eax,eax
   1400094eb:	jns    0x140009329
   1400094f1:	or     r13d,0x4
   1400094f5:	neg    eax
   1400094f7:	jmp    0x140009508
   1400094f9:	mov    eax,DWORD PTR [rsp+0x58]
   1400094fd:	lea    ecx,[rax+rax*4]
   140009500:	movsx  eax,r12b
   140009504:	lea    eax,[rax+rcx*2-0x30]
   140009508:	mov    DWORD PTR [rsp+0x58],eax
   14000950c:	jmp    0x140009329
   140009511:	cmp    r12b,0x20
   140009515:	je     0x140009558
   140009517:	cmp    r12b,0x23
   14000951b:	je     0x14000954e
   14000951d:	cmp    r12b,0x2b
   140009521:	je     0x140009545
   140009523:	cmp    r12b,0x2d
   140009527:	je     0x14000953c
   140009529:	cmp    r12b,0x30
   14000952d:	jne    0x140009329
   140009533:	or     r13d,0x8
   140009537:	jmp    0x140009329
   14000953c:	or     r13d,0x4
   140009540:	jmp    0x140009329
   140009545:	or     r13d,0x1
   140009549:	jmp    0x140009329
   14000954e:	bts    r13d,0x7
   140009553:	jmp    0x140009329
   140009558:	or     r13d,0x2
   14000955c:	jmp    0x140009329
   140009561:	mov    DWORD PTR [rsp+0x78],r10d
   140009566:	mov    DWORD PTR [rsp+0x5c],r10d
   14000956b:	mov    DWORD PTR [rsp+0x58],r10d
   140009570:	mov    DWORD PTR [rsp+0x4c],r10d
   140009575:	mov    r13d,r10d
   140009578:	mov    edi,r14d
   14000957b:	mov    DWORD PTR [rsp+0x44],r14d
   140009580:	mov    DWORD PTR [rsp+0x54],r10d
   140009585:	jmp    0x140009329
   14000958a:	call   0x140003564
   14000958f:	mov    DWORD PTR [rax],0x16
   140009595:	call   0x1400034fc
   14000959a:	cmp    BYTE PTR [rbp-0x68],sil
   14000959e:	jmp    0x140008c1e
   1400095a3:	int3   
   1400095a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400095a9:	push   rdi
   1400095aa:	sub    rsp,0x20
   1400095ae:	movsxd rbx,ecx
   1400095b1:	mov    edi,r8d
   1400095b4:	mov    QWORD PTR [rsp+0x38],rdx
   1400095b9:	mov    ecx,ebx
   1400095bb:	call   0x14000b21c
   1400095c0:	cmp    rax,0xffffffffffffffff
   1400095c4:	jne    0x1400095d7
   1400095c6:	call   0x140003564
   1400095cb:	mov    DWORD PTR [rax],0x9
   1400095d1:	or     rax,0xffffffffffffffff
   1400095d5:	jmp    0x14000962e
   1400095d7:	mov    edx,DWORD PTR [rsp+0x38]
   1400095db:	lea    r8,[rsp+0x3c]
   1400095e0:	mov    r9d,edi
   1400095e3:	mov    rcx,rax
   1400095e6:	call   QWORD PTR [rip+0x4bcc]        # 0x14000e1b8
   1400095ec:	mov    DWORD PTR [rsp+0x38],eax
   1400095f0:	cmp    eax,0xffffffff
   1400095f3:	jne    0x140009608
   1400095f5:	call   QWORD PTR [rip+0x4a7d]        # 0x14000e078
   1400095fb:	test   eax,eax
   1400095fd:	je     0x140009608
   1400095ff:	mov    ecx,eax
   140009601:	call   0x1400035a4
   140009606:	jmp    0x1400095d1
   140009608:	mov    rcx,rbx
   14000960b:	mov    rax,rbx
   14000960e:	lea    rdx,[rip+0xb00b]        # 0x140014620
   140009615:	sar    rax,0x5
   140009619:	and    ecx,0x1f
   14000961c:	mov    rax,QWORD PTR [rdx+rax*8]
   140009620:	imul   rcx,rcx,0x58
   140009624:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140009629:	mov    rax,QWORD PTR [rsp+0x38]
   14000962e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009633:	add    rsp,0x20
   140009637:	pop    rdi
   140009638:	ret    
   140009639:	int3   
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	mov    QWORD PTR [rsp+0x10],rbx
   140009641:	mov    DWORD PTR [rsp+0x8],ecx
   140009645:	push   rsi
   140009646:	push   rdi
   140009647:	push   r12
   140009649:	push   r13
   14000964b:	push   r14
   14000964d:	sub    rsp,0x20
   140009651:	mov    esi,r8d
   140009654:	mov    r12,rdx
   140009657:	movsxd rdi,ecx
   14000965a:	cmp    edi,0xfffffffe
   14000965d:	jne    0x140009677
   14000965f:	call   0x140003584
   140009664:	and    DWORD PTR [rax],0x0
   140009667:	call   0x140003564
   14000966c:	mov    DWORD PTR [rax],0x9
   140009672:	jmp    0x140009709
   140009677:	test   ecx,ecx
   140009679:	js     0x1400096f1
   14000967b:	cmp    edi,DWORD PTR [rip+0xaf9b]        # 0x14001461c
   140009681:	jae    0x1400096f1
   140009683:	mov    rbx,rdi
   140009686:	mov    r13,rdi
   140009689:	sar    r13,0x5
   14000968d:	lea    r14,[rip+0xaf8c]        # 0x140014620
   140009694:	and    ebx,0x1f
   140009697:	imul   rbx,rbx,0x58
   14000969b:	mov    rax,QWORD PTR [r14+r13*8]
   14000969f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400096a4:	and    ecx,0x1
   1400096a7:	je     0x1400096f1
   1400096a9:	mov    ecx,edi
   1400096ab:	call   0x14000b290
   1400096b0:	nop
   1400096b1:	mov    rax,QWORD PTR [r14+r13*8]
   1400096b5:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400096ba:	je     0x1400096ce
   1400096bc:	mov    r8d,esi
   1400096bf:	mov    rdx,r12
   1400096c2:	mov    ecx,edi
   1400096c4:	call   0x1400095a4
   1400096c9:	mov    rbx,rax
   1400096cc:	jmp    0x1400096e5
   1400096ce:	call   0x140003564
   1400096d3:	mov    DWORD PTR [rax],0x9
   1400096d9:	call   0x140003584
   1400096de:	and    DWORD PTR [rax],0x0
   1400096e1:	or     rbx,0xffffffffffffffff
   1400096e5:	mov    ecx,edi
   1400096e7:	call   0x14000b338
   1400096ec:	mov    rax,rbx
   1400096ef:	jmp    0x14000970d
   1400096f1:	call   0x140003584
   1400096f6:	and    DWORD PTR [rax],0x0
   1400096f9:	call   0x140003564
   1400096fe:	mov    DWORD PTR [rax],0x9
   140009704:	call   0x1400034fc
   140009709:	or     rax,0xffffffffffffffff
   14000970d:	mov    rbx,QWORD PTR [rsp+0x58]
   140009712:	add    rsp,0x20
   140009716:	pop    r14
   140009718:	pop    r13
   14000971a:	pop    r12
   14000971c:	pop    rdi
   14000971d:	pop    rsi
   14000971e:	ret    
   14000971f:	int3   
   140009720:	mov    QWORD PTR [rsp+0x20],rbx
   140009725:	push   rbp
   140009726:	push   rsi
   140009727:	push   rdi
   140009728:	push   r12
   14000972a:	push   r13
   14000972c:	push   r14
   14000972e:	push   r15
   140009730:	lea    rbp,[rsp-0x1a30]
   140009738:	mov    eax,0x1b30
   14000973d:	call   0x14000bb90
   140009742:	sub    rsp,rax
   140009745:	mov    rax,QWORD PTR [rip+0x88bc]        # 0x140012008
   14000974c:	xor    rax,rsp
   14000974f:	mov    QWORD PTR [rbp+0x1a20],rax
   140009756:	xor    edi,edi
   140009758:	mov    r14d,r8d
   14000975b:	mov    r13,rdx
   14000975e:	and    DWORD PTR [rsp+0x44],edi
   140009762:	movsxd rbx,ecx
   140009765:	test   r8d,r8d
   140009768:	jne    0x140009771
   14000976a:	xor    eax,eax
   14000976c:	jmp    0x140009e56
   140009771:	test   rdx,rdx
   140009774:	jne    0x140009795
   140009776:	call   0x140003584
   14000977b:	and    DWORD PTR [rax],edi
   14000977d:	call   0x140003564
   140009782:	mov    DWORD PTR [rax],0x16
   140009788:	call   0x1400034fc
   14000978d:	or     eax,0xffffffff
   140009790:	jmp    0x140009e56
   140009795:	mov    r15,rbx
   140009798:	mov    r12,rbx
   14000979b:	lea    rax,[rip+0xae7e]        # 0x140014620
   1400097a2:	sar    r12,0x5
   1400097a6:	and    r15d,0x1f
   1400097aa:	mov    rcx,QWORD PTR [rax+r12*8]
   1400097ae:	mov    QWORD PTR [rsp+0x50],r12
   1400097b3:	imul   r15,r15,0x58
   1400097b7:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   1400097bc:	mov    QWORD PTR [rsp+0x60],r15
   1400097c1:	add    sil,sil
   1400097c4:	sar    sil,1
   1400097c7:	cmp    sil,0x2
   1400097cb:	je     0x1400097d3
   1400097cd:	cmp    sil,0x1
   1400097d1:	jne    0x1400097dc
   1400097d3:	mov    eax,r14d
   1400097d6:	not    eax
   1400097d8:	test   al,0x1
   1400097da:	je     0x140009776
   1400097dc:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   1400097e2:	je     0x1400097f1
   1400097e4:	xor    edx,edx
   1400097e6:	mov    ecx,ebx
   1400097e8:	lea    r8d,[rdx+0x2]
   1400097ec:	call   0x1400095a4
   1400097f1:	mov    ecx,ebx
   1400097f3:	call   0x140009fb4
   1400097f8:	test   eax,eax
   1400097fa:	je     0x140009aca
   140009800:	lea    rax,[rip+0xae19]        # 0x140014620
   140009807:	mov    rax,QWORD PTR [rax+r12*8]
   14000980b:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140009811:	je     0x140009aca
   140009817:	call   0x140003d18
   14000981c:	xor    ebx,ebx
   14000981e:	lea    rdx,[rsp+0x5c]
   140009823:	mov    rcx,QWORD PTR [rax+0xc0]
   14000982a:	lea    rax,[rip+0xadef]        # 0x140014620
   140009831:	cmp    DWORD PTR [rcx+0x14],ebx
   140009834:	mov    rcx,QWORD PTR [rax+r12*8]
   140009838:	mov    rcx,QWORD PTR [r15+rcx*1]
   14000983c:	sete   bl
   14000983f:	call   QWORD PTR [rip+0x49fb]        # 0x14000e240
   140009845:	test   eax,eax
   140009847:	je     0x140009aca
   14000984d:	test   ebx,ebx
   14000984f:	je     0x14000985a
   140009851:	test   sil,sil
   140009854:	je     0x140009aca
   14000985a:	call   QWORD PTR [rip+0x49d8]        # 0x14000e238
   140009860:	and    DWORD PTR [rsp+0x58],edi
   140009864:	mov    rbx,r13
   140009867:	mov    DWORD PTR [rsp+0x5c],eax
   14000986b:	test   r14d,r14d
   14000986e:	je     0x140009ac1
   140009874:	test   sil,sil
   140009877:	jne    0x140009a01
   14000987d:	mov    cl,BYTE PTR [rbx]
   14000987f:	xor    eax,eax
   140009881:	cmp    cl,0xa
   140009884:	sete   al
   140009887:	mov    DWORD PTR [rsp+0x4c],eax
   14000988b:	lea    rax,[rip+0xad8e]        # 0x140014620
   140009892:	mov    rdx,QWORD PTR [rax+r12*8]
   140009896:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14000989c:	je     0x1400098be
   14000989e:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   1400098a3:	mov    BYTE PTR [rsp+0x61],cl
   1400098a7:	mov    r8d,0x2
   1400098ad:	mov    BYTE PTR [rsp+0x60],al
   1400098b1:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   1400098b7:	lea    rdx,[rsp+0x60]
   1400098bc:	jmp    0x140009907
   1400098be:	movsx  ecx,cl
   1400098c1:	call   0x14000a3f4
   1400098c6:	test   eax,eax
   1400098c8:	je     0x1400098fe
   1400098ca:	mov    rax,r14
   1400098cd:	sub    rax,rbx
   1400098d0:	add    rax,r13
   1400098d3:	cmp    rax,0x1
   1400098d7:	jle    0x140009a8a
   1400098dd:	lea    rcx,[rsp+0x40]
   1400098e2:	mov    r8d,0x2
   1400098e8:	mov    rdx,rbx
   1400098eb:	call   0x14000a3a4
   1400098f0:	cmp    eax,0xffffffff
   1400098f3:	je     0x140009aab
   1400098f9:	inc    rbx
   1400098fc:	jmp    0x14000991a
   1400098fe:	mov    r8d,0x1
   140009904:	mov    rdx,rbx
   140009907:	lea    rcx,[rsp+0x40]
   14000990c:	call   0x14000a3a4
   140009911:	cmp    eax,0xffffffff
   140009914:	je     0x140009aab
   14000991a:	and    QWORD PTR [rsp+0x38],0x0
   140009920:	and    QWORD PTR [rsp+0x30],0x0
   140009926:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000992a:	lea    rax,[rsp+0x60]
   14000992f:	lea    r8,[rsp+0x40]
   140009934:	mov    r9d,0x1
   14000993a:	xor    edx,edx
   14000993c:	mov    DWORD PTR [rsp+0x28],0x5
   140009944:	inc    rbx
   140009947:	mov    QWORD PTR [rsp+0x20],rax
   14000994c:	call   QWORD PTR [rip+0x487e]        # 0x14000e1d0
   140009952:	mov    r12d,eax
   140009955:	test   eax,eax
   140009957:	je     0x140009aab
   14000995d:	mov    rcx,QWORD PTR [rsp+0x50]
   140009962:	and    QWORD PTR [rsp+0x20],0x0
   140009968:	lea    rax,[rip+0xacb1]        # 0x140014620
   14000996f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009973:	lea    r9,[rsp+0x58]
   140009978:	lea    rdx,[rsp+0x60]
   14000997d:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009981:	mov    r8d,r12d
   140009984:	call   QWORD PTR [rip+0x47f6]        # 0x14000e180
   14000998a:	test   eax,eax
   14000998c:	je     0x140009ab4
   140009992:	mov    edi,ebx
   140009994:	sub    edi,r13d
   140009997:	add    edi,DWORD PTR [rsp+0x44]
   14000999b:	cmp    DWORD PTR [rsp+0x58],r12d
   1400099a0:	jl     0x140009aab
   1400099a6:	cmp    DWORD PTR [rsp+0x4c],0x0
   1400099ab:	mov    r12,QWORD PTR [rsp+0x50]
   1400099b0:	je     0x140009a7b
   1400099b6:	and    QWORD PTR [rsp+0x20],0x0
   1400099bc:	lea    rax,[rip+0xac5d]        # 0x140014620
   1400099c3:	mov    BYTE PTR [rsp+0x60],0xd
   1400099c8:	mov    rcx,QWORD PTR [rax+r12*8]
   1400099cc:	lea    r9,[rsp+0x58]
   1400099d1:	lea    rdx,[rsp+0x60]
   1400099d6:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400099da:	mov    r8d,0x1
   1400099e0:	call   QWORD PTR [rip+0x479a]        # 0x14000e180
   1400099e6:	test   eax,eax
   1400099e8:	je     0x140009ab4
   1400099ee:	cmp    DWORD PTR [rsp+0x58],0x1
   1400099f3:	jl     0x140009aab
   1400099f9:	inc    DWORD PTR [rsp+0x44]
   1400099fd:	inc    edi
   1400099ff:	jmp    0x140009a7b
   140009a01:	cmp    sil,0x1
   140009a05:	je     0x140009a0d
   140009a07:	cmp    sil,0x2
   140009a0b:	jne    0x140009a2b
   140009a0d:	movzx  eax,WORD PTR [rbx]
   140009a10:	xor    r12d,r12d
   140009a13:	cmp    ax,0xa
   140009a17:	mov    WORD PTR [rsp+0x40],ax
   140009a1c:	sete   r12b
   140009a20:	add    rbx,0x2
   140009a24:	mov    DWORD PTR [rsp+0x4c],r12d
   140009a29:	jmp    0x140009a30
   140009a2b:	mov    r12d,DWORD PTR [rsp+0x4c]
   140009a30:	cmp    sil,0x1
   140009a34:	je     0x140009a3c
   140009a36:	cmp    sil,0x2
   140009a3a:	jne    0x140009a76
   140009a3c:	movzx  ecx,WORD PTR [rsp+0x40]
   140009a41:	call   0x14000c864
   140009a46:	cmp    ax,WORD PTR [rsp+0x40]
   140009a4b:	jne    0x140009ab4
   140009a4d:	add    edi,0x2
   140009a50:	test   r12d,r12d
   140009a53:	je     0x140009a76
   140009a55:	mov    r12d,0xd
   140009a5b:	mov    ecx,r12d
   140009a5e:	mov    WORD PTR [rsp+0x40],r12w
   140009a64:	call   0x14000c864
   140009a69:	cmp    ax,WORD PTR [rsp+0x40]
   140009a6e:	jne    0x140009ab4
   140009a70:	inc    edi
   140009a72:	inc    DWORD PTR [rsp+0x44]
   140009a76:	mov    r12,QWORD PTR [rsp+0x50]
   140009a7b:	mov    eax,ebx
   140009a7d:	sub    eax,r13d
   140009a80:	cmp    eax,r14d
   140009a83:	jae    0x140009aab
   140009a85:	jmp    0x140009874
   140009a8a:	mov    al,BYTE PTR [rbx]
   140009a8c:	lea    rdx,[rip+0xab8d]        # 0x140014620
   140009a93:	inc    edi
   140009a95:	mov    rcx,QWORD PTR [rdx+r12*8]
   140009a99:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140009a9e:	mov    rax,QWORD PTR [rdx+r12*8]
   140009aa2:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140009aab:	mov    ebx,DWORD PTR [rsp+0x4c]
   140009aaf:	jmp    0x140009dad
   140009ab4:	call   QWORD PTR [rip+0x45be]        # 0x14000e078
   140009aba:	mov    ebx,eax
   140009abc:	jmp    0x140009dad
   140009ac1:	mov    ebx,DWORD PTR [rsp+0x4c]
   140009ac5:	jmp    0x140009db5
   140009aca:	lea    rax,[rip+0xab4f]        # 0x140014620
   140009ad1:	mov    rcx,QWORD PTR [rax+r12*8]
   140009ad5:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140009adb:	je     0x140009ddf
   140009ae1:	xor    ebx,ebx
   140009ae3:	mov    r12,r13
   140009ae6:	test   sil,sil
   140009ae9:	jne    0x140009bba
   140009aef:	test   r14d,r14d
   140009af2:	je     0x140009e15
   140009af8:	lea    edx,[rbx+0xd]
   140009afb:	mov    r15d,DWORD PTR [rsp+0x44]
   140009b00:	lea    rsi,[rbp+0x620]
   140009b07:	xor    ecx,ecx
   140009b09:	mov    eax,r12d
   140009b0c:	sub    eax,r13d
   140009b0f:	cmp    eax,r14d
   140009b12:	jae    0x140009b3b
   140009b14:	mov    al,BYTE PTR [r12]
   140009b18:	inc    r12
   140009b1b:	cmp    al,0xa
   140009b1d:	jne    0x140009b2a
   140009b1f:	mov    BYTE PTR [rsi],dl
   140009b21:	inc    r15d
   140009b24:	inc    rsi
   140009b27:	inc    rcx
   140009b2a:	inc    rcx
   140009b2d:	mov    BYTE PTR [rsi],al
   140009b2f:	inc    rsi
   140009b32:	cmp    rcx,0x13ff
   140009b39:	jb     0x140009b09
   140009b3b:	and    QWORD PTR [rsp+0x20],rbx
   140009b40:	lea    rax,[rbp+0x620]
   140009b47:	mov    r8d,esi
   140009b4a:	sub    r8d,eax
   140009b4d:	mov    rax,QWORD PTR [rsp+0x50]
   140009b52:	lea    rcx,[rip+0xaac7]        # 0x140014620
   140009b59:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009b5d:	mov    DWORD PTR [rsp+0x44],r15d
   140009b62:	mov    r15,QWORD PTR [rsp+0x60]
   140009b67:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009b6b:	lea    r9,[rsp+0x48]
   140009b70:	lea    rdx,[rbp+0x620]
   140009b77:	call   QWORD PTR [rip+0x4603]        # 0x14000e180
   140009b7d:	test   eax,eax
   140009b7f:	je     0x140009ab4
   140009b85:	add    edi,DWORD PTR [rsp+0x48]
   140009b89:	lea    rax,[rbp+0x620]
   140009b90:	sub    rsi,rax
   140009b93:	movsxd rax,DWORD PTR [rsp+0x48]
   140009b98:	cmp    rax,rsi
   140009b9b:	jl     0x140009dad
   140009ba1:	mov    eax,r12d
   140009ba4:	mov    edx,0xd
   140009ba9:	sub    eax,r13d
   140009bac:	cmp    eax,r14d
   140009baf:	jb     0x140009afb
   140009bb5:	jmp    0x140009dad
   140009bba:	cmp    sil,0x2
   140009bbe:	jne    0x140009c9c
   140009bc4:	test   r14d,r14d
   140009bc7:	je     0x140009e15
   140009bcd:	mov    edx,0xd
   140009bd2:	mov    r15d,DWORD PTR [rsp+0x44]
   140009bd7:	lea    rsi,[rbp+0x620]
   140009bde:	xor    ecx,ecx
   140009be0:	mov    eax,r12d
   140009be3:	sub    eax,r13d
   140009be6:	cmp    eax,r14d
   140009be9:	jae    0x140009c1d
   140009beb:	movzx  eax,WORD PTR [r12]
   140009bf0:	add    r12,0x2
   140009bf4:	cmp    ax,0xa
   140009bf8:	jne    0x140009c09
   140009bfa:	mov    WORD PTR [rsi],dx
   140009bfd:	add    r15d,0x2
   140009c01:	add    rsi,0x2
   140009c05:	add    rcx,0x2
   140009c09:	add    rcx,0x2
   140009c0d:	mov    WORD PTR [rsi],ax
   140009c10:	add    rsi,0x2
   140009c14:	cmp    rcx,0x13fe
   140009c1b:	jb     0x140009be0
   140009c1d:	and    QWORD PTR [rsp+0x20],rbx
   140009c22:	lea    rax,[rbp+0x620]
   140009c29:	mov    r8d,esi
   140009c2c:	sub    r8d,eax
   140009c2f:	mov    rax,QWORD PTR [rsp+0x50]
   140009c34:	lea    rcx,[rip+0xa9e5]        # 0x140014620
   140009c3b:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009c3f:	mov    DWORD PTR [rsp+0x44],r15d
   140009c44:	mov    r15,QWORD PTR [rsp+0x60]
   140009c49:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009c4d:	lea    r9,[rsp+0x48]
   140009c52:	lea    rdx,[rbp+0x620]
   140009c59:	call   QWORD PTR [rip+0x4521]        # 0x14000e180
   140009c5f:	test   eax,eax
   140009c61:	je     0x140009ab4
   140009c67:	add    edi,DWORD PTR [rsp+0x48]
   140009c6b:	lea    rax,[rbp+0x620]
   140009c72:	sub    rsi,rax
   140009c75:	movsxd rax,DWORD PTR [rsp+0x48]
   140009c7a:	cmp    rax,rsi
   140009c7d:	jl     0x140009dad
   140009c83:	mov    eax,r12d
   140009c86:	mov    edx,0xd
   140009c8b:	sub    eax,r13d
   140009c8e:	cmp    eax,r14d
   140009c91:	jb     0x140009bd2
   140009c97:	jmp    0x140009dad
   140009c9c:	test   r14d,r14d
   140009c9f:	je     0x140009e15
   140009ca5:	mov    r8d,0xd
   140009cab:	lea    rcx,[rsp+0x70]
   140009cb0:	xor    edx,edx
   140009cb2:	mov    eax,r12d
   140009cb5:	sub    eax,r13d
   140009cb8:	cmp    eax,r14d
   140009cbb:	jae    0x140009cec
   140009cbd:	movzx  eax,WORD PTR [r12]
   140009cc2:	add    r12,0x2
   140009cc6:	cmp    ax,0xa
   140009cca:	jne    0x140009cd8
   140009ccc:	mov    WORD PTR [rcx],r8w
   140009cd0:	add    rcx,0x2
   140009cd4:	add    rdx,0x2
   140009cd8:	add    rdx,0x2
   140009cdc:	mov    WORD PTR [rcx],ax
   140009cdf:	add    rcx,0x2
   140009ce3:	cmp    rdx,0x6a8
   140009cea:	jb     0x140009cb2
   140009cec:	and    QWORD PTR [rsp+0x38],0x0
   140009cf2:	and    QWORD PTR [rsp+0x30],0x0
   140009cf8:	lea    rax,[rsp+0x70]
   140009cfd:	sub    ecx,eax
   140009cff:	lea    r8,[rsp+0x70]
   140009d04:	mov    DWORD PTR [rsp+0x28],0xd55
   140009d0c:	mov    eax,ecx
   140009d0e:	mov    ecx,0xfde9
   140009d13:	cdq    
   140009d14:	sub    eax,edx
   140009d16:	xor    edx,edx
   140009d18:	sar    eax,1
   140009d1a:	mov    r9d,eax
   140009d1d:	lea    rax,[rbp+0x620]
   140009d24:	mov    QWORD PTR [rsp+0x20],rax
   140009d29:	call   QWORD PTR [rip+0x44a1]        # 0x14000e1d0
   140009d2f:	mov    r15d,eax
   140009d32:	test   eax,eax
   140009d34:	je     0x140009dd5
   140009d3a:	xor    esi,esi
   140009d3c:	mov    rax,QWORD PTR [rsp+0x50]
   140009d41:	and    QWORD PTR [rsp+0x20],0x0
   140009d47:	movsxd rcx,esi
   140009d4a:	lea    rdx,[rbp+rcx*1+0x620]
   140009d52:	mov    r8d,r15d
   140009d55:	lea    rcx,[rip+0xa8c4]        # 0x140014620
   140009d5c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009d60:	mov    rax,QWORD PTR [rsp+0x60]
   140009d65:	lea    r9,[rsp+0x48]
   140009d6a:	mov    rcx,QWORD PTR [rax+rcx*1]
   140009d6e:	sub    r8d,esi
   140009d71:	call   QWORD PTR [rip+0x4409]        # 0x14000e180
   140009d77:	test   eax,eax
   140009d79:	je     0x140009d86
   140009d7b:	add    esi,DWORD PTR [rsp+0x48]
   140009d7f:	cmp    r15d,esi
   140009d82:	jg     0x140009d3c
   140009d84:	jmp    0x140009d8e
   140009d86:	call   QWORD PTR [rip+0x42ec]        # 0x14000e078
   140009d8c:	mov    ebx,eax
   140009d8e:	cmp    r15d,esi
   140009d91:	jg     0x140009da8
   140009d93:	mov    edi,r12d
   140009d96:	mov    r8d,0xd
   140009d9c:	sub    edi,r13d
   140009d9f:	cmp    edi,r14d
   140009da2:	jb     0x140009cab
   140009da8:	mov    r15,QWORD PTR [rsp+0x60]
   140009dad:	test   edi,edi
   140009daf:	jne    0x140009e50
   140009db5:	test   ebx,ebx
   140009db7:	je     0x140009e15
   140009db9:	cmp    ebx,0x5
   140009dbc:	jne    0x140009e09
   140009dbe:	call   0x140003564
   140009dc3:	mov    DWORD PTR [rax],0x9
   140009dc9:	call   0x140003584
   140009dce:	mov    DWORD PTR [rax],ebx
   140009dd0:	jmp    0x14000978d
   140009dd5:	call   QWORD PTR [rip+0x429d]        # 0x14000e078
   140009ddb:	mov    ebx,eax
   140009ddd:	jmp    0x140009da8
   140009ddf:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009de3:	and    QWORD PTR [rsp+0x20],rdi
   140009de8:	lea    r9,[rsp+0x48]
   140009ded:	mov    r8d,r14d
   140009df0:	mov    rdx,r13
   140009df3:	call   QWORD PTR [rip+0x4387]        # 0x14000e180
   140009df9:	test   eax,eax
   140009dfb:	je     0x140009ab4
   140009e01:	mov    edi,DWORD PTR [rsp+0x48]
   140009e05:	xor    ebx,ebx
   140009e07:	jmp    0x140009dad
   140009e09:	mov    ecx,ebx
   140009e0b:	call   0x1400035a4
   140009e10:	jmp    0x14000978d
   140009e15:	mov    rax,QWORD PTR [rsp+0x50]
   140009e1a:	lea    rcx,[rip+0xa7ff]        # 0x140014620
   140009e21:	mov    rax,QWORD PTR [rcx+rax*8]
   140009e25:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140009e2b:	je     0x140009e38
   140009e2d:	cmp    BYTE PTR [r13+0x0],0x1a
   140009e32:	je     0x14000976a
   140009e38:	call   0x140003564
   140009e3d:	mov    DWORD PTR [rax],0x1c
   140009e43:	call   0x140003584
   140009e48:	and    DWORD PTR [rax],0x0
   140009e4b:	jmp    0x14000978d
   140009e50:	sub    edi,DWORD PTR [rsp+0x44]
   140009e54:	mov    eax,edi
   140009e56:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140009e5d:	xor    rcx,rsp
   140009e60:	call   0x140001980
   140009e65:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140009e6d:	add    rsp,0x1b30
   140009e74:	pop    r15
   140009e76:	pop    r14
   140009e78:	pop    r13
   140009e7a:	pop    r12
   140009e7c:	pop    rdi
   140009e7d:	pop    rsi
   140009e7e:	pop    rbp
   140009e7f:	ret    
   140009e80:	mov    QWORD PTR [rsp+0x10],rbx
   140009e85:	mov    DWORD PTR [rsp+0x8],ecx
   140009e89:	push   rsi
   140009e8a:	push   rdi
   140009e8b:	push   r12
   140009e8d:	push   r13
   140009e8f:	push   r14
   140009e91:	sub    rsp,0x20
   140009e95:	mov    esi,r8d
   140009e98:	mov    r12,rdx
   140009e9b:	movsxd rdi,ecx
   140009e9e:	cmp    edi,0xfffffffe
   140009ea1:	jne    0x140009ebb
   140009ea3:	call   0x140003584
   140009ea8:	and    DWORD PTR [rax],0x0
   140009eab:	call   0x140003564
   140009eb0:	mov    DWORD PTR [rax],0x9
   140009eb6:	jmp    0x140009f4a
   140009ebb:	test   ecx,ecx
   140009ebd:	js     0x140009f32
   140009ebf:	cmp    edi,DWORD PTR [rip+0xa757]        # 0x14001461c
   140009ec5:	jae    0x140009f32
   140009ec7:	mov    rbx,rdi
   140009eca:	mov    r13,rdi
   140009ecd:	sar    r13,0x5
   140009ed1:	lea    r14,[rip+0xa748]        # 0x140014620
   140009ed8:	and    ebx,0x1f
   140009edb:	imul   rbx,rbx,0x58
   140009edf:	mov    rax,QWORD PTR [r14+r13*8]
   140009ee3:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140009ee8:	and    ecx,0x1
   140009eeb:	je     0x140009f32
   140009eed:	mov    ecx,edi
   140009eef:	call   0x14000b290
   140009ef4:	nop
   140009ef5:	mov    rax,QWORD PTR [r14+r13*8]
   140009ef9:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140009efe:	je     0x140009f11
   140009f00:	mov    r8d,esi
   140009f03:	mov    rdx,r12
   140009f06:	mov    ecx,edi
   140009f08:	call   0x140009720
   140009f0d:	mov    ebx,eax
   140009f0f:	jmp    0x140009f27
   140009f11:	call   0x140003564
   140009f16:	mov    DWORD PTR [rax],0x9
   140009f1c:	call   0x140003584
   140009f21:	and    DWORD PTR [rax],0x0
   140009f24:	or     ebx,0xffffffff
   140009f27:	mov    ecx,edi
   140009f29:	call   0x14000b338
   140009f2e:	mov    eax,ebx
   140009f30:	jmp    0x140009f4d
   140009f32:	call   0x140003584
   140009f37:	and    DWORD PTR [rax],0x0
   140009f3a:	call   0x140003564
   140009f3f:	mov    DWORD PTR [rax],0x9
   140009f45:	call   0x1400034fc
   140009f4a:	or     eax,0xffffffff
   140009f4d:	mov    rbx,QWORD PTR [rsp+0x58]
   140009f52:	add    rsp,0x20
   140009f56:	pop    r14
   140009f58:	pop    r13
   140009f5a:	pop    r12
   140009f5c:	pop    rdi
   140009f5d:	pop    rsi
   140009f5e:	ret    
   140009f5f:	int3   
   140009f60:	rex push rbx
   140009f62:	sub    rsp,0x20
   140009f66:	inc    DWORD PTR [rip+0x9a34]        # 0x1400139a0
   140009f6c:	mov    rbx,rcx
   140009f6f:	mov    ecx,0x1000
   140009f74:	call   0x1400067e0
   140009f79:	mov    QWORD PTR [rbx+0x10],rax
   140009f7d:	test   rax,rax
   140009f80:	je     0x140009f8f
   140009f82:	or     DWORD PTR [rbx+0x18],0x8
   140009f86:	mov    DWORD PTR [rbx+0x24],0x1000
   140009f8d:	jmp    0x140009fa2
   140009f8f:	or     DWORD PTR [rbx+0x18],0x4
   140009f93:	lea    rax,[rbx+0x20]
   140009f97:	mov    DWORD PTR [rbx+0x24],0x2
   140009f9e:	mov    QWORD PTR [rbx+0x10],rax
   140009fa2:	mov    rax,QWORD PTR [rbx+0x10]
   140009fa6:	and    DWORD PTR [rbx+0x8],0x0
   140009faa:	mov    QWORD PTR [rbx],rax
   140009fad:	add    rsp,0x20
   140009fb1:	pop    rbx
   140009fb2:	ret    
   140009fb3:	int3   
   140009fb4:	sub    rsp,0x28
   140009fb8:	cmp    ecx,0xfffffffe
   140009fbb:	jne    0x140009fca
   140009fbd:	call   0x140003564
   140009fc2:	mov    DWORD PTR [rax],0x9
   140009fc8:	jmp    0x14000a00c
   140009fca:	test   ecx,ecx
   140009fcc:	js     0x140009ffc
   140009fce:	cmp    ecx,DWORD PTR [rip+0xa648]        # 0x14001461c
   140009fd4:	jae    0x140009ffc
   140009fd6:	movsxd rcx,ecx
   140009fd9:	lea    rdx,[rip+0xa640]        # 0x140014620
   140009fe0:	mov    rax,rcx
   140009fe3:	and    ecx,0x1f
   140009fe6:	sar    rax,0x5
   140009fea:	imul   rcx,rcx,0x58
   140009fee:	mov    rax,QWORD PTR [rdx+rax*8]
   140009ff2:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140009ff7:	and    eax,0x40
   140009ffa:	jmp    0x14000a00e
   140009ffc:	call   0x140003564
   14000a001:	mov    DWORD PTR [rax],0x9
   14000a007:	call   0x1400034fc
   14000a00c:	xor    eax,eax
   14000a00e:	add    rsp,0x28
   14000a012:	ret    
   14000a013:	int3   
   14000a014:	mov    QWORD PTR [rsp+0x18],rbx
   14000a019:	mov    QWORD PTR [rsp+0x20],rbp
   14000a01e:	push   rsi
   14000a01f:	push   rdi
   14000a020:	push   r12
   14000a022:	sub    rsp,0x40
   14000a026:	mov    rax,QWORD PTR [rip+0x7fdb]        # 0x140012008
   14000a02d:	xor    rax,rsp
   14000a030:	mov    QWORD PTR [rsp+0x30],rax
   14000a035:	test   BYTE PTR [rdx+0x18],0x40
   14000a039:	mov    rdi,rdx
   14000a03c:	movzx  esi,cx
   14000a03f:	jne    0x14000a1ca
   14000a045:	mov    rcx,rdx
   14000a048:	call   0x14000571c
   14000a04d:	lea    rbp,[rip+0x88ac]        # 0x140012900
   14000a054:	lea    r12,[rip+0xa5c5]        # 0x140014620
   14000a05b:	cmp    eax,0xffffffff
   14000a05e:	je     0x14000a095
   14000a060:	mov    rcx,rdi
   14000a063:	call   0x14000571c
   14000a068:	cmp    eax,0xfffffffe
   14000a06b:	je     0x14000a095
   14000a06d:	mov    rcx,rdi
   14000a070:	call   0x14000571c
   14000a075:	mov    rcx,rdi
   14000a078:	movsxd rbx,eax
   14000a07b:	sar    rbx,0x5
   14000a07f:	call   0x14000571c
   14000a084:	mov    r11d,eax
   14000a087:	and    r11d,0x1f
   14000a08b:	imul   r11,r11,0x58
   14000a08f:	add    r11,QWORD PTR [r12+rbx*8]
   14000a093:	jmp    0x14000a098
   14000a095:	mov    r11,rbp
   14000a098:	mov    al,BYTE PTR [r11+0x38]
   14000a09c:	and    al,0x7f
   14000a09e:	cmp    al,0x2
   14000a0a0:	je     0x14000a1b3
   14000a0a6:	mov    rcx,rdi
   14000a0a9:	call   0x14000571c
   14000a0ae:	cmp    eax,0xffffffff
   14000a0b1:	je     0x14000a0e8
   14000a0b3:	mov    rcx,rdi
   14000a0b6:	call   0x14000571c
   14000a0bb:	cmp    eax,0xfffffffe
   14000a0be:	je     0x14000a0e8
   14000a0c0:	mov    rcx,rdi
   14000a0c3:	call   0x14000571c
   14000a0c8:	mov    rcx,rdi
   14000a0cb:	movsxd rbx,eax
   14000a0ce:	sar    rbx,0x5
   14000a0d2:	call   0x14000571c
   14000a0d7:	mov    r11d,eax
   14000a0da:	and    r11d,0x1f
   14000a0de:	imul   r11,r11,0x58
   14000a0e2:	add    r11,QWORD PTR [r12+rbx*8]
   14000a0e6:	jmp    0x14000a0eb
   14000a0e8:	mov    r11,rbp
   14000a0eb:	mov    al,BYTE PTR [r11+0x38]
   14000a0ef:	and    al,0x7f
   14000a0f1:	cmp    al,0x1
   14000a0f3:	je     0x14000a1b3
   14000a0f9:	mov    rcx,rdi
   14000a0fc:	call   0x14000571c
   14000a101:	cmp    eax,0xffffffff
   14000a104:	je     0x14000a137
   14000a106:	mov    rcx,rdi
   14000a109:	call   0x14000571c
   14000a10e:	cmp    eax,0xfffffffe
   14000a111:	je     0x14000a137
   14000a113:	mov    rcx,rdi
   14000a116:	call   0x14000571c
   14000a11b:	mov    rcx,rdi
   14000a11e:	movsxd rbx,eax
   14000a121:	sar    rbx,0x5
   14000a125:	call   0x14000571c
   14000a12a:	mov    ebp,eax
   14000a12c:	and    ebp,0x1f
   14000a12f:	imul   rbp,rbp,0x58
   14000a133:	add    rbp,QWORD PTR [r12+rbx*8]
   14000a137:	test   BYTE PTR [rbp+0x8],0x80
   14000a13b:	je     0x14000a1ca
   14000a141:	lea    rdx,[rsp+0x24]
   14000a146:	lea    rcx,[rsp+0x20]
   14000a14b:	movzx  r9d,si
   14000a14f:	mov    r8d,0x5
   14000a155:	call   0x14000c850
   14000a15a:	xor    ebx,ebx
   14000a15c:	test   eax,eax
   14000a15e:	je     0x14000a16a
   14000a160:	mov    eax,0xffff
   14000a165:	jmp    0x14000a1f3
   14000a16a:	cmp    DWORD PTR [rsp+0x20],ebx
   14000a16e:	jle    0x14000a1ae
   14000a170:	lea    rbp,[rsp+0x24]
   14000a175:	dec    DWORD PTR [rdi+0x8]
   14000a178:	js     0x14000a190
   14000a17a:	mov    rcx,QWORD PTR [rdi]
   14000a17d:	mov    al,BYTE PTR [rbp+0x0]
   14000a180:	mov    BYTE PTR [rcx],al
   14000a182:	mov    rax,QWORD PTR [rdi]
   14000a185:	movzx  ecx,BYTE PTR [rax]
   14000a188:	inc    rax
   14000a18b:	mov    QWORD PTR [rdi],rax
   14000a18e:	jmp    0x14000a19e
   14000a190:	movsx  ecx,BYTE PTR [rbp+0x0]
   14000a194:	mov    rdx,rdi
   14000a197:	call   0x1400047e8
   14000a19c:	mov    ecx,eax
   14000a19e:	cmp    ecx,0xffffffff
   14000a1a1:	je     0x14000a160
   14000a1a3:	inc    ebx
   14000a1a5:	inc    rbp
   14000a1a8:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000a1ac:	jl     0x14000a175
   14000a1ae:	movzx  eax,si
   14000a1b1:	jmp    0x14000a1f3
   14000a1b3:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000a1b7:	add    rcx,0xfffffffffffffffe
   14000a1bb:	mov    DWORD PTR [rdi+0x8],ecx
   14000a1be:	test   ecx,ecx
   14000a1c0:	js     0x14000a1e8
   14000a1c2:	mov    rcx,QWORD PTR [rdi]
   14000a1c5:	mov    WORD PTR [rcx],si
   14000a1c8:	jmp    0x14000a1df
   14000a1ca:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a1ce:	add    rax,0xfffffffffffffffe
   14000a1d2:	mov    DWORD PTR [rdi+0x8],eax
   14000a1d5:	test   eax,eax
   14000a1d7:	js     0x14000a1e8
   14000a1d9:	mov    rax,QWORD PTR [rdi]
   14000a1dc:	mov    WORD PTR [rax],si
   14000a1df:	add    QWORD PTR [rdi],0x2
   14000a1e3:	movzx  eax,si
   14000a1e6:	jmp    0x14000a1f3
   14000a1e8:	mov    rdx,rdi
   14000a1eb:	movzx  ecx,si
   14000a1ee:	call   0x14000c8c0
   14000a1f3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a1f8:	xor    rcx,rsp
   14000a1fb:	call   0x140001980
   14000a200:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a205:	mov    rbp,QWORD PTR [rsp+0x78]
   14000a20a:	add    rsp,0x40
   14000a20e:	pop    r12
   14000a210:	pop    rdi
   14000a211:	pop    rsi
   14000a212:	ret    
   14000a213:	int3   
   14000a214:	mov    rcx,QWORD PTR [rip+0x7ded]        # 0x140012008
   14000a21b:	xor    eax,eax
   14000a21d:	or     rcx,0x1
   14000a221:	cmp    QWORD PTR [rip+0xa1a0],rcx        # 0x1400143c8
   14000a228:	sete   al
   14000a22b:	ret    
   14000a22c:	mov    rax,rsp
   14000a22f:	mov    QWORD PTR [rax+0x8],rbx
   14000a233:	mov    QWORD PTR [rax+0x10],rsi
   14000a237:	mov    QWORD PTR [rax+0x18],rdi
   14000a23b:	mov    QWORD PTR [rax+0x20],r12
   14000a23f:	push   rbp
   14000a240:	mov    rbp,rsp
   14000a243:	sub    rsp,0x50
   14000a247:	xor    r12d,r12d
   14000a24a:	mov    rsi,r8
   14000a24d:	mov    rdi,rdx
   14000a250:	mov    rbx,rcx
   14000a253:	test   rdx,rdx
   14000a256:	je     0x14000a26b
   14000a258:	test   r8,r8
   14000a25b:	je     0x14000a26b
   14000a25d:	cmp    BYTE PTR [rdx],r12b
   14000a260:	jne    0x14000a287
   14000a262:	test   rcx,rcx
   14000a265:	je     0x14000a26b
   14000a267:	mov    WORD PTR [rcx],r12w
   14000a26b:	xor    eax,eax
   14000a26d:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a272:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a277:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a27c:	mov    r12,QWORD PTR [rsp+0x78]
   14000a281:	add    rsp,0x50
   14000a285:	pop    rbp
   14000a286:	ret    
   14000a287:	lea    rcx,[rbp-0x20]
   14000a28b:	mov    rdx,r9
   14000a28e:	call   0x140004978
   14000a293:	mov    r11,QWORD PTR [rbp-0x20]
   14000a297:	cmp    DWORD PTR [r11+0x14],r12d
   14000a29b:	jne    0x14000a2c0
   14000a29d:	test   rbx,rbx
   14000a2a0:	je     0x14000a2a8
   14000a2a2:	movzx  eax,BYTE PTR [rdi]
   14000a2a5:	mov    WORD PTR [rbx],ax
   14000a2a8:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a2ac:	je     0x14000a2b9
   14000a2ae:	mov    rax,QWORD PTR [rbp-0x10]
   14000a2b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a2b9:	mov    eax,0x1
   14000a2be:	jmp    0x14000a26d
   14000a2c0:	movzx  ecx,BYTE PTR [rdi]
   14000a2c3:	lea    rdx,[rbp-0x20]
   14000a2c7:	call   0x14000a3ac
   14000a2cc:	test   eax,eax
   14000a2ce:	je     0x14000a36b
   14000a2d4:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a2d8:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000a2df:	cmp    r9d,0x1
   14000a2e3:	jle    0x14000a315
   14000a2e5:	cmp    esi,r9d
   14000a2e8:	jl     0x14000a315
   14000a2ea:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a2ed:	mov    eax,r12d
   14000a2f0:	test   rbx,rbx
   14000a2f3:	setne  al
   14000a2f6:	mov    r8,rdi
   14000a2f9:	mov    edx,0x9
   14000a2fe:	mov    DWORD PTR [rsp+0x28],eax
   14000a302:	mov    QWORD PTR [rsp+0x20],rbx
   14000a307:	call   QWORD PTR [rip+0x3d53]        # 0x14000e060
   14000a30d:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a311:	test   eax,eax
   14000a313:	jne    0x14000a327
   14000a315:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000a31c:	cmp    rsi,rax
   14000a31f:	jb     0x14000a347
   14000a321:	cmp    BYTE PTR [rdi+0x1],r12b
   14000a325:	je     0x14000a347
   14000a327:	mov    eax,DWORD PTR [rcx+0x10c]
   14000a32d:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a331:	je     0x14000a26d
   14000a337:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a33b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a342:	jmp    0x14000a26d
   14000a347:	call   0x140003564
   14000a34c:	mov    DWORD PTR [rax],0x2a
   14000a352:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a356:	je     0x14000a363
   14000a358:	mov    rax,QWORD PTR [rbp-0x10]
   14000a35c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a363:	or     eax,0xffffffff
   14000a366:	jmp    0x14000a26d
   14000a36b:	mov    eax,r12d
   14000a36e:	mov    r9d,0x1
   14000a374:	test   rbx,rbx
   14000a377:	setne  al
   14000a37a:	lea    edx,[r9+0x8]
   14000a37e:	mov    r8,rdi
   14000a381:	mov    DWORD PTR [rsp+0x28],eax
   14000a385:	mov    rax,QWORD PTR [rbp-0x20]
   14000a389:	mov    QWORD PTR [rsp+0x20],rbx
   14000a38e:	mov    ecx,DWORD PTR [rax+0x4]
   14000a391:	call   QWORD PTR [rip+0x3cc9]        # 0x14000e060
   14000a397:	test   eax,eax
   14000a399:	jne    0x14000a2a8
   14000a39f:	jmp    0x14000a347
   14000a3a1:	int3   
   14000a3a2:	int3   
   14000a3a3:	int3   
   14000a3a4:	xor    r9d,r9d
   14000a3a7:	jmp    0x14000a22c
   14000a3ac:	rex push rbx
   14000a3ae:	sub    rsp,0x40
   14000a3b2:	mov    ebx,ecx
   14000a3b4:	lea    rcx,[rsp+0x20]
   14000a3b9:	call   0x140004978
   14000a3be:	mov    rax,QWORD PTR [rsp+0x20]
   14000a3c3:	movzx  r11d,bl
   14000a3c7:	mov    rcx,QWORD PTR [rax+0x140]
   14000a3ce:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a3d3:	and    eax,0x8000
   14000a3d8:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a3dd:	je     0x14000a3eb
   14000a3df:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3e4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a3eb:	add    rsp,0x40
   14000a3ef:	pop    rbx
   14000a3f0:	ret    
   14000a3f1:	int3   
   14000a3f2:	int3   
   14000a3f3:	int3   
   14000a3f4:	rex push rbx
   14000a3f6:	sub    rsp,0x40
   14000a3fa:	mov    ebx,ecx
   14000a3fc:	lea    rcx,[rsp+0x20]
   14000a401:	xor    edx,edx
   14000a403:	call   0x140004978
   14000a408:	mov    rax,QWORD PTR [rsp+0x20]
   14000a40d:	movzx  r11d,bl
   14000a411:	mov    rcx,QWORD PTR [rax+0x140]
   14000a418:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a41d:	and    eax,0x8000
   14000a422:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a427:	je     0x14000a435
   14000a429:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a42e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a435:	add    rsp,0x40
   14000a439:	pop    rbx
   14000a43a:	ret    
   14000a43b:	int3   
   14000a43c:	rex push rbx
   14000a43e:	sub    rsp,0x20
   14000a442:	test   BYTE PTR [rdx+0x18],0x40
   14000a446:	mov    rbx,r8
   14000a449:	je     0x14000a457
   14000a44b:	cmp    QWORD PTR [rdx+0x10],0x0
   14000a450:	jne    0x14000a457
   14000a452:	inc    DWORD PTR [r8]
   14000a455:	jmp    0x14000a46d
   14000a457:	call   0x14000a014
   14000a45c:	mov    ecx,0xffff
   14000a461:	cmp    ax,cx
   14000a464:	jne    0x14000a46b
   14000a466:	or     DWORD PTR [rbx],0xffffffff
   14000a469:	jmp    0x14000a46d
   14000a46b:	inc    DWORD PTR [rbx]
   14000a46d:	add    rsp,0x20
   14000a471:	pop    rbx
   14000a472:	ret    
   14000a473:	int3   
   14000a474:	test   edx,edx
   14000a476:	jle    0x14000a4c4
   14000a478:	mov    QWORD PTR [rsp+0x8],rbx
   14000a47d:	mov    QWORD PTR [rsp+0x10],rbp
   14000a482:	mov    QWORD PTR [rsp+0x18],rsi
   14000a487:	push   rdi
   14000a488:	sub    rsp,0x20
   14000a48c:	mov    rdi,r9
   14000a48f:	mov    rsi,r8
   14000a492:	mov    ebx,edx
   14000a494:	movzx  ebp,cx
   14000a497:	mov    r8,rdi
   14000a49a:	mov    rdx,rsi
   14000a49d:	movzx  ecx,bp
   14000a4a0:	dec    ebx
   14000a4a2:	call   0x14000a43c
   14000a4a7:	cmp    DWORD PTR [rdi],0xffffffff
   14000a4aa:	je     0x14000a4b0
   14000a4ac:	test   ebx,ebx
   14000a4ae:	jg     0x14000a497
   14000a4b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a4b5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a4ba:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a4bf:	add    rsp,0x20
   14000a4c3:	pop    rdi
   14000a4c4:	ret    
   14000a4c5:	int3   
   14000a4c6:	int3   
   14000a4c7:	int3   
   14000a4c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4cd:	mov    QWORD PTR [rsp+0x10],rbp
   14000a4d2:	mov    QWORD PTR [rsp+0x18],rsi
   14000a4d7:	push   rdi
   14000a4d8:	push   r12
   14000a4da:	push   r13
   14000a4dc:	sub    rsp,0x20
   14000a4e0:	test   BYTE PTR [r8+0x18],0x40
   14000a4e5:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a4ea:	mov    rdi,r9
   14000a4ed:	mov    r12d,DWORD PTR [rbx]
   14000a4f0:	mov    rbp,r8
   14000a4f3:	mov    esi,edx
   14000a4f5:	mov    r13,rcx
   14000a4f8:	je     0x14000a506
   14000a4fa:	cmp    QWORD PTR [r8+0x10],0x0
   14000a4ff:	jne    0x14000a506
   14000a501:	add    DWORD PTR [r9],edx
   14000a504:	jmp    0x14000a549
   14000a506:	and    DWORD PTR [rbx],0x0
   14000a509:	test   edx,edx
   14000a50b:	jle    0x14000a546
   14000a50d:	movzx  ecx,WORD PTR [r13+0x0]
   14000a512:	mov    r8,rdi
   14000a515:	mov    rdx,rbp
   14000a518:	dec    esi
   14000a51a:	call   0x14000a43c
   14000a51f:	add    r13,0x2
   14000a523:	cmp    DWORD PTR [rdi],0xffffffff
   14000a526:	jne    0x14000a53d
   14000a528:	cmp    DWORD PTR [rbx],0x2a
   14000a52b:	jne    0x14000a541
   14000a52d:	mov    ecx,0x3f
   14000a532:	mov    r8,rdi
   14000a535:	mov    rdx,rbp
   14000a538:	call   0x14000a43c
   14000a53d:	test   esi,esi
   14000a53f:	jg     0x14000a50d
   14000a541:	cmp    DWORD PTR [rbx],0x0
   14000a544:	jne    0x14000a549
   14000a546:	mov    DWORD PTR [rbx],r12d
   14000a549:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a54e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a553:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a558:	add    rsp,0x20
   14000a55c:	pop    r13
   14000a55e:	pop    r12
   14000a560:	pop    rdi
   14000a561:	ret    
   14000a562:	int3   
   14000a563:	int3   
   14000a564:	mov    QWORD PTR [rsp+0x18],rbx
   14000a569:	push   rbp
   14000a56a:	push   rsi
   14000a56b:	push   rdi
   14000a56c:	push   r12
   14000a56e:	push   r13
   14000a570:	push   r14
   14000a572:	push   r15
   14000a574:	lea    rbp,[rsp-0x3e0]
   14000a57c:	sub    rsp,0x4e0
   14000a583:	mov    rax,QWORD PTR [rip+0x7a7e]        # 0x140012008
   14000a58a:	xor    rax,rsp
   14000a58d:	mov    QWORD PTR [rbp+0x3d0],rax
   14000a594:	xor    eax,eax
   14000a596:	mov    rbx,rcx
   14000a599:	mov    QWORD PTR [rsp+0x78],rcx
   14000a59e:	mov    QWORD PTR [rbp-0x80],rdx
   14000a5a2:	lea    rcx,[rbp-0x70]
   14000a5a6:	mov    rdx,r8
   14000a5a9:	mov    r14,r9
   14000a5ac:	mov    QWORD PTR [rsp+0x50],r9
   14000a5b1:	mov    DWORD PTR [rsp+0x70],eax
   14000a5b5:	mov    r12d,eax
   14000a5b8:	mov    DWORD PTR [rsp+0x58],eax
   14000a5bc:	mov    edi,eax
   14000a5be:	mov    DWORD PTR [rsp+0x48],eax
   14000a5c2:	mov    DWORD PTR [rsp+0x4c],eax
   14000a5c6:	mov    DWORD PTR [rsp+0x6c],eax
   14000a5ca:	mov    DWORD PTR [rsp+0x44],eax
   14000a5ce:	call   0x140004978
   14000a5d3:	call   0x140003564
   14000a5d8:	xor    r10d,r10d
   14000a5db:	mov    QWORD PTR [rbp-0x48],rax
   14000a5df:	test   rbx,rbx
   14000a5e2:	jne    0x14000a610
   14000a5e4:	call   0x140003564
   14000a5e9:	mov    DWORD PTR [rax],0x16
   14000a5ef:	call   0x1400034fc
   14000a5f4:	xor    r11d,r11d
   14000a5f7:	cmp    BYTE PTR [rbp-0x58],r11b
   14000a5fb:	je     0x14000a608
   14000a5fd:	mov    rax,QWORD PTR [rbp-0x60]
   14000a601:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a608:	or     eax,0xffffffff
   14000a60b:	jmp    0x14000b06c
   14000a610:	mov    r8,QWORD PTR [rbp-0x80]
   14000a614:	test   r8,r8
   14000a617:	je     0x14000a5e4
   14000a619:	movzx  r13d,WORD PTR [r8]
   14000a61d:	mov    edx,r10d
   14000a620:	mov    r15d,r10d
   14000a623:	mov    r9d,r10d
   14000a626:	mov    QWORD PTR [rbp-0x50],r10
   14000a62a:	mov    DWORD PTR [rsp+0x40],edx
   14000a62e:	test   r13w,r13w
   14000a632:	je     0x14000b059
   14000a638:	mov    rbx,QWORD PTR [rbp-0x40]
   14000a63c:	or     esi,0xffffffff
   14000a63f:	lea    ecx,[rsi+0x59]
   14000a642:	lea    r11d,[rsi+0x21]
   14000a646:	add    r8,0x2
   14000a64a:	mov    QWORD PTR [rbp-0x80],r8
   14000a64e:	test   edx,edx
   14000a650:	js     0x14000b04e
   14000a656:	movzx  eax,r13w
   14000a65a:	sub    ax,r11w
   14000a65e:	cmp    ax,cx
   14000a661:	ja     0x14000a678
   14000a663:	lea    rcx,[rip+0x55d6]        # 0x14000fc40
   14000a66a:	movzx  eax,r13w
   14000a66e:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000a673:	and    ecx,0xf
   14000a676:	jmp    0x14000a67b
   14000a678:	mov    ecx,r10d
   14000a67b:	movsxd rax,ecx
   14000a67e:	lea    rcx,[rax+rax*8]
   14000a682:	movsxd rax,r9d
   14000a685:	add    rcx,rax
   14000a688:	lea    rax,[rip+0x55b1]        # 0x14000fc40
   14000a68f:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14000a694:	shr    r9d,0x4
   14000a698:	mov    DWORD PTR [rsp+0x68],r9d
   14000a69d:	cmp    r9d,0x8
   14000a6a1:	je     0x14000b096
   14000a6a7:	mov    ecx,r9d
   14000a6aa:	test   r9d,r9d
   14000a6ad:	je     0x14000aefd
   14000a6b3:	dec    ecx
   14000a6b5:	je     0x14000b008
   14000a6bb:	dec    ecx
   14000a6bd:	je     0x14000afbb
   14000a6c3:	dec    ecx
   14000a6c5:	je     0x14000af70
   14000a6cb:	dec    ecx
   14000a6cd:	je     0x14000af63
   14000a6d3:	dec    ecx
   14000a6d5:	je     0x14000af20
   14000a6db:	dec    ecx
   14000a6dd:	je     0x14000ae0a
   14000a6e3:	dec    ecx
   14000a6e5:	jne    0x14000b03b
   14000a6eb:	movzx  eax,r13w
   14000a6ef:	mov    ecx,0x64
   14000a6f4:	cmp    eax,ecx
   14000a6f6:	jg     0x14000a90e
   14000a6fc:	je     0x14000aa37
   14000a702:	cmp    eax,0x41
   14000a705:	je     0x14000a8d7
   14000a70b:	cmp    eax,0x43
   14000a70e:	je     0x14000a865
   14000a714:	cmp    eax,0x45
   14000a717:	je     0x14000a8d7
   14000a71d:	cmp    eax,0x47
   14000a720:	je     0x14000a8d7
   14000a726:	cmp    eax,0x53
   14000a729:	je     0x14000a7f0
   14000a72f:	cmp    eax,0x58
   14000a732:	je     0x14000a9b3
   14000a738:	cmp    eax,0x5a
   14000a73b:	je     0x14000a78c
   14000a73d:	cmp    eax,0x61
   14000a740:	je     0x14000a8e2
   14000a746:	cmp    eax,0x63
   14000a749:	je     0x14000a871
   14000a74f:	mov    r13d,DWORD PTR [rsp+0x44]
   14000a754:	mov    edi,0x2d
   14000a759:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000a75e:	jne    0x14000adc1
   14000a764:	test   r12b,0x40
   14000a768:	je     0x14000ac9d
   14000a76e:	bt     r12d,0x8
   14000a773:	jae    0x14000ac6f
   14000a779:	mov    WORD PTR [rsp+0x5c],di
   14000a77e:	mov    edi,0x1
   14000a783:	mov    DWORD PTR [rsp+0x4c],edi
   14000a787:	jmp    0x14000aca1
   14000a78c:	mov    rax,QWORD PTR [r14]
   14000a78f:	add    r14,0x8
   14000a793:	mov    QWORD PTR [rsp+0x50],r14
   14000a798:	test   rax,rax
   14000a79b:	je     0x14000a7d6
   14000a79d:	mov    rbx,QWORD PTR [rax+0x8]
   14000a7a1:	test   rbx,rbx
   14000a7a4:	je     0x14000a7d6
   14000a7a6:	mov    edi,0x2d
   14000a7ab:	bt     r12d,0xb
   14000a7b0:	jae    0x14000a7c8
   14000a7b2:	movsx  eax,WORD PTR [rax]
   14000a7b5:	lea    r13d,[rdi-0x2c]
   14000a7b9:	cdq    
   14000a7ba:	mov    DWORD PTR [rsp+0x44],r13d
   14000a7bf:	sub    eax,edx
   14000a7c1:	sar    eax,1
   14000a7c3:	mov    r15d,eax
   14000a7c6:	jmp    0x14000a759
   14000a7c8:	movsx  r15d,WORD PTR [rax]
   14000a7cc:	mov    r13d,r10d
   14000a7cf:	mov    DWORD PTR [rsp+0x44],r10d
   14000a7d4:	jmp    0x14000a759
   14000a7d6:	mov    rbx,QWORD PTR [rip+0x8af3]        # 0x1400132d0
   14000a7dd:	mov    rcx,rbx
   14000a7e0:	call   0x1400084d0
   14000a7e5:	xor    r10d,r10d
   14000a7e8:	mov    r15,rax
   14000a7eb:	jmp    0x14000a74f
   14000a7f0:	test   r12d,0x830
   14000a7f7:	jne    0x14000a7fc
   14000a7f9:	or     r12d,r11d
   14000a7fc:	cmp    DWORD PTR [rsp+0x48],esi
   14000a800:	mov    rbx,QWORD PTR [r14]
   14000a803:	mov    eax,0x7fffffff
   14000a808:	cmove  edi,eax
   14000a80b:	add    r14,0x8
   14000a80f:	mov    QWORD PTR [rsp+0x50],r14
   14000a814:	test   r11b,r12b
   14000a817:	je     0x14000a970
   14000a81d:	test   rbx,rbx
   14000a820:	mov    r15d,r10d
   14000a823:	cmove  rbx,QWORD PTR [rip+0x8aa5]        # 0x1400132d0
   14000a82b:	mov    rsi,rbx
   14000a82e:	test   edi,edi
   14000a830:	jle    0x14000a74f
   14000a836:	cmp    BYTE PTR [rsi],r10b
   14000a839:	je     0x14000a74f
   14000a83f:	movzx  ecx,BYTE PTR [rsi]
   14000a842:	lea    rdx,[rbp-0x70]
   14000a846:	call   0x14000a3ac
   14000a84b:	xor    r10d,r10d
   14000a84e:	test   eax,eax
   14000a850:	je     0x14000a855
   14000a852:	inc    rsi
   14000a855:	inc    r15d
   14000a858:	inc    rsi
   14000a85b:	cmp    r15d,edi
   14000a85e:	jl     0x14000a836
   14000a860:	jmp    0x14000a74f
   14000a865:	test   r12d,0x830
   14000a86c:	jne    0x14000a871
   14000a86e:	or     r12d,r11d
   14000a871:	movzx  eax,WORD PTR [r14]
   14000a875:	add    r14,0x8
   14000a879:	mov    r13d,0x1
   14000a87f:	mov    WORD PTR [rsp+0x60],ax
   14000a884:	mov    DWORD PTR [rsp+0x44],r13d
   14000a889:	mov    QWORD PTR [rsp+0x50],r14
   14000a88e:	test   r11b,r12b
   14000a891:	je     0x14000a8c7
   14000a893:	mov    BYTE PTR [rsp+0x64],al
   14000a897:	mov    rax,QWORD PTR [rbp-0x70]
   14000a89b:	mov    BYTE PTR [rsp+0x65],r10b
   14000a8a0:	movsxd r8,DWORD PTR [rax+0x10c]
   14000a8a7:	lea    r9,[rbp-0x70]
   14000a8ab:	lea    rdx,[rsp+0x64]
   14000a8b0:	lea    rcx,[rbp-0x30]
   14000a8b4:	call   0x14000a22c
   14000a8b9:	xor    r10d,r10d
   14000a8bc:	test   eax,eax
   14000a8be:	jns    0x14000a8cb
   14000a8c0:	mov    DWORD PTR [rsp+0x6c],r13d
   14000a8c5:	jmp    0x14000a8cb
   14000a8c7:	mov    WORD PTR [rbp-0x30],ax
   14000a8cb:	lea    rbx,[rbp-0x30]
   14000a8cf:	mov    r15d,r13d
   14000a8d2:	jmp    0x14000a754
   14000a8d7:	mov    DWORD PTR [rbp-0x78],0x1
   14000a8de:	add    r13w,r11w
   14000a8e2:	mov    ecx,0x67
   14000a8e7:	mov    eax,0x200
   14000a8ec:	or     r12d,0x40
   14000a8f0:	lea    rbx,[rbp-0x30]
   14000a8f4:	mov    esi,eax
   14000a8f6:	test   edi,edi
   14000a8f8:	jns    0x14000ab5a
   14000a8fe:	mov    r15d,0x6
   14000a904:	mov    DWORD PTR [rsp+0x48],r15d
   14000a909:	jmp    0x14000abab
   14000a90e:	cmp    eax,0x65
   14000a911:	jl     0x14000a74f
   14000a917:	mov    ecx,0x67
   14000a91c:	cmp    eax,ecx
   14000a91e:	jle    0x14000a8e7
   14000a920:	mov    ecx,0x69
   14000a925:	cmp    eax,ecx
   14000a927:	je     0x14000aa37
   14000a92d:	cmp    eax,0x6e
   14000a930:	je     0x14000a9fa
   14000a936:	mov    ecx,0x6f
   14000a93b:	cmp    eax,ecx
   14000a93d:	je     0x14000a9e5
   14000a943:	cmp    eax,0x70
   14000a946:	je     0x14000a9a9
   14000a948:	cmp    eax,0x73
   14000a94b:	je     0x14000a7fc
   14000a951:	mov    ecx,0x75
   14000a956:	cmp    eax,ecx
   14000a958:	je     0x14000aa3b
   14000a95e:	mov    ecx,0x78
   14000a963:	cmp    eax,ecx
   14000a965:	jne    0x14000ac60
   14000a96b:	lea    eax,[rcx-0x51]
   14000a96e:	jmp    0x14000a9b8
   14000a970:	test   rbx,rbx
   14000a973:	mov    r13d,0x1
   14000a979:	cmove  rbx,QWORD PTR [rip+0x8957]        # 0x1400132d8
   14000a981:	mov    DWORD PTR [rsp+0x44],r13d
   14000a986:	mov    rax,rbx
   14000a989:	jmp    0x14000a997
   14000a98b:	dec    edi
   14000a98d:	cmp    WORD PTR [rax],r10w
   14000a991:	je     0x14000a99b
   14000a993:	add    rax,0x2
   14000a997:	test   edi,edi
   14000a999:	jne    0x14000a98b
   14000a99b:	sub    rax,rbx
   14000a99e:	sar    rax,1
   14000a9a1:	mov    r15d,eax
   14000a9a4:	jmp    0x14000a754
   14000a9a9:	mov    edi,0x10
   14000a9ae:	bts    r12d,0xf
   14000a9b3:	mov    eax,0x7
   14000a9b8:	mov    r9d,0x10
   14000a9be:	mov    DWORD PTR [rsp+0x70],eax
   14000a9c2:	mov    esi,0x200
   14000a9c7:	lea    r13d,[r9+0x20]
   14000a9cb:	test   r12b,r12b
   14000a9ce:	jns    0x14000aa4c
   14000a9d0:	add    ax,0x51
   14000a9d4:	mov    WORD PTR [rsp+0x5c],r13w
   14000a9da:	lea    edx,[r9-0xe]
   14000a9de:	mov    WORD PTR [rsp+0x5e],ax
   14000a9e3:	jmp    0x14000aa50
   14000a9e5:	mov    r9d,0x8
   14000a9eb:	test   r12b,r12b
   14000a9ee:	jns    0x14000aa41
   14000a9f0:	mov    esi,0x200
   14000a9f5:	or     r12d,esi
   14000a9f8:	jmp    0x14000aa46
   14000a9fa:	mov    rdi,QWORD PTR [r14]
   14000a9fd:	add    r14,0x8
   14000aa01:	mov    QWORD PTR [rsp+0x50],r14
   14000aa06:	call   0x14000a214
   14000aa0b:	xor    r10d,r10d
   14000aa0e:	test   eax,eax
   14000aa10:	je     0x14000b096
   14000aa16:	mov    eax,DWORD PTR [rsp+0x40]
   14000aa1a:	lea    r11d,[r10+0x20]
   14000aa1e:	test   r11b,r12b
   14000aa21:	je     0x14000aa28
   14000aa23:	mov    WORD PTR [rdi],ax
   14000aa26:	jmp    0x14000aa2a
   14000aa28:	mov    DWORD PTR [rdi],eax
   14000aa2a:	mov    DWORD PTR [rsp+0x6c],0x1
   14000aa32:	jmp    0x14000adc7
   14000aa37:	or     r12d,0x40
   14000aa3b:	mov    r9d,0xa
   14000aa41:	mov    esi,0x200
   14000aa46:	mov    r13d,0x30
   14000aa4c:	mov    edx,DWORD PTR [rsp+0x4c]
   14000aa50:	mov    eax,0x8000
   14000aa55:	test   eax,r12d
   14000aa58:	je     0x14000aa63
   14000aa5a:	mov    r8,QWORD PTR [r14]
   14000aa5d:	add    r14,0x8
   14000aa61:	jmp    0x14000aa9c
   14000aa63:	bt     r12d,0xc
   14000aa68:	jb     0x14000aa5a
   14000aa6a:	add    r14,0x8
   14000aa6e:	test   r11b,r12b
   14000aa71:	je     0x14000aa8c
   14000aa73:	mov    QWORD PTR [rsp+0x50],r14
   14000aa78:	test   r12b,0x40
   14000aa7c:	je     0x14000aa85
   14000aa7e:	movsx  r8,WORD PTR [r14-0x8]
   14000aa83:	jmp    0x14000aaa1
   14000aa85:	movzx  r8d,WORD PTR [r14-0x8]
   14000aa8a:	jmp    0x14000aaa1
   14000aa8c:	test   r12b,0x40
   14000aa90:	je     0x14000aa98
   14000aa92:	movsxd r8,DWORD PTR [r14-0x8]
   14000aa96:	jmp    0x14000aa9c
   14000aa98:	mov    r8d,DWORD PTR [r14-0x8]
   14000aa9c:	mov    QWORD PTR [rsp+0x50],r14
   14000aaa1:	test   r12b,0x40
   14000aaa5:	je     0x14000aab4
   14000aaa7:	test   r8,r8
   14000aaaa:	jns    0x14000aab4
   14000aaac:	neg    r8
   14000aaaf:	bts    r12d,0x8
   14000aab4:	test   eax,r12d
   14000aab7:	jne    0x14000aac3
   14000aab9:	bt     r12d,0xc
   14000aabe:	jb     0x14000aac3
   14000aac0:	mov    r8d,r8d
   14000aac3:	test   edi,edi
   14000aac5:	jns    0x14000aace
   14000aac7:	mov    edi,0x1
   14000aacc:	jmp    0x14000aad7
   14000aace:	and    r12d,0xfffffff7
   14000aad2:	cmp    edi,esi
   14000aad4:	cmovg  edi,esi
   14000aad7:	mov    r14d,DWORD PTR [rsp+0x70]
   14000aadc:	mov    rax,r8
   14000aadf:	lea    rbx,[rbp+0x1cf]
   14000aae6:	neg    rax
   14000aae9:	sbb    ecx,ecx
   14000aaeb:	and    ecx,edx
   14000aaed:	mov    DWORD PTR [rsp+0x4c],ecx
   14000aaf1:	mov    ecx,edi
   14000aaf3:	dec    edi
   14000aaf5:	test   ecx,ecx
   14000aaf7:	jg     0x14000aafe
   14000aaf9:	test   r8,r8
   14000aafc:	je     0x14000ab1e
   14000aafe:	xor    edx,edx
   14000ab00:	mov    rax,r8
   14000ab03:	movsxd rcx,r9d
   14000ab06:	div    rcx
   14000ab09:	mov    r8,rax
   14000ab0c:	lea    eax,[rdx+0x30]
   14000ab0f:	cmp    eax,0x39
   14000ab12:	jle    0x14000ab17
   14000ab14:	add    eax,r14d
   14000ab17:	mov    BYTE PTR [rbx],al
   14000ab19:	dec    rbx
   14000ab1c:	jmp    0x14000aaf1
   14000ab1e:	mov    r14,QWORD PTR [rsp+0x50]
   14000ab23:	lea    rax,[rbp+0x1cf]
   14000ab2a:	mov    DWORD PTR [rsp+0x48],edi
   14000ab2e:	sub    eax,ebx
   14000ab30:	inc    rbx
   14000ab33:	mov    r15d,eax
   14000ab36:	test   esi,r12d
   14000ab39:	je     0x14000a74f
   14000ab3f:	test   eax,eax
   14000ab41:	je     0x14000ab4c
   14000ab43:	cmp    BYTE PTR [rbx],r13b
   14000ab46:	je     0x14000a74f
   14000ab4c:	dec    rbx
   14000ab4f:	inc    r15d
   14000ab52:	mov    BYTE PTR [rbx],r13b
   14000ab55:	jmp    0x14000a74f
   14000ab5a:	jne    0x14000ab6d
   14000ab5c:	cmp    r13w,cx
   14000ab60:	jne    0x14000aba1
   14000ab62:	mov    r15d,0x1
   14000ab68:	jmp    0x14000a904
   14000ab6d:	cmp    edi,eax
   14000ab6f:	mov    r15d,0xa3
   14000ab75:	cmovg  edi,eax
   14000ab78:	mov    DWORD PTR [rsp+0x48],edi
   14000ab7c:	cmp    edi,r15d
   14000ab7f:	jle    0x14000aba8
   14000ab81:	add    edi,0x15d
   14000ab87:	movsxd rcx,edi
   14000ab8a:	call   0x1400067e0
   14000ab8f:	mov    QWORD PTR [rbp-0x50],rax
   14000ab93:	test   rax,rax
   14000ab96:	je     0x14000a904
   14000ab9c:	mov    rbx,rax
   14000ab9f:	mov    esi,edi
   14000aba1:	mov    r15d,DWORD PTR [rsp+0x48]
   14000aba6:	jmp    0x14000abab
   14000aba8:	mov    r15d,edi
   14000abab:	mov    rax,QWORD PTR [r14]
   14000abae:	mov    rcx,QWORD PTR [rip+0x7c1b]        # 0x1400127d0
   14000abb5:	add    r14,0x8
   14000abb9:	mov    QWORD PTR [rsp+0x50],r14
   14000abbe:	movsx  edi,r13b
   14000abc2:	movsxd rsi,esi
   14000abc5:	mov    QWORD PTR [rbp-0x40],rax
   14000abc9:	call   QWORD PTR [rip+0x34e1]        # 0x14000e0b0
   14000abcf:	lea    rcx,[rbp-0x70]
   14000abd3:	mov    QWORD PTR [rsp+0x30],rcx
   14000abd8:	mov    ecx,DWORD PTR [rbp-0x78]
   14000abdb:	mov    r9d,edi
   14000abde:	mov    DWORD PTR [rsp+0x28],ecx
   14000abe2:	lea    rcx,[rbp-0x40]
   14000abe6:	mov    r8,rsi
   14000abe9:	mov    rdx,rbx
   14000abec:	mov    DWORD PTR [rsp+0x20],r15d
   14000abf1:	call   rax
   14000abf3:	mov    edi,r12d
   14000abf6:	and    edi,0x80
   14000abfc:	je     0x14000ac19
   14000abfe:	test   r15d,r15d
   14000ac01:	jne    0x14000ac19
   14000ac03:	mov    rcx,QWORD PTR [rip+0x7bde]        # 0x1400127e8
   14000ac0a:	call   QWORD PTR [rip+0x34a0]        # 0x14000e0b0
   14000ac10:	lea    rdx,[rbp-0x70]
   14000ac14:	mov    rcx,rbx
   14000ac17:	call   rax
   14000ac19:	mov    ecx,0x67
   14000ac1e:	cmp    r13w,cx
   14000ac22:	jne    0x14000ac3e
   14000ac24:	test   edi,edi
   14000ac26:	jne    0x14000ac3e
   14000ac28:	mov    rcx,QWORD PTR [rip+0x7bb1]        # 0x1400127e0
   14000ac2f:	call   QWORD PTR [rip+0x347b]        # 0x14000e0b0
   14000ac35:	lea    rdx,[rbp-0x70]
   14000ac39:	mov    rcx,rbx
   14000ac3c:	call   rax
   14000ac3e:	mov    edi,0x2d
   14000ac43:	cmp    BYTE PTR [rbx],dil
   14000ac46:	jne    0x14000ac50
   14000ac48:	bts    r12d,0x8
   14000ac4d:	inc    rbx
   14000ac50:	mov    rcx,rbx
   14000ac53:	call   0x1400084d0
   14000ac58:	xor    r10d,r10d
   14000ac5b:	mov    r15d,eax
   14000ac5e:	jmp    0x14000ac65
   14000ac60:	mov    edi,0x2d
   14000ac65:	mov    r13d,DWORD PTR [rsp+0x44]
   14000ac6a:	jmp    0x14000a759
   14000ac6f:	test   r12b,0x1
   14000ac73:	je     0x14000ac84
   14000ac75:	mov    eax,0x2b
   14000ac7a:	mov    WORD PTR [rsp+0x5c],ax
   14000ac7f:	jmp    0x14000a77e
   14000ac84:	test   r12b,0x2
   14000ac88:	je     0x14000ac9d
   14000ac8a:	mov    eax,0x20
   14000ac8f:	mov    WORD PTR [rsp+0x5c],ax
   14000ac94:	lea    edi,[rax-0x1f]
   14000ac97:	mov    DWORD PTR [rsp+0x4c],edi
   14000ac9b:	jmp    0x14000aca6
   14000ac9d:	mov    edi,DWORD PTR [rsp+0x4c]
   14000aca1:	mov    eax,0x20
   14000aca6:	mov    r14d,DWORD PTR [rsp+0x58]
   14000acab:	mov    rsi,QWORD PTR [rsp+0x78]
   14000acb0:	sub    r14d,r15d
   14000acb3:	sub    r14d,edi
   14000acb6:	test   r12b,0xc
   14000acba:	jne    0x14000acce
   14000acbc:	lea    r9,[rsp+0x40]
   14000acc1:	mov    ecx,eax
   14000acc3:	mov    r8,rsi
   14000acc6:	mov    edx,r14d
   14000acc9:	call   0x14000a474
   14000acce:	mov    rax,QWORD PTR [rbp-0x48]
   14000acd2:	lea    r9,[rsp+0x40]
   14000acd7:	lea    rcx,[rsp+0x5c]
   14000acdc:	mov    r8,rsi
   14000acdf:	mov    edx,edi
   14000ace1:	mov    QWORD PTR [rsp+0x20],rax
   14000ace6:	call   0x14000a4c8
   14000aceb:	test   r12b,0x8
   14000acef:	je     0x14000ad0c
   14000acf1:	test   r12b,0x4
   14000acf5:	jne    0x14000ad0c
   14000acf7:	lea    r9,[rsp+0x40]
   14000acfc:	mov    ecx,0x30
   14000ad01:	mov    r8,rsi
   14000ad04:	mov    edx,r14d
   14000ad07:	call   0x14000a474
   14000ad0c:	test   r13d,r13d
   14000ad0f:	jne    0x14000ad77
   14000ad11:	test   r15d,r15d
   14000ad14:	jle    0x14000ad77
   14000ad16:	mov    rdi,rbx
   14000ad19:	mov    esi,r15d
   14000ad1c:	mov    rax,QWORD PTR [rbp-0x70]
   14000ad20:	lea    r9,[rbp-0x70]
   14000ad24:	lea    rcx,[rsp+0x60]
   14000ad29:	movsxd r8,DWORD PTR [rax+0x10c]
   14000ad30:	mov    rdx,rdi
   14000ad33:	dec    esi
   14000ad35:	call   0x14000a22c
   14000ad3a:	xor    r10d,r10d
   14000ad3d:	movsxd r13,eax
   14000ad40:	test   eax,eax
   14000ad42:	jle    0x14000ad69
   14000ad44:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ad49:	movzx  ecx,WORD PTR [rsp+0x60]
   14000ad4e:	lea    r8,[rsp+0x40]
   14000ad53:	call   0x14000a43c
   14000ad58:	add    rdi,r13
   14000ad5b:	xor    r10d,r10d
   14000ad5e:	test   esi,esi
   14000ad60:	jg     0x14000ad1c
   14000ad62:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ad67:	jmp    0x14000ad96
   14000ad69:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ad6e:	or     edx,0xffffffff
   14000ad71:	mov    DWORD PTR [rsp+0x40],edx
   14000ad75:	jmp    0x14000ad9a
   14000ad77:	mov    rax,QWORD PTR [rbp-0x48]
   14000ad7b:	lea    r9,[rsp+0x40]
   14000ad80:	mov    r8,rsi
   14000ad83:	mov    edx,r15d
   14000ad86:	mov    rcx,rbx
   14000ad89:	mov    QWORD PTR [rsp+0x20],rax
   14000ad8e:	call   0x14000a4c8
   14000ad93:	xor    r10d,r10d
   14000ad96:	mov    edx,DWORD PTR [rsp+0x40]
   14000ad9a:	test   edx,edx
   14000ad9c:	js     0x14000adfd
   14000ad9e:	test   r12b,0x4
   14000ada2:	je     0x14000adfd
   14000ada4:	lea    r9,[rsp+0x40]
   14000ada9:	mov    ecx,0x20
   14000adae:	mov    r8,rsi
   14000adb1:	mov    edx,r14d
   14000adb4:	call   0x14000a474
   14000adb9:	mov    r14,QWORD PTR [rsp+0x50]
   14000adbe:	xor    r10d,r10d
   14000adc1:	mov    r11d,0x20
   14000adc7:	mov    edx,DWORD PTR [rsp+0x40]
   14000adcb:	mov    rax,QWORD PTR [rbp-0x50]
   14000adcf:	test   rax,rax
   14000add2:	je     0x14000b02b
   14000add8:	mov    rcx,rax
   14000addb:	call   0x140001eb4
   14000ade0:	mov    edi,DWORD PTR [rsp+0x48]
   14000ade4:	xor    r10d,r10d
   14000ade7:	mov    QWORD PTR [rbp-0x50],r10
   14000adeb:	or     esi,0xffffffff
   14000adee:	mov    edx,DWORD PTR [rsp+0x40]
   14000adf2:	mov    r11d,0x20
   14000adf8:	jmp    0x14000b032
   14000adfd:	mov    r14,QWORD PTR [rsp+0x50]
   14000ae02:	mov    r11d,0x20
   14000ae08:	jmp    0x14000adcb
   14000ae0a:	movzx  eax,r13w
   14000ae0e:	cmp    eax,0x49
   14000ae11:	je     0x14000ae63
   14000ae13:	cmp    eax,0x68
   14000ae16:	je     0x14000ae5b
   14000ae18:	mov    ecx,0x6c
   14000ae1d:	cmp    eax,ecx
   14000ae1f:	je     0x14000ae39
   14000ae21:	mov    ecx,0x58
   14000ae26:	cmp    eax,0x77
   14000ae29:	jne    0x14000b040
   14000ae2f:	bts    r12d,0xb
   14000ae34:	jmp    0x14000b040
   14000ae39:	cmp    WORD PTR [r8],cx
   14000ae3d:	mov    ecx,0x58
   14000ae42:	jne    0x14000ae52
   14000ae44:	add    r8,0x2
   14000ae48:	bts    r12d,0xc
   14000ae4d:	jmp    0x14000b040
   14000ae52:	or     r12d,0x10
   14000ae56:	jmp    0x14000b040
   14000ae5b:	or     r12d,r11d
   14000ae5e:	jmp    0x14000b03b
   14000ae63:	bts    r12d,0xf
   14000ae68:	cmp    WORD PTR [r8],0x36
   14000ae6d:	jne    0x14000ae85
   14000ae6f:	cmp    WORD PTR [r8+0x2],0x34
   14000ae75:	jne    0x14000ae85
   14000ae77:	add    r8,0x4
   14000ae7b:	bts    r12d,0xf
   14000ae80:	jmp    0x14000b03b
   14000ae85:	cmp    WORD PTR [r8],0x33
   14000ae8a:	jne    0x14000aea2
   14000ae8c:	cmp    WORD PTR [r8+0x2],0x32
   14000ae92:	jne    0x14000aea2
   14000ae94:	add    r8,0x4
   14000ae98:	btr    r12d,0xf
   14000ae9d:	jmp    0x14000b03b
   14000aea2:	mov    eax,0x64
   14000aea7:	cmp    WORD PTR [r8],ax
   14000aeab:	je     0x14000b03b
   14000aeb1:	mov    eax,0x69
   14000aeb6:	cmp    WORD PTR [r8],ax
   14000aeba:	je     0x14000b03b
   14000aec0:	mov    eax,0x6f
   14000aec5:	cmp    WORD PTR [r8],ax
   14000aec9:	je     0x14000b03b
   14000aecf:	mov    eax,0x75
   14000aed4:	lea    ecx,[rax-0x1d]
   14000aed7:	cmp    WORD PTR [r8],ax
   14000aedb:	je     0x14000b040
   14000aee1:	lea    eax,[rcx+0x20]
   14000aee4:	cmp    WORD PTR [r8],ax
   14000aee8:	je     0x14000b040
   14000aeee:	cmp    WORD PTR [r8],cx
   14000aef2:	je     0x14000b040
   14000aef8:	mov    DWORD PTR [rsp+0x68],r10d
   14000aefd:	mov    rdx,QWORD PTR [rsp+0x78]
   14000af02:	lea    r8,[rsp+0x40]
   14000af07:	movzx  ecx,r13w
   14000af0b:	mov    DWORD PTR [rsp+0x44],0x1
   14000af13:	call   0x14000a43c
   14000af18:	xor    r10d,r10d
   14000af1b:	jmp    0x14000adee
   14000af20:	cmp    r13w,0x2a
   14000af25:	jne    0x14000af4f
   14000af27:	mov    edi,DWORD PTR [r14]
   14000af2a:	add    r14,0x8
   14000af2e:	mov    ecx,0x58
   14000af33:	mov    QWORD PTR [rsp+0x50],r14
   14000af38:	mov    DWORD PTR [rsp+0x48],edi
   14000af3c:	test   edi,edi
   14000af3e:	jns    0x14000b040
   14000af44:	mov    edi,esi
   14000af46:	mov    DWORD PTR [rsp+0x48],esi
   14000af4a:	jmp    0x14000b040
   14000af4f:	lea    ecx,[rdi+rdi*4]
   14000af52:	movzx  eax,r13w
   14000af56:	lea    edi,[rax+rcx*2-0x30]
   14000af5a:	mov    DWORD PTR [rsp+0x48],edi
   14000af5e:	jmp    0x14000b03b
   14000af63:	mov    edi,r10d
   14000af66:	mov    DWORD PTR [rsp+0x48],r10d
   14000af6b:	jmp    0x14000b03b
   14000af70:	cmp    r13w,0x2a
   14000af75:	jne    0x14000afa3
   14000af77:	mov    eax,DWORD PTR [r14]
   14000af7a:	add    r14,0x8
   14000af7e:	mov    ecx,0x58
   14000af83:	mov    QWORD PTR [rsp+0x50],r14
   14000af88:	mov    DWORD PTR [rsp+0x58],eax
   14000af8c:	test   eax,eax
   14000af8e:	jns    0x14000b040
   14000af94:	or     r12d,0x4
   14000af98:	neg    eax
   14000af9a:	mov    DWORD PTR [rsp+0x58],eax
   14000af9e:	jmp    0x14000b040
   14000afa3:	mov    eax,DWORD PTR [rsp+0x58]
   14000afa7:	lea    ecx,[rax+rax*4]
   14000afaa:	movzx  eax,r13w
   14000afae:	lea    eax,[rax+rcx*2-0x30]
   14000afb2:	mov    DWORD PTR [rsp+0x58],eax
   14000afb6:	jmp    0x14000b03b
   14000afbb:	movzx  eax,r13w
   14000afbf:	cmp    eax,r11d
   14000afc2:	je     0x14000b002
   14000afc4:	cmp    eax,0x23
   14000afc7:	je     0x14000affb
   14000afc9:	mov    ecx,0x2b
   14000afce:	cmp    eax,ecx
   14000afd0:	je     0x14000aff5
   14000afd2:	mov    ecx,0x2d
   14000afd7:	cmp    eax,ecx
   14000afd9:	je     0x14000afef
   14000afdb:	mov    ecx,0x30
   14000afe0:	cmp    eax,ecx
   14000afe2:	mov    ecx,0x58
   14000afe7:	jne    0x14000b040
   14000afe9:	or     r12d,0x8
   14000afed:	jmp    0x14000b040
   14000afef:	or     r12d,0x4
   14000aff3:	jmp    0x14000b03b
   14000aff5:	or     r12d,0x1
   14000aff9:	jmp    0x14000b03b
   14000affb:	bts    r12d,0x7
   14000b000:	jmp    0x14000b03b
   14000b002:	or     r12d,0x2
   14000b006:	jmp    0x14000b03b
   14000b008:	mov    DWORD PTR [rbp-0x78],r10d
   14000b00c:	mov    DWORD PTR [rsp+0x6c],r10d
   14000b011:	mov    DWORD PTR [rsp+0x58],r10d
   14000b016:	mov    DWORD PTR [rsp+0x4c],r10d
   14000b01b:	mov    r12d,r10d
   14000b01e:	mov    edi,esi
   14000b020:	mov    DWORD PTR [rsp+0x48],esi
   14000b024:	mov    DWORD PTR [rsp+0x44],r10d
   14000b029:	jmp    0x14000b03b
   14000b02b:	mov    edi,DWORD PTR [rsp+0x48]
   14000b02f:	or     esi,0xffffffff
   14000b032:	mov    r9d,DWORD PTR [rsp+0x68]
   14000b037:	mov    r8,QWORD PTR [rbp-0x80]
   14000b03b:	mov    ecx,0x58
   14000b040:	movzx  r13d,WORD PTR [r8]
   14000b044:	test   r13w,r13w
   14000b048:	jne    0x14000a646
   14000b04e:	test   r9d,r9d
   14000b051:	je     0x14000b059
   14000b053:	cmp    r9d,0x7
   14000b057:	jne    0x14000b096
   14000b059:	cmp    BYTE PTR [rbp-0x58],r10b
   14000b05d:	je     0x14000b06a
   14000b05f:	mov    rcx,QWORD PTR [rbp-0x60]
   14000b063:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b06a:	mov    eax,edx
   14000b06c:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000b073:	xor    rcx,rsp
   14000b076:	call   0x140001980
   14000b07b:	mov    rbx,QWORD PTR [rsp+0x530]
   14000b083:	add    rsp,0x4e0
   14000b08a:	pop    r15
   14000b08c:	pop    r14
   14000b08e:	pop    r13
   14000b090:	pop    r12
   14000b092:	pop    rdi
   14000b093:	pop    rsi
   14000b094:	pop    rbp
   14000b095:	ret    
   14000b096:	call   0x140003564
   14000b09b:	mov    DWORD PTR [rax],0x16
   14000b0a1:	call   0x1400034fc
   14000b0a6:	xor    r11d,r11d
   14000b0a9:	cmp    BYTE PTR [rbp-0x58],r11b
   14000b0ad:	je     0x14000b0ba
   14000b0af:	mov    rax,QWORD PTR [rbp-0x60]
   14000b0b3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b0ba:	mov    eax,esi
   14000b0bc:	jmp    0x14000b06c
   14000b0be:	int3   
   14000b0bf:	int3   
   14000b0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0c5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0ca:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0cf:	push   rdi
   14000b0d0:	sub    rsp,0x20
   14000b0d4:	mov    rbx,rdx
   14000b0d7:	test   ecx,ecx
   14000b0d9:	js     0x14000b142
   14000b0db:	cmp    ecx,DWORD PTR [rip+0x953b]        # 0x14001461c
   14000b0e1:	jae    0x14000b142
   14000b0e3:	movsxd rdi,ecx
   14000b0e6:	lea    rbp,[rip+0x9533]        # 0x140014620
   14000b0ed:	mov    rsi,rdi
   14000b0f0:	and    edi,0x1f
   14000b0f3:	sar    rsi,0x5
   14000b0f7:	imul   rdi,rdi,0x58
   14000b0fb:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000b100:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14000b105:	jne    0x14000b142
   14000b107:	cmp    DWORD PTR [rip+0x6ef2],0x1        # 0x140012000
   14000b10e:	jne    0x14000b135
   14000b110:	test   ecx,ecx
   14000b112:	je     0x14000b12a
   14000b114:	dec    ecx
   14000b116:	je     0x14000b123
   14000b118:	dec    ecx
   14000b11a:	jne    0x14000b135
   14000b11c:	mov    ecx,0xfffffff4
   14000b121:	jmp    0x14000b12f
   14000b123:	mov    ecx,0xfffffff5
   14000b128:	jmp    0x14000b12f
   14000b12a:	mov    ecx,0xfffffff6
   14000b12f:	call   QWORD PTR [rip+0x3113]        # 0x14000e248
   14000b135:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000b13a:	mov    QWORD PTR [rdi+rax*1],rbx
   14000b13e:	xor    eax,eax
   14000b140:	jmp    0x14000b158
   14000b142:	call   0x140003564
   14000b147:	mov    DWORD PTR [rax],0x9
   14000b14d:	call   0x140003584
   14000b152:	and    DWORD PTR [rax],0x0
   14000b155:	or     eax,0xffffffff
   14000b158:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b15d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b162:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b167:	add    rsp,0x20
   14000b16b:	pop    rdi
   14000b16c:	ret    
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x8],rbx
   14000b175:	mov    QWORD PTR [rsp+0x10],rbp
   14000b17a:	push   rdi
   14000b17b:	sub    rsp,0x20
   14000b17f:	test   ecx,ecx
   14000b181:	js     0x14000b1f4
   14000b183:	cmp    ecx,DWORD PTR [rip+0x9493]        # 0x14001461c
   14000b189:	jae    0x14000b1f4
   14000b18b:	movsxd rbx,ecx
   14000b18e:	lea    rbp,[rip+0x948b]        # 0x140014620
   14000b195:	mov    rdi,rbx
   14000b198:	and    ebx,0x1f
   14000b19b:	sar    rdi,0x5
   14000b19f:	imul   rbx,rbx,0x58
   14000b1a3:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000b1a8:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000b1ad:	je     0x14000b1f4
   14000b1af:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000b1b4:	je     0x14000b1f4
   14000b1b6:	cmp    DWORD PTR [rip+0x6e43],0x1        # 0x140012000
   14000b1bd:	jne    0x14000b1e6
   14000b1bf:	test   ecx,ecx
   14000b1c1:	je     0x14000b1d9
   14000b1c3:	dec    ecx
   14000b1c5:	je     0x14000b1d2
   14000b1c7:	dec    ecx
   14000b1c9:	jne    0x14000b1e6
   14000b1cb:	mov    ecx,0xfffffff4
   14000b1d0:	jmp    0x14000b1de
   14000b1d2:	mov    ecx,0xfffffff5
   14000b1d7:	jmp    0x14000b1de
   14000b1d9:	mov    ecx,0xfffffff6
   14000b1de:	xor    edx,edx
   14000b1e0:	call   QWORD PTR [rip+0x3062]        # 0x14000e248
   14000b1e6:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000b1eb:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000b1f0:	xor    eax,eax
   14000b1f2:	jmp    0x14000b20a
   14000b1f4:	call   0x140003564
   14000b1f9:	mov    DWORD PTR [rax],0x9
   14000b1ff:	call   0x140003584
   14000b204:	and    DWORD PTR [rax],0x0
   14000b207:	or     eax,0xffffffff
   14000b20a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b20f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b214:	add    rsp,0x20
   14000b218:	pop    rdi
   14000b219:	ret    
   14000b21a:	int3   
   14000b21b:	int3   
   14000b21c:	sub    rsp,0x28
   14000b220:	cmp    ecx,0xfffffffe
   14000b223:	jne    0x14000b23a
   14000b225:	call   0x140003584
   14000b22a:	and    DWORD PTR [rax],0x0
   14000b22d:	call   0x140003564
   14000b232:	mov    DWORD PTR [rax],0x9
   14000b238:	jmp    0x14000b287
   14000b23a:	test   ecx,ecx
   14000b23c:	js     0x14000b26f
   14000b23e:	cmp    ecx,DWORD PTR [rip+0x93d8]        # 0x14001461c
   14000b244:	jae    0x14000b26f
   14000b246:	movsxd rdx,ecx
   14000b249:	lea    rcx,[rip+0x93d0]        # 0x140014620
   14000b250:	mov    rax,rdx
   14000b253:	and    edx,0x1f
   14000b256:	sar    rax,0x5
   14000b25a:	imul   rdx,rdx,0x58
   14000b25e:	mov    rax,QWORD PTR [rcx+rax*8]
   14000b262:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000b267:	je     0x14000b26f
   14000b269:	mov    rax,QWORD PTR [rax+rdx*1]
   14000b26d:	jmp    0x14000b28b
   14000b26f:	call   0x140003584
   14000b274:	and    DWORD PTR [rax],0x0
   14000b277:	call   0x140003564
   14000b27c:	mov    DWORD PTR [rax],0x9
   14000b282:	call   0x1400034fc
   14000b287:	or     rax,0xffffffffffffffff
   14000b28b:	add    rsp,0x28
   14000b28f:	ret    
   14000b290:	mov    rax,rsp
   14000b293:	mov    QWORD PTR [rax+0x8],rbx
   14000b297:	mov    QWORD PTR [rax+0x10],rsi
   14000b29b:	mov    QWORD PTR [rax+0x18],rdi
   14000b29f:	mov    QWORD PTR [rax+0x20],r12
   14000b2a3:	push   r14
   14000b2a5:	sub    rsp,0x20
   14000b2a9:	movsxd rbx,ecx
   14000b2ac:	mov    r12,rbx
   14000b2af:	sar    r12,0x5
   14000b2b3:	lea    r14,[rip+0x9366]        # 0x140014620
   14000b2ba:	and    ebx,0x1f
   14000b2bd:	imul   rbx,rbx,0x58
   14000b2c1:	mov    rsi,QWORD PTR [r14+r12*8]
   14000b2c5:	mov    edi,0x1
   14000b2ca:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000b2cf:	jne    0x14000b305
   14000b2d1:	lea    ecx,[rdi+0x9]
   14000b2d4:	call   0x140003870
   14000b2d9:	nop
   14000b2da:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000b2df:	jne    0x14000b2fb
   14000b2e1:	lea    rcx,[rbx+rsi*1+0x10]
   14000b2e6:	mov    edx,0xfa0
   14000b2eb:	call   QWORD PTR [rip+0x2e3f]        # 0x14000e130
   14000b2f1:	neg    eax
   14000b2f3:	sbb    edx,edx
   14000b2f5:	and    edi,edx
   14000b2f7:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14000b2fb:	mov    ecx,0xa
   14000b300:	call   0x140003770
   14000b305:	test   edi,edi
   14000b307:	je     0x14000b318
   14000b309:	mov    rcx,QWORD PTR [r14+r12*8]
   14000b30d:	lea    rcx,[rcx+rbx*1+0x10]
   14000b312:	call   QWORD PTR [rip+0x2e08]        # 0x14000e120
   14000b318:	mov    eax,edi
   14000b31a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b31f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b324:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b329:	mov    r12,QWORD PTR [rsp+0x48]
   14000b32e:	add    rsp,0x20
   14000b332:	pop    r14
   14000b334:	ret    
   14000b335:	int3   
   14000b336:	int3   
   14000b337:	int3   
   14000b338:	movsxd rdx,ecx
   14000b33b:	lea    rcx,[rip+0x92de]        # 0x140014620
   14000b342:	mov    rax,rdx
   14000b345:	and    edx,0x1f
   14000b348:	sar    rax,0x5
   14000b34c:	imul   rdx,rdx,0x58
   14000b350:	mov    rax,QWORD PTR [rcx+rax*8]
   14000b354:	lea    rcx,[rax+rdx*1+0x10]
   14000b359:	rex.W jmp QWORD PTR [rip+0x2dc8]        # 0x14000e128
   14000b360:	mov    QWORD PTR [rsp+0x8],rbx
   14000b365:	mov    QWORD PTR [rsp+0x10],rsi
   14000b36a:	mov    QWORD PTR [rsp+0x18],rdi
   14000b36f:	push   r12
   14000b371:	push   r13
   14000b373:	push   r14
   14000b375:	sub    rsp,0x40
   14000b379:	or     rsi,0xffffffffffffffff
   14000b37d:	mov    r12d,esi
   14000b380:	xor    r13d,r13d
   14000b383:	lea    ebx,[rsi+0xc]
   14000b386:	mov    ecx,ebx
   14000b388:	call   0x140003788
   14000b38d:	test   eax,eax
   14000b38f:	jne    0x14000b398
   14000b391:	mov    eax,esi
   14000b393:	jmp    0x14000b54e
   14000b398:	mov    ecx,ebx
   14000b39a:	call   0x140003870
   14000b39f:	nop
   14000b3a0:	xor    edi,edi
   14000b3a2:	lea    rax,[rip+0x9277]        # 0x140014620
   14000b3a9:	mov    DWORD PTR [rsp+0x24],edi
   14000b3ad:	cmp    edi,0x40
   14000b3b0:	jge    0x14000b541
   14000b3b6:	movsxd r14,edi
   14000b3b9:	mov    rbx,QWORD PTR [rax+r14*8]
   14000b3bd:	test   rbx,rbx
   14000b3c0:	je     0x14000b4b7
   14000b3c6:	mov    QWORD PTR [rsp+0x30],rbx
   14000b3cb:	mov    rax,QWORD PTR [rax+r14*8]
   14000b3cf:	add    rax,0xb00
   14000b3d5:	cmp    rbx,rax
   14000b3d8:	jae    0x14000b4a7
   14000b3de:	test   BYTE PTR [rbx+0x8],0x1
   14000b3e2:	jne    0x14000b493
   14000b3e8:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b3ec:	jne    0x14000b42a
   14000b3ee:	mov    ecx,0xa
   14000b3f3:	call   0x140003870
   14000b3f8:	nop
   14000b3f9:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b3fd:	jne    0x14000b420
   14000b3ff:	lea    rcx,[rbx+0x10]
   14000b403:	mov    edx,0xfa0
   14000b408:	call   QWORD PTR [rip+0x2d22]        # 0x14000e130
   14000b40e:	test   eax,eax
   14000b410:	jne    0x14000b41d
   14000b412:	lea    r13d,[rax+0x1]
   14000b416:	mov    DWORD PTR [rsp+0x28],r13d
   14000b41b:	jmp    0x14000b420
   14000b41d:	inc    DWORD PTR [rbx+0xc]
   14000b420:	mov    ecx,0xa
   14000b425:	call   0x140003770
   14000b42a:	test   r13d,r13d
   14000b42d:	jne    0x14000b493
   14000b42f:	lea    rcx,[rbx+0x10]
   14000b433:	call   QWORD PTR [rip+0x2ce7]        # 0x14000e120
   14000b439:	test   BYTE PTR [rbx+0x8],0x1
   14000b43d:	je     0x14000b44b
   14000b43f:	lea    rcx,[rbx+0x10]
   14000b443:	call   QWORD PTR [rip+0x2cdf]        # 0x14000e128
   14000b449:	jmp    0x14000b493
   14000b44b:	or     rsi,0xffffffffffffffff
   14000b44f:	test   r13d,r13d
   14000b452:	jne    0x14000b493
   14000b454:	mov    BYTE PTR [rbx+0x8],0x1
   14000b458:	mov    QWORD PTR [rbx],rsi
   14000b45b:	lea    r8,[rip+0x91be]        # 0x140014620
   14000b462:	sub    rbx,QWORD PTR [r8+r14*8]
   14000b466:	movabs rax,0x2e8ba2e8ba2e8ba3
   14000b470:	imul   rbx
   14000b473:	mov    r12,rdx
   14000b476:	sar    r12,0x4
   14000b47a:	mov    rax,r12
   14000b47d:	shr    rax,0x3f
   14000b481:	add    r12,rax
   14000b484:	mov    eax,edi
   14000b486:	shl    eax,0x5
   14000b489:	add    r12d,eax
   14000b48c:	mov    DWORD PTR [rsp+0x20],r12d
   14000b491:	jmp    0x14000b4a7
   14000b493:	add    rbx,0x58
   14000b497:	or     rsi,0xffffffffffffffff
   14000b49b:	lea    rax,[rip+0x917e]        # 0x140014620
   14000b4a2:	jmp    0x14000b3c6
   14000b4a7:	cmp    r12d,esi
   14000b4aa:	jne    0x14000b541
   14000b4b0:	inc    edi
   14000b4b2:	jmp    0x14000b3a2
   14000b4b7:	mov    edx,0x58
   14000b4bc:	lea    ecx,[rdx-0x38]
   14000b4bf:	call   0x140006860
   14000b4c4:	mov    QWORD PTR [rsp+0x30],rax
   14000b4c9:	test   rax,rax
   14000b4cc:	je     0x14000b541
   14000b4ce:	movsxd rdx,edi
   14000b4d1:	lea    r8,[rip+0x9148]        # 0x140014620
   14000b4d8:	mov    QWORD PTR [r8+rdx*8],rax
   14000b4dc:	add    DWORD PTR [rip+0x9139],0x20        # 0x14001461c
   14000b4e3:	mov    rcx,QWORD PTR [r8+rdx*8]
   14000b4e7:	add    rcx,0xb00
   14000b4ee:	cmp    rax,rcx
   14000b4f1:	jae    0x14000b50d
   14000b4f3:	mov    BYTE PTR [rax+0x8],0x0
   14000b4f7:	mov    QWORD PTR [rax],rsi
   14000b4fa:	mov    BYTE PTR [rax+0x9],0xa
   14000b4fe:	and    DWORD PTR [rax+0xc],0x0
   14000b502:	add    rax,0x58
   14000b506:	mov    QWORD PTR [rsp+0x30],rax
   14000b50b:	jmp    0x14000b4e3
   14000b50d:	shl    edi,0x5
   14000b510:	mov    DWORD PTR [rsp+0x20],edi
   14000b514:	movsxd rcx,edi
   14000b517:	mov    rax,rcx
   14000b51a:	sar    rax,0x5
   14000b51e:	and    ecx,0x1f
   14000b521:	imul   rcx,rcx,0x58
   14000b525:	mov    rax,QWORD PTR [r8+rax*8]
   14000b529:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14000b52e:	mov    ecx,edi
   14000b530:	call   0x14000b290
   14000b535:	test   eax,eax
   14000b537:	cmove  edi,esi
   14000b53a:	mov    r12d,edi
   14000b53d:	mov    DWORD PTR [rsp+0x20],edi
   14000b541:	mov    ecx,0xb
   14000b546:	call   0x140003770
   14000b54b:	mov    eax,r12d
   14000b54e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b553:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b558:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b55d:	add    rsp,0x40
   14000b561:	pop    r14
   14000b563:	pop    r13
   14000b565:	pop    r12
   14000b567:	ret    
   14000b568:	mov    QWORD PTR [rsp+0x18],rbx
   14000b56d:	mov    DWORD PTR [rsp+0x8],ecx
   14000b571:	push   rsi
   14000b572:	push   rdi
   14000b573:	push   r12
   14000b575:	sub    rsp,0x20
   14000b579:	movsxd rdi,ecx
   14000b57c:	cmp    edi,0xfffffffe
   14000b57f:	jne    0x14000b591
   14000b581:	call   0x140003564
   14000b586:	mov    DWORD PTR [rax],0x9
   14000b58c:	jmp    0x14000b62e
   14000b591:	test   ecx,ecx
   14000b593:	js     0x14000b61e
   14000b599:	cmp    edi,DWORD PTR [rip+0x907d]        # 0x14001461c
   14000b59f:	jae    0x14000b61e
   14000b5a1:	mov    rbx,rdi
   14000b5a4:	mov    rsi,rdi
   14000b5a7:	sar    rsi,0x5
   14000b5ab:	lea    r12,[rip+0x906e]        # 0x140014620
   14000b5b2:	and    ebx,0x1f
   14000b5b5:	imul   rbx,rbx,0x58
   14000b5b9:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b5bd:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000b5c2:	and    ecx,0x1
   14000b5c5:	je     0x14000b61e
   14000b5c7:	mov    ecx,edi
   14000b5c9:	call   0x14000b290
   14000b5ce:	nop
   14000b5cf:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b5d3:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000b5d8:	je     0x14000b605
   14000b5da:	mov    ecx,edi
   14000b5dc:	call   0x14000b21c
   14000b5e1:	mov    rcx,rax
   14000b5e4:	call   QWORD PTR [rip+0x2c66]        # 0x14000e250
   14000b5ea:	test   eax,eax
   14000b5ec:	jne    0x14000b5f8
   14000b5ee:	call   QWORD PTR [rip+0x2a84]        # 0x14000e078
   14000b5f4:	mov    ebx,eax
   14000b5f6:	jmp    0x14000b5fa
   14000b5f8:	xor    ebx,ebx
   14000b5fa:	test   ebx,ebx
   14000b5fc:	je     0x14000b613
   14000b5fe:	call   0x140003584
   14000b603:	mov    DWORD PTR [rax],ebx
   14000b605:	call   0x140003564
   14000b60a:	mov    DWORD PTR [rax],0x9
   14000b610:	or     ebx,0xffffffff
   14000b613:	mov    ecx,edi
   14000b615:	call   0x14000b338
   14000b61a:	mov    eax,ebx
   14000b61c:	jmp    0x14000b631
   14000b61e:	call   0x140003564
   14000b623:	mov    DWORD PTR [rax],0x9
   14000b629:	call   0x1400034fc
   14000b62e:	or     eax,0xffffffff
   14000b631:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b636:	add    rsp,0x20
   14000b63a:	pop    r12
   14000b63c:	pop    rdi
   14000b63d:	pop    rsi
   14000b63e:	ret    
   14000b63f:	int3   
   14000b640:	mov    QWORD PTR [rsp+0x8],rbx
   14000b645:	mov    QWORD PTR [rsp+0x10],rsi
   14000b64a:	push   rdi
   14000b64b:	sub    rsp,0x40
   14000b64f:	mov    ebx,edx
   14000b651:	mov    rdx,rcx
   14000b654:	lea    rcx,[rsp+0x20]
   14000b659:	mov    edi,r9d
   14000b65c:	mov    esi,r8d
   14000b65f:	call   0x140004978
   14000b664:	mov    rax,QWORD PTR [rsp+0x28]
   14000b669:	movzx  r11d,bl
   14000b66d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   14000b672:	jne    0x14000b693
   14000b674:	test   esi,esi
   14000b676:	je     0x14000b68d
   14000b678:	mov    rax,QWORD PTR [rsp+0x20]
   14000b67d:	mov    rcx,QWORD PTR [rax+0x140]
   14000b684:	movzx  eax,WORD PTR [rcx+r11*2]
   14000b689:	and    eax,esi
   14000b68b:	jmp    0x14000b68f
   14000b68d:	xor    eax,eax
   14000b68f:	test   eax,eax
   14000b691:	je     0x14000b698
   14000b693:	mov    eax,0x1
   14000b698:	cmp    BYTE PTR [rsp+0x38],0x0
   14000b69d:	je     0x14000b6ab
   14000b69f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b6a4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b6ab:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b6b0:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b6b5:	add    rsp,0x40
   14000b6b9:	pop    rdi
   14000b6ba:	ret    
   14000b6bb:	int3   
   14000b6bc:	mov    edx,ecx
   14000b6be:	mov    r9d,0x4
   14000b6c4:	xor    r8d,r8d
   14000b6c7:	xor    ecx,ecx
   14000b6c9:	jmp    0x14000b640
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	rex push rbx
   14000b6d2:	sub    rsp,0x20
   14000b6d6:	test   rcx,rcx
   14000b6d9:	je     0x14000b6e8
   14000b6db:	test   rdx,rdx
   14000b6de:	je     0x14000b6e8
   14000b6e0:	test   r8,r8
   14000b6e3:	jne    0x14000b701
   14000b6e5:	mov    BYTE PTR [rcx],r8b
   14000b6e8:	call   0x140003564
   14000b6ed:	mov    ebx,0x16
   14000b6f2:	mov    DWORD PTR [rax],ebx
   14000b6f4:	call   0x1400034fc
   14000b6f9:	mov    eax,ebx
   14000b6fb:	add    rsp,0x20
   14000b6ff:	pop    rbx
   14000b700:	ret    
   14000b701:	mov    r9,rcx
   14000b704:	sub    r9,r8
   14000b707:	mov    al,BYTE PTR [r8]
   14000b70a:	mov    BYTE PTR [r9+r8*1],al
   14000b70e:	inc    r8
   14000b711:	test   al,al
   14000b713:	je     0x14000b71a
   14000b715:	dec    rdx
   14000b718:	jne    0x14000b707
   14000b71a:	test   rdx,rdx
   14000b71d:	jne    0x14000b72d
   14000b71f:	mov    BYTE PTR [rcx],dl
   14000b721:	call   0x140003564
   14000b726:	mov    ebx,0x22
   14000b72b:	jmp    0x14000b6f2
   14000b72d:	xor    eax,eax
   14000b72f:	jmp    0x14000b6fb
   14000b731:	int3   
   14000b732:	int3   
   14000b733:	int3   
   14000b734:	mov    QWORD PTR [rsp+0x8],rbx
   14000b739:	mov    QWORD PTR [rsp+0x10],rsi
   14000b73e:	push   rdi
   14000b73f:	sub    rsp,0x20
   14000b743:	mov    rbx,rdx
   14000b746:	mov    rdi,rcx
   14000b749:	test   rcx,rcx
   14000b74c:	jne    0x14000b758
   14000b74e:	mov    rcx,rdx
   14000b751:	call   0x140001f38
   14000b756:	jmp    0x14000b7c2
   14000b758:	test   rdx,rdx
   14000b75b:	jne    0x14000b764
   14000b75d:	call   0x140001eb4
   14000b762:	jmp    0x14000b7c0
   14000b764:	cmp    rdx,0xffffffffffffffe0
   14000b768:	ja     0x14000b7ad
   14000b76a:	mov    rcx,QWORD PTR [rip+0x8ae7]        # 0x140014258
   14000b771:	mov    eax,0x1
   14000b776:	test   rbx,rbx
   14000b779:	cmove  rbx,rax
   14000b77d:	mov    r8,rdi
   14000b780:	xor    edx,edx
   14000b782:	mov    r9,rbx
   14000b785:	call   QWORD PTR [rip+0x2acd]        # 0x14000e258
   14000b78b:	mov    rsi,rax
   14000b78e:	test   rax,rax
   14000b791:	jne    0x14000b802
   14000b793:	cmp    DWORD PTR [rip+0x8ac7],eax        # 0x140014260
   14000b799:	je     0x14000b7eb
   14000b79b:	mov    rcx,rbx
   14000b79e:	call   0x140003b74
   14000b7a3:	test   eax,eax
   14000b7a5:	je     0x14000b7d2
   14000b7a7:	cmp    rbx,0xffffffffffffffe0
   14000b7ab:	jbe    0x14000b76a
   14000b7ad:	mov    rcx,rbx
   14000b7b0:	call   0x140003b74
   14000b7b5:	call   0x140003564
   14000b7ba:	mov    DWORD PTR [rax],0xc
   14000b7c0:	xor    eax,eax
   14000b7c2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b7c7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b7cc:	add    rsp,0x20
   14000b7d0:	pop    rdi
   14000b7d1:	ret    
   14000b7d2:	call   0x140003564
   14000b7d7:	mov    rbx,rax
   14000b7da:	call   QWORD PTR [rip+0x2898]        # 0x14000e078
   14000b7e0:	mov    ecx,eax
   14000b7e2:	call   0x14000351c
   14000b7e7:	mov    DWORD PTR [rbx],eax
   14000b7e9:	jmp    0x14000b7c0
   14000b7eb:	call   0x140003564
   14000b7f0:	mov    rbx,rax
   14000b7f3:	call   QWORD PTR [rip+0x287f]        # 0x14000e078
   14000b7f9:	mov    ecx,eax
   14000b7fb:	call   0x14000351c
   14000b800:	mov    DWORD PTR [rbx],eax
   14000b802:	mov    rax,rsi
   14000b805:	jmp    0x14000b7c2
   14000b807:	int3   
   14000b808:	mov    rax,rsp
   14000b80b:	mov    QWORD PTR [rax+0x8],rbx
   14000b80f:	mov    QWORD PTR [rax+0x10],rbp
   14000b813:	mov    QWORD PTR [rax+0x18],rsi
   14000b817:	mov    QWORD PTR [rax+0x20],rdi
   14000b81b:	push   r12
   14000b81d:	push   r13
   14000b81f:	push   r15
   14000b821:	sub    rsp,0x20
   14000b825:	mov    rbp,rdx
   14000b828:	xor    edi,edi
   14000b82a:	xor    edx,edx
   14000b82c:	lea    r8d,[rdi+0x1]
   14000b830:	mov    esi,ecx
   14000b832:	call   0x1400095a4
   14000b837:	mov    r13,rax
   14000b83a:	cmp    rax,0xffffffffffffffff
   14000b83e:	je     0x14000b890
   14000b840:	lea    r8d,[rdi+0x2]
   14000b844:	xor    edx,edx
   14000b846:	mov    ecx,esi
   14000b848:	call   0x1400095a4
   14000b84d:	cmp    rax,0xffffffffffffffff
   14000b851:	je     0x14000b890
   14000b853:	mov    rbx,rbp
   14000b856:	sub    rbx,rax
   14000b859:	test   rbx,rbx
   14000b85c:	jle    0x14000b923
   14000b862:	call   QWORD PTR [rip+0x2a00]        # 0x14000e268
   14000b868:	mov    r15d,0x1000
   14000b86e:	lea    edx,[rdi+0x8]
   14000b871:	mov    rcx,rax
   14000b874:	mov    r8d,r15d
   14000b877:	call   QWORD PTR [rip+0x2843]        # 0x14000e0c0
   14000b87d:	mov    rbp,rax
   14000b880:	test   rax,rax
   14000b883:	jne    0x14000b8b6
   14000b885:	call   0x140003564
   14000b88a:	mov    DWORD PTR [rax],0xc
   14000b890:	call   0x140003564
   14000b895:	mov    eax,DWORD PTR [rax]
   14000b897:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b89c:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b8a1:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b8a6:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b8ab:	add    rsp,0x20
   14000b8af:	pop    r15
   14000b8b1:	pop    r13
   14000b8b3:	pop    r12
   14000b8b5:	ret    
   14000b8b6:	mov    edx,0x8000
   14000b8bb:	mov    ecx,esi
   14000b8bd:	call   0x14000b9a0
   14000b8c2:	mov    r12d,eax
   14000b8c5:	mov    r8d,ebx
   14000b8c8:	cmp    rbx,r15
   14000b8cb:	mov    rdx,rbp
   14000b8ce:	cmovge r8d,r15d
   14000b8d2:	mov    ecx,esi
   14000b8d4:	call   0x140009720
   14000b8d9:	cmp    eax,0xffffffff
   14000b8dc:	je     0x14000b8ea
   14000b8de:	cdqe   
   14000b8e0:	sub    rbx,rax
   14000b8e3:	test   rbx,rbx
   14000b8e6:	jle    0x14000b903
   14000b8e8:	jmp    0x14000b8c5
   14000b8ea:	call   0x140003584
   14000b8ef:	cmp    DWORD PTR [rax],0x5
   14000b8f2:	jne    0x14000b8ff
   14000b8f4:	call   0x140003564
   14000b8f9:	mov    DWORD PTR [rax],0xd
   14000b8ff:	or     rdi,0xffffffffffffffff
   14000b903:	mov    edx,r12d
   14000b906:	mov    ecx,esi
   14000b908:	call   0x14000b9a0
   14000b90d:	call   QWORD PTR [rip+0x2955]        # 0x14000e268
   14000b913:	mov    r8,rbp
   14000b916:	mov    rcx,rax
   14000b919:	xor    edx,edx
   14000b91b:	call   QWORD PTR [rip+0x2797]        # 0x14000e0b8
   14000b921:	jmp    0x14000b978
   14000b923:	jns    0x14000b982
   14000b925:	xor    r8d,r8d
   14000b928:	mov    rdx,rbp
   14000b92b:	mov    ecx,esi
   14000b92d:	call   0x1400095a4
   14000b932:	cmp    rax,0xffffffffffffffff
   14000b936:	je     0x14000b890
   14000b93c:	mov    ecx,esi
   14000b93e:	call   0x14000b21c
   14000b943:	mov    rcx,rax
   14000b946:	call   QWORD PTR [rip+0x2914]        # 0x14000e260
   14000b94c:	neg    eax
   14000b94e:	sbb    rdi,rdi
   14000b951:	neg    rdi
   14000b954:	dec    rdi
   14000b957:	cmp    rdi,0xffffffffffffffff
   14000b95b:	jne    0x14000b982
   14000b95d:	call   0x140003564
   14000b962:	mov    DWORD PTR [rax],0xd
   14000b968:	call   0x140003584
   14000b96d:	mov    rbx,rax
   14000b970:	call   QWORD PTR [rip+0x2702]        # 0x14000e078
   14000b976:	mov    DWORD PTR [rbx],eax
   14000b978:	cmp    rdi,0xffffffffffffffff
   14000b97c:	je     0x14000b890
   14000b982:	xor    r8d,r8d
   14000b985:	mov    rdx,r13
   14000b988:	mov    ecx,esi
   14000b98a:	call   0x1400095a4
   14000b98f:	cmp    rax,0xffffffffffffffff
   14000b993:	je     0x14000b890
   14000b999:	xor    eax,eax
   14000b99b:	jmp    0x14000b897
   14000b9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9a5:	movsxd r8,ecx
   14000b9a8:	lea    rbx,[rip+0x8c71]        # 0x140014620
   14000b9af:	mov    r9,r8
   14000b9b2:	and    r8d,0x1f
   14000b9b6:	sar    r9,0x5
   14000b9ba:	imul   r8,r8,0x58
   14000b9be:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000b9c2:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14000b9c7:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   14000b9cd:	add    al,al
   14000b9cf:	and    r11d,0x80
   14000b9d6:	movsx  r10d,al
   14000b9da:	sar    r10d,1
   14000b9dd:	cmp    edx,0x4000
   14000b9e3:	je     0x14000ba3d
   14000b9e5:	cmp    edx,0x8000
   14000b9eb:	je     0x14000ba35
   14000b9ed:	cmp    edx,0x10000
   14000b9f3:	je     0x14000ba1d
   14000b9f5:	cmp    edx,0x20000
   14000b9fb:	je     0x14000ba1d
   14000b9fd:	cmp    edx,0x40000
   14000ba03:	jne    0x14000ba4d
   14000ba05:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba0b:	mov    rax,QWORD PTR [rbx+r9*8]
   14000ba0f:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14000ba15:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14000ba1b:	jmp    0x14000ba4d
   14000ba1d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba23:	mov    rax,QWORD PTR [rbx+r9*8]
   14000ba27:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14000ba2d:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14000ba33:	jmp    0x14000ba4d
   14000ba35:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14000ba3b:	jmp    0x14000ba4d
   14000ba3d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba43:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000ba47:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14000ba4d:	test   r11d,r11d
   14000ba50:	jne    0x14000ba59
   14000ba52:	mov    eax,0x8000
   14000ba57:	jmp    0x14000ba68
   14000ba59:	neg    r10d
   14000ba5c:	sbb    eax,eax
   14000ba5e:	and    eax,0xc000
   14000ba63:	add    eax,0x4000
   14000ba68:	mov    rbx,QWORD PTR [rsp+0x8]
   14000ba6d:	ret    
   14000ba6e:	int3   
   14000ba6f:	int3   
   14000ba70:	sub    rsp,0x28
   14000ba74:	test   rcx,rcx
   14000ba77:	jne    0x14000ba90
   14000ba79:	call   0x140003564
   14000ba7e:	mov    DWORD PTR [rax],0x16
   14000ba84:	call   0x1400034fc
   14000ba89:	mov    eax,0x16
   14000ba8e:	jmp    0x14000ba9a
   14000ba90:	mov    eax,DWORD PTR [rip+0x895a]        # 0x1400143f0
   14000ba96:	mov    DWORD PTR [rcx],eax
   14000ba98:	xor    eax,eax
   14000ba9a:	add    rsp,0x28
   14000ba9e:	ret    
   14000ba9f:	int3   
   14000baa0:	mov    QWORD PTR [rsp+0x10],rbx
   14000baa5:	mov    WORD PTR [rsp+0x8],cx
   14000baaa:	push   rbp
   14000baab:	mov    rbp,rsp
   14000baae:	sub    rsp,0x50
   14000bab2:	mov    eax,0xffff
   14000bab7:	cmp    cx,ax
   14000baba:	je     0x14000bb6a
   14000bac0:	lea    rcx,[rbp-0x20]
   14000bac4:	call   0x140004978
   14000bac9:	mov    rbx,QWORD PTR [rbp-0x20]
   14000bacd:	cmp    DWORD PTR [rbx+0x14],0x0
   14000bad1:	jne    0x14000bafa
   14000bad3:	movzx  edx,WORD PTR [rbp+0x10]
   14000bad7:	lea    eax,[rdx-0x41]
   14000bada:	cmp    ax,0x19
   14000bade:	ja     0x14000bae4
   14000bae0:	add    dx,0x20
   14000bae4:	cmp    BYTE PTR [rbp-0x8],0x0
   14000bae8:	je     0x14000baf5
   14000baea:	mov    rcx,QWORD PTR [rbp-0x10]
   14000baee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000baf5:	movzx  eax,dx
   14000baf8:	jmp    0x14000bb6a
   14000bafa:	movzx  ecx,WORD PTR [rbp+0x10]
   14000bafe:	mov    edx,0x100
   14000bb03:	cmp    cx,dx
   14000bb06:	jae    0x14000bb2d
   14000bb08:	mov    edx,0x1
   14000bb0d:	call   0x140002330
   14000bb12:	test   eax,eax
   14000bb14:	jne    0x14000bb1c
   14000bb16:	movzx  eax,WORD PTR [rbp+0x10]
   14000bb1a:	jmp    0x14000bb59
   14000bb1c:	movzx  ecx,WORD PTR [rbp+0x10]
   14000bb20:	mov    rax,QWORD PTR [rbx+0x148]
   14000bb27:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000bb2b:	jmp    0x14000bb59
   14000bb2d:	mov    ecx,DWORD PTR [rbx+0x14]
   14000bb30:	lea    rax,[rbp+0x20]
   14000bb34:	mov    r9d,0x1
   14000bb3a:	mov    DWORD PTR [rsp+0x28],r9d
   14000bb3f:	lea    r8,[rbp+0x10]
   14000bb43:	mov    QWORD PTR [rsp+0x20],rax
   14000bb48:	call   0x14000ca50
   14000bb4d:	test   eax,eax
   14000bb4f:	movzx  eax,WORD PTR [rbp+0x10]
   14000bb53:	je     0x14000bb59
   14000bb55:	movzx  eax,WORD PTR [rbp+0x20]
   14000bb59:	cmp    BYTE PTR [rbp-0x8],0x0
   14000bb5d:	je     0x14000bb6a
   14000bb5f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000bb63:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000bb6a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000bb6f:	add    rsp,0x50
   14000bb73:	pop    rbp
   14000bb74:	ret    
   14000bb75:	int3   
   14000bb76:	int3   
   14000bb77:	int3   
   14000bb78:	int3   
   14000bb79:	int3   
   14000bb7a:	int3   
   14000bb7b:	int3   
   14000bb7c:	int3   
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	int3   
   14000bb81:	int3   
   14000bb82:	int3   
   14000bb83:	int3   
   14000bb84:	int3   
   14000bb85:	int3   
   14000bb86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bb90:	sub    rsp,0x10
   14000bb94:	mov    QWORD PTR [rsp],r10
   14000bb98:	mov    QWORD PTR [rsp+0x8],r11
   14000bb9d:	xor    r11,r11
   14000bba0:	lea    r10,[rsp+0x18]
   14000bba5:	sub    r10,rax
   14000bba8:	cmovb  r10,r11
   14000bbac:	mov    r11,QWORD PTR gs:0x10
   14000bbb5:	cmp    r10,r11
   14000bbb8:	jae    0x14000bbd0
   14000bbba:	and    r10w,0xf000
   14000bbc0:	lea    r11,[r11-0x1000]
   14000bbc7:	mov    BYTE PTR [r11],0x0
   14000bbcb:	cmp    r10,r11
   14000bbce:	jne    0x14000bbc0
   14000bbd0:	mov    r10,QWORD PTR [rsp]
   14000bbd4:	mov    r11,QWORD PTR [rsp+0x8]
   14000bbd9:	add    rsp,0x10
   14000bbdd:	ret    
   14000bbde:	int3   
   14000bbdf:	int3   
   14000bbe0:	test   rcx,rcx
   14000bbe3:	je     0x14000bfcd
   14000bbe9:	push   rbx
   14000bbea:	sub    rsp,0x20
   14000bbee:	mov    rbx,rcx
   14000bbf1:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bbf5:	call   0x140001eb4
   14000bbfa:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bbfe:	call   0x140001eb4
   14000bc03:	mov    rcx,QWORD PTR [rbx+0x18]
   14000bc07:	call   0x140001eb4
   14000bc0c:	mov    rcx,QWORD PTR [rbx+0x20]
   14000bc10:	call   0x140001eb4
   14000bc15:	mov    rcx,QWORD PTR [rbx+0x28]
   14000bc19:	call   0x140001eb4
   14000bc1e:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bc22:	call   0x140001eb4
   14000bc27:	mov    rcx,QWORD PTR [rbx]
   14000bc2a:	call   0x140001eb4
   14000bc2f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000bc33:	call   0x140001eb4
   14000bc38:	mov    rcx,QWORD PTR [rbx+0x48]
   14000bc3c:	call   0x140001eb4
   14000bc41:	mov    rcx,QWORD PTR [rbx+0x50]
   14000bc45:	call   0x140001eb4
   14000bc4a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000bc4e:	call   0x140001eb4
   14000bc53:	mov    rcx,QWORD PTR [rbx+0x60]
   14000bc57:	call   0x140001eb4
   14000bc5c:	mov    rcx,QWORD PTR [rbx+0x68]
   14000bc60:	call   0x140001eb4
   14000bc65:	mov    rcx,QWORD PTR [rbx+0x38]
   14000bc69:	call   0x140001eb4
   14000bc6e:	mov    rcx,QWORD PTR [rbx+0x70]
   14000bc72:	call   0x140001eb4
   14000bc77:	mov    rcx,QWORD PTR [rbx+0x78]
   14000bc7b:	call   0x140001eb4
   14000bc80:	mov    rcx,QWORD PTR [rbx+0x80]
   14000bc87:	call   0x140001eb4
   14000bc8c:	mov    rcx,QWORD PTR [rbx+0x88]
   14000bc93:	call   0x140001eb4
   14000bc98:	mov    rcx,QWORD PTR [rbx+0x90]
   14000bc9f:	call   0x140001eb4
   14000bca4:	mov    rcx,QWORD PTR [rbx+0x98]
   14000bcab:	call   0x140001eb4
   14000bcb0:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000bcb7:	call   0x140001eb4
   14000bcbc:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000bcc3:	call   0x140001eb4
   14000bcc8:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000bccf:	call   0x140001eb4
   14000bcd4:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000bcdb:	call   0x140001eb4
   14000bce0:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000bce7:	call   0x140001eb4
   14000bcec:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000bcf3:	call   0x140001eb4
   14000bcf8:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000bcff:	call   0x140001eb4
   14000bd04:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000bd0b:	call   0x140001eb4
   14000bd10:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000bd17:	call   0x140001eb4
   14000bd1c:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000bd23:	call   0x140001eb4
   14000bd28:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000bd2f:	call   0x140001eb4
   14000bd34:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000bd3b:	call   0x140001eb4
   14000bd40:	mov    rcx,QWORD PTR [rbx+0x100]
   14000bd47:	call   0x140001eb4
   14000bd4c:	mov    rcx,QWORD PTR [rbx+0x108]
   14000bd53:	call   0x140001eb4
   14000bd58:	mov    rcx,QWORD PTR [rbx+0x110]
   14000bd5f:	call   0x140001eb4
   14000bd64:	mov    rcx,QWORD PTR [rbx+0x118]
   14000bd6b:	call   0x140001eb4
   14000bd70:	mov    rcx,QWORD PTR [rbx+0x120]
   14000bd77:	call   0x140001eb4
   14000bd7c:	mov    rcx,QWORD PTR [rbx+0x128]
   14000bd83:	call   0x140001eb4
   14000bd88:	mov    rcx,QWORD PTR [rbx+0x130]
   14000bd8f:	call   0x140001eb4
   14000bd94:	mov    rcx,QWORD PTR [rbx+0x138]
   14000bd9b:	call   0x140001eb4
   14000bda0:	mov    rcx,QWORD PTR [rbx+0x140]
   14000bda7:	call   0x140001eb4
   14000bdac:	mov    rcx,QWORD PTR [rbx+0x148]
   14000bdb3:	call   0x140001eb4
   14000bdb8:	mov    rcx,QWORD PTR [rbx+0x150]
   14000bdbf:	call   0x140001eb4
   14000bdc4:	mov    rcx,QWORD PTR [rbx+0x170]
   14000bdcb:	call   0x140001eb4
   14000bdd0:	mov    rcx,QWORD PTR [rbx+0x178]
   14000bdd7:	call   0x140001eb4
   14000bddc:	mov    rcx,QWORD PTR [rbx+0x180]
   14000bde3:	call   0x140001eb4
   14000bde8:	mov    rcx,QWORD PTR [rbx+0x188]
   14000bdef:	call   0x140001eb4
   14000bdf4:	mov    rcx,QWORD PTR [rbx+0x190]
   14000bdfb:	call   0x140001eb4
   14000be00:	mov    rcx,QWORD PTR [rbx+0x198]
   14000be07:	call   0x140001eb4
   14000be0c:	mov    rcx,QWORD PTR [rbx+0x168]
   14000be13:	call   0x140001eb4
   14000be18:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000be1f:	call   0x140001eb4
   14000be24:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000be2b:	call   0x140001eb4
   14000be30:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000be37:	call   0x140001eb4
   14000be3c:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000be43:	call   0x140001eb4
   14000be48:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000be4f:	call   0x140001eb4
   14000be54:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000be5b:	call   0x140001eb4
   14000be60:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000be67:	call   0x140001eb4
   14000be6c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000be73:	call   0x140001eb4
   14000be78:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000be7f:	call   0x140001eb4
   14000be84:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000be8b:	call   0x140001eb4
   14000be90:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000be97:	call   0x140001eb4
   14000be9c:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000bea3:	call   0x140001eb4
   14000bea8:	mov    rcx,QWORD PTR [rbx+0x200]
   14000beaf:	call   0x140001eb4
   14000beb4:	mov    rcx,QWORD PTR [rbx+0x208]
   14000bebb:	call   0x140001eb4
   14000bec0:	mov    rcx,QWORD PTR [rbx+0x210]
   14000bec7:	call   0x140001eb4
   14000becc:	mov    rcx,QWORD PTR [rbx+0x218]
   14000bed3:	call   0x140001eb4
   14000bed8:	mov    rcx,QWORD PTR [rbx+0x220]
   14000bedf:	call   0x140001eb4
   14000bee4:	mov    rcx,QWORD PTR [rbx+0x228]
   14000beeb:	call   0x140001eb4
   14000bef0:	mov    rcx,QWORD PTR [rbx+0x230]
   14000bef7:	call   0x140001eb4
   14000befc:	mov    rcx,QWORD PTR [rbx+0x238]
   14000bf03:	call   0x140001eb4
   14000bf08:	mov    rcx,QWORD PTR [rbx+0x240]
   14000bf0f:	call   0x140001eb4
   14000bf14:	mov    rcx,QWORD PTR [rbx+0x248]
   14000bf1b:	call   0x140001eb4
   14000bf20:	mov    rcx,QWORD PTR [rbx+0x250]
   14000bf27:	call   0x140001eb4
   14000bf2c:	mov    rcx,QWORD PTR [rbx+0x258]
   14000bf33:	call   0x140001eb4
   14000bf38:	mov    rcx,QWORD PTR [rbx+0x260]
   14000bf3f:	call   0x140001eb4
   14000bf44:	mov    rcx,QWORD PTR [rbx+0x268]
   14000bf4b:	call   0x140001eb4
   14000bf50:	mov    rcx,QWORD PTR [rbx+0x270]
   14000bf57:	call   0x140001eb4
   14000bf5c:	mov    rcx,QWORD PTR [rbx+0x278]
   14000bf63:	call   0x140001eb4
   14000bf68:	mov    rcx,QWORD PTR [rbx+0x280]
   14000bf6f:	call   0x140001eb4
   14000bf74:	mov    rcx,QWORD PTR [rbx+0x288]
   14000bf7b:	call   0x140001eb4
   14000bf80:	mov    rcx,QWORD PTR [rbx+0x290]
   14000bf87:	call   0x140001eb4
   14000bf8c:	mov    rcx,QWORD PTR [rbx+0x298]
   14000bf93:	call   0x140001eb4
   14000bf98:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000bf9f:	call   0x140001eb4
   14000bfa4:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000bfab:	call   0x140001eb4
   14000bfb0:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000bfb7:	call   0x140001eb4
   14000bfbc:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000bfc3:	call   0x140001eb4
   14000bfc8:	add    rsp,0x20
   14000bfcc:	pop    rbx
   14000bfcd:	ret    
   14000bfce:	int3   
   14000bfcf:	int3   
   14000bfd0:	test   rcx,rcx
   14000bfd3:	je     0x14000c03b
   14000bfd5:	push   rbx
   14000bfd6:	sub    rsp,0x20
   14000bfda:	mov    rbx,rcx
   14000bfdd:	mov    rcx,QWORD PTR [rcx]
   14000bfe0:	cmp    rcx,QWORD PTR [rip+0x7319]        # 0x140013300
   14000bfe7:	je     0x14000bfee
   14000bfe9:	call   0x140001eb4
   14000bfee:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bff2:	cmp    rcx,QWORD PTR [rip+0x730f]        # 0x140013308
   14000bff9:	je     0x14000c000
   14000bffb:	call   0x140001eb4
   14000c000:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c004:	cmp    rcx,QWORD PTR [rip+0x7305]        # 0x140013310
   14000c00b:	je     0x14000c012
   14000c00d:	call   0x140001eb4
   14000c012:	mov    rcx,QWORD PTR [rbx+0x58]
   14000c016:	cmp    rcx,QWORD PTR [rip+0x733b]        # 0x140013358
   14000c01d:	je     0x14000c024
   14000c01f:	call   0x140001eb4
   14000c024:	mov    rcx,QWORD PTR [rbx+0x60]
   14000c028:	cmp    rcx,QWORD PTR [rip+0x7331]        # 0x140013360
   14000c02f:	je     0x14000c036
   14000c031:	call   0x140001eb4
   14000c036:	add    rsp,0x20
   14000c03a:	pop    rbx
   14000c03b:	ret    
   14000c03c:	test   rcx,rcx
   14000c03f:	je     0x14000c145
   14000c045:	push   rbx
   14000c046:	sub    rsp,0x20
   14000c04a:	mov    rbx,rcx
   14000c04d:	mov    rcx,QWORD PTR [rcx+0x18]
   14000c051:	cmp    rcx,QWORD PTR [rip+0x72c0]        # 0x140013318
   14000c058:	je     0x14000c05f
   14000c05a:	call   0x140001eb4
   14000c05f:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c063:	cmp    rcx,QWORD PTR [rip+0x72b6]        # 0x140013320
   14000c06a:	je     0x14000c071
   14000c06c:	call   0x140001eb4
   14000c071:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c075:	cmp    rcx,QWORD PTR [rip+0x72ac]        # 0x140013328
   14000c07c:	je     0x14000c083
   14000c07e:	call   0x140001eb4
   14000c083:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c087:	cmp    rcx,QWORD PTR [rip+0x72a2]        # 0x140013330
   14000c08e:	je     0x14000c095
   14000c090:	call   0x140001eb4
   14000c095:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c099:	cmp    rcx,QWORD PTR [rip+0x7298]        # 0x140013338
   14000c0a0:	je     0x14000c0a7
   14000c0a2:	call   0x140001eb4
   14000c0a7:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c0ab:	cmp    rcx,QWORD PTR [rip+0x728e]        # 0x140013340
   14000c0b2:	je     0x14000c0b9
   14000c0b4:	call   0x140001eb4
   14000c0b9:	mov    rcx,QWORD PTR [rbx+0x48]
   14000c0bd:	cmp    rcx,QWORD PTR [rip+0x7284]        # 0x140013348
   14000c0c4:	je     0x14000c0cb
   14000c0c6:	call   0x140001eb4
   14000c0cb:	mov    rcx,QWORD PTR [rbx+0x68]
   14000c0cf:	cmp    rcx,QWORD PTR [rip+0x7292]        # 0x140013368
   14000c0d6:	je     0x14000c0dd
   14000c0d8:	call   0x140001eb4
   14000c0dd:	mov    rcx,QWORD PTR [rbx+0x70]
   14000c0e1:	cmp    rcx,QWORD PTR [rip+0x7288]        # 0x140013370
   14000c0e8:	je     0x14000c0ef
   14000c0ea:	call   0x140001eb4
   14000c0ef:	mov    rcx,QWORD PTR [rbx+0x78]
   14000c0f3:	cmp    rcx,QWORD PTR [rip+0x727e]        # 0x140013378
   14000c0fa:	je     0x14000c101
   14000c0fc:	call   0x140001eb4
   14000c101:	mov    rcx,QWORD PTR [rbx+0x80]
   14000c108:	cmp    rcx,QWORD PTR [rip+0x7271]        # 0x140013380
   14000c10f:	je     0x14000c116
   14000c111:	call   0x140001eb4
   14000c116:	mov    rcx,QWORD PTR [rbx+0x88]
   14000c11d:	cmp    rcx,QWORD PTR [rip+0x7264]        # 0x140013388
   14000c124:	je     0x14000c12b
   14000c126:	call   0x140001eb4
   14000c12b:	mov    rcx,QWORD PTR [rbx+0x90]
   14000c132:	cmp    rcx,QWORD PTR [rip+0x7257]        # 0x140013390
   14000c139:	je     0x14000c140
   14000c13b:	call   0x140001eb4
   14000c140:	add    rsp,0x20
   14000c144:	pop    rbx
   14000c145:	ret    
   14000c146:	int3   
   14000c147:	int3   
   14000c148:	rex push rbp
   14000c14a:	push   r12
   14000c14c:	push   r13
   14000c14e:	push   r14
   14000c150:	push   r15
   14000c152:	sub    rsp,0x50
   14000c156:	lea    rbp,[rsp+0x40]
   14000c15b:	mov    QWORD PTR [rbp+0x40],rbx
   14000c15f:	mov    QWORD PTR [rbp+0x48],rsi
   14000c163:	mov    QWORD PTR [rbp+0x50],rdi
   14000c167:	mov    rax,QWORD PTR [rip+0x5e9a]        # 0x140012008
   14000c16e:	xor    rax,rbp
   14000c171:	mov    QWORD PTR [rbp+0x8],rax
   14000c175:	mov    ebx,DWORD PTR [rbp+0x60]
   14000c178:	xor    edi,edi
   14000c17a:	mov    r14,r9
   14000c17d:	mov    r15d,r8d
   14000c180:	mov    DWORD PTR [rbp+0x0],edx
   14000c183:	test   ebx,ebx
   14000c185:	jle    0x14000c1b1
   14000c187:	mov    r10d,ebx
   14000c18a:	mov    rax,r9
   14000c18d:	dec    r10d
   14000c190:	cmp    BYTE PTR [rax],dil
   14000c193:	je     0x14000c1a1
   14000c195:	inc    rax
   14000c198:	test   r10d,r10d
   14000c19b:	jne    0x14000c18d
   14000c19d:	or     r10d,0xffffffff
   14000c1a1:	mov    eax,ebx
   14000c1a3:	sub    eax,r10d
   14000c1a6:	dec    eax
   14000c1a8:	cmp    eax,ebx
   14000c1aa:	lea    ebx,[rax+0x1]
   14000c1ad:	jl     0x14000c1b1
   14000c1af:	mov    ebx,eax
   14000c1b1:	mov    r12d,DWORD PTR [rbp+0x78]
   14000c1b5:	mov    esi,edi
   14000c1b7:	test   r12d,r12d
   14000c1ba:	jne    0x14000c1c3
   14000c1bc:	mov    rax,QWORD PTR [rcx]
   14000c1bf:	mov    r12d,DWORD PTR [rax+0x4]
   14000c1c3:	neg    DWORD PTR [rbp+0x80]
   14000c1c9:	mov    r9d,ebx
   14000c1cc:	mov    r8,r14
   14000c1cf:	sbb    edx,edx
   14000c1d1:	mov    ecx,r12d
   14000c1d4:	mov    DWORD PTR [rsp+0x28],edi
   14000c1d8:	and    edx,0x8
   14000c1db:	mov    QWORD PTR [rsp+0x20],rdi
   14000c1e0:	inc    edx
   14000c1e2:	call   QWORD PTR [rip+0x1e78]        # 0x14000e060
   14000c1e8:	movsxd r13,eax
   14000c1eb:	test   eax,eax
   14000c1ed:	jne    0x14000c1f6
   14000c1ef:	xor    eax,eax
   14000c1f1:	jmp    0x14000c3ec
   14000c1f6:	movabs r8,0xffffffffffffff0
   14000c200:	test   eax,eax
   14000c202:	jle    0x14000c262
   14000c204:	xor    edx,edx
   14000c206:	lea    rax,[rdx-0x20]
   14000c20a:	div    r13
   14000c20d:	cmp    rax,0x2
   14000c211:	jb     0x14000c262
   14000c213:	lea    rcx,[r13+r13*1+0x10]
   14000c218:	cmp    rcx,0x400
   14000c21f:	ja     0x14000c24b
   14000c221:	lea    rax,[rcx+0xf]
   14000c225:	cmp    rax,rcx
   14000c228:	ja     0x14000c22d
   14000c22a:	mov    rax,r8
   14000c22d:	and    rax,0xfffffffffffffff0
   14000c231:	call   0x14000bb90
   14000c236:	sub    rsp,rax
   14000c239:	lea    rdi,[rsp+0x40]
   14000c23e:	test   rdi,rdi
   14000c241:	je     0x14000c1ef
   14000c243:	mov    DWORD PTR [rdi],0xcccc
   14000c249:	jmp    0x14000c25e
   14000c24b:	call   0x140001f38
   14000c250:	mov    rdi,rax
   14000c253:	test   rax,rax
   14000c256:	je     0x14000c262
   14000c258:	mov    DWORD PTR [rax],0xdddd
   14000c25e:	add    rdi,0x10
   14000c262:	test   rdi,rdi
   14000c265:	je     0x14000c1ef
   14000c267:	mov    r9d,ebx
   14000c26a:	mov    r8,r14
   14000c26d:	mov    edx,0x1
   14000c272:	mov    ecx,r12d
   14000c275:	mov    DWORD PTR [rsp+0x28],r13d
   14000c27a:	mov    QWORD PTR [rsp+0x20],rdi
   14000c27f:	call   QWORD PTR [rip+0x1ddb]        # 0x14000e060
   14000c285:	test   eax,eax
   14000c287:	je     0x14000c3d9
   14000c28d:	mov    r14d,DWORD PTR [rbp+0x0]
   14000c291:	and    DWORD PTR [rsp+0x28],esi
   14000c295:	and    QWORD PTR [rsp+0x20],rsi
   14000c29a:	mov    ecx,r14d
   14000c29d:	mov    r9d,r13d
   14000c2a0:	mov    r8,rdi
   14000c2a3:	mov    edx,r15d
   14000c2a6:	call   QWORD PTR [rip+0x1fc4]        # 0x14000e270
   14000c2ac:	movsxd rsi,eax
   14000c2af:	test   eax,eax
   14000c2b1:	je     0x14000c3d9
   14000c2b7:	mov    r8d,0x400
   14000c2bd:	test   r8d,r15d
   14000c2c0:	je     0x14000c2f9
   14000c2c2:	mov    ecx,DWORD PTR [rbp+0x70]
   14000c2c5:	test   ecx,ecx
   14000c2c7:	je     0x14000c3d9
   14000c2cd:	cmp    esi,ecx
   14000c2cf:	jg     0x14000c3d9
   14000c2d5:	mov    rax,QWORD PTR [rbp+0x68]
   14000c2d9:	mov    DWORD PTR [rsp+0x28],ecx
   14000c2dd:	mov    r9d,r13d
   14000c2e0:	mov    r8,rdi
   14000c2e3:	mov    edx,r15d
   14000c2e6:	mov    ecx,r14d
   14000c2e9:	mov    QWORD PTR [rsp+0x20],rax
   14000c2ee:	call   QWORD PTR [rip+0x1f7c]        # 0x14000e270
   14000c2f4:	jmp    0x14000c3d9
   14000c2f9:	test   eax,eax
   14000c2fb:	jle    0x14000c364
   14000c2fd:	xor    edx,edx
   14000c2ff:	lea    rax,[rdx-0x20]
   14000c303:	div    rsi
   14000c306:	cmp    rax,0x2
   14000c30a:	jb     0x14000c364
   14000c30c:	lea    rcx,[rsi+rsi*1+0x10]
   14000c311:	cmp    rcx,r8
   14000c314:	ja     0x14000c34b
   14000c316:	lea    rax,[rcx+0xf]
   14000c31a:	cmp    rax,rcx
   14000c31d:	ja     0x14000c329
   14000c31f:	movabs rax,0xffffffffffffff0
   14000c329:	and    rax,0xfffffffffffffff0
   14000c32d:	call   0x14000bb90
   14000c332:	sub    rsp,rax
   14000c335:	lea    rbx,[rsp+0x40]
   14000c33a:	test   rbx,rbx
   14000c33d:	je     0x14000c3d9
   14000c343:	mov    DWORD PTR [rbx],0xcccc
   14000c349:	jmp    0x14000c35e
   14000c34b:	call   0x140001f38
   14000c350:	mov    rbx,rax
   14000c353:	test   rax,rax
   14000c356:	je     0x14000c366
   14000c358:	mov    DWORD PTR [rax],0xdddd
   14000c35e:	add    rbx,0x10
   14000c362:	jmp    0x14000c366
   14000c364:	xor    ebx,ebx
   14000c366:	test   rbx,rbx
   14000c369:	je     0x14000c3d9
   14000c36b:	mov    r9d,r13d
   14000c36e:	mov    r8,rdi
   14000c371:	mov    edx,r15d
   14000c374:	mov    ecx,r14d
   14000c377:	mov    DWORD PTR [rsp+0x28],esi
   14000c37b:	mov    QWORD PTR [rsp+0x20],rbx
   14000c380:	call   QWORD PTR [rip+0x1eea]        # 0x14000e270
   14000c386:	xor    ecx,ecx
   14000c388:	test   eax,eax
   14000c38a:	je     0x14000c3c8
   14000c38c:	mov    eax,DWORD PTR [rbp+0x70]
   14000c38f:	xor    edx,edx
   14000c391:	mov    QWORD PTR [rsp+0x38],rcx
   14000c396:	mov    r9d,esi
   14000c399:	mov    r8,rbx
   14000c39c:	mov    QWORD PTR [rsp+0x30],rcx
   14000c3a1:	test   eax,eax
   14000c3a3:	jne    0x14000c3b0
   14000c3a5:	mov    DWORD PTR [rsp+0x28],ecx
   14000c3a9:	mov    QWORD PTR [rsp+0x20],rcx
   14000c3ae:	jmp    0x14000c3bd
   14000c3b0:	mov    DWORD PTR [rsp+0x28],eax
   14000c3b4:	mov    rax,QWORD PTR [rbp+0x68]
   14000c3b8:	mov    QWORD PTR [rsp+0x20],rax
   14000c3bd:	mov    ecx,r12d
   14000c3c0:	call   QWORD PTR [rip+0x1e0a]        # 0x14000e1d0
   14000c3c6:	mov    esi,eax
   14000c3c8:	lea    rcx,[rbx-0x10]
   14000c3cc:	cmp    DWORD PTR [rcx],0xdddd
   14000c3d2:	jne    0x14000c3d9
   14000c3d4:	call   0x140001eb4
   14000c3d9:	lea    rcx,[rdi-0x10]
   14000c3dd:	cmp    DWORD PTR [rcx],0xdddd
   14000c3e3:	jne    0x14000c3ea
   14000c3e5:	call   0x140001eb4
   14000c3ea:	mov    eax,esi
   14000c3ec:	mov    rcx,QWORD PTR [rbp+0x8]
   14000c3f0:	xor    rcx,rbp
   14000c3f3:	call   0x140001980
   14000c3f8:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c3fc:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c400:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c404:	lea    rsp,[rbp+0x10]
   14000c408:	pop    r15
   14000c40a:	pop    r14
   14000c40c:	pop    r13
   14000c40e:	pop    r12
   14000c410:	pop    rbp
   14000c411:	ret    
   14000c412:	int3   
   14000c413:	int3   
   14000c414:	mov    QWORD PTR [rsp+0x8],rbx
   14000c419:	mov    QWORD PTR [rsp+0x10],rsi
   14000c41e:	push   rdi
   14000c41f:	sub    rsp,0x70
   14000c423:	mov    esi,edx
   14000c425:	mov    rdx,rcx
   14000c428:	lea    rcx,[rsp+0x50]
   14000c42d:	mov    rbx,r9
   14000c430:	mov    edi,r8d
   14000c433:	call   0x140004978
   14000c438:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c43f:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000c447:	lea    rcx,[rsp+0x50]
   14000c44c:	mov    DWORD PTR [rsp+0x40],r11d
   14000c451:	mov    DWORD PTR [rsp+0x38],eax
   14000c455:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c45c:	mov    DWORD PTR [rsp+0x30],eax
   14000c460:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c468:	mov    r9,rbx
   14000c46b:	mov    QWORD PTR [rsp+0x28],rax
   14000c470:	mov    eax,DWORD PTR [rsp+0xa0]
   14000c477:	mov    r8d,edi
   14000c47a:	mov    edx,esi
   14000c47c:	mov    DWORD PTR [rsp+0x20],eax
   14000c480:	call   0x14000c148
   14000c485:	cmp    BYTE PTR [rsp+0x68],0x0
   14000c48a:	je     0x14000c498
   14000c48c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c491:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c498:	lea    r11,[rsp+0x70]
   14000c49d:	mov    rbx,QWORD PTR [r11+0x10]
   14000c4a1:	mov    rsi,QWORD PTR [r11+0x18]
   14000c4a5:	mov    rsp,r11
   14000c4a8:	pop    rdi
   14000c4a9:	ret    
   14000c4aa:	int3   
   14000c4ab:	int3   
   14000c4ac:	rex push rbp
   14000c4ae:	push   r12
   14000c4b0:	push   r13
   14000c4b2:	push   r14
   14000c4b4:	push   r15
   14000c4b6:	sub    rsp,0x40
   14000c4ba:	lea    rbp,[rsp+0x30]
   14000c4bf:	mov    QWORD PTR [rbp+0x40],rbx
   14000c4c3:	mov    QWORD PTR [rbp+0x48],rsi
   14000c4c7:	mov    QWORD PTR [rbp+0x50],rdi
   14000c4cb:	mov    rax,QWORD PTR [rip+0x5b36]        # 0x140012008
   14000c4d2:	xor    rax,rbp
   14000c4d5:	mov    QWORD PTR [rbp+0x0],rax
   14000c4d9:	mov    esi,DWORD PTR [rbp+0x68]
   14000c4dc:	xor    edi,edi
   14000c4de:	mov    r13d,r9d
   14000c4e1:	mov    r14,r8
   14000c4e4:	mov    r15d,edx
   14000c4e7:	test   esi,esi
   14000c4e9:	jne    0x14000c4f1
   14000c4eb:	mov    rax,QWORD PTR [rcx]
   14000c4ee:	mov    esi,DWORD PTR [rax+0x4]
   14000c4f1:	neg    DWORD PTR [rbp+0x70]
   14000c4f4:	mov    ecx,esi
   14000c4f6:	mov    DWORD PTR [rsp+0x28],edi
   14000c4fa:	sbb    edx,edx
   14000c4fc:	mov    QWORD PTR [rsp+0x20],rdi
   14000c501:	and    edx,0x8
   14000c504:	inc    edx
   14000c506:	call   QWORD PTR [rip+0x1b54]        # 0x14000e060
   14000c50c:	movsxd r12,eax
   14000c50f:	test   eax,eax
   14000c511:	jne    0x14000c51a
   14000c513:	xor    eax,eax
   14000c515:	jmp    0x14000c5e4
   14000c51a:	jle    0x14000c583
   14000c51c:	movabs rax,0x7ffffffffffffff0
   14000c526:	cmp    r12,rax
   14000c529:	ja     0x14000c583
   14000c52b:	lea    rcx,[r12+r12*1+0x10]
   14000c530:	cmp    rcx,0x400
   14000c537:	ja     0x14000c56a
   14000c539:	lea    rax,[rcx+0xf]
   14000c53d:	cmp    rax,rcx
   14000c540:	ja     0x14000c54c
   14000c542:	movabs rax,0xffffffffffffff0
   14000c54c:	and    rax,0xfffffffffffffff0
   14000c550:	call   0x14000bb90
   14000c555:	sub    rsp,rax
   14000c558:	lea    rbx,[rsp+0x30]
   14000c55d:	test   rbx,rbx
   14000c560:	je     0x14000c513
   14000c562:	mov    DWORD PTR [rbx],0xcccc
   14000c568:	jmp    0x14000c57d
   14000c56a:	call   0x140001f38
   14000c56f:	mov    rbx,rax
   14000c572:	test   rax,rax
   14000c575:	je     0x14000c586
   14000c577:	mov    DWORD PTR [rax],0xdddd
   14000c57d:	add    rbx,0x10
   14000c581:	jmp    0x14000c586
   14000c583:	mov    rbx,rdi
   14000c586:	test   rbx,rbx
   14000c589:	je     0x14000c513
   14000c58b:	mov    r8,r12
   14000c58e:	xor    edx,edx
   14000c590:	mov    rcx,rbx
   14000c593:	add    r8,r8
   14000c596:	call   0x140004a30
   14000c59b:	mov    r9d,r13d
   14000c59e:	mov    r8,r14
   14000c5a1:	mov    edx,0x1
   14000c5a6:	mov    ecx,esi
   14000c5a8:	mov    DWORD PTR [rsp+0x28],r12d
   14000c5ad:	mov    QWORD PTR [rsp+0x20],rbx
   14000c5b2:	call   QWORD PTR [rip+0x1aa8]        # 0x14000e060
   14000c5b8:	test   eax,eax
   14000c5ba:	je     0x14000c5d1
   14000c5bc:	mov    r9,QWORD PTR [rbp+0x60]
   14000c5c0:	mov    r8d,eax
   14000c5c3:	mov    rdx,rbx
   14000c5c6:	mov    ecx,r15d
   14000c5c9:	call   QWORD PTR [rip+0x1af9]        # 0x14000e0c8
   14000c5cf:	mov    edi,eax
   14000c5d1:	lea    rcx,[rbx-0x10]
   14000c5d5:	cmp    DWORD PTR [rcx],0xdddd
   14000c5db:	jne    0x14000c5e2
   14000c5dd:	call   0x140001eb4
   14000c5e2:	mov    eax,edi
   14000c5e4:	mov    rcx,QWORD PTR [rbp+0x0]
   14000c5e8:	xor    rcx,rbp
   14000c5eb:	call   0x140001980
   14000c5f0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c5f4:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c5f8:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c5fc:	lea    rsp,[rbp+0x10]
   14000c600:	pop    r15
   14000c602:	pop    r14
   14000c604:	pop    r13
   14000c606:	pop    r12
   14000c608:	pop    rbp
   14000c609:	ret    
   14000c60a:	int3   
   14000c60b:	int3   
   14000c60c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c611:	mov    QWORD PTR [rsp+0x10],rsi
   14000c616:	push   rdi
   14000c617:	sub    rsp,0x60
   14000c61b:	mov    esi,edx
   14000c61d:	mov    rdx,rcx
   14000c620:	lea    rcx,[rsp+0x40]
   14000c625:	mov    ebx,r9d
   14000c628:	mov    rdi,r8
   14000c62b:	call   0x140004978
   14000c630:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000c638:	mov    eax,DWORD PTR [rsp+0x98]
   14000c63f:	lea    rcx,[rsp+0x40]
   14000c644:	mov    DWORD PTR [rsp+0x30],r11d
   14000c649:	mov    DWORD PTR [rsp+0x28],eax
   14000c64d:	mov    rax,QWORD PTR [rsp+0x90]
   14000c655:	mov    r9d,ebx
   14000c658:	mov    r8,rdi
   14000c65b:	mov    edx,esi
   14000c65d:	mov    QWORD PTR [rsp+0x20],rax
   14000c662:	call   0x14000c4ac
   14000c667:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c66c:	je     0x14000c67a
   14000c66e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c673:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c67a:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c67f:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c684:	add    rsp,0x60
   14000c688:	pop    rdi
   14000c689:	ret    
   14000c68a:	int3   
   14000c68b:	int3   
   14000c68c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c691:	mov    WORD PTR [rsp+0x20],r9w
   14000c697:	push   rbp
   14000c698:	push   rsi
   14000c699:	push   rdi
   14000c69a:	mov    rbp,rsp
   14000c69d:	sub    rsp,0x60
   14000c6a1:	mov    rdi,r8
   14000c6a4:	mov    rsi,rdx
   14000c6a7:	mov    rbx,rcx
   14000c6aa:	test   rdx,rdx
   14000c6ad:	jne    0x14000c6c2
   14000c6af:	test   r8,r8
   14000c6b2:	je     0x14000c6c2
   14000c6b4:	test   rcx,rcx
   14000c6b7:	je     0x14000c6bb
   14000c6b9:	and    DWORD PTR [rcx],edx
   14000c6bb:	xor    eax,eax
   14000c6bd:	jmp    0x14000c74c
   14000c6c2:	test   rcx,rcx
   14000c6c5:	je     0x14000c6ca
   14000c6c7:	or     DWORD PTR [rcx],0xffffffff
   14000c6ca:	cmp    r8,0x7fffffff
   14000c6d1:	jbe    0x14000c6e8
   14000c6d3:	call   0x140003564
   14000c6d8:	mov    ebx,0x16
   14000c6dd:	mov    DWORD PTR [rax],ebx
   14000c6df:	call   0x1400034fc
   14000c6e4:	mov    eax,ebx
   14000c6e6:	jmp    0x14000c74c
   14000c6e8:	mov    rdx,QWORD PTR [rbp+0x40]
   14000c6ec:	lea    rcx,[rbp-0x20]
   14000c6f0:	call   0x140004978
   14000c6f5:	mov    r11,QWORD PTR [rbp-0x20]
   14000c6f9:	cmp    DWORD PTR [r11+0x14],0x0
   14000c6fe:	jne    0x14000c7b6
   14000c704:	movzx  eax,WORD PTR [rbp+0x38]
   14000c708:	mov    ecx,0xff
   14000c70d:	cmp    ax,cx
   14000c710:	jbe    0x14000c75c
   14000c712:	test   rsi,rsi
   14000c715:	je     0x14000c729
   14000c717:	test   rdi,rdi
   14000c71a:	je     0x14000c729
   14000c71c:	mov    r8,rdi
   14000c71f:	xor    edx,edx
   14000c721:	mov    rcx,rsi
   14000c724:	call   0x140004a30
   14000c729:	call   0x140003564
   14000c72e:	mov    DWORD PTR [rax],0x2a
   14000c734:	call   0x140003564
   14000c739:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c73d:	mov    eax,DWORD PTR [rax]
   14000c73f:	je     0x14000c74c
   14000c741:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c745:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c74c:	mov    rbx,QWORD PTR [rsp+0x80]
   14000c754:	add    rsp,0x60
   14000c758:	pop    rdi
   14000c759:	pop    rsi
   14000c75a:	pop    rbp
   14000c75b:	ret    
   14000c75c:	test   rsi,rsi
   14000c75f:	je     0x14000c791
   14000c761:	test   rdi,rdi
   14000c764:	jne    0x14000c78f
   14000c766:	call   0x140003564
   14000c76b:	lea    ebx,[rdi+0x22]
   14000c76e:	mov    DWORD PTR [rax],ebx
   14000c770:	call   0x1400034fc
   14000c775:	cmp    BYTE PTR [rbp-0x8],dil
   14000c779:	je     0x14000c6e4
   14000c77f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c783:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c78a:	jmp    0x14000c6e4
   14000c78f:	mov    BYTE PTR [rsi],al
   14000c791:	test   rbx,rbx
   14000c794:	je     0x14000c79c
   14000c796:	mov    DWORD PTR [rbx],0x1
   14000c79c:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c7a0:	je     0x14000c6bb
   14000c7a6:	mov    rax,QWORD PTR [rbp-0x10]
   14000c7aa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c7b1:	jmp    0x14000c6bb
   14000c7b6:	and    DWORD PTR [rbp+0x28],0x0
   14000c7ba:	mov    ecx,DWORD PTR [r11+0x4]
   14000c7be:	lea    rax,[rbp+0x28]
   14000c7c2:	mov    QWORD PTR [rsp+0x38],rax
   14000c7c7:	and    QWORD PTR [rsp+0x30],0x0
   14000c7cd:	lea    r8,[rbp+0x38]
   14000c7d1:	mov    r9d,0x1
   14000c7d7:	xor    edx,edx
   14000c7d9:	mov    DWORD PTR [rsp+0x28],edi
   14000c7dd:	mov    QWORD PTR [rsp+0x20],rsi
   14000c7e2:	call   QWORD PTR [rip+0x19e8]        # 0x14000e1d0
   14000c7e8:	test   eax,eax
   14000c7ea:	je     0x14000c7ff
   14000c7ec:	cmp    DWORD PTR [rbp+0x28],0x0
   14000c7f0:	jne    0x14000c729
   14000c7f6:	test   rbx,rbx
   14000c7f9:	je     0x14000c79c
   14000c7fb:	mov    DWORD PTR [rbx],eax
   14000c7fd:	jmp    0x14000c79c
   14000c7ff:	call   QWORD PTR [rip+0x1873]        # 0x14000e078
   14000c805:	cmp    eax,0x7a
   14000c808:	jne    0x14000c729
   14000c80e:	test   rsi,rsi
   14000c811:	je     0x14000c825
   14000c813:	test   rdi,rdi
   14000c816:	je     0x14000c825
   14000c818:	mov    r8,rdi
   14000c81b:	xor    edx,edx
   14000c81d:	mov    rcx,rsi
   14000c820:	call   0x140004a30
   14000c825:	call   0x140003564
   14000c82a:	mov    ebx,0x22
   14000c82f:	mov    DWORD PTR [rax],ebx
   14000c831:	call   0x1400034fc
   14000c836:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c83a:	je     0x14000c6e4
   14000c840:	mov    rax,QWORD PTR [rbp-0x10]
   14000c844:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c84b:	jmp    0x14000c6e4
   14000c850:	sub    rsp,0x38
   14000c854:	and    QWORD PTR [rsp+0x20],0x0
   14000c85a:	call   0x14000c68c
   14000c85f:	add    rsp,0x38
   14000c863:	ret    
   14000c864:	mov    WORD PTR [rsp+0x8],cx
   14000c869:	sub    rsp,0x38
   14000c86d:	mov    rcx,QWORD PTR [rip+0x6b3c]        # 0x1400133b0
   14000c874:	cmp    rcx,0xfffffffffffffffe
   14000c878:	jne    0x14000c886
   14000c87a:	call   0x14000cd18
   14000c87f:	mov    rcx,QWORD PTR [rip+0x6b2a]        # 0x1400133b0
   14000c886:	cmp    rcx,0xffffffffffffffff
   14000c88a:	jne    0x14000c893
   14000c88c:	mov    eax,0xffff
   14000c891:	jmp    0x14000c8b8
   14000c893:	and    QWORD PTR [rsp+0x20],0x0
   14000c899:	lea    r9,[rsp+0x48]
   14000c89e:	lea    rdx,[rsp+0x40]
   14000c8a3:	mov    r8d,0x1
   14000c8a9:	call   QWORD PTR [rip+0x19c9]        # 0x14000e278
   14000c8af:	test   eax,eax
   14000c8b1:	je     0x14000c88c
   14000c8b3:	movzx  eax,WORD PTR [rsp+0x40]
   14000c8b8:	add    rsp,0x38
   14000c8bc:	ret    
   14000c8bd:	int3   
   14000c8be:	int3   
   14000c8bf:	int3   
   14000c8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c8c5:	mov    QWORD PTR [rsp+0x18],rbp
   14000c8ca:	push   rsi
   14000c8cb:	push   rdi
   14000c8cc:	push   r12
   14000c8ce:	sub    rsp,0x20
   14000c8d2:	mov    r12d,ecx
   14000c8d5:	mov    rcx,rdx
   14000c8d8:	mov    rbx,rdx
   14000c8db:	call   0x14000571c
   14000c8e0:	mov    edx,DWORD PTR [rbx+0x18]
   14000c8e3:	movsxd rsi,eax
   14000c8e6:	test   dl,0x82
   14000c8e9:	jne    0x14000c904
   14000c8eb:	call   0x140003564
   14000c8f0:	mov    DWORD PTR [rax],0x9
   14000c8f6:	or     DWORD PTR [rbx+0x18],0x20
   14000c8fa:	mov    eax,0xffff
   14000c8ff:	jmp    0x14000ca3c
   14000c904:	test   dl,0x40
   14000c907:	je     0x14000c916
   14000c909:	call   0x140003564
   14000c90e:	mov    DWORD PTR [rax],0x22
   14000c914:	jmp    0x14000c8f6
   14000c916:	xor    edi,edi
   14000c918:	test   dl,0x1
   14000c91b:	je     0x14000c936
   14000c91d:	mov    DWORD PTR [rbx+0x8],edi
   14000c920:	test   dl,0x10
   14000c923:	je     0x14000c9b3
   14000c929:	mov    rax,QWORD PTR [rbx+0x10]
   14000c92d:	and    edx,0xfffffffe
   14000c930:	mov    QWORD PTR [rbx],rax
   14000c933:	mov    DWORD PTR [rbx+0x18],edx
   14000c936:	mov    eax,DWORD PTR [rbx+0x18]
   14000c939:	mov    DWORD PTR [rbx+0x8],edi
   14000c93c:	and    eax,0xffffffef
   14000c93f:	or     eax,0x2
   14000c942:	mov    DWORD PTR [rbx+0x18],eax
   14000c945:	test   eax,0x10c
   14000c94a:	jne    0x14000c97b
   14000c94c:	call   0x140002cb8
   14000c951:	add    rax,0x30
   14000c955:	cmp    rbx,rax
   14000c958:	je     0x14000c968
   14000c95a:	call   0x140002cb8
   14000c95f:	add    rax,0x60
   14000c963:	cmp    rbx,rax
   14000c966:	jne    0x14000c973
   14000c968:	mov    ecx,esi
   14000c96a:	call   0x140009fb4
   14000c96f:	test   eax,eax
   14000c971:	jne    0x14000c97b
   14000c973:	mov    rcx,rbx
   14000c976:	call   0x140009f60
   14000c97b:	test   DWORD PTR [rbx+0x18],0x108
   14000c982:	je     0x14000ca14
   14000c988:	mov    ebp,DWORD PTR [rbx]
   14000c98a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000c98e:	sub    ebp,DWORD PTR [rbx+0x10]
   14000c991:	lea    rax,[rdx+0x2]
   14000c995:	mov    QWORD PTR [rbx],rax
   14000c998:	mov    eax,DWORD PTR [rbx+0x24]
   14000c99b:	sub    eax,0x2
   14000c99e:	mov    DWORD PTR [rbx+0x8],eax
   14000c9a1:	test   ebp,ebp
   14000c9a3:	jle    0x14000c9be
   14000c9a5:	mov    r8d,ebp
   14000c9a8:	mov    ecx,esi
   14000c9aa:	call   0x140009e80
   14000c9af:	mov    edi,eax
   14000c9b1:	jmp    0x14000ca0a
   14000c9b3:	or     edx,0x20
   14000c9b6:	mov    DWORD PTR [rbx+0x18],edx
   14000c9b9:	jmp    0x14000c8fa
   14000c9be:	cmp    esi,0xffffffff
   14000c9c1:	je     0x14000c9e6
   14000c9c3:	cmp    esi,0xfffffffe
   14000c9c6:	je     0x14000c9e6
   14000c9c8:	mov    rcx,rsi
   14000c9cb:	mov    rax,rsi
   14000c9ce:	lea    rdx,[rip+0x7c4b]        # 0x140014620
   14000c9d5:	and    ecx,0x1f
   14000c9d8:	sar    rax,0x5
   14000c9dc:	imul   rcx,rcx,0x58
   14000c9e0:	add    rcx,QWORD PTR [rdx+rax*8]
   14000c9e4:	jmp    0x14000c9ed
   14000c9e6:	lea    rcx,[rip+0x5f13]        # 0x140012900
   14000c9ed:	test   BYTE PTR [rcx+0x8],0x20
   14000c9f1:	je     0x14000ca0a
   14000c9f3:	xor    edx,edx
   14000c9f5:	mov    ecx,esi
   14000c9f7:	lea    r8d,[rdx+0x2]
   14000c9fb:	call   0x14000963c
   14000ca00:	cmp    rax,0xffffffffffffffff
   14000ca04:	je     0x14000c8f6
   14000ca0a:	mov    rax,QWORD PTR [rbx+0x10]
   14000ca0e:	mov    WORD PTR [rax],r12w
   14000ca12:	jmp    0x14000ca30
   14000ca14:	mov    ebp,0x2
   14000ca19:	lea    rdx,[rsp+0x48]
   14000ca1e:	mov    ecx,esi
   14000ca20:	mov    r8d,ebp
   14000ca23:	mov    WORD PTR [rsp+0x48],r12w
   14000ca29:	call   0x140009e80
   14000ca2e:	mov    edi,eax
   14000ca30:	cmp    edi,ebp
   14000ca32:	jne    0x14000c8f6
   14000ca38:	movzx  eax,r12w
   14000ca3c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ca41:	mov    rbp,QWORD PTR [rsp+0x50]
   14000ca46:	add    rsp,0x20
   14000ca4a:	pop    r12
   14000ca4c:	pop    rdi
   14000ca4d:	pop    rsi
   14000ca4e:	ret    
   14000ca4f:	int3   
   14000ca50:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca55:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca5a:	push   rdi
   14000ca5b:	sub    rsp,0x30
   14000ca5f:	movsxd rax,r9d
   14000ca62:	mov    rbx,r8
   14000ca65:	mov    edi,edx
   14000ca67:	mov    esi,ecx
   14000ca69:	test   r9d,r9d
   14000ca6c:	jle    0x14000ca79
   14000ca6e:	mov    rdx,rax
   14000ca71:	mov    rcx,rbx
   14000ca74:	call   0x14000cd78
   14000ca79:	mov    r9d,DWORD PTR [rsp+0x68]
   14000ca7e:	mov    rdx,QWORD PTR [rsp+0x60]
   14000ca83:	mov    r8,rbx
   14000ca86:	mov    DWORD PTR [rsp+0x28],r9d
   14000ca8b:	mov    QWORD PTR [rsp+0x20],rdx
   14000ca90:	mov    edx,edi
   14000ca92:	mov    r9d,eax
   14000ca95:	mov    ecx,esi
   14000ca97:	call   QWORD PTR [rip+0x17d3]        # 0x14000e270
   14000ca9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000caa2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000caa7:	add    rsp,0x30
   14000caab:	pop    rdi
   14000caac:	ret    
   14000caad:	int3   
   14000caae:	int3   
   14000caaf:	int3   
   14000cab0:	int3   
   14000cab1:	int3   
   14000cab2:	int3   
   14000cab3:	int3   
   14000cab4:	int3   
   14000cab5:	int3   
   14000cab6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cac0:	sub    rdx,rcx
   14000cac3:	mov    r9,rdx
   14000cac6:	test   cl,0x7
   14000cac9:	je     0x14000cae6
   14000cacb:	mov    al,BYTE PTR [rcx]
   14000cacd:	mov    dl,BYTE PTR [rcx+r9*1]
   14000cad1:	cmp    al,dl
   14000cad3:	jne    0x14000cb2b
   14000cad5:	inc    rcx
   14000cad8:	test   al,al
   14000cada:	je     0x14000cb33
   14000cadc:	test   rcx,0x7
   14000cae3:	jne    0x14000cacb
   14000cae5:	nop
   14000cae6:	movabs r11,0x8101010101010100
   14000caf0:	lea    rdx,[rcx+r9*1]
   14000caf4:	and    dx,0xfff
   14000caf9:	cmp    dx,0xff8
   14000cafe:	ja     0x14000cacb
   14000cb00:	mov    rax,QWORD PTR [rcx]
   14000cb03:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000cb07:	cmp    rax,rdx
   14000cb0a:	jne    0x14000cacb
   14000cb0c:	movabs r10,0x7efefefefefefeff
   14000cb16:	add    r10,rdx
   14000cb19:	xor    rax,0xffffffffffffffff
   14000cb1d:	add    rcx,0x8
   14000cb21:	xor    rax,r10
   14000cb24:	test   r11,rax
   14000cb27:	je     0x14000caf0
   14000cb29:	jmp    0x14000cb3a
   14000cb2b:	sbb    rax,rax
   14000cb2e:	sbb    rax,0xffffffffffffffff
   14000cb32:	ret    
   14000cb33:	xor    eax,eax
   14000cb35:	ret    
   14000cb36:	data16 data16 xchg ax,ax
   14000cb3a:	test   dl,dl
   14000cb3c:	je     0x14000cb65
   14000cb3e:	test   dh,dh
   14000cb40:	je     0x14000cb65
   14000cb42:	shr    rdx,0x10
   14000cb46:	test   dl,dl
   14000cb48:	je     0x14000cb65
   14000cb4a:	test   dh,dh
   14000cb4c:	je     0x14000cb65
   14000cb4e:	shr    rdx,0x10
   14000cb52:	test   dl,dl
   14000cb54:	je     0x14000cb65
   14000cb56:	test   dh,dh
   14000cb58:	je     0x14000cb65
   14000cb5a:	shr    edx,0x10
   14000cb5d:	test   dl,dl
   14000cb5f:	je     0x14000cb65
   14000cb61:	test   dh,dh
   14000cb63:	jne    0x14000caf0
   14000cb65:	xor    eax,eax
   14000cb67:	ret    
   14000cb68:	sbb    rax,rax
   14000cb6b:	sbb    rax,0xffffffffffffffff
   14000cb6f:	ret    
   14000cb70:	int3   
   14000cb71:	int3   
   14000cb72:	int3   
   14000cb73:	int3   
   14000cb74:	int3   
   14000cb75:	int3   
   14000cb76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cb80:	sub    rdx,rcx
   14000cb83:	cmp    r8,0x8
   14000cb87:	jb     0x14000cbab
   14000cb89:	test   cl,0x7
   14000cb8c:	je     0x14000cba2
   14000cb8e:	xchg   ax,ax
   14000cb90:	mov    al,BYTE PTR [rcx]
   14000cb92:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cb95:	jne    0x14000cbc3
   14000cb97:	inc    rcx
   14000cb9a:	dec    r8
   14000cb9d:	test   cl,0x7
   14000cba0:	jne    0x14000cb90
   14000cba2:	mov    r9,r8
   14000cba5:	shr    r9,0x3
   14000cba9:	jne    0x14000cbca
   14000cbab:	test   r8,r8
   14000cbae:	je     0x14000cbbf
   14000cbb0:	mov    al,BYTE PTR [rcx]
   14000cbb2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cbb5:	jne    0x14000cbc3
   14000cbb7:	inc    rcx
   14000cbba:	dec    r8
   14000cbbd:	jne    0x14000cbb0
   14000cbbf:	xor    rax,rax
   14000cbc2:	ret    
   14000cbc3:	sbb    eax,eax
   14000cbc5:	sbb    eax,0xffffffff
   14000cbc8:	ret    
   14000cbc9:	nop
   14000cbca:	shr    r9,0x2
   14000cbce:	je     0x14000cc07
   14000cbd0:	mov    rax,QWORD PTR [rcx]
   14000cbd3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cbd7:	jne    0x14000cc34
   14000cbd9:	mov    rax,QWORD PTR [rcx+0x8]
   14000cbdd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000cbe2:	jne    0x14000cc30
   14000cbe4:	mov    rax,QWORD PTR [rcx+0x10]
   14000cbe8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000cbed:	jne    0x14000cc2c
   14000cbef:	mov    rax,QWORD PTR [rcx+0x18]
   14000cbf3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000cbf8:	jne    0x14000cc28
   14000cbfa:	add    rcx,0x20
   14000cbfe:	dec    r9
   14000cc01:	jne    0x14000cbd0
   14000cc03:	and    r8,0x1f
   14000cc07:	mov    r9,r8
   14000cc0a:	shr    r9,0x3
   14000cc0e:	je     0x14000cbab
   14000cc10:	mov    rax,QWORD PTR [rcx]
   14000cc13:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cc17:	jne    0x14000cc34
   14000cc19:	add    rcx,0x8
   14000cc1d:	dec    r9
   14000cc20:	jne    0x14000cc10
   14000cc22:	and    r8,0x7
   14000cc26:	jmp    0x14000cbab
   14000cc28:	add    rcx,0x8
   14000cc2c:	add    rcx,0x8
   14000cc30:	add    rcx,0x8
   14000cc34:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000cc38:	bswap  rax
   14000cc3b:	bswap  rcx
   14000cc3e:	cmp    rax,rcx
   14000cc41:	sbb    eax,eax
   14000cc43:	sbb    eax,0xffffffff
   14000cc46:	ret    
   14000cc47:	int3   
   14000cc48:	int3   
   14000cc49:	int3   
   14000cc4a:	int3   
   14000cc4b:	int3   
   14000cc4c:	int3   
   14000cc4d:	int3   
   14000cc4e:	int3   
   14000cc4f:	int3   
   14000cc50:	int3   
   14000cc51:	int3   
   14000cc52:	int3   
   14000cc53:	int3   
   14000cc54:	int3   
   14000cc55:	int3   
   14000cc56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc60:	test   r8,r8
   14000cc63:	je     0x14000ccda
   14000cc65:	sub    rdx,rcx
   14000cc68:	mov    r9,rdx
   14000cc6b:	movabs r11,0x8101010101010100
   14000cc75:	test   cl,0x7
   14000cc78:	je     0x14000cc99
   14000cc7a:	mov    al,BYTE PTR [rcx]
   14000cc7c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000cc80:	inc    rcx
   14000cc83:	cmp    al,dl
   14000cc85:	jne    0x14000ccde
   14000cc87:	dec    r8
   14000cc8a:	je     0x14000ccda
   14000cc8c:	test   al,al
   14000cc8e:	je     0x14000ccda
   14000cc90:	test   rcx,0x7
   14000cc97:	jne    0x14000cc7a
   14000cc99:	lea    rdx,[rcx+r9*1]
   14000cc9d:	and    dx,0xfff
   14000cca2:	cmp    dx,0xff8
   14000cca7:	ja     0x14000cc7a
   14000cca9:	mov    rax,QWORD PTR [rcx]
   14000ccac:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000ccb0:	cmp    rax,rdx
   14000ccb3:	jne    0x14000cc7a
   14000ccb5:	add    rcx,0x8
   14000ccb9:	sub    r8,0x8
   14000ccbd:	movabs r10,0x7efefefefefefeff
   14000ccc7:	jbe    0x14000ccda
   14000ccc9:	xor    rax,0xffffffffffffffff
   14000cccd:	add    r10,rdx
   14000ccd0:	xor    rax,r10
   14000ccd3:	test   r11,rax
   14000ccd6:	je     0x14000cc99
   14000ccd8:	jmp    0x14000cce6
   14000ccda:	xor    rax,rax
   14000ccdd:	ret    
   14000ccde:	sbb    rax,rax
   14000cce1:	sbb    rax,0xffffffffffffffff
   14000cce5:	ret    
   14000cce6:	test   dl,dl
   14000cce8:	je     0x14000cd11
   14000ccea:	test   dh,dh
   14000ccec:	je     0x14000cd11
   14000ccee:	shr    rdx,0x10
   14000ccf2:	test   dl,dl
   14000ccf4:	je     0x14000cd11
   14000ccf6:	test   dh,dh
   14000ccf8:	je     0x14000cd11
   14000ccfa:	shr    rdx,0x10
   14000ccfe:	test   dl,dl
   14000cd00:	je     0x14000cd11
   14000cd02:	test   dh,dh
   14000cd04:	je     0x14000cd11
   14000cd06:	shr    edx,0x10
   14000cd09:	test   dl,dl
   14000cd0b:	je     0x14000cd11
   14000cd0d:	test   dh,dh
   14000cd0f:	jne    0x14000cc99
   14000cd11:	xor    rax,rax
   14000cd14:	ret    
   14000cd15:	int3   
   14000cd16:	int3   
   14000cd17:	int3   
   14000cd18:	sub    rsp,0x48
   14000cd1c:	and    QWORD PTR [rsp+0x30],0x0
   14000cd22:	and    DWORD PTR [rsp+0x28],0x0
   14000cd27:	mov    r8d,0x3
   14000cd2d:	lea    rcx,[rip+0x2fec]        # 0x14000fd20
   14000cd34:	xor    r9d,r9d
   14000cd37:	mov    edx,0x40000000
   14000cd3c:	mov    DWORD PTR [rsp+0x20],r8d
   14000cd41:	call   QWORD PTR [rip+0x14c1]        # 0x14000e208
   14000cd47:	mov    QWORD PTR [rip+0x6662],rax        # 0x1400133b0
   14000cd4e:	add    rsp,0x48
   14000cd52:	ret    
   14000cd53:	int3   
   14000cd54:	sub    rsp,0x28
   14000cd58:	mov    rcx,QWORD PTR [rip+0x6651]        # 0x1400133b0
   14000cd5f:	cmp    rcx,0xffffffffffffffff
   14000cd63:	je     0x14000cd71
   14000cd65:	cmp    rcx,0xfffffffffffffffe
   14000cd69:	je     0x14000cd71
   14000cd6b:	call   QWORD PTR [rip+0x132f]        # 0x14000e0a0
   14000cd71:	add    rsp,0x28
   14000cd75:	ret    
   14000cd76:	int3   
   14000cd77:	int3   
   14000cd78:	xor    r8d,r8d
   14000cd7b:	mov    eax,r8d
   14000cd7e:	test   rdx,rdx
   14000cd81:	je     0x14000cd95
   14000cd83:	cmp    WORD PTR [rcx],r8w
   14000cd87:	je     0x14000cd95
   14000cd89:	inc    rax
   14000cd8c:	add    rcx,0x2
   14000cd90:	cmp    rax,rdx
   14000cd93:	jb     0x14000cd83
   14000cd95:	repz ret 
   14000cd97:	int3   
   14000cd98:	jmp    QWORD PTR [rip+0x1362]        # 0x14000e100
   14000cd9e:	jmp    QWORD PTR [rip+0x1364]        # 0x14000e108
   14000cda4:	jmp    QWORD PTR [rip+0x136e]        # 0x14000e118
   14000cdaa:	int3   
   14000cdab:	int3   
   14000cdac:	int3   
   14000cdad:	int3   
   14000cdae:	int3   
   14000cdaf:	int3   
   14000cdb0:	rex push rbp
   14000cdb2:	sub    rsp,0x20
   14000cdb6:	mov    rbp,rdx
   14000cdb9:	mov    rcx,QWORD PTR [rbp+0x50]
   14000cdbd:	call   0x140002e60
   14000cdc2:	nop
   14000cdc3:	add    rsp,0x20
   14000cdc7:	pop    rbp
   14000cdc8:	ret    
   14000cdc9:	int3   
   14000cdca:	rex push rbp
   14000cdcc:	sub    rsp,0x20
   14000cdd0:	mov    rbp,rdx
   14000cdd3:	cmp    DWORD PTR [rbp+0x80],0x0
   14000cdda:	je     0x14000cde7
   14000cddc:	mov    ecx,0x8
   14000cde1:	call   0x140003770
   14000cde6:	nop
   14000cde7:	add    rsp,0x20
   14000cdeb:	pop    rbp
   14000cdec:	ret    
   14000cded:	int3   
   14000cdee:	rex push rbp
   14000cdf0:	sub    rsp,0x30
   14000cdf4:	mov    rbp,rdx
   14000cdf7:	mov    rcx,QWORD PTR [rbp+0x60]
   14000cdfb:	call   0x140002e60
   14000ce00:	nop
   14000ce01:	add    rsp,0x30
   14000ce05:	pop    rbp
   14000ce06:	ret    
   14000ce07:	int3   
   14000ce08:	rex push rbp
   14000ce0a:	sub    rsp,0x20
   14000ce0e:	mov    rbp,rdx
   14000ce11:	mov    rcx,QWORD PTR [rbp+0x30]
   14000ce15:	call   0x140002e60
   14000ce1a:	nop
   14000ce1b:	add    rsp,0x20
   14000ce1f:	pop    rbp
   14000ce20:	ret    
   14000ce21:	int3   
   14000ce22:	rex push rbp
   14000ce24:	sub    rsp,0x20
   14000ce28:	mov    rbp,rdx
   14000ce2b:	mov    rax,QWORD PTR [rcx]
   14000ce2e:	mov    rdx,rcx
   14000ce31:	mov    ecx,DWORD PTR [rax]
   14000ce33:	call   0x140005fec
   14000ce38:	nop
   14000ce39:	add    rsp,0x20
   14000ce3d:	pop    rbp
   14000ce3e:	ret    
   14000ce3f:	int3   
   14000ce40:	rex push rbp
   14000ce42:	sub    rsp,0x20
   14000ce46:	mov    rbp,rdx
   14000ce49:	mov    rcx,QWORD PTR [rip+0x57a0]        # 0x1400125f0
   14000ce50:	call   QWORD PTR [rip+0x12d2]        # 0x14000e128
   14000ce56:	nop
   14000ce57:	add    rsp,0x20
   14000ce5b:	pop    rbp
   14000ce5c:	ret    
   14000ce5d:	int3   
   14000ce5e:	rex push rbp
   14000ce60:	sub    rsp,0x20
   14000ce64:	mov    rbp,rdx
   14000ce67:	cmp    DWORD PTR [rbp+0x60],0x0
   14000ce6b:	je     0x14000ce75
   14000ce6d:	xor    ecx,ecx
   14000ce6f:	call   0x140003770
   14000ce74:	nop
   14000ce75:	add    rsp,0x20
   14000ce79:	pop    rbp
   14000ce7a:	ret    
   14000ce7b:	int3   
   14000ce7c:	rex push rbp
   14000ce7e:	sub    rsp,0x20
   14000ce82:	mov    rbp,rdx
   14000ce85:	mov    ecx,0xd
   14000ce8a:	call   0x140003770
   14000ce8f:	nop
   14000ce90:	add    rsp,0x20
   14000ce94:	pop    rbp
   14000ce95:	ret    
   14000ce96:	int3   
   14000ce97:	int3   
   14000ce98:	int3   
   14000ce99:	int3   
   14000ce9a:	int3   
   14000ce9b:	int3   
   14000ce9c:	rex push rbp
   14000ce9e:	sub    rsp,0x20
   14000cea2:	mov    rbp,rdx
   14000cea5:	mov    ecx,0xc
   14000ceaa:	call   0x140003770
   14000ceaf:	nop
   14000ceb0:	add    rsp,0x20
   14000ceb4:	pop    rbp
   14000ceb5:	ret    
   14000ceb6:	int3   
   14000ceb7:	rex push rbp
   14000ceb9:	sub    rsp,0x20
   14000cebd:	mov    rbp,rdx
   14000cec0:	call   0x140001b54
   14000cec5:	nop
   14000cec6:	add    rsp,0x20
   14000ceca:	pop    rbp
   14000cecb:	ret    
   14000cecc:	int3   
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	rex push rbp
   14000ced2:	sub    rsp,0x20
   14000ced6:	mov    rbp,rdx
   14000ced9:	mov    rax,QWORD PTR [rcx]
   14000cedc:	xor    ecx,ecx
   14000cede:	cmp    DWORD PTR [rax],0xc0000005
   14000cee4:	sete   cl
   14000cee7:	mov    eax,ecx
   14000cee9:	mov    eax,ecx
   14000ceeb:	add    rsp,0x20
   14000ceef:	pop    rbp
   14000cef0:	ret    
   14000cef1:	int3   
   14000cef2:	rex push rbp
   14000cef4:	sub    rsp,0x20
   14000cef8:	mov    rbp,rdx
   14000cefb:	mov    ecx,DWORD PTR [rbp+0x50]
   14000cefe:	call   0x14000b338
   14000cf03:	nop
   14000cf04:	add    rsp,0x20
   14000cf08:	pop    rbp
   14000cf09:	ret    
   14000cf0a:	int3   
   14000cf0b:	rex push rbp
   14000cf0d:	sub    rsp,0x20
   14000cf11:	mov    rbp,rdx
   14000cf14:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000cf18:	mov    rax,rcx
   14000cf1b:	mov    rdx,QWORD PTR [rip+0x78fe]        # 0x140014820
   14000cf22:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000cf26:	call   0x140002eac
   14000cf2b:	nop
   14000cf2c:	add    rsp,0x20
   14000cf30:	pop    rbp
   14000cf31:	ret    
   14000cf32:	int3   
   14000cf33:	int3   
   14000cf34:	int3   
   14000cf35:	int3   
   14000cf36:	int3   
   14000cf37:	int3   
   14000cf38:	int3   
   14000cf39:	int3   
   14000cf3a:	int3   
   14000cf3b:	rex push rbp
   14000cf3d:	sub    rsp,0x20
   14000cf41:	mov    rbp,rdx
   14000cf44:	mov    ecx,0x1
   14000cf49:	call   0x140003770
   14000cf4e:	nop
   14000cf4f:	add    rsp,0x20
   14000cf53:	pop    rbp
   14000cf54:	ret    
   14000cf55:	int3   
   14000cf56:	rex push rbp
   14000cf58:	sub    rsp,0x20
   14000cf5c:	mov    rbp,rdx
   14000cf5f:	mov    ecx,DWORD PTR [rbp+0x40]
   14000cf62:	call   0x14000b338
   14000cf67:	nop
   14000cf68:	add    rsp,0x20
   14000cf6c:	pop    rbp
   14000cf6d:	ret    
   14000cf6e:	int3   
   14000cf6f:	rex push rbp
   14000cf71:	sub    rsp,0x20
   14000cf75:	mov    rbp,rdx
   14000cf78:	mov    ecx,0x1
   14000cf7d:	call   0x140003770
   14000cf82:	nop
   14000cf83:	add    rsp,0x20
   14000cf87:	pop    rbp
   14000cf88:	ret    
   14000cf89:	int3   
   14000cf8a:	rex push rbp
   14000cf8c:	sub    rsp,0x30
   14000cf90:	mov    rbp,rdx
   14000cf93:	cmp    DWORD PTR [rbp+0x30],0x0
   14000cf97:	je     0x14000cfcc
   14000cf99:	mov    rdx,QWORD PTR [rbp+0x70]
   14000cf9d:	cmp    DWORD PTR [rbp+0x34],0x0
   14000cfa1:	je     0x14000cfc4
   14000cfa3:	movsxd rcx,DWORD PTR [rdx]
   14000cfa6:	mov    rax,rcx
   14000cfa9:	sar    rax,0x5
   14000cfad:	lea    r8,[rip+0x766c]        # 0x140014620
   14000cfb4:	and    ecx,0x1f
   14000cfb7:	imul   rcx,rcx,0x58
   14000cfbb:	mov    rax,QWORD PTR [r8+rax*8]
   14000cfbf:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000cfc4:	mov    ecx,DWORD PTR [rdx]
   14000cfc6:	call   0x14000b338
   14000cfcb:	nop
   14000cfcc:	add    rsp,0x30
   14000cfd0:	pop    rbp
   14000cfd1:	ret    
   14000cfd2:	int3   
   14000cfd3:	rex push rbp
   14000cfd5:	sub    rsp,0x20
   14000cfd9:	mov    rbp,rdx
   14000cfdc:	mov    ecx,0xc
   14000cfe1:	call   0x140003770
   14000cfe6:	nop
   14000cfe7:	add    rsp,0x20
   14000cfeb:	pop    rbp
   14000cfec:	ret    
   14000cfed:	int3   
   14000cfee:	rex push rbp
   14000cff0:	sub    rsp,0x20
   14000cff4:	mov    rbp,rdx
   14000cff7:	mov    ecx,0xd
   14000cffc:	call   0x140003770
   14000d001:	nop
   14000d002:	add    rsp,0x20
   14000d006:	pop    rbp
   14000d007:	ret    
   14000d008:	int3   
   14000d009:	rex push rbp
   14000d00b:	sub    rsp,0x20
   14000d00f:	mov    rbp,rdx
   14000d012:	mov    ecx,0xa
   14000d017:	call   0x140003770
   14000d01c:	nop
   14000d01d:	add    rsp,0x20
   14000d021:	pop    rbp
   14000d022:	ret    
   14000d023:	int3   
   14000d024:	rex push rbp
   14000d026:	sub    rsp,0x20
   14000d02a:	mov    rbp,rdx
   14000d02d:	mov    ecx,0xa
   14000d032:	call   0x140003770
   14000d037:	nop
   14000d038:	add    rsp,0x20
   14000d03c:	pop    rbp
   14000d03d:	ret    
   14000d03e:	int3   
   14000d03f:	int3   
   14000d040:	int3   
   14000d041:	int3   
   14000d042:	int3   
   14000d043:	int3   
   14000d044:	rex push rbp
   14000d046:	sub    rsp,0x20
   14000d04a:	mov    rbp,rdx
   14000d04d:	mov    ecx,0xb
   14000d052:	call   0x140003770
   14000d057:	nop
   14000d058:	add    rsp,0x20
   14000d05c:	pop    rbp
   14000d05d:	ret    
   14000d05e:	int3   
