
9ff3e2a010bb96dcfbb0093558b6cbcd92604b84766b14b2ff41cf7fc642b048.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	test   ecx,ecx
   140001002:	jne    0x1400010ca
   140001008:	mov    r11,rsp
   14000100b:	mov    QWORD PTR [r11+0x10],rdx
   14000100f:	mov    QWORD PTR [r11+0x18],r8
   140001013:	mov    QWORD PTR [r11+0x20],r9
   140001017:	push   rbx
   140001018:	push   rdi
   140001019:	sub    rsp,0x448
   140001020:	mov    rax,QWORD PTR [rip+0x10fe1]        # 0x140012008
   140001027:	xor    rax,rsp
   14000102a:	mov    QWORD PTR [rsp+0x430],rax
   140001032:	mov    r9,rdx
   140001035:	mov    edx,0x400
   14000103a:	lea    rax,[r11+0x18]
   14000103e:	lea    rcx,[rsp+0x30]
   140001043:	lea    r8d,[rdx-0x1]
   140001047:	xor    edi,edi
   140001049:	mov    QWORD PTR [rsp+0x20],rax
   14000104e:	call   0x1400047c8
   140001053:	lea    rcx,[rip+0xecd6]        # 0x14000fd30
   14000105a:	call   QWORD PTR [rip+0xd028]        # 0x14000e088
   140001060:	mov    rbx,rax
   140001063:	mov    rax,QWORD PTR [rip+0x135a6]        # 0x140014610
   14000106a:	test   rax,rax
   14000106d:	jne    0x14000109b
   14000106f:	test   rbx,rbx
   140001072:	je     0x1400010be
   140001074:	lea    rdx,[rip+0xecc5]        # 0x14000fd40
   14000107b:	mov    rcx,rbx
   14000107e:	call   QWORD PTR [rip+0xcffc]        # 0x14000e080
   140001084:	mov    QWORD PTR [rip+0x13585],rax        # 0x140014610
   14000108b:	test   rax,rax
   14000108e:	jne    0x14000109b
   140001090:	mov    rcx,rbx
   140001093:	call   QWORD PTR [rip+0xcf7f]        # 0x14000e018
   140001099:	jmp    0x1400010be
   14000109b:	lea    r8,[rip+0xecb6]        # 0x14000fd58
   1400010a2:	lea    rdx,[rsp+0x30]
   1400010a7:	mov    r9d,0x10010
   1400010ad:	xor    ecx,ecx
   1400010af:	mov    DWORD PTR [rsp+0x28],0xbb8
   1400010b7:	mov    WORD PTR [rsp+0x20],di
   1400010bc:	call   rax
   1400010be:	mov    ecx,0x1
   1400010c3:	call   QWORD PTR [rip+0xcf37]        # 0x14000e000
   1400010c9:	int3   
   1400010ca:	ret    
   1400010cb:	int3   
   1400010cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400010d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400010d6:	push   rdi
   1400010d7:	sub    rsp,0x20
   1400010db:	mov    eax,DWORD PTR [rip+0x122d7]        # 0x1400133b8
   1400010e1:	mov    rdi,rdx
   1400010e4:	mov    rsi,rcx
   1400010e7:	xor    ebx,ebx
   1400010e9:	mov    r9,rcx
   1400010ec:	lea    r8,[rdx-0x4]
   1400010f0:	movsx  edx,al
   1400010f3:	mov    rcx,r9
   1400010f6:	call   0x140001ff0
   1400010fb:	mov    r9,rax
   1400010fe:	test   rax,rax
   140001101:	je     0x140001120
   140001103:	mov    eax,DWORD PTR [rip+0x122af]        # 0x1400133b8
   140001109:	mov    rcx,rsi
   14000110c:	cmp    eax,DWORD PTR [r9]
   14000110f:	cmove  rbx,r9
   140001113:	inc    r9
   140001116:	sub    rcx,r9
   140001119:	lea    r8,[rcx+rdi*1-0x4]
   14000111e:	jmp    0x1400010f0
   140001120:	mov    rsi,QWORD PTR [rsp+0x38]
   140001125:	mov    rax,rbx
   140001128:	mov    rbx,QWORD PTR [rsp+0x30]
   14000112d:	add    rsp,0x20
   140001131:	pop    rdi
   140001132:	ret    
   140001133:	int3   
   140001134:	mov    QWORD PTR [rsp+0x10],rbx
   140001139:	mov    QWORD PTR [rsp+0x18],rsi
   14000113e:	mov    QWORD PTR [rsp+0x20],rdi
   140001143:	push   rbp
   140001144:	push   r12
   140001146:	push   r13
   140001148:	push   r14
   14000114a:	push   r15
   14000114c:	mov    rbp,rsp
   14000114f:	sub    rsp,0x40
   140001153:	mov    r13,rcx
   140001156:	lea    r8,[rip+0xec13]        # 0x14000fd70
   14000115d:	lea    rdx,[rip+0x1329c]        # 0x140014400
   140001164:	lea    rcx,[rbp+0x30]
   140001168:	xor    r12d,r12d
   14000116b:	mov    QWORD PTR [rbp+0x30],r12
   14000116f:	call   0x140001a80
   140001174:	mov    ecx,r12d
   140001177:	test   eax,eax
   140001179:	lea    rdx,[rip+0xebf8]        # 0x14000fd78
   140001180:	sete   cl
   140001183:	call   0x140001000
   140001188:	mov    rcx,QWORD PTR [rbp+0x30]
   14000118c:	lea    r8d,[r12+0x2]
   140001191:	xor    edx,edx
   140001193:	call   0x14000265c
   140001198:	mov    rcx,QWORD PTR [rbp+0x30]
   14000119c:	call   0x140002550
   1400011a1:	mov    rcx,QWORD PTR [rbp+0x30]
   1400011a5:	movsxd r14,eax
   1400011a8:	lea    edi,[r14-0x104]
   1400011af:	test   edi,edi
   1400011b1:	cmovs  edi,r12d
   1400011b5:	xor    r8d,r8d
   1400011b8:	mov    edx,edi
   1400011ba:	call   0x14000265c
   1400011bf:	mov    r9,QWORD PTR [rbp+0x30]
   1400011c3:	lea    r15d,[r12+0x1]
   1400011c8:	mov    edx,r15d
   1400011cb:	mov    r8d,0x104
   1400011d1:	mov    rcx,r13
   1400011d4:	call   0x140002310
   1400011d9:	mov    rcx,r13
   1400011dc:	mov    rdx,rax
   1400011df:	call   0x1400010cc
   1400011e4:	mov    rbx,rax
   1400011e7:	test   rax,rax
   1400011ea:	je     0x14000120b
   1400011ec:	lea    rcx,[rbp-0x20]
   1400011f0:	lea    r8d,[r12+0x14]
   1400011f5:	mov    rdx,rax
   1400011f8:	call   0x140007580
   1400011fd:	movsxd rdi,edi
   140001200:	sub    rdi,r13
   140001203:	add    rdi,rbx
   140001206:	jmp    0x14000128d
   14000120b:	mov    ebx,0x4100000
   140001210:	mov    ecx,ebx
   140001212:	call   0x140001f38
   140001217:	mov    rcx,QWORD PTR [rbp+0x30]
   14000121b:	lea    edi,[r14-0x4100000]
   140001222:	test   edi,edi
   140001224:	mov    rsi,rax
   140001227:	cmovs  edi,r12d
   14000122b:	xor    r8d,r8d
   14000122e:	mov    edx,edi
   140001230:	call   0x14000265c
   140001235:	mov    r9,QWORD PTR [rbp+0x30]
   140001239:	mov    r8d,ebx
   14000123c:	mov    rdx,r15
   14000123f:	mov    rcx,rsi
   140001242:	call   0x140002310
   140001247:	mov    rcx,rsi
   14000124a:	mov    rdx,rax
   14000124d:	call   0x1400010cc
   140001252:	mov    ecx,r12d
   140001255:	lea    rdx,[rip+0xeb3c]        # 0x14000fd98
   14000125c:	test   rax,rax
   14000125f:	mov    rbx,rax
   140001262:	setne  cl
   140001265:	call   0x140001000
   14000126a:	lea    rcx,[rbp-0x20]
   14000126e:	mov    rdx,rbx
   140001271:	mov    r8d,0x14
   140001277:	call   0x140007580
   14000127c:	movsxd rdi,edi
   14000127f:	mov    rcx,rsi
   140001282:	sub    rdi,rsi
   140001285:	add    rdi,rbx
   140001288:	call   0x140001eb4
   14000128d:	sub    edi,DWORD PTR [rbp-0x10]
   140001290:	mov    rcx,QWORD PTR [rbp+0x30]
   140001294:	sub    edi,DWORD PTR [rbp-0x14]
   140001297:	sub    edi,0x104
   14000129d:	cmovs  edi,r12d
   1400012a1:	xor    r8d,r8d
   1400012a4:	mov    edx,edi
   1400012a6:	call   0x14000265c
   1400012ab:	mov    r9,QWORD PTR [rbp+0x30]
   1400012af:	mov    r8d,0x104
   1400012b5:	mov    rdx,r15
   1400012b8:	mov    rcx,r13
   1400012bb:	call   0x140002310
   1400012c0:	mov    ecx,r12d
   1400012c3:	lea    rdx,[rip+0xeaf6]        # 0x14000fdc0
   1400012ca:	test   rax,rax
   1400012cd:	mov    rbx,rax
   1400012d0:	setne  cl
   1400012d3:	call   0x140001000
   1400012d8:	lea    r11,[rbx+r13*1-0x1]
   1400012dd:	cmp    r11,r13
   1400012e0:	jb     0x1400012fc
   1400012e2:	movzx  eax,WORD PTR [rip+0xeaf3]        # 0x14000fddc
   1400012e9:	cmp    WORD PTR [r11],ax
   1400012ed:	je     0x1400012f9
   1400012ef:	sub    r11,r15
   1400012f2:	cmp    r11,r13
   1400012f5:	jae    0x1400012e9
   1400012f7:	jmp    0x1400012fc
   1400012f9:	mov    r12,r11
   1400012fc:	mov    rcx,QWORD PTR [rbp+0x30]
   140001300:	call   0x140002754
   140001305:	lea    r11,[rsp+0x40]
   14000130a:	mov    rax,r12
   14000130d:	mov    rbx,QWORD PTR [r11+0x38]
   140001311:	mov    rsi,QWORD PTR [r11+0x40]
   140001315:	mov    rdi,QWORD PTR [r11+0x48]
   140001319:	mov    rsp,r11
   14000131c:	pop    r15
   14000131e:	pop    r14
   140001320:	pop    r13
   140001322:	pop    r12
   140001324:	pop    rbp
   140001325:	ret    
   140001326:	int3   
   140001327:	int3   
   140001328:	mov    QWORD PTR [rsp+0x8],rbx
   14000132d:	mov    QWORD PTR [rsp+0x10],rsi
   140001332:	push   rdi
   140001333:	sub    rsp,0x40
   140001337:	mov    rbx,rdx
   14000133a:	mov    rdi,rcx
   14000133d:	call   QWORD PTR [rip+0xcce5]        # 0x14000e028
   140001343:	and    QWORD PTR [rbx],0x0
   140001347:	mov    DWORD PTR [rsp+0x30],0x2
   14000134f:	mov    esi,0x1
   140001354:	mov    r8,rax
   140001357:	mov    rcx,rax
   14000135a:	mov    r9,rbx
   14000135d:	mov    rdx,rdi
   140001360:	mov    DWORD PTR [rsp+0x28],esi
   140001364:	and    DWORD PTR [rsp+0x20],0x0
   140001369:	call   QWORD PTR [rip+0xcd29]        # 0x14000e098
   14000136f:	mov    ebx,eax
   140001371:	test   eax,eax
   140001373:	jne    0x140001381
   140001375:	call   QWORD PTR [rip+0xccfd]        # 0x14000e078
   14000137b:	cmp    eax,0x6
   14000137e:	cmove  ebx,esi
   140001381:	mov    rsi,QWORD PTR [rsp+0x58]
   140001386:	mov    eax,ebx
   140001388:	mov    rbx,QWORD PTR [rsp+0x50]
   14000138d:	add    rsp,0x40
   140001391:	pop    rdi
   140001392:	ret    
   140001393:	int3   
   140001394:	sub    rsp,0x28
   140001398:	test   ecx,ecx
   14000139a:	jne    0x1400013ae
   14000139c:	mov    ecx,DWORD PTR [rip+0x13266]        # 0x140014608
   1400013a2:	test   ecx,ecx
   1400013a4:	je     0x1400013ae
   1400013a6:	xor    edx,edx
   1400013a8:	call   QWORD PTR [rip+0xcc8a]        # 0x14000e038
   1400013ae:	mov    eax,0x1
   1400013b3:	add    rsp,0x28
   1400013b7:	ret    
   1400013b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400013bd:	mov    QWORD PTR [rsp+0x18],rdi
   1400013c2:	push   rbp
   1400013c3:	lea    rbp,[rsp-0x80]
   1400013c8:	sub    rsp,0x180
   1400013cf:	mov    rax,QWORD PTR [rip+0x10c32]        # 0x140012008
   1400013d6:	xor    rax,rsp
   1400013d9:	mov    QWORD PTR [rbp+0x70],rax
   1400013dd:	mov    rdi,rcx
   1400013e0:	xor    edx,edx
   1400013e2:	xor    ecx,ecx
   1400013e4:	call   QWORD PTR [rip+0xcc7e]        # 0x14000e068
   1400013ea:	lea    r8,[rbp-0x20]
   1400013ee:	mov    r9d,0x90
   1400013f4:	mov    rbx,rax
   1400013f7:	lea    rax,[rsp+0x50]
   1400013fc:	mov    edx,0x9
   140001401:	mov    rcx,rbx
   140001404:	mov    QWORD PTR [rsp+0x20],rax
   140001409:	call   QWORD PTR [rip+0xcc49]        # 0x14000e058
   14000140f:	test   eax,eax
   140001411:	je     0x140001424
   140001413:	cmp    DWORD PTR [rsp+0x50],0x90
   14000141b:	jne    0x140001424
   14000141d:	mov    ecx,0x1
   140001422:	jmp    0x140001426
   140001424:	xor    ecx,ecx
   140001426:	lea    rdx,[rip+0xe9bb]        # 0x14000fde8
   14000142d:	call   0x140001000
   140001432:	or     DWORD PTR [rbp-0x10],0x3000
   140001439:	lea    r8,[rbp-0x20]
   14000143d:	mov    r9d,0x90
   140001443:	mov    edx,0x9
   140001448:	mov    rcx,rbx
   14000144b:	call   QWORD PTR [rip+0xcbbf]        # 0x14000e010
   140001451:	lea    rdx,[rip+0xe9b0]        # 0x14000fe08
   140001458:	mov    ecx,eax
   14000145a:	call   0x140001000
   14000145f:	xor    edx,edx
   140001461:	lea    rcx,[rsp+0x70]
   140001466:	lea    r8d,[rdx+0x68]
   14000146a:	call   0x140004a30
   14000146f:	mov    ecx,0xfffffff6
   140001474:	mov    DWORD PTR [rsp+0x70],0x68
   14000147c:	call   QWORD PTR [rip+0xcbee]        # 0x14000e070
   140001482:	lea    rdx,[rbp-0x40]
   140001486:	mov    rcx,rax
   140001489:	call   0x140001328
   14000148e:	lea    rdx,[rip+0xe993]        # 0x14000fe28
   140001495:	mov    ecx,eax
   140001497:	call   0x140001000
   14000149c:	mov    ecx,0xfffffff5
   1400014a1:	call   QWORD PTR [rip+0xcbc9]        # 0x14000e070
   1400014a7:	lea    rdx,[rbp-0x38]
   1400014ab:	mov    rcx,rax
   1400014ae:	call   0x140001328
   1400014b3:	lea    rdx,[rip+0xe98e]        # 0x14000fe48
   1400014ba:	mov    ecx,eax
   1400014bc:	call   0x140001000
   1400014c1:	mov    ecx,0xfffffff4
   1400014c6:	call   QWORD PTR [rip+0xcba4]        # 0x14000e070
   1400014cc:	lea    rdx,[rbp-0x30]
   1400014d0:	mov    rcx,rax
   1400014d3:	call   0x140001328
   1400014d8:	lea    rdx,[rip+0xe989]        # 0x14000fe68
   1400014df:	mov    ecx,eax
   1400014e1:	call   0x140001000
   1400014e6:	lea    rcx,[rip+0xfffffffffffffea7]        # 0x140001394
   1400014ed:	mov    edx,0x1
   1400014f2:	mov    DWORD PTR [rbp-0x54],0x100
   1400014f9:	call   QWORD PTR [rip+0xcb91]        # 0x14000e090
   1400014ff:	lea    r11,[rsp+0x58]
   140001504:	mov    QWORD PTR [rsp+0x48],r11
   140001509:	lea    rax,[rsp+0x70]
   14000150e:	xor    r9d,r9d
   140001511:	mov    QWORD PTR [rsp+0x40],rax
   140001516:	and    QWORD PTR [rsp+0x38],0x0
   14000151c:	and    QWORD PTR [rsp+0x30],0x0
   140001522:	and    DWORD PTR [rsp+0x28],0x0
   140001527:	xor    r8d,r8d
   14000152a:	mov    rdx,rdi
   14000152d:	xor    ecx,ecx
   14000152f:	mov    DWORD PTR [rsp+0x20],0x1
   140001537:	call   QWORD PTR [rip+0xcae3]        # 0x14000e020
   14000153d:	lea    rdx,[rip+0xe944]        # 0x14000fe88
   140001544:	mov    r8,rdi
   140001547:	mov    ecx,eax
   140001549:	call   0x140001000
   14000154e:	mov    r11d,DWORD PTR [rsp+0x68]
   140001553:	mov    rdx,QWORD PTR [rsp+0x58]
   140001558:	mov    rcx,rbx
   14000155b:	mov    DWORD PTR [rip+0x130a6],r11d        # 0x140014608
   140001562:	call   QWORD PTR [rip+0xcad8]        # 0x14000e040
   140001568:	mov    rcx,QWORD PTR [rsp+0x60]
   14000156d:	call   QWORD PTR [rip+0xcb2d]        # 0x14000e0a0
   140001573:	mov    rcx,QWORD PTR [rsp+0x58]
   140001578:	or     edx,0xffffffff
   14000157b:	call   QWORD PTR [rip+0xcaaf]        # 0x14000e030
   140001581:	mov    rcx,QWORD PTR [rsp+0x58]
   140001586:	lea    rdx,[rsp+0x50]
   14000158b:	call   QWORD PTR [rip+0xcab7]        # 0x14000e048
   140001591:	lea    rdx,[rip+0xe918]        # 0x14000feb0
   140001598:	mov    ecx,eax
   14000159a:	call   0x140001000
   14000159f:	mov    ecx,DWORD PTR [rsp+0x50]
   1400015a3:	call   QWORD PTR [rip+0xca57]        # 0x14000e000
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	mov    rax,rsp
   1400015af:	mov    QWORD PTR [rax+0x8],rbx
   1400015b3:	mov    QWORD PTR [rax+0x10],rbp
   1400015b7:	mov    QWORD PTR [rax+0x18],rsi
   1400015bb:	mov    QWORD PTR [rax+0x20],rdi
   1400015bf:	push   r12
   1400015c1:	push   r13
   1400015c3:	push   r14
   1400015c5:	sub    rsp,0x370
   1400015cc:	mov    rax,QWORD PTR [rip+0x10a35]        # 0x140012008
   1400015d3:	xor    rax,rsp
   1400015d6:	mov    QWORD PTR [rsp+0x360],rax
   1400015de:	call   QWORD PTR [rip+0xca24]        # 0x14000e008
   1400015e4:	mov    edi,0x22
   1400015e9:	cmp    WORD PTR [rax],di
   1400015ec:	je     0x1400015f3
   1400015ee:	lea    ecx,[rdi-0x2]
   1400015f1:	jmp    0x1400015fa
   1400015f3:	movzx  ecx,di
   1400015f6:	add    rax,0x4
   1400015fa:	movzx  edx,cx
   1400015fd:	mov    rcx,rax
   140001600:	call   0x140001ad4
   140001605:	xor    esi,esi
   140001607:	lea    r12d,[rsi+0x8]
   14000160b:	test   rax,rax
   14000160e:	jne    0x140001619
   140001610:	lea    r13,[rip+0xe7c9]        # 0x14000fde0
   140001617:	jmp    0x14000163c
   140001619:	lea    r13,[rax+0x2]
   14000161d:	jmp    0x140001632
   14000161f:	mov    edx,r12d
   140001622:	movzx  ecx,ax
   140001625:	call   0x140002330
   14000162a:	test   eax,eax
   14000162c:	je     0x14000163c
   14000162e:	add    r13,0x2
   140001632:	movzx  eax,WORD PTR [r13+0x0]
   140001637:	test   ax,ax
   14000163a:	jne    0x14000161f
   14000163c:	lea    r14,[rip+0x12dbd]        # 0x140014400
   140001643:	mov    ebp,0x104
   140001648:	xor    ecx,ecx
   14000164a:	mov    rdx,r14
   14000164d:	mov    r8d,ebp
   140001650:	call   QWORD PTR [rip+0xc9fa]        # 0x14000e050
   140001656:	cmp    WORD PTR [rip+0x12da3],di        # 0x140014400
   14000165d:	mov    edx,eax
   14000165f:	jne    0x14000166c
   140001661:	lea    r14,[rip+0x12d9a]        # 0x140014402
   140001668:	sub    rdx,0x2
   14000166c:	lea    rcx,[rsp+0x250]
   140001674:	mov    WORD PTR [r14+rdx*2],si
   140001679:	mov    BYTE PTR [rip+0x11d38],0x50        # 0x1400133b8
   140001680:	call   0x140001134
   140001685:	mov    ecx,esi
   140001687:	lea    rdx,[rip+0xe942]        # 0x14000ffd0
   14000168e:	test   rax,rax
   140001691:	mov    rbx,rax
   140001694:	setne  cl
   140001697:	call   0x140001000
   14000169c:	lea    rax,[rbx+0x104]
   1400016a3:	mov    rdi,rsi
   1400016a6:	mov    rcx,rbx
   1400016a9:	cmp    rbx,rax
   1400016ac:	jae    0x1400016c5
   1400016ae:	cmp    BYTE PTR [rcx],0xd
   1400016b1:	je     0x1400016c2
   1400016b3:	cmp    BYTE PTR [rcx],0xa
   1400016b6:	je     0x1400016c2
   1400016b8:	inc    rcx
   1400016bb:	cmp    rcx,rax
   1400016be:	jb     0x1400016ae
   1400016c0:	jmp    0x1400016c5
   1400016c2:	mov    rdi,rcx
   1400016c5:	mov    ecx,esi
   1400016c7:	test   rdi,rdi
   1400016ca:	lea    rdx,[rip+0xe917]        # 0x14000ffe8
   1400016d1:	setne  cl
   1400016d4:	call   0x140001000
   1400016d9:	mov    BYTE PTR [rdi],sil
   1400016dc:	lea    rax,[rsp+0x40]
   1400016e1:	sub    edi,ebx
   1400016e3:	mov    r8,rbx
   1400016e6:	mov    edx,r12d
   1400016e9:	mov    ecx,0xfde9
   1400016ee:	mov    r9d,edi
   1400016f1:	mov    DWORD PTR [rsp+0x28],ebp
   1400016f5:	mov    QWORD PTR [rsp+0x20],rax
   1400016fa:	call   QWORD PTR [rip+0xc960]        # 0x14000e060
   140001700:	mov    ecx,esi
   140001702:	test   eax,eax
   140001704:	lea    rdx,[rip+0xe90d]        # 0x140010018
   14000170b:	movsxd rdi,eax
   14000170e:	setne  cl
   140001711:	call   0x140001000
   140001716:	mov    WORD PTR [rsp+rdi*2+0x40],si
   14000171b:	lea    rbp,[rsp+0x40]
   140001720:	cmp    WORD PTR [rsp+0x40],si
   140001725:	je     0x140001741
   140001727:	movzx  ecx,WORD PTR [rbp+0x0]
   14000172b:	mov    edx,r12d
   14000172e:	call   0x140002330
   140001733:	test   eax,eax
   140001735:	je     0x140001741
   140001737:	add    rbp,0x2
   14000173b:	cmp    WORD PTR [rbp+0x0],si
   14000173f:	jne    0x140001727
   140001741:	cmp    WORD PTR [rbp+0x0],0x23
   140001746:	mov    ecx,esi
   140001748:	lea    rdx,[rip+0xe8f9]        # 0x140010048
   14000174f:	sete   cl
   140001752:	call   0x140001000
   140001757:	jmp    0x140001768
   140001759:	mov    edx,r12d
   14000175c:	movzx  ecx,ax
   14000175f:	call   0x140002330
   140001764:	test   eax,eax
   140001766:	je     0x140001775
   140001768:	add    rbp,0x2
   14000176c:	movzx  eax,WORD PTR [rbp+0x0]
   140001770:	test   ax,ax
   140001773:	jne    0x140001759
   140001775:	cmp    WORD PTR [rbp+0x0],0x21
   14000177a:	mov    ecx,esi
   14000177c:	lea    rdx,[rip+0xe8f5]        # 0x140010078
   140001783:	sete   cl
   140001786:	call   0x140001000
   14000178b:	jmp    0x14000179c
   14000178d:	mov    edx,r12d
   140001790:	movzx  ecx,ax
   140001793:	call   0x140002330
   140001798:	test   eax,eax
   14000179a:	je     0x1400017a9
   14000179c:	add    rbp,0x2
   1400017a0:	movzx  eax,WORD PTR [rbp+0x0]
   1400017a4:	test   ax,ax
   1400017a7:	jne    0x14000178d
   1400017a9:	lea    rdx,[rip+0xe728]        # 0x14000fed8
   1400017b0:	mov    rcx,rbp
   1400017b3:	call   QWORD PTR [rip+0xcacf]        # 0x14000e288
   1400017b9:	mov    ebx,0x22
   1400017be:	mov    r12,rax
   1400017c1:	test   rax,rax
   1400017c4:	je     0x1400017f8
   1400017c6:	cmp    WORD PTR [rax+0x8],si
   1400017ca:	je     0x1400017f8
   1400017cc:	cmp    WORD PTR [rax+0x8],bx
   1400017d0:	je     0x1400017f8
   1400017d2:	movzx  ecx,WORD PTR [rax+0x8]
   1400017d6:	mov    edx,0x8
   1400017db:	call   0x140002330
   1400017e0:	test   eax,eax
   1400017e2:	jne    0x1400017f8
   1400017e4:	lea    rdx,[rip+0xe6ed]        # 0x14000fed8
   1400017eb:	lea    rcx,[r12+0x8]
   1400017f0:	call   QWORD PTR [rip+0xca92]        # 0x14000e288
   1400017f6:	jmp    0x1400017be
   1400017f8:	mov    ecx,esi
   1400017fa:	test   r12,r12
   1400017fd:	lea    rdx,[rip+0xe6e4]        # 0x14000fee8
   140001804:	setne  cl
   140001807:	call   0x140001000
   14000180c:	add    r12,0x8
   140001810:	cmp    WORD PTR [rbp+0x0],bx
   140001814:	jne    0x140001839
   140001816:	cmp    WORD PTR [r12],bx
   14000181b:	mov    ecx,esi
   14000181d:	lea    rdx,[rip+0xe70c]        # 0x14000ff30
   140001824:	sete   cl
   140001827:	call   0x140001000
   14000182c:	mov    WORD PTR [r12],si
   140001831:	add    r12,0x2
   140001835:	add    rbp,0x2
   140001839:	cmp    WORD PTR [r12],bx
   14000183e:	mov    ecx,esi
   140001840:	lea    rdx,[rip+0xe739]        # 0x14000ff80
   140001847:	setne  cl
   14000184a:	call   0x140001000
   14000184f:	cmp    WORD PTR [r12],si
   140001854:	je     0x140001885
   140001856:	movzx  ecx,WORD PTR [r12]
   14000185b:	mov    edx,0x8
   140001860:	call   0x140002330
   140001865:	test   eax,eax
   140001867:	je     0x140001885
   140001869:	mov    WORD PTR [r12],si
   14000186e:	jmp    0x140001881
   140001870:	mov    edx,0x8
   140001875:	movzx  ecx,ax
   140001878:	call   0x140002330
   14000187d:	test   eax,eax
   14000187f:	je     0x14000188f
   140001881:	add    r12,0x2
   140001885:	movzx  eax,WORD PTR [r12]
   14000188a:	test   ax,ax
   14000188d:	jne    0x140001870
   14000188f:	mov    ecx,esi
   140001891:	test   rbp,rbp
   140001894:	lea    rdx,[rip+0xe815]        # 0x1400100b0
   14000189b:	setne  cl
   14000189e:	call   0x140001000
   1400018a3:	mov    ecx,esi
   1400018a5:	test   r12,r12
   1400018a8:	lea    rdx,[rip+0xe831]        # 0x1400100e0
   1400018af:	setne  cl
   1400018b2:	call   0x140001000
   1400018b7:	xor    eax,eax
   1400018b9:	or     r9,0xffffffffffffffff
   1400018bd:	mov    rcx,r9
   1400018c0:	mov    rdi,r12
   1400018c3:	lea    edx,[rax+0x2]
   1400018c6:	repnz scas ax,WORD PTR es:[rdi]
   1400018c9:	mov    rdi,rbp
   1400018cc:	not    rcx
   1400018cf:	lea    r8,[rcx-0x1]
   1400018d3:	mov    rcx,r9
   1400018d6:	repnz scas ax,WORD PTR es:[rdi]
   1400018d9:	mov    rdi,r13
   1400018dc:	not    rcx
   1400018df:	dec    rcx
   1400018e2:	add    r8,rcx
   1400018e5:	mov    rcx,r9
   1400018e8:	repnz scas ax,WORD PTR es:[rdi]
   1400018eb:	mov    rdi,r14
   1400018ee:	not    rcx
   1400018f1:	dec    rcx
   1400018f4:	add    r8,rcx
   1400018f7:	mov    rcx,r9
   1400018fa:	repnz scas ax,WORD PTR es:[rdi]
   1400018fd:	not    rcx
   140001900:	lea    rbx,[r8+rcx*1+0x7]
   140001905:	mov    rcx,rbx
   140001908:	call   0x140001ef4
   14000190d:	lea    rdx,[rip+0xe80c]        # 0x140010120
   140001914:	test   rax,rax
   140001917:	mov    rdi,rax
   14000191a:	setne  sil
   14000191e:	mov    ecx,esi
   140001920:	call   0x140001000
   140001925:	mov    QWORD PTR [rsp+0x38],r13
   14000192a:	mov    QWORD PTR [rsp+0x30],r14
   14000192f:	lea    r9,[rip+0xe822]        # 0x140010158
   140001936:	mov    r8,rbx
   140001939:	mov    rdx,rbx
   14000193c:	mov    rcx,rdi
   14000193f:	mov    QWORD PTR [rsp+0x28],r12
   140001944:	mov    QWORD PTR [rsp+0x20],rbp
   140001949:	call   0x14000200c
   14000194e:	mov    rcx,rdi
   140001951:	call   0x1400013b8
   140001956:	int3   
   140001957:	int3   
   140001958:	sub    rsp,0x28
   14000195c:	call   0x1400015ac
   140001961:	int3   
   140001962:	int3   
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	int3   
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001980:	cmp    rcx,QWORD PTR [rip+0x10681]        # 0x140012008
   140001987:	jne    0x14000199a
   140001989:	rol    rcx,0x10
   14000198d:	test   cx,0xffff
   140001992:	jne    0x140001996
   140001994:	repz ret 
   140001996:	ror    rcx,0x10
   14000199a:	jmp    0x14000296c
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400019a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400019aa:	push   rdi
   1400019ab:	push   r12
   1400019ad:	push   r13
   1400019af:	sub    rsp,0x30
   1400019b3:	mov    QWORD PTR [rsp+0x20],rsp
   1400019b8:	mov    r12d,r8d
   1400019bb:	mov    rdi,rdx
   1400019be:	mov    rsi,rcx
   1400019c1:	xor    r13d,r13d
   1400019c4:	mov    eax,r13d
   1400019c7:	test   rcx,rcx
   1400019ca:	setne  al
   1400019cd:	test   eax,eax
   1400019cf:	jne    0x1400019e8
   1400019d1:	call   0x140003564
   1400019d6:	mov    DWORD PTR [rax],0x16
   1400019dc:	call   0x1400034fc
   1400019e1:	xor    eax,eax
   1400019e3:	jmp    0x140001a69
   1400019e8:	mov    eax,r13d
   1400019eb:	test   rdx,rdx
   1400019ee:	setne  al
   1400019f1:	test   eax,eax
   1400019f3:	je     0x1400019d1
   1400019f5:	mov    eax,r13d
   1400019f8:	cmp    WORD PTR [rdx],r13w
   1400019fc:	setne  al
   1400019ff:	test   eax,eax
   140001a01:	je     0x1400019d1
   140001a03:	call   0x1400031ac
   140001a08:	mov    rbx,rax
   140001a0b:	mov    QWORD PTR [rsp+0x50],rax
   140001a10:	test   rax,rax
   140001a13:	jne    0x140001a22
   140001a15:	call   0x140003564
   140001a1a:	mov    DWORD PTR [rax],0x18
   140001a20:	jmp    0x1400019e1
   140001a22:	cmp    WORD PTR [rsi],r13w
   140001a26:	jne    0x140001a4a
   140001a28:	call   0x140003564
   140001a2d:	mov    DWORD PTR [rax],0x16
   140001a33:	lea    rdx,[rip+0xc]        # 0x140001a46
   140001a3a:	mov    rcx,QWORD PTR [rsp+0x20]
   140001a3f:	call   0x140003600
   140001a44:	nop
   140001a45:	nop
   140001a46:	xor    eax,eax
   140001a48:	jmp    0x140001a69
   140001a4a:	mov    r9,rax
   140001a4d:	mov    r8d,r12d
   140001a50:	mov    rdx,rdi
   140001a53:	mov    rcx,rsi
   140001a56:	call   0x140002ecc
   140001a5b:	mov    rdi,rax
   140001a5e:	mov    rcx,rbx
   140001a61:	call   0x140002e60
   140001a66:	mov    rax,rdi
   140001a69:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a73:	add    rsp,0x30
   140001a77:	pop    r13
   140001a79:	pop    r12
   140001a7b:	pop    rdi
   140001a7c:	ret    
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	rex push rbx
   140001a82:	sub    rsp,0x20
   140001a86:	mov    rax,r8
   140001a89:	mov    r9,rdx
   140001a8c:	mov    rbx,rcx
   140001a8f:	test   rcx,rcx
   140001a92:	jne    0x140001aa9
   140001a94:	call   0x140003564
   140001a99:	mov    ebx,0x16
   140001a9e:	mov    DWORD PTR [rax],ebx
   140001aa0:	call   0x1400034fc
   140001aa5:	mov    eax,ebx
   140001aa7:	jmp    0x140001acd
   140001aa9:	mov    r8d,0x80
   140001aaf:	mov    rdx,rax
   140001ab2:	mov    rcx,r9
   140001ab5:	call   0x1400019a0
   140001aba:	mov    QWORD PTR [rbx],rax
   140001abd:	test   rax,rax
   140001ac0:	je     0x140001ac6
   140001ac2:	xor    eax,eax
   140001ac4:	jmp    0x140001acd
   140001ac6:	call   0x140003564
   140001acb:	mov    eax,DWORD PTR [rax]
   140001acd:	add    rsp,0x20
   140001ad1:	pop    rbx
   140001ad2:	ret    
   140001ad3:	int3   
   140001ad4:	jmp    0x140001adf
   140001ad6:	cmp    ax,dx
   140001ad9:	je     0x140001aec
   140001adb:	add    rcx,0x2
   140001adf:	movzx  eax,WORD PTR [rcx]
   140001ae2:	test   ax,ax
   140001ae5:	jne    0x140001ad6
   140001ae7:	cmp    ax,dx
   140001aea:	jne    0x140001af0
   140001aec:	mov    rax,rcx
   140001aef:	ret    
   140001af0:	xor    eax,eax
   140001af2:	ret    
   140001af3:	int3   
   140001af4:	rex push rbx
   140001af6:	sub    rsp,0x20
   140001afa:	mov    ebx,ecx
   140001afc:	lea    rcx,[rip+0xc83d]        # 0x14000e340
   140001b03:	call   QWORD PTR [rip+0xc59f]        # 0x14000e0a8
   140001b09:	test   rax,rax
   140001b0c:	je     0x140001b27
   140001b0e:	lea    rdx,[rip+0xc81b]        # 0x14000e330
   140001b15:	mov    rcx,rax
   140001b18:	call   QWORD PTR [rip+0xc562]        # 0x14000e080
   140001b1e:	test   rax,rax
   140001b21:	je     0x140001b27
   140001b23:	mov    ecx,ebx
   140001b25:	call   rax
   140001b27:	add    rsp,0x20
   140001b2b:	pop    rbx
   140001b2c:	ret    
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	rex push rbx
   140001b32:	sub    rsp,0x20
   140001b36:	mov    ebx,ecx
   140001b38:	call   0x140001af4
   140001b3d:	mov    ecx,ebx
   140001b3f:	call   QWORD PTR [rip+0xc4bb]        # 0x14000e000
   140001b45:	int3   
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	mov    ecx,0x8
   140001b4d:	jmp    0x140003870
   140001b52:	int3   
   140001b53:	int3   
   140001b54:	mov    ecx,0x8
   140001b59:	jmp    0x140003770
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x20
   140001b66:	call   0x140003ba8
   140001b6b:	mov    rcx,rax
   140001b6e:	mov    rbx,rax
   140001b71:	call   0x140003b6c
   140001b76:	mov    rcx,rbx
   140001b79:	call   0x140003304
   140001b7e:	mov    rcx,rbx
   140001b81:	call   0x140003b64
   140001b86:	mov    rcx,rbx
   140001b89:	call   0x140003b5c
   140001b8e:	mov    rcx,rbx
   140001b91:	call   0x1400038f8
   140001b96:	mov    rcx,rbx
   140001b99:	add    rsp,0x20
   140001b9d:	pop    rbx
   140001b9e:	jmp    0x1400038d8
   140001ba3:	int3   
   140001ba4:	cmp    rcx,rdx
   140001ba7:	jae    0x140001bd6
   140001ba9:	mov    QWORD PTR [rsp+0x8],rbx
   140001bae:	push   rdi
   140001baf:	sub    rsp,0x20
   140001bb3:	mov    rdi,rdx
   140001bb6:	mov    rbx,rcx
   140001bb9:	mov    rax,QWORD PTR [rbx]
   140001bbc:	test   rax,rax
   140001bbf:	je     0x140001bc3
   140001bc1:	call   rax
   140001bc3:	add    rbx,0x8
   140001bc7:	cmp    rbx,rdi
   140001bca:	jb     0x140001bb9
   140001bcc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bd1:	add    rsp,0x20
   140001bd5:	pop    rdi
   140001bd6:	ret    
   140001bd7:	int3   
   140001bd8:	mov    QWORD PTR [rsp+0x8],rbx
   140001bdd:	push   rdi
   140001bde:	sub    rsp,0x20
   140001be2:	xor    eax,eax
   140001be4:	mov    rdi,rdx
   140001be7:	mov    rbx,rcx
   140001bea:	cmp    rcx,rdx
   140001bed:	jae    0x140001c06
   140001bef:	test   eax,eax
   140001bf1:	jne    0x140001c06
   140001bf3:	mov    rcx,QWORD PTR [rbx]
   140001bf6:	test   rcx,rcx
   140001bf9:	je     0x140001bfd
   140001bfb:	call   rcx
   140001bfd:	add    rbx,0x8
   140001c01:	cmp    rbx,rdi
   140001c04:	jb     0x140001bef
   140001c06:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c0b:	add    rsp,0x20
   140001c0f:	pop    rdi
   140001c10:	ret    
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	mov    QWORD PTR [rsp+0x8],rbx
   140001c19:	push   rdi
   140001c1a:	sub    rsp,0x20
   140001c1e:	cmp    QWORD PTR [rip+0x13c52],0x0        # 0x140015878
   140001c26:	mov    ebx,ecx
   140001c28:	je     0x140001c42
   140001c2a:	lea    rcx,[rip+0x13c47]        # 0x140015878
   140001c31:	call   0x140004190
   140001c36:	test   eax,eax
   140001c38:	je     0x140001c42
   140001c3a:	mov    ecx,ebx
   140001c3c:	call   QWORD PTR [rip+0x13c36]        # 0x140015878
   140001c42:	call   0x1400040cc
   140001c47:	lea    rdx,[rip+0xc682]        # 0x14000e2d0
   140001c4e:	lea    rcx,[rip+0xc653]        # 0x14000e2a8
   140001c55:	call   0x140001bd8
   140001c5a:	test   eax,eax
   140001c5c:	jne    0x140001cb8
   140001c5e:	lea    rcx,[rip+0x242f]        # 0x140004094
   140001c65:	call   0x140004044
   140001c6a:	lea    rbx,[rip+0xc627]        # 0x14000e298
   140001c71:	lea    rdi,[rip+0xc628]        # 0x14000e2a0
   140001c78:	jmp    0x140001c88
   140001c7a:	mov    rax,QWORD PTR [rbx]
   140001c7d:	test   rax,rax
   140001c80:	je     0x140001c84
   140001c82:	call   rax
   140001c84:	add    rbx,0x8
   140001c88:	cmp    rbx,rdi
   140001c8b:	jb     0x140001c7a
   140001c8d:	cmp    QWORD PTR [rip+0x13beb],0x0        # 0x140015880
   140001c95:	je     0x140001cb6
   140001c97:	lea    rcx,[rip+0x13be2]        # 0x140015880
   140001c9e:	call   0x140004190
   140001ca3:	test   eax,eax
   140001ca5:	je     0x140001cb6
   140001ca7:	xor    r8d,r8d
   140001caa:	xor    ecx,ecx
   140001cac:	lea    edx,[r8+0x2]
   140001cb0:	call   QWORD PTR [rip+0x13bca]        # 0x140015880
   140001cb6:	xor    eax,eax
   140001cb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cbd:	add    rsp,0x20
   140001cc1:	pop    rdi
   140001cc2:	ret    
   140001cc3:	int3   
   140001cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140001cc9:	mov    QWORD PTR [rsp+0x10],rsi
   140001cce:	mov    DWORD PTR [rsp+0x18],r8d
   140001cd3:	push   rdi
   140001cd4:	push   r12
   140001cd6:	push   r13
   140001cd8:	push   r14
   140001cda:	push   r15
   140001cdc:	sub    rsp,0x40
   140001ce0:	mov    r12d,r8d
   140001ce3:	mov    ebx,edx
   140001ce5:	mov    r15d,ecx
   140001ce8:	mov    ecx,0x8
   140001ced:	call   0x140003870
   140001cf2:	nop
   140001cf3:	cmp    DWORD PTR [rip+0x11716],0x1        # 0x140013410
   140001cfa:	je     0x140001e01
   140001d00:	mov    DWORD PTR [rip+0x11702],0x1        # 0x14001340c
   140001d0a:	mov    BYTE PTR [rip+0x116f7],r12b        # 0x140013408
   140001d11:	test   ebx,ebx
   140001d13:	jne    0x140001ded
   140001d19:	mov    rcx,QWORD PTR [rip+0x13b48]        # 0x140015868
   140001d20:	call   QWORD PTR [rip+0xc38a]        # 0x14000e0b0
   140001d26:	mov    rsi,rax
   140001d29:	mov    QWORD PTR [rsp+0x30],rax
   140001d2e:	test   rax,rax
   140001d31:	je     0x140001dda
   140001d37:	mov    rcx,QWORD PTR [rip+0x13b22]        # 0x140015860
   140001d3e:	call   QWORD PTR [rip+0xc36c]        # 0x14000e0b0
   140001d44:	mov    rdi,rax
   140001d47:	mov    QWORD PTR [rsp+0x20],rax
   140001d4c:	mov    r14,rsi
   140001d4f:	mov    QWORD PTR [rsp+0x28],rsi
   140001d54:	mov    r13,rax
   140001d57:	mov    QWORD PTR [rsp+0x38],rax
   140001d5c:	sub    rdi,0x8
   140001d60:	mov    QWORD PTR [rsp+0x20],rdi
   140001d65:	cmp    rdi,rsi
   140001d68:	jb     0x140001dda
   140001d6a:	call   0x140003ba8
   140001d6f:	cmp    QWORD PTR [rdi],rax
   140001d72:	jne    0x140001d76
   140001d74:	jmp    0x140001d5c
   140001d76:	cmp    rdi,rsi
   140001d79:	jb     0x140001dda
   140001d7b:	mov    rcx,QWORD PTR [rdi]
   140001d7e:	call   QWORD PTR [rip+0xc32c]        # 0x14000e0b0
   140001d84:	mov    rbx,rax
   140001d87:	call   0x140003ba8
   140001d8c:	mov    QWORD PTR [rdi],rax
   140001d8f:	call   rbx
   140001d91:	mov    rcx,QWORD PTR [rip+0x13ad0]        # 0x140015868
   140001d98:	call   QWORD PTR [rip+0xc312]        # 0x14000e0b0
   140001d9e:	mov    rbx,rax
   140001da1:	mov    rcx,QWORD PTR [rip+0x13ab8]        # 0x140015860
   140001da8:	call   QWORD PTR [rip+0xc302]        # 0x14000e0b0
   140001dae:	cmp    r14,rbx
   140001db1:	jne    0x140001db8
   140001db3:	cmp    r13,rax
   140001db6:	je     0x140001d74
   140001db8:	mov    r14,rbx
   140001dbb:	mov    QWORD PTR [rsp+0x28],rbx
   140001dc0:	mov    rsi,rbx
   140001dc3:	mov    QWORD PTR [rsp+0x30],rbx
   140001dc8:	mov    r13,rax
   140001dcb:	mov    QWORD PTR [rsp+0x38],rax
   140001dd0:	mov    rdi,rax
   140001dd3:	mov    QWORD PTR [rsp+0x20],rax
   140001dd8:	jmp    0x140001d74
   140001dda:	lea    rdx,[rip+0xc50f]        # 0x14000e2f0
   140001de1:	lea    rcx,[rip+0xc4f0]        # 0x14000e2d8
   140001de8:	call   0x140001ba4
   140001ded:	lea    rdx,[rip+0xc50c]        # 0x14000e300
   140001df4:	lea    rcx,[rip+0xc4fd]        # 0x14000e2f8
   140001dfb:	call   0x140001ba4
   140001e00:	nop
   140001e01:	test   r12d,r12d
   140001e04:	je     0x140001e15
   140001e06:	mov    ecx,0x8
   140001e0b:	call   0x140003770
   140001e10:	test   r12d,r12d
   140001e13:	jne    0x140001e3b
   140001e15:	mov    DWORD PTR [rip+0x115f1],0x1        # 0x140013410
   140001e1f:	mov    ecx,0x8
   140001e24:	call   0x140003770
   140001e29:	mov    ecx,r15d
   140001e2c:	call   0x140001af4
   140001e31:	mov    ecx,r15d
   140001e34:	call   QWORD PTR [rip+0xc1c6]        # 0x14000e000
   140001e3a:	int3   
   140001e3b:	mov    rbx,QWORD PTR [rsp+0x70]
   140001e40:	mov    rsi,QWORD PTR [rsp+0x78]
   140001e45:	add    rsp,0x40
   140001e49:	pop    r15
   140001e4b:	pop    r14
   140001e4d:	pop    r13
   140001e4f:	pop    r12
   140001e51:	pop    rdi
   140001e52:	ret    
   140001e53:	int3   
   140001e54:	xor    r8d,r8d
   140001e57:	xor    edx,edx
   140001e59:	jmp    0x140001cc4
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	xor    r8d,r8d
   140001e63:	lea    edx,[r8+0x1]
   140001e67:	jmp    0x140001cc4
   140001e6c:	xor    edx,edx
   140001e6e:	xor    ecx,ecx
   140001e70:	lea    r8d,[rdx+0x1]
   140001e74:	jmp    0x140001cc4
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	mov    edx,0x1
   140001e81:	xor    ecx,ecx
   140001e83:	mov    r8d,edx
   140001e86:	jmp    0x140001cc4
   140001e8b:	int3   
   140001e8c:	rex push rbx
   140001e8e:	sub    rsp,0x20
   140001e92:	mov    ebx,ecx
   140001e94:	call   0x140004460
   140001e99:	mov    ecx,ebx
   140001e9b:	call   0x140004200
   140001ea0:	xor    r8d,r8d
   140001ea3:	mov    ecx,0xff
   140001ea8:	lea    edx,[r8+0x1]
   140001eac:	call   0x140001cc4
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	test   rcx,rcx
   140001eb7:	je     0x140001ef0
   140001eb9:	push   rbx
   140001eba:	sub    rsp,0x20
   140001ebe:	mov    r8,rcx
   140001ec1:	mov    rcx,QWORD PTR [rip+0x12390]        # 0x140014258
   140001ec8:	xor    edx,edx
   140001eca:	call   QWORD PTR [rip+0xc1e8]        # 0x14000e0b8
   140001ed0:	test   eax,eax
   140001ed2:	jne    0x140001eeb
   140001ed4:	call   0x140003564
   140001ed9:	mov    rbx,rax
   140001edc:	call   QWORD PTR [rip+0xc196]        # 0x14000e078
   140001ee2:	mov    ecx,eax
   140001ee4:	call   0x14000351c
   140001ee9:	mov    DWORD PTR [rbx],eax
   140001eeb:	add    rsp,0x20
   140001eef:	pop    rbx
   140001ef0:	ret    
   140001ef1:	int3   
   140001ef2:	int3   
   140001ef3:	int3   
   140001ef4:	rex push rbx
   140001ef6:	sub    rsp,0x20
   140001efa:	and    DWORD PTR [rsp+0x40],0x0
   140001eff:	lea    r8,[rsp+0x40]
   140001f04:	call   0x1400044fc
   140001f09:	mov    rbx,rax
   140001f0c:	test   rax,rax
   140001f0f:	jne    0x140001f2c
   140001f11:	cmp    DWORD PTR [rsp+0x40],eax
   140001f15:	je     0x140001f2c
   140001f17:	call   0x140003564
   140001f1c:	test   rax,rax
   140001f1f:	je     0x140001f2c
   140001f21:	call   0x140003564
   140001f26:	mov    ecx,DWORD PTR [rsp+0x40]
   140001f2a:	mov    DWORD PTR [rax],ecx
   140001f2c:	mov    rax,rbx
   140001f2f:	add    rsp,0x20
   140001f33:	pop    rbx
   140001f34:	ret    
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	mov    QWORD PTR [rsp+0x8],rbx
   140001f3d:	mov    QWORD PTR [rsp+0x10],rsi
   140001f42:	push   rdi
   140001f43:	sub    rsp,0x20
   140001f47:	mov    rbx,rcx
   140001f4a:	cmp    rcx,0xffffffffffffffe0
   140001f4e:	ja     0x140001fcc
   140001f50:	mov    edi,0x1
   140001f55:	test   rcx,rcx
   140001f58:	cmovne rdi,rcx
   140001f5c:	mov    rcx,QWORD PTR [rip+0x122f5]        # 0x140014258
   140001f63:	test   rcx,rcx
   140001f66:	jne    0x140001f88
   140001f68:	call   0x140004460
   140001f6d:	mov    ecx,0x1e
   140001f72:	call   0x140004200
   140001f77:	mov    ecx,0xff
   140001f7c:	call   0x140001b30
   140001f81:	mov    rcx,QWORD PTR [rip+0x122d0]        # 0x140014258
   140001f88:	mov    r8,rdi
   140001f8b:	xor    edx,edx
   140001f8d:	call   QWORD PTR [rip+0xc12d]        # 0x14000e0c0
   140001f93:	mov    rsi,rax
   140001f96:	test   rax,rax
   140001f99:	jne    0x140001fc7
   140001f9b:	cmp    DWORD PTR [rip+0x122bf],eax        # 0x140014260
   140001fa1:	je     0x140001fb1
   140001fa3:	mov    rcx,rbx
   140001fa6:	call   0x140003b74
   140001fab:	test   eax,eax
   140001fad:	je     0x140001fbc
   140001faf:	jmp    0x140001f5c
   140001fb1:	call   0x140003564
   140001fb6:	mov    DWORD PTR [rax],0xc
   140001fbc:	call   0x140003564
   140001fc1:	mov    DWORD PTR [rax],0xc
   140001fc7:	mov    rax,rsi
   140001fca:	jmp    0x140001fde
   140001fcc:	call   0x140003b74
   140001fd1:	call   0x140003564
   140001fd6:	mov    DWORD PTR [rax],0xc
   140001fdc:	xor    eax,eax
   140001fde:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fe3:	mov    rsi,QWORD PTR [rsp+0x38]
   140001fe8:	add    rsp,0x20
   140001fec:	pop    rdi
   140001fed:	ret    
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	test   r8,r8
   140001ff3:	je     0x140002001
   140001ff5:	cmp    BYTE PTR [rcx],dl
   140001ff7:	je     0x140002001
   140001ff9:	inc    rcx
   140001ffc:	dec    r8
   140001fff:	jne    0x140001ff5
   140002001:	neg    r8
   140002004:	sbb    rax,rax
   140002007:	and    rax,rcx
   14000200a:	ret    
   14000200b:	int3   
   14000200c:	mov    r11,rsp
   14000200f:	mov    QWORD PTR [r11+0x20],r9
   140002013:	sub    rsp,0x38
   140002017:	lea    rax,[r11+0x28]
   14000201b:	mov    QWORD PTR [r11-0x10],rax
   14000201f:	and    QWORD PTR [r11-0x18],0x0
   140002024:	call   0x140004c38
   140002029:	add    rsp,0x38
   14000202d:	ret    
   14000202e:	int3   
   14000202f:	int3   
   140002030:	mov    QWORD PTR [rsp+0x20],rbx
   140002035:	push   rbp
   140002036:	push   rsi
   140002037:	push   rdi
   140002038:	push   r12
   14000203a:	push   r13
   14000203c:	push   r14
   14000203e:	push   r15
   140002040:	sub    rsp,0x20
   140002044:	mov    r13,rcx
   140002047:	mov    r14,rcx
   14000204a:	mov    QWORD PTR [rsp+0x68],rcx
   14000204f:	mov    rcx,rdx
   140002052:	mov    r15,r9
   140002055:	mov    r12,r8
   140002058:	mov    rsi,rdx
   14000205b:	mov    QWORD PTR [rsp+0x70],rdx
   140002060:	test   r8,r8
   140002063:	je     0x14000207f
   140002065:	test   r9,r9
   140002068:	je     0x14000207f
   14000206a:	test   r14,r14
   14000206d:	jne    0x140002096
   14000206f:	call   0x140003564
   140002074:	mov    DWORD PTR [rax],0x16
   14000207a:	call   0x1400034fc
   14000207f:	xor    eax,eax
   140002081:	mov    rbx,QWORD PTR [rsp+0x78]
   140002086:	add    rsp,0x20
   14000208a:	pop    r15
   14000208c:	pop    r14
   14000208e:	pop    r13
   140002090:	pop    r12
   140002092:	pop    rdi
   140002093:	pop    rsi
   140002094:	pop    rbp
   140002095:	ret    
   140002096:	mov    rdi,QWORD PTR [rsp+0x80]
   14000209e:	test   rdi,rdi
   1400020a1:	je     0x1400020b1
   1400020a3:	xor    edx,edx
   1400020a5:	or     rax,0xffffffffffffffff
   1400020a9:	div    r12
   1400020ac:	cmp    r9,rax
   1400020af:	jbe    0x1400020da
   1400020b1:	cmp    rsi,0xffffffffffffffff
   1400020b5:	je     0x1400020c7
   1400020b7:	mov    r8,rsi
   1400020ba:	xor    edx,edx
   1400020bc:	mov    rcx,r13
   1400020bf:	call   0x140004a30
   1400020c4:	mov    rcx,rsi
   1400020c7:	test   rdi,rdi
   1400020ca:	je     0x14000206f
   1400020cc:	xor    edx,edx
   1400020ce:	or     rax,0xffffffffffffffff
   1400020d2:	div    r12
   1400020d5:	cmp    r15,rax
   1400020d8:	ja     0x14000206f
   1400020da:	mov    rbx,r12
   1400020dd:	imul   rbx,r15
   1400020e1:	test   DWORD PTR [rdi+0x18],0x10c
   1400020e8:	mov    rbp,rbx
   1400020eb:	je     0x1400020f3
   1400020ed:	mov    r9d,DWORD PTR [rdi+0x24]
   1400020f1:	jmp    0x1400020f9
   1400020f3:	mov    r9d,0x1000
   1400020f9:	mov    DWORD PTR [rsp+0x60],r9d
   1400020fe:	test   rbx,rbx
   140002101:	je     0x14000225f
   140002107:	test   DWORD PTR [rdi+0x18],0x10c
   14000210e:	mov    r10d,0x7fffffff
   140002114:	je     0x140002174
   140002116:	movsxd r14,DWORD PTR [rdi+0x8]
   14000211a:	test   r14d,r14d
   14000211d:	je     0x14000216f
   14000211f:	js     0x140002245
   140002125:	cmp    rbp,r14
   140002128:	cmovb  r14d,ebp
   14000212c:	mov    r9d,r14d
   14000212f:	cmp    r9,rcx
   140002132:	ja     0x140002222
   140002138:	mov    r8,QWORD PTR [rdi]
   14000213b:	mov    rdx,rcx
   14000213e:	mov    rcx,QWORD PTR [rsp+0x68]
   140002143:	call   0x140005744
   140002148:	sub    DWORD PTR [rdi+0x8],r14d
   14000214c:	mov    eax,r14d
   14000214f:	mov    r14,QWORD PTR [rsp+0x68]
   140002154:	sub    rbp,rax
   140002157:	add    QWORD PTR [rdi],rax
   14000215a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000215f:	mov    r9d,DWORD PTR [rsp+0x60]
   140002164:	add    r14,rax
   140002167:	sub    rcx,rax
   14000216a:	jmp    0x140002210
   14000216f:	mov    r14,QWORD PTR [rsp+0x68]
   140002174:	mov    r8d,r9d
   140002177:	cmp    rbp,r8
   14000217a:	jb     0x1400021e4
   14000217c:	test   r9d,r9d
   14000217f:	je     0x1400021a1
   140002181:	xor    edx,edx
   140002183:	cmp    rbp,r10
   140002186:	jbe    0x140002193
   140002188:	mov    eax,r10d
   14000218b:	mov    r14d,r10d
   14000218e:	div    r9d
   140002191:	jmp    0x14000219c
   140002193:	mov    rax,rbp
   140002196:	mov    r14d,ebp
   140002199:	div    r8
   14000219c:	sub    r14d,edx
   14000219f:	jmp    0x1400021ab
   1400021a1:	mov    r14d,ebp
   1400021a4:	cmp    rbp,r10
   1400021a7:	cmova  r14d,r10d
   1400021ab:	mov    eax,r14d
   1400021ae:	cmp    rax,rcx
   1400021b1:	ja     0x140002222
   1400021b3:	mov    rcx,rdi
   1400021b6:	call   0x14000571c
   1400021bb:	mov    r8d,r14d
   1400021be:	mov    r14,QWORD PTR [rsp+0x68]
   1400021c3:	mov    rdx,r14
   1400021c6:	mov    ecx,eax
   1400021c8:	call   0x140005600
   1400021cd:	test   eax,eax
   1400021cf:	je     0x140002259
   1400021d5:	cmp    eax,0xffffffff
   1400021d8:	je     0x140002245
   1400021da:	mov    eax,eax
   1400021dc:	sub    rbp,rax
   1400021df:	jmp    0x14000215a
   1400021e4:	mov    rcx,rdi
   1400021e7:	call   0x140004d88
   1400021ec:	cmp    eax,0xffffffff
   1400021ef:	je     0x140002249
   1400021f1:	mov    rcx,QWORD PTR [rsp+0x70]
   1400021f6:	test   rcx,rcx
   1400021f9:	je     0x140002222
   1400021fb:	mov    BYTE PTR [r14],al
   1400021fe:	mov    r9d,DWORD PTR [rdi+0x24]
   140002202:	dec    rbp
   140002205:	inc    r14
   140002208:	dec    rcx
   14000220b:	mov    DWORD PTR [rsp+0x60],r9d
   140002210:	mov    QWORD PTR [rsp+0x68],r14
   140002215:	mov    QWORD PTR [rsp+0x70],rcx
   14000221a:	test   rbp,rbp
   14000221d:	jmp    0x140002101
   140002222:	cmp    rsi,0xffffffffffffffff
   140002226:	je     0x140002235
   140002228:	mov    r8,rsi
   14000222b:	xor    edx,edx
   14000222d:	mov    rcx,r13
   140002230:	call   0x140004a30
   140002235:	call   0x140003564
   14000223a:	mov    DWORD PTR [rax],0x22
   140002240:	jmp    0x14000207a
   140002245:	or     DWORD PTR [rdi+0x18],0x20
   140002249:	sub    rbx,rbp
   14000224c:	xor    edx,edx
   14000224e:	mov    rax,rbx
   140002251:	div    r12
   140002254:	jmp    0x140002081
   140002259:	or     DWORD PTR [rdi+0x18],0x10
   14000225d:	jmp    0x140002249
   14000225f:	mov    rax,r15
   140002262:	jmp    0x140002081
   140002267:	int3   
   140002268:	mov    rax,rsp
   14000226b:	mov    QWORD PTR [rax+0x8],rbx
   14000226f:	mov    QWORD PTR [rax+0x10],rsi
   140002273:	mov    QWORD PTR [rax+0x18],rdi
   140002277:	mov    QWORD PTR [rax+0x20],r12
   14000227b:	push   r13
   14000227d:	sub    rsp,0x30
   140002281:	mov    rsi,r9
   140002284:	mov    r13,r8
   140002287:	mov    rdi,rdx
   14000228a:	mov    r12,rcx
   14000228d:	test   r8,r8
   140002290:	je     0x1400022f2
   140002292:	test   r9,r9
   140002295:	je     0x1400022f2
   140002297:	mov    rbx,QWORD PTR [rsp+0x60]
   14000229c:	test   rbx,rbx
   14000229f:	jne    0x1400022c3
   1400022a1:	cmp    rdx,0xffffffffffffffff
   1400022a5:	je     0x1400022b1
   1400022a7:	mov    r8,rdx
   1400022aa:	xor    edx,edx
   1400022ac:	call   0x140004a30
   1400022b1:	call   0x140003564
   1400022b6:	mov    DWORD PTR [rax],0x16
   1400022bc:	call   0x1400034fc
   1400022c1:	jmp    0x1400022f2
   1400022c3:	mov    rcx,rbx
   1400022c6:	call   0x140002dc8
   1400022cb:	nop
   1400022cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400022d1:	mov    r9,rsi
   1400022d4:	mov    r8,r13
   1400022d7:	mov    rdx,rdi
   1400022da:	mov    rcx,r12
   1400022dd:	call   0x140002030
   1400022e2:	mov    rdi,rax
   1400022e5:	mov    rcx,rbx
   1400022e8:	call   0x140002e60
   1400022ed:	mov    rax,rdi
   1400022f0:	jmp    0x1400022f4
   1400022f2:	xor    eax,eax
   1400022f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400022f9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400022fe:	mov    rdi,QWORD PTR [rsp+0x50]
   140002303:	mov    r12,QWORD PTR [rsp+0x58]
   140002308:	add    rsp,0x30
   14000230c:	pop    r13
   14000230e:	ret    
   14000230f:	int3   
   140002310:	sub    rsp,0x38
   140002314:	mov    QWORD PTR [rsp+0x20],r9
   140002319:	mov    r9,r8
   14000231c:	mov    r8,rdx
   14000231f:	or     rdx,0xffffffffffffffff
   140002323:	call   0x140002268
   140002328:	add    rsp,0x38
   14000232c:	ret    
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    WORD PTR [rsp+0x8],cx
   140002335:	push   rbx
   140002336:	sub    rsp,0x20
   14000233a:	mov    eax,0xffff
   14000233f:	movzx  ebx,dx
   140002342:	cmp    cx,ax
   140002345:	jne    0x14000234b
   140002347:	xor    eax,eax
   140002349:	jmp    0x140002390
   14000234b:	mov    eax,0x100
   140002350:	cmp    cx,ax
   140002353:	jae    0x140002365
   140002355:	mov    rax,QWORD PTR [rip+0x1059c]        # 0x1400128f8
   14000235c:	movzx  ecx,cx
   14000235f:	movzx  eax,WORD PTR [rax+rcx*2]
   140002363:	jmp    0x14000238b
   140002365:	mov    ecx,0x1
   14000236a:	lea    r9,[rsp+0x40]
   14000236f:	lea    rdx,[rsp+0x30]
   140002374:	mov    r8d,ecx
   140002377:	call   QWORD PTR [rip+0xbd4b]        # 0x14000e0c8
   14000237d:	xor    ecx,ecx
   14000237f:	test   eax,eax
   140002381:	je     0x140002388
   140002383:	movzx  ecx,WORD PTR [rsp+0x40]
   140002388:	movzx  eax,cx
   14000238b:	movzx  ecx,bx
   14000238e:	and    eax,ecx
   140002390:	add    rsp,0x20
   140002394:	pop    rbx
   140002395:	ret    
   140002396:	int3   
   140002397:	int3   
   140002398:	mov    rax,rsp
   14000239b:	mov    QWORD PTR [rax+0x8],rbx
   14000239f:	mov    QWORD PTR [rax+0x10],rbp
   1400023a3:	mov    QWORD PTR [rax+0x18],rsi
   1400023a7:	mov    QWORD PTR [rax+0x20],rdi
   1400023ab:	push   r12
   1400023ad:	push   r13
   1400023af:	push   r14
   1400023b1:	sub    rsp,0x20
   1400023b5:	mov    rbx,rcx
   1400023b8:	test   rcx,rcx
   1400023bb:	jne    0x1400023d5
   1400023bd:	call   0x140003564
   1400023c2:	mov    DWORD PTR [rax],0x16
   1400023c8:	call   0x1400034fc
   1400023cd:	or     eax,0xffffffff
   1400023d0:	jmp    0x14000252f
   1400023d5:	call   0x14000571c
   1400023da:	cmp    DWORD PTR [rbx+0x8],0x0
   1400023de:	movsxd r12,eax
   1400023e1:	jge    0x1400023e7
   1400023e3:	and    DWORD PTR [rbx+0x8],0x0
   1400023e7:	xor    edx,edx
   1400023e9:	mov    ecx,r12d
   1400023ec:	lea    r8d,[rdx+0x1]
   1400023f0:	call   0x140005b38
   1400023f5:	mov    esi,eax
   1400023f7:	test   eax,eax
   1400023f9:	js     0x1400023cd
   1400023fb:	mov    edx,DWORD PTR [rbx+0x18]
   1400023fe:	test   edx,0x108
   140002404:	jne    0x140002410
   140002406:	sub    esi,DWORD PTR [rbx+0x8]
   140002409:	mov    eax,esi
   14000240b:	jmp    0x14000252f
   140002410:	mov    edi,DWORD PTR [rbx]
   140002412:	lea    r8,[rip+0x12207]        # 0x140014620
   140002419:	mov    ebp,edi
   14000241b:	sub    ebp,DWORD PTR [rbx+0x10]
   14000241e:	test   dl,0x3
   140002421:	je     0x14000245f
   140002423:	mov    rcx,r12
   140002426:	mov    rax,r12
   140002429:	sar    rax,0x5
   14000242d:	and    ecx,0x1f
   140002430:	mov    rax,QWORD PTR [r8+rax*8]
   140002434:	imul   rcx,rcx,0x58
   140002438:	test   BYTE PTR [rax+rcx*1+0x8],0x80
   14000243d:	je     0x140002454
   14000243f:	mov    rax,QWORD PTR [rbx+0x10]
   140002443:	jmp    0x14000244f
   140002445:	cmp    BYTE PTR [rax],0xa
   140002448:	jne    0x14000244c
   14000244a:	inc    ebp
   14000244c:	inc    rax
   14000244f:	cmp    rax,QWORD PTR [rbx]
   140002452:	jb     0x140002445
   140002454:	test   esi,esi
   140002456:	jne    0x140002473
   140002458:	mov    eax,ebp
   14000245a:	jmp    0x14000252f
   14000245f:	test   dl,dl
   140002461:	js     0x140002454
   140002463:	call   0x140003564
   140002468:	mov    DWORD PTR [rax],0x16
   14000246e:	jmp    0x1400023cd
   140002473:	test   dl,0x1
   140002476:	je     0x14000252b
   14000247c:	cmp    DWORD PTR [rbx+0x8],0x0
   140002480:	jne    0x140002489
   140002482:	xor    ebp,ebp
   140002484:	jmp    0x14000252b
   140002489:	sub    edi,DWORD PTR [rbx+0x10]
   14000248c:	mov    r13,r12
   14000248f:	mov    r14,r12
   140002492:	add    edi,DWORD PTR [rbx+0x8]
   140002495:	sar    r14,0x5
   140002499:	and    r13d,0x1f
   14000249d:	mov    rax,QWORD PTR [r8+r14*8]
   1400024a1:	imul   r13,r13,0x58
   1400024a5:	test   BYTE PTR [r13+rax*1+0x8],0x80
   1400024ab:	je     0x140002529
   1400024ad:	xor    edx,edx
   1400024af:	mov    ecx,r12d
   1400024b2:	lea    r8d,[rdx+0x2]
   1400024b6:	call   0x140005b38
   1400024bb:	cmp    eax,esi
   1400024bd:	jne    0x1400024e2
   1400024bf:	mov    rax,QWORD PTR [rbx+0x10]
   1400024c3:	mov    ecx,edi
   1400024c5:	add    rcx,rax
   1400024c8:	jmp    0x1400024d4
   1400024ca:	cmp    BYTE PTR [rax],0xa
   1400024cd:	jne    0x1400024d1
   1400024cf:	inc    edi
   1400024d1:	inc    rax
   1400024d4:	cmp    rax,rcx
   1400024d7:	jb     0x1400024ca
   1400024d9:	test   DWORD PTR [rbx+0x18],0x2000
   1400024e0:	jmp    0x140002525
   1400024e2:	xor    r8d,r8d
   1400024e5:	mov    edx,esi
   1400024e7:	mov    ecx,r12d
   1400024ea:	call   0x140005b38
   1400024ef:	test   eax,eax
   1400024f1:	js     0x1400023cd
   1400024f7:	mov    eax,0x200
   1400024fc:	cmp    edi,eax
   1400024fe:	ja     0x140002511
   140002500:	test   BYTE PTR [rbx+0x18],0x8
   140002504:	je     0x140002511
   140002506:	test   DWORD PTR [rbx+0x18],0x400
   14000250d:	mov    edi,eax
   14000250f:	je     0x140002514
   140002511:	mov    edi,DWORD PTR [rbx+0x24]
   140002514:	lea    rax,[rip+0x12105]        # 0x140014620
   14000251b:	mov    rax,QWORD PTR [rax+r14*8]
   14000251f:	test   BYTE PTR [r13+rax*1+0x8],0x4
   140002525:	je     0x140002529
   140002527:	inc    edi
   140002529:	sub    esi,edi
   14000252b:	lea    eax,[rbp+rsi*1+0x0]
   14000252f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002534:	mov    rbp,QWORD PTR [rsp+0x48]
   140002539:	mov    rsi,QWORD PTR [rsp+0x50]
   14000253e:	mov    rdi,QWORD PTR [rsp+0x58]
   140002543:	add    rsp,0x20
   140002547:	pop    r14
   140002549:	pop    r13
   14000254b:	pop    r12
   14000254d:	ret    
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    QWORD PTR [rsp+0x10],rbx
   140002555:	mov    QWORD PTR [rsp+0x8],rcx
   14000255a:	push   rdi
   14000255b:	sub    rsp,0x20
   14000255f:	mov    rbx,rcx
   140002562:	xor    eax,eax
   140002564:	test   rcx,rcx
   140002567:	setne  al
   14000256a:	test   eax,eax
   14000256c:	jne    0x140002583
   14000256e:	call   0x140003564
   140002573:	mov    DWORD PTR [rax],0x16
   140002579:	call   0x1400034fc
   14000257e:	or     eax,0xffffffff
   140002581:	jmp    0x14000259d
   140002583:	call   0x140002dc8
   140002588:	nop
   140002589:	mov    rcx,rbx
   14000258c:	call   0x140002398
   140002591:	mov    edi,eax
   140002593:	mov    rcx,rbx
   140002596:	call   0x140002e60
   14000259b:	mov    eax,edi
   14000259d:	mov    rbx,QWORD PTR [rsp+0x38]
   1400025a2:	add    rsp,0x20
   1400025a6:	pop    rdi
   1400025a7:	ret    
   1400025a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400025ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400025b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400025b7:	push   rdi
   1400025b8:	sub    rsp,0x20
   1400025bc:	mov    eax,DWORD PTR [rcx+0x18]
   1400025bf:	mov    edi,r8d
   1400025c2:	mov    esi,edx
   1400025c4:	mov    rbx,rcx
   1400025c7:	test   al,0x83
   1400025c9:	jne    0x1400025db
   1400025cb:	call   0x140003564
   1400025d0:	mov    DWORD PTR [rax],0x16
   1400025d6:	or     eax,0xffffffff
   1400025d9:	jmp    0x140002645
   1400025db:	and    eax,0xffffffef
   1400025de:	xor    ebp,ebp
   1400025e0:	mov    DWORD PTR [rcx+0x18],eax
   1400025e3:	cmp    r8d,0x1
   1400025e7:	jne    0x1400025f2
   1400025e9:	call   0x140002398
   1400025ee:	mov    edi,ebp
   1400025f0:	add    esi,eax
   1400025f2:	mov    rcx,rbx
   1400025f5:	call   0x140005c18
   1400025fa:	mov    r11d,DWORD PTR [rbx+0x18]
   1400025fe:	test   r11b,r11b
   140002601:	jns    0x14000260d
   140002603:	and    r11d,0xfffffffc
   140002607:	mov    DWORD PTR [rbx+0x18],r11d
   14000260b:	jmp    0x140002627
   14000260d:	test   r11b,0x1
   140002611:	je     0x140002627
   140002613:	test   r11b,0x8
   140002617:	je     0x140002627
   140002619:	bt     r11d,0xa
   14000261e:	jb     0x140002627
   140002620:	mov    DWORD PTR [rbx+0x24],0x200
   140002627:	mov    rcx,rbx
   14000262a:	call   0x14000571c
   14000262f:	mov    r8d,edi
   140002632:	mov    edx,esi
   140002634:	mov    ecx,eax
   140002636:	call   0x140005b38
   14000263b:	cmp    eax,0xffffffff
   14000263e:	setne  bpl
   140002642:	lea    eax,[rbp-0x1]
   140002645:	mov    rbx,QWORD PTR [rsp+0x30]
   14000264a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000264f:	mov    rsi,QWORD PTR [rsp+0x40]
   140002654:	add    rsp,0x20
   140002658:	pop    rdi
   140002659:	ret    
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	mov    QWORD PTR [rsp+0x10],rbx
   140002661:	mov    QWORD PTR [rsp+0x18],rsi
   140002666:	mov    QWORD PTR [rsp+0x8],rcx
   14000266b:	push   rdi
   14000266c:	sub    rsp,0x20
   140002670:	mov    ebx,r8d
   140002673:	mov    esi,edx
   140002675:	mov    rdi,rcx
   140002678:	xor    eax,eax
   14000267a:	test   rcx,rcx
   14000267d:	setne  al
   140002680:	test   eax,eax
   140002682:	jne    0x140002699
   140002684:	call   0x140003564
   140002689:	mov    DWORD PTR [rax],0x16
   14000268f:	call   0x1400034fc
   140002694:	or     eax,0xffffffff
   140002697:	jmp    0x1400026c6
   140002699:	test   ebx,ebx
   14000269b:	je     0x1400026a7
   14000269d:	cmp    ebx,0x1
   1400026a0:	je     0x1400026a7
   1400026a2:	cmp    ebx,0x2
   1400026a5:	jne    0x140002684
   1400026a7:	call   0x140002dc8
   1400026ac:	nop
   1400026ad:	mov    r8d,ebx
   1400026b0:	mov    edx,esi
   1400026b2:	mov    rcx,rdi
   1400026b5:	call   0x1400025a8
   1400026ba:	mov    ebx,eax
   1400026bc:	mov    rcx,rdi
   1400026bf:	call   0x140002e60
   1400026c4:	mov    eax,ebx
   1400026c6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400026cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400026d0:	add    rsp,0x20
   1400026d4:	pop    rdi
   1400026d5:	ret    
   1400026d6:	int3   
   1400026d7:	int3   
   1400026d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400026dd:	push   rdi
   1400026de:	sub    rsp,0x20
   1400026e2:	or     edi,0xffffffff
   1400026e5:	mov    rbx,rcx
   1400026e8:	test   rcx,rcx
   1400026eb:	jne    0x140002701
   1400026ed:	call   0x140003564
   1400026f2:	mov    DWORD PTR [rax],0x16
   1400026f8:	call   0x1400034fc
   1400026fd:	or     eax,edi
   1400026ff:	jmp    0x140002747
   140002701:	test   BYTE PTR [rcx+0x18],0x83
   140002705:	je     0x140002741
   140002707:	call   0x140005c18
   14000270c:	mov    rcx,rbx
   14000270f:	mov    edi,eax
   140002711:	call   0x140005f58
   140002716:	mov    rcx,rbx
   140002719:	call   0x14000571c
   14000271e:	mov    ecx,eax
   140002720:	call   0x140005e94
   140002725:	test   eax,eax
   140002727:	jns    0x14000272e
   140002729:	or     edi,0xffffffff
   14000272c:	jmp    0x140002741
   14000272e:	mov    rcx,QWORD PTR [rbx+0x28]
   140002732:	test   rcx,rcx
   140002735:	je     0x140002741
   140002737:	call   0x140001eb4
   14000273c:	and    QWORD PTR [rbx+0x28],0x0
   140002741:	and    DWORD PTR [rbx+0x18],0x0
   140002745:	mov    eax,edi
   140002747:	mov    rbx,QWORD PTR [rsp+0x30]
   14000274c:	add    rsp,0x20
   140002750:	pop    rdi
   140002751:	ret    
   140002752:	int3   
   140002753:	int3   
   140002754:	mov    QWORD PTR [rsp+0x10],rbx
   140002759:	mov    QWORD PTR [rsp+0x8],rcx
   14000275e:	push   rdi
   14000275f:	sub    rsp,0x20
   140002763:	mov    rbx,rcx
   140002766:	or     edi,0xffffffff
   140002769:	xor    eax,eax
   14000276b:	test   rcx,rcx
   14000276e:	setne  al
   140002771:	test   eax,eax
   140002773:	jne    0x140002789
   140002775:	call   0x140003564
   14000277a:	mov    DWORD PTR [rax],0x16
   140002780:	call   0x1400034fc
   140002785:	mov    eax,edi
   140002787:	jmp    0x1400027af
   140002789:	test   BYTE PTR [rcx+0x18],0x40
   14000278d:	je     0x140002795
   14000278f:	and    DWORD PTR [rcx+0x18],0x0
   140002793:	jmp    0x140002785
   140002795:	call   0x140002dc8
   14000279a:	nop
   14000279b:	mov    rcx,rbx
   14000279e:	call   0x1400026d8
   1400027a3:	mov    edi,eax
   1400027a5:	mov    rcx,rbx
   1400027a8:	call   0x140002e60
   1400027ad:	jmp    0x140002785
   1400027af:	mov    rbx,QWORD PTR [rsp+0x38]
   1400027b4:	add    rsp,0x20
   1400027b8:	pop    rdi
   1400027b9:	ret    
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400027c1:	push   rdi
   1400027c2:	sub    rsp,0xa0
   1400027c9:	lea    rcx,[rsp+0x30]
   1400027ce:	call   QWORD PTR [rip+0xb904]        # 0x14000e0d8
   1400027d4:	mov    r11d,0x5a4d
   1400027da:	lea    rdi,[rip+0xffffffffffffd81f]        # 0x140000000
   1400027e1:	cmp    WORD PTR [rip+0xffffffffffffd817],r11w        # 0x140000000
   1400027e9:	je     0x1400027ef
   1400027eb:	xor    ebx,ebx
   1400027ed:	jmp    0x140002820
   1400027ef:	movsxd rax,DWORD PTR [rip+0xffffffffffffd846]        # 0x14000003c
   1400027f6:	add    rax,rdi
   1400027f9:	cmp    DWORD PTR [rax],0x4550
   1400027ff:	jne    0x1400027eb
   140002801:	mov    ecx,0x20b
   140002806:	cmp    WORD PTR [rax+0x18],cx
   14000280a:	jne    0x1400027eb
   14000280c:	xor    ebx,ebx
   14000280e:	cmp    DWORD PTR [rax+0x84],0xe
   140002815:	jbe    0x140002820
   140002817:	cmp    DWORD PTR [rax+0xf8],ebx
   14000281d:	setne  bl
   140002820:	mov    DWORD PTR [rsp+0xb0],ebx
   140002827:	call   0x1400044a4
   14000282c:	test   eax,eax
   14000282e:	jne    0x140002852
   140002830:	cmp    DWORD PTR [rip+0x10bf1],0x1        # 0x140013428
   140002837:	jne    0x14000283e
   140002839:	call   0x140004460
   14000283e:	mov    ecx,0x1c
   140002843:	call   0x140004200
   140002848:	mov    ecx,0xff
   14000284d:	call   0x140001b30
   140002852:	call   0x140003e70
   140002857:	test   eax,eax
   140002859:	jne    0x14000287d
   14000285b:	cmp    DWORD PTR [rip+0x10bc6],0x1        # 0x140013428
   140002862:	jne    0x140002869
   140002864:	call   0x140004460
   140002869:	mov    ecx,0x10
   14000286e:	call   0x140004200
   140002873:	mov    ecx,0xff
   140002878:	call   0x140001b30
   14000287d:	call   0x14000405c
   140002882:	nop
   140002883:	call   0x1400057cc
   140002888:	test   eax,eax
   14000288a:	jns    0x140002896
   14000288c:	mov    ecx,0x1b
   140002891:	call   0x140001e8c
   140002896:	call   QWORD PTR [rip+0xb834]        # 0x14000e0d0
   14000289c:	mov    QWORD PTR [rip+0x12fad],rax        # 0x140015850
   1400028a3:	call   0x140006630
   1400028a8:	mov    QWORD PTR [rip+0x10b69],rax        # 0x140013418
   1400028af:	call   0x140006538
   1400028b4:	test   eax,eax
   1400028b6:	jns    0x1400028c2
   1400028b8:	mov    ecx,0x8
   1400028bd:	call   0x140001e8c
   1400028c2:	call   0x140006238
   1400028c7:	test   eax,eax
   1400028c9:	jns    0x1400028d5
   1400028cb:	mov    ecx,0x9
   1400028d0:	call   0x140001e8c
   1400028d5:	mov    ecx,0x1
   1400028da:	call   0x140001c14
   1400028df:	test   eax,eax
   1400028e1:	je     0x1400028ea
   1400028e3:	mov    ecx,eax
   1400028e5:	call   0x140001e8c
   1400028ea:	call   0x1400061bc
   1400028ef:	test   BYTE PTR [rsp+0x6c],0x1
   1400028f4:	movzx  edx,WORD PTR [rsp+0x70]
   1400028f9:	mov    r9d,0xa
   1400028ff:	cmovne r9d,edx
   140002903:	mov    r8,rax
   140002906:	xor    edx,edx
   140002908:	mov    rcx,rdi
   14000290b:	call   0x140001958
   140002910:	mov    edi,eax
   140002912:	mov    DWORD PTR [rsp+0x20],eax
   140002916:	test   ebx,ebx
   140002918:	jne    0x140002921
   14000291a:	mov    ecx,eax
   14000291c:	call   0x140001e54
   140002921:	call   0x140001e6c
   140002926:	jmp    0x140002942
   140002928:	mov    edi,eax
   14000292a:	cmp    DWORD PTR [rsp+0xb0],0x0
   140002932:	jne    0x14000293c
   140002934:	mov    ecx,eax
   140002936:	call   0x140001e60
   14000293b:	int3   
   14000293c:	call   0x140001e7c
   140002941:	nop
   140002942:	mov    eax,edi
   140002944:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000294c:	add    rsp,0xa0
   140002953:	pop    rdi
   140002954:	ret    
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	sub    rsp,0x28
   14000295c:	call   0x140006724
   140002961:	add    rsp,0x28
   140002965:	jmp    0x1400027bc
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	mov    QWORD PTR [rsp+0x8],rcx
   140002971:	sub    rsp,0x88
   140002978:	lea    rcx,[rip+0x10b51]        # 0x1400134d0
   14000297f:	call   QWORD PTR [rip+0xb78b]        # 0x14000e110
   140002985:	mov    rax,QWORD PTR [rip+0x10c3c]        # 0x1400135c8
   14000298c:	mov    QWORD PTR [rsp+0x58],rax
   140002991:	xor    r8d,r8d
   140002994:	lea    rdx,[rsp+0x60]
   140002999:	mov    rcx,QWORD PTR [rsp+0x58]
   14000299e:	call   0x14000cd9e
   1400029a3:	mov    QWORD PTR [rsp+0x50],rax
   1400029a8:	cmp    QWORD PTR [rsp+0x50],0x0
   1400029ae:	je     0x1400029f1
   1400029b0:	mov    QWORD PTR [rsp+0x38],0x0
   1400029b9:	lea    rax,[rsp+0x48]
   1400029be:	mov    QWORD PTR [rsp+0x30],rax
   1400029c3:	lea    rax,[rsp+0x40]
   1400029c8:	mov    QWORD PTR [rsp+0x28],rax
   1400029cd:	lea    rax,[rip+0x10afc]        # 0x1400134d0
   1400029d4:	mov    QWORD PTR [rsp+0x20],rax
   1400029d9:	mov    r9,QWORD PTR [rsp+0x50]
   1400029de:	mov    r8,QWORD PTR [rsp+0x58]
   1400029e3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400029e8:	xor    ecx,ecx
   1400029ea:	call   0x14000cd98
   1400029ef:	jmp    0x140002a13
   1400029f1:	mov    rax,QWORD PTR [rsp+0x88]
   1400029f9:	mov    QWORD PTR [rip+0x10bc8],rax        # 0x1400135c8
   140002a00:	lea    rax,[rsp+0x88]
   140002a08:	add    rax,0x8
   140002a0c:	mov    QWORD PTR [rip+0x10b55],rax        # 0x140013568
   140002a13:	mov    rax,QWORD PTR [rip+0x10bae]        # 0x1400135c8
   140002a1a:	mov    QWORD PTR [rip+0x10a1f],rax        # 0x140013440
   140002a21:	mov    rax,QWORD PTR [rsp+0x90]
   140002a29:	mov    QWORD PTR [rip+0x10b20],rax        # 0x140013550
   140002a30:	mov    DWORD PTR [rip+0x109f6],0xc0000409        # 0x140013430
   140002a3a:	mov    DWORD PTR [rip+0x109f0],0x1        # 0x140013434
   140002a44:	mov    rax,QWORD PTR [rip+0xf5bd]        # 0x140012008
   140002a4b:	mov    QWORD PTR [rsp+0x68],rax
   140002a50:	mov    rax,QWORD PTR [rip+0xf5b9]        # 0x140012010
   140002a57:	mov    QWORD PTR [rsp+0x70],rax
   140002a5c:	call   QWORD PTR [rip+0xb696]        # 0x14000e0f8
   140002a62:	mov    DWORD PTR [rip+0x10a60],eax        # 0x1400134c8
   140002a68:	mov    ecx,0x1
   140002a6d:	call   0x1400067d8
   140002a72:	xor    ecx,ecx
   140002a74:	call   QWORD PTR [rip+0xb676]        # 0x14000e0f0
   140002a7a:	lea    rcx,[rip+0xb8d7]        # 0x14000e358
   140002a81:	call   QWORD PTR [rip+0xb661]        # 0x14000e0e8
   140002a87:	cmp    DWORD PTR [rip+0x10a3a],0x0        # 0x1400134c8
   140002a8e:	jne    0x140002a9a
   140002a90:	mov    ecx,0x1
   140002a95:	call   0x1400067d8
   140002a9a:	call   QWORD PTR [rip+0xb588]        # 0x14000e028
   140002aa0:	mov    edx,0xc0000409
   140002aa5:	mov    rcx,rax
   140002aa8:	call   QWORD PTR [rip+0xb632]        # 0x14000e0e0
   140002aae:	add    rsp,0x88
   140002ab5:	ret    
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	mov    r11,rsp
   140002abb:	mov    QWORD PTR [r11+0x8],rbx
   140002abf:	mov    QWORD PTR [r11+0x18],rbp
   140002ac3:	mov    QWORD PTR [r11+0x20],rsi
   140002ac7:	mov    QWORD PTR [r11+0x10],rdx
   140002acb:	push   rdi
   140002acc:	push   r12
   140002ace:	push   r13
   140002ad0:	push   r14
   140002ad2:	push   r15
   140002ad4:	sub    rsp,0x40
   140002ad8:	mov    r15,QWORD PTR [r9+0x8]
   140002adc:	mov    r14,QWORD PTR [r9]
   140002adf:	mov    eax,DWORD PTR [rcx+0x4]
   140002ae2:	mov    rdi,QWORD PTR [r9+0x38]
   140002ae6:	sub    r14,r15
   140002ae9:	mov    r12,r9
   140002aec:	mov    r13,rdx
   140002aef:	mov    rbp,rcx
   140002af2:	test   al,0x66
   140002af4:	jne    0x140002be7
   140002afa:	movsxd rsi,DWORD PTR [r9+0x48]
   140002afe:	mov    QWORD PTR [r11-0x38],rcx
   140002b02:	mov    QWORD PTR [r11-0x30],r8
   140002b06:	mov    rax,rsi
   140002b09:	cmp    esi,DWORD PTR [rdi]
   140002b0b:	jae    0x140002c92
   140002b11:	add    rax,rax
   140002b14:	lea    rbx,[rdi+rax*8+0xc]
   140002b19:	mov    eax,DWORD PTR [rbx-0x8]
   140002b1c:	cmp    r14,rax
   140002b1f:	jb     0x140002bcd
   140002b25:	mov    eax,DWORD PTR [rbx-0x4]
   140002b28:	cmp    r14,rax
   140002b2b:	jae    0x140002bcd
   140002b31:	cmp    DWORD PTR [rbx+0x4],0x0
   140002b35:	je     0x140002bcd
   140002b3b:	cmp    DWORD PTR [rbx],0x1
   140002b3e:	je     0x140002b59
   140002b40:	mov    eax,DWORD PTR [rbx]
   140002b42:	lea    rcx,[rsp+0x30]
   140002b47:	mov    rdx,r13
   140002b4a:	add    rax,r15
   140002b4d:	call   rax
   140002b4f:	test   eax,eax
   140002b51:	js     0x140002be0
   140002b57:	jle    0x140002bcd
   140002b59:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140002b60:	jne    0x140002b8a
   140002b62:	cmp    QWORD PTR [rip+0x12cde],0x0        # 0x140015848
   140002b6a:	je     0x140002b8a
   140002b6c:	lea    rcx,[rip+0x12cd5]        # 0x140015848
   140002b73:	call   0x140004190
   140002b78:	test   eax,eax
   140002b7a:	je     0x140002b8a
   140002b7c:	mov    edx,0x1
   140002b81:	mov    rcx,rbp
   140002b84:	call   QWORD PTR [rip+0x12cbe]        # 0x140015848
   140002b8a:	mov    ecx,DWORD PTR [rbx+0x4]
   140002b8d:	mov    r8d,0x1
   140002b93:	mov    rdx,r13
   140002b96:	add    rcx,r15
   140002b99:	call   0x140003630
   140002b9e:	mov    rax,QWORD PTR [r12+0x40]
   140002ba3:	mov    edx,DWORD PTR [rbx+0x4]
   140002ba6:	movsxd r9,DWORD PTR [rbp+0x0]
   140002baa:	mov    QWORD PTR [rsp+0x28],rax
   140002baf:	mov    rax,QWORD PTR [r12+0x28]
   140002bb4:	add    rdx,r15
   140002bb7:	mov    r8,rbp
   140002bba:	mov    rcx,r13
   140002bbd:	mov    QWORD PTR [rsp+0x20],rax
   140002bc2:	call   QWORD PTR [rip+0xb550]        # 0x14000e118
   140002bc8:	call   0x140003660
   140002bcd:	inc    esi
   140002bcf:	add    rbx,0x10
   140002bd3:	cmp    esi,DWORD PTR [rdi]
   140002bd5:	jae    0x140002c92
   140002bdb:	jmp    0x140002b19
   140002be0:	xor    eax,eax
   140002be2:	jmp    0x140002c97
   140002be7:	mov    r8,QWORD PTR [r9+0x20]
   140002beb:	xor    ebp,ebp
   140002bed:	xor    r13d,r13d
   140002bf0:	sub    r8,r15
   140002bf3:	test   al,0x20
   140002bf5:	je     0x140002c32
   140002bf7:	xor    edx,edx
   140002bf9:	cmp    DWORD PTR [rdi],edx
   140002bfb:	jbe    0x140002c32
   140002bfd:	lea    rcx,[rdi+0x8]
   140002c01:	mov    eax,DWORD PTR [rcx-0x4]
   140002c04:	cmp    r8,rax
   140002c07:	jb     0x140002c10
   140002c09:	mov    eax,DWORD PTR [rcx]
   140002c0b:	cmp    r8,rax
   140002c0e:	jbe    0x140002c1c
   140002c10:	inc    edx
   140002c12:	add    rcx,0x10
   140002c16:	cmp    edx,DWORD PTR [rdi]
   140002c18:	jae    0x140002c32
   140002c1a:	jmp    0x140002c01
   140002c1c:	mov    eax,edx
   140002c1e:	add    rax,rax
   140002c21:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   140002c25:	test   ecx,ecx
   140002c27:	jne    0x140002c2f
   140002c29:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   140002c2d:	jmp    0x140002c32
   140002c2f:	mov    r13d,ecx
   140002c32:	movsxd rsi,DWORD PTR [r9+0x48]
   140002c36:	mov    rbx,rsi
   140002c39:	cmp    esi,DWORD PTR [rdi]
   140002c3b:	jae    0x140002c92
   140002c3d:	inc    rbx
   140002c40:	shl    rbx,0x4
   140002c44:	add    rbx,rdi
   140002c47:	mov    eax,DWORD PTR [rbx-0xc]
   140002c4a:	cmp    r14,rax
   140002c4d:	jb     0x140002c88
   140002c4f:	mov    eax,DWORD PTR [rbx-0x8]
   140002c52:	cmp    r14,rax
   140002c55:	jae    0x140002c88
   140002c57:	test   r13d,r13d
   140002c5a:	je     0x140002c61
   140002c5c:	cmp    r13d,DWORD PTR [rbx]
   140002c5f:	je     0x140002c92
   140002c61:	test   ebp,ebp
   140002c63:	je     0x140002c6a
   140002c65:	cmp    ebp,DWORD PTR [rbx-0x4]
   140002c68:	je     0x140002c92
   140002c6a:	cmp    DWORD PTR [rbx],0x0
   140002c6d:	jne    0x140002c88
   140002c6f:	mov    rdx,QWORD PTR [rsp+0x78]
   140002c74:	lea    eax,[rsi+0x1]
   140002c77:	mov    cl,0x1
   140002c79:	mov    DWORD PTR [r12+0x48],eax
   140002c7e:	mov    r8d,DWORD PTR [rbx-0x4]
   140002c82:	add    r8,r15
   140002c85:	call   r8
   140002c88:	inc    esi
   140002c8a:	add    rbx,0x10
   140002c8e:	cmp    esi,DWORD PTR [rdi]
   140002c90:	jb     0x140002c47
   140002c92:	mov    eax,0x1
   140002c97:	lea    r11,[rsp+0x40]
   140002c9c:	mov    rbx,QWORD PTR [r11+0x30]
   140002ca0:	mov    rbp,QWORD PTR [r11+0x40]
   140002ca4:	mov    rsi,QWORD PTR [r11+0x48]
   140002ca8:	mov    rsp,r11
   140002cab:	pop    r15
   140002cad:	pop    r14
   140002caf:	pop    r13
   140002cb1:	pop    r12
   140002cb3:	pop    rdi
   140002cb4:	ret    
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	lea    rax,[rip+0xf361]        # 0x140012020
   140002cbf:	ret    
   140002cc0:	rex push rbx
   140002cc2:	sub    rsp,0x20
   140002cc6:	mov    eax,DWORD PTR [rip+0x12b74]        # 0x140015840
   140002ccc:	mov    ebx,0x14
   140002cd1:	test   eax,eax
   140002cd3:	jne    0x140002cdc
   140002cd5:	mov    eax,0x200
   140002cda:	jmp    0x140002ce1
   140002cdc:	cmp    eax,ebx
   140002cde:	cmovl  eax,ebx
   140002ce1:	movsxd rcx,eax
   140002ce4:	mov    edx,0x8
   140002ce9:	mov    DWORD PTR [rip+0x12b51],eax        # 0x140015840
   140002cef:	call   0x140006860
   140002cf4:	mov    QWORD PTR [rip+0x11b25],rax        # 0x140014820
   140002cfb:	test   rax,rax
   140002cfe:	jne    0x140002d24
   140002d00:	lea    edx,[rax+0x8]
   140002d03:	mov    rcx,rbx
   140002d06:	mov    DWORD PTR [rip+0x12b34],ebx        # 0x140015840
   140002d0c:	call   0x140006860
   140002d11:	mov    QWORD PTR [rip+0x11b08],rax        # 0x140014820
   140002d18:	test   rax,rax
   140002d1b:	jne    0x140002d24
   140002d1d:	mov    eax,0x1a
   140002d22:	jmp    0x140002d9a
   140002d24:	xor    ecx,ecx
   140002d26:	lea    rdx,[rip+0xf2f3]        # 0x140012020
   140002d2d:	mov    QWORD PTR [rcx+rax*1],rdx
   140002d31:	add    rdx,0x30
   140002d35:	add    rcx,0x8
   140002d39:	dec    rbx
   140002d3c:	je     0x140002d47
   140002d3e:	mov    rax,QWORD PTR [rip+0x11adb]        # 0x140014820
   140002d45:	jmp    0x140002d2d
   140002d47:	xor    r8d,r8d
   140002d4a:	lea    rdx,[rip+0xf2eb]        # 0x14001203c
   140002d51:	lea    r9d,[r8+0x3]
   140002d55:	mov    rcx,r8
   140002d58:	lea    r10,[rip+0x118c1]        # 0x140014620
   140002d5f:	mov    rax,r8
   140002d62:	sar    rax,0x5
   140002d66:	and    ecx,0x1f
   140002d69:	mov    rax,QWORD PTR [r10+rax*8]
   140002d6d:	imul   rcx,rcx,0x58
   140002d71:	mov    r10,QWORD PTR [rcx+rax*1]
   140002d75:	cmp    r10,0xffffffffffffffff
   140002d79:	je     0x140002d86
   140002d7b:	cmp    r10,0xfffffffffffffffe
   140002d7f:	je     0x140002d86
   140002d81:	test   r10,r10
   140002d84:	jne    0x140002d8c
   140002d86:	mov    DWORD PTR [rdx],0xfffffffe
   140002d8c:	inc    r8
   140002d8f:	add    rdx,0x30
   140002d93:	dec    r9
   140002d96:	jne    0x140002d55
   140002d98:	xor    eax,eax
   140002d9a:	add    rsp,0x20
   140002d9e:	pop    rbx
   140002d9f:	ret    
   140002da0:	sub    rsp,0x28
   140002da4:	call   0x140005dcc
   140002da9:	cmp    BYTE PTR [rip+0x10658],0x0        # 0x140013408
   140002db0:	je     0x140002db7
   140002db2:	call   0x14000696c
   140002db7:	mov    rcx,QWORD PTR [rip+0x11a62]        # 0x140014820
   140002dbe:	add    rsp,0x28
   140002dc2:	jmp    0x140001eb4
   140002dc7:	int3   
   140002dc8:	rex push rbx
   140002dca:	sub    rsp,0x20
   140002dce:	mov    rbx,rcx
   140002dd1:	lea    rcx,[rip+0xf248]        # 0x140012020
   140002dd8:	cmp    rbx,rcx
   140002ddb:	jb     0x140002e1b
   140002ddd:	lea    rax,[rip+0xf5cc]        # 0x1400123b0
   140002de4:	cmp    rbx,rax
   140002de7:	ja     0x140002e1b
   140002de9:	mov    rdx,rbx
   140002dec:	movabs rax,0x2aaaaaaaaaaaaaab
   140002df6:	sub    rdx,rcx
   140002df9:	imul   rdx
   140002dfc:	sar    rdx,0x3
   140002e00:	mov    rcx,rdx
   140002e03:	shr    rcx,0x3f
   140002e07:	lea    ecx,[rcx+rdx*1+0x10]
   140002e0b:	call   0x140003870
   140002e10:	bts    DWORD PTR [rbx+0x18],0xf
   140002e15:	add    rsp,0x20
   140002e19:	pop    rbx
   140002e1a:	ret    
   140002e1b:	lea    rcx,[rbx+0x30]
   140002e1f:	add    rsp,0x20
   140002e23:	pop    rbx
   140002e24:	rex.W jmp QWORD PTR [rip+0xb2f5]        # 0x14000e120
   140002e2b:	int3   
   140002e2c:	rex push rbx
   140002e2e:	sub    rsp,0x20
   140002e32:	mov    rbx,rdx
   140002e35:	cmp    ecx,0x14
   140002e38:	jge    0x140002e4d
   140002e3a:	add    ecx,0x10
   140002e3d:	call   0x140003870
   140002e42:	bts    DWORD PTR [rbx+0x18],0xf
   140002e47:	add    rsp,0x20
   140002e4b:	pop    rbx
   140002e4c:	ret    
   140002e4d:	lea    rcx,[rdx+0x30]
   140002e51:	add    rsp,0x20
   140002e55:	pop    rbx
   140002e56:	rex.W jmp QWORD PTR [rip+0xb2c3]        # 0x14000e120
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	lea    rdx,[rip+0xf1b9]        # 0x140012020
   140002e67:	cmp    rcx,rdx
   140002e6a:	jb     0x140002ea1
   140002e6c:	lea    rax,[rip+0xf53d]        # 0x1400123b0
   140002e73:	cmp    rcx,rax
   140002e76:	ja     0x140002ea1
   140002e78:	btr    DWORD PTR [rcx+0x18],0xf
   140002e7d:	sub    rcx,rdx
   140002e80:	movabs rax,0x2aaaaaaaaaaaaaab
   140002e8a:	imul   rcx
   140002e8d:	sar    rdx,0x3
   140002e91:	mov    rcx,rdx
   140002e94:	shr    rcx,0x3f
   140002e98:	lea    ecx,[rcx+rdx*1+0x10]
   140002e9c:	jmp    0x140003770
   140002ea1:	add    rcx,0x30
   140002ea5:	rex.W jmp QWORD PTR [rip+0xb27c]        # 0x14000e128
   140002eac:	cmp    ecx,0x14
   140002eaf:	jge    0x140002ebe
   140002eb1:	btr    DWORD PTR [rdx+0x18],0xf
   140002eb6:	add    ecx,0x10
   140002eb9:	jmp    0x140003770
   140002ebe:	lea    rcx,[rdx+0x30]
   140002ec2:	rex.W jmp QWORD PTR [rip+0xb25f]        # 0x14000e128
   140002ec9:	int3   
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140002ed1:	mov    QWORD PTR [rsp+0x18],rbp
   140002ed6:	mov    QWORD PTR [rsp+0x20],rsi
   140002edb:	push   rdi
   140002edc:	push   r12
   140002ede:	push   r13
   140002ee0:	push   r14
   140002ee2:	push   r15
   140002ee4:	sub    rsp,0x30
   140002ee8:	mov    esi,DWORD PTR [rip+0x1148e]        # 0x14001437c
   140002eee:	xor    r14d,r14d
   140002ef1:	mov    rbp,r9
   140002ef4:	lea    r15d,[r14+0x20]
   140002ef8:	mov    r12d,r8d
   140002efb:	mov    rbx,rdx
   140002efe:	mov    r13,rcx
   140002f01:	mov    r9d,r14d
   140002f04:	mov    r10d,r14d
   140002f07:	mov    r11d,r14d
   140002f0a:	cmp    WORD PTR [rdx],r15w
   140002f0e:	jne    0x140002f1a
   140002f10:	add    rbx,0x2
   140002f14:	cmp    WORD PTR [rbx],r15w
   140002f18:	je     0x140002f10
   140002f1a:	movzx  eax,WORD PTR [rbx]
   140002f1d:	mov    r8d,0x1
   140002f23:	cmp    eax,0x61
   140002f26:	je     0x140002f58
   140002f28:	cmp    eax,0x72
   140002f2b:	je     0x140002f50
   140002f2d:	cmp    eax,0x77
   140002f30:	je     0x140002f49
   140002f32:	call   0x140003564
   140002f37:	mov    DWORD PTR [rax],0x16
   140002f3d:	call   0x1400034fc
   140002f42:	xor    eax,eax
   140002f44:	jmp    0x14000318c
   140002f49:	mov    edi,0x301
   140002f4e:	jmp    0x140002f5d
   140002f50:	mov    edi,r14d
   140002f53:	or     esi,r8d
   140002f56:	jmp    0x140002f60
   140002f58:	mov    edi,0x109
   140002f5d:	or     esi,0x2
   140002f60:	add    rbx,0x2
   140002f64:	mov    edx,r8d
   140002f67:	movzx  eax,WORD PTR [rbx]
   140002f6a:	test   ax,ax
   140002f6d:	je     0x140003136
   140002f73:	test   edx,edx
   140002f75:	je     0x14000306f
   140002f7b:	movzx  ecx,ax
   140002f7e:	cmp    ecx,0x53
   140002f81:	jg     0x140002ffc
   140002f83:	je     0x140002fef
   140002f85:	sub    ecx,r15d
   140002f88:	je     0x14000305f
   140002f8e:	sub    ecx,0xb
   140002f91:	je     0x140002fda
   140002f93:	dec    ecx
   140002f95:	je     0x140002fd5
   140002f97:	sub    ecx,0x18
   140002f9a:	je     0x140002fc3
   140002f9c:	sub    ecx,0xa
   140002f9f:	je     0x140002fba
   140002fa1:	cmp    ecx,0x4
   140002fa4:	jne    0x140002f32
   140002fa6:	test   r10d,r10d
   140002fa9:	jne    0x140003056
   140002faf:	mov    r10d,r8d
   140002fb2:	or     edi,0x10
   140002fb5:	jmp    0x14000305f
   140002fba:	bts    edi,0x7
   140002fbe:	jmp    0x14000305f
   140002fc3:	test   dil,0x40
   140002fc7:	jne    0x140003056
   140002fcd:	or     edi,0x40
   140002fd0:	jmp    0x14000305f
   140002fd5:	mov    r11d,r8d
   140002fd8:	jmp    0x140003056
   140002fda:	test   dil,0x2
   140002fde:	jne    0x140003056
   140002fe0:	and    edi,0xfffffffe
   140002fe3:	and    esi,0xfffffffc
   140002fe6:	or     edi,0x2
   140002fe9:	bts    esi,0x7
   140002fed:	jmp    0x14000305f
   140002fef:	test   r10d,r10d
   140002ff2:	jne    0x140003056
   140002ff4:	mov    r10d,r8d
   140002ff7:	or     edi,r15d
   140002ffa:	jmp    0x14000305f
   140002ffc:	sub    ecx,0x54
   140002fff:	je     0x140003050
   140003001:	sub    ecx,0xe
   140003004:	je     0x140003042
   140003006:	dec    ecx
   140003008:	je     0x140003034
   14000300a:	sub    ecx,0xb
   14000300d:	je     0x140003026
   14000300f:	cmp    ecx,0x6
   140003012:	jne    0x140002f32
   140003018:	test   edi,0xc000
   14000301e:	jne    0x140003056
   140003020:	bts    edi,0xe
   140003024:	jmp    0x14000305f
   140003026:	test   r9d,r9d
   140003029:	jne    0x140003056
   14000302b:	mov    r9d,r8d
   14000302e:	btr    esi,0xe
   140003032:	jmp    0x14000305f
   140003034:	test   r9d,r9d
   140003037:	jne    0x140003056
   140003039:	mov    r9d,r8d
   14000303c:	bts    esi,0xe
   140003040:	jmp    0x14000305f
   140003042:	test   edi,0xc000
   140003048:	jne    0x140003056
   14000304a:	bts    edi,0xf
   14000304e:	jmp    0x14000305f
   140003050:	bt     edi,0xc
   140003054:	jae    0x14000305b
   140003056:	mov    edx,r14d
   140003059:	jmp    0x14000305f
   14000305b:	bts    edi,0xc
   14000305f:	add    rbx,0x2
   140003063:	movzx  eax,WORD PTR [rbx]
   140003066:	test   ax,ax
   140003069:	jne    0x140002f73
   14000306f:	test   r11d,r11d
   140003072:	je     0x140003136
   140003078:	jmp    0x14000307e
   14000307a:	add    rbx,0x2
   14000307e:	cmp    WORD PTR [rbx],r15w
   140003082:	je     0x14000307a
   140003084:	lea    rcx,[rip+0xb2dd]        # 0x14000e368
   14000308b:	mov    r8d,0x3
   140003091:	mov    rdx,rbx
   140003094:	call   0x140007478
   140003099:	test   eax,eax
   14000309b:	jne    0x140002f32
   1400030a1:	add    rbx,0x6
   1400030a5:	jmp    0x1400030ab
   1400030a7:	add    rbx,0x2
   1400030ab:	cmp    WORD PTR [rbx],r15w
   1400030af:	je     0x1400030a7
   1400030b1:	cmp    WORD PTR [rbx],0x3d
   1400030b5:	jne    0x140002f32
   1400030bb:	add    rbx,0x2
   1400030bf:	cmp    WORD PTR [rbx],r15w
   1400030c3:	je     0x1400030bb
   1400030c5:	lea    rdx,[rip+0xb2a4]        # 0x14000e370
   1400030cc:	mov    r8d,0x5
   1400030d2:	mov    rcx,rbx
   1400030d5:	call   0x1400073e0
   1400030da:	test   eax,eax
   1400030dc:	jne    0x1400030e8
   1400030de:	add    rbx,0xa
   1400030e2:	bts    edi,0x12
   1400030e6:	jmp    0x140003136
   1400030e8:	lea    rdx,[rip+0xb291]        # 0x14000e380
   1400030ef:	mov    r8d,0x8
   1400030f5:	mov    rcx,rbx
   1400030f8:	call   0x1400073e0
   1400030fd:	test   eax,eax
   1400030ff:	jne    0x14000310b
   140003101:	add    rbx,0x10
   140003105:	bts    edi,0x11
   140003109:	jmp    0x140003136
   14000310b:	lea    rdx,[rip+0xb286]        # 0x14000e398
   140003112:	mov    r8d,0x7
   140003118:	mov    rcx,rbx
   14000311b:	call   0x1400073e0
   140003120:	test   eax,eax
   140003122:	jne    0x140002f32
   140003128:	add    rbx,0xe
   14000312c:	bts    edi,0x10
   140003130:	jmp    0x140003136
   140003132:	add    rbx,0x2
   140003136:	cmp    WORD PTR [rbx],r15w
   14000313a:	je     0x140003132
   14000313c:	cmp    WORD PTR [rbx],r14w
   140003140:	jne    0x140002f32
   140003146:	lea    rcx,[rsp+0x68]
   14000314b:	mov    r9d,r12d
   14000314e:	mov    r8d,edi
   140003151:	mov    rdx,r13
   140003154:	mov    DWORD PTR [rsp+0x20],0x180
   14000315c:	call   0x140007294
   140003161:	test   eax,eax
   140003163:	jne    0x140002f42
   140003169:	inc    DWORD PTR [rip+0x10831]        # 0x1400139a0
   14000316f:	mov    eax,DWORD PTR [rsp+0x68]
   140003173:	mov    DWORD PTR [rbp+0x18],esi
   140003176:	mov    DWORD PTR [rbp+0x1c],eax
   140003179:	mov    DWORD PTR [rbp+0x8],r14d
   14000317d:	mov    QWORD PTR [rbp+0x0],r14
   140003181:	mov    rax,rbp
   140003184:	mov    QWORD PTR [rbp+0x10],r14
   140003188:	mov    QWORD PTR [rbp+0x28],r14
   14000318c:	mov    rbx,QWORD PTR [rsp+0x60]
   140003191:	mov    rbp,QWORD PTR [rsp+0x70]
   140003196:	mov    rsi,QWORD PTR [rsp+0x78]
   14000319b:	add    rsp,0x30
   14000319f:	pop    r15
   1400031a1:	pop    r14
   1400031a3:	pop    r13
   1400031a5:	pop    r12
   1400031a7:	pop    rdi
   1400031a8:	ret    
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400031b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400031b6:	push   rdi
   1400031b7:	sub    rsp,0x30
   1400031bb:	xor    ebx,ebx
   1400031bd:	lea    ecx,[rbx+0x1]
   1400031c0:	call   0x140003870
   1400031c5:	nop
   1400031c6:	xor    edi,edi
   1400031c8:	mov    DWORD PTR [rsp+0x20],edi
   1400031cc:	cmp    edi,DWORD PTR [rip+0x1266e]        # 0x140015840
   1400031d2:	jge    0x1400032c4
   1400031d8:	movsxd rsi,edi
   1400031db:	mov    rax,QWORD PTR [rip+0x1163e]        # 0x140014820
   1400031e2:	cmp    QWORD PTR [rax+rsi*8],0x0
   1400031e7:	je     0x14000324f
   1400031e9:	mov    rax,QWORD PTR [rax+rsi*8]
   1400031ed:	test   BYTE PTR [rax+0x18],0x83
   1400031f1:	jne    0x140003248
   1400031f3:	test   DWORD PTR [rax+0x18],0x8000
   1400031fa:	jne    0x140003248
   1400031fc:	lea    eax,[rdi-0x3]
   1400031ff:	cmp    eax,0x10
   140003202:	ja     0x140003214
   140003204:	lea    ecx,[rdi+0x10]
   140003207:	call   0x140003788
   14000320c:	test   eax,eax
   14000320e:	je     0x1400032c4
   140003214:	mov    rdx,QWORD PTR [rip+0x11605]        # 0x140014820
   14000321b:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14000321f:	mov    ecx,edi
   140003221:	call   0x140002e2c
   140003226:	mov    r11,QWORD PTR [rip+0x115f3]        # 0x140014820
   14000322d:	mov    rax,QWORD PTR [r11+rsi*8]
   140003231:	test   BYTE PTR [rax+0x18],0x83
   140003235:	je     0x140003243
   140003237:	mov    rdx,rax
   14000323a:	mov    ecx,edi
   14000323c:	call   0x140002eac
   140003241:	jmp    0x140003248
   140003243:	mov    rbx,rax
   140003246:	jmp    0x1400032c4
   140003248:	inc    edi
   14000324a:	jmp    0x1400031c8
   14000324f:	mov    ecx,0x58
   140003254:	call   0x1400067e0
   140003259:	mov    rcx,rax
   14000325c:	movsxd rdi,edi
   14000325f:	mov    rax,QWORD PTR [rip+0x115ba]        # 0x140014820
   140003266:	mov    QWORD PTR [rax+rdi*8],rcx
   14000326a:	test   rcx,rcx
   14000326d:	je     0x1400032c4
   14000326f:	add    rcx,0x30
   140003273:	mov    edx,0xfa0
   140003278:	call   QWORD PTR [rip+0xaeb2]        # 0x14000e130
   14000327e:	test   eax,eax
   140003280:	jne    0x1400032a0
   140003282:	mov    rcx,QWORD PTR [rip+0x11597]        # 0x140014820
   140003289:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14000328d:	call   0x140001eb4
   140003292:	mov    r11,QWORD PTR [rip+0x11587]        # 0x140014820
   140003299:	and    QWORD PTR [r11+rdi*8],0x0
   14000329e:	jmp    0x1400032c4
   1400032a0:	mov    rax,QWORD PTR [rip+0x11579]        # 0x140014820
   1400032a7:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400032ab:	add    rcx,0x30
   1400032af:	call   QWORD PTR [rip+0xae6b]        # 0x14000e120
   1400032b5:	mov    r11,QWORD PTR [rip+0x11564]        # 0x140014820
   1400032bc:	mov    rbx,QWORD PTR [r11+rdi*8]
   1400032c0:	and    DWORD PTR [rbx+0x18],0x0
   1400032c4:	test   rbx,rbx
   1400032c7:	je     0x1400032e6
   1400032c9:	and    DWORD PTR [rbx+0x18],0x8000
   1400032d0:	and    DWORD PTR [rbx+0x8],0x0
   1400032d4:	and    QWORD PTR [rbx+0x10],0x0
   1400032d9:	and    QWORD PTR [rbx],0x0
   1400032dd:	and    QWORD PTR [rbx+0x28],0x0
   1400032e2:	or     DWORD PTR [rbx+0x1c],0xffffffff
   1400032e6:	mov    ecx,0x1
   1400032eb:	call   0x140003770
   1400032f0:	mov    rax,rbx
   1400032f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400032f8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400032fd:	add    rsp,0x30
   140003301:	pop    rdi
   140003302:	ret    
   140003303:	int3   
   140003304:	mov    QWORD PTR [rip+0x1069d],rcx        # 0x1400139a8
   14000330b:	ret    
   14000330c:	mov    QWORD PTR [rsp+0x10],rbx
   140003311:	mov    QWORD PTR [rsp+0x18],rsi
   140003316:	push   rbp
   140003317:	push   rdi
   140003318:	push   r12
   14000331a:	lea    rbp,[rsp-0x4f0]
   140003322:	sub    rsp,0x5f0
   140003329:	mov    rax,QWORD PTR [rip+0xecd8]        # 0x140012008
   140003330:	xor    rax,rsp
   140003333:	mov    QWORD PTR [rbp+0x4e0],rax
   14000333a:	mov    edi,r8d
   14000333d:	mov    esi,edx
   14000333f:	mov    ebx,ecx
   140003341:	cmp    ecx,0xffffffff
   140003344:	je     0x14000334b
   140003346:	call   0x1400067d8
   14000334b:	and    DWORD PTR [rsp+0x70],0x0
   140003350:	lea    rcx,[rsp+0x74]
   140003355:	xor    edx,edx
   140003357:	mov    r8d,0x94
   14000335d:	call   0x140004a30
   140003362:	lea    r11,[rsp+0x70]
   140003367:	lea    rax,[rbp+0x10]
   14000336b:	lea    rcx,[rbp+0x10]
   14000336f:	mov    QWORD PTR [rsp+0x48],r11
   140003374:	mov    QWORD PTR [rsp+0x50],rax
   140003379:	call   QWORD PTR [rip+0xad91]        # 0x14000e110
   14000337f:	mov    r12,QWORD PTR [rbp+0x108]
   140003386:	lea    rdx,[rsp+0x40]
   14000338b:	mov    rcx,r12
   14000338e:	xor    r8d,r8d
   140003391:	call   0x14000cd9e
   140003396:	test   rax,rax
   140003399:	je     0x1400033d2
   14000339b:	and    QWORD PTR [rsp+0x38],0x0
   1400033a1:	mov    rdx,QWORD PTR [rsp+0x40]
   1400033a6:	lea    rcx,[rsp+0x60]
   1400033ab:	mov    QWORD PTR [rsp+0x30],rcx
   1400033b0:	lea    rcx,[rsp+0x58]
   1400033b5:	mov    r9,rax
   1400033b8:	mov    QWORD PTR [rsp+0x28],rcx
   1400033bd:	lea    rcx,[rbp+0x10]
   1400033c1:	mov    r8,r12
   1400033c4:	mov    QWORD PTR [rsp+0x20],rcx
   1400033c9:	xor    ecx,ecx
   1400033cb:	call   0x14000cd98
   1400033d0:	jmp    0x1400033ee
   1400033d2:	mov    rax,QWORD PTR [rbp+0x508]
   1400033d9:	mov    QWORD PTR [rbp+0x108],rax
   1400033e0:	lea    rax,[rbp+0x508]
   1400033e7:	mov    QWORD PTR [rbp+0xa8],rax
   1400033ee:	mov    rax,QWORD PTR [rbp+0x508]
   1400033f5:	mov    DWORD PTR [rsp+0x70],esi
   1400033f9:	mov    DWORD PTR [rsp+0x74],edi
   1400033fd:	mov    QWORD PTR [rbp-0x80],rax
   140003401:	call   QWORD PTR [rip+0xacf1]        # 0x14000e0f8
   140003407:	xor    ecx,ecx
   140003409:	mov    edi,eax
   14000340b:	call   QWORD PTR [rip+0xacdf]        # 0x14000e0f0
   140003411:	lea    rcx,[rsp+0x48]
   140003416:	call   QWORD PTR [rip+0xaccc]        # 0x14000e0e8
   14000341c:	test   eax,eax
   14000341e:	jne    0x140003430
   140003420:	test   edi,edi
   140003422:	jne    0x140003430
   140003424:	cmp    ebx,0xffffffff
   140003427:	je     0x140003430
   140003429:	mov    ecx,ebx
   14000342b:	call   0x1400067d8
   140003430:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140003437:	xor    rcx,rsp
   14000343a:	call   0x140001980
   14000343f:	lea    r11,[rsp+0x5f0]
   140003447:	mov    rbx,QWORD PTR [r11+0x28]
   14000344b:	mov    rsi,QWORD PTR [r11+0x30]
   14000344f:	mov    rsp,r11
   140003452:	pop    r12
   140003454:	pop    rdi
   140003455:	pop    rbp
   140003456:	ret    
   140003457:	int3   
   140003458:	sub    rsp,0x28
   14000345c:	mov    r8d,0x1
   140003462:	mov    edx,0xc0000417
   140003467:	lea    ecx,[r8+0x1]
   14000346b:	call   0x14000330c
   140003470:	call   QWORD PTR [rip+0xabb2]        # 0x14000e028
   140003476:	mov    edx,0xc0000417
   14000347b:	mov    rcx,rax
   14000347e:	add    rsp,0x28
   140003482:	rex.W jmp QWORD PTR [rip+0xac57]        # 0x14000e0e0
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	mov    QWORD PTR [rsp+0x8],rbx
   140003491:	mov    QWORD PTR [rsp+0x10],rbp
   140003496:	mov    QWORD PTR [rsp+0x18],rsi
   14000349b:	push   rdi
   14000349c:	sub    rsp,0x30
   1400034a0:	mov    rbp,rcx
   1400034a3:	mov    rcx,QWORD PTR [rip+0x104fe]        # 0x1400139a8
   1400034aa:	mov    ebx,r9d
   1400034ad:	mov    rdi,r8
   1400034b0:	mov    rsi,rdx
   1400034b3:	call   QWORD PTR [rip+0xabf7]        # 0x14000e0b0
   1400034b9:	mov    r9d,ebx
   1400034bc:	mov    r8,rdi
   1400034bf:	mov    rdx,rsi
   1400034c2:	mov    rcx,rbp
   1400034c5:	test   rax,rax
   1400034c8:	je     0x1400034eb
   1400034ca:	mov    r10,QWORD PTR [rsp+0x60]
   1400034cf:	mov    QWORD PTR [rsp+0x20],r10
   1400034d4:	call   rax
   1400034d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034db:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034e0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400034e5:	add    rsp,0x30
   1400034e9:	pop    rdi
   1400034ea:	ret    
   1400034eb:	mov    rax,QWORD PTR [rsp+0x60]
   1400034f0:	mov    QWORD PTR [rsp+0x20],rax
   1400034f5:	call   0x140003458
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	sub    rsp,0x38
   140003500:	and    QWORD PTR [rsp+0x20],0x0
   140003506:	xor    r9d,r9d
   140003509:	xor    r8d,r8d
   14000350c:	xor    edx,edx
   14000350e:	xor    ecx,ecx
   140003510:	call   0x14000348c
   140003515:	add    rsp,0x38
   140003519:	ret    
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	lea    r9,[rip+0xeebd]        # 0x1400123e0
   140003523:	xor    eax,eax
   140003525:	mov    rdx,r9
   140003528:	lea    r8d,[rax+0x8]
   14000352c:	cmp    ecx,DWORD PTR [rdx]
   14000352e:	je     0x14000355b
   140003530:	inc    eax
   140003532:	add    rdx,r8
   140003535:	cmp    eax,0x2d
   140003538:	jb     0x14000352c
   14000353a:	lea    eax,[rcx-0x13]
   14000353d:	cmp    eax,0x11
   140003540:	ja     0x140003548
   140003542:	mov    eax,0xd
   140003547:	ret    
   140003548:	add    ecx,0xffffff44
   14000354e:	mov    eax,0x16
   140003553:	cmp    ecx,0xe
   140003556:	cmovbe eax,r8d
   14000355a:	ret    
   14000355b:	cdqe   
   14000355d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140003562:	ret    
   140003563:	int3   
   140003564:	sub    rsp,0x28
   140003568:	call   0x140003c94
   14000356d:	test   rax,rax
   140003570:	jne    0x14000357b
   140003572:	lea    rax,[rip+0xefcf]        # 0x140012548
   140003579:	jmp    0x14000357f
   14000357b:	add    rax,0x10
   14000357f:	add    rsp,0x28
   140003583:	ret    
   140003584:	sub    rsp,0x28
   140003588:	call   0x140003c94
   14000358d:	test   rax,rax
   140003590:	jne    0x14000359b
   140003592:	lea    rax,[rip+0xefb3]        # 0x14001254c
   140003599:	jmp    0x14000359f
   14000359b:	add    rax,0x14
   14000359f:	add    rsp,0x28
   1400035a3:	ret    
   1400035a4:	rex push rbx
   1400035a6:	sub    rsp,0x20
   1400035aa:	mov    ebx,ecx
   1400035ac:	call   0x140003c94
   1400035b1:	test   rax,rax
   1400035b4:	jne    0x1400035bf
   1400035b6:	lea    rax,[rip+0xef8f]        # 0x14001254c
   1400035bd:	jmp    0x1400035c3
   1400035bf:	add    rax,0x14
   1400035c3:	mov    DWORD PTR [rax],ebx
   1400035c5:	call   0x140003c94
   1400035ca:	lea    r10,[rip+0xef77]        # 0x140012548
   1400035d1:	test   rax,rax
   1400035d4:	je     0x1400035da
   1400035d6:	lea    r10,[rax+0x10]
   1400035da:	mov    ecx,ebx
   1400035dc:	call   0x14000351c
   1400035e1:	mov    DWORD PTR [r10],eax
   1400035e4:	add    rsp,0x20
   1400035e8:	pop    rbx
   1400035e9:	ret    
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	int3   
   1400035f1:	int3   
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003600:	sub    rsp,0x4d8
   140003607:	xor    r8,r8
   14000360a:	xor    r9,r9
   14000360d:	mov    QWORD PTR [rsp+0x20],rsp
   140003612:	mov    QWORD PTR [rsp+0x28],r8
   140003617:	call   0x14000cda4
   14000361c:	add    rsp,0x4d8
   140003623:	ret    
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	nop    WORD PTR [rax+rax*1+0x0]
   140003630:	mov    QWORD PTR [rsp+0x8],rcx
   140003635:	mov    QWORD PTR [rsp+0x18],rdx
   14000363a:	mov    DWORD PTR [rsp+0x10],r8d
   14000363f:	mov    r9,0x19930520
   140003646:	jmp    0x140003650
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	xchg   ax,ax
   140003650:	ret    
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	nop    WORD PTR [rax+rax*1+0x0]
   140003660:	ret    
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	mov    QWORD PTR [rsp+0x8],rbx
   140003669:	mov    QWORD PTR [rsp+0x10],rsi
   14000366e:	mov    QWORD PTR [rsp+0x18],rdi
   140003673:	push   r12
   140003675:	sub    rsp,0x20
   140003679:	lea    r12,[rip+0xeed0]        # 0x140012550
   140003680:	xor    esi,esi
   140003682:	xor    ebx,ebx
   140003684:	mov    rdi,r12
   140003687:	cmp    DWORD PTR [rdi+0x8],0x1
   14000368b:	jne    0x1400036b3
   14000368d:	movsxd rax,esi
   140003690:	mov    edx,0xfa0
   140003695:	inc    esi
   140003697:	lea    rcx,[rax+rax*4]
   14000369b:	lea    rax,[rip+0x1030e]        # 0x1400139b0
   1400036a2:	lea    rcx,[rax+rcx*8]
   1400036a6:	mov    QWORD PTR [rdi],rcx
   1400036a9:	call   QWORD PTR [rip+0xaa81]        # 0x14000e130
   1400036af:	test   eax,eax
   1400036b1:	je     0x1400036d9
   1400036b3:	inc    ebx
   1400036b5:	add    rdi,0x10
   1400036b9:	cmp    ebx,0x24
   1400036bc:	jl     0x140003687
   1400036be:	mov    eax,0x1
   1400036c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400036cd:	mov    rdi,QWORD PTR [rsp+0x40]
   1400036d2:	add    rsp,0x20
   1400036d6:	pop    r12
   1400036d8:	ret    
   1400036d9:	movsxd rax,ebx
   1400036dc:	add    rax,rax
   1400036df:	and    QWORD PTR [r12+rax*8],0x0
   1400036e4:	xor    eax,eax
   1400036e6:	jmp    0x1400036c3
   1400036e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400036ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400036f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400036f7:	push   rdi
   1400036f8:	sub    rsp,0x20
   1400036fc:	mov    edi,0x24
   140003701:	lea    rbx,[rip+0xee48]        # 0x140012550
   140003708:	mov    esi,edi
   14000370a:	mov    rbp,QWORD PTR [rbx]
   14000370d:	test   rbp,rbp
   140003710:	je     0x14000372d
   140003712:	cmp    DWORD PTR [rbx+0x8],0x1
   140003716:	je     0x14000372d
   140003718:	mov    rcx,rbp
   14000371b:	call   QWORD PTR [rip+0xaa1f]        # 0x14000e140
   140003721:	mov    rcx,rbp
   140003724:	call   0x140001eb4
   140003729:	and    QWORD PTR [rbx],0x0
   14000372d:	add    rbx,0x10
   140003731:	dec    rsi
   140003734:	jne    0x14000370a
   140003736:	lea    rbx,[rip+0xee1b]        # 0x140012558
   14000373d:	mov    rcx,QWORD PTR [rbx-0x8]
   140003741:	test   rcx,rcx
   140003744:	je     0x140003751
   140003746:	cmp    DWORD PTR [rbx],0x1
   140003749:	jne    0x140003751
   14000374b:	call   QWORD PTR [rip+0xa9ef]        # 0x14000e140
   140003751:	add    rbx,0x10
   140003755:	dec    rdi
   140003758:	jne    0x14000373d
   14000375a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000375f:	mov    rbp,QWORD PTR [rsp+0x38]
   140003764:	mov    rsi,QWORD PTR [rsp+0x40]
   140003769:	add    rsp,0x20
   14000376d:	pop    rdi
   14000376e:	ret    
   14000376f:	int3   
   140003770:	movsxd rcx,ecx
   140003773:	lea    rax,[rip+0xedd6]        # 0x140012550
   14000377a:	add    rcx,rcx
   14000377d:	mov    rcx,QWORD PTR [rax+rcx*8]
   140003781:	rex.W jmp QWORD PTR [rip+0xa9a0]        # 0x14000e128
   140003788:	mov    QWORD PTR [rsp+0x8],rbx
   14000378d:	mov    QWORD PTR [rsp+0x10],rsi
   140003792:	mov    QWORD PTR [rsp+0x18],rdi
   140003797:	push   r13
   140003799:	sub    rsp,0x20
   14000379d:	movsxd rbx,ecx
   1400037a0:	mov    esi,0x1
   1400037a5:	cmp    QWORD PTR [rip+0x10aab],0x0        # 0x140014258
   1400037ad:	jne    0x1400037c6
   1400037af:	call   0x140004460
   1400037b4:	lea    ecx,[rsi+0x1d]
   1400037b7:	call   0x140004200
   1400037bc:	mov    ecx,0xff
   1400037c1:	call   0x140001b30
   1400037c6:	mov    rdi,rbx
   1400037c9:	add    rdi,rdi
   1400037cc:	lea    r13,[rip+0xed7d]        # 0x140012550
   1400037d3:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400037d9:	je     0x1400037df
   1400037db:	mov    eax,esi
   1400037dd:	jmp    0x140003858
   1400037df:	mov    ecx,0x28
   1400037e4:	call   0x1400067e0
   1400037e9:	mov    rbx,rax
   1400037ec:	test   rax,rax
   1400037ef:	jne    0x140003800
   1400037f1:	call   0x140003564
   1400037f6:	mov    DWORD PTR [rax],0xc
   1400037fc:	xor    eax,eax
   1400037fe:	jmp    0x140003858
   140003800:	mov    ecx,0xa
   140003805:	call   0x140003870
   14000380a:	nop
   14000380b:	mov    rcx,rbx
   14000380e:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140003814:	jne    0x140003843
   140003816:	mov    edx,0xfa0
   14000381b:	call   QWORD PTR [rip+0xa90f]        # 0x14000e130
   140003821:	test   eax,eax
   140003823:	jne    0x14000383c
   140003825:	mov    rcx,rbx
   140003828:	call   0x140001eb4
   14000382d:	call   0x140003564
   140003832:	mov    DWORD PTR [rax],0xc
   140003838:	xor    esi,esi
   14000383a:	jmp    0x140003849
   14000383c:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140003841:	jmp    0x140003849
   140003843:	call   0x140001eb4
   140003848:	nop
   140003849:	mov    rcx,QWORD PTR [rip+0xeda0]        # 0x1400125f0
   140003850:	call   QWORD PTR [rip+0xa8d2]        # 0x14000e128
   140003856:	jmp    0x1400037db
   140003858:	mov    rbx,QWORD PTR [rsp+0x30]
   14000385d:	mov    rsi,QWORD PTR [rsp+0x38]
   140003862:	mov    rdi,QWORD PTR [rsp+0x40]
   140003867:	add    rsp,0x20
   14000386b:	pop    r13
   14000386d:	ret    
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x8],rbx
   140003875:	push   rdi
   140003876:	sub    rsp,0x20
   14000387a:	movsxd rbx,ecx
   14000387d:	lea    rdi,[rip+0xeccc]        # 0x140012550
   140003884:	add    rbx,rbx
   140003887:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000388c:	jne    0x14000389f
   14000388e:	call   0x140003788
   140003893:	test   eax,eax
   140003895:	jne    0x14000389f
   140003897:	lea    ecx,[rax+0x11]
   14000389a:	call   0x140001e8c
   14000389f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400038a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038a8:	add    rsp,0x20
   1400038ac:	pop    rdi
   1400038ad:	rex.W jmp QWORD PTR [rip+0xa86c]        # 0x14000e120
   1400038b4:	sub    rsp,0x28
   1400038b8:	call   0x140003d18
   1400038bd:	mov    rcx,QWORD PTR [rax+0xd0]
   1400038c4:	test   rcx,rcx
   1400038c7:	je     0x1400038cd
   1400038c9:	call   rcx
   1400038cb:	jmp    0x1400038cd
   1400038cd:	call   0x140007528
   1400038d2:	add    rsp,0x28
   1400038d6:	ret    
   1400038d7:	int3   
   1400038d8:	sub    rsp,0x28
   1400038dc:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x1400038b4
   1400038e3:	call   QWORD PTR [rip+0xa84f]        # 0x14000e138
   1400038e9:	mov    QWORD PTR [rip+0x102f0],rax        # 0x140013be0
   1400038f0:	add    rsp,0x28
   1400038f4:	ret    
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	mov    QWORD PTR [rip+0x102e9],rcx        # 0x140013be8
   1400038ff:	mov    QWORD PTR [rip+0x102ea],rcx        # 0x140013bf0
   140003906:	mov    QWORD PTR [rip+0x102eb],rcx        # 0x140013bf8
   14000390d:	mov    QWORD PTR [rip+0x102ec],rcx        # 0x140013c00
   140003914:	ret    
   140003915:	int3   
   140003916:	int3   
   140003917:	int3   
   140003918:	mov    rcx,QWORD PTR [rip+0x102d9]        # 0x140013bf8
   14000391f:	rex.W jmp QWORD PTR [rip+0xa78a]        # 0x14000e0b0
   140003926:	int3   
   140003927:	int3   
   140003928:	mov    QWORD PTR [rsp+0x10],rbx
   14000392d:	mov    QWORD PTR [rsp+0x18],rsi
   140003932:	push   rdi
   140003933:	push   r12
   140003935:	push   r13
   140003937:	push   r14
   140003939:	push   r15
   14000393b:	sub    rsp,0x30
   14000393f:	mov    ebx,ecx
   140003941:	xor    edi,edi
   140003943:	mov    DWORD PTR [rsp+0x60],edi
   140003947:	xor    esi,esi
   140003949:	mov    edx,ecx
   14000394b:	sub    edx,0x2
   14000394e:	je     0x140003a19
   140003954:	sub    edx,0x2
   140003957:	je     0x1400039bb
   140003959:	sub    edx,0x2
   14000395c:	je     0x1400039ab
   14000395e:	sub    edx,0x2
   140003961:	je     0x1400039bb
   140003963:	sub    edx,0x3
   140003966:	je     0x1400039bb
   140003968:	sub    edx,0x4
   14000396b:	je     0x14000399b
   14000396d:	sub    edx,0x6
   140003970:	je     0x140003988
   140003972:	dec    edx
   140003974:	je     0x1400039ab
   140003976:	call   0x140003564
   14000397b:	mov    DWORD PTR [rax],0x16
   140003981:	call   0x1400034fc
   140003986:	jmp    0x1400039c8
   140003988:	lea    r12,[rip+0x10261]        # 0x140013bf0
   14000398f:	mov    rcx,QWORD PTR [rip+0x1025a]        # 0x140013bf0
   140003996:	jmp    0x140003a27
   14000399b:	lea    r12,[rip+0x1025e]        # 0x140013c00
   1400039a2:	mov    rcx,QWORD PTR [rip+0x10257]        # 0x140013c00
   1400039a9:	jmp    0x140003a27
   1400039ab:	lea    r12,[rip+0x10246]        # 0x140013bf8
   1400039b2:	mov    rcx,QWORD PTR [rip+0x1023f]        # 0x140013bf8
   1400039b9:	jmp    0x140003a27
   1400039bb:	call   0x140003c94
   1400039c0:	mov    rsi,rax
   1400039c3:	test   rax,rax
   1400039c6:	jne    0x1400039d0
   1400039c8:	or     eax,0xffffffff
   1400039cb:	jmp    0x140003b42
   1400039d0:	mov    rdx,QWORD PTR [rax+0xa0]
   1400039d7:	mov    rcx,rdx
   1400039da:	movsxd r8,DWORD PTR [rip+0xbd9b]        # 0x14000f77c
   1400039e1:	cmp    DWORD PTR [rcx+0x4],ebx
   1400039e4:	je     0x1400039f9
   1400039e6:	add    rcx,0x10
   1400039ea:	mov    rax,r8
   1400039ed:	shl    rax,0x4
   1400039f1:	add    rax,rdx
   1400039f4:	cmp    rcx,rax
   1400039f7:	jb     0x1400039e1
   1400039f9:	mov    rax,r8
   1400039fc:	shl    rax,0x4
   140003a00:	add    rax,rdx
   140003a03:	cmp    rcx,rax
   140003a06:	jae    0x140003a0d
   140003a08:	cmp    DWORD PTR [rcx+0x4],ebx
   140003a0b:	je     0x140003a0f
   140003a0d:	xor    ecx,ecx
   140003a0f:	lea    r12,[rcx+0x8]
   140003a13:	mov    r13,QWORD PTR [r12]
   140003a17:	jmp    0x140003a39
   140003a19:	lea    r12,[rip+0x101c8]        # 0x140013be8
   140003a20:	mov    rcx,QWORD PTR [rip+0x101c1]        # 0x140013be8
   140003a27:	mov    edi,0x1
   140003a2c:	mov    DWORD PTR [rsp+0x60],edi
   140003a30:	call   QWORD PTR [rip+0xa67a]        # 0x14000e0b0
   140003a36:	mov    r13,rax
   140003a39:	cmp    r13,0x1
   140003a3d:	jne    0x140003a46
   140003a3f:	xor    eax,eax
   140003a41:	jmp    0x140003b42
   140003a46:	test   r13,r13
   140003a49:	jne    0x140003a55
   140003a4b:	lea    ecx,[r13+0x3]
   140003a4f:	call   0x140001e60
   140003a54:	int3   
   140003a55:	test   edi,edi
   140003a57:	je     0x140003a61
   140003a59:	xor    ecx,ecx
   140003a5b:	call   0x140003870
   140003a60:	nop
   140003a61:	cmp    ebx,0x8
   140003a64:	je     0x140003a77
   140003a66:	cmp    ebx,0xb
   140003a69:	je     0x140003a77
   140003a6b:	cmp    ebx,0x4
   140003a6e:	je     0x140003a77
   140003a70:	mov    r15,QWORD PTR [rsp+0x28]
   140003a75:	jmp    0x140003aa3
   140003a77:	mov    r15,QWORD PTR [rsi+0xa8]
   140003a7e:	mov    QWORD PTR [rsp+0x28],r15
   140003a83:	and    QWORD PTR [rsi+0xa8],0x0
   140003a8b:	cmp    ebx,0x8
   140003a8e:	jne    0x140003aa3
   140003a90:	mov    r14d,DWORD PTR [rsi+0xb0]
   140003a97:	mov    DWORD PTR [rsi+0xb0],0x8c
   140003aa1:	jmp    0x140003aa8
   140003aa3:	mov    r14d,DWORD PTR [rsp+0x60]
   140003aa8:	cmp    ebx,0x8
   140003aab:	jne    0x140003ae6
   140003aad:	mov    ecx,DWORD PTR [rip+0xbcbd]        # 0x14000f770
   140003ab3:	mov    edx,ecx
   140003ab5:	mov    DWORD PTR [rsp+0x20],ecx
   140003ab9:	mov    eax,DWORD PTR [rip+0xbcb5]        # 0x14000f774
   140003abf:	add    ecx,eax
   140003ac1:	cmp    edx,ecx
   140003ac3:	jge    0x140003aef
   140003ac5:	movsxd rcx,edx
   140003ac8:	add    rcx,rcx
   140003acb:	mov    rax,QWORD PTR [rsi+0xa0]
   140003ad2:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140003ad8:	inc    edx
   140003ada:	mov    DWORD PTR [rsp+0x20],edx
   140003ade:	mov    ecx,DWORD PTR [rip+0xbc8c]        # 0x14000f770
   140003ae4:	jmp    0x140003ab9
   140003ae6:	call   0x140003ba8
   140003aeb:	mov    QWORD PTR [r12],rax
   140003aef:	test   edi,edi
   140003af1:	je     0x140003afa
   140003af3:	xor    ecx,ecx
   140003af5:	call   0x140003770
   140003afa:	mov    edi,0x8
   140003aff:	cmp    ebx,edi
   140003b01:	jne    0x140003b10
   140003b03:	mov    edx,DWORD PTR [rsi+0xb0]
   140003b09:	mov    ecx,edi
   140003b0b:	call   r13
   140003b0e:	jmp    0x140003b15
   140003b10:	mov    ecx,ebx
   140003b12:	call   r13
   140003b15:	cmp    ebx,edi
   140003b17:	je     0x140003b27
   140003b19:	cmp    ebx,0xb
   140003b1c:	je     0x140003b27
   140003b1e:	cmp    ebx,0x4
   140003b21:	jne    0x140003a3f
   140003b27:	mov    QWORD PTR [rsi+0xa8],r15
   140003b2e:	cmp    ebx,edi
   140003b30:	jne    0x140003a3f
   140003b36:	mov    DWORD PTR [rsi+0xb0],r14d
   140003b3d:	jmp    0x140003a3f
   140003b42:	mov    rbx,QWORD PTR [rsp+0x68]
   140003b47:	mov    rsi,QWORD PTR [rsp+0x70]
   140003b4c:	add    rsp,0x30
   140003b50:	pop    r15
   140003b52:	pop    r14
   140003b54:	pop    r13
   140003b56:	pop    r12
   140003b58:	pop    rdi
   140003b59:	ret    
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c10
   140003b63:	ret    
   140003b64:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c18
   140003b6b:	ret    
   140003b6c:	mov    QWORD PTR [rip+0x100ad],rcx        # 0x140013c20
   140003b73:	ret    
   140003b74:	rex push rbx
   140003b76:	sub    rsp,0x20
   140003b7a:	mov    rbx,rcx
   140003b7d:	mov    rcx,QWORD PTR [rip+0x1009c]        # 0x140013c20
   140003b84:	call   QWORD PTR [rip+0xa526]        # 0x14000e0b0
   140003b8a:	test   rax,rax
   140003b8d:	je     0x140003b9f
   140003b8f:	mov    rcx,rbx
   140003b92:	call   rax
   140003b94:	test   eax,eax
   140003b96:	je     0x140003b9f
   140003b98:	mov    eax,0x1
   140003b9d:	jmp    0x140003ba1
   140003b9f:	xor    eax,eax
   140003ba1:	add    rsp,0x20
   140003ba5:	pop    rbx
   140003ba6:	ret    
   140003ba7:	int3   
   140003ba8:	xor    ecx,ecx
   140003baa:	rex.W jmp QWORD PTR [rip+0xa587]        # 0x14000e138
   140003bb1:	int3   
   140003bb2:	int3   
   140003bb3:	int3   
   140003bb4:	sub    rsp,0x28
   140003bb8:	mov    ecx,DWORD PTR [rip+0xebd2]        # 0x140012790
   140003bbe:	cmp    ecx,0xffffffff
   140003bc1:	je     0x140003bd0
   140003bc3:	call   QWORD PTR [rip+0xa597]        # 0x14000e160
   140003bc9:	or     DWORD PTR [rip+0xebc0],0xffffffff        # 0x140012790
   140003bd0:	add    rsp,0x28
   140003bd4:	jmp    0x1400036e8
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140003be1:	push   rdi
   140003be2:	sub    rsp,0x20
   140003be6:	mov    rdi,rdx
   140003be9:	mov    rbx,rcx
   140003bec:	lea    rax,[rip+0xbabd]        # 0x14000f6b0
   140003bf3:	mov    QWORD PTR [rcx+0xa0],rax
   140003bfa:	and    DWORD PTR [rcx+0x10],0x0
   140003bfe:	mov    DWORD PTR [rcx+0x1c],0x1
   140003c05:	mov    DWORD PTR [rcx+0xc8],0x1
   140003c0f:	mov    BYTE PTR [rcx+0x174],0x43
   140003c16:	mov    BYTE PTR [rcx+0x1f7],0x43
   140003c1d:	lea    rax,[rip+0xf17c]        # 0x140012da0
   140003c24:	mov    QWORD PTR [rcx+0xb8],rax
   140003c2b:	mov    ecx,0xd
   140003c30:	call   0x140003870
   140003c35:	nop
   140003c36:	mov    rax,QWORD PTR [rbx+0xb8]
   140003c3d:	lock inc DWORD PTR [rax]
   140003c40:	mov    ecx,0xd
   140003c45:	call   0x140003770
   140003c4a:	mov    ecx,0xc
   140003c4f:	call   0x140003870
   140003c54:	nop
   140003c55:	mov    QWORD PTR [rbx+0xc0],rdi
   140003c5c:	test   rdi,rdi
   140003c5f:	jne    0x140003c6f
   140003c61:	mov    rax,QWORD PTR [rip+0xf128]        # 0x140012d90
   140003c68:	mov    QWORD PTR [rbx+0xc0],rax
   140003c6f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140003c76:	call   0x1400078b4
   140003c7b:	nop
   140003c7c:	mov    ecx,0xc
   140003c81:	call   0x140003770
   140003c86:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c8b:	add    rsp,0x20
   140003c8f:	pop    rdi
   140003c90:	ret    
   140003c91:	int3   
   140003c92:	int3   
   140003c93:	int3   
   140003c94:	mov    QWORD PTR [rsp+0x8],rbx
   140003c99:	push   rdi
   140003c9a:	sub    rsp,0x20
   140003c9e:	call   QWORD PTR [rip+0xa3d4]        # 0x14000e078
   140003ca4:	mov    ecx,DWORD PTR [rip+0xeae6]        # 0x140012790
   140003caa:	mov    edi,eax
   140003cac:	call   QWORD PTR [rip+0xa49e]        # 0x14000e150
   140003cb2:	mov    rbx,rax
   140003cb5:	test   rax,rax
   140003cb8:	jne    0x140003d02
   140003cba:	lea    ecx,[rax+0x1]
   140003cbd:	mov    edx,0x2c8
   140003cc2:	call   0x140006860
   140003cc7:	mov    rbx,rax
   140003cca:	test   rax,rax
   140003ccd:	je     0x140003d02
   140003ccf:	mov    ecx,DWORD PTR [rip+0xeabb]        # 0x140012790
   140003cd5:	mov    rdx,rax
   140003cd8:	call   QWORD PTR [rip+0xa47a]        # 0x14000e158
   140003cde:	mov    rcx,rbx
   140003ce1:	test   eax,eax
   140003ce3:	je     0x140003cfb
   140003ce5:	xor    edx,edx
   140003ce7:	call   0x140003bdc
   140003cec:	call   QWORD PTR [rip+0xa47e]        # 0x14000e170
   140003cf2:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003cf7:	mov    DWORD PTR [rbx],eax
   140003cf9:	jmp    0x140003d02
   140003cfb:	call   0x140001eb4
   140003d00:	xor    ebx,ebx
   140003d02:	mov    ecx,edi
   140003d04:	call   QWORD PTR [rip+0xa45e]        # 0x14000e168
   140003d0a:	mov    rax,rbx
   140003d0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d12:	add    rsp,0x20
   140003d16:	pop    rdi
   140003d17:	ret    
   140003d18:	rex push rbx
   140003d1a:	sub    rsp,0x20
   140003d1e:	call   0x140003c94
   140003d23:	mov    rbx,rax
   140003d26:	test   rax,rax
   140003d29:	jne    0x140003d33
   140003d2b:	lea    ecx,[rax+0x10]
   140003d2e:	call   0x140001e8c
   140003d33:	mov    rax,rbx
   140003d36:	add    rsp,0x20
   140003d3a:	pop    rbx
   140003d3b:	ret    
   140003d3c:	test   rcx,rcx
   140003d3f:	je     0x140003e6e
   140003d45:	mov    QWORD PTR [rsp+0x10],rbx
   140003d4a:	push   rdi
   140003d4b:	sub    rsp,0x20
   140003d4f:	mov    rbx,rcx
   140003d52:	mov    rcx,QWORD PTR [rcx+0x38]
   140003d56:	test   rcx,rcx
   140003d59:	je     0x140003d60
   140003d5b:	call   0x140001eb4
   140003d60:	mov    rcx,QWORD PTR [rbx+0x48]
   140003d64:	test   rcx,rcx
   140003d67:	je     0x140003d6e
   140003d69:	call   0x140001eb4
   140003d6e:	mov    rcx,QWORD PTR [rbx+0x58]
   140003d72:	test   rcx,rcx
   140003d75:	je     0x140003d7c
   140003d77:	call   0x140001eb4
   140003d7c:	mov    rcx,QWORD PTR [rbx+0x68]
   140003d80:	test   rcx,rcx
   140003d83:	je     0x140003d8a
   140003d85:	call   0x140001eb4
   140003d8a:	mov    rcx,QWORD PTR [rbx+0x70]
   140003d8e:	test   rcx,rcx
   140003d91:	je     0x140003d98
   140003d93:	call   0x140001eb4
   140003d98:	mov    rcx,QWORD PTR [rbx+0x78]
   140003d9c:	test   rcx,rcx
   140003d9f:	je     0x140003da6
   140003da1:	call   0x140001eb4
   140003da6:	mov    rcx,QWORD PTR [rbx+0x80]
   140003dad:	test   rcx,rcx
   140003db0:	je     0x140003db7
   140003db2:	call   0x140001eb4
   140003db7:	mov    rcx,QWORD PTR [rbx+0xa0]
   140003dbe:	lea    rax,[rip+0xb8eb]        # 0x14000f6b0
   140003dc5:	cmp    rcx,rax
   140003dc8:	je     0x140003dcf
   140003dca:	call   0x140001eb4
   140003dcf:	mov    edi,0xd
   140003dd4:	mov    ecx,edi
   140003dd6:	call   0x140003870
   140003ddb:	nop
   140003ddc:	mov    rcx,QWORD PTR [rbx+0xb8]
   140003de3:	mov    QWORD PTR [rsp+0x30],rcx
   140003de8:	test   rcx,rcx
   140003deb:	je     0x140003e09
   140003ded:	lock dec DWORD PTR [rcx]
   140003df0:	jne    0x140003e09
   140003df2:	lea    rax,[rip+0xefa7]        # 0x140012da0
   140003df9:	mov    rcx,QWORD PTR [rsp+0x30]
   140003dfe:	cmp    rcx,rax
   140003e01:	je     0x140003e09
   140003e03:	call   0x140001eb4
   140003e08:	nop
   140003e09:	mov    ecx,edi
   140003e0b:	call   0x140003770
   140003e10:	mov    ecx,0xc
   140003e15:	call   0x140003870
   140003e1a:	nop
   140003e1b:	mov    rdi,QWORD PTR [rbx+0xc0]
   140003e22:	test   rdi,rdi
   140003e25:	je     0x140003e52
   140003e27:	mov    rcx,rdi
   140003e2a:	call   0x140007940
   140003e2f:	cmp    rdi,QWORD PTR [rip+0xef5a]        # 0x140012d90
   140003e36:	je     0x140003e52
   140003e38:	lea    rax,[rip+0xedf1]        # 0x140012c30
   140003e3f:	cmp    rdi,rax
   140003e42:	je     0x140003e52
   140003e44:	cmp    DWORD PTR [rdi],0x0
   140003e47:	jne    0x140003e52
   140003e49:	mov    rcx,rdi
   140003e4c:	call   0x1400079e4
   140003e51:	nop
   140003e52:	mov    ecx,0xc
   140003e57:	call   0x140003770
   140003e5c:	mov    rcx,rbx
   140003e5f:	call   0x140001eb4
   140003e64:	mov    rbx,QWORD PTR [rsp+0x38]
   140003e69:	add    rsp,0x20
   140003e6d:	pop    rdi
   140003e6e:	ret    
   140003e6f:	int3   
   140003e70:	rex push rbx
   140003e72:	sub    rsp,0x20
   140003e76:	call   0x140001b60
   140003e7b:	call   0x140003664
   140003e80:	test   eax,eax
   140003e82:	je     0x140003ee4
   140003e84:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x140003d3c
   140003e8b:	call   QWORD PTR [rip+0xa2e7]        # 0x14000e178
   140003e91:	mov    DWORD PTR [rip+0xe8f9],eax        # 0x140012790
   140003e97:	cmp    eax,0xffffffff
   140003e9a:	je     0x140003ee4
   140003e9c:	mov    edx,0x2c8
   140003ea1:	mov    ecx,0x1
   140003ea6:	call   0x140006860
   140003eab:	mov    rbx,rax
   140003eae:	test   rax,rax
   140003eb1:	je     0x140003ee4
   140003eb3:	mov    ecx,DWORD PTR [rip+0xe8d7]        # 0x140012790
   140003eb9:	mov    rdx,rax
   140003ebc:	call   QWORD PTR [rip+0xa296]        # 0x14000e158
   140003ec2:	test   eax,eax
   140003ec4:	je     0x140003ee4
   140003ec6:	xor    edx,edx
   140003ec8:	mov    rcx,rbx
   140003ecb:	call   0x140003bdc
   140003ed0:	call   QWORD PTR [rip+0xa29a]        # 0x14000e170
   140003ed6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003edb:	mov    DWORD PTR [rbx],eax
   140003edd:	mov    eax,0x1
   140003ee2:	jmp    0x140003eeb
   140003ee4:	call   0x140003bb4
   140003ee9:	xor    eax,eax
   140003eeb:	add    rsp,0x20
   140003eef:	pop    rbx
   140003ef0:	ret    
   140003ef1:	int3   
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	rex push rbx
   140003ef6:	sub    rsp,0x20
   140003efa:	mov    edx,0x8
   140003eff:	lea    ecx,[rdx+0x18]
   140003f02:	call   0x140006860
   140003f07:	mov    rcx,rax
   140003f0a:	mov    rbx,rax
   140003f0d:	call   QWORD PTR [rip+0xa225]        # 0x14000e138
   140003f13:	mov    QWORD PTR [rip+0x1194e],rax        # 0x140015868
   140003f1a:	mov    QWORD PTR [rip+0x1193f],rax        # 0x140015860
   140003f21:	test   rbx,rbx
   140003f24:	jne    0x140003f2b
   140003f26:	lea    eax,[rbx+0x18]
   140003f29:	jmp    0x140003f31
   140003f2b:	and    QWORD PTR [rbx],0x0
   140003f2f:	xor    eax,eax
   140003f31:	add    rsp,0x20
   140003f35:	pop    rbx
   140003f36:	ret    
   140003f37:	int3   
   140003f38:	mov    QWORD PTR [rsp+0x8],rbx
   140003f3d:	mov    QWORD PTR [rsp+0x10],rsi
   140003f42:	mov    QWORD PTR [rsp+0x18],rdi
   140003f47:	push   r12
   140003f49:	push   r13
   140003f4b:	push   r14
   140003f4d:	sub    rsp,0x20
   140003f51:	mov    r14,rcx
   140003f54:	call   0x140001b48
   140003f59:	nop
   140003f5a:	mov    rcx,QWORD PTR [rip+0x11907]        # 0x140015868
   140003f61:	call   QWORD PTR [rip+0xa149]        # 0x14000e0b0
   140003f67:	mov    r12,rax
   140003f6a:	mov    rcx,QWORD PTR [rip+0x118ef]        # 0x140015860
   140003f71:	call   QWORD PTR [rip+0xa139]        # 0x14000e0b0
   140003f77:	mov    rbx,rax
   140003f7a:	cmp    rax,r12
   140003f7d:	jb     0x14000401e
   140003f83:	mov    rdi,rax
   140003f86:	sub    rdi,r12
   140003f89:	lea    r13,[rdi+0x8]
   140003f8d:	cmp    r13,0x8
   140003f91:	jb     0x14000401e
   140003f97:	mov    rcx,r12
   140003f9a:	call   0x140008478
   140003f9f:	mov    rsi,rax
   140003fa2:	cmp    rax,r13
   140003fa5:	jae    0x140003ffc
   140003fa7:	mov    edx,0x1000
   140003fac:	cmp    rax,rdx
   140003faf:	cmovb  rdx,rax
   140003fb3:	add    rdx,rax
   140003fb6:	cmp    rdx,rax
   140003fb9:	jb     0x140003fcc
   140003fbb:	mov    rcx,r12
   140003fbe:	call   0x1400068e4
   140003fc3:	xor    ebx,ebx
   140003fc5:	test   rax,rax
   140003fc8:	jne    0x140003fe4
   140003fca:	jmp    0x140003fce
   140003fcc:	xor    ebx,ebx
   140003fce:	lea    rdx,[rsi+0x20]
   140003fd2:	cmp    rdx,rsi
   140003fd5:	jb     0x140004020
   140003fd7:	mov    rcx,r12
   140003fda:	call   0x1400068e4
   140003fdf:	test   rax,rax
   140003fe2:	je     0x140004020
   140003fe4:	sar    rdi,0x3
   140003fe8:	lea    rbx,[rax+rdi*8]
   140003fec:	mov    rcx,rax
   140003fef:	call   QWORD PTR [rip+0xa143]        # 0x14000e138
   140003ff5:	mov    QWORD PTR [rip+0x1186c],rax        # 0x140015868
   140003ffc:	mov    rcx,r14
   140003fff:	call   QWORD PTR [rip+0xa133]        # 0x14000e138
   140004005:	mov    QWORD PTR [rbx],rax
   140004008:	lea    rcx,[rbx+0x8]
   14000400c:	call   QWORD PTR [rip+0xa126]        # 0x14000e138
   140004012:	mov    QWORD PTR [rip+0x11847],rax        # 0x140015860
   140004019:	mov    rbx,r14
   14000401c:	jmp    0x140004020
   14000401e:	xor    ebx,ebx
   140004020:	call   0x140001b54
   140004025:	mov    rax,rbx
   140004028:	mov    rbx,QWORD PTR [rsp+0x40]
   14000402d:	mov    rsi,QWORD PTR [rsp+0x48]
   140004032:	mov    rdi,QWORD PTR [rsp+0x50]
   140004037:	add    rsp,0x20
   14000403b:	pop    r14
   14000403d:	pop    r13
   14000403f:	pop    r12
   140004041:	ret    
   140004042:	int3   
   140004043:	int3   
   140004044:	sub    rsp,0x28
   140004048:	call   0x140003f38
   14000404d:	neg    rax
   140004050:	sbb    eax,eax
   140004052:	neg    eax
   140004054:	dec    eax
   140004056:	add    rsp,0x28
   14000405a:	ret    
   14000405b:	int3   
   14000405c:	mov    QWORD PTR [rsp+0x8],rbx
   140004061:	push   rdi
   140004062:	sub    rsp,0x20
   140004066:	lea    rbx,[rip+0xc17b]        # 0x1400101e8
   14000406d:	lea    rdi,[rip+0xc174]        # 0x1400101e8
   140004074:	jmp    0x140004084
   140004076:	mov    rax,QWORD PTR [rbx]
   140004079:	test   rax,rax
   14000407c:	je     0x140004080
   14000407e:	call   rax
   140004080:	add    rbx,0x8
   140004084:	cmp    rbx,rdi
   140004087:	jb     0x140004076
   140004089:	mov    rbx,QWORD PTR [rsp+0x30]
   14000408e:	add    rsp,0x20
   140004092:	pop    rdi
   140004093:	ret    
   140004094:	mov    QWORD PTR [rsp+0x8],rbx
   140004099:	push   rdi
   14000409a:	sub    rsp,0x20
   14000409e:	lea    rbx,[rip+0xc153]        # 0x1400101f8
   1400040a5:	lea    rdi,[rip+0xc14c]        # 0x1400101f8
   1400040ac:	jmp    0x1400040bc
   1400040ae:	mov    rax,QWORD PTR [rbx]
   1400040b1:	test   rax,rax
   1400040b4:	je     0x1400040b8
   1400040b6:	call   rax
   1400040b8:	add    rbx,0x8
   1400040bc:	cmp    rbx,rdi
   1400040bf:	jb     0x1400040ae
   1400040c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040c6:	add    rsp,0x20
   1400040ca:	pop    rdi
   1400040cb:	ret    
   1400040cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400040d1:	push   rdi
   1400040d2:	sub    rsp,0x20
   1400040d6:	lea    rbx,[rip+0xe6c3]        # 0x1400127a0
   1400040dd:	mov    edi,0xa
   1400040e2:	mov    rcx,QWORD PTR [rbx]
   1400040e5:	call   QWORD PTR [rip+0xa04d]        # 0x14000e138
   1400040eb:	mov    QWORD PTR [rbx],rax
   1400040ee:	add    rbx,0x8
   1400040f2:	dec    rdi
   1400040f5:	jne    0x1400040e2
   1400040f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040fc:	add    rsp,0x20
   140004100:	pop    rdi
   140004101:	ret    
   140004102:	int3   
   140004103:	int3   
   140004104:	int3   
   140004105:	int3   
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	mov    rax,rcx
   140004113:	mov    ecx,0x5a4d
   140004118:	cmp    WORD PTR [rax],cx
   14000411b:	je     0x140004120
   14000411d:	xor    eax,eax
   14000411f:	ret    
   140004120:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004124:	add    rcx,rax
   140004127:	xor    eax,eax
   140004129:	cmp    DWORD PTR [rcx],0x4550
   14000412f:	jne    0x14000413d
   140004131:	mov    edx,0x20b
   140004136:	cmp    WORD PTR [rcx+0x18],dx
   14000413a:	sete   al
   14000413d:	repz ret 
   14000413f:	int3   
   140004140:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004144:	xor    r9d,r9d
   140004147:	mov    r10,rdx
   14000414a:	add    r8,rcx
   14000414d:	movzx  eax,WORD PTR [r8+0x14]
   140004152:	movzx  r11d,WORD PTR [r8+0x6]
   140004157:	lea    rcx,[rax+r8*1+0x18]
   14000415c:	test   r11d,r11d
   14000415f:	je     0x14000417f
   140004161:	mov    edx,DWORD PTR [rcx+0xc]
   140004164:	cmp    r10,rdx
   140004167:	jb     0x140004173
   140004169:	mov    eax,DWORD PTR [rcx+0x8]
   14000416c:	add    eax,edx
   14000416e:	cmp    r10,rax
   140004171:	jb     0x140004182
   140004173:	inc    r9d
   140004176:	add    rcx,0x28
   14000417a:	cmp    r9d,r11d
   14000417d:	jb     0x140004161
   14000417f:	xor    eax,eax
   140004181:	ret    
   140004182:	mov    rax,rcx
   140004185:	ret    
   140004186:	int3   
   140004187:	int3   
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	sub    rsp,0x28
   140004194:	mov    r8,rcx
   140004197:	lea    r9,[rip+0xffffffffffffbe62]        # 0x140000000
   14000419e:	mov    rcx,r9
   1400041a1:	call   0x140004110
   1400041a6:	test   eax,eax
   1400041a8:	je     0x1400041cc
   1400041aa:	sub    r8,r9
   1400041ad:	mov    rdx,r8
   1400041b0:	mov    rcx,r9
   1400041b3:	call   0x140004140
   1400041b8:	test   rax,rax
   1400041bb:	je     0x1400041cc
   1400041bd:	mov    eax,DWORD PTR [rax+0x24]
   1400041c0:	shr    eax,0x1f
   1400041c3:	not    eax
   1400041c5:	and    eax,0x1
   1400041c8:	jmp    0x1400041cc
   1400041ca:	xor    eax,eax
   1400041cc:	add    rsp,0x28
   1400041d0:	ret    
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	lea    r8,[rip+0xaa95]        # 0x14000ec70
   1400041db:	xor    eax,eax
   1400041dd:	mov    rdx,r8
   1400041e0:	cmp    ecx,DWORD PTR [rdx]
   1400041e2:	je     0x1400041f2
   1400041e4:	inc    eax
   1400041e6:	add    rdx,0x10
   1400041ea:	cmp    eax,0x16
   1400041ed:	jb     0x1400041e0
   1400041ef:	xor    eax,eax
   1400041f1:	ret    
   1400041f2:	cdqe   
   1400041f4:	add    rax,rax
   1400041f7:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   1400041fc:	ret    
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	mov    QWORD PTR [rsp+0x10],rbx
   140004205:	mov    QWORD PTR [rsp+0x18],rbp
   14000420a:	mov    QWORD PTR [rsp+0x20],rsi
   14000420f:	push   rdi
   140004210:	push   r12
   140004212:	push   r13
   140004214:	sub    rsp,0x250
   14000421b:	mov    rax,QWORD PTR [rip+0xdde6]        # 0x140012008
   140004222:	xor    rax,rsp
   140004225:	mov    QWORD PTR [rsp+0x240],rax
   14000422d:	mov    edi,ecx
   14000422f:	call   0x1400041d4
   140004234:	xor    esi,esi
   140004236:	mov    rbx,rax
   140004239:	test   rax,rax
   14000423c:	je     0x140004430
   140004242:	lea    ecx,[rsi+0x3]
   140004245:	call   0x140008960
   14000424a:	cmp    eax,0x1
   14000424d:	je     0x1400043c8
   140004253:	lea    ecx,[rsi+0x3]
   140004256:	call   0x140008960
   14000425b:	test   eax,eax
   14000425d:	jne    0x14000426c
   14000425f:	cmp    DWORD PTR [rip+0xdd9a],0x1        # 0x140012000
   140004266:	je     0x1400043c8
   14000426c:	cmp    edi,0xfc
   140004272:	je     0x140004430
   140004278:	lea    rbp,[rip+0xf9b1]        # 0x140013c30
   14000427f:	mov    r12d,0x314
   140004285:	lea    r8,[rip+0xabd4]        # 0x14000ee60
   14000428c:	mov    rcx,rbp
   14000428f:	mov    edx,r12d
   140004292:	call   0x1400088f4
   140004297:	xor    ecx,ecx
   140004299:	test   eax,eax
   14000429b:	jne    0x1400043b5
   1400042a1:	lea    r13,[rip+0xf9ba]        # 0x140013c62
   1400042a8:	mov    r8d,0x104
   1400042ae:	mov    WORD PTR [rip+0xfbb5],si        # 0x140013e6a
   1400042b5:	mov    rdx,r13
   1400042b8:	call   QWORD PTR [rip+0x9d92]        # 0x14000e050
   1400042be:	lea    edi,[r12-0x19]
   1400042c3:	test   eax,eax
   1400042c5:	jne    0x1400042f1
   1400042c7:	lea    r8,[rip+0xab62]        # 0x14000ee30
   1400042ce:	mov    edx,edi
   1400042d0:	mov    rcx,r13
   1400042d3:	call   0x1400088f4
   1400042d8:	test   eax,eax
   1400042da:	je     0x1400042f1
   1400042dc:	xor    r9d,r9d
   1400042df:	xor    r8d,r8d
   1400042e2:	xor    edx,edx
   1400042e4:	xor    ecx,ecx
   1400042e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400042eb:	call   0x140003458
   1400042f0:	int3   
   1400042f1:	mov    rcx,r13
   1400042f4:	call   0x1400088d8
   1400042f9:	inc    rax
   1400042fc:	cmp    rax,0x3c
   140004300:	jbe    0x140004349
   140004302:	mov    rcx,r13
   140004305:	call   0x1400088d8
   14000430a:	lea    r8,[rip+0xab17]        # 0x14000ee28
   140004311:	mov    r9d,0x3
   140004317:	lea    rcx,[rbp+rax*2-0x44]
   14000431c:	mov    rax,rcx
   14000431f:	sub    rax,r13
   140004322:	sar    rax,1
   140004325:	sub    rdi,rax
   140004328:	mov    rdx,rdi
   14000432b:	call   0x140008808
   140004330:	test   eax,eax
   140004332:	je     0x140004349
   140004334:	xor    r9d,r9d
   140004337:	xor    r8d,r8d
   14000433a:	xor    edx,edx
   14000433c:	xor    ecx,ecx
   14000433e:	mov    QWORD PTR [rsp+0x20],rsi
   140004343:	call   0x140003458
   140004348:	int3   
   140004349:	lea    r8,[rip+0xaacc]        # 0x14000ee1c
   140004350:	mov    rdx,r12
   140004353:	mov    rcx,rbp
   140004356:	call   0x140008780
   14000435b:	test   eax,eax
   14000435d:	jne    0x1400043a0
   14000435f:	mov    r8,rbx
   140004362:	mov    rdx,r12
   140004365:	mov    rcx,rbp
   140004368:	call   0x140008780
   14000436d:	test   eax,eax
   14000436f:	jne    0x14000438b
   140004371:	lea    rdx,[rip+0xaa58]        # 0x14000edd0
   140004378:	mov    r8d,0x12010
   14000437e:	mov    rcx,rbp
   140004381:	call   0x140008578
   140004386:	jmp    0x140004430
   14000438b:	xor    r9d,r9d
   14000438e:	xor    r8d,r8d
   140004391:	xor    edx,edx
   140004393:	xor    ecx,ecx
   140004395:	mov    QWORD PTR [rsp+0x20],rsi
   14000439a:	call   0x140003458
   14000439f:	int3   
   1400043a0:	xor    r9d,r9d
   1400043a3:	xor    r8d,r8d
   1400043a6:	xor    edx,edx
   1400043a8:	xor    ecx,ecx
   1400043aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400043af:	call   0x140003458
   1400043b4:	int3   
   1400043b5:	xor    r9d,r9d
   1400043b8:	xor    r8d,r8d
   1400043bb:	xor    edx,edx
   1400043bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400043c2:	call   0x140003458
   1400043c7:	int3   
   1400043c8:	mov    ecx,0xfffffff4
   1400043cd:	call   QWORD PTR [rip+0x9c9d]        # 0x14000e070
   1400043d3:	mov    rdi,rax
   1400043d6:	test   rax,rax
   1400043d9:	je     0x140004430
   1400043db:	cmp    rax,0xffffffffffffffff
   1400043df:	je     0x140004430
   1400043e1:	mov    edx,esi
   1400043e3:	lea    r8,[rsp+0x40]
   1400043e8:	mov    cl,BYTE PTR [rbx]
   1400043ea:	mov    BYTE PTR [r8],cl
   1400043ed:	cmp    WORD PTR [rbx],si
   1400043f0:	je     0x140004403
   1400043f2:	inc    edx
   1400043f4:	inc    r8
   1400043f7:	add    rbx,0x2
   1400043fb:	cmp    edx,0x1f4
   140004401:	jb     0x1400043e8
   140004403:	lea    rcx,[rsp+0x40]
   140004408:	mov    BYTE PTR [rsp+0x233],sil
   140004410:	call   0x1400084d0
   140004415:	lea    r9,[rsp+0x30]
   14000441a:	lea    rdx,[rsp+0x40]
   14000441f:	mov    rcx,rdi
   140004422:	mov    r8,rax
   140004425:	mov    QWORD PTR [rsp+0x20],rsi
   14000442a:	call   QWORD PTR [rip+0x9d50]        # 0x14000e180
   140004430:	mov    rcx,QWORD PTR [rsp+0x240]
   140004438:	xor    rcx,rsp
   14000443b:	call   0x140001980
   140004440:	lea    r11,[rsp+0x250]
   140004448:	mov    rbx,QWORD PTR [r11+0x28]
   14000444c:	mov    rbp,QWORD PTR [r11+0x30]
   140004450:	mov    rsi,QWORD PTR [r11+0x38]
   140004454:	mov    rsp,r11
   140004457:	pop    r13
   140004459:	pop    r12
   14000445b:	pop    rdi
   14000445c:	ret    
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	sub    rsp,0x28
   140004464:	mov    ecx,0x3
   140004469:	call   0x140008960
   14000446e:	cmp    eax,0x1
   140004471:	je     0x14000448a
   140004473:	mov    ecx,0x3
   140004478:	call   0x140008960
   14000447d:	test   eax,eax
   14000447f:	jne    0x14000449e
   140004481:	cmp    DWORD PTR [rip+0xdb78],0x1        # 0x140012000
   140004488:	jne    0x14000449e
   14000448a:	mov    ecx,0xfc
   14000448f:	call   0x140004200
   140004494:	mov    ecx,0xff
   140004499:	call   0x140004200
   14000449e:	add    rsp,0x28
   1400044a2:	ret    
   1400044a3:	int3   
   1400044a4:	sub    rsp,0x28
   1400044a8:	xor    r8d,r8d
   1400044ab:	mov    edx,0x1000
   1400044b0:	xor    ecx,ecx
   1400044b2:	mov    DWORD PTR [rsp+0x30],0x2
   1400044ba:	call   QWORD PTR [rip+0x9cd8]        # 0x14000e198
   1400044c0:	mov    QWORD PTR [rip+0xfd91],rax        # 0x140014258
   1400044c7:	test   rax,rax
   1400044ca:	je     0x1400044f5
   1400044cc:	call   QWORD PTR [rip+0x9cbe]        # 0x14000e190
   1400044d2:	cmp    al,0x6
   1400044d4:	jae    0x1400044f0
   1400044d6:	mov    rcx,QWORD PTR [rip+0xfd7b]        # 0x140014258
   1400044dd:	lea    r8,[rsp+0x30]
   1400044e2:	mov    r9d,0x4
   1400044e8:	xor    edx,edx
   1400044ea:	call   QWORD PTR [rip+0x9c98]        # 0x14000e188
   1400044f0:	mov    eax,0x1
   1400044f5:	add    rsp,0x28
   1400044f9:	ret    
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	mov    QWORD PTR [rsp+0x8],rbx
   140004501:	push   rdi
   140004502:	sub    rsp,0x20
   140004506:	mov    rbx,r8
   140004509:	mov    rdi,rdx
   14000450c:	test   rcx,rcx
   14000450f:	je     0x14000452e
   140004511:	xor    edx,edx
   140004513:	lea    rax,[rdx-0x20]
   140004517:	div    rcx
   14000451a:	cmp    rax,rdi
   14000451d:	jae    0x14000452e
   14000451f:	call   0x140003564
   140004524:	mov    DWORD PTR [rax],0xc
   14000452a:	xor    eax,eax
   14000452c:	jmp    0x14000458b
   14000452e:	imul   rdi,rcx
   140004532:	mov    eax,0x1
   140004537:	test   rdi,rdi
   14000453a:	cmove  rdi,rax
   14000453e:	xor    eax,eax
   140004540:	cmp    rdi,0xffffffffffffffe0
   140004544:	ja     0x14000455e
   140004546:	mov    rcx,QWORD PTR [rip+0xfd0b]        # 0x140014258
   14000454d:	lea    edx,[rax+0x8]
   140004550:	mov    r8,rdi
   140004553:	call   QWORD PTR [rip+0x9b67]        # 0x14000e0c0
   140004559:	test   rax,rax
   14000455c:	jne    0x14000458b
   14000455e:	cmp    DWORD PTR [rip+0xfcfb],0x0        # 0x140014260
   140004565:	je     0x140004580
   140004567:	mov    rcx,rdi
   14000456a:	call   0x140003b74
   14000456f:	test   eax,eax
   140004571:	jne    0x14000453e
   140004573:	test   rbx,rbx
   140004576:	je     0x14000452a
   140004578:	mov    DWORD PTR [rbx],0xc
   14000457e:	jmp    0x14000452a
   140004580:	test   rbx,rbx
   140004583:	je     0x14000458b
   140004585:	mov    DWORD PTR [rbx],0xc
   14000458b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004590:	add    rsp,0x20
   140004594:	pop    rdi
   140004595:	ret    
   140004596:	int3   
   140004597:	int3   
   140004598:	mov    QWORD PTR [rsp+0x8],rbx
   14000459d:	mov    QWORD PTR [rsp+0x10],rsi
   1400045a2:	mov    QWORD PTR [rsp+0x18],rdi
   1400045a7:	push   rbp
   1400045a8:	push   r12
   1400045aa:	push   r13
   1400045ac:	mov    rbp,rsp
   1400045af:	sub    rsp,0x50
   1400045b3:	xor    ebx,ebx
   1400045b5:	mov    r12,r8
   1400045b8:	mov    r13,rcx
   1400045bb:	mov    rsi,rdx
   1400045be:	lea    rcx,[rbp-0x28]
   1400045c2:	lea    r8d,[rbx+0x28]
   1400045c6:	xor    edx,edx
   1400045c8:	mov    rdi,r9
   1400045cb:	mov    QWORD PTR [rbp-0x30],rbx
   1400045cf:	call   0x140004a30
   1400045d4:	test   rdi,rdi
   1400045d7:	jne    0x1400045ee
   1400045d9:	call   0x140003564
   1400045de:	mov    DWORD PTR [rax],0x16
   1400045e4:	call   0x1400034fc
   1400045e9:	or     eax,0xffffffff
   1400045ec:	jmp    0x140004664
   1400045ee:	test   r12,r12
   1400045f1:	je     0x1400045f8
   1400045f3:	test   rsi,rsi
   1400045f6:	je     0x1400045d9
   1400045f8:	mov    r9,QWORD PTR [rbp+0x48]
   1400045fc:	mov    r8,QWORD PTR [rbp+0x40]
   140004600:	mov    ecx,0x7fffffff
   140004605:	cmp    r12,rcx
   140004608:	mov    eax,r12d
   14000460b:	mov    rdx,rdi
   14000460e:	cmova  eax,ecx
   140004611:	lea    rcx,[rbp-0x30]
   140004615:	mov    DWORD PTR [rbp-0x18],0x42
   14000461c:	mov    QWORD PTR [rbp-0x20],rsi
   140004620:	mov    QWORD PTR [rbp-0x30],rsi
   140004624:	mov    DWORD PTR [rbp-0x28],eax
   140004627:	call   r13
   14000462a:	mov    edi,eax
   14000462c:	test   rsi,rsi
   14000462f:	je     0x140004664
   140004631:	test   eax,eax
   140004633:	js     0x140004656
   140004635:	dec    DWORD PTR [rbp-0x28]
   140004638:	js     0x140004642
   14000463a:	mov    rax,QWORD PTR [rbp-0x30]
   14000463e:	mov    BYTE PTR [rax],bl
   140004640:	jmp    0x140004652
   140004642:	lea    rdx,[rbp-0x30]
   140004646:	xor    ecx,ecx
   140004648:	call   0x1400047e8
   14000464d:	cmp    eax,0xffffffff
   140004650:	je     0x140004656
   140004652:	mov    eax,edi
   140004654:	jmp    0x140004664
   140004656:	cmp    DWORD PTR [rbp-0x28],ebx
   140004659:	mov    BYTE PTR [rsi+r12*1-0x1],bl
   14000465e:	setge  bl
   140004661:	lea    eax,[rbx-0x2]
   140004664:	lea    r11,[rsp+0x50]
   140004669:	mov    rbx,QWORD PTR [r11+0x20]
   14000466d:	mov    rsi,QWORD PTR [r11+0x28]
   140004671:	mov    rdi,QWORD PTR [r11+0x30]
   140004675:	mov    rsp,r11
   140004678:	pop    r13
   14000467a:	pop    r12
   14000467c:	pop    rbp
   14000467d:	ret    
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    rax,rsp
   140004683:	mov    QWORD PTR [rax+0x8],rbx
   140004687:	mov    QWORD PTR [rax+0x10],rbp
   14000468b:	mov    QWORD PTR [rax+0x18],rsi
   14000468f:	mov    QWORD PTR [rax+0x20],rdi
   140004693:	push   r12
   140004695:	sub    rsp,0x30
   140004699:	mov    rbp,r9
   14000469c:	mov    rsi,r8
   14000469f:	mov    rbx,rdx
   1400046a2:	mov    rdi,rcx
   1400046a5:	test   r9,r9
   1400046a8:	je     0x14000479a
   1400046ae:	test   r8,r8
   1400046b1:	jne    0x1400046c8
   1400046b3:	test   rcx,rcx
   1400046b6:	jne    0x1400046d1
   1400046b8:	test   rdx,rdx
   1400046bb:	jne    0x14000479a
   1400046c1:	xor    eax,eax
   1400046c3:	jmp    0x1400047ad
   1400046c8:	test   rcx,rcx
   1400046cb:	je     0x14000479a
   1400046d1:	test   rdx,rdx
   1400046d4:	je     0x14000479a
   1400046da:	cmp    rdx,r8
   1400046dd:	jbe    0x14000472c
   1400046df:	call   0x140003564
   1400046e4:	lea    r8,[rsi+0x1]
   1400046e8:	lea    rcx,[rip+0x43e5]        # 0x140008ad4
   1400046ef:	mov    ebx,DWORD PTR [rax]
   1400046f1:	mov    rax,QWORD PTR [rsp+0x68]
   1400046f6:	mov    r9,rbp
   1400046f9:	mov    QWORD PTR [rsp+0x28],rax
   1400046fe:	mov    rax,QWORD PTR [rsp+0x60]
   140004703:	mov    rdx,rdi
   140004706:	mov    QWORD PTR [rsp+0x20],rax
   14000470b:	call   0x140004598
   140004710:	cmp    eax,0xfffffffe
   140004713:	jne    0x140004781
   140004715:	call   0x140003564
   14000471a:	cmp    DWORD PTR [rax],0x22
   14000471d:	jne    0x1400047aa
   140004723:	call   0x140003564
   140004728:	mov    DWORD PTR [rax],ebx
   14000472a:	jmp    0x1400047aa
   14000472c:	call   0x140003564
   140004731:	lea    rcx,[rip+0x439c]        # 0x140008ad4
   140004738:	mov    r9,rbp
   14000473b:	mov    r12d,DWORD PTR [rax]
   14000473e:	mov    rax,QWORD PTR [rsp+0x68]
   140004743:	mov    r8,rbx
   140004746:	mov    QWORD PTR [rsp+0x28],rax
   14000474b:	mov    rax,QWORD PTR [rsp+0x60]
   140004750:	mov    rdx,rdi
   140004753:	mov    QWORD PTR [rsp+0x20],rax
   140004758:	call   0x140004598
   14000475d:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004762:	cmp    eax,0xfffffffe
   140004765:	jne    0x140004781
   140004767:	cmp    rsi,0xffffffffffffffff
   14000476b:	jne    0x140004785
   14000476d:	call   0x140003564
   140004772:	cmp    DWORD PTR [rax],0x22
   140004775:	jne    0x1400047aa
   140004777:	call   0x140003564
   14000477c:	mov    DWORD PTR [rax],r12d
   14000477f:	jmp    0x1400047aa
   140004781:	test   eax,eax
   140004783:	jns    0x1400047ad
   140004785:	mov    BYTE PTR [rdi],0x0
   140004788:	cmp    eax,0xfffffffe
   14000478b:	jne    0x1400047aa
   14000478d:	call   0x140003564
   140004792:	mov    DWORD PTR [rax],0x22
   140004798:	jmp    0x1400047a5
   14000479a:	call   0x140003564
   14000479f:	mov    DWORD PTR [rax],0x16
   1400047a5:	call   0x1400034fc
   1400047aa:	or     eax,0xffffffff
   1400047ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400047b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400047b7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400047bc:	mov    rdi,QWORD PTR [rsp+0x58]
   1400047c1:	add    rsp,0x30
   1400047c5:	pop    r12
   1400047c7:	ret    
   1400047c8:	sub    rsp,0x38
   1400047cc:	mov    rax,QWORD PTR [rsp+0x60]
   1400047d1:	mov    QWORD PTR [rsp+0x28],rax
   1400047d6:	and    QWORD PTR [rsp+0x20],0x0
   1400047dc:	call   0x140004680
   1400047e1:	add    rsp,0x38
   1400047e5:	ret    
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	mov    rax,rsp
   1400047eb:	mov    QWORD PTR [rax+0x10],rbx
   1400047ef:	mov    QWORD PTR [rax+0x18],rbp
   1400047f3:	mov    QWORD PTR [rax+0x20],rsi
   1400047f7:	mov    DWORD PTR [rax+0x8],ecx
   1400047fa:	push   rdi
   1400047fb:	sub    rsp,0x20
   1400047ff:	mov    rcx,rdx
   140004802:	mov    rbx,rdx
   140004805:	call   0x14000571c
   14000480a:	mov    ecx,DWORD PTR [rbx+0x18]
   14000480d:	movsxd rsi,eax
   140004810:	test   cl,0x82
   140004813:	jne    0x14000482c
   140004815:	call   0x140003564
   14000481a:	mov    DWORD PTR [rax],0x9
   140004820:	or     DWORD PTR [rbx+0x18],0x20
   140004824:	or     eax,0xffffffff
   140004827:	jmp    0x140004960
   14000482c:	test   cl,0x40
   14000482f:	je     0x14000483e
   140004831:	call   0x140003564
   140004836:	mov    DWORD PTR [rax],0x22
   14000483c:	jmp    0x140004820
   14000483e:	xor    edi,edi
   140004840:	test   cl,0x1
   140004843:	je     0x14000485e
   140004845:	mov    DWORD PTR [rbx+0x8],edi
   140004848:	test   cl,0x10
   14000484b:	je     0x1400048da
   140004851:	mov    rax,QWORD PTR [rbx+0x10]
   140004855:	and    ecx,0xfffffffe
   140004858:	mov    QWORD PTR [rbx],rax
   14000485b:	mov    DWORD PTR [rbx+0x18],ecx
   14000485e:	mov    eax,DWORD PTR [rbx+0x18]
   140004861:	mov    DWORD PTR [rbx+0x8],edi
   140004864:	and    eax,0xffffffef
   140004867:	or     eax,0x2
   14000486a:	mov    DWORD PTR [rbx+0x18],eax
   14000486d:	test   eax,0x10c
   140004872:	jne    0x1400048a3
   140004874:	call   0x140002cb8
   140004879:	add    rax,0x30
   14000487d:	cmp    rbx,rax
   140004880:	je     0x140004890
   140004882:	call   0x140002cb8
   140004887:	add    rax,0x60
   14000488b:	cmp    rbx,rax
   14000488e:	jne    0x14000489b
   140004890:	mov    ecx,esi
   140004892:	call   0x140009fb4
   140004897:	test   eax,eax
   140004899:	jne    0x1400048a3
   14000489b:	mov    rcx,rbx
   14000489e:	call   0x140009f60
   1400048a3:	test   DWORD PTR [rbx+0x18],0x108
   1400048aa:	je     0x14000493d
   1400048b0:	mov    ebp,DWORD PTR [rbx]
   1400048b2:	mov    rdx,QWORD PTR [rbx+0x10]
   1400048b6:	sub    ebp,DWORD PTR [rbx+0x10]
   1400048b9:	lea    rax,[rdx+0x1]
   1400048bd:	mov    QWORD PTR [rbx],rax
   1400048c0:	mov    eax,DWORD PTR [rbx+0x24]
   1400048c3:	dec    eax
   1400048c5:	mov    DWORD PTR [rbx+0x8],eax
   1400048c8:	test   ebp,ebp
   1400048ca:	jle    0x1400048e5
   1400048cc:	mov    r8d,ebp
   1400048cf:	mov    ecx,esi
   1400048d1:	call   0x140009e80
   1400048d6:	mov    edi,eax
   1400048d8:	jmp    0x140004931
   1400048da:	or     ecx,0x20
   1400048dd:	mov    DWORD PTR [rbx+0x18],ecx
   1400048e0:	jmp    0x140004824
   1400048e5:	cmp    esi,0xffffffff
   1400048e8:	je     0x14000490d
   1400048ea:	cmp    esi,0xfffffffe
   1400048ed:	je     0x14000490d
   1400048ef:	mov    rcx,rsi
   1400048f2:	mov    rax,rsi
   1400048f5:	lea    rdx,[rip+0xfd24]        # 0x140014620
   1400048fc:	and    ecx,0x1f
   1400048ff:	sar    rax,0x5
   140004903:	imul   rcx,rcx,0x58
   140004907:	add    rcx,QWORD PTR [rdx+rax*8]
   14000490b:	jmp    0x140004914
   14000490d:	lea    rcx,[rip+0xdfec]        # 0x140012900
   140004914:	test   BYTE PTR [rcx+0x8],0x20
   140004918:	je     0x140004931
   14000491a:	xor    edx,edx
   14000491c:	mov    ecx,esi
   14000491e:	lea    r8d,[rdx+0x2]
   140004922:	call   0x14000963c
   140004927:	cmp    rax,0xffffffffffffffff
   14000492b:	je     0x140004820
   140004931:	mov    rcx,QWORD PTR [rbx+0x10]
   140004935:	mov    al,BYTE PTR [rsp+0x30]
   140004939:	mov    BYTE PTR [rcx],al
   14000493b:	jmp    0x140004953
   14000493d:	mov    ebp,0x1
   140004942:	lea    rdx,[rsp+0x30]
   140004947:	mov    ecx,esi
   140004949:	mov    r8d,ebp
   14000494c:	call   0x140009e80
   140004951:	mov    edi,eax
   140004953:	cmp    edi,ebp
   140004955:	jne    0x140004820
   14000495b:	movzx  eax,BYTE PTR [rsp+0x30]
   140004960:	mov    rbx,QWORD PTR [rsp+0x38]
   140004965:	mov    rbp,QWORD PTR [rsp+0x40]
   14000496a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000496f:	add    rsp,0x20
   140004973:	pop    rdi
   140004974:	ret    
   140004975:	int3   
   140004976:	int3   
   140004977:	int3   
   140004978:	rex push rbx
   14000497a:	sub    rsp,0x20
   14000497e:	mov    rbx,rcx
   140004981:	mov    BYTE PTR [rcx+0x18],0x0
   140004985:	test   rdx,rdx
   140004988:	jne    0x140004a09
   14000498a:	call   0x140003d18
   14000498f:	mov    QWORD PTR [rbx+0x10],rax
   140004993:	mov    rdx,QWORD PTR [rax+0xc0]
   14000499a:	mov    QWORD PTR [rbx],rdx
   14000499d:	mov    rcx,QWORD PTR [rax+0xb8]
   1400049a4:	mov    QWORD PTR [rbx+0x8],rcx
   1400049a8:	cmp    rdx,QWORD PTR [rip+0xe3e1]        # 0x140012d90
   1400049af:	je     0x1400049c7
   1400049b1:	mov    eax,DWORD PTR [rax+0xc8]
   1400049b7:	test   DWORD PTR [rip+0xe923],eax        # 0x1400132e0
   1400049bd:	jne    0x1400049c7
   1400049bf:	call   0x140007bb8
   1400049c4:	mov    QWORD PTR [rbx],rax
   1400049c7:	mov    rax,QWORD PTR [rip+0xe802]        # 0x1400131d0
   1400049ce:	cmp    QWORD PTR [rbx+0x8],rax
   1400049d2:	je     0x1400049ef
   1400049d4:	mov    rax,QWORD PTR [rbx+0x10]
   1400049d8:	mov    ecx,DWORD PTR [rax+0xc8]
   1400049de:	test   DWORD PTR [rip+0xe8fc],ecx        # 0x1400132e0
   1400049e4:	jne    0x1400049ef
   1400049e6:	call   0x140007eac
   1400049eb:	mov    QWORD PTR [rbx+0x8],rax
   1400049ef:	mov    rax,QWORD PTR [rbx+0x10]
   1400049f3:	test   BYTE PTR [rax+0xc8],0x2
   1400049fa:	jne    0x140004a10
   1400049fc:	or     DWORD PTR [rax+0xc8],0x2
   140004a03:	mov    BYTE PTR [rbx+0x18],0x1
   140004a07:	jmp    0x140004a10
   140004a09:	movups xmm0,XMMWORD PTR [rdx]
   140004a0c:	movdqu XMMWORD PTR [rcx],xmm0
   140004a10:	mov    rax,rbx
   140004a13:	add    rsp,0x20
   140004a17:	pop    rbx
   140004a18:	ret    
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	int3   
   140004a25:	int3   
   140004a26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004a30:	mov    rax,rcx
   140004a33:	cmp    r8,0x8
   140004a37:	jb     0x140004a8c
   140004a39:	movzx  edx,dl
   140004a3c:	movabs r9,0x101010101010101
   140004a46:	imul   rdx,r9
   140004a4a:	cmp    r8,0x40
   140004a4e:	jb     0x140004a6e
   140004a50:	neg    rcx
   140004a53:	and    ecx,0x7
   140004a56:	je     0x140004a5e
   140004a58:	sub    r8,rcx
   140004a5b:	mov    QWORD PTR [rax],rdx
   140004a5e:	add    rcx,rax
   140004a61:	mov    r9,r8
   140004a64:	and    r8,0x3f
   140004a68:	shr    r9,0x6
   140004a6c:	jne    0x140004aa7
   140004a6e:	mov    r9,r8
   140004a71:	and    r8,0x7
   140004a75:	shr    r9,0x3
   140004a79:	je     0x140004a8c
   140004a7b:	data16 data16 xchg ax,ax
   140004a7f:	nop
   140004a80:	mov    QWORD PTR [rcx],rdx
   140004a83:	add    rcx,0x8
   140004a87:	dec    r9
   140004a8a:	jne    0x140004a80
   140004a8c:	test   r8,r8
   140004a8f:	je     0x140004a9b
   140004a91:	mov    BYTE PTR [rcx],dl
   140004a93:	inc    rcx
   140004a96:	dec    r8
   140004a99:	jne    0x140004a91
   140004a9b:	ret    
   140004a9c:	nop    DWORD PTR [rax+0x0]
   140004aa0:	data16 data16 xchg ax,ax
   140004aa4:	data16 xchg ax,ax
   140004aa7:	cmp    r9,0x1c00
   140004aae:	jae    0x140004ae0
   140004ab0:	mov    QWORD PTR [rcx],rdx
   140004ab3:	mov    QWORD PTR [rcx+0x8],rdx
   140004ab7:	mov    QWORD PTR [rcx+0x10],rdx
   140004abb:	add    rcx,0x40
   140004abf:	mov    QWORD PTR [rcx-0x28],rdx
   140004ac3:	mov    QWORD PTR [rcx-0x20],rdx
   140004ac7:	dec    r9
   140004aca:	mov    QWORD PTR [rcx-0x18],rdx
   140004ace:	mov    QWORD PTR [rcx-0x10],rdx
   140004ad2:	mov    QWORD PTR [rcx-0x8],rdx
   140004ad6:	jne    0x140004ab0
   140004ad8:	jmp    0x140004a6e
   140004ada:	nop    WORD PTR [rax+rax*1+0x0]
   140004ae0:	movnti QWORD PTR [rcx],rdx
   140004ae4:	movnti QWORD PTR [rcx+0x8],rdx
   140004ae9:	movnti QWORD PTR [rcx+0x10],rdx
   140004aee:	add    rcx,0x40
   140004af2:	movnti QWORD PTR [rcx-0x28],rdx
   140004af7:	movnti QWORD PTR [rcx-0x20],rdx
   140004afc:	dec    r9
   140004aff:	movnti QWORD PTR [rcx-0x18],rdx
   140004b04:	movnti QWORD PTR [rcx-0x10],rdx
   140004b09:	movnti QWORD PTR [rcx-0x8],rdx
   140004b0e:	jne    0x140004ae0
   140004b10:	lock or BYTE PTR [rsp],0x0
   140004b15:	jmp    0x140004a6e
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140004b21:	mov    QWORD PTR [rsp+0x10],rsi
   140004b26:	mov    QWORD PTR [rsp+0x18],rdi
   140004b2b:	push   rbp
   140004b2c:	push   r12
   140004b2e:	push   r13
   140004b30:	mov    rbp,rsp
   140004b33:	sub    rsp,0x50
   140004b37:	xor    ebx,ebx
   140004b39:	mov    r12,r8
   140004b3c:	mov    r13,rcx
   140004b3f:	mov    rsi,rdx
   140004b42:	lea    rcx,[rbp-0x28]
   140004b46:	lea    r8d,[rbx+0x28]
   140004b4a:	xor    edx,edx
   140004b4c:	mov    rdi,r9
   140004b4f:	mov    QWORD PTR [rbp-0x30],rbx
   140004b53:	call   0x140004a30
   140004b58:	test   rdi,rdi
   140004b5b:	jne    0x140004b75
   140004b5d:	call   0x140003564
   140004b62:	mov    DWORD PTR [rax],0x16
   140004b68:	call   0x1400034fc
   140004b6d:	or     eax,0xffffffff
   140004b70:	jmp    0x140004c1c
   140004b75:	test   r12,r12
   140004b78:	je     0x140004b7f
   140004b7a:	test   rsi,rsi
   140004b7d:	je     0x140004b5d
   140004b7f:	mov    DWORD PTR [rbp-0x18],0x42
   140004b86:	mov    QWORD PTR [rbp-0x20],rsi
   140004b8a:	mov    QWORD PTR [rbp-0x30],rsi
   140004b8e:	cmp    r12,0x3fffffff
   140004b95:	jbe    0x140004ba0
   140004b97:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140004b9e:	jmp    0x140004ba7
   140004ba0:	lea    eax,[r12+r12*1]
   140004ba4:	mov    DWORD PTR [rbp-0x28],eax
   140004ba7:	mov    r9,QWORD PTR [rbp+0x48]
   140004bab:	mov    r8,QWORD PTR [rbp+0x40]
   140004baf:	lea    rcx,[rbp-0x30]
   140004bb3:	mov    rdx,rdi
   140004bb6:	call   r13
   140004bb9:	mov    edi,eax
   140004bbb:	test   rsi,rsi
   140004bbe:	je     0x140004c1c
   140004bc0:	test   eax,eax
   140004bc2:	js     0x140004c0d
   140004bc4:	dec    DWORD PTR [rbp-0x28]
   140004bc7:	js     0x140004bdc
   140004bc9:	mov    rax,QWORD PTR [rbp-0x30]
   140004bcd:	mov    BYTE PTR [rax],bl
   140004bcf:	mov    rax,QWORD PTR [rbp-0x30]
   140004bd3:	inc    rax
   140004bd6:	mov    QWORD PTR [rbp-0x30],rax
   140004bda:	jmp    0x140004bf0
   140004bdc:	lea    rdx,[rbp-0x30]
   140004be0:	xor    ecx,ecx
   140004be2:	call   0x1400047e8
   140004be7:	cmp    eax,0xffffffff
   140004bea:	je     0x140004c0d
   140004bec:	mov    rax,QWORD PTR [rbp-0x30]
   140004bf0:	dec    DWORD PTR [rbp-0x28]
   140004bf3:	js     0x140004bf9
   140004bf5:	mov    BYTE PTR [rax],bl
   140004bf7:	jmp    0x140004c09
   140004bf9:	lea    rdx,[rbp-0x30]
   140004bfd:	xor    ecx,ecx
   140004bff:	call   0x1400047e8
   140004c04:	cmp    eax,0xffffffff
   140004c07:	je     0x140004c0d
   140004c09:	mov    eax,edi
   140004c0b:	jmp    0x140004c1c
   140004c0d:	cmp    DWORD PTR [rbp-0x28],ebx
   140004c10:	mov    WORD PTR [rsi+r12*2-0x2],bx
   140004c16:	setge  bl
   140004c19:	lea    eax,[rbx-0x2]
   140004c1c:	lea    r11,[rsp+0x50]
   140004c21:	mov    rbx,QWORD PTR [r11+0x20]
   140004c25:	mov    rsi,QWORD PTR [r11+0x28]
   140004c29:	mov    rdi,QWORD PTR [r11+0x30]
   140004c2d:	mov    rsp,r11
   140004c30:	pop    r13
   140004c32:	pop    r12
   140004c34:	pop    rbp
   140004c35:	ret    
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	mov    QWORD PTR [rsp+0x8],rbx
   140004c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140004c42:	mov    QWORD PTR [rsp+0x18],rsi
   140004c47:	push   rdi
   140004c48:	push   r12
   140004c4a:	push   r13
   140004c4c:	sub    rsp,0x30
   140004c50:	xor    r13d,r13d
   140004c53:	mov    rbp,r9
   140004c56:	mov    rsi,r8
   140004c59:	mov    rbx,rdx
   140004c5c:	mov    rdi,rcx
   140004c5f:	test   r9,r9
   140004c62:	je     0x140004d59
   140004c68:	test   r8,r8
   140004c6b:	jne    0x140004c82
   140004c6d:	test   rcx,rcx
   140004c70:	jne    0x140004c8b
   140004c72:	test   rdx,rdx
   140004c75:	jne    0x140004d59
   140004c7b:	xor    eax,eax
   140004c7d:	jmp    0x140004d6c
   140004c82:	test   rcx,rcx
   140004c85:	je     0x140004d59
   140004c8b:	test   rdx,rdx
   140004c8e:	je     0x140004d59
   140004c94:	cmp    rdx,r8
   140004c97:	jbe    0x140004ce9
   140004c99:	call   0x140003564
   140004c9e:	lea    r8,[rsi+0x1]
   140004ca2:	lea    rcx,[rip+0x58bb]        # 0x14000a564
   140004ca9:	mov    ebx,DWORD PTR [rax]
   140004cab:	mov    rax,QWORD PTR [rsp+0x78]
   140004cb0:	mov    r9,rbp
   140004cb3:	mov    QWORD PTR [rsp+0x28],rax
   140004cb8:	mov    rax,QWORD PTR [rsp+0x70]
   140004cbd:	mov    rdx,rdi
   140004cc0:	mov    QWORD PTR [rsp+0x20],rax
   140004cc5:	call   0x140004b1c
   140004cca:	cmp    eax,0xfffffffe
   140004ccd:	jne    0x140004d3f
   140004ccf:	call   0x140003564
   140004cd4:	cmp    DWORD PTR [rax],0x22
   140004cd7:	jne    0x140004d69
   140004cdd:	call   0x140003564
   140004ce2:	mov    DWORD PTR [rax],ebx
   140004ce4:	jmp    0x140004d69
   140004ce9:	call   0x140003564
   140004cee:	lea    rcx,[rip+0x586f]        # 0x14000a564
   140004cf5:	mov    r9,rbp
   140004cf8:	mov    r12d,DWORD PTR [rax]
   140004cfb:	mov    rax,QWORD PTR [rsp+0x78]
   140004d00:	mov    r8,rbx
   140004d03:	mov    QWORD PTR [rsp+0x28],rax
   140004d08:	mov    rax,QWORD PTR [rsp+0x70]
   140004d0d:	mov    rdx,rdi
   140004d10:	mov    QWORD PTR [rsp+0x20],rax
   140004d15:	call   0x140004b1c
   140004d1a:	mov    WORD PTR [rdi+rbx*2-0x2],r13w
   140004d20:	cmp    eax,0xfffffffe
   140004d23:	jne    0x140004d3f
   140004d25:	cmp    rsi,0xffffffffffffffff
   140004d29:	jne    0x140004d43
   140004d2b:	call   0x140003564
   140004d30:	cmp    DWORD PTR [rax],0x22
   140004d33:	jne    0x140004d69
   140004d35:	call   0x140003564
   140004d3a:	mov    DWORD PTR [rax],r12d
   140004d3d:	jmp    0x140004d69
   140004d3f:	test   eax,eax
   140004d41:	jns    0x140004d6c
   140004d43:	mov    WORD PTR [rdi],r13w
   140004d47:	cmp    eax,0xfffffffe
   140004d4a:	jne    0x140004d69
   140004d4c:	call   0x140003564
   140004d51:	mov    DWORD PTR [rax],0x22
   140004d57:	jmp    0x140004d64
   140004d59:	call   0x140003564
   140004d5e:	mov    DWORD PTR [rax],0x16
   140004d64:	call   0x1400034fc
   140004d69:	or     eax,0xffffffff
   140004d6c:	mov    rbx,QWORD PTR [rsp+0x50]
   140004d71:	mov    rbp,QWORD PTR [rsp+0x58]
   140004d76:	mov    rsi,QWORD PTR [rsp+0x60]
   140004d7b:	add    rsp,0x30
   140004d7f:	pop    r13
   140004d81:	pop    r12
   140004d83:	pop    rdi
   140004d84:	ret    
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	mov    QWORD PTR [rsp+0x8],rbx
   140004d8d:	mov    QWORD PTR [rsp+0x10],rsi
   140004d92:	push   rdi
   140004d93:	sub    rsp,0x20
   140004d97:	mov    rdi,rcx
   140004d9a:	test   rcx,rcx
   140004d9d:	jne    0x140004db4
   140004d9f:	call   0x140003564
   140004da4:	mov    DWORD PTR [rax],0x16
   140004daa:	call   0x1400034fc
   140004daf:	jmp    0x140004ec7
   140004db4:	mov    eax,DWORD PTR [rcx+0x18]
   140004db7:	test   al,0x83
   140004db9:	je     0x140004ec7
   140004dbf:	test   al,0x40
   140004dc1:	jne    0x140004ec7
   140004dc7:	test   al,0x2
   140004dc9:	je     0x140004dd6
   140004dcb:	or     eax,0x20
   140004dce:	mov    DWORD PTR [rcx+0x18],eax
   140004dd1:	jmp    0x140004ec7
   140004dd6:	or     eax,0x1
   140004dd9:	mov    DWORD PTR [rcx+0x18],eax
   140004ddc:	test   eax,0x10c
   140004de1:	jne    0x140004dea
   140004de3:	call   0x140009f60
   140004de8:	jmp    0x140004df1
   140004dea:	mov    rax,QWORD PTR [rcx+0x10]
   140004dee:	mov    QWORD PTR [rcx],rax
   140004df1:	mov    rcx,rdi
   140004df4:	call   0x14000571c
   140004df9:	mov    r8d,DWORD PTR [rdi+0x24]
   140004dfd:	mov    rdx,QWORD PTR [rdi+0x10]
   140004e01:	mov    ecx,eax
   140004e03:	call   0x140005600
   140004e08:	mov    DWORD PTR [rdi+0x8],eax
   140004e0b:	test   eax,eax
   140004e0d:	je     0x140004eb6
   140004e13:	cmp    eax,0xffffffff
   140004e16:	je     0x140004eb6
   140004e1c:	test   BYTE PTR [rdi+0x18],0x82
   140004e20:	jne    0x140004e81
   140004e22:	mov    rcx,rdi
   140004e25:	call   0x14000571c
   140004e2a:	cmp    eax,0xffffffff
   140004e2d:	je     0x140004e6b
   140004e2f:	mov    rcx,rdi
   140004e32:	call   0x14000571c
   140004e37:	cmp    eax,0xfffffffe
   140004e3a:	je     0x140004e6b
   140004e3c:	mov    rcx,rdi
   140004e3f:	call   0x14000571c
   140004e44:	mov    rcx,rdi
   140004e47:	lea    rsi,[rip+0xf7d2]        # 0x140014620
   140004e4e:	movsxd rbx,eax
   140004e51:	sar    rbx,0x5
   140004e55:	call   0x14000571c
   140004e5a:	mov    r11d,eax
   140004e5d:	and    r11d,0x1f
   140004e61:	imul   r11,r11,0x58
   140004e65:	add    r11,QWORD PTR [rsi+rbx*8]
   140004e69:	jmp    0x140004e72
   140004e6b:	lea    r11,[rip+0xda8e]        # 0x140012900
   140004e72:	mov    al,BYTE PTR [r11+0x8]
   140004e76:	and    al,0x82
   140004e78:	cmp    al,0x82
   140004e7a:	jne    0x140004e81
   140004e7c:	bts    DWORD PTR [rdi+0x18],0xd
   140004e81:	cmp    DWORD PTR [rdi+0x24],0x200
   140004e88:	jne    0x140004ea5
   140004e8a:	test   BYTE PTR [rdi+0x18],0x8
   140004e8e:	je     0x140004ea5
   140004e90:	mov    eax,DWORD PTR [rdi+0x24]
   140004e93:	test   DWORD PTR [rdi+0x18],0x400
   140004e9a:	mov    ecx,0x1000
   140004e9f:	cmove  eax,ecx
   140004ea2:	mov    DWORD PTR [rdi+0x24],eax
   140004ea5:	mov    rcx,QWORD PTR [rdi]
   140004ea8:	dec    DWORD PTR [rdi+0x8]
   140004eab:	movzx  eax,BYTE PTR [rcx]
   140004eae:	inc    rcx
   140004eb1:	mov    QWORD PTR [rdi],rcx
   140004eb4:	jmp    0x140004eca
   140004eb6:	neg    eax
   140004eb8:	sbb    eax,eax
   140004eba:	and    eax,0x10
   140004ebd:	add    eax,0x10
   140004ec0:	or     DWORD PTR [rdi+0x18],eax
   140004ec3:	and    DWORD PTR [rdi+0x8],0x0
   140004ec7:	or     eax,0xffffffff
   140004eca:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ecf:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ed4:	add    rsp,0x20
   140004ed8:	pop    rdi
   140004ed9:	ret    
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	mov    QWORD PTR [rsp+0x10],rdx
   140004ee1:	mov    DWORD PTR [rsp+0x8],ecx
   140004ee5:	push   rbp
   140004ee6:	push   rbx
   140004ee7:	push   rsi
   140004ee8:	push   rdi
   140004ee9:	push   r12
   140004eeb:	push   r13
   140004eed:	push   r14
   140004eef:	push   r15
   140004ef1:	mov    rbp,rsp
   140004ef4:	sub    rsp,0x58
   140004ef8:	movsxd rax,ecx
   140004efb:	mov    ebx,r8d
   140004efe:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140004f05:	mov    DWORD PTR [rbp-0x1c],ebx
   140004f08:	cmp    eax,0xfffffffe
   140004f0b:	jne    0x140004f26
   140004f0d:	call   0x140003584
   140004f12:	xor    edi,edi
   140004f14:	mov    DWORD PTR [rax],edi
   140004f16:	call   0x140003564
   140004f1b:	mov    DWORD PTR [rax],0x9
   140004f21:	jmp    0x1400055eb
   140004f26:	xor    edi,edi
   140004f28:	test   ecx,ecx
   140004f2a:	js     0x1400055d4
   140004f30:	cmp    eax,DWORD PTR [rip+0xf6e6]        # 0x14001461c
   140004f36:	jae    0x1400055d4
   140004f3c:	mov    rsi,rax
   140004f3f:	mov    r15,rax
   140004f42:	lea    r9,[rip+0xffffffffffffb0b7]        # 0x140000000
   140004f49:	sar    r15,0x5
   140004f4d:	and    esi,0x1f
   140004f50:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   140004f58:	imul   rsi,rsi,0x58
   140004f5c:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   140004f60:	test   al,0x1
   140004f62:	je     0x1400055d4
   140004f68:	cmp    ebx,0x7fffffff
   140004f6e:	jbe    0x140004f87
   140004f70:	call   0x140003584
   140004f75:	mov    DWORD PTR [rax],edi
   140004f77:	call   0x140003564
   140004f7c:	mov    DWORD PTR [rax],0x16
   140004f82:	jmp    0x1400055e6
   140004f87:	mov    r12d,edi
   140004f8a:	test   ebx,ebx
   140004f8c:	je     0x1400055d0
   140004f92:	test   al,0x2
   140004f94:	jne    0x1400055d0
   140004f9a:	test   rdx,rdx
   140004f9d:	je     0x140004f70
   140004f9f:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   140004fa4:	mov    r8d,0x4
   140004faa:	add    r13b,r13b
   140004fad:	sar    r13b,1
   140004fb0:	movsx  ecx,r13b
   140004fb4:	mov    BYTE PTR [rbp+0x60],r13b
   140004fb8:	dec    ecx
   140004fba:	je     0x140004fd0
   140004fbc:	dec    ecx
   140004fbe:	jne    0x140004fcb
   140004fc0:	mov    eax,ebx
   140004fc2:	not    eax
   140004fc4:	test   al,0x1
   140004fc6:	je     0x140004f70
   140004fc8:	and    ebx,0xfffffffe
   140004fcb:	mov    r14,rdx
   140004fce:	jmp    0x140005030
   140004fd0:	mov    eax,ebx
   140004fd2:	not    eax
   140004fd4:	test   al,0x1
   140004fd6:	je     0x140004f70
   140004fd8:	shr    ebx,1
   140004fda:	cmp    ebx,r8d
   140004fdd:	cmovb  ebx,r8d
   140004fe1:	mov    ecx,ebx
   140004fe3:	call   0x1400067e0
   140004fe8:	mov    r14,rax
   140004feb:	test   rax,rax
   140004fee:	jne    0x14000500b
   140004ff0:	call   0x140003564
   140004ff5:	mov    DWORD PTR [rax],0xc
   140004ffb:	call   0x140003584
   140005000:	mov    DWORD PTR [rax],0x8
   140005006:	jmp    0x1400055eb
   14000500b:	mov    ecx,DWORD PTR [rbp+0x48]
   14000500e:	xor    edx,edx
   140005010:	lea    r8d,[rdx+0x1]
   140005014:	call   0x1400095a4
   140005019:	lea    r9,[rip+0xffffffffffffafe0]        # 0x140000000
   140005020:	mov    r11,rax
   140005023:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000502b:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140005030:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140005038:	mov    rdx,r14
   14000503b:	mov    r8d,0xa
   140005041:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140005046:	je     0x1400050e7
   14000504c:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140005050:	cmp    cl,r8b
   140005053:	je     0x1400050e7
   140005059:	test   ebx,ebx
   14000505b:	je     0x1400050e7
   140005061:	mov    BYTE PTR [r14],cl
   140005064:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000506c:	or     r10d,0xffffffff
   140005070:	add    ebx,r10d
   140005073:	lea    rdx,[r14+0x1]
   140005077:	lea    r12d,[r8-0x9]
   14000507b:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140005080:	test   r13b,r13b
   140005083:	je     0x1400050e7
   140005085:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   14000508d:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140005091:	cmp    cl,r8b
   140005094:	je     0x1400050e7
   140005096:	test   ebx,ebx
   140005098:	je     0x1400050e7
   14000509a:	mov    BYTE PTR [rdx],cl
   14000509c:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050a4:	add    ebx,r10d
   1400050a7:	inc    rdx
   1400050aa:	lea    r12d,[r8-0x8]
   1400050ae:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   1400050b3:	cmp    r13b,0x1
   1400050b7:	jne    0x1400050e7
   1400050b9:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050c1:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   1400050c5:	cmp    cl,r8b
   1400050c8:	je     0x1400050e7
   1400050ca:	test   ebx,ebx
   1400050cc:	je     0x1400050e7
   1400050ce:	mov    BYTE PTR [rdx],cl
   1400050d0:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   1400050d8:	inc    rdx
   1400050db:	lea    r12d,[r8-0x7]
   1400050df:	add    ebx,r10d
   1400050e2:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   1400050e7:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   1400050ef:	lea    r9,[rbp-0x24]
   1400050f3:	mov    r8d,ebx
   1400050f6:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400050fa:	mov    QWORD PTR [rsp+0x20],rdi
   1400050ff:	call   QWORD PTR [rip+0x909b]        # 0x14000e1a0
   140005105:	test   eax,eax
   140005107:	je     0x140005595
   14000510d:	movsxd rdx,DWORD PTR [rbp-0x24]
   140005111:	test   edx,edx
   140005113:	js     0x140005595
   140005119:	mov    eax,ebx
   14000511b:	cmp    rdx,rax
   14000511e:	ja     0x140005595
   140005124:	lea    r8,[rip+0xffffffffffffaed5]        # 0x140000000
   14000512b:	add    r12d,edx
   14000512e:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140005136:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14000513b:	je     0x140005576
   140005141:	cmp    r13b,0x2
   140005145:	je     0x1400053d7
   14000514b:	test   edx,edx
   14000514d:	je     0x14000515c
   14000514f:	cmp    BYTE PTR [r14],0xa
   140005153:	jne    0x14000515c
   140005155:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14000515a:	jmp    0x140005161
   14000515c:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140005161:	movsxd rax,r12d
   140005164:	mov    rbx,r14
   140005167:	mov    r13,r14
   14000516a:	add    rax,r14
   14000516d:	mov    QWORD PTR [rbp-0x18],rax
   140005171:	cmp    r14,rax
   140005174:	jae    0x140005295
   14000517a:	mov    r12d,0xd
   140005180:	mov    al,BYTE PTR [r13+0x0]
   140005184:	cmp    al,0x1a
   140005186:	je     0x140005276
   14000518c:	cmp    al,r12b
   14000518f:	je     0x14000519e
   140005191:	mov    BYTE PTR [rbx],al
   140005193:	inc    rbx
   140005196:	inc    r13
   140005199:	jmp    0x14000526a
   14000519e:	mov    rax,QWORD PTR [rbp-0x18]
   1400051a2:	dec    rax
   1400051a5:	cmp    r13,rax
   1400051a8:	jae    0x1400051c1
   1400051aa:	lea    rax,[r13+0x1]
   1400051ae:	cmp    BYTE PTR [rax],0xa
   1400051b1:	jne    0x1400051b9
   1400051b3:	add    r13,0x2
   1400051b7:	jmp    0x140005237
   1400051b9:	mov    r13,rax
   1400051bc:	jmp    0x140005264
   1400051c1:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400051c9:	lea    r9,[rbp-0x24]
   1400051cd:	lea    rdx,[rbp+0x58]
   1400051d1:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400051d5:	mov    r8d,0x1
   1400051db:	inc    r13
   1400051de:	mov    QWORD PTR [rsp+0x20],rdi
   1400051e3:	call   QWORD PTR [rip+0x8fb7]        # 0x14000e1a0
   1400051e9:	test   eax,eax
   1400051eb:	jne    0x1400051f7
   1400051ed:	call   QWORD PTR [rip+0x8e85]        # 0x14000e078
   1400051f3:	test   eax,eax
   1400051f5:	jne    0x14000525d
   1400051f7:	cmp    DWORD PTR [rbp-0x24],edi
   1400051fa:	je     0x14000525d
   1400051fc:	lea    r8,[rip+0xffffffffffffadfd]        # 0x140000000
   140005203:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000520b:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140005210:	je     0x14000522c
   140005212:	cmp    BYTE PTR [rbp+0x58],0xa
   140005216:	je     0x140005237
   140005218:	mov    BYTE PTR [rbx],r12b
   14000521b:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005223:	mov    al,BYTE PTR [rbp+0x58]
   140005226:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14000522a:	jmp    0x140005267
   14000522c:	cmp    rbx,r14
   14000522f:	jne    0x14000523c
   140005231:	cmp    BYTE PTR [rbp+0x58],0xa
   140005235:	jne    0x14000523c
   140005237:	mov    BYTE PTR [rbx],0xa
   14000523a:	jmp    0x140005267
   14000523c:	mov    ecx,DWORD PTR [rbp+0x48]
   14000523f:	mov    r8d,0x1
   140005245:	or     rdx,0xffffffffffffffff
   140005249:	call   0x1400095a4
   14000524e:	cmp    BYTE PTR [rbp+0x58],0xa
   140005252:	lea    r8,[rip+0xffffffffffffada7]        # 0x140000000
   140005259:	je     0x14000526a
   14000525b:	jmp    0x140005264
   14000525d:	lea    r8,[rip+0xffffffffffffad9c]        # 0x140000000
   140005264:	mov    BYTE PTR [rbx],r12b
   140005267:	inc    rbx
   14000526a:	cmp    r13,QWORD PTR [rbp-0x18]
   14000526e:	jb     0x140005180
   140005274:	jmp    0x140005295
   140005276:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000527e:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140005283:	jne    0x14000528c
   140005285:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14000528a:	jmp    0x140005295
   14000528c:	mov    al,BYTE PTR [r13+0x0]
   140005290:	mov    BYTE PTR [rbx],al
   140005292:	inc    rbx
   140005295:	mov    r12d,ebx
   140005298:	sub    r12d,r14d
   14000529b:	cmp    BYTE PTR [rbp+0x60],0x1
   14000529f:	jne    0x140005576
   1400052a5:	test   r12d,r12d
   1400052a8:	je     0x140005576
   1400052ae:	dec    rbx
   1400052b1:	test   BYTE PTR [rbx],0x80
   1400052b4:	jne    0x1400052be
   1400052b6:	inc    rbx
   1400052b9:	jmp    0x14000536f
   1400052be:	mov    edx,0x1
   1400052c3:	jmp    0x1400052d4
   1400052c5:	cmp    edx,0x4
   1400052c8:	jg     0x1400052e1
   1400052ca:	cmp    rbx,r14
   1400052cd:	jb     0x1400052e1
   1400052cf:	dec    rbx
   1400052d2:	inc    edx
   1400052d4:	movzx  eax,BYTE PTR [rbx]
   1400052d7:	cmp    BYTE PTR [rax+r8*1+0x127f0],dil
   1400052df:	je     0x1400052c5
   1400052e1:	movzx  ecx,BYTE PTR [rbx]
   1400052e4:	movsx  eax,BYTE PTR [rcx+r8*1+0x127f0]
   1400052ed:	test   eax,eax
   1400052ef:	jne    0x140005304
   1400052f1:	call   0x140003564
   1400052f6:	mov    DWORD PTR [rax],0x2a
   1400052fc:	or     ebx,0xffffffff
   1400052ff:	jmp    0x140005579
   140005304:	inc    eax
   140005306:	cmp    eax,edx
   140005308:	jne    0x140005312
   14000530a:	movsxd rax,edx
   14000530d:	add    rbx,rax
   140005310:	jmp    0x14000536f
   140005312:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000531a:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000531f:	je     0x14000535c
   140005321:	inc    rbx
   140005324:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   140005328:	cmp    edx,0x2
   14000532b:	jl     0x14000533e
   14000532d:	mov    al,BYTE PTR [rbx]
   14000532f:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005337:	inc    rbx
   14000533a:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14000533e:	cmp    edx,0x3
   140005341:	jne    0x140005354
   140005343:	mov    al,BYTE PTR [rbx]
   140005345:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   14000534d:	inc    rbx
   140005350:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140005354:	movsxd rax,edx
   140005357:	sub    rbx,rax
   14000535a:	jmp    0x14000536f
   14000535c:	mov    ecx,DWORD PTR [rbp+0x48]
   14000535f:	neg    edx
   140005361:	mov    r8d,0x1
   140005367:	movsxd rdx,edx
   14000536a:	call   0x1400095a4
   14000536f:	mov    eax,DWORD PTR [rbp-0x1c]
   140005372:	mov    r13,QWORD PTR [rbp+0x50]
   140005376:	sub    ebx,r14d
   140005379:	shr    eax,1
   14000537b:	mov    r9d,ebx
   14000537e:	mov    r8,r14
   140005381:	mov    DWORD PTR [rsp+0x28],eax
   140005385:	xor    edx,edx
   140005387:	mov    ecx,0xfde9
   14000538c:	mov    QWORD PTR [rsp+0x20],r13
   140005391:	call   QWORD PTR [rip+0x8cc9]        # 0x14000e060
   140005397:	mov    r12d,eax
   14000539a:	test   eax,eax
   14000539c:	jne    0x1400053b3
   14000539e:	call   QWORD PTR [rip+0x8cd4]        # 0x14000e078
   1400053a4:	mov    ecx,eax
   1400053a6:	call   0x1400035a4
   1400053ab:	or     ebx,0xffffffff
   1400053ae:	jmp    0x14000557d
   1400053b3:	cmp    eax,ebx
   1400053b5:	mov    ebx,DWORD PTR [rbp-0x20]
   1400053b8:	lea    rax,[rip+0xffffffffffffac41]        # 0x140000000
   1400053bf:	mov    rax,QWORD PTR [rax+r15*8+0x14620]
   1400053c7:	setne  dil
   1400053cb:	add    r12d,r12d
   1400053ce:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   1400053d2:	jmp    0x14000557d
   1400053d7:	test   edx,edx
   1400053d9:	mov    edx,0xa
   1400053de:	je     0x1400053ed
   1400053e0:	cmp    WORD PTR [r14],dx
   1400053e4:	jne    0x1400053ed
   1400053e6:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400053eb:	jmp    0x1400053f2
   1400053ed:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400053f2:	movsxd rax,r12d
   1400053f5:	mov    rbx,r14
   1400053f8:	mov    r13,r14
   1400053fb:	add    rax,r14
   1400053fe:	mov    QWORD PTR [rbp+0x60],rax
   140005402:	cmp    r14,rax
   140005405:	jae    0x140005570
   14000540b:	mov    r12d,0xd
   140005411:	movzx  eax,WORD PTR [r13+0x0]
   140005416:	cmp    ax,0x1a
   14000541a:	je     0x14000554e
   140005420:	cmp    ax,r12w
   140005424:	je     0x140005436
   140005426:	mov    WORD PTR [rbx],ax
   140005429:	add    rbx,0x2
   14000542d:	add    r13,0x2
   140005431:	jmp    0x140005542
   140005436:	mov    rax,QWORD PTR [rbp+0x60]
   14000543a:	add    rax,0xfffffffffffffffe
   14000543e:	cmp    r13,rax
   140005441:	jae    0x14000545d
   140005443:	lea    rax,[r13+0x2]
   140005447:	cmp    WORD PTR [rax],dx
   14000544a:	jne    0x140005455
   14000544c:	add    r13,0x4
   140005450:	jmp    0x140005502
   140005455:	mov    r13,rax
   140005458:	jmp    0x14000553a
   14000545d:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005465:	lea    r9,[rbp-0x24]
   140005469:	lea    rdx,[rbp-0x28]
   14000546d:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140005471:	mov    r8d,0x2
   140005477:	add    r13,0x2
   14000547b:	mov    QWORD PTR [rsp+0x20],rdi
   140005480:	call   QWORD PTR [rip+0x8d1a]        # 0x14000e1a0
   140005486:	test   eax,eax
   140005488:	jne    0x140005498
   14000548a:	call   QWORD PTR [rip+0x8be8]        # 0x14000e078
   140005490:	test   eax,eax
   140005492:	jne    0x14000552e
   140005498:	cmp    DWORD PTR [rbp-0x24],edi
   14000549b:	je     0x14000552e
   1400054a1:	lea    r8,[rip+0xffffffffffffab58]        # 0x140000000
   1400054a8:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400054b0:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400054b5:	je     0x1400054f2
   1400054b7:	mov    edx,0xa
   1400054bc:	cmp    WORD PTR [rbp-0x28],dx
   1400054c0:	je     0x140005502
   1400054c2:	mov    WORD PTR [rbx],r12w
   1400054c6:	mov    al,BYTE PTR [rbp-0x28]
   1400054c9:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400054d1:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400054d5:	mov    al,BYTE PTR [rbp-0x27]
   1400054d8:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400054e0:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400054e4:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400054ec:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   1400054f0:	jmp    0x14000553e
   1400054f2:	cmp    rbx,r14
   1400054f5:	jne    0x140005507
   1400054f7:	mov    edx,0xa
   1400054fc:	cmp    WORD PTR [rbp-0x28],dx
   140005500:	jne    0x140005507
   140005502:	mov    WORD PTR [rbx],dx
   140005505:	jmp    0x14000553e
   140005507:	mov    ecx,DWORD PTR [rbp+0x48]
   14000550a:	mov    rdx,0xfffffffffffffffe
   140005511:	lea    r8d,[rdx+0x3]
   140005515:	call   0x1400095a4
   14000551a:	mov    edx,0xa
   14000551f:	lea    r8,[rip+0xffffffffffffaada]        # 0x140000000
   140005526:	cmp    WORD PTR [rbp-0x28],dx
   14000552a:	je     0x140005542
   14000552c:	jmp    0x14000553a
   14000552e:	mov    edx,0xa
   140005533:	lea    r8,[rip+0xffffffffffffaac6]        # 0x140000000
   14000553a:	mov    WORD PTR [rbx],r12w
   14000553e:	add    rbx,0x2
   140005542:	cmp    r13,QWORD PTR [rbp+0x60]
   140005546:	jb     0x140005411
   14000554c:	jmp    0x140005570
   14000554e:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140005556:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14000555b:	jne    0x140005564
   14000555d:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140005562:	jmp    0x140005570
   140005564:	movzx  eax,WORD PTR [r13+0x0]
   140005569:	mov    WORD PTR [rbx],ax
   14000556c:	add    rbx,0x2
   140005570:	mov    r12d,ebx
   140005573:	sub    r12d,r14d
   140005576:	mov    ebx,DWORD PTR [rbp-0x20]
   140005579:	mov    r13,QWORD PTR [rbp+0x50]
   14000557d:	cmp    r14,r13
   140005580:	je     0x14000558a
   140005582:	mov    rcx,r14
   140005585:	call   0x140001eb4
   14000558a:	cmp    ebx,0xfffffffe
   14000558d:	cmove  ebx,r12d
   140005591:	mov    eax,ebx
   140005593:	jmp    0x1400055ee
   140005595:	call   QWORD PTR [rip+0x8add]        # 0x14000e078
   14000559b:	cmp    eax,0x5
   14000559e:	jne    0x1400055bb
   1400055a0:	call   0x140003564
   1400055a5:	mov    DWORD PTR [rax],0x9
   1400055ab:	call   0x140003584
   1400055b0:	mov    DWORD PTR [rax],0x5
   1400055b6:	jmp    0x1400052fc
   1400055bb:	cmp    eax,0x6d
   1400055be:	jne    0x1400055c4
   1400055c0:	mov    ebx,edi
   1400055c2:	jmp    0x140005579
   1400055c4:	mov    ecx,eax
   1400055c6:	call   0x1400035a4
   1400055cb:	jmp    0x1400052fc
   1400055d0:	xor    eax,eax
   1400055d2:	jmp    0x1400055ee
   1400055d4:	call   0x140003584
   1400055d9:	mov    DWORD PTR [rax],edi
   1400055db:	call   0x140003564
   1400055e0:	mov    DWORD PTR [rax],0x9
   1400055e6:	call   0x1400034fc
   1400055eb:	or     eax,0xffffffff
   1400055ee:	add    rsp,0x58
   1400055f2:	pop    r15
   1400055f4:	pop    r14
   1400055f6:	pop    r13
   1400055f8:	pop    r12
   1400055fa:	pop    rdi
   1400055fb:	pop    rsi
   1400055fc:	pop    rbx
   1400055fd:	pop    rbp
   1400055fe:	ret    
   1400055ff:	int3   
   140005600:	mov    QWORD PTR [rsp+0x10],rbx
   140005605:	mov    QWORD PTR [rsp+0x18],rsi
   14000560a:	mov    DWORD PTR [rsp+0x8],ecx
   14000560e:	push   rdi
   14000560f:	push   r12
   140005611:	push   r13
   140005613:	push   r14
   140005615:	push   r15
   140005617:	sub    rsp,0x20
   14000561b:	mov    esi,r8d
   14000561e:	mov    r13,rdx
   140005621:	movsxd rdi,ecx
   140005624:	cmp    edi,0xfffffffe
   140005627:	jne    0x140005642
   140005629:	call   0x140003584
   14000562e:	xor    ebx,ebx
   140005630:	mov    DWORD PTR [rax],ebx
   140005632:	call   0x140003564
   140005637:	mov    DWORD PTR [rax],0x9
   14000563d:	jmp    0x140005700
   140005642:	xor    ebx,ebx
   140005644:	test   ecx,ecx
   140005646:	js     0x1400056e9
   14000564c:	cmp    edi,DWORD PTR [rip+0xefca]        # 0x14001461c
   140005652:	jae    0x1400056e9
   140005658:	mov    r12,rdi
   14000565b:	mov    r14,rdi
   14000565e:	sar    r14,0x5
   140005662:	lea    r15,[rip+0xefb7]        # 0x140014620
   140005669:	and    r12d,0x1f
   14000566d:	imul   r12,r12,0x58
   140005671:	mov    rax,QWORD PTR [r15+r14*8]
   140005675:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14000567b:	and    ecx,0x1
   14000567e:	je     0x1400056e9
   140005680:	mov    eax,ebx
   140005682:	cmp    r8d,0x7fffffff
   140005689:	setbe  al
   14000568c:	test   eax,eax
   14000568e:	jne    0x1400056a4
   140005690:	call   0x140003584
   140005695:	mov    DWORD PTR [rax],ebx
   140005697:	call   0x140003564
   14000569c:	mov    DWORD PTR [rax],0x16
   1400056a2:	jmp    0x1400056fb
   1400056a4:	mov    ecx,edi
   1400056a6:	call   0x14000b290
   1400056ab:	nop
   1400056ac:	mov    rax,QWORD PTR [r15+r14*8]
   1400056b0:	test   BYTE PTR [rax+r12*1+0x8],0x1
   1400056b6:	je     0x1400056c9
   1400056b8:	mov    r8d,esi
   1400056bb:	mov    rdx,r13
   1400056be:	mov    ecx,edi
   1400056c0:	call   0x140004edc
   1400056c5:	mov    ebx,eax
   1400056c7:	jmp    0x1400056de
   1400056c9:	call   0x140003564
   1400056ce:	mov    DWORD PTR [rax],0x9
   1400056d4:	call   0x140003584
   1400056d9:	mov    DWORD PTR [rax],ebx
   1400056db:	or     ebx,0xffffffff
   1400056de:	mov    ecx,edi
   1400056e0:	call   0x14000b338
   1400056e5:	mov    eax,ebx
   1400056e7:	jmp    0x140005703
   1400056e9:	call   0x140003584
   1400056ee:	mov    DWORD PTR [rax],ebx
   1400056f0:	call   0x140003564
   1400056f5:	mov    DWORD PTR [rax],0x9
   1400056fb:	call   0x1400034fc
   140005700:	or     eax,0xffffffff
   140005703:	mov    rbx,QWORD PTR [rsp+0x58]
   140005708:	mov    rsi,QWORD PTR [rsp+0x60]
   14000570d:	add    rsp,0x20
   140005711:	pop    r15
   140005713:	pop    r14
   140005715:	pop    r13
   140005717:	pop    r12
   140005719:	pop    rdi
   14000571a:	ret    
   14000571b:	int3   
   14000571c:	sub    rsp,0x28
   140005720:	test   rcx,rcx
   140005723:	jne    0x14000573a
   140005725:	call   0x140003564
   14000572a:	mov    DWORD PTR [rax],0x16
   140005730:	call   0x1400034fc
   140005735:	or     eax,0xffffffff
   140005738:	jmp    0x14000573d
   14000573a:	mov    eax,DWORD PTR [rcx+0x1c]
   14000573d:	add    rsp,0x28
   140005741:	ret    
   140005742:	int3   
   140005743:	int3   
   140005744:	mov    QWORD PTR [rsp+0x8],rbx
   140005749:	mov    QWORD PTR [rsp+0x10],rsi
   14000574e:	push   rdi
   14000574f:	sub    rsp,0x20
   140005753:	mov    rbx,r9
   140005756:	mov    rsi,r8
   140005759:	mov    rdi,rdx
   14000575c:	test   r9,r9
   14000575f:	jne    0x140005765
   140005761:	xor    eax,eax
   140005763:	jmp    0x1400057bb
   140005765:	test   rcx,rcx
   140005768:	jne    0x14000577f
   14000576a:	call   0x140003564
   14000576f:	mov    ebx,0x16
   140005774:	mov    DWORD PTR [rax],ebx
   140005776:	call   0x1400034fc
   14000577b:	mov    eax,ebx
   14000577d:	jmp    0x1400057bb
   14000577f:	test   r8,r8
   140005782:	je     0x140005796
   140005784:	cmp    rdx,rbx
   140005787:	jb     0x140005796
   140005789:	mov    r8,rbx
   14000578c:	mov    rdx,rsi
   14000578f:	call   0x140007580
   140005794:	jmp    0x140005761
   140005796:	mov    r8,rdx
   140005799:	xor    edx,edx
   14000579b:	call   0x140004a30
   1400057a0:	test   rsi,rsi
   1400057a3:	je     0x14000576a
   1400057a5:	cmp    rdi,rbx
   1400057a8:	jae    0x1400057b6
   1400057aa:	call   0x140003564
   1400057af:	mov    ebx,0x22
   1400057b4:	jmp    0x140005774
   1400057b6:	mov    eax,0x16
   1400057bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057c0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400057c5:	add    rsp,0x20
   1400057c9:	pop    rdi
   1400057ca:	ret    
   1400057cb:	int3   
   1400057cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400057d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400057d6:	mov    QWORD PTR [rsp+0x18],rdi
   1400057db:	push   r12
   1400057dd:	push   r13
   1400057df:	push   r14
   1400057e1:	sub    rsp,0x90
   1400057e8:	lea    rcx,[rsp+0x20]
   1400057ed:	call   QWORD PTR [rip+0x88e5]        # 0x14000e0d8
   1400057f3:	mov    edx,0x58
   1400057f8:	lea    ebp,[rdx-0x38]
   1400057fb:	mov    ecx,ebp
   1400057fd:	call   0x140006860
   140005802:	xor    r14d,r14d
   140005805:	mov    rdx,rax
   140005808:	test   rax,rax
   14000580b:	jne    0x140005815
   14000580d:	or     eax,0xffffffff
   140005810:	jmp    0x140005a80
   140005815:	mov    QWORD PTR [rip+0xee04],rax        # 0x140014620
   14000581c:	add    rax,0xb00
   140005822:	mov    ecx,ebp
   140005824:	mov    DWORD PTR [rip+0xedf2],ecx        # 0x14001461c
   14000582a:	cmp    rdx,rax
   14000582d:	jae    0x140005874
   14000582f:	add    rdx,0x9
   140005833:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140005838:	mov    WORD PTR [rdx-0x1],0xa00
   14000583e:	mov    DWORD PTR [rdx+0x3],r14d
   140005842:	mov    WORD PTR [rdx+0x2f],0xa00
   140005848:	mov    BYTE PTR [rdx+0x31],0xa
   14000584c:	mov    DWORD PTR [rdx+0x47],r14d
   140005850:	mov    BYTE PTR [rdx+0x43],r14b
   140005854:	mov    rax,QWORD PTR [rip+0xedc5]        # 0x140014620
   14000585b:	add    rdx,0x58
   14000585f:	lea    rcx,[rdx-0x9]
   140005863:	add    rax,0xb00
   140005869:	cmp    rcx,rax
   14000586c:	jb     0x140005833
   14000586e:	mov    ecx,DWORD PTR [rip+0xeda8]        # 0x14001461c
   140005874:	cmp    WORD PTR [rsp+0x62],r14w
   14000587a:	je     0x1400059b4
   140005880:	mov    rax,QWORD PTR [rsp+0x68]
   140005885:	test   rax,rax
   140005888:	je     0x1400059b4
   14000588e:	movsxd r12,DWORD PTR [rax]
   140005891:	mov    ebx,0x800
   140005896:	lea    r13,[rax+0x4]
   14000589a:	add    r12,r13
   14000589d:	cmp    DWORD PTR [rax],ebx
   14000589f:	cmovl  ebx,DWORD PTR [rax]
   1400058a2:	cmp    ecx,ebx
   1400058a4:	jge    0x140005931
   1400058aa:	lea    rdi,[rip+0xed77]        # 0x140014628
   1400058b1:	mov    edx,0x58
   1400058b6:	mov    rcx,rbp
   1400058b9:	call   0x140006860
   1400058be:	test   rax,rax
   1400058c1:	je     0x14000592b
   1400058c3:	mov    edx,DWORD PTR [rip+0xed53]        # 0x14001461c
   1400058c9:	lea    rcx,[rax+0xb00]
   1400058d0:	mov    QWORD PTR [rdi],rax
   1400058d3:	add    edx,ebp
   1400058d5:	mov    DWORD PTR [rip+0xed41],edx        # 0x14001461c
   1400058db:	cmp    rax,rcx
   1400058de:	jae    0x140005921
   1400058e0:	lea    rdx,[rax+0x9]
   1400058e4:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   1400058e9:	and    BYTE PTR [rdx+0x2f],0x80
   1400058ed:	mov    WORD PTR [rdx-0x1],0xa00
   1400058f3:	mov    DWORD PTR [rdx+0x3],r14d
   1400058f7:	mov    WORD PTR [rdx+0x30],0xa0a
   1400058fd:	mov    DWORD PTR [rdx+0x47],r14d
   140005901:	mov    BYTE PTR [rdx+0x43],r14b
   140005905:	mov    rax,QWORD PTR [rdi]
   140005908:	add    rdx,0x58
   14000590c:	lea    rcx,[rdx-0x9]
   140005910:	add    rax,0xb00
   140005916:	cmp    rcx,rax
   140005919:	jb     0x1400058e4
   14000591b:	mov    edx,DWORD PTR [rip+0xecfb]        # 0x14001461c
   140005921:	add    rdi,0x8
   140005925:	cmp    edx,ebx
   140005927:	jl     0x1400058b1
   140005929:	jmp    0x140005931
   14000592b:	mov    ebx,DWORD PTR [rip+0xeceb]        # 0x14001461c
   140005931:	mov    edi,r14d
   140005934:	test   ebx,ebx
   140005936:	jle    0x1400059b4
   140005938:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000593d:	je     0x1400059a7
   14000593f:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140005944:	je     0x1400059a7
   140005946:	test   BYTE PTR [r13+0x0],0x1
   14000594b:	je     0x1400059a7
   14000594d:	test   BYTE PTR [r13+0x0],0x8
   140005952:	jne    0x140005962
   140005954:	mov    rcx,QWORD PTR [r12]
   140005958:	call   QWORD PTR [rip+0x8852]        # 0x14000e1b0
   14000595e:	test   eax,eax
   140005960:	je     0x1400059a7
   140005962:	movsxd rbp,edi
   140005965:	lea    rcx,[rip+0xecb4]        # 0x140014620
   14000596c:	mov    edx,0xfa0
   140005971:	mov    rax,rbp
   140005974:	and    ebp,0x1f
   140005977:	sar    rax,0x5
   14000597b:	imul   rbp,rbp,0x58
   14000597f:	add    rbp,QWORD PTR [rcx+rax*8]
   140005983:	mov    rax,QWORD PTR [r12]
   140005987:	mov    QWORD PTR [rbp+0x0],rax
   14000598b:	mov    al,BYTE PTR [r13+0x0]
   14000598f:	lea    rcx,[rbp+0x10]
   140005993:	mov    BYTE PTR [rbp+0x8],al
   140005996:	call   QWORD PTR [rip+0x8794]        # 0x14000e130
   14000599c:	test   eax,eax
   14000599e:	je     0x14000580d
   1400059a4:	inc    DWORD PTR [rbp+0xc]
   1400059a7:	inc    edi
   1400059a9:	inc    r13
   1400059ac:	add    r12,0x8
   1400059b0:	cmp    edi,ebx
   1400059b2:	jl     0x140005938
   1400059b4:	mov    r12d,r14d
   1400059b7:	mov    rbx,r14
   1400059ba:	mov    rdi,QWORD PTR [rip+0xec5f]        # 0x140014620
   1400059c1:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   1400059c6:	je     0x1400059d9
   1400059c8:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   1400059cd:	je     0x1400059d9
   1400059cf:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   1400059d4:	jmp    0x140005a5e
   1400059d9:	lea    eax,[r12-0x1]
   1400059de:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   1400059e3:	neg    eax
   1400059e5:	mov    eax,0xfffffff6
   1400059ea:	sbb    ecx,ecx
   1400059ec:	add    ecx,0xfffffff5
   1400059ef:	test   r12d,r12d
   1400059f2:	cmove  ecx,eax
   1400059f5:	call   QWORD PTR [rip+0x8675]        # 0x14000e070
   1400059fb:	mov    rbp,rax
   1400059fe:	cmp    rax,0xffffffffffffffff
   140005a02:	je     0x140005a51
   140005a04:	test   rax,rax
   140005a07:	je     0x140005a51
   140005a09:	mov    rcx,rax
   140005a0c:	call   QWORD PTR [rip+0x879e]        # 0x14000e1b0
   140005a12:	test   eax,eax
   140005a14:	je     0x140005a51
   140005a16:	movzx  eax,al
   140005a19:	mov    QWORD PTR [rbx+rdi*1],rbp
   140005a1d:	cmp    eax,0x2
   140005a20:	jne    0x140005a29
   140005a22:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005a27:	jmp    0x140005a33
   140005a29:	cmp    eax,0x3
   140005a2c:	jne    0x140005a33
   140005a2e:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   140005a33:	lea    rcx,[rbx+rdi*1+0x10]
   140005a38:	mov    edx,0xfa0
   140005a3d:	call   QWORD PTR [rip+0x86ed]        # 0x14000e130
   140005a43:	test   eax,eax
   140005a45:	je     0x14000580d
   140005a4b:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140005a4f:	jmp    0x140005a5e
   140005a51:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140005a56:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140005a5e:	add    rbx,0x58
   140005a62:	inc    r12d
   140005a65:	cmp    rbx,0x108
   140005a6c:	jl     0x1400059ba
   140005a72:	mov    ecx,DWORD PTR [rip+0xeba4]        # 0x14001461c
   140005a78:	call   QWORD PTR [rip+0x872a]        # 0x14000e1a8
   140005a7e:	xor    eax,eax
   140005a80:	lea    r11,[rsp+0x90]
   140005a88:	mov    rbx,QWORD PTR [r11+0x20]
   140005a8c:	mov    rbp,QWORD PTR [r11+0x28]
   140005a90:	mov    rdi,QWORD PTR [r11+0x30]
   140005a94:	mov    rsp,r11
   140005a97:	pop    r14
   140005a99:	pop    r13
   140005a9b:	pop    r12
   140005a9d:	ret    
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140005aa5:	mov    QWORD PTR [rsp+0x10],rsi
   140005aaa:	push   rdi
   140005aab:	sub    rsp,0x20
   140005aaf:	movsxd rbx,ecx
   140005ab2:	mov    edi,r8d
   140005ab5:	mov    esi,edx
   140005ab7:	mov    ecx,ebx
   140005ab9:	call   0x14000b21c
   140005abe:	cmp    rax,0xffffffffffffffff
   140005ac2:	jne    0x140005ad4
   140005ac4:	call   0x140003564
   140005ac9:	mov    DWORD PTR [rax],0x9
   140005acf:	or     eax,0xffffffff
   140005ad2:	jmp    0x140005b26
   140005ad4:	mov    r9d,edi
   140005ad7:	xor    r8d,r8d
   140005ada:	mov    edx,esi
   140005adc:	mov    rcx,rax
   140005adf:	call   QWORD PTR [rip+0x86d3]        # 0x14000e1b8
   140005ae5:	mov    edi,eax
   140005ae7:	cmp    eax,0xffffffff
   140005aea:	jne    0x140005af4
   140005aec:	call   QWORD PTR [rip+0x8586]        # 0x14000e078
   140005af2:	jmp    0x140005af6
   140005af4:	xor    eax,eax
   140005af6:	test   eax,eax
   140005af8:	je     0x140005b03
   140005afa:	mov    ecx,eax
   140005afc:	call   0x1400035a4
   140005b01:	jmp    0x140005acf
   140005b03:	mov    rcx,rbx
   140005b06:	mov    rax,rbx
   140005b09:	lea    rdx,[rip+0xeb10]        # 0x140014620
   140005b10:	sar    rax,0x5
   140005b14:	and    ecx,0x1f
   140005b17:	mov    rax,QWORD PTR [rdx+rax*8]
   140005b1b:	imul   rcx,rcx,0x58
   140005b1f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140005b24:	mov    eax,edi
   140005b26:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b2b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b30:	add    rsp,0x20
   140005b34:	pop    rdi
   140005b35:	ret    
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	mov    QWORD PTR [rsp+0x10],rbx
   140005b3d:	mov    DWORD PTR [rsp+0x8],ecx
   140005b41:	push   rsi
   140005b42:	push   rdi
   140005b43:	push   r12
   140005b45:	push   r13
   140005b47:	push   r14
   140005b49:	sub    rsp,0x20
   140005b4d:	mov    esi,r8d
   140005b50:	mov    r12d,edx
   140005b53:	movsxd rdi,ecx
   140005b56:	cmp    edi,0xfffffffe
   140005b59:	jne    0x140005b73
   140005b5b:	call   0x140003584
   140005b60:	and    DWORD PTR [rax],0x0
   140005b63:	call   0x140003564
   140005b68:	mov    DWORD PTR [rax],0x9
   140005b6e:	jmp    0x140005c02
   140005b73:	test   ecx,ecx
   140005b75:	js     0x140005bea
   140005b77:	cmp    edi,DWORD PTR [rip+0xea9f]        # 0x14001461c
   140005b7d:	jae    0x140005bea
   140005b7f:	mov    rbx,rdi
   140005b82:	mov    r13,rdi
   140005b85:	sar    r13,0x5
   140005b89:	lea    r14,[rip+0xea90]        # 0x140014620
   140005b90:	and    ebx,0x1f
   140005b93:	imul   rbx,rbx,0x58
   140005b97:	mov    rax,QWORD PTR [r14+r13*8]
   140005b9b:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140005ba0:	and    ecx,0x1
   140005ba3:	je     0x140005bea
   140005ba5:	mov    ecx,edi
   140005ba7:	call   0x14000b290
   140005bac:	nop
   140005bad:	mov    rax,QWORD PTR [r14+r13*8]
   140005bb1:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140005bb6:	je     0x140005bc9
   140005bb8:	mov    r8d,esi
   140005bbb:	mov    edx,r12d
   140005bbe:	mov    ecx,edi
   140005bc0:	call   0x140005aa0
   140005bc5:	mov    ebx,eax
   140005bc7:	jmp    0x140005bdf
   140005bc9:	call   0x140003564
   140005bce:	mov    DWORD PTR [rax],0x9
   140005bd4:	call   0x140003584
   140005bd9:	and    DWORD PTR [rax],0x0
   140005bdc:	or     ebx,0xffffffff
   140005bdf:	mov    ecx,edi
   140005be1:	call   0x14000b338
   140005be6:	mov    eax,ebx
   140005be8:	jmp    0x140005c05
   140005bea:	call   0x140003584
   140005bef:	and    DWORD PTR [rax],0x0
   140005bf2:	call   0x140003564
   140005bf7:	mov    DWORD PTR [rax],0x9
   140005bfd:	call   0x1400034fc
   140005c02:	or     eax,0xffffffff
   140005c05:	mov    rbx,QWORD PTR [rsp+0x58]
   140005c0a:	add    rsp,0x20
   140005c0e:	pop    r14
   140005c10:	pop    r13
   140005c12:	pop    r12
   140005c14:	pop    rdi
   140005c15:	pop    rsi
   140005c16:	ret    
   140005c17:	int3   
   140005c18:	mov    QWORD PTR [rsp+0x8],rbx
   140005c1d:	mov    QWORD PTR [rsp+0x10],rsi
   140005c22:	push   rdi
   140005c23:	sub    rsp,0x20
   140005c27:	mov    eax,DWORD PTR [rcx+0x18]
   140005c2a:	xor    esi,esi
   140005c2c:	mov    rbx,rcx
   140005c2f:	and    al,0x3
   140005c31:	cmp    al,0x2
   140005c33:	jne    0x140005c74
   140005c35:	test   DWORD PTR [rcx+0x18],0x108
   140005c3c:	je     0x140005c74
   140005c3e:	mov    edi,DWORD PTR [rcx]
   140005c40:	sub    edi,DWORD PTR [rcx+0x10]
   140005c43:	test   edi,edi
   140005c45:	jle    0x140005c74
   140005c47:	call   0x14000571c
   140005c4c:	mov    rdx,QWORD PTR [rbx+0x10]
   140005c50:	mov    r8d,edi
   140005c53:	mov    ecx,eax
   140005c55:	call   0x140009e80
   140005c5a:	cmp    eax,edi
   140005c5c:	jne    0x140005c6d
   140005c5e:	mov    eax,DWORD PTR [rbx+0x18]
   140005c61:	test   al,al
   140005c63:	jns    0x140005c74
   140005c65:	and    eax,0xfffffffd
   140005c68:	mov    DWORD PTR [rbx+0x18],eax
   140005c6b:	jmp    0x140005c74
   140005c6d:	or     DWORD PTR [rbx+0x18],0x20
   140005c71:	or     esi,0xffffffff
   140005c74:	mov    rcx,QWORD PTR [rbx+0x10]
   140005c78:	and    DWORD PTR [rbx+0x8],0x0
   140005c7c:	mov    eax,esi
   140005c7e:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c83:	mov    QWORD PTR [rbx],rcx
   140005c86:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c8b:	add    rsp,0x20
   140005c8f:	pop    rdi
   140005c90:	ret    
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	rex push rbx
   140005c96:	sub    rsp,0x20
   140005c9a:	mov    rbx,rcx
   140005c9d:	test   rcx,rcx
   140005ca0:	jne    0x140005cac
   140005ca2:	add    rsp,0x20
   140005ca6:	pop    rbx
   140005ca7:	jmp    0x140005ce0
   140005cac:	call   0x140005c18
   140005cb1:	test   eax,eax
   140005cb3:	je     0x140005cba
   140005cb5:	or     eax,0xffffffff
   140005cb8:	jmp    0x140005cda
   140005cba:	test   DWORD PTR [rbx+0x18],0x4000
   140005cc1:	je     0x140005cd8
   140005cc3:	mov    rcx,rbx
   140005cc6:	call   0x14000571c
   140005ccb:	mov    ecx,eax
   140005ccd:	call   0x14000b568
   140005cd2:	neg    eax
   140005cd4:	sbb    eax,eax
   140005cd6:	jmp    0x140005cda
   140005cd8:	xor    eax,eax
   140005cda:	add    rsp,0x20
   140005cde:	pop    rbx
   140005cdf:	ret    
   140005ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ce5:	mov    QWORD PTR [rsp+0x10],rsi
   140005cea:	mov    QWORD PTR [rsp+0x18],rdi
   140005cef:	push   r12
   140005cf1:	push   r13
   140005cf3:	push   r15
   140005cf5:	sub    rsp,0x30
   140005cf9:	mov    r13d,ecx
   140005cfc:	xor    esi,esi
   140005cfe:	xor    edi,edi
   140005d00:	lea    ecx,[rsi+0x1]
   140005d03:	call   0x140003870
   140005d08:	nop
   140005d09:	xor    ebx,ebx
   140005d0b:	or     r15d,0xffffffff
   140005d0f:	mov    DWORD PTR [rsp+0x20],ebx
   140005d13:	cmp    ebx,DWORD PTR [rip+0xfb27]        # 0x140015840
   140005d19:	jge    0x140005d9f
   140005d1f:	movsxd r12,ebx
   140005d22:	mov    rax,QWORD PTR [rip+0xeaf7]        # 0x140014820
   140005d29:	cmp    QWORD PTR [rax+r12*8],0x0
   140005d2e:	je     0x140005d98
   140005d30:	mov    rdx,QWORD PTR [rax+r12*8]
   140005d34:	test   BYTE PTR [rdx+0x18],0x83
   140005d38:	je     0x140005d98
   140005d3a:	mov    ecx,ebx
   140005d3c:	call   0x140002e2c
   140005d41:	nop
   140005d42:	mov    rax,QWORD PTR [rip+0xead7]        # 0x140014820
   140005d49:	mov    rcx,QWORD PTR [rax+r12*8]
   140005d4d:	test   BYTE PTR [rcx+0x18],0x83
   140005d51:	je     0x140005d86
   140005d53:	cmp    r13d,0x1
   140005d57:	jne    0x140005d6b
   140005d59:	call   0x140005c94
   140005d5e:	cmp    eax,r15d
   140005d61:	je     0x140005d86
   140005d63:	inc    esi
   140005d65:	mov    DWORD PTR [rsp+0x24],esi
   140005d69:	jmp    0x140005d86
   140005d6b:	test   r13d,r13d
   140005d6e:	jne    0x140005d86
   140005d70:	test   BYTE PTR [rcx+0x18],0x2
   140005d74:	je     0x140005d86
   140005d76:	call   0x140005c94
   140005d7b:	cmp    eax,r15d
   140005d7e:	cmove  edi,r15d
   140005d82:	mov    DWORD PTR [rsp+0x28],edi
   140005d86:	mov    rdx,QWORD PTR [rip+0xea93]        # 0x140014820
   140005d8d:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005d91:	mov    ecx,ebx
   140005d93:	call   0x140002eac
   140005d98:	inc    ebx
   140005d9a:	jmp    0x140005d0f
   140005d9f:	mov    ecx,0x1
   140005da4:	call   0x140003770
   140005da9:	cmp    r13d,0x1
   140005dad:	cmove  edi,esi
   140005db0:	mov    eax,edi
   140005db2:	mov    rbx,QWORD PTR [rsp+0x50]
   140005db7:	mov    rsi,QWORD PTR [rsp+0x58]
   140005dbc:	mov    rdi,QWORD PTR [rsp+0x60]
   140005dc1:	add    rsp,0x30
   140005dc5:	pop    r15
   140005dc7:	pop    r13
   140005dc9:	pop    r12
   140005dcb:	ret    
   140005dcc:	mov    ecx,0x1
   140005dd1:	jmp    0x140005ce0
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	mov    QWORD PTR [rsp+0x8],rbx
   140005ddd:	push   rdi
   140005dde:	sub    rsp,0x20
   140005de2:	movsxd rdi,ecx
   140005de5:	mov    ecx,edi
   140005de7:	call   0x14000b21c
   140005dec:	cmp    rax,0xffffffffffffffff
   140005df0:	je     0x140005e4b
   140005df2:	mov    rax,QWORD PTR [rip+0xe827]        # 0x140014620
   140005df9:	mov    ecx,0x2
   140005dfe:	cmp    edi,0x1
   140005e01:	jne    0x140005e0c
   140005e03:	test   BYTE PTR [rax+0xb8],dil
   140005e0a:	jne    0x140005e16
   140005e0c:	cmp    edi,ecx
   140005e0e:	jne    0x140005e2d
   140005e10:	test   BYTE PTR [rax+0x60],0x1
   140005e14:	je     0x140005e2d
   140005e16:	call   0x14000b21c
   140005e1b:	mov    ecx,0x1
   140005e20:	mov    rbx,rax
   140005e23:	call   0x14000b21c
   140005e28:	cmp    rax,rbx
   140005e2b:	je     0x140005e4b
   140005e2d:	mov    ecx,edi
   140005e2f:	call   0x14000b21c
   140005e34:	mov    rcx,rax
   140005e37:	call   QWORD PTR [rip+0x8263]        # 0x14000e0a0
   140005e3d:	test   eax,eax
   140005e3f:	jne    0x140005e4b
   140005e41:	call   QWORD PTR [rip+0x8231]        # 0x14000e078
   140005e47:	mov    ebx,eax
   140005e49:	jmp    0x140005e4d
   140005e4b:	xor    ebx,ebx
   140005e4d:	mov    ecx,edi
   140005e4f:	call   0x14000b170
   140005e54:	mov    r11,rdi
   140005e57:	mov    rcx,rdi
   140005e5a:	sar    rcx,0x5
   140005e5e:	and    r11d,0x1f
   140005e62:	lea    rdx,[rip+0xe7b7]        # 0x140014620
   140005e69:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140005e6d:	imul   r11,r11,0x58
   140005e71:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140005e77:	test   ebx,ebx
   140005e79:	je     0x140005e87
   140005e7b:	mov    ecx,ebx
   140005e7d:	call   0x1400035a4
   140005e82:	or     eax,0xffffffff
   140005e85:	jmp    0x140005e89
   140005e87:	xor    eax,eax
   140005e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e8e:	add    rsp,0x20
   140005e92:	pop    rdi
   140005e93:	ret    
   140005e94:	mov    QWORD PTR [rsp+0x18],rbx
   140005e99:	mov    DWORD PTR [rsp+0x8],ecx
   140005e9d:	push   rsi
   140005e9e:	push   rdi
   140005e9f:	push   r12
   140005ea1:	sub    rsp,0x20
   140005ea5:	movsxd rbx,ecx
   140005ea8:	cmp    ebx,0xfffffffe
   140005eab:	jne    0x140005ec5
   140005ead:	call   0x140003584
   140005eb2:	and    DWORD PTR [rax],0x0
   140005eb5:	call   0x140003564
   140005eba:	mov    DWORD PTR [rax],0x9
   140005ec0:	jmp    0x140005f46
   140005ec5:	test   ecx,ecx
   140005ec7:	js     0x140005f2e
   140005ec9:	cmp    ebx,DWORD PTR [rip+0xe74d]        # 0x14001461c
   140005ecf:	jae    0x140005f2e
   140005ed1:	mov    rdi,rbx
   140005ed4:	mov    rsi,rbx
   140005ed7:	sar    rsi,0x5
   140005edb:	lea    r12,[rip+0xe73e]        # 0x140014620
   140005ee2:	and    edi,0x1f
   140005ee5:	imul   rdi,rdi,0x58
   140005ee9:	mov    rax,QWORD PTR [r12+rsi*8]
   140005eed:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140005ef2:	and    ecx,0x1
   140005ef5:	je     0x140005f2e
   140005ef7:	mov    ecx,ebx
   140005ef9:	call   0x14000b290
   140005efe:	nop
   140005eff:	mov    rax,QWORD PTR [r12+rsi*8]
   140005f03:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140005f08:	je     0x140005f15
   140005f0a:	mov    ecx,ebx
   140005f0c:	call   0x140005dd8
   140005f11:	mov    edi,eax
   140005f13:	jmp    0x140005f23
   140005f15:	call   0x140003564
   140005f1a:	mov    DWORD PTR [rax],0x9
   140005f20:	or     edi,0xffffffff
   140005f23:	mov    ecx,ebx
   140005f25:	call   0x14000b338
   140005f2a:	mov    eax,edi
   140005f2c:	jmp    0x140005f49
   140005f2e:	call   0x140003584
   140005f33:	and    DWORD PTR [rax],0x0
   140005f36:	call   0x140003564
   140005f3b:	mov    DWORD PTR [rax],0x9
   140005f41:	call   0x1400034fc
   140005f46:	or     eax,0xffffffff
   140005f49:	mov    rbx,QWORD PTR [rsp+0x50]
   140005f4e:	add    rsp,0x20
   140005f52:	pop    r12
   140005f54:	pop    rdi
   140005f55:	pop    rsi
   140005f56:	ret    
   140005f57:	int3   
   140005f58:	rex push rbx
   140005f5a:	sub    rsp,0x20
   140005f5e:	test   BYTE PTR [rcx+0x18],0x83
   140005f62:	mov    rbx,rcx
   140005f65:	je     0x140005f89
   140005f67:	test   BYTE PTR [rcx+0x18],0x8
   140005f6b:	je     0x140005f89
   140005f6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f71:	call   0x140001eb4
   140005f76:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140005f7d:	xor    eax,eax
   140005f7f:	mov    QWORD PTR [rbx],rax
   140005f82:	mov    QWORD PTR [rbx+0x10],rax
   140005f86:	mov    DWORD PTR [rbx+0x8],eax
   140005f89:	add    rsp,0x20
   140005f8d:	pop    rbx
   140005f8e:	ret    
   140005f8f:	int3   
   140005f90:	sub    rsp,0x28
   140005f94:	mov    rax,QWORD PTR [rcx]
   140005f97:	cmp    DWORD PTR [rax],0xe06d7363
   140005f9d:	jne    0x140005fca
   140005f9f:	cmp    DWORD PTR [rax+0x18],0x4
   140005fa3:	jne    0x140005fca
   140005fa5:	mov    eax,DWORD PTR [rax+0x20]
   140005fa8:	cmp    eax,0x19930520
   140005fad:	je     0x140005fc4
   140005faf:	cmp    eax,0x19930521
   140005fb4:	je     0x140005fc4
   140005fb6:	cmp    eax,0x19930522
   140005fbb:	je     0x140005fc4
   140005fbd:	cmp    eax,0x1994000
   140005fc2:	jne    0x140005fca
   140005fc4:	call   0x1400038b4
   140005fc9:	int3   
   140005fca:	xor    eax,eax
   140005fcc:	add    rsp,0x28
   140005fd0:	ret    
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	sub    rsp,0x28
   140005fd8:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140005f90
   140005fdf:	call   QWORD PTR [rip+0x810b]        # 0x14000e0f0
   140005fe5:	xor    eax,eax
   140005fe7:	add    rsp,0x28
   140005feb:	ret    
   140005fec:	mov    QWORD PTR [rsp+0x8],rbx
   140005ff1:	mov    QWORD PTR [rsp+0x10],rbp
   140005ff6:	mov    QWORD PTR [rsp+0x18],rsi
   140005ffb:	push   rdi
   140005ffc:	sub    rsp,0x20
   140006000:	mov    rsi,rdx
   140006003:	mov    edi,ecx
   140006005:	call   0x140003c94
   14000600a:	xor    r9d,r9d
   14000600d:	mov    rbx,rax
   140006010:	test   rax,rax
   140006013:	je     0x1400061a5
   140006019:	mov    rdx,QWORD PTR [rax+0xa0]
   140006020:	mov    rcx,rdx
   140006023:	cmp    DWORD PTR [rcx],edi
   140006025:	je     0x140006037
   140006027:	lea    rax,[rdx+0xc0]
   14000602e:	add    rcx,0x10
   140006032:	cmp    rcx,rax
   140006035:	jb     0x140006023
   140006037:	lea    rax,[rdx+0xc0]
   14000603e:	cmp    rcx,rax
   140006041:	jae    0x140006047
   140006043:	cmp    DWORD PTR [rcx],edi
   140006045:	je     0x14000604a
   140006047:	mov    rcx,r9
   14000604a:	test   rcx,rcx
   14000604d:	je     0x1400061a5
   140006053:	mov    r8,QWORD PTR [rcx+0x8]
   140006057:	test   r8,r8
   14000605a:	je     0x1400061a5
   140006060:	cmp    r8,0x5
   140006064:	jne    0x140006073
   140006066:	mov    QWORD PTR [rcx+0x8],r9
   14000606a:	lea    eax,[r8-0x4]
   14000606e:	jmp    0x1400061a7
   140006073:	cmp    r8,0x1
   140006077:	jne    0x140006081
   140006079:	or     eax,0xffffffff
   14000607c:	jmp    0x1400061a7
   140006081:	mov    rbp,QWORD PTR [rbx+0xa8]
   140006088:	mov    QWORD PTR [rbx+0xa8],rsi
   14000608f:	cmp    DWORD PTR [rcx+0x4],0x8
   140006093:	jne    0x14000618f
   140006099:	mov    edx,0x30
   14000609e:	mov    rax,QWORD PTR [rbx+0xa0]
   1400060a5:	add    rdx,0x10
   1400060a9:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   1400060ae:	cmp    rdx,0xc0
   1400060b5:	jl     0x14000609e
   1400060b7:	cmp    DWORD PTR [rcx],0xc000008e
   1400060bd:	mov    edi,DWORD PTR [rbx+0xb0]
   1400060c3:	jne    0x1400060d4
   1400060c5:	mov    DWORD PTR [rbx+0xb0],0x83
   1400060cf:	jmp    0x140006179
   1400060d4:	cmp    DWORD PTR [rcx],0xc0000090
   1400060da:	jne    0x1400060eb
   1400060dc:	mov    DWORD PTR [rbx+0xb0],0x81
   1400060e6:	jmp    0x140006179
   1400060eb:	cmp    DWORD PTR [rcx],0xc0000091
   1400060f1:	jne    0x1400060ff
   1400060f3:	mov    DWORD PTR [rbx+0xb0],0x84
   1400060fd:	jmp    0x140006179
   1400060ff:	cmp    DWORD PTR [rcx],0xc0000093
   140006105:	jne    0x140006113
   140006107:	mov    DWORD PTR [rbx+0xb0],0x85
   140006111:	jmp    0x140006179
   140006113:	cmp    DWORD PTR [rcx],0xc000008d
   140006119:	jne    0x140006127
   14000611b:	mov    DWORD PTR [rbx+0xb0],0x82
   140006125:	jmp    0x140006179
   140006127:	cmp    DWORD PTR [rcx],0xc000008f
   14000612d:	jne    0x14000613b
   14000612f:	mov    DWORD PTR [rbx+0xb0],0x86
   140006139:	jmp    0x140006179
   14000613b:	cmp    DWORD PTR [rcx],0xc0000092
   140006141:	jne    0x14000614f
   140006143:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000614d:	jmp    0x140006179
   14000614f:	cmp    DWORD PTR [rcx],0xc00002b5
   140006155:	jne    0x140006163
   140006157:	mov    DWORD PTR [rbx+0xb0],0x8d
   140006161:	jmp    0x140006179
   140006163:	cmp    DWORD PTR [rcx],0xc00002b4
   140006169:	mov    eax,edi
   14000616b:	mov    edx,0x8e
   140006170:	cmove  eax,edx
   140006173:	mov    DWORD PTR [rbx+0xb0],eax
   140006179:	mov    edx,DWORD PTR [rbx+0xb0]
   14000617f:	mov    ecx,0x8
   140006184:	call   r8
   140006187:	mov    DWORD PTR [rbx+0xb0],edi
   14000618d:	jmp    0x140006199
   14000618f:	mov    QWORD PTR [rcx+0x8],r9
   140006193:	mov    ecx,DWORD PTR [rcx+0x4]
   140006196:	call   r8
   140006199:	mov    QWORD PTR [rbx+0xa8],rbp
   1400061a0:	jmp    0x140006079
   1400061a5:	xor    eax,eax
   1400061a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400061b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400061b6:	add    rsp,0x20
   1400061ba:	pop    rdi
   1400061bb:	ret    
   1400061bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400061c1:	push   rdi
   1400061c2:	sub    rsp,0x20
   1400061c6:	xor    edi,edi
   1400061c8:	cmp    DWORD PTR [rip+0xf6a2],edi        # 0x140015870
   1400061ce:	jne    0x1400061d5
   1400061d0:	call   0x140008450
   1400061d5:	mov    rbx,QWORD PTR [rip+0xf674]        # 0x140015850
   1400061dc:	lea    rax,[rip+0x959d]        # 0x14000f780
   1400061e3:	test   rbx,rbx
   1400061e6:	cmove  rbx,rax
   1400061ea:	cmp    BYTE PTR [rbx],0x20
   1400061ed:	ja     0x1400061f8
   1400061ef:	cmp    BYTE PTR [rbx],0x0
   1400061f2:	je     0x140006227
   1400061f4:	test   edi,edi
   1400061f6:	je     0x140006221
   1400061f8:	cmp    BYTE PTR [rbx],0x22
   1400061fb:	jne    0x140006206
   1400061fd:	xor    eax,eax
   1400061ff:	test   edi,edi
   140006201:	sete   al
   140006204:	mov    edi,eax
   140006206:	movzx  ecx,BYTE PTR [rbx]
   140006209:	call   0x14000b6bc
   14000620e:	test   eax,eax
   140006210:	je     0x140006215
   140006212:	inc    rbx
   140006215:	inc    rbx
   140006218:	jmp    0x1400061ea
   14000621a:	cmp    al,0x20
   14000621c:	ja     0x140006227
   14000621e:	inc    rbx
   140006221:	mov    al,BYTE PTR [rbx]
   140006223:	test   al,al
   140006225:	jne    0x14000621a
   140006227:	mov    rax,rbx
   14000622a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000622f:	add    rsp,0x20
   140006233:	pop    rdi
   140006234:	ret    
   140006235:	int3   
   140006236:	int3   
   140006237:	int3   
   140006238:	mov    QWORD PTR [rsp+0x8],rbx
   14000623d:	mov    QWORD PTR [rsp+0x10],rbp
   140006242:	mov    QWORD PTR [rsp+0x18],rsi
   140006247:	push   rdi
   140006248:	sub    rsp,0x30
   14000624c:	cmp    DWORD PTR [rip+0xf61d],0x0        # 0x140015870
   140006253:	jne    0x14000625a
   140006255:	call   0x140008450
   14000625a:	mov    rbx,QWORD PTR [rip+0xd1b7]        # 0x140013418
   140006261:	xor    edi,edi
   140006263:	test   rbx,rbx
   140006266:	jne    0x140006283
   140006268:	or     eax,0xffffffff
   14000626b:	jmp    0x140006324
   140006270:	cmp    al,0x3d
   140006272:	je     0x140006276
   140006274:	inc    edi
   140006276:	mov    rcx,rbx
   140006279:	call   0x1400084d0
   14000627e:	lea    rbx,[rbx+rax*1+0x1]
   140006283:	mov    al,BYTE PTR [rbx]
   140006285:	test   al,al
   140006287:	jne    0x140006270
   140006289:	lea    eax,[rdi+0x1]
   14000628c:	mov    edx,0x8
   140006291:	movsxd rcx,eax
   140006294:	call   0x140006860
   140006299:	mov    rdi,rax
   14000629c:	mov    QWORD PTR [rip+0xd135],rax        # 0x1400133d8
   1400062a3:	test   rax,rax
   1400062a6:	je     0x140006268
   1400062a8:	mov    rbx,QWORD PTR [rip+0xd169]        # 0x140013418
   1400062af:	cmp    BYTE PTR [rbx],0x0
   1400062b2:	je     0x140006304
   1400062b4:	mov    rcx,rbx
   1400062b7:	call   0x1400084d0
   1400062bc:	cmp    BYTE PTR [rbx],0x3d
   1400062bf:	lea    esi,[rax+0x1]
   1400062c2:	je     0x1400062f2
   1400062c4:	movsxd rbp,esi
   1400062c7:	mov    edx,0x1
   1400062cc:	mov    rcx,rbp
   1400062cf:	call   0x140006860
   1400062d4:	mov    QWORD PTR [rdi],rax
   1400062d7:	test   rax,rax
   1400062da:	je     0x14000634f
   1400062dc:	mov    r8,rbx
   1400062df:	mov    rdx,rbp
   1400062e2:	mov    rcx,rax
   1400062e5:	call   0x14000b6d0
   1400062ea:	test   eax,eax
   1400062ec:	jne    0x140006339
   1400062ee:	add    rdi,0x8
   1400062f2:	movsxd rax,esi
   1400062f5:	add    rbx,rax
   1400062f8:	cmp    BYTE PTR [rbx],0x0
   1400062fb:	jne    0x1400062b4
   1400062fd:	mov    rbx,QWORD PTR [rip+0xd114]        # 0x140013418
   140006304:	mov    rcx,rbx
   140006307:	call   0x140001eb4
   14000630c:	and    QWORD PTR [rip+0xd104],0x0        # 0x140013418
   140006314:	and    QWORD PTR [rdi],0x0
   140006318:	mov    DWORD PTR [rip+0xf536],0x1        # 0x140015858
   140006322:	xor    eax,eax
   140006324:	mov    rbx,QWORD PTR [rsp+0x40]
   140006329:	mov    rbp,QWORD PTR [rsp+0x48]
   14000632e:	mov    rsi,QWORD PTR [rsp+0x50]
   140006333:	add    rsp,0x30
   140006337:	pop    rdi
   140006338:	ret    
   140006339:	and    QWORD PTR [rsp+0x20],0x0
   14000633f:	xor    r9d,r9d
   140006342:	xor    r8d,r8d
   140006345:	xor    edx,edx
   140006347:	xor    ecx,ecx
   140006349:	call   0x140003458
   14000634e:	int3   
   14000634f:	mov    rcx,QWORD PTR [rip+0xd082]        # 0x1400133d8
   140006356:	call   0x140001eb4
   14000635b:	and    QWORD PTR [rip+0xd075],0x0        # 0x1400133d8
   140006363:	jmp    0x140006268
   140006368:	mov    rax,rsp
   14000636b:	mov    QWORD PTR [rax+0x8],rbx
   14000636f:	mov    QWORD PTR [rax+0x10],rbp
   140006373:	mov    QWORD PTR [rax+0x18],rsi
   140006377:	mov    QWORD PTR [rax+0x20],rdi
   14000637b:	push   r12
   14000637d:	push   r13
   14000637f:	push   r14
   140006381:	sub    rsp,0x20
   140006385:	mov    r13,QWORD PTR [rsp+0x60]
   14000638a:	mov    r14,r9
   14000638d:	mov    rdi,r8
   140006390:	and    DWORD PTR [r13+0x0],0x0
   140006395:	mov    r12,rdx
   140006398:	mov    rbx,rcx
   14000639b:	mov    DWORD PTR [r9],0x1
   1400063a2:	test   rdx,rdx
   1400063a5:	je     0x1400063ae
   1400063a7:	mov    QWORD PTR [rdx],r8
   1400063aa:	add    r12,0x8
   1400063ae:	xor    ebp,ebp
   1400063b0:	cmp    BYTE PTR [rbx],0x22
   1400063b3:	jne    0x1400063c6
   1400063b5:	xor    eax,eax
   1400063b7:	test   ebp,ebp
   1400063b9:	mov    sil,0x22
   1400063bc:	sete   al
   1400063bf:	inc    rbx
   1400063c2:	mov    ebp,eax
   1400063c4:	jmp    0x1400063ff
   1400063c6:	inc    DWORD PTR [r13+0x0]
   1400063ca:	test   rdi,rdi
   1400063cd:	je     0x1400063d6
   1400063cf:	mov    al,BYTE PTR [rbx]
   1400063d1:	mov    BYTE PTR [rdi],al
   1400063d3:	inc    rdi
   1400063d6:	movzx  esi,BYTE PTR [rbx]
   1400063d9:	inc    rbx
   1400063dc:	mov    ecx,esi
   1400063de:	call   0x14000b6bc
   1400063e3:	test   eax,eax
   1400063e5:	je     0x1400063fa
   1400063e7:	inc    DWORD PTR [r13+0x0]
   1400063eb:	test   rdi,rdi
   1400063ee:	je     0x1400063f7
   1400063f0:	mov    al,BYTE PTR [rbx]
   1400063f2:	mov    BYTE PTR [rdi],al
   1400063f4:	inc    rdi
   1400063f7:	inc    rbx
   1400063fa:	test   sil,sil
   1400063fd:	je     0x14000641a
   1400063ff:	test   ebp,ebp
   140006401:	jne    0x1400063b0
   140006403:	cmp    sil,0x20
   140006407:	je     0x14000640f
   140006409:	cmp    sil,0x9
   14000640d:	jne    0x1400063b0
   14000640f:	test   rdi,rdi
   140006412:	je     0x14000641d
   140006414:	mov    BYTE PTR [rdi-0x1],0x0
   140006418:	jmp    0x14000641d
   14000641a:	dec    rbx
   14000641d:	xor    esi,esi
   14000641f:	cmp    BYTE PTR [rbx],0x0
   140006422:	je     0x14000650b
   140006428:	cmp    BYTE PTR [rbx],0x20
   14000642b:	je     0x140006432
   14000642d:	cmp    BYTE PTR [rbx],0x9
   140006430:	jne    0x140006437
   140006432:	inc    rbx
   140006435:	jmp    0x140006428
   140006437:	cmp    BYTE PTR [rbx],0x0
   14000643a:	je     0x14000650b
   140006440:	test   r12,r12
   140006443:	je     0x14000644d
   140006445:	mov    QWORD PTR [r12],rdi
   140006449:	add    r12,0x8
   14000644d:	inc    DWORD PTR [r14]
   140006450:	mov    edx,0x1
   140006455:	xor    ecx,ecx
   140006457:	jmp    0x14000645e
   140006459:	inc    rbx
   14000645c:	inc    ecx
   14000645e:	cmp    BYTE PTR [rbx],0x5c
   140006461:	je     0x140006459
   140006463:	cmp    BYTE PTR [rbx],0x22
   140006466:	jne    0x14000649e
   140006468:	test   dl,cl
   14000646a:	jne    0x140006489
   14000646c:	test   esi,esi
   14000646e:	je     0x14000647e
   140006470:	lea    rax,[rbx+0x1]
   140006474:	cmp    BYTE PTR [rax],0x22
   140006477:	jne    0x14000647e
   140006479:	mov    rbx,rax
   14000647c:	jmp    0x140006489
   14000647e:	xor    eax,eax
   140006480:	xor    edx,edx
   140006482:	test   esi,esi
   140006484:	sete   al
   140006487:	mov    esi,eax
   140006489:	shr    ecx,1
   14000648b:	jmp    0x14000649e
   14000648d:	dec    ecx
   14000648f:	test   rdi,rdi
   140006492:	je     0x14000649a
   140006494:	mov    BYTE PTR [rdi],0x5c
   140006497:	inc    rdi
   14000649a:	inc    DWORD PTR [r13+0x0]
   14000649e:	test   ecx,ecx
   1400064a0:	jne    0x14000648d
   1400064a2:	mov    al,BYTE PTR [rbx]
   1400064a4:	test   al,al
   1400064a6:	je     0x1400064f7
   1400064a8:	test   esi,esi
   1400064aa:	jne    0x1400064b4
   1400064ac:	cmp    al,0x20
   1400064ae:	je     0x1400064f7
   1400064b0:	cmp    al,0x9
   1400064b2:	je     0x1400064f7
   1400064b4:	test   edx,edx
   1400064b6:	je     0x1400064ef
   1400064b8:	movsx  ecx,al
   1400064bb:	call   0x14000b6bc
   1400064c0:	test   rdi,rdi
   1400064c3:	je     0x1400064e0
   1400064c5:	test   eax,eax
   1400064c7:	je     0x1400064d7
   1400064c9:	mov    al,BYTE PTR [rbx]
   1400064cb:	inc    rbx
   1400064ce:	mov    BYTE PTR [rdi],al
   1400064d0:	inc    rdi
   1400064d3:	inc    DWORD PTR [r13+0x0]
   1400064d7:	mov    al,BYTE PTR [rbx]
   1400064d9:	mov    BYTE PTR [rdi],al
   1400064db:	inc    rdi
   1400064de:	jmp    0x1400064eb
   1400064e0:	test   eax,eax
   1400064e2:	je     0x1400064eb
   1400064e4:	inc    rbx
   1400064e7:	inc    DWORD PTR [r13+0x0]
   1400064eb:	inc    DWORD PTR [r13+0x0]
   1400064ef:	inc    rbx
   1400064f2:	jmp    0x140006450
   1400064f7:	test   rdi,rdi
   1400064fa:	je     0x140006502
   1400064fc:	mov    BYTE PTR [rdi],0x0
   1400064ff:	inc    rdi
   140006502:	inc    DWORD PTR [r13+0x0]
   140006506:	jmp    0x14000641f
   14000650b:	test   r12,r12
   14000650e:	je     0x140006515
   140006510:	and    QWORD PTR [r12],0x0
   140006515:	inc    DWORD PTR [r14]
   140006518:	mov    rbx,QWORD PTR [rsp+0x40]
   14000651d:	mov    rbp,QWORD PTR [rsp+0x48]
   140006522:	mov    rsi,QWORD PTR [rsp+0x50]
   140006527:	mov    rdi,QWORD PTR [rsp+0x58]
   14000652c:	add    rsp,0x20
   140006530:	pop    r14
   140006532:	pop    r13
   140006534:	pop    r12
   140006536:	ret    
   140006537:	int3   
   140006538:	mov    QWORD PTR [rsp+0x18],rbx
   14000653d:	mov    QWORD PTR [rsp+0x20],rsi
   140006542:	push   rdi
   140006543:	sub    rsp,0x30
   140006547:	cmp    DWORD PTR [rip+0xf322],0x0        # 0x140015870
   14000654e:	jne    0x140006555
   140006550:	call   0x140008450
   140006555:	lea    rdi,[rip+0xdd14]        # 0x140014270
   14000655c:	mov    r8d,0x104
   140006562:	xor    ecx,ecx
   140006564:	mov    rdx,rdi
   140006567:	mov    BYTE PTR [rip+0xde06],0x0        # 0x140014374
   14000656e:	call   QWORD PTR [rip+0x7c4c]        # 0x14000e1c0
   140006574:	mov    rbx,QWORD PTR [rip+0xf2d5]        # 0x140015850
   14000657b:	mov    QWORD PTR [rip+0xce76],rdi        # 0x1400133f8
   140006582:	test   rbx,rbx
   140006585:	je     0x14000658c
   140006587:	cmp    BYTE PTR [rbx],0x0
   14000658a:	jne    0x14000658f
   14000658c:	mov    rbx,rdi
   14000658f:	lea    rax,[rsp+0x48]
   140006594:	lea    r9,[rsp+0x40]
   140006599:	xor    r8d,r8d
   14000659c:	xor    edx,edx
   14000659e:	mov    rcx,rbx
   1400065a1:	mov    QWORD PTR [rsp+0x20],rax
   1400065a6:	call   0x140006368
   1400065ab:	movsxd rsi,DWORD PTR [rsp+0x40]
   1400065b0:	movabs rcx,0x1fffffffffffffff
   1400065ba:	cmp    rsi,rcx
   1400065bd:	jae    0x14000661b
   1400065bf:	movsxd rcx,DWORD PTR [rsp+0x48]
   1400065c4:	cmp    rcx,0xffffffffffffffff
   1400065c8:	jae    0x14000661b
   1400065ca:	lea    rdx,[rcx+rsi*8]
   1400065ce:	cmp    rdx,rcx
   1400065d1:	jb     0x14000661b
   1400065d3:	mov    rcx,rdx
   1400065d6:	call   0x1400067e0
   1400065db:	mov    rdi,rax
   1400065de:	test   rax,rax
   1400065e1:	je     0x14000661b
   1400065e3:	lea    r8,[rax+rsi*8]
   1400065e7:	lea    rax,[rsp+0x48]
   1400065ec:	lea    r9,[rsp+0x40]
   1400065f1:	mov    rdx,rdi
   1400065f4:	mov    rcx,rbx
   1400065f7:	mov    QWORD PTR [rsp+0x20],rax
   1400065fc:	call   0x140006368
   140006601:	mov    r11d,DWORD PTR [rsp+0x40]
   140006606:	mov    QWORD PTR [rip+0xcdbb],rdi        # 0x1400133c8
   14000660d:	dec    r11d
   140006610:	xor    eax,eax
   140006612:	mov    DWORD PTR [rip+0xcdab],r11d        # 0x1400133c4
   140006619:	jmp    0x14000661e
   14000661b:	or     eax,0xffffffff
   14000661e:	mov    rbx,QWORD PTR [rsp+0x50]
   140006623:	mov    rsi,QWORD PTR [rsp+0x58]
   140006628:	add    rsp,0x30
   14000662c:	pop    rdi
   14000662d:	ret    
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    rax,rsp
   140006633:	mov    QWORD PTR [rax+0x8],rbx
   140006637:	mov    QWORD PTR [rax+0x10],rbp
   14000663b:	mov    QWORD PTR [rax+0x18],rsi
   14000663f:	mov    QWORD PTR [rax+0x20],rdi
   140006643:	push   r12
   140006645:	sub    rsp,0x40
   140006649:	call   QWORD PTR [rip+0x7b89]        # 0x14000e1d8
   14000664f:	xor    r12d,r12d
   140006652:	mov    rdi,rax
   140006655:	test   rax,rax
   140006658:	je     0x140006707
   14000665e:	mov    rbx,rax
   140006661:	cmp    WORD PTR [rax],r12w
   140006665:	je     0x14000667b
   140006667:	add    rbx,0x2
   14000666b:	cmp    WORD PTR [rbx],r12w
   14000666f:	jne    0x140006667
   140006671:	add    rbx,0x2
   140006675:	cmp    WORD PTR [rbx],r12w
   140006679:	jne    0x140006667
   14000667b:	mov    QWORD PTR [rsp+0x38],r12
   140006680:	sub    rbx,rax
   140006683:	mov    QWORD PTR [rsp+0x30],r12
   140006688:	sar    rbx,1
   14000668b:	mov    r8,rax
   14000668e:	xor    edx,edx
   140006690:	lea    r9d,[rbx+0x1]
   140006694:	xor    ecx,ecx
   140006696:	mov    DWORD PTR [rsp+0x28],r12d
   14000669b:	mov    QWORD PTR [rsp+0x20],r12
   1400066a0:	call   QWORD PTR [rip+0x7b2a]        # 0x14000e1d0
   1400066a6:	movsxd rbp,eax
   1400066a9:	test   eax,eax
   1400066ab:	je     0x1400066fe
   1400066ad:	mov    rcx,rbp
   1400066b0:	call   0x1400067e0
   1400066b5:	mov    rsi,rax
   1400066b8:	test   rax,rax
   1400066bb:	je     0x1400066fe
   1400066bd:	mov    QWORD PTR [rsp+0x38],r12
   1400066c2:	mov    QWORD PTR [rsp+0x30],r12
   1400066c7:	lea    r9d,[rbx+0x1]
   1400066cb:	mov    r8,rdi
   1400066ce:	xor    edx,edx
   1400066d0:	xor    ecx,ecx
   1400066d2:	mov    DWORD PTR [rsp+0x28],ebp
   1400066d6:	mov    QWORD PTR [rsp+0x20],rax
   1400066db:	call   QWORD PTR [rip+0x7aef]        # 0x14000e1d0
   1400066e1:	test   eax,eax
   1400066e3:	jne    0x1400066f0
   1400066e5:	mov    rcx,rsi
   1400066e8:	call   0x140001eb4
   1400066ed:	mov    rsi,r12
   1400066f0:	mov    rcx,rdi
   1400066f3:	call   QWORD PTR [rip+0x7acf]        # 0x14000e1c8
   1400066f9:	mov    rax,rsi
   1400066fc:	jmp    0x140006709
   1400066fe:	mov    rcx,rdi
   140006701:	call   QWORD PTR [rip+0x7ac1]        # 0x14000e1c8
   140006707:	xor    eax,eax
   140006709:	mov    rbx,QWORD PTR [rsp+0x50]
   14000670e:	mov    rbp,QWORD PTR [rsp+0x58]
   140006713:	mov    rsi,QWORD PTR [rsp+0x60]
   140006718:	mov    rdi,QWORD PTR [rsp+0x68]
   14000671d:	add    rsp,0x40
   140006721:	pop    r12
   140006723:	ret    
   140006724:	mov    QWORD PTR [rsp+0x18],rbx
   140006729:	push   rdi
   14000672a:	sub    rsp,0x20
   14000672e:	mov    rax,QWORD PTR [rip+0xb8d3]        # 0x140012008
   140006735:	and    QWORD PTR [rsp+0x30],0x0
   14000673b:	movabs rdi,0x2b992ddfa232
   140006745:	cmp    rax,rdi
   140006748:	je     0x140006756
   14000674a:	not    rax
   14000674d:	mov    QWORD PTR [rip+0xb8bc],rax        # 0x140012010
   140006754:	jmp    0x1400067cc
   140006756:	lea    rcx,[rsp+0x30]
   14000675b:	call   QWORD PTR [rip+0x7a97]        # 0x14000e1f8
   140006761:	mov    rbx,QWORD PTR [rsp+0x30]
   140006766:	call   QWORD PTR [rip+0x7a84]        # 0x14000e1f0
   14000676c:	mov    r11d,eax
   14000676f:	xor    rbx,r11
   140006772:	call   QWORD PTR [rip+0x79f8]        # 0x14000e170
   140006778:	mov    r11d,eax
   14000677b:	xor    rbx,r11
   14000677e:	call   QWORD PTR [rip+0x7a64]        # 0x14000e1e8
   140006784:	lea    rcx,[rsp+0x38]
   140006789:	mov    r11d,eax
   14000678c:	xor    rbx,r11
   14000678f:	call   QWORD PTR [rip+0x7a4b]        # 0x14000e1e0
   140006795:	mov    r11,QWORD PTR [rsp+0x38]
   14000679a:	xor    r11,rbx
   14000679d:	movabs rax,0xffffffffffff
   1400067a7:	and    r11,rax
   1400067aa:	movabs rax,0x2b992ddfa233
   1400067b4:	cmp    r11,rdi
   1400067b7:	cmove  r11,rax
   1400067bb:	mov    QWORD PTR [rip+0xb846],r11        # 0x140012008
   1400067c2:	not    r11
   1400067c5:	mov    QWORD PTR [rip+0xb844],r11        # 0x140012010
   1400067cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400067d1:	add    rsp,0x20
   1400067d5:	pop    rdi
   1400067d6:	ret    
   1400067d7:	int3   
   1400067d8:	and    DWORD PTR [rip+0xde39],0x0        # 0x140014618
   1400067df:	ret    
   1400067e0:	mov    rax,rsp
   1400067e3:	mov    QWORD PTR [rax+0x8],rbx
   1400067e7:	mov    QWORD PTR [rax+0x10],rbp
   1400067eb:	mov    QWORD PTR [rax+0x18],rsi
   1400067ef:	mov    QWORD PTR [rax+0x20],rdi
   1400067f3:	push   r12
   1400067f5:	sub    rsp,0x20
   1400067f9:	mov    edi,DWORD PTR [rip+0xdb79]        # 0x140014378
   1400067ff:	xor    ebp,ebp
   140006801:	mov    rsi,rcx
   140006804:	or     r12d,0xffffffff
   140006808:	mov    rcx,rsi
   14000680b:	call   0x140001f38
   140006810:	mov    rbx,rax
   140006813:	test   rax,rax
   140006816:	jne    0x140006840
   140006818:	test   edi,edi
   14000681a:	je     0x140006840
   14000681c:	mov    ecx,ebp
   14000681e:	call   QWORD PTR [rip+0x79dc]        # 0x14000e200
   140006824:	mov    edi,DWORD PTR [rip+0xdb4e]        # 0x140014378
   14000682a:	lea    r11d,[rbp+0x3e8]
   140006831:	cmp    r11d,edi
   140006834:	mov    ebp,r11d
   140006837:	cmova  ebp,r12d
   14000683b:	cmp    ebp,r12d
   14000683e:	jne    0x140006808
   140006840:	mov    rbp,QWORD PTR [rsp+0x38]
   140006845:	mov    rsi,QWORD PTR [rsp+0x40]
   14000684a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000684f:	mov    rax,rbx
   140006852:	mov    rbx,QWORD PTR [rsp+0x30]
   140006857:	add    rsp,0x20
   14000685b:	pop    r12
   14000685d:	ret    
   14000685e:	int3   
   14000685f:	int3   
   140006860:	mov    rax,rsp
   140006863:	mov    QWORD PTR [rax+0x8],rbx
   140006867:	mov    QWORD PTR [rax+0x10],rbp
   14000686b:	mov    QWORD PTR [rax+0x18],rsi
   14000686f:	mov    QWORD PTR [rax+0x20],rdi
   140006873:	push   r12
   140006875:	sub    rsp,0x20
   140006879:	xor    edi,edi
   14000687b:	mov    rsi,rdx
   14000687e:	mov    rbp,rcx
   140006881:	or     r12d,0xffffffff
   140006885:	xor    r8d,r8d
   140006888:	mov    rdx,rsi
   14000688b:	mov    rcx,rbp
   14000688e:	call   0x1400044fc
   140006893:	mov    rbx,rax
   140006896:	test   rax,rax
   140006899:	jne    0x1400068c5
   14000689b:	cmp    DWORD PTR [rip+0xdad7],eax        # 0x140014378
   1400068a1:	jbe    0x1400068c5
   1400068a3:	mov    ecx,edi
   1400068a5:	call   QWORD PTR [rip+0x7955]        # 0x14000e200
   1400068ab:	lea    r11d,[rdi+0x3e8]
   1400068b2:	cmp    r11d,DWORD PTR [rip+0xdabf]        # 0x140014378
   1400068b9:	mov    edi,r11d
   1400068bc:	cmova  edi,r12d
   1400068c0:	cmp    edi,r12d
   1400068c3:	jne    0x140006885
   1400068c5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400068ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400068cf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400068d4:	mov    rax,rbx
   1400068d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068dc:	add    rsp,0x20
   1400068e0:	pop    r12
   1400068e2:	ret    
   1400068e3:	int3   
   1400068e4:	mov    rax,rsp
   1400068e7:	mov    QWORD PTR [rax+0x8],rbx
   1400068eb:	mov    QWORD PTR [rax+0x10],rbp
   1400068ef:	mov    QWORD PTR [rax+0x18],rsi
   1400068f3:	mov    QWORD PTR [rax+0x20],rdi
   1400068f7:	push   r12
   1400068f9:	sub    rsp,0x20
   1400068fd:	xor    esi,esi
   1400068ff:	mov    rdi,rdx
   140006902:	mov    rbp,rcx
   140006905:	or     r12d,0xffffffff
   140006909:	mov    rdx,rdi
   14000690c:	mov    rcx,rbp
   14000690f:	call   0x14000b734
   140006914:	mov    rbx,rax
   140006917:	test   rax,rax
   14000691a:	jne    0x14000694b
   14000691c:	test   rdi,rdi
   14000691f:	je     0x14000694b
   140006921:	cmp    DWORD PTR [rip+0xda51],eax        # 0x140014378
   140006927:	jbe    0x14000694b
   140006929:	mov    ecx,esi
   14000692b:	call   QWORD PTR [rip+0x78cf]        # 0x14000e200
   140006931:	lea    r11d,[rsi+0x3e8]
   140006938:	cmp    r11d,DWORD PTR [rip+0xda39]        # 0x140014378
   14000693f:	mov    esi,r11d
   140006942:	cmova  esi,r12d
   140006946:	cmp    esi,r12d
   140006949:	jne    0x140006909
   14000694b:	mov    rbp,QWORD PTR [rsp+0x38]
   140006950:	mov    rsi,QWORD PTR [rsp+0x40]
   140006955:	mov    rdi,QWORD PTR [rsp+0x48]
   14000695a:	mov    rax,rbx
   14000695d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006962:	add    rsp,0x20
   140006966:	pop    r12
   140006968:	ret    
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	mov    QWORD PTR [rsp+0x8],rbx
   140006971:	mov    QWORD PTR [rsp+0x10],rsi
   140006976:	push   rdi
   140006977:	sub    rsp,0x30
   14000697b:	xor    edi,edi
   14000697d:	lea    ecx,[rdi+0x1]
   140006980:	call   0x140003870
   140006985:	nop
   140006986:	lea    ebx,[rdi+0x3]
   140006989:	mov    DWORD PTR [rsp+0x20],ebx
   14000698d:	cmp    ebx,DWORD PTR [rip+0xeead]        # 0x140015840
   140006993:	jge    0x1400069fa
   140006995:	movsxd rsi,ebx
   140006998:	mov    rax,QWORD PTR [rip+0xde81]        # 0x140014820
   14000699f:	cmp    QWORD PTR [rax+rsi*8],0x0
   1400069a4:	je     0x1400069f6
   1400069a6:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400069aa:	test   BYTE PTR [rcx+0x18],0x83
   1400069ae:	je     0x1400069c0
   1400069b0:	call   0x140002754
   1400069b5:	cmp    eax,0xffffffff
   1400069b8:	je     0x1400069c0
   1400069ba:	inc    edi
   1400069bc:	mov    DWORD PTR [rsp+0x24],edi
   1400069c0:	cmp    ebx,0x14
   1400069c3:	jl     0x1400069f6
   1400069c5:	mov    rax,QWORD PTR [rip+0xde54]        # 0x140014820
   1400069cc:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400069d0:	add    rcx,0x30
   1400069d4:	call   QWORD PTR [rip+0x7766]        # 0x14000e140
   1400069da:	mov    rcx,QWORD PTR [rip+0xde3f]        # 0x140014820
   1400069e1:	mov    rcx,QWORD PTR [rcx+rsi*8]
   1400069e5:	call   0x140001eb4
   1400069ea:	mov    r11,QWORD PTR [rip+0xde2f]        # 0x140014820
   1400069f1:	and    QWORD PTR [r11+rsi*8],0x0
   1400069f6:	inc    ebx
   1400069f8:	jmp    0x140006989
   1400069fa:	mov    ecx,0x1
   1400069ff:	call   0x140003770
   140006a04:	mov    eax,edi
   140006a06:	mov    rbx,QWORD PTR [rsp+0x40]
   140006a0b:	mov    rsi,QWORD PTR [rsp+0x48]
   140006a10:	add    rsp,0x30
   140006a14:	pop    rdi
   140006a15:	ret    
   140006a16:	int3   
   140006a17:	int3   
   140006a18:	mov    QWORD PTR [rsp+0x10],rbx
   140006a1d:	mov    QWORD PTR [rsp+0x18],r8
   140006a22:	mov    QWORD PTR [rsp+0x8],rcx
   140006a27:	push   rbp
   140006a28:	push   rsi
   140006a29:	push   rdi
   140006a2a:	push   r12
   140006a2c:	push   r13
   140006a2e:	push   r14
   140006a30:	push   r15
   140006a32:	mov    rbp,rsp
   140006a35:	sub    rsp,0x80
   140006a3c:	xor    edi,edi
   140006a3e:	mov    r13b,0x80
   140006a41:	mov    esi,r9d
   140006a44:	mov    rbx,rdx
   140006a47:	mov    DWORD PTR [rbp-0x18],0x18
   140006a4e:	lea    r12d,[rdi+0x1]
   140006a52:	mov    DWORD PTR [rbp-0x28],edi
   140006a55:	mov    BYTE PTR [rbp+0x58],dil
   140006a59:	mov    QWORD PTR [rbp-0x10],rdi
   140006a5d:	test   r13b,r9b
   140006a60:	je     0x140006a6a
   140006a62:	mov    DWORD PTR [rbp-0x8],edi
   140006a65:	mov    r15b,0x10
   140006a68:	jmp    0x140006a71
   140006a6a:	mov    DWORD PTR [rbp-0x8],r12d
   140006a6e:	mov    r15b,dil
   140006a71:	lea    rcx,[rbp-0x28]
   140006a75:	call   0x14000ba70
   140006a7a:	test   eax,eax
   140006a7c:	jne    0x1400071ab
   140006a82:	mov    eax,0x8000
   140006a87:	test   eax,esi
   140006a89:	jne    0x140006a9b
   140006a8b:	test   esi,0x74000
   140006a91:	jne    0x140006a98
   140006a93:	cmp    DWORD PTR [rbp-0x28],eax
   140006a96:	je     0x140006a9b
   140006a98:	or     r15b,r13b
   140006a9b:	mov    ecx,esi
   140006a9d:	mov    r9d,0x3
   140006aa3:	mov    eax,0xc0000000
   140006aa8:	and    ecx,r9d
   140006aab:	mov    r8d,0x80000000
   140006ab1:	je     0x140006b0e
   140006ab3:	dec    ecx
   140006ab5:	je     0x140006af8
   140006ab7:	dec    ecx
   140006ab9:	je     0x140006af3
   140006abb:	call   0x140003584
   140006ac0:	mov    DWORD PTR [rax],edi
   140006ac2:	or     DWORD PTR [rbx],0xffffffff
   140006ac5:	call   0x140003564
   140006aca:	mov    ebx,0x16
   140006acf:	mov    DWORD PTR [rax],ebx
   140006ad1:	call   0x1400034fc
   140006ad6:	mov    eax,ebx
   140006ad8:	mov    rbx,QWORD PTR [rsp+0xc8]
   140006ae0:	add    rsp,0x80
   140006ae7:	pop    r15
   140006ae9:	pop    r14
   140006aeb:	pop    r13
   140006aed:	pop    r12
   140006aef:	pop    rdi
   140006af0:	pop    rsi
   140006af1:	pop    rbp
   140006af2:	ret    
   140006af3:	mov    r14d,eax
   140006af6:	jmp    0x140006b11
   140006af8:	test   sil,0x8
   140006afc:	je     0x140006b06
   140006afe:	test   esi,0x70000
   140006b04:	jne    0x140006af3
   140006b06:	mov    r14d,0x40000000
   140006b0c:	jmp    0x140006b11
   140006b0e:	mov    r14d,r8d
   140006b11:	mov    ecx,DWORD PTR [rbp+0x60]
   140006b14:	mov    DWORD PTR [rbp-0x40],r14d
   140006b18:	mov    r13d,0x2
   140006b1e:	sub    ecx,0x10
   140006b21:	je     0x140006b50
   140006b23:	sub    ecx,0x10
   140006b26:	je     0x140006b4b
   140006b28:	sub    ecx,0x10
   140006b2b:	je     0x140006b46
   140006b2d:	sub    ecx,0x10
   140006b30:	je     0x140006b41
   140006b32:	cmp    ecx,0x40
   140006b35:	jne    0x140006abb
   140006b37:	cmp    r14d,r8d
   140006b3a:	mov    edx,edi
   140006b3c:	sete   dl
   140006b3f:	jmp    0x140006b52
   140006b41:	mov    edx,r9d
   140006b44:	jmp    0x140006b52
   140006b46:	mov    edx,r13d
   140006b49:	jmp    0x140006b52
   140006b4b:	mov    edx,r12d
   140006b4e:	jmp    0x140006b52
   140006b50:	mov    edx,edi
   140006b52:	mov    eax,esi
   140006b54:	mov    ecx,0x700
   140006b59:	mov    DWORD PTR [rbp-0x3c],edx
   140006b5c:	and    eax,ecx
   140006b5e:	mov    r8d,0x100
   140006b64:	je     0x140006bac
   140006b66:	cmp    eax,r8d
   140006b69:	je     0x140006ba4
   140006b6b:	cmp    eax,0x200
   140006b70:	je     0x140006b9c
   140006b72:	cmp    eax,0x300
   140006b77:	je     0x140006b97
   140006b79:	cmp    eax,0x400
   140006b7e:	je     0x140006bac
   140006b80:	cmp    eax,0x500
   140006b85:	je     0x140006baf
   140006b87:	cmp    eax,0x600
   140006b8c:	je     0x140006b9c
   140006b8e:	cmp    eax,ecx
   140006b90:	je     0x140006baf
   140006b92:	jmp    0x140006abb
   140006b97:	mov    r12d,r13d
   140006b9a:	jmp    0x140006baf
   140006b9c:	mov    r12d,0x5
   140006ba2:	jmp    0x140006baf
   140006ba4:	mov    r12d,0x4
   140006baa:	jmp    0x140006baf
   140006bac:	mov    r12d,r9d
   140006baf:	mov    ecx,0x80
   140006bb4:	mov    DWORD PTR [rbp-0x34],ecx
   140006bb7:	test   r8d,esi
   140006bba:	je     0x140006bd2
   140006bbc:	mov    al,BYTE PTR [rip+0xc7fe]        # 0x1400133c0
   140006bc2:	not    al
   140006bc4:	and    al,BYTE PTR [rbp+0x68]
   140006bc7:	test   al,0x80
   140006bc9:	lea    eax,[rcx-0x7f]
   140006bcc:	cmove  ecx,eax
   140006bcf:	mov    DWORD PTR [rbp-0x34],ecx
   140006bd2:	test   sil,0x40
   140006bd6:	je     0x140006bee
   140006bd8:	bts    ecx,0x1a
   140006bdc:	bts    r14d,0x10
   140006be1:	or     edx,0x4
   140006be4:	mov    DWORD PTR [rbp-0x3c],edx
   140006be7:	mov    DWORD PTR [rbp-0x34],ecx
   140006bea:	mov    DWORD PTR [rbp-0x40],r14d
   140006bee:	bt     esi,0xc
   140006bf2:	jae    0x140006bfa
   140006bf4:	or     ecx,r8d
   140006bf7:	mov    DWORD PTR [rbp-0x34],ecx
   140006bfa:	test   sil,0x20
   140006bfe:	je     0x140006c06
   140006c00:	bts    ecx,0x1b
   140006c04:	jmp    0x140006c10
   140006c06:	test   sil,0x10
   140006c0a:	je     0x140006c13
   140006c0c:	bts    ecx,0x1c
   140006c10:	mov    DWORD PTR [rbp-0x34],ecx
   140006c13:	call   0x14000b360
   140006c18:	mov    DWORD PTR [rbx],eax
   140006c1a:	cmp    eax,0xffffffff
   140006c1d:	jne    0x140006c40
   140006c1f:	call   0x140003584
   140006c24:	mov    DWORD PTR [rax],edi
   140006c26:	or     DWORD PTR [rbx],0xffffffff
   140006c29:	call   0x140003564
   140006c2e:	mov    DWORD PTR [rax],0x18
   140006c34:	call   0x140003564
   140006c39:	mov    eax,DWORD PTR [rax]
   140006c3b:	jmp    0x140006ad8
   140006c40:	mov    rax,QWORD PTR [rbp+0x40]
   140006c44:	mov    r8d,DWORD PTR [rbp-0x3c]
   140006c48:	mov    rcx,QWORD PTR [rbp+0x50]
   140006c4c:	mov    DWORD PTR [rax],0x1
   140006c52:	mov    eax,DWORD PTR [rbp-0x34]
   140006c55:	mov    QWORD PTR [rsp+0x30],rdi
   140006c5a:	mov    DWORD PTR [rsp+0x28],eax
   140006c5e:	lea    r9,[rbp-0x18]
   140006c62:	mov    edx,r14d
   140006c65:	mov    DWORD PTR [rsp+0x20],r12d
   140006c6a:	call   QWORD PTR [rip+0x7598]        # 0x14000e208
   140006c70:	mov    QWORD PTR [rbp-0x20],rax
   140006c74:	cmp    rax,0xffffffffffffffff
   140006c78:	jne    0x140006d09
   140006c7e:	mov    ecx,0xc0000000
   140006c83:	mov    eax,r14d
   140006c86:	and    eax,ecx
   140006c88:	cmp    eax,ecx
   140006c8a:	jne    0x140006ccf
   140006c8c:	mov    eax,0x1
   140006c91:	test   al,sil
   140006c94:	je     0x140006ccf
   140006c96:	mov    eax,DWORD PTR [rbp-0x34]
   140006c99:	mov    r8d,DWORD PTR [rbp-0x3c]
   140006c9d:	mov    rcx,QWORD PTR [rbp+0x50]
   140006ca1:	btr    r14d,0x1f
   140006ca6:	mov    QWORD PTR [rsp+0x30],rdi
   140006cab:	mov    DWORD PTR [rsp+0x28],eax
   140006caf:	lea    r9,[rbp-0x18]
   140006cb3:	mov    edx,r14d
   140006cb6:	mov    DWORD PTR [rsp+0x20],r12d
   140006cbb:	mov    DWORD PTR [rbp-0x40],r14d
   140006cbf:	call   QWORD PTR [rip+0x7543]        # 0x14000e208
   140006cc5:	mov    QWORD PTR [rbp-0x20],rax
   140006cc9:	cmp    rax,0xffffffffffffffff
   140006ccd:	jne    0x140006d09
   140006ccf:	movsxd rcx,DWORD PTR [rbx]
   140006cd2:	lea    r14,[rip+0xd947]        # 0x140014620
   140006cd9:	mov    rax,rcx
   140006cdc:	and    ecx,0x1f
   140006cdf:	sar    rax,0x5
   140006ce3:	imul   rcx,rcx,0x58
   140006ce7:	mov    rax,QWORD PTR [r14+rax*8]
   140006ceb:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140006cf0:	call   QWORD PTR [rip+0x7382]        # 0x14000e078
   140006cf6:	mov    ecx,eax
   140006cf8:	call   0x1400035a4
   140006cfd:	call   0x140003564
   140006d02:	mov    edi,DWORD PTR [rax]
   140006d04:	jmp    0x1400071a4
   140006d09:	mov    rcx,rax
   140006d0c:	call   QWORD PTR [rip+0x749e]        # 0x14000e1b0
   140006d12:	test   eax,eax
   140006d14:	jne    0x140006d61
   140006d16:	movsxd rcx,DWORD PTR [rbx]
   140006d19:	lea    r14,[rip+0xd900]        # 0x140014620
   140006d20:	mov    rax,rcx
   140006d23:	and    ecx,0x1f
   140006d26:	sar    rax,0x5
   140006d2a:	imul   rcx,rcx,0x58
   140006d2e:	mov    rax,QWORD PTR [r14+rax*8]
   140006d32:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140006d37:	call   QWORD PTR [rip+0x733b]        # 0x14000e078
   140006d3d:	mov    ecx,eax
   140006d3f:	mov    ebx,eax
   140006d41:	call   0x1400035a4
   140006d46:	mov    rcx,QWORD PTR [rbp-0x20]
   140006d4a:	call   QWORD PTR [rip+0x7350]        # 0x14000e0a0
   140006d50:	test   ebx,ebx
   140006d52:	jne    0x140006cfd
   140006d54:	call   0x140003564
   140006d59:	mov    DWORD PTR [rax],0xd
   140006d5f:	jmp    0x140006cfd
   140006d61:	cmp    eax,r13d
   140006d64:	jne    0x140006d6c
   140006d66:	or     r15b,0x40
   140006d6a:	jmp    0x140006d75
   140006d6c:	cmp    eax,0x3
   140006d6f:	jne    0x140006d75
   140006d71:	or     r15b,0x8
   140006d75:	mov    rdx,QWORD PTR [rbp-0x20]
   140006d79:	mov    ecx,DWORD PTR [rbx]
   140006d7b:	call   0x14000b0c0
   140006d80:	movsxd rcx,DWORD PTR [rbx]
   140006d83:	lea    r14,[rip+0xd896]        # 0x140014620
   140006d8a:	mov    rax,rcx
   140006d8d:	and    ecx,0x1f
   140006d90:	mov    r8d,0x1
   140006d96:	sar    rax,0x5
   140006d9a:	or     r15b,r8b
   140006d9d:	mov    rax,QWORD PTR [r14+rax*8]
   140006da1:	imul   rcx,rcx,0x58
   140006da5:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140006daa:	movsxd rcx,DWORD PTR [rbx]
   140006dad:	mov    rax,rcx
   140006db0:	and    ecx,0x1f
   140006db3:	sar    rax,0x5
   140006db7:	imul   rcx,rcx,0x58
   140006dbb:	mov    rax,QWORD PTR [r14+rax*8]
   140006dbf:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140006dc4:	mov    al,r15b
   140006dc7:	and    al,0x48
   140006dc9:	mov    BYTE PTR [rbp-0x30],al
   140006dcc:	jne    0x140006e55
   140006dd2:	test   r15b,r15b
   140006dd5:	jns    0x140007080
   140006ddb:	test   r13b,sil
   140006dde:	je     0x140006e55
   140006de0:	mov    ecx,DWORD PTR [rbx]
   140006de2:	mov    r8d,r13d
   140006de5:	or     edx,0xffffffff
   140006de8:	call   0x140005aa0
   140006ded:	mov    DWORD PTR [rbp-0x38],eax
   140006df0:	cmp    eax,0xffffffff
   140006df3:	jne    0x140006e0e
   140006df5:	call   0x140003584
   140006dfa:	cmp    DWORD PTR [rax],0x83
   140006e00:	je     0x140006e4f
   140006e02:	mov    ecx,DWORD PTR [rbx]
   140006e04:	call   0x140005dd8
   140006e09:	jmp    0x140006cfd
   140006e0e:	mov    ecx,DWORD PTR [rbx]
   140006e10:	lea    rdx,[rbp-0x2c]
   140006e14:	mov    r8d,0x1
   140006e1a:	mov    WORD PTR [rbp-0x2c],di
   140006e1e:	call   0x140004edc
   140006e23:	test   eax,eax
   140006e25:	jne    0x140006e3e
   140006e27:	cmp    WORD PTR [rbp-0x2c],0x1a
   140006e2c:	jne    0x140006e3e
   140006e2e:	movsxd rdx,DWORD PTR [rbp-0x38]
   140006e32:	mov    ecx,DWORD PTR [rbx]
   140006e34:	call   0x14000b808
   140006e39:	cmp    eax,0xffffffff
   140006e3c:	je     0x140006e02
   140006e3e:	mov    ecx,DWORD PTR [rbx]
   140006e40:	xor    r8d,r8d
   140006e43:	xor    edx,edx
   140006e45:	call   0x140005aa0
   140006e4a:	cmp    eax,0xffffffff
   140006e4d:	je     0x140006e02
   140006e4f:	mov    r8d,0x1
   140006e55:	test   r15b,r15b
   140006e58:	jns    0x140007080
   140006e5e:	mov    edx,0x74000
   140006e63:	mov    ecx,0x4000
   140006e68:	test   edx,esi
   140006e6a:	jne    0x140006e79
   140006e6c:	mov    eax,DWORD PTR [rbp-0x28]
   140006e6f:	and    eax,edx
   140006e71:	jne    0x140006e77
   140006e73:	or     esi,ecx
   140006e75:	jmp    0x140006e79
   140006e77:	or     esi,eax
   140006e79:	mov    eax,esi
   140006e7b:	and    eax,edx
   140006e7d:	cmp    eax,ecx
   140006e7f:	je     0x140006ec4
   140006e81:	cmp    eax,0x10000
   140006e86:	je     0x140006eb1
   140006e88:	cmp    eax,0x14000
   140006e8d:	je     0x140006eb1
   140006e8f:	cmp    eax,0x20000
   140006e94:	je     0x140006ebe
   140006e96:	cmp    eax,0x24000
   140006e9b:	je     0x140006ebe
   140006e9d:	cmp    eax,0x40000
   140006ea2:	je     0x140006eab
   140006ea4:	cmp    eax,0x44000
   140006ea9:	jne    0x140006ec8
   140006eab:	mov    BYTE PTR [rbp+0x58],r8b
   140006eaf:	jmp    0x140006ec8
   140006eb1:	mov    ecx,0x301
   140006eb6:	mov    eax,esi
   140006eb8:	and    eax,ecx
   140006eba:	cmp    eax,ecx
   140006ebc:	jne    0x140006ec8
   140006ebe:	mov    BYTE PTR [rbp+0x58],r13b
   140006ec2:	jmp    0x140006ec8
   140006ec4:	mov    BYTE PTR [rbp+0x58],dil
   140006ec8:	test   esi,0x70000
   140006ece:	je     0x140007080
   140006ed4:	test   r15b,0x40
   140006ed8:	mov    r15d,DWORD PTR [rbp-0x40]
   140006edc:	mov    DWORD PTR [rbp-0x38],edi
   140006edf:	jne    0x140007084
   140006ee5:	mov    eax,r15d
   140006ee8:	mov    ecx,0xc0000000
   140006eed:	and    eax,ecx
   140006eef:	cmp    eax,0x40000000
   140006ef4:	je     0x140007007
   140006efa:	cmp    eax,0x80000000
   140006eff:	je     0x140006f71
   140006f01:	cmp    eax,ecx
   140006f03:	jne    0x140007084
   140006f09:	test   r12d,r12d
   140006f0c:	je     0x140007084
   140006f12:	cmp    r12d,r13d
   140006f15:	jbe    0x140006f27
   140006f17:	cmp    r12d,0x4
   140006f1b:	jbe    0x140006f4a
   140006f1d:	cmp    r12d,0x5
   140006f21:	jne    0x140007084
   140006f27:	movsx  ecx,BYTE PTR [rbp+0x58]
   140006f2b:	mov    r12d,edi
   140006f2e:	dec    ecx
   140006f30:	je     0x14000704b
   140006f36:	dec    ecx
   140006f38:	jne    0x140007084
   140006f3e:	mov    DWORD PTR [rbp-0x38],0xfeff
   140006f45:	jmp    0x140007058
   140006f4a:	mov    ecx,DWORD PTR [rbx]
   140006f4c:	mov    r8d,r13d
   140006f4f:	xor    edx,edx
   140006f51:	call   0x1400095a4
   140006f56:	test   rax,rax
   140006f59:	je     0x140006f27
   140006f5b:	mov    ecx,DWORD PTR [rbx]
   140006f5d:	xor    r8d,r8d
   140006f60:	xor    edx,edx
   140006f62:	call   0x1400095a4
   140006f67:	cmp    rax,0xffffffffffffffff
   140006f6b:	je     0x140006e02
   140006f71:	mov    ecx,DWORD PTR [rbx]
   140006f73:	lea    rdx,[rbp-0x38]
   140006f77:	mov    r8d,0x3
   140006f7d:	call   0x140004edc
   140006f82:	cmp    eax,0xffffffff
   140006f85:	je     0x140006e02
   140006f8b:	cmp    eax,r13d
   140006f8e:	je     0x140006fab
   140006f90:	cmp    eax,0x3
   140006f93:	jne    0x140006ff6
   140006f95:	cmp    DWORD PTR [rbp-0x38],0xbfbbef
   140006f9c:	jne    0x140006fab
   140006f9e:	lea    r8d,[rax-0x2]
   140006fa2:	mov    BYTE PTR [rbp+0x58],r8b
   140006fa6:	jmp    0x14000708a
   140006fab:	movzx  eax,WORD PTR [rbp-0x38]
   140006faf:	cmp    eax,0xfffe
   140006fb4:	jne    0x140006fd0
   140006fb6:	mov    ecx,DWORD PTR [rbx]
   140006fb8:	call   0x140005dd8
   140006fbd:	call   0x140003564
   140006fc2:	mov    ebx,0x16
   140006fc7:	mov    DWORD PTR [rax],ebx
   140006fc9:	mov    edi,ebx
   140006fcb:	jmp    0x1400071a4
   140006fd0:	cmp    eax,0xfeff
   140006fd5:	jne    0x140006ff6
   140006fd7:	mov    ecx,DWORD PTR [rbx]
   140006fd9:	xor    r8d,r8d
   140006fdc:	mov    edx,r13d
   140006fdf:	call   0x140005aa0
   140006fe4:	cmp    eax,0xffffffff
   140006fe7:	je     0x140006e02
   140006fed:	mov    BYTE PTR [rbp+0x58],r13b
   140006ff1:	jmp    0x140007084
   140006ff6:	mov    ecx,DWORD PTR [rbx]
   140006ff8:	xor    r8d,r8d
   140006ffb:	xor    edx,edx
   140006ffd:	call   0x140005aa0
   140007002:	cmp    eax,0xffffffff
   140007005:	jmp    0x140007044
   140007007:	test   r12d,r12d
   14000700a:	je     0x140007084
   14000700c:	cmp    r12d,r13d
   14000700f:	jbe    0x140006f27
   140007015:	cmp    r12d,0x4
   140007019:	ja     0x140006f1d
   14000701f:	mov    ecx,DWORD PTR [rbx]
   140007021:	mov    r8d,r13d
   140007024:	xor    edx,edx
   140007026:	call   0x1400095a4
   14000702b:	test   rax,rax
   14000702e:	je     0x140006f27
   140007034:	mov    ecx,DWORD PTR [rbx]
   140007036:	xor    r8d,r8d
   140007039:	xor    edx,edx
   14000703b:	call   0x1400095a4
   140007040:	cmp    rax,0xffffffffffffffff
   140007044:	jne    0x140007084
   140007046:	jmp    0x140006e02
   14000704b:	mov    DWORD PTR [rbp-0x38],0xbfbbef
   140007052:	mov    r13d,0x3
   140007058:	mov    ecx,DWORD PTR [rbx]
   14000705a:	movsxd rax,r12d
   14000705d:	mov    r8d,r13d
   140007060:	lea    rdx,[rbp+rax*1-0x38]
   140007065:	sub    r8d,r12d
   140007068:	call   0x140009e80
   14000706d:	cmp    eax,0xffffffff
   140007070:	je     0x140006e02
   140007076:	add    r12d,eax
   140007079:	cmp    r13d,r12d
   14000707c:	jg     0x140007058
   14000707e:	jmp    0x140007084
   140007080:	mov    r15d,DWORD PTR [rbp-0x40]
   140007084:	mov    r8d,0x1
   14000708a:	movsxd rcx,DWORD PTR [rbx]
   14000708d:	mov    r12b,BYTE PTR [rbp+0x58]
   140007091:	mov    rax,rcx
   140007094:	and    ecx,0x1f
   140007097:	and    r12b,0x7f
   14000709b:	sar    rax,0x5
   14000709f:	imul   rcx,rcx,0x58
   1400070a3:	mov    rax,QWORD PTR [r14+rax*8]
   1400070a7:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   1400070ac:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   1400070b1:	movsxd rdx,DWORD PTR [rbx]
   1400070b4:	mov    rax,rdx
   1400070b7:	and    edx,0x1f
   1400070ba:	sar    rax,0x5
   1400070be:	imul   rdx,rdx,0x58
   1400070c2:	mov    rcx,QWORD PTR [r14+rax*8]
   1400070c6:	mov    eax,esi
   1400070c8:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   1400070cd:	shr    eax,0x10
   1400070d0:	shl    al,0x7
   1400070d3:	or     BYTE PTR [rcx+rdx*1+0x38],al
   1400070d7:	cmp    BYTE PTR [rbp-0x30],dil
   1400070db:	jne    0x1400070fd
   1400070dd:	test   sil,0x8
   1400070e1:	je     0x1400070fd
   1400070e3:	movsxd rcx,DWORD PTR [rbx]
   1400070e6:	mov    rax,rcx
   1400070e9:	and    ecx,0x1f
   1400070ec:	sar    rax,0x5
   1400070f0:	imul   rcx,rcx,0x58
   1400070f4:	mov    rax,QWORD PTR [r14+rax*8]
   1400070f8:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   1400070fd:	mov    ecx,0xc0000000
   140007102:	mov    eax,r15d
   140007105:	and    eax,ecx
   140007107:	cmp    eax,ecx
   140007109:	jne    0x1400071a4
   14000710f:	test   r8b,sil
   140007112:	je     0x1400071a4
   140007118:	mov    rcx,QWORD PTR [rbp-0x20]
   14000711c:	call   QWORD PTR [rip+0x6f7e]        # 0x14000e0a0
   140007122:	mov    eax,DWORD PTR [rbp-0x34]
   140007125:	mov    r8d,DWORD PTR [rbp-0x3c]
   140007129:	mov    rcx,QWORD PTR [rbp+0x50]
   14000712d:	mov    QWORD PTR [rsp+0x30],rdi
   140007132:	mov    DWORD PTR [rsp+0x28],eax
   140007136:	btr    r15d,0x1f
   14000713b:	lea    r9,[rbp-0x18]
   14000713f:	mov    DWORD PTR [rsp+0x20],0x3
   140007147:	mov    edx,r15d
   14000714a:	call   QWORD PTR [rip+0x70b8]        # 0x14000e208
   140007150:	cmp    rax,0xffffffffffffffff
   140007154:	jne    0x14000718b
   140007156:	call   QWORD PTR [rip+0x6f1c]        # 0x14000e078
   14000715c:	mov    ecx,eax
   14000715e:	call   0x1400035a4
   140007163:	movsxd r11,DWORD PTR [rbx]
   140007166:	mov    rax,r11
   140007169:	and    r11d,0x1f
   14000716d:	sar    rax,0x5
   140007171:	imul   r11,r11,0x58
   140007175:	mov    rax,QWORD PTR [r14+rax*8]
   140007179:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14000717f:	mov    ecx,DWORD PTR [rbx]
   140007181:	call   0x14000b170
   140007186:	jmp    0x140006cfd
   14000718b:	movsxd rdx,DWORD PTR [rbx]
   14000718e:	mov    rcx,rdx
   140007191:	and    edx,0x1f
   140007194:	sar    rcx,0x5
   140007198:	imul   rdx,rdx,0x58
   14000719c:	mov    rcx,QWORD PTR [r14+rcx*8]
   1400071a0:	mov    QWORD PTR [rdx+rcx*1],rax
   1400071a4:	mov    eax,edi
   1400071a6:	jmp    0x140006ad8
   1400071ab:	xor    r9d,r9d
   1400071ae:	xor    r8d,r8d
   1400071b1:	xor    edx,edx
   1400071b3:	xor    ecx,ecx
   1400071b5:	mov    QWORD PTR [rsp+0x20],rdi
   1400071ba:	call   0x140003458
   1400071bf:	int3   
   1400071c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071c5:	push   rdi
   1400071c6:	sub    rsp,0x40
   1400071ca:	and    DWORD PTR [rsp+0x30],0x0
   1400071cf:	xor    eax,eax
   1400071d1:	mov    rdi,QWORD PTR [rsp+0x70]
   1400071d6:	test   rdi,rdi
   1400071d9:	setne  al
   1400071dc:	test   eax,eax
   1400071de:	jne    0x1400071f8
   1400071e0:	call   0x140003564
   1400071e5:	mov    ebx,0x16
   1400071ea:	mov    DWORD PTR [rax],ebx
   1400071ec:	call   0x1400034fc
   1400071f1:	mov    eax,ebx
   1400071f3:	jmp    0x140007287
   1400071f8:	or     DWORD PTR [rdi],0xffffffff
   1400071fb:	xor    eax,eax
   1400071fd:	test   rcx,rcx
   140007200:	setne  al
   140007203:	test   eax,eax
   140007205:	je     0x1400071e0
   140007207:	cmp    DWORD PTR [rsp+0x78],0x0
   14000720c:	je     0x140007221
   14000720e:	test   r9d,0xfffffe7f
   140007215:	mov    eax,0x0
   14000721a:	sete   al
   14000721d:	test   eax,eax
   14000721f:	je     0x1400071e0
   140007221:	mov    DWORD PTR [rsp+0x28],r9d
   140007226:	mov    DWORD PTR [rsp+0x20],r8d
   14000722b:	mov    r9d,edx
   14000722e:	mov    r8,rcx
   140007231:	mov    rdx,rdi
   140007234:	lea    rcx,[rsp+0x30]
   140007239:	call   0x140006a18
   14000723e:	mov    ebx,eax
   140007240:	mov    DWORD PTR [rsp+0x34],eax
   140007244:	cmp    DWORD PTR [rsp+0x30],0x0
   140007249:	je     0x140007277
   14000724b:	test   eax,eax
   14000724d:	je     0x140007270
   14000724f:	movsxd rcx,DWORD PTR [rdi]
   140007252:	mov    rax,rcx
   140007255:	sar    rax,0x5
   140007259:	lea    rdx,[rip+0xd3c0]        # 0x140014620
   140007260:	and    ecx,0x1f
   140007263:	imul   rcx,rcx,0x58
   140007267:	mov    rax,QWORD PTR [rdx+rax*8]
   14000726b:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140007270:	mov    ecx,DWORD PTR [rdi]
   140007272:	call   0x14000b338
   140007277:	test   ebx,ebx
   140007279:	je     0x1400071f1
   14000727f:	or     DWORD PTR [rdi],0xffffffff
   140007282:	jmp    0x1400071f1
   140007287:	mov    rbx,QWORD PTR [rsp+0x50]
   14000728c:	add    rsp,0x40
   140007290:	pop    rdi
   140007291:	ret    
   140007292:	int3   
   140007293:	int3   
   140007294:	sub    rsp,0x38
   140007298:	mov    eax,r9d
   14000729b:	mov    r9d,DWORD PTR [rsp+0x60]
   1400072a0:	mov    r10d,r8d
   1400072a3:	mov    r11,rdx
   1400072a6:	mov    DWORD PTR [rsp+0x28],0x1
   1400072ae:	mov    QWORD PTR [rsp+0x20],rcx
   1400072b3:	mov    r8d,eax
   1400072b6:	mov    edx,r10d
   1400072b9:	mov    rcx,r11
   1400072bc:	call   0x1400071c0
   1400072c1:	add    rsp,0x38
   1400072c5:	ret    
   1400072c6:	int3   
   1400072c7:	int3   
   1400072c8:	mov    rax,rsp
   1400072cb:	mov    QWORD PTR [rax+0x8],rbx
   1400072cf:	mov    QWORD PTR [rax+0x10],rbp
   1400072d3:	mov    QWORD PTR [rax+0x18],rsi
   1400072d7:	mov    QWORD PTR [rax+0x20],rdi
   1400072db:	push   r12
   1400072dd:	sub    rsp,0x40
   1400072e1:	xor    r12d,r12d
   1400072e4:	mov    rbp,r8
   1400072e7:	mov    rdi,rdx
   1400072ea:	mov    rsi,rcx
   1400072ed:	mov    eax,r12d
   1400072f0:	test   r8,r8
   1400072f3:	je     0x1400073c3
   1400072f9:	test   rcx,rcx
   1400072fc:	jne    0x140007318
   1400072fe:	call   0x140003564
   140007303:	mov    DWORD PTR [rax],0x16
   140007309:	call   0x1400034fc
   14000730e:	mov    eax,0x7fffffff
   140007313:	jmp    0x1400073c3
   140007318:	test   rdx,rdx
   14000731b:	je     0x1400072fe
   14000731d:	lea    rcx,[rsp+0x20]
   140007322:	mov    rdx,r9
   140007325:	call   0x140004978
   14000732a:	mov    r11,QWORD PTR [rsp+0x20]
   14000732f:	cmp    DWORD PTR [r11+0x14],r12d
   140007333:	jne    0x140007374
   140007335:	sub    rsi,rdi
   140007338:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14000733c:	cmp    bx,0x41
   140007340:	jb     0x14000734c
   140007342:	cmp    bx,0x5a
   140007346:	ja     0x14000734c
   140007348:	add    bx,0x20
   14000734c:	movzx  eax,WORD PTR [rdi]
   14000734f:	cmp    ax,0x41
   140007353:	jb     0x14000735f
   140007355:	cmp    ax,0x5a
   140007359:	ja     0x14000735f
   14000735b:	add    ax,0x20
   14000735f:	add    rdi,0x2
   140007363:	dec    rbp
   140007366:	je     0x1400073a8
   140007368:	test   bx,bx
   14000736b:	je     0x1400073a8
   14000736d:	cmp    bx,ax
   140007370:	je     0x140007338
   140007372:	jmp    0x1400073a8
   140007374:	movzx  ecx,WORD PTR [rsi]
   140007377:	lea    rdx,[rsp+0x20]
   14000737c:	call   0x14000baa0
   140007381:	movzx  ecx,WORD PTR [rdi]
   140007384:	lea    rdx,[rsp+0x20]
   140007389:	movzx  ebx,ax
   14000738c:	call   0x14000baa0
   140007391:	add    rsi,0x2
   140007395:	add    rdi,0x2
   140007399:	dec    rbp
   14000739c:	je     0x1400073a8
   14000739e:	test   bx,bx
   1400073a1:	je     0x1400073a8
   1400073a3:	cmp    bx,ax
   1400073a6:	je     0x140007374
   1400073a8:	movzx  ecx,ax
   1400073ab:	movzx  eax,bx
   1400073ae:	sub    eax,ecx
   1400073b0:	cmp    BYTE PTR [rsp+0x38],r12b
   1400073b5:	je     0x1400073c3
   1400073b7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400073bc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400073c3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400073c8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400073cd:	mov    rsi,QWORD PTR [rsp+0x60]
   1400073d2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400073d7:	add    rsp,0x40
   1400073db:	pop    r12
   1400073dd:	ret    
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	sub    rsp,0x28
   1400073e4:	xor    eax,eax
   1400073e6:	mov    r10,rdx
   1400073e9:	mov    r11,rcx
   1400073ec:	cmp    DWORD PTR [rip+0xcfde],eax        # 0x1400143d0
   1400073f2:	jne    0x14000746b
   1400073f4:	test   r8,r8
   1400073f7:	je     0x140007473
   1400073f9:	test   rcx,rcx
   1400073fc:	jne    0x140007418
   1400073fe:	call   0x140003564
   140007403:	mov    DWORD PTR [rax],0x16
   140007409:	call   0x1400034fc
   14000740e:	mov    eax,0x7fffffff
   140007413:	add    rsp,0x28
   140007417:	ret    
   140007418:	test   rdx,rdx
   14000741b:	je     0x1400073fe
   14000741d:	sub    r11,rdx
   140007420:	movzx  ecx,WORD PTR [r11+r10*1]
   140007425:	cmp    cx,0x41
   140007429:	jb     0x140007435
   14000742b:	cmp    cx,0x5a
   14000742f:	ja     0x140007435
   140007431:	add    cx,0x20
   140007435:	movzx  edx,WORD PTR [r10]
   140007439:	cmp    dx,0x41
   14000743d:	jb     0x140007449
   14000743f:	cmp    dx,0x5a
   140007443:	ja     0x140007449
   140007445:	add    dx,0x20
   140007449:	add    r10,0x2
   14000744d:	dec    r8
   140007450:	je     0x14000745c
   140007452:	test   cx,cx
   140007455:	je     0x14000745c
   140007457:	cmp    cx,dx
   14000745a:	je     0x140007420
   14000745c:	movzx  eax,dx
   14000745f:	movzx  ecx,cx
   140007462:	sub    ecx,eax
   140007464:	mov    eax,ecx
   140007466:	add    rsp,0x28
   14000746a:	ret    
   14000746b:	xor    r9d,r9d
   14000746e:	call   0x1400072c8
   140007473:	add    rsp,0x28
   140007477:	ret    
   140007478:	test   r8,r8
   14000747b:	jne    0x140007495
   14000747d:	xor    eax,eax
   14000747f:	ret    
   140007480:	movzx  eax,WORD PTR [rcx]
   140007483:	test   ax,ax
   140007486:	je     0x14000749a
   140007488:	cmp    ax,WORD PTR [rdx]
   14000748b:	jne    0x14000749a
   14000748d:	add    rcx,0x2
   140007491:	add    rdx,0x2
   140007495:	dec    r8
   140007498:	jne    0x140007480
   14000749a:	movzx  eax,WORD PTR [rcx]
   14000749d:	movzx  ecx,WORD PTR [rdx]
   1400074a0:	sub    eax,ecx
   1400074a2:	ret    
   1400074a3:	int3   
   1400074a4:	rex push rbx
   1400074a6:	sub    rsp,0x20
   1400074aa:	mov    r11d,DWORD PTR [r8]
   1400074ad:	mov    rbx,rdx
   1400074b0:	mov    r9,rcx
   1400074b3:	and    r11d,0xfffffff8
   1400074b7:	test   BYTE PTR [r8],0x4
   1400074bb:	mov    r10,rcx
   1400074be:	je     0x1400074d3
   1400074c0:	mov    eax,DWORD PTR [r8+0x8]
   1400074c4:	movsxd r10,DWORD PTR [r8+0x4]
   1400074c8:	neg    eax
   1400074ca:	add    r10,rcx
   1400074cd:	movsxd rcx,eax
   1400074d0:	and    r10,rcx
   1400074d3:	movsxd rax,r11d
   1400074d6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400074da:	mov    rax,QWORD PTR [rbx+0x10]
   1400074de:	mov    ecx,DWORD PTR [rax+0x8]
   1400074e1:	add    rcx,QWORD PTR [rbx+0x8]
   1400074e5:	test   BYTE PTR [rcx+0x3],0xf
   1400074e9:	je     0x1400074f7
   1400074eb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400074ef:	and    eax,0xfffffff0
   1400074f2:	cdqe   
   1400074f4:	add    r9,rax
   1400074f7:	xor    r9,rdx
   1400074fa:	mov    rcx,r9
   1400074fd:	add    rsp,0x20
   140007501:	pop    rbx
   140007502:	jmp    0x140001980
   140007507:	int3   
   140007508:	sub    rsp,0x28
   14000750c:	mov    r8,QWORD PTR [r9+0x38]
   140007510:	mov    rcx,rdx
   140007513:	mov    rdx,r9
   140007516:	call   0x1400074a4
   14000751b:	mov    eax,0x1
   140007520:	add    rsp,0x28
   140007524:	ret    
   140007525:	int3   
   140007526:	int3   
   140007527:	int3   
   140007528:	sub    rsp,0x28
   14000752c:	call   0x140003918
   140007531:	test   rax,rax
   140007534:	je     0x140007540
   140007536:	mov    ecx,0x16
   14000753b:	call   0x140003928
   140007540:	test   BYTE PTR [rip+0xb411],0x2        # 0x140012958
   140007547:	je     0x14000755d
   140007549:	mov    r8d,0x1
   14000754f:	mov    edx,0x40000015
   140007554:	lea    ecx,[r8+0x2]
   140007558:	call   0x14000330c
   14000755d:	mov    ecx,0x3
   140007562:	call   0x140001e60
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	int3   
   14000756d:	int3   
   14000756e:	int3   
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007580:	mov    r11,rcx
   140007583:	sub    rdx,rcx
   140007586:	jb     0x14000772a
   14000758c:	cmp    r8,0x8
   140007590:	jb     0x1400075f3
   140007592:	test   cl,0x7
   140007595:	je     0x1400075cd
   140007597:	test   cl,0x1
   14000759a:	je     0x1400075a7
   14000759c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000759f:	dec    r8
   1400075a2:	mov    BYTE PTR [rcx],al
   1400075a4:	inc    rcx
   1400075a7:	test   cl,0x2
   1400075aa:	je     0x1400075bb
   1400075ac:	mov    ax,WORD PTR [rdx+rcx*1]
   1400075b0:	sub    r8,0x2
   1400075b4:	mov    WORD PTR [rcx],ax
   1400075b7:	add    rcx,0x2
   1400075bb:	test   cl,0x4
   1400075be:	je     0x1400075cd
   1400075c0:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400075c3:	sub    r8,0x4
   1400075c7:	mov    DWORD PTR [rcx],eax
   1400075c9:	add    rcx,0x4
   1400075cd:	mov    r9,r8
   1400075d0:	shr    r9,0x5
   1400075d4:	jne    0x140007627
   1400075d6:	mov    r9,r8
   1400075d9:	shr    r9,0x3
   1400075dd:	je     0x1400075f3
   1400075df:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400075e3:	mov    QWORD PTR [rcx],rax
   1400075e6:	add    rcx,0x8
   1400075ea:	dec    r9
   1400075ed:	jne    0x1400075df
   1400075ef:	and    r8,0x7
   1400075f3:	test   r8,r8
   1400075f6:	jne    0x140007600
   1400075f8:	mov    rax,r11
   1400075fb:	ret    
   1400075fc:	nop    DWORD PTR [rax+0x0]
   140007600:	mov    al,BYTE PTR [rdx+rcx*1]
   140007603:	mov    BYTE PTR [rcx],al
   140007605:	inc    rcx
   140007608:	dec    r8
   14000760b:	jne    0x140007600
   14000760d:	mov    rax,r11
   140007610:	ret    
   140007611:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007620:	data16 data16 xchg ax,ax
   140007624:	data16 xchg ax,ax
   140007627:	cmp    r9,0x2000
   14000762e:	jae    0x140007672
   140007630:	mov    rax,QWORD PTR [rdx+rcx*1]
   140007634:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140007639:	add    rcx,0x20
   14000763d:	mov    QWORD PTR [rcx-0x20],rax
   140007641:	mov    QWORD PTR [rcx-0x18],r10
   140007645:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000764a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000764f:	dec    r9
   140007652:	mov    QWORD PTR [rcx-0x10],rax
   140007656:	mov    QWORD PTR [rcx-0x8],r10
   14000765a:	jne    0x140007630
   14000765c:	and    r8,0x1f
   140007660:	jmp    0x1400075d6
   140007665:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007670:	xchg   ax,ax
   140007672:	cmp    rdx,0x1000
   140007679:	jb     0x140007630
   14000767b:	mov    eax,0x20
   140007680:	prefetchnta BYTE PTR [rdx+rcx*1]
   140007684:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140007689:	add    rcx,0x80
   140007690:	dec    eax
   140007692:	jne    0x140007680
   140007694:	sub    rcx,0x1000
   14000769b:	mov    eax,0x40
   1400076a0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400076a4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400076a9:	movnti QWORD PTR [rcx],r9
   1400076ad:	movnti QWORD PTR [rcx+0x8],r10
   1400076b2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400076b7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400076bc:	movnti QWORD PTR [rcx+0x10],r9
   1400076c1:	movnti QWORD PTR [rcx+0x18],r10
   1400076c6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400076cb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400076d0:	add    rcx,0x40
   1400076d4:	movnti QWORD PTR [rcx-0x20],r9
   1400076d9:	movnti QWORD PTR [rcx-0x18],r10
   1400076de:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400076e3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400076e8:	dec    eax
   1400076ea:	movnti QWORD PTR [rcx-0x10],r9
   1400076ef:	movnti QWORD PTR [rcx-0x8],r10
   1400076f4:	jne    0x1400076a0
   1400076f6:	sub    r8,0x1000
   1400076fd:	cmp    r8,0x1000
   140007704:	jae    0x14000767b
   14000770a:	lock or BYTE PTR [rsp],0x0
   14000770f:	jmp    0x1400075cd
   140007714:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007720:	data16 data16 xchg ax,ax
   140007724:	data16 data16 xchg ax,ax
   140007728:	xchg   ax,ax
   14000772a:	add    rcx,r8
   14000772d:	cmp    r8,0x8
   140007731:	jb     0x140007794
   140007733:	test   cl,0x7
   140007736:	je     0x14000776e
   140007738:	test   cl,0x1
   14000773b:	je     0x140007748
   14000773d:	dec    rcx
   140007740:	mov    al,BYTE PTR [rdx+rcx*1]
   140007743:	dec    r8
   140007746:	mov    BYTE PTR [rcx],al
   140007748:	test   cl,0x2
   14000774b:	je     0x14000775c
   14000774d:	sub    rcx,0x2
   140007751:	mov    ax,WORD PTR [rdx+rcx*1]
   140007755:	sub    r8,0x2
   140007759:	mov    WORD PTR [rcx],ax
   14000775c:	test   cl,0x4
   14000775f:	je     0x14000776e
   140007761:	sub    rcx,0x4
   140007765:	mov    eax,DWORD PTR [rdx+rcx*1]
   140007768:	sub    r8,0x4
   14000776c:	mov    DWORD PTR [rcx],eax
   14000776e:	mov    r9,r8
   140007771:	shr    r9,0x5
   140007775:	jne    0x1400077c7
   140007777:	mov    r9,r8
   14000777a:	shr    r9,0x3
   14000777e:	je     0x140007794
   140007780:	sub    rcx,0x8
   140007784:	mov    rax,QWORD PTR [rdx+rcx*1]
   140007788:	dec    r9
   14000778b:	mov    QWORD PTR [rcx],rax
   14000778e:	jne    0x140007780
   140007790:	and    r8,0x7
   140007794:	test   r8,r8
   140007797:	jne    0x1400077a0
   140007799:	mov    rax,r11
   14000779c:	ret    
   14000779d:	nop    DWORD PTR [rax]
   1400077a0:	dec    rcx
   1400077a3:	mov    al,BYTE PTR [rdx+rcx*1]
   1400077a6:	dec    r8
   1400077a9:	mov    BYTE PTR [rcx],al
   1400077ab:	jne    0x1400077a0
   1400077ad:	mov    rax,r11
   1400077b0:	ret    
   1400077b1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400077c0:	data16 data16 xchg ax,ax
   1400077c4:	data16 xchg ax,ax
   1400077c7:	cmp    r9,0x2000
   1400077ce:	jae    0x140007812
   1400077d0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   1400077d5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400077da:	sub    rcx,0x20
   1400077de:	mov    QWORD PTR [rcx+0x18],rax
   1400077e2:	mov    QWORD PTR [rcx+0x10],r10
   1400077e6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400077eb:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400077ef:	dec    r9
   1400077f2:	mov    QWORD PTR [rcx+0x8],rax
   1400077f6:	mov    QWORD PTR [rcx],r10
   1400077f9:	jne    0x1400077d0
   1400077fb:	and    r8,0x1f
   1400077ff:	jmp    0x140007777
   140007804:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007810:	xchg   ax,ax
   140007812:	cmp    rdx,0xfffffffffffff000
   140007819:	ja     0x1400077d0
   14000781b:	mov    eax,0x20
   140007820:	sub    rcx,0x80
   140007827:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000782b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140007830:	dec    eax
   140007832:	jne    0x140007820
   140007834:	add    rcx,0x1000
   14000783b:	mov    eax,0x40
   140007840:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140007845:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000784a:	movnti QWORD PTR [rcx-0x8],r9
   14000784f:	movnti QWORD PTR [rcx-0x10],r10
   140007854:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140007859:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000785e:	movnti QWORD PTR [rcx-0x18],r9
   140007863:	movnti QWORD PTR [rcx-0x20],r10
   140007868:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000786d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140007872:	sub    rcx,0x40
   140007876:	movnti QWORD PTR [rcx+0x18],r9
   14000787b:	movnti QWORD PTR [rcx+0x10],r10
   140007880:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140007885:	mov    r10,QWORD PTR [rdx+rcx*1]
   140007889:	dec    eax
   14000788b:	movnti QWORD PTR [rcx+0x8],r9
   140007890:	movnti QWORD PTR [rcx],r10
   140007894:	jne    0x140007840
   140007896:	sub    r8,0x1000
   14000789d:	cmp    r8,0x1000
   1400078a4:	jae    0x14000781b
   1400078aa:	lock or BYTE PTR [rsp],0x0
   1400078af:	jmp    0x14000776e
   1400078b4:	lock inc DWORD PTR [rcx]
   1400078b7:	mov    rax,QWORD PTR [rcx+0x110]
   1400078be:	test   rax,rax
   1400078c1:	je     0x1400078c6
   1400078c3:	lock inc DWORD PTR [rax]
   1400078c6:	mov    rax,QWORD PTR [rcx+0x120]
   1400078cd:	test   rax,rax
   1400078d0:	je     0x1400078d5
   1400078d2:	lock inc DWORD PTR [rax]
   1400078d5:	mov    rax,QWORD PTR [rcx+0x118]
   1400078dc:	test   rax,rax
   1400078df:	je     0x1400078e4
   1400078e1:	lock inc DWORD PTR [rax]
   1400078e4:	mov    rax,QWORD PTR [rcx+0x130]
   1400078eb:	test   rax,rax
   1400078ee:	je     0x1400078f3
   1400078f0:	lock inc DWORD PTR [rax]
   1400078f3:	lea    rax,[rcx+0x58]
   1400078f7:	mov    r8d,0x6
   1400078fd:	lea    rdx,[rip+0xb05c]        # 0x140012960
   140007904:	cmp    QWORD PTR [rax-0x10],rdx
   140007908:	je     0x140007915
   14000790a:	mov    rdx,QWORD PTR [rax]
   14000790d:	test   rdx,rdx
   140007910:	je     0x140007915
   140007912:	lock inc DWORD PTR [rdx]
   140007915:	cmp    QWORD PTR [rax-0x8],0x0
   14000791a:	je     0x140007928
   14000791c:	mov    rdx,QWORD PTR [rax+0x8]
   140007920:	test   rdx,rdx
   140007923:	je     0x140007928
   140007925:	lock inc DWORD PTR [rdx]
   140007928:	add    rax,0x20
   14000792c:	dec    r8
   14000792f:	jne    0x1400078fd
   140007931:	mov    rax,QWORD PTR [rcx+0x158]
   140007938:	lock inc DWORD PTR [rax+0x160]
   14000793f:	ret    
   140007940:	test   rcx,rcx
   140007943:	je     0x1400079e0
   140007949:	or     r9d,0xffffffff
   14000794d:	lock add DWORD PTR [rcx],r9d
   140007951:	mov    rax,QWORD PTR [rcx+0x110]
   140007958:	test   rax,rax
   14000795b:	je     0x140007961
   14000795d:	lock add DWORD PTR [rax],r9d
   140007961:	mov    rax,QWORD PTR [rcx+0x120]
   140007968:	test   rax,rax
   14000796b:	je     0x140007971
   14000796d:	lock add DWORD PTR [rax],r9d
   140007971:	mov    rax,QWORD PTR [rcx+0x118]
   140007978:	test   rax,rax
   14000797b:	je     0x140007981
   14000797d:	lock add DWORD PTR [rax],r9d
   140007981:	mov    rax,QWORD PTR [rcx+0x130]
   140007988:	test   rax,rax
   14000798b:	je     0x140007991
   14000798d:	lock add DWORD PTR [rax],r9d
   140007991:	lea    rax,[rcx+0x58]
   140007995:	mov    r8d,0x6
   14000799b:	lea    rdx,[rip+0xafbe]        # 0x140012960
   1400079a2:	cmp    QWORD PTR [rax-0x10],rdx
   1400079a6:	je     0x1400079b4
   1400079a8:	mov    rdx,QWORD PTR [rax]
   1400079ab:	test   rdx,rdx
   1400079ae:	je     0x1400079b4
   1400079b0:	lock add DWORD PTR [rdx],r9d
   1400079b4:	cmp    QWORD PTR [rax-0x8],0x0
   1400079b9:	je     0x1400079c8
   1400079bb:	mov    rdx,QWORD PTR [rax+0x8]
   1400079bf:	test   rdx,rdx
   1400079c2:	je     0x1400079c8
   1400079c4:	lock add DWORD PTR [rdx],r9d
   1400079c8:	add    rax,0x20
   1400079cc:	dec    r8
   1400079cf:	jne    0x14000799b
   1400079d1:	mov    rax,QWORD PTR [rcx+0x158]
   1400079d8:	lock add DWORD PTR [rax+0x160],r9d
   1400079e0:	mov    rax,rcx
   1400079e3:	ret    
   1400079e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400079e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400079ee:	push   rdi
   1400079ef:	sub    rsp,0x20
   1400079f3:	mov    rax,QWORD PTR [rcx+0x128]
   1400079fa:	mov    rbx,rcx
   1400079fd:	test   rax,rax
   140007a00:	je     0x140007a7b
   140007a02:	lea    rcx,[rip+0xb8f7]        # 0x140013300
   140007a09:	cmp    rax,rcx
   140007a0c:	je     0x140007a7b
   140007a0e:	mov    rax,QWORD PTR [rbx+0x110]
   140007a15:	test   rax,rax
   140007a18:	je     0x140007a7b
   140007a1a:	cmp    DWORD PTR [rax],0x0
   140007a1d:	jne    0x140007a7b
   140007a1f:	mov    rcx,QWORD PTR [rbx+0x120]
   140007a26:	test   rcx,rcx
   140007a29:	je     0x140007a41
   140007a2b:	cmp    DWORD PTR [rcx],0x0
   140007a2e:	jne    0x140007a41
   140007a30:	call   0x140001eb4
   140007a35:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a3c:	call   0x14000c03c
   140007a41:	mov    rcx,QWORD PTR [rbx+0x118]
   140007a48:	test   rcx,rcx
   140007a4b:	je     0x140007a63
   140007a4d:	cmp    DWORD PTR [rcx],0x0
   140007a50:	jne    0x140007a63
   140007a52:	call   0x140001eb4
   140007a57:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a5e:	call   0x14000bfd0
   140007a63:	mov    rcx,QWORD PTR [rbx+0x110]
   140007a6a:	call   0x140001eb4
   140007a6f:	mov    rcx,QWORD PTR [rbx+0x128]
   140007a76:	call   0x140001eb4
   140007a7b:	mov    rax,QWORD PTR [rbx+0x130]
   140007a82:	test   rax,rax
   140007a85:	je     0x140007ace
   140007a87:	cmp    DWORD PTR [rax],0x0
   140007a8a:	jne    0x140007ace
   140007a8c:	mov    rcx,QWORD PTR [rbx+0x138]
   140007a93:	sub    rcx,0xfe
   140007a9a:	call   0x140001eb4
   140007a9f:	mov    rcx,QWORD PTR [rbx+0x148]
   140007aa6:	mov    edi,0x80
   140007aab:	sub    rcx,rdi
   140007aae:	call   0x140001eb4
   140007ab3:	mov    rcx,QWORD PTR [rbx+0x150]
   140007aba:	sub    rcx,rdi
   140007abd:	call   0x140001eb4
   140007ac2:	mov    rcx,QWORD PTR [rbx+0x130]
   140007ac9:	call   0x140001eb4
   140007ace:	mov    rcx,QWORD PTR [rbx+0x158]
   140007ad5:	lea    rax,[rip+0xae94]        # 0x140012970
   140007adc:	cmp    rcx,rax
   140007adf:	je     0x140007afb
   140007ae1:	cmp    DWORD PTR [rcx+0x160],0x0
   140007ae8:	jne    0x140007afb
   140007aea:	call   0x14000bbe0
   140007aef:	mov    rcx,QWORD PTR [rbx+0x158]
   140007af6:	call   0x140001eb4
   140007afb:	lea    rdi,[rbx+0x58]
   140007aff:	mov    esi,0x6
   140007b04:	lea    rax,[rip+0xae55]        # 0x140012960
   140007b0b:	cmp    QWORD PTR [rdi-0x10],rax
   140007b0f:	je     0x140007b23
   140007b11:	mov    rcx,QWORD PTR [rdi]
   140007b14:	test   rcx,rcx
   140007b17:	je     0x140007b23
   140007b19:	cmp    DWORD PTR [rcx],0x0
   140007b1c:	jne    0x140007b23
   140007b1e:	call   0x140001eb4
   140007b23:	cmp    QWORD PTR [rdi-0x8],0x0
   140007b28:	je     0x140007b3d
   140007b2a:	mov    rcx,QWORD PTR [rdi+0x8]
   140007b2e:	test   rcx,rcx
   140007b31:	je     0x140007b3d
   140007b33:	cmp    DWORD PTR [rcx],0x0
   140007b36:	jne    0x140007b3d
   140007b38:	call   0x140001eb4
   140007b3d:	add    rdi,0x20
   140007b41:	dec    rsi
   140007b44:	jne    0x140007b04
   140007b46:	mov    rcx,rbx
   140007b49:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b4e:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b53:	add    rsp,0x20
   140007b57:	pop    rdi
   140007b58:	jmp    0x140001eb4
   140007b5d:	int3   
   140007b5e:	int3   
   140007b5f:	int3   
   140007b60:	rex push rbx
   140007b62:	sub    rsp,0x20
   140007b66:	mov    rbx,rdx
   140007b69:	test   rdx,rdx
   140007b6c:	je     0x140007baf
   140007b6e:	test   rcx,rcx
   140007b71:	je     0x140007baf
   140007b73:	mov    r10,QWORD PTR [rcx]
   140007b76:	cmp    r10,rdx
   140007b79:	je     0x140007baa
   140007b7b:	mov    QWORD PTR [rcx],rdx
   140007b7e:	mov    rcx,rdx
   140007b81:	call   0x1400078b4
   140007b86:	test   r10,r10
   140007b89:	je     0x140007baa
   140007b8b:	mov    rcx,r10
   140007b8e:	call   0x140007940
   140007b93:	cmp    DWORD PTR [r10],0x0
   140007b97:	jne    0x140007baa
   140007b99:	lea    rax,[rip+0xb090]        # 0x140012c30
   140007ba0:	cmp    r10,rax
   140007ba3:	je     0x140007baa
   140007ba5:	call   0x1400079e4
   140007baa:	mov    rax,rbx
   140007bad:	jmp    0x140007bb1
   140007baf:	xor    eax,eax
   140007bb1:	add    rsp,0x20
   140007bb5:	pop    rbx
   140007bb6:	ret    
   140007bb7:	int3   
   140007bb8:	rex push rbx
   140007bba:	sub    rsp,0x20
   140007bbe:	call   0x140003d18
   140007bc3:	mov    rbx,rax
   140007bc6:	mov    ecx,DWORD PTR [rax+0xc8]
   140007bcc:	test   DWORD PTR [rip+0xb70e],ecx        # 0x1400132e0
   140007bd2:	je     0x140007bec
   140007bd4:	cmp    QWORD PTR [rax+0xc0],0x0
   140007bdc:	je     0x140007bec
   140007bde:	call   0x140003d18
   140007be3:	mov    rbx,QWORD PTR [rax+0xc0]
   140007bea:	jmp    0x140007c17
   140007bec:	mov    ecx,0xc
   140007bf1:	call   0x140003870
   140007bf6:	nop
   140007bf7:	lea    rcx,[rbx+0xc0]
   140007bfe:	mov    rdx,QWORD PTR [rip+0xb18b]        # 0x140012d90
   140007c05:	call   0x140007b60
   140007c0a:	mov    rbx,rax
   140007c0d:	mov    ecx,0xc
   140007c12:	call   0x140003770
   140007c17:	test   rbx,rbx
   140007c1a:	jne    0x140007c24
   140007c1c:	lea    ecx,[rbx+0x20]
   140007c1f:	call   0x140001e8c
   140007c24:	mov    rax,rbx
   140007c27:	add    rsp,0x20
   140007c2b:	pop    rbx
   140007c2c:	ret    
   140007c2d:	int3   
   140007c2e:	int3   
   140007c2f:	int3   
   140007c30:	mov    QWORD PTR [rsp+0x8],rbx
   140007c35:	mov    QWORD PTR [rsp+0x10],rbp
   140007c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140007c3f:	push   rdi
   140007c40:	sub    rsp,0x20
   140007c44:	lea    rbx,[rcx+0x1c]
   140007c48:	mov    rbp,rcx
   140007c4b:	mov    esi,0x101
   140007c50:	mov    rcx,rbx
   140007c53:	mov    r8d,esi
   140007c56:	xor    edx,edx
   140007c58:	call   0x140004a30
   140007c5d:	xor    r11d,r11d
   140007c60:	lea    rdi,[rbp+0x10]
   140007c64:	lea    ecx,[r11+0x6]
   140007c68:	movzx  eax,r11w
   140007c6c:	mov    DWORD PTR [rbp+0xc],r11d
   140007c70:	mov    QWORD PTR [rbp+0x4],r11
   140007c74:	rep stos WORD PTR es:[rdi],ax
   140007c77:	lea    rdi,[rip+0xb122]        # 0x140012da0
   140007c7e:	sub    rdi,rbp
   140007c81:	mov    al,BYTE PTR [rdi+rbx*1]
   140007c84:	mov    BYTE PTR [rbx],al
   140007c86:	inc    rbx
   140007c89:	dec    rsi
   140007c8c:	jne    0x140007c81
   140007c8e:	lea    rcx,[rbp+0x11d]
   140007c95:	mov    edx,0x100
   140007c9a:	mov    al,BYTE PTR [rcx+rdi*1]
   140007c9d:	mov    BYTE PTR [rcx],al
   140007c9f:	inc    rcx
   140007ca2:	dec    rdx
   140007ca5:	jne    0x140007c9a
   140007ca7:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cac:	mov    rbp,QWORD PTR [rsp+0x38]
   140007cb1:	mov    rsi,QWORD PTR [rsp+0x40]
   140007cb6:	add    rsp,0x20
   140007cba:	pop    rdi
   140007cbb:	ret    
   140007cbc:	mov    rax,rsp
   140007cbf:	mov    QWORD PTR [rax+0x10],rbx
   140007cc3:	mov    QWORD PTR [rax+0x18],rsi
   140007cc7:	mov    QWORD PTR [rax+0x20],rdi
   140007ccb:	push   rbp
   140007ccc:	lea    rbp,[rax-0x488]
   140007cd3:	sub    rsp,0x580
   140007cda:	mov    rax,QWORD PTR [rip+0xa327]        # 0x140012008
   140007ce1:	xor    rax,rsp
   140007ce4:	mov    QWORD PTR [rbp+0x470],rax
   140007ceb:	mov    rsi,rcx
   140007cee:	mov    ecx,DWORD PTR [rcx+0x4]
   140007cf1:	lea    rdx,[rsp+0x50]
   140007cf6:	call   QWORD PTR [rip+0x6514]        # 0x14000e210
   140007cfc:	mov    ebx,0x100
   140007d01:	test   eax,eax
   140007d03:	je     0x140007e45
   140007d09:	xor    eax,eax
   140007d0b:	lea    rcx,[rsp+0x70]
   140007d10:	mov    BYTE PTR [rcx],al
   140007d12:	inc    eax
   140007d14:	inc    rcx
   140007d17:	cmp    eax,ebx
   140007d19:	jb     0x140007d10
   140007d1b:	mov    al,BYTE PTR [rsp+0x56]
   140007d1f:	mov    BYTE PTR [rsp+0x70],0x20
   140007d24:	lea    rdi,[rsp+0x56]
   140007d29:	jmp    0x140007d54
   140007d2b:	movzx  edx,BYTE PTR [rdi+0x1]
   140007d2f:	movzx  r8d,al
   140007d33:	cmp    r8d,edx
   140007d36:	ja     0x140007d4e
   140007d38:	sub    edx,r8d
   140007d3b:	mov    eax,r8d
   140007d3e:	lea    rcx,[rsp+r8*1+0x70]
   140007d43:	lea    r8d,[rdx+0x1]
   140007d47:	mov    dl,0x20
   140007d49:	call   0x140004a30
   140007d4e:	add    rdi,0x2
   140007d52:	mov    al,BYTE PTR [rdi]
   140007d54:	test   al,al
   140007d56:	jne    0x140007d2b
   140007d58:	mov    eax,DWORD PTR [rsi+0xc]
   140007d5b:	and    DWORD PTR [rsp+0x38],0x0
   140007d60:	lea    r8,[rsp+0x70]
   140007d65:	mov    DWORD PTR [rsp+0x30],eax
   140007d69:	mov    eax,DWORD PTR [rsi+0x4]
   140007d6c:	mov    r9d,ebx
   140007d6f:	mov    DWORD PTR [rsp+0x28],eax
   140007d73:	lea    rax,[rbp+0x270]
   140007d7a:	mov    edx,0x1
   140007d7f:	xor    ecx,ecx
   140007d81:	mov    QWORD PTR [rsp+0x20],rax
   140007d86:	call   0x14000c60c
   140007d8b:	and    DWORD PTR [rsp+0x40],0x0
   140007d90:	mov    eax,DWORD PTR [rsi+0x4]
   140007d93:	mov    edx,DWORD PTR [rsi+0xc]
   140007d96:	mov    DWORD PTR [rsp+0x38],eax
   140007d9a:	lea    rax,[rbp+0x70]
   140007d9e:	mov    DWORD PTR [rsp+0x30],ebx
   140007da2:	mov    QWORD PTR [rsp+0x28],rax
   140007da7:	lea    r9,[rsp+0x70]
   140007dac:	mov    r8d,ebx
   140007daf:	xor    ecx,ecx
   140007db1:	mov    DWORD PTR [rsp+0x20],ebx
   140007db5:	call   0x14000c414
   140007dba:	and    DWORD PTR [rsp+0x40],0x0
   140007dbf:	mov    eax,DWORD PTR [rsi+0x4]
   140007dc2:	mov    edx,DWORD PTR [rsi+0xc]
   140007dc5:	mov    DWORD PTR [rsp+0x38],eax
   140007dc9:	lea    rax,[rbp+0x170]
   140007dd0:	mov    DWORD PTR [rsp+0x30],ebx
   140007dd4:	mov    QWORD PTR [rsp+0x28],rax
   140007dd9:	lea    r9,[rsp+0x70]
   140007dde:	mov    r8d,0x200
   140007de4:	xor    ecx,ecx
   140007de6:	mov    DWORD PTR [rsp+0x20],ebx
   140007dea:	call   0x14000c414
   140007def:	lea    rdx,[rbp+0x70]
   140007df3:	lea    r8,[rbp+0x170]
   140007dfa:	sub    rdx,rsi
   140007dfd:	lea    r11,[rbp+0x270]
   140007e04:	lea    rcx,[rsi+0x1d]
   140007e08:	sub    r8,rsi
   140007e0b:	test   BYTE PTR [r11],0x1
   140007e0f:	je     0x140007e1a
   140007e11:	or     BYTE PTR [rcx],0x10
   140007e14:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   140007e18:	jmp    0x140007e28
   140007e1a:	test   BYTE PTR [r11],0x2
   140007e1e:	je     0x140007e30
   140007e20:	or     BYTE PTR [rcx],0x20
   140007e23:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   140007e28:	mov    BYTE PTR [rcx+0x100],al
   140007e2e:	jmp    0x140007e37
   140007e30:	mov    BYTE PTR [rcx+0x100],0x0
   140007e37:	inc    rcx
   140007e3a:	add    r11,0x2
   140007e3e:	dec    rbx
   140007e41:	jne    0x140007e0b
   140007e43:	jmp    0x140007e84
   140007e45:	xor    edx,edx
   140007e47:	lea    rcx,[rsi+0x1d]
   140007e4b:	lea    r8d,[rdx-0x61]
   140007e4f:	lea    eax,[r8+0x20]
   140007e53:	cmp    eax,0x19
   140007e56:	ja     0x140007e60
   140007e58:	or     BYTE PTR [rcx],0x10
   140007e5b:	lea    eax,[rdx+0x20]
   140007e5e:	jmp    0x140007e6c
   140007e60:	cmp    r8d,0x19
   140007e64:	ja     0x140007e74
   140007e66:	or     BYTE PTR [rcx],0x20
   140007e69:	lea    eax,[rdx-0x20]
   140007e6c:	mov    BYTE PTR [rcx+0x100],al
   140007e72:	jmp    0x140007e7b
   140007e74:	mov    BYTE PTR [rcx+0x100],0x0
   140007e7b:	inc    edx
   140007e7d:	inc    rcx
   140007e80:	cmp    edx,ebx
   140007e82:	jb     0x140007e4b
   140007e84:	mov    rcx,QWORD PTR [rbp+0x470]
   140007e8b:	xor    rcx,rsp
   140007e8e:	call   0x140001980
   140007e93:	lea    r11,[rsp+0x580]
   140007e9b:	mov    rbx,QWORD PTR [r11+0x18]
   140007e9f:	mov    rsi,QWORD PTR [r11+0x20]
   140007ea3:	mov    rdi,QWORD PTR [r11+0x28]
   140007ea7:	mov    rsp,r11
   140007eaa:	pop    rbp
   140007eab:	ret    
   140007eac:	mov    QWORD PTR [rsp+0x10],rbx
   140007eb1:	push   rdi
   140007eb2:	sub    rsp,0x20
   140007eb6:	call   0x140003d18
   140007ebb:	mov    rdi,rax
   140007ebe:	mov    ecx,DWORD PTR [rax+0xc8]
   140007ec4:	test   DWORD PTR [rip+0xb416],ecx        # 0x1400132e0
   140007eca:	je     0x140007edf
   140007ecc:	cmp    QWORD PTR [rax+0xc0],0x0
   140007ed4:	je     0x140007edf
   140007ed6:	mov    rbx,QWORD PTR [rax+0xb8]
   140007edd:	jmp    0x140007f4b
   140007edf:	mov    ecx,0xd
   140007ee4:	call   0x140003870
   140007ee9:	nop
   140007eea:	mov    rbx,QWORD PTR [rdi+0xb8]
   140007ef1:	mov    QWORD PTR [rsp+0x30],rbx
   140007ef6:	cmp    rbx,QWORD PTR [rip+0xb2d3]        # 0x1400131d0
   140007efd:	je     0x140007f41
   140007eff:	test   rbx,rbx
   140007f02:	je     0x140007f1f
   140007f04:	lock dec DWORD PTR [rbx]
   140007f07:	jne    0x140007f1f
   140007f09:	lea    rax,[rip+0xae90]        # 0x140012da0
   140007f10:	mov    rcx,QWORD PTR [rsp+0x30]
   140007f15:	cmp    rcx,rax
   140007f18:	je     0x140007f1f
   140007f1a:	call   0x140001eb4
   140007f1f:	mov    rax,QWORD PTR [rip+0xb2aa]        # 0x1400131d0
   140007f26:	mov    QWORD PTR [rdi+0xb8],rax
   140007f2d:	mov    rax,QWORD PTR [rip+0xb29c]        # 0x1400131d0
   140007f34:	mov    QWORD PTR [rsp+0x30],rax
   140007f39:	lock inc DWORD PTR [rax]
   140007f3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f41:	mov    ecx,0xd
   140007f46:	call   0x140003770
   140007f4b:	test   rbx,rbx
   140007f4e:	jne    0x140007f58
   140007f50:	lea    ecx,[rbx+0x20]
   140007f53:	call   0x140001e8c
   140007f58:	mov    rax,rbx
   140007f5b:	mov    rbx,QWORD PTR [rsp+0x38]
   140007f60:	add    rsp,0x20
   140007f64:	pop    rdi
   140007f65:	ret    
   140007f66:	int3   
   140007f67:	int3   
   140007f68:	rex push rbx
   140007f6a:	sub    rsp,0x40
   140007f6e:	mov    ebx,ecx
   140007f70:	lea    rcx,[rsp+0x20]
   140007f75:	xor    edx,edx
   140007f77:	call   0x140004978
   140007f7c:	and    DWORD PTR [rip+0xc3fd],0x0        # 0x140014380
   140007f83:	cmp    ebx,0xfffffffe
   140007f86:	jne    0x140007fad
   140007f88:	mov    DWORD PTR [rip+0xc3ee],0x1        # 0x140014380
   140007f92:	call   QWORD PTR [rip+0x6288]        # 0x14000e220
   140007f98:	cmp    BYTE PTR [rsp+0x38],0x0
   140007f9d:	je     0x140007ff2
   140007f9f:	mov    rcx,QWORD PTR [rsp+0x30]
   140007fa4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007fab:	jmp    0x140007ff2
   140007fad:	cmp    ebx,0xfffffffd
   140007fb0:	jne    0x140007fc4
   140007fb2:	mov    DWORD PTR [rip+0xc3c4],0x1        # 0x140014380
   140007fbc:	call   QWORD PTR [rip+0x6256]        # 0x14000e218
   140007fc2:	jmp    0x140007f98
   140007fc4:	cmp    ebx,0xfffffffc
   140007fc7:	jne    0x140007fdd
   140007fc9:	mov    rax,QWORD PTR [rsp+0x20]
   140007fce:	mov    DWORD PTR [rip+0xc3a8],0x1        # 0x140014380
   140007fd8:	mov    eax,DWORD PTR [rax+0x4]
   140007fdb:	jmp    0x140007f98
   140007fdd:	cmp    BYTE PTR [rsp+0x38],0x0
   140007fe2:	je     0x140007ff0
   140007fe4:	mov    rax,QWORD PTR [rsp+0x30]
   140007fe9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140007ff0:	mov    eax,ebx
   140007ff2:	add    rsp,0x40
   140007ff6:	pop    rbx
   140007ff7:	ret    
   140007ff8:	mov    QWORD PTR [rsp+0x18],rbx
   140007ffd:	push   rbp
   140007ffe:	push   rsi
   140007fff:	push   rdi
   140008000:	push   r12
   140008002:	push   r13
   140008004:	sub    rsp,0x40
   140008008:	mov    rax,QWORD PTR [rip+0x9ff9]        # 0x140012008
   14000800f:	xor    rax,rsp
   140008012:	mov    QWORD PTR [rsp+0x38],rax
   140008017:	mov    rsi,rdx
   14000801a:	call   0x140007f68
   14000801f:	xor    ebx,ebx
   140008021:	mov    edi,eax
   140008023:	test   eax,eax
   140008025:	jne    0x140008034
   140008027:	mov    rcx,rsi
   14000802a:	call   0x140007c30
   14000802f:	jmp    0x14000824a
   140008034:	lea    r13,[rip+0xb1a5]        # 0x1400131e0
   14000803b:	mov    ecx,ebx
   14000803d:	mov    rbp,rbx
   140008040:	mov    rax,r13
   140008043:	mov    r12d,0x1
   140008049:	cmp    DWORD PTR [rax],edi
   14000804b:	je     0x140008177
   140008051:	add    ecx,r12d
   140008054:	add    rbp,r12
   140008057:	add    rax,0x30
   14000805b:	cmp    ecx,0x5
   14000805e:	jb     0x140008049
   140008060:	cmp    edi,0xfde8
   140008066:	je     0x14000816f
   14000806c:	cmp    edi,0xfde9
   140008072:	je     0x14000816f
   140008078:	movzx  ecx,di
   14000807b:	call   QWORD PTR [rip+0x61a7]        # 0x14000e228
   140008081:	test   eax,eax
   140008083:	je     0x14000816f
   140008089:	lea    rdx,[rsp+0x20]
   14000808e:	mov    ecx,edi
   140008090:	call   QWORD PTR [rip+0x617a]        # 0x14000e210
   140008096:	test   eax,eax
   140008098:	je     0x140008163
   14000809e:	lea    rcx,[rsi+0x1c]
   1400080a2:	xor    edx,edx
   1400080a4:	mov    r8d,0x101
   1400080aa:	call   0x140004a30
   1400080af:	mov    DWORD PTR [rsi+0x4],edi
   1400080b2:	mov    DWORD PTR [rsi+0xc],ebx
   1400080b5:	cmp    DWORD PTR [rsp+0x20],r12d
   1400080ba:	jbe    0x14000814c
   1400080c0:	lea    rax,[rsp+0x26]
   1400080c5:	cmp    BYTE PTR [rsp+0x26],bl
   1400080c9:	je     0x1400080f8
   1400080cb:	cmp    BYTE PTR [rax+0x1],bl
   1400080ce:	je     0x1400080f8
   1400080d0:	movzx  edi,BYTE PTR [rax]
   1400080d3:	movzx  ecx,BYTE PTR [rax+0x1]
   1400080d7:	cmp    edi,ecx
   1400080d9:	ja     0x1400080f0
   1400080db:	sub    ecx,edi
   1400080dd:	lea    rdx,[rdi+rsi*1+0x1d]
   1400080e2:	add    ecx,r12d
   1400080e5:	or     BYTE PTR [rdx],0x4
   1400080e8:	add    rdx,r12
   1400080eb:	sub    rcx,r12
   1400080ee:	jne    0x1400080e5
   1400080f0:	add    rax,0x2
   1400080f4:	cmp    BYTE PTR [rax],bl
   1400080f6:	jne    0x1400080cb
   1400080f8:	lea    rax,[rsi+0x1e]
   1400080fc:	mov    ecx,0xfe
   140008101:	or     BYTE PTR [rax],0x8
   140008104:	add    rax,r12
   140008107:	sub    rcx,r12
   14000810a:	jne    0x140008101
   14000810c:	mov    ecx,DWORD PTR [rsi+0x4]
   14000810f:	sub    ecx,0x3a4
   140008115:	je     0x14000813e
   140008117:	sub    ecx,0x4
   14000811a:	je     0x140008137
   14000811c:	sub    ecx,0xd
   14000811f:	je     0x140008130
   140008121:	dec    ecx
   140008123:	je     0x140008129
   140008125:	mov    eax,ebx
   140008127:	jmp    0x140008143
   140008129:	mov    eax,0x404
   14000812e:	jmp    0x140008143
   140008130:	mov    eax,0x412
   140008135:	jmp    0x140008143
   140008137:	mov    eax,0x804
   14000813c:	jmp    0x140008143
   14000813e:	mov    eax,0x411
   140008143:	mov    DWORD PTR [rsi+0xc],eax
   140008146:	mov    DWORD PTR [rsi+0x8],r12d
   14000814a:	jmp    0x14000814f
   14000814c:	mov    DWORD PTR [rsi+0x8],ebx
   14000814f:	lea    rdi,[rsi+0x10]
   140008153:	movzx  eax,bx
   140008156:	mov    ecx,0x6
   14000815b:	rep stos WORD PTR es:[rdi],ax
   14000815e:	jmp    0x140008242
   140008163:	cmp    DWORD PTR [rip+0xc217],ebx        # 0x140014380
   140008169:	jne    0x140008027
   14000816f:	or     eax,0xffffffff
   140008172:	jmp    0x14000824c
   140008177:	lea    rcx,[rsi+0x1c]
   14000817b:	xor    edx,edx
   14000817d:	mov    r8d,0x101
   140008183:	call   0x140004a30
   140008188:	lea    r10,[rbp+rbp*2+0x0]
   14000818d:	lea    r11,[rip+0xb044]        # 0x1400131d8
   140008194:	shl    r10,0x4
   140008198:	mov    ebp,0x4
   14000819d:	lea    r8,[r10+r13*1+0x10]
   1400081a2:	mov    rcx,r8
   1400081a5:	cmp    BYTE PTR [r8],bl
   1400081a8:	je     0x1400081db
   1400081aa:	cmp    BYTE PTR [rcx+0x1],bl
   1400081ad:	je     0x1400081db
   1400081af:	movzx  edx,BYTE PTR [rcx]
   1400081b2:	movzx  eax,BYTE PTR [rcx+0x1]
   1400081b6:	cmp    edx,eax
   1400081b8:	ja     0x1400081d3
   1400081ba:	lea    r9,[rdx+rsi*1+0x1d]
   1400081bf:	mov    al,BYTE PTR [r11]
   1400081c2:	add    edx,r12d
   1400081c5:	or     BYTE PTR [r9],al
   1400081c8:	movzx  eax,BYTE PTR [rcx+0x1]
   1400081cc:	add    r9,r12
   1400081cf:	cmp    edx,eax
   1400081d1:	jbe    0x1400081bf
   1400081d3:	add    rcx,0x2
   1400081d7:	cmp    BYTE PTR [rcx],bl
   1400081d9:	jne    0x1400081aa
   1400081db:	add    r8,0x8
   1400081df:	add    r11,r12
   1400081e2:	sub    rbp,r12
   1400081e5:	jne    0x1400081a2
   1400081e7:	mov    DWORD PTR [rsi+0x4],edi
   1400081ea:	sub    edi,0x3a4
   1400081f0:	mov    DWORD PTR [rsi+0x8],r12d
   1400081f4:	je     0x140008219
   1400081f6:	sub    edi,0x4
   1400081f9:	je     0x140008212
   1400081fb:	sub    edi,0xd
   1400081fe:	je     0x14000820b
   140008200:	dec    edi
   140008202:	jne    0x14000821e
   140008204:	mov    ebx,0x404
   140008209:	jmp    0x14000821e
   14000820b:	mov    ebx,0x412
   140008210:	jmp    0x14000821e
   140008212:	mov    ebx,0x804
   140008217:	jmp    0x14000821e
   140008219:	mov    ebx,0x411
   14000821e:	sub    r10,rsi
   140008221:	mov    DWORD PTR [rsi+0xc],ebx
   140008224:	lea    rcx,[rsi+0x10]
   140008228:	lea    rdi,[r10+r13*1-0xc]
   14000822d:	mov    edx,0x6
   140008232:	movzx  eax,WORD PTR [rdi+rcx*1]
   140008236:	mov    WORD PTR [rcx],ax
   140008239:	add    rcx,0x2
   14000823d:	sub    rdx,r12
   140008240:	jne    0x140008232
   140008242:	mov    rcx,rsi
   140008245:	call   0x140007cbc
   14000824a:	xor    eax,eax
   14000824c:	mov    rcx,QWORD PTR [rsp+0x38]
   140008251:	xor    rcx,rsp
   140008254:	call   0x140001980
   140008259:	mov    rbx,QWORD PTR [rsp+0x80]
   140008261:	add    rsp,0x40
   140008265:	pop    r13
   140008267:	pop    r12
   140008269:	pop    rdi
   14000826a:	pop    rsi
   14000826b:	pop    rbp
   14000826c:	ret    
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	mov    rax,rsp
   140008273:	mov    QWORD PTR [rax+0x8],rbx
   140008277:	mov    QWORD PTR [rax+0x10],rsi
   14000827b:	mov    QWORD PTR [rax+0x18],rdi
   14000827f:	mov    QWORD PTR [rax+0x20],r12
   140008283:	push   r13
   140008285:	sub    rsp,0x30
   140008289:	mov    edi,ecx
   14000828b:	or     r13d,0xffffffff
   14000828f:	call   0x140003d18
   140008294:	mov    rsi,rax
   140008297:	call   0x140007eac
   14000829c:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400082a3:	mov    ecx,edi
   1400082a5:	call   0x140007f68
   1400082aa:	mov    r12d,eax
   1400082ad:	cmp    eax,DWORD PTR [rbx+0x4]
   1400082b0:	je     0x14000842b
   1400082b6:	mov    ecx,0x220
   1400082bb:	call   0x1400067e0
   1400082c0:	mov    rbx,rax
   1400082c3:	xor    edi,edi
   1400082c5:	test   rax,rax
   1400082c8:	je     0x140008430
   1400082ce:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400082d5:	mov    rcx,rax
   1400082d8:	mov    r8d,0x220
   1400082de:	call   0x140007580
   1400082e3:	mov    DWORD PTR [rbx],edi
   1400082e5:	mov    rdx,rbx
   1400082e8:	mov    ecx,r12d
   1400082eb:	call   0x140007ff8
   1400082f0:	mov    r13d,eax
   1400082f3:	test   eax,eax
   1400082f5:	jne    0x140008405
   1400082fb:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008302:	lea    r12,[rip+0xaa97]        # 0x140012da0
   140008309:	lock dec DWORD PTR [rcx]
   14000830c:	jne    0x14000831f
   14000830e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008315:	cmp    rcx,r12
   140008318:	je     0x14000831f
   14000831a:	call   0x140001eb4
   14000831f:	mov    QWORD PTR [rsi+0xb8],rbx
   140008326:	lock inc DWORD PTR [rbx]
   140008329:	test   BYTE PTR [rsi+0xc8],0x2
   140008330:	jne    0x140008430
   140008336:	test   BYTE PTR [rip+0xafa3],0x1        # 0x1400132e0
   14000833d:	jne    0x140008430
   140008343:	mov    esi,0xd
   140008348:	mov    ecx,esi
   14000834a:	call   0x140003870
   14000834f:	nop
   140008350:	mov    eax,DWORD PTR [rbx+0x4]
   140008353:	mov    DWORD PTR [rip+0xc03b],eax        # 0x140014394
   140008359:	mov    eax,DWORD PTR [rbx+0x8]
   14000835c:	mov    DWORD PTR [rip+0xc036],eax        # 0x140014398
   140008362:	mov    eax,DWORD PTR [rbx+0xc]
   140008365:	mov    DWORD PTR [rip+0xc031],eax        # 0x14001439c
   14000836b:	mov    edx,edi
   14000836d:	lea    r8,[rip+0xffffffffffff7c8c]        # 0x140000000
   140008374:	mov    DWORD PTR [rsp+0x20],edx
   140008378:	cmp    edx,0x5
   14000837b:	jge    0x140008392
   14000837d:	movsxd rcx,edx
   140008380:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140008385:	mov    WORD PTR [r8+rcx*2+0x14388],ax
   14000838e:	inc    edx
   140008390:	jmp    0x140008374
   140008392:	mov    edx,edi
   140008394:	mov    DWORD PTR [rsp+0x20],edx
   140008398:	cmp    edx,0x101
   14000839e:	jge    0x1400083b3
   1400083a0:	movsxd rcx,edx
   1400083a3:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   1400083a7:	mov    BYTE PTR [rcx+r8*1+0x12fc0],al
   1400083af:	inc    edx
   1400083b1:	jmp    0x140008394
   1400083b3:	mov    DWORD PTR [rsp+0x20],edi
   1400083b7:	cmp    edi,0x100
   1400083bd:	jge    0x1400083d5
   1400083bf:	movsxd rcx,edi
   1400083c2:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   1400083c9:	mov    BYTE PTR [rcx+r8*1+0x130d0],al
   1400083d1:	inc    edi
   1400083d3:	jmp    0x1400083b3
   1400083d5:	mov    rax,QWORD PTR [rip+0xadf4]        # 0x1400131d0
   1400083dc:	lock dec DWORD PTR [rax]
   1400083df:	jne    0x1400083f2
   1400083e1:	mov    rcx,QWORD PTR [rip+0xade8]        # 0x1400131d0
   1400083e8:	cmp    rcx,r12
   1400083eb:	je     0x1400083f2
   1400083ed:	call   0x140001eb4
   1400083f2:	mov    QWORD PTR [rip+0xadd7],rbx        # 0x1400131d0
   1400083f9:	lock inc DWORD PTR [rbx]
   1400083fc:	mov    ecx,esi
   1400083fe:	call   0x140003770
   140008403:	jmp    0x140008430
   140008405:	cmp    eax,0xffffffff
   140008408:	jne    0x140008430
   14000840a:	lea    r12,[rip+0xa98f]        # 0x140012da0
   140008411:	cmp    rbx,r12
   140008414:	je     0x14000841e
   140008416:	mov    rcx,rbx
   140008419:	call   0x140001eb4
   14000841e:	call   0x140003564
   140008423:	mov    DWORD PTR [rax],0x16
   140008429:	jmp    0x140008430
   14000842b:	xor    edi,edi
   14000842d:	mov    r13d,edi
   140008430:	mov    eax,r13d
   140008433:	mov    rbx,QWORD PTR [rsp+0x40]
   140008438:	mov    rsi,QWORD PTR [rsp+0x48]
   14000843d:	mov    rdi,QWORD PTR [rsp+0x50]
   140008442:	mov    r12,QWORD PTR [rsp+0x58]
   140008447:	add    rsp,0x30
   14000844b:	pop    r13
   14000844d:	ret    
   14000844e:	int3   
   14000844f:	int3   
   140008450:	sub    rsp,0x28
   140008454:	cmp    DWORD PTR [rip+0xd415],0x0        # 0x140015870
   14000845b:	jne    0x140008471
   14000845d:	mov    ecx,0xfffffffd
   140008462:	call   0x140008270
   140008467:	mov    DWORD PTR [rip+0xd3ff],0x1        # 0x140015870
   140008471:	xor    eax,eax
   140008473:	add    rsp,0x28
   140008477:	ret    
   140008478:	sub    rsp,0x28
   14000847c:	test   rcx,rcx
   14000847f:	jne    0x14000849a
   140008481:	call   0x140003564
   140008486:	mov    DWORD PTR [rax],0x16
   14000848c:	call   0x1400034fc
   140008491:	or     rax,0xffffffffffffffff
   140008495:	add    rsp,0x28
   140008499:	ret    
   14000849a:	mov    r8,rcx
   14000849d:	mov    rcx,QWORD PTR [rip+0xbdb4]        # 0x140014258
   1400084a4:	xor    edx,edx
   1400084a6:	add    rsp,0x28
   1400084aa:	rex.W jmp QWORD PTR [rip+0x5d7f]        # 0x14000e230
   1400084b1:	int3   
   1400084b2:	int3   
   1400084b3:	int3   
   1400084b4:	mov    ecx,0x2
   1400084b9:	jmp    0x140001e8c
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	int3   
   1400084c1:	int3   
   1400084c2:	int3   
   1400084c3:	int3   
   1400084c4:	int3   
   1400084c5:	int3   
   1400084c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400084d0:	mov    rax,rcx
   1400084d3:	neg    rcx
   1400084d6:	test   rax,0x7
   1400084dc:	je     0x1400084ed
   1400084de:	xchg   ax,ax
   1400084e0:	mov    dl,BYTE PTR [rax]
   1400084e2:	inc    rax
   1400084e5:	test   dl,dl
   1400084e7:	je     0x140008548
   1400084e9:	test   al,0x7
   1400084eb:	jne    0x1400084e0
   1400084ed:	movabs r8,0x7efefefefefefeff
   1400084f7:	movabs r11,0x8101010101010100
   140008501:	mov    rdx,QWORD PTR [rax]
   140008504:	mov    r9,r8
   140008507:	add    rax,0x8
   14000850b:	add    r9,rdx
   14000850e:	not    rdx
   140008511:	xor    rdx,r9
   140008514:	and    rdx,r11
   140008517:	je     0x140008501
   140008519:	mov    rdx,QWORD PTR [rax-0x8]
   14000851d:	test   dl,dl
   14000851f:	je     0x140008572
   140008521:	test   dh,dh
   140008523:	je     0x14000856c
   140008525:	shr    rdx,0x10
   140008529:	test   dl,dl
   14000852b:	je     0x140008566
   14000852d:	test   dh,dh
   14000852f:	je     0x140008560
   140008531:	shr    rdx,0x10
   140008535:	test   dl,dl
   140008537:	je     0x14000855a
   140008539:	test   dh,dh
   14000853b:	je     0x140008554
   14000853d:	shr    edx,0x10
   140008540:	test   dl,dl
   140008542:	je     0x14000854e
   140008544:	test   dh,dh
   140008546:	jne    0x140008501
   140008548:	lea    rax,[rcx+rax*1-0x1]
   14000854d:	ret    
   14000854e:	lea    rax,[rcx+rax*1-0x2]
   140008553:	ret    
   140008554:	lea    rax,[rcx+rax*1-0x3]
   140008559:	ret    
   14000855a:	lea    rax,[rcx+rax*1-0x4]
   14000855f:	ret    
   140008560:	lea    rax,[rcx+rax*1-0x5]
   140008565:	ret    
   140008566:	lea    rax,[rcx+rax*1-0x6]
   14000856b:	ret    
   14000856c:	lea    rax,[rcx+rax*1-0x7]
   140008571:	ret    
   140008572:	lea    rax,[rcx+rax*1-0x8]
   140008577:	ret    
   140008578:	rex push rbx
   14000857a:	push   rbp
   14000857b:	push   rsi
   14000857c:	push   rdi
   14000857d:	push   r12
   14000857f:	push   r13
   140008581:	push   r14
   140008583:	sub    rsp,0x50
   140008587:	mov    rax,QWORD PTR [rip+0x9a7a]        # 0x140012008
   14000858e:	xor    rax,rsp
   140008591:	mov    QWORD PTR [rsp+0x48],rax
   140008596:	mov    ebp,r8d
   140008599:	mov    r14,rdx
   14000859c:	mov    r13,rcx
   14000859f:	call   0x140003ba8
   1400085a4:	xor    ebx,ebx
   1400085a6:	cmp    QWORD PTR [rip+0xbdf3],rbx        # 0x1400143a0
   1400085ad:	mov    rdi,rax
   1400085b0:	jne    0x14000868b
   1400085b6:	lea    rcx,[rip+0x75eb]        # 0x14000fba8
   1400085bd:	call   QWORD PTR [rip+0x5b85]        # 0x14000e148
   1400085c3:	mov    rsi,rax
   1400085c6:	test   rax,rax
   1400085c9:	je     0x140008762
   1400085cf:	lea    rdx,[rip+0x75c2]        # 0x14000fb98
   1400085d6:	mov    rcx,rax
   1400085d9:	call   QWORD PTR [rip+0x5aa1]        # 0x14000e080
   1400085df:	test   rax,rax
   1400085e2:	je     0x140008762
   1400085e8:	mov    rcx,rax
   1400085eb:	call   QWORD PTR [rip+0x5b47]        # 0x14000e138
   1400085f1:	lea    rdx,[rip+0x7590]        # 0x14000fb88
   1400085f8:	mov    rcx,rsi
   1400085fb:	mov    QWORD PTR [rip+0xbd9e],rax        # 0x1400143a0
   140008602:	call   QWORD PTR [rip+0x5a78]        # 0x14000e080
   140008608:	mov    rcx,rax
   14000860b:	call   QWORD PTR [rip+0x5b27]        # 0x14000e138
   140008611:	lea    rdx,[rip+0x7558]        # 0x14000fb70
   140008618:	mov    rcx,rsi
   14000861b:	mov    QWORD PTR [rip+0xbd86],rax        # 0x1400143a8
   140008622:	call   QWORD PTR [rip+0x5a58]        # 0x14000e080
   140008628:	mov    rcx,rax
   14000862b:	call   QWORD PTR [rip+0x5b07]        # 0x14000e138
   140008631:	lea    rdx,[rip+0x7518]        # 0x14000fb50
   140008638:	mov    rcx,rsi
   14000863b:	mov    QWORD PTR [rip+0xbd6e],rax        # 0x1400143b0
   140008642:	call   QWORD PTR [rip+0x5a38]        # 0x14000e080
   140008648:	mov    rcx,rax
   14000864b:	call   QWORD PTR [rip+0x5ae7]        # 0x14000e138
   140008651:	mov    r11,rax
   140008654:	mov    QWORD PTR [rip+0xbd65],rax        # 0x1400143c0
   14000865b:	test   rax,rax
   14000865e:	je     0x140008682
   140008660:	lea    rdx,[rip+0x74d1]        # 0x14000fb38
   140008667:	mov    rcx,rsi
   14000866a:	call   QWORD PTR [rip+0x5a10]        # 0x14000e080
   140008670:	mov    rcx,rax
   140008673:	call   QWORD PTR [rip+0x5abf]        # 0x14000e138
   140008679:	mov    QWORD PTR [rip+0xbd38],rax        # 0x1400143b8
   140008680:	jmp    0x140008692
   140008682:	mov    rax,QWORD PTR [rip+0xbd2f]        # 0x1400143b8
   140008689:	jmp    0x140008699
   14000868b:	mov    rax,QWORD PTR [rip+0xbd26]        # 0x1400143b8
   140008692:	mov    r11,QWORD PTR [rip+0xbd27]        # 0x1400143c0
   140008699:	cmp    rax,rdi
   14000869c:	je     0x140008700
   14000869e:	cmp    r11,rdi
   1400086a1:	je     0x140008700
   1400086a3:	mov    rcx,rax
   1400086a6:	call   QWORD PTR [rip+0x5a04]        # 0x14000e0b0
   1400086ac:	mov    rcx,QWORD PTR [rip+0xbd0d]        # 0x1400143c0
   1400086b3:	mov    rsi,rax
   1400086b6:	call   QWORD PTR [rip+0x59f4]        # 0x14000e0b0
   1400086bc:	mov    r12,rax
   1400086bf:	test   rsi,rsi
   1400086c2:	je     0x140008700
   1400086c4:	test   rax,rax
   1400086c7:	je     0x140008700
   1400086c9:	call   rsi
   1400086cb:	test   rax,rax
   1400086ce:	je     0x1400086fa
   1400086d0:	lea    rcx,[rsp+0x30]
   1400086d5:	mov    r9d,0xc
   1400086db:	lea    r8,[rsp+0x38]
   1400086e0:	mov    QWORD PTR [rsp+0x20],rcx
   1400086e5:	lea    edx,[r9-0xb]
   1400086e9:	mov    rcx,rax
   1400086ec:	call   r12
   1400086ef:	test   eax,eax
   1400086f1:	je     0x1400086fa
   1400086f3:	test   BYTE PTR [rsp+0x40],0x1
   1400086f8:	jne    0x140008700
   1400086fa:	bts    ebp,0x15
   1400086fe:	jmp    0x140008740
   140008700:	mov    rcx,QWORD PTR [rip+0xbca1]        # 0x1400143a8
   140008707:	cmp    rcx,rdi
   14000870a:	je     0x140008740
   14000870c:	call   QWORD PTR [rip+0x599e]        # 0x14000e0b0
   140008712:	test   rax,rax
   140008715:	je     0x140008740
   140008717:	call   rax
   140008719:	mov    rbx,rax
   14000871c:	test   rax,rax
   14000871f:	je     0x140008740
   140008721:	mov    rcx,QWORD PTR [rip+0xbc88]        # 0x1400143b0
   140008728:	cmp    rcx,rdi
   14000872b:	je     0x140008740
   14000872d:	call   QWORD PTR [rip+0x597d]        # 0x14000e0b0
   140008733:	test   rax,rax
   140008736:	je     0x140008740
   140008738:	mov    rcx,rbx
   14000873b:	call   rax
   14000873d:	mov    rbx,rax
   140008740:	mov    rcx,QWORD PTR [rip+0xbc59]        # 0x1400143a0
   140008747:	call   QWORD PTR [rip+0x5963]        # 0x14000e0b0
   14000874d:	test   rax,rax
   140008750:	je     0x140008762
   140008752:	mov    r9d,ebp
   140008755:	mov    r8,r14
   140008758:	mov    rdx,r13
   14000875b:	mov    rcx,rbx
   14000875e:	call   rax
   140008760:	jmp    0x140008764
   140008762:	xor    eax,eax
   140008764:	mov    rcx,QWORD PTR [rsp+0x48]
   140008769:	xor    rcx,rsp
   14000876c:	call   0x140001980
   140008771:	add    rsp,0x50
   140008775:	pop    r14
   140008777:	pop    r13
   140008779:	pop    r12
   14000877b:	pop    rdi
   14000877c:	pop    rsi
   14000877d:	pop    rbp
   14000877e:	pop    rbx
   14000877f:	ret    
   140008780:	rex push rbx
   140008782:	sub    rsp,0x20
   140008786:	xor    r10d,r10d
   140008789:	mov    r9,rcx
   14000878c:	test   rcx,rcx
   14000878f:	je     0x14000879f
   140008791:	test   rdx,rdx
   140008794:	je     0x14000879f
   140008796:	test   r8,r8
   140008799:	jne    0x1400087b8
   14000879b:	mov    WORD PTR [rcx],r10w
   14000879f:	call   0x140003564
   1400087a4:	mov    ebx,0x16
   1400087a9:	mov    DWORD PTR [rax],ebx
   1400087ab:	call   0x1400034fc
   1400087b0:	mov    eax,ebx
   1400087b2:	add    rsp,0x20
   1400087b6:	pop    rbx
   1400087b7:	ret    
   1400087b8:	cmp    WORD PTR [rcx],r10w
   1400087bc:	je     0x1400087c7
   1400087be:	add    rcx,0x2
   1400087c2:	dec    rdx
   1400087c5:	jne    0x1400087b8
   1400087c7:	test   rdx,rdx
   1400087ca:	jne    0x1400087d2
   1400087cc:	mov    WORD PTR [r9],r10w
   1400087d0:	jmp    0x14000879f
   1400087d2:	sub    rcx,r8
   1400087d5:	movzx  eax,WORD PTR [r8]
   1400087d9:	mov    WORD PTR [rcx+r8*1],ax
   1400087de:	add    r8,0x2
   1400087e2:	test   ax,ax
   1400087e5:	je     0x1400087ec
   1400087e7:	dec    rdx
   1400087ea:	jne    0x1400087d5
   1400087ec:	test   rdx,rdx
   1400087ef:	jne    0x140008801
   1400087f1:	mov    WORD PTR [r9],r10w
   1400087f5:	call   0x140003564
   1400087fa:	mov    ebx,0x22
   1400087ff:	jmp    0x1400087a9
   140008801:	xor    eax,eax
   140008803:	jmp    0x1400087b2
   140008805:	int3   
   140008806:	int3   
   140008807:	int3   
   140008808:	rex push rbx
   14000880a:	sub    rsp,0x20
   14000880e:	xor    ebx,ebx
   140008810:	mov    r10,r8
   140008813:	test   r9,r9
   140008816:	jne    0x140008826
   140008818:	test   rcx,rcx
   14000881b:	jne    0x14000882b
   14000881d:	test   rdx,rdx
   140008820:	jne    0x140008842
   140008822:	xor    eax,eax
   140008824:	jmp    0x140008855
   140008826:	test   rcx,rcx
   140008829:	je     0x140008842
   14000882b:	test   rdx,rdx
   14000882e:	je     0x140008842
   140008830:	test   r9,r9
   140008833:	jne    0x14000883a
   140008835:	mov    WORD PTR [rcx],bx
   140008838:	jmp    0x140008822
   14000883a:	test   r8,r8
   14000883d:	jne    0x14000885b
   14000883f:	mov    WORD PTR [rcx],bx
   140008842:	call   0x140003564
   140008847:	mov    ebx,0x16
   14000884c:	mov    DWORD PTR [rax],ebx
   14000884e:	call   0x1400034fc
   140008853:	mov    eax,ebx
   140008855:	add    rsp,0x20
   140008859:	pop    rbx
   14000885a:	ret    
   14000885b:	mov    r11,rcx
   14000885e:	mov    r8,rdx
   140008861:	cmp    r9,0xffffffffffffffff
   140008865:	jne    0x140008883
   140008867:	sub    r11,r10
   14000886a:	movzx  eax,WORD PTR [r10]
   14000886e:	mov    WORD PTR [r11+r10*1],ax
   140008873:	add    r10,0x2
   140008877:	test   ax,ax
   14000887a:	je     0x1400088ab
   14000887c:	dec    r8
   14000887f:	jne    0x14000886a
   140008881:	jmp    0x1400088ab
   140008883:	sub    r10,rcx
   140008886:	movzx  eax,WORD PTR [r10+r11*1]
   14000888b:	mov    WORD PTR [r11],ax
   14000888f:	add    r11,0x2
   140008893:	test   ax,ax
   140008896:	je     0x1400088a2
   140008898:	dec    r8
   14000889b:	je     0x1400088a2
   14000889d:	dec    r9
   1400088a0:	jne    0x140008886
   1400088a2:	test   r9,r9
   1400088a5:	jne    0x1400088ab
   1400088a7:	mov    WORD PTR [r11],bx
   1400088ab:	test   r8,r8
   1400088ae:	jne    0x140008822
   1400088b4:	cmp    r9,0xffffffffffffffff
   1400088b8:	jne    0x1400088c5
   1400088ba:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   1400088bf:	lea    eax,[r8+0x50]
   1400088c3:	jmp    0x140008855
   1400088c5:	mov    WORD PTR [rcx],bx
   1400088c8:	call   0x140003564
   1400088cd:	mov    ebx,0x22
   1400088d2:	jmp    0x14000884c
   1400088d7:	int3   
   1400088d8:	mov    rax,rcx
   1400088db:	movzx  edx,WORD PTR [rax]
   1400088de:	add    rax,0x2
   1400088e2:	test   dx,dx
   1400088e5:	jne    0x1400088db
   1400088e7:	sub    rax,rcx
   1400088ea:	sar    rax,1
   1400088ed:	dec    rax
   1400088f0:	ret    
   1400088f1:	int3   
   1400088f2:	int3   
   1400088f3:	int3   
   1400088f4:	rex push rbx
   1400088f6:	sub    rsp,0x20
   1400088fa:	xor    r10d,r10d
   1400088fd:	mov    r9,rcx
   140008900:	test   rcx,rcx
   140008903:	je     0x140008913
   140008905:	test   rdx,rdx
   140008908:	je     0x140008913
   14000890a:	test   r8,r8
   14000890d:	jne    0x14000892c
   14000890f:	mov    WORD PTR [rcx],r10w
   140008913:	call   0x140003564
   140008918:	mov    ebx,0x16
   14000891d:	mov    DWORD PTR [rax],ebx
   14000891f:	call   0x1400034fc
   140008924:	mov    eax,ebx
   140008926:	add    rsp,0x20
   14000892a:	pop    rbx
   14000892b:	ret    
   14000892c:	sub    rcx,r8
   14000892f:	movzx  eax,WORD PTR [r8]
   140008933:	mov    WORD PTR [rcx+r8*1],ax
   140008938:	add    r8,0x2
   14000893c:	test   ax,ax
   14000893f:	je     0x140008946
   140008941:	dec    rdx
   140008944:	jne    0x14000892f
   140008946:	test   rdx,rdx
   140008949:	jne    0x14000895b
   14000894b:	mov    WORD PTR [r9],r10w
   14000894f:	call   0x140003564
   140008954:	mov    ebx,0x22
   140008959:	jmp    0x14000891d
   14000895b:	xor    eax,eax
   14000895d:	jmp    0x140008926
   14000895f:	int3   
   140008960:	sub    rsp,0x28
   140008964:	test   ecx,ecx
   140008966:	js     0x140008988
   140008968:	cmp    ecx,0x2
   14000896b:	jle    0x14000897a
   14000896d:	cmp    ecx,0x3
   140008970:	jne    0x140008988
   140008972:	mov    eax,DWORD PTR [rip+0xaab0]        # 0x140013428
   140008978:	jmp    0x14000899b
   14000897a:	mov    eax,DWORD PTR [rip+0xaaa8]        # 0x140013428
   140008980:	mov    DWORD PTR [rip+0xaaa2],ecx        # 0x140013428
   140008986:	jmp    0x14000899b
   140008988:	call   0x140003564
   14000898d:	mov    DWORD PTR [rax],0x16
   140008993:	call   0x1400034fc
   140008998:	or     eax,0xffffffff
   14000899b:	add    rsp,0x28
   14000899f:	ret    
   1400089a0:	rex push rbx
   1400089a2:	sub    rsp,0x20
   1400089a6:	test   BYTE PTR [rdx+0x18],0x40
   1400089aa:	mov    rbx,r8
   1400089ad:	je     0x1400089bb
   1400089af:	cmp    QWORD PTR [rdx+0x10],0x0
   1400089b4:	jne    0x1400089bb
   1400089b6:	inc    DWORD PTR [r8]
   1400089b9:	jmp    0x1400089e0
   1400089bb:	dec    DWORD PTR [rdx+0x8]
   1400089be:	js     0x1400089cd
   1400089c0:	mov    rax,QWORD PTR [rdx]
   1400089c3:	mov    BYTE PTR [rax],cl
   1400089c5:	inc    QWORD PTR [rdx]
   1400089c8:	movzx  eax,cl
   1400089cb:	jmp    0x1400089d5
   1400089cd:	movsx  ecx,cl
   1400089d0:	call   0x1400047e8
   1400089d5:	cmp    eax,0xffffffff
   1400089d8:	jne    0x1400089de
   1400089da:	or     DWORD PTR [rbx],eax
   1400089dc:	jmp    0x1400089e0
   1400089de:	inc    DWORD PTR [rbx]
   1400089e0:	add    rsp,0x20
   1400089e4:	pop    rbx
   1400089e5:	ret    
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	test   edx,edx
   1400089ea:	jle    0x140008a38
   1400089ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400089f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400089f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400089fb:	push   rdi
   1400089fc:	sub    rsp,0x20
   140008a00:	mov    rdi,r9
   140008a03:	mov    rsi,r8
   140008a06:	mov    ebx,edx
   140008a08:	mov    bpl,cl
   140008a0b:	mov    r8,rdi
   140008a0e:	mov    rdx,rsi
   140008a11:	mov    cl,bpl
   140008a14:	dec    ebx
   140008a16:	call   0x1400089a0
   140008a1b:	cmp    DWORD PTR [rdi],0xffffffff
   140008a1e:	je     0x140008a24
   140008a20:	test   ebx,ebx
   140008a22:	jg     0x140008a0b
   140008a24:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a29:	mov    rbp,QWORD PTR [rsp+0x38]
   140008a2e:	mov    rsi,QWORD PTR [rsp+0x40]
   140008a33:	add    rsp,0x20
   140008a37:	pop    rdi
   140008a38:	ret    
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140008a41:	mov    QWORD PTR [rsp+0x10],rbp
   140008a46:	mov    QWORD PTR [rsp+0x18],rsi
   140008a4b:	push   rdi
   140008a4c:	push   r12
   140008a4e:	push   r13
   140008a50:	sub    rsp,0x20
   140008a54:	test   BYTE PTR [r8+0x18],0x40
   140008a59:	mov    rbx,QWORD PTR [rsp+0x60]
   140008a5e:	mov    rdi,r9
   140008a61:	mov    r12d,DWORD PTR [rbx]
   140008a64:	mov    rbp,r8
   140008a67:	mov    esi,edx
   140008a69:	mov    r13,rcx
   140008a6c:	je     0x140008a7a
   140008a6e:	cmp    QWORD PTR [r8+0x10],0x0
   140008a73:	jne    0x140008a7a
   140008a75:	add    DWORD PTR [r9],edx
   140008a78:	jmp    0x140008ab8
   140008a7a:	and    DWORD PTR [rbx],0x0
   140008a7d:	test   edx,edx
   140008a7f:	jle    0x140008ab5
   140008a81:	mov    cl,BYTE PTR [r13+0x0]
   140008a85:	mov    r8,rdi
   140008a88:	mov    rdx,rbp
   140008a8b:	dec    esi
   140008a8d:	call   0x1400089a0
   140008a92:	inc    r13
   140008a95:	cmp    DWORD PTR [rdi],0xffffffff
   140008a98:	jne    0x140008aac
   140008a9a:	cmp    DWORD PTR [rbx],0x2a
   140008a9d:	jne    0x140008ab0
   140008a9f:	mov    r8,rdi
   140008aa2:	mov    rdx,rbp
   140008aa5:	mov    cl,0x3f
   140008aa7:	call   0x1400089a0
   140008aac:	test   esi,esi
   140008aae:	jg     0x140008a81
   140008ab0:	cmp    DWORD PTR [rbx],0x0
   140008ab3:	jne    0x140008ab8
   140008ab5:	mov    DWORD PTR [rbx],r12d
   140008ab8:	mov    rbx,QWORD PTR [rsp+0x40]
   140008abd:	mov    rbp,QWORD PTR [rsp+0x48]
   140008ac2:	mov    rsi,QWORD PTR [rsp+0x50]
   140008ac7:	add    rsp,0x20
   140008acb:	pop    r13
   140008acd:	pop    r12
   140008acf:	pop    rdi
   140008ad0:	ret    
   140008ad1:	int3   
   140008ad2:	int3   
   140008ad3:	int3   
   140008ad4:	mov    QWORD PTR [rsp+0x18],rbx
   140008ad9:	push   rbp
   140008ada:	push   rsi
   140008adb:	push   rdi
   140008adc:	push   r12
   140008ade:	push   r13
   140008ae0:	push   r14
   140008ae2:	push   r15
   140008ae4:	lea    rbp,[rsp-0x1d0]
   140008aec:	sub    rsp,0x2d0
   140008af3:	mov    rax,QWORD PTR [rip+0x950e]        # 0x140012008
   140008afa:	xor    rax,rsp
   140008afd:	mov    QWORD PTR [rbp+0x1c8],rax
   140008b04:	xor    eax,eax
   140008b06:	mov    rbx,rcx
   140008b09:	mov    QWORD PTR [rsp+0x70],rcx
   140008b0e:	mov    QWORD PTR [rsp+0x68],rdx
   140008b13:	lea    rcx,[rbp-0x80]
   140008b17:	mov    rdx,r8
   140008b1a:	mov    r15,r9
   140008b1d:	mov    DWORD PTR [rsp+0x64],eax
   140008b21:	mov    r13d,eax
   140008b24:	mov    DWORD PTR [rsp+0x58],eax
   140008b28:	mov    edi,eax
   140008b2a:	mov    DWORD PTR [rsp+0x44],eax
   140008b2e:	mov    DWORD PTR [rsp+0x4c],eax
   140008b32:	mov    DWORD PTR [rsp+0x5c],eax
   140008b36:	mov    DWORD PTR [rsp+0x54],eax
   140008b3a:	call   0x140004978
   140008b3f:	call   0x140003564
   140008b44:	xor    r10d,r10d
   140008b47:	mov    QWORD PTR [rbp-0x60],rax
   140008b4b:	test   rbx,rbx
   140008b4e:	jne    0x140008b7c
   140008b50:	call   0x140003564
   140008b55:	mov    DWORD PTR [rax],0x16
   140008b5b:	call   0x1400034fc
   140008b60:	xor    r11d,r11d
   140008b63:	cmp    BYTE PTR [rbp-0x68],r11b
   140008b67:	je     0x140008b74
   140008b69:	mov    rax,QWORD PTR [rbp-0x70]
   140008b6d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008b74:	or     eax,0xffffffff
   140008b77:	jmp    0x140009357
   140008b7c:	or     r14d,0xffffffff
   140008b80:	test   BYTE PTR [rbx+0x18],0x40
   140008b84:	lea    r9,[rip+0xffffffffffff7475]        # 0x140000000
   140008b8b:	jne    0x140008c36
   140008b91:	mov    rcx,rbx
   140008b94:	call   0x14000571c
   140008b99:	lea    rdx,[rip+0x9d60]        # 0x140012900
   140008ba0:	cmp    eax,r14d
   140008ba3:	je     0x140008bcd
   140008ba5:	cmp    eax,0xfffffffe
   140008ba8:	je     0x140008bcd
   140008baa:	movsxd r8,eax
   140008bad:	lea    r9,[rip+0xffffffffffff744c]        # 0x140000000
   140008bb4:	mov    rcx,r8
   140008bb7:	and    r8d,0x1f
   140008bbb:	sar    rcx,0x5
   140008bbf:	imul   r8,r8,0x58
   140008bc3:	add    r8,QWORD PTR [r9+rcx*8+0x14620]
   140008bcb:	jmp    0x140008bd7
   140008bcd:	mov    r8,rdx
   140008bd0:	lea    r9,[rip+0xffffffffffff7429]        # 0x140000000
   140008bd7:	test   BYTE PTR [r8+0x38],0x7f
   140008bdc:	jne    0x140008c07
   140008bde:	cmp    eax,r14d
   140008be1:	je     0x140008c01
   140008be3:	cmp    eax,0xfffffffe
   140008be6:	je     0x140008c01
   140008be8:	movsxd rdx,eax
   140008beb:	mov    rax,rdx
   140008bee:	and    edx,0x1f
   140008bf1:	sar    rax,0x5
   140008bf5:	imul   rdx,rdx,0x58
   140008bf9:	add    rdx,QWORD PTR [r9+rax*8+0x14620]
   140008c01:	test   BYTE PTR [rdx+0x38],0x80
   140008c05:	je     0x140008c33
   140008c07:	call   0x140003564
   140008c0c:	mov    DWORD PTR [rax],0x16
   140008c12:	call   0x1400034fc
   140008c17:	xor    r11d,r11d
   140008c1a:	cmp    BYTE PTR [rbp-0x68],r11b
   140008c1e:	je     0x140008c2b
   140008c20:	mov    rax,QWORD PTR [rbp-0x70]
   140008c24:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008c2b:	mov    eax,r14d
   140008c2e:	jmp    0x140009357
   140008c33:	xor    r10d,r10d
   140008c36:	mov    rdx,QWORD PTR [rsp+0x68]
   140008c3b:	test   rdx,rdx
   140008c3e:	je     0x140008c07
   140008c40:	mov    r12b,BYTE PTR [rdx]
   140008c43:	mov    esi,r10d
   140008c46:	mov    DWORD PTR [rsp+0x40],r10d
   140008c4b:	mov    DWORD PTR [rsp+0x48],r10d
   140008c50:	mov    r8d,r10d
   140008c53:	mov    QWORD PTR [rbp-0x50],r10
   140008c57:	test   r12b,r12b
   140008c5a:	je     0x140009344
   140008c60:	mov    rbx,QWORD PTR [rbp-0x48]
   140008c64:	mov    r11d,0x200
   140008c6a:	inc    rdx
   140008c6d:	mov    QWORD PTR [rsp+0x68],rdx
   140008c72:	test   esi,esi
   140008c74:	js     0x140009335
   140008c7a:	lea    eax,[r12-0x20]
   140008c7f:	cmp    al,0x58
   140008c81:	ja     0x140008c95
   140008c83:	movsx  rax,r12b
   140008c87:	movzx  ecx,BYTE PTR [rax+r9*1+0xfc20]
   140008c90:	and    ecx,0xf
   140008c93:	jmp    0x140008c98
   140008c95:	mov    ecx,r10d
   140008c98:	movsxd rax,ecx
   140008c9b:	lea    rcx,[rax+rax*8]
   140008c9f:	movsxd rax,r8d
   140008ca2:	add    rcx,rax
   140008ca5:	movzx  r8d,BYTE PTR [rcx+r9*1+0xfc40]
   140008cae:	shr    r8d,0x4
   140008cb2:	mov    DWORD PTR [rsp+0x60],r8d
   140008cb7:	cmp    r8d,0x8
   140008cbb:	je     0x140008c07
   140008cc1:	mov    ecx,r8d
   140008cc4:	test   r8d,r8d
   140008cc7:	je     0x140009430
   140008ccd:	dec    ecx
   140008ccf:	je     0x140009561
   140008cd5:	dec    ecx
   140008cd7:	je     0x140009511
   140008cdd:	dec    ecx
   140008cdf:	je     0x1400094d8
   140008ce5:	dec    ecx
   140008ce7:	je     0x1400094cb
   140008ced:	dec    ecx
   140008cef:	je     0x140009491
   140008cf5:	dec    ecx
   140008cf7:	je     0x140009381
   140008cfd:	dec    ecx
   140008cff:	jne    0x140009329
   140008d05:	movsx  eax,r12b
   140008d09:	cmp    eax,0x64
   140008d0c:	jg     0x140008e85
   140008d12:	je     0x140008f86
   140008d18:	cmp    eax,0x41
   140008d1b:	je     0x140008e59
   140008d21:	cmp    eax,0x43
   140008d24:	je     0x140008dff
   140008d2a:	cmp    eax,0x45
   140008d2d:	je     0x140008e59
   140008d33:	cmp    eax,0x47
   140008d36:	je     0x140008e59
   140008d3c:	cmp    eax,0x53
   140008d3f:	je     0x140008db5
   140008d41:	cmp    eax,0x58
   140008d44:	je     0x140008f20
   140008d4a:	cmp    eax,0x5a
   140008d4d:	je     0x140008d66
   140008d4f:	cmp    eax,0x61
   140008d52:	je     0x140008e65
   140008d58:	cmp    eax,0x63
   140008d5b:	je     0x140008e0d
   140008d61:	jmp    0x140009191
   140008d66:	mov    rax,QWORD PTR [r15]
   140008d69:	add    r15,0x8
   140008d6d:	test   rax,rax
   140008d70:	je     0x140008da1
   140008d72:	mov    rbx,QWORD PTR [rax+0x8]
   140008d76:	test   rbx,rbx
   140008d79:	je     0x140008da1
   140008d7b:	movsx  eax,WORD PTR [rax]
   140008d7e:	bt     r13d,0xb
   140008d83:	jae    0x140008d97
   140008d85:	cdq    
   140008d86:	mov    DWORD PTR [rsp+0x54],0x1
   140008d8e:	sub    eax,edx
   140008d90:	sar    eax,1
   140008d92:	jmp    0x14000918d
   140008d97:	mov    DWORD PTR [rsp+0x54],r10d
   140008d9c:	jmp    0x14000918d
   140008da1:	mov    rbx,QWORD PTR [rip+0xa528]        # 0x1400132d0
   140008da8:	mov    rcx,rbx
   140008dab:	call   0x1400084d0
   140008db0:	jmp    0x14000918a
   140008db5:	test   r13d,0x830
   140008dbc:	jne    0x140008dc3
   140008dbe:	bts    r13d,0xb
   140008dc3:	mov    rbx,QWORD PTR [r15]
   140008dc6:	cmp    edi,r14d
   140008dc9:	mov    eax,edi
   140008dcb:	mov    ecx,0x7fffffff
   140008dd0:	cmove  eax,ecx
   140008dd3:	add    r15,0x8
   140008dd7:	test   r13d,0x810
   140008dde:	je     0x140008eed
   140008de4:	test   rbx,rbx
   140008de7:	mov    DWORD PTR [rsp+0x54],0x1
   140008def:	cmove  rbx,QWORD PTR [rip+0xa4e1]        # 0x1400132d8
   140008df7:	mov    rcx,rbx
   140008dfa:	jmp    0x140008ee1
   140008dff:	test   r13d,0x830
   140008e06:	jne    0x140008e0d
   140008e08:	bts    r13d,0xb
   140008e0d:	add    r15,0x8
   140008e11:	test   r13d,0x810
   140008e18:	je     0x140008e41
   140008e1a:	movzx  r9d,WORD PTR [r15-0x8]
   140008e1f:	lea    rdx,[rbp-0x40]
   140008e23:	lea    rcx,[rsp+0x48]
   140008e28:	mov    r8,r11
   140008e2b:	call   0x14000c850
   140008e30:	xor    r10d,r10d
   140008e33:	test   eax,eax
   140008e35:	je     0x140008e50
   140008e37:	mov    DWORD PTR [rsp+0x5c],0x1
   140008e3f:	jmp    0x140008e50
   140008e41:	mov    al,BYTE PTR [r15-0x8]
   140008e45:	mov    DWORD PTR [rsp+0x48],0x1
   140008e4d:	mov    BYTE PTR [rbp-0x40],al
   140008e50:	lea    rbx,[rbp-0x40]
   140008e54:	jmp    0x140009191
   140008e59:	mov    DWORD PTR [rsp+0x78],0x1
   140008e61:	add    r12b,0x20
   140008e65:	or     r13d,0x40
   140008e69:	lea    rbx,[rbp-0x40]
   140008e6d:	mov    esi,r11d
   140008e70:	test   edi,edi
   140008e72:	jns    0x140009096
   140008e78:	mov    DWORD PTR [rsp+0x44],0x6
   140008e80:	jmp    0x1400090e1
   140008e85:	cmp    eax,0x65
   140008e88:	jl     0x140009191
   140008e8e:	cmp    eax,0x67
   140008e91:	jle    0x140008e65
   140008e93:	cmp    eax,0x69
   140008e96:	je     0x140008f86
   140008e9c:	cmp    eax,0x6e
   140008e9f:	je     0x140008f55
   140008ea5:	cmp    eax,0x6f
   140008ea8:	je     0x140008f45
   140008eae:	cmp    eax,0x70
   140008eb1:	je     0x140008f16
   140008eb3:	cmp    eax,0x73
   140008eb6:	je     0x140008dc3
   140008ebc:	cmp    eax,0x75
   140008ebf:	je     0x140008f8a
   140008ec5:	cmp    eax,0x78
   140008ec8:	jne    0x140009191
   140008ece:	mov    eax,0x27
   140008ed3:	jmp    0x140008f25
   140008ed5:	dec    eax
   140008ed7:	cmp    WORD PTR [rcx],r10w
   140008edb:	je     0x140008ee5
   140008edd:	add    rcx,0x2
   140008ee1:	test   eax,eax
   140008ee3:	jne    0x140008ed5
   140008ee5:	sub    rcx,rbx
   140008ee8:	sar    rcx,1
   140008eeb:	jmp    0x140008f0d
   140008eed:	test   rbx,rbx
   140008ef0:	cmove  rbx,QWORD PTR [rip+0xa3d8]        # 0x1400132d0
   140008ef8:	mov    rcx,rbx
   140008efb:	jmp    0x140008f07
   140008efd:	dec    eax
   140008eff:	cmp    BYTE PTR [rcx],r10b
   140008f02:	je     0x140008f0b
   140008f04:	inc    rcx
   140008f07:	test   eax,eax
   140008f09:	jne    0x140008efd
   140008f0b:	sub    ecx,ebx
   140008f0d:	mov    DWORD PTR [rsp+0x48],ecx
   140008f11:	jmp    0x140009191
   140008f16:	mov    edi,0x10
   140008f1b:	bts    r13d,0xf
   140008f20:	mov    eax,0x7
   140008f25:	mov    DWORD PTR [rsp+0x64],eax
   140008f29:	mov    r9d,0x10
   140008f2f:	test   r13b,r13b
   140008f32:	jns    0x140008f90
   140008f34:	add    al,0x51
   140008f36:	mov    BYTE PTR [rsp+0x50],0x30
   140008f3b:	lea    edx,[r9-0xe]
   140008f3f:	mov    BYTE PTR [rsp+0x51],al
   140008f43:	jmp    0x140008f94
   140008f45:	mov    r9d,0x8
   140008f4b:	test   r13b,r13b
   140008f4e:	jns    0x140008f90
   140008f50:	or     r13d,r11d
   140008f53:	jmp    0x140008f90
   140008f55:	mov    rdi,QWORD PTR [r15]
   140008f58:	add    r15,0x8
   140008f5c:	call   0x14000a214
   140008f61:	xor    r10d,r10d
   140008f64:	test   eax,eax
   140008f66:	je     0x140008c07
   140008f6c:	test   r13b,0x20
   140008f70:	je     0x140008f77
   140008f72:	mov    WORD PTR [rdi],si
   140008f75:	jmp    0x140008f79
   140008f77:	mov    DWORD PTR [rdi],esi
   140008f79:	mov    DWORD PTR [rsp+0x5c],0x1
   140008f81:	jmp    0x1400092f6
   140008f86:	or     r13d,0x40
   140008f8a:	mov    r9d,0xa
   140008f90:	mov    edx,DWORD PTR [rsp+0x4c]
   140008f94:	mov    eax,0x8000
   140008f99:	test   eax,r13d
   140008f9c:	jne    0x140008fa5
   140008f9e:	bt     r13d,0xc
   140008fa3:	jae    0x140008fae
   140008fa5:	mov    r8,QWORD PTR [r15]
   140008fa8:	add    r15,0x8
   140008fac:	jmp    0x140008fdc
   140008fae:	add    r15,0x8
   140008fb2:	test   r13b,0x20
   140008fb6:	je     0x140008fcc
   140008fb8:	test   r13b,0x40
   140008fbc:	je     0x140008fc5
   140008fbe:	movsx  r8,WORD PTR [r15-0x8]
   140008fc3:	jmp    0x140008fdc
   140008fc5:	movzx  r8d,WORD PTR [r15-0x8]
   140008fca:	jmp    0x140008fdc
   140008fcc:	test   r13b,0x40
   140008fd0:	je     0x140008fd8
   140008fd2:	movsxd r8,DWORD PTR [r15-0x8]
   140008fd6:	jmp    0x140008fdc
   140008fd8:	mov    r8d,DWORD PTR [r15-0x8]
   140008fdc:	test   r13b,0x40
   140008fe0:	je     0x140008fef
   140008fe2:	test   r8,r8
   140008fe5:	jns    0x140008fef
   140008fe7:	neg    r8
   140008fea:	bts    r13d,0x8
   140008fef:	test   eax,r13d
   140008ff2:	jne    0x140008ffe
   140008ff4:	bt     r13d,0xc
   140008ff9:	jb     0x140008ffe
   140008ffb:	mov    r8d,r8d
   140008ffe:	test   edi,edi
   140009000:	jns    0x140009009
   140009002:	mov    edi,0x1
   140009007:	jmp    0x140009014
   140009009:	and    r13d,0xfffffff7
   14000900d:	cmp    edi,r11d
   140009010:	cmovg  edi,r11d
   140009014:	mov    esi,DWORD PTR [rsp+0x64]
   140009018:	mov    rax,r8
   14000901b:	lea    rbx,[rbp+0x1bf]
   140009022:	neg    rax
   140009025:	sbb    ecx,ecx
   140009027:	and    ecx,edx
   140009029:	mov    DWORD PTR [rsp+0x4c],ecx
   14000902d:	mov    ecx,edi
   14000902f:	dec    edi
   140009031:	test   ecx,ecx
   140009033:	jg     0x14000903a
   140009035:	test   r8,r8
   140009038:	je     0x140009059
   14000903a:	xor    edx,edx
   14000903c:	mov    rax,r8
   14000903f:	movsxd rcx,r9d
   140009042:	div    rcx
   140009045:	mov    r8,rax
   140009048:	lea    eax,[rdx+0x30]
   14000904b:	cmp    eax,0x39
   14000904e:	jle    0x140009052
   140009050:	add    eax,esi
   140009052:	mov    BYTE PTR [rbx],al
   140009054:	dec    rbx
   140009057:	jmp    0x14000902d
   140009059:	mov    esi,DWORD PTR [rsp+0x40]
   14000905d:	lea    rax,[rbp+0x1bf]
   140009064:	mov    DWORD PTR [rsp+0x44],edi
   140009068:	sub    eax,ebx
   14000906a:	inc    rbx
   14000906d:	mov    DWORD PTR [rsp+0x48],eax
   140009071:	test   r11d,r13d
   140009074:	je     0x140009191
   14000907a:	test   eax,eax
   14000907c:	je     0x140009087
   14000907e:	cmp    BYTE PTR [rbx],0x30
   140009081:	je     0x140009191
   140009087:	dec    rbx
   14000908a:	inc    DWORD PTR [rsp+0x48]
   14000908e:	mov    BYTE PTR [rbx],0x30
   140009091:	jmp    0x140009191
   140009096:	jne    0x1400090a8
   140009098:	cmp    r12b,0x67
   14000909c:	jne    0x1400090e1
   14000909e:	mov    DWORD PTR [rsp+0x44],0x1
   1400090a6:	jmp    0x1400090e1
   1400090a8:	cmp    edi,r11d
   1400090ab:	cmovg  edi,r11d
   1400090af:	mov    DWORD PTR [rsp+0x44],edi
   1400090b3:	cmp    edi,0xa3
   1400090b9:	jle    0x1400090e1
   1400090bb:	add    edi,0x15d
   1400090c1:	movsxd rcx,edi
   1400090c4:	call   0x1400067e0
   1400090c9:	mov    QWORD PTR [rbp-0x50],rax
   1400090cd:	test   rax,rax
   1400090d0:	je     0x1400090d9
   1400090d2:	mov    rbx,rax
   1400090d5:	mov    esi,edi
   1400090d7:	jmp    0x1400090e1
   1400090d9:	mov    DWORD PTR [rsp+0x44],0xa3
   1400090e1:	mov    rax,QWORD PTR [r15]
   1400090e4:	mov    rcx,QWORD PTR [rip+0x96e5]        # 0x1400127d0
   1400090eb:	add    r15,0x8
   1400090ef:	movsx  edi,r12b
   1400090f3:	movsxd rsi,esi
   1400090f6:	mov    QWORD PTR [rbp-0x48],rax
   1400090fa:	call   QWORD PTR [rip+0x4fb0]        # 0x14000e0b0
   140009100:	lea    rcx,[rbp-0x80]
   140009104:	mov    r9d,edi
   140009107:	mov    QWORD PTR [rsp+0x30],rcx
   14000910c:	mov    ecx,DWORD PTR [rsp+0x78]
   140009110:	mov    r8,rsi
   140009113:	mov    DWORD PTR [rsp+0x28],ecx
   140009117:	mov    ecx,DWORD PTR [rsp+0x44]
   14000911b:	mov    rdx,rbx
   14000911e:	mov    DWORD PTR [rsp+0x20],ecx
   140009122:	lea    rcx,[rbp-0x48]
   140009126:	call   rax
   140009128:	mov    edi,r13d
   14000912b:	and    edi,0x80
   140009131:	je     0x140009151
   140009133:	xor    eax,eax
   140009135:	cmp    DWORD PTR [rsp+0x44],eax
   140009139:	jne    0x140009151
   14000913b:	mov    rcx,QWORD PTR [rip+0x96a6]        # 0x1400127e8
   140009142:	call   QWORD PTR [rip+0x4f68]        # 0x14000e0b0
   140009148:	lea    rdx,[rbp-0x80]
   14000914c:	mov    rcx,rbx
   14000914f:	call   rax
   140009151:	cmp    r12b,0x67
   140009155:	jne    0x140009171
   140009157:	test   edi,edi
   140009159:	jne    0x140009171
   14000915b:	mov    rcx,QWORD PTR [rip+0x967e]        # 0x1400127e0
   140009162:	call   QWORD PTR [rip+0x4f48]        # 0x14000e0b0
   140009168:	lea    rdx,[rbp-0x80]
   14000916c:	mov    rcx,rbx
   14000916f:	call   rax
   140009171:	cmp    BYTE PTR [rbx],0x2d
   140009174:	jne    0x14000917e
   140009176:	bts    r13d,0x8
   14000917b:	inc    rbx
   14000917e:	mov    rcx,rbx
   140009181:	call   0x1400084d0
   140009186:	mov    esi,DWORD PTR [rsp+0x40]
   14000918a:	xor    r10d,r10d
   14000918d:	mov    DWORD PTR [rsp+0x48],eax
   140009191:	cmp    DWORD PTR [rsp+0x5c],r10d
   140009196:	jne    0x1400092f6
   14000919c:	test   r13b,0x40
   1400091a0:	je     0x1400091d3
   1400091a2:	bt     r13d,0x8
   1400091a7:	jae    0x1400091b0
   1400091a9:	mov    BYTE PTR [rsp+0x50],0x2d
   1400091ae:	jmp    0x1400091bb
   1400091b0:	test   r13b,0x1
   1400091b4:	je     0x1400091c6
   1400091b6:	mov    BYTE PTR [rsp+0x50],0x2b
   1400091bb:	mov    edi,0x1
   1400091c0:	mov    DWORD PTR [rsp+0x4c],edi
   1400091c4:	jmp    0x1400091d7
   1400091c6:	test   r13b,0x2
   1400091ca:	je     0x1400091d3
   1400091cc:	mov    BYTE PTR [rsp+0x50],0x20
   1400091d1:	jmp    0x1400091bb
   1400091d3:	mov    edi,DWORD PTR [rsp+0x4c]
   1400091d7:	mov    r12d,DWORD PTR [rsp+0x58]
   1400091dc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400091e1:	sub    r12d,DWORD PTR [rsp+0x48]
   1400091e6:	sub    r12d,edi
   1400091e9:	test   r13b,0xc
   1400091ed:	jne    0x140009201
   1400091ef:	lea    r9,[rsp+0x40]
   1400091f4:	mov    r8,rsi
   1400091f7:	mov    edx,r12d
   1400091fa:	mov    cl,0x20
   1400091fc:	call   0x1400089e8
   140009201:	mov    rax,QWORD PTR [rbp-0x60]
   140009205:	lea    r9,[rsp+0x40]
   14000920a:	lea    rcx,[rsp+0x50]
   14000920f:	mov    r8,rsi
   140009212:	mov    edx,edi
   140009214:	mov    QWORD PTR [rsp+0x20],rax
   140009219:	call   0x140008a3c
   14000921e:	test   r13b,0x8
   140009222:	je     0x14000923c
   140009224:	test   r13b,0x4
   140009228:	jne    0x14000923c
   14000922a:	lea    r9,[rsp+0x40]
   14000922f:	mov    r8,rsi
   140009232:	mov    edx,r12d
   140009235:	mov    cl,0x30
   140009237:	call   0x1400089e8
   14000923c:	mov    edi,DWORD PTR [rsp+0x48]
   140009240:	xor    eax,eax
   140009242:	cmp    DWORD PTR [rsp+0x54],eax
   140009246:	je     0x1400092af
   140009248:	test   edi,edi
   14000924a:	jle    0x1400092af
   14000924c:	mov    rsi,rbx
   14000924f:	movzx  r9d,WORD PTR [rsi]
   140009253:	lea    rdx,[rbp+0x1c0]
   14000925a:	lea    rcx,[rbp-0x58]
   14000925e:	mov    r8d,0x6
   140009264:	dec    edi
   140009266:	add    rsi,0x2
   14000926a:	call   0x14000c850
   14000926f:	xor    r10d,r10d
   140009272:	test   eax,eax
   140009274:	jne    0x1400092a5
   140009276:	mov    edx,DWORD PTR [rbp-0x58]
   140009279:	test   edx,edx
   14000927b:	je     0x1400092a5
   14000927d:	mov    rax,QWORD PTR [rbp-0x60]
   140009281:	mov    r8,QWORD PTR [rsp+0x70]
   140009286:	lea    r9,[rsp+0x40]
   14000928b:	lea    rcx,[rbp+0x1c0]
   140009292:	mov    QWORD PTR [rsp+0x20],rax
   140009297:	call   0x140008a3c
   14000929c:	xor    r10d,r10d
   14000929f:	test   edi,edi
   1400092a1:	jne    0x14000924f
   1400092a3:	jmp    0x1400092cd
   1400092a5:	mov    esi,r14d
   1400092a8:	mov    DWORD PTR [rsp+0x40],r14d
   1400092ad:	jmp    0x1400092d1
   1400092af:	mov    rax,QWORD PTR [rbp-0x60]
   1400092b3:	lea    r9,[rsp+0x40]
   1400092b8:	mov    r8,rsi
   1400092bb:	mov    edx,edi
   1400092bd:	mov    rcx,rbx
   1400092c0:	mov    QWORD PTR [rsp+0x20],rax
   1400092c5:	call   0x140008a3c
   1400092ca:	xor    r10d,r10d
   1400092cd:	mov    esi,DWORD PTR [rsp+0x40]
   1400092d1:	test   esi,esi
   1400092d3:	js     0x1400092f6
   1400092d5:	test   r13b,0x4
   1400092d9:	je     0x1400092f6
   1400092db:	mov    r8,QWORD PTR [rsp+0x70]
   1400092e0:	lea    r9,[rsp+0x40]
   1400092e5:	mov    edx,r12d
   1400092e8:	mov    cl,0x20
   1400092ea:	call   0x1400089e8
   1400092ef:	mov    esi,DWORD PTR [rsp+0x40]
   1400092f3:	xor    r10d,r10d
   1400092f6:	mov    rax,QWORD PTR [rbp-0x50]
   1400092fa:	test   rax,rax
   1400092fd:	je     0x14000930e
   1400092ff:	mov    rcx,rax
   140009302:	call   0x140001eb4
   140009307:	xor    r10d,r10d
   14000930a:	mov    QWORD PTR [rbp-0x50],r10
   14000930e:	mov    edi,DWORD PTR [rsp+0x44]
   140009312:	mov    rdx,QWORD PTR [rsp+0x68]
   140009317:	mov    r8d,DWORD PTR [rsp+0x60]
   14000931c:	mov    r11d,0x200
   140009322:	lea    r9,[rip+0xffffffffffff6cd7]        # 0x140000000
   140009329:	mov    r12b,BYTE PTR [rdx]
   14000932c:	test   r12b,r12b
   14000932f:	jne    0x140008c6a
   140009335:	test   r8d,r8d
   140009338:	je     0x140009344
   14000933a:	cmp    r8d,0x7
   14000933e:	jne    0x140008c07
   140009344:	cmp    BYTE PTR [rbp-0x68],r10b
   140009348:	je     0x140009355
   14000934a:	mov    rcx,QWORD PTR [rbp-0x70]
   14000934e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140009355:	mov    eax,esi
   140009357:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000935e:	xor    rcx,rsp
   140009361:	call   0x140001980
   140009366:	mov    rbx,QWORD PTR [rsp+0x320]
   14000936e:	add    rsp,0x2d0
   140009375:	pop    r15
   140009377:	pop    r14
   140009379:	pop    r13
   14000937b:	pop    r12
   14000937d:	pop    rdi
   14000937e:	pop    rsi
   14000937f:	pop    rbp
   140009380:	ret    
   140009381:	cmp    r12b,0x49
   140009385:	je     0x1400093c4
   140009387:	cmp    r12b,0x68
   14000938b:	je     0x1400093bb
   14000938d:	cmp    r12b,0x6c
   140009391:	je     0x1400093a0
   140009393:	cmp    r12b,0x77
   140009397:	jne    0x140009329
   140009399:	bts    r13d,0xb
   14000939e:	jmp    0x140009329
   1400093a0:	cmp    BYTE PTR [rdx],0x6c
   1400093a3:	jne    0x1400093b2
   1400093a5:	inc    rdx
   1400093a8:	bts    r13d,0xc
   1400093ad:	jmp    0x140009329
   1400093b2:	or     r13d,0x10
   1400093b6:	jmp    0x140009329
   1400093bb:	or     r13d,0x20
   1400093bf:	jmp    0x140009329
   1400093c4:	mov    al,BYTE PTR [rdx]
   1400093c6:	bts    r13d,0xf
   1400093cb:	cmp    al,0x36
   1400093cd:	jne    0x1400093e3
   1400093cf:	cmp    BYTE PTR [rdx+0x1],0x34
   1400093d3:	jne    0x1400093e3
   1400093d5:	add    rdx,0x2
   1400093d9:	bts    r13d,0xf
   1400093de:	jmp    0x140009329
   1400093e3:	cmp    al,0x33
   1400093e5:	jne    0x1400093fb
   1400093e7:	cmp    BYTE PTR [rdx+0x1],0x32
   1400093eb:	jne    0x1400093fb
   1400093ed:	add    rdx,0x2
   1400093f1:	btr    r13d,0xf
   1400093f6:	jmp    0x140009329
   1400093fb:	cmp    al,0x64
   1400093fd:	je     0x140009329
   140009403:	cmp    al,0x69
   140009405:	je     0x140009329
   14000940b:	cmp    al,0x6f
   14000940d:	je     0x140009329
   140009413:	cmp    al,0x75
   140009415:	je     0x140009329
   14000941b:	cmp    al,0x78
   14000941d:	je     0x140009329
   140009423:	cmp    al,0x58
   140009425:	je     0x140009329
   14000942b:	mov    DWORD PTR [rsp+0x60],r10d
   140009430:	lea    rdx,[rbp-0x80]
   140009434:	movzx  ecx,r12b
   140009438:	mov    DWORD PTR [rsp+0x54],r10d
   14000943d:	call   0x14000a3ac
   140009442:	xor    esi,esi
   140009444:	test   eax,eax
   140009446:	je     0x140009473
   140009448:	mov    rdx,QWORD PTR [rsp+0x70]
   14000944d:	lea    r8,[rsp+0x40]
   140009452:	mov    cl,r12b
   140009455:	call   0x1400089a0
   14000945a:	mov    rdx,QWORD PTR [rsp+0x68]
   14000945f:	mov    r12b,BYTE PTR [rdx]
   140009462:	inc    rdx
   140009465:	mov    QWORD PTR [rsp+0x68],rdx
   14000946a:	test   r12b,r12b
   14000946d:	je     0x14000958a
   140009473:	mov    rdx,QWORD PTR [rsp+0x70]
   140009478:	lea    r8,[rsp+0x40]
   14000947d:	mov    cl,r12b
   140009480:	call   0x1400089a0
   140009485:	mov    esi,DWORD PTR [rsp+0x40]
   140009489:	xor    r10d,r10d
   14000948c:	jmp    0x140009312
   140009491:	cmp    r12b,0x2a
   140009495:	jne    0x1400094b7
   140009497:	mov    edi,DWORD PTR [r15]
   14000949a:	add    r15,0x8
   14000949e:	mov    DWORD PTR [rsp+0x44],edi
   1400094a2:	test   edi,edi
   1400094a4:	jns    0x140009329
   1400094aa:	mov    edi,r14d
   1400094ad:	mov    DWORD PTR [rsp+0x44],r14d
   1400094b2:	jmp    0x140009329
   1400094b7:	lea    ecx,[rdi+rdi*4]
   1400094ba:	movsx  eax,r12b
   1400094be:	lea    edi,[rax+rcx*2-0x30]
   1400094c2:	mov    DWORD PTR [rsp+0x44],edi
   1400094c6:	jmp    0x140009329
   1400094cb:	mov    edi,r10d
   1400094ce:	mov    DWORD PTR [rsp+0x44],r10d
   1400094d3:	jmp    0x140009329
   1400094d8:	cmp    r12b,0x2a
   1400094dc:	jne    0x1400094f9
   1400094de:	mov    eax,DWORD PTR [r15]
   1400094e1:	add    r15,0x8
   1400094e5:	mov    DWORD PTR [rsp+0x58],eax
   1400094e9:	test   eax,eax
   1400094eb:	jns    0x140009329
   1400094f1:	or     r13d,0x4
   1400094f5:	neg    eax
   1400094f7:	jmp    0x140009508
   1400094f9:	mov    eax,DWORD PTR [rsp+0x58]
   1400094fd:	lea    ecx,[rax+rax*4]
   140009500:	movsx  eax,r12b
   140009504:	lea    eax,[rax+rcx*2-0x30]
   140009508:	mov    DWORD PTR [rsp+0x58],eax
   14000950c:	jmp    0x140009329
   140009511:	cmp    r12b,0x20
   140009515:	je     0x140009558
   140009517:	cmp    r12b,0x23
   14000951b:	je     0x14000954e
   14000951d:	cmp    r12b,0x2b
   140009521:	je     0x140009545
   140009523:	cmp    r12b,0x2d
   140009527:	je     0x14000953c
   140009529:	cmp    r12b,0x30
   14000952d:	jne    0x140009329
   140009533:	or     r13d,0x8
   140009537:	jmp    0x140009329
   14000953c:	or     r13d,0x4
   140009540:	jmp    0x140009329
   140009545:	or     r13d,0x1
   140009549:	jmp    0x140009329
   14000954e:	bts    r13d,0x7
   140009553:	jmp    0x140009329
   140009558:	or     r13d,0x2
   14000955c:	jmp    0x140009329
   140009561:	mov    DWORD PTR [rsp+0x78],r10d
   140009566:	mov    DWORD PTR [rsp+0x5c],r10d
   14000956b:	mov    DWORD PTR [rsp+0x58],r10d
   140009570:	mov    DWORD PTR [rsp+0x4c],r10d
   140009575:	mov    r13d,r10d
   140009578:	mov    edi,r14d
   14000957b:	mov    DWORD PTR [rsp+0x44],r14d
   140009580:	mov    DWORD PTR [rsp+0x54],r10d
   140009585:	jmp    0x140009329
   14000958a:	call   0x140003564
   14000958f:	mov    DWORD PTR [rax],0x16
   140009595:	call   0x1400034fc
   14000959a:	cmp    BYTE PTR [rbp-0x68],sil
   14000959e:	jmp    0x140008c1e
   1400095a3:	int3   
   1400095a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400095a9:	push   rdi
   1400095aa:	sub    rsp,0x20
   1400095ae:	movsxd rbx,ecx
   1400095b1:	mov    edi,r8d
   1400095b4:	mov    QWORD PTR [rsp+0x38],rdx
   1400095b9:	mov    ecx,ebx
   1400095bb:	call   0x14000b21c
   1400095c0:	cmp    rax,0xffffffffffffffff
   1400095c4:	jne    0x1400095d7
   1400095c6:	call   0x140003564
   1400095cb:	mov    DWORD PTR [rax],0x9
   1400095d1:	or     rax,0xffffffffffffffff
   1400095d5:	jmp    0x14000962e
   1400095d7:	mov    edx,DWORD PTR [rsp+0x38]
   1400095db:	lea    r8,[rsp+0x3c]
   1400095e0:	mov    r9d,edi
   1400095e3:	mov    rcx,rax
   1400095e6:	call   QWORD PTR [rip+0x4bcc]        # 0x14000e1b8
   1400095ec:	mov    DWORD PTR [rsp+0x38],eax
   1400095f0:	cmp    eax,0xffffffff
   1400095f3:	jne    0x140009608
   1400095f5:	call   QWORD PTR [rip+0x4a7d]        # 0x14000e078
   1400095fb:	test   eax,eax
   1400095fd:	je     0x140009608
   1400095ff:	mov    ecx,eax
   140009601:	call   0x1400035a4
   140009606:	jmp    0x1400095d1
   140009608:	mov    rcx,rbx
   14000960b:	mov    rax,rbx
   14000960e:	lea    rdx,[rip+0xb00b]        # 0x140014620
   140009615:	sar    rax,0x5
   140009619:	and    ecx,0x1f
   14000961c:	mov    rax,QWORD PTR [rdx+rax*8]
   140009620:	imul   rcx,rcx,0x58
   140009624:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140009629:	mov    rax,QWORD PTR [rsp+0x38]
   14000962e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009633:	add    rsp,0x20
   140009637:	pop    rdi
   140009638:	ret    
   140009639:	int3   
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	mov    QWORD PTR [rsp+0x10],rbx
   140009641:	mov    DWORD PTR [rsp+0x8],ecx
   140009645:	push   rsi
   140009646:	push   rdi
   140009647:	push   r12
   140009649:	push   r13
   14000964b:	push   r14
   14000964d:	sub    rsp,0x20
   140009651:	mov    esi,r8d
   140009654:	mov    r12,rdx
   140009657:	movsxd rdi,ecx
   14000965a:	cmp    edi,0xfffffffe
   14000965d:	jne    0x140009677
   14000965f:	call   0x140003584
   140009664:	and    DWORD PTR [rax],0x0
   140009667:	call   0x140003564
   14000966c:	mov    DWORD PTR [rax],0x9
   140009672:	jmp    0x140009709
   140009677:	test   ecx,ecx
   140009679:	js     0x1400096f1
   14000967b:	cmp    edi,DWORD PTR [rip+0xaf9b]        # 0x14001461c
   140009681:	jae    0x1400096f1
   140009683:	mov    rbx,rdi
   140009686:	mov    r13,rdi
   140009689:	sar    r13,0x5
   14000968d:	lea    r14,[rip+0xaf8c]        # 0x140014620
   140009694:	and    ebx,0x1f
   140009697:	imul   rbx,rbx,0x58
   14000969b:	mov    rax,QWORD PTR [r14+r13*8]
   14000969f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400096a4:	and    ecx,0x1
   1400096a7:	je     0x1400096f1
   1400096a9:	mov    ecx,edi
   1400096ab:	call   0x14000b290
   1400096b0:	nop
   1400096b1:	mov    rax,QWORD PTR [r14+r13*8]
   1400096b5:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400096ba:	je     0x1400096ce
   1400096bc:	mov    r8d,esi
   1400096bf:	mov    rdx,r12
   1400096c2:	mov    ecx,edi
   1400096c4:	call   0x1400095a4
   1400096c9:	mov    rbx,rax
   1400096cc:	jmp    0x1400096e5
   1400096ce:	call   0x140003564
   1400096d3:	mov    DWORD PTR [rax],0x9
   1400096d9:	call   0x140003584
   1400096de:	and    DWORD PTR [rax],0x0
   1400096e1:	or     rbx,0xffffffffffffffff
   1400096e5:	mov    ecx,edi
   1400096e7:	call   0x14000b338
   1400096ec:	mov    rax,rbx
   1400096ef:	jmp    0x14000970d
   1400096f1:	call   0x140003584
   1400096f6:	and    DWORD PTR [rax],0x0
   1400096f9:	call   0x140003564
   1400096fe:	mov    DWORD PTR [rax],0x9
   140009704:	call   0x1400034fc
   140009709:	or     rax,0xffffffffffffffff
   14000970d:	mov    rbx,QWORD PTR [rsp+0x58]
   140009712:	add    rsp,0x20
   140009716:	pop    r14
   140009718:	pop    r13
   14000971a:	pop    r12
   14000971c:	pop    rdi
   14000971d:	pop    rsi
   14000971e:	ret    
   14000971f:	int3   
   140009720:	mov    QWORD PTR [rsp+0x20],rbx
   140009725:	push   rbp
   140009726:	push   rsi
   140009727:	push   rdi
   140009728:	push   r12
   14000972a:	push   r13
   14000972c:	push   r14
   14000972e:	push   r15
   140009730:	lea    rbp,[rsp-0x1a30]
   140009738:	mov    eax,0x1b30
   14000973d:	call   0x14000bb90
   140009742:	sub    rsp,rax
   140009745:	mov    rax,QWORD PTR [rip+0x88bc]        # 0x140012008
   14000974c:	xor    rax,rsp
   14000974f:	mov    QWORD PTR [rbp+0x1a20],rax
   140009756:	xor    edi,edi
   140009758:	mov    r14d,r8d
   14000975b:	mov    r13,rdx
   14000975e:	and    DWORD PTR [rsp+0x44],edi
   140009762:	movsxd rbx,ecx
   140009765:	test   r8d,r8d
   140009768:	jne    0x140009771
   14000976a:	xor    eax,eax
   14000976c:	jmp    0x140009e56
   140009771:	test   rdx,rdx
   140009774:	jne    0x140009795
   140009776:	call   0x140003584
   14000977b:	and    DWORD PTR [rax],edi
   14000977d:	call   0x140003564
   140009782:	mov    DWORD PTR [rax],0x16
   140009788:	call   0x1400034fc
   14000978d:	or     eax,0xffffffff
   140009790:	jmp    0x140009e56
   140009795:	mov    r15,rbx
   140009798:	mov    r12,rbx
   14000979b:	lea    rax,[rip+0xae7e]        # 0x140014620
   1400097a2:	sar    r12,0x5
   1400097a6:	and    r15d,0x1f
   1400097aa:	mov    rcx,QWORD PTR [rax+r12*8]
   1400097ae:	mov    QWORD PTR [rsp+0x50],r12
   1400097b3:	imul   r15,r15,0x58
   1400097b7:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   1400097bc:	mov    QWORD PTR [rsp+0x60],r15
   1400097c1:	add    sil,sil
   1400097c4:	sar    sil,1
   1400097c7:	cmp    sil,0x2
   1400097cb:	je     0x1400097d3
   1400097cd:	cmp    sil,0x1
   1400097d1:	jne    0x1400097dc
   1400097d3:	mov    eax,r14d
   1400097d6:	not    eax
   1400097d8:	test   al,0x1
   1400097da:	je     0x140009776
   1400097dc:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   1400097e2:	je     0x1400097f1
   1400097e4:	xor    edx,edx
   1400097e6:	mov    ecx,ebx
   1400097e8:	lea    r8d,[rdx+0x2]
   1400097ec:	call   0x1400095a4
   1400097f1:	mov    ecx,ebx
   1400097f3:	call   0x140009fb4
   1400097f8:	test   eax,eax
   1400097fa:	je     0x140009aca
   140009800:	lea    rax,[rip+0xae19]        # 0x140014620
   140009807:	mov    rax,QWORD PTR [rax+r12*8]
   14000980b:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140009811:	je     0x140009aca
   140009817:	call   0x140003d18
   14000981c:	xor    ebx,ebx
   14000981e:	lea    rdx,[rsp+0x5c]
   140009823:	mov    rcx,QWORD PTR [rax+0xc0]
   14000982a:	lea    rax,[rip+0xadef]        # 0x140014620
   140009831:	cmp    DWORD PTR [rcx+0x14],ebx
   140009834:	mov    rcx,QWORD PTR [rax+r12*8]
   140009838:	mov    rcx,QWORD PTR [r15+rcx*1]
   14000983c:	sete   bl
   14000983f:	call   QWORD PTR [rip+0x49fb]        # 0x14000e240
   140009845:	test   eax,eax
   140009847:	je     0x140009aca
   14000984d:	test   ebx,ebx
   14000984f:	je     0x14000985a
   140009851:	test   sil,sil
   140009854:	je     0x140009aca
   14000985a:	call   QWORD PTR [rip+0x49d8]        # 0x14000e238
   140009860:	and    DWORD PTR [rsp+0x58],edi
   140009864:	mov    rbx,r13
   140009867:	mov    DWORD PTR [rsp+0x5c],eax
   14000986b:	test   r14d,r14d
   14000986e:	je     0x140009ac1
   140009874:	test   sil,sil
   140009877:	jne    0x140009a01
   14000987d:	mov    cl,BYTE PTR [rbx]
   14000987f:	xor    eax,eax
   140009881:	cmp    cl,0xa
   140009884:	sete   al
   140009887:	mov    DWORD PTR [rsp+0x4c],eax
   14000988b:	lea    rax,[rip+0xad8e]        # 0x140014620
   140009892:	mov    rdx,QWORD PTR [rax+r12*8]
   140009896:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14000989c:	je     0x1400098be
   14000989e:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   1400098a3:	mov    BYTE PTR [rsp+0x61],cl
   1400098a7:	mov    r8d,0x2
   1400098ad:	mov    BYTE PTR [rsp+0x60],al
   1400098b1:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   1400098b7:	lea    rdx,[rsp+0x60]
   1400098bc:	jmp    0x140009907
   1400098be:	movsx  ecx,cl
   1400098c1:	call   0x14000a3f4
   1400098c6:	test   eax,eax
   1400098c8:	je     0x1400098fe
   1400098ca:	mov    rax,r14
   1400098cd:	sub    rax,rbx
   1400098d0:	add    rax,r13
   1400098d3:	cmp    rax,0x1
   1400098d7:	jle    0x140009a8a
   1400098dd:	lea    rcx,[rsp+0x40]
   1400098e2:	mov    r8d,0x2
   1400098e8:	mov    rdx,rbx
   1400098eb:	call   0x14000a3a4
   1400098f0:	cmp    eax,0xffffffff
   1400098f3:	je     0x140009aab
   1400098f9:	inc    rbx
   1400098fc:	jmp    0x14000991a
   1400098fe:	mov    r8d,0x1
   140009904:	mov    rdx,rbx
   140009907:	lea    rcx,[rsp+0x40]
   14000990c:	call   0x14000a3a4
   140009911:	cmp    eax,0xffffffff
   140009914:	je     0x140009aab
   14000991a:	and    QWORD PTR [rsp+0x38],0x0
   140009920:	and    QWORD PTR [rsp+0x30],0x0
   140009926:	mov    ecx,DWORD PTR [rsp+0x5c]
   14000992a:	lea    rax,[rsp+0x60]
   14000992f:	lea    r8,[rsp+0x40]
   140009934:	mov    r9d,0x1
   14000993a:	xor    edx,edx
   14000993c:	mov    DWORD PTR [rsp+0x28],0x5
   140009944:	inc    rbx
   140009947:	mov    QWORD PTR [rsp+0x20],rax
   14000994c:	call   QWORD PTR [rip+0x487e]        # 0x14000e1d0
   140009952:	mov    r12d,eax
   140009955:	test   eax,eax
   140009957:	je     0x140009aab
   14000995d:	mov    rcx,QWORD PTR [rsp+0x50]
   140009962:	and    QWORD PTR [rsp+0x20],0x0
   140009968:	lea    rax,[rip+0xacb1]        # 0x140014620
   14000996f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140009973:	lea    r9,[rsp+0x58]
   140009978:	lea    rdx,[rsp+0x60]
   14000997d:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009981:	mov    r8d,r12d
   140009984:	call   QWORD PTR [rip+0x47f6]        # 0x14000e180
   14000998a:	test   eax,eax
   14000998c:	je     0x140009ab4
   140009992:	mov    edi,ebx
   140009994:	sub    edi,r13d
   140009997:	add    edi,DWORD PTR [rsp+0x44]
   14000999b:	cmp    DWORD PTR [rsp+0x58],r12d
   1400099a0:	jl     0x140009aab
   1400099a6:	cmp    DWORD PTR [rsp+0x4c],0x0
   1400099ab:	mov    r12,QWORD PTR [rsp+0x50]
   1400099b0:	je     0x140009a7b
   1400099b6:	and    QWORD PTR [rsp+0x20],0x0
   1400099bc:	lea    rax,[rip+0xac5d]        # 0x140014620
   1400099c3:	mov    BYTE PTR [rsp+0x60],0xd
   1400099c8:	mov    rcx,QWORD PTR [rax+r12*8]
   1400099cc:	lea    r9,[rsp+0x58]
   1400099d1:	lea    rdx,[rsp+0x60]
   1400099d6:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400099da:	mov    r8d,0x1
   1400099e0:	call   QWORD PTR [rip+0x479a]        # 0x14000e180
   1400099e6:	test   eax,eax
   1400099e8:	je     0x140009ab4
   1400099ee:	cmp    DWORD PTR [rsp+0x58],0x1
   1400099f3:	jl     0x140009aab
   1400099f9:	inc    DWORD PTR [rsp+0x44]
   1400099fd:	inc    edi
   1400099ff:	jmp    0x140009a7b
   140009a01:	cmp    sil,0x1
   140009a05:	je     0x140009a0d
   140009a07:	cmp    sil,0x2
   140009a0b:	jne    0x140009a2b
   140009a0d:	movzx  eax,WORD PTR [rbx]
   140009a10:	xor    r12d,r12d
   140009a13:	cmp    ax,0xa
   140009a17:	mov    WORD PTR [rsp+0x40],ax
   140009a1c:	sete   r12b
   140009a20:	add    rbx,0x2
   140009a24:	mov    DWORD PTR [rsp+0x4c],r12d
   140009a29:	jmp    0x140009a30
   140009a2b:	mov    r12d,DWORD PTR [rsp+0x4c]
   140009a30:	cmp    sil,0x1
   140009a34:	je     0x140009a3c
   140009a36:	cmp    sil,0x2
   140009a3a:	jne    0x140009a76
   140009a3c:	movzx  ecx,WORD PTR [rsp+0x40]
   140009a41:	call   0x14000c864
   140009a46:	cmp    ax,WORD PTR [rsp+0x40]
   140009a4b:	jne    0x140009ab4
   140009a4d:	add    edi,0x2
   140009a50:	test   r12d,r12d
   140009a53:	je     0x140009a76
   140009a55:	mov    r12d,0xd
   140009a5b:	mov    ecx,r12d
   140009a5e:	mov    WORD PTR [rsp+0x40],r12w
   140009a64:	call   0x14000c864
   140009a69:	cmp    ax,WORD PTR [rsp+0x40]
   140009a6e:	jne    0x140009ab4
   140009a70:	inc    edi
   140009a72:	inc    DWORD PTR [rsp+0x44]
   140009a76:	mov    r12,QWORD PTR [rsp+0x50]
   140009a7b:	mov    eax,ebx
   140009a7d:	sub    eax,r13d
   140009a80:	cmp    eax,r14d
   140009a83:	jae    0x140009aab
   140009a85:	jmp    0x140009874
   140009a8a:	mov    al,BYTE PTR [rbx]
   140009a8c:	lea    rdx,[rip+0xab8d]        # 0x140014620
   140009a93:	inc    edi
   140009a95:	mov    rcx,QWORD PTR [rdx+r12*8]
   140009a99:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140009a9e:	mov    rax,QWORD PTR [rdx+r12*8]
   140009aa2:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140009aab:	mov    ebx,DWORD PTR [rsp+0x4c]
   140009aaf:	jmp    0x140009dad
   140009ab4:	call   QWORD PTR [rip+0x45be]        # 0x14000e078
   140009aba:	mov    ebx,eax
   140009abc:	jmp    0x140009dad
   140009ac1:	mov    ebx,DWORD PTR [rsp+0x4c]
   140009ac5:	jmp    0x140009db5
   140009aca:	lea    rax,[rip+0xab4f]        # 0x140014620
   140009ad1:	mov    rcx,QWORD PTR [rax+r12*8]
   140009ad5:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140009adb:	je     0x140009ddf
   140009ae1:	xor    ebx,ebx
   140009ae3:	mov    r12,r13
   140009ae6:	test   sil,sil
   140009ae9:	jne    0x140009bba
   140009aef:	test   r14d,r14d
   140009af2:	je     0x140009e15
   140009af8:	lea    edx,[rbx+0xd]
   140009afb:	mov    r15d,DWORD PTR [rsp+0x44]
   140009b00:	lea    rsi,[rbp+0x620]
   140009b07:	xor    ecx,ecx
   140009b09:	mov    eax,r12d
   140009b0c:	sub    eax,r13d
   140009b0f:	cmp    eax,r14d
   140009b12:	jae    0x140009b3b
   140009b14:	mov    al,BYTE PTR [r12]
   140009b18:	inc    r12
   140009b1b:	cmp    al,0xa
   140009b1d:	jne    0x140009b2a
   140009b1f:	mov    BYTE PTR [rsi],dl
   140009b21:	inc    r15d
   140009b24:	inc    rsi
   140009b27:	inc    rcx
   140009b2a:	inc    rcx
   140009b2d:	mov    BYTE PTR [rsi],al
   140009b2f:	inc    rsi
   140009b32:	cmp    rcx,0x13ff
   140009b39:	jb     0x140009b09
   140009b3b:	and    QWORD PTR [rsp+0x20],rbx
   140009b40:	lea    rax,[rbp+0x620]
   140009b47:	mov    r8d,esi
   140009b4a:	sub    r8d,eax
   140009b4d:	mov    rax,QWORD PTR [rsp+0x50]
   140009b52:	lea    rcx,[rip+0xaac7]        # 0x140014620
   140009b59:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009b5d:	mov    DWORD PTR [rsp+0x44],r15d
   140009b62:	mov    r15,QWORD PTR [rsp+0x60]
   140009b67:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009b6b:	lea    r9,[rsp+0x48]
   140009b70:	lea    rdx,[rbp+0x620]
   140009b77:	call   QWORD PTR [rip+0x4603]        # 0x14000e180
   140009b7d:	test   eax,eax
   140009b7f:	je     0x140009ab4
   140009b85:	add    edi,DWORD PTR [rsp+0x48]
   140009b89:	lea    rax,[rbp+0x620]
   140009b90:	sub    rsi,rax
   140009b93:	movsxd rax,DWORD PTR [rsp+0x48]
   140009b98:	cmp    rax,rsi
   140009b9b:	jl     0x140009dad
   140009ba1:	mov    eax,r12d
   140009ba4:	mov    edx,0xd
   140009ba9:	sub    eax,r13d
   140009bac:	cmp    eax,r14d
   140009baf:	jb     0x140009afb
   140009bb5:	jmp    0x140009dad
   140009bba:	cmp    sil,0x2
   140009bbe:	jne    0x140009c9c
   140009bc4:	test   r14d,r14d
   140009bc7:	je     0x140009e15
   140009bcd:	mov    edx,0xd
   140009bd2:	mov    r15d,DWORD PTR [rsp+0x44]
   140009bd7:	lea    rsi,[rbp+0x620]
   140009bde:	xor    ecx,ecx
   140009be0:	mov    eax,r12d
   140009be3:	sub    eax,r13d
   140009be6:	cmp    eax,r14d
   140009be9:	jae    0x140009c1d
   140009beb:	movzx  eax,WORD PTR [r12]
   140009bf0:	add    r12,0x2
   140009bf4:	cmp    ax,0xa
   140009bf8:	jne    0x140009c09
   140009bfa:	mov    WORD PTR [rsi],dx
   140009bfd:	add    r15d,0x2
   140009c01:	add    rsi,0x2
   140009c05:	add    rcx,0x2
   140009c09:	add    rcx,0x2
   140009c0d:	mov    WORD PTR [rsi],ax
   140009c10:	add    rsi,0x2
   140009c14:	cmp    rcx,0x13fe
   140009c1b:	jb     0x140009be0
   140009c1d:	and    QWORD PTR [rsp+0x20],rbx
   140009c22:	lea    rax,[rbp+0x620]
   140009c29:	mov    r8d,esi
   140009c2c:	sub    r8d,eax
   140009c2f:	mov    rax,QWORD PTR [rsp+0x50]
   140009c34:	lea    rcx,[rip+0xa9e5]        # 0x140014620
   140009c3b:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009c3f:	mov    DWORD PTR [rsp+0x44],r15d
   140009c44:	mov    r15,QWORD PTR [rsp+0x60]
   140009c49:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009c4d:	lea    r9,[rsp+0x48]
   140009c52:	lea    rdx,[rbp+0x620]
   140009c59:	call   QWORD PTR [rip+0x4521]        # 0x14000e180
   140009c5f:	test   eax,eax
   140009c61:	je     0x140009ab4
   140009c67:	add    edi,DWORD PTR [rsp+0x48]
   140009c6b:	lea    rax,[rbp+0x620]
   140009c72:	sub    rsi,rax
   140009c75:	movsxd rax,DWORD PTR [rsp+0x48]
   140009c7a:	cmp    rax,rsi
   140009c7d:	jl     0x140009dad
   140009c83:	mov    eax,r12d
   140009c86:	mov    edx,0xd
   140009c8b:	sub    eax,r13d
   140009c8e:	cmp    eax,r14d
   140009c91:	jb     0x140009bd2
   140009c97:	jmp    0x140009dad
   140009c9c:	test   r14d,r14d
   140009c9f:	je     0x140009e15
   140009ca5:	mov    r8d,0xd
   140009cab:	lea    rcx,[rsp+0x70]
   140009cb0:	xor    edx,edx
   140009cb2:	mov    eax,r12d
   140009cb5:	sub    eax,r13d
   140009cb8:	cmp    eax,r14d
   140009cbb:	jae    0x140009cec
   140009cbd:	movzx  eax,WORD PTR [r12]
   140009cc2:	add    r12,0x2
   140009cc6:	cmp    ax,0xa
   140009cca:	jne    0x140009cd8
   140009ccc:	mov    WORD PTR [rcx],r8w
   140009cd0:	add    rcx,0x2
   140009cd4:	add    rdx,0x2
   140009cd8:	add    rdx,0x2
   140009cdc:	mov    WORD PTR [rcx],ax
   140009cdf:	add    rcx,0x2
   140009ce3:	cmp    rdx,0x6a8
   140009cea:	jb     0x140009cb2
   140009cec:	and    QWORD PTR [rsp+0x38],0x0
   140009cf2:	and    QWORD PTR [rsp+0x30],0x0
   140009cf8:	lea    rax,[rsp+0x70]
   140009cfd:	sub    ecx,eax
   140009cff:	lea    r8,[rsp+0x70]
   140009d04:	mov    DWORD PTR [rsp+0x28],0xd55
   140009d0c:	mov    eax,ecx
   140009d0e:	mov    ecx,0xfde9
   140009d13:	cdq    
   140009d14:	sub    eax,edx
   140009d16:	xor    edx,edx
   140009d18:	sar    eax,1
   140009d1a:	mov    r9d,eax
   140009d1d:	lea    rax,[rbp+0x620]
   140009d24:	mov    QWORD PTR [rsp+0x20],rax
   140009d29:	call   QWORD PTR [rip+0x44a1]        # 0x14000e1d0
   140009d2f:	mov    r15d,eax
   140009d32:	test   eax,eax
   140009d34:	je     0x140009dd5
   140009d3a:	xor    esi,esi
   140009d3c:	mov    rax,QWORD PTR [rsp+0x50]
   140009d41:	and    QWORD PTR [rsp+0x20],0x0
   140009d47:	movsxd rcx,esi
   140009d4a:	lea    rdx,[rbp+rcx*1+0x620]
   140009d52:	mov    r8d,r15d
   140009d55:	lea    rcx,[rip+0xa8c4]        # 0x140014620
   140009d5c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009d60:	mov    rax,QWORD PTR [rsp+0x60]
   140009d65:	lea    r9,[rsp+0x48]
   140009d6a:	mov    rcx,QWORD PTR [rax+rcx*1]
   140009d6e:	sub    r8d,esi
   140009d71:	call   QWORD PTR [rip+0x4409]        # 0x14000e180
   140009d77:	test   eax,eax
   140009d79:	je     0x140009d86
   140009d7b:	add    esi,DWORD PTR [rsp+0x48]
   140009d7f:	cmp    r15d,esi
   140009d82:	jg     0x140009d3c
   140009d84:	jmp    0x140009d8e
   140009d86:	call   QWORD PTR [rip+0x42ec]        # 0x14000e078
   140009d8c:	mov    ebx,eax
   140009d8e:	cmp    r15d,esi
   140009d91:	jg     0x140009da8
   140009d93:	mov    edi,r12d
   140009d96:	mov    r8d,0xd
   140009d9c:	sub    edi,r13d
   140009d9f:	cmp    edi,r14d
   140009da2:	jb     0x140009cab
   140009da8:	mov    r15,QWORD PTR [rsp+0x60]
   140009dad:	test   edi,edi
   140009daf:	jne    0x140009e50
   140009db5:	test   ebx,ebx
   140009db7:	je     0x140009e15
   140009db9:	cmp    ebx,0x5
   140009dbc:	jne    0x140009e09
   140009dbe:	call   0x140003564
   140009dc3:	mov    DWORD PTR [rax],0x9
   140009dc9:	call   0x140003584
   140009dce:	mov    DWORD PTR [rax],ebx
   140009dd0:	jmp    0x14000978d
   140009dd5:	call   QWORD PTR [rip+0x429d]        # 0x14000e078
   140009ddb:	mov    ebx,eax
   140009ddd:	jmp    0x140009da8
   140009ddf:	mov    rcx,QWORD PTR [r15+rcx*1]
   140009de3:	and    QWORD PTR [rsp+0x20],rdi
   140009de8:	lea    r9,[rsp+0x48]
   140009ded:	mov    r8d,r14d
   140009df0:	mov    rdx,r13
   140009df3:	call   QWORD PTR [rip+0x4387]        # 0x14000e180
   140009df9:	test   eax,eax
   140009dfb:	je     0x140009ab4
   140009e01:	mov    edi,DWORD PTR [rsp+0x48]
   140009e05:	xor    ebx,ebx
   140009e07:	jmp    0x140009dad
   140009e09:	mov    ecx,ebx
   140009e0b:	call   0x1400035a4
   140009e10:	jmp    0x14000978d
   140009e15:	mov    rax,QWORD PTR [rsp+0x50]
   140009e1a:	lea    rcx,[rip+0xa7ff]        # 0x140014620
   140009e21:	mov    rax,QWORD PTR [rcx+rax*8]
   140009e25:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140009e2b:	je     0x140009e38
   140009e2d:	cmp    BYTE PTR [r13+0x0],0x1a
   140009e32:	je     0x14000976a
   140009e38:	call   0x140003564
   140009e3d:	mov    DWORD PTR [rax],0x1c
   140009e43:	call   0x140003584
   140009e48:	and    DWORD PTR [rax],0x0
   140009e4b:	jmp    0x14000978d
   140009e50:	sub    edi,DWORD PTR [rsp+0x44]
   140009e54:	mov    eax,edi
   140009e56:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140009e5d:	xor    rcx,rsp
   140009e60:	call   0x140001980
   140009e65:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140009e6d:	add    rsp,0x1b30
   140009e74:	pop    r15
   140009e76:	pop    r14
   140009e78:	pop    r13
   140009e7a:	pop    r12
   140009e7c:	pop    rdi
   140009e7d:	pop    rsi
   140009e7e:	pop    rbp
   140009e7f:	ret    
   140009e80:	mov    QWORD PTR [rsp+0x10],rbx
   140009e85:	mov    DWORD PTR [rsp+0x8],ecx
   140009e89:	push   rsi
   140009e8a:	push   rdi
   140009e8b:	push   r12
   140009e8d:	push   r13
   140009e8f:	push   r14
   140009e91:	sub    rsp,0x20
   140009e95:	mov    esi,r8d
   140009e98:	mov    r12,rdx
   140009e9b:	movsxd rdi,ecx
   140009e9e:	cmp    edi,0xfffffffe
   140009ea1:	jne    0x140009ebb
   140009ea3:	call   0x140003584
   140009ea8:	and    DWORD PTR [rax],0x0
   140009eab:	call   0x140003564
   140009eb0:	mov    DWORD PTR [rax],0x9
   140009eb6:	jmp    0x140009f4a
   140009ebb:	test   ecx,ecx
   140009ebd:	js     0x140009f32
   140009ebf:	cmp    edi,DWORD PTR [rip+0xa757]        # 0x14001461c
   140009ec5:	jae    0x140009f32
   140009ec7:	mov    rbx,rdi
   140009eca:	mov    r13,rdi
   140009ecd:	sar    r13,0x5
   140009ed1:	lea    r14,[rip+0xa748]        # 0x140014620
   140009ed8:	and    ebx,0x1f
   140009edb:	imul   rbx,rbx,0x58
   140009edf:	mov    rax,QWORD PTR [r14+r13*8]
   140009ee3:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140009ee8:	and    ecx,0x1
   140009eeb:	je     0x140009f32
   140009eed:	mov    ecx,edi
   140009eef:	call   0x14000b290
   140009ef4:	nop
   140009ef5:	mov    rax,QWORD PTR [r14+r13*8]
   140009ef9:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140009efe:	je     0x140009f11
   140009f00:	mov    r8d,esi
   140009f03:	mov    rdx,r12
   140009f06:	mov    ecx,edi
   140009f08:	call   0x140009720
   140009f0d:	mov    ebx,eax
   140009f0f:	jmp    0x140009f27
   140009f11:	call   0x140003564
   140009f16:	mov    DWORD PTR [rax],0x9
   140009f1c:	call   0x140003584
   140009f21:	and    DWORD PTR [rax],0x0
   140009f24:	or     ebx,0xffffffff
   140009f27:	mov    ecx,edi
   140009f29:	call   0x14000b338
   140009f2e:	mov    eax,ebx
   140009f30:	jmp    0x140009f4d
   140009f32:	call   0x140003584
   140009f37:	and    DWORD PTR [rax],0x0
   140009f3a:	call   0x140003564
   140009f3f:	mov    DWORD PTR [rax],0x9
   140009f45:	call   0x1400034fc
   140009f4a:	or     eax,0xffffffff
   140009f4d:	mov    rbx,QWORD PTR [rsp+0x58]
   140009f52:	add    rsp,0x20
   140009f56:	pop    r14
   140009f58:	pop    r13
   140009f5a:	pop    r12
   140009f5c:	pop    rdi
   140009f5d:	pop    rsi
   140009f5e:	ret    
   140009f5f:	int3   
   140009f60:	rex push rbx
   140009f62:	sub    rsp,0x20
   140009f66:	inc    DWORD PTR [rip+0x9a34]        # 0x1400139a0
   140009f6c:	mov    rbx,rcx
   140009f6f:	mov    ecx,0x1000
   140009f74:	call   0x1400067e0
   140009f79:	mov    QWORD PTR [rbx+0x10],rax
   140009f7d:	test   rax,rax
   140009f80:	je     0x140009f8f
   140009f82:	or     DWORD PTR [rbx+0x18],0x8
   140009f86:	mov    DWORD PTR [rbx+0x24],0x1000
   140009f8d:	jmp    0x140009fa2
   140009f8f:	or     DWORD PTR [rbx+0x18],0x4
   140009f93:	lea    rax,[rbx+0x20]
   140009f97:	mov    DWORD PTR [rbx+0x24],0x2
   140009f9e:	mov    QWORD PTR [rbx+0x10],rax
   140009fa2:	mov    rax,QWORD PTR [rbx+0x10]
   140009fa6:	and    DWORD PTR [rbx+0x8],0x0
   140009faa:	mov    QWORD PTR [rbx],rax
   140009fad:	add    rsp,0x20
   140009fb1:	pop    rbx
   140009fb2:	ret    
   140009fb3:	int3   
   140009fb4:	sub    rsp,0x28
   140009fb8:	cmp    ecx,0xfffffffe
   140009fbb:	jne    0x140009fca
   140009fbd:	call   0x140003564
   140009fc2:	mov    DWORD PTR [rax],0x9
   140009fc8:	jmp    0x14000a00c
   140009fca:	test   ecx,ecx
   140009fcc:	js     0x140009ffc
   140009fce:	cmp    ecx,DWORD PTR [rip+0xa648]        # 0x14001461c
   140009fd4:	jae    0x140009ffc
   140009fd6:	movsxd rcx,ecx
   140009fd9:	lea    rdx,[rip+0xa640]        # 0x140014620
   140009fe0:	mov    rax,rcx
   140009fe3:	and    ecx,0x1f
   140009fe6:	sar    rax,0x5
   140009fea:	imul   rcx,rcx,0x58
   140009fee:	mov    rax,QWORD PTR [rdx+rax*8]
   140009ff2:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140009ff7:	and    eax,0x40
   140009ffa:	jmp    0x14000a00e
   140009ffc:	call   0x140003564
   14000a001:	mov    DWORD PTR [rax],0x9
   14000a007:	call   0x1400034fc
   14000a00c:	xor    eax,eax
   14000a00e:	add    rsp,0x28
   14000a012:	ret    
   14000a013:	int3   
   14000a014:	mov    QWORD PTR [rsp+0x18],rbx
   14000a019:	mov    QWORD PTR [rsp+0x20],rbp
   14000a01e:	push   rsi
   14000a01f:	push   rdi
   14000a020:	push   r12
   14000a022:	sub    rsp,0x40
   14000a026:	mov    rax,QWORD PTR [rip+0x7fdb]        # 0x140012008
   14000a02d:	xor    rax,rsp
   14000a030:	mov    QWORD PTR [rsp+0x30],rax
   14000a035:	test   BYTE PTR [rdx+0x18],0x40
   14000a039:	mov    rdi,rdx
   14000a03c:	movzx  esi,cx
   14000a03f:	jne    0x14000a1ca
   14000a045:	mov    rcx,rdx
   14000a048:	call   0x14000571c
   14000a04d:	lea    rbp,[rip+0x88ac]        # 0x140012900
   14000a054:	lea    r12,[rip+0xa5c5]        # 0x140014620
   14000a05b:	cmp    eax,0xffffffff
   14000a05e:	je     0x14000a095
   14000a060:	mov    rcx,rdi
   14000a063:	call   0x14000571c
   14000a068:	cmp    eax,0xfffffffe
   14000a06b:	je     0x14000a095
   14000a06d:	mov    rcx,rdi
   14000a070:	call   0x14000571c
   14000a075:	mov    rcx,rdi
   14000a078:	movsxd rbx,eax
   14000a07b:	sar    rbx,0x5
   14000a07f:	call   0x14000571c
   14000a084:	mov    r11d,eax
   14000a087:	and    r11d,0x1f
   14000a08b:	imul   r11,r11,0x58
   14000a08f:	add    r11,QWORD PTR [r12+rbx*8]
   14000a093:	jmp    0x14000a098
   14000a095:	mov    r11,rbp
   14000a098:	mov    al,BYTE PTR [r11+0x38]
   14000a09c:	and    al,0x7f
   14000a09e:	cmp    al,0x2
   14000a0a0:	je     0x14000a1b3
   14000a0a6:	mov    rcx,rdi
   14000a0a9:	call   0x14000571c
   14000a0ae:	cmp    eax,0xffffffff
   14000a0b1:	je     0x14000a0e8
   14000a0b3:	mov    rcx,rdi
   14000a0b6:	call   0x14000571c
   14000a0bb:	cmp    eax,0xfffffffe
   14000a0be:	je     0x14000a0e8
   14000a0c0:	mov    rcx,rdi
   14000a0c3:	call   0x14000571c
   14000a0c8:	mov    rcx,rdi
   14000a0cb:	movsxd rbx,eax
   14000a0ce:	sar    rbx,0x5
   14000a0d2:	call   0x14000571c
   14000a0d7:	mov    r11d,eax
   14000a0da:	and    r11d,0x1f
   14000a0de:	imul   r11,r11,0x58
   14000a0e2:	add    r11,QWORD PTR [r12+rbx*8]
   14000a0e6:	jmp    0x14000a0eb
   14000a0e8:	mov    r11,rbp
   14000a0eb:	mov    al,BYTE PTR [r11+0x38]
   14000a0ef:	and    al,0x7f
   14000a0f1:	cmp    al,0x1
   14000a0f3:	je     0x14000a1b3
   14000a0f9:	mov    rcx,rdi
   14000a0fc:	call   0x14000571c
   14000a101:	cmp    eax,0xffffffff
   14000a104:	je     0x14000a137
   14000a106:	mov    rcx,rdi
   14000a109:	call   0x14000571c
   14000a10e:	cmp    eax,0xfffffffe
   14000a111:	je     0x14000a137
   14000a113:	mov    rcx,rdi
   14000a116:	call   0x14000571c
   14000a11b:	mov    rcx,rdi
   14000a11e:	movsxd rbx,eax
   14000a121:	sar    rbx,0x5
   14000a125:	call   0x14000571c
   14000a12a:	mov    ebp,eax
   14000a12c:	and    ebp,0x1f
   14000a12f:	imul   rbp,rbp,0x58
   14000a133:	add    rbp,QWORD PTR [r12+rbx*8]
   14000a137:	test   BYTE PTR [rbp+0x8],0x80
   14000a13b:	je     0x14000a1ca
   14000a141:	lea    rdx,[rsp+0x24]
   14000a146:	lea    rcx,[rsp+0x20]
   14000a14b:	movzx  r9d,si
   14000a14f:	mov    r8d,0x5
   14000a155:	call   0x14000c850
   14000a15a:	xor    ebx,ebx
   14000a15c:	test   eax,eax
   14000a15e:	je     0x14000a16a
   14000a160:	mov    eax,0xffff
   14000a165:	jmp    0x14000a1f3
   14000a16a:	cmp    DWORD PTR [rsp+0x20],ebx
   14000a16e:	jle    0x14000a1ae
   14000a170:	lea    rbp,[rsp+0x24]
   14000a175:	dec    DWORD PTR [rdi+0x8]
   14000a178:	js     0x14000a190
   14000a17a:	mov    rcx,QWORD PTR [rdi]
   14000a17d:	mov    al,BYTE PTR [rbp+0x0]
   14000a180:	mov    BYTE PTR [rcx],al
   14000a182:	mov    rax,QWORD PTR [rdi]
   14000a185:	movzx  ecx,BYTE PTR [rax]
   14000a188:	inc    rax
   14000a18b:	mov    QWORD PTR [rdi],rax
   14000a18e:	jmp    0x14000a19e
   14000a190:	movsx  ecx,BYTE PTR [rbp+0x0]
   14000a194:	mov    rdx,rdi
   14000a197:	call   0x1400047e8
   14000a19c:	mov    ecx,eax
   14000a19e:	cmp    ecx,0xffffffff
   14000a1a1:	je     0x14000a160
   14000a1a3:	inc    ebx
   14000a1a5:	inc    rbp
   14000a1a8:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000a1ac:	jl     0x14000a175
   14000a1ae:	movzx  eax,si
   14000a1b1:	jmp    0x14000a1f3
   14000a1b3:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000a1b7:	add    rcx,0xfffffffffffffffe
   14000a1bb:	mov    DWORD PTR [rdi+0x8],ecx
   14000a1be:	test   ecx,ecx
   14000a1c0:	js     0x14000a1e8
   14000a1c2:	mov    rcx,QWORD PTR [rdi]
   14000a1c5:	mov    WORD PTR [rcx],si
   14000a1c8:	jmp    0x14000a1df
   14000a1ca:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a1ce:	add    rax,0xfffffffffffffffe
   14000a1d2:	mov    DWORD PTR [rdi+0x8],eax
   14000a1d5:	test   eax,eax
   14000a1d7:	js     0x14000a1e8
   14000a1d9:	mov    rax,QWORD PTR [rdi]
   14000a1dc:	mov    WORD PTR [rax],si
   14000a1df:	add    QWORD PTR [rdi],0x2
   14000a1e3:	movzx  eax,si
   14000a1e6:	jmp    0x14000a1f3
   14000a1e8:	mov    rdx,rdi
   14000a1eb:	movzx  ecx,si
   14000a1ee:	call   0x14000c8c0
   14000a1f3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a1f8:	xor    rcx,rsp
   14000a1fb:	call   0x140001980
   14000a200:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a205:	mov    rbp,QWORD PTR [rsp+0x78]
   14000a20a:	add    rsp,0x40
   14000a20e:	pop    r12
   14000a210:	pop    rdi
   14000a211:	pop    rsi
   14000a212:	ret    
   14000a213:	int3   
   14000a214:	mov    rcx,QWORD PTR [rip+0x7ded]        # 0x140012008
   14000a21b:	xor    eax,eax
   14000a21d:	or     rcx,0x1
   14000a221:	cmp    QWORD PTR [rip+0xa1a0],rcx        # 0x1400143c8
   14000a228:	sete   al
   14000a22b:	ret    
   14000a22c:	mov    rax,rsp
   14000a22f:	mov    QWORD PTR [rax+0x8],rbx
   14000a233:	mov    QWORD PTR [rax+0x10],rsi
   14000a237:	mov    QWORD PTR [rax+0x18],rdi
   14000a23b:	mov    QWORD PTR [rax+0x20],r12
   14000a23f:	push   rbp
   14000a240:	mov    rbp,rsp
   14000a243:	sub    rsp,0x50
   14000a247:	xor    r12d,r12d
   14000a24a:	mov    rsi,r8
   14000a24d:	mov    rdi,rdx
   14000a250:	mov    rbx,rcx
   14000a253:	test   rdx,rdx
   14000a256:	je     0x14000a26b
   14000a258:	test   r8,r8
   14000a25b:	je     0x14000a26b
   14000a25d:	cmp    BYTE PTR [rdx],r12b
   14000a260:	jne    0x14000a287
   14000a262:	test   rcx,rcx
   14000a265:	je     0x14000a26b
   14000a267:	mov    WORD PTR [rcx],r12w
   14000a26b:	xor    eax,eax
   14000a26d:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a272:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a277:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a27c:	mov    r12,QWORD PTR [rsp+0x78]
   14000a281:	add    rsp,0x50
   14000a285:	pop    rbp
   14000a286:	ret    
   14000a287:	lea    rcx,[rbp-0x20]
   14000a28b:	mov    rdx,r9
   14000a28e:	call   0x140004978
   14000a293:	mov    r11,QWORD PTR [rbp-0x20]
   14000a297:	cmp    DWORD PTR [r11+0x14],r12d
   14000a29b:	jne    0x14000a2c0
   14000a29d:	test   rbx,rbx
   14000a2a0:	je     0x14000a2a8
   14000a2a2:	movzx  eax,BYTE PTR [rdi]
   14000a2a5:	mov    WORD PTR [rbx],ax
   14000a2a8:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a2ac:	je     0x14000a2b9
   14000a2ae:	mov    rax,QWORD PTR [rbp-0x10]
   14000a2b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a2b9:	mov    eax,0x1
   14000a2be:	jmp    0x14000a26d
   14000a2c0:	movzx  ecx,BYTE PTR [rdi]
   14000a2c3:	lea    rdx,[rbp-0x20]
   14000a2c7:	call   0x14000a3ac
   14000a2cc:	test   eax,eax
   14000a2ce:	je     0x14000a36b
   14000a2d4:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a2d8:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000a2df:	cmp    r9d,0x1
   14000a2e3:	jle    0x14000a315
   14000a2e5:	cmp    esi,r9d
   14000a2e8:	jl     0x14000a315
   14000a2ea:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a2ed:	mov    eax,r12d
   14000a2f0:	test   rbx,rbx
   14000a2f3:	setne  al
   14000a2f6:	mov    r8,rdi
   14000a2f9:	mov    edx,0x9
   14000a2fe:	mov    DWORD PTR [rsp+0x28],eax
   14000a302:	mov    QWORD PTR [rsp+0x20],rbx
   14000a307:	call   QWORD PTR [rip+0x3d53]        # 0x14000e060
   14000a30d:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a311:	test   eax,eax
   14000a313:	jne    0x14000a327
   14000a315:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000a31c:	cmp    rsi,rax
   14000a31f:	jb     0x14000a347
   14000a321:	cmp    BYTE PTR [rdi+0x1],r12b
   14000a325:	je     0x14000a347
   14000a327:	mov    eax,DWORD PTR [rcx+0x10c]
   14000a32d:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a331:	je     0x14000a26d
   14000a337:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a33b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a342:	jmp    0x14000a26d
   14000a347:	call   0x140003564
   14000a34c:	mov    DWORD PTR [rax],0x2a
   14000a352:	cmp    BYTE PTR [rbp-0x8],r12b
   14000a356:	je     0x14000a363
   14000a358:	mov    rax,QWORD PTR [rbp-0x10]
   14000a35c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a363:	or     eax,0xffffffff
   14000a366:	jmp    0x14000a26d
   14000a36b:	mov    eax,r12d
   14000a36e:	mov    r9d,0x1
   14000a374:	test   rbx,rbx
   14000a377:	setne  al
   14000a37a:	lea    edx,[r9+0x8]
   14000a37e:	mov    r8,rdi
   14000a381:	mov    DWORD PTR [rsp+0x28],eax
   14000a385:	mov    rax,QWORD PTR [rbp-0x20]
   14000a389:	mov    QWORD PTR [rsp+0x20],rbx
   14000a38e:	mov    ecx,DWORD PTR [rax+0x4]
   14000a391:	call   QWORD PTR [rip+0x3cc9]        # 0x14000e060
   14000a397:	test   eax,eax
   14000a399:	jne    0x14000a2a8
   14000a39f:	jmp    0x14000a347
   14000a3a1:	int3   
   14000a3a2:	int3   
   14000a3a3:	int3   
   14000a3a4:	xor    r9d,r9d
   14000a3a7:	jmp    0x14000a22c
   14000a3ac:	rex push rbx
   14000a3ae:	sub    rsp,0x40
   14000a3b2:	mov    ebx,ecx
   14000a3b4:	lea    rcx,[rsp+0x20]
   14000a3b9:	call   0x140004978
   14000a3be:	mov    rax,QWORD PTR [rsp+0x20]
   14000a3c3:	movzx  r11d,bl
   14000a3c7:	mov    rcx,QWORD PTR [rax+0x140]
   14000a3ce:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a3d3:	and    eax,0x8000
   14000a3d8:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a3dd:	je     0x14000a3eb
   14000a3df:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a3e4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a3eb:	add    rsp,0x40
   14000a3ef:	pop    rbx
   14000a3f0:	ret    
   14000a3f1:	int3   
   14000a3f2:	int3   
   14000a3f3:	int3   
   14000a3f4:	rex push rbx
   14000a3f6:	sub    rsp,0x40
   14000a3fa:	mov    ebx,ecx
   14000a3fc:	lea    rcx,[rsp+0x20]
   14000a401:	xor    edx,edx
   14000a403:	call   0x140004978
   14000a408:	mov    rax,QWORD PTR [rsp+0x20]
   14000a40d:	movzx  r11d,bl
   14000a411:	mov    rcx,QWORD PTR [rax+0x140]
   14000a418:	movzx  eax,WORD PTR [rcx+r11*2]
   14000a41d:	and    eax,0x8000
   14000a422:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a427:	je     0x14000a435
   14000a429:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a42e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a435:	add    rsp,0x40
   14000a439:	pop    rbx
   14000a43a:	ret    
   14000a43b:	int3   
   14000a43c:	rex push rbx
   14000a43e:	sub    rsp,0x20
   14000a442:	test   BYTE PTR [rdx+0x18],0x40
   14000a446:	mov    rbx,r8
   14000a449:	je     0x14000a457
   14000a44b:	cmp    QWORD PTR [rdx+0x10],0x0
   14000a450:	jne    0x14000a457
   14000a452:	inc    DWORD PTR [r8]
   14000a455:	jmp    0x14000a46d
   14000a457:	call   0x14000a014
   14000a45c:	mov    ecx,0xffff
   14000a461:	cmp    ax,cx
   14000a464:	jne    0x14000a46b
   14000a466:	or     DWORD PTR [rbx],0xffffffff
   14000a469:	jmp    0x14000a46d
   14000a46b:	inc    DWORD PTR [rbx]
   14000a46d:	add    rsp,0x20
   14000a471:	pop    rbx
   14000a472:	ret    
   14000a473:	int3   
   14000a474:	test   edx,edx
   14000a476:	jle    0x14000a4c4
   14000a478:	mov    QWORD PTR [rsp+0x8],rbx
   14000a47d:	mov    QWORD PTR [rsp+0x10],rbp
   14000a482:	mov    QWORD PTR [rsp+0x18],rsi
   14000a487:	push   rdi
   14000a488:	sub    rsp,0x20
   14000a48c:	mov    rdi,r9
   14000a48f:	mov    rsi,r8
   14000a492:	mov    ebx,edx
   14000a494:	movzx  ebp,cx
   14000a497:	mov    r8,rdi
   14000a49a:	mov    rdx,rsi
   14000a49d:	movzx  ecx,bp
   14000a4a0:	dec    ebx
   14000a4a2:	call   0x14000a43c
   14000a4a7:	cmp    DWORD PTR [rdi],0xffffffff
   14000a4aa:	je     0x14000a4b0
   14000a4ac:	test   ebx,ebx
   14000a4ae:	jg     0x14000a497
   14000a4b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a4b5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a4ba:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a4bf:	add    rsp,0x20
   14000a4c3:	pop    rdi
   14000a4c4:	ret    
   14000a4c5:	int3   
   14000a4c6:	int3   
   14000a4c7:	int3   
   14000a4c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4cd:	mov    QWORD PTR [rsp+0x10],rbp
   14000a4d2:	mov    QWORD PTR [rsp+0x18],rsi
   14000a4d7:	push   rdi
   14000a4d8:	push   r12
   14000a4da:	push   r13
   14000a4dc:	sub    rsp,0x20
   14000a4e0:	test   BYTE PTR [r8+0x18],0x40
   14000a4e5:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a4ea:	mov    rdi,r9
   14000a4ed:	mov    r12d,DWORD PTR [rbx]
   14000a4f0:	mov    rbp,r8
   14000a4f3:	mov    esi,edx
   14000a4f5:	mov    r13,rcx
   14000a4f8:	je     0x14000a506
   14000a4fa:	cmp    QWORD PTR [r8+0x10],0x0
   14000a4ff:	jne    0x14000a506
   14000a501:	add    DWORD PTR [r9],edx
   14000a504:	jmp    0x14000a549
   14000a506:	and    DWORD PTR [rbx],0x0
   14000a509:	test   edx,edx
   14000a50b:	jle    0x14000a546
   14000a50d:	movzx  ecx,WORD PTR [r13+0x0]
   14000a512:	mov    r8,rdi
   14000a515:	mov    rdx,rbp
   14000a518:	dec    esi
   14000a51a:	call   0x14000a43c
   14000a51f:	add    r13,0x2
   14000a523:	cmp    DWORD PTR [rdi],0xffffffff
   14000a526:	jne    0x14000a53d
   14000a528:	cmp    DWORD PTR [rbx],0x2a
   14000a52b:	jne    0x14000a541
   14000a52d:	mov    ecx,0x3f
   14000a532:	mov    r8,rdi
   14000a535:	mov    rdx,rbp
   14000a538:	call   0x14000a43c
   14000a53d:	test   esi,esi
   14000a53f:	jg     0x14000a50d
   14000a541:	cmp    DWORD PTR [rbx],0x0
   14000a544:	jne    0x14000a549
   14000a546:	mov    DWORD PTR [rbx],r12d
   14000a549:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a54e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a553:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a558:	add    rsp,0x20
   14000a55c:	pop    r13
   14000a55e:	pop    r12
   14000a560:	pop    rdi
   14000a561:	ret    
   14000a562:	int3   
   14000a563:	int3   
   14000a564:	mov    QWORD PTR [rsp+0x18],rbx
   14000a569:	push   rbp
   14000a56a:	push   rsi
   14000a56b:	push   rdi
   14000a56c:	push   r12
   14000a56e:	push   r13
   14000a570:	push   r14
   14000a572:	push   r15
   14000a574:	lea    rbp,[rsp-0x3e0]
   14000a57c:	sub    rsp,0x4e0
   14000a583:	mov    rax,QWORD PTR [rip+0x7a7e]        # 0x140012008
   14000a58a:	xor    rax,rsp
   14000a58d:	mov    QWORD PTR [rbp+0x3d0],rax
   14000a594:	xor    eax,eax
   14000a596:	mov    rbx,rcx
   14000a599:	mov    QWORD PTR [rsp+0x78],rcx
   14000a59e:	mov    QWORD PTR [rbp-0x80],rdx
   14000a5a2:	lea    rcx,[rbp-0x70]
   14000a5a6:	mov    rdx,r8
   14000a5a9:	mov    r14,r9
   14000a5ac:	mov    QWORD PTR [rsp+0x50],r9
   14000a5b1:	mov    DWORD PTR [rsp+0x70],eax
   14000a5b5:	mov    r12d,eax
   14000a5b8:	mov    DWORD PTR [rsp+0x58],eax
   14000a5bc:	mov    edi,eax
   14000a5be:	mov    DWORD PTR [rsp+0x48],eax
   14000a5c2:	mov    DWORD PTR [rsp+0x4c],eax
   14000a5c6:	mov    DWORD PTR [rsp+0x6c],eax
   14000a5ca:	mov    DWORD PTR [rsp+0x44],eax
   14000a5ce:	call   0x140004978
   14000a5d3:	call   0x140003564
   14000a5d8:	xor    r10d,r10d
   14000a5db:	mov    QWORD PTR [rbp-0x48],rax
   14000a5df:	test   rbx,rbx
   14000a5e2:	jne    0x14000a610
   14000a5e4:	call   0x140003564
   14000a5e9:	mov    DWORD PTR [rax],0x16
   14000a5ef:	call   0x1400034fc
   14000a5f4:	xor    r11d,r11d
   14000a5f7:	cmp    BYTE PTR [rbp-0x58],r11b
   14000a5fb:	je     0x14000a608
   14000a5fd:	mov    rax,QWORD PTR [rbp-0x60]
   14000a601:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a608:	or     eax,0xffffffff
   14000a60b:	jmp    0x14000b06c
   14000a610:	mov    r8,QWORD PTR [rbp-0x80]
   14000a614:	test   r8,r8
   14000a617:	je     0x14000a5e4
   14000a619:	movzx  r13d,WORD PTR [r8]
   14000a61d:	mov    edx,r10d
   14000a620:	mov    r15d,r10d
   14000a623:	mov    r9d,r10d
   14000a626:	mov    QWORD PTR [rbp-0x50],r10
   14000a62a:	mov    DWORD PTR [rsp+0x40],edx
   14000a62e:	test   r13w,r13w
   14000a632:	je     0x14000b059
   14000a638:	mov    rbx,QWORD PTR [rbp-0x40]
   14000a63c:	or     esi,0xffffffff
   14000a63f:	lea    ecx,[rsi+0x59]
   14000a642:	lea    r11d,[rsi+0x21]
   14000a646:	add    r8,0x2
   14000a64a:	mov    QWORD PTR [rbp-0x80],r8
   14000a64e:	test   edx,edx
   14000a650:	js     0x14000b04e
   14000a656:	movzx  eax,r13w
   14000a65a:	sub    ax,r11w
   14000a65e:	cmp    ax,cx
   14000a661:	ja     0x14000a678
   14000a663:	lea    rcx,[rip+0x55d6]        # 0x14000fc40
   14000a66a:	movzx  eax,r13w
   14000a66e:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000a673:	and    ecx,0xf
   14000a676:	jmp    0x14000a67b
   14000a678:	mov    ecx,r10d
   14000a67b:	movsxd rax,ecx
   14000a67e:	lea    rcx,[rax+rax*8]
   14000a682:	movsxd rax,r9d
   14000a685:	add    rcx,rax
   14000a688:	lea    rax,[rip+0x55b1]        # 0x14000fc40
   14000a68f:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14000a694:	shr    r9d,0x4
   14000a698:	mov    DWORD PTR [rsp+0x68],r9d
   14000a69d:	cmp    r9d,0x8
   14000a6a1:	je     0x14000b096
   14000a6a7:	mov    ecx,r9d
   14000a6aa:	test   r9d,r9d
   14000a6ad:	je     0x14000aefd
   14000a6b3:	dec    ecx
   14000a6b5:	je     0x14000b008
   14000a6bb:	dec    ecx
   14000a6bd:	je     0x14000afbb
   14000a6c3:	dec    ecx
   14000a6c5:	je     0x14000af70
   14000a6cb:	dec    ecx
   14000a6cd:	je     0x14000af63
   14000a6d3:	dec    ecx
   14000a6d5:	je     0x14000af20
   14000a6db:	dec    ecx
   14000a6dd:	je     0x14000ae0a
   14000a6e3:	dec    ecx
   14000a6e5:	jne    0x14000b03b
   14000a6eb:	movzx  eax,r13w
   14000a6ef:	mov    ecx,0x64
   14000a6f4:	cmp    eax,ecx
   14000a6f6:	jg     0x14000a90e
   14000a6fc:	je     0x14000aa37
   14000a702:	cmp    eax,0x41
   14000a705:	je     0x14000a8d7
   14000a70b:	cmp    eax,0x43
   14000a70e:	je     0x14000a865
   14000a714:	cmp    eax,0x45
   14000a717:	je     0x14000a8d7
   14000a71d:	cmp    eax,0x47
   14000a720:	je     0x14000a8d7
   14000a726:	cmp    eax,0x53
   14000a729:	je     0x14000a7f0
   14000a72f:	cmp    eax,0x58
   14000a732:	je     0x14000a9b3
   14000a738:	cmp    eax,0x5a
   14000a73b:	je     0x14000a78c
   14000a73d:	cmp    eax,0x61
   14000a740:	je     0x14000a8e2
   14000a746:	cmp    eax,0x63
   14000a749:	je     0x14000a871
   14000a74f:	mov    r13d,DWORD PTR [rsp+0x44]
   14000a754:	mov    edi,0x2d
   14000a759:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000a75e:	jne    0x14000adc1
   14000a764:	test   r12b,0x40
   14000a768:	je     0x14000ac9d
   14000a76e:	bt     r12d,0x8
   14000a773:	jae    0x14000ac6f
   14000a779:	mov    WORD PTR [rsp+0x5c],di
   14000a77e:	mov    edi,0x1
   14000a783:	mov    DWORD PTR [rsp+0x4c],edi
   14000a787:	jmp    0x14000aca1
   14000a78c:	mov    rax,QWORD PTR [r14]
   14000a78f:	add    r14,0x8
   14000a793:	mov    QWORD PTR [rsp+0x50],r14
   14000a798:	test   rax,rax
   14000a79b:	je     0x14000a7d6
   14000a79d:	mov    rbx,QWORD PTR [rax+0x8]
   14000a7a1:	test   rbx,rbx
   14000a7a4:	je     0x14000a7d6
   14000a7a6:	mov    edi,0x2d
   14000a7ab:	bt     r12d,0xb
   14000a7b0:	jae    0x14000a7c8
   14000a7b2:	movsx  eax,WORD PTR [rax]
   14000a7b5:	lea    r13d,[rdi-0x2c]
   14000a7b9:	cdq    
   14000a7ba:	mov    DWORD PTR [rsp+0x44],r13d
   14000a7bf:	sub    eax,edx
   14000a7c1:	sar    eax,1
   14000a7c3:	mov    r15d,eax
   14000a7c6:	jmp    0x14000a759
   14000a7c8:	movsx  r15d,WORD PTR [rax]
   14000a7cc:	mov    r13d,r10d
   14000a7cf:	mov    DWORD PTR [rsp+0x44],r10d
   14000a7d4:	jmp    0x14000a759
   14000a7d6:	mov    rbx,QWORD PTR [rip+0x8af3]        # 0x1400132d0
   14000a7dd:	mov    rcx,rbx
   14000a7e0:	call   0x1400084d0
   14000a7e5:	xor    r10d,r10d
   14000a7e8:	mov    r15,rax
   14000a7eb:	jmp    0x14000a74f
   14000a7f0:	test   r12d,0x830
   14000a7f7:	jne    0x14000a7fc
   14000a7f9:	or     r12d,r11d
   14000a7fc:	cmp    DWORD PTR [rsp+0x48],esi
   14000a800:	mov    rbx,QWORD PTR [r14]
   14000a803:	mov    eax,0x7fffffff
   14000a808:	cmove  edi,eax
   14000a80b:	add    r14,0x8
   14000a80f:	mov    QWORD PTR [rsp+0x50],r14
   14000a814:	test   r11b,r12b
   14000a817:	je     0x14000a970
   14000a81d:	test   rbx,rbx
   14000a820:	mov    r15d,r10d
   14000a823:	cmove  rbx,QWORD PTR [rip+0x8aa5]        # 0x1400132d0
   14000a82b:	mov    rsi,rbx
   14000a82e:	test   edi,edi
   14000a830:	jle    0x14000a74f
   14000a836:	cmp    BYTE PTR [rsi],r10b
   14000a839:	je     0x14000a74f
   14000a83f:	movzx  ecx,BYTE PTR [rsi]
   14000a842:	lea    rdx,[rbp-0x70]
   14000a846:	call   0x14000a3ac
   14000a84b:	xor    r10d,r10d
   14000a84e:	test   eax,eax
   14000a850:	je     0x14000a855
   14000a852:	inc    rsi
   14000a855:	inc    r15d
   14000a858:	inc    rsi
   14000a85b:	cmp    r15d,edi
   14000a85e:	jl     0x14000a836
   14000a860:	jmp    0x14000a74f
   14000a865:	test   r12d,0x830
   14000a86c:	jne    0x14000a871
   14000a86e:	or     r12d,r11d
   14000a871:	movzx  eax,WORD PTR [r14]
   14000a875:	add    r14,0x8
   14000a879:	mov    r13d,0x1
   14000a87f:	mov    WORD PTR [rsp+0x60],ax
   14000a884:	mov    DWORD PTR [rsp+0x44],r13d
   14000a889:	mov    QWORD PTR [rsp+0x50],r14
   14000a88e:	test   r11b,r12b
   14000a891:	je     0x14000a8c7
   14000a893:	mov    BYTE PTR [rsp+0x64],al
   14000a897:	mov    rax,QWORD PTR [rbp-0x70]
   14000a89b:	mov    BYTE PTR [rsp+0x65],r10b
   14000a8a0:	movsxd r8,DWORD PTR [rax+0x10c]
   14000a8a7:	lea    r9,[rbp-0x70]
   14000a8ab:	lea    rdx,[rsp+0x64]
   14000a8b0:	lea    rcx,[rbp-0x30]
   14000a8b4:	call   0x14000a22c
   14000a8b9:	xor    r10d,r10d
   14000a8bc:	test   eax,eax
   14000a8be:	jns    0x14000a8cb
   14000a8c0:	mov    DWORD PTR [rsp+0x6c],r13d
   14000a8c5:	jmp    0x14000a8cb
   14000a8c7:	mov    WORD PTR [rbp-0x30],ax
   14000a8cb:	lea    rbx,[rbp-0x30]
   14000a8cf:	mov    r15d,r13d
   14000a8d2:	jmp    0x14000a754
   14000a8d7:	mov    DWORD PTR [rbp-0x78],0x1
   14000a8de:	add    r13w,r11w
   14000a8e2:	mov    ecx,0x67
   14000a8e7:	mov    eax,0x200
   14000a8ec:	or     r12d,0x40
   14000a8f0:	lea    rbx,[rbp-0x30]
   14000a8f4:	mov    esi,eax
   14000a8f6:	test   edi,edi
   14000a8f8:	jns    0x14000ab5a
   14000a8fe:	mov    r15d,0x6
   14000a904:	mov    DWORD PTR [rsp+0x48],r15d
   14000a909:	jmp    0x14000abab
   14000a90e:	cmp    eax,0x65
   14000a911:	jl     0x14000a74f
   14000a917:	mov    ecx,0x67
   14000a91c:	cmp    eax,ecx
   14000a91e:	jle    0x14000a8e7
   14000a920:	mov    ecx,0x69
   14000a925:	cmp    eax,ecx
   14000a927:	je     0x14000aa37
   14000a92d:	cmp    eax,0x6e
   14000a930:	je     0x14000a9fa
   14000a936:	mov    ecx,0x6f
   14000a93b:	cmp    eax,ecx
   14000a93d:	je     0x14000a9e5
   14000a943:	cmp    eax,0x70
   14000a946:	je     0x14000a9a9
   14000a948:	cmp    eax,0x73
   14000a94b:	je     0x14000a7fc
   14000a951:	mov    ecx,0x75
   14000a956:	cmp    eax,ecx
   14000a958:	je     0x14000aa3b
   14000a95e:	mov    ecx,0x78
   14000a963:	cmp    eax,ecx
   14000a965:	jne    0x14000ac60
   14000a96b:	lea    eax,[rcx-0x51]
   14000a96e:	jmp    0x14000a9b8
   14000a970:	test   rbx,rbx
   14000a973:	mov    r13d,0x1
   14000a979:	cmove  rbx,QWORD PTR [rip+0x8957]        # 0x1400132d8
   14000a981:	mov    DWORD PTR [rsp+0x44],r13d
   14000a986:	mov    rax,rbx
   14000a989:	jmp    0x14000a997
   14000a98b:	dec    edi
   14000a98d:	cmp    WORD PTR [rax],r10w
   14000a991:	je     0x14000a99b
   14000a993:	add    rax,0x2
   14000a997:	test   edi,edi
   14000a999:	jne    0x14000a98b
   14000a99b:	sub    rax,rbx
   14000a99e:	sar    rax,1
   14000a9a1:	mov    r15d,eax
   14000a9a4:	jmp    0x14000a754
   14000a9a9:	mov    edi,0x10
   14000a9ae:	bts    r12d,0xf
   14000a9b3:	mov    eax,0x7
   14000a9b8:	mov    r9d,0x10
   14000a9be:	mov    DWORD PTR [rsp+0x70],eax
   14000a9c2:	mov    esi,0x200
   14000a9c7:	lea    r13d,[r9+0x20]
   14000a9cb:	test   r12b,r12b
   14000a9ce:	jns    0x14000aa4c
   14000a9d0:	add    ax,0x51
   14000a9d4:	mov    WORD PTR [rsp+0x5c],r13w
   14000a9da:	lea    edx,[r9-0xe]
   14000a9de:	mov    WORD PTR [rsp+0x5e],ax
   14000a9e3:	jmp    0x14000aa50
   14000a9e5:	mov    r9d,0x8
   14000a9eb:	test   r12b,r12b
   14000a9ee:	jns    0x14000aa41
   14000a9f0:	mov    esi,0x200
   14000a9f5:	or     r12d,esi
   14000a9f8:	jmp    0x14000aa46
   14000a9fa:	mov    rdi,QWORD PTR [r14]
   14000a9fd:	add    r14,0x8
   14000aa01:	mov    QWORD PTR [rsp+0x50],r14
   14000aa06:	call   0x14000a214
   14000aa0b:	xor    r10d,r10d
   14000aa0e:	test   eax,eax
   14000aa10:	je     0x14000b096
   14000aa16:	mov    eax,DWORD PTR [rsp+0x40]
   14000aa1a:	lea    r11d,[r10+0x20]
   14000aa1e:	test   r11b,r12b
   14000aa21:	je     0x14000aa28
   14000aa23:	mov    WORD PTR [rdi],ax
   14000aa26:	jmp    0x14000aa2a
   14000aa28:	mov    DWORD PTR [rdi],eax
   14000aa2a:	mov    DWORD PTR [rsp+0x6c],0x1
   14000aa32:	jmp    0x14000adc7
   14000aa37:	or     r12d,0x40
   14000aa3b:	mov    r9d,0xa
   14000aa41:	mov    esi,0x200
   14000aa46:	mov    r13d,0x30
   14000aa4c:	mov    edx,DWORD PTR [rsp+0x4c]
   14000aa50:	mov    eax,0x8000
   14000aa55:	test   eax,r12d
   14000aa58:	je     0x14000aa63
   14000aa5a:	mov    r8,QWORD PTR [r14]
   14000aa5d:	add    r14,0x8
   14000aa61:	jmp    0x14000aa9c
   14000aa63:	bt     r12d,0xc
   14000aa68:	jb     0x14000aa5a
   14000aa6a:	add    r14,0x8
   14000aa6e:	test   r11b,r12b
   14000aa71:	je     0x14000aa8c
   14000aa73:	mov    QWORD PTR [rsp+0x50],r14
   14000aa78:	test   r12b,0x40
   14000aa7c:	je     0x14000aa85
   14000aa7e:	movsx  r8,WORD PTR [r14-0x8]
   14000aa83:	jmp    0x14000aaa1
   14000aa85:	movzx  r8d,WORD PTR [r14-0x8]
   14000aa8a:	jmp    0x14000aaa1
   14000aa8c:	test   r12b,0x40
   14000aa90:	je     0x14000aa98
   14000aa92:	movsxd r8,DWORD PTR [r14-0x8]
   14000aa96:	jmp    0x14000aa9c
   14000aa98:	mov    r8d,DWORD PTR [r14-0x8]
   14000aa9c:	mov    QWORD PTR [rsp+0x50],r14
   14000aaa1:	test   r12b,0x40
   14000aaa5:	je     0x14000aab4
   14000aaa7:	test   r8,r8
   14000aaaa:	jns    0x14000aab4
   14000aaac:	neg    r8
   14000aaaf:	bts    r12d,0x8
   14000aab4:	test   eax,r12d
   14000aab7:	jne    0x14000aac3
   14000aab9:	bt     r12d,0xc
   14000aabe:	jb     0x14000aac3
   14000aac0:	mov    r8d,r8d
   14000aac3:	test   edi,edi
   14000aac5:	jns    0x14000aace
   14000aac7:	mov    edi,0x1
   14000aacc:	jmp    0x14000aad7
   14000aace:	and    r12d,0xfffffff7
   14000aad2:	cmp    edi,esi
   14000aad4:	cmovg  edi,esi
   14000aad7:	mov    r14d,DWORD PTR [rsp+0x70]
   14000aadc:	mov    rax,r8
   14000aadf:	lea    rbx,[rbp+0x1cf]
   14000aae6:	neg    rax
   14000aae9:	sbb    ecx,ecx
   14000aaeb:	and    ecx,edx
   14000aaed:	mov    DWORD PTR [rsp+0x4c],ecx
   14000aaf1:	mov    ecx,edi
   14000aaf3:	dec    edi
   14000aaf5:	test   ecx,ecx
   14000aaf7:	jg     0x14000aafe
   14000aaf9:	test   r8,r8
   14000aafc:	je     0x14000ab1e
   14000aafe:	xor    edx,edx
   14000ab00:	mov    rax,r8
   14000ab03:	movsxd rcx,r9d
   14000ab06:	div    rcx
   14000ab09:	mov    r8,rax
   14000ab0c:	lea    eax,[rdx+0x30]
   14000ab0f:	cmp    eax,0x39
   14000ab12:	jle    0x14000ab17
   14000ab14:	add    eax,r14d
   14000ab17:	mov    BYTE PTR [rbx],al
   14000ab19:	dec    rbx
   14000ab1c:	jmp    0x14000aaf1
   14000ab1e:	mov    r14,QWORD PTR [rsp+0x50]
   14000ab23:	lea    rax,[rbp+0x1cf]
   14000ab2a:	mov    DWORD PTR [rsp+0x48],edi
   14000ab2e:	sub    eax,ebx
   14000ab30:	inc    rbx
   14000ab33:	mov    r15d,eax
   14000ab36:	test   esi,r12d
   14000ab39:	je     0x14000a74f
   14000ab3f:	test   eax,eax
   14000ab41:	je     0x14000ab4c
   14000ab43:	cmp    BYTE PTR [rbx],r13b
   14000ab46:	je     0x14000a74f
   14000ab4c:	dec    rbx
   14000ab4f:	inc    r15d
   14000ab52:	mov    BYTE PTR [rbx],r13b
   14000ab55:	jmp    0x14000a74f
   14000ab5a:	jne    0x14000ab6d
   14000ab5c:	cmp    r13w,cx
   14000ab60:	jne    0x14000aba1
   14000ab62:	mov    r15d,0x1
   14000ab68:	jmp    0x14000a904
   14000ab6d:	cmp    edi,eax
   14000ab6f:	mov    r15d,0xa3
   14000ab75:	cmovg  edi,eax
   14000ab78:	mov    DWORD PTR [rsp+0x48],edi
   14000ab7c:	cmp    edi,r15d
   14000ab7f:	jle    0x14000aba8
   14000ab81:	add    edi,0x15d
   14000ab87:	movsxd rcx,edi
   14000ab8a:	call   0x1400067e0
   14000ab8f:	mov    QWORD PTR [rbp-0x50],rax
   14000ab93:	test   rax,rax
   14000ab96:	je     0x14000a904
   14000ab9c:	mov    rbx,rax
   14000ab9f:	mov    esi,edi
   14000aba1:	mov    r15d,DWORD PTR [rsp+0x48]
   14000aba6:	jmp    0x14000abab
   14000aba8:	mov    r15d,edi
   14000abab:	mov    rax,QWORD PTR [r14]
   14000abae:	mov    rcx,QWORD PTR [rip+0x7c1b]        # 0x1400127d0
   14000abb5:	add    r14,0x8
   14000abb9:	mov    QWORD PTR [rsp+0x50],r14
   14000abbe:	movsx  edi,r13b
   14000abc2:	movsxd rsi,esi
   14000abc5:	mov    QWORD PTR [rbp-0x40],rax
   14000abc9:	call   QWORD PTR [rip+0x34e1]        # 0x14000e0b0
   14000abcf:	lea    rcx,[rbp-0x70]
   14000abd3:	mov    QWORD PTR [rsp+0x30],rcx
   14000abd8:	mov    ecx,DWORD PTR [rbp-0x78]
   14000abdb:	mov    r9d,edi
   14000abde:	mov    DWORD PTR [rsp+0x28],ecx
   14000abe2:	lea    rcx,[rbp-0x40]
   14000abe6:	mov    r8,rsi
   14000abe9:	mov    rdx,rbx
   14000abec:	mov    DWORD PTR [rsp+0x20],r15d
   14000abf1:	call   rax
   14000abf3:	mov    edi,r12d
   14000abf6:	and    edi,0x80
   14000abfc:	je     0x14000ac19
   14000abfe:	test   r15d,r15d
   14000ac01:	jne    0x14000ac19
   14000ac03:	mov    rcx,QWORD PTR [rip+0x7bde]        # 0x1400127e8
   14000ac0a:	call   QWORD PTR [rip+0x34a0]        # 0x14000e0b0
   14000ac10:	lea    rdx,[rbp-0x70]
   14000ac14:	mov    rcx,rbx
   14000ac17:	call   rax
   14000ac19:	mov    ecx,0x67
   14000ac1e:	cmp    r13w,cx
   14000ac22:	jne    0x14000ac3e
   14000ac24:	test   edi,edi
   14000ac26:	jne    0x14000ac3e
   14000ac28:	mov    rcx,QWORD PTR [rip+0x7bb1]        # 0x1400127e0
   14000ac2f:	call   QWORD PTR [rip+0x347b]        # 0x14000e0b0
   14000ac35:	lea    rdx,[rbp-0x70]
   14000ac39:	mov    rcx,rbx
   14000ac3c:	call   rax
   14000ac3e:	mov    edi,0x2d
   14000ac43:	cmp    BYTE PTR [rbx],dil
   14000ac46:	jne    0x14000ac50
   14000ac48:	bts    r12d,0x8
   14000ac4d:	inc    rbx
   14000ac50:	mov    rcx,rbx
   14000ac53:	call   0x1400084d0
   14000ac58:	xor    r10d,r10d
   14000ac5b:	mov    r15d,eax
   14000ac5e:	jmp    0x14000ac65
   14000ac60:	mov    edi,0x2d
   14000ac65:	mov    r13d,DWORD PTR [rsp+0x44]
   14000ac6a:	jmp    0x14000a759
   14000ac6f:	test   r12b,0x1
   14000ac73:	je     0x14000ac84
   14000ac75:	mov    eax,0x2b
   14000ac7a:	mov    WORD PTR [rsp+0x5c],ax
   14000ac7f:	jmp    0x14000a77e
   14000ac84:	test   r12b,0x2
   14000ac88:	je     0x14000ac9d
   14000ac8a:	mov    eax,0x20
   14000ac8f:	mov    WORD PTR [rsp+0x5c],ax
   14000ac94:	lea    edi,[rax-0x1f]
   14000ac97:	mov    DWORD PTR [rsp+0x4c],edi
   14000ac9b:	jmp    0x14000aca6
   14000ac9d:	mov    edi,DWORD PTR [rsp+0x4c]
   14000aca1:	mov    eax,0x20
   14000aca6:	mov    r14d,DWORD PTR [rsp+0x58]
   14000acab:	mov    rsi,QWORD PTR [rsp+0x78]
   14000acb0:	sub    r14d,r15d
   14000acb3:	sub    r14d,edi
   14000acb6:	test   r12b,0xc
   14000acba:	jne    0x14000acce
   14000acbc:	lea    r9,[rsp+0x40]
   14000acc1:	mov    ecx,eax
   14000acc3:	mov    r8,rsi
   14000acc6:	mov    edx,r14d
   14000acc9:	call   0x14000a474
   14000acce:	mov    rax,QWORD PTR [rbp-0x48]
   14000acd2:	lea    r9,[rsp+0x40]
   14000acd7:	lea    rcx,[rsp+0x5c]
   14000acdc:	mov    r8,rsi
   14000acdf:	mov    edx,edi
   14000ace1:	mov    QWORD PTR [rsp+0x20],rax
   14000ace6:	call   0x14000a4c8
   14000aceb:	test   r12b,0x8
   14000acef:	je     0x14000ad0c
   14000acf1:	test   r12b,0x4
   14000acf5:	jne    0x14000ad0c
   14000acf7:	lea    r9,[rsp+0x40]
   14000acfc:	mov    ecx,0x30
   14000ad01:	mov    r8,rsi
   14000ad04:	mov    edx,r14d
   14000ad07:	call   0x14000a474
   14000ad0c:	test   r13d,r13d
   14000ad0f:	jne    0x14000ad77
   14000ad11:	test   r15d,r15d
   14000ad14:	jle    0x14000ad77
   14000ad16:	mov    rdi,rbx
   14000ad19:	mov    esi,r15d
   14000ad1c:	mov    rax,QWORD PTR [rbp-0x70]
   14000ad20:	lea    r9,[rbp-0x70]
   14000ad24:	lea    rcx,[rsp+0x60]
   14000ad29:	movsxd r8,DWORD PTR [rax+0x10c]
   14000ad30:	mov    rdx,rdi
   14000ad33:	dec    esi
   14000ad35:	call   0x14000a22c
   14000ad3a:	xor    r10d,r10d
   14000ad3d:	movsxd r13,eax
   14000ad40:	test   eax,eax
   14000ad42:	jle    0x14000ad69
   14000ad44:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ad49:	movzx  ecx,WORD PTR [rsp+0x60]
   14000ad4e:	lea    r8,[rsp+0x40]
   14000ad53:	call   0x14000a43c
   14000ad58:	add    rdi,r13
   14000ad5b:	xor    r10d,r10d
   14000ad5e:	test   esi,esi
   14000ad60:	jg     0x14000ad1c
   14000ad62:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ad67:	jmp    0x14000ad96
   14000ad69:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ad6e:	or     edx,0xffffffff
   14000ad71:	mov    DWORD PTR [rsp+0x40],edx
   14000ad75:	jmp    0x14000ad9a
   14000ad77:	mov    rax,QWORD PTR [rbp-0x48]
   14000ad7b:	lea    r9,[rsp+0x40]
   14000ad80:	mov    r8,rsi
   14000ad83:	mov    edx,r15d
   14000ad86:	mov    rcx,rbx
   14000ad89:	mov    QWORD PTR [rsp+0x20],rax
   14000ad8e:	call   0x14000a4c8
   14000ad93:	xor    r10d,r10d
   14000ad96:	mov    edx,DWORD PTR [rsp+0x40]
   14000ad9a:	test   edx,edx
   14000ad9c:	js     0x14000adfd
   14000ad9e:	test   r12b,0x4
   14000ada2:	je     0x14000adfd
   14000ada4:	lea    r9,[rsp+0x40]
   14000ada9:	mov    ecx,0x20
   14000adae:	mov    r8,rsi
   14000adb1:	mov    edx,r14d
   14000adb4:	call   0x14000a474
   14000adb9:	mov    r14,QWORD PTR [rsp+0x50]
   14000adbe:	xor    r10d,r10d
   14000adc1:	mov    r11d,0x20
   14000adc7:	mov    edx,DWORD PTR [rsp+0x40]
   14000adcb:	mov    rax,QWORD PTR [rbp-0x50]
   14000adcf:	test   rax,rax
   14000add2:	je     0x14000b02b
   14000add8:	mov    rcx,rax
   14000addb:	call   0x140001eb4
   14000ade0:	mov    edi,DWORD PTR [rsp+0x48]
   14000ade4:	xor    r10d,r10d
   14000ade7:	mov    QWORD PTR [rbp-0x50],r10
   14000adeb:	or     esi,0xffffffff
   14000adee:	mov    edx,DWORD PTR [rsp+0x40]
   14000adf2:	mov    r11d,0x20
   14000adf8:	jmp    0x14000b032
   14000adfd:	mov    r14,QWORD PTR [rsp+0x50]
   14000ae02:	mov    r11d,0x20
   14000ae08:	jmp    0x14000adcb
   14000ae0a:	movzx  eax,r13w
   14000ae0e:	cmp    eax,0x49
   14000ae11:	je     0x14000ae63
   14000ae13:	cmp    eax,0x68
   14000ae16:	je     0x14000ae5b
   14000ae18:	mov    ecx,0x6c
   14000ae1d:	cmp    eax,ecx
   14000ae1f:	je     0x14000ae39
   14000ae21:	mov    ecx,0x58
   14000ae26:	cmp    eax,0x77
   14000ae29:	jne    0x14000b040
   14000ae2f:	bts    r12d,0xb
   14000ae34:	jmp    0x14000b040
   14000ae39:	cmp    WORD PTR [r8],cx
   14000ae3d:	mov    ecx,0x58
   14000ae42:	jne    0x14000ae52
   14000ae44:	add    r8,0x2
   14000ae48:	bts    r12d,0xc
   14000ae4d:	jmp    0x14000b040
   14000ae52:	or     r12d,0x10
   14000ae56:	jmp    0x14000b040
   14000ae5b:	or     r12d,r11d
   14000ae5e:	jmp    0x14000b03b
   14000ae63:	bts    r12d,0xf
   14000ae68:	cmp    WORD PTR [r8],0x36
   14000ae6d:	jne    0x14000ae85
   14000ae6f:	cmp    WORD PTR [r8+0x2],0x34
   14000ae75:	jne    0x14000ae85
   14000ae77:	add    r8,0x4
   14000ae7b:	bts    r12d,0xf
   14000ae80:	jmp    0x14000b03b
   14000ae85:	cmp    WORD PTR [r8],0x33
   14000ae8a:	jne    0x14000aea2
   14000ae8c:	cmp    WORD PTR [r8+0x2],0x32
   14000ae92:	jne    0x14000aea2
   14000ae94:	add    r8,0x4
   14000ae98:	btr    r12d,0xf
   14000ae9d:	jmp    0x14000b03b
   14000aea2:	mov    eax,0x64
   14000aea7:	cmp    WORD PTR [r8],ax
   14000aeab:	je     0x14000b03b
   14000aeb1:	mov    eax,0x69
   14000aeb6:	cmp    WORD PTR [r8],ax
   14000aeba:	je     0x14000b03b
   14000aec0:	mov    eax,0x6f
   14000aec5:	cmp    WORD PTR [r8],ax
   14000aec9:	je     0x14000b03b
   14000aecf:	mov    eax,0x75
   14000aed4:	lea    ecx,[rax-0x1d]
   14000aed7:	cmp    WORD PTR [r8],ax
   14000aedb:	je     0x14000b040
   14000aee1:	lea    eax,[rcx+0x20]
   14000aee4:	cmp    WORD PTR [r8],ax
   14000aee8:	je     0x14000b040
   14000aeee:	cmp    WORD PTR [r8],cx
   14000aef2:	je     0x14000b040
   14000aef8:	mov    DWORD PTR [rsp+0x68],r10d
   14000aefd:	mov    rdx,QWORD PTR [rsp+0x78]
   14000af02:	lea    r8,[rsp+0x40]
   14000af07:	movzx  ecx,r13w
   14000af0b:	mov    DWORD PTR [rsp+0x44],0x1
   14000af13:	call   0x14000a43c
   14000af18:	xor    r10d,r10d
   14000af1b:	jmp    0x14000adee
   14000af20:	cmp    r13w,0x2a
   14000af25:	jne    0x14000af4f
   14000af27:	mov    edi,DWORD PTR [r14]
   14000af2a:	add    r14,0x8
   14000af2e:	mov    ecx,0x58
   14000af33:	mov    QWORD PTR [rsp+0x50],r14
   14000af38:	mov    DWORD PTR [rsp+0x48],edi
   14000af3c:	test   edi,edi
   14000af3e:	jns    0x14000b040
   14000af44:	mov    edi,esi
   14000af46:	mov    DWORD PTR [rsp+0x48],esi
   14000af4a:	jmp    0x14000b040
   14000af4f:	lea    ecx,[rdi+rdi*4]
   14000af52:	movzx  eax,r13w
   14000af56:	lea    edi,[rax+rcx*2-0x30]
   14000af5a:	mov    DWORD PTR [rsp+0x48],edi
   14000af5e:	jmp    0x14000b03b
   14000af63:	mov    edi,r10d
   14000af66:	mov    DWORD PTR [rsp+0x48],r10d
   14000af6b:	jmp    0x14000b03b
   14000af70:	cmp    r13w,0x2a
   14000af75:	jne    0x14000afa3
   14000af77:	mov    eax,DWORD PTR [r14]
   14000af7a:	add    r14,0x8
   14000af7e:	mov    ecx,0x58
   14000af83:	mov    QWORD PTR [rsp+0x50],r14
   14000af88:	mov    DWORD PTR [rsp+0x58],eax
   14000af8c:	test   eax,eax
   14000af8e:	jns    0x14000b040
   14000af94:	or     r12d,0x4
   14000af98:	neg    eax
   14000af9a:	mov    DWORD PTR [rsp+0x58],eax
   14000af9e:	jmp    0x14000b040
   14000afa3:	mov    eax,DWORD PTR [rsp+0x58]
   14000afa7:	lea    ecx,[rax+rax*4]
   14000afaa:	movzx  eax,r13w
   14000afae:	lea    eax,[rax+rcx*2-0x30]
   14000afb2:	mov    DWORD PTR [rsp+0x58],eax
   14000afb6:	jmp    0x14000b03b
   14000afbb:	movzx  eax,r13w
   14000afbf:	cmp    eax,r11d
   14000afc2:	je     0x14000b002
   14000afc4:	cmp    eax,0x23
   14000afc7:	je     0x14000affb
   14000afc9:	mov    ecx,0x2b
   14000afce:	cmp    eax,ecx
   14000afd0:	je     0x14000aff5
   14000afd2:	mov    ecx,0x2d
   14000afd7:	cmp    eax,ecx
   14000afd9:	je     0x14000afef
   14000afdb:	mov    ecx,0x30
   14000afe0:	cmp    eax,ecx
   14000afe2:	mov    ecx,0x58
   14000afe7:	jne    0x14000b040
   14000afe9:	or     r12d,0x8
   14000afed:	jmp    0x14000b040
   14000afef:	or     r12d,0x4
   14000aff3:	jmp    0x14000b03b
   14000aff5:	or     r12d,0x1
   14000aff9:	jmp    0x14000b03b
   14000affb:	bts    r12d,0x7
   14000b000:	jmp    0x14000b03b
   14000b002:	or     r12d,0x2
   14000b006:	jmp    0x14000b03b
   14000b008:	mov    DWORD PTR [rbp-0x78],r10d
   14000b00c:	mov    DWORD PTR [rsp+0x6c],r10d
   14000b011:	mov    DWORD PTR [rsp+0x58],r10d
   14000b016:	mov    DWORD PTR [rsp+0x4c],r10d
   14000b01b:	mov    r12d,r10d
   14000b01e:	mov    edi,esi
   14000b020:	mov    DWORD PTR [rsp+0x48],esi
   14000b024:	mov    DWORD PTR [rsp+0x44],r10d
   14000b029:	jmp    0x14000b03b
   14000b02b:	mov    edi,DWORD PTR [rsp+0x48]
   14000b02f:	or     esi,0xffffffff
   14000b032:	mov    r9d,DWORD PTR [rsp+0x68]
   14000b037:	mov    r8,QWORD PTR [rbp-0x80]
   14000b03b:	mov    ecx,0x58
   14000b040:	movzx  r13d,WORD PTR [r8]
   14000b044:	test   r13w,r13w
   14000b048:	jne    0x14000a646
   14000b04e:	test   r9d,r9d
   14000b051:	je     0x14000b059
   14000b053:	cmp    r9d,0x7
   14000b057:	jne    0x14000b096
   14000b059:	cmp    BYTE PTR [rbp-0x58],r10b
   14000b05d:	je     0x14000b06a
   14000b05f:	mov    rcx,QWORD PTR [rbp-0x60]
   14000b063:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b06a:	mov    eax,edx
   14000b06c:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000b073:	xor    rcx,rsp
   14000b076:	call   0x140001980
   14000b07b:	mov    rbx,QWORD PTR [rsp+0x530]
   14000b083:	add    rsp,0x4e0
   14000b08a:	pop    r15
   14000b08c:	pop    r14
   14000b08e:	pop    r13
   14000b090:	pop    r12
   14000b092:	pop    rdi
   14000b093:	pop    rsi
   14000b094:	pop    rbp
   14000b095:	ret    
   14000b096:	call   0x140003564
   14000b09b:	mov    DWORD PTR [rax],0x16
   14000b0a1:	call   0x1400034fc
   14000b0a6:	xor    r11d,r11d
   14000b0a9:	cmp    BYTE PTR [rbp-0x58],r11b
   14000b0ad:	je     0x14000b0ba
   14000b0af:	mov    rax,QWORD PTR [rbp-0x60]
   14000b0b3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b0ba:	mov    eax,esi
   14000b0bc:	jmp    0x14000b06c
   14000b0be:	int3   
   14000b0bf:	int3   
   14000b0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0c5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0ca:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0cf:	push   rdi
   14000b0d0:	sub    rsp,0x20
   14000b0d4:	mov    rbx,rdx
   14000b0d7:	test   ecx,ecx
   14000b0d9:	js     0x14000b142
   14000b0db:	cmp    ecx,DWORD PTR [rip+0x953b]        # 0x14001461c
   14000b0e1:	jae    0x14000b142
   14000b0e3:	movsxd rdi,ecx
   14000b0e6:	lea    rbp,[rip+0x9533]        # 0x140014620
   14000b0ed:	mov    rsi,rdi
   14000b0f0:	and    edi,0x1f
   14000b0f3:	sar    rsi,0x5
   14000b0f7:	imul   rdi,rdi,0x58
   14000b0fb:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000b100:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14000b105:	jne    0x14000b142
   14000b107:	cmp    DWORD PTR [rip+0x6ef2],0x1        # 0x140012000
   14000b10e:	jne    0x14000b135
   14000b110:	test   ecx,ecx
   14000b112:	je     0x14000b12a
   14000b114:	dec    ecx
   14000b116:	je     0x14000b123
   14000b118:	dec    ecx
   14000b11a:	jne    0x14000b135
   14000b11c:	mov    ecx,0xfffffff4
   14000b121:	jmp    0x14000b12f
   14000b123:	mov    ecx,0xfffffff5
   14000b128:	jmp    0x14000b12f
   14000b12a:	mov    ecx,0xfffffff6
   14000b12f:	call   QWORD PTR [rip+0x3113]        # 0x14000e248
   14000b135:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000b13a:	mov    QWORD PTR [rdi+rax*1],rbx
   14000b13e:	xor    eax,eax
   14000b140:	jmp    0x14000b158
   14000b142:	call   0x140003564
   14000b147:	mov    DWORD PTR [rax],0x9
   14000b14d:	call   0x140003584
   14000b152:	and    DWORD PTR [rax],0x0
   14000b155:	or     eax,0xffffffff
   14000b158:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b15d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b162:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b167:	add    rsp,0x20
   14000b16b:	pop    rdi
   14000b16c:	ret    
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x8],rbx
   14000b175:	mov    QWORD PTR [rsp+0x10],rbp
   14000b17a:	push   rdi
   14000b17b:	sub    rsp,0x20
   14000b17f:	test   ecx,ecx
   14000b181:	js     0x14000b1f4
   14000b183:	cmp    ecx,DWORD PTR [rip+0x9493]        # 0x14001461c
   14000b189:	jae    0x14000b1f4
   14000b18b:	movsxd rbx,ecx
   14000b18e:	lea    rbp,[rip+0x948b]        # 0x140014620
   14000b195:	mov    rdi,rbx
   14000b198:	and    ebx,0x1f
   14000b19b:	sar    rdi,0x5
   14000b19f:	imul   rbx,rbx,0x58
   14000b1a3:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000b1a8:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000b1ad:	je     0x14000b1f4
   14000b1af:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000b1b4:	je     0x14000b1f4
   14000b1b6:	cmp    DWORD PTR [rip+0x6e43],0x1        # 0x140012000
   14000b1bd:	jne    0x14000b1e6
   14000b1bf:	test   ecx,ecx
   14000b1c1:	je     0x14000b1d9
   14000b1c3:	dec    ecx
   14000b1c5:	je     0x14000b1d2
   14000b1c7:	dec    ecx
   14000b1c9:	jne    0x14000b1e6
   14000b1cb:	mov    ecx,0xfffffff4
   14000b1d0:	jmp    0x14000b1de
   14000b1d2:	mov    ecx,0xfffffff5
   14000b1d7:	jmp    0x14000b1de
   14000b1d9:	mov    ecx,0xfffffff6
   14000b1de:	xor    edx,edx
   14000b1e0:	call   QWORD PTR [rip+0x3062]        # 0x14000e248
   14000b1e6:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000b1eb:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000b1f0:	xor    eax,eax
   14000b1f2:	jmp    0x14000b20a
   14000b1f4:	call   0x140003564
   14000b1f9:	mov    DWORD PTR [rax],0x9
   14000b1ff:	call   0x140003584
   14000b204:	and    DWORD PTR [rax],0x0
   14000b207:	or     eax,0xffffffff
   14000b20a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b20f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b214:	add    rsp,0x20
   14000b218:	pop    rdi
   14000b219:	ret    
   14000b21a:	int3   
   14000b21b:	int3   
   14000b21c:	sub    rsp,0x28
   14000b220:	cmp    ecx,0xfffffffe
   14000b223:	jne    0x14000b23a
   14000b225:	call   0x140003584
   14000b22a:	and    DWORD PTR [rax],0x0
   14000b22d:	call   0x140003564
   14000b232:	mov    DWORD PTR [rax],0x9
   14000b238:	jmp    0x14000b287
   14000b23a:	test   ecx,ecx
   14000b23c:	js     0x14000b26f
   14000b23e:	cmp    ecx,DWORD PTR [rip+0x93d8]        # 0x14001461c
   14000b244:	jae    0x14000b26f
   14000b246:	movsxd rdx,ecx
   14000b249:	lea    rcx,[rip+0x93d0]        # 0x140014620
   14000b250:	mov    rax,rdx
   14000b253:	and    edx,0x1f
   14000b256:	sar    rax,0x5
   14000b25a:	imul   rdx,rdx,0x58
   14000b25e:	mov    rax,QWORD PTR [rcx+rax*8]
   14000b262:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000b267:	je     0x14000b26f
   14000b269:	mov    rax,QWORD PTR [rax+rdx*1]
   14000b26d:	jmp    0x14000b28b
   14000b26f:	call   0x140003584
   14000b274:	and    DWORD PTR [rax],0x0
   14000b277:	call   0x140003564
   14000b27c:	mov    DWORD PTR [rax],0x9
   14000b282:	call   0x1400034fc
   14000b287:	or     rax,0xffffffffffffffff
   14000b28b:	add    rsp,0x28
   14000b28f:	ret    
   14000b290:	mov    rax,rsp
   14000b293:	mov    QWORD PTR [rax+0x8],rbx
   14000b297:	mov    QWORD PTR [rax+0x10],rsi
   14000b29b:	mov    QWORD PTR [rax+0x18],rdi
   14000b29f:	mov    QWORD PTR [rax+0x20],r12
   14000b2a3:	push   r14
   14000b2a5:	sub    rsp,0x20
   14000b2a9:	movsxd rbx,ecx
   14000b2ac:	mov    r12,rbx
   14000b2af:	sar    r12,0x5
   14000b2b3:	lea    r14,[rip+0x9366]        # 0x140014620
   14000b2ba:	and    ebx,0x1f
   14000b2bd:	imul   rbx,rbx,0x58
   14000b2c1:	mov    rsi,QWORD PTR [r14+r12*8]
   14000b2c5:	mov    edi,0x1
   14000b2ca:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000b2cf:	jne    0x14000b305
   14000b2d1:	lea    ecx,[rdi+0x9]
   14000b2d4:	call   0x140003870
   14000b2d9:	nop
   14000b2da:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000b2df:	jne    0x14000b2fb
   14000b2e1:	lea    rcx,[rbx+rsi*1+0x10]
   14000b2e6:	mov    edx,0xfa0
   14000b2eb:	call   QWORD PTR [rip+0x2e3f]        # 0x14000e130
   14000b2f1:	neg    eax
   14000b2f3:	sbb    edx,edx
   14000b2f5:	and    edi,edx
   14000b2f7:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14000b2fb:	mov    ecx,0xa
   14000b300:	call   0x140003770
   14000b305:	test   edi,edi
   14000b307:	je     0x14000b318
   14000b309:	mov    rcx,QWORD PTR [r14+r12*8]
   14000b30d:	lea    rcx,[rcx+rbx*1+0x10]
   14000b312:	call   QWORD PTR [rip+0x2e08]        # 0x14000e120
   14000b318:	mov    eax,edi
   14000b31a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b31f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b324:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b329:	mov    r12,QWORD PTR [rsp+0x48]
   14000b32e:	add    rsp,0x20
   14000b332:	pop    r14
   14000b334:	ret    
   14000b335:	int3   
   14000b336:	int3   
   14000b337:	int3   
   14000b338:	movsxd rdx,ecx
   14000b33b:	lea    rcx,[rip+0x92de]        # 0x140014620
   14000b342:	mov    rax,rdx
   14000b345:	and    edx,0x1f
   14000b348:	sar    rax,0x5
   14000b34c:	imul   rdx,rdx,0x58
   14000b350:	mov    rax,QWORD PTR [rcx+rax*8]
   14000b354:	lea    rcx,[rax+rdx*1+0x10]
   14000b359:	rex.W jmp QWORD PTR [rip+0x2dc8]        # 0x14000e128
   14000b360:	mov    QWORD PTR [rsp+0x8],rbx
   14000b365:	mov    QWORD PTR [rsp+0x10],rsi
   14000b36a:	mov    QWORD PTR [rsp+0x18],rdi
   14000b36f:	push   r12
   14000b371:	push   r13
   14000b373:	push   r14
   14000b375:	sub    rsp,0x40
   14000b379:	or     rsi,0xffffffffffffffff
   14000b37d:	mov    r12d,esi
   14000b380:	xor    r13d,r13d
   14000b383:	lea    ebx,[rsi+0xc]
   14000b386:	mov    ecx,ebx
   14000b388:	call   0x140003788
   14000b38d:	test   eax,eax
   14000b38f:	jne    0x14000b398
   14000b391:	mov    eax,esi
   14000b393:	jmp    0x14000b54e
   14000b398:	mov    ecx,ebx
   14000b39a:	call   0x140003870
   14000b39f:	nop
   14000b3a0:	xor    edi,edi
   14000b3a2:	lea    rax,[rip+0x9277]        # 0x140014620
   14000b3a9:	mov    DWORD PTR [rsp+0x24],edi
   14000b3ad:	cmp    edi,0x40
   14000b3b0:	jge    0x14000b541
   14000b3b6:	movsxd r14,edi
   14000b3b9:	mov    rbx,QWORD PTR [rax+r14*8]
   14000b3bd:	test   rbx,rbx
   14000b3c0:	je     0x14000b4b7
   14000b3c6:	mov    QWORD PTR [rsp+0x30],rbx
   14000b3cb:	mov    rax,QWORD PTR [rax+r14*8]
   14000b3cf:	add    rax,0xb00
   14000b3d5:	cmp    rbx,rax
   14000b3d8:	jae    0x14000b4a7
   14000b3de:	test   BYTE PTR [rbx+0x8],0x1
   14000b3e2:	jne    0x14000b493
   14000b3e8:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b3ec:	jne    0x14000b42a
   14000b3ee:	mov    ecx,0xa
   14000b3f3:	call   0x140003870
   14000b3f8:	nop
   14000b3f9:	cmp    DWORD PTR [rbx+0xc],0x0
   14000b3fd:	jne    0x14000b420
   14000b3ff:	lea    rcx,[rbx+0x10]
   14000b403:	mov    edx,0xfa0
   14000b408:	call   QWORD PTR [rip+0x2d22]        # 0x14000e130
   14000b40e:	test   eax,eax
   14000b410:	jne    0x14000b41d
   14000b412:	lea    r13d,[rax+0x1]
   14000b416:	mov    DWORD PTR [rsp+0x28],r13d
   14000b41b:	jmp    0x14000b420
   14000b41d:	inc    DWORD PTR [rbx+0xc]
   14000b420:	mov    ecx,0xa
   14000b425:	call   0x140003770
   14000b42a:	test   r13d,r13d
   14000b42d:	jne    0x14000b493
   14000b42f:	lea    rcx,[rbx+0x10]
   14000b433:	call   QWORD PTR [rip+0x2ce7]        # 0x14000e120
   14000b439:	test   BYTE PTR [rbx+0x8],0x1
   14000b43d:	je     0x14000b44b
   14000b43f:	lea    rcx,[rbx+0x10]
   14000b443:	call   QWORD PTR [rip+0x2cdf]        # 0x14000e128
   14000b449:	jmp    0x14000b493
   14000b44b:	or     rsi,0xffffffffffffffff
   14000b44f:	test   r13d,r13d
   14000b452:	jne    0x14000b493
   14000b454:	mov    BYTE PTR [rbx+0x8],0x1
   14000b458:	mov    QWORD PTR [rbx],rsi
   14000b45b:	lea    r8,[rip+0x91be]        # 0x140014620
   14000b462:	sub    rbx,QWORD PTR [r8+r14*8]
   14000b466:	movabs rax,0x2e8ba2e8ba2e8ba3
   14000b470:	imul   rbx
   14000b473:	mov    r12,rdx
   14000b476:	sar    r12,0x4
   14000b47a:	mov    rax,r12
   14000b47d:	shr    rax,0x3f
   14000b481:	add    r12,rax
   14000b484:	mov    eax,edi
   14000b486:	shl    eax,0x5
   14000b489:	add    r12d,eax
   14000b48c:	mov    DWORD PTR [rsp+0x20],r12d
   14000b491:	jmp    0x14000b4a7
   14000b493:	add    rbx,0x58
   14000b497:	or     rsi,0xffffffffffffffff
   14000b49b:	lea    rax,[rip+0x917e]        # 0x140014620
   14000b4a2:	jmp    0x14000b3c6
   14000b4a7:	cmp    r12d,esi
   14000b4aa:	jne    0x14000b541
   14000b4b0:	inc    edi
   14000b4b2:	jmp    0x14000b3a2
   14000b4b7:	mov    edx,0x58
   14000b4bc:	lea    ecx,[rdx-0x38]
   14000b4bf:	call   0x140006860
   14000b4c4:	mov    QWORD PTR [rsp+0x30],rax
   14000b4c9:	test   rax,rax
   14000b4cc:	je     0x14000b541
   14000b4ce:	movsxd rdx,edi
   14000b4d1:	lea    r8,[rip+0x9148]        # 0x140014620
   14000b4d8:	mov    QWORD PTR [r8+rdx*8],rax
   14000b4dc:	add    DWORD PTR [rip+0x9139],0x20        # 0x14001461c
   14000b4e3:	mov    rcx,QWORD PTR [r8+rdx*8]
   14000b4e7:	add    rcx,0xb00
   14000b4ee:	cmp    rax,rcx
   14000b4f1:	jae    0x14000b50d
   14000b4f3:	mov    BYTE PTR [rax+0x8],0x0
   14000b4f7:	mov    QWORD PTR [rax],rsi
   14000b4fa:	mov    BYTE PTR [rax+0x9],0xa
   14000b4fe:	and    DWORD PTR [rax+0xc],0x0
   14000b502:	add    rax,0x58
   14000b506:	mov    QWORD PTR [rsp+0x30],rax
   14000b50b:	jmp    0x14000b4e3
   14000b50d:	shl    edi,0x5
   14000b510:	mov    DWORD PTR [rsp+0x20],edi
   14000b514:	movsxd rcx,edi
   14000b517:	mov    rax,rcx
   14000b51a:	sar    rax,0x5
   14000b51e:	and    ecx,0x1f
   14000b521:	imul   rcx,rcx,0x58
   14000b525:	mov    rax,QWORD PTR [r8+rax*8]
   14000b529:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14000b52e:	mov    ecx,edi
   14000b530:	call   0x14000b290
   14000b535:	test   eax,eax
   14000b537:	cmove  edi,esi
   14000b53a:	mov    r12d,edi
   14000b53d:	mov    DWORD PTR [rsp+0x20],edi
   14000b541:	mov    ecx,0xb
   14000b546:	call   0x140003770
   14000b54b:	mov    eax,r12d
   14000b54e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b553:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b558:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b55d:	add    rsp,0x40
   14000b561:	pop    r14
   14000b563:	pop    r13
   14000b565:	pop    r12
   14000b567:	ret    
   14000b568:	mov    QWORD PTR [rsp+0x18],rbx
   14000b56d:	mov    DWORD PTR [rsp+0x8],ecx
   14000b571:	push   rsi
   14000b572:	push   rdi
   14000b573:	push   r12
   14000b575:	sub    rsp,0x20
   14000b579:	movsxd rdi,ecx
   14000b57c:	cmp    edi,0xfffffffe
   14000b57f:	jne    0x14000b591
   14000b581:	call   0x140003564
   14000b586:	mov    DWORD PTR [rax],0x9
   14000b58c:	jmp    0x14000b62e
   14000b591:	test   ecx,ecx
   14000b593:	js     0x14000b61e
   14000b599:	cmp    edi,DWORD PTR [rip+0x907d]        # 0x14001461c
   14000b59f:	jae    0x14000b61e
   14000b5a1:	mov    rbx,rdi
   14000b5a4:	mov    rsi,rdi
   14000b5a7:	sar    rsi,0x5
   14000b5ab:	lea    r12,[rip+0x906e]        # 0x140014620
   14000b5b2:	and    ebx,0x1f
   14000b5b5:	imul   rbx,rbx,0x58
   14000b5b9:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b5bd:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000b5c2:	and    ecx,0x1
   14000b5c5:	je     0x14000b61e
   14000b5c7:	mov    ecx,edi
   14000b5c9:	call   0x14000b290
   14000b5ce:	nop
   14000b5cf:	mov    rax,QWORD PTR [r12+rsi*8]
   14000b5d3:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000b5d8:	je     0x14000b605
   14000b5da:	mov    ecx,edi
   14000b5dc:	call   0x14000b21c
   14000b5e1:	mov    rcx,rax
   14000b5e4:	call   QWORD PTR [rip+0x2c66]        # 0x14000e250
   14000b5ea:	test   eax,eax
   14000b5ec:	jne    0x14000b5f8
   14000b5ee:	call   QWORD PTR [rip+0x2a84]        # 0x14000e078
   14000b5f4:	mov    ebx,eax
   14000b5f6:	jmp    0x14000b5fa
   14000b5f8:	xor    ebx,ebx
   14000b5fa:	test   ebx,ebx
   14000b5fc:	je     0x14000b613
   14000b5fe:	call   0x140003584
   14000b603:	mov    DWORD PTR [rax],ebx
   14000b605:	call   0x140003564
   14000b60a:	mov    DWORD PTR [rax],0x9
   14000b610:	or     ebx,0xffffffff
   14000b613:	mov    ecx,edi
   14000b615:	call   0x14000b338
   14000b61a:	mov    eax,ebx
   14000b61c:	jmp    0x14000b631
   14000b61e:	call   0x140003564
   14000b623:	mov    DWORD PTR [rax],0x9
   14000b629:	call   0x1400034fc
   14000b62e:	or     eax,0xffffffff
   14000b631:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b636:	add    rsp,0x20
   14000b63a:	pop    r12
   14000b63c:	pop    rdi
   14000b63d:	pop    rsi
   14000b63e:	ret    
   14000b63f:	int3   
   14000b640:	mov    QWORD PTR [rsp+0x8],rbx
   14000b645:	mov    QWORD PTR [rsp+0x10],rsi
   14000b64a:	push   rdi
   14000b64b:	sub    rsp,0x40
   14000b64f:	mov    ebx,edx
   14000b651:	mov    rdx,rcx
   14000b654:	lea    rcx,[rsp+0x20]
   14000b659:	mov    edi,r9d
   14000b65c:	mov    esi,r8d
   14000b65f:	call   0x140004978
   14000b664:	mov    rax,QWORD PTR [rsp+0x28]
   14000b669:	movzx  r11d,bl
   14000b66d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   14000b672:	jne    0x14000b693
   14000b674:	test   esi,esi
   14000b676:	je     0x14000b68d
   14000b678:	mov    rax,QWORD PTR [rsp+0x20]
   14000b67d:	mov    rcx,QWORD PTR [rax+0x140]
   14000b684:	movzx  eax,WORD PTR [rcx+r11*2]
   14000b689:	and    eax,esi
   14000b68b:	jmp    0x14000b68f
   14000b68d:	xor    eax,eax
   14000b68f:	test   eax,eax
   14000b691:	je     0x14000b698
   14000b693:	mov    eax,0x1
   14000b698:	cmp    BYTE PTR [rsp+0x38],0x0
   14000b69d:	je     0x14000b6ab
   14000b69f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b6a4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b6ab:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b6b0:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b6b5:	add    rsp,0x40
   14000b6b9:	pop    rdi
   14000b6ba:	ret    
   14000b6bb:	int3   
   14000b6bc:	mov    edx,ecx
   14000b6be:	mov    r9d,0x4
   14000b6c4:	xor    r8d,r8d
   14000b6c7:	xor    ecx,ecx
   14000b6c9:	jmp    0x14000b640
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	rex push rbx
   14000b6d2:	sub    rsp,0x20
   14000b6d6:	test   rcx,rcx
   14000b6d9:	je     0x14000b6e8
   14000b6db:	test   rdx,rdx
   14000b6de:	je     0x14000b6e8
   14000b6e0:	test   r8,r8
   14000b6e3:	jne    0x14000b701
   14000b6e5:	mov    BYTE PTR [rcx],r8b
   14000b6e8:	call   0x140003564
   14000b6ed:	mov    ebx,0x16
   14000b6f2:	mov    DWORD PTR [rax],ebx
   14000b6f4:	call   0x1400034fc
   14000b6f9:	mov    eax,ebx
   14000b6fb:	add    rsp,0x20
   14000b6ff:	pop    rbx
   14000b700:	ret    
   14000b701:	mov    r9,rcx
   14000b704:	sub    r9,r8
   14000b707:	mov    al,BYTE PTR [r8]
   14000b70a:	mov    BYTE PTR [r9+r8*1],al
   14000b70e:	inc    r8
   14000b711:	test   al,al
   14000b713:	je     0x14000b71a
   14000b715:	dec    rdx
   14000b718:	jne    0x14000b707
   14000b71a:	test   rdx,rdx
   14000b71d:	jne    0x14000b72d
   14000b71f:	mov    BYTE PTR [rcx],dl
   14000b721:	call   0x140003564
   14000b726:	mov    ebx,0x22
   14000b72b:	jmp    0x14000b6f2
   14000b72d:	xor    eax,eax
   14000b72f:	jmp    0x14000b6fb
   14000b731:	int3   
   14000b732:	int3   
   14000b733:	int3   
   14000b734:	mov    QWORD PTR [rsp+0x8],rbx
   14000b739:	mov    QWORD PTR [rsp+0x10],rsi
   14000b73e:	push   rdi
   14000b73f:	sub    rsp,0x20
   14000b743:	mov    rbx,rdx
   14000b746:	mov    rdi,rcx
   14000b749:	test   rcx,rcx
   14000b74c:	jne    0x14000b758
   14000b74e:	mov    rcx,rdx
   14000b751:	call   0x140001f38
   14000b756:	jmp    0x14000b7c2
   14000b758:	test   rdx,rdx
   14000b75b:	jne    0x14000b764
   14000b75d:	call   0x140001eb4
   14000b762:	jmp    0x14000b7c0
   14000b764:	cmp    rdx,0xffffffffffffffe0
   14000b768:	ja     0x14000b7ad
   14000b76a:	mov    rcx,QWORD PTR [rip+0x8ae7]        # 0x140014258
   14000b771:	mov    eax,0x1
   14000b776:	test   rbx,rbx
   14000b779:	cmove  rbx,rax
   14000b77d:	mov    r8,rdi
   14000b780:	xor    edx,edx
   14000b782:	mov    r9,rbx
   14000b785:	call   QWORD PTR [rip+0x2acd]        # 0x14000e258
   14000b78b:	mov    rsi,rax
   14000b78e:	test   rax,rax
   14000b791:	jne    0x14000b802
   14000b793:	cmp    DWORD PTR [rip+0x8ac7],eax        # 0x140014260
   14000b799:	je     0x14000b7eb
   14000b79b:	mov    rcx,rbx
   14000b79e:	call   0x140003b74
   14000b7a3:	test   eax,eax
   14000b7a5:	je     0x14000b7d2
   14000b7a7:	cmp    rbx,0xffffffffffffffe0
   14000b7ab:	jbe    0x14000b76a
   14000b7ad:	mov    rcx,rbx
   14000b7b0:	call   0x140003b74
   14000b7b5:	call   0x140003564
   14000b7ba:	mov    DWORD PTR [rax],0xc
   14000b7c0:	xor    eax,eax
   14000b7c2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b7c7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b7cc:	add    rsp,0x20
   14000b7d0:	pop    rdi
   14000b7d1:	ret    
   14000b7d2:	call   0x140003564
   14000b7d7:	mov    rbx,rax
   14000b7da:	call   QWORD PTR [rip+0x2898]        # 0x14000e078
   14000b7e0:	mov    ecx,eax
   14000b7e2:	call   0x14000351c
   14000b7e7:	mov    DWORD PTR [rbx],eax
   14000b7e9:	jmp    0x14000b7c0
   14000b7eb:	call   0x140003564
   14000b7f0:	mov    rbx,rax
   14000b7f3:	call   QWORD PTR [rip+0x287f]        # 0x14000e078
   14000b7f9:	mov    ecx,eax
   14000b7fb:	call   0x14000351c
   14000b800:	mov    DWORD PTR [rbx],eax
   14000b802:	mov    rax,rsi
   14000b805:	jmp    0x14000b7c2
   14000b807:	int3   
   14000b808:	mov    rax,rsp
   14000b80b:	mov    QWORD PTR [rax+0x8],rbx
   14000b80f:	mov    QWORD PTR [rax+0x10],rbp
   14000b813:	mov    QWORD PTR [rax+0x18],rsi
   14000b817:	mov    QWORD PTR [rax+0x20],rdi
   14000b81b:	push   r12
   14000b81d:	push   r13
   14000b81f:	push   r15
   14000b821:	sub    rsp,0x20
   14000b825:	mov    rbp,rdx
   14000b828:	xor    edi,edi
   14000b82a:	xor    edx,edx
   14000b82c:	lea    r8d,[rdi+0x1]
   14000b830:	mov    esi,ecx
   14000b832:	call   0x1400095a4
   14000b837:	mov    r13,rax
   14000b83a:	cmp    rax,0xffffffffffffffff
   14000b83e:	je     0x14000b890
   14000b840:	lea    r8d,[rdi+0x2]
   14000b844:	xor    edx,edx
   14000b846:	mov    ecx,esi
   14000b848:	call   0x1400095a4
   14000b84d:	cmp    rax,0xffffffffffffffff
   14000b851:	je     0x14000b890
   14000b853:	mov    rbx,rbp
   14000b856:	sub    rbx,rax
   14000b859:	test   rbx,rbx
   14000b85c:	jle    0x14000b923
   14000b862:	call   QWORD PTR [rip+0x2a00]        # 0x14000e268
   14000b868:	mov    r15d,0x1000
   14000b86e:	lea    edx,[rdi+0x8]
   14000b871:	mov    rcx,rax
   14000b874:	mov    r8d,r15d
   14000b877:	call   QWORD PTR [rip+0x2843]        # 0x14000e0c0
   14000b87d:	mov    rbp,rax
   14000b880:	test   rax,rax
   14000b883:	jne    0x14000b8b6
   14000b885:	call   0x140003564
   14000b88a:	mov    DWORD PTR [rax],0xc
   14000b890:	call   0x140003564
   14000b895:	mov    eax,DWORD PTR [rax]
   14000b897:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b89c:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b8a1:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b8a6:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b8ab:	add    rsp,0x20
   14000b8af:	pop    r15
   14000b8b1:	pop    r13
   14000b8b3:	pop    r12
   14000b8b5:	ret    
   14000b8b6:	mov    edx,0x8000
   14000b8bb:	mov    ecx,esi
   14000b8bd:	call   0x14000b9a0
   14000b8c2:	mov    r12d,eax
   14000b8c5:	mov    r8d,ebx
   14000b8c8:	cmp    rbx,r15
   14000b8cb:	mov    rdx,rbp
   14000b8ce:	cmovge r8d,r15d
   14000b8d2:	mov    ecx,esi
   14000b8d4:	call   0x140009720
   14000b8d9:	cmp    eax,0xffffffff
   14000b8dc:	je     0x14000b8ea
   14000b8de:	cdqe   
   14000b8e0:	sub    rbx,rax
   14000b8e3:	test   rbx,rbx
   14000b8e6:	jle    0x14000b903
   14000b8e8:	jmp    0x14000b8c5
   14000b8ea:	call   0x140003584
   14000b8ef:	cmp    DWORD PTR [rax],0x5
   14000b8f2:	jne    0x14000b8ff
   14000b8f4:	call   0x140003564
   14000b8f9:	mov    DWORD PTR [rax],0xd
   14000b8ff:	or     rdi,0xffffffffffffffff
   14000b903:	mov    edx,r12d
   14000b906:	mov    ecx,esi
   14000b908:	call   0x14000b9a0
   14000b90d:	call   QWORD PTR [rip+0x2955]        # 0x14000e268
   14000b913:	mov    r8,rbp
   14000b916:	mov    rcx,rax
   14000b919:	xor    edx,edx
   14000b91b:	call   QWORD PTR [rip+0x2797]        # 0x14000e0b8
   14000b921:	jmp    0x14000b978
   14000b923:	jns    0x14000b982
   14000b925:	xor    r8d,r8d
   14000b928:	mov    rdx,rbp
   14000b92b:	mov    ecx,esi
   14000b92d:	call   0x1400095a4
   14000b932:	cmp    rax,0xffffffffffffffff
   14000b936:	je     0x14000b890
   14000b93c:	mov    ecx,esi
   14000b93e:	call   0x14000b21c
   14000b943:	mov    rcx,rax
   14000b946:	call   QWORD PTR [rip+0x2914]        # 0x14000e260
   14000b94c:	neg    eax
   14000b94e:	sbb    rdi,rdi
   14000b951:	neg    rdi
   14000b954:	dec    rdi
   14000b957:	cmp    rdi,0xffffffffffffffff
   14000b95b:	jne    0x14000b982
   14000b95d:	call   0x140003564
   14000b962:	mov    DWORD PTR [rax],0xd
   14000b968:	call   0x140003584
   14000b96d:	mov    rbx,rax
   14000b970:	call   QWORD PTR [rip+0x2702]        # 0x14000e078
   14000b976:	mov    DWORD PTR [rbx],eax
   14000b978:	cmp    rdi,0xffffffffffffffff
   14000b97c:	je     0x14000b890
   14000b982:	xor    r8d,r8d
   14000b985:	mov    rdx,r13
   14000b988:	mov    ecx,esi
   14000b98a:	call   0x1400095a4
   14000b98f:	cmp    rax,0xffffffffffffffff
   14000b993:	je     0x14000b890
   14000b999:	xor    eax,eax
   14000b99b:	jmp    0x14000b897
   14000b9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9a5:	movsxd r8,ecx
   14000b9a8:	lea    rbx,[rip+0x8c71]        # 0x140014620
   14000b9af:	mov    r9,r8
   14000b9b2:	and    r8d,0x1f
   14000b9b6:	sar    r9,0x5
   14000b9ba:	imul   r8,r8,0x58
   14000b9be:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000b9c2:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14000b9c7:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   14000b9cd:	add    al,al
   14000b9cf:	and    r11d,0x80
   14000b9d6:	movsx  r10d,al
   14000b9da:	sar    r10d,1
   14000b9dd:	cmp    edx,0x4000
   14000b9e3:	je     0x14000ba3d
   14000b9e5:	cmp    edx,0x8000
   14000b9eb:	je     0x14000ba35
   14000b9ed:	cmp    edx,0x10000
   14000b9f3:	je     0x14000ba1d
   14000b9f5:	cmp    edx,0x20000
   14000b9fb:	je     0x14000ba1d
   14000b9fd:	cmp    edx,0x40000
   14000ba03:	jne    0x14000ba4d
   14000ba05:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba0b:	mov    rax,QWORD PTR [rbx+r9*8]
   14000ba0f:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14000ba15:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14000ba1b:	jmp    0x14000ba4d
   14000ba1d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba23:	mov    rax,QWORD PTR [rbx+r9*8]
   14000ba27:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14000ba2d:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14000ba33:	jmp    0x14000ba4d
   14000ba35:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14000ba3b:	jmp    0x14000ba4d
   14000ba3d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000ba43:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000ba47:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14000ba4d:	test   r11d,r11d
   14000ba50:	jne    0x14000ba59
   14000ba52:	mov    eax,0x8000
   14000ba57:	jmp    0x14000ba68
   14000ba59:	neg    r10d
   14000ba5c:	sbb    eax,eax
   14000ba5e:	and    eax,0xc000
   14000ba63:	add    eax,0x4000
   14000ba68:	mov    rbx,QWORD PTR [rsp+0x8]
   14000ba6d:	ret    
   14000ba6e:	int3   
   14000ba6f:	int3   
   14000ba70:	sub    rsp,0x28
   14000ba74:	test   rcx,rcx
   14000ba77:	jne    0x14000ba90
   14000ba79:	call   0x140003564
   14000ba7e:	mov    DWORD PTR [rax],0x16
   14000ba84:	call   0x1400034fc
   14000ba89:	mov    eax,0x16
   14000ba8e:	jmp    0x14000ba9a
   14000ba90:	mov    eax,DWORD PTR [rip+0x895a]        # 0x1400143f0
   14000ba96:	mov    DWORD PTR [rcx],eax
   14000ba98:	xor    eax,eax
   14000ba9a:	add    rsp,0x28
   14000ba9e:	ret    
   14000ba9f:	int3   
   14000baa0:	mov    QWORD PTR [rsp+0x10],rbx
   14000baa5:	mov    WORD PTR [rsp+0x8],cx
   14000baaa:	push   rbp
   14000baab:	mov    rbp,rsp
   14000baae:	sub    rsp,0x50
   14000bab2:	mov    eax,0xffff
   14000bab7:	cmp    cx,ax
   14000baba:	je     0x14000bb6a
   14000bac0:	lea    rcx,[rbp-0x20]
   14000bac4:	call   0x140004978
   14000bac9:	mov    rbx,QWORD PTR [rbp-0x20]
   14000bacd:	cmp    DWORD PTR [rbx+0x14],0x0
   14000bad1:	jne    0x14000bafa
   14000bad3:	movzx  edx,WORD PTR [rbp+0x10]
   14000bad7:	lea    eax,[rdx-0x41]
   14000bada:	cmp    ax,0x19
   14000bade:	ja     0x14000bae4
   14000bae0:	add    dx,0x20
   14000bae4:	cmp    BYTE PTR [rbp-0x8],0x0
   14000bae8:	je     0x14000baf5
   14000baea:	mov    rcx,QWORD PTR [rbp-0x10]
   14000baee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000baf5:	movzx  eax,dx
   14000baf8:	jmp    0x14000bb6a
   14000bafa:	movzx  ecx,WORD PTR [rbp+0x10]
   14000bafe:	mov    edx,0x100
   14000bb03:	cmp    cx,dx
   14000bb06:	jae    0x14000bb2d
   14000bb08:	mov    edx,0x1
   14000bb0d:	call   0x140002330
   14000bb12:	test   eax,eax
   14000bb14:	jne    0x14000bb1c
   14000bb16:	movzx  eax,WORD PTR [rbp+0x10]
   14000bb1a:	jmp    0x14000bb59
   14000bb1c:	movzx  ecx,WORD PTR [rbp+0x10]
   14000bb20:	mov    rax,QWORD PTR [rbx+0x148]
   14000bb27:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000bb2b:	jmp    0x14000bb59
   14000bb2d:	mov    ecx,DWORD PTR [rbx+0x14]
   14000bb30:	lea    rax,[rbp+0x20]
   14000bb34:	mov    r9d,0x1
   14000bb3a:	mov    DWORD PTR [rsp+0x28],r9d
   14000bb3f:	lea    r8,[rbp+0x10]
   14000bb43:	mov    QWORD PTR [rsp+0x20],rax
   14000bb48:	call   0x14000ca50
   14000bb4d:	test   eax,eax
   14000bb4f:	movzx  eax,WORD PTR [rbp+0x10]
   14000bb53:	je     0x14000bb59
   14000bb55:	movzx  eax,WORD PTR [rbp+0x20]
   14000bb59:	cmp    BYTE PTR [rbp-0x8],0x0
   14000bb5d:	je     0x14000bb6a
   14000bb5f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000bb63:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000bb6a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000bb6f:	add    rsp,0x50
   14000bb73:	pop    rbp
   14000bb74:	ret    
   14000bb75:	int3   
   14000bb76:	int3   
   14000bb77:	int3   
   14000bb78:	int3   
   14000bb79:	int3   
   14000bb7a:	int3   
   14000bb7b:	int3   
   14000bb7c:	int3   
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	int3   
   14000bb81:	int3   
   14000bb82:	int3   
   14000bb83:	int3   
   14000bb84:	int3   
   14000bb85:	int3   
   14000bb86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bb90:	sub    rsp,0x10
   14000bb94:	mov    QWORD PTR [rsp],r10
   14000bb98:	mov    QWORD PTR [rsp+0x8],r11
   14000bb9d:	xor    r11,r11
   14000bba0:	lea    r10,[rsp+0x18]
   14000bba5:	sub    r10,rax
   14000bba8:	cmovb  r10,r11
   14000bbac:	mov    r11,QWORD PTR gs:0x10
   14000bbb5:	cmp    r10,r11
   14000bbb8:	jae    0x14000bbd0
   14000bbba:	and    r10w,0xf000
   14000bbc0:	lea    r11,[r11-0x1000]
   14000bbc7:	mov    BYTE PTR [r11],0x0
   14000bbcb:	cmp    r10,r11
   14000bbce:	jne    0x14000bbc0
   14000bbd0:	mov    r10,QWORD PTR [rsp]
   14000bbd4:	mov    r11,QWORD PTR [rsp+0x8]
   14000bbd9:	add    rsp,0x10
   14000bbdd:	ret    
   14000bbde:	int3   
   14000bbdf:	int3   
   14000bbe0:	test   rcx,rcx
   14000bbe3:	je     0x14000bfcd
   14000bbe9:	push   rbx
   14000bbea:	sub    rsp,0x20
   14000bbee:	mov    rbx,rcx
   14000bbf1:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bbf5:	call   0x140001eb4
   14000bbfa:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bbfe:	call   0x140001eb4
   14000bc03:	mov    rcx,QWORD PTR [rbx+0x18]
   14000bc07:	call   0x140001eb4
   14000bc0c:	mov    rcx,QWORD PTR [rbx+0x20]
   14000bc10:	call   0x140001eb4
   14000bc15:	mov    rcx,QWORD PTR [rbx+0x28]
   14000bc19:	call   0x140001eb4
   14000bc1e:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bc22:	call   0x140001eb4
   14000bc27:	mov    rcx,QWORD PTR [rbx]
   14000bc2a:	call   0x140001eb4
   14000bc2f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000bc33:	call   0x140001eb4
   14000bc38:	mov    rcx,QWORD PTR [rbx+0x48]
   14000bc3c:	call   0x140001eb4
   14000bc41:	mov    rcx,QWORD PTR [rbx+0x50]
   14000bc45:	call   0x140001eb4
   14000bc4a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000bc4e:	call   0x140001eb4
   14000bc53:	mov    rcx,QWORD PTR [rbx+0x60]
   14000bc57:	call   0x140001eb4
   14000bc5c:	mov    rcx,QWORD PTR [rbx+0x68]
   14000bc60:	call   0x140001eb4
   14000bc65:	mov    rcx,QWORD PTR [rbx+0x38]
   14000bc69:	call   0x140001eb4
   14000bc6e:	mov    rcx,QWORD PTR [rbx+0x70]
   14000bc72:	call   0x140001eb4
   14000bc77:	mov    rcx,QWORD PTR [rbx+0x78]
   14000bc7b:	call   0x140001eb4
   14000bc80:	mov    rcx,QWORD PTR [rbx+0x80]
   14000bc87:	call   0x140001eb4
   14000bc8c:	mov    rcx,QWORD PTR [rbx+0x88]
   14000bc93:	call   0x140001eb4
   14000bc98:	mov    rcx,QWORD PTR [rbx+0x90]
   14000bc9f:	call   0x140001eb4
   14000bca4:	mov    rcx,QWORD PTR [rbx+0x98]
   14000bcab:	call   0x140001eb4
   14000bcb0:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000bcb7:	call   0x140001eb4
   14000bcbc:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000bcc3:	call   0x140001eb4
   14000bcc8:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000bccf:	call   0x140001eb4
   14000bcd4:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000bcdb:	call   0x140001eb4
   14000bce0:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000bce7:	call   0x140001eb4
   14000bcec:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000bcf3:	call   0x140001eb4
   14000bcf8:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000bcff:	call   0x140001eb4
   14000bd04:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000bd0b:	call   0x140001eb4
   14000bd10:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000bd17:	call   0x140001eb4
   14000bd1c:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000bd23:	call   0x140001eb4
   14000bd28:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000bd2f:	call   0x140001eb4
   14000bd34:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000bd3b:	call   0x140001eb4
   14000bd40:	mov    rcx,QWORD PTR [rbx+0x100]
   14000bd47:	call   0x140001eb4
   14000bd4c:	mov    rcx,QWORD PTR [rbx+0x108]
   14000bd53:	call   0x140001eb4
   14000bd58:	mov    rcx,QWORD PTR [rbx+0x110]
   14000bd5f:	call   0x140001eb4
   14000bd64:	mov    rcx,QWORD PTR [rbx+0x118]
   14000bd6b:	call   0x140001eb4
   14000bd70:	mov    rcx,QWORD PTR [rbx+0x120]
   14000bd77:	call   0x140001eb4
   14000bd7c:	mov    rcx,QWORD PTR [rbx+0x128]
   14000bd83:	call   0x140001eb4
   14000bd88:	mov    rcx,QWORD PTR [rbx+0x130]
   14000bd8f:	call   0x140001eb4
   14000bd94:	mov    rcx,QWORD PTR [rbx+0x138]
   14000bd9b:	call   0x140001eb4
   14000bda0:	mov    rcx,QWORD PTR [rbx+0x140]
   14000bda7:	call   0x140001eb4
   14000bdac:	mov    rcx,QWORD PTR [rbx+0x148]
   14000bdb3:	call   0x140001eb4
   14000bdb8:	mov    rcx,QWORD PTR [rbx+0x150]
   14000bdbf:	call   0x140001eb4
   14000bdc4:	mov    rcx,QWORD PTR [rbx+0x170]
   14000bdcb:	call   0x140001eb4
   14000bdd0:	mov    rcx,QWORD PTR [rbx+0x178]
   14000bdd7:	call   0x140001eb4
   14000bddc:	mov    rcx,QWORD PTR [rbx+0x180]
   14000bde3:	call   0x140001eb4
   14000bde8:	mov    rcx,QWORD PTR [rbx+0x188]
   14000bdef:	call   0x140001eb4
   14000bdf4:	mov    rcx,QWORD PTR [rbx+0x190]
   14000bdfb:	call   0x140001eb4
   14000be00:	mov    rcx,QWORD PTR [rbx+0x198]
   14000be07:	call   0x140001eb4
   14000be0c:	mov    rcx,QWORD PTR [rbx+0x168]
   14000be13:	call   0x140001eb4
   14000be18:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000be1f:	call   0x140001eb4
   14000be24:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000be2b:	call   0x140001eb4
   14000be30:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000be37:	call   0x140001eb4
   14000be3c:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000be43:	call   0x140001eb4
   14000be48:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000be4f:	call   0x140001eb4
   14000be54:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000be5b:	call   0x140001eb4
   14000be60:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000be67:	call   0x140001eb4
   14000be6c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000be73:	call   0x140001eb4
   14000be78:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000be7f:	call   0x140001eb4
   14000be84:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000be8b:	call   0x140001eb4
   14000be90:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000be97:	call   0x140001eb4
   14000be9c:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000bea3:	call   0x140001eb4
   14000bea8:	mov    rcx,QWORD PTR [rbx+0x200]
   14000beaf:	call   0x140001eb4
   14000beb4:	mov    rcx,QWORD PTR [rbx+0x208]
   14000bebb:	call   0x140001eb4
   14000bec0:	mov    rcx,QWORD PTR [rbx+0x210]
   14000bec7:	call   0x140001eb4
   14000becc:	mov    rcx,QWORD PTR [rbx+0x218]
   14000bed3:	call   0x140001eb4
   14000bed8:	mov    rcx,QWORD PTR [rbx+0x220]
   14000bedf:	call   0x140001eb4
   14000bee4:	mov    rcx,QWORD PTR [rbx+0x228]
   14000beeb:	call   0x140001eb4
   14000bef0:	mov    rcx,QWORD PTR [rbx+0x230]
   14000bef7:	call   0x140001eb4
   14000befc:	mov    rcx,QWORD PTR [rbx+0x238]
   14000bf03:	call   0x140001eb4
   14000bf08:	mov    rcx,QWORD PTR [rbx+0x240]
   14000bf0f:	call   0x140001eb4
   14000bf14:	mov    rcx,QWORD PTR [rbx+0x248]
   14000bf1b:	call   0x140001eb4
   14000bf20:	mov    rcx,QWORD PTR [rbx+0x250]
   14000bf27:	call   0x140001eb4
   14000bf2c:	mov    rcx,QWORD PTR [rbx+0x258]
   14000bf33:	call   0x140001eb4
   14000bf38:	mov    rcx,QWORD PTR [rbx+0x260]
   14000bf3f:	call   0x140001eb4
   14000bf44:	mov    rcx,QWORD PTR [rbx+0x268]
   14000bf4b:	call   0x140001eb4
   14000bf50:	mov    rcx,QWORD PTR [rbx+0x270]
   14000bf57:	call   0x140001eb4
   14000bf5c:	mov    rcx,QWORD PTR [rbx+0x278]
   14000bf63:	call   0x140001eb4
   14000bf68:	mov    rcx,QWORD PTR [rbx+0x280]
   14000bf6f:	call   0x140001eb4
   14000bf74:	mov    rcx,QWORD PTR [rbx+0x288]
   14000bf7b:	call   0x140001eb4
   14000bf80:	mov    rcx,QWORD PTR [rbx+0x290]
   14000bf87:	call   0x140001eb4
   14000bf8c:	mov    rcx,QWORD PTR [rbx+0x298]
   14000bf93:	call   0x140001eb4
   14000bf98:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000bf9f:	call   0x140001eb4
   14000bfa4:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000bfab:	call   0x140001eb4
   14000bfb0:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000bfb7:	call   0x140001eb4
   14000bfbc:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000bfc3:	call   0x140001eb4
   14000bfc8:	add    rsp,0x20
   14000bfcc:	pop    rbx
   14000bfcd:	ret    
   14000bfce:	int3   
   14000bfcf:	int3   
   14000bfd0:	test   rcx,rcx
   14000bfd3:	je     0x14000c03b
   14000bfd5:	push   rbx
   14000bfd6:	sub    rsp,0x20
   14000bfda:	mov    rbx,rcx
   14000bfdd:	mov    rcx,QWORD PTR [rcx]
   14000bfe0:	cmp    rcx,QWORD PTR [rip+0x7319]        # 0x140013300
   14000bfe7:	je     0x14000bfee
   14000bfe9:	call   0x140001eb4
   14000bfee:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bff2:	cmp    rcx,QWORD PTR [rip+0x730f]        # 0x140013308
   14000bff9:	je     0x14000c000
   14000bffb:	call   0x140001eb4
   14000c000:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c004:	cmp    rcx,QWORD PTR [rip+0x7305]        # 0x140013310
   14000c00b:	je     0x14000c012
   14000c00d:	call   0x140001eb4
   14000c012:	mov    rcx,QWORD PTR [rbx+0x58]
   14000c016:	cmp    rcx,QWORD PTR [rip+0x733b]        # 0x140013358
   14000c01d:	je     0x14000c024
   14000c01f:	call   0x140001eb4
   14000c024:	mov    rcx,QWORD PTR [rbx+0x60]
   14000c028:	cmp    rcx,QWORD PTR [rip+0x7331]        # 0x140013360
   14000c02f:	je     0x14000c036
   14000c031:	call   0x140001eb4
   14000c036:	add    rsp,0x20
   14000c03a:	pop    rbx
   14000c03b:	ret    
   14000c03c:	test   rcx,rcx
   14000c03f:	je     0x14000c145
   14000c045:	push   rbx
   14000c046:	sub    rsp,0x20
   14000c04a:	mov    rbx,rcx
   14000c04d:	mov    rcx,QWORD PTR [rcx+0x18]
   14000c051:	cmp    rcx,QWORD PTR [rip+0x72c0]        # 0x140013318
   14000c058:	je     0x14000c05f
   14000c05a:	call   0x140001eb4
   14000c05f:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c063:	cmp    rcx,QWORD PTR [rip+0x72b6]        # 0x140013320
   14000c06a:	je     0x14000c071
   14000c06c:	call   0x140001eb4
   14000c071:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c075:	cmp    rcx,QWORD PTR [rip+0x72ac]        # 0x140013328
   14000c07c:	je     0x14000c083
   14000c07e:	call   0x140001eb4
   14000c083:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c087:	cmp    rcx,QWORD PTR [rip+0x72a2]        # 0x140013330
   14000c08e:	je     0x14000c095
   14000c090:	call   0x140001eb4
   14000c095:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c099:	cmp    rcx,QWORD PTR [rip+0x7298]        # 0x140013338
   14000c0a0:	je     0x14000c0a7
   14000c0a2:	call   0x140001eb4
   14000c0a7:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c0ab:	cmp    rcx,QWORD PTR [rip+0x728e]        # 0x140013340
   14000c0b2:	je     0x14000c0b9
   14000c0b4:	call   0x140001eb4
   14000c0b9:	mov    rcx,QWORD PTR [rbx+0x48]
   14000c0bd:	cmp    rcx,QWORD PTR [rip+0x7284]        # 0x140013348
   14000c0c4:	je     0x14000c0cb
   14000c0c6:	call   0x140001eb4
   14000c0cb:	mov    rcx,QWORD PTR [rbx+0x68]
   14000c0cf:	cmp    rcx,QWORD PTR [rip+0x7292]        # 0x140013368
   14000c0d6:	je     0x14000c0dd
   14000c0d8:	call   0x140001eb4
   14000c0dd:	mov    rcx,QWORD PTR [rbx+0x70]
   14000c0e1:	cmp    rcx,QWORD PTR [rip+0x7288]        # 0x140013370
   14000c0e8:	je     0x14000c0ef
   14000c0ea:	call   0x140001eb4
   14000c0ef:	mov    rcx,QWORD PTR [rbx+0x78]
   14000c0f3:	cmp    rcx,QWORD PTR [rip+0x727e]        # 0x140013378
   14000c0fa:	je     0x14000c101
   14000c0fc:	call   0x140001eb4
   14000c101:	mov    rcx,QWORD PTR [rbx+0x80]
   14000c108:	cmp    rcx,QWORD PTR [rip+0x7271]        # 0x140013380
   14000c10f:	je     0x14000c116
   14000c111:	call   0x140001eb4
   14000c116:	mov    rcx,QWORD PTR [rbx+0x88]
   14000c11d:	cmp    rcx,QWORD PTR [rip+0x7264]        # 0x140013388
   14000c124:	je     0x14000c12b
   14000c126:	call   0x140001eb4
   14000c12b:	mov    rcx,QWORD PTR [rbx+0x90]
   14000c132:	cmp    rcx,QWORD PTR [rip+0x7257]        # 0x140013390
   14000c139:	je     0x14000c140
   14000c13b:	call   0x140001eb4
   14000c140:	add    rsp,0x20
   14000c144:	pop    rbx
   14000c145:	ret    
   14000c146:	int3   
   14000c147:	int3   
   14000c148:	rex push rbp
   14000c14a:	push   r12
   14000c14c:	push   r13
   14000c14e:	push   r14
   14000c150:	push   r15
   14000c152:	sub    rsp,0x50
   14000c156:	lea    rbp,[rsp+0x40]
   14000c15b:	mov    QWORD PTR [rbp+0x40],rbx
   14000c15f:	mov    QWORD PTR [rbp+0x48],rsi
   14000c163:	mov    QWORD PTR [rbp+0x50],rdi
   14000c167:	mov    rax,QWORD PTR [rip+0x5e9a]        # 0x140012008
   14000c16e:	xor    rax,rbp
   14000c171:	mov    QWORD PTR [rbp+0x8],rax
   14000c175:	mov    ebx,DWORD PTR [rbp+0x60]
   14000c178:	xor    edi,edi
   14000c17a:	mov    r14,r9
   14000c17d:	mov    r15d,r8d
   14000c180:	mov    DWORD PTR [rbp+0x0],edx
   14000c183:	test   ebx,ebx
   14000c185:	jle    0x14000c1b1
   14000c187:	mov    r10d,ebx
   14000c18a:	mov    rax,r9
   14000c18d:	dec    r10d
   14000c190:	cmp    BYTE PTR [rax],dil
   14000c193:	je     0x14000c1a1
   14000c195:	inc    rax
   14000c198:	test   r10d,r10d
   14000c19b:	jne    0x14000c18d
   14000c19d:	or     r10d,0xffffffff
   14000c1a1:	mov    eax,ebx
   14000c1a3:	sub    eax,r10d
   14000c1a6:	dec    eax
   14000c1a8:	cmp    eax,ebx
   14000c1aa:	lea    ebx,[rax+0x1]
   14000c1ad:	jl     0x14000c1b1
   14000c1af:	mov    ebx,eax
   14000c1b1:	mov    r12d,DWORD PTR [rbp+0x78]
   14000c1b5:	mov    esi,edi
   14000c1b7:	test   r12d,r12d
   14000c1ba:	jne    0x14000c1c3
   14000c1bc:	mov    rax,QWORD PTR [rcx]
   14000c1bf:	mov    r12d,DWORD PTR [rax+0x4]
   14000c1c3:	neg    DWORD PTR [rbp+0x80]
   14000c1c9:	mov    r9d,ebx
   14000c1cc:	mov    r8,r14
   14000c1cf:	sbb    edx,edx
   14000c1d1:	mov    ecx,r12d
   14000c1d4:	mov    DWORD PTR [rsp+0x28],edi
   14000c1d8:	and    edx,0x8
   14000c1db:	mov    QWORD PTR [rsp+0x20],rdi
   14000c1e0:	inc    edx
   14000c1e2:	call   QWORD PTR [rip+0x1e78]        # 0x14000e060
   14000c1e8:	movsxd r13,eax
   14000c1eb:	test   eax,eax
   14000c1ed:	jne    0x14000c1f6
   14000c1ef:	xor    eax,eax
   14000c1f1:	jmp    0x14000c3ec
   14000c1f6:	movabs r8,0xffffffffffffff0
   14000c200:	test   eax,eax
   14000c202:	jle    0x14000c262
   14000c204:	xor    edx,edx
   14000c206:	lea    rax,[rdx-0x20]
   14000c20a:	div    r13
   14000c20d:	cmp    rax,0x2
   14000c211:	jb     0x14000c262
   14000c213:	lea    rcx,[r13+r13*1+0x10]
   14000c218:	cmp    rcx,0x400
   14000c21f:	ja     0x14000c24b
   14000c221:	lea    rax,[rcx+0xf]
   14000c225:	cmp    rax,rcx
   14000c228:	ja     0x14000c22d
   14000c22a:	mov    rax,r8
   14000c22d:	and    rax,0xfffffffffffffff0
   14000c231:	call   0x14000bb90
   14000c236:	sub    rsp,rax
   14000c239:	lea    rdi,[rsp+0x40]
   14000c23e:	test   rdi,rdi
   14000c241:	je     0x14000c1ef
   14000c243:	mov    DWORD PTR [rdi],0xcccc
   14000c249:	jmp    0x14000c25e
   14000c24b:	call   0x140001f38
   14000c250:	mov    rdi,rax
   14000c253:	test   rax,rax
   14000c256:	je     0x14000c262
   14000c258:	mov    DWORD PTR [rax],0xdddd
   14000c25e:	add    rdi,0x10
   14000c262:	test   rdi,rdi
   14000c265:	je     0x14000c1ef
   14000c267:	mov    r9d,ebx
   14000c26a:	mov    r8,r14
   14000c26d:	mov    edx,0x1
   14000c272:	mov    ecx,r12d
   14000c275:	mov    DWORD PTR [rsp+0x28],r13d
   14000c27a:	mov    QWORD PTR [rsp+0x20],rdi
   14000c27f:	call   QWORD PTR [rip+0x1ddb]        # 0x14000e060
   14000c285:	test   eax,eax
   14000c287:	je     0x14000c3d9
   14000c28d:	mov    r14d,DWORD PTR [rbp+0x0]
   14000c291:	and    DWORD PTR [rsp+0x28],esi
   14000c295:	and    QWORD PTR [rsp+0x20],rsi
   14000c29a:	mov    ecx,r14d
   14000c29d:	mov    r9d,r13d
   14000c2a0:	mov    r8,rdi
   14000c2a3:	mov    edx,r15d
   14000c2a6:	call   QWORD PTR [rip+0x1fc4]        # 0x14000e270
   14000c2ac:	movsxd rsi,eax
   14000c2af:	test   eax,eax
   14000c2b1:	je     0x14000c3d9
   14000c2b7:	mov    r8d,0x400
   14000c2bd:	test   r8d,r15d
   14000c2c0:	je     0x14000c2f9
   14000c2c2:	mov    ecx,DWORD PTR [rbp+0x70]
   14000c2c5:	test   ecx,ecx
   14000c2c7:	je     0x14000c3d9
   14000c2cd:	cmp    esi,ecx
   14000c2cf:	jg     0x14000c3d9
   14000c2d5:	mov    rax,QWORD PTR [rbp+0x68]
   14000c2d9:	mov    DWORD PTR [rsp+0x28],ecx
   14000c2dd:	mov    r9d,r13d
   14000c2e0:	mov    r8,rdi
   14000c2e3:	mov    edx,r15d
   14000c2e6:	mov    ecx,r14d
   14000c2e9:	mov    QWORD PTR [rsp+0x20],rax
   14000c2ee:	call   QWORD PTR [rip+0x1f7c]        # 0x14000e270
   14000c2f4:	jmp    0x14000c3d9
   14000c2f9:	test   eax,eax
   14000c2fb:	jle    0x14000c364
   14000c2fd:	xor    edx,edx
   14000c2ff:	lea    rax,[rdx-0x20]
   14000c303:	div    rsi
   14000c306:	cmp    rax,0x2
   14000c30a:	jb     0x14000c364
   14000c30c:	lea    rcx,[rsi+rsi*1+0x10]
   14000c311:	cmp    rcx,r8
   14000c314:	ja     0x14000c34b
   14000c316:	lea    rax,[rcx+0xf]
   14000c31a:	cmp    rax,rcx
   14000c31d:	ja     0x14000c329
   14000c31f:	movabs rax,0xffffffffffffff0
   14000c329:	and    rax,0xfffffffffffffff0
   14000c32d:	call   0x14000bb90
   14000c332:	sub    rsp,rax
   14000c335:	lea    rbx,[rsp+0x40]
   14000c33a:	test   rbx,rbx
   14000c33d:	je     0x14000c3d9
   14000c343:	mov    DWORD PTR [rbx],0xcccc
   14000c349:	jmp    0x14000c35e
   14000c34b:	call   0x140001f38
   14000c350:	mov    rbx,rax
   14000c353:	test   rax,rax
   14000c356:	je     0x14000c366
   14000c358:	mov    DWORD PTR [rax],0xdddd
   14000c35e:	add    rbx,0x10
   14000c362:	jmp    0x14000c366
   14000c364:	xor    ebx,ebx
   14000c366:	test   rbx,rbx
   14000c369:	je     0x14000c3d9
   14000c36b:	mov    r9d,r13d
   14000c36e:	mov    r8,rdi
   14000c371:	mov    edx,r15d
   14000c374:	mov    ecx,r14d
   14000c377:	mov    DWORD PTR [rsp+0x28],esi
   14000c37b:	mov    QWORD PTR [rsp+0x20],rbx
   14000c380:	call   QWORD PTR [rip+0x1eea]        # 0x14000e270
   14000c386:	xor    ecx,ecx
   14000c388:	test   eax,eax
   14000c38a:	je     0x14000c3c8
   14000c38c:	mov    eax,DWORD PTR [rbp+0x70]
   14000c38f:	xor    edx,edx
   14000c391:	mov    QWORD PTR [rsp+0x38],rcx
   14000c396:	mov    r9d,esi
   14000c399:	mov    r8,rbx
   14000c39c:	mov    QWORD PTR [rsp+0x30],rcx
   14000c3a1:	test   eax,eax
   14000c3a3:	jne    0x14000c3b0
   14000c3a5:	mov    DWORD PTR [rsp+0x28],ecx
   14000c3a9:	mov    QWORD PTR [rsp+0x20],rcx
   14000c3ae:	jmp    0x14000c3bd
   14000c3b0:	mov    DWORD PTR [rsp+0x28],eax
   14000c3b4:	mov    rax,QWORD PTR [rbp+0x68]
   14000c3b8:	mov    QWORD PTR [rsp+0x20],rax
   14000c3bd:	mov    ecx,r12d
   14000c3c0:	call   QWORD PTR [rip+0x1e0a]        # 0x14000e1d0
   14000c3c6:	mov    esi,eax
   14000c3c8:	lea    rcx,[rbx-0x10]
   14000c3cc:	cmp    DWORD PTR [rcx],0xdddd
   14000c3d2:	jne    0x14000c3d9
   14000c3d4:	call   0x140001eb4
   14000c3d9:	lea    rcx,[rdi-0x10]
   14000c3dd:	cmp    DWORD PTR [rcx],0xdddd
   14000c3e3:	jne    0x14000c3ea
   14000c3e5:	call   0x140001eb4
   14000c3ea:	mov    eax,esi
   14000c3ec:	mov    rcx,QWORD PTR [rbp+0x8]
   14000c3f0:	xor    rcx,rbp
   14000c3f3:	call   0x140001980
   14000c3f8:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c3fc:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c400:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c404:	lea    rsp,[rbp+0x10]
   14000c408:	pop    r15
   14000c40a:	pop    r14
   14000c40c:	pop    r13
   14000c40e:	pop    r12
   14000c410:	pop    rbp
   14000c411:	ret    
   14000c412:	int3   
   14000c413:	int3   
   14000c414:	mov    QWORD PTR [rsp+0x8],rbx
   14000c419:	mov    QWORD PTR [rsp+0x10],rsi
   14000c41e:	push   rdi
   14000c41f:	sub    rsp,0x70
   14000c423:	mov    esi,edx
   14000c425:	mov    rdx,rcx
   14000c428:	lea    rcx,[rsp+0x50]
   14000c42d:	mov    rbx,r9
   14000c430:	mov    edi,r8d
   14000c433:	call   0x140004978
   14000c438:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c43f:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000c447:	lea    rcx,[rsp+0x50]
   14000c44c:	mov    DWORD PTR [rsp+0x40],r11d
   14000c451:	mov    DWORD PTR [rsp+0x38],eax
   14000c455:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c45c:	mov    DWORD PTR [rsp+0x30],eax
   14000c460:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c468:	mov    r9,rbx
   14000c46b:	mov    QWORD PTR [rsp+0x28],rax
   14000c470:	mov    eax,DWORD PTR [rsp+0xa0]
   14000c477:	mov    r8d,edi
   14000c47a:	mov    edx,esi
   14000c47c:	mov    DWORD PTR [rsp+0x20],eax
   14000c480:	call   0x14000c148
   14000c485:	cmp    BYTE PTR [rsp+0x68],0x0
   14000c48a:	je     0x14000c498
   14000c48c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c491:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c498:	lea    r11,[rsp+0x70]
   14000c49d:	mov    rbx,QWORD PTR [r11+0x10]
   14000c4a1:	mov    rsi,QWORD PTR [r11+0x18]
   14000c4a5:	mov    rsp,r11
   14000c4a8:	pop    rdi
   14000c4a9:	ret    
   14000c4aa:	int3   
   14000c4ab:	int3   
   14000c4ac:	rex push rbp
   14000c4ae:	push   r12
   14000c4b0:	push   r13
   14000c4b2:	push   r14
   14000c4b4:	push   r15
   14000c4b6:	sub    rsp,0x40
   14000c4ba:	lea    rbp,[rsp+0x30]
   14000c4bf:	mov    QWORD PTR [rbp+0x40],rbx
   14000c4c3:	mov    QWORD PTR [rbp+0x48],rsi
   14000c4c7:	mov    QWORD PTR [rbp+0x50],rdi
   14000c4cb:	mov    rax,QWORD PTR [rip+0x5b36]        # 0x140012008
   14000c4d2:	xor    rax,rbp
   14000c4d5:	mov    QWORD PTR [rbp+0x0],rax
   14000c4d9:	mov    esi,DWORD PTR [rbp+0x68]
   14000c4dc:	xor    edi,edi
   14000c4de:	mov    r13d,r9d
   14000c4e1:	mov    r14,r8
   14000c4e4:	mov    r15d,edx
   14000c4e7:	test   esi,esi
   14000c4e9:	jne    0x14000c4f1
   14000c4eb:	mov    rax,QWORD PTR [rcx]
   14000c4ee:	mov    esi,DWORD PTR [rax+0x4]
   14000c4f1:	neg    DWORD PTR [rbp+0x70]
   14000c4f4:	mov    ecx,esi
   14000c4f6:	mov    DWORD PTR [rsp+0x28],edi
   14000c4fa:	sbb    edx,edx
   14000c4fc:	mov    QWORD PTR [rsp+0x20],rdi
   14000c501:	and    edx,0x8
   14000c504:	inc    edx
   14000c506:	call   QWORD PTR [rip+0x1b54]        # 0x14000e060
   14000c50c:	movsxd r12,eax
   14000c50f:	test   eax,eax
   14000c511:	jne    0x14000c51a
   14000c513:	xor    eax,eax
   14000c515:	jmp    0x14000c5e4
   14000c51a:	jle    0x14000c583
   14000c51c:	movabs rax,0x7ffffffffffffff0
   14000c526:	cmp    r12,rax
   14000c529:	ja     0x14000c583
   14000c52b:	lea    rcx,[r12+r12*1+0x10]
   14000c530:	cmp    rcx,0x400
   14000c537:	ja     0x14000c56a
   14000c539:	lea    rax,[rcx+0xf]
   14000c53d:	cmp    rax,rcx
   14000c540:	ja     0x14000c54c
   14000c542:	movabs rax,0xffffffffffffff0
   14000c54c:	and    rax,0xfffffffffffffff0
   14000c550:	call   0x14000bb90
   14000c555:	sub    rsp,rax
   14000c558:	lea    rbx,[rsp+0x30]
   14000c55d:	test   rbx,rbx
   14000c560:	je     0x14000c513
   14000c562:	mov    DWORD PTR [rbx],0xcccc
   14000c568:	jmp    0x14000c57d
   14000c56a:	call   0x140001f38
   14000c56f:	mov    rbx,rax
   14000c572:	test   rax,rax
   14000c575:	je     0x14000c586
   14000c577:	mov    DWORD PTR [rax],0xdddd
   14000c57d:	add    rbx,0x10
   14000c581:	jmp    0x14000c586
   14000c583:	mov    rbx,rdi
   14000c586:	test   rbx,rbx
   14000c589:	je     0x14000c513
   14000c58b:	mov    r8,r12
   14000c58e:	xor    edx,edx
   14000c590:	mov    rcx,rbx
   14000c593:	add    r8,r8
   14000c596:	call   0x140004a30
   14000c59b:	mov    r9d,r13d
   14000c59e:	mov    r8,r14
   14000c5a1:	mov    edx,0x1
   14000c5a6:	mov    ecx,esi
   14000c5a8:	mov    DWORD PTR [rsp+0x28],r12d
   14000c5ad:	mov    QWORD PTR [rsp+0x20],rbx
   14000c5b2:	call   QWORD PTR [rip+0x1aa8]        # 0x14000e060
   14000c5b8:	test   eax,eax
   14000c5ba:	je     0x14000c5d1
   14000c5bc:	mov    r9,QWORD PTR [rbp+0x60]
   14000c5c0:	mov    r8d,eax
   14000c5c3:	mov    rdx,rbx
   14000c5c6:	mov    ecx,r15d
   14000c5c9:	call   QWORD PTR [rip+0x1af9]        # 0x14000e0c8
   14000c5cf:	mov    edi,eax
   14000c5d1:	lea    rcx,[rbx-0x10]
   14000c5d5:	cmp    DWORD PTR [rcx],0xdddd
   14000c5db:	jne    0x14000c5e2
   14000c5dd:	call   0x140001eb4
   14000c5e2:	mov    eax,edi
   14000c5e4:	mov    rcx,QWORD PTR [rbp+0x0]
   14000c5e8:	xor    rcx,rbp
   14000c5eb:	call   0x140001980
   14000c5f0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c5f4:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c5f8:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c5fc:	lea    rsp,[rbp+0x10]
   14000c600:	pop    r15
   14000c602:	pop    r14
   14000c604:	pop    r13
   14000c606:	pop    r12
   14000c608:	pop    rbp
   14000c609:	ret    
   14000c60a:	int3   
   14000c60b:	int3   
   14000c60c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c611:	mov    QWORD PTR [rsp+0x10],rsi
   14000c616:	push   rdi
   14000c617:	sub    rsp,0x60
   14000c61b:	mov    esi,edx
   14000c61d:	mov    rdx,rcx
   14000c620:	lea    rcx,[rsp+0x40]
   14000c625:	mov    ebx,r9d
   14000c628:	mov    rdi,r8
   14000c62b:	call   0x140004978
   14000c630:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000c638:	mov    eax,DWORD PTR [rsp+0x98]
   14000c63f:	lea    rcx,[rsp+0x40]
   14000c644:	mov    DWORD PTR [rsp+0x30],r11d
   14000c649:	mov    DWORD PTR [rsp+0x28],eax
   14000c64d:	mov    rax,QWORD PTR [rsp+0x90]
   14000c655:	mov    r9d,ebx
   14000c658:	mov    r8,rdi
   14000c65b:	mov    edx,esi
   14000c65d:	mov    QWORD PTR [rsp+0x20],rax
   14000c662:	call   0x14000c4ac
   14000c667:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c66c:	je     0x14000c67a
   14000c66e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c673:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c67a:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c67f:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c684:	add    rsp,0x60
   14000c688:	pop    rdi
   14000c689:	ret    
   14000c68a:	int3   
   14000c68b:	int3   
   14000c68c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c691:	mov    WORD PTR [rsp+0x20],r9w
   14000c697:	push   rbp
   14000c698:	push   rsi
   14000c699:	push   rdi
   14000c69a:	mov    rbp,rsp
   14000c69d:	sub    rsp,0x60
   14000c6a1:	mov    rdi,r8
   14000c6a4:	mov    rsi,rdx
   14000c6a7:	mov    rbx,rcx
   14000c6aa:	test   rdx,rdx
   14000c6ad:	jne    0x14000c6c2
   14000c6af:	test   r8,r8
   14000c6b2:	je     0x14000c6c2
   14000c6b4:	test   rcx,rcx
   14000c6b7:	je     0x14000c6bb
   14000c6b9:	and    DWORD PTR [rcx],edx
   14000c6bb:	xor    eax,eax
   14000c6bd:	jmp    0x14000c74c
   14000c6c2:	test   rcx,rcx
   14000c6c5:	je     0x14000c6ca
   14000c6c7:	or     DWORD PTR [rcx],0xffffffff
   14000c6ca:	cmp    r8,0x7fffffff
   14000c6d1:	jbe    0x14000c6e8
   14000c6d3:	call   0x140003564
   14000c6d8:	mov    ebx,0x16
   14000c6dd:	mov    DWORD PTR [rax],ebx
   14000c6df:	call   0x1400034fc
   14000c6e4:	mov    eax,ebx
   14000c6e6:	jmp    0x14000c74c
   14000c6e8:	mov    rdx,QWORD PTR [rbp+0x40]
   14000c6ec:	lea    rcx,[rbp-0x20]
   14000c6f0:	call   0x140004978
   14000c6f5:	mov    r11,QWORD PTR [rbp-0x20]
   14000c6f9:	cmp    DWORD PTR [r11+0x14],0x0
   14000c6fe:	jne    0x14000c7b6
   14000c704:	movzx  eax,WORD PTR [rbp+0x38]
   14000c708:	mov    ecx,0xff
   14000c70d:	cmp    ax,cx
   14000c710:	jbe    0x14000c75c
   14000c712:	test   rsi,rsi
   14000c715:	je     0x14000c729
   14000c717:	test   rdi,rdi
   14000c71a:	je     0x14000c729
   14000c71c:	mov    r8,rdi
   14000c71f:	xor    edx,edx
   14000c721:	mov    rcx,rsi
   14000c724:	call   0x140004a30
   14000c729:	call   0x140003564
   14000c72e:	mov    DWORD PTR [rax],0x2a
   14000c734:	call   0x140003564
   14000c739:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c73d:	mov    eax,DWORD PTR [rax]
   14000c73f:	je     0x14000c74c
   14000c741:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c745:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c74c:	mov    rbx,QWORD PTR [rsp+0x80]
   14000c754:	add    rsp,0x60
   14000c758:	pop    rdi
   14000c759:	pop    rsi
   14000c75a:	pop    rbp
   14000c75b:	ret    
   14000c75c:	test   rsi,rsi
   14000c75f:	je     0x14000c791
   14000c761:	test   rdi,rdi
   14000c764:	jne    0x14000c78f
   14000c766:	call   0x140003564
   14000c76b:	lea    ebx,[rdi+0x22]
   14000c76e:	mov    DWORD PTR [rax],ebx
   14000c770:	call   0x1400034fc
   14000c775:	cmp    BYTE PTR [rbp-0x8],dil
   14000c779:	je     0x14000c6e4
   14000c77f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c783:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c78a:	jmp    0x14000c6e4
   14000c78f:	mov    BYTE PTR [rsi],al
   14000c791:	test   rbx,rbx
   14000c794:	je     0x14000c79c
   14000c796:	mov    DWORD PTR [rbx],0x1
   14000c79c:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c7a0:	je     0x14000c6bb
   14000c7a6:	mov    rax,QWORD PTR [rbp-0x10]
   14000c7aa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c7b1:	jmp    0x14000c6bb
   14000c7b6:	and    DWORD PTR [rbp+0x28],0x0
   14000c7ba:	mov    ecx,DWORD PTR [r11+0x4]
   14000c7be:	lea    rax,[rbp+0x28]
   14000c7c2:	mov    QWORD PTR [rsp+0x38],rax
   14000c7c7:	and    QWORD PTR [rsp+0x30],0x0
   14000c7cd:	lea    r8,[rbp+0x38]
   14000c7d1:	mov    r9d,0x1
   14000c7d7:	xor    edx,edx
   14000c7d9:	mov    DWORD PTR [rsp+0x28],edi
   14000c7dd:	mov    QWORD PTR [rsp+0x20],rsi
   14000c7e2:	call   QWORD PTR [rip+0x19e8]        # 0x14000e1d0
   14000c7e8:	test   eax,eax
   14000c7ea:	je     0x14000c7ff
   14000c7ec:	cmp    DWORD PTR [rbp+0x28],0x0
   14000c7f0:	jne    0x14000c729
   14000c7f6:	test   rbx,rbx
   14000c7f9:	je     0x14000c79c
   14000c7fb:	mov    DWORD PTR [rbx],eax
   14000c7fd:	jmp    0x14000c79c
   14000c7ff:	call   QWORD PTR [rip+0x1873]        # 0x14000e078
   14000c805:	cmp    eax,0x7a
   14000c808:	jne    0x14000c729
   14000c80e:	test   rsi,rsi
   14000c811:	je     0x14000c825
   14000c813:	test   rdi,rdi
   14000c816:	je     0x14000c825
   14000c818:	mov    r8,rdi
   14000c81b:	xor    edx,edx
   14000c81d:	mov    rcx,rsi
   14000c820:	call   0x140004a30
   14000c825:	call   0x140003564
   14000c82a:	mov    ebx,0x22
   14000c82f:	mov    DWORD PTR [rax],ebx
   14000c831:	call   0x1400034fc
   14000c836:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c83a:	je     0x14000c6e4
   14000c840:	mov    rax,QWORD PTR [rbp-0x10]
   14000c844:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c84b:	jmp    0x14000c6e4
   14000c850:	sub    rsp,0x38
   14000c854:	and    QWORD PTR [rsp+0x20],0x0
   14000c85a:	call   0x14000c68c
   14000c85f:	add    rsp,0x38
   14000c863:	ret    
   14000c864:	mov    WORD PTR [rsp+0x8],cx
   14000c869:	sub    rsp,0x38
   14000c86d:	mov    rcx,QWORD PTR [rip+0x6b3c]        # 0x1400133b0
   14000c874:	cmp    rcx,0xfffffffffffffffe
   14000c878:	jne    0x14000c886
   14000c87a:	call   0x14000cd18
   14000c87f:	mov    rcx,QWORD PTR [rip+0x6b2a]        # 0x1400133b0
   14000c886:	cmp    rcx,0xffffffffffffffff
   14000c88a:	jne    0x14000c893
   14000c88c:	mov    eax,0xffff
   14000c891:	jmp    0x14000c8b8
   14000c893:	and    QWORD PTR [rsp+0x20],0x0
   14000c899:	lea    r9,[rsp+0x48]
   14000c89e:	lea    rdx,[rsp+0x40]
   14000c8a3:	mov    r8d,0x1
   14000c8a9:	call   QWORD PTR [rip+0x19c9]        # 0x14000e278
   14000c8af:	test   eax,eax
   14000c8b1:	je     0x14000c88c
   14000c8b3:	movzx  eax,WORD PTR [rsp+0x40]
   14000c8b8:	add    rsp,0x38
   14000c8bc:	ret    
   14000c8bd:	int3   
   14000c8be:	int3   
   14000c8bf:	int3   
   14000c8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c8c5:	mov    QWORD PTR [rsp+0x18],rbp
   14000c8ca:	push   rsi
   14000c8cb:	push   rdi
   14000c8cc:	push   r12
   14000c8ce:	sub    rsp,0x20
   14000c8d2:	mov    r12d,ecx
   14000c8d5:	mov    rcx,rdx
   14000c8d8:	mov    rbx,rdx
   14000c8db:	call   0x14000571c
   14000c8e0:	mov    edx,DWORD PTR [rbx+0x18]
   14000c8e3:	movsxd rsi,eax
   14000c8e6:	test   dl,0x82
   14000c8e9:	jne    0x14000c904
   14000c8eb:	call   0x140003564
   14000c8f0:	mov    DWORD PTR [rax],0x9
   14000c8f6:	or     DWORD PTR [rbx+0x18],0x20
   14000c8fa:	mov    eax,0xffff
   14000c8ff:	jmp    0x14000ca3c
   14000c904:	test   dl,0x40
   14000c907:	je     0x14000c916
   14000c909:	call   0x140003564
   14000c90e:	mov    DWORD PTR [rax],0x22
   14000c914:	jmp    0x14000c8f6
   14000c916:	xor    edi,edi
   14000c918:	test   dl,0x1
   14000c91b:	je     0x14000c936
   14000c91d:	mov    DWORD PTR [rbx+0x8],edi
   14000c920:	test   dl,0x10
   14000c923:	je     0x14000c9b3
   14000c929:	mov    rax,QWORD PTR [rbx+0x10]
   14000c92d:	and    edx,0xfffffffe
   14000c930:	mov    QWORD PTR [rbx],rax
   14000c933:	mov    DWORD PTR [rbx+0x18],edx
   14000c936:	mov    eax,DWORD PTR [rbx+0x18]
   14000c939:	mov    DWORD PTR [rbx+0x8],edi
   14000c93c:	and    eax,0xffffffef
   14000c93f:	or     eax,0x2
   14000c942:	mov    DWORD PTR [rbx+0x18],eax
   14000c945:	test   eax,0x10c
   14000c94a:	jne    0x14000c97b
   14000c94c:	call   0x140002cb8
   14000c951:	add    rax,0x30
   14000c955:	cmp    rbx,rax
   14000c958:	je     0x14000c968
   14000c95a:	call   0x140002cb8
   14000c95f:	add    rax,0x60
   14000c963:	cmp    rbx,rax
   14000c966:	jne    0x14000c973
   14000c968:	mov    ecx,esi
   14000c96a:	call   0x140009fb4
   14000c96f:	test   eax,eax
   14000c971:	jne    0x14000c97b
   14000c973:	mov    rcx,rbx
   14000c976:	call   0x140009f60
   14000c97b:	test   DWORD PTR [rbx+0x18],0x108
   14000c982:	je     0x14000ca14
   14000c988:	mov    ebp,DWORD PTR [rbx]
   14000c98a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000c98e:	sub    ebp,DWORD PTR [rbx+0x10]
   14000c991:	lea    rax,[rdx+0x2]
   14000c995:	mov    QWORD PTR [rbx],rax
   14000c998:	mov    eax,DWORD PTR [rbx+0x24]
   14000c99b:	sub    eax,0x2
   14000c99e:	mov    DWORD PTR [rbx+0x8],eax
   14000c9a1:	test   ebp,ebp
   14000c9a3:	jle    0x14000c9be
   14000c9a5:	mov    r8d,ebp
   14000c9a8:	mov    ecx,esi
   14000c9aa:	call   0x140009e80
   14000c9af:	mov    edi,eax
   14000c9b1:	jmp    0x14000ca0a
   14000c9b3:	or     edx,0x20
   14000c9b6:	mov    DWORD PTR [rbx+0x18],edx
   14000c9b9:	jmp    0x14000c8fa
   14000c9be:	cmp    esi,0xffffffff
   14000c9c1:	je     0x14000c9e6
   14000c9c3:	cmp    esi,0xfffffffe
   14000c9c6:	je     0x14000c9e6
   14000c9c8:	mov    rcx,rsi
   14000c9cb:	mov    rax,rsi
   14000c9ce:	lea    rdx,[rip+0x7c4b]        # 0x140014620
   14000c9d5:	and    ecx,0x1f
   14000c9d8:	sar    rax,0x5
   14000c9dc:	imul   rcx,rcx,0x58
   14000c9e0:	add    rcx,QWORD PTR [rdx+rax*8]
   14000c9e4:	jmp    0x14000c9ed
   14000c9e6:	lea    rcx,[rip+0x5f13]        # 0x140012900
   14000c9ed:	test   BYTE PTR [rcx+0x8],0x20
   14000c9f1:	je     0x14000ca0a
   14000c9f3:	xor    edx,edx
   14000c9f5:	mov    ecx,esi
   14000c9f7:	lea    r8d,[rdx+0x2]
   14000c9fb:	call   0x14000963c
   14000ca00:	cmp    rax,0xffffffffffffffff
   14000ca04:	je     0x14000c8f6
   14000ca0a:	mov    rax,QWORD PTR [rbx+0x10]
   14000ca0e:	mov    WORD PTR [rax],r12w
   14000ca12:	jmp    0x14000ca30
   14000ca14:	mov    ebp,0x2
   14000ca19:	lea    rdx,[rsp+0x48]
   14000ca1e:	mov    ecx,esi
   14000ca20:	mov    r8d,ebp
   14000ca23:	mov    WORD PTR [rsp+0x48],r12w
   14000ca29:	call   0x140009e80
   14000ca2e:	mov    edi,eax
   14000ca30:	cmp    edi,ebp
   14000ca32:	jne    0x14000c8f6
   14000ca38:	movzx  eax,r12w
   14000ca3c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ca41:	mov    rbp,QWORD PTR [rsp+0x50]
   14000ca46:	add    rsp,0x20
   14000ca4a:	pop    r12
   14000ca4c:	pop    rdi
   14000ca4d:	pop    rsi
   14000ca4e:	ret    
   14000ca4f:	int3   
   14000ca50:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca55:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca5a:	push   rdi
   14000ca5b:	sub    rsp,0x30
   14000ca5f:	movsxd rax,r9d
   14000ca62:	mov    rbx,r8
   14000ca65:	mov    edi,edx
   14000ca67:	mov    esi,ecx
   14000ca69:	test   r9d,r9d
   14000ca6c:	jle    0x14000ca79
   14000ca6e:	mov    rdx,rax
   14000ca71:	mov    rcx,rbx
   14000ca74:	call   0x14000cd78
   14000ca79:	mov    r9d,DWORD PTR [rsp+0x68]
   14000ca7e:	mov    rdx,QWORD PTR [rsp+0x60]
   14000ca83:	mov    r8,rbx
   14000ca86:	mov    DWORD PTR [rsp+0x28],r9d
   14000ca8b:	mov    QWORD PTR [rsp+0x20],rdx
   14000ca90:	mov    edx,edi
   14000ca92:	mov    r9d,eax
   14000ca95:	mov    ecx,esi
   14000ca97:	call   QWORD PTR [rip+0x17d3]        # 0x14000e270
   14000ca9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000caa2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000caa7:	add    rsp,0x30
   14000caab:	pop    rdi
   14000caac:	ret    
   14000caad:	int3   
   14000caae:	int3   
   14000caaf:	int3   
   14000cab0:	int3   
   14000cab1:	int3   
   14000cab2:	int3   
   14000cab3:	int3   
   14000cab4:	int3   
   14000cab5:	int3   
   14000cab6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cac0:	sub    rdx,rcx
   14000cac3:	mov    r9,rdx
   14000cac6:	test   cl,0x7
   14000cac9:	je     0x14000cae6
   14000cacb:	mov    al,BYTE PTR [rcx]
   14000cacd:	mov    dl,BYTE PTR [rcx+r9*1]
   14000cad1:	cmp    al,dl
   14000cad3:	jne    0x14000cb2b
   14000cad5:	inc    rcx
   14000cad8:	test   al,al
   14000cada:	je     0x14000cb33
   14000cadc:	test   rcx,0x7
   14000cae3:	jne    0x14000cacb
   14000cae5:	nop
   14000cae6:	movabs r11,0x8101010101010100
   14000caf0:	lea    rdx,[rcx+r9*1]
   14000caf4:	and    dx,0xfff
   14000caf9:	cmp    dx,0xff8
   14000cafe:	ja     0x14000cacb
   14000cb00:	mov    rax,QWORD PTR [rcx]
   14000cb03:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000cb07:	cmp    rax,rdx
   14000cb0a:	jne    0x14000cacb
   14000cb0c:	movabs r10,0x7efefefefefefeff
   14000cb16:	add    r10,rdx
   14000cb19:	xor    rax,0xffffffffffffffff
   14000cb1d:	add    rcx,0x8
   14000cb21:	xor    rax,r10
   14000cb24:	test   r11,rax
   14000cb27:	je     0x14000caf0
   14000cb29:	jmp    0x14000cb3a
   14000cb2b:	sbb    rax,rax
   14000cb2e:	sbb    rax,0xffffffffffffffff
   14000cb32:	ret    
   14000cb33:	xor    eax,eax
   14000cb35:	ret    
   14000cb36:	data16 data16 xchg ax,ax
   14000cb3a:	test   dl,dl
   14000cb3c:	je     0x14000cb65
   14000cb3e:	test   dh,dh
   14000cb40:	je     0x14000cb65
   14000cb42:	shr    rdx,0x10
   14000cb46:	test   dl,dl
   14000cb48:	je     0x14000cb65
   14000cb4a:	test   dh,dh
   14000cb4c:	je     0x14000cb65
   14000cb4e:	shr    rdx,0x10
   14000cb52:	test   dl,dl
   14000cb54:	je     0x14000cb65
   14000cb56:	test   dh,dh
   14000cb58:	je     0x14000cb65
   14000cb5a:	shr    edx,0x10
   14000cb5d:	test   dl,dl
   14000cb5f:	je     0x14000cb65
   14000cb61:	test   dh,dh
   14000cb63:	jne    0x14000caf0
   14000cb65:	xor    eax,eax
   14000cb67:	ret    
   14000cb68:	sbb    rax,rax
   14000cb6b:	sbb    rax,0xffffffffffffffff
   14000cb6f:	ret    
   14000cb70:	int3   
   14000cb71:	int3   
   14000cb72:	int3   
   14000cb73:	int3   
   14000cb74:	int3   
   14000cb75:	int3   
   14000cb76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cb80:	sub    rdx,rcx
   14000cb83:	cmp    r8,0x8
   14000cb87:	jb     0x14000cbab
   14000cb89:	test   cl,0x7
   14000cb8c:	je     0x14000cba2
   14000cb8e:	xchg   ax,ax
   14000cb90:	mov    al,BYTE PTR [rcx]
   14000cb92:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cb95:	jne    0x14000cbc3
   14000cb97:	inc    rcx
   14000cb9a:	dec    r8
   14000cb9d:	test   cl,0x7
   14000cba0:	jne    0x14000cb90
   14000cba2:	mov    r9,r8
   14000cba5:	shr    r9,0x3
   14000cba9:	jne    0x14000cbca
   14000cbab:	test   r8,r8
   14000cbae:	je     0x14000cbbf
   14000cbb0:	mov    al,BYTE PTR [rcx]
   14000cbb2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000cbb5:	jne    0x14000cbc3
   14000cbb7:	inc    rcx
   14000cbba:	dec    r8
   14000cbbd:	jne    0x14000cbb0
   14000cbbf:	xor    rax,rax
   14000cbc2:	ret    
   14000cbc3:	sbb    eax,eax
   14000cbc5:	sbb    eax,0xffffffff
   14000cbc8:	ret    
   14000cbc9:	nop
   14000cbca:	shr    r9,0x2
   14000cbce:	je     0x14000cc07
   14000cbd0:	mov    rax,QWORD PTR [rcx]
   14000cbd3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cbd7:	jne    0x14000cc34
   14000cbd9:	mov    rax,QWORD PTR [rcx+0x8]
   14000cbdd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000cbe2:	jne    0x14000cc30
   14000cbe4:	mov    rax,QWORD PTR [rcx+0x10]
   14000cbe8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000cbed:	jne    0x14000cc2c
   14000cbef:	mov    rax,QWORD PTR [rcx+0x18]
   14000cbf3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000cbf8:	jne    0x14000cc28
   14000cbfa:	add    rcx,0x20
   14000cbfe:	dec    r9
   14000cc01:	jne    0x14000cbd0
   14000cc03:	and    r8,0x1f
   14000cc07:	mov    r9,r8
   14000cc0a:	shr    r9,0x3
   14000cc0e:	je     0x14000cbab
   14000cc10:	mov    rax,QWORD PTR [rcx]
   14000cc13:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000cc17:	jne    0x14000cc34
   14000cc19:	add    rcx,0x8
   14000cc1d:	dec    r9
   14000cc20:	jne    0x14000cc10
   14000cc22:	and    r8,0x7
   14000cc26:	jmp    0x14000cbab
   14000cc28:	add    rcx,0x8
   14000cc2c:	add    rcx,0x8
   14000cc30:	add    rcx,0x8
   14000cc34:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000cc38:	bswap  rax
   14000cc3b:	bswap  rcx
   14000cc3e:	cmp    rax,rcx
   14000cc41:	sbb    eax,eax
   14000cc43:	sbb    eax,0xffffffff
   14000cc46:	ret    
   14000cc47:	int3   
   14000cc48:	int3   
   14000cc49:	int3   
   14000cc4a:	int3   
   14000cc4b:	int3   
   14000cc4c:	int3   
   14000cc4d:	int3   
   14000cc4e:	int3   
   14000cc4f:	int3   
   14000cc50:	int3   
   14000cc51:	int3   
   14000cc52:	int3   
   14000cc53:	int3   
   14000cc54:	int3   
   14000cc55:	int3   
   14000cc56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc60:	test   r8,r8
   14000cc63:	je     0x14000ccda
   14000cc65:	sub    rdx,rcx
   14000cc68:	mov    r9,rdx
   14000cc6b:	movabs r11,0x8101010101010100
   14000cc75:	test   cl,0x7
   14000cc78:	je     0x14000cc99
   14000cc7a:	mov    al,BYTE PTR [rcx]
   14000cc7c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000cc80:	inc    rcx
   14000cc83:	cmp    al,dl
   14000cc85:	jne    0x14000ccde
   14000cc87:	dec    r8
   14000cc8a:	je     0x14000ccda
   14000cc8c:	test   al,al
   14000cc8e:	je     0x14000ccda
   14000cc90:	test   rcx,0x7
   14000cc97:	jne    0x14000cc7a
   14000cc99:	lea    rdx,[rcx+r9*1]
   14000cc9d:	and    dx,0xfff
   14000cca2:	cmp    dx,0xff8
   14000cca7:	ja     0x14000cc7a
   14000cca9:	mov    rax,QWORD PTR [rcx]
   14000ccac:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000ccb0:	cmp    rax,rdx
   14000ccb3:	jne    0x14000cc7a
   14000ccb5:	add    rcx,0x8
   14000ccb9:	sub    r8,0x8
   14000ccbd:	movabs r10,0x7efefefefefefeff
   14000ccc7:	jbe    0x14000ccda
   14000ccc9:	xor    rax,0xffffffffffffffff
   14000cccd:	add    r10,rdx
   14000ccd0:	xor    rax,r10
   14000ccd3:	test   r11,rax
   14000ccd6:	je     0x14000cc99
   14000ccd8:	jmp    0x14000cce6
   14000ccda:	xor    rax,rax
   14000ccdd:	ret    
   14000ccde:	sbb    rax,rax
   14000cce1:	sbb    rax,0xffffffffffffffff
   14000cce5:	ret    
   14000cce6:	test   dl,dl
   14000cce8:	je     0x14000cd11
   14000ccea:	test   dh,dh
   14000ccec:	je     0x14000cd11
   14000ccee:	shr    rdx,0x10
   14000ccf2:	test   dl,dl
   14000ccf4:	je     0x14000cd11
   14000ccf6:	test   dh,dh
   14000ccf8:	je     0x14000cd11
   14000ccfa:	shr    rdx,0x10
   14000ccfe:	test   dl,dl
   14000cd00:	je     0x14000cd11
   14000cd02:	test   dh,dh
   14000cd04:	je     0x14000cd11
   14000cd06:	shr    edx,0x10
   14000cd09:	test   dl,dl
   14000cd0b:	je     0x14000cd11
   14000cd0d:	test   dh,dh
   14000cd0f:	jne    0x14000cc99
   14000cd11:	xor    rax,rax
   14000cd14:	ret    
   14000cd15:	int3   
   14000cd16:	int3   
   14000cd17:	int3   
   14000cd18:	sub    rsp,0x48
   14000cd1c:	and    QWORD PTR [rsp+0x30],0x0
   14000cd22:	and    DWORD PTR [rsp+0x28],0x0
   14000cd27:	mov    r8d,0x3
   14000cd2d:	lea    rcx,[rip+0x2fec]        # 0x14000fd20
   14000cd34:	xor    r9d,r9d
   14000cd37:	mov    edx,0x40000000
   14000cd3c:	mov    DWORD PTR [rsp+0x20],r8d
   14000cd41:	call   QWORD PTR [rip+0x14c1]        # 0x14000e208
   14000cd47:	mov    QWORD PTR [rip+0x6662],rax        # 0x1400133b0
   14000cd4e:	add    rsp,0x48
   14000cd52:	ret    
   14000cd53:	int3   
   14000cd54:	sub    rsp,0x28
   14000cd58:	mov    rcx,QWORD PTR [rip+0x6651]        # 0x1400133b0
   14000cd5f:	cmp    rcx,0xffffffffffffffff
   14000cd63:	je     0x14000cd71
   14000cd65:	cmp    rcx,0xfffffffffffffffe
   14000cd69:	je     0x14000cd71
   14000cd6b:	call   QWORD PTR [rip+0x132f]        # 0x14000e0a0
   14000cd71:	add    rsp,0x28
   14000cd75:	ret    
   14000cd76:	int3   
   14000cd77:	int3   
   14000cd78:	xor    r8d,r8d
   14000cd7b:	mov    eax,r8d
   14000cd7e:	test   rdx,rdx
   14000cd81:	je     0x14000cd95
   14000cd83:	cmp    WORD PTR [rcx],r8w
   14000cd87:	je     0x14000cd95
   14000cd89:	inc    rax
   14000cd8c:	add    rcx,0x2
   14000cd90:	cmp    rax,rdx
   14000cd93:	jb     0x14000cd83
   14000cd95:	repz ret 
   14000cd97:	int3   
   14000cd98:	jmp    QWORD PTR [rip+0x1362]        # 0x14000e100
   14000cd9e:	jmp    QWORD PTR [rip+0x1364]        # 0x14000e108
   14000cda4:	jmp    QWORD PTR [rip+0x136e]        # 0x14000e118
   14000cdaa:	int3   
   14000cdab:	int3   
   14000cdac:	int3   
   14000cdad:	int3   
   14000cdae:	int3   
   14000cdaf:	int3   
   14000cdb0:	rex push rbp
   14000cdb2:	sub    rsp,0x20
   14000cdb6:	mov    rbp,rdx
   14000cdb9:	mov    rcx,QWORD PTR [rbp+0x50]
   14000cdbd:	call   0x140002e60
   14000cdc2:	nop
   14000cdc3:	add    rsp,0x20
   14000cdc7:	pop    rbp
   14000cdc8:	ret    
   14000cdc9:	int3   
   14000cdca:	rex push rbp
   14000cdcc:	sub    rsp,0x20
   14000cdd0:	mov    rbp,rdx
   14000cdd3:	cmp    DWORD PTR [rbp+0x80],0x0
   14000cdda:	je     0x14000cde7
   14000cddc:	mov    ecx,0x8
   14000cde1:	call   0x140003770
   14000cde6:	nop
   14000cde7:	add    rsp,0x20
   14000cdeb:	pop    rbp
   14000cdec:	ret    
   14000cded:	int3   
   14000cdee:	rex push rbp
   14000cdf0:	sub    rsp,0x30
   14000cdf4:	mov    rbp,rdx
   14000cdf7:	mov    rcx,QWORD PTR [rbp+0x60]
   14000cdfb:	call   0x140002e60
   14000ce00:	nop
   14000ce01:	add    rsp,0x30
   14000ce05:	pop    rbp
   14000ce06:	ret    
   14000ce07:	int3   
   14000ce08:	rex push rbp
   14000ce0a:	sub    rsp,0x20
   14000ce0e:	mov    rbp,rdx
   14000ce11:	mov    rcx,QWORD PTR [rbp+0x30]
   14000ce15:	call   0x140002e60
   14000ce1a:	nop
   14000ce1b:	add    rsp,0x20
   14000ce1f:	pop    rbp
   14000ce20:	ret    
   14000ce21:	int3   
   14000ce22:	rex push rbp
   14000ce24:	sub    rsp,0x20
   14000ce28:	mov    rbp,rdx
   14000ce2b:	mov    rax,QWORD PTR [rcx]
   14000ce2e:	mov    rdx,rcx
   14000ce31:	mov    ecx,DWORD PTR [rax]
   14000ce33:	call   0x140005fec
   14000ce38:	nop
   14000ce39:	add    rsp,0x20
   14000ce3d:	pop    rbp
   14000ce3e:	ret    
   14000ce3f:	int3   
   14000ce40:	rex push rbp
   14000ce42:	sub    rsp,0x20
   14000ce46:	mov    rbp,rdx
   14000ce49:	mov    rcx,QWORD PTR [rip+0x57a0]        # 0x1400125f0
   14000ce50:	call   QWORD PTR [rip+0x12d2]        # 0x14000e128
   14000ce56:	nop
   14000ce57:	add    rsp,0x20
   14000ce5b:	pop    rbp
   14000ce5c:	ret    
   14000ce5d:	int3   
   14000ce5e:	rex push rbp
   14000ce60:	sub    rsp,0x20
   14000ce64:	mov    rbp,rdx
   14000ce67:	cmp    DWORD PTR [rbp+0x60],0x0
   14000ce6b:	je     0x14000ce75
   14000ce6d:	xor    ecx,ecx
   14000ce6f:	call   0x140003770
   14000ce74:	nop
   14000ce75:	add    rsp,0x20
   14000ce79:	pop    rbp
   14000ce7a:	ret    
   14000ce7b:	int3   
   14000ce7c:	rex push rbp
   14000ce7e:	sub    rsp,0x20
   14000ce82:	mov    rbp,rdx
   14000ce85:	mov    ecx,0xd
   14000ce8a:	call   0x140003770
   14000ce8f:	nop
   14000ce90:	add    rsp,0x20
   14000ce94:	pop    rbp
   14000ce95:	ret    
   14000ce96:	int3   
   14000ce97:	int3   
   14000ce98:	int3   
   14000ce99:	int3   
   14000ce9a:	int3   
   14000ce9b:	int3   
   14000ce9c:	rex push rbp
   14000ce9e:	sub    rsp,0x20
   14000cea2:	mov    rbp,rdx
   14000cea5:	mov    ecx,0xc
   14000ceaa:	call   0x140003770
   14000ceaf:	nop
   14000ceb0:	add    rsp,0x20
   14000ceb4:	pop    rbp
   14000ceb5:	ret    
   14000ceb6:	int3   
   14000ceb7:	rex push rbp
   14000ceb9:	sub    rsp,0x20
   14000cebd:	mov    rbp,rdx
   14000cec0:	call   0x140001b54
   14000cec5:	nop
   14000cec6:	add    rsp,0x20
   14000ceca:	pop    rbp
   14000cecb:	ret    
   14000cecc:	int3   
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	rex push rbp
   14000ced2:	sub    rsp,0x20
   14000ced6:	mov    rbp,rdx
   14000ced9:	mov    rax,QWORD PTR [rcx]
   14000cedc:	xor    ecx,ecx
   14000cede:	cmp    DWORD PTR [rax],0xc0000005
   14000cee4:	sete   cl
   14000cee7:	mov    eax,ecx
   14000cee9:	mov    eax,ecx
   14000ceeb:	add    rsp,0x20
   14000ceef:	pop    rbp
   14000cef0:	ret    
   14000cef1:	int3   
   14000cef2:	rex push rbp
   14000cef4:	sub    rsp,0x20
   14000cef8:	mov    rbp,rdx
   14000cefb:	mov    ecx,DWORD PTR [rbp+0x50]
   14000cefe:	call   0x14000b338
   14000cf03:	nop
   14000cf04:	add    rsp,0x20
   14000cf08:	pop    rbp
   14000cf09:	ret    
   14000cf0a:	int3   
   14000cf0b:	rex push rbp
   14000cf0d:	sub    rsp,0x20
   14000cf11:	mov    rbp,rdx
   14000cf14:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000cf18:	mov    rax,rcx
   14000cf1b:	mov    rdx,QWORD PTR [rip+0x78fe]        # 0x140014820
   14000cf22:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000cf26:	call   0x140002eac
   14000cf2b:	nop
   14000cf2c:	add    rsp,0x20
   14000cf30:	pop    rbp
   14000cf31:	ret    
   14000cf32:	int3   
   14000cf33:	int3   
   14000cf34:	int3   
   14000cf35:	int3   
   14000cf36:	int3   
   14000cf37:	int3   
   14000cf38:	int3   
   14000cf39:	int3   
   14000cf3a:	int3   
   14000cf3b:	rex push rbp
   14000cf3d:	sub    rsp,0x20
   14000cf41:	mov    rbp,rdx
   14000cf44:	mov    ecx,0x1
   14000cf49:	call   0x140003770
   14000cf4e:	nop
   14000cf4f:	add    rsp,0x20
   14000cf53:	pop    rbp
   14000cf54:	ret    
   14000cf55:	int3   
   14000cf56:	rex push rbp
   14000cf58:	sub    rsp,0x20
   14000cf5c:	mov    rbp,rdx
   14000cf5f:	mov    ecx,DWORD PTR [rbp+0x40]
   14000cf62:	call   0x14000b338
   14000cf67:	nop
   14000cf68:	add    rsp,0x20
   14000cf6c:	pop    rbp
   14000cf6d:	ret    
   14000cf6e:	int3   
   14000cf6f:	rex push rbp
   14000cf71:	sub    rsp,0x20
   14000cf75:	mov    rbp,rdx
   14000cf78:	mov    ecx,0x1
   14000cf7d:	call   0x140003770
   14000cf82:	nop
   14000cf83:	add    rsp,0x20
   14000cf87:	pop    rbp
   14000cf88:	ret    
   14000cf89:	int3   
   14000cf8a:	rex push rbp
   14000cf8c:	sub    rsp,0x30
   14000cf90:	mov    rbp,rdx
   14000cf93:	cmp    DWORD PTR [rbp+0x30],0x0
   14000cf97:	je     0x14000cfcc
   14000cf99:	mov    rdx,QWORD PTR [rbp+0x70]
   14000cf9d:	cmp    DWORD PTR [rbp+0x34],0x0
   14000cfa1:	je     0x14000cfc4
   14000cfa3:	movsxd rcx,DWORD PTR [rdx]
   14000cfa6:	mov    rax,rcx
   14000cfa9:	sar    rax,0x5
   14000cfad:	lea    r8,[rip+0x766c]        # 0x140014620
   14000cfb4:	and    ecx,0x1f
   14000cfb7:	imul   rcx,rcx,0x58
   14000cfbb:	mov    rax,QWORD PTR [r8+rax*8]
   14000cfbf:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000cfc4:	mov    ecx,DWORD PTR [rdx]
   14000cfc6:	call   0x14000b338
   14000cfcb:	nop
   14000cfcc:	add    rsp,0x30
   14000cfd0:	pop    rbp
   14000cfd1:	ret    
   14000cfd2:	int3   
   14000cfd3:	rex push rbp
   14000cfd5:	sub    rsp,0x20
   14000cfd9:	mov    rbp,rdx
   14000cfdc:	mov    ecx,0xc
   14000cfe1:	call   0x140003770
   14000cfe6:	nop
   14000cfe7:	add    rsp,0x20
   14000cfeb:	pop    rbp
   14000cfec:	ret    
   14000cfed:	int3   
   14000cfee:	rex push rbp
   14000cff0:	sub    rsp,0x20
   14000cff4:	mov    rbp,rdx
   14000cff7:	mov    ecx,0xd
   14000cffc:	call   0x140003770
   14000d001:	nop
   14000d002:	add    rsp,0x20
   14000d006:	pop    rbp
   14000d007:	ret    
   14000d008:	int3   
   14000d009:	rex push rbp
   14000d00b:	sub    rsp,0x20
   14000d00f:	mov    rbp,rdx
   14000d012:	mov    ecx,0xa
   14000d017:	call   0x140003770
   14000d01c:	nop
   14000d01d:	add    rsp,0x20
   14000d021:	pop    rbp
   14000d022:	ret    
   14000d023:	int3   
   14000d024:	rex push rbp
   14000d026:	sub    rsp,0x20
   14000d02a:	mov    rbp,rdx
   14000d02d:	mov    ecx,0xa
   14000d032:	call   0x140003770
   14000d037:	nop
   14000d038:	add    rsp,0x20
   14000d03c:	pop    rbp
   14000d03d:	ret    
   14000d03e:	int3   
   14000d03f:	int3   
   14000d040:	int3   
   14000d041:	int3   
   14000d042:	int3   
   14000d043:	int3   
   14000d044:	rex push rbp
   14000d046:	sub    rsp,0x20
   14000d04a:	mov    rbp,rdx
   14000d04d:	mov    ecx,0xb
   14000d052:	call   0x140003770
   14000d057:	nop
   14000d058:	add    rsp,0x20
   14000d05c:	pop    rbp
   14000d05d:	ret    
   14000d05e:	int3   

Disassembly of section .rdata:

000000014000e000 <.rdata>:
   14000e000:	and    BYTE PTR [rdi],cl
   14000e002:	add    DWORD PTR [rax],eax
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	sgdt   cs:[rax]
   14000e00c:	add    BYTE PTR [rax],al
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	rex sgdt [rax]
   14000e014:	add    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	pop    rdx
   14000e019:	sgdt   [rax]
   14000e01c:	add    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	push   0x10f
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rdx+0xf],bh
   14000e02a:	add    DWORD PTR [rax],eax
   14000e02c:	add    BYTE PTR [rax],al
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	mov    cs,WORD PTR [rdi]
   14000e032:	add    DWORD PTR [rax],eax
   14000e034:	add    BYTE PTR [rax],al
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e039:	sgdt   [rax]
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	ror    BYTE PTR [rdi],0x1
   14000e043:	add    BYTE PTR [rax],al
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    ah,bl
   14000e049:	sgdt   [rax]
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	repnz sgdt [rax]
   14000e054:	add    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	or     BYTE PTR [rax],dl
   14000e05a:	add    DWORD PTR [rax],eax
   14000e05c:	add    BYTE PTR [rax],al
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	and    al,0x10
   14000e062:	add    DWORD PTR [rax],eax
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    BYTE PTR [rax],al
   14000e068:	cmp    dl,BYTE PTR [rax]
   14000e06a:	add    DWORD PTR [rax],eax
   14000e06c:	add    BYTE PTR [rax],al
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	rex.WRX adc BYTE PTR [rcx],r8b
   14000e073:	add    BYTE PTR [rax],al
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    BYTE PTR [rsi+0x10],bl
   14000e07a:	add    DWORD PTR [rax],eax
   14000e07c:	add    BYTE PTR [rax],al
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	outs   dx,BYTE PTR ds:[rsi]
   14000e081:	adc    BYTE PTR [rcx],al
   14000e083:	add    BYTE PTR [rax],al
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    BYTE PTR [rax+0x110],al
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    BYTE PTR [rax+0x110],dl
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    BYTE PTR [rax+0x110],ch
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rdx+0x110],bh
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    dh,ch
   14000e0a9:	adc    BYTE PTR [rcx],al
   14000e0ab:	add    BYTE PTR [rax],al
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    BYTE PTR [rdx],al
   14000e0b1:	adc    DWORD PTR [rcx],eax
   14000e0b3:	add    BYTE PTR [rax],al
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rdx],dl
   14000e0b9:	adc    DWORD PTR [rcx],eax
   14000e0bb:	add    BYTE PTR [rax],al
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    BYTE PTR [rsi],bl
   14000e0c1:	adc    DWORD PTR [rcx],eax
   14000e0c3:	add    BYTE PTR [rax],al
   14000e0c5:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rdx],ch
   14000e0c9:	adc    DWORD PTR [rcx],eax
   14000e0cb:	add    BYTE PTR [rax],al
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rcx+rdx*1],bh
   14000e0d2:	add    DWORD PTR [rax],eax
   14000e0d4:	add    BYTE PTR [rax],al
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	rex.WRX adc QWORD PTR [rcx],r8
   14000e0db:	add    BYTE PTR [rax],al
   14000e0dd:	add    BYTE PTR [rax],al
   14000e0df:	add    BYTE PTR [rax+0x11],ah
   14000e0e2:	add    DWORD PTR [rax],eax
   14000e0e4:	add    BYTE PTR [rax],al
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	je     0x14000e0fb
   14000e0ea:	add    DWORD PTR [rax],eax
   14000e0ec:	add    BYTE PTR [rax],al
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	nop
   14000e0f1:	adc    DWORD PTR [rcx],eax
   14000e0f3:	add    BYTE PTR [rax],al
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rsi+0x111],ch
   14000e0fd:	add    BYTE PTR [rax],al
   14000e0ff:	add    dl,al
   14000e101:	adc    DWORD PTR [rcx],eax
   14000e103:	add    BYTE PTR [rax],al
   14000e105:	add    BYTE PTR [rax],al
   14000e107:	add    dh,dl
   14000e109:	adc    DWORD PTR [rcx],eax
   14000e10b:	add    BYTE PTR [rax],al
   14000e10d:	add    BYTE PTR [rax],al
   14000e10f:	add    al,dh
   14000e111:	adc    DWORD PTR [rcx],eax
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rdx+rdx*1],al
   14000e11a:	add    DWORD PTR [rax],eax
   14000e11c:	add    BYTE PTR [rax],al
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	adc    dl,BYTE PTR [rdx]
   14000e122:	add    DWORD PTR [rax],eax
   14000e124:	add    BYTE PTR [rax],al
   14000e126:	add    BYTE PTR [rax],al
   14000e128:	sub    dl,BYTE PTR [rdx]
   14000e12a:	add    DWORD PTR [rax],eax
   14000e12c:	add    BYTE PTR [rax],al
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	rex.X adc al,BYTE PTR [rcx]
   14000e133:	add    BYTE PTR [rax],al
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rdx+0x12],ch
   14000e13a:	add    DWORD PTR [rax],eax
   14000e13c:	add    BYTE PTR [rax],al
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	jp     0x14000e154
   14000e142:	add    DWORD PTR [rax],eax
   14000e144:	add    BYTE PTR [rax],al
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	xchg   edx,eax
   14000e149:	adc    al,BYTE PTR [rcx]
   14000e14b:	add    BYTE PTR [rax],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rdx+0x112],ah
   14000e155:	add    BYTE PTR [rax],al
   14000e157:	add    BYTE PTR [rax+0x112],dh
   14000e15d:	add    BYTE PTR [rax],al
   14000e15f:	add    BYTE PTR [rsi+0x112],bh
   14000e165:	add    BYTE PTR [rax],al
   14000e167:	add    al,cl
   14000e169:	adc    al,BYTE PTR [rcx]
   14000e16b:	add    BYTE PTR [rax],al
   14000e16d:	add    BYTE PTR [rax],al
   14000e16f:	add    al,bl
   14000e171:	adc    al,BYTE PTR [rcx]
   14000e173:	add    BYTE PTR [rax],al
   14000e175:	add    BYTE PTR [rax],al
   14000e177:	add    dh,ch
   14000e179:	adc    al,BYTE PTR [rcx]
   14000e17b:	add    BYTE PTR [rax],al
   14000e17d:	add    BYTE PTR [rax],al
   14000e17f:	add    dl,bh
   14000e181:	adc    al,BYTE PTR [rcx]
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    BYTE PTR [rsi],al
   14000e189:	adc    eax,DWORD PTR [rcx]
   14000e18b:	add    BYTE PTR [rax],al
   14000e18d:	add    BYTE PTR [rax],al
   14000e18f:	add    BYTE PTR [rbx+rdx*1],bl
   14000e192:	add    DWORD PTR [rax],eax
   14000e194:	add    BYTE PTR [rax],al
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	sub    dl,BYTE PTR [rbx]
   14000e19a:	add    DWORD PTR [rax],eax
   14000e19c:	add    BYTE PTR [rax],al
   14000e19e:	add    BYTE PTR [rax],al
   14000e1a0:	cmp    BYTE PTR [rbx],dl
   14000e1a2:	add    DWORD PTR [rax],eax
   14000e1a4:	add    BYTE PTR [rax],al
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	adc    r8d,DWORD PTR [rcx]
   14000e1ab:	add    BYTE PTR [rax],al
   14000e1ad:	add    BYTE PTR [rax],al
   14000e1af:	add    BYTE PTR [rsi+0x13],dl
   14000e1b2:	add    DWORD PTR [rax],eax
   14000e1b4:	add    BYTE PTR [rax],al
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	adc    eax,DWORD PTR fs:[rcx]
   14000e1bb:	add    BYTE PTR [rax],al
   14000e1bd:	add    BYTE PTR [rax],al
   14000e1bf:	add    BYTE PTR [rsi+0x13],dh
   14000e1c2:	add    DWORD PTR [rax],eax
   14000e1c4:	add    BYTE PTR [rax],al
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	mov    WORD PTR [rbx],ss
   14000e1ca:	add    DWORD PTR [rax],eax
   14000e1cc:	add    BYTE PTR [rax],al
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1d1:	adc    eax,DWORD PTR [rcx]
   14000e1d3:	add    BYTE PTR [rax],al
   14000e1d5:	add    BYTE PTR [rax],al
   14000e1d7:	add    BYTE PTR [rbx+rdx*1+0x1],bh
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	(bad)  
   14000e1e1:	adc    eax,DWORD PTR [rcx]
   14000e1e3:	add    BYTE PTR [rax],al
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    al,dh
   14000e1e9:	adc    eax,DWORD PTR [rcx]
   14000e1eb:	add    BYTE PTR [rax],al
   14000e1ed:	add    BYTE PTR [rax],al
   14000e1ef:	add    BYTE PTR [rax],al
   14000e1f1:	adc    al,0x1
   14000e1f3:	add    BYTE PTR [rax],al
   14000e1f5:	add    BYTE PTR [rax],al
   14000e1f7:	add    BYTE PTR [rsi],dl
   14000e1f9:	adc    al,0x1
   14000e1fb:	add    BYTE PTR [rax],al
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rax],dh
   14000e201:	adc    al,0x1
   14000e203:	add    BYTE PTR [rax],al
   14000e205:	add    BYTE PTR [rax],al
   14000e207:	add    BYTE PTR [rax],bh
   14000e209:	adc    al,0x1
   14000e20b:	add    BYTE PTR [rax],al
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rsi+0x14],al
   14000e212:	add    DWORD PTR [rax],eax
   14000e214:	add    BYTE PTR [rax],al
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	push   rdx
   14000e219:	adc    al,0x1
   14000e21b:	add    BYTE PTR [rax],al
   14000e21d:	add    BYTE PTR [rax],al
   14000e21f:	add    BYTE PTR [rsp+rdx*1+0x1],bl
   14000e223:	add    BYTE PTR [rax],al
   14000e225:	add    BYTE PTR [rax],al
   14000e227:	add    BYTE PTR [rax+0x14],ch
   14000e22a:	add    DWORD PTR [rax],eax
   14000e22c:	add    BYTE PTR [rax],al
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	jp     0x14000e246
   14000e232:	add    DWORD PTR [rax],eax
   14000e234:	add    BYTE PTR [rax],al
   14000e236:	add    BYTE PTR [rax],al
   14000e238:	xchg   BYTE PTR [rcx+rax*1],dl
   14000e23b:	add    BYTE PTR [rax],al
   14000e23d:	add    BYTE PTR [rax],al
   14000e23f:	add    BYTE PTR [rsi+0x114],dl
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    BYTE PTR [rax+0x114],ch
   14000e24d:	add    BYTE PTR [rax],al
   14000e24f:	add    BYTE PTR [rax+0x114],bh
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    ah,cl
   14000e259:	adc    al,0x1
   14000e25b:	add    BYTE PTR [rax],al
   14000e25d:	add    BYTE PTR [rax],al
   14000e25f:	add    dl,bl
   14000e261:	adc    al,0x1
   14000e263:	add    BYTE PTR [rax],al
   14000e265:	add    BYTE PTR [rax],al
   14000e267:	add    dl,ch
   14000e269:	adc    al,0x1
   14000e26b:	add    BYTE PTR [rax],al
   14000e26d:	add    BYTE PTR [rax],al
   14000e26f:	add    ah,bh
   14000e271:	adc    al,0x1
   14000e273:	add    BYTE PTR [rax],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    BYTE PTR [rdx*1+0x1],cl
	...
   14000e286:	add    BYTE PTR [rax],al
   14000e288:	(bad)  
   14000e289:	adc    BYTE PTR [rcx],al
	...
   14000e2af:	add    al,al
   14000e2b1:	sub    al,0x0
   14000e2b3:	rex add DWORD PTR [rax],eax
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	hlt    
   14000e2b9:	add    BYTE PTR ds:[rax+0x1],al
   14000e2bd:	add    BYTE PTR [rax],al
   14000e2bf:	add    BYTE PTR [rax-0x7c],dl
   14000e2c2:	add    BYTE PTR [rax+0x1],al
   14000e2c5:	add    BYTE PTR [rax],al
   14000e2c7:	add    ah,dl
   14000e2c9:	pop    rdi
   14000e2ca:	add    BYTE PTR [rax+0x1],al
	...
   14000e2dd:	add    BYTE PTR [rax],al
   14000e2df:	add    BYTE PTR [rbp+rcx*8+0x0],dl
   14000e2e3:	rex add DWORD PTR [rax],eax
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	movabs al,ds:0x140002d
	...
   14000e311:	add    BYTE PTR [rax],al
   14000e313:	add    bl,cl
   14000e315:	out    0x52,eax
   14000e317:	push   rdi
   14000e318:	add    BYTE PTR [rax],al
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	add    al,BYTE PTR [rax]
   14000e31e:	add    BYTE PTR [rax],al
   14000e320:	(bad)  
   14000e321:	add    BYTE PTR [rax],al
   14000e323:	add    BYTE PTR [rax+0x1],bh
   14000e326:	add    DWORD PTR [rax],eax
   14000e328:	js     0x14000e311
   14000e32a:	add    BYTE PTR [rax],al
   14000e32c:	add    BYTE PTR [rax],al
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e332:	jb     0x14000e379
   14000e334:	js     0x14000e39f
   14000e336:	je     0x14000e388
   14000e338:	jb     0x14000e3a9
   14000e33a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e33d:	jae    0x14000e33f
   14000e33f:	add    BYTE PTR [rbp+0x0],ch
   14000e342:	jae    0x14000e344
   14000e344:	movsxd eax,DWORD PTR [rax]
   14000e346:	outs   dx,DWORD PTR ds:[rsi]
   14000e347:	add    BYTE PTR [rdx+0x0],dh
   14000e34a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000e34e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000e353:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e357:	add    BYTE PTR [rax],dh
   14000e359:	xor    al,0x1
   14000e35b:	rex add DWORD PTR [rax],eax
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	shl    BYTE PTR [rcx+rax*1],1
   14000e363:	rex add DWORD PTR [rax],eax
   14000e366:	add    BYTE PTR [rax],al
   14000e368:	movsxd eax,DWORD PTR [rax]
   14000e36a:	movsxd eax,DWORD PTR [rax]
   14000e36c:	jae    0x14000e36e
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	push   rbp
   14000e371:	add    BYTE PTR [rax+rax*1+0x46],dl
   14000e375:	add    BYTE PTR [rip+0x3800],ch        # 0x140011b7b
   14000e37b:	add    BYTE PTR [rax],al
   14000e37d:	add    BYTE PTR [rax],al
   14000e37f:	add    BYTE PTR [rbp+0x0],dl
   14000e382:	push   rsp
   14000e383:	add    BYTE PTR [rsi+0x0],al
   14000e386:	sub    eax,0x36003100
   14000e38b:	add    BYTE PTR [rax+rax*1+0x45],cl
	...
   14000e397:	add    BYTE PTR [rbp+0x0],dl
   14000e39a:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14000e39e:	rex.XB add BYTE PTR [r15+0x0],cl
   14000e3a2:	add    BYTE PTR [rbp+0x0],r8b
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	jb     0x14000e3aa
   14000e3aa:	jne    0x14000e3ac
   14000e3ac:	outs   dx,BYTE PTR ds:[rsi]
   14000e3ad:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e3b1:	add    BYTE PTR [rbp+0x0],ch
   14000e3b4:	add    BYTE PTR gs:[rax],ah
   14000e3b7:	add    BYTE PTR [rbp+0x0],ah
   14000e3ba:	jb     0x14000e3bc
   14000e3bc:	jb     0x14000e3be
   14000e3be:	outs   dx,DWORD PTR ds:[rsi]
   14000e3bf:	add    BYTE PTR [rdx+0x0],dh
   14000e3c2:	and    BYTE PTR [rax],al
   14000e3c4:	add    BYTE PTR [rax],al
   14000e3c6:	add    BYTE PTR [rax],al
   14000e3c8:	or     eax,0xa00
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14000e3d3:	add    BYTE PTR [rdi+0x0],cl
   14000e3d6:	push   rbx
   14000e3d7:	add    BYTE PTR [rbx+0x0],dl
   14000e3da:	and    BYTE PTR [rax],al
   14000e3dc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e3e0:	jb     0x14000e3e2
   14000e3e2:	outs   dx,DWORD PTR ds:[rsi]
   14000e3e3:	add    BYTE PTR [rdx+0x0],dh
   14000e3e6:	or     eax,0xa00
   14000e3eb:	add    BYTE PTR [rax],al
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    BYTE PTR [rbx+0x0],dl
   14000e3f2:	rex.WB add BYTE PTR [r14+0x0],cl
   14000e3f6:	rex.RXB add BYTE PTR [r8],r12b
   14000e3f9:	add    BYTE PTR [rbp+0x0],ah
   14000e3fc:	jb     0x14000e3fe
   14000e3fe:	jb     0x14000e400
   14000e400:	outs   dx,DWORD PTR ds:[rsi]
   14000e401:	add    BYTE PTR [rdx+0x0],dh
   14000e404:	or     eax,0xa00
   14000e409:	add    BYTE PTR [rax],al
   14000e40b:	add    BYTE PTR [rax],al
   14000e40d:	add    BYTE PTR [rax],al
   14000e40f:	add    BYTE PTR [rax+rax*1+0x4f],al
   14000e413:	add    BYTE PTR [rbp+0x0],cl
   14000e416:	add    BYTE PTR [r9+0x0],cl
   14000e41a:	rex.WRX add BYTE PTR [rax],r12b
   14000e41d:	add    BYTE PTR [rbp+0x0],ah
   14000e420:	jb     0x14000e422
   14000e422:	jb     0x14000e424
   14000e424:	outs   dx,DWORD PTR ds:[rsi]
   14000e425:	add    BYTE PTR [rdx+0x0],dh
   14000e428:	or     eax,0xa00
   14000e42d:	add    BYTE PTR [rax],al
   14000e42f:	add    BYTE PTR [rdx+0x0],dl
   14000e432:	add    BYTE PTR ss:[rax],dh
   14000e435:	add    BYTE PTR [rbx],dh
   14000e437:	add    BYTE PTR [rbx],dh
   14000e439:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00ee3f
   14000e43f:	add    BYTE PTR [rax],ah
   14000e441:	add    BYTE PTR [rcx+0x0],al
   14000e444:	je     0x14000e446
   14000e446:	je     0x14000e448
   14000e448:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e44c:	jo     0x14000e44e
   14000e44e:	je     0x14000e450
   14000e450:	and    BYTE PTR [rax],al
   14000e452:	je     0x14000e454
   14000e454:	outs   dx,DWORD PTR ds:[rsi]
   14000e455:	add    BYTE PTR [rax],ah
   14000e457:	add    BYTE PTR [rbp+0x0],dh
   14000e45a:	jae    0x14000e45c
   14000e45c:	add    BYTE PTR gs:[rax],ah
   14000e45f:	add    BYTE PTR [rbp+0x0],cl
   14000e462:	push   rbx
   14000e463:	add    BYTE PTR [rcx+0x0],cl
   14000e466:	rex.WR add BYTE PTR [rax],r12b
   14000e469:	add    BYTE PTR [rbx+0x0],ah
   14000e46c:	outs   dx,DWORD PTR ds:[rsi]
   14000e46d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e471:	add    BYTE PTR [rax],ah
   14000e473:	add    BYTE PTR [rsi+0x0],ah
   14000e476:	jb     0x14000e478
   14000e478:	outs   dx,DWORD PTR ds:[rsi]
   14000e479:	add    BYTE PTR [rbp+0x0],ch
   14000e47c:	and    BYTE PTR [rax],al
   14000e47e:	je     0x14000e480
   14000e480:	push   0x73006900
   14000e485:	add    BYTE PTR [rax],ah
   14000e487:	add    BYTE PTR [rcx+0x0],ah
   14000e48a:	jae    0x14000e48c
   14000e48c:	jae    0x14000e48e
   14000e48e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e492:	(bad)  
   14000e493:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000e497:	add    BYTE PTR [rax],ah
   14000e499:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e49d:	add    BYTE PTR [rdx+0x0],dh
   14000e4a0:	imul   eax,DWORD PTR [rax],0x67006e
   14000e4a6:	and    BYTE PTR [rax],al
   14000e4a8:	outs   dx,BYTE PTR ds:[rsi]
   14000e4a9:	add    BYTE PTR [rcx+0x0],ah
   14000e4ac:	je     0x14000e4ae
   14000e4ae:	imul   eax,DWORD PTR [rax],0x650076
   14000e4b4:	and    BYTE PTR [rax],al
   14000e4b6:	movsxd eax,DWORD PTR [rax]
   14000e4b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e4b9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e4bd:	add    BYTE PTR [rax],ah
   14000e4bf:	add    BYTE PTR [rcx+0x0],ch
   14000e4c2:	outs   dx,BYTE PTR ds:[rsi]
   14000e4c3:	add    BYTE PTR [rcx+0x0],ch
   14000e4c6:	je     0x14000e4c8
   14000e4c8:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e4ce:	imul   eax,DWORD PTR [rax],0x61007a
   14000e4d4:	je     0x14000e4d6
   14000e4d6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4dc:	or     al,BYTE PTR [rax]
   14000e4de:	push   rsp
   14000e4df:	add    BYTE PTR [rax+0x0],ch
   14000e4e2:	imul   eax,DWORD PTR [rax],0x200073
   14000e4e8:	imul   eax,DWORD PTR [rax],0x64006e
   14000e4ee:	imul   eax,DWORD PTR [rax],0x610063
   14000e4f4:	je     0x14000e4f6
   14000e4f6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e4fa:	and    BYTE PTR [rax],al
   14000e4fc:	(bad)  
   14000e4fd:	add    BYTE PTR [rax],ah
   14000e4ff:	add    BYTE PTR [rdx+0x0],ah
   14000e502:	jne    0x14000e504
   14000e504:	add    BYTE PTR [eax],ah
   14000e507:	add    BYTE PTR [rcx+0x0],ch
   14000e50a:	outs   dx,BYTE PTR ds:[rsi]
   14000e50b:	add    BYTE PTR [rax],ah
   14000e50d:	add    BYTE PTR [rcx+0x0],bh
   14000e510:	outs   dx,DWORD PTR ds:[rsi]
   14000e511:	add    BYTE PTR [rbp+0x0],dh
   14000e514:	jb     0x14000e516
   14000e516:	and    BYTE PTR [rax],al
   14000e518:	(bad)  
   14000e519:	add    BYTE PTR [rax+0x0],dh
   14000e51c:	jo     0x14000e51e
   14000e51e:	ins    BYTE PTR es:[rdi],dx
   14000e51f:	add    BYTE PTR [rcx+0x0],ch
   14000e522:	movsxd eax,DWORD PTR [rax]
   14000e524:	(bad)  
   14000e525:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e529:	add    BYTE PTR [rdi+0x0],ch
   14000e52c:	outs   dx,BYTE PTR ds:[rsi]
   14000e52d:	add    BYTE PTR [rsi],ch
   14000e52f:	add    BYTE PTR [rax],ah
   14000e531:	add    BYTE PTR [rcx+0x0],cl
   14000e534:	je     0x14000e536
   14000e536:	and    BYTE PTR [rax],al
   14000e538:	imul   eax,DWORD PTR [rax],0x200073
   14000e53e:	ins    DWORD PTR es:[rdi],dx
   14000e53f:	add    BYTE PTR [rdi+0x0],ch
   14000e542:	jae    0x14000e544
   14000e544:	je     0x14000e546
   14000e546:	and    BYTE PTR [rax],al
   14000e548:	ins    BYTE PTR es:[rdi],dx
   14000e549:	add    BYTE PTR [rcx+0x0],ch
   14000e54c:	imul   eax,DWORD PTR [rax],0x65
   14000e54f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000e553:	add    BYTE PTR [rax],ah
   14000e555:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e559:	add    BYTE PTR [rbp+0x0],ah
   14000e55c:	and    BYTE PTR [rax],al
   14000e55e:	jb     0x14000e560
   14000e560:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e564:	jne    0x14000e566
   14000e566:	ins    BYTE PTR es:[rdi],dx
   14000e567:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e56b:	add    BYTE PTR [rdi+0x0],ch
   14000e56e:	data16 add BYTE PTR [rax],ah
   14000e571:	add    BYTE PTR [rbx+0x0],ah
   14000e574:	(bad)  
   14000e575:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e579:	add    BYTE PTR [rcx+0x0],ch
   14000e57c:	outs   dx,BYTE PTR ds:[rsi]
   14000e57d:	add    BYTE PTR [rdi+0x0],ah
   14000e580:	and    BYTE PTR [rax],al
   14000e582:	(bad)  
   14000e583:	add    BYTE PTR [rsi+0x0],ch
   14000e586:	and    BYTE PTR [rax],al
   14000e588:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14000e58c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14000e591:	add    BYTE PTR [rbx+0x0],ah
   14000e594:	outs   dx,DWORD PTR ds:[rsi]
   14000e595:	add    BYTE PTR [rbp+0x0],ch
   14000e598:	jo     0x14000e59a
   14000e59a:	imul   eax,DWORD PTR [rax],0x65006c
   14000e5a0:	add    BYTE PTR fs:[rax],ah
   14000e5a3:	add    BYTE PTR [rax],ch
   14000e5a5:	add    BYTE PTR [rdi],ch
   14000e5a7:	add    BYTE PTR [rbx+0x0],ah
   14000e5aa:	ins    BYTE PTR es:[rdi],dx
   14000e5ab:	add    BYTE PTR [rdx+0x0],dh
   14000e5ae:	sub    DWORD PTR [rax],eax
   14000e5b0:	and    BYTE PTR [rax],al
   14000e5b2:	data16 add BYTE PTR [rbp+0x0],dh
   14000e5b6:	outs   dx,BYTE PTR ds:[rsi]
   14000e5b7:	add    BYTE PTR [rbx+0x0],ah
   14000e5ba:	je     0x14000e5bc
   14000e5bc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e5c2:	and    BYTE PTR [rax],al
   14000e5c4:	data16 add BYTE PTR [rdx+0x0],dh
   14000e5c8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5c9:	add    BYTE PTR [rbp+0x0],ch
   14000e5cc:	and    BYTE PTR [rax],al
   14000e5ce:	(bad)  
   14000e5cf:	add    BYTE PTR [rax],ah
   14000e5d1:	add    BYTE PTR [rsi+0x0],ch
   14000e5d4:	(bad)  
   14000e5d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e5d9:	add    BYTE PTR [rsi+0x0],dh
   14000e5dc:	add    BYTE PTR gs:[rax],ah
   14000e5df:	add    BYTE PTR [rbx+0x0],ah
   14000e5e2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e3:	add    BYTE PTR [rsi+0x0],ch
   14000e5e6:	jae    0x14000e5e8
   14000e5e8:	je     0x14000e5ea
   14000e5ea:	jb     0x14000e5ec
   14000e5ec:	jne    0x14000e5ee
   14000e5ee:	movsxd eax,DWORD PTR [rax]
   14000e5f0:	je     0x14000e5f2
   14000e5f2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5f3:	add    BYTE PTR [rdx+0x0],dh
   14000e5f6:	and    BYTE PTR [rax],al
   14000e5f8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5f9:	add    BYTE PTR [rdx+0x0],dh
   14000e5fc:	and    BYTE PTR [rax],al
   14000e5fe:	data16 add BYTE PTR [rdx+0x0],dh
   14000e602:	outs   dx,DWORD PTR ds:[rsi]
   14000e603:	add    BYTE PTR [rbp+0x0],ch
   14000e606:	and    BYTE PTR [rax],al
   14000e608:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14000e60d:	add    BYTE PTR [rbp+0x0],cl
   14000e610:	(bad)  
   14000e611:	add    BYTE PTR [rcx+0x0],ch
   14000e614:	outs   dx,BYTE PTR ds:[rsi]
   14000e615:	add    BYTE PTR [rsi],ch
   14000e617:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f01d
   14000e61d:	add    BYTE PTR [rax],al
   14000e61f:	add    BYTE PTR [rdx+0x0],dl
   14000e622:	add    BYTE PTR ss:[rax],dh
   14000e625:	add    BYTE PTR [rbx],dh
   14000e627:	add    BYTE PTR [rdx],dh
   14000e629:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f02f
   14000e62f:	add    BYTE PTR [rax],ah
   14000e631:	add    BYTE PTR [rsi+0x0],ch
   14000e634:	outs   dx,DWORD PTR ds:[rsi]
   14000e635:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e639:	add    BYTE PTR [rbp+0x0],ah
   14000e63c:	outs   dx,BYTE PTR ds:[rsi]
   14000e63d:	add    BYTE PTR [rdi+0x0],ch
   14000e640:	jne    0x14000e642
   14000e642:	add    BYTE PTR [eax+0x0],ch
   14000e646:	and    BYTE PTR [rax],al
   14000e648:	jae    0x14000e64a
   14000e64a:	jo     0x14000e64c
   14000e64c:	(bad)  
   14000e64d:	add    BYTE PTR [rbx+0x0],ah
   14000e650:	add    BYTE PTR gs:[rax],ah
   14000e653:	add    BYTE PTR [rsi+0x0],ah
   14000e656:	outs   dx,DWORD PTR ds:[rsi]
   14000e657:	add    BYTE PTR [rdx+0x0],dh
   14000e65a:	and    BYTE PTR [rax],al
   14000e65c:	ins    BYTE PTR es:[rdi],dx
   14000e65d:	add    BYTE PTR [rdi+0x0],ch
   14000e660:	movsxd eax,DWORD PTR [rax]
   14000e662:	(bad)  
   14000e663:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e667:	add    BYTE PTR [rax],ah
   14000e669:	add    BYTE PTR [rcx+0x0],ch
   14000e66c:	outs   dx,BYTE PTR ds:[rsi]
   14000e66d:	add    BYTE PTR [rsi+0x0],ah
   14000e670:	outs   dx,DWORD PTR ds:[rsi]
   14000e671:	add    BYTE PTR [rdx+0x0],dh
   14000e674:	ins    DWORD PTR es:[rdi],dx
   14000e675:	add    BYTE PTR [rcx+0x0],ah
   14000e678:	je     0x14000e67a
   14000e67a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e680:	or     eax,0xa00
	...
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    BYTE PTR [rdx+0x0],dl
   14000e692:	add    BYTE PTR ss:[rax],dh
   14000e695:	add    BYTE PTR [rbx],dh
   14000e697:	add    BYTE PTR [rcx],dh
   14000e699:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f09f
   14000e69f:	add    BYTE PTR [rax],ah
   14000e6a1:	add    BYTE PTR [rcx+0x0],al
   14000e6a4:	je     0x14000e6a6
   14000e6a6:	je     0x14000e6a8
   14000e6a8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e6ac:	jo     0x14000e6ae
   14000e6ae:	je     0x14000e6b0
   14000e6b0:	and    BYTE PTR [rax],al
   14000e6b2:	je     0x14000e6b4
   14000e6b4:	outs   dx,DWORD PTR ds:[rsi]
   14000e6b5:	add    BYTE PTR [rax],ah
   14000e6b7:	add    BYTE PTR [rcx+0x0],ch
   14000e6ba:	outs   dx,BYTE PTR ds:[rsi]
   14000e6bb:	add    BYTE PTR [rcx+0x0],ch
   14000e6be:	je     0x14000e6c0
   14000e6c0:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e6c6:	imul   eax,DWORD PTR [rax],0x65007a
   14000e6cc:	and    BYTE PTR [rax],al
   14000e6ce:	je     0x14000e6d0
   14000e6d0:	push   0x20006500
   14000e6d5:	add    BYTE PTR [rbx+0x0],al
   14000e6d8:	push   rdx
   14000e6d9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000e6dd:	add    BYTE PTR [rbp+0x0],ch
   14000e6e0:	outs   dx,DWORD PTR ds:[rsi]
   14000e6e1:	add    BYTE PTR [rdx+0x0],dh
   14000e6e4:	add    BYTE PTR gs:[rax],ah
   14000e6e7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e6eb:	add    BYTE PTR [rcx+0x0],ah
   14000e6ee:	outs   dx,BYTE PTR ds:[rsi]
   14000e6ef:	add    BYTE PTR [rax],ah
   14000e6f1:	add    BYTE PTR [rdi+0x0],ch
   14000e6f4:	outs   dx,BYTE PTR ds:[rsi]
   14000e6f5:	add    BYTE PTR [rbx+0x0],ah
   14000e6f8:	add    BYTE PTR gs:[rsi],ch
   14000e6fb:	add    BYTE PTR [rdx],cl
   14000e6fd:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000e701:	add    BYTE PTR [rcx+0x0],ch
   14000e704:	jae    0x14000e706
   14000e706:	and    BYTE PTR [rax],al
   14000e708:	imul   eax,DWORD PTR [rax],0x64006e
   14000e70e:	imul   eax,DWORD PTR [rax],0x610063
   14000e714:	je     0x14000e716
   14000e716:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e71a:	and    BYTE PTR [rax],al
   14000e71c:	(bad)  
   14000e71d:	add    BYTE PTR [rax],ah
   14000e71f:	add    BYTE PTR [rdx+0x0],ah
   14000e722:	jne    0x14000e724
   14000e724:	add    BYTE PTR [eax],ah
   14000e727:	add    BYTE PTR [rcx+0x0],ch
   14000e72a:	outs   dx,BYTE PTR ds:[rsi]
   14000e72b:	add    BYTE PTR [rax],ah
   14000e72d:	add    BYTE PTR [rcx+0x0],bh
   14000e730:	outs   dx,DWORD PTR ds:[rsi]
   14000e731:	add    BYTE PTR [rbp+0x0],dh
   14000e734:	jb     0x14000e736
   14000e736:	and    BYTE PTR [rax],al
   14000e738:	(bad)  
   14000e739:	add    BYTE PTR [rax+0x0],dh
   14000e73c:	jo     0x14000e73e
   14000e73e:	ins    BYTE PTR es:[rdi],dx
   14000e73f:	add    BYTE PTR [rcx+0x0],ch
   14000e742:	movsxd eax,DWORD PTR [rax]
   14000e744:	(bad)  
   14000e745:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e749:	add    BYTE PTR [rdi+0x0],ch
   14000e74c:	outs   dx,BYTE PTR ds:[rsi]
   14000e74d:	add    BYTE PTR [rsi],ch
   14000e74f:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f155
   14000e755:	add    BYTE PTR [rax],al
   14000e757:	add    BYTE PTR [rdx+0x0],dl
   14000e75a:	add    BYTE PTR ss:[rax],dh
   14000e75d:	add    BYTE PTR [rbx],dh
   14000e75f:	add    BYTE PTR [rax],dh
   14000e761:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f167
   14000e767:	add    BYTE PTR [rax],ah
   14000e769:	add    BYTE PTR [rbx+0x0],al
   14000e76c:	push   rdx
   14000e76d:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000e771:	add    BYTE PTR [rsi+0x0],ch
   14000e774:	outs   dx,DWORD PTR ds:[rsi]
   14000e775:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e779:	add    BYTE PTR [rcx+0x0],ch
   14000e77c:	outs   dx,BYTE PTR ds:[rsi]
   14000e77d:	add    BYTE PTR [rcx+0x0],ch
   14000e780:	je     0x14000e782
   14000e782:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e788:	imul   eax,DWORD PTR [rax],0x65007a
   14000e78e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f195
	...
   14000e79d:	add    BYTE PTR [rax],al
   14000e79f:	add    BYTE PTR [rdx+0x0],dl
   14000e7a2:	add    BYTE PTR ss:[rax],dh
   14000e7a5:	add    BYTE PTR [rdx],dh
   14000e7a7:	add    BYTE PTR [rax],bh
   14000e7a9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f1af
   14000e7af:	add    BYTE PTR [rax],ah
   14000e7b1:	add    BYTE PTR [rbp+0x0],dh
   14000e7b4:	outs   dx,BYTE PTR ds:[rsi]
   14000e7b5:	add    BYTE PTR [rcx+0x0],ah
   14000e7b8:	(bad)  
   14000e7b9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e7bd:	add    BYTE PTR [rax],ah
   14000e7bf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000e7c3:	add    BYTE PTR [rax],ah
   14000e7c5:	add    BYTE PTR [rcx+0x0],ch
   14000e7c8:	outs   dx,BYTE PTR ds:[rsi]
   14000e7c9:	add    BYTE PTR [rcx+0x0],ch
   14000e7cc:	je     0x14000e7ce
   14000e7ce:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e7d4:	imul   eax,DWORD PTR [rax],0x65007a
   14000e7da:	and    BYTE PTR [rax],al
   14000e7dc:	push   0x61006500
   14000e7e1:	add    BYTE PTR [rax+0x0],dh
   14000e7e4:	or     eax,0xa00
   14000e7e9:	add    BYTE PTR [rax],al
   14000e7eb:	add    BYTE PTR [rax],al
   14000e7ed:	add    BYTE PTR [rax],al
   14000e7ef:	add    BYTE PTR [rdx+0x0],dl
   14000e7f2:	add    BYTE PTR ss:[rax],dh
   14000e7f5:	add    BYTE PTR [rdx],dh
   14000e7f7:	add    BYTE PTR [rdi],dh
   14000e7f9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f1ff
   14000e7ff:	add    BYTE PTR [rax],ah
   14000e801:	add    BYTE PTR [rsi+0x0],ch
   14000e804:	outs   dx,DWORD PTR ds:[rsi]
   14000e805:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e809:	add    BYTE PTR [rbp+0x0],ah
   14000e80c:	outs   dx,BYTE PTR ds:[rsi]
   14000e80d:	add    BYTE PTR [rdi+0x0],ch
   14000e810:	jne    0x14000e812
   14000e812:	add    BYTE PTR [eax+0x0],ch
   14000e816:	and    BYTE PTR [rax],al
   14000e818:	jae    0x14000e81a
   14000e81a:	jo     0x14000e81c
   14000e81c:	(bad)  
   14000e81d:	add    BYTE PTR [rbx+0x0],ah
   14000e820:	add    BYTE PTR gs:[rax],ah
   14000e823:	add    BYTE PTR [rsi+0x0],ah
   14000e826:	outs   dx,DWORD PTR ds:[rsi]
   14000e827:	add    BYTE PTR [rdx+0x0],dh
   14000e82a:	and    BYTE PTR [rax],al
   14000e82c:	ins    BYTE PTR es:[rdi],dx
   14000e82d:	add    BYTE PTR [rdi+0x0],ch
   14000e830:	ja     0x14000e832
   14000e832:	imul   eax,DWORD PTR [rax],0x20006f
   14000e838:	imul   eax,DWORD PTR [rax],0x69006e
   14000e83e:	je     0x14000e840
   14000e840:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e846:	imul   eax,DWORD PTR [rax],0x61007a
   14000e84c:	je     0x14000e84e
   14000e84e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e854:	or     eax,0xa00
   14000e859:	add    BYTE PTR [rax],al
   14000e85b:	add    BYTE PTR [rax],al
   14000e85d:	add    BYTE PTR [rax],al
   14000e85f:	add    BYTE PTR [rdx+0x0],dl
   14000e862:	add    BYTE PTR ss:[rax],dh
   14000e865:	add    BYTE PTR [rdx],dh
   14000e867:	add    BYTE PTR [rsi],dh
   14000e869:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f26f
   14000e86f:	add    BYTE PTR [rax],ah
   14000e871:	add    BYTE PTR [rsi+0x0],ch
   14000e874:	outs   dx,DWORD PTR ds:[rsi]
   14000e875:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e879:	add    BYTE PTR [rbp+0x0],ah
   14000e87c:	outs   dx,BYTE PTR ds:[rsi]
   14000e87d:	add    BYTE PTR [rdi+0x0],ch
   14000e880:	jne    0x14000e882
   14000e882:	add    BYTE PTR [eax+0x0],ch
   14000e886:	and    BYTE PTR [rax],al
   14000e888:	jae    0x14000e88a
   14000e88a:	jo     0x14000e88c
   14000e88c:	(bad)  
   14000e88d:	add    BYTE PTR [rbx+0x0],ah
   14000e890:	add    BYTE PTR gs:[rax],ah
   14000e893:	add    BYTE PTR [rsi+0x0],ah
   14000e896:	outs   dx,DWORD PTR ds:[rsi]
   14000e897:	add    BYTE PTR [rdx+0x0],dh
   14000e89a:	and    BYTE PTR [rax],al
   14000e89c:	jae    0x14000e89e
   14000e89e:	je     0x14000e8a0
   14000e8a0:	add    BYTE PTR fs:[rcx+0x0],ch
   14000e8a4:	outs   dx,DWORD PTR ds:[rsi]
   14000e8a5:	add    BYTE PTR [rax],ah
   14000e8a7:	add    BYTE PTR [rcx+0x0],ch
   14000e8aa:	outs   dx,BYTE PTR ds:[rsi]
   14000e8ab:	add    BYTE PTR [rcx+0x0],ch
   14000e8ae:	je     0x14000e8b0
   14000e8b0:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e8b6:	imul   eax,DWORD PTR [rax],0x61007a
   14000e8bc:	je     0x14000e8be
   14000e8be:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e8c4:	or     eax,0xa00
   14000e8c9:	add    BYTE PTR [rax],al
   14000e8cb:	add    BYTE PTR [rax],al
   14000e8cd:	add    BYTE PTR [rax],al
   14000e8cf:	add    BYTE PTR [rdx+0x0],dl
   14000e8d2:	add    BYTE PTR ss:[rax],dh
   14000e8d5:	add    BYTE PTR [rdx],dh
   14000e8d7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a00f5dd
   14000e8dd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b00108e3
   14000e8e3:	add    BYTE PTR [rbp+0x0],dh
   14000e8e6:	jb     0x14000e8e8
   14000e8e8:	add    BYTE PTR gs:[rax],ah
   14000e8eb:	add    BYTE PTR [rsi+0x0],dh
   14000e8ee:	imul   eax,DWORD PTR [rax],0x740072
   14000e8f4:	jne    0x14000e8f6
   14000e8f6:	(bad)  
   14000e8f7:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e8fb:	add    BYTE PTR [rsi+0x0],ah
   14000e8fe:	jne    0x14000e900
   14000e900:	outs   dx,BYTE PTR ds:[rsi]
   14000e901:	add    BYTE PTR [rbx+0x0],ah
   14000e904:	je     0x14000e906
   14000e906:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e90c:	and    BYTE PTR [rax],al
   14000e90e:	movsxd eax,DWORD PTR [rax]
   14000e910:	(bad)  
   14000e911:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e915:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f31b
   14000e91b:	add    BYTE PTR [rax],al
   14000e91d:	add    BYTE PTR [rax],al
   14000e91f:	add    BYTE PTR [rdx+0x0],dl
   14000e922:	add    BYTE PTR ss:[rax],dh
   14000e925:	add    BYTE PTR [rdx],dh
   14000e927:	add    BYTE PTR [rax+rax*1],dh
   14000e92a:	or     eax,0x2d000a00
   14000e92f:	add    BYTE PTR [rax],ah
   14000e931:	add    BYTE PTR [rsi+0x0],ch
   14000e934:	outs   dx,DWORD PTR ds:[rsi]
   14000e935:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e939:	add    BYTE PTR [rbp+0x0],ah
   14000e93c:	outs   dx,BYTE PTR ds:[rsi]
   14000e93d:	add    BYTE PTR [rdi+0x0],ch
   14000e940:	jne    0x14000e942
   14000e942:	add    BYTE PTR [eax+0x0],ch
   14000e946:	and    BYTE PTR [rax],al
   14000e948:	jae    0x14000e94a
   14000e94a:	jo     0x14000e94c
   14000e94c:	(bad)  
   14000e94d:	add    BYTE PTR [rbx+0x0],ah
   14000e950:	add    BYTE PTR gs:[rax],ah
   14000e953:	add    BYTE PTR [rsi+0x0],ah
   14000e956:	outs   dx,DWORD PTR ds:[rsi]
   14000e957:	add    BYTE PTR [rdx+0x0],dh
   14000e95a:	and    BYTE PTR [rax],al
   14000e95c:	pop    rdi
   14000e95d:	add    BYTE PTR [rdi+0x0],ch
   14000e960:	outs   dx,BYTE PTR ds:[rsi]
   14000e961:	add    BYTE PTR [rbp+0x0],ah
   14000e964:	js     0x14000e966
   14000e966:	imul   eax,DWORD PTR [rax],0x2f0074
   14000e96c:	(bad)  
   14000e96d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e971:	add    BYTE PTR [rax+0x0],bh
   14000e974:	imul   eax,DWORD PTR [rax],0x200074
   14000e97a:	je     0x14000e97c
   14000e97c:	(bad)  
   14000e97d:	add    BYTE PTR [rdx+0x0],ah
   14000e980:	ins    BYTE PTR es:[rdi],dx
   14000e981:	add    BYTE PTR [rbp+0x0],ah
   14000e984:	or     eax,0xa00
   14000e989:	add    BYTE PTR [rax],al
   14000e98b:	add    BYTE PTR [rax],al
   14000e98d:	add    BYTE PTR [rax],al
   14000e98f:	add    BYTE PTR [rdx+0x0],dl
   14000e992:	add    BYTE PTR ss:[rax],dh
   14000e995:	add    BYTE PTR [rcx],dh
   14000e997:	add    BYTE PTR [rcx],bh
   14000e999:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f39f
   14000e99f:	add    BYTE PTR [rax],ah
   14000e9a1:	add    BYTE PTR [rbp+0x0],dh
   14000e9a4:	outs   dx,BYTE PTR ds:[rsi]
   14000e9a5:	add    BYTE PTR [rcx+0x0],ah
   14000e9a8:	(bad)  
   14000e9a9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e9ad:	add    BYTE PTR [rax],ah
   14000e9af:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000e9b3:	add    BYTE PTR [rax],ah
   14000e9b5:	add    BYTE PTR [rdi+0x0],ch
   14000e9b8:	jo     0x14000e9ba
   14000e9ba:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e9be:	and    BYTE PTR [rax],al
   14000e9c0:	movsxd eax,DWORD PTR [rax]
   14000e9c2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c3:	add    BYTE PTR [rsi+0x0],ch
   14000e9c6:	jae    0x14000e9c8
   14000e9c8:	outs   dx,DWORD PTR ds:[rsi]
   14000e9c9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e9cd:	add    BYTE PTR [rax],ah
   14000e9cf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e9d3:	add    BYTE PTR [rsi+0x0],dh
   14000e9d6:	imul   eax,DWORD PTR [rax],0x650063
   14000e9dc:	or     eax,0xa00
	...
   14000e9ed:	add    BYTE PTR [rax],al
   14000e9ef:	add    BYTE PTR [rdx+0x0],dl
   14000e9f2:	add    BYTE PTR ss:[rax],dh
   14000e9f5:	add    BYTE PTR [rcx],dh
   14000e9f7:	add    BYTE PTR [rax],bh
   14000e9f9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f3ff
   14000e9ff:	add    BYTE PTR [rax],ah
   14000ea01:	add    BYTE PTR [rbp+0x0],dh
   14000ea04:	outs   dx,BYTE PTR ds:[rsi]
   14000ea05:	add    BYTE PTR [rbp+0x0],ah
   14000ea08:	js     0x14000ea0a
   14000ea0a:	jo     0x14000ea0c
   14000ea0c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ea10:	je     0x14000ea12
   14000ea12:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ea17:	add    BYTE PTR [rax+0x0],ch
   14000ea1a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ea1e:	jo     0x14000ea20
   14000ea20:	and    BYTE PTR [rax],al
   14000ea22:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ea26:	jb     0x14000ea28
   14000ea28:	outs   dx,DWORD PTR ds:[rsi]
   14000ea29:	add    BYTE PTR [rdx+0x0],dh
   14000ea2c:	or     eax,0xa00
	...
   14000ea3d:	add    BYTE PTR [rax],al
   14000ea3f:	add    BYTE PTR [rdx+0x0],dl
   14000ea42:	add    BYTE PTR ss:[rax],dh
   14000ea45:	add    BYTE PTR [rcx],dh
   14000ea47:	add    BYTE PTR [rdi],dh
   14000ea49:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f44f
   14000ea4f:	add    BYTE PTR [rax],ah
   14000ea51:	add    BYTE PTR [rbp+0x0],dh
   14000ea54:	outs   dx,BYTE PTR ds:[rsi]
   14000ea55:	add    BYTE PTR [rbp+0x0],ah
   14000ea58:	js     0x14000ea5a
   14000ea5a:	jo     0x14000ea5c
   14000ea5c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ea60:	je     0x14000ea62
   14000ea62:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ea67:	add    BYTE PTR [rbp+0x0],ch
   14000ea6a:	jne    0x14000ea6c
   14000ea6c:	ins    BYTE PTR es:[rdi],dx
   14000ea6d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ea71:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ea75:	add    BYTE PTR [rdx+0x0],dh
   14000ea78:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ea7c:	add    BYTE PTR fs:[rax],ah
   14000ea7f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000ea83:	add    BYTE PTR [rbx+0x0],ah
   14000ea86:	imul   eax,DWORD PTR [rax],0x20
   14000ea89:	add    BYTE PTR [rbp+0x0],ah
   14000ea8c:	jb     0x14000ea8e
   14000ea8e:	jb     0x14000ea90
   14000ea90:	outs   dx,DWORD PTR ds:[rsi]
   14000ea91:	add    BYTE PTR [rdx+0x0],dh
   14000ea94:	or     eax,0xa00
   14000ea99:	add    BYTE PTR [rax],al
   14000ea9b:	add    BYTE PTR [rax],al
   14000ea9d:	add    BYTE PTR [rax],al
   14000ea9f:	add    BYTE PTR [rdx+0x0],dl
   14000eaa2:	add    BYTE PTR ss:[rax],dh
   14000eaa5:	add    BYTE PTR [rcx],dh
   14000eaa7:	add    BYTE PTR [rsi],dh
   14000eaa9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f4af
   14000eaaf:	add    BYTE PTR [rax],ah
   14000eab1:	add    BYTE PTR [rsi+0x0],ch
   14000eab4:	outs   dx,DWORD PTR ds:[rsi]
   14000eab5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eab9:	add    BYTE PTR [rbp+0x0],ah
   14000eabc:	outs   dx,BYTE PTR ds:[rsi]
   14000eabd:	add    BYTE PTR [rdi+0x0],ch
   14000eac0:	jne    0x14000eac2
   14000eac2:	add    BYTE PTR [eax+0x0],ch
   14000eac6:	and    BYTE PTR [rax],al
   14000eac8:	jae    0x14000eaca
   14000eaca:	jo     0x14000eacc
   14000eacc:	(bad)  
   14000eacd:	add    BYTE PTR [rbx+0x0],ah
   14000ead0:	add    BYTE PTR gs:[rax],ah
   14000ead3:	add    BYTE PTR [rsi+0x0],ah
   14000ead6:	outs   dx,DWORD PTR ds:[rsi]
   14000ead7:	add    BYTE PTR [rdx+0x0],dh
   14000eada:	and    BYTE PTR [rax],al
   14000eadc:	je     0x14000eade
   14000eade:	push   0x65007200
   14000eae3:	add    BYTE PTR [rcx+0x0],ah
   14000eae6:	add    BYTE PTR fs:[rax],ah
   14000eae9:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000eaed:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000eaf1:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f4f7
	...
   14000eaff:	add    BYTE PTR [rdx+0x0],dl
   14000eb02:	add    BYTE PTR ss:[rax],dh
   14000eb05:	add    BYTE PTR [rcx],dh
   14000eb07:	add    BYTE PTR [rax],dh
   14000eb09:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f50f
   14000eb0f:	add    BYTE PTR [rax],ah
   14000eb11:	add    BYTE PTR [rcx+0x0],ah
   14000eb14:	(bad)  
   14000eb15:	add    BYTE PTR [rdi+0x0],ch
   14000eb18:	jb     0x14000eb1a
   14000eb1a:	je     0x14000eb1c
   14000eb1c:	sub    BYTE PTR [rax],al
   14000eb1e:	sub    DWORD PTR [rax],eax
   14000eb20:	and    BYTE PTR [rax],al
   14000eb22:	push   0x73006100
   14000eb27:	add    BYTE PTR [rax],ah
   14000eb29:	add    BYTE PTR [rdx+0x0],ah
   14000eb2c:	add    BYTE PTR gs:[rbp+0x0],ah
   14000eb30:	outs   dx,BYTE PTR ds:[rsi]
   14000eb31:	add    BYTE PTR [rax],ah
   14000eb33:	add    BYTE PTR [rbx+0x0],ah
   14000eb36:	(bad)  
   14000eb37:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eb3b:	add    BYTE PTR [rbp+0x0],ah
   14000eb3e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f545
	...
   14000eb4d:	add    BYTE PTR [rax],al
   14000eb4f:	add    BYTE PTR [rdx+0x0],dl
   14000eb52:	add    BYTE PTR ss:[rax],dh
   14000eb55:	add    BYTE PTR [rax],dh
   14000eb57:	add    BYTE PTR [rcx],bh
   14000eb59:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f55f
   14000eb5f:	add    BYTE PTR [rax],ah
   14000eb61:	add    BYTE PTR [rsi+0x0],ch
   14000eb64:	outs   dx,DWORD PTR ds:[rsi]
   14000eb65:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eb69:	add    BYTE PTR [rbp+0x0],ah
   14000eb6c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb6d:	add    BYTE PTR [rdi+0x0],ch
   14000eb70:	jne    0x14000eb72
   14000eb72:	add    BYTE PTR [eax+0x0],ch
   14000eb76:	and    BYTE PTR [rax],al
   14000eb78:	jae    0x14000eb7a
   14000eb7a:	jo     0x14000eb7c
   14000eb7c:	(bad)  
   14000eb7d:	add    BYTE PTR [rbx+0x0],ah
   14000eb80:	add    BYTE PTR gs:[rax],ah
   14000eb83:	add    BYTE PTR [rsi+0x0],ah
   14000eb86:	outs   dx,DWORD PTR ds:[rsi]
   14000eb87:	add    BYTE PTR [rdx+0x0],dh
   14000eb8a:	and    BYTE PTR [rax],al
   14000eb8c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000eb90:	jbe    0x14000eb92
   14000eb92:	imul   eax,DWORD PTR [rax],0x6f0072
   14000eb98:	outs   dx,BYTE PTR ds:[rsi]
   14000eb99:	add    BYTE PTR [rbp+0x0],ch
   14000eb9c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000eba0:	je     0x14000eba2
   14000eba2:	or     eax,0xa00
	...
   14000ebaf:	add    BYTE PTR [rdx+0x0],dl
   14000ebb2:	add    BYTE PTR ss:[rax],dh
   14000ebb5:	add    BYTE PTR [rax],dh
   14000ebb7:	add    BYTE PTR [rax],bh
   14000ebb9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f5bf
   14000ebbf:	add    BYTE PTR [rax],ah
   14000ebc1:	add    BYTE PTR [rsi+0x0],ch
   14000ebc4:	outs   dx,DWORD PTR ds:[rsi]
   14000ebc5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ebc9:	add    BYTE PTR [rbp+0x0],ah
   14000ebcc:	outs   dx,BYTE PTR ds:[rsi]
   14000ebcd:	add    BYTE PTR [rdi+0x0],ch
   14000ebd0:	jne    0x14000ebd2
   14000ebd2:	add    BYTE PTR [eax+0x0],ch
   14000ebd6:	and    BYTE PTR [rax],al
   14000ebd8:	jae    0x14000ebda
   14000ebda:	jo     0x14000ebdc
   14000ebdc:	(bad)  
   14000ebdd:	add    BYTE PTR [rbx+0x0],ah
   14000ebe0:	add    BYTE PTR gs:[rax],ah
   14000ebe3:	add    BYTE PTR [rsi+0x0],ah
   14000ebe6:	outs   dx,DWORD PTR ds:[rsi]
   14000ebe7:	add    BYTE PTR [rdx+0x0],dh
   14000ebea:	and    BYTE PTR [rax],al
   14000ebec:	(bad)  
   14000ebed:	add    BYTE PTR [rdx+0x0],dh
   14000ebf0:	add    BYTE PTR [ebp+0x0],dh
   14000ebf4:	ins    DWORD PTR es:[rdi],dx
   14000ebf5:	add    BYTE PTR [rbp+0x0],ah
   14000ebf8:	outs   dx,BYTE PTR ds:[rsi]
   14000ebf9:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000ebfd:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f603
	...
   14000ec0f:	add    BYTE PTR [rdx+0x0],dl
   14000ec12:	add    BYTE PTR ss:[rax],dh
   14000ec15:	add    BYTE PTR [rax],dh
   14000ec17:	add    BYTE PTR [rdx],dh
   14000ec19:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f61f
   14000ec1f:	add    BYTE PTR [rax],ah
   14000ec21:	add    BYTE PTR [rsi+0x0],ah
   14000ec24:	ins    BYTE PTR es:[rdi],dx
   14000ec25:	add    BYTE PTR [rdi+0x0],ch
   14000ec28:	(bad)  
   14000ec29:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ec2d:	add    BYTE PTR [rsi+0x0],ch
   14000ec30:	add    BYTE PTR [eax],ah
   14000ec33:	add    BYTE PTR [rax+0x0],dh
   14000ec36:	outs   dx,DWORD PTR ds:[rsi]
   14000ec37:	add    BYTE PTR [rcx+0x0],ch
   14000ec3a:	outs   dx,BYTE PTR ds:[rsi]
   14000ec3b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ec3f:	add    BYTE PTR [rbx+0x0],dh
   14000ec42:	jne    0x14000ec44
   14000ec44:	jo     0x14000ec46
   14000ec46:	jo     0x14000ec48
   14000ec48:	outs   dx,DWORD PTR ds:[rsi]
   14000ec49:	add    BYTE PTR [rdx+0x0],dh
   14000ec4c:	je     0x14000ec4e
   14000ec4e:	and    BYTE PTR [rax],al
   14000ec50:	outs   dx,BYTE PTR ds:[rsi]
   14000ec51:	add    BYTE PTR [rdi+0x0],ch
   14000ec54:	je     0x14000ec56
   14000ec56:	and    BYTE PTR [rax],al
   14000ec58:	ins    BYTE PTR es:[rdi],dx
   14000ec59:	add    BYTE PTR [rdi+0x0],ch
   14000ec5c:	(bad)  
   14000ec5d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000ec61:	add    BYTE PTR [rax+rax*1+0xd],ah
   14000ec65:	add    BYTE PTR [rdx],cl
	...
   14000ec6f:	add    BYTE PTR [rdx],al
   14000ec71:	add    BYTE PTR [rax],al
   14000ec73:	add    BYTE PTR [rax],al
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax],dl
   14000ec79:	in     al,dx
   14000ec7a:	add    BYTE PTR [rax+0x1],al
   14000ec7d:	add    BYTE PTR [rax],al
   14000ec7f:	add    BYTE PTR [rax],cl
   14000ec81:	add    BYTE PTR [rax],al
   14000ec83:	add    BYTE PTR [rax],al
   14000ec85:	add    BYTE PTR [rax],al
   14000ec87:	add    BYTE PTR [rax+0x14000eb],dh
   14000ec8d:	add    BYTE PTR [rax],al
   14000ec8f:	add    BYTE PTR [rcx],cl
   14000ec91:	add    BYTE PTR [rax],al
   14000ec93:	add    BYTE PTR [rax],al
   14000ec95:	add    BYTE PTR [rax],al
   14000ec97:	add    BYTE PTR [rax-0x15],dl
   14000ec9a:	add    BYTE PTR [rax+0x1],al
   14000ec9d:	add    BYTE PTR [rax],al
   14000ec9f:	add    BYTE PTR [rdx],cl
	...
   14000eca9:	jmp    0x14000ecab
   14000ecab:	rex add DWORD PTR [rax],eax
   14000ecae:	add    BYTE PTR [rax],al
   14000ecb0:	adc    BYTE PTR [rax],al
   14000ecb2:	add    BYTE PTR [rax],al
   14000ecb4:	add    BYTE PTR [rax],al
   14000ecb6:	add    BYTE PTR [rax],al
   14000ecb8:	movabs al,ds:0x11000000014000ea
   14000ecc1:	add    BYTE PTR [rax],al
   14000ecc3:	add    BYTE PTR [rax],al
   14000ecc5:	add    BYTE PTR [rax],al
   14000ecc7:	add    BYTE PTR [rax-0x16],al
   14000ecca:	add    BYTE PTR [rax+0x1],al
   14000eccd:	add    BYTE PTR [rax],al
   14000eccf:	add    BYTE PTR [rdx],dl
   14000ecd1:	add    BYTE PTR [rax],al
   14000ecd3:	add    BYTE PTR [rax],al
   14000ecd5:	add    BYTE PTR [rax],al
   14000ecd7:	add    al,dh
   14000ecd9:	jmp    0x140022cde
   14000ecde:	add    BYTE PTR [rax],al
   14000ece0:	adc    eax,DWORD PTR [rax]
   14000ece2:	add    BYTE PTR [rax],al
   14000ece4:	add    BYTE PTR [rax],al
   14000ece6:	add    BYTE PTR [rax],al
   14000ece8:	nop
   14000ece9:	jmp    0x140022cee
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	sbb    BYTE PTR [rax],al
   14000ecf2:	add    BYTE PTR [rax],al
   14000ecf4:	add    BYTE PTR [rax],al
   14000ecf6:	add    BYTE PTR [rax],al
   14000ecf8:	and    cl,ch
   14000ecfa:	add    BYTE PTR [rax+0x1],al
   14000ecfd:	add    BYTE PTR [rax],al
   14000ecff:	add    BYTE PTR [rcx],bl
   14000ed01:	add    BYTE PTR [rax],al
   14000ed03:	add    BYTE PTR [rax],al
   14000ed05:	add    BYTE PTR [rax],al
   14000ed07:	add    al,dl
   14000ed09:	call   0x140022d0e
   14000ed0e:	add    BYTE PTR [rax],al
   14000ed10:	sbb    al,BYTE PTR [rax]
   14000ed12:	add    BYTE PTR [rax],al
   14000ed14:	add    BYTE PTR [rax],al
   14000ed16:	add    BYTE PTR [rax],al
   14000ed18:	(bad)  
   14000ed19:	call   0x140022d1e
   14000ed1e:	add    BYTE PTR [rax],al
   14000ed20:	sbb    eax,DWORD PTR [rax]
   14000ed22:	add    BYTE PTR [rax],al
   14000ed24:	add    BYTE PTR [rax],al
   14000ed26:	add    BYTE PTR [rax],al
   14000ed28:	lock out 0x0,eax
   14000ed2b:	rex add DWORD PTR [rax],eax
   14000ed2e:	add    BYTE PTR [rax],al
   14000ed30:	sbb    al,0x0
   14000ed32:	add    BYTE PTR [rax],al
   14000ed34:	add    BYTE PTR [rax],al
   14000ed36:	add    BYTE PTR [rax],al
   14000ed38:	movabs al,ds:0x1e000000014000e7
   14000ed41:	add    BYTE PTR [rax],al
   14000ed43:	add    BYTE PTR [rax],al
   14000ed45:	add    BYTE PTR [rax],al
   14000ed47:	add    BYTE PTR [rax-0x19],bl
   14000ed4a:	add    BYTE PTR [rax+0x1],al
   14000ed4d:	add    BYTE PTR [rax],al
   14000ed4f:	add    BYTE PTR [rdi],bl
   14000ed51:	add    BYTE PTR [rax],al
   14000ed53:	add    BYTE PTR [rax],al
   14000ed55:	add    BYTE PTR [rax],al
   14000ed57:	add    BYTE PTR [rax+0x14000e6],dl
   14000ed5d:	add    BYTE PTR [rax],al
   14000ed5f:	add    BYTE PTR [rax],ah
   14000ed61:	add    BYTE PTR [rax],al
   14000ed63:	add    BYTE PTR [rax],al
   14000ed65:	add    BYTE PTR [rax],al
   14000ed67:	add    BYTE PTR [rax],ah
   14000ed69:	out    0x0,al
   14000ed6b:	rex add DWORD PTR [rax],eax
   14000ed6e:	add    BYTE PTR [rax],al
   14000ed70:	and    DWORD PTR [rax],eax
   14000ed72:	add    BYTE PTR [rax],al
   14000ed74:	add    BYTE PTR [rax],al
   14000ed76:	add    BYTE PTR [rax],al
   14000ed78:	xor    ah,ah
   14000ed7a:	add    BYTE PTR [rax+0x1],al
   14000ed7d:	add    BYTE PTR [rax],al
   14000ed7f:	add    BYTE PTR [rax+0x0],bh
   14000ed82:	add    BYTE PTR [rax],al
   14000ed84:	add    BYTE PTR [rax],al
   14000ed86:	add    BYTE PTR [rax],al
   14000ed88:	adc    ah,ah
   14000ed8a:	add    BYTE PTR [rax+0x1],al
   14000ed8d:	add    BYTE PTR [rax],al
   14000ed8f:	add    BYTE PTR [rcx+0x0],bh
   14000ed92:	add    BYTE PTR [rax],al
   14000ed94:	add    BYTE PTR [rax],al
   14000ed96:	add    BYTE PTR [rax],al
   14000ed98:	lock jrcxz 0x14000ed9b
   14000ed9b:	rex add DWORD PTR [rax],eax
   14000ed9e:	add    BYTE PTR [rax],al
   14000eda0:	jp     0x14000eda2
   14000eda2:	add    BYTE PTR [rax],al
   14000eda4:	add    BYTE PTR [rax],al
   14000eda6:	add    BYTE PTR [rax],al
   14000eda8:	shl    bl,1
   14000edaa:	add    BYTE PTR [rax+0x1],al
   14000edad:	add    BYTE PTR [rax],al
   14000edaf:	add    ah,bh
   14000edb1:	add    BYTE PTR [rax],al
   14000edb3:	add    BYTE PTR [rax],al
   14000edb5:	add    BYTE PTR [rax],al
   14000edb7:	add    al,cl
   14000edb9:	jrcxz  0x14000edbb
   14000edbb:	rex add DWORD PTR [rax],eax
   14000edbe:	add    BYTE PTR [rax],al
   14000edc0:	inc    DWORD PTR [rax]
   14000edc2:	add    BYTE PTR [rax],al
   14000edc4:	add    BYTE PTR [rax],al
   14000edc6:	add    BYTE PTR [rax],al
   14000edc8:	test   al,0xe3
   14000edca:	add    BYTE PTR [rax+0x1],al
   14000edcd:	add    BYTE PTR [rax],al
   14000edcf:	add    BYTE PTR [rbp+0x0],cl
   14000edd2:	imul   eax,DWORD PTR [rax],0x720063
   14000edd8:	outs   dx,DWORD PTR ds:[rsi]
   14000edd9:	add    BYTE PTR [rbx+0x0],dh
   14000eddc:	outs   dx,DWORD PTR ds:[rsi]
   14000eddd:	add    BYTE PTR [rsi+0x0],ah
   14000ede0:	je     0x14000ede2
   14000ede2:	and    BYTE PTR [rax],al
   14000ede4:	push   rsi
   14000ede5:	add    BYTE PTR [rcx+0x0],ch
   14000ede8:	jae    0x14000edea
   14000edea:	jne    0x14000edec
   14000edec:	(bad)  
   14000eded:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000edf1:	add    BYTE PTR [rbx+0x0],al
   14000edf4:	sub    eax,DWORD PTR [rax]
   14000edf6:	sub    eax,DWORD PTR [rax]
   14000edf8:	and    BYTE PTR [rax],al
   14000edfa:	push   rdx
   14000edfb:	add    BYTE PTR [rbp+0x0],dh
   14000edfe:	outs   dx,BYTE PTR ds:[rsi]
   14000edff:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ee03:	add    BYTE PTR [rbp+0x0],ch
   14000ee06:	add    BYTE PTR gs:[rax],ah
   14000ee09:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000ee0d:	add    BYTE PTR [rdx+0x0],ah
   14000ee10:	jb     0x14000ee12
   14000ee12:	(bad)  
   14000ee13:	add    BYTE PTR [rdx+0x0],dh
   14000ee16:	jns    0x14000ee18
   14000ee18:	add    BYTE PTR [rax],al
   14000ee1a:	add    BYTE PTR [rax],al
   14000ee1c:	or     al,BYTE PTR [rax]
   14000ee1e:	or     al,BYTE PTR [rax]
	...
   14000ee28:	add    BYTE PTR cs:[rsi],ch
   14000ee2b:	add    BYTE PTR [rsi],ch
   14000ee2d:	add    BYTE PTR [rax],al
   14000ee2f:	add    BYTE PTR [rax+rax*1],bh
   14000ee32:	jo     0x14000ee34
   14000ee34:	jb     0x14000ee36
   14000ee36:	outs   dx,DWORD PTR ds:[rsi]
   14000ee37:	add    BYTE PTR [rdi+0x0],ah
   14000ee3a:	jb     0x14000ee3c
   14000ee3c:	(bad)  
   14000ee3d:	add    BYTE PTR [rbp+0x0],ch
   14000ee40:	and    BYTE PTR [rax],al
   14000ee42:	outs   dx,BYTE PTR ds:[rsi]
   14000ee43:	add    BYTE PTR [rcx+0x0],ah
   14000ee46:	ins    DWORD PTR es:[rdi],dx
   14000ee47:	add    BYTE PTR [rbp+0x0],ah
   14000ee4a:	and    BYTE PTR [rax],al
   14000ee4c:	jne    0x14000ee4e
   14000ee4e:	outs   dx,BYTE PTR ds:[rsi]
   14000ee4f:	add    BYTE PTR [rbx+0x0],ch
   14000ee52:	outs   dx,BYTE PTR ds:[rsi]
   14000ee53:	add    BYTE PTR [rdi+0x0],ch
   14000ee56:	ja     0x14000ee58
   14000ee58:	outs   dx,BYTE PTR ds:[rsi]
   14000ee59:	add    BYTE PTR [rsi],bh
   14000ee5b:	add    BYTE PTR [rax],al
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rdx+0x0],dl
   14000ee62:	jne    0x14000ee64
   14000ee64:	outs   dx,BYTE PTR ds:[rsi]
   14000ee65:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ee69:	add    BYTE PTR [rbp+0x0],ch
   14000ee6c:	add    BYTE PTR gs:[rax],ah
   14000ee6f:	add    BYTE PTR [rbp+0x0],al
   14000ee72:	jb     0x14000ee74
   14000ee74:	jb     0x14000ee76
   14000ee76:	outs   dx,DWORD PTR ds:[rsi]
   14000ee77:	add    BYTE PTR [rdx+0x0],dh
   14000ee7a:	and    DWORD PTR [rax],eax
   14000ee7c:	or     al,BYTE PTR [rax]
   14000ee7e:	or     al,BYTE PTR [rax]
   14000ee80:	push   rax
   14000ee81:	add    BYTE PTR [rdx+0x0],dh
   14000ee84:	outs   dx,DWORD PTR ds:[rsi]
   14000ee85:	add    BYTE PTR [rdi+0x0],ah
   14000ee88:	jb     0x14000ee8a
   14000ee8a:	(bad)  
   14000ee8b:	add    BYTE PTR [rbp+0x0],ch
   14000ee8e:	cmp    al,BYTE PTR [rax]
   14000ee90:	and    BYTE PTR [rax],al
	...
   14000ef9e:	add    BYTE PTR [rax],al
   14000efa0:	and    BYTE PTR [rax],al
   14000efa2:	and    BYTE PTR [rax],al
   14000efa4:	and    BYTE PTR [rax],al
   14000efa6:	and    BYTE PTR [rax],al
   14000efa8:	and    BYTE PTR [rax],al
   14000efaa:	and    BYTE PTR [rax],al
   14000efac:	and    BYTE PTR [rax],al
   14000efae:	and    BYTE PTR [rax],al
   14000efb0:	and    BYTE PTR [rax],al
   14000efb2:	sub    BYTE PTR [rax],al
   14000efb4:	sub    BYTE PTR [rax],al
   14000efb6:	sub    BYTE PTR [rax],al
   14000efb8:	sub    BYTE PTR [rax],al
   14000efba:	sub    BYTE PTR [rax],al
   14000efbc:	and    BYTE PTR [rax],al
   14000efbe:	and    BYTE PTR [rax],al
   14000efc0:	and    BYTE PTR [rax],al
   14000efc2:	and    BYTE PTR [rax],al
   14000efc4:	and    BYTE PTR [rax],al
   14000efc6:	and    BYTE PTR [rax],al
   14000efc8:	and    BYTE PTR [rax],al
   14000efca:	and    BYTE PTR [rax],al
   14000efcc:	and    BYTE PTR [rax],al
   14000efce:	and    BYTE PTR [rax],al
   14000efd0:	and    BYTE PTR [rax],al
   14000efd2:	and    BYTE PTR [rax],al
   14000efd4:	and    BYTE PTR [rax],al
   14000efd6:	and    BYTE PTR [rax],al
   14000efd8:	and    BYTE PTR [rax],al
   14000efda:	and    BYTE PTR [rax],al
   14000efdc:	and    BYTE PTR [rax],al
   14000efde:	and    BYTE PTR [rax],al
   14000efe0:	rex.W add BYTE PTR [rax],dl
   14000efe3:	add    BYTE PTR [rax],dl
   14000efe5:	add    BYTE PTR [rax],dl
   14000efe7:	add    BYTE PTR [rax],dl
   14000efe9:	add    BYTE PTR [rax],dl
   14000efeb:	add    BYTE PTR [rax],dl
   14000efed:	add    BYTE PTR [rax],dl
   14000efef:	add    BYTE PTR [rax],dl
   14000eff1:	add    BYTE PTR [rax],dl
   14000eff3:	add    BYTE PTR [rax],dl
   14000eff5:	add    BYTE PTR [rax],dl
   14000eff7:	add    BYTE PTR [rax],dl
   14000eff9:	add    BYTE PTR [rax],dl
   14000effb:	add    BYTE PTR [rax],dl
   14000effd:	add    BYTE PTR [rax],dl
   14000efff:	add    BYTE PTR [rax+rax*1+0x840084],al
   14000f006:	test   BYTE PTR [rax],al
   14000f008:	test   BYTE PTR [rax],al
   14000f00a:	test   BYTE PTR [rax],al
   14000f00c:	test   BYTE PTR [rax],al
   14000f00e:	test   BYTE PTR [rax],al
   14000f010:	test   BYTE PTR [rax],al
   14000f012:	test   BYTE PTR [rax],al
   14000f014:	adc    BYTE PTR [rax],al
   14000f016:	adc    BYTE PTR [rax],al
   14000f018:	adc    BYTE PTR [rax],al
   14000f01a:	adc    BYTE PTR [rax],al
   14000f01c:	adc    BYTE PTR [rax],al
   14000f01e:	adc    BYTE PTR [rax],al
   14000f020:	adc    BYTE PTR [rax],al
   14000f022:	add    DWORD PTR [rax],0x810081
   14000f028:	add    DWORD PTR [rax],0x810081
   14000f02e:	add    DWORD PTR [rax],eax
   14000f030:	add    DWORD PTR [rax],eax
   14000f032:	add    DWORD PTR [rax],eax
   14000f034:	add    DWORD PTR [rax],eax
   14000f036:	add    DWORD PTR [rax],eax
   14000f038:	add    DWORD PTR [rax],eax
   14000f03a:	add    DWORD PTR [rax],eax
   14000f03c:	add    DWORD PTR [rax],eax
   14000f03e:	add    DWORD PTR [rax],eax
   14000f040:	add    DWORD PTR [rax],eax
   14000f042:	add    DWORD PTR [rax],eax
   14000f044:	add    DWORD PTR [rax],eax
   14000f046:	add    DWORD PTR [rax],eax
   14000f048:	add    DWORD PTR [rax],eax
   14000f04a:	add    DWORD PTR [rax],eax
   14000f04c:	add    DWORD PTR [rax],eax
   14000f04e:	add    DWORD PTR [rax],eax
   14000f050:	add    DWORD PTR [rax],eax
   14000f052:	add    DWORD PTR [rax],eax
   14000f054:	add    DWORD PTR [rax],eax
   14000f056:	adc    BYTE PTR [rax],al
   14000f058:	adc    BYTE PTR [rax],al
   14000f05a:	adc    BYTE PTR [rax],al
   14000f05c:	adc    BYTE PTR [rax],al
   14000f05e:	adc    BYTE PTR [rax],al
   14000f060:	adc    BYTE PTR [rax],al
   14000f062:	(bad)  
   14000f063:	add    BYTE PTR [rdx-0x7dff7e00],al
   14000f069:	add    BYTE PTR [rdx+0x2008200],al
   14000f06f:	add    BYTE PTR [rdx],al
   14000f071:	add    BYTE PTR [rdx],al
   14000f073:	add    BYTE PTR [rdx],al
   14000f075:	add    BYTE PTR [rdx],al
   14000f077:	add    BYTE PTR [rdx],al
   14000f079:	add    BYTE PTR [rdx],al
   14000f07b:	add    BYTE PTR [rdx],al
   14000f07d:	add    BYTE PTR [rdx],al
   14000f07f:	add    BYTE PTR [rdx],al
   14000f081:	add    BYTE PTR [rdx],al
   14000f083:	add    BYTE PTR [rdx],al
   14000f085:	add    BYTE PTR [rdx],al
   14000f087:	add    BYTE PTR [rdx],al
   14000f089:	add    BYTE PTR [rdx],al
   14000f08b:	add    BYTE PTR [rdx],al
   14000f08d:	add    BYTE PTR [rdx],al
   14000f08f:	add    BYTE PTR [rdx],al
   14000f091:	add    BYTE PTR [rdx],al
   14000f093:	add    BYTE PTR [rdx],al
   14000f095:	add    BYTE PTR [rax],dl
   14000f097:	add    BYTE PTR [rax],dl
   14000f099:	add    BYTE PTR [rax],dl
   14000f09b:	add    BYTE PTR [rax],dl
   14000f09d:	add    BYTE PTR [rax],ah
	...
   14000f19f:	add    BYTE PTR [rax],al
   14000f1a1:	add    BYTE PTR [rax],ah
   14000f1a3:	add    BYTE PTR [rax],ah
   14000f1a5:	add    BYTE PTR [rax],ah
   14000f1a7:	add    BYTE PTR [rax],ah
   14000f1a9:	add    BYTE PTR [rax],ah
   14000f1ab:	add    BYTE PTR [rax],ah
   14000f1ad:	add    BYTE PTR [rax],ah
   14000f1af:	add    BYTE PTR [rax],ah
   14000f1b1:	add    BYTE PTR [rax],ah
   14000f1b3:	add    BYTE PTR [rax+0x0],ch
   14000f1b6:	sub    BYTE PTR [rax],al
   14000f1b8:	sub    BYTE PTR [rax],al
   14000f1ba:	sub    BYTE PTR [rax],al
   14000f1bc:	sub    BYTE PTR [rax],al
   14000f1be:	and    BYTE PTR [rax],al
   14000f1c0:	and    BYTE PTR [rax],al
   14000f1c2:	and    BYTE PTR [rax],al
   14000f1c4:	and    BYTE PTR [rax],al
   14000f1c6:	and    BYTE PTR [rax],al
   14000f1c8:	and    BYTE PTR [rax],al
   14000f1ca:	and    BYTE PTR [rax],al
   14000f1cc:	and    BYTE PTR [rax],al
   14000f1ce:	and    BYTE PTR [rax],al
   14000f1d0:	and    BYTE PTR [rax],al
   14000f1d2:	and    BYTE PTR [rax],al
   14000f1d4:	and    BYTE PTR [rax],al
   14000f1d6:	and    BYTE PTR [rax],al
   14000f1d8:	and    BYTE PTR [rax],al
   14000f1da:	and    BYTE PTR [rax],al
   14000f1dc:	and    BYTE PTR [rax],al
   14000f1de:	and    BYTE PTR [rax],al
   14000f1e0:	and    BYTE PTR [rax],al
   14000f1e2:	rex.W add BYTE PTR [rax],dl
   14000f1e5:	add    BYTE PTR [rax],dl
   14000f1e7:	add    BYTE PTR [rax],dl
   14000f1e9:	add    BYTE PTR [rax],dl
   14000f1eb:	add    BYTE PTR [rax],dl
   14000f1ed:	add    BYTE PTR [rax],dl
   14000f1ef:	add    BYTE PTR [rax],dl
   14000f1f1:	add    BYTE PTR [rax],dl
   14000f1f3:	add    BYTE PTR [rax],dl
   14000f1f5:	add    BYTE PTR [rax],dl
   14000f1f7:	add    BYTE PTR [rax],dl
   14000f1f9:	add    BYTE PTR [rax],dl
   14000f1fb:	add    BYTE PTR [rax],dl
   14000f1fd:	add    BYTE PTR [rax],dl
   14000f1ff:	add    BYTE PTR [rax],dl
   14000f201:	add    BYTE PTR [rax+rax*1+0x840084],al
   14000f208:	test   BYTE PTR [rax],al
   14000f20a:	test   BYTE PTR [rax],al
   14000f20c:	test   BYTE PTR [rax],al
   14000f20e:	test   BYTE PTR [rax],al
   14000f210:	test   BYTE PTR [rax],al
   14000f212:	test   BYTE PTR [rax],al
   14000f214:	test   BYTE PTR [rax],al
   14000f216:	adc    BYTE PTR [rax],al
   14000f218:	adc    BYTE PTR [rax],al
   14000f21a:	adc    BYTE PTR [rax],al
   14000f21c:	adc    BYTE PTR [rax],al
   14000f21e:	adc    BYTE PTR [rax],al
   14000f220:	adc    BYTE PTR [rax],al
   14000f222:	adc    BYTE PTR [rax],al
   14000f224:	add    DWORD PTR [rcx],0x1810181
   14000f22a:	add    DWORD PTR [rcx],0x1810181
   14000f230:	add    DWORD PTR [rcx],eax
   14000f232:	add    DWORD PTR [rcx],eax
   14000f234:	add    DWORD PTR [rcx],eax
   14000f236:	add    DWORD PTR [rcx],eax
   14000f238:	add    DWORD PTR [rcx],eax
   14000f23a:	add    DWORD PTR [rcx],eax
   14000f23c:	add    DWORD PTR [rcx],eax
   14000f23e:	add    DWORD PTR [rcx],eax
   14000f240:	add    DWORD PTR [rcx],eax
   14000f242:	add    DWORD PTR [rcx],eax
   14000f244:	add    DWORD PTR [rcx],eax
   14000f246:	add    DWORD PTR [rcx],eax
   14000f248:	add    DWORD PTR [rcx],eax
   14000f24a:	add    DWORD PTR [rcx],eax
   14000f24c:	add    DWORD PTR [rcx],eax
   14000f24e:	add    DWORD PTR [rcx],eax
   14000f250:	add    DWORD PTR [rcx],eax
   14000f252:	add    DWORD PTR [rcx],eax
   14000f254:	add    DWORD PTR [rcx],eax
   14000f256:	add    DWORD PTR [rcx],eax
   14000f258:	adc    BYTE PTR [rax],al
   14000f25a:	adc    BYTE PTR [rax],al
   14000f25c:	adc    BYTE PTR [rax],al
   14000f25e:	adc    BYTE PTR [rax],al
   14000f260:	adc    BYTE PTR [rax],al
   14000f262:	adc    BYTE PTR [rax],al
   14000f264:	(bad)  
   14000f265:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14000f26b:	add    DWORD PTR [rdx+0x2018201],eax
   14000f271:	add    DWORD PTR [rdx],eax
   14000f273:	add    DWORD PTR [rdx],eax
   14000f275:	add    DWORD PTR [rdx],eax
   14000f277:	add    DWORD PTR [rdx],eax
   14000f279:	add    DWORD PTR [rdx],eax
   14000f27b:	add    DWORD PTR [rdx],eax
   14000f27d:	add    DWORD PTR [rdx],eax
   14000f27f:	add    DWORD PTR [rdx],eax
   14000f281:	add    DWORD PTR [rdx],eax
   14000f283:	add    DWORD PTR [rdx],eax
   14000f285:	add    DWORD PTR [rdx],eax
   14000f287:	add    DWORD PTR [rdx],eax
   14000f289:	add    DWORD PTR [rdx],eax
   14000f28b:	add    DWORD PTR [rdx],eax
   14000f28d:	add    DWORD PTR [rdx],eax
   14000f28f:	add    DWORD PTR [rdx],eax
   14000f291:	add    DWORD PTR [rdx],eax
   14000f293:	add    DWORD PTR [rdx],eax
   14000f295:	add    DWORD PTR [rdx],eax
   14000f297:	add    DWORD PTR [rax],edx
   14000f299:	add    BYTE PTR [rax],dl
   14000f29b:	add    BYTE PTR [rax],dl
   14000f29d:	add    BYTE PTR [rax],dl
   14000f29f:	add    BYTE PTR [rax],ah
   14000f2a1:	add    BYTE PTR [rax],ah
   14000f2a3:	add    BYTE PTR [rax],ah
   14000f2a5:	add    BYTE PTR [rax],ah
   14000f2a7:	add    BYTE PTR [rax],ah
   14000f2a9:	add    BYTE PTR [rax],ah
   14000f2ab:	add    BYTE PTR [rax],ah
   14000f2ad:	add    BYTE PTR [rax],ah
   14000f2af:	add    BYTE PTR [rax],ah
   14000f2b1:	add    BYTE PTR [rax],ah
   14000f2b3:	add    BYTE PTR [rax],ah
   14000f2b5:	add    BYTE PTR [rax],ah
   14000f2b7:	add    BYTE PTR [rax],ah
   14000f2b9:	add    BYTE PTR [rax],ah
   14000f2bb:	add    BYTE PTR [rax],ah
   14000f2bd:	add    BYTE PTR [rax],ah
   14000f2bf:	add    BYTE PTR [rax],ah
   14000f2c1:	add    BYTE PTR [rax],ah
   14000f2c3:	add    BYTE PTR [rax],ah
   14000f2c5:	add    BYTE PTR [rax],ah
   14000f2c7:	add    BYTE PTR [rax],ah
   14000f2c9:	add    BYTE PTR [rax],ah
   14000f2cb:	add    BYTE PTR [rax],ah
   14000f2cd:	add    BYTE PTR [rax],ah
   14000f2cf:	add    BYTE PTR [rax],ah
   14000f2d1:	add    BYTE PTR [rax],ah
   14000f2d3:	add    BYTE PTR [rax],ah
   14000f2d5:	add    BYTE PTR [rax],ah
   14000f2d7:	add    BYTE PTR [rax],ah
   14000f2d9:	add    BYTE PTR [rax],ah
   14000f2db:	add    BYTE PTR [rax],ah
   14000f2dd:	add    BYTE PTR [rax],ah
   14000f2df:	add    BYTE PTR [rax],ah
   14000f2e1:	add    BYTE PTR [rax+0x0],cl
   14000f2e4:	adc    BYTE PTR [rax],al
   14000f2e6:	adc    BYTE PTR [rax],al
   14000f2e8:	adc    BYTE PTR [rax],al
   14000f2ea:	adc    BYTE PTR [rax],al
   14000f2ec:	adc    BYTE PTR [rax],al
   14000f2ee:	adc    BYTE PTR [rax],al
   14000f2f0:	adc    BYTE PTR [rax],al
   14000f2f2:	adc    BYTE PTR [rax],al
   14000f2f4:	adc    BYTE PTR [rax],al
   14000f2f6:	adc    BYTE PTR [rax],al
   14000f2f8:	adc    BYTE PTR [rax],al
   14000f2fa:	adc    BYTE PTR [rax],al
   14000f2fc:	adc    BYTE PTR [rax],al
   14000f2fe:	adc    BYTE PTR [rax],al
   14000f300:	adc    BYTE PTR [rax],al
   14000f302:	adc    BYTE PTR [rax],al
   14000f304:	adc    BYTE PTR [rax],al
   14000f306:	adc    al,0x0
   14000f308:	adc    al,0x0
   14000f30a:	adc    BYTE PTR [rax],al
   14000f30c:	adc    BYTE PTR [rax],al
   14000f30e:	adc    BYTE PTR [rax],al
   14000f310:	adc    BYTE PTR [rax],al
   14000f312:	adc    BYTE PTR [rax],al
   14000f314:	adc    al,0x0
   14000f316:	adc    BYTE PTR [rax],al
   14000f318:	adc    BYTE PTR [rax],al
   14000f31a:	adc    BYTE PTR [rax],al
   14000f31c:	adc    BYTE PTR [rax],al
   14000f31e:	adc    BYTE PTR [rax],al
   14000f320:	adc    BYTE PTR [rax],al
   14000f322:	add    DWORD PTR [rcx],eax
   14000f324:	add    DWORD PTR [rcx],eax
   14000f326:	add    DWORD PTR [rcx],eax
   14000f328:	add    DWORD PTR [rcx],eax
   14000f32a:	add    DWORD PTR [rcx],eax
   14000f32c:	add    DWORD PTR [rcx],eax
   14000f32e:	add    DWORD PTR [rcx],eax
   14000f330:	add    DWORD PTR [rcx],eax
   14000f332:	add    DWORD PTR [rcx],eax
   14000f334:	add    DWORD PTR [rcx],eax
   14000f336:	add    DWORD PTR [rcx],eax
   14000f338:	add    DWORD PTR [rcx],eax
   14000f33a:	add    DWORD PTR [rcx],eax
   14000f33c:	add    DWORD PTR [rcx],eax
   14000f33e:	add    DWORD PTR [rcx],eax
   14000f340:	add    DWORD PTR [rcx],eax
   14000f342:	add    DWORD PTR [rcx],eax
   14000f344:	add    DWORD PTR [rcx],eax
   14000f346:	add    DWORD PTR [rcx],eax
   14000f348:	add    DWORD PTR [rcx],eax
   14000f34a:	add    DWORD PTR [rcx],eax
   14000f34c:	add    DWORD PTR [rcx],eax
   14000f34e:	add    DWORD PTR [rcx],eax
   14000f350:	adc    BYTE PTR [rax],al
   14000f352:	add    DWORD PTR [rcx],eax
   14000f354:	add    DWORD PTR [rcx],eax
   14000f356:	add    DWORD PTR [rcx],eax
   14000f358:	add    DWORD PTR [rcx],eax
   14000f35a:	add    DWORD PTR [rcx],eax
   14000f35c:	add    DWORD PTR [rcx],eax
   14000f35e:	add    DWORD PTR [rcx],eax
   14000f360:	add    al,BYTE PTR [rcx]
   14000f362:	add    al,BYTE PTR [rcx]
   14000f364:	add    al,BYTE PTR [rcx]
   14000f366:	add    al,BYTE PTR [rcx]
   14000f368:	add    al,BYTE PTR [rcx]
   14000f36a:	add    al,BYTE PTR [rcx]
   14000f36c:	add    al,BYTE PTR [rcx]
   14000f36e:	add    al,BYTE PTR [rcx]
   14000f370:	add    al,BYTE PTR [rcx]
   14000f372:	add    al,BYTE PTR [rcx]
   14000f374:	add    al,BYTE PTR [rcx]
   14000f376:	add    al,BYTE PTR [rcx]
   14000f378:	add    al,BYTE PTR [rcx]
   14000f37a:	add    al,BYTE PTR [rcx]
   14000f37c:	add    al,BYTE PTR [rcx]
   14000f37e:	add    al,BYTE PTR [rcx]
   14000f380:	add    al,BYTE PTR [rcx]
   14000f382:	add    al,BYTE PTR [rcx]
   14000f384:	add    al,BYTE PTR [rcx]
   14000f386:	add    al,BYTE PTR [rcx]
   14000f388:	add    al,BYTE PTR [rcx]
   14000f38a:	add    al,BYTE PTR [rcx]
   14000f38c:	add    al,BYTE PTR [rcx]
   14000f38e:	add    al,BYTE PTR [rcx]
   14000f390:	adc    BYTE PTR [rax],al
   14000f392:	add    al,BYTE PTR [rcx]
   14000f394:	add    al,BYTE PTR [rcx]
   14000f396:	add    al,BYTE PTR [rcx]
   14000f398:	add    al,BYTE PTR [rcx]
   14000f39a:	add    al,BYTE PTR [rcx]
   14000f39c:	add    al,BYTE PTR [rcx]
   14000f39e:	add    al,BYTE PTR [rcx]
   14000f3a0:	add    al,BYTE PTR [rcx]
   14000f3a2:	add    DWORD PTR [rcx],eax
	...
   14000f3b0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14000f3b7:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000f3bd:	lea    ecx,[rsi-0x6d6e6f71]
   14000f3c3:	xchg   ebx,eax
   14000f3c4:	xchg   esp,eax
   14000f3c5:	xchg   ebp,eax
   14000f3c6:	xchg   esi,eax
   14000f3c7:	xchg   edi,eax
   14000f3c8:	cwde   
   14000f3c9:	cdq    
   14000f3ca:	(bad)  
   14000f3cb:	fwait
   14000f3cc:	pushf  
   14000f3cd:	popf   
   14000f3ce:	sahf   
   14000f3cf:	lahf   
   14000f3d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f3d9:	test   eax,0xadacabaa
   14000f3de:	scas   al,BYTE PTR es:[rdi]
   14000f3df:	scas   eax,DWORD PTR es:[rdi]
   14000f3e0:	mov    al,0xb1
   14000f3e2:	mov    dl,0xb3
   14000f3e4:	mov    ah,0xb5
   14000f3e6:	mov    dh,0xb7
   14000f3e8:	mov    eax,0xbcbbbab9
   14000f3ed:	mov    ebp,0xc1c0bfbe
   14000f3f2:	ret    0xc4c3
   14000f3f5:	(bad)
   14000f3f8:	enter  0xcac9,0xcb
   14000f3fc:	int3   
   14000f3fd:	int    0xce
   14000f3ff:	iret   
   14000f400:	rcl    cl,1
   14000f402:	rcl    bl,cl
   14000f404:	(bad)  
   14000f405:	(bad)  
   14000f406:	(bad)  
   14000f407:	xlat   BYTE PTR ds:[rbx]
   14000f408:	fcomp  st(1)
   14000f40a:	fcmovu st,st(3)
   14000f40c:	(bad)  
   14000f40e:	(bad)  
   14000f410:	loopne 0x14000f3f3
   14000f412:	loop   0x14000f3f7
   14000f414:	in     al,0xe5
   14000f416:	out    0xe7,al
   14000f418:	call   0x12cecdf06
   14000f41d:	in     eax,dx
   14000f41e:	out    dx,al
   14000f41f:	out    dx,eax
   14000f420:	lock icebp 
   14000f422:	repnz repz hlt 
   14000f425:	cmc    
   14000f426:	div    bh
   14000f428:	clc    
   14000f429:	stc    
   14000f42a:	cli    
   14000f42b:	sti    
   14000f42c:	cld    
   14000f42d:	std    
   14000f42e:	(bad)  
   14000f42f:	inc    DWORD PTR [rax]
   14000f431:	add    DWORD PTR [rdx],eax
   14000f433:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000f43a:	or     cl,BYTE PTR [rbx]
   14000f43c:	or     al,0xd
   14000f43e:	(bad)  
   14000f43f:	movups xmm2,XMMWORD PTR [rcx]
   14000f442:	adc    dl,BYTE PTR [rbx]
   14000f444:	adc    al,0x15
   14000f446:	(bad)  
   14000f447:	(bad)  
   14000f448:	sbb    BYTE PTR [rcx],bl
   14000f44a:	sbb    bl,BYTE PTR [rbx]
   14000f44c:	sbb    al,0x1d
   14000f44e:	(bad)  
   14000f44f:	(bad)  
   14000f450:	and    BYTE PTR [rcx],ah
   14000f452:	and    ah,BYTE PTR [rbx]
   14000f454:	and    al,0x25
   14000f456:	es (bad) 
   14000f458:	sub    BYTE PTR [rcx],ch
   14000f45a:	sub    ch,BYTE PTR [rbx]
   14000f45c:	sub    al,0x2d
   14000f45e:	cs (bad) 
   14000f460:	xor    BYTE PTR [rcx],dh
   14000f462:	xor    dh,BYTE PTR [rbx]
   14000f464:	xor    al,0x35
   14000f466:	ss (bad) 
   14000f468:	cmp    BYTE PTR [rcx],bh
   14000f46a:	cmp    bh,BYTE PTR [rbx]
   14000f46c:	cmp    al,0x3d
   14000f46e:	ds (bad) 
   14000f470:	rex (bad) 
   14000f472:	(bad)
   14000f477:	addr32 push 0x6c6b6a69
   14000f47d:	ins    DWORD PTR es:[rdi],dx
   14000f47e:	outs   dx,BYTE PTR ds:[rsi]
   14000f47f:	outs   dx,DWORD PTR ds:[rsi]
   14000f480:	jo     0x14000f4f3
   14000f482:	jb     0x14000f4f7
   14000f484:	je     0x14000f4fb
   14000f486:	jbe    0x14000f4ff
   14000f488:	js     0x14000f503
   14000f48a:	jp     0x14000f4e7
   14000f48c:	pop    rsp
   14000f48d:	pop    rbp
   14000f48e:	pop    rsi
   14000f48f:	pop    rdi
   14000f490:	(bad)  
   14000f491:	(bad)  
   14000f492:	(bad)
   14000f497:	addr32 push 0x6c6b6a69
   14000f49d:	ins    DWORD PTR es:[rdi],dx
   14000f49e:	outs   dx,BYTE PTR ds:[rsi]
   14000f49f:	outs   dx,DWORD PTR ds:[rsi]
   14000f4a0:	jo     0x14000f513
   14000f4a2:	jb     0x14000f517
   14000f4a4:	je     0x14000f51b
   14000f4a6:	jbe    0x14000f51f
   14000f4a8:	js     0x14000f523
   14000f4aa:	jp     0x14000f527
   14000f4ac:	jl     0x14000f52b
   14000f4ae:	jle    0x14000f52f
   14000f4b0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14000f4b7:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000f4bd:	lea    ecx,[rsi-0x6d6e6f71]
   14000f4c3:	xchg   ebx,eax
   14000f4c4:	xchg   esp,eax
   14000f4c5:	xchg   ebp,eax
   14000f4c6:	xchg   esi,eax
   14000f4c7:	xchg   edi,eax
   14000f4c8:	cwde   
   14000f4c9:	cdq    
   14000f4ca:	(bad)  
   14000f4cb:	fwait
   14000f4cc:	pushf  
   14000f4cd:	popf   
   14000f4ce:	sahf   
   14000f4cf:	lahf   
   14000f4d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f4d9:	test   eax,0xadacabaa
   14000f4de:	scas   al,BYTE PTR es:[rdi]
   14000f4df:	scas   eax,DWORD PTR es:[rdi]
   14000f4e0:	mov    al,0xb1
   14000f4e2:	mov    dl,0xb3
   14000f4e4:	mov    ah,0xb5
   14000f4e6:	mov    dh,0xb7
   14000f4e8:	mov    eax,0xbcbbbab9
   14000f4ed:	mov    ebp,0xc1c0bfbe
   14000f4f2:	ret    0xc4c3
   14000f4f5:	(bad)
   14000f4f8:	enter  0xcac9,0xcb
   14000f4fc:	int3   
   14000f4fd:	int    0xce
   14000f4ff:	iret   
   14000f500:	rcl    cl,1
   14000f502:	rcl    bl,cl
   14000f504:	(bad)  
   14000f505:	(bad)  
   14000f506:	(bad)  
   14000f507:	xlat   BYTE PTR ds:[rbx]
   14000f508:	fcomp  st(1)
   14000f50a:	fcmovu st,st(3)
   14000f50c:	(bad)  
   14000f50e:	(bad)  
   14000f510:	loopne 0x14000f4f3
   14000f512:	loop   0x14000f4f7
   14000f514:	in     al,0xe5
   14000f516:	out    0xe7,al
   14000f518:	call   0x12cece006
   14000f51d:	in     eax,dx
   14000f51e:	out    dx,al
   14000f51f:	out    dx,eax
   14000f520:	lock icebp 
   14000f522:	repnz repz hlt 
   14000f525:	cmc    
   14000f526:	div    bh
   14000f528:	clc    
   14000f529:	stc    
   14000f52a:	cli    
   14000f52b:	sti    
   14000f52c:	cld    
   14000f52d:	std    
   14000f52e:	(bad)  
   14000f52f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14000f535:	test   DWORD PTR [rsi-0x75767779],eax
   14000f53b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14000f542:	xchg   edx,eax
   14000f543:	xchg   ebx,eax
   14000f544:	xchg   esp,eax
   14000f545:	xchg   ebp,eax
   14000f546:	xchg   esi,eax
   14000f547:	xchg   edi,eax
   14000f548:	cwde   
   14000f549:	cdq    
   14000f54a:	(bad)  
   14000f54b:	fwait
   14000f54c:	pushf  
   14000f54d:	popf   
   14000f54e:	sahf   
   14000f54f:	lahf   
   14000f550:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f559:	test   eax,0xadacabaa
   14000f55e:	scas   al,BYTE PTR es:[rdi]
   14000f55f:	scas   eax,DWORD PTR es:[rdi]
   14000f560:	mov    al,0xb1
   14000f562:	mov    dl,0xb3
   14000f564:	mov    ah,0xb5
   14000f566:	mov    dh,0xb7
   14000f568:	mov    eax,0xbcbbbab9
   14000f56d:	mov    ebp,0xc1c0bfbe
   14000f572:	ret    0xc4c3
   14000f575:	(bad)
   14000f578:	enter  0xcac9,0xcb
   14000f57c:	int3   
   14000f57d:	int    0xce
   14000f57f:	iret   
   14000f580:	rcl    cl,1
   14000f582:	rcl    bl,cl
   14000f584:	(bad)  
   14000f585:	(bad)  
   14000f586:	(bad)  
   14000f587:	xlat   BYTE PTR ds:[rbx]
   14000f588:	fcomp  st(1)
   14000f58a:	fcmovu st,st(3)
   14000f58c:	(bad)  
   14000f58e:	(bad)  
   14000f590:	loopne 0x14000f573
   14000f592:	loop   0x14000f577
   14000f594:	in     al,0xe5
   14000f596:	out    0xe7,al
   14000f598:	call   0x12cece086
   14000f59d:	in     eax,dx
   14000f59e:	out    dx,al
   14000f59f:	out    dx,eax
   14000f5a0:	lock icebp 
   14000f5a2:	repnz repz hlt 
   14000f5a5:	cmc    
   14000f5a6:	div    bh
   14000f5a8:	clc    
   14000f5a9:	stc    
   14000f5aa:	cli    
   14000f5ab:	sti    
   14000f5ac:	cld    
   14000f5ad:	std    
   14000f5ae:	(bad)  
   14000f5af:	inc    DWORD PTR [rax]
   14000f5b1:	add    DWORD PTR [rdx],eax
   14000f5b3:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000f5ba:	or     cl,BYTE PTR [rbx]
   14000f5bc:	or     al,0xd
   14000f5be:	(bad)  
   14000f5bf:	movups xmm2,XMMWORD PTR [rcx]
   14000f5c2:	adc    dl,BYTE PTR [rbx]
   14000f5c4:	adc    al,0x15
   14000f5c6:	(bad)  
   14000f5c7:	(bad)  
   14000f5c8:	sbb    BYTE PTR [rcx],bl
   14000f5ca:	sbb    bl,BYTE PTR [rbx]
   14000f5cc:	sbb    al,0x1d
   14000f5ce:	(bad)  
   14000f5cf:	(bad)  
   14000f5d0:	and    BYTE PTR [rcx],ah
   14000f5d2:	and    ah,BYTE PTR [rbx]
   14000f5d4:	and    al,0x25
   14000f5d6:	es (bad) 
   14000f5d8:	sub    BYTE PTR [rcx],ch
   14000f5da:	sub    ch,BYTE PTR [rbx]
   14000f5dc:	sub    al,0x2d
   14000f5de:	cs (bad) 
   14000f5e0:	xor    BYTE PTR [rcx],dh
   14000f5e2:	xor    dh,BYTE PTR [rbx]
   14000f5e4:	xor    al,0x35
   14000f5e6:	ss (bad) 
   14000f5e8:	cmp    BYTE PTR [rcx],bh
   14000f5ea:	cmp    bh,BYTE PTR [rbx]
   14000f5ec:	cmp    al,0x3d
   14000f5ee:	ds (bad) 
   14000f5f0:	rex
   14000f5f1:	rex.B
   14000f5f2:	rex.X
   14000f5f3:	rex.XB
   14000f5f4:	rex.R
   14000f5f5:	rex.RB
   14000f5f6:	rex.RX
   14000f5f7:	rex.RXB
   14000f5f8:	rex.W
   14000f5f9:	rex.WB
   14000f5fa:	rex.WX
   14000f5fb:	rex.WXB
   14000f5fc:	rex.WR
   14000f5fd:	rex.WRB
   14000f5fe:	rex.WRX
   14000f5ff:	rex.WRXB push r8
   14000f601:	push   rcx
   14000f602:	push   rdx
   14000f603:	push   rbx
   14000f604:	push   rsp
   14000f605:	push   rbp
   14000f606:	push   rsi
   14000f607:	push   rdi
   14000f608:	pop    rax
   14000f609:	pop    rcx
   14000f60a:	pop    rdx
   14000f60b:	pop    rbx
   14000f60c:	pop    rsp
   14000f60d:	pop    rbp
   14000f60e:	pop    rsi
   14000f60f:	pop    rdi
   14000f610:	(bad)  
   14000f611:	rex.B
   14000f612:	rex.X
   14000f613:	rex.XB
   14000f614:	rex.R
   14000f615:	rex.RB
   14000f616:	rex.RX
   14000f617:	rex.RXB
   14000f618:	rex.W
   14000f619:	rex.WB
   14000f61a:	rex.WX
   14000f61b:	rex.WXB
   14000f61c:	rex.WR
   14000f61d:	rex.WRB
   14000f61e:	rex.WRX
   14000f61f:	rex.WRXB push r8
   14000f621:	push   rcx
   14000f622:	push   rdx
   14000f623:	push   rbx
   14000f624:	push   rsp
   14000f625:	push   rbp
   14000f626:	push   rsi
   14000f627:	push   rdi
   14000f628:	pop    rax
   14000f629:	pop    rcx
   14000f62a:	pop    rdx
   14000f62b:	jnp    0x14000f6a9
   14000f62d:	jge    0x14000f6ad
   14000f62f:	jg     0x14000f5b1
   14000f631:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14000f63b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14000f642:	xchg   edx,eax
   14000f643:	xchg   ebx,eax
   14000f644:	xchg   esp,eax
   14000f645:	xchg   ebp,eax
   14000f646:	xchg   esi,eax
   14000f647:	xchg   edi,eax
   14000f648:	cwde   
   14000f649:	cdq    
   14000f64a:	(bad)  
   14000f64b:	fwait
   14000f64c:	pushf  
   14000f64d:	popf   
   14000f64e:	sahf   
   14000f64f:	lahf   
   14000f650:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f659:	test   eax,0xadacabaa
   14000f65e:	scas   al,BYTE PTR es:[rdi]
   14000f65f:	scas   eax,DWORD PTR es:[rdi]
   14000f660:	mov    al,0xb1
   14000f662:	mov    dl,0xb3
   14000f664:	mov    ah,0xb5
   14000f666:	mov    dh,0xb7
   14000f668:	mov    eax,0xbcbbbab9
   14000f66d:	mov    ebp,0xc1c0bfbe
   14000f672:	ret    0xc4c3
   14000f675:	(bad)
   14000f678:	enter  0xcac9,0xcb
   14000f67c:	int3   
   14000f67d:	int    0xce
   14000f67f:	iret   
   14000f680:	rcl    cl,1
   14000f682:	rcl    bl,cl
   14000f684:	(bad)  
   14000f685:	(bad)  
   14000f686:	(bad)  
   14000f687:	xlat   BYTE PTR ds:[rbx]
   14000f688:	fcomp  st(1)
   14000f68a:	fcmovu st,st(3)
   14000f68c:	(bad)  
   14000f68e:	(bad)  
   14000f690:	loopne 0x14000f673
   14000f692:	loop   0x14000f677
   14000f694:	in     al,0xe5
   14000f696:	out    0xe7,al
   14000f698:	call   0x12cece186
   14000f69d:	in     eax,dx
   14000f69e:	out    dx,al
   14000f69f:	out    dx,eax
   14000f6a0:	lock icebp 
   14000f6a2:	repnz repz hlt 
   14000f6a5:	cmc    
   14000f6a6:	div    bh
   14000f6a8:	clc    
   14000f6a9:	stc    
   14000f6aa:	cli    
   14000f6ab:	sti    
   14000f6ac:	cld    
   14000f6ad:	std    
   14000f6ae:	(bad)  
   14000f6af:	inc    DWORD PTR [rip+0xbc00000]        # 0x14bc0f6b5
	...
   14000f6bd:	add    BYTE PTR [rax],al
   14000f6bf:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c0f6c5
	...
   14000f6cd:	add    BYTE PTR [rax],al
   14000f6cf:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14000f6dd:	add    BYTE PTR [rax],al
   14000f6df:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14000f6ed:	add    BYTE PTR [rax],al
   14000f6ef:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14000f6fd:	add    BYTE PTR [rax],al
   14000f6ff:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14000f70d:	add    BYTE PTR [rax],al
   14000f70f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14000f74d:	add    BYTE PTR [rax],al
   14000f74f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	mov    ch,0x2
   14000f762:	add    al,al
   14000f764:	or     BYTE PTR [rax],al
	...
   14000f76e:	add    BYTE PTR [rax],al
   14000f770:	add    eax,DWORD PTR [rax]
   14000f772:	add    BYTE PTR [rax],al
   14000f774:	or     DWORD PTR [rax],eax
   14000f776:	add    BYTE PTR [rax],al
   14000f778:	rol    BYTE PTR [rax],0x0
   14000f77b:	add    BYTE PTR [rax+rax*1],cl
	...
   14000f786:	add    BYTE PTR [rax],al
   14000f788:	rex.W add BYTE PTR [rax+0x0],cl
   14000f78c:	cmp    al,BYTE PTR [rax]
   14000f78e:	ins    DWORD PTR es:[rdi],dx
   14000f78f:	add    BYTE PTR [rbp+0x0],ch
   14000f792:	cmp    al,BYTE PTR [rax]
   14000f794:	jae    0x14000f796
   14000f796:	jae    0x14000f798
	...
   14000f7a0:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14000f7a5:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14000f7a9:	add    BYTE PTR [rax],ah
   14000f7ab:	add    BYTE PTR [rbp+0x0],cl
   14000f7ae:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f7b2:	rex.WRB add BYTE PTR [r8],r12b
   14000f7b5:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f7b9:	add    BYTE PTR [rax+rax*1],ch
   14000f7bc:	and    BYTE PTR [rax],al
   14000f7be:	jns    0x14000f7c0
   14000f7c0:	jns    0x14000f7c2
   14000f7c2:	jns    0x14000f7c4
   14000f7c4:	jns    0x14000f7c6
   14000f7c6:	add    BYTE PTR [rax],al
   14000f7c8:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f7cc:	(bad)  
   14000f7cd:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f7d1:	add    BYTE PTR [rdi],ch
   14000f7d3:	add    BYTE PTR [rcx+0x0],bh
   14000f7d6:	jns    0x14000f7d8
   14000f7d8:	add    BYTE PTR [rax],al
   14000f7da:	add    BYTE PTR [rax],al
   14000f7dc:	push   rax
   14000f7dd:	add    BYTE PTR [rbp+0x0],cl
   14000f7e0:	add    BYTE PTR [rax],al
   14000f7e2:	add    BYTE PTR [rax],al
   14000f7e4:	add    BYTE PTR [r13+0x0],cl
	...
   14000f7f0:	add    BYTE PTR [rbp+0x0],r12b
   14000f7f4:	movsxd eax,DWORD PTR [rax]
   14000f7f6:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f7fa:	(bad)  
   14000f7fb:	add    BYTE PTR [rbp+0x0],ah
   14000f7fe:	jb     0x14000f800
	...
   14000f808:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000f80c:	jbe    0x14000f80e
   14000f80e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f812:	(bad)  
   14000f813:	add    BYTE PTR [rbp+0x0],ah
   14000f816:	jb     0x14000f818
	...
   14000f820:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000f824:	je     0x14000f826
   14000f826:	outs   dx,DWORD PTR ds:[rsi]
   14000f827:	add    BYTE PTR [rdx+0x0],ah
   14000f82a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	push   rbx
   14000f831:	add    BYTE PTR [rbp+0x0],ah
   14000f834:	jo     0x14000f836
   14000f836:	je     0x14000f838
   14000f838:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f83c:	(bad)  
   14000f83d:	add    BYTE PTR [rbp+0x0],ah
   14000f840:	jb     0x14000f842
   14000f842:	add    BYTE PTR [rax],al
   14000f844:	add    BYTE PTR [rax],al
   14000f846:	add    BYTE PTR [rax],al
   14000f848:	add    BYTE PTR [r13+0x0],sil
   14000f84c:	add    BYTE PTR [ebp+0x0],dh
   14000f850:	jae    0x14000f852
   14000f852:	je     0x14000f854
   14000f854:	add    BYTE PTR [rax],al
   14000f856:	add    BYTE PTR [rax],al
   14000f858:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f85c:	ins    BYTE PTR es:[rdi],dx
   14000f85d:	add    BYTE PTR [rcx+0x0],bh
	...
   14000f868:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f86c:	outs   dx,BYTE PTR ds:[rsi]
   14000f86d:	add    BYTE PTR [rbp+0x0],ah
	...
   14000f878:	add    BYTE PTR [r8+0x0],sil
   14000f87c:	jb     0x14000f87e
   14000f87e:	imul   eax,DWORD PTR [rax],0x6c
   14000f884:	add    BYTE PTR [rax],al
   14000f886:	add    BYTE PTR [rax],al
   14000f888:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f88c:	jb     0x14000f88e
   14000f88e:	movsxd eax,DWORD PTR [rax]
   14000f890:	push   0x0
   14000f895:	add    BYTE PTR [rax],al
   14000f897:	add    BYTE PTR [rsi+0x0],al
   14000f89a:	add    BYTE PTR gs:[rdx+0x0],ah
   14000f89e:	jb     0x14000f8a0
   14000f8a0:	jne    0x14000f8a2
   14000f8a2:	(bad)  
   14000f8a3:	add    BYTE PTR [rdx+0x0],dh
   14000f8a6:	jns    0x14000f8a8
	...
   14000f8b0:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000f8b4:	outs   dx,BYTE PTR ds:[rsi]
   14000f8b5:	add    BYTE PTR [rbp+0x0],dh
   14000f8b8:	(bad)  
   14000f8b9:	add    BYTE PTR [rdx+0x0],dh
   14000f8bc:	jns    0x14000f8be
   14000f8be:	add    BYTE PTR [rax],al
   14000f8c0:	add    BYTE PTR [rbp+0x0],r12b
   14000f8c4:	movsxd eax,DWORD PTR [rax]
   14000f8c6:	add    BYTE PTR [rax],al
   14000f8c8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000f8cc:	jbe    0x14000f8ce
   14000f8ce:	add    BYTE PTR [rax],al
   14000f8d0:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000f8d4:	je     0x14000f8d6
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	push   rbx
   14000f8d9:	add    BYTE PTR [rbp+0x0],ah
   14000f8dc:	jo     0x14000f8de
   14000f8de:	add    BYTE PTR [rax],al
   14000f8e0:	add    BYTE PTR [r13+0x0],sil
   14000f8e4:	add    BYTE PTR [eax],al
   14000f8e7:	add    BYTE PTR [rdx+0x0],cl
   14000f8ea:	jne    0x14000f8ec
   14000f8ec:	ins    BYTE PTR es:[rdi],dx
   14000f8ed:	add    BYTE PTR [rax],al
   14000f8ef:	add    BYTE PTR [rdx+0x0],cl
   14000f8f2:	jne    0x14000f8f4
   14000f8f4:	outs   dx,BYTE PTR ds:[rsi]
   14000f8f5:	add    BYTE PTR [rax],al
   14000f8f7:	add    BYTE PTR [rbp+0x0],cl
   14000f8fa:	(bad)  
   14000f8fb:	add    BYTE PTR [rcx+0x0],bh
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	add    BYTE PTR [r8+0x0],sil
   14000f904:	jb     0x14000f906
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f90c:	jb     0x14000f90e
   14000f90e:	add    BYTE PTR [rax],al
   14000f910:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14000f914:	(bad)  
   14000f915:	add    BYTE PTR [rax],al
   14000f917:	add    BYTE PTR [rdx+0x0],cl
   14000f91a:	(bad)  
   14000f91b:	add    BYTE PTR [rsi+0x0],ch
   14000f91e:	add    BYTE PTR [rax],al
   14000f920:	push   rbx
   14000f921:	add    BYTE PTR [rcx+0x0],ah
   14000f924:	je     0x14000f926
   14000f926:	jne    0x14000f928
   14000f928:	jb     0x14000f92a
   14000f92a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f92e:	jns    0x14000f930
	...
   14000f938:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000f93c:	imul   eax,DWORD PTR [rax],0x610064
   14000f942:	jns    0x14000f944
   14000f944:	add    BYTE PTR [rax],al
   14000f946:	add    BYTE PTR [rax],al
   14000f948:	push   rsp
   14000f949:	add    BYTE PTR [rax+0x0],ch
   14000f94c:	jne    0x14000f94e
   14000f94e:	jb     0x14000f950
   14000f950:	jae    0x14000f952
   14000f952:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f956:	jns    0x14000f958
	...
   14000f960:	push   rdi
   14000f961:	add    BYTE PTR [rbp+0x0],ah
   14000f964:	add    BYTE PTR fs:[rsi+0x0],ch
   14000f968:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f96c:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f970:	jns    0x14000f972
   14000f972:	add    BYTE PTR [rax],al
   14000f974:	add    BYTE PTR [rax],al
   14000f976:	add    BYTE PTR [rax],al
   14000f978:	push   rsp
   14000f979:	add    BYTE PTR [rbp+0x0],dh
   14000f97c:	add    BYTE PTR gs:[rbx+0x0],dh
   14000f980:	add    BYTE PTR fs:[rcx+0x0],ah
   14000f984:	jns    0x14000f986
   14000f986:	add    BYTE PTR [rax],al
   14000f988:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000f98c:	outs   dx,BYTE PTR ds:[rsi]
   14000f98d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000f991:	add    BYTE PTR [rcx+0x0],bh
   14000f994:	add    BYTE PTR [rax],al
   14000f996:	add    BYTE PTR [rax],al
   14000f998:	push   rbx
   14000f999:	add    BYTE PTR [rbp+0x0],dh
   14000f99c:	outs   dx,BYTE PTR ds:[rsi]
   14000f99d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000f9a1:	add    BYTE PTR [rcx+0x0],bh
   14000f9a4:	add    BYTE PTR [rax],al
   14000f9a6:	add    BYTE PTR [rax],al
   14000f9a8:	push   rbx
   14000f9a9:	add    BYTE PTR [rcx+0x0],ah
   14000f9ac:	je     0x14000f9ae
   14000f9ae:	add    BYTE PTR [rax],al
   14000f9b0:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000f9b4:	imul   eax,DWORD PTR [rax],0x540000
   14000f9ba:	push   0x7500
   14000f9bf:	add    BYTE PTR [rdi+0x0],dl
   14000f9c2:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000f9c7:	add    BYTE PTR [rax+rax*1+0x75],dl
   14000f9cb:	add    BYTE PTR [rbp+0x0],ah
   14000f9ce:	add    BYTE PTR [rax],al
   14000f9d0:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000f9d4:	outs   dx,BYTE PTR ds:[rsi]
   14000f9d5:	add    BYTE PTR [rax],al
   14000f9d7:	add    BYTE PTR [rbx+0x0],dl
   14000f9da:	jne    0x14000f9dc
   14000f9dc:	outs   dx,BYTE PTR ds:[rsi]
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    BYTE PTR [rax+0x48],cl
   14000f9e2:	cmp    ch,BYTE PTR [rbp+0x6d]
   14000f9e5:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14000f9f0:	fs fs fs fs sub al,0x20
   14000f9f6:	rex.WRB
   14000f9f7:	rex.WRB
   14000f9f8:	rex.WRB
   14000f9f9:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14000f9fe:	and    BYTE PTR [rcx+0x79],bh
   14000fa01:	jns    0x14000fa7c
   14000fa03:	add    BYTE PTR [rax],al
   14000fa05:	add    BYTE PTR [rax],al
   14000fa07:	add    BYTE PTR [rbp+0x4d],cl
   14000fa0a:	(bad)  
   14000fa0b:	fs fs (bad) 
   14000fa0e:	jns    0x14000fa89
   14000fa10:	add    BYTE PTR [rax],al
   14000fa12:	add    BYTE PTR [rax],al
   14000fa14:	push   rax
   14000fa15:	rex.WRB add BYTE PTR [r8],r8b
   14000fa18:	rex.B
   14000fa19:	rex.WRB add BYTE PTR [r8],r8b
   14000fa1c:	add    BYTE PTR [rax],al
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	rex.R
   14000fa21:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14000fa25:	(bad)  
   14000fa26:	gs jb  0x14000fa29
   14000fa29:	add    BYTE PTR [rax],al
   14000fa2b:	add    BYTE PTR [rax],al
   14000fa2d:	add    BYTE PTR [rax],al
   14000fa2f:	add    BYTE PTR [rsi+0x6f],cl
   14000fa32:	jbe    0x14000fa99
   14000fa34:	ins    DWORD PTR es:[rdi],dx
   14000fa35:	(bad)  
   14000fa36:	gs jb  0x14000fa39
   14000fa39:	add    BYTE PTR [rax],al
   14000fa3b:	add    BYTE PTR [rax],al
   14000fa3d:	add    BYTE PTR [rax],al
   14000fa3f:	add    BYTE PTR [rdi+0x63],cl
   14000fa42:	je     0x14000fab3
   14000fa44:	(bad)  
   14000fa45:	gs jb  0x14000fa48
   14000fa48:	push   rbx
   14000fa49:	gs jo  0x14000fac0
   14000fa4c:	gs ins DWORD PTR es:[rdi],dx
   14000fa4e:	(bad)  
   14000fa4f:	gs jb  0x14000fa52
   14000fa52:	add    BYTE PTR [rax],al
   14000fa54:	rex.B jne 0x14000fabe
   14000fa57:	jne    0x14000facc
   14000fa59:	je     0x14000fa5b
   14000fa5b:	add    BYTE PTR [rdx+0x75],cl
   14000fa5e:	ins    BYTE PTR es:[rdi],dx
   14000fa5f:	jns    0x14000fa61
   14000fa61:	add    BYTE PTR [rax],al
   14000fa63:	add    BYTE PTR [rdx+0x75],cl
   14000fa66:	outs   dx,BYTE PTR ds:[rsi]
   14000fa67:	add    BYTE PTR gs:[rax],al
   14000fa6a:	add    BYTE PTR [rax],al
   14000fa6c:	rex.B jo 0x14000fae1
   14000fa6f:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14000fa77:	movsxd ebp,DWORD PTR [rax+0x0]
   14000fa7a:	add    BYTE PTR [rax],al
   14000fa7c:	add    BYTE PTR [rax],al
   14000fa7e:	add    BYTE PTR [rax],al
   14000fa80:	rex.RX
   14000fa81:	(bad)
   14000fa87:	jns    0x14000fa89
   14000fa89:	add    BYTE PTR [rax],al
   14000fa8b:	add    BYTE PTR [rax],al
   14000fa8d:	add    BYTE PTR [rax],al
   14000fa8f:	add    BYTE PTR [rdx+0x61],cl
   14000fa92:	outs   dx,BYTE PTR ds:[rsi]
   14000fa93:	jne    0x14000faf6
   14000fa95:	jb     0x14000fb10
   14000fa97:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000fa9b:	add    BYTE PTR [rsi+0x6f],cl
   14000fa9e:	jbe    0x14000faa0
   14000faa0:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14000faa5:	gs jo  0x14000faa8
   14000faa8:	rex.B jne 0x14000fb12
   14000faab:	add    BYTE PTR [rdx+0x75],cl
   14000faae:	ins    BYTE PTR es:[rdi],dx
   14000faaf:	add    BYTE PTR [rdx+0x75],cl
   14000fab2:	outs   dx,BYTE PTR ds:[rsi]
   14000fab3:	add    BYTE PTR [rbp+0x61],cl
   14000fab6:	jns    0x14000fab8
   14000fab8:	rex.B jo 0x14000fb2d
   14000fabb:	add    BYTE PTR [rbp+0x61],cl
   14000fabe:	jb     0x14000fac0
   14000fac0:	rex.RX
   14000fac1:	gs (bad) 
   14000fac3:	add    BYTE PTR [rdx+0x61],cl
   14000fac6:	outs   dx,BYTE PTR ds:[rsi]
   14000fac7:	add    BYTE PTR [rbx+0x61],dl
   14000faca:	je     0x14000fb41
   14000facc:	jb     0x14000fb32
   14000face:	(bad)  
   14000facf:	jns    0x14000fad1
   14000fad1:	add    BYTE PTR [rax],al
   14000fad3:	add    BYTE PTR [rsi+0x72],al
   14000fad6:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	push   rsp
   14000fae1:	push   0x64737275
   14000fae6:	(bad)  
   14000fae7:	jns    0x14000fae9
   14000fae9:	add    BYTE PTR [rax],al
   14000faeb:	add    BYTE PTR [rax],al
   14000faed:	add    BYTE PTR [rax],al
   14000faef:	add    BYTE PTR [rdi+0x65],dl
   14000faf2:	outs   dx,BYTE PTR fs:[rsi]
   14000faf4:	gs jae 0x14000fb5b
   14000faf7:	(bad)  
   14000faf8:	jns    0x14000fafa
   14000fafa:	add    BYTE PTR [rax],al
   14000fafc:	add    BYTE PTR [rax],al
   14000fafe:	add    BYTE PTR [rax],al
   14000fb00:	push   rsp
   14000fb01:	jne    0x14000fb68
   14000fb03:	jae    0x14000fb69
   14000fb05:	(bad)  
   14000fb06:	jns    0x14000fb08
   14000fb08:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000fb0a:	outs   dx,BYTE PTR ds:[rsi]
   14000fb0b:	fs (bad) 
   14000fb0d:	jns    0x14000fb0f
   14000fb0f:	add    BYTE PTR [rbx+0x75],dl
   14000fb12:	outs   dx,BYTE PTR ds:[rsi]
   14000fb13:	fs (bad) 
   14000fb15:	jns    0x14000fb17
   14000fb17:	add    BYTE PTR [rbx+0x61],dl
   14000fb1a:	je     0x14000fb1c
   14000fb1c:	rex.RX jb 0x14000fb88
   14000fb1f:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14000fb23:	add    BYTE PTR [rdi+0x65],dl
   14000fb26:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   14000fb2b:	add    BYTE PTR [rbp+0x6f],cl
   14000fb2e:	outs   dx,BYTE PTR ds:[rsi]
   14000fb2f:	add    BYTE PTR [rbx+0x75],dl
   14000fb32:	outs   dx,BYTE PTR ds:[rsi]
   14000fb33:	add    BYTE PTR [rax],al
   14000fb35:	add    BYTE PTR [rax],al
   14000fb37:	add    BYTE PTR [rdi+0x65],al
   14000fb3a:	je     0x14000fb8c
   14000fb3c:	jb     0x14000fbad
   14000fb3e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fb41:	jae    0x14000fb9a
   14000fb43:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14000fb4a:	(bad)  
   14000fb4b:	je     0x14000fbb6
   14000fb4d:	outs   dx,DWORD PTR ds:[rsi]
   14000fb4e:	outs   dx,BYTE PTR ds:[rsi]
   14000fb4f:	add    BYTE PTR [rdi+0x65],al
   14000fb52:	je     0x14000fba9
   14000fb54:	jae    0x14000fbbb
   14000fb56:	jb     0x14000fba7
   14000fb58:	(bad)  
   14000fb59:	push   0x65
   14000fb5b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14000fb5f:	outs   dx,WORD PTR ds:[rsi]
   14000fb61:	jb     0x14000fbd0
   14000fb63:	(bad)  
   14000fb64:	je     0x14000fbcf
   14000fb66:	outs   dx,DWORD PTR ds:[rsi]
   14000fb67:	outs   dx,BYTE PTR ds:[rsi]
   14000fb68:	push   rdi
   14000fb69:	add    BYTE PTR [rax],al
   14000fb6b:	add    BYTE PTR [rax],al
   14000fb6d:	add    BYTE PTR [rax],al
   14000fb6f:	add    BYTE PTR [rdi+0x65],al
   14000fb72:	je     0x14000fbc0
   14000fb74:	(bad)  
   14000fb75:	jae    0x14000fbeb
   14000fb77:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000fb7c:	gs push rax
   14000fb7e:	outs   dx,DWORD PTR ds:[rsi]
   14000fb7f:	jo     0x14000fbf6
   14000fb81:	jo     0x14000fb83
   14000fb83:	add    BYTE PTR [rax],al
   14000fb85:	add    BYTE PTR [rax],al
   14000fb87:	add    BYTE PTR [rdi+0x65],al
   14000fb8a:	je     0x14000fbcd
   14000fb8c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000fb90:	gs push rdi
   14000fb92:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   14000fb99:	gs jae 0x14000fc0f
   14000fb9c:	(bad)  
   14000fb9d:	rex.X outs dx,DWORD PTR gs:[esi]
   14000fba1:	js     0x14000fbfa
   14000fba3:	add    BYTE PTR [rax],al
   14000fba5:	add    BYTE PTR [rax],al
   14000fba7:	add    BYTE PTR [rbp+0x0],dl
   14000fbaa:	push   rbx
   14000fbab:	add    BYTE PTR [rbp+0x0],al
   14000fbae:	push   rdx
   14000fbaf:	add    BYTE PTR [rbx],dh
   14000fbb1:	add    BYTE PTR [rdx],dh
   14000fbb3:	add    BYTE PTR [rsi],ch
   14000fbb5:	add    BYTE PTR [rax+rax*1+0x4c],al
   14000fbb9:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000fbbd:	add    BYTE PTR [rax],al
   14000fbbf:	add    BYTE PTR [rax],ch
   14000fbc1:	add    BYTE PTR [rsi+0x0],ch
   14000fbc4:	jne    0x14000fbc6
   14000fbc6:	ins    BYTE PTR es:[rdi],dx
   14000fbc7:	add    BYTE PTR [rax+rax*1+0x29],ch
   14000fbcb:	add    BYTE PTR [rax],al
   14000fbcd:	add    BYTE PTR [rax],al
   14000fbcf:	add    BYTE PTR [rax],ch
   14000fbd1:	outs   dx,BYTE PTR ds:[rsi]
   14000fbd2:	jne    0x14000fc40
   14000fbd4:	ins    BYTE PTR es:[rdi],dx
   14000fbd5:	sub    DWORD PTR [rax],eax
	...
   14000fbdf:	add    BYTE PTR [rsi],al
   14000fbe1:	add    BYTE PTR [rax],al
   14000fbe3:	(bad)  
   14000fbe4:	add    BYTE PTR [rcx],al
   14000fbe6:	add    BYTE PTR [rax],al
   14000fbe8:	adc    BYTE PTR [rax],al
   14000fbea:	add    eax,DWORD PTR [rsi]
   14000fbec:	add    BYTE PTR [rsi],al
   14000fbee:	add    dl,BYTE PTR [rax]
   14000fbf0:	add    al,0x45
   14000fbf2:	rex.RB
   14000fbf3:	rex.RB add eax,0x5050505
   14000fbf9:	xor    eax,0x500030
   14000fbfe:	add    BYTE PTR [rax],al
   14000fc00:	add    BYTE PTR [rax],ch
   14000fc02:	and    BYTE PTR [rax],bh
   14000fc04:	push   rax
   14000fc05:	pop    rax
   14000fc06:	(bad)  
   14000fc07:	or     BYTE PTR [rax],al
   14000fc09:	(bad)  
   14000fc0a:	xor    BYTE PTR [rax],dh
   14000fc0c:	push   rdi
   14000fc0d:	push   rax
   14000fc0e:	(bad)  
   14000fc0f:	add    BYTE PTR [rax],al
   14000fc11:	and    BYTE PTR [rax],ah
   14000fc13:	or     BYTE PTR [rax],al
   14000fc15:	add    BYTE PTR [rax],al
   14000fc17:	add    BYTE PTR [rax],cl
   14000fc19:	(bad)  
   14000fc1a:	push   0x60606060
   14000fc1f:	add    BYTE PTR [rax],al
   14000fc21:	js     0x14000fc93
   14000fc23:	js     0x14000fc9d
   14000fc25:	js     0x14000fc9f
   14000fc27:	or     BYTE PTR [rdi],al
   14000fc29:	or     BYTE PTR [rax],al
   14000fc2b:	add    BYTE PTR [rdi],al
   14000fc2d:	add    BYTE PTR [rax],cl
   14000fc2f:	or     BYTE PTR [rax],cl
   14000fc31:	add    BYTE PTR [rax],al
   14000fc33:	or     BYTE PTR [rax],al
   14000fc35:	or     BYTE PTR [rax],al
   14000fc37:	(bad)  
   14000fc38:	or     BYTE PTR [rax],al
   14000fc3a:	add    BYTE PTR [rax],al
   14000fc3c:	add    BYTE PTR [rax],al
   14000fc3e:	add    BYTE PTR [rax],al
   14000fc40:	(bad)  
   14000fc41:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   14000fc48:	add    BYTE PTR [rax],dl
   14000fc4a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   14000fc50:	adc    al,0x5
   14000fc52:	add    eax,0x85454545
   14000fc57:	test   DWORD PTR [rbp+0x30000005],eax
   14000fc5d:	xor    BYTE PTR [rax+0x888050],al
   14000fc63:	or     BYTE PTR [rax],al
   14000fc65:	sub    BYTE PTR [rdi],ah
   14000fc67:	cmp    BYTE PTR [rax+0x57],dl
   14000fc6a:	add    BYTE PTR [rax],0x7
   14000fc6d:	add    BYTE PTR [rdi],dh
   14000fc6f:	xor    BYTE PTR [rax],dh
   14000fc71:	push   rax
   14000fc72:	push   rax
   14000fc73:	mov    BYTE PTR [rax],al
   14000fc75:	add    BYTE PTR [rax],al
   14000fc77:	and    BYTE PTR [rax],ch
   14000fc79:	or     BYTE PTR [rax+0x8080],0x0
   14000fc80:	(bad)  
   14000fc81:	push   0x68686860
   14000fc86:	or     BYTE PTR [rax],cl
   14000fc88:	(bad)  
   14000fc89:	js     0x14000fcfb
   14000fc8b:	jo     0x14000fd04
   14000fc8d:	jo     0x14000fcff
   14000fc8f:	or     BYTE PTR [rax],cl
   14000fc91:	add    BYTE PTR [rax],al
   14000fc93:	or     BYTE PTR [rax],al
   14000fc95:	or     BYTE PTR [rax],al
   14000fc97:	(bad)  
   14000fc98:	or     BYTE PTR [rax],al
   14000fc9a:	add    BYTE PTR [rax],al
   14000fc9c:	add    BYTE PTR [rax],al
   14000fc9e:	add    BYTE PTR [rax],al
   14000fca0:	add    DWORD PTR [rdx],eax
   14000fca2:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000fca9:	or     cl,BYTE PTR [rbx]
   14000fcab:	or     al,0xd
   14000fcad:	(bad)  
   14000fcae:	movups xmm2,XMMWORD PTR [rcx]
   14000fcb1:	adc    dl,BYTE PTR [rbx]
   14000fcb3:	adc    al,0x15
   14000fcb5:	(bad)  
   14000fcb6:	(bad)  
   14000fcb7:	sbb    BYTE PTR [rcx],bl
   14000fcb9:	sbb    bl,BYTE PTR [rbx]
   14000fcbb:	sbb    al,0x1d
   14000fcbd:	(bad)  
   14000fcbe:	(bad)  
   14000fcbf:	and    BYTE PTR [rcx],ah
   14000fcc1:	and    ah,BYTE PTR [rbx]
   14000fcc3:	and    al,0x25
   14000fcc5:	es (bad) 
   14000fcc7:	sub    BYTE PTR [rcx],ch
   14000fcc9:	sub    ch,BYTE PTR [rbx]
   14000fccb:	sub    al,0x2d
   14000fccd:	cs (bad) 
   14000fccf:	xor    BYTE PTR [rcx],dh
   14000fcd1:	xor    dh,BYTE PTR [rbx]
   14000fcd3:	xor    al,0x35
   14000fcd5:	ss (bad) 
   14000fcd7:	cmp    BYTE PTR [rcx],bh
   14000fcd9:	cmp    bh,BYTE PTR [rbx]
   14000fcdb:	cmp    al,0x3d
   14000fcdd:	ds (bad) 
   14000fcdf:	rex
   14000fce0:	rex.B
   14000fce1:	rex.X
   14000fce2:	rex.XB
   14000fce3:	rex.R
   14000fce4:	rex.RB
   14000fce5:	rex.RX
   14000fce6:	rex.RXB
   14000fce7:	rex.W
   14000fce8:	rex.WB
   14000fce9:	rex.WX
   14000fcea:	rex.WXB
   14000fceb:	rex.WR
   14000fcec:	rex.WRB
   14000fced:	rex.WRX
   14000fcee:	rex.WRXB push r8
   14000fcf0:	push   rcx
   14000fcf1:	push   rdx
   14000fcf2:	push   rbx
   14000fcf3:	push   rsp
   14000fcf4:	push   rbp
   14000fcf5:	push   rsi
   14000fcf6:	push   rdi
   14000fcf7:	pop    rax
   14000fcf8:	pop    rcx
   14000fcf9:	pop    rdx
   14000fcfa:	pop    rbx
   14000fcfb:	pop    rsp
   14000fcfc:	pop    rbp
   14000fcfd:	pop    rsi
   14000fcfe:	pop    rdi
   14000fcff:	(bad)  
   14000fd00:	(bad)  
   14000fd01:	(bad)
   14000fd06:	addr32 push 0x6c6b6a69
   14000fd0c:	ins    DWORD PTR es:[rdi],dx
   14000fd0d:	outs   dx,BYTE PTR ds:[rsi]
   14000fd0e:	outs   dx,DWORD PTR ds:[rsi]
   14000fd0f:	jo     0x14000fd82
   14000fd11:	jb     0x14000fd86
   14000fd13:	je     0x14000fd8a
   14000fd15:	jbe    0x14000fd8e
   14000fd17:	js     0x14000fd92
   14000fd19:	jp     0x14000fd96
   14000fd1b:	jl     0x14000fd9a
   14000fd1d:	jle    0x14000fd9e
   14000fd1f:	add    BYTE PTR [rbx+0x0],al
   14000fd22:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000fd26:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000fd2a:	push   rsp
   14000fd2b:	add    BYTE PTR [rax+rax*1],ah
   14000fd2e:	add    BYTE PTR [rax],al
   14000fd30:	jne    0x14000fda5
   14000fd32:	gs jb  0x14000fd68
   14000fd35:	xor    ch,BYTE PTR [rsi]
   14000fd37:	fs ins BYTE PTR es:[rdi],dx
   14000fd39:	ins    BYTE PTR es:[rdi],dx
   14000fd3a:	add    BYTE PTR [rax],al
   14000fd3c:	add    BYTE PTR [rax],al
   14000fd3e:	add    BYTE PTR [rax],al
   14000fd40:	rex.WRB
   14000fd41:	gs jae 0x14000fdb7
   14000fd44:	(bad)  
   14000fd45:	rex.X outs dx,DWORD PTR gs:[esi]
   14000fd49:	js     0x14000fd9f
   14000fd4b:	imul   ebp,DWORD PTR [rbp+0x65],0x4174756f
   14000fd52:	add    BYTE PTR [rax],al
   14000fd54:	add    BYTE PTR [rax],al
   14000fd56:	add    BYTE PTR [rax],al
   14000fd58:	rex.RX (bad) 
   14000fd5a:	je     0x14000fdbd
   14000fd5c:	ins    BYTE PTR es:[rdi],dx
   14000fd5d:	and    BYTE PTR [rbp+0x72],al
   14000fd60:	jb     0x14000fdd1
   14000fd62:	jb     0x14000fd84
   14000fd64:	imul   ebp,DWORD PTR [rsi+0x20],0x6e75614c
   14000fd6b:	movsxd ebp,DWORD PTR [rax+0x65]
   14000fd6e:	jb     0x14000fd70
   14000fd70:	jb     0x14000fd72
   14000fd72:	(bad)  
   14000fd73:	add    BYTE PTR [rax],al
   14000fd75:	add    BYTE PTR [rax],al
   14000fd77:	add    BYTE PTR [rsi+0x61],al
   14000fd7a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000fd82:	outs   dx,DWORD PTR ds:[rsi]
   14000fd83:	jo     0x14000fdea
   14000fd85:	outs   dx,BYTE PTR ds:[rsi]
   14000fd86:	and    BYTE PTR [rbp+0x78],ah
   14000fd89:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14000fd8d:	(bad)  
   14000fd8e:	(bad)  
   14000fd8f:	ins    BYTE PTR es:[rdi],dx
   14000fd90:	add    BYTE PTR gs:[rax],al
   14000fd93:	add    BYTE PTR [rax],al
   14000fd95:	add    BYTE PTR [rax],al
   14000fd97:	add    BYTE PTR [rbp+0x6e],dl
   14000fd9a:	(bad)  
   14000fd9b:	(bad)  
   14000fd9c:	ins    BYTE PTR es:[rdi],dx
   14000fd9d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fda2:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14000fda8:	outs   dx,BYTE PTR ds:[rsi]
   14000fda9:	and    BYTE PTR [rcx+0x70],ah
   14000fdac:	jo     0x14000fe13
   14000fdae:	outs   dx,BYTE PTR ds:[rsi]
   14000fdaf:	fs gs and BYTE PTR fs:[rcx+0x72],ah
   14000fdb5:	movsxd ebp,DWORD PTR [rax+0x69]
   14000fdb8:	jbe    0x14000fe1f
   14000fdba:	add    BYTE PTR cs:[rax],al
   14000fdbd:	add    BYTE PTR [rax],al
   14000fdbf:	add    BYTE PTR [rbp+0x6e],dl
   14000fdc2:	(bad)  
   14000fdc3:	(bad)  
   14000fdc4:	ins    BYTE PTR es:[rdi],dx
   14000fdc5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fdca:	jb     0x14000fe31
   14000fdcc:	(bad)  
   14000fdcd:	and    BYTE PTR fs:[rsi+0x72],ah
   14000fdd1:	outs   dx,DWORD PTR ds:[rsi]
   14000fdd2:	ins    DWORD PTR es:[rdi],dx
   14000fdd3:	and    BYTE PTR [rsi+0x69],ah
   14000fdd6:	ins    BYTE PTR es:[rdi],dx
   14000fdd7:	add    BYTE PTR gs:[rax],al
   14000fdda:	add    BYTE PTR [rax],al
   14000fddc:	and    esp,DWORD PTR [rcx]
	...
   14000fde6:	add    BYTE PTR [rax],al
   14000fde8:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14000fdea:	(bad)  
   14000fdeb:	and    BYTE PTR [rcx+0x6e],ch
   14000fdee:	outs   dx,WORD PTR ds:[rsi]
   14000fdf0:	jb     0x14000fe5f
   14000fdf2:	(bad)  
   14000fdf3:	je     0x14000fe5e
   14000fdf5:	outs   dx,DWORD PTR ds:[rsi]
   14000fdf6:	outs   dx,BYTE PTR ds:[rsi]
   14000fdf7:	and    BYTE PTR [rcx+0x75],dh
   14000fdfa:	gs jb  0x14000fe76
   14000fdfd:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   14000fe04:	ins    BYTE PTR es:[rdi],dx
   14000fe05:	gs add BYTE PTR fs:[rdx+0x6f],cl
   14000fe0a:	(bad)  
   14000fe0b:	and    BYTE PTR [rcx+0x6e],ch
   14000fe0e:	outs   dx,WORD PTR ds:[rsi]
   14000fe10:	jb     0x14000fe7f
   14000fe12:	(bad)  
   14000fe13:	je     0x14000fe7e
   14000fe15:	outs   dx,DWORD PTR ds:[rsi]
   14000fe16:	outs   dx,BYTE PTR ds:[rsi]
   14000fe17:	and    BYTE PTR [rbx+0x65],dh
   14000fe1a:	je     0x14000fe90
   14000fe1c:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   14000fe23:	ins    BYTE PTR es:[rdi],dx
   14000fe24:	gs add BYTE PTR fs:[rax],al
   14000fe28:	jae    0x14000fe9e
   14000fe2a:	imul   ebp,DWORD PTR fs:[rsi+0x20],0x6c707564
   14000fe32:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fe39:	and    BYTE PTR [rsi+0x61],ah
   14000fe3c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe44:	add    BYTE PTR [rax],al
   14000fe46:	add    BYTE PTR [rax],al
   14000fe48:	jae    0x14000febe
   14000fe4a:	outs   dx,DWORD PTR fs:[rsi]
   14000fe4c:	jne    0x14000fec2
   14000fe4e:	and    BYTE PTR [rbp+rsi*2+0x70],ah
   14000fe52:	ins    BYTE PTR es:[rdi],dx
   14000fe53:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fe5a:	and    BYTE PTR [rsi+0x61],ah
   14000fe5d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe65:	add    BYTE PTR [rax],al
   14000fe67:	add    BYTE PTR [rbx+0x74],dh
   14000fe6a:	fs gs jb 0x14000fee0
   14000fe6e:	and    BYTE PTR [rbp+rsi*2+0x70],ah
   14000fe72:	ins    BYTE PTR es:[rdi],dx
   14000fe73:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fe7a:	and    BYTE PTR [rsi+0x61],ah
   14000fe7d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe85:	add    BYTE PTR [rax],al
   14000fe87:	add    BYTE PTR [rbp+0x6e],dl
   14000fe8a:	(bad)  
   14000fe8b:	(bad)  
   14000fe8c:	ins    BYTE PTR es:[rdi],dx
   14000fe8d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fe92:	movsxd esi,DWORD PTR [rdx+0x65]
   14000fe95:	(bad)  
   14000fe96:	je     0x14000fefd
   14000fe98:	and    BYTE PTR [rax+0x72],dh
   14000fe9b:	outs   dx,DWORD PTR ds:[rsi]
   14000fe9c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fe9f:	jae    0x14000fec1
   14000fea1:	jne    0x14000ff16
   14000fea3:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
   14000feaa:	(bad)  
   14000feab:	add    BYTE PTR [rax],al
   14000fead:	add    BYTE PTR [rax],al
   14000feaf:	add    BYTE PTR [rsi+0x61],al
   14000feb2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000feba:	addr32 gs je 0x14000fede
   14000febe:	gs js  0x14000ff2a
   14000fec1:	je     0x14000fee3
   14000fec3:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000fec6:	and    BYTE PTR gs:[rdi+0x66],ch
   14000feca:	and    BYTE PTR [rax+0x72],dh
   14000fecd:	outs   dx,DWORD PTR ds:[rsi]
   14000fece:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fed1:	jae    0x14000fed3
   14000fed3:	add    BYTE PTR [rax],al
   14000fed5:	add    BYTE PTR [rax],al
   14000fed7:	add    BYTE PTR [rsi],ch
   14000fed9:	add    BYTE PTR [rbp+0x0],ah
   14000fedc:	js     0x14000fede
   14000fede:	add    BYTE PTR gs:[rax],al
   14000fee1:	add    BYTE PTR [rax],al
   14000fee3:	add    BYTE PTR [rax],al
   14000fee5:	add    BYTE PTR [rax],al
   14000fee7:	add    BYTE PTR [rbp+0x78],al
   14000feea:	jo     0x14000ff51
   14000feec:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000fef0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000fef4:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14000fefa:	and    BYTE PTR [rbx+0x6f],ah
   14000fefd:	ins    DWORD PTR es:[rdi],dx
   14000fefe:	ins    DWORD PTR es:[rdi],dx
   14000feff:	(bad)  
   14000ff00:	outs   dx,BYTE PTR ds:[rsi]
   14000ff01:	and    BYTE PTR fs:[rbp+0x6e],ah
   14000ff05:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206e6920
   14000ff0d:	(bad)  
   14000ff0e:	cs gs js 0x14000ff77
   14000ff12:	(bad)  
   14000ff13:	and    BYTE PTR [rcx+0x6e],ch
   14000ff16:	and    BYTE PTR [rbx+0x68],dh
   14000ff19:	(bad)
   14000ff1f:	ins    BYTE PTR es:[rdi],dx
   14000ff20:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
	...
   14000ff2f:	add    BYTE PTR [rbp+0x78],al
   14000ff32:	jo     0x14000ff99
   14000ff34:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000ff38:	and    BYTE PTR [rbp+riz*2+0x72],dh
   14000ff3c:	ins    DWORD PTR es:[rdi],dx
   14000ff3d:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
   14000ff44:	and    BYTE PTR [rdi+rbp*2+0x75],ah
   14000ff48:	(bad)  
   14000ff49:	ins    BYTE PTR es:[rdi],dx
   14000ff4a:	gs sub eax,0x746f7571
   14000ff50:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000ff54:	jb     0x14000ff76
   14000ff56:	gs js  0x14000ffbe
   14000ff59:	movsxd esi,DWORD PTR [rbp+0x74]
   14000ff5c:	(bad)  
   14000ff5d:	(bad)  
   14000ff5e:	ins    BYTE PTR es:[rdi],dx
   14000ff5f:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000ff63:	and    BYTE PTR [rbx+0x68],dh
   14000ff66:	(bad)
   14000ff6c:	ins    BYTE PTR es:[rdi],dx
   14000ff6d:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
	...
   14000ff80:	push   rsp
   14000ff81:	gs jb  0x14000fff1
   14000ff84:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
   14000ff8b:	and    BYTE PTR [rcx+0x75],dh
   14000ff8e:	outs   dx,DWORD PTR ds:[rsi]
   14000ff8f:	je     0x14000fff6
   14000ff91:	and    BYTE PTR [rdi+0x69],dh
   14000ff94:	je     0x14000fffe
   14000ff96:	outs   dx,DWORD PTR ds:[rsi]
   14000ff97:	jne    0x14001000d
   14000ff99:	and    BYTE PTR [rbx+0x74],dh
   14000ff9c:	(bad)  
   14000ff9d:	jb     0x140010013
   14000ff9f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f757120
   14000ffa6:	je     0x14001000d
   14000ffa8:	and    BYTE PTR [rsi+0x6f],ah
   14000ffab:	jb     0x14000ffcd
   14000ffad:	gs js  0x140010015
   14000ffb0:	movsxd esi,DWORD PTR [rbp+0x74]
   14000ffb3:	(bad)  
   14000ffb4:	(bad)  
   14000ffb5:	ins    BYTE PTR es:[rdi],dx
   14000ffb6:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000ffba:	and    BYTE PTR [rbx+0x68],dh
   14000ffbd:	(bad)
   14000ffc3:	ins    BYTE PTR es:[rdi],dx
   14000ffc4:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
   14000ffcb:	add    BYTE PTR [rax],al
   14000ffcd:	add    BYTE PTR [rax],al
   14000ffcf:	add    BYTE PTR [rsi+0x61],al
   14000ffd2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000ffda:	imul   bp,WORD PTR [rsi+0x64],0x7320
   14000ffe0:	push   0x6e616265
   14000ffe5:	add    BYTE PTR [eax],al
   14000ffe8:	rex.RB js 0x14001005b
   14000ffeb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000fff0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000fff4:	imul   bp,WORD PTR [rsi+0x64],0x7420
   14000fffa:	gs jb  0x14001006a
   14000fffd:	imul   ebp,DWORD PTR [rsi+0x61],0x20726f74
   140010004:	imul   ebp,DWORD PTR [rsi+0x20],0x62656873
   14001000b:	(bad)  
   14001000c:	outs   dx,BYTE PTR ds:[rsi]
   14001000d:	and    BYTE PTR [ecx+ebp*2+0x6e],ch
   140010012:	add    BYTE PTR gs:[rax],al
   140010015:	add    BYTE PTR [rax],al
   140010017:	add    BYTE PTR [rbp+0x78],al
   14001001a:	jo     0x140010081
   14001001c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140010020:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140010024:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
   140010029:	and    BYTE PTR gs:[rbx+0x68],dh
   14001002d:	(bad)
   140010033:	ins    BYTE PTR es:[rdi],dx
   140010034:	imul   ebp,DWORD PTR [rsi+0x65],0x69737520
   14001003b:	outs   dx,BYTE PTR ds:[rsi]
   14001003c:	and    BYTE PTR [ebp+0x54],dl
   140010040:	rex.RX sub eax,0x38
   140010046:	add    BYTE PTR [rax],al
   140010048:	rex.RB js 0x1400100bb
   14001004b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010050:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140010054:	imul   bp,WORD PTR [rsi+0x64],0x2720
   14001005a:	and    esp,DWORD PTR [rdi]
   14001005c:	and    BYTE PTR [rcx+0x74],ah
   14001005f:	and    BYTE PTR [rbx+0x74],dh
   140010062:	(bad)  
   140010063:	jb     0x1400100d9
   140010065:	and    BYTE PTR [rdi+0x66],ch
   140010068:	and    BYTE PTR [rbx+0x68],dh
   14001006b:	(bad)
   140010071:	ins    BYTE PTR es:[rdi],dx
   140010072:	imul   ebp,DWORD PTR [rsi+0x65],0x45000000
   140010079:	js     0x1400100eb
   14001007b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010080:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140010084:	imul   bp,WORD PTR [rsi+0x64],0x2720
   14001008a:	and    DWORD PTR [rdi],esp
   14001008c:	and    BYTE PTR [rsi+0x6f],ah
   14001008f:	ins    BYTE PTR es:[rdi],dx
   140010090:	ins    BYTE PTR es:[rdi],dx
   140010091:	outs   dx,DWORD PTR ds:[rsi]
   140010092:	ja     0x1400100fd
   140010094:	outs   dx,BYTE PTR ds:[rsi]
   140010095:	and    BYTE PTR [edi],ah
   140010098:	and    esp,DWORD PTR [rdi]
   14001009a:	and    BYTE PTR [rcx+0x6e],ch
   14001009d:	and    BYTE PTR [rbx+0x68],dh
   1400100a0:	(bad)
   1400100a6:	ins    BYTE PTR es:[rdi],dx
   1400100a7:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	rex.RB js 0x140010123
   1400100b3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400100b8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400100bc:	imul   bp,WORD PTR [rsi+0x64],0x6520
   1400100c2:	js     0x140010129
   1400100c4:	movsxd esi,DWORD PTR [rbp+0x74]
   1400100c7:	(bad)  
   1400100c8:	(bad)  
   1400100c9:	ins    BYTE PTR es:[rdi],dx
   1400100ca:	and    BYTE PTR gs:[rcx+0x6e],ch
   1400100ce:	and    BYTE PTR [rbx+0x68],dh
   1400100d1:	(bad)
   1400100d7:	ins    BYTE PTR es:[rdi],dx
   1400100d8:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   1400100df:	add    BYTE PTR [rbp+0x78],al
   1400100e2:	jo     0x140010149
   1400100e4:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400100e8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400100ec:	imul   bp,WORD PTR [rsi+0x64],0x6120
   1400100f2:	jb     0x14001015b
   1400100f4:	jne    0x140010163
   1400100f6:	outs   dx,BYTE PTR gs:[rsi]
   1400100f8:	je     0x14001016d
   1400100fa:	and    BYTE PTR [rax],ch
   1400100fc:	gs jbe 0x140010164
   1400100ff:	outs   dx,BYTE PTR ds:[rsi]
   140010100:	and    BYTE PTR [rcx+0x66],ch
   140010103:	and    BYTE PTR [rbp+0x6d],ah
   140010106:	jo     0x14001017c
   140010108:	jns    0x140010133
   14001010a:	and    BYTE PTR [rcx+0x6e],ch
   14001010d:	and    BYTE PTR [rbx+0x68],dh
   140010110:	(bad)
   140010116:	ins    BYTE PTR es:[rdi],dx
   140010117:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   14001011e:	add    BYTE PTR [rax],al
   140010120:	rex.RB js 0x140010193
   140010123:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010128:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001012c:	(bad)  
   14001012d:	and    BYTE PTR gs:[rcx+0x62],ah
   140010131:	ins    BYTE PTR es:[rdi],dx
   140010132:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140010137:	(bad)  
   140010138:	ins    BYTE PTR es:[rdi],dx
   140010139:	ins    BYTE PTR es:[rdi],dx
   14001013a:	outs   dx,DWORD PTR ds:[rsi]
   14001013b:	movsxd esp,DWORD PTR [rcx+0x74]
   14001013e:	and    BYTE PTR gs:[rbx+0x6f],ah
   140010142:	ins    DWORD PTR es:[rdi],dx
   140010143:	ins    DWORD PTR es:[rdi],dx
   140010144:	(bad)  
   140010145:	outs   dx,BYTE PTR ds:[rsi]
   140010146:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14001014b:	and    BYTE PTR gs:[rbp+0x65],ch
   14001014f:	ins    DWORD PTR es:[rdi],dx
   140010150:	outs   dx,DWORD PTR ds:[rsi]
   140010151:	jb     0x1400101cc
   140010153:	add    BYTE PTR [rax],al
   140010155:	add    BYTE PTR [rax],al
   140010157:	add    BYTE PTR [rdx],ah
   140010159:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201745f
   14001015f:	add    BYTE PTR [rax],ah
   140010161:	add    BYTE PTR [rip+0x20007300],ah        # 0x160017467
   140010167:	add    BYTE PTR [rdx],ah
   140010169:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201746f
   14001016f:	add    BYTE PTR [rax],ah
   140010171:	add    BYTE PTR [rip+0x7300],ah        # 0x140017477
   140010177:	add    BYTE PTR [rdx+0x53],dl
   14001017a:	rex.R push rbx
   14001017c:	stos   BYTE PTR es:[rdi],al
   14001017d:	xchg   edi,eax
   14001017e:	leave  
   14001017f:	out    0x6f,al
   140010181:	mov    esi,0x679246b7
   140010186:	sub    ebx,0x6e
   140010189:	push   rdx
   14001018a:	and    DWORD PTR [rbx],esp
   14001018c:	add    al,BYTE PTR [rax]
   14001018e:	add    BYTE PTR [rax],al
   140010190:	cmp    bl,BYTE PTR [r13+r10*2+0x73]
   140010195:	gs jb  0x14001020b
   140010198:	pop    rsp
   140010199:	push   rsi
   14001019a:	imul   ebp,DWORD PTR [rsi+0x61],0x72505c79
   1400101a1:	outs   dx,DWORD PTR ds:[rsi]
   1400101a2:	push   0x65
   1400101a4:	movsxd esi,DWORD PTR [rbx+rsi*2+0x5c]
   1400101a8:	jae    0x140010213
   1400101aa:	ins    DWORD PTR es:[rdi],dx
   1400101ab:	jo     0x140010219
   1400101ad:	gs pop rdi
   1400101af:	ins    BYTE PTR es:[rdi],dx
   1400101b0:	(bad)  
   1400101b1:	jne    0x140010221
   1400101b3:	movsxd ebp,DWORD PTR [rax+0x65]
   1400101b6:	jb     0x140010214
   1400101b8:	js     0x1400101f0
   1400101ba:	xor    al,0x5c
   1400101bc:	push   rdx
   1400101bd:	gs ins BYTE PTR es:[rdi],dx
   1400101bf:	gs (bad) 
   1400101c1:	jae    0x140010228
   1400101c3:	pop    rsp
   1400101c4:	rex.RXB push r13
   1400101c6:	rex.WB push r11
   1400101c8:	imul   ebp,DWORD PTR [rbp+0x70],0x614c656c
   1400101cf:	jne    0x14001023f
   1400101d1:	movsxd ebp,DWORD PTR [rax+0x65]
   1400101d4:	jb     0x140010204
   1400101d6:	jo     0x14001023c
   1400101d8:	(bad)  
	...
   1400101fd:	add    BYTE PTR [rax],al
   1400101ff:	add    BYTE PTR [rcx],al
   140010201:	add    BYTE PTR [rax],al
   140010203:	add    BYTE PTR [rcx],dl
   140010205:	adc    ecx,DWORD PTR [rax]
   140010207:	add    BYTE PTR [rbx],dl
   140010209:	fs or  al,0x0
   14001020c:	adc    esi,DWORD PTR [rbx+rcx*1]
   14001020f:	add    BYTE PTR [rbx],dl
   140010211:	push   rdx
   140010212:	(bad)  
   140010214:	or     eax,0xb8700bc0
   140010219:	sub    al,BYTE PTR [rax]
   14001021b:	add    BYTE PTR [rdx],al
   14001021d:	add    BYTE PTR [rax],al
   14001021f:	add    BYTE PTR [rdx],ah
   140010221:	sbb    al,BYTE PTR [rax]
   140010223:	add    BYTE PTR [rbp+0x1a],al
   140010226:	add    BYTE PTR [rax],al
   140010228:	mov    al,0xcd
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	add    BYTE PTR [rax],al
   14001022e:	add    BYTE PTR [rax],al
   140010230:	rex.WX sbb al,BYTE PTR [rax]
   140010233:	add    BYTE PTR [rsi+0x1a],bl
   140010236:	add    BYTE PTR [rax],al
   140010238:	mov    al,0xcd
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	add    BYTE PTR [rax],al
   14001023e:	add    BYTE PTR [rax],al
   140010240:	add    DWORD PTR [rdi],ecx
   140010242:	add    al,0x0
   140010244:	sysenter 
   140010246:	(bad)  
   140010247:	add    BYTE PTR [rdi],cl
   140010249:	xor    cl,BYTE PTR [rbx]
   14001024b:	jo     0x14001025e
   14001024d:	sbb    al,0xa
   14001024f:	add    BYTE PTR [rsp+riz*2],bl
   140010252:	ltr    WORD PTR [rsp+rsi*1]
   140010256:	(bad)  
   140010257:	add    BYTE PTR [rdx+rsi*2],bl
   14001025a:	sbb    al,dh
   14001025c:	(bad)  
   14001025d:	loopne 0x140010273
   14001025f:	rcl    BYTE PTR [rdx],1
   140010261:	rcl    BYTE PTR [rax],0x70
   140010264:	mov    eax,0x100002a
   140010269:	add    BYTE PTR [rax],al
   14001026b:	add    bl,dh
   14001026d:	sbb    al,0x0
   14001026f:	add    BYTE PTR [rcx],al
   140010271:	(bad)  
   140010272:	add    BYTE PTR [rax],al
   140010274:	retf   0xcd
   140010277:	add    BYTE PTR [rax],al
   140010279:	add    BYTE PTR [rax],al
   14001027b:	add    BYTE PTR [rcx],al
   14001027d:	or     al,BYTE PTR [rdx]
   14001027f:	add    BYTE PTR [rdx],cl
   140010281:	xor    al,BYTE PTR [rsi]
   140010283:	xor    BYTE PTR [rcx],al
   140010285:	or     eax,DWORD PTR [rcx]
   140010287:	add    BYTE PTR [rbx],cl
   140010289:	(bad)  
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	add    DWORD PTR [rdx+rcx*1],edx
   14001028f:	add    BYTE PTR [rsp+rsi*1],dl
   140010292:	lldt   WORD PTR [rdx+rsi*1]
   140010296:	adc    al,dh
   140010298:	(bad)  
   140010299:	loopne 0x1400102a7
   14001029b:	ror    BYTE PTR [rdx],1
   14001029d:	ror    BYTE PTR [rax],0x70
   1400102a0:	(bad)  
   1400102a1:	(bad)  
   1400102a2:	(bad)  
   1400102a3:	push   rax
   1400102a4:	add    DWORD PTR [rsi],eax
   1400102a6:	add    al,BYTE PTR [rax]
   1400102a8:	(bad)  
   1400102a9:	push   rdx
   1400102aa:	add    dl,BYTE PTR [rax+0x11]
   1400102ad:	sbb    DWORD PTR [rdx],ecx
   1400102af:	add    BYTE PTR [rcx],bl
   1400102b1:	(bad)  
   1400102b2:	or     eax,DWORD PTR [rax]
   1400102b4:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400102b8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400102bc:	sbb    DWORD PTR [rax+rcx*1],esi
   1400102bf:	add    BYTE PTR [rcx],bl
   1400102c1:	push   rdx
   1400102c2:	adc    eax,0x2ab8d0
   1400102c7:	add    BYTE PTR [rcx],al
   1400102c9:	add    BYTE PTR [rax],al
   1400102cb:	add    ah,cl
   1400102cd:	and    al,BYTE PTR [rax]
   1400102cf:	add    ch,ah
   1400102d1:	and    al,BYTE PTR [rax]
   1400102d3:	add    dh,ch
   1400102d5:	int    0x0
   1400102d7:	add    BYTE PTR [rax],al
   1400102d9:	add    BYTE PTR [rax],al
   1400102db:	add    BYTE PTR [rcx],dl
   1400102dd:	(bad)  
   1400102df:	add    BYTE PTR [rdi],cl
   1400102e1:	xor    al,0x7
   1400102e3:	add    BYTE PTR [rdi],cl
   1400102e5:	xor    cl,BYTE PTR [rbx]
   1400102e7:	jo     0x1400102a1
   1400102e9:	sub    al,BYTE PTR [rax]
   1400102eb:	add    BYTE PTR [rcx],al
   1400102ed:	add    BYTE PTR [rax],al
   1400102ef:	add    BYTE PTR [rcx-0x6cffffdb],cl
   1400102f5:	and    eax,0xce080000
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	add    BYTE PTR [rax],al
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	adc    DWORD PTR [rsi+rax*1],edx
   140010303:	add    BYTE PTR [rsp+riz*2],dl
   140010306:	or     BYTE PTR [rax],al
   140010308:	adc    al,0x34
   14001030a:	(bad)  
   14001030b:	add    BYTE PTR [rdx+rsi*1],dl
   14001030e:	adc    BYTE PTR [rax-0x48],dh
   140010311:	sub    al,BYTE PTR [rax]
   140010313:	add    BYTE PTR [rcx],al
   140010315:	add    BYTE PTR [rax],al
   140010317:	add    BYTE PTR [rbp-0x43ffffda],ch
   14001031d:	add    BYTE PTR es:[rax],al
   140010320:	or     dh,cl
   140010322:	add    BYTE PTR [rax],al
   140010324:	add    BYTE PTR [rax],al
   140010326:	add    BYTE PTR [rax],al
   140010328:	add    DWORD PTR [rdx],ecx
   14001032a:	add    al,0x0
   14001032c:	or     dh,BYTE PTR [rsi+rax*1]
   14001032f:	add    BYTE PTR [rdx],cl
   140010331:	xor    al,BYTE PTR [rsi]
   140010333:	jo     0x140010346
   140010335:	(bad)  
   140010337:	add    BYTE PTR [rdi],cl
   140010339:	xor    al,0x7
   14001033b:	add    BYTE PTR [rdi],cl
   14001033d:	xor    cl,BYTE PTR [rbx]
   14001033f:	jo     0x1400102f9
   140010341:	sub    al,BYTE PTR [rax]
   140010343:	add    BYTE PTR [rcx],al
   140010345:	add    BYTE PTR [rax],al
   140010347:	add    BYTE PTR [rbx-0x5affffd9],bl
   14001034d:	(bad)  
   14001034e:	add    BYTE PTR [rax],al
   140010350:	or     dh,cl
   140010352:	add    BYTE PTR [rax],al
   140010354:	add    BYTE PTR [rax],al
   140010356:	add    BYTE PTR [rax],al
   140010358:	or     DWORD PTR [rip+0x340d0005],ecx        # 0x1740e0363
   14001035e:	(bad)  
   14001035f:	add    BYTE PTR [rip+0x6001401],cl        # 0x146011766
   140010365:	jo     0x140010367
   140010367:	add    BYTE PTR [rax+0x100002a],bh
   14001036d:	add    BYTE PTR [rax],al
   14001036f:	add    BYTE PTR [rbx+0x28000028],al
   140010375:	sub    DWORD PTR [rax],eax
   140010377:	add    BYTE PTR [rdx],ah
   140010379:	(bad)  
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	sub    BYTE PTR [rcx],ch
   14001037e:	add    BYTE PTR [rax],al
   140010380:	add    DWORD PTR [rdx+rax*1],ecx
   140010383:	add    BYTE PTR [rcx+rax*1],cl
   140010386:	adc    DWORD PTR [rax],eax
   140010388:	add    DWORD PTR [rax],esp
   14001038a:	or     al,0x0
   14001038c:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140010390:	and    BYTE PTR [rax+rdx*1+0x0],dl
   140010394:	and    BYTE PTR [rsi+rcx*1],dh
   140010397:	add    BYTE PTR [rax],ah
   140010399:	jb     0x1400103b7
   14001039b:	lock sbb ah,al
   14001039e:	sbb    al,dl
   1400103a0:	(bad)  
   1400103a1:	rcl    BYTE PTR [rax+rsi*2],0x1
   1400103a5:	sbb    al,0xc
   1400103a7:	add    BYTE PTR [rsp+riz*2],bl
   1400103aa:	ltr    WORD PTR [rsp+rdx*2]
   1400103ae:	(bad)  
   1400103af:	add    BYTE PTR [rsp+rsi*1],bl
   1400103b2:	or     al,0x0
   1400103b4:	sbb    al,0x52
   1400103b6:	sbb    al,dh
   1400103b8:	(bad)  
   1400103b9:	loopne 0x1400103cf
   1400103bb:	rcl    BYTE PTR [rdx],1
   1400103bd:	rcl    BYTE PTR [rax],0x70
   1400103c0:	adc    DWORD PTR [rdi],ecx
   1400103c2:	(bad)  
   1400103c3:	add    BYTE PTR [rdi],cl
   1400103c5:	or     DWORD PTR fs:[rax],eax
   1400103c8:	sysenter 
   1400103ca:	or     BYTE PTR [rax],al
   1400103cc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400103cf:	jo     0x140010389
   1400103d1:	sub    al,BYTE PTR [rax]
   1400103d3:	add    BYTE PTR [rcx],al
   1400103d5:	add    BYTE PTR [rax],al
   1400103d7:	add    dh,al
   1400103d9:	xor    DWORD PTR [rax],eax
   1400103db:	add    dh,ah
   1400103dd:	xor    al,BYTE PTR [rax]
   1400103df:	add    BYTE PTR [rdi-0x31],ch
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	add    BYTE PTR [rax],al
   1400103e6:	add    BYTE PTR [rax],al
   1400103e8:	sbb    DWORD PTR [rsi],ebp
   1400103ea:	or     DWORD PTR [rax],eax
   1400103ec:	sbb    eax,0x1d00c464
   1400103f1:	xor    al,0xc3
   1400103f3:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e01c1fa
   1400103f9:	ror    BYTE PTR [rax+rsi*2],0xb
   1400103fd:	push   rax
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	or     BYTE PTR [rbp+0x0],dh
   140010403:	add    al,ah
   140010405:	add    eax,0x14010000
   14001040a:	or     BYTE PTR [rax],al
   14001040c:	adc    al,0x64
   14001040e:	or     al,BYTE PTR [rax]
   140010410:	adc    al,0x54
   140010412:	or     DWORD PTR [rax],eax
   140010414:	adc    al,0x34
   140010416:	or     BYTE PTR [rax],al
   140010418:	adc    al,0x52
   14001041a:	adc    BYTE PTR [rax+0x0],dh
   14001041d:	add    BYTE PTR [rax],al
   14001041f:	add    BYTE PTR [rcx],al
   140010421:	(bad)  
   140010422:	add    al,BYTE PTR [rax]
   140010424:	(bad)  
   140010425:	add    DWORD PTR [rbx+0x100],ebx
   14001042b:	add    BYTE PTR [rcx],al
   14001042d:	add    BYTE PTR [rax],al
   14001042f:	add    BYTE PTR [rcx],al
   140010431:	add    BYTE PTR [rax],al
   140010433:	add    BYTE PTR [rcx],al
   140010435:	adc    eax,0x74150008
   14001043a:	or     BYTE PTR [rax],al
   14001043c:	adc    eax,0x15000764
   140010441:	xor    al,0x6
   140010443:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c1157b
   140010449:	adc    eax,0x74150008
   14001044e:	or     BYTE PTR [rax],al
   140010450:	adc    eax,0x15000764
   140010455:	xor    al,0x6
   140010457:	add    BYTE PTR [rip+0xffffffffb8d01132],dl        # 0xf8d1158f
   14001045d:	sub    al,BYTE PTR [rax]
   14001045f:	add    BYTE PTR [rcx],al
   140010461:	add    BYTE PTR [rax],al
   140010463:	add    BYTE PTR [rbx],cl
   140010465:	cmp    BYTE PTR [rax],al
   140010467:	add    BYTE PTR [rcx+0x38],cl
   14001046a:	add    BYTE PTR [rax],al
   14001046c:	rex (bad) 
   14001046e:	add    BYTE PTR [rax],al
   140010470:	add    BYTE PTR [rax],al
   140010472:	add    BYTE PTR [rax],al
   140010474:	or     DWORD PTR [rcx+rax*1],eax
   140010477:	add    BYTE PTR [rdx+rax*2],al
   14001047a:	add    BYTE PTR [rax],al
   14001047c:	mov    eax,0x100002a
   140010481:	add    BYTE PTR [rax],al
   140010483:	add    cl,cl
   140010485:	cmp    BYTE PTR [rax],al
   140010487:	add    ch,cl
   140010489:	cmp    BYTE PTR [rax],al
   14001048b:	add    BYTE PTR [rcx],al
   14001048d:	add    BYTE PTR [rax],al
   14001048f:	add    ch,cl
   140010491:	cmp    BYTE PTR [rax],al
   140010493:	add    BYTE PTR [rcx],dl
   140010495:	(bad)  
   140010496:	or     al,BYTE PTR [rax]
   140010498:	(bad)  
   140010499:	fs (bad) 
   14001049b:	add    BYTE PTR [rdi],dl
   14001049d:	xor    al,0xd
   14001049f:	add    BYTE PTR [rdi],dl
   1400104a1:	push   rdx
   1400104a2:	adc    esi,eax
   1400104a4:	adc    eax,esp
   1400104a6:	(bad)  
   1400104a8:	or     eax,0xb8700bc0
   1400104ad:	sub    al,BYTE PTR [rax]
   1400104af:	add    BYTE PTR [rcx],al
   1400104b1:	add    BYTE PTR [rax],al
   1400104b3:	add    BYTE PTR [rcx+0x3a],ah
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	out    dx,eax
   1400104b9:	cmp    al,BYTE PTR [rax]
   1400104bb:	add    BYTE PTR [rsi-0x32],bl
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	add    BYTE PTR [rax],al
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	adc    DWORD PTR [rdx],ecx
   1400104c6:	add    al,0x0
   1400104c8:	or     dh,BYTE PTR [rsi+rax*1]
   1400104cb:	add    BYTE PTR [rdx],cl
   1400104cd:	xor    al,BYTE PTR [rsi]
   1400104cf:	jo     0x140010489
   1400104d1:	sub    al,BYTE PTR [rax]
   1400104d3:	add    BYTE PTR [rdx],al
   1400104d5:	add    BYTE PTR [rax],al
   1400104d7:	add    BYTE PTR [rsi],dh
   1400104d9:	cmp    al,0x0
   1400104db:	add    BYTE PTR [rax+0x3c],al
   1400104de:	add    BYTE PTR [rax],al
   1400104e0:	jl     0x1400104b0
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	push   rbp
   1400104e9:	cmp    al,0x0
   1400104eb:	add    BYTE PTR [rsp+rdi*1+0x0],bh
   1400104ef:	add    BYTE PTR [rsi+rcx*8+0x0],bl
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	adc    DWORD PTR [rbx],edx
   1400104fa:	add    al,0x0
   1400104fc:	adc    esi,DWORD PTR [rdi+rax*1]
   1400104ff:	add    BYTE PTR [rbx],dl
   140010501:	xor    cl,BYTE PTR [rdi]
   140010503:	jo     0x1400104bd
   140010505:	sub    al,BYTE PTR [rax]
   140010507:	add    BYTE PTR [rdx],al
   140010509:	add    BYTE PTR [rax],al
   14001050b:	add    ah,bl
   14001050d:	cmp    eax,0x3e090000
   140010512:	add    BYTE PTR [rax],al
   140010514:	jl     0x1400104e4
   140010516:	add    BYTE PTR [rax],al
   140010518:	add    BYTE PTR [rax],al
   14001051a:	add    BYTE PTR [rax],al
   14001051c:	sbb    edi,DWORD PTR [rsi]
   14001051e:	add    BYTE PTR [rax],al
   140010520:	push   rdx
   140010521:	add    BYTE PTR ds:[rax],al
   140010524:	pushf  
   140010525:	(bad)  
   140010526:	add    BYTE PTR [rax],al
   140010528:	add    BYTE PTR [rax],al
   14001052a:	add    BYTE PTR [rax],al
   14001052c:	adc    DWORD PTR [rcx],ebx
   14001052e:	or     al,BYTE PTR [rax]
   140010530:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140010534:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140010538:	sbb    DWORD PTR [rax+rcx*1],esi
   14001053b:	add    BYTE PTR [rcx],bl
   14001053d:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d11923
   140010543:	sar    BYTE PTR [rax+0x100002a],0x0
   14001054a:	add    BYTE PTR [rax],al
   14001054c:	pop    rdx
   14001054d:	(bad)  
   14001054e:	add    BYTE PTR [rax],al
   140010550:	and    BYTE PTR [rax+0x0],al
   140010553:	add    BYTE PTR [rdi+0xce],dh
   140010559:	add    BYTE PTR [rax],al
   14001055b:	add    BYTE PTR [rcx],cl
   14001055d:	add    al,0x1
   14001055f:	add    BYTE PTR [rdx+rax*2],al
   140010562:	add    BYTE PTR [rax],al
   140010564:	mov    eax,0x100002a
   140010569:	add    BYTE PTR [rax],al
   14001056b:	add    BYTE PTR [rdi-0x35ffffbf],dl
   140010571:	add    BYTE PTR [r8],al
   140010574:	ror    dh,1
   140010576:	add    BYTE PTR [rax],al
   140010578:	retf   0x41
   14001057b:	add    BYTE PTR [rcx],bl
   14001057d:	sub    eax,0x641b000b
   140010582:	push   rcx
   140010583:	add    BYTE PTR [rbx],bl
   140010585:	push   rsp
   140010586:	push   rax
   140010587:	add    BYTE PTR [rbx],bl
   140010589:	xor    al,0x4f
   14001058b:	add    BYTE PTR [rbx],bl
   14001058d:	add    DWORD PTR [rdx+0x0],ecx
   140010590:	adc    al,0xd0
   140010592:	adc    al,al
   140010594:	adc    BYTE PTR [rax+0x0],dh
   140010597:	add    BYTE PTR [rax],cl
   140010599:	jne    0x14001059b
   14001059b:	add    BYTE PTR [rax+0x2],al
   14001059e:	add    BYTE PTR [rax],al
   1400105a0:	add    DWORD PTR [rcx],ebx
   1400105a2:	or     al,BYTE PTR [rax]
   1400105a4:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   1400105a8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   1400105ac:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   1400105b0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400105b3:	add    BYTE PTR [rcx],bl
   1400105b5:	push   rdx
   1400105b6:	adc    eax,0x10401c0
   1400105bb:	add    BYTE PTR [rdx+riz*2],al
   1400105be:	add    BYTE PTR [rax],al
   1400105c0:	add    DWORD PTR [rdi],edx
   1400105c2:	or     BYTE PTR [rax],al
   1400105c4:	(bad)  
   1400105c5:	or     DWORD PTR fs:[rax],eax
   1400105c8:	(bad)  
   1400105c9:	push   rsp
   1400105ca:	or     BYTE PTR [rax],al
   1400105cc:	(bad)  
   1400105cd:	xor    al,0x7
   1400105cf:	add    BYTE PTR [rdi],dl
   1400105d1:	xor    dl,BYTE PTR [rbx]
   1400105d3:	jo     0x1400105d5
   1400105d5:	add    BYTE PTR [rax],al
   1400105d7:	add    BYTE PTR [rcx],al
   1400105d9:	add    BYTE PTR [rax],al
   1400105db:	add    BYTE PTR [rcx],al
   1400105dd:	sbb    ecx,DWORD PTR [rdx]
   1400105df:	add    BYTE PTR [rbx],bl
   1400105e1:	je     0x1400105f3
   1400105e3:	add    BYTE PTR [rbx],bl
   1400105e5:	ltr    WORD PTR fs:[rbx]
   1400105e9:	xor    al,0xe
   1400105eb:	add    BYTE PTR [rbx],bl
   1400105ed:	xchg   edx,eax
   1400105ee:	adc    al,0xd0
   1400105f0:	adc    al,al
   1400105f2:	adc    BYTE PTR [rax+0x1],dl
   1400105f5:	sbb    BYTE PTR [rdx],cl
   1400105f7:	add    BYTE PTR [rax],bl
   1400105f9:	fs or  al,0x0
   1400105fc:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140010600:	sbb    BYTE PTR [rdx+rcx*1],dh
   140010603:	add    BYTE PTR [rax],bl
   140010605:	push   rdx
   140010606:	adc    al,0xd0
   140010608:	adc    al,al
   14001060a:	adc    BYTE PTR [rax+0x1],dh
   14001060d:	sbb    al,0x9
   14001060f:	add    BYTE PTR [rdx+riz*4],bl
   140010612:	adc    eax,0x11e013f0
   140010617:	ror    BYTE PTR [rdi],1
   140010619:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b611290
   140010620:	or     dl,BYTE PTR [rax+0x0]
   140010623:	add    BYTE PTR [rcx],dl
   140010625:	sbb    ecx,DWORD PTR [rdx]
   140010627:	add    BYTE PTR [rbx],bl
   140010629:	fs or  al,0x0
   14001062c:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14001062f:	add    BYTE PTR [rbx],bl
   140010631:	xor    dl,BYTE PTR [rdi]
   140010633:	lock adc eax,0x11d013e0
   140010639:	ror    BYTE PTR [rdi],0x70
   14001063c:	mov    eax,0x100002a
   140010641:	add    BYTE PTR [rax],al
   140010643:	add    BYTE PTR [rsi+rdx*2+0x56de0000],ch
   14001064a:	add    BYTE PTR [rax],al
   14001064c:	repnz (bad) 
   14001064e:	add    BYTE PTR [rax],al
   140010650:	add    BYTE PTR [rax],al
   140010652:	add    BYTE PTR [rax],al
   140010654:	add    DWORD PTR [rbx+rcx*1],ebx
   140010657:	add    BYTE PTR [rsp+rsi*2],bl
   14001065a:	sbb    BYTE PTR [rax],al
   14001065c:	sbb    al,0x54
   14001065e:	(bad)  
   14001065f:	add    BYTE PTR [rsp+rsi*1],bl
   140010662:	(bad)  
   140010663:	add    BYTE PTR [rcx+rax*1],bl
   140010666:	adc    al,BYTE PTR [rax]
   140010668:	adc    eax,0x11d013e0
   14001066d:	rol    BYTE PTR [rax],0x0
   140010670:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17416067e
   140010676:	or     eax,DWORD PTR [rax]
   140010678:	adc    eax,0xfe01132
   14001067d:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a711243
   140010683:	(bad)  
   140010684:	mov    eax,0x100002a
   140010689:	add    BYTE PTR [rax],al
   14001068b:	add    BYTE PTR [rbp-0x20ffffa5],ch
   140010691:	pop    rbx
   140010692:	add    BYTE PTR [rax],al
   140010694:	repnz (bad) 
   140010696:	add    BYTE PTR [rax],al
   140010698:	add    BYTE PTR [rax],al
   14001069a:	add    BYTE PTR [rax],al
   14001069c:	add    DWORD PTR [rsi],eax
   14001069e:	add    al,BYTE PTR [rax]
   1400106a0:	(bad)  
   1400106a1:	xor    al,BYTE PTR [rdx]
   1400106a3:	push   rax
   1400106a4:	adc    DWORD PTR [rcx],ebx
   1400106a6:	or     al,BYTE PTR [rax]
   1400106a8:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400106ac:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400106b0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400106b3:	add    BYTE PTR [rcx],bl
   1400106b5:	push   rdx
   1400106b6:	adc    eax,0x11d013f0
   1400106bb:	sar    BYTE PTR [rax+0x200002a],0x0
   1400106c2:	add    BYTE PTR [rax],al
   1400106c4:	rex.X pop rbp
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	xchg   BYTE PTR [rbp+0x0],bl
   1400106cb:	add    BYTE PTR [rbx],cl
   1400106cd:	iret   
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	add    BYTE PTR [rax],al
   1400106d2:	add    BYTE PTR [rax],al
   1400106d4:	or     DWORD PTR [rbp+0x0],ebx
   1400106d7:	add    BYTE PTR [rdi+0x3b00005d],bl
   1400106dd:	iret   
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	add    BYTE PTR [rax],al
   1400106e2:	add    BYTE PTR [rax],al
   1400106e4:	adc    DWORD PTR [rcx],edx
   1400106e6:	(bad)  
   1400106e7:	add    BYTE PTR [rcx],dl
   1400106e9:	xor    al,0xa
   1400106eb:	add    BYTE PTR [rcx],dl
   1400106ed:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a7112b3
   1400106f3:	(bad)  
   1400106f4:	mov    eax,0x100002a
   1400106f9:	add    BYTE PTR [rax],al
   1400106fb:	add    bh,bh
   1400106fd:	pop    rsi
   1400106fe:	add    BYTE PTR [rax],al
   140010700:	and    ebx,DWORD PTR [rdi+0x0]
   140010703:	add    BYTE PTR [rsi-0x31],dl
   140010706:	add    BYTE PTR [rax],al
   140010708:	add    BYTE PTR [rax],al
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41e071e
   140010712:	or     eax,DWORD PTR [rax]
   140010714:	sbb    eax,0x1d000a64
   140010719:	push   rsp
   14001071a:	or     DWORD PTR [rax],eax
   14001071c:	sbb    eax,0x1d000834
   140010721:	xor    bl,BYTE PTR [rcx]
   140010723:	loopne 0x14001073c
   140010725:	rcl    BYTE PTR [rip+0x60f01c0],1        # 0x1461008eb
   14001072b:	add    BYTE PTR [rdi],cl
   14001072d:	or     eax,DWORD PTR fs:[rax]
   140010730:	sysenter 
   140010732:	or     al,BYTE PTR [rax]
   140010734:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140010737:	jo     0x14001073a
   140010739:	or     al,BYTE PTR [rax+rax*1]
   14001073c:	or     dh,BYTE PTR [rax+rcx*1]
   14001073f:	add    BYTE PTR [rdx],cl
   140010741:	xor    al,BYTE PTR [rsi]
   140010743:	jo     0x140010746
   140010745:	sbb    DWORD PTR [rdx],ecx
   140010747:	add    BYTE PTR [rcx],bl
   140010749:	je     0x140010754
   14001074b:	add    BYTE PTR [rcx],bl
   14001074d:	or     BYTE PTR fs:[rax],al
   140010750:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140010754:	sbb    DWORD PTR [rsi+rax*1],esi
   140010757:	add    BYTE PTR [rcx],bl
   140010759:	xor    dl,BYTE PTR [rip+0x60f11c0]        # 0x14610191f
   14001075f:	add    BYTE PTR [rdi],cl
   140010761:	or     DWORD PTR fs:[rax],eax
   140010764:	sysenter 
   140010766:	or     BYTE PTR [rax],al
   140010768:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001076b:	jo     0x140010725
   14001076d:	sub    al,BYTE PTR [rax]
   14001076f:	add    BYTE PTR [rcx],al
   140010771:	add    BYTE PTR [rax],al
   140010773:	add    BYTE PTR [rsi-0x5ffff97],al
   140010779:	imul   eax,DWORD PTR [rax],0xcf6f00
   14001077f:	add    BYTE PTR [rax],al
   140010781:	add    BYTE PTR [rax],al
   140010783:	add    BYTE PTR [rcx],al
   140010785:	and    al,0xa
   140010787:	add    BYTE PTR [rsp+rsi*1],ah
   14001078a:	sbb    DWORD PTR [rax],eax
   14001078c:	and    al,0xf2
   14001078e:	sbb    dh,al
   140010790:	sbb    al,ah
   140010792:	(bad)  
   140010793:	rcl    BYTE PTR [rax+rax*8],1
   140010796:	adc    dh,BYTE PTR [rax+0x11]
   140010799:	(bad)  
   14001079a:	adc    BYTE PTR [rax+0x11],dl
   14001079d:	or     al,BYTE PTR [rax+rax*1]
   1400107a0:	or     dh,BYTE PTR [rdx+rcx*1]
   1400107a3:	add    BYTE PTR [rdx],cl
   1400107a5:	jb     0x1400107ad
   1400107a7:	jo     0x140010761
   1400107a9:	sub    al,BYTE PTR [rax]
   1400107ab:	add    BYTE PTR [rcx],al
   1400107ad:	add    BYTE PTR [rax],al
   1400107af:	add    BYTE PTR [rcx],ah
   1400107b1:	jb     0x1400107b3
   1400107b3:	add    BYTE PTR [rdx+rsi*2+0x0],al
   1400107b7:	add    BYTE PTR [rdx+0xcf],cl
   1400107bd:	add    BYTE PTR [rax],al
   1400107bf:	add    BYTE PTR [rcx],al
   1400107c1:	sbb    DWORD PTR [rdx],ecx
   1400107c3:	add    BYTE PTR [rcx],bl
   1400107c5:	je     0x1400107d4
   1400107c7:	add    BYTE PTR [rcx],bl
   1400107c9:	fs or  al,0x0
   1400107cc:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400107d0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400107d3:	add    BYTE PTR [rcx],bl
   1400107d5:	jb     0x1400107ec
   1400107d7:	rol    BYTE PTR [rcx],0x6
   1400107da:	add    al,BYTE PTR [rax]
   1400107dc:	(bad)  
   1400107dd:	xor    al,BYTE PTR [rdx]
   1400107df:	xor    BYTE PTR [rcx],al
   1400107e1:	add    BYTE PTR [rax],al
   1400107e3:	add    BYTE PTR [rcx],dl
   1400107e5:	(bad)  
   1400107e6:	add    al,BYTE PTR [rax]
   1400107e8:	(bad)  
   1400107e9:	xor    al,BYTE PTR [rdx]
   1400107eb:	xor    BYTE PTR [rax+0x100002a],bh
   1400107f1:	add    BYTE PTR [rax],al
   1400107f3:	add    bh,dh
   1400107f5:	jnp    0x1400107f7
   1400107f7:	add    BYTE PTR [rip+0xffffffffd300007c],cl        # 0x113010879
   1400107fd:	iret   
   1400107fe:	add    BYTE PTR [rax],al
   140010800:	add    BYTE PTR [rax],al
   140010802:	add    BYTE PTR [rax],al
   140010804:	sbb    DWORD PTR [rdi],ebp
   140010806:	or     DWORD PTR [rax],eax
   140010808:	(bad)  
   140010809:	je     0x1400107c0
   14001080b:	add    BYTE PTR [rsi],bl
   14001080d:	fs mov ah,0x0
   140010810:	(bad)  
   140010811:	xor    al,0xb3
   140010813:	add    BYTE PTR [rsi],bl
   140010815:	add    DWORD PTR [rax+0x501000],esi
   14001081b:	add    BYTE PTR [rax],cl
   14001081d:	jne    0x14001081f
   14001081f:	add    BYTE PTR [rax+0x5],dh
   140010822:	add    BYTE PTR [rax],al
   140010824:	adc    DWORD PTR [rdx],ecx
   140010826:	add    al,0x0
   140010828:	or     dh,BYTE PTR [rdi+rax*1]
   14001082b:	add    BYTE PTR [rdx],cl
   14001082d:	xor    al,BYTE PTR [rsi]
   14001082f:	jo     0x1400107e9
   140010831:	sub    al,BYTE PTR [rax]
   140010833:	add    BYTE PTR [rcx],al
   140010835:	add    BYTE PTR [rax],al
   140010837:	add    dl,ch
   140010839:	jle    0x14001083b
   14001083b:	add    BYTE PTR [rcx+0x7f],al
   14001083e:	add    BYTE PTR [rax],al
   140010840:	out    dx,al
   140010841:	iret   
   140010842:	add    BYTE PTR [rax],al
   140010844:	add    BYTE PTR [rax],al
   140010846:	add    BYTE PTR [rax],al
   140010848:	sbb    DWORD PTR [rdi],ebx
   14001084a:	or     BYTE PTR [rax],al
   14001084c:	adc    BYTE PTR [rax+rdx*1],dh
   14001084f:	add    BYTE PTR [rax],dl
   140010851:	jb     0x14001085f
   140010853:	ror    BYTE PTR [rdx],1
   140010855:	ror    BYTE PTR [rax],0x70
   140010858:	(bad)  
   140010859:	(bad)  
   14001085a:	(bad)  
   14001085b:	push   rax
   14001085c:	or     BYTE PTR [rbp+0x0],dh
   14001085f:	add    BYTE PTR [rax],bh
   140010861:	add    BYTE PTR [rax],al
   140010863:	add    BYTE PTR [rcx],dl
   140010865:	sbb    DWORD PTR [rdx],ecx
   140010867:	add    BYTE PTR [rcx],bl
   140010869:	(bad)  
   14001086a:	or     eax,DWORD PTR [rax]
   14001086c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140010870:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140010874:	sbb    DWORD PTR [rax+rcx*1],esi
   140010877:	add    BYTE PTR [rcx],bl
   140010879:	push   rdx
   14001087a:	adc    eax,0x2ab8d0
   14001087f:	add    BYTE PTR [rcx],al
   140010881:	add    BYTE PTR [rax],al
   140010883:	add    BYTE PTR [rax-0x7d],dl
   140010886:	add    BYTE PTR [rax],al
   140010888:	cld    
   140010889:	add    DWORD PTR [rax],0x0
   14001088c:	out    dx,al
   14001088d:	iret   
	...
   140010896:	add    BYTE PTR [rax],al
   140010898:	add    DWORD PTR [rax],eax
   14001089a:	add    BYTE PTR [rax],al
   14001089c:	sbb    DWORD PTR [rsi],ebx
   14001089e:	or     BYTE PTR [rax],al
   1400108a0:	setb   BYTE PTR [rbx]
   1400108a3:	loopne 0x1400108ae
   1400108a5:	rol    BYTE PTR [rdi],1
   1400108a7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143610d1e
   1400108ae:	add    dh,BYTE PTR [rax]
   1400108b0:	or     BYTE PTR [rbp+0x0],dh
   1400108b3:	add    BYTE PTR [rax+0x0],cl
   1400108b6:	add    BYTE PTR [rax],al
   1400108b8:	add    DWORD PTR [rax],ebx
   1400108ba:	or     BYTE PTR [rax],al
   1400108bc:	sbb    BYTE PTR [rax+rcx*1+0x0],ah
   1400108c0:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   1400108c4:	sbb    BYTE PTR [rsi+rax*1],dh
   1400108c7:	add    BYTE PTR [rax],bl
   1400108c9:	xor    dl,BYTE PTR [rax+rsi*2]
   1400108cc:	sbb    DWORD PTR [rax],esi
   1400108ce:	or     eax,DWORD PTR [rax]
   1400108d0:	(bad)  
   1400108d1:	xor    al,0x64
   1400108d3:	add    BYTE PTR [rdi],bl
   1400108d5:	add    DWORD PTR [rdx+0x0],ebx
   1400108d8:	adc    al,dh
   1400108da:	(bad)  
   1400108db:	loopne 0x1400108e9
   1400108dd:	ror    BYTE PTR [rdx],1
   1400108df:	ror    BYTE PTR [rax],0x70
   1400108e2:	(bad)  
   1400108e3:	(bad)  
   1400108e4:	(bad)  
   1400108e5:	push   rax
   1400108e6:	add    BYTE PTR [rax],al
   1400108e8:	or     BYTE PTR [rbp+0x0],dh
   1400108eb:	add    al,cl
   1400108ed:	add    al,BYTE PTR [rax]
   1400108ef:	add    BYTE PTR [rcx],dl
   1400108f1:	adc    eax,0x34150008
   1400108f6:	or     eax,DWORD PTR [rax]
   1400108f8:	adc    eax,0xfe01132
   1400108fd:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a7114c3
   140010903:	(bad)  
   140010904:	mov    eax,0x100002a
   140010909:	add    BYTE PTR [rax],al
   14001090b:	add    BYTE PTR [rcx-0x1affff6a],dh
   140010911:	xchg   esi,eax
   140010912:	add    BYTE PTR [rax],al
   140010914:	repnz (bad) 
   140010916:	add    BYTE PTR [rax],al
   140010918:	add    BYTE PTR [rax],al
   14001091a:	add    BYTE PTR [rax],al
   14001091c:	sbb    DWORD PTR [rsi],esi
   14001091e:	or     eax,DWORD PTR [rax]
   140010920:	and    eax,0x25037134
   140010925:	add    DWORD PTR [rsi+0x3],esp
   140010928:	adc    al,dh
   14001092a:	(bad)  
   14001092b:	loopne 0x140010939
   14001092d:	ror    BYTE PTR [rdx],1
   14001092f:	ror    BYTE PTR [rax],0x70
   140010932:	(bad)  
   140010933:	(bad)  
   140010934:	(bad)  
   140010935:	push   rax
   140010936:	add    BYTE PTR [rax],al
   140010938:	or     BYTE PTR [rbp+0x0],dh
   14001093b:	add    BYTE PTR [rax],ah
   14001093d:	sbb    eax,DWORD PTR [rax]
   14001093f:	add    BYTE PTR [rcx],dl
   140010941:	adc    eax,0x34150008
   140010946:	or     eax,DWORD PTR [rax]
   140010948:	adc    eax,0xfe01132
   14001094d:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a711513
   140010953:	(bad)  
   140010954:	mov    eax,0x100002a
   140010959:	add    BYTE PTR [rax],al
   14001095b:	add    ch,dh
   14001095d:	sahf   
   14001095e:	add    BYTE PTR [rax],al
   140010960:	(bad)  
   140010961:	lahf   
   140010962:	add    BYTE PTR [rax],al
   140010964:	repnz (bad) 
   140010966:	add    BYTE PTR [rax],al
   140010968:	add    BYTE PTR [rax],al
   14001096a:	add    BYTE PTR [rax],al
   14001096c:	sbb    DWORD PTR [rcx],esp
   14001096e:	or     BYTE PTR [rax],al
   140010970:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   140010974:	adc    dh,BYTE PTR [rsi+rcx*1]
   140010977:	add    BYTE PTR [rdx],dl
   140010979:	jb     0x140010989
   14001097b:	ror    BYTE PTR [rax+rsi*2],0xb
   14001097f:	(bad)  
   140010980:	or     BYTE PTR [rbp+0x0],dh
   140010983:	add    BYTE PTR [rax],dh
   140010985:	add    BYTE PTR [rax],al
   140010987:	add    BYTE PTR [rcx],al
   140010989:	sbb    ecx,DWORD PTR [rdx]
   14001098b:	add    BYTE PTR [rbx],bl
   14001098d:	(bad)  
   14001098e:	ltr    WORD PTR [rbx]
   140010991:	je     0x1400109a1
   140010993:	add    BYTE PTR [rbx],bl
   140010995:	fs or  eax,0xc341b00
   14001099b:	add    BYTE PTR [rbx],bl
   14001099d:	xchg   edx,eax
   14001099e:	adc    al,0x50
   1400109a0:	add    DWORD PTR [rsi],eax
   1400109a2:	add    al,BYTE PTR [rax]
   1400109a4:	(bad)  
   1400109a5:	jb     0x1400109a9
   1400109a7:	xor    BYTE PTR [rcx],al
   1400109a9:	sbb    BYTE PTR [rdx],cl
   1400109ab:	add    BYTE PTR [rax],bl
   1400109ad:	or     al,BYTE PTR fs:[rax]
   1400109b0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400109b4:	sbb    BYTE PTR [rax+rcx*1],dh
   1400109b7:	add    BYTE PTR [rax],bl
   1400109b9:	xor    dl,BYTE PTR [rax+rdx*8]
   1400109bc:	adc    al,al
   1400109be:	adc    BYTE PTR [rax+0x19],dh
   1400109c1:	xor    BYTE PTR [rbx],cl
   1400109c3:	add    BYTE PTR [rdi],bl
   1400109c5:	xor    al,0xa6
   1400109c7:	add    BYTE PTR [rdi],bl
   1400109c9:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   1400109d0:	or     al,0xd0
   1400109d2:	or     al,al
   1400109d4:	or     BYTE PTR [rax+0x7],dh
   1400109d7:	(bad)  
   1400109d8:	(bad)  
   1400109d9:	push   rax
   1400109da:	add    BYTE PTR [rax],al
   1400109dc:	or     BYTE PTR [rbp+0x0],dh
   1400109df:	add    al,dl
   1400109e1:	add    al,0x0
   1400109e3:	add    BYTE PTR [rcx],al
   1400109e5:	adc    al,0x8
   1400109e7:	add    BYTE PTR [rsp+riz*2],dl
   1400109ea:	or     BYTE PTR [rax],al
   1400109ec:	adc    al,0x54
   1400109ee:	(bad)  
   1400109ef:	add    BYTE PTR [rsp+rsi*1],dl
   1400109f2:	(bad)  
   1400109f3:	add    BYTE PTR [rdx+rsi*1],dl
   1400109f6:	adc    BYTE PTR [rax+0x1],dh
   1400109f9:	clts   
   1400109fb:	add    BYTE PTR [rdi],cl
   1400109fd:	push   rsp
   1400109fe:	(bad)  
   1400109ff:	add    BYTE PTR [rdi],cl
   140010a01:	xor    al,0x6
   140010a03:	add    BYTE PTR [rdi],cl
   140010a05:	xor    cl,BYTE PTR [rbx]
   140010a07:	jo     0x140010a1a
   140010a09:	sbb    DWORD PTR [rdx],ecx
   140010a0b:	add    BYTE PTR [rcx],bl
   140010a0d:	(bad)  
   140010a0e:	or     DWORD PTR [rax],eax
   140010a10:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140010a14:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140010a18:	sbb    DWORD PTR [rsi+rax*1],esi
   140010a1b:	add    BYTE PTR [rcx],bl
   140010a1d:	xor    dl,BYTE PTR [rip+0x2ab8e0]        # 0x1402bc303
   140010a23:	add    BYTE PTR [rcx],al
   140010a25:	add    BYTE PTR [rax],al
   140010a27:	add    dl,bl
   140010a29:	mov    dl,0x0
   140010a2b:	add    bl,bh
   140010a2d:	mov    dl,0x0
   140010a2f:	add    BYTE PTR [rcx],cl
   140010a31:	rol    BYTE PTR [rax],1
   140010a33:	add    BYTE PTR [rax],al
   140010a35:	add    BYTE PTR [rax],al
   140010a37:	add    BYTE PTR [rcx],dl
   140010a39:	sbb    DWORD PTR [rdx],ecx
   140010a3b:	add    BYTE PTR [rcx],bl
   140010a3d:	je     0x140010a4d
   140010a3f:	add    BYTE PTR [rcx],bl
   140010a41:	fs or  eax,0xc341900
   140010a47:	add    BYTE PTR [rcx],bl
   140010a49:	jb     0x140010a60
   140010a4b:	loopne 0x140010a60
   140010a4d:	rcl    BYTE PTR [rcx],1
   140010a4f:	sar    BYTE PTR [rax+0x200002a],0x0
   140010a56:	add    BYTE PTR [rax],al
   140010a58:	stc    
   140010a59:	mov    bl,0x0
   140010a5b:	add    BYTE PTR [rax],ah
   140010a5d:	mov    ah,0x0
   140010a5f:	add    BYTE PTR [rax+rdx*8],ah
   140010a62:	add    BYTE PTR [rax],al
   140010a64:	add    BYTE PTR [rax],al
   140010a66:	add    BYTE PTR [rax],al
   140010a68:	movabs al,ds:0x440000b5410000b3
   140010a71:	rol    BYTE PTR [rax],1
   140010a73:	add    BYTE PTR [rax],al
   140010a75:	add    BYTE PTR [rax],al
   140010a77:	add    BYTE PTR [rcx],dl
   140010a79:	adc    DWORD PTR [rsi],eax
   140010a7b:	add    BYTE PTR [rcx],dl
   140010a7d:	xor    al,0xa
   140010a7f:	add    BYTE PTR [rcx],dl
   140010a81:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a711647
   140010a87:	(bad)  
   140010a88:	mov    eax,0x100002a
   140010a8d:	add    BYTE PTR [rax],al
   140010a8f:	add    bh,cl
   140010a91:	mov    ch,0x0
   140010a93:	add    BYTE PTR [rbx],dl
   140010a95:	mov    dh,0x0
   140010a97:	add    BYTE PTR [rsi-0x31],dl
   140010a9a:	add    BYTE PTR [rax],al
   140010a9c:	add    BYTE PTR [rax],al
   140010a9e:	add    BYTE PTR [rax],al
   140010aa0:	add    DWORD PTR [rdi],ecx
   140010aa2:	(bad)  
   140010aa3:	add    BYTE PTR [rdi],cl
   140010aa5:	fs (bad) 
   140010aa7:	add    BYTE PTR [rdi],cl
   140010aa9:	xor    al,0x6
   140010aab:	add    BYTE PTR [rdi],cl
   140010aad:	xor    cl,BYTE PTR [rbx]
   140010aaf:	jo     0x140010ab2
   140010ab1:	sbb    eax,0x741d000c
   140010ab6:	or     eax,DWORD PTR [rax]
   140010ab8:	sbb    eax,0x1d000a64
   140010abd:	push   rsp
   140010abe:	or     DWORD PTR [rax],eax
   140010ac0:	sbb    eax,0x1d000834
   140010ac5:	xor    bl,BYTE PTR [rcx]
   140010ac7:	lock (bad) 
   140010ac9:	rcl    BYTE PTR [rip+0x20501c0],1        # 0x142060c8f
   140010acf:	add    BYTE PTR [rip+0x1000134],al        # 0x141010c09
   140010ad5:	adc    al,BYTE PTR [rax+rax*1]
   140010ad8:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   140010adf:	push   rax
   140010ae0:	add    DWORD PTR [rcx+rax*1],eax
   140010ae3:	add    BYTE PTR [rdx+rdx*1],al
   140010ae6:	add    BYTE PTR [rax],al
   140010ae8:	add    DWORD PTR [rsi],ecx
   140010aea:	add    al,BYTE PTR [rax]
   140010aec:	(bad)  
   140010aed:	xor    cl,BYTE PTR [rdx]
   140010aef:	xor    BYTE PTR [rcx],bl
   140010af1:	sub    eax,0x741f450d
   140010af6:	adc    al,BYTE PTR [rax]
   140010af8:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140010afc:	(bad)  
   140010afd:	xor    al,0x10
   140010aff:	add    BYTE PTR [rbx],dl
   140010b01:	rex.XB (bad) 
   140010b03:	xchg   edx,eax
   140010b04:	or     dh,al
   140010b06:	or     al,ah
   140010b08:	(bad)  
   140010b09:	rol    BYTE PTR [rax+rax*8],1
   140010b0c:	add    dl,BYTE PTR [rax+0x0]
   140010b0f:	add    BYTE PTR [rax],cl
   140010b11:	jne    0x140010b13
   140010b13:	add    BYTE PTR [rax+0x0],cl
   140010b16:	add    BYTE PTR [rax],al
   140010b18:	add    DWORD PTR [rdi],ecx
   140010b1a:	(bad)  
   140010b1b:	add    BYTE PTR [rdi],cl
   140010b1d:	adc    DWORD PTR fs:[rax],eax
   140010b20:	sysenter 
   140010b22:	adc    BYTE PTR [rax],al
   140010b24:	psrld  mm1,QWORD PTR [rbx]
   140010b27:	jo     0x140010b42
   140010b29:	sub    eax,0x741f350d
   140010b2e:	adc    BYTE PTR [rax],al
   140010b30:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140010b34:	(bad)  
   140010b35:	xor    al,0xe
   140010b37:	add    BYTE PTR [rbx],dl
   140010b39:	xor    ecx,DWORD PTR [rsi]
   140010b3b:	jb     0x140010b47
   140010b3d:	lock or al,ah
   140010b40:	(bad)  
   140010b41:	rol    BYTE PTR [rax+rax*8],1
   140010b44:	add    dl,BYTE PTR [rax+0x0]
   140010b47:	add    BYTE PTR [rax],cl
   140010b49:	jne    0x140010b4b
   140010b4b:	add    BYTE PTR [rax],dh
   140010b4d:	add    BYTE PTR [rax],al
   140010b4f:	add    BYTE PTR [rcx],al
   140010b51:	clts   
   140010b53:	add    BYTE PTR [rdi],cl
   140010b55:	str    WORD PTR fs:[rdi]
   140010b59:	xor    al,0xe
   140010b5b:	add    BYTE PTR [rdi],cl
   140010b5d:	mov    dl,0xb
   140010b5f:	jo     0x140010b62
   140010b61:	adc    eax,0x34150006
   140010b66:	adc    BYTE PTR [rax],al
   140010b68:	adc    eax,0xd700eb2
   140010b6d:	(bad)  
   140010b6e:	or     al,0x50
   140010b70:	add    DWORD PTR [rcx],ecx
   140010b72:	add    DWORD PTR [rax],eax
   140010b74:	or     DWORD PTR [rdx+0x0],esp
   140010b77:	add    BYTE PTR [rcx],al
   140010b79:	adc    cl,BYTE PTR [rax]
   140010b7b:	add    BYTE PTR [rdx],dl
   140010b7d:	push   rsp
   140010b7e:	or     al,BYTE PTR [rax]
   140010b80:	adc    dh,BYTE PTR [rax+rcx*1]
   140010b83:	add    BYTE PTR [rdx],dl
   140010b85:	xor    cl,BYTE PTR [rsi]
   140010b87:	ror    BYTE PTR [rax+rsi*2],0xb
   140010b8b:	(bad)  
   140010b8c:	add    DWORD PTR [rdi],ecx
   140010b8e:	(bad)  
   140010b8f:	add    BYTE PTR [rdi],cl
   140010b91:	or     DWORD PTR fs:[rax],eax
   140010b94:	sysenter 
   140010b96:	or     BYTE PTR [rax],al
   140010b98:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140010b9b:	jo     0x140010b9d
   140010b9d:	add    BYTE PTR [rax],al
   140010b9f:	add    BYTE PTR [rcx],al
   140010ba1:	add    BYTE PTR [rax],al
   140010ba3:	add    BYTE PTR [rax],al
   140010ba5:	add    BYTE PTR [rax],al
   140010ba7:	add    BYTE PTR [rcx],al
   140010ba9:	add    BYTE PTR [rax],al
   140010bab:	add    BYTE PTR [rax],al
   140010bad:	add    BYTE PTR [rax],al
   140010baf:	add    BYTE PTR [rcx],al
   140010bb1:	add    BYTE PTR [rax],al
   140010bb3:	add    BYTE PTR [rcx],al
   140010bb5:	add    al,0x1
   140010bb7:	add    BYTE PTR [rdx+rax*4],al
   140010bba:	add    BYTE PTR [rax],al
   140010bbc:	add    DWORD PTR [rdi],ecx
   140010bbe:	(bad)  
   140010bbf:	add    BYTE PTR [rdi],cl
   140010bc1:	or     eax,DWORD PTR fs:[rax]
   140010bc4:	sysenter 
   140010bc6:	or     al,BYTE PTR [rax]
   140010bc8:	(bad)  
   140010bca:	or     esi,DWORD PTR [rax+0x19]
   140010bcd:	xor    al,BYTE PTR [rax+rax*1]
   140010bd0:	and    BYTE PTR [rcx],al
   140010bd2:	mov    DWORD PTR [rax],eax
   140010bd4:	sbb    DWORD PTR [rax+0x18],esi
   140010bd7:	xor    BYTE PTR [rax],cl
   140010bd9:	jne    0x140010bdb
   140010bdb:	add    BYTE PTR [rax],dh
   140010bdd:	add    al,0x0
   140010bdf:	add    BYTE PTR [rcx],bl
   140010be1:	and    eax,0x74170007
   140010be6:	xor    al,0x0
   140010be8:	(bad)  
   140010be9:	xor    al,0x33
   140010beb:	add    BYTE PTR [rdi],dl
   140010bed:	add    DWORD PTR [rax],esi
   140010bef:	add    BYTE PTR [rbx],cl
   140010bf1:	push   rax
   140010bf2:	add    BYTE PTR [rax],al
   140010bf4:	or     BYTE PTR [rbp+0x0],dh
   140010bf7:	add    BYTE PTR [rax+0x1],dh
   140010bfa:	add    BYTE PTR [rax],al
   140010bfc:	add    DWORD PTR [rdi],ebx
   140010bfe:	or     al,0x0
   140010c00:	(bad)  
   140010c01:	je     0x140010c14
   140010c03:	add    BYTE PTR [rdi],bl
   140010c05:	adc    BYTE PTR fs:[rax],al
   140010c08:	(bad)  
   140010c09:	xor    al,0xf
   140010c0b:	add    BYTE PTR [rdi],bl
   140010c0d:	jb     0x140010c27
   140010c0f:	lock (bad) 
   140010c11:	loopne 0x140010c27
   140010c13:	rcl    BYTE PTR [rdx],1
   140010c15:	rcl    BYTE PTR [rax],0x50
   140010c18:	sbb    DWORD PTR [rdx],esi
   140010c1a:	or     eax,0x75742000
   140010c1f:	add    BYTE PTR [rax],ah
   140010c21:	fs je  0x140010c24
   140010c24:	and    BYTE PTR [rbx+rsi*2+0x0],dl
   140010c28:	and    BYTE PTR [rdx+rsi*2],dh
   140010c2b:	add    BYTE PTR [rax],ah
   140010c2d:	add    DWORD PTR [rsi+0x0],ebp
   140010c30:	sbb    eax,esp
   140010c32:	(bad)  
   140010c33:	rcl    BYTE PTR [rip+0x80000c0],1        # 0x148010cf9
   140010c39:	jne    0x140010c3b
   140010c3b:	add    BYTE PTR [rax+0x3],ah
   140010c3e:	add    BYTE PTR [rax],al
   140010c40:	add    DWORD PTR [rcx+rax*1],eax
   140010c43:	add    BYTE PTR [rdx+rax*2],al
   140010c46:	add    BYTE PTR [rax],al
   140010c48:	mov    BYTE PTR [rcx+rax*1],cl
	...
   140010c53:	add    al,cl
   140010c55:	adc    BYTE PTR [rcx],al
   140010c57:	add    BYTE PTR [rax],al
   140010c59:	loopne 0x140010c5b
   140010c5b:	add    BYTE PTR [rax],dl
   140010c5d:	sgdt   [rax]
	...
   140010c68:	loop   0x140010c7a
   140010c6a:	add    DWORD PTR [rax],eax
   140010c6c:	mov    dl,ah
	...
   140010c86:	add    BYTE PTR [rax],al
   140010c88:	and    BYTE PTR [rdi],cl
   140010c8a:	add    DWORD PTR [rax],eax
   140010c8c:	add    BYTE PTR [rax],al
   140010c8e:	add    BYTE PTR [rax],al
   140010c90:	sgdt   cs:[rax]
   140010c94:	add    BYTE PTR [rax],al
   140010c96:	add    BYTE PTR [rax],al
   140010c98:	rex sgdt [rax]
   140010c9c:	add    BYTE PTR [rax],al
   140010c9e:	add    BYTE PTR [rax],al
   140010ca0:	pop    rdx
   140010ca1:	sgdt   [rax]
   140010ca4:	add    BYTE PTR [rax],al
   140010ca6:	add    BYTE PTR [rax],al
   140010ca8:	push   0x10f
   140010cad:	add    BYTE PTR [rax],al
   140010caf:	add    BYTE PTR [rdx+0xf],bh
   140010cb2:	add    DWORD PTR [rax],eax
   140010cb4:	add    BYTE PTR [rax],al
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	mov    cs,WORD PTR [rdi]
   140010cba:	add    DWORD PTR [rax],eax
   140010cbc:	add    BYTE PTR [rax],al
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010cc1:	sgdt   [rax]
   140010cc4:	add    BYTE PTR [rax],al
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	ror    BYTE PTR [rdi],0x1
   140010ccb:	add    BYTE PTR [rax],al
   140010ccd:	add    BYTE PTR [rax],al
   140010ccf:	add    ah,bl
   140010cd1:	sgdt   [rax]
   140010cd4:	add    BYTE PTR [rax],al
   140010cd6:	add    BYTE PTR [rax],al
   140010cd8:	repnz sgdt [rax]
   140010cdc:	add    BYTE PTR [rax],al
   140010cde:	add    BYTE PTR [rax],al
   140010ce0:	or     BYTE PTR [rax],dl
   140010ce2:	add    DWORD PTR [rax],eax
   140010ce4:	add    BYTE PTR [rax],al
   140010ce6:	add    BYTE PTR [rax],al
   140010ce8:	and    al,0x10
   140010cea:	add    DWORD PTR [rax],eax
   140010cec:	add    BYTE PTR [rax],al
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	cmp    dl,BYTE PTR [rax]
   140010cf2:	add    DWORD PTR [rax],eax
   140010cf4:	add    BYTE PTR [rax],al
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	rex.WRX adc BYTE PTR [rcx],r8b
   140010cfb:	add    BYTE PTR [rax],al
   140010cfd:	add    BYTE PTR [rax],al
   140010cff:	add    BYTE PTR [rsi+0x10],bl
   140010d02:	add    DWORD PTR [rax],eax
   140010d04:	add    BYTE PTR [rax],al
   140010d06:	add    BYTE PTR [rax],al
   140010d08:	outs   dx,BYTE PTR ds:[rsi]
   140010d09:	adc    BYTE PTR [rcx],al
   140010d0b:	add    BYTE PTR [rax],al
   140010d0d:	add    BYTE PTR [rax],al
   140010d0f:	add    BYTE PTR [rax+0x110],al
   140010d15:	add    BYTE PTR [rax],al
   140010d17:	add    BYTE PTR [rax+0x110],dl
   140010d1d:	add    BYTE PTR [rax],al
   140010d1f:	add    BYTE PTR [rax+0x110],ch
   140010d25:	add    BYTE PTR [rax],al
   140010d27:	add    BYTE PTR [rdx+0x110],bh
   140010d2d:	add    BYTE PTR [rax],al
   140010d2f:	add    dh,ch
   140010d31:	adc    BYTE PTR [rcx],al
   140010d33:	add    BYTE PTR [rax],al
   140010d35:	add    BYTE PTR [rax],al
   140010d37:	add    BYTE PTR [rdx],al
   140010d39:	adc    DWORD PTR [rcx],eax
   140010d3b:	add    BYTE PTR [rax],al
   140010d3d:	add    BYTE PTR [rax],al
   140010d3f:	add    BYTE PTR [rdx],dl
   140010d41:	adc    DWORD PTR [rcx],eax
   140010d43:	add    BYTE PTR [rax],al
   140010d45:	add    BYTE PTR [rax],al
   140010d47:	add    BYTE PTR [rsi],bl
   140010d49:	adc    DWORD PTR [rcx],eax
   140010d4b:	add    BYTE PTR [rax],al
   140010d4d:	add    BYTE PTR [rax],al
   140010d4f:	add    BYTE PTR [rdx],ch
   140010d51:	adc    DWORD PTR [rcx],eax
   140010d53:	add    BYTE PTR [rax],al
   140010d55:	add    BYTE PTR [rax],al
   140010d57:	add    BYTE PTR [rcx+rdx*1],bh
   140010d5a:	add    DWORD PTR [rax],eax
   140010d5c:	add    BYTE PTR [rax],al
   140010d5e:	add    BYTE PTR [rax],al
   140010d60:	rex.WRX adc QWORD PTR [rcx],r8
   140010d63:	add    BYTE PTR [rax],al
   140010d65:	add    BYTE PTR [rax],al
   140010d67:	add    BYTE PTR [rax+0x11],ah
   140010d6a:	add    DWORD PTR [rax],eax
   140010d6c:	add    BYTE PTR [rax],al
   140010d6e:	add    BYTE PTR [rax],al
   140010d70:	je     0x140010d83
   140010d72:	add    DWORD PTR [rax],eax
   140010d74:	add    BYTE PTR [rax],al
   140010d76:	add    BYTE PTR [rax],al
   140010d78:	nop
   140010d79:	adc    DWORD PTR [rcx],eax
   140010d7b:	add    BYTE PTR [rax],al
   140010d7d:	add    BYTE PTR [rax],al
   140010d7f:	add    BYTE PTR [rsi+0x111],ch
   140010d85:	add    BYTE PTR [rax],al
   140010d87:	add    dl,al
   140010d89:	adc    DWORD PTR [rcx],eax
   140010d8b:	add    BYTE PTR [rax],al
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    dh,dl
   140010d91:	adc    DWORD PTR [rcx],eax
   140010d93:	add    BYTE PTR [rax],al
   140010d95:	add    BYTE PTR [rax],al
   140010d97:	add    al,dh
   140010d99:	adc    DWORD PTR [rcx],eax
   140010d9b:	add    BYTE PTR [rax],al
   140010d9d:	add    BYTE PTR [rax],al
   140010d9f:	add    BYTE PTR [rdx+rdx*1],al
   140010da2:	add    DWORD PTR [rax],eax
   140010da4:	add    BYTE PTR [rax],al
   140010da6:	add    BYTE PTR [rax],al
   140010da8:	adc    dl,BYTE PTR [rdx]
   140010daa:	add    DWORD PTR [rax],eax
   140010dac:	add    BYTE PTR [rax],al
   140010dae:	add    BYTE PTR [rax],al
   140010db0:	sub    dl,BYTE PTR [rdx]
   140010db2:	add    DWORD PTR [rax],eax
   140010db4:	add    BYTE PTR [rax],al
   140010db6:	add    BYTE PTR [rax],al
   140010db8:	rex.X adc al,BYTE PTR [rcx]
   140010dbb:	add    BYTE PTR [rax],al
   140010dbd:	add    BYTE PTR [rax],al
   140010dbf:	add    BYTE PTR [rdx+0x12],ch
   140010dc2:	add    DWORD PTR [rax],eax
   140010dc4:	add    BYTE PTR [rax],al
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	jp     0x140010ddc
   140010dca:	add    DWORD PTR [rax],eax
   140010dcc:	add    BYTE PTR [rax],al
   140010dce:	add    BYTE PTR [rax],al
   140010dd0:	xchg   edx,eax
   140010dd1:	adc    al,BYTE PTR [rcx]
   140010dd3:	add    BYTE PTR [rax],al
   140010dd5:	add    BYTE PTR [rax],al
   140010dd7:	add    BYTE PTR [rdx+0x112],ah
   140010ddd:	add    BYTE PTR [rax],al
   140010ddf:	add    BYTE PTR [rax+0x112],dh
   140010de5:	add    BYTE PTR [rax],al
   140010de7:	add    BYTE PTR [rsi+0x112],bh
   140010ded:	add    BYTE PTR [rax],al
   140010def:	add    al,cl
   140010df1:	adc    al,BYTE PTR [rcx]
   140010df3:	add    BYTE PTR [rax],al
   140010df5:	add    BYTE PTR [rax],al
   140010df7:	add    al,bl
   140010df9:	adc    al,BYTE PTR [rcx]
   140010dfb:	add    BYTE PTR [rax],al
   140010dfd:	add    BYTE PTR [rax],al
   140010dff:	add    dh,ch
   140010e01:	adc    al,BYTE PTR [rcx]
   140010e03:	add    BYTE PTR [rax],al
   140010e05:	add    BYTE PTR [rax],al
   140010e07:	add    dl,bh
   140010e09:	adc    al,BYTE PTR [rcx]
   140010e0b:	add    BYTE PTR [rax],al
   140010e0d:	add    BYTE PTR [rax],al
   140010e0f:	add    BYTE PTR [rsi],al
   140010e11:	adc    eax,DWORD PTR [rcx]
   140010e13:	add    BYTE PTR [rax],al
   140010e15:	add    BYTE PTR [rax],al
   140010e17:	add    BYTE PTR [rbx+rdx*1],bl
   140010e1a:	add    DWORD PTR [rax],eax
   140010e1c:	add    BYTE PTR [rax],al
   140010e1e:	add    BYTE PTR [rax],al
   140010e20:	sub    dl,BYTE PTR [rbx]
   140010e22:	add    DWORD PTR [rax],eax
   140010e24:	add    BYTE PTR [rax],al
   140010e26:	add    BYTE PTR [rax],al
   140010e28:	cmp    BYTE PTR [rbx],dl
   140010e2a:	add    DWORD PTR [rax],eax
   140010e2c:	add    BYTE PTR [rax],al
   140010e2e:	add    BYTE PTR [rax],al
   140010e30:	adc    r8d,DWORD PTR [rcx]
   140010e33:	add    BYTE PTR [rax],al
   140010e35:	add    BYTE PTR [rax],al
   140010e37:	add    BYTE PTR [rsi+0x13],dl
   140010e3a:	add    DWORD PTR [rax],eax
   140010e3c:	add    BYTE PTR [rax],al
   140010e3e:	add    BYTE PTR [rax],al
   140010e40:	adc    eax,DWORD PTR fs:[rcx]
   140010e43:	add    BYTE PTR [rax],al
   140010e45:	add    BYTE PTR [rax],al
   140010e47:	add    BYTE PTR [rsi+0x13],dh
   140010e4a:	add    DWORD PTR [rax],eax
   140010e4c:	add    BYTE PTR [rax],al
   140010e4e:	add    BYTE PTR [rax],al
   140010e50:	mov    WORD PTR [rbx],ss
   140010e52:	add    DWORD PTR [rax],eax
   140010e54:	add    BYTE PTR [rax],al
   140010e56:	add    BYTE PTR [rax],al
   140010e58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010e59:	adc    eax,DWORD PTR [rcx]
   140010e5b:	add    BYTE PTR [rax],al
   140010e5d:	add    BYTE PTR [rax],al
   140010e5f:	add    BYTE PTR [rbx+rdx*1+0x1],bh
   140010e66:	add    BYTE PTR [rax],al
   140010e68:	(bad)  
   140010e69:	adc    eax,DWORD PTR [rcx]
   140010e6b:	add    BYTE PTR [rax],al
   140010e6d:	add    BYTE PTR [rax],al
   140010e6f:	add    al,dh
   140010e71:	adc    eax,DWORD PTR [rcx]
   140010e73:	add    BYTE PTR [rax],al
   140010e75:	add    BYTE PTR [rax],al
   140010e77:	add    BYTE PTR [rax],al
   140010e79:	adc    al,0x1
   140010e7b:	add    BYTE PTR [rax],al
   140010e7d:	add    BYTE PTR [rax],al
   140010e7f:	add    BYTE PTR [rsi],dl
   140010e81:	adc    al,0x1
   140010e83:	add    BYTE PTR [rax],al
   140010e85:	add    BYTE PTR [rax],al
   140010e87:	add    BYTE PTR [rax],dh
   140010e89:	adc    al,0x1
   140010e8b:	add    BYTE PTR [rax],al
   140010e8d:	add    BYTE PTR [rax],al
   140010e8f:	add    BYTE PTR [rax],bh
   140010e91:	adc    al,0x1
   140010e93:	add    BYTE PTR [rax],al
   140010e95:	add    BYTE PTR [rax],al
   140010e97:	add    BYTE PTR [rsi+0x14],al
   140010e9a:	add    DWORD PTR [rax],eax
   140010e9c:	add    BYTE PTR [rax],al
   140010e9e:	add    BYTE PTR [rax],al
   140010ea0:	push   rdx
   140010ea1:	adc    al,0x1
   140010ea3:	add    BYTE PTR [rax],al
   140010ea5:	add    BYTE PTR [rax],al
   140010ea7:	add    BYTE PTR [rsp+rdx*1+0x1],bl
   140010eab:	add    BYTE PTR [rax],al
   140010ead:	add    BYTE PTR [rax],al
   140010eaf:	add    BYTE PTR [rax+0x14],ch
   140010eb2:	add    DWORD PTR [rax],eax
   140010eb4:	add    BYTE PTR [rax],al
   140010eb6:	add    BYTE PTR [rax],al
   140010eb8:	jp     0x140010ece
   140010eba:	add    DWORD PTR [rax],eax
   140010ebc:	add    BYTE PTR [rax],al
   140010ebe:	add    BYTE PTR [rax],al
   140010ec0:	xchg   BYTE PTR [rcx+rax*1],dl
   140010ec3:	add    BYTE PTR [rax],al
   140010ec5:	add    BYTE PTR [rax],al
   140010ec7:	add    BYTE PTR [rsi+0x114],dl
   140010ecd:	add    BYTE PTR [rax],al
   140010ecf:	add    BYTE PTR [rax+0x114],ch
   140010ed5:	add    BYTE PTR [rax],al
   140010ed7:	add    BYTE PTR [rax+0x114],bh
   140010edd:	add    BYTE PTR [rax],al
   140010edf:	add    ah,cl
   140010ee1:	adc    al,0x1
   140010ee3:	add    BYTE PTR [rax],al
   140010ee5:	add    BYTE PTR [rax],al
   140010ee7:	add    dl,bl
   140010ee9:	adc    al,0x1
   140010eeb:	add    BYTE PTR [rax],al
   140010eed:	add    BYTE PTR [rax],al
   140010eef:	add    dl,ch
   140010ef1:	adc    al,0x1
   140010ef3:	add    BYTE PTR [rax],al
   140010ef5:	add    BYTE PTR [rax],al
   140010ef7:	add    ah,bh
   140010ef9:	adc    al,0x1
   140010efb:	add    BYTE PTR [rax],al
   140010efd:	add    BYTE PTR [rax],al
   140010eff:	add    BYTE PTR [rdx*1+0x1],cl
	...
   140010f0e:	add    BYTE PTR [rax],al
   140010f10:	(bad)  
   140010f11:	adc    BYTE PTR [rcx],al
	...
   140010f1f:	add    BYTE PTR [rdi],bl
   140010f21:	add    DWORD PTR [rbp+0x78],eax
   140010f24:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140010f2c:	jae    0x140010f2e
   140010f2e:	lea    eax,[rcx]
   140010f30:	rex.RXB
   140010f31:	gs je  0x140010f77
   140010f34:	outs   dx,DWORD PTR ds:[rsi]
   140010f35:	ins    DWORD PTR es:[rdi],dx
   140010f36:	ins    DWORD PTR es:[rdi],dx
   140010f37:	(bad)  
   140010f38:	outs   dx,BYTE PTR ds:[rsi]
   140010f39:	imul   r13,QWORD PTR fs:[rsi+0x65],0x47e0057
   140010f42:	push   rbx
   140010f43:	gs je  0x140010f8f
   140010f46:	outs   dx,BYTE PTR ds:[rsi]
   140010f47:	outs   dx,WORD PTR ds:[rsi]
   140010f49:	jb     0x140010fb8
   140010f4b:	(bad)  
   140010f4c:	je     0x140010fb7
   140010f4e:	outs   dx,DWORD PTR ds:[rsi]
   140010f4f:	outs   dx,BYTE PTR ds:[rsi]
   140010f50:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140010f52:	(bad)  
   140010f53:	rex.WRXB (bad) 
   140010f55:	push   0x65
   140010f57:	movsxd esi,DWORD PTR [rax+rax*1+0x68]
   140010f5b:	add    DWORD PTR [rsi+0x72],eax
   140010f5e:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140010f68:	test   al,0x0
   140010f6a:	rex.XB jb 0x140010fd2
   140010f6d:	(bad)  
   140010f6e:	je     0x140010fd5
   140010f70:	push   rax
   140010f71:	jb     0x140010fe2
   140010f73:	movsxd esp,DWORD PTR [rbp+0x73]
   140010f76:	jae    0x140010fcf
   140010f78:	add    BYTE PTR [rax],al
   140010f7a:	mov    BYTE PTR [rcx],0x47
   140010f7d:	gs je  0x140010fc3
   140010f80:	jne    0x140010ff4
   140010f82:	jb     0x140010fe9
   140010f84:	outs   dx,BYTE PTR ds:[rsi]
   140010f85:	je     0x140010fd7
   140010f87:	jb     0x140010ff8
   140010f89:	movsxd esp,DWORD PTR [rbp+0x73]
   140010f8c:	jae    0x140010f8e
   140010f8e:	or     BYTE PTR [rip+0x74696157],al        # 0x1b46a70eb
   140010f94:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140010f96:	jb     0x140010feb
   140010f98:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140010f9f:	push   0x65
   140010fa1:	movsxd esi,DWORD PTR [rax+rax*1+0x6d]
   140010fa5:	add    DWORD PTR [rdi+0x65],eax
   140010fa8:	outs   dx,BYTE PTR ds:[rsi]
   140010fa9:	gs jb  0x14001100d
   140010fac:	je     0x140011013
   140010fae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010fb0:	outs   dx,BYTE PTR ds:[rsi]
   140010fb1:	jae    0x140011022
   140010fb3:	ins    BYTE PTR es:[rdi],dx
   140010fb4:	gs rex.XB je 0x14001102a
   140010fb8:	ins    BYTE PTR es:[rdi],dx
   140010fb9:	rex.RB jbe 0x140011021
   140010fbc:	outs   dx,BYTE PTR ds:[rsi]
   140010fbd:	je     0x140010fbf
   140010fbf:	add    BYTE PTR [rsi],dl
   140010fc1:	add    BYTE PTR [rcx+0x73],al
   140010fc4:	jae    0x14001102f
   140010fc6:	outs   dx,BYTE PTR ds:[esi]
   140010fc8:	push   rax
   140010fc9:	jb     0x14001103a
   140010fcb:	movsxd esp,DWORD PTR [rbp+0x73]
   140010fce:	jae    0x140011024
   140010fd0:	outs   dx,DWORD PTR ds:[rsi]
   140010fd1:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140010fd3:	(bad)  
   140010fd4:	rex.WRXB (bad) 
   140010fd6:	push   0x65
   140010fd8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140010fdc:	out    0x1,al
   140010fde:	rex.RXB
   140010fdf:	gs je  0x140011027
   140010fe2:	js     0x14001104d
   140010fe4:	je     0x140011029
   140010fe6:	outs   dx,DWORD PTR ds:[rsi]
   140010fe7:	fs gs push rax
   140010fea:	jb     0x14001105b
   140010fec:	movsxd esp,DWORD PTR [rbp+0x73]
   140010fef:	jae    0x140010ff1
   140010ff1:	add    BYTE PTR [rdx],bl
   140010ff3:	add    al,BYTE PTR [rdi+0x65]
   140010ff6:	je     0x140011045
   140010ff8:	outs   dx,DWORD PTR ds:[rsi]
   140010ff9:	fs jne 0x140011068
   140010ffc:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140011006:	add    BYTE PTR [rax],al
   140011008:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011009:	add    edx,DWORD PTR [rcx+0x75]
   14001100c:	gs jb  0x140011088
   14001100f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011011:	outs   dx,WORD PTR ds:[rsi]
   140011013:	jb     0x140011082
   140011015:	(bad)  
   140011016:	je     0x140011081
   140011018:	outs   dx,DWORD PTR ds:[rsi]
   140011019:	outs   dx,BYTE PTR ds:[rsi]
   14001101a:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14001101c:	(bad)  
   14001101d:	rex.WRXB (bad) 
   14001101f:	push   0x65
   140011021:	movsxd esi,DWORD PTR [rax+rax*1+0x69]
   140011025:	add    ecx,DWORD PTR [rbp+0x75]
   140011028:	ins    BYTE PTR es:[rdi],dx
   140011029:	je     0x140011094
   14001102b:	rex.X jns 0x1400110a2
   14001102e:	gs push rsp
   140011030:	outs   dx,DWORD PTR ds:[rsi]
   140011031:	push   rdi
   140011032:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001103a:	xchg   ebp,eax
   14001103b:	add    BYTE PTR [rbx+0x72],al
   14001103e:	gs (bad) 
   140011040:	je     0x1400110a7
   140011042:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140011044:	(bad)  
   140011045:	rex.WRXB (bad) 
   140011047:	push   0x65
   140011049:	movsxd esi,DWORD PTR [rcx+rax*2+0x0]
   14001104d:	add    BYTE PTR [rbx+0x2],ch
   140011050:	rex.RXB
   140011051:	gs je  0x1400110a7
   140011054:	je     0x1400110ba
   140011056:	rex.W (bad) 
   140011058:	outs   dx,BYTE PTR ds:[rsi]
   140011059:	fs ins BYTE PTR es:[rdi],dx
   14001105b:	add    BYTE PTR gs:[rax],al
   14001105e:	or     BYTE PTR [rdx],al
   140011060:	rex.RXB
   140011061:	gs je  0x1400110b0
   140011064:	(bad)  
   140011065:	jae    0x1400110db
   140011067:	rex.RB jb 0x1400110dc
   14001106a:	outs   dx,DWORD PTR ds:[rsi]
   14001106b:	jb     0x14001106d
   14001106d:	add    BYTE PTR [rdx+rax*1+0x47],cl
   140011071:	gs je  0x1400110c4
   140011074:	jb     0x1400110e5
   140011076:	movsxd eax,DWORD PTR [rcx+0x64]
   140011079:	fs jb  0x1400110e1
   14001107c:	jae    0x1400110f1
   14001107e:	add    BYTE PTR [rax],al
   140011080:	add    ecx,DWORD PTR ds:[rdi+rbp*2+0x61]
   140011085:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   14001108e:	add    BYTE PTR [rax],al
   140011090:	cmp    eax,DWORD PTR [rbx+rdx*2]
   140011093:	gs je  0x1400110d9
   140011096:	outs   dx,DWORD PTR ds:[rsi]
   140011097:	outs   dx,BYTE PTR ds:[rsi]
   140011098:	jae    0x140011109
   14001109a:	ins    BYTE PTR es:[rdi],dx
   14001109b:	gs rex.XB je 0x140011111
   14001109f:	ins    BYTE PTR es:[rdi],dx
   1400110a0:	rex.W (bad) 
   1400110a2:	outs   dx,BYTE PTR ds:[rsi]
   1400110a3:	fs ins BYTE PTR es:[rdi],dx
   1400110a5:	gs jb  0x1400110a8
   1400110a8:	in     al,dx
   1400110a9:	add    BYTE PTR [rbp+rsi*2+0x70],al
   1400110ad:	ins    BYTE PTR es:[rdi],dx
   1400110ae:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   1400110b5:	outs   dx,BYTE PTR ds:[rsi]
   1400110b6:	fs ins BYTE PTR es:[rdi],dx
   1400110b8:	add    BYTE PTR gs:[rdx+0x0],dl
   1400110bc:	rex.XB ins BYTE PTR es:[rdi],dx
   1400110be:	outs   dx,DWORD PTR ds:[rsi]
   1400110bf:	jae    0x140011126
   1400110c1:	rex.W (bad) 
   1400110c3:	outs   dx,BYTE PTR ds:[rsi]
   1400110c4:	fs ins BYTE PTR es:[rdi],dx
   1400110c6:	add    BYTE PTR gs:[rbx+0x45],cl
   1400110ca:	push   rdx
   1400110cb:	rex.WRX
   1400110cc:	rex.RB
   1400110cd:	xor    r14,QWORD PTR [rdx]
   1400110d0:	cs fs ins BYTE PTR es:[rdi],dx
   1400110d3:	ins    BYTE PTR es:[rdi],dx
   1400110d4:	add    BYTE PTR [rax],al
   1400110d6:	add    DWORD PTR [r11+0x74],r10d
   1400110da:	jb     0x14001112f
   1400110dc:	je     0x140011150
   1400110de:	rex.WB push r15
   1400110e0:	add    BYTE PTR [rax],al
   1400110e2:	push   rbx
   1400110e3:	rex.W
   1400110e4:	rex.WR push rdi
   1400110e6:	push   r8
   1400110e8:	rex.WB
   1400110e9:	cs fs ins BYTE PTR es:[rdi],dx
   1400110ec:	ins    BYTE PTR es:[rdi],dx
   1400110ed:	add    BYTE PTR [rsi],bl
   1400110ef:	add    al,BYTE PTR [rdi+0x65]
   1400110f2:	je     0x140011141
   1400110f4:	outs   dx,DWORD PTR ds:[rsi]
   1400110f5:	fs jne 0x140011164
   1400110f8:	gs rex.W (bad) 
   1400110fb:	outs   dx,BYTE PTR ds:[rsi]
   1400110fc:	fs ins BYTE PTR es:[rdi],dx
   1400110fe:	gs push rdi
   140011100:	add    BYTE PTR [rax],al
   140011102:	retf   
   140011103:	add    BYTE PTR [rbp+riz*2+0x63],al
   140011107:	outs   dx,DWORD PTR ds:[rsi]
   140011108:	fs gs push rax
   14001110b:	outs   dx,DWORD PTR ds:[rsi]
   14001110c:	imul   ebp,DWORD PTR [rsi+0x74],0xd7007265
   140011113:	add    cl,BYTE PTR [rax+0x65]
   140011116:	(bad)  
   140011117:	jo     0x14001115f
   140011119:	jb     0x140011180
   14001111b:	add    BYTE PTR gs:[rax],al
   14001111e:	rol    DWORD PTR [rdx],cl
   140011120:	rex.W
   140011121:	gs (bad) 
   140011123:	jo     0x140011166
   140011125:	ins    BYTE PTR es:[rdi],dx
   140011126:	ins    BYTE PTR es:[rdi],dx
   140011127:	outs   dx,DWORD PTR ds:[rsi]
   140011128:	movsxd eax,DWORD PTR [rax]
   14001112a:	jo     0x14001112e
   14001112c:	rex.RXB
   14001112d:	gs je  0x140011183
   140011130:	je     0x1400111a4
   140011132:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140011139:	push   rdi
   14001113a:	add    BYTE PTR [rax],al
   14001113c:	mov    WORD PTR [rcx],es
   14001113e:	rex.RXB
   14001113f:	gs je  0x140011185
   140011142:	outs   dx,DWORD PTR ds:[rsi]
   140011143:	ins    DWORD PTR es:[rdi],dx
   140011144:	ins    DWORD PTR es:[rdi],dx
   140011145:	(bad)  
   140011146:	outs   dx,BYTE PTR ds:[rsi]
   140011147:	imul   r13,QWORD PTR fs:[rsi+0x65],0x26a0041
   140011150:	rex.RXB
   140011151:	gs je  0x1400111a7
   140011154:	je     0x1400111b7
   140011156:	jb     0x1400111cc
   140011158:	jne    0x1400111ca
   14001115a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001115c:	outs   dx,WORD PTR ds:[rsi]
   14001115e:	push   rdi
   14001115f:	add    dh,cl
   140011161:	add    al,0x54
   140011163:	gs jb  0x1400111d3
   140011166:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14001116d:	outs   dx,DWORD PTR ds:[rsi]
   14001116e:	movsxd esp,DWORD PTR [rbp+0x73]
   140011171:	jae    0x140011173
   140011173:	add    dl,ah
   140011175:	add    al,0x55
   140011177:	outs   dx,BYTE PTR ds:[rsi]
   140011178:	push   0x6c646e61
   14001117d:	gs fs rex.RB js 0x1400111e5
   140011182:	gs jo  0x1400111f9
   140011185:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001118c:	gs jb  0x14001118f
   14001118f:	add    BYTE PTR [rbx+0x74655304],dh
   140011195:	push   rbp
   140011196:	outs   dx,BYTE PTR ds:[rsi]
   140011197:	push   0x6c646e61
   14001119c:	gs fs rex.RB js 0x140011204
   1400111a1:	gs jo  0x140011218
   1400111a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400111ab:	gs jb  0x1400111ae
   1400111ae:	add    al,BYTE PTR [rbx]
   1400111b0:	rex.WB jae 0x1400111f7
   1400111b3:	gs (bad) 
   1400111b5:	jne    0x14001121e
   1400111b7:	addr32 gs jb 0x14001120b
   1400111bb:	jb     0x140011222
   1400111bd:	jae    0x140011224
   1400111bf:	outs   dx,BYTE PTR ds:[rsi]
   1400111c0:	je     0x1400111c2
   1400111c2:	es add al,0x52
   1400111c5:	je     0x140011233
   1400111c7:	push   rsi
   1400111c8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400111cf:	outs   dx,BYTE PTR ds:[rsi]
   1400111d0:	ja     0x14001123b
   1400111d2:	outs   dx,BYTE PTR ds:[rsi]
   1400111d3:	add    BYTE PTR fs:[rax],al
   1400111d6:	(bad)  
   1400111d7:	add    al,0x52
   1400111d9:	je     0x140011247
   1400111db:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400111dd:	outs   dx,DWORD PTR ds:[rsi]
   1400111de:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400111e2:	jne    0x140011252
   1400111e4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400111e8:	outs   dx,BYTE PTR ds:[rsi]
   1400111e9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400111eb:	je     0x14001125f
   1400111ed:	jns    0x1400111ef
   1400111ef:	add    BYTE PTR [rax],bl
   1400111f1:	add    al,0x52
   1400111f3:	je     0x140011261
   1400111f5:	rex.XB (bad) 
   1400111f7:	jo     0x14001126d
   1400111f9:	jne    0x14001126d
   1400111fb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400111fe:	outs   dx,BYTE PTR ds:[rsi]
   1400111ff:	je     0x140011266
   140011201:	js     0x140011277
   140011203:	add    BYTE PTR [rip+0x6c745204],ah        # 0x1ac75640d
   140011209:	push   rbp
   14001120a:	outs   dx,BYTE PTR ds:[rsi]
   14001120b:	ja     0x140011276
   14001120d:	outs   dx,BYTE PTR ds:[rsi]
   14001120e:	fs rex.RB js 0x140011212
   140011212:	repnz add BYTE PTR [rbp+0x6e],al
   140011216:	je     0x14001127d
   140011218:	jb     0x14001125d
   14001121a:	jb     0x140011285
   14001121c:	je     0x140011287
   14001121e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011221:	push   rbx
   140011222:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140011227:	outs   dx,BYTE PTR ds:[rsi]
   140011228:	add    BYTE PTR [rax],al
   14001122a:	cmp    eax,DWORD PTR [rbx]
   14001122c:	rex.WR
   14001122d:	gs (bad) 
   14001122f:	jbe    0x140011296
   140011231:	rex.XB jb 0x14001129d
   140011234:	je     0x14001129f
   140011236:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011239:	push   rbx
   14001123a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001123f:	outs   dx,BYTE PTR ds:[rsi]
   140011240:	add    BYTE PTR [rax],al
   140011242:	jmp    0x140011246
   140011244:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011246:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001124e:	rex.XB jb 0x1400112ba
   140011251:	je     0x1400112bc
   140011253:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011256:	push   rbx
   140011257:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001125c:	outs   dx,BYTE PTR ds:[rsi]
   14001125d:	rex.B outs dx,BYTE PTR ds:[rsi]
   14001125f:	fs push rbx
   140011261:	jo     0x1400112cc
   140011263:	outs   dx,BYTE PTR ds:[rsi]
   140011264:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011266:	jne    0x1400112d6
   140011268:	je     0x14001126a
   14001126a:	out    dx,al
   14001126b:	add    BYTE PTR [rbp+0x6e],al
   14001126e:	movsxd ebp,DWORD PTR [rdi+0x64]
   140011271:	gs push rax
   140011273:	outs   dx,DWORD PTR ds:[rsi]
   140011274:	imul   ebp,DWORD PTR [rsi+0x74],0xd2007265
   14001127b:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14001127f:	gs je  0x1400112e7
   140011282:	rex.XB jb 0x1400112ee
   140011285:	je     0x1400112f0
   140011287:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001128a:	push   rbx
   14001128b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140011290:	outs   dx,BYTE PTR ds:[rsi]
   140011291:	add    BYTE PTR [rcx+0x3],al
   140011294:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140011296:	(bad)  
   140011297:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   1400112a0:	add    BYTE PTR [rax],al
   1400112a2:	pop    rdx
   1400112a3:	add    DWORD PTR [rsi+0x6c],eax
   1400112a6:	jae    0x1400112ef
   1400112a8:	gs je  0x140011301
   1400112ab:	(bad)  
   1400112ac:	ins    BYTE PTR es:[rdi],dx
   1400112ad:	jne    0x140011314
   1400112af:	add    BYTE PTR [rbx+0x1],bl
   1400112b2:	rex.RX ins BYTE PTR es:[rdi],dx
   1400112b4:	jae    0x140011309
   1400112b6:	gs je  0x14001130f
   1400112b9:	(bad)  
   1400112ba:	ins    BYTE PTR es:[rdi],dx
   1400112bb:	jne    0x140011322
   1400112bd:	add    BYTE PTR [rcx+0x1],bl
   1400112c0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400112c2:	jae    0x14001130a
   1400112c4:	jb     0x14001132b
   1400112c6:	add    BYTE PTR gs:[rax+0x74655304],al
   1400112cd:	rex.WR (bad) 
   1400112cf:	jae    0x140011345
   1400112d1:	rex.RB jb 0x140011346
   1400112d4:	outs   dx,DWORD PTR ds:[rsi]
   1400112d5:	jb     0x1400112d7
   1400112d7:	add    bl,cl
   1400112d9:	add    DWORD PTR [rdi+0x65],eax
   1400112dc:	je     0x140011321
   1400112de:	jne    0x140011352
   1400112e0:	jb     0x140011347
   1400112e2:	outs   dx,BYTE PTR ds:[rsi]
   1400112e3:	je     0x140011339
   1400112e5:	push   0x64616572
   1400112ea:	rex.WB
   1400112eb:	add    BYTE PTR fs:[rax],al
   1400112ee:	pop    rax
   1400112ef:	add    DWORD PTR [rsi+0x6c],eax
   1400112f2:	jae    0x140011335
   1400112f4:	ins    BYTE PTR es:[rdi],dx
   1400112f5:	ins    BYTE PTR es:[rdi],dx
   1400112f6:	outs   dx,DWORD PTR ds:[rsi]
   1400112f7:	movsxd eax,DWORD PTR [rax]
   1400112f9:	add    BYTE PTR [rax*1+0x74697257],dh
   140011300:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x654802db
   14001130a:	(bad)  
   14001130b:	jo     0x140011360
   14001130d:	gs je  0x140011359
   140011310:	outs   dx,BYTE PTR ds:[rsi]
   140011311:	outs   dx,WORD PTR ds:[rsi]
   140011313:	jb     0x140011382
   140011315:	(bad)  
   140011316:	je     0x140011381
   140011318:	outs   dx,DWORD PTR ds:[rsi]
   140011319:	outs   dx,BYTE PTR ds:[rsi]
   14001131a:	add    BYTE PTR [rax],al
   14001131c:	stos   BYTE PTR es:[rdi],al
   14001131d:	add    al,BYTE PTR [rdi+0x65]
   140011320:	je     0x140011378
   140011322:	gs jb  0x140011398
   140011325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   14001132c:	rex.W
   14001132d:	gs (bad) 
   14001132f:	jo     0x140011374
   140011331:	jb     0x140011398
   140011333:	(bad)  
   140011334:	je     0x14001139b
   140011336:	add    BYTE PTR [rax],al
   140011338:	ret    
   140011339:	add    edx,DWORD PTR [rdx+0x65]
   14001133c:	(bad)  
   14001133d:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x53047c00
   140011347:	gs je  0x140011392
   14001134a:	(bad)  
   14001134b:	outs   dx,BYTE PTR ds:[rsi]
   14001134c:	fs ins BYTE PTR es:[rdi],dx
   14001134e:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140011351:	jne    0x1400113c1
   140011353:	je     0x140011355
   140011355:	add    dl,bh
   140011357:	add    DWORD PTR [rdi+0x65],eax
   14001135a:	je     0x1400113a2
   14001135c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140011364:	je     0x14001136a
   140011366:	push   rbx
   140011367:	gs je  0x1400113b0
   14001136a:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140011372:	gs jb  0x140011375
   140011375:	add    BYTE PTR [rcx],bl
   140011377:	add    al,BYTE PTR [rdi+0x65]
   14001137a:	je     0x1400113c9
   14001137c:	outs   dx,DWORD PTR ds:[rsi]
   14001137d:	fs jne 0x1400113ec
   140011380:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14001138a:	add    BYTE PTR [rax],al
   14001138c:	add    DWORD PTR [esi+0x72],eax
   140011390:	gs rex.RB outs dx,BYTE PTR gs:[rsi]
   140011394:	jbe    0x1400113ff
   140011396:	jb     0x140011407
   140011398:	outs   dx,BYTE PTR ds:[rsi]
   140011399:	ins    DWORD PTR es:[rdi],dx
   14001139a:	outs   dx,BYTE PTR gs:[rsi]
   14001139c:	je     0x1400113f1
   14001139e:	je     0x140011412
   1400113a0:	imul   ebp,DWORD PTR [rsi+0x67],0x20005773
   1400113a7:	add    eax,0x65646957
   1400113ac:	rex.XB push 0x6f547261
   1400113b2:	rex.WRB jne 0x140011421
   1400113b5:	je     0x140011420
   1400113b7:	rex.X jns 0x14001142e
   1400113ba:	gs add cl,ah
   1400113bd:	add    DWORD PTR [rdi+0x65],eax
   1400113c0:	je     0x140011407
   1400113c2:	outs   dx,BYTE PTR ds:[rsi]
   1400113c3:	jbe    0x14001142e
   1400113c5:	jb     0x140011436
   1400113c7:	outs   dx,BYTE PTR ds:[rsi]
   1400113c8:	ins    DWORD PTR es:[rdi],dx
   1400113c9:	outs   dx,BYTE PTR gs:[rsi]
   1400113cb:	je     0x140011420
   1400113cd:	je     0x140011441
   1400113cf:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   1400113d6:	test   eax,0x65755103
   1400113db:	jb     0x140011456
   1400113dd:	push   rax
   1400113de:	gs jb  0x140011447
   1400113e1:	outs   dx,DWORD PTR ds:[rsi]
   1400113e2:	jb     0x140011451
   1400113e4:	(bad)  
   1400113e5:	outs   dx,BYTE PTR ds:[rsi]
   1400113e6:	movsxd esp,DWORD PTR [rbp+0x43]
   1400113e9:	outs   dx,DWORD PTR ds:[rsi]
   1400113ea:	jne    0x14001145a
   1400113ec:	je     0x140011453
   1400113ee:	jb     0x1400113f0
   1400113f0:	(bad)  
   1400113f1:	add    al,BYTE PTR [rdi+0x65]
   1400113f4:	je     0x14001144a
   1400113f6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400113fd:	je     0x1400113ff
   1400113ff:	add    bh,al
   140011401:	add    DWORD PTR [rdi+0x65],eax
   140011404:	je     0x140011449
   140011406:	jne    0x14001147a
   140011408:	jb     0x14001146f
   14001140a:	outs   dx,BYTE PTR ds:[rsi]
   14001140b:	je     0x14001145d
   14001140d:	jb     0x14001147e
   14001140f:	movsxd esp,DWORD PTR [rbp+0x73]
   140011412:	jae    0x14001145d
   140011414:	add    BYTE PTR fs:[rax+0x74654702],al
   14001141b:	push   rbx
   14001141c:	jns    0x140011491
   14001141e:	je     0x140011485
   140011420:	ins    DWORD PTR es:[rdi],dx
   140011421:	push   rsp
   140011422:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140011429:	ins    BYTE PTR es:[rdi],dx
   14001142a:	gs push rsp
   14001142c:	imul   ebp,DWORD PTR [rbp+0x65],0x5304c000
   140011433:	ins    BYTE PTR es:[rdi],dx
   140011434:	gs gs jo 0x140011438
   140011438:	pop    QWORD PTR [rax]
   14001143a:	rex.XB jb 0x1400114a2
   14001143d:	(bad)  
   14001143e:	je     0x1400114a5
   140011440:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47017800
   140011449:	gs je  0x14001148f
   14001144c:	push   rax
   14001144d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001144f:	outs   dx,WORD PTR ds:[rsi]
   140011451:	add    BYTE PTR [rsi+0x1],ch
   140011454:	rex.RXB
   140011455:	gs je  0x140011499
   140011458:	rex.XB push r8
   14001145a:	add    BYTE PTR [rax],al
   14001145c:	add    al,BYTE PTR ds:[rdi+0x65]
   140011460:	je     0x1400114b1
   140011462:	rex.RB
   140011463:	rex.WRB
   140011464:	rex.XB push r8
   140011466:	add    BYTE PTR [rax],al
   140011468:	or     al,0x3
   14001146a:	rex.WB jae 0x1400114c3
   14001146d:	(bad)  
   14001146e:	ins    BYTE PTR es:[rdi],dx
   14001146f:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140011477:	addr32 gs add ah,bl
   14001147b:	add    cl,BYTE PTR [rax+0x65]
   14001147e:	(bad)  
   14001147f:	jo     0x1400114d4
   140011481:	imul   edi,DWORD PTR [rdx+0x65],0x1a00000
   140011488:	rex.RXB
   140011489:	gs je  0x1400114cf
   14001148c:	outs   dx,DWORD PTR ds:[rsi]
   14001148d:	outs   dx,BYTE PTR ds:[rsi]
   14001148e:	jae    0x1400114ff
   140011490:	ins    BYTE PTR es:[rdi],dx
   140011491:	gs rex.XB push r8
   140011494:	add    BYTE PTR [rax],al
   140011496:	mov    dl,0x1
   140011498:	rex.RXB
   140011499:	gs je  0x1400114df
   14001149c:	outs   dx,DWORD PTR ds:[rsi]
   14001149d:	outs   dx,BYTE PTR ds:[rsi]
   14001149e:	jae    0x14001150f
   1400114a0:	ins    BYTE PTR es:[rdi],dx
   1400114a1:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400114a4:	fs add BYTE PTR gs:[rax],al
   1400114a8:	xchg   esp,eax
   1400114a9:	add    al,0x53
   1400114ab:	gs je  0x140011501
   1400114ae:	je     0x140011514
   1400114b0:	rex.W (bad) 
   1400114b2:	outs   dx,BYTE PTR ds:[rsi]
   1400114b3:	fs ins BYTE PTR es:[rdi],dx
   1400114b5:	add    BYTE PTR gs:[rax],al
   1400114b8:	pop    rbp
   1400114b9:	add    DWORD PTR [rsi+0x6c],eax
   1400114bc:	jne    0x140011531
   1400114be:	push   0x656c6946
   1400114c3:	rex.X jne 0x14001152c
   1400114c6:	data16 gs jb 0x14001153d
   1400114ca:	add    BYTE PTR [rax],al
   1400114cc:	fiadd  DWORD PTR [rdx]
   1400114ce:	rex.W
   1400114cf:	gs (bad) 
   1400114d1:	jo     0x140011525
   1400114d3:	gs rex.B ins BYTE PTR es:[rdi],dx
   1400114d6:	ins    BYTE PTR es:[rdi],dx
   1400114d7:	outs   dx,DWORD PTR ds:[rsi]
   1400114d8:	movsxd eax,DWORD PTR [rax]
   1400114da:	(bad)  
   1400114db:	add    al,0x53
   1400114dd:	gs je  0x140011525
   1400114e0:	outs   dx,BYTE PTR ds:[rsi]
   1400114e1:	fs rex.WRXB
   1400114e3:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5100
   1400114eb:	add    al,BYTE PTR [rdi+0x65]
   1400114ee:	je     0x140011540
   1400114f0:	jb     0x140011561
   1400114f2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400114f5:	jae    0x14001153f
   1400114f7:	gs (bad) 
   1400114f9:	jo     0x1400114fb
   1400114fb:	add    BYTE PTR [rdi],ch
   1400114fd:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   140011501:	(bad)  
   140011502:	jo     0x140011557
   140011504:	je     0x140011578
   140011506:	imul   ebp,DWORD PTR [rsi+0x67],0x33000057
   14001150d:	add    eax,0x74697257
   140011512:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140011515:	outs   dx,BYTE PTR ds:[rsi]
   140011516:	jae    0x140011587
   140011518:	ins    BYTE PTR es:[rdi],dx
   140011519:	gs push rdi
	...

Disassembly of section .data:

0000000140012000 <.data>:
   140012000:	add    al,BYTE PTR [rax]
   140012002:	add    BYTE PTR [rax],al
   140012004:	add    BYTE PTR [rax],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14001200e:	add    BYTE PTR [rax],al
   140012010:	int    0x5d
   140012012:	and    dl,dl
   140012014:	data16 (bad) 
   140012016:	(bad)  
   140012017:	inc    DWORD PTR [rax]
   140012019:	add    BYTE PTR [rax],al
   14001201b:	add    BYTE PTR [rax],al
   14001201d:	add    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rax+0x48],al
   140012022:	add    DWORD PTR [rax+0x1],eax
	...
   14001202d:	add    BYTE PTR [rax],al
   14001202f:	add    BYTE PTR [rax+0x48],al
   140012032:	add    DWORD PTR [rax+0x1],eax
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    BYTE PTR [rcx],al
   140012039:	add    DWORD PTR [rax],eax
	...
   140012043:	add    BYTE PTR [rax],al
   140012045:	adc    BYTE PTR [rax],al
	...
   140012067:	add    BYTE PTR [rdx],al
   140012069:	add    BYTE PTR [rax],al
   14001206b:	add    BYTE PTR [rcx],al
	...
   140012095:	add    BYTE PTR [rax],al
   140012097:	add    BYTE PTR [rdx],al
   140012099:	add    BYTE PTR [rax],al
   14001209b:	add    BYTE PTR [rdx],al
	...
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    BYTE PTR [rcx],al
   1400123e1:	add    BYTE PTR [rax],al
   1400123e3:	add    BYTE PTR [rsi],dl
   1400123e5:	add    BYTE PTR [rax],al
   1400123e7:	add    BYTE PTR [rdx],al
   1400123e9:	add    BYTE PTR [rax],al
   1400123eb:	add    BYTE PTR [rdx],al
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    BYTE PTR [rbx],al
   1400123f1:	add    BYTE PTR [rax],al
   1400123f3:	add    BYTE PTR [rdx],al
   1400123f5:	add    BYTE PTR [rax],al
   1400123f7:	add    BYTE PTR [rax+rax*1],al
   1400123fa:	add    BYTE PTR [rax],al
   1400123fc:	sbb    BYTE PTR [rax],al
   1400123fe:	add    BYTE PTR [rax],al
   140012400:	add    eax,0xd000000
   140012405:	add    BYTE PTR [rax],al
   140012407:	add    BYTE PTR [rsi],al
   140012409:	add    BYTE PTR [rax],al
   14001240b:	add    BYTE PTR [rcx],cl
   14001240d:	add    BYTE PTR [rax],al
   14001240f:	add    BYTE PTR [rdi],al
   140012411:	add    BYTE PTR [rax],al
   140012413:	add    BYTE PTR [rax+rax*1],cl
   140012416:	add    BYTE PTR [rax],al
   140012418:	or     BYTE PTR [rax],al
   14001241a:	add    BYTE PTR [rax],al
   14001241c:	or     al,0x0
   14001241e:	add    BYTE PTR [rax],al
   140012420:	or     DWORD PTR [rax],eax
   140012422:	add    BYTE PTR [rax],al
   140012424:	or     al,0x0
   140012426:	add    BYTE PTR [rax],al
   140012428:	or     al,BYTE PTR [rax]
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	(bad)  
   14001242d:	add    BYTE PTR [rax],al
   14001242f:	add    BYTE PTR [rbx],cl
   140012431:	add    BYTE PTR [rax],al
   140012433:	add    BYTE PTR [rax],cl
   140012435:	add    BYTE PTR [rax],al
   140012437:	add    BYTE PTR [rax+rax*1],cl
   14001243a:	add    BYTE PTR [rax],al
   14001243c:	(bad)  
   14001243d:	add    BYTE PTR [rax],al
   14001243f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156012445
   140012445:	add    BYTE PTR [rax],al
   140012447:	add    BYTE PTR [rdi],cl
   140012449:	add    BYTE PTR [rax],al
   14001244b:	add    BYTE PTR [rdx],al
   14001244d:	add    BYTE PTR [rax],al
   14001244f:	add    BYTE PTR [rax],dl
   140012451:	add    BYTE PTR [rax],al
   140012453:	add    BYTE PTR [rip+0x11000000],cl        # 0x151012459
   140012459:	add    BYTE PTR [rax],al
   14001245b:	add    BYTE PTR [rdx],dl
   14001245d:	add    BYTE PTR [rax],al
   14001245f:	add    BYTE PTR [rdx],dl
   140012461:	add    BYTE PTR [rax],al
   140012463:	add    BYTE PTR [rdx],al
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rcx],ah
   140012469:	add    BYTE PTR [rax],al
   14001246b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175012471
   140012471:	add    BYTE PTR [rax],al
   140012473:	add    BYTE PTR [rdx],al
   140012475:	add    BYTE PTR [rax],al
   140012477:	add    BYTE PTR [rcx+0x0],al
   14001247a:	add    BYTE PTR [rax],al
   14001247c:	or     eax,0x43000000
   140012481:	add    BYTE PTR [rax],al
   140012483:	add    BYTE PTR [rdx],al
   140012485:	add    BYTE PTR [rax],al
   140012487:	add    BYTE PTR [rax+0x0],dl
   14001248a:	add    BYTE PTR [rax],al
   14001248c:	adc    DWORD PTR [rax],eax
   14001248e:	add    BYTE PTR [rax],al
   140012490:	push   rdx
   140012491:	add    BYTE PTR [rax],al
   140012493:	add    BYTE PTR [rip+0x53000000],cl        # 0x193012499
   140012499:	add    BYTE PTR [rax],al
   14001249b:	add    BYTE PTR [rip+0x57000000],cl        # 0x1970124a1
   1400124a1:	add    BYTE PTR [rax],al
   1400124a3:	add    BYTE PTR [rsi],dl
   1400124a5:	add    BYTE PTR [rax],al
   1400124a7:	add    BYTE PTR [rcx+0x0],bl
   1400124aa:	add    BYTE PTR [rax],al
   1400124ac:	or     eax,DWORD PTR [rax]
   1400124ae:	add    BYTE PTR [rax],al
   1400124b0:	ins    BYTE PTR es:[rdi],dx
   1400124b1:	add    BYTE PTR [rax],al
   1400124b3:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad0124b9
   1400124b9:	add    BYTE PTR [rax],al
   1400124bb:	add    BYTE PTR [rax],ah
   1400124bd:	add    BYTE PTR [rax],al
   1400124bf:	add    BYTE PTR [rax+0x0],dh
   1400124c2:	add    BYTE PTR [rax],al
   1400124c4:	sbb    al,0x0
   1400124c6:	add    BYTE PTR [rax],al
   1400124c8:	jb     0x1400124ca
   1400124ca:	add    BYTE PTR [rax],al
   1400124cc:	or     DWORD PTR [rax],eax
   1400124ce:	add    BYTE PTR [rax],al
   1400124d0:	(bad)  
   1400124d1:	add    BYTE PTR [rax],al
   1400124d3:	add    BYTE PTR [rsi],dl
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	add    BYTE PTR [rax+0xa000000],al
   1400124dd:	add    BYTE PTR [rax],al
   1400124df:	add    BYTE PTR [rcx+0xa000000],al
   1400124e5:	add    BYTE PTR [rax],al
   1400124e7:	add    BYTE PTR [rdx+0x9000000],al
   1400124ed:	add    BYTE PTR [rax],al
   1400124ef:	add    BYTE PTR [rbx+0x16000000],al
   1400124f5:	add    BYTE PTR [rax],al
   1400124f7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400124fe:	add    BYTE PTR [rax],al
   140012500:	xchg   ecx,eax
   140012501:	add    BYTE PTR [rax],al
   140012503:	add    BYTE PTR [rcx],ch
   140012505:	add    BYTE PTR [rax],al
   140012507:	add    BYTE PTR [rsi+0xd000000],bl
   14001250d:	add    BYTE PTR [rax],al
   14001250f:	add    BYTE PTR [rcx+0x2000000],ah
   140012515:	add    BYTE PTR [rax],al
   140012517:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14001251e:	add    BYTE PTR [rax],al
   140012520:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012521:	add    BYTE PTR [rax],al
   140012523:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7012529
   140012529:	add    BYTE PTR [rax],al
   14001252b:	add    BYTE PTR [rcx],dl
   14001252d:	add    BYTE PTR [rax],al
   14001252f:	add    dh,cl
   140012531:	add    BYTE PTR [rax],al
   140012533:	add    BYTE PTR [rdx],al
   140012535:	add    BYTE PTR [rax],al
   140012537:	add    bh,dl
   140012539:	add    BYTE PTR [rax],al
   14001253b:	add    BYTE PTR [rbx],cl
   14001253d:	add    BYTE PTR [rax],al
   14001253f:	add    BYTE PTR [rax],bl
   140012541:	(bad)  
   140012542:	add    BYTE PTR [rax],al
   140012544:	or     al,0x0
   140012546:	add    BYTE PTR [rax],al
   140012548:	or     al,0x0
   14001254a:	add    BYTE PTR [rax],al
   14001254c:	or     BYTE PTR [rax],al
	...
   140012556:	add    BYTE PTR [rax],al
   140012558:	add    DWORD PTR [rax],eax
	...
   140012566:	add    BYTE PTR [rax],al
   140012568:	add    DWORD PTR [rax],eax
	...
   140012586:	add    BYTE PTR [rax],al
   140012588:	add    DWORD PTR [rax],eax
	...
   140012596:	add    BYTE PTR [rax],al
   140012598:	add    DWORD PTR [rax],eax
	...
   1400125b6:	add    BYTE PTR [rax],al
   1400125b8:	add    DWORD PTR [rax],eax
	...
   1400125c6:	add    BYTE PTR [rax],al
   1400125c8:	add    DWORD PTR [rax],eax
	...
   1400125d6:	add    BYTE PTR [rax],al
   1400125d8:	add    DWORD PTR [rax],eax
	...
   1400125f6:	add    BYTE PTR [rax],al
   1400125f8:	add    DWORD PTR [rax],eax
	...
   140012616:	add    BYTE PTR [rax],al
   140012618:	add    DWORD PTR [rax],eax
	...
   140012626:	add    BYTE PTR [rax],al
   140012628:	add    DWORD PTR [rax],eax
	...
   140012636:	add    BYTE PTR [rax],al
   140012638:	add    DWORD PTR [rax],eax
	...
   140012656:	add    BYTE PTR [rax],al
   140012658:	add    DWORD PTR [rax],eax
	...
   140012666:	add    BYTE PTR [rax],al
   140012668:	add    DWORD PTR [rax],eax
	...
   140012676:	add    BYTE PTR [rax],al
   140012678:	add    DWORD PTR [rax],eax
	...
   14001278e:	add    BYTE PTR [rax],al
   140012790:	(bad)  
   140012791:	(bad)  
   140012792:	(bad)  
   140012793:	inc    DWORD PTR [rax]
	...
   14001279d:	add    BYTE PTR [rax],al
   14001279f:	add    BYTE PTR [rsp+rax*4+0x14000],dh
   1400127a6:	add    BYTE PTR [rax],al
   1400127a8:	mov    ah,0x84
   1400127aa:	add    BYTE PTR [rax+0x1],al
   1400127ad:	add    BYTE PTR [rax],al
   1400127af:	add    BYTE PTR [rsp+rax*4+0x14000],dh
   1400127b6:	add    BYTE PTR [rax],al
   1400127b8:	mov    ah,0x84
   1400127ba:	add    BYTE PTR [rax+0x1],al
   1400127bd:	add    BYTE PTR [rax],al
   1400127bf:	add    BYTE PTR [rsp+rax*4+0x14000],dh
   1400127c6:	add    BYTE PTR [rax],al
   1400127c8:	mov    ah,0x84
   1400127ca:	add    BYTE PTR [rax+0x1],al
   1400127cd:	add    BYTE PTR [rax],al
   1400127cf:	add    BYTE PTR [rsp+rax*4+0x14000],dh
   1400127d6:	add    BYTE PTR [rax],al
   1400127d8:	mov    ah,0x84
   1400127da:	add    BYTE PTR [rax+0x1],al
   1400127dd:	add    BYTE PTR [rax],al
   1400127df:	add    BYTE PTR [rsp+rax*4+0x14000],dh
   1400127e6:	add    BYTE PTR [rax],al
   1400127e8:	mov    ah,0x84
   1400127ea:	add    BYTE PTR [rax+0x1],al
	...
   1400128ad:	add    BYTE PTR [rax],al
   1400128af:	add    BYTE PTR [rcx],al
   1400128b1:	add    DWORD PTR [rcx],eax
   1400128b3:	add    DWORD PTR [rcx],eax
   1400128b5:	add    DWORD PTR [rcx],eax
   1400128b7:	add    DWORD PTR [rcx],eax
   1400128b9:	add    DWORD PTR [rcx],eax
   1400128bb:	add    DWORD PTR [rcx],eax
   1400128bd:	add    DWORD PTR [rcx],eax
   1400128bf:	add    DWORD PTR [rcx],eax
   1400128c1:	add    DWORD PTR [rcx],eax
   1400128c3:	add    DWORD PTR [rcx],eax
   1400128c5:	add    DWORD PTR [rcx],eax
   1400128c7:	add    DWORD PTR [rcx],eax
   1400128c9:	add    DWORD PTR [rcx],eax
   1400128cb:	add    DWORD PTR [rcx],eax
   1400128cd:	add    DWORD PTR [rcx],eax
   1400128cf:	add    DWORD PTR [rdx],eax
   1400128d1:	add    al,BYTE PTR [rdx]
   1400128d3:	add    al,BYTE PTR [rdx]
   1400128d5:	add    al,BYTE PTR [rdx]
   1400128d7:	add    al,BYTE PTR [rdx]
   1400128d9:	add    al,BYTE PTR [rdx]
   1400128db:	add    al,BYTE PTR [rdx]
   1400128dd:	add    al,BYTE PTR [rdx]
   1400128df:	add    al,BYTE PTR [rbx]
   1400128e1:	add    eax,DWORD PTR [rbx]
   1400128e3:	add    eax,DWORD PTR [rbx]
   1400128e5:	add    eax,DWORD PTR [rbx]
   1400128e7:	add    eax,DWORD PTR [rax]
   1400128e9:	add    BYTE PTR [rax],al
   1400128eb:	add    BYTE PTR [rax],al
   1400128ed:	add    BYTE PTR [rax],al
   1400128ef:	add    BYTE PTR [rax+0x14000ef],ah
   1400128f5:	add    BYTE PTR [rax],al
   1400128f7:	add    BYTE PTR [rdx+0x14000f1],ah
   1400128fd:	add    BYTE PTR [rax],al
   1400128ff:	add    bh,bh
   140012901:	(bad)  
   140012902:	(bad)  
   140012903:	(bad)  
   140012904:	(bad)  
   140012905:	(bad)  
   140012906:	(bad)  
   140012907:	inc    DWORD PTR [rax+0xa]
	...
   140012955:	add    BYTE PTR [rax],al
   140012957:	add    BYTE PTR [rdx],al
   140012959:	add    BYTE PTR [rax],al
   14001295b:	add    BYTE PTR [rax],al
   14001295d:	add    BYTE PTR [rax],al
   14001295f:	add    BYTE PTR [rbx+0x0],al
	...
   14001296e:	add    BYTE PTR [rax],al
   140012970:	xor    bl,bh
   140012972:	add    BYTE PTR [rax+0x1],al
   140012975:	add    BYTE PTR [rax],al
   140012977:	add    BYTE PTR [rbx+rdi*8],ch
   14001297a:	add    BYTE PTR [rax+0x1],al
   14001297d:	add    BYTE PTR [rax],al
   14001297f:	add    BYTE PTR [rax],ch
   140012981:	sti    
   140012982:	add    BYTE PTR [rax+0x1],al
   140012985:	add    BYTE PTR [rax],al
   140012987:	add    BYTE PTR [rbx+rdi*8],ah
   14001298a:	add    BYTE PTR [rax+0x1],al
   14001298d:	add    BYTE PTR [rax],al
   14001298f:	add    BYTE PTR [rax],ah
   140012991:	sti    
   140012992:	add    BYTE PTR [rax+0x1],al
   140012995:	add    BYTE PTR [rax],al
   140012997:	add    BYTE PTR [rbx+rdi*8],bl
   14001299a:	add    BYTE PTR [rax+0x1],al
   14001299d:	add    BYTE PTR [rax],al
   14001299f:	add    BYTE PTR [rax],bl
   1400129a1:	sti    
   1400129a2:	add    BYTE PTR [rax+0x1],al
   1400129a5:	add    BYTE PTR [rax],al
   1400129a7:	add    BYTE PTR [rax],dl
   1400129a9:	sti    
   1400129aa:	add    BYTE PTR [rax+0x1],al
   1400129ad:	add    BYTE PTR [rax],al
   1400129af:	add    BYTE PTR [rax],cl
   1400129b1:	sti    
   1400129b2:	add    BYTE PTR [rax+0x1],al
   1400129b5:	add    BYTE PTR [rax],al
   1400129b7:	add    BYTE PTR [rax],al
   1400129b9:	sti    
   1400129ba:	add    BYTE PTR [rax+0x1],al
   1400129bd:	add    BYTE PTR [rax],al
   1400129bf:	add    al,dh
   1400129c1:	cli    
   1400129c2:	add    BYTE PTR [rax+0x1],al
   1400129c5:	add    BYTE PTR [rax],al
   1400129c7:	add    al,ah
   1400129c9:	cli    
   1400129ca:	add    BYTE PTR [rax+0x1],al
   1400129cd:	add    BYTE PTR [rax],al
   1400129cf:	add    ah,dl
   1400129d1:	cli    
   1400129d2:	add    BYTE PTR [rax+0x1],al
   1400129d5:	add    BYTE PTR [rax],al
   1400129d7:	add    al,cl
   1400129d9:	cli    
   1400129da:	add    BYTE PTR [rax+0x1],al
   1400129dd:	add    BYTE PTR [rax],al
   1400129df:	add    ah,al
   1400129e1:	cli    
   1400129e2:	add    BYTE PTR [rax+0x1],al
   1400129e5:	add    BYTE PTR [rax],al
   1400129e7:	add    al,al
   1400129e9:	cli    
   1400129ea:	add    BYTE PTR [rax+0x1],al
   1400129ed:	add    BYTE PTR [rax],al
   1400129ef:	add    BYTE PTR [rdx+rdi*8+0x14000],bh
   1400129f6:	add    BYTE PTR [rax],al
   1400129f8:	mov    eax,0x14000fa
   1400129fd:	add    BYTE PTR [rax],al
   1400129ff:	add    BYTE PTR [rdx+rdi*8+0x14000],dh
   140012a06:	add    BYTE PTR [rax],al
   140012a08:	mov    al,0xfa
   140012a0a:	add    BYTE PTR [rax+0x1],al
   140012a0d:	add    BYTE PTR [rax],al
   140012a0f:	add    BYTE PTR [rdx+rdi*8+0x14000],ch
   140012a16:	add    BYTE PTR [rax],al
   140012a18:	test   al,0xfa
   140012a1a:	add    BYTE PTR [rax+0x1],al
   140012a1d:	add    BYTE PTR [rax],al
   140012a1f:	add    BYTE PTR [rdx+rdi*8+0x14000],ah
   140012a26:	add    BYTE PTR [rax],al
   140012a28:	movabs al,ds:0x9c000000014000fa
   140012a31:	cli    
   140012a32:	add    BYTE PTR [rax+0x1],al
   140012a35:	add    BYTE PTR [rax],al
   140012a37:	add    BYTE PTR [rax+0x14000fa],bl
   140012a3d:	add    BYTE PTR [rax],al
   140012a3f:	add    BYTE PTR [rax+0x14000fa],dl
   140012a45:	add    BYTE PTR [rax],al
   140012a47:	add    BYTE PTR [rax+0x14000fa],al
   140012a4d:	add    BYTE PTR [rax],al
   140012a4f:	add    BYTE PTR [rdx+rdi*8+0x0],dh
   140012a53:	rex add DWORD PTR [rax],eax
   140012a56:	add    BYTE PTR [rax],al
   140012a58:	ins    BYTE PTR es:[rdi],dx
   140012a59:	cli    
   140012a5a:	add    BYTE PTR [rax+0x1],al
   140012a5d:	add    BYTE PTR [rax],al
   140012a5f:	add    BYTE PTR [rdx+rdi*8+0x14000],dh
   140012a66:	add    BYTE PTR [rax],al
   140012a68:	fs cli 
   140012a6a:	add    BYTE PTR [rax+0x1],al
   140012a6d:	add    BYTE PTR [rax],al
   140012a6f:	add    BYTE PTR [rdx+rdi*8+0x0],bl
   140012a73:	rex add DWORD PTR [rax],eax
   140012a76:	add    BYTE PTR [rax],al
   140012a78:	push   rsp
   140012a79:	cli    
   140012a7a:	add    BYTE PTR [rax+0x1],al
   140012a7d:	add    BYTE PTR [rax],al
   140012a7f:	add    BYTE PTR [rax-0x6],cl
   140012a82:	add    BYTE PTR [rax+0x1],al
   140012a85:	add    BYTE PTR [rax],al
   140012a87:	add    BYTE PTR [rax-0x6],al
   140012a8a:	add    BYTE PTR [rax+0x1],al
   140012a8d:	add    BYTE PTR [rax],al
   140012a8f:	add    BYTE PTR [rax],dh
   140012a91:	cli    
   140012a92:	add    BYTE PTR [rax+0x1],al
   140012a95:	add    BYTE PTR [rax],al
   140012a97:	add    BYTE PTR [rax],ah
   140012a99:	cli    
   140012a9a:	add    BYTE PTR [rax+0x1],al
   140012a9d:	add    BYTE PTR [rax],al
   140012a9f:	add    BYTE PTR [rax],bl
   140012aa1:	cli    
   140012aa2:	add    BYTE PTR [rax+0x1],al
   140012aa5:	add    BYTE PTR [rax],al
   140012aa7:	add    BYTE PTR [rdx+rdi*8],dl
   140012aaa:	add    BYTE PTR [rax+0x1],al
   140012aad:	add    BYTE PTR [rax],al
   140012aaf:	add    BYTE PTR [rax],cl
   140012ab1:	cli    
   140012ab2:	add    BYTE PTR [rax+0x1],al
   140012ab5:	add    BYTE PTR [rax],al
   140012ab7:	add    al,dh
   140012ab9:	stc    
   140012aba:	add    BYTE PTR [rax+0x1],al
   140012abd:	add    BYTE PTR [rax],al
   140012abf:	add    al,ah
   140012ac1:	stc    
   140012ac2:	add    BYTE PTR [rax+0x1],al
   140012ac5:	add    BYTE PTR [rax],al
   140012ac7:	add    BYTE PTR [rcx],cl
   140012ac9:	add    al,0x0
   140012acb:	add    BYTE PTR [rcx],al
	...
   140012ad5:	add    BYTE PTR [rax],al
   140012ad7:	add    al,bl
   140012ad9:	stc    
   140012ada:	add    BYTE PTR [rax+0x1],al
   140012add:	add    BYTE PTR [rax],al
   140012adf:	add    al,dl
   140012ae1:	stc    
   140012ae2:	add    BYTE PTR [rax+0x1],al
   140012ae5:	add    BYTE PTR [rax],al
   140012ae7:	add    al,cl
   140012ae9:	stc    
   140012aea:	add    BYTE PTR [rax+0x1],al
   140012aed:	add    BYTE PTR [rax],al
   140012aef:	add    al,al
   140012af1:	stc    
   140012af2:	add    BYTE PTR [rax+0x1],al
   140012af5:	add    BYTE PTR [rax],al
   140012af7:	add    BYTE PTR [rax+0x14000f9],bh
   140012afd:	add    BYTE PTR [rax],al
   140012aff:	add    BYTE PTR [rax+0x14000f9],dh
   140012b05:	add    BYTE PTR [rax],al
   140012b07:	add    BYTE PTR [rax+0x14000f9],ch
   140012b0d:	add    BYTE PTR [rax],al
   140012b0f:	add    BYTE PTR [rax+0x14000f9],bl
   140012b15:	add    BYTE PTR [rax],al
   140012b17:	add    BYTE PTR [rax+0x14000f9],cl
   140012b1d:	add    BYTE PTR [rax],al
   140012b1f:	add    BYTE PTR [rax-0x7],bh
   140012b22:	add    BYTE PTR [rax+0x1],al
   140012b25:	add    BYTE PTR [rax],al
   140012b27:	add    BYTE PTR [rax-0x7],ah
   140012b2a:	add    BYTE PTR [rax+0x1],al
   140012b2d:	add    BYTE PTR [rax],al
   140012b2f:	add    BYTE PTR [rax-0x7],cl
   140012b32:	add    BYTE PTR [rax+0x1],al
   140012b35:	add    BYTE PTR [rax],al
   140012b37:	add    BYTE PTR [rax],bh
   140012b39:	stc    
   140012b3a:	add    BYTE PTR [rax+0x1],al
   140012b3d:	add    BYTE PTR [rax],al
   140012b3f:	add    BYTE PTR [rax],ah
   140012b41:	stc    
   140012b42:	add    BYTE PTR [rax+0x1],al
   140012b45:	add    BYTE PTR [rax],al
   140012b47:	add    BYTE PTR [rax],bl
   140012b49:	stc    
   140012b4a:	add    BYTE PTR [rax+0x1],al
   140012b4d:	add    BYTE PTR [rax],al
   140012b4f:	add    BYTE PTR [rax],dl
   140012b51:	stc    
   140012b52:	add    BYTE PTR [rax+0x1],al
   140012b55:	add    BYTE PTR [rax],al
   140012b57:	add    BYTE PTR [rax],cl
   140012b59:	stc    
   140012b5a:	add    BYTE PTR [rax+0x1],al
   140012b5d:	add    BYTE PTR [rax],al
   140012b5f:	add    BYTE PTR [rax],al
   140012b61:	stc    
   140012b62:	add    BYTE PTR [rax+0x1],al
   140012b65:	add    BYTE PTR [rax],al
   140012b67:	add    al,bh
   140012b69:	clc    
   140012b6a:	add    BYTE PTR [rax+0x1],al
   140012b6d:	add    BYTE PTR [rax],al
   140012b6f:	add    al,dh
   140012b71:	clc    
   140012b72:	add    BYTE PTR [rax+0x1],al
   140012b75:	add    BYTE PTR [rax],al
   140012b77:	add    al,ch
   140012b79:	clc    
   140012b7a:	add    BYTE PTR [rax+0x1],al
   140012b7d:	add    BYTE PTR [rax],al
   140012b7f:	add    al,ah
   140012b81:	clc    
   140012b82:	add    BYTE PTR [rax+0x1],al
   140012b85:	add    BYTE PTR [rax],al
   140012b87:	add    al,bl
   140012b89:	clc    
   140012b8a:	add    BYTE PTR [rax+0x1],al
   140012b8d:	add    BYTE PTR [rax],al
   140012b8f:	add    al,dl
   140012b91:	clc    
   140012b92:	add    BYTE PTR [rax+0x1],al
   140012b95:	add    BYTE PTR [rax],al
   140012b97:	add    al,cl
   140012b99:	clc    
   140012b9a:	add    BYTE PTR [rax+0x1],al
   140012b9d:	add    BYTE PTR [rax],al
   140012b9f:	add    al,al
   140012ba1:	clc    
   140012ba2:	add    BYTE PTR [rax+0x1],al
   140012ba5:	add    BYTE PTR [rax],al
   140012ba7:	add    BYTE PTR [rax+0x14000f8],dh
   140012bad:	add    BYTE PTR [rax],al
   140012baf:	add    BYTE PTR [rax+0x14000f8],bl
   140012bb5:	add    BYTE PTR [rax],al
   140012bb7:	add    BYTE PTR [rax+0x14000f8],cl
   140012bbd:	add    BYTE PTR [rax],al
   140012bbf:	add    BYTE PTR [rax-0x8],bh
   140012bc2:	add    BYTE PTR [rax+0x1],al
   140012bc5:	add    BYTE PTR [rax],al
   140012bc7:	add    al,bh
   140012bc9:	clc    
   140012bca:	add    BYTE PTR [rax+0x1],al
   140012bcd:	add    BYTE PTR [rax],al
   140012bcf:	add    BYTE PTR [rax-0x8],ch
   140012bd2:	add    BYTE PTR [rax+0x1],al
   140012bd5:	add    BYTE PTR [rax],al
   140012bd7:	add    BYTE PTR [rax-0x8],bl
   140012bda:	add    BYTE PTR [rax+0x1],al
   140012bdd:	add    BYTE PTR [rax],al
   140012bdf:	add    BYTE PTR [rax-0x8],cl
   140012be2:	add    BYTE PTR [rax+0x1],al
   140012be5:	add    BYTE PTR [rax],al
   140012be7:	add    BYTE PTR [rax],dh
   140012be9:	clc    
   140012bea:	add    BYTE PTR [rax+0x1],al
   140012bed:	add    BYTE PTR [rax],al
   140012bef:	add    BYTE PTR [rax],ah
   140012bf1:	clc    
   140012bf2:	add    BYTE PTR [rax+0x1],al
   140012bf5:	add    BYTE PTR [rax],al
   140012bf7:	add    BYTE PTR [rax],cl
   140012bf9:	clc    
   140012bfa:	add    BYTE PTR [rax+0x1],al
   140012bfd:	add    BYTE PTR [rax],al
   140012bff:	add    al,dh
   140012c01:	test   DWORD PTR [rax],0x140
   140012c07:	add    ah,ah
   140012c09:	test   DWORD PTR [rax],0x140
   140012c0f:	add    ah,bl
   140012c11:	test   DWORD PTR [rax],0x140
   140012c17:	add    al,cl
   140012c19:	test   DWORD PTR [rax],0x140
   140012c1f:	add    BYTE PTR [rax+0x14000f7],ah
   140012c25:	add    BYTE PTR [rax],al
   140012c27:	add    BYTE PTR [rax+0x14000f7],cl
   140012c2d:	add    BYTE PTR [rax],al
   140012c2f:	add    BYTE PTR [rcx],al
	...
   140012c95:	add    BYTE PTR [rax],al
   140012c97:	add    BYTE PTR [rax+0x29],ah
   140012c9a:	add    DWORD PTR [rax+0x1],eax
	...
   140012cb5:	add    BYTE PTR [rax],al
   140012cb7:	add    BYTE PTR [rax+0x29],ah
   140012cba:	add    DWORD PTR [rax+0x1],eax
	...
   140012cd5:	add    BYTE PTR [rax],al
   140012cd7:	add    BYTE PTR [rax+0x29],ah
   140012cda:	add    DWORD PTR [rax+0x1],eax
	...
   140012cf5:	add    BYTE PTR [rax],al
   140012cf7:	add    BYTE PTR [rax+0x29],ah
   140012cfa:	add    DWORD PTR [rax+0x1],eax
	...
   140012d15:	add    BYTE PTR [rax],al
   140012d17:	add    BYTE PTR [rax+0x29],ah
   140012d1a:	add    DWORD PTR [rax+0x1],eax
	...
   140012d35:	add    BYTE PTR [rax],al
   140012d37:	add    BYTE PTR [rcx],al
   140012d39:	add    BYTE PTR [rax],al
   140012d3b:	add    BYTE PTR [rcx],al
	...
   140012d59:	xor    eax,DWORD PTR [rcx]
   140012d5b:	rex add DWORD PTR [rax],eax
	...
   140012d6e:	add    BYTE PTR [rax],al
   140012d70:	movabs al,ds:0x30000000014000ef
   140012d79:	hlt    
   140012d7a:	add    BYTE PTR [rax+0x1],al
   140012d7d:	add    BYTE PTR [rax],al
   140012d7f:	add    BYTE PTR [rax+0x14000f5],dh
   140012d85:	add    BYTE PTR [rax],al
   140012d87:	add    BYTE PTR [rax+0x29],dh
   140012d8a:	add    DWORD PTR [rax+0x1],eax
   140012d8d:	add    BYTE PTR [rax],al
   140012d8f:	add    BYTE PTR [rax],dh
   140012d91:	sub    al,0x1
   140012d93:	rex add DWORD PTR [rax],eax
	...
   140012dfe:	adc    BYTE PTR [rax],dl
   140012e00:	adc    BYTE PTR [rax],dl
   140012e02:	adc    BYTE PTR [rax],dl
   140012e04:	adc    BYTE PTR [rax],dl
   140012e06:	adc    BYTE PTR [rax],dl
   140012e08:	adc    BYTE PTR [rax],dl
   140012e0a:	adc    BYTE PTR [rax],dl
   140012e0c:	adc    BYTE PTR [rax],dl
   140012e0e:	adc    BYTE PTR [rax],dl
   140012e10:	adc    BYTE PTR [rax],dl
   140012e12:	adc    BYTE PTR [rax],dl
   140012e14:	adc    BYTE PTR [rax],dl
   140012e16:	adc    BYTE PTR [rax],dl
   140012e18:	add    BYTE PTR [rax],al
   140012e1a:	add    BYTE PTR [rax],al
   140012e1c:	add    BYTE PTR [rax],al
   140012e1e:	and    BYTE PTR [rax],ah
   140012e20:	and    BYTE PTR [rax],ah
   140012e22:	and    BYTE PTR [rax],ah
   140012e24:	and    BYTE PTR [rax],ah
   140012e26:	and    BYTE PTR [rax],ah
   140012e28:	and    BYTE PTR [rax],ah
   140012e2a:	and    BYTE PTR [rax],ah
   140012e2c:	and    BYTE PTR [rax],ah
   140012e2e:	and    BYTE PTR [rax],ah
   140012e30:	and    BYTE PTR [rax],ah
   140012e32:	and    BYTE PTR [rax],ah
   140012e34:	and    BYTE PTR [rax],ah
   140012e36:	and    BYTE PTR [rax],ah
	...
   140012efc:	add    BYTE PTR [rax],al
   140012efe:	(bad)  
   140012eff:	(bad)
   140012f04:	addr32 push 0x6c6b6a69
   140012f0a:	ins    DWORD PTR es:[rdi],dx
   140012f0b:	outs   dx,BYTE PTR ds:[rsi]
   140012f0c:	outs   dx,DWORD PTR ds:[rsi]
   140012f0d:	jo     0x140012f80
   140012f0f:	jb     0x140012f84
   140012f11:	je     0x140012f88
   140012f13:	jbe    0x140012f8c
   140012f15:	js     0x140012f90
   140012f17:	jp     0x140012f19
   140012f19:	add    BYTE PTR [rax],al
   140012f1b:	add    BYTE PTR [rax],al
   140012f1d:	add    BYTE PTR [rcx+0x42],al
   140012f20:	rex.XB
   140012f21:	rex.R
   140012f22:	rex.RB
   140012f23:	rex.RX
   140012f24:	rex.RXB
   140012f25:	rex.W
   140012f26:	rex.WB
   140012f27:	rex.WX
   140012f28:	rex.WXB
   140012f29:	rex.WR
   140012f2a:	rex.WRB
   140012f2b:	rex.WRX
   140012f2c:	rex.WRXB push r8
   140012f2e:	push   rcx
   140012f2f:	push   rdx
   140012f30:	push   rbx
   140012f31:	push   rsp
   140012f32:	push   rbp
   140012f33:	push   rsi
   140012f34:	push   rdi
   140012f35:	pop    rax
   140012f36:	pop    rcx
   140012f37:	pop    rdx
	...
   140013000:	add    BYTE PTR [rax],al
   140013002:	adc    BYTE PTR [rax],dl
   140013004:	adc    BYTE PTR [rax],dl
   140013006:	adc    BYTE PTR [rax],dl
   140013008:	adc    BYTE PTR [rax],dl
   14001300a:	adc    BYTE PTR [rax],dl
   14001300c:	adc    BYTE PTR [rax],dl
   14001300e:	adc    BYTE PTR [rax],dl
   140013010:	adc    BYTE PTR [rax],dl
   140013012:	adc    BYTE PTR [rax],dl
   140013014:	adc    BYTE PTR [rax],dl
   140013016:	adc    BYTE PTR [rax],dl
   140013018:	adc    BYTE PTR [rax],dl
   14001301a:	adc    BYTE PTR [rax],dl
   14001301c:	add    BYTE PTR [rax],al
   14001301e:	add    BYTE PTR [rax],al
   140013020:	add    BYTE PTR [rax],al
   140013022:	and    BYTE PTR [rax],ah
   140013024:	and    BYTE PTR [rax],ah
   140013026:	and    BYTE PTR [rax],ah
   140013028:	and    BYTE PTR [rax],ah
   14001302a:	and    BYTE PTR [rax],ah
   14001302c:	and    BYTE PTR [rax],ah
   14001302e:	and    BYTE PTR [rax],ah
   140013030:	and    BYTE PTR [rax],ah
   140013032:	and    BYTE PTR [rax],ah
   140013034:	and    BYTE PTR [rax],ah
   140013036:	and    BYTE PTR [rax],ah
   140013038:	and    BYTE PTR [rax],ah
   14001303a:	and    BYTE PTR [rax],ah
	...
   140013110:	add    BYTE PTR [rcx+0x62],ah
   140013113:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140013117:	addr32 push 0x6c6b6a69
   14001311d:	ins    DWORD PTR es:[rdi],dx
   14001311e:	outs   dx,BYTE PTR ds:[rsi]
   14001311f:	outs   dx,DWORD PTR ds:[rsi]
   140013120:	jo     0x140013193
   140013122:	jb     0x140013197
   140013124:	je     0x14001319b
   140013126:	jbe    0x14001319f
   140013128:	js     0x1400131a3
   14001312a:	jp     0x14001312c
   14001312c:	add    BYTE PTR [rax],al
   14001312e:	add    BYTE PTR [rax],al
   140013130:	add    BYTE PTR [rcx+0x42],al
   140013133:	rex.XB
   140013134:	rex.R
   140013135:	rex.RB
   140013136:	rex.RX
   140013137:	rex.RXB
   140013138:	rex.W
   140013139:	rex.WB
   14001313a:	rex.WX
   14001313b:	rex.WXB
   14001313c:	rex.WR
   14001313d:	rex.WRB
   14001313e:	rex.WRX
   14001313f:	rex.WRXB push r8
   140013141:	push   rcx
   140013142:	push   rdx
   140013143:	push   rbx
   140013144:	push   rsp
   140013145:	push   rbp
   140013146:	push   rsi
   140013147:	push   rdi
   140013148:	pop    rax
   140013149:	pop    rcx
   14001314a:	pop    rdx
	...
   1400131cf:	add    BYTE PTR [rax+0x140012d],ah
   1400131d5:	add    BYTE PTR [rax],al
   1400131d7:	add    BYTE PTR [rcx],al
   1400131d9:	add    al,BYTE PTR [rax+rcx*1]
   1400131dc:	add    BYTE PTR [rax],al
   1400131de:	add    BYTE PTR [rax],al
   1400131e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400131e1:	add    eax,DWORD PTR [rax]
   1400131e3:	add    BYTE PTR [rax-0x7e],ah
   1400131e6:	jns    0x14001316a
   1400131e8:	and    DWORD PTR [rax],eax
   1400131ea:	add    BYTE PTR [rax],al
   1400131ec:	add    BYTE PTR [rax],al
   1400131ee:	add    BYTE PTR [rax],al
   1400131f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400131f1:	fild   WORD PTR [rax]
   1400131f3:	add    BYTE PTR [rax],al
   1400131f5:	add    BYTE PTR [rax],al
   1400131f7:	add    BYTE PTR [rcx+0xa5],ah
   1400131fd:	add    BYTE PTR [rax],al
   1400131ff:	add    BYTE PTR [rcx+0xfce09f],al
   140013205:	add    BYTE PTR [rax],al
   140013207:	add    BYTE PTR [rax+0x7e],al
   14001320a:	cmp    ah,0x0
   14001320d:	add    BYTE PTR [rax],al
   14001320f:	add    BYTE PTR [rax-0x3efffffd],ch
   140013215:	movabs ds:0x20a3da,eax
	...
   14001322e:	add    BYTE PTR [rax],al
   140013230:	cmp    esi,0x0
   140013236:	add    BYTE PTR [rax],al
   140013238:	rex inc BYTE PTR [rax]
   14001323b:	add    BYTE PTR [rax],al
   14001323d:	add    BYTE PTR [rax],al
   14001323f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140013245:	movabs ds:0x20a3da,eax
	...
   14001325e:	add    BYTE PTR [rax],al
   140013260:	cmp    esi,0x0
   140013266:	add    BYTE PTR [rax],al
   140013268:	inc    BYTE PTR [r8]
   14001326b:	add    BYTE PTR [rax],al
   14001326d:	add    BYTE PTR [rax],al
   14001326f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140013275:	movabs ds:0xa2e8a2e5001aa2e4,al
   14001327e:	pop    rbx
	...
   14001328f:	add    BYTE PTR [rcx+0xfe],al
   140013295:	add    BYTE PTR [rax],al
   140013297:	add    BYTE PTR [rax+0x7e],al
   14001329a:	movabs eax,ds:0x55100000000fe
   1400132a3:	add    BYTE PTR [rcx-0x26],dl
   1400132a6:	pop    rsi
   1400132a7:	fisub  DWORD PTR [rax]
   1400132a9:	add    BYTE PTR [rdi-0x26],bl
   1400132ac:	push   0xffffffffffffffda
   1400132ae:	xor    al,BYTE PTR [rax]
	...
   1400132c0:	adc    ebx,0xf9e0ded8
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	xor    DWORD PTR [rsi-0x7f],edi
   1400132cb:	inc    BYTE PTR [rax]
   1400132cd:	add    BYTE PTR [rax],al
   1400132cf:	add    al,dl
   1400132d1:	sti    
   1400132d2:	add    BYTE PTR [rax+0x1],al
   1400132d5:	add    BYTE PTR [rax],al
   1400132d7:	add    al,al
   1400132d9:	sti    
   1400132da:	add    BYTE PTR [rax+0x1],al
   1400132dd:	add    BYTE PTR [rax],al
   1400132df:	add    dh,bh
   1400132e1:	(bad)  
   1400132e2:	(bad)  
   1400132e3:	inc    DWORD PTR [rax]
   1400132e5:	add    BYTE PTR [rax],al
   1400132e7:	add    BYTE PTR [rcx+rsi*8+0x14000],ah
   1400132ee:	add    BYTE PTR [rax],al
   1400132f0:	add    BYTE PTR cs:[rax],al
   1400132f3:	add    BYTE PTR [rsi],ch
   1400132f5:	add    BYTE PTR [rax],al
   1400132f7:	add    BYTE PTR [rax],al
   1400132f9:	xor    eax,DWORD PTR [rcx]
   1400132fb:	rex add DWORD PTR [rax],eax
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	lock xor al,BYTE PTR [rcx]
   140013303:	rex add DWORD PTR [rax],eax
   140013306:	add    BYTE PTR [rax],al
   140013308:	(bad)  
   140013309:	rex.XB add DWORD PTR [r8+0x1],eax
   14001330d:	add    BYTE PTR [rax],al
   14001330f:	add    ah,dl
   140013311:	rex.XB add DWORD PTR [r8+0x1],eax
   140013315:	add    BYTE PTR [rax],al
   140013317:	add    ah,dl
   140013319:	rex.XB add DWORD PTR [r8+0x1],eax
   14001331d:	add    BYTE PTR [rax],al
   14001331f:	add    ah,dl
   140013321:	rex.XB add DWORD PTR [r8+0x1],eax
   140013325:	add    BYTE PTR [rax],al
   140013327:	add    ah,dl
   140013329:	rex.XB add DWORD PTR [r8+0x1],eax
   14001332d:	add    BYTE PTR [rax],al
   14001332f:	add    ah,dl
   140013331:	rex.XB add DWORD PTR [r8+0x1],eax
   140013335:	add    BYTE PTR [rax],al
   140013337:	add    ah,dl
   140013339:	rex.XB add DWORD PTR [r8+0x1],eax
   14001333d:	add    BYTE PTR [rax],al
   14001333f:	add    ah,dl
   140013341:	rex.XB add DWORD PTR [r8+0x1],eax
   140013345:	add    BYTE PTR [rax],al
   140013347:	add    ah,dl
   140013349:	rex.XB add DWORD PTR [r8+0x1],eax
   14001334d:	add    BYTE PTR [rax],al
   14001334f:	add    BYTE PTR [rdi+0x7f],bh
   140013352:	jg     0x1400133d3
   140013354:	jg     0x1400133d5
   140013356:	jg     0x1400133d7
   140013358:	hlt    
   140013359:	xor    al,BYTE PTR [rcx]
   14001335b:	rex add DWORD PTR [rax],eax
   14001335e:	add    BYTE PTR [rax],al
   140013360:	fadd   DWORD PTR [rbx+0x1]
   140013363:	rex add DWORD PTR [rax],eax
   140013366:	add    BYTE PTR [rax],al
   140013368:	fadd   DWORD PTR [rbx+0x1]
   14001336b:	rex add DWORD PTR [rax],eax
   14001336e:	add    BYTE PTR [rax],al
   140013370:	fadd   DWORD PTR [rbx+0x1]
   140013373:	rex add DWORD PTR [rax],eax
   140013376:	add    BYTE PTR [rax],al
   140013378:	fadd   DWORD PTR [rbx+0x1]
   14001337b:	rex add DWORD PTR [rax],eax
   14001337e:	add    BYTE PTR [rax],al
   140013380:	fadd   DWORD PTR [rbx+0x1]
   140013383:	rex add DWORD PTR [rax],eax
   140013386:	add    BYTE PTR [rax],al
   140013388:	fadd   DWORD PTR [rbx+0x1]
   14001338b:	rex add DWORD PTR [rax],eax
   14001338e:	add    BYTE PTR [rax],al
   140013390:	fadd   DWORD PTR [rbx+0x1]
   140013393:	rex add DWORD PTR [rax],eax
   140013396:	add    BYTE PTR [rax],al
   140013398:	add    DWORD PTR [rax],eax
   14001339a:	add    BYTE PTR [rax],al
   14001339c:	add    BYTE PTR cs:[rax],al
   14001339f:	add    BYTE PTR [rcx],al
	...
   1400133ad:	add    BYTE PTR [rax],al
   1400133af:	add    dh,bh
   1400133b1:	(bad)  
   1400133b2:	(bad)  
   1400133b3:	(bad)  
   1400133b4:	(bad)  
   1400133b5:	(bad)  
   1400133b6:	(bad)  
   1400133b7:	inc    DWORD PTR [rax]
   1400133b9:	rex.WXB add rax,0x6
	...

Disassembly of section .pdata:

0000000140016000 <.pdata>:
   140016000:	add    BYTE PTR [rax],dl
   140016002:	add    BYTE PTR [rax],al
   140016004:	retf   
   140016005:	adc    BYTE PTR [rax],al
   140016007:	add    ah,cl
   140016009:	or     eax,DWORD PTR [rcx]
   14001600b:	add    ah,cl
   14001600d:	adc    BYTE PTR [rax],al
   14001600f:	add    BYTE PTR [rbx],dh
   140016011:	adc    DWORD PTR [rax],eax
   140016013:	add    BYTE PTR [rax+0x3400010a],ah
   140016019:	adc    DWORD PTR [rax],eax
   14001601b:	add    BYTE PTR [rsi],ah
   14001601d:	adc    eax,DWORD PTR [rax]
   14001601f:	add    ah,bh
   140016021:	or     eax,DWORD PTR [rcx]
   140016023:	add    BYTE PTR [rax],ch
   140016025:	adc    eax,DWORD PTR [rax]
   140016027:	add    BYTE PTR [rbx-0x43ffffed],dl
   14001602d:	or     eax,DWORD PTR [rcx]
   14001602f:	add    BYTE PTR [rbx+rdx*1+0x13b80000],dl
   140016036:	add    BYTE PTR [rax],al
   140016038:	or     al,0x1
   14001603b:	add    BYTE PTR [rax-0x55ffffed],bh
   140016041:	adc    eax,0xbe00000
   140016046:	add    DWORD PTR [rax],eax
   140016048:	lods   al,BYTE PTR ds:[rsi]
   140016049:	adc    eax,0x19570000
   14001604e:	add    BYTE PTR [rax],al
   140016050:	sbb    BYTE PTR [rcx+rax*1],cl
   140016053:	add    BYTE PTR [rax+0x19],bl
   140016056:	add    BYTE PTR [rax],al
   140016058:	(bad)  
   140016059:	sbb    DWORD PTR [rax],eax
   14001605b:	add    BYTE PTR [rax+0xc],al
   14001605e:	add    DWORD PTR [rax],eax
   140016060:	sbb    BYTE PTR [rcx],0x0
   140016063:	add    BYTE PTR [rdi+0x19],bl
   140016069:	add    al,BYTE PTR [rcx]
   14001606b:	add    BYTE PTR [rax+0x7d000019],ah
   140016071:	sbb    al,BYTE PTR [rax]
   140016073:	add    BYTE PTR [rdx+rax*1],al
   140016076:	add    DWORD PTR [rax],eax
   140016078:	sbb    BYTE PTR [rdx],0x0
   14001607b:	add    bl,dl
   14001607d:	sbb    al,BYTE PTR [rax]
   14001607f:	add    al,bl
   140016081:	(bad)  
   140016082:	add    DWORD PTR [rax],eax
   140016084:	hlt    
   140016085:	sbb    al,BYTE PTR [rax]
   140016087:	add    BYTE PTR [rip+0xffffffffd800001b],ch        # 0x1180160a8
   14001608d:	(bad)  
   14001608e:	add    DWORD PTR [rax],eax
   140016090:	xor    BYTE PTR [rbx],bl
   140016092:	add    BYTE PTR [rax],al
   140016094:	rex.RX sbb r8d,DWORD PTR [rax]
   140016097:	add    al,bl
   140016099:	(bad)  
   14001609a:	add    DWORD PTR [rax],eax
   14001609c:	(bad)  
   14001609d:	sbb    eax,DWORD PTR [rax]
   14001609f:	add    BYTE PTR [rbx-0x27ffffe5],ah
   1400160a5:	(bad)  
   1400160a6:	add    DWORD PTR [rax],eax
   1400160a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400160a9:	sbb    eax,DWORD PTR [rax]
   1400160ab:	add    bh,dl
   1400160ad:	sbb    eax,DWORD PTR [rax]
   1400160af:	add    BYTE PTR [rax+0x2],al
   1400160b2:	add    DWORD PTR [rax],eax
   1400160b4:	fcomp  DWORD PTR [rbx]
   1400160b6:	add    BYTE PTR [rax],al
   1400160b8:	adc    DWORD PTR [rax+rax*1],ebx
   1400160bb:	add    BYTE PTR [rax],ch
   1400160bd:	add    eax,DWORD PTR [rcx]
   1400160bf:	add    BYTE PTR [rsp+rbx*1],dl
   1400160c2:	add    BYTE PTR [rax],al
   1400160c4:	ret    
   1400160c5:	sbb    al,0x0
   1400160c7:	add    BYTE PTR [rax],ch
   1400160c9:	add    eax,DWORD PTR [rcx]
   1400160cb:	add    ah,al
   1400160cd:	sbb    al,0x0
   1400160cf:	add    BYTE PTR [rbx+0x1e],dl
   1400160d2:	add    BYTE PTR [rax],al
   1400160d4:	rex.WR add r8b,BYTE PTR [rcx]
   1400160d7:	add    BYTE PTR [rsi+rbx*1+0x1eb20000],cl
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	fadd   DWORD PTR [rdi]
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	mov    ah,0x1e
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	icebp  
   1400160e9:	(bad)  
   1400160ea:	add    BYTE PTR [rax],al
   1400160ec:	jl     0x1400160f0
   1400160ee:	add    DWORD PTR [rax],eax
   1400160f0:	hlt    
   1400160f1:	(bad)  
   1400160f2:	add    BYTE PTR [rax],al
   1400160f4:	xor    eax,0xd800001f
   1400160f9:	(bad)  
   1400160fa:	add    DWORD PTR [rax],eax
   1400160fc:	cmp    BYTE PTR [rdi],bl
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	out    dx,al
   140016101:	(bad)  
   140016102:	add    BYTE PTR [rax],al
   140016104:	movabs al,ds:0x2e0000200c00010a
   14001610d:	and    BYTE PTR [rax],al
   14001610f:	add    BYTE PTR [rdx+rax*1+0x20300001],al
   140016116:	add    BYTE PTR [rax],al
   140016118:	and    al,BYTE PTR [eax]
   14001611b:	add    BYTE PTR [rdx+rax*1+0x22680001],cl
   140016122:	add    BYTE PTR [rax],al
   140016124:	mov    db0,rax
   140016127:	add    BYTE PTR [rdx+rax*1+0x23100001],ch
   14001612e:	add    BYTE PTR [rax],al
   140016130:	sub    eax,0xb8000023
   140016135:	add    eax,0x23300001
   14001613a:	add    BYTE PTR [rax],al
   14001613c:	xchg   esi,eax
   14001613d:	and    eax,DWORD PTR [rax]
   14001613f:	add    BYTE PTR [rdx+rax*1+0x1],bh
   140016143:	add    BYTE PTR [rax+0x4e000023],bl
   140016149:	and    eax,0x70c0000
   14001614e:	add    DWORD PTR [rax],eax
   140016150:	push   rax
   140016151:	and    eax,0x25a80000
   140016156:	add    BYTE PTR [rax],al
   140016158:	fadd   QWORD PTR [rdx]
   14001615a:	add    DWORD PTR [rax],eax
   14001615c:	test   al,0x25
   14001615e:	add    BYTE PTR [rax],al
   140016160:	pop    rdx
   140016161:	add    BYTE PTR es:[rax],al
   140016164:	in     al,0x9
   140016166:	add    DWORD PTR [rax],eax
   140016168:	pop    rsp
   140016169:	add    BYTE PTR es:[rax],al
   14001616c:	(bad)  
   14001616d:	add    BYTE PTR es:[rax],al
   140016170:	add    BYTE PTR [rbx],al
   140016172:	add    DWORD PTR [rax],eax
   140016174:	fsub   DWORD PTR [rsi]
   140016176:	add    BYTE PTR [rax],al
   140016178:	push   rdx
   140016179:	(bad)  
   14001617a:	add    BYTE PTR [rax],al
   14001617c:	sub    BYTE PTR [rbx],al
   14001617e:	add    DWORD PTR [rax],eax
   140016180:	push   rsp
   140016181:	(bad)  
   140016182:	add    BYTE PTR [rax],al
   140016184:	mov    edx,0x34000027
   140016189:	add    eax,DWORD PTR [rcx]
   14001618b:	add    BYTE PTR [rdi+riz*1+0x29550000],bh
   140016192:	add    BYTE PTR [rax],al
   140016194:	pop    rax
   140016195:	add    eax,DWORD PTR [rcx]
   140016197:	add    BYTE PTR [rax+0x29],bl
   14001619a:	add    BYTE PTR [rax],al
   14001619c:	push   0x29
   14001619e:	add    BYTE PTR [rax],al
   1400161a0:	or     al,0x1
   1400161a3:	add    BYTE PTR [rcx+rbp*1+0x0],ch
   1400161a7:	add    BYTE PTR [rsi-0x7fffffd6],dh
   1400161ad:	add    eax,DWORD PTR [rcx]
   1400161af:	add    BYTE PTR [rax-0x4affffd6],bh
   1400161b5:	sub    al,0x0
   1400161b7:	add    BYTE PTR [rax-0x3ffffefd],cl
   1400161bd:	sub    al,0x0
   1400161bf:	add    BYTE PTR [rax-0x27ffffd3],ah
   1400161c5:	(bad)  
   1400161c6:	add    DWORD PTR [rax],eax
   1400161c8:	movabs al,ds:0x4000002dc700002d
   1400161d1:	or     al,0x1
   1400161d3:	add    al,cl
   1400161d5:	sub    eax,0x2e2b0000
   1400161da:	add    BYTE PTR [rax],al
   1400161dc:	fadd   DWORD PTR [rdi]
   1400161de:	add    DWORD PTR [rax],eax
   1400161e0:	sub    al,0x2e
   1400161e2:	add    BYTE PTR [rax],al
   1400161e4:	pop    rbp
   1400161e5:	add    BYTE PTR cs:[rax],al
   1400161e8:	fadd   DWORD PTR [rdi]
   1400161ea:	add    DWORD PTR [rax],eax
   1400161ec:	int3   
   1400161ed:	add    BYTE PTR cs:[rax],al
   1400161f0:	test   eax,0xa4000031
   1400161f5:	add    eax,DWORD PTR [rcx]
   1400161f7:	add    BYTE PTR [rcx+rsi*1+0x33030000],ch
   1400161fe:	add    BYTE PTR [rax],al
   140016200:	rol    BYTE PTR [rbx],0x1
   140016203:	add    BYTE PTR [rbx+rsi*1],cl
   140016206:	add    BYTE PTR [rax],al
   140016208:	push   rdi
   140016209:	xor    al,0x0
   14001620b:	add    al,ch
   14001620d:	add    eax,DWORD PTR [rcx]
   14001620f:	add    BYTE PTR [rax+0x34],bl
   140016212:	add    BYTE PTR [rax],al
   140016214:	mov    DWORD PTR [rax+rax*1],esi
   140016217:	add    BYTE PTR [rax+0xc],al
   14001621a:	add    DWORD PTR [rax],eax
   14001621c:	mov    WORD PTR [rax+rax*1],?
   14001621f:	add    bl,bh
   140016221:	xor    al,0x0
   140016223:	add    BYTE PTR [rax],cl
   140016225:	add    al,0x1
   140016227:	add    ah,bh
   140016229:	xor    al,0x0
   14001622b:	add    BYTE PTR [rdx],bl
   14001622d:	xor    eax,0x5b80000
   140016232:	add    DWORD PTR [rax],eax
   140016234:	fs xor eax,0x35840000
   14001623a:	add    BYTE PTR [rax],al
   14001623c:	or     al,0x1
   14001623f:	add    BYTE PTR [rbp+rsi*1+0x35a40000],al
   140016246:	add    BYTE PTR [rax],al
   140016248:	or     al,0x1
   14001624b:	add    BYTE PTR [rbp+rsi*1+0x35ea0000],ah
   140016252:	add    BYTE PTR [rax],al
   140016254:	fadd   DWORD PTR [rdi]
   140016256:	add    DWORD PTR [rax],eax
   140016258:	add    BYTE PTR [rsi],dh
   14001625a:	add    BYTE PTR [rax],al
   14001625c:	and    al,0x36
   14001625e:	add    BYTE PTR [rax],al
   140016260:	and    BYTE PTR [rcx+rax*1],al
   140016263:	add    BYTE PTR [rax],dh
   140016265:	add    BYTE PTR ss:[rax],al
   140016268:	rex.W
   140016269:	add    BYTE PTR ss:[rax],al
   14001626c:	sub    BYTE PTR [rcx+rax*1],al
   14001626f:	add    BYTE PTR [rax+0x36],dl
   140016272:	add    BYTE PTR [rax],al
   140016274:	push   rcx
   140016275:	add    BYTE PTR ss:[rax],al
   140016278:	sub    al,0x4
   14001627a:	add    DWORD PTR [rax],eax
   14001627c:	(bad)  
   14001627d:	add    BYTE PTR ss:[rax],al
   140016280:	(bad)  
   140016281:	add    BYTE PTR ss:[rax],al
   140016284:	xor    BYTE PTR [rcx+rax*1],al
   140016287:	add    BYTE PTR [rsi+rsi*1+0x0],ah
   14001628b:	add    al,ch
   14001628d:	add    BYTE PTR ss:[rax],al
   140016290:	xor    al,0x4
   140016292:	add    DWORD PTR [rax],eax
   140016294:	call   0x1af0162cf
   140016299:	(bad)  
   14001629a:	add    BYTE PTR [rax],al
   14001629c:	in     al,0x9
   14001629e:	add    DWORD PTR [rax],eax
   1400162a0:	mov    BYTE PTR [rdi],dh
   1400162a2:	add    BYTE PTR [rax],al
   1400162a4:	outs   dx,BYTE PTR ds:[rsi]
   1400162a5:	cmp    BYTE PTR [rax],al
   1400162a7:	add    BYTE PTR [rax+0x4],cl
   1400162aa:	add    DWORD PTR [rax],eax
   1400162ac:	jo     0x1400162e6
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	mov    ah,0x38
   1400162b2:	add    BYTE PTR [rax],al
   1400162b4:	sub    BYTE PTR [rbx],al
   1400162b6:	add    DWORD PTR [rax],eax
   1400162b8:	mov    ah,0x38
   1400162ba:	add    BYTE PTR [rax],al
   1400162bc:	xlat   BYTE PTR ds:[rbx]
   1400162bd:	cmp    BYTE PTR [rax],al
   1400162bf:	add    BYTE PTR [rsp+rax*1+0x1],dh
   1400162c3:	add    al,bl
   1400162c5:	cmp    BYTE PTR [rax],al
   1400162c7:	add    ch,dh
   1400162c9:	cmp    BYTE PTR [rax],al
   1400162cb:	add    BYTE PTR [rax+0xc],al
   1400162ce:	add    DWORD PTR [rax],eax
   1400162d0:	sub    BYTE PTR [rcx],bh
   1400162d2:	add    BYTE PTR [rax],al
   1400162d4:	pop    rdx
   1400162d5:	cmp    eax,DWORD PTR [rax]
   1400162d7:	add    BYTE PTR [rsp+rax*1+0x3b740001],dl
   1400162de:	add    BYTE PTR [rax],al
   1400162e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400162e1:	cmp    eax,DWORD PTR [rax]
   1400162e3:	add    al,bl
   1400162e5:	(bad)  
   1400162e6:	add    DWORD PTR [rax],eax
   1400162e8:	mov    ah,0x3b
   1400162ea:	add    BYTE PTR [rax],al
   1400162ec:	fnstcw WORD PTR [rbx]
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	or     al,0x1
   1400162f3:	add    ah,bl
   1400162f5:	cmp    eax,DWORD PTR [rax]
   1400162f7:	add    BYTE PTR [rcx-0x3bffffc4],dl
   1400162fd:	add    al,0x1
   1400162ff:	add    BYTE PTR [rsp+rdi*1+0x3d180000],dl
   140016306:	add    BYTE PTR [rax],al
   140016308:	sub    BYTE PTR [rbx],al
   14001630a:	add    DWORD PTR [rax],eax
   14001630c:	sbb    BYTE PTR [rip+0x3d3c0000],bh        # 0x17d3d6312
   140016312:	add    BYTE PTR [rax],al
   140016314:	fadd   DWORD PTR [rdi]
   140016316:	add    DWORD PTR [rax],eax
   140016318:	cmp    al,0x3d
   14001631a:	add    BYTE PTR [rax],al
   14001631c:	outs   dx,DWORD PTR ds:[rsi]
   14001631d:	add    BYTE PTR ds:[rax],al
   140016320:	clc    
   140016321:	add    al,0x1
   140016323:	add    BYTE PTR [rax+0x3e],dh
   140016326:	add    BYTE PTR [rax],al
   140016328:	icebp  
   140016329:	add    BYTE PTR ds:[rax],al
   14001632c:	fadd   DWORD PTR [rdi]
   14001632e:	add    DWORD PTR [rax],eax
   140016330:	hlt    
   140016331:	add    BYTE PTR ds:[rax],al
   140016334:	(bad)  
   140016335:	(bad)  
   140016336:	add    BYTE PTR [rax],al
   140016338:	fadd   DWORD PTR [rdi]
   14001633a:	add    DWORD PTR [rax],eax
   14001633c:	cmp    BYTE PTR [rdi],bh
   14001633e:	add    BYTE PTR [rax],al
   140016340:	rex.X
   140016341:	add    BYTE PTR [rax],al
   140016344:	sub    al,0x5
   140016346:	add    DWORD PTR [rax],eax
   140016348:	rex.R
   140016349:	add    BYTE PTR [rax],al
   14001634c:	pop    rbx
   14001634d:	add    BYTE PTR [rax],al
   140016350:	or     al,0x1
   140016353:	add    BYTE PTR [rax+rax*2+0x0],bl
   140016357:	add    BYTE PTR [rax+rax*2+0x3280000],dl
   14001635e:	add    DWORD PTR [rax],eax
   140016360:	xchg   esp,eax
   140016361:	add    BYTE PTR [rax],al
   140016364:	int3   
   140016365:	add    BYTE PTR [rax],al
   140016368:	sub    BYTE PTR [rbx],al
   14001636a:	add    DWORD PTR [rax],eax
   14001636c:	int3   
   14001636d:	add    BYTE PTR [rax],al
   140016370:	add    al,BYTE PTR [rcx+0x0]
   140016373:	add    BYTE PTR [rax],ch
   140016375:	add    eax,DWORD PTR [rcx]
   140016377:	add    BYTE PTR [rax-0x2effffbf],dl
   14001637d:	add    BYTE PTR [r8],al
   140016380:	pop    rsp
   140016381:	add    eax,0x42000001
   140016386:	add    BYTE PTR [rax],al
   140016388:	pop    rbp
   140016389:	add    BYTE PTR [rax],r8b
   14001638c:	jl     0x140016393
   14001638e:	add    DWORD PTR [rax],eax
   140016390:	(bad)  
   140016391:	add    BYTE PTR [rax],r8b
   140016394:	movabs ds:0xa400010c40000044,eax
   14001639d:	add    BYTE PTR [rax],r8b
   1400163a0:	cli    
   1400163a1:	add    BYTE PTR [rax],r8b
   1400163a4:	or     al,0x1
   1400163a7:	add    ah,bh
   1400163a9:	add    BYTE PTR [rax],r8b
   1400163ac:	xchg   esi,eax
   1400163ad:	add    BYTE PTR [r8],r8b
   1400163b0:	sub    BYTE PTR [rbx],al
   1400163b2:	add    DWORD PTR [rax],eax
   1400163b4:	cwde   
   1400163b5:	add    BYTE PTR [r8],r8b
   1400163b8:	jle    0x140016400
   1400163ba:	add    BYTE PTR [rax],al
   1400163bc:	fadd   QWORD PTR [rip+0x46800001]        # 0x1868163c3
   1400163c2:	add    BYTE PTR [rax],al
   1400163c4:	enter  0x47,0x0
   1400163c8:	movabs al,ds:0xe6000047c8000105
   1400163d1:	rex.RXB add BYTE PTR [r8],r8b
   1400163d4:	mov    eax,0xe8000105
   1400163d9:	rex.RXB add BYTE PTR [r8],r8b
   1400163dc:	jne    0x140016427
   1400163de:	add    BYTE PTR [rax],al
   1400163e0:	rol    BYTE PTR [rip+0x49780001],0x0        # 0x1897963e8
   1400163e7:	add    BYTE PTR [rcx],bl
   1400163e9:	rex.WX add BYTE PTR [rax],al
   1400163ec:	fadd   DWORD PTR [rdi]
   1400163ee:	add    DWORD PTR [rax],eax
   1400163f0:	xor    BYTE PTR [rdx+0x0],cl
   1400163f3:	add    BYTE PTR [rdx],bl
   1400163f5:	rex.WXB add BYTE PTR [r8],al
   1400163f8:	fadd   DWORD PTR [rip+0x4b1c0001]        # 0x18b1d63ff
   1400163fe:	add    BYTE PTR [rax],al
   140016400:	rex.WR add BYTE PTR ss:[rax],r8b
   140016404:	fadd   QWORD PTR [rip+0x4c380001]        # 0x18c39640b
   14001640a:	add    BYTE PTR [rax],al
   14001640c:	test   DWORD PTR [rbp+0x0],ecx
   14001640f:	add    ah,dh
   140016411:	add    eax,0x4d880001
   140016416:	add    BYTE PTR [rax],al
   140016418:	fimul  DWORD PTR [rsi+0x0]
   14001641b:	add    BYTE PTR [rax-0x23fffef6],ah
   140016421:	rex.WRX add BYTE PTR [rax],r8b
   140016424:	call   QWORD PTR [rbp+0x0]
   140016427:	add    BYTE PTR [rsi+rax*1],cl
   14001642a:	add    DWORD PTR [rax],eax
   14001642c:	add    BYTE PTR [rsi+0x0],dl
   14001642f:	add    BYTE PTR [rbx],bl
   140016431:	push   rdi
   140016432:	add    BYTE PTR [rax],al
   140016434:	and    al,0x6
   140016436:	add    DWORD PTR [rax],eax
   140016438:	sbb    al,0x57
   14001643a:	add    BYTE PTR [rax],al
   14001643c:	rex.X push rdi
   14001643e:	add    BYTE PTR [rax],al
   140016440:	or     al,0x1
   140016443:	add    BYTE PTR [rdi+rdx*2+0x0],al
   140016447:	add    bl,cl
   140016449:	push   rdi
   14001644a:	add    BYTE PTR [rax],al
   14001644c:	movabs al,ds:0x9e000057cc00010a
   140016455:	pop    rdx
   140016456:	add    BYTE PTR [rax],al
   140016458:	push   rsp
   140016459:	(bad)  
   14001645a:	add    DWORD PTR [rax],eax
   14001645c:	movabs al,ds:0xa000005b3600005a
   140016465:	or     al,BYTE PTR [rcx]
   140016467:	add    BYTE PTR [rax],bh
   140016469:	pop    rbx
   14001646a:	add    BYTE PTR [rax],al
   14001646c:	(bad)  
   14001646d:	pop    rsp
   14001646e:	add    BYTE PTR [rax],al
   140016470:	jo     0x140016478
   140016472:	add    DWORD PTR [rax],eax
   140016474:	sbb    BYTE PTR [rax+rax*1+0x0],bl
   140016478:	xchg   ecx,eax
   140016479:	pop    rsp
   14001647a:	add    BYTE PTR [rax],al
   14001647c:	movabs al,ds:0xe000005c9400010a
   140016485:	pop    rsp
   140016486:	add    BYTE PTR [rax],al
   140016488:	fadd   DWORD PTR [rdi]
   14001648a:	add    DWORD PTR [rax],eax
   14001648c:	loopne 0x1400164ea
   14001648e:	add    BYTE PTR [rax],al
   140016490:	int3   
   140016491:	pop    rbp
   140016492:	add    BYTE PTR [rax],al
   140016494:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016495:	(bad)  
   140016496:	add    DWORD PTR [rax],eax
   140016498:	fcomp  DWORD PTR [rbp+0x0]
   14001649b:	add    BYTE PTR [rsi+rbx*2+0x3280000],dl
   1400164a2:	add    DWORD PTR [rax],eax
   1400164a4:	xchg   esp,eax
   1400164a5:	pop    rsi
   1400164a6:	add    BYTE PTR [rax],al
   1400164a8:	push   rdi
   1400164a9:	pop    rdi
   1400164aa:	add    BYTE PTR [rax],al
   1400164ac:	in     al,0x6
   1400164ae:	add    DWORD PTR [rax],eax
   1400164b0:	pop    rax
   1400164b1:	pop    rdi
   1400164b2:	add    BYTE PTR [rax],al
   1400164b4:	(bad)  
   1400164b5:	pop    rdi
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	fadd   DWORD PTR [rdi]
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	nop
   1400164bd:	pop    rdi
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	rcr    DWORD PTR [rdi+0x0],1
   1400164c3:	add    BYTE PTR [rax+0xc],al
   1400164c6:	add    DWORD PTR [rax],eax
   1400164c8:	(bad)  
   1400164c9:	pop    rdi
   1400164ca:	add    BYTE PTR [rax],al
   1400164cc:	in     al,dx
   1400164cd:	pop    rdi
   1400164ce:	add    BYTE PTR [rax],al
   1400164d0:	or     al,0x1
   1400164d3:	add    ah,ch
   1400164d5:	pop    rdi
   1400164d6:	add    BYTE PTR [rax],al
   1400164d8:	mov    esp,0xe4000061
   1400164dd:	or     DWORD PTR [rcx],eax
   1400164df:	add    BYTE PTR [rcx+riz*2+0x62350000],bh
   1400164e6:	add    BYTE PTR [rax],al
   1400164e8:	sub    BYTE PTR [rbx],al
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	cmp    BYTE PTR [rdx+0x0],ah
   1400164ef:	add    BYTE PTR [rax+0x63],ch
   1400164f2:	add    BYTE PTR [rax],al
   1400164f4:	or     BYTE PTR [rcx+rax*1],al
   1400164f7:	add    BYTE PTR [rax+0x63],ch
   1400164fa:	add    BYTE PTR [rax],al
   1400164fc:	(bad)  
   1400164fd:	add    BYTE PTR gs:[rax],al
   140016500:	or     al,0x7
   140016502:	add    DWORD PTR [rax],eax
   140016504:	cmp    BYTE PTR [rbp+0x0],ah
   140016507:	add    BYTE PTR [rsi],ch
   140016509:	data16 add BYTE PTR [rax],al
   14001650c:	sub    BYTE PTR [rdi],al
   14001650e:	add    DWORD PTR [rax],eax
   140016510:	xor    BYTE PTR [rsi+0x0],ah
   140016513:	add    BYTE PTR [rdi+riz*2],ah
   140016516:	add    BYTE PTR [rax],al
   140016518:	rol    BYTE PTR [rdi],0x1
   14001651b:	add    BYTE PTR [rdi+riz*2],ah
   14001651e:	add    BYTE PTR [rax],al
   140016520:	xlat   BYTE PTR ds:[rbx]
   140016521:	add    BYTE PTR [eax],al
   140016524:	cmp    BYTE PTR [rdi],al
   140016526:	add    DWORD PTR [rax],eax
   140016528:	loopne 0x140016591
   14001652a:	add    BYTE PTR [rax],al
   14001652c:	pop    rsi
   14001652d:	push   0x7440000
   140016532:	add    DWORD PTR [rax],eax
   140016534:	(bad)  
   140016535:	push   0x68e30000
   14001653a:	add    BYTE PTR [rax],al
   14001653c:	rex.R (bad) 
   14001653e:	add    DWORD PTR [rax],eax
   140016540:	in     al,0x68
   140016542:	add    BYTE PTR [rax],al
   140016544:	imul   ebp,DWORD PTR [rcx+0x0],0x1074400
   14001654b:	add    BYTE PTR [rcx+rbp*2+0x0],ch
   14001654f:	add    BYTE PTR [rsi],dl
   140016551:	push   0x0
   140016553:	add    BYTE PTR [rdi+rax*1+0x1],bl
   140016557:	add    BYTE PTR [rax],bl
   140016559:	push   0x0
   14001655b:	add    al,al
   14001655d:	jno    0x14001655f
   14001655f:	add    BYTE PTR [rdi+rax*1+0x71c00001],al
   140016566:	add    BYTE PTR [rax],al
   140016568:	xchg   edx,eax
   140016569:	jb     0x14001656b
   14001656b:	add    BYTE PTR [rdi+rax*1+0x72940001],bl
   140016572:	add    BYTE PTR [rax],al
   140016574:	(bad)  
   140016575:	jb     0x140016577
   140016577:	add    BYTE PTR [rax-0x37fffefb],bh
   14001657d:	jb     0x14001657f
   14001657f:	add    dh,bl
   140016581:	jae    0x140016583
   140016583:	add    al,al
   140016585:	(bad)  
   140016586:	add    DWORD PTR [rax],eax
   140016588:	loopne 0x1400165fd
   14001658a:	add    BYTE PTR [rax],al
   14001658c:	js     0x140016602
   14001658e:	add    BYTE PTR [rax],al
   140016590:	or     al,0x1
   140016593:	add    BYTE PTR [rsp+rsi*2+0x75070000],ah
   14001659a:	add    BYTE PTR [rax],al
   14001659c:	fadd   DWORD PTR [rdi]
   14001659e:	add    DWORD PTR [rax],eax
   1400165a0:	or     BYTE PTR [rbp+0x0],dh
   1400165a3:	add    BYTE PTR [rip+0x40000075],ah        # 0x18001661e
   1400165a9:	or     al,0x1
   1400165ab:	add    BYTE PTR [rax],ch
   1400165ad:	jne    0x1400165af
   1400165af:	add    BYTE PTR [rax+0x75],ch
   1400165b2:	add    BYTE PTR [rax],al
   1400165b4:	or     al,0x1
   1400165b7:	add    BYTE PTR [rax-0x4bffff8b],al
   1400165bd:	js     0x1400165bf
   1400165bf:	add    al,ah
   1400165c1:	(bad)  
   1400165c2:	add    DWORD PTR [rax],eax
   1400165c4:	in     al,0x79
   1400165c6:	add    BYTE PTR [rax],al
   1400165c8:	pop    rbp
   1400165c9:	jnp    0x1400165cb
   1400165cb:	add    BYTE PTR [rax+0x6000010a],ah
   1400165d1:	jnp    0x1400165d3
   1400165d3:	add    BYTE PTR [rdi-0x27ffff85],dh
   1400165d9:	(bad)  
   1400165da:	add    DWORD PTR [rax],eax
   1400165dc:	mov    eax,0x2d00007b
   1400165e1:	jl     0x1400165e3
   1400165e3:	add    ah,ah
   1400165e5:	(bad)  
   1400165e6:	add    DWORD PTR [rax],eax
   1400165e8:	xor    BYTE PTR [rax+rax*1+0x0],bh
   1400165ec:	mov    esp,0xe400007c
   1400165f1:	or     DWORD PTR [rcx],eax
   1400165f3:	add    BYTE PTR [rsp+rdi*2+0x7eac0000],bh
   1400165fa:	add    BYTE PTR [rax],al
   1400165fc:	add    al,0x8
   1400165fe:	add    DWORD PTR [rax],eax
   140016600:	lods   al,BYTE PTR ds:[rsi]
   140016601:	jle    0x140016603
   140016603:	add    BYTE PTR [rsi+0x7f],ah
   140016606:	add    BYTE PTR [rax],al
   140016608:	and    al,0x8
   14001660a:	add    DWORD PTR [rax],eax
   14001660c:	push   0xfffffffff800007f
   140016611:	jg     0x140016613
   140016613:	add    BYTE PTR [rax-0x7fffef7],ah
   140016619:	jg     0x14001661b
   14001661b:	add    BYTE PTR [rbp-0x7e],ch
   14001661e:	add    BYTE PTR [rax],al
   140016620:	rex.W or BYTE PTR [rcx],al
   140016623:	add    BYTE PTR [rax-0x7e],dh
   140016626:	add    BYTE PTR [rax],al
   140016628:	rex.WRX test BYTE PTR [rax],r8b
   14001662b:	add    BYTE PTR [rax+rcx*1+0x1],ah
   14001662f:	add    BYTE PTR [rax-0x7c],dl
   140016632:	add    BYTE PTR [rax],al
   140016634:	js     0x1400165ba
   140016636:	add    BYTE PTR [rax],al
   140016638:	or     al,0x1
   14001663b:	add    BYTE PTR [rax-0x7c],bh
   14001663e:	add    BYTE PTR [rax],al
   140016640:	mov    cl,0x84
   140016642:	add    BYTE PTR [rax],al
   140016644:	or     al,0x1
   140016647:	add    al,dl
   140016649:	test   BYTE PTR [rax],al
   14001664b:	add    BYTE PTR [rax-0x7b],bh
   14001664e:	add    BYTE PTR [rax],al
   140016650:	cwde   
   140016651:	or     BYTE PTR [rcx],al
   140016653:	add    BYTE PTR [rax-0x7b],bh
   140016656:	add    BYTE PTR [rax],al
   140016658:	add    BYTE PTR [rdi+0x89c0000],0x1
   14001665f:	add    BYTE PTR [rax+0x5000087],al
   140016665:	mov    BYTE PTR [rax],al
   140016667:	add    al,bl
   140016669:	(bad)  
   14001666a:	add    DWORD PTR [rax],eax
   14001666c:	or     BYTE PTR [rax-0x77290000],cl
   140016672:	add    BYTE PTR [rax],al
   140016674:	fadd   DWORD PTR [rdi]
   140016676:	add    DWORD PTR [rax],eax
   140016678:	hlt    
   140016679:	mov    BYTE PTR [rax],al
   14001667b:	add    BYTE PTR [rdi-0x77],bl
   14001667e:	add    BYTE PTR [rax],al
   140016680:	fadd   DWORD PTR [rdi]
   140016682:	add    DWORD PTR [rax],eax
   140016684:	(bad)  
   140016685:	mov    DWORD PTR [rax],eax
   140016687:	add    BYTE PTR [rax+0x40000089],ah
   14001668d:	or     al,0x1
   14001668f:	add    BYTE PTR [rax-0x19ffff77],ah
   140016695:	mov    DWORD PTR [rax],eax
   140016697:	add    al,bl
   140016699:	(bad)  
   14001669a:	add    DWORD PTR [rax],eax
   14001669c:	call   0x17901672a
   1400166a1:	mov    al,BYTE PTR [rax]
   1400166a3:	add    BYTE PTR [rax+0x3c000108],bh
   1400166a9:	mov    al,BYTE PTR [rax]
   1400166ab:	add    cl,dl
   1400166ad:	mov    al,BYTE PTR [rax]
   1400166af:	add    BYTE PTR [rax-0x2bfffef7],ch
   1400166b5:	mov    al,BYTE PTR [rax]
   1400166b7:	add    BYTE PTR [rbx-0x33ffff6b],ah
   1400166bd:	or     BYTE PTR [rcx],al
   1400166bf:	add    BYTE PTR [rbp+rdx*4-0x69c70000],ah
   1400166c6:	add    BYTE PTR [rax],al
   1400166c8:	sub    BYTE PTR [rbx],al
   1400166ca:	add    DWORD PTR [rax],eax
   1400166cc:	cmp    al,0x96
   1400166ce:	add    BYTE PTR [rax],al
   1400166d0:	(bad)  
   1400166d1:	xchg   edi,eax
   1400166d2:	add    BYTE PTR [rax],al
   1400166d4:	lock or BYTE PTR [rcx],al
   1400166d7:	add    BYTE PTR [rax],ah
   1400166d9:	xchg   edi,eax
   1400166da:	add    BYTE PTR [rax],al
   1400166dc:	sbb    BYTE PTR [rsi+0x91c0000],0x1
   1400166e3:	add    BYTE PTR [rax+0x5f00009e],al
   1400166e9:	lahf   
   1400166ea:	add    BYTE PTR [rax],al
   1400166ec:	rex or DWORD PTR [rcx],eax
   1400166ef:	add    BYTE PTR [rax-0x61],ah
   1400166f2:	add    BYTE PTR [rax],al
   1400166f4:	mov    bl,0x9f
   1400166f6:	add    BYTE PTR [rax],al
   1400166f8:	fadd   DWORD PTR [rdi]
   1400166fa:	add    DWORD PTR [rax],eax
   1400166fc:	mov    ah,0x9f
   1400166fe:	add    BYTE PTR [rax],al
   140016700:	adc    esp,DWORD PTR [rax+0xc400000]
   140016706:	add    DWORD PTR [rax],eax
   140016708:	adc    al,0xa0
   14001670a:	add    BYTE PTR [rax],al
   14001670c:	adc    esp,DWORD PTR [rdx+0x96c0000]
   140016712:	add    DWORD PTR [rax],eax
   140016714:	sub    al,0xa2
   140016716:	add    BYTE PTR [rax],al
   140016718:	movabs eax,ds:0xac000109880000a3
   140016721:	movabs ds:0x9a00000a3f10000,eax
   14001672a:	add    DWORD PTR [rax],eax
   14001672c:	hlt    
   14001672d:	movabs ds:0x9a00000a43b0000,eax
   140016736:	add    DWORD PTR [rax],eax
   140016738:	cmp    al,0xa4
   14001673a:	add    BYTE PTR [rax],al
   14001673c:	jae    0x1400166e2
   14001673e:	add    BYTE PTR [rax],al
   140016740:	fadd   DWORD PTR [rdi]
   140016742:	add    DWORD PTR [rax],eax
   140016744:	je     0x1400166ea
   140016746:	add    BYTE PTR [rax],al
   140016748:	(bad)
   14001674b:	add    BYTE PTR [rax-0x37fffef8],bh
   140016751:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016752:	add    BYTE PTR [rax],al
   140016754:	(bad)  
   140016755:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016756:	add    BYTE PTR [rax],al
   140016758:	test   al,0x9
   14001675a:	add    DWORD PTR [rax],eax
   14001675c:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   14001675e:	add    BYTE PTR [rax],al
   140016760:	mov    esi,0xc00000b0
   140016765:	or     DWORD PTR [rcx],eax
   140016767:	add    al,al
   140016769:	mov    al,0x0
   14001676b:	add    BYTE PTR [rbp-0x4f],ch
   14001676e:	add    BYTE PTR [rax],al
   140016770:	in     al,0x9
   140016772:	add    DWORD PTR [rax],eax
   140016774:	jo     0x140016727
   140016776:	add    BYTE PTR [rax],al
   140016778:	sbb    dh,BYTE PTR [rdx+0x9f80000]
   14001677e:	add    DWORD PTR [rax],eax
   140016780:	sbb    al,0xb2
   140016782:	add    BYTE PTR [rax],al
   140016784:	nop
   140016785:	mov    dl,0x0
   140016787:	add    BYTE PTR [rax+0xc],al
   14001678a:	add    DWORD PTR [rax],eax
   14001678c:	nop
   14001678d:	mov    dl,0x0
   14001678f:	add    BYTE PTR [rip+0x80000b3],dh        # 0x148016848
   140016795:	or     al,BYTE PTR [rcx]
   140016797:	add    BYTE PTR [rax-0x4d],ah
   14001679a:	add    BYTE PTR [rax],al
   14001679c:	push   0x380000b5
   1400167a1:	or     al,BYTE PTR [rcx]
   1400167a3:	add    BYTE PTR [rax-0x4b],ch
   1400167a6:	add    BYTE PTR [rax],al
   1400167a8:	(bad)  
   1400167a9:	mov    dh,0x0
   1400167ab:	add    BYTE PTR [rax+0xa],bh
   1400167ae:	add    DWORD PTR [rax],eax
   1400167b0:	mov    sil,0x0
   1400167b3:	add    BYTE PTR [rbx-0x43ffff4a],bh
   1400167b9:	or     eax,DWORD PTR [rcx]
   1400167bb:	add    al,dl
   1400167bd:	mov    dh,0x0
   1400167bf:	add    BYTE PTR [rcx],dh
   1400167c1:	mov    bh,0x0
   1400167c3:	add    al,bl
   1400167c5:	(bad)  
   1400167c6:	add    DWORD PTR [rax],eax
   1400167c8:	xor    al,0xb7
   1400167ca:	add    BYTE PTR [rax],al
   1400167cc:	(bad)  
   1400167cd:	mov    eax,0xaa00000
   1400167d2:	add    DWORD PTR [rax],eax
   1400167d4:	or     BYTE PTR [rax-0x46600000],bh
   1400167da:	add    BYTE PTR [rax],al
   1400167dc:	mov    al,0xa
   1400167de:	add    DWORD PTR [rax],eax
   1400167e0:	movabs al,ds:0xcc0000ba6e0000b9
   1400167e9:	or     al,BYTE PTR [rcx]
   1400167eb:	add    BYTE PTR [rax-0x46],dh
   1400167ee:	add    BYTE PTR [rax],al
   1400167f0:	lahf   
   1400167f1:	mov    edx,0xc400000
   1400167f6:	add    DWORD PTR [rax],eax
   1400167f8:	movabs al,ds:0xd40000bb750000ba
   140016801:	or     al,BYTE PTR [rcx]
   140016803:	add    BYTE PTR [rax-0x21ffff45],dl
   140016809:	mov    ebx,0xae00000
   14001680e:	add    DWORD PTR [rax],eax
   140016810:	loopne 0x1400167cd
   140016812:	add    BYTE PTR [rax],al
   140016814:	(bad)  
   140016815:	mov    edi,0xae80000
   14001681a:	add    DWORD PTR [rax],eax
   14001681c:	sar    BYTE PTR [rdi-0x3fc40000],1
   140016822:	add    BYTE PTR [rax],al
   140016824:	jl     0x140016828
   140016826:	add    DWORD PTR [rax],eax
   140016828:	cmp    al,0xc0
   14001682a:	add    BYTE PTR [rax],al
   14001682c:	rex.RX rol DWORD PTR [rax],0x0
   140016830:	call   0x18801693f
   140016835:	rol    DWORD PTR [rax],0x0
   140016838:	adc    al,ah
   14001683a:	add    BYTE PTR [rax],al
   14001683c:	lock or al,BYTE PTR [rcx]
   14001683f:	add    BYTE PTR [rsp+rax*8],dl
   140016842:	add    BYTE PTR [rax],al
   140016844:	stos   BYTE PTR es:[rdi],al
   140016845:	(bad)  
   140016846:	add    BYTE PTR [rax],al
   140016848:	sbb    BYTE PTR [rbx],cl
   14001684a:	add    DWORD PTR [rax],eax
   14001684c:	lods   al,BYTE PTR ds:[rsi]
   14001684d:	(bad)  
   14001684e:	add    BYTE PTR [rax],al
   140016850:	or     al,dh
   140016852:	add    BYTE PTR [rax],al
   140016854:	sub    BYTE PTR [rbx],cl
   140016856:	add    DWORD PTR [rax],eax
   140016858:	or     al,0xc6
   14001685a:	add    BYTE PTR [rax],al
   14001685c:	mov    al,dh
   14001685e:	add    BYTE PTR [rax],al
   140016860:	push   rax
   140016861:	or     eax,DWORD PTR [rcx]
   140016863:	add    BYTE PTR [rsi+rax*8-0x37b00000],cl
   14001686a:	add    BYTE PTR [rax],al
   14001686c:	(bad)  
   14001686d:	or     eax,DWORD PTR [rcx]
   14001686f:	add    BYTE PTR [rax-0x38],dl
   140016872:	add    BYTE PTR [rax],al
   140016874:	fs enter 0x0,0xb8
   140016879:	add    eax,0xc8640001
   14001687e:	add    BYTE PTR [rax],al
   140016880:	mov    ebp,0x700000c8
   140016885:	or     eax,DWORD PTR [rcx]
   140016887:	add    al,al
   140016889:	enter  0x0,0x4f
   14001688d:	retf   0x0
   140016890:	js     0x14001689d
   140016892:	add    DWORD PTR [rax],eax
   140016894:	push   rax
   140016895:	retf   0x0
   140016898:	lods   eax,DWORD PTR ds:[rsi]
   140016899:	retf   0x0
   14001689c:	mov    WORD PTR [rbx],cs
   14001689e:	add    DWORD PTR [rax],eax
   1400168a0:	ror    dl,0x0
   1400168a3:	add    BYTE PTR [rax-0x35],dh
   1400168a6:	add    BYTE PTR [rax],al
   1400168a8:	movabs al,ds:0x470000cb8000010b
   1400168b1:	int3   
   1400168b2:	add    BYTE PTR [rax],al
   1400168b4:	test   al,0xb
   1400168b6:	add    DWORD PTR [rax],eax
   1400168b8:	(bad)  
   1400168b9:	int3   
   1400168ba:	add    BYTE PTR [rax],al
   1400168bc:	adc    eax,0xb00000cd
   1400168c1:	or     eax,DWORD PTR [rcx]
   1400168c3:	add    BYTE PTR [rax],bl
   1400168c5:	int    0x0
   1400168c7:	add    BYTE PTR [rbx-0x33],dl
   1400168ca:	add    BYTE PTR [rax],al
   1400168cc:	mov    ah,0xb
   1400168ce:	add    DWORD PTR [rax],eax
   1400168d0:	push   rsp
   1400168d1:	int    0x0
   1400168d3:	add    BYTE PTR [rsi-0x33],dh
   1400168d6:	add    BYTE PTR [rax],al
   1400168d8:	or     al,0x1
   1400168db:	add    BYTE PTR [rax-0x35ffff33],dh
   1400168e1:	int    0x0
   1400168e3:	add    BYTE PTR [rsi+rax*1-0x3235ffff],bl
   1400168ea:	add    BYTE PTR [rax],al
   1400168ec:	out    dx,al
   1400168ed:	int    0x0
   1400168ef:	add    BYTE PTR [rsi+rax*1-0x3211ffff],bl
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	or     dh,cl
   1400168fa:	add    BYTE PTR [rax],al
   1400168fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400168fd:	add    al,BYTE PTR [rcx]
   1400168ff:	add    BYTE PTR [rax],cl
   140016901:	(bad)  
   140016902:	add    BYTE PTR [rax],al
   140016904:	and    cl,dh
   140016906:	add    BYTE PTR [rax],al
   140016908:	pushf  
   140016909:	(bad)  
   14001690a:	add    DWORD PTR [rax],eax
   14001690c:	and    cl,dh
   14001690e:	add    BYTE PTR [rax],al
   140016910:	rex (bad) 
   140016912:	add    BYTE PTR [rax],al
   140016914:	pushf  
   140016915:	(bad)  
   140016916:	add    DWORD PTR [rax],eax
   140016918:	rex (bad) 
   14001691a:	add    BYTE PTR [rax],al
   14001691c:	pop    rsi
   14001691d:	(bad)  
   14001691e:	add    BYTE PTR [rax],al
   140016920:	pushf  
   140016921:	(bad)  
   140016922:	add    DWORD PTR [rax],eax
   140016924:	pop    rsi
   140016925:	(bad)  
   140016926:	add    BYTE PTR [rax],al
   140016928:	jl     0x1400168f8
   14001692a:	add    BYTE PTR [rax],al
   14001692c:	pushf  
   14001692d:	(bad)  
   14001692e:	add    DWORD PTR [rax],eax
   140016930:	jl     0x140016900
   140016932:	add    BYTE PTR [rax],al
   140016934:	xchg   edi,eax
   140016935:	(bad)  
   140016936:	add    BYTE PTR [rax],al
   140016938:	pushf  
   140016939:	(bad)  
   14001693a:	add    DWORD PTR [rax],eax
   14001693c:	pushf  
   14001693d:	(bad)  
   14001693e:	add    BYTE PTR [rax],al
   140016940:	mov    bh,0xce
   140016942:	add    BYTE PTR [rax],al
   140016944:	pushf  
   140016945:	(bad)  
   140016946:	add    DWORD PTR [rax],eax
   140016948:	mov    bh,0xce
   14001694a:	add    BYTE PTR [rax],al
   14001694c:	int    0xce
   14001694e:	add    BYTE PTR [rax],al
   140016950:	pushf  
   140016951:	(bad)  
   140016952:	add    DWORD PTR [rax],eax
   140016954:	ror    dh,1
   140016956:	add    BYTE PTR [rax],al
   140016958:	repnz (bad) 
   14001695a:	add    BYTE PTR [rax],al
   14001695c:	pushf  
   14001695d:	(bad)  
   14001695e:	add    DWORD PTR [rax],eax
   140016960:	repnz (bad) 
   140016962:	add    BYTE PTR [rax],al
   140016964:	or     ecx,edi
   140016966:	add    BYTE PTR [rax],al
   140016968:	pushf  
   140016969:	(bad)  
   14001696a:	add    DWORD PTR [rax],eax
   14001696c:	or     ecx,edi
   14001696e:	add    BYTE PTR [rax],al
   140016970:	xor    ecx,edi
   140016972:	add    BYTE PTR [rax],al
   140016974:	pushf  
   140016975:	(bad)  
   140016976:	add    DWORD PTR [rax],eax
   140016978:	cmp    ecx,edi
   14001697a:	add    BYTE PTR [rax],al
   14001697c:	push   rsi
   14001697d:	iret   
   14001697e:	add    BYTE PTR [rax],al
   140016980:	pushf  
   140016981:	(bad)  
   140016982:	add    DWORD PTR [rax],eax
   140016984:	push   rsi
   140016985:	iret   
   140016986:	add    BYTE PTR [rax],al
   140016988:	outs   dx,DWORD PTR ds:[rsi]
   140016989:	iret   
   14001698a:	add    BYTE PTR [rax],al
   14001698c:	pushf  
   14001698d:	(bad)  
   14001698e:	add    DWORD PTR [rax],eax
   140016990:	outs   dx,DWORD PTR ds:[rsi]
   140016991:	iret   
   140016992:	add    BYTE PTR [rax],al
   140016994:	mov    cl,bh
   140016996:	add    BYTE PTR [rax],al
   140016998:	pushf  
   140016999:	(bad)  
   14001699a:	add    DWORD PTR [rax],eax
   14001699c:	mov    cl,bh
   14001699e:	add    BYTE PTR [rax],al
   1400169a0:	ror    edi,cl
   1400169a2:	add    BYTE PTR [rax],al
   1400169a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400169a5:	add    al,BYTE PTR [rcx]
   1400169a7:	add    bl,dl
   1400169a9:	iret   
   1400169aa:	add    BYTE PTR [rax],al
   1400169ac:	out    dx,al
   1400169ad:	iret   
   1400169ae:	add    BYTE PTR [rax],al
   1400169b0:	pushf  
   1400169b1:	(bad)  
   1400169b2:	add    DWORD PTR [rax],eax
   1400169b4:	out    dx,al
   1400169b5:	iret   
   1400169b6:	add    BYTE PTR [rax],al
   1400169b8:	or     eax,edx
   1400169ba:	add    BYTE PTR [rax],al
   1400169bc:	pushf  
   1400169bd:	(bad)  
   1400169be:	add    DWORD PTR [rax],eax
   1400169c0:	or     eax,edx
   1400169c2:	add    BYTE PTR [rax],al
   1400169c4:	and    al,0xd0
   1400169c6:	add    BYTE PTR [rax],al
   1400169c8:	pushf  
   1400169c9:	(bad)  
   1400169ca:	add    DWORD PTR [rax],eax
   1400169cc:	and    al,0xd0
   1400169ce:	add    BYTE PTR [rax],al
   1400169d0:	(bad)  
   1400169d1:	rol    BYTE PTR [rax],1
   1400169d3:	add    BYTE PTR [rsi+rax*1-0x2fbbffff],bl
   1400169da:	add    BYTE PTR [rax],al
   1400169dc:	pop    rdi
   1400169dd:	rol    BYTE PTR [rax],1
   1400169df:	.byte 0x0
   1400169e0:	pushf  
   1400169e1:	(bad)  
   1400169e2:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

0000000140017000 <.rsrc>:
	...
   140017008:	add    al,0x0
   14001700a:	add    BYTE PTR [rax],al
   14001700c:	add    BYTE PTR [rax],al
   14001700e:	add    eax,DWORD PTR [rax]
   140017010:	add    eax,DWORD PTR [rax]
   140017012:	add    BYTE PTR [rax],al
   140017014:	sub    BYTE PTR [rax],al
   140017016:	add    BYTE PTR [rax+0xe],al
   14001701c:	jo     0x14001701e
   14001701e:	add    BYTE PTR [rax+0x18],al
   140017024:	mov    BYTE PTR [rax],al
   140017026:	add    BYTE PTR [rax+0x0],al
   14001702c:	add    BYTE PTR [rax],al
   14001702e:	add    BYTE PTR [rax],al
   140017030:	add    al,0x0
   140017032:	add    BYTE PTR [rax],al
   140017034:	add    BYTE PTR [rax],al
   140017036:	(bad)  
   140017037:	add    BYTE PTR [rcx],al
   140017039:	add    BYTE PTR [rax],al
   14001703b:	add    BYTE PTR [rax+0x2800000],ah
   140017041:	add    BYTE PTR [rax],al
   140017043:	add    BYTE PTR [rax+0x3800000],bh
   140017049:	add    BYTE PTR [rax],al
   14001704b:	add    al,dl
   14001704d:	add    BYTE PTR [rax],al
   14001704f:	add    BYTE PTR [rax+rax*1],0x0
   140017053:	add    al,ch
   140017055:	add    BYTE PTR [rax],al
   140017057:	add    BYTE PTR [rip+0x0],0x1        # 0x14001705e
   14001705e:	add    BYTE PTR [rax+0x6],al
   140017064:	sbb    BYTE PTR [rcx],al
   140017066:	add    BYTE PTR [rax+0x7],al
   14001706c:	xor    BYTE PTR [rcx],al
   14001706e:	add    BYTE PTR [rax+0x0],al
   140017074:	add    BYTE PTR [rax],al
   140017076:	add    BYTE PTR [rax],al
   140017078:	add    al,0x0
   14001707a:	add    BYTE PTR [rax],al
   14001707c:	add    BYTE PTR [rax],al
   14001707e:	add    DWORD PTR [rax],eax
   140017080:	add    BYTE PTR gs:[rax],al
   140017083:	add    BYTE PTR [rax+0x1],cl
   140017086:	add    BYTE PTR [rax+0x0],al
   14001708c:	add    BYTE PTR [rax],al
   14001708e:	add    BYTE PTR [rax],al
   140017090:	add    al,0x0
   140017092:	add    BYTE PTR [rax],al
   140017094:	add    BYTE PTR [rax],al
   140017096:	add    DWORD PTR [rax],eax
   140017098:	add    DWORD PTR [rax],eax
   14001709a:	add    BYTE PTR [rax],al
   14001709c:	(bad)  
   14001709d:	add    DWORD PTR [rax],eax
   14001709f:	add    BYTE PTR [rax],0x0
   1400170a2:	add    BYTE PTR [rax],al
   1400170a4:	add    BYTE PTR [rax],al
   1400170a6:	add    BYTE PTR [rax],al
   1400170a8:	add    al,0x0
   1400170aa:	add    BYTE PTR [rax],al
   1400170ac:	add    BYTE PTR [rax],al
   1400170ae:	add    DWORD PTR [rax],eax
   1400170b0:	add    BYTE PTR [rax],al
   1400170b2:	add    BYTE PTR [rax],al
   1400170b4:	js     0x1400170b7
	...
   1400170be:	add    BYTE PTR [rax],al
   1400170c0:	add    al,0x0
   1400170c2:	add    BYTE PTR [rax],al
   1400170c4:	add    BYTE PTR [rax],al
   1400170c6:	add    DWORD PTR [rax],eax
   1400170c8:	add    BYTE PTR [rax],al
   1400170ca:	add    BYTE PTR [rax],al
   1400170cc:	mov    BYTE PTR [rcx],al
	...
   1400170d6:	add    BYTE PTR [rax],al
   1400170d8:	add    al,0x0
   1400170da:	add    BYTE PTR [rax],al
   1400170dc:	add    BYTE PTR [rax],al
   1400170de:	add    DWORD PTR [rax],eax
   1400170e0:	add    BYTE PTR [rax],al
   1400170e2:	add    BYTE PTR [rax],al
   1400170e4:	cwde   
   1400170e5:	add    DWORD PTR [rax],eax
	...
   1400170ef:	add    BYTE PTR [rax+rax*1],al
   1400170f2:	add    BYTE PTR [rax],al
   1400170f4:	add    BYTE PTR [rax],al
   1400170f6:	add    DWORD PTR [rax],eax
   1400170f8:	add    BYTE PTR [rax],al
   1400170fa:	add    BYTE PTR [rax],al
   1400170fc:	test   al,0x1
	...
   140017106:	add    BYTE PTR [rax],al
   140017108:	add    al,0x0
   14001710a:	add    BYTE PTR [rax],al
   14001710c:	add    BYTE PTR [rax],al
   14001710e:	add    DWORD PTR [rax],eax
   140017110:	add    BYTE PTR [rax],al
   140017112:	add    BYTE PTR [rax],al
   140017114:	mov    eax,0x1
   140017119:	add    BYTE PTR [rax],al
   14001711b:	add    BYTE PTR [rax],al
   14001711d:	add    BYTE PTR [rax],al
   14001711f:	add    BYTE PTR [rax+rax*1],al
   140017122:	add    BYTE PTR [rax],al
   140017124:	add    BYTE PTR [rax],al
   140017126:	add    DWORD PTR [rax],eax
   140017128:	add    BYTE PTR [rax],al
   14001712a:	add    BYTE PTR [rax],al
   14001712c:	enter  0x1,0x0
	...
   140017138:	add    al,0x0
   14001713a:	add    BYTE PTR [rax],al
   14001713c:	add    BYTE PTR [rax],al
   14001713e:	add    DWORD PTR [rax],eax
   140017140:	add    BYTE PTR [rax],al
   140017142:	add    BYTE PTR [rax],al
   140017144:	fadd   DWORD PTR [rcx]
	...
   14001714e:	add    BYTE PTR [rax],al
   140017150:	add    al,0x0
   140017152:	add    BYTE PTR [rax],al
   140017154:	add    BYTE PTR [rax],al
   140017156:	add    DWORD PTR [rax],eax
   140017158:	add    BYTE PTR [rax],al
   14001715a:	add    BYTE PTR [rax],al
   14001715c:	call   0x140017162
   140017161:	add    BYTE PTR [rax],al
   140017163:	add    BYTE PTR [rax],al
   140017165:	add    BYTE PTR [rax],al
   140017167:	add    BYTE PTR [rax+rax*1],al
   14001716a:	add    BYTE PTR [rax],al
   14001716c:	add    BYTE PTR [rax],al
   14001716e:	add    DWORD PTR [rax],eax
   140017170:	or     DWORD PTR [rax+rax*1],eax
   140017173:	add    al,bh
   140017175:	add    DWORD PTR [rax],eax
   140017177:	add    BYTE PTR [rax],cl
   140017179:	jb     0x14001717c
   14001717b:	add    al,ch
   14001717d:	add    al,BYTE PTR [rax]
   14001717f:	add    ah,ah
   140017181:	add    al,0x0
   140017183:	add    BYTE PTR [rax],al
   140017185:	add    BYTE PTR [rax],al
   140017187:	add    al,dh
   140017189:	je     0x14001718c
   14001718b:	add    BYTE PTR [rax],ch
   14001718d:	add    DWORD PTR [rax],eax
   14001718f:	add    ah,ah
   140017191:	add    al,0x0
   140017193:	add    BYTE PTR [rax],al
   140017195:	add    BYTE PTR [rax],al
   140017197:	add    BYTE PTR [rax],bl
   140017199:	jbe    0x14001719c
   14001719b:	add    BYTE PTR [rax-0x1bfffff8],ch
   1400171a1:	add    al,0x0
   1400171a3:	add    BYTE PTR [rax],al
   1400171a5:	add    BYTE PTR [rax],al
   1400171a7:	add    al,al
   1400171a9:	jle    0x1400171ac
   1400171ab:	add    BYTE PTR [rax+0x5],ch
   1400171ae:	add    BYTE PTR [rax],al
   1400171b0:	in     al,0x4
   1400171b2:	add    BYTE PTR [rax],al
   1400171b4:	add    BYTE PTR [rax],al
   1400171b6:	add    BYTE PTR [rax],al
   1400171b8:	sub    BYTE PTR [rcx+rax*1+0x25a800],al
   1400171bf:	add    ah,ah
   1400171c1:	add    al,0x0
   1400171c3:	add    BYTE PTR [rax],al
   1400171c5:	add    BYTE PTR [rax],al
   1400171c7:	add    al,dl
   1400171c9:	test   eax,0x10a80001
   1400171ce:	add    BYTE PTR [rax],al
   1400171d0:	in     al,0x4
   1400171d2:	add    BYTE PTR [rax],al
   1400171d4:	add    BYTE PTR [rax],al
   1400171d6:	add    BYTE PTR [rax],al
   1400171d8:	js     0x140017194
   1400171da:	add    DWORD PTR [rax],eax
   1400171dc:	push   0xffffffffe4000004
   1400171e1:	add    al,0x0
   1400171e3:	add    BYTE PTR [rax],al
   1400171e5:	add    BYTE PTR [rax],al
   1400171e7:	add    al,ah
   1400171e9:	mov    esi,0x680001
   1400171ee:	add    BYTE PTR [rax],al
   1400171f0:	in     al,0x4
   1400171f2:	add    BYTE PTR [rax],al
   1400171f4:	add    BYTE PTR [rax],al
   1400171f6:	add    BYTE PTR [rax],al
   1400171f8:	movabs rdi,0x4e40000015a0001
   140017202:	add    BYTE PTR [rax],al
   140017204:	add    BYTE PTR [rax],al
   140017206:	add    BYTE PTR [rax],al
   140017208:	sub    BYTE PTR [rax],al
   14001720a:	add    BYTE PTR [rax],al
   14001720c:	and    BYTE PTR [rax],al
   14001720e:	add    BYTE PTR [rax],al
   140017210:	add    BYTE PTR [rax],al
   140017213:	add    BYTE PTR [rcx],al
   140017215:	add    BYTE PTR [rax+rax*1],al
	...
   140017234:	cs cs add BYTE PTR cs:[rdi+0x47],al
   14001723a:	rex.RXB add BYTE PTR [r15+0x57],r10b
   14001723e:	push   rdi
   14001723f:	add    BYTE PTR [rcx+0x69],ch
   140017242:	imul   eax,DWORD PTR [rax],0x757575
   140017248:	add    BYTE PTR [rax],0x0
   14001724b:	add    BYTE PTR [rax],al
   14001724d:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140017254:	cwde   
   140017255:	cwde   
   140017256:	cwde   
   140017257:	add    BYTE PTR [rdi-0x46ff5859],ah
   14001725d:	mov    ecx,0xc0c000b9
   140017262:	rol    BYTE PTR [rax],0xd7
   140017265:	xlat   BYTE PTR ds:[rbx]
   140017266:	xlat   BYTE PTR ds:[rbx]
   140017267:	add    dh,bh
   140017269:	(bad)  
   14001726a:	inc    BYTE PTR [rax]
   14001726c:	(bad)  
   14001726d:	(bad)  
   14001726e:	inc    DWORD PTR [rax]
   140017270:	add    BYTE PTR [rax],al
   140017272:	add    BYTE PTR [rax+0x8000],al
   140017278:	add    bh,bh
   14001727a:	(bad)  
   14001727b:	push   rax
   14001727d:	add    BYTE PTR [rax],al
   14001727f:	add    BYTE PTR [rax],al
   140017281:	or     al,0x0
   140017283:	(bad)  
   140017284:	int3   
   140017285:	or     BYTE PTR [rax+rax*1],0xf
   140017289:	(bad)  
   14001728a:	ja     0x140017303
   14001728c:	iret   
   14001728d:	add    BYTE PTR [rax],al
   14001728f:	add    BYTE PTR [rax+rax*1],cl
   140017292:	iret   
   140017293:	(bad)  
   140017294:	out    dx,eax
   140017295:	cld    
   140017296:	or     BYTE PTR [rsp+rdi*8],0x77
   14001729a:	ja     0x140017318
   14001729c:	jl     0x14001728e
   14001729e:	add    BYTE PTR [rax],al
   1400172a0:	add    bh,ch
   1400172a2:	dec    esp
   1400172a4:	cld    
   1400172a5:	iret   
   1400172a6:	dec    esp
   1400172a8:	div    DWORD PTR [rdi+0x77]
   1400172ab:	iret   
   1400172ac:	(bad)  
   1400172ad:	lock add BYTE PTR [rax],al
   1400172b0:	or     ah,bh
   1400172b2:	iret   
   1400172b3:	(bad)  
   1400172b4:	out    dx,eax
   1400172b5:	(bad)  
   1400172b6:	(bad)  
   1400172b7:	push   rdi
   1400172b9:	ja     0x140017332
   1400172bb:	ja     0x140017334
   1400172bd:	lock add BYTE PTR [rax],al
   1400172c0:	or     al,ch
   1400172c2:	iret   
   1400172c3:	int3   
   1400172c4:	int3   
   1400172c5:	int3   
   1400172c6:	(bad)  
   1400172c7:	push   rdi
   1400172c9:	ja     0x140017342
   1400172cb:	(bad)  
   1400172cc:	(bad)  
   1400172cd:	(bad)  
   1400172ce:	inc    DWORD PTR [rax]
   1400172d0:	or     bh,bh
   1400172d2:	(bad)  
   1400172d3:	(bad)  
   1400172d4:	out    dx,eax
   1400172d5:	(bad)  
   1400172d6:	cld    
   1400172d7:	div    WORD PTR [rdi+0x77]
   1400172db:	ja     0x140017354
   1400172dd:	ja     0x14001735b
   1400172df:	lock or ah,ch
   1400172e2:	iret   
   1400172e3:	dec    esp
   1400172e5:	inc    esi
   1400172e7:	div    WORD PTR [rdi+0x77]
   1400172eb:	ja     0x140017364
   1400172ed:	ja     0x140017366
   1400172ef:	iret   
   1400172f0:	or     al,bh
   1400172f2:	iret   
   1400172f3:	(bad)  
   1400172f4:	out    dx,eax
   1400172f5:	jmp    QWORD PTR [rsi+0x66]
   1400172f8:	cld    
   1400172f9:	ja     0x140017372
   1400172fb:	ja     0x140017374
   1400172fd:	ja     0x140017376
   1400172ff:	jg     0x140017309
   140017301:	(bad)  
   140017302:	(bad)  
   140017303:	dec    esp
   140017305:	iret   
   140017306:	data16 iretw 
   140017309:	(bad)  
   14001730a:	ja     0x140017383
   14001730c:	ja     0x140017385
   14001730e:	ja     0x14001738f
   140017310:	or     ah,bh
   140017312:	iret   
   140017313:	(bad)  
   140017314:	out    dx,eax
   140017315:	jmp    QWORD PTR [rsi+0x66]
   140017318:	ins    BYTE PTR es:[rdi],dx
   140017319:	(bad)  
   14001731a:	(bad)  
   14001731b:	(bad)  
   14001731c:	cld    
   14001731d:	ja     0x140017396
   14001731f:	jg     0x140017329
   140017321:	call   0x10ffe3ff5
   140017326:	data16 data16 data16 data16 data16 iretw 
   14001732d:	(bad)  
   14001732e:	ja     0x1400173af
   140017330:	or     bh,bh
   140017332:	(bad)  
   140017333:	(bad)  
   140017334:	out    dx,eax
   140017335:	jmp    QWORD PTR [rsi+0x66]
   140017338:	data16 data16 data16 data16 ins BYTE PTR es:[rdi],dx
   14001733d:	div    DWORD PTR [rdi+0x7f]
   140017340:	or     ah,bh
   140017342:	iret   
   140017343:	int3   
   140017344:	int3   
   140017345:	iret   
   140017346:	(bad)  
   140017347:	data16 data16 data16 data16 data16 div WORD PTR [rdi-0x31]
   140017350:	or     al,bh
   140017352:	iret   
   140017353:	fucomip st,st(7)
   140017355:	(bad)  
   140017356:	cld    
   140017357:	data16 data16 data16 data16 data16 idiv WORD PTR [rax+rsi*8+0x8]
   140017361:	(bad)  
   140017362:	dec    DWORD PTR [rbx-0x3331]
   140017368:	(bad)  
   140017369:	(bad)  
   14001736a:	cld    
   14001736b:	data16 data16 (bad) 
   14001736e:	inc    DWORD PTR [rax]
   140017370:	or     ah,bh
   140017372:	iret   
   140017373:	stc    
   140017374:	(bad)  
   140017376:	(bad)  
   140017377:	push   rsi
   140017379:	data16 data16 data16 data16 lock add BYTE PTR [rax],al
   140017380:	or     al,ch
   140017382:	(bad)  
   140017383:	cld    
   140017384:	mov    cl,ah
   140017386:	cld    
   140017387:	int3   
   140017388:	test   bh,0xc6
   14001738b:	data16 data16 lock add BYTE PTR [rax],al
   140017390:	or     dh,bh
   140017392:	push   rdx
   140017393:	pop    rsp
   140017394:	rex.WB (bad) 
   140017397:	(bad)  
   140017398:	cld    
   140017399:	ins    BYTE PTR es:[rdi],dx
   14001739a:	data16 data16 ins BYTE PTR es:[rdi],dx
   14001739d:	lock add BYTE PTR [rax],al
   1400173a0:	add    eax,0x2914c9bc
   1400173a5:	pushf  
   1400173a6:	int3   
   1400173a7:	iret   
   1400173a8:	inc    esi
   1400173aa:	data16 iretw 
   1400173ad:	add    BYTE PTR [rax],al
   1400173af:	add    BYTE PTR [rax],cl
   1400173b1:	fsubr  DWORD PTR [rbp-0x10ec7f]
   1400173b7:	(bad)  
   1400173b8:	(bad)  
   1400173b9:	(bad)  
   1400173ba:	(bad)  
   1400173bb:	(bad)  
   1400173bc:	clc    
   1400173bd:	add    BYTE PTR [rax],al
   1400173bf:	add    BYTE PTR [rax],cl
   1400173c1:	std    
   1400173c2:	test   DWORD PTR [rdx],esi
   1400173c4:	adc    DWORD PTR [rsp+rcx*8-0x31],ecx
   1400173c8:	int3   
   1400173c9:	iret   
   1400173ca:	dec    DWORD PTR [rax+rsi*8+0x8000000]
   1400173d1:	cld    
   1400173d2:	test   eax,0xef38319a
   1400173d7:	(bad)  
   1400173d8:	(bad)  
   1400173d9:	(bad)  
   1400173da:	(bad)  
   1400173db:	push   rax
   1400173dd:	add    BYTE PTR [rax],al
   1400173df:	add    BYTE PTR [rax],cl
   1400173e1:	clc    
   1400173e2:	int    0xcf
   1400173e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400173e5:	and    ch,BYTE PTR [rsp+rcx*8+0xf8]
   1400173ec:	or     BYTE PTR [rax],al
   1400173ee:	add    BYTE PTR [rax],al
   1400173f0:	or     bh,bh
   1400173f2:	(bad)  
   1400173f3:	(bad)  
   1400173f4:	in     al,dx
   1400173f5:	rex.B cmp al,0xff
   1400173f8:	clc    
   1400173f9:	(bad)  
   1400173fa:	(bad)  
   1400173fb:	clc    
   1400173fc:	or     al,0x0
   1400173fe:	add    BYTE PTR [rax],al
   140017400:	or     ah,bh
   140017402:	iret   
   140017403:	int3   
   140017404:	(bad)  
   140017405:	movabs ds:0xc080cffcf8cc54,eax
   14001740e:	add    BYTE PTR [rax],al
   140017410:	or     al,bh
   140017412:	iret   
   140017413:	(bad)  
   140017414:	(bad)  
   140017415:	std    
   140017416:	push   rbp
   140017417:	mov    edi,0xcf8fcf8
   14001741c:	add    BYTE PTR [rax],al
   14001741e:	add    BYTE PTR [rax],al
   140017420:	or     bh,bh
   140017422:	dec    esp
   140017424:	int3   
   140017425:	int3   
   140017426:	jmp    0xc1016cc7
   14001742b:	rol    BYTE PTR [rax],0x0
   14001742e:	add    BYTE PTR [rax],al
   140017430:	or     ah,bh
   140017432:	iret   
   140017433:	(bad)  
   140017434:	(bad)  
   140017435:	(bad)  
   140017436:	(bad)  
   140017437:	in     al,dx
   140017438:	call   0x140018135
   14001743d:	add    BYTE PTR [rax],al
   14001743f:	add    BYTE PTR [rax],cl
   140017441:	clc    
   140017442:	iret   
   140017443:	int3   
   140017444:	int3   
   140017445:	int3   
   140017446:	int3   
   140017447:	int3   
   140017448:	fadd   DWORD PTR [rax+0xc0]
   14001744e:	add    BYTE PTR [rax],al
   140017450:	or     bh,bh
   140017452:	(bad)  
   140017453:	(bad)  
   140017454:	(bad)  
   140017455:	(bad)  
   140017456:	(bad)  
   140017457:	(bad)  
   140017458:	clc    
   140017459:	or     al,0x0
   14001745b:	add    BYTE PTR [rax],al
   14001745d:	add    BYTE PTR [rax],al
   14001745f:	add    BYTE PTR [rax],cl
   140017461:	mov    BYTE PTR [rax-0x77777778],cl
   140017467:	mov    BYTE PTR [rax+0xc0],cl
   14001746d:	add    BYTE PTR [rax],al
   14001746f:	add    ah,bh
   140017471:	(bad)  
   140017472:	sar    BYTE PTR [rdi-0x20],0x3
   140017476:	cmp    BYTE PTR [rdi],0x80
   140017479:	add    BYTE PTR [rax],al
   14001747b:	(bad)  
   14001747c:	add    BYTE PTR [rax],0x0
   14001747f:	(bad)  
   140017480:	add    BYTE PTR [rax],0x0
   140017483:	(bad)  
   140017484:	add    BYTE PTR [rax],0x0
   140017487:	add    eax,DWORD PTR [rax-0x7fff0000]
   14001748d:	add    BYTE PTR [rax],al
   14001748f:	add    BYTE PTR [rax-0x80000000],al
   140017495:	add    BYTE PTR [rax],al
   140017497:	add    BYTE PTR [rax-0x80000000],al
   14001749d:	add    BYTE PTR [rax],al
   14001749f:	add    BYTE PTR [rax-0x80000000],al
   1400174a5:	add    BYTE PTR [rax],al
   1400174a7:	add    BYTE PTR [rax-0x7fff0000],al
   1400174ad:	add    BYTE PTR [rax],al
   1400174af:	add    eax,DWORD PTR [rax-0x7fe10000]
   1400174b5:	add    BYTE PTR [rax],al
   1400174b7:	(bad)  
   1400174b8:	add    BYTE PTR [rax],0x0
   1400174bb:	(bad)  
   1400174bc:	add    BYTE PTR [rax],0x0
   1400174bf:	(bad)  
   1400174c0:	add    BYTE PTR [rax],0x0
   1400174c3:	(bad)  
   1400174c4:	add    BYTE PTR [rax],0x0
   1400174c7:	(bad)  
   1400174c8:	add    BYTE PTR [rax],0x0
   1400174cb:	(bad)  
   1400174cc:	add    BYTE PTR [rax],0x0
   1400174cf:	(bad)  
   1400174d0:	add    BYTE PTR [rax],0x0
   1400174d3:	(bad)  
   1400174d4:	add    BYTE PTR [rax],0x0
   1400174d7:	jg     0x140017459
   1400174d9:	add    BYTE PTR [rax],al
   1400174db:	inc    DWORD PTR [rax-0x7f00ff00]
   1400174e1:	add    BYTE PTR [rbx],al
   1400174e3:	inc    DWORD PTR [rax-0x7f00f900]
   1400174e9:	add    BYTE PTR [rdi],cl
   1400174eb:	inc    DWORD PTR [rax+0x28ff1f00]
   1400174f1:	add    BYTE PTR [rax],al
   1400174f3:	add    BYTE PTR [rax],dl
   1400174f5:	add    BYTE PTR [rax],al
   1400174f7:	add    BYTE PTR [rax],ah
   1400174f9:	add    BYTE PTR [rax],al
   1400174fb:	add    BYTE PTR [rcx],al
   1400174fd:	add    BYTE PTR [rax+rax*1],al
	...
   14001751c:	xor    al,0x34
   14001751e:	xor    al,0x0
   140017520:	rex.WRB
   140017521:	rex.WRB
   140017522:	rex.WRB add BYTE PTR [r11+0x53],r10b
   140017526:	push   rbx
   140017527:	add    BYTE PTR [rdx+0x7a],bh
   14001752a:	jp     0x14001752c
   14001752c:	add    BYTE PTR [rax],0x0
   14001752f:	add    BYTE PTR [rax],al
   140017531:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140017538:	nop
   140017539:	nop
   14001753a:	nop
   14001753b:	add    BYTE PTR [rdx-0x4bff5556],ch
   140017541:	mov    ah,0xb4
   140017543:	add    al,al
   140017545:	rol    al,0x0
   140017548:	(bad)  
   140017549:	(bad)  
   14001754a:	(bad)  
   14001754b:	add    ch,ah
   14001754d:	in     eax,0xe5
   14001754f:	add    dh,bh
   140017551:	(bad)  
   140017552:	inc    BYTE PTR [rax]
   140017554:	(bad)  
   140017555:	(bad)  
   140017556:	inc    DWORD PTR [rax]
   140017558:	jo     0x14001755a
   14001755a:	add    BYTE PTR [rbx],cl
   14001755c:	add    BYTE PTR [rax-0x4f900000],dh
   140017562:	mov    bh,0x7
   140017564:	(bad)  
   140017565:	push   rax
   140017567:	add    BYTE PTR [rbx+0x70],bh
   14001756a:	jnp    0x14001756b
   14001756c:	mov    dh,0x66
   14001756e:	mov    edi,0xefbf7f00
   140017573:	mov    edi,0x6f6b66
   140017578:	jg     0x140017569
   14001757a:	(bad)  
   14001757b:	jmp    QWORD PTR [rsi-0x41]
   14001757e:	(bad)  
   14001757f:	(bad)  
   140017580:	jg     0x140017541
   140017582:	jmp    0x1400175e3
   140017584:	data16 data16 imul di,WORD PTR [rdi-0x12],0xfff5
   14001758b:	pop    rdi
   14001758c:	mov    dh,0x66
   14001758e:	data16 data16 jg 0x140017530
   140017592:	in     eax,0x5b
   140017594:	(bad)  
   140017595:	(bad)  
   140017596:	sti    
   140017597:	data16 jge 0x140017563
   14001759a:	in     eax,0x55
   14001759c:	push   rbp
   14001759d:	push   rbp
   14001759e:	mov    edi,0xab344c66
   1400175a3:	push   rbp
   1400175a4:	push   rbp
   1400175a5:	push   rbp
   1400175a6:	pop    rdi
   1400175a7:	imul   ecx,DWORD PTR [rdx+0x71],0x4f
   1400175ab:	(bad)  
   1400175ac:	push   QWORD PTR [rbp-0x768100a1]
   1400175b2:	(bad)  
   1400175b3:	mov    edi,0x5f555b
   1400175b8:	jg     0x1400175b9
   1400175ba:	movabs ds:0xb9bf7f00bf55b5bf,eax
   1400175c3:	mov    ?,edi
   1400175c5:	push   rax
   1400175c7:	add    BYTE PTR [rdi-0x1],bh
   1400175ca:	(bad)  
   1400175cb:	in     eax,dx
   1400175cc:	div    edi
   1400175ce:	mov    al,0x0
   1400175d0:	ja     0x140017649
   1400175d2:	ja     0x14001764b
   1400175d4:	ja     0x140017651
   1400175d6:	add    BYTE PTR [rax],al
   1400175d8:	jle    0x1400175f9
   1400175da:	(bad)  
   1400175db:	call   QWORD PTR [rax]
   1400175dd:	(bad)  
   1400175de:	(bad)  
   1400175df:	inc    DWORD PTR [rax]
   1400175e1:	add    ebx,DWORD PTR [rdi]
   1400175e3:	inc    DWORD PTR [rax]
   1400175e5:	add    ebx,DWORD PTR [rdi]
   1400175e7:	inc    DWORD PTR [rax]
   1400175e9:	add    BYTE PTR [rdi],bl
   1400175eb:	inc    DWORD PTR [rax]
   1400175ed:	add    BYTE PTR [rdi],bl
   1400175ef:	inc    DWORD PTR [rax]
   1400175f1:	add    BYTE PTR [rdi],bl
   1400175f3:	inc    DWORD PTR [rax]
   1400175f5:	add    BYTE PTR [rdi],bl
   1400175f7:	inc    DWORD PTR [rax]
   1400175f9:	add    BYTE PTR [rdi],bl
   1400175fb:	inc    DWORD PTR [rax]
   1400175fd:	add    BYTE PTR [rdi],bl
   1400175ff:	inc    DWORD PTR [rax]
   140017601:	add    BYTE PTR [rdi],bl
   140017603:	inc    DWORD PTR [rax]
   140017605:	add    ebx,DWORD PTR [rdi]
   140017607:	inc    DWORD PTR [rax]
   140017609:	add    ebx,DWORD PTR [rdi]
   14001760b:	inc    DWORD PTR [rax]
   14001760d:	(bad)  
   14001760e:	(bad)  
   14001760f:	inc    DWORD PTR [rax]
   140017611:	(bad)  
   140017612:	(bad)  
   140017613:	inc    DWORD PTR [rax]
   140017615:	nop    edi
   140017618:	sub    BYTE PTR [rax],al
   14001761a:	add    BYTE PTR [rax],al
   14001761c:	and    BYTE PTR [rax],al
   14001761e:	add    BYTE PTR [rax],al
   140017620:	add    BYTE PTR [rax],al
   140017623:	add    BYTE PTR [rcx],al
   140017625:	add    BYTE PTR [rax],cl
	...
   140017643:	add    BYTE PTR [rip+0x2b002525],ah        # 0x16b019b6e
   140017649:	sub    ebp,DWORD PTR [rbx]
   14001764b:	add    BYTE PTR [rax],dh
   14001764d:	xor    BYTE PTR [rax],dh
   14001764f:	add    BYTE PTR [rip+0x41003d3d],bh        # 0x18101b392
   140017655:	rex.B
   140017656:	add    BYTE PTR [r9+0x49],cl
   14001765a:	rex.WB add BYTE PTR [r13+0x4d],cl
   14001765e:	rex.WRB add BYTE PTR [r9+0x51],r10b
   140017662:	push   rcx
   140017663:	add    BYTE PTR [rsi+0x56],dl
   140017666:	push   rsi
   140017667:	add    BYTE PTR [rcx+0x59],bl
   14001766a:	pop    rcx
   14001766b:	add    BYTE PTR [rbp+0x5d],bl
   14001766e:	pop    rbp
   14001766f:	add    BYTE PTR [rsi+0x64],bh
   140017672:	rex.RX add BYTE PTR [rdi+0x67],r12b
   140017676:	add    BYTE PTR [edx+0x6a],ch
   14001767a:	push   0x0
   14001767c:	ins    DWORD PTR es:[rdi],dx
   14001767d:	ins    DWORD PTR es:[rdi],dx
   14001767e:	ins    DWORD PTR es:[rdi],dx
   14001767f:	add    BYTE PTR [rdx+0x72],dh
   140017682:	jb     0x140017684
   140017684:	jne    0x1400176fb
   140017686:	jne    0x140017688
   140017688:	jge    0x140017707
   14001768a:	jge    0x14001768c
   14001768c:	movabs eax,ds:0xb3003d7aab003f75
   140017695:	jle    0x1400176d2
   140017697:	add    BYTE PTR [rbx-0x73ffba99],al
   14001769d:	imul   eax,DWORD PTR [rbx+0x0],0xffffff94
   1400176a1:	outs   dx,DWORD PTR ds:[rsi]
   1400176a2:	add    BYTE PTR [r11-0x44ffbf8e],bl
   1400176a9:	cmp    DWORD PTR [rdx],0x4980ad00
   1400176af:	add    BYTE PTR [rdx-0x48ff9d7f],bl
   1400176b5:	cwde   
   1400176b6:	jo     0x1400176b8
   1400176b8:	(bad)  
   1400176b9:	(bad)  
   1400176ba:	rex.WXB add r8b,dl
   1400176bd:	movabs ds:0xc22c00ffbe28006b,eax
   1400176c6:	inc    DWORD PTR [rax]
   1400176c8:	xor    esi,eax
   1400176ca:	inc    DWORD PTR [rax]
   1400176cc:	(bad)  
   1400176cd:	(bad)  
   1400176ce:	inc    DWORD PTR [rax]
   1400176d0:	xor    eax,0x3c00ffca
   1400176d5:	(bad)  
   1400176d6:	inc    DWORD PTR [rax]
   1400176d8:	pop    rsp
   1400176d9:	int    0xff
   1400176db:	add    BYTE PTR [rbx-0x2c],al
   1400176de:	inc    DWORD PTR [rax]
   1400176e0:	rex.WXB (bad) 
   1400176e3:	add    BYTE PTR [rcx-0x21],dl
   1400176e6:	inc    DWORD PTR [rax]
   1400176e8:	jae    0x1400176c9
   1400176ea:	inc    DWORD PTR [rax]
   1400176ec:	push   rbp
   1400176ed:	loop   0x1400176ee
   1400176ef:	add    BYTE PTR [rbx-0x19],bl
   1400176f2:	inc    DWORD PTR [rax]
   1400176f4:	movsxd esp,eax
   1400176f6:	inc    DWORD PTR [rax]
   1400176f8:	(bad)  
   1400176f9:	in     al,dx
   1400176fa:	inc    DWORD PTR [rax]
   1400176fc:	add    DWORD PTR [rcx-0x7676ff7f],0x91910089
   140017706:	xchg   ecx,eax
   140017707:	add    BYTE PTR [rdi-0x66ff6869],dl
   14001770d:	cdq    
   14001770e:	cdq    
   14001770f:	add    BYTE PTR [rsp+rbx*4-0x5f5fff64],bl
   140017716:	movabs al,ds:0xaaaaaa00a5a5a500
   14001771f:	add    BYTE PTR [rax-0x4aff4f50],dh
   140017725:	mov    ch,0xb5
   140017727:	add    BYTE PTR [rcx-0x43ff4647],bh
   14001772d:	mov    esp,0xc3d300bc
   140017732:	mov    al,0x0
   140017734:	(bad)  
   140017735:	icebp  
   140017736:	inc    DWORD PTR [rax]
   140017738:	mov    ch,0xf0
   14001773a:	inc    DWORD PTR [rax]
   14001773c:	(bad)
   14001773f:	add    cl,cl
   140017741:	leave  
   140017742:	leave  
   140017743:	add    ch,cl
   140017745:	int    0xcd
   140017747:	add    cl,dl
   140017749:	rcl    ecx,1
   14001774b:	add    ah,dl
   14001774d:	(bad)  
   14001774e:	(bad)  
   14001774f:	add    dl,bl
   140017751:	fcmovu st,st(2)
   140017753:	add    ch,bl
   140017755:	fstp   st(5)
   140017757:	add    bh,ch
   140017759:	in     eax,0xd8
   14001775b:	add    bl,dl
   14001775d:	repnz inc DWORD PTR [rax]
   140017760:	loope  0x140017743
   140017762:	loope  0x140017764
   140017764:	in     eax,0xe5
   140017766:	in     eax,0x0
   140017768:	jmp    0x134026156
   14001776d:	out    dx,eax
   14001776e:	(bad)  
   14001776f:	add    bl,ah
   140017771:	stc    
   140017772:	inc    DWORD PTR [rax]
   140017774:	lock lock lock add bh,dh
   140017779:	div    edi
   14001777b:	add    dh,bh
   14001777d:	(bad)  
   14001777e:	inc    BYTE PTR [rax]
   140017780:	add    BYTE PTR [rax],al
   140017782:	add    BYTE PTR [rax],al
   140017784:	add    ch,BYTE PTR [rdi]
   140017786:	add    BYTE PTR [rax],al
   140017788:	add    al,0x50
   14001778a:	add    BYTE PTR [rax],al
   14001778c:	(bad)  
   14001778d:	jo     0x14001778f
   14001778f:	add    BYTE PTR [rax],cl
   140017791:	nop
   140017792:	add    BYTE PTR [rax],al
   140017794:	or     dh,BYTE PTR [rax-0x30f50000]
   14001779a:	add    BYTE PTR [rax],al
   14001779c:	(bad)  
   14001779d:	lock add BYTE PTR [rax],al
   1400177a0:	and    bh,bh
   1400177a2:	adc    al,BYTE PTR [rax]
   1400177a4:	cmp    eax,0x5b0031ff
   1400177a9:	call   QWORD PTR [rcx+0x0]
   1400177ac:	jns    0x1400177ad
   1400177ae:	jno    0x1400177b0
   1400177b0:	cwde   
   1400177b1:	call   QWORD PTR [rcx-0x4e004b00]
   1400177b7:	add    ah,dl
   1400177b9:	call   rcx
   1400177bb:	add    bh,bh
   1400177bd:	(bad)  
   1400177be:	inc    DWORD PTR [rax]
   1400177c0:	add    BYTE PTR [rax],al
   1400177c2:	add    BYTE PTR [rax],al
   1400177c4:	adc    al,0x2f
   1400177c6:	add    BYTE PTR [rax],al
   1400177c8:	and    dl,BYTE PTR [rax+0x0]
   1400177cb:	add    BYTE PTR [rax],dh
   1400177cd:	jo     0x1400177cf
   1400177cf:	add    BYTE PTR [rip+0x4c000090],bh        # 0x18c017865
   1400177d5:	mov    al,0x0
   1400177d7:	add    BYTE PTR [rcx-0x31],bl
   1400177da:	add    BYTE PTR [rax],al
   1400177dc:	lock add BYTE PTR [eax],al
   1400177e0:	js     0x1400177e1
   1400177e2:	adc    DWORD PTR [rax],eax
   1400177e4:	mov    bh,bh
   1400177e6:	xor    DWORD PTR [rax],eax
   1400177e8:	pushf  
   1400177e9:	call   QWORD PTR [rcx+0x0]
   1400177ec:	scas   al,BYTE PTR es:[rdi]
   1400177ed:	push   QWORD PTR [rcx+0x0]
   1400177f0:	sar    bh,0x91
   1400177f3:	add    dl,dl
   1400177f5:	push   QWORD PTR [rcx-0x2e001c00]
   1400177fb:	add    bh,bh
   1400177fd:	(bad)  
   1400177fe:	inc    DWORD PTR [rax]
   140017800:	add    BYTE PTR [rax],al
   140017802:	add    BYTE PTR [rax],al
   140017804:	es (bad) 
   140017806:	add    BYTE PTR [rax],al
   140017808:	rex push rax
   14001780a:	add    BYTE PTR [rax],al
   14001780c:	pop    rdx
   14001780d:	jo     0x14001780f
   14001780f:	add    BYTE PTR [rax+rdx*4+0x0],dh
   140017813:	add    BYTE PTR [rsi-0x56ffff50],cl
   140017819:	iret   
   14001781a:	add    BYTE PTR [rax],al
   14001781c:	ret    0xf0
   14001781f:	add    cl,dl
   140017821:	call   QWORD PTR [rcx]
   140017823:	add    al,bl
   140017825:	push   QWORD PTR [rcx]
   140017827:	add    dh,bl
   140017829:	call   QWORD PTR [rcx+0x0]
   14001782c:	jrcxz  0x14001782d
   14001782e:	jno    0x140017830
   140017830:	jmp    0x12f020a34
   140017835:	push   QWORD PTR [rcx-0x2e000a00]
   14001783b:	add    bh,bh
   14001783d:	(bad)  
   14001783e:	inc    DWORD PTR [rax]
   140017840:	add    BYTE PTR [rax],al
   140017842:	add    BYTE PTR [rax],al
   140017844:	(bad)  
   140017845:	add    BYTE PTR es:[rax],al
   140017848:	push   rax
   140017849:	add    BYTE PTR [r8],al
   14001784c:	jo     0x1400178a9
   14001784e:	add    BYTE PTR [rax],al
   140017850:	nop
   140017851:	je     0x140017853
   140017853:	add    BYTE PTR [rax-0x30ffff72],dh
   140017859:	test   eax,0xc3f00000
   14001785e:	add    BYTE PTR [rax],al
   140017860:	call   rdx
   140017862:	adc    DWORD PTR [rax],eax
   140017864:	(bad)  
   140017865:	fdiv   DWORD PTR [rcx]
   140017867:	add    bh,bh
   140017869:	fst    QWORD PTR [rcx+0x0]
   14001786c:	jmp    rsp
   14001786e:	jno    0x140017870
   140017870:	(bad)  
   140017871:	(bad)  
   140017872:	xchg   ecx,eax
   140017873:	add    bh,bh
   140017875:	lock mov cl,0x0
   140017878:	push   rsi
   14001787a:	rol    DWORD PTR [rax],1
   14001787c:	(bad)  
   14001787d:	(bad)  
   14001787e:	inc    DWORD PTR [rax]
   140017880:	add    BYTE PTR [rax],al
   140017882:	add    BYTE PTR [rax],al
   140017884:	(bad)  
   140017885:	adc    al,0x0
   140017887:	add    BYTE PTR [rax+0x22],dl
   14001788a:	add    BYTE PTR [rax],al
   14001788c:	jo     0x1400178be
   14001788e:	add    BYTE PTR [rax],al
   140017890:	nop
   140017891:	add    BYTE PTR ds:[rax],al
   140017894:	mov    al,0x4d
   140017896:	add    BYTE PTR [rax],al
   140017898:	iret   
   140017899:	pop    rbx
   14001789a:	add    BYTE PTR [rax],al
   14001789c:	lock imul eax,DWORD PTR [rax],0x1179ff00
   1400178a3:	add    bh,bh
   1400178a5:	mov    dh,BYTE PTR [rcx]
   1400178a7:	add    bh,bh
   1400178a9:	popf   
   1400178aa:	push   rcx
   1400178ab:	add    bh,bh
   1400178ad:	scas   eax,DWORD PTR es:[rdi]
   1400178ae:	jno    0x1400178b0
   1400178b0:	inc    ecx
   1400178b2:	xchg   ecx,eax
   1400178b3:	add    bh,bh
   1400178b5:	shl    BYTE PTR [rcx-0x2e1a0100],cl
   1400178bb:	add    bh,bh
   1400178bd:	(bad)  
   1400178be:	inc    DWORD PTR [rax]
   1400178c0:	add    BYTE PTR [rax],al
   1400178c2:	add    BYTE PTR [rax],al
   1400178c4:	(bad)  
   1400178c5:	add    eax,DWORD PTR [rax]
   1400178c7:	add    BYTE PTR [rax+0x4],dl
   1400178ca:	add    BYTE PTR [rax],al
   1400178cc:	jo     0x1400178d4
   1400178ce:	add    BYTE PTR [rax],al
   1400178d0:	nop
   1400178d1:	or     DWORD PTR [rax],eax
   1400178d3:	add    BYTE PTR [rax-0x30fffff6],dh
   1400178d9:	or     al,0x0
   1400178db:	add    al,dh
   1400178dd:	(bad)  
   1400178de:	add    BYTE PTR [rax],al
   1400178e0:	jmp    QWORD PTR [rax]
   1400178e2:	adc    al,BYTE PTR [rax]
   1400178e4:	(bad)  
   1400178e5:	xor    DWORD PTR ds:[rax],eax
   1400178e8:	call   FWORD PTR [rcx+rdx*2+0x0]
   1400178ec:	(bad)  
   1400178ed:	jp     0x140017960
   1400178ef:	add    bh,bh
   1400178f1:	xchg   edi,eax
   1400178f2:	xchg   ecx,eax
   1400178f3:	add    bh,bh
   1400178f5:	mov    dh,0xb1
   1400178f7:	add    bh,bh
   1400178f9:	(bad)  
   1400178fa:	rol    DWORD PTR [rax],1
   1400178fc:	(bad)  
   1400178fd:	(bad)  
   1400178fe:	inc    DWORD PTR [rax]
   140017900:	add    BYTE PTR [rax],al
   140017902:	add    BYTE PTR [rax],al
   140017904:	(bad)  
   140017905:	add    BYTE PTR [rsi],cl
   140017907:	add    BYTE PTR [rax+0x0],dl
   14001790a:	(bad)  
   14001790b:	add    BYTE PTR [rax+0x0],dh
   14001790e:	and    DWORD PTR [rax],eax
   140017910:	nop
   140017911:	add    BYTE PTR [rbx],ch
   140017913:	add    BYTE PTR [rax-0x30ffca00],dh
   140017919:	add    BYTE PTR [rax+0x0],al
   14001791c:	lock add BYTE PTR [rcx+0x0],cl
   140017920:	call   QWORD PTR [rcx]
   140017922:	pop    rdx
   140017923:	add    bh,bh
   140017925:	xor    DWORD PTR [rax+0x0],esi
   140017928:	call   QWORD PTR [rcx-0x7a]
   14001792b:	add    bh,bh
   14001792d:	jno    0x1400178cb
   14001792f:	add    bh,bh
   140017931:	xchg   ecx,eax
   140017932:	mov    dl,0x0
   140017934:	push   QWORD PTR [rcx-0x2e00ff38]
   14001793a:	fild   WORD PTR [rax]
   14001793c:	(bad)  
   14001793d:	(bad)  
   14001793e:	inc    DWORD PTR [rax]
   140017940:	add    BYTE PTR [rax],al
   140017942:	add    BYTE PTR [rax],al
   140017944:	(bad)  
   140017945:	add    BYTE PTR [rax],ah
   140017947:	add    BYTE PTR [rax+0x0],dl
   14001794a:	add    BYTE PTR ss:[rax+0x0],dh
   14001794e:	rex.WR add BYTE PTR [rax-0x4fff9e00],r10b
   140017955:	add    BYTE PTR [rax+0x0],bh
   140017958:	iret   
   140017959:	add    BYTE PTR [rsi-0x5bff1000],cl
   14001795f:	add    bh,bh
   140017961:	adc    DWORD PTR [rbx-0x41ce0100],esi
   140017967:	add    bh,bh
   140017969:	push   rcx
   14001796a:	mov    DWORD PTR [rax],0xd171ff
   140017970:	call   QWORD PTR [rcx-0x4e00ff24]
   140017976:	in     eax,0x0
   140017978:	call   rcx
   14001797a:	lock add bh,bh
   14001797d:	(bad)  
   14001797e:	inc    DWORD PTR [rax]
   140017980:	add    BYTE PTR [rax],al
   140017982:	add    BYTE PTR [rax],al
   140017984:	sub    al,0x0
   140017986:	(bad)  
   140017987:	add    BYTE PTR [rbx+0x0],cl
   14001798a:	push   rax
   14001798b:	add    BYTE PTR [rcx+0x0],ch
   14001798e:	jo     0x140017990
   140017990:	xchg   DWORD PTR [rax],eax
   140017992:	nop
   140017993:	add    BYTE PTR [rbp-0x3bff5000],ah
   140017999:	add    bh,cl
   14001799b:	add    cl,ah
   14001799d:	add    al,dh
   14001799f:	add    al,dh
   1400179a1:	adc    edi,edi
   1400179a3:	add    dl,dh
   1400179a5:	xor    edi,edi
   1400179a7:	add    ah,dh
   1400179a9:	push   rcx
   1400179aa:	inc    DWORD PTR [rax]
   1400179ac:	div    BYTE PTR [rcx-0x1]
   1400179af:	add    bh,dh
   1400179b1:	xchg   ecx,eax
   1400179b2:	inc    DWORD PTR [rax]
   1400179b4:	stc    
   1400179b5:	mov    cl,0xff
   1400179b7:	add    bl,bh
   1400179b9:	sar    edi,1
   1400179bb:	add    bh,bh
   1400179bd:	(bad)  
   1400179be:	inc    DWORD PTR [rax]
   1400179c0:	add    BYTE PTR [rax],al
   1400179c2:	add    BYTE PTR [rax],al
   1400179c4:	sbb    eax,DWORD PTR [rax]
   1400179c6:	(bad)  
   1400179c7:	add    BYTE PTR [rip+0x3f005000],ch        # 0x17f01c9cd
   1400179cd:	add    BYTE PTR [rax+0x0],dh
   1400179d0:	push   rdx
   1400179d1:	add    BYTE PTR [rax-0x4fff9d00],dl
   1400179d7:	add    BYTE PTR [rsi+0x0],dh
   1400179da:	iret   
   1400179db:	add    BYTE PTR [rax-0x66ff1000],cl
   1400179e1:	adc    edi,edi
   1400179e3:	add    BYTE PTR [rsi-0x4bff00cf],ah
   1400179e9:	push   rcx
   1400179ea:	inc    DWORD PTR [rax]
   1400179ec:	ret    0xff71
   1400179ef:	add    bh,cl
   1400179f1:	xchg   ecx,eax
   1400179f2:	inc    DWORD PTR [rax]
   1400179f4:	fdiv   QWORD PTR [rcx-0x2e14ff01]
   1400179fa:	inc    DWORD PTR [rax]
   1400179fc:	(bad)  
   1400179fd:	(bad)  
   1400179fe:	inc    DWORD PTR [rax]
   140017a00:	add    BYTE PTR [rax],al
   140017a02:	add    BYTE PTR [rax],al
   140017a04:	or     BYTE PTR [rax],al
   140017a06:	(bad)  
   140017a07:	add    BYTE PTR [rsi],cl
   140017a09:	add    BYTE PTR [rax+0x0],dl
   140017a0c:	adc    eax,0x1b007000
   140017a11:	add    BYTE PTR [rax-0x4fffdf00],dl
   140017a17:	add    BYTE PTR [rsi],ah
   140017a19:	add    bh,cl
   140017a1b:	add    BYTE PTR [rax+rax*1],ch
   140017a1e:	lock add BYTE PTR [rsi],bh
   140017a21:	adc    edi,edi
   140017a23:	add    BYTE PTR [rax+0x31],bl
   140017a26:	inc    DWORD PTR [rax]
   140017a28:	jno    0x140017a7b
   140017a2a:	inc    DWORD PTR [rax]
   140017a2c:	mov    WORD PTR [rcx-0x1],?
   140017a2f:	add    BYTE PTR [rsi-0x40ff006f],ah
   140017a35:	mov    cl,0xff
   140017a37:	add    dl,bl
   140017a39:	sar    edi,1
   140017a3b:	add    bh,bh
   140017a3d:	(bad)  
   140017a3e:	inc    DWORD PTR [rax]
	...
   140017a50:	add    BYTE PTR [rax],al
   140017a52:	pop    rdi
   140017a53:	pop    rdi
   140017a54:	pop    rdi
   140017a55:	pop    rdi
   140017a56:	pop    rdi
   140017a57:	pop    rdi
   140017a58:	pop    rdi
	...
   140017a65:	rex.XB
   140017a66:	rex.XB
   140017a67:	rex.X
   140017a68:	rex.B
   140017a69:	rex.X
   140017a6a:	rex.B
   140017a6b:	add    BYTE PTR [rax],r8b
   140017a6e:	add    BYTE PTR [rax],al
   140017a70:	add    BYTE PTR [rdx+rbp*1+0x28],cl
   140017a74:	and    eax,0x26222224
   140017a79:	rex.RXB add BYTE PTR [r8],r8b
   140017a7c:	add    BYTE PTR [rax],al
   140017a7e:	add    BYTE PTR [rax],al
   140017a80:	add    BYTE PTR [rax],al
   140017a82:	add    BYTE PTR [rcx+0x42],al
   140017a85:	rex.WX
   140017a86:	rex.WB
   140017a87:	rex.WB
   140017a88:	rex.R
   140017a89:	rex.R
   140017a8a:	rex.WX
   140017a8b:	rex.XB (bad) 
   140017a8d:	(bad)  
   140017a8e:	rex.B
   140017a8f:	rex.R pop rdi
   140017a91:	sub    eax,0x25272728
   140017a96:	and    al,0x47
   140017a98:	rex.RXB and r11d,DWORD PTR [r15+0x0]
   140017a9c:	add    BYTE PTR [rax],al
   140017a9e:	add    BYTE PTR [rax],al
   140017aa0:	add    BYTE PTR [rax],al
   140017aa2:	rex.R
   140017aa3:	rex.WB
   140017aa4:	rex.WX
   140017aa5:	rex.WB
   140017aa6:	rex.WB
   140017aa7:	rex.WX
   140017aa8:	rex.WB
   140017aa9:	rex.WB
   140017aaa:	rex.WB
   140017aab:	rex.R
   140017aac:	rex.WB
   140017aad:	rex.WX
   140017aae:	rex.R
   140017aaf:	rex.R pop rdi
   140017ab1:	sub    ebp,DWORD PTR [rcx]
   140017ab3:	sub    BYTE PTR [rdi],ah
   140017ab5:	(bad)  
   140017ab6:	and    eax,0x5f204747
   140017abb:	add    BYTE PTR [rax],al
   140017abd:	add    BYTE PTR [rax],al
   140017abf:	add    BYTE PTR [rax],al
   140017ac1:	rex.WX
   140017ac2:	rex.WRB
   140017ac3:	rex.XB
   140017ac4:	rex.RB
   140017ac5:	rex.WX (bad) 
   140017ac7:	rex.B
   140017ac8:	rex.X
   140017ac9:	rex.B
   140017aca:	rex.RB
   140017acb:	rex.XB
   140017acc:	rex.B (bad) 
   140017ace:	rex.X
   140017acf:	pop    r15
   140017ad1:	sub    al,0x2b
   140017ad3:	sub    DWORD PTR [rax],ebp
   140017ad5:	(bad)  
   140017ad6:	and    eax,0x5f212225
   140017adb:	add    BYTE PTR [rax],al
   140017add:	add    BYTE PTR [rax],al
   140017adf:	add    BYTE PTR [rax],al
   140017ae1:	rex.WB
   140017ae2:	rex.WRB
   140017ae3:	rex
   140017ae4:	rex.B
   140017ae5:	rex.WX
   140017ae6:	rex.B
   140017ae7:	rex.XB
   140017ae8:	rex.R
   140017ae9:	rex.XB
   140017aea:	rex.WB
   140017aeb:	rex.R
   140017aec:	rex.WB pop r15
   140017aee:	pop    rdi
   140017aef:	pop    rdi
   140017af0:	pop    rdi
   140017af1:	cs sub al,0x2b
   140017af4:	sub    edi,DWORD PTR [rsi]
   140017af6:	pop    rdi
   140017af7:	pop    rdi
   140017af8:	pop    rdi
   140017af9:	pop    rdi
   140017afa:	pop    rdi
   140017afb:	pop    rdi
   140017afc:	pop    rdi
   140017afd:	pop    rdi
   140017afe:	add    BYTE PTR [rax],al
   140017b00:	add    BYTE PTR [rdx+0x4d],cl
   140017b03:	rex.WX
   140017b04:	rex.WX
   140017b05:	rex.WX
   140017b06:	rex.WX
   140017b07:	rex.WX
   140017b08:	rex.WX
   140017b09:	rex.WX
   140017b0a:	rex.WX
   140017b0b:	rex.WX
   140017b0c:	rex.RX sbb r11d,DWORD PTR [rax]
   140017b0f:	(bad)  
   140017b10:	pop    rdi
   140017b11:	cs cs sub al,0x2b
   140017b15:	sub    DWORD PTR [rax],ebp
   140017b17:	(bad)  
   140017b18:	and    eax,0x20212224
   140017b1d:	and    eax,DWORD PTR [rdi+0x0]
   140017b20:	add    BYTE PTR [rcx+0x4d],cl
   140017b23:	rex.XB
   140017b24:	rex.RB
   140017b25:	rex.WX
   140017b26:	rex.WX
   140017b27:	rex.WX
   140017b28:	rex.WB (bad) 
   140017b2a:	rex.WX pop rdi
   140017b2c:	sbb    eax,0x5f181913
   140017b31:	cs cs cs sub al,0x2b
   140017b36:	sub    BYTE PTR [rax],ch
   140017b38:	(bad)  
   140017b39:	and    eax,0x20212224
   140017b3e:	es pop rdi
   140017b40:	add    BYTE PTR [rdx+0x4d],cl
   140017b43:	(bad)  
   140017b44:	rex.B
   140017b45:	rex.WX
   140017b46:	rex.WX
   140017b47:	rex.WX
   140017b48:	rex.WX
   140017b49:	rex.XB
   140017b4a:	rex.WX pop rdi
   140017b4c:	sbb    edx,DWORD PTR [rbx]
   140017b4e:	adc    ebx,DWORD PTR [rcx]
   140017b50:	pop    rdi
   140017b51:	cs cs cs sub al,0x2b
   140017b56:	sub    DWORD PTR [rax],ebp
   140017b58:	(bad)  
   140017b59:	(bad)  
   140017b5a:	and    eax,0x20202224
   140017b5f:	pop    rdi
   140017b60:	add    BYTE PTR [rcx+0x4d],cl
   140017b63:	rex.WX
   140017b64:	rex.WX
   140017b65:	rex.WX
   140017b66:	rex.WX
   140017b67:	rex.WX
   140017b68:	rex.WX
   140017b69:	rex.WX
   140017b6a:	rex.WX pop rdi
   140017b6c:	adc    eax,0x4b131314
   140017b71:	cmp    eax,0x2c2e2e2e
   140017b76:	sub    ebp,DWORD PTR [rbx]
   140017b78:	sub    BYTE PTR [rdi],ah
   140017b7a:	(bad)  
   140017b7b:	and    eax,0x5f202124
   140017b80:	add    BYTE PTR [rdx+0x4d],cl
   140017b83:	rex.XB
   140017b84:	rex.R
   140017b85:	rex.WX
   140017b86:	rex.WX
   140017b87:	rex.WX
   140017b88:	rex.WX
   140017b89:	rex.B
   140017b8a:	rex.WX pop rdi
   140017b8c:	adc    eax,0x1d131414
   140017b91:	rex.WXB pop r15
   140017b93:	pop    rdi
   140017b94:	pop    rdi
   140017b95:	pop    rdi
   140017b96:	pop    rdi
   140017b97:	pop    rdi
   140017b98:	pop    rdi
   140017b99:	rex.WR sub r12b,BYTE PTR [rip+0x5f212224]        # 0x19f229dc4
   140017ba0:	add    BYTE PTR [rcx+0x5f],cl
   140017ba3:	(bad)  
   140017ba4:	rex.B
   140017ba5:	rex.WRB
   140017ba6:	rex.WRX
   140017ba7:	rex.WX
   140017ba8:	rex.WX
   140017ba9:	rex.RB
   140017baa:	rex.WX pop rdi
   140017bac:	sbb    dl,BYTE PTR [rip+0x19131314]        # 0x159148ec6
   140017bb2:	sbb    BYTE PTR [rdi],dl
   140017bb4:	(bad)  
   140017bb5:	(bad)  
   140017bb6:	or     al,0xc
   140017bb8:	or     al,0x1c
   140017bba:	rex.WR (bad) 
   140017bbc:	and    eax,0x5f2224
   140017bc1:	rex.WB pop r15
   140017bc3:	rex.WRB
   140017bc4:	rex.WRB
   140017bc5:	rex.WRB
   140017bc6:	rex.WRB
   140017bc7:	rex.WRB
   140017bc8:	rex.WRB
   140017bc9:	rex.WX
   140017bca:	rex.WX pop rdi
   140017bcc:	sbb    bl,BYTE PTR [rdx]
   140017bce:	adc    eax,0x19131314
   140017bd3:	sbb    BYTE PTR [rdi],dl
   140017bd5:	(bad)  
   140017bd6:	(bad)  
   140017bd7:	or     al,0xc
   140017bd9:	or     al,0x5f
   140017bdb:	sub    BYTE PTR [rdi],ah
   140017bdd:	and    eax,0x49005f25
   140017be2:	pop    rdi
   140017be3:	rex.XB
   140017be4:	rex.RB
   140017be5:	rex.WRB
   140017be6:	rex.WB
   140017be7:	rex.WX
   140017be8:	rex.WX
   140017be9:	rex.WRB
   140017bea:	rex.RB
   140017beb:	rex.WRB (bad) 
   140017bed:	sbb    bl,BYTE PTR [rdx]
   140017bef:	adc    eax,0x19131314
   140017bf4:	sbb    BYTE PTR [rdi],dl
   140017bf6:	(bad)  
   140017bf7:	(bad)  
   140017bf8:	or     al,0xc
   140017bfa:	pop    rdi
   140017bfb:	sub    BYTE PTR [rdi],ah
   140017bfd:	(bad)  
   140017bfe:	sub    bl,BYTE PTR [rdi+0x0]
   140017c01:	rex.WB pop r15
   140017c03:	(bad)  
   140017c04:	rex.X
   140017c05:	rex.WRB
   140017c06:	rex.R
   140017c07:	rex.WX
   140017c08:	rex.RB
   140017c09:	rex.WRB
   140017c0a:	rex.R
   140017c0b:	rex.WRB
   140017c0c:	rex.RX (bad) 
   140017c0e:	sbb    dl,BYTE PTR [rip+0x13131415]        # 0x153149029
   140017c14:	sbb    DWORD PTR [rax],ebx
   140017c16:	(bad)  
   140017c17:	(bad)  
   140017c18:	or     al,0xc
   140017c1a:	pop    rdi
   140017c1b:	sub    DWORD PTR [rax],ebp
   140017c1d:	sub    eax,0x4900004c
   140017c22:	pop    rdi
   140017c23:	rex.WRB
   140017c24:	rex.WRB
   140017c25:	rex.WRB
   140017c26:	rex.XB
   140017c27:	rex.WRB
   140017c28:	rex.WRB
   140017c29:	rex.WRB
   140017c2a:	rex.WRB
   140017c2b:	rex.WRB pop r15
   140017c2d:	pop    rdi
   140017c2e:	pop    rdi
   140017c2f:	pop    rdi
   140017c30:	pop    rdi
   140017c31:	pop    rdi
   140017c32:	pop    rdi
   140017c33:	pop    rdi
   140017c34:	pop    rdi
   140017c35:	cmp    al,0x18
   140017c37:	(bad)  
   140017c38:	(bad)  
   140017c39:	or     al,0x5f
   140017c3b:	pop    rdi
   140017c3c:	pop    rdi
   140017c3d:	pop    rdi
   140017c3e:	add    BYTE PTR [rax],al
   140017c40:	add    BYTE PTR [rcx+0x5f],cl
   140017c43:	rex.XB
   140017c44:	rex.RB
   140017c45:	xor    QWORD PTR [r11],r15
   140017c48:	rex.WRB
   140017c49:	rex.B
   140017c4a:	rex.XB
   140017c4b:	rex.R
   140017c4c:	rex.WRB
   140017c4d:	rex.RB
   140017c4e:	rex.WX
   140017c4f:	rex.WRB pop r15
   140017c51:	adc    eax,0x19131414
   140017c56:	sbb    BYTE PTR [rdi],dl
   140017c58:	(bad)  
   140017c59:	(bad)  
   140017c5a:	pop    rdi
   140017c5b:	add    BYTE PTR [rax],al
   140017c5d:	add    BYTE PTR [rax],al
   140017c5f:	add    BYTE PTR [rax],al
   140017c61:	rex.WB pop r15
   140017c63:	(bad)  
   140017c64:	pop    r15
   140017c66:	xor    DWORD PTR [rax+0x49],r8d
   140017c6a:	rex.WX
   140017c6b:	rex.WX
   140017c6c:	rex.WRB
   140017c6d:	rex.WX
   140017c6e:	rex.WRB
   140017c6f:	rex.WRB pop r15
   140017c71:	sbb    al,BYTE PTR [rsi+0x46]
   140017c74:	adc    edx,DWORD PTR [rbx]
   140017c76:	adc    ebx,DWORD PTR [rax]
   140017c78:	(bad)  
   140017c79:	(bad)  
   140017c7a:	pop    rdi
   140017c7b:	add    BYTE PTR [rax],al
   140017c7d:	add    BYTE PTR [rax],al
   140017c7f:	add    BYTE PTR [rax],al
   140017c81:	rex.WB pop r15
   140017c83:	pop    rdi
   140017c84:	ss (bad) 
   140017c86:	pop    rdi
   140017c87:	rex (bad) 
   140017c89:	rex.RB
   140017c8a:	rex.WRB
   140017c8b:	rex.WRB
   140017c8c:	rex.WRB
   140017c8d:	rex.WRX
   140017c8e:	rex.WRB
   140017c8f:	rex.WRB pop r15
   140017c91:	(bad)  
   140017c92:	rex.RX
   140017c93:	rex.RX adc al,0x13
   140017c96:	adc    ebx,DWORD PTR [rcx]
   140017c98:	sbb    BYTE PTR [rdi+rbx*2],bl
   140017c9b:	add    BYTE PTR [rax],al
   140017c9d:	add    BYTE PTR [rax],al
   140017c9f:	add    BYTE PTR [rax],al
   140017ca1:	rex.WB pop r15
   140017ca3:	rex.XB syscall 
   140017ca6:	(bad)  
   140017ca9:	xor    BYTE PTR [rbp+0x4a],al
   140017cac:	rex.R
   140017cad:	rex.WRB
   140017cae:	rex.WX
   140017caf:	rex.XB
   140017cb0:	rex.WX
   140017cb1:	rex.RX (bad) 
   140017cb3:	sbb    dl,BYTE PTR [rip+0x1d131314]        # 0x15d148fcd
   140017cb9:	rex.RX add BYTE PTR [rax],r8b
   140017cbc:	add    BYTE PTR [rax],al
   140017cbe:	add    BYTE PTR [rax],al
   140017cc0:	add    BYTE PTR [rdi],bh
   140017cc2:	cmp    al,BYTE PTR [rcx+0x41]
   140017cc5:	xor    al,BYTE PTR [rbx]
   140017cc7:	syscall 
   140017cc9:	xor    BYTE PTR [rdi],bh
   140017ccb:	pop    rdi
   140017ccc:	rex.WRB pop r15
   140017cce:	rex.WRB
   140017ccf:	rex.WB
   140017cd0:	rex.RB
   140017cd1:	rex.WRB pop r15
   140017cd3:	pop    rdi
   140017cd4:	pop    rdi
   140017cd5:	pop    rdi
   140017cd6:	pop    rdi
   140017cd7:	pop    rdi
   140017cd8:	rex.WRB add BYTE PTR [r8],r8b
   140017cdb:	add    BYTE PTR [rax],al
   140017cdd:	add    BYTE PTR [rax],al
   140017cdf:	add    BYTE PTR [rax],al
   140017ce1:	rex.WB
   140017ce2:	rex.XB xor al,0x42
   140017ce5:	rex.XB (bad) 
   140017ce7:	add    al,0x1
   140017ce9:	or     cl,BYTE PTR [rsi+0x5f]
   140017cec:	pop    rdi
   140017ced:	pop    rdi
   140017cee:	pop    rdi
   140017cef:	pop    rdi
   140017cf0:	pop    rdi
   140017cf1:	rex.WRB
   140017cf2:	rex.WRB
   140017cf3:	rex.WRB
   140017cf4:	rex.WRB
   140017cf5:	rex.WX
   140017cf6:	rex.WB
   140017cf7:	rex.R
   140017cf8:	add    BYTE PTR [r8],al
   140017cfb:	add    BYTE PTR [rax],al
   140017cfd:	add    BYTE PTR [rax],al
   140017cff:	add    BYTE PTR [rax],al
   140017d01:	rex.WB pop r15
   140017d03:	cmp    DWORD PTR [rdi],ebp
   140017d05:	adc    BYTE PTR [rcx],cl
   140017d07:	(bad)  
   140017d08:	add    DWORD PTR [rcx],eax
   140017d0a:	adc    DWORD PTR [rax+0x4a],ecx
   140017d0d:	rex.WX
   140017d0e:	rex.WRB
   140017d0f:	rex.WRB
   140017d10:	rex.WX
   140017d11:	rex.WRB
   140017d12:	rex.WRB
   140017d13:	rex.WRB
   140017d14:	rex.WX (bad) 
   140017d16:	(bad)  
   140017d17:	rex.X
   140017d18:	add    BYTE PTR [r8],al
   140017d1b:	add    BYTE PTR [rax],al
   140017d1d:	add    BYTE PTR [rax],al
   140017d1f:	add    BYTE PTR [rax],al
   140017d21:	rex.WB pop r15
   140017d23:	rex.B (bad) 
   140017d25:	xor    eax,0x3093330
   140017d2a:	or     BYTE PTR [rdx],dl
   140017d2c:	rex.WB
   140017d2d:	rex.WX
   140017d2e:	rex.WRB
   140017d2f:	rex.WRB
   140017d30:	rex.XB
   140017d31:	rex.X
   140017d32:	rex.XB
   140017d33:	rex.X
   140017d34:	rex.B xor al,0x34
   140017d37:	rex.XB
   140017d38:	rex.XB add BYTE PTR [r8],al
   140017d3b:	add    BYTE PTR [rax],al
   140017d3d:	add    BYTE PTR [rax],al
   140017d3f:	add    BYTE PTR [rax],al
   140017d41:	rex.WB pop r15
   140017d43:	pop    rdi
   140017d44:	pop    rdi
   140017d45:	rex.X
   140017d46:	rex.B
   140017d47:	rex.WRXB cmp r9,QWORD PTR [r14]
   140017d4a:	(bad)  
   140017d4b:	add    eax,0x5f5f5f36
   140017d50:	rex.XB pop r15
   140017d52:	rex.WRB
   140017d53:	rex.WX
   140017d54:	rex.WB
   140017d55:	rex.R
   140017d56:	rex.WB
   140017d57:	rex.R
   140017d58:	rex.WRB add BYTE PTR [r8],r8b
   140017d5b:	add    BYTE PTR [rax],al
   140017d5d:	add    BYTE PTR [rax],al
   140017d5f:	add    BYTE PTR [rax],al
   140017d61:	rex.WB pop r15
   140017d63:	rex.XB
   140017d64:	rex.WB pop r15
   140017d66:	pop    rdi
   140017d67:	pop    rdi
   140017d68:	rex.WRXB cmp r9,QWORD PTR [rip+0x5f400702]        # 0x19f418471
   140017d6f:	pop    rdi
   140017d70:	rex.XB pop r15
   140017d72:	rex.XB (bad) 
   140017d74:	rex.WX (bad) 
   140017d76:	rex.B
   140017d77:	rex.WX add BYTE PTR [rax],al
   140017d7a:	add    BYTE PTR [rax],al
   140017d7c:	add    BYTE PTR [rax],al
   140017d7e:	add    BYTE PTR [rax],al
   140017d80:	add    BYTE PTR [rcx+0x5f],cl
   140017d83:	(bad)  
   140017d84:	pop    r15
   140017d86:	rex.R
   140017d87:	rex.WX
   140017d88:	rex.WX
   140017d89:	rex.WB
   140017d8a:	rex or edx,DWORD PTR [rcx]
   140017d8d:	(bad)  
   140017d8e:	rex.WRXB pop r15
   140017d90:	rex.XB
   140017d91:	rex.WRB (bad) 
   140017d93:	cmp    ecx,DWORD PTR [rcx+0x3f]
   140017d96:	rex.WX add BYTE PTR [rax],al
	...
   140017da1:	rex.WB pop r15
   140017da3:	pop    rdi
   140017da4:	pop    rdi
   140017da5:	pop    rdi
   140017da6:	pop    rdi
   140017da7:	pop    rdi
   140017da8:	pop    rdi
   140017da9:	pop    rdi
   140017daa:	pop    rdi
   140017dab:	rex.W adc BYTE PTR [rcx],dl
   140017dae:	cmp    DWORD PTR [rbp+0x41],ecx
   140017db1:	rex.WB
   140017db2:	rex.WX
   140017db3:	rex.WX
   140017db4:	rex.WB
   140017db5:	rex.WX add BYTE PTR [rax],al
	...
   140017dc0:	add    BYTE PTR [rcx+0x5f],cl
   140017dc3:	rex.XB
   140017dc4:	rex.R pop rdi
   140017dc6:	pop    rdi
   140017dc7:	pop    rdi
   140017dc8:	pop    rdi
   140017dc9:	pop    rdi
   140017dca:	rex.WX
   140017dcb:	rex.WX
   140017dcc:	rex.WB (bad) 
   140017dce:	xor    eax,DWORD PTR [rbx+0x3b]
   140017dd1:	rex.WB
   140017dd2:	rex.WX
   140017dd3:	rex.WB
   140017dd4:	rex.WX add BYTE PTR [rax],al
	...
   140017ddf:	add    BYTE PTR [rax],al
   140017de1:	rex.WB pop r15
   140017de3:	(bad)  
   140017de4:	rex.B
   140017de5:	rex.WRB
   140017de6:	rex.R
   140017de7:	rex.WX
   140017de8:	rex.WX
   140017de9:	rex.R
   140017dea:	rex.WB
   140017deb:	rex.WRB
   140017dec:	rex.WX
   140017ded:	rex.WB
   140017dee:	rex.RB xor eax,0x4a494a3a
	...
   140017e00:	add    BYTE PTR [rcx+0x5f],cl
   140017e03:	pop    rdi
   140017e04:	pop    rdi
   140017e05:	pop    rdi
   140017e06:	pop    rdi
   140017e07:	pop    rdi
   140017e08:	pop    rdi
   140017e09:	pop    rdi
   140017e0a:	pop    rdi
   140017e0b:	pop    rdi
   140017e0c:	rex.WRB
   140017e0d:	rex.WRB
   140017e0e:	rex.WB
   140017e0f:	cmp    cl,BYTE PTR [r9+0x4a]
	...
   140017e1f:	add    BYTE PTR [rax],al
   140017e21:	rex.WX
   140017e22:	rex.WX
   140017e23:	rex.WX
   140017e24:	rex.WX
   140017e25:	rex.WX
   140017e26:	rex.WX
   140017e27:	rex.WX
   140017e28:	rex.WX
   140017e29:	rex.WX
   140017e2a:	rex.WX
   140017e2b:	rex.WX
   140017e2c:	rex.WX
   140017e2d:	rex.WX
   140017e2e:	rex.WX
   140017e2f:	rex.WX
   140017e30:	rex.WRB
   140017e31:	rex.WX add BYTE PTR [rax],al
	...
   140017e40:	(bad)  
   140017e41:	inc    eax
   140017e43:	jg     0x140017e3d
   140017e45:	jo     0x140025e8a
   140017e4b:	(bad)  
   140017e4c:	rol    BYTE PTR [rax],0x0
   140017e4f:	(bad)  
   140017e50:	add    BYTE PTR [rax],0x0
   140017e53:	(bad)  
   140017e54:	add    BYTE PTR [rax],0x0
   140017e57:	add    eax,DWORD PTR [rax-0x7fff0000]
   140017e5d:	add    BYTE PTR [rax],al
   140017e5f:	add    BYTE PTR [rax-0x80000000],al
   140017e65:	add    BYTE PTR [rax],al
   140017e67:	add    BYTE PTR [rax-0x80000000],al
   140017e6d:	add    BYTE PTR [rax],al
   140017e6f:	add    BYTE PTR [rax-0x80000000],al
   140017e75:	add    BYTE PTR [rax],al
   140017e77:	add    BYTE PTR [rax-0x7fff0000],al
   140017e7d:	add    BYTE PTR [rax],al
   140017e7f:	add    eax,DWORD PTR [rax-0x7fe10000]
   140017e85:	add    BYTE PTR [rax],al
   140017e87:	(bad)  
   140017e88:	add    BYTE PTR [rax],0x0
   140017e8b:	(bad)  
   140017e8c:	add    BYTE PTR [rax],0x0
   140017e8f:	(bad)  
   140017e90:	add    BYTE PTR [rax],0x0
   140017e93:	jg     0x140017e15
   140017e95:	add    BYTE PTR [rax],al
   140017e97:	jg     0x140017e19
   140017e99:	add    BYTE PTR [rax],al
   140017e9b:	jg     0x140017e1d
   140017e9d:	add    BYTE PTR [rax],al
   140017e9f:	jg     0x140017e21
   140017ea1:	add    BYTE PTR [rax],al
   140017ea3:	jg     0x140017e25
   140017ea5:	add    BYTE PTR [rax],al
   140017ea7:	inc    DWORD PTR [rax-0x7f00ff00]
   140017ead:	add    BYTE PTR [rbx],al
   140017eaf:	inc    DWORD PTR [rax-0x7f00f900]
   140017eb5:	add    BYTE PTR [rdi],cl
   140017eb7:	inc    DWORD PTR [rax-0x7f00e100]
   140017ebd:	add    BYTE PTR [rdi],bh
   140017ebf:	jmp    FWORD PTR [rax]
   140017ec1:	add    BYTE PTR [rax],al
   140017ec3:	add    BYTE PTR [rax],dl
   140017ec5:	add    BYTE PTR [rax],al
   140017ec7:	add    BYTE PTR [rax],ah
   140017ec9:	add    BYTE PTR [rax],al
   140017ecb:	add    BYTE PTR [rcx],al
   140017ecd:	add    BYTE PTR [rax],cl
	...
   140017eeb:	add    BYTE PTR [rsp+rsi*1],dh
   140017eee:	xor    al,0x0
   140017ef0:	rex.WRB
   140017ef1:	rex.WRB
   140017ef2:	rex.WRB add BYTE PTR [r10+0x52],r10b
   140017ef6:	push   rdx
   140017ef7:	add    BYTE PTR [rcx+0x59],bl
   140017efa:	pop    rcx
   140017efb:	add    BYTE PTR [rsi+0x65],bh
   140017efe:	rex.RXB add BYTE PTR [r13+0x75],r14b
   140017f02:	jne    0x140017f04
   140017f04:	jge    0x140017f83
   140017f06:	jge    0x140017f08
   140017f08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017f09:	js     0x140017f49
   140017f0b:	add    BYTE PTR [rax-0x67ffba97],cl
   140017f11:	jb     0x140017f56
   140017f13:	add    BYTE PTR [rdx+rax*4-0x654fffbb],dh
   140017f1a:	jle    0x140017f1c
   140017f1c:	(bad)  
   140017f1d:	enter  0xff,0x3f
   140017f21:	sar    edi,1
   140017f23:	add    BYTE PTR [rax-0x29],cl
   140017f26:	inc    DWORD PTR [rax]
   140017f28:	push   rsi
   140017f29:	loop   0x140017f2a
   140017f2b:	add    BYTE PTR [rdx-0x14],ah
   140017f2e:	inc    DWORD PTR [rax]
   140017f30:	js     0x140017f14
   140017f32:	inc    DWORD PTR [rax]
   140017f34:	xchg   esi,eax
   140017f35:	xchg   esi,eax
   140017f36:	xchg   esi,eax
   140017f37:	add    BYTE PTR [rbx-0x62ff6465],bl
   140017f3d:	popf   
   140017f3e:	popf   
   140017f3f:	add    BYTE PTR [rcx-0x5bff5e5f],ah
   140017f45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f46:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f47:	add    BYTE PTR [rdx-0x4cff5556],ch
   140017f4d:	mov    bl,0xb3
   140017f4f:	add    BYTE PTR [rsp+rsi*4-0x4545ff4c],dh
   140017f56:	mov    edx,0xbcbcbc00
   140017f5b:	add    ch,dl
   140017f5d:	shl    BYTE PTR [rdi-0x186500],0x0
   140017f64:	mov    al,0xf0
   140017f66:	inc    DWORD PTR [rax]
   140017f68:	(bad)  
   140017f69:	(bad)  
   140017f6a:	(bad)  
   140017f6b:	add    dh,cl
   140017f6d:	(bad)  
   140017f6e:	(bad)  
   140017f6f:	add    ch,bl
   140017f71:	fstp   st(5)
   140017f73:	add    ah,ah
   140017f75:	loop   0x140017f56
   140017f77:	add    dl,ah
   140017f79:	loop   0x140017f5d
   140017f7b:	add    ah,ah
   140017f7d:	in     al,0xe4
   140017f7f:	add    bl,ch
   140017f81:	jmp    0x140017f6e
   140017f83:	add    ah,ch
   140017f85:	in     al,dx
   140017f86:	in     al,dx
   140017f87:	add    dl,dh
   140017f89:	icebp  
   140017f8a:	out    dx,eax
   140017f8b:	add    bl,ah
   140017f8d:	stc    
   140017f8e:	inc    DWORD PTR [rax]
   140017f90:	cmc    
   140017f91:	cmc    
   140017f92:	cmc    
   140017f93:	add    ch,bh
   140017f95:	std    
   140017f96:	std    
   140017f97:	add    BYTE PTR [rcx-0x4eff0009],dl
   140017f9d:	stc    
   140017f9e:	inc    DWORD PTR [rax]
   140017fa0:	sar    ebx,1
   140017fa2:	inc    DWORD PTR [rax]
   140017fa4:	(bad)  
   140017fa5:	(bad)  
   140017fa6:	inc    DWORD PTR [rax]
   140017fa8:	add    BYTE PTR [rax],al
   140017faa:	add    BYTE PTR [rax],al
   140017fac:	add    BYTE PTR [rdi],ch
   140017fae:	and    DWORD PTR [rax],eax
   140017fb0:	add    BYTE PTR [rax+0x37],dl
   140017fb3:	add    BYTE PTR [rax],al
   140017fb5:	jo     0x140018003
   140017fb7:	add    BYTE PTR [rax],al
   140017fb9:	nop
   140017fba:	movsxd eax,DWORD PTR [rax]
   140017fbc:	add    BYTE PTR [rax-0x30ffff87],dh
   140017fc2:	pop    QWORD PTR [rax]
   140017fc4:	add    al,dh
   140017fc6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017fc7:	add    BYTE PTR [rcx],dl
   140017fc9:	push   QWORD PTR [rax+rax*1+0xbeff31]
   140017fd0:	push   rcx
   140017fd1:	dec    eax
   140017fd3:	add    BYTE PTR [rcx-0x1],dh
   140017fd6:	rol    DWORD PTR [rax],cl
   140017fd8:	xchg   ecx,eax
   140017fd9:	(bad)  
   140017fda:	fadd   QWORD PTR [rax]
   140017fdc:	mov    cl,0xff
   140017fde:	in     eax,0x0
   140017fe0:	sar    edi,1
   140017fe2:	lock add bh,bh
   140017fe5:	(bad)  
   140017fe6:	inc    DWORD PTR [rax]
   140017fe8:	add    BYTE PTR [rax],al
   140017fea:	add    BYTE PTR [rax],al
   140017fec:	add    BYTE PTR [rdi],ch
   140017fee:	(bad)  
   140017fef:	add    BYTE PTR [rax],al
   140017ff1:	push   rax
   140017ff2:	sbb    BYTE PTR [rax],al
   140017ff4:	add    BYTE PTR [rax+0x22],dh
   140017ff7:	add    BYTE PTR [rax],al
   140017ff9:	nop
   140017ffa:	sub    al,0x0
   140017ffc:	add    BYTE PTR [rax-0x30ffffca],dh
   140018002:	add    BYTE PTR [rax],al
   140018005:	lock rex.WX add BYTE PTR [rcx],dl
   140018009:	call   FWORD PTR [rbx+0x0]
   14001800c:	xor    edi,edi
   14001800e:	jno    0x140018010
   140018010:	push   rcx
   140018011:	inc    DWORD PTR [rdi-0x62008f00]
   140018017:	add    BYTE PTR [rcx-0x4eff4d01],dl
   14001801d:	dec    ecx
   14001801f:	add    cl,dl
   140018021:	(bad)  
   140018022:	fild   WORD PTR [rax]
   140018024:	(bad)  
   140018025:	(bad)  
   140018026:	inc    DWORD PTR [rax]
   140018028:	add    BYTE PTR [rax],al
   14001802a:	add    BYTE PTR [rax],al
   14001802c:	add    ch,BYTE PTR [rdi]
   14001802e:	add    BYTE PTR [rax],al
   140018030:	add    al,0x50
   140018032:	add    BYTE PTR [rax],al
   140018034:	(bad)  
   140018035:	jo     0x140018037
   140018037:	add    BYTE PTR [rax],cl
   140018039:	nop
   14001803a:	add    BYTE PTR [rax],al
   14001803c:	or     dh,BYTE PTR [rax-0x30f50000]
   140018042:	add    BYTE PTR [rax],al
   140018044:	(bad)  
   140018045:	lock add BYTE PTR [rax],al
   140018048:	and    bh,bh
   14001804a:	adc    al,BYTE PTR [rax]
   14001804c:	cmp    eax,0x5b0031ff
   140018051:	call   QWORD PTR [rcx+0x0]
   140018054:	jns    0x140018055
   140018056:	jno    0x140018058
   140018058:	cwde   
   140018059:	call   QWORD PTR [rcx-0x4e004b00]
   14001805f:	add    ah,dl
   140018061:	call   rcx
   140018063:	add    bh,bh
   140018065:	(bad)  
   140018066:	inc    DWORD PTR [rax]
   140018068:	add    BYTE PTR [rax],al
   14001806a:	add    BYTE PTR [rax],al
   14001806c:	adc    al,0x2f
   14001806e:	add    BYTE PTR [rax],al
   140018070:	and    dl,BYTE PTR [rax+0x0]
   140018073:	add    BYTE PTR [rax],dh
   140018075:	jo     0x140018077
   140018077:	add    BYTE PTR [rip+0x4c000090],bh        # 0x18c01810d
   14001807d:	mov    al,0x0
   14001807f:	add    BYTE PTR [rcx-0x31],bl
   140018082:	add    BYTE PTR [rax],al
   140018084:	lock add BYTE PTR [eax],al
   140018088:	js     0x140018089
   14001808a:	adc    DWORD PTR [rax],eax
   14001808c:	mov    bh,bh
   14001808e:	xor    DWORD PTR [rax],eax
   140018090:	pushf  
   140018091:	call   QWORD PTR [rcx+0x0]
   140018094:	scas   al,BYTE PTR es:[rdi]
   140018095:	push   QWORD PTR [rcx+0x0]
   140018098:	sar    bh,0x91
   14001809b:	add    dl,dl
   14001809d:	push   QWORD PTR [rcx-0x2e001c00]
   1400180a3:	add    bh,bh
   1400180a5:	(bad)  
   1400180a6:	inc    DWORD PTR [rax]
   1400180a8:	add    BYTE PTR [rax],al
   1400180aa:	add    BYTE PTR [rax],al
   1400180ac:	es (bad) 
   1400180ae:	add    BYTE PTR [rax],al
   1400180b0:	rex push rax
   1400180b2:	add    BYTE PTR [rax],al
   1400180b4:	pop    rdx
   1400180b5:	jo     0x1400180b7
   1400180b7:	add    BYTE PTR [rax+rdx*4+0x0],dh
   1400180bb:	add    BYTE PTR [rsi-0x56ffff50],cl
   1400180c1:	iret   
   1400180c2:	add    BYTE PTR [rax],al
   1400180c4:	ret    0xf0
   1400180c7:	add    cl,dl
   1400180c9:	call   QWORD PTR [rcx]
   1400180cb:	add    al,bl
   1400180cd:	push   QWORD PTR [rcx]
   1400180cf:	add    dh,bl
   1400180d1:	call   QWORD PTR [rcx+0x0]
   1400180d4:	jrcxz  0x1400180d5
   1400180d6:	jno    0x1400180d8
   1400180d8:	jmp    0x12f0212dc
   1400180dd:	push   QWORD PTR [rcx-0x2e000a00]
   1400180e3:	add    bh,bh
   1400180e5:	(bad)  
   1400180e6:	inc    DWORD PTR [rax]
   1400180e8:	add    BYTE PTR [rax],al
   1400180ea:	add    BYTE PTR [rax],al
   1400180ec:	(bad)  
   1400180ed:	add    BYTE PTR es:[rax],al
   1400180f0:	push   rax
   1400180f1:	add    BYTE PTR [r8],al
   1400180f4:	jo     0x140018151
   1400180f6:	add    BYTE PTR [rax],al
   1400180f8:	nop
   1400180f9:	je     0x1400180fb
   1400180fb:	add    BYTE PTR [rax-0x30ffff72],dh
   140018101:	test   eax,0xc3f00000
   140018106:	add    BYTE PTR [rax],al
   140018108:	call   rdx
   14001810a:	adc    DWORD PTR [rax],eax
   14001810c:	(bad)  
   14001810d:	fdiv   DWORD PTR [rcx]
   14001810f:	add    bh,bh
   140018111:	fst    QWORD PTR [rcx+0x0]
   140018114:	jmp    rsp
   140018116:	jno    0x140018118
   140018118:	(bad)  
   140018119:	(bad)  
   14001811a:	xchg   ecx,eax
   14001811b:	add    bh,bh
   14001811d:	lock mov cl,0x0
   140018120:	push   rsi
   140018122:	rol    DWORD PTR [rax],1
   140018124:	(bad)  
   140018125:	(bad)  
   140018126:	inc    DWORD PTR [rax]
   140018128:	add    BYTE PTR [rax],al
   14001812a:	add    BYTE PTR [rax],al
   14001812c:	(bad)  
   14001812d:	adc    al,0x0
   14001812f:	add    BYTE PTR [rax+0x22],dl
   140018132:	add    BYTE PTR [rax],al
   140018134:	jo     0x140018166
   140018136:	add    BYTE PTR [rax],al
   140018138:	nop
   140018139:	add    BYTE PTR ds:[rax],al
   14001813c:	mov    al,0x4d
   14001813e:	add    BYTE PTR [rax],al
   140018140:	iret   
   140018141:	pop    rbx
   140018142:	add    BYTE PTR [rax],al
   140018144:	lock imul eax,DWORD PTR [rax],0x1179ff00
   14001814b:	add    bh,bh
   14001814d:	mov    dh,BYTE PTR [rcx]
   14001814f:	add    bh,bh
   140018151:	popf   
   140018152:	push   rcx
   140018153:	add    bh,bh
   140018155:	scas   eax,DWORD PTR es:[rdi]
   140018156:	jno    0x140018158
   140018158:	inc    ecx
   14001815a:	xchg   ecx,eax
   14001815b:	add    bh,bh
   14001815d:	shl    BYTE PTR [rcx-0x2e1a0100],cl
   140018163:	add    bh,bh
   140018165:	(bad)  
   140018166:	inc    DWORD PTR [rax]
   140018168:	add    BYTE PTR [rax],al
   14001816a:	add    BYTE PTR [rax],al
   14001816c:	(bad)  
   14001816d:	add    eax,DWORD PTR [rax]
   14001816f:	add    BYTE PTR [rax+0x4],dl
   140018172:	add    BYTE PTR [rax],al
   140018174:	jo     0x14001817c
   140018176:	add    BYTE PTR [rax],al
   140018178:	nop
   140018179:	or     DWORD PTR [rax],eax
   14001817b:	add    BYTE PTR [rax-0x30fffff6],dh
   140018181:	or     al,0x0
   140018183:	add    al,dh
   140018185:	(bad)  
   140018186:	add    BYTE PTR [rax],al
   140018188:	jmp    QWORD PTR [rax]
   14001818a:	adc    al,BYTE PTR [rax]
   14001818c:	(bad)  
   14001818d:	xor    DWORD PTR ds:[rax],eax
   140018190:	call   FWORD PTR [rcx+rdx*2+0x0]
   140018194:	(bad)  
   140018195:	jp     0x140018208
   140018197:	add    bh,bh
   140018199:	xchg   edi,eax
   14001819a:	xchg   ecx,eax
   14001819b:	add    bh,bh
   14001819d:	mov    dh,0xb1
   14001819f:	add    bh,bh
   1400181a1:	(bad)  
   1400181a2:	rol    DWORD PTR [rax],1
   1400181a4:	(bad)  
   1400181a5:	(bad)  
   1400181a6:	inc    DWORD PTR [rax]
   1400181a8:	add    BYTE PTR [rax],al
   1400181aa:	add    BYTE PTR [rax],al
   1400181ac:	(bad)  
   1400181ad:	add    BYTE PTR [rsi],cl
   1400181af:	add    BYTE PTR [rax+0x0],dl
   1400181b2:	(bad)  
   1400181b3:	add    BYTE PTR [rax+0x0],dh
   1400181b6:	and    DWORD PTR [rax],eax
   1400181b8:	nop
   1400181b9:	add    BYTE PTR [rbx],ch
   1400181bb:	add    BYTE PTR [rax-0x30ffca00],dh
   1400181c1:	add    BYTE PTR [rax+0x0],al
   1400181c4:	lock add BYTE PTR [rcx+0x0],cl
   1400181c8:	call   QWORD PTR [rcx]
   1400181ca:	pop    rdx
   1400181cb:	add    bh,bh
   1400181cd:	xor    DWORD PTR [rax+0x0],esi
   1400181d0:	call   QWORD PTR [rcx-0x7a]
   1400181d3:	add    bh,bh
   1400181d5:	jno    0x140018173
   1400181d7:	add    bh,bh
   1400181d9:	xchg   ecx,eax
   1400181da:	mov    dl,0x0
   1400181dc:	push   QWORD PTR [rcx-0x2e00ff38]
   1400181e2:	fild   WORD PTR [rax]
   1400181e4:	(bad)  
   1400181e5:	(bad)  
   1400181e6:	inc    DWORD PTR [rax]
   1400181e8:	add    BYTE PTR [rax],al
   1400181ea:	add    BYTE PTR [rax],al
   1400181ec:	(bad)  
   1400181ed:	add    BYTE PTR [rax],ah
   1400181ef:	add    BYTE PTR [rax+0x0],dl
   1400181f2:	add    BYTE PTR ss:[rax+0x0],dh
   1400181f6:	rex.WR add BYTE PTR [rax-0x4fff9e00],r10b
   1400181fd:	add    BYTE PTR [rax+0x0],bh
   140018200:	iret   
   140018201:	add    BYTE PTR [rsi-0x5bff1000],cl
   140018207:	add    bh,bh
   140018209:	adc    DWORD PTR [rbx-0x41ce0100],esi
   14001820f:	add    bh,bh
   140018211:	push   rcx
   140018212:	mov    DWORD PTR [rax],0xd171ff
   140018218:	call   QWORD PTR [rcx-0x4e00ff24]
   14001821e:	in     eax,0x0
   140018220:	call   rcx
   140018222:	lock add bh,bh
   140018225:	(bad)  
   140018226:	inc    DWORD PTR [rax]
   140018228:	add    BYTE PTR [rax],al
   14001822a:	add    BYTE PTR [rax],al
   14001822c:	sub    al,0x0
   14001822e:	(bad)  
   14001822f:	add    BYTE PTR [rbx+0x0],cl
   140018232:	push   rax
   140018233:	add    BYTE PTR [rcx+0x0],ch
   140018236:	jo     0x140018238
   140018238:	xchg   DWORD PTR [rax],eax
   14001823a:	nop
   14001823b:	add    BYTE PTR [rbp-0x3bff5000],ah
   140018241:	add    bh,cl
   140018243:	add    cl,ah
   140018245:	add    al,dh
   140018247:	add    al,dh
   140018249:	adc    edi,edi
   14001824b:	add    dl,dh
   14001824d:	xor    edi,edi
   14001824f:	add    ah,dh
   140018251:	push   rcx
   140018252:	inc    DWORD PTR [rax]
   140018254:	div    BYTE PTR [rcx-0x1]
   140018257:	add    bh,dh
   140018259:	xchg   ecx,eax
   14001825a:	inc    DWORD PTR [rax]
   14001825c:	stc    
   14001825d:	mov    cl,0xff
   14001825f:	add    bl,bh
   140018261:	sar    edi,1
   140018263:	add    bh,bh
   140018265:	(bad)  
   140018266:	inc    DWORD PTR [rax]
   140018268:	add    BYTE PTR [rax],al
   14001826a:	add    BYTE PTR [rax],al
   14001826c:	sbb    eax,DWORD PTR [rax]
   14001826e:	(bad)  
   14001826f:	add    BYTE PTR [rip+0x3f005000],ch        # 0x17f01d275
   140018275:	add    BYTE PTR [rax+0x0],dh
   140018278:	push   rdx
   140018279:	add    BYTE PTR [rax-0x4fff9d00],dl
   14001827f:	add    BYTE PTR [rsi+0x0],dh
   140018282:	iret   
   140018283:	add    BYTE PTR [rax-0x66ff1000],cl
   140018289:	adc    edi,edi
   14001828b:	add    BYTE PTR [rsi-0x4bff00cf],ah
   140018291:	push   rcx
   140018292:	inc    DWORD PTR [rax]
   140018294:	ret    0xff71
   140018297:	add    bh,cl
   140018299:	xchg   ecx,eax
   14001829a:	inc    DWORD PTR [rax]
   14001829c:	fdiv   QWORD PTR [rcx-0x2e14ff01]
   1400182a2:	inc    DWORD PTR [rax]
   1400182a4:	(bad)  
   1400182a5:	(bad)  
   1400182a6:	inc    DWORD PTR [rax]
   1400182a8:	add    BYTE PTR [rax],al
   1400182aa:	add    BYTE PTR [rax],al
   1400182ac:	or     BYTE PTR [rax],al
   1400182ae:	(bad)  
   1400182af:	add    BYTE PTR [rsi],cl
   1400182b1:	add    BYTE PTR [rax+0x0],dl
   1400182b4:	adc    eax,0x1b007000
   1400182b9:	add    BYTE PTR [rax-0x4fffdf00],dl
   1400182bf:	add    BYTE PTR [rsi],ah
   1400182c1:	add    bh,cl
   1400182c3:	add    BYTE PTR [rax+rax*1],ch
   1400182c6:	lock add BYTE PTR [rsi],bh
   1400182c9:	adc    edi,edi
   1400182cb:	add    BYTE PTR [rax+0x31],bl
   1400182ce:	inc    DWORD PTR [rax]
   1400182d0:	jno    0x140018323
   1400182d2:	inc    DWORD PTR [rax]
   1400182d4:	mov    WORD PTR [rcx-0x1],?
   1400182d7:	add    BYTE PTR [rsi-0x40ff006f],ah
   1400182dd:	mov    cl,0xff
   1400182df:	add    dl,bl
   1400182e1:	sar    edi,1
   1400182e3:	add    bh,bh
   1400182e5:	(bad)  
   1400182e6:	inc    DWORD PTR [rax]
   1400182e8:	sbb    al,BYTE PTR [rax]
   1400182ea:	add    BYTE PTR [rax],al
   1400182ec:	add    BYTE PTR [rax],al
   1400182ee:	add    BYTE PTR [rax],al
   1400182f0:	sbb    bl,BYTE PTR [rdx]
   1400182f2:	sbb    ah,BYTE PTR [rcx]
   1400182f4:	add    BYTE PTR [rax],al
   1400182f6:	add    BYTE PTR [rax],al
   1400182f8:	sbb    DWORD PTR [rcx],ebx
   1400182fa:	add    BYTE PTR [rax],al
   1400182fc:	add    BYTE PTR [rax],al
   1400182fe:	sbb    bl,BYTE PTR [rax]
   140018300:	and    eax,0x2a2f2f2f
   140018305:	add    BYTE PTR [rax],al
   140018307:	add    BYTE PTR [rdx],bl
   140018309:	and    BYTE PTR [rdx],bl
   14001830b:	sbb    bl,BYTE PTR [rax]
   14001830d:	sbb    ah,BYTE PTR [rcx]
   14001830f:	sub    bl,BYTE PTR [rdi]
   140018311:	adc    BYTE PTR [rsi],cl
   140018313:	(bad)  
   140018314:	(bad)  
   140018315:	(bad)  
   140018316:	add    BYTE PTR [rax],al
   140018318:	sbb    DWORD PTR [rdx],esp
   14001831a:	sub    BYTE PTR [rip+0x2f252725],ah        # 0x16f26aa45
   140018320:	adc    DWORD PTR [rax],edx
   140018322:	movaps XMMWORD PTR [rip+0x1a00002f],xmm1        # 0x15a018358
   140018329:	and    DWORD PTR [rbx],esp
   14001832b:	(bad)  
   14001832c:	(bad)  
   14001832d:	(bad)  
   14001832e:	(bad)  
   14001832f:	(bad)  
   140018330:	adc    DWORD PTR [rax],edx
   140018332:	(bad)  
   140018333:	(bad)  
   140018334:	sub    ebp,DWORD PTR [rdi]
   140018336:	sub    eax,DWORD PTR [rax]
   140018338:	sbb    al,0x22
   14001833a:	sub    ch,BYTE PTR [rax]
   14001833c:	(bad)  
   14001833d:	sbb    eax,0x11112f0a
   140018342:	adc    BYTE PTR [rdi],cl
   140018344:	(bad)  
   140018345:	or     eax,0x211c1e0d
   14001834a:	and    eax,0xa0b2f28
   14001834f:	sub    BYTE PTR [rsi],bl
   140018351:	adc    DWORD PTR [rcx],edx
   140018353:	adc    BYTE PTR [rdi],cl
   140018355:	(bad)  
   140018356:	or     eax,0x2820200d
   14001835b:	sub    ch,BYTE PTR [rdi]
   14001835d:	or     BYTE PTR [rax],cl
   14001835f:	or     al,0x28
   140018361:	(bad)  
   140018362:	(bad)  
   140018363:	(bad)  
   140018364:	sub    DWORD PTR [rdx],edx
   140018366:	(bad)  
   140018367:	or     eax,0x2a17181a
   14001836c:	(bad)  
   14001836d:	or     ecx,DWORD PTR [rax]
   14001836f:	or     BYTE PTR [rdx],cl
   140018371:	or     DWORD PTR [rip+0xf290c05],eax        # 0x14f2a8f7c
   140018377:	bndldx bnd0,[rsi+rax*1]
   14001837b:	sbb    ch,BYTE PTR [rdx]
   14001837d:	sbb    eax,0xa0a080b
   140018382:	or     DWORD PTR [rip+0x1f102f05],eax        # 0x15f11b28d
   140018388:	adc    eax,0x22070107
   14001838d:	(bad)  
   14001838e:	(bad)  
   14001838f:	(bad)  
   140018390:	(bad)  
   140018391:	(bad)  
   140018392:	sbb    eax,0x2b2f0509
   140018397:	add    BYTE PTR [rsi+rdx*1],bl
   14001839a:	sbb    BYTE PTR [rdx],al
   14001839c:	adc    ebp,DWORD PTR [rdi]
   14001839e:	(bad)  
   14001839f:	(bad)  
   1400183a0:	or     esp,DWORD PTR [rbx]
   1400183a2:	or     cl,BYTE PTR [rcx]
   1400183a4:	or     DWORD PTR [rbx],ebp
   1400183a6:	add    BYTE PTR [rax],al
   1400183a8:	and    BYTE PTR [rcx],ah
   1400183aa:	and    eax,0x2f1c031b
   1400183af:	(bad)  
   1400183b0:	sbb    eax,0x1d0a080b
   1400183b5:	sub    eax,DWORD PTR [rax]
   1400183b7:	add    BYTE PTR [rdx+riz*1],bl
   1400183ba:	sub    ch,BYTE PTR [rbx]
   1400183bc:	sbb    al,0x14
   1400183be:	(bad)  
   1400183bf:	and    ebp,DWORD PTR [rbx]
   1400183c1:	(bad)  
   1400183c2:	(bad)  
   1400183c3:	sub    esp,DWORD PTR [rdi]
   1400183c5:	add    BYTE PTR [rax],al
   1400183c7:	add    BYTE PTR [rcx+riz*1],bl
   1400183ca:	and    eax,0x242b2b2a
   1400183cf:	sub    ebp,DWORD PTR [rbx]
   1400183d1:	and    DWORD PTR [rbx],ebp
   1400183d3:	and    DWORD PTR [rax],eax
   1400183d5:	add    BYTE PTR [rax],al
   1400183d7:	add    BYTE PTR [rsp+rbx*1],bl
   1400183da:	sbb    al,0x1c
   1400183dc:	and    BYTE PTR [rax],ah
   1400183de:	and    BYTE PTR [rax],ah
   1400183e0:	and    DWORD PTR [rcx],esp
   1400183e2:	and    DWORD PTR [rax],eax
   1400183e4:	add    BYTE PTR [rax],al
   1400183e6:	add    BYTE PTR [rax],al
   1400183e8:	jg     0x1400183f9
   1400183ea:	add    BYTE PTR [rax],al
   1400183ec:	cmp    al,0x7
   1400183ee:	add    BYTE PTR [rax],al
   1400183f0:	add    BYTE PTR [rbx],al
   1400183f2:	add    BYTE PTR [rax],al
   1400183f4:	add    BYTE PTR [rbx],al
   1400183f6:	add    BYTE PTR [rax],al
   1400183f8:	add    BYTE PTR [rcx],al
	...
   14001840e:	add    BYTE PTR [rax],al
   140018410:	add    BYTE PTR [rcx],al
   140018412:	add    BYTE PTR [rax],al
   140018414:	add    BYTE PTR [rbx],al
   140018416:	add    BYTE PTR [rax],al
   140018418:	add    BYTE PTR [rbx],al
   14001841a:	add    BYTE PTR [rax],al
   14001841c:	add    BYTE PTR [rdi],al
   14001841e:	add    BYTE PTR [rax],al
   140018420:	add    BYTE PTR [rdi],cl
   140018422:	add    BYTE PTR [rax],al
   140018424:	add    BYTE PTR [rdi],bl
   140018426:	add    BYTE PTR [rax],al
   140018428:	sub    BYTE PTR [rax],al
   14001842a:	add    BYTE PTR [rax],al
   14001842c:	xor    BYTE PTR [rax],al
   14001842e:	add    BYTE PTR [rax],al
   140018430:	(bad)  
   140018431:	add    BYTE PTR [rax],al
   140018433:	add    BYTE PTR [rcx],al
   140018435:	add    BYTE PTR [rax],ah
	...
   140018477:	add    al,BYTE PTR [rax]
   140018479:	add    BYTE PTR [rax],al
   14001847b:	add    al,0x0
   14001847d:	add    BYTE PTR [rax],al
   14001847f:	(bad)  
   140018480:	add    BYTE PTR [rax],al
   140018482:	add    BYTE PTR [rsi],al
   140018484:	add    BYTE PTR [rax],al
   140018486:	add    BYTE PTR [rsi],al
   140018488:	add    BYTE PTR [rax],al
   14001848a:	add    BYTE PTR [rip+0x3000000],al        # 0x143018490
	...
   1400184f4:	add    BYTE PTR [rax],al
   1400184f6:	add    BYTE PTR [rcx],al
	...
   140018528:	add    BYTE PTR [rax],al
   14001852a:	add    BYTE PTR [rax+rax*1],al
   14001852d:	add    BYTE PTR [rax],al
   14001852f:	or     eax,DWORD PTR [rax]
   140018531:	add    BYTE PTR [rax],al
   140018533:	adc    eax,0x211f1f1f
   140018538:	add    BYTE PTR [rax],al
   14001853a:	add    BYTE PTR [rcx],ah
   14001853c:	add    BYTE PTR [rax],al
   14001853e:	add    BYTE PTR [rax+rax*1],ah
   140018541:	add    BYTE PTR [rax],al
   140018543:	or     DWORD PTR es:[rcx],ecx
   140018546:	or     DWORD PTR [rsi],esp
   140018548:	add    BYTE PTR [rax],al
   14001854a:	add    BYTE PTR [rdx],ah
   14001854c:	add    BYTE PTR [rax],al
   14001854e:	add    BYTE PTR [rdi],bl
   140018550:	add    BYTE PTR [rax],al
   140018552:	add    BYTE PTR [rbx],bl
   140018554:	add    BYTE PTR [rax],al
   140018556:	add    BYTE PTR [rax+rax*1],dl
   140018559:	add    BYTE PTR [rax],al
   14001855b:	or     eax,0x7000000
   140018560:	add    BYTE PTR [rax],al
   140018562:	add    BYTE PTR [rbx],al
	...
   1400185ac:	add    BYTE PTR [rax],al
   1400185ae:	add    BYTE PTR [rbx],al
   1400185b0:	add    BYTE PTR [rax],al
   1400185b2:	add    BYTE PTR [rip+0xc000000],cl        # 0x14c0185b8
	...
   1400185dc:	add    BYTE PTR [rax],al
   1400185de:	add    BYTE PTR [rsi],al
   1400185e0:	add    BYTE PTR [rax],al
   1400185e2:	add    BYTE PTR [rax],dl
   1400185e4:	add    BYTE PTR [rax],al
   1400185e6:	add    BYTE PTR [rdx],bl
   1400185e8:	add    BYTE PTR [rax],al
   1400185ea:	add    BYTE PTR [rax],ah
   1400185ec:	lahf   
   1400185ed:	lahf   
   1400185ee:	lahf   
   1400185ef:	push   rdi
   1400185f0:	loop   0x1400185d4
   1400185f2:	loop   0x1400185af
   1400185f4:	out    dx,eax
   1400185f5:	out    dx,eax
   1400185f6:	out    dx,eax
   1400185f7:	out    0xee,al
   1400185f9:	out    dx,al
   1400185fa:	out    dx,al
   1400185fb:	out    0xeb,eax
   1400185fd:	jmp    0x1400185ea
   1400185ff:	loop   0x1400185ee
   140018601:	in     eax,dx
   140018602:	in     eax,dx
   140018603:	in     eax,0xeb
   140018605:	jmp    0x1400185f2
   140018607:	fcomip st,st(4)
   140018609:	hlt    
   14001860a:	hlt    
   14001860b:	out    dx,eax
   14001860c:	lock lock lock in al,0xdc
   140018611:	(bad)  
   140018613:	mov    cl,0xc7
   140018615:	mov    edi,0x101018b
   14001861b:	sub    edi,DWORD PTR [rsp+rdi*1]
   14001861e:	cmp    al,0x2f
   140018620:	add    BYTE PTR [rax],al
   140018622:	add    BYTE PTR [rdi],bl
   140018624:	add    BYTE PTR [rax],al
   140018626:	add    BYTE PTR [rax],bl
   140018628:	add    BYTE PTR [rax],al
   14001862a:	add    BYTE PTR [rax],dl
   14001862c:	add    BYTE PTR [rax],al
   14001862e:	add    BYTE PTR [rcx],cl
   140018630:	add    BYTE PTR [rax],al
   140018632:	add    BYTE PTR [rax+rax*1],al
   140018635:	add    BYTE PTR [rax],al
   140018637:	add    DWORD PTR [rax],eax
	...
   140018661:	add    BYTE PTR [rax],al
   140018663:	add    al,BYTE PTR [rax]
   140018665:	add    BYTE PTR [rax],al
   140018667:	or     BYTE PTR [rax],al
   140018669:	add    BYTE PTR [rax],al
   14001866b:	adc    ah,BYTE PTR [rsi]
   14001866d:	es and eax,DWORD PTR es:[rax]
   140018671:	add    BYTE PTR [rax],al
   140018673:	add    BYTE PTR es:[rax],al
   140018676:	add    BYTE PTR [rsi],cl
	...
   14001869c:	add    BYTE PTR [rax],al
   14001869e:	add    BYTE PTR [rax],bl
   1400186a0:	pop    rbx
   1400186a1:	pop    rbx
   1400186a2:	pop    rbx
   1400186a3:	(bad)  
   1400186a4:	ss ss ss add BYTE PTR ss:[rax],al
   1400186aa:	add    BYTE PTR [rbx],bl
   1400186ac:	xlat   BYTE PTR ds:[rbx]
   1400186ad:	xlat   BYTE PTR ds:[rbx]
   1400186ae:	xlat   BYTE PTR ds:[rbx]
   1400186af:	(bad)
   1400186b3:	(bad)  
   1400186b4:	mov    edi,0xe7ffbfbf
   1400186b9:	out    0xe7,eax
   1400186bb:	dec    esi
   1400186bd:	(bad)  
   1400186be:	(bad)  
   1400186bf:	call   rsi
   1400186c1:	(bad)  
   1400186c2:	(bad)  
   1400186c3:	dec    esp
   1400186c5:	int3   
   1400186c6:	int3   
   1400186c7:	(bad)  
   1400186c8:	(bad)  
   1400186ca:	(bad)  
   1400186cc:	(bad)  
   1400186cd:	(bad)  
   1400186ce:	(bad)  
   1400186cf:	(bad)  
   1400186d0:	jmp    0x11d0170be
   1400186d5:	(bad)  
   1400186d7:	(bad)  
   1400186d8:	fstp   st(5)
   1400186da:	fstp   st(5)
   1400186dc:	call   0x12feb6fc9
   1400186e1:	out    dx,eax
   1400186e2:	out    dx,eax
   1400186e3:	loope  0x1400186b7
   1400186e5:	rcl    dl,cl
   1400186e7:	sahf   
   1400186e8:	rol    ecx,0xc1
   1400186eb:	jg     0x14001872f
   1400186ed:	rex.X
   1400186ee:	rex.X xor eax,DWORD PTR [rax]
   1400186f1:	add    BYTE PTR [rax],al
   1400186f3:	and    al,BYTE PTR [rax]
   1400186f5:	add    BYTE PTR [rax],al
   1400186f7:	sbb    al,0x0
   1400186f9:	add    BYTE PTR [rax],al
   1400186fb:	(bad)  
   1400186fc:	add    BYTE PTR [rax],al
   1400186fe:	add    BYTE PTR [rcx],dl
   140018700:	add    BYTE PTR [rax],al
   140018702:	add    BYTE PTR [rsi],cl
   140018704:	add    BYTE PTR [rax],al
   140018706:	add    BYTE PTR [rbx],cl
   140018708:	add    BYTE PTR [rax],al
   14001870a:	add    BYTE PTR [rdx],cl
   14001870c:	add    BYTE PTR [rax],al
   14001870e:	add    BYTE PTR [rdx],cl
   140018710:	add    BYTE PTR [rax],al
   140018712:	add    BYTE PTR [rbx],cl
   140018714:	add    BYTE PTR [rax],al
   140018716:	add    BYTE PTR [rip+0x11000000],cl        # 0x15101871c
   14001871c:	add    BYTE PTR [rax],al
   14001871e:	add    BYTE PTR [rsi],dl
   140018720:	add    BYTE PTR [rax],al
   140018722:	add    BYTE PTR [rip+0x17000000],bl        # 0x157018728
   140018728:	ins    DWORD PTR es:[rdi],dx
   140018729:	ins    DWORD PTR es:[rdi],dx
   14001872a:	ins    DWORD PTR es:[rdi],dx
   14001872b:	xor    edi,eax
   14001872d:	clc    
   14001872e:	clc    
   14001872f:	cli    
   140018730:	add    BYTE PTR [rax],al
   140018732:	add    BYTE PTR [rax+rax*1],ch
   140018735:	add    BYTE PTR [rax],al
   140018737:	(bad)  
	...
   14001875c:	add    BYTE PTR [rax],al
   14001875e:	add    BYTE PTR [rcx],bl
   140018760:	loop   0x140018744
   140018762:	loop   0x140018733
   140018764:	and    DWORD PTR [rcx],esp
   140018766:	and    DWORD PTR [rax+rax*1],esi
   140018769:	add    BYTE PTR [rax],al
   14001876b:	(bad)  
   14001876c:	(bad)  
   14001876d:	(bad)  
   14001876e:	(bad)  
   14001876f:	es jmp 0x12901715e
   140018775:	call   0x127e98762
   14001877a:	out    0xff,eax
   14001877c:	retf   0xcaca
   14001877f:	(bad)  
   140018780:	mov    ecx,0xd2ffb9b9
   140018785:	rcl    dl,cl
   140018787:	(bad)  
   140018788:	mov    eax,0xdcffb8b8
   14001878d:	(bad)  
   14001878f:	jmp    rbp
   140018791:	in     eax,0xe5
   140018793:	jmp    rsi
   140018795:	out    0xe6,al
   140018797:	call   rax
   140018799:	rcl    al,1
   14001879b:	call   rcx
   14001879d:	rcl    ecx,1
   14001879f:	jmp    rdi
   1400187a1:	out    0xe7,eax
   1400187a3:	(bad)  
   1400187a4:	jmp    0x12d017192
   1400187a9:	in     al,dx
   1400187aa:	in     al,dx
   1400187ab:	jmp    rsi
   1400187ad:	out    0xe6,al
   1400187af:	in     al,0xca
   1400187b1:	retf   0x9fca
   1400187b4:	mov    cl,0xb1
   1400187b6:	mov    cl,0x7d
   1400187b8:	mov    bh,0xb7
   1400187ba:	mov    bh,0x7d
   1400187bc:	pop    rdi
   1400187bd:	pop    rdi
   1400187be:	pop    rdi
   1400187bf:	rex.RB add DWORD PTR [r11+0x70704f83],0x70
   1400187c7:	rex.R mov cs,WORD PTR [rsi+0x1313508e]
   1400187ce:	adc    ebp,DWORD PTR [rax+rax*1]
   1400187d1:	add    BYTE PTR [rax],al
   1400187d3:	sub    DWORD PTR [rax],eax
   1400187d5:	add    BYTE PTR [rax],al
   1400187d7:	sub    edx,DWORD PTR [rdi]
   1400187d9:	(bad)  
   1400187da:	(bad)  
   1400187db:	xor    ecx,DWORD PTR [rcx+0x325a8989]
   1400187e1:	xor    dh,BYTE PTR [rdx]
   1400187e3:	add    BYTE PTR ss:[rax],al
   1400187e6:	add    BYTE PTR [rax],bl
   1400187e8:	rex.R
   1400187e9:	rex.R
   1400187ea:	sub    sil,r12b
   1400187ed:	out    0xe6,al
   1400187ef:	inc    DWORD PTR [rax]
   1400187f1:	add    BYTE PTR [rax],al
   1400187f3:	sub    al,0x0
   1400187f5:	add    BYTE PTR [rax],al
   1400187f7:	(bad)  
	...
   14001881c:	add    BYTE PTR [rax],al
   14001881e:	add    BYTE PTR [rcx],bl
   140018820:	repz repz repz (bad) 
   140018824:	mov    esp,0x2391bcbc
   140018829:	and    esp,DWORD PTR [rbx]
   14001882b:	xor    eax,0x8ec1c1c1
   140018830:	(bad)  
   140018831:	(bad)  
   140018832:	(bad)  
   140018833:	inc    eax
   140018835:	rol    al,0xff
   140018838:	jmp    0x11d017226
   14001883d:	(bad)  
   14001883f:	dec    edi
   140018841:	iret   
   140018842:	iret   
   140018843:	(bad)  
   140018844:	(bad)  
   140018846:	fcos   
   140018848:	out    0xe7,eax
   14001884a:	out    0xff,eax
   14001884c:	xlat   BYTE PTR ds:[rbx]
   14001884d:	xlat   BYTE PTR ds:[rbx]
   14001884e:	xlat   BYTE PTR ds:[rbx]
   14001884f:	jmp    rsi
   140018851:	out    0xe6,al
   140018853:	jmp    rdi
   140018855:	out    0xe7,eax
   140018857:	jmp    rax
   140018859:	loopne 0x14001883b
   14001885b:	(bad)  
   14001885c:	fcmovnu st,st(3)
   14001885e:	(bad)  
   140018860:	out    0xe6,al
   140018862:	out    0xff,al
   140018864:	in     eax,0xe5
   140018866:	in     eax,0xff
   140018868:	in     eax,0xe5
   14001886a:	in     eax,0xff
   14001886c:	in     eax,0xe5
   14001886e:	in     eax,0xff
   140018870:	in     al,0xe4
   140018872:	in     al,0xff
   140018874:	in     eax,0xe5
   140018876:	in     eax,0xff
   140018878:	jmp    0x140018865
   14001887a:	jmp    0x140018870
   14001887c:	icebp  
   14001887d:	icebp  
   14001887e:	icebp  
   14001887f:	clc    
   140018880:	hlt    
   140018881:	hlt    
   140018882:	hlt    
   140018883:	sti    
   140018884:	(bad)  
   140018885:	(bad)  
   140018886:	(bad)  
   140018887:	call   0x13ffc8386
   14001888c:	repnz repnz repnz repz (bad) 
   140018891:	(bad)  
   140018892:	(bad)  
   140018893:	mov    ecx,0xdfe3e3e3
   140018898:	rol    ecx,0xc1
   14001889b:	stc    
   14001889c:	in     eax,0xe5
   14001889e:	in     eax,0xff
   1400188a0:	mov    bh,0xb7
   1400188a2:	mov    bh,0x93
   1400188a4:	(bad)  
   1400188a5:	(bad)  
   1400188a6:	(bad)  
   1400188a7:	xor    eax,0x8ebcbcbc
   1400188ac:	in     al,0xe4
   1400188ae:	in     al,0xff
   1400188b0:	add    BYTE PTR [rax],al
   1400188b2:	add    BYTE PTR [rax+rax*1],ch
   1400188b5:	add    BYTE PTR [rax],al
   1400188b7:	(bad)  
	...
   1400188dc:	add    BYTE PTR [rax],al
   1400188de:	add    BYTE PTR [rcx],bl
   1400188e0:	cmc    
   1400188e1:	cmc    
   1400188e2:	cmc    
   1400188e3:	(bad)  
   1400188e4:	jmp    0x1400188d1
   1400188e6:	jmp    0x1400188e7
   1400188e8:	jmp    0x1400188d5
   1400188ea:	jmp    0x1400188eb
   1400188ec:	jmp    0x1400188d9
   1400188ee:	jmp    0x1400188ef
   1400188f0:	(bad)  
   1400188f1:	(bad)  
   1400188f2:	(bad)  
   1400188f3:	(bad)  
   1400188f4:	(bad)  
   1400188f5:	(bad)  
   1400188f6:	(bad)  
   1400188f7:	(bad)  
   1400188f8:	(bad)  
   1400188f9:	(bad)  
   1400188fa:	(bad)  
   1400188fb:	(bad)  
   1400188fc:	jmp    0x12a0172ea
   140018901:	jmp    0x129eb88ef
   140018906:	jmp    0x128ea720a
   14001890b:	(bad)  
   14001890c:	call   0x1290171f9
   140018911:	call   0x127e988fe
   140018916:	out    0xff,eax
   140018918:	out    0xe6,al
   14001891a:	out    0xff,al
   14001891c:	out    0xe7,eax
   14001891e:	out    0xff,eax
   140018920:	out    0xe7,eax
   140018922:	out    0xff,eax
   140018924:	out    0xe6,al
   140018926:	out    0xff,al
   140018928:	out    0xe6,al
   14001892a:	out    0xff,al
   14001892c:	out    0xe6,al
   14001892e:	out    0xff,al
   140018930:	in     eax,0xe5
   140018932:	in     eax,0xff
   140018934:	in     eax,0xe5
   140018936:	in     eax,0xff
   140018938:	in     eax,0xe5
   14001893a:	in     eax,0xff
   14001893c:	in     al,0xe4
   14001893e:	in     al,0xff
   140018940:	in     al,0xe4
   140018942:	in     al,0xff
   140018944:	in     al,0xe4
   140018946:	in     al,0xff
   140018948:	jrcxz  0x14001892d
   14001894a:	jrcxz  0x14001894b
   14001894c:	jrcxz  0x140018931
   14001894e:	jrcxz  0x14001894f
   140018950:	jrcxz  0x140018935
   140018952:	jrcxz  0x140018953
   140018954:	loop   0x140018938
   140018956:	loop   0x140018957
   140018958:	loop   0x14001893c
   14001895a:	loop   0x14001895b
   14001895c:	loop   0x140018940
   14001895e:	loop   0x14001895f
   140018960:	jrcxz  0x140018945
   140018962:	jrcxz  0x140018963
   140018964:	jrcxz  0x140018949
   140018966:	jrcxz  0x140018967
   140018968:	jrcxz  0x14001894d
   14001896a:	jrcxz  0x14001896b
   14001896c:	jrcxz  0x140018951
   14001896e:	jrcxz  0x14001896f
   140018970:	add    BYTE PTR [rax],al
   140018972:	add    BYTE PTR [rax+rax*1],ch
   140018975:	add    BYTE PTR [rax],al
   140018977:	(bad)  
	...
   14001899c:	add    BYTE PTR [rax],al
   14001899e:	add    BYTE PTR [rcx],bl
   1400189a0:	cmc    
   1400189a1:	cmc    
   1400189a2:	cmc    
   1400189a3:	inc    ebx
   1400189a5:	ret    
   1400189a6:	ret    
   1400189a7:	mov    WORD PTR [rdx],?
   1400189a9:	xor    dh,BYTE PTR [rdx]
   1400189ab:	and    dl,al
   1400189ad:	rcl    al,1
   1400189af:	test   bl,ch
   1400189b1:	jmp    0x14001899e
   1400189b3:	inc    edx
   1400189b5:	ret    0xffc2
   1400189b8:	(bad)  
   1400189b9:	(bad)  
   1400189ba:	(bad)  
   1400189bb:	call   rcx
   1400189bd:	rcl    ecx,1
   1400189bf:	(bad)  
   1400189c0:	fcmovu st,st(2)
   1400189c2:	(bad)  
   1400189c4:	iret   
   1400189c5:	iret   
   1400189c6:	iret   
   1400189c7:	jmp    rcx
   1400189c9:	loope  0x1400189ac
   1400189cb:	call   rcx
   1400189cd:	rcl    ecx,1
   1400189cf:	jmp    rsi
   1400189d1:	out    0xe6,al
   1400189d3:	call   rsi
   1400189d5:	(bad)  
   1400189d6:	(bad)  
   1400189d7:	inc    edi
   1400189d9:	mov    edi,0xd6d6d6ff
   1400189df:	call   rbx
   1400189e1:	rcl    ebx,cl
   1400189e3:	call   rbx
   1400189e5:	rcl    ebx,cl
   1400189e7:	call   rsp
   1400189e9:	(bad)  
   1400189ea:	(bad)  
   1400189eb:	(bad)  
   1400189ec:	fcmovnu st,st(3)
   1400189ee:	(bad)  
   1400189f0:	(bad)  
   1400189f1:	(bad)  
   1400189f2:	(bad)  
   1400189f3:	(bad)  
   1400189f4:	(bad)  
   1400189f6:	fdiv   st(7),st
   1400189f8:	(bad)  
   1400189f9:	(bad)  
   1400189fa:	(bad)  
   1400189fb:	jmp    rcx
   1400189fd:	loope  0x1400189e0
   1400189ff:	dec    ebx
   140018a01:	retf   
   140018a02:	retf   
   140018a03:	jmp    rsp
   140018a05:	in     al,0xe4
   140018a07:	(bad)  
   140018a08:	(bad)  
   140018a0a:	fcos   
   140018a0c:	lock lock lock (bad) 
   140018a10:	cli    
   140018a11:	cli    
   140018a12:	cli    
   140018a13:	(bad)  
   140018a14:	(bad)  
   140018a15:	(bad)  
   140018a16:	(bad)  
   140018a17:	(bad)  
   140018a18:	(bad)  
   140018a19:	(bad)  
   140018a1a:	(bad)  
   140018a1b:	(bad)  
   140018a1c:	(bad)  
   140018a1d:	(bad)  
   140018a1e:	(bad)  
   140018a1f:	(bad)  
   140018a20:	(bad)  
   140018a21:	(bad)  
   140018a22:	(bad)  
   140018a23:	(bad)  
   140018a24:	(bad)  
   140018a25:	(bad)  
   140018a26:	(bad)  
   140018a27:	sti    
   140018a28:	cli    
   140018a29:	cli    
   140018a2a:	cli    
   140018a2b:	cld    
   140018a2c:	lock lock lock jmp QWORD PTR [rsi]
   140018a31:	es xor al,BYTE PTR es:[rax]
   140018a35:	add    BYTE PTR [rax],al
   140018a37:	(bad)  
	...
   140018a5c:	add    BYTE PTR [rax],al
   140018a5e:	add    BYTE PTR [rcx],bl
   140018a60:	div    dh
   140018a62:	idiv   bh
   140018a64:	and    BYTE PTR [rax],ah
   140018a66:	and    BYTE PTR [rax+rax*1],dh
   140018a69:	add    BYTE PTR [rax],al
   140018a6b:	(bad)  
   140018a6c:	cmp    BYTE PTR [rax],bh
   140018a6e:	cmp    BYTE PTR [rsi],ah
   140018a70:	in     al,dx
   140018a71:	in     al,dx
   140018a72:	in     al,dx
   140018a73:	(bad)  
   140018a74:	in     al,dx
   140018a75:	in     al,dx
   140018a76:	in     al,dx
   140018a77:	(bad)  
   140018a78:	(bad)  
   140018a79:	(bad)  
   140018a7a:	(bad)  
   140018a7b:	dec    ebp
   140018a7d:	int    0xcd
   140018a7f:	(bad)  
   140018a80:	mov    ebx,0xd5ffbbbb
   140018a85:	(bad)  
   140018a86:	(bad)  
   140018a87:	(bad)  
   140018a88:	mov    edx,0xdfffbaba
   140018a8d:	(bad)  
   140018a8f:	(bad)  
   140018a90:	call   0x12a01737d
   140018a95:	jmp    0x109cb8a83
   140018a9a:	leave  
   140018a9b:	dec    ecx
   140018a9d:	leave  
   140018a9e:	leave  
   140018a9f:	call   rbx
   140018aa1:	rcl    ebx,cl
   140018aa3:	dec    eax
   140018aa5:	enter  0xffc8,0xca
   140018aa9:	retf   0xffca
   140018aac:	fcomp  st(0)
   140018aae:	fdivr  st,st(7)
   140018ab0:	enter  0xc8c8,0xff
   140018ab4:	(bad)  
   140018ab5:	(bad)  
   140018ab6:	(bad)  
   140018ab7:	(bad)  
   140018ab8:	mov    edi,0xd7ffbfbf
   140018abd:	xlat   BYTE PTR ds:[rbx]
   140018abe:	xlat   BYTE PTR ds:[rbx]
   140018abf:	call   rax
   140018ac1:	rcl    al,1
   140018ac3:	jmp    rdi
   140018ac5:	out    0xe7,eax
   140018ac7:	push   rax
   140018ac9:	lock lock push QWORD PTR [rsi+0x65ffffee]
   140018ad1:	(bad)  
   140018ad3:	(bad)  
   140018ad4:	(bad)  
   140018ad5:	(bad)  
   140018ad6:	(bad)  
   140018ad7:	push   QWORD PTR [rcx+rcx*8]
   140018ada:	(bad)  
   140018adb:	jmp    FWORD PTR [rdi]
   140018add:	(bad)  
   140018ae0:	sub    eax,ecx
   140018ae2:	(bad)  
   140018ae3:	jmp    FWORD PTR [rsi]
   140018ae5:	sar    bh,0xff
   140018ae8:	push   rdx
   140018ae9:	retf   0xffff
   140018aec:	stos   BYTE PTR es:[rdi],al
   140018aed:	in     eax,0xff
   140018aef:	push   rbp
   140018af1:	div    dh
   140018af3:	ror    DWORD PTR [rsi+0x1c8e8e],cl
	...
   140018b1d:	add    BYTE PTR [rax],al
   140018b1f:	sbb    esi,esi
   140018b21:	div    dh
   140018b23:	(bad)  
   140018b24:	mov    esi,0x2491bebe
   140018b29:	and    al,0x24
   140018b2b:	xor    eax,0x8ec4c4c4
   140018b30:	in     eax,dx
   140018b31:	in     eax,dx
   140018b32:	in     eax,dx
   140018b33:	inc    ebx
   140018b35:	ret    
   140018b36:	ret    
   140018b37:	(bad)  
   140018b38:	in     al,dx
   140018b39:	in     al,dx
   140018b3a:	in     al,dx
   140018b3b:	(bad)  
   140018b3c:	(bad)  
   140018b3e:	(bad)  
   140018b40:	rcl    ecx,1
   140018b42:	sar    edi,1
   140018b44:	fcmovnu st,st(3)
   140018b46:	(bad)  
   140018b48:	(bad)  
   140018b49:	(bad)  
   140018b4a:	(bad)  
   140018b4b:	(bad)  
   140018b4c:	fcmovu st,st(2)
   140018b4e:	(bad)  
   140018b50:	jmp    0x12b01753e
   140018b55:	(bad)  
   140018b56:	(bad)  
   140018b57:	jmp    rdx
   140018b59:	loop   0x140018b3d
   140018b5b:	(bad)  
   140018b5c:	(bad)  
   140018b5e:	fdivp  st(7),st
   140018b60:	(bad)  
   140018b62:	fdivp  st(7),st
   140018b64:	loop   0x140018b48
   140018b66:	loop   0x140018b67
   140018b68:	(bad)  
   140018b6a:	fdiv   st(7),st
   140018b6c:	loope  0x140018b4f
   140018b6e:	loope  0x140018b6f
   140018b70:	rcl    al,1
   140018b72:	sar    bh,1
   140018b74:	jrcxz  0x140018b59
   140018b76:	jrcxz  0x140018b77
   140018b78:	fcomp  st(0)
   140018b7a:	fdivr  st,st(7)
   140018b7c:	out    0xe7,eax
   140018b7e:	out    0xff,eax
   140018b80:	retf   
   140018b81:	retf   
   140018b82:	retf   
   140018b83:	push   rbp
   140018b85:	cmc    
   140018b86:	cmc    
   140018b87:	jmp    QWORD PTR [rdx+0x44ffffec]
   140018b8d:	(bad)  
   140018b8e:	(bad)  
   140018b8f:	inc    DWORD PTR [rax-0x2e]
   140018b92:	(bad)  
   140018b93:	(bad)  
   140018b94:	cmp    ecx,edi
   140018b96:	(bad)  
   140018b97:	push   QWORD PTR [rdi]
   140018b99:	int3   
   140018b9a:	(bad)  
   140018b9b:	push   QWORD PTR [rbx]
   140018b9d:	enter  0xffff,0x2f
   140018ba1:	(bad)  
   140018ba2:	(bad)  
   140018ba3:	jmp    FWORD PTR [rdx]
   140018ba5:	sar    edi,0xff
   140018ba8:	es mov ebp,0xba22ffff
   140018bae:	(bad)  
   140018baf:	dec    DWORD PTR [rsi-0x3000024]
   140018bb5:	cld    
   140018bb6:	cld    
   140018bb7:	pushf  
	...
   140018bdc:	add    BYTE PTR [rax],al
   140018bde:	add    BYTE PTR [rcx],bl
   140018be0:	div    dh
   140018be2:	idiv   bh
   140018be4:	out    dx,al
   140018be5:	out    dx,al
   140018be6:	out    dx,al
   140018be7:	(bad)  
   140018be8:	out    dx,al
   140018be9:	out    dx,al
   140018bea:	out    dx,al
   140018beb:	(bad)  
   140018bec:	out    dx,al
   140018bed:	out    dx,al
   140018bee:	out    dx,al
   140018bef:	(bad)  
   140018bf0:	in     eax,dx
   140018bf1:	in     eax,dx
   140018bf2:	in     eax,dx
   140018bf3:	(bad)  
   140018bf4:	in     eax,dx
   140018bf5:	in     eax,dx
   140018bf6:	in     eax,dx
   140018bf7:	(bad)  
   140018bf8:	in     eax,dx
   140018bf9:	in     eax,dx
   140018bfa:	in     eax,dx
   140018bfb:	(bad)  
   140018bfc:	in     al,dx
   140018bfd:	in     al,dx
   140018bfe:	in     al,dx
   140018bff:	(bad)  
   140018c00:	in     al,dx
   140018c01:	in     al,dx
   140018c02:	in     al,dx
   140018c03:	(bad)  
   140018c04:	in     al,dx
   140018c05:	in     al,dx
   140018c06:	in     al,dx
   140018c07:	(bad)  
   140018c08:	in     al,dx
   140018c09:	in     al,dx
   140018c0a:	in     al,dx
   140018c0b:	(bad)  
   140018c0c:	jmp    0x140018bf9
   140018c0e:	jmp    0x140018c0f
   140018c10:	jmp    0x140018bfd
   140018c12:	jmp    0x140018c13
   140018c14:	jmp    0x140018c01
   140018c16:	jmp    0x140018c17
   140018c18:	(bad)  
   140018c19:	(bad)  
   140018c1a:	(bad)  
   140018c1b:	(bad)  
   140018c1c:	(bad)  
   140018c1d:	(bad)  
   140018c1e:	(bad)  
   140018c1f:	(bad)  
   140018c20:	(bad)  
   140018c21:	(bad)  
   140018c22:	(bad)  
   140018c23:	(bad)  
   140018c24:	jmp    0x12a017612
   140018c29:	jmp    0x129eb8c17
   140018c2e:	jmp    0x128ea7532
   140018c33:	(bad)  
   140018c34:	call   0x129017521
   140018c39:	call   0x127e98c26
   140018c3e:	out    0xff,eax
   140018c40:	in     eax,0xe5
   140018c42:	in     eax,0xff
   140018c44:	(bad)  
   140018c45:	(bad)  
   140018c46:	(bad)  
   140018c47:	call   QWORD PTR [rdi-0x22]
   140018c4a:	(bad)  
   140018c4b:	inc    DWORD PTR [rdi-0x28]
   140018c4e:	(bad)  
   140018c4f:	inc    DWORD PTR [rbx-0x2b]
   140018c52:	(bad)  
   140018c53:	(bad)  
   140018c54:	(bad)  
   140018c55:	sar    bh,cl
   140018c57:	(bad)  
   140018c58:	cmp    ecx,esi
   140018c5a:	(bad)  
   140018c5b:	push   QWORD PTR [rsi]
   140018c5d:	retf   
   140018c5e:	(bad)  
   140018c5f:	push   QWORD PTR [rdx]
   140018c61:	enter  0xffff,0x6e
   140018c65:	xlat   BYTE PTR ds:[rbx]
   140018c66:	(bad)  
   140018c67:	push   rsi
   140018c69:	cld    
   140018c6a:	(bad)  
   140018c6b:	jmp    QWORD PTR [rsi-0x2f]
   140018c6e:	(bad)  
   140018c6f:	push   QWORD PTR [rax]
   140018c71:	mov    esi,0xffffffff
   140018c76:	push   rax
	...
   140018c9c:	add    BYTE PTR [rax],al
   140018c9e:	add    BYTE PTR [rcx],bl
   140018ca0:	div    edi
   140018ca2:	idiv   edi
   140018ca4:	mov    edi,0x33338cc7
   140018caa:	xor    esp,DWORD PTR [rdx]
   140018cac:	rcl    ebx,cl
   140018cae:	rol    DWORD PTR [rsi+rbp*8-0x3b001112],cl
   140018cb5:	(bad)  
   140018cb6:	(bad)  
   140018cb7:	(bad)  
   140018cb8:	out    dx,al
   140018cb9:	out    dx,al
   140018cba:	out    dx,al
   140018cbb:	(bad)  
   140018cbc:	in     eax,dx
   140018cbd:	in     eax,dx
   140018cbe:	in     eax,dx
   140018cbf:	(bad)  
   140018cc0:	in     eax,dx
   140018cc1:	in     eax,dx
   140018cc2:	in     eax,dx
   140018cc3:	(bad)  
   140018cc4:	in     eax,dx
   140018cc5:	in     eax,dx
   140018cc6:	in     eax,dx
   140018cc7:	jmp    rdi
   140018cc9:	out    0xe7,eax
   140018ccb:	call   rbp
   140018ccd:	(bad)  
   140018cce:	(bad)  
   140018ccf:	(bad)  
   140018cd0:	jmp    0x12c0176be
   140018cd5:	jmp    0x140018cc2
   140018cd7:	(bad)  
   140018cd8:	jmp    0x140018cc5
   140018cda:	jmp    0x140018cdb
   140018cdc:	jmp    0x140018cc9
   140018cde:	jmp    0x140018cdf
   140018ce0:	(bad)  
   140018ce1:	(bad)  
   140018ce2:	(bad)  
   140018ce3:	(bad)  
   140018ce4:	(bad)  
   140018ce5:	(bad)  
   140018ce6:	(bad)  
   140018ce7:	call   rax
   140018ce9:	rcl    al,1
   140018ceb:	(bad)  
   140018cec:	fcomp  st(0)
   140018cee:	fdivr  st,st(7)
   140018cf0:	fcmovu st,st(2)
   140018cf2:	(bad)  
   140018cf4:	xlat   BYTE PTR ds:[rbx]
   140018cf5:	xlat   BYTE PTR ds:[rbx]
   140018cf6:	xlat   BYTE PTR ds:[rbx]
   140018cf7:	dec    esi
   140018cf9:	(bad)  
   140018cfa:	(bad)  
   140018cfb:	call   rdx
   140018cfd:	rcl    dl,cl
   140018cff:	push   QWORD PTR [rbx-0x4c4d]
   140018d05:	(bad)  
   140018d06:	(bad)  
   140018d07:	dec    DWORD PTR [rdi-0x22]
   140018d0a:	(bad)  
   140018d0b:	dec    DWORD PTR [rbx-0x25]
   140018d0e:	(bad)  
   140018d0f:	inc    DWORD PTR [rdi-0x28]
   140018d12:	(bad)  
   140018d13:	inc    DWORD PTR [rdx-0x2c]
   140018d16:	(bad)  
   140018d17:	(bad)  
   140018d18:	ds sar edi,1
   140018d1b:	(bad)  
   140018d1c:	cmp    cl,dh
   140018d1e:	(bad)  
   140018d1f:	push   QWORD PTR [rip+0x70ffffca]        # 0x1b1018cef
   140018d25:	fdivr  st,st(7)
   140018d27:	push   rsi
   140018d29:	cld    
   140018d2a:	(bad)  
   140018d2b:	jmp    FWORD PTR [rcx-0x2d]
   140018d2e:	(bad)  
   140018d2f:	jmp    QWORD PTR [rsp+rdi*4]
   140018d32:	(bad)  
   140018d33:	(bad)  
   140018d34:	(bad)  
   140018d35:	(bad)  
   140018d36:	(bad)  
   140018d37:	inc    DWORD PTR [rax]
	...
   140018d5d:	add    BYTE PTR [rax],al
   140018d5f:	sbb    eax,edi
   140018d61:	clc    
   140018d62:	clc    
   140018d63:	jmp    QWORD PTR [rcx]
   140018d65:	and    DWORD PTR [rcx],esp
   140018d67:	xor    al,0x0
   140018d69:	add    BYTE PTR [rax],al
   140018d6b:	(bad)  
   140018d6c:	cmp    BYTE PTR [rax],bh
   140018d6e:	cmp    BYTE PTR [rsi],ah
   140018d70:	out    dx,eax
   140018d71:	out    dx,eax
   140018d72:	out    dx,eax
   140018d73:	(bad)  
   140018d74:	out    dx,eax
   140018d75:	out    dx,eax
   140018d76:	out    dx,eax
   140018d77:	(bad)  
   140018d78:	out    dx,al
   140018d79:	out    dx,al
   140018d7a:	out    dx,al
   140018d7b:	(bad)  
   140018d7c:	out    dx,al
   140018d7d:	out    dx,al
   140018d7e:	out    dx,al
   140018d7f:	(bad)  
   140018d80:	out    dx,al
   140018d81:	out    dx,al
   140018d82:	out    dx,al
   140018d83:	(bad)  
   140018d84:	in     eax,dx
   140018d85:	in     eax,dx
   140018d86:	in     eax,dx
   140018d87:	call   rbx
   140018d89:	rcl    ebx,cl
   140018d8b:	dec    eax
   140018d8d:	enter  0xffc8,0xe8
   140018d91:	call   0x12cee8d7e
   140018d96:	in     al,dx
   140018d97:	call   rcx
   140018d99:	rcl    ecx,1
   140018d9b:	dec    ebx
   140018d9d:	retf   
   140018d9e:	retf   
   140018d9f:	(bad)  
   140018da0:	jmp    0x140018d8d
   140018da2:	jmp    0x140018da3
   140018da4:	jmp    0x140018d91
   140018da6:	jmp    0x140018da7
   140018da8:	iret   
   140018da9:	iret   
   140018daa:	iret   
   140018dab:	(bad)  
   140018dac:	fcmovnu st,st(3)
   140018dae:	(bad)  
   140018db0:	mov    edi,0xc9ffbfbf
   140018db5:	leave  
   140018db6:	leave  
   140018db7:	(bad)  
   140018db8:	mov    edi,0xc9ffbfbf
   140018dbd:	leave  
   140018dbe:	leave  
   140018dbf:	dec    edx
   140018dc1:	retf   0xffca
   140018dc4:	(bad)  
   140018dc5:	(bad)  
   140018dc6:	(bad)  
   140018dc7:	call   QWORD PTR [rbx-0x1f]
   140018dca:	(bad)  
   140018dcb:	dec    DWORD PTR [rsi-0x22]
   140018dce:	(bad)  
   140018dcf:	dec    DWORD PTR [rdx-0x26]
   140018dd2:	(bad)  
   140018dd3:	inc    DWORD PTR [rsi-0x29]
   140018dd6:	(bad)  
   140018dd7:	inc    DWORD PTR [rdx-0x2c]
   140018dda:	(bad)  
   140018ddb:	(bad)  
   140018ddc:	cmp    eax,0x39ffffd0
   140018de1:	int    0xff
   140018de3:	push   QWORD PTR [rip+0x30ffffca]        # 0x171018db3
   140018de9:	(bad)  
   140018dec:	sub    al,0xc2
   140018dee:	(bad)  
   140018def:	jmp    FWORD PTR [rax]
   140018df1:	mov    edi,0xffffffff
   140018df6:	(bad)  
   140018df7:	inc    DWORD PTR [rax]
	...
   140018e1d:	add    BYTE PTR [rax],al
   140018e1f:	sbb    eax,edi
   140018e21:	clc    
   140018e22:	clc    
   140018e23:	inc    ecx
   140018e25:	rol    ecx,0x91
   140018e28:	and    eax,0xc7352525
   140018e2d:	mov    edi,0xf0f0f08e
   140018e33:	inc    edi
   140018e35:	mov    edi,0xefefefff
   140018e3b:	(bad)  
   140018e3c:	out    dx,eax
   140018e3d:	out    dx,eax
   140018e3e:	out    dx,eax
   140018e3f:	(bad)  
   140018e40:	out    dx,al
   140018e41:	out    dx,al
   140018e42:	out    dx,al
   140018e43:	(bad)  
   140018e44:	out    dx,al
   140018e45:	out    dx,al
   140018e46:	out    dx,al
   140018e47:	(bad)  
   140018e48:	out    dx,al
   140018e49:	out    dx,al
   140018e4a:	out    dx,al
   140018e4b:	(bad)  
   140018e4c:	(bad)  
   140018e4e:	fdivp  st(7),st
   140018e50:	in     eax,dx
   140018e51:	in     eax,dx
   140018e52:	in     eax,dx
   140018e53:	(bad)  
   140018e54:	in     eax,dx
   140018e55:	in     eax,dx
   140018e56:	in     eax,dx
   140018e57:	(bad)  
   140018e58:	in     eax,dx
   140018e59:	in     eax,dx
   140018e5a:	in     eax,dx
   140018e5b:	(bad)  
   140018e5c:	in     al,dx
   140018e5d:	in     al,dx
   140018e5e:	in     al,dx
   140018e5f:	(bad)  
   140018e60:	in     al,dx
   140018e61:	in     al,dx
   140018e62:	in     al,dx
   140018e63:	(bad)  
   140018e64:	in     al,dx
   140018e65:	in     al,dx
   140018e66:	in     al,dx
   140018e67:	call   rax
   140018e69:	rcl    al,1
   140018e6b:	(bad)  
   140018e6c:	(bad)  
   140018e6e:	fdivp  st(7),st
   140018e70:	loopne 0x140018e52
   140018e72:	loopne 0x140018e73
   140018e74:	out    dx,eax
   140018e75:	out    dx,eax
   140018e76:	out    dx,eax
   140018e77:	(bad)  
   140018e78:	cli    
   140018e79:	cli    
   140018e7a:	cli    
   140018e7b:	(bad)  
   140018e7c:	(bad)  
   140018e7d:	(bad)  
   140018e7e:	(bad)  
   140018e7f:	(bad)  
   140018e80:	(bad)  
   140018e81:	(bad)  
   140018e82:	(bad)  
   140018e83:	(bad)  
   140018e84:	(bad)  
   140018e85:	(bad)  
   140018e86:	(bad)  
   140018e87:	call   QWORD PTR [rsi-0x1c]
   140018e8a:	(bad)  
   140018e8b:	call   QWORD PTR [rdx-0x1f]
   140018e8e:	(bad)  
   140018e8f:	dec    DWORD PTR [rsi-0x23]
   140018e92:	(bad)  
   140018e93:	dec    DWORD PTR [rcx-0x26]
   140018e96:	(bad)  
   140018e97:	inc    DWORD PTR [rbp-0x29]
   140018e9a:	(bad)  
   140018e9b:	push   QWORD PTR [rax-0x13]
   140018ea1:	(bad)  
   140018ea2:	(bad)  
   140018ea3:	(bad)  
   140018ea4:	(bad)  
   140018ea5:	(bad)  
   140018ea6:	(bad)  
   140018ea7:	(bad)  
   140018ea8:	(bad)  
   140018ea9:	(bad)  
   140018eaa:	(bad)  
   140018eab:	(bad)  
   140018eac:	(bad)  
   140018ead:	(bad)  
   140018eae:	(bad)  
   140018eaf:	(bad)  
   140018eb0:	(bad)  
   140018eb1:	(bad)  
   140018eb2:	(bad)  
   140018eb3:	(bad)  
   140018eb4:	(bad)  
   140018eb5:	(bad)  
   140018eb6:	(bad)  
   140018eb7:	(bad)  
   140018eb8:	(bad)  
   140018eb9:	(bad)  
   140018eba:	(bad)  
   140018ebb:	(bad)  
   140018ebc:	(bad)  
   140018ebd:	(bad)  
   140018ebe:	(bad)  
   140018ebf:	(bad)  
   140018ec0:	(bad)  
   140018ec1:	(bad)  
   140018ec2:	push   rcx
   140018ec4:	(bad)  
   140018ec5:	(bad)  
   140018ec6:	call   FWORD PTR [rdx+0x0]
	...
   140018edc:	add    BYTE PTR [rax],al
   140018ede:	add    BYTE PTR [rcx],bl
   140018ee0:	stc    
   140018ee1:	stc    
   140018ee2:	stc    
   140018ee3:	push   rcx
   140018ee5:	icebp  
   140018ee6:	icebp  
   140018ee7:	push   rcx
   140018ee9:	icebp  
   140018eea:	icebp  
   140018eeb:	push   rcx
   140018eed:	icebp  
   140018eee:	icebp  
   140018eef:	push   rcx
   140018ef1:	icebp  
   140018ef2:	icebp  
   140018ef3:	push   rax
   140018ef5:	lock lock push rax
   140018ef9:	lock lock push rax
   140018efd:	lock lock (bad) 
   140018f00:	out    dx,eax
   140018f01:	out    dx,eax
   140018f02:	out    dx,eax
   140018f03:	(bad)  
   140018f04:	out    dx,eax
   140018f05:	out    dx,eax
   140018f06:	out    dx,eax
   140018f07:	(bad)  
   140018f08:	out    dx,eax
   140018f09:	out    dx,eax
   140018f0a:	out    dx,eax
   140018f0b:	(bad)  
   140018f0c:	out    dx,al
   140018f0d:	out    dx,al
   140018f0e:	out    dx,al
   140018f0f:	(bad)  
   140018f10:	out    dx,al
   140018f11:	out    dx,al
   140018f12:	out    dx,al
   140018f13:	(bad)  
   140018f14:	out    dx,al
   140018f15:	out    dx,al
   140018f16:	out    dx,al
   140018f17:	(bad)  
   140018f18:	in     eax,dx
   140018f19:	in     eax,dx
   140018f1a:	in     eax,dx
   140018f1b:	(bad)  
   140018f1c:	in     eax,dx
   140018f1d:	in     eax,dx
   140018f1e:	in     eax,dx
   140018f1f:	(bad)  
   140018f20:	in     eax,dx
   140018f21:	in     eax,dx
   140018f22:	in     eax,dx
   140018f23:	(bad)  
   140018f24:	in     al,dx
   140018f25:	in     al,dx
   140018f26:	in     al,dx
   140018f27:	(bad)  
   140018f28:	in     al,dx
   140018f29:	in     al,dx
   140018f2a:	in     al,dx
   140018f2b:	(bad)  
   140018f2c:	in     al,dx
   140018f2d:	in     al,dx
   140018f2e:	in     al,dx
   140018f2f:	(bad)  
   140018f30:	sti    
   140018f31:	sti    
   140018f32:	sti    
   140018f33:	call   rcx
   140018f35:	mov    ecx,0x7ca5ff9d
   140018f3a:	rex.WX call FWORD PTR [rdx-0x6900c08f]
   140018f41:	outs   dx,DWORD PTR ds:[rsi]
   140018f42:	rex (bad) 
   140018f44:	(bad)  
   140018f45:	(bad)  
   140018f46:	(bad)  
   140018f47:	call   FWORD PTR [rdx-0x1a]
   140018f4a:	(bad)  
   140018f4b:	call   QWORD PTR [rbp-0x1d]
   140018f4e:	(bad)  
   140018f4f:	call   QWORD PTR [rcx-0x20]
   140018f52:	(bad)  
   140018f53:	dec    DWORD PTR [rbp-0x23]
   140018f56:	(bad)  
   140018f57:	dec    DWORD PTR [rcx-0x27]
   140018f5a:	(bad)  
   140018f5b:	inc    DWORD PTR [rsi+rdx*8-0x1]
   140018f5f:	inc    DWORD PTR [rax-0x2d]
   140018f62:	(bad)  
   140018f63:	(bad)  
   140018f64:	cmp    al,0xcf
   140018f66:	(bad)  
   140018f67:	push   QWORD PTR [rdi]
   140018f69:	int3   
   140018f6a:	(bad)  
   140018f6b:	push   QWORD PTR [rbx]
   140018f6d:	leave  
   140018f6e:	(bad)  
   140018f6f:	jmp    FWORD PTR [rdi]
   140018f71:	(bad)  
   140018f72:	(bad)  
   140018f73:	jmp    FWORD PTR [rbx]
   140018f75:	sar    edi,0xff
   140018f78:	es mov esi,0xba22ffff
   140018f7e:	(bad)  
   140018f7f:	jmp    FWORD PTR [rip+0xffffffff8effffbc]        # 0xcf018f41
   140018f85:	fdiv   st(7),st
   140018f87:	(bad)  
   140018f88:	(bad)  
   140018f89:	(bad)  
   140018f8a:	dec    esp
	...
   140018f9c:	add    BYTE PTR [rax],al
   140018f9e:	add    BYTE PTR [rcx],bl
   140018fa0:	stc    
   140018fa1:	stc    
   140018fa2:	stc    
   140018fa3:	dec    ecx
   140018fa5:	leave  
   140018fa6:	leave  
   140018fa7:	mov    WORD PTR [rsp+rsi*1],?
   140018faa:	xor    al,0x22
   140018fac:	(bad)  
   140018fad:	(bad)  
   140018fae:	(bad)  
   140018faf:	test   cl,dh
   140018fb1:	icebp  
   140018fb2:	icebp  
   140018fb3:	dec    eax
   140018fb5:	enter  0xffc8,0xf1
   140018fb9:	icebp  
   140018fba:	icebp  
   140018fbb:	push   rax
   140018fbd:	lock lock push rax
   140018fc1:	lock lock push rax
   140018fc5:	lock lock (bad) 
   140018fc8:	jmp    0x1180179b6
   140018fcd:	xlat   BYTE PTR ds:[rbx]
   140018fce:	xlat   BYTE PTR ds:[rbx]
   140018fcf:	(bad)  
   140018fd0:	out    dx,eax
   140018fd1:	out    dx,eax
   140018fd2:	out    dx,eax
   140018fd3:	(bad)  
   140018fd4:	out    dx,al
   140018fd5:	out    dx,al
   140018fd6:	out    dx,al
   140018fd7:	(bad)  
   140018fd8:	out    dx,al
   140018fd9:	out    dx,al
   140018fda:	out    dx,al
   140018fdb:	(bad)  
   140018fdc:	out    dx,al
   140018fdd:	out    dx,al
   140018fde:	out    dx,al
   140018fdf:	(bad)  
   140018fe0:	out    dx,al
   140018fe1:	out    dx,al
   140018fe2:	out    dx,al
   140018fe3:	(bad)  
   140018fe4:	in     eax,dx
   140018fe5:	in     eax,dx
   140018fe6:	in     eax,dx
   140018fe7:	call   rdx
   140018fe9:	rcl    dl,cl
   140018feb:	(bad)  
   140018fec:	jmp    0x140018fd9
   140018fee:	jmp    0x140018fef
   140018ff0:	(bad)  
   140018ff2:	mov    ah,0xff
   140018ff4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018ff5:	ja     0x140019033
   140018ff7:	jmp    QWORD PTR [rbx-0x6100c28b]
   140018ffd:	jae    0x14001903d
   140018fff:	call   FWORD PTR [rdx-0xc08f]
   140019005:	(bad)  
   140019006:	(bad)  
   140019007:	call   FWORD PTR [rbp-0x17]
   14001900a:	(bad)  
   14001900b:	call   FWORD PTR [rcx-0x1a]
   14001900e:	(bad)  
   14001900f:	call   QWORD PTR [rbp-0x1d]
   140019012:	(bad)  
   140019013:	call   QWORD PTR [rax-0x21]
   140019016:	(bad)  
   140019017:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001901b:	dec    DWORD PTR [rax-0x27]
   14001901e:	(bad)  
   14001901f:	inc    DWORD PTR [rbx-0x2b]
   140019022:	(bad)  
   140019023:	(bad)  
   140019024:	(bad)  
   140019025:	sar    bh,cl
   140019027:	(bad)  
   140019028:	cmp    ecx,edi
   14001902a:	(bad)  
   14001902b:	push   QWORD PTR [rdi]
   14001902d:	retf   
   14001902e:	(bad)  
   14001902f:	push   QWORD PTR [rdx]
   140019031:	enter  0xffff,0x2e
   140019035:	(bad)  
   140019036:	(bad)  
   140019037:	jmp    FWORD PTR [rdx]
   140019039:	sar    bh,0xff
   14001903c:	and    eax,0x21ffffbd
   140019041:	mov    edx,0xb81fffff
   140019046:	(bad)  
   140019047:	jmp    FWORD PTR [rdx-0x1b]
   14001904d:	(bad)  
   14001904e:	inc    DWORD PTR [rcx+0x0]
	...
   14001905c:	add    BYTE PTR [rax],al
   14001905e:	add    BYTE PTR [rcx],bl
   140019060:	stc    
   140019061:	stc    
   140019062:	stc    
   140019063:	jmp    QWORD PTR [rdx]
   140019065:	and    ah,BYTE PTR [rdx]
   140019067:	xor    al,0x0
   140019069:	add    BYTE PTR [rax],al
   14001906b:	(bad)  
   14001906c:	cmp    BYTE PTR [rax],bh
   14001906e:	cmp    BYTE PTR [rsi],ah
   140019070:	repnz repnz repnz push rdx
   140019075:	repnz repnz push rcx
   140019079:	icebp  
   14001907a:	icebp  
   14001907b:	push   rcx
   14001907d:	icebp  
   14001907e:	icebp  
   14001907f:	push   rcx
   140019081:	icebp  
   140019082:	icebp  
   140019083:	push   rax
   140019085:	lock lock jmp rdi
   140019089:	out    0xe7,eax
   14001908b:	dec    ebp
   14001908d:	int    0xcd
   14001908f:	(bad)  
   140019090:	out    dx,eax
   140019091:	out    dx,eax
   140019092:	out    dx,eax
   140019093:	(bad)  
   140019094:	out    dx,eax
   140019095:	out    dx,eax
   140019096:	out    dx,eax
   140019097:	call   rbx
   140019099:	rcl    ebx,cl
   14001909b:	dec    ebp
   14001909d:	int    0xcd
   14001909f:	(bad)  
   1400190a0:	out    dx,al
   1400190a1:	out    dx,al
   1400190a2:	out    dx,al
   1400190a3:	(bad)  
   1400190a4:	out    dx,al
   1400190a5:	out    dx,al
   1400190a6:	out    dx,al
   1400190a7:	call   rdx
   1400190a9:	rcl    dl,cl
   1400190ab:	(bad)  
   1400190ac:	cld    
   1400190ad:	cld    
   1400190ae:	cld    
   1400190af:	inc    eax
   1400190b1:	xchg   edi,eax
   1400190b2:	jmp    FWORD PTR fs:[rbx-0x5900c387]
   1400190b9:	ja     0x1400190f8
   1400190bb:	jmp    QWORD PTR [rdx-0x6200c28b]
   1400190c1:	jae    0x140019101
   1400190c3:	(bad)  
   1400190c4:	(bad)  
   1400190c5:	(bad)  
   1400190c6:	(bad)  
   1400190c7:	jmp    QWORD PTR [rcx-0x14]
   1400190ca:	(bad)  
   1400190cb:	call   FWORD PTR [rcx+rbp*8-0x1]
   1400190cf:	call   FWORD PTR [rax-0x1b]
   1400190d2:	(bad)  
   1400190d3:	call   QWORD PTR [rdx+riz*8-0x1]
   1400190d7:	call   QWORD PTR [rax-0x21]
   1400190da:	(bad)  
   1400190db:	dec    DWORD PTR [rbx-0x25]
   1400190de:	(bad)  
   1400190df:	inc    DWORD PTR [rdi-0x28]
   1400190e2:	(bad)  
   1400190e3:	inc    DWORD PTR [rbx-0x2b]
   1400190e6:	(bad)  
   1400190e7:	(bad)  
   1400190e8:	ds sar edi,1
   1400190eb:	(bad)  
   1400190ec:	cmp    cl,dh
   1400190ee:	(bad)  
   1400190ef:	push   QWORD PTR [rsi]
   1400190f1:	retf   
   1400190f2:	(bad)  
   1400190f3:	push   QWORD PTR [rcx]
   1400190f5:	(bad)  
   1400190f6:	(bad)  
   1400190f7:	jmp    FWORD PTR [rip+0x29ffffc3]        # 0x16a0190c0
   1400190fd:	sar    bh,0xff
   140019100:	and    eax,0x20ffffbc
   140019105:	mov    ecx,0xc84fffff
   14001910a:	(bad)  
   14001910b:	(bad)  
   14001910c:	(bad)  
   14001910d:	(bad)  
   14001910e:	dec    esi
	...
   14001911c:	add    BYTE PTR [rax],al
   14001911e:	add    BYTE PTR [rcx],bl
   140019120:	stc    
   140019121:	stc    
   140019122:	stc    
   140019123:	inc    ebx
   140019125:	ret    
   140019126:	ret    
   140019127:	xchg   ecx,eax
   140019128:	and    eax,0xca352525
   14001912d:	retf   0x8eca
   140019130:	repz repz repz dec edx
   140019135:	retf   0xffca
   140019138:	repnz repnz repnz push rdx
   14001913d:	repnz repnz push rdx
   140019141:	repnz repnz push rcx
   140019145:	icebp  
   140019146:	icebp  
   140019147:	push   rax
   140019149:	lock lock (bad) 
   14001914c:	(bad)  
   14001914e:	(bad)  
   140019150:	lock lock lock push rax
   140019155:	lock lock push rax
   140019159:	lock lock (bad) 
   14001915c:	out    dx,eax
   14001915d:	out    dx,eax
   14001915e:	out    dx,eax
   14001915f:	(bad)  
   140019160:	out    dx,eax
   140019161:	out    dx,eax
   140019162:	out    dx,eax
   140019163:	(bad)  
   140019164:	out    dx,eax
   140019165:	out    dx,eax
   140019166:	out    dx,eax
   140019167:	call   rdx
   140019169:	rcl    dl,cl
   14001916b:	(bad)  
   14001916c:	(bad)  
   14001916d:	(bad)  
   14001916e:	(bad)  
   14001916f:	push   QWORD PTR [rbp-0x5100be7f]
   140019175:	jnp    0x1400191b2
   140019177:	jmp    FWORD PTR [rdx-0x5a00c387]
   14001917d:	ja     0x1400191bc
   14001917f:	jmp    QWORD PTR [rcx-0xc18c]
   140019185:	(bad)  
   140019186:	(bad)  
   140019187:	push   QWORD PTR [rbx-0x11]
   14001918a:	(bad)  
   14001918b:	jmp    QWORD PTR [rax-0x15]
   14001918e:	(bad)  
   14001918f:	call   FWORD PTR [rax+rbp*8-0x1]
   140019193:	call   QWORD PTR [rdi-0x1b]
   140019196:	(bad)  
   140019197:	call   QWORD PTR [rbx-0x1f]
   14001919a:	(bad)  
   14001919b:	dec    DWORD PTR [rdi-0x22]
   14001919e:	(bad)  
   14001919f:	dec    DWORD PTR [rdx-0x25]
   1400191a2:	(bad)  
   1400191a3:	inc    DWORD PTR [rsi-0x29]
   1400191a6:	(bad)  
   1400191a7:	inc    DWORD PTR [rdx-0x2c]
   1400191aa:	(bad)  
   1400191ab:	(bad)  
   1400191ac:	ds sar edi,1
   1400191af:	(bad)  
   1400191b0:	cmp    ebp,ecx
   1400191b2:	(bad)  
   1400191b3:	push   QWORD PTR [rip+0x31ffffca]        # 0x172019183
   1400191b9:	(bad)  
   1400191ba:	(bad)  
   1400191bb:	jmp    FWORD PTR [rdx+rax*8]
   1400191be:	(bad)  
   1400191bf:	jmp    FWORD PTR [rax]
   1400191c1:	mov    edi,0xbc24ffff
   1400191c6:	(bad)  
   1400191c7:	jmp    FWORD PTR [rax]
   1400191c9:	mov    ebx,0xffffffff
   1400191ce:	push   rdi
	...
   1400191dc:	add    BYTE PTR [rax],al
   1400191de:	add    BYTE PTR [rcx],bl
   1400191e0:	cli    
   1400191e1:	cli    
   1400191e2:	cli    
   1400191e3:	push   rbp
   1400191e5:	cmc    
   1400191e6:	cmc    
   1400191e7:	push   rsp
   1400191e9:	hlt    
   1400191ea:	hlt    
   1400191eb:	push   rsp
   1400191ed:	hlt    
   1400191ee:	hlt    
   1400191ef:	push   rsp
   1400191f1:	hlt    
   1400191f2:	hlt    
   1400191f3:	push   rbx
   1400191f5:	repz repz push rbx
   1400191f9:	repz repz push rbx
   1400191fd:	repz repz push rdx
   140019201:	repnz repnz push rdx
   140019205:	repnz repnz push rdx
   140019209:	repnz repnz push rcx
   14001920d:	icebp  
   14001920e:	icebp  
   14001920f:	push   rcx
   140019211:	icebp  
   140019212:	icebp  
   140019213:	push   rcx
   140019215:	icebp  
   140019216:	icebp  
   140019217:	push   rax
   140019219:	lock lock push rax
   14001921d:	lock lock push rax
   140019221:	lock lock push rax
   140019225:	lock lock (bad) 
   140019228:	out    dx,eax
   140019229:	out    dx,eax
   14001922a:	out    dx,eax
   14001922b:	(bad)  
   14001922c:	(bad)  
   14001922d:	(bad)  
   14001922e:	(bad)  
   14001922f:	push   QWORD PTR [rdi-0x4d00c681]
   140019235:	jl     0x140019271
   140019237:	jmp    FWORD PTR [rsi-0x5600c486]
   14001923d:	js     0x14001927b
   14001923f:	jmp    QWORD PTR [rbp-0xa00c28a]
   140019245:	lock (bad) 
   140019247:	call   rdi
   140019249:	cli    
   14001924a:	(bad)  
   14001924b:	push   QWORD PTR [rbx-0x11]
   14001924e:	(bad)  
   14001924f:	call   FWORD PTR [rdi-0x15]
   140019252:	(bad)  
   140019253:	call   FWORD PTR [rbx-0x19]
   140019256:	(bad)  
   140019257:	call   QWORD PTR [rdi-0x1c]
   14001925a:	(bad)  
   14001925b:	call   QWORD PTR [rdx-0x1f]
   14001925e:	(bad)  
   14001925f:	dec    DWORD PTR [rsi-0x23]
   140019262:	(bad)  
   140019263:	dec    DWORD PTR [rdx-0x26]
   140019266:	(bad)  
   140019267:	inc    DWORD PTR [rbp-0x29]
   14001926a:	(bad)  
   14001926b:	inc    DWORD PTR [rcx-0x2d]
   14001926e:	(bad)  
   14001926f:	(bad)  
   140019270:	cmp    eax,0x38ffffd0
   140019275:	int    0xff
   140019277:	push   QWORD PTR [rcx+rcx*8]
   14001927a:	(bad)  
   14001927b:	push   QWORD PTR [rax]
   14001927d:	(bad)  
   140019280:	sub    al,0xc2
   140019282:	(bad)  
   140019283:	jmp    QWORD PTR [rdi]
   140019285:	mov    edi,0xbb23ffff
   14001928a:	(bad)  
   14001928b:	(bad)  
   14001928c:	(bad)  
   14001928d:	(bad)  
   14001928e:	(bad)  
   14001928f:	inc    DWORD PTR [rax]
	...
   14001929d:	add    BYTE PTR [rax],al
   14001929f:	sbb    edx,edi
   1400192a1:	cli    
   1400192a2:	cli    
   1400192a3:	dec    esp
   1400192a5:	int3   
   1400192a6:	int3   
   1400192a7:	mov    WORD PTR [rip+0xffffffffd9223535],?        # 0x11923c7e2
   1400192ad:	(bad)  
   1400192af:	test   ah,dh
   1400192b1:	hlt    
   1400192b2:	hlt    
   1400192b3:	dec    ebx
   1400192b5:	retf   
   1400192b6:	retf   
   1400192b7:	push   rsp
   1400192b9:	hlt    
   1400192ba:	hlt    
   1400192bb:	jmp    rdi
   1400192bd:	out    0xe7,eax
   1400192bf:	push   rbx
   1400192c1:	repz repz jmp rsi
   1400192c5:	out    0xe6,al
   1400192c7:	push   rbx
   1400192c9:	repz repz push rdx
   1400192cd:	repnz bnd jmp rdi
   1400192d1:	out    0xe7,eax
   1400192d3:	(bad)  
   1400192d4:	(bad)  
   1400192d6:	fdiv   st(7),st
   1400192d8:	in     al,0xe4
   1400192da:	in     al,0xff
   1400192dc:	in     al,0xe4
   1400192de:	in     al,0xff
   1400192e0:	out    0xe6,al
   1400192e2:	out    0xff,al
   1400192e4:	jrcxz  0x1400192c9
   1400192e6:	jrcxz  0x1400192e7
   1400192e8:	(bad)  
   1400192e9:	(bad)  
   1400192ea:	(bad)  
   1400192eb:	(bad)  
   1400192ec:	(bad)  
   1400192ed:	(bad)  
   1400192ee:	(bad)  
   1400192ef:	(bad)  
   1400192f0:	mov    edx,0xb6ff3980
   1400192f5:	jle    0x140019330
   1400192f7:	push   QWORD PTR [rcx-0x5200c584]
   1400192fd:	jp     0x14001933a
   1400192ff:	jmp    FWORD PTR [rax-0x4300c388]
   140019305:	cdq    
   140019306:	outs   dx,DWORD PTR ds:[rsi]
   140019307:	push   rsp
   140019309:	out    dx,eax
   14001930a:	jmp    0x14001930e
   14001930f:	(bad)  
   140019310:	(bad)  
   140019311:	(bad)  
   140019312:	(bad)  
   140019313:	(bad)  
   140019314:	(bad)  
   140019315:	(bad)  
   140019316:	(bad)  
   140019317:	(bad)  
   140019318:	(bad)  
   140019319:	(bad)  
   14001931a:	(bad)  
   14001931b:	(bad)  
   14001931c:	(bad)  
   14001931d:	(bad)  
   14001931e:	(bad)  
   14001931f:	(bad)  
   140019320:	(bad)  
   140019321:	(bad)  
   140019322:	(bad)  
   140019323:	(bad)  
   140019324:	(bad)  
   140019325:	(bad)  
   140019326:	(bad)  
   140019327:	(bad)  
   140019328:	(bad)  
   140019329:	(bad)  
   14001932a:	(bad)  
   14001932b:	(bad)  
   14001932c:	(bad)  
   14001932d:	(bad)  
   14001932e:	(bad)  
   14001932f:	(bad)  
   140019330:	jmp    0x1ae01932f
   140019335:	(bad)  
   140019337:	(bad)  
   140019338:	cmp    ah,cl
   14001933a:	(bad)  
   14001933b:	push   QWORD PTR [rbx]
   14001933d:	leave  
   14001933e:	(bad)  
   14001933f:	jmp    FWORD PTR [rdi]
   140019341:	(bad)  
   140019344:	sub    eax,ecx
   140019346:	(bad)  
   140019347:	jmp    QWORD PTR [rdi]
   140019349:	mov    esi,0xffffffff
   14001934e:	(bad)  
   14001934f:	inc    DWORD PTR [rax]
	...
   14001935d:	add    BYTE PTR [rax],al
   14001935f:	sbb    ebx,edi
   140019361:	sti    
   140019362:	sti    
   140019363:	jmp    QWORD PTR [rdx]
   140019365:	and    ah,BYTE PTR [rdx]
   140019367:	xor    al,0x0
   140019369:	add    BYTE PTR [rax],al
   14001936b:	(bad)  
   14001936c:	cmp    bh,BYTE PTR [rdx]
   14001936e:	cmp    ah,BYTE PTR [rsi]
   140019370:	cmc    
   140019371:	cmc    
   140019372:	cmc    
   140019373:	push   rbp
   140019375:	cmc    
   140019376:	cmc    
   140019377:	push   rbp
   140019379:	cmc    
   14001937a:	cmc    
   14001937b:	call   rdi
   14001937d:	xlat   BYTE PTR ds:[rbx]
   14001937e:	xlat   BYTE PTR ds:[rbx]
   14001937f:	push   rbx
   140019381:	repz repz call rsp
   140019385:	(bad)  
   140019386:	(bad)  
   140019387:	push   rdx
   140019389:	repnz repnz push rbx
   14001938d:	repz repz jmp rsi
   140019391:	out    0xe6,al
   140019393:	call   rcx
   140019395:	rcl    ecx,1
   140019397:	dec    edi
   140019399:	iret   
   14001939a:	iret   
   14001939b:	dec    esp
   14001939d:	int3   
   14001939e:	int3   
   14001939f:	call   rax
   1400193a1:	rcl    al,1
   1400193a3:	dec    esi
   1400193a5:	(bad)  
   1400193a6:	(bad)  
   1400193a7:	call   rbp
   1400193a9:	(bad)  
   1400193aa:	(bad)  
   1400193ab:	(bad)  
   1400193ac:	(bad)  
   1400193ad:	(bad)  
   1400193ae:	(bad)  
   1400193af:	(bad)  
   1400193b0:	mov    esi,0xb9ff3882
   1400193b5:	cmp    BYTE PTR [rcx],0xff
   1400193b8:	mov    ch,0x7e
   1400193ba:	cmp    bh,bh
   1400193bc:	mov    al,0x7c
   1400193be:	cmp    edi,edi
   1400193c0:	lods   al,BYTE PTR ds:[rsi]
   1400193c1:	jp     0x1400193fe
   1400193c3:	jmp    QWORD PTR [rdi-0x5c00c389]
   1400193c9:	jne    0x140019408
   1400193cb:	call   FWORD PTR [rsi-0x6500c18d]
   1400193d1:	jno    0x140019412
   1400193d3:	call   QWORD PTR [rbp-0x6e00bf91]
   1400193d9:	ins    DWORD PTR es:[rdi],dx
   1400193da:	dec    DWORD PTR [r11+rbp*2+0x6988ff42]
   1400193e2:	rex.XB inc DWORD PTR [r11+0x7fff4367]
   1400193e9:	rex.R dec DWORD PTR fs:[rbx-0x2100a58b]
   1400193f1:	xlat   BYTE PTR ds:[rbx]
   1400193f2:	sar    bh,1
   1400193f4:	jmp    0x17c0193f3
   1400193f9:	iret   
   1400193fa:	(bad)  
   1400193fb:	push   QWORD PTR [rdi]
   1400193fd:	int3   
   1400193fe:	(bad)  
   1400193ff:	push   QWORD PTR [rbx]
   140019401:	enter  0xffff,0x2e
   140019405:	(bad)  
   140019406:	(bad)  
   140019407:	jmp    FWORD PTR [rdx]
   140019409:	sar    edi,0xff
   14001940c:	(bad)  
   14001940d:	(bad)  
   14001940e:	(bad)  
   14001940f:	inc    DWORD PTR [rax]
	...
   14001941d:	add    BYTE PTR [rax],al
   14001941f:	sbb    ebx,edi
   140019421:	sti    
   140019422:	sti    
   140019423:	inc    edi
   140019425:	mov    edi,0x25252591
   14001942b:	xor    eax,0x8ecccccc
   140019430:	cmc    
   140019431:	cmc    
   140019432:	cmc    
   140019433:	dec    esp
   140019435:	int3   
   140019436:	int3   
   140019437:	push   rbp
   140019439:	cmc    
   14001943a:	cmc    
   14001943b:	call   rbp
   14001943d:	(bad)  
   14001943e:	(bad)  
   14001943f:	push   rdx
   140019441:	repnz repnz dec edx
   140019445:	retf   0xffca
   140019448:	out    0xe6,al
   14001944a:	out    0xff,al
   14001944c:	hlt    
   14001944d:	hlt    
   14001944e:	hlt    
   14001944f:	jmp    rdi
   140019451:	out    0xe7,eax
   140019453:	jmp    rax
   140019455:	loopne 0x140019437
   140019457:	jmp    rbp
   140019459:	in     eax,0xe5
   14001945b:	jmp    rsp
   14001945d:	in     al,0xe4
   14001945f:	jmp    rsp
   140019461:	in     al,0xe4
   140019463:	(bad)  
   140019464:	(bad)  
   140019465:	(bad)  
   140019466:	(bad)  
   140019467:	call   rsp
   140019469:	(bad)  
   14001946a:	(bad)  
   14001946b:	(bad)  
   14001946c:	(bad)  
   14001946d:	(bad)  
   14001946e:	(bad)  
   14001946f:	inc    ebx
   140019471:	mov    BYTE PTR [rsi],bh
   140019473:	(bad)  
   140019474:	mov    ebp,0xb8ff3882
   140019479:	cmp    BYTE PTR [rcx],0xff
   14001947c:	mov    ah,0x7d
   14001947e:	cmp    bh,bh
   140019480:	mov    al,0x7b
   140019482:	cmp    edi,edi
   140019484:	stos   DWORD PTR es:[rdi],eax
   140019485:	jns    0x1400194c3
   140019487:	jmp    QWORD PTR [rdi-0x5d00c389]
   14001948d:	jne    0x1400194cc
   14001948f:	call   FWORD PTR [rsi-0x6600c18d]
   140019495:	jno    0x1400194d6
   140019497:	call   QWORD PTR [rbp-0x6f00bf91]
   14001949d:	ins    DWORD PTR es:[rdi],dx
   14001949e:	dec    DWORD PTR [r10+rbp*2+0x6887ff42]
   1400194a6:	rex.XB inc DWORD PTR [r11+0x7eff4466]
   1400194ad:	rex.RB dec DWORD PTR fs:[r11-0xa58b]
   1400194b5:	(bad)  
   1400194b6:	(bad)  
   1400194b7:	(bad)  
   1400194b8:	(bad)  
   1400194b9:	sar    bh,cl
   1400194bb:	(bad)  
   1400194bc:	cmp    cl,dh
   1400194be:	(bad)  
   1400194bf:	push   QWORD PTR [rsi]
   1400194c1:	retf   
   1400194c2:	(bad)  
   1400194c3:	push   QWORD PTR [rdx]
   1400194c5:	enter  0xffff,0x35
   1400194c9:	(bad)  
   1400194cc:	(bad)  
   1400194cd:	(bad)  
   1400194ce:	push   rdi
	...
   1400194dc:	add    BYTE PTR [rax],al
   1400194de:	add    BYTE PTR [rcx],bl
   1400194e0:	cld    
   1400194e1:	cld    
   1400194e2:	cld    
   1400194e3:	(bad)  
   1400194e4:	clc    
   1400194e5:	clc    
   1400194e6:	clc    
   1400194e7:	push   rdi
   1400194e9:	div    edi
   1400194eb:	push   rdi
   1400194ed:	div    edi
   1400194ef:	jmp    FWORD PTR [rax-0x54005758]
   1400194f5:	stos   DWORD PTR es:[rdi],eax
   1400194f6:	stos   DWORD PTR es:[rdi],eax
   1400194f7:	push   rsi
   1400194f9:	div    dh
   1400194fb:	push   rsi
   1400194fd:	div    dh
   1400194ff:	push   rsi
   140019501:	div    dh
   140019503:	push   rbp
   140019505:	cmc    
   140019506:	cmc    
   140019507:	push   rbp
   140019509:	cmc    
   14001950a:	cmc    
   14001950b:	push   rbp
   14001950d:	cmc    
   14001950e:	cmc    
   14001950f:	push   rsp
   140019511:	hlt    
   140019512:	hlt    
   140019513:	push   rsp
   140019515:	hlt    
   140019516:	hlt    
   140019517:	push   rsp
   140019519:	hlt    
   14001951a:	hlt    
   14001951b:	push   rbx
   14001951d:	repz repz push rbx
   140019521:	repz repz push rbx
   140019525:	repz repz push rdx
   140019529:	repnz repnz (bad) 
   14001952c:	std    
   14001952d:	std    
   14001952e:	std    
   14001952f:	call   rax
   140019531:	sahf   
   140019532:	(bad)  
   140019533:	inc    ecx
   140019535:	xor    DWORD PTR [rdi],0xffffffff
   140019538:	mov    esp,0xb8ff3881
   14001953d:	jg     0x140019578
   14001953f:	push   QWORD PTR [rbx-0x5000c583]
   140019545:	jnp    0x140019582
   140019547:	jmp    FWORD PTR [rdx-0x5900c387]
   14001954d:	ja     0x14001958c
   14001954f:	jmp    QWORD PTR [rcx-0x6200c18b]
   140019555:	jb     0x140019595
   140019557:	call   FWORD PTR [rax-0x6b00c090]
   14001955d:	outs   dx,BYTE PTR ds:[rsi]
   14001955e:	rex dec DWORD PTR [rdi-0x7400be94]
   140019565:	push   0x42
   140019567:	inc    DWORD PTR [rsi-0x7d00bc98]
   14001956d:	data16 rex.R (bad) 
   140019570:	jge    0x1400195d6
   140019572:	rex.RB (bad) 
   140019574:	(bad)  
   140019575:	(bad)  
   140019576:	(bad)  
   140019577:	inc    DWORD PTR [rdx-0x2c]
   14001957a:	(bad)  
   14001957b:	(bad)  
   14001957c:	ds sar edi,1
   14001957f:	(bad)  
   140019580:	cmp    cl,dh
   140019582:	(bad)  
   140019583:	push   QWORD PTR [rip+0x5effffca]        # 0x19f019553
   140019589:	sar    edi,cl
   14001958b:	(bad)  
   14001958c:	(bad)  
   14001958d:	(bad)  
   14001958e:	dec    esi
	...
   14001959c:	add    BYTE PTR [rax],al
   14001959e:	add    BYTE PTR [rcx],bl
   1400195a0:	cld    
   1400195a1:	cld    
   1400195a2:	cld    
   1400195a3:	dec    edi
   1400195a5:	iret   
   1400195a6:	iret   
   1400195a7:	mov    WORD PTR [rip+0xffffffffdc223535],?        # 0x11c23cae2
   1400195ad:	(bad)  
   1400195af:	test   al,bh
   1400195b1:	clc    
   1400195b2:	clc    
   1400195b3:	inc    DWORD PTR [rsi-0x5300797a]
   1400195b9:	lods   al,BYTE PTR ds:[rsi]
   1400195ba:	lods   al,BYTE PTR ds:[rsi]
   1400195bb:	push   rdi
   1400195bd:	div    edi
   1400195bf:	push   rsi
   1400195c1:	div    dh
   1400195c3:	push   rsi
   1400195c5:	div    dh
   1400195c7:	push   rsi
   1400195c9:	div    dh
   1400195cb:	push   rbp
   1400195cd:	cmc    
   1400195ce:	cmc    
   1400195cf:	push   rbp
   1400195d1:	cmc    
   1400195d2:	cmc    
   1400195d3:	push   rbp
   1400195d5:	cmc    
   1400195d6:	cmc    
   1400195d7:	push   rsp
   1400195d9:	hlt    
   1400195da:	hlt    
   1400195db:	push   rsp
   1400195dd:	hlt    
   1400195de:	hlt    
   1400195df:	push   rsp
   1400195e1:	hlt    
   1400195e2:	hlt    
   1400195e3:	push   rsp
   1400195e5:	hlt    
   1400195e6:	hlt    
   1400195e7:	push   rbx
   1400195e9:	repz repz (bad) 
   1400195ec:	clc    
   1400195ed:	clc    
   1400195ee:	clc    
   1400195ef:	(bad)  
   1400195f0:	call   0x1030149c6
   1400195f5:	test   BYTE PTR [rdi],dh
   1400195f7:	inc    eax
   1400195f9:	xor    DWORD PTR [rdi],0xffffffff
   1400195fc:	mov    ebx,0xb7ff3881
   140019601:	jg     0x14001963c
   140019603:	push   QWORD PTR [rdx-0x5100c583]
   140019609:	jnp    0x140019646
   14001960b:	jmp    FWORD PTR [rcx-0x5a00c388]
   140019611:	jbe    0x140019650
   140019613:	jmp    QWORD PTR [rax-0x6300c18c]
   140019619:	jb     0x14001965a
   14001961b:	call   QWORD PTR [rdi-0x6c00bf90]
   140019621:	outs   dx,BYTE PTR ds:[rsi]
   140019622:	rex dec DWORD PTR [rsi-0x7500be94]
   140019629:	push   0x42
   14001962b:	inc    DWORD PTR [rbp-0x7e00bc99]
   140019631:	gs rex.R (bad) 
   140019634:	(bad)  
   140019635:	(bad)  
   140019636:	(bad)  
   140019637:	inc    DWORD PTR [rsi-0x29]
   14001963a:	(bad)  
   14001963b:	inc    DWORD PTR [rcx-0x2c]
   14001963e:	(bad)  
   14001963f:	(bad)  
   140019640:	cmp    eax,0x39ffffd0
   140019645:	int    0xff
   140019647:	push   QWORD PTR [rbx-0x15]
   14001964d:	(bad)  
   14001964e:	inc    DWORD PTR [rcx+0x0]
	...
   14001965c:	add    BYTE PTR [rax],al
   14001965e:	add    BYTE PTR [rcx],bl
   140019660:	cld    
   140019661:	cld    
   140019662:	cld    
   140019663:	jmp    QWORD PTR [rdx]
   140019665:	and    ah,BYTE PTR [rdx]
   140019667:	xor    al,0x0
   140019669:	add    BYTE PTR [rax],al
   14001966b:	(bad)  
   14001966c:	cmp    edi,DWORD PTR [rbx]
   14001966e:	cmp    esp,DWORD PTR [rsi]
   140019670:	clc    
   140019671:	clc    
   140019672:	clc    
   140019673:	push   rbp
   140019675:	cmc    
   140019676:	cmc    
   140019677:	dec    DWORD PTR [rax-0x53007778]
   14001967d:	lods   al,BYTE PTR ds:[rsi]
   14001967e:	lods   al,BYTE PTR ds:[rsi]
   14001967f:	push   rdi
   140019681:	div    edi
   140019683:	push   rdi
   140019685:	div    edi
   140019687:	push   rsi
   140019689:	div    dh
   14001968b:	push   rsi
   14001968d:	div    dh
   14001968f:	push   rsi
   140019691:	div    dh
   140019693:	push   rsi
   140019695:	div    dh
   140019697:	push   rbp
   140019699:	cmc    
   14001969a:	cmc    
   14001969b:	push   rbp
   14001969d:	cmc    
   14001969e:	cmc    
   14001969f:	push   rbp
   1400196a1:	cmc    
   1400196a2:	cmc    
   1400196a3:	push   rsp
   1400196a5:	hlt    
   1400196a6:	hlt    
   1400196a7:	push   rsp
   1400196a9:	hlt    
   1400196aa:	hlt    
   1400196ab:	push   rsp
   1400196ad:	hlt    
   1400196ae:	hlt    
   1400196af:	(bad)  
   1400196b0:	std    
   1400196b1:	std    
   1400196b2:	cld    
   1400196b3:	jmp    rcx
   1400196b5:	rcr    DWORD PTR [rdx+0x438cc5ff],0xff
   1400196bc:	mov    edi,0xbbff3883
   1400196c1:	cmp    BYTE PTR [rcx],0xff
   1400196c4:	mov    dh,0x7e
   1400196c6:	cmp    edi,edi
   1400196c8:	mov    dl,0x7c
   1400196ca:	cmp    bh,bh
   1400196cc:	lods   eax,DWORD PTR ds:[rsi]
   1400196cd:	jp     0x14001970a
   1400196cf:	jmp    FWORD PTR [rax-0x5b00c388]
   1400196d5:	jbe    0x140019714
   1400196d7:	jmp    QWORD PTR [rax-0x6400c18c]
   1400196dd:	jb     0x14001971e
   1400196df:	call   QWORD PTR [rdi-0x6d00bf90]
   1400196e5:	ins    DWORD PTR es:[rdi],dx
   1400196e6:	dec    DWORD PTR [r14-0x7600be95]
   1400196ed:	imul   eax,DWORD PTR [rdx-0x1],0xff436785
   1400196f4:	(bad)  
   1400196f5:	(bad)  
   1400196f6:	(bad)  
   1400196f7:	dec    DWORD PTR [rcx-0x26]
   1400196fa:	(bad)  
   1400196fb:	inc    DWORD PTR [rbp-0x2a]
   1400196fe:	(bad)  
   1400196ff:	dec    DWORD PTR [rsi+rdx*8-0x1]
   140019703:	call   FWORD PTR [rbp-0x1000019]
   140019709:	(bad)  
   14001970a:	dec    ebx
	...
   14001971c:	add    BYTE PTR [rax],al
   14001971e:	add    BYTE PTR [rcx],bl
   140019720:	std    
   140019721:	std    
   140019722:	std    
   140019723:	dec    ecx
   140019725:	leave  
   140019726:	leave  
   140019727:	xchg   ecx,eax
   140019728:	push   rcx
   140019729:	push   rcx
   14001972a:	push   rcx
   14001972b:	rex.WX outs dx,BYTE PTR ds:[rsi]
   14001972d:	outs   dx,BYTE PTR ds:[rsi]
   14001972e:	outs   dx,BYTE PTR ds:[rsi]
   14001972f:	retf   0xf7f7
   140019732:	idiv   edi
   140019734:	(bad)  
   140019735:	(bad)  
   140019736:	(bad)  
   140019737:	dec    esp
   140019739:	int3   
   14001973a:	int3   
   14001973b:	(bad)  
   14001973c:	jle    0x1400197bc
   14001973e:	jle    0x14001973f
   140019740:	lods   al,BYTE PTR ds:[rsi]
   140019741:	lods   al,BYTE PTR ds:[rsi]
   140019742:	lods   al,BYTE PTR ds:[rsi]
   140019743:	(bad)  
   140019744:	clc    
   140019745:	clc    
   140019746:	clc    
   140019747:	push   rdi
   140019749:	div    edi
   14001974b:	push   rdi
   14001974d:	div    edi
   14001974f:	push   rdi
   140019751:	div    edi
   140019753:	push   rsi
   140019755:	div    dh
   140019757:	push   rsi
   140019759:	div    dh
   14001975b:	push   rsi
   14001975d:	div    dh
   14001975f:	push   rbp
   140019761:	cmc    
   140019762:	cmc    
   140019763:	push   rbp
   140019765:	cmc    
   140019766:	cmc    
   140019767:	push   rbp
   140019769:	cmc    
   14001976a:	cmc    
   14001976b:	push   rsp
   14001976d:	hlt    
   14001976e:	hlt    
   14001976f:	push   rbp
   140019771:	cmc    
   140019772:	cmc    
   140019773:	(bad)  
   140019774:	sti    
   140019775:	sti    
   140019776:	sti    
   140019777:	(bad)  
   140019778:	(bad)  
   140019779:	(bad)  
   14001977a:	(bad)  
   14001977b:	(bad)  
   14001977c:	(bad)  
   14001977d:	(bad)  
   14001977e:	(bad)  
   14001977f:	(bad)  
   140019780:	(bad)  
   140019781:	(bad)  
   140019782:	(bad)  
   140019783:	(bad)  
   140019784:	(bad)  
   140019785:	(bad)  
   140019786:	(bad)  
   140019787:	(bad)  
   140019788:	(bad)  
   140019789:	(bad)  
   14001978a:	(bad)  
   14001978b:	(bad)  
   14001978c:	(bad)  
   14001978d:	(bad)  
   14001978e:	(bad)  
   14001978f:	(bad)  
   140019790:	(bad)  
   140019791:	(bad)  
   140019792:	(bad)  
   140019793:	(bad)  
   140019794:	(bad)  
   140019795:	(bad)  
   140019796:	(bad)  
   140019797:	(bad)  
   140019798:	(bad)  
   140019799:	(bad)  
   14001979a:	(bad)  
   14001979b:	call   rdi
   14001979d:	(bad)  
   14001979e:	scas   al,BYTE PTR es:[rdi]
   14001979f:	call   FWORD PTR [rdx-0x6900c08f]
   1400197a5:	outs   dx,DWORD PTR ds:[rsi]
   1400197a6:	rex call QWORD PTR [rcx-0x7200be93]
   1400197ad:	imul   eax,DWORD PTR [rdx-0x1],0xffffff88
   1400197b1:	imul   eax,DWORD PTR [rbx-0x1],0xffffffff
   1400197b8:	(bad)  
   1400197b9:	(bad)  
   1400197ba:	(bad)  
   1400197bb:	(bad)  
   1400197bc:	(bad)  
   1400197bd:	(bad)  
   1400197be:	(bad)  
   1400197bf:	(bad)  
   1400197c0:	(bad)  
   1400197c1:	(bad)  
   1400197c2:	push   rcx
   1400197c4:	(bad)  
   1400197c5:	(bad)  
   1400197c6:	call   FWORD PTR [rdx+0x0]
	...
   1400197dc:	add    BYTE PTR [rax],al
   1400197de:	add    BYTE PTR [rcx],bl
   1400197e0:	std    
   1400197e1:	std    
   1400197e2:	std    
   1400197e3:	push   rbx
   1400197e5:	repz repz dec DWORD PTR [rax+0x48]
   1400197ea:	rex.W jmp QWORD PTR [rdx]
   1400197ed:	and    ah,BYTE PTR [rdx]
   1400197ef:	jmp    FWORD PTR [rcx-0x5005657]
   1400197f5:	cli    
   1400197f6:	cli    
   1400197f7:	(bad)  
   1400197f8:	in     al,dx
   1400197f9:	in     al,dx
   1400197fa:	in     al,dx
   1400197fb:	dec    DWORD PTR [rcx+0x76ff8989]
   140019801:	jbe    0x140019879
   140019803:	jmp    FWORD PTR [rsp+rbp*4-0x7070054]
   14001980a:	clc    
   14001980b:	(bad)  
   14001980c:	clc    
   14001980d:	clc    
   14001980e:	clc    
   14001980f:	push   rdi
   140019811:	div    edi
   140019813:	push   rdi
   140019815:	div    edi
   140019817:	push   rdi
   140019819:	div    edi
   14001981b:	push   rsi
   14001981d:	div    dh
   14001981f:	push   rsi
   140019821:	div    dh
   140019823:	push   rsi
   140019825:	div    dh
   140019827:	push   rsi
   140019829:	div    dh
   14001982b:	push   rbp
   14001982d:	cmc    
   14001982e:	cmc    
   14001982f:	push   rbp
   140019831:	cmc    
   140019832:	cmc    
   140019833:	push   rbp
   140019835:	cmc    
   140019836:	cmc    
   140019837:	push   rsp
   140019839:	hlt    
   14001983a:	hlt    
   14001983b:	push   rsp
   14001983d:	hlt    
   14001983e:	hlt    
   14001983f:	push   rsp
   140019841:	hlt    
   140019842:	hlt    
   140019843:	(bad)  
   140019844:	(bad)  
   140019845:	(bad)  
   140019846:	(bad)  
   140019847:	(bad)  
   140019848:	mov    ecx,0xb4ff3980
   14001984d:	jle    0x140019889
   14001984f:	push   QWORD PTR [rax-0x5400c485]
   140019855:	jns    0x140019893
   140019857:	jmp    QWORD PTR [rdi-0x5d00c389]
   14001985d:	jne    0x14001989c
   14001985f:	call   FWORD PTR [rsi-0x6600c18d]
   140019865:	jno    0x1400198a6
   140019867:	call   QWORD PTR [rbp-0x6f00bf91]
   14001986d:	ins    DWORD PTR es:[rdi],dx
   14001986e:	dec    DWORD PTR [r11+rbp*2-0xbe]
   140019876:	(bad)  
   140019877:	inc    DWORD PTR [rax]
	...
   14001989d:	add    BYTE PTR [rax],al
   14001989f:	sbb    esi,edi
   1400198a1:	(bad)  
   1400198a2:	(bad)  
   1400198a3:	call   QWORD PTR [rax+0x3ac19090]
   1400198a9:	cmp    bh,BYTE PTR [rdx]
   1400198ab:	jmp    QWORD PTR [rdi]
   1400198ad:	(bad)  
   1400198ae:	(bad)  
   1400198af:	call   FWORD PTR [rdi+0x5f]
   1400198b2:	pop    rdi
   1400198b3:	jmp    QWORD PTR [rbp-0x6005a5b]
   1400198b9:	stc    
   1400198ba:	stc    
   1400198bb:	push   QWORD PTR [rbx+0x73]
   1400198be:	jae    0x1400198bf
   1400198c0:	je     0x140019936
   1400198c2:	je     0x1400198c3
   1400198c4:	mov    WORD PTR [rsp+rcx*4-0x57575701],cs
   1400198cb:	(bad)  
   1400198cc:	fstp   st(5)
   1400198ce:	(bad)  
   1400198d0:	in     eax,0xe5
   1400198d2:	in     eax,0xff
   1400198d4:	jmp    0x1390182c2
   1400198d9:	clc    
   1400198da:	clc    
   1400198db:	push   rdi
   1400198dd:	div    edi
   1400198df:	push   rdi
   1400198e1:	div    edi
   1400198e3:	push   rdi
   1400198e5:	div    edi
   1400198e7:	push   rsi
   1400198e9:	div    dh
   1400198eb:	push   rbp
   1400198ed:	cmc    
   1400198ee:	cmc    
   1400198ef:	(bad)  
   1400198f0:	(bad)  
   1400198f2:	fdiv   st(7),st
   1400198f4:	out    0xe6,al
   1400198f6:	out    0xff,al
   1400198f8:	jmp    0x1400198e5
   1400198fa:	jmp    0x1400198fb
   1400198fc:	(bad)  
   1400198fe:	fdivp  st(7),st
   140019900:	fcmovu st,st(2)
   140019902:	(bad)  
   140019904:	(bad)  
   140019905:	(bad)  
   140019906:	(bad)  
   140019907:	(bad)  
   140019908:	mov    esp,0xcfff3881
   14001990d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001990e:	jne    0x14001990f
   140019910:	cld    
   140019911:	cli    
   140019912:	idiv   edi
   140019914:	(bad)  
   140019915:	movabs ds:0x77a6ff3c79aaff76,eax
   14001991e:	cmp    eax,0x3d75a2ff
   140019923:	call   FWORD PTR [rbp-0x6600c18d]
   140019929:	jo     0x14001996a
   14001992b:	call   QWORD PTR [rsi+rbp*2+0x6c90ff40]
   140019932:	rex.B (bad) 
   140019934:	(bad)  
   140019935:	(bad)  
   140019936:	(bad)  
   140019937:	inc    DWORD PTR [rax]
	...
   140019951:	add    BYTE PTR [rax],al
   140019953:	add    BYTE PTR [rsp+rdi*4+0x38380fbc],bh
   14001995a:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   14001995e:	add    BYTE PTR [rcx],bl
   140019960:	(bad)  
   140019961:	(bad)  
   140019962:	(bad)  
   140019963:	jmp    FWORD PTR [rip+0x66362d2d]        # 0x1a637c696
   140019969:	data16 data16 outs dx,BYTE PTR ds:[rsi]
   14001996c:	fs fs fs jmp 0x140019996
   140019971:	and    eax,0x2222ff25
   140019976:	and    bh,bh
   140019978:	movabs ds:0x53ff4f4f4fffa2a2,al
   140019981:	push   rbx
   140019982:	push   rbx
   140019983:	dec    DWORD PTR [rbp-0x69007273]
   140019989:	xchg   esi,eax
   14001998a:	xchg   esi,eax
   14001998b:	call   QWORD PTR [rsp+rdx*4-0x2525006c]
   140019992:	(bad)  
   140019994:	ret    0xc2c2
   140019997:	push   rsi
   140019999:	div    dh
   14001999b:	(bad)  
   14001999c:	clc    
   14001999d:	clc    
   14001999e:	clc    
   14001999f:	call   rcx
   1400199a1:	rcl    ecx,1
   1400199a3:	call   rdi
   1400199a5:	xlat   BYTE PTR ds:[rbx]
   1400199a6:	xlat   BYTE PTR ds:[rbx]
   1400199a7:	push   rdi
   1400199a9:	div    edi
   1400199ab:	push   rdi
   1400199ad:	div    edi
   1400199af:	(bad)  
   1400199b0:	fcomp  st(0)
   1400199b2:	fdivr  st,st(7)
   1400199b4:	(bad)  
   1400199b6:	fdiv   st(7),st
   1400199b8:	(bad)  
   1400199b9:	(bad)  
   1400199ba:	(bad)  
   1400199bb:	dec    esi
   1400199bd:	(bad)  
   1400199be:	(bad)  
   1400199bf:	dec    ebx
   1400199c1:	retf   
   1400199c2:	retf   
   1400199c3:	(bad)  
   1400199c4:	(bad)  
   1400199c5:	(bad)  
   1400199c6:	(bad)  
   1400199c7:	inc    esp
   1400199c9:	mov    eax,DWORD PTR [rdi+rdi*8-0x2e]
   1400199cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400199ce:	jne    0x1400199cf
   1400199d0:	cld    
   1400199d1:	cli    
   1400199d2:	idiv   bh
   1400199d4:	retf   0x76a4
   1400199d7:	jmp    FWORD PTR [rsi-0x5500c485]
   1400199dd:	jns    0x140019a1b
   1400199df:	jmp    QWORD PTR [rbp-0x5e00c28a]
   1400199e5:	je     0x140019a25
   1400199e7:	call   FWORD PTR [rdx+rsi*2+0x7098ff3f]
   1400199ee:	(bad)  
   1400199ef:	call   FWORD PTR [rdx-0xb288]
   1400199f5:	(bad)  
   1400199f6:	push   rax
	...
   140019a18:	cmp    al,0x3c
   140019a1a:	cmp    al,0x89
   140019a1c:	rex.WRB
   140019a1d:	rex.WRB
   140019a1e:	rex.WRB cmp r13,0xffffffffccfffdfd
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	xchg   ecx,eax
   140019a28:	es es es xor eax,0xacb5b5b5
   140019a30:	cmp    edi,DWORD PTR [rbx]
   140019a32:	cmp    edi,edi
   140019a34:	cmp    al,0x3c
   140019a36:	cmp    al,0xff
   140019a38:	js     0x140019ab2
   140019a3a:	js     0x140019a3b
   140019a3c:	push   rcx
   140019a3d:	push   rcx
   140019a3e:	push   rcx
   140019a3f:	(bad)  
   140019a40:	cmp    edi,DWORD PTR [rbx]
   140019a42:	cmp    edi,edi
   140019a44:	rex.WXB
   140019a45:	rex.WXB
   140019a46:	rex.WXB push r8
   140019a49:	lock lock inc ebp
   140019a4d:	(bad)
   140019a50:	hlt    
   140019a51:	hlt    
   140019a52:	hlt    
   140019a53:	push   rsi
   140019a55:	div    dh
   140019a57:	push   rdi
   140019a59:	div    edi
   140019a5b:	(bad)  
   140019a5c:	stc    
   140019a5d:	stc    
   140019a5e:	stc    
   140019a5f:	(bad)  
   140019a60:	clc    
   140019a61:	clc    
   140019a62:	clc    
   140019a63:	(bad)  
   140019a64:	clc    
   140019a65:	clc    
   140019a66:	clc    
   140019a67:	(bad)  
   140019a68:	clc    
   140019a69:	clc    
   140019a6a:	clc    
   140019a6b:	push   rdi
   140019a6d:	div    edi
   140019a6f:	(bad)  
   140019a70:	fcmovu st,st(2)
   140019a72:	(bad)  
   140019a74:	in     al,dx
   140019a75:	in     al,dx
   140019a76:	in     al,dx
   140019a77:	(bad)  
   140019a78:	call   0x12f018365
   140019a7d:	out    dx,al
   140019a7e:	out    dx,al
   140019a7f:	jmp    rsi
   140019a81:	out    0xe6,al
   140019a83:	(bad)  
   140019a84:	sti    
   140019a85:	sti    
   140019a86:	sti    
   140019a87:	jmp    rcx
   140019a89:	rcr    DWORD PTR [rdx+0x3883bfff],0xff
   140019a90:	mov    ebx,0xb6ff3881
   140019a95:	jle    0x140019ad0
   140019a97:	push   QWORD PTR [rdx-0x5200c584]
   140019a9d:	jp     0x140019ada
   140019a9f:	jmp    FWORD PTR [rcx-0x5b00c388]
   140019aa5:	jbe    0x140019ae4
   140019aa7:	jmp    QWORD PTR [rax-0x6400c18c]
   140019aad:	jb     0x140019aee
   140019aaf:	dec    esp
   140019ab1:	mov    bh,0x9f
   140019ab3:	(bad)  
   140019ab4:	cld    
   140019ab5:	cld    
   140019ab6:	cld    
   140019ab7:	fwait
	...
   140019adc:	cmp    DWORD PTR [rcx],edi
   140019ade:	cmp    DWORD PTR [rcx+rbx*4-0x29006667],edx
   140019ae5:	(bad)  
   140019ae6:	(bad)  
   140019ae7:	push   rdi
   140019ae9:	div    edi
   140019aeb:	(bad)  
   140019aec:	std    
   140019aed:	std    
   140019aee:	std    
   140019aef:	dec    ecx
   140019af1:	leave  
   140019af2:	leave  
   140019af3:	inc    DWORD PTR [rax+0x56ff8080]
   140019af9:	push   rsi
   140019afa:	push   rsi
   140019afb:	jmp    QWORD PTR [rbx]
   140019afd:	and    esp,DWORD PTR [rbx]
   140019aff:	jmp    FWORD PTR [rcx]
   140019b01:	sub    DWORD PTR [rcx],ebp
   140019b03:	push   QWORD PTR [rsp+rsi*1]
   140019b06:	xor    al,0xff
   140019b08:	out    dx,al
   140019b09:	out    dx,al
   140019b0a:	out    dx,al
   140019b0b:	(bad)  
   140019b0c:	sti    
   140019b0d:	sti    
   140019b0e:	sti    
   140019b0f:	(bad)  
   140019b10:	cli    
   140019b11:	cli    
   140019b12:	cli    
   140019b13:	(bad)  
   140019b14:	cli    
   140019b15:	cli    
   140019b16:	cli    
   140019b17:	(bad)  
   140019b18:	cli    
   140019b19:	cli    
   140019b1a:	cli    
   140019b1b:	(bad)  
   140019b1c:	cli    
   140019b1d:	cli    
   140019b1e:	cli    
   140019b1f:	(bad)  
   140019b20:	stc    
   140019b21:	stc    
   140019b22:	stc    
   140019b23:	(bad)  
   140019b24:	stc    
   140019b25:	stc    
   140019b26:	stc    
   140019b27:	(bad)  
   140019b28:	stc    
   140019b29:	stc    
   140019b2a:	stc    
   140019b2b:	(bad)  
   140019b2c:	clc    
   140019b2d:	clc    
   140019b2e:	clc    
   140019b2f:	(bad)  
   140019b30:	clc    
   140019b31:	clc    
   140019b32:	clc    
   140019b33:	(bad)  
   140019b34:	clc    
   140019b35:	clc    
   140019b36:	clc    
   140019b37:	push   rdi
   140019b39:	div    edi
   140019b3b:	push   rdi
   140019b3d:	div    edi
   140019b3f:	push   rbp
   140019b41:	cmc    
   140019b42:	cmc    
   140019b43:	push   rdi
   140019b45:	div    edi
   140019b47:	(bad)  
   140019b48:	std    
   140019b49:	std    
   140019b4a:	std    
   140019b4b:	(bad)  
   140019b4c:	call   0x10e014f22
   140019b51:	popf   
   140019b52:	(bad)  
   140019b53:	(bad)  
   140019b54:	mov    esp,0xb5ff4085
   140019b59:	jle    0x140019b94
   140019b5b:	push   QWORD PTR [rcx-0x5300c584]
   140019b61:	jp     0x140019b9e
   140019b63:	jmp    FWORD PTR [rbx-0x4800bc83]
   140019b69:	xchg   ebx,eax
   140019b6a:	addr32 (bad) 
   140019b6c:	fcmovne st,st(3)
   140019b6e:	mov    dh,0xff
   140019b70:	div    ch
   140019b72:	cmc    
   140019b73:	ror    DWORD PTR [rbp+0x1c8d8d],cl
	...
   140019b9d:	add    BYTE PTR [rax],al
   140019b9f:	sbb    DWORD PTR [rax-0x7b006768],ebx
   140019ba5:	test   BYTE PTR [rbx+rsi*8-0x6e6e6f],al
   140019bac:	(bad)  
   140019bad:	(bad)  
   140019bae:	(bad)  
   140019baf:	cmc    
   140019bb0:	pop    rdx
   140019bb1:	pop    rdx
   140019bb2:	pop    rdx
   140019bb3:	jmp    FWORD PTR [rsp+rbp*2+0x6c]
   140019bb7:	(bad)  
   140019bb8:	cmp    edi,DWORD PTR [rbx]
   140019bba:	cmp    edi,edi
   140019bbc:	and    DWORD PTR [rcx],esp
   140019bbe:	and    edi,edi
   140019bc0:	and    ah,BYTE PTR [rdx]
   140019bc2:	and    bh,bh
   140019bc4:	sub    DWORD PTR [rcx],ebp
   140019bc6:	sub    edi,edi
   140019bc8:	pop    rdi
   140019bc9:	pop    rdi
   140019bca:	pop    rdi
   140019bcb:	call   rsi
   140019bcd:	(bad)  
   140019bce:	(bad)  
   140019bcf:	(bad)  
   140019bd0:	clc    
   140019bd1:	clc    
   140019bd2:	clc    
   140019bd3:	(bad)  
   140019bd4:	sti    
   140019bd5:	sti    
   140019bd6:	sti    
   140019bd7:	(bad)  
   140019bd8:	sti    
   140019bd9:	sti    
   140019bda:	sti    
   140019bdb:	(bad)  
   140019bdc:	cli    
   140019bdd:	cli    
   140019bde:	cli    
   140019bdf:	(bad)  
   140019be0:	cli    
   140019be1:	cli    
   140019be2:	cli    
   140019be3:	(bad)  
   140019be4:	cli    
   140019be5:	cli    
   140019be6:	cli    
   140019be7:	jmp    rdx
   140019be9:	loop   0x140019bcd
   140019beb:	(bad)  
   140019bec:	(bad)  
   140019bed:	(bad)  
   140019bee:	(bad)  
   140019bef:	(bad)  
   140019bf0:	jmp    0x140019bdd
   140019bf2:	jmp    0x140019bf3
   140019bf4:	out    0xe7,eax
   140019bf6:	out    0xff,eax
   140019bf8:	fstp   st(5)
   140019bfa:	(bad)  
   140019bfc:	loope  0x140019bdf
   140019bfe:	loope  0x140019bff
   140019c00:	mov    edi,0xebffbfbf
   140019c05:	jmp    0x140019bf2
   140019c07:	jmp    rbx
   140019c09:	jrcxz  0x140019bee
   140019c0b:	push   rsp
   140019c0d:	hlt    
   140019c0e:	hlt    
   140019c0f:	push   rdi
   140019c11:	div    edi
   140019c13:	(bad)  
   140019c14:	(bad)  
   140019c15:	(bad)  
   140019c16:	(bad)  
   140019c17:	(bad)  
   140019c18:	(bad)  
   140019c19:	(bad)  
   140019c1a:	(bad)  
   140019c1b:	(bad)  
   140019c1c:	(bad)  
   140019c1d:	(bad)  
   140019c1e:	(bad)  
   140019c1f:	(bad)  
   140019c20:	(bad)  
   140019c21:	(bad)  
   140019c22:	(bad)  
   140019c23:	(bad)  
   140019c24:	(bad)  
   140019c25:	(bad)  
   140019c26:	(bad)  
   140019c27:	stc    
   140019c28:	stc    
   140019c29:	stc    
   140019c2a:	stc    
   140019c2b:	fsubp  st(6),st
   140019c2d:	out    dx,al
   140019c2e:	out    dx,al
   140019c2f:	jmp    QWORD PTR [rsi]
   140019c31:	es xor al,BYTE PTR es:[rax]
   140019c35:	add    BYTE PTR [rax],al
   140019c37:	(bad)  
	...
   140019c5c:	add    BYTE PTR [rax],al
   140019c5e:	add    BYTE PTR [rcx],bl
   140019c60:	(bad)  
   140019c61:	(bad)  
   140019c62:	(bad)  
   140019c63:	(bad)  
   140019c64:	cmp    bh,BYTE PTR [rdx]
   140019c66:	cmp    ah,BYTE PTR [rax-0x208f8f90]
   140019c6c:	jnp    0x140019ce9
   140019c6e:	jnp    0x140019c6e
   140019c70:	pop    rdi
   140019c71:	pop    rdi
   140019c72:	pop    rdi
   140019c73:	call   QWORD PTR [rdi+0x57]
   140019c76:	push   rdi
   140019c77:	call   QWORD PTR [rdi+0x57]
   140019c7a:	push   rdi
   140019c7b:	(bad)  
   140019c7c:	cmp    bh,BYTE PTR [rdx]
   140019c7e:	cmp    bh,bh
   140019c80:	and    DWORD PTR [rcx],esp
   140019c82:	and    edi,edi
   140019c84:	and    ah,BYTE PTR [rdx]
   140019c86:	and    bh,bh
   140019c88:	sub    ch,BYTE PTR [rdx]
   140019c8a:	sub    bh,bh
   140019c8c:	ja     0x140019d05
   140019c8e:	ja     0x140019c8f
   140019c90:	out    dx,al
   140019c91:	out    dx,al
   140019c92:	out    dx,al
   140019c93:	(bad)  
   140019c94:	cld    
   140019c95:	cld    
   140019c96:	cld    
   140019c97:	call   rdi
   140019c99:	xlat   BYTE PTR ds:[rbx]
   140019c9a:	xlat   BYTE PTR ds:[rbx]
   140019c9b:	call   rax
   140019c9d:	rcl    al,1
   140019c9f:	(bad)  
   140019ca0:	sti    
   140019ca1:	sti    
   140019ca2:	sti    
   140019ca3:	(bad)  
   140019ca4:	cli    
   140019ca5:	cli    
   140019ca6:	cli    
   140019ca7:	(bad)  
   140019ca8:	fstp   st(5)
   140019caa:	(bad)  
   140019cac:	(bad)  
   140019cad:	(bad)  
   140019cae:	(bad)  
   140019caf:	dec    esi
   140019cb1:	(bad)  
   140019cb2:	(bad)  
   140019cb3:	call   rsi
   140019cb5:	(bad)  
   140019cb6:	(bad)  
   140019cb7:	dec    ebp
   140019cb9:	int    0xcd
   140019cbb:	call   rsi
   140019cbd:	(bad)  
   140019cbe:	(bad)  
   140019cbf:	(bad)  
   140019cc0:	fcomp  st(0)
   140019cc2:	fdivr  st,st(7)
   140019cc4:	rcl    ecx,1
   140019cc6:	sar    edi,1
   140019cc8:	(bad)  
   140019cc9:	(bad)  
   140019cca:	(bad)  
   140019ccb:	push   rdi
   140019ccd:	div    edi
   140019ccf:	push   rdi
   140019cd1:	div    edi
   140019cd3:	push   rdi
   140019cd5:	div    edi
   140019cd7:	push   rsi
   140019cd9:	div    dh
   140019cdb:	push   rdx
   140019cdd:	repnz bnd jmp QWORD PTR [rdx]
   140019ce1:	and    ah,BYTE PTR [rdx]
   140019ce3:	xor    al,0x0
   140019ce5:	add    BYTE PTR [rax],al
   140019ce7:	(bad)  
   140019ce8:	cmp    BYTE PTR [rax],bh
   140019cea:	cmp    BYTE PTR [rsi],ah
   140019cec:	fcmovnu st,st(3)
   140019cee:	(bad)  
   140019cf0:	add    BYTE PTR [rax],al
   140019cf2:	add    BYTE PTR [rax+rax*1],ch
   140019cf5:	add    BYTE PTR [rax],al
   140019cf7:	(bad)  
	...
   140019d1c:	add    BYTE PTR [rax],al
   140019d1e:	add    BYTE PTR [rcx],bl
   140019d20:	(bad)  
   140019d21:	(bad)  
   140019d22:	(bad)  
   140019d23:	dec    esp
   140019d25:	int3   
   140019d26:	int3   
   140019d27:	xchg   ecx,eax
   140019d28:	cmp    DWORD PTR [rcx],edi
   140019d2a:	cmp    DWORD PTR [rcx-0x2b7e7e7f],esp
   140019d30:	xchg   esi,eax
   140019d31:	xchg   esi,eax
   140019d32:	xchg   esi,eax
   140019d33:	dec    DWORD PTR [rdx+0x4a]
   140019d36:	rex.WX (bad) 
   140019d38:	jl     0x140019db6
   140019d3a:	jl     0x140019d3b
   140019d3c:	ins    BYTE PTR es:[rdi],dx
   140019d3d:	ins    BYTE PTR es:[rdi],dx
   140019d3e:	ins    BYTE PTR es:[rdi],dx
   140019d3f:	(bad)  
   140019d40:	cmp    bh,BYTE PTR [rdx]
   140019d42:	cmp    bh,bh
   140019d44:	and    ah,BYTE PTR [rdx]
   140019d46:	and    bh,bh
   140019d48:	rex.X
   140019d49:	rex.X
   140019d4a:	rex.X call FWORD PTR [rax+0x58]
   140019d4e:	pop    rax
   140019d4f:	(bad)  
   140019d50:	jl     0x140019dce
   140019d52:	jl     0x140019d53
   140019d54:	clc    
   140019d55:	clc    
   140019d56:	clc    
   140019d57:	(bad)  
   140019d58:	cld    
   140019d59:	cld    
   140019d5a:	cld    
   140019d5b:	(bad)  
   140019d5c:	cld    
   140019d5d:	cld    
   140019d5e:	cld    
   140019d5f:	(bad)  
   140019d60:	cld    
   140019d61:	cld    
   140019d62:	cld    
   140019d63:	(bad)  
   140019d64:	sti    
   140019d65:	sti    
   140019d66:	sti    
   140019d67:	jmp    rax
   140019d69:	loopne 0x140019d4b
   140019d6b:	(bad)  
   140019d6c:	out    dx,eax
   140019d6d:	out    dx,eax
   140019d6e:	out    dx,eax
   140019d6f:	(bad)  
   140019d70:	in     eax,dx
   140019d71:	in     eax,dx
   140019d72:	in     eax,dx
   140019d73:	push   rcx
   140019d75:	icebp  
   140019d76:	icebp  
   140019d77:	jmp    rsi
   140019d79:	out    0xe6,al
   140019d7b:	push   rdi
   140019d7d:	div    edi
   140019d7f:	jmp    rsi
   140019d81:	out    0xe6,al
   140019d83:	push   rbp
   140019d85:	cmc    
   140019d86:	cmc    
   140019d87:	(bad)  
   140019d88:	(bad)  
   140019d89:	(bad)  
   140019d8a:	(bad)  
   140019d8b:	(bad)  
   140019d8c:	clc    
   140019d8d:	clc    
   140019d8e:	clc    
   140019d8f:	(bad)  
   140019d90:	clc    
   140019d91:	clc    
   140019d92:	clc    
   140019d93:	push   rdi
   140019d95:	div    edi
   140019d97:	dec    edx
   140019d99:	retf   0xffca
   140019d9c:	out    dx,eax
   140019d9d:	out    dx,eax
   140019d9e:	out    dx,eax
   140019d9f:	(bad)  
   140019da0:	mov    esp,0x2492bcbc
   140019da5:	and    al,0x24
   140019da7:	ss mov ah,0xb4
   140019daa:	mov    ah,0x8f
   140019dac:	rcl    dl,cl
   140019dae:	sar    bh,cl
   140019db0:	add    BYTE PTR [rax],al
   140019db2:	add    BYTE PTR [rax+rax*1],ch
   140019db5:	add    BYTE PTR [rax],al
   140019db7:	(bad)  
	...
   140019ddc:	add    BYTE PTR [rax],al
   140019dde:	add    BYTE PTR [rcx],bl
   140019de0:	(bad)  
   140019de1:	(bad)  
   140019de2:	(bad)  
   140019de3:	(bad)  
   140019de4:	std    
   140019de5:	std    
   140019de6:	std    
   140019de7:	(bad)  
   140019de8:	std    
   140019de9:	std    
   140019dea:	std    
   140019deb:	call   FWORD PTR [rax-0x46006768]
   140019df1:	mov    ecx,0xfefeffb9
   140019df6:	(bad)  
   140019df7:	(bad)  
   140019df8:	cld    
   140019df9:	cld    
   140019dfa:	cld    
   140019dfb:	(bad)  
   140019dfc:	mov    eax,0x75ffb8b8
   140019e01:	jne    0x140019e78
   140019e03:	dec    DWORD PTR [rbx+0x4b]
   140019e06:	rex.WXB inc QWORD PTR [r11+0x43]
   140019e0a:	rex.XB inc DWORD PTR [r8+0x40]
   140019e0e:	rex jmp FWORD PTR [rsi]
   140019e11:	cs push QWORD PTR cs:[rdi+0x77]
   140019e16:	ja     0x140019e17
   140019e18:	cld    
   140019e19:	cld    
   140019e1a:	cld    
   140019e1b:	(bad)  
   140019e1c:	std    
   140019e1d:	std    
   140019e1e:	std    
   140019e1f:	(bad)  
   140019e20:	cld    
   140019e21:	cld    
   140019e22:	cld    
   140019e23:	(bad)  
   140019e24:	cld    
   140019e25:	cld    
   140019e26:	cld    
   140019e27:	(bad)  
   140019e28:	cld    
   140019e29:	cld    
   140019e2a:	cld    
   140019e2b:	(bad)  
   140019e2c:	sti    
   140019e2d:	sti    
   140019e2e:	sti    
   140019e2f:	(bad)  
   140019e30:	sti    
   140019e31:	sti    
   140019e32:	sti    
   140019e33:	(bad)  
   140019e34:	sti    
   140019e35:	sti    
   140019e36:	sti    
   140019e37:	(bad)  
   140019e38:	cli    
   140019e39:	cli    
   140019e3a:	cli    
   140019e3b:	(bad)  
   140019e3c:	cli    
   140019e3d:	cli    
   140019e3e:	cli    
   140019e3f:	(bad)  
   140019e40:	cli    
   140019e41:	cli    
   140019e42:	cli    
   140019e43:	(bad)  
   140019e44:	stc    
   140019e45:	stc    
   140019e46:	stc    
   140019e47:	(bad)  
   140019e48:	clc    
   140019e49:	clc    
   140019e4a:	clc    
   140019e4b:	(bad)  
   140019e4c:	stc    
   140019e4d:	stc    
   140019e4e:	stc    
   140019e4f:	(bad)  
   140019e50:	clc    
   140019e51:	clc    
   140019e52:	clc    
   140019e53:	push   rsp
   140019e55:	hlt    
   140019e56:	hlt    
   140019e57:	push   rax
   140019e59:	lock lock (bad) 
   140019e5c:	jmp    0x140019e49
   140019e5e:	jmp    0x140019e5f
   140019e60:	in     eax,0xe5
   140019e62:	in     eax,0xff
   140019e64:	fstp   st(5)
   140019e66:	(bad)  
   140019e68:	rcl    ebx,cl
   140019e6a:	sar    edi,cl
   140019e6c:	enter  0xc8c8,0xff
   140019e70:	add    BYTE PTR [rax],al
   140019e72:	add    BYTE PTR [rdx],ch
   140019e74:	add    BYTE PTR [rax],al
   140019e76:	add    BYTE PTR [rax+rax*1],cl
	...
   140019e9d:	add    BYTE PTR [rax],al
   140019e9f:	sbb    esi,edi
   140019ea1:	(bad)  
   140019ea2:	(bad)  
   140019ea3:	call   rdx
   140019ea5:	rcl    dl,cl
   140019ea7:	mov    WORD PTR [rsi],?
   140019ea9:	ss ss and ah,al
   140019ead:	loopne 0x140019e8f
   140019eaf:	test   BYTE PTR [rcx-0x42006667],bl
   140019eb5:	mov    ebp,0xfefeffbd
   140019eba:	(bad)  
   140019ebb:	(bad)  
   140019ebc:	out    dx,eax
   140019ebd:	out    dx,eax
   140019ebe:	out    dx,eax
   140019ebf:	(bad)  
   140019ec0:	mov    edx,0x84ffbaba
   140019ec5:	test   BYTE PTR [rdi+rdi*8-0xb4b4b5],al
   140019ecc:	(bad)  
   140019ecd:	(bad)  
   140019ece:	(bad)  
   140019ecf:	dec    DWORD PTR [rsp+rcx*2+0x4c]
   140019ed3:	call   QWORD PTR [rdi+0x57]
   140019ed6:	push   rdi
   140019ed7:	jmp    QWORD PTR [rsp+riz*4-0x202005c]
   140019ede:	std    
   140019edf:	push   rcx
   140019ee1:	icebp  
   140019ee2:	icebp  
   140019ee3:	(bad)  
   140019ee4:	in     eax,dx
   140019ee5:	in     eax,dx
   140019ee6:	in     eax,dx
   140019ee7:	(bad)  
   140019ee8:	std    
   140019ee9:	std    
   140019eea:	std    
   140019eeb:	(bad)  
   140019eec:	sti    
   140019eed:	sti    
   140019eee:	sti    
   140019eef:	jmp    rdx
   140019ef1:	loop   0x140019ed5
   140019ef3:	(bad)  
   140019ef4:	in     al,dx
   140019ef5:	in     al,dx
   140019ef6:	in     al,dx
   140019ef7:	push   rcx
   140019ef9:	icebp  
   140019efa:	icebp  
   140019efb:	jmp    rsp
   140019efd:	in     al,0xe4
   140019eff:	(bad)  
   140019f00:	fcomp  st(0)
   140019f02:	fdivr  st,st(7)
   140019f04:	iret   
   140019f05:	iret   
   140019f06:	iret   
   140019f07:	(bad)  
   140019f08:	mov    edi,0xe3ffbfbf
   140019f0d:	jrcxz  0x140019ef2
   140019f0f:	jmp    rcx
   140019f11:	loope  0x140019ef4
   140019f13:	(bad)  
   140019f14:	out    dx,eax
   140019f15:	out    dx,eax
   140019f16:	out    dx,eax
   140019f17:	inc    edx
   140019f19:	ret    0xffc2
   140019f1c:	in     eax,0xe5
   140019f1e:	in     eax,0xfe
   140019f20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f23:	test   BYTE PTR [rax],bl
   140019f25:	sbb    BYTE PTR [rax],bl
   140019f27:	rex xchg esi,eax
   140019f29:	xchg   esi,eax
   140019f2a:	xchg   esi,eax
   140019f2b:	movabs ds:0x24000000e8c4c4c4,al
   140019f34:	add    BYTE PTR [rax],al
   140019f36:	add    BYTE PTR [rdi],al
	...
   140019f5c:	add    BYTE PTR [rax],al
   140019f5e:	add    BYTE PTR [rcx],bl
   140019f60:	std    
   140019f61:	std    
   140019f62:	std    
   140019f63:	jmp    QWORD PTR [rdx]
   140019f65:	and    ah,BYTE PTR [rdx]
   140019f67:	xor    al,0x0
   140019f69:	add    BYTE PTR [rax],al
   140019f6b:	(bad)  
   140019f6c:	cmp    edi,DWORD PTR [rbx]
   140019f6e:	cmp    esp,DWORD PTR [rsi]
   140019f70:	cld    
   140019f71:	cld    
   140019f72:	cld    
   140019f73:	(bad)  
   140019f74:	std    
   140019f75:	std    
   140019f76:	std    
   140019f77:	(bad)  
   140019f78:	std    
   140019f79:	std    
   140019f7a:	std    
   140019f7b:	(bad)  
   140019f7c:	(bad)  
   140019f7e:	(bad)  
   140019f80:	loop   0x140019f64
   140019f82:	loop   0x140019f83
   140019f84:	mov    ah,0xb4
   140019f86:	mov    ah,0xff
   140019f88:	outs   dx,BYTE PTR ds:[rsi]
   140019f89:	outs   dx,BYTE PTR ds:[rsi]
   140019f8a:	outs   dx,BYTE PTR ds:[rsi]
   140019f8b:	jmp    QWORD PTR [rsi+0x66]
   140019f8e:	jmp    WORD PTR [rcx]
   140019f91:	and    DWORD PTR [rcx],esp
   140019f93:	jmp    QWORD PTR [rsp]
   140019f96:	and    al,0xff
   140019f98:	cmp    DWORD PTR [rcx],edi
   140019f9a:	cmp    edi,edi
   140019f9c:	retf   0xcaca
   140019f9f:	(bad)  
   140019fa0:	(bad)  
   140019fa2:	fdivp  st(7),st
   140019fa4:	cli    
   140019fa5:	cli    
   140019fa6:	cli    
   140019fa7:	(bad)  
   140019fa8:	std    
   140019fa9:	std    
   140019faa:	std    
   140019fab:	(bad)  
   140019fac:	std    
   140019fad:	std    
   140019fae:	std    
   140019faf:	(bad)  
   140019fb0:	(bad)  
   140019fb2:	fdivp  st(7),st
   140019fb4:	loop   0x140019f98
   140019fb6:	loop   0x140019fb7
   140019fb8:	fcmovu st,st(2)
   140019fba:	(bad)  
   140019fbc:	rcl    ebx,cl
   140019fbe:	sar    edi,cl
   140019fc0:	retf   
   140019fc1:	retf   
   140019fc2:	retf   
   140019fc3:	push   QWORD PTR [rdx-0x51004d4e]
   140019fc9:	scas   al,BYTE PTR es:[rdi]
   140019fca:	scas   al,BYTE PTR es:[rdi]
   140019fcb:	jmp    FWORD PTR [rax-0x50005758]
   140019fd1:	scas   eax,DWORD PTR es:[rdi]
   140019fd2:	scas   eax,DWORD PTR es:[rdi]
   140019fd3:	dec    edx
   140019fd5:	retf   0xffca
   140019fd8:	enter  0xc8c8,0xff
   140019fdc:	mov    ebp,0x34e8bdbd
   140019fe1:	xor    al,0x34
   140019fe3:	pop    rbp
   140019fe4:	je     0x14001a05a
   140019fe6:	je     0x14001a064
   140019fe8:	(bad)  
   140019fe9:	(bad)  
   140019fea:	(bad)
   140019fee:	enter  0x87,0x0
   140019ff2:	add    BYTE PTR [rdi],dl
   140019ff4:	add    BYTE PTR [rax],al
   140019ff6:	add    BYTE PTR [rcx],al
	...
   14001a01c:	add    BYTE PTR [rax],al
   14001a01e:	add    BYTE PTR [rcx],bl
   14001a020:	cld    
   14001a021:	cld    
   14001a022:	cld    
   14001a023:	dec    ecx
   14001a025:	leave  
   14001a026:	leave  
   14001a027:	xchg   ecx,eax
   14001a028:	es es es xor eax,0x8ed0d0d0
   14001a030:	cld    
   14001a031:	cld    
   14001a032:	cld    
   14001a033:	call   rcx
   14001a035:	rcl    ecx,1
   14001a037:	(bad)  
   14001a038:	cld    
   14001a039:	cld    
   14001a03a:	cld    
   14001a03b:	(bad)  
   14001a03c:	(bad)  
   14001a03e:	fdivp  st(7),st
   14001a040:	clc    
   14001a041:	clc    
   14001a042:	clc    
   14001a043:	(bad)  
   14001a044:	out    dx,al
   14001a045:	out    dx,al
   14001a046:	out    dx,al
   14001a047:	(bad)  
   14001a048:	mov    esp,0x76ffbcbc
   14001a04d:	jbe    0x14001a0c5
   14001a04f:	jmp    FWORD PTR [rbp+0x6d]
   14001a052:	ins    DWORD PTR es:[rdi],dx
   14001a053:	call   QWORD PTR [rsi+0x56]
   14001a056:	push   rsi
   14001a057:	(bad)  
   14001a058:	jnp    0x14001a0d5
   14001a05a:	jnp    0x14001a05b
   14001a05c:	rex.WRXB
   14001a05d:	rex.WRXB
   14001a05e:	rex.WRXB jmp r15
   14001a061:	out    0xe7,eax
   14001a063:	push   rbp
   14001a065:	cmc    
   14001a066:	cmc    
   14001a067:	(bad)  
   14001a068:	(bad)  
   14001a069:	(bad)  
   14001a06a:	(bad)  
   14001a06b:	(bad)  
   14001a06c:	std    
   14001a06d:	std    
   14001a06e:	std    
   14001a06f:	jmp    rax
   14001a071:	loopne 0x14001a053
   14001a073:	push   rdx
   14001a075:	repnz repnz (bad) 
   14001a078:	in     eax,dx
   14001a079:	in     eax,dx
   14001a07a:	in     eax,dx
   14001a07b:	push   rsp
   14001a07d:	hlt    
   14001a07e:	hlt    
   14001a07f:	jmp    rsp
   14001a081:	in     al,0xe4
   14001a083:	dec    ecx
   14001a085:	leave  
   14001a086:	leave  
   14001a087:	(bad)  
   14001a088:	(bad)  
   14001a089:	(bad)  
   14001a08a:	(bad)  
   14001a08b:	(bad)  
   14001a08c:	(bad)  
   14001a08d:	(bad)  
   14001a08e:	(bad)  
   14001a08f:	(bad)  
   14001a090:	(bad)  
   14001a091:	(bad)  
   14001a092:	(bad)  
   14001a093:	(bad)  
   14001a094:	(bad)  
   14001a095:	(bad)  
   14001a096:	(bad)  
   14001a097:	(bad)  
   14001a098:	clc    
   14001a099:	clc    
   14001a09a:	clc    
   14001a09b:	push   rcx
   14001a09d:	icebp  
   14001a09e:	icebp  
   14001a09f:	jmp    rcx
   14001a0a1:	loope  0x14001a084
   14001a0a3:	(bad)  
   14001a0a4:	jmp    0x11b018a92
   14001a0a9:	fcmovu st,st(2)
   14001a0ab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a0ac:	add    BYTE PTR [rax],al
   14001a0ae:	add    BYTE PTR [rax+rax*1],bl
   14001a0b1:	add    BYTE PTR [rax],al
   14001a0b3:	add    eax,0x0
	...
   14001a0dc:	add    BYTE PTR [rax],al
   14001a0de:	add    BYTE PTR [rcx],bl
   14001a0e0:	cld    
   14001a0e1:	cld    
   14001a0e2:	cld    
   14001a0e3:	(bad)  
   14001a0e4:	cli    
   14001a0e5:	cli    
   14001a0e6:	cli    
   14001a0e7:	(bad)  
   14001a0e8:	cli    
   14001a0e9:	cli    
   14001a0ea:	cli    
   14001a0eb:	(bad)  
   14001a0ec:	cli    
   14001a0ed:	cli    
   14001a0ee:	cli    
   14001a0ef:	(bad)  
   14001a0f0:	sti    
   14001a0f1:	sti    
   14001a0f2:	sti    
   14001a0f3:	(bad)  
   14001a0f4:	sti    
   14001a0f5:	sti    
   14001a0f6:	sti    
   14001a0f7:	(bad)  
   14001a0f8:	sti    
   14001a0f9:	sti    
   14001a0fa:	sti    
   14001a0fb:	(bad)  
   14001a0fc:	cld    
   14001a0fd:	cld    
   14001a0fe:	cld    
   14001a0ff:	(bad)  
   14001a100:	cld    
   14001a101:	cld    
   14001a102:	cld    
   14001a103:	(bad)  
   14001a104:	cld    
   14001a105:	cld    
   14001a106:	cld    
   14001a107:	(bad)  
   14001a108:	std    
   14001a109:	std    
   14001a10a:	std    
   14001a10b:	call   rcx
   14001a10d:	rcl    ecx,1
   14001a10f:	jmp    QWORD PTR [rcx+0x61]
   14001a112:	(bad)  
   14001a113:	inc    DWORD PTR [rbx+0x43]
   14001a116:	rex.XB inc DWORD PTR [r15+0x70ff8787]
   14001a11d:	jo     0x14001a18f
   14001a11f:	jmp    QWORD PTR [rdx-0x5d5e]
   14001a125:	(bad)  
   14001a126:	(bad)  
   14001a127:	(bad)  
   14001a128:	(bad)  
   14001a129:	(bad)  
   14001a12a:	(bad)  
   14001a12b:	(bad)  
   14001a12c:	(bad)  
   14001a12d:	(bad)  
   14001a12e:	(bad)  
   14001a12f:	(bad)  
   14001a130:	(bad)  
   14001a131:	(bad)  
   14001a132:	(bad)  
   14001a133:	(bad)  
   14001a134:	(bad)  
   14001a135:	(bad)  
   14001a136:	(bad)  
   14001a137:	(bad)  
   14001a138:	(bad)  
   14001a139:	(bad)  
   14001a13a:	(bad)  
   14001a13b:	(bad)  
   14001a13c:	std    
   14001a13d:	std    
   14001a13e:	std    
   14001a13f:	push   rsi
   14001a141:	div    dh
   14001a143:	dec    ebp
   14001a145:	int    0xcd
   14001a147:	(bad)  
   14001a148:	(bad)  
   14001a149:	(bad)  
   14001a14a:	(bad)  
   14001a14b:	jmp    rbx
   14001a14d:	jrcxz  0x14001a132
   14001a14f:	call   rbp
   14001a151:	(bad)  
   14001a152:	(bad)  
   14001a153:	call   rbp
   14001a155:	(bad)  
   14001a156:	(bad)  
   14001a157:	push   rcx
   14001a159:	icebp  
   14001a15a:	icebp  
   14001a15b:	dec    ecx
   14001a15d:	leave  
   14001a15e:	leave  
   14001a15f:	call   FWORD PTR [rdi-0x4c006061]
   14001a165:	mov    bl,0xb3
   14001a167:	movabs al,ds:0x50000001c020202
	...
   14001a19c:	add    BYTE PTR [rax],al
   14001a19e:	add    BYTE PTR [rcx],bl
   14001a1a0:	cld    
   14001a1a1:	cld    
   14001a1a2:	cld    
   14001a1a3:	dec    edi
   14001a1a5:	iret   
   14001a1a6:	iret   
   14001a1a7:	mov    WORD PTR [rip+0xffffffffde223535],?        # 0x11e23d6e2
   14001a1ad:	(bad)  
   14001a1af:	test   dl,bh
   14001a1b1:	cli    
   14001a1b2:	cli    
   14001a1b3:	call   rax
   14001a1b5:	rcl    al,1
   14001a1b7:	(bad)  
   14001a1b8:	sti    
   14001a1b9:	sti    
   14001a1ba:	sti    
   14001a1bb:	(bad)  
   14001a1bc:	sti    
   14001a1bd:	sti    
   14001a1be:	sti    
   14001a1bf:	(bad)  
   14001a1c0:	sti    
   14001a1c1:	sti    
   14001a1c2:	sti    
   14001a1c3:	(bad)  
   14001a1c4:	cld    
   14001a1c5:	cld    
   14001a1c6:	cld    
   14001a1c7:	(bad)  
   14001a1c8:	cld    
   14001a1c9:	cld    
   14001a1ca:	cld    
   14001a1cb:	(bad)  
   14001a1cc:	cld    
   14001a1cd:	cld    
   14001a1ce:	cld    
   14001a1cf:	jmp    rdi
   14001a1d1:	out    0xe7,eax
   14001a1d3:	(bad)  
   14001a1d4:	jl     0x14001a252
   14001a1d6:	jl     0x14001a1d7
   14001a1d8:	rex.WRB
   14001a1d9:	rex.WRB
   14001a1da:	rex.WRB inc QWORD PTR [r14+0x66ff8686]
   14001a1e1:	data16 data16 (bad) 
   14001a1e4:	call   0x13f018ad1
   14001a1e9:	(bad)  
   14001a1ea:	(bad)  
   14001a1eb:	(bad)  
   14001a1ec:	(bad)  
   14001a1ed:	(bad)  
   14001a1ee:	(bad)  
   14001a1ef:	(bad)  
   14001a1f0:	(bad)  
   14001a1f1:	(bad)  
   14001a1f2:	(bad)  
   14001a1f3:	(bad)  
   14001a1f4:	(bad)  
   14001a1f5:	(bad)  
   14001a1f6:	(bad)  
   14001a1f7:	(bad)  
   14001a1f8:	(bad)  
   14001a1f9:	(bad)  
   14001a1fa:	(bad)  
   14001a1fb:	(bad)  
   14001a1fc:	std    
   14001a1fd:	std    
   14001a1fe:	std    
   14001a1ff:	push   rbp
   14001a201:	cmc    
   14001a202:	cmc    
   14001a203:	dec    ebx
   14001a205:	retf   
   14001a206:	retf   
   14001a207:	(bad)  
   14001a208:	(bad)  
   14001a209:	(bad)  
   14001a20a:	(bad)  
   14001a20b:	inc    eax
   14001a20d:	rol    al,0xff
   14001a210:	ret    0xc2c2
   14001a213:	jmp    FWORD PTR [rsi-0x16005152]
   14001a219:	jmp    0xe4a6a207
   14001a21e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a21f:	call   FWORD PTR [rax+0x989898]
   14001a225:	add    BYTE PTR [rax],al
   14001a227:	sbb    al,0x0
   14001a229:	add    BYTE PTR [rax],al
   14001a22b:	add    eax,0x0
	...
   14001a25c:	add    BYTE PTR [rax],al
   14001a25e:	add    BYTE PTR [rcx],bl
   14001a260:	cld    
   14001a261:	cld    
   14001a262:	cld    
   14001a263:	jmp    QWORD PTR [rdx]
   14001a265:	and    ah,BYTE PTR [rdx]
   14001a267:	xor    al,0x0
   14001a269:	add    BYTE PTR [rax],al
   14001a26b:	(bad)  
   14001a26c:	cmp    edi,DWORD PTR [rbx]
   14001a26e:	cmp    esp,DWORD PTR [rsi]
   14001a270:	stc    
   14001a271:	stc    
   14001a272:	stc    
   14001a273:	(bad)  
   14001a274:	cli    
   14001a275:	cli    
   14001a276:	cli    
   14001a277:	(bad)  
   14001a278:	cli    
   14001a279:	cli    
   14001a27a:	cli    
   14001a27b:	(bad)  
   14001a27c:	cli    
   14001a27d:	cli    
   14001a27e:	cli    
   14001a27f:	(bad)  
   14001a280:	cli    
   14001a281:	cli    
   14001a282:	cli    
   14001a283:	(bad)  
   14001a284:	sti    
   14001a285:	sti    
   14001a286:	sti    
   14001a287:	(bad)  
   14001a288:	sti    
   14001a289:	sti    
   14001a28a:	sti    
   14001a28b:	(bad)  
   14001a28c:	sti    
   14001a28d:	sti    
   14001a28e:	sti    
   14001a28f:	(bad)  
   14001a290:	cld    
   14001a291:	cld    
   14001a292:	cld    
   14001a293:	(bad)  
   14001a294:	sti    
   14001a295:	sti    
   14001a296:	sti    
   14001a297:	inc    ebx
   14001a299:	ret    
   14001a29a:	ret    
   14001a29b:	call   FWORD PTR [rsp+rbx*2+0x5c]
   14001a29f:	call   QWORD PTR [rdi-0x4d006869]
   14001a2a5:	mov    dl,0xb2
   14001a2a7:	(bad)  
   14001a2a8:	(bad)  
   14001a2a9:	(bad)  
   14001a2aa:	(bad)  
   14001a2ab:	(bad)  
   14001a2ac:	(bad)  
   14001a2ad:	(bad)  
   14001a2ae:	(bad)  
   14001a2af:	(bad)  
   14001a2b0:	(bad)  
   14001a2b1:	(bad)  
   14001a2b2:	(bad)  
   14001a2b3:	(bad)  
   14001a2b4:	(bad)  
   14001a2b5:	(bad)  
   14001a2b6:	(bad)  
   14001a2b7:	(bad)  
   14001a2b8:	(bad)  
   14001a2b9:	(bad)  
   14001a2ba:	(bad)  
   14001a2bb:	(bad)  
   14001a2bc:	sti    
   14001a2bd:	sti    
   14001a2be:	sti    
   14001a2bf:	push   rdx
   14001a2c1:	repnz repnz dec eax
   14001a2c5:	enter  0xffc8,0xfe
   14001a2c9:	(bad)  
   14001a2ca:	(bad)  
   14001a2cb:	call   rsp
   14001a2cd:	(bad)  
   14001a2ce:	(bad)  
   14001a2cf:	jmp    FWORD PTR [rsi-0x3d005152]
   14001a2d5:	ret    0xffc2
   14001a2d8:	(bad)  
   14001a2d9:	(bad)  
   14001a2da:	(bad)  
   14001a2db:	jmp    FWORD PTR [rsp+rbp*4+0x9dac]
   14001a2e2:	add    BYTE PTR [rax+rax*1],bl
   14001a2e5:	add    BYTE PTR [rax],al
   14001a2e7:	add    eax,0x0
	...
   14001a31c:	add    BYTE PTR [rax],al
   14001a31e:	add    BYTE PTR [rcx],bl
   14001a320:	sti    
   14001a321:	sti    
   14001a322:	sti    
   14001a323:	inc    edi
   14001a325:	mov    edi,0x25252591
   14001a32b:	xor    eax,0x8ececece
   14001a330:	clc    
   14001a331:	clc    
   14001a332:	clc    
   14001a333:	dec    esi
   14001a335:	(bad)  
   14001a336:	(bad)  
   14001a337:	(bad)  
   14001a338:	stc    
   14001a339:	stc    
   14001a33a:	stc    
   14001a33b:	(bad)  
   14001a33c:	fcmovu st,st(2)
   14001a33e:	(bad)  
   14001a340:	jmp    0x110018d2e
   14001a345:	iret   
   14001a346:	iret   
   14001a347:	(bad)  
   14001a348:	jmp    0x14001a335
   14001a34a:	jmp    0x14001a34b
   14001a34c:	(bad)  
   14001a34d:	(bad)  
   14001a34e:	(bad)  
   14001a34f:	(bad)  
   14001a350:	sti    
   14001a351:	sti    
   14001a352:	sti    
   14001a353:	(bad)  
   14001a354:	sti    
   14001a355:	sti    
   14001a356:	sti    
   14001a357:	(bad)  
   14001a358:	cld    
   14001a359:	cld    
   14001a35a:	cld    
   14001a35b:	push   rbp
   14001a35d:	cmc    
   14001a35e:	cmc    
   14001a35f:	push   QWORD PTR [rsi-0x6500494a]
   14001a365:	(bad)  
   14001a366:	(bad)  
   14001a367:	(bad)  
   14001a368:	clc    
   14001a369:	clc    
   14001a36a:	clc    
   14001a36b:	(bad)  
   14001a36c:	std    
   14001a36d:	std    
   14001a36e:	std    
   14001a36f:	(bad)  
   14001a370:	std    
   14001a371:	std    
   14001a372:	std    
   14001a373:	(bad)  
   14001a374:	std    
   14001a375:	std    
   14001a376:	std    
   14001a377:	(bad)  
   14001a378:	cli    
   14001a379:	cli    
   14001a37a:	cli    
   14001a37b:	push   rsi
   14001a37d:	div    dh
   14001a37f:	(bad)  
   14001a380:	out    dx,al
   14001a381:	out    dx,al
   14001a382:	out    dx,al
   14001a383:	inc    ebp
   14001a385:	(bad)
   14001a388:	cli    
   14001a389:	cli    
   14001a38a:	cli    
   14001a38b:	push   rcx
   14001a38d:	icebp  
   14001a38e:	icebp  
   14001a38f:	(bad)  
   14001a390:	jmp    0x12b018d7e
   14001a395:	(bad)  
   14001a396:	(bad)  
   14001a397:	(bad)  
   14001a398:	fstp   st(5)
   14001a39a:	frstor [rdi+0x1c030303]
   14001a3a0:	add    BYTE PTR [rax],al
   14001a3a2:	add    BYTE PTR [rip+0x0],al        # 0x14001a3a8
	...
   14001a3dc:	add    BYTE PTR [rax],al
   14001a3de:	add    BYTE PTR [rcx],bl
   14001a3e0:	sti    
   14001a3e1:	sti    
   14001a3e2:	sti    
   14001a3e3:	push   rdi
   14001a3e5:	div    edi
   14001a3e7:	push   rdi
   14001a3e9:	div    edi
   14001a3eb:	push   rdi
   14001a3ed:	div    edi
   14001a3ef:	(bad)  
   14001a3f0:	clc    
   14001a3f1:	clc    
   14001a3f2:	clc    
   14001a3f3:	(bad)  
   14001a3f4:	clc    
   14001a3f5:	clc    
   14001a3f6:	clc    
   14001a3f7:	(bad)  
   14001a3f8:	clc    
   14001a3f9:	clc    
   14001a3fa:	clc    
   14001a3fb:	(bad)  
   14001a3fc:	stc    
   14001a3fd:	stc    
   14001a3fe:	stc    
   14001a3ff:	(bad)  
   14001a400:	stc    
   14001a401:	stc    
   14001a402:	stc    
   14001a403:	(bad)  
   14001a404:	stc    
   14001a405:	stc    
   14001a406:	stc    
   14001a407:	(bad)  
   14001a408:	cli    
   14001a409:	cli    
   14001a40a:	cli    
   14001a40b:	(bad)  
   14001a40c:	cli    
   14001a40d:	cli    
   14001a40e:	cli    
   14001a40f:	(bad)  
   14001a410:	cli    
   14001a411:	cli    
   14001a412:	cli    
   14001a413:	(bad)  
   14001a414:	cli    
   14001a415:	cli    
   14001a416:	cli    
   14001a417:	(bad)  
   14001a418:	sti    
   14001a419:	sti    
   14001a41a:	sti    
   14001a41b:	(bad)  
   14001a41c:	sti    
   14001a41d:	sti    
   14001a41e:	sti    
   14001a41f:	(bad)  
   14001a420:	sti    
   14001a421:	sti    
   14001a422:	sti    
   14001a423:	(bad)  
   14001a424:	sti    
   14001a425:	sti    
   14001a426:	sti    
   14001a427:	jmp    QWORD PTR [rax-0x8005f60]
   14001a42d:	div    edi
   14001a42f:	(bad)  
   14001a430:	cld    
   14001a431:	cld    
   14001a432:	cld    
   14001a433:	(bad)  
   14001a434:	stc    
   14001a435:	stc    
   14001a436:	stc    
   14001a437:	push   rbp
   14001a439:	cmc    
   14001a43a:	cmc    
   14001a43b:	push   rcx
   14001a43d:	icebp  
   14001a43e:	icebp  
   14001a43f:	(bad)  
   14001a440:	call   0x100018d2d
   14001a445:	mov    edi,0xf6f6ffbf
   14001a44a:	idiv   bh
   14001a44c:	jmp    0x12b018e3a
   14001a451:	(bad)  
   14001a452:	(bad)  
   14001a453:	(bad)  
   14001a454:	(bad)  
   14001a456:	fsub   QWORD PTR [rsi+0x1c020202]
   14001a45c:	add    BYTE PTR [rax],al
   14001a45e:	add    BYTE PTR [rip+0x0],al        # 0x14001a464
	...
   14001a49c:	add    BYTE PTR [rax],al
   14001a49e:	add    BYTE PTR [rcx],bl
   14001a4a0:	cli    
   14001a4a1:	cli    
   14001a4a2:	cli    
   14001a4a3:	dec    ebp
   14001a4a5:	int    0xcd
   14001a4a7:	mov    WORD PTR [rip+0xffffffffdb223535],?        # 0x11b23d9e2
   14001a4ad:	fcmovnu st,st(3)
   14001a4af:	test   bh,dh
   14001a4b1:	div    edi
   14001a4b3:	dec    esi
   14001a4b5:	(bad)  
   14001a4b6:	(bad)  
   14001a4b7:	push   rdi
   14001a4b9:	div    edi
   14001a4bb:	(bad)  
   14001a4bc:	clc    
   14001a4bd:	clc    
   14001a4be:	clc    
   14001a4bf:	(bad)  
   14001a4c0:	clc    
   14001a4c1:	clc    
   14001a4c2:	clc    
   14001a4c3:	(bad)  
   14001a4c4:	clc    
   14001a4c5:	clc    
   14001a4c6:	clc    
   14001a4c7:	(bad)  
   14001a4c8:	stc    
   14001a4c9:	stc    
   14001a4ca:	stc    
   14001a4cb:	(bad)  
   14001a4cc:	stc    
   14001a4cd:	stc    
   14001a4ce:	stc    
   14001a4cf:	(bad)  
   14001a4d0:	stc    
   14001a4d1:	stc    
   14001a4d2:	stc    
   14001a4d3:	(bad)  
   14001a4d4:	out    dx,al
   14001a4d5:	out    dx,al
   14001a4d6:	out    dx,al
   14001a4d7:	(bad)  
   14001a4d8:	in     eax,dx
   14001a4d9:	in     eax,dx
   14001a4da:	in     eax,dx
   14001a4db:	jmp    rdi
   14001a4dd:	out    0xe7,eax
   14001a4df:	jmp    rdi
   14001a4e1:	out    0xe7,eax
   14001a4e3:	(bad)  
   14001a4e4:	jmp    0x14001a4d1
   14001a4e6:	jmp    0x14001a4e7
   14001a4e8:	out    dx,al
   14001a4e9:	out    dx,al
   14001a4ea:	out    dx,al
   14001a4eb:	call   FWORD PTR [rdx-0x1d006566]
   14001a4f1:	loop   0x14001a4d5
   14001a4f3:	jmp    rbx
   14001a4f5:	jrcxz  0x14001a4da
   14001a4f7:	dec    edi
   14001a4f9:	iret   
   14001a4fa:	iret   
   14001a4fb:	jmp    rax
   14001a4fd:	loopne 0x14001a4df
   14001a4ff:	inc    esp
   14001a501:	(bad)  
   14001a502:	(bad)  
   14001a503:	(bad)  
   14001a504:	mov    ebx,0xf1ffbbbb
   14001a509:	icebp  
   14001a50a:	icebp  
   14001a50b:	(bad)  
   14001a50c:	(bad)  
   14001a50d:	(bad)  
   14001a50e:	(bad)  
   14001a50f:	(bad)  
   14001a510:	fcmovnu st,st(3)
   14001a512:	(bad)  [rbp+0x1c000000]
   14001a518:	add    BYTE PTR [rax],al
   14001a51a:	add    BYTE PTR [rip+0x0],al        # 0x14001a520
	...
   14001a55c:	add    BYTE PTR [rax],al
   14001a55e:	add    BYTE PTR [rcx],bl
   14001a560:	cli    
   14001a561:	cli    
   14001a562:	cli    
   14001a563:	jmp    QWORD PTR [rdx]
   14001a565:	and    ah,BYTE PTR [rdx]
   14001a567:	xor    al,0x0
   14001a569:	add    BYTE PTR [rax],al
   14001a56b:	(bad)  
   14001a56c:	cmp    bh,BYTE PTR [rdx]
   14001a56e:	cmp    ah,BYTE PTR [rsi]
   14001a570:	div    dh
   14001a572:	idiv   bh
   14001a574:	div    dh
   14001a576:	idiv   bh
   14001a578:	div    edi
   14001a57a:	idiv   edi
   14001a57c:	div    edi
   14001a57e:	idiv   edi
   14001a580:	div    edi
   14001a582:	idiv   edi
   14001a584:	clc    
   14001a585:	clc    
   14001a586:	clc    
   14001a587:	(bad)  
   14001a588:	clc    
   14001a589:	clc    
   14001a58a:	clc    
   14001a58b:	(bad)  
   14001a58c:	clc    
   14001a58d:	clc    
   14001a58e:	clc    
   14001a58f:	(bad)  
   14001a590:	stc    
   14001a591:	stc    
   14001a592:	stc    
   14001a593:	(bad)  
   14001a594:	(bad)  
   14001a596:	fdiv   st(7),st
   14001a598:	xlat   BYTE PTR ds:[rbx]
   14001a599:	xlat   BYTE PTR ds:[rbx]
   14001a59a:	xlat   BYTE PTR ds:[rbx]
   14001a59b:	(bad)  
   14001a59c:	clc    
   14001a59d:	clc    
   14001a59e:	clc    
   14001a59f:	(bad)  
   14001a5a0:	(bad)  
   14001a5a2:	fcos   
   14001a5a4:	(bad)  
   14001a5a6:	fcos   
   14001a5a8:	(bad)  
   14001a5a9:	(bad)  
   14001a5aa:	(bad)  
   14001a5ab:	(bad)  
   14001a5ac:	(bad)  
   14001a5ae:	fcos   
   14001a5b0:	mov    dh,0xc6
   14001a5b3:	(bad)  
   14001a5b4:	(bad)  
   14001a5b6:	fdivp  st(7),st
   14001a5b8:	(bad)  
   14001a5b9:	(bad)  
   14001a5ba:	(bad)  
   14001a5bb:	inc    eax
   14001a5bd:	rol    al,0xff
   14001a5c0:	scas   al,BYTE PTR es:[rdi]
   14001a5c1:	scas   al,BYTE PTR es:[rdi]
   14001a5c2:	scas   al,BYTE PTR es:[rdi]
   14001a5c3:	(bad)  
   14001a5c4:	mov    ebx,0xf2ffbbbb
   14001a5c9:	repnz repnz (bad) 
   14001a5cc:	fcmovu st,st(2)
   14001a5ce:	fisub  DWORD PTR [rax+rax*1+0x1c0000]
   14001a5d5:	add    BYTE PTR [rax],al
   14001a5d7:	add    eax,0x0
	...
   14001a61c:	add    BYTE PTR [rax],al
   14001a61e:	add    BYTE PTR [rcx],bl
   14001a620:	stc    
   14001a621:	stc    
   14001a622:	stc    
   14001a623:	inc    ebx
   14001a625:	ret    
   14001a626:	ret    
   14001a627:	xchg   ecx,eax
   14001a628:	and    eax,0xcb352525
   14001a62d:	retf   
   14001a62e:	retf   
   14001a62f:	mov    ?,ebp
   14001a631:	cmc    
   14001a632:	cmc    
   14001a633:	dec    esp
   14001a635:	int3   
   14001a636:	int3   
   14001a637:	push   rsi
   14001a639:	div    dh
   14001a63b:	(bad)  
   14001a63c:	fcomp  st(0)
   14001a63e:	fdivr  st,st(7)
   14001a640:	out    0xe6,al
   14001a642:	out    0xff,al
   14001a644:	int    0xcd
   14001a646:	int    0xff
   14001a648:	call   0x114018f35
   14001a64d:	rcl    ebx,cl
   14001a64f:	(bad)  
   14001a650:	out    dx,eax
   14001a651:	out    dx,eax
   14001a652:	out    dx,eax
   14001a653:	jmp    rdx
   14001a655:	loop   0x14001a639
   14001a657:	push   rbx
   14001a659:	repz repz jmp rdi
   14001a65d:	out    0xe7,eax
   14001a65f:	(bad)  
   14001a660:	in     eax,dx
   14001a661:	in     eax,dx
   14001a662:	in     eax,dx
   14001a663:	push   rax
   14001a665:	lock lock jmp rdi
   14001a669:	out    0xe7,eax
   14001a66b:	(bad)  
   14001a66c:	jmp    0x14001a659
   14001a66e:	jmp    0x14001a66f
   14001a670:	in     eax,dx
   14001a671:	in     eax,dx
   14001a672:	in     eax,dx
   14001a673:	jmp    rsp
   14001a675:	in     al,0xe4
   14001a677:	call   rcx
   14001a679:	rcl    ecx,1
   14001a67b:	call   rax
   14001a67d:	rcl    al,1
   14001a67f:	push   QWORD PTR [rbp-0x24004a4b]
   14001a685:	fcmovnu st,st(3)
   14001a687:	(bad)  
   14001a688:	(bad)  
   14001a68a:	fsub   QWORD PTR [rax+rax*1+0x1c0000]
   14001a691:	add    BYTE PTR [rax],al
   14001a693:	add    eax,0x0
	...
   14001a6dc:	add    BYTE PTR [rax],al
   14001a6de:	add    BYTE PTR [rcx],bl
   14001a6e0:	sti    
   14001a6e1:	sti    
   14001a6e2:	sti    
   14001a6e3:	(bad)  
   14001a6e4:	stc    
   14001a6e5:	stc    
   14001a6e6:	stc    
   14001a6e7:	(bad)  
   14001a6e8:	stc    
   14001a6e9:	stc    
   14001a6ea:	stc    
   14001a6eb:	(bad)  
   14001a6ec:	stc    
   14001a6ed:	stc    
   14001a6ee:	stc    
   14001a6ef:	(bad)  
   14001a6f0:	cli    
   14001a6f1:	cli    
   14001a6f2:	cli    
   14001a6f3:	(bad)  
   14001a6f4:	cli    
   14001a6f5:	cli    
   14001a6f6:	cli    
   14001a6f7:	(bad)  
   14001a6f8:	cli    
   14001a6f9:	cli    
   14001a6fa:	cli    
   14001a6fb:	(bad)  
   14001a6fc:	cli    
   14001a6fd:	cli    
   14001a6fe:	cli    
   14001a6ff:	(bad)  
   14001a700:	cli    
   14001a701:	cli    
   14001a702:	cli    
   14001a703:	(bad)  
   14001a704:	cli    
   14001a705:	cli    
   14001a706:	cli    
   14001a707:	(bad)  
   14001a708:	sti    
   14001a709:	sti    
   14001a70a:	sti    
   14001a70b:	(bad)  
   14001a70c:	sti    
   14001a70d:	sti    
   14001a70e:	sti    
   14001a70f:	(bad)  
   14001a710:	sti    
   14001a711:	sti    
   14001a712:	sti    
   14001a713:	(bad)  
   14001a714:	sti    
   14001a715:	sti    
   14001a716:	sti    
   14001a717:	(bad)  
   14001a718:	sti    
   14001a719:	sti    
   14001a71a:	sti    
   14001a71b:	(bad)  
   14001a71c:	cld    
   14001a71d:	cld    
   14001a71e:	cld    
   14001a71f:	(bad)  
   14001a720:	sti    
   14001a721:	sti    
   14001a722:	sti    
   14001a723:	(bad)  
   14001a724:	cli    
   14001a725:	cli    
   14001a726:	cli    
   14001a727:	(bad)  
   14001a728:	clc    
   14001a729:	clc    
   14001a72a:	clc    
   14001a72b:	push   rbp
   14001a72d:	cmc    
   14001a72e:	cmc    
   14001a72f:	push   rdx
   14001a731:	repnz repnz (bad) 
   14001a734:	out    dx,eax
   14001a735:	out    dx,eax
   14001a736:	out    dx,eax
   14001a737:	(bad)  
   14001a738:	jmp    0x124019126
   14001a73d:	jrcxz  0x14001a722
   14001a73f:	(bad)  
   14001a740:	in     eax,0xe5
   14001a742:	in     eax,0xe8
   14001a744:	xlat   BYTE PTR ds:[rbx]
   14001a745:	xlat   BYTE PTR ds:[rbx]
   14001a746:	xlat   BYTE PTR ds:[rbx]
   14001a747:	xchg   DWORD PTR [rax],eax
   14001a749:	add    BYTE PTR [rax],al
   14001a74b:	sbb    al,BYTE PTR [rax]
   14001a74d:	add    BYTE PTR [rax],al
   14001a74f:	add    eax,0x0
	...
   14001a79c:	add    BYTE PTR [rax],al
   14001a79e:	add    BYTE PTR [rdx],dl
   14001a7a0:	add    BYTE PTR [rax],al
   14001a7a2:	add    BYTE PTR [rsi],dl
   14001a7a4:	add    BYTE PTR [rax],al
   14001a7a6:	add    BYTE PTR [rsi],dl
   14001a7a8:	add    BYTE PTR [rax],al
   14001a7aa:	add    BYTE PTR [rsi],dl
   14001a7ac:	add    BYTE PTR [rax],al
   14001a7ae:	add    BYTE PTR [rsi],dl
   14001a7b0:	add    BYTE PTR [rax],al
   14001a7b2:	add    BYTE PTR [rsi],dl
   14001a7b4:	add    BYTE PTR [rax],al
   14001a7b6:	add    BYTE PTR [rsi],dl
   14001a7b8:	add    BYTE PTR [rax],al
   14001a7ba:	add    BYTE PTR [rsi],dl
   14001a7bc:	add    BYTE PTR [rax],al
   14001a7be:	add    BYTE PTR [rsi],dl
   14001a7c0:	add    BYTE PTR [rax],al
   14001a7c2:	add    BYTE PTR [rsi],dl
   14001a7c4:	add    BYTE PTR [rax],al
   14001a7c6:	add    BYTE PTR [rsi],dl
   14001a7c8:	add    BYTE PTR [rax],al
   14001a7ca:	add    BYTE PTR [rsi],dl
   14001a7cc:	add    BYTE PTR [rax],al
   14001a7ce:	add    BYTE PTR [rsi],dl
   14001a7d0:	add    BYTE PTR [rax],al
   14001a7d2:	add    BYTE PTR [rsi],dl
   14001a7d4:	add    BYTE PTR [rax],al
   14001a7d6:	add    BYTE PTR [rsi],dl
   14001a7d8:	add    BYTE PTR [rax],al
   14001a7da:	add    BYTE PTR [rsi],dl
   14001a7dc:	add    BYTE PTR [rax],al
   14001a7de:	add    BYTE PTR [rsi],dl
   14001a7e0:	add    BYTE PTR [rax],al
   14001a7e2:	add    BYTE PTR [rsi],dl
   14001a7e4:	add    BYTE PTR [rax],al
   14001a7e6:	add    BYTE PTR [rsi],dl
   14001a7e8:	add    BYTE PTR [rax],al
   14001a7ea:	add    BYTE PTR [rsi],dl
   14001a7ec:	add    BYTE PTR [rax],al
   14001a7ee:	add    BYTE PTR [rsi],dl
   14001a7f0:	add    BYTE PTR [rax],al
   14001a7f2:	add    BYTE PTR [rsi],dl
   14001a7f4:	add    BYTE PTR [rax],al
   14001a7f6:	add    BYTE PTR [rsi],dl
   14001a7f8:	add    BYTE PTR [rax],al
   14001a7fa:	add    BYTE PTR [rsi],dl
   14001a7fc:	add    BYTE PTR [rax],al
   14001a7fe:	add    BYTE PTR [rsi],dl
   14001a800:	add    BYTE PTR [rax],al
   14001a802:	add    BYTE PTR [rdx],dl
   14001a804:	add    BYTE PTR [rax],al
   14001a806:	add    BYTE PTR [rdx],cl
   14001a808:	add    BYTE PTR [rax],al
   14001a80a:	add    BYTE PTR [rdx],al
	...
   14001a850:	inc    DWORD PTR [rax-0x40000001]
   14001a856:	ja     0x14001a8cf
   14001a858:	cld    
   14001a859:	add    BYTE PTR [rdi],al
   14001a85b:	(bad)  
   14001a85c:	(bad)  
   14001a85d:	(bad)  
   14001a85e:	ja     0x14001a8d7
   14001a860:	loopne 0x14001a862
   14001a862:	add    BYTE PTR [rdi],bh
   14001a864:	lock (bad) 
   14001a866:	ja     0x14001a8df
   14001a868:	loopne 0x14001a86a
   14001a86a:	add    BYTE PTR [rax],al
   14001a86c:	add    BYTE PTR [rdi],bh
   14001a86e:	ja     0x14001a8e7
   14001a870:	loopne 0x14001a872
   14001a872:	add    BYTE PTR [rax],al
   14001a874:	add    BYTE PTR [rdi],bh
   14001a876:	ja     0x14001a8ef
   14001a878:	loopne 0x14001a87a
   14001a87a:	add    BYTE PTR [rax],al
   14001a87c:	add    BYTE PTR [rdi],bh
   14001a87e:	ja     0x14001a8f7
   14001a880:	loopne 0x14001a882
   14001a882:	add    BYTE PTR [rax],al
   14001a884:	add    BYTE PTR [rdi],bh
   14001a886:	ja     0x14001a8ff
   14001a888:	loopne 0x14001a88a
   14001a88a:	add    BYTE PTR [rax],al
   14001a88c:	add    BYTE PTR [rdi],bh
   14001a88e:	ja     0x14001a907
   14001a890:	loopne 0x14001a892
   14001a892:	add    BYTE PTR [rax],al
   14001a894:	add    BYTE PTR [rdi],bh
   14001a896:	ja     0x14001a90f
   14001a898:	loopne 0x14001a89a
   14001a89a:	add    BYTE PTR [rax],al
   14001a89c:	add    BYTE PTR [rdi],bh
   14001a89e:	ja     0x14001a917
   14001a8a0:	loopne 0x14001a8a2
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	add    BYTE PTR [rdi],bh
   14001a8a6:	ja     0x14001a91f
   14001a8a8:	loopne 0x14001a8aa
   14001a8aa:	add    BYTE PTR [rax],al
   14001a8ac:	add    BYTE PTR [rdi],bh
   14001a8ae:	ja     0x14001a927
   14001a8b0:	loopne 0x14001a8b2
   14001a8b2:	add    BYTE PTR [rax],al
   14001a8b4:	add    BYTE PTR [rdi],bh
   14001a8b6:	ja     0x14001a92f
   14001a8b8:	loopne 0x14001a8ba
   14001a8ba:	add    BYTE PTR [rax],al
   14001a8bc:	add    BYTE PTR [rbx],al
   14001a8be:	ja     0x14001a937
   14001a8c0:	loopne 0x14001a8c2
   14001a8c2:	add    BYTE PTR [rax],al
   14001a8c4:	add    BYTE PTR [rcx],al
   14001a8c6:	ja     0x14001a93f
   14001a8c8:	loopne 0x14001a8ca
   14001a8ca:	add    BYTE PTR [rax],al
   14001a8cc:	add    BYTE PTR [rax],al
   14001a8ce:	ja     0x14001a947
   14001a8d0:	loopne 0x14001a8d2
   14001a8d2:	add    BYTE PTR [rax],al
   14001a8d4:	add    BYTE PTR [rax],al
   14001a8d6:	ja     0x14001a94f
   14001a8d8:	loopne 0x14001a8da
   14001a8da:	add    BYTE PTR [rax],al
   14001a8dc:	add    BYTE PTR [rax],al
   14001a8de:	ja     0x14001a957
   14001a8e0:	loopne 0x14001a8e2
   14001a8e2:	add    BYTE PTR [rax],al
   14001a8e4:	add    BYTE PTR [rax],al
   14001a8e6:	ja     0x14001a95f
   14001a8e8:	loopne 0x14001a8ea
   14001a8ea:	add    BYTE PTR [rax],al
   14001a8ec:	add    BYTE PTR [rax],al
   14001a8ee:	ja     0x14001a967
   14001a8f0:	loopne 0x14001a8f2
   14001a8f2:	add    BYTE PTR [rax],al
   14001a8f4:	add    BYTE PTR [rax],al
   14001a8f6:	ja     0x14001a96f
   14001a8f8:	loopne 0x14001a8fa
   14001a8fa:	add    BYTE PTR [rax],al
   14001a8fc:	add    BYTE PTR [rax],al
   14001a8fe:	ja     0x14001a977
   14001a900:	loopne 0x14001a902
   14001a902:	add    BYTE PTR [rax],al
   14001a904:	add    BYTE PTR [rax],al
   14001a906:	ja     0x14001a97f
   14001a908:	loopne 0x14001a90a
   14001a90a:	add    BYTE PTR [rax],al
   14001a90c:	add    BYTE PTR [rax],al
   14001a90e:	ja     0x14001a987
   14001a910:	loopne 0x14001a912
   14001a912:	add    BYTE PTR [rax],al
   14001a914:	add    BYTE PTR [rcx],al
   14001a916:	ja     0x14001a98f
   14001a918:	loopne 0x14001a91a
   14001a91a:	add    BYTE PTR [rax],al
   14001a91c:	add    BYTE PTR [rbx],al
   14001a91e:	ja     0x14001a997
   14001a920:	loopne 0x14001a922
   14001a922:	add    BYTE PTR [rax],al
   14001a924:	add    BYTE PTR [rdi],bh
   14001a926:	ja     0x14001a99f
   14001a928:	loopne 0x14001a92a
   14001a92a:	add    BYTE PTR [rax],al
   14001a92c:	add    BYTE PTR [rdi],bh
   14001a92e:	ja     0x14001a9a7
   14001a930:	add    BYTE PTR [rax],0x0
   14001a933:	add    BYTE PTR [rax],al
   14001a935:	(bad)  
   14001a936:	ja     0x14001a9af
   14001a938:	rol    BYTE PTR [rax],0x0
   14001a93b:	add    BYTE PTR [rax],al
   14001a93d:	(bad)  
   14001a93e:	ja     0x14001a9b7
   14001a940:	loopne 0x14001a942
   14001a942:	add    BYTE PTR [rax],al
   14001a944:	add    BYTE PTR [rdi],bh
   14001a946:	ja     0x14001a9bf
   14001a948:	loopne 0x14001a94a
   14001a94a:	add    BYTE PTR [rax],al
   14001a94c:	add    BYTE PTR [rdi],bh
   14001a94e:	ja     0x14001a9c7
   14001a950:	loopne 0x14001a952
   14001a952:	add    BYTE PTR [rax],al
   14001a954:	add    BYTE PTR [rdi],bh
   14001a956:	ja     0x14001a9cf
   14001a958:	loopne 0x14001a95a
   14001a95a:	add    BYTE PTR [rax],al
   14001a95c:	add    BYTE PTR [rdi],bh
   14001a95e:	ja     0x14001a9d7
   14001a960:	loopne 0x14001a962
   14001a962:	add    BYTE PTR [rax],al
   14001a964:	add    BYTE PTR [rdi],bh
   14001a966:	ja     0x14001a9df
   14001a968:	loopne 0x14001a96a
   14001a96a:	add    BYTE PTR [rax],al
   14001a96c:	add    BYTE PTR [rdi],bh
   14001a96e:	ja     0x14001a9e7
   14001a970:	loopne 0x14001a972
   14001a972:	add    BYTE PTR [rax],al
   14001a974:	add    BYTE PTR [rdi],bh
   14001a976:	ja     0x14001a9ef
   14001a978:	loopne 0x14001a97a
   14001a97a:	add    BYTE PTR [rax],al
   14001a97c:	add    BYTE PTR [rdi+0x77],bh
   14001a97f:	ja     0x14001a961
   14001a981:	add    BYTE PTR [rax],al
   14001a983:	add    BYTE PTR [rax],al
   14001a985:	push   QWORD PTR [rdi+0x77]
   14001a988:	loopne 0x14001a98a
   14001a98a:	add    BYTE PTR [rax],al
   14001a98c:	add    edi,edi
   14001a98e:	ja     0x14001aa07
   14001a990:	loopne 0x14001a992
   14001a992:	add    BYTE PTR [rax],al
   14001a994:	add    edi,edi
   14001a996:	ja     0x14001aa0f
   14001a998:	loopne 0x14001a99a
   14001a99a:	add    BYTE PTR [rax],al
   14001a99c:	(bad)  
   14001a99d:	push   QWORD PTR [rdi+0x77]
   14001a9a0:	loopne 0x14001a9a2
   14001a9a2:	add    BYTE PTR [rax],al
   14001a9a4:	ud0    esi,DWORD PTR [rdi+0x77]
   14001a9a8:	loopne 0x14001a9aa
   14001a9aa:	add    BYTE PTR [rax],al
   14001a9ac:	(bad)  
   14001a9ad:	push   QWORD PTR [rdi+0x77]
   14001a9b0:	loopne 0x14001a9b2
   14001a9b2:	add    BYTE PTR [rax],al
   14001a9b4:	(bad)  
   14001a9b5:	push   QWORD PTR [rdi+0x77]
   14001a9b8:	loopne 0x14001a9ba
   14001a9ba:	add    BYTE PTR [rax],al
   14001a9bc:	jg     0x14001a9bd
   14001a9be:	ja     0x14001aa37
   14001a9c0:	loopne 0x14001a9c2
   14001a9c2:	add    BYTE PTR [rax],al
   14001a9c4:	(bad)  
   14001a9c5:	push   QWORD PTR [rdi+0x77]
   14001a9c8:	loopne 0x14001a9ca
   14001a9ca:	add    BYTE PTR [rcx],al
   14001a9cc:	(bad)  
   14001a9cd:	push   QWORD PTR [rdi+0x77]
   14001a9d0:	sub    BYTE PTR [rax],al
   14001a9d2:	add    BYTE PTR [rax],al
   14001a9d4:	and    BYTE PTR [rax],al
   14001a9d6:	add    BYTE PTR [rax],al
   14001a9d8:	add    BYTE PTR [rax],al
   14001a9db:	add    BYTE PTR [rcx],al
   14001a9dd:	add    BYTE PTR [rax],ah
	...
   14001aa13:	add    al,0x0
   14001aa15:	add    BYTE PTR [rax],al
   14001aa17:	(bad)  
   14001aa18:	add    BYTE PTR [rax],al
   14001aa1a:	add    BYTE PTR [rdi],al
   14001aa1c:	add    BYTE PTR [rax],al
   14001aa1e:	add    BYTE PTR [rip+0x1000000],al        # 0x14101aa24
	...
   14001aa3c:	(bad)  
   14001aa3d:	(bad)  
   14001aa3e:	inc    DWORD PTR [rcx-0x36000001]
   14001aa44:	(bad)  
   14001aa45:	(bad)  
   14001aa46:	push   rsi
   14001aa48:	(bad)  
   14001aa49:	(bad)  
   14001aa4a:	(bad)  
   14001aa4b:	(bad)  
   14001aa4c:	(bad)  
   14001aa4d:	(bad)  
   14001aa4e:	(bad)  
   14001aa4f:	(bad)  
   14001aa50:	(bad)  
   14001aa51:	(bad)  
   14001aa52:	(bad)  
   14001aa53:	(bad)  
   14001aa54:	(bad)  
   14001aa55:	(bad)  
   14001aa56:	push   rsi
   14001aa58:	(bad)  
   14001aa59:	(bad)  
   14001aa5a:	dec    eax
   14001aa5c:	(bad)  
   14001aa5d:	(bad)  
   14001aa5e:	inc    DWORD PTR [rcx+0x0]
	...
   14001aa84:	add    BYTE PTR [rax],al
   14001aa86:	add    BYTE PTR [rdi],al
   14001aa88:	add    BYTE PTR [rax],al
   14001aa8a:	add    BYTE PTR [rax],bl
   14001aa8c:	and    DWORD PTR [rcx],esp
   14001aa8e:	and    DWORD PTR [rax],esi
   14001aa90:	pop    rsp
   14001aa91:	pop    rsp
   14001aa92:	pop    rsp
   14001aa93:	rex.WX
   14001aa94:	gs gs gs push rcx
   14001aa98:	ss ss ss rex.R xor eax,0x413535
   14001aaa1:	add    BYTE PTR [rax],al
   14001aaa3:	xor    BYTE PTR [rax],al
   14001aaa5:	add    BYTE PTR [rax],al
   14001aaa7:	and    al,0x0
   14001aaa9:	add    BYTE PTR [rax],al
   14001aaab:	adc    eax,0xa000000
   14001aab0:	add    BYTE PTR [rax],al
   14001aab2:	add    BYTE PTR [rdx],al
   14001aab4:	add    BYTE PTR [rax],al
   14001aab6:	add    BYTE PTR [rax],al
   14001aab8:	(bad)  
   14001aab9:	(bad)  
   14001aaba:	inc    DWORD PTR [rcx-0x723]
   14001aac0:	jbe    0x14001aaa4
   14001aac2:	(bad)  
   14001aac3:	dec    DWORD PTR [rax-0x2a]
   14001aac6:	(bad)  
   14001aac7:	(bad)  
   14001aac8:	cmp    al,0xcf
   14001aaca:	(bad)  
   14001aacb:	push   QWORD PTR [rsi]
   14001aacd:	retf   
   14001aace:	(bad)  
   14001aacf:	push   QWORD PTR [rax]
   14001aad1:	(bad)  
   14001aad4:	xor    al,bl
   14001aad6:	(bad)  
   14001aad7:	call   FWORD PTR [rsi+rcx*8-0x1]
   14001aadb:	call   rsi
   14001aadd:	repnz (bad) 
   14001aadf:	(bad)  
   14001aae0:	(bad)  
   14001aae1:	(bad)  
   14001aae2:	inc    DWORD PTR [rcx+0x0]
	...
   14001aafc:	add    BYTE PTR [rax],al
   14001aafe:	add    BYTE PTR [rax+rax*1],al
   14001ab01:	add    BYTE PTR [rax],al
   14001ab03:	sbb    al,0x5
   14001ab05:	add    eax,0x81813705
   14001ab0a:	xor    DWORD PTR [rcx-0x17],0xe6f8e9e9
   14001ab11:	out    0xe6,al
   14001ab13:	jmp    rcx
   14001ab15:	loope  0x14001aaf8
   14001ab17:	cmc    
   14001ab18:	(bad)  
   14001ab19:	(bad)  
   14001ab1a:	(bad)  
   14001ab1b:	jmp    0x12cdd86fb
   14001ab20:	(bad)  
   14001ab22:	(bad)  
   14001ab24:	mov    ah,0xb4
   14001ab26:	mov    ah,0xa2
   14001ab28:	jbe    0x14001aba0
   14001ab2a:	jbe    0x14001ab96
   14001ab2c:	es es add BYTE PTR es:[rax],r8b
   14001ab32:	add    BYTE PTR [rcx],dh
   14001ab34:	add    BYTE PTR [rax],al
   14001ab36:	add    BYTE PTR [rdx],ah
   14001ab38:	(bad)  
   14001ab39:	(bad)  
   14001ab3a:	(bad)  
   14001ab3b:	out    dx,eax
   14001ab3c:	addr32 in al,0xff
   14001ab3f:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001ab43:	inc    DWORD PTR [rsi-0x29]
   14001ab46:	(bad)  
   14001ab47:	inc    DWORD PTR [rax-0x2d]
   14001ab4a:	(bad)  
   14001ab4b:	(bad)  
   14001ab4c:	cmp    ecx,esi
   14001ab4e:	(bad)  
   14001ab4f:	push   QWORD PTR [rip+0xffffffffd4ffffca]        # 0x11501ab1f
   14001ab55:	repz (bad) 
   14001ab57:	dec    edi
   14001ab59:	icebp  
   14001ab5a:	(bad)  
   14001ab5b:	(bad)  
   14001ab5c:	(bad)  
   14001ab5d:	(bad)  
   14001ab5e:	(bad)  
   14001ab5f:	(bad)  
   14001ab60:	(bad)  
   14001ab61:	(bad)  
   14001ab62:	(bad)  
   14001ab63:	out    dx,al
	...
   14001ab7c:	add    BYTE PTR [rax],al
   14001ab7e:	add    BYTE PTR [rip+0xffffffffa3c0c0c0],bl        # 0xe3c26c44
   14001ab84:	out    0xe6,al
   14001ab86:	out    0xf8,al
   14001ab88:	call   0x128019475
   14001ab8d:	out    0xe7,eax
   14001ab8f:	jmp    rbp
   14001ab91:	in     eax,0xe5
   14001ab93:	jmp    rsi
   14001ab95:	out    0xe6,al
   14001ab97:	jmp    rsi
   14001ab99:	out    0xe6,al
   14001ab9b:	jmp    rsp
   14001ab9d:	in     al,0xe4
   14001ab9f:	jmp    rsp
   14001aba1:	in     al,0xe4
   14001aba3:	(bad)  
   14001aba4:	(bad)  
   14001aba6:	fdivp  st(7),st
   14001aba8:	loop   0x14001ab8c
   14001abaa:	loop   0x14001abaa
   14001abac:	loop   0x14001ab90
   14001abae:	loop   0x14001aba3
   14001abb0:	fcomp  st(0)
   14001abb2:	fcom   st(3)
   14001abb4:	rcl    al,1
   14001abb6:	sar    BYTE PTR [rdx-0x1],1
   14001abbc:	push   rsi
   14001abbd:	in     al,0xff
   14001abbf:	call   QWORD PTR [rcx-0x20]
   14001abc2:	(bad)  
   14001abc3:	dec    DWORD PTR [rbx-0x25]
   14001abc6:	(bad)  
   14001abc7:	inc    DWORD PTR [rbp-0x29]
   14001abca:	(bad)  
   14001abcb:	(bad)  
   14001abcc:	(bad)  
   14001abcd:	sar    bh,cl
   14001abcf:	(bad)  
   14001abd0:	cmp    ebp,ecx
   14001abd2:	(bad)  
   14001abd3:	call   rbp
   14001abd5:	hlt    
   14001abd6:	(bad)  
   14001abd7:	call   rax
   14001abd9:	repnz (bad) 
   14001abdb:	jmp    FWORD PTR [rax]
   14001abdd:	mov    edi,0xffffffff
   14001abe2:	(bad)  
   14001abe3:	inc    DWORD PTR [rax]
	...
   14001abfd:	add    BYTE PTR [rax],al
   14001abff:	(bad)  
   14001ac00:	repz repz repz inc DWORD PTR [rdx-0x6b9e7d7e]
   14001ac09:	xchg   esp,eax
   14001ac0a:	xchg   esp,eax
   14001ac0b:	push   rsi
   14001ac0c:	call   0x1030194f9
   14001ac11:	ret    0xffc2
   14001ac14:	retf   0xcaca
   14001ac17:	dec    edi
   14001ac19:	iret   
   14001ac1a:	iret   
   14001ac1b:	dec    ebp
   14001ac1d:	int    0xcd
   14001ac1f:	(bad)  
   14001ac20:	(bad)  
   14001ac22:	fdiv   st(7),st
   14001ac24:	rcl    ecx,1
   14001ac26:	sar    edi,1
   14001ac28:	leave  
   14001ac29:	leave  
   14001ac2a:	leave  
   14001ac2b:	inc    ebp
   14001ac2d:	(bad)
   14001ac30:	retf   0xcaca
   14001ac33:	dec    ecx
   14001ac35:	leave  
   14001ac36:	leave  
   14001ac37:	(bad)  
   14001ac38:	(bad)  
   14001ac39:	(bad)  
   14001ac3a:	(bad)  
   14001ac3b:	call   FWORD PTR [rbx-0x18]
   14001ac3e:	(bad)  
   14001ac3f:	call   QWORD PTR [rbp-0x1d]
   14001ac42:	(bad)  
   14001ac43:	call   QWORD PTR [rax-0x21]
   14001ac46:	(bad)  
   14001ac47:	dec    DWORD PTR [rdx-0x26]
   14001ac4a:	(bad)  
   14001ac4b:	inc    DWORD PTR [rsi+rdx*8-0x1]
   14001ac4f:	(bad)  
   14001ac50:	ds sar edi,1
   14001ac53:	(bad)  
   14001ac54:	cmp    ch,cl
   14001ac56:	(bad)  
   14001ac57:	push   QWORD PTR [rdx]
   14001ac59:	enter  0xffff,0x2d
   14001ac5d:	ret    
   14001ac5e:	(bad)  
   14001ac5f:	(bad)  
   14001ac60:	(bad)  
   14001ac61:	(bad)  
   14001ac62:	(bad)  
   14001ac63:	inc    DWORD PTR [rax]
	...
   14001ac7d:	add    BYTE PTR [rax],al
   14001ac7f:	(bad)  
   14001ac80:	hlt    
   14001ac81:	hlt    
   14001ac82:	hlt    
   14001ac83:	push   QWORD PTR [rbp+0x75]
   14001ac86:	jne    0x14001acf6
   14001ac88:	jnp    0x14001ad05
   14001ac8a:	jnp    0x14001acf6
   14001ac8c:	(bad)  
   14001ac8d:	(bad)  
   14001ac8e:	(bad)  
   14001ac8f:	dec    esi
   14001ac91:	(bad)  
   14001ac92:	(bad)  
   14001ac93:	call   rdx
   14001ac95:	rcl    dl,cl
   14001ac97:	(bad)  
   14001ac98:	(bad)  
   14001ac9a:	fdiv   st(7),st
   14001ac9c:	(bad)  
   14001ac9d:	(bad)  
   14001ac9e:	(bad)  
   14001ac9f:	jmp    rdi
   14001aca1:	out    0xe7,eax
   14001aca3:	(bad)  
   14001aca4:	(bad)  
   14001aca6:	fdivp  st(7),st
   14001aca8:	loop   0x14001ac8c
   14001acaa:	loop   0x14001acab
   14001acac:	std    
   14001acad:	std    
   14001acae:	std    
   14001acaf:	(bad)  
   14001acb0:	(bad)  
   14001acb1:	(bad)  
   14001acb2:	(bad)  
   14001acb3:	(bad)  
   14001acb4:	(bad)  
   14001acb5:	(bad)  
   14001acb6:	(bad)  
   14001acb7:	(bad)  
   14001acb8:	(bad)  
   14001acb9:	(bad)  
   14001acba:	(bad)  
   14001acbb:	jmp    QWORD PTR [rax-0x15]
   14001acbe:	(bad)  
   14001acbf:	call   FWORD PTR [rdx-0x19]
   14001acc2:	(bad)  
   14001acc3:	call   QWORD PTR [rdx+riz*8-0x1]
   14001acc7:	dec    DWORD PTR [rdi-0x22]
   14001acca:	(bad)  
   14001accb:	push   QWORD PTR [rax+rsi*8-0x1]
   14001acd2:	(bad)  
   14001acd3:	(bad)  
   14001acd4:	(bad)  
   14001acd5:	(bad)  
   14001acd6:	(bad)  
   14001acd7:	(bad)  
   14001acd8:	(bad)  
   14001acd9:	(bad)  
   14001acda:	(bad)  
   14001acdb:	(bad)  
   14001acdc:	(bad)  
   14001acdd:	(bad)  
   14001acde:	(bad)  
   14001acdf:	(bad)  
   14001ace0:	(bad)  
   14001ace1:	(bad)  
   14001ace2:	(bad)  
   14001ace3:	(bad)  
   14001ace4:	(bad)  
   14001ace5:	(bad)  
   14001ace6:	(bad)  
   14001ace7:	(bad)  
   14001ace8:	(bad)  
   14001ace9:	(bad)  
   14001acea:	(bad)  
   14001aceb:	(bad)  
   14001acec:	(bad)  
   14001aced:	(bad)  
   14001acee:	(bad)  
   14001acef:	out    dx,eax
   14001acf0:	(bad)  
   14001acf1:	(bad)  
   14001acf2:	inc    DWORD PTR [rcx+0x0]
   14001acf8:	add    BYTE PTR [rax],al
   14001acfa:	add    BYTE PTR [rax],al
   14001acfc:	add    BYTE PTR [rax],al
   14001acfe:	add    BYTE PTR [rdi],bl
   14001ad00:	hlt    
   14001ad01:	hlt    
   14001ad02:	hlt    
   14001ad03:	(bad)  
   14001ad04:	in     al,dx
   14001ad05:	in     al,dx
   14001ad06:	in     al,dx
   14001ad07:	(bad)  
   14001ad08:	jmp    0x14001acf5
   14001ad0a:	jmp    0x14001ad0b
   14001ad0c:	jmp    0x14001acf9
   14001ad0e:	jmp    0x14001ad0f
   14001ad10:	(bad)  
   14001ad11:	(bad)  
   14001ad12:	(bad)  
   14001ad13:	(bad)  
   14001ad14:	(bad)  
   14001ad15:	(bad)  
   14001ad16:	(bad)  
   14001ad17:	(bad)  
   14001ad18:	jmp    0x12a019706
   14001ad1d:	jmp    0x128eaad0b
   14001ad22:	call   0x130f29e26
   14001ad27:	(bad)  
   14001ad28:	in     eax,dx
   14001ad29:	in     eax,0xda
   14001ad2b:	jmp    QWORD PTR [rdi-0x6a00a97d]
   14001ad31:	outs   dx,DWORD PTR ds:[rsi]
   14001ad32:	rex dec DWORD PTR [rsi-0xbe94]
   14001ad39:	(bad)  
   14001ad3a:	(bad)  
   14001ad3b:	jmp    QWORD PTR [rdx-0x13]
   14001ad3e:	(bad)  
   14001ad3f:	call   FWORD PTR [rdi-0x16]
   14001ad42:	(bad)  
   14001ad43:	call   FWORD PTR [rcx-0x1a]
   14001ad46:	(bad)  
   14001ad47:	call   QWORD PTR [rbx-0x1e]
   14001ad4a:	(bad)  
   14001ad4b:	dec    DWORD PTR [rbp-0x23]
   14001ad4e:	(bad)  
   14001ad4f:	inc    DWORD PTR [rdi-0x28]
   14001ad52:	(bad)  
   14001ad53:	inc    DWORD PTR [rdx-0x2c]
   14001ad56:	(bad)  
   14001ad57:	(bad)  
   14001ad58:	cmp    al,0xcf
   14001ad5a:	(bad)  
   14001ad5b:	push   QWORD PTR [rsi]
   14001ad5d:	retf   
   14001ad5e:	(bad)  
   14001ad5f:	push   QWORD PTR [rax]
   14001ad61:	(bad)  
   14001ad64:	sub    eax,ecx
   14001ad66:	(bad)  
   14001ad67:	jmp    QWORD PTR [rip+0x3cffffbc]        # 0x17d01ad29
   14001ad6d:	sar    edi,0xff
   14001ad70:	(bad)  
   14001ad71:	repnz (bad) 
   14001ad73:	(bad)  
   14001ad74:	(bad)  
   14001ad75:	(bad)  
   14001ad76:	inc    DWORD PTR [rcx+0x0]
   14001ad7c:	add    BYTE PTR [rax],al
   14001ad7e:	add    BYTE PTR [rdi],bl
   14001ad80:	cmc    
   14001ad81:	cmc    
   14001ad82:	cmc    
   14001ad83:	inc    DWORD PTR [rsp+rax*4-0x68689e7c]
   14001ad8a:	xchg   edi,eax
   14001ad8b:	push   rsi
   14001ad8c:	in     al,dx
   14001ad8d:	in     al,dx
   14001ad8e:	in     al,dx
   14001ad8f:	(bad)  
   14001ad90:	in     al,dx
   14001ad91:	in     al,dx
   14001ad92:	in     al,dx
   14001ad93:	(bad)  
   14001ad94:	jmp    0x14001ad81
   14001ad96:	jmp    0x14001ad97
   14001ad98:	out    0xe6,al
   14001ad9a:	out    0xff,al
   14001ad9c:	ret    
   14001ad9d:	ret    
   14001ad9e:	ret    
   14001ad9f:	(bad)  
   14001ada0:	(bad)  
   14001ada1:	(bad)  
   14001ada2:	(bad)  
   14001ada3:	(bad)  
   14001ada4:	cli    
   14001ada5:	cli    
   14001ada6:	cli    
   14001ada7:	(bad)  
   14001ada8:	mov    ebx,0xa0ff6d99
   14001adad:	je     0x14001aded
   14001adaf:	call   FWORD PTR [rdx-0x6c00c08f]
   14001adb5:	outs   dx,BYTE PTR ds:[rsi]
   14001adb6:	rex (bad) 
   14001adb8:	(bad)  
   14001adb9:	(bad)  
   14001adba:	(bad)  
   14001adbb:	jmp    QWORD PTR [rdx-0x13]
   14001adbe:	(bad)  
   14001adbf:	jmp    QWORD PTR [rdx-0x13]
   14001adc2:	(bad)  
   14001adc3:	call   FWORD PTR [rsi-0x16]
   14001adc6:	(bad)  
   14001adc7:	call   FWORD PTR [rax-0x1b]
   14001adca:	(bad)  
   14001adcb:	call   QWORD PTR [rdx-0x1f]
   14001adce:	(bad)  
   14001adcf:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001add3:	inc    DWORD PTR [rsi-0x28]
   14001add6:	(bad)  
   14001add7:	inc    DWORD PTR [rcx-0x2d]
   14001adda:	(bad)  
   14001addb:	(bad)  
   14001addc:	cmp    ecx,edi
   14001adde:	(bad)  
   14001addf:	push   QWORD PTR [rip+0x2fffffca]        # 0x17001adaf
   14001ade5:	(bad)  
   14001ade8:	sub    eax,eax
   14001adea:	(bad)  
   14001adeb:	jmp    QWORD PTR [rsp+rdi*4]
   14001adee:	(bad)  
   14001adef:	call   FWORD PTR [rcx-0x35]
   14001adf2:	(bad)  
   14001adf3:	(bad)  
   14001adf4:	(bad)  
   14001adf5:	(bad)  
   14001adf6:	dec    eax
   14001adf8:	add    BYTE PTR [rax],al
   14001adfa:	add    BYTE PTR [rax],al
   14001adfc:	add    BYTE PTR [rax],al
   14001adfe:	add    BYTE PTR [rdi],bl
   14001ae00:	div    dh
   14001ae02:	idiv   bh
   14001ae04:	ja     0x14001ae7d
   14001ae06:	ja     0x14001ae76
   14001ae08:	jge    0x14001ae87
   14001ae0a:	jge    0x14001ae76
   14001ae0c:	in     eax,dx
   14001ae0d:	in     eax,dx
   14001ae0e:	in     eax,dx
   14001ae0f:	(bad)  
   14001ae10:	in     eax,dx
   14001ae11:	in     eax,dx
   14001ae12:	in     eax,dx
   14001ae13:	(bad)  
   14001ae14:	in     al,dx
   14001ae15:	in     al,dx
   14001ae16:	in     al,dx
   14001ae17:	(bad)  
   14001ae18:	jmp    0x14001ae05
   14001ae1a:	jmp    0x14001ae1b
   14001ae1c:	(bad)  
   14001ae1d:	(bad)  
   14001ae1e:	(bad)  
   14001ae1f:	(bad)  
   14001ae20:	jmp    0x14001ae0d
   14001ae22:	jmp    0x14001ae23
   14001ae24:	(bad)  
   14001ae25:	(bad)  
   14001ae26:	(bad)  
   14001ae27:	jmp    FWORD PTR [rsi-0x5a00bc82]
   14001ae2d:	jbe    0x14001ae6c
   14001ae2f:	call   FWORD PTR [rsi-0x6700c18d]
   14001ae35:	jo     0x14001ae76
   14001ae37:	(bad)  
   14001ae38:	(bad)  
   14001ae39:	(bad)  
   14001ae3a:	(bad)  
   14001ae3b:	jmp    QWORD PTR [rdx-0x13]
   14001ae3e:	(bad)  
   14001ae3f:	jmp    QWORD PTR [rdx-0x13]
   14001ae42:	(bad)  
   14001ae43:	jmp    QWORD PTR [rcx-0x14]
   14001ae46:	(bad)  
   14001ae47:	call   FWORD PTR [rbp-0x17]
   14001ae4a:	(bad)  
   14001ae4b:	call   QWORD PTR [rdi-0x1c]
   14001ae4e:	(bad)  
   14001ae4f:	call   QWORD PTR [rcx-0x20]
   14001ae52:	(bad)  
   14001ae53:	dec    DWORD PTR [rbx-0x25]
   14001ae56:	(bad)  
   14001ae57:	inc    DWORD PTR [rbp-0x29]
   14001ae5a:	(bad)  
   14001ae5b:	inc    DWORD PTR [rax-0x2e]
   14001ae5e:	(bad)  
   14001ae5f:	(bad)  
   14001ae60:	cmp    cl,dh
   14001ae62:	(bad)  
   14001ae63:	push   QWORD PTR [rcx+rcx*8]
   14001ae66:	(bad)  
   14001ae67:	jmp    FWORD PTR [rsi]
   14001ae69:	(bad)  
   14001ae6a:	(bad)  
   14001ae6b:	jmp    FWORD PTR [rax]
   14001ae6d:	mov    edi,0xbd2bffff
   14001ae72:	(bad)  
   14001ae73:	(bad)  
   14001ae74:	(bad)  
   14001ae75:	(bad)  
   14001ae76:	push   rsi
   14001ae78:	add    BYTE PTR [rax],al
   14001ae7a:	add    BYTE PTR [rax],al
   14001ae7c:	add    BYTE PTR [rax],al
   14001ae7e:	add    BYTE PTR [rdi],bl
   14001ae80:	div    edi
   14001ae82:	idiv   edi
   14001ae84:	lock lock lock (bad) 
   14001ae88:	out    dx,eax
   14001ae89:	out    dx,eax
   14001ae8a:	out    dx,eax
   14001ae8b:	(bad)  
   14001ae8c:	out    dx,eax
   14001ae8d:	out    dx,eax
   14001ae8e:	out    dx,eax
   14001ae8f:	(bad)  
   14001ae90:	out    dx,al
   14001ae91:	out    dx,al
   14001ae92:	out    dx,al
   14001ae93:	(bad)  
   14001ae94:	out    dx,al
   14001ae95:	out    dx,al
   14001ae96:	out    dx,al
   14001ae97:	(bad)  
   14001ae98:	in     eax,dx
   14001ae99:	in     eax,dx
   14001ae9a:	in     eax,dx
   14001ae9b:	(bad)  
   14001ae9c:	in     eax,dx
   14001ae9d:	in     eax,dx
   14001ae9e:	in     eax,dx
   14001ae9f:	(bad)  
   14001aea0:	in     al,dx
   14001aea1:	in     al,dx
   14001aea2:	in     al,dx
   14001aea3:	(bad)  
   14001aea4:	(bad)  
   14001aea5:	(bad)  
   14001aea6:	(bad)  
   14001aea7:	push   QWORD PTR [rax-0x5600c485]
   14001aead:	js     0x14001aeeb
   14001aeaf:	jmp    QWORD PTR [rbx-0x6200c28a]
   14001aeb5:	jae    0x14001aef5
   14001aeb7:	push   rsp
   14001aeb9:	out    dx,eax
   14001aeba:	(bad)  
   14001aebb:	inc    DWORD PTR [rcx+0x62fffff1]
   14001aec1:	in     eax,dx
   14001aec2:	(bad)  
   14001aec3:	jmp    QWORD PTR [rdx-0x13]
   14001aec6:	(bad)  
   14001aec7:	jmp    QWORD PTR [rcx-0x14]
   14001aeca:	(bad)  
   14001aecb:	call   FWORD PTR [rbx-0x18]
   14001aece:	(bad)  
   14001aecf:	call   QWORD PTR [rsi-0x1d]
   14001aed2:	(bad)  
   14001aed3:	call   QWORD PTR [rax-0x21]
   14001aed6:	(bad)  
   14001aed7:	dec    DWORD PTR [rdx-0x26]
   14001aeda:	(bad)  
   14001aedb:	inc    DWORD PTR [rsi+rdx*8-0x1]
   14001aedf:	(bad)  
   14001aee0:	(bad)  
   14001aee1:	sar    edi,1
   14001aee3:	(bad)  
   14001aee4:	cmp    ebp,ecx
   14001aee6:	(bad)  
   14001aee7:	push   QWORD PTR [rbx]
   14001aee9:	enter  0xffff,0x2d
   14001aeed:	ret    
   14001aeee:	(bad)  
   14001aeef:	jmp    QWORD PTR [rdi]
   14001aef1:	mov    esi,0xffffffff
   14001aef6:	(bad)  
   14001aef7:	inc    DWORD PTR [rax]
   14001aef9:	add    BYTE PTR [rax],al
   14001aefb:	add    BYTE PTR [rax],al
   14001aefd:	add    BYTE PTR [rax],al
   14001aeff:	(bad)  
   14001af00:	div    edi
   14001af02:	idiv   edi
   14001af04:	xchg   BYTE PTR [rsi-0x66669e7a],al
   14001af0a:	cdq    
   14001af0b:	push   rsi
   14001af0c:	lock lock lock (bad) 
   14001af10:	out    dx,eax
   14001af11:	out    dx,eax
   14001af12:	out    dx,eax
   14001af13:	(bad)  
   14001af14:	out    dx,eax
   14001af15:	out    dx,eax
   14001af16:	out    dx,eax
   14001af17:	(bad)  
   14001af18:	in     eax,dx
   14001af19:	in     eax,dx
   14001af1a:	in     eax,dx
   14001af1b:	dec    ecx
   14001af1d:	leave  
   14001af1e:	leave  
   14001af1f:	(bad)  
   14001af20:	in     eax,dx
   14001af21:	in     eax,dx
   14001af22:	in     eax,dx
   14001af23:	(bad)  
   14001af24:	(bad)  
   14001af25:	(bad)  
   14001af26:	(bad)  
   14001af27:	push   QWORD PTR [rbp-0x5100c582]
   14001af2d:	jnp    0x14001af6a
   14001af2f:	jmp    FWORD PTR [rax-0x5d00c388]
   14001af35:	jne    0x14001af74
   14001af37:	push   QWORD PTR [rsi-0xb008f69]
   14001af3d:	out    dx,eax
   14001af3e:	jmp    0x14001af42
   14001af43:	(bad)  
   14001af44:	(bad)  
   14001af45:	(bad)  
   14001af46:	(bad)  
   14001af47:	(bad)  
   14001af48:	(bad)  
   14001af49:	(bad)  
   14001af4a:	(bad)  
   14001af4b:	(bad)  
   14001af4c:	(bad)  
   14001af4d:	(bad)  
   14001af4e:	(bad)  
   14001af4f:	(bad)  
   14001af50:	(bad)  
   14001af51:	(bad)  
   14001af52:	(bad)  
   14001af53:	(bad)  
   14001af54:	(bad)  
   14001af55:	(bad)  
   14001af56:	(bad)  
   14001af57:	(bad)  
   14001af58:	(bad)  
   14001af59:	(bad)  
   14001af5a:	(bad)  
   14001af5b:	(bad)  
   14001af5c:	(bad)  
   14001af5d:	cli    
   14001af5e:	(bad)  
   14001af5f:	push   QWORD PTR [rdx-0x21]
   14001af62:	(bad)  
   14001af63:	(bad)  
   14001af64:	cmp    eax,0x37ffffd1
   14001af69:	int3   
   14001af6a:	(bad)  
   14001af6b:	push   QWORD PTR [rdx]
   14001af6d:	enter  0xffff,0x2c
   14001af71:	ret    0xffff
   14001af74:	(bad)  
   14001af75:	(bad)  
   14001af76:	(bad)  
   14001af77:	inc    DWORD PTR [rax]
   14001af79:	add    BYTE PTR [rax],al
   14001af7b:	add    BYTE PTR [rax],al
   14001af7d:	add    BYTE PTR [rax],al
   14001af7f:	(bad)  
   14001af80:	clc    
   14001af81:	clc    
   14001af82:	clc    
   14001af83:	(bad)  
   14001af84:	jns    0x14001afff
   14001af86:	jns    0x14001aff6
   14001af88:	jg     0x14001b009
   14001af8a:	jg     0x14001aff6
   14001af8c:	icebp  
   14001af8d:	icebp  
   14001af8e:	icebp  
   14001af8f:	push   rcx
   14001af91:	icebp  
   14001af92:	icebp  
   14001af93:	push   rax
   14001af95:	lock lock (bad) 
   14001af98:	out    dx,eax
   14001af99:	out    dx,eax
   14001af9a:	out    dx,eax
   14001af9b:	(bad)  
   14001af9c:	fstp   st(5)
   14001af9e:	(bad)  
   14001afa0:	out    dx,al
   14001afa1:	out    dx,al
   14001afa2:	out    dx,al
   14001afa3:	(bad)  
   14001afa4:	(bad)  
   14001afa5:	(bad)  
   14001afa6:	(bad)  
   14001afa7:	(bad)  
   14001afa8:	mov    ecx,0xb3ff3980
   14001afad:	jge    0x14001afe9
   14001afaf:	jmp    FWORD PTR [rbp-0x5800c486]
   14001afb5:	ja     0x14001aff3
   14001afb7:	jmp    QWORD PTR [rcx-0x6400c18b]
   14001afbd:	jb     0x14001affe
   14001afbf:	call   QWORD PTR [rbp-0x7000bf91]
   14001afc5:	ins    BYTE PTR es:[rdi],dx
   14001afc6:	dec    DWORD PTR [r9-0x7c00bd97]
   14001afcd:	data16 rex.R (bad) 
   14001afd0:	jge    0x14001b036
   14001afd2:	rex.RB (bad) 
   14001afd4:	jl     0x14001b039
   14001afd6:	rex.RB (bad) 
   14001afd8:	jl     0x14001b03d
   14001afda:	rex.RB call QWORD PTR [r14-0x1500967e]
   14001afe1:	cli    
   14001afe2:	(bad)  
   14001afe3:	inc    DWORD PTR [rdx-0x2c]
   14001afe6:	(bad)  
   14001afe7:	(bad)  
   14001afe8:	cmp    al,0xd0
   14001afea:	(bad)  
   14001afeb:	push   QWORD PTR [rsi]
   14001afed:	retf   
   14001afee:	(bad)  
   14001afef:	push   QWORD PTR [rcx]
   14001aff1:	(bad)  
   14001aff2:	(bad)  
   14001aff3:	(bad)  
   14001aff4:	(bad)  
   14001aff5:	(bad)  
   14001aff6:	(bad)  
   14001aff7:	inc    DWORD PTR [rax]
   14001aff9:	add    BYTE PTR [rax],al
   14001affb:	add    BYTE PTR [rax],al
   14001affd:	add    BYTE PTR [rax],al
   14001afff:	(bad)  
   14001b000:	clc    
   14001b001:	clc    
   14001b002:	clc    
   14001b003:	push   rbx
   14001b005:	repz repz push rbx
   14001b009:	repz repz push rdx
   14001b00d:	repnz repnz push rdx
   14001b011:	repnz repnz push rcx
   14001b015:	icebp  
   14001b016:	icebp  
   14001b017:	push   rcx
   14001b019:	icebp  
   14001b01a:	icebp  
   14001b01b:	push   rax
   14001b01d:	lock lock push rax
   14001b021:	lock lock (bad) 
   14001b024:	(bad)  
   14001b025:	(bad)  
   14001b026:	(bad)  
   14001b027:	inc    ecx
   14001b029:	xchg   DWORD PTR [rdi],edi
   14001b02b:	(bad)  
   14001b02c:	mov    eax,0xb2ff397f
   14001b031:	jge    0x14001b06d
   14001b033:	jmp    FWORD PTR [rdx+rdi*2+0x77a6ff3b]
   14001b03a:	cmp    eax,0x3e74a0ff
   14001b03f:	call   FWORD PTR [rdx-0x6b00c08f]
   14001b045:	outs   dx,BYTE PTR ds:[rsi]
   14001b046:	rex dec DWORD PTR [rsi-0x7700be95]
   14001b04d:	imul   eax,DWORD PTR [rbx-0x1],0xff446682
   14001b054:	jge    0x14001b0b9
   14001b056:	rex.RB (bad) 
   14001b058:	jl     0x14001b0bd
   14001b05a:	rex.RB (bad) 
   14001b05c:	jge    0x14001b0c2
   14001b05e:	rex.RX (bad) 
   14001b060:	(bad)  
   14001b061:	(bad)  
   14001b062:	(bad)  
   14001b063:	inc    DWORD PTR [rdi-0x28]
   14001b066:	(bad)  
   14001b067:	inc    DWORD PTR [rcx-0x2d]
   14001b06a:	(bad)  
   14001b06b:	(bad)  
   14001b06c:	cmp    ecx,edi
   14001b06e:	(bad)  
   14001b06f:	(bad)  
   14001b070:	cmp    eax,0xffffffcc
   14001b075:	(bad)  
   14001b076:	push   rsi
   14001b078:	add    BYTE PTR [rax],al
   14001b07a:	add    BYTE PTR [rax],al
   14001b07c:	add    BYTE PTR [rax],al
   14001b07e:	add    BYTE PTR [rdi],bl
   14001b080:	stc    
   14001b081:	stc    
   14001b082:	stc    
   14001b083:	dec    DWORD PTR [rcx-0x639e7677]
   14001b089:	pushf  
   14001b08a:	pushf  
   14001b08b:	push   rsi
   14001b08c:	hlt    
   14001b08d:	hlt    
   14001b08e:	hlt    
   14001b08f:	jmp    rcx
   14001b091:	loope  0x14001b074
   14001b093:	jmp    rbx
   14001b095:	jrcxz  0x14001b07a
   14001b097:	(bad)  
   14001b098:	out    dx,al
   14001b099:	out    dx,al
   14001b09a:	out    dx,al
   14001b09b:	push   rdx
   14001b09d:	repnz repnz (bad) 
   14001b0a0:	fstp   st(5)
   14001b0a2:	(bad)  
   14001b0a4:	repnz repnz bnd call rdx
   14001b0a9:	movabs ds:0x7fb7ff3882bdff69,eax
   14001b0b2:	cmp    edi,edi
   14001b0b4:	mov    cl,0x7c
   14001b0b6:	cmp    bh,bh
   14001b0b8:	stos   DWORD PTR es:[rdi],eax
   14001b0b9:	jns    0x14001b0f7
   14001b0bb:	jmp    QWORD PTR [rbp-0x6000c28a]
   14001b0c1:	jae    0x14001b101
   14001b0c3:	call   FWORD PTR [rcx-0x6c00c08f]
   14001b0c9:	outs   dx,BYTE PTR ds:[rsi]
   14001b0ca:	rex dec DWORD PTR [rbp-0x7800bd95]
   14001b0d1:	push   0x6580ff43
   14001b0d6:	rex.R (bad) 
   14001b0d8:	jl     0x14001b13d
   14001b0da:	rex.RB (bad) 
   14001b0dc:	jl     0x14001b141
   14001b0de:	rex.RB (bad) 
   14001b0e0:	(bad)  
   14001b0e1:	(bad)  
   14001b0e2:	(bad)  
   14001b0e3:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001b0e7:	inc    DWORD PTR [rsi-0x29]
   14001b0ea:	(bad)  
   14001b0eb:	inc    DWORD PTR [rax-0x2d]
   14001b0ee:	(bad)  
   14001b0ef:	jmp    FWORD PTR [rbp-0x25]
   14001b0f2:	(bad)  
   14001b0f3:	(bad)  
   14001b0f4:	(bad)  
   14001b0f5:	(bad)  
   14001b0f6:	dec    eax
   14001b0f8:	add    BYTE PTR [rax],al
   14001b0fa:	add    BYTE PTR [rax],al
   14001b0fc:	add    BYTE PTR [rax],al
   14001b0fe:	add    BYTE PTR [rdi],bl
   14001b100:	cli    
   14001b101:	cli    
   14001b102:	cli    
   14001b103:	(bad)  
   14001b104:	jp     0x14001b180
   14001b106:	jp     0x14001b176
   14001b108:	add    DWORD PTR [rcx-0xa0a957f],0xdcdcfff5
   14001b112:	fdiv   st(7),st
   14001b114:	loopne 0x14001b0f6
   14001b116:	loopne 0x14001b117
   14001b118:	fcmovu st,st(2)
   14001b11a:	(bad)  
   14001b11c:	repz repz repz (bad) 
   14001b120:	(bad)  
   14001b122:	fdivp  st(7),st
   14001b124:	icebp  
   14001b125:	icebp  
   14001b126:	icebp  
   14001b127:	push   rsp
   14001b129:	call   0xd3ccb107
   14001b12e:	push   rax
   14001b12f:	(bad)  
   14001b130:	mov    esp,0xb6ff3881
   14001b135:	jle    0x14001b170
   14001b137:	push   QWORD PTR [rax-0x5500c485]
   14001b13d:	jns    0x14001b17b
   14001b13f:	jmp    QWORD PTR [rsi+rsi*2+0x739eff3d]
   14001b146:	call   FWORD PTR ds:[rax-0x6d00c090]
   14001b14d:	ins    DWORD PTR es:[rdi],dx
   14001b14e:	dec    DWORD PTR [r11-0x7a00bd96]
   14001b155:	addr32 rex.XB (bad) 
   14001b158:	jg     0x14001b1bf
   14001b15a:	rex.R (bad) 
   14001b15c:	jl     0x14001b1c1
   14001b15e:	rex.RB (bad) 
   14001b160:	(bad)  
   14001b161:	(bad)  
   14001b162:	(bad)  
   14001b163:	call   QWORD PTR [rax-0x21]
   14001b166:	(bad)  
   14001b167:	dec    DWORD PTR [rdx-0x25]
   14001b16a:	(bad)  
   14001b16b:	call   FWORD PTR [rbx+rbx*8-0x1]
   14001b16f:	(bad)  
   14001b170:	fdivr  st(7),st
   14001b172:	(bad)  
   14001b173:	(bad)  
   14001b174:	(bad)  
   14001b175:	(bad)  
   14001b176:	inc    DWORD PTR [rcx+0x0]
   14001b17c:	add    BYTE PTR [rax],al
   14001b17e:	add    BYTE PTR [rdi],bl
   14001b180:	sti    
   14001b181:	sti    
   14001b182:	sti    
   14001b183:	push   rdi
   14001b185:	div    edi
   14001b187:	push   rsi
   14001b189:	div    dh
   14001b18b:	call   rdi
   14001b18d:	xlat   BYTE PTR ds:[rbx]
   14001b18e:	xlat   BYTE PTR ds:[rbx]
   14001b18f:	push   rsi
   14001b191:	div    dh
   14001b193:	push   rbp
   14001b195:	cmc    
   14001b196:	cmc    
   14001b197:	push   rbp
   14001b199:	cmc    
   14001b19a:	cmc    
   14001b19b:	push   rsp
   14001b19d:	hlt    
   14001b19e:	hlt    
   14001b19f:	push   rsp
   14001b1a1:	hlt    
   14001b1a2:	hlt    
   14001b1a3:	push   rbx
   14001b1a5:	repz repz (bad) 
   14001b1a8:	stc    
   14001b1a9:	stc    
   14001b1aa:	stc    
   14001b1ab:	(bad)  
   14001b1ac:	(bad)  
   14001b1ad:	(bad)  
   14001b1ae:	(bad)  
   14001b1af:	(bad)  
   14001b1b0:	(bad)  
   14001b1b1:	(bad)  
   14001b1b2:	(bad)  
   14001b1b3:	(bad)  
   14001b1b4:	(bad)  
   14001b1b5:	(bad)  
   14001b1b6:	(bad)  
   14001b1b7:	(bad)  
   14001b1b8:	(bad)  
   14001b1b9:	(bad)  
   14001b1ba:	(bad)  
   14001b1bb:	(bad)  
   14001b1bc:	(bad)  
   14001b1bd:	(bad)  
   14001b1be:	(bad)  
   14001b1bf:	(bad)  
   14001b1c0:	(bad)  
   14001b1c1:	(bad)  
   14001b1c2:	(bad)  
   14001b1c3:	(bad)  
   14001b1c4:	(bad)  
   14001b1c5:	(bad)  
   14001b1c6:	(bad)  
   14001b1c7:	(bad)  
   14001b1c8:	(bad)  
   14001b1c9:	(bad)  
   14001b1ca:	(bad)  
   14001b1cb:	call   rbx
   14001b1cd:	ret    0xffaf
   14001b1d0:	nop
   14001b1d1:	ins    DWORD PTR es:[rdi],dx
   14001b1d2:	dec    DWORD PTR [r10-0x7b00bd96]
   14001b1d9:	addr32 rex.XB (bad) 
   14001b1dc:	jle    0x14001b242
   14001b1de:	rex.RB (bad) 
   14001b1e0:	(bad)  
   14001b1e1:	(bad)  
   14001b1e2:	(bad)  
   14001b1e3:	(bad)  
   14001b1e4:	(bad)  
   14001b1e5:	(bad)  
   14001b1e6:	(bad)  
   14001b1e7:	(bad)  
   14001b1e8:	(bad)  
   14001b1e9:	(bad)  
   14001b1ea:	(bad)  
   14001b1eb:	(bad)  
   14001b1ec:	(bad)  
   14001b1ed:	(bad)  
   14001b1ee:	(bad)  
   14001b1ef:	out    dx,eax
   14001b1f0:	(bad)  
   14001b1f1:	(bad)  
   14001b1f2:	inc    DWORD PTR [rcx+0x0]
   14001b1f8:	add    BYTE PTR [rax],al
   14001b1fa:	add    BYTE PTR [rax],al
   14001b1fc:	add    BYTE PTR [rax],al
   14001b1fe:	add    BYTE PTR [rdi],bl
   14001b200:	sti    
   14001b201:	sti    
   14001b202:	sti    
   14001b203:	dec    DWORD PTR [rbx-0x619e7475]
   14001b209:	sahf   
   14001b20a:	sahf   
   14001b20b:	push   rsi
   14001b20c:	test   eax,0xb5ffa9a9
   14001b211:	mov    ch,0xb5
   14001b213:	call   rdi
   14001b215:	xlat   BYTE PTR ds:[rbx]
   14001b216:	xlat   BYTE PTR ds:[rbx]
   14001b217:	push   rdx
   14001b219:	repnz repnz dec eax
   14001b21d:	enter  0xffc8,0xd4
   14001b221:	(bad)  
   14001b222:	(bad)  
   14001b223:	(bad)  
   14001b224:	fcmovnu st,st(3)
   14001b226:	(bad)  
   14001b228:	hlt    
   14001b229:	hlt    
   14001b22a:	hlt    
   14001b22b:	(bad)  
   14001b22c:	(bad)  
   14001b22e:	fdivp  st(7),st
   14001b230:	(bad)  
   14001b231:	(bad)  
   14001b232:	(bad)  
   14001b233:	push   rdx
   14001b235:	repnz repnz (bad) 
   14001b238:	(bad)  
   14001b239:	(bad)  
   14001b23a:	(bad)  
   14001b23b:	push   QWORD PTR [rbp+rdi*2+0x7aaeff3a]
   14001b242:	cmp    edi,edi
   14001b244:	test   al,0x78
   14001b246:	cmp    al,0xff
   14001b248:	movabs ds:0x95ff3f729bff3d75,al
   14001b251:	outs   dx,DWORD PTR ds:[rsi]
   14001b252:	rex dec DWORD PTR [rdi-0x7600be94]
   14001b259:	imul   eax,DWORD PTR [rdx-0x1],0xff446683
   14001b260:	(bad)  
   14001b261:	(bad)  
   14001b262:	(bad)  
   14001b263:	inc    DWORD PTR [rax]
	...
   14001b27d:	add    BYTE PTR [rax],al
   14001b27f:	(bad)  
   14001b280:	cld    
   14001b281:	cld    
   14001b282:	cld    
   14001b283:	(bad)  
   14001b284:	jl     0x14001b302
   14001b286:	jl     0x14001b2f6
   14001b288:	xchg   DWORD PTR [rdi-0x8089279],eax
   14001b28e:	idiv   edi
   14001b290:	(bad)  
   14001b291:	(bad)  
   14001b292:	(bad)  
   14001b293:	inc    ebx
   14001b295:	ret    
   14001b296:	ret    
   14001b297:	(bad)  
   14001b298:	call   0x125019b85
   14001b29d:	in     al,0xe4
   14001b29f:	jmp    rdi
   14001b2a1:	out    0xe7,eax
   14001b2a3:	(bad)  
   14001b2a4:	out    dx,al
   14001b2a5:	out    dx,al
   14001b2a6:	out    dx,al
   14001b2a7:	push   rbp
   14001b2a9:	cmc    
   14001b2aa:	cmc    
   14001b2ab:	push   rax
   14001b2ad:	lock lock push rdx
   14001b2b1:	repnz repnz push rsp
   14001b2b5:	hlt    
   14001b2b6:	hlt    
   14001b2b7:	(bad)  
   14001b2b8:	(bad)  
   14001b2b9:	(bad)  
   14001b2ba:	(bad)  
   14001b2bb:	(bad)  
   14001b2bc:	mov    ecx,0xeeff3980
   14001b2c1:	loop   0x14001b297
   14001b2c3:	(bad)  
   14001b2c4:	in     eax,dx
   14001b2c5:	loop   0x14001b29d
   14001b2c7:	jmp    QWORD PTR [rdi-0x5f00c289]
   14001b2cd:	je     0x14001b30d
   14001b2cf:	call   FWORD PTR [rdx-0x6b00c08f]
   14001b2d5:	outs   dx,BYTE PTR ds:[rsi]
   14001b2d6:	rex dec DWORD PTR [rsi-0x7700be94]
   14001b2dd:	imul   eax,DWORD PTR [rbx-0x1],0xffffffff
	...
   14001b2fc:	add    BYTE PTR [rax],al
   14001b2fe:	add    BYTE PTR [rdi],bl
   14001b300:	std    
   14001b301:	std    
   14001b302:	std    
   14001b303:	jmp    QWORD PTR [rsp+riz*4+0x4a4affa4]
   14001b30a:	rex.WX (bad) 
   14001b30c:	stc    
   14001b30d:	stc    
   14001b30e:	stc    
   14001b30f:	inc    esi
   14001b311:	mov    dh,0xff
   14001b314:	jg     0x14001b395
   14001b316:	jg     0x14001b317
   14001b318:	(bad)  
   14001b319:	(bad)  
   14001b31a:	(bad)  
   14001b31b:	(bad)  
   14001b31c:	clc    
   14001b31d:	clc    
   14001b31e:	clc    
   14001b31f:	push   rdi
   14001b321:	div    edi
   14001b323:	push   rdi
   14001b325:	div    edi
   14001b327:	push   rsi
   14001b329:	div    dh
   14001b32b:	push   rsi
   14001b32d:	div    dh
   14001b32f:	push   rbp
   14001b331:	cmc    
   14001b332:	cmc    
   14001b333:	push   rbp
   14001b335:	cmc    
   14001b336:	cmc    
   14001b337:	(bad)  
   14001b338:	(bad)  
   14001b339:	(bad)  
   14001b33a:	(bad)  
   14001b33b:	inc    ebp
   14001b33d:	xchg   ecx,eax
   14001b33e:	push   rax
   14001b33f:	push   rax
   14001b341:	in     al,0xd4
   14001b343:	(bad)  
   14001b344:	out    dx,eax
   14001b345:	jrcxz  0x14001b31d
   14001b347:	jmp    FWORD PTR [rbx-0x5a00c387]
   14001b34d:	jbe    0x14001b38c
   14001b34f:	call   FWORD PTR [rdi-0x6600c18c]
   14001b355:	jno    0x14001b396
   14001b357:	call   QWORD PTR [rbx-0x6400bf92]
   14001b35d:	jle    0x14001b3b8
   14001b35f:	(bad)  
   14001b360:	(bad)  
   14001b361:	(bad)  
   14001b362:	(bad)  
   14001b363:	out    dx,al
	...
   14001b378:	(bad)  
   14001b379:	(bad)  
   14001b37a:	(bad)  
   14001b37b:	add    al,BYTE PTR [rax]
   14001b37d:	add    BYTE PTR [rax],al
   14001b37f:	(bad)  
   14001b380:	std    
   14001b381:	std    
   14001b382:	std    
   14001b383:	call   QWORD PTR [rsi+0x56]
   14001b386:	push   rsi
   14001b387:	loope  0x14001b3c8
   14001b389:	(bad)  
   14001b38a:	(bad)  
   14001b38b:	push   QWORD PTR [rdi+0x77]
   14001b38e:	ja     0x14001b38f
   14001b390:	stos   DWORD PTR es:[rdi],eax
   14001b391:	stos   DWORD PTR es:[rdi],eax
   14001b392:	stos   DWORD PTR es:[rdi],eax
   14001b393:	jmp    FWORD PTR [rcx+0x69]
   14001b396:	imul   edi,edi,0xff8a8a8a
   14001b39c:	rol    al,0xc0
   14001b39f:	(bad)  
   14001b3a0:	stc    
   14001b3a1:	stc    
   14001b3a2:	stc    
   14001b3a3:	(bad)  
   14001b3a4:	out    dx,eax
   14001b3a5:	out    dx,eax
   14001b3a6:	out    dx,eax
   14001b3a7:	(bad)  
   14001b3a8:	fstp   st(5)
   14001b3aa:	(bad)  
   14001b3ac:	div    edi
   14001b3ae:	idiv   edi
   14001b3b0:	lock lock lock call rdi
   14001b3b5:	xlat   BYTE PTR ds:[rbx]
   14001b3b6:	xlat   BYTE PTR ds:[rbx]
   14001b3b7:	jmp    rsp
   14001b3b9:	in     al,0xe4
   14001b3bb:	push   rbx
   14001b3bd:	call   0xe1d0b39c
   14001b3c2:	imul   edi,edi,0xffffffb9
   14001b3c5:	add    DWORD PTR [rcx-0x1],0xffffffb0
   14001b3c9:	jl     0x14001b406
   14001b3cb:	jmp    FWORD PTR [rdx-0x5b00c387]
   14001b3d1:	jbe    0x14001b410
   14001b3d3:	jmp    QWORD PTR [rdx-0x4d00b987]
   14001b3d9:	xchg   ebp,eax
   14001b3da:	jo     0x14001b3db
   14001b3dc:	jmp    0x14001b3c2
   14001b3de:	fdiv   st(7),st
   14001b3e0:	(bad)  
   14001b3e1:	(bad)  
   14001b3e2:	inc    DWORD PTR [rcx+0x0]
	...
   14001b3f8:	ds ds xor eax,DWORD PTR ds:[rax+0x40]
   14001b3fe:	rex jns 0x14001b3ff
   14001b401:	(bad)  
   14001b402:	(bad)  
   14001b403:	(bad)  
   14001b404:	jle    0x14001b484
   14001b406:	jle    0x14001b477
   14001b408:	(bad)  
   14001b40a:	(bad)  
   14001b40b:	(bad)  
   14001b40c:	xor    BYTE PTR [rax],dh
   14001b40e:	xor    bh,bh
   14001b410:	imul   ebp,DWORD PTR [rbx+0x6b],0xffffffff
   14001b414:	rex
   14001b415:	rex
   14001b416:	rex dec DWORD PTR [rsi-0x49007172]
   14001b41d:	mov    dh,0xb6
   14001b41f:	(bad)  
   14001b420:	cli    
   14001b421:	cli    
   14001b422:	cli    
   14001b423:	(bad)  
   14001b424:	clc    
   14001b425:	clc    
   14001b426:	clc    
   14001b427:	push   rsp
   14001b429:	hlt    
   14001b42a:	hlt    
   14001b42b:	(bad)  
   14001b42c:	clc    
   14001b42d:	clc    
   14001b42e:	clc    
   14001b42f:	push   rdx
   14001b431:	repnz bnd jmp rdx
   14001b435:	loop   0x14001b419
   14001b437:	(bad)  
   14001b438:	(bad)  
   14001b43a:	fdivp  st(7),st
   14001b43c:	div    dh
   14001b43e:	idiv   bh
   14001b440:	std    
   14001b441:	std    
   14001b442:	std    
   14001b443:	(bad)  
   14001b444:	(bad)  
   14001b445:	(bad)  
   14001b446:	(bad)  
   14001b447:	(bad)  
   14001b448:	(bad)  
   14001b449:	(bad)  
   14001b44a:	(bad)  
   14001b44b:	(bad)  
   14001b44c:	(bad)  
   14001b44d:	(bad)  
   14001b44e:	(bad)  
   14001b44f:	(bad)  
   14001b450:	(bad)  
   14001b451:	(bad)  
   14001b452:	(bad)  
   14001b453:	(bad)  
   14001b454:	(bad)  
   14001b455:	(bad)  
   14001b456:	(bad)  
   14001b457:	push   rdx
   14001b459:	repnz repnz sar bl,cl
   14001b45d:	sti    
   14001b45e:	sti    
   14001b45f:	add    DWORD PTR [rax],0x0
	...
   14001b479:	add    BYTE PTR [rax],al
   14001b47b:	add    BYTE PTR [rip+0xffffffff9c552d2d],ch        # 0xdc56e1ae
   14001b481:	pushf  
   14001b482:	pushf  
   14001b483:	call   rax
   14001b485:	rcl    al,1
   14001b487:	call   rbp
   14001b489:	(bad)  
   14001b48a:	(bad)  
   14001b48b:	inc    DWORD PTR [rax+0x3cff8080]
   14001b491:	cmp    al,0x3c
   14001b493:	jmp    QWORD PTR [rsi]
   14001b495:	es call FWORD PTR es:[rbx+0x5b]
   14001b49a:	pop    rbx
   14001b49b:	(bad)  
   14001b49c:	out    dx,eax
   14001b49d:	out    dx,eax
   14001b49e:	out    dx,eax
   14001b49f:	(bad)  
   14001b4a0:	sti    
   14001b4a1:	sti    
   14001b4a2:	sti    
   14001b4a3:	(bad)  
   14001b4a4:	cli    
   14001b4a5:	cli    
   14001b4a6:	cli    
   14001b4a7:	(bad)  
   14001b4a8:	cli    
   14001b4a9:	cli    
   14001b4aa:	cli    
   14001b4ab:	(bad)  
   14001b4ac:	cli    
   14001b4ad:	cli    
   14001b4ae:	cli    
   14001b4af:	(bad)  
   14001b4b0:	stc    
   14001b4b1:	stc    
   14001b4b2:	stc    
   14001b4b3:	(bad)  
   14001b4b4:	clc    
   14001b4b5:	clc    
   14001b4b6:	clc    
   14001b4b7:	(bad)  
   14001b4b8:	clc    
   14001b4b9:	clc    
   14001b4ba:	clc    
   14001b4bb:	push   rdi
   14001b4bd:	div    edi
   14001b4bf:	push   rdi
   14001b4c1:	div    edi
   14001b4c3:	push   rsi
   14001b4c5:	div    dh
   14001b4c7:	push   rsp
   14001b4c9:	hlt    
   14001b4ca:	hlt    
   14001b4cb:	(bad)  
   14001b4cc:	in     al,dx
   14001b4cd:	in     al,dx
   14001b4ce:	in     al,dx
   14001b4cf:	jmp    rbx
   14001b4d1:	jrcxz  0x14001b4b6
   14001b4d3:	(bad)  
   14001b4d4:	fcomp  st(0)
   14001b4d6:	fdivr  st,st(7)
   14001b4d8:	add    BYTE PTR [rax],al
   14001b4da:	add    BYTE PTR [rsi],dh
   14001b4dc:	add    BYTE PTR [rax],al
   14001b4de:	add    BYTE PTR [rax+rax*1],al
	...
   14001b4fd:	add    BYTE PTR [rax],al
   14001b4ff:	(bad)  
   14001b500:	rcl    al,1
   14001b502:	sar    bh,1
   14001b504:	jne    0x14001b57b
   14001b506:	jne    0x14001b4f2
   14001b508:	jae    0x14001b57d
   14001b50a:	jae    0x14001b50b
   14001b50c:	push   rdi
   14001b50d:	push   rdi
   14001b50e:	push   rdi
   14001b50f:	dec    DWORD PTR [rcx+0x49]
   14001b512:	rex.WB jmp QWORD PTR [r12]
   14001b516:	and    al,0xff
   14001b518:	es es push QWORD PTR es:[rcx+0x71]
   14001b51e:	jno    0x14001b51f
   14001b520:	fstp   st(5)
   14001b522:	(bad)  
   14001b524:	loopne 0x14001b506
   14001b526:	loopne 0x14001b527
   14001b528:	jmp    0x14001b515
   14001b52a:	jmp    0x14001b52b
   14001b52c:	jrcxz  0x14001b511
   14001b52e:	jrcxz  0x14001b52f
   14001b530:	div    dh
   14001b532:	idiv   bh
   14001b534:	cmc    
   14001b535:	cmc    
   14001b536:	cmc    
   14001b537:	(bad)  
   14001b538:	in     al,dx
   14001b539:	in     al,dx
   14001b53a:	in     al,dx
   14001b53b:	push   rcx
   14001b53d:	icebp  
   14001b53e:	icebp  
   14001b53f:	push   rbp
   14001b541:	cmc    
   14001b542:	cmc    
   14001b543:	push   rbp
   14001b545:	cmc    
   14001b546:	cmc    
   14001b547:	(bad)  
   14001b548:	in     eax,dx
   14001b549:	in     eax,dx
   14001b54a:	in     eax,dx
   14001b54b:	cld    
   14001b54c:	ins    BYTE PTR es:[rdi],dx
   14001b54d:	ins    BYTE PTR es:[rdi],dx
   14001b54e:	ins    BYTE PTR es:[rdi],dx
   14001b54f:	addr32 jl 0x14001b5ce
   14001b552:	jl     0x14001b5c7
   14001b554:	retf   0xcaca
   14001b557:	inc    BYTE PTR [rax]
   14001b559:	add    BYTE PTR [rax],al
   14001b55b:	xor    al,0x0
   14001b55d:	add    BYTE PTR [rax],al
   14001b55f:	add    al,BYTE PTR [rax]
	...
   14001b57d:	add    BYTE PTR [rax],al
   14001b57f:	(bad)  
   14001b580:	(bad)  
   14001b581:	(bad)  
   14001b582:	(bad)  
   14001b583:	jmp    QWORD PTR [rdx+0x62]
   14001b586:	(bad)  
   14001b587:	nop
   14001b588:	push   0xffffffff91c66868
   14001b58d:	xchg   ecx,eax
   14001b58e:	xchg   ecx,eax
   14001b58f:	call   FWORD PTR [rax+0x55ff9898]
   14001b595:	push   rbp
   14001b596:	push   rbp
   14001b597:	push   QWORD PTR [rax]
   14001b599:	xor    BYTE PTR [rax],dh
   14001b59b:	call   QWORD PTR [rcx+0x51]
   14001b59e:	push   rcx
   14001b59f:	(bad)  
   14001b5a0:	jge    0x14001b61f
   14001b5a2:	jge    0x14001b5a3
   14001b5a4:	icebp  
   14001b5a5:	icebp  
   14001b5a6:	icebp  
   14001b5a7:	jmp    rsi
   14001b5a9:	out    0xe6,al
   14001b5ab:	jmp    rdx
   14001b5ad:	loop   0x14001b591
   14001b5af:	push   rsi
   14001b5b1:	div    dh
   14001b5b3:	push   rsi
   14001b5b5:	div    dh
   14001b5b7:	call   rcx
   14001b5b9:	rcl    ecx,1
   14001b5bb:	dec    edi
   14001b5bd:	iret   
   14001b5be:	iret   
   14001b5bf:	call   rcx
   14001b5c1:	rcl    ecx,1
   14001b5c3:	dec    edi
   14001b5c5:	iret   
   14001b5c6:	iret   
   14001b5c7:	dec    ecx
   14001b5c9:	leave  
   14001b5ca:	leave  
   14001b5cb:	cli    
   14001b5cc:	sub    eax,0x627b2d2d
   14001b5d1:	(bad)
   14001b5d6:	int3   
   14001b5d7:	in     eax,dx
   14001b5d8:	add    BYTE PTR [rax],al
   14001b5da:	add    BYTE PTR [rax],ch
	...
   14001b5fc:	add    BYTE PTR [rax],al
   14001b5fe:	add    BYTE PTR [rdi],bl
   14001b600:	std    
   14001b601:	std    
   14001b602:	std    
   14001b603:	(bad)  
   14001b604:	cld    
   14001b605:	cld    
   14001b606:	cld    
   14001b607:	dec    edi
   14001b609:	iret   
   14001b60a:	iret   
   14001b60b:	dec    edx
   14001b60d:	retf   0xffca
   14001b610:	sti    
   14001b611:	sti    
   14001b612:	sti    
   14001b613:	(bad)  
   14001b614:	mov    esp,0x69ffbcbc
   14001b619:	imul   ebp,DWORD PTR [rcx-0x1],0xff4c4c4c
   14001b620:	rex.X
   14001b621:	rex.X
   14001b622:	jmp    QWORD PTR [rsp+r12*4-0x101005c]
   14001b62a:	(bad)  
   14001b62b:	(bad)  
   14001b62c:	std    
   14001b62d:	std    
   14001b62e:	std    
   14001b62f:	(bad)  
   14001b630:	std    
   14001b631:	std    
   14001b632:	std    
   14001b633:	(bad)  
   14001b634:	stc    
   14001b635:	stc    
   14001b636:	stc    
   14001b637:	call   rsp
   14001b639:	(bad)  
   14001b63a:	(bad)  
   14001b63b:	(bad)  
   14001b63c:	cld    
   14001b63d:	cld    
   14001b63e:	cld    
   14001b63f:	push   rsi
   14001b641:	div    dh
   14001b643:	(bad)  
   14001b644:	in     al,dx
   14001b645:	in     al,dx
   14001b646:	in     al,dx
   14001b647:	jmp    rcx
   14001b649:	loope  0x14001b62c
   14001b64b:	(bad)  
   14001b64c:	fcmovu st,st(2)
   14001b64e:	(bad)  
   14001b650:	out    0xe6,al
   14001b652:	out    0xff,al
   14001b654:	mov    edi,0x8fbfbf
   14001b659:	add    BYTE PTR [rax],al
   14001b65b:	(bad)  
	...
   14001b67c:	add    BYTE PTR [rax],al
   14001b67e:	add    BYTE PTR [rdi],bl
   14001b680:	cld    
   14001b681:	cld    
   14001b682:	cld    
   14001b683:	dec    DWORD PTR [rsp+rcx*4-0x5e5e9e74]
   14001b68a:	movabs eax,ds:0xfcfcfcfffbfbfb56
   14001b693:	(bad)  
   14001b694:	cli    
   14001b695:	cli    
   14001b696:	cli    
   14001b697:	(bad)  
   14001b698:	mov    esp,0x67ffbcbc
   14001b69d:	addr32 jmp FWORD PTR [ebx]
   14001b6a1:	sub    ebp,DWORD PTR [rbx]
   14001b6a3:	dec    DWORD PTR [rsi+0x4e]
   14001b6a6:	rex.WRX dec rdx
   14001b6a9:	retf   0xffca
   14001b6ac:	(bad)  
   14001b6ad:	(bad)  
   14001b6ae:	(bad)  
   14001b6af:	(bad)  
   14001b6b0:	(bad)  
   14001b6b1:	(bad)  
   14001b6b2:	(bad)  
   14001b6b3:	(bad)  
   14001b6b4:	cld    
   14001b6b5:	cld    
   14001b6b6:	cld    
   14001b6b7:	call   rdi
   14001b6b9:	xlat   BYTE PTR ds:[rbx]
   14001b6ba:	xlat   BYTE PTR ds:[rbx]
   14001b6bb:	(bad)  
   14001b6bc:	cli    
   14001b6bd:	cli    
   14001b6be:	cli    
   14001b6bf:	call   rbp
   14001b6c1:	(bad)  
   14001b6c2:	(bad)  
   14001b6c3:	inc    ebx
   14001b6c5:	ret    
   14001b6c6:	ret    
   14001b6c7:	(bad)  
   14001b6c8:	call   0x108019fb5
   14001b6cd:	mov    edi,0xb2b2b2ff
   14001b6d3:	movabs eax,ds:0x15000000
	...
   14001b6fc:	add    BYTE PTR [rax],al
   14001b6fe:	add    BYTE PTR [rdi],bl
   14001b700:	sti    
   14001b701:	sti    
   14001b702:	sti    
   14001b703:	(bad)  
   14001b704:	jl     0x14001b782
   14001b706:	jl     0x14001b776
   14001b708:	add    DWORD PTR [rbx-0x505957d],0xfffffffa
   14001b70f:	(bad)  
   14001b710:	(bad)  
   14001b712:	(bad)  
   14001b714:	in     eax,dx
   14001b715:	in     eax,dx
   14001b716:	in     eax,dx
   14001b717:	(bad)  
   14001b718:	out    dx,al
   14001b719:	out    dx,al
   14001b71a:	out    dx,al
   14001b71b:	(bad)  
   14001b71c:	mov    edx,0x5dffbaba
   14001b721:	pop    rbp
   14001b722:	pop    rbp
   14001b723:	push   QWORD PTR [rsp+rsi*2+0x74]
   14001b727:	jmp    FWORD PTR [rbx+0x6b]
   14001b72a:	imul   edi,edi,0xfffffffb
   14001b72d:	sti    
   14001b72e:	sti    
   14001b72f:	(bad)  
   14001b730:	(bad)  
   14001b731:	(bad)  
   14001b732:	(bad)  
   14001b733:	(bad)  
   14001b734:	std    
   14001b735:	std    
   14001b736:	std    
   14001b737:	call   rbp
   14001b739:	(bad)  
   14001b73a:	(bad)  
   14001b73b:	push   rcx
   14001b73d:	icebp  
   14001b73e:	icebp  
   14001b73f:	inc    edx
   14001b741:	ret    0xffc2
   14001b744:	mov    ecx,0xe5ffb9b9
   14001b749:	in     eax,0xe5
   14001b74b:	jmp    QWORD PTR [rcx+0x9ca1a1]
   14001b751:	add    BYTE PTR [rax],al
   14001b753:	adc    eax,0x0
	...
   14001b77c:	add    BYTE PTR [rax],al
   14001b77e:	add    BYTE PTR [rdi],bl
   14001b780:	sti    
   14001b781:	sti    
   14001b782:	sti    
   14001b783:	(bad)  
   14001b784:	clc    
   14001b785:	clc    
   14001b786:	clc    
   14001b787:	(bad)  
   14001b788:	clc    
   14001b789:	clc    
   14001b78a:	clc    
   14001b78b:	(bad)  
   14001b78c:	stc    
   14001b78d:	stc    
   14001b78e:	stc    
   14001b78f:	(bad)  
   14001b790:	stc    
   14001b791:	stc    
   14001b792:	stc    
   14001b793:	(bad)  
   14001b794:	cli    
   14001b795:	cli    
   14001b796:	cli    
   14001b797:	(bad)  
   14001b798:	cli    
   14001b799:	cli    
   14001b79a:	cli    
   14001b79b:	(bad)  
   14001b79c:	sti    
   14001b79d:	sti    
   14001b79e:	sti    
   14001b79f:	(bad)  
   14001b7a0:	(bad)  
   14001b7a2:	fdiv   st(7),st
   14001b7a4:	jb     0x14001b818
   14001b7a6:	jb     0x14001b7a7
   14001b7a8:	ja     0x14001b821
   14001b7aa:	ja     0x14001b7ab
   14001b7ac:	mov    bl,0xb3
   14001b7ae:	mov    bl,0xff
   14001b7b0:	cld    
   14001b7b1:	cld    
   14001b7b2:	cld    
   14001b7b3:	push   rbp
   14001b7b5:	cmc    
   14001b7b6:	cmc    
   14001b7b7:	dec    edi
   14001b7b9:	iret   
   14001b7ba:	iret   
   14001b7bb:	jmp    rsi
   14001b7bd:	out    0xe6,al
   14001b7bf:	(bad)  
   14001b7c0:	call   0x12b01a0ad
   14001b7c5:	(bad)  
   14001b7c6:	(bad)  
   14001b7c7:	call   rbx
   14001b7c9:	rcl    ebx,cl
   14001b7cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b7cc:	add    BYTE PTR [rax],al
   14001b7ce:	add    BYTE PTR [rip+0x0],dl        # 0x14001b7d4
	...
   14001b7fc:	add    BYTE PTR [rax],al
   14001b7fe:	add    BYTE PTR [rdi],bl
   14001b800:	cli    
   14001b801:	cli    
   14001b802:	cli    
   14001b803:	dec    DWORD PTR [rdx-0x619e7576]
   14001b809:	sahf   
   14001b80a:	sahf   
   14001b80b:	push   rsi
   14001b80c:	clc    
   14001b80d:	clc    
   14001b80e:	clc    
   14001b80f:	(bad)  
   14001b810:	clc    
   14001b811:	clc    
   14001b812:	clc    
   14001b813:	(bad)  
   14001b814:	stc    
   14001b815:	stc    
   14001b816:	stc    
   14001b817:	(bad)  
   14001b818:	stc    
   14001b819:	stc    
   14001b81a:	stc    
   14001b81b:	(bad)  
   14001b81c:	cli    
   14001b81d:	cli    
   14001b81e:	cli    
   14001b81f:	(bad)  
   14001b820:	jmp    0x12901a20e
   14001b825:	call   0xf1b3b812
   14001b82a:	mov    cl,0xff
   14001b82c:	popf   
   14001b82d:	popf   
   14001b82e:	popf   
   14001b82f:	dec    ebx
   14001b831:	retf   
   14001b832:	retf   
   14001b833:	call   rsi
   14001b835:	(bad)  
   14001b836:	(bad)  
   14001b837:	(bad)  
   14001b838:	mov    ebx,0xe2ffbbbb
   14001b83d:	loop   0x14001b821
   14001b83f:	(bad)  
   14001b840:	(bad)  
   14001b841:	(bad)  
   14001b842:	(bad)  
   14001b843:	call   rbx
   14001b845:	rcl    ebx,cl
   14001b847:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b848:	add    BYTE PTR [rax],al
   14001b84a:	add    BYTE PTR [rip+0x0],dl        # 0x14001b850
	...
   14001b87c:	add    BYTE PTR [rax],al
   14001b87e:	add    BYTE PTR [rdi],bl
   14001b880:	stc    
   14001b881:	stc    
   14001b882:	stc    
   14001b883:	(bad)  
   14001b884:	jp     0x14001b900
   14001b886:	jp     0x14001b8f6
   14001b888:	add    DWORD PTR [rcx-0x909957f],0xdcdcfff6
   14001b892:	fdiv   st(7),st
   14001b894:	(bad)  
   14001b895:	(bad)  
   14001b896:	(bad)  
   14001b897:	(bad)  
   14001b898:	(bad)  
   14001b899:	(bad)  
   14001b89a:	(bad)  
   14001b89b:	(bad)  
   14001b89c:	fstp   st(5)
   14001b89e:	(bad)  
   14001b8a0:	jrcxz  0x14001b885
   14001b8a2:	jrcxz  0x14001b8a3
   14001b8a4:	hlt    
   14001b8a5:	hlt    
   14001b8a6:	hlt    
   14001b8a7:	(bad)  
   14001b8a8:	call   0x12201a195
   14001b8ad:	loope  0x14001b890
   14001b8af:	jmp    FWORD PTR [rax-0x33005758]
   14001b8b5:	int3   
   14001b8b6:	int3   
   14001b8b7:	push   QWORD PTR [rdi-0x10004849]
   14001b8bd:	out    dx,eax
   14001b8be:	out    dx,eax
   14001b8bf:	call   rbx
   14001b8c1:	rcl    ebx,cl
   14001b8c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b8c4:	add    BYTE PTR [rax],al
   14001b8c6:	add    BYTE PTR [rip+0x0],dl        # 0x14001b8cc
	...
   14001b8fc:	add    BYTE PTR [rax],al
   14001b8fe:	add    BYTE PTR [rdi],bl
   14001b900:	cli    
   14001b901:	cli    
   14001b902:	cli    
   14001b903:	(bad)  
   14001b904:	stc    
   14001b905:	stc    
   14001b906:	stc    
   14001b907:	(bad)  
   14001b908:	stc    
   14001b909:	stc    
   14001b90a:	stc    
   14001b90b:	(bad)  
   14001b90c:	cli    
   14001b90d:	cli    
   14001b90e:	cli    
   14001b90f:	(bad)  
   14001b910:	cli    
   14001b911:	cli    
   14001b912:	cli    
   14001b913:	(bad)  
   14001b914:	cli    
   14001b915:	cli    
   14001b916:	cli    
   14001b917:	(bad)  
   14001b918:	cli    
   14001b919:	cli    
   14001b91a:	cli    
   14001b91b:	(bad)  
   14001b91c:	sti    
   14001b91d:	sti    
   14001b91e:	sti    
   14001b91f:	(bad)  
   14001b920:	sti    
   14001b921:	sti    
   14001b922:	sti    
   14001b923:	(bad)  
   14001b924:	sti    
   14001b925:	sti    
   14001b926:	sti    
   14001b927:	push   rdi
   14001b929:	div    edi
   14001b92b:	push   rdx
   14001b92d:	repnz bnd jmp rbp
   14001b931:	in     eax,0xe5
   14001b933:	push   QWORD PTR [rax-0x28004f50]
   14001b939:	xlat   BYTE PTR ds:[rbx]
   14001b93a:	xlat   BYTE PTR ds:[rbx]
   14001b93b:	in     eax,dx
   14001b93c:	retf   
   14001b93d:	retf   
   14001b93e:	retf   
   14001b93f:	mov    DWORD PTR [rax],eax
   14001b941:	add    BYTE PTR [rax],al
   14001b943:	adc    al,BYTE PTR [rax]
	...
   14001b97d:	add    BYTE PTR [rax],al
   14001b97f:	or     eax,DWORD PTR [rax]
   14001b981:	add    BYTE PTR [rax],al
   14001b983:	adc    BYTE PTR [rax],al
   14001b985:	add    BYTE PTR [rax],al
   14001b987:	adc    BYTE PTR [rax],al
   14001b989:	add    BYTE PTR [rax],al
   14001b98b:	adc    BYTE PTR [rax],al
   14001b98d:	add    BYTE PTR [rax],al
   14001b98f:	adc    BYTE PTR [rax],al
   14001b991:	add    BYTE PTR [rax],al
   14001b993:	adc    BYTE PTR [rax],al
   14001b995:	add    BYTE PTR [rax],al
   14001b997:	adc    BYTE PTR [rax],al
   14001b999:	add    BYTE PTR [rax],al
   14001b99b:	adc    BYTE PTR [rax],al
   14001b99d:	add    BYTE PTR [rax],al
   14001b99f:	adc    BYTE PTR [rax],al
   14001b9a1:	add    BYTE PTR [rax],al
   14001b9a3:	adc    BYTE PTR [rax],al
   14001b9a5:	add    BYTE PTR [rax],al
   14001b9a7:	adc    BYTE PTR [rax],al
   14001b9a9:	add    BYTE PTR [rax],al
   14001b9ab:	adc    BYTE PTR [rax],al
   14001b9ad:	add    BYTE PTR [rax],al
   14001b9af:	adc    BYTE PTR [rax],al
   14001b9b1:	add    BYTE PTR [rax],al
   14001b9b3:	adc    BYTE PTR [rax],al
   14001b9b5:	add    BYTE PTR [rax],al
   14001b9b7:	adc    BYTE PTR [rax],al
   14001b9b9:	add    BYTE PTR [rax],al
   14001b9bb:	(bad)  
   14001b9bc:	add    BYTE PTR [rax],al
   14001b9be:	add    BYTE PTR [rax+rax*1],al
	...
   14001b9f5:	add    BYTE PTR [rax],al
   14001b9f7:	add    ah,bh
   14001b9f9:	(bad)  
   14001b9fa:	cmp    BYTE PTR [rdi],0xe0
   14001b9fd:	add    DWORD PTR [rax],eax
   14001b9ff:	(bad)  
   14001ba00:	add    BYTE PTR [rax],0x0
   14001ba03:	(bad)  
   14001ba04:	add    BYTE PTR [rax],0x0
   14001ba07:	(bad)  
   14001ba08:	add    BYTE PTR [rax],0x0
   14001ba0b:	(bad)  
   14001ba0c:	add    BYTE PTR [rax],0x0
   14001ba0f:	add    DWORD PTR [rax-0x80000000],eax
   14001ba15:	add    BYTE PTR [rax],al
   14001ba17:	add    BYTE PTR [rax-0x80000000],al
   14001ba1d:	add    BYTE PTR [rax],al
   14001ba1f:	add    BYTE PTR [rax-0x80000000],al
   14001ba25:	add    BYTE PTR [rax],al
   14001ba27:	add    BYTE PTR [rax-0x80000000],al
   14001ba2d:	add    BYTE PTR [rax],al
   14001ba2f:	add    BYTE PTR [rax-0x80000000],al
   14001ba35:	add    BYTE PTR [rax],al
   14001ba37:	add    DWORD PTR [rax-0x7fe10000],eax
   14001ba3d:	add    BYTE PTR [rax],al
   14001ba3f:	(bad)  
   14001ba40:	add    BYTE PTR [rax],0x0
   14001ba43:	(bad)  
   14001ba44:	add    BYTE PTR [rax],al
   14001ba46:	add    BYTE PTR [rdi],bl
   14001ba48:	add    BYTE PTR [rax],al
   14001ba4a:	add    BYTE PTR [rdi],bh
   14001ba4c:	add    BYTE PTR [rax],0x0
   14001ba4f:	(bad)  
   14001ba50:	add    BYTE PTR [rax],0x0
   14001ba53:	(bad)  
   14001ba54:	add    BYTE PTR [rax],0x0
   14001ba57:	jg     0x14001b9d9
   14001ba59:	add    BYTE PTR [rax],al
   14001ba5b:	jg     0x14001b9dd
   14001ba5d:	add    BYTE PTR [rax],al
   14001ba5f:	inc    DWORD PTR [rax-0x7f00ff00]
   14001ba65:	add    BYTE PTR [rbx],al
   14001ba67:	inc    DWORD PTR [rax-0x7f00f900]
   14001ba6d:	add    BYTE PTR [rdi],cl
   14001ba6f:	inc    DWORD PTR [rax-0x7f00e100]
   14001ba75:	add    BYTE PTR [rdi],bh
   14001ba77:	jmp    FWORD PTR [rax]
   14001ba79:	add    BYTE PTR [rax],al
   14001ba7b:	add    BYTE PTR [rax],dl
   14001ba7d:	add    BYTE PTR [rax],al
   14001ba7f:	add    BYTE PTR [rax],ah
   14001ba81:	add    BYTE PTR [rax],al
   14001ba83:	add    BYTE PTR [rcx],al
   14001ba85:	add    BYTE PTR [rax],ah
	...
   14001ba9f:	add    BYTE PTR [rbx+0x1fabab],ch
	...
   14001bab9:	add    BYTE PTR [rax],al
   14001babb:	add    BYTE PTR [rbp-0x60bc6263],bl
   14001bac1:	lahf   
   14001bac2:	lahf   
   14001bac3:	mov    ah,0xa2
   14001bac5:	movabs ds:0xa5a5eea4a4a4f6a2,al
   14001bace:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bacf:	xchg   edx,eax
   14001bad0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad3:	(bad)  
	...
   14001bae0:	lods   al,BYTE PTR ds:[rsi]
   14001bae1:	lods   al,BYTE PTR ds:[rsi]
   14001bae2:	lods   al,BYTE PTR ds:[rsi]
   14001bae3:	out    dx,eax
   14001bae4:	stos   DWORD PTR es:[rdi],eax
   14001bae5:	stos   DWORD PTR es:[rdi],eax
   14001bae6:	stos   DWORD PTR es:[rdi],eax
   14001bae7:	outs   dx,DWORD PTR ds:[rsi]
   14001bae8:	stos   BYTE PTR es:[rdi],al
   14001bae9:	stos   BYTE PTR es:[rdi],al
   14001baea:	stos   BYTE PTR es:[rdi],al
   14001baeb:	(bad)  
   14001baec:	add    BYTE PTR [rax],al
   14001baee:	add    BYTE PTR [rax],al
   14001baf0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf3:	add    al,0xa3
   14001baf5:	movabs ds:0xadadbea0a0a049a3,eax
   14001bafe:	lods   eax,DWORD PTR ds:[rsi]
   14001baff:	jmp    rbp
   14001bb01:	in     eax,0xe5
   14001bb03:	(bad)  
   14001bb04:	std    
   14001bb05:	std    
   14001bb06:	std    
   14001bb07:	(bad)  
   14001bb08:	(bad)  
   14001bb09:	(bad)  
   14001bb0a:	(bad)  
   14001bb0b:	(bad)  
   14001bb0c:	sti    
   14001bb0d:	sti    
   14001bb0e:	sti    
   14001bb0f:	push   rcx
   14001bb11:	icebp  
   14001bb12:	icebp  
   14001bb13:	(bad)  
	...
   14001bb20:	scas   eax,DWORD PTR es:[rdi]
   14001bb21:	scas   eax,DWORD PTR es:[rdi]
   14001bb22:	scas   eax,DWORD PTR es:[rdi]
   14001bb23:	inc    ecx
   14001bb25:	rol    ecx,0xff
   14001bb28:	scas   al,BYTE PTR es:[rdi]
   14001bb29:	scas   al,BYTE PTR es:[rdi]
   14001bb2a:	scas   al,BYTE PTR es:[rdi]
   14001bb2b:	sti    
   14001bb2c:	stos   BYTE PTR es:[rdi],al
   14001bb2d:	stos   BYTE PTR es:[rdi],al
   14001bb2e:	stos   BYTE PTR es:[rdi],al
   14001bb2f:	loopne 0x14001bad9
   14001bb31:	test   al,0xa8
   14001bb33:	hlt    
   14001bb34:	mov    bl,0xb3
   14001bb36:	mov    bl,0xff
   14001bb38:	int    0xcd
   14001bb3a:	int    0xff
   14001bb3c:	div    dh
   14001bb3e:	idiv   bh
   14001bb40:	scas   al,BYTE PTR es:[rdi]
   14001bb41:	icebp  
   14001bb42:	(bad)  
   14001bb43:	call   QWORD PTR [rbx-0x25]
   14001bb46:	(bad)  
   14001bb47:	(bad)  
   14001bb48:	cmp    eax,0x3fffffd0
   14001bb4d:	retf   
   14001bb4e:	(bad)  
   14001bb4f:	call   FWORD PTR [rbx-0x1e]
   14001bb55:	(bad)  
   14001bb56:	push   QWORD PTR [rdi+0x0]
   14001bb5c:	add    BYTE PTR [rax],al
   14001bb5e:	add    BYTE PTR [rax],al
   14001bb60:	mov    bl,0xb3
   14001bb62:	mov    bl,0xff
   14001bb64:	(bad)  
   14001bb66:	fdiv   st(7),st
   14001bb68:	repz repz repz jmp rsp
   14001bb6d:	in     al,0xe4
   14001bb6f:	jmp    rdi
   14001bb71:	out    0xe7,eax
   14001bb73:	(bad)  
   14001bb74:	jmp    0x12901a562
   14001bb79:	call   0x13f00bb66
   14001bb7e:	(bad)  
   14001bb7f:	call   FWORD PTR [rdi-0x17]
   14001bb82:	(bad)  
   14001bb83:	call   QWORD PTR [rcx-0x20]
   14001bb86:	(bad)  
   14001bb87:	inc    DWORD PTR [rsi-0x29]
   14001bb8a:	(bad)  
   14001bb8b:	call   rdx
   14001bb8d:	hlt    
   14001bb8e:	(bad)  
   14001bb8f:	push   QWORD PTR [rdi+rax*8]
   14001bb92:	(bad)  
   14001bb93:	(bad)  
   14001bb94:	(bad)  
   14001bb95:	(bad)  
   14001bb96:	push   rsi
	...
   14001bba0:	mov    dh,0xb6
   14001bba2:	mov    dh,0xff
   14001bba4:	int    0xcd
   14001bba6:	int    0xff
   14001bba8:	loop   0x14001bb8c
   14001bbaa:	loop   0x14001bbab
   14001bbac:	in     eax,dx
   14001bbad:	in     eax,dx
   14001bbae:	in     eax,dx
   14001bbaf:	(bad)  
   14001bbb0:	in     eax,dx
   14001bbb1:	in     eax,dx
   14001bbb2:	in     eax,dx
   14001bbb3:	(bad)  
   14001bbb4:	stc    
   14001bbb5:	stc    
   14001bbb6:	stc    
   14001bbb7:	(bad)  
   14001bbb8:	(bad)  
   14001bbb9:	(bad)  
   14001bbba:	(bad)  
   14001bbbb:	(bad)  
   14001bbbc:	(bad)  
   14001bbbd:	(bad)  
   14001bbbe:	(bad)  
   14001bbbf:	jmp    QWORD PTR [rcx-0x13]
   14001bbc2:	(bad)  
   14001bbc3:	call   FWORD PTR [rdx-0x19]
   14001bbc6:	(bad)  
   14001bbc7:	push   QWORD PTR [rdi-0xe]
   14001bbcd:	(bad)  
   14001bbce:	(bad)  
   14001bbcf:	(bad)  
   14001bbd0:	(bad)  
   14001bbd1:	(bad)  
   14001bbd2:	(bad)  
   14001bbd3:	(bad)  
   14001bbd4:	(bad)  
   14001bbd5:	(bad)  
   14001bbd6:	(bad)  
   14001bbd7:	(bad)  
   14001bbd8:	(bad)  
   14001bbd9:	(bad)  
   14001bbda:	push   rbp
   14001bbdc:	(bad)  
   14001bbdd:	(bad)  
   14001bbde:	push   QWORD PTR [rsi-0x464647]
   14001bbe4:	fstp   st(5)
   14001bbe6:	(bad)  
   14001bbe8:	div    dh
   14001bbea:	idiv   bh
   14001bbec:	lock lock lock (bad) 
   14001bbf0:	cli    
   14001bbf1:	cli    
   14001bbf2:	cli    
   14001bbf3:	call   rax
   14001bbf5:	mov    esp,0x6f91ffa4
   14001bbfa:	rex.RB (bad) 
   14001bbfc:	(bad)  
   14001bbfd:	(bad)  
   14001bbfe:	(bad)  
   14001bbff:	jmp    QWORD PTR [rbx-0x13]
   14001bc02:	(bad)  
   14001bc03:	jmp    QWORD PTR [rcx-0x14]
   14001bc06:	(bad)  
   14001bc07:	call   FWORD PTR [rax-0x1b]
   14001bc0a:	(bad)  
   14001bc0b:	dec    DWORD PTR [rbp-0x23]
   14001bc0e:	(bad)  
   14001bc0f:	inc    DWORD PTR [rdx-0x2c]
   14001bc12:	(bad)  
   14001bc13:	push   QWORD PTR [rdi]
   14001bc15:	int3   
   14001bc16:	(bad)  
   14001bc17:	push   QWORD PTR [rax]
   14001bc19:	ret    
   14001bc1a:	(bad)  
   14001bc1b:	call   FWORD PTR [rcx-0x42000020]
   14001bc21:	mov    ebp,0xceceffbd
   14001bc26:	(bad)  
   14001bc27:	jmp    rsp
   14001bc29:	in     al,0xe4
   14001bc2b:	push   rdx
   14001bc2d:	repnz repnz (bad) 
   14001bc30:	(bad)  
   14001bc31:	(bad)  
   14001bc32:	(bad)  
   14001bc33:	jmp    FWORD PTR [rcx-0x6600b682]
   14001bc39:	jno    0x14001bc7a
   14001bc3b:	push   rbx
   14001bc3d:	out    dx,eax
   14001bc3e:	(bad)  
   14001bc3f:	call   FWORD PTR [rbx+0x63fffff4]
   14001bc45:	in     eax,dx
   14001bc46:	(bad)  
   14001bc47:	jmp    QWORD PTR [rax-0x15]
   14001bc4a:	(bad)  
   14001bc4b:	call   QWORD PTR [rsi-0x1d]
   14001bc4e:	(bad)  
   14001bc4f:	dec    DWORD PTR [rbx-0x25]
   14001bc52:	(bad)  
   14001bc53:	inc    DWORD PTR [rax-0x2e]
   14001bc56:	(bad)  
   14001bc57:	push   QWORD PTR [rip+0x38ffffca]        # 0x17901bc27
   14001bc5d:	(bad)  
   14001bc60:	rol    al,0xc0
   14001bc63:	inc    esi
   14001bc65:	mov    dh,0xff
   14001bc68:	in     eax,dx
   14001bc69:	in     eax,dx
   14001bc6a:	in     eax,dx
   14001bc6b:	push   rbp
   14001bc6d:	cmc    
   14001bc6e:	cmc    
   14001bc6f:	(bad)  
   14001bc70:	(bad)  
   14001bc71:	(bad)  
   14001bc72:	(bad)  
   14001bc73:	jmp    FWORD PTR [rbp-0x5d00c486]
   14001bc79:	jne    0x14001bcb8
   14001bc7b:	push   QWORD PTR [rbx-0xc008e6b]
   14001bc81:	out    dx,eax
   14001bc82:	(bad)  
   14001bc83:	(bad)  
   14001bc84:	(bad)  
   14001bc85:	(bad)  
   14001bc86:	(bad)  
   14001bc87:	(bad)  
   14001bc88:	(bad)  
   14001bc89:	(bad)  
   14001bc8a:	(bad)  
   14001bc8b:	(bad)  
   14001bc8c:	(bad)  
   14001bc8d:	(bad)  
   14001bc8e:	(bad)  
   14001bc8f:	(bad)  
   14001bc90:	jmp    0x14001bc8d
   14001bc92:	(bad)  
   14001bc93:	push   QWORD PTR [rsi-0x1e]
   14001bc96:	(bad)  
   14001bc97:	(bad)  
   14001bc98:	ds sar edi,1
   14001bc9b:	push   QWORD PTR [rbx]
   14001bc9d:	enter  0xffff,0xb3
   14001bca1:	mov    bl,0xb3
   14001bca3:	jmp    FWORD PTR [rbp-0x5b005253]
   14001bca9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bcaa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bcab:	(bad)  
   14001bcac:	out    dx,eax
   14001bcad:	out    dx,eax
   14001bcae:	out    dx,eax
   14001bcaf:	(bad)  
   14001bcb0:	(bad)  
   14001bcb1:	(bad)  
   14001bcb2:	(bad)  
   14001bcb3:	(bad)  
   14001bcb4:	mov    ebx,0xabff4586
   14001bcb9:	jns    0x14001bcf7
   14001bcbb:	jmp    QWORD PTR [rax-0x6b00c18c]
   14001bcc1:	outs   dx,BYTE PTR ds:[rsi]
   14001bcc2:	rex dec DWORD PTR [rcx+0x7eff4269]
   14001bcc9:	fs rex.RB (bad) 
   14001bccc:	jge    0x14001bd32
   14001bcce:	rex.RX jmp FWORD PTR [rsp+r11*4-0x4140077]
   14001bcd6:	(bad)  
   14001bcd7:	inc    DWORD PTR [rdi-0x28]
   14001bcda:	(bad)  
   14001bcdb:	dec    DWORD PTR [rax-0x2e]
   14001bcde:	(bad)  
   14001bcdf:	jmp    FWORD PTR [rdi+0x59ffafaf]
   14001bce5:	pop    rcx
   14001bce6:	pop    rcx
   14001bce7:	push   QWORD PTR [rbp+0x75]
   14001bcea:	jne    0x14001bceb
   14001bcec:	mov    cl,0xb1
   14001bcee:	mov    cl,0xff
   14001bcf0:	div    dh
   14001bcf2:	idiv   bh
   14001bcf4:	loopne 0x14001bcba
   14001bcf6:	movabs eax,ds:0x3c78a9ff3d80b6ff
   14001bcff:	call   FWORD PTR [rsi-0x6d00c18d]
   14001bd05:	ins    DWORD PTR es:[rdi],dx
   14001bd06:	inc    DWORD PTR [r15+0x7dff4368]
   14001bd0d:	fs rex.RB (bad) 
   14001bd10:	jge    0x14001bd77
   14001bd12:	rex.RXB (bad) 
   14001bd14:	(bad)  
   14001bd15:	(bad)  
   14001bd16:	(bad)  
   14001bd17:	call   QWORD PTR [rbx-0x21]
   14001bd1a:	(bad)  
   14001bd1b:	jmp    FWORD PTR [rax-0x64000014]
   14001bd21:	fwait
   14001bd22:	fwait
   14001bd23:	(bad)  
   14001bd24:	jg     0x14001bda5
   14001bd26:	jg     0x14001bd27
   14001bd28:	xor    al,0x34
   14001bd2a:	xor    al,0xff
   14001bd2c:	jl     0x14001bdaa
   14001bd2e:	jl     0x14001bd2f
   14001bd30:	(bad)  
   14001bd32:	fdiv   st(7),st
   14001bd34:	std    
   14001bd35:	std    
   14001bd36:	std    
   14001bd37:	(bad)  
   14001bd38:	(bad)  
   14001bd39:	(bad)  
   14001bd3a:	(bad)  
   14001bd3b:	(bad)  
   14001bd3c:	(bad)  
   14001bd3d:	(bad)  
   14001bd3e:	(bad)  
   14001bd3f:	(bad)  
   14001bd40:	(bad)  
   14001bd41:	(bad)  
   14001bd42:	(bad)  
   14001bd43:	(bad)  
   14001bd44:	(bad)  
   14001bd45:	(bad)  
   14001bd46:	(bad)  
   14001bd47:	call   rax
   14001bd49:	shl    DWORD PTR [rax+0x436785ff],0xff
   14001bd50:	jge    0x14001bdb5
   14001bd52:	rex.RB (bad) 
   14001bd54:	(bad)  
   14001bd55:	(bad)  
   14001bd56:	(bad)  
   14001bd57:	(bad)  
   14001bd58:	(bad)  
   14001bd59:	(bad)  
   14001bd5a:	push   rbp
   14001bd5c:	(bad)  
   14001bd5d:	(bad)  
   14001bd5e:	push   QWORD PTR [rbp-0x424243]
   14001bd64:	movabs eax,ds:0x4dffa8a8a8ffa1a1
   14001bd6d:	rex.WRB
   14001bd6e:	rex.WRB call QWORD PTR [r14-0x100696a]
   14001bd75:	(bad)  
   14001bd76:	(bad)  
   14001bd77:	(bad)  
   14001bd78:	std    
   14001bd79:	std    
   14001bd7a:	std    
   14001bd7b:	(bad)  
   14001bd7c:	(bad)  
   14001bd7d:	(bad)  
   14001bd7e:	(bad)  
   14001bd7f:	push   QWORD PTR [rcx-0x1500c182]
   14001bd85:	loopne 0x14001bd5a
   14001bd87:	call   FWORD PTR [rcx-0x7100c08f]
   14001bd8d:	imul   eax,DWORD PTR [rcx-0x1],0xffffff85
   14001bd91:	imul   eax,DWORD PTR [rdi-0x1],0xf4ffffff
	...
   14001bda0:	rol    ecx,0xc1
   14001bda3:	dec    edi
   14001bda5:	iret   
   14001bda6:	iret   
   14001bda7:	jmp    rbp
   14001bda9:	in     eax,0xe5
   14001bdab:	(bad)  
   14001bdac:	mov    ecx,0x52ffb9b9
   14001bdb1:	push   rdx
   14001bdb2:	push   rdx
   14001bdb3:	inc    eax
   14001bdb5:	rol    al,0xff
   14001bdb8:	clc    
   14001bdb9:	clc    
   14001bdba:	clc    
   14001bdbb:	(bad)  
   14001bdbc:	cli    
   14001bdbd:	cli    
   14001bdbe:	cli    
   14001bdbf:	(bad)  
   14001bdc0:	faddp  st(2),st
   14001bdc2:	movabs ds:0x3d75a3ff4782b2ff,al
   14001bdcb:	call   FWORD PTR [rbp-0x3500b488]
   14001bdd1:	mov    edx,0xffffffa7
   14001bdd6:	push   QWORD PTR [rbp+0x0]
   14001bddc:	add    BYTE PTR [rax],al
   14001bdde:	add    BYTE PTR [rax],al
   14001bde0:	mov    esi,0xdeffbebe
   14001bde5:	(bad)  
   14001bde7:	push   rdi
   14001bde9:	div    edi
   14001bdeb:	(bad)  
   14001bdec:	stc    
   14001bded:	stc    
   14001bdee:	stc    
   14001bdef:	(bad)  
   14001bdf0:	mov    ebx,0x9cffbbbb
   14001bdf5:	pushf  
   14001bdf6:	pushf  
   14001bdf7:	(bad)  
   14001bdf8:	in     eax,dx
   14001bdf9:	in     eax,dx
   14001bdfa:	in     eax,dx
   14001bdfb:	jmp    rcx
   14001bdfd:	loope  0x14001bde0
   14001bdff:	(bad)  
   14001be00:	(bad)  
   14001be01:	(bad)  
   14001be02:	(bad)  
   14001be03:	(bad)  
   14001be04:	std    
   14001be05:	std    
   14001be06:	std    
   14001be07:	(bad)  
   14001be08:	(bad)  
   14001be09:	(bad)  
   14001be0a:	(bad)  
   14001be0b:	(bad)  
   14001be0c:	(bad)  
   14001be0d:	(bad)  
   14001be0e:	(bad)  
   14001be0f:	(bad)  
   14001be10:	in     al,dx
   14001be11:	in     al,dx
   14001be12:	in     al,dx
   14001be13:	inc    DWORD PTR [rax]
	...
   14001be1d:	add    BYTE PTR [rax],al
   14001be1f:	add    BYTE PTR [rbx-0x31004445],bh
   14001be25:	(bad)  
   14001be26:	(bad)  
   14001be27:	jmp    rsp
   14001be29:	in     al,0xe4
   14001be2b:	push   rsi
   14001be2d:	div    dh
   14001be2f:	(bad)  
   14001be30:	clc    
   14001be31:	clc    
   14001be32:	clc    
   14001be33:	push   rdi
   14001be35:	div    edi
   14001be37:	(bad)  
   14001be38:	(bad)  
   14001be3a:	(bad)  
   14001be3c:	cli    
   14001be3d:	cli    
   14001be3e:	cli    
   14001be3f:	(bad)  
   14001be40:	cld    
   14001be41:	cld    
   14001be42:	cld    
   14001be43:	dec    eax
   14001be45:	enter  0xffc8,0xf9
   14001be49:	stc    
   14001be4a:	stc    
   14001be4b:	dec    esp
   14001be4d:	int3   
   14001be4e:	int3   
   14001be4f:	(bad)  
   14001be50:	mov    edi,0x7fbfbf
	...
   14001be5d:	add    BYTE PTR [rax],al
   14001be5f:	add    BYTE PTR [rdi-0x46004849],dh
   14001be65:	mov    ecx,0xbbbbffb9
   14001be6a:	mov    ebx,0xbdbdbdff
   14001be6f:	(bad)  
   14001be70:	mov    edi,0xc1ffbfbf
   14001be75:	rol    ecx,0xff
   14001be78:	ret    
   14001be79:	ret    
   14001be7a:	ret    
   14001be7b:	inc    ebp
   14001be7d:	(bad)
   14001be80:	enter  0xc8c8,0xff
   14001be84:	leave  
   14001be85:	leave  
   14001be86:	leave  
   14001be87:	inc    edi
   14001be89:	mov    edi,0xc4c4c4ff
   14001be8f:	jg     0x14001be91
	...
   14001be9d:	add    BYTE PTR [rax],al
   14001be9f:	add    BYTE PTR [rsi+0x7],bh
   14001bea2:	lods   al,BYTE PTR ds:[rsi]
   14001bea3:	adc    BYTE PTR [r15],al
   14001bea6:	lods   al,BYTE PTR ds:[rsi]
   14001bea7:	add    BYTE PTR [r11],al
   14001beaa:	lods   al,BYTE PTR ds:[rsi]
   14001beab:	add    BYTE PTR [r11],al
   14001beae:	lods   al,BYTE PTR ds:[rsi]
   14001beaf:	add    BYTE PTR [r8],al
   14001beb2:	lods   al,BYTE PTR ds:[rsi]
   14001beb3:	add    BYTE PTR [r8],al
   14001beb6:	lods   al,BYTE PTR ds:[rsi]
   14001beb7:	add    BYTE PTR [r8],al
   14001beba:	lods   al,BYTE PTR ds:[rsi]
   14001bebb:	add    BYTE PTR [r8],al
   14001bebe:	lods   al,BYTE PTR ds:[rsi]
   14001bebf:	add    BYTE PTR [r8],al
   14001bec2:	lods   al,BYTE PTR ds:[rsi]
   14001bec3:	add    BYTE PTR [r8],al
   14001bec6:	lods   al,BYTE PTR ds:[rsi]
   14001bec7:	add    BYTE PTR [r8],al
   14001beca:	lods   al,BYTE PTR ds:[rsi]
   14001becb:	add    BYTE PTR [r11],al
   14001bece:	lods   al,BYTE PTR ds:[rsi]
   14001becf:	add    BYTE PTR [r11],al
   14001bed2:	lods   al,BYTE PTR ds:[rsi]
   14001bed3:	add    BYTE PTR [r15],al
   14001bed6:	lods   al,BYTE PTR ds:[rsi]
   14001bed7:	add    BYTE PTR [r15],al
   14001beda:	lods   al,BYTE PTR ds:[rsi]
   14001bedb:	add    BYTE PTR [r15],cl
   14001bede:	lods   al,BYTE PTR ds:[rsi]
   14001bedf:	add    BYTE PTR [r8],al
   14001bee2:	add    DWORD PTR [rax],eax
   14001bee4:	(bad)  
   14001bee5:	add    BYTE PTR [rax],ah
   14001bee7:	and    BYTE PTR [rax],dl
   14001bee9:	add    BYTE PTR [rcx],al
   14001beeb:	add    BYTE PTR [rax+rax*1],al
   14001beee:	call   0x14101bef5
   14001bef3:	add    BYTE PTR [rax],dl
   14001bef5:	adc    BYTE PTR [rax],dl
   14001bef7:	add    BYTE PTR [rcx],al
   14001bef9:	add    BYTE PTR [rax+rax*1],al
   14001befc:	sub    BYTE PTR [rcx],al
   14001befe:	add    BYTE PTR [rax],al
   14001bf00:	add    al,BYTE PTR [rax]
   14001bf02:	and    BYTE PTR [rax],ah
   14001bf04:	add    BYTE PTR [rax],al
   14001bf06:	add    DWORD PTR [rax],eax
   14001bf08:	or     BYTE PTR [rax],al
   14001bf0a:	test   al,0x8
   14001bf0c:	add    BYTE PTR [rax],al
   14001bf0e:	add    eax,DWORD PTR [rax]
   14001bf10:	adc    BYTE PTR [rax],dl
   14001bf12:	add    BYTE PTR [rax],al
   14001bf14:	add    DWORD PTR [rax],eax
   14001bf16:	or     BYTE PTR [rax],al
   14001bf18:	push   0x4000005
   14001bf1d:	add    BYTE PTR [rax],dh
   14001bf1f:	xor    BYTE PTR [rax],al
   14001bf21:	add    BYTE PTR [rcx],al
   14001bf23:	add    BYTE PTR [rax],ah
   14001bf25:	add    BYTE PTR [rax+0x5000025],ch
   14001bf2b:	add    BYTE PTR [rax],ah
   14001bf2d:	and    BYTE PTR [rax],al
   14001bf2f:	add    BYTE PTR [rcx],al
   14001bf31:	add    BYTE PTR [rax],ah
   14001bf33:	add    BYTE PTR [rax+0x6000010],ch
   14001bf39:	add    BYTE PTR [rax],dl
   14001bf3b:	adc    BYTE PTR [rax],al
   14001bf3d:	add    BYTE PTR [rcx],al
   14001bf3f:	add    BYTE PTR [rax],ah
   14001bf41:	add    BYTE PTR [rax+0x4],ch
   14001bf44:	add    BYTE PTR [rax],al
   14001bf46:	(bad)  
   14001bf47:	add    BYTE PTR [rcx+riz*2],bh
   14001bf4a:	jae    0x14001bfbf
   14001bf4c:	gs ins DWORD PTR es:[rdi],dx
   14001bf4e:	(bad)  
   14001bf4f:	ins    BYTE PTR es:[rdi],dx
   14001bf50:	jns    0x14001bf72
   14001bf52:	js     0x14001bfc1
   14001bf54:	ins    BYTE PTR es:[rdi],dx
   14001bf55:	outs   dx,BYTE PTR ds:[rsi]
   14001bf56:	jae    0x14001bf95
   14001bf58:	and    dh,BYTE PTR [rbp+0x72]
   14001bf5b:	outs   dx,BYTE PTR ds:[rsi]
   14001bf5c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001bf5f:	push   0x73616d65
   14001bf64:	sub    eax,0x7263696d
   14001bf69:	outs   dx,DWORD PTR ds:[rsi]
   14001bf6a:	jae    0x14001bfdb
   14001bf6c:	data16 je 0x14001bf9c
   14001bf6f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001bf72:	cmp    ah,BYTE PTR [rcx+0x73]
   14001bf75:	ins    DWORD PTR es:[rdi],dx
   14001bf76:	cs jbe 0x14001bfaa
   14001bf79:	and    ah,BYTE PTR [rax]
   14001bf7b:	ins    DWORD PTR es:[rdi],dx
   14001bf7c:	(bad)  
   14001bf7d:	outs   dx,BYTE PTR ds:[rsi]
   14001bf7e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001bf85:	jb     0x14001bffa
   14001bf87:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001bf8e:	xor    BYTE PTR [rdx],ah
   14001bf90:	ds or  eax,0x3c20200a
   14001bf96:	je     0x14001c00a
   14001bf98:	jne    0x14001c00d
   14001bf9a:	je     0x14001bfe5
   14001bf9c:	outs   dx,BYTE PTR ds:[rsi]
   14001bf9d:	outs   dx,WORD PTR ds:[rsi]
   14001bf9f:	and    BYTE PTR [rax+0x6d],bh
   14001bfa2:	ins    BYTE PTR es:[rdi],dx
   14001bfa3:	outs   dx,BYTE PTR ds:[rsi]
   14001bfa4:	jae    0x14001bfe3
   14001bfa6:	and    dh,BYTE PTR [rbp+0x72]
   14001bfa9:	outs   dx,BYTE PTR ds:[rsi]
   14001bfaa:	cmp    dh,BYTE PTR [rbx+0x63]
   14001bfad:	push   0x73616d65
   14001bfb2:	sub    eax,0x7263696d
   14001bfb7:	outs   dx,DWORD PTR ds:[rsi]
   14001bfb8:	jae    0x14001c029
   14001bfba:	data16 je 0x14001bfea
   14001bfbd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001bfc0:	cmp    ah,BYTE PTR [rcx+0x73]
   14001bfc3:	ins    DWORD PTR es:[rdi],dx
   14001bfc4:	cs jbe 0x14001bffa
   14001bfc7:	and    bh,BYTE PTR [rsi]
   14001bfc9:	or     eax,0x2020200a
   14001bfce:	and    BYTE PTR [rbx+rsi*2],bh
   14001bfd1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001bfd5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001bfdd:	and    BYTE PTR [rax],ah
   14001bfdf:	and    BYTE PTR [rax],ah
   14001bfe1:	cmp    al,0x72
   14001bfe3:	gs jno 0x14001c05b
   14001bfe6:	gs jae 0x14001c05d
   14001bfe9:	gs fs push rax
   14001bfec:	jb     0x14001c057
   14001bfee:	jbe    0x14001c059
   14001bff0:	ins    BYTE PTR es:[rdi],dx
   14001bff1:	gs addr32 gs jae 0x14001c034
   14001bff6:	or     eax,0x2020200a
   14001bffb:	and    BYTE PTR [rax],ah
   14001bffd:	and    BYTE PTR [rax],ah
   14001bfff:	and    BYTE PTR [rdx+rsi*2],bh
   14001c002:	gs jno 0x14001c07a
   14001c005:	gs jae 0x14001c07c
   14001c008:	gs fs rex.RB js 0x14001c072
   14001c00d:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c010:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c017:	ins    BYTE PTR es:[rdi],dx
   14001c018:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001c01c:	gs ins BYTE PTR es:[rdi],dx
   14001c01e:	cmp    eax,0x49736122
   14001c023:	outs   dx,BYTE PTR ds:[rsi]
   14001c024:	jbe    0x14001c095
   14001c026:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001c02a:	and    BYTE PTR [rbp+0x69],dh
   14001c02d:	movsxd esp,DWORD PTR [r11+0x65]
   14001c031:	jae    0x14001c0a6
   14001c033:	cmp    eax,0x6c616622
   14001c038:	jae    0x14001c09f
   14001c03a:	and    bh,BYTE PTR [rsi]
   14001c03c:	cmp    al,0x2f
   14001c03e:	jb     0x14001c0a5
   14001c040:	jno    0x14001c0b7
   14001c042:	gs jae 0x14001c0b9
   14001c045:	gs fs rex.RB js 0x14001c0af
   14001c04a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c04d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c054:	ins    BYTE PTR es:[rdi],dx
   14001c055:	ds or  eax,0x2020200a
   14001c05b:	and    BYTE PTR [rax],ah
   14001c05d:	and    BYTE PTR [rdi+rbp*1],bh
   14001c060:	jb     0x14001c0c7
   14001c062:	jno    0x14001c0d9
   14001c064:	gs jae 0x14001c0db
   14001c067:	gs fs push rax
   14001c06a:	jb     0x14001c0d5
   14001c06c:	jbe    0x14001c0d7
   14001c06e:	ins    BYTE PTR es:[rdi],dx
   14001c06f:	gs addr32 gs jae 0x14001c0b2
   14001c074:	or     eax,0x2020200a
   14001c079:	and    BYTE PTR [rdi+rbp*1],bh
   14001c07c:	jae    0x14001c0e3
   14001c07e:	movsxd esi,DWORD PTR [rbp+0x72]
   14001c081:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001c089:	cmp    al,0x2f
   14001c08b:	je     0x14001c0ff
   14001c08d:	jne    0x14001c102
   14001c08f:	je     0x14001c0da
   14001c091:	outs   dx,BYTE PTR ds:[rsi]
   14001c092:	outs   dx,WORD PTR ds:[rsi]
   14001c094:	ds or  eax,0x612f3c0a
   14001c09a:	jae    0x14001c10f
   14001c09c:	gs ins DWORD PTR es:[rdi],dx
   14001c09e:	(bad)  
   14001c09f:	ins    BYTE PTR es:[rdi],dx
   14001c0a0:	jns    0x14001c0e0
   14001c0a2:	push   rax
   14001c0a3:	rex.B

Disassembly of section .reloc:

000000014001d000 <.reloc>:
   14001d000:	add    al,ah
   14001d002:	add    BYTE PTR [rax],al
   14001d004:	add    BYTE PTR [rax],r8b
   14001d007:	add    BYTE PTR [rax-0x3f5d475e],dh
   14001d00d:	movabs ds:0xa358a2e8a2e0a2c8,al
   14001d016:	(bad)  
   14001d017:	movabs ds:0xaca8ac98ac88ac78,eax
   14001d020:	mov    eax,0xd8acc8ac
   14001d025:	lods   al,BYTE PTR ds:[rsi]
   14001d026:	call   0x148aec8d7
   14001d02b:	lods   eax,DWORD PTR ds:[rsi]
   14001d02c:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   14001d032:	lods   rax,QWORD PTR ds:[rsi]
   14001d034:	pop    rax
   14001d035:	lods   eax,DWORD PTR ds:[rsi]
   14001d036:	push   0xffffffff88ad78ad
   14001d03b:	lods   eax,DWORD PTR ds:[rsi]
   14001d03c:	cwde   
   14001d03d:	lods   eax,DWORD PTR ds:[rsi]
   14001d03e:	test   al,0xad
   14001d040:	mov    eax,0xadc8ad
   14001d045:	and    BYTE PTR [rcx],al
   14001d047:	add    al,ch
   14001d049:	add    BYTE PTR [rax],al
   14001d04b:	add    BYTE PTR [rax],ah
   14001d04d:	movabs al,ds:0xa7b0a7a8a7a0a030
   14001d056:	mov    eax,0xc8a7c0a7
   14001d05b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d05c:	shl    BYTE PTR [rdi-0x581f5828],1
   14001d062:	call   0x138aac10e
   14001d067:	test   al,0x70
   14001d069:	test   eax,0xa980a978
   14001d06e:	mov    BYTE PTR [rcx-0x56675670],ch
   14001d074:	movabs al,ds:0xc0a9b8a9b0a9a8a9
   14001d07d:	test   eax,0xa9d0a9c8
   14001d082:	fsubr  DWORD PTR [rcx-0x56175620]
   14001d088:	lock test eax,0xaa00a9f8
   14001d08e:	or     BYTE PTR [rdx-0x55e755f0],ch
   14001d094:	and    BYTE PTR [rdx-0x55cf55d8],ch
   14001d09a:	cmp    BYTE PTR [rdx-0x55b755c0],ch
   14001d0a0:	push   rax
   14001d0a1:	stos   BYTE PTR es:[rdi],al
   14001d0a2:	pop    rax
   14001d0a3:	stos   BYTE PTR es:[rdi],al
   14001d0a4:	(bad)  
   14001d0a5:	stos   BYTE PTR es:[rdi],al
   14001d0a6:	push   0x78aa70aa
   14001d0ab:	stos   BYTE PTR es:[rdi],al
   14001d0ac:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14001d0b3:	stos   BYTE PTR es:[rdi],al
   14001d0b4:	movabs al,ds:0xc0aab8aab0aaa8aa
   14001d0bd:	stos   BYTE PTR es:[rdi],al
   14001d0be:	fsubr  DWORD PTR [rdx-0x55175520]
   14001d0c4:	lock stos BYTE PTR es:[rdi],al
   14001d0c6:	clc    
   14001d0c7:	stos   BYTE PTR es:[rdi],al
   14001d0c8:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14001d0ce:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14001d0d4:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14001d0da:	stos   QWORD PTR es:[rdi],rax
   14001d0dc:	push   rax
   14001d0dd:	stos   DWORD PTR es:[rdi],eax
   14001d0de:	pop    rax
   14001d0df:	stos   DWORD PTR es:[rdi],eax
   14001d0e0:	(bad)  
   14001d0e1:	stos   DWORD PTR es:[rdi],eax
   14001d0e2:	push   0x78ab70ab
   14001d0e7:	stos   DWORD PTR es:[rdi],eax
   14001d0e8:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14001d0ef:	stos   DWORD PTR es:[rdi],eax
   14001d0f0:	movabs al,ds:0xc0abb8abb0aba8ab
   14001d0f9:	stos   DWORD PTR es:[rdi],eax
   14001d0fa:	enter  0xd0ab,0xab
   14001d0fe:	fsubr  DWORD PTR [rbx-0x54175420]
   14001d104:	lock stos DWORD PTR es:[rdi],eax
   14001d106:	clc    
   14001d107:	stos   DWORD PTR es:[rdi],eax
   14001d108:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14001d10f:	lods   al,BYTE PTR ds:[rsi]
   14001d110:	and    BYTE PTR [rax+rbp*1-0x47536754],ch
   14001d117:	lods   al,BYTE PTR ds:[rsi]
   14001d118:	fsubr  DWORD PTR [rax+rdi*8+0x58ad18ac]
   14001d11f:	lods   eax,DWORD PTR ds:[rsi]
   14001d120:	jo     0x14001d0cf
   14001d122:	js     0x14001d0d1
   14001d124:	sub    BYTE PTR [rbp-0x526f5278],0x0
   14001d12b:	add    BYTE PTR [rax],al
   14001d12d:	xor    BYTE PTR [rcx],al
   14001d12f:	add    BYTE PTR [rax],bh
   14001d131:	add    BYTE PTR [rax],al
   14001d133:	add    al,dl
   14001d135:	movabs eax,ds:0xa2f8a2e8a2d8a2d0
   14001d13e:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14001d144:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14001d14a:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14001d150:	movabs ds:0xa370a368a360a358,rax
   14001d15a:	js     0x14001d0ff
   14001d15c:	and    BYTE PTR [rbx-0x5c6f5c78],0x0
	...
